
af95cc88d1e9ca60ecd64d4c9d40624980e250a067751c65267ab5683c1c6fc2.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a713
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429887
  401084:	mov    ecx,DWORD PTR ds:0x429fd3
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a71b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429fe3
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a71f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429fdf
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a723
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a727
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a72f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a733
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a737
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x915d92fe
  40178d:	fild   QWORD PTR [esi-0x7d]
  401790:	add    DWORD PTR [ebx-0x7ca3107d],0xffffff83
  401797:	sub    ch,BYTE PTR ds:0x3a263e24
  40179d:	and    BYTE PTR [edx+edi*2],ch
  4017a0:	cmp    eax,0x766d7776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1a],ebx
  40183b:	test   ah,al
  40183d:	add    DWORD PTR [ebx-0x370153dd],esp
  401843:	push   cs
  401844:	test   DWORD PTR [ebp+0x76b922],edx
  40184a:	lea    ecx,[edx+0x57]
  40184d:	xor    bl,BYTE PTR [edi+0x19d02f31]
  401853:	mov    WORD PTR [edi],ss
  401855:	mov    ch,0x8c
  401857:	mov    ds:0x5f7534eb,al
  40185c:	sub    edi,DWORD PTR [edx*2-0x5f50dcad]
  401863:	(bad)  
  401864:	fcmovne st,st(1)
  401866:	xchg   ebp,eax
  401867:	adc    DWORD PTR [esp+ebp*2],eax
  40186a:	fs inc edi
  40186c:	add    BYTE PTR [esi+0x1f1991c6],cl
  401872:	int    0x97
  401874:	stos   DWORD PTR es:[edi],eax
  401875:	and    eax,0xf0d9a06a
  40187a:	inc    eax
  40187b:	neg    dh
  40187d:	(bad)  
  40187e:	div    BYTE PTR [ecx+0x7c2ee464]
  401884:	pop    ebx
  401885:	mov    al,0xe1
  401887:	iret   
  401888:	xor    eax,0x5b97c19b
  40188d:	aas    
  40188e:	int3   
  40188f:	xchg   ebp,eax
  401890:	dec    eax
  401891:	(bad)  
  401892:	ins    DWORD PTR es:[edi],dx
  401893:	pop    esi
  401894:	mov    ah,0x1d
  401896:	fsubr  DWORD PTR [ecx+0x521f3e25]
  40189c:	lds    esi,FWORD PTR [edi]
  40189e:	call   0xc99b:0x23cbc663
  4018a5:	mov    bh,0xd5
  4018a7:	xchg   edi,esi
  4018a9:	jno    0x401856
  4018ab:	mov    eax,ds:0x7bea4f22
  4018b0:	push   ebx
  4018b1:	ins    DWORD PTR es:[edi],dx
  4018b2:	fdivr  QWORD PTR [edi+0x16]
  4018b5:	jle    0x401865
  4018b7:	aas    
  4018b8:	aaa    
  4018b9:	fwait
  4018ba:	xor    al,0xd5
  4018bc:	scas   eax,DWORD PTR es:[edi]
  4018bd:	pop    ebx
  4018be:	addr16 test eax,0x4a3731a3
  4018c4:	lock push ecx
  4018c6:	mov    ecx,0xfce9c426
  4018cb:	sti    
  4018cc:	out    0x72,eax
  4018ce:	xor    eax,0x54bc1431
  4018d3:	scas   eax,DWORD PTR es:[edi]
  4018d4:	es xchg esi,eax
  4018d6:	int    0x61
  4018d8:	adc    DWORD PTR [ecx+0x4a86d90],0x1f
  4018df:	mov    ch,BYTE PTR [eax]
  4018e1:	push   edi
  4018e2:	cmp    bl,BYTE PTR [edi-0x4d]
  4018e5:	das    
  4018e6:	gs ds push esi
  4018e9:	adc    al,0x3e
  4018eb:	les    eax,FWORD PTR [ecx+0x41d0a5e7]
  4018f1:	pop    eax
  4018f2:	pop    es
  4018f3:	shr    BYTE PTR [ebx-0x43],0x94
  4018f7:	loope  0x40193d
  4018f9:	dec    edi
  4018fa:	mov    ds:0x74f04035,eax
  4018ff:	stos   BYTE PTR es:[edi],al
  401900:	push   edx
  401901:	push   edx
  401902:	shr    BYTE PTR [esi-0x2d],0x4c
  401906:	push   esp
  401907:	add    ch,BYTE PTR ds:0xa45fce5e
  40190d:	setne  BYTE PTR [ebx]
  401910:	daa    
  401911:	inc    edi
  401912:	cwde   
  401913:	icebp  
  401914:	mov    eax,0x6af8b31b
  401919:	cmc    
  40191a:	or     al,BYTE PTR [ecx-0x4d]
  40191d:	pop    ebp
  40191e:	sub    eax,0x4391ecdd
  401923:	sbb    bl,al
  401925:	test   DWORD PTR [edi+eax*1+0x24],ecx
  401929:	dec    esp
  40192a:	jns    0x40196b
  40192c:	pop    ss
  40192d:	inc    esp
  40192e:	fwait
  40192f:	xlat   BYTE PTR ds:[ebx]
  401930:	in     al,0x91
  401932:	jbe    0x4018b8
  401934:	xchg   edx,eax
  401935:	xlat   BYTE PTR ds:[ebx]
  401936:	jle    0x4018e3
  401938:	xor    bh,BYTE PTR [ebx-0x75]
  40193b:	and    al,0x45
  40193d:	dec    eax
  40193e:	sub    al,0x12
  401940:	mov    eax,0x9827c831
  401945:	nop
  401946:	mov    al,ds:0x24cb082a
  40194b:	pop    esi
  40194c:	xchg   esi,eax
  40194d:	jns    0x4018e2
  40194f:	sbb    ebp,DWORD PTR [esi+0x4c210ce6]
  401955:	push   edi
  401956:	cwde   
  401957:	inc    edi
  401958:	retf   0x4533
  40195b:	cmp    eax,0x885863d2
  401960:	jae    0x4018fc
  401962:	bound  eax,QWORD PTR [edx+0x7a]
  401965:	sub    bl,BYTE PTR [ebx+eax*2+0x5]
  401969:	sub    eax,ecx
  40196b:	push   esp
  40196c:	sub    esi,DWORD PTR [ecx+ecx*8]
  40196f:	mov    bp,0x3142
  401973:	out    0x35,eax
  401975:	and    al,0x8b
  401977:	mov    BYTE PTR [edx+0x38952696],cl
  40197d:	xchg   BYTE PTR [ebx-0x22],ah
  401980:	pop    es
  401981:	dec    ecx
  401982:	shl    DWORD PTR [edx],cl
  401984:	repz mov ebx,0x9160f076
  40198a:	ffree  st(3)
  40198c:	(bad)  
  40198f:	sbb    dh,BYTE PTR [esi-0x2448a7f2]
  401995:	test   eax,0x964f0c09
  40199a:	or     edi,DWORD PTR [edx-0x1b1a3872]
  4019a0:	dec    esp
  4019a1:	mov    edx,0xac16a2d6
  4019a6:	push   esp
  4019a7:	mov    ds,ecx
  4019a9:	jg     0x40198a
  4019ab:	mov    bh,0xef
  4019ad:	mov    dh,0xc9
  4019af:	imul   ecx,edi,0x69b952b8
  4019b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019b6:	jecxz  0x401983
  4019b8:	cmc    
  4019b9:	(bad)  
  4019ba:	pop    ds
  4019bb:	cmp    esp,DWORD PTR [edx+0x2e296daf]
  4019c1:	pop    ss
  4019c2:	sbb    dl,BYTE PTR [ebx+0x47e47ed3]
  4019c8:	and    eax,0x9dda288a
  4019cd:	lds    edx,FWORD PTR ss:[edx]
  4019d0:	scas   eax,DWORD PTR es:[edi]
  4019d1:	mov    al,ds:0x7b1e722
  4019d6:	scas   eax,DWORD PTR es:[edi]
  4019d7:	xor    eax,DWORD PTR [edi+edx*1-0x198bba6f]
  4019de:	and    al,0xc8
  4019e0:	mov    ch,0xda
  4019e2:	aaa    
  4019e3:	jo     0x4019ca
  4019e5:	test   ecx,ebp
  4019e7:	mov    esp,0x2ad09ab1
  4019ec:	fdivr  QWORD PTR [edi+0x3ea33b0e]
  4019f2:	mov    bl,0xfc
  4019f4:	and    BYTE PTR ds:0x354516b7,dh
  4019fa:	push   eax
  4019fb:	push   edi
  4019fc:	(bad)  
  4019fd:	sbb    al,0xb6
  4019ff:	cmc    
  401a00:	addr16 icebp 
  401a02:	(bad)  
  401a03:	in     eax,dx
  401a04:	mov    edx,gs
  401a06:	aad    0xc
  401a08:	scas   eax,DWORD PTR es:[edi]
  401a09:	bound  ebp,QWORD PTR [ebx-0x73]
  401a0c:	js     0x401a88
  401a0e:	push   edi
  401a0f:	fwait
  401a10:	push   esp
  401a11:	aam    0x67
  401a13:	inc    edx
  401a14:	les    esi,FWORD PTR [ebp+0x6e39b25b]
  401a1a:	pop    edx
  401a1b:	aas    
  401a1c:	jge    0x4019a6
  401a1e:	adc    DWORD PTR [edx-0x3b],0x87b9e215
  401a25:	int3   
  401a26:	push   ebp
  401a27:	js     0x401a12
  401a29:	clc    
  401a2a:	jmp    0x401a52
  401a2c:	pop    edx
  401a2d:	leave  
  401a2e:	cdq    
  401a2f:	popa   
  401a30:	dec    ebx
  401a31:	pop    ds
  401a32:	and    DWORD PTR [ecx+0x8e1f6fa],edx
  401a38:	adc    bh,BYTE PTR [esi]
  401a3a:	stos   BYTE PTR es:[edi],al
  401a3b:	sti    
  401a3c:	xor    eax,0xffffffd4
  401a3f:	test   al,0x15
  401a41:	std    
  401a42:	sbb    eax,0xa7a8c062
  401a47:	sbb    al,0x76
  401a49:	test   eax,0xe63e09e0
  401a4e:	adc    esi,ebx
  401a50:	xor    ecx,esi
  401a52:	dec    ebx
  401a53:	push   ebp
  401a54:	push   esi
  401a55:	sub    BYTE PTR ds:0x2f7b37d0,ch
  401a5b:	mov    bh,BYTE PTR [edi+0x1]
  401a5e:	and    ah,BYTE PTR [edi+eax*8+0xee32481]
  401a65:	ss mov al,0xc2
  401a68:	jp     0x401acd
  401a6a:	mov    esp,0xe5de985e
  401a6f:	and    eax,0xdb1a1fa7
  401a74:	adc    DWORD PTR [ebp-0x30],0xffffffc6
  401a78:	dec    edi
  401a79:	sub    eax,0xf4917341
  401a7e:	js     0x401a54
  401a80:	les    eax,FWORD PTR [ebx]
  401a82:	out    dx,eax
  401a83:	enter  0xe19f,0x40
  401a87:	add    al,0x4b
  401a89:	repz xchg ebx,eax
  401a8b:	icebp  
  401a8c:	mov    gs,WORD PTR [esi+0xf]
  401a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a90:	xchg   ebp,eax
  401a91:	aas    
  401a92:	shr    BYTE PTR [eax-0x2b],cl
  401a95:	jmp    0x401a1b
  401a97:	and    DWORD PTR [edi-0x3ae4cc69],ecx
  401a9d:	pop    edi
  401a9e:	xchg   esi,eax
  401a9f:	jl     0x401ade
  401aa1:	and    al,0xb1
  401aa4:	cmp    bh,BYTE PTR [ebp-0x51]
  401aa7:	test   eax,0x83a1d7da
  401aac:	dec    ebp
  401aad:	aas    
  401aae:	mov    esp,0x25aa4222
  401ab3:	inc    ebx
  401ab4:	les    edx,FWORD PTR [ebp+0x35]
  401ab7:	mov    edi,0x95c01ff8
  401abc:	cmp    DWORD PTR [ebp+0x15],esi
  401abf:	daa    
  401ac0:	push   ebx
  401ac1:	jns    0x401ab4
  401ac3:	push   ecx
  401ac4:	pusha  
  401ac5:	push   ds
  401ac6:	xlat   BYTE PTR ds:[ebx]
  401ac7:	ins    DWORD PTR es:[edi],dx
  401ac8:	imul   ebx,DWORD PTR [ebx],0x2272f1ad
  401ace:	cdq    
  401acf:	popa   
  401ad0:	inc    ebx
  401ad1:	xchg   edx,eax
  401ad2:	fadd   QWORD PTR [esi+0x2ad4241e]
  401ad8:	push   0x3e
  401ada:	inc    esi
  401adb:	mov    bl,0x33
  401add:	dec    edx
  401ade:	mov    ?,WORD PTR [ebx+0x45]
  401ae1:	jl     0x401a6b
  401ae3:	inc    ecx
  401ae4:	into   
  401ae5:	and    BYTE PTR [ebx],0xd7
  401ae8:	aas    
  401ae9:	cmc    
  401aea:	xor    edi,DWORD PTR [ebx]
  401aec:	mov    BYTE PTR [eax],dl
  401aee:	mov    BYTE PTR [edi+0x7],0xa9
  401af2:	dec    ebx
  401af3:	jmp    FWORD PTR [esi+0x7a7f9667]
  401af9:	scas   al,BYTE PTR es:[edi]
  401afa:	push   cs
  401afb:	bound  edx,QWORD PTR [edx+0x6a]
  401afe:	xchg   esp,eax
  401aff:	fdivrp st(6),st
  401b01:	loopne 0x401b6a
  401b03:	lods   al,BYTE PTR ds:[esi]
  401b04:	adc    bh,BYTE PTR [esi-0x343354af]
  401b0a:	dec    ebp
  401b0b:	cmp    eax,DWORD PTR [edx]
  401b0d:	mov    edi,0xf43d4de1
  401b12:	pop    esp
  401b13:	(bad)  [edx]
  401b15:	jae    0x401b55
  401b17:	or     ebx,ecx
  401b19:	cmp    cl,BYTE PTR [edx-0x1c]
  401b1c:	aaa    
  401b1d:	call   0xf864:0x2e179a8c
  401b24:	sar    DWORD PTR [edi-0x62],1
  401b27:	scas   eax,DWORD PTR es:[edi]
  401b28:	arpl   WORD PTR [ebp-0x58a1d60b],sp
  401b2e:	bnd ja 0x401b12
  401b31:	ins    DWORD PTR es:[edi],dx
  401b32:	push   0xffffffaa
  401b34:	mov    dl,0x2b
  401b36:	xor    al,0x7
  401b38:	aad    0x3f
  401b3a:	adc    al,0xdf
  401b3c:	mov    ds:0x546f0f19,al
  401b41:	cmp    cl,bl
  401b43:	fld    QWORD PTR [ebp+0x4d]
  401b46:	push   edx
  401b47:	outs   dx,BYTE PTR ds:[esi]
  401b48:	js     0x401adf
  401b4a:	cmc    
  401b4b:	add    al,0x5a
  401b4d:	cli    
  401b4e:	and    eax,0xa036bd08
  401b53:	or     al,0x2e
  401b55:	call   0xb0af:0xc582243b
  401b5c:	fsub   QWORD PTR fs:[eax-0x5faecf48]
  401b63:	mov    ch,0xc3
  401b65:	jl     0x401b1b
  401b67:	sar    DWORD PTR [eax],0x3e
  401b6a:	aaa    
  401b6b:	aas    
  401b6c:	jb     0x401bce
  401b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b6f:	faddp  st(1),st
  401b71:	and    BYTE PTR [eax+0x1f7fb1d5],al
  401b77:	xchg   ebx,eax
  401b78:	mov    al,ds:0xe830097a
  401b7d:	xor    eax,0xe53ec8bf
  401b82:	push   eax
  401b83:	inc    esp
  401b84:	jb     0x401b36
  401b86:	rcr    cl,0x5d
  401b89:	xchg   esp,eax
  401b8a:	retf   
  401b8b:	sub    eax,0x162001ca
  401b90:	cmp    DWORD PTR [ecx-0x4e094bd8],esp
  401b96:	test   al,0x81
  401b98:	or     al,0xf2
  401b9a:	xchg   DWORD PTR [ecx-0x7592c0b],ebx
  401ba0:	adc    BYTE PTR [ebp+0xb],bl
  401ba3:	leave  
  401ba4:	loopne 0x401bc2
  401ba6:	es daa 
  401ba8:	lahf   
  401ba9:	adc    al,0xde
  401bab:	enter  0x358,0xa4
  401baf:	aas    
  401bb0:	test   eax,0x9b2c4ff4
  401bb5:	inc    esi
  401bb6:	inc    edx
  401bb7:	xor    al,0xd2
  401bb9:	lds    ebx,FWORD PTR gs:[ecx-0x59]
  401bbd:	sahf   
  401bbe:	adc    DWORD PTR [esi],esi
  401bc0:	ins    BYTE PTR es:[edi],dx
  401bc1:	cld    
  401bc2:	cmp    BYTE PTR [ecx+edx*8+0x62],dl
  401bc6:	shl    DWORD PTR [esi+0x1bc4ffe5],0x8e
  401bcd:	sbb    eax,ecx
  401bcf:	add    DWORD PTR [edx-0x600676f1],ebx
  401bd5:	cmc    
  401bd6:	sub    al,ah
  401bd8:	nop
  401bd9:	popf   
  401bda:	inc    eax
  401bdb:	mov    ebp,DWORD PTR [esi-0x35a85d64]
  401be1:	loope  0x401b95
  401be3:	cwde   
  401be4:	shr    DWORD PTR [ecx+0x5a],1
  401be7:	adc    BYTE PTR [eax-0x668b70e5],dl
  401bed:	mov    al,ds:0xfcb1888
  401bf2:	arpl   bp,cx
  401bf4:	mov    ah,0x66
  401bf6:	or     eax,DWORD PTR [ebp-0x75441bdd]
  401bfc:	mov    dl,0x95
  401bfe:	out    0x74,eax
  401c00:	mov    esp,0x896d9e28
  401c05:	out    dx,eax
  401c06:	mov    eax,0x20164c14
  401c0b:	data16 xlat BYTE PTR ds:[ebx]
  401c0d:	push   ebp
  401c0e:	pop    edx
  401c0f:	das    
  401c10:	mov    al,0xb7
  401c12:	jne    0x401c5f
  401c14:	out    dx,al
  401c15:	push   ecx
  401c16:	jl     0x401bc8
  401c18:	dec    esp
  401c19:	pop    edx
  401c1a:	jbe    0x401c82
  401c1c:	sub    ch,bh
  401c1e:	enter  0xeb2e,0x17
  401c22:	out    dx,al
  401c23:	push   eax
  401c24:	popf   
  401c25:	retf   0x296a
  401c28:	xchg   esp,eax
  401c29:	mov    ah,0xec
  401c2b:	inc    ecx
  401c2c:	mov    ebx,0xc40d21e7
  401c31:	jle    0x401c2e
  401c33:	pop    edi
  401c34:	sbb    al,0xb3
  401c36:	cli    
  401c37:	mov    edi,DWORD PTR [edi+0x6b8e4d8e]
  401c3d:	dec    edi
  401c3e:	dec    ecx
  401c3f:	and    DWORD PTR [ebp+0x1e27ed52],esi
  401c45:	call   DWORD PTR [edx-0x42]
  401c48:	sbb    DWORD PTR [esi+0x27],0x40
  401c4c:	mov    dl,0x0
  401c4e:	and    al,0x2c
  401c50:	call   0x1b78:0x113d50f1
  401c57:	jmp    FWORD PTR [eax]
  401c59:	ret    0xe3e0
  401c5c:	cdq    
  401c5d:	mov    es,WORD PTR [edi+0xf]
  401c60:	xchg   ebx,eax
  401c61:	push   es
  401c62:	call   0x1f6ed23
  401c67:	fmulp  st(4),st
  401c69:	mov    esi,0xe03a59b0
  401c6e:	stc    
  401c6f:	cld    
  401c70:	sbb    eax,edx
  401c72:	fstp   st(2)
  401c74:	sub    eax,0x65a055b4
  401c79:	cmp    al,0x4d
  401c7b:	dec    eax
  401c7c:	fsub   DWORD PTR [ebx+0x54]
  401c7f:	mov    ebp,0x60fea057
  401c84:	inc    ebx
  401c85:	out    0xd8,eax
  401c87:	mov    cl,BYTE PTR [esi+edi*4-0x7f]
  401c8b:	adc    al,0x18
  401c8d:	or     esp,DWORD PTR [eax-0x4f]
  401c90:	xor    eax,0xa2e5d66a
  401c95:	je     0x401d15
  401c97:	xor    eax,0xdf66095
  401c9c:	fsub   st(2),st
  401c9e:	mov    eax,0x13cb4fd6
  401ca3:	fstp   TBYTE PTR [ebx+0x2c]
  401ca6:	or     ah,BYTE PTR [eax]
  401ca8:	into   
  401ca9:	xor    eax,0xf97731e8
  401cae:	mov    bh,0xd2
  401cb0:	outs   dx,DWORD PTR ds:[esi]
  401cb1:	mov    BYTE PTR [edx],dh
  401cb3:	xchg   esp,eax
  401cb4:	dec    esp
  401cb5:	je     0x401cbd
  401cb7:	clc    
  401cb8:	adc    DWORD PTR [ebp+0x66b8b53c],edx
  401cbe:	xor    cl,BYTE PTR [edi+0x4c]
  401cc1:	mov    dh,BYTE PTR ds:0x8886b0de
  401cc7:	imul   edx,DWORD PTR [edx+esi*8],0x74
  401ccb:	adc    ah,BYTE PTR [esi]
  401ccd:	sahf   
  401cce:	iret   
  401ccf:	repnz mov ah,0x63
  401cd2:	sub    al,0x4e
  401cd4:	pop    edi
  401cd5:	mov    bh,0x76
  401cd7:	in     eax,0xe2
  401cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cda:	test   al,0xf5
  401cdc:	mov    edx,0xf4f4dd83
  401ce1:	enter  0xcaa1,0x18
  401ce5:	pop    eax
  401ce6:	shr    BYTE PTR [edx-0x7d7069ee],1
  401cec:	popf   
  401ced:	jp     0x401ca0
  401cef:	ja     0x401d39
  401cf1:	cmp    esi,DWORD PTR [edx+0x531b016e]
  401cf7:	add    DWORD PTR [esi+0x2937edcd],ecx
  401cfd:	fisub  DWORD PTR [edx]
  401cff:	rol    DWORD PTR [ebx-0x56],0x68
  401d03:	jecxz  0x401d3d
  401d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d06:	add    eax,0x8a097635
  401d0b:	or     al,0xde
  401d0d:	mov    esp,0x1485e126
  401d12:	leave  
  401d13:	in     eax,dx
  401d14:	add    eax,0x39ef00fd
  401d19:	call   0x4400:0xddbef51c
  401d20:	and    dh,BYTE PTR [ebx]
  401d22:	add    al,0x1b
  401d24:	ja     0x401cf0
  401d26:	mov    edi,0xd3cfdbc8
  401d2b:	test   al,0x4f
  401d2d:	inc    ebp
  401d2e:	add    DWORD PTR [ebx+0x53],esp
  401d31:	sbb    bl,ch
  401d33:	dec    eax
  401d34:	retf   
  401d35:	ins    DWORD PTR es:[edi],dx
  401d36:	mov    dl,0x1a
  401d38:	sbb    bh,BYTE PTR ss:[eax]
  401d3b:	dec    ecx
  401d3c:	mov    BYTE PTR [ebp+0x2aec1c01],cl
  401d42:	sub    BYTE PTR [ebp+esi*4+0x7e],ah
  401d46:	in     eax,0xff
  401d48:	fsubr  DWORD PTR [eax-0x54a33b74]
  401d4e:	cmp    DWORD PTR [ebp+0x68],edx
  401d51:	add    ebp,edx
  401d53:	and    DWORD PTR [edx+0x16],edi
  401d56:	std    
  401d57:	fidivr DWORD PTR [edx+0x53]
  401d5a:	les    ebx,FWORD PTR [ebp+0x25805823]
  401d60:	and    DWORD PTR [ecx],0x6c
  401d63:	mov    ss,edi
  401d65:	test   bl,cl
  401d67:	(bad)
  401d6b:	lea    ebx,[ebp-0x7774f8cc]
  401d71:	cs jno 0x401cf5
  401d74:	jmp    esp
  401d76:	hlt    
  401d77:	push   eax
  401d78:	jae    0x401d62
  401d7a:	(bad)  
  401d7b:	mov    al,0xcb
  401d7d:	dec    ecx
  401d7e:	rcr    DWORD PTR [eax],1
  401d80:	pop    esp
  401d81:	fiadd  WORD PTR [edi]
  401d84:	and    eax,0x57457fc6
  401d89:	sub    ch,BYTE PTR [edx-0xe456ff1]
  401d8f:	daa    
  401d90:	gs cmp al,ch
  401d93:	xchg   esi,eax
  401d94:	mov    WORD PTR [ebx],ds
  401d96:	mov    ds:0x5444e7c,al
  401d9b:	sub    BYTE PTR [ebx-0x17],ah
  401d9e:	test   eax,0x83613c88
  401da3:	xor    dh,BYTE PTR [ebx-0x79547441]
  401da9:	stc    
  401daa:	mov    bl,0xdd
  401dac:	loopne 0x401de0
  401dae:	mov    ds:0x681d0370,al
  401db3:	lock fwait
  401db5:	fwait
  401db6:	inc    ebx
  401db7:	jp     0x401e1b
  401db9:	test   eax,0x93129148
  401dbe:	sti    
  401dbf:	sub    esi,esi
  401dc1:	stos   DWORD PTR es:[edi],eax
  401dc2:	ja     0x401d60
  401dc4:	les    eax,FWORD PTR [ecx]
  401dc6:	and    esp,ebp
  401dc8:	mov    eax,DWORD PTR es:[edx-0x2f]
  401dcc:	push   edx
  401dcd:	lds    esp,FWORD PTR [edi+edx*1-0x5d938f34]
  401dd4:	nop
  401dd5:	adc    al,0x17
  401dd7:	mov    edi,0x413dc729
  401ddc:	out    0x5b,eax
  401dde:	sub    DWORD PTR [edx],esi
  401de0:	xchg   esi,eax
  401de1:	mov    esp,DWORD PTR [edi-0x6879e417]
  401de7:	(bad)  [ecx+eax*8+0x40]
  401deb:	sbb    bh,BYTE PTR [esi]
  401ded:	mov    dh,0x5b
  401def:	jp     0x401db5
  401df1:	and    BYTE PTR [eax-0x2f],bh
  401df4:	aam    0xfc
  401df6:	test   al,0x30
  401df8:	push   esp
  401df9:	pop    edi
  401dfa:	add    ch,BYTE PTR [esi+0x59]
  401dfd:	lods   al,BYTE PTR ds:[esi]
  401dfe:	pop    ebx
  401dff:	je     0x401dc6
  401e01:	or     edx,ebp
  401e03:	and    eax,0xc2ed1528
  401e08:	cld    
  401e09:	rcr    DWORD PTR [edi],0x4e
  401e0c:	mov    ds:0x96c877ec,al
  401e11:	adc    bh,dh
  401e13:	inc    esp
  401e14:	cmp    BYTE PTR [esi+0x28868bd3],0x75
  401e1b:	add    BYTE PTR [ebx-0x196f011],dl
  401e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e22:	dec    bh
  401e24:	sbb    cl,dh
  401e26:	xor    ah,al
  401e28:	jg     0x401e08
  401e2a:	shl    eax,cl
  401e2c:	mov    ecx,0xad70a2d4
  401e31:	test   BYTE PTR [eax],0x2b
  401e34:	lock inc edx
  401e36:	jmp    0xbf223f31
  401e3b:	loop   0x401e02
  401e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e3e:	dec    ebx
  401e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e40:	(bad)  
  401e41:	iret   
  401e42:	jmp    0x276a5c28
  401e47:	and    al,0x98
  401e49:	(bad)
  401e4c:	(bad)  
  401e4d:	es clc 
  401e4f:	fst    QWORD PTR [ecx]
  401e51:	ror    DWORD PTR [edx-0x2c02d7bc],1
  401e57:	mov    ecx,0xa125c27e
  401e5c:	aam    0x52
  401e5e:	popa   
  401e5f:	je     0x401e56
  401e61:	mov    WORD PTR [esi+0x76],?
  401e64:	out    dx,eax
  401e65:	mov    dh,0x72
  401e67:	test   BYTE PTR [esi+0x13de0603],dh
  401e6d:	sbb    BYTE PTR [ebp+0x5c],bh
  401e70:	inc    edi
  401e71:	out    0x9a,eax
  401e73:	pushf  
  401e74:	jle    0x401ea3
  401e76:	pop    esi
  401e77:	and    DWORD PTR [esi],ebx
  401e79:	pop    eax
  401e7a:	xchg   BYTE PTR [ebx],bh
  401e7c:	out    dx,eax
  401e7d:	and    DWORD PTR [ebp+eax*1-0x552c5461],edi
  401e84:	or     BYTE PTR [si-0x22],bh
  401e88:	jp     0x401eab
  401e8a:	lds    eax,FWORD PTR [edx]
  401e8c:	xlat   BYTE PTR ds:[ebx]
  401e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8e:	pushf  
  401e8f:	xchg   ebp,eax
  401e90:	(bad)  
  401e91:	(bad)  
  401e92:	push   0x27387755
  401e97:	dec    edx
  401e98:	out    dx,al
  401e99:	retf   
  401e9a:	cmp    cl,BYTE PTR ds:0x9b528552
  401ea0:	test   esp,ebx
  401ea2:	es (bad) 
  401ea4:	idiv   BYTE PTR [ecx-0xc32212f]
  401eaa:	cmp    eax,0x2428a99a
  401eaf:	mov    ?,WORD PTR [eax-0xe]
  401eb2:	rol    ecx,cl
  401eb4:	repz dec esp
  401eb6:	(bad)  
  401eb7:	(bad)  
  401eb8:	cmc    
  401eb9:	clc    
  401eba:	lea    eax,[ebp+0x1c8ccd5b]
  401ec0:	pushf  
  401ec1:	sub    eax,0xea636cc4
  401ec6:	ss int3 
  401ec8:	sbb    dl,BYTE PTR [ecx+eiz*2]
  401ecb:	mov    al,0x8
  401ecd:	mov    ebx,0x9417e212
  401ed2:	jg     0x401f50
  401ed4:	pop    ds
  401ed5:	dec    ecx
  401ed6:	nop
  401ed7:	or     eax,0x2125d560
  401edc:	or     BYTE PTR [ebx],al
  401ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401edf:	pop    es
  401ee0:	pop    ebp
  401ee1:	adc    ah,BYTE PTR [esi+0x33b59b25]
  401ee7:	sar    DWORD PTR [esi+0x4c],cl
  401eea:	xchg   DWORD PTR [edx-0x5a7559ac],esi
  401ef0:	fmul   st(6),st
  401ef2:	xor    esp,DWORD PTR [esi-0x4]
  401ef5:	ins    BYTE PTR es:[edi],dx
  401ef6:	call   0xfa19:0x32b5ad99
  401efd:	and    ch,BYTE PTR [ecx]
  401eff:	inc    esp
  401f00:	lock adc DWORD PTR es:[eax],0xffffffe2
  401f05:	leave  
  401f06:	jae    0x401f13
  401f08:	(bad)  
  401f09:	mov    bl,0xf7
  401f0b:	lahf   
  401f0c:	dec    esi
  401f0d:	inc    edi
  401f0e:	jmp    0x4e03:0x5f98c4cc
  401f15:	push   edi
  401f16:	ret    
  401f17:	call   0x6e2e:0x75dca630
  401f1e:	cmp    eax,0xaa58098d
  401f23:	xchg   edx,eax
  401f25:	aas    
  401f26:	not    DWORD PTR [eax-0x27]
  401f29:	mov    dl,0x80
  401f2b:	add    al,0x8b
  401f2d:	dec    ecx
  401f2e:	adc    al,0xd6
  401f30:	push   edx
  401f31:	repnz ins BYTE PTR es:[edi],dx
  401f33:	(bad)  
  401f34:	ficomp WORD PTR [edx+ebp*4-0x3f89169a]
  401f3b:	out    dx,eax
  401f3c:	(bad)  
  401f3d:	mov    esp,cr5
  401f40:	jge    0x401f66
  401f42:	sbb    eax,0xc1887173
  401f47:	or     ch,BYTE PTR [ebx+0x46]
  401f4a:	xor    al,BYTE PTR [ebp+edx*2+0x56]
  401f4e:	cld    
  401f4f:	es sbb eax,0x14a83e33
  401f55:	adc    eax,DWORD PTR [eax+0x2]
  401f58:	dec    edi
  401f59:	enter  0xd38e,0xcc
  401f5d:	xor    DWORD PTR [eax+0x18],esp
  401f60:	ja     0x401fb5
  401f62:	xor    BYTE PTR [ecx],ah
  401f64:	push   cs
  401f65:	lds    ebx,FWORD PTR [ecx+0x1d]
  401f68:	hlt    
  401f69:	test   eax,0xb190b2f3
  401f6e:	loopne 0x401fe1
  401f70:	imul   BYTE PTR [ecx+0x5c]
  401f73:	mov    edi,DWORD PTR ds:0x2e8ea94
  401f79:	mov    dh,0x0
  401f7b:	pop    edx
  401f7c:	arpl   WORD PTR [ebx+0x5f],sp
  401f7f:	xchg   esp,eax
  401f80:	lock xchg DWORD PTR [edi+eiz*1+0x35],ebp
  401f85:	pop    edx
  401f86:	and    al,0x77
  401f88:	jmp    0x1e34:0xdf4903ca
  401f8f:	popf   
  401f90:	scas   al,BYTE PTR es:[edi]
  401f91:	fiadd  DWORD PTR [edx]
  401f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f94:	jl     0x401ffb
  401f96:	push   edi
  401f97:	ret    
  401f98:	out    dx,eax
  401f99:	ds inc edi
  401f9b:	dec    ecx
  401f9c:	cld    
  401f9d:	pop    ebp
  401f9e:	fdiv   QWORD PTR [edi]
  401fa0:	mov    al,ds:0x8d0e4cf2
  401fa5:	xchg   edx,eax
  401fa6:	and    eax,0x6699988
  401fab:	mov    eax,0x337ff293
  401fb0:	call   0x239afdb6
  401fb5:	dec    esp
  401fb6:	push   cs
  401fb7:	test   bh,0x40
  401fba:	add    esp,0x18da790f
  401fc0:	out    0x16,eax
  401fc2:	push   0xb6d62537
  401fc7:	mov    al,0x95
  401fc9:	fcomp  DWORD PTR [ebp+0xd7b48aa]
  401fcf:	jb     0x401ffe
  401fd1:	pop    ss
  401fd2:	ss inc edi
  401fd4:	sbb    BYTE PTR [edx-0x271af784],bh
  401fda:	dec    edi
  401fdb:	inc    edx
  401fdc:	or     DWORD PTR [edx+0x7e62d041],esp
  401fe2:	ins    DWORD PTR es:[edi],dx
  401fe3:	aas    
  401fe4:	aad    0x30
  401fe6:	(bad)  
  401fe7:	out    0x26,eax
  401fe9:	mov    esi,edi
  401feb:	(bad)  
  401fec:	and    al,0xb4
  401fee:	and    dh,BYTE PTR [ecx-0x180bf747]
  401ff4:	inc    ecx
  401ff5:	xchg   ecx,eax
  401ff6:	add    dl,BYTE PTR [eax+0x49]
  401ff9:	jmp    0x93b7:0x6c6011ac
  402000:	mov    BYTE PTR [ebx+esi*4+0x2c1b790c],bh
  402007:	fild   QWORD PTR [ebp+0xeed0471]
  40200d:	push   ebx
  40200e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40200f:	push   cs
  402010:	ret    
  402011:	sar    bh,cl
  402013:	mov    eax,0x582b738d
  402018:	repz dec esp
  40201a:	and    bh,BYTE PTR [ebx-0x1f]
  40201d:	lea    esi,[esi+0x1b9e55eb]
  402023:	dec    esi
  402024:	jbe    0x402007
  402026:	inc    edx
  402027:	ins    BYTE PTR es:[edi],dx
  402028:	xchg   BYTE PTR [edi+0x30a8973f],bl
  40202e:	pusha  
  40202f:	pop    eax
  402030:	loopne 0x402098
  402032:	ins    BYTE PTR es:[edi],dx
  402033:	cld    
  402034:	repnz (bad) 
  402036:	mov    esi,0x91b39495
  40203b:	add    DWORD PTR [ecx],ecx
  40203d:	mov    esi,0x2faedcaa
  402042:	mov    esp,0x1160edfa
  402047:	sti    
  402048:	fst    st(4)
  40204a:	or     BYTE PTR [edx],al
  40204c:	nop
  40204d:	jmp    0x13bb38eb
  402052:	adc    esi,esi
  402054:	es ja  0x4020ad
  402057:	pop    ebx
  402058:	icebp  
  402059:	push   ebp
  40205a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40205b:	addr16 lock jp 0x402009
  40205f:	test   eax,0x4303c1e5
  402064:	nop
  402065:	xchg   esi,eax
  402066:	push   esp
  402067:	dec    edx
  402068:	cmp    DWORD PTR [esi+0x37e5bd7e],esi
  40206e:	(bad)  
  40206f:	mov    ebp,0xe79fcc2f
  402074:	mov    al,ds:0xae87ffcf
  402079:	mov    ah,0x0
  40207b:	into   
  40207c:	scas   al,BYTE PTR es:[edi]
  40207d:	rcr    DWORD PTR [eax+0x2e],cl
  402080:	pop    ebx
  402081:	inc    esp
  402082:	sub    edx,DWORD PTR [ebx-0x54]
  402085:	jb     0x4020af
  402087:	test   eax,0xccc5b8a8
  40208c:	push   ecx
  40208d:	push   esi
  40208e:	jmp    0x402082
  402090:	or     esp,DWORD PTR [ebx+0x4c]
  402093:	stos   DWORD PTR es:[edi],eax
  402094:	mov    dl,0xbf
  402096:	mov    dh,BYTE PTR [edi]
  402098:	xchg   edx,eax
  402099:	test   DWORD PTR [edi-0xb6adcf4],esp
  40209f:	mov    dl,0x5f
  4020a1:	add    eax,0xa389073a
  4020a6:	xor    BYTE PTR [edi+0x231c9d48],cl
  4020ac:	in     eax,dx
  4020ad:	mov    fs:0x8867db5c,al
  4020b3:	into   
  4020b4:	xor    BYTE PTR [ebp+0x1da8fecf],bl
  4020ba:	xchg   esi,eax
  4020bb:	add    BYTE PTR [edi],0x4b
  4020be:	dec    BYTE PTR [esi+0x59]
  4020c1:	xchg   bh,al
  4020c3:	pop    es
  4020c4:	sbb    DWORD PTR [edx+0x25],0x1c
  4020c8:	jecxz  0x4020d8
  4020ca:	xchg   esi,eax
  4020cb:	adc    bh,al
  4020cd:	add    esp,DWORD PTR [ecx+0x3eb1fe9f]
  4020d3:	jmp    0xb9cd:0xaa8db0c2
  4020da:	mov    bh,cl
  4020dc:	js     0x402137
  4020de:	mov    ds:0x46f6377d,eax
  4020e3:	or     eax,DWORD PTR [edi+0x3c8d177a]
  4020e9:	cmp    dl,BYTE PTR [ebp+0x44]
  4020ec:	das    
  4020ed:	adc    eax,0xbe2fde18
  4020f2:	retf   0x76ef
  4020f5:	push   esi
  4020f6:	dec    eax
  4020f7:	loope  0x4020fa
  4020f9:	ret    0x1538
  4020fc:	outs   dx,DWORD PTR ds:[esi]
  4020fd:	jbe    0x4020a6
  4020ff:	mov    edx,0x4abc52e1
  402104:	dec    esi
  402105:	int    0x5e
  402107:	test   DWORD PTR ds:[ecx+0x3ab3f74e],0xa2a335e7
  402112:	mov    al,ds:0xb8b27b13
  402117:	jnp    0x40211b
  402119:	push   ds
  40211a:	out    0xb0,eax
  40211c:	or     edx,eax
  40211e:	mul    esi
  402120:	xor    BYTE PTR [edi],ch
  402122:	ret    
  402123:	(bad)
  402126:	sar    DWORD PTR [edx+0x69],1
  402129:	xchg   edx,eax
  40212a:	mov    al,0x72
  40212c:	xchg   ecx,eax
  40212d:	push   ss
  40212e:	fucom  st(1)
  402130:	fs inc edx
  402132:	in     eax,dx
  402133:	push   esi
  402134:	sti    
  402135:	call   0xc5f8:0x25036518
  40213c:	xor    al,0x3a
  40213e:	test   al,0xed
  402140:	mov    ds:0x89197a80,eax
  402145:	jecxz  0x402121
  402147:	mov    esi,DWORD PTR [edi-0x39]
  40214a:	jmp    0x4020e2
  40214c:	xor    dh,bl
  40214e:	xor    DWORD PTR [esi-0x46ba26b4],eax
  402154:	sbb    dh,bh
  402156:	out    dx,al
  402157:	mov    DWORD PTR [ebp-0x2c],ebp
  40215a:	and    eax,0xbaec5746
  40215f:	fisub  WORD PTR [edi]
  402161:	push   cs
  402162:	push   0x76847f32
  402167:	inc    esp
  402168:	xor    esi,ebp
  40216a:	sub    ecx,edx
  40216c:	sub    eax,0x52b8a385
  402171:	int    0x75
  402173:	cdq    
  402174:	mov    eax,ds:0x2cff5ab2
  402179:	(bad)  
  40217a:	cmp    eax,0x25780a01
  40217f:	mov    dh,0xb4
  402181:	lea    esp,[esi-0x7d]
  402184:	fld    DWORD PTR [eax]
  402186:	and    bh,BYTE PTR [esi+edx*8+0xa8806e2]
  40218d:	sbb    BYTE PTR [eax-0x13],bl
  402190:	lods   eax,DWORD PTR ds:[esi]
  402191:	xlat   BYTE PTR ds:[ebx]
  402192:	dec    edi
  402193:	add    al,0xa
  402195:	push   es
  402196:	ret    0x43d8
  402199:	jge    0x40218d
  40219b:	ins    BYTE PTR es:[edi],dx
  40219c:	cmp    al,0x98
  40219e:	push   edi
  40219f:	call   0x8e1d:0x36598ade
  4021a6:	adc    BYTE PTR [esi],0x6c
  4021a9:	jmp    0x40216f
  4021ab:	inc    ecx
  4021ac:	mov    ebp,0x1b236060
  4021b1:	xchg   ebx,eax
  4021b2:	or     DWORD PTR [ebx+0x55],esp
  4021b5:	dec    eax
  4021b6:	(bad)  
  4021b7:	mov    eax,0xe4deb8e7
  4021bc:	rcr    BYTE PTR [ecx+ecx*2],1
  4021bf:	sti    
  4021c0:	mov    ch,0x3c
  4021c2:	jp     0x40222c
  4021c4:	cmp    BYTE PTR [edi+0x3f7f35b7],ch
  4021ca:	popa   
  4021cb:	sbb    dh,dh
  4021cd:	xor    al,0xae
  4021cf:	add    esp,DWORD PTR [edi+eiz*8-0x180c23c7]
  4021d6:	test   al,0x85
  4021d8:	adc    al,0x67
  4021da:	or     DWORD PTR [eax+0x29],esp
  4021dd:	jae    0x40224e
  4021df:	shl    BYTE PTR [eax],1
  4021e1:	xor    DWORD PTR [ebp+0x2e8e431d],0xe
  4021e8:	arpl   WORD PTR [esi-0xa],bp
  4021eb:	retf   0xe173
  4021ee:	jnp    0x40218a
  4021f0:	aaa    
  4021f1:	arpl   WORD PTR [edi-0x6e],sp
  4021f4:	sbb    al,0x81
  4021f6:	xlat   BYTE PTR ds:[ebx]
  4021f7:	jb     0x40219d
  4021f9:	mov    bl,0x84
  4021fb:	inc    esi
  4021fc:	jp     0x4021ad
  4021fe:	sbb    ah,al
  402200:	daa    
  402201:	jg     0x40225d
  402203:	fsub   DWORD PTR [ebx]
  402205:	cmp    eax,0x154105e7
  40220a:	aas    
  40220b:	and    BYTE PTR [ecx+ebp*2+0x44],bl
  40220f:	and    dl,BYTE PTR ds:0xe6d3b6e0
  402215:	cs jo  0x402229
  402218:	fldcw  WORD PTR [esi+0x342acdc3]
  40221e:	adc    DWORD PTR [eax],edx
  402220:	and    al,0xb1
  402222:	dec    ebx
  402223:	inc    ebx
  402224:	push   ebp
  402225:	mov    dl,0x13
  402227:	or     ch,BYTE PTR [ebx]
  402229:	lahf   
  40222a:	jmp    DWORD PTR [edi+0x71162283]
  402230:	(bad)  [eax+0x17794001]
  402236:	hlt    
  402237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402238:	in     al,0xc5
  40223a:	sbb    DWORD PTR [ecx-0x2],esp
  40223d:	mov    al,0x17
  40223f:	pop    esi
  402240:	rcl    BYTE PTR [ebp+0x1d],0x85
  402244:	xchg   ecx,eax
  402245:	bound  dx,DWORD PTR [eax-0x293d0c7d]
  40224c:	dec    eax
  40224d:	push   ebp
  40224e:	fst    QWORD PTR [edi]
  402250:	mov    dh,0xa4
  402252:	pop    ebx
  402253:	(bad)  
  402254:	call   0x3145:0x548b55a0
  40225b:	sub    al,0x66
  40225d:	cli    
  40225e:	sar    DWORD PTR [edi],1
  402260:	sub    edx,DWORD PTR [ecx+0x6f06ab74]
  402266:	sbb    DWORD PTR [ecx-0x5b],ebp
  402269:	pushf  
  40226a:	push   edx
  40226b:	(bad)  
  40226c:	mov    ch,0x18
  40226e:	jnp    0x4021fe
  402270:	jbe    0x40220d
  402272:	inc    ebx
  402273:	jge    0x40229d
  402275:	add    dl,al
  402277:	aad    0x80
  402279:	out    0x8f,eax
  40227b:	sub    ebx,eax
  40227d:	jbe    0x402251
  40227f:	data16 clc 
  402281:	jno    0x4022f7
  402283:	fstp   QWORD PTR [ecx-0x42c90381]
  402289:	lahf   
  40228a:	mov    ebp,0x7f11e3cf
  40228f:	scas   eax,DWORD PTR es:[edi]
  402290:	neg    DWORD PTR ds:0x814bcf51
  402296:	fldcw  WORD PTR [esi-0x6b55307d]
  40229c:	or     BYTE PTR [edi+0x5cd612da],ch
  4022a2:	push   ss
  4022a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022a4:	or     al,0xa9
  4022a6:	xor    BYTE PTR [ebx-0xc],dl
  4022a9:	mov    ds,ebx
  4022ab:	sub    al,0xfa
  4022ad:	outs   dx,BYTE PTR ds:[esi]
  4022ae:	les    edx,FWORD PTR [edi-0x7a]
  4022b1:	add    eax,0x8150a784
  4022b6:	xor    BYTE PTR [ecx],ch
  4022b8:	pop    ecx
  4022b9:	push   cs
  4022ba:	inc    edx
  4022bb:	sbb    al,0x4a
  4022bd:	cpuid  
  4022bf:	or     ch,cl
  4022c1:	push   ecx
  4022c2:	jmp    0x6ecba6e6
  4022c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022c8:	fidiv  DWORD PTR [edi+eiz*1-0x46]
  4022cc:	ret    
  4022cd:	call   0x7433363c
  4022d2:	jp     0x402332
  4022d4:	shr    BYTE PTR [edx-0x3de7a5a3],1
  4022da:	sbb    dh,dl
  4022dc:	sub    BYTE PTR [ebp-0x40],bh
  4022df:	repz pop esp
  4022e1:	jae    0x4022a2
  4022e3:	adc    edi,ebp
  4022e5:	loop   0x402329
  4022e7:	mov    ds:0x702c6b80,al
  4022ec:	cdq    
  4022ed:	or     dl,bh
  4022ef:	(bad)  
  4022f0:	adc    bl,BYTE PTR [ebp-0x7939f5a]
  4022f6:	retf   0xedee
  4022f9:	ins    DWORD PTR es:[edi],dx
  4022fa:	clc    
  4022fb:	add    al,ch
  4022fd:	inc    edi
  4022fe:	retf   0x346f
  402301:	aas    
  402302:	outs   dx,DWORD PTR ds:[esi]
  402303:	fidiv  WORD PTR [esi]
  402305:	(bad)  
  402306:	call   0x2d6d7c5c
  40230b:	dec    eax
  40230c:	mov    ds:0x74349dae,eax
  402311:	test   BYTE PTR [ecx+0x4acf2867],ch
  402317:	stos   DWORD PTR es:[edi],eax
  402318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402319:	pop    eax
  40231a:	xchg   DWORD PTR [ebx],edx
  40231c:	mov    al,ds:0x6343a763
  402321:	lods   al,BYTE PTR ds:[esi]
  402322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402323:	push   esp
  402324:	daa    
  402325:	jns    0x40238c
  402327:	(bad)  
  402328:	(bad)  
  402329:	(bad)  
  40232a:	add    eax,0x25601001
  40232f:	and    BYTE PTR [ebx-0x558dc355],0x1
  402336:	lods   eax,DWORD PTR ds:[esi]
  402337:	add    eax,0xb286b4bb
  40233d:	jnp    0x402396
  40233f:	adc    dl,BYTE PTR [ebp-0x14]
  402342:	in     eax,0xa5
  402344:	inc    ebx
  402345:	fdivrp st(3),st
  402347:	or     ebx,DWORD PTR [edx-0xf]
  40234a:	stos   BYTE PTR es:[edi],al
  40234b:	scas   al,BYTE PTR es:[edi]
  40234c:	pop    eax
  40234d:	mov    ds:0x70638f1d,al
  402352:	adc    al,0xb1
  402354:	retf   
  402355:	push   sp
  402357:	aad    0x4b
  402359:	ja     0x4023bb
  40235b:	scas   al,BYTE PTR es:[edi]
  40235c:	dec    esp
  40235d:	rcr    DWORD PTR [edx-0x31],cl
  402360:	push   0x604186a6
  402365:	in     al,dx
  402366:	cmp    al,0xd1
  402368:	jmp    0xf85e:0xd0a37bdc
  40236f:	mov    ds:0xefcb6376,al
  402374:	fwait
  402375:	pop    es
  402376:	pop    ebx
  402377:	push   es
  402378:	sar    ebx,cl
  40237a:	out    0x92,al
  40237c:	sbb    dl,cl
  40237e:	pop    esi
  40237f:	jp     0x402328
  402381:	mov    eax,ds:0x54b65f25
  402386:	scas   eax,DWORD PTR es:[edi]
  402387:	dec    ebp
  402388:	mov    al,0x18
  40238a:	femms  
  40238c:	sub    al,0x7c
  40238e:	xchg   DWORD PTR [eax],esi
  402390:	xchg   ebp,eax
  402391:	inc    eax
  402392:	xor    DWORD PTR [esi],ecx
  402394:	test   al,0x5a
  402396:	mov    dl,0x7b
  402398:	pushf  
  402399:	gs in  eax,0x23
  40239c:	into   
  40239d:	xchg   DWORD PTR [edx+ebp*1-0x6a],edi
  4023a1:	cdq    
  4023a2:	add    ch,al
  4023a4:	mov    BYTE PTR [ecx+0x1a7a6126],cl
  4023aa:	xlat   BYTE PTR ds:[ebx]
  4023ab:	add    BYTE PTR [ebp+0x759c339],bl
  4023b1:	test   eax,0xbeea1e23
  4023b6:	or     esp,esi
  4023b8:	out    0xa6,al
  4023ba:	int3   
  4023bb:	std    
  4023bc:	pop    edi
  4023bd:	enter  0x3b24,0x57
  4023c1:	imul   ebx,DWORD PTR [eax],0x264e2be6
  4023c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c8:	push   esi
  4023c9:	and    esi,eax
  4023cb:	es pushf 
  4023cd:	mov    eax,0x8ea9f776
  4023d2:	jecxz  0x4023fd
  4023d4:	into   
  4023d5:	inc    eax
  4023d6:	xor    eax,0xaaccbfc7
  4023db:	sub    BYTE PTR [ebp+0x65],cl
  4023de:	cmp    al,BYTE PTR [esi+0x7335ee2]
  4023e4:	push   ss
  4023e5:	lods   al,BYTE PTR ds:[esi]
  4023e6:	xchg   esp,eax
  4023e7:	in     eax,dx
  4023e8:	(bad)  
  4023e9:	jmp    0x4023f9
  4023eb:	adc    DWORD PTR [eax+ecx*1-0x301fcb8],0xffffffa0
  4023f3:	mov    BYTE PTR [edx+0x108824bf],dh
  4023f9:	add    DWORD PTR [ecx+0x47],eax
  4023fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023fd:	sub    al,BYTE PTR [esi+ebx*8-0x160198c0]
  402404:	mov    ah,0x3d
  402406:	push   0xffffffa8
  402408:	sbb    al,0x57
  40240a:	add    cl,BYTE PTR [esi+edi*2+0x4c404e75]
  402411:	push   cs
  402412:	test   eax,0x7f52cc8b
  402417:	add    dl,BYTE PTR [esi]
  402419:	inc    edi
  40241a:	(bad)  
  40241b:	xlat   BYTE PTR ds:[ebx]
  40241c:	mov    ah,0xcb
  40241e:	add    ch,ah
  402420:	mov    esp,DWORD PTR [edi+0x2e55bf21]
  402426:	ins    DWORD PTR es:[edi],dx
  402427:	and    esp,DWORD PTR [ebp-0x5511a1db]
  40242d:	out    dx,eax
  40242e:	pop    ecx
  40242f:	mov    ?,esi
  402431:	out    dx,eax
  402432:	outs   dx,DWORD PTR ds:[esi]
  402433:	dec    ebp
  402434:	pop    esp
  402435:	(bad)  
  402436:	mov    edx,0xfb39559e
  40243b:	xlat   BYTE PTR ds:[ebx]
  40243c:	test   al,0x4e
  40243e:	repz inc esi
  402440:	out    dx,eax
  402441:	rol    DWORD PTR ds:0xdf592726,0x4f
  402448:	xor    BYTE PTR [edi],bh
  40244a:	fdiv   DWORD PTR [eax-0x4]
  40244d:	push   ss
  40244e:	jo     0x402490
  402450:	dec    edx
  402451:	and    DWORD PTR [edx-0x11ffcadf],esp
  402457:	sbb    al,0x93
  402459:	pop    edi
  40245a:	xlat   BYTE PTR ds:[ebx]
  40245b:	push   es
  40245c:	xchg   ecx,eax
  40245d:	pusha  
  40245e:	outs   dx,BYTE PTR ds:[esi]
  40245f:	or     DWORD PTR [edi-0x58],ebp
  402462:	xor    DWORD PTR [eax+eax*2-0x1],edi
  402466:	sub    DWORD PTR [ebp-0x6de1f45a],0xc30deca2
  402470:	pop    eax
  402471:	ins    BYTE PTR es:[edi],dx
  402472:	movq   mm3,QWORD PTR [esi]
  402475:	mov    eax,DWORD PTR ds:0x5f6cf1
  40247b:	cmp    BYTE PTR es:[ebx],ah
  40247e:	inc    ebx
  40247f:	es xor eax,esi
  402482:	xchg   ebx,eax
  402483:	inc    esi
  402484:	inc    esi
  402485:	sbb    ecx,DWORD PTR [ebx-0x22]
  402488:	xor    ch,al
  40248a:	repnz mov cl,0x6f
  40248d:	sbb    BYTE PTR [esi+0xc],al
  402490:	dec    esp
  402491:	xlat   BYTE PTR ds:[ebx]
  402492:	adc    cl,al
  402494:	inc    ebx
  402495:	sub    ch,BYTE PTR [eax+0x5e93ec0]
  40249b:	push   esp
  40249c:	out    dx,eax
  40249d:	arpl   WORD PTR [ebp-0x6c],si
  4024a0:	scas   eax,DWORD PTR es:[edi]
  4024a1:	jnp    0x402438
  4024a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a4:	cmp    al,0xd9
  4024a6:	imul   esp,DWORD PTR [edx+0x65f64b63],0x4
  4024ad:	adc    eax,0x42330f9e
  4024b2:	into   
  4024b3:	ja     0x4024ad
  4024b5:	aad    0x5e
  4024b7:	cmp    DWORD PTR [ebx-0x40],0x39
  4024bb:	inc    edx
  4024bc:	out    0xbc,al
  4024be:	push   0x188711bd
  4024c3:	sbb    BYTE PTR [ebx+0x7ed6aafc],0x8e
  4024ca:	leave  
  4024cb:	mov    esi,ebp
  4024cd:	jo     0x4024d5
  4024cf:	call   0xbbb5:0x9590d8a6
  4024d6:	sub    DWORD PTR [ecx+0x23143358],0xffffffc6
  4024dd:	dec    esi
  4024de:	fbstp  TBYTE PTR ds:0xd1f017ea
  4024e4:	mov    dh,0xf7
  4024e6:	(bad)  
  4024e7:	xchg   edx,eax
  4024e8:	add    al,0xf7
  4024ea:	outs   dx,BYTE PTR ds:[esi]
  4024eb:	(bad)  
  4024ed:	pusha  
  4024ee:	mov    ebx,0x2cea730d
  4024f3:	popf   
  4024f4:	jb     0x402541
  4024f6:	mov    edi,0x5a8a5dba
  4024fb:	sub    DWORD PTR [esi],esi
  4024fd:	push   cs
  4024fe:	in     eax,dx
  4024ff:	add    al,0xd4
  402501:	outs   dx,BYTE PTR ds:[esi]
  402502:	loop   0x4024e1
  402504:	inc    ebp
  402505:	mov    ecx,0x4a5a5125
  40250a:	lods   eax,DWORD PTR ds:[esi]
  40250b:	iret   
  40250c:	cmp    al,0x9f
  40250e:	dec    ebp
  40250f:	jmp    0x402545
  402511:	retf   0x84f0
  402514:	inc    esi
  402515:	or     DWORD PTR [edx-0x3ca7f44f],edx
  40251b:	dec    edx
  40251c:	mov    cl,0xa4
  40251e:	shl    BYTE PTR [ecx+0x23],0xcf
  402522:	push   ds
  402523:	mov    al,0x17
  402525:	or     al,0x15
  402527:	fcom   QWORD PTR [eax-0x2752fa68]
  40252d:	push   edx
  40252e:	add    DWORD PTR [ebx-0x3],ebx
  402531:	mov    ah,0x51
  402533:	sbb    ebp,DWORD PTR [ebx-0x7]
  402536:	in     al,0x11
  402538:	fisubr WORD PTR [ebp+0x39]
  40253b:	xor    cl,BYTE PTR [ecx+0x19221db0]
  402541:	mov    ebx,es
  402543:	push   eax
  402544:	pusha  
  402545:	sbb    al,0xf9
  402547:	ret    
  402548:	shld   DWORD PTR [eax],ebp,0xda
  40254c:	jmp    0x88ac:0xbdee9325
  402553:	xchg   ecx,eax
  402554:	call   0xc428:0x67463d95
  40255b:	sbb    al,0x86
  40255d:	xlat   BYTE PTR ds:[ebx]
  40255e:	jmp    0x3467:0xdb8709b2
  402565:	(bad)
  402568:	xchg   edi,eax
  402569:	xchg   esi,eax
  40256a:	and    dl,BYTE PTR [ebx]
  40256c:	add    DWORD PTR [edx-0x7d],eax
  40256f:	add    eax,0x4785e70c
  402574:	icebp  
  402575:	inc    eax
  402576:	lods   al,BYTE PTR ds:[esi]
  402577:	lds    eax,FWORD PTR [ebp-0x795f822b]
  40257d:	and    BYTE PTR [ebp-0x46],ch
  402580:	pop    ecx
  402581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402582:	loope  0x4025f6
  402584:	aad    0xea
  402586:	add    DWORD PTR [eax-0x5bfe8690],ebp
  40258c:	mov    ah,BYTE PTR [edx]
  40258e:	inc    edi
  40258f:	pop    ebp
  402590:	inc    eax
  402591:	xchg   edi,eax
  402592:	push   edx
  402593:	xorps  xmm3,XMMWORD PTR [ecx-0x79]
  402597:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402598:	jns    0x402610
  40259a:	and    eax,0x81c7c7cf
  40259f:	mov    eax,ds:0x56c19aa6
  4025a4:	push   ds
  4025a5:	pop    edi
  4025a6:	mov    ds:0x5407feff,al
  4025ab:	es push esp
  4025ad:	rol    DWORD PTR [edi],1
  4025af:	mov    edi,0xd17a7a2e
  4025b4:	cmp    DWORD PTR [ebp+0x2f18b00b],ebp
  4025ba:	test   edx,eax
  4025bc:	xor    DWORD PTR [eax-0x49],ebp
  4025bf:	dec    ebp
  4025c0:	sub    DWORD PTR [ecx-0x2203aa49],edx
  4025c6:	or     ebx,ebx
  4025c8:	add    eax,0xf18fcae5
  4025cd:	xchg   DWORD PTR [edx+eax*4+0x29],ebp
  4025d1:	inc    edx
  4025d2:	pop    ds
  4025d3:	add    cl,BYTE PTR [eax]
  4025d5:	mov    bh,0x93
  4025d7:	jno    0x4025e6
  4025d9:	scas   eax,DWORD PTR es:[edi]
  4025da:	in     al,dx
  4025db:	mov    ah,0x7
  4025dd:	outs   dx,BYTE PTR ds:[esi]
  4025de:	mov    eax,0x4ced2258
  4025e3:	mov    dh,0x61
  4025e5:	xchg   ebp,eax
  4025e6:	dec    eax
  4025e7:	popf   
  4025e8:	pop    esp
  4025e9:	or     esp,DWORD PTR [ecx+0x5f]
  4025ec:	fimul  WORD PTR [esi+0x7a]
  4025ef:	dec    ebp
  4025f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025f1:	mov    bh,0x2c
  4025f3:	pop    edi
  4025f4:	mov    ch,0xc0
  4025f6:	sub    DWORD PTR [ebp-0x3f],esp
  4025f9:	inc    eax
  4025fa:	jns    0x402651
  4025fc:	enter  0x8eca,0x94
  402600:	daa    
  402601:	bnd jge 0x40262c
  402604:	push   edi
  402605:	inc    ebp
  402606:	fdivr  DWORD PTR [edx-0x6a]
  402609:	fs adc eax,0x5a732d9c
  40260f:	jne    0x402624
  402611:	inc    ebp
  402612:	out    0x57,al
  402614:	mov    ds:0x7255ae51,al
  402619:	int    0xb9
  40261b:	pop    eax
  40261c:	popf   
  40261d:	mov    ecx,ebx
  40261f:	stc    
  402620:	xor    al,0xc6
  402622:	addr16 jbe 0x402680
  402625:	xchg   ebp,eax
  402626:	fsubr  DWORD PTR [ecx]
  402628:	lock aaa 
  40262a:	mov    ah,0xd8
  40262c:	mov    ebx,0x849587e8
  402631:	sub    edx,ebp
  402633:	adc    BYTE PTR [ecx],cl
  402635:	neg    DWORD PTR [edx]
  402637:	mov    al,0xf3
  402639:	and    cl,BYTE PTR ds:0x97a58060
  40263f:	loop   0x402603
  402641:	cld    
  402642:	int3   
  402643:	push   eax
  402644:	push   eax
  402645:	sbb    edx,DWORD PTR [eax-0x4f2e78cd]
  40264b:	fidiv  WORD PTR [ecx]
  40264d:	scas   al,BYTE PTR es:[edi]
  40264e:	jecxz  0x402630
  402650:	fistp  QWORD PTR [esi+eiz*8-0x71]
  402654:	xchg   ebx,eax
  402655:	sahf   
  402656:	in     al,0x27
  402658:	mov    dh,0xcb
  40265a:	inc    ecx
  40265b:	xchg   ecx,eax
  40265c:	ror    BYTE PTR [ebx+0x1c],1
  40265f:	ins    BYTE PTR es:[edi],dx
  402660:	mov    ebx,0xf5c83d4e
  402665:	gs scas al,BYTE PTR es:[edi]
  402667:	out    dx,eax
  402668:	loopne 0x4026db
  40266a:	xchg   esp,eax
  40266b:	popf   
  40266c:	push   edx
  40266d:	push   ss
  40266e:	pop    es
  40266f:	out    0x22,al
  402671:	out    dx,al
  402672:	mov    BYTE PTR [ecx+0x2a],cl
  402675:	stc    
  402676:	sbb    BYTE PTR [eax],dh
  402678:	adc    ch,bl
  40267a:	jb     0x4026e1
  40267c:	and    ebx,ecx
  40267e:	(bad)  
  40267f:	mov    al,ds:0x6f068ed1
  402684:	pop    es
  402685:	inc    esi
  402686:	fisub  WORD PTR [ebp*2-0x784c43e4]
  40268d:	inc    esi
  40268e:	in     eax,dx
  40268f:	lods   eax,DWORD PTR ds:[esi]
  402690:	jno    0x4026fc
  402692:	jecxz  0x402680
  402694:	and    al,0x56
  402696:	fdivr  QWORD PTR [esi]
  402698:	push   DWORD PTR [ebp-0x6dafa2b5]
  40269e:	dec    esi
  40269f:	mov    cs,WORD PTR [eax+0x65]
  4026a2:	call   ecx
  4026a4:	pop    esp
  4026a5:	loope  0x40269f
  4026a7:	das    
  4026a8:	lds    edi,FWORD PTR [edx-0x66]
  4026ab:	mov    esi,0x3b9c89a6
  4026b0:	inc    esi
  4026b1:	ret    
  4026b2:	vmread esi,esi
  4026b5:	xchg   esi,eax
  4026b6:	jno    0x4026a8
  4026b8:	dec    edx
  4026b9:	dec    ebx
  4026ba:	mov    ds:0xf00d25e2,eax
  4026bf:	outs   dx,BYTE PTR ds:[esi]
  4026c0:	mov    dl,0x5e
  4026c2:	push   eax
  4026c3:	sub    BYTE PTR [edx],0xc1
  4026c6:	icebp  
  4026c7:	jns    0x4026c2
  4026c9:	inc    edi
  4026ca:	pop    esi
  4026cb:	adc    DWORD PTR [edi-0x2851203f],0x25f2fc8d
  4026d5:	repz daa 
  4026d7:	xlat   BYTE PTR ds:[ebx]
  4026d8:	mov    eax,0x34b360f5
  4026dd:	or     ch,al
  4026df:	xor    eax,0x85a7d8f0
  4026e4:	es mov edx,0xa26af22
  4026ea:	cmp    al,0x40
  4026ec:	enter  0xcdb1,0xc0
  4026f0:	inc    esp
  4026f1:	pop    ss
  4026f2:	das    
  4026f3:	push   ds
  4026f4:	fwait
  4026f5:	les    edx,FWORD PTR [edx-0x52e9be90]
  4026fb:	mov    edx,0x3e921e98
  402700:	and    eax,0xd55512c3
  402705:	aam    0x53
  402707:	xchg   ebx,eax
  402708:	mov    edx,0x4559bdee
  40270d:	dec    eax
  40270e:	outs   dx,DWORD PTR es:[esi]
  402710:	sbb    eax,0x114d0453
  402715:	pop    esi
  402716:	jne    0x40272c
  402718:	jg     0x4026d2
  40271a:	aaa    
  40271b:	lahf   
  40271c:	xor    esp,DWORD PTR [edi-0x10]
  40271f:	cmp    bh,BYTE PTR [edx]
  402721:	mov    cl,0xa
  402723:	xchg   BYTE PTR [eax-0x58afe267],bl
  402729:	ret    0x66ae
  40272c:	xchg   ecx,eax
  40272d:	xchg   BYTE PTR [ecx],bh
  40272f:	retf   
  402730:	xchg   BYTE PTR [esi],ah
  402732:	pop    ds
  402733:	(bad)  
  402734:	lahf   
  402735:	cmp    al,0x12
  402737:	fld    TBYTE PTR [ecx+0x42247ed3]
  40273d:	dec    esp
  40273e:	jmp    0x67e3:0xc93bbe1c
  402745:	cs mov ecx,0xd18be884
  40274b:	test   DWORD PTR [ecx+0x24],0xcee28dcd
  402752:	xchg   esp,eax
  402753:	add    BYTE PTR [esi],0x61
  402756:	arpl   WORD PTR [edi],ax
  402758:	pop    esi
  402759:	inc    edi
  40275a:	aaa    
  40275b:	lahf   
  40275c:	mov    ecx,0x1192b02e
  402761:	outs   dx,BYTE PTR ds:[esi]
  402762:	mov    cl,0x67
  402764:	push   0xffffffcf
  402766:	push   ecx
  402767:	jp     0x4027d7
  402769:	mov    ecx,DWORD PTR [esi+0x6b]
  40276c:	je     0x40277e
  40276e:	loop   0x402788
  402770:	or     eax,esi
  402772:	into   
  402773:	cmp    al,0x8e
  402775:	enter  0x8f33,0xb9
  402779:	icebp  
  40277a:	inc    esp
  40277b:	mov    es,WORD PTR [esi]
  40277d:	mov    ebx,0xac9532c6
  402782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402783:	scas   al,BYTE PTR es:[edi]
  402784:	cmp    al,0xac
  402786:	xor    eax,0xaa273e6a
  40278b:	mov    cl,0xd2
  40278d:	xchg   BYTE PTR [edi-0x29],dh
  402790:	xchg   DWORD PTR [ebx],ecx
  402792:	(bad)  
  402793:	enter  0xca75,0x31
  402797:	rcr    BYTE PTR [eax+0x4c8c26b8],cl
  40279d:	and    eax,0x8fde5ccd
  4027a2:	(bad)  
  4027a3:	xchg   ebx,eax
  4027a4:	in     eax,dx
  4027a5:	jns    0x4027ec
  4027a7:	mov    BYTE PTR [eax-0x69],ch
  4027aa:	int    0xe6
  4027ac:	mov    ch,0x34
  4027ae:	xor    DWORD PTR [eax-0x67efdfc9],eax
  4027b4:	pop    esi
  4027b5:	ja     0x402744
  4027b7:	std    
  4027b8:	bnd ja 0x402761
  4027bb:	ret    
  4027bc:	js     0x4027f0
  4027be:	fdivr  DWORD PTR [ebx]
  4027c0:	ss pop ds
  4027c2:	add    dh,cl
  4027c4:	mov    al,0x74
  4027c6:	xchg   ecx,eax
  4027c7:	dec    ebx
  4027c8:	push   eax
  4027c9:	frstor [ecx+0x22]
  4027cc:	push   0x15
  4027ce:	push   cs
  4027cf:	mov    eax,ds:0xa9d6c059
  4027d4:	fldcw  WORD PTR [edi+0x34]
  4027d7:	adc    DWORD PTR ds:0x90b8af24,ebx
  4027dd:	ret    
  4027de:	jg     0x4027c1
  4027e0:	mul    BYTE PTR [ebp-0x64]
  4027e3:	or     DWORD PTR [ecx+0x3ad88786],ebx
  4027e9:	in     eax,dx
  4027ea:	std    
  4027eb:	adc    bl,BYTE PTR [esi]
  4027ed:	pop    ecx
  4027ee:	pusha  
  4027ef:	ins    DWORD PTR es:[edi],dx
  4027f0:	cmp    BYTE PTR [ecx+0x63],bl
  4027f3:	jp     0x402834
  4027f5:	call   0xe6024af0
  4027fa:	and    DWORD PTR [eax],0xffffffe5
  4027fd:	ins    BYTE PTR es:[edi],dx
  4027fe:	mov    DWORD PTR [eax+0x1f],eax
  402801:	inc    eax
  402802:	jg     0x4027b8
  402804:	xchg   edi,eax
  402805:	mov    dl,0xec
  402807:	pop    ebp
  402808:	test   BYTE PTR [ebx+0xf6925f3],bh
  40280e:	sbb    cl,ah
  402810:	jecxz  0x40285a
  402812:	test   al,0xf5
  402814:	into   
  402815:	lods   al,BYTE PTR ds:[esi]
  402816:	aam    0xc7
  402818:	ja     0x402845
  40281a:	inc    edx
  40281b:	jae    0x4027a8
  40281d:	push   esp
  40281e:	repnz aam 0xe9
  402821:	(bad)  
  402822:	mov    ds:0xb83e2a7f,eax
  402827:	or     DWORD PTR [eax],edx
  402829:	(bad)  
  40282a:	ficomp DWORD PTR [ecx+0x49]
  40282d:	rol    BYTE PTR [esi-0x37],cl
  402830:	mov    ds:0xf93c99d3,eax
  402835:	jb     0x402895
  402837:	or     BYTE PTR [ecx],ah
  402839:	or     ah,BYTE PTR [edi+0x30]
  40283c:	push   ebx
  40283d:	push   ebx
  40283e:	pminub mm7,mm2
  402841:	or     DWORD PTR [edi-0x59],0x8f88dd07
  402848:	xchg   BYTE PTR [edi+0x2bbfd3e5],al
  40284e:	xchg   edx,eax
  40284f:	inc    eax
  402850:	std    
  402851:	aam    0x62
  402853:	inc    ebp
  402854:	rol    DWORD PTR [edx+0x72],0x39
  402858:	and    BYTE PTR [ebp-0x16],dl
  40285b:	jg     0x402864
  40285d:	fcom   DWORD PTR [ebp*2-0x6cd1a55e]
  402864:	mov    ecx,0x450367a5
  402869:	jne    0x402830
  40286b:	mov    esi,0x2ccc11c2
  402870:	xor    eax,0x5257ce4c
  402875:	test   eax,0x4b3005fd
  40287a:	fistp  QWORD PTR [eax-0x754b670f]
  402880:	std    
  402881:	fmul   DWORD PTR [ecx-0x6]
  402884:	dec    ebx
  402885:	mov    bh,0x55
  402887:	push   edi
  402888:	loopne 0x402810
  40288a:	loop   0x402849
  40288c:	fnsave [eax-0x2af1a2c]
  402892:	pop    edx
  402893:	sbb    DWORD PTR [ebp+0x35],0xffffffdf
  402897:	and    BYTE PTR [ecx+0x21a66551],dl
  40289d:	mov    ch,0x1d
  40289f:	cs cli 
  4028a1:	into   
  4028a2:	repz cwde 
  4028a4:	dec    eax
  4028a5:	fnstsw WORD PTR [edx+0x55]
  4028a8:	int    0x9b
  4028aa:	pop    esi
  4028ab:	or     eax,0x493281f9
  4028b0:	iret   
  4028b1:	push   0xffffffa3
  4028b3:	add    al,0x69
  4028b5:	xchg   ebp,eax
  4028b6:	push   eax
  4028b7:	ror    ah,cl
  4028b9:	and    DWORD PTR ds:0x409df764,edx
  4028bf:	enter  0x30af,0xb3
  4028c3:	in     eax,0xd2
  4028c5:	jecxz  0x40291d
  4028c7:	xchg   DWORD PTR [esi+0x26],ebp
  4028ca:	loope  0x40285c
  4028cc:	sahf   
  4028cd:	gs xor ax,0x681b
  4028d2:	add    al,0x10
  4028d4:	int    0x9c
  4028d6:	arpl   WORD PTR [ecx+0x5d3c527],dx
  4028dc:	or     DWORD PTR [eax-0x15c88803],ebx
  4028e2:	mov    fs,WORD PTR [ebx]
  4028e4:	pop    ds
  4028e5:	mov    eax,DWORD PTR [edi-0x4779887b]
  4028eb:	hlt    
  4028ec:	in     eax,0x70
  4028ee:	xor    dh,dh
  4028f0:	mov    ecx,0x68a58b1a
  4028f5:	inc    ebp
  4028f6:	push   ds
  4028f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028f8:	jb     0x402957
  4028fa:	jp     0x4028bb
  4028fc:	or     DWORD PTR fs:[ebp+0x1d],0xffffff8e
  402901:	mov    BYTE PTR [eax+eax*4+0xb5e7781],al
  402908:	jbe    0x4028ab
  40290a:	and    BYTE PTR [eax],ah
  40290c:	call   FWORD PTR [esi+0x75]
  40290f:	add    ah,BYTE PTR [ebx]
  402911:	ss dec edi
  402913:	cld    
  402914:	jmp    FWORD PTR [ebx+0x17]
  402917:	xor    edi,DWORD PTR [ebx-0x6078bd41]
  40291d:	in     eax,0x3
  40291f:	jbe    0x4028e0
  402921:	lds    ecx,FWORD PTR [edx-0x25]
  402924:	xchg   edi,eax
  402925:	xchg   ecx,eax
  402926:	or     DWORD PTR [ebx+0x4b],edi
  402929:	es xchg ebp,eax
  40292b:	mov    dl,0x4
  40292d:	ja     0x402924
  40292f:	cld    
  402930:	cmp    DWORD PTR [ecx],eax
  402932:	push   cs
  402933:	les    ebx,FWORD PTR [ebx]
  402935:	mov    al,al
  402937:	fs jle 0x4028d7
  40293a:	imul   ebx,DWORD PTR ds:0xce33bd93,0xfffffff1
  402941:	cmc    
  402942:	fisttp DWORD PTR [eax-0x1a]
  402945:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402947:	stos   BYTE PTR es:[edi],al
  402948:	pop    ebx
  402949:	jmp    0x792471c3
  40294e:	not    DWORD PTR [ebx+0x5b]
  402951:	cmp    bh,BYTE PTR [edx+edx*1]
  402954:	jle    0x4029ad
  402956:	or     ebp,DWORD PTR [eax+0x9584934]
  40295c:	retf   0x427b
  40295f:	fwait
  402960:	push   ebx
  402961:	inc    edi
  402962:	fcmovb st,st(4)
  402964:	dec    ebx
  402965:	(bad)
  402968:	fnsave [ebp-0x197e9125]
  40296e:	mov    bh,0xad
  402970:	jnp    0x40295d
  402972:	call   0xb2fd:0x6042fdb
  402979:	xchg   DWORD PTR [edi],edi
  40297b:	leave  
  40297c:	jae    0x4029ea
  40297e:	test   eax,0x1658b9da
  402983:	sbb    ch,BYTE PTR [ebp-0x6f]
  402986:	test   ebp,0x60e0d32e
  40298c:	xchg   esi,eax
  40298d:	cmp    esp,0x52
  402990:	(bad)  
  402991:	pop    edi
  402992:	pop    eax
  402993:	add    BYTE PTR [ebp+0x4a76e8cf],0xf1
  40299a:	cli    
  40299b:	push   esp
  40299c:	test   BYTE PTR [ecx],dl
  40299e:	mov    edx,0x887e4634
  4029a3:	cmp    esp,0x9dc8698f
  4029a9:	ret    
  4029aa:	mov    DWORD PTR [eax+0x7b],edx
  4029ad:	inc    esp
  4029ae:	push   cs
  4029af:	(bad)  
  4029b0:	daa    
  4029b1:	imul   esi,DWORD PTR [esi],0x67
  4029b4:	loope  0x402a27
  4029b6:	cmp    ecx,DWORD PTR [ecx-0x69cd22ab]
  4029bc:	sub    esi,DWORD PTR [ecx+0x6f]
  4029bf:	popa   
  4029c0:	or     dh,BYTE PTR [ebx+0x3c76d07c]
  4029c6:	clc    
  4029c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029c8:	stos   DWORD PTR es:[edi],eax
  4029c9:	xchg   edx,eax
  4029ca:	sahf   
  4029cb:	inc    ecx
  4029cc:	lock sub al,0x35
  4029cf:	ds sahf 
  4029d1:	dec    ebp
  4029d2:	cmp    eax,0x7e9f158c
  4029d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029d8:	shr    ecx,cl
  4029da:	js     0x402a44
  4029dc:	xchg   BYTE PTR [ebx],dh
  4029de:	and    ebx,edi
  4029e0:	mov    al,ds:0xa8d13e5c
  4029e5:	sbb    ah,dl
  4029e7:	cmp    BYTE PTR [ebx+0x77],ah
  4029ea:	mov    bh,0xcd
  4029ec:	pop    edx
  4029ed:	mov    DWORD PTR [ecx-0x24],esp
  4029f0:	(bad)  
  4029f1:	bound  ecx,QWORD PTR [ebx+esi*8+0x44]
  4029f5:	sbb    eax,0xe3a7139b
  4029fa:	jb     0x4029ac
  4029fc:	adc    esi,0xa8d73d3b
  402a02:	not    DWORD PTR [esi+0x46]
  402a05:	bound  ecx,QWORD PTR [esi+ebp*2-0x67]
  402a09:	sar    BYTE PTR [eax+edi*4],0xf3
  402a0d:	shl    DWORD PTR [eax-0x50cd8659],cl
  402a13:	test   DWORD PTR [edi],0x8573ea70
  402a19:	rcr    BYTE PTR [ecx-0x1a],1
  402a1c:	stos   BYTE PTR es:[di],al
  402a1e:	leave  
  402a1f:	dec    eax
  402a20:	pop    esp
  402a21:	push   edi
  402a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a23:	mov    edx,0x70f7cebf
  402a28:	mov    eax,ds:0xad456cd
  402a2d:	(bad)  
  402a2e:	outs   dx,DWORD PTR ds:[esi]
  402a2f:	addr16 popf 
  402a31:	hlt    
  402a32:	or     al,0x70
  402a34:	test   ebp,0xfd461d1d
  402a3a:	fidivr DWORD PTR [ebp-0x370b9999]
  402a40:	inc    esp
  402a41:	in     al,dx
  402a42:	mov    ah,0x5c
  402a44:	or     edx,DWORD PTR [edi-0x5dfe5fb2]
  402a4a:	in     eax,0x38
  402a4c:	sbb    edi,DWORD PTR [edx]
  402a4e:	mov    al,ds:0xf5c0e82
  402a53:	adc    al,0x7c
  402a55:	cld    
  402a56:	stc    
  402a57:	jp     0x402aa9
  402a59:	int3   
  402a5a:	jmp    DWORD PTR [edx+eiz*2-0x50bcf56d]
  402a61:	sahf   
  402a62:	push   eax
  402a63:	loopne 0x402a29
  402a65:	sub    eax,0xb34c28da
  402a6a:	sbb    DWORD PTR [edi],ecx
  402a6c:	dec    ebp
  402a6d:	sbb    dh,dl
  402a6f:	popf   
  402a70:	mov    WORD PTR [eax-0x4e],ss
  402a73:	fs pop es
  402a75:	sar    DWORD PTR [edx],0x3c
  402a78:	xor    al,0x41
  402a7a:	ja     0x402ad1
  402a7c:	dec    ecx
  402a7d:	jl     0x402ac0
  402a7f:	(bad)  
  402a80:	xchg   edx,eax
  402a81:	mov    es,WORD PTR [ebp+0x4e]
  402a84:	push   ss
  402a85:	and    al,0xa0
  402a87:	popa   
  402a88:	(bad)  
  402a89:	cmc    
  402a8a:	popf   
  402a8b:	jle    0x402a2f
  402a8d:	mov    ch,0x6a
  402a8f:	in     eax,dx
  402a90:	fmul   DWORD PTR [eax]
  402a92:	inc    esi
  402a93:	pushf  
  402a94:	in     al,dx
  402a95:	pop    edx
  402a96:	xor    eax,0xe72d4f7a
  402a9b:	adc    al,0xb
  402a9d:	fs cwde 
  402a9f:	pop    eax
  402aa0:	jns    0x402ad5
  402aa2:	cmp    eax,0x595de838
  402aa7:	pushf  
  402aa8:	pop    ebp
  402aa9:	ss jmp 0xe2e5047b
  402aaf:	mov    al,ds:0x7f49d3e5
  402ab4:	sub    BYTE PTR [edi-0x5db5ed34],ah
  402aba:	or     ebp,DWORD PTR [edi+0x2274f099]
  402ac0:	xchg   edx,eax
  402ac1:	or     eax,0x19532db3
  402ac6:	jmp    0xe5c47e51
  402acb:	xor    dl,BYTE PTR [esi+0x64]
  402ace:	mov    BYTE PTR [ebp+0x7486161f],bl
  402ad4:	das    
  402ad5:	cmp    al,0xd7
  402ad7:	imul   ebx,DWORD PTR [edx+0x10729648],0xffffffbf
  402ade:	sub    eax,DWORD PTR [edi+0x31c6e076]
  402ae4:	hlt    
  402ae5:	jmp    0x402b57
  402ae7:	and    ah,ch
  402ae9:	jo     0x402b45
  402aeb:	cdq    
  402aec:	repnz out dx,al
  402aee:	and    cl,BYTE PTR [eax]
  402af0:	mov    ebx,0xa2362c49
  402af5:	xchg   edx,eax
  402af6:	xchg   edx,eax
  402af7:	inc    edx
  402af8:	adc    DWORD PTR [edi+0x1f],ebp
  402afb:	clc    
  402afc:	xchg   esi,eax
  402afd:	push   ds
  402afe:	sbb    ah,BYTE PTR [edx+0xf2509e7]
  402b04:	push   ss
  402b05:	xchg   esi,eax
  402b06:	add    DWORD PTR [eax+0x67],edx
  402b09:	std    
  402b0a:	pop    esp
  402b0b:	repnz mov esp,0xa1816882
  402b11:	arpl   bp,cx
  402b13:	outs   dx,DWORD PTR ds:[esi]
  402b14:	shl    DWORD PTR [ebx-0x392906bc],1
  402b1a:	cmp    BYTE PTR [ecx-0x49b92587],cl
  402b20:	loope  0x402b8d
  402b22:	cmc    
  402b23:	pop    ss
  402b24:	ins    BYTE PTR es:[edi],dx
  402b25:	pop    edx
  402b26:	aam    0x7f
  402b28:	pop    ds
  402b29:	iret   
  402b2a:	jae    0x402ac2
  402b2c:	mov    bh,0xf9
  402b2e:	repnz mov dh,0xbe
  402b31:	fwait
  402b32:	mov    eax,ds:0xdf4b2113
  402b37:	cmp    ecx,DWORD PTR [eax+0x1746236d]
  402b3d:	pop    ebx
  402b3e:	bound  edi,QWORD PTR [ebx+0x14]
  402b41:	push   es
  402b42:	shl    BYTE PTR [eax],1
  402b44:	sbb    bl,BYTE PTR ds:0xe7884af1
  402b4a:	dec    esi
  402b4b:	std    
  402b4c:	ja     0x402b7f
  402b4e:	int    0xdc
  402b50:	sahf   
  402b51:	xchg   edx,eax
  402b52:	pop    esp
  402b53:	xchg   BYTE PTR [edi],bl
  402b55:	and    edi,DWORD PTR [ebx-0x43]
  402b58:	pop    esi
  402b59:	jmp    0xf2a3:0xd682d936
  402b60:	(bad)  
  402b61:	fcom   st(6)
  402b63:	gs jno 0x402b2f
  402b66:	sbb    al,0x38
  402b68:	or     al,0x8d
  402b6a:	and    BYTE PTR [edx+0x53],dh
  402b6d:	sbb    eax,0xe9bc5479
  402b72:	mul    BYTE PTR [esi]
  402b74:	mov    edi,0x644eb1ea
  402b79:	pop    ebp
  402b7a:	ins    BYTE PTR es:[di],dx
  402b7c:	cdq    
  402b7d:	dec    edx
  402b7e:	mov    ecx,0xcc37f950
  402b83:	adc    DWORD PTR [ecx-0x53],ebx
  402b86:	push   0xdae365e1
  402b8b:	shl    BYTE PTR [edx+0x34],cl
  402b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b8f:	sti    
  402b90:	imul   esi,DWORD PTR gs:[ecx+0x16],0x73
  402b95:	loopne 0x402bc7
  402b97:	icebp  
  402b98:	inc    ebp
  402b99:	ins    BYTE PTR es:[edi],dx
  402b9a:	jo     0x402bdd
  402b9c:	inc    ebp
  402b9d:	jecxz  0x402b49
  402b9f:	lods   eax,DWORD PTR ds:[esi]
  402ba0:	call   0x8f03a268
  402ba5:	mov    cs,WORD PTR [ebp+0x68]
  402ba8:	pop    esp
  402ba9:	push   edi
  402baa:	push   esi
  402bab:	jmp    0x8fb28604
  402bb0:	sbb    al,0xdd
  402bb2:	mov    ch,0x2
  402bb4:	test   al,0xd9
  402bb6:	shl    DWORD PTR [ecx],cl
  402bb8:	outs   dx,BYTE PTR ds:[esi]
  402bb9:	ficom  DWORD PTR [edi+0x3e9e7b34]
  402bbf:	sbb    edx,DWORD PTR [edi]
  402bc1:	mov    ds:0x1fc22d42,eax
  402bc6:	xor    esi,ecx
  402bc8:	outs   dx,DWORD PTR ds:[esi]
  402bc9:	mov    edx,0x7ca6a322
  402bce:	pop    eax
  402bcf:	pop    ss
  402bd0:	pop    ss
  402bd1:	clc    
  402bd2:	ret    
  402bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bd4:	hlt    
  402bd5:	sbb    eax,DWORD PTR [ebx]
  402bd7:	mov    eax,ds:0xcf82477d
  402bdc:	add    al,0xc1
  402bde:	ss xchg ebx,eax
  402be0:	cmp    eax,0x929355d0
  402be5:	iret   
  402be6:	inc    ecx
  402be7:	(bad)  [edi]
  402be9:	jge    0x402c36
  402beb:	inc    ecx
  402bec:	repz call 0xfa9e19a0
  402bf2:	mov    ch,0x98
  402bf4:	retf   
  402bf5:	mov    edi,0xeac20c22
  402bfa:	xor    edi,DWORD PTR [esi-0x12]
  402bfd:	retf   0xa83d
  402c00:	nop
  402c01:	ss es stc 
  402c04:	xchg   ebp,eax
  402c05:	test   DWORD PTR [esp+ebx*1+0x769c0e3b],edi
  402c0c:	rcl    DWORD PTR [eax-0x7920931c],1
  402c12:	ins    BYTE PTR es:[edi],dx
  402c13:	lods   al,BYTE PTR ds:[esi]
  402c14:	pop    edi
  402c15:	add    BYTE PTR [esi+0x4841fa79],0x49
  402c1c:	scas   al,BYTE PTR es:[edi]
  402c1d:	dec    esi
  402c1e:	jmp    0x1626:0x87ea8630
  402c25:	add    al,0x67
  402c27:	mov    eax,ds:0x1d69a89c
  402c2c:	cld    
  402c2d:	iret   
  402c2e:	mov    ch,0x77
  402c30:	scas   al,BYTE PTR es:[edi]
  402c31:	cmp    BYTE PTR ds:0xb1608f7a,cl
  402c37:	add    eax,0x3388d028
  402c3c:	(bad)  
  402c3d:	cwde   
  402c3e:	popa   
  402c3f:	add    ch,bl
  402c41:	mov    dl,0x3e
  402c43:	les    esi,FWORD PTR [ebx]
  402c45:	shr    BYTE PTR [esi-0x1d],cl
  402c48:	mov    cs,WORD PTR [edi-0x1c]
  402c4b:	ror    BYTE PTR [eax],1
  402c4d:	les    esp,FWORD PTR [esi+edx*1-0x73]
  402c51:	(bad)  
  402c52:	xor    eax,0x6035802b
  402c57:	fucomi st,st(5)
  402c59:	xchg   ebx,eax
  402c5a:	ror    BYTE PTR [esi-0x2b],0x83
  402c5e:	mov    cl,0xcb
  402c60:	scas   al,BYTE PTR es:[edi]
  402c61:	xor    al,0xc9
  402c63:	shl    ebx,1
  402c65:	lds    eax,FWORD PTR [esi]
  402c67:	jbe    0x402c69
  402c69:	cld    
  402c6a:	ins    DWORD PTR es:[edi],dx
  402c6b:	int3   
  402c6c:	and    BYTE PTR [ebx],bh
  402c6e:	inc    esp
  402c6f:	pop    ss
  402c70:	ins    BYTE PTR es:[edi],dx
  402c71:	ins    DWORD PTR es:[edi],dx
  402c72:	or     BYTE PTR [edi],dh
  402c74:	mov    edx,0xa8699f98
  402c79:	mov    ds:0xe268422a,al
  402c7e:	pop    edi
  402c7f:	outs   dx,BYTE PTR ds:[esi]
  402c80:	jmp    0x402cb0
  402c82:	int    0x59
  402c84:	gs mov dh,0xe0
  402c87:	sti    
  402c88:	mov    ebp,0x6122c0f7
  402c8d:	sar    DWORD PTR [eax+0x65],1
  402c90:	ror    BYTE PTR [edi+0x46],0x4c
  402c94:	out    dx,al
  402c95:	sub    BYTE PTR [edx],al
  402c97:	mov    ah,0x40
  402c99:	jmp    0xe4684ec3
  402c9e:	cs sub eax,0xb664cb3d
  402ca4:	bound  ebx,QWORD PTR [eax]
  402ca6:	fidivr DWORD PTR [esi+0x63073df9]
  402cac:	in     eax,dx
  402cad:	mov    ebx,0xfc0ec24e
  402cb2:	and    ah,ah
  402cb4:	adc    ch,BYTE PTR [edi-0x51c3a6f1]
  402cba:	sahf   
  402cbb:	mov    gs,WORD PTR [esi-0x55]
  402cbe:	xlat   BYTE PTR ds:[ebx]
  402cbf:	mov    DWORD PTR [edi+0x32a70ca6],eax
  402cc5:	mov    cl,0xd1
  402cc7:	jne    0x402c8a
  402cc9:	cmc    
  402cca:	loopne 0x402c82
  402ccc:	and    ebp,DWORD PTR [eax-0x45]
  402ccf:	push   esi
  402cd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cd1:	hlt    
  402cd2:	add    eax,0xfa487c7c
  402cd7:	add    eax,0x64b132b7
  402cdc:	aaa    
  402cdd:	pop    es
  402cde:	pop    ds
  402cdf:	cmp    esp,DWORD PTR [edx-0x58]
  402ce2:	push   esi
  402ce3:	aaa    
  402ce4:	pop    edi
  402ce5:	pusha  
  402ce6:	push   ebp
  402ce7:	ins    DWORD PTR es:[edi],dx
  402ce8:	mov    cl,BYTE PTR [edx]
  402cea:	inc    esi
  402ceb:	test   eax,0x654a2e32
  402cf0:	push   eax
  402cf1:	(bad)  
  402cf2:	jnp    0x402d30
  402cf4:	dec    esi
  402cf5:	sub    al,0x7
  402cf7:	pop    esi
  402cf8:	leave  
  402cf9:	jns    0x402d02
  402cfb:	and    dh,BYTE PTR [eax-0x98b610b]
  402d01:	mov    edi,DWORD PTR [edx-0x1c]
  402d04:	add    al,0x40
  402d06:	out    dx,eax
  402d07:	mov    WORD PTR ds:0x2700308,es
  402d0d:	fwait
  402d0e:	sbb    BYTE PTR [ebp+0x5ec23255],ah
  402d14:	pop    edx
  402d15:	xchg   ecx,eax
  402d16:	xchg   edx,eax
  402d17:	adc    al,0xcb
  402d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d1a:	mov    dh,0x4e
  402d1c:	repnz test al,0x1c
  402d1f:	adc    dh,ch
  402d21:	arpl   WORD PTR [eax-0x231ed9a],sp
  402d27:	mov    edx,0xd3c74fec
  402d2c:	jg     0x402cfa
  402d2e:	pop    esi
  402d2f:	pop    esi
  402d30:	test   DWORD PTR [esi+0x10],esi
  402d33:	or     eax,0x12af6c11
  402d38:	push   cs
  402d39:	mov    ah,0x9b
  402d3b:	xor    DWORD PTR [edi-0x3b5f516d],ebx
  402d41:	jge    0x402d92
  402d43:	jne    0x402d73
  402d45:	test   DWORD PTR [eax+ebp*2],esi
  402d48:	int    0x31
  402d4a:	adc    al,0x79
  402d4c:	lahf   
  402d4d:	mov    ds:0xfe4ceea5,eax
  402d52:	add    BYTE PTR [ebp-0x68],ch
  402d55:	out    0xb7,al
  402d57:	adc    ecx,DWORD PTR [ebx+0x1bfb39ed]
  402d5d:	jns    0x402d81
  402d5f:	xchg   BYTE PTR [edi-0x77],bl
  402d62:	(bad)  
  402d63:	mov    DWORD PTR [ecx],0x789ae8a8
  402d69:	pop    eax
  402d6a:	push   ebx
  402d6b:	jnp    0x402d39
  402d6d:	inc    eax
  402d6e:	mov    ?,ax
  402d71:	xchg   ebp,eax
  402d72:	std    
  402d73:	mov    es,esp
  402d75:	push   0xb0826bf3
  402d7a:	mov    bh,0xb1
  402d7c:	fxam   
  402d7e:	jmp    0x402da9
  402d80:	adc    al,0x3a
  402d82:	pop    edi
  402d83:	xor    eax,0x455459b2
  402d88:	clc    
  402d89:	fs loope 0x402deb
  402d8c:	scas   eax,DWORD PTR es:[edi]
  402d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d8e:	mov    gs,WORD PTR [edx+0x29b886e6]
  402d94:	retf   
  402d95:	xchg   edi,eax
  402d96:	clc    
  402d97:	(bad)  
  402d98:	push   ebx
  402d99:	mov    al,0x30
  402d9b:	fst    QWORD PTR [edi-0x4f]
  402d9e:	arpl   WORD PTR [ecx+0x41],di
  402da1:	cmp    edi,DWORD PTR [esi+0x59e2266c]
  402da7:	xor    eax,0x71930a8e
  402dac:	xchg   esi,eax
  402dad:	aas    
  402dae:	pop    esi
  402daf:	in     al,dx
  402db0:	push   edx
  402db1:	lea    esp,[eax+ebx*2+0x50f9dc40]
  402db8:	xor    al,0x81
  402dba:	jno    0x402e1d
  402dbc:	add    al,0xce
  402dbe:	jae    0x402d47
  402dc0:	pop    ecx
  402dc1:	mov    al,0x21
  402dc3:	sub    eax,0x4f2e33b5
  402dc8:	nop
  402dc9:	cs cli 
  402dcb:	mov    ebp,DWORD PTR [ecx+ebx*2+0x6c]
  402dcf:	sahf   
  402dd0:	scas   al,BYTE PTR es:[edi]
  402dd1:	outs   dx,DWORD PTR ds:[esi]
  402dd2:	std    
  402dd3:	ss daa 
  402dd5:	mov    eax,ds:0xb51354d
  402dda:	fstp   DWORD PTR [esi+0x45]
  402ddd:	and    al,0x1
  402ddf:	std    
  402de0:	out    0x7b,eax
  402de2:	cwde   
  402de3:	fnsave [esi+eax*1+0x3a]
  402de7:	lea    eax,[esi+0x57]
  402dea:	addr16 test al,0x36
  402ded:	add    ebx,0x7508a86f
  402df3:	in     eax,dx
  402df4:	out    0xc3,al
  402df6:	repz (bad) 
  402df8:	jbe    0x402dc2
  402dfa:	inc    eax
  402dfb:	sbb    cl,BYTE PTR [esp+ebp*8-0x6c]
  402dff:	(bad)  
  402e00:	adc    bh,ah
  402e02:	scas   al,BYTE PTR es:[edi]
  402e03:	mov    cl,0x81
  402e05:	ss sub dl,ch
  402e08:	fbld   TBYTE PTR [edx-0x435b5a39]
  402e0e:	jb     0x402e61
  402e10:	jns    0x402d9e
  402e12:	dec    esi
  402e13:	adc    DWORD PTR [esi-0x3598a5c1],eax
  402e19:	inc    ecx
  402e1a:	iret   
  402e1b:	sub    eax,0x6796d5e
  402e20:	call   0xac368770
  402e25:	push   esi
  402e26:	std    
  402e27:	fimul  WORD PTR [ebx-0x72]
  402e2a:	imul   ebx,DWORD PTR [esi+0x7135d8f4],0x30
  402e31:	push   ds
  402e32:	add    eax,0x9c256463
  402e37:	jbe    0x402dfa
  402e39:	ss mov ah,0x8e
  402e3c:	outs   dx,BYTE PTR ds:[esi]
  402e3d:	push   ss
  402e3e:	enter  0x6d91,0xb2
  402e42:	inc    ebp
  402e43:	mov    ch,0x10
  402e45:	pop    edi
  402e46:	add    eax,0xec27820f
  402e4b:	xlat   BYTE PTR ds:[ebx]
  402e4c:	aaa    
  402e4d:	push   edx
  402e4e:	inc    ebx
  402e4f:	ror    eax,0x57
  402e52:	cmp    bp,si
  402e55:	xor    al,0xb0
  402e57:	sub    DWORD PTR [edx+0x29],edi
  402e5a:	loope  0x402e79
  402e5c:	retf   
  402e5d:	fbstp  TBYTE PTR [ebp-0x4a]
  402e60:	test   al,0x5f
  402e62:	retf   0xb73b
  402e65:	test   ebx,ebx
  402e67:	(bad)  
  402e68:	std    
  402e69:	cmp    al,ah
  402e6b:	pushw  0x8fd2
  402e6f:	test   DWORD PTR [edi],ecx
  402e71:	jns    0x402e79
  402e73:	jle    0x402ecd
  402e75:	xchg   ecx,eax
  402e76:	int    0x73
  402e78:	add    dl,BYTE PTR [ecx]
  402e7a:	cmp    bl,BYTE PTR [esi+0x65]
  402e7d:	mov    eax,0x55721b1
  402e82:	jp     0x402f01
  402e84:	data16 adc al,BYTE PTR [ecx]
  402e87:	jb     0x402e1e
  402e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e8a:	int    0x78
  402e8c:	push   es
  402e8d:	mov    bl,0x30
  402e8f:	fiadd  DWORD PTR [edx]
  402e91:	ins    DWORD PTR es:[edi],dx
  402e92:	jns    0x402e16
  402e94:	jno    0x402e8b
  402e96:	ins    BYTE PTR es:[edi],dx
  402e97:	stos   DWORD PTR es:[edi],eax
  402e98:	pop    ebp
  402e99:	mov    esp,0x7a79f8c8
  402e9e:	push   es
  402e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ea0:	xchg   ebx,eax
  402ea1:	mov    dh,0x3f
  402ea3:	mov    ah,0xee
  402ea5:	jo     0x402eb0
  402ea7:	lods   eax,DWORD PTR ds:[esi]
  402ea8:	nop
  402ea9:	xchg   ecx,eax
  402eaa:	push   esi
  402eab:	std    
  402eac:	adc    BYTE PTR [eax-0x57364089],ch
  402eb2:	cmp    eax,0xa95f60d8
  402eb7:	push   esp
  402eb8:	or     eax,0x39d31a4a
  402ebd:	inc    esi
  402ebe:	jnp    0x402ed1
  402ec0:	mov    dh,0xc5
  402ec2:	aam    0x50
  402ec4:	pop    edi
  402ec5:	jno    0x402f01
  402ec7:	ret    0xc375
  402eca:	rol    BYTE PTR [ebp-0x57cfc2b0],0x6d
  402ed1:	iret   
  402ed2:	adc    BYTE PTR [esp],al
  402ed5:	sub    DWORD PTR [edi],0xfffffff7
  402ed8:	(bad)  
  402ed9:	mov    al,0x41
  402edb:	sub    dl,dh
  402edd:	mov    eax,0x651039dd
  402ee2:	or     BYTE PTR [ecx],al
  402ee4:	xor    ebx,esi
  402ee6:	aas    
  402ee7:	push   edi
  402ee8:	daa    
  402ee9:	push   ebp
  402eea:	mov    al,ds:0x5ca115e5
  402eef:	scas   al,BYTE PTR es:[edi]
  402ef0:	push   edx
  402ef1:	shr    DWORD PTR [esi+0xcbed380],1
  402ef7:	jne    0x402f4d
  402ef9:	stos   DWORD PTR es:[edi],eax
  402efa:	sar    ebx,cl
  402efc:	test   DWORD PTR [ecx-0x2de8e8c6],0x187a36d9
  402f06:	test   DWORD PTR [eax+0x680bdaab],ecx
  402f0c:	test   DWORD PTR [ecx],0xa9c43728
  402f12:	xchg   ebx,eax
  402f13:	sub    ebp,ebx
  402f15:	jmp    0xcf4e9826
  402f1a:	cwde   
  402f1b:	mov    dl,0x42
  402f1d:	jnp    0x402ea1
  402f1f:	jmp    0x5545:0xde26a45e
  402f26:	(bad)  
  402f27:	ds call 0xca6468ac
  402f2d:	fld    DWORD PTR [edx-0x4ae8cfdd]
  402f33:	loop   0x402faa
  402f35:	mov    ds:0xc726a06b,al
  402f3a:	mov    cl,0xbf
  402f3c:	push   edi
  402f3d:	ret    0xb9c3
  402f40:	jae    0x402ece
  402f42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f43:	(bad)  
  402f45:	nop
  402f46:	mov    dl,0xb2
  402f48:	fld    QWORD PTR [ebx+0x192a5796]
  402f4e:	xor    al,0x92
  402f50:	stos   DWORD PTR es:[edi],eax
  402f51:	and    DWORD PTR [edx-0x66],ebx
  402f54:	mov    al,ds:0xe665740b
  402f59:	mov    al,ds:0x9075d9dc
  402f5e:	out    dx,eax
  402f5f:	shl    DWORD PTR [ebx-0x7516d76d],cl
  402f65:	sahf   
  402f66:	push   ecx
  402f67:	or     ah,BYTE PTR [ebx]
  402f69:	stc    
  402f6a:	sahf   
  402f6b:	dec    edx
  402f6c:	cmp    bl,BYTE PTR [edx+0x33b3ed42]
  402f72:	inc    ebx
  402f73:	pusha  
  402f74:	push   0x56
  402f76:	xor    eax,0x97b8c288
  402f7b:	jns    0x402fb6
  402f7d:	xchg   esi,eax
  402f7e:	int    0x81
  402f80:	fisubr DWORD PTR [eax+0x5e]
  402f83:	hlt    
  402f84:	test   DWORD PTR [ebp+0x6f],esi
  402f87:	pop    esp
  402f88:	loopne 0x402fc1
  402f8a:	fmul   QWORD PTR [edi+0x6edd9b4c]
  402f90:	adc    DWORD PTR [ecx+0x79a38e39],edi
  402f96:	mov    ah,0x1
  402f98:	add    BYTE PTR [ebx+eax*1-0x32],dl
  402f9c:	jge    0x402f43
  402f9e:	pop    esp
  402f9f:	push   cs
  402fa0:	cs jg  0x402fc8
  402fa3:	aas    
  402fa4:	and    bh,BYTE PTR [eax+0x43]
  402fa7:	ss ins BYTE PTR es:[edi],dx
  402fa9:	or     al,0xd8
  402fab:	mov    ds:0xd856805f,eax
  402fb0:	mov    al,ss:0xfdb28550
  402fb6:	sub    ch,BYTE PTR [edi]
  402fb8:	dec    eax
  402fb9:	test   esp,ecx
  402fbb:	loop   0x402fd2
  402fbd:	xor    ah,dh
  402fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fc0:	ins    BYTE PTR es:[edi],dx
  402fc1:	aaa    
  402fc2:	(bad)  
  402fc3:	jbe    0x402f9f
  402fc5:	mov    eax,0xfae8ceb
  402fca:	xchg   esi,eax
  402fcb:	mov    ds:0xdeeb85be,al
  402fd0:	lock cld 
  402fd2:	sub    al,0xc6
  402fd4:	pop    esi
  402fd5:	adc    DWORD PTR [ebx],0xffffffaa
  402fd8:	loopne 0x40301d
  402fda:	int3   
  402fdb:	stc    
  402fdc:	inc    ebx
  402fdd:	inc    edi
  402fde:	jle    0x403039
  402fe0:	shl    DWORD PTR [ecx],1
  402fe2:	out    0x70,eax
  402fe4:	mov    ebx,esi
  402fe6:	loope  0x402f80
  402fe8:	nop
  402fe9:	stos   DWORD PTR es:[edi],eax
  402fea:	ret    
  402feb:	mov    ch,BYTE PTR [edx]
  402fed:	add    DWORD PTR [ebp+0x6af6a70f],ebp
  402ff3:	out    dx,eax
  402ff4:	(bad)  
  402ff6:	cmp    dl,0xc
  402ff9:	cmp    esp,DWORD PTR [ecx-0x4f0581f8]
  402fff:	les    ebp,FWORD PTR [ecx-0x9]
  403002:	adc    eax,0x7ae31cb7
  403007:	push   esi
  403008:	add    dh,BYTE PTR [edx]
  40300a:	fsub   DWORD PTR [edi-0x75]
  40300d:	xlat   BYTE PTR ds:[ebx]
  40300e:	aaa    
  40300f:	dec    edx
  403010:	push   ds
  403011:	jmp    0x403034
  403013:	jo     0x403066
  403015:	lea    esp,es:[eax-0x21]
  403019:	scas   eax,DWORD PTR es:[edi]
  40301a:	cmp    eax,0xacbc6ee9
  40301f:	dec    eax
  403020:	jns    0x402fbc
  403022:	xlat   BYTE PTR ds:[ebx]
  403023:	(bad)  
  403025:	retf   0x56fa
  403028:	pop    esi
  403029:	push   0xd41d4656
  40302e:	arpl   WORD PTR [edi-0x689bc4c],cx
  403034:	lea    edx,[ebp-0x7b7773c1]
  40303a:	jle    0x403021
  40303c:	push   DWORD PTR cs:[ebp-0x44b1886]
  403043:	push   0xffffffae
  403045:	shl    DWORD PTR [esp+edx*1-0x68e35eee],1
  40304c:	out    dx,eax
  40304d:	gs (bad) 
  40304f:	imul   esp,DWORD PTR [edx],0x54c3c4bc
  403055:	xchg   edx,eax
  403056:	push   ebp
  403057:	xor    BYTE PTR [ebp+0x3a],bl
  40305a:	xchg   edx,eax
  40305b:	cmp    BYTE PTR [esi],0x17
  40305e:	test   esi,ecx
  403060:	push   ebp
  403061:	push   esp
  403062:	inc    esp
  403063:	sbb    dh,BYTE PTR [esi]
  403065:	popa   
  403066:	popa   
  403067:	mov    BYTE PTR [edi+0x75],0xad
  40306b:	jae    0x4030c8
  40306d:	repnz mov esi,0x433549f8
  403073:	inc    ecx
  403074:	iret   
  403075:	jae    0x40300c
  403077:	(bad)  
  403078:	in     al,dx
  403079:	jo     0x4030d9
  40307b:	nop    DWORD PTR [eax-0x33]
  40307f:	mov    ecx,0xecc6647b
  403084:	push   0x73
  403086:	jg     0x4030fb
  403088:	or     al,0x50
  40308a:	pop    ebp
  40308b:	or     cl,al
  40308d:	leave  
  40308e:	movaps XMMWORD PTR [esi+0x65],xmm6
  403092:	add    BYTE PTR [ecx+0x72],dl
  403095:	sbb    BYTE PTR [esi],bh
  403097:	fwait
  403098:	sbb    edi,DWORD PTR [edi]
  40309a:	ds jmp 0x79bb7e23
  4030a0:	xchg   edx,eax
  4030a1:	cmp    DWORD PTR [edi-0x35275741],ecx
  4030a7:	mov    ebx,0x62241fac
  4030ac:	mov    dl,0x5d
  4030ae:	push   es
  4030af:	(bad)  
  4030b0:	mov    bh,0x52
  4030b2:	pop    edx
  4030b3:	shr    BYTE PTR [ecx],1
  4030b5:	out    dx,al
  4030b6:	ret    0x8ce7
  4030b9:	ret    0x8e32
  4030bc:	jmp    0x4030f4
  4030be:	fsubr  st,st(3)
  4030c0:	jecxz  0x40311e
  4030c2:	cwde   
  4030c3:	cwde   
  4030c4:	rol    DWORD PTR [edi],0x6c
  4030c7:	imul   edx,DWORD PTR [ebx-0x1fa7cbb0],0x9d1a3d39
  4030d1:	pop    ebp
  4030d2:	sar    edi,1
  4030d4:	add    ch,ch
  4030d6:	jae    0x4030b2
  4030d8:	add    dh,BYTE PTR [ebx]
  4030da:	push   ss
  4030db:	sub    DWORD PTR [ebx+0x4a557d],edi
  4030e1:	into   
  4030e2:	dec    ebx
  4030e3:	sar    cl,cl
  4030e5:	clc    
  4030e6:	rol    cl,1
  4030e8:	fst    DWORD PTR [ebx+0x665c0d51]
  4030ee:	mov    ebp,0x282c8c56
  4030f3:	test   cl,0x4f
  4030f6:	mov    al,0x16
  4030f8:	int3   
  4030f9:	xchg   BYTE PTR [edx],ch
  4030fb:	(bad)  
  4030fd:	pop    ebp
  4030fe:	mov    eax,ds:0x90d772a9
  403103:	out    0x17,al
  403105:	into   
  403106:	inc    ebp
  403107:	shl    DWORD PTR [eax],cl
  403109:	mul    DWORD PTR ds:[edi]
  40310c:	popa   
  40310d:	stos   DWORD PTR es:[edi],eax
  40310e:	out    dx,eax
  40310f:	jle    0x40314e
  403111:	repnz inc esp
  403113:	loope  0x40316a
  403115:	je     0x4030a6
  403117:	es pop eax
  403119:	rcl    ebx,0x2e
  40311c:	aam    0x37
  40311e:	or     eax,0xc6b01faf
  403123:	mov    eax,0x4eda344b
  403128:	mul    eax
  40312a:	add    edx,DWORD PTR [ebx]
  40312c:	jne    0x403157
  40312e:	adc    bh,BYTE PTR [ecx+0x31]
  403131:	mov    ebx,DWORD PTR [esi]
  403133:	jmp    0xce3518cd
  403138:	enter  0x9b97,0x13
  40313c:	inc    ebp
  40313d:	push   ss
  40313e:	xchg   esi,eax
  40313f:	je     0x4030fe
  403141:	and    ch,0xcb
  403144:	nop
  403145:	sbb    bh,BYTE PTR [ecx]
  403147:	mov    bx,0x6336
  40314b:	fs sti 
  40314d:	imul   ecx
  40314f:	nop
  403150:	repz add BYTE PTR [ecx-0x9],ah
  403154:	jbe    0x403124
  403156:	jbe    0x4031a0
  403158:	int3   
  403159:	leave  
  40315a:	sub    al,0x38
  40315c:	cmp    esp,edi
  40315e:	cmp    dl,cl
  403160:	xchg   edi,eax
  403161:	and    al,0x92
  403163:	ret    0x5794
  403166:	aas    
  403167:	loop   0x40311d
  403169:	test   BYTE PTR [edx],0xa9
  40316c:	adc    edx,DWORD PTR [eax-0x33]
  40316f:	ja     0x4031e5
  403171:	xor    ah,BYTE PTR [ecx-0x64]
  403174:	pusha  
  403175:	pop    ecx
  403176:	inc    esi
  403177:	lods   al,BYTE PTR ds:[esi]
  403178:	push   ebx
  403179:	rcr    BYTE PTR [ebx-0x504a533f],1
  40317f:	sub    esp,DWORD PTR [edi+0x4c]
  403182:	scas   eax,DWORD PTR es:[edi]
  403183:	inc    edi
  403184:	test   al,0xce
  403186:	cmp    bl,BYTE PTR [edi+0x31]
  403189:	pushf  
  40318a:	pop    es
  40318b:	jbe    0x4031cd
  40318d:	sub    eax,0xa2e99122
  403192:	aaa    
  403193:	cmc    
  403194:	jge    0x4031da
  403196:	or     al,0x5a
  403198:	add    bh,BYTE PTR [edx-0x60]
  40319b:	popa   
  40319c:	test   DWORD PTR [edx+0x44a4c5b6],edi
  4031a2:	pop    es
  4031a3:	mov    bl,BYTE PTR [ebx+esi*4+0x3a7d672e]
  4031aa:	dec    ebp
  4031ab:	pop    esi
  4031ac:	js     0x403152
  4031ae:	inc    ecx
  4031af:	bound  edi,QWORD PTR [esi-0x5eebd33]
  4031b5:	pop    edx
  4031b6:	mov    dl,0x7b
  4031b8:	call   0xb3b6:0x5407b53b
  4031bf:	push   ss
  4031c0:	ins    BYTE PTR es:[edi],dx
  4031c1:	mul    DWORD PTR [edi-0x3f]
  4031c4:	sbb    al,0xb8
  4031c6:	jbe    0x4031e3
  4031c8:	imul   eax,esi,0xffffffb0
  4031cb:	xor    DWORD PTR [edx-0x139fc5aa],0xffffffa4
  4031d2:	(bad)  
  4031d3:	adc    al,0x15
  4031d5:	adc    ebx,edi
  4031d7:	cmp    eax,0xee1a243a
  4031dc:	mov    esi,0xf2b700e0
  4031e1:	dec    edx
  4031e2:	lea    ecx,[ecx+0x1e]
  4031e5:	pop    ds
  4031e6:	adc    eax,ecx
  4031e8:	sar    DWORD PTR [eax-0x54802a08],0x5d
  4031ef:	jmp    0x605e:0x6b0f273
  4031f6:	xchg   DWORD PTR [ebx+eiz*2],ebp
  4031f9:	scas   al,BYTE PTR es:[edi]
  4031fa:	push   0x3caf7da5
  4031ff:	or     BYTE PTR [ecx+0x95f0852],bl
  403205:	dec    ebp
  403206:	iret   
  403207:	jae    0x40320b
  403209:	(bad)  
  40320a:	pop    ds
  40320b:	inc    ebp
  40320c:	in     eax,dx
  40320d:	dec    eax
  40320e:	adc    al,0xb9
  403210:	sub    DWORD PTR ds:0x6255e6fa,edx
  403216:	inc    esp
  403217:	icebp  
  403218:	mov    edx,DWORD PTR [ecx]
  40321a:	adc    al,BYTE PTR [edi-0x7c0dbe49]
  403220:	sub    dl,BYTE PTR [ecx-0x621af2d9]
  403226:	xchg   edx,eax
  403227:	jg     0x4031ca
  403229:	lods   al,BYTE PTR ds:[esi]
  40322a:	fsubr  QWORD PTR [ebp+edx*2-0x16]
  40322e:	push   cs
  40322f:	adc    cl,al
  403231:	adc    eax,0x5003e4ee
  403236:	jns    0x40321e
  403238:	mov    eax,ds:0x58a1a4e4
  40323d:	icebp  
  40323e:	sub    al,BYTE PTR [ebx]
  403240:	enter  0xef42,0x82
  403244:	add    ah,BYTE PTR [bx+0x1212]
  403249:	std    
  40324a:	mov    eax,ds:0xda175319
  40324f:	out    0xcf,eax
  403251:	bound  esp,QWORD PTR [ecx+0xa025347]
  403257:	sbb    BYTE PTR [eax-0xeae4ca5],ch
  40325d:	sahf   
  40325e:	aas    
  40325f:	fsubr  QWORD PTR [edi+0x62]
  403262:	repnz out 0x97,eax
  403265:	outs   dx,DWORD PTR ds:[esi]
  403266:	fist   DWORD PTR [edi+0x73]
  403269:	jbe    0x4031ec
  40326b:	cwde   
  40326c:	ja     0x403266
  40326e:	pop    esp
  40326f:	prefetchw BYTE PTR [ebx+0x26]
  403273:	popw   es
  403275:	xchg   ebp,eax
  403276:	cmp    al,0x8d
  403278:	call   0x917c:0x1f1e7793
  40327f:	add    BYTE PTR [eax+0x46],bl
  403282:	loop   0x403214
  403284:	mov    eax,0x59ef51d3
  403289:	ret    0xf96f
  40328c:	repnz (bad) 
  40328e:	jp     0x403220
  403290:	cmp    dh,BYTE PTR [eax-0x27d4abd9]
  403296:	aad    0x1c
  403298:	xor    al,0x12
  40329a:	pushf  
  40329b:	xor    DWORD PTR [eax-0x200e11a7],ebx
  4032a1:	jmp    0x9e82:0xcb2c24db
  4032a8:	cmc    
  4032a9:	lods   al,BYTE PTR ds:[esi]
  4032aa:	xchg   ebp,eax
  4032ab:	ror    BYTE PTR gs:[ebp-0x25f7bb96],0xbb
  4032b3:	inc    esi
  4032b4:	popf   
  4032b5:	stos   BYTE PTR es:[edi],al
  4032b6:	lock loop 0x403334
  4032b9:	sub    ecx,edx
  4032bb:	repz inc ebp
  4032bd:	xor    dl,bh
  4032bf:	dec    edi
  4032c0:	pop    edi
  4032c1:	xchg   esp,eax
  4032c2:	push   es
  4032c3:	dec    ebp
  4032c4:	or     BYTE PTR [edi],dh
  4032c6:	jp     0x403251
  4032c8:	pushf  
  4032c9:	add    al,0x3f
  4032cb:	imul   esp,DWORD PTR [eax+0x2f869e0b],0x79
  4032d2:	sbb    al,0x97
  4032d4:	lods   al,BYTE PTR ds:[esi]
  4032d5:	add    eax,0x42f1ed5
  4032da:	imul   esi,DWORD PTR [esi-0x12cc8ce8],0x3c
  4032e1:	daa    
  4032e2:	sbb    al,0x5
  4032e4:	(bad)  
  4032e5:	imul   eax,DWORD PTR [edx-0x5c67dc1e],0xffffffaa
  4032ec:	dec    eax
  4032ed:	adc    al,BYTE PTR [esi+0x5c]
  4032f0:	dec    esi
  4032f1:	xchg   esp,eax
  4032f2:	dec    ebp
  4032f3:	retf   0x84c4
  4032f6:	sub    bl,BYTE PTR [edi-0x65]
  4032f9:	inc    esi
  4032fa:	mov    ebp,ebp
  4032fc:	les    edi,FWORD PTR [edi]
  4032fe:	ret    0x67d9
  403301:	or     esi,DWORD PTR [ecx+ecx*8+0x77]
  403305:	daa    
  403306:	mov    ebx,0x6d690774
  40330b:	mov    ecx,0x3c03afea
  403310:	ror    esi,cl
  403312:	loope  0x4032d8
  403314:	loopne 0x4032ee
  403316:	mov    eax,ds:0x5e8802ce
  40331b:	retf   0x7f25
  40331e:	push   0xffffff9e
  403320:	rol    BYTE PTR [ecx+0x78],cl
  403323:	push   cs
  403324:	sbb    eax,0x9685ba10
  403329:	and    edi,DWORD PTR [edi-0x3058a9f0]
  40332f:	mov    ebp,0xe8a2574e
  403334:	and    eax,0x6c51e20a
  403339:	aam    0x8
  40333b:	hlt    
  40333c:	jne    0x40339f
  40333e:	je     0x403344
  403340:	loopne 0x403368
  403342:	inc    esi
  403343:	xor    eax,0x9c99930d
  403348:	(bad)  
  40334a:	mov    db5,edi
  40334d:	pop    ds
  40334e:	mov    bl,0x18
  403350:	sub    dl,bh
  403352:	in     eax,0xf7
  403354:	add    eax,0xdd456e38
  403359:	fwait
  40335a:	add    DWORD PTR [ebx+esi*8],esp
  40335d:	or     al,0x9b
  40335f:	cmp    BYTE PTR [ebp-0x2813dbc0],cl
  403365:	push   esp
  403366:	add    DWORD PTR [edi+eax*1-0x7e],eax
  40336a:	int3   
  40336b:	ss jo  0x40339c
  40336e:	adc    dh,0x4c
  403371:	sub    al,0x82
  403373:	mov    ebx,0x6128dcd4
  403378:	inc    DWORD PTR [edi-0x4322d202]
  40337e:	adc    ebp,DWORD PTR [eax-0x7]
  403381:	push   ebx
  403382:	jbe    0x4033f6
  403384:	retf   
  403385:	sbb    BYTE PTR ss:[esi-0x77],ah
  403389:	fidivr WORD PTR [esi+0x4056222b]
  40338f:	or     ebx,ebx
  403391:	push   cs
  403392:	dec    ecx
  403393:	mov    edi,0x96df5356
  403398:	clc    
  403399:	fadd   QWORD PTR [edi+0x4e92b005]
  40339f:	push   esi
  4033a0:	dec    esi
  4033a1:	and    BYTE PTR [edi+0xcd9bad0],cl
  4033a7:	cli    
  4033a8:	jmp    0x84bb2579
  4033ad:	es jne 0x4033fe
  4033b0:	pop    ecx
  4033b1:	jb     0x4033e6
  4033b3:	sub    ecx,ebp
  4033b5:	(bad)  
  4033b6:	and    eax,0xd96613a5
  4033bb:	xor    BYTE PTR [edi+0x7d],0x89
  4033bf:	inc    edi
  4033c0:	jmp    0x40340e
  4033c2:	pop    edx
  4033c3:	in     al,0xfe
  4033c5:	repz mov ch,0x1b
  4033c8:	iret   
  4033c9:	pop    edx
  4033ca:	ja     0x4033fd
  4033cc:	outs   dx,DWORD PTR ds:[esi]
  4033cd:	sub    BYTE PTR [edi-0x57],dl
  4033d0:	loop   0x4033af
  4033d2:	sub    al,0x6c
  4033d4:	and    DWORD PTR [edi],eax
  4033d6:	aas    
  4033d7:	and    eax,0xc97d40e6
  4033dc:	test   dl,ah
  4033de:	mov    DWORD PTR [ebx-0x53bef999],eax
  4033e4:	jmp    0x403389
  4033e6:	cmp    al,0xfe
  4033e8:	adc    DWORD PTR [ebp+0x15],ebx
  4033eb:	xor    al,0xaa
  4033ed:	popa   
  4033ee:	inc    ecx
  4033ef:	xor    al,0xbb
  4033f1:	ret    
  4033f2:	outs   dx,BYTE PTR ds:[esi]
  4033f3:	or     al,0x1
  4033f5:	jle    0x40340f
  4033f7:	and    ecx,esi
  4033f9:	sub    eax,0x4c4c1c5e
  4033fe:	(bad)  
  4033ff:	in     eax,dx
  403400:	out    dx,eax
  403401:	std    
  403402:	add    edx,esp
  403404:	inc    esp
  403405:	xchg   esi,eax
  403406:	inc    ebp
  403407:	not    BYTE PTR [ebx]
  403409:	cwde   
  40340a:	adc    eax,0x88542d1a
  40340f:	(bad)  
  403410:	jmp    0x70e1:0x5b37707c
  403417:	jecxz  0x403438
  403419:	push   0xffffffdd
  40341b:	push   eax
  40341c:	loopne 0x403478
  40341e:	adc    eax,0xd7f2094d
  403423:	dec    ecx
  403424:	jnp    0x403420
  403426:	sub    al,0x15
  403428:	mov    edx,0x8b97083e
  40342d:	xchg   ecx,eax
  40342e:	dec    BYTE PTR [ebx+0x20e4ce35]
  403434:	pushf  
  403435:	dec    ebx
  403436:	add    BYTE PTR [eax-0x24],cl
  403439:	xor    DWORD PTR [esi],ecx
  40343b:	iret   
  40343c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40343d:	js     0x403472
  40343f:	cmc    
  403440:	stos   BYTE PTR es:[edi],al
  403441:	jne    0x40343a
  403443:	lods   al,BYTE PTR ds:[esi]
  403444:	add    cl,al
  403446:	scas   eax,DWORD PTR es:[edi]
  403447:	stos   DWORD PTR es:[edi],eax
  403448:	fs mov edi,0x2d827a5d
  40344e:	mov    dh,0xf4
  403450:	sub    esp,ecx
  403452:	(bad)  
  403454:	stos   DWORD PTR es:[edi],eax
  403455:	enter  0x23c2,0xf2
  403459:	popf   
  40345a:	sbb    ebx,DWORD PTR [eax-0x15a68b92]
  403460:	sbb    al,0x29
  403462:	nop    DWORD PTR [esi-0x54]
  403466:	add    eax,0x3c2dba6d
  40346b:	outs   dx,BYTE PTR ds:[esi]
  40346c:	or     bl,BYTE PTR [ebx+ecx*4+0x5ff5060a]
  403473:	out    dx,eax
  403474:	xchg   ebx,eax
  403475:	stc    
  403476:	add    eax,0x1e8ac6e
  40347b:	sti    
  40347c:	outs   dx,DWORD PTR ds:[esi]
  40347d:	ret    
  40347e:	out    dx,eax
  40347f:	rcr    DWORD PTR [esi+0x11],0x63
  403483:	fmul   QWORD PTR [ebx]
  403485:	pop    ebx
  403486:	dec    esp
  403487:	xor    BYTE PTR [eax+edi*2+0x48],dl
  40348b:	test   al,0x9d
  40348d:	outs   dx,DWORD PTR ds:[esi]
  40348e:	ss sahf 
  403490:	xor    al,0x5b
  403492:	into   
  403493:	cwde   
  403494:	ins    DWORD PTR es:[edi],dx
  403495:	outs   dx,BYTE PTR ds:[esi]
  403496:	dec    ebp
  403497:	dec    eax
  403498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403499:	in     eax,dx
  40349a:	rcr    BYTE PTR [edx],cl
  40349c:	jmp    0x7c16:0xa3903781
  4034a3:	sbb    esi,DWORD PTR [ebx-0x21aaf989]
  4034a9:	inc    edi
  4034aa:	popf   
  4034ab:	sbb    BYTE PTR [eax+0x473a8514],bl
  4034b1:	pop    esp
  4034b2:	fbld   TBYTE PTR [eax]
  4034b4:	xchg   DWORD PTR [edi+0x525b3dd9],eax
  4034ba:	test   BYTE PTR [esi+0x61],dl
  4034bd:	jp     0x403475
  4034bf:	imul   esp,ebp,0xffffff82
  4034c2:	cmp    DWORD PTR [ecx],esp
  4034c4:	out    0x38,al
  4034c6:	add    BYTE PTR [ebx-0x2cf66ef3],cl
  4034cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034cd:	push   eax
  4034ce:	dec    ecx
  4034cf:	in     eax,0x55
  4034d1:	inc    eax
  4034d2:	out    dx,eax
  4034d3:	and    BYTE PTR [edx-0x566cf548],al
  4034d9:	mov    dh,BYTE PTR [esi+0x12]
  4034dc:	dec    eax
  4034de:	add    eax,0xb3faf42d
  4034e3:	jl     0x403485
  4034e5:	out    0x8f,al
  4034e7:	scas   al,BYTE PTR es:[edi]
  4034e8:	mov    DWORD PTR [eax+0x554e7fce],esi
  4034ee:	pusha  
  4034ef:	and    esp,ecx
  4034f1:	add    ecx,DWORD PTR [ebx+edi*4]
  4034f4:	adc    eax,0xd5e5f185
  4034f9:	sti    
  4034fa:	dec    ebx
  4034fb:	or     ebx,ebx
  4034fd:	fld    DWORD PTR [esi+0x2d]
  403500:	lds    eax,FWORD PTR [edx-0x52]
  403503:	xchg   BYTE PTR [edx-0x5feef989],dh
  403509:	(bad)  
  40350a:	(bad)  
  40350b:	aas    
  40350c:	mov    esi,0x63728154
  403511:	das    
  403512:	shr    DWORD PTR [ebp-0x56],cl
  403515:	pop    es
  403516:	xor    al,0xe7
  403518:	lea    ecx,[edi+0x584d3bb]
  40351e:	cmp    DWORD PTR [esi+esi*8+0xf04e32],edx
  403525:	call   0x95805dd4
  40352a:	gs pop edi
  40352c:	sbb    BYTE PTR [ecx+ecx*4],bh
  40352f:	test   DWORD PTR [edi+eax*8],esp
  403532:	mov    dl,0xc4
  403534:	fs add eax,0xb1667793
  40353a:	rcl    ebp,cl
  40353c:	out    0x78,al
  40353e:	daa    
  40353f:	xor    al,ch
  403541:	imul   DWORD PTR [esi*2+0x4812a151]
  403548:	pop    ds
  403549:	cdq    
  40354a:	inc    eax
  40354b:	sub    bh,BYTE PTR [esi+eiz*4-0x27]
  40354f:	lods   al,BYTE PTR ds:[esi]
  403550:	sbb    DWORD PTR [edi-0x4d36b1a2],esp
  403556:	aad    0xdb
  403558:	dec    ecx
  403559:	fadd   st,st(1)
  40355b:	mov    esp,0x9e0cb03b
  403560:	imul   edi,DWORD PTR [edx+0x7e],0xfdeea484
  403567:	cmp    DWORD PTR [eax],edx
  403569:	jg     0x403529
  40356b:	dec    edx
  40356c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40356d:	sbb    dh,bh
  40356f:	daa    
  403570:	sbb    edi,0xf8b06fc4
  403576:	push   esp
  403577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403578:	imul   ecx,DWORD PTR ds:0x3491c0a6,0xffffffba
  40357f:	mov    dl,0xad
  403581:	xchg   ebp,eax
  403582:	add    ah,BYTE PTR [esi-0xf]
  403585:	(bad)  
  403587:	adc    ah,BYTE PTR [edi-0x7714e78c]
  40358d:	or     eax,0x3e024994
  403592:	adc    BYTE PTR [ebx],dl
  403594:	pop    eax
  403595:	test   BYTE PTR [eax],ah
  403597:	ja     0x403575
  403599:	add    DWORD PTR [edx+0x5a221f96],ebp
  40359f:	in     al,0xb9
  4035a1:	std    
  4035a2:	pop    eax
  4035a3:	and    eax,0x4d6ffa6c
  4035a8:	into   
  4035a9:	jbe    0x4035b0
  4035ab:	adc    bl,BYTE PTR [eax+edi*4+0x7c]
  4035af:	sbb    BYTE PTR [edx-0x39e3d28f],dh
  4035b5:	repz test DWORD PTR [ecx-0x3a],edx
  4035b9:	stos   BYTE PTR es:[edi],al
  4035ba:	push   eax
  4035bb:	shl    DWORD PTR [esi],0x87
  4035be:	or     DWORD PTR [ebx],ebx
  4035c0:	adc    al,0xc8
  4035c2:	(bad)
  4035c5:	push   esi
  4035c6:	jecxz  0x4035a6
  4035c8:	jno    0x40359d
  4035ca:	or     eax,0x83577f25
  4035cf:	push   edi
  4035d0:	hlt    
  4035d1:	mov    edi,DWORD PTR [edi-0x2b]
  4035d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035d5:	mov    eax,ds:0x8b79e8c5
  4035da:	mov    bh,0xf7
  4035dc:	push   edi
  4035dd:	push   ss
  4035de:	push   edi
  4035df:	jb     0x40365b
  4035e1:	loop   0x403643
  4035e3:	mov    bh,0x4a
  4035e5:	test   eax,0x44e59217
  4035ea:	retf   
  4035eb:	out    dx,eax
  4035ec:	jl     0x40361b
  4035ee:	mov    ecx,0xbb00f674
  4035f3:	add    BYTE PTR [ebx-0x3e],dl
  4035f6:	cdq    
  4035f7:	jne    0x4035dd
  4035f9:	xlat   BYTE PTR ds:[ebx]
  4035fa:	sub    al,0x57
  4035fc:	es in  al,dx
  4035fe:	fild   WORD PTR [ebp+0x53]
  403601:	dec    esp
  403602:	popf   
  403603:	scas   al,BYTE PTR es:[edi]
  403604:	mov    eax,0xdd33b53e
  403609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40360a:	mov    cl,0xe2
  40360c:	and    dl,bl
  40360e:	mov    ds:0xff47eb04,eax
  403613:	and    edi,DWORD PTR [esi-0x2a]
  403616:	hlt    
  403617:	push   edx
  403618:	sub    al,0x34
  40361a:	scas   al,BYTE PTR es:[edi]
  40361b:	icebp  
  40361c:	jmp    0xc90c:0xbb7f92ec
  403623:	jno    0x4036a3
  403625:	xchg   ebx,eax
  403626:	push   edi
  403627:	test   al,0x28
  403629:	mov    es,edi
  40362b:	inc    esi
  40362c:	mov    ecx,0xd779e263
  403631:	daa    
  403632:	mov    eax,edi
  403634:	(bad)  
  403635:	xchg   ecx,eax
  403636:	push   ebx
  403637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403638:	jge    0x4035c4
  40363a:	cmp    edx,esp
  40363c:	jle    0x4035d2
  40363e:	mov    bh,0xdf
  403640:	loope  0x4035ea
  403642:	mov    DWORD PTR [edx],ecx
  403644:	cmp    BYTE PTR [edi],ch
  403646:	ficomp DWORD PTR [eax+0x6a]
  403649:	int3   
  40364a:	add    eax,0x87e1687
  40364f:	ss sahf 
  403651:	(bad)  
  403652:	out    0x7b,al
  403654:	xchg   ebp,eax
  403655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403656:	mov    DWORD PTR [edx],esi
  403658:	imul   esi,DWORD PTR [edx+esi*1+0x42],0x9314750e
  403660:	test   eax,0xd79514e2
  403665:	mov    eax,ds:0x406c65a6
  40366a:	inc    ebp
  40366b:	addr16 adc eax,0x4dedc0cd
  403671:	xlat   BYTE PTR ds:[ebx]
  403672:	xlat   BYTE PTR ds:[ebx]
  403673:	loop   0x40369e
  403675:	pop    ss
  403676:	mov    al,0x22
  403678:	cmp    al,0x92
  40367a:	imul   eax,DWORD PTR [eax],0x75
  40367d:	add    BYTE PTR [ebx-0x7],bh
  403680:	aad    0xbd
  403682:	sahf   
  403683:	mov    dl,0x96
  403685:	int    0x35
  403687:	jge    0x4036b9
  403689:	fs add eax,0x5187bf89
  40368f:	sub    DWORD PTR [ebp-0x59b4e550],eax
  403695:	mov    ebp,edx
  403697:	cdq    
  403698:	loopne 0x40369c
  40369a:	shr    cl,cl
  40369c:	cmp    al,0x6b
  40369e:	fisttp DWORD PTR [ecx]
  4036a0:	sub    ecx,DWORD PTR [ebx-0x66b0d86c]
  4036a6:	and    edi,DWORD PTR [edi-0x23cde835]
  4036ac:	imul   esi,DWORD PTR [ebx+0x65542359],0xd
  4036b3:	push   esp
  4036b4:	mov    al,ds:0x712481f
  4036b9:	jbe    0x403687
  4036bb:	and    al,dl
  4036bd:	daa    
  4036be:	xchg   ecx,eax
  4036bf:	jl     0x4036b0
  4036c1:	and    al,0xe1
  4036c3:	add    BYTE PTR ds:0xe04a0ab4,bl
  4036c9:	sbb    al,0xdc
  4036cb:	imul   ebp,DWORD PTR [eax],0xdc70cfa4
  4036d1:	adc    ch,ah
  4036d3:	js     0x40370d
  4036d5:	xchg   edx,eax
  4036d6:	push   esp
  4036d7:	xor    ah,ah
  4036d9:	inc    esp
  4036da:	rol    DWORD PTR [ebp+0x5b],cl
  4036dd:	xor    ebp,0xffffffaa
  4036e0:	test   eax,0xc0cf89cc
  4036e5:	inc    esi
  4036e6:	jecxz  0x403724
  4036e8:	jb     0x4036dc
  4036ea:	test   eax,0xd97e07f8
  4036ef:	aaa    
  4036f0:	repnz pop edx
  4036f2:	sub    BYTE PTR [eax-0x59],0xc7
  4036f6:	iret   
  4036f7:	mov    WORD PTR [eax-0x7afd7b88],ds
  4036fd:	sub    eax,0x5cbe21ee
  403702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403703:	push   esi
  403704:	ror    cl,cl
  403706:	test   BYTE PTR [edi-0x75],bl
  403709:	nop
  40370a:	xchg   ebp,ecx
  40370c:	out    0x44,eax
  40370e:	in     eax,dx
  40370f:	neg    DWORD PTR [edx-0x67aecb0d]
  403715:	or     al,0xa3
  403717:	into   
  403718:	je     0x4036aa
  40371a:	enter  0xf737,0xf7
  40371e:	pushf  
  40371f:	mov    ah,0x6a
  403721:	(bad)  
  403722:	mov    ah,0xef
  403724:	push   es
  403725:	imul   ecx,ebp,0x37
  403728:	(bad)  
  403729:	in     eax,dx
  40372a:	lahf   
  40372b:	add    bh,al
  40372d:	mov    cl,0x0
  40372f:	inc    esp
  403730:	nop
  403731:	and    eax,0x2887e89c
  403736:	ror    BYTE PTR [ebx],cl
  403738:	cmp    DWORD PTR ds:0x98ebe7f1,edi
  40373e:	sub    eax,0x203d016d
  403743:	add    cl,bl
  403745:	sbb    BYTE PTR [edi-0x7630ddd7],ch
  40374b:	mov    ecx,0x387a6729
  403750:	jne    0x4036ef
  403752:	jmp    0x403782
  403754:	jecxz  0x4036f7
  403756:	xlat   BYTE PTR ds:[ebx]
  403757:	cmp    al,0x3
  403759:	out    0x81,eax
  40375b:	xchg   ebx,eax
  40375c:	sub    BYTE PTR [ebx+0x2c],dl
  40375f:	cmp    ebp,ebp
  403761:	mov    WORD PTR [ebp+esi*1+0x73ff7d36],ss
  403768:	add    al,0x58
  40376a:	fstp   DWORD PTR [esi-0x40]
  40376d:	xchg   esi,eax
  40376e:	mov    al,0xa9
  403770:	mov    esp,0xa202bf83
  403775:	mov    esp,0x3578b2e
  40377a:	xchg   ebx,eax
  40377b:	xchg   esp,eax
  40377c:	push   edx
  40377d:	call   0xb021:0xc6aa2e9b
  403784:	stos   BYTE PTR es:[edi],al
  403785:	rol    bh,0x43
  403788:	aaa    
  403789:	fmul   st,st(7)
  40378b:	mov    esp,0x683ecadd
  403790:	divps  xmm7,XMMWORD PTR [bp+si]
  403794:	and    edx,DWORD PTR [ebx]
  403796:	inc    esi
  403797:	push   ss
  403798:	push   ebx
  403799:	shr    DWORD PTR ds:0xe715ffe9,cl
  40379f:	mov    al,0x31
  4037a1:	cmp    ah,BYTE PTR [eax-0x6fa30e0]
  4037a7:	jmp    0xf5e663c5
  4037ac:	cmp    dh,BYTE PTR [ebx-0x1]
  4037af:	stos   BYTE PTR es:[edi],al
  4037b0:	cld    
  4037b1:	into   
  4037b2:	push   ds
  4037b3:	scas   eax,DWORD PTR es:[edi]
  4037b4:	inc    ecx
  4037b5:	adc    ah,BYTE PTR [ecx+0x4a]
  4037b8:	inc    esp
  4037b9:	shr    BYTE PTR [edi-0x3d7a9e5f],1
  4037bf:	xor    DWORD PTR [edx+0x5274e7aa],edx
  4037c5:	data16 mov al,ds:0xb9c64d54
  4037cb:	xchg   esp,eax
  4037cc:	xchg   DWORD PTR [edx+0x21],esi
  4037cf:	push   0xf8e66306
  4037d4:	sbb    eax,0x5f7641c6
  4037d9:	shl    BYTE PTR [ebx+0x3246c06d],0xc8
  4037e0:	scas   eax,DWORD PTR es:[edi]
  4037e1:	outs   dx,DWORD PTR ds:[esi]
  4037e2:	and    eax,0xc5efaeba
  4037e7:	cmc    
  4037e8:	das    
  4037e9:	mul    BYTE PTR [ecx]
  4037eb:	mov    al,0x30
  4037ed:	popa   
  4037ee:	dec    edi
  4037ef:	pop    eax
  4037f0:	cmp    ecx,ebp
  4037f2:	and    eax,0x3dbd630d
  4037f7:	and    BYTE PTR [ebx+0xa2ad83d],ch
  4037fd:	sbb    DWORD PTR [edi-0x33214284],0x27
  403804:	xchg   ebx,eax
  403805:	jmp    0x1a7d:0xf909b521
  40380c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40380d:	sub    eax,0xd2e06339
  403812:	jnp    0x403798
  403814:	(bad)  
  403815:	xchg   ebp,eax
  403816:	cld    
  403817:	sti    
  403818:	bound  eax,QWORD PTR [edi-0x3303c192]
  40381e:	mov    ecx,0x49e52bca
  403823:	push   es
  403824:	idiv   DWORD PTR [edi-0x756c74f0]
  40382a:	mov    dl,0xe4
  40382c:	clc    
  40382d:	ret    
  40382e:	aam    0x51
  403830:	sar    BYTE PTR [ebp+0x68],1
  403833:	xor    BYTE PTR [edi-0x42996a51],cl
  403839:	gs leave 
  40383b:	mov    eax,0x9af63f06
  403840:	out    0xe1,al
  403842:	hlt    
  403843:	imul   ecx,DWORD PTR [ecx],0x65
  403846:	frstor [ecx-0xf9cc9de]
  40384c:	leave  
  40384d:	adc    ebx,DWORD PTR [ecx-0x76986230]
  403853:	clc    
  403854:	or     BYTE PTR [ebx+0x42216051],bl
  40385a:	jnp    0x403884
  40385c:	out    0x77,eax
  40385e:	push   ebp
  40385f:	sbb    ebp,DWORD PTR [edi+eax*1+0x2c2da7ad]
  403866:	pop    edx
  403867:	sub    eax,0x4539dd4a
  40386c:	push   esi
  40386d:	dec    edx
  40386e:	loop   0x40383a
  403870:	mov    cl,BYTE PTR [ebx+edx*4]
  403873:	mul    DWORD PTR [edi]
  403875:	inc    ebx
  403876:	lods   al,BYTE PTR ds:[esi]
  403877:	addr16 mov dh,0xea
  40387a:	pop    ecx
  40387b:	push   ebp
  40387c:	add    esi,edi
  40387e:	(bad)  
  40387f:	in     eax,0xfc
  403881:	test   al,0x6c
  403883:	les    ecx,FWORD PTR [edi+0x43f8524a]
  403889:	sbb    eax,0xbc19cec
  40388e:	inc    ebx
  40388f:	int3   
  403890:	xor    edx,DWORD PTR [ecx+eiz*4+0x4ffd1e2c]
  403897:	das    
  403898:	inc    edx
  403899:	fisttp WORD PTR [edi]
  40389b:	xor    BYTE PTR [edx+0x41],ah
  40389e:	gs aam 0x26
  4038a1:	sub    esi,DWORD PTR [edi-0x80]
  4038a4:	push   0xfffffffc
  4038a6:	bound  edi,QWORD PTR [esi-0xec85743]
  4038ac:	mov    DWORD PTR [esi+eax*1+0x23],esi
  4038b0:	imul   edx,DWORD PTR [esi+0x4888dd28],0x3fcf34bf
  4038ba:	out    0x73,al
  4038bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038bd:	xchg   ebp,eax
  4038be:	sbb    al,0x63
  4038c0:	fisubr WORD PTR [edi+0x49a1185]
  4038c6:	repz out 0xbe,eax
  4038c9:	add    BYTE PTR [ebx],ah
  4038cb:	and    esi,0x964e1984
  4038d1:	vaddss xmm1,xmm5,DWORD PTR [esp+ebp*1+0x17f65da4]
  4038da:	bound  eax,QWORD PTR [ebp-0x172ffa2a]
  4038e0:	mov    ebp,0x2012c637
  4038e5:	pop    ecx
  4038e6:	(bad)  
  4038e7:	sar    DWORD PTR [ebx],1
  4038e9:	jbe    0x403924
  4038eb:	dec    edi
  4038ec:	sub    bh,al
  4038ee:	pushf  
  4038ef:	arpl   cx,bx
  4038f1:	in     eax,0xc6
  4038f3:	push   edx
  4038f4:	mov    ss,WORD PTR [edi+0x63]
  4038f7:	(bad)  
  4038f8:	sub    ah,dh
  4038fa:	cmp    eax,0x5370867
  4038ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403900:	jmp    0x484b:0xd14184c0
  403907:	dec    esi
  403908:	stos   BYTE PTR es:[edi],al
  403909:	sbb    BYTE PTR [eax+0x57],0xe9
  40390d:	fcom   DWORD PTR [edi+0x61]
  403910:	cmp    DWORD PTR [ecx-0x18],edi
  403913:	mov    eax,ds:0x5f8ccfe1
  403918:	add    eax,0xc74349a8
  40391d:	cld    
  40391e:	int    0x9f
  403920:	jno    0x4038e0
  403922:	popa   
  403923:	shl    esp,1
  403925:	adc    al,BYTE PTR [edi+0x37]
  403928:	icebp  
  403929:	mov    edx,0xe1d05964
  40392e:	push   edx
  40392f:	lahf   
  403930:	jmp    0x403964
  403932:	push   edx
  403933:	sub    eax,0x71d7f010
  403938:	ret    
  403939:	mov    ebp,0xd313c182
  40393e:	ucomiss xmm3,DWORD PTR [eax+ecx*8+0xcbe025c]
  403946:	pop    esp
  403947:	imul   eax,DWORD PTR [edi-0x16],0xcc059a06
  40394e:	adc    BYTE PTR [ebx+0x21],bh
  403951:	push   ds
  403952:	adc    BYTE PTR [ebx-0x38],bl
  403955:	(bad)  
  403957:	adc    al,0x1
  403959:	aas    
  40395a:	push   edi
  40395b:	push   ss
  40395c:	fbld   TBYTE PTR [eax+0x3a]
  40395f:	outs   dx,DWORD PTR ds:[esi]
  403960:	jg     0x40393d
  403962:	pop    ss
  403963:	mov    ch,0xb6
  403965:	sub    bh,BYTE PTR [edx+0x4dca89c2]
  40396b:	mov    ds:0xccd495d,al
  403970:	cwde   
  403971:	iret   
  403972:	mov    ch,ah
  403974:	inc    ecx
  403975:	ds cmp ebp,edi
  403978:	les    eax,FWORD PTR [edx]
  40397a:	rol    DWORD PTR [edi+0x4f297084],0xfc
  403981:	pop    edi
  403982:	adc    dl,BYTE PTR [eax-0x1008622b]
  403988:	xor    BYTE PTR [edi],ch
  40398a:	mov    al,ds:0x333ec532
  40398f:	and    dl,cl
  403991:	mov    ds:0xbf6665fe,eax
  403996:	ja     0x403993
  403998:	mul    BYTE PTR [edx-0x19]
  40399b:	push   edi
  40399c:	enter  0x7475,0xd2
  4039a0:	jno    0x40399c
  4039a2:	adc    al,0xd5
  4039a4:	mov    WORD PTR [ecx-0x64],?
  4039a7:	add    bl,BYTE PTR [eax-0x2f]
  4039aa:	add    ecx,edx
  4039ac:	sar    BYTE PTR [ecx],0x69
  4039af:	xchg   edx,eax
  4039b0:	enter  0x7c07,0x97
  4039b4:	int    0xc
  4039b6:	jb     0x4039af
  4039b8:	jns    0x4039a2
  4039ba:	(bad)  
  4039bb:	je     0x4039cc
  4039bd:	mov    cl,0xfb
  4039bf:	xor    ecx,0x2b95ec42
  4039c5:	pop    ecx
  4039c6:	dec    edx
  4039c7:	out    dx,al
  4039c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039c9:	int3   
  4039ca:	sub    BYTE PTR [eax],ah
  4039cc:	cld    
  4039cd:	stos   BYTE PTR es:[edi],al
  4039ce:	push   edi
  4039cf:	and    DWORD PTR [edi-0x15a3c5f1],0x2b
  4039d6:	stc    
  4039d7:	out    0x5e,eax
  4039d9:	add    DWORD PTR [esi+0x74a1b0e8],ebp
  4039df:	xchg   ebp,eax
  4039e0:	repnz xor eax,0xff4c07c6
  4039e6:	in     al,0x14
  4039e8:	inc    ebp
  4039e9:	ror    DWORD PTR [ebp-0x31],0x57
  4039ed:	push   ecx
  4039ee:	jp     0x403988
  4039f0:	das    
  4039f1:	test   DWORD PTR [edi-0x2e],0x74ac890e
  4039f8:	bound  esp,QWORD PTR [esi]
  4039fa:	and    BYTE PTR [ecx-0x12c10024],0x17
  403a01:	mov    WORD PTR [edi],fs
  403a03:	jg     0x4039b3
  403a05:	inc    ebx
  403a06:	mov    edi,0x197e5cd
  403a0b:	sbb    ebx,edx
  403a0d:	pop    esp
  403a0e:	push   cs
  403a0f:	mov    ch,0xff
  403a11:	mov    dl,0x92
  403a13:	mov    dh,0xae
  403a15:	repz mov bh,ch
  403a18:	stc    
  403a19:	out    0xec,al
  403a1b:	cdq    
  403a1c:	inc    eax
  403a1d:	mov    esp,0x79d61e49
  403a22:	sahf   
  403a23:	mov    bl,0x1b
  403a25:	int3   
  403a26:	gs fsubr st(3),st
  403a29:	arpl   WORD PTR [edx+0x6e7bc2be],bp
  403a2f:	leave  
  403a30:	cs pop cx
  403a33:	and    eax,0x48b84ba7
  403a38:	ss dec ebx
  403a3a:	mov    ebx,0x83f940cc
  403a3f:	outs   dx,DWORD PTR ds:[esi]
  403a40:	mov    al,ds:0xda734896
  403a45:	aad    0x24
  403a47:	into   
  403a48:	lea    ebp,[edi+0xc]
  403a4b:	xor    eax,0x4b489577
  403a50:	call   FWORD PTR [edx-0x35]
  403a53:	loopne 0x403a79
  403a55:	stc    
  403a56:	fild   WORD PTR [edx+0xf]
  403a59:	repz fst DWORD PTR [eax-0x78420d81]
  403a60:	sbb    edx,edi
  403a62:	push   eax
  403a63:	jnp    0x403a44
  403a65:	mov    BYTE PTR [edx-0x40dcbd3a],bh
  403a6b:	cld    
  403a6c:	mov    ebp,0x8f09a209
  403a71:	pop    eax
  403a72:	mov    eax,ds:0xa3cdcb13
  403a77:	push   ecx
  403a78:	mov    ds:0x513d34d8,al
  403a7d:	ja     0x403a46
  403a7f:	sub    BYTE PTR [edx],ch
  403a81:	outs   dx,BYTE PTR ds:[esi]
  403a82:	fstp   DWORD PTR [edi]
  403a84:	loop   0x403aec
  403a86:	jae    0x403a9d
  403a88:	mov    ebp,fs
  403a8a:	test   eax,0x75e5b8f7
  403a8f:	mov    ebp,0x24294b77
  403a94:	jg     0x403b0f
  403a96:	repz ror BYTE PTR [esi+0x27502baa],1
  403a9d:	shl    DWORD PTR [edx],0x6e
  403aa0:	lods   al,BYTE PTR ds:[esi]
  403aa1:	push   ds
  403aa2:	std    
  403aa3:	push   ecx
  403aa4:	push   0x33
  403aa6:	pop    ebx
  403aa7:	shl    bl,cl
  403aa9:	adc    BYTE PTR [edi-0x466365f],bl
  403aaf:	(bad)  
  403ab0:	fisttp WORD PTR [ebx]
  403ab2:	(bad)  
  403ab3:	pop    gs
  403ab5:	pop    esp
  403ab6:	mov    cl,0x70
  403ab8:	xchg   edx,eax
  403aba:	mov    dl,0x4a
  403abc:	jne    0x403a88
  403abe:	jne    0x403a84
  403ac0:	dec    ebx
  403ac1:	inc    esp
  403ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ac3:	mov    BYTE PTR [ebx+esi*4-0x4a],ch
  403ac7:	shl    esp,1
  403ac9:	stos   DWORD PTR es:[edi],eax
  403aca:	cli    
  403acb:	mov    edx,esi
  403acd:	cmp    DWORD PTR [eax-0x1c9dbbb3],eax
  403ad3:	push   esp
  403ad4:	pop    ebp
  403ad5:	loope  0x403a7b
  403ad7:	push   es
  403ad8:	cld    
  403ad9:	mov    dh,0x9
  403adb:	mov    ebx,0xc3aa87d0
  403ae0:	addr16 adc bh,al
  403ae3:	es push esi
  403ae5:	jo     0x403b03
  403ae7:	jbe    0x403ac3
  403ae9:	es pop ecx
  403aeb:	fcomp  st(2)
  403aed:	mov    esp,0xa4d5fd62
  403af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403af3:	std    
  403af4:	leave  
  403af5:	sbb    DWORD PTR [esi-0x39],edx
  403af8:	sbb    ebx,DWORD PTR [esi-0x43]
  403afb:	and    al,0x22
  403afd:	mov    edi,DWORD PTR [esi]
  403aff:	inc    eax
  403b00:	aas    
  403b01:	inc    ebp
  403b02:	leave  
  403b03:	fstp   QWORD PTR [esi+0x7b]
  403b06:	pop    eax
  403b07:	push   ebx
  403b08:	int    0xe6
  403b0a:	adc    al,0xe6
  403b0c:	inc    esi
  403b0d:	mov    ah,0x14
  403b0f:	cmp    edx,DWORD PTR [ecx]
  403b11:	xor    esi,ecx
  403b13:	inc    ebx
  403b14:	sbb    ah,BYTE PTR [ecx]
  403b16:	scas   al,BYTE PTR es:[edi]
  403b17:	pop    edi
  403b18:	cmp    DWORD PTR [ebp+0x32a742d5],ebp
  403b1e:	jle    0x403b6a
  403b20:	push   eax
  403b21:	push   ebx
  403b22:	add    edx,DWORD PTR [ebp+ecx*4+0x13f21384]
  403b29:	xor    ecx,DWORD PTR [eax-0x39cc38d5]
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429bef
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fld    QWORD PTR [esi-0x1016c033]
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffff96
  403ca6:	push   esp
  403ca7:	aas    
  403ca8:	nop
  403ca9:	cmp    dh,bh
  403cab:	jo     0x403ccf
  403cad:	or     al,0x12
  403caf:	lea    ebp,[ebx-0x5f]
  403cb2:	or     ah,BYTE PTR [ebp-0x8]
  403cb5:	add    DWORD PTR [ebx-0x6bc38644],ebx
  403cbb:	cwde   
  403cbc:	nop
  403cbd:	outs   dx,BYTE PTR ds:[esi]
  403cbe:	add    al,0x4c
  403cc0:	inc    ecx
  403cc1:	scas   eax,DWORD PTR es:[edi]
  403cc2:	out    0x46,eax
  403cc4:	nop
  403cc5:	mov    ah,0xc3
  403cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc8:	mov    eax,DWORD PTR [ebx]
  403cca:	mov    cl,0x82
  403ccc:	sbb    al,0x77
  403cce:	mov    gs,WORD PTR [ecx+0x745cb2ed]
  403cd4:	into   
  403cd5:	push   esp
  403cd6:	adc    DWORD PTR [ecx+edx*1-0x4637c05e],edi
  403cdd:	push   edi
  403cde:	adc    al,0xb1
  403ce0:	mov    dl,0x9d
  403ce2:	(bad)  
  403ce3:	sub    DWORD PTR [ecx+0x77],ebp
  403ce6:	call   0x45bfb12f
  403ceb:	popa   
  403cec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ced:	mov    esi,0x247a55fb
  403cf2:	xchg   bl,cl
  403cf4:	cld    
  403cf5:	pop    ds
  403cf6:	adc    ecx,DWORD PTR [edi]
  403cf8:	out    dx,eax
  403cf9:	ficom  WORD PTR [edx]
  403cfb:	lock pop ds
  403cfd:	mov    edi,0xe0ee610f
  403d02:	ins    BYTE PTR es:[edi],dx
  403d03:	xor    cl,BYTE PTR [esi+eax*2]
  403d06:	add    al,0xd6
  403d08:	pop    esi
  403d09:	ficom  DWORD PTR [ebp+ebx*2-0x435335be]
  403d10:	adc    bh,BYTE PTR [edx]
  403d12:	adc    bl,BYTE PTR [edi+0x11]
  403d15:	or     BYTE PTR [edx+0x1a5da8d0],bh
  403d1b:	scas   al,BYTE PTR es:[edi]
  403d1c:	cwde   
  403d1d:	imul   eax,DWORD PTR [ebp-0x58485605],0xd7330af6
  403d27:	pushw  ds
  403d29:	imul   eax,DWORD PTR [eax+0x3d],0xba8fecb
  403d30:	and    eax,DWORD PTR [esi-0x2a]
  403d33:	sub    BYTE PTR [edx+0x7a5247ff],dh
  403d39:	sub    DWORD PTR [eax-0x65],edi
  403d3c:	cs test eax,0xdd7cdfc4
  403d42:	jnp    0x403cf1
  403d44:	int3   
  403d45:	pushf  
  403d46:	mov    ah,0x83
  403d48:	pusha  
  403d49:	xchg   ebp,eax
  403d4a:	out    0xd,al
  403d4c:	aaa    
  403d4d:	or     ch,BYTE PTR [eax-0x5e3920f]
  403d53:	stos   BYTE PTR es:[edi],al
  403d54:	outs   dx,BYTE PTR ds:[esi]
  403d55:	mov    BYTE PTR [edx+ebp*1-0x606ef2f7],al
  403d5c:	xchg   DWORD PTR [edi],ebx
  403d5e:	jno    0x403dcd
  403d60:	fstp   TBYTE PTR [ecx-0x36c35899]
  403d66:	stos   BYTE PTR es:[edi],al
  403d67:	test   BYTE PTR [ebx+0x34814927],0x33
  403d6e:	jecxz  0x403d77
  403d70:	inc    edx
  403d71:	int3   
  403d72:	sar    BYTE PTR [ebx-0x6611196e],1
  403d78:	jno    0x403d16
  403d7a:	aam    0xa
  403d7c:	xchg   DWORD PTR [edx+ebx*2-0x71235d59],esp
  403d83:	sbb    bh,BYTE PTR [edi+0x6c]
  403d86:	sbb    BYTE PTR [edi-0x24],al
  403d89:	popa   
  403d8a:	icebp  
  403d8b:	push   ecx
  403d8c:	(bad)  [edx]
  403d8e:	sbb    edi,DWORD PTR [ebx+ecx*1]
  403d91:	cmp    edx,DWORD PTR [edx]
  403d93:	les    esp,FWORD PTR [edi+eax*4-0x40e95cf9]
  403d9a:	ins    BYTE PTR es:[edi],dx
  403d9b:	nop
  403d9c:	fidiv  DWORD PTR [esi+0x39]
  403d9f:	(bad)  [edi*1+0x69922d3d]
  403da6:	call   0xdb35059
  403dab:	jmp    0xf28dfbc7
  403db0:	jns    0x403d7c
  403db2:	data16 std 
  403db4:	imul   bh
  403db6:	(bad)  
  403db8:	add    DWORD PTR [ebx+0x4c],ebp
  403dbb:	push   cs
  403dbc:	je     0x403e1a
  403dbe:	cs aad 0x2b
  403dc1:	(bad)  
  403dc2:	icebp  
  403dc3:	dec    eax
  403dc4:	xor    eax,0x84cf5b6e
  403dc9:	push   eax
  403dca:	lahf   
  403dcb:	xchg   edi,eax
  403dcc:	xchg   edi,eax
  403dcd:	xlat   BYTE PTR ds:[ebx]
  403dce:	ja     0x403d90
  403dd0:	and    dh,0x25
  403dd3:	bound  edi,QWORD PTR [ebp+0x70164e64]
  403dd9:	rcr    BYTE PTR [ebp-0x23],0xfc
  403ddd:	popf   
  403dde:	sar    dh,0x2e
  403de1:	cli    
  403de2:	add    BYTE PTR [edx],al
  403de4:	pop    edx
  403de5:	mov    dl,0xa1
  403de7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403de8:	outs   dx,BYTE PTR ds:[esi]
  403de9:	sub    dl,al
  403deb:	lods   al,BYTE PTR ds:[esi]
  403dec:	or     eax,DWORD PTR ds:0xd70341ba
  403df2:	mov    al,0x25
  403df4:	xor    eax,0xe68788bf
  403df9:	pusha  
  403dfa:	call   0x4340:0x255f6739
  403e01:	xchg   edx,eax
  403e02:	imul   DWORD PTR [esi+0x9]
  403e05:	jmp    0x24d0355b
  403e0a:	hlt    
  403e0b:	adc    al,0x7c
  403e0d:	inc    eax
  403e0e:	xchg   eax,ebx
  403e10:	xor    ah,ah
  403e12:	or     DWORD PTR [esi+0x4e46b2f2],ebp
  403e18:	xchg   ebx,eax
  403e19:	dec    ebx
  403e1a:	in     eax,0x19
  403e1c:	das    
  403e1d:	xor    ah,0x0
  403e20:	ss icebp 
  403e22:	jo     0x403ddd
  403e24:	fidiv  DWORD PTR [ecx]
  403e26:	inc    ebx
  403e27:	jae    0x403e79
  403e29:	call   0xec5c:0xa40ff8c3
  403e30:	push   esi
  403e31:	dec    ecx
  403e32:	jno    0x403df7
  403e34:	pop    esi
  403e35:	enter  0x7f12,0x62
  403e39:	sti    
  403e3a:	stc    
  403e3b:	aaa    
  403e3c:	faddp  st(4),st
  403e3e:	mov    dh,0x8d
  403e40:	inc    ecx
  403e41:	test   BYTE PTR [esi],dh
  403e43:	test   al,0xba
  403e45:	(bad)  
  403e46:	sbb    BYTE PTR [edx+0x6780f950],0x2b
  403e4d:	pop    ebp
  403e4e:	call   0xd93e4d1d
  403e53:	push   ds
  403e54:	push   ds
  403e55:	(bad)  
  403e56:	fild   DWORD PTR [edi-0x63]
  403e59:	xchg   edx,eax
  403e5a:	nop    edi
  403e5d:	arpl   WORD PTR [eax],bx
  403e5f:	sar    BYTE PTR [ecx-0x22],1
  403e62:	push   ss
  403e63:	lods   al,BYTE PTR ds:[esi]
  403e64:	mov    ebp,0xb1f00606
  403e69:	cmp    eax,0x324888ea
  403e6e:	neg    esp
  403e70:	(bad)  
  403e71:	mov    eax,ds:0xf0e054d3
  403e76:	mov    edi,0xa75948b5
  403e7b:	mov    eax,0xfc347623
  403e80:	stos   BYTE PTR es:[edi],al
  403e81:	cmp    DWORD PTR [ebp+ebp*4-0x1a781717],ecx
  403e88:	(bad)  
  403e89:	(bad)  
  403e8a:	pop    ebx
  403e8b:	add    edx,DWORD PTR [ebx+0x6e2ac566]
  403e91:	retf   
  403e92:	dec    edi
  403e93:	rcl    esi,cl
  403e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e96:	(bad)  
  403e98:	js     0x403ebf
  403e9a:	aaa    
  403e9b:	mov    ds:0x720ed7cb,eax
  403ea0:	xor    DWORD PTR [ebp-0x5ad6da5a],edx
  403ea6:	pop    ebx
  403ea7:	xor    ch,BYTE PTR [ebx+0xc]
  403eaa:	or     eax,0x27d9020
  403eaf:	xor    ecx,esi
  403eb1:	push   ecx
  403eb2:	sahf   
  403eb3:	ins    DWORD PTR es:[edi],dx
  403eb4:	adc    eax,0x5072690a
  403eb9:	or     BYTE PTR ss:[eax+eiz*2-0x7d520d53],bh
  403ec1:	jbe    0x403f33
  403ec3:	mov    bl,0x92
  403ec5:	ins    DWORD PTR es:[edi],dx
  403ec6:	outs   dx,BYTE PTR ds:[esi]
  403ec7:	push   es
  403ec8:	cmp    bl,BYTE PTR [edx+edi*2+0x7b]
  403ecc:	adc    ebx,DWORD PTR [edi-0x8]
  403ecf:	mov    ecx,0x713fd830
  403ed4:	push   ebp
  403ed5:	es mov ?,esi
  403ed8:	std    
  403ed9:	jb     0x403f20
  403edb:	fcmove st,st(0)
  403edd:	sbb    BYTE PTR [ebp-0x68],ah
  403ee0:	push   eax
  403ee1:	lea    ecx,[edx-0x50]
  403ee4:	jmp    0x9b2c469
  403ee9:	dec    ecx
  403eea:	push   edi
  403eeb:	dec    edx
  403eec:	mov    esp,0xf6bb9242
  403ef1:	imul   BYTE PTR [eax+0x3f]
  403ef4:	fstp   QWORD PTR [esi+0x72]
  403ef7:	ficomp WORD PTR [eax+0x11]
  403efa:	mov    ds:0x919786d8,eax
  403eff:	xchg   edx,eax
  403f00:	cwde   
  403f01:	xchg   edx,eax
  403f02:	div    DWORD PTR [ebx+0x18df06bb]
  403f08:	push   ebp
  403f09:	add    eax,0x25ef80a3
  403f0e:	clc    
  403f0f:	adc    DWORD PTR [edi],edi
  403f11:	pop    edi
  403f12:	stos   BYTE PTR es:[edi],al
  403f13:	arpl   WORD PTR [ecx],bp
  403f15:	ficom  DWORD PTR [edx]
  403f17:	dec    esi
  403f18:	jne    0x403f18
  403f1a:	(bad)  
  403f1b:	hlt    
  403f1c:	dec    eax
  403f1d:	std    
  403f1e:	cdq    
  403f1f:	fst    DWORD PTR [esi+ebp*1-0x1d]
  403f23:	lea    esi,[edi+ebx*1]
  403f26:	ins    DWORD PTR es:[edi],dx
  403f27:	push   ss
  403f28:	out    0x4e,eax
  403f2a:	lahf   
  403f2b:	lds    edi,FWORD PTR [esi+0x44]
  403f2e:	sub    eax,0x91384972
  403f33:	lock xchg ecx,eax
  403f35:	jle    0x403fb5
  403f37:	push   esp
  403f38:	ins    BYTE PTR es:[edi],dx
  403f39:	pop    esp
  403f3b:	iret   
  403f3c:	scas   al,BYTE PTR es:[edi]
  403f3d:	(bad)  
  403f3e:	mov    edx,0x29d427bb
  403f43:	or     eax,0x14775862
  403f48:	sub    al,0x6c
  403f4a:	nop
  403f4b:	or     ch,BYTE PTR [edx+ebx*1+0x6037fa82]
  403f52:	xchg   ebp,eax
  403f53:	add    bh,BYTE PTR [esi-0x76]
  403f56:	dec    ebx
  403f57:	cli    
  403f58:	dec    esi
  403f59:	sbb    edi,DWORD PTR [ebx-0x7a]
  403f5c:	and    bl,BYTE PTR ds:0x360ee131
  403f62:	sbb    dh,dl
  403f64:	repnz sahf 
  403f66:	and    ah,BYTE PTR [eax]
  403f68:	loope  0x403f77
  403f6a:	xchg   ecx,eax
  403f6b:	adc    al,0x75
  403f6d:	jl     0x403fde
  403f6f:	scas   eax,DWORD PTR es:[edi]
  403f70:	or     eax,0x68800dfb
  403f75:	ss mov edx,0xae954929
  403f7b:	push   esi
  403f7c:	push   esi
  403f7d:	fidivr DWORD PTR [edx-0x7c0f8d0f]
  403f83:	in     al,dx
  403f84:	inc    eax
  403f85:	fstp   st(5)
  403f87:	jmp    0xc772082b
  403f8c:	pop    eax
  403f8d:	mov    ah,0x3
  403f8f:	sbb    BYTE PTR [esi-0x4f],bh
  403f92:	jae    0x403f94
  403f94:	sahf   
  403f95:	out    0x1e,al
  403f97:	cmp    ebp,DWORD PTR [ebp-0x53dbe33b]
  403f9d:	fist   WORD PTR [esi-0x19]
  403fa0:	mov    edi,0x7c198beb
  403fa5:	aad    0x6b
  403fa7:	or     al,0x3c
  403fa9:	cs jecxz 0x403f7b
  403fac:	add    eax,0x6eaa6b7b
  403fb1:	jne    0x403fc4
  403fb3:	sti    
  403fb4:	pop    ebp
  403fb5:	shl    DWORD PTR [esi],1
  403fb7:	cwde   
  403fb8:	mov    eax,ds:0x51d43009
  403fbd:	pop    esp
  403fbe:	dec    eax
  403fbf:	add    eax,0x5db8011b
  403fc4:	push   esp
  403fc5:	jno    0x404045
  403fc7:	mov    WORD PTR [eax],fs
  403fc9:	stos   DWORD PTR es:[edi],eax
  403fca:	xor    DWORD PTR [esi+0x5b],edi
  403fcd:	and    BYTE PTR [edx+0x2a109db0],0x8b
  403fd4:	or     ebp,esp
  403fd6:	mov    ah,dh
  403fd8:	inc    esi
  403fd9:	adc    al,0xbc
  403fdb:	adc    al,0x3a
  403fdd:	sub    eax,ebx
  403fdf:	(bad)  
  403fe0:	ins    DWORD PTR es:[edi],dx
  403fe1:	or     cl,BYTE PTR [edx-0x46]
  403fe4:	dec    ebx
  403fe5:	fcom   QWORD PTR [esi]
  403fe7:	cld    
  403fe8:	pop    ebp
  403fe9:	and    DWORD PTR [esp+ebx*4],eax
  403fec:	jb     0x403faf
  403fee:	pop    es
  403fef:	ret    0x2a87
  403ff2:	pop    es
  403ff3:	pusha  
  403ff4:	push   ecx
  403ff5:	je     0x403fee
  403ff7:	inc    ebx
  403ff8:	mov    ds:0xaa0f1bd5,eax
  403ffd:	inc    ebx
  403ffe:	outs   dx,DWORD PTR ds:[esi]
  403fff:	popa   
  404000:	jg     0x403fac
  404002:	pop    esi
  404003:	pushf  
  404004:	adc    BYTE PTR [ebx-0x3e099abc],bl
  40400a:	mov    BYTE PTR [edx+0x42cd7d5e],0x84
  404011:	dec    ebx
  404012:	mov    al,ds:0x5b62d46d
  404017:	in     eax,dx
  404018:	fst    QWORD PTR [ebp+0x45]
  40401b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40401d:	mov    eax,ds:0x827cbf29
  404022:	stos   BYTE PTR es:[edi],al
  404023:	pop    eax
  404024:	nop
  404025:	jno    0x403fd1
  404027:	ds or  esi,esi
  40402a:	adc    BYTE PTR [esi-0x1b],0x46
  40402e:	repnz mov ecx,0x6fc2f718
  404034:	das    
  404035:	fcmovbe st,st(1)
  404037:	or     eax,DWORD PTR [edi+0x25]
  40403a:	std    
  40403b:	or     bl,BYTE PTR [ecx]
  40403d:	sbb    al,0xa1
  40403f:	dec    ecx
  404040:	lahf   
  404041:	add    cl,dh
  404043:	test   BYTE PTR [edi-0x66],0x84
  404047:	pusha  
  404048:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404049:	jl     0x40400f
  40404b:	sub    eax,0x367171c
  404050:	loope  0x404070
  404052:	sbb    esi,edi
  404054:	inc    ebp
  404055:	stos   BYTE PTR es:[edi],al
  404056:	fs stc 
  404058:	xor    al,0x61
  40405a:	sbb    bl,BYTE PTR [edi-0xe911ec0]
  404060:	pop    ebp
  404061:	retf   
  404062:	stos   BYTE PTR es:[edi],al
  404063:	jb     0x4040ab
  404065:	shl    DWORD PTR [esi+0x7d],0xfc
  404069:	mov    ebp,edx
  40406b:	dec    ebp
  40406c:	jl     0x4040d7
  40406e:	jae    0x40409d
  404070:	jge    0x4040bd
  404072:	sub    eax,0x26b7dc15
  404077:	mov    ebp,ss
  404079:	xchg   cx,ax
  40407b:	aaa    
  40407c:	repnz repnz mov ebx,0x93c3c89f
  404083:	fwait
  404084:	push   0x27a4481f
  404089:	sbb    eax,eax
  40408b:	inc    esp
  40408c:	or     dl,dh
  40408e:	xchg   edx,eax
  40408f:	jmp    DWORD PTR [edx+0x2b0b740b]
  404095:	sub    BYTE PTR [ecx-0x5d046f83],cl
  40409b:	retf   0xfcbe
  40409e:	inc    edi
  40409f:	xchg   BYTE PTR [ebx],al
  4040a1:	xchg   esi,eax
  4040a2:	aas    
  4040a3:	ret    
  4040a4:	outs   dx,DWORD PTR ds:[esi]
  4040a5:	jge    0x57ab0c04
  4040ab:	out    0x3b,al
  4040ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040af:	pop    ss
  4040b0:	call   0x7ba80180
  4040b5:	dec    ebx
  4040b6:	test   al,0x61
  4040b8:	mov    es,WORD PTR [ebx-0x39fda402]
  4040be:	loope  0x40409e
  4040c0:	jb     0x4040e4
  4040c2:	push   0xe9f462e5
  4040c7:	les    ecx,FWORD PTR [ebp*8+0x4374cfb2]
  4040ce:	cmp    DWORD PTR [esi-0x3b],0x7
  4040d2:	mov    al,ds:0xf711ad4
  4040d7:	sub    eax,DWORD PTR [edi]
  4040d9:	sbb    bl,BYTE PTR [ebx+0x4d]
  4040dc:	cmp    BYTE PTR [eax],bl
  4040de:	inc    edx
  4040df:	inc    edi
  4040e0:	mov    bl,0x5a
  4040e2:	clc    
  4040e3:	push   ebp
  4040e4:	fldcw  WORD PTR [ebx]
  4040e6:	ins    DWORD PTR es:[edi],dx
  4040e7:	imul   ecx,eax,0x3381c95b
  4040ed:	mov    ah,0xb0
  4040ef:	sub    DWORD PTR [ebx+0x4e],esp
  4040f2:	nop
  4040f3:	xchg   ecx,eax
  4040f4:	or     BYTE PTR [ecx+eiz*1-0x628fbc5a],bh
  4040fb:	stc    
  4040fc:	jns    0x4040b3
  4040fe:	sbb    DWORD PTR [eax+0x70],0xbe0ea54
  404105:	retf   
  404106:	xor    al,0xcb
  404108:	cmp    edx,DWORD PTR [ebp-0x3]
  40410b:	icebp  
  40410c:	push   cs
  40410d:	mov    ecx,es
  40410f:	mov    WORD PTR [edx],gs
  404111:	sub    eax,0x48d8674b
  404116:	or     DWORD PTR [edi],edi
  404118:	imul   edi,DWORD PTR [edi],0x194ba433
  40411e:	sbb    BYTE PTR [ebx],ch
  404120:	inc    esp
  404121:	xchg   BYTE PTR [ebx-0x73],bl
  404124:	xchg   edx,eax
  404125:	ins    DWORD PTR es:[edi],dx
  404126:	jb     0x404101
  404128:	xchg   ebp,eax
  404129:	dec    esi
  40412a:	dec    esi
  40412b:	sub    bh,cl
  40412d:	sbb    al,0xee
  40412f:	jo     0x404144
  404131:	sub    esi,edi
  404133:	jle    0x4040d2
  404135:	or     edi,DWORD PTR [edi-0x521d0c9]
  40413b:	xchg   edx,ebx
  40413d:	pop    esp
  40413e:	mov    eax,ds:0x42c72e58
  404143:	daa    
  404144:	(bad)  
  404145:	inc    esi
  404146:	arpl   WORD PTR [edx],di
  404148:	clc    
  404149:	jae    0x404130
  40414b:	jne    0x4040ed
  40414d:	mov    bh,0x12
  40414f:	int    0x1a
  404151:	out    0x5f,eax
  404153:	mov    cl,0x81
  404155:	xchg   ebx,eax
  404156:	out    0x4e,al
  404158:	cmp    BYTE PTR [edx],ch
  40415a:	inc    ebp
  40415b:	jg     0x4041c6
  40415d:	stos   BYTE PTR es:[edi],al
  40415e:	or     dh,BYTE PTR [eax+0x8]
  404161:	and    DWORD PTR [edx+0xcfebf29],eax
  404167:	int    0xd
  404169:	(bad)  
  40416a:	out    0x90,eax
  40416c:	inc    esi
  40416d:	mov    edi,0x3fe96a52
  404172:	push   es
  404173:	add    eax,0x59c4ffce
  404178:	repz jp 0x404115
  40417b:	enter  0x5fbe,0x7e
  40417f:	push   ss
  404180:	ret    
  404181:	adc    bh,dh
  404183:	fdivr  DWORD PTR [ebp+0x43]
  404186:	into   
  404187:	cdq    
  404188:	mov    ebp,0x159b98e6
  40418d:	test   eax,0x55729a7b
  404192:	out    0x6b,eax
  404194:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404195:	mov    edi,0x956498b1
  40419a:	test   BYTE PTR [esi+0x21f4ef0e],0x6f
  4041a1:	popa   
  4041a2:	sbb    eax,0xf6081b10
  4041a7:	outs   dx,BYTE PTR ds:[esi]
  4041a8:	mov    dl,0x19
  4041aa:	nop
  4041ab:	lods   eax,DWORD PTR ds:[esi]
  4041ac:	pop    es
  4041ad:	dec    ecx
  4041ae:	xchg   ebp,eax
  4041af:	sbb    esi,ebp
  4041b1:	dec    ebp
  4041b2:	add    al,0x9d
  4041b4:	cmp    ebp,DWORD PTR [edi+0x72]
  4041b7:	mov    WORD PTR [edx-0x44fc8f16],gs
  4041bd:	mov    dh,0xac
  4041bf:	sti    
  4041c0:	add    eax,0x31c4b644
  4041c5:	push   0xf0b1d15f
  4041ca:	push   esi
  4041cb:	sub    al,0xf0
  4041cd:	xor    BYTE PTR [ebp*8-0x24476e62],cl
  4041d4:	fisub  WORD PTR [ebx+0x2205d84]
  4041da:	pop    ebp
  4041db:	mov    ds:0x10155786,eax
  4041e0:	aas    
  4041e1:	pop    es
  4041e2:	retf   
  4041e3:	loopne 0x404251
  4041e5:	(bad)  
  4041e6:	xor    dh,BYTE PTR [edx]
  4041e8:	cmp    eax,0x3d223748
  4041ed:	pop    ds
  4041ee:	xor    esi,DWORD PTR ds:0xbea25a8b
  4041f4:	dec    esi
  4041f5:	or     DWORD PTR [ebx+0x21a2b2d2],eax
  4041fb:	lods   eax,DWORD PTR ds:[esi]
  4041fc:	(bad)  
  4041fd:	mov    ch,0xc2
  4041ff:	mov    al,ds:0x30e40208
  404204:	push   eax
  404205:	cmc    
  404206:	cmp    ebp,DWORD PTR [edi+0x7056fd6e]
  40420c:	fld    QWORD PTR [edi+0x38]
  40420f:	stos   DWORD PTR es:[edi],eax
  404210:	dec    esp
  404211:	jp     0x40426b
  404213:	fs mov cl,0x87
  404216:	fistp  QWORD PTR [esi]
  404218:	es inc edx
  40421a:	les    ebp,FWORD PTR [eax+0x60a5afa8]
  404220:	aas    
  404221:	es jp  0x4041d1
  404224:	int3   
  404225:	ss aam 0x2b
  404228:	pop    eax
  404229:	mov    ds:0xdf8f440,eax
  40422e:	cmp    BYTE PTR [edx],ah
  404230:	pop    esp
  404231:	add    BYTE PTR [ecx+0x2ab0056d],0xa3
  404238:	mov    edx,0x3ad4387e
  40423d:	shl    DWORD PTR [eax-0x3cb522d7],1
  404243:	xlat   BYTE PTR ds:[ebx]
  404244:	push   cs
  404245:	and    ebx,DWORD PTR [edx-0x6a]
  404248:	push   ecx
  404249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40424a:	and    esp,DWORD PTR [edx+0x22]
  40424d:	je     0x4041f4
  40424f:	ja     0x404248
  404251:	data16 jns 0x4041fe
  404254:	cmp    al,0xcd
  404256:	jne    0x6cc21b4e
  40425c:	adc    al,0xd1
  40425e:	scas   al,BYTE PTR es:[edi]
  40425f:	sub    al,BYTE PTR [edi+edi*2+0x4d]
  404263:	cvtdq2ps xmm2,XMMWORD PTR [edi+0x72b2ef82]
  40426a:	dec    esi
  40426b:	in     al,0xbe
  40426d:	push   ebx
  40426e:	aad    0x1e
  404270:	dec    esp
  404272:	mov    esp,0xeffe916e
  404277:	push   0xffffffc2
  404279:	or     eax,0x8b1a3d03
  40427e:	addr16 (bad) 
  404280:	out    0x34,al
  404282:	mov    cl,0x8
  404284:	out    dx,al
  404285:	jmp    DWORD PTR [edx]
  404287:	xchg   esp,eax
  404288:	adc    ah,BYTE PTR [ecx+0x1a]
  40428b:	sbb    DWORD PTR [edx+0x30bbb976],ebp
  404291:	add    edi,DWORD PTR [eax+0x425422b2]
  404297:	sub    eax,0x56ff184d
  40429c:	xchg   ebp,eax
  40429d:	sbb    BYTE PTR [eax],cl
  40429f:	call   0x114e9cc1
  4042a4:	ins    DWORD PTR es:[edi],dx
  4042a5:	outs   dx,BYTE PTR ds:[esi]
  4042a6:	push   esp
  4042a7:	loope  0x40429a
  4042a9:	cmp    esp,DWORD PTR [ecx+0x28838e7a]
  4042af:	push   cs
  4042b0:	icebp  
  4042b1:	pop    eax
  4042b2:	sbb    BYTE PTR [ebp-0x261abb6],0xae
  4042b9:	bound  eax,QWORD PTR [ebp+0x2b]
  4042bc:	pop    edi
  4042bd:	in     eax,dx
  4042be:	(bad)  
  4042bf:	rcr    DWORD PTR [edx+0x62b1e29c],1
  4042c5:	cmp    cl,0x31
  4042c8:	cmp    BYTE PTR [edx-0x14],bh
  4042cb:	test   eax,0x6ba8dbe9
  4042d0:	xchg   esp,eax
  4042d1:	pop    esp
  4042d2:	mov    eax,0x4ed1f93a
  4042d7:	add    bh,bl
  4042d9:	mov    edx,0x186ef113
  4042de:	jae    0x404335
  4042e0:	cld    
  4042e1:	fldcw  WORD PTR [edi+esi*2+0x52]
  4042e5:	fild   WORD PTR [ebp+0x53]
  4042e8:	inc    ecx
  4042e9:	out    0x30,al
  4042eb:	xchg   esp,eax
  4042ec:	loop   0x4042d5
  4042ee:	pop    ss
  4042ef:	cld    
  4042f0:	cdq    
  4042f1:	je     0x404313
  4042f3:	in     al,dx
  4042f4:	cmp    dh,dl
  4042f6:	xchg   esi,eax
  4042f7:	xchg   edi,eax
  4042f8:	mov    dh,ch
  4042fa:	dec    edi
  4042fb:	mov    ebx,0x8509a27
  404300:	add    al,0x8a
  404302:	in     eax,dx
  404303:	fucomi st,st(7)
  404305:	sbb    eax,0x4a0f7b45
  40430a:	imul   ecx,edi,0x5f
  40430d:	cli    
  40430e:	popa   
  40430f:	pop    ebp
  404310:	xlat   BYTE PTR ds:[ebx]
  404311:	or     eax,0x1bedbe17
  404316:	fs mov ebp,0xc0fb7c4f
  40431c:	das    
  40431d:	dec    eax
  40431e:	push   edx
  40431f:	xor    eax,0x46f0dfbb
  404324:	dec    ebx
  404325:	ins    BYTE PTR es:[edi],dx
  404326:	int    0x8e
  404328:	cdq    
  404329:	ins    BYTE PTR es:[edi],dx
  40432a:	cdq    
  40432b:	adc    BYTE PTR [eax],cl
  40432d:	fdiv   DWORD PTR [ebx+edx*2]
  404330:	sub    eax,0x74f05ec3
  404335:	cli    
  404336:	(bad)  
  404337:	lock mov esp,0x18a038ba
  40433d:	mov    ecx,DWORD PTR ds:0xb6a69047
  404343:	nop
  404344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404345:	sar    cl,cl
  404347:	ret    
  404348:	xor    ebp,0x90542256
  40434e:	xrelease xchg DWORD PTR [ebx+0x35],esp
  404352:	(bad)  
  404353:	jnp    0x4043d4
  404355:	jg     0x40439c
  404357:	inc    eax
  404358:	xor    DWORD PTR [esi-0x33],eax
  40435b:	jns    0x4043b0
  40435d:	xchg   esp,eax
  40435e:	adc    eax,0x3b7807df
  404363:	pop    esi
  404364:	sbb    eax,0x4ebbd57c
  404369:	out    0xea,eax
  40436b:	mov    dh,al
  40436d:	mov    ch,0xf9
  40436f:	lahf   
  404370:	fcmovnbe st,st(2)
  404372:	pop    edx
  404373:	mov    ebx,0x1a2aaa46
  404378:	cs jnp 0x404333
  40437b:	retf   0x6883
  40437e:	sar    bl,0xcb
  404381:	cwde   
  404382:	in     eax,dx
  404383:	aam    0xbc
  404385:	mov    ah,0xd
  404387:	cmp    eax,0xd18d1d3f
  40438c:	out    dx,eax
  40438d:	test   al,0xac
  40438f:	pop    ebx
  404390:	imul   BYTE PTR [esi-0x48]
  404393:	xchg   ecx,eax
  404394:	pop    edi
  404395:	ror    DWORD PTR [ebx],0x8a
  404398:	retf   
  404399:	fiadd  DWORD PTR [eax-0x5b]
  40439c:	xchg   edx,eax
  40439d:	dec    edx
  40439e:	xor    ecx,DWORD PTR [ecx+esi*2-0x60]
  4043a2:	out    0x31,eax
  4043a4:	popa   
  4043a5:	fdiv   DWORD PTR [edx-0x28b3538e]
  4043ab:	leave  
  4043ac:	pushf  
  4043ad:	jns    0x404338
  4043af:	stc    
  4043b0:	ficom  DWORD PTR [edx]
  4043b2:	sbb    ebp,edi
  4043b4:	push   esi
  4043b5:	lods   al,BYTE PTR ds:[esi]
  4043b6:	sar    esi,cl
  4043b8:	pop    ecx
  4043b9:	cmp    ebx,edi
  4043bb:	xchg   esp,eax
  4043bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043bd:	and    BYTE PTR [esp+edi*2],al
  4043c0:	add    bh,0x55
  4043c3:	sbb    BYTE PTR [esi+0x3],dl
  4043c6:	sti    
  4043c7:	xor    bl,BYTE PTR [ebx]
  4043c9:	cmp    eax,0x5c7d8b6a
  4043ce:	stc    
  4043cf:	mov    dl,0x3a
  4043d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043d2:	loopne 0x404393
  4043d4:	sub    dl,bl
  4043d6:	bound  eax,QWORD PTR [ecx-0x79]
  4043d9:	inc    edi
  4043da:	xchg   edx,eax
  4043db:	in     eax,0xd0
  4043dd:	inc    edi
  4043de:	lds    esp,FWORD PTR fs:[ebx+eax*4]
  4043e2:	mov    bh,0xb
  4043e4:	hlt    
  4043e5:	jle    0x4043b8
  4043e7:	jle    0x40443d
  4043e9:	in     al,dx
  4043ea:	nop
  4043eb:	rol    dl,0xa1
  4043ee:	addr16 ds add al,0x13
  4043f2:	sti    
  4043f3:	stc    
  4043f4:	mov    ds:0x2df32973,eax
  4043f9:	mov    eax,ds:0xeddfd40
  4043fe:	aas    
  4043ff:	adc    DWORD PTR [edx],0xa3552c20
  404405:	inc    esi
  404406:	mov    al,ds:0xce403304
  40440b:	pop    ebx
  40440c:	cmp    al,BYTE PTR [edi-0x51]
  40440f:	mov    ch,0x4f
  404411:	jmp    0xbe88:0xb8556815
  404418:	nop
  404419:	xchg   esi,eax
  40441a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40441b:	cs in  eax,dx
  40441d:	push   es
  40441e:	jnp    0x404459
  404420:	add    DWORD PTR [eax+0x12],ecx
  404423:	test   al,0x9c
  404425:	cmp    bl,BYTE PTR ds:0xb77f0a7f
  40442b:	sbb    eax,ecx
  40442d:	aad    0xd0
  40442f:	push   0xffffffb9
  404431:	fdiv   DWORD PTR [edi]
  404433:	mov    al,ds:0xdbc266e2
  404438:	jp     0x40447e
  40443a:	in     al,0x9c
  40443c:	xchg   cl,bl
  40443e:	dec    ebx
  40443f:	retf   0xfedc
  404442:	int3   
  404443:	mov    ch,0x0
  404445:	push   0xffffffc7
  404447:	jnp    0x4044c6
  404449:	dec    eax
  40444a:	jle    0x4043e8
  40444c:	js     0x4044bd
  40444e:	(bad)  
  40444f:	push   ecx
  404450:	jns    0x40446d
  404452:	adc    al,0x6d
  404454:	push   0xad80bd71
  404459:	xor    DWORD PTR [ebx+0x3d],ebp
  40445c:	xor    BYTE PTR [ebx+0x51e05dd5],dl
  404462:	ins    BYTE PTR es:[edi],dx
  404463:	xchg   esp,eax
  404464:	lea    ebp,[edx+esi*8+0x3]
  404468:	add    al,0x4
  40446a:	adc    BYTE PTR [ecx],cl
  40446c:	cmp    al,0x6
  40446e:	rcr    DWORD PTR [eax-0x20],1
  404471:	mov    ebx,DWORD PTR [edx+eax*4]
  404474:	jg     0x4044ea
  404476:	xor    ah,bh
  404478:	lock stc 
  40447a:	aaa    
  40447b:	xor    DWORD PTR [esi+0xed0383],edx
  404481:	xor    edx,DWORD PTR [edi-0x3c]
  404484:	dec    esp
  404485:	and    BYTE PTR [ecx+0x6aff935e],bl
  40448b:	fsubr  DWORD PTR [edx]
  40448d:	dec    ebx
  40448e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40448f:	ret    0x339c
  404492:	mov    al,0x9
  404494:	and    ah,ah
  404496:	sub    eax,0xe82e079d
  40449b:	and    esi,DWORD PTR [esi+ebx*4-0x77]
  40449f:	adc    ebx,DWORD PTR [edi-0x59]
  4044a2:	lods   eax,DWORD PTR ds:[esi]
  4044a3:	dec    ecx
  4044a4:	mov    BYTE PTR [esi+0x6703b82a],cl
  4044aa:	xchg   esi,eax
  4044ab:	jns    0x4044f9
  4044ad:	retf   
  4044ae:	mov    al,ds:0xd9e6ca96
  4044b3:	fisttp QWORD PTR [edx-0x49]
  4044b6:	pop    es
  4044b7:	pop    eax
  4044b8:	ins    DWORD PTR es:[edi],dx
  4044b9:	mov    BYTE PTR [ebx],cl
  4044bb:	jmp    0x404492
  4044bd:	mov    ch,dl
  4044bf:	popf   
  4044c0:	and    ebp,0x21
  4044c3:	es mov eax,0x7a3af390
  4044c9:	repnz rcl BYTE PTR [edi+esi*2-0x6b],cl
  4044ce:	and    al,BYTE PTR [eax+0x4b53c608]
  4044d4:	xchg   ebx,eax
  4044d5:	jns    0x404485
  4044d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d8:	and    eax,0x5a5151a3
  4044dd:	dec    esp
  4044de:	or     BYTE PTR cs:[ebx],bh
  4044e1:	push   edi
  4044e2:	push   ebx
  4044e3:	daa    
  4044e4:	push   0x56
  4044e6:	div    BYTE PTR [ecx+0x58c0e6ee]
  4044ec:	popa   
  4044ed:	push   ds
  4044ee:	mov    al,0x1a
  4044f0:	jmp    0x404480
  4044f2:	test   BYTE PTR [ebp-0x7257b01],al
  4044f8:	push   ecx
  4044f9:	push   esi
  4044fa:	mov    edi,0xb21e2a11
  4044ff:	and    bh,BYTE PTR [ebx]
  404501:	pop    edi
  404502:	cmp    edi,eax
  404504:	in     eax,0x75
  404506:	dec    esi
  404507:	dec    ecx
  404508:	xor    dh,dh
  40450a:	sbb    al,0x15
  40450c:	aaa    
  40450d:	aam    0x84
  40450f:	fwait
  404510:	lea    esp,[ebx+0x5c]
  404513:	dec    esi
  404514:	pop    edi
  404515:	cdq    
  404516:	int    0x3
  404518:	inc    esp
  404519:	dec    esi
  40451a:	jb     0x4044bd
  40451c:	sti    
  40451d:	sbb    bl,0xd
  404520:	xor    BYTE PTR [ecx-0x7812d20a],al
  404526:	dec    ebx
  404527:	(bad)  
  404528:	jecxz  0x40457e
  40452a:	jbe    0x404532
  40452c:	mov    ds:0x4bc24cde,eax
  404531:	sub    ch,dl
  404533:	inc    ecx
  404534:	push   es
  404535:	xchg   edi,eax
  404536:	cmp    DWORD PTR [esi-0x25],0xf0864666
  40453d:	sahf   
  40453e:	mov    eax,0xc780368d
  404543:	xchg   ebp,eax
  404544:	aam    0x78
  404546:	adc    al,0xa8
  404548:	inc    ecx
  404549:	push   esp
  40454a:	rcr    DWORD PTR [edi-0x59dfcfd5],0x8e
  404551:	mov    dh,0xef
  404553:	adc    ch,bh
  404555:	xchg   edx,eax
  404556:	daa    
  404557:	dec    eax
  404558:	xchg   BYTE PTR [ecx-0x5f2d2f8d],dh
  40455e:	jmp    0xe42a42c3
  404563:	les    esp,FWORD PTR ds:0x1a947b8a
  404569:	in     al,0x28
  40456b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40456c:	mov    gs,WORD PTR [ebx+0x7]
  40456f:	loop   0x4044fa
  404571:	jbe    0x404563
  404573:	(bad)  
  404574:	repz (bad) 
  404576:	push   ecx
  404577:	nop
  404578:	mov    ebp,0x179f642f
  40457d:	and    esp,DWORD PTR [esi-0x64]
  404580:	popf   
  404581:	cli    
  404582:	int    0xcf
  404584:	mov    BYTE PTR [ecx],bl
  404586:	neg    BYTE PTR [ecx]
  404588:	cmp    bl,bl
  40458a:	inc    edi
  40458b:	dec    edi
  40458c:	cmp    al,0xf2
  40458e:	mov    ah,0xc9
  404590:	mov    ebx,cs
  404592:	mov    edx,ss
  404594:	cmp    al,0xf7
  404596:	out    0x77,al
  404598:	push   es
  404599:	fs test eax,0x6a27d698
  40459f:	clc    
  4045a0:	cmp    esp,DWORD PTR [ecx-0x32830eb2]
  4045a6:	loop   0x404601
  4045a8:	fwait
  4045a9:	or     edi,ebp
  4045ab:	inc    ebx
  4045ac:	mov    es,WORD PTR [esi+0x2a]
  4045af:	test   eax,0xbe4612ea
  4045b4:	ja     0x404622
  4045b6:	aam    0x59
  4045b8:	fistp  WORD PTR [esi]
  4045ba:	mov    ah,0xcd
  4045bc:	ret    
  4045bd:	xchg   eax,esi
  4045bf:	ins    BYTE PTR es:[edi],dx
  4045c0:	push   cs
  4045c1:	pop    ebx
  4045c2:	gs mov dl,0xc0
  4045c5:	je     0x4045dc
  4045c7:	push   ebx
  4045c8:	lock sub al,0x48
  4045cb:	adc    al,BYTE PTR [edi-0x1c020aaf]
  4045d1:	xchg   ebx,eax
  4045d2:	xchg   esi,eax
  4045d3:	dec    esi
  4045d4:	mov    ebx,0xf132d58f
  4045d9:	(bad)  
  4045da:	clc    
  4045db:	ss mov ebx,0x6b1321a0
  4045e1:	cli    
  4045e2:	stos   DWORD PTR es:[edi],eax
  4045e3:	xchg   ecx,eax
  4045e4:	cmp    al,0xbf
  4045e6:	cwde   
  4045e7:	inc    edx
  4045e8:	and    ecx,0xa1f04443
  4045ee:	(bad)  
  4045ef:	cmp    dl,BYTE PTR [ebx+0x38]
  4045f2:	mov    esp,0xa5024062
  4045f7:	mov    esi,0xd14c83a9
  4045fc:	ja     0x4045c8
  4045fe:	aad    0x14
  404600:	and    BYTE PTR [ebx],dh
  404602:	test   edx,0x8f19aa7d
  404608:	sub    al,0x5e
  40460a:	int    0x87
  40460c:	ds mov bh,0x31
  40460f:	mul    BYTE PTR [esi+0x78c7b65]
  404615:	xor    al,BYTE PTR [esi+0xc]
  404618:	pop    edx
  404619:	mov    ds:0xe29e5e73,eax
  40461e:	fadd   DWORD PTR ds:0x30ae0ca8
  404624:	xor    eax,0x73f3cce3
  404629:	sub    DWORD PTR [eax-0x5f962a5c],edi
  40462f:	xor    ch,bh
  404631:	scas   eax,DWORD PTR es:[edi]
  404632:	cmp    BYTE PTR [esi-0x22338954],dh
  404638:	(bad)  [ebx+eax*2+0x2f]
  40463c:	push   ebx
  40463d:	sub    eax,DWORD PTR ds:0x26371626
  404643:	mov    ds:0x8a6fcd4f,eax
  404648:	mov    ebx,0xa99b5166
  40464d:	aad    0x1d
  40464f:	sbb    eax,0xd64cab0
  404654:	inc    edi
  404655:	inc    esp
  404656:	nop
  404657:	pop    ebp
  404658:	pop    es
  404659:	scas   eax,DWORD PTR es:[edi]
  40465a:	in     al,0x14
  40465c:	sti    
  40465d:	sbb    esp,DWORD PTR [eax]
  40465f:	popa   
  404660:	js     0x4046c1
  404662:	adc    DWORD PTR [ebx],ebp
  404664:	pop    esp
  404665:	call   0x41fdb133
  40466a:	test   BYTE PTR [ebx+0x58c5fa4d],0xdc
  404671:	adc    eax,DWORD PTR ds:0x148ce3c8
  404677:	stos   BYTE PTR es:[edi],al
  404678:	cli    
  404679:	push   0xb9d1c14b
  40467e:	mov    bh,0x79
  404680:	inc    eax
  404681:	pop    ebp
  404682:	push   esi
  404683:	dec    esi
  404684:	push   edi
  404685:	(bad)  
  404686:	loopne 0x40468b
  404688:	push   0x7d
  40468a:	inc    DWORD PTR [edx+0x3]
  40468d:	push   edi
  40468e:	outs   dx,DWORD PTR ds:[esi]
  40468f:	mov    al,0x8e
  404691:	or     edi,ecx
  404693:	dec    ecx
  404694:	xor    al,0x54
  404696:	lds    ebp,FWORD PTR [ecx+0x11a0c311]
  40469c:	pop    ss
  40469d:	(bad)  
  40469e:	push   edi
  40469f:	jmp    0x7c6b488f
  4046a4:	inc    ebp
  4046a5:	clc    
  4046a6:	inc    esp
  4046a7:	loopne 0x4046c5
  4046a9:	mov    ds:0xb916f019,al
  4046ae:	pop    eax
  4046af:	das    
  4046b0:	lods   eax,DWORD PTR ds:[esi]
  4046b1:	xor    al,0x38
  4046b3:	cli    
  4046b4:	pop    es
  4046b5:	mov    ah,0x1
  4046b7:	xchg   BYTE PTR [esi+0x214c1afa],ch
  4046bd:	in     al,dx
  4046be:	aaa    
  4046bf:	ret    0xa433
  4046c2:	mov    al,0x6
  4046c4:	lods   eax,DWORD PTR ds:[esi]
  4046c5:	stos   DWORD PTR es:[edi],eax
  4046c6:	inc    esi
  4046c7:	mov    WORD PTR [ebp-0x5ad94477],es
  4046cd:	cld    
  4046ce:	repnz or DWORD PTR [esi],ebx
  4046d1:	mov    cl,BYTE PTR [eax-0x8973eaa]
  4046d7:	adc    DWORD PTR [edi],esi
  4046d9:	lods   al,BYTE PTR ds:[esi]
  4046da:	add    al,0x1b
  4046dc:	ins    BYTE PTR es:[edi],dx
  4046dd:	(bad)  
  4046de:	(bad)  
  4046e0:	cmp    al,dh
  4046e2:	pop    ebp
  4046e3:	aam    0x6c
  4046e5:	sub    BYTE PTR [ebx+0x65],0x6b
  4046e9:	sub    esi,DWORD PTR ds:0x19082ae
  4046ef:	inc    eax
  4046f0:	push   esp
  4046f1:	push   edx
  4046f2:	std    
  4046f3:	aas    
  4046f4:	or     dl,ah
  4046f6:	call   0xbbba:0xb351d132
  4046fd:	test   BYTE PTR [ebx-0xb],ch
  404700:	jns    0x4046f5
  404702:	and    dh,0xdc
  404705:	scas   eax,DWORD PTR es:[edi]
  404706:	icebp  
  404707:	pop    eax
  404708:	pushf  
  404709:	imul   esi,DWORD PTR [ebx+0x70a862c8],0xafea69bf
  404713:	sub    al,0x16
  404715:	cmp    eax,0xc351818b
  40471a:	enter  0xb115,0xc0
  40471e:	sub    BYTE PTR [ebp-0x726f6599],0xc1
  404725:	retf   
  404726:	ret    0x42c6
  404729:	add    DWORD PTR [eax+edi*1+0x667e9a4c],eax
  404730:	adc    DWORD PTR [ebx-0x5d853334],ebx
  404736:	cmp    BYTE PTR [ecx+0x43256852],0xe
  40473d:	retf   
  40473e:	xlat   BYTE PTR ds:[ebx]
  40473f:	pop    edi
  404740:	and    bh,ah
  404742:	and    edx,esi
  404744:	mov    al,ds:0x98b9255f
  404749:	popf   
  40474a:	adc    ecx,DWORD PTR [esi]
  40474c:	popa   
  40474d:	(bad)  
  40474e:	mov    eax,0x76dee0c
  404753:	mov    BYTE PTR [edx+0x58],0xb0
  404757:	data16 mov WORD PTR [esi-0x71128fd7],ds
  40475e:	lock push esp
  404760:	dec    esi
  404761:	sahf   
  404762:	adc    DWORD PTR [ecx+0x19],esi
  404765:	pusha  
  404766:	pop    ebx
  404767:	xor    cl,BYTE PTR [ecx+0x7788e28c]
  40476d:	test   eax,0x6f7b71f4
  404772:	pop    es
  404773:	dec    ecx
  404774:	lock je 0x4046fb
  404777:	sub    DWORD PTR [eax-0xe],ecx
  40477a:	mov    DWORD PTR [eax-0x3117d1d1],eax
  404780:	repz ret 
  404782:	lds    edx,FWORD PTR [esi-0x51]
  404785:	icebp  
  404786:	test   esp,0xbfeda5
  40478c:	or     al,0x1
  40478e:	xchg   edi,eax
  40478f:	idiv   DWORD PTR [edx-0x59a9dbfa]
  404795:	fiadd  WORD PTR [ebp-0x7349145e]
  40479b:	pop    esp
  40479c:	icebp  
  40479d:	mov    ss,WORD PTR [eax-0x6e]
  4047a0:	out    0x8,al
  4047a2:	rol    DWORD PTR [eax+eiz*2+0x1a],cl
  4047a6:	dec    ebx
  4047a7:	sbb    esp,ebp
  4047a9:	jp     0x404819
  4047ab:	sub    BYTE PTR [edx],dh
  4047ad:	cld    
  4047ae:	popa   
  4047af:	inc    ebp
  4047b0:	jno    0x404791
  4047b2:	stos   BYTE PTR es:[edi],al
  4047b3:	and    al,0x15
  4047b5:	das    
  4047b6:	xchg   DWORD PTR [ebx],ebp
  4047b8:	push   edx
  4047b9:	and    DWORD PTR [ebp+eax*2+0x14d11416],ebx
  4047c0:	in     al,dx
  4047c1:	xor    BYTE PTR [ebx-0x12],bh
  4047c4:	jl     0x404773
  4047c6:	scas   al,BYTE PTR es:[edi]
  4047c7:	xor    BYTE PTR [edx],al
  4047c9:	mov    eax,ds:0x65480ff8
  4047ce:	stos   DWORD PTR es:[edi],eax
  4047cf:	int3   
  4047d0:	sub    DWORD PTR [bp+si+0x46],0xcf667ac3
  4047d8:	pop    esp
  4047d9:	xchg   esi,ebp
  4047db:	je     0x4047e0
  4047dd:	pushf  
  4047de:	ret    
  4047df:	sar    DWORD PTR [ecx+0x2efb611f],0xf4
  4047e6:	(bad)  
  4047e7:	mov    esp,0x91be048d
  4047ec:	lods   al,BYTE PTR ds:[esi]
  4047ed:	cmp    ebp,ecx
  4047ef:	imul   edi,edx,0x51c71b35
  4047f5:	test   DWORD PTR [ecx+ecx*2-0x1e],esi
  4047f9:	lock loope 0x404808
  4047fc:	mov    dh,0xc8
  4047fe:	js     0x40484a
  404800:	out    dx,al
  404801:	ret    
  404802:	add    esi,DWORD PTR [eax-0x2e794307]
  404808:	sti    
  404809:	stos   BYTE PTR es:[edi],al
  40480a:	fs (bad) 
  40480c:	jns    0x404877
  40480e:	xchg   edi,eax
  40480f:	jmp    0x1a0:0x869f355e
  404816:	or     eax,0x7fd822f
  40481b:	lock adc DWORD PTR [esi],ebx
  40481e:	lods   al,BYTE PTR ds:[esi]
  40481f:	jb     0x404842
  404821:	popf   
  404822:	in     al,dx
  404823:	loopne 0x40481e
  404825:	mov    ah,0x4a
  404827:	jl     0x404896
  404829:	nop
  40482a:	push   ecx
  40482b:	adc    bh,cl
  40482d:	pop    eax
  40482e:	fucomi st,st(7)
  404830:	popf   
  404831:	repz into 
  404833:	pop    ds
  404834:	fwait
  404835:	pop    esi
  404836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404837:	ret    0x41a9
  40483a:	outs   dx,DWORD PTR ss:[esi]
  40483c:	loop   0x4047dd
  40483e:	lods   al,BYTE PTR ds:[esi]
  40483f:	sbb    BYTE PTR [edx-0x5dfed9e7],dl
  404845:	leave  
  404846:	jmp    0x23dc1020
  40484b:	fstp   QWORD PTR ds:0x316061e9
  404851:	push   0xaf507d1f
  404856:	mov    dl,0x1d
  404858:	retf   
  404859:	inc    ebp
  40485a:	push   ds
  40485b:	jae    0x4048c8
  40485d:	sahf   
  40485e:	push   es
  40485f:	jae    0x4048a7
  404861:	(bad)  
  404862:	jmp    0x748:0x98a33c3f
  404869:	mov    dh,0x37
  40486b:	add    ch,BYTE PTR [eax+0x629a8b9f]
  404871:	pop    es
  404872:	dec    esp
  404873:	repnz test DWORD PTR [esi-0x13c0b1cb],ecx
  40487a:	push   es
  40487b:	div    BYTE PTR [eax+edx*2+0x2d80a561]
  404882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404883:	mov    esp,0x7ab63765
  404888:	jb     0x404880
  40488a:	inc    BYTE PTR [edx]
  40488c:	push   edi
  40488d:	pop    ds
  40488e:	cmp    dh,BYTE PTR [edi]
  404890:	pop    es
  404891:	pop    ds
  404892:	sbb    DWORD PTR [edx+0x6c],edi
  404895:	pop    ebx
  404896:	test   al,0x74
  404898:	and    BYTE PTR [ebx-0x52],ah
  40489b:	add    ch,0x67
  40489e:	mov    al,0x9f
  4048a0:	std    
  4048a1:	mov    al,0x39
  4048a3:	push   0xc50db51a
  4048a8:	mov    eax,ds:0x2eb064f4
  4048ad:	inc    ebp
  4048ae:	stc    
  4048af:	cld    
  4048b0:	retf   
  4048b1:	inc    ecx
  4048b2:	iret   
  4048b3:	jne    0x4048e5
  4048b5:	in     eax,0x91
  4048b7:	icebp  
  4048b8:	pop    esp
  4048b9:	add    al,BYTE PTR [esi-0x1539bc2a]
  4048bf:	jmp    0x445bc0b6
  4048c4:	lods   eax,DWORD PTR ds:[esi]
  4048c5:	aas    
  4048c6:	call   0xce01:0xdb866b5d
  4048cd:	dec    esp
  4048ce:	ds push ds
  4048d0:	cli    
  4048d1:	fwait
  4048d2:	dec    esi
  4048d3:	dec    eax
  4048d4:	nop
  4048d5:	dec    ecx
  4048d6:	mov    ah,BYTE PTR [ebx]
  4048d8:	or     ch,BYTE PTR [edi-0x374d3e05]
  4048de:	add    al,0xed
  4048e0:	mov    edx,0x5a1aa4a9
  4048e5:	mov    ah,0xcc
  4048e7:	std    
  4048e8:	sbb    BYTE PTR [esi+0x1ce60bf1],0x80
  4048ef:	cmp    al,0x23
  4048f1:	mov    BYTE PTR [eax],bl
  4048f3:	mov    bl,0xec
  4048f5:	bound  ebp,QWORD PTR [edx-0x27e9ab9d]
  4048fb:	mov    ah,0xba
  4048fd:	mov    fs:0x2bdde10a,eax
  404903:	int    0x1a
  404905:	sbb    eax,0x7638bf95
  40490a:	lds    ecx,FWORD PTR [ecx+0x2c8d4b53]
  404910:	mov    bl,0xd2
  404912:	mov    edi,ebp
  404914:	lds    ecx,FWORD PTR [eax+0xc38c632]
  40491a:	out    0x78,eax
  40491c:	in     al,0xe2
  40491e:	loop   0x404961
  404920:	xchg   edi,eax
  404921:	inc    edx
  404922:	jo     0x404928
  404924:	jg     0x40491d
  404926:	retf   
  404927:	sub    dl,BYTE PTR [esi]
  404929:	(bad)  
  40492a:	pop    esp
  40492b:	xchg   BYTE PTR [ebx-0x53a2e91e],dh
  404931:	push   ecx
  404932:	stos   BYTE PTR es:[edi],al
  404933:	arpl   WORD PTR [esi],si
  404935:	sub    eax,0x4d14f1b8
  40493a:	(bad)  
  40493b:	mov    ebx,0xd3bd45eb
  404940:	and    DWORD PTR [edi],0xffffff8b
  404943:	or     eax,0x6e04fdcc
  404948:	lods   al,BYTE PTR ds:[esi]
  404949:	sti    
  40494a:	mov    cl,BYTE PTR ds:0xfc07582e
  404950:	jno    0x40494e
  404952:	pop    ecx
  404953:	mov    ebp,0xd8c4a2be
  404958:	imul   esp,ebx,0xc6400c7b
  40495e:	ja     0x404997
  404960:	jmp    0xcc7eb0a
  404965:	shl    DWORD PTR [ebx+edi*1-0x2b],1
  404969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40496a:	int    0x5a
  40496c:	xchg   DWORD PTR [edi],edx
  40496e:	cwde   
  40496f:	adc    eax,0x9ffd37cb
  404974:	cwde   
  404975:	cmp    eax,0xd8b1f016
  40497a:	into   
  40497b:	jle    0x4049e6
  40497d:	jno    0x40494d
  40497f:	jg     0x404987
  404981:	mov    WORD PTR ds:0x9d7f987f,ds
  404987:	lea    esi,[ebx+ecx*8+0x7a]
  40498b:	shl    DWORD PTR [ebp-0x1a],cl
  40498e:	loop   0x40496f
  404990:	call   0x2f32b4bb
  404995:	mov    WORD PTR [edx-0x33e4b11d],cs
  40499b:	in     al,0xbc
  40499d:	pop    edx
  40499e:	xchg   esp,eax
  40499f:	inc    eax
  4049a0:	mov    edi,0x4cc54d9b
  4049a5:	dec    ecx
  4049a6:	aas    
  4049a7:	xor    eax,0xfa34e0f1
  4049ac:	sbb    eax,0xe9a55e10
  4049b1:	sbb    DWORD PTR [esi-0x25c1998a],ebp
  4049b7:	inc    ebx
  4049b8:	test   BYTE PTR [ebp-0x7f],cl
  4049bb:	or     dl,BYTE PTR [ebx]
  4049bd:	push   esp
  4049be:	pusha  
  4049bf:	mov    bl,0xbe
  4049c1:	fwait
  4049c2:	mov    ecx,0x6d02b52c
  4049c7:	push   edx
  4049c8:	ror    DWORD PTR [edi+0x10945ac8],cl
  4049ce:	dec    ebx
  4049cf:	and    BYTE PTR [esp+ecx*1],bl
  4049d2:	cmp    DWORD PTR [eax],ebp
  4049d4:	sbb    ecx,esi
  4049d6:	cmp    eax,0xed1c1136
  4049db:	sub    ah,BYTE PTR [eax-0x14]
  4049de:	popf   
  4049df:	rcl    BYTE PTR [edi],cl
  4049e1:	mov    edx,0x2d8794c4
  4049e6:	mov    ds:0xad9b39ff,eax
  4049eb:	mov    cs,edi
  4049ed:	adc    ch,BYTE PTR [esi+0x7b]
  4049f0:	repz jmp 0x4049da
  4049f3:	mov    ch,0xf6
  4049f5:	outs   dx,DWORD PTR ds:[esi]
  4049f6:	jmp    0x404a65
  4049f8:	stos   DWORD PTR es:[edi],eax
  4049f9:	sbb    bh,BYTE PTR [ecx]
  4049fb:	xchg   ecx,eax
  4049fc:	mov    WORD PTR [ecx+0x626b2197],ss
  404a02:	adc    al,0x33
  404a04:	pop    edx
  404a05:	pop    ecx
  404a06:	iret   
  404a07:	fwait
  404a08:	lock ss out 0xa0,eax
  404a0c:	inc    eax
  404a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a0e:	adc    BYTE PTR [edx],bl
  404a10:	rcr    DWORD PTR [esi-0x1f1ed9fe],cl
  404a16:	mov    al,0xbf
  404a18:	jae    0x404a66
  404a1a:	into   
  404a1b:	jbe    0x4049a5
  404a1d:	hlt    
  404a1e:	fdivrp st(6),st
  404a20:	lods   eax,DWORD PTR ds:[esi]
  404a21:	adc    al,0x15
  404a23:	(bad)  
  404a24:	push   ecx
  404a25:	sbb    eax,0xdd1ec23c
  404a2a:	sub    al,0xfb
  404a2c:	out    dx,al
  404a2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a2e:	xor    dh,dl
  404a30:	pop    ss
  404a31:	add    al,0x3a
  404a33:	aam    0x63
  404a35:	fst    QWORD PTR [edi+0x59b77180]
  404a3b:	dec    esi
  404a3c:	dec    edx
  404a3d:	es mov edi,0x222bf180
  404a43:	xchg   edi,eax
  404a44:	mov    ebp,DWORD PTR [edx+eiz*8+0x6636af7f]
  404a4b:	pop    ecx
  404a4c:	adc    cl,BYTE PTR [eax-0x48]
  404a4f:	or     bl,cl
  404a51:	and    DWORD PTR [esi-0x27],0x28
  404a55:	mov    dl,0x5f
  404a57:	retf   0xb5ae
  404a5a:	or     edx,ebp
  404a5c:	fld    QWORD PTR [ecx]
  404a5e:	dec    edx
  404a5f:	imul   edx,DWORD PTR [ebx+0x267c5c5],0xfffffff6
  404a66:	out    dx,al
  404a67:	inc    ebx
  404a68:	pop    ebx
  404a69:	in     eax,dx
  404a6a:	mov    ecx,DWORD PTR [ebx-0x21393ff2]
  404a70:	test   eax,0xd1fc46ac
  404a75:	xor    eax,0xd18a2f6f
  404a7a:	or     bl,BYTE PTR [ebp-0x4d]
  404a7d:	fstp   DWORD PTR [esi-0x3]
  404a80:	mov    edx,0xee1b3a3c
  404a85:	cs mov dl,0xd9
  404a88:	cmp    ch,BYTE PTR [edx+0x7de89853]
  404a8e:	cmc    
  404a8f:	sub    BYTE PTR [edx],0xd1
  404a92:	cmc    
  404a93:	ffree  st(6)
  404a95:	cld    
  404a96:	jl     0x404a66
  404a98:	cmp    al,0xa9
  404a9a:	dec    ebp
  404a9b:	mov    esp,0x5b21b833
  404aa0:	pop    ecx
  404aa1:	add    bh,cl
  404aa3:	dec    ebx
  404aa4:	dec    ebx
  404aa5:	mov    esi,0x2535372e
  404aaa:	push   ss
  404aab:	inc    ebp
  404aac:	mov    bl,0x47
  404aae:	mov    eax,ds:0x85447023
  404ab3:	push   cs
  404ab4:	cmc    
  404ab5:	pop    edi
  404ab6:	in     al,dx
  404ab7:	ss test eax,0x85a854e8
  404abd:	test   BYTE PTR [edi-0x29fc5038],bh
  404ac3:	bndldx bnd2,[edx+edi*1]
  404ac7:	sub    eax,DWORD PTR [ebx*1+0x23d5de79]
  404ace:	loope  0x404aee
  404ad0:	ror    edi,1
  404ad2:	fdiv   QWORD PTR [ecx-0x66f3323a]
  404ad8:	adc    BYTE PTR [edi+0x78349e75],dl
  404ade:	jl     0x404a85
  404ae0:	call   0xfed2:0xe6321659
  404ae7:	jge    0x404b37
  404ae9:	fisttp DWORD PTR [ebp+0x215b86cb]
  404aef:	mov    ch,al
  404af1:	jb     0x5df090b9
  404af7:	imul   ecx,DWORD PTR [edx],0xce65ac32
  404afd:	inc    edi
  404afe:	mov    edx,0x38bbc522
  404b03:	in     al,0x3f
  404b05:	aas    
  404b06:	in     al,dx
  404b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b08:	sub    eax,0xbfd65598
  404b0d:	cmp    al,0xa6
  404b0f:	mov    ch,0x1f
  404b11:	xchg   ecx,eax
  404b12:	inc    edi
  404b13:	push   edi
  404b14:	mov    eax,0xda1f0ed2
  404b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b1a:	and    esp,ebp
  404b1c:	xchg   edi,eax
  404b1d:	mov    ?,WORD PTR [esi+0x4c9e73ea]
  404b23:	dec    ecx
  404b24:	enter  0x22b8,0xae
  404b28:	je     0x404abd
  404b2a:	sub    BYTE PTR [ecx],ah
  404b2c:	pop    edi
  404b2d:	add    eax,0x99a11fe8
  404b32:	mov    dx,0x23a5
  404b36:	push   ss
  404b37:	inc    ecx
  404b38:	retf   
  404b39:	add    al,0xfc
  404b3b:	call   0x90a92e6
  404b40:	sti    
  404b41:	clc    
  404b42:	push   0x9cf41bde
  404b47:	push   esi
  404b48:	shl    BYTE PTR [edx+0x7c],0x41
  404b4c:	xchg   edi,eax
  404b4d:	(bad)
  404b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b51:	repnz invlpg BYTE PTR [eax+0x31]
  404b56:	lods   eax,DWORD PTR ds:[esi]
  404b57:	mov    bl,0x7c
  404b59:	(bad)  
  404b5a:	adc    bl,BYTE PTR [eax+0x3c21b7cb]
  404b60:	mov    ecx,0x4f88c97
  404b65:	cdq    
  404b66:	xchg   esi,eax
  404b67:	xchg   esp,eax
  404b68:	sti    
  404b69:	jmp    0x3735:0xf2a9106c
  404b70:	xor    al,0x32
  404b72:	retf   0xb29e
  404b75:	jecxz  0x404b37
  404b77:	inc    ecx
  404b78:	scas   eax,DWORD PTR es:[edi]
  404b79:	daa    
  404b7a:	add    BYTE PTR [eax-0x59],bl
  404b7d:	outs   dx,DWORD PTR ds:[esi]
  404b7e:	push   cs
  404b7f:	xchg   ebp,eax
  404b80:	push   ecx
  404b81:	test   DWORD PTR [esi+ebx*8],esp
  404b84:	pop    ecx
  404b85:	addr16 jne 0x404b1d
  404b88:	add    DWORD PTR [ecx],edx
  404b8a:	imul   edx,DWORD PTR [ecx-0x5b],0xdd55a9c0
  404b91:	and    ecx,ecx
  404b93:	mov    edx,0x870ca3d1
  404b98:	shl    DWORD PTR [ecx+edi*4-0x3a],1
  404b9c:	cmp    eax,0xaa7b3cf6
  404ba1:	dec    esi
  404ba2:	inc    esi
  404ba3:	jmp    0x133430de
  404ba8:	inc    eax
  404ba9:	(bad)  
  404baa:	retf   
  404bab:	invd   
  404bad:	jnp    0x404c03
  404baf:	retf   0xf237
  404bb2:	mov    esp,0xc23b2fd
  404bb7:	sbb    BYTE PTR [eax+0x78],0xe4
  404bbb:	adc    eax,0x3832144d
  404bc0:	cmp    eax,0xc83abf09
  404bc5:	test   BYTE PTR [esp+eiz*8],dh
  404bc8:	sbb    DWORD PTR [ecx-0x35],ebx
  404bcb:	dec    ebx
  404bcc:	and    al,0x93
  404bce:	loope  0x404c24
  404bd0:	mov    ch,0x12
  404bd2:	add    BYTE PTR [ecx-0x1c27f1b0],0x82
  404bd9:	mov    dl,0x24
  404bdb:	pop    edi
  404bdc:	adc    DWORD PTR [edx+0x34],0x24
  404be0:	adc    BYTE PTR [ebp-0x183ca191],bh
  404be6:	shr    BYTE PTR [esi-0x26],1
  404be9:	inc    ebp
  404bea:	inc    esi
  404beb:	pusha  
  404bec:	(bad)  
  404bed:	out    0xb3,al
  404bef:	xchg   esp,eax
  404bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bf1:	shr    DWORD PTR [ebp+0x35],cl
  404bf4:	fsub   DWORD PTR [ebp-0x4d267569]
  404bfa:	into   
  404bfb:	arpl   cx,bx
  404bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bfe:	pop    edx
  404bff:	aaa    
  404c00:	repnz out 0xfb,eax
  404c03:	cmc    
  404c04:	out    0x32,eax
  404c06:	fnstsw WORD PTR [edx+0x2a2c5553]
  404c0c:	push   esi
  404c0d:	sub    ah,BYTE PTR [ebx-0x31]
  404c10:	std    
  404c11:	dec    ebx
  404c12:	add    eax,0xeb5ab7b3
  404c17:	lock adc esp,ecx
  404c1a:	cs and bl,0x44
  404c1e:	daa    
  404c1f:	jo     0x404be5
  404c21:	pop    esp
  404c22:	mov    ds:0xa1756c7,al
  404c27:	popa   
  404c28:	sub    ch,BYTE PTR [ebp+0x1f]
  404c2b:	mov    dl,0x96
  404c2d:	push   es
  404c2e:	sub    bh,dh
  404c30:	xchg   esi,eax
  404c31:	addr16 push ebp
  404c33:	ret    
  404c34:	sbb    DWORD PTR [ebp+edx*2+0x3c290357],ebp
  404c3b:	pop    es
  404c3c:	sub    eax,0xdd3171f0
  404c41:	xchg   ebp,eax
  404c42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c43:	jbe    0x404c63
  404c45:	ins    DWORD PTR es:[edi],dx
  404c46:	add    BYTE PTR [edi-0x668b502],0x42
  404c4d:	pop    ebx
  404c4e:	jno    0x404c35
  404c50:	push   ss
  404c51:	pop    ecx
  404c52:	repz cwde 
  404c54:	sahf   
  404c55:	or     eax,0xb67879fc
  404c5a:	pop    ebx
  404c5b:	and    esi,DWORD PTR [ecx-0x61]
  404c5e:	mov    dh,0x24
  404c60:	pop    eax
  404c61:	fwait
  404c62:	cmp    eax,0xd6803a21
  404c67:	sbb    edi,esi
  404c69:	nop
  404c6a:	add    ah,BYTE PTR [edx]
  404c6c:	out    0xc0,eax
  404c6e:	popf   
  404c6f:	pusha  
  404c70:	ror    BYTE PTR [edi+0x5e],0xe8
  404c74:	and    dh,0x12
  404c77:	mov    ecx,0x3b3f68d2
  404c7c:	and    bh,BYTE PTR [edx+eiz*4+0x2c]
  404c80:	jb     0x404c32
  404c82:	xchg   esp,eax
  404c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c84:	(bad)  
  404c85:	jno    0x404cd6
  404c87:	packuswb mm6,mm1
  404c8a:	or     DWORD PTR [edi-0x77],0xe7c5f226
  404c91:	pop    ds
  404c92:	push   ebp
  404c93:	sbb    BYTE PTR [eax],bh
  404c95:	mov    al,0xbb
  404c97:	and    al,0x2d
  404c99:	mov    esi,0x7c4edbd2
  404c9e:	pop    edx
  404c9f:	cwde   
  404ca0:	jle    0x404c70
  404ca2:	cmp    ecx,DWORD PTR [esi]
  404ca4:	push   esi
  404ca5:	gs js  0x404ca5
  404ca8:	push   esp
  404ca9:	and    eax,0xe72f340e
  404cae:	cmp    al,0x74
  404cb0:	leave  
  404cb1:	mov    ch,ch
  404cb3:	pop    es
  404cb4:	(bad)  
  404cb5:	push   cs
  404cb6:	cli    
  404cb7:	std    
  404cb8:	inc    edi
  404cb9:	pop    es
  404cba:	or     dl,ch
  404cbc:	xchg   ecx,ebx
  404cbe:	xchg   DWORD PTR [edi],esp
  404cc0:	pop    ds
  404cc1:	repz (bad) 
  404cc3:	mov    dl,0x91
  404cc5:	xor    DWORD PTR [edx+0x7ff84f31],ecx
  404ccb:	lea    eax,ds:0xd8b9c6b2
  404cd1:	xchg   esp,ebx
  404cd3:	cdq    
  404cd4:	lods   al,BYTE PTR ds:[esi]
  404cd5:	add    bh,bl
  404cd7:	dec    edi
  404cd8:	inc    edx
  404cd9:	aad    0xc3
  404cdb:	cdq    
  404cdc:	nop
  404cdd:	mov    ebp,0x83749651
  404ce2:	mov    esp,0x22e7402c
  404ce7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce8:	cmp    ebx,DWORD PTR [esi+0x58]
  404ceb:	enter  0x6a92,0xce
  404cef:	mov    bl,0x51
  404cf1:	and    eax,0x81b67eab
  404cf7:	pop    ebp
  404cf8:	dec    ecx
  404cf9:	scas   eax,DWORD PTR es:[edi]
  404cfa:	lock push ebp
  404cfc:	cwde   
  404cfd:	mov    ds:0xcaf512a,eax
  404d02:	xor    ah,ah
  404d04:	and    eax,0xadef7e14
  404d09:	je     0x404d3a
  404d0b:	repnz dec edi
  404d0d:	les    edi,FWORD PTR [edi-0x427121f7]
  404d13:	ja     0x404d71
  404d15:	les    esp,FWORD PTR [ebx-0x3d68f05]
  404d1b:	add    DWORD PTR [edx-0x56],esi
  404d1e:	push   0xd970fe44
  404d23:	or     al,BYTE PTR [ecx]
  404d25:	push   eax
  404d26:	sbb    BYTE PTR [edx-0x1b],ah
  404d29:	cmp    eax,0xb68c255d
  404d2e:	lds    ebp,FWORD PTR [edi]
  404d30:	mov    ds:0x3df1e517,al
  404d35:	xchg   edi,eax
  404d36:	lods   eax,DWORD PTR ds:[esi]
  404d37:	mov    eax,ds:0xf6252f97
  404d3c:	xchg   BYTE PTR [esi+0x1b2aafd0],ah
  404d42:	mov    ebp,0x87d0577a
  404d47:	mov    edi,0x321e98bb
  404d4c:	aaa    
  404d4d:	xchg   BYTE PTR [ebx-0xb],dl
  404d50:	inc    esp
  404d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d52:	or     dh,BYTE PTR [edx+0x62]
  404d55:	sti    
  404d56:	push   ecx
  404d57:	and    dh,BYTE PTR [ebp+0x71986c60]
  404d5d:	mov    eax,fs:0x44491457
  404d63:	ja     0x404db4
  404d65:	push   0xfffffff4
  404d67:	lds    edi,FWORD PTR [ecx+0x1f]
  404d6a:	sahf   
  404d6b:	test   al,0xda
  404d6d:	sbb    bh,0x6e
  404d70:	arpl   dx,cx
  404d72:	jge    0x404db6
  404d74:	mov    dh,0xf8
  404d76:	(bad)  
  404d77:	xchg   ebp,eax
  404d78:	pop    eax
  404d79:	sbb    ch,BYTE PTR [ebx-0x35]
  404d7c:	xchg   ecx,eax
  404d7d:	fs pextrw ebp,mm2,0x8b
  404d82:	call   0x622:0xdb8583e0
  404d89:	addr16 fs inc ebx
  404d8c:	mov    bh,0xd6
  404d8e:	(bad)  
  404d8f:	pop    esp
  404d90:	addr16 mov ecx,0x81d3e69
  404d96:	sbb    cl,BYTE PTR [ecx-0x6]
  404d99:	mov    esp,0x1c1c99b6
  404d9e:	mov    bl,0xf3
  404da0:	(bad)  
  404da1:	jno    0x404e06
  404da3:	sbb    dh,BYTE PTR [ebp+0x7c9da18e]
  404da9:	and    eax,0x8f244978
  404dae:	pop    ebp
  404daf:	scas   al,BYTE PTR es:[edi]
  404db0:	lods   ax,WORD PTR ds:[esi]
  404db2:	jecxz  0x404dd4
  404db4:	call   0x86b3034c
  404db9:	jp     0x404d74
  404dbb:	lds    edi,FWORD PTR [eax]
  404dbd:	sub    DWORD PTR [edx],ebp
  404dbf:	daa    
  404dc0:	dec    edi
  404dc1:	and    ah,dh
  404dc3:	xor    ch,BYTE PTR [esi]
  404dc5:	outs   dx,BYTE PTR ds:[esi]
  404dc6:	ds mov ebx,0x2e1a1a42
  404dcc:	inc    ebx
  404dcd:	scas   eax,DWORD PTR es:[edi]
  404dce:	pop    ecx
  404dcf:	jb     0x404dbf
  404dd1:	push   esi
  404dd2:	sbb    al,0x30
  404dd4:	sahf   
  404dd5:	icebp  
  404dd6:	call   0x7433:0x24e5de7b
  404ddd:	out    dx,al
  404dde:	test   BYTE PTR [edi+0x2be3c92e],bl
  404de4:	into   
  404de5:	cmp    al,0x4b
  404de7:	mov    ss,eax
  404de9:	push   ds
  404dea:	mov    al,0x6b
  404dec:	loope  0x404e2b
  404dee:	fild   WORD PTR [edi-0x80]
  404df1:	lock iret 
  404df3:	jae    0x404db6
  404df5:	fwait
  404df6:	xchg   ebp,eax
  404df7:	cld    
  404df8:	xchg   ecx,eax
  404df9:	or     eax,0x55f3c870
  404dfe:	int    0xa8
  404e00:	aam    0x5f
  404e02:	scas   al,BYTE PTR es:[edi]
  404e03:	xor    BYTE PTR [edx],ah
  404e05:	dec    edi
  404e06:	ficom  DWORD PTR [ebx+0x399a3992]
  404e0c:	adc    DWORD PTR ds:0x86633f06,ebx
  404e12:	popf   
  404e13:	jle    0x404dfb
  404e15:	das    
  404e16:	mov    al,ds:0xa5577968
  404e1b:	xchg   esp,eax
  404e1c:	inc    eax
  404e1d:	sub    eax,0xa223f45e
  404e22:	jecxz  0x404e0d
  404e24:	add    bh,dh
  404e26:	push   ds
  404e27:	mov    WORD PTR [edi+0x7f7fbef5],es
  404e2d:	(bad)  
  404e2f:	dec    esp
  404e30:	retf   0xeab1
  404e33:	dec    edi
  404e34:	(bad)  
  404e35:	push   es
  404e36:	pushf  
  404e37:	mov    ds,WORD PTR ds:0x5c6e0560
  404e3d:	lods   eax,DWORD PTR ds:[esi]
  404e3e:	fld    QWORD PTR [ebp-0x754fd52]
  404e44:	inc    esp
  404e45:	mov    ?,WORD PTR [ebp-0x6d]
  404e48:	ror    BYTE PTR [eax+0x5a],0x76
  404e4c:	sbb    eax,0xe6070b61
  404e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e52:	mov    dh,0xb1
  404e54:	dec    edi
  404e55:	mov    bh,0xce
  404e57:	inc    ebp
  404e58:	lods   al,BYTE PTR ds:[esi]
  404e59:	cdq    
  404e5a:	mov    bh,0xd4
  404e5c:	in     al,0xea
  404e5e:	out    0x4,eax
  404e60:	sbb    DWORD PTR [edx-0x1c],edx
  404e63:	sub    eax,0x7e2e55bf
  404e68:	ds enter 0x8fdb,0xd3
  404e6d:	and    dh,cl
  404e6f:	xlat   BYTE PTR ds:[ebx]
  404e70:	jmp    0x5c3a7cdc
  404e75:	cmp    eax,0x7aae6a24
  404e7a:	shl    ebx,1
  404e7c:	push   edx
  404e7d:	stos   DWORD PTR es:[edi],eax
  404e7e:	inc    edx
  404e7f:	jmp    0x7839ea76
  404e84:	mov    ebx,0xcd406494
  404e89:	int3   
  404e8a:	jne    0x404e41
  404e8c:	jl     0x404eda
  404e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e8f:	xchg   esi,eax
  404e90:	jb     0x404edb
  404e92:	jmp    DWORD PTR [ebx+esi*4]
  404e95:	aam    0xb3
  404e97:	addr16 mov gs,edx
  404e9a:	xchg   BYTE PTR [edi+0x53],ch
  404e9d:	mov    BYTE PTR [edx-0x30],bh
  404ea0:	add    al,0xe8
  404ea2:	xor    al,0x75
  404ea4:	xchg   esi,eax
  404ea5:	mov    ds:0xadd30a61,al
  404eaa:	add    ecx,ebp
  404eac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ead:	loop   0x404e70
  404eaf:	fwait
  404eb0:	mov    ecx,0x36947efe
  404eb5:	sub    eax,0xa8700691
  404eba:	adc    cl,dh
  404ebc:	inc    eax
  404ebd:	cmp    al,0x7e
  404ebf:	sbb    ch,BYTE PTR ds:0xc759c0c0
  404ec5:	test   DWORD PTR [edx-0x5b],0x35209d1e
  404ecc:	(bad)  
  404ecd:	fdivr  DWORD PTR [esi+0x7e]
  404ed0:	mov    WORD PTR [edx-0x1b],gs
  404ed3:	push   edx
  404ed4:	jnp    0x404ee5
  404ed6:	push   cs
  404ed7:	test   al,0x7c
  404ed9:	aad    0xac
  404edb:	and    bl,0x92
  404ede:	and    esp,DWORD PTR [esi]
  404ee0:	sub    bl,cl
  404ee2:	cmc    
  404ee3:	dec    ebx
  404ee4:	stc    
  404ee5:	shl    DWORD PTR [eax+0x6b2e30a6],1
  404eeb:	ss scas al,BYTE PTR es:[edi]
  404eed:	xor    esp,esi
  404eef:	mov    edi,0xc7c9226f
  404ef4:	add    al,0x66
  404ef6:	pop    ecx
  404ef7:	xchg   esi,eax
  404ef8:	cmp    esp,esp
  404efa:	cmp    DWORD PTR [ebx-0x6ccda5c4],esp
  404f00:	mov    esi,0xc51bc853
  404f05:	or     eax,0x3c3011fc
  404f0a:	daa    
  404f0b:	retf   
  404f0c:	fwait
  404f0d:	sbb    BYTE PTR [esp+edi*1-0x14],al
  404f11:	repnz sub eax,DWORD PTR [edx+0x4c]
  404f15:	outs   dx,DWORD PTR ds:[esi]
  404f16:	gs and al,0x19
  404f19:	mov    esi,0x39bfb
  404f1e:	jecxz  0x404ec6
  404f20:	fisubr WORD PTR [ebp+eax*2-0x1c7f3813]
  404f27:	sbb    BYTE PTR [ecx+0x69e221c9],al
  404f2d:	mov    esi,0xe764c5ac
  404f32:	sbb    DWORD PTR [esi+0x1a155c21],esi
  404f38:	ret    
  404f39:	enter  0xa832,0xe8
  404f3d:	into   
  404f3e:	ins    DWORD PTR es:[edi],dx
  404f3f:	aam    0xf6
  404f41:	leave  
  404f42:	(bad)  
  404f44:	or     esp,DWORD PTR [edx-0x68]
  404f47:	sbb    al,0x6b
  404f49:	cli    
  404f4a:	ja     0x404f24
  404f4c:	or     eax,DWORD PTR [edx]
  404f4e:	(bad)  
  404f4f:	jno    0x404f95
  404f51:	cld    
  404f52:	sar    BYTE PTR [edx+0x17],0x38
  404f56:	or     BYTE PTR [ebx+0x71],ah
  404f59:	loopne 0x404f21
  404f5b:	mov    ds:0xd87a41b6,eax
  404f60:	xor    al,BYTE PTR [ecx+0x3356386e]
  404f66:	mov    edx,DWORD PTR [edx]
  404f68:	push   ss
  404f69:	loop   0x404f8d
  404f6b:	xor    BYTE PTR [edx-0x4b],cl
  404f6e:	xchg   esp,eax
  404f6f:	mov    ebx,0xed442bb9
  404f74:	pop    ds
  404f75:	xchg   ebp,eax
  404f76:	and    DWORD PTR [eax],ebx
  404f78:	xchg   BYTE PTR [ebp+0x7bb98ae1],al
  404f7e:	cld    
  404f7f:	dec    ecx
  404f80:	mov    esi,0x71bf90f2
  404f85:	call   0x1c93240c
  404f8a:	push   ebx
  404f8b:	into   
  404f8c:	lods   al,BYTE PTR ds:[esi]
  404f8d:	lea    esp,[edi-0x7d]
  404f90:	jmp    0x8e08661f
  404f95:	mov    ebp,0x87842574
  404f9a:	inc    edx
  404f9b:	cwde   
  404f9c:	ins    DWORD PTR es:[edi],dx
  404f9d:	loop   0x404f80
  404f9f:	rcr    BYTE PTR [ebp+eax*4-0x596daaae],cl
  404fa6:	call   0x44b5345e
  404fab:	add    al,0x70
  404fad:	xchg   ebp,eax
  404fae:	push   cs
  404faf:	ret    
  404fb0:	int3   
  404fb1:	idiv   DWORD PTR [eax-0x3e]
  404fb4:	fdivr  QWORD PTR [ecx]
  404fb6:	aaa    
  404fb7:	cli    
  404fb8:	outs   dx,BYTE PTR ds:[esi]
  404fb9:	inc    ecx
  404fba:	lock mov dl,0xac
  404fbd:	sar    DWORD PTR [ecx],cl
  404fbf:	jnp    0x405029
  404fc1:	js     0x404ffd
  404fc3:	push   ebx
  404fc4:	aam    0xd
  404fc6:	add    al,0x32
  404fc8:	sbb    al,0xe5
  404fca:	shl    esp,0x6d
  404fcd:	add    dh,BYTE PTR [esi-0x15]
  404fd0:	inc    ebp
  404fd1:	add    eax,0x541c9c21
  404fd6:	add    ecx,eax
  404fd8:	push   cs
  404fd9:	je     0x404f97
  404fdb:	xlat   BYTE PTR ds:[ebx]
  404fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fdd:	ficom  WORD PTR [eax+0x6cd61e6b]
  404fe3:	das    
  404fe4:	ins    DWORD PTR es:[edi],dx
  404fe5:	ror    ecx,cl
  404fe7:	adc    DWORD PTR [eax-0x80],ecx
  404fea:	(bad)  
  404feb:	rcl    BYTE PTR [edi-0x54b3a84f],cl
  404ff1:	xor    bh,BYTE PTR [ecx-0x7]
  404ff4:	lods   eax,DWORD PTR ds:[esi]
  404ff5:	push   es
  404ff6:	push   es
  404ff7:	pop    ds
  404ff8:	cli    
  404ff9:	nop
  404ffa:	sbb    eax,0xaad7d293
  404fff:	dec    edi
  405000:	repz adc bl,BYTE PTR [ebp-0x13]
  405004:	pop    ebx
  405005:	mul    DWORD PTR [esi-0x15]
  405008:	pop    ecx
  405009:	iret   
  40500a:	xchg   edi,eax
  40500b:	mov    bh,0xa6
  40500d:	and    eax,0x2c1197ec
  405012:	mov    al,0xc2
  405014:	cmc    
  405015:	push   edx
  405016:	cmp    BYTE PTR [esi-0x2a0525ff],ch
  40501c:	jle    0x405029
  40501e:	xlat   BYTE PTR ds:[ebx]
  40501f:	retf   
  405020:	add    DWORD PTR [edi-0x6d84bbe6],ebx
  405026:	sub    eax,0x668e80d4
  40502b:	jbe    0x405008
  40502d:	xor    edx,DWORD PTR [esi+edi*4-0x21ca87ca]
  405034:	bound  esi,QWORD PTR [ebp+0xc]
  405037:	mov    edx,0xa881963e
  40503c:	clc    
  40503d:	dec    edi
  40503e:	pop    esi
  40503f:	aaa    
  405040:	xchg   ecx,eax
  405041:	adc    ah,BYTE PTR [eax+edx*8]
  405044:	(bad)  
  405045:	in     eax,dx
  405046:	push   ecx
  405047:	jbe    0x405045
  405049:	push   ebx
  40504a:	lock dec ebp
  40504c:	ret    0x24fd
  40504f:	enter  0x8a19,0xd6
  405053:	add    al,0x8a
  405055:	mov    dl,0xe
  405057:	ret    
  405058:	push   edx
  405059:	cld    
  40505a:	jp     0x405053
  40505c:	push   cs
  40505d:	xchg   esi,eax
  40505e:	es xchg ebx,eax
  405060:	inc    ebp
  405061:	fs push ebp
  405063:	fbld   TBYTE PTR [ebp+eax*8+0xa5ad843]
  40506a:	push   es
  40506b:	(bad)  
  40506c:	aas    
  40506d:	jmp    0x40500f
  40506f:	cmp    ecx,DWORD PTR [ecx+0x7182d853]
  405075:	mov    ds:0xad0b20aa,eax
  40507a:	cmp    al,0x4a
  40507c:	int    0xca
  40507e:	hlt    
  40507f:	push   eax
  405080:	bound  ebp,QWORD PTR [edx+0x31e6846b]
  405086:	adc    esp,ecx
  405088:	mov    bh,0xdd
  40508a:	inc    edx
  40508b:	mov    dl,0x61
  40508d:	addr16 xchg esi,eax
  40508f:	adc    BYTE PTR [ebp+0x2bb0e12],bh
  405095:	sub    eax,0xac46bd48
  40509a:	dec    esp
  40509b:	mov    bh,0x1f
  40509d:	aam    0x4b
  40509f:	adc    DWORD PTR [eax],edi
  4050a1:	jg     0x4050e5
  4050a3:	mov    eax,0x851614dc
  4050a8:	pop    esp
  4050a9:	test   edi,0x157c96a8
  4050af:	cli    
  4050b0:	mov    ds:0x71af940c,eax
  4050b5:	push   ds
  4050b6:	adc    ebx,eax
  4050b8:	daa    
  4050b9:	dec    edi
  4050ba:	xchg   ebp,eax
  4050bb:	or     eax,0x8d312c04
  4050c0:	pusha  
  4050c1:	pop    ss
  4050c2:	call   0x6630:0xf24fb67f
  4050c9:	inc    esp
  4050ca:	(bad)
  4050cd:	pop    ds
  4050ce:	scas   al,BYTE PTR es:[edi]
  4050cf:	mov    eax,ds:0x5c9fc84b
  4050d4:	bound  eax,QWORD PTR [edi-0x30]
  4050d7:	pop    edx
  4050d8:	sub    edi,DWORD PTR [ecx+ebx*1]
  4050db:	shl    BYTE PTR [ecx],cl
  4050dd:	fwait
  4050de:	jae    0x4050ba
  4050e0:	jecxz  0x4050cb
  4050e2:	jns    0x405159
  4050e4:	jmp    0x8c91:0xc627d133
  4050eb:	xchg   edx,eax
  4050ec:	ficomp DWORD PTR [esi-0x3fcc84d6]
  4050f2:	xor    esi,0x7189842d
  4050f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050f9:	adc    cl,BYTE PTR ds:0xcca70f17
  4050ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405100:	mov    ch,0x3
  405102:	fdivr  DWORD PTR [esi-0x15]
  405105:	push   ebp
  405106:	xchg   esp,eax
  405107:	loope  0x405102
  405109:	gs je  0x4050b5
  40510c:	(bad)  
  40510d:	xchg   ecx,eax
  40510e:	shl    BYTE PTR [ebx+0x5ac3bd49],0x8e
  405115:	jne    0x4050ce
  405117:	mov    ecx,0x712c6dfd
  40511c:	mov    ebp,0x9720bfbe
  405121:	dec    esi
  405122:	xor    al,0x1d
  405124:	jne    0x4050ac
  405126:	push   ecx
  405127:	nop
  405128:	lds    edi,FWORD PTR [edx+0x1009a427]
  40512e:	dec    ecx
  40512f:	push   es
  405130:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405131:	int3   
  405132:	mov    ebx,esi
  405134:	mov    ebx,0x685c5578
  405139:	shr    ah,cl
  40513b:	sub    eax,0x7acb9613
  405140:	mov    ebp,0x4ad70773
  405145:	sbb    al,BYTE PTR [ecx+0x356505d2]
  40514b:	inc    ebp
  40514c:	mov    al,0x17
  40514e:	push   ss
  40514f:	ins    BYTE PTR es:[edi],dx
  405150:	jbe    0x40510e
  405152:	fcomp  QWORD PTR ds:0x77632ade
  405158:	sub    DWORD PTR [esi-0x5ad9406d],ebx
  40515e:	ror    edi,cl
  405160:	out    0x33,eax
  405162:	add    al,0x77
  405164:	sbb    bh,BYTE PTR [edi-0x59ae329f]
  40516a:	aas    
  40516b:	inc    edi
  40516c:	sub    ah,BYTE PTR [ecx-0x23]
  40516f:	jp     0x4051c2
  405171:	sub    DWORD PTR [esi],0xffffffdb
  405174:	mov    esp,0x79837639
  405179:	lods   al,BYTE PTR ds:[esi]
  40517a:	or     ebp,DWORD PTR [ebx-0xa0e39bf]
  405180:	enter  0x2a8d,0x87
  405184:	fcmovbe st,st(3)
  405186:	dec    ebp
  405187:	dec    esi
  405188:	mov    ch,0x4c
  40518a:	ret    
  40518b:	loopne 0x405167
  40518d:	sbb    esp,DWORD PTR [eax-0x80]
  405190:	xchg   DWORD PTR [ebx+0x664eabfb],ecx
  405196:	jmp    0x8ae99691
  40519b:	xchg   edi,eax
  40519c:	jo     0x4051c4
  40519e:	in     al,dx
  40519f:	sbb    BYTE PTR [eax+edi*8],dl
  4051a2:	mov    WORD PTR [eax+0x624c616d],ds
  4051a8:	inc    ebx
  4051a9:	es ins BYTE PTR es:[edi],dx
  4051ab:	add    edi,esp
  4051ad:	sbb    bh,bh
  4051af:	(bad)
  4051b2:	mov    dh,0x89
  4051b4:	inc    ecx
  4051b5:	mov    edi,DWORD PTR [ebx+0x31]
  4051b8:	mov    ds:0xa6ba4643,eax
  4051bd:	adc    al,0xad
  4051bf:	cmp    edi,DWORD PTR [ebx-0x5578eb70]
  4051c5:	jnp    0x4051ab
  4051c7:	pusha  
  4051c8:	stc    
  4051c9:	sub    BYTE PTR ds:0x72151ceb,ah
  4051cf:	xchg   ebx,eax
  4051d0:	jge    0x405158
  4051d2:	mov    cl,0xdb
  4051d4:	(bad)  
  4051d5:	mov    eax,DWORD PTR [eax]
  4051d7:	pop    edx
  4051d8:	data16 bnd je 0x40522c
  4051dc:	xchg   esp,eax
  4051dd:	cwde   
  4051de:	push   ds
  4051df:	and    bh,BYTE PTR [ebx]
  4051e1:	jne    0x40518d
  4051e3:	mov    ecx,0x9f319fc0
  4051e8:	xchg   esi,eax
  4051e9:	add    al,0x88
  4051eb:	sti    
  4051ec:	and    BYTE PTR [esi-0x24],bh
  4051ef:	clc    
  4051f0:	and    al,0x8c
  4051f2:	mov    dh,0x3b
  4051f4:	pop    edi
  4051f5:	les    ebp,FWORD PTR [esi+0x6990eac4]
  4051fb:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4051fd:	enter  0xdfb2,0x6d
  405201:	retf   
  405202:	stos   DWORD PTR es:[edi],eax
  405203:	push   ds
  405204:	ret    0x9d15
  405207:	xlat   BYTE PTR ds:[ebx]
  405208:	movsx  eax,BYTE PTR [ebx+0x26]
  40520c:	pop    esp
  40520d:	cwde   
  40520e:	jge    0x40527e
  405210:	cwde   
  405211:	int3   
  405212:	sahf   
  405213:	fcom   st(6)
  405215:	in     al,0xf9
  405217:	sbb    edx,edi
  405219:	pop    ds
  40521a:	mov    al,0x45
  40521c:	outs   dx,BYTE PTR ds:[esi]
  40521d:	cmp    BYTE PTR [ecx-0x76e53d01],0xb6
  405224:	sub    edi,DWORD PTR [ebx+edx*8-0x4e17b63b]
  40522b:	dec    edi
  40522c:	stos   DWORD PTR es:[edi],eax
  40522d:	test   DWORD PTR [eax+0x7cf32737],edx
  405233:	fimul  DWORD PTR [edx+0x7123fc4f]
  405239:	sub    eax,0x81659536
  40523e:	shl    edi,0x21
  405241:	mov    al,0x9d
  405243:	sahf   
  405244:	jno    0x405265
  405246:	inc    edi
  405247:	sub    eax,0x2f19ab50
  40524c:	adc    DWORD PTR [ebx-0x28e209e],eax
  405252:	push   cs
  405253:	cmp    al,0x1
  405255:	push   ecx
  405256:	jg     0x4051fd
  405258:	mov    DWORD PTR [ebp-0x23bc9c9a],ecx
  40525e:	lahf   
  40525f:	inc    edx
  405260:	pop    es
  405261:	add    BYTE PTR [ecx+0xe],dl
  405264:	push   ebx
  405265:	popf   
  405266:	rcl    BYTE PTR [eax-0x57],cl
  405269:	hlt    
  40526a:	sbb    eax,0x710b8f7e
  40526f:	sub    DWORD PTR [eax],eax
  405271:	xchg   esp,eax
  405272:	adc    eax,0xfa19dd1f
  405277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405278:	clc    
  405279:	das    
  40527a:	xchg   ebx,eax
  40527b:	test   ch,ah
  40527d:	repz inc ebx
  40527f:	sub    al,0xb8
  405281:	lds    edx,FWORD PTR [ebp-0x62]
  405284:	cmp    ebx,DWORD PTR [eax]
  405286:	mov    bh,BYTE PTR [esi-0x47]
  405289:	and    ebp,DWORD PTR [ebp+0x47]
  40528c:	sbb    al,0x21
  40528e:	or     eax,0x6db003e9
  405293:	push   cs
  405294:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405295:	mov    dl,0xb2
  405297:	hlt    
  405298:	cmc    
  405299:	cmc    
  40529a:	adc    edi,esi
  40529c:	sbb    edi,DWORD PTR [ebx+0x30fb7b74]
  4052a2:	mov    dh,0x3a
  4052a4:	xor    dl,dh
  4052a6:	lds    esp,FWORD PTR [ebp-0x5c]
  4052a9:	std    
  4052aa:	pop    edi
  4052ab:	add    BYTE PTR [edi],dl
  4052ad:	js     0x4052f6
  4052af:	adc    eax,0x4d5c166b
  4052b4:	and    al,0x4
  4052b6:	cmp    BYTE PTR [bp+di+0x80d],ah
  4052bb:	std    
  4052bc:	shl    BYTE PTR [ecx-0x32611443],1
  4052c2:	je     0x40533b
  4052c4:	sbb    edx,DWORD PTR [ecx+0x674b80f4]
  4052ca:	and    eax,0x464af2be
  4052cf:	stos   DWORD PTR es:[edi],eax
  4052d0:	sbb    ch,BYTE PTR [ebp-0x743316f6]
  4052d6:	add    edx,DWORD PTR ds:0xd6f5e7f4
  4052dc:	mov    ch,0xb9
  4052de:	out    0x9c,al
  4052e0:	pop    edi
  4052e1:	sbb    DWORD PTR [eax],ecx
  4052e3:	adc    ecx,edx
  4052e5:	sbb    BYTE PTR [ebx+0x5e],dl
  4052e8:	adc    ecx,eax
  4052ea:	(bad)  
  4052eb:	loopne 0x4052a9
  4052ed:	(bad)  
  4052ee:	out    dx,al
  4052ef:	ret    0xc91f
  4052f2:	call   0xbe0b:0x78bdd875
  4052f9:	mov    edx,0xde595933
  4052fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052ff:	adc    eax,0x87ab699d
  405304:	jmp    0x5a05195b
  405309:	out    dx,al
  40530a:	or     eax,0xdbe4f0c5
  40530f:	mov    ebp,DWORD PTR [ecx+0x71]
  405312:	adc    al,BYTE PTR [edi+esi*4+0x5578f71b]
  405319:	popa   
  40531a:	jnp    0x40536a
  40531c:	out    dx,eax
  40531d:	sbb    al,0xb0
  40531f:	or     DWORD PTR [edi-0x4175445c],edi
  405325:	xor    eax,0xff8a1182
  40532a:	mov    ebp,0x8341ef09
  40532f:	shr    BYTE PTR [edx+0x67de6394],1
  405335:	stos   BYTE PTR es:[edi],al
  405336:	lahf   
  405337:	adc    cl,BYTE PTR [eax-0x18]
  40533a:	xor    DWORD PTR [esp+edx*1-0x78],esi
  40533e:	clc    
  40533f:	jmp    0xda3e35c2
  405344:	add    al,0xdd
  405346:	(bad)  
  405347:	inc    esi
  405348:	mov    edi,0xeb0f6636
  40534d:	sub    eax,0x9a15e7ae
  405352:	mov    al,ds:0xefd4b145
  405357:	and    ch,BYTE PTR [edi-0x43]
  40535a:	sbb    BYTE PTR [ebp+0x165ad85d],ch
  405360:	sub    BYTE PTR [edi],ah
  405362:	push   eax
  405363:	pusha  
  405364:	(bad)  
  405365:	sti    
  405366:	lahf   
  405367:	inc    ebx
  405368:	mov    esi,0x34fa04ac
  40536d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40536e:	xchg   esp,eax
  40536f:	push   edi
  405370:	in     al,dx
  405371:	into   
  405372:	imul   bh
  405374:	(bad)  
  405375:	retf   0x9c17
  405378:	inc    esp
  405379:	in     eax,dx
  40537a:	in     al,dx
  40537b:	mov    cl,0x52
  40537d:	push   ss
  40537e:	call   0x76687f25
  405383:	add    esp,DWORD PTR [edi]
  405385:	cli    
  405386:	and    ebp,esi
  405388:	fs mov esi,0xfbba2554
  40538e:	sbb    ah,BYTE PTR [ecx+0x50fed3c2]
  405394:	in     eax,0xce
  405396:	out    dx,eax
  405397:	jo     0x40540b
  405399:	add    BYTE PTR [ecx-0x1ad898a1],bl
  40539f:	mov    ds:0x97d9eb9a,eax
  4053a4:	jbe    0x405388
  4053a6:	mov    esp,0xe8001431
  4053ac:	aam    0xe
  4053ae:	pusha  
  4053af:	fs push ss
  4053b1:	or     al,BYTE PTR [edx-0x6b]
  4053b4:	cwde   
  4053b5:	pop    eax
  4053b6:	das    
  4053b7:	int    0x4e
  4053b9:	jmp    0x405350
  4053bb:	adc    ecx,DWORD PTR [ebx]
  4053bd:	cmp    BYTE PTR [eax+0x6ac7c285],ch
  4053c3:	dec    esi
  4053c4:	jns    0x4053c5
  4053c6:	je     0x4053a7
  4053c8:	push   0x675772b4
  4053cd:	xchg   ebx,eax
  4053ce:	ins    DWORD PTR es:[edi],dx
  4053cf:	mov    ebp,0xa8c142e1
  4053d4:	xor    ecx,DWORD PTR [esi-0x71]
  4053d7:	into   
  4053d8:	lods   eax,DWORD PTR ds:[esi]
  4053d9:	sbb    ebp,DWORD PTR [ebx]
  4053db:	aam    0x3d
  4053dd:	ja     0x405434
  4053df:	(bad)  
  4053e0:	bound  edx,QWORD PTR [esi+0x2af59372]
  4053e6:	and    eax,0x29b61272
  4053eb:	fdivr  DWORD PTR [eax]
  4053ed:	push   0x1e
  4053ef:	test   DWORD PTR [esp+edx*1-0x6],ebx
  4053f3:	sbb    ebp,DWORD PTR [ebp-0x158f030a]
  4053f9:	data16 loopne 0x4053b7
  4053fc:	sub    edi,esp
  4053fe:	fcomp  st(6)
  405400:	jecxz  0x405454
  405402:	jg     0x4053f1
  405404:	and    BYTE PTR [ebx-0x55],0x79
  405408:	outs   dx,BYTE PTR ds:[esi]
  405409:	and    BYTE PTR [ebx-0x4cb55e6d],al
  40540f:	jnp    0x405442
  405411:	add    eax,0x7f2576df
  405416:	jge    0x4053c5
  405418:	mov    ebp,0x4516693b
  40541d:	jnp    0x405493
  40541f:	(bad)  
  405420:	aad    0x46
  405422:	loop   0x40545d
  405424:	idiv   ebx
  405426:	pop    edi
  405427:	sub    eax,0xd9fd26fd
  40542c:	push   edi
  40542d:	cmc    
  40542e:	(bad)  
  40542f:	scas   al,BYTE PTR es:[edi]
  405430:	js     0x405407
  405432:	mov    ebp,0xf9f73e0d
  405437:	cmp    edx,esi
  405439:	xchg   DWORD PTR [ebp+edx*8-0x39],ebp
  40543d:	std    
  40543e:	iret   
  40543f:	push   ss
  405440:	push   eax
  405441:	or     ah,cl
  405443:	leave  
  405444:	aaa    
  405445:	xchg   esp,eax
  405446:	ds push ebx
  405448:	scas   eax,DWORD PTR es:[edi]
  405449:	sub    dh,bh
  40544b:	inc    ebp
  40544c:	outs   dx,DWORD PTR ds:[esi]
  40544d:	out    dx,al
  40544e:	adc    DWORD PTR [eax-0x18aae47a],0x91ecfa49
  405458:	and    al,BYTE PTR [esi+ebp*8+0x4a]
  40545c:	mov    ch,0x2d
  40545e:	mov    ah,0x15
  405460:	mov    ebp,0xbf28fd6a
  405465:	ror    DWORD PTR [ebp+0x7427e4c6],cl
  40546b:	pusha  
  40546c:	mov    ds:0x11a606c6,al
  405471:	mov    ecx,0x233156e4
  405476:	mov    dl,0x33
  405478:	add    esi,ebx
  40547a:	dec    edi
  40547b:	cmovge eax,DWORD PTR [ebx-0x2e27ac60]
  405482:	out    0x67,al
  405484:	xor    esp,DWORD PTR ds:0x3f2c35f6
  40548a:	cmp    BYTE PTR [esi+0x291e68b],0x39
  405491:	jmp    FWORD PTR [eax+esi*2+0x32]
  405495:	cs dec edx
  405497:	fidiv  WORD PTR [edi+0x4c]
  40549a:	loopne 0x40550f
  40549c:	add    al,0x33
  40549e:	dec    ebp
  40549f:	lock and al,0x86
  4054a2:	lock rcr DWORD PTR [esi+eax*2-0x16],0x68
  4054a8:	adc    BYTE PTR [esi-0x124b3f41],dl
  4054ae:	mov    ebx,0x72a36d8c
  4054b3:	dec    esp
  4054b4:	add    BYTE PTR [edi],dl
  4054b6:	imul   ebx,ebx,0xffffffae
  4054b9:	scas   al,BYTE PTR es:[edi]
  4054ba:	lahf   
  4054bb:	je     0x405491
  4054bd:	mov    es,ecx
  4054bf:	pusha  
  4054c0:	mov    ds:0xfc9dd9b,eax
  4054c5:	xor    esp,DWORD PTR [esi-0x24]
  4054c8:	inc    esp
  4054c9:	dec    ebx
  4054ca:	xchg   edi,eax
  4054cb:	inc    edi
  4054cc:	fsubp  st(2),st
  4054ce:	sub    DWORD PTR [ecx],esp
  4054d0:	add    ebx,DWORD PTR [eax]
  4054d2:	sub    eax,0x757b5930
  4054d7:	out    dx,eax
  4054d8:	cld    
  4054d9:	push   ebx
  4054da:	in     eax,dx
  4054db:	in     al,dx
  4054dc:	jl     0x4054c7
  4054de:	cwde   
  4054df:	mov    ds:0x88c4cdad,al
  4054e4:	dec    esi
  4054e5:	out    0x7e,eax
  4054e7:	arpl   WORD PTR [edx+0xc],cx
  4054ea:	adc    al,0x69
  4054ec:	test   BYTE PTR ds:0x6d42ceff,bl
  4054f2:	cmp    DWORD PTR [esi-0xd],edx
  4054f5:	dec    edi
  4054f6:	stc    
  4054f7:	fcomi  st,st(5)
  4054f9:	jl     0x4054d8
  4054fb:	xchg   BYTE PTR [ebp+0x70],ch
  4054fe:	lods   eax,DWORD PTR ds:[esi]
  4054ff:	pop    esp
  405500:	rcl    BYTE PTR [edi*1+0x6ce69cf2],cl
  405507:	sub    DWORD PTR [ecx],edx
  405509:	sbb    DWORD PTR [ebp-0x1a71dcc4],esp
  40550f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405510:	cmp    BYTE PTR [ecx+0x45],al
  405513:	scas   al,BYTE PTR es:[edi]
  405514:	in     al,dx
  405515:	(bad)  [eax+0x4ac64a11]
  40551b:	clc    
  40551c:	fild   QWORD PTR [eax+esi*2]
  40551f:	jp     0x40559b
  405521:	or     ebx,DWORD PTR [esi+0x64814dee]
  405527:	dec    esi
  405528:	fild   DWORD PTR [edi]
  40552a:	ins    DWORD PTR es:[edi],dx
  40552b:	cmp    eax,0x14833517
  405530:	lahf   
  405531:	in     eax,dx
  405532:	popa   
  405533:	cwde   
  405534:	mov    ebx,0xa14ab776
  405539:	retf   0x2612
  40553c:	jb     0x4054d3
  40553e:	fs clc 
  405540:	(bad)  
  405541:	popf   
  405542:	mov    bl,0x65
  405544:	add    edx,ebx
  405546:	jle    0x405560
  405548:	pusha  
  405549:	ret    
  40554a:	lods   al,BYTE PTR ds:[esi]
  40554b:	in     al,dx
  40554c:	push   esp
  40554d:	std    
  40554e:	(bad)  [esi]
  405550:	lods   al,BYTE PTR ds:[esi]
  405551:	push   eax
  405552:	adc    BYTE PTR ds:0x46cf47eb,bl
  405558:	xchg   edx,eax
  405559:	mov    dh,0xd2
  40555b:	add    al,0xbe
  40555d:	lahf   
  40555e:	test   al,0x19
  405560:	push   edi
  405561:	in     eax,0x9f
  405563:	data16 scas al,BYTE PTR es:[edi]
  405565:	mov    ecx,0x5a72eeb3
  40556a:	pop    ecx
  40556b:	add    al,0xdd
  40556d:	mov    edx,0x89173673
  405572:	push   eax
  405573:	ret    
  405574:	jecxz  0x40556d
  405576:	pop    esi
  405577:	adc    al,0xd0
  405579:	pop    edx
  40557a:	inc    eax
  40557b:	cmp    al,0xf5
  40557d:	or     bh,BYTE PTR [edi]
  40557f:	dec    eax
  405580:	inc    ecx
  405581:	(bad)  
  405582:	pop    ecx
  405583:	adc    dl,BYTE PTR [edx-0x7e]
  405586:	sbb    bh,BYTE PTR [eax]
  405588:	xor    DWORD PTR [ecx],edx
  40558a:	mov    ecx,0xde8305b1
  40558f:	dec    ebx
  405590:	dec    esi
  405591:	pushf  
  405592:	push   esi
  405593:	jo     0x405532
  405595:	test   eax,0x9547c1b3
  40559a:	cmovp  ecx,esi
  40559d:	outs   dx,BYTE PTR ds:[esi]
  40559e:	push   eax
  40559f:	mov    ebp,0x8ae13ed3
  4055a4:	push   edi
  4055a5:	sbb    edi,ebp
  4055a7:	hlt    
  4055a8:	hlt    
  4055a9:	sbb    eax,0xc239dde2
  4055ae:	mov    cs,esp
  4055b0:	mov    al,ds:0xd0202b39
  4055b5:	shr    DWORD PTR [edi-0x5b],cl
  4055b8:	neg    BYTE PTR [ebp+0x3982b5c4]
  4055be:	pop    esp
  4055bf:	ins    BYTE PTR es:[edi],dx
  4055c0:	inc    eax
  4055c1:	nop
  4055c2:	ret    0xce50
  4055c5:	dec    eax
  4055c6:	dec    ecx
  4055c7:	jmp    0x40554f
  4055c9:	or     al,0x4d
  4055cb:	inc    edx
  4055cc:	jo     0x4055a3
  4055ce:	cmp    ch,BYTE PTR [eax+0x76]
  4055d1:	and    eax,DWORD PTR [ebp-0x2b]
  4055d4:	cmp    cl,BYTE PTR [edi]
  4055d6:	push   edi
  4055d7:	adc    bh,BYTE PTR [eax-0x1c]
  4055da:	popa   
  4055db:	out    dx,al
  4055dc:	cld    
  4055dd:	mov    al,ds:0x59878f44
  4055e2:	call   0xd81be5dc
  4055e7:	test   al,0x48
  4055e9:	and    al,0xa2
  4055eb:	dec    ebx
  4055ec:	mov    cl,0x3c
  4055ee:	sub    al,0xd1
  4055f0:	cdq    
  4055f1:	rcl    DWORD PTR [edi-0x2a5bca6e],0x39
  4055f8:	pop    ecx
  4055f9:	jmp    0x1edc:0x94e20b20
  405600:	and    al,0x14
  405602:	ins    DWORD PTR es:[edi],dx
  405603:	inc    ebp
  405604:	mov    edx,0x8050b44b
  405609:	fs addr16 mov dh,0x68
  40560d:	test   eax,0xa90fc292
  405612:	test   BYTE PTR [edx+0x23097e67],0x9f
  405619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40561a:	sti    
  40561b:	mov    ds:0xc198b3d5,al
  405620:	ret    
  405621:	fcomp  QWORD PTR [edx]
  405623:	mov    ebp,0x32cd582e
  405628:	dec    edx
  405629:	outs   dx,BYTE PTR ds:[esi]
  40562a:	lock mov ch,0x7e
  40562d:	dec    esp
  40562e:	mov    ecx,0x688afd0e
  405633:	pop    esp
  405634:	in     ax,0xc3
  405637:	xor    cl,BYTE PTR [ebx+0x331b9c5f]
  40563d:	loop   0x405650
  40563f:	in     eax,0x9f
  405641:	or     eax,DWORD PTR [ebx+0x13]
  405644:	mov    esp,0x92f4e18b
  405649:	(bad)
  40564d:	mov    ecx,0x23b6957d
  405652:	mov    fs,WORD PTR [eax+0x26d186f4]
  405658:	addr16 dec esp
  40565a:	aad    0x2f
  40565c:	idiv   DWORD PTR [eax+0x3f]
  40565f:	pop    eax
  405660:	nop
  405661:	cmp    ecx,DWORD PTR [esi]
  405663:	jg     0x40563a
  405665:	push   es
  405666:	ret    
  405667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405668:	mov    ecx,0x48c03162
  40566d:	call   FWORD PTR [ebp-0xe]
  405670:	mov    edx,0xc15fd7ce
  405675:	nop
  405676:	popa   
  405677:	lods   al,BYTE PTR ds:[esi]
  405678:	jle    0x40560e
  40567a:	and    eax,0x927137be
  40567f:	rcl    ch,0xcb
  405682:	loope  0x4056d2
  405684:	fst    DWORD PTR [eax+0x7]
  405687:	push   esi
  405688:	cmc    
  405689:	mov    esp,0xe8801f47
  40568e:	icebp  
  40568f:	xor    bh,BYTE PTR [ebp+0x1ed8e1e6]
  405695:	inc    ecx
  405696:	jnp    0x4056b2
  405698:	adc    al,0x67
  40569a:	fisub  DWORD PTR ds:0x1bfa44ff
  4056a0:	cmp    al,ah
  4056a2:	dec    DWORD PTR [ebp-0x6e31a279]
  4056a8:	jge    0x40571e
  4056aa:	(bad)  
  4056ab:	and    al,0xd1
  4056ad:	and    bl,cl
  4056af:	test   BYTE PTR [edx],dh
  4056b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b2:	cmc    
  4056b3:	jle    0x40572f
  4056b5:	cdq    
  4056b6:	fs xor esi,edi
  4056b9:	mov    al,ds:0xbc9e34f4
  4056be:	mov    esi,DWORD PTR [edi-0x37]
  4056c1:	icebp  
  4056c2:	(bad)  
  4056c3:	lock sbb ecx,DWORD PTR [esi-0x52]
  4056c7:	xchg   esi,eax
  4056c8:	adc    DWORD PTR [ecx-0x572d718e],esp
  4056ce:	xchg   DWORD PTR [esi+eiz*1],edx
  4056d1:	mov    al,0xcf
  4056d3:	shr    BYTE PTR [ebx+0x60f31ece],0x1e
  4056da:	cmp    bh,ch
  4056dc:	and    DWORD PTR [ecx],0x99a7d961
  4056e2:	push   edx
  4056e3:	fbstp  TBYTE PTR [edx-0x5b]
  4056e6:	dec    ebp
  4056e7:	cld    
  4056e8:	pop    ebx
  4056e9:	mov    al,ds:0x5611b4e4
  4056ee:	adc    DWORD PTR [ebx],ecx
  4056f0:	imul   eax,eax,0xc6b917a8
  4056f6:	in     al,dx
  4056f7:	or     cl,0x94
  4056fa:	and    al,0xf3
  4056fc:	jecxz  0x4056fd
  4056fe:	addr16 push eax
  405700:	adc    eax,DWORD PTR [ebp+0x2514b95f]
  405706:	dec    edi
  405707:	mov    WORD PTR [esi+esi*4+0x106c2012],ss
  40570e:	jne    0x4056ce
  405710:	inc    ebx
  405711:	mov    ?,ebx
  405713:	push   0x62
  405715:	arpl   WORD PTR [edi+eax*4],di
  405718:	pop    ds
  405719:	test   al,0xd
  40571b:	add    bh,BYTE PTR [ebp+0x5f0c634c]
  405721:	sub    eax,0x880a0c12
  405726:	repnz popf 
  405728:	out    dx,eax
  405729:	icebp  
  40572a:	push   esp
  40572b:	push   ebp
  40572c:	je     0x4056b8
  40572e:	xor    bl,BYTE PTR [ebx+0x6e]
  405731:	add    eax,0xd684a4fa
  405736:	xor    al,0x75
  405738:	jge    0x40576a
  40573a:	sub    edx,DWORD PTR [ebp+0x9]
  40573d:	call   0x6e093f47
  405742:	lock loop 0x4056ec
  405745:	(bad)  
  405746:	in     eax,dx
  405747:	enter  0x121e,0x17
  40574b:	mov    dh,0xea
  40574d:	popf   
  40574e:	push   ebp
  40574f:	inc    ebp
  405750:	rcl    dl,1
  405752:	call   0x69866af0
  405757:	mov    dh,0x4a
  405759:	cld    
  40575a:	pop    eax
  40575b:	mov    cl,0x92
  40575d:	sub    al,0xd9
  40575f:	mov    bl,0xdf
  405761:	scas   eax,DWORD PTR es:[edi]
  405762:	aaa    
  405763:	and    eax,0x2d37b07b
  405768:	xchg   DWORD PTR [eax+0x5e7d5b51],esi
  40576e:	daa    
  40576f:	and    al,0x5
  405771:	jb     0x4057a1
  405773:	out    0xaf,eax
  405775:	rcr    BYTE PTR [ebx-0x48],cl
  405778:	xchg   DWORD PTR [edi],ebp
  40577a:	mov    ah,0x54
  40577c:	sub    BYTE PTR [edi+0x4f],0xa8
  405780:	add    BYTE PTR [esp+esi*2-0x71dfe61a],dl
  405787:	push   0x31
  405789:	inc    ebx
  40578a:	dec    esp
  40578b:	push   edx
  40578c:	add    edi,DWORD PTR [esi]
  40578e:	jne    0x40574d
  405790:	pop    edi
  405791:	pop    es
  405792:	pop    ss
  405793:	ficom  DWORD PTR [eax-0x7e]
  405796:	lds    edx,FWORD PTR [eax+0x2b]
  405799:	xchg   edx,eax
  40579a:	lods   eax,DWORD PTR ds:[esi]
  40579b:	mov    edx,0x83b226d6
  4057a0:	(bad)  
  4057a1:	leave  
  4057a2:	cmp    al,al
  4057a4:	inc    esp
  4057a5:	push   ebp
  4057a6:	icebp  
  4057a7:	sar    BYTE PTR [edi],1
  4057a9:	test   DWORD PTR [edx],eax
  4057ab:	inc    edx
  4057ac:	push   ebp
  4057ad:	out    0x93,eax
  4057af:	pop    edi
  4057b0:	nop
  4057b1:	lahf   
  4057b2:	add    BYTE PTR [eax+ecx*1],0x47
  4057b6:	sbb    eax,0xcf83483c
  4057bb:	sbb    eax,0x33fd50d9
  4057c0:	sbb    eax,0x4618423f
  4057c5:	fcmovne st,st(0)
  4057c7:	stc    
  4057c8:	jp     0x405781
  4057ca:	cmp    BYTE PTR [edi+0x6e4be11d],dh
  4057d0:	mov    DWORD PTR [esi-0x22f3a4fc],ecx
  4057d6:	sahf   
  4057d7:	push   0x57
  4057d9:	data16 loopne 0x4057a0
  4057dc:	sbb    al,0xc2
  4057de:	mov    cl,ah
  4057e0:	fcomi  st,st(3)
  4057e2:	out    0x48,eax
  4057e4:	sti    
  4057e5:	sbb    DWORD PTR [ebx],ecx
  4057e7:	inc    ebx
  4057e8:	icebp  
  4057e9:	pop    eax
  4057ea:	inc    esp
  4057eb:	push   cs
  4057ec:	and    BYTE PTR [eax+0x1e],ah
  4057ef:	mov    BYTE PTR [ebp+0x2f3ad32f],0x35
  4057f6:	(bad)  
  4057f8:	mov    cl,0xc9
  4057fa:	sub    edx,DWORD PTR [ecx]
  4057fc:	test   DWORD PTR [ebp+0x73],esp
  4057ff:	jg     0x405833
  405801:	jmp    0xa300:0xb68d2ead
  405808:	(bad)  
  405809:	sahf   
  40580a:	lahf   
  40580b:	mov    dh,0x32
  40580d:	test   eax,0x48dcc988
  405812:	icebp  
  405813:	lods   eax,DWORD PTR ds:[esi]
  405814:	jmp    0x40581e
  405816:	xlat   BYTE PTR ds:[ebx]
  405817:	push   cs
  405818:	shl    DWORD PTR [esi],0x31
  40581b:	dec    ebx
  40581c:	mov    bh,0xe4
  40581e:	jmp    0xf8f89a8f
  405823:	or     bh,BYTE PTR [ebp+0x555f6f9c]
  405829:	sti    
  40582a:	xchg   ebx,eax
  40582b:	cld    
  40582c:	ret    0xd6f0
  40582f:	add    DWORD PTR [edi+0x3a],ebx
  405832:	xchg   DWORD PTR [eax+eax*2],ebx
  405835:	dec    ebp
  405836:	push   0x6f
  405838:	cmp    eax,edx
  40583a:	ins    DWORD PTR es:[edi],dx
  40583b:	jl     0x405851
  40583d:	add    DWORD PTR [ebx-0x75],ebx
  405840:	xchg   edi,eax
  405841:	arpl   WORD PTR [edx-0x4f],bp
  405844:	jg     0x4057d5
  405846:	retf   0xa273
  405849:	nop
  40584a:	out    0x43,eax
  40584c:	mov    ecx,0x6e6a93ad
  405851:	pop    esi
  405852:	pop    es
  405853:	in     eax,dx
  405854:	ret    
  405855:	mov    dh,0x10
  405857:	mov    ?,WORD PTR [ecx+ebp*2+0x6a]
  40585b:	jb     0x40589d
  40585d:	xchg   ebp,eax
  40585e:	xor    DWORD PTR [esi-0x35],0x600e4ed2
  405865:	and    BYTE PTR [ebp-0x5d],dh
  405868:	push   0xb
  40586a:	leave  
  40586b:	test   BYTE PTR [ecx],bh
  40586d:	push   cs
  40586e:	jbe    0x405835
  405870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405871:	test   BYTE PTR [ebp+0x7c],al
  405874:	and    DWORD PTR [ecx],eax
  405876:	xchg   edx,eax
  405877:	jbe    0x405816
  405879:	daa    
  40587a:	aas    
  40587b:	aad    0xf6
  40587d:	call   0xe53441f6
  405882:	fisttp WORD PTR [eax+0x1d]
  405885:	(bad)  
  405887:	dec    ecx
  405888:	sbb    ch,ah
  40588a:	bound  ebp,QWORD PTR [eax-0x79529c71]
  405890:	dec    esi
  405891:	xchg   edi,eax
  405892:	call   0x614c:0xbf6a5a2d
  405899:	mov    esi,0x5aae494a
  40589e:	dec    esp
  40589f:	jg     0x40591a
  4058a1:	jmp    0x4058ce
  4058a3:	repnz pushaw 
  4058a6:	xchg   ecx,eax
  4058a7:	adc    al,0x2d
  4058a9:	outs   dx,BYTE PTR ds:[esi]
  4058aa:	sbb    DWORD PTR [ecx+0x23f50b47],edx
  4058b0:	jg     0x40586f
  4058b2:	mov    ?,WORD PTR [edi-0x80]
  4058b5:	mov    edx,0xb6dd6a9a
  4058ba:	xchg   edx,eax
  4058bb:	adc    ebx,DWORD PTR [ecx+0x33]
  4058be:	int    0x5e
  4058c0:	nop
  4058c1:	inc    esp
  4058c2:	pop    ecx
  4058c3:	out    0xe8,al
  4058c5:	(bad)  [ecx+0x63]
  4058c8:	aam    0x77
  4058ca:	jg     0x405883
  4058cc:	je     0x40591a
  4058ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058cf:	pop    gs
  4058d1:	mov    cl,0x91
  4058d3:	adc    esi,DWORD PTR [ebx*4-0x68b1fdfe]
  4058da:	push   0x10033fe3
  4058df:	cmp    eax,0x5a5c2589
  4058e4:	or     eax,0x8b73dc22
  4058e9:	jnp    0x405914
  4058eb:	cdq    
  4058ec:	and    ch,dh
  4058ee:	inc    esi
  4058ef:	ja     0x405942
  4058f1:	jmp    0x6a921e63
  4058f6:	xchg   edi,eax
  4058f7:	xchg   ebx,eax
  4058f8:	mov    BYTE PTR [edx],cl
  4058fa:	push   edi
  4058fb:	inc    ebp
  4058fc:	ret    
  4058fd:	std    
  4058fe:	cdq    
  4058ff:	xchg   esi,eax
  405900:	push   ebp
  405901:	xchg   ecx,eax
  405902:	push   eax
  405903:	inc    esi
  405904:	retf   0xabae
  405907:	pop    esp
  405908:	xor    dh,BYTE PTR [edx-0x65]
  40590b:	add    al,0x8a
  40590d:	aad    0xf4
  40590f:	mov    ah,0x14
  405911:	das    
  405912:	arpl   si,si
  405914:	mov    ebx,0x11c01f00
  405919:	push   esp
  40591a:	scas   al,BYTE PTR es:[edi]
  40591b:	push   cs
  40591c:	mov    esp,0x931d295
  405921:	and    DWORD PTR [ebp-0x53b174d],esp
  405927:	push   esp
  405928:	cwde   
  405929:	ret    
  40592a:	mov    edi,ebx
  40592c:	ficomp WORD PTR [ecx+0x48bf81f2]
  405932:	mov    ds:0xba432d85,al
  405937:	jbe    0x4058c9
  405939:	hlt    
  40593a:	jmp    0x3df5:0xc7006255
  405941:	jmp    0x76003a4
  405946:	dec    edi
  405947:	mov    ebx,0xcbd24431
  40594c:	inc    esp
  40594d:	adc    DWORD PTR [eax-0x538b33b0],edi
  405953:	fbld   TBYTE PTR [edx]
  405955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405956:	mov    dh,cl
  405958:	test   bh,ah
  40595a:	and    al,0x83
  40595c:	repz inc ebp
  40595e:	jb     0x405914
  405960:	pop    esi
  405961:	mov    WORD PTR [esi-0x6e],cs
  405964:	hlt    
  405965:	cmp    edi,DWORD PTR [esi-0x4cc31318]
  40596b:	out    0x45,eax
  40596d:	rcr    BYTE PTR [ecx+0x63c6bc36],0xf2
  405974:	jb     0x4059af
  405976:	add    DWORD PTR [edx-0x3d],eax
  405979:	popf   
  40597a:	fwait
  40597b:	or     edi,DWORD PTR [eax+ecx*2+0x0]
  40597f:	clc    
  405980:	shl    bl,0x75
  405983:	mov    ds:0x8406e36b,al
  405988:	scas   al,BYTE PTR es:[edi]
  405989:	mov    al,0xd9
  40598b:	test   al,0xfe
  40598d:	xor    ebx,DWORD PTR [ecx]
  40598f:	cli    
  405990:	dec    ecx
  405991:	retf   0xe3fe
  405994:	jge    0x405979
  405996:	pop    ebp
  405997:	push   ss
  405998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405999:	mov    eax,0x27992218
  40599e:	sbb    esi,DWORD PTR [esi-0x526f880e]
  4059a4:	mov    eax,0xe52cc5a7
  4059a9:	xor    edx,DWORD PTR [ebp-0x1f]
  4059ac:	out    0x70,al
  4059ae:	mov    dh,0x95
  4059b0:	xor    esi,ebp
  4059b2:	iret   
  4059b3:	loope  0x4059b8
  4059b5:	add    DWORD PTR [esi],ecx
  4059b7:	jp     0x405a1e
  4059b9:	xor    eax,0x73974b07
  4059be:	das    
  4059bf:	and    DWORD PTR ds:0xcd2e328a,0x41e6fbd6
  4059c9:	nop
  4059ca:	retf   0x7407
  4059cd:	mov    bh,0xb8
  4059cf:	fld    DWORD PTR [edx+esi*4]
  4059d2:	pop    ds
  4059d3:	and    al,0xe9
  4059d5:	cmp    DWORD PTR [esi+eax*1+0x1fb7bb47],ebx
  4059dc:	popa   
  4059dd:	push   cs
  4059de:	cmp    eax,0x6a6afcb8
  4059e3:	inc    DWORD PTR [eax-0x32]
  4059e6:	add    eax,0x3bd660ca
  4059eb:	in     eax,0xce
  4059ed:	mov    dl,0x72
  4059ef:	jns    0x405992
  4059f1:	jo     0x4059b1
  4059f3:	ins    BYTE PTR es:[edi],dx
  4059f4:	fldcw  WORD PTR [edi-0x48]
  4059f7:	xor    DWORD PTR [ebx+eiz*8+0x5b51d55d],ecx
  4059fe:	and    DWORD PTR [eax+eiz*8],0xa15b1cbf
  405a05:	xchg   BYTE PTR [ebp-0x30],cl
  405a08:	xchg   esp,eax
  405a09:	icebp  
  405a0a:	sub    al,0x26
  405a0c:	mov    cs,WORD PTR [ecx-0x2a]
  405a0f:	ja     0x405a12
  405a11:	cs mov esp,0x222448f6
  405a17:	shl    BYTE PTR [eax-0x34afbf09],1
  405a1d:	mov    eax,0x97e8a29b
  405a22:	sub    ah,al
  405a24:	cmp    DWORD PTR [edx+ebp*1+0x6c],ebx
  405a28:	pushf  
  405a29:	xchg   edx,eax
  405a2a:	scas   al,BYTE PTR es:[edi]
  405a2b:	and    DWORD PTR [esi-0xe],ebx
  405a2e:	pop    ebp
  405a2f:	jl     0x4059d6
  405a31:	jns    0x4059fb
  405a33:	push   esi
  405a34:	aas    
  405a35:	loope  0x405a76
  405a37:	push   ebp
  405a38:	xor    DWORD PTR [ebx+0x7997fffe],0x11357d42
  405a42:	adc    DWORD PTR [edx-0x53],eax
  405a45:	enter  0x1779,0xdd
  405a49:	nop
  405a4a:	cmp    ch,0xd1
  405a4d:	cli    
  405a4e:	xor    ebp,DWORD PTR [ebp+edi*8-0x5637889e]
  405a55:	into   
  405a56:	sti    
  405a57:	push   0xffffffc3
  405a59:	fst    QWORD PTR [ecx+0x3b]
  405a5c:	lods   al,BYTE PTR ds:[esi]
  405a5d:	ja     0x405ac3
  405a5f:	rcl    DWORD PTR [ecx+edi*1-0x4e46ae80],cl
  405a66:	int3   
  405a67:	je     0x405a05
  405a69:	xor    eax,0x2e2afe27
  405a6e:	(bad)  
  405a6f:	cdq    
  405a70:	cli    
  405a71:	mov    eax,ds:0xbae2d465
  405a76:	sub    eax,0xf5302976
  405a7b:	and    BYTE PTR [esi+0x54],0xd8
  405a7f:	cli    
  405a80:	repnz or BYTE PTR [eax+esi*8+0x7c8795a3],dl
  405a88:	jbe    0x405ab4
  405a8a:	dec    ecx
  405a8b:	aas    
  405a8c:	jo     0x405a7c
  405a8e:	xchg   esi,eax
  405a90:	lods   eax,DWORD PTR ds:[esi]
  405a91:	pop    edx
  405a92:	adc    esp,DWORD PTR [eax+0x41]
  405a95:	fcmovne st,st(5)
  405a97:	je     0x405a6d
  405a99:	mov    al,ds:0x7ba22d7e
  405a9e:	push   dx
  405aa0:	jb     0x405ab5
  405aa2:	inc    esp
  405aa3:	xor    BYTE PTR [ebx-0x39],ah
  405aa6:	icebp  
  405aa7:	mov    WORD PTR [edx-0x50319f8f],ss
  405aad:	mov    ds:0xdb02e482,al
  405ab2:	out    0xda,eax
  405ab4:	outs   dx,BYTE PTR ds:[esi]
  405ab5:	xor    ebp,eax
  405ab7:	mov    bh,0x81
  405ab9:	out    dx,al
  405aba:	shl    DWORD PTR [esp+ecx*8-0x47],0xc0
  405abf:	push   es
  405ac0:	jmp    FWORD PTR [edi-0xa]
  405ac3:	mov    edx,0xfc60fbc5
  405ac8:	pop    edi
  405ac9:	inc    ecx
  405aca:	push   ds
  405acb:	fstp   QWORD PTR [esi]
  405acd:	dec    ebx
  405ace:	or     ch,BYTE PTR cs:[ebx]
  405ad1:	(bad)  
  405ad2:	sbb    dl,BYTE PTR [ecx+0xd]
  405ad5:	iret   
  405ad6:	daa    
  405ad7:	xchg   BYTE PTR [edi+0x54188d02],al
  405add:	cmc    
  405ade:	xor    bl,BYTE PTR [ebp-0x1a3b46b6]
  405ae4:	ret    0x2ae6
  405ae7:	push   cs
  405ae8:	cmp    BYTE PTR [edi],cl
  405aea:	stos   DWORD PTR es:[edi],eax
  405aeb:	mov    bl,0xa8
  405aed:	mov    ch,0x58
  405aef:	scas   eax,DWORD PTR es:[edi]
  405af0:	aam    0xb
  405af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405af3:	xchg   DWORD PTR [esi-0x6a],edi
  405af6:	ds fs mov al,0x59
  405afa:	scas   al,BYTE PTR es:[edi]
  405afb:	enter  0x9d34,0xc9
  405aff:	push   es
  405b00:	dec    esp
  405b01:	or     DWORD PTR [ecx+0x2],edi
  405b04:	int3   
  405b05:	mov    ah,0x30
  405b07:	cmp    ch,BYTE PTR [esi+0x45]
  405b0a:	outs   dx,DWORD PTR ds:[esi]
  405b0b:	ret    
  405b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b0d:	sub    eax,0xebcc9dba
  405b12:	mov    al,0x3c
  405b14:	inc    esi
  405b15:	mov    ebx,DWORD PTR [edx+0x41fec6ae]
  405b1b:	push   eax
  405b1c:	repnz sbb ecx,ebp
  405b1f:	imul   esi,DWORD PTR [ebx-0x33],0x1434a172
  405b26:	popa   
  405b27:	add    BYTE PTR [ecx-0x34dca875],0xa1
  405b2e:	push   ebp
  405b2f:	sub    eax,0x3d0c93ad
  405b34:	jo     0x405b70
  405b36:	jns    0x405b19
  405b38:	xchg   BYTE PTR [esi+edi*2+0x1956760a],ah
  405b3f:	fsub   DWORD PTR [edx+0x3]
  405b42:	jbe    0x405ace
  405b44:	mov    ah,0xe4
  405b46:	cmp    ch,cl
  405b48:	(bad)  
  405b49:	cld    
  405b4a:	dec    ebx
  405b4b:	imul   DWORD PTR [esi]
  405b4d:	(bad)  
  405b4e:	fistp  QWORD PTR [eax+0x26f0982c]
  405b54:	or     eax,0x660d048a
  405b59:	and    al,0x75
  405b5b:	ja     0x405bbe
  405b5d:	inc    esp
  405b5e:	cmp    ebx,DWORD PTR [ecx-0x2ff5e818]
  405b64:	push   eax
  405b65:	fs mov esp,0x229c6620
  405b6b:	sbb    BYTE PTR [ecx],ch
  405b6d:	sahf   
  405b6e:	push   edi
  405b6f:	add    ah,BYTE PTR [ebx]
  405b71:	sub    esp,DWORD PTR [edx-0x34a9cf2b]
  405b77:	shl    esp,1
  405b79:	daa    
  405b7a:	jge    0x405b48
  405b7c:	cmp    dh,bh
  405b7e:	in     al,0xde
  405b80:	mov    cl,0x9d
  405b82:	mov    ds:0xfcf45cf0,al
  405b87:	aam    0x99
  405b89:	pop    ds
  405b8a:	mov    ebx,0xfed05d22
  405b8f:	loop   0x405b93
  405b91:	push   esi
  405b92:	push   ds
  405b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b94:	in     eax,0x17
  405b96:	cmp    al,0x7d
  405b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b99:	dec    esp
  405b9a:	mov    eax,ds:0xe61434b8
  405b9f:	pop    ebp
  405ba0:	or     eax,0x2e2c36f5
  405ba5:	mov    ecx,0x72219b8e
  405baa:	push   es
  405bab:	dec    eax
  405bac:	add    eax,0x32c0bf4e
  405bb1:	jns    0x405bd3
  405bb3:	jmp    0x8fbaea40
  405bb8:	push   ss
  405bb9:	out    dx,al
  405bba:	test   eax,0x5606a7e0
  405bbf:	adc    edi,DWORD PTR [ecx-0x332b77ad]
  405bc5:	out    dx,al
  405bc6:	jmp    0xe7807cb3
  405bcb:	cs jo  0x405b68
  405bce:	js     0x405bc4
  405bd0:	xor    bl,BYTE PTR [ebx-0x1602b309]
  405bd6:	in     al,dx
  405bd7:	lods   eax,DWORD PTR ds:[esi]
  405bd8:	fldenv [edx-0x60]
  405bdb:	and    dh,ah
  405bdd:	cmc    
  405bde:	push   0xffffffd3
  405be0:	sar    BYTE PTR [edi-0x5d],1
  405be3:	cmp    ecx,DWORD PTR [edi-0x6b]
  405be6:	dec    BYTE PTR [edi]
  405be8:	sahf   
  405be9:	adc    BYTE PTR [edx+0x37],dl
  405bec:	jecxz  0x405c20
  405bee:	ds retf 0xf9a3
  405bf2:	add    al,0x30
  405bf4:	and    DWORD PTR [ecx+0x63],ebx
  405bf7:	enter  0x186f,0x15
  405bfb:	inc    eax
  405bfc:	mov    dl,0xf7
  405bfe:	mov    ebx,0x8d5d3efc
  405c03:	call   0x3764:0xf44f4710
  405c0a:	sbb    BYTE PTR [ebx],ah
  405c0c:	add    al,0xd2
  405c0e:	jbe    0x405b9c
  405c10:	push   eax
  405c11:	jge    0x405beb
  405c13:	fbld   TBYTE PTR [ebx+0x47410735]
  405c19:	dec    edi
  405c1a:	es dec esi
  405c1c:	mov    al,ds:0x57eafb5e
  405c21:	not    DWORD PTR [esi-0x6f]
  405c24:	mov    bl,0x76
  405c26:	mov    WORD PTR [edi],gs
  405c28:	sar    ebp,1
  405c2a:	or     BYTE PTR [ebx],dh
  405c2c:	loopne 0x405be6
  405c2e:	(bad)  
  405c2f:	gs pusha 
  405c31:	sbb    bl,dl
  405c33:	mov    DWORD PTR [eax],ebx
  405c35:	cs inc edx
  405c37:	nop
  405c38:	into   
  405c39:	les    esp,FWORD PTR [eax+0x34]
  405c3c:	in     al,0x4e
  405c3e:	jo     0x405c1c
  405c40:	outs   dx,BYTE PTR ds:[esi]
  405c41:	jmp    0xad55bd7a
  405c46:	push   cs
  405c47:	xchg   edi,eax
  405c48:	popf   
  405c49:	mov    ebx,0x539bed72
  405c4e:	test   BYTE PTR ds:0xaa2021e9,0x33
  405c55:	sub    esi,ecx
  405c57:	mov    ds:0xd874d048,eax
  405c5c:	arpl   bx,si
  405c5e:	cld    
  405c5f:	add    dl,0xfb
  405c62:	pushf  
  405c63:	cdq    
  405c64:	lahf   
  405c65:	aad    0x17
  405c67:	shr    BYTE PTR [ebx-0x7d],cl
  405c6a:	mov    ebx,0xbd81903d
  405c6f:	mov    dl,al
  405c71:	push   es
  405c72:	loopne 0x405cb1
  405c74:	iret   
  405c75:	sub    dl,BYTE PTR [ebp-0x4f7e64c7]
  405c7b:	mov    ah,0x8c
  405c7d:	out    0x61,eax
  405c7f:	dec    ecx
  405c80:	mov    esi,0x7c64930c
  405c85:	cwde   
  405c86:	jns    0x405cd0
  405c88:	cmp    esp,DWORD PTR [esi+ebx*2+0x864bbcf]
  405c8f:	mov    edi,0xf3b8329a
  405c94:	popa   
  405c95:	hlt    
  405c96:	in     eax,dx
  405c97:	jbe    0x405c58
  405c99:	shl    ecx,0xae
  405c9c:	les    esp,FWORD PTR [ebx+0x39]
  405c9f:	adc    DWORD PTR [eax],edi
  405ca1:	sbb    BYTE PTR [edx],al
  405ca3:	lds    edi,FWORD PTR [ebp+0x53]
  405ca6:	pop    ebp
  405ca7:	aas    
  405ca8:	or     dl,ah
  405caa:	mov    esp,0xf9393471
  405caf:	scas   al,BYTE PTR es:[edi]
  405cb0:	pushf  
  405cb1:	sbb    DWORD PTR [ebx],ecx
  405cb3:	mov    edi,0xdcf2e463
  405cb8:	add    edi,ebp
  405cba:	jecxz  0x405d0e
  405cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cbd:	pandn  mm4,QWORD PTR [ecx]
  405cc0:	jmp    0x7769872f
  405cc5:	daa    
  405cc6:	cmp    al,BYTE PTR [esi-0x6f]
  405cc9:	cmp    al,0x57
  405ccb:	mov    WORD PTR [edi-0x664cb733],?
  405cd1:	add    BYTE PTR ss:[ebx-0x27],0xeb
  405cd6:	adc    ch,BYTE PTR [esi]
  405cd8:	add    edi,DWORD PTR ss:[esi]
  405cdb:	ja     0x405c75
  405cdd:	das    
  405cde:	je     0x405c6a
  405ce0:	popa   
  405ce1:	loopne 0x405d2c
  405ce3:	fld    DWORD PTR [esi]
  405ce5:	jp     0x405cf8
  405ce7:	ret    
  405ce8:	jecxz  0x405d4e
  405cea:	in     al,0xb8
  405cec:	es sti 
  405cee:	adc    bh,dl
  405cf0:	out    dx,eax
  405cf1:	xchg   esi,eax
  405cf2:	enter  0x3c9c,0x2f
  405cf6:	das    
  405cf7:	xor    dl,ch
  405cf9:	enter  0x968b,0xb4
  405cfd:	cwde   
  405cfe:	pop    edi
  405cff:	push   ecx
  405d00:	sub    DWORD PTR [eax+0x301fcb1],0x75b13fc1
  405d0a:	mov    ah,0x74
  405d0c:	xor    DWORD PTR [ecx],eax
  405d0e:	xchg   dl,ah
  405d10:	mov    bl,0xfb
  405d12:	push   edi
  405d13:	xor    al,0xa3
  405d15:	jbe    0x405d03
  405d17:	lock stc 
  405d19:	fld    QWORD PTR [esi-0x61f8ec6a]
  405d1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d20:	xlat   BYTE PTR ds:[ebx]
  405d21:	into   
  405d22:	mov    WORD PTR [edi+0x36],gs
  405d25:	xor    DWORD PTR [ebp+ebx*8-0x5c],eax
  405d29:	rcl    DWORD PTR [ebx],cl
  405d2b:	adc    ecx,edi
  405d2d:	sbb    ebx,DWORD PTR [ebx+0x3f]
  405d30:	sbb    al,0x9
  405d32:	xchg   ebp,eax
  405d33:	cmp    al,0xa5
  405d35:	cwde   
  405d36:	retf   0x5952
  405d39:	pusha  
  405d3a:	xor    BYTE PTR [ecx+0x54],ch
  405d3d:	and    BYTE PTR [ebx+0x67],0xd3
  405d41:	out    0x3d,al
  405d43:	ja     0x405cd5
  405d45:	jmp    FWORD PTR [ecx-0x29]
  405d48:	jae    0x405dc9
  405d4a:	push   cs
  405d4b:	adc    eax,0x7e3f4ac2
  405d50:	call   0xefd3ee98
  405d55:	push   edi
  405d56:	ror    edx,cl
  405d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d59:	sbb    DWORD PTR [edx-0xd],edx
  405d5c:	std    
  405d5d:	outs   dx,DWORD PTR ds:[esi]
  405d5e:	loop   0x405d6c
  405d60:	xor    BYTE PTR [ebp-0x6c],dl
  405d63:	mov    eax,0x4a9be2f8
  405d68:	shl    al,0x3a
  405d6b:	inc    edi
  405d6c:	mov    eax,ds:0xdd3fe211
  405d71:	fbstp  TBYTE PTR [edi]
  405d73:	pop    ebx
  405d74:	sahf   
  405d75:	lahf   
  405d76:	mov    al,ds:0xfb7d4f1a
  405d7b:	repnz mov bl,0xe3
  405d7e:	jmp    0x61d3e1d1
  405d83:	rcl    edi,cl
  405d85:	add    BYTE PTR [ebx+0x4d337a4a],al
  405d8b:	fisttp QWORD PTR [ecx-0x9]
  405d8e:	push   esp
  405d8f:	mov    ebx,0x43f3c9e1
  405d94:	add    eax,0x288417ce
  405d99:	out    dx,eax
  405d9a:	in     al,0xc7
  405d9c:	pop    es
  405d9d:	imul   ecx,esp,0xffffffe1
  405da0:	fmul   DWORD PTR [ecx+0x5b5f5feb]
  405da6:	mov    eax,0x2e593d48
  405dab:	mov    bl,0x13
  405dad:	sbb    cl,BYTE PTR [ecx-0x7ee975b0]
  405db3:	iret   
  405db4:	jmp    0x7c4c:0xc51a570b
  405dbb:	ins    DWORD PTR es:[edi],dx
  405dbc:	inc    ebx
  405dbd:	ins    DWORD PTR es:[edi],dx
  405dbe:	outs   dx,DWORD PTR ds:[esi]
  405dbf:	xor    eax,0xfd7d720a
  405dc4:	mov    esi,0xe8265ee1
  405dc9:	lods   al,BYTE PTR ds:[esi]
  405dca:	(bad)  
  405dcb:	mov    bh,cl
  405dcd:	pop    esp
  405dce:	pop    ebp
  405dcf:	cwde   
  405dd0:	jo     0x405d59
  405dd2:	jnp    0x405e42
  405dd4:	lods   al,BYTE PTR ds:[esi]
  405dd5:	daa    
  405dd6:	ins    DWORD PTR es:[edi],dx
  405dd7:	test   DWORD PTR [esi],0xfc8f944d
  405ddd:	dec    ebp
  405dde:	icebp  
  405ddf:	mov    ebx,0xb8e69ab3
  405de4:	dec    ebx
  405de5:	repz or al,ah
  405de8:	test   eax,0x5af35171
  405ded:	cs mov ch,0x1b
  405df0:	inc    esi
  405df1:	imul   edi,DWORD PTR [edi-0x7b918902],0x64
  405df8:	push   ecx
  405df9:	pop    ecx
  405dfa:	mov    esi,0xbf06cdf5
  405dff:	adc    esi,DWORD PTR ds:0x16587f38
  405e05:	cli    
  405e06:	sbb    edx,DWORD PTR [esi]
  405e08:	lods   eax,DWORD PTR ds:[esi]
  405e09:	sub    bl,BYTE PTR [ebx-0x72]
  405e0c:	push   ebp
  405e0d:	jno    0x405dd2
  405e0f:	loop   0x405e84
  405e11:	or     dl,bh
  405e13:	fs jg  0x405e66
  405e16:	xchg   edx,eax
  405e17:	repz sub DWORD PTR ds:0xf3231a7,esi
  405e1e:	pusha  
  405e1f:	lods   eax,DWORD PTR ds:[esi]
  405e20:	push   ds
  405e21:	mov    dl,0x9b
  405e23:	sub    dh,BYTE PTR [eax-0x46]
  405e26:	add    cl,BYTE PTR [edi-0x2127a173]
  405e2c:	fist   WORD PTR ds:0x78c6d206
  405e32:	push   cs
  405e33:	jmp    0xb33c03ef
  405e38:	adc    ebx,DWORD PTR [esi]
  405e3a:	stos   BYTE PTR es:[edi],al
  405e3b:	imul   BYTE PTR [esi-0x5b1da1b2]
  405e41:	push   cs
  405e42:	aaa    
  405e43:	cmp    eax,0x9f4acfc7
  405e48:	jbe    0x405dd3
  405e4a:	sbb    cl,al
  405e4c:	ins    BYTE PTR es:[edi],dx
  405e4d:	pop    edx
  405e4e:	add    edx,DWORD PTR ds:0x2422dc90
  405e54:	nop
  405e55:	repz adc eax,0x1b748d13
  405e5b:	add    BYTE PTR [edi-0x709fb92],0xd
  405e62:	mov    dh,0xa7
  405e64:	je     0x405e48
  405e66:	pop    ecx
  405e67:	pop    ebp
  405e68:	mov    edx,0xc53d047c
  405e6d:	repnz test BYTE PTR [ebx-0x5],0xcc
  405e72:	xor    DWORD PTR [esi-0x6fdd50e4],edx
  405e78:	adc    al,0x8d
  405e7a:	enter  0xc1b8,0x49
  405e7e:	inc    ebp
  405e7f:	ret    0xf444
  405e82:	mov    al,0xee
  405e84:	repz xor BYTE PTR [eax+ebx*1-0x63fc416c],bh
  405e8c:	cmp    esi,DWORD PTR [edi+0x39e4410e]
  405e92:	sub    cl,dh
  405e94:	popf   
  405e95:	xor    esi,DWORD PTR [edi]
  405e97:	lods   al,BYTE PTR ds:[esi]
  405e98:	add    BYTE PTR [ecx],al
  405e9a:	jo     0x405ee8
  405e9c:	fdivr  QWORD PTR [esi]
  405e9e:	(bad)  
  405e9f:	pop    esi
  405ea0:	xchg   BYTE PTR [ebx+ebp*4+0x1c],al
  405ea4:	fidivr DWORD PTR ds:[eax-0x71]
  405ea8:	pop    esi
  405ea9:	adc    bl,BYTE PTR [ebp-0x5770763e]
  405eaf:	sti    
  405eb0:	cmp    bl,BYTE PTR [eax+edi*4+0x69]
  405eb4:	out    dx,al
  405eb5:	jne    0x405ef1
  405eb7:	fcomi  st,st(6)
  405eb9:	ret    0xe5f9
  405ebc:	push   esp
  405ebd:	inc    esi
  405ebe:	in     eax,dx
  405ebf:	cmp    ch,BYTE PTR [ecx+0x52]
  405ec2:	and    cl,BYTE PTR [ecx]
  405ec4:	lods   al,BYTE PTR ds:[esi]
  405ec5:	push   es
  405ec6:	jp     0x405f21
  405ec8:	push   eax
  405ec9:	outs   dx,BYTE PTR ds:[esi]
  405eca:	leave  
  405ecb:	mov    ah,0xcb
  405ecd:	xchg   esp,eax
  405ece:	(bad)  
  405ecf:	test   eax,0x8d37df15
  405ed4:	retf   
  405ed5:	xchg   BYTE PTR [eax+0x49],ah
  405ed8:	xchg   ebp,eax
  405ed9:	retf   
  405eda:	dec    edi
  405edb:	in     al,0x37
  405edd:	mov    al,0x97
  405edf:	mov    ebp,0xa9105c19
  405ee4:	pop    ds
  405ee5:	jg     0x405ece
  405ee7:	pop    ss
  405ee8:	lods   eax,DWORD PTR ds:[esi]
  405ee9:	jmp    0x9cf572b
  405eee:	mov    esi,0xae5b42c
  405ef3:	cli    
  405ef4:	xchg   ebx,eax
  405ef5:	outs   dx,BYTE PTR ds:[esi]
  405ef6:	sbb    edx,DWORD PTR [ebx-0x213ab059]
  405efc:	push   edx
  405efd:	rol    esi,cl
  405eff:	mov    ch,0x5d
  405f01:	fwait
  405f02:	jae    0x405f55
  405f04:	push   es
  405f05:	xor    al,0xca
  405f07:	scas   eax,DWORD PTR es:[edi]
  405f08:	fst    st(0)
  405f0a:	ror    DWORD PTR [ecx],0x84
  405f0d:	inc    edi
  405f0e:	into   
  405f0f:	mov    eax,0xb7fbf5a7
  405f14:	cmp    BYTE PTR ds:0x51fd079f,dl
  405f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f1b:	stc    
  405f1c:	rol    DWORD PTR [edx-0x32],cl
  405f1f:	dec    eax
  405f20:	jle    0x405f8f
  405f22:	rol    DWORD PTR [edi-0x280d7bad],0xd3
  405f29:	jg     0x405f82
  405f2b:	icebp  
  405f2c:	jle    0x405f6b
  405f2e:	sub    esp,DWORD PTR [eax]
  405f30:	mov    cr7,edx
  405f33:	adc    al,BYTE PTR [ebx-0x3157fdf1]
  405f39:	lock jmp 0x84e1:0xd2e65bee
  405f41:	daa    
  405f42:	sub    eax,0x80101c66
  405f47:	loop   0x405ef3
  405f49:	jne    0x405ede
  405f4b:	mov    esp,DWORD PTR [esi-0x271b66b0]
  405f51:	call   0x28cc5f63
  405f56:	xchg   BYTE PTR [eax],bl
  405f58:	dec    eax
  405f59:	mov    ebp,0x87eb4727
  405f5e:	vmovhps xmm3,xmm3,QWORD PTR ss:[eax+edx*1-0x46]
  405f65:	out    0x5b,al
  405f67:	jb     0x405f51
  405f69:	(bad)  
  405f6a:	fnstcw WORD PTR [eax]
  405f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f6d:	loopne 0x405f3a
  405f6f:	mov    al,0x62
  405f71:	xor    eax,0x1095b823
  405f76:	in     eax,0xa
  405f78:	sub    al,ch
  405f7a:	sbb    eax,0xb91c9c2a
  405f7f:	adc    al,0x1f
  405f81:	ds (bad) 
  405f83:	mov    edx,0x71662955
  405f88:	adc    al,BYTE PTR [eax]
  405f8a:	mov    bh,0xe3
  405f8c:	mov    esp,0x60886470
  405f91:	push   edx
  405f92:	jae    0x405f35
  405f94:	pop    ebp
  405f95:	cmp    cl,cl
  405f97:	mov    cs,WORD PTR [esi+eax*8+0x35e8d9f3]
  405f9e:	lahf   
  405f9f:	sbb    bh,dh
  405fa1:	or     ah,cl
  405fa3:	(bad)  
  405fa4:	fld    QWORD PTR [ebp-0x6bff8c99]
  405faa:	adc    BYTE PTR [esi],cl
  405fac:	pop    esi
  405fad:	out    0xc9,eax
  405faf:	scas   al,BYTE PTR es:[edi]
  405fb0:	push   ss
  405fb1:	xchg   esp,eax
  405fb2:	lea    edx,[ebp+0x5]
  405fb5:	inc    esp
  405fb6:	jbe    0x405fdb
  405fb8:	imul   ebp,DWORD PTR [edx+0x47f9e067],0x8bc4f6bf
  405fc2:	mov    di,0x66a6
  405fc6:	mov    ah,0xb8
  405fc8:	adc    al,BYTE PTR [ecx+0x52]
  405fcb:	neg    esi
  405fcd:	jns    0x406016
  405fcf:	push   cs
  405fd0:	adc    edi,DWORD PTR [ebp-0x524696f5]
  405fd6:	in     eax,dx
  405fd7:	out    dx,eax
  405fd8:	inc    ecx
  405fd9:	mov    ebx,0x134b5433
  405fde:	xchg   edx,eax
  405fdf:	out    dx,al
  405fe0:	aaa    
  405fe1:	rcr    dh,cl
  405fe3:	std    
  405fe4:	cmp    dh,dh
  405fe6:	mov    edi,0x2967339f
  405feb:	bound  ebp,QWORD PTR [ebx-0x71]
  405fee:	and    eax,0x6f5213fe
  405ff3:	push   cs
  405ff4:	pop    esi
  405ff5:	(bad)  
  405ff6:	stc    
  405ff7:	loope  0x405f8a
  405ff9:	test   al,0x2e
  405ffb:	in     al,0x64
  405ffd:	lods   al,BYTE PTR ds:[esi]
  405ffe:	out    dx,eax
  405fff:	in     eax,dx
  406000:	sahf   
  406001:	shl    eax,1
  406003:	jecxz  0x405ff0
  406005:	sub    DWORD PTR [ebx-0x6491c0a4],ebp
  40600b:	xchg   edi,eax
  40600c:	test   DWORD PTR [esi+0x3aa10fec],esp
  406012:	mov    ecx,0xcff91014
  406017:	test   DWORD PTR [esi+edx*8+0x31],ecx
  40601b:	(bad)  
  40601c:	jge    0x406012
  40601e:	sub    DWORD PTR [edx-0x2e],eax
  406021:	xchg   esp,eax
  406022:	xor    al,0x9f
  406024:	sahf   
  406025:	pop    ecx
  406026:	out    dx,al
  406027:	push   0x29ed5355
  40602c:	xchg   edi,eax
  40602d:	xchg   esi,eax
  40602e:	add    BYTE PTR [ebp+0x6],dl
  406031:	xchg   esp,eax
  406032:	mov    WORD PTR [esi-0x22d0f240],ss
  406038:	aaa    
  406039:	xor    eax,esi
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	xchg   esi,eax
  40615d:	cmp    DWORD PTR [ecx-0x7cc7a423],eax
  406163:	sub    edi,0x5c
  406166:	add    DWORD PTR [ebx-0x745332fb],0xffffff9b
  40616d:	hlt    
  40616e:	pop    esp
  40616f:	loopne 0x4061c3
  406171:	in     eax,0x5d
  406173:	mov    DWORD PTR [edx+eax*2+0x40],esp
  406177:	outs   dx,BYTE PTR ds:[esi]
  406178:	popf   
  406179:	cmp    eax,0x2da66ec6
  40617e:	cmp    eax,esp
  406180:	or     bl,0x29
  406183:	dec    eax
  406184:	pop    esi
  406185:	stos   BYTE PTR es:[edi],al
  406186:	fidiv  WORD PTR [ecx+eax*1-0x57]
  40618a:	pop    es
  40618b:	gs dec edx
  40618d:	push   ds
  40618e:	add    DWORD PTR [esi+0x60693fbc],esp
  406194:	dec    ebp
  406195:	mov    ecx,0xab70cffd
  40619a:	mov    edi,0xb84b8926
  40619f:	mov    eax,ds:0x5417ab52
  4061a4:	retf   
  4061a5:	bound  eax,QWORD PTR [edx-0x80]
  4061a8:	mov    BYTE PTR [edi],dl
  4061aa:	inc    eax
  4061ab:	or     DWORD PTR [eax-0x403ba6f1],ebx
  4061b1:	out    dx,al
  4061b2:	std    
  4061b3:	in     eax,dx
  4061b4:	ins    BYTE PTR es:[edi],dx
  4061b5:	mov    ah,0xa8
  4061b7:	adc    bh,cl
  4061b9:	lahf   
  4061ba:	or     al,0xbc
  4061bc:	lock xor al,0xe8
  4061bf:	scas   eax,DWORD PTR es:[edi]
  4061c0:	sbb    dl,ch
  4061c2:	repz sbb esi,DWORD PTR [eax+0x34d85011]
  4061c9:	cmp    dh,ch
  4061cb:	sbb    eax,0x74c5f346
  4061d0:	hlt    
  4061d1:	adc    BYTE PTR [eax-0x4c519c72],0xb6
  4061d8:	push   es
  4061d9:	sbb    DWORD PTR [edx],esi
  4061db:	addr16 mov edx,0x3049c26e
  4061e1:	dec    ecx
  4061e2:	loope  0x406245
  4061e4:	add    al,0xcb
  4061e6:	mov    bh,0x78
  4061e8:	pop    eax
  4061e9:	sub    DWORD PTR [eax],esp
  4061eb:	pop    edx
  4061ec:	mov    esi,0x11502283
  4061f1:	mov    esi,0x8b97c51b
  4061f6:	push   cs
  4061f7:	icebp  
  4061f8:	lock jne 0x40623f
  4061fb:	loopne 0x406206
  4061fd:	jmp    0x406185
  4061ff:	mov    cl,0x4b
  406201:	repnz mov bl,0x69
  406204:	or     DWORD PTR [esp+esi*1-0x25],0x53
  406209:	inc    ebp
  40620a:	cmp    DWORD PTR [ebp+0x1c88aebe],eax
  406210:	icebp  
  406211:	mov    ss,WORD PTR [ecx]
  406213:	or     eax,0x50961b76
  406218:	jb     0x4061f0
  40621a:	and    eax,0xed4b200b
  40621f:	sub    al,0xdf
  406221:	test   BYTE PTR [eax+ebp*2-0x6c],al
  406225:	adc    eax,0x271d47b0
  40622a:	sar    esp,0xac
  40622d:	mov    WORD PTR [edi+eiz*1+0x4519706b],?
  406234:	add    BYTE PTR [eax],al
  406236:	jge    0x40621c
  406238:	iret   
  406239:	mov    ebx,0xbc8c7fc1
  40623e:	pop    ss
  40623f:	sub    edx,edi
  406241:	adc    al,0xa9
  406243:	or     eax,0xe7ae0b16
  406248:	add    ebp,esp
  40624a:	lods   al,BYTE PTR ds:[esi]
  40624b:	jmp    0xd656:0x9a6b6db4
  406252:	jecxz  0x406220
  406254:	add    DWORD PTR [ebp+0x42],esp
  406257:	loop   0x4062c4
  406259:	movaps XMMWORD PTR [eax-0x463c6b03],xmm3
  406260:	sbb    DWORD PTR [esi+0x45],eax
  406263:	fsubr  QWORD PTR [eax]
  406265:	mov    ds:0x2a39851e,al
  40626a:	xchg   ebx,eax
  40626b:	lods   al,BYTE PTR ds:[esi]
  40626c:	adc    edx,DWORD PTR [eax-0x16b6acb4]
  406272:	push   eax
  406273:	and    BYTE PTR [ecx],bh
  406275:	or     ah,0xfc
  406278:	nop
  406279:	mov    ecx,0xc1530383
  40627e:	lock or dl,BYTE PTR [eax-0x69]
  406282:	daa    
  406283:	xchg   edx,eax
  406284:	xor    al,BYTE PTR [ebx-0x6e]
  406287:	scas   al,BYTE PTR es:[edi]
  406288:	ja     0x4062a5
  40628a:	out    dx,eax
  40628b:	pop    edx
  40628c:	stos   DWORD PTR es:[edi],eax
  40628d:	cld    
  40628e:	scas   al,BYTE PTR es:[edi]
  40628f:	or     al,0xe3
  406291:	loopne 0x406286
  406293:	mov    esp,0x448bd480
  406298:	inc    esi
  406299:	adc    eax,0xed816448
  40629e:	jne    0x40631d
  4062a0:	loop   0x40631e
  4062a2:	call   0xcd1c493f
  4062a7:	imul   eax,DWORD PTR [ecx+0x71849b6f],0xffffffc3
  4062ae:	and    al,0x67
  4062b0:	stc    
  4062b1:	dec    edx
  4062b2:	(bad)  
  4062b4:	test   bh,0x24
  4062b7:	inc    esp
  4062b8:	adc    BYTE PTR [edi+ebx*2+0x1c62ee7d],dl
  4062bf:	pop    esp
  4062c0:	(bad)  
  4062c1:	scas   eax,DWORD PTR es:[edi]
  4062c2:	mov    esp,0xa2b4f8a
  4062c7:	nop
  4062c8:	push   ds
  4062c9:	inc    ecx
  4062ca:	iret   
  4062cb:	fimul  DWORD PTR [edi+0x4e]
  4062ce:	cmp    DWORD PTR [ebx],ebp
  4062d0:	xor    eax,0x3d2bee5a
  4062d5:	or     eax,0x4f2f747f
  4062da:	cmp    eax,0x30104575
  4062df:	stos   DWORD PTR es:[edi],eax
  4062e0:	data16 sub BYTE PTR ds:0xc82ec7f0,ah
  4062e7:	dec    ebx
  4062e8:	sub    al,0x91
  4062ea:	add    edi,DWORD PTR [edi]
  4062ec:	sbb    DWORD PTR [esi-0x58],0xffffff9b
  4062f0:	rcr    al,0x91
  4062f3:	scas   eax,DWORD PTR es:[edi]
  4062f4:	lea    ebp,[ecx+0x3dd672b3]
  4062fa:	dec    ebp
  4062fb:	push   0x820505f1
  406300:	inc    edx
  406301:	sub    esp,DWORD PTR [esi+0x2d]
  406304:	inc    eax
  406305:	cmp    DWORD PTR [edx],ebx
  406307:	jmp    FWORD PTR [esp+eiz*8+0x6]
  40630b:	cwde   
  40630c:	es mov cl,0x23
  40630f:	fdivr  DWORD PTR [ebx]
  406311:	dec    esp
  406312:	fadd   QWORD PTR [edx+edi*1]
  406315:	lahf   
  406316:	pop    ebx
  406317:	arpl   WORD PTR [eax-0x69a4e77b],bp
  40631d:	leave  
  40631e:	sub    BYTE PTR [edx+0x49d96309],dl
  406324:	aas    
  406325:	xor    DWORD PTR [ebx+0x14],0x962f1fad
  40632c:	mov    ebp,0xb8d6033
  406331:	loope  0x4062fb
  406333:	out    dx,eax
  406334:	lahf   
  406335:	xchg   ebx,eax
  406336:	in     eax,dx
  406337:	xchg   esp,eax
  406338:	push   esi
  406339:	mov    es,WORD PTR [edi]
  40633b:	(bad)  
  40633c:	scas   al,BYTE PTR es:[edi]
  40633d:	inc    esp
  40633e:	enter  0xa3b5,0x5a
  406342:	push   0xffffffe4
  406344:	mov    esi,0x89461ee8
  406349:	fstp   QWORD PTR [ecx-0x15219cb5]
  40634f:	add    BYTE PTR ds:0xefa13a5e,cl
  406355:	fst    QWORD PTR [ecx+0x69]
  406358:	icebp  
  406359:	cli    
  40635a:	dec    ebx
  40635b:	add    eax,0x2d60b951
  406360:	xor    DWORD PTR [si],ebx
  406363:	test   eax,0xdce14fe8
  406368:	lds    edx,FWORD PTR [ebx+0x68]
  40636b:	jne    0x40632a
  40636d:	mov    BYTE PTR [ecx+eax*8+0x44],dh
  406371:	pop    es
  406372:	or     al,0x1f
  406374:	bound  edi,QWORD PTR [ebx+0x4dc6271c]
  40637a:	scas   al,BYTE PTR es:[edi]
  40637b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40637c:	stos   DWORD PTR es:[edi],eax
  40637d:	ficomp WORD PTR [ebp+0xa]
  406380:	add    eax,0xc80ecce7
  406385:	pop    esi
  406386:	js     0x406391
  406388:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406389:	cmp    eax,0x6d6677f0
  40638e:	cmp    al,BYTE PTR [ecx]
  406390:	dec    ebp
  406391:	xchg   esp,eax
  406392:	rdtsc  
  406394:	(bad)  
  406395:	mov    cl,0xd9
  406397:	xor    ch,BYTE PTR [edi]
  406399:	scas   eax,DWORD PTR es:[edi]
  40639a:	mov    cl,0x8b
  40639c:	call   0x3151:0xbb27232
  4063a3:	xchg   edi,eax
  4063a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a5:	inc    ebx
  4063a6:	pop    ebp
  4063a7:	nop
  4063a8:	jp     0x406355
  4063aa:	sub    DWORD PTR es:[esi+eiz*2-0x193cb3a9],0xaabb2caa
  4063b6:	aam    0x11
  4063b8:	mov    ah,0xb5
  4063ba:	retf   
  4063bb:	test   BYTE PTR [ebp-0xd],al
  4063be:	imul   esp,DWORD PTR [edi],0xffffffc3
  4063c1:	add    BYTE PTR [eax+0x5ae10977],dl
  4063c7:	jb     0x406422
  4063c9:	ficomp DWORD PTR [eax+0x1b83dd79]
  4063cf:	jmp    0x40635c
  4063d1:	xchg   esp,eax
  4063d2:	call   0xf6123c4a
  4063d7:	jp     0x406393
  4063d9:	xor    esi,edi
  4063db:	(bad)  
  4063dc:	lahf   
  4063dd:	pop    ecx
  4063de:	in     eax,dx
  4063df:	int    0xc0
  4063e1:	das    
  4063e2:	or     ch,BYTE PTR [esi]
  4063e4:	aad    0x7f
  4063e6:	into   
  4063e7:	mov    DWORD PTR [eax+ebx*8+0x24],ebp
  4063eb:	retf   
  4063ec:	inc    edi
  4063ed:	inc    eax
  4063ee:	sbb    eax,0xe3d49868
  4063f3:	repnz push ebx
  4063f5:	adc    ax,0x3d01
  4063f9:	push   ss
  4063fa:	cmp    eax,0xaaf019a6
  4063ff:	mov    al,ds:0xa131c7a4
  406404:	shl    DWORD PTR [ebp+ebx*8-0x61],cl
  406408:	jg     0x4063af
  40640a:	push   edi
  40640b:	adc    al,0xaa
  40640d:	add    eax,0x85d8cd6b
  406412:	jl     0x4063b7
  406414:	add    eax,0x46ddde9b
  406419:	icebp  
  40641a:	neg    BYTE PTR [ebx+0xb]
  40641d:	pop    esi
  40641e:	fst    DWORD PTR ds:0xd9226ce6
  406424:	mov    edi,0x744d3cef
  406429:	shl    BYTE PTR [ecx+0x5],1
  40642c:	cmp    al,0x27
  40642e:	push   esp
  40642f:	shl    BYTE PTR [ecx-0x7b],1
  406432:	dec    edx
  406433:	push   ebx
  406434:	cli    
  406435:	ret    
  406436:	push   ss
  406437:	add    esi,DWORD PTR [esi+0x3a]
  40643a:	(bad)  [ecx+0xa]
  40643d:	or     al,0x78
  40643f:	push   ecx
  406440:	cmp    DWORD PTR [esi+ebx*1-0x65],ecx
  406444:	call   0x6dfdc0d4
  406449:	cmp    DWORD PTR [ebx-0x15ab7408],esi
  40644f:	mov    ah,0x98
  406451:	inc    ecx
  406452:	retf   0xd377
  406455:	rcr    BYTE PTR [edi-0x5222e5fe],cl
  40645b:	xor    al,bl
  40645d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645e:	(bad)  
  40645f:	std    
  406460:	jge    0x4063e4
  406462:	ret    0xed0a
  406465:	int    0x20
  406467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406468:	aas    
  406469:	adc    eax,0x99ba32e
  40646e:	(bad)  
  40646f:	out    0xf1,al
  406471:	repz sub al,0x2b
  406474:	call   0x3edb:0xa78c1f21
  40647b:	dec    ebp
  40647c:	dec    esi
  40647d:	in     al,0x4a
  40647f:	test   BYTE PTR ds:0x99db73f5,0x75
  406486:	jbe    0x4064fd
  406488:	lods   al,BYTE PTR ds:[esi]
  406489:	or     BYTE PTR [ebx],cl
  40648b:	push   ebx
  40648c:	pop    edx
  40648d:	push   eax
  40648e:	cmp    eax,DWORD PTR [ebp+edx*2-0x195a0c1c]
  406495:	pop    ebp
  406496:	jmp    0xabac2074
  40649b:	dec    esp
  40649c:	mov    cl,BYTE PTR [esi-0x38eb0832]
  4064a2:	es je  0x4064c7
  4064a5:	push   ebp
  4064a6:	std    
  4064a7:	inc    esp
  4064a8:	jle    0x40650b
  4064aa:	mov    bl,0xd2
  4064ac:	mov    edi,0xfdb6366a
  4064b1:	retf   0x59f6
  4064b4:	popa   
  4064b5:	mov    edx,0x7495b2a7
  4064ba:	sub    cl,BYTE PTR [esi+0x5fa6f8c9]
  4064c0:	xchg   ecx,eax
  4064c1:	or     ecx,DWORD PTR [ebp-0x29]
  4064c4:	jecxz  0x40646d
  4064c6:	inc    edi
  4064c7:	jle    0x4064e1
  4064c9:	call   0x99d9:0xaffb301d
  4064d0:	call   0x575c:0xb208267c
  4064d7:	pop    ss
  4064d8:	shl    BYTE PTR [esp+edx*4],cl
  4064db:	jae    0x4064d7
  4064dd:	mov    dl,0xc0
  4064df:	outs   dx,DWORD PTR ds:[esi]
  4064e0:	leave  
  4064e1:	push   edx
  4064e2:	sub    DWORD PTR [edx+0x693b4ca1],edi
  4064e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e9:	push   esp
  4064ea:	jp     0x406499
  4064ec:	pop    edx
  4064ed:	imul   ecx,eax,0xffffffca
  4064f0:	mov    esp,0x3312dcf
  4064f5:	mov    edx,DWORD PTR [ecx+0x4084a8f6]
  4064fb:	and    cl,BYTE PTR [edi-0x7c801d22]
  406501:	mov    DWORD PTR [ecx],esp
  406503:	mov    ch,0x7f
  406505:	int3   
  406506:	sub    BYTE PTR [ebx],cl
  406508:	xchg   edi,eax
  406509:	je     0x40656e
  40650b:	jno    0x406499
  40650d:	dec    eax
  40650e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40650f:	mov    es,WORD PTR [ebx+esi*8]
  406512:	adc    BYTE PTR [esp+edi*2-0x76],bh
  406516:	mov    eax,esp
  406518:	js     0x4064ef
  40651a:	add    ch,dl
  40651c:	loopne 0x40653c
  40651e:	dec    edx
  40651f:	ss xchg edx,eax
  406521:	les    ebp,FWORD PTR [edi+0xc]
  406524:	push   esi
  406525:	push   ecx
  406526:	fwait
  406527:	sub    bh,BYTE PTR [edi-0x8a516e]
  40652d:	cs in  eax,0xef
  406530:	mov    esi,0xfeaffd31
  406535:	ds add eax,0x9e929960
  40653b:	ins    BYTE PTR es:[edi],dx
  40653c:	retf   0x64ea
  40653f:	xchg   ebx,eax
  406540:	mov    BYTE PTR [ecx-0x13],cl
  406543:	inc    esi
  406544:	push   ds
  406545:	and    esp,DWORD PTR ds:0xf0c6002b
  40654b:	adc    ecx,edx
  40654d:	lahf   
  40654e:	jle    0x406569
  406550:	jg     0x40650b
  406552:	xchg   ebx,eax
  406553:	das    
  406554:	push   ds
  406555:	ja     0x406531
  406557:	int3   
  406558:	or     DWORD PTR [esi],0xffffffe2
  40655b:	dec    esi
  40655c:	xor    al,0x13
  40655e:	inc    ecx
  40655f:	jle    0x40654e
  406561:	rol    BYTE PTR [edi-0x1a663737],1
  406567:	xlat   BYTE PTR ds:[ebx]
  406568:	lods   al,BYTE PTR ds:[esi]
  406569:	xor    BYTE PTR [esi],bl
  40656b:	call   FWORD PTR [edx+0x13]
  40656e:	jp     0x406547
  406570:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406571:	outs   dx,BYTE PTR ds:[esi]
  406572:	adc    DWORD PTR [edx+edx*2],esi
  406575:	sbb    BYTE PTR [ebp-0x12194c17],0x16
  40657c:	cmc    
  40657d:	dec    dl
  40657f:	dec    ebx
  406580:	mov    ch,0xa1
  406582:	xor    BYTE PTR [edx*8+0x5ee93b9a],dl
  406589:	pop    ds
  40658a:	dec    ebp
  40658b:	lock mov edi,0x377e0e8f
  406591:	outs   dx,BYTE PTR ds:[esi]
  406592:	loop   0x40655e
  406594:	imul   esi,DWORD PTR [edi+ecx*1-0x9],0xb
  406599:	xor    DWORD PTR [edx+ebp*2+0xa28788a],ecx
  4065a0:	sahf   
  4065a1:	sbb    eax,0x22f10165
  4065a6:	inc    ecx
  4065a7:	scas   al,BYTE PTR es:[edi]
  4065a8:	jbe    0x40660a
  4065aa:	push   ecx
  4065ab:	neg    DWORD PTR [ebx-0x41]
  4065ae:	daa    
  4065af:	add    BYTE PTR [esi],al
  4065b1:	clc    
  4065b2:	cmp    BYTE PTR [edi-0x631d9a50],dl
  4065b8:	scas   al,BYTE PTR es:[edi]
  4065b9:	fwait
  4065ba:	xchg   BYTE PTR [ebx-0x3dd1b76a],dl
  4065c0:	and    al,0x72
  4065c2:	stc    
  4065c3:	xchg   esi,eax
  4065c4:	stos   DWORD PTR es:[edi],eax
  4065c5:	mov    edi,0x3700e9ae
  4065ca:	mov    eax,ds:0xc09396af
  4065cf:	jl     0x4065c9
  4065d1:	pop    ecx
  4065d2:	es jnp 0x4065eb
  4065d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065d6:	ds jp  0x4065bc
  4065d9:	mov    ecx,0x10fecb2a
  4065de:	sahf   
  4065df:	scas   eax,DWORD PTR es:[edi]
  4065e0:	retf   
  4065e1:	jl     0x4065d2
  4065e3:	xchg   DWORD PTR [ebp+0x22131a90],ebp
  4065e9:	cli    
  4065ea:	jno    0x4065ae
  4065ec:	lea    eax,[edi]
  4065ee:	mov    BYTE PTR [ecx],bl
  4065f0:	push   esi
  4065f1:	popf   
  4065f2:	rol    BYTE PTR [eax],0xf2
  4065f5:	nop
  4065f6:	sub    DWORD PTR [ebx],ecx
  4065f8:	in     al,0xd
  4065fa:	xor    BYTE PTR [edi],0xcc
  4065fd:	aad    0xb2
  4065ff:	jmp    0x406598
  406601:	aam    0x11
  406603:	inc    esi
  406604:	mov    dl,0x7e
  406606:	loopne 0x4065ee
  406608:	or     edx,DWORD PTR [ecx-0x6d57feff]
  40660e:	mov    edi,0x8eacb257
  406613:	xor    dl,BYTE PTR [eax+eiz*1]
  406616:	outs   dx,BYTE PTR ds:[esi]
  406617:	push   ss
  406618:	and    BYTE PTR [edi+0x56cd98e0],dh
  40661e:	adc    al,0xd
  406620:	dec    ebx
  406621:	add    dh,BYTE PTR [ebx]
  406623:	ins    BYTE PTR es:[edi],dx
  406624:	push   edi
  406625:	add    eax,0x18c6c8e4
  40662a:	fisttp WORD PTR [eax]
  40662c:	or     DWORD PTR [edx+0x463ea2d9],eax
  406632:	int    0x77
  406634:	lock add edx,esi
  406637:	aas    
  406638:	push   esi
  406639:	cwde   
  40663a:	pop    ebp
  40663b:	call   FWORD PTR [eax+edx*2-0x4f]
  40663f:	inc    ecx
  406640:	pop    esi
  406641:	adc    al,0xd0
  406643:	dec    eax
  406644:	jb     0x406647
  406646:	std    
  406647:	adc    ebp,DWORD PTR [esi]
  406649:	xchg   ebx,eax
  40664a:	inc    si
  40664c:	ret    
  40664d:	xchg   BYTE PTR [esi],ah
  40664f:	cli    
  406650:	stos   BYTE PTR es:[edi],al
  406651:	enter  0xc660,0x39
  406655:	mov    al,0xc6
  406657:	mov    esi,0xb3335c31
  40665c:	ss mov cl,0x63
  40665f:	test   eax,0x6785b996
  406664:	je     0x40661a
  406666:	mov    dl,0x6d
  406668:	fst    QWORD PTR [esp+edx*1+0x24a79632]
  40666f:	xchg   ebx,eax
  406670:	idiv   DWORD PTR [edx-0x34a5eb89]
  406676:	and    DWORD PTR [eax+0x2c38fb2b],ebx
  40667c:	add    al,0xe0
  40667e:	and    edx,ebp
  406680:	inc    ebp
  406681:	cmp    eax,0x8385776
  406686:	adc    al,0x6d
  406688:	mov    DWORD PTR ds:0x80f1448a,eax
  40668e:	and    ah,BYTE PTR [esi]
  406690:	das    
  406691:	or     BYTE PTR [edx-0x25c2d7ff],dl
  406697:	ds retf 
  406699:	xchg   BYTE PTR [ebx+0x72972ddd],ah
  40669f:	push   0xe6f5071b
  4066a4:	inc    esp
  4066a5:	push   0xffffffdc
  4066a7:	or     eax,0xdc2ce9e2
  4066ac:	cli    
  4066ad:	jmp    0x4066ef
  4066af:	aaa    
  4066b0:	arpl   WORD PTR [edx+0x57],bp
  4066b3:	mov    al,0xa9
  4066b5:	dec    esp
  4066b6:	leave  
  4066b7:	ficomp DWORD PTR [esi-0x34b7fe92]
  4066bd:	hlt    
  4066be:	push   ds
  4066bf:	pop    es
  4066c0:	rcr    BYTE PTR [ebx+0x27],1
  4066c3:	not    edi
  4066c5:	js     0x4066b6
  4066c7:	pop    es
  4066c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066c9:	mov    ebx,0xd0eef4df
  4066ce:	call   0xa9306168
  4066d3:	pop    ds
  4066d4:	sbb    DWORD PTR [esi+0x47e1cd3f],edi
  4066da:	sub    al,0xa8
  4066dc:	imul   BYTE PTR [ecx+eiz*1-0x2a]
  4066e0:	or     al,BYTE PTR [ebx-0x4e]
  4066e3:	cmp    edi,ecx
  4066e5:	dec    esp
  4066e6:	lahf   
  4066e7:	inc    ecx
  4066e8:	je     0x406714
  4066ea:	fwait
  4066eb:	(bad)  
  4066ec:	sbb    BYTE PTR [edi],ch
  4066ee:	lods   eax,DWORD PTR ds:[esi]
  4066ef:	dec    edi
  4066f0:	push   es
  4066f1:	cmc    
  4066f2:	out    dx,eax
  4066f3:	dec    esp
  4066f4:	dec    ebp
  4066f5:	out    dx,eax
  4066f6:	xchg   DWORD PTR [eax-0x75],ebp
  4066f9:	sbb    al,0x8e
  4066fb:	cdq    
  4066fc:	(bad)  [esi+0x7047dcf8]
  406702:	je     0x406764
  406704:	stos   BYTE PTR es:[edi],al
  406705:	inc    ecx
  406706:	lea    eax,[ecx-0x4e]
  406709:	shl    BYTE PTR [ebp+0x3e4c31fc],1
  40670f:	push   es
  406710:	sub    edi,DWORD PTR [ebx*4+0x7801d786]
  406717:	push   edx
  406718:	xor    bh,bh
  40671a:	(bad)  
  40671b:	xchg   esp,eax
  40671c:	push   esp
  40671d:	ss inc eax
  40671f:	push   esp
  406720:	cmp    esp,DWORD PTR [ebp-0x4a]
  406723:	sbb    DWORD PTR [ecx+eax*1],ebp
  406726:	stc    
  406727:	aaa    
  406728:	int3   
  406729:	aas    
  40672a:	mov    ah,0x4d
  40672c:	mov    ch,0xa
  40672e:	xchg   ebp,eax
  40672f:	and    DWORD PTR ds:0xd2933490,0xffffffff
  406736:	ja     0x40670b
  406738:	inc    esi
  406739:	fist   DWORD PTR [ebx]
  40673b:	xor    cl,bl
  40673d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40673e:	cs jge 0x406779
  406741:	inc    ecx
  406742:	test   eax,0x2d4632ee
  406747:	jo     0x40678d
  406749:	mov    edx,0xf0f039c4
  40674e:	hlt    
  40674f:	out    dx,al
  406750:	jmp    0x4067c4
  406752:	test   DWORD PTR [ebx+0x58],0xaccdf0d5
  406759:	arpl   bx,si
  40675b:	or     bl,dl
  40675d:	inc    ebx
  40675e:	pop    edi
  40675f:	stos   BYTE PTR es:[edi],al
  406760:	sbb    bh,BYTE PTR [edi-0x7efd6af3]
  406766:	sub    edi,DWORD PTR [edx]
  406768:	mov    esp,0xbffcaa35
  40676d:	mov    edi,ebx
  40676f:	in     al,dx
  406770:	push   ebx
  406771:	mov    eax,ds:0xe4c0cf90
  406776:	pop    edx
  406777:	sbb    DWORD PTR [edi-0x7f],eax
  40677a:	cmp    eax,0x4bdf9381
  40677f:	bound  esp,QWORD PTR [ebp-0x36c308d2]
  406785:	push   esi
  406786:	sub    esi,esi
  406788:	jecxz  0x406713
  40678a:	pop    edi
  40678b:	push   cs
  40678c:	push   eax
  40678d:	sbb    BYTE PTR [eax+0x4f],0xc2
  406791:	int3   
  406792:	or     al,0xa6
  406794:	test   eax,0x1d25a6f6
  406799:	addr16 sub al,0xad
  40679c:	retf   0xd920
  40679f:	xchg   ecx,eax
  4067a0:	loope  0x4067a8
  4067a2:	xchg   ecx,eax
  4067a3:	cmp    eax,0x9ad2fb97
  4067a8:	xor    DWORD PTR [ebp-0x50],edx
  4067ab:	lock test eax,0xa397a29c
  4067b1:	leave  
  4067b2:	retf   
  4067b3:	mov    cl,0x91
  4067b5:	push   ds
  4067b6:	dec    edx
  4067b7:	popa   
  4067b8:	mov    cl,0xda
  4067ba:	stc    
  4067bb:	sbb    eax,0x6144e31e
  4067c0:	mov    eax,ds:0xfc9d69ba
  4067c5:	xchg   edx,eax
  4067c6:	pop    edx
  4067c7:	jp     0x4067ab
  4067c9:	or     bh,ah
  4067cb:	dec    edi
  4067cc:	mov    dl,BYTE PTR [ebx+0x422603d2]
  4067d2:	xchg   ebx,eax
  4067d3:	cmc    
  4067d4:	adc    al,cl
  4067d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d7:	adc    DWORD PTR gs:[ecx+0x69f59ec7],ebp
  4067de:	scas   al,BYTE PTR es:[edi]
  4067df:	xor    eax,0xa465eb4
  4067e4:	xchg   ecx,eax
  4067e5:	sbb    ah,BYTE PTR cs:[ecx]
  4067e8:	dec    edx
  4067e9:	xchg   ecx,eax
  4067ea:	and    BYTE PTR [edx],dl
  4067ec:	push   0x3b
  4067ee:	xor    al,0x60
  4067f0:	arpl   bx,si
  4067f2:	xchg   dh,al
  4067f4:	les    edi,FWORD PTR [edx*8-0x204adeb6]
  4067fb:	imul   esp,DWORD PTR [ebp-0x349dbbf1],0x6494365d
  406805:	stc    
  406806:	idiv   ebx
  406808:	jg     0x40681b
  40680a:	retf   0xa758
  40680d:	pop    edx
  40680e:	mov    al,ds:0x24244ea8
  406813:	xchg   dx,ax
  406815:	js     0x40679d
  406817:	jmp    0x4067d6
  406819:	push   0x207b2a57
  40681e:	cmp    ah,BYTE PTR [ecx+0x2c]
  406821:	ret    0x83ba
  406824:	mov    bh,0x32
  406826:	or     cl,ch
  406828:	cmp    edx,DWORD PTR [edx]
  40682a:	or     al,0x30
  40682c:	ja     0x40687c
  40682e:	data16 sbb al,0x1f
  406831:	repz sar dl,0xe6
  406835:	mov    ds:0xf9698d83,al
  40683a:	leave  
  40683b:	xchg   DWORD PTR [edi],ecx
  40683d:	pop    ebp
  40683e:	jnp    0x406835
  406840:	mov    esp,0x4202450f
  406845:	repz pushf 
  406847:	arpl   WORD PTR [edi-0xf],cx
  40684a:	sbb    BYTE PTR [ebx+0x264d06a4],ch
  406850:	dec    edi
  406851:	jle    0x40680d
  406853:	mov    ecx,0x14fe7d77
  406858:	pop    ds
  406859:	mov    cl,0x28
  40685b:	ret    0x612d
  40685e:	mov    esi,0x20569f50
  406863:	mov    eax,ds:0x73c55c03
  406868:	sar    esp,0x83
  40686b:	inc    edi
  40686c:	xchg   esi,eax
  40686d:	js     0x406844
  40686f:	dec    ecx
  406870:	cmp    ebx,DWORD PTR [ecx]
  406872:	hlt    
  406873:	out    dx,eax
  406874:	ins    BYTE PTR es:[edi],dx
  406875:	stos   DWORD PTR es:[edi],eax
  406876:	clc    
  406877:	retf   
  406878:	xchg   DWORD PTR [eax+0x3],ebp
  40687b:	js     0x4068f1
  40687d:	xchg   edi,eax
  40687e:	rcr    DWORD PTR [edi+0x62a33ace],1
  406884:	lds    ebp,FWORD PTR [eax]
  406886:	inc    esp
  406887:	mov    esi,0x8924b471
  40688c:	sub    DWORD PTR [ecx-0xaebbd8d],0xb8ff6e1e
  406896:	add    DWORD PTR [ecx+0x6e2fca65],edx
  40689c:	add    ebx,ebp
  40689e:	ffreep st(5)
  4068a0:	sbb    al,0xbf
  4068a2:	test   al,0x48
  4068a4:	mov    eax,ds:0x6f81cc5
  4068a9:	test   al,0xd
  4068ab:	mov    ah,0x13
  4068ad:	jp     0x40683f
  4068af:	xchg   ebp,eax
  4068b0:	dec    eax
  4068b1:	retw   
  4068b3:	cmp    ch,dl
  4068b5:	adc    ebx,ecx
  4068b7:	mov    ebx,0x6a59a7fc
  4068bc:	or     ebx,edx
  4068be:	cmp    edi,ecx
  4068c0:	call   0x6a31f6c8
  4068c5:	fisubr WORD PTR ds:0xaf6c7db6
  4068cb:	jb     0x4068a6
  4068cd:	xlat   BYTE PTR ds:[ebx]
  4068ce:	push   ebp
  4068cf:	out    0x1d,eax
  4068d1:	call   0x192ccaf1
  4068d6:	loope  0x406882
  4068d8:	mov    eax,0x1ea40420
  4068dd:	push   ebx
  4068de:	push   esp
  4068df:	and    dh,0xea
  4068e2:	fadd   DWORD PTR [edx+0x5108b72c]
  4068e8:	out    0x1a,eax
  4068ea:	iret   
  4068eb:	in     al,0x80
  4068ed:	out    0x99,eax
  4068ef:	and    ebp,ebx
  4068f1:	mov    bh,0xc6
  4068f3:	mov    esi,0xd43ecc95
  4068f8:	cmc    
  4068f9:	dec    edx
  4068fa:	xchg   edi,eax
  4068fb:	out    dx,al
  4068fc:	cmp    edi,DWORD PTR ds:0x7b20f68
  406902:	mov    esi,0x2638f51a
  406907:	pop    esp
  406908:	push   0x67
  40690a:	jb     0x406956
  40690c:	call   0xede9add4
  406911:	or     BYTE PTR [ecx+0x437fde26],0xaf
  406918:	cwde   
  406919:	jb     0x4068ed
  40691b:	cmp    eax,0x48e57c8b
  406920:	(bad)  
  406922:	mov    edi,0xce02bcb7
  406927:	adc    al,0xd7
  406929:	and    eax,0x67216b53
  40692e:	repz ss (bad) 
  406931:	out    0x0,al
  406933:	xor    al,0x21
  406935:	or     eax,0xb715afd0
  40693a:	fdivr  QWORD PTR [eax+0x11]
  40693d:	imul   ebx,DWORD PTR [esi],0xffffffd9
  406940:	scas   eax,DWORD PTR es:[edi]
  406941:	mov    al,0xb
  406943:	and    BYTE PTR [edx+ecx*1-0x556eaa88],ah
  40694a:	les    ebp,FWORD PTR [edi]
  40694c:	or     eax,0x2dd016f9
  406951:	rcl    DWORD PTR [ebx],0xda
  406954:	sbb    al,0xb0
  406956:	gs test BYTE PTR ss:[edi-0x1f],bl
  40695b:	(bad)  
  40695c:	sti    
  40695d:	jb     0x406931
  40695f:	bnd jmp 0x4068f8
  406962:	imul   esi,DWORD PTR [ebx-0x39],0xfa427e77
  406969:	ret    
  40696a:	aas    
  40696b:	cmp    BYTE PTR [eax+0x24fcb5a8],cl
  406971:	mov    ebp,0x23f638d8
  406976:	(bad)  
  406977:	jl     0x4068fe
  406979:	or     al,0x2f
  40697b:	mov    bl,0xe7
  40697d:	jle    0x4069a2
  40697f:	mov    ah,0x80
  406981:	add    cl,0xc0
  406984:	jle    0x406997
  406986:	dec    edx
  406987:	mov    cl,0x1
  406989:	aas    
  40698a:	cmp    al,0x1a
  40698c:	or     BYTE PTR [ebp-0x58],cl
  40698f:	shl    BYTE PTR [eax+0x4e],0x76
  406993:	ins    DWORD PTR es:[edi],dx
  406994:	aam    0xc
  406996:	xchg   BYTE PTR [esp+ebp*4+0x24],ah
  40699a:	mov    dh,0x49
  40699c:	sbb    BYTE PTR [esi+edx*4-0x70],0xea
  4069a1:	int3   
  4069a2:	xchg   esi,eax
  4069a3:	icebp  
  4069a4:	inc    edx
  4069a5:	mov    esp,0x67c9441b
  4069aa:	cmp    BYTE PTR [ebx-0x497a57b],dl
  4069b0:	pushf  
  4069b1:	pop    ebp
  4069b2:	mov    ch,0x7
  4069b4:	mov    ah,0x62
  4069b6:	aaa    
  4069b7:	adc    al,0xfe
  4069b9:	jmp    0x4069e3
  4069bb:	push   edx
  4069bc:	mov    ebx,0x6c72e21b
  4069c1:	fld    DWORD PTR [ecx]
  4069c3:	add    BYTE PTR [edi+0x6a],ch
  4069c6:	or     DWORD PTR [edx+eax*1+0x7d],esp
  4069ca:	xchg   esi,eax
  4069cb:	pop    edx
  4069cc:	out    0x16,eax
  4069ce:	stos   DWORD PTR es:[edi],eax
  4069cf:	jae    0x40698b
  4069d1:	je     0x406a19
  4069d3:	inc    edi
  4069d4:	adc    al,0x2d
  4069d6:	cld    
  4069d7:	mov    dl,0xf4
  4069d9:	fwait
  4069da:	pop    ss
  4069db:	rcr    ebx,cl
  4069dd:	loop   0x406a54
  4069df:	pop    ds
  4069e0:	adc    DWORD PTR [esp+eiz*8+0x13],edx
  4069e4:	mov    eax,ds:0xee804225
  4069e9:	push   eax
  4069ea:	jl     0x406a1b
  4069ec:	or     eax,0x40df36d7
  4069f1:	jg     0x406a58
  4069f3:	mov    al,ds:0xb6fe88b9
  4069f8:	mov    ds:0x57526fc4,al
  4069fd:	repnz add DWORD PTR [ebp-0x63887c7e],edi
  406a04:	jge    0x40698a
  406a06:	sub    DWORD PTR [ebx],edi
  406a08:	ror    DWORD PTR [ebx-0x3f],cl
  406a0b:	test   DWORD PTR [ebx],ecx
  406a0d:	mov    ebx,0x30333dbe
  406a12:	mov    ebp,0xe59c07bc
  406a17:	pop    edi
  406a18:	mov    bl,0xdd
  406a1a:	pop    es
  406a1b:	adc    edx,ebx
  406a1d:	inc    ecx
  406a1e:	mov    ecx,0x550ff3ec
  406a23:	shl    cl,cl
  406a25:	fcomp  QWORD PTR [esi]
  406a27:	stos   DWORD PTR es:[edi],eax
  406a28:	or     DWORD PTR [edx-0x58984a26],edx
  406a2e:	jle    0x406a40
  406a30:	mov    eax,gs
  406a32:	bound  ebx,QWORD PTR [eax-0x74]
  406a35:	pop    esp
  406a36:	scas   eax,DWORD PTR es:[edi]
  406a37:	push   eax
  406a38:	icebp  
  406a39:	clc    
  406a3a:	add    ebx,DWORD PTR [ecx-0x17]
  406a3d:	dec    edi
  406a3e:	ins    DWORD PTR es:[edi],dx
  406a3f:	jmp    0xb6e7:0xa81671e
  406a46:	cmp    DWORD PTR [edi+0x3e],esp
  406a49:	push   esp
  406a4a:	dec    esp
  406a4b:	dec    eax
  406a4c:	ins    BYTE PTR es:[edi],dx
  406a4d:	sub    DWORD PTR [esi+0x1668619],0xb967959
  406a57:	into   
  406a58:	mov    ds:0x8dca1ab9,al
  406a5d:	addr16 mov ds:0xcd8c,eax
  406a61:	push   eax
  406a62:	inc    ebp
  406a63:	retf   0xb554
  406a66:	int3   
  406a67:	and    al,0xb2
  406a69:	sbb    eax,0x3d4ddc2a
  406a6e:	ss pop edx
  406a70:	fcom   QWORD PTR [ebx-0x171829b6]
  406a76:	enter  0x77b2,0xb4
  406a7a:	jecxz  0x406aa8
  406a7c:	fcom   st(7)
  406a7e:	shr    DWORD PTR [eax-0xd],0x99
  406a82:	aad    0x32
  406a84:	or     al,0xea
  406a86:	pop    ebx
  406a87:	and    dh,BYTE PTR [edi+0x203d4b7f]
  406a8d:	dec    edx
  406a8e:	mov    ebx,0xbd1a2711
  406a93:	jno    0x406a18
  406a95:	mov    al,0x1d
  406a97:	arpl   bx,si
  406a99:	mov    esp,0x6919b1ad
  406a9e:	fsub   QWORD PTR [ecx]
  406aa0:	std    
  406aa1:	xchg   esp,eax
  406aa2:	idiv   BYTE PTR [ecx+0x66ed6384]
  406aa8:	vpmaddwd xmm5,xmm2,xmm2
  406aac:	cmp    BYTE PTR [ebp+0xe4672c9],ah
  406ab2:	ret    
  406ab3:	dec    DWORD PTR [esi]
  406ab5:	imul   ebx,edx,0x532cf1
  406abb:	loope  0x406b07
  406abd:	dec    ecx
  406abe:	cmp    al,0xa4
  406ac0:	(bad)  
  406ac1:	in     al,dx
  406ac2:	mov    al,0x9a
  406ac4:	add    esp,edi
  406ac6:	in     eax,dx
  406ac7:	push   esi
  406ac8:	repnz scas eax,DWORD PTR es:[edi]
  406aca:	sbb    ch,BYTE PTR [ebx+0x19]
  406acd:	into   
  406ace:	pop    ss
  406acf:	sub    ch,BYTE PTR [ebp+0xb238350]
  406ad5:	test   BYTE PTR [edi+0x36],0x6d
  406ad9:	sbb    DWORD PTR [ecx],ebx
  406adb:	imul   esp,ebp,0xffffffe7
  406ade:	rcl    DWORD PTR [edx+0x2e],1
  406ae1:	adc    eax,0xd7ff799
  406ae6:	jnp    0x406b31
  406ae8:	jge    0x406af5
  406aea:	sahf   
  406aeb:	shl    DWORD PTR [ebp+0x3b],cl
  406aee:	jp     0x406ae2
  406af0:	fnstsw WORD PTR [ecx+0xa]
  406af3:	les    ebx,FWORD PTR [eax+0x6397bbee]
  406af9:	cmc    
  406afa:	jp     0x406a9d
  406afc:	scas   al,BYTE PTR es:[edi]
  406afd:	call   0xc40e1e35
  406b02:	sar    BYTE PTR [esi],0x5a
  406b05:	shl    DWORD PTR [ebx-0x101d2459],cl
  406b0b:	(bad)  
  406b0c:	das    
  406b0d:	sar    BYTE PTR [edx-0x15dac548],cl
  406b13:	xor    DWORD PTR [ecx],esp
  406b15:	inc    edx
  406b16:	jmp    0x406b57
  406b18:	scas   al,BYTE PTR es:[edi]
  406b19:	(bad)  
  406b1a:	mov    edx,0xe13f1aa
  406b1f:	jno    0x406ae9
  406b21:	mov    ebx,0x3d7049ce
  406b26:	xchg   esp,eax
  406b27:	push   ss
  406b28:	inc    edi
  406b29:	fstp   QWORD PTR [edx+0x34]
  406b2c:	push   es
  406b2d:	pop    edx
  406b2e:	mov    bl,0x46
  406b30:	sub    BYTE PTR [edi+0x4c],bl
  406b33:	jmp    0x406ac7
  406b35:	sub    bh,dl
  406b37:	mov    BYTE PTR [edx+0x3d],0xd6
  406b3b:	sbb    eax,0x129109f0
  406b40:	jecxz  0x406b65
  406b42:	loope  0x406bab
  406b44:	push   0x2d
  406b46:	fwait
  406b47:	in     eax,0xe5
  406b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b4a:	mov    al,0xbf
  406b4c:	jo     0x406b0b
  406b4e:	cmp    edx,ebp
  406b50:	fnstenv [eax]
  406b52:	push   edi
  406b53:	not    BYTE PTR [ebx+0x25aa092d]
  406b59:	xchg   esi,eax
  406b5a:	push   edi
  406b5b:	popf   
  406b5c:	push   ebx
  406b5d:	and    DWORD PTR [edx+esi*2+0x2a33d93a],ebp
  406b64:	sbb    DWORD PTR [eax+0x6b],ebp
  406b67:	fwait
  406b68:	mov    al,ds:0x9054c195
  406b6d:	adc    DWORD PTR [edx+0x17afcfaa],ecx
  406b73:	stos   BYTE PTR es:[edi],al
  406b74:	xor    eax,DWORD PTR [esi+0x17]
  406b77:	out    dx,eax
  406b78:	sti    
  406b79:	jne    0x406b75
  406b7b:	xor    ecx,DWORD PTR [esi]
  406b7d:	in     al,dx
  406b7e:	ds sbb ecx,esi
  406b81:	dec    edx
  406b82:	push   ds
  406b83:	nop
  406b84:	fs dec esp
  406b86:	call   0xfe10905f
  406b8b:	imul   ebx,DWORD PTR ss:[eax],0xffffffad
  406b8f:	inc    ecx
  406b90:	add    BYTE PTR ds:0xbc23cc04,bl
  406b96:	sub    bl,ch
  406b98:	adc    DWORD PTR [esi],edx
  406b9a:	mov    ch,0x51
  406b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b9d:	xchg   esi,eax
  406b9e:	mov    al,ds:0x188715d7
  406ba3:	cmp    cl,BYTE PTR [edx-0x61]
  406ba6:	inc    edi
  406ba7:	loopne 0x406ba9
  406ba9:	enter  0x37b6,0x6a
  406bad:	xor    eax,0x9e53317e
  406bb2:	fisttp WORD PTR [esp+eax*8-0x3a]
  406bb6:	pop    esp
  406bb7:	outs   dx,BYTE PTR ds:[esi]
  406bb8:	lods   al,BYTE PTR ds:[esi]
  406bb9:	fyl2x  
  406bbb:	test   DWORD PTR [ecx],0x30a49c3a
  406bc1:	outs   dx,BYTE PTR ds:[esi]
  406bc2:	leave  
  406bc3:	ss cld 
  406bc5:	push   eax
  406bc6:	call   0x6413:0x80303894
  406bcd:	bound  ebp,QWORD PTR [ecx+0x50d0b56]
  406bd3:	or     al,0x1c
  406bd5:	outs   dx,DWORD PTR ds:[esi]
  406bd6:	xor    DWORD PTR [eax],eax
  406bd8:	inc    eax
  406bd9:	and    esp,DWORD PTR [ecx]
  406bdb:	fld    TBYTE PTR [edi]
  406bdd:	and    al,0x6c
  406bdf:	push   0xa2f5d9a3
  406be4:	aam    0xd8
  406be6:	pop    edx
  406be7:	daa    
  406be8:	call   0x698c:0x84c59cd7
  406bef:	fs push edi
  406bf1:	xchg   esi,eax
  406bf2:	sahf   
  406bf3:	sahf   
  406bf4:	inc    esp
  406bf5:	leave  
  406bf6:	dec    edx
  406bf7:	or     eax,0x9c12f6d3
  406bfc:	sbb    al,al
  406bfe:	in     eax,0x80
  406c00:	lock popf 
  406c02:	pop    ebx
  406c03:	lods   eax,DWORD PTR ds:[esi]
  406c04:	std    
  406c05:	je     0x406b89
  406c07:	mov    ch,0x79
  406c09:	int    0x39
  406c0b:	retf   
  406c0c:	addr16 push eax
  406c0e:	enter  0xad6a,0x9f
  406c12:	xchg   esi,eax
  406c13:	mov    dl,0xd7
  406c15:	mov    BYTE PTR [edi+0x1ef609e7],dl
  406c1b:	sub    bl,BYTE PTR [edx-0x4e7ce3ed]
  406c21:	cs aas 
  406c23:	pop    ebp
  406c24:	das    
  406c25:	(bad)  
  406c26:	jecxz  0x406c38
  406c28:	in     al,0x4c
  406c2a:	fst    QWORD PTR [ebx]
  406c2c:	addr16 push ebp
  406c2e:	clc    
  406c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c30:	lods   eax,DWORD PTR ds:[esi]
  406c31:	loopne 0x406bef
  406c33:	pop    ss
  406c34:	xor    al,al
  406c36:	add    DWORD PTR [eax-0x5009a4fa],eax
  406c3c:	imul   esi,ebx,0x357e2363
  406c42:	and    dh,BYTE PTR [esi]
  406c44:	int3   
  406c45:	test   ch,bl
  406c47:	sbb    cl,BYTE PTR [edi+0x61]
  406c4a:	mov    al,ds:0x35d39f16
  406c4f:	cld    
  406c50:	das    
  406c51:	mov    ah,0xa8
  406c53:	pop    es
  406c54:	in     al,dx
  406c55:	sub    ah,BYTE PTR [edi+0x66]
  406c58:	adc    ebx,DWORD PTR [eax-0x6c125308]
  406c5e:	inc    esi
  406c5f:	popf   
  406c60:	mov    ebx,edx
  406c62:	(bad)
  406c65:	inc    eax
  406c66:	add    al,0x6b
  406c68:	xor    eax,esi
  406c6a:	cmp    BYTE PTR [ebx-0x273fe3c3],al
  406c70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c71:	in     al,0x68
  406c73:	pop    ecx
  406c74:	ds push ebp
  406c76:	fsubp  st(3),st
  406c78:	or     al,0x31
  406c7a:	js     0x406c8e
  406c7c:	icebp  
  406c7d:	jno    0x406cc8
  406c7f:	test   dl,ah
  406c81:	shl    DWORD PTR [ecx-0x50],0x8d
  406c85:	test   DWORD PTR ds:0x66e76414,eax
  406c8b:	data16 daa 
  406c8d:	and    BYTE PTR [ecx-0x7e81cc97],al
  406c93:	test   ebp,edi
  406c95:	dec    edx
  406c96:	(bad)  
  406c97:	mov    bl,0x73
  406c99:	inc    edi
  406c9a:	sbb    al,0x7d
  406c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c9d:	sbb    ebp,DWORD PTR [edx-0x328f31c]
  406ca3:	or     esp,ecx
  406ca5:	cli    
  406ca6:	call   0x9116:0x1d9e004e
  406cad:	jnp    0x406c56
  406caf:	push   ss
  406cb0:	enter  0xcc0c,0x4e
  406cb4:	or     dh,dl
  406cb6:	cwde   
  406cb7:	add    al,0x31
  406cb9:	xor    BYTE PTR [ebx],al
  406cbb:	sti    
  406cbc:	addr16 mov esi,0xb0c07ad5
  406cc2:	push   eax
  406cc3:	mov    ch,BYTE PTR [edx+edi*4+0x15]
  406cc7:	mov    cl,0x58
  406cc9:	(bad)  
  406cca:	jmp    0x89c3f6f1
  406ccf:	add    DWORD PTR [eax],esi
  406cd1:	mov    ds:0x3c14c30f,al
  406cd6:	add    edi,esp
  406cd8:	in     eax,0xf6
  406cda:	call   0x8ed744ac
  406cdf:	push   esp
  406ce0:	dec    eax
  406ce1:	das    
  406ce2:	pop    edx
  406ce3:	arpl   WORD PTR [edi+0x7bd3a3a3],ax
  406ce9:	add    BYTE PTR [edx],0x9b
  406cec:	arpl   WORD PTR [edi+0x745f073c],bx
  406cf2:	ret    0xfd1d
  406cf5:	nop
  406cf6:	cdq    
  406cf7:	fld    st(2)
  406cf9:	ins    BYTE PTR es:[edi],dx
  406cfa:	cli    
  406cfb:	aad    0x47
  406cfd:	call   0xb25e:0xee63c517
  406d04:	sub    BYTE PTR [eax-0x5a],dh
  406d07:	lahf   
  406d08:	dec    esi
  406d09:	pusha  
  406d0a:	(bad)  
  406d0b:	fild   WORD PTR [esi]
  406d0d:	gs cmp al,0x3c
  406d10:	jl     0x406d73
  406d12:	iret   
  406d13:	aad    0x36
  406d15:	sbb    DWORD PTR [edi],0x7e3b7561
  406d1b:	push   cs
  406d1c:	pop    es
  406d1d:	dec    edx
  406d1e:	stos   DWORD PTR es:[edi],eax
  406d1f:	lahf   
  406d20:	sbb    esi,DWORD PTR [edi]
  406d22:	pop    edi
  406d23:	adc    BYTE PTR [edx+0x511b95a6],0xa3
  406d2a:	dec    ebx
  406d2b:	inc    edx
  406d2c:	pop    ss
  406d2d:	dec    ebp
  406d2e:	xor    edx,DWORD PTR [eax-0x42]
  406d31:	popa   
  406d32:	jmp    0x113957b5
  406d37:	inc    esi
  406d38:	xchg   ecx,eax
  406d39:	mov    ah,0x5f
  406d3b:	or     ecx,DWORD PTR [ecx]
  406d3d:	aam    0x76
  406d3f:	xchg   edx,eax
  406d40:	sar    eax,1
  406d42:	imul   ebp,DWORD PTR [esi-0x73],0xffffff8c
  406d46:	addr16 jmp 0x715d:0x7d7773f5
  406d4e:	jnp    0x406d67
  406d50:	xchg   edx,eax
  406d51:	dec    esi
  406d52:	in     eax,0x85
  406d54:	(bad)  
  406d55:	outs   dx,DWORD PTR ds:[esi]
  406d56:	dec    ebp
  406d57:	dec    ebx
  406d58:	(bad)  
  406d5a:	aam    0xe6
  406d5c:	xor    ecx,DWORD PTR gs:[ecx+0x71]
  406d60:	xor    ah,cl
  406d62:	mov    esp,0x4ebec9b5
  406d67:	push   ss
  406d68:	push   cs
  406d69:	jne    0x406d30
  406d6b:	arpl   bx,sp
  406d6d:	imul   esp,DWORD PTR [ecx-0x1d],0xb19c970f
  406d74:	imul   edi,ebp,0x34
  406d77:	lds    esp,FWORD PTR [ecx+0x76]
  406d7a:	scas   al,BYTE PTR es:[edi]
  406d7b:	aad    0xcc
  406d7d:	inc    eax
  406d7e:	nop
  406d7f:	gs nop
  406d81:	iret   
  406d82:	mov    ebp,0x48e7fc2
  406d87:	and    cl,BYTE PTR [edx+esi*1+0x69]
  406d8b:	lds    ebp,FWORD PTR [ebx+0x6b]
  406d8e:	dec    edx
  406d8f:	mov    eax,0x8ae11c2e
  406d94:	lock enter 0xdc04,0xf6
  406d99:	psllq  mm7,QWORD PTR [edx+eiz*1+0x4e0bad76]
  406da1:	jmp    0x406dbf
  406da3:	pop    ebx
  406da4:	data16 js 0x406d4a
  406da7:	hlt    
  406da8:	mov    cl,0xe1
  406daa:	retf   
  406dab:	js     0x406e0c
  406dad:	mov    ch,0x97
  406daf:	or     ebx,esi
  406db1:	mov    edx,0xe6f9d1b
  406db6:	pop    esp
  406db7:	sbb    eax,0xa5b1a296
  406dbc:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  406dbe:	les    ecx,FWORD PTR [esi+eax*1+0xe]
  406dc2:	lock xor al,0xef
  406dc5:	pop    edi
  406dc6:	repnz sahf 
  406dc8:	(bad)  
  406dc9:	(bad)  [eax]
  406dcb:	outs   dx,DWORD PTR ds:[esi]
  406dcc:	or     ch,BYTE PTR [ebx+0x1891d500]
  406dd2:	outs   dx,BYTE PTR ds:[esi]
  406dd3:	hlt    
  406dd4:	xchg   ebp,eax
  406dd5:	arpl   WORD PTR [edi],dx
  406dd7:	test   DWORD PTR [ebp-0x2b1cd791],esi
  406ddd:	xor    edx,DWORD PTR [ebx-0x6dba166c]
  406de3:	call   0x2529f57a
  406de8:	adc    eax,0xdab08f37
  406ded:	loope  0x406deb
  406def:	pop    ecx
  406df0:	push   0x2f
  406df2:	mov    al,ds:0x247b134d
  406df7:	add    ch,BYTE PTR [esi-0x7692f774]
  406dfd:	and    eax,0xc9a97cbd
  406e02:	outs   dx,DWORD PTR ds:[esi]
  406e03:	iret   
  406e04:	out    0x92,al
  406e06:	rol    BYTE PTR ds:0xb8d64e11,cl
  406e0c:	dec    ecx
  406e0d:	xchg   edx,eax
  406e0e:	rol    BYTE PTR [ecx+edi*8+0x6e],1
  406e12:	xchg   esp,esi
  406e14:	into   
  406e15:	or     al,0x63
  406e17:	mov    ecx,0x60bba0e6
  406e1c:	mov    cl,0x21
  406e1e:	cdq    
  406e1f:	in     eax,dx
  406e20:	mov    ds:0x4210aeaa,al
  406e25:	out    0xdd,al
  406e27:	(bad)  
  406e29:	into   
  406e2a:	or     al,0x82
  406e2c:	and    eax,DWORD PTR [esi+ebp*8+0x15]
  406e30:	pmulhuw mm1,QWORD PTR [ebx-0x9457125]
  406e37:	fisttp QWORD PTR ds:0x5e252878
  406e3d:	mov    bh,0xac
  406e3f:	rol    bh,cl
  406e41:	(bad)  
  406e42:	out    0x5,eax
  406e44:	lods   al,BYTE PTR ds:[esi]
  406e45:	pushf  
  406e46:	pop    es
  406e47:	ret    0x688a
  406e4a:	mov    edi,gs
  406e4c:	push   ds
  406e4d:	leave  
  406e4e:	jecxz  0x406e9f
  406e50:	stc    
  406e51:	or     esi,ebx
  406e53:	stos   BYTE PTR es:[edi],al
  406e54:	add    BYTE PTR [edx-0x17],cl
  406e57:	stc    
  406e58:	pop    ebx
  406e59:	(bad)  
  406e5a:	sti    
  406e5b:	or     BYTE PTR [ecx],0x7a
  406e5e:	sbb    esi,esi
  406e60:	xor    ebp,0xffffff92
  406e63:	dec    esi
  406e64:	sar    BYTE PTR [esi+edx*4+0x36f2cfba],0xec
  406e6c:	aas    
  406e6d:	add    BYTE PTR [edi+edx*4],0x84
  406e71:	ins    DWORD PTR es:[edi],dx
  406e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e73:	sub    bl,ch
  406e75:	xchg   ecx,eax
  406e76:	mov    ebx,0x339a1e2c
  406e7b:	aaa    
  406e7c:	(bad)  
  406e7d:	sar    BYTE PTR [eax+0x10],1
  406e80:	lods   eax,DWORD PTR ss:[esi]
  406e82:	mov    BYTE PTR ds:0x85e4f63f,ah
  406e88:	xchg   ebx,eax
  406e89:	mov    ss,WORD PTR [ebx+0x5b598bbd]
  406e8f:	shl    BYTE PTR [eax],cl
  406e91:	dec    ebx
  406e92:	rol    DWORD PTR [eax-0x3b],1
  406e95:	clc    
  406e96:	sub    BYTE PTR ds:0xf6842cfd,dh
  406e9c:	cmp    ch,BYTE PTR [ebp+0x34]
  406e9f:	mul    BYTE PTR [eax-0x6cff8dac]
  406ea5:	ins    BYTE PTR es:[edi],dx
  406ea6:	inc    ebp
  406ea7:	sub    DWORD PTR [edx+0x45],esi
  406eaa:	sahf   
  406eab:	pop    ebp
  406eac:	jno    0x406e3c
  406eae:	push   es
  406eaf:	in     eax,0xac
  406eb1:	mov    eax,ds:0x5d53e711
  406eb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406eb7:	pusha  
  406eb8:	push   ds
  406eb9:	idiv   DWORD PTR [edx+ebx*2-0x4]
  406ebd:	push   ebp
  406ebe:	sbb    ch,BYTE PTR [ebx+0x35]
  406ec1:	int    0xe3
  406ec3:	jne    0x406f1c
  406ec5:	cmp    DWORD PTR [ebx],edx
  406ec7:	imul   esi,ecx,0x103e0c41
  406ecd:	inc    edi
  406ece:	call   0x79d8787c
  406ed3:	mov    ebp,0x4a4fbda5
  406ed8:	out    0x4e,al
  406eda:	sub    ah,al
  406edc:	xchg   DWORD PTR [edx+0x6c],esp
  406edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee0:	(bad)  
  406ee1:	call   0xdd4ce02a
  406ee6:	sub    BYTE PTR [ebx+0x59],dl
  406ee9:	in     eax,dx
  406eea:	sti    
  406eeb:	and    eax,0x9ca259f3
  406ef0:	test   eax,0xa19d144
  406ef5:	dec    ebp
  406ef6:	jge    0x406ed6
  406ef8:	inc    ecx
  406ef9:	cmp    DWORD PTR [ebx],edi
  406efb:	fld    QWORD PTR [esi-0x6]
  406efe:	leave  
  406eff:	jo     0x406ec8
  406f01:	lods   eax,DWORD PTR ds:[esi]
  406f02:	shl    DWORD PTR [esi+0x32],1
  406f05:	addr16 xchg esi,eax
  406f07:	loop   0x406f26
  406f09:	stc    
  406f0a:	inc    ebx
  406f0b:	stos   BYTE PTR es:[edi],al
  406f0c:	push   ss
  406f0d:	retf   0x4df7
  406f10:	mov    al,ds:0xd29dda29
  406f15:	lods   al,BYTE PTR ds:[esi]
  406f16:	adc    al,0x14
  406f18:	mov    WORD PTR [ebp+0x1e],gs
  406f1b:	pop    ecx
  406f1c:	int    0x23
  406f1e:	sub    eax,ebp
  406f20:	addr16 jo 0x406f42
  406f23:	(bad)  
  406f24:	call   0x11aba39f
  406f29:	pop    ebx
  406f2a:	pop    eax
  406f2b:	and    eax,0x8682115d
  406f30:	xchg   ebx,eax
  406f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f32:	pushf  
  406f33:	imul   eax,DWORD PTR [eax+ebp*8],0x3a1da1fd
  406f3a:	aas    
  406f3b:	test   al,0x27
  406f3d:	push   ebp
  406f3e:	dec    ecx
  406f3f:	push   ecx
  406f40:	test   eax,0x9fc1e3f4
  406f45:	cdq    
  406f46:	(bad)  
  406f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f48:	icebp  
  406f49:	push   ecx
  406f4a:	xlat   BYTE PTR ds:[ebx]
  406f4b:	pop    esp
  406f4c:	out    0x5a,eax
  406f4e:	or     DWORD PTR [ebp+0x5f59ce21],0xa03e5340
  406f58:	adc    al,0x72
  406f5a:	pop    edi
  406f5b:	dec    edi
  406f5c:	js     0x406f2a
  406f5e:	data16 sti 
  406f60:	loop   0x406f4c
  406f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f63:	push   0x47
  406f65:	pop    esi
  406f66:	mov    ah,0xb9
  406f68:	test   ah,bl
  406f6a:	out    dx,al
  406f6b:	mov    cl,0x66
  406f6d:	repz dec esi
  406f6f:	stc    
  406f70:	pop    ecx
  406f71:	das    
  406f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f73:	in     eax,dx
  406f74:	out    0x1c,al
  406f76:	mov    ebx,0x6fef1b0d
  406f7b:	aam    0xa0
  406f7d:	pop    edx
  406f7e:	push   ebp
  406f7f:	pop    ecx
  406f80:	in     al,dx
  406f81:	aaa    
  406f82:	mov    ds:0xd9cb6dd3,eax
  406f87:	pop    ecx
  406f88:	push   ebx
  406f89:	rcr    DWORD PTR [ecx+0x55f516e9],0x12
  406f90:	(bad)  
  406f91:	push   ds
  406f92:	cli    
  406f93:	cmp    eax,0xdbffcb1b
  406f98:	xor    eax,0x43208b6d
  406f9d:	xchg   edi,eax
  406f9e:	mov    al,ds:0xccd7e58f
  406fa3:	mov    al,ds:0xb807b663
  406fa8:	mov    esi,0x20ccd50f
  406fad:	stos   BYTE PTR es:[edi],al
  406fae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406faf:	xor    al,0xde
  406fb1:	xchg   edi,eax
  406fb2:	out    dx,al
  406fb3:	pop    ebp
  406fb4:	mul    DWORD PTR [ebx+0x5fddf7be]
  406fba:	cmp    al,0x6f
  406fbc:	or     al,0xb
  406fbe:	mov    cl,0x3c
  406fc0:	(bad)
  406fc4:	mov    ds:0xf9245e17,al
  406fc9:	aaa    
  406fca:	scas   al,BYTE PTR es:[edi]
  406fcb:	loope  0x406f57
  406fcd:	fst    QWORD PTR [edx-0x9562f07]
  406fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd4:	push   ecx
  406fd5:	stos   BYTE PTR es:[edi],al
  406fd6:	xor    esp,eax
  406fd8:	ds push 0x57
  406fdb:	nop
  406fdc:	add    al,0x9f
  406fde:	add    eax,0x110824c4
  406fe3:	sbb    eax,0x6871bac7
  406fe8:	xchg   esi,eax
  406fe9:	xchg   edx,eax
  406fea:	sbb    BYTE PTR [esi],bh
  406fec:	(bad)  
  406fed:	retf   
  406fee:	dec    eax
  406fef:	xlat   BYTE PTR ds:[ebx]
  406ff0:	sub    edx,DWORD PTR [ebp-0x2ea42153]
  406ff6:	sbb    ebx,DWORD PTR [ecx+0x78]
  406ff9:	je     0x407030
  406ffb:	es in  al,dx
  406ffd:	dec    eax
  406ffe:	adc    BYTE PTR [eax-0x26],al
  407001:	and    DWORD PTR [eax],esi
  407003:	idiv   al
  407005:	mov    al,0xad
  407007:	stos   BYTE PTR es:[edi],al
  407008:	cmp    al,0xee
  40700a:	sbb    bl,BYTE PTR cs:[eax+0x1b]
  40700e:	push   edi
  40700f:	mov    ch,0x16
  407011:	dec    ebp
  407012:	shl    DWORD PTR [ebp+0x23dae90c],0x80
  407019:	lock fsub QWORD PTR [ecx+esi*2+0x65]
  40701e:	add    cl,BYTE PTR [edx]
  407020:	jno    0x40708a
  407022:	mov    ds:0xf07bc8d1,al
  407027:	mov    dl,0xe4
  407029:	div    DWORD PTR [edi+esi*2-0x32]
  40702d:	mov    ebp,0xecc43fb
  407032:	and    eax,0x1c356f6d
  407037:	or     ch,BYTE PTR [ebp+0x43]
  40703a:	daa    
  40703b:	mov    al,0x1f
  40703d:	inc    edx
  40703e:	fist   DWORD PTR [ecx+0x7ec731ba]
  407044:	adc    BYTE PTR [edx+eiz*1],0x83
  407048:	dec    eax
  407049:	xor    BYTE PTR [ecx-0x709efc06],0x1c
  407050:	mov    ebx,DWORD PTR [ebx+ecx*1-0x2d]
  407054:	push   es
  407055:	ror    BYTE PTR [ebx+0x3d517dde],0x73
  40705c:	je     0x40709b
  40705e:	icebp  
  40705f:	scas   al,BYTE PTR es:[edi]
  407060:	push   edx
  407061:	sub    al,0x9c
  407063:	or     BYTE PTR ds:0x3b5c4d5f,ah
  407069:	cwde   
  40706a:	pushf  
  40706b:	fadd   DWORD PTR [edx+ebp*1+0x4754e1bc]
  407072:	stos   DWORD PTR es:[edi],eax
  407073:	inc    ebp
  407074:	rol    BYTE PTR ds:0x29893626,1
  40707a:	call   0x9631:0x679d6e0e
  407081:	int    0xdb
  407083:	mov    eax,0xcda26734
  407088:	lsl    ebp,WORD PTR [ebx-0x6d]
  40708c:	iret   
  40708d:	(bad)  
  40708f:	jno    0x4070ee
  407091:	and    DWORD PTR [ebx],edi
  407093:	out    dx,al
  407094:	inc    BYTE PTR [eax]
  407096:	outs   dx,BYTE PTR ds:[esi]
  407097:	jmp    0x46e49097
  40709c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40709d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40709e:	push   eax
  40709f:	dec    edi
  4070a0:	push   ebx
  4070a1:	sbb    ecx,DWORD PTR [esi+eax*4]
  4070a4:	inc    edi
  4070a5:	imul   eax,ebx,0x35
  4070a8:	fist   DWORD PTR [esi-0x5a]
  4070ab:	mov    eax,ds:0x54aeee13
  4070b0:	(bad)  
  4070b1:	push   ds
  4070b2:	add    bh,bh
  4070b4:	adc    BYTE PTR [edi+0x43],0x4d
  4070b8:	mov    cl,0x25
  4070ba:	pop    ecx
  4070bb:	push   edi
  4070bc:	fst    QWORD PTR [esi+0x6a]
  4070bf:	clc    
  4070c0:	out    0x71,al
  4070c2:	pop    ds
  4070c3:	mov    esi,0xd424b47d
  4070c8:	add    al,0x3
  4070ca:	add    DWORD PTR [esi],0x58e58d55
  4070d0:	dec    esi
  4070d1:	xor    eax,0x8a1b8259
  4070d6:	mov    eax,0x11f2ec9c
  4070db:	mov    eax,ds:0xeb8475e0
  4070e0:	mov    ebx,0xcf33a1f4
  4070e5:	add    cl,bl
  4070e7:	retf   
  4070e8:	addr16 cs ds mov esi,0x41c230ff
  4070f0:	fcomp  st(6)
  4070f2:	or     BYTE PTR [ebp-0x490719c1],dh
  4070f8:	pusha  
  4070f9:	sbb    al,al
  4070fb:	sub    edx,0x207c24dd
  407101:	sub    BYTE PTR [edx],cl
  407103:	out    0x8a,al
  407105:	aas    
  407106:	rcr    BYTE PTR [edi+0xd],0xa3
  40710a:	lock inc edi
  40710c:	mov    BYTE PTR [esi],bh
  40710e:	in     al,0x3a
  407110:	mov    ds:0xd56bf9bf,al
  407115:	shr    bh,cl
  407117:	cs push ebx
  407119:	lods   al,BYTE PTR ds:[esi]
  40711a:	loope  0x4070d8
  40711c:	jns    0x407195
  40711e:	inc    esi
  40711f:	jae    0x407105
  407121:	addr16 pop esp
  407123:	in     al,dx
  407124:	jge    0x40716b
  407126:	mov    dh,0xab
  407128:	add    edx,DWORD PTR [ecx+edi*2+0x51]
  40712c:	and    al,0x71
  40712e:	jnp    0x4070c6
  407130:	mov    ds:0x7af23406,al
  407135:	ins    DWORD PTR es:[edi],dx
  407136:	mov    edx,0xacb5de50
  40713b:	pop    esp
  40713c:	dec    ecx
  40713d:	jmp    0x4070fb
  40713f:	das    
  407140:	cli    
  407141:	xor    BYTE PTR [ecx-0x9624dd7],ch
  407147:	outs   dx,BYTE PTR ds:[esi]
  407148:	fs pop eax
  40714a:	jp     0x4071a7
  40714c:	outs   dx,BYTE PTR ds:[esi]
  40714d:	cmp    eax,0xb9d0aea3
  407152:	out    0x27,eax
  407154:	adc    ch,ah
  407156:	test   al,0x99
  407158:	out    0xd1,al
  40715a:	clc    
  40715b:	dec    esi
  40715c:	hlt    
  40715d:	test   DWORD PTR [eax],ebp
  40715f:	daa    
  407160:	dec    ebp
  407161:	in     al,0x6f
  407163:	or     eax,0x135081cf
  407168:	pop    ss
  407169:	and    eax,0x192e9ebf
  40716e:	cld    
  40716f:	mov    ebx,0x207ae282
  407174:	push   eax
  407175:	leave  
  407176:	in     al,0x81
  407178:	test   al,0xa2
  40717a:	add    al,0xa6
  40717c:	stc    
  40717d:	les    edi,FWORD PTR [ebp+0x18]
  407180:	jp     0x4071ad
  407182:	nop
  407183:	sahf   
  407184:	addr16 push esp
  407186:	mov    BYTE PTR [ebp-0x1c],ah
  407189:	shl    BYTE PTR [edi],0xbc
  40718c:	dec    eax
  40718d:	out    0x8f,eax
  40718f:	retf   0x53d2
  407192:	inc    ebp
  407193:	test   ecx,edx
  407195:	mov    ecx,0xdbf9c46a
  40719a:	imul   eax,DWORD PTR [ebp-0x5f],0x6a718da1
  4071a1:	scas   eax,DWORD PTR es:[edi]
  4071a2:	(bad)
  4071a5:	in     al,0x3e
  4071a7:	inc    esp
  4071a8:	sahf   
  4071a9:	lock sbb BYTE PTR [esp+esi*1-0xe],dl
  4071ae:	push   0x549f9103
  4071b3:	jge    0x4071c5
  4071b5:	out    dx,eax
  4071b6:	outs   dx,BYTE PTR ds:[esi]
  4071b7:	inc    esi
  4071b8:	jns    0x407219
  4071ba:	push   edx
  4071bb:	sbb    bl,BYTE PTR [esp+edi*8-0x64c0b4f7]
  4071c2:	or     DWORD PTR [ebx],0xffffff90
  4071c5:	sub    cl,0xc7
  4071c8:	sub    BYTE PTR [eax-0x3b28f646],ah
  4071ce:	gs fmulp st(2),st
  4071d1:	mov    edx,0x6584ee98
  4071d6:	cmp    bl,BYTE PTR [edx-0x3a0cd8a9]
  4071dc:	imul   ebp,edi,0xc217b259
  4071e2:	jbe    0x407262
  4071e4:	(bad)  
  4071e5:	pushf  
  4071e6:	mov    edx,0x94368536
  4071eb:	lahf   
  4071ec:	push   ss
  4071ed:	push   ebp
  4071ee:	call   0x7fcd0519
  4071f3:	pop    ebx
  4071f4:	pushf  
  4071f5:	push   edx
  4071f6:	enter  0x1311,0x84
  4071fa:	iret   
  4071fb:	or     BYTE PTR [ecx-0x56adeede],ah
  407201:	(bad)  
  407202:	mov    ah,cl
  407204:	ja     0x40720e
  407206:	popf   
  407207:	into   
  407208:	push   eax
  407209:	dec    eax
  40720a:	les    edx,FWORD PTR [esi-0x19489080]
  407210:	xor    DWORD PTR [ebp+eax*4-0x3b1dd292],ecx
  407217:	stos   DWORD PTR es:[edi],eax
  407218:	dec    edx
  407219:	in     eax,0xa9
  40721b:	and    al,BYTE PTR [ebx-0x6f23a083]
  407221:	sti    
  407222:	outs   dx,BYTE PTR ds:[esi]
  407223:	sbb    bh,BYTE PTR [edi-0x3ab03bc8]
  407229:	mov    dl,0x7a
  40722b:	jmp    0x280e78e3
  407230:	clc    
  407231:	mov    dh,dl
  407233:	jne    0x40725f
  407235:	sti    
  407236:	push   ds
  407237:	add    eax,0xc3c35b43
  40723c:	fdivr  st,st(6)
  40723e:	ret    
  40723f:	and    dl,BYTE PTR [eax+ebx*2-0x3b]
  407243:	fst    QWORD PTR [ebp-0x2c]
  407246:	daa    
  407247:	shr    ch,1
  407249:	add    BYTE PTR [ebx],dh
  40724b:	jno    0x4071ea
  40724d:	pop    ebx
  40724e:	inc    edx
  40724f:	xchg   esi,eax
  407250:	repz mov bl,0x9e
  407253:	mov    BYTE PTR [esi],0xec
  407256:	adc    cl,BYTE PTR [ebx+0x31]
  407259:	dec    esp
  40725a:	(bad)  
  40725b:	mov    edx,0xc6589bc6
  407261:	fsubr  QWORD PTR [ebx+0x176bfb45]
  407267:	dec    ebx
  407268:	ds enter 0xa848,0x8f
  40726d:	xchg   edx,eax
  40726e:	out    0xe1,al
  407270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407271:	and    DWORD PTR [esi+ebp*2+0x6a11d46d],eax
  407278:	push   edi
  407279:	sub    DWORD PTR [eax+0x372ff55e],ebx
  40727f:	aas    
  407280:	pop    esp
  407281:	push   edx
  407282:	popf   
  407283:	inc    eax
  407284:	jae    0x40725f
  407286:	xlat   BYTE PTR ds:[ebx]
  407287:	push   ebp
  407288:	jb     0x407216
  40728a:	lds    ebp,FWORD PTR [ebp-0xf]
  40728d:	inc    ebp
  40728e:	inc    edi
  40728f:	int    0x89
  407291:	arpl   WORD PTR [ebp+0x432a8ece],si
  407297:	dec    ecx
  407298:	fsub   DWORD PTR [ecx+edi*8+0x11]
  40729c:	inc    edi
  40729d:	push   cs
  40729e:	das    
  40729f:	add    esp,DWORD PTR [eax]
  4072a1:	or     eax,0xc70d0c9c
  4072a6:	inc    edi
  4072a7:	xchg   edi,eax
  4072a8:	fld    QWORD PTR [esi]
  4072aa:	ja     0x407234
  4072ac:	push   ebp
  4072ad:	jge    0x407321
  4072af:	sub    eax,DWORD PTR [ecx]
  4072b1:	out    dx,al
  4072b2:	sub    eax,0xfcf75ee4
  4072b7:	mov    al,0xe8
  4072b9:	lock mov ebx,0x89aed125
  4072bf:	mov    ebx,0x59dd1036
  4072c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c5:	inc    edi
  4072c6:	das    
  4072c7:	sub    DWORD PTR [edx-0x6c695a6e],esp
  4072cd:	bound  edi,QWORD PTR [ebp-0x42]
  4072d0:	(bad)  
  4072d1:	mov    dl,0x21
  4072d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072d4:	and    dl,BYTE PTR [ebx]
  4072d6:	dec    ecx
  4072d7:	xchg   edi,eax
  4072d8:	repnz mov BYTE PTR ds:0x6dcdad0a,dl
  4072df:	inc    esi
  4072e0:	xor    al,0xa0
  4072e2:	ret    0x2b34
  4072e5:	pop    esp
  4072e6:	inc    ecx
  4072e7:	inc    ecx
  4072e8:	ins    BYTE PTR es:[edi],dx
  4072e9:	mov    edi,edx
  4072eb:	jns    0x407369
  4072ed:	push   0x3fadf78c
  4072f2:	mov    edx,0xa10f1d36
  4072f7:	mov    ds:0xef9a030a,eax
  4072fc:	jo     0x407326
  4072fe:	shl    BYTE PTR [ebx-0x33],cl
  407301:	xor    esi,ecx
  407303:	jecxz  0x407378
  407305:	push   esp
  407306:	xchg   esp,eax
  407307:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407308:	in     al,0xd6
  40730a:	cmp    BYTE PTR [edx],cl
  40730c:	outs   dx,BYTE PTR ds:[esi]
  40730d:	fcomp  DWORD PTR [edi+0x3e]
  407310:	hlt    
  407311:	hlt    
  407312:	(bad)  
  407313:	pop    edx
  407314:	mov    esi,DWORD PTR [edx+0x69]
  407317:	fnstcw WORD PTR [ecx-0x545808a4]
  40731d:	mov    ds:0xf2d63055,eax
  407322:	jmp    0xd5c0c89a
  407327:	das    
  407328:	add    edi,DWORD PTR [ebp-0x29]
  40732b:	aad    0xbc
  40732d:	dec    esi
  40732e:	mov    ebp,cs
  407330:	jb     0x40736e
  407332:	scas   al,BYTE PTR es:[edi]
  407333:	push   ds
  407334:	xor    eax,0x420a03df
  407339:	clc    
  40733a:	fst    DWORD PTR [edx-0x54]
  40733d:	out    dx,al
  40733e:	cmp    DWORD PTR [ecx],ebp
  407340:	in     eax,0x52
  407342:	ja     0x407338
  407344:	aas    
  407345:	fstp   QWORD PTR [eax]
  407347:	push   ebx
  407348:	fsubr  DWORD PTR [edx+eax*2]
  40734b:	mov    ds:0xff51a236,al
  407350:	ins    BYTE PTR es:[edi],dx
  407351:	mov    ecx,0xea46cfb2
  407356:	pop    ecx
  407357:	out    0x67,eax
  407359:	mov    esi,0xd0eddb94
  40735e:	fs push ds
  407360:	add    al,0xdf
  407362:	cld    
  407363:	rcr    BYTE PTR [ebp+0xec689dd],0x9b
  40736a:	jl     0x4073af
  40736c:	lds    esi,FWORD PTR [eax-0x5bc2029f]
  407372:	(bad)  
  407373:	arpl   WORD PTR [ecx],ax
  407375:	pop    ebp
  407376:	xchg   ebp,edx
  407378:	fadd   st(4),st
  40737a:	and    edx,DWORD PTR [edx-0x5b]
  40737d:	cli    
  40737e:	(bad)  
  407380:	mov    ebp,0x745dbf86
  407386:	outs   dx,DWORD PTR ds:[esi]
  407387:	loope  0x4073ea
  407389:	je     0x4073df
  40738b:	cmp    dl,BYTE PTR [esi+0x122d93d5]
  407391:	dec    ebx
  407392:	sub    DWORD PTR [esi+esi*1+0x36],ebp
  407396:	call   0xebece83a
  40739b:	inc    edi
  40739c:	jnp    0x407379
  40739e:	int    0x24
  4073a0:	dec    ebx
  4073a1:	fist   DWORD PTR [eax]
  4073a3:	adc    cl,dh
  4073a5:	adc    al,0x71
  4073a7:	mov    eax,0x494a2565
  4073ac:	ss pop esi
  4073ae:	aaa    
  4073af:	int    0xb0
  4073b1:	dec    esi
  4073b2:	xchg   edx,eax
  4073b3:	dec    ebp
  4073b4:	inc    ecx
  4073b5:	ds mov dl,0x44
  4073b8:	aad    0xa5
  4073ba:	int    0x42
  4073bc:	test   al,0x2f
  4073be:	push   ebp
  4073bf:	mov    edx,0x6b621e3b
  4073c4:	out    0x25,al
  4073c6:	imul   edi,ebp,0xffffffcc
  4073c9:	dec    edx
  4073ca:	lods   eax,DWORD PTR ds:[esi]
  4073cb:	(bad)  
  4073cc:	or     esi,edi
  4073ce:	and    al,0x15
  4073d0:	sub    eax,0xece70db5
  4073d5:	test   DWORD PTR ds:0x46640d25,edi
  4073db:	sbb    al,0xaa
  4073dd:	jmp    0x4073a6
  4073df:	sub    DWORD PTR [esi+0x29175bc0],edx
  4073e5:	or     eax,DWORD PTR [esi-0x2773921d]
  4073eb:	sbb    edx,edx
  4073ed:	mov    dl,0x49
  4073ef:	or     al,0x12
  4073f1:	mov    ds:0x5d3c9be7,al
  4073f6:	xor    ah,BYTE PTR [edx-0x12]
  4073f9:	das    
  4073fa:	or     DWORD PTR [esi+0x5c23a526],edx
  407400:	pop    esp
  407401:	leave  
  407402:	ds in  eax,dx
  407404:	int3   
  407405:	ins    BYTE PTR es:[edi],dx
  407406:	test   ecx,ebx
  407408:	aas    
  407409:	shr    DWORD PTR ds:0x52ac3e54,cl
  40740f:	push   0x8d098aad
  407414:	push   ss
  407415:	inc    edx
  407416:	jne    0x4073be
  407418:	imul   edi,edx,0x38
  40741b:	in     al,dx
  40741c:	hlt    
  40741d:	push   ds
  40741e:	daa    
  40741f:	mov    edi,0xf7147a70
  407424:	dec    edx
  407425:	push   0x7d
  407427:	xor    ebp,DWORD PTR [esi-0x3b539bb3]
  40742d:	bound  edi,QWORD PTR [edi-0x3cc505f8]
  407433:	push   ebx
  407434:	or     DWORD PTR [esi+0x49],esi
  407437:	enter  0x1ed5,0xfd
  40743b:	xchg   edx,eax
  40743c:	pop    edx
  40743d:	pop    ecx
  40743e:	mov    DWORD PTR [ebx-0x46],0xd342addb
  407445:	xor    DWORD PTR [eax+edx*4+0x17],ebx
  407449:	dec    ebx
  40744a:	jns    0x40741c
  40744c:	int    0x69
  40744e:	call   0x956d:0x88814731
  407455:	std    
  407456:	enter  0xa2ae,0x8
  40745a:	shr    DWORD PTR [edi-0x20],cl
  40745d:	sub    BYTE PTR [ebx],bl
  40745f:	dec    ebp
  407460:	inc    eax
  407461:	xor    esp,DWORD PTR [ebx]
  407463:	cmp    eax,0x6d6b2389
  407468:	test   esi,edi
  40746a:	dec    ebx
  40746b:	jno    0x40745a
  40746d:	sbb    eax,0x4f53c0d3
  407472:	add    eax,0x221a62b4
  407477:	cmp    bh,0xa
  40747a:	pushf  
  40747b:	popf   
  40747c:	das    
  40747d:	(bad)  
  40747e:	and    dh,BYTE PTR [edi+eax*4-0x635c1568]
  407485:	lods   al,BYTE PTR ds:[esi]
  407486:	xor    DWORD PTR [ebx-0x1252ce4e],eax
  40748c:	mov    eax,0x621ddc7c
  407491:	into   
  407492:	ja     0x407456
  407494:	sbb    DWORD PTR [esp+esi*2],0xffffffb0
  407498:	(bad)  [edi]
  40749a:	sahf   
  40749b:	adc    dl,BYTE PTR [edi]
  40749d:	add    DWORD PTR [edx],eax
  40749f:	mov    cl,0xa4
  4074a1:	fbstp  TBYTE PTR [ecx]
  4074a3:	add    al,0x26
  4074a5:	xchg   ecx,eax
  4074a6:	and    DWORD PTR [esi-0x1d],0x7b7e8a54
  4074ad:	mov    gs,esi
  4074af:	and    ebp,DWORD PTR [ecx]
  4074b1:	jo     0x4074f1
  4074b3:	les    edi,FWORD PTR [esi-0x55ab8eea]
  4074b9:	mov    eax,ds:0xe180c0ff
  4074be:	and    ecx,DWORD PTR [ebx-0x80]
  4074c1:	mov    esp,DWORD PTR [ecx-0x13ee14c]
  4074c7:	mov    eax,0x8c594357
  4074cc:	shl    dl,cl
  4074ce:	enter  0x76e4,0x43
  4074d2:	add    eax,0x935656e4
  4074d7:	or     al,0x45
  4074d9:	sub    bh,BYTE PTR [ebx+0x16]
  4074dc:	mov    dl,0x6c
  4074de:	pop    ss
  4074df:	add    al,0x3d
  4074e1:	enter  0x9c01,0x1d
  4074e5:	int3   
  4074e6:	div    ch
  4074e8:	(bad)  
  4074e9:	mov    eax,ds:0x122ebbd8
  4074ee:	and    ch,BYTE PTR [ebx]
  4074f0:	mov    al,0x7f
  4074f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f3:	je     0x4074db
  4074f5:	lods   al,BYTE PTR ds:[esi]
  4074f6:	outs   dx,BYTE PTR ds:[esi]
  4074f7:	xchg   ecx,eax
  4074f8:	fs in  al,0x1a
  4074fb:	dec    ecx
  4074fc:	pushf  
  4074fd:	xor    BYTE PTR [esi+0x50],bl
  407500:	and    ch,BYTE PTR ds:0x7c29ae52
  407506:	rol    DWORD PTR [ecx-0x212b85a3],1
  40750c:	shl    DWORD PTR [esi-0x3f5c89d5],0x97
  407513:	jmp    0x4074bf
  407515:	or     al,0x85
  407517:	jnp    0x407574
  407519:	and    eax,DWORD PTR [ebp-0x63876bf5]
  40751f:	mov    dl,0x7d
  407521:	jp     0x4074e9
  407523:	int    0x8a
  407525:	jg     0x407578
  407527:	add    eax,0xd4530d23
  40752c:	jg     0x407572
  40752e:	xchg   esp,eax
  40752f:	ss or  eax,0x7797a21d
  407535:	cmp    al,0x9a
  407537:	outs   dx,BYTE PTR ds:[esi]
  407538:	jmp    0xa3cf:0x87cf2317
  40753f:	mov    esp,0xc50ae970
  407544:	outs   dx,BYTE PTR ds:[esi]
  407545:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  407547:	pop    ecx
  407548:	mov    ch,0xd2
  40754a:	push   edx
  40754b:	mov    bl,0x27
  40754d:	sbb    al,0xbb
  40754f:	ficom  WORD PTR [ebx+0x4e7574c4]
  407555:	xchg   edx,eax
  407556:	retf   0xf82b
  407559:	xchg   ebx,eax
  40755a:	lock ret 
  40755c:	inc    edi
  40755d:	stos   BYTE PTR es:[edi],al
  40755e:	test   al,0x14
  407560:	push   ebp
  407561:	in     al,dx
  407562:	call   0xaab96f8e
  407567:	jbe    0x407585
  407569:	(bad)  
  40756a:	ror    BYTE PTR [ebx],cl
  40756c:	jns    0x407595
  40756e:	add    ch,BYTE PTR [esp+esi*4+0x1f060cf2]
  407575:	sub    DWORD PTR [eax-0x14],0x68d16b5c
  40757c:	xlat   BYTE PTR ds:[ebx]
  40757d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40757e:	push   ebx
  40757f:	fsub   st(4),st
  407581:	fucomi st,st(5)
  407583:	dec    esi
  407584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407585:	ins    BYTE PTR es:[edi],dx
  407586:	sbb    eax,0x84fd28b8
  40758b:	lock inc edi
  40758d:	(bad)  
  40758e:	fist   WORD PTR [ebx+0x19de9742]
  407594:	sti    
  407595:	cli    
  407596:	pop    ecx
  407597:	rcl    DWORD PTR [edi+0x74],cl
  40759a:	ja     0x40755b
  40759c:	mov    WORD PTR [esi+0x1bce7dab],0x2401
  4075a5:	stc    
  4075a6:	cs call 0x668:0xc35a8ff6
  4075ae:	repz and DWORD PTR [eax-0x44],ebx
  4075b2:	add    BYTE PTR [edi],ah
  4075b4:	repnz xor eax,0xb5e73256
  4075ba:	cmp    BYTE PTR [eax-0x51],cl
  4075bd:	jmp    0x40763b
  4075bf:	lds    esp,FWORD PTR [edi+0x7f6c61c8]
  4075c5:	ja     0x4075df
  4075c7:	icebp  
  4075c8:	add    esp,edi
  4075ca:	nop
  4075cb:	add    eax,0xaecf09b1
  4075d0:	push   ds
  4075d1:	jmp    DWORD PTR [edi]
  4075d3:	arpl   WORD PTR [ebp-0x7e6bd58c],cx
  4075d9:	dec    si
  4075db:	dec    esp
  4075dc:	add    eax,0xbed134c9
  4075e1:	ret    
  4075e2:	push   edx
  4075e3:	out    dx,eax
  4075e4:	jns    0x4075cb
  4075e6:	xor    DWORD PTR [edi-0x36],esi
  4075e9:	dec    edx
  4075ea:	in     al,dx
  4075eb:	rcr    DWORD PTR [eax],0xfe
  4075ee:	and    bh,BYTE PTR [ecx+0x65]
  4075f1:	ror    DWORD PTR [edx+0x1b1d1733],cl
  4075f7:	jp     0x4075b7
  4075f9:	push   0xffffffa8
  4075fb:	stos   DWORD PTR es:[edi],eax
  4075fc:	(bad)  
  4075fd:	pop    ecx
  4075fe:	jo     0x407614
  407600:	or     eax,0x64
  407603:	mov    WORD PTR [ebx],ds
  407605:	adc    eax,ebx
  407607:	les    eax,FWORD PTR [esi]
  407609:	add    DWORD PTR [ecx-0x53],ebx
  40760c:	add    al,0x6e
  40760f:	push   esi
  407610:	test   al,0xca
  407612:	(bad)  
  407613:	mov    ebp,0xb6afa9b0
  407618:	jp     0x4075aa
  40761a:	inc    eax
  40761b:	cmp    eax,0xd357fd3b
  407620:	xchg   ebp,eax
  407621:	outs   dx,DWORD PTR ds:[esi]
  407622:	mov    ch,0x45
  407624:	add    edx,DWORD PTR [eax-0x4]
  407627:	pop    edx
  407628:	into   
  407629:	fidivr WORD PTR ds:[eax-0x19]
  40762d:	aas    
  40762e:	and    DWORD PTR [ebp-0x263f3a65],eax
  407634:	retf   0x4d10
  407637:	cs and eax,0x3016b8f2
  40763d:	pop    edx
  40763e:	or     DWORD PTR [eax],ebx
  407640:	cmp    eax,0xdd65dbec
  407645:	xchg   edx,eax
  407646:	add    esi,ebx
  407648:	cwde   
  407649:	add    DWORD PTR [esi],0xb1865b0a
  40764f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407650:	lods   eax,DWORD PTR ds:[esi]
  407651:	pop    ecx
  407652:	jg     0x40766c
  407654:	nop
  407655:	add    DWORD PTR [ecx],edx
  407657:	test   BYTE PTR [esi+0x607c1072],bh
  40765d:	jo     0x4076b5
  40765f:	call   0x91d59edd
  407664:	scas   eax,DWORD PTR es:[edi]
  407665:	xor    DWORD PTR [eax+0x66b2d9d7],0x5d
  40766c:	mov    ah,0xe
  40766e:	pushf  
  40766f:	je     0x407668
  407671:	xchg   edx,eax
  407672:	jmp    0x8b49:0x33644bde
  407679:	(bad)  
  40767a:	adc    eax,0x4bc3a469
  40767f:	repnz mov ebx,edi
  407682:	(bad)  
  407683:	sub    al,0x37
  407685:	lea    edi,[ebp-0x5c]
  407688:	mov    ebx,0xd08e8521
  40768d:	fstp   TBYTE PTR [eax+0x3c01c729]
  407693:	(bad)  [edx+edx*1]
  407696:	ins    BYTE PTR es:[edi],dx
  407697:	fwait
  407698:	adc    DWORD PTR [eax-0x7dbeb1cb],esi
  40769e:	mov    ebp,0xa887c941
  4076a3:	repnz leavew 
  4076a6:	(bad)  
  4076a7:	dec    ebx
  4076a8:	push   ecx
  4076a9:	les    edi,FWORD PTR [edx]
  4076ab:	mov    ds:0x70b77aac,al
  4076b0:	fcmovu st,st(6)
  4076b2:	dec    eax
  4076b3:	repz mov bh,0x1f
  4076b6:	dec    ebx
  4076b7:	fisub  DWORD PTR [edi+0x37]
  4076ba:	inc    ebx
  4076bb:	fadd   DWORD PTR [ebx+0x33decc5d]
  4076c1:	jecxz  0x4076d8
  4076c3:	and    eax,0x1fca6148
  4076c8:	ret    0xc918
  4076cb:	inc    ebp
  4076cc:	inc    edi
  4076cd:	cmp    eax,0xc7cc0db6
  4076d2:	cmp    esp,DWORD PTR [eax-0x2da2e3a6]
  4076d8:	outs   dx,DWORD PTR ds:[esi]
  4076d9:	paddusb mm3,QWORD PTR [edi+0x55]
  4076dd:	push   ebp
  4076de:	imul   ebp,eax,0xb7ff01c7
  4076e4:	leave  
  4076e5:	pop    ss
  4076e6:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4076e8:	imul   ebp,ebx,0x3f55b5fe
  4076ee:	out    0xb7,eax
  4076f0:	pop    ebx
  4076f1:	push   ebx
  4076f2:	add    eax,0xcd195935
  4076f7:	push   esp
  4076f8:	sub    al,0xec
  4076fa:	mov    esi,0xf1fb1938
  4076ff:	mov    ecx,0x8935c1d
  407704:	inc    ebp
  407705:	(bad)  
  407706:	test   eax,0xf74a8f42
  40770b:	pop    ebp
  40770c:	shl    DWORD PTR [eax],0xd5
  40770f:	pop    edx
  407710:	dec    edi
  407711:	ror    esp,1
  407713:	xchg   esp,eax
  407714:	imul   esi,DWORD PTR [eax-0x5cfb7c2f],0xffffffae
  40771b:	in     eax,dx
  40771c:	shl    BYTE PTR ds:0x75abf2b9,0x6
  407723:	es gs std 
  407726:	xchg   ebx,eax
  407727:	cs test eax,0xfe1613f
  40772d:	jle    0x407782
  40772f:	cdq    
  407730:	test   BYTE PTR [edx+0x53],0x23
  407734:	add    al,0x91
  407736:	push   0xb22edf58
  40773b:	in     eax,0x99
  40773d:	inc    ebp
  40773e:	add    BYTE PTR fs:[edx+0x74],dh
  407742:	mov    ds:0x3e89477b,eax
  407747:	mov    WORD PTR [ebx-0x22],?
  40774a:	pop    ebx
  40774b:	adc    eax,0xe10ad1eb
  407750:	not    esp
  407752:	daa    
  407753:	pop    ebx
  407754:	add    bh,BYTE PTR [eax+0x55]
  407757:	scas   eax,DWORD PTR es:[edi]
  407758:	inc    edi
  407759:	arpl   WORD PTR [eax],dx
  40775b:	xor    dl,ch
  40775d:	pop    ebp
  40775e:	sub    al,0xd6
  407760:	jb     0x407754
  407762:	push   ebx
  407763:	icebp  
  407764:	and    ah,bh
  407766:	cwde   
  407767:	mov    al,ds:0x82688366
  40776c:	xlat   BYTE PTR ds:[ebx]
  40776d:	jb     0x40778e
  40776f:	pop    ebp
  407770:	pop    ss
  407771:	ins    DWORD PTR es:[edi],dx
  407772:	inc    esp
  407773:	retf   0xf383
  407776:	add    al,BYTE PTR [ecx+0x386d1edb]
  40777c:	lock std 
  40777e:	mov    ebx,0xfdc4f703
  407783:	ja     0x407781
  407785:	jbe    0x4077ca
  407787:	repnz out dx,eax
  407789:	push   ds
  40778a:	cmp    al,bl
  40778c:	xchg   ebp,eax
  40778d:	push   0x34e6ee38
  407792:	xchg   edx,eax
  407793:	xchg   ebx,eax
  407794:	push   ds
  407795:	test   BYTE PTR [ecx+0x6],dh
  407798:	out    dx,eax
  407799:	push   0x6c768dba
  40779e:	inc    edi
  40779f:	adc    esp,DWORD PTR [ebx+0x72a65a46]
  4077a5:	js     0x407741
  4077a7:	sub    eax,0xced60f46
  4077ac:	ins    DWORD PTR es:[edi],dx
  4077ad:	jns    0x407790
  4077af:	loope  0x40782f
  4077b1:	mov    ch,0xc1
  4077b3:	iret   
  4077b4:	mov    ds:0x91e381c6,eax
  4077b9:	repz int3 
  4077bb:	mov    bh,0x3e
  4077bd:	dec    ebx
  4077be:	push   ebx
  4077bf:	into   
  4077c0:	mov    ebx,0xcb60b9aa
  4077c5:	xchg   edi,eax
  4077c6:	(bad)  
  4077c8:	pop    ds
  4077c9:	dec    esi
  4077ca:	out    dx,eax
  4077cb:	mov    ecx,0xf6b4ef93
  4077d0:	(bad)  
  4077d1:	(bad)  
  4077d3:	push   edi
  4077d4:	mov    bh,0x18
  4077d6:	pop    ebp
  4077d7:	call   0xbde26d1d
  4077dc:	cli    
  4077dd:	aam    0x54
  4077df:	or     al,0xb2
  4077e1:	adc    eax,0x68977da
  4077e6:	lock xchg ecx,eax
  4077e8:	scas   al,BYTE PTR es:[edi]
  4077e9:	icebp  
  4077ea:	aad    0x86
  4077ec:	outs   dx,BYTE PTR ds:[esi]
  4077ed:	(bad)  
  4077ee:	pop    ecx
  4077ef:	mov    al,ds:0x93f5e13f
  4077f4:	int3   
  4077f5:	jno    0x407796
  4077f7:	aas    
  4077f8:	int    0x35
  4077fa:	sbb    bh,ch
  4077fc:	mov    ecx,0x1103b88e
  407801:	inc    edx
  407802:	sbb    BYTE PTR [edx+ecx*4+0x236668aa],0xe8
  40780a:	sbb    eax,DWORD PTR [eax-0xa71de86]
  407810:	push   ebp
  407811:	hlt    
  407812:	mov    ds:0x907bba20,eax
  407817:	enter  0x25b,0x95
  40781b:	xlat   BYTE PTR ds:[ebx]
  40781c:	mov    DWORD PTR [ebp-0x42],ebp
  40781f:	mov    edi,0x1adebd45
  407824:	ds int3 
  407826:	daa    
  407827:	jb     0x4077f1
  407829:	daa    
  40782a:	repz inc eax
  40782c:	mov    ecx,0x7e20c67a
  407831:	push   ebx
  407832:	adc    al,dl
  407834:	lds    esp,FWORD PTR [edi-0x77]
  407837:	mov    eax,0x71106159
  40783c:	adc    DWORD PTR [eax-0x4d65798e],esi
  407842:	aam    0x2f
  407844:	adc    DWORD PTR [esp+edx*4-0x853d9a8],0xffffffdd
  40784c:	retf   
  40784d:	xchg   edi,eax
  40784e:	adc    eax,0x5be32908
  407853:	push   edi
  407854:	add    ebp,DWORD PTR [edi-0x7cc646ea]
  40785a:	les    ebx,FWORD PTR [eax-0x3d]
  40785d:	and    al,0x1f
  40785f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407860:	outs   dx,DWORD PTR ds:[esi]
  407861:	mov    BYTE PTR [edi+0x43],cl
  407864:	xor    DWORD PTR [edx],0xffffff93
  407867:	mul    BYTE PTR [edx+ecx*1+0x1]
  40786b:	xchg   ebx,esp
  40786d:	xchg   ebx,eax
  40786e:	push   0xabf23ea1
  407873:	cmc    
  407874:	out    dx,eax
  407875:	sub    edi,ecx
  407877:	inc    ebx
  407878:	jg     0x40789b
  40787a:	mov    dl,0xad
  40787c:	xlat   BYTE PTR ds:[ebx]
  40787d:	xchg   edx,eax
  40787e:	lock sbb al,0x75
  407881:	das    
  407882:	int    0x70
  407884:	xor    DWORD PTR [ebp+0x4123bb6d],edx
  40788a:	push   es
  40788b:	call   0x20cb:0x4c1d6354
  407892:	jecxz  0x40784a
  407894:	pop    edx
  407895:	dec    ebp
  407896:	outs   dx,DWORD PTR ds:[esi]
  407897:	pop    es
  407898:	cmp    eax,0x2a8e9efc
  40789d:	ja     0x407837
  40789f:	test   eax,0xee7eb047
  4078a4:	pop    esi
  4078a5:	sub    al,0x2e
  4078a7:	or     edi,DWORD PTR [eax+0x45]
  4078aa:	pop    edi
  4078ab:	inc    eax
  4078ac:	retf   0xfe9d
  4078af:	imul   esp,DWORD PTR [esi-0x46e7de9d],0xffffffc4
  4078b6:	fcomip st,st(1)
  4078b8:	jg     0x4078e4
  4078ba:	push   ecx
  4078bb:	(bad)
  4078bf:	addr16 shl cl,cl
  4078c2:	test   eax,0x7838547a
  4078c7:	adc    BYTE PTR [ecx+0xe],bl
  4078ca:	ds in  eax,dx
  4078cc:	in     al,dx
  4078cd:	dec    ecx
  4078ce:	sar    DWORD PTR [ebx+esi*1],1
  4078d1:	dec    ebp
  4078d2:	fmul   st,st(1)
  4078d4:	nop    DWORD PTR [ebp-0x10e982e4]
  4078db:	mov    cl,0x98
  4078dd:	xor    edx,eax
  4078df:	popa   
  4078e0:	jl     0x4078d7
  4078e2:	cmp    DWORD PTR [ebx+0x1288235a],ebx
  4078e8:	mov    ch,0x1b
  4078ea:	push   ebp
  4078eb:	pop    ss
  4078ec:	add    DWORD PTR [edi+ecx*8-0x5f],0x4f37ed3f
  4078f4:	shr    DWORD PTR [edi+0x39],cl
  4078f7:	pop    ecx
  4078f8:	inc    edi
  4078f9:	sbb    BYTE PTR [ebp-0x61],0xb2
  4078fd:	dec    ebp
  4078fe:	mov    al,ds:0xef4de39f
  407903:	icebp  
  407904:	push   0xffffff9a
  407906:	xchg   BYTE PTR [eax-0x1b82113],bl
  40790c:	mov    edi,0xf56f76a4
  407911:	jns    0x4078a5
  407913:	jnp    0x4078bb
  407915:	ror    BYTE PTR [ebx+0x30367a90],cl
  40791b:	pop    ds
  40791c:	or     dh,BYTE PTR [ecx]
  40791e:	or     ch,BYTE PTR [ecx+ebp*1-0x74f975aa]
  407925:	mov    ?,WORD PTR [edi]
  407927:	push   0xc4ac2eea
  40792c:	jnp    0x4078c8
  40792e:	push   ebp
  40792f:	data16 mov al,ds:0x54fab3b7
  407935:	adc    eax,0x84d3bb43
  40793a:	sub    al,0xc2
  40793c:	jl     0x40799f
  40793e:	jmp    0x4079b6
  407940:	repnz xchg esi,eax
  407942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407943:	push   esp
  407944:	push   ss
  407945:	aad    0x33
  407947:	jo     0x40796b
  407949:	sub    esi,DWORD PTR [ebx+0x7e]
  40794c:	xchg   esp,eax
  40794d:	add    al,0x3d
  40794f:	daa    
  407950:	cmp    al,0xc9
  407952:	in     al,0x2e
  407954:	inc    esi
  407955:	adc    BYTE PTR [edx-0x5e4a5f00],ah
  40795b:	push   ecx
  40795c:	cs jp  0x40796c
  40795f:	mov    bl,0xff
  407961:	pop    ds
  407962:	int3   
  407963:	dec    edi
  407964:	adc    DWORD PTR [edi-0x71],ebx
  407967:	cmp    ebx,DWORD PTR [ecx-0x1f28b5a2]
  40796d:	jne    0x4078fa
  40796f:	xor    eax,0x29ebe916
  407974:	fidivr DWORD PTR [ebx-0x72b39750]
  40797a:	icebp  
  40797b:	mov    WORD PTR [ecx-0x644c124b],es
  407981:	sbb    dl,BYTE PTR [eax-0x50]
  407984:	and    BYTE PTR [ecx+0x2711b2df],0xd4
  40798b:	int3   
  40798c:	test   BYTE PTR [eax-0x413f2012],dl
  407992:	xor    eax,DWORD PTR [edx+edx*4-0xb]
  407996:	jle    0x407932
  407998:	lods   eax,DWORD PTR ds:[esi]
  407999:	je     0x407994
  40799b:	sub    DWORD PTR [esi-0x6feed5d1],esi
  4079a1:	jmp    0x6bf8:0x9c0b6b10
  4079a8:	push   0x4c99ae9a
  4079ad:	mov    edx,0x904879bf
  4079b2:	cmp    dh,ch
  4079b4:	jbe    0x40793a
  4079b6:	or     al,0xea
  4079b8:	dec    ecx
  4079b9:	mov    ds:0x289d3481,eax
  4079be:	inc    edi
  4079bf:	fnstcw WORD PTR [ebp-0x1a]
  4079c2:	push   es
  4079c3:	pop    esp
  4079c4:	xchg   ebx,eax
  4079c5:	js     0x407974
  4079c7:	mov    edx,0x885f6141
  4079cc:	xchg   edi,eax
  4079cd:	ret    0x6953
  4079d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079d1:	mov    esp,0x12617cb0
  4079d6:	(bad)  
  4079d9:	dec    edx
  4079da:	jmp    0xcbe2efa0
  4079df:	rol    ah,1
  4079e1:	inc    ebx
  4079e2:	(bad)
  4079e5:	pushf  
  4079e6:	fwait
  4079e7:	repnz (bad) 
  4079e9:	dec    eax
  4079ea:	in     eax,0xcd
  4079ec:	retf   
  4079ed:	sti    
  4079ee:	inc    edi
  4079ef:	mov    al,0xb1
  4079f1:	xchg   DWORD PTR [ebp+ecx*1+0x747079e1],edx
  4079f8:	or     cl,BYTE PTR [ecx-0x492bf6bc]
  4079fe:	inc    esp
  4079ff:	xchg   DWORD PTR [esi+0x2],eax
  407a02:	sbb    eax,0xcd12c533
  407a07:	push   esi
  407a08:	fld    QWORD PTR [edi+0x6e]
  407a0b:	cwde   
  407a0c:	sub    al,0x1
  407a0e:	lea    eax,[ebx+esi*8+0x75]
  407a12:	call   0x770b:0x9acc0c72
  407a19:	add    BYTE PTR [edi],al
  407a1b:	ja     0x407a71
  407a1d:	mov    eax,0x4bf9cc4a
  407a22:	data16 cmp al,0xeb
  407a25:	push   ds
  407a26:	mov    al,ds:0x8aefa420
  407a2b:	or     DWORD PTR [esi-0x878f3b8],0x4f725c30
  407a35:	ins    BYTE PTR es:[edi],dx
  407a36:	sar    DWORD PTR [ebx],1
  407a38:	not    al
  407a3a:	sbb    eax,0x761c7af
  407a3f:	rcr    BYTE PTR [ecx-0x37b27f47],0x9b
  407a46:	imul   esi,DWORD PTR [eax],0xffffffbc
  407a49:	scas   eax,DWORD PTR es:[edi]
  407a4a:	sub    edi,DWORD PTR [esi]
  407a4c:	bound  esi,QWORD PTR [ebx-0x214d0a3e]
  407a52:	adc    al,0xa5
  407a54:	leave  
  407a55:	inc    ebx
  407a56:	push   eax
  407a57:	and    BYTE PTR [ebp-0x40],al
  407a5a:	pop    ebx
  407a5b:	sbb    bh,BYTE PTR [edx-0x74f50a04]
  407a61:	lock mov esp,0x39aa5dc4
  407a67:	(bad)  
  407a68:	cmp    ch,bh
  407a6a:	cmp    al,bl
  407a6c:	in     al,0xf2
  407a6e:	mov    eax,0xa7b7354c
  407a73:	pop    esi
  407a74:	mov    bl,0xd4
  407a76:	push   eax
  407a77:	push   ebp
  407a78:	mov    WORD PTR [ebp-0x46a60797],cs
  407a7e:	leave  
  407a7f:	lahf   
  407a80:	aam    0xa8
  407a82:	ds xchg edx,eax
  407a84:	and    ebp,esp
  407a86:	push   edx
  407a87:	cs out 0xe3,eax
  407a8a:	jns    0x407af3
  407a8c:	dec    ecx
  407a8d:	push   esp
  407a8e:	and    ebp,DWORD PTR [eax+eiz*8+0x7f]
  407a92:	sar    ebp,cl
  407a94:	cwde   
  407a95:	call   0x5de01911
  407a9a:	xchg   edx,eax
  407a9b:	ins    BYTE PTR es:[edi],dx
  407a9c:	pop    eax
  407a9d:	dec    esi
  407a9e:	in     al,dx
  407a9f:	sub    DWORD PTR [ecx+0x43],ecx
  407aa2:	xchg   ebx,eax
  407aa3:	inc    eax
  407aa4:	push   ebx
  407aa5:	and    edx,eax
  407aa7:	mov    ah,0x1a
  407aa9:	arpl   di,sp
  407aab:	lea    edi,[ecx+0x47]
  407aae:	pop    esi
  407aaf:	sbb    DWORD PTR [ebx-0x150d537e],esp
  407ab5:	add    ebx,edi
  407ab7:	mov    ds:0xcdc98832,eax
  407abc:	mov    cl,0x8b
  407abe:	(bad)  
  407abf:	ficomp WORD PTR [ecx+0x17]
  407ac2:	ds in  eax,0x2f
  407ac5:	loopne 0x407aba
  407ac7:	aaa    
  407ac8:	(bad)  
  407ac9:	xchg   ecx,eax
  407aca:	int    0xed
  407acc:	ss call 0xc6e5:0x86172312
  407ad4:	scas   eax,DWORD PTR es:[edi]
  407ad5:	jno    0x407b54
  407ad7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad9:	retf   0xd410
  407adc:	xlat   BYTE PTR ds:[ebx]
  407add:	add    ebp,ecx
  407adf:	out    dx,al
  407ae0:	stc    
  407ae1:	stos   DWORD PTR es:[edi],eax
  407ae2:	stc    
  407ae3:	xchg   ecx,eax
  407ae4:	xchg   edx,eax
  407ae5:	sbb    al,0xaa
  407ae7:	xor    al,0xc8
  407ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407aea:	mov    ecx,0xf91d166a
  407aef:	stc    
  407af0:	push   cs
  407af1:	cmp    eax,0x5f10cd33
  407af6:	jae    0x407adb
  407af8:	cs and esp,ebp
  407afb:	xlat   BYTE PTR ds:[ebx]
  407afc:	inc    ebp
  407afd:	or     ebx,0x43
  407b00:	retf   
  407b01:	rcl    ecx,0xe5
  407b04:	fcmovne st,st(4)
  407b06:	ins    BYTE PTR es:[edi],dx
  407b07:	aam    0x22
  407b09:	popa   
  407b0a:	fstp   QWORD PTR [eax]
  407b0c:	add    al,BYTE PTR [eax+eiz*8-0x56]
  407b10:	in     al,0xfb
  407b12:	stos   BYTE PTR es:[edi],al
  407b13:	arpl   WORD PTR [edx-0xc156812],sp
  407b19:	push   ebp
  407b1a:	jg     0x407b30
  407b1c:	jns    0x407aa6
  407b1e:	sub    ecx,DWORD PTR [ecx-0x45cfc46f]
  407b24:	int    0xfa
  407b26:	clc    
  407b27:	fmul   DWORD PTR [ebp+0x47]
  407b2a:	xor    eax,0x6853d7e0
  407b2f:	out    dx,al
  407b30:	mov    ds:0xa32dfcdc,eax
  407b35:	jae    0x407afa
  407b37:	cmc    
  407b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b39:	cdq    
  407b3a:	mov    ebx,0xc6c54b81
  407b3f:	and    bh,BYTE PTR [ebp-0x33]
  407b42:	pusha  
  407b43:	ja     0x407b30
  407b45:	push   edi
  407b46:	inc    ebx
  407b47:	sbb    DWORD PTR es:[ecx],esi
  407b4a:	inc    ebp
  407b4b:	sbb    al,0xd0
  407b4d:	iret   
  407b4e:	lds    eax,FWORD PTR [eax+edx*2+0x7f1bd861]
  407b55:	clc    
  407b56:	or     eax,0x2609be47
  407b5b:	shl    BYTE PTR [ecx-0x1],0x25
  407b5f:	push   esi
  407b60:	orps   xmm5,XMMWORD PTR [edx+0x4a4f658b]
  407b67:	scas   al,BYTE PTR es:[edi]
  407b68:	jecxz  0x407b9d
  407b6a:	inc    ebp
  407b6b:	in     al,0x46
  407b6d:	mov    esp,0xc055a2fc
  407b72:	or     BYTE PTR [ecx],0x3a
  407b75:	jo     0x407b5e
  407b77:	xchg   ebx,eax
  407b78:	out    dx,eax
  407b79:	mov    dl,0x11
  407b7b:	in     eax,dx
  407b7c:	cwde   
  407b7d:	mov    dl,0xb4
  407b7f:	and    BYTE PTR [edx+0x6d],ah
  407b82:	stos   DWORD PTR es:[edi],eax
  407b83:	pop    es
  407b84:	adc    eax,0xa6e18e90
  407b89:	out    0xa8,eax
  407b8b:	rol    BYTE PTR [edi+esi*4],1
  407b8e:	stc    
  407b8f:	aas    
  407b90:	push   esi
  407b91:	push   edx
  407b92:	inc    eax
  407b93:	ret    
  407b94:	mov    BYTE PTR [ecx],0xb6
  407b97:	enter  0x5e94,0xc8
  407b9b:	retf   
  407b9c:	and    esi,edi
  407b9e:	xlat   BYTE PTR ds:[ebx]
  407b9f:	clc    
  407ba0:	sub    dh,BYTE PTR [ecx]
  407ba2:	push   esp
  407ba3:	push   es
  407ba4:	adc    dh,BYTE PTR [eax+0x7da0f2e2]
  407baa:	xchg   esp,eax
  407bab:	pushf  
  407bac:	pop    esi
  407bad:	ret    
  407bae:	inc    ecx
  407baf:	xchg   ebp,eax
  407bb0:	mov    ebp,0x361835b5
  407bb5:	into   
  407bb6:	inc    ebx
  407bb7:	call   0x8ae0209c
  407bbc:	sbb    DWORD PTR [ebp-0x4f8f0fc1],esi
  407bc2:	adc    eax,0xd69d5215
  407bc7:	lods   al,BYTE PTR ds:[esi]
  407bc8:	adc    al,0x8a
  407bca:	sbb    BYTE PTR [eax-0x6e2c3ee6],bl
  407bd0:	fstp   st(6)
  407bd2:	inc    BYTE PTR [edi-0x4c]
  407bd5:	or     BYTE PTR [ecx+ebx*8],bl
  407bd8:	hlt    
  407bd9:	mov    ah,0xe9
  407bdb:	adc    cl,BYTE PTR [esi+0x19]
  407bde:	sub    DWORD PTR es:[edi+0x561ff44b],0x1b2c54e0
  407be9:	pop    edi
  407beb:	cli    
  407bec:	or     dh,BYTE PTR [ebx+0x4539d1b]
  407bf2:	dec    ebx
  407bf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bf4:	xchg   edi,ebx
  407bf6:	enter  0xf7a5,0x6b
  407bfa:	add    al,bh
  407bfc:	ja     0x407b99
  407bfe:	test   eax,0xf7a38efd
  407c03:	sub    DWORD PTR [ebx-0x3a],ebp
  407c06:	in     eax,dx
  407c07:	mov    al,ds:0xfe9cae5a
  407c0c:	ins    BYTE PTR es:[edi],dx
  407c0d:	and    al,0x9a
  407c0f:	lahf   
  407c10:	ins    DWORD PTR es:[edi],dx
  407c11:	inc    eax
  407c13:	or     ebp,DWORD PTR [edx+0x29b72908]
  407c19:	xchg   edi,eax
  407c1a:	je     0x407c4a
  407c1c:	mov    ecx,DWORD PTR [eax-0x69]
  407c1f:	pusha  
  407c20:	mov    fs,edx
  407c22:	sbb    bl,ch
  407c24:	pop    ebx
  407c25:	adc    al,0x10
  407c27:	(bad)  
  407c28:	repnz adc al,ah
  407c2b:	sub    BYTE PTR [ebx],bh
  407c2d:	mov    bh,0x4d
  407c2f:	sti    
  407c30:	jnp    0x407bc7
  407c32:	mov    al,ds:0xbf5e0336
  407c37:	sub    esp,DWORD PTR [esi-0x5f]
  407c3a:	mov    edi,0x5d710da5
  407c3f:	jecxz  0x407c94
  407c41:	iret   
  407c42:	xlat   BYTE PTR ds:[ebx]
  407c43:	push   ebx
  407c44:	jno    0x407c91
  407c46:	mov    ah,BYTE PTR [ecx]
  407c48:	xor    eax,DWORD PTR [eax-0x7e21d686]
  407c4e:	lods   al,BYTE PTR ds:[esi]
  407c4f:	in     al,0x51
  407c51:	inc    esp
  407c52:	add    dl,cl
  407c54:	(bad)  
  407c55:	mov    dl,0x3b
  407c57:	push   eax
  407c58:	scas   eax,DWORD PTR es:[edi]
  407c59:	les    edi,FWORD PTR [ebx+0x7f6e8555]
  407c5f:	dec    eax
  407c60:	push   ebp
  407c61:	jno    0x407c0b
  407c63:	in     al,0x39
  407c65:	push   eax
  407c66:	dec    edi
  407c67:	adc    eax,0x22a8561b
  407c6c:	and    eax,0x4a28580
  407c71:	dec    esi
  407c72:	out    dx,al
  407c73:	xor    BYTE PTR [eax-0x13],ah
  407c76:	xlat   BYTE PTR ds:[ebx]
  407c77:	jnp    0x407c0f
  407c79:	cmp    eax,0xee5c2c9c
  407c7e:	inc    esp
  407c7f:	jno    0x407cd7
  407c81:	arpl   cx,cx
  407c83:	jmp    0x407c70
  407c85:	sar    al,1
  407c87:	sub    eax,DWORD PTR [ebx-0x164f4b12]
  407c8d:	cmp    DWORD PTR [edi],0xffffff9e
  407c90:	pop    esp
  407c91:	jp     0x407c47
  407c93:	jns    0x407d0d
  407c95:	pop    edi
  407c96:	data16 adc al,0x49
  407c99:	sub    al,BYTE PTR [ecx+ebp*4-0x80]
  407c9d:	daa    
  407c9e:	cmp    al,0x10
  407ca0:	les    ebp,FWORD PTR [edi+0x5b003e7a]
  407ca6:	(bad)  
  407ca7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ca9:	sbb    al,al
  407cab:	inc    ebp
  407cac:	adc    DWORD PTR [esi-0x42f84324],esp
  407cb2:	xor    BYTE PTR [ebx+0x69cff589],ah
  407cb8:	repz xchg ebx,eax
  407cba:	cmp    al,0xc4
  407cbc:	cmc    
  407cbd:	int    0xba
  407cbf:	outs   dx,DWORD PTR ds:[esi]
  407cc0:	mov    WORD PTR [esi+0x5d],ds
  407cc3:	ror    DWORD PTR [ebx],cl
  407cc5:	or     eax,0xc05ee75c
  407cca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ccb:	mov    ah,0xe8
  407ccd:	mov    bl,0xb1
  407ccf:	arpl   si,bp
  407cd1:	add    al,0xee
  407cd3:	mov    al,ds:0xf471b95f
  407cd8:	cld    
  407cd9:	sbb    DWORD PTR [edi-0x28],edx
  407cdc:	lds    edx,FWORD PTR [esi]
  407cde:	ja     0x407cb4
  407ce0:	mul    BYTE PTR [edx-0x29f536fe]
  407ce6:	xchg   ebp,eax
  407ce7:	ins    DWORD PTR es:[edi],dx
  407ce8:	cmp    DWORD PTR [ecx+edi*2+0x40],esi
  407cec:	mov    dh,0x7c
  407cee:	stc    
  407cef:	xor    al,0x12
  407cf1:	lahf   
  407cf2:	push   edx
  407cf3:	hlt    
  407cf4:	(bad)  
  407cf6:	or     dl,BYTE PTR [edx]
  407cf8:	ds xor ch,0xf3
  407cfc:	dec    ebp
  407cfd:	sti    
  407cfe:	scas   eax,DWORD PTR es:[edi]
  407cff:	mov    ecx,0x1518767d
  407d04:	mov    edi,0xa02f51d0
  407d09:	pop    ebp
  407d0a:	stos   DWORD PTR es:[edi],eax
  407d0b:	jl     0x407cc6
  407d0d:	nop
  407d0e:	and    DWORD PTR [esi+0x52],0xffffff91
  407d12:	inc    eax
  407d13:	pop    ebx
  407d14:	iret   
  407d15:	sbb    ebx,DWORD PTR [esi]
  407d17:	arpl   WORD PTR [edi+ebx*8+0xff336f0],sp
  407d1e:	mov    cl,0xb9
  407d20:	adc    BYTE PTR [eax+0xd],dl
  407d23:	mov    ebp,DWORD PTR [ebx+0x6e]
  407d26:	cmp    edi,DWORD PTR [esi+0x6e2d579f]
  407d2c:	nop
  407d2d:	shr    DWORD PTR [ebp-0x4b],cl
  407d30:	push   ebx
  407d31:	mov    edx,0x8e831e2c
  407d36:	adc    al,BYTE PTR [ecx]
  407d38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d39:	push   0xffffffb3
  407d3b:	sub    BYTE PTR [ecx],al
  407d3d:	scas   al,BYTE PTR es:[edi]
  407d3e:	push   edx
  407d3f:	add    eax,0x605450ea
  407d44:	rcl    BYTE PTR [eax+0x4df99f9f],1
  407d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d4b:	or     DWORD PTR [ecx],esp
  407d4d:	(bad)  
  407d4e:	mov    ah,0x68
  407d50:	jnp    0x407d2a
  407d52:	loopne 0x407d0b
  407d54:	dec    ebx
  407d55:	loop   0x407d2a
  407d57:	add    edi,eax
  407d59:	ror    ecx,1
  407d5b:	(bad)  
  407d5c:	shl    BYTE PTR [ebx-0x24],1
  407d5f:	aad    0xb0
  407d61:	push   ecx
  407d62:	xor    DWORD PTR [ecx+0x27],eax
  407d65:	adc    DWORD PTR [edx],ebp
  407d67:	nop
  407d68:	add    al,0xc4
  407d6a:	pop    esi
  407d6b:	les    ebx,FWORD PTR [edx-0x2ac2c3d9]
  407d71:	fdiv   DWORD PTR [ebx-0x60]
  407d74:	mov    esp,DWORD PTR [eax]
  407d76:	sbb    BYTE PTR [ecx+0x68a61bcf],0x4f
  407d7d:	and    eax,0x73e5a774
  407d82:	inc    edi
  407d83:	out    dx,al
  407d84:	int3   
  407d85:	mov    al,ds:0x72d49983
  407d8a:	icebp  
  407d8b:	fwait
  407d8c:	add    BYTE PTR [esi+0x6e],ch
  407d8f:	ja     0x407d1c
  407d91:	inc    edi
  407d92:	or     eax,0x70a67b6b
  407d97:	scas   al,BYTE PTR es:[edi]
  407d98:	cli    
  407d99:	mov    dl,0x38
  407d9b:	mov    bl,0x1d
  407d9d:	push   ebp
  407d9e:	add    eax,0x170fc926
  407da3:	xor    eax,0xc8255737
  407da8:	xchg   ecx,eax
  407da9:	into   
  407daa:	jmp    0x4289:0xb36de8dc
  407db1:	mov    ah,0x68
  407db3:	into   
  407db4:	push   0x6f
  407db6:	jl     0x407d45
  407db8:	mov    eax,0xc16cc6d2
  407dbd:	jg     0x407e00
  407dbf:	scas   al,BYTE PTR es:[edi]
  407dc0:	in     al,dx
  407dc1:	fild   DWORD PTR [eax]
  407dc3:	call   0xc61f:0xbe360116
  407dca:	push   ds
  407dcb:	cli    
  407dcc:	add    BYTE PTR [esi+0x54],ch
  407dcf:	mov    ebx,esp
  407dd1:	adc    eax,0x586a0605
  407dd6:	mov    ebx,DWORD PTR [edx+ebx*2-0x68056f8f]
  407ddd:	mov    al,ds:0x957e8aac
  407de2:	call   0xe656:0x902d9649
  407de9:	sbb    BYTE PTR [edx],0x71
  407dec:	call   0xe13947a
  407df1:	adc    al,0x1e
  407df3:	dec    ebx
  407df4:	rol    BYTE PTR [edi+0x3710a0f2],cl
  407dfa:	pop    edi
  407dfb:	dec    edi
  407dfc:	fnstcw WORD PTR [edx+esi*2-0x10]
  407e00:	xor    edx,edi
  407e02:	stos   BYTE PTR es:[edi],al
  407e03:	sahf   
  407e04:	in     al,dx
  407e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e06:	cwde   
  407e07:	pop    esi
  407e08:	ret    0x9c0f
  407e0b:	scas   al,BYTE PTR es:[edi]
  407e0c:	(bad)  
  407e0d:	dec    esi
  407e0e:	add    ecx,DWORD PTR [ebp-0x2899caea]
  407e14:	xlat   BYTE PTR ds:[ebx]
  407e15:	adc    dh,BYTE PTR [ecx+0x5d157c55]
  407e1b:	repz mov esi,0x4b703c7c
  407e21:	xchg   edi,eax
  407e22:	adc    cl,BYTE PTR [eax+0x4c3b3262]
  407e28:	fs rcl edx,0x6b
  407e2c:	adc    ebx,esp
  407e2e:	ds shr ecx,1
  407e31:	mov    ch,0x42
  407e33:	inc    ecx
  407e34:	mov    ds:0x456cf7c9,eax
  407e39:	mov    WORD PTR [esi+ebp*1+0x36],gs
  407e3d:	data16 adc BYTE PTR [esi],dl
  407e40:	add    al,BYTE PTR [edx-0x26]
  407e43:	adc    al,0x5e
  407e45:	fwait
  407e46:	xchg   ebx,eax
  407e47:	mov    ch,0x41
  407e49:	nop
  407e4a:	test   esi,edx
  407e4c:	sbb    bh,BYTE PTR [ebx+0x3c05007e]
  407e52:	mov    al,0x85
  407e54:	clc    
  407e55:	push   cs
  407e56:	iret   
  407e57:	pop    ecx
  407e58:	jns    0x407eb1
  407e5a:	push   esi
  407e5b:	mov    dh,0xa7
  407e5d:	or     al,0xc1
  407e5f:	add    eax,0x7f6eb392
  407e64:	mov    ss,WORD PTR [edx+0x3c0856f]
  407e6a:	and    al,0x8c
  407e6c:	js     0x407eda
  407e6e:	ins    BYTE PTR es:[edi],dx
  407e6f:	mov    dh,0x4c
  407e71:	out    0xef,eax
  407e73:	jo     0x407e28
  407e75:	mov    al,ds:0xdfc10e2f
  407e7a:	stos   BYTE PTR es:[edi],al
  407e7b:	jmp    0xbf96b9d3
  407e80:	push   0x76
  407e82:	stc    
  407e83:	xor    DWORD PTR [eax-0x33],eax
  407e86:	or     al,0x1e
  407e88:	jl     0x407ec1
  407e8a:	and    al,dh
  407e8c:	cdq    
  407e8d:	xor    al,BYTE PTR [edi+0x5f99258]
  407e93:	push   0x7d
  407e95:	xor    esp,DWORD PTR [eax]
  407e97:	pmullw mm1,mm6
  407e9a:	loope  0x407ec6
  407e9c:	mov    ch,bh
  407e9e:	jbe    0x407ea0
  407ea0:	xchg   esi,eax
  407ea1:	sub    al,0x4f
  407ea3:	scas   eax,DWORD PTR es:[edi]
  407ea4:	xor    al,0x19
  407ea6:	dec    esi
  407ea7:	or     DWORD PTR [ebx],edx
  407ea9:	jmp    0x407ea3
  407eab:	add    al,0x9a
  407ead:	dec    ecx
  407eaf:	pop    ebx
  407eb0:	bound  edx,QWORD PTR [ecx]
  407eb2:	xchg   esi,eax
  407eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb4:	(bad)  [edi+0x62]
  407eb7:	mov    edx,0x6d88b16b
  407ebc:	lds    ebx,FWORD PTR [eax]
  407ebe:	mov    ch,0x47
  407ec0:	xchg   ebp,eax
  407ec1:	(bad)  
  407ec2:	sti    
  407ec3:	cmp    eax,0xad601bae
  407ec8:	call   0x30d1cfa
  407ecd:	adc    BYTE PTR [edi+esi*1],0x1c
  407ed1:	add    ah,dl
  407ed3:	jno    0x407e77
  407ed5:	call   0x5fde:0x9570d775
  407edc:	les    ebx,FWORD PTR [esi]
  407ede:	push   ecx
  407edf:	mov    edx,0x11b5889d
  407ee4:	inc    esp
  407ee5:	mov    cl,0xe6
  407ee7:	pop    eax
  407ee8:	out    0x2a,eax
  407eea:	inc    edx
  407eeb:	neg    DWORD PTR [edi]
  407eed:	cmp    esi,DWORD PTR ds:0x34d1be9
  407ef3:	push   0x28
  407ef5:	aas    
  407ef6:	clc    
  407ef7:	test   al,0xd1
  407ef9:	dec    ebp
  407efa:	mov    ah,0x36
  407efc:	fistp  DWORD PTR [edi]
  407efe:	adc    al,0xd8
  407f00:	dec    eax
  407f01:	push   ds
  407f02:	icebp  
  407f03:	shl    BYTE PTR [eax+0x42c2c309],1
  407f09:	arpl   WORD PTR [edi-0x295b732d],sp
  407f0f:	xchg   DWORD PTR [ebp+0x72],esi
  407f12:	sahf   
  407f13:	fnstenv [ecx+0x59718ec5]
  407f19:	pop    ss
  407f1a:	jle    0x407f64
  407f1c:	sbb    al,0xdc
  407f1e:	les    edi,FWORD PTR [esi+0x6d7b849d]
  407f24:	inc    edi
  407f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f26:	push   esi
  407f27:	push   ebx
  407f28:	je     0x407f64
  407f2a:	jl     0x407ebb
  407f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f2d:	cmc    
  407f2e:	cmp    ah,BYTE PTR [ebp-0x4e7c97e4]
  407f34:	(bad)  
  407f35:	jne    0x407ef6
  407f37:	sub    eax,0xfd58dc62
  407f3c:	mov    ds:0x8730257f,eax
  407f41:	mov    edx,0x6841f7ac
  407f46:	sub    esi,ebp
  407f48:	add    al,0x6
  407f4a:	popf   
  407f4b:	(bad)  
  407f4c:	sub    al,0x22
  407f4e:	test   DWORD PTR [edi+0x1],ebp
  407f51:	inc    DWORD PTR [edi]
  407f53:	imul   ecx,DWORD PTR [edx],0xffffffdf
  407f56:	js     0x407f24
  407f58:	imul   esi,eax,0x8473111
  407f5e:	sub    ebx,esp
  407f60:	xor    DWORD PTR [ecx-0x7c46e46d],esi
  407f66:	xchg   edx,eax
  407f67:	cmp    dl,BYTE PTR [ebx+esi*8-0x69606d6d]
  407f6e:	dec    ebp
  407f6f:	or     ah,dl
  407f71:	adc    eax,0xfcdde6ca
  407f76:	bound  edi,QWORD PTR [ebp-0x7f05f7fd]
  407f7c:	inc    esp
  407f7d:	int    0x44
  407f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f80:	retf   
  407f81:	xchg   BYTE PTR [edi],al
  407f83:	in     eax,0xfb
  407f85:	mov    edx,DWORD PTR [edi-0x5b]
  407f88:	ret    0x7e60
  407f8b:	in     al,dx
  407f8c:	xchg   DWORD PTR [ecx-0x558f2372],edi
  407f92:	add    BYTE PTR [eiz*2-0x2836b444],bh
  407f99:	(bad)  
  407f9a:	sar    DWORD PTR [esi],1
  407f9c:	add    dh,bl
  407f9e:	jne    0x407fa2
  407fa0:	ret    
  407fa1:	inc    edx
  407fa2:	(bad)  
  407fa3:	and    esi,DWORD PTR [ebp+0x66]
  407fa6:	stc    
  407fa7:	mov    ecx,0xda3786c7
  407fac:	jb     0x407fea
  407fae:	lods   eax,DWORD PTR ds:[esi]
  407faf:	out    dx,al
  407fb0:	or     DWORD PTR [ebx],ecx
  407fb2:	cli    
  407fb3:	jo     0x407f8a
  407fb5:	xchg   edx,eax
  407fb6:	mov    bh,0x95
  407fb8:	xor    dl,BYTE PTR ds:0xef953842
  407fbe:	data16 fistp DWORD PTR [esi-0x7e]
  407fc2:	xchg   edx,eax
  407fc3:	pop    ds
  407fc4:	mov    edx,eax
  407fc6:	dec    ebp
  407fc7:	or     DWORD PTR [ebx-0x1b5b6a81],edi
  407fcd:	cmp    bh,BYTE PTR [ecx-0x38]
  407fd0:	leave  
  407fd1:	mov    ah,0x6e
  407fd3:	ret    
  407fd4:	lods   al,BYTE PTR ds:[esi]
  407fd5:	xchg   edi,eax
  407fd6:	call   0xa7f2:0xf022b00d
  407fdd:	dec    eax
  407fde:	mov    bl,0xfd
  407fe0:	mov    cl,0x50
  407fe2:	and    ebp,DWORD PTR [ecx+edi*2]
  407fe5:	pop    ebp
  407fe6:	cmp    eax,0xba789536
  407feb:	xchg   ecx,eax
  407fec:	pop    esp
  407fed:	push   0x5977c666
  407ff2:	jne    0x407fff
  407ff4:	aaa    
  407ff5:	xlat   BYTE PTR ds:[ebx]
  407ff6:	nop
  407ff7:	or     al,0x4b
  407ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ffa:	mov    ebp,0x7dbe2274
  407fff:	cvtps2pd xmm5,QWORD PTR [edi+0x6d36caa2]
  408006:	fisttp DWORD PTR [edx+0x5d]
  408009:	push   cs
  40800a:	vunpckhps ymm7,ymm6,ymm1
  40800e:	pop    edx
  40800f:	lock js 0x407fbd
  408012:	push   cs
  408013:	mov    BYTE PTR [edi+eax*8+0x6dfb4e4d],cl
  40801a:	sub    esp,DWORD PTR [edx+ebx*2+0x7f]
  40801e:	je     0x407fb5
  408020:	retf   0x4e40
  408023:	xor    edx,0xab319969
  408029:	pop    ds
  40802a:	or     eax,0xcc78fefd
  40802f:	in     eax,dx
  408030:	xor    edi,DWORD PTR [esi]
  408032:	jne    0x40801e
  408034:	scas   al,BYTE PTR es:[edi]
  408035:	push   ecx
  408036:	inc    esp
  408037:	out    dx,eax
  408038:	xchg   ebp,eax
  408039:	sbb    eax,0x3f409709
  40803e:	std    
  40803f:	mov    ebp,0x948c6905
  408044:	call   0xdedeb0d2
  408049:	xchg   DWORD PTR [eax-0x62],ebp
  40804c:	in     eax,0xfb
  40804e:	inc    ebp
  40804f:	int    0xc8
  408051:	and    cl,BYTE PTR [edi+0x40bd7fdf]
  408057:	sub    ebx,edx
  408059:	push   edi
  40805a:	xchg   esp,eax
  40805b:	ins    BYTE PTR es:[edi],dx
  40805c:	ja     0x408021
  40805e:	mov    esi,0xbc3554cb
  408063:	inc    edx
  408064:	adc    al,0xb9
  408066:	ins    DWORD PTR es:[edi],dx
  408067:	cli    
  408068:	idiv   cl
  40806a:	sub    DWORD PTR [edi+eiz*8-0x723bea4e],0xffffffe4
  408072:	fsubr  QWORD PTR ds:[eax]
  408075:	xchg   ebp,eax
  408076:	mov    WORD PTR [ecx-0x4f8f3256],?
  40807c:	xchg   BYTE PTR [ecx+edx*1+0x74],bl
  408080:	cmp    DWORD PTR [edx+0x28283a0f],0x5ec82a1
  40808a:	cmp    dh,al
  40808c:	inc    eax
  40808d:	xor    bl,BYTE PTR [ecx-0x2e]
  408090:	jbe    0x40802e
  408092:	dec    ebx
  408093:	push   eax
  408094:	sbb    edi,DWORD PTR [edx]
  408096:	idiv   ebx
  408098:	les    edi,FWORD PTR [eax-0x56e9a99e]
  40809e:	pop    esp
  40809f:	jge    0x40807b
  4080a1:	test   BYTE PTR [ebp-0x4b],0xe9
  4080a5:	cmp    esp,DWORD PTR ss:[ebp-0x2ba6922a]
  4080ac:	icebp  
  4080ad:	sbb    eax,0xefa6827
  4080b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080b3:	pop    ebp
  4080b4:	or     eax,DWORD PTR [eax-0x3df5f663]
  4080ba:	xchg   edi,eax
  4080bb:	pop    ecx
  4080bc:	rcr    bh,1
  4080be:	dec    eax
  4080bf:	push   0xffffff8d
  4080c1:	jmp    0xc01c:0x37eb49a6
  4080c8:	xchg   ebx,eax
  4080c9:	xor    al,bh
  4080cb:	imul   ecx,esi,0xb8d9058b
  4080d1:	add    ecx,DWORD PTR [esi+0x6e]
  4080d4:	sbb    DWORD PTR [ebp-0x59],edx
  4080d7:	fld    TBYTE PTR [ebx-0x1b]
  4080da:	cmp    cl,BYTE PTR [eax-0x53]
  4080dd:	jnp    0x408066
  4080df:	fisubr WORD PTR [ecx]
  4080e1:	pop    es
  4080e2:	icebp  
  4080e3:	sbb    eax,0xdc72e040
  4080e8:	pop    ebx
  4080e9:	les    ebx,FWORD PTR [edx+0x4f43ca4f]
  4080ef:	mov    cl,0xe0
  4080f1:	jo     0x40808d
  4080f3:	dec    ebp
  4080f4:	lock push ss
  4080f6:	jmp    0x47f07225
  4080fb:	add    BYTE PTR es:[ecx-0x5bf82723],ch
  408102:	imul   eax,DWORD PTR [ecx],0xffffff9a
  408105:	repnz or DWORD PTR [eax+0x41420a30],edx
  40810c:	mov    al,0x1d
  40810e:	mov    ds:0x355e939a,al
  408113:	pop    eax
  408114:	cmc    
  408115:	xlat   BYTE PTR ds:[ebx]
  408116:	in     eax,0xc5
  408118:	sub    al,0x95
  40811a:	imul   esi,DWORD PTR ds:0xa48bdfd8,0xd870cf7e
  408124:	mov    edi,0xa8610063
  408129:	xor    bh,BYTE PTR [esi+eiz*2+0x13e25c93]
  408130:	icebp  
  408131:	les    ebx,FWORD PTR [edi+0x3a]
  408134:	inc    ebx
  408135:	loopne 0x408136
  408137:	cmp    dl,BYTE PTR [ecx-0x35]
  40813a:	jecxz  0x4080d4
  40813c:	pop    eax
  40813d:	xchg   edi,eax
  40813e:	fnstenv [edi+edx*8+0x25]
  408142:	and    DWORD PTR [ebp+0x64],0x69
  408146:	mov    ah,0x8c
  408148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408149:	add    BYTE PTR [ebp+0x24019b0e],bh
  40814f:	adc    eax,0x88d3065e
  408154:	or     al,0x68
  408156:	sub    al,0xe3
  408158:	ror    ah,cl
  40815a:	(bad)  
  40815b:	mov    ecx,0xde0116c9
  408160:	dec    ecx
  408161:	mov    ?,eax
  408163:	xchg   esi,eax
  408164:	or     BYTE PTR [edx],0xe9
  408167:	pop    ds
  408168:	or     dh,ah
  40816a:	pop    eax
  40816b:	pop    esi
  40816c:	mov    al,0xd9
  40816e:	loopne 0x408179
  408170:	out    dx,al
  408171:	mov    eax,0x2b0ef75d
  408176:	das    
  408177:	inc    esi
  408178:	je     0x408104
  40817a:	retf   
  40817b:	mov    ebp,DWORD PTR [edx-0x139b923b]
  408181:	and    bh,bl
  408183:	pop    ds
  408184:	push   eax
  408186:	daa    
  408187:	and    dl,BYTE PTR [ecx]
  408189:	jne    0x408181
  40818b:	and    DWORD PTR [ecx+0x40],esp
  40818e:	neg    DWORD PTR [ebx+edi*1]
  408191:	mov    dh,0x46
  408193:	std    
  408194:	mov    WORD PTR [ebp-0x63],ds
  408197:	or     DWORD PTR [edx+0x4a],edi
  40819a:	add    bh,BYTE PTR [ebx]
  40819c:	inc    edx
  40819d:	lock jecxz 0x4081f5
  4081a0:	jmp    0x37b3:0xb71beba5
  4081a7:	and    DWORD PTR [edi+0x79358aab],0xffffffab
  4081ae:	nop
  4081af:	cmp    eax,0xdd5d3160
  4081b4:	xor    DWORD PTR [edx+esi*2+0x4a],ebx
  4081b8:	mov    eax,0xfc754b6e
  4081bd:	pop    ss
  4081be:	lods   eax,DWORD PTR ds:[esi]
  4081bf:	out    0x29,al
  4081c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c2:	ja     0x40817a
  4081c4:	popf   
  4081c5:	aad    0x2c
  4081c7:	in     al,dx
  4081c8:	mov    ch,0xd5
  4081ca:	mov    BYTE PTR [edi],dh
  4081cc:	sub    eax,0x845ed62f
  4081d1:	shl    BYTE PTR [edi],0xd2
  4081d4:	jecxz  0x4081fd
  4081d6:	ret    
  4081d7:	xchg   esi,eax
  4081d8:	arpl   WORD PTR [ebx-0x53],di
  4081db:	repnz fistp DWORD PTR [ebp-0x72]
  4081df:	jp     0x40825a
  4081e1:	fbld   TBYTE PTR [edi]
  4081e3:	or     eax,0x5f17a3c7
  4081e8:	das    
  4081e9:	and    DWORD PTR [ebx+0x1d],0xf91d31e3
  4081f0:	ja     0x40819a
  4081f2:	mov    ch,0x15
  4081f4:	fwait
  4081f5:	jp     0x4081d6
  4081f7:	dec    ebp
  4081f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f9:	popf   
  4081fa:	js     0x4081e9
  4081fc:	outs   dx,BYTE PTR ds:[esi]
  4081fd:	jle    0x4081e9
  4081ff:	(bad)  
  408200:	(bad)  
  408201:	or     eax,0xd145826d
  408206:	es push ss
  408208:	dec    edi
  408209:	test   ah,al
  40820b:	dec    esi
  40820c:	mov    ebp,0x786d72b3
  408211:	nop
  408212:	imul   ebx,DWORD PTR [eax+0x66],0x78
  408216:	outs   dx,DWORD PTR ds:[esi]
  408217:	outs   dx,DWORD PTR ds:[esi]
  408218:	sub    eax,0xaa25af6a
  40821d:	(bad)  
  40821e:	mov    bl,0xa2
  408220:	dec    DWORD PTR [ecx+0x33c158dd]
  408226:	sbb    BYTE PTR ds:0x62b1c625,ah
  40822d:	add    dh,BYTE PTR ds:0xda8a5e17
  408233:	push   ss
  408234:	fiadd  WORD PTR [ecx]
  408236:	sbb    al,0x9c
  408239:	sub    al,0x9
  40823b:	out    0xde,eax
  40823d:	jmp    0x968e:0x73437482
  408244:	mov    DWORD PTR [ecx+0x64ec94dd],0x1b5014fa
  40824e:	dec    esp
  40824f:	xchg   esi,eax
  408250:	and    ecx,DWORD PTR [edx+ecx*8-0x4681013]
  408257:	sub    esi,DWORD PTR [edx-0x4a]
  40825a:	xchg   ebp,eax
  40825b:	fwait
  40825c:	aam    0xf
  40825e:	in     al,0x22
  408260:	cdq    
  408261:	inc    edi
  408262:	outs   dx,DWORD PTR ds:[esi]
  408263:	add    eax,0xe16bd70
  408268:	push   ebp
  408269:	add    edi,esp
  40826b:	jmp    0xf95d5b87
  408270:	pusha  
  408271:	ds int 0xc1
  408274:	pushf  
  408275:	loop   0x40829a
  408277:	dec    esp
  408278:	adc    cl,BYTE PTR [ebp-0x68]
  40827b:	(bad)  
  40827c:	jae    0x408275
  40827e:	cmp    al,0x2c
  408280:	push   ss
  408281:	enter  0x596c,0x8a
  408285:	cmp    eax,0x398a5eb8
  40828a:	sbb    al,0xa3
  40828c:	ins    BYTE PTR es:[edi],dx
  40828d:	cs rol ebp,1
  408290:	out    0x8d,eax
  408292:	hlt    
  408293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408294:	jae    0x408254
  408296:	push   cs
  408297:	push   eax
  408298:	add    BYTE PTR [edx+0x5c],ah
  40829b:	jb     0x408259
  40829d:	inc    ecx
  40829e:	or     eax,0xebb57956
  4082a3:	int    0x97
  4082a5:	cmp    dl,BYTE PTR [edi-0x4cf9083c]
  4082ab:	lods   al,BYTE PTR ds:[esi]
  4082ac:	lahf   
  4082ad:	or     DWORD PTR [ebx+0x4c],esp
  4082b0:	jecxz  0x408234
  4082b2:	call   0x945a24f4
  4082b7:	push   es
  4082b8:	sbb    bl,BYTE PTR [ebx]
  4082ba:	inc    esi
  4082bb:	aaa    
  4082bc:	or     eax,0x45304a2c
  4082c1:	inc    esi
  4082c2:	shl    ebp,1
  4082c4:	dec    eax
  4082c5:	xor    al,0x34
  4082c7:	scas   eax,DWORD PTR es:[edi]
  4082c8:	cdq    
  4082c9:	je     0x40831d
  4082cb:	or     BYTE PTR ds:0x1160a,al
  4082d1:	dec    edx
  4082d2:	sahf   
  4082d3:	or     bh,BYTE PTR [esi+ebp*2]
  4082d6:	jb     0x408288
  4082d8:	sbb    ecx,DWORD PTR [esi]
  4082da:	push   ebp
  4082db:	mov    ecx,0x91ed8204
  4082e0:	out    0xb6,eax
  4082e2:	sbb    al,0x73
  4082e4:	ficomp WORD PTR [esi-0x7bb5ccc7]
  4082ea:	out    dx,eax
  4082eb:	popf   
  4082ec:	xchg   BYTE PTR [edi],dh
  4082ee:	mov    ?,eax
  4082f0:	test   eax,0xf91d9b13
  4082f5:	inc    edi
  4082f6:	(bad)  
  4082f7:	repnz dec ebp
  4082f9:	sub    al,0x2e
  4082fb:	rol    BYTE PTR [eax-0x504e0158],1
  408301:	xor    BYTE PTR [esi],dh
  408303:	cmc    
  408304:	fwait
  408305:	out    0xc3,al
  408307:	or     DWORD PTR [ebx+eiz*1+0x3d9e1917],ebx
  40830e:	and    eax,0xa48cbfc
  408313:	sbb    DWORD PTR [ecx+0x79],esi
  408316:	sahf   
  408317:	dec    ecx
  408318:	inc    ebp
  408319:	or     bl,bl
  40831b:	sub    DWORD PTR [eax-0x5e3f09a0],0x7256a0be
  408325:	mov    eax,ds:0xd504ec83
  40832a:	xor    al,0x5a
  40832c:	push   ebp
  40832d:	cli    
  40832e:	adc    al,0xb1
  408330:	int    0xfd
  408332:	adc    BYTE PTR [edx+0x1a02a406],dh
  408338:	pop    esi
  408339:	icebp  
  40833a:	cdq    
  40833b:	fisttp WORD PTR [edi+edx*1-0x4b]
  40833f:	lods   eax,DWORD PTR ds:[esi]
  408340:	mov    edi,DWORD PTR [eax-0x1a491130]
  408346:	sbb    al,dl
  408348:	lahf   
  408349:	repnz or eax,0xabf6115b
  40834f:	fiadd  DWORD PTR [edx-0x7b]
  408352:	sub    BYTE PTR [ebx-0x1e],ch
  408355:	icebp  
  408356:	das    
  408357:	jnp    0x40839b
  408359:	call   0xeaff:0xd71bc6d0
  408360:	ret    
  408361:	rcr    esp,0x86
  408364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408365:	sub    esi,DWORD PTR [edi-0x73]
  408368:	mov    al,ds:0x6fc1b216
  40836d:	push   esp
  40836e:	lea    eax,[ecx-0x67]
  408371:	ja     0x4083bc
  408373:	fwait
  408374:	test   DWORD PTR [esi+0x2e],ecx
  408377:	adc    ch,ah
  408379:	xchg   edx,eax
  40837a:	jb     0x4083e5
  40837c:	inc    esp
  40837d:	fstp   DWORD PTR [edi-0x7d]
  408380:	sbb    DWORD PTR [edx-0x48352ff4],esi
  408386:	imul   esi,DWORD PTR [ecx-0x61098f4d],0xffffffb3
  40838d:	outs   dx,DWORD PTR ds:[esi]
  40838e:	pop    eax
  40838f:	scas   eax,DWORD PTR es:[edi]
  408390:	ret    
  408391:	inc    ecx
  408392:	push   ebp
  408393:	nop
  408394:	pop    ds
  408395:	push   eax
  408396:	rcl    esi,cl
  408398:	xor    BYTE PTR [ecx],0xa6
  40839b:	imul   esp,DWORD PTR [esi+0x754d7dcc],0xdb3f757c
  4083a5:	xor    bl,0x9e
  4083a8:	jg     0x40835f
  4083aa:	nop
  4083ab:	sbb    DWORD PTR [edi+0x21],eax
  4083ae:	lock mov ds:0xb1e95d6b,eax
  4083b4:	pop    edi
  4083b5:	sahf   
  4083b6:	je     0x40833d
  4083b8:	es aad 0x64
  4083bb:	xchg   edi,eax
  4083bc:	add    al,0xf1
  4083be:	iret   
  4083bf:	popf   
  4083c0:	and    BYTE PTR [ecx+0x1e],ch
  4083c3:	push   esi
  4083c4:	inc    eax
  4083c5:	push   ebp
  4083c6:	inc    bx
  4083c8:	inc    ecx
  4083c9:	inc    eax
  4083ca:	pop    es
  4083cb:	pop    edi
  4083cc:	adc    BYTE PTR ds:0x3e06a769,al
  4083d2:	adc    al,0xac
  4083d4:	mov    ebp,0x6918eb3d
  4083d9:	mov    al,ds:0x77301c6f
  4083de:	xchg   esp,eax
  4083df:	sub    edi,esp
  4083e1:	out    dx,eax
  4083e2:	ins    DWORD PTR es:[edi],dx
  4083e3:	sbb    bh,BYTE PTR [edx-0x380a52d5]
  4083e9:	arpl   WORD PTR cs:[edx+0xcfd7800],bp
  4083f0:	xchg   ebx,eax
  4083f1:	fstp   TBYTE PTR [ecx+0x17]
  4083f4:	mov    eax,0x37e3c39f
  4083f9:	adc    al,0xe6
  4083fb:	sbb    si,WORD PTR [esi+0x54]
  4083ff:	add    eax,DWORD PTR [ebp-0x40]
  408402:	cmp    edx,DWORD PTR [esi+ebx*4-0x704b9e79]
  408409:	add    ecx,ebp
  40840b:	std    
  40840c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40840d:	shr    BYTE PTR [ebx-0x577874cf],0x79
  408414:	jge    0x4083cc
  408416:	shrd   DWORD PTR [edi],ebp,0xf4
  40841a:	xor    BYTE PTR [ecx-0x3],ah
  40841d:	dec    esp
  40841e:	int3   
  40841f:	pop    edx
  408420:	in     eax,0xc0
  408422:	push   ss
  408423:	xchg   edi,eax
  408424:	push   edi
  408425:	and    DWORD PTR [ebx],ebp
  408427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408428:	nop
  408429:	ins    BYTE PTR es:[edi],dx
  40842a:	fstp   DWORD PTR [eax]
  40842c:	mov    dh,0xde
  40842e:	and    edi,ebp
  408430:	loop   0x408479
  408432:	inc    eax
  408433:	mov    BYTE PTR [edx+0x68234e91],al
  408439:	fdiv   QWORD PTR [edi+0x443ddc91]
  40843f:	cmp    al,0xc4
  408441:	xor    eax,0x9bb5bd2b
  408446:	mov    esp,0x95cfa7f2
  40844b:	imul   ebp,DWORD PTR [edx+0xf],0x2193089f
  408452:	pop    ds
  408453:	mov    dh,0xd
  408455:	pop    esp
  408456:	fist   WORD PTR [ebx-0x2447b7b1]
  40845c:	push   ds
  40845d:	xor    DWORD PTR [ebx-0x5241bd36],0x3a8a54b3
  408467:	ins    DWORD PTR es:[edi],dx
  408468:	cmp    ebx,esi
  40846a:	imul   ebp,DWORD PTR [edi+0x63],0xdc3e3359
  408471:	test   ecx,ecx
  408473:	enter  0x79f8,0xf4
  408477:	cwde   
  408478:	call   0x1d10:0xa374ce06
  40847f:	clc    
  408480:	stc    
  408481:	xchg   edx,eax
  408482:	push   ds
  408483:	mov    ds:0x60db7491,al
  408488:	adc    edx,DWORD PTR [ecx]
  40848a:	mov    bh,0xfa
  40848c:	pop    ebx
  40848d:	jnp    0x408496
  40848f:	(bad)  
  408490:	pop    ebx
  408491:	cs mov ebp,0x739089e2
  408497:	retf   0x46ab
  40849a:	sbb    BYTE PTR [edi+0x1c84c7ce],0xf7
  4084a1:	add    DWORD PTR [ebx],edi
  4084a3:	add    DWORD PTR [edx-0x21],0x2e
  4084a7:	lahf   
  4084a8:	pop    ss
  4084a9:	sar    bh,1
  4084ab:	or     esi,DWORD PTR [edi-0x73dca046]
  4084b1:	cmp    BYTE PTR [eax],ah
  4084b3:	repz addr16 dec edx
  4084b6:	and    BYTE PTR ds:0x63c9d080,0x21
  4084bd:	leave  
  4084be:	in     al,dx
  4084bf:	stos   DWORD PTR es:[edi],eax
  4084c0:	inc    esp
  4084c1:	dec    esi
  4084c2:	push   cs
  4084c3:	xchg   esi,eax
  4084c4:	mov    ch,0x2e
  4084c6:	(bad)  
  4084c8:	jge    0x408474
  4084ca:	dec    ebp
  4084cb:	inc    eax
  4084cc:	fwait
  4084cd:	mov    si,0x4b83
  4084d1:	mov    bl,0xf3
  4084d3:	xor    esi,edi
  4084d5:	and    al,0xf1
  4084d7:	outs   dx,DWORD PTR ds:[esi]
  4084d8:	or     al,0x26
  4084da:	popa   
  4084db:	test   DWORD PTR [esi+0x10f22e18],ebp
  4084e1:	inc    eax
  4084e2:	or     eax,0xe859c20e
  4084e7:	jae    0x408515
  4084e9:	and    ch,bh
  4084eb:	stos   DWORD PTR es:[edi],eax
  4084ec:	push   ebp
  4084ed:	xchg   ebp,ebp
  4084ef:	in     al,0xdb
  4084f1:	inc    ecx
  4084f2:	es xchg edi,eax
  4084f4:	cmp    al,0xef
  4084f6:	pusha  
  4084f7:	mov    esi,0x60176388
  4084fc:	mov    BYTE PTR [edx+ebx*1],al
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a73b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a73f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a743
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a74b
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a713
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [ebx+0x76],bl
  4089f9:	add    eax,0x8315c75f
  4089fe:	sub    eax,0x5c
  408a01:	add    DWORD PTR [ebx+0x62e1b363],0x55
  408a08:	inc    ecx
  408a09:	adc    dh,BYTE PTR ds:0x45924d55
  408a0f:	xchg   ecx,eax
  408a10:	out    dx,eax
  408a11:	jne    0x40899a
  408a13:	jns    0x408a0f
  408a15:	jnp    0x4089b2
  408a17:	mov    cl,0xa6
  408a19:	out    0x34,eax
  408a1b:	sti    
  408a1c:	outs   dx,DWORD PTR ds:[esi]
  408a1d:	mov    ds:0x1d19bbcb,al
  408a22:	lods   eax,DWORD PTR ds:[esi]
  408a23:	daa    
  408a24:	sbb    DWORD PTR [edi-0x42a9ba57],edx
  408a2a:	mov    edi,0xc7b9c2fc
  408a2f:	inc    esi
  408a30:	mov    WORD PTR [esi+0x42],fs
  408a33:	add    al,0x11
  408a35:	jge    0x4089d6
  408a37:	adc    BYTE PTR [ecx],bl
  408a39:	out    0xfa,eax
  408a3b:	cmp    al,0xbb
  408a3d:	hlt    
  408a3e:	mov    esp,0x80235b52
  408a43:	jg     0x408a28
  408a45:	mov    eax,0x1a043798
  408a4a:	sbb    bl,BYTE PTR [eax+0x72936cff]
  408a50:	mov    ds:0x25f01d8,al
  408a55:	push   es
  408a56:	mov    eax,0xea46c0fc
  408a5b:	and    eax,0x7ac76125
  408a60:	fist   WORD PTR [esi-0x377d0416]
  408a66:	and    DWORD PTR es:[edx-0x6b90fbc7],0xffffffdc
  408a6e:	inc    esi
  408a6f:	(bad)  
  408a70:	jge    0x4089fe
  408a72:	add    eax,0x9e4bec1a
  408a77:	les    esp,FWORD PTR ds:0xbc2d9a3c
  408a7d:	int3   
  408a7e:	mov    esi,edi
  408a80:	out    dx,al
  408a81:	mov    esp,0xb855b99
  408a86:	or     dl,BYTE PTR [esi+ecx*8+0x57]
  408a8a:	test   al,0x7c
  408a8c:	cwde   
  408a8d:	ins    BYTE PTR es:[edi],dx
  408a8e:	call   0x8230:0x894f2153
  408a95:	push   0xc5d581fd
  408a9a:	out    0x1d,eax
  408a9c:	ja     0x408ac1
  408a9e:	adc    edi,edx
  408aa0:	loopne 0x408a84
  408aa2:	jge    0x408ae7
  408aa4:	lods   eax,DWORD PTR ds:[esi]
  408aa5:	test   edi,esp
  408aa7:	dec    ecx
  408aa8:	sti    
  408aa9:	and    DWORD PTR [ecx-0xe],edi
  408aac:	in     al,dx
  408aad:	adc    al,0xc8
  408aaf:	push   edi
  408ab0:	ss ret 0x4aaa
  408ab4:	cld    
  408ab5:	dec    ecx
  408ab6:	sub    DWORD PTR [ebp-0x206a8e92],esp
  408abc:	sbb    DWORD PTR [ebp-0x76],0x5f
  408ac0:	cmp    eax,DWORD PTR [esi+ebp*4-0x3f]
  408ac4:	js     0x408ae3
  408ac6:	xchg   edx,eax
  408ac7:	aam    0x23
  408ac9:	mov    al,0x5b
  408acb:	call   0xbb07ed5d
  408ad0:	sbb    cl,BYTE PTR [edi+0x74786bc5]
  408ad6:	dec    ebp
  408ad7:	fsubr  QWORD PTR [ebx-0x3e]
  408ada:	jo     0x408ac4
  408adc:	ret    0xd8c0
  408adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ae0:	or     al,0xab
  408ae2:	push   ss
  408ae3:	add    bh,BYTE PTR [eax]
  408ae5:	push   edi
  408ae6:	xchg   ecx,eax
  408ae7:	jmp    0xdfaa:0xc3b827ca
  408aee:	adc    al,0x5c
  408af0:	or     DWORD PTR [edi],esi
  408af2:	dec    esp
  408af3:	adc    al,0x23
  408af5:	lds    eax,FWORD PTR [esi+edi*8-0x3ff1680]
  408afc:	push   ss
  408afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408afe:	add    eax,0x18a832ea
  408b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b04:	and    DWORD PTR [ebx+0x2d0b9470],0x54f08a31
  408b0e:	xor    BYTE PTR [edx-0xc],ah
  408b11:	shr    eax,1
  408b13:	inc    ecx
  408b14:	mov    dl,0xa9
  408b16:	push   ss
  408b17:	hlt    
  408b18:	stc    
  408b19:	sub    dh,BYTE PTR [ecx+0xd]
  408b1c:	lds    ebp,FWORD PTR [edx]
  408b1e:	std    
  408b1f:	fwait
  408b20:	test   DWORD PTR [eax+0x3395491b],esp
  408b26:	add    DWORD PTR [edx+0x5b],0x4f
  408b2a:	or     al,0x1a
  408b2c:	mov    ebp,0x3a6b1f8e
  408b31:	in     al,dx
  408b32:	pop    ebx
  408b33:	scas   eax,DWORD PTR es:[edi]
  408b34:	dec    edi
  408b35:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  408b37:	in     al,0x84
  408b39:	shl    BYTE PTR [ebp+0x37],0xa3
  408b3d:	mov    eax,0x2ef5460c
  408b42:	jbe    0x408b12
  408b44:	xchg   ebp,eax
  408b45:	jl     0x408b5d
  408b47:	popa   
  408b48:	dec    esi
  408b49:	mov    al,ds:0x3c36bd29
  408b4e:	in     al,dx
  408b4f:	mov    eax,ebx
  408b51:	gs icebp 
  408b53:	js     0x408b69
  408b55:	repz dec ebp
  408b57:	mov    eax,0x9e2b7c13
  408b5c:	mov    BYTE PTR ds:[eax-0x2d],dh
  408b60:	dec    esi
  408b61:	jmp    0xb77ec75e
  408b66:	sbb    eax,0xc03f11f4
  408b6b:	loopne 0x408b3e
  408b6d:	push   ecx
  408b6e:	inc    edi
  408b6f:	stos   BYTE PTR es:[edi],al
  408b70:	scas   al,BYTE PTR es:[edi]
  408b71:	jp     0x408b19
  408b73:	adc    eax,ebx
  408b75:	cli    
  408b76:	stos   BYTE PTR es:[edi],al
  408b77:	repz (bad) 
  408b79:	xor    DWORD PTR [esi],esp
  408b7b:	loopne 0x408ba6
  408b7d:	add    BYTE PTR [ebp+0x53],bh
  408b80:	shl    dl,cl
  408b82:	push   ebp
  408b83:	and    eax,0x182e06b6
  408b88:	sbb    al,0xb7
  408b8a:	leave  
  408b8b:	push   ebx
  408b8c:	es push 0xed44c607
  408b92:	dec    esi
  408b93:	xchg   ebx,eax
  408b94:	mov    al,0xcf
  408b96:	lock xor BYTE PTR [di],dl
  408b9a:	ss add al,0xf5
  408b9d:	lds    ebp,FWORD PTR [ebp+0x7d]
  408ba0:	jp     0x408b42
  408ba2:	inc    ecx
  408ba3:	cmp    BYTE PTR [ecx-0x55],dl
  408ba6:	and    DWORD PTR [esi],0x9eb51598
  408bac:	mov    bh,0xea
  408bae:	shl    cl,0x5
  408bb1:	push   ds
  408bb2:	mov    BYTE PTR ds:0x152868af,bh
  408bb8:	lahf   
  408bb9:	dec    edi
  408bba:	and    edi,edx
  408bbc:	and    BYTE PTR [eax+0x5920a24c],ah
  408bc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bc3:	push   ebx
  408bc4:	xor    ah,BYTE PTR ds:0x861c342e
  408bca:	js     0x408b96
  408bcc:	fwait
  408bcd:	inc    esi
  408bce:	add    BYTE PTR [ebx+0x59],bh
  408bd1:	mov    ebp,0x38af39de
  408bd6:	in     al,dx
  408bd7:	cmp    cl,BYTE PTR [esi+0x69541f4b]
  408bdd:	and    eax,0xe4172d8c
  408be2:	inc    esp
  408be3:	mov    edx,0x90c1469d
  408be8:	hlt    
  408be9:	jo     0x408bb5
  408beb:	fs repz iret 
  408bee:	ffree  st(1)
  408bf0:	mov    WORD PTR [eax+0x61c6cb2e],?
  408bf6:	and    eax,0x56f79734
  408bfb:	iret   
  408bfc:	sbb    eax,0xb1b57273
  408c01:	mov    cl,0x1f
  408c03:	mov    dh,0xec
  408c05:	add    DWORD PTR [edx],edi
  408c07:	and    dl,BYTE PTR ds:0x97e6c54
  408c0d:	push   edi
  408c0e:	leave  
  408c0f:	sbb    ecx,DWORD PTR [ebp-0x13]
  408c12:	lahf   
  408c13:	scas   eax,DWORD PTR es:[edi]
  408c14:	xchg   edx,eax
  408c15:	in     eax,0x30
  408c17:	popa   
  408c18:	jns    0x408bae
  408c1a:	lods   al,BYTE PTR ds:[esi]
  408c1b:	data16 std 
  408c1d:	shl    bl,0x5c
  408c20:	push   ss
  408c21:	xor    eax,edi
  408c23:	icebp  
  408c24:	addr16 push 0xffffffee
  408c27:	mov    edx,0xe97ba7a7
  408c2c:	xor    BYTE PTR [eax],bl
  408c2e:	xchg   ebp,eax
  408c2f:	xor    dl,BYTE PTR [edi*1-0x38d95e38]
  408c36:	jl     0x408c03
  408c38:	jno    0x408c66
  408c3a:	inc    ebx
  408c3b:	test   BYTE PTR [ecx+0x55d382be],cl
  408c41:	dec    eax
  408c42:	xchg   ebp,eax
  408c43:	inc    ebp
  408c44:	jnp    0x408c5b
  408c46:	stos   BYTE PTR es:[edi],al
  408c47:	adc    eax,0xf694ad37
  408c4c:	mov    esi,0x4290ec22
  408c51:	pop    ds
  408c52:	and    DWORD PTR [esi],eax
  408c54:	sub    ebx,DWORD PTR [ecx]
  408c56:	push   ebp
  408c57:	adc    dh,BYTE PTR [edi+ecx*8]
  408c5a:	loop   0x408cb5
  408c5c:	push   0xc
  408c5e:	mov    ebx,0x5ea4b851
  408c63:	inc    edi
  408c64:	arpl   cx,cx
  408c66:	xor    ebx,eax
  408c68:	mov    ch,0x6c
  408c6a:	sbb    BYTE PTR [ecx],bh
  408c6c:	push   0x23
  408c6e:	mov    dh,0xea
  408c70:	daa    
  408c71:	shl    DWORD PTR [ecx+ebp*2+0x23c7b680],1
  408c78:	stos   DWORD PTR es:[edi],eax
  408c79:	adc    BYTE PTR [edi-0x39edb44d],ah
  408c7f:	test   BYTE PTR [ebx+0x4f2b4411],0x7d
  408c86:	mov    cl,0x4a
  408c88:	cdq    
  408c89:	in     eax,0x95
  408c8b:	jo     0x408ce1
  408c8d:	adc    al,0x3a
  408c8f:	packssdw mm0,QWORD PTR [eax+0x78]
  408c93:	bound  ecx,QWORD PTR [ebx+eiz*8+0x3d]
  408c97:	out    0xf7,al
  408c99:	pop    ebx
  408c9a:	mul    BYTE PTR [eax-0x6c]
  408c9d:	ret    0xa9b3
  408ca0:	pop    es
  408ca1:	sub    esi,DWORD PTR [edx-0x299dd5dc]
  408ca7:	cli    
  408ca8:	fwait
  408ca9:	in     al,dx
  408caa:	sar    DWORD PTR [esi+0x462e4e76],1
  408cb0:	iret   
  408cb1:	lds    edx,FWORD PTR [eax-0x75]
  408cb4:	inc    ebx
  408cb5:	pop    ebx
  408cb6:	into   
  408cb7:	dec    esp
  408cb8:	fcomp  DWORD PTR [ecx+eax*2]
  408cbb:	inc    esi
  408cbc:	inc    eax
  408cbd:	aaa    
  408cbe:	or     ch,BYTE PTR [ebx+edi*8-0x3f657a97]
  408cc5:	mov    WORD PTR [eax-0x5964f3d9],ds
  408ccb:	push   es
  408ccc:	mov    WORD PTR [ebx],ss
  408cce:	aaa    
  408ccf:	hlt    
  408cd0:	ret    0x8e30
  408cd3:	xchg   edx,eax
  408cd4:	call   0xc808:0xbd4758fb
  408cdb:	(bad)  
  408cdc:	js     0x408c6f
  408cde:	jmp    0xb2852af7
  408ce3:	out    0x6e,al
  408ce5:	inc    ebp
  408ce6:	inc    ebx
  408ce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce8:	shr    edi,0x4c
  408ceb:	hlt    
  408cec:	cs pop edx
  408cee:	lahf   
  408cef:	or     al,0xbe
  408cf1:	imul   edi,ebx,0xf5d3e688
  408cf7:	not    BYTE PTR [esi-0x58]
  408cfa:	pop    ebx
  408cfb:	loop   0x408ca0
  408cfd:	div    BYTE PTR [edx+eiz*4-0x61e88382]
  408d04:	shl    cl,cl
  408d06:	mov    eax,0xa406004
  408d0b:	cwde   
  408d0c:	outs   dx,BYTE PTR ds:[esi]
  408d0d:	or     edi,DWORD PTR [edi]
  408d0f:	test   BYTE PTR [edi+ebp*4],bh
  408d12:	daa    
  408d13:	cld    
  408d14:	retf   
  408d15:	xor    eax,0x88692ddb
  408d1a:	push   0xfffffff8
  408d1c:	into   
  408d1d:	lock popa 
  408d1f:	loope  0x408d7b
  408d21:	jmp    0x408d2b
  408d23:	js     0x408cff
  408d25:	xor    eax,DWORD PTR [edx-0x3e]
  408d28:	setnp  BYTE PTR [esi]
  408d2b:	pop    ecx
  408d2c:	sbb    BYTE PTR [ebx],cl
  408d2e:	dec    edi
  408d2f:	adc    DWORD PTR [esp+eax*2],ebx
  408d32:	pop    es
  408d33:	stos   DWORD PTR es:[edi],eax
  408d34:	xchg   esp,eax
  408d35:	nop
  408d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d37:	adc    DWORD PTR [ecx+0x26bf9912],edi
  408d3d:	dec    edi
  408d3e:	not    DWORD PTR ds:0x852bfef6
  408d44:	fs test al,0xdf
  408d47:	repnz jmp 0x8e7c:0x29ff3a35
  408d4f:	jmp    0xe76a7807
  408d54:	js     0x408cfc
  408d56:	test   edi,ebp
  408d58:	sti    
  408d59:	pop    edx
  408d5a:	inc    edi
  408d5b:	jge    0x408d3e
  408d5d:	push   ss
  408d5e:	mov    ecx,0x3d614468
  408d63:	pop    ss
  408d64:	in     al,0xbd
  408d66:	xor    al,BYTE PTR [edx+0x29]
  408d69:	ins    DWORD PTR es:[edi],dx
  408d6a:	or     bh,ch
  408d6c:	(bad)  
  408d6d:	stos   DWORD PTR es:[edi],eax
  408d6e:	sub    cl,BYTE PTR [ebp-0x3]
  408d71:	add    eax,ebx
  408d73:	popf   
  408d74:	test   BYTE PTR [esi+ebx*1-0x6e9692b3],ah
  408d7b:	gs stc 
  408d7d:	rcr    BYTE PTR [esi-0x4b],cl
  408d80:	dec    ecx
  408d81:	inc    edx
  408d82:	add    dh,BYTE PTR [edx-0x7f]
  408d85:	or     al,BYTE PTR [edi+0x7e]
  408d88:	mov    bh,0xef
  408d8a:	push   ss
  408d8b:	fwait
  408d8c:	retf   
  408d8d:	retf   
  408d8e:	pop    eax
  408d8f:	cmp    DWORD PTR [ecx],0xffffffa3
  408d92:	mov    ah,0xb7
  408d94:	and    al,dl
  408d96:	in     al,0xc6
  408d98:	mov    WORD PTR [eax-0x40],ds
  408d9b:	jae    0x408d9e
  408d9d:	sbb    DWORD PTR [ebx-0x2b],eax
  408da0:	dec    eax
  408da1:	pop    ebx
  408da2:	or     ch,bl
  408da4:	mov    dl,ah
  408da6:	dec    edx
  408da7:	call   FWORD PTR [eax]
  408da9:	sub    eax,0x539b72e
  408dae:	es jo  0x408d4e
  408db1:	cs gs ss ja 0x408d48
  408db6:	hlt    
  408db7:	shr    BYTE PTR [edx+0x23aba305],0x77
  408dbe:	out    dx,eax
  408dbf:	ss cmp bh,dh
  408dc2:	jge    0x408e37
  408dc4:	hlt    
  408dc5:	mov    eax,ds:0x45c4d634
  408dca:	inc    edi
  408dcb:	and    BYTE PTR [edi+0x76b160da],al
  408dd1:	sbb    cl,dh
  408dd3:	(bad)  
  408dd4:	push   ecx
  408dd5:	bound  ebp,QWORD PTR [eax+0x3f]
  408dd8:	shl    BYTE PTR [eax],cl
  408dda:	mov    edx,0x5452bbae
  408ddf:	dec    esi
  408de0:	retf   
  408de1:	mov    bh,0x21
  408de3:	retf   
  408de4:	mov    dl,BYTE PTR [ebx+0x386d32e3]
  408dea:	fstp   QWORD PTR [esi+0x58601517]
  408df0:	enter  0x7d8e,0x4
  408df4:	sti    
  408df5:	pop    edi
  408df6:	cwde   
  408df7:	call   0x999f4ff0
  408dfc:	jl     0x408e5d
  408dfe:	fsubr  QWORD PTR [esi]
  408e00:	adc    eax,ebx
  408e02:	push   ebx
  408e03:	das    
  408e04:	(bad)  
  408e05:	dec    DWORD PTR [ecx-0x18]
  408e08:	adc    ah,BYTE PTR [edi]
  408e0a:	xor    al,cl
  408e0c:	mov    ds:0xaae4966,al
  408e11:	ret    
  408e12:	push   es
  408e13:	rcr    BYTE PTR [edi-0x70],cl
  408e16:	ret    
  408e17:	out    dx,al
  408e18:	sub    dl,cl
  408e1a:	or     BYTE PTR [ecx],0xe
  408e1d:	push   ebx
  408e1e:	sub    eax,0xa95230a3
  408e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e24:	add    DWORD PTR [ecx],0x52
  408e27:	jmp    0x408df0
  408e29:	mov    edi,esi
  408e2b:	mov    esp,0x9a265664
  408e30:	retf   
  408e31:	mov    dl,0x1b
  408e33:	add    esp,DWORD PTR ds:[ecx+0x13deb441]
  408e3a:	jle    0x408e80
  408e3c:	(bad)  
  408e3d:	scas   al,BYTE PTR es:[edi]
  408e3e:	mov    WORD PTR ds:0xe94efa2c,ds
  408e44:	neg    DWORD PTR ds:0x88304ba2
  408e4a:	out    dx,eax
  408e4b:	test   DWORD PTR [esi],edx
  408e4d:	out    dx,eax
  408e4e:	fsubp  st(3),st
  408e50:	inc    edi
  408e51:	mov    esp,ebp
  408e53:	pusha  
  408e54:	ins    DWORD PTR es:[edi],dx
  408e55:	or     bh,al
  408e57:	add    eax,0x3ae6c55a
  408e5c:	or     bh,al
  408e5e:	loope  0x408edd
  408e60:	dec    ebp
  408e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e62:	add    al,0xda
  408e64:	je     0x408e0a
  408e66:	cmp    eax,0xe75ab267
  408e6b:	mov    bl,BYTE PTR [esi-0x5]
  408e6e:	push   esi
  408e6f:	jmp    0x6652:0x5ba24740
  408e76:	test   eax,0xab837e92
  408e7b:	sbb    eax,0x3ed261fd
  408e80:	test   al,0x6e
  408e82:	std    
  408e83:	mov    eax,ds:0x2c26a394
  408e88:	mov    bl,0x28
  408e8a:	jae    0x408ea8
  408e8c:	das    
  408e8d:	jmp    0x408eaf
  408e8f:	sbb    edx,ebp
  408e91:	sbb    esi,DWORD PTR [edi]
  408e93:	mov    dh,0x74
  408e95:	xchg   ecx,eax
  408e96:	xor    bl,0x9b
  408e99:	ins    BYTE PTR es:[edi],dx
  408e9a:	(bad)  
  408e9b:	pop    esp
  408e9c:	out    0x63,al
  408e9e:	xchg   ebp,eax
  408e9f:	cmc    
  408ea0:	inc    ebp
  408ea1:	mov    ebx,0x8340690b
  408ea6:	push   ecx
  408ea7:	xlat   BYTE PTR ds:[ebx]
  408ea8:	fcom   DWORD PTR [esi]
  408eaa:	jp     0x408eb4
  408eac:	sti    
  408ead:	lods   al,BYTE PTR ds:[esi]
  408eae:	mov    ecx,fs
  408eb0:	jo     0x408e9a
  408eb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eb3:	jge    0x408e73
  408eb5:	pusha  
  408eb6:	pop    edx
  408eb7:	pop    edx
  408eb8:	mov    DWORD PTR [ecx+0x18],ebx
  408ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ebc:	jbe    0x408f15
  408ebe:	and    ah,BYTE PTR [esi-0x542cc71c]
  408ec4:	dec    edx
  408ec5:	pop    eax
  408ec6:	mov    bl,0x44
  408ec8:	lds    esi,FWORD PTR [eax-0x4ff5869a]
  408ece:	scas   al,BYTE PTR es:[edi]
  408ecf:	sti    
  408ed0:	pop    ebx
  408ed1:	mov    esp,0x7e1f53d4
  408ed6:	push   ecx
  408ed7:	sbb    BYTE PTR [esi+esi*8+0x2410e00e],dh
  408ede:	sub    al,0x81
  408ee0:	add    DWORD PTR [eax-0x68d4e78c],ebx
  408ee6:	xchg   ebp,eax
  408ee7:	clc    
  408ee8:	test   al,0x5
  408eea:	ins    BYTE PTR es:[edi],dx
  408eeb:	sub    bl,bl
  408eed:	mov    eax,ds:0xfcaed106
  408ef2:	mov    cl,0xa7
  408ef4:	scas   eax,DWORD PTR es:[edi]
  408ef5:	and    cl,dl
  408ef7:	dec    edx
  408ef8:	popa   
  408ef9:	lock jp 0x408e9f
  408efc:	(bad)  
  408efd:	js     0x408f20
  408eff:	add    al,0x8f
  408f01:	cdq    
  408f02:	or     cl,BYTE PTR [eax]
  408f04:	mov    DWORD PTR [ecx-0xfd4013b],ebp
  408f0a:	ret    
  408f0b:	outs   dx,DWORD PTR ds:[esi]
  408f0c:	sub    al,0x9a
  408f0e:	clc    
  408f0f:	jae    0x408f83
  408f11:	jecxz  0x408eaa
  408f13:	cmp    DWORD PTR [ebx+0xa],0xf47f85bb
  408f1a:	push   ebx
  408f1b:	or     edx,DWORD PTR [edx-0x48]
  408f1e:	jl     0x408f0c
  408f20:	ins    BYTE PTR es:[edi],dx
  408f21:	dec    ecx
  408f22:	xchg   DWORD PTR [ebp+0x51bdc0a],edx
  408f28:	ret    0xdbb5
  408f2b:	xlat   BYTE PTR ds:[ebx]
  408f2c:	hlt    
  408f2d:	cwde   
  408f2e:	data16 jl 0x408f3c
  408f31:	push   ds
  408f32:	dec    edx
  408f33:	xchg   esp,eax
  408f34:	adc    BYTE PTR [eax+ecx*1-0x3f],cl
  408f38:	push   ss
  408f39:	mov    ah,bl
  408f3b:	test   eax,ebp
  408f3d:	in     al,dx
  408f3e:	cwde   
  408f3f:	xor    ah,BYTE PTR [ebx+esi*4]
  408f42:	jmp    0x408ec8
  408f44:	push   0xffffffda
  408f46:	add    DWORD PTR [edx-0x37fd6fb3],ebx
  408f4c:	clc    
  408f4d:	iret   
  408f4e:	ins    BYTE PTR es:[edi],dx
  408f4f:	push   ebx
  408f50:	cdq    
  408f51:	mov    ss:0xe597ab35,eax
  408f57:	mov    eax,0xb389c9c4
  408f5c:	fucom  st(4)
  408f5e:	adc    al,0x60
  408f60:	js     0x408fdd
  408f62:	out    0x3a,al
  408f64:	in     eax,0xc1
  408f66:	loopne 0x408f5e
  408f68:	lds    ecx,FWORD PTR [eax+eiz*2+0x6d]
  408f6c:	sub    DWORD PTR fs:[ecx+0x28],eax
  408f70:	pop    esi
  408f71:	scas   al,BYTE PTR es:[edi]
  408f72:	jne    0x408f33
  408f74:	or     al,bh
  408f76:	xor    BYTE PTR [esi+0x5b],cl
  408f79:	mov    ebx,0x1dbe3b5a
  408f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f7f:	pop    ss
  408f80:	aad    0xe8
  408f82:	addr16 adc al,0xbc
  408f85:	or     BYTE PTR [esi+0x4d],al
  408f88:	sahf   
  408f89:	add    ah,dl
  408f8b:	dec    eax
  408f8c:	repz je 0x408fa3
  408f8f:	std    
  408f90:	repnz out dx,eax
  408f92:	int    0x1f
  408f94:	mov    DWORD PTR [eax+edx*8],ecx
  408f97:	(bad)  
  408f98:	mov    ch,0xf1
  408f9a:	mov    al,ds:0xfd99615f
  408f9f:	sub    edi,0xe47cea21
  408fa5:	mov    esi,0xa45a2185
  408faa:	loopne 0x408fb8
  408fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fad:	xchg   esi,eax
  408fae:	inc    edx
  408faf:	inc    edx
  408fb0:	push   cs
  408fb1:	jne    0x408f85
  408fb3:	and    cl,BYTE PTR [ecx-0x261a45c6]
  408fb9:	lock add ax,0x29cf
  408fbe:	imul   edx,DWORD PTR [esi],0x350e243
  408fc4:	push   ebx
  408fc5:	sbb    al,BYTE PTR [ecx]
  408fc7:	mov    ebp,0x3c95ce61
  408fcc:	inc    ebp
  408fce:	or     al,0x4d
  408fd0:	push   0x9634841d
  408fd5:	mov    bh,0xc8
  408fd7:	ret    
  408fd8:	or     al,0xa4
  408fda:	sar    DWORD PTR [eax-0x185e82b2],1
  408fe0:	in     al,0x72
  408fe2:	xchg   edi,eax
  408fe3:	fistp  DWORD PTR [ecx-0x2c724e0e]
  408fe9:	cmp    eax,0xab5ab10e
  408fee:	push   ebp
  408fef:	shr    DWORD PTR [eax],0x71
  408ff2:	or     ecx,ebx
  408ff4:	mov    cl,0x40
  408ff6:	cdq    
  408ff7:	adc    edi,DWORD PTR [edi-0x4d70c37f]
  408ffd:	xor    BYTE PTR [edi-0x52f34ea7],ch
  409003:	leave  
  409004:	jg     0x408fe1
  409006:	or     BYTE PTR [ecx],ah
  409008:	mov    ch,bh
  40900a:	fldcw  WORD PTR [eax-0x4f]
  40900d:	dec    ecx
  40900e:	bound  ebx,QWORD PTR [ebx+0x37]
  409011:	dec    edi
  409012:	mov    es:0x14ec5ef,eax
  409018:	mov    bl,0x15
  40901a:	fwait
  40901b:	push   es
  40901c:	stc    
  40901d:	and    eax,0xe08f80d
  409022:	push   ss
  409023:	inc    edx
  409024:	fist   WORD PTR [eax+esi*1+0x57835c75]
  40902b:	fs int 0x34
  40902e:	jg     0x409056
  409030:	and    al,ah
  409032:	pop    ecx
  409033:	neg    BYTE PTR [edi+0x39]
  409036:	cdq    
  409037:	mov    al,0xe
  409039:	outs   dx,BYTE PTR ds:[esi]
  40903a:	inc    ebx
  40903b:	add    BYTE PTR [ebx+0x1a5f7a6b],bh
  409041:	or     ebp,0x56af7be6
  409047:	pop    ds
  409048:	sbb    al,0x8f
  40904a:	inc    esi
  40904b:	lods   al,BYTE PTR ds:[esi]
  40904c:	fstp   DWORD PTR [ecx+0x426e9e9a]
  409052:	xor    eax,0xeeb4c3fa
  409057:	adc    eax,0xcff31437
  40905c:	jmp    0x80005c13
  409061:	sbb    BYTE PTR [esp+ebx*8],dh
  409064:	hlt    
  409065:	aaa    
  409066:	dec    ecx
  409067:	jle    0x409062
  409069:	sbb    al,0xb8
  40906b:	retf   0x2222
  40906e:	mov    dl,0x5e
  409070:	jmp    0xce20:0x578fbd98
  409077:	pop    esi
  409078:	ins    BYTE PTR es:[edi],dx
  409079:	mov    al,ds:0xce611282
  40907e:	push   edx
  40907f:	adc    ebx,DWORD PTR [edi]
  409081:	inc    edi
  409082:	aad    0xe3
  409084:	xor    DWORD PTR [edi-0x2252479c],eax
  40908a:	push   eax
  40908b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40908c:	leave  
  40908d:	or     al,0x11
  40908f:	mov    ds:0x7b24ec25,al
  409094:	packuswb mm5,QWORD PTR [edi+esi*4]
  409098:	pop    esi
  409099:	push   ebp
  40909a:	xor    BYTE PTR [ebx-0x12],cl
  40909d:	jecxz  0x409066
  40909f:	js     0x409073
  4090a1:	shr    BYTE PTR [eax],1
  4090a3:	mov    ebx,0x29f427b9
  4090a8:	xchg   ebp,eax
  4090a9:	or     al,BYTE PTR [esi-0x11e032d3]
  4090af:	mov    eax,ds:0xf893d830
  4090b5:	in     eax,0x3c
  4090b7:	or     BYTE PTR [esi+0x4b],0x8d
  4090bb:	jle    0x409130
  4090bd:	and    eax,0x2e13ff60
  4090c2:	fmul   QWORD PTR [eax-0x14ab76da]
  4090c8:	cmp    ah,BYTE PTR [edi+0x72]
  4090cb:	mov    eax,ds:0xe9dcd7e9
  4090d0:	not    edx
  4090d2:	pusha  
  4090d3:	xchg   esp,eax
  4090d4:	out    0x1d,al
  4090d6:	call   0xbfdff62f
  4090db:	mov    bh,0x1d
  4090dd:	and    eax,0x90aad847
  4090e2:	dec    esp
  4090e3:	xor    ah,cl
  4090e5:	and    BYTE PTR [edx],cl
  4090e7:	das    
  4090e8:	mov    BYTE PTR [ebx+ebx*2-0x72cfee44],dh
  4090ef:	imul   ebx,DWORD PTR [edi+0x334cdb3e],0xffffffb2
  4090f6:	neg    BYTE PTR [ecx+edi*2-0x5d]
  4090fa:	lahf   
  4090fb:	sub    eax,0xbee9ea08
  409100:	sar    DWORD PTR [esi+ebp*2],1
  409103:	aas    
  409104:	xor    eax,0xa3137cba
  409109:	xlat   BYTE PTR ds:[ebx]
  40910a:	sbb    al,al
  40910c:	imul   esp,DWORD PTR [ebp+0x317bb21b],0xffffff99
  409113:	(bad)  
  409114:	push   esp
  409115:	lahf   
  409116:	lods   eax,DWORD PTR ds:[esi]
  409117:	inc    ebp
  409118:	mov    eax,0x1f4d5a79
  40911d:	ds in  al,dx
  40911f:	xchg   edx,eax
  409120:	or     eax,esp
  409122:	push   esi
  409123:	into   
  409124:	adc    bl,BYTE PTR [edx-0x1a]
  409127:	popf   
  409128:	pop    ds
  409129:	push   esi
  40912a:	sub    eax,0x7bee1194
  40912f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409130:	mov    ebx,0x2b4a7e72
  409135:	fidivr DWORD PTR [ebx+edi*8+0x5d]
  409139:	lahf   
  40913a:	ds nop
  40913c:	scas   eax,DWORD PTR es:[edi]
  40913d:	std    
  40913e:	sbb    DWORD PTR [esp+ecx*1+0x12],edx
  409142:	mov    BYTE PTR [ecx],0xea
  409145:	adc    DWORD PTR [eax],esp
  409147:	jnp    0x4090ea
  409149:	inc    ebp
  40914a:	popa   
  40914b:	pop    es
  40914c:	mov    esi,0xe2a30877
  409151:	test   eax,0x1e78d89f
  409156:	dec    edi
  409157:	mov    cl,0x3b
  409159:	cwde   
  40915a:	push   0xcf6b1f6
  40915f:	adc    al,0x13
  409161:	xchg   esi,eax
  409162:	int3   
  409163:	xchg   DWORD PTR [ecx],ebx
  409165:	test   eax,0x579a0af2
  40916a:	lods   eax,DWORD PTR ds:[esi]
  40916b:	inc    esi
  40916c:	jbe    0x40914f
  40916e:	imul   esi,edx,0xe71a3ee8
  409174:	jnp    0x4091ad
  409176:	jae    0x4091be
  409178:	leave  
  409179:	sar    DWORD PTR [esi-0x365a39bc],1
  40917f:	call   0x2105:0x63be0602
  409186:	int3   
  409187:	cli    
  409188:	add    al,0xb8
  40918a:	or     eax,0x3821e107
  40918f:	jge    0x40915b
  409191:	mov    ah,0x49
  409193:	daa    
  409194:	xor    ch,BYTE PTR [esi]
  409196:	in     eax,dx
  409197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409198:	out    0xf9,eax
  40919a:	sahf   
  40919b:	loope  0x4091fd
  40919d:	or     DWORD PTR [edi-0x772a7da1],ecx
  4091a3:	xchg   edi,eax
  4091a4:	std    
  4091a5:	fcom   st(4)
  4091a7:	adc    edx,DWORD PTR [edx+edx*2]
  4091aa:	pushf  
  4091ab:	mov    ah,0x7b
  4091ad:	(bad)  
  4091ae:	jo     0x4091db
  4091b0:	sahf   
  4091b1:	cld    
  4091b2:	fcom   DWORD PTR [esi+0x15]
  4091b5:	jae    0x409139
  4091b7:	mov    ebx,0x2c359260
  4091bc:	adc    al,0xec
  4091be:	test   al,0x2
  4091c0:	add    eax,0x9714d6ef
  4091c5:	test   BYTE PTR [edi+0x75],al
  4091c8:	outs   dx,BYTE PTR ds:[esi]
  4091c9:	(bad)  
  4091ca:	(bad)  [ebp-0x23]
  4091cd:	mov    edi,0xc3294413
  4091d2:	sahf   
  4091d3:	add    esi,DWORD PTR [edx]
  4091d5:	mov    dh,0xe
  4091d7:	ss jp  0x4091cc
  4091da:	mov    ebp,eax
  4091dc:	dec    ebp
  4091dd:	push   ecx
  4091de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091df:	mov    al,0x7b
  4091e1:	xchg   edx,eax
  4091e2:	jno    0x409175
  4091e4:	shl    BYTE PTR [edi],1
  4091e6:	push   0x142e3bb7
  4091eb:	xchg   esi,eax
  4091ec:	push   ecx
  4091ed:	mov    esi,DWORD PTR [ecx]
  4091ef:	out    0x21,eax
  4091f1:	mov    eax,ds:0xd6774eb3
  4091f6:	or     BYTE PTR [ebx],ch
  4091f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091f9:	add    BYTE PTR [edx-0x6103f6e8],dh
  4091ff:	pop    esp
  409200:	inc    edx
  409201:	inc    edi
  409202:	mov    dh,0xf1
  409204:	mov    eax,ds:0x9fd3bfa7
  409209:	cld    
  40920a:	sahf   
  40920b:	out    dx,al
  40920c:	fucomp st(5)
  40920e:	sar    BYTE PTR [edx],0xd0
  409211:	popf   
  409212:	push   cs
  409213:	fdiv   st,st(0)
  409215:	rcl    BYTE PTR [eax],0xc
  409218:	mov    cl,0x32
  40921a:	pop    esp
  40921b:	xchg   dl,ch
  40921d:	xchg   ebx,eax
  40921e:	adc    BYTE PTR [esi+0x4],cl
  409221:	mov    al,ds:0x46d05af
  409226:	cmp    ah,BYTE PTR [edi+0x31]
  409229:	pop    ds
  40922a:	outs   dx,BYTE PTR ds:[esi]
  40922b:	jmp    DWORD PTR [eax-0x7766c264]
  409231:	and    ebp,0xffffffa1
  409234:	mov    es:0x161f9145,al
  40923a:	cmc    
  40923b:	sti    
  40923c:	mov    BYTE PTR [edi],dl
  40923e:	loop   0x4092b7
  409240:	sub    BYTE PTR [ecx],dl
  409242:	push   es
  409243:	jl     0x4091dc
  409245:	fs xchg ebx,eax
  409247:	jge    0x409286
  409249:	retf   
  40924a:	pushf  
  40924b:	mov    eax,0xfe9e6e3c
  409250:	lds    esp,FWORD PTR [ecx+0x37b6577e]
  409256:	sub    DWORD PTR [edi],ecx
  409258:	lods   al,BYTE PTR ds:[esi]
  409259:	cwde   
  40925a:	imul   BYTE PTR [ebx+esi*8+0xa380528]
  409261:	adc    esi,ebp
  409263:	xor    DWORD PTR [ebp+0x2c],edi
  409266:	pop    ds
  409267:	not    BYTE PTR [edi]
  409269:	repz ja 0x40928b
  40926c:	lock mov esp,0xa10792b8
  409272:	call   0xdf1a:0x534d3c2a
  409279:	pop    edi
  40927a:	loop   0x4092f8
  40927c:	pusha  
  40927d:	imul   eax,DWORD PTR [edx],0x2e
  409280:	mov    ds:0xb56aa070,al
  409285:	mov    ch,0x9e
  409287:	out    dx,al
  409288:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409289:	cdq    
  40928a:	xchg   BYTE PTR [ebx-0x5eda2d74],ch
  409290:	pop    ebp
  409291:	mov    bh,0x42
  409293:	push   cs
  409294:	mov    eax,0x4176b1e5
  409299:	cmp    al,BYTE PTR [eax-0x6d0ce178]
  40929f:	xlat   BYTE PTR ds:[ebx]
  4092a0:	xchg   ecx,eax
  4092a1:	push   es
  4092a2:	popa   
  4092a3:	cmp    dl,BYTE PTR [ebp+edi*2-0x1b7647b4]
  4092aa:	(bad)  
  4092ab:	push   esi
  4092ac:	push   ss
  4092ad:	and    eax,0x6253f674
  4092b2:	mov    WORD PTR [ebx+0x7ddb83e9],es
  4092b8:	sbb    al,0xdb
  4092ba:	jecxz  0x4092f3
  4092bc:	pop    edx
  4092bd:	inc    ebp
  4092be:	es popa 
  4092c0:	and    DWORD PTR [eax-0x48725409],edx
  4092c6:	in     al,0x26
  4092c8:	scas   al,BYTE PTR es:[edi]
  4092c9:	sahf   
  4092ca:	imul   ecx,DWORD PTR [esi+0x6c],0x66767459
  4092d1:	and    eax,0x993af1c5
  4092d6:	push   ebp
  4092d7:	sbb    edi,eax
  4092d9:	loop   0x4092a1
  4092db:	into   
  4092dc:	cmp    bh,BYTE PTR [esi]
  4092de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092df:	loopne 0x409298
  4092e1:	xor    BYTE PTR [edx],0x35
  4092e4:	outs   dx,DWORD PTR ds:[esi]
  4092e5:	sahf   
  4092e6:	sti    
  4092e7:	enter  0xa315,0x3a
  4092eb:	xchg   DWORD PTR [edx+0x43fe469d],ebp
  4092f1:	inc    eax
  4092f2:	imul   esi,DWORD PTR [esi-0x6e038080],0x35
  4092f9:	sub    esp,DWORD PTR [edx-0x7d6a369f]
  4092ff:	and    DWORD PTR es:[ebx+edx*4-0x41],0xffffffa9
  409305:	fld    st(6)
  409307:	dec    ebp
  409308:	jp     0x409369
  40930a:	call   0x343baa14
  40930f:	call   0x60f815e0
  409314:	cmp    al,0x8f
  409316:	inc    ecx
  409317:	cmc    
  409318:	mov    DWORD PTR [edx+ebp*4],ecx
  40931b:	lds    ebp,FWORD PTR [edx]
  40931d:	push   ecx
  40931e:	fs inc si
  409321:	dec    ebp
  409322:	xor    al,0xe9
  409324:	enter  0x3911,0x66
  409328:	fmul   st,st(0)
  40932a:	sbb    dh,BYTE PTR [eax+0x1aa0b330]
  409330:	jl     0x409334
  409332:	mov    ds:0x1c7c4b49,eax
  409337:	cmp    eax,0x88f5185a
  40933c:	dec    esi
  40933d:	push   esi
  40933e:	loope  0x409301
  409340:	(bad)  
  409341:	inc    dx
  409343:	into   
  409344:	adc    DWORD PTR [esi-0x670f8dcf],ecx
  40934a:	cmc    
  40934b:	add    ah,BYTE PTR [eax-0x30]
  40934e:	push   ds
  40934f:	lds    edx,FWORD PTR [ecx-0x26f45f7]
  409355:	(bad)
  409359:	enter  0x2fc0,0xe1
  40935d:	in     eax,0xbd
  40935f:	arpl   WORD PTR [edx-0x6dc6e576],bx
  409365:	jecxz  0x4092f7
  409367:	lods   al,BYTE PTR ds:[esi]
  409368:	test   DWORD PTR [ecx-0x45f5c75d],esp
  40936e:	or     BYTE PTR [edi+edi*1+0x39],ah
  409372:	sbb    al,0xc7
  409374:	inc    ecx
  409375:	fcom   QWORD PTR [ebp+0x33f17fb4]
  40937b:	xor    al,0xaf
  40937d:	icebp  
  40937e:	test   ebx,edi
  409380:	xchg   esp,eax
  409381:	mov    dl,0x6
  409383:	cmp    edx,edi
  409385:	outs   dx,DWORD PTR ds:[esi]
  409386:	pop    ds
  409387:	mov    edi,0x509b2fe
  40938c:	stos   DWORD PTR es:[edi],eax
  40938d:	stos   DWORD PTR es:[edi],eax
  40938e:	mov    ecx,0x51a6db42
  409393:	mov    cl,0x1a
  409395:	push   0xb
  409397:	daa    
  409398:	pop    ebx
  409399:	pop    ebp
  40939a:	xchg   ebp,eax
  40939b:	fild   QWORD PTR [eax-0x5d]
  40939e:	js     0x409351
  4093a0:	jmp    0x8bd0:0x8fa640ef
  4093a7:	arpl   WORD PTR [esi],bx
  4093a9:	or     al,0x16
  4093ab:	inc    edi
  4093ac:	lahf   
  4093ad:	pop    ss
  4093ae:	rcl    BYTE PTR [esi+0x3d0d8b1d],cl
  4093b4:	pop    ecx
  4093b5:	mov    ds:0x93bf8bf4,eax
  4093ba:	inc    esp
  4093bb:	retf   0x3c65
  4093be:	inc    eax
  4093bf:	jmp    0x6466:0xb47be6d9
  4093c6:	cdq    
  4093c7:	lods   al,BYTE PTR ds:[esi]
  4093c8:	mov    ch,0xac
  4093ca:	pushf  
  4093cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093cc:	xor    esi,ecx
  4093ce:	add    DWORD PTR ds:0xddef97de,esp
  4093d4:	adc    eax,0xe9bad55c
  4093d9:	ret    
  4093da:	jg     0x4093e6
  4093dc:	(bad)  
  4093dd:	xchg   esp,eax
  4093de:	pop    esp
  4093df:	jo     0x40940f
  4093e1:	fisub  WORD PTR [eax+0x29]
  4093e4:	or     ebx,esp
  4093e6:	jnp    0x409394
  4093e8:	push   ebp
  4093e9:	div    DWORD PTR [edx-0x34c0c433]
  4093ef:	xchg   ebx,eax
  4093f0:	sub    BYTE PTR [ecx],ah
  4093f2:	clc    
  4093f3:	cli    
  4093f4:	fadd   QWORD PTR [edx-0x7b]
  4093f7:	or     esp,DWORD PTR [edx-0x1453911f]
  4093fd:	push   ebx
  4093fe:	or     esp,edx
  409400:	dec    ecx
  409401:	sub    al,0x8b
  409403:	retf   0x894
  409406:	arpl   WORD PTR [edi+0x6b],di
  409409:	add    eax,0xfae877af
  40940e:	daa    
  40940f:	pop    ss
  409410:	scas   al,BYTE PTR es:[edi]
  409411:	adc    eax,0x4135c5e8
  409416:	out    0x92,al
  409418:	jae    0x4093bd
  40941a:	addr16 dec ecx
  40941c:	adc    BYTE PTR [ebp-0x1a7c10ab],dl
  409422:	fcomp  st(3)
  409424:	dec    esi
  409425:	sahf   
  409426:	mov    ds:0x1f9073fc,al
  40942b:	jg     0x4093af
  40942d:	lahf   
  40942e:	es int 0x21
  409431:	pop    edx
  409432:	out    dx,eax
  409433:	dec    edx
  409434:	push   edi
  409435:	pop    ebx
  409436:	imul   ecx,edi,0xead6174
  40943c:	lea    ebx,[eax]
  40943e:	lahf   
  40943f:	mov    esp,0xc095cdc0
  409444:	and    dl,BYTE PTR [ecx+0x31]
  409447:	push   ebp
  409448:	imul   esp,DWORD PTR [esi+0x57295085],0xd360c9da
  409452:	mov    ds:0x4276429d,eax
  409457:	push   es
  409458:	inc    edx
  409459:	mov    al,al
  40945b:	and    bh,BYTE PTR [edi+0xf]
  40945e:	ss ret 
  409460:	mov    al,0x3
  409462:	pop    ebp
  409463:	pop    ecx
  409464:	xor    ch,BYTE PTR [edi+0x0]
  409467:	repnz fbstp TBYTE PTR [ecx+0x1059385d]
  40946e:	out    dx,al
  40946f:	pop    edi
  409470:	push   ecx
  409471:	mov    esi,0x7598f8bc
  409476:	mov    ch,0x5
  409478:	repnz mov esi,0xb7f591f7
  40947e:	jl     0x409471
  409480:	jmp    0x409463
  409482:	scas   eax,DWORD PTR es:[edi]
  409483:	cmp    eax,0xd6e8580f
  409488:	popa   
  409489:	push   0xe7fdf10e
  40948e:	outs   dx,DWORD PTR ds:[esi]
  40948f:	push   cs
  409490:	imul   esi,DWORD PTR [ebx],0x89df4937
  409496:	or     BYTE PTR [edx-0x44],ah
  409499:	jge    0x40946c
  40949b:	xchg   edx,eax
  40949c:	gs ins BYTE PTR es:[edi],dx
  40949e:	dec    ebp
  40949f:	out    0xb0,al
  4094a1:	sub    BYTE PTR [edx-0x3c1fda],0x3
  4094a8:	xor    al,BYTE PTR [edi+0x55]
  4094ab:	sub    al,0x35
  4094ad:	mov    ecx,0xb40b540f
  4094b2:	std    
  4094b3:	fdiv   DWORD PTR [edi]
  4094b5:	in     eax,dx
  4094b6:	inc    ebx
  4094b7:	xor    edx,DWORD PTR [edi+0x7c]
  4094ba:	push   ebp
  4094bb:	jmp    FWORD PTR [esi-0xd]
  4094be:	stc    
  4094bf:	frstor [ebp-0x28]
  4094c2:	sub    edx,DWORD PTR [ebx]
  4094c4:	hlt    
  4094c5:	dec    edi
  4094c6:	mov    al,0xc9
  4094c8:	jge    0x409496
  4094ca:	mov    ch,0x3f
  4094cc:	fadd   DWORD PTR [ebx+0x5a940d50]
  4094d2:	(bad)  
  4094d3:	aaa    
  4094d4:	cmp    al,0x11
  4094d6:	nop
  4094d7:	cmp    ecx,DWORD PTR [ecx+0x58db6687]
  4094dd:	pop    edi
  4094de:	jg     0x4094b7
  4094e0:	add    ecx,eax
  4094e2:	test   DWORD PTR [edi+ebp*1+0x67],0x91511fb1
  4094ea:	inc    edi
  4094eb:	mov    eax,ds:0x9931bb09
  4094f0:	lods   al,BYTE PTR ds:[esi]
  4094f1:	loopne 0x4094d3
  4094f3:	or     esp,ebp
  4094f5:	das    
  4094f6:	fcom   st(5)
  4094f8:	mov    ch,0x76
  4094fa:	mov    esi,0x2a779174
  4094ff:	inc    esp
  409500:	jnp    0x409492
  409502:	mov    eax,ds:0x90c7b04e
  409507:	add    ebx,edx
  409509:	dec    esp
  40950a:	xor    BYTE PTR [esp+ebp*1],al
  40950d:	stc    
  40950e:	pop    edi
  40950f:	lods   al,BYTE PTR ds:[esi]
  409510:	or     BYTE PTR [edx-0x27703349],0x67
  409517:	jp     0x4094fb
  409519:	imul   esi,ecx,0x1a
  40951c:	test   eax,0xda6b5d2d
  409522:	lods   eax,DWORD PTR ds:[esi]
  409523:	pop    esp
  409524:	in     eax,0xdf
  409526:	fadd   st,st(1)
  409528:	jmp    0x4b5c:0xc6bdec9a
  40952f:	daa    
  409530:	fcom   QWORD PTR [esi+0x14]
  409533:	ds rol ah,1
  409536:	dec    esp
  409537:	mov    ecx,0x1cf431b
  40953c:	loopne 0x409599
  40953e:	inc    esp
  40953f:	mov    DWORD PTR [esi-0x5ae1ee89],ebp
  409545:	cdq    
  409546:	iret   
  409547:	jecxz  0x409587
  409549:	pushf  
  40954a:	aas    
  40954b:	lahf   
  40954c:	sub    bl,BYTE PTR gs:[edx]
  40954f:	pop    esp
  409550:	and    edx,edx
  409552:	mov    bh,0x56
  409554:	adc    eax,0x26d486b9
  409559:	mov    dh,0xb3
  40955b:	push   edi
  40955c:	xor    eax,0xe58a87a7
  409561:	mov    DWORD PTR [edx+0x4d76fd8f],esp
  409567:	sahf   
  409568:	outs   dx,DWORD PTR ds:[esi]
  409569:	(bad)  
  40956b:	pop    ds
  40956c:	mov    bl,0x37
  40956e:	mov    ds:0x5347ba0f,al
  409573:	inc    ebx
  409574:	jmp    0x4095f4
  409576:	mov    bh,0xb8
  409578:	in     al,dx
  409579:	mov    BYTE PTR [ebp+0x13],ch
  40957c:	pop    ebp
  40957d:	and    eax,0xffbc20
  409582:	sbb    edx,DWORD PTR [esi+0x3]
  409585:	fisubr DWORD PTR [ebp-0x48ac4598]
  40958b:	mov    ebp,0xf77d06f7
  409590:	xchg   bh,dh
  409592:	push   ebx
  409593:	adc    BYTE PTR [eax],dl
  409595:	retf   0x50a2
  409598:	sub    al,0xcc
  40959a:	mov    ch,0xed
  40959c:	mov    ds:0x7679ecc2,al
  4095a1:	sub    BYTE PTR [esi+0x61b77fcf],dh
  4095a7:	mov    bl,0x79
  4095a9:	mov    eax,0x7ce801de
  4095ae:	adc    bh,BYTE PTR [edi-0x3e37e93b]
  4095b4:	test   al,0xe2
  4095b6:	sbb    eax,0xb0bbfc70
  4095bb:	add    al,0xe4
  4095bd:	imul   DWORD PTR [esi-0x18]
  4095c0:	mov    ecx,0xf63bdb7a
  4095c5:	repz xchg ebp,eax
  4095c7:	rol    cl,0x62
  4095ca:	pop    edx
  4095cb:	clc    
  4095cc:	push   0x53ef8d9d
  4095d1:	ins    DWORD PTR es:[edi],dx
  4095d2:	cmp    DWORD PTR [edx+0x13],0xffffff91
  4095d6:	popa   
  4095d7:	pop    edi
  4095d8:	xchg   ebx,eax
  4095d9:	ror    DWORD PTR [edx+edi*4+0x6e0dfd6a],0xbc
  4095e1:	xchg   DWORD PTR [edi-0x21],edx
  4095e4:	test   esi,edx
  4095e6:	cmp    bl,al
  4095e8:	xor    cl,cl
  4095ea:	aaa    
  4095eb:	ins    BYTE PTR es:[edi],dx
  4095ec:	(bad)  
  4095ee:	mov    ecx,0xd0d1eaa8
  4095f3:	aam    0x9a
  4095f5:	sbb    eax,0x883d652e
  4095fa:	ret    0x81d1
  4095fd:	push   cs
  4095fe:	and    ah,BYTE PTR [ecx+0x1c297066]
  409604:	outs   dx,DWORD PTR ds:[esi]
  409605:	and    BYTE PTR [esi],ch
  409607:	popf   
  409608:	xchg   DWORD PTR [ecx+edi*1+0x17],edx
  40960c:	(bad)
  409610:	rcl    DWORD PTR [ebx-0x5afdce14],1
  409616:	adc    al,0xb3
  409618:	xor    al,0xa4
  40961b:	test   al,0x38
  40961d:	jb     0x4095c7
  40961f:	enter  0x7bf6,0x5e
  409623:	inc    esi
  409624:	mov    ch,0xfa
  409626:	fldenv [eax]
  409628:	push   esp
  409629:	jg     0x409669
  40962b:	xor    cl,ah
  40962d:	mov    ds:0x80571ced,eax
  409632:	inc    edi
  409633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409634:	mov    edx,0xc7e88a27
  409639:	sti    
  40963a:	adc    al,0xe6
  40963c:	je     0x409685
  40963e:	fiadd  DWORD PTR [esi]
  409640:	imul   DWORD PTR [ebp+0x5f]
  409643:	add    ecx,DWORD PTR [edx-0xdad91e0]
  409649:	fdiv   DWORD PTR [esi+eax*2]
  40964c:	popf   
  40964d:	fdivr  DWORD PTR [esi-0x7c4ada06]
  409653:	jl     0x409664
  409655:	(bad)  
  409656:	std    
  409657:	adc    eax,0x3ef16abe
  40965c:	push   esp
  40965d:	xchg   ebp,eax
  40965e:	xor    DWORD PTR [ebx+0xe],ebx
  409661:	pop    edx
  409662:	push   edi
  409663:	out    0x78,eax
  409665:	mov    ebp,0xdf17307b
  40966a:	and    eax,0xde3aa24c
  40966f:	repz mov ebx,0xef2ed738
  409675:	cmp    bl,BYTE PTR [esi+0x3c2d9bea]
  40967b:	cmp    eax,0x71ead0e0
  409680:	into   
  409681:	call   0xcf35345b
  409686:	push   esi
  409687:	retf   
  409688:	fs lahf 
  40968a:	in     al,0x84
  40968c:	pop    ecx
  40968d:	in     eax,dx
  40968e:	or     al,0x61
  409690:	jmp    0x4096c8
  409692:	call   0x4cd0:0x8c959176
  409699:	dec    edi
  40969a:	bound  eax,QWORD PTR [ebx+ecx*1]
  40969d:	push   ss
  40969e:	lods   al,BYTE PTR ds:[esi]
  40969f:	add    al,0x49
  4096a1:	mov    DWORD PTR [eax],eax
  4096a3:	xor    al,BYTE PTR [eax+eiz*4]
  4096a6:	sub    dh,bh
  4096a8:	pusha  
  4096a9:	aam    0x22
  4096ab:	pop    ss
  4096ac:	ja     0x4096b0
  4096ae:	mov    edx,0x19847227
  4096b3:	imul   ebp,edi,0x3d
  4096b6:	mov    eax,0x8a52149e
  4096bb:	or     ebx,edx
  4096bd:	adc    al,0x78
  4096bf:	sbb    ecx,DWORD PTR [eax+0x215dba46]
  4096c5:	jns    0x8f313678
  4096cb:	mul    ecx
  4096cd:	xchg   edx,eax
  4096ce:	jge    0x409700
  4096d0:	push   ebp
  4096d1:	push   ss
  4096d2:	mov    edx,0x393e28a7
  4096d7:	sahf   
  4096d8:	xlat   BYTE PTR ds:[ebx]
  4096d9:	fidiv  DWORD PTR [edx+edx*8]
  4096dc:	inc    ecx
  4096dd:	int    0x49
  4096df:	push   ecx
  4096e0:	jno    0x4096e1
  4096e2:	into   
  4096e3:	arpl   cx,ax
  4096e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e6:	dec    edi
  4096e7:	(bad)  
  4096e8:	test   ebx,0xe3b95dd6
  4096ee:	xchg   ebp,eax
  4096ef:	mov    dl,0x23
  4096f1:	in     al,dx
  4096f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096f3:	xchg   ecx,esp
  4096f5:	push   esp
  4096f6:	jne    0x4096c3
  4096f8:	arpl   WORD PTR ds:0x91876012,sp
  4096fe:	(bad)  
  409700:	adc    ch,dl
  409702:	and    DWORD PTR ds:0xb8bab8d1,0xffffff81
  409709:	dec    ebp
  40970a:	pop    ecx
  40970b:	sbb    DWORD PTR [ecx-0xf],ecx
  40970e:	jmp    0xbc23f89a
  409713:	mov    ecx,0xa3597651
  409718:	(bad)  
  409719:	lock push 0x69
  40971c:	adc    DWORD PTR [edi],esi
  40971e:	cmc    
  40971f:	test   DWORD PTR [ecx-0x45],edi
  409722:	inc    ecx
  409723:	add    al,BYTE PTR [esp+ebp*8+0x5a984aff]
  40972a:	xchg   esi,eax
  40972b:	std    
  40972c:	dec    esp
  40972d:	rol    DWORD PTR [esp+ecx*4],0xd0
  409731:	cmp    DWORD PTR [edi+0x48],0xf9807458
  409738:	stc    
  409739:	dec    DWORD PTR ds:0xc5eb3b13
  40973f:	test   BYTE PTR [edi+0x6f],0x5
  409743:	shl    DWORD PTR [esi+0x6a324528],0xe6
  40974a:	xor    esp,DWORD PTR [edx+0x7c]
  40974d:	sar    cl,cl
  40974f:	inc    ebx
  409750:	xchg   ecx,eax
  409751:	jmp    0x4096e1
  409753:	jbe    0x409793
  409755:	fs dec edx
  409757:	fwait
  409758:	pop    ss
  409759:	and    BYTE PTR [esi+0x25],ch
  40975c:	push   esp
  40975d:	pop    es
  40975e:	int    0x1f
  409760:	cli    
  409761:	fwait
  409762:	into   
  409763:	loopne 0x40978d
  409765:	sbb    ecx,DWORD PTR [eax+0x66]
  409768:	or     bh,BYTE PTR [ebx]
  40976a:	xchg   ebx,eax
  40976b:	inc    edi
  40976c:	mov    eax,ds:0xb0ce304a
  409771:	or     DWORD PTR [esi],eax
  409773:	in     eax,dx
  409774:	jl     0x4097df
  409776:	repz push ebx
  409778:	mov    eax,0xf2d79e2a
  40977d:	jecxz  0x409707
  40977f:	adc    DWORD PTR [esi-0x614cdca0],esp
  409785:	mov    ah,0xbe
  409787:	in     al,dx
  409788:	pusha  
  409789:	lock add ebx,DWORD PTR [ebp-0x17]
  40978d:	add    bl,BYTE PTR [ecx]
  40978f:	sbb    eax,0x5fb789bb
  409794:	repz dec ebp
  409796:	cmp    eax,0xf40427b2
  40979b:	int3   
  40979c:	(bad)  
  40979d:	fld    DWORD PTR [ecx+ebx*4]
  4097a0:	jmp    0x45cd:0x4bbccd9f
  4097a7:	and    eax,0xeef9e693
  4097ac:	mov    al,ds:0x89110ecf
  4097b1:	push   0xf251ad6e
  4097b6:	lods   eax,DWORD PTR ds:[esi]
  4097b7:	xor    cl,cl
  4097b9:	retf   0x50c1
  4097bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097bd:	out    dx,al
  4097be:	fimul  WORD PTR [esi+0x27]
  4097c1:	mov    ebp,0x99e31f99
  4097c6:	add    eax,DWORD PTR [ecx-0x56c80739]
  4097cc:	sbb    ch,BYTE PTR [edx+0x78]
  4097cf:	fistp  WORD PTR [edx-0x19fa3d7f]
  4097d5:	xor    al,0xb8
  4097d7:	xor    edi,ecx
  4097d9:	ret    
  4097da:	inc    ecx
  4097db:	push   edx
  4097dc:	bound  ebp,QWORD PTR [esp+edx*1-0x2f]
  4097e0:	rcr    DWORD PTR [edi-0x37c621c6],1
  4097e6:	jp     0x409835
  4097e8:	clc    
  4097e9:	or     ch,ah
  4097eb:	dec    esp
  4097ec:	jp     0x4097d7
  4097ee:	dec    ebp
  4097ef:	cmp    BYTE PTR [edi+ebp*1+0x33],ch
  4097f3:	sub    eax,0xc427d21c
  4097f8:	repz inc ebx
  4097fa:	loope  0x4097fa
  4097fc:	mov    bh,0x6b
  4097fe:	fwait
  4097ff:	sub    DWORD PTR [ebx+ebp*2+0x31f6641e],eax
  409806:	scas   al,BYTE PTR es:[edi]
  409807:	lock jnp 0x4097d3
  40980a:	js     0x40978d
  40980c:	sub    eax,0x4f
  40980f:	ffree  st(0)
  409811:	adc    edi,DWORD PTR [ebp+0x2d]
  409814:	jge    0x4097b1
  409816:	cli    
  409817:	pop    edi
  409818:	sub    bl,BYTE PTR [edx+eiz*2-0xe9abd8f]
  40981f:	pop    esp
  409820:	push   edi
  409821:	inc    edi
  409822:	int3   
  409823:	xor    al,0x40
  409825:	in     al,dx
  409826:	and    BYTE PTR [edx+0x11],0xe8
  40982a:	into   
  40982b:	test   al,0x12
  40982d:	dec    ebx
  40982e:	cs add esi,ebp
  409831:	xchg   edx,eax
  409832:	pop    edi
  409833:	mov    edi,0xc84fca4c
  409838:	es adc al,0x73
  40983b:	sbb    al,0x8e
  40983d:	in     eax,0x10
  40983f:	inc    esi
  409840:	xchg   cl,ah
  409842:	fstp   TBYTE PTR [eax+0x289323d9]
  409848:	add    DWORD PTR [ebp+0x2c926f1e],eax
  40984e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40984f:	fld    TBYTE PTR cs:[edi+0x1d]
  409853:	adc    DWORD PTR [ebp+0x6a],esi
  409856:	mov    WORD PTR [ebx+0x5b],gs
  409859:	mov    eax,ds:0xe567df81
  40985e:	adc    eax,0x614d921f
  409863:	or     DWORD PTR [eax-0x3c],0x4f97fe98
  40986a:	test   esp,eax
  40986c:	dec    edx
  40986d:	sbb    DWORD PTR [ebx+0x58bfe99b],ecx
  409873:	and    al,bl
  409875:	loop   0x409855
  409877:	adc    DWORD PTR [ebx-0x5b78d523],ebp
  40987d:	add    DWORD PTR [ecx-0x2eeb7c91],ebp
  409883:	(bad)  
  409885:	fld    TBYTE PTR [esi-0x757802d0]
  40988b:	retf   
  40988c:	dec    esp
  40988d:	mov    ds:0x7a720d7e,al
  409892:	cmp    eax,0xe2f060b7
  409897:	or     eax,0xb1fbdcfa
  40989c:	test   DWORD PTR [ecx-0x4c4a42a4],esp
  4098a2:	sub    BYTE PTR [ecx],al
  4098a4:	and    al,dh
  4098a6:	push   ds
  4098a7:	mov    ebx,0x78626041
  4098ac:	cmp    DWORD PTR [ebx+0x5f],0xa7200328
  4098b3:	cld    
  4098b4:	inc    edi
  4098b5:	mov    dl,0x77
  4098b7:	pop    ss
  4098b8:	loopne 0x409883
  4098ba:	fnstenv [ebx+0xb7f7404]
  4098c0:	iret   
  4098c1:	pop    es
  4098c2:	pop    esi
  4098c3:	pop    ebx
  4098c4:	fnstenv [eax+0x1b37ed12]
  4098ca:	test   esi,eax
  4098cc:	sbb    al,cl
  4098ce:	adc    BYTE PTR [edx+0x55],0xb1
  4098d2:	jmp    DWORD PTR ds:0x6d3120d2
  4098d8:	es jle 0x4098f1
  4098db:	push   edi
  4098dc:	jo     0x40992f
  4098de:	ret    0x3cb9
  4098e1:	loop   0x409948
  4098e3:	pop    esp
  4098e4:	jle    0x4098f9
  4098e6:	(bad)  
  4098e7:	nop
  4098e8:	or     esp,0xbaf197ea
  4098ee:	inc    ecx
  4098ef:	sbb    al,0x77
  4098f1:	xchg   eax,esi
  4098f3:	ds icebp 
  4098f5:	pop    DWORD PTR [ecx+edi*2]
  4098f8:	mov    al,0x98
  4098fa:	mov    eax,edi
  4098fc:	and    al,0x95
  4098fe:	(bad)  
  4098ff:	fistp  DWORD PTR ds:0xc427af80
  409905:	dec    ebp
  409906:	stos   BYTE PTR es:[edi],al
  409907:	sub    eax,0x51376881
  40990c:	jne    0x4098fb
  40990e:	push   0xffffffc1
  409910:	(bad)  
  409911:	jns    0x409951
  409913:	shr    DWORD PTR [eax],0x87
  409916:	(bad)  
  409917:	fdivr  DWORD PTR [esi]
  409919:	add    DWORD PTR ds:0xeb680c80,edi
  40991f:	inc    eax
  409920:	cmp    eax,0xde12a23d
  409925:	outs   dx,BYTE PTR ds:[esi]
  409926:	adc    eax,0xfb628fe1
  40992c:	es dec ecx
  40992e:	sbb    eax,0x20176853
  409933:	push   0x26f0a702
  409938:	js     0x4099b7
  40993a:	mov    ebx,0x9b09035a
  40993f:	dec    ebx
  409940:	test   eax,0x52d91732
  409945:	stc    
  409946:	inc    esp
  409947:	mov    cl,0xc5
  409949:	inc    esp
  40994a:	sbb    al,0x23
  40994c:	daa    
  40994d:	ins    DWORD PTR es:[edi],dx
  40994e:	cmp    DWORD PTR [esi+0x70],edi
  409951:	adc    eax,0xf0dfb1f9
  409956:	or     al,0x98
  409958:	mov    esp,0xdd052aa5
  40995d:	mov    eax,0xf8489375
  409962:	pop    edx
  409963:	xor    DWORD PTR [edx-0x6e],0x11
  409967:	cmp    al,0xcf
  409969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996a:	aaa    
  40996b:	cmp    dh,BYTE PTR [edx+ebx*2+0x58bdab68]
  409972:	dec    ebx
  409973:	pushf  
  409974:	mov    ah,0x6b
  409976:	add    al,0x41
  409978:	xchg   ecx,eax
  409979:	mov    eax,ds:0x67704399
  40997e:	leave  
  40997f:	shr    DWORD PTR [edx-0x3a],1
  409982:	sub    ah,ah
  409984:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409985:	pop    ebx
  409986:	mov    ebp,0x78ba71cc
  40998b:	(bad)  
  40998c:	sub    DWORD PTR [ebx],edi
  40998e:	push   eax
  40998f:	cdq    
  409990:	(bad)  
  409991:	imul   ecx,DWORD PTR [ebp+0x16908afa],0xffffffde
  409998:	dec    ecx
  409999:	outs   dx,DWORD PTR ds:[esi]
  40999a:	(bad)  
  40999b:	sbb    BYTE PTR [ecx-0x7347be97],dl
  4099a1:	mov    eax,ds:0x13c79201
  4099a6:	ror    al,cl
  4099a8:	sbb    DWORD PTR [ecx],ebp
  4099aa:	jmp    0x8d77:0x782743a0
  4099b1:	rol    DWORD PTR [edi+0x3e],cl
  4099b4:	lods   eax,DWORD PTR ds:[esi]
  4099b5:	jmp    0x4099e7
  4099b7:	pop    esi
  4099b8:	mov    bl,0x4a
  4099ba:	add    al,0x9b
  4099bc:	mov    WORD PTR [edx],fs
  4099be:	retf   
  4099bf:	pusha  
  4099c0:	mov    cl,0x19
  4099c2:	and    al,0x63
  4099c4:	loope  0x409a42
  4099c6:	gs daa 
  4099c8:	inc    edx
  4099c9:	xchg   esp,eax
  4099ca:	mul    DWORD PTR [edi-0x1b]
  4099cd:	xchg   edi,eax
  4099ce:	or     al,0x55
  4099d0:	retf   
  4099d1:	xor    eax,0xcd4d5d00
  4099d6:	cdq    
  4099d7:	pushf  
  4099d8:	lds    esi,FWORD PTR [eax+esi*4-0x6c]
  4099dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099de:	enter  0x9cc6,0x14
  4099e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e3:	mov    bl,al
  4099e5:	push   esi
  4099e6:	sbb    eax,0xfb6f1fb3
  4099eb:	pop    es
  4099ec:	push   ebx
  4099ed:	(bad)  
  4099ee:	push   ds
  4099ef:	jp     0x4099b2
  4099f1:	jno    0x409a10
  4099f3:	clc    
  4099f4:	xchg   BYTE PTR [ebp+0x5],dl
  4099f7:	imul   ecx,DWORD PTR [edi],0x59
  4099fa:	mov    WORD PTR [esi],cs
  4099fc:	and    edi,DWORD PTR [edx]
  4099fe:	jo     0x409a1c
  409a00:	(bad)  
  409a01:	fistp  WORD PTR [ebx]
  409a03:	inc    edi
  409a04:	push   esp
  409a05:	scas   eax,DWORD PTR es:[edi]
  409a06:	adc    edi,edi
  409a08:	push   esp
  409a09:	adc    eax,0x9ab4c52a
  409a0e:	push   ecx
  409a0f:	das    
  409a10:	push   0x98fa3647
  409a15:	in     eax,0xd1
  409a17:	test   BYTE PTR [esi-0x5a],bh
  409a1a:	or     DWORD PTR [esi],eax
  409a1c:	jecxz  0x4099dd
  409a1e:	fwait
  409a1f:	icebp  
  409a20:	(bad)  
  409a21:	aas    
  409a22:	lea    edi,[ecx]
  409a24:	inc    edx
  409a25:	inc    ebp
  409a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a27:	sti    
  409a28:	mov    ds:0xb010a010,al
  409a2d:	pop    ecx
  409a2e:	push   ecx
  409a2f:	jle    0x409aa9
  409a31:	mov    esi,0x606aae35
  409a36:	outs   dx,BYTE PTR ds:[esi]
  409a37:	dec    eax
  409a38:	int    0x87
  409a3a:	mov    bl,0x15
  409a3c:	fldenv [esi+0x46]
  409a3f:	and    DWORD PTR [edi+eiz*2],esi
  409a42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a43:	inc    esi
  409a44:	mov    cs,esp
  409a46:	xchg   esp,eax
  409a47:	ja     0x409a0e
  409a49:	push   esp
  409a4a:	repz enter 0xabd1,0x81
  409a4f:	dec    ebp
  409a50:	add    bh,BYTE PTR [ebp+0x38]
  409a53:	call   0xd1c4:0x2d7a2b7
  409a5a:	sti    
  409a5b:	ret    0xe694
  409a5e:	sti    
  409a5f:	gs lock push ds
  409a62:	mov    esp,DWORD PTR ds:0xdaf31277
  409a68:	hlt    
  409a69:	sti    
  409a6a:	add    al,0x86
  409a6c:	jns    0x409a38
  409a6e:	push   ebx
  409a6f:	rcr    DWORD PTR [edi+0x76],1
  409a72:	xchg   esp,eax
  409a73:	push   edi
  409a74:	loope  0x409a59
  409a76:	or     al,BYTE PTR ds:0xe79bb406
  409a7c:	loopne 0x409add
  409a7e:	add    eax,0xe3f9347
  409a83:	sbb    al,0x89
  409a85:	bound  edi,QWORD PTR [ecx+0x43]
  409a88:	sub    cl,BYTE PTR [esi-0x6e99722e]
  409a8e:	push   edx
  409a8f:	mov    eax,ds:0xa6c51f13
  409a94:	or     BYTE PTR [eax+0x63],bh
  409a97:	push   eax
  409a98:	enter  0x6487,0x34
  409a9c:	mov    esi,DWORD PTR [eax-0x5e]
  409a9f:	daa    
  409aa0:	scas   eax,DWORD PTR es:[edi]
  409aa1:	es aad 0x95
  409aa4:	xchg   esp,eax
  409aa5:	mov    esp,0x604b1274
  409aaa:	sub    DWORD PTR [eax-0x205304d0],eax
  409ab0:	add    BYTE PTR [eax+0x30],dh
  409ab3:	aas    
  409ab4:	ror    DWORD PTR [esi+esi*8],1
  409ab7:	mov    esp,0x77fd0136
  409abc:	inc    eax
  409abd:	or     DWORD PTR [esi+0x72],ebx
  409ac0:	fadd   DWORD PTR [eax+0x20]
  409ac3:	loope  0x409a5c
  409ac5:	je     0x409afc
  409ac7:	jae    0x409b11
  409ac9:	jno    0x409b2e
  409acb:	pop    ebp
  409acc:	mov    eax,0x7ee60146
  409ad1:	jmp    0x409ab9
  409ad3:	cwde   
  409ad4:	add    BYTE PTR [eax+ebp*2+0x4a],bh
  409ad8:	adc    BYTE PTR [edx],0x7a
  409adb:	push   ecx
  409adc:	inc    edi
  409add:	aad    0x6c
  409adf:	in     al,dx
  409ae0:	test   eax,0x812ca86d
  409ae5:	sti    
  409ae6:	aaa    
  409ae7:	jg     0x409a8f
  409ae9:	mov    ebx,0x170a06fc
  409aee:	fsub   st,st(1)
  409af0:	jo     0x409aff
  409af2:	mov    esp,0x56d1f8bb
  409af7:	std    
  409af8:	sti    
  409af9:	outs   dx,DWORD PTR ds:[esi]
  409afa:	mov    edx,0x6823e294
  409aff:	push   ebp
  409b00:	clc    
  409b01:	repnz loope 0x409a91
  409b04:	dec    esi
  409b05:	mov    WORD PTR [edi+edi*2-0x31],gs
  409b09:	std    
  409b0a:	xor    DWORD PTR [esi-0x29],esp
  409b0d:	sub    BYTE PTR [edi],bl
  409b0f:	and    BYTE PTR [ebx],bh
  409b11:	lods   eax,DWORD PTR ds:[esi]
  409b12:	pop    ss
  409b13:	and    BYTE PTR [edi],bl
  409b15:	or     eax,0xe1100cf0
  409b1a:	sbb    dh,0x58
  409b1d:	(bad)
  409b21:	adc    esi,DWORD PTR [ecx+0x6b]
  409b24:	cld    
  409b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b26:	outs   dx,BYTE PTR ds:[esi]
  409b27:	iret   
  409b28:	jle    0x409b8a
  409b2a:	retf   0xea24
  409b2d:	or     edi,DWORD PTR [edx+0x51]
  409b30:	mov    BYTE PTR [edi+0x62],bh
  409b33:	push   edi
  409b34:	sub    BYTE PTR ds:0xcd039c57,0xa7
  409b3b:	push   edi
  409b3c:	daa    
  409b3d:	iret   
  409b3e:	sub    edi,ecx
  409b40:	jno    0x409add
  409b42:	push   eax
  409b43:	xchg   DWORD PTR [edi*2+0xa877003],ebx
  409b4a:	push   esp
  409b4b:	int    0xc4
  409b4d:	retf   0x83e5
  409b50:	mov    esi,0x8fa1d561
  409b55:	adc    eax,0x8bdbd0c1
  409b5a:	xchg   BYTE PTR [esi+eiz*4+0x2ac8f192],dl
  409b61:	mov    dh,0x16
  409b63:	adc    ebp,DWORD PTR [edx]
  409b65:	adc    al,0x52
  409b67:	jp     0x409b93
  409b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b6a:	adc    eax,0x75cbf7d2
  409b6f:	stc    
  409b70:	xor    al,0x68
  409b72:	ror    BYTE PTR [esi+ebx*1-0x5a],cl
  409b76:	push   eax
  409b77:	retf   0x5e69
  409b7a:	inc    edx
  409b7b:	out    dx,al
  409b7c:	mov    bl,bh
  409b7e:	jecxz  0x409bba
  409b80:	sbb    DWORD PTR [eax+0x37],0x44
  409b84:	or     dh,bl
  409b86:	rol    DWORD PTR [ecx],0xa6
  409b89:	popf   
  409b8a:	and    al,0x3
  409b8c:	xor    BYTE PTR [esi+edx*8+0x3d0c0f43],0xa0
  409b94:	add    BYTE PTR [esp+ecx*1],dl
  409b97:	pop    esi
  409b98:	icebp  
  409b99:	rcl    ecx,1
  409b9b:	jo     0xb74d6bb5
  409ba1:	call   0x2f4b:0xdd70c21c
  409ba8:	mov    al,ds:0x53968dfb
  409bad:	dec    esi
  409bae:	out    dx,eax
  409baf:	leave  
  409bb0:	mov    bh,0xae
  409bb2:	inc    ecx
  409bb3:	ret    0x74fc
  409bb6:	pop    ds
  409bb7:	jno    0x409b60
  409bb9:	ss sbb eax,0x8ee93168
  409bbf:	push   es
  409bc0:	in     al,dx
  409bc1:	(bad)  
  409bc2:	fsub   DWORD PTR [edi]
  409bc4:	xchg   ebp,eax
  409bc5:	fucomip st,st(2)
  409bc7:	nop
  409bc8:	lock dec ecx
  409bca:	shl    ch,1
  409bcc:	sahf   
  409bcd:	push   edi
  409bce:	loopne 0x409c16
  409bd0:	or     al,0x93
  409bd2:	inc    edx
  409bd3:	add    DWORD PTR [ebp-0x660b66b4],edi
  409bd9:	rcl    DWORD PTR [eax+ebx*1-0x51500f4a],cl
  409be0:	xor    eax,edx
  409be2:	pop    ss
  409be3:	xchg   BYTE PTR [edi+ecx*2],dh
  409be6:	mov    ds:0x3e343bce,eax
  409beb:	in     al,0x3e
  409bed:	inc    ecx
  409bee:	aas    
  409bef:	jnp    0x409bbb
  409bf1:	je     0x409bb9
  409bf3:	push   edi
  409bf4:	loope  0x409c5f
  409bf6:	fbld   TBYTE PTR [ecx-0xd52410b]
  409bfc:	ss sub al,dh
  409bff:	sub    dh,BYTE PTR [edx+0x58]
  409c02:	mov    esi,DWORD PTR [eax+0x4a]
  409c05:	es out dx,eax
  409c07:	enter  0x98d9,0x3f
  409c0b:	(bad)
  409c0e:	inc    eax
  409c0f:	jne    0x409bc6
  409c11:	adc    ebp,esi
  409c13:	outs   dx,BYTE PTR ds:[esi]
  409c14:	mov    al,ds:0x52b782e
  409c19:	scas   al,BYTE PTR es:[edi]
  409c1a:	rcl    dh,1
  409c1c:	and    BYTE PTR [edi],cl
  409c1e:	imul   edx,DWORD PTR [edx-0x4165030e],0x45
  409c25:	push   cs
  409c26:	loope  0x409c03
  409c28:	inc    edx
  409c29:	pop    edi
  409c2a:	xchg   esi,eax
  409c2b:	cmp    DWORD PTR [edi],edi
  409c2d:	into   
  409c2e:	inc    esi
  409c2f:	stc    
  409c30:	and    BYTE PTR [esi-0x6cdade6d],dh
  409c36:	dec    ecx
  409c37:	cld    
  409c38:	push   0x8cf4ad6f
  409c3d:	out    dx,eax
  409c3e:	ret    
  409c3f:	pop    eax
  409c40:	fild   WORD PTR [edi-0x2b]
  409c43:	xchg   ebp,eax
  409c44:	jnp    0x409c43
  409c46:	jg     0x409ca6
  409c48:	das    
  409c49:	sub    edi,DWORD PTR [esi-0x1cd2f3f7]
  409c4f:	add    eax,DWORD PTR [edx-0x53]
  409c52:	aam    0x32
  409c54:	in     al,0xbb
  409c56:	mov    ecx,DWORD PTR [ecx+ecx*8+0x46]
  409c5a:	fidivr DWORD PTR [edx+0x131ec6b4]
  409c60:	dec    esi
  409c61:	sub    DWORD PTR [ebp+edx*1+0x78],edi
  409c65:	sti    
  409c66:	xchg   DWORD PTR [edx],esi
  409c68:	scas   eax,DWORD PTR es:[edi]
  409c69:	pop    edi
  409c6a:	adc    bl,BYTE PTR [ecx+0x26d58610]
  409c70:	push   cs
  409c71:	repz mov ds:0xd162c2d0,eax
  409c77:	dec    edi
  409c78:	push   esi
  409c79:	(bad)  
  409c7a:	in     eax,dx
  409c7b:	add    dh,BYTE PTR [eax+0x6c]
  409c7e:	mov    edi,0xd38f5992
  409c83:	mov    ch,BYTE PTR [edx+0x4a54d795]
  409c89:	pop    esi
  409c8a:	popf   
  409c8b:	and    al,0x3c
  409c8d:	or     al,0x73
  409c8f:	ret    0x40b8
  409c92:	push   esp
  409c93:	pop    eax
  409c94:	dec    ebx
  409c95:	jle    0x409c88
  409c97:	mov    edi,0x31c13702
  409c9c:	(bad)  
  409c9e:	and    ah,al
  409ca0:	adc    DWORD PTR [ebx],0xe0e77f80
  409ca6:	push   edx
  409ca7:	sub    al,0x5f
  409ca9:	adc    dh,dl
  409cab:	ror    BYTE PTR [edi-0x71408b16],cl
  409cb1:	dec    eax
  409cb2:	mov    ecx,0x51a8377b
  409cb7:	add    ch,dl
  409cb9:	xor    ebx,DWORD PTR [ebp-0x685eafc6]
  409cbf:	or     ebx,DWORD PTR [edi]
  409cc1:	xor    BYTE PTR [edi-0x1d],cl
  409cc4:	mov    ds:0xc0050dd7,eax
  409cc9:	xor    bh,BYTE PTR ds:0xee598a7c
  409ccf:	repz popa 
  409cd1:	jae    0x409c61
  409cd3:	loope  0x409c85
  409cd5:	shl    BYTE PTR [esi+0x2f],1
  409cd8:	shl    DWORD PTR [ecx+0x6639d58],cl
  409cde:	inc    eax
  409cdf:	push   cs
  409ce0:	xlat   BYTE PTR ds:[ebx]
  409ce1:	(bad)  
  409ce2:	ror    BYTE PTR [eax+eiz*1],1
  409ce5:	push   eax
  409ce6:	inc    esi
  409ce7:	cli    
  409ce8:	sub    BYTE PTR [ecx+0x69],ah
  409ceb:	lds    edx,FWORD PTR [esi]
  409ced:	xlat   BYTE PTR ds:[ebx]
  409cee:	sar    BYTE PTR [edi+0x17c7316b],1
  409cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cf5:	retf   0xdf00
  409cf8:	pop    ss
  409cf9:	(bad)  
  409cfa:	dec    ebx
  409cfb:	sbb    DWORD PTR [ebp+0xbc92f1b],esi
  409d01:	push   ss
  409d02:	retf   0x2945
  409d05:	in     al,dx
  409d06:	jae    0x409d6e
  409d08:	pop    ds
  409d09:	call   0xfb34a55
  409d0e:	loop   0x409ceb
  409d10:	pop    ebx
  409d11:	and    BYTE PTR [esi+0x1b],0x18
  409d15:	sub    cl,BYTE PTR [eax-0x3]
  409d18:	data16 aas 
  409d1a:	sbb    eax,0x1a3b8a86
  409d1f:	int    0x8d
  409d21:	or     esi,DWORD PTR [eax]
  409d23:	pusha  
  409d24:	mov    al,BYTE PTR [ecx+0x52333502]
  409d2a:	mov    esp,0x582065e
  409d2f:	inc    edx
  409d30:	mul    BYTE PTR [eax-0x60]
  409d33:	cmp    ebp,edx
  409d35:	ins    BYTE PTR es:[edi],dx
  409d36:	pop    ecx
  409d37:	loopne 0x409d10
  409d39:	or     BYTE PTR [edx*4-0x29057ac2],ah
  409d40:	sub    bh,BYTE PTR [edi+0x13]
  409d43:	xchg   DWORD PTR [ecx],ecx
  409d45:	retf   
  409d46:	repnz lahf 
  409d48:	idiv   ebp
  409d4a:	iret   
  409d4b:	out    dx,eax
  409d4c:	jecxz  0x409ce7
  409d4e:	rcr    DWORD PTR [ebx],0x6
  409d51:	rol    DWORD PTR ss:0xe01e123,0xb9
  409d59:	pop    ecx
  409d5a:	and    al,0x9e
  409d5c:	retf   0xe910
  409d5f:	mov    DWORD PTR [eax-0x31fc01b2],eax
  409d65:	add    bl,ah
  409d67:	fadd   st,st(7)
  409d69:	int3   
  409d6a:	jecxz  0x409db6
  409d6c:	out    0x27,eax
  409d6e:	pop    ss
  409d6f:	(bad)  
  409d70:	stc    
  409d71:	loop   0x409d02
  409d73:	push   cs
  409d74:	js     0x409db0
  409d76:	int3   
  409d77:	ins    DWORD PTR es:[edi],dx
  409d78:	(bad)  
  409d79:	mov    esp,0x20aaf138
  409d7e:	jmp    DWORD PTR [ecx+0x10bc6335]
  409d84:	pop    edi
  409d85:	out    0xcf,eax
  409d87:	add    DWORD PTR [eax],0x912fa6d5
  409d8d:	xchg   esi,eax
  409d8e:	out    0xa7,al
  409d90:	ja     0x409d64
  409d92:	mov    DWORD PTR [eax],0xa932ed96
  409d98:	int    0x40
  409d9a:	mov    DWORD PTR [ebx+0x65],edi
  409d9d:	push   eax
  409d9e:	push   ss
  409d9f:	pushf  
  409da0:	leave  
  409da1:	adc    eax,0xeedf91b9
  409da6:	jnp    0x409d84
  409da8:	out    0x91,al
  409daa:	sbb    al,0x90
  409dac:	and    eax,0x392081e2
  409db1:	push   es
  409db2:	loop   0x409d49
  409db4:	fdiv   QWORD PTR [edi+ebx*4]
  409db7:	mov    eax,ds:0xe40ccbe3
  409dbc:	addr16 inc ecx
  409dbe:	imul   eax,DWORD PTR [ecx],0xe2322ac7
  409dc4:	imul   edx,ebx,0xfffffffa
  409dc7:	loopne 0x409def
  409dc9:	test   eax,0x3fce3356
  409dce:	test   al,0xdb
  409dd0:	data16 js 0x409e3e
  409dd3:	daa    
  409dd4:	shl    DWORD PTR [edi+0x39],cl
  409dd7:	retf   0xa1f9
  409dda:	mov    ds:0x46d8908,al
  409ddf:	adc    DWORD PTR [eax-0x36763805],ebp
  409de5:	jge    0x409d96
  409de7:	repnz repnz pop esi
  409dea:	push   ds
  409deb:	jle    0x409df7
  409ded:	xchg   esi,eax
  409dee:	arpl   cx,ax
  409df0:	scas   eax,DWORD PTR es:[edi]
  409df1:	and    al,0xc8
  409df3:	add    dh,BYTE PTR [ebx-0x60f0a5ce]
  409df9:	leave  
  409dfa:	pop    esi
  409dfb:	push   edi
  409dfc:	shl    BYTE PTR ds:0xd9e5179e,0x17
  409e03:	out    dx,eax
  409e04:	in     al,dx
  409e05:	sbb    al,0x3
  409e07:	jl     0x409e86
  409e09:	rcl    BYTE PTR [ecx-0x594df04f],0xcd
  409e10:	div    DWORD PTR [ebx-0x6e]
  409e13:	in     al,0xbc
  409e15:	fcmovu st,st(7)
  409e17:	jne    0x409dcd
  409e19:	pop    esp
  409e1a:	inc    esp
  409e1b:	ins    BYTE PTR es:[edi],dx
  409e1c:	inc    ebx
  409e1d:	or     al,0xd
  409e1f:	add    eax,DWORD PTR [edx-0x27]
  409e22:	rol    BYTE PTR [ebx-0x6d],1
  409e25:	imul   ecx,DWORD PTR [esi],0xffffffd5
  409e28:	dec    ebp
  409e29:	les    edi,FWORD PTR [ebx-0x3feb4d63]
  409e2f:	xchg   edi,eax
  409e30:	mov    ds:0x3760ea3d,al
  409e35:	inc    ebp
  409e36:	call   FWORD PTR [eax-0x8]
  409e39:	xchg   edx,eax
  409e3a:	ja     0x409e8f
  409e3c:	jo     0x409eb7
  409e3e:	xchg   edi,eax
  409e3f:	(bad)  
  409e40:	jecxz  0x409ddd
  409e42:	outs   dx,DWORD PTR ds:[esi]
  409e43:	sbb    ch,ch
  409e45:	or     BYTE PTR [ecx+0x234ccc1c],0x51
  409e4c:	cdq    
  409e4d:	sub    edi,DWORD PTR [ecx]
  409e4f:	xor    cl,BYTE PTR [edi-0x74317e4f]
  409e55:	xchg   esp,eax
  409e56:	adc    DWORD PTR [ebx-0x71],0x750daeb4
  409e5d:	mov    esi,0xc8734de6
  409e62:	clc    
  409e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e64:	imul   BYTE PTR [edx+0x6c033965]
  409e6a:	inc    esp
  409e6b:	mov    edx,0xaf2fd9a0
  409e70:	push   0xffffffb0
  409e72:	jae    0x409e4b
  409e74:	or     eax,0xde52606c
  409e79:	sub    DWORD PTR [edx],edx
  409e7b:	add    ah,BYTE PTR [edi-0x5cfa12d8]
  409e81:	mov    bh,0x7d
  409e83:	fstp   TBYTE PTR [ebx-0x71]
  409e86:	add    al,0xe7
  409e88:	and    DWORD PTR [ebp+0x3958f7d1],esi
  409e8e:	fs push esi
  409e90:	jg     0x409e6a
  409e92:	addr16 std 
  409e94:	addr16 or eax,0x59f3c961
  409e9a:	push   esi
  409e9b:	data16 sbb dh,BYTE PTR [edi-0x13]
  409e9f:	adc    bh,BYTE PTR [edi-0x33a628f5]
  409ea5:	ret    0x19c5
  409ea8:	out    0xb,al
  409eaa:	cwde   
  409eab:	jmp    0x409e70
  409ead:	push   edx
  409eae:	sub    eax,0x2902461e
  409eb3:	ins    DWORD PTR es:[edi],dx
  409eb4:	sub    al,BYTE PTR [edi+0x79]
  409eb7:	xor    cl,BYTE PTR [ecx-0x4514b5e2]
  409ebd:	fcmovne st,st(3)
  409ebf:	pusha  
  409ec0:	sar    DWORD PTR [ebp-0x748a7c19],1
  409ec6:	jmp    0x7f1a2169
  409ecb:	popa   
  409ecc:	call   0x7d4e:0x40ba7978
  409ed3:	mov    dh,0xd4
  409ed5:	dec    ebx
  409ed6:	adc    ebx,ecx
  409ed8:	ret    
  409ed9:	call   0x84faab75
  409ede:	lods   al,BYTE PTR ds:[esi]
  409edf:	mov    edx,0xd2a0e32d
  409ee4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ee5:	inc    ecx
  409ee6:	xchg   BYTE PTR [ebx],dh
  409ee8:	sbb    DWORD PTR [ebp-0x35],0xd3b1da44
  409eef:	jno    0x409f6a
  409ef1:	and    ebx,ebx
  409ef3:	std    
  409ef4:	mov    dl,0xc7
  409ef6:	test   DWORD PTR [esi+0x2a],ecx
  409ef9:	xchg   edx,eax
  409efa:	rcr    BYTE PTR [edx+0x49],cl
  409efd:	sub    al,0xb
  409eff:	xchg   esp,eax
  409f00:	mov    dh,0x27
  409f02:	push   cs
  409f03:	lds    edi,FWORD PTR [esi+0x78003595]
  409f09:	mov    ecx,0x91b807c0
  409f0e:	dec    edi
  409f0f:	outs   dx,BYTE PTR ds:[esi]
  409f10:	stos   BYTE PTR es:[edi],al
  409f11:	sbb    DWORD PTR [ebp-0x30],0x690b980
  409f18:	sti    
  409f19:	jmp    0xd1209da4
  409f1e:	popa   
  409f1f:	xlat   BYTE PTR ds:[ebx]
  409f20:	loope  0x409eab
  409f22:	sub    al,0xe9
  409f24:	mov    ecx,0x79baa79e
  409f29:	mov    esi,0x6fc821cb
  409f2e:	xchg   DWORD PTR [ebx],edx
  409f30:	jo     0x409fb0
  409f32:	hlt    
  409f33:	sbb    dh,ah
  409f35:	mov    al,ds:0xedd0d805
  409f3a:	dec    ebx
  409f3b:	ss fs dec edx
  409f3e:	or     al,0xe3
  409f40:	rol    DWORD PTR [ebx-0x38],1
  409f43:	xchg   ebp,eax
  409f44:	inc    edi
  409f45:	mov    ebp,0x3a1b0bea
  409f4a:	rcl    DWORD PTR [edi],0xf7
  409f4d:	dec    ebx
  409f4e:	jmp    0x4bea5e92
  409f53:	add    BYTE PTR [ecx-0x59d9dd6d],ch
  409f59:	daa    
  409f5a:	and    DWORD PTR [eax+0x7],eax
  409f5d:	int    0xe3
  409f5f:	adc    DWORD PTR ss:[ebp+0x3c],ebp
  409f63:	or     ah,dh
  409f65:	mov    esp,0xba497ed7
  409f6a:	dec    esp
  409f6b:	and    BYTE PTR [ebp+eiz*8-0x3ecdd7e4],ch
  409f72:	mov    bh,0x6
  409f74:	xchg   ebx,eax
  409f75:	and    edx,ebx
  409f77:	sti    
  409f78:	outs   dx,BYTE PTR ds:[esi]
  409f79:	cmp    DWORD PTR [ecx+0x4a],esp
  409f7c:	xor    al,0x23
  409f7e:	lds    edi,FWORD PTR [esi+0x3b640130]
  409f84:	mov    bh,0xd8
  409f86:	shl    DWORD PTR [ebx-0x21],1
  409f89:	in     eax,0x61
  409f8b:	push   eax
  409f8c:	lods   al,BYTE PTR ds:[esi]
  409f8d:	dec    edi
  409f8e:	gs push eax
  409f90:	inc    eax
  409f91:	(bad)
  409f95:	test   bl,cl
  409f97:	es jge 0x40a010
  409f9a:	popa   
  409f9b:	pop    edi
  409f9c:	cli    
  409f9d:	sbb    ebp,eax
  409f9f:	dec    ebp
  409fa0:	push   edx
  409fa1:	retf   
  409fa2:	gs inc ecx
  409fa4:	fldln2 
  409fa6:	pop    eax
  409fa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fa8:	adc    eax,0xeac45355
  409fad:	xor    dl,BYTE PTR [edi+0x76]
  409fb0:	mov    ecx,0x28c520bc
  409fb5:	inc    edx
  409fb6:	sub    BYTE PTR [eax],al
  409fb8:	xchg   edi,eax
  409fb9:	cmp    BYTE PTR [ecx],0xd5
  409fbc:	cwde   
  409fbd:	sub    DWORD PTR [eax-0x28],ebx
  409fc0:	mov    cl,BYTE PTR [esi]
  409fc2:	cwde   
  409fc3:	adc    ebp,ecx
  409fc5:	or     al,0x4a
  409fc7:	mov    ds:0x58b49450,al
  409fcc:	and    esi,DWORD PTR ss:[ebp+0x137fc49a]
  409fd3:	push   ecx
  409fd4:	lods   al,BYTE PTR ds:[esi]
  409fd5:	daa    
  409fd6:	jl     0x409fa7
  409fd8:	retf   
  409fd9:	xor    al,0xe7
  409fdb:	enter  0x9321,0x47
  409fdf:	nop
  409fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fe2:	pop    ss
  409fe3:	adc    edi,ecx
  409fe5:	push   eax
  409fe6:	mov    ebp,0xba2541bb
  409feb:	add    al,0x63
  409fed:	jb     0x409fe6
  409fef:	stos   DWORD PTR es:[edi],eax
  409ff0:	dec    esp
  409ff1:	push   esi
  409ff2:	push   ds
  409ff3:	iret   
  409ff4:	xor    BYTE PTR [esi-0x38],0x49
  409ff8:	loopne 0x40a077
  409ffa:	addr16 inc eax
  409ffc:	pop    es
  409ffd:	clc    
  409ffe:	out    0xf8,al
  40a000:	pop    ebx
  40a001:	(bad)  [ecx]
  40a003:	rcr    DWORD PTR [ebp-0xee3d682],cl
  40a009:	sbb    ebp,ecx
  40a00b:	retf   0xd521
  40a00e:	and    DWORD PTR [esi-0x1d],ebp
  40a011:	mov    esi,0x24e62605
  40a016:	mov    dh,0xbb
  40a018:	push   cs
  40a019:	mov    edi,0xf77ce887
  40a01e:	cmp    DWORD PTR [eax-0x6036fcba],eax
  40a024:	mov    ebx,DWORD PTR [edi+0x247c8242]
  40a02a:	jge    0x40a022
  40a02c:	(bad)  
  40a02d:	jo     0x409fda
  40a02f:	xchg   DWORD PTR [esi-0xe],ebp
  40a032:	imul   edx,DWORD PTR [ecx],0x6a
  40a035:	xchg   bh,ch
  40a037:	dec    eax
  40a038:	pusha  
  40a039:	fist   WORD PTR [edi]
  40a03b:	lds    esp,FWORD PTR [ebp+0x7ae91da7]
  40a041:	loop   0x40a080
  40a043:	sub    DWORD PTR [ebx+0x32321766],0x5d
  40a04a:	aam    0x9d
  40a04c:	je     0x40a064
  40a04e:	js     0x409fed
  40a050:	icebp  
  40a051:	out    0x82,eax
  40a053:	cmp    ecx,DWORD PTR [ebp-0x2e]
  40a056:	lock mov bl,BYTE PTR [ebp-0x2c]
  40a05a:	add    BYTE PTR [ecx-0xd],ch
  40a05d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a05e:	or     dh,bl
  40a060:	jae    0x40a0c7
  40a062:	sub    esi,DWORD PTR [edx]
  40a064:	and    eax,0xea7f96ae
  40a069:	sbb    bl,al
  40a06b:	mov    esp,0xb595080e
  40a070:	cs clc 
  40a072:	add    al,0x24
  40a074:	ror    BYTE PTR gs:[eax*1+0xeea19b3],1
  40a07c:	sub    eax,0xe8f3435b
  40a081:	rol    dl,0x99
  40a084:	mov    ch,0xfb
  40a086:	pushf  
  40a087:	and    DWORD PTR [edx],0xffffffc1
  40a08a:	push   esp
  40a08b:	push   0xa80c057a
  40a090:	das    
  40a091:	arpl   WORD PTR [edi],dx
  40a093:	jg     0x40a0a7
  40a095:	and    al,0xf3
  40a097:	xchg   edx,eax
  40a098:	push   ss
  40a099:	int3   
  40a09a:	ja     0x40a0e4
  40a09c:	lock idiv DWORD PTR [edi]
  40a09f:	loopne 0x40a0ed
  40a0a1:	icebp  
  40a0a2:	hlt    
  40a0a3:	adc    cl,BYTE PTR gs:[eax+0x3b]
  40a0a7:	cmc    
  40a0a8:	jp     0x40a0ab
  40a0aa:	sbb    BYTE PTR [eax],al
  40a0ac:	pop    esp
  40a0ad:	mov    eax,ds:0x5bc261e7
  40a0b2:	aaa    
  40a0b3:	jecxz  0x40a04f
  40a0b5:	enter  0x1477,0x9a
  40a0b9:	adc    DWORD PTR ds:0xa652370b,esp
  40a0bf:	cdq    
  40a0c0:	pop    esp
  40a0c1:	cld    
  40a0c2:	mov    al,0xb4
  40a0c4:	mov    eax,0xd459ba8f
  40a0c9:	inc    edi
  40a0ca:	outs   dx,BYTE PTR ds:[esi]
  40a0cb:	fs jae 0x40a122
  40a0ce:	cld    
  40a0cf:	pop    eax
  40a0d0:	adc    esp,DWORD PTR [eax+eiz*4+0x587b6385]
  40a0d7:	xchg   esp,eax
  40a0d8:	push   esi
  40a0d9:	ja     0x40a119
  40a0db:	imul   edi
  40a0dd:	sub    al,dl
  40a0df:	(bad)  
  40a0e0:	and    BYTE PTR [ecx+0x2909186],al
  40a0e6:	fistp  QWORD PTR [ebp-0x32]
  40a0e9:	fnstsw WORD PTR [ecx+0xf3ab791]
  40a0ef:	nop
  40a0f0:	out    dx,eax
  40a0f1:	mov    dh,0x81
  40a0f3:	sub    ebx,DWORD PTR [ebp+0x3a]
  40a0f6:	pop    eax
  40a0f7:	call   0xcbbb29d0
  40a0fc:	pusha  
  40a0fd:	test   DWORD PTR [ecx-0x5b],ebx
  40a100:	or     BYTE PTR [edi-0x3e1e5b49],cl
  40a106:	cmp    al,0x3a
  40a108:	mov    dh,BYTE PTR [edi+edi*1+0x7c0d8bf2]
  40a10f:	mov    ah,dl
  40a111:	aaa    
  40a112:	shr    DWORD PTR [ecx-0x50],1
  40a115:	fldenv [esi-0x3da1b1d0]
  40a11b:	sbb    dl,BYTE PTR [ecx+0x41e7959]
  40a121:	mov    ds:0xd47748c2,al
  40a126:	dec    edx
  40a127:	add    BYTE PTR [edi+esi*2],0x9
  40a12b:	adc    al,0x73
  40a12d:	push   0x44e8bbbc
  40a132:	fnsave [edx+0x47]
  40a135:	or     BYTE PTR [edi-0x3f],dh
  40a138:	push   ebx
  40a139:	and    DWORD PTR [eax-0x69],0x30
  40a13d:	les    ebx,FWORD PTR ds:0xbebe96b2
  40a143:	scas   eax,DWORD PTR es:[edi]
  40a144:	out    0xf2,eax
  40a146:	mov    dh,0xf8
  40a148:	inc    esi
  40a149:	test   eax,0x6c07497a
  40a14e:	pop    ebp
  40a150:	xchg   edi,eax
  40a151:	jecxz  0x40a0e0
  40a153:	aas    
  40a154:	xor    dl,0xac
  40a157:	cld    
  40a158:	xor    DWORD PTR [edi+0x36],esp
  40a15b:	mov    ds:0x26421438,al
  40a160:	cmp    ecx,0xf799c2d0
  40a166:	xor    BYTE PTR [esi],0x22
  40a169:	jg     0x40a0ee
  40a16b:	mov    cs,WORD PTR [eax-0x5c7012e7]
  40a171:	ins    DWORD PTR es:[edi],dx
  40a172:	popf   
  40a173:	mov    edx,0x7d3afdd9
  40a178:	addr16 loopne 0x40a149
  40a17b:	dec    eax
  40a17c:	cli    
  40a17d:	cld    
  40a17e:	adc    DWORD PTR [ebp+0x79],ecx
  40a181:	adc    ebx,DWORD PTR [ecx]
  40a183:	gs std 
  40a185:	mov    ds:0x3409c6b7,al
  40a18a:	sar    bl,1
  40a18c:	std    
  40a18d:	add    ah,bl
  40a18f:	jo     0x40a143
  40a191:	test   BYTE PTR [edi*2-0x18cbec02],dl
  40a198:	std    
  40a199:	pop    ss
  40a19a:	into   
  40a19b:	xchg   edi,eax
  40a19c:	test   BYTE PTR cs:[bp+0x13],0x14
  40a1a2:	push   esp
  40a1a3:	and    eax,DWORD PTR [esi+0x6c5418dd]
  40a1a9:	mov    ecx,0xd6a1e6e2
  40a1ae:	test   BYTE PTR [esi],al
  40a1b0:	xor    BYTE PTR [eax+0x2c2a06ce],ah
  40a1b6:	inc    esi
  40a1b7:	dec    eax
  40a1b8:	add    al,BYTE PTR [esp+eiz*2-0x58]
  40a1bc:	addr16 mov ch,0x84
  40a1bf:	out    dx,al
  40a1c0:	jmp    0x887318ee
  40a1c5:	fcomi  st,st(0)
  40a1c7:	fwait
  40a1c8:	sbb    DWORD PTR [edx-0x2b],ebp
  40a1cb:	adc    BYTE PTR [esp+edi*4-0x4d465fa3],ch
  40a1d2:	hlt    
  40a1d3:	(bad)  
  40a1d5:	shl    ah,cl
  40a1d7:	out    0xe,eax
  40a1d9:	inc    ecx
  40a1da:	fstp   QWORD PTR [edi-0x35516db0]
  40a1e0:	lock rol edx,0xcf
  40a1e4:	jae    0x40a1ff
  40a1e6:	(bad)  
  40a1e7:	ret    
  40a1e8:	mov    dh,0x4
  40a1ea:	or     al,0x6d
  40a1ec:	jo     0x40a200
  40a1ee:	ror    BYTE PTR [esi+0x16],cl
  40a1f1:	xchg   edx,eax
  40a1f2:	mov    ah,0x2c
  40a1f4:	std    
  40a1f5:	inc    ebx
  40a1f6:	mov    esi,0x8f3275db
  40a1fb:	(bad)  [eax-0x5f]
  40a1fe:	fidivr DWORD PTR [ebx-0x5fbafc7]
  40a204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a205:	mov    ?,WORD PTR [edx]
  40a207:	push   ss
  40a208:	xchg   DWORD PTR [edx],ecx
  40a20a:	repnz (bad) 
  40a20c:	jnp    0x40a1ed
  40a20e:	adc    eax,0xf48718d
  40a213:	jmp    DWORD PTR [edx]
  40a215:	pop    esp
  40a216:	jno    0x40a200
  40a218:	fnstsw WORD PTR [ecx+0x765d102e]
  40a21e:	adc    esp,DWORD PTR [ecx-0x654dd835]
  40a224:	or     eax,0x62b75216
  40a229:	pop    edx
  40a22a:	ss stc 
  40a22c:	pop    edx
  40a22d:	std    
  40a22e:	ret    
  40a22f:	pop    ebx
  40a230:	jno    0x40a1d0
  40a232:	shl    DWORD PTR [ebx+eiz*4],1
  40a235:	sub    eax,0x8aa0d859
  40a23a:	fiadd  WORD PTR [esi-0x45]
  40a23d:	jmp    0xb7d4:0x79fd785e
  40a244:	in     eax,dx
  40a245:	add    BYTE PTR [ebx],dh
  40a247:	sti    
  40a248:	or     DWORD PTR [ebx-0x8],ecx
  40a24b:	dec    edi
  40a24c:	je     0x40a1df
  40a24e:	add    eax,0x745cce57
  40a253:	push   es
  40a254:	es xchg esp,ebx
  40a257:	ja     0x40a2d4
  40a259:	push   cs
  40a25a:	mov    ebx,0x8e1dcb52
  40a25f:	stos   DWORD PTR es:[edi],eax
  40a260:	mov    eax,ds:0x54fec39d
  40a265:	js     0x40a252
  40a267:	pop    ds
  40a268:	add    al,0xde
  40a26a:	cmc    
  40a26b:	rcr    BYTE PTR [edx+0x64],cl
  40a26e:	dec    eax
  40a26f:	aas    
  40a270:	cmp    DWORD PTR [edx-0x5b689ea4],esi
  40a276:	xchg   esi,eax
  40a277:	les    eax,FWORD PTR ds:0x3560dfb7
  40a27d:	(bad)  
  40a27e:	les    esi,FWORD PTR [ecx+0x1c]
  40a281:	pop    ecx
  40a282:	and    DWORD PTR [esp+esi*8],ebp
  40a285:	push   ebx
  40a286:	pop    esi
  40a287:	out    0xad,al
  40a289:	pop    esp
  40a28a:	popa   
  40a28b:	dec    edx
  40a28c:	into   
  40a28d:	push   ebx
  40a28e:	sbb    al,0xa2
  40a290:	xchg   edi,eax
  40a291:	pop    ds
  40a292:	pop    esp
  40a293:	popa   
  40a294:	fnstsw WORD PTR [edx-0x6a124ea9]
  40a29a:	ds jmp 0xa48949e7
  40a2a0:	dec    eax
  40a2a1:	push   ecx
  40a2a2:	aas    
  40a2a3:	pop    ss
  40a2a4:	xor    eax,0xaa82b7b5
  40a2a9:	lock adc edx,esi
  40a2ac:	into   
  40a2ad:	pop    ss
  40a2ae:	xchg   edi,eax
  40a2af:	adc    ebx,DWORD PTR [eax]
  40a2b1:	jmp    0x40a26b
  40a2b3:	xor    ecx,DWORD PTR [esi+0x56]
  40a2b6:	lea    ebp,[eax+0x17d78817]
  40a2bc:	ja     0x40a23f
  40a2be:	pop    ebx
  40a2bf:	aad    0x56
  40a2c1:	rcr    DWORD PTR [edi],1
  40a2c3:	mov    dh,0x5a
  40a2c5:	sti    
  40a2c6:	sbb    esi,ebp
  40a2c8:	jge    0x40a337
  40a2ca:	repz jns 0x40a301
  40a2cd:	mov    DWORD PTR [edi+0x49],0xf18cedf4
  40a2d4:	dec    edx
  40a2d5:	sub    BYTE PTR [ebp*1-0x77a31d48],bh
  40a2dc:	popa   
  40a2dd:	push   0x54
  40a2df:	mov    BYTE PTR [eax],dh
  40a2e1:	test   BYTE PTR [ebx+0x21],ch
  40a2e4:	das    
  40a2e5:	test   eax,0x654e867d
  40a2ea:	leave  
  40a2eb:	outs   dx,BYTE PTR ds:[esi]
  40a2ec:	and    DWORD PTR [eax-0x2a],0x6efd8a08
  40a2f3:	jne    0x40a32b
  40a2f5:	cs clc 
  40a2f7:	fs popf 
  40a2f9:	hlt    
  40a2fa:	or     al,0x34
  40a2fc:	xlat   BYTE PTR ds:[ebx]
  40a2fd:	aad    0xce
  40a2ff:	adc    eax,0xf7d1fb63
  40a304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a305:	or     esp,esi
  40a307:	adc    bl,dl
  40a309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a30a:	bound  ebx,QWORD PTR [edx]
  40a30c:	in     eax,dx
  40a30d:	or     eax,DWORD PTR [edx+edx*2+0x27]
  40a311:	aas    
  40a312:	das    
  40a313:	cwde   
  40a314:	sub    DWORD PTR [edx+ebp*2-0x35],ebp
  40a318:	and    esi,DWORD PTR [edi-0x3d]
  40a31b:	mov    dl,BYTE PTR ds:0x397a35e2
  40a321:	out    0x37,al
  40a323:	mov    al,ds:0xe1f2d5ae
  40a328:	and    ebx,esi
  40a32a:	adc    al,0xdf
  40a32c:	mov    esp,0x4fea6617
  40a331:	mov    dh,dh
  40a333:	mov    cl,0x49
  40a335:	add    esi,DWORD PTR [edx-0x7f29eb98]
  40a33b:	jno    0x40a370
  40a33d:	(bad)  
  40a33f:	in     al,0xff
  40a341:	das    
  40a342:	aaa    
  40a343:	inc    ebp
  40a344:	sub    BYTE PTR [edi+0x52510fd7],0xb8
  40a34b:	fadd   QWORD PTR [ebp-0x5e]
  40a34e:	push   ds
  40a34f:	adc    dh,cl
  40a351:	and    ecx,esp
  40a353:	je     0x40a300
  40a355:	seta   BYTE PTR [ecx-0x22bee87]
  40a35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35d:	cmp    ah,BYTE PTR [ebx]
  40a35f:	push   ebx
  40a360:	bound  eax,QWORD PTR [ebx+edx*1-0x28]
  40a364:	adc    eax,0x976ca469
  40a369:	cmp    DWORD PTR [edx],edx
  40a36b:	cmp    eax,0x8887ee82
  40a370:	dec    ecx
  40a371:	cmp    eax,0x9b170ef4
  40a376:	mov    ebx,0x88020df7
  40a37b:	pop    ds
  40a37c:	retf   
  40a37d:	mov    ?,WORD PTR [ebx-0x34]
  40a380:	lock add dh,ch
  40a383:	fidivr DWORD PTR [edi+0x2973692]
  40a389:	in     ax,0x49
  40a38c:	add    cl,ch
  40a38e:	xchg   edx,eax
  40a38f:	jecxz  0x40a3a4
  40a391:	pop    ecx
  40a392:	neg    DWORD PTR ds:[ebx+0x1066e106]
  40a399:	inc    esp
  40a39a:	or     BYTE PTR [edi+0x0],0x7f
  40a39e:	test   eax,0x251bf6ce
  40a3a3:	or     eax,0x6c97bce9
  40a3a8:	inc    ebx
  40a3a9:	inc    ebx
  40a3aa:	fs pop edx
  40a3ac:	mov    esi,0x5807fa0d
  40a3b1:	dec    ebp
  40a3b2:	mov    ds:0xe261b0d,al
  40a3b7:	jecxz  0x40a38f
  40a3b9:	fcmove st,st(3)
  40a3bb:	mov    edi,0xc0bccda1
  40a3c0:	dec    ecx
  40a3c1:	gs call 0xdbb8ab8f
  40a3c7:	jns    0x40a360
  40a3c9:	jg     0x40a3f5
  40a3cb:	mov    BYTE PTR [edi],cl
  40a3cd:	test   esp,0x5ff505e
  40a3d3:	fimul  WORD PTR [ebx-0x1bf3ce4b]
  40a3d9:	push   edx
  40a3da:	out    0xb5,al
  40a3dc:	cmp    eax,ebx
  40a3de:	popa   
  40a3df:	or     DWORD PTR [edx-0x66],ebp
  40a3e2:	mov    ah,0x55
  40a3e4:	ret    0xde5f
  40a3e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e8:	sbb    BYTE PTR [ecx-0x5b],ah
  40a3eb:	fist   WORD PTR [esi+0x2a619350]
  40a3f1:	and    DWORD PTR [ebp+0x27fe2002],eax
  40a3f7:	sbb    al,0x8e
  40a3f9:	add    al,cl
  40a3fb:	adc    ebp,esp
  40a3fd:	int    0x3e
  40a3ff:	gs loope 0x40a3e5
  40a402:	call   0x9416:0x2e32f093
  40a409:	pop    ebp
  40a40a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a40b:	xchg   ebp,eax
  40a40c:	ins    BYTE PTR es:[edi],dx
  40a40d:	shr    ebx,cl
  40a40f:	es aam 0x87
  40a412:	sbb    DWORD PTR [ebp*2-0x51dc99e2],edx
  40a419:	cdq    
  40a41a:	push   ds
  40a41b:	mov    dl,0x83
  40a41d:	dec    edi
  40a41e:	mov    ebx,0x68857482
  40a423:	(bad)  
  40a424:	call   FWORD PTR [ebp-0xba559fb]
  40a42a:	jne    0x40a472
  40a42c:	xchg   ecx,eax
  40a42d:	fistp  QWORD PTR [esi]
  40a42f:	mov    ds:0x1e111d4f,eax
  40a434:	ficom  DWORD PTR ds:0xdfc83809
  40a43a:	aad    0xf5
  40a43c:	inc    ebp
  40a43d:	addr16 es popa 
  40a440:	nop    DWORD PTR [ebp+0x5a]
  40a444:	jmp    0x40a498
  40a446:	lds    esi,FWORD PTR [edi+0x10]
  40a449:	push   ebp
  40a44a:	adc    BYTE PTR [esi+0x2e3e63fb],dh
  40a450:	cld    
  40a451:	adc    BYTE PTR [esi-0xd],bl
  40a454:	pusha  
  40a455:	cwde   
  40a456:	in     al,dx
  40a457:	test   DWORD PTR [eax],eax
  40a459:	imul   edx,DWORD PTR [ebp+0x73],0x2c
  40a45d:	pushf  
  40a45e:	xor    al,0xe6
  40a460:	xchg   ebp,eax
  40a461:	in     eax,0x85
  40a463:	sbb    bl,BYTE PTR [esi+0x43e7d1e2]
  40a469:	inc    edi
  40a46a:	push   ss
  40a46b:	push   0xb6b8e0e6
  40a470:	clc    
  40a471:	sub    ah,BYTE PTR [esi]
  40a473:	jl     0x40a40d
  40a475:	and    al,0x19
  40a477:	imul   esi,DWORD PTR [eax+0x48f2f80f],0x57
  40a47e:	bound  ebx,QWORD PTR [ebx+0x35b5e9b2]
  40a484:	pop    ebp
  40a485:	dec    esp
  40a486:	fisubr DWORD PTR [esi-0x7c8fc29c]
  40a48c:	call   0x128a:0xb0831e50
  40a493:	mov    eax,0x409219bd
  40a498:	xchg   esp,eax
  40a499:	repnz scas eax,DWORD PTR es:[edi]
  40a49b:	push   ecx
  40a49c:	mov    BYTE PTR [esi+edx*1],ch
  40a49f:	div    BYTE PTR [edi]
  40a4a1:	push   esi
  40a4a2:	jle    0x40a44f
  40a4a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4a5:	daa    
  40a4a6:	xor    bh,BYTE PTR [edi]
  40a4a8:	sbb    BYTE PTR [edi],bl
  40a4aa:	dec    edi
  40a4ab:	push   0xb7a53caf
  40a4b0:	scas   eax,DWORD PTR es:[edi]
  40a4b1:	in     eax,0xed
  40a4b3:	bound  edi,QWORD PTR [esp+eax*4+0x78]
  40a4b7:	or     ch,ah
  40a4b9:	cmp    al,0xe6
  40a4bb:	hlt    
  40a4bc:	popa   
  40a4bd:	and    edx,DWORD PTR [esi+0x66211ab2]
  40a4c3:	loopne 0x40a522
  40a4c5:	leave  
  40a4c6:	les    edi,FWORD PTR [esi+0x7a]
  40a4c9:	jmp    0xee5d5115
  40a4ce:	nop
  40a4cf:	pop    edx
  40a4d0:	in     al,0xbe
  40a4d2:	xchg   ebx,eax
  40a4d3:	or     esp,DWORD PTR [ebp+eax*2-0x2d74a179]
  40a4da:	retf   0xd597
  40a4dd:	or     dl,BYTE PTR [eax-0x49852e87]
  40a4e3:	jmp    0xa291:0x1518cfce
  40a4ea:	lahf   
  40a4eb:	daa    
  40a4ec:	std    
  40a4ed:	shl    DWORD PTR [ebx],cl
  40a4ef:	mov    edx,0xb79c304
  40a4f4:	mov    bh,0x4f
  40a4f6:	mov    edx,DWORD PTR [esi]
  40a4f8:	into   
  40a4f9:	mov    cl,0x9c
  40a4fb:	int    0xa9
  40a4fd:	or     BYTE PTR [eax-0x4],bh
  40a500:	fbstp  TBYTE PTR [esi+ecx*2]
  40a503:	loop   0x40a494
  40a505:	lods   al,BYTE PTR ds:[esi]
  40a506:	inc    ecx
  40a507:	xor    eax,0x6d739c66
  40a50c:	cmp    DWORD PTR [eax-0x74],esp
  40a50f:	in     al,0x94
  40a511:	sbb    ch,BYTE PTR [eax-0x7b313247]
  40a517:	pop    ebx
  40a518:	data16 mov gs,WORD PTR [esi+eax*2-0x36c8218f]
  40a520:	outs   dx,BYTE PTR ds:[esi]
  40a521:	push   ebp
  40a522:	cmp    bl,BYTE PTR [edx]
  40a524:	in     al,0x37
  40a526:	pop    es
  40a527:	psrlw  mm1,QWORD PTR [esi]
  40a52a:	sbb    al,0x8e
  40a52c:	dec    esi
  40a52d:	pop    ss
  40a52e:	fcomip st,st(3)
  40a530:	sub    DWORD PTR [edi],0xfef178ea
  40a536:	jo     0x40a58b
  40a538:	shl    BYTE PTR [ebx+0x400e90c3],cl
  40a53e:	pusha  
  40a53f:	mov    DWORD PTR [ebp-0x3f3935a2],0xdde23efb
  40a549:	cmc    
  40a54a:	jae    0x40a5ca
  40a54c:	repz shl esp,cl
  40a54f:	xchg   edx,eax
  40a550:	int    0x3d
  40a552:	mov    al,0x1b
  40a554:	xchg   ebp,eax
  40a555:	fdiv   st(4),st
  40a557:	lock xchg BYTE PTR [ebp-0x4668070b],dl
  40a55e:	(bad)  
  40a55f:	adc    esp,eax
  40a561:	iret   
  40a562:	push   esi
  40a563:	scas   al,BYTE PTR es:[edi]
  40a564:	inc    ebx
  40a565:	loopne 0x40a55d
  40a567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a568:	lods   al,BYTE PTR ds:[esi]
  40a569:	aaa    
  40a56a:	int    0x42
  40a56c:	sahf   
  40a56d:	cmp    BYTE PTR [ecx-0x80],0xc5
  40a571:	lods   al,BYTE PTR ds:[esi]
  40a572:	sbb    dh,bh
  40a574:	jns    0x40a5df
  40a576:	(bad)  
  40a577:	test   al,0x49
  40a579:	fld    st(2)
  40a57b:	push   0x5882d76b
  40a580:	daa    
  40a581:	popa   
  40a582:	push   ebp
  40a583:	dec    ebp
  40a584:	pop    ss
  40a585:	je     0x40a5b0
  40a587:	dec    edx
  40a588:	hlt    
  40a589:	fstp   QWORD PTR [edx-0x212128d4]
  40a58f:	(bad)  
  40a590:	jmp    0x40a5a2
  40a592:	mov    eax,ds:0xc6d94ab1
  40a597:	daa    
  40a598:	cmp    BYTE PTR [esi-0x67],ah
  40a59b:	xchg   cl,dh
  40a59d:	xchg   edi,eax
  40a59e:	rol    DWORD PTR [ebx-0xf],1
  40a5a1:	ss inc esp
  40a5a3:	call   DWORD PTR [ecx]
  40a5a5:	cmp    BYTE PTR [ebp+0x41a2af3e],ah
  40a5ab:	and    DWORD PTR [edi+0x54],esi
  40a5ae:	xchg   ebx,eax
  40a5af:	(bad)  
  40a5b0:	jns    0x40a5de
  40a5b2:	(bad)  
  40a5b3:	jb     0x40a5a9
  40a5b5:	les    esp,FWORD PTR [eax]
  40a5b7:	in     al,dx
  40a5b8:	pop    esp
  40a5b9:	mov    fs,WORD PTR [ebx+0x6e5c0223]
  40a5bf:	mov    dl,0x65
  40a5c1:	js     0x40a568
  40a5c3:	dec    ecx
  40a5c4:	xchg   edx,eax
  40a5c5:	stc    
  40a5c6:	ins    DWORD PTR es:[edi],dx
  40a5c7:	in     eax,0x97
  40a5c9:	cmp    edx,DWORD PTR [ebx-0x30c20b42]
  40a5cf:	ss mov ebx,0xede089ce
  40a5d5:	inc    ebp
  40a5d6:	in     eax,dx
  40a5d7:	inc    eax
  40a5d8:	ror    BYTE PTR [esi+0x1619d655],cl
  40a5de:	fstp   DWORD PTR [eax+0xe]
  40a5e1:	test   al,0xb9
  40a5e3:	pop    edx
  40a5e4:	xchg   esi,edx
  40a5e6:	frstor [ecx-0x6c]
  40a5e9:	lahf   
  40a5ea:	pop    edi
  40a5eb:	fnstsw WORD PTR [edi]
  40a5ed:	aam    0xd9
  40a5ef:	bound  esi,QWORD PTR [ebx+0x2a07d2b5]
  40a5f5:	adc    al,0xd5
  40a5f7:	outs   dx,DWORD PTR ds:[esi]
  40a5f8:	xchg   ebx,eax
  40a5f9:	fisttp WORD PTR [ecx+0x5b]
  40a5fc:	out    0x38,al
  40a5fe:	jmp    0xf5d912a2
  40a603:	loop   0x40a613
  40a605:	pop    ebx
  40a606:	int3   
  40a607:	rcl    DWORD PTR [edx+0x32],1
  40a60a:	dec    edx
  40a60b:	call   0x7421:0xe0e89e21
  40a612:	stos   BYTE PTR es:[edi],al
  40a613:	or     eax,0x46
  40a616:	icebp  
  40a617:	or     ebx,DWORD PTR [edx+ebx*4-0x489bef82]
  40a61e:	scas   eax,DWORD PTR es:[edi]
  40a61f:	(bad)  
  40a620:	xchg   esi,eax
  40a621:	mov    eax,esp
  40a623:	and    DWORD PTR [edx],esi
  40a625:	lea    esp,[edi+0x2abb6c9c]
  40a62b:	in     eax,dx
  40a62c:	mov    edx,0x8d75590b
  40a631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a632:	inc    ecx
  40a633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a634:	sbb    DWORD PTR [edi+0x31ea3a8f],edx
  40a63a:	(bad)  
  40a63b:	mov    eax,ds:0x57714021
  40a640:	enter  0xbda9,0x11
  40a644:	sub    DWORD PTR [esi-0x2],eax
  40a647:	(bad)
  40a64a:	dec    esp
  40a64b:	push   edx
  40a64c:	aaa    
  40a64d:	mov    bh,0xb3
  40a64f:	enter  0xa0ac,0x6b
  40a653:	ds inc esp
  40a655:	hlt    
  40a656:	sti    
  40a657:	icebp  
  40a658:	xchg   ecx,eax
  40a659:	jmp    0xe3f:0xb32b61a5
  40a660:	test   BYTE PTR [esi-0x6],ch
  40a663:	push   edx
  40a664:	xor    eax,0x25a4331d
  40a669:	(bad)  
  40a66a:	stos   DWORD PTR es:[edi],eax
  40a66b:	sti    
  40a66c:	(bad)  
  40a66e:	push   0xd8ac4def
  40a673:	fidivr WORD PTR [ebx+edx*1-0x406efcc6]
  40a67a:	sub    DWORD PTR [ebx],edx
  40a67c:	cmp    DWORD PTR [esp+esi*4-0x41],ebp
  40a680:	aam    0x4f
  40a682:	in     eax,0xc8
  40a684:	mov    esi,0x8bbb6207
  40a689:	sub    BYTE PTR [esi],bh
  40a68b:	mov    DWORD PTR [ebx+0x5675ebf3],0xa0213564
  40a695:	push   ds
  40a696:	jl     0x40a6b5
  40a698:	xor    al,0xa3
  40a69a:	sbb    eax,0x5e42ff94
  40a69f:	cwde   
  40a6a0:	in     al,0xf5
  40a6a2:	add    DWORD PTR [edi+eiz*2+0x5eb62f99],edx
  40a6a9:	xor    ebp,ebx
  40a6ab:	int    0xea
  40a6ad:	cmc    
  40a6ae:	out    0x92,al
  40a6b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6b1:	aam    0x2c
  40a6b3:	enter  0x13d7,0x26
  40a6b7:	add    al,0x9
  40a6b9:	mov    edx,0x918c03f2
  40a6be:	ja     0x40a728
  40a6c0:	xor    eax,0xf0d6fd0e
  40a6c5:	movntq QWORD PTR [ebx+esi*1-0x58e0d4d9],mm2
  40a6cd:	add    eax,0x37f49a49
  40a6d2:	outs   dx,BYTE PTR ds:[esi]
  40a6d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d4:	jg     0x40a6c6
  40a6d6:	cmp    esi,esp
  40a6d8:	call   0x2e57fcb7
  40a6dd:	add    BYTE PTR ds:0x89ef91d6,cl
  40a6e3:	or     al,BYTE PTR [ecx]
  40a6e5:	push   0xffffffdf
  40a6e7:	(bad)  
  40a6e8:	cmp    bh,ah
  40a6ea:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a6ec:	push   edx
  40a6ed:	jmp    0x3f490852
  40a6f2:	xor    esp,ebp
  40a6f4:	(bad)  
  40a6f5:	mov    eax,ds:0x6fa744cd
  40a6fa:	push   ss
  40a6fb:	outs   dx,BYTE PTR ds:[esi]
  40a6fc:	mov    al,ds:0x43172257
  40a701:	push   edx
  40a702:	mov    edx,0x39bdef93
  40a707:	(bad)  
  40a708:	sbb    ecx,edi
  40a70a:	sub    al,ch
  40a70c:	cmp    ebx,edx
  40a70e:	imul   edx,DWORD PTR [edx-0x5dfa02b0],0x1f
  40a715:	imul   ebp,DWORD PTR [eax],0xed9e0dc
  40a71b:	(bad)  
  40a71c:	jle    0x40a756
  40a71e:	sub    cl,dl
  40a720:	dec    edx
  40a721:	fstp   QWORD PTR [esi]
  40a723:	xchg   edi,eax
  40a724:	sar    cl,1
  40a726:	mov    edi,DWORD PTR [esp+ebp*4+0x5b]
  40a72a:	in     eax,dx
  40a72b:	in     al,dx
  40a72c:	push   edx
  40a72d:	adc    eax,0x513be7b8
  40a732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a733:	pop    es
  40a734:	repz push edx
  40a736:	test   eax,0x7434946f
  40a73b:	ja     0x40a76b
  40a73d:	mov    BYTE PTR [edi-0x8],bl
  40a740:	push   ds
  40a741:	cmp    DWORD PTR fs:[ecx-0xf],eax
  40a745:	mov    ebp,0x93155b62
  40a74a:	xchg   ebp,eax
  40a74b:	add    dh,BYTE PTR [ebx+0x6f]
  40a74e:	adc    ch,bh
  40a750:	push   0xffffffad
  40a752:	inc    eax
  40a753:	(bad)  
  40a754:	jnp    0x40a768
  40a756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a758:	jno    0x40a7c1
  40a75a:	mov    edi,DWORD PTR [esp-0x4e]
  40a75e:	rcr    DWORD PTR [esi-0x16],cl
  40a761:	dec    eax
  40a762:	xchg   bh,bh
  40a764:	aas    
  40a765:	rol    DWORD PTR [edi+eax*1],cl
  40a768:	dec    esp
  40a769:	pop    ds
  40a76a:	xlat   BYTE PTR ds:[ebx]
  40a76b:	ret    0xe070
  40a76e:	pop    esp
  40a76f:	xchg   edi,edi
  40a771:	test   eax,0x8cd7542f
  40a776:	mov    dh,0x88
  40a778:	test   BYTE PTR [esi-0x3267c65d],bl
  40a77e:	jo     0x40a76d
  40a780:	outs   dx,BYTE PTR ds:[esi]
  40a781:	in     al,dx
  40a782:	jge    0x40a75e
  40a784:	pop    esi
  40a785:	mov    al,0x1f
  40a787:	je     0x40a71b
  40a789:	je     0x40a756
  40a78b:	mov    ecx,0x9083ef50
  40a790:	or     edx,esp
  40a792:	cmc    
  40a793:	pop    esp
  40a794:	xchg   edi,eax
  40a795:	pop    edx
  40a796:	test   al,0xf9
  40a798:	add    ebp,DWORD PTR [eax+0x35665388]
  40a79e:	fwait
  40a79f:	pop    ebp
  40a7a0:	xor    eax,0xad6cf491
  40a7a5:	mov    edx,0x2b206d2d
  40a7aa:	mov    esp,edx
  40a7ac:	retf   
  40a7ad:	xor    al,0xea
  40a7af:	fs pop edi
  40a7b1:	add    esp,DWORD PTR [ebx]
  40a7b3:	idiv   BYTE PTR [esi]
  40a7b5:	loope  0x40a7a1
  40a7b7:	push   ecx
  40a7b8:	jl     0x40a752
  40a7ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7bb:	cmp    al,0x2e
  40a7bd:	dec    edx
  40a7be:	xchg   esi,eax
  40a7bf:	xchg   DWORD PTR ds:0xfb07c0c9,edi
  40a7c5:	loop   0x40a7a5
  40a7c7:	ins    BYTE PTR es:[edi],dx
  40a7c8:	in     al,0xb5
  40a7ca:	fist   DWORD PTR gs:[edx]
  40a7cd:	outs   dx,DWORD PTR ds:[esi]
  40a7ce:	sbb    BYTE PTR [ebx+0x17a84477],dl
  40a7d4:	push   edi
  40a7d5:	add    dl,0x76
  40a7d8:	pop    ecx
  40a7d9:	pop    ss
  40a7da:	ins    DWORD PTR es:[edi],dx
  40a7db:	lods   al,BYTE PTR ds:[esi]
  40a7dc:	rcr    DWORD PTR [edx+0x34],cl
  40a7df:	arpl   WORD PTR [eax-0x25],bx
  40a7e2:	mov    dh,0x33
  40a7e4:	push   ebp
  40a7e5:	inc    eax
  40a7e6:	rcl    al,0x97
  40a7e9:	dec    edx
  40a7ea:	inc    edi
  40a7eb:	jmp    0x40a860
  40a7ed:	push   esp
  40a7ee:	sub    ebx,DWORD PTR [ebp+esi*4-0x376df193]
  40a7f5:	(bad)  
  40a7f7:	jecxz  0x40a7fd
  40a7f9:	sbb    ebp,esp
  40a7fb:	dec    ebp
  40a7fc:	ror    DWORD PTR [ebp+0x4c2d5dac],1
  40a802:	fwait
  40a803:	cmp    esp,ebx
  40a805:	sub    eax,0x2472a9e2
  40a80a:	gs jmp ebp
  40a80d:	pop    ebp
  40a80e:	adc    cl,dh
  40a810:	ins    BYTE PTR es:[edi],dx
  40a811:	mov    DWORD PTR [esp+ecx*2],esp
  40a814:	pop    ebx
  40a815:	or     ebx,DWORD PTR [ecx-0x5122b9d5]
  40a81b:	clc    
  40a81c:	push   esi
  40a81d:	in     al,dx
  40a81e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a81f:	mov    ebp,0xaceb9d1f
  40a824:	aaa    
  40a825:	push   edx
  40a826:	stc    
  40a827:	jecxz  0x40a836
  40a829:	xchg   edi,eax
  40a82a:	pop    esi
  40a82b:	push   ebp
  40a82c:	cwde   
  40a82d:	add    BYTE PTR [ebp-0x48],dh
  40a830:	xor    eax,0x6c9dc30f
  40a835:	mov    eax,ds:0xa5248216
  40a83a:	retf   
  40a83b:	dec    ebx
  40a83c:	jbe    0x40a83b
  40a83e:	push   edi
  40a83f:	mov    dh,0x97
  40a841:	aad    0xbe
  40a843:	sar    BYTE PTR [eax-0x8],0xd9
  40a847:	mov    esp,0x1645ebf2
  40a84c:	mov    ch,0x4e
  40a84e:	pop    edi
  40a84f:	add    dh,BYTE PTR [ecx-0xe4b0806]
  40a855:	dec    ecx
  40a856:	cmp    al,0x8f
  40a858:	loopne 0x40a8ac
  40a85a:	hlt    
  40a85b:	jmp    0xe3632976
  40a860:	fdivr  DWORD PTR [esi-0x657470d1]
  40a866:	push   ecx
  40a867:	mov    eax,ds:0x5265a81b
  40a86c:	mov    cl,0xbf
  40a86e:	inc    eax
  40a86f:	aaa    
  40a870:	push   edx
  40a871:	jne    0x40a8a2
  40a873:	push   edi
  40a874:	cmc    
  40a875:	mov    DWORD PTR [esi],edx
  40a877:	loopne 0x40a881
  40a879:	add    eax,0xff9f3f5c
  40a87e:	rcr    bl,1
  40a880:	clc    
  40a881:	test   DWORD PTR [ecx],ecx
  40a883:	xor    edx,DWORD PTR [edx+eax*2]
  40a886:	stc    
  40a887:	ins    BYTE PTR es:[edi],dx
  40a888:	mov    eax,ds:0x88fef6eb
  40a88d:	mov    bh,0x11
  40a88f:	mov    ebp,0xea71203e
  40a894:	outs   dx,DWORD PTR ds:[esi]
  40a895:	jle    0x40a87b
  40a897:	out    dx,al
  40a898:	out    0x7e,al
  40a89a:	or     esi,DWORD PTR [ebp+0x5c]
  40a89d:	sbb    eax,0xbc6088b8
  40a8a2:	popf   
  40a8a3:	pushf  
  40a8a4:	mov    dh,0xbe
  40a8a6:	fcmovu st,st(0)
  40a8a8:	sbb    al,0xf4
  40a8aa:	jl     0x40a8c9
  40a8ac:	xchg   esp,ecx
  40a8ae:	test   eax,0xb813a915
  40a8b3:	clc    
  40a8b4:	sub    al,0x4d
  40a8b6:	loop   0x40a899
  40a8b8:	mov    fs,ebx
  40a8ba:	(bad)  
  40a8bb:	or     al,0xd
  40a8bd:	adc    DWORD PTR [eax],eax
  40a8bf:	shl    DWORD PTR [ecx+0x28e219d7],1
  40a8c5:	ja     0x40a8a3
  40a8c7:	fucomp st(6)
  40a8c9:	out    0x3d,al
  40a8cb:	and    BYTE PTR [ecx+edi*8+0x48d16686],bl
  40a8d2:	mov    esp,0x46e08a1e
  40a8d7:	push   ds
  40a8d8:	mov    edx,eax
  40a8da:	pop    es
  40a8db:	mov    al,0x87
  40a8dd:	or     dl,BYTE PTR [esi+eax*4]
  40a8e0:	mov    WORD PTR [ecx+0x68],ss
  40a8e3:	fld    TBYTE PTR [edi+0x3c7fa3b3]
  40a8e9:	(bad)  
  40a8ea:	cli    
  40a8eb:	inc    esp
  40a8ec:	scas   eax,DWORD PTR es:[edi]
  40a8ed:	cmc    
  40a8ee:	jge    0x40a958
  40a8f0:	xor    bh,bh
  40a8f2:	mov    edi,0x455a9b5a
  40a8f7:	in     al,0x80
  40a8f9:	xchg   edi,eax
  40a8fa:	add    eax,0x64781d61
  40a8ff:	push   ebp
  40a900:	fsub   QWORD PTR [esi]
  40a902:	sub    edi,DWORD PTR [eax]
  40a904:	and    al,0x33
  40a906:	push   edx
  40a907:	or     ah,bl
  40a909:	push   esi
  40a90a:	add    ebx,DWORD PTR [edx+0x54]
  40a90d:	or     al,0x1d
  40a90f:	out    0xdf,eax
  40a911:	jmp    esp
  40a913:	mov    ch,0x2d
  40a915:	mov    ebp,0xf777812a
  40a91a:	and    esi,ebp
  40a91c:	(bad)  
  40a91d:	pushf  
  40a91e:	adc    ebx,DWORD PTR [eax+esi*1-0x31]
  40a922:	out    dx,al
  40a923:	jns    0x40a8d1
  40a925:	inc    ebp
  40a926:	and    bh,al
  40a928:	gs cmp eax,0xf8d7b98c
  40a92e:	gs and al,0xdd
  40a931:	add    BYTE PTR fs:[ecx+0x2585e2c6],dl
  40a938:	push   edi
  40a939:	(bad)  
  40a93a:	scas   al,BYTE PTR es:[edi]
  40a93b:	push   0xffffffb5
  40a93d:	les    eax,FWORD PTR [edx-0x3120b2ab]
  40a943:	pop    ss
  40a944:	loop   0x40a8fa
  40a946:	sar    BYTE PTR [ebx-0x3e],cl
  40a949:	iret   
  40a94a:	sar    DWORD PTR [edx-0x42],1
  40a94d:	push   cs
  40a94e:	out    dx,eax
  40a94f:	je     0x40a98c
  40a951:	dec    ebp
  40a952:	pop    es
  40a953:	pusha  
  40a954:	xor    edi,DWORD PTR [ebx+0x53044f96]
  40a95a:	dec    esp
  40a95b:	cld    
  40a95c:	psadbw mm6,mm0
  40a95f:	sahf   
  40a960:	dec    edx
  40a961:	cs pop esi
  40a963:	mov    ah,0x32
  40a965:	nop
  40a966:	jnp    0x40a936
  40a968:	fsubr  st,st(0)
  40a96a:	jmp    0xeb00:0x21ad26d0
  40a971:	cwde   
  40a972:	jb     0x40a91e
  40a974:	gs leave 
  40a976:	sub    al,BYTE PTR [edx-0x390d5aeb]
  40a97c:	fnsave [edx-0x75]
  40a97f:	push   DWORD PTR [edi-0x387d2e7d]
  40a985:	dec    esi
  40a986:	call   0x96fe089d
  40a98b:	(bad)  
  40a98c:	int    0x90
  40a98e:	jns    0x40a9c1
  40a990:	stos   DWORD PTR es:[edi],eax
  40a991:	jge    0x40a921
  40a993:	shr    DWORD PTR ds:0x829dda76,1
  40a999:	int    0xbc
  40a99b:	dec    ecx
  40a99c:	dec    edx
  40a99d:	aad    0xe4
  40a99f:	dec    ebx
  40a9a0:	xor    eax,0x7dc8b85c
  40a9a5:	mov    dh,0xea
  40a9a7:	cli    
  40a9a8:	(bad)  
  40a9ab:	icebp  
  40a9ac:	(bad)  
  40a9ad:	mov    esi,0x111aa5b0
  40a9b2:	call   0x885528eb
  40a9b7:	xor    eax,0x8dc44ec9
  40a9bc:	or     dh,BYTE PTR [edx-0x33]
  40a9bf:	lock stc 
  40a9c1:	inc    esp
  40a9c2:	in     eax,dx
  40a9c3:	ret    
  40a9c4:	mov    al,0xc1
  40a9c6:	inc    ebp
  40a9c7:	gs jne 0x40a94f
  40a9ca:	push   esi
  40a9cb:	sahf   
  40a9cc:	pop    edx
  40a9cd:	xchg   edi,eax
  40a9ce:	arpl   WORD PTR [ebx+esi*4-0x70eb2385],dx
  40a9d5:	and    dh,BYTE PTR [eax-0x705416c6]
  40a9db:	ret    0xda8d
  40a9de:	mov    eax,ds:0xcc0ab5be
  40a9e3:	and    ch,BYTE PTR [ecx]
  40a9e5:	(bad)  [ecx]
  40a9e7:	xchg   edx,eax
  40a9e8:	pop    ebp
  40a9e9:	jmp    0x40a997
  40a9eb:	arpl   dx,cx
  40a9ed:	out    dx,eax
  40a9ee:	sti    
  40a9ef:	xchg   ecx,eax
  40a9f0:	pop    ebx
  40a9f1:	in     al,dx
  40a9f2:	sbb    DWORD PTR [esi-0x1d9d38fb],edx
  40a9f8:	cwde   
  40a9f9:	test   al,0x1a
  40a9fb:	aam    0x81
  40a9fd:	adc    al,0x5d
  40a9ff:	inc    eax
  40aa00:	cmp    eax,0x831c4bd5
  40aa05:	test   al,0x81
  40aa07:	je     0x40aa56
  40aa09:	in     eax,0x32
  40aa0b:	push   0x92eab049
  40aa10:	add    BYTE PTR [eax-0x3b],ah
  40aa13:	rcr    BYTE PTR [ecx],cl
  40aa15:	pop    esp
  40aa16:	xor    ah,BYTE PTR ds:0x989d38ee
  40aa1c:	pop    ds
  40aa1d:	ret    0x328f
  40aa20:	data16 fistp QWORD PTR [edx+0x1d4a68ac]
  40aa27:	push   es
  40aa28:	popa   
  40aa29:	and    ebp,DWORD PTR [esi+0x12]
  40aa2c:	and    DWORD PTR [edx-0x57a3ef82],ebp
  40aa32:	and    eax,esi
  40aa34:	jo     0x40aa15
  40aa36:	cld    
  40aa37:	xchg   edx,eax
  40aa38:	pop    esp
  40aa39:	std    
  40aa3a:	jo     0x40aa01
  40aa3c:	outs   dx,BYTE PTR ds:[esi]
  40aa3d:	dec    esp
  40aa3e:	scas   al,BYTE PTR es:[edi]
  40aa3f:	add    BYTE PTR gs:0xd8ba5f1e,bl
  40aa46:	imul   esp,DWORD PTR [ecx],0xffffffab
  40aa49:	jo     0x40aa84
  40aa4b:	and    BYTE PTR [esi],cl
  40aa4d:	scas   eax,DWORD PTR es:[edi]
  40aa4e:	into   
  40aa4f:	push   ss
  40aa50:	mov    cl,0xb4
  40aa52:	inc    ecx
  40aa53:	out    dx,eax
  40aa54:	lahf   
  40aa55:	popa   
  40aa56:	jae    0x40aa37
  40aa58:	adc    bl,bh
  40aa5a:	inc    DWORD PTR [ecx+0x22]
  40aa5d:	mov    ebp,0xf83412ad
  40aa62:	add    DWORD PTR [edx+0x48],0x9876d528
  40aa69:	mov    edi,0xebc5bb03
  40aa6e:	dec    esp
  40aa6f:	and    ecx,edi
  40aa71:	and    dl,bl
  40aa73:	lock inc esp
  40aa75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa76:	fs pusha 
  40aa78:	push   eax
  40aa79:	pop    ss
  40aa7a:	js     0x40aa91
  40aa7c:	cmp    BYTE PTR [edx+0x69b0da3a],dh
  40aa82:	dec    eax
  40aa83:	lods   eax,DWORD PTR ds:[esi]
  40aa84:	je     0x40aaeb
  40aa86:	sub    eax,0x6912f78
  40aa8b:	push   ss
  40aa8c:	jno    0x9fed1106
  40aa92:	lds    edx,FWORD PTR [ebp+0xf]
  40aa95:	xchg   BYTE PTR [edx+0x36],ah
  40aa98:	inc    ebx
  40aa99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa9a:	lea    edx,[ebx]
  40aa9c:	jbe    0x40aab3
  40aa9e:	mov    ch,0xbe
  40aaa0:	repz dec ecx
  40aaa2:	aas    
  40aaa3:	sbb    edx,DWORD PTR [ebp-0x7]
  40aaa6:	xchg   edx,eax
  40aaa7:	cmp    eax,0x7fd04782
  40aaac:	push   0xfd147e74
  40aab1:	imul   eax,DWORD PTR [ebp+ebx*1-0x1ed242fa],0x77
  40aab9:	cmc    
  40aaba:	(bad)  [ebx*8-0xc32ea05]
  40aac1:	retf   
  40aac2:	mov    bh,BYTE PTR [eax+0x8]
  40aac5:	and    BYTE PTR [ebp-0x1c],ah
  40aac8:	push   edi
  40aac9:	adc    BYTE PTR [edi],al
  40aacb:	arpl   WORD PTR [eax-0x5d],sp
  40aace:	dec    eax
  40aacf:	add    al,0x9d
  40aad2:	hlt    
  40aad3:	inc    eax
  40aad4:	popf   
  40aad5:	xor    DWORD PTR [esi+0x3d],ebx
  40aad8:	loop   0x40aa6a
  40aada:	(bad)  
  40aadb:	fisttp WORD PTR [esi]
  40aadd:	mov    edx,0x85b9892e
  40aae2:	inc    ecx
  40aae3:	enter  0x316d,0x82
  40aae7:	repz xor dl,ah
  40aaea:	or     eax,0xf7690681
  40aaef:	xchg   ebp,eax
  40aaf0:	ja     0x40aa95
  40aaf2:	pop    eax
  40aaf3:	sub    eax,esi
  40aaf5:	mov    ecx,0x44d82c5f
  40aafa:	xchg   BYTE PTR [ebp+ecx*4-0x6b834742],ah
  40ab01:	jae    0x40ab21
  40ab03:	js     0x40aad6
  40ab05:	add    esi,eax
  40ab07:	fisub  DWORD PTR [ecx+0x5d]
  40ab0a:	xor    ah,BYTE PTR [ebp-0x4a05f240]
  40ab10:	sbb    cl,dh
  40ab12:	sbb    eax,0x96619b2c
  40ab17:	ss int 0x8e
  40ab1a:	mov    ebx,0xa32ca600
  40ab1f:	ins    BYTE PTR es:[edi],dx
  40ab20:	push   edi
  40ab21:	or     ecx,DWORD PTR [ebx]
  40ab23:	mov    BYTE PTR [edi],dh
  40ab25:	out    dx,eax
  40ab26:	stc    
  40ab27:	mov    bl,0x3d
  40ab29:	push   ebx
  40ab2a:	ss hlt 
  40ab2c:	aad    0xe2
  40ab2e:	push   ebx
  40ab2f:	retf   0xd8b0
  40ab32:	(bad)  
  40ab33:	mov    ebx,0x61899a95
  40ab38:	dec    ebx
  40ab39:	sbb    DWORD PTR [esi+ebp*8],ebx
  40ab3c:	rol    BYTE PTR ds:0x952c7a80,cl
  40ab42:	mov    ds:0xc801a49,al
  40ab47:	dec    esp
  40ab48:	popf   
  40ab49:	fcmovb st,st(6)
  40ab4b:	mov    BYTE PTR [edx+0x488cb3b6],dh
  40ab51:	adc    DWORD PTR [esp+ebx*4],edx
  40ab54:	ins    BYTE PTR es:[edi],dx
  40ab55:	icebp  
  40ab56:	mov    ecx,0xaa67280e
  40ab5b:	ficomp DWORD PTR [ecx-0x1e]
  40ab5e:	and    cx,WORD PTR [ebx+edx*1]
  40ab62:	inc    ebx
  40ab63:	or     esi,DWORD PTR [edi-0x1a8f7329]
  40ab69:	or     dl,BYTE PTR [ebx]
  40ab6b:	or     al,0x19
  40ab6d:	test   bl,bl
  40ab6f:	sub    DWORD PTR [edi-0x25a86362],eax
  40ab75:	daa    
  40ab76:	sub    al,0x21
  40ab78:	mov    cl,0x8c
  40ab7a:	loopne 0x40ab41
  40ab7c:	xor    dh,ch
  40ab7e:	adc    eax,esi
  40ab80:	dec    esi
  40ab81:	or     al,0x8e
  40ab83:	xchg   DWORD PTR [ecx+0x59],edi
  40ab86:	mov    cl,BYTE PTR [ebx]
  40ab88:	dec    esi
  40ab89:	mov    BYTE PTR [ebx-0x3],al
  40ab8c:	xchg   DWORD PTR [eax+0x6ed6cb27],esi
  40ab92:	arpl   sp,bx
  40ab94:	outs   dx,BYTE PTR ds:[esi]
  40ab95:	ds jle 0x40ab72
  40ab98:	mov    ah,0x42
  40ab9a:	(bad)
  40ab9f:	mov    ebp,0x6dc3e6f2
  40aba4:	loop   0x40ab7b
  40aba6:	push   ebx
  40aba7:	repz les ebx,FWORD PTR [ecx]
  40abaa:	mov    ah,0xb7
  40abac:	aad    0x11
  40abae:	clc    
  40abaf:	mov    eax,0x7daa8285
  40abb4:	cmp    al,0xc2
  40abb6:	jnp    0x40abc9
  40abb8:	xchg   ebx,eax
  40abb9:	lods   al,BYTE PTR gs:[esi]
  40abbb:	data16 jae 0x40ab7a
  40abbe:	in     eax,0xa1
  40abc0:	mov    ch,0xc0
  40abc2:	in     al,dx
  40abc3:	cmp    ebp,DWORD PTR [esi+0x58]
  40abc6:	repnz xor cl,dl
  40abc9:	adc    eax,0xd5e4adaf
  40abce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abcf:	lds    edx,FWORD PTR [edi]
  40abd1:	add    bh,al
  40abd3:	imul   esi,DWORD PTR [edx-0x1dcacc91],0xffffffa0
  40abda:	push   edx
  40abdb:	or     eax,0xbc27ab53
  40abe0:	(bad)  
  40abe1:	iret   
  40abe2:	or     ah,BYTE PTR [ecx-0x7bf3cac8]
  40abe8:	fnstsw WORD PTR [esi]
  40abea:	or     BYTE PTR [esi],bh
  40abec:	cs ins DWORD PTR es:[edi],dx
  40abee:	fstp   QWORD PTR [ecx-0x69]
  40abf1:	xor    edi,DWORD PTR [ebp+0x2c]
  40abf4:	jbe    0x40abeb
  40abf6:	mov    ah,0x4c
  40abf8:	ds mov ebx,0xbf478783
  40abfe:	call   0x9a6d1e52
  40ac03:	sar    BYTE PTR ds:0x62e2404d,1
  40ac09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac0a:	dec    edx
  40ac0b:	pusha  
  40ac0c:	ror    ch,0xc4
  40ac0f:	jmp    0x394a:0x9a18216
  40ac16:	mov    ecx,0x29849055
  40ac1b:	aas    
  40ac1c:	jmp    0xe6b7:0xea50be3f
  40ac23:	mov    edi,ebx
  40ac25:	outs   dx,BYTE PTR ds:[esi]
  40ac26:	lea    ebx,[edx+0x47]
  40ac29:	not    ecx
  40ac2b:	imul   esi,DWORD PTR [edi-0x1a147b39],0xffffff9a
  40ac32:	int    0x9
  40ac34:	cmp    bl,dl
  40ac36:	jmp    0x40ac3a
  40ac38:	iret   
  40ac39:	shl    BYTE PTR [esi-0x6c],cl
  40ac3c:	mov    eax,0x33be4837
  40ac41:	jle    0x40ac19
  40ac43:	popf   
  40ac44:	dec    ebx
  40ac45:	jne    0x40ac8b
  40ac47:	inc    ecx
  40ac48:	mov    BYTE PTR [edx-0x7b1def91],al
  40ac4e:	sti    
  40ac4f:	pop    ss
  40ac50:	pop    edi
  40ac51:	or     al,dl
  40ac53:	test   al,0x93
  40ac55:	ror    BYTE PTR [ebp+0x23],cl
  40ac58:	and    BYTE PTR [ebx-0x15],ah
  40ac5b:	scas   eax,DWORD PTR es:[edi]
  40ac5c:	imul   edi,DWORD PTR [eax],0xfffffff8
  40ac5f:	out    0x22,al
  40ac61:	xchg   esp,eax
  40ac62:	or     eax,0xf60445c6
  40ac67:	out    dx,eax
  40ac68:	dec    esi
  40ac69:	xor    BYTE PTR [edi+0x4c],al
  40ac6c:	sub    al,0x63
  40ac6e:	mov    DWORD PTR [ecx],eax
  40ac70:	addr16 sti 
  40ac72:	es xor al,0xc0
  40ac75:	aaa    
  40ac76:	mov    ecx,0x3dcd541b
  40ac7b:	ficom  WORD PTR [esi+0x3a6183a]
  40ac81:	mov    ebx,0xc6bae7a7
  40ac86:	sti    
  40ac87:	aas    
  40ac88:	or     ch,BYTE PTR [edi]
  40ac8a:	push   0xc0d86bc4
  40ac8f:	push   ebp
  40ac90:	pop    ebx
  40ac91:	fsubr  st,st(4)
  40ac93:	ret    0x16f7
  40ac96:	daa    
  40ac97:	scas   al,BYTE PTR es:[edi]
  40ac98:	mov    esi,DWORD PTR [ebp-0x57adb281]
  40ac9e:	in     eax,dx
  40ac9f:	pop    DWORD PTR [ebp+0x73]
  40aca2:	inc    esp
  40aca3:	sub    eax,0x257c124b
  40aca8:	cmp    DWORD PTR [eax-0x31],esi
  40acab:	(bad)  
  40acac:	jb     0x40ac4c
  40acae:	push   eax
  40acaf:	sar    DWORD PTR [ebx+0x27],1
  40acb2:	je     0x40accf
  40acb4:	inc    esi
  40acb5:	and    DWORD PTR [ecx-0x50e90b3f],0x1a
  40acbc:	sar    BYTE PTR [edi-0x25c8b901],cl
  40acc2:	push   0xffffffd4
  40acc4:	jne    0x40acdf
  40acc6:	dec    edx
  40acc7:	ss jecxz 0x40acad
  40acca:	out    dx,al
  40accb:	pop    edx
  40accc:	pop    ebx
  40accd:	dec    ecx
  40acce:	lahf   
  40accf:	setl   BYTE PTR [ecx]
  40acd2:	mov    ah,0xcb
  40acd4:	dec    edx
  40acd5:	jmp    0xbf68:0x1b8def19
  40acdc:	push   0x7f42db4f
  40ace1:	lea    ecx,[edx]
  40ace3:	les    edx,FWORD PTR [ecx-0x56a9a3da]
  40ace9:	inc    edi
  40acea:	mov    dh,0xae
  40acec:	cmp    ch,BYTE PTR [ebx]
  40acee:	or     cl,BYTE PTR [eax]
  40acf0:	xor    al,0x62
  40acf2:	pop    es
  40acf3:	xchg   ebx,eax
  40acf4:	in     eax,dx
  40acf5:	je     0x40ad35
  40acf7:	popa   
  40acf8:	cdq    
  40acf9:	pop    esi
  40acfa:	loop   0x40acb1
  40acfc:	add    BYTE PTR [ebp+0x29],al
  40acff:	int3   
  40ad00:	pusha  
  40ad01:	test   DWORD PTR [edx],ecx
  40ad03:	add    al,0x96
  40ad05:	push   es
  40ad06:	push   eax
  40ad07:	aam    0x9f
  40ad09:	pusha  
  40ad0a:	lea    ecx,[ebx]
  40ad0c:	popf   
  40ad0d:	mov    bl,0x8f
  40ad0f:	xchg   esi,eax
  40ad10:	mov    ebx,0xe31a3034
  40ad15:	jno    0x40ad82
  40ad17:	push   ebx
  40ad19:	cmp    eax,0xbc6cc66c
  40ad1e:	cld    
  40ad1f:	outs   dx,BYTE PTR ds:[esi]
  40ad20:	mov    ds:0x8b4e2632,al
  40ad25:	adc    eax,0xef2627c1
  40ad2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad2b:	sbb    BYTE PTR [ebp+0x26],ch
  40ad2e:	loopne 0x40acbc
  40ad30:	fwait
  40ad31:	test   DWORD PTR [eax-0x26c518eb],esi
  40ad37:	dec    esp
  40ad38:	xchg   BYTE PTR [esp+ebx*8],bl
  40ad3b:	jl     0x40acfc
  40ad3d:	rcl    DWORD PTR [edi],0xc1
  40ad40:	push   esi
  40ad41:	std    
  40ad42:	or     ecx,DWORD PTR [eax]
  40ad44:	or     esp,ebx
  40ad46:	sub    eax,0x5df0f7e7
  40ad4b:	push   ebp
  40ad4c:	cmp    edx,DWORD PTR [eax]
  40ad4e:	les    eax,FWORD PTR [esi-0x1043323c]
  40ad54:	push   sp
  40ad56:	sbb    al,0x14
  40ad58:	outs   dx,DWORD PTR ds:[esi]
  40ad59:	ds lahf 
  40ad5b:	adc    eax,0xf0728978
  40ad60:	rcr    DWORD PTR [edi+0x6a],1
  40ad63:	xchg   edx,eax
  40ad64:	pop    ebx
  40ad65:	sub    al,0x33
  40ad67:	sub    eax,DWORD PTR [eax]
  40ad69:	jge    0x40ad5a
  40ad6b:	in     al,dx
  40ad6c:	inc    esp
  40ad6d:	mov    ecx,edx
  40ad6f:	or     BYTE PTR [eax+0x75798ccb],ch
  40ad75:	(bad)  
  40ad77:	jae    0x40adb7
  40ad79:	mov    esp,0xe7e2a581
  40ad7e:	fcomp  QWORD PTR [eax+0x4bc785bc]
  40ad84:	popf   
  40ad85:	mov    ebp,0xc6543f89
  40ad8a:	test   eax,0x7ebc59a0
  40ad8f:	mul    BYTE PTR [ebp+0x50]
  40ad92:	cmc    
  40ad93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad94:	sub    eax,0x28a4deda
  40ad99:	jl     0x40ad26
  40ad9b:	inc    ebp
  40ad9c:	in     al,dx
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a71b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a71f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi+0x3cc282c6]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x2c
  40aed6:	int3   
  40aed7:	pop    ebx
  40aed8:	fbstp  TBYTE PTR [esi+0x1392e9fc]
  40aede:	and    ah,BYTE PTR [edi]
  40aee0:	mov    ebp,0x45fe7d95
  40aee5:	adc    dl,BYTE PTR [ebx]
  40aee7:	push   ebp
  40aee8:	adc    al,0x7f
  40aeea:	ffreep st(0)
  40aeec:	mov    bh,BYTE PTR [ecx+0x32fce2ef]
  40aef2:	ja     0x40af10
  40aef4:	dec    esp
  40aef5:	clc    
  40aef6:	out    dx,al
  40aef7:	mov    es,WORD PTR [ebx]
  40aef9:	mov    edx,DWORD PTR [esi+0x25]
  40aefc:	jecxz  0x40af05
  40aefe:	inc    ebp
  40aeff:	lahf   
  40af00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af01:	and    al,0x38
  40af03:	sub    BYTE PTR [edx],dh
  40af05:	rcl    BYTE PTR [esi+eiz*8+0x7ba025e9],0xed
  40af0d:	dec    ecx
  40af0e:	pop    es
  40af0f:	and    dl,ch
  40af11:	push   es
  40af12:	jmp    0x40ae95
  40af14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af15:	outs   dx,DWORD PTR ds:[esi]
  40af16:	hlt    
  40af17:	mov    ch,0x16
  40af19:	push   edi
  40af1a:	pop    ds
  40af1b:	inc    esi
  40af1c:	outs   dx,DWORD PTR ds:[esi]
  40af1d:	fadd   DWORD PTR [ecx+0x12562461]
  40af23:	in     al,0x7
  40af25:	enter  0x3004,0xbe
  40af29:	ret    
  40af2a:	mov    dl,0xcd
  40af2c:	sub    bl,BYTE PTR [ebx+ebx*8+0x60]
  40af30:	jge    0x40aeeb
  40af32:	gs cld 
  40af34:	or     dh,al
  40af36:	nop
  40af37:	pop    ebp
  40af38:	pop    esp
  40af39:	data16 loopne 0x40af40
  40af3c:	and    esi,DWORD PTR [eax]
  40af3e:	imul   DWORD PTR [edi]
  40af40:	xchg   ebx,eax
  40af41:	jmp    0x40af6c
  40af43:	push   0xb87e5400
  40af48:	sbb    dh,ah
  40af4a:	dec    ebx
  40af4b:	stos   BYTE PTR es:[edi],al
  40af4c:	push   esi
  40af4d:	add    eax,0xa81fbb0
  40af52:	fs das 
  40af54:	inc    edx
  40af55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af56:	mov    ds:0xcb107bd2,al
  40af5b:	jno    0x40af4e
  40af5d:	sahf   
  40af5e:	xor    BYTE PTR [edi+0x6ba98fab],ch
  40af64:	fnsave [ebx-0x2d]
  40af67:	push   DWORD PTR [edi+0x74346904]
  40af6d:	dec    ebp
  40af6e:	fcmovu st,st(0)
  40af70:	push   cs
  40af71:	dec    edi
  40af72:	lods   al,BYTE PTR ds:[esi]
  40af73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af74:	out    0x4f,al
  40af76:	ds mov edi,0xf66cb712
  40af7c:	mov    cl,0x3a
  40af7e:	push   edi
  40af7f:	or     BYTE PTR [ebx-0x7],bl
  40af82:	sub    DWORD PTR ds:0xba57013a,ebx
  40af88:	inc    eax
  40af89:	ins    BYTE PTR es:[edi],dx
  40af8a:	gs inc ecx
  40af8c:	mov    ah,0xda
  40af8e:	scas   al,BYTE PTR es:[edi]
  40af8f:	pop    ds
  40af90:	inc    esp
  40af91:	lods   al,BYTE PTR ds:[esi]
  40af92:	test   eax,0xe4c2c1eb
  40af97:	and    BYTE PTR ds:0x227664b,bh
  40af9d:	aam    0xbc
  40af9f:	and    eax,0x8e2c038e
  40afa4:	retf   0xcae1
  40afa7:	js     0x40af34
  40afa9:	pop    ss
  40afaa:	mov    ds:0xbf6d18b5,eax
  40afaf:	and    bl,bh
  40afb1:	cmp    cl,dh
  40afb3:	sahf   
  40afb4:	add    ecx,DWORD PTR [esi-0x1b7407ad]
  40afba:	cmp    eax,DWORD PTR [edi]
  40afbc:	mov    cl,0x39
  40afbe:	and    eax,0x21193458
  40afc3:	fwait
  40afc4:	pop    ecx
  40afc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc6:	or     eax,0xbe146bd2
  40afcb:	cmp    DWORD PTR [edx],ecx
  40afcd:	mov    bl,0x63
  40afcf:	mov    al,ds:0x63748eaf
  40afd4:	pop    ebx
  40afd5:	mov    esi,0xd24fc11
  40afda:	call   0x388e:0xe87f8e7d
  40afe1:	jg     0x40afcd
  40afe3:	(bad)  
  40afe5:	into   
  40afe6:	lahf   
  40afe7:	push   ss
  40afe8:	mov    ebx,0xb2069a1d
  40afed:	inc    esp
  40afee:	scas   eax,DWORD PTR es:[edi]
  40afef:	das    
  40aff0:	rcl    DWORD PTR [eax+0x6c599223],1
  40aff6:	jge    0x40b004
  40aff8:	xlat   BYTE PTR ds:[ebx]
  40aff9:	repnz pop es
  40affb:	inc    edi
  40affc:	jnp    0x40afb3
  40affe:	sub    eax,0x164ccb18
  40b003:	call   0x3da83a62
  40b008:	out    0x90,eax
  40b00a:	mov    edi,0x58a8dde2
  40b00f:	and    al,0x9f
  40b011:	ja     0x40b027
  40b013:	pop    DWORD PTR [ebp+0x9]
  40b016:	xchg   esp,eax
  40b017:	call   0x7e6829b0
  40b01c:	xchg   edi,eax
  40b01d:	imul   esi,DWORD PTR [eax+edx*4],0xffffff95
  40b021:	push   edx
  40b022:	cmp    bh,BYTE PTR [ecx+0x70f363ac]
  40b028:	lahf   
  40b029:	mov    bl,0x31
  40b02b:	xchg   esi,eax
  40b02c:	mov    ecx,0x8698a268
  40b031:	add    BYTE PTR [esi-0x80],0x1a
  40b035:	inc    edi
  40b036:	lds    eax,FWORD PTR [eax]
  40b038:	xchg   esp,eax
  40b039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b03a:	bound  esi,QWORD PTR [ebp+ebp*2-0x7c]
  40b03e:	xor    ecx,ecx
  40b040:	arpl   WORD PTR [edi-0x69],si
  40b043:	adc    DWORD PTR [ebx],esi
  40b045:	cli    
  40b046:	fbstp  TBYTE PTR ds:0xd80b09bc
  40b04c:	mov    esi,0x21df7377
  40b051:	adc    al,0x5a
  40b053:	mov    dh,0xbd
  40b055:	adc    al,BYTE PTR [esi-0x8c8edd0]
  40b05b:	fwait
  40b05c:	sti    
  40b05d:	xchg   ebp,eax
  40b05e:	test   eax,0x54deefa
  40b063:	hlt    
  40b064:	or     BYTE PTR [esi],ch
  40b066:	push   ebp
  40b067:	mov    DWORD PTR ds:0xca7ce81a,ecx
  40b06d:	pop    edi
  40b06e:	or     al,0x29
  40b070:	sbb    dl,BYTE PTR [esi+0x5f]
  40b073:	(bad)  
  40b074:	jmp    0x47c5:0xfa25090
  40b07b:	leave  
  40b07c:	mov    al,0x34
  40b07e:	mov    dh,0x51
  40b080:	add    eax,0xe4fb6b63
  40b085:	sub    al,0xd8
  40b087:	xchg   ebp,eax
  40b088:	neg    DWORD PTR [esi+0x1a0e0dfd]
  40b08e:	shl    DWORD PTR [ecx],1
  40b090:	std    
  40b091:	dec    eax
  40b092:	xchg   ebx,eax
  40b093:	(bad)
  40b096:	xchg   DWORD PTR [ecx-0x41f9e49a],ebp
  40b09c:	in     al,0xd2
  40b09e:	std    
  40b09f:	jg     0x40b03f
  40b0a1:	loope  0x40b103
  40b0a3:	es adc DWORD PTR es:[ebx+esi*2],edi
  40b0a8:	les    ebp,FWORD PTR [ebp-0x5]
  40b0ab:	jl     0x40b0d0
  40b0ad:	pop    ebp
  40b0ae:	mov    dh,0xcd
  40b0b0:	cmp    dl,cl
  40b0b2:	adc    edx,DWORD PTR [ebp+0x4a]
  40b0b5:	sub    edx,esi
  40b0b7:	or     DWORD PTR [esi-0x1894e000],eax
  40b0bd:	popf   
  40b0be:	int3   
  40b0bf:	retf   0x90a3
  40b0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c3:	ins    BYTE PTR es:[edi],dx
  40b0c4:	mov    esi,0x5682d991
  40b0c9:	sbb    BYTE PTR [ebx-0xada809],ch
  40b0cf:	push   0xc3a5fec8
  40b0d4:	mov    eax,ds:0xff807c72
  40b0d9:	jl     0x40b093
  40b0db:	and    ecx,eax
  40b0dd:	push   ecx
  40b0de:	fs mov ebp,0x54434f5e
  40b0e4:	xor    edx,DWORD PTR [ebp-0xd]
  40b0e7:	mov    edx,0xc388c6be
  40b0ec:	push   esi
  40b0ed:	jp     0x40b0b2
  40b0ef:	pop    edx
  40b0f0:	add    DWORD PTR [edi+0xb2edabf],edi
  40b0f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0f7:	add    BYTE PTR [ecx+0x350cc756],ch
  40b0fd:	fidiv  WORD PTR [ecx-0x2b]
  40b100:	xchg   ebp,eax
  40b101:	push   esp
  40b102:	jnp    0x40b12f
  40b104:	outs   dx,BYTE PTR ds:[esi]
  40b105:	ins    DWORD PTR es:[edi],dx
  40b106:	cli    
  40b107:	mov    dh,0x91
  40b109:	shr    DWORD PTR [edi+eiz*2-0x25],1
  40b10d:	add    al,0xba
  40b10f:	inc    ecx
  40b110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b111:	pusha  
  40b112:	cmp    al,0x92
  40b114:	cmp    ah,ch
  40b116:	add    BYTE PTR [ebp-0x3b278a36],dl
  40b11c:	pop    ecx
  40b11d:	adc    BYTE PTR [esi],bl
  40b11f:	push   esi
  40b120:	xchg   esp,eax
  40b121:	(bad)  
  40b122:	jmp    0xcbd20f0c
  40b127:	mov    ecx,0x14e181e6
  40b12c:	pop    ds
  40b12d:	stos   DWORD PTR es:[edi],eax
  40b12e:	scas   al,BYTE PTR es:[edi]
  40b12f:	pop    ebp
  40b130:	in     eax,0xd9
  40b132:	push   esp
  40b133:	and    al,0x15
  40b135:	lea    eax,[esi]
  40b137:	cld    
  40b138:	in     al,dx
  40b139:	(bad)  
  40b13a:	jmp    0x40b10a
  40b13c:	jl     0x40b110
  40b13e:	pop    esp
  40b13f:	push   edx
  40b140:	xor    DWORD PTR [edi],ebx
  40b142:	mov    bh,0x10
  40b144:	inc    eax
  40b145:	xchg   ebp,eax
  40b146:	lds    ecx,FWORD PTR ds:0x4e580350
  40b14c:	add    eax,0xdeba65e3
  40b151:	in     al,dx
  40b152:	sbb    ch,BYTE PTR ds:0x3335ccfc
  40b158:	mov    eax,ds:0xc2fda5bc
  40b15d:	loope  0x40b1dd
  40b15f:	mov    eax,ds:0x8c08f4b4
  40b164:	sbb    al,0xba
  40b166:	daa    
  40b167:	test   BYTE PTR [eax+0x17f93888],al
  40b16d:	cmp    esp,ecx
  40b16f:	jmp    FWORD PTR [esi-0x1ff13adf]
  40b175:	jne    0x40b19d
  40b177:	sbb    ah,al
  40b179:	outs   dx,BYTE PTR ds:[esi]
  40b17a:	nop
  40b17b:	out    dx,eax
  40b17c:	test   BYTE PTR [eax+0x20efc4e4],bh
  40b182:	jl     0x40b167
  40b184:	int3   
  40b185:	inc    edx
  40b186:	sbb    al,0x48
  40b188:	ds xor eax,0x89005a3
  40b18e:	cli    
  40b18f:	push   0x3b
  40b191:	mov    cl,0xdb
  40b193:	cmp    al,0xfe
  40b195:	push   ebp
  40b196:	cmp    edx,DWORD PTR [ebx-0x63]
  40b199:	xchg   esi,eax
  40b19a:	mov    dl,BYTE PTR [ebp+eax*2+0x34]
  40b19e:	mov    ch,0xe
  40b1a0:	xor    BYTE PTR [ebp-0x5ffff1ef],0x3b
  40b1a7:	mov    WORD PTR [esi+ebx*1],ds
  40b1aa:	aam    0x53
  40b1ac:	enter  0x9975,0xd8
  40b1b0:	and    al,0x67
  40b1b2:	push   ebp
  40b1b3:	nop
  40b1b4:	push   0xb5438ba1
  40b1b9:	jge    0x40b1b6
  40b1bb:	or     edx,DWORD PTR [eax+0x1a3a62fe]
  40b1c1:	push   eax
  40b1c2:	sub    eax,0x711f42a7
  40b1c7:	mov    bl,0x34
  40b1c9:	ret    0x57f9
  40b1cc:	pop    edx
  40b1cd:	cmp    DWORD PTR [eax],eax
  40b1cf:	jmp    0xb8e67608
  40b1d4:	mov    bl,0x7b
  40b1d6:	repz out 0xc1,eax
  40b1d9:	pop    ebp
  40b1da:	je     0x40b165
  40b1dc:	pop    ecx
  40b1dd:	cmp    DWORD PTR [ecx],ebp
  40b1df:	push   edi
  40b1e0:	test   al,0xcb
  40b1e2:	mov    BYTE PTR [ecx-0x11],ah
  40b1e5:	shl    esi,0x33
  40b1e8:	sbb    edi,ebx
  40b1ea:	je     0x40b20f
  40b1ec:	fs mov dh,0x17
  40b1ef:	sbb    BYTE PTR [ecx],0x88
  40b1f2:	jl     0x40b24c
  40b1f4:	xchg   ecx,eax
  40b1f5:	in     al,dx
  40b1f6:	loop   0x40b1bb
  40b1f8:	cmp    eax,0x6fffe7cf
  40b1fd:	mov    ch,0xeb
  40b1ff:	inc    edx
  40b200:	loope  0x40b185
  40b202:	push   edx
  40b203:	adc    ah,dh
  40b205:	repnz icebp 
  40b207:	mov    edi,0xf00632ad
  40b20c:	sub    al,0xb0
  40b20e:	xor    edx,DWORD PTR [eax]
  40b210:	daa    
  40b211:	inc    esp
  40b212:	(bad)  
  40b213:	cmp    BYTE PTR [edx-0x491f658a],cl
  40b219:	mov    WORD PTR [edx+0x23],fs
  40b21c:	fsubr  QWORD PTR [eax+eax*2+0x77]
  40b220:	(bad)  
  40b221:	mov    edx,0xa452d0b
  40b226:	push   esp
  40b227:	and    dl,cl
  40b229:	pop    ecx
  40b22a:	iret   
  40b22b:	repz cmp al,ah
  40b22e:	and    eax,0xe026cf1b
  40b233:	cli    
  40b234:	pop    esp
  40b235:	pop    ebp
  40b236:	jp     0x40b1fb
  40b238:	inc    ecx
  40b239:	and    esi,DWORD PTR [ebx]
  40b23b:	enter  0x321f,0xb8
  40b23f:	or     bl,BYTE PTR ds:[esi+0x20]
  40b243:	dec    ebp
  40b244:	(bad)  
  40b245:	out    dx,al
  40b246:	jne    0x40b295
  40b248:	test   DWORD PTR [ebx+0x4e61ad7f],ebx
  40b24e:	inc    eax
  40b24f:	or     al,0x12
  40b251:	adc    BYTE PTR [ebx+esi*4+0x44f4a472],dl
  40b258:	js     0x40b211
  40b25a:	xlat   BYTE PTR ds:[ebx]
  40b25b:	push   ds
  40b25c:	lock ins BYTE PTR es:[edi],dx
  40b25e:	fsub   QWORD PTR [ebp+0x21045ad9]
  40b264:	loope  0x40b251
  40b266:	mov    ss,WORD PTR [ecx+0x3a]
  40b269:	popf   
  40b26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b26b:	pop    ss
  40b26c:	(bad)  
  40b26d:	jmp    0x928ca591
  40b272:	dec    ebp
  40b273:	sbb    ah,BYTE PTR [edi-0x64]
  40b276:	popa   
  40b277:	rcr    DWORD PTR [edi],cl
  40b279:	jmp    FWORD PTR [edx+0x44]
  40b27c:	out    0x8e,al
  40b27e:	dec    edi
  40b27f:	out    dx,eax
  40b280:	(bad)  
  40b281:	daa    
  40b282:	mov    eax,0xbee034f5
  40b287:	mov    BYTE PTR [edi-0x5a1a9f89],dh
  40b28d:	pop    edx
  40b28e:	into   
  40b28f:	adc    al,0xd3
  40b291:	cmp    ebx,DWORD PTR [ebp-0x3f7298c]
  40b297:	xor    eax,0x6eb882ab
  40b29c:	fist   DWORD PTR [ecx]
  40b29e:	jb     0x40b241
  40b2a0:	cmp    esp,DWORD PTR [esi+0x37]
  40b2a3:	xor    al,0xfe
  40b2a5:	jecxz  0x40b26e
  40b2a7:	int    0xa7
  40b2a9:	jbe    0x40b28c
  40b2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2ac:	push   cs
  40b2ad:	aas    
  40b2ae:	pop    eax
  40b2af:	adc    bh,0xa4
  40b2b2:	fbld   TBYTE PTR [ecx+0x4b862560]
  40b2b8:	pop    ss
  40b2b9:	xchg   ebp,eax
  40b2ba:	cwde   
  40b2bb:	xor    eax,0x791f176
  40b2c0:	mov    eax,ds:0x2b43b7d
  40b2c5:	in     al,dx
  40b2c6:	adc    DWORD PTR [ecx],ebx
  40b2c8:	int    0xef
  40b2ca:	ins    BYTE PTR es:[edi],dx
  40b2cb:	cmp    esi,DWORD PTR [edi+0x26]
  40b2ce:	or     esp,ebp
  40b2d0:	sbb    edi,DWORD PTR [ebx-0x27ef8ffd]
  40b2d6:	imul   DWORD PTR [ebx-0x73]
  40b2d9:	push   ds
  40b2da:	add    bl,BYTE PTR [edi+0x6b2e576e]
  40b2e0:	not    BYTE PTR [esi+eax*8-0x5b]
  40b2e4:	outs   dx,DWORD PTR ds:[esi]
  40b2e5:	inc    eax
  40b2e6:	mov    al,ds:0xbc99f468
  40b2eb:	push   esp
  40b2ec:	(bad)  [edx]
  40b2ee:	xor    BYTE PTR [ecx-0x36],dl
  40b2f1:	stc    
  40b2f2:	cmp    eax,0x6f1105c1
  40b2f7:	loopne 0x40b299
  40b2f9:	cli    
  40b2fa:	add    BYTE PTR [ebx+0x35148593],0xa9
  40b301:	pop    edi
  40b302:	push   eax
  40b303:	mov    eax,0xb6beed3e
  40b308:	sub    al,0x16
  40b30a:	js     0x40b31d
  40b30c:	adc    dl,BYTE PTR [ecx]
  40b30e:	arpl   WORD PTR [ebx-0x3f757a56],ax
  40b314:	dec    eax
  40b315:	retf   
  40b316:	and    esi,DWORD PTR [ecx]
  40b318:	imul   ebp,DWORD PTR [edi+ecx*8-0x629006e3],0xc75f4dbd
  40b323:	mov    ds:0x5ce77ec6,eax
  40b328:	pushf  
  40b329:	xor    ebp,ecx
  40b32b:	test   DWORD PTR [eax+0x47ecb817],0x1b49ca69
  40b335:	add    eax,0xace675c4
  40b33a:	das    
  40b33b:	xor    esi,0xc6560bcd
  40b341:	out    dx,eax
  40b342:	das    
  40b343:	pop    edx
  40b344:	inc    bl
  40b346:	mov    dl,0x91
  40b348:	jg     0x40b395
  40b34a:	ret    0xe05f
  40b34d:	stc    
  40b34e:	(bad)  
  40b34f:	jmp    0x40b320
  40b351:	imul   edx,ecx,0x60
  40b354:	retf   
  40b355:	jne    0x40b326
  40b357:	(bad)  
  40b359:	dec    ecx
  40b35a:	retf   0x8693
  40b35d:	inc    edi
  40b35e:	xchg   esi,eax
  40b35f:	out    0xef,eax
  40b361:	loop   0x40b3ad
  40b363:	stos   DWORD PTR es:[edi],eax
  40b364:	jp     0x40b301
  40b366:	clc    
  40b367:	out    dx,eax
  40b368:	and    bh,BYTE PTR [eax]
  40b36a:	popf   
  40b36b:	(bad)  
  40b36c:	gs ror edx,0x89
  40b370:	and    BYTE PTR [ebx],ch
  40b372:	mov    dh,0x1a
  40b374:	in     al,dx
  40b375:	jb     0x40b3d4
  40b377:	shr    BYTE PTR [ebx+ebx*8],cl
  40b37a:	loop   0x40b3fa
  40b37c:	mov    ebx,0x400d70ce
  40b381:	inc    edi
  40b382:	cli    
  40b383:	jo     0x40b31d
  40b385:	fidiv  DWORD PTR [edi+0x11eeb924]
  40b38b:	jae    0x40b34d
  40b38d:	adc    ah,BYTE PTR [edx+0x520ad56a]
  40b393:	push   0xa76ddadc
  40b398:	inc    esi
  40b399:	and    edi,DWORD PTR [ecx]
  40b39b:	addr16 or ah,bl
  40b39e:	loop   0x40b3a6
  40b3a0:	fidivr WORD PTR [ebx-0x5366b41b]
  40b3a6:	mov    dl,0x2b
  40b3a8:	lds    edi,FWORD PTR [ebx]
  40b3aa:	daa    
  40b3ab:	cmp    ah,BYTE PTR [ebp-0x2b913590]
  40b3b1:	lea    ebx,[ecx+0x17f38435]
  40b3b7:	ror    DWORD PTR es:[ebx-0x459a8c7c],cl
  40b3be:	pop    ebx
  40b3bf:	jmp    0x40b3c6
  40b3c1:	and    DWORD PTR [edx+0x679c8b98],ecx
  40b3c7:	data16 mov WORD PTR [ecx-0x72],es
  40b3cb:	sub    DWORD PTR [eax],ebp
  40b3cd:	or     BYTE PTR [ebp+0xfbf1a85],dh
  40b3d3:	popa   
  40b3d4:	sbb    edx,eax
  40b3d6:	push   esp
  40b3d7:	fwait
  40b3d8:	imul   edx,DWORD PTR [eax-0x3e6a0ef],0x95da9c55
  40b3e2:	pusha  
  40b3e3:	inc    eax
  40b3e4:	and    ecx,edx
  40b3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3e7:	sub    eax,0x663d1fb0
  40b3ec:	and    BYTE PTR [ecx],cl
  40b3ee:	out    dx,eax
  40b3ef:	sub    ah,dl
  40b3f1:	pop    esp
  40b3f2:	out    dx,eax
  40b3f3:	aaa    
  40b3f4:	inc    ecx
  40b3f5:	xchg   ebx,eax
  40b3f6:	push   ds
  40b3f7:	sbb    ecx,DWORD PTR [ebp-0x304601ab]
  40b3fd:	stc    
  40b3fe:	sub    bl,BYTE PTR [edi]
  40b400:	outs   dx,DWORD PTR ds:[esi]
  40b401:	ret    0xb0e2
  40b404:	sbb    eax,0x8b55f6d3
  40b409:	mov    bh,0x5
  40b40b:	add    esp,DWORD PTR [edi+0x45df9dc8]
  40b411:	push   es
  40b412:	es mov esi,ecx
  40b415:	ins    BYTE PTR es:[edi],dx
  40b416:	adc    cl,BYTE PTR [ebp+edi*8-0x61]
  40b41a:	push   cs
  40b41b:	popa   
  40b41c:	fisttp WORD PTR [ebx+0x3b790d1b]
  40b422:	addr16 in eax,dx
  40b424:	xlat   BYTE PTR ds:[ebx]
  40b426:	popa   
  40b427:	pop    ds
  40b428:	fisttp QWORD PTR [eax]
  40b42a:	repnz sub BYTE PTR [ebp-0x147621b1],al
  40b431:	cmc    
  40b432:	cmp    dl,al
  40b434:	xor    BYTE PTR [ebx-0x6a9e8787],al
  40b43a:	or     DWORD PTR [ebp-0x1be43f56],edx
  40b440:	les    ebx,FWORD PTR [eax+0x25]
  40b443:	imul   edx,DWORD PTR [esi],0x317d503b
  40b449:	inc    edx
  40b44a:	std    
  40b44b:	daa    
  40b44c:	js     0x40b4ac
  40b44e:	mov    cl,0xad
  40b450:	push   esp
  40b451:	cli    
  40b452:	out    dx,al
  40b453:	push   edi
  40b454:	pop    edi
  40b455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b456:	xor    eax,0x772e1913
  40b45b:	xchg   esp,eax
  40b45c:	out    dx,eax
  40b45d:	cmp    al,0x21
  40b45f:	sbb    DWORD PTR [ecx+0x6b6b5e88],esp
  40b465:	xor    BYTE PTR [esi+0x78f736cd],ch
  40b46b:	mov    edi,0x8560db68
  40b470:	(bad)  
  40b471:	push   edx
  40b472:	fdivr  QWORD PTR [ebx]
  40b474:	iret   
  40b475:	jae    0x40b419
  40b477:	test   eax,0xb53f8e32
  40b47d:	call   FWORD PTR [ecx-0x30]
  40b480:	retf   0xe7e4
  40b483:	shl    edx,0x9f
  40b486:	and    eax,0x7434931d
  40b48b:	aaa    
  40b48c:	xchg   edi,eax
  40b48d:	out    dx,al
  40b48e:	out    0x52,al
  40b490:	stos   BYTE PTR es:[edi],al
  40b491:	pop    es
  40b492:	(bad)  
  40b493:	ins    BYTE PTR es:[edi],dx
  40b494:	jb     0x40b4a1
  40b496:	sar    ch,1
  40b498:	mov    ds:0x152c87a7,al
  40b49d:	jns    0x40b501
  40b49f:	pusha  
  40b4a0:	mov    esp,es
  40b4a2:	inc    esp
  40b4a3:	aaa    
  40b4a4:	pop    ebx
  40b4a5:	in     al,0xdb
  40b4a7:	inc    esp
  40b4a8:	sub    edx,ecx
  40b4aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ab:	inc    ebp
  40b4ac:	push   eax
  40b4ad:	loop   0x40b496
  40b4af:	dec    esp
  40b4b0:	cli    
  40b4b1:	(bad)  
  40b4b2:	shl    BYTE PTR [ebp-0x5aec761b],cl
  40b4b8:	lods   eax,DWORD PTR ds:[esi]
  40b4b9:	mov    ds:0x1ff8858b,eax
  40b4be:	sbb    al,0xed
  40b4c0:	in     eax,0x5e
  40b4c2:	fcomp  DWORD PTR [ebx+0x58]
  40b4c5:	pop    ds
  40b4c6:	nop
  40b4c7:	imul   ebp,DWORD PTR [esi-0xe],0x6f
  40b4cb:	push   eax
  40b4cc:	cwde   
  40b4cd:	add    eax,0xafa2e418
  40b4d2:	idiv   BYTE PTR [esi+eax*4-0x3adab67a]
  40b4d9:	(bad)  
  40b4da:	js     0x40b4a1
  40b4dc:	jl     0x40b53e
  40b4de:	pop    ebx
  40b4df:	add    BYTE PTR [edx+0x5],0xa4
  40b4e3:	pop    esp
  40b4e4:	sub    eax,0xab396aaa
  40b4e9:	mov    ecx,0x9ed679f6
  40b4ee:	mov    esi,0x9a2c6fbe
  40b4f3:	push   es
  40b4f4:	enter  0x543b,0x1
  40b4f8:	inc    edx
  40b4f9:	je     0x40b571
  40b4fb:	lds    esp,FWORD PTR [ebx+0x72471d87]
  40b501:	ds inc ebx
  40b503:	gs bnd jmp 0x9c35b1d6
  40b50a:	push   esp
  40b50b:	mov    cs,WORD PTR [esi+0x49ba5f5c]
  40b511:	gs pop ecx
  40b513:	fldenv [esp+esi*2]
  40b516:	lods   eax,DWORD PTR ds:[esi]
  40b517:	jle    0x40b51e
  40b519:	lahf   
  40b51a:	xchg   BYTE PTR [edx+0x72c89cc8],dh
  40b520:	mov    al,0xaf
  40b522:	adc    bl,BYTE PTR [edx]
  40b524:	div    BYTE PTR [ecx+esi*2]
  40b527:	adc    BYTE PTR [ebp-0x74],bh
  40b52a:	mov    ebp,0x9eb7ce9
  40b52f:	inc    ebp
  40b530:	mov    edi,0x9b875132
  40b535:	xlat   BYTE PTR ds:[ebx]
  40b536:	hlt    
  40b537:	inc    dh
  40b539:	(bad)  
  40b53b:	pop    edx
  40b53c:	int3   
  40b53d:	mov    ecx,0x3f7937d1
  40b542:	inc    ecx
  40b543:	add    dl,BYTE PTR [esi+ebx*4-0x58]
  40b547:	fcom   QWORD PTR [ecx]
  40b549:	and    al,0x44
  40b54b:	push   esp
  40b54c:	mov    eax,0x5d1f4b9b
  40b551:	enter  0x22a0,0x29
  40b555:	rcl    DWORD PTR [esi+edx*8+0x25],1
  40b559:	je     0x40b57c
  40b55b:	push   eax
  40b55c:	xor    edi,DWORD PTR [edi-0x6288c1b1]
  40b562:	lahf   
  40b563:	pushf  
  40b564:	sti    
  40b565:	gs mov edx,0xa8c93a8b
  40b56b:	adc    esp,DWORD PTR [ebx]
  40b56d:	hlt    
  40b56e:	dec    ecx
  40b56f:	mov    ah,0xa
  40b571:	pop    eax
  40b572:	pop    ds
  40b573:	inc    ebx
  40b574:	push   ss
  40b575:	push   es
  40b576:	lods   eax,DWORD PTR ds:[esi]
  40b577:	js     0x40b518
  40b579:	cs leave 
  40b57b:	nop
  40b57c:	xor    DWORD PTR [ebx+0x981a5d],edx
  40b582:	aad    0x81
  40b584:	mov    ds:0xe3f116ba,eax
  40b589:	sub    al,0x93
  40b58b:	out    dx,eax
  40b58c:	clc    
  40b58d:	xor    ch,BYTE PTR [ecx-0x6fb6c495]
  40b593:	and    al,0x76
  40b596:	push   0xffffffed
  40b598:	out    dx,al
  40b599:	in     eax,0xbe
  40b59b:	fcom   QWORD PTR [ebx-0x4fa3710e]
  40b5a1:	fistp  WORD PTR [eax+0x43af6a7d]
  40b5a7:	jmp    0xc49e:0xb80b62df
  40b5ae:	lds    ebx,FWORD PTR [edi+edi*8+0x5109ce21]
  40b5b5:	cmc    
  40b5b6:	cmp    dh,cl
  40b5b8:	and    eax,0x2ecdbe59
  40b5bd:	inc    ecx
  40b5be:	dec    esp
  40b5bf:	xchg   edx,eax
  40b5c0:	jo     0x40b617
  40b5c2:	lds    eax,FWORD PTR [esi+0x6305d998]
  40b5c8:	xor    BYTE PTR [eax+edi*1+0x7b],bl
  40b5cc:	mov    bl,0x63
  40b5ce:	fld    DWORD PTR [ebx-0x3f]
  40b5d1:	das    
  40b5d2:	xor    ah,BYTE PTR [edi]
  40b5d4:	xlat   BYTE PTR ds:[ebx]
  40b5d5:	loope  0x40b582
  40b5d7:	lods   eax,DWORD PTR ds:[esi]
  40b5d8:	rol    BYTE PTR [edx+0x50fe0385],0xaa
  40b5df:	inc    esp
  40b5e0:	xchg   ebp,eax
  40b5e1:	sub    DWORD PTR [ebx-0x857c738],ecx
  40b5e7:	xchg   BYTE PTR [di+0x36],ah
  40b5eb:	(bad)  
  40b5ec:	or     dl,BYTE PTR [ebx+ebp*1-0x48edfc72]
  40b5f3:	push   ebx
  40b5f4:	in     al,dx
  40b5f5:	pop    ebp
  40b5f6:	test   BYTE PTR [ebx],al
  40b5f8:	sub    edx,edi
  40b5fa:	call   0xf3b1fe04
  40b5ff:	pop    esi
  40b600:	mov    eax,0x62143979
  40b605:	sbb    eax,0xc3b30269
  40b60a:	(bad)  
  40b60b:	jmp    0x3f84daf8
  40b610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b611:	mov    cl,0x1b
  40b613:	xor    BYTE PTR [esi+ebx*1+0x11],al
  40b617:	adc    edi,DWORD PTR [esp+edi*8-0x3b]
  40b61b:	push   ebx
  40b61c:	xchg   ebx,eax
  40b61d:	inc    esi
  40b61e:	mov    edi,0x2fcca62e
  40b623:	push   0x29
  40b625:	idiv   ecx
  40b627:	jmp    0x40b64f
  40b629:	shl    BYTE PTR [edi-0x7a],1
  40b62c:	inc    edx
  40b62d:	call   0xb22ef0f3
  40b632:	pop    ss
  40b633:	loope  0x40b5d8
  40b635:	pop    edx
  40b636:	pop    ss
  40b637:	ror    BYTE PTR [edi+0x71],1
  40b63a:	test   DWORD PTR [edi+eax*2],ebx
  40b63d:	pop    edi
  40b63e:	icebp  
  40b63f:	pop    ds
  40b640:	repz out 0x65,al
  40b643:	clc    
  40b644:	pop    ss
  40b645:	sti    
  40b646:	adc    ecx,ecx
  40b648:	neg    BYTE PTR [edi+ebp*1+0x3e]
  40b64c:	sti    
  40b64d:	xor    eax,0xff42feb1
  40b652:	sub    eax,0xbca8c5dd
  40b657:	aaa    
  40b658:	push   es
  40b659:	in     eax,dx
  40b65a:	push   cs
  40b65b:	fadd   QWORD PTR [eax]
  40b65d:	test   BYTE PTR [ebx],ch
  40b65f:	enter  0x14ef,0xf4
  40b663:	xchg   ebx,eax
  40b664:	cmp    eax,0xf08e693d
  40b669:	xor    al,0x17
  40b66b:	inc    esi
  40b66c:	test   eax,0xb881af11
  40b671:	adc    DWORD PTR [ebx],edx
  40b673:	mov    ecx,0xf21ad497
  40b678:	lock cmp DWORD PTR [esi+ebx*4-0x65],esp
  40b67d:	push   ecx
  40b67e:	mov    ebx,0x1e04892a
  40b683:	sub    DWORD PTR [edi-0x54fac811],0xa42e3dc3
  40b68d:	std    
  40b68e:	add    eax,0xc5f2a836
  40b693:	mov    edx,0x78372f54
  40b698:	add    BYTE PTR [eax],ch
  40b69a:	js     0x40b6c5
  40b69c:	adc    ecx,DWORD PTR [ebx-0x1f438f07]
  40b6a2:	fwait
  40b6a3:	aaa    
  40b6a4:	jp     0x40b67d
  40b6a6:	xchg   esp,eax
  40b6a7:	and    edi,DWORD PTR [esi-0x4dd870f4]
  40b6ad:	addr16 mov ds:0x7f81,al
  40b6b1:	out    0x73,eax
  40b6b3:	xor    DWORD PTR [ebp+0x5f],ebp
  40b6b6:	dec    esi
  40b6b7:	iret   
  40b6b8:	imul   ebp,DWORD PTR [ebp-0x2d],0x5b
  40b6bc:	fs stos DWORD PTR es:[edi],eax
  40b6be:	mov    ah,0xaf
  40b6c0:	stos   DWORD PTR es:[edi],eax
  40b6c1:	or     DWORD PTR [edx],esi
  40b6c3:	ins    DWORD PTR es:[edi],dx
  40b6c4:	iret   
  40b6c5:	adc    eax,edi
  40b6c7:	adc    BYTE PTR [eax+0x27],dl
  40b6ca:	pop    ecx
  40b6cb:	call   0x33884a3
  40b6d0:	rol    ebx,cl
  40b6d2:	inc    ebp
  40b6d3:	mov    esi,0xa1a026f5
  40b6d8:	mov    ah,0xa8
  40b6da:	mov    esi,0xee188a5f
  40b6df:	stos   DWORD PTR es:[edi],eax
  40b6e0:	pop    esp
  40b6e1:	or     bh,BYTE PTR [esi+ebx*8-0x52]
  40b6e5:	popf   
  40b6e6:	stos   DWORD PTR es:[edi],eax
  40b6e7:	pop    edx
  40b6e8:	push   esi
  40b6e9:	aam    0xc9
  40b6eb:	int    0xd1
  40b6ed:	mov    edx,DWORD PTR [ecx]
  40b6ef:	cs dec esi
  40b6f1:	dec    esi
  40b6f2:	fadd   DWORD PTR [edx-0x700e953]
  40b6f8:	dec    ebp
  40b6f9:	pop    es
  40b6fa:	int    0x64
  40b6fc:	sub    esi,edi
  40b6fe:	aam    0xa8
  40b700:	ret    
  40b701:	iret   
  40b702:	jo     0x40b68e
  40b704:	shl    DWORD PTR [esi-0x6d],1
  40b707:	(bad)  [edx-0x5e40f29c]
  40b70d:	and    BYTE PTR [ecx+0x47],bh
  40b710:	push   ebp
  40b711:	dec    edx
  40b712:	mov    edi,DWORD PTR [ebp+0x60fa9e87]
  40b718:	adc    DWORD PTR [ebp-0x875b052],esi
  40b71e:	and    cl,BYTE PTR [ecx-0x43f24236]
  40b724:	retf   
  40b725:	cmp    BYTE PTR [ebx+0x19],ah
  40b728:	mov    BYTE PTR ds:0xc41df1c8,al
  40b72e:	dec    ebp
  40b72f:	dec    ebp
  40b730:	fidivr DWORD PTR [ebp-0x7283fbfb]
  40b736:	pop    edi
  40b737:	mov    eax,ds:0x52113c91
  40b73c:	loope  0x40b6f1
  40b73e:	mov    cl,0x7a
  40b740:	and    ebp,esp
  40b742:	sbb    eax,0x70ddbb03
  40b747:	dec    esp
  40b748:	pop    ecx
  40b749:	ja     0x40b6d6
  40b74b:	rcr    BYTE PTR [ecx+0x672f4f9e],cl
  40b751:	jmp    0x40b77c
  40b753:	jbe    0x40b79f
  40b755:	jg     0x40b715
  40b757:	jp     0x40b7d4
  40b759:	mov    edi,0xb21fc09
  40b75e:	mov    edx,0xef22b750
  40b763:	dec    ebx
  40b764:	jmp    0x40b7b9
  40b766:	push   eax
  40b767:	inc    ebx
  40b768:	bnd jne 0x40b798
  40b76b:	ja     0x40b73a
  40b76d:	pop    es
  40b76e:	add    BYTE PTR [edi],ch
  40b770:	push   0xffffffd8
  40b772:	add    esp,DWORD PTR [ecx]
  40b774:	leave  
  40b775:	repnz es mov bh,0xa2
  40b779:	jecxz  0x40b706
  40b77b:	in     eax,0x69
  40b77d:	cmp    BYTE PTR [eax+0x40ee3e10],dl
  40b783:	inc    edx
  40b784:	jmp    0xc08e7465
  40b789:	push   esi
  40b78a:	jno    0x40b7b6
  40b78c:	retf   0xb988
  40b78f:	stos   DWORD PTR es:[edi],eax
  40b790:	dec    ecx
  40b791:	clc    
  40b792:	push   ebx
  40b793:	cmp    dl,bl
  40b795:	and    al,0x24
  40b797:	shl    BYTE PTR [ecx+0x1b5fd80e],0xc9
  40b79e:	mov    edx,0xba4685e4
  40b7a3:	test   BYTE PTR [ebx+0x64c18a6b],ah
  40b7a9:	adc    BYTE PTR [esi+0x1d],dh
  40b7ac:	imul   ecx,DWORD PTR [ecx-0x84c4049],0x10b7aa47
  40b7b6:	dec    edx
  40b7b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7b8:	call   0x5b86d89a
  40b7bd:	mov    edx,0xc423068b
  40b7c2:	lods   al,BYTE PTR ds:[esi]
  40b7c3:	sbb    al,0x92
  40b7c5:	jge    0x40b797
  40b7c7:	dec    edi
  40b7c8:	out    dx,al
  40b7c9:	and    BYTE PTR [eax],dl
  40b7cb:	daa    
  40b7cc:	lds    ecx,FWORD PTR [ecx-0x5]
  40b7cf:	jne    0x40b75b
  40b7d1:	pop    ebp
  40b7d2:	hlt    
  40b7d3:	push   edi
  40b7d4:	pop    ds
  40b7d5:	or     al,0x21
  40b7d7:	shl    DWORD PTR [eax+0x2],cl
  40b7da:	(bad)  
  40b7db:	ins    DWORD PTR es:[edi],dx
  40b7dc:	push   esi
  40b7dd:	lahf   
  40b7de:	sub    esp,esp
  40b7e0:	rol    BYTE PTR [eax],cl
  40b7e2:	add    DWORD PTR [edi+0x3e],ebp
  40b7e5:	jl     0x40b7be
  40b7e7:	fadd   st(2),st
  40b7e9:	adc    ebp,DWORD PTR [ecx]
  40b7eb:	test   cl,dh
  40b7ed:	mov    al,0x8
  40b7ef:	jnp    0x40b861
  40b7f1:	pop    edx
  40b7f2:	mov    ds:0x41fd679d,al
  40b7f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7f8:	lods   eax,DWORD PTR ds:[esi]
  40b7f9:	adc    al,0xec
  40b7fb:	enter  0x5d77,0x3e
  40b7ff:	repz imul esp,DWORD PTR [edx-0x1dd75c1b],0x18
  40b807:	pop    edi
  40b808:	and    BYTE PTR [ebx],dl
  40b80a:	fdiv   QWORD PTR [ebx]
  40b80c:	lea    edi,[ecx+0x2e098482]
  40b812:	cmp    BYTE PTR [edi-0x4d7ab24f],ah
  40b818:	push   ebp
  40b819:	jp     0x40b7aa
  40b81b:	add    DWORD PTR [ebx+0x4],eax
  40b81e:	call   0x4ea01f41
  40b823:	mov    ah,0x22
  40b825:	cwde   
  40b826:	aaa    
  40b827:	rol    DWORD PTR [eax+0x33161ad1],0x3c
  40b82e:	adc    al,0x3f
  40b830:	mov    ch,0x6d
  40b832:	les    eax,FWORD PTR [edi]
  40b834:	mov    ah,0x91
  40b836:	mov    dl,BYTE PTR [eax+0x6cbdeb0b]
  40b83c:	dec    edi
  40b83d:	in     al,0xc3
  40b83f:	lea    esi,[edx]
  40b841:	mov    ecx,0xeea7364
  40b846:	sti    
  40b847:	pop    ss
  40b848:	cmc    
  40b849:	mov    WORD PTR [ecx+0x68f6344b],?
  40b84f:	jge    0x40b7d9
  40b851:	xor    al,ch
  40b853:	out    dx,eax
  40b854:	add    eax,0x5e272395
  40b859:	(bad)  
  40b85a:	mov    edx,0x1a64ada
  40b85f:	out    0x75,al
  40b861:	scas   eax,DWORD PTR es:[edi]
  40b862:	jb     0x40b83c
  40b864:	jne    0x40b820
  40b866:	fcmovnu st,st(2)
  40b868:	mov    ah,0x58
  40b86a:	js     0x40b83c
  40b86c:	aad    0x76
  40b86e:	ins    BYTE PTR es:[edi],dx
  40b86f:	and    eax,ebp
  40b871:	imul   esp,eax,0x68
  40b874:	adc    DWORD PTR [ebx],edi
  40b876:	repz add dh,0xb5
  40b87a:	xchg   ebx,eax
  40b87b:	dec    eax
  40b87c:	bnd jmp 0x40b8f6
  40b87f:	xor    al,BYTE PTR [edi]
  40b881:	sar    ebp,0x9c
  40b884:	imul   edi,DWORD PTR [edi],0xaa019ed1
  40b88a:	sahf   
  40b88b:	dec    esi
  40b88c:	dec    esi
  40b88d:	inc    eax
  40b88e:	sbb    edx,ebp
  40b890:	cwde   
  40b891:	add    ch,BYTE PTR [ecx-0x3a]
  40b894:	bound  ecx,QWORD PTR [edi-0x61]
  40b897:	adc    ecx,DWORD PTR [esi]
  40b899:	xor    eax,0x4b434980
  40b89e:	les    esi,FWORD PTR gs:[edi+edx*1-0x4ff0e6e]
  40b8a6:	mov    eax,ds:0x971ec675
  40b8ab:	out    dx,al
  40b8ac:	retf   0xf6e6
  40b8af:	mov    dl,0xd4
  40b8b1:	cwde   
  40b8b2:	push   0xfffffff1
  40b8b4:	repz xchg edx,eax
  40b8b6:	fild   WORD PTR [edi]
  40b8b8:	and    edi,DWORD PTR ss:[ecx+0x28]
  40b8bc:	jne    0x40b8a8
  40b8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8bf:	ja     0x40b885
  40b8c1:	or     edi,DWORD PTR [esi]
  40b8c3:	add    DWORD PTR [edx-0x2],0xffffffc7
  40b8c7:	stc    
  40b8c8:	jo     0x40b883
  40b8ca:	not    BYTE PTR [eax+0x6acbfb1f]
  40b8d0:	outs   dx,BYTE PTR ds:[esi]
  40b8d1:	mov    esi,0x279b1a34
  40b8d6:	in     al,dx
  40b8d7:	xchg   ecx,eax
  40b8d8:	repz mov eax,ds:0xf58e2184
  40b8de:	xor    dh,BYTE PTR [edi]
  40b8e0:	inc    edx
  40b8e1:	adc    DWORD PTR [edx],ebx
  40b8e3:	add    edi,0x75
  40b8e6:	mov    eax,ds:0x8a8c23f5
  40b8eb:	imul   DWORD PTR [edx-0x76]
  40b8ee:	dec    eax
  40b8ef:	test   bh,0xd3
  40b8f2:	shr    BYTE PTR [esi],cl
  40b8f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8f5:	mov    ds,WORD PTR [ebx-0x1bd1b3aa]
  40b8fb:	clc    
  40b8fc:	out    dx,eax
  40b8fd:	or     DWORD PTR [esi+ebx*1+0x34],esi
  40b901:	fwait
  40b902:	add    DWORD PTR [ebx-0x5fd173b9],eax
  40b908:	dec    ecx
  40b909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b90a:	cld    
  40b90b:	mov    ebx,DWORD PTR [edx]
  40b90d:	dec    ebp
  40b90e:	pop    es
  40b90f:	aam    0x9e
  40b911:	es xchg edi,eax
  40b913:	push   ds
  40b914:	inc    esi
  40b915:	push   esi
  40b916:	jmp    0x40b8d7
  40b918:	cmp    DWORD PTR [ebp+0x12b31384],eax
  40b91e:	lods   eax,DWORD PTR ds:[si]
  40b920:	add    BYTE PTR [esp+ebx*8-0x4f],bl
  40b924:	test   DWORD PTR [ebx],edx
  40b926:	cmp    al,0xcd
  40b928:	dec    eax
  40b929:	sti    
  40b92a:	push   ebx
  40b92b:	push   esi
  40b92c:	iret   
  40b92d:	mov    edx,0x2cac17d2
  40b932:	call   0xbda8:0xf9b6999a
  40b939:	stos   DWORD PTR es:[edi],eax
  40b93a:	jecxz  0x40b980
  40b93c:	xchg   edi,eax
  40b93d:	ficomp WORD PTR [ebx+0x1c]
  40b940:	xchg   ecx,eax
  40b941:	sub    DWORD PTR [ecx-0x21],ecx
  40b944:	jmp    0x5929:0xcb29bc8b
  40b94b:	mov    BYTE PTR [edx-0x34],ch
  40b94e:	mov    al,ds:0xd169f8d8
  40b953:	ja     0x40b9a0
  40b955:	mov    WORD PTR ds:0x7f5fa3b5,gs
  40b95b:	mov    ch,0x18
  40b95d:	jmp    0x6c0b:0x89dbf2b7
  40b964:	test   DWORD PTR cs:[esi-0x4511f654],edi
  40b96b:	sar    DWORD PTR [ebp+0x362bd6ef],cl
  40b971:	push   ebp
  40b972:	inc    edx
  40b973:	ror    BYTE PTR [edi-0x305eae89],cl
  40b979:	sahf   
  40b97a:	sar    BYTE PTR [esp+eiz*2-0x2],0xe
  40b97f:	push   eax
  40b980:	js     0x40b9bc
  40b982:	fwait
  40b983:	popa   
  40b984:	pusha  
  40b985:	js     0x40b933
  40b987:	popf   
  40b988:	fdivr  st,st(3)
  40b98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b98b:	add    DWORD PTR [esi+0x3],0x464f882c
  40b992:	mov    cl,0xf
  40b994:	ret    0xb03
  40b997:	inc    DWORD PTR [ecx-0x4edc48bb]
  40b99d:	jo     0x40b968
  40b99f:	fadd   st(1),st
  40b9a1:	icebp  
  40b9a2:	xchg   ebx,eax
  40b9a3:	fist   DWORD PTR [eax-0x71]
  40b9a6:	cmp    eax,0xf22a8f60
  40b9ab:	dec    eax
  40b9ac:	and    ecx,DWORD PTR [ebp-0x7d79d2f4]
  40b9b2:	add    DWORD PTR [esi],eax
  40b9b4:	sbb    al,0x29
  40b9b6:	mov    ecx,edi
  40b9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b9:	popf   
  40b9ba:	cdq    
  40b9bb:	inc    edi
  40b9bc:	dec    ebp
  40b9bd:	in     al,0xa4
  40b9bf:	cdq    
  40b9c0:	inc    esi
  40b9c1:	clc    
  40b9c2:	imul   esi,edx,0x459f2600
  40b9c8:	(bad)  
  40b9c9:	fimul  DWORD PTR [esi]
  40b9cb:	xor    al,0xb6
  40b9cd:	xchg   edx,eax
  40b9ce:	xchg   BYTE PTR [edi+0x27],dl
  40b9d1:	dec    esi
  40b9d2:	les    ebp,FWORD PTR [ebx-0x39]
  40b9d5:	daa    
  40b9d6:	sub    al,BYTE PTR [ebp+0x10ec588a]
  40b9dc:	dec    eax
  40b9dd:	daa    
  40b9de:	test   eax,0xd199ce90
  40b9e3:	xchg   edx,eax
  40b9e4:	mov    ecx,esp
  40b9e6:	or     dl,dh
  40b9e8:	(bad)  
  40b9ea:	outs   dx,BYTE PTR ds:[esi]
  40b9eb:	fbld   TBYTE PTR [eax-0x1ae2ccf4]
  40b9f1:	mov    edi,edi
  40b9f3:	outs   dx,DWORD PTR ds:[esi]
  40b9f4:	jmp    0x839c:0xaacd2298
  40b9fb:	aad    0x34
  40b9fd:	sub    eax,0x51fb16f1
  40ba02:	popa   
  40ba03:	ffree  st(7)
  40ba05:	sbb    BYTE PTR [ecx-0x31341b1b],ch
  40ba0b:	jp     0x40b99d
  40ba0d:	stc    
  40ba0e:	sub    ecx,esi
  40ba10:	push   esp
  40ba11:	in     al,dx
  40ba12:	imul   ebp,DWORD PTR [edi-0x13],0x7bded4b5
  40ba19:	loop   0x40b9f0
  40ba1b:	stc    
  40ba1c:	sub    eax,0x69be4c9a
  40ba21:	jecxz  0x40ba86
  40ba23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba24:	(bad)  
  40ba25:	iret   
  40ba26:	sbb    al,0x13
  40ba28:	adc    al,ah
  40ba2a:	cmp    al,0x1b
  40ba2c:	jne    0x3746052c
  40ba32:	add    bh,BYTE PTR [edx-0x28c41469]
  40ba38:	inc    esi
  40ba39:	(bad)  
  40ba3b:	pusha  
  40ba3c:	and    al,0x50
  40ba3e:	rcr    BYTE PTR [edx+0x5c],0xf1
  40ba42:	jmp    0x2b8b:0x7612b4b6
  40ba49:	jmp    0x40ba75
  40ba4b:	sbb    al,0x86
  40ba4d:	ja     0x40bab8
  40ba4f:	mov    DWORD PTR [esi],ebp
  40ba51:	jmp    0x6fb050ab
  40ba56:	mov    ebp,0x4b8756e7
  40ba5b:	push   ds
  40ba5c:	retf   0x32a3
  40ba5f:	das    
  40ba60:	test   eax,0x411e0d2
  40ba65:	mov    ss,WORD PTR [ecx+0x6a993240]
  40ba6b:	push   ss
  40ba6c:	or     DWORD PTR [edi],ebp
  40ba6e:	push   ebx
  40ba6f:	(bad)  
  40ba70:	cmp    eax,0x3bf7d13a
  40ba75:	xchg   DWORD PTR [esp+ebx*4-0x76],eax
  40ba79:	sbb    bl,BYTE PTR [edx]
  40ba7b:	arpl   di,di
  40ba7d:	pop    ecx
  40ba7e:	in     al,dx
  40ba7f:	adc    DWORD PTR [ebp+0x2c15435e],ecx
  40ba85:	mov    BYTE PTR [ebx],cl
  40ba87:	sub    eax,0x60937999
  40ba8c:	dec    ecx
  40ba8d:	and    cl,BYTE PTR [eax-0x58]
  40ba90:	daa    
  40ba91:	stos   DWORD PTR es:[edi],eax
  40ba92:	xchg   BYTE PTR [edx+0x19],ah
  40ba95:	icebp  
  40ba96:	repnz repnz (bad) 
  40ba99:	dec    edx
  40ba9a:	push   0xffffff8c
  40ba9c:	sub    BYTE PTR [esi],al
  40ba9e:	add    eax,0x1ecc9cb1
  40baa3:	das    
  40baa4:	aaa    
  40baa5:	lods   eax,DWORD PTR ds:[esi]
  40baa6:	add    eax,0xf36d2d
  40baab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baac:	retf   
  40baad:	add    al,0xc8
  40baaf:	ds push es
  40bab1:	jmp    0x40badb
  40bab3:	mov    edi,0xbb9c6584
  40bab8:	sub    ah,BYTE PTR [edx+0x7bcae5f5]
  40babe:	int    0xd9
  40bac0:	mov    ?,WORD PTR [ecx]
  40bac2:	cdq    
  40bac3:	add    DWORD PTR [edi+edi*1],esi
  40bac6:	cmp    dl,BYTE PTR [ebx-0x1e]
  40bac9:	ja     0x40bafb
  40bacb:	dec    ecx
  40bacc:	imul   eax,DWORD PTR [esi-0x7a],0x929909ab
  40bad3:	(bad)  
  40bad4:	mov    ebp,0x449fa614
  40bad9:	bound  eax,QWORD PTR ds:0xeb8b1889
  40badf:	xchg   ecx,eax
  40bae0:	inc    esp
  40bae1:	es sbb esi,ebx
  40bae4:	in     al,0x75
  40bae6:	or     esi,ebp
  40bae8:	sbb    ebp,DWORD PTR [edx+eax*4-0x685aaa94]
  40baef:	test   DWORD PTR [edx-0x1c966ca4],ecx
  40baf5:	cmp    eax,0xca1c305c
  40bafa:	ret    0xc366
  40bafd:	push   ecx
  40bafe:	scas   al,BYTE PTR es:[edi]
  40baff:	push   ds
  40bb00:	mov    ah,0x5d
  40bb02:	pop    eax
  40bb03:	mov    esi,0xbfb116f8
  40bb08:	mov    DWORD PTR [ebp*4-0x57272bc7],eax
  40bb0f:	mov    esi,DWORD PTR [ebx]
  40bb11:	aad    0xf0
  40bb13:	stos   BYTE PTR es:[edi],al
  40bb14:	inc    eax
  40bb15:	stos   BYTE PTR es:[edi],al
  40bb16:	arpl   WORD PTR [ebp+0x5dbe02af],bx
  40bb1c:	lods   al,BYTE PTR ds:[esi]
  40bb1d:	fcom   QWORD PTR [edi]
  40bb1f:	ins    DWORD PTR es:[edi],dx
  40bb20:	dec    ecx
  40bb21:	repnz loop 0x40bae2
  40bb24:	out    dx,eax
  40bb25:	scas   al,BYTE PTR es:[edi]
  40bb26:	call   0xdb89:0x140e2af3
  40bb2d:	fmul   DWORD PTR [eax-0x65]
  40bb30:	sub    edx,DWORD PTR [esi-0x1d]
  40bb33:	in     eax,0xec
  40bb35:	mov    al,0x6f
  40bb37:	outs   dx,BYTE PTR ds:[esi]
  40bb38:	cdq    
  40bb39:	jg     0x40bb3b
  40bb3b:	fs test ecx,0xd1934054
  40bb42:	repnz icebp 
  40bb44:	inc    edx
  40bb45:	loope  0x40bb7f
  40bb47:	popf   
  40bb48:	daa    
  40bb49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb4a:	pusha  
  40bb4b:	lock shr BYTE PTR [ebx],1
  40bb4e:	fiadd  DWORD PTR [ecx]
  40bb50:	mov    DWORD PTR [eax+0x47],ebx
  40bb53:	leave  
  40bb54:	test   eax,0xacb33a37
  40bb59:	mov    al,0x8c
  40bb5b:	clc    
  40bb5c:	gs mov esp,edx
  40bb5f:	cmp    esp,DWORD PTR [edx+esi*1]
  40bb62:	imul   edx,edi,0xffffff95
  40bb65:	shl    BYTE PTR [edi+0x45],0x31
  40bb69:	xor    ebx,DWORD PTR [eax-0x4e59f70f]
  40bb6f:	add    ebp,DWORD PTR [eax]
  40bb71:	mov    ch,0x93
  40bb73:	jmp    0x9d472b99
  40bb78:	xchg   edi,eax
  40bb79:	sub    DWORD PTR [edx+eax*2-0x51a607c2],esp
  40bb80:	mov    bl,0x7e
  40bb82:	mov    ds:0xfc823d86,eax
  40bb87:	bound  edi,QWORD PTR [ecx-0x6a]
  40bb8a:	shl    ah,cl
  40bb8c:	inc    ecx
  40bb8d:	dec    edx
  40bb8e:	jmp    0xaf25:0x8867599f
  40bb95:	mov    cl,BYTE PTR [esi]
  40bb97:	lock or esi,eax
  40bb9a:	push   ss
  40bb9b:	push   ecx
  40bb9c:	pusha  
  40bb9d:	dec    esp
  40bb9e:	das    
  40bb9f:	cld    
  40bba0:	cmp    eax,0x246c7676
  40bba5:	inc    ebx
  40bba6:	adc    al,0xca
  40bba8:	lods   eax,DWORD PTR ds:[esi]
  40bba9:	xchg   edx,eax
  40bbaa:	(bad)  
  40bbab:	shl    DWORD PTR [esi+eax*8],1
  40bbae:	and    BYTE PTR [edi+0xfb17de5],bl
  40bbb4:	scas   eax,DWORD PTR es:[edi]
  40bbb5:	cmp    BYTE PTR [edx-0x163ccdf1],al
  40bbbb:	xchg   edi,eax
  40bbbc:	cmp    ch,BYTE PTR [ecx-0x1b6f887]
  40bbc2:	pop    esi
  40bbc3:	add    esp,DWORD PTR [eax]
  40bbc5:	dec    ecx
  40bbc6:	cmp    al,0x88
  40bbc8:	out    dx,al
  40bbc9:	mov    WORD PTR [esi],ds
  40bbcb:	sti    
  40bbcc:	pop    eax
  40bbcd:	(bad)  
  40bbce:	cdq    
  40bbcf:	outs   dx,BYTE PTR ds:[esi]
  40bbd0:	ror    BYTE PTR [bx+di+0x1b],1
  40bbd4:	mov    al,0x60
  40bbd6:	xchg   edi,eax
  40bbd7:	fdivr  QWORD PTR [edx]
  40bbd9:	sub    edx,ebp
  40bbdb:	in     al,0xc9
  40bbdd:	dec    ebx
  40bbde:	adc    al,0x41
  40bbe0:	sbb    BYTE PTR [edx],dl
  40bbe2:	pop    es
  40bbe3:	jmp    0xf822:0x661360c5
  40bbea:	push   cs
  40bbeb:	lods   eax,DWORD PTR ds:[esi]
  40bbec:	dec    esi
  40bbed:	push   ebp
  40bbee:	cdq    
  40bbef:	jecxz  0x40bbbe
  40bbf1:	repnz fbstp TBYTE PTR [ecx]
  40bbf4:	mov    dx,WORD PTR [ecx]
  40bbf7:	ret    
  40bbf8:	loopne 0x40bbe2
  40bbfa:	(bad)  
  40bbfb:	xchg   ecx,eax
  40bbfc:	and    BYTE PTR [eax-0x59],bh
  40bbff:	push   eax
  40bc00:	rol    esi,0x62
  40bc03:	jg     0x40bbe6
  40bc05:	sub    ebx,DWORD PTR [ecx+0x5f]
  40bc08:	xchg   ebx,eax
  40bc09:	sbb    ebp,DWORD PTR es:[ecx]
  40bc0c:	lods   eax,DWORD PTR ds:[esi]
  40bc0d:	mov    al,0x9d
  40bc0f:	xor    edx,esp
  40bc11:	mov    eax,0x620ff65c
  40bc16:	xor    dl,BYTE PTR [ebp+0x4578a81e]
  40bc1c:	cmp    ch,BYTE PTR ss:[esp+edi*1]
  40bc20:	jne    0x40bc3d
  40bc22:	lods   eax,DWORD PTR ds:[esi]
  40bc23:	mov    edx,0x9e5cf9b0
  40bc28:	adc    eax,0x8a9ed8cd
  40bc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc2e:	xchg   edx,eax
  40bc2f:	fsub   st,st(1)
  40bc31:	jmp    0x25cdcaf0
  40bc36:	add    BYTE PTR [ecx+0x177619b0],bh
  40bc3c:	inc    ebx
  40bc3d:	mov    edi,DWORD PTR [edi-0x436f4f20]
  40bc43:	or     ebp,0xffffffc5
  40bc46:	loope  0x40bc83
  40bc48:	int    0xe5
  40bc4a:	dec    esi
  40bc4b:	popw   es
  40bc4d:	xlat   BYTE PTR ds:[ebx]
  40bc4e:	push   cs
  40bc4f:	std    
  40bc50:	pusha  
  40bc51:	sar    DWORD PTR [ecx+eax*1-0x11],0x12
  40bc56:	or     BYTE PTR [esi-0x40],bl
  40bc59:	test   ebp,0xf9ee29b8
  40bc5f:	mov    ds:0x84594b74,al
  40bc64:	adc    BYTE PTR [ecx-0x4444bc03],ch
  40bc6a:	or     ebx,esi
  40bc6c:	test   eax,0x5aeccbba
  40bc71:	(bad)  
  40bc72:	push   ecx
  40bc73:	inc    edi
  40bc74:	push   ebp
  40bc75:	or     bl,BYTE PTR [esi+0x6e400b5a]
  40bc7b:	cwde   
  40bc7c:	xchg   ebp,eax
  40bc7d:	mov    cl,0x47
  40bc7f:	mov    dl,0xb2
  40bc81:	xor    ebp,eax
  40bc83:	inc    ecx
  40bc84:	pop    es
  40bc85:	or     ebx,DWORD PTR [eax+0x5e]
  40bc88:	xor    BYTE PTR [ecx+0x13],0x4
  40bc8c:	jbe    0x40bc25
  40bc8e:	cmp    al,BYTE PTR [esi-0x33]
  40bc91:	push   ebx
  40bc92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc93:	inc    edx
  40bc94:	or     BYTE PTR [ebx],al
  40bc96:	mov    ch,BYTE PTR [ebp+0x17d6193c]
  40bc9c:	mov    WORD PTR [eax-0x3a],gs
  40bc9f:	retf   
  40bca0:	pusha  
  40bca1:	les    ebx,FWORD PTR [eax-0x74]
  40bca4:	fisttp DWORD PTR [ecx-0x46497b0]
  40bcaa:	adc    bl,dh
  40bcac:	jmp    DWORD PTR [edi]
  40bcae:	fidivr WORD PTR [eax+0xf292a67]
  40bcb4:	enter  0x540,0xc9
  40bcb8:	mov    ds:0x9936ebe5,al
  40bcbd:	push   ds
  40bcbe:	out    dx,al
  40bcbf:	and    DWORD PTR [ebp-0x2988ac74],eax
  40bcc5:	stos   BYTE PTR es:[edi],al
  40bcc6:	mov    ds:0xa618e5e2,eax
  40bccb:	inc    ebp
  40bccc:	sbb    DWORD PTR [esi],esi
  40bcce:	inc    ecx
  40bccf:	sahf   
  40bcd0:	ss ins WORD PTR es:[edi],dx
  40bcd3:	dec    esp
  40bcd4:	in     eax,dx
  40bcd5:	sar    bl,1
  40bcd7:	push   edi
  40bcd8:	fild   WORD PTR [esi+0x60d7f2fd]
  40bcde:	cmp    BYTE PTR [esi-0x1cf098f8],0x6a
  40bce5:	xchg   ebx,eax
  40bce6:	and    al,bl
  40bce8:	or     BYTE PTR [ebx*2-0x4fb861aa],0xc2
  40bcf0:	sahf   
  40bcf1:	mov    esp,0x77b33d71
  40bcf6:	and    dh,BYTE PTR [edi+0x73]
  40bcf9:	lahf   
  40bcfa:	or     al,0xae
  40bcfc:	shr    BYTE PTR [edx-0x32096dc0],0x7a
  40bd03:	sbb    esi,DWORD PTR [ecx+0x775fa12d]
  40bd09:	adc    cl,BYTE PTR [edx+0x34]
  40bd0c:	fdiv   QWORD PTR [eax]
  40bd0e:	push   0xffffffe6
  40bd10:	addps  xmm0,XMMWORD PTR [edx]
  40bd13:	imul   ebx,DWORD PTR [ebx],0xffffffb1
  40bd16:	sbb    esp,esp
  40bd18:	and    al,0x2
  40bd1a:	stc    
  40bd1b:	punpcklwd mm6,DWORD PTR [edx]
  40bd1e:	mov    WORD PTR [edi-0x4c],es
  40bd21:	pop    ebx
  40bd22:	xchg   ebp,eax
  40bd23:	mov    esi,0x4f5eeaf3
  40bd28:	dec    esi
  40bd29:	scas   eax,DWORD PTR es:[edi]
  40bd2a:	and    edx,ebx
  40bd2c:	outs   dx,BYTE PTR ds:[esi]
  40bd2d:	mov    eax,0xcd0c1268
  40bd32:	add    cl,BYTE PTR [edx-0x2d7d0836]
  40bd38:	xlat   BYTE PTR ds:[ebx]
  40bd39:	xor    ah,BYTE PTR [eax-0x1cc9f888]
  40bd3f:	pushf  
  40bd40:	(bad)  
  40bd41:	dec    esi
  40bd42:	fdivr  QWORD PTR [esi]
  40bd44:	test   DWORD PTR ds:0x56b21cfe,esp
  40bd4a:	out    dx,al
  40bd4b:	mov    ecx,0xb130baaa
  40bd50:	dec    ebp
  40bd51:	cmc    
  40bd52:	or     edi,DWORD PTR [esi]
  40bd54:	pslld  mm0,QWORD PTR [edx+0x251860c7]
  40bd5b:	jo     0x40bd23
  40bd5d:	pop    ss
  40bd5e:	ss loope 0x40bcee
  40bd61:	push   esp
  40bd62:	call   0x4bb0d626
  40bd67:	jmp    0xa42b:0x6af99585
  40bd6e:	pop    esi
  40bd6f:	pop    esi
  40bd70:	in     al,dx
  40bd71:	sub    BYTE PTR [edx+ebx*8],0xd2
  40bd75:	add    al,0x29
  40bd77:	jne    0x40bde3
  40bd79:	jge    0x40bd55
  40bd7b:	mov    dl,0xf8
  40bd7d:	or     BYTE PTR [edx+0x206b16ac],dl
  40bd83:	in     eax,dx
  40bd84:	xchg   ebx,eax
  40bd85:	call   0x3761f702
  40bd8a:	jmp    0x92731d70
  40bd8f:	mov    gs,WORD PTR [esi-0x504d4119]
  40bd95:	nop
  40bd96:	xchg   dh,bl
  40bd98:	inc    edi
  40bd99:	sbb    BYTE PTR [ebx],0xfe
  40bd9c:	lods   eax,DWORD PTR ds:[esi]
  40bd9d:	rol    dl,0xaf
  40bda0:	or     DWORD PTR [edi+eiz*2-0x56],0x61
  40bda5:	mov    esp,0x10aa1959
  40bdaa:	dec    eax
  40bdab:	pop    ebp
  40bdac:	iret   
  40bdad:	mov    dl,0xa0
  40bdaf:	mov    ds:0x41d737aa,eax
  40bdb4:	cmc    
  40bdb5:	dec    ebp
  40bdb6:	out    0x26,al
  40bdb8:	cli    
  40bdb9:	out    0xba,eax
  40bdbb:	inc    ebp
  40bdbc:	jno    0x40bd7b
  40bdbe:	xchg   ebx,eax
  40bdbf:	sbb    al,0xa8
  40bdc1:	xchg   ecx,eax
  40bdc2:	cmp    eax,0xd24bf72
  40bdc7:	(bad)  
  40bdc8:	call   0x42941c8d
  40bdcd:	mov    ebx,ebx
  40bdcf:	int    0x33
  40bdd1:	(bad)  
  40bdd2:	dec    ebp
  40bdd3:	push   cs
  40bdd4:	push   ecx
  40bdd5:	mov    eax,ds:0xf855fe9a
  40bdda:	bound  ebx,QWORD PTR [edx+0x7815cdc6]
  40bde0:	das    
  40bde1:	(bad)  
  40bde2:	cmp    eax,0xb3f326d
  40bde7:	push   edi
  40bde8:	cld    
  40bde9:	jno    0x40be59
  40bdeb:	int3   
  40bdec:	pop    es
  40bded:	cmp    bl,bl
  40bdef:	stos   DWORD PTR es:[edi],eax
  40bdf0:	(bad)  
  40bdf1:	pop    edi
  40bdf2:	jns    0x40bdd7
  40bdf4:	inc    esi
  40bdf5:	bound  edx,QWORD PTR [ebp-0x17]
  40bdf8:	add    dl,BYTE PTR [esi-0x3232a512]
  40bdfe:	stos   DWORD PTR es:[edi],eax
  40bdff:	sbb    dh,BYTE PTR [ecx]
  40be01:	je     0x40bdfb
  40be03:	rol    BYTE PTR [eax+0x1b1bb3b2],0xd5
  40be0a:	pop    edx
  40be0b:	outs   dx,BYTE PTR ds:[esi]
  40be0c:	cli    
  40be0d:	sbb    esp,esp
  40be0f:	call   0x651b:0xa4be3af4
  40be16:	std    
  40be17:	test   al,0x3c
  40be19:	xor    BYTE PTR [ecx-0x4],0xf9
  40be1d:	lea    edx,[esi+0x79]
  40be20:	and    al,0x49
  40be22:	pop    ds
  40be23:	ret    0x2ed7
  40be26:	xchg   esi,eax
  40be27:	pop    ebp
  40be28:	(bad)  [esi]
  40be2a:	ror    DWORD PTR [ebx+0x49efefe6],0xe7
  40be31:	jge    0x40be6e
  40be33:	xlat   BYTE PTR ds:[ebx]
  40be34:	inc    ebx
  40be35:	mov    ecx,0xc433b40a
  40be3a:	aam    0x8a
  40be3c:	mov    ebx,DWORD PTR [ecx-0x1d4f6d57]
  40be42:	jge    0x40bdcc
  40be44:	sti    
  40be45:	add    al,0x51
  40be47:	lock push edi
  40be49:	hlt    
  40be4a:	int3   
  40be4b:	jo     0x40be92
  40be4d:	int3   
  40be4e:	add    eax,0x43770bb6
  40be53:	inc    eax
  40be54:	sbb    al,0x3a
  40be56:	sub    DWORD PTR [eax-0x1a9ad060],ebp
  40be5c:	push   0xc0dc5469
  40be61:	retf   
  40be62:	(bad)  [esi]
  40be64:	xchg   ecx,eax
  40be65:	xor    al,0xeb
  40be67:	ins    DWORD PTR es:[edi],dx
  40be68:	enter  0x4da4,0xce
  40be6c:	popf   
  40be6d:	sahf   
  40be6e:	mov    DWORD PTR [edi+0x37],edx
  40be71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be72:	and    edi,DWORD PTR [ebx-0x20290d9]
  40be78:	jbe    0x40be9a
  40be7a:	retf   
  40be7b:	push   ebx
  40be7c:	jns    0x40becb
  40be7e:	ja     0x40beb4
  40be80:	out    0xa9,al
  40be82:	rcl    DWORD PTR [ebp+0x22],1
  40be85:	jo     0x40beaa
  40be87:	arpl   di,cx
  40be89:	xor    al,0xb1
  40be8b:	gs enter 0x2972,0x92
  40be90:	scas   eax,DWORD PTR es:[edi]
  40be91:	inc    eax
  40be92:	and    eax,0x1095631b
  40be97:	and    al,0x62
  40be99:	add    eax,0xd5688460
  40be9e:	icebp  
  40be9f:	cmc    
  40bea0:	jl     0x40bf1b
  40bea2:	aam    0x46
  40bea4:	and    eax,0x40085b4
  40bea9:	out    dx,al
  40beaa:	cmp    al,0x69
  40beac:	add    DWORD PTR ss:[edx],eax
  40beaf:	sbb    dl,BYTE PTR [edx]
  40beb1:	and    ebp,edx
  40beb3:	or     al,BYTE PTR [ebp+0x2c]
  40beb6:	xchg   edi,eax
  40beb7:	mov    cl,0x69
  40beb9:	or     BYTE PTR [ebp+0x129e42f3],dl
  40bebf:	dec    eax
  40bec0:	inc    ecx
  40bec1:	add    ebx,0xb1313ff0
  40bec7:	dec    ecx
  40bec8:	(bad)  
  40bec9:	jg     0x40be55
  40becb:	jge    0x40be69
  40becd:	sub    eax,DWORD PTR [esi-0xc03115a]
  40bed3:	adc    eax,edx
  40bed5:	mov    dl,0xe0
  40bed7:	in     eax,0xe9
  40bed9:	in     eax,0xfe
  40bedb:	stos   DWORD PTR es:[edi],eax
  40bedc:	cli    
  40bedd:	add    BYTE PTR [edi-0x6f9261d9],dh
  40bee3:	pop    es
  40bee4:	hlt    
  40bee5:	inc    ecx
  40bee6:	dec    ebx
  40bee7:	mov    al,0x36
  40bee9:	pop    es
  40beea:	cmc    
  40beeb:	mov    bl,0x38
  40beed:	sbb    edx,DWORD PTR [edi+0x2d]
  40bef0:	mov    ebp,0xbbdede1a
  40bef5:	sbb    al,0xe5
  40bef7:	pushf  
  40bef8:	xchg   ebp,eax
  40bef9:	ficom  WORD PTR [ecx-0x47d6e68f]
  40beff:	mov    ds:0xba45c04b,eax
  40bf04:	call   0x16a9e826
  40bf09:	rol    BYTE PTR [edi+0x97f7e96],cl
  40bf0f:	test   eax,0x65322089
  40bf14:	or     eax,0xc10e9b72
  40bf19:	out    0x1d,eax
  40bf1b:	xchg   esp,eax
  40bf1c:	std    
  40bf1d:	mov    eax,cs:0x784b3c79
  40bf23:	(bad)  
  40bf24:	out    dx,al
  40bf25:	int3   
  40bf26:	out    0x4c,al
  40bf28:	pop    edi
  40bf29:	dec    esi
  40bf2a:	(bad)  
  40bf2b:	sub    DWORD PTR es:[esi],ecx
  40bf2e:	xor    al,0xe0
  40bf30:	push   esp
  40bf31:	imul   edx,DWORD PTR [ebx+ecx*1-0x58],0x5cca15f2
  40bf39:	and    edi,esi
  40bf3b:	lds    esp,FWORD PTR ds:0xb17e28d7
  40bf41:	out    0xa6,eax
  40bf43:	mov    ?,WORD PTR [ebp-0x3a]
  40bf46:	mov    ah,0xf9
  40bf48:	mov    bh,0x3c
  40bf4a:	idiv   DWORD PTR [edx]
  40bf4c:	xchg   esi,eax
  40bf4d:	pop    esi
  40bf4e:	mov    ?,WORD PTR [ecx]
  40bf50:	(bad)  
  40bf51:	std    
  40bf52:	pop    eax
  40bf53:	pop    eax
  40bf54:	or     BYTE PTR [ecx],ah
  40bf56:	pop    esp
  40bf57:	in     al,dx
  40bf58:	stos   BYTE PTR es:[edi],al
  40bf59:	popa   
  40bf5a:	call   ecx
  40bf5c:	lahf   
  40bf5d:	and    al,0x94
  40bf5f:	(bad)  
  40bf60:	enter  0xf78a,0xc7
  40bf64:	sub    BYTE PTR [edi+0x76],bh
  40bf67:	cmp    ch,ch
  40bf69:	fincstp 
  40bf6b:	add    al,0xca
  40bf6d:	sti    
  40bf6e:	ds (bad) 
  40bf71:	fisubr DWORD PTR [edx+ebp*1+0x5c]
  40bf75:	iret   
  40bf76:	push   edx
  40bf77:	mov    eax,DWORD PTR [ebx-0x49eb9707]
  40bf7d:	or     eax,0x75bdea8d
  40bf82:	or     dl,cl
  40bf84:	loop   0x40bf91
  40bf86:	jmp    0x8e71:0xf5be5e41
  40bf8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf8e:	pop    eax
  40bf8f:	xlat   BYTE PTR ds:[ebx]
  40bf90:	in     al,0xf
  40bf92:	dec    esi
  40bf93:	mov    al,0x6
  40bf95:	adc    eax,0x31cf23b7
  40bf9a:	stc    
  40bf9b:	test   ch,dh
  40bf9d:	xor    esp,esp
  40bf9f:	jmp    0x40bff4
  40bfa1:	out    0xc0,al
  40bfa3:	adc    edi,DWORD PTR [edx-0x73825fb1]
  40bfa9:	retf   
  40bfaa:	pop    esi
  40bfab:	dec    ebp
  40bfac:	jo     0x40bf68
  40bfae:	retf   0x1252
  40bfb1:	jp     0x40bf94
  40bfb3:	xchg   ebx,eax
  40bfb4:	jae    0x40bfc9
  40bfb6:	sbb    DWORD PTR [edx-0x48f0cf10],edi
  40bfbc:	(bad)  
  40bfbe:	sbb    DWORD PTR [ecx-0x5a],0x79
  40bfc2:	loope  0x40bf8c
  40bfc4:	jne    0x40c02f
  40bfc6:	jne    0x40bf6d
  40bfc8:	std    
  40bfc9:	repz mov cl,BYTE PTR [ecx-0x5b]
  40bfcd:	(bad)  
  40bfce:	mul    DWORD PTR [esi]
  40bfd0:	jle    0x40bf63
  40bfd2:	mov    DWORD PTR ds:0xe9b495c,eax
  40bfd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd9:	pop    di
  40bfdb:	cmp    DWORD PTR fs:[ecx],edx
  40bfde:	push   ebp
  40bfdf:	pop    eax
  40bfe0:	sub    al,0x17
  40bfe2:	lea    esi,[ebx+0x44a47edf]
  40bfe8:	sbb    ah,BYTE PTR [edx-0xd13f076]
  40bfee:	repnz xchg ecx,eax
  40bff0:	cdq    
  40bff1:	add    DWORD PTR [edi+0x4c753f4e],0x99ed45fa
  40bffb:	push   0xde7a825b
  40c000:	add    dh,BYTE PTR [ebp+0x6e4d5ed5]
  40c006:	loop   0x40c02f
  40c008:	or     ebp,DWORD PTR [ecx+0x40]
  40c00b:	les    ebx,FWORD PTR [esi]
  40c00d:	jbe    0x40c064
  40c00f:	mov    cl,BYTE PTR [edx+edx*2+0x2f]
  40c013:	adc    al,0xa1
  40c015:	shr    BYTE PTR [esi-0x128b0a9f],0x84
  40c01c:	or     eax,0xaecd5656
  40c021:	ror    ecx,cl
  40c023:	mov    al,0xf8
  40c025:	or     BYTE PTR [edx],ch
  40c027:	sbb    DWORD PTR [edx],esi
  40c029:	pop    ds
  40c02a:	mov    dh,0xfd
  40c02c:	sar    DWORD PTR [ebx+ebx*1+0x9f155e1],cl
  40c033:	push   0xd611a609
  40c038:	and    DWORD PTR [esi+0x5d7fb15e],ebx
  40c03e:	push   ds
  40c03f:	aas    
  40c040:	xchg   ecx,eax
  40c041:	pop    eax
  40c042:	(bad)
  40c045:	aam    0x15
  40c047:	add    esp,ecx
  40c049:	or     DWORD PTR [edx],esi
  40c04b:	inc    esi
  40c04c:	push   ebx
  40c04d:	add    al,0x69
  40c04f:	fwait
  40c050:	popf   
  40c051:	fdiv   DWORD PTR [ebx-0x6e]
  40c054:	dec    ebp
  40c055:	jnp    0x40bfe1
  40c057:	pusha  
  40c058:	add    esp,DWORD PTR [ecx+0xa]
  40c05b:	test   eax,0x9c3a269a
  40c060:	sub    BYTE PTR [esp+edx*1-0x51501475],cl
  40c067:	sbb    al,0x1a
  40c069:	pop    ebx
  40c06a:	push   ebp
  40c06b:	cmp    al,0x44
  40c06d:	call   0x68b:0x7bfa41d3
  40c074:	xchg   BYTE PTR [esi],ah
  40c076:	xchg   ecx,eax
  40c077:	mov    ebx,0xe520a0b1
  40c07c:	hlt    
  40c07d:	sti    
  40c07e:	jae    0x40c0aa
  40c080:	out    dx,al
  40c081:	stos   DWORD PTR es:[edi],eax
  40c082:	les    edx,FWORD PTR [ecx]
  40c084:	jge    0x40c028
  40c086:	sub    cl,BYTE PTR [edx+0x63]
  40c089:	add    DWORD PTR [esi-0xd9fdf14],esp
  40c08f:	mov    bh,0xa0
  40c091:	ja     0x40c03b
  40c093:	dec    edi
  40c094:	jp     0x40c052
  40c096:	sbb    ebx,DWORD PTR [eax-0x75eaf33f]
  40c09c:	inc    ebx
  40c09d:	mov    ebp,0x84dc87bf
  40c0a2:	cld    
  40c0a3:	cld    
  40c0a4:	pop    eax
  40c0a5:	scas   eax,DWORD PTR es:[edi]
  40c0a6:	push   esi
  40c0a7:	add    eax,0x6b30f2a
  40c0ac:	mov    ch,0x4e
  40c0ae:	xor    DWORD PTR [edi+eax*2-0x39f1e816],0xffffffd0
  40c0b6:	pop    ds
  40c0b7:	ds mov bl,0xc2
  40c0ba:	jecxz  0x40c07c
  40c0bc:	mov    edx,?
  40c0be:	mov    al,0x8d
  40c0c0:	mov    al,0x7e
  40c0c2:	or     DWORD PTR [edi+0x48],ecx
  40c0c5:	mov    dh,0xf6
  40c0c7:	xor    al,0x5a
  40c0c9:	or     DWORD PTR [ecx-0x5e74180],edi
  40c0cf:	mov    cl,0x70
  40c0d1:	ret    
  40c0d2:	(bad)  
  40c0d3:	retf   
  40c0d4:	jg     0x40c0ac
  40c0d6:	imul   ebp,DWORD PTR [esi],0xbfa4c2c9
  40c0dc:	les    esi,FWORD PTR [edi+0x23e6b569]
  40c0e2:	sub    bl,BYTE PTR [ebp+0x55]
  40c0e5:	stc    
  40c0e6:	inc    ebx
  40c0e7:	cmc    
  40c0e8:	mov    BYTE PTR [edi],bh
  40c0ea:	xor    BYTE PTR [edx+0xf],dl
  40c0ed:	aas    
  40c0ee:	fidivr DWORD PTR [ecx+0x2664a42d]
  40c0f4:	and    eax,0x90aa7a12
  40c0f9:	add    edx,DWORD PTR [edi+edi*4]
  40c0fc:	ja     0x40c139
  40c0fe:	inc    edi
  40c0ff:	push   esp
  40c100:	add    al,0xf6
  40c102:	les    ecx,FWORD PTR [ebp-0x4a6dfdb1]
  40c108:	mov    bl,0xeb
  40c10a:	inc    eax
  40c10b:	mov    edi,0x6422510d
  40c110:	push   esi
  40c111:	mov    ds:0xd6e99544,eax
  40c116:	xor    ebx,esi
  40c118:	xchg   ebx,eax
  40c119:	push   ecx
  40c11a:	ret    
  40c11b:	add    cl,bl
  40c11d:	shl    BYTE PTR [edi],1
  40c11f:	test   edx,ecx
  40c121:	aas    
  40c122:	outs   dx,DWORD PTR ds:[esi]
  40c123:	ss hlt 
  40c125:	int    0xee
  40c127:	loope  0x40c166
  40c129:	add    ax,0xf0a0
  40c12d:	mov    edi,esp
  40c12f:	add    bh,0x6b
  40c132:	push   cs
  40c133:	shl    DWORD PTR [edx],1
  40c135:	lahf   
  40c136:	clc    
  40c137:	sub    ebx,DWORD PTR [edx+0x2f]
  40c13a:	sbb    dh,BYTE PTR [edx+0x50d3caeb]
  40c140:	pop    esp
  40c141:	fistp  QWORD PTR [di+0x1f17]
  40c147:	retf   
  40c148:	mov    edx,0x907cf37a
  40c14d:	inc    esp
  40c14e:	cmp    dh,BYTE PTR [esi+0x497d8072]
  40c154:	push   esi
  40c155:	adc    BYTE PTR [ecx+0x18ae6b8],cl
  40c15b:	fadd   DWORD PTR [esi-0x49113474]
  40c161:	ffreep st(0)
  40c163:	in     eax,0x11
  40c165:	mov    esi,0xfc95ce39
  40c16a:	gs sbb eax,0x2e601e03
  40c170:	push   ebp
  40c171:	adc    esp,DWORD PTR [edi-0x38]
  40c174:	sub    BYTE PTR [ecx+eax*4],dl
  40c177:	adc    al,0x54
  40c179:	jae    0x40c19f
  40c17b:	mov    al,0xc6
  40c17d:	pop    edx
  40c17e:	idiv   DWORD PTR [ebp+0x1f]
  40c181:	sbb    eax,0x1630cf50
  40c186:	and    al,0x87
  40c188:	jb     0x40c1e3
  40c18a:	xchg   ebx,eax
  40c18b:	xlat   BYTE PTR ds:[ebx]
  40c18c:	ds je  0x40c12d
  40c18f:	das    
  40c190:	adc    al,bl
  40c192:	adc    esi,DWORD PTR [ebx]
  40c194:	rcr    DWORD PTR [edi-0x65],cl
  40c197:	out    dx,al
  40c198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c199:	sbb    cl,cl
  40c19b:	add    ch,0x9a
  40c19e:	out    dx,eax
  40c19f:	push   ss
  40c1a0:	jae    0x40c158
  40c1a2:	sub    DWORD PTR [edx+0x410c9485],esp
  40c1a8:	fcom   DWORD PTR [edi+0x42b35d2a]
  40c1ae:	mov    ecx,0x9471bab0
  40c1b3:	daa    
  40c1b4:	test   eax,0x9afb7ad7
  40c1b9:	mov    BYTE PTR [ecx+edi*4-0x648a505],ch
  40c1c0:	arpl   WORD PTR [eax+0xfa9b557],di
  40c1c6:	xor    DWORD PTR [edx+0xe],0x46
  40c1ca:	fbstp  TBYTE PTR [edx+ebx*2+0x533f399d]
  40c1d1:	adc    eax,0xf154576b
  40c1d6:	cmp    DWORD PTR [esp+eiz*4],eax
  40c1d9:	popa   
  40c1da:	jmp    0x40c1ab
  40c1dc:	cwde   
  40c1dd:	retf   
  40c1de:	jle    0x40c254
  40c1e0:	hlt    
  40c1e1:	jae    0x40c20d
  40c1e3:	push   ds
  40c1e4:	and    ebp,DWORD PTR [esi]
  40c1e6:	rcr    cl,0xf6
  40c1e9:	cli    
  40c1ea:	rcl    DWORD PTR [ecx],1
  40c1ec:	inc    esi
  40c1ed:	add    DWORD PTR [eax+0x5fdd3bd2],edx
  40c1f3:	xor    eax,0xb44695e7
  40c1f8:	mov    ebp,0xe4635de8
  40c1fd:	jno    0x40c1b9
  40c1ff:	lahf   
  40c200:	mov    ds:0xa412f307,eax
  40c205:	inc    ebp
  40c206:	or     al,0x71
  40c208:	dec    ebp
  40c209:	jns    0x40c1b1
  40c20b:	or     al,0x97
  40c20d:	xlat   BYTE PTR ds:[ebx]
  40c20e:	fwait
  40c20f:	ret    0x69e1
  40c212:	add    al,0xb3
  40c214:	loopne 0x40c272
  40c216:	les    esp,FWORD PTR [esi]
  40c218:	adc    dl,dh
  40c21a:	push   cs
  40c21b:	addr16 enter 0x66d2,0x53
  40c220:	pop    ds
  40c221:	rcl    DWORD PTR [ecx],1
  40c223:	fs dec ebx
  40c225:	(bad)  
  40c226:	fldl2t 
  40c228:	mov    bh,0xc6
  40c22a:	test   DWORD PTR [eax-0x3a1c807c],esp
  40c230:	and    ebx,DWORD PTR [esi]
  40c232:	outs   dx,DWORD PTR ds:[esi]
  40c233:	(bad)  
  40c234:	rol    BYTE PTR [esi],1
  40c236:	hlt    
  40c237:	cmc    
  40c238:	adc    DWORD PTR [esp+ebp*8+0x5b],ebp
  40c23c:	dec    ecx
  40c23d:	sub    dh,BYTE PTR [eax+0x3d]
  40c240:	mov    bh,0x2f
  40c242:	rcr    DWORD PTR es:[ebp+0x7af2659e],1
  40c249:	adc    esp,DWORD PTR [edi-0x5cf424dd]
  40c24f:	lods   eax,DWORD PTR ds:[esi]
  40c250:	xchg   BYTE PTR [ebp-0x2a91eb24],bh
  40c256:	lds    esi,FWORD PTR [esi+0x1e787c7d]
  40c25c:	test   DWORD PTR [edi],ebx
  40c25e:	imul   eax,esp,0x81c98db7
  40c264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c265:	pop    ecx
  40c266:	adc    eax,0xbe38b878
  40c26b:	popf   
  40c26c:	mov    edi,ds
  40c26e:	(bad)  
  40c26f:	or     al,0x54
  40c271:	mov    dl,0x46
  40c273:	cld    
  40c274:	loope  0x40c1fe
  40c276:	pop    ss
  40c277:	ds out dx,al
  40c279:	add    eax,eax
  40c27b:	push   ebx
  40c27c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c27d:	sub    esp,DWORD PTR es:[eax+0x72e36cb8]
  40c284:	sahf   
  40c285:	mov    cl,0x6c
  40c287:	sub    BYTE PTR [ebx+0x73],0xa1
  40c28b:	sbb    edi,DWORD PTR [ecx]
  40c28d:	out    dx,al
  40c28e:	ror    BYTE PTR [ecx],1
  40c290:	daa    
  40c291:	fisub  WORD PTR [edx]
  40c293:	call   0xeee3:0x2c1ca2de
  40c29a:	fs icebp 
  40c29c:	pop    ds
  40c29d:	(bad)  
  40c29e:	loop   0x40c28b
  40c2a0:	pushf  
  40c2a1:	fnsave [esi-0x6564b119]
  40c2a7:	pop    eax
  40c2a8:	add    eax,0x794f351d
  40c2ad:	sub    al,0x12
  40c2af:	push   ss
  40c2b0:	sub    al,0xeb
  40c2b2:	pop    es
  40c2b3:	popf   
  40c2b4:	push   0x336c11ce
  40c2b9:	and    eax,0xa95b55f6
  40c2be:	sti    
  40c2bf:	pusha  
  40c2c0:	outs   dx,BYTE PTR ds:[esi]
  40c2c1:	xor    eax,0x819a114c
  40c2c6:	repz cmc 
  40c2c8:	cmp    ah,ah
  40c2ca:	aam    0x11
  40c2cc:	and    edx,edx
  40c2ce:	pop    ecx
  40c2cf:	pop    esi
  40c2d0:	cmp    DWORD PTR [eax+0x71ce0b5e],esi
  40c2d6:	add    esi,edi
  40c2d8:	jle    0x40c2f2
  40c2da:	fnstsw WORD PTR ds:0x674b378c
  40c2e0:	mov    BYTE PTR [edi-0x4d787d75],bh
  40c2e6:	imul   eax,DWORD PTR [ebx+0x9caf085],0x36
  40c2ed:	das    
  40c2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ef:	push   0x9f1e4214
  40c2f4:	cmp    ebp,DWORD PTR [ebp-0x74]
  40c2f7:	or     DWORD PTR [esi+0x5b2534da],edx
  40c2fd:	mov    ds:0xf4e1e653,eax
  40c302:	inc    ebx
  40c303:	cli    
  40c304:	and    dl,dl
  40c306:	daa    
  40c307:	rcr    DWORD PTR [edi-0x4ffb933],1
  40c30d:	jns    0x40c315
  40c30f:	add    esp,edi
  40c311:	xor    ecx,edx
  40c313:	sahf   
  40c314:	xor    DWORD PTR [edi+0x3a],esi
  40c317:	jb     0x40c2c1
  40c319:	sbb    BYTE PTR [ebp+0x4],0x69
  40c31d:	cmp    BYTE PTR [eax],0xf8
  40c320:	lds    eax,FWORD PTR [esi-0x68]
  40c323:	add    al,0x6f
  40c325:	movlhps xmm0,xmm1
  40c328:	xor    dh,BYTE PTR [ecx]
  40c32a:	shr    DWORD PTR ds:0x2d2a6dc7,cl
  40c330:	sub    esi,ecx
  40c332:	push   ds
  40c333:	jmp    0x40c2de
  40c335:	add    ebx,DWORD PTR [ebp-0x68697cdd]
  40c33b:	push   ss
  40c33c:	dec    ebp
  40c33d:	jns    0x40c303
  40c33f:	push   ss
  40c340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c341:	xor    al,ah
  40c343:	test   eax,esi
  40c345:	add    BYTE PTR [ecx],dl
  40c347:	push   ecx
  40c348:	call   0x7d7b:0xa59be0e1
  40c34f:	xor    eax,0xcd350b84
  40c354:	add    al,0xef
  40c356:	pusha  
  40c357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c358:	enter  0xdc17,0x5c
  40c35c:	inc    ecx
  40c35d:	mov    BYTE PTR [esp+ecx*1],bl
  40c360:	push   ds
  40c361:	mov    esi,0x9012a2d6
  40c366:	ret    0x2146
  40c369:	mov    eax,ds:0x579d12ed
  40c36e:	cmp    al,0xa4
  40c370:	icebp  
  40c371:	inc    eax
  40c372:	ins    DWORD PTR es:[edi],dx
  40c373:	cwde   
  40c374:	dec    eax
  40c375:	mov    dh,0x42
  40c377:	sbb    DWORD PTR [eax-0x42],0x7d8617bd
  40c37e:	jbe    0x40c304
  40c380:	jo     0x40c34c
  40c382:	rcr    BYTE PTR [edi-0x34],cl
  40c385:	cmp    DWORD PTR [ecx+0x4e],ebx
  40c388:	xchg   edi,eax
  40c389:	push   eax
  40c38a:	xchg   BYTE PTR [edx-0x43],bh
  40c38d:	adc    eax,0x12d21767
  40c392:	inc    ecx
  40c393:	shl    DWORD PTR [ebx+esi*2+0x2],1
  40c397:	add    DWORD PTR [esi],ecx
  40c399:	dec    esi
  40c39a:	ss pop ebx
  40c39c:	mov    eax,gs:0x952f59bf
  40c3a2:	or     DWORD PTR [edi],esp
  40c3a4:	loope  0x40c350
  40c3a6:	mov    cl,0xaa
  40c3a8:	jge    0x40c35f
  40c3aa:	daa    
  40c3ab:	mov    eax,0xd9d9d792
  40c3b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3b1:	pusha  
  40c3b2:	dec    esp
  40c3b3:	push   0xffffffd5
  40c3b5:	(bad)  
  40c3b6:	mov    ebx,0xad08eaf9
  40c3bb:	mov    bl,0xf5
  40c3bd:	lods   eax,DWORD PTR ds:[esi]
  40c3be:	xchg   esp,eax
  40c3bf:	push   ebp
  40c3c0:	pushf  
  40c3c1:	jmp    0x40c3fe
  40c3c3:	mov    es,WORD PTR [esi+0x66]
  40c3c6:	scas   eax,DWORD PTR es:[edi]
  40c3c7:	cmp    al,0x84
  40c3c9:	stos   DWORD PTR es:[edi],eax
  40c3ca:	dec    ebx
  40c3cb:	sub    DWORD PTR [eax+0x28],edi
  40c3ce:	inc    esi
  40c3cf:	fistp  QWORD PTR [eax+0x5eead283]
  40c3d5:	push   0x5cbd04a8
  40c3da:	in     al,0x5
  40c3dc:	xor    bh,0x31
  40c3df:	(bad)  
  40c3e0:	mov    ecx,0xcdff43a4
  40c3e5:	jg     0x40c37a
  40c3e7:	loopne 0x40c465
  40c3e9:	arpl   WORD PTR [edx+esi*4],bp
  40c3ec:	fild   QWORD PTR [esi-0x66]
  40c3ef:	or     bh,BYTE PTR [ebx*8-0x330aebee]
  40c3f6:	rcr    BYTE PTR [edx+0x476e1e3c],1
  40c3fc:	push   edx
  40c3fd:	mov    eax,0x9c8dbc08
  40c402:	out    dx,al
  40c403:	add    edx,ebp
  40c405:	mov    cl,0x20
  40c407:	out    dx,al
  40c408:	cmp    al,0x9
  40c40a:	jmp    0x40c3ba
  40c40c:	xor    ebx,DWORD PTR [edi]
  40c40e:	mov    cl,0xcf
  40c410:	in     eax,0x33
  40c412:	sbb    bh,BYTE PTR [edx-0x5b9419fb]
  40c418:	idiv   BYTE PTR [eax-0x1df965dd]
  40c41e:	jmp    0x1b7cd7f3
  40c423:	stc    
  40c424:	dec    ebx
  40c425:	nop
  40c426:	cmp    esi,DWORD PTR [esi+0x3e]
  40c429:	mov    ah,0xf7
  40c42b:	in     al,0xbb
  40c42d:	jmp    FWORD PTR [edx+0x36]
  40c430:	dec    ecx
  40c431:	dec    ebx
  40c432:	loopne 0x40c412
  40c434:	sbb    BYTE PTR [edx],0xee
  40c437:	mov    al,0x9e
  40c439:	or     eax,0xe9b3d723
  40c43e:	mov    al,0x82
  40c440:	imul   edi,edi,0xffffffdf
  40c443:	mov    bl,0x40
  40c445:	and    DWORD PTR [esi+0x53e07eb8],0x6672a331
  40c44f:	cmp    eax,0xb4e8679b
  40c454:	jle    0x40c3eb
  40c456:	jmp    0xf156:0x25d3708b
  40c45d:	(bad)  
  40c45e:	xor    al,BYTE PTR fs:[ebx]
  40c461:	mov    esi,0x5ff90cf2
  40c466:	(bad)  
  40c467:	sar    DWORD PTR [eax],1
  40c469:	ror    ebp,cl
  40c46b:	pop    esp
  40c46c:	mov    edx,0xc2fb1f41
  40c471:	fistp  WORD PTR [edx+ebx*4]
  40c474:	mov    edx,0x9a792c99
  40c479:	shl    DWORD PTR [ecx+edx*2],cl
  40c47c:	das    
  40c47d:	and    bh,bh
  40c47f:	sbb    edx,DWORD PTR [edx]
  40c481:	pop    edx
  40c482:	sbb    DWORD PTR [edx-0x28a7af36],esi
  40c488:	xor    eax,0x3180f104
  40c48d:	push   esi
  40c48e:	(bad)  
  40c48f:	mov    WORD PTR [ecx-0x1a165396],cs
  40c495:	jbe    0x40c4d1
  40c497:	add    DWORD PTR [ecx],0x92b0d0b5
  40c49d:	das    
  40c49e:	outs   dx,DWORD PTR ds:[esi]
  40c49f:	call   0x10901bec
  40c4a4:	pop    ebp
  40c4a5:	push   es
  40c4a6:	pcmpeqd mm1,QWORD PTR [ecx+ebx*8+0x3b]
  40c4ab:	pop    edx
  40c4ac:	sbb    eax,0x30822c70
  40c4b1:	es dec edx
  40c4b3:	cld    
  40c4b4:	add    bl,BYTE PTR [edx-0x6e]
  40c4b7:	adc    ah,BYTE PTR cs:0xffb90a7b
  40c4be:	cld    
  40c4bf:	rol    DWORD PTR [esi-0x21ca44d2],cl
  40c4c5:	and    eax,DWORD PTR [esi+ebp*4-0x30dfaa67]
  40c4cc:	icebp  
  40c4cd:	mov    cl,0xe6
  40c4cf:	out    dx,eax
  40c4d0:	shl    BYTE PTR [edi],0xa5
  40c4d3:	bound  ebp,QWORD PTR [eax-0x62f5356]
  40c4d9:	adc    eax,0xa816437a
  40c4de:	cmc    
  40c4df:	jb     0x40c4bf
  40c4e1:	daa    
  40c4e2:	clc    
  40c4e3:	lahf   
  40c4e4:	mov    ds:0x57aafe86,al
  40c4e9:	mov    cl,0x93
  40c4eb:	lahf   
  40c4ec:	fld    st(7)
  40c4ee:	push   ebp
  40c4ef:	jb     0x40c531
  40c4f1:	push   ebp
  40c4f2:	push   0x7d
  40c4f4:	fwait
  40c4f5:	enter  0xca37,0xc8
  40c4f9:	or     BYTE PTR [ebx+0x5b],ah
  40c4fc:	mov    ds:0xf87ae608,eax
  40c501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c502:	imul   edx,DWORD PTR [edx-0x1d0d6485],0xffffff87
  40c509:	mov    edx,0xd5a4123c
  40c50e:	inc    edi
  40c50f:	jge    0x40c497
  40c511:	cmp    edx,esp
  40c513:	or     al,dh
  40c515:	loopne 0x40c4f7
  40c517:	test   DWORD PTR [ecx],0x93f66026
  40c51d:	stc    
  40c51e:	inc    edx
  40c51f:	aas    
  40c520:	sub    al,0x76
  40c522:	push   0x5f0a46d6
  40c527:	mov    BYTE PTR [ecx-0x51],dl
  40c52a:	adc    BYTE PTR [ebp-0x33],dl
  40c52d:	add    ebx,esp
  40c52f:	inc    eax
  40c530:	jne    0x40c5ad
  40c532:	popa   
  40c533:	pop    edi
  40c534:	pop    ds
  40c535:	shl    ah,0xf1
  40c538:	int    0x4d
  40c53a:	inc    esp
  40c53b:	mov    eax,ebp
  40c53d:	imul   esi,DWORD PTR [edi],0x49
  40c540:	pushf  
  40c541:	ds sbb al,0x40
  40c544:	loopne 0x40c585
  40c546:	aaa    
  40c547:	(bad)  
  40c548:	dec    eax
  40c549:	mov    esi,0x49d97c98
  40c54e:	iret   
  40c54f:	(bad)  
  40c550:	test   eax,0x7a413b1b
  40c555:	call   0x286fc6cd
  40c55a:	xlat   BYTE PTR ds:[ebx]
  40c55b:	pop    ss
  40c55c:	and    DWORD PTR [edx-0x422dacec],ebp
  40c562:	xchg   ecx,eax
  40c563:	sti    
  40c564:	pop    esi
  40c565:	jl     0x40c5be
  40c567:	cmp    BYTE PTR [esi-0x68a1d179],dh
  40c56d:	repz sbb ah,BYTE PTR [edi]
  40c570:	ins    DWORD PTR es:[edi],dx
  40c571:	inc    ecx
  40c572:	sbb    cl,BYTE PTR [ebp-0x62a51241]
  40c578:	mov    ds:0x1337d226,al
  40c57d:	dec    eax
  40c57e:	hlt    
  40c57f:	daa    
  40c580:	das    
  40c581:	outs   dx,BYTE PTR ds:[esi]
  40c582:	push   0x13ffbc80
  40c587:	push   ds
  40c588:	rcl    DWORD PTR [ebx],cl
  40c58a:	dec    edx
  40c58b:	aad    0x8a
  40c58d:	pusha  
  40c58e:	ret    0x11d2
  40c591:	pusha  
  40c592:	push   esp
  40c593:	push   edi
  40c594:	sbb    esp,ebx
  40c596:	ins    DWORD PTR es:[edi],dx
  40c597:	cdq    
  40c598:	add    eax,0xe53b1782
  40c59d:	push   ecx
  40c59e:	sbb    ebp,0xa5468c62
  40c5a4:	cld    
  40c5a5:	enter  0x64e1,0xc
  40c5a9:	jb     0x40c543
  40c5ab:	mov    edi,0xbd47d062
  40c5b0:	loope  0x40c607
  40c5b2:	rol    BYTE PTR [ecx+ebx*8+0x284f109f],0x6e
  40c5ba:	test   edi,0xe8685304
  40c5c0:	cmp    eax,0xc26a1e12
  40c5c5:	jmp    0x40c5d2
  40c5c7:	cmp    ecx,edx
  40c5c9:	sbb    DWORD PTR [eax],ebx
  40c5cb:	std    
  40c5cc:	sbb    al,0x8d
  40c5ce:	test   BYTE PTR [edx-0x59],ch
  40c5d1:	mov    esp,ebp
  40c5d3:	jle    0x40c591
  40c5d5:	mov    esi,ecx
  40c5d7:	mov    eax,ds:0x8d787ec
  40c5dc:	cmp    al,cl
  40c5de:	or     al,0xbf
  40c5e0:	in     eax,0xcd
  40c5e2:	push   ds
  40c5e3:	fucomp st(0)
  40c5e5:	inc    esp
  40c5e6:	sub    eax,0x609f34c8
  40c5eb:	push   edi
  40c5ec:	add    dh,BYTE PTR [edx+0x6b]
  40c5ef:	cs mov ecx,0x44282f1e
  40c5f5:	mov    ch,ch
  40c5f7:	xchg   esi,eax
  40c5f8:	pusha  
  40c5f9:	and    esi,ebx
  40c5fb:	sub    al,0xf3
  40c5fd:	jo     0x40c5a1
  40c5ff:	xlat   BYTE PTR ds:[ebx]
  40c600:	push   edx
  40c601:	and    DWORD PTR [esi+edi*2],edi
  40c604:	es push ds
  40c606:	pusha  
  40c607:	mov    al,0x58
  40c609:	pop    ebp
  40c60a:	loop   0x40c675
  40c60c:	and    BYTE PTR [eax-0x4a],bh
  40c60f:	test   DWORD PTR [ecx-0x18],edi
  40c612:	inc    edx
  40c613:	xor    ch,bh
  40c615:	fcmovnbe st,st(6)
  40c617:	out    0x3d,al
  40c619:	dec    ebx
  40c61a:	mov    edi,0x3f95dff1
  40c61f:	rcr    DWORD PTR [eax+0x5b],cl
  40c622:	test   al,0xb1
  40c624:	aas    
  40c625:	test   DWORD PTR ds:0x2a15cbb,edx
  40c62b:	xchg   edi,eax
  40c62c:	inc    ecx
  40c62d:	(bad)  
  40c62e:	inc    ax
  40c630:	xor    bl,BYTE PTR [edi-0xa]
  40c633:	sub    DWORD PTR [edi-0x4f],esi
  40c636:	cmc    
  40c637:	cmp    bh,BYTE PTR [esi+ebp*1]
  40c63a:	cmp    ah,BYTE PTR ds:0xf78c85f6
  40c640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c641:	sbb    al,0xec
  40c643:	iret   
  40c644:	sub    esp,ecx
  40c646:	mov    eax,0x143a9979
  40c64b:	adc    dh,al
  40c64d:	or     eax,0xd9c61adc
  40c652:	mov    cl,0x9e
  40c654:	push   es
  40c655:	icebp  
  40c656:	mov    ebx,0x80afb786
  40c65b:	push   ss
  40c65c:	inc    esi
  40c65d:	dec    esp
  40c65e:	mov    bh,BYTE PTR [edi-0x1eb8795c]
  40c664:	adc    al,0x64
  40c666:	clc    
  40c667:	xchg   edi,eax
  40c668:	pop    ebp
  40c669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c66a:	cmp    eax,0xab8be42e
  40c66f:	es jae 0x40c607
  40c672:	popa   
  40c673:	pop    ebp
  40c674:	bound  esp,QWORD PTR [edx+eax*1-0x28e1bfde]
  40c67b:	adc    al,cl
  40c67d:	gs dec eax
  40c67f:	imul   BYTE PTR [ebx+0x3da00d22]
  40c685:	or     BYTE PTR [ebp-0x5a],bh
  40c688:	dec    ecx
  40c689:	arpl   WORD PTR [esi-0x23f1ba12],bx
  40c68f:	out    0x2f,al
  40c691:	dec    ebp
  40c692:	out    0x20,eax
  40c694:	or     eax,DWORD PTR [ecx+0x2f]
  40c697:	dec    ebx
  40c698:	dec    ebp
  40c699:	aas    
  40c69a:	pop    ds
  40c69b:	nop
  40c69c:	mov    ah,0xbc
  40c69e:	jle    0x40c6dc
  40c6a0:	out    0xa2,eax
  40c6a2:	cwde   
  40c6a3:	or     DWORD PTR [edx+0x20],edx
  40c6a6:	jnp    0x40c6f7
  40c6a8:	fnstenv [ebx-0x18]
  40c6ab:	loop   0x40c6a7
  40c6ad:	adc    edx,DWORD PTR [ecx+ebp*2-0x16159ef5]
  40c6b4:	(bad)
  40c6b7:	mov    bl,0xb
  40c6b9:	cmp    bh,bl
  40c6bb:	das    
  40c6bc:	or     eax,0x426d44d6
  40c6c1:	ret    0x2e3f
  40c6c4:	mov    fs,WORD PTR [edi]
  40c6c6:	dec    esi
  40c6c7:	dec    edi
  40c6c8:	ret    0x7b5e
  40c6cb:	inc    edi
  40c6cc:	(bad)  
  40c6cd:	outs   dx,BYTE PTR ds:[esi]
  40c6ce:	mov    ah,0xa1
  40c6d0:	int    0x8a
  40c6d2:	adc    eax,0xe45d3cba
  40c6d7:	inc    ecx
  40c6d8:	inc    ecx
  40c6d9:	ret    
  40c6da:	ins    BYTE PTR es:[edi],dx
  40c6db:	push   cs
  40c6dc:	pop    ecx
  40c6dd:	and    cl,BYTE PTR [esi+0x4ee451b0]
  40c6e3:	mov    eax,0xab45e702
  40c6e8:	ja     0x40c744
  40c6ea:	push   cs
  40c6eb:	out    dx,eax
  40c6ec:	popf   
  40c6ed:	in     eax,0x56
  40c6ef:	jle    0x40c75c
  40c6f1:	jo     0x40c68c
  40c6f3:	test   BYTE PTR [ecx-0x2],dh
  40c6f6:	sahf   
  40c6f7:	push   edi
  40c6f8:	aaa    
  40c6f9:	inc    esi
  40c6fa:	std    
  40c6fb:	xchg   ebp,eax
  40c6fc:	mov    ebx,0x483fde72
  40c701:	xchg   esp,eax
  40c702:	pop    ds
  40c703:	xchg   ebp,eax
  40c704:	mul    BYTE PTR [ebx-0x7e]
  40c707:	cli    
  40c708:	rol    BYTE PTR [edx+0x3f55e53c],1
  40c70e:	adc    cl,al
  40c710:	(bad)  
  40c711:	pop    esp
  40c712:	lods   al,BYTE PTR ds:[esi]
  40c713:	or     al,cl
  40c715:	pop    eax
  40c716:	mov    al,0x98
  40c718:	in     eax,0xf8
  40c71a:	xor    ecx,DWORD PTR [esi-0x3ede0e61]
  40c720:	push   edx
  40c721:	sbb    esi,eax
  40c723:	mov    DWORD PTR [ebp-0x3f78b318],0xd566dc28
  40c72d:	in     eax,0xca
  40c72f:	std    
  40c730:	sbb    dl,BYTE PTR [ebx+0x64ee1e10]
  40c736:	ret    0x7da7
  40c739:	jmp    0x40c703
  40c73b:	outs   dx,DWORD PTR ds:[esi]
  40c73c:	sbb    al,0x67
  40c73e:	inc    edi
  40c73f:	jmp    0x4122aafa
  40c744:	inc    ecx
  40c745:	xchg   ebx,eax
  40c746:	mov    ecx,0x4164821b
  40c74b:	or     BYTE PTR [ebx],dh
  40c74d:	pusha  
  40c74e:	xchg   ebx,eax
  40c74f:	inc    ebx
  40c750:	push   esp
  40c751:	dec    edx
  40c752:	aas    
  40c753:	mov    bh,0x41
  40c755:	mov    ecx,0x18a2aa2e
  40c75a:	mov    al,0x56
  40c75c:	xchg   edi,eax
  40c75d:	pusha  
  40c75e:	test   DWORD PTR [edi+0x66bac92b],0xa447d241
  40c768:	(bad)  
  40c769:	jg     0x40c6f4
  40c76b:	icebp  
  40c76c:	and    ebp,ebp
  40c76e:	les    eax,FWORD PTR [edx]
  40c770:	out    dx,eax
  40c771:	push   edi
  40c772:	or     BYTE PTR [edi],cl
  40c774:	mov    dl,0xa8
  40c776:	mov    ds:0xf55a0aec,eax
  40c77b:	test   eax,0xfc28f9df
  40c780:	pop    esp
  40c781:	daa    
  40c782:	sbb    BYTE PTR [edi-0x20],0x1a
  40c786:	hlt    
  40c787:	mov    ah,0x3e
  40c789:	jns    0x40c76e
  40c78b:	outs   dx,DWORD PTR ds:[esi]
  40c78c:	inc    esp
  40c78d:	test   edx,esp
  40c78f:	and    al,0x3a
  40c791:	retf   
  40c792:	pop    ecx
  40c793:	jbe    0x40c7da
  40c795:	(bad)  
  40c796:	or     cl,BYTE PTR [ecx-0x151ff642]
  40c79c:	les    esi,FWORD PTR [ecx]
  40c79e:	(bad)  
  40c79f:	push   0xa99e61a8
  40c7a4:	fadd   DWORD PTR [edi]
  40c7a6:	(bad)  
  40c7a8:	(bad)  
  40c7a9:	(bad)  
  40c7ab:	and    dh,0xb9
  40c7ae:	inc    esi
  40c7af:	fs cdq 
  40c7b1:	out    dx,al
  40c7b2:	push   0x3c
  40c7b4:	inc    ebx
  40c7b5:	lods   al,BYTE PTR ds:[esi]
  40c7b6:	push   es
  40c7b7:	mov    ebx,0x1f77a18d
  40c7bc:	mov    dl,0xa3
  40c7be:	add    DWORD PTR [esi],0x3d
  40c7c1:	and    DWORD PTR [eax+0x4dfe1737],0xaf28df15
  40c7cb:	inc    edx
  40c7cc:	cmp    ch,BYTE PTR [ebx]
  40c7ce:	sbb    BYTE PTR [eax],bl
  40c7d0:	outs   dx,DWORD PTR ds:[esi]
  40c7d1:	loop   0x40c80c
  40c7d3:	fnsave [ebp-0x3fcbe1e3]
  40c7d9:	xchg   eax,edi
  40c7db:	jb     0x40c77c
  40c7dd:	sti    
  40c7de:	mov    WORD PTR [ebp-0x3f],cs
  40c7e1:	out    dx,eax
  40c7e2:	push   edi
  40c7e3:	jge    0x40c79d
  40c7e5:	and    BYTE PTR [ebp+0x35e15bd3],0x4e
  40c7ec:	sub    al,0x6f
  40c7ee:	rol    DWORD PTR cs:[ecx-0x34],1
  40c7f2:	imul   edi,DWORD PTR [edi-0x55106bd3],0x862ddd3b
  40c7fc:	mov    ebp,DWORD PTR [esi+0x6c]
  40c7ff:	push   es
  40c800:	je     0x40c80f
  40c802:	push   es
  40c803:	(bad)  
  40c804:	in     eax,0x68
  40c806:	sbb    bl,BYTE PTR [esi-0x6]
  40c809:	aam    0xc
  40c80b:	cmp    ecx,ebx
  40c80d:	rcl    DWORD PTR [ecx],1
  40c80f:	les    eax,FWORD PTR [ecx-0x1b93b401]
  40c815:	pushw  0x1e0b
  40c819:	adc    DWORD PTR fs:[ebx-0x2d7dc16f],0xffffff9a
  40c821:	xchg   edx,eax
  40c822:	lahf   
  40c823:	fwait
  40c824:	in     al,0x58
  40c826:	mov    ecx,0xf0a6195f
  40c82b:	call   0x207f7cd4
  40c830:	popf   
  40c831:	(bad)  
  40c832:	ficom  WORD PTR [edx-0xb]
  40c835:	xchg   ebp,eax
  40c836:	pop    edi
  40c837:	std    
  40c838:	push   ebp
  40c839:	adc    BYTE PTR [edi-0x31],cl
  40c83c:	mov    dl,al
  40c83e:	add    DWORD PTR [eax+0x219b8313],edx
  40c844:	push   esi
  40c845:	pop    esp
  40c846:	jbe    0x40c7ed
  40c848:	adc    BYTE PTR [edi-0x6d],cl
  40c84b:	inc    esp
  40c84c:	pop    edx
  40c84d:	das    
  40c84e:	lods   al,BYTE PTR ds:[esi]
  40c84f:	sbb    al,0xb8
  40c851:	jmp    0x688ba4a1
  40c856:	and    DWORD PTR [esi],esp
  40c858:	mov    fs,WORD PTR [ebp-0x371dd3c]
  40c85e:	sbb    ecx,DWORD PTR [ecx-0x2e]
  40c861:	fld    st(1)
  40c863:	retf   0x771a
  40c866:	and    cl,BYTE PTR [edi]
  40c868:	jnp    0x40c820
  40c86a:	adc    edx,edx
  40c86c:	imul   ebp,DWORD PTR [ebx+eax*1+0x31],0x23
  40c871:	push   edi
  40c872:	sub    eax,0x702fb753
  40c877:	xchg   edx,eax
  40c878:	or     BYTE PTR [edx-0x3c],0x19
  40c87c:	aas    
  40c87d:	xor    esp,esi
  40c87f:	mov    esp,0xc870b160
  40c884:	call   0x889c2d2
  40c889:	cmp    BYTE PTR [esi+0x794fd937],bl
  40c88f:	test   DWORD PTR [ecx+esi*4+0x31ea1173],edi
  40c896:	and    bh,BYTE PTR [ebx-0x7]
  40c899:	call   0x32c8ba99
  40c89e:	out    dx,al
  40c89f:	or     ebx,ebx
  40c8a1:	mov    esi,0xeff1510
  40c8a6:	pop    eax
  40c8a7:	pop    ss
  40c8a8:	push   edx
  40c8a9:	cmp    ebp,DWORD PTR [ebp+0x16]
  40c8ac:	test   DWORD PTR [esi+0x249a8e89],ebx
  40c8b2:	movntps XMMWORD PTR [edx],xmm6
  40c8b5:	sub    cl,BYTE PTR [edx-0x3f]
  40c8b8:	stos   BYTE PTR es:[edi],al
  40c8b9:	mov    WORD PTR ds:0xf246ae5,ss
  40c8bf:	lods   al,BYTE PTR ds:[esi]
  40c8c0:	cmc    
  40c8c1:	dec    edx
  40c8c2:	in     eax,0xb1
  40c8c4:	je     0x40c85d
  40c8c6:	jp     0x40c8df
  40c8c8:	or     dh,BYTE PTR [bx+di-0x3ed7]
  40c8cd:	xchg   DWORD PTR [eax+0x75],esi
  40c8d0:	or     BYTE PTR [ebx+0x75ac249],dl
  40c8d6:	add    BYTE PTR [ebx],ch
  40c8d8:	loop   0x40c883
  40c8da:	add    bh,BYTE PTR [edi-0x13]
  40c8dd:	or     dl,bh
  40c8df:	xchg   ecx,eax
  40c8e0:	cld    
  40c8e1:	cmc    
  40c8e2:	daa    
  40c8e3:	int3   
  40c8e4:	cmp    DWORD PTR [edi+0x3d],esp
  40c8e7:	dec    esi
  40c8e8:	(bad)  
  40c8e9:	jno    0x40c963
  40c8eb:	xor    dh,dh
  40c8ed:	mov    ch,0xc9
  40c8ef:	das    
  40c8f0:	std    
  40c8f1:	add    BYTE PTR [ebp-0x4f957d41],bl
  40c8f7:	push   esp
  40c8f8:	dec    ebp
  40c8f9:	or     cl,BYTE PTR [ebx+0xbf6aaf6]
  40c8ff:	xor    al,0xed
  40c901:	adc    eax,edx
  40c903:	mov    ah,0x59
  40c905:	iret   
  40c906:	and    al,0x48
  40c908:	ins    DWORD PTR es:[edi],dx
  40c909:	inc    esi
  40c90a:	jp     0x40c92c
  40c90c:	pop    edx
  40c90d:	(bad)  
  40c90f:	fnstenv [esp+ebx*2]
  40c912:	pop    ebx
  40c913:	sbb    al,0xbf
  40c915:	sbb    BYTE PTR fs:[ebx+0x7d47d45c],0x6c
  40c91d:	out    dx,eax
  40c91e:	aam    0x6c
  40c920:	xchg   edx,eax
  40c921:	sahf   
  40c922:	add    DWORD PTR [esi+0x707e65e],esi
  40c928:	out    dx,al
  40c929:	outs   dx,DWORD PTR ds:[esi]
  40c92a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c92b:	and    BYTE PTR [ebp+0x58],dl
  40c92e:	in     al,dx
  40c92f:	(bad)  
  40c930:	xchg   edi,eax
  40c931:	mov    cs:0xa12fb7a8,eax
  40c937:	lods   al,BYTE PTR ds:[esi]
  40c938:	ins    DWORD PTR es:[edi],dx
  40c939:	retf   0xd3e6
  40c93c:	adc    al,0x3f
  40c93e:	mov    ds:0x3e57f815,al
  40c943:	mov    eax,ds:0xc8dc5a04
  40c948:	xlat   BYTE PTR ds:[ebx]
  40c949:	dec    esi
  40c94a:	dec    ecx
  40c94b:	arpl   WORD PTR [eax+eax*2+0x5a],si
  40c94f:	push   esp
  40c950:	int3   
  40c951:	cld    
  40c952:	imul   ecx,DWORD PTR [ebp+0x64],0xffffffcb
  40c956:	mov    cl,0x98
  40c958:	lock pusha 
  40c95a:	pop    ebx
  40c95b:	add    al,0x3a
  40c95d:	cmc    
  40c95e:	inc    ecx
  40c95f:	push   esi
  40c960:	add    al,0x35
  40c962:	pop    ebp
  40c963:	push   ebp
  40c964:	outs   dx,BYTE PTR ds:[esi]
  40c965:	out    0x1f,eax
  40c967:	xchg   esp,eax
  40c968:	(bad)  
  40c969:	inc    ebp
  40c96a:	jnp    0x40c9e2
  40c96c:	add    ah,BYTE PTR [ecx-0x3b]
  40c96f:	cmp    ecx,DWORD PTR [edi+ebp*8]
  40c972:	retf   0xa423
  40c975:	fild   DWORD PTR [ebp-0x71f90ef]
  40c97b:	ret    0x5f0a
  40c97e:	scas   al,BYTE PTR es:[edi]
  40c97f:	shr    DWORD PTR [ecx+ebp*8-0x36ddab72],1
  40c986:	test   eax,0x94e2ec8b
  40c98b:	adc    DWORD PTR [bp+si],0x76
  40c98f:	jae    0x40c99e
  40c991:	dec    esi
  40c992:	jle    0x40ca10
  40c994:	or     DWORD PTR [ebp-0x39],esi
  40c997:	repz je 0x40c936
  40c99a:	push   cs
  40c99b:	xchg   edx,eax
  40c99c:	add    eax,0xa790b0ec
  40c9a1:	jo     0x40c98f
  40c9a3:	(bad)  
  40c9a4:	fist   DWORD PTR [ebp+0x3818b16d]
  40c9aa:	jnp    0x40ca13
  40c9ac:	mov    dh,0x3c
  40c9ae:	mov    ebp,0x40f7236b
  40c9b3:	cmc    
  40c9b4:	mov    DWORD PTR [edi+0x3a],0x73c74257
  40c9bb:	test   BYTE PTR [ebp-0x20bb8956],bl
  40c9c1:	out    dx,al
  40c9c2:	mov    al,ds:0x7541e381
  40c9c7:	(bad)  
  40c9c8:	push   ss
  40c9c9:	mov    ch,0x70
  40c9cb:	cmc    
  40c9cc:	and    edx,DWORD PTR [ecx-0x24]
  40c9cf:	loop   0x40c9eb
  40c9d1:	(bad)  
  40c9d2:	stos   DWORD PTR es:[edi],eax
  40c9d3:	dec    edi
  40c9d4:	out    0x5b,al
  40c9d6:	xchg   edx,eax
  40c9d7:	jnp    0x40c96a
  40c9d9:	test   eax,0xc491c2f0
  40c9de:	jge    0x40c9fa
  40c9e0:	pop    eax
  40c9e1:	pop    ds
  40c9e2:	cld    
  40c9e3:	dec    ebp
  40c9e4:	retf   0x93a0
  40c9e7:	int    0x41
  40c9e9:	push   esp
  40c9ea:	pop    esp
  40c9eb:	and    DWORD PTR [ecx],esp
  40c9ed:	js     0x40ca2b
  40c9ef:	jo     0x40c9a2
  40c9f1:	mov    dl,0xc8
  40c9f3:	jl     0x40c986
  40c9f5:	clc    
  40c9f6:	lds    ebx,FWORD PTR [eax]
  40c9f8:	test   al,0x51
  40c9fa:	out    dx,al
  40c9fb:	add    al,0xd
  40c9fd:	out    0x80,eax
  40c9ff:	cmc    
  40ca00:	call   0xaed9cfdf
  40ca05:	push   esi
  40ca06:	sar    BYTE PTR [esi+0x23974229],cl
  40ca0c:	xor    ah,BYTE PTR [eax+0x754f9cc4]
  40ca12:	sahf   
  40ca13:	clc    
  40ca14:	adc    BYTE PTR [edi],cl
  40ca16:	in     eax,dx
  40ca17:	inc    esi
  40ca18:	push   ecx
  40ca19:	hlt    
  40ca1a:	jns    0x40c9cd
  40ca1c:	fwait
  40ca1d:	jnp    0x40c9b5
  40ca1f:	and    al,0x31
  40ca21:	loopne 0x40ca4f
  40ca23:	popf   
  40ca24:	cwde   
  40ca25:	ret    0x8c9a
  40ca28:	scas   eax,DWORD PTR es:[edi]
  40ca29:	add    al,0xe
  40ca2b:	adc    esi,DWORD PTR [ebp-0x75]
  40ca2e:	add    eax,0x30ed7e70
  40ca33:	fs jae 0x40caa6
  40ca36:	sbb    ebx,DWORD PTR [ecx-0x52]
  40ca39:	xlat   BYTE PTR ds:[ebx]
  40ca3a:	retf   
  40ca3b:	or     ah,bl
  40ca3d:	pusha  
  40ca3e:	addr16 std 
  40ca40:	sbb    eax,0xbb485b7f
  40ca45:	fs mov esp,0xf8cbc7e6
  40ca4b:	pop    ecx
  40ca4c:	and    al,0xa3
  40ca4e:	xchg   esi,eax
  40ca4f:	aaa    
  40ca50:	outs   dx,BYTE PTR ds:[esi]
  40ca51:	rcr    edx,cl
  40ca53:	add    edx,DWORD PTR [eax]
  40ca55:	or     eax,0xce660d9c
  40ca5a:	enter  0x24a1,0xf0
  40ca5e:	enter  0x755,0x82
  40ca62:	xor    DWORD PTR [ecx+0x27],edi
  40ca65:	js     0x40c9f8
  40ca67:	pop    ds
  40ca68:	mov    DWORD PTR [edx-0xa3b1154],esi
  40ca6e:	mov    bh,0xe6
  40ca70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca71:	std    
  40ca72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca73:	outs   dx,DWORD PTR ds:[esi]
  40ca74:	and    ebp,DWORD PTR [ecx]
  40ca76:	sar    DWORD PTR [edi+0xfff1223],1
  40ca7c:	mov    bh,0x4f
  40ca7e:	ja     0x40cae3
  40ca80:	mov    cl,0x19
  40ca82:	(bad)  
  40ca83:	clc    
  40ca84:	mov    dh,0xb6
  40ca86:	pop    edi
  40ca87:	jne    0x40caee
  40ca89:	jg     0x40caee
  40ca8b:	in     eax,dx
  40ca8c:	(bad)
  40ca8f:	and    BYTE PTR [ecx+ebx*8+0x12312b4a],bh
  40ca96:	imul   BYTE PTR [esi]
  40ca98:	dec    ecx
  40ca99:	xor    esp,ebp
  40ca9b:	(bad)  
  40ca9c:	iret   
  40ca9d:	das    
  40ca9e:	inc    eax
  40ca9f:	ss popf 
  40caa1:	je     0x40caed
  40caa3:	loope  0x40cad3
  40caa5:	dec    ebx
  40caa6:	fidivr DWORD PTR [ecx-0x7b16e633]
  40caac:	cmc    
  40caad:	into   
  40caae:	push   ds
  40caaf:	leave  
  40cab0:	xchg   DWORD PTR [ecx+0x2441825],ebp
  40cab6:	jge    0x40ca49
  40cab8:	pop    ebx
  40cab9:	dec    ecx
  40caba:	and    bl,dl
  40cabc:	and    eax,0x9f5d4ce2
  40cac1:	lds    esi,FWORD PTR [ebx-0x5f]
  40cac4:	les    ebx,FWORD PTR [esi+0x6367bf64]
  40caca:	jns    0x40caed
  40cacc:	ins    DWORD PTR es:[edi],dx
  40cacd:	push   ebx
  40cace:	(bad)  
  40cacf:	loope  0x40cab0
  40cad1:	dec    eax
  40cad2:	sbb    ecx,DWORD PTR [eax+0x3bf703e7]
  40cad8:	jge    0x40cb2e
  40cada:	jbe    0x40cb0a
  40cadc:	xchg   DWORD PTR [eax-0x6f],eax
  40cadf:	xor    BYTE PTR [esi-0x1b],cl
  40cae2:	popf   
  40cae3:	call   0x210e3502
  40cae8:	or     ch,BYTE PTR [ecx]
  40caea:	icebp  
  40caeb:	add    al,0xe8
  40caed:	imul   esp,DWORD PTR [edx+ebx*1+0x3a8a43e3],0xdc070d1f
  40caf8:	cmp    al,BYTE PTR [eax+0x4b052e50]
  40cafe:	cs in  al,dx
  40cb00:	xor    esp,DWORD PTR [edi-0x4d59195f]
  40cb06:	sti    
  40cb07:	hlt    
  40cb08:	aad    0x46
  40cb0a:	fild   DWORD PTR [esi-0x40cf82c0]
  40cb10:	cmp    al,0x9b
  40cb13:	sub    ebp,DWORD PTR [esi+0x7bdef6d7]
  40cb19:	fs icebp 
  40cb1b:	stos   BYTE PTR es:[edi],al
  40cb1c:	(bad)  
  40cb1d:	mov    al,0xb1
  40cb1f:	add    dh,BYTE PTR [ebx-0x74]
  40cb22:	scas   eax,DWORD PTR es:[edi]
  40cb23:	cs jne 0x40cae6
  40cb26:	push   ebp
  40cb27:	leave  
  40cb28:	fstp   QWORD PTR [edi+eiz*2-0x80]
  40cb2c:	loop   0x40cba1
  40cb2e:	(bad)  [ecx]
  40cb30:	jae    0x40cad1
  40cb32:	dec    edx
  40cb33:	imul   esp,DWORD PTR [ebx+0x2c1e836c],0x9d5ac9af
  40cb3d:	fdivr  DWORD PTR [edi+ecx*4+0x60]
  40cb41:	hlt    
  40cb42:	push   edi
  40cb43:	and    eax,DWORD PTR [ecx]
  40cb45:	add    edi,DWORD PTR [ebx+0x3e]
  40cb48:	pop    esi
  40cb49:	fnsave [ecx+0x74ccd93b]
  40cb4f:	pop    es
  40cb50:	ss xchg ebp,eax
  40cb52:	fadd   QWORD PTR [ebp+0x7bae7c81]
  40cb58:	pop    ss
  40cb59:	fwait
  40cb5a:	nop
  40cb5b:	test   al,0x8f
  40cb5d:	sub    DWORD PTR [edi+0x3eff95d9],esp
  40cb63:	out    0x5d,al
  40cb65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb66:	sbb    DWORD PTR [esi],edi
  40cb68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb69:	out    0x81,al
  40cb6b:	inc    al
  40cb6d:	cmp    al,BYTE PTR [esi+eax*2-0x368c9370]
  40cb74:	outs   dx,BYTE PTR ds:[esi]
  40cb75:	leave  
  40cb76:	enter  0x5301,0x7
  40cb7a:	xor    al,BYTE PTR [edi-0x31]
  40cb7d:	jl     0x40cb4c
  40cb7f:	add    eax,0xb1db8ce8
  40cb84:	data16 mov al,0xe5
  40cb87:	ds xchg esp,eax
  40cb89:	les    esi,FWORD PTR [ebx-0x2f]
  40cb8c:	in     eax,0x87
  40cb8e:	nop
  40cb8f:	aam    0xc1
  40cb91:	sbb    eax,0x5a531ff1
  40cb96:	push   0xffffffe6
  40cb98:	sbb    eax,0x1b81ac97
  40cb9d:	sub    al,0xae
  40cba0:	hlt    
  40cba1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40cba3:	xchg   BYTE PTR [ebp-0x2d],ch
  40cba6:	ja     0x40cb2e
  40cba8:	jo     0x40cbb6
  40cbaa:	gs push esp
  40cbac:	test   eax,0xdbb2f880
  40cbb1:	dec    eax
  40cbb2:	adc    bh,BYTE PTR [ebx+0x725f880a]
  40cbb8:	inc    ebp
  40cbb9:	jne    0x40cc31
  40cbbb:	pop    edx
  40cbbc:	or     al,0xf9
  40cbbe:	imul   cl
  40cbc0:	mov    dl,BYTE PTR [esi-0x702592f1]
  40cbc6:	xchg   ebp,eax
  40cbc7:	mov    bl,0x2b
  40cbc9:	mov    dl,bh
  40cbcb:	pop    ebp
  40cbcc:	jbe    0x40cb55
  40cbce:	pop    esi
  40cbcf:	inc    esp
  40cbd0:	adc    al,0x9b
  40cbd2:	bound  edi,QWORD PTR [edx+0x3d]
  40cbd5:	xor    eax,0xf82ae9e5
  40cbda:	out    dx,eax
  40cbdb:	push   cs
  40cbdc:	jmp    0x40cc2e
  40cbde:	mov    edx,0x5d0ec527
  40cbe3:	test   DWORD PTR [edi+0x7cbcf5b5],ebp
  40cbe9:	sbb    BYTE PTR [edx-0x5cd7372],bh
  40cbef:	push   0x24fe6ee5
  40cbf4:	cwde   
  40cbf5:	or     DWORD PTR [edi+0x74],0x23
  40cbf9:	bnd ret 0x88d6
  40cbfd:	mov    eax,ds:0x14de0a01
  40cc02:	ss fxch st(4)
  40cc05:	je     0x40cbfe
  40cc07:	jg     0x40cbd2
  40cc09:	outs   dx,DWORD PTR ds:[esi]
  40cc0a:	or     ebp,DWORD PTR [ecx-0x6b26cb3e]
  40cc10:	add    ebx,DWORD PTR [edi+0x35]
  40cc13:	jp     0x40cbbe
  40cc15:	sub    edi,esp
  40cc17:	pop    edi
  40cc18:	pop    ebp
  40cc19:	xor    bh,ah
  40cc1b:	sahf   
  40cc1c:	mov    eax,ds:0x150abef5
  40cc21:	frstor [ebp-0x1e81d422]
  40cc27:	inc    esi
  40cc28:	ror    ch,1
  40cc2a:	dec    ecx
  40cc2b:	scas   eax,DWORD PTR es:[edi]
  40cc2c:	pushf  
  40cc2d:	and    BYTE PTR [ecx-0x39],cl
  40cc30:	repnz xchg edi,eax
  40cc32:	in     eax,dx
  40cc33:	dec    eax
  40cc34:	icebp  
  40cc35:	add    DWORD PTR [edi+0x11c24b16],esp
  40cc3b:	add    edi,DWORD PTR [eax]
  40cc3d:	ror    BYTE PTR [eax+0x43],cl
  40cc40:	cmp    esp,DWORD PTR [edx-0x3ebc60e6]
  40cc46:	pop    esp
  40cc47:	mov    dh,0xd1
  40cc49:	ret    0x6356
  40cc4c:	push   cs
  40cc4d:	push   ebp
  40cc4e:	out    0xb,eax
  40cc50:	cmovp  edx,DWORD PTR [ebp+0x51]
  40cc54:	pop    esp
  40cc55:	fwait
  40cc56:	mov    dl,0x46
  40cc58:	inc    ebp
  40cc59:	mov    ah,BYTE PTR [edi-0x73]
  40cc5c:	in     al,dx
  40cc5d:	test   BYTE PTR [eax+0x7a1515e4],0xf6
  40cc64:	inc    DWORD PTR [ecx]
  40cc66:	fwait
  40cc67:	dec    ebx
  40cc68:	ins    BYTE PTR es:[edi],dx
  40cc69:	sahf   
  40cc6a:	les    esp,FWORD PTR [eax]
  40cc6c:	les    ebp,FWORD PTR [ebx+0x65]
  40cc6f:	in     al,dx
  40cc70:	jg     0x40cc99
  40cc72:	mov    ds:0x474cbbb3,al
  40cc77:	ret    0x97a1
  40cc7a:	dec    edi
  40cc7b:	std    
  40cc7c:	sbb    DWORD PTR [edi],ebp
  40cc7e:	push   0x11
  40cc80:	retf   
  40cc81:	cmc    
  40cc82:	sti    
  40cc83:	scas   al,BYTE PTR es:[edi]
  40cc84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc85:	cdq    
  40cc86:	cdq    
  40cc87:	inc    ebp
  40cc88:	mov    ebx,0xfbb6ee99
  40cc8d:	adc    al,0x52
  40cc8f:	ins    BYTE PTR es:[edi],dx
  40cc90:	xor    cl,bh
  40cc92:	mov    cl,0x26
  40cc94:	push   ecx
  40cc95:	dec    edx
  40cc96:	out    dx,eax
  40cc97:	mov    bl,0x35
  40cc99:	and    DWORD PTR [esp+eax*4-0x56],0x1a
  40cc9e:	jmp    0x9a31:0xc2a84d8b
  40cca5:	pop    edx
  40cca6:	fsubr  DWORD PTR [bp+di]
  40cca9:	aad    0x14
  40ccab:	pop    ds
  40ccac:	pop    ebp
  40ccad:	shl    DWORD PTR [edx+0x2a49dae0],1
  40ccb3:	push   cs
  40ccb4:	in     al,0x9d
  40ccb6:	jno    0x40cd30
  40ccb8:	mov    edx,0xfc3d8eea
  40ccbd:	outs   dx,DWORD PTR ds:[esi]
  40ccbe:	inc    esi
  40ccbf:	mov    dl,0x22
  40ccc1:	inc    edi
  40ccc2:	js     0x40cd1d
  40ccc4:	out    dx,al
  40ccc5:	js     0x40cd1f
  40ccc7:	push   ds
  40ccc8:	call   0xbb73:0x7a831f0d
  40cccf:	or     ch,BYTE PTR [esi]
  40ccd1:	fwait
  40ccd2:	xchg   esi,eax
  40ccd3:	cmp    edi,ecx
  40ccd5:	shl    BYTE PTR [ebp-0x57b2c881],cl
  40ccdb:	not    DWORD PTR [edx+edi*1]
  40ccde:	and    ecx,0xb55d2189
  40cce4:	int    0x87
  40cce6:	lahf   
  40cce7:	xor    edx,DWORD PTR [ecx+eiz*2+0x2784c30c]
  40ccee:	mov    bh,0x6d
  40ccf0:	or     ebp,DWORD PTR [edx+ebx*8]
  40ccf3:	add    eax,0x5ad46cd3
  40ccf8:	sti    
  40ccf9:	fdivr  QWORD PTR [si+0x11]
  40ccfd:	adc    DWORD PTR [ebx-0x61],ebx
  40cd00:	inc    esi
  40cd01:	loopne 0x40ccf9
  40cd03:	or     BYTE PTR ds:0x8ac59d75,0xdb
  40cd0a:	enter  0x47a6,0x82
  40cd0e:	push   ebx
  40cd0f:	jp     0x40cd7e
  40cd11:	jp     0x40cd42
  40cd13:	call   0xb35671f4
  40cd18:	dec    ecx
  40cd19:	xchg   edi,eax
  40cd1a:	pop    edx
  40cd1b:	(bad)  
  40cd1c:	out    0x4d,eax
  40cd1e:	cmp    edi,edx
  40cd20:	loop   0x40cd70
  40cd22:	and    bl,BYTE PTR [ebp-0x2ce6b40b]
  40cd28:	(bad)  
  40cd29:	xchg   ebp,eax
  40cd2a:	push   ebx
  40cd2b:	pop    ss
  40cd2c:	adc    al,0xba
  40cd2e:	outs   dx,BYTE PTR ds:[esi]
  40cd2f:	pop    esp
  40cd30:	mov    ebx,0x838dc37d
  40cd35:	mov    esi,0x276bcbdf
  40cd3a:	and    ah,BYTE PTR [eax+0x32]
  40cd3d:	retf   0x289c
  40cd40:	lds    ebx,FWORD PTR [edi+edx*4+0x43228fbf]
  40cd47:	rol    edi,cl
  40cd49:	or     al,0x38
  40cd4b:	mov    dl,0x4e
  40cd4d:	jl     0x40cd55
  40cd4f:	mov    edx,0x9c4b12ea
  40cd54:	pop    DWORD PTR [esi-0x7f]
  40cd57:	adc    eax,0xd07a1844
  40cd5d:	(bad)  
  40cd5f:	add    al,0xc7
  40cd61:	(bad)  
  40cd62:	fist   DWORD PTR [eax]
  40cd64:	sbb    dl,ch
  40cd66:	cmp    al,0x94
  40cd68:	aas    
  40cd69:	clc    
  40cd6a:	leave  
  40cd6b:	mov    al,0x66
  40cd6d:	mov    al,0x5c
  40cd6f:	cmc    
  40cd70:	mov    gs,WORD PTR [ecx+0x7bf461f9]
  40cd76:	fcom   st(4)
  40cd78:	lds    edi,FWORD PTR [edx]
  40cd7a:	sub    al,0xaf
  40cd7c:	mov    al,ds:0x2d6e2329
  40cd81:	fnstenv ds:0xfd29db36
  40cd87:	mov    esi,es
  40cd89:	call   0x289afe7f
  40cd8e:	out    0xe6,al
  40cd90:	and    ch,BYTE PTR [bx-0x58]
  40cd94:	push   ds
  40cd95:	cld    
  40cd96:	sub    al,0x8f
  40cd98:	push   0x1215d07b
  40cd9d:	(bad)  
  40cd9e:	cmc    
  40cd9f:	lock cwde 
  40cda1:	stos   BYTE PTR es:[edi],al
  40cda2:	fmul   st(1),st
  40cda4:	pop    es
  40cda5:	lods   eax,DWORD PTR ds:[esi]
  40cda6:	loopne 0x40cd56
  40cda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cda9:	xor    BYTE PTR [edi+ebp*4+0x4d],dh
  40cdad:	fdivr  QWORD PTR [edi+0x351316e6]
  40cdb3:	mov    ecx,0xff065835
  40cdb8:	push   ds
  40cdb9:	cs out 0xdb,al
  40cdbc:	fwait
  40cdbd:	outs   dx,BYTE PTR ds:[esi]
  40cdbe:	push   0x34534345
  40cdc3:	xor    ch,BYTE PTR [ebp-0x7473f05a]
  40cdc9:	outs   dx,DWORD PTR ds:[esi]
  40cdca:	sub    al,0xa
  40cdcc:	stc    
  40cdcd:	jb     0x40cdbb
  40cdcf:	jno    0x40cdf6
  40cdd1:	or     ah,BYTE PTR [eax-0xb]
  40cdd4:	cmp    al,0xa
  40cdd6:	push   0x2804361a
  40cddb:	dec    esp
  40cddc:	(bad)  
  40cddd:	inc    edi
  40cdde:	or     dl,BYTE PTR [eax+0x43]
  40cde1:	sub    DWORD PTR es:[edx],edi
  40cde4:	loop   0x40cdf2
  40cde6:	call   0x589f:0x32ced617
  40cded:	dec    ecx
  40cdee:	mov    eax,0xa53bc4a6
  40cdf3:	sbb    al,0x28
  40cdf5:	loopne 0x40cda4
  40cdf7:	in     eax,dx
  40cdf8:	add    bh,0x82
  40cdfb:	(bad)  
  40cdfc:	and    BYTE PTR [edi-0x7],al
  40cdff:	adc    BYTE PTR [edx],dh
  40ce01:	les    ebp,FWORD PTR [eax-0x44]
  40ce04:	jmp    0x5de4d53e
  40ce09:	add    eax,0xe6da175b
  40ce0e:	aaa    
  40ce0f:	imul   edi,edx,0xfdc803b4
  40ce15:	imul   esi,DWORD PTR [eax+0x2f1704a6],0xc525a13f
  40ce1f:	jp     0x40ce8e
  40ce21:	adc    DWORD PTR [edi-0x49b47209],0x3c
  40ce28:	nop
  40ce29:	xor    bl,BYTE PTR [ebx]
  40ce2b:	xchg   esi,eax
  40ce2c:	je     0x40ce7a
  40ce2e:	add    eax,0x5fc2d066
  40ce33:	push   ecx
  40ce34:	lahf   
  40ce35:	aaa    
  40ce36:	repz test eax,0xf7211391
  40ce3c:	neg    DWORD PTR [ecx+eax*1]
  40ce3f:	mov    ecx,0x610d6175
  40ce44:	xchg   DWORD PTR [esi-0x59963bf9],esp
  40ce4a:	mov    edi,DWORD PTR [esi]
  40ce4c:	sub    dl,BYTE PTR [esi]
  40ce4e:	xor    DWORD PTR [edx+0x5222d60d],eax
  40ce54:	or     BYTE PTR [edx-0x4a],dl
  40ce57:	jno    0x40ce62
  40ce59:	pop    ecx
  40ce5a:	dec    ecx
  40ce5b:	xor    al,0xa
  40ce5d:	out    0x7,eax
  40ce5f:	mul    dl
  40ce61:	lock fucomip st,st(5)
  40ce64:	invd   
  40ce66:	xor    bl,dh
  40ce68:	lods   eax,DWORD PTR ds:[esi]
  40ce69:	lea    eax,[edi+eiz*4+0x2a33b376]
  40ce70:	jmp    0xe8f6:0xe3dc23a
  40ce77:	pusha  
  40ce78:	push   DWORD PTR [edx+0x6e9e4085]
  40ce7e:	dec    edi
  40ce7f:	xchg   edx,eax
  40ce80:	in     al,0xa1
  40ce82:	inc    eax
  40ce83:	xor    ebx,DWORD PTR [ecx+ebp*2-0x16e85413]
  40ce8a:	rsqrtps xmm5,xmm3
  40ce8d:	push   0x1
  40ce8f:	pop    eax
  40ce90:	dec    ecx
  40ce91:	das    
  40ce92:	jbe    0x40ce6c
  40ce94:	mov    ch,0xdd
  40ce96:	fisttp DWORD PTR [eax-0x29]
  40ce99:	sbb    BYTE PTR [edx],0xf3
  40ce9c:	dec    edi
  40ce9d:	les    edx,FWORD PTR [ebp+0x276fa297]
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	jbe    0x40ce5a
  40cea6:	pop    ebp
  40cea7:	jg     0x40ceab
  40cea9:	and    BYTE PTR [eax+ebp*2+0x72],ch
  40cead:	adc    eax,0xf22667f1
  40ceb2:	sbb    dh,BYTE PTR [esp+edi*8]
  40ceb5:	or     eax,0x3f23184a
  40ceba:	xchg   ecx,eax
  40cebb:	cli    
  40cebc:	xor    eax,0xa9e0203a
  40cec1:	xchg   DWORD PTR [eax-0xfd5adc8],ecx
  40cec7:	and    dl,BYTE PTR [edx]
  40cec9:	daa    
  40ceca:	xor    al,0x58
  40cecc:	mov    ds:0xfce82bb6,eax
  40ced1:	leave  
  40ced2:	fcomp  QWORD PTR [edi]
  40ced4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ced5:	aaa    
  40ced6:	test   DWORD PTR [edx],0xaca0bcbc
  40cedc:	data16 and BYTE PTR [esi],ch
  40cedf:	sbb    BYTE PTR [edx],ch
  40cee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cee2:	jns    0x134c177
  40cee8:	outs   dx,DWORD PTR ds:[esi]
  40cee9:	xchg   edi,eax
  40ceea:	popf   
  40ceeb:	scas   eax,DWORD PTR es:[edi]
  40ceec:	mov    bl,BYTE PTR [edx]
  40ceee:	and    dh,BYTE PTR ds:0xb72e867c
  40cef4:	jg     0x40cead
  40cef6:	mov    bh,BYTE PTR [ebp-0x7f1f28c5]
  40cefc:	jne    0x40ceea
  40cefe:	ror    BYTE PTR ds:0xdc04099a,0x3c
  40cf05:	cs or  al,0xa2
  40cf08:	das    
  40cf09:	fbld   TBYTE PTR [edx+0x5adf3b87]
  40cf0f:	scas   eax,DWORD PTR es:[edi]
  40cf10:	pop    edi
  40cf11:	dec    ebp
  40cf12:	jl     0x40cf4f
  40cf14:	xchg   edi,ecx
  40cf16:	mov    eax,0xbba09fe
  40cf1b:	fisub  DWORD PTR [ebx+0x78]
  40cf1e:	hlt    
  40cf1f:	xor    ch,dl
  40cf21:	push   ebx
  40cf22:	cmp    BYTE PTR [edx+0x148a2636],al
  40cf28:	daa    
  40cf29:	lds    esi,FWORD PTR [esi-0x5c]
  40cf2c:	enter  0xb5c2,0xde
  40cf30:	xor    eax,0xc477ba55
  40cf35:	popf   
  40cf36:	sbb    ecx,DWORD PTR [ebx+0x1b95f029]
  40cf3c:	jae    0x40cfad
  40cf3e:	xor    al,0x35
  40cf40:	leave  
  40cf41:	clc    
  40cf42:	repz sbb cl,dh
  40cf45:	ins    DWORD PTR es:[edi],dx
  40cf46:	outs   dx,DWORD PTR ds:[esi]
  40cf47:	popf   
  40cf48:	sub    al,0xa7
  40cf4a:	test   DWORD PTR [ebx+0x62],edx
  40cf4d:	add    BYTE PTR [esi],0xd3
  40cf50:	pop    esp
  40cf51:	xchg   esp,eax
  40cf52:	pop    es
  40cf53:	xchg   esi,eax
  40cf54:	xchg   esp,eax
  40cf55:	out    dx,eax
  40cf56:	mov    eax,ds:0xcc313501
  40cf5b:	out    dx,eax
  40cf5c:	(bad)  [ecx+0x2e]
  40cf5f:	mov    bh,0x77
  40cf61:	mov    esp,0xad50b2b3
  40cf66:	dec    BYTE PTR [ebx]
  40cf68:	pop    ebx
  40cf69:	adc    DWORD PTR gs:[esi+0xe],ecx
  40cf6d:	sub    bh,BYTE PTR [edx-0x55]
  40cf70:	inc    esp
  40cf71:	(bad)  
  40cf72:	jmp    0x12cf:0x464f665f
  40cf79:	xlat   BYTE PTR ds:[ebx]
  40cf7a:	add    BYTE PTR [ebx+0x5d64f229],dl
  40cf80:	mov    cs,WORD PTR [edi-0x3f1dae65]
  40cf86:	leave  
  40cf87:	leave  
  40cf88:	mov    bh,0xf2
  40cf8a:	pop    edx
  40cf8b:	fcom   QWORD PTR [edx+0x3a]
  40cf8e:	sbb    al,0xc9
  40cf90:	pushf  
  40cf91:	(bad)  
  40cf92:	gs movs DWORD PTR es:[edi],DWORD PTR es:[esi]
  40cf95:	xchg   DWORD PTR [eax],edx
  40cf97:	fistp  WORD PTR [edx+0x53]
  40cf9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf9b:	dec    eax
  40cf9c:	shr    BYTE PTR [ecx],0x78
  40cf9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa0:	dec    esi
  40cfa1:	mov    bh,0xf4
  40cfa3:	stos   BYTE PTR es:[edi],al
  40cfa4:	dec    edi
  40cfa5:	or     ch,dl
  40cfa7:	jmp    0x40cf5d
  40cfa9:	clc    
  40cfaa:	lock int3 
  40cfac:	ror    DWORD PTR [edx-0x5f],cl
  40cfaf:	or     DWORD PTR [edi+0x60e4e80b],edx
  40cfb5:	fcomp  QWORD PTR [edx]
  40cfb7:	mov    al,ds:0x47ae4740
  40cfbc:	sahf   
  40cfbd:	sub    eax,0xcac2451a
  40cfc2:	adc    al,0x27
  40cfc4:	mov    ebp,0xa0e51552
  40cfc9:	test   al,0x2f
  40cfcb:	xor    bl,bl
  40cfcd:	cmp    eax,DWORD PTR [edi-0x369fdc1b]
  40cfd3:	cli    
  40cfd4:	ret    0x46b8
  40cfd7:	pushf  
  40cfd8:	ins    BYTE PTR es:[edi],dx
  40cfd9:	adc    BYTE PTR [esi-0xdd5a6e],dh
  40cfdf:	jae    0x40d05e
  40cfe1:	cmp    eax,0xd841cb4
  40cfe6:	fmul   DWORD PTR [eax+0x3610cca7]
  40cfec:	sub    ebx,DWORD PTR [eax+0x1e]
  40cfef:	call   0xf7037913
  40cff4:	inc    eax
  40cff5:	lods   al,BYTE PTR ds:[esi]
  40cff6:	cmp    DWORD PTR [eax+0x71682027],0xffffffb4
  40cffd:	gs sub al,0x64
  40d000:	and    bl,BYTE PTR [eax-0x9]
  40d003:	push   ecx
  40d004:	fwait
  40d005:	addr16 in eax,0xdd
  40d008:	shl    BYTE PTR [ecx-0x1a],0xfb
  40d00c:	in     al,0x1a
  40d00e:	outs   dx,BYTE PTR ds:[esi]
  40d00f:	aaa    
  40d010:	es leave 
  40d012:	mov    ecx,0x960e1f31
  40d017:	ins    BYTE PTR es:[edi],dx
  40d018:	jae    0x40d07d
  40d01a:	test   BYTE PTR [ecx+0xe],cl
  40d01d:	mov    ds:0x9a4767fa,eax
  40d022:	or     DWORD PTR [ebx+0x19],esp
  40d025:	cmp    BYTE PTR [eax],ah
  40d027:	ins    DWORD PTR es:[edi],dx
  40d028:	retf   0x4ce3
  40d02b:	dec    esi
  40d02c:	ret    
  40d02d:	test   eax,ebx
  40d02f:	pop    ds
  40d030:	(bad)  
  40d031:	div    BYTE PTR [eax-0x744bc6c7]
  40d037:	aam    0x8f
  40d039:	(bad)  
  40d03a:	cmp    cl,bl
  40d03c:	ror    DWORD PTR [ebx],cl
  40d03e:	popa   
  40d03f:	mov    al,cl
  40d041:	or     al,BYTE PTR [ebx+0x336b7850]
  40d047:	pop    esp
  40d048:	idiv   DWORD PTR [esi]
  40d04a:	jbe    0x40d082
  40d04c:	fstp   TBYTE PTR [edi]
  40d04e:	aas    
  40d04f:	mov    ds:0xdfc4d0d6,al
  40d054:	data16 fidivr DWORD PTR ds:0xab55540f
  40d05b:	jmp    0x790e88a2
  40d060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d061:	sbb    ecx,ebp
  40d063:	inc    ecx
  40d064:	jp     0x40cff9
  40d066:	outs   dx,DWORD PTR ds:[si]
  40d068:	shr    BYTE PTR [ecx+0x66],0x9a
  40d06c:	shl    DWORD PTR [eax-0x29],cl
  40d06f:	mov    esi,0x144f63ac
  40d074:	in     eax,0x81
  40d076:	(bad)  
  40d077:	fst    st(0)
  40d079:	popa   
  40d07a:	cmp    eax,0x8cb5cb04
  40d07f:	push   ebp
  40d080:	adc    eax,0xa8fd91d5
  40d085:	shr    BYTE PTR [edi+eax*4+0x6d],0x79
  40d08a:	sub    DWORD PTR [eax-0x12a1d69b],edx
  40d090:	rcl    DWORD PTR [ecx-0x78],cl
  40d093:	cs pushf 
  40d095:	mov    ebx,DWORD PTR [edx+0x13fe5a39]
  40d09b:	inc    ebp
  40d09c:	mov    ds:0x1c987bde,eax
  40d0a1:	sub    esi,DWORD PTR [ecx+0x61]
  40d0a4:	inc    eax
  40d0a5:	mov    ds:0xfab3fdd0,al
  40d0aa:	sub    ecx,DWORD PTR [ecx-0x2b]
  40d0ad:	jmp    0x40d112
  40d0af:	sbb    BYTE PTR [ebx-0x3a],dl
  40d0b2:	mov    DWORD PTR [edi+0x13c55d8c],ebp
  40d0b8:	or     dh,BYTE PTR [ebp+0x3ebb8ba8]
  40d0be:	pusha  
  40d0bf:	retf   
  40d0c0:	stos   BYTE PTR es:[edi],al
  40d0c1:	dec    ecx
  40d0c2:	jae    0x40d0f7
  40d0c4:	retf   
  40d0c5:	test   al,0x43
  40d0c7:	jge    0x40d0f1
  40d0c9:	inc    edi
  40d0ca:	pop    ss
  40d0cb:	pop    ds
  40d0cc:	sub    DWORD PTR [ebp+0x3a55c62b],0xfe3c8f90
  40d0d6:	stc    
  40d0d7:	ret    0x8e4c
  40d0da:	leave  
  40d0db:	nop
  40d0dc:	jg     0x40d08c
  40d0de:	hlt    
  40d0df:	push   eax
  40d0e0:	(bad)  
  40d0e1:	retf   0x69f9
  40d0e4:	mov    esp,0xf3a73a60
  40d0e9:	sub    al,0x6d
  40d0eb:	ret    0x4a4
  40d0ee:	arpl   WORD PTR [ecx],cx
  40d0f0:	icebp  
  40d0f1:	adc    cl,dl
  40d0f3:	jmp    0x7930c762
  40d0f8:	(bad)  
  40d0f9:	mov    al,0x30
  40d0fb:	adc    eax,0xcfdd9385
  40d100:	out    0x35,eax
  40d102:	push   ss
  40d103:	add    eax,0x9ad2f99a
  40d108:	out    0x92,al
  40d10a:	(bad)  
  40d10b:	int3   
  40d10c:	jmp    0x510b:0xc18f2e7
  40d113:	mov    eax,ds:0x41f53863
  40d118:	mov    cl,0x9
  40d11a:	loope  0x40d17e
  40d11c:	sub    dl,BYTE PTR [esi]
  40d11e:	lods   al,BYTE PTR ds:[esi]
  40d11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d121:	and    DWORD PTR [eax-0x16f8c256],esp
  40d127:	daa    
  40d128:	xor    DWORD PTR [ebx],esp
  40d12a:	es js  0x40d0ee
  40d12d:	ds push ebp
  40d12f:	adc    DWORD PTR ds:0xb2cac4dd,edi
  40d135:	fwait
  40d136:	add    dh,BYTE PTR [esp+ecx*8+0x12477660]
  40d13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d13e:	loope  0x40d107
  40d140:	jne    0x40d17c
  40d142:	fisubr DWORD PTR ds:0x9f4f403
  40d148:	and    cl,BYTE PTR [ebx-0x7c]
  40d14b:	cmp    al,0xc0
  40d14d:	repz push ebx
  40d14f:	(bad)  
  40d150:	xor    DWORD PTR [ebx-0x66],esi
  40d153:	inc    edi
  40d154:	or     BYTE PTR [ecx-0x38],ch
  40d157:	loope  0x40d15f
  40d159:	or     BYTE PTR [eax-0x6eca37da],dl
  40d15f:	ja     0x40d111
  40d161:	cmp    BYTE PTR [eax],dl
  40d163:	aad    0xcf
  40d165:	push   ds
  40d166:	aaa    
  40d167:	inc    esi
  40d168:	adc    eax,0x78c508db
  40d16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16e:	adc    eax,0xb80a6a51
  40d173:	(bad)  
  40d174:	mov    ds:0x85a4bbf6,al
  40d179:	jl     0x40d156
  40d17b:	xor    al,0x19
  40d17d:	lea    eax,[eax]
  40d17f:	push   ebx
  40d180:	add    BYTE PTR [edx+edi*8],al
  40d183:	push   ss
  40d184:	dec    edi
  40d185:	mov    fs,WORD PTR [edi]
  40d187:	push   cs
  40d188:	mov    BYTE PTR [ebp*4+0x3e5fe9b9],bh
  40d18f:	push   ebp
  40d190:	punpckldq mm3,DWORD PTR [ebx]
  40d193:	(bad)  
  40d194:	maskmovq mm4,(bad)
  40d195:	mul    DWORD PTR [eax+0x1a]
  40d198:	repnz cmp eax,0xb2ff8059
  40d19e:	aas    
  40d19f:	imul   eax,DWORD PTR [ebx+0x5a],0x11
  40d1a3:	push   ss
  40d1a4:	mov    ecx,0xd3e2e6fd
  40d1a9:	add    ebx,DWORD PTR ds:0x76b919c2
  40d1af:	ss dec ebx
  40d1b1:	mov    DWORD PTR [ecx],edx
  40d1b3:	bound  edx,QWORD PTR [eax-0x216a163f]
  40d1b9:	fdivr  DWORD PTR [edx+0x39]
  40d1bc:	fisubr WORD PTR gs:[eax-0x55553c7a]
  40d1c3:	ror    esi,cl
  40d1c5:	xchg   ebx,eax
  40d1c6:	adc    DWORD PTR [ebx-0x73],edx
  40d1c9:	into   
  40d1ca:	fmul   QWORD PTR [ecx-0xa617ead]
  40d1d0:	xlat   BYTE PTR ds:[ebx]
  40d1d1:	fsubr  QWORD PTR [edi+0x38]
  40d1d4:	popa   
  40d1d5:	push   ecx
  40d1d6:	popf   
  40d1d7:	xchg   ebx,eax
  40d1d8:	inc    ebx
  40d1d9:	xor    al,0xe8
  40d1db:	and    dh,bl
  40d1dd:	ss shl ch,1
  40d1e0:	call   0xb5b8e70c
  40d1e5:	out    dx,eax
  40d1e6:	ret    
  40d1e7:	pop    ss
  40d1e8:	aad    0x4b
  40d1ea:	mov    esi,0xcb476d78
  40d1ef:	inc    esi
  40d1f0:	lock push es
  40d1f2:	dec    edi
  40d1f3:	xor    bl,bl
  40d1f5:	pop    esp
  40d1f6:	lahf   
  40d1f7:	mov    cl,0x24
  40d1f9:	out    0xcb,al
  40d1fb:	ds mov ah,0x46
  40d1fe:	push   esp
  40d1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d200:	mov    bl,0x59
  40d202:	frstor [ecx-0x3a28f4bd]
  40d208:	repnz xor DWORD PTR [ebp-0x61],edx
  40d20c:	mov    eax,ds:0x34ac529b
  40d211:	es das 
  40d213:	(bad)  
  40d214:	push   es
  40d215:	sti    
  40d216:	shl    BYTE PTR [ebx],1
  40d218:	xchg   esp,eax
  40d219:	ss sub esp,eax
  40d21c:	stc    
  40d21d:	jg     0x40d1f7
  40d21f:	and    DWORD PTR [edi+edi*4],ebp
  40d222:	mov    WORD PTR [ebx-0x67],ds
  40d225:	sub    ecx,DWORD PTR ds:0x5a941595
  40d22b:	into   
  40d22c:	fistp  QWORD PTR [eax]
  40d22e:	jb     0x40d281
  40d230:	add    cl,BYTE PTR [edx+0x39afb440]
  40d236:	pop    eax
  40d237:	cmp    al,0xc0
  40d239:	cmp    eax,edx
  40d23b:	mov    ah,BYTE PTR [edi+eax*1]
  40d23e:	sbb    ecx,DWORD PTR [eax+0x5f]
  40d241:	test   eax,0x4f30f4d5
  40d246:	push   cs
  40d247:	xlat   BYTE PTR ds:[ebx]
  40d248:	jg     0x40d268
  40d24a:	mov    esi,0xb3b1e1b9
  40d24f:	shr    DWORD PTR [ebx+0x25],1
  40d252:	adc    ch,BYTE PTR [ecx-0x11]
  40d255:	rcr    DWORD PTR [edx],0xaf
  40d258:	jmp    0xced34bfc
  40d25d:	inc    ebx
  40d25e:	cmp    BYTE PTR [esi],0xb7
  40d261:	pusha  
  40d262:	sbb    al,0xa3
  40d264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d265:	cli    
  40d266:	mov    al,ds:0xecc57844
  40d26b:	cdq    
  40d26c:	add    eax,edi
  40d26e:	cmp    ecx,eax
  40d270:	je     0x40d2ae
  40d276:	jmp    0x40d29f
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	out    dx,al
  40d2fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2fe:	cmp    ebp,DWORD PTR [ebx-0x7c7c2d6b]
  40d304:	call   0xb8c45665
  40d309:	xor    al,0xab
  40d30b:	iret   
  40d30c:	rcl    edx,cl
  40d30e:	mov    edi,0xe033dd5d
  40d313:	js     0x40d304
  40d315:	sbb    DWORD PTR [edi-0x35beddcc],0xf1ec49fc
  40d31f:	pop    edx
  40d320:	adc    DWORD PTR ds:0xc00b83bc,0xf3b084d8
  40d32a:	sub    al,0x60
  40d32c:	and    BYTE PTR [edx],cl
  40d32e:	cmp    al,0xbe
  40d330:	rcr    BYTE PTR [ecx-0x17],cl
  40d333:	and    ah,BYTE PTR ds:0x3b8e713f
  40d339:	(bad)  
  40d33a:	xchg   ecx,eax
  40d33b:	loopne 0x40d363
  40d33d:	leave  
  40d33e:	(bad)  
  40d33f:	shl    dl,1
  40d341:	or     al,0x8f
  40d343:	pop    esi
  40d344:	cmp    BYTE PTR [eax*4+0x1186c9d0],dl
  40d34b:	std    
  40d34c:	push   eax
  40d34d:	push   eax
  40d34e:	mov    esi,0x805bc15a
  40d353:	(bad)  [edx+ebx*4+0x18d3444a]
  40d35a:	in     al,dx
  40d35b:	sub    BYTE PTR [esi-0x6a],dl
  40d35e:	fwait
  40d35f:	test   al,0xbc
  40d361:	outs   dx,DWORD PTR ds:[esi]
  40d362:	jge    0x40d366
  40d364:	pushf  
  40d365:	out    dx,eax
  40d366:	retf   0x24c5
  40d369:	xor    esi,DWORD PTR [ebx+ecx*1-0x6d3009df]
  40d370:	cmp    edi,ecx
  40d372:	ds mov esi,esp
  40d375:	mov    ah,0x16
  40d377:	cmp    eax,0x5c14dd7e
  40d37c:	inc    esi
  40d37d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d380:	dec    edx
  40d381:	pop    edx
  40d382:	cmp    al,0x8
  40d384:	or     DWORD PTR [edi+0x4c1494c2],0x46b5568b
  40d38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d38f:	mov    eax,0xcb312924
  40d394:	or     al,0xf0
  40d396:	fild   WORD PTR [edi+0x66]
  40d399:	sbb    DWORD PTR [edi],edi
  40d39b:	retf   0xaa3b
  40d39e:	jecxz  0x40d41e
  40d3a0:	ds xor esp,eax
  40d3a3:	icebp  
  40d3a4:	mov    cl,0x84
  40d3a6:	into   
  40d3a7:	jl     0x40d3ee
  40d3a9:	pushf  
  40d3aa:	(bad)  
  40d3ab:	xchg   edx,eax
  40d3ac:	and    ebx,ecx
  40d3ae:	or     eax,0xfe599957
  40d3b3:	mov    eax,0xfe37a992
  40d3b8:	mov    WORD PTR [eax+0x4f],?
  40d3bb:	cld    
  40d3bc:	das    
  40d3bd:	mov    eax,ds:0xf465f159
  40d3c2:	or     DWORD PTR [edx],ebp
  40d3c4:	int    0x64
  40d3c6:	jnp    0x40d34d
  40d3c8:	push   0xfffffff5
  40d3ca:	jle    0x40d36a
  40d3cc:	outs   dx,DWORD PTR ds:[esi]
  40d3cd:	mov    cl,ch
  40d3cf:	jle    0x40d38f
  40d3d1:	pop    ss
  40d3d2:	dec    edi
  40d3d3:	ja     0x40d435
  40d3d5:	xchg   edi,eax
  40d3d6:	inc    ebp
  40d3d7:	and    DWORD PTR [edi],ecx
  40d3d9:	lods   eax,DWORD PTR ds:[esi]
  40d3da:	xchg   ebx,eax
  40d3db:	mov    bh,0xb0
  40d3dd:	retf   0x5a82
  40d3e0:	stos   DWORD PTR es:[edi],eax
  40d3e1:	retf   
  40d3e2:	inc    esi
  40d3e3:	mov    esi,0xf5eece25
  40d3e8:	sub    al,0x82
  40d3ea:	icebp  
  40d3eb:	cmp    DWORD PTR [edx],0x19
  40d3ee:	mov    ebx,ss
  40d3f0:	or     DWORD PTR [ebx],edx
  40d3f2:	sbb    al,0xa6
  40d3f4:	push   ebp
  40d3f5:	stos   DWORD PTR es:[edi],eax
  40d3f6:	inc    esp
  40d3f7:	sbb    BYTE PTR [esi-0x79],dh
  40d3fa:	mov    esi,DWORD PTR [esp+ebx*4-0x40]
  40d3fe:	xor    DWORD PTR [eax-0x63434a57],edi
  40d404:	jp     0x40d3d5
  40d406:	mov    bl,0x8
  40d408:	cmp    BYTE PTR ds:0x4f29a779,ah
  40d40e:	jmp    0xf307:0x67740678
  40d415:	cs ja  0x40d48c
  40d418:	out    dx,al
  40d419:	pop    ds
  40d41a:	sbb    DWORD PTR [edi+0x34bf1d8e],ebx
  40d420:	enterw 0x2efb,0xd3
  40d425:	inc    ebx
  40d426:	out    0xdf,eax
  40d428:	pop    es
  40d429:	(bad)  
  40d42a:	mov    ebp,DWORD PTR [esi+ebx*4]
  40d42d:	call   0x10d2946b
  40d432:	daa    
  40d433:	inc    esi
  40d434:	push   edi
  40d435:	in     al,0x2b
  40d437:	push   cs
  40d438:	js     0x40d44e
  40d43a:	xchg   ebp,eax
  40d43b:	jg     0x40d4a3
  40d43d:	pop    esp
  40d43e:	sub    al,0xbb
  40d440:	pop    edx
  40d441:	inc    ebp
  40d442:	(bad)  
  40d443:	cs js  0x40d44a
  40d446:	(bad)  
  40d447:	jns    0x40d3f1
  40d449:	pushf  
  40d44a:	(bad)  
  40d44b:	xchg   esp,eax
  40d44c:	(bad)  
  40d44e:	jo     0x40d3e9
  40d450:	aad    0x15
  40d452:	add    ah,ch
  40d454:	push   cs
  40d455:	bound  esp,QWORD PTR [esi+0xda1c3bb]
  40d45b:	pop    edx
  40d45c:	or     ebx,DWORD PTR [edx+0x1e]
  40d45f:	je     0x40d466
  40d461:	mov    edi,DWORD PTR [ecx+esi*8-0x7d]
  40d465:	push   edi
  40d466:	clc    
  40d467:	push   esi
  40d468:	xchg   edi,eax
  40d469:	es jg  0x40d489
  40d46c:	outs   dx,DWORD PTR ds:[esi]
  40d46d:	mov    bl,0x8f
  40d46f:	ins    BYTE PTR es:[edi],dx
  40d470:	mov    bl,0xd5
  40d472:	rol    DWORD PTR [eax-0x7e],1
  40d475:	xchg   ecx,eax
  40d476:	std    
  40d477:	inc    eax
  40d478:	hlt    
  40d479:	loope  0x40d4e5
  40d47b:	ins    BYTE PTR es:[edi],dx
  40d47c:	add    al,0x21
  40d47e:	push   eax
  40d47f:	jge    0x40d486
  40d481:	mov    ds:0x7889e34b,al
  40d486:	(bad)  
  40d487:	mov    edi,0xa540a60c
  40d48c:	sbb    edx,ebp
  40d48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48f:	sub    al,0xbc
  40d491:	pop    ss
  40d492:	pop    ebp
  40d493:	cmp    ebx,0x4d62b2c4
  40d499:	gs push esi
  40d49b:	dec    edx
  40d49c:	jno    0x40d4f1
  40d49e:	sub    cl,dh
  40d4a0:	je     0x40d45c
  40d4a2:	(bad)  
  40d4a4:	mov    dl,0xe1
  40d4a6:	test   eax,0xcfdfdc3c
  40d4ab:	cli    
  40d4ac:	lahf   
  40d4ad:	cmp    edi,0x3c
  40d4b0:	or     dh,al
  40d4b2:	enter  0xe5d4,0xe6
  40d4b6:	add    ecx,DWORD PTR [eax-0x23]
  40d4b9:	cli    
  40d4ba:	xor    dl,dh
  40d4bc:	xor    eax,0x6d1a6393
  40d4c1:	out    0x3a,al
  40d4c3:	sub    dh,BYTE PTR es:[ecx]
  40d4c6:	xlat   BYTE PTR ds:[ebx]
  40d4c7:	cmp    esi,esi
  40d4c9:	add    dh,BYTE PTR [edx+esi*2+0x13]
  40d4cd:	dec    ebp
  40d4ce:	adc    cl,BYTE PTR [eax]
  40d4d0:	mov    esi,0xde81b7d1
  40d4d5:	mov    BYTE PTR [ebp+0x4],al
  40d4d8:	inc    ebx
  40d4d9:	adc    dh,al
  40d4db:	dec    ecx
  40d4dc:	jne    0x40d549
  40d4de:	sub    DWORD PTR [edi],ebp
  40d4e0:	lahf   
  40d4e1:	cmp    al,0x83
  40d4e3:	in     al,dx
  40d4e4:	jmp    0x1a06:0x43ccbc19
  40d4eb:	fld    QWORD PTR [ebp+ebx*4-0x126ecbf1]
  40d4f2:	mov    al,0x5
  40d4f4:	push   edx
  40d4f5:	jbe    0x40d4c8
  40d4f7:	aaa    
  40d4f8:	popa   
  40d4f9:	xchg   cl,dl
  40d4fb:	adc    al,BYTE PTR [ecx+0x388152fd]
  40d501:	pop    es
  40d502:	pop    ds
  40d503:	adc    esi,DWORD PTR [ebp+0x6ecd4727]
  40d509:	icebp  
  40d50a:	(bad)  
  40d50b:	pop    edi
  40d50c:	mov    ds:0xa3474013,eax
  40d511:	cli    
  40d512:	rcr    BYTE PTR [edx+0x53],1
  40d515:	fdivr  st(5),st
  40d517:	js     0x40d4b1
  40d519:	test   eax,0x9c7611d7
  40d51e:	push   ecx
  40d51f:	mov    ah,0xbb
  40d521:	mov    edx,0xcfa4b147
  40d526:	ror    BYTE PTR [esi],1
  40d528:	mov    ebp,0xa5fe53c8
  40d52d:	pop    edx
  40d52e:	jl     0x40d503
  40d530:	mov    esi,0x3d4a270f
  40d535:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d536:	and    DWORD PTR [ecx-0x38],edi
  40d539:	mov    cs,WORD PTR [eax-0x67]
  40d53c:	xchg   BYTE PTR [ecx-0x21],al
  40d53f:	inc    edx
  40d540:	jbe    0x40d524
  40d542:	pop    es
  40d543:	jns    0x40d5ad
  40d545:	and    cl,BYTE PTR [edx+0x2e]
  40d548:	push   eax
  40d549:	inc    ebx
  40d54a:	cld    
  40d54b:	xchg   ebp,eax
  40d54c:	xor    DWORD PTR [ecx-0x5c],0xd64adb95
  40d553:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40d555:	sub    cl,BYTE PTR [esi]
  40d557:	and    ch,BYTE PTR [edi-0x65f6db79]
  40d55d:	push   edi
  40d55e:	lods   al,BYTE PTR ds:[esi]
  40d55f:	add    eax,0x8ed8b02b
  40d564:	and    eax,DWORD PTR [eax-0x6b5c49b3]
  40d56a:	xchg   DWORD PTR [esi+0x3e],esp
  40d56d:	or     ch,BYTE PTR [ecx+0x622adc67]
  40d573:	fidivr DWORD PTR [ebp-0x3db3487b]
  40d579:	adc    BYTE PTR [ebp+0x431b6f01],al
  40d57f:	or     DWORD PTR [ebx+0x1b440829],ebx
  40d585:	retf   0x45c7
  40d588:	stos   DWORD PTR es:[edi],eax
  40d589:	adc    al,0x92
  40d58b:	adc    DWORD PTR [ebx-0x49026b4f],edi
  40d591:	fyl2x  
  40d593:	dec    esi
  40d594:	retf   
  40d595:	cli    
  40d596:	ins    BYTE PTR es:[edi],dx
  40d597:	sub    eax,0x3a190e81
  40d59c:	jne    0x40d521
  40d59e:	xchg   DWORD PTR [edi],ecx
  40d5a0:	arpl   si,bp
  40d5a2:	xchg   esp,eax
  40d5a3:	mov    eax,ds:0x24942c13
  40d5a8:	push   edi
  40d5a9:	mov    bl,0x44
  40d5ab:	dec    edx
  40d5ad:	aaa    
  40d5ae:	leave  
  40d5af:	daa    
  40d5b0:	mov    bl,0x2b
  40d5b2:	xor    DWORD PTR [ebp-0x693524e6],esi
  40d5b8:	jo     0x40d565
  40d5ba:	xlat   BYTE PTR ds:[ebx]
  40d5bb:	jmp    0x40d5d2
  40d5bd:	es mov cl,0x4b
  40d5c0:	jp     0x40d570
  40d5c2:	nop
  40d5c3:	dec    ebp
  40d5c4:	retf   0x52e8
  40d5c7:	jp     0x40d5bf
  40d5c9:	xor    ebp,DWORD PTR [esi+ebp*2]
  40d5cc:	add    dl,BYTE PTR ds:0xe3089d1a
  40d5d2:	jmp    0x40d5d3
  40d5d4:	cmp    DWORD PTR [esi+0x51d595df],eax
  40d5da:	mov    al,ds:0x398a838c
  40d5df:	inc    ecx
  40d5e0:	or     cl,ch
  40d5e2:	and    eax,0x4d782acd
  40d5e7:	xchg   ebp,eax
  40d5e8:	and    eax,0x420c7274
  40d5ed:	dec    DWORD PTR [ebx]
  40d5ef:	dec    esp
  40d5f0:	and    DWORD PTR [eax-0x44d13273],0x76bd858
  40d5fa:	pop    esp
  40d5fb:	jbe    0x40d60d
  40d5fd:	scas   eax,DWORD PTR es:[edi]
  40d5fe:	jbe    0x40d5d4
  40d600:	xor    DWORD PTR [ecx+0x51],0xb36ecbcb
  40d607:	bound  ebx,QWORD PTR [eax*8+0x53f866de]
  40d60e:	fdivp  st(0),st
  40d610:	adc    DWORD PTR [ecx-0x3ab27ad0],edi
  40d616:	sub    edi,DWORD PTR [edx]
  40d618:	stos   DWORD PTR es:[edi],eax
  40d619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d61a:	add    eax,0xb1ff0e0e
  40d61f:	and    ebx,edi
  40d621:	call   0x63ac8487
  40d626:	push   ds
  40d627:	jo     0x40d5f4
  40d629:	adc    al,0x81
  40d62b:	aaa    
  40d62c:	ja     0x40d67e
  40d62e:	scas   eax,DWORD PTR es:[edi]
  40d62f:	ret    0x62cb
  40d632:	mov    al,ds:0xe23a64c
  40d637:	sub    bl,dh
  40d639:	retf   
  40d63a:	ret    
  40d63b:	popa   
  40d63c:	in     al,0x44
  40d63e:	cli    
  40d63f:	push   ds
  40d640:	outs   dx,DWORD PTR ds:[esi]
  40d641:	aad    0x88
  40d643:	fadd   QWORD PTR [ecx-0xd]
  40d646:	cld    
  40d647:	fldcw  WORD PTR [ebx+edi*1-0x46]
  40d64b:	push   eax
  40d64c:	loopne 0x40d617
  40d64e:	outs   dx,DWORD PTR ds:[esi]
  40d64f:	sub    eax,0xe291ed12
  40d654:	cmp    eax,0x9e3ef9f7
  40d659:	in     al,0x6f
  40d65b:	mov    dl,0xb8
  40d65d:	pusha  
  40d65e:	jmp    FWORD PTR [eax+ebx*2+0x4900fcbb]
  40d665:	mov    DWORD PTR [edi],esp
  40d667:	aam    0x6a
  40d669:	sub    DWORD PTR [esi-0x3b],esp
  40d66c:	test   DWORD PTR [edi+ebp*2+0x78ce9fc9],ebp
  40d673:	outs   dx,BYTE PTR ds:[esi]
  40d674:	mov    bl,0x2
  40d676:	les    esi,FWORD PTR [ebx-0x51]
  40d679:	push   edi
  40d67a:	out    0xf4,al
  40d67c:	xchg   edx,eax
  40d67d:	sbb    al,0x84
  40d67f:	aam    0x8f
  40d681:	pop    edi
  40d682:	inc    edi
  40d683:	xor    BYTE PTR [edi],ah
  40d685:	cmp    bh,BYTE PTR [eax+0x52afb93a]
  40d68b:	adc    BYTE PTR [ecx+eax*2],0x2b
  40d68f:	bound  edi,QWORD PTR [edi-0x336802d4]
  40d695:	popf   
  40d696:	mov    ebp,0x7159ffb4
  40d69b:	popa   
  40d69c:	cwde   
  40d69d:	stc    
  40d69e:	stc    
  40d69f:	icebp  
  40d6a0:	and    eax,0x80793ee0
  40d6a5:	and    al,0x9d
  40d6a7:	pop    ecx
  40d6a8:	jno    0x40d66c
  40d6aa:	cli    
  40d6ab:	cmp    ah,BYTE PTR [edx-0x65]
  40d6ae:	mov    bh,0x78
  40d6b0:	sbb    DWORD PTR [ebx+0x61],esp
  40d6b3:	pushf  
  40d6b4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40d6b6:	push   es
  40d6b7:	sub    edi,edx
  40d6b9:	fcom   QWORD PTR [eax-0xd33abd7]
  40d6bf:	xor    bh,BYTE PTR [eax+0x79]
  40d6c2:	mov    bl,0x2a
  40d6c4:	inc    esp
  40d6c5:	hlt    
  40d6c6:	out    0x76,al
  40d6c8:	and    al,0x2f
  40d6cb:	popa   
  40d6cc:	mov    WORD PTR [edi+ebx*2],gs
  40d6cf:	jns    0x40d6de
  40d6d1:	fsubr  DWORD PTR [ebx]
  40d6d3:	push   es
  40d6d4:	(bad)  
  40d6d6:	cwde   
  40d6d7:	loopne 0x40d67d
  40d6d9:	clc    
  40d6da:	icebp  
  40d6db:	xchg   DWORD PTR [ebp+0x38],edx
  40d6de:	add    al,0x5e
  40d6e0:	push   es
  40d6e1:	(bad)  
  40d6e2:	mov    ebx,0xb6708448
  40d6e7:	ret    0x5fc7
  40d6ea:	retf   0x5d45
  40d6ed:	fcmovne st,st(4)
  40d6ef:	fbstp  TBYTE PTR [edx]
  40d6f1:	xchg   ebx,eax
  40d6f2:	inc    esi
  40d6f3:	and    al,0xc6
  40d6f5:	mov    esi,0xa9720e7c
  40d6fa:	jge    0x40d76d
  40d6fc:	push   edx
  40d6fd:	inc    ebp
  40d6fe:	loop   0x40d689
  40d700:	in     al,dx
  40d701:	sub    esp,esi
  40d703:	scas   eax,DWORD PTR es:[edi]
  40d704:	clc    
  40d705:	(bad)  
  40d706:	icebp  
  40d707:	fiadd  WORD PTR [ebx+0x54]
  40d70a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d70b:	pushf  
  40d70c:	inc    edi
  40d70d:	mov    eax,ds:0xf3e99c55
  40d712:	(bad)  
  40d713:	in     eax,dx
  40d714:	or     BYTE PTR [ecx+0xc90f48d],dl
  40d71a:	sahf   
  40d71b:	pusha  
  40d71c:	bound  ebp,QWORD PTR [bp+si]
  40d71f:	mov    al,0xa3
  40d721:	mov    bl,0x76
  40d723:	retf   
  40d724:	xor    edx,esi
  40d726:	stos   DWORD PTR es:[edi],eax
  40d727:	fimul  WORD PTR [eax-0x77fb3edf]
  40d72d:	es ret 
  40d72f:	mov    WORD PTR [edi],fs
  40d731:	fsub   st,st(3)
  40d734:	ficomp DWORD PTR [edx+eiz*2+0x4e590ac]
  40d73b:	add    al,0x2d
  40d73d:	or     bl,BYTE PTR [edx]
  40d73f:	inc    esp
  40d740:	xchg   edi,eax
  40d741:	adc    cl,ah
  40d743:	imul   ebx,DWORD PTR [edx],0x693464c0
  40d749:	cmp    al,0xfb
  40d74b:	ret    0x6270
  40d74e:	fisttp WORD PTR ds:0xc387eaaa
  40d754:	push   edx
  40d755:	fidivr WORD PTR [eax+0x4b]
  40d758:	sar    DWORD PTR [ebx],cl
  40d75a:	fsubr  DWORD PTR [esi-0x3c]
  40d75d:	and    bl,dl
  40d75f:	cdq    
  40d760:	mov    dh,0x83
  40d762:	push   ebx
  40d763:	pop    ebx
  40d764:	sub    eax,0x8b171426
  40d769:	push   0x5e
  40d76b:	mov    al,ch
  40d76d:	and    al,0xc4
  40d76f:	std    
  40d770:	outs   dx,BYTE PTR ds:[esi]
  40d771:	mov    ebp,0xd9dbf087
  40d776:	(bad)  
  40d777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d778:	push   0x63
  40d77a:	push   ebx
  40d77b:	jp     0x40d79c
  40d77d:	mov    ebx,0x9571fa73
  40d782:	inc    esi
  40d783:	loope  0x40d7d1
  40d785:	xchg   edi,eax
  40d786:	and    DWORD PTR [ebx+ecx*1-0x6],ecx
  40d78a:	or     ebp,ecx
  40d78c:	cdq    
  40d78d:	int    0x42
  40d78f:	push   ebp
  40d790:	mov    edx,0x7a985f9d
  40d795:	push   esp
  40d796:	pop    ecx
  40d797:	out    0x81,eax
  40d799:	and    al,0x1
  40d79b:	jo     0x40d7fc
  40d79d:	cld    
  40d79e:	sub    dl,bl
  40d7a0:	retf   
  40d7a1:	sbb    eax,0xcc464f05
  40d7a6:	clc    
  40d7a7:	inc    eax
  40d7a8:	stos   BYTE PTR es:[edi],al
  40d7a9:	fld    TBYTE PTR [edx-0x47]
  40d7ac:	xchg   esi,eax
  40d7ad:	inc    edx
  40d7ae:	(bad)  
  40d7af:	sub    DWORD PTR [ecx+0x11],esi
  40d7b2:	dec    esp
  40d7b3:	and    al,0x55
  40d7b5:	mov    bl,bl
  40d7b7:	push   esp
  40d7b8:	sub    BYTE PTR [ebx],cl
  40d7ba:	pop    ds
  40d7bb:	xchg   edx,eax
  40d7bc:	clc    
  40d7bd:	out    0x9f,al
  40d7bf:	scas   eax,DWORD PTR es:[edi]
  40d7c0:	jmp    0x1572:0xaea3ee84
  40d7c7:	push   ebp
  40d7c8:	cld    
  40d7c9:	xor    BYTE PTR [edi+0x48aa4d18],dh
  40d7cf:	icebp  
  40d7d0:	call   0x425f86f8
  40d7d5:	jmp    0x50a8c1f6
  40d7da:	and    ah,BYTE PTR [edx+0x9]
  40d7dd:	jmp    0xf6102fca
  40d7e2:	hlt    
  40d7e3:	ss or  al,0x48
  40d7e6:	mov    edx,0x4237f88a
  40d7eb:	(bad)  
  40d7ec:	fcmovnu st,st(0)
  40d7ee:	adc    BYTE PTR [ebx],dh
  40d7f0:	stos   BYTE PTR es:[edi],al
  40d7f1:	sbb    BYTE PTR [ebp-0x62],ch
  40d7f4:	xchg   ebp,eax
  40d7f5:	jno    0x40d7f9
  40d7f7:	jns    0x40d7c8
  40d7f9:	les    eax,FWORD PTR [ebp+0x2a]
  40d7fc:	lods   al,BYTE PTR ds:[esi]
  40d7fd:	adc    edx,DWORD PTR [esi]
  40d7ff:	jle    0x40d82b
  40d801:	cli    
  40d802:	neg    cl
  40d804:	push   ss
  40d805:	push   esp
  40d806:	xchg   BYTE PTR [ecx-0x170f42a],ah
  40d80c:	aas    
  40d80d:	leave  
  40d80e:	ror    BYTE PTR [ecx+edx*4+0xc],0xf8
  40d813:	jp     0x40d811
  40d815:	out    dx,al
  40d816:	cwde   
  40d817:	ds popf 
  40d819:	mov    BYTE PTR [edx-0x373e7834],bl
  40d81f:	inc    ebx
  40d820:	loopne 0x40d84a
  40d822:	jge    0x40d7b0
  40d824:	or     al,0x41
  40d826:	lods   eax,DWORD PTR ds:[esi]
  40d827:	popa   
  40d828:	xchg   bl,dh
  40d82a:	cmp    edi,DWORD PTR [edi]
  40d82c:	stos   DWORD PTR es:[edi],eax
  40d82d:	stc    
  40d82e:	popa   
  40d82f:	jmp    0x2dbe1031
  40d834:	call   0x51f8:0x49421082
  40d83b:	add    DWORD PTR [ebx+0x731a6b94],ebx
  40d841:	xchg   DWORD PTR [edi+eiz*8-0x7],esi
  40d845:	jge    0x40d853
  40d847:	inc    DWORD PTR [edi+0x1f8c0b6f]
  40d84d:	lds    edx,FWORD PTR [edx-0x26]
  40d850:	fxch   st(4)
  40d852:	cli    
  40d853:	pop    esi
  40d854:	lea    ebx,[ebx+esi*1+0x5f45e4ad]
  40d85b:	jns    0x40d88a
  40d85d:	jae    0x40d84b
  40d85f:	or     eax,0xf16c7266
  40d864:	icebp  
  40d865:	(bad)  
  40d866:	imul   DWORD PTR [ebp+0x66e14c20]
  40d86c:	cli    
  40d86d:	fcom   QWORD PTR [ecx+ebx*1+0x21]
  40d871:	sub    ch,BYTE PTR [ecx+0xa]
  40d874:	cmp    eax,0xb7b0b698
  40d879:	xchg   ebx,eax
  40d87a:	jl     0x40d83d
  40d87c:	adc    esp,esi
  40d87e:	cwde   
  40d87f:	js     0x40d835
  40d881:	inc    esi
  40d882:	add    al,0x75
  40d884:	and    BYTE PTR [esi-0x4c],dl
  40d887:	leave  
  40d888:	or     ch,BYTE PTR ds:[ebp+0x2e]
  40d88c:	mov    ch,dh
  40d88e:	xor    DWORD PTR [edi-0x2e],eax
  40d891:	ror    BYTE PTR [ecx-0x1b],1
  40d894:	jl     0x40d85f
  40d896:	jae    0x40d87c
  40d898:	lock pop edx
  40d89a:	cs dec ecx
  40d89c:	jmp    0x77dd:0x331f9e53
  40d8a3:	xor    ecx,ebx
  40d8a5:	fwait
  40d8a6:	and    bh,ah
  40d8a8:	(bad)  
  40d8a9:	dec    ebx
  40d8aa:	(bad)  
  40d8ac:	stos   BYTE PTR es:[edi],al
  40d8ad:	jp     0x40d912
  40d8af:	scas   al,BYTE PTR es:[edi]
  40d8b0:	mov    dh,BYTE PTR [edx]
  40d8b2:	mov    ebp,0x9e9d66e6
  40d8b7:	push   ss
  40d8b8:	mov    ah,0x16
  40d8ba:	pop    ds
  40d8bb:	adc    DWORD PTR [ecx+0x3],ebp
  40d8be:	xchg   DWORD PTR [esi],ebp
  40d8c0:	repz sbb eax,0xca2dfa1
  40d8c6:	cwde   
  40d8c7:	les    esp,FWORD PTR [edi-0x1c]
  40d8ca:	lahf   
  40d8cb:	add    ch,BYTE PTR [esi+0x66]
  40d8ce:	jns    0x40d912
  40d8d0:	jg     0x40d869
  40d8d2:	ret    0x6b0a
  40d8d5:	jnp    0x40d85f
  40d8d7:	iret   
  40d8d8:	or     eax,0xb78c9
  40d8dd:	leave  
  40d8de:	pop    esp
  40d8df:	shl    BYTE PTR [esi+0x37],0x4e
  40d8e3:	aad    0x6a
  40d8e5:	(bad)  
  40d8e7:	repz mov ch,0x44
  40d8ea:	add    DWORD PTR [ebx-0x18],0xffffffe1
  40d8ee:	gs mov al,0x7a
  40d8f1:	sub    edx,eax
  40d8f3:	mov    ebp,0x1ebae310
  40d8f8:	or     BYTE PTR [ebx-0x29],ah
  40d8fb:	jl     0x40d8c9
  40d8fd:	jae    0x40d910
  40d8ff:	sbb    dl,bh
  40d901:	loopne 0x40d92c
  40d903:	adc    al,0xcd
  40d905:	xor    bh,dl
  40d907:	push   cs
  40d908:	or     ebp,edi
  40d90a:	hlt    
  40d90b:	cmc    
  40d90c:	xor    DWORD PTR [eax-0x403490ff],edi
  40d912:	sub    BYTE PTR [esi],0xfd
  40d915:	dec    ecx
  40d916:	push   es
  40d917:	loopne 0x40d935
  40d919:	xchg   ecx,eax
  40d91a:	mov    ch,0x94
  40d91c:	iret   
  40d91d:	jae    0x40d8bd
  40d91f:	xlat   BYTE PTR ds:[ebx]
  40d920:	sub    ecx,eax
  40d922:	cdq    
  40d923:	jle    0x40d96d
  40d925:	pop    edi
  40d926:	mov    cl,0xec
  40d928:	stos   DWORD PTR es:[edi],eax
  40d929:	dec    eax
  40d92a:	scas   al,BYTE PTR es:[edi]
  40d92b:	jne    0x40d93e
  40d92d:	pop    esi
  40d92e:	lock or eax,0x76e0291c
  40d934:	das    
  40d935:	cmc    
  40d936:	xchg   ecx,eax
  40d937:	lahf   
  40d938:	in     eax,dx
  40d939:	retf   0xa36
  40d93c:	xor    al,0x27
  40d93e:	mov    es,WORD PTR [ebx-0xa25150e]
  40d944:	jne    0x40d9ae
  40d946:	pushf  
  40d947:	mov    DWORD PTR [ecx-0x11c10867],edi
  40d94d:	mov    edx,0x802fb886
  40d952:	sbb    al,0xcc
  40d954:	je     0x40d98e
  40d956:	sti    
  40d957:	xchg   edx,eax
  40d958:	push   edx
  40d959:	adc    BYTE PTR [eax+0x126bbd6a],0x43
  40d960:	jmp    0x40d99d
  40d962:	jle    0x40d952
  40d964:	das    
  40d965:	adc    ah,BYTE PTR [eax+edi*2]
  40d968:	iret   
  40d969:	pop    eax
  40d96a:	cdq    
  40d96b:	jo     0x40d974
  40d96d:	and    DWORD PTR [edx],ebx
  40d96f:	jmp    0xf0b7:0xfff05a66
  40d976:	dec    eax
  40d977:	adc    BYTE PTR [esi+ecx*8],0x66
  40d97b:	lea    eax,[eax]
  40d97d:	loop   0x40d9fa
  40d97f:	sahf   
  40d980:	es and al,0x8e
  40d983:	sbb    DWORD PTR [edx-0x26d05ca],edx
  40d989:	adc    BYTE PTR [esi],dl
  40d98b:	jne    0x40d9bc
  40d98d:	jb     0x40d9d3
  40d98f:	mov    dh,BYTE PTR [esi+0x58822ebb]
  40d995:	pop    ebx
  40d996:	inc    edx
  40d997:	xchg   esi,eax
  40d998:	jmp    0xa6f3:0x78beada6
  40d99f:	mov    ecx,0x805a66c2
  40d9a4:	in     al,dx
  40d9a5:	and    ebp,DWORD PTR [eax-0x65b08707]
  40d9ab:	jge    0x40d933
  40d9ad:	dec    ebx
  40d9ae:	dec    edx
  40d9af:	arpl   dx,si
  40d9b1:	mov    ds:0x2a34ac6,eax
  40d9b6:	es dec eax
  40d9b8:	mov    cl,0xcc
  40d9ba:	push   edi
  40d9bb:	in     eax,dx
  40d9bc:	enter  0x92a5,0x59
  40d9c0:	(bad)  
  40d9c1:	fcomi  st,st(7)
  40d9c3:	xchg   esi,eax
  40d9c4:	imul   ecx,DWORD PTR [eax-0xaf830b6],0x55
  40d9cb:	scas   eax,DWORD PTR es:[edi]
  40d9cc:	xchg   edx,eax
  40d9cd:	or     ch,BYTE PTR [edi-0x6f363cde]
  40d9d3:	sub    al,0x8b
  40d9d5:	mov    ch,0x8d
  40d9d7:	sbb    al,0xb5
  40d9d9:	pop    eax
  40d9da:	pop    ss
  40d9db:	fimul  DWORD PTR [ebx+0x1d]
  40d9de:	jmp    0x40da00
  40d9e0:	test   eax,0x98127592
  40d9e5:	jno    0x40d9e5
  40d9e7:	inc    ecx
  40d9e8:	sub    eax,0x530003a4
  40d9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ee:	test   BYTE PTR [edi+0x4a8aa69a],ch
  40d9f4:	mov    ds:0x75298602,eax
  40d9f9:	stos   DWORD PTR es:[edi],eax
  40d9fa:	dec    edi
  40d9fb:	add    DWORD PTR [esp+eax*1+0x54],0xffffffd2
  40da00:	sbb    cl,dl
  40da02:	sbb    al,0x9e
  40da04:	cmc    
  40da05:	repz xor eax,0xad705151
  40da0b:	lods   eax,DWORD PTR ds:[esi]
  40da0c:	mov    edx,0x42e36dcc
  40da11:	inc    edx
  40da12:	push   edx
  40da13:	or     BYTE PTR [ebp-0x27ef4e65],bh
  40da19:	loop   0x40d9b0
  40da1b:	in     eax,0xd4
  40da1d:	jbe    0x40d9e0
  40da1f:	out    dx,al
  40da20:	int    0xae
  40da22:	ins    DWORD PTR es:[edi],dx
  40da23:	xchg   ebp,eax
  40da24:	fwait
  40da25:	sbb    DWORD PTR [edi-0x4433c4ca],ebx
  40da2b:	data16 cmc 
  40da2d:	adc    eax,0xb0bcc327
  40da32:	xor    ebx,DWORD PTR [ecx+0x65]
  40da35:	dec    esi
  40da36:	inc    eax
  40da37:	fcom   QWORD PTR [eax-0x4a]
  40da3a:	sub    DWORD PTR [ecx],ebx
  40da3c:	mov    al,ds:0xf5dae30
  40da41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da42:	sub    eax,0xb0331a5e
  40da47:	imul   DWORD PTR [ebp+0x664ec4d9]
  40da4d:	mov    eax,0x35545704
  40da52:	ds retf 
  40da54:	lahf   
  40da55:	fsubr  QWORD PTR [ebx-0x52a2dc31]
  40da5b:	das    
  40da5c:	adc    dh,BYTE PTR [eax-0x68]
  40da5f:	mov    esi,DWORD PTR [edx]
  40da61:	jbe    0x40dac0
  40da63:	push   ebp
  40da64:	or     DWORD PTR [esi-0x259e3e0d],esi
  40da6a:	out    0x5,eax
  40da6c:	fcmovne st,st(4)
  40da6e:	xchg   esp,eax
  40da6f:	jne    0x40da0f
  40da71:	add    dl,BYTE PTR [esp+ebx*1+0x272069fb]
  40da78:	cs icebp 
  40da7a:	sub    edi,DWORD PTR [esi]
  40da7c:	lea    ebx,[esi-0x57]
  40da7f:	mov    ah,0xc4
  40da81:	ins    DWORD PTR es:[edi],dx
  40da82:	xchg   esp,eax
  40da83:	push   0xffffffbe
  40da85:	add    eax,0x9b8e1af2
  40da8a:	mov    esi,0x736496c3
  40da8f:	sbb    DWORD PTR [eax-0x4c838ac5],ebp
  40da95:	call   DWORD PTR [ebp+0x201ff9eb]
  40da9b:	xor    bl,cl
  40da9d:	mov    edi,0x35f63b83
  40daa2:	enter  0x8441,0x5c
  40daa6:	xchg   cl,bh
  40daa8:	add    al,0xfb
  40daaa:	sub    BYTE PTR [ecx+eax*4-0x20],bl
  40daae:	out    0x71,al
  40dab0:	jns    0x40db2b
  40dab2:	inc    esi
  40dab3:	out    dx,eax
  40dab4:	cmp    esp,DWORD PTR [ecx+0x18edd15f]
  40daba:	and    eax,0x86b5662c
  40dabf:	ds or  al,0x74
  40dac2:	lahf   
  40dac3:	leave  
  40dac4:	add    dh,BYTE PTR [eax]
  40dac6:	out    dx,eax
  40dac7:	les    esi,FWORD PTR [ecx-0x74]
  40daca:	in     al,0xca
  40dacc:	mov    esi,DWORD PTR [eax-0xf]
  40dacf:	lea    ebx,[esi]
  40dad1:	call   0xc68f:0x663e8f97
  40dad8:	cmp    ebx,ebx
  40dada:	fs xchg edi,eax
  40dadc:	jmp    0x1c7d2b60
  40dae1:	xchg   DWORD PTR [edx+0x3d7ead1e],esi
  40dae7:	loopne 0x40dacb
  40dae9:	cmp    esi,DWORD PTR [esi]
  40daeb:	jns    0x40daeb
  40daed:	inc    esp
  40daee:	cmp    ch,ah
  40daf0:	sbb    ch,BYTE PTR [esp+ebx*8]
  40daf3:	jmp    0x40db51
  40daf5:	ror    DWORD PTR [esi],1
  40daf7:	xchg   esp,eax
  40daf8:	mov    BYTE PTR [edx-0x5854550],ah
  40dafe:	or     BYTE PTR [ecx-0x4d218a09],ch
  40db04:	push   ds
  40db05:	xchg   ebx,eax
  40db06:	outs   dx,DWORD PTR ds:[esi]
  40db07:	sbb    eax,0xb07aaa4d
  40db0c:	in     al,dx
  40db0d:	outs   dx,DWORD PTR ds:[esi]
  40db0e:	loop   0x40db70
  40db10:	cwde   
  40db11:	ret    
  40db12:	adc    edx,DWORD PTR [ebx-0x77652fab]
  40db18:	mov    BYTE PTR [edi],al
  40db1a:	pop    eax
  40db1b:	pop    esi
  40db1c:	bound  ebp,QWORD PTR [esi+0x4a]
  40db1f:	xor    eax,0x18ed9ea
  40db24:	xchg   edi,eax
  40db25:	jne    0x40daa9
  40db27:	scas   al,BYTE PTR es:[edi]
  40db28:	dec    eax
  40db29:	mov    ch,0xf4
  40db2b:	xchg   ebx,eax
  40db2c:	add    al,0x86
  40db2e:	stos   BYTE PTR es:[edi],al
  40db2f:	jg     0x40dba2
  40db31:	cmp    eax,0x504c8838
  40db36:	push   edx
  40db37:	(bad)  
  40db38:	sbb    esp,DWORD PTR [edx]
  40db3a:	pop    ebp
  40db3b:	aad    0x6d
  40db3d:	jmp    0x40dacb
  40db3f:	xchg   edx,eax
  40db40:	inc    ecx
  40db41:	pop    ebp
  40db42:	xchg   DWORD PTR cs:[esi+0x27],edx
  40db46:	test   DWORD PTR [edi-0x51],0x51972129
  40db4d:	mov    ah,0xb9
  40db4f:	or     DWORD PTR [esi],0x2
  40db52:	scas   al,BYTE PTR es:[edi]
  40db53:	repz loopne 0x40db6f
  40db56:	nop
  40db57:	jl     0x40db11
  40db59:	lods   al,BYTE PTR ds:[esi]
  40db5a:	mov    esp,DWORD PTR [ebp-0x57]
  40db5d:	int3   
  40db5e:	or     BYTE PTR [edx],dl
  40db60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db61:	push   ss
  40db62:	sbb    DWORD PTR [esi+0x46],esp
  40db65:	add    al,0x9b
  40db67:	je     0x40db52
  40db69:	and    cl,dl
  40db6b:	jbe    0x40db39
  40db6d:	jns    0x40dbee
  40db6f:	retf   0xe621
  40db72:	ror    BYTE PTR [ecx],1
  40db74:	sbb    BYTE PTR [edx+eax*2+0x18],bh
  40db78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db79:	cs pop ebp
  40db7b:	ret    0xd377
  40db7e:	repz pop esp
  40db80:	gs push edx
  40db82:	aam    0xca
  40db84:	xor    eax,0x1ef7cc33
  40db89:	jecxz  0x40db5b
  40db8b:	test   eax,0x364109bf
  40db90:	sub    BYTE PTR [edx+0x7deb094],ah
  40db96:	cld    
  40db97:	inc    ecx
  40db98:	push   ss
  40db99:	aad    0x82
  40db9b:	sub    eax,0xafca26f8
  40dba0:	shr    DWORD PTR [ecx],cl
  40dba2:	aam    0xe1
  40dba4:	ret    0x15e3
  40dba7:	or     ah,BYTE PTR [eax]
  40dba9:	xchg   edi,esi
  40dbab:	jle    0x40db4b
  40dbad:	fldpi  
  40dbaf:	scas   eax,DWORD PTR es:[edi]
  40dbb0:	(bad)  
  40dbb1:	push   ecx
  40dbb2:	mov    dl,0x2e
  40dbb4:	shl    BYTE PTR [edx+edi*1],1
  40dbb7:	mov    eax,0x59bdabce
  40dbbc:	scas   al,BYTE PTR es:[edi]
  40dbbd:	add    edi,esp
  40dbbf:	mov    DWORD PTR [edx-0x20cb274b],0x97ce12f8
  40dbc9:	xchg   ebx,eax
  40dbca:	mul    ah
  40dbcc:	cmp    eax,0x5d28cd2e
  40dbd1:	ss pop esi
  40dbd3:	shr    DWORD PTR [ebx+0x330ad2c0],cl
  40dbd9:	adc    ch,BYTE PTR [ebp+ebx*4-0x7c]
  40dbdd:	inc    ecx
  40dbde:	jne    0x40dbcf
  40dbe0:	xchg   edx,eax
  40dbe1:	mov    WORD PTR [ebx],?
  40dbe3:	jp     0x40dbac
  40dbe5:	mov    ds:0x677f1d6e,al
  40dbea:	sbb    ebx,DWORD PTR ds:0x241a64d1
  40dbf0:	jle    0x40dbe0
  40dbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbf3:	lods   eax,DWORD PTR ds:[esi]
  40dbf4:	test   eax,0x3e3ac64
  40dbf9:	jns    0x40dbdf
  40dbfb:	rcr    BYTE PTR [ebp-0x282c35aa],cl
  40dc01:	mov    ebx,0xebc8de2
  40dc06:	cwde   
  40dc07:	in     eax,dx
  40dc08:	lock inc edi
  40dc0a:	nop
  40dc0b:	mov    ds:0x54a549f5,al
  40dc10:	fstp   TBYTE PTR [edi+0x45]
  40dc13:	mov    al,ds:0x48b5b3bd
  40dc18:	scas   al,BYTE PTR es:[edi]
  40dc19:	fwait
  40dc1a:	pop    edx
  40dc1b:	and    ecx,DWORD PTR [esi+0x28ccb048]
  40dc21:	out    0x7d,al
  40dc23:	xchg   ecx,eax
  40dc24:	xlat   BYTE PTR ds:[ebx]
  40dc25:	dec    ecx
  40dc26:	sub    BYTE PTR [eax+0x1ad16b9e],dh
  40dc2c:	xlat   BYTE PTR ds:[ebx]
  40dc2d:	dec    ebx
  40dc2e:	xchg   esp,eax
  40dc2f:	adc    esp,DWORD PTR [eax-0x10233189]
  40dc35:	leave  
  40dc36:	ins    DWORD PTR es:[edi],dx
  40dc37:	jbe    0x40dc6b
  40dc39:	ins    DWORD PTR es:[edi],dx
  40dc3a:	int    0x12
  40dc3c:	lods   al,BYTE PTR ds:[esi]
  40dc3d:	mov    ecx,0x67f78dd
  40dc42:	sub    BYTE PTR [edi+0x3b],0xfe
  40dc46:	(bad)  
  40dc47:	cs push 0x8c3ab8b
  40dc4d:	lock aaa 
  40dc4f:	lahf   
  40dc50:	(bad)  
  40dc51:	rol    DWORD PTR [edi+0x6dd06107],1
  40dc57:	ins    BYTE PTR es:[edi],dx
  40dc58:	cmp    al,0x24
  40dc5a:	inc    edi
  40dc5b:	shl    BYTE PTR [ecx],1
  40dc5d:	je     0x40dcb4
  40dc5f:	add    al,0xb8
  40dc61:	push   ebx
  40dc62:	fs push ss
  40dc64:	sub    eax,ecx
  40dc66:	dec    ebp
  40dc67:	sub    bl,0xa7
  40dc6a:	adc    ebp,esp
  40dc6c:	add    al,0x69
  40dc6e:	mov    edi,DWORD PTR [eax]
  40dc70:	sub    al,0xba
  40dc72:	ja     0x40dcc0
  40dc74:	adc    al,BYTE PTR fs:[eax-0x210ecd9d]
  40dc7b:	call   0x2b75cedd
  40dc80:	rol    BYTE PTR [ebx],1
  40dc82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc83:	or     BYTE PTR [edx+eax*2-0x7bf7a82b],0x77
  40dc8b:	mov    ah,BYTE PTR [ebp-0x3edb4e7]
  40dc91:	test   BYTE PTR [ecx+0x1b],0xa4
  40dc95:	out    0x5f,al
  40dc97:	push   0x28
  40dc99:	dec    ebx
  40dc9a:	scas   al,BYTE PTR es:[edi]
  40dc9b:	pop    edx
  40dc9c:	imul   ebp,DWORD PTR [ebx+0x62],0xffffff97
  40dca0:	out    dx,al
  40dca1:	sbb    eax,0x6354d964
  40dca6:	jno    0x40dca8
  40dca8:	(bad)  
  40dca9:	ds in  eax,dx
  40dcab:	push   esp
  40dcac:	xchg   DWORD PTR [edi-0x15],esi
  40dcaf:	repz mov cl,0xf5
  40dcb2:	sub    eax,0x4cc8ecfc
  40dcb7:	xor    ebp,DWORD PTR [esi-0x4a6baaf3]
  40dcbd:	jmp    0x40dd0c
  40dcbf:	out    dx,eax
  40dcc0:	xchg   ecx,eax
  40dcc1:	nop
  40dcc2:	outs   dx,DWORD PTR ds:[esi]
  40dcc3:	xlat   BYTE PTR ds:[ebx]
  40dcc4:	ins    BYTE PTR es:[edi],dx
  40dcc5:	sahf   
  40dcc6:	mov    ecx,0xad0d731
  40dccb:	or     esp,DWORD PTR [edi+ecx*4+0x61]
  40dccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcd0:	cmp    eax,0x2f6bf66a
  40dcd5:	jp     0x40dcb6
  40dcd7:	fnstsw WORD PTR [ebp-0x49]
  40dcda:	movups xmm5,xmm6
  40dcdd:	and    eax,0x731a46f2
  40dce2:	jbe    0x40dcce
  40dce4:	sbb    DWORD PTR [edx],0xe2be0569
  40dcea:	in     al,dx
  40dceb:	fdiv   DWORD PTR [ebx+0x73]
  40dcee:	dec    eax
  40dcef:	sti    
  40dcf0:	mov    al,0x18
  40dcf2:	sub    dl,dl
  40dcf4:	cmp    DWORD PTR [eax+0x68],ebx
  40dcf7:	loop   0x40dd5f
  40dcf9:	call   0xcfe9b91b
  40dcfe:	stos   BYTE PTR es:[edi],al
  40dcff:	test   bl,0xe7
  40dd02:	cmc    
  40dd03:	jmp    0x40dcdc
  40dd05:	push   edx
  40dd06:	ins    BYTE PTR es:[edi],dx
  40dd07:	es out 0xc0,eax
  40dd0a:	(bad)  
  40dd0b:	mov    cl,BYTE PTR [esi-0x3e4617a8]
  40dd11:	mov    ah,0x75
  40dd13:	retf   
  40dd14:	pop    ecx
  40dd15:	xchg   ebx,eax
  40dd16:	jg     0x40dd38
  40dd18:	pop    esp
  40dd19:	push   0x2dcafd0c
  40dd1e:	call   0x9b66:0x3ae13bf7
  40dd25:	sub    al,0xe1
  40dd27:	jecxz  0x40dd74
  40dd29:	mov    ebx,0x2c02c982
  40dd2e:	cmp    eax,0x37717362
  40dd33:	es loope 0x40dd2a
  40dd36:	in     eax,dx
  40dd37:	xor    al,0xe4
  40dd39:	or     BYTE PTR [esi+0x2373b4d9],dl
  40dd3f:	xchg   ecx,eax
  40dd40:	into   
  40dd41:	mov    edx,DWORD PTR [ebx-0x646a86b6]
  40dd47:	imul   edi,DWORD PTR [eax+eax*2-0x41],0x3c17a3bc
  40dd4f:	jne    0x40dd99
  40dd51:	pushf  
  40dd52:	loop   0x40ddb5
  40dd54:	mov    edx,0x81492aa
  40dd59:	stc    
  40dd5a:	jmp    0x338e445
  40dd5f:	xchg   esi,eax
  40dd60:	ror    DWORD PTR [edi+edi*8+0x63d56381],1
  40dd67:	add    al,0x96
  40dd69:	xor    BYTE PTR [eax-0x80],0xe
  40dd6d:	xchg   esp,eax
  40dd6e:	retf   
  40dd6f:	or     eax,0xba128686
  40dd74:	out    dx,eax
  40dd75:	cmp    eax,0x1a7f7341
  40dd7a:	test   eax,0x65963f1e
  40dd7f:	repnz cdq 
  40dd81:	pop    ecx
  40dd82:	lods   al,BYTE PTR ds:[esi]
  40dd83:	or     ch,BYTE PTR [edx+0x14]
  40dd86:	jmp    0x40dd12
  40dd88:	xor    dh,ah
  40dd8a:	cmp    eax,0x1271df1f
  40dd8f:	pop    ss
  40dd90:	inc    esp
  40dd91:	in     eax,dx
  40dd92:	fimul  WORD PTR es:[ecx]
  40dd95:	jl     0x40dd6b
  40dd97:	add    BYTE PTR ds:0x27942664,0xec
  40dd9e:	imul   esp,esi,0x11
  40dda1:	das    
  40dda2:	or     al,0x83
  40dda4:	aas    
  40dda5:	inc    edx
  40dda6:	xor    DWORD PTR ds:0x413e2123,ebx
  40ddac:	fld    DWORD PTR [ebp-0x2cf02ecc]
  40ddb2:	fstp   QWORD PTR [eax-0x3d34085a]
  40ddb8:	test   ah,dh
  40ddba:	leave  
  40ddbb:	pop    ds
  40ddbc:	retf   
  40ddbd:	mov    eax,0x4d0c8c3b
  40ddc2:	pop    DWORD PTR [edx-0x6b]
  40ddc5:	mov    dl,0xbc
  40ddc7:	inc    esp
  40ddc8:	sbb    eax,0x771e1b8a
  40ddcd:	push   ss
  40ddce:	mov    WORD PTR [eax],ss
  40ddd0:	icebp  
  40ddd1:	iret   
  40ddd2:	xchg   edi,eax
  40ddd3:	int    0xbb
  40ddd5:	adc    al,BYTE PTR [ebx]
  40ddd7:	or     cl,BYTE PTR [esi]
  40ddd9:	clc    
  40ddda:	mov    edx,0xf8781a48
  40dddf:	jle    0x40dda6
  40dde1:	xchg   ebx,eax
  40dde2:	aam    0xa3
  40dde4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde5:	dec    esp
  40dde6:	jle    0x40ddc1
  40dde8:	add    al,0x4b
  40ddea:	outs   dx,BYTE PTR ds:[esi]
  40ddeb:	or     DWORD PTR [ebx],edi
  40dded:	inc    edx
  40ddee:	xchg   esi,eax
  40ddef:	inc    eax
  40ddf0:	and    eax,0xccbc7b83
  40ddf5:	fld    QWORD PTR [ebx+0x3c]
  40ddf8:	fwait
  40ddf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddfa:	les    edi,FWORD PTR [esi+ebx*4-0x69008df9]
  40de01:	ja     0x40ddff
  40de03:	sub    DWORD PTR [ebp+0x30241024],eax
  40de09:	adc    al,BYTE PTR [eax-0x2a]
  40de0c:	mov    dh,0x57
  40de0e:	inc    esi
  40de0f:	jne    0x40de2c
  40de11:	mov    ch,0x69
  40de13:	xchg   ebp,eax
  40de14:	sbb    DWORD PTR [edx],0x6
  40de17:	outs   dx,DWORD PTR ds:[esi]
  40de18:	xor    DWORD PTR [esi+0x6f94e8f],edx
  40de1e:	mov    dh,0x2f
  40de20:	pop    esi
  40de21:	out    dx,eax
  40de22:	push   0x3962eb9c
  40de27:	xor    ebx,DWORD PTR fs:[esi+ecx*2+0x7748a4b3]
  40de2f:	cwde   
  40de30:	cmp    BYTE PTR [esi+0x502bef3a],bl
  40de36:	aaa    
  40de37:	inc    esp
  40de38:	data16 sub BYTE PTR [ecx+0x5e],ch
  40de3c:	hlt    
  40de3d:	je     0x40deb3
  40de3f:	(bad)  
  40de40:	fstp   TBYTE PTR [ebp+0x46]
  40de43:	jb     0x40de9d
  40de45:	inc    ebx
  40de46:	jle    0x40ddcd
  40de48:	addr16 pop ecx
  40de4a:	jg     0x40de91
  40de4c:	mov    cl,0xf9
  40de4e:	or     eax,0x672a21c3
  40de53:	sbb    ebx,DWORD PTR [eax+edi*2]
  40de56:	and    esp,DWORD PTR [ebx+0x79d922f2]
  40de5c:	cmp    al,0x58
  40de5e:	inc    eax
  40de5f:	jecxz  0x40de18
  40de61:	popa   
  40de62:	shl    BYTE PTR [ecx],1
  40de64:	das    
  40de65:	and    BYTE PTR [esp+edi*8],0x92
  40de69:	xor    BYTE PTR [esi+eax*4-0x5b],ch
  40de6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de6e:	dec    ebp
  40de6f:	ins    BYTE PTR es:[edi],dx
  40de70:	dec    edx
  40de71:	ss inc esi
  40de73:	sub    DWORD PTR [edx+0x1641a782],esi
  40de79:	mov    ebx,0xb90c60f
  40de7e:	inc    ebp
  40de7f:	shl    DWORD PTR [ebp+0xd],cl
  40de82:	cmp    BYTE PTR [edi+ebx*4+0x45f6cec],dl
  40de89:	jecxz  0x40de11
  40de8b:	add    eax,0x5af3d1b7
  40de90:	cdq    
  40de91:	mov    eax,0xa9313e5
  40de96:	cwde   
  40de97:	add    al,0x34
  40de99:	mov    al,ds:0x9166409c
  40de9e:	mov    BYTE PTR [edx-0x49],dh
  40dea1:	dec    edx
  40dea2:	mov    ch,0x9f
  40dea4:	mul    DWORD PTR [ebx]
  40dea6:	imul   ebx,DWORD PTR [ebx-0x45],0xe49eb26f
  40dead:	adc    edi,DWORD PTR [edi]
  40deaf:	sub    ecx,DWORD PTR [eax+0x7c]
  40deb2:	nop
  40deb3:	fild   WORD PTR ss:[ebx+0x3b]
  40deb7:	jnp    0x40de3c
  40deb9:	popa   
  40deba:	mov    edx,DWORD PTR [esi-0x32b3d286]
  40dec0:	xchg   DWORD PTR ds:0xdef855cf,edx
  40dec6:	in     al,0xe1
  40dec8:	pusha  
  40dec9:	jge    0x40de84
  40decb:	outs   dx,DWORD PTR ds:[esi]
  40decc:	jge    0x40de70
  40dece:	icebp  
  40decf:	add    eax,0x4424d922
  40ded4:	push   0x63
  40ded6:	push   es
  40ded7:	dec    edi
  40ded8:	into   
  40ded9:	xchg   DWORD PTR [ebp+0x17a1bf9],ebx
  40dedf:	sbb    eax,0xacf8581
  40dee4:	rol    DWORD PTR [edi+ebp*2-0x268ca4cc],cl
  40deeb:	mov    dl,0x57
  40deed:	dec    edx
  40deee:	fwait
  40deef:	inc    ebp
  40def0:	sub    ah,BYTE PTR [ecx+eiz*1+0x4bbc7b08]
  40def7:	cld    
  40def8:	push   ebx
  40def9:	push   eax
  40defa:	mov    edi,0x912a358f
  40deff:	enter  0xe687,0x12
  40df03:	lock test eax,0xaee2753b
  40df09:	jns    0x40df5d
  40df0b:	jp     0x40deda
  40df0d:	sbb    DWORD PTR [eax+0x7e],edx
  40df10:	push   ds
  40df11:	and    DWORD PTR [edi],0xb
  40df14:	mov    ebx,ds
  40df16:	int3   
  40df17:	mov    edi,0x1adaede7
  40df1c:	stos   BYTE PTR es:[edi],al
  40df1d:	push   esp
  40df1e:	cli    
  40df1f:	jnp    0x40df87
  40df21:	out    0xa,al
  40df23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df24:	fldcw  WORD PTR [edi+esi*4]
  40df27:	lahf   
  40df28:	push   edx
  40df29:	pop    eax
  40df2a:	popf   
  40df2b:	sahf   
  40df2c:	jmp    0xa723:0x46280b8f
  40df33:	xor    DWORD PTR [eax+eax*1-0x59],0xbef6f6af
  40df3b:	push   0xffffffb1
  40df3d:	lahf   
  40df3e:	mov    dl,0x8b
  40df40:	sti    
  40df41:	loopne 0x40df53
  40df43:	jecxz  0x40dedc
  40df45:	jbe    0x40dfba
  40df47:	and    DWORD PTR [esi+0x24541788],eax
  40df4d:	jne    0x40dfb2
  40df4f:	jl     0x40df5c
  40df51:	mov    BYTE PTR [esi],0xf2
  40df54:	repz add al,0x77
  40df57:	or     esp,esp
  40df59:	je     0x40df6c
  40df5b:	cli    
  40df5c:	jl     0x40df11
  40df5e:	loop   0x40df85
  40df60:	or     eax,DWORD PTR [eax]
  40df62:	xchg   edi,eax
  40df63:	(bad)  
  40df64:	inc    ebx
  40df65:	cmp    al,0x4a
  40df67:	(bad)  
  40df68:	test   al,0x36
  40df6a:	fsubp  st(5),st
  40df6c:	xor    DWORD PTR [edx+eax*8+0x7c4a7013],eax
  40df73:	sbb    al,0x32
  40df75:	outs   dx,DWORD PTR ds:[esi]
  40df76:	jnp    0x40df0e
  40df78:	aaa    
  40df79:	js     0x40dfd8
  40df7b:	mov    ebx,0xd55b02b9
  40df80:	adc    BYTE PTR [ebx-0x4a],0xe6
  40df84:	fmul   QWORD PTR [edx]
  40df86:	les    ebp,FWORD PTR [edi]
  40df88:	add    eax,0x5d454a4b
  40df8d:	add    BYTE PTR [eax+esi*8+0x7429d425],0x26
  40df95:	inc    esp
  40df96:	mul    BYTE PTR [esi]
  40df98:	stos   BYTE PTR es:[edi],al
  40df99:	test   ebx,ebx
  40df9b:	outs   dx,BYTE PTR ds:[esi]
  40df9c:	fwait
  40df9d:	cmp    eax,0x367e02e2
  40dfa2:	xchg   BYTE PTR [ecx+0x4d6e8af4],dl
  40dfa8:	shr    BYTE PTR [edx-0x406fd0f5],cl
  40dfae:	js     0x40df7b
  40dfb0:	outs   dx,DWORD PTR ds:[esi]
  40dfb1:	test   DWORD PTR [ecx+0x5bbe857b],edx
  40dfb7:	fcom   QWORD PTR [edi-0x110a2c22]
  40dfbd:	je     0x40e03e
  40dfbf:	or     ecx,DWORD PTR [ecx+0xd368618]
  40dfc5:	add    al,0xa
  40dfc7:	jae    0x40df8c
  40dfc9:	xor    DWORD PTR [esi-0x1767e51c],ecx
  40dfcf:	dec    esi
  40dfd0:	sbb    ah,0x5a
  40dfd3:	fbld   TBYTE PTR [eax-0x74e3c1f6]
  40dfd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfda:	(bad)  
  40dfdb:	std    
  40dfdc:	cli    
  40dfdd:	adc    eax,0x3878dbbd
  40dfe2:	cmp    eax,0xcd83d358
  40dfe7:	pop    ebx
  40dfe8:	dec    ebp
  40dfe9:	jnp    0x40dffa
  40dfeb:	xor    eax,0x2a0b6ac1
  40dff0:	sub    al,0xeb
  40dff2:	mov    DWORD PTR [ecx-0x45fa8a48],0x3f62f0bc
  40dffc:	push   esi
  40dffd:	jmp    0x40e05e
  40dfff:	dec    edi
  40e000:	mov    ah,0x2f
  40e002:	jmp    FWORD PTR [ecx+0x74]
  40e005:	and    BYTE PTR [esi-0x7e],0x68
  40e009:	xchg   DWORD PTR [esi+0x10a6e925],ebp
  40e00f:	mov    bl,BYTE PTR [edi+0x403233b0]
  40e015:	shr    DWORD PTR [edi-0x3b5a6056],0x35
  40e01c:	push   esp
  40e01d:	inc    edx
  40e01e:	cmc    
  40e01f:	aad    0xcb
  40e021:	cmc    
  40e022:	jns    0x40e045
  40e024:	or     BYTE PTR [ecx-0x55282c1b],bh
  40e02a:	mov    esp,0x5db612ce
  40e02f:	lahf   
  40e030:	sahf   
  40e031:	imul   ah
  40e033:	sbb    DWORD PTR [ecx],0x74a31b9
  40e039:	mov    DWORD PTR [ebp-0x780f3e57],ecx
  40e03f:	xor    ch,BYTE PTR [edi+0x7d]
  40e042:	cmp    DWORD PTR ds:0x6febda1,ecx
  40e048:	lods   al,BYTE PTR ds:[esi]
  40e049:	dec    edi
  40e04a:	outs   dx,DWORD PTR ds:[esi]
  40e04b:	cld    
  40e04c:	xchg   BYTE PTR [edx-0x60d2e75b],dh
  40e052:	inc    esp
  40e053:	xor    al,0x5c
  40e055:	fmul   QWORD PTR [edx]
  40e057:	jmp    0x5683:0x7587f9b3
  40e05e:	dec    ebp
  40e05f:	stos   BYTE PTR es:[edi],al
  40e060:	xchg   ebx,eax
  40e061:	stos   DWORD PTR es:[edi],eax
  40e062:	lahf   
  40e063:	inc    ebp
  40e064:	xlat   BYTE PTR ds:[ebx]
  40e065:	sub    eax,0xe2173455
  40e06a:	mov    edi,0xff90a8cd
  40e06f:	mov    esi,DWORD PTR [ecx]
  40e071:	stos   DWORD PTR es:[edi],eax
  40e072:	push   0x51fe93d7
  40e077:	pop    es
  40e078:	hlt    
  40e079:	fdiv   QWORD PTR [ecx-0x424aaa4d]
  40e07f:	imul   BYTE PTR [edi+0x675202d1]
  40e085:	rcr    BYTE PTR [esi-0x3b],cl
  40e088:	mov    esi,0x2c1aec1d
  40e08e:	xor    eax,0xe0a870d7
  40e093:	dec    esi
  40e094:	mov    esi,0x543937f1
  40e099:	test   bl,cl
  40e09b:	cmp    al,0xd6
  40e09d:	push   edi
  40e09e:	jbe    0x40e052
  40e0a0:	jae    0x40e0d5
  40e0a2:	mov    ds:0x4abe7e24,eax
  40e0a7:	and    esp,eax
  40e0a9:	lea    ebx,[ecx+0x164cb919]
  40e0af:	stc    
  40e0b0:	repz fcmovnu st,st(4)
  40e0b3:	push   es
  40e0b4:	push   esi
  40e0b5:	cs pop eax
  40e0b7:	inc    ebx
  40e0b8:	cmp    ebp,ecx
  40e0ba:	mov    DWORD PTR [eax+0x5d67152a],ebp
  40e0c0:	adc    edx,ebp
  40e0c2:	xchg   ecx,edx
  40e0c4:	mov    bl,0x27
  40e0c6:	mov    dl,0xaa
  40e0c8:	adc    BYTE PTR [edx-0x162532ee],0xea
  40e0cf:	push   esi
  40e0d0:	ret    
  40e0d1:	(bad)  
  40e0d3:	fwait
  40e0d4:	xchg   ecx,eax
  40e0d5:	out    dx,eax
  40e0d6:	frstor [esi]
  40e0d8:	pop    ebp
  40e0d9:	xchg   edi,eax
  40e0da:	mov    eax,0x1b2fe0a6
  40e0df:	mov    cl,bl
  40e0e1:	xchg   esi,eax
  40e0e2:	inc    esi
  40e0e3:	mov    DWORD PTR [eax+0x7f11b243],esi
  40e0e9:	dec    eax
  40e0ea:	(bad)  
  40e0eb:	lods   eax,DWORD PTR ds:[esi]
  40e0ec:	inc    ebp
  40e0ed:	pop    es
  40e0ee:	push   ebp
  40e0ef:	jae    0x40e0ff
  40e0f1:	stc    
  40e0f2:	adc    eax,0x6503fd8a
  40e0f7:	pop    esp
  40e0f8:	add    eax,0xb7a1e5ed
  40e0fd:	sbb    WORD PTR [ebp-0x35fe19dc],sp
  40e104:	mov    ebx,?
  40e106:	les    ebx,FWORD PTR [edi-0x1b]
  40e109:	je     0x40e0ca
  40e10b:	mov    dl,0x3e
  40e10d:	mov    esi,0x1232b73
  40e112:	repnz mov WORD PTR [ebx-0x68228a50],?
  40e119:	xchg   DWORD PTR [edi+0x7],ecx
  40e11c:	xor    eax,0x8a8039f9
  40e121:	rol    BYTE PTR [eax+0x5f452870],cl
  40e127:	in     al,dx
  40e128:	enter  0x68a1,0xf6
  40e12c:	fimul  WORD PTR [ebx+0x17]
  40e12f:	adc    bh,BYTE PTR [eax+0x123176aa]
  40e135:	shl    DWORD PTR ds:0xd917afed,0x7c
  40e13c:	mov    ds:0xbd1b3a82,eax
  40e141:	mov    ebp,0x3ff31ec5
  40e146:	fwait
  40e147:	jo     0x40e1b9
  40e149:	inc    edi
  40e14a:	sbb    DWORD PTR [eax],ecx
  40e14c:	int    0xc1
  40e14e:	out    dx,eax
  40e14f:	inc    edx
  40e150:	inc    edi
  40e151:	gs jno 0x40e19f
  40e154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e155:	xchg   ebx,eax
  40e156:	sub    bh,dh
  40e158:	in     eax,dx
  40e159:	cmc    
  40e15a:	mov    dl,0x5b
  40e15c:	pop    es
  40e15d:	into   
  40e15e:	mov    ebp,0x2e98e946
  40e163:	add    bl,BYTE PTR [eax]
  40e165:	mov    DWORD PTR [edi],0x406728c
  40e16b:	jb     0x40e106
  40e16d:	push   esp
  40e16e:	jmp    0x22f15ada
  40e173:	push   edx
  40e174:	jne    0x40e1e6
  40e176:	cmc    
  40e177:	lahf   
  40e178:	push   esp
  40e179:	cmp    ah,BYTE PTR [eax]
  40e17b:	push   es
  40e17c:	or     DWORD PTR [eax+0x4489b578],ebx
  40e182:	adc    ah,BYTE PTR [eax]
  40e184:	push   cs
  40e185:	xor    DWORD PTR [ebx+0x119a562d],esi
  40e18b:	mov    al,ds:0xfa2e4127
  40e190:	cmp    eax,DWORD PTR [eax-0x80]
  40e193:	imul   edi,ecx,0xffffffd6
  40e196:	mov    ebp,0xbf4e35a7
  40e19b:	scas   eax,DWORD PTR es:[edi]
  40e19c:	jne    0x40e191
  40e19e:	cld    
  40e19f:	mov    ebp,0x1dff60ad
  40e1a4:	jne    0x40e1e3
  40e1a6:	xlat   BYTE PTR ds:[ebx]
  40e1a7:	xchg   esi,eax
  40e1a8:	sub    eax,0x8d2f13a0
  40e1ad:	xor    eax,0x6eccd110
  40e1b2:	mov    esp,0x3144762c
  40e1b7:	pop    edi
  40e1b8:	pop    esi
  40e1b9:	or     esp,DWORD PTR [edx]
  40e1bb:	in     al,dx
  40e1bc:	mov    ch,0x26
  40e1be:	cmp    cl,BYTE PTR [edi+0x39df14d]
  40e1c4:	pop    esi
  40e1c5:	sahf   
  40e1c6:	xor    ebx,edi
  40e1c8:	movsx  edx,WORD PTR [ebx-0x72]
  40e1cc:	push   esp
  40e1cd:	popf   
  40e1ce:	mov    ebx,0xb8f9dfdc
  40e1d3:	xchg   edx,eax
  40e1d4:	call   0x60d3:0x5b42d342
  40e1db:	xchg   BYTE PTR ds:[ebx+0xc665fbe],bh
  40e1e2:	adc    dh,BYTE PTR [edi]
  40e1e4:	neg    DWORD PTR [ecx+eiz*1-0x1e0978c8]
  40e1eb:	stc    
  40e1ec:	jge    0x40e1f6
  40e1ee:	rcl    BYTE PTR [eax+0x79],1
  40e1f1:	cmc    
  40e1f2:	stc    
  40e1f3:	dec    ebp
  40e1f4:	mov    al,0x3c
  40e1f6:	aaa    
  40e1f7:	inc    esi
  40e1f8:	ficom  DWORD PTR [ebp-0x7cd493eb]
  40e1fe:	dec    esp
  40e1ff:	xchg   esp,eax
  40e200:	sbb    ecx,DWORD PTR [ebx]
  40e202:	pop    ebx
  40e203:	mov    cl,0xb1
  40e205:	pop    eax
  40e206:	das    
  40e207:	push   cs
  40e208:	std    
  40e209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e20c:	mov    edi,0xa20b7934
  40e211:	lock loop 0x40e1bc
  40e214:	out    dx,al
  40e215:	ja     0x40e1e2
  40e217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e218:	and    DWORD PTR [eax+0x35],esp
  40e21b:	in     al,dx
  40e21c:	and    al,0x79
  40e21f:	xchg   edx,eax
  40e220:	jmp    0x40e25a
  40e222:	popa   
  40e223:	mov    ds:0xb2fc3d8c,al
  40e228:	xor    dh,BYTE PTR [edx]
  40e22a:	popa   
  40e22b:	xor    eax,0x2bc9750d
  40e230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e231:	addr16 sbb edi,ebx
  40e234:	pop    eax
  40e235:	adc    eax,DWORD PTR [edi-0x6e]
  40e238:	dec    ecx
  40e239:	mov    es,WORD PTR [edx]
  40e23b:	xor    al,0x8f
  40e23d:	push   esp
  40e23e:	sub    al,0xcd
  40e240:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e241:	nop
  40e242:	shr    DWORD PTR ds:0xf24b5e73,1
  40e248:	aam    0xf8
  40e24a:	xchg   DWORD PTR [eax+0x45db32a1],edx
  40e250:	pushf  
  40e251:	jne    0x40e23b
  40e253:	jb     0x40e1eb
  40e255:	int3   
  40e256:	in     al,0x85
  40e258:	or     al,0xf8
  40e25a:	push   cs
  40e25b:	int3   
  40e25c:	(bad)  [edx]
  40e25e:	xor    BYTE PTR [esi-0x4d6ca909],bl
  40e264:	dec    esi
  40e265:	and    BYTE PTR [edi+0x32],0xb5
  40e269:	mov    ds:0xc1e63f58,eax
  40e26e:	and    BYTE PTR [ecx],bh
  40e270:	add    ch,0x91
  40e273:	mov    ebp,0xeb707ffc
  40e278:	repnz inc ecx
  40e27a:	jle    0x40e261
  40e27c:	push   es
  40e27d:	sahf   
  40e27e:	mov    al,ch
  40e280:	jno    0x40e256
  40e282:	arpl   WORD PTR [eax-0x6438c23],si
  40e288:	adc    bh,BYTE PTR [edi+0x4ecca0b7]
  40e28e:	xchg   ebp,eax
  40e28f:	hlt    
  40e290:	aam    0xb2
  40e292:	and    bl,BYTE PTR [edi]
  40e294:	xor    BYTE PTR [ebp+0x9],cl
  40e297:	and    esi,esp
  40e299:	push   ebp
  40e29a:	jmp    0xa2937f18
  40e29f:	test   DWORD PTR [edi],eax
  40e2a1:	in     eax,0xa2
  40e2a3:	ffree  st(7)
  40e2a5:	push   esi
  40e2a6:	mov    bh,0xe4
  40e2a8:	push   edx
  40e2a9:	xor    dh,BYTE PTR [ecx-0x1f]
  40e2ac:	imul   esi,DWORD PTR [esp+ebx*8],0x72
  40e2b0:	shl    bh,0x1b
  40e2b3:	jmp    0x458d9615
  40e2b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2b9:	pop    ss
  40e2ba:	(bad)  
  40e2bb:	pushf  
  40e2bc:	ret    0x1b2c
  40e2bf:	cli    
  40e2c0:	mov    gs,WORD PTR [edx-0x39]
  40e2c3:	lods   al,BYTE PTR ds:[esi]
  40e2c4:	mov    ecx,0xbb6d86b5
  40e2c9:	push   eax
  40e2ca:	mov    esi,0x3acc7b5d
  40e2cf:	mov    al,0x3
  40e2d1:	jb     0x40e308
  40e2d3:	int    0x32
  40e2d5:	sar    BYTE PTR [ecx+0x6e],1
  40e2d8:	mov    cs,WORD PTR [ecx+0x55]
  40e2db:	push   esi
  40e2dc:	cmp    eax,0xe9b4c48a
  40e2e1:	js     0x40e2a6
  40e2e3:	sbb    edx,edi
  40e2e5:	cwde   
  40e2e6:	inc    edx
  40e2e7:	pop    edx
  40e2e8:	xlat   BYTE PTR ds:[ebx]
  40e2e9:	xor    BYTE PTR [ebp+0x25aac2c3],0x7a
  40e2f0:	pushf  
  40e2f1:	and    dh,BYTE PTR [esp+eax*8+0x30800938]
  40e2f8:	loopne 0x40e379
  40e2fa:	cmp    al,0x84
  40e2fc:	lods   al,BYTE PTR ds:[esi]
  40e2fd:	std    
  40e2fe:	mov    ecx,0xc6ce0bee
  40e303:	jne    0x40e2ea
  40e305:	loopne 0x40e2b5
  40e307:	stos   BYTE PTR es:[edi],al
  40e308:	dec    esi
  40e309:	push   ebp
  40e30a:	xchg   edi,eax
  40e30b:	jecxz  0x40e337
  40e30d:	int3   
  40e30e:	jb     0x40e326
  40e310:	lock out 0xf,eax
  40e313:	and    ah,al
  40e315:	cs and ch,0xc8
  40e319:	mov    ecx,0x4baaf529
  40e31e:	(bad)  
  40e31f:	xor    eax,0x16396526
  40e324:	sub    DWORD PTR [esi+ebp*4],0x80c4e582
  40e32b:	adc    BYTE PTR ds:0xc9e75030,dh
  40e331:	dec    eax
  40e332:	sub    al,0xeb
  40e334:	fisttp WORD PTR [eax+0x411528e8]
  40e33a:	push   ss
  40e33b:	aad    0xcd
  40e33d:	rol    DWORD PTR [edi-0x62],0x6f
  40e341:	imul   edi,DWORD PTR [ecx-0x18],0x75
  40e345:	push   edi
  40e346:	rcr    BYTE PTR [edx-0x4e],1
  40e349:	push   0xffffff81
  40e34b:	clc    
  40e34c:	push   eax
  40e34d:	mov    DWORD PTR [edx-0x28],edx
  40e350:	sti    
  40e351:	push   ss
  40e352:	adc    DWORD PTR [edi+0x50],edx
  40e355:	sub    DWORD PTR [ebp+0x18],edi
  40e358:	jnp    0x40e31b
  40e35a:	jmp    0x40e2e5
  40e35c:	or     ch,bl
  40e35e:	mov    cl,0xd
  40e360:	fcmovb st,st(1)
  40e362:	mov    ecx,0xdf6aac76
  40e367:	dec    esi
  40e368:	stc    
  40e369:	call   0x15e9:0x14f9e9ee
  40e370:	gs aaa 
  40e372:	leave  
  40e373:	cmc    
  40e374:	mov    esi,0x37055080
  40e379:	jnp    0x40e3b1
  40e37b:	xlat   BYTE PTR ds:[ebx]
  40e37c:	adc    BYTE PTR [ebx+0x71626ec0],dl
  40e382:	push   esi
  40e383:	adc    eax,0xc4668bca
  40e388:	in     eax,dx
  40e389:	sbb    edi,DWORD PTR [edi]
  40e38b:	mov    ss,edx
  40e38d:	sti    
  40e38e:	je     0x40e3c6
  40e390:	mov    ecx,DWORD PTR [ebp+0x3e]
  40e393:	or     al,0xfa
  40e395:	rcl    dl,0x64
  40e398:	push   eax
  40e399:	cmp    BYTE PTR [esi+edi*2+0x5ee454cf],0x18
  40e3a1:	xchg   ebx,eax
  40e3a2:	or     edi,eax
  40e3a4:	mov    bh,BYTE PTR [ecx-0x1b27962]
  40e3aa:	xchg   esp,eax
  40e3ab:	in     al,0xa2
  40e3ad:	and    BYTE PTR [edx-0x55],dh
  40e3b0:	jle    0x40e3ea
  40e3b2:	jl     0x40e392
  40e3b4:	push   ss
  40e3b5:	or     edx,DWORD PTR [ecx]
  40e3b7:	popf   
  40e3b8:	cmp    bl,BYTE PTR [ebx+0x126798ef]
  40e3be:	cmp    ah,ch
  40e3c0:	xchg   esp,eax
  40e3c1:	leave  
  40e3c2:	scas   eax,DWORD PTR es:[edi]
  40e3c3:	xlat   BYTE PTR ds:[ebx]
  40e3c4:	sar    BYTE PTR [ebx+0x5d],1
  40e3c7:	popf   
  40e3c8:	out    dx,al
  40e3c9:	pop    esi
  40e3ca:	cli    
  40e3cb:	lock pop eax
  40e3cd:	xor    BYTE PTR [edx],dh
  40e3cf:	pop    ss
  40e3d0:	sbb    BYTE PTR [eax-0x29],0xa5
  40e3d4:	aaa    
  40e3d5:	mov    ds:0xb2727d65,al
  40e3da:	sub    BYTE PTR es:[edi],cl
  40e3dd:	pop    es
  40e3de:	into   
  40e3df:	stc    
  40e3e0:	xor    ebp,esi
  40e3e2:	pop    DWORD PTR ds:0xf588fa22
  40e3e8:	stc    
  40e3e9:	lahf   
  40e3ea:	pop    esi
  40e3eb:	xor    DWORD PTR [ecx+0x4e],ebx
  40e3ee:	and    DWORD PTR [ebx],ebx
  40e3f0:	jecxz  0x40e3d0
  40e3f2:	out    0x37,eax
  40e3f4:	jmp    0x40e3fc
  40e3f6:	lahf   
  40e3f7:	push   es
  40e3f8:	fst    QWORD PTR [eax-0x16]
  40e3fb:	jb     0x40e386
  40e3fd:	ja     0x40e3f4
  40e3ff:	stos   DWORD PTR es:[edi],eax
  40e400:	std    
  40e401:	xor    al,0x9a
  40e403:	dec    esi
  40e404:	mov    ah,0x7b
  40e406:	push   ss
  40e407:	jne    0x40e38f
  40e409:	cld    
  40e40a:	push   esp
  40e40b:	stc    
  40e40c:	mov    ds:0x5f9de9dd,eax
  40e411:	jg     0x40e3ee
  40e413:	or     dl,ch
  40e415:	mov    ecx,0x567dd8a7
  40e41a:	daa    
  40e41b:	jno    0x40e42b
  40e41d:	jp     0x40e423
  40e41f:	scas   eax,DWORD PTR es:[edi]
  40e420:	inc    ebx
  40e421:	or     DWORD PTR [edi+0x57],ecx
  40e424:	ror    DWORD PTR [ecx-0x2d],0xf6
  40e428:	mov    ch,0x3d
  40e42a:	pop    esp
  40e42b:	mov    ds:0x5310602,eax
  40e430:	lods   eax,DWORD PTR ds:[esi]
  40e431:	pop    ecx
  40e432:	clc    
  40e433:	icebp  
  40e434:	mov    ebp,0x16be051f
  40e439:	bound  ebp,QWORD PTR [edx-0xd3aa898]
  40e43f:	mov    ds:0x8fb00e83,eax
  40e444:	mov    ds:0x6e2f814f,eax
  40e449:	lea    ebx,[ebx]
  40e44b:	xchg   edx,eax
  40e44c:	das    
  40e44d:	leave  
  40e44e:	or     BYTE PTR [edx+ecx*8+0x1e677ebb],bl
  40e455:	(bad)  
  40e456:	pop    eax
  40e457:	mov    dl,0x13
  40e459:	push   edi
  40e45a:	sbb    dl,BYTE PTR [esi+0x34a10099]
  40e460:	mov    ah,0xff
  40e462:	add    eax,0xab4100a5
  40e467:	xor    al,0x23
  40e469:	or     eax,0xd4dddc74
  40e46e:	nop
  40e46f:	fiadd  DWORD PTR [eax]
  40e471:	cli    
  40e472:	mov    ah,0x77
  40e474:	clc    
  40e475:	call   0x298d94e2
  40e47a:	mov    edi,DWORD PTR ss:[ebp+0x69]
  40e47e:	repnz cld 
  40e480:	add    eax,edi
  40e482:	cmp    edx,ecx
  40e484:	inc    ebx
  40e485:	int3   
  40e486:	pop    ebx
  40e487:	sbb    esi,DWORD PTR [edx-0x29fc4b0d]
  40e48d:	mov    ds:0x9cf6b1bb,eax
  40e492:	fsub   DWORD PTR [ecx-0x77e875f5]
  40e498:	fldcw  WORD PTR [esi+0x5fa72d66]
  40e49e:	push   eax
  40e49f:	sbb    eax,0xa08811f3
  40e4a4:	jecxz  0x40e448
  40e4a6:	sub    edx,DWORD PTR [eax+0x49]
  40e4a9:	(bad)  [edx+0x68]
  40e4ac:	dec    eax
  40e4ad:	mov    ebx,0xb016c351
  40e4b2:	dec    edi
  40e4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4b4:	sub    eax,0x1ae1be2f
  40e4b9:	jb     0x40e51e
  40e4bb:	xchg   edx,eax
  40e4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4bd:	mov    esi,0x2f17a652
  40e4c2:	jmp    0x40e464
  40e4c4:	cmp    bh,BYTE PTR [edi]
  40e4c6:	int    0xdf
  40e4c8:	pop    ss
  40e4c9:	mov    ds:0x510b70de,al
  40e4ce:	lea    ebp,[ecx-0x79]
  40e4d1:	mov    dh,0xf5
  40e4d3:	xchg   esi,eax
  40e4d4:	fs retf 
  40e4d6:	lahf   
  40e4d7:	or     edi,edx
  40e4d9:	hlt    
  40e4da:	jecxz  0x40e538
  40e4dc:	sti    
  40e4dd:	psllw  mm2,mm2
  40e4e0:	and    BYTE PTR [edi-0x5a],ah
  40e4e3:	dec    ecx
  40e4e4:	retf   
  40e4e5:	cmp    eax,0x5dc42c3e
  40e4ea:	ret    0xd451
  40e4ed:	jmp    0x40e4a8
  40e4ef:	add    BYTE PTR [esp+edx*4+0x7d085e9b],bh
  40e4f6:	data16 scas al,BYTE PTR es:[edi]
  40e4f8:	cwde   
  40e4f9:	xchg   esi,eax
  40e4fa:	out    0x3e,al
  40e4fc:	jnp    0x40e51f
  40e4fe:	inc    esi
  40e4ff:	jo     0x40e55c
  40e501:	xchg   edx,eax
  40e502:	cmp    esp,DWORD PTR [eax-0xbf16b5b]
  40e508:	inc    ecx
  40e509:	bswap  ebp
  40e50b:	mov    dl,0xa3
  40e50d:	inc    eax
  40e50e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e50f:	mov    fs,WORD PTR [edx-0x2186467b]
  40e515:	mov    ds:0x18dc1f19,eax
  40e51a:	inc    ebp
  40e51b:	div    edi
  40e51d:	or     BYTE PTR [eax],dl
  40e51f:	fwait
  40e520:	enter  0x4f95,0xf6
  40e524:	push   ecx
  40e525:	jb     0x40e518
  40e527:	lock hlt 
  40e529:	popa   
  40e52a:	mov    ah,0x59
  40e52c:	jg     0x40e58a
  40e52e:	rcl    BYTE PTR [ecx-0x34],1
  40e531:	sbb    ch,BYTE PTR [esi-0xd]
  40e534:	adc    BYTE PTR [edi-0x37],bl
  40e537:	pop    ds
  40e538:	mov    edi,0x1757f21d
  40e53d:	stos   BYTE PTR es:[edi],al
  40e53e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e53f:	retf   0x3b42
  40e542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e543:	(bad)  
  40e544:	jg     0x40e548
  40e546:	jmp    0x40e4fa
  40e548:	xor    ebx,DWORD PTR [esi]
  40e54a:	fsubrp st(4),st
  40e54c:	jecxz  0x40e584
  40e54e:	and    al,0x88
  40e550:	or     bh,BYTE PTR [ebx]
  40e552:	leave  
  40e553:	ja     0x40e552
  40e555:	push   esp
  40e556:	fwait
  40e557:	push   ebx
  40e558:	and    edx,0x5d6953fe
  40e55e:	mov    ebx,DWORD PTR [esi-0x59bf1415]
  40e564:	lea    esi,ds:0x818a2128
  40e56a:	or     bl,bh
  40e56c:	daa    
  40e56d:	xor    al,0x7b
  40e56f:	(bad)  
  40e570:	aad    0x8e
  40e572:	jae    0x40e5b3
  40e574:	xchg   edx,eax
  40e575:	popf   
  40e576:	daa    
  40e577:	test   DWORD PTR [ebp+0x48],esi
  40e57a:	mov    esp,0x4373b76a
  40e57f:	jmp    0x2140:0x66fd05cc
  40e586:	(bad)  
  40e587:	push   ds
  40e588:	(bad)  
  40e589:	hlt    
  40e58a:	push   ebx
  40e58b:	jecxz  0x40e5fd
  40e58d:	and    bl,ah
  40e58f:	mov    ds:0x76b3b3ec,al
  40e594:	shr    DWORD PTR [esi+0x4b],1
  40e597:	lods   eax,DWORD PTR ds:[esi]
  40e598:	inc    eax
  40e599:	lds    esp,FWORD PTR [ebx-0x3ad3bbbe]
  40e59f:	xor    al,0xa7
  40e5a1:	sub    eax,0x292990fd
  40e5a6:	jle    0x40e5d2
  40e5a8:	cmc    
  40e5a9:	sub    eax,0x3179f829
  40e5ae:	ss icebp 
  40e5b0:	adc    BYTE PTR [esi-0x5c],0xf
  40e5b4:	sahf   
  40e5b5:	mov    cl,0x1c
  40e5b7:	pop    es
  40e5b8:	int    0x65
  40e5ba:	in     al,dx
  40e5bb:	adc    eax,0x596f7636
  40e5c0:	fwait
  40e5c1:	dec    eax
  40e5c2:	sub    al,0x37
  40e5c4:	dec    eax
  40e5c5:	add    eax,0xdd82e170
  40e5ca:	call   0xbf24:0xf26f725a
  40e5d1:	cmp    BYTE PTR [ecx+0x282bec37],0xa
  40e5d8:	rol    edi,cl
  40e5da:	cld    
  40e5db:	(bad)  
  40e5dd:	cmp    BYTE PTR ds:[eax],dh
  40e5e0:	or     al,0xda
  40e5e2:	jle    0x40e5bf
  40e5e4:	or     DWORD PTR [eax],ebp
  40e5e6:	add    al,0x18
  40e5e8:	pop    ebp
  40e5e9:	sbb    bh,dl
  40e5eb:	pop    es
  40e5ec:	adc    dl,bl
  40e5ee:	or     DWORD PTR [edx-0x7d],0x414ddf3d
  40e5f5:	jmp    0xc18a9c88
  40e5fa:	adc    bl,0xd1
  40e5fd:	mov    ch,0x51
  40e5ff:	test   eax,ebx
  40e601:	aas    
  40e602:	clc    
  40e603:	jno    0x40e66c
  40e605:	(bad)  
  40e606:	out    0x8e,eax
  40e608:	imul   esp,DWORD PTR [esi],0x1ee919c2
  40e60e:	daa    
  40e60f:	sub    ebx,0x4b6cc1dc
  40e615:	add    eax,0xb8a3ddb0
  40e61a:	shl    BYTE PTR [eax+0x2d],0x69
  40e61e:	or     al,0xb8
  40e620:	sbb    ecx,0xffffffe3
  40e623:	or     edi,ecx
  40e625:	sbb    ah,0xa0
  40e628:	fwait
  40e629:	out    dx,al
  40e62a:	loopne 0x40e631
  40e62c:	dec    edi
  40e62d:	mov    bl,0x3b
  40e62f:	outs   dx,BYTE PTR ds:[esi]
  40e630:	push   es
  40e631:	jl     0x40e6a7
  40e633:	pop    es
  40e634:	out    0x97,eax
  40e636:	mov    ds:0x6abbf424,eax
  40e63b:	fidiv  DWORD PTR es:[ebp-0x42c27753]
  40e642:	push   0x26
  40e644:	mov    eax,ds:0xb744d4bf
  40e649:	mov    cl,0xae
  40e64b:	loopne 0x40e5d7
  40e64d:	(bad)  
  40e64e:	jnp    0x40e689
  40e650:	pop    DWORD PTR [ebx]
  40e652:	psubsw mm6,QWORD PTR [edi-0x78]
  40e656:	sub    BYTE PTR [eax+0x27],al
  40e659:	cmp    ebx,ebx
  40e65b:	leave  
  40e65c:	outs   dx,BYTE PTR ds:[esi]
  40e65d:	push   ss
  40e65e:	and    al,0x4b
  40e660:	pop    es
  40e661:	in     eax,0xc6
  40e663:	add    eax,0x4f43924c
  40e668:	dec    edi
  40e669:	nop
  40e66a:	xlat   BYTE PTR ds:[ebx]
  40e66b:	jo     0x40e622
  40e66d:	imul   ebp,DWORD PTR [ebx],0x67
  40e670:	mov    ds:0x53f2ccfa,eax
  40e675:	leave  
  40e676:	loopne 0x40e66f
  40e678:	add    eax,DWORD PTR [esp+edi*8+0x3512dc4b]
  40e67f:	jns    0x40e612
  40e681:	pop    edi
  40e682:	jae    0x40e686
  40e684:	sub    ch,ch
  40e686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e687:	dec    eax
  40e688:	pop    ebx
  40e689:	test   al,0x72
  40e68b:	mov    ds:0xe8286ffb,eax
  40e690:	stos   BYTE PTR es:[edi],al
  40e691:	sti    
  40e692:	lods   eax,DWORD PTR ds:[esi]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	stos   DWORD PTR es:[edi],eax
  40e695:	add    BYTE PTR ds:0xc0e860e1,bh
  40e69b:	fcomp  DWORD PTR [ebx-0x65d5eda4]
  40e6a1:	xchg   esp,eax
  40e6a2:	in     al,dx
  40e6a3:	xchg   ecx,eax
  40e6a4:	xor    DWORD PTR [esi],eax
  40e6a6:	scas   al,BYTE PTR es:[edi]
  40e6a7:	cdq    
  40e6a8:	lea    eax,[edx+ebp*2]
  40e6ab:	or     esi,DWORD PTR [edx+0x48ec8df5]
  40e6b1:	dec    esp
  40e6b2:	jno    0x40e669
  40e6b4:	xor    al,0x8c
  40e6b6:	add    esp,edi
  40e6b8:	push   edi
  40e6b9:	pop    edx
  40e6ba:	cvtps2pi mm6,xmm0
  40e6bd:	mov    cl,0x2b
  40e6bf:	call   0x718a:0x9f33a397
  40e6c6:	arpl   si,di
  40e6c8:	inc    esi
  40e6c9:	or     dl,BYTE PTR [ebx+0x57]
  40e6cc:	out    dx,al
  40e6cd:	ss push cs
  40e6cf:	pop    es
  40e6d0:	push   ss
  40e6d1:	add    dl,bh
  40e6d3:	mov    eax,ds:0x8c8f8c3e
  40e6d8:	popa   
  40e6d9:	pop    eax
  40e6da:	addr16 (bad) 
  40e6dc:	mov    ecx,0x172cdcde
  40e6e2:	xchg   ebp,eax
  40e6e3:	mov    bl,0xe7
  40e6e5:	fstp   TBYTE PTR [esi-0x62]
  40e6e8:	xchg   edi,eax
  40e6e9:	sbb    DWORD PTR [ebp-0x44],0xffffffe6
  40e6ed:	fiadd  WORD PTR ds:0x5c0f9997
  40e6f3:	imul   edi,edi,0x90c32ab1
  40e6f9:	push   ebx
  40e6fa:	cmp    DWORD PTR [ebx+0x3d],ebx
  40e6fd:	(bad)  
  40e6ff:	fst    QWORD PTR [edi+0x5013ef10]
  40e705:	add    dl,BYTE PTR [esi]
  40e707:	push   ds
  40e708:	test   eax,0x6782c790
  40e70d:	lock xchg ebp,eax
  40e70f:	imul   esi,DWORD PTR [ecx],0xffffffe2
  40e712:	xchg   ebp,eax
  40e713:	inc    ebx
  40e714:	mov    DWORD PTR [eax+0x117461a2],ebp
  40e71a:	scas   al,BYTE PTR es:[edi]
  40e71b:	inc    edx
  40e71c:	dec    ecx
  40e71d:	mov    dl,BYTE PTR [ecx-0xa]
  40e720:	in     al,0xd8
  40e722:	jnp    0x40e6de
  40e724:	and    bh,BYTE PTR [ebp-0x56b0781f]
  40e72a:	das    
  40e72b:	push   edx
  40e72c:	pop    edi
  40e72d:	xchg   ebp,eax
  40e72e:	inc    esp
  40e72f:	dec    edi
  40e730:	mov    esp,DWORD PTR [edx+0x67c59266]
  40e736:	lods   eax,DWORD PTR ds:[esi]
  40e737:	popw   ds
  40e739:	fs mov edx,0x36e60611
  40e73f:	add    BYTE PTR [ecx+0x2c],bl
  40e742:	xchg   ebx,eax
  40e743:	push   cs
  40e744:	pop    esi
  40e745:	xchg   edx,eax
  40e746:	and    DWORD PTR [edi-0x24],0xffffffe5
  40e74a:	xchg   edi,eax
  40e74b:	or     cl,BYTE PTR [edx-0x2bd2a321]
  40e751:	push   es
  40e752:	inc    edi
  40e753:	aam    0xd4
  40e755:	arpl   WORD PTR [ebp+0x16],si
  40e758:	cmp    ecx,DWORD PTR [ebx]
  40e75a:	std    
  40e75b:	or     BYTE PTR ss:[edi-0x3d4d74f7],dl
  40e762:	nop
  40e763:	outs   dx,BYTE PTR ds:[esi]
  40e764:	dec    ebp
  40e765:	es mov dh,bl
  40e768:	mov    ch,0xa1
  40e76a:	jecxz  0x40e6f5
  40e76c:	je     0x40e787
  40e76e:	shl    BYTE PTR [esi+0x29062998],0xe
  40e775:	ror    DWORD PTR [ecx],0x89
  40e778:	dec    edi
  40e779:	int3   
  40e77a:	fistp  WORD PTR [edx+0x6e0421fb]
  40e780:	std    
  40e781:	jl     0x40e751
  40e783:	test   DWORD PTR [esi+0x33509c24],0xea41d64
  40e78d:	xor    eax,0x1357a861
  40e792:	pop    ecx
  40e793:	mov    eax,ds:0x9201edd4
  40e798:	in     al,0x9f
  40e79a:	push   0x1eea32bf
  40e79f:	rcr    BYTE PTR [edi+0x7441a584],0xc9
  40e7a6:	xlat   BYTE PTR ds:[ebx]
  40e7a7:	pop    ds
  40e7a8:	dec    edx
  40e7a9:	push   ecx
  40e7aa:	ret    0xf3cb
  40e7ad:	dec    ebx
  40e7ae:	fisub  DWORD PTR [ecx]
  40e7b0:	loopne 0x40e7d3
  40e7b2:	cdq    
  40e7b3:	ficomp DWORD PTR [esi]
  40e7b5:	lods   al,BYTE PTR ds:[esi]
  40e7b6:	(bad)  
  40e7b7:	aam    0xee
  40e7b9:	sub    eax,0x25ad3672
  40e7be:	repnz add esp,edi
  40e7c1:	xchg   edx,eax
  40e7c2:	retf   0x666d
  40e7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7c6:	frstor [ebx-0x5b]
  40e7c9:	or     al,0xae
  40e7cb:	sahf   
  40e7cc:	outs   dx,BYTE PTR ds:[esi]
  40e7cd:	mov    WORD PTR [eax+esi*4-0x7bcb95af],es
  40e7d4:	mov    DWORD PTR [edx],eax
  40e7d6:	inc    ebp
  40e7d7:	fwait
  40e7d8:	xor    eax,0xfc5528c5
  40e7dd:	mov    edx,ss
  40e7df:	sub    BYTE PTR [eax],0x45
  40e7e2:	inc    edx
  40e7e3:	jns    0x40e83e
  40e7e5:	stos   DWORD PTR es:[edi],eax
  40e7e6:	jmp    0x40e83c
  40e7e8:	or     bl,0xac
  40e7eb:	inc    edx
  40e7ec:	ds jo  0x40e7dd
  40e7ef:	pop    edx
  40e7f0:	je     0x40e7f3
  40e7f2:	xchg   esp,eax
  40e7f3:	sub    DWORD PTR [ecx+0x92a81ff],ebx
  40e7f9:	test   DWORD PTR [ecx+0x34],esp
  40e7fc:	adc    eax,0x3410144
  40e801:	pop    ebx
  40e802:	jns    0x40e81f
  40e804:	lods   eax,DWORD PTR ds:[esi]
  40e805:	test   eax,0x5551248d
  40e80a:	in     eax,0x55
  40e80c:	push   ebp
  40e80d:	test   al,0x8d
  40e80f:	pushf  
  40e810:	jnp    0x40e888
  40e812:	sbb    eax,DWORD PTR [esi+0x0]
  40e815:	sub    bl,BYTE PTR [ecx+edi*8-0x4e7d09bc]
  40e81c:	test   ebx,esp
  40e81e:	mov    esp,0x87ac69d
  40e823:	sahf   
  40e824:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e825:	push   ebp
  40e826:	inc    eax
  40e827:	adc    esp,DWORD PTR [ebx]
  40e829:	push   eax
  40e82a:	fs cmc 
  40e82c:	das    
  40e82d:	inc    ebp
  40e82e:	or     esp,DWORD PTR [edi+ebx*1]
  40e831:	mov    ds:0xbcf820e7,al
  40e836:	add    BYTE PTR [edi],dh
  40e838:	and    eax,0xfea5405d
  40e83d:	in     eax,dx
  40e83e:	xor    dl,cl
  40e840:	sbb    DWORD PTR [ecx+ecx*2],0x61
  40e844:	ret    
  40e845:	lahf   
  40e846:	addr16 dec ecx
  40e848:	adc    BYTE PTR [ebp-0x376e9aa9],al
  40e84e:	ins    DWORD PTR es:[edi],dx
  40e84f:	push   esp
  40e850:	call   DWORD PTR ds:0xe847862a
  40e856:	push   0xa43f74da
  40e85b:	shr    ebx,0xf0
  40e85e:	(bad)  
  40e85f:	nop
  40e860:	and    BYTE PTR [edi-0x18336e80],ch
  40e866:	fstp   st(6)
  40e868:	leave  
  40e869:	dec    eax
  40e86a:	stc    
  40e86b:	jle    0x40e87f
  40e86d:	test   BYTE PTR [edi],0xfc
  40e870:	in     al,0x2e
  40e872:	test   al,0xc2
  40e874:	or     eax,DWORD PTR [ecx]
  40e876:	sub    BYTE PTR [esi],ch
  40e878:	dec    ebx
  40e879:	aam    0x79
  40e87b:	(bad)  
  40e87c:	xor    esp,edx
  40e87e:	sbb    eax,0x9f62a3a5
  40e883:	add    al,BYTE PTR [esi+0x7b]
  40e886:	(bad)
  40e889:	ins    DWORD PTR es:[edi],dx
  40e88a:	ins    BYTE PTR es:[edi],dx
  40e88b:	test   BYTE PTR [edx-0x23f24bea],ch
  40e891:	jmp    0x6cc2f74d
  40e896:	inc    ebp
  40e897:	mov    ebx,0xe69058ab
  40e89c:	cld    
  40e89d:	sbb    al,0x13
  40e89f:	xchg   edi,eax
  40e8a0:	mov    ebp,0xb456548f
  40e8a5:	addr16 sahf 
  40e8a7:	add    al,0x5b
  40e8a9:	and    DWORD PTR [ecx+0x5e],edx
  40e8ac:	pop    ds
  40e8ad:	adc    eax,0x5d4e2bb0
  40e8b2:	pop    ebx
  40e8b3:	push   esi
  40e8b4:	ror    BYTE PTR [eax+0x48],1
  40e8b7:	loopne 0x40e8c5
  40e8b9:	repnz outs dx,BYTE PTR ds:[esi]
  40e8bb:	inc    edi
  40e8bc:	int3   
  40e8bd:	add    eax,0x480b4ed3
  40e8c2:	push   eax
  40e8c3:	int    0x83
  40e8c5:	xchg   DWORD PTR [ebp+esi*4-0x37],esp
  40e8c9:	rcr    DWORD PTR [edi+eax*8+0x3d897d64],1
  40e8d0:	add    dh,BYTE PTR [ecx+edx*8-0x6f]
  40e8d4:	fstp   DWORD PTR [edx+0x2a]
  40e8d7:	xchg   edx,eax
  40e8d8:	mov    ds:0x95cce6ce,eax
  40e8dd:	xor    eax,0x91691a28
  40e8e2:	mov    ds:0xfaa11c6c,eax
  40e8e7:	sar    BYTE PTR [edx-0x7b935cba],1
  40e8ed:	sub    DWORD PTR [edx-0x47e49c1b],esi
  40e8f3:	add    eax,0x79255fcc
  40e8f8:	and    BYTE PTR [ecx+0xde4d457],0xe2
  40e8ff:	mov    edi,0xae523b0a
  40e904:	push   es
  40e905:	pop    es
  40e906:	inc    edi
  40e907:	out    dx,al
  40e908:	loope  0x40e88f
  40e90a:	jnp    0x40e963
  40e90c:	shr    edi,1
  40e90e:	add    ebx,DWORD PTR [edi]
  40e910:	dec    edx
  40e911:	dec    eax
  40e912:	adc    edi,ecx
  40e914:	sub    al,0x54
  40e916:	dec    ecx
  40e917:	pop    ds
  40e918:	das    
  40e919:	or     eax,0x354f9a8d
  40e91e:	adc    BYTE PTR ss:[edi],bh
  40e921:	push   esi
  40e922:	dec    ebp
  40e923:	daa    
  40e924:	sbb    eax,DWORD PTR [edi+0x9]
  40e927:	aas    
  40e928:	xchg   DWORD PTR [ecx],eax
  40e92a:	jl     0x40e917
  40e92c:	mov    al,BYTE PTR [eax+edx*4]
  40e92f:	dec    esi
  40e930:	stc    
  40e931:	push   0xffffffc1
  40e933:	mov    ecx,0xaa650425
  40e938:	add    DWORD PTR [ebx],edi
  40e93a:	adc    al,0xc4
  40e93c:	jp     0x40e8e0
  40e93e:	bound  esp,QWORD PTR [edx-0x47]
  40e941:	jg     0x40e98f
  40e943:	aad    0xdd
  40e945:	out    0xc0,eax
  40e947:	shl    BYTE PTR [ebx-0x19036651],0x57
  40e94e:	pop    esp
  40e94f:	pop    esi
  40e950:	pop    ecx
  40e951:	mov    ah,0xc0
  40e953:	jmp    FWORD PTR [edx+0x5e441083]
  40e959:	ret    
  40e95a:	fistp  QWORD PTR [ebx+0x4b]
  40e95d:	jle    0x40e9c1
  40e95f:	fwait
  40e960:	pop    ecx
  40e961:	or     BYTE PTR [edi-0x3daea285],ah
  40e967:	icebp  
  40e968:	scas   al,BYTE PTR es:[edi]
  40e969:	(bad)  [edx]
  40e96b:	pop    esi
  40e96c:	sbb    BYTE PTR [ecx+ebx*2+0x19],dh
  40e970:	add    ebx,DWORD PTR [ebp+edi*4-0xa]
  40e974:	xor    cl,dl
  40e976:	or     dl,BYTE PTR [edi+eax*4+0xc]
  40e97a:	cwde   
  40e97b:	ins    BYTE PTR es:[edi],dx
  40e97c:	adc    DWORD PTR [ecx-0x72ba6324],ebp
  40e982:	push   ecx
  40e983:	mov    bh,0x81
  40e985:	or     DWORD PTR [ecx],ebx
  40e987:	sbb    eax,0xa9b29a8c
  40e98c:	pusha  
  40e98d:	mov    cl,0x52
  40e98f:	push   ds
  40e990:	dec    esp
  40e991:	retf   0xeb42
  40e994:	or     DWORD PTR ds:0xb0266bb4,edx
  40e99a:	fmul   DWORD PTR [ecx]
  40e99c:	sub    BYTE PTR [ebx],0x1a
  40e99f:	addr16 mov al,ds:0x4ed
  40e9a3:	push   esp
  40e9a4:	mov    al,ds:0x46c71fe0
  40e9a9:	(bad)  [ecx]
  40e9ab:	xchg   BYTE PTR [edi+0x5],ah
  40e9ae:	mov    ecx,0xab6cbf0
  40e9b3:	pop    ecx
  40e9b4:	adc    BYTE PTR [esi],0xbb
  40e9b7:	std    
  40e9b8:	shl    BYTE PTR ds:0x6a9ea4d4,1
  40e9be:	sar    DWORD PTR [edi+0x384a55b4],1
  40e9c4:	add    ah,BYTE PTR [eax-0x57be63c8]
  40e9ca:	pop    edx
  40e9cb:	add    DWORD PTR [edx],0x30
  40e9ce:	mov    dl,0xdd
  40e9d0:	jae    0x40e9ee
  40e9d2:	loope  0x40ea2d
  40e9d4:	shl    DWORD PTR [eax-0x60],0x90
  40e9d8:	mov    eax,DWORD PTR [eax-0xc4dab9d]
  40e9de:	imul   edx,ebp,0x1a
  40e9e1:	push   ecx
  40e9e2:	xchg   ebp,eax
  40e9e3:	dec    edi
  40e9e4:	dec    edx
  40e9e5:	dec    ebx
  40e9e6:	addr16 popa 
  40e9e8:	xchg   esp,eax
  40e9e9:	jp     0x40ea25
  40e9eb:	adc    al,BYTE PTR [edi]
  40e9ed:	aaa    
  40e9ee:	jmp    0x539:0x9329f270
  40e9f5:	cmp    al,0xcc
  40e9f7:	js     0x40e9c8
  40e9f9:	mov    eax,ds:0xa4987cba
  40e9fe:	sbb    BYTE PTR [eax+0x59da308e],dh
  40ea04:	and    eax,0x969ce1a7
  40ea09:	loope  0x40ea6a
  40ea0b:	cld    
  40ea0c:	(bad)  
  40ea0d:	cmp    eax,0xbf57f9f0
  40ea12:	mov    esp,0x7b05a66a
  40ea17:	scas   al,BYTE PTR es:[edi]
  40ea18:	sub    eax,esi
  40ea1a:	ja     0x40ea79
  40ea1c:	jmp    0x1c2b:0xaf84efa5
  40ea23:	sub    edi,DWORD PTR [ecx]
  40ea25:	shl    DWORD PTR ds:0x28eec409,1
  40ea2b:	mov    ?,WORD PTR [esi-0x22391bdd]
  40ea31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea33:	lea    esp,[eax+0x583cf623]
  40ea39:	(bad)  
  40ea3a:	or     eax,0xe122263d
  40ea3f:	xchg   edi,eax
  40ea40:	(bad)  
  40ea41:	cmp    ecx,edx
  40ea43:	mov    gs,WORD PTR [edx+eax*2+0x4]
  40ea47:	adc    edi,DWORD PTR [edi-0x74]
  40ea4a:	pop    DWORD PTR [edi-0x385fb527]
  40ea50:	aas    
  40ea51:	and    eax,0x3ce6ed65
  40ea56:	xor    eax,0xafbce80c
  40ea5b:	push   esp
  40ea5c:	xchg   edx,eax
  40ea5d:	call   0x4c53:0x1da4e82f
  40ea64:	cld    
  40ea65:	ficomp WORD PTR [eax]
  40ea67:	scas   al,BYTE PTR es:[edi]
  40ea68:	mov    cs,WORD PTR [esi+edi*1]
  40ea6b:	sub    bh,BYTE PTR [edx+edx*1]
  40ea6e:	dec    esp
  40ea6f:	or     eax,0x8fbe1bef
  40ea74:	cmp    DWORD PTR [edx-0x4cb6dade],edx
  40ea7a:	cmp    BYTE PTR [ecx+eax*2-0x76],0xdc
  40ea7f:	aam    0xca
  40ea81:	xor    DWORD PTR [ebx],ebp
  40ea83:	mov    al,ds:0x4b773097
  40ea88:	push   esp
  40ea89:	sub    edx,DWORD PTR [esi]
  40ea8b:	xor    DWORD PTR [edi-0x78c8d263],edi
  40ea91:	retf   
  40ea92:	xchg   ebp,eax
  40ea93:	mov    bl,0x44
  40ea95:	(bad)  
  40ea96:	cmp    bh,BYTE PTR [eax-0x2aeecfac]
  40ea9c:	ss fld1 
  40ea9f:	cs mov bl,0x36
  40eaa2:	sbb    bl,ch
  40eaa4:	stos   BYTE PTR es:[edi],al
  40eaa5:	lahf   
  40eaa6:	out    dx,eax
  40eaa7:	ja     0x40eab6
  40eaa9:	pop    esp
  40eaaa:	jle    0x40ea81
  40eaac:	mov    esp,esi
  40eaae:	pop    ecx
  40eaaf:	push   0xffffff89
  40eab1:	cmc    
  40eab2:	sahf   
  40eab3:	fadd   QWORD PTR cs:[ebp-0x48dc4372]
  40eaba:	shl    DWORD PTR ds:[ebx],0x89
  40eabe:	loopne 0x40eb06
  40eac0:	jbe    0x40ea7d
  40eac2:	xlat   BYTE PTR ds:[ebx]
  40eac3:	push   0x1c
  40eac5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac6:	fdivr  QWORD PTR [edi]
  40eac8:	mov    cs:0x68621937,al
  40eace:	add    ebp,ebx
  40ead0:	into   
  40ead1:	ins    BYTE PTR es:[edi],dx
  40ead2:	dec    ebx
  40ead3:	sub    BYTE PTR [ebx-0x75934a99],bh
  40ead9:	nop
  40eada:	pop    esi
  40eadb:	cwde   
  40eadc:	xor    ah,BYTE PTR [edx]
  40eade:	ins    BYTE PTR es:[edi],dx
  40eadf:	dec    esi
  40eae0:	loop   0x40eb2f
  40eae2:	pop    ecx
  40eae3:	arpl   WORD PTR [eax],ax
  40eae5:	jle    0x40eb44
  40eae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae8:	loope  0x40ea8b
  40eaea:	repz jp 0x40ea9c
  40eaed:	pop    ecx
  40eaee:	inc    ecx
  40eaef:	xchg   ebp,eax
  40eaf0:	pop    edi
  40eaf1:	(bad)
  40eaf4:	mov    BYTE PTR [ebp-0x75],dh
  40eaf7:	sub    al,0x42
  40eaf9:	jp     0x40ea8d
  40eafb:	addr16 jbe 0x40ea96
  40eafe:	inc    esi
  40eaff:	fdiv   DWORD PTR [eax]
  40eb01:	inc    edx
  40eb02:	xchg   BYTE PTR [edx+edi*4-0x1d],al
  40eb06:	test   DWORD PTR [ebx+0x62],ecx
  40eb09:	mov    ch,0xb9
  40eb0b:	pop    eax
  40eb0c:	fadd   DWORD PTR [edi+0x29e1ed5e]
  40eb12:	cmp    eax,0xc08a8175
  40eb17:	jge    0x40eb39
  40eb19:	and    DWORD PTR [ebx-0x74dda085],edi
  40eb1f:	sbb    bh,BYTE PTR [esi]
  40eb21:	scas   eax,DWORD PTR es:[edi]
  40eb22:	mov    cl,BYTE PTR [eax-0x455f8a20]
  40eb28:	mov    ss,edi
  40eb2a:	sbb    bh,0x9c
  40eb2d:	in     eax,dx
  40eb2e:	sbb    al,0x3d
  40eb30:	or     esi,0x52
  40eb33:	and    eax,0xd87ec3e7
  40eb38:	jg     0x40eaf6
  40eb3a:	out    dx,eax
  40eb3b:	addr16 (bad) 
  40eb3d:	aam    0x18
  40eb3f:	pop    esp
  40eb40:	nop
  40eb41:	xor    eax,eax
  40eb43:	pop    esp
  40eb44:	push   ds
  40eb45:	arpl   si,sp
  40eb47:	pop    es
  40eb48:	int3   
  40eb49:	xor    bh,0x38
  40eb4c:	dec    edi
  40eb4d:	sub    eax,0x7fbc45ec
  40eb52:	fmul   DWORD PTR [edi-0x5f]
  40eb55:	sub    dl,0xd7
  40eb58:	clc    
  40eb59:	inc    ebx
  40eb5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb5b:	push   0x2d76340b
  40eb60:	fwait
  40eb61:	retf   0x9052
  40eb64:	mov    edx,0x16e7128c
  40eb69:	in     eax,dx
  40eb6a:	xorpd  xmm3,XMMWORD PTR [edi+0x70]
  40eb6f:	dec    esi
  40eb70:	int    0xd4
  40eb72:	fsub   QWORD PTR [eax-0x71fbedee]
  40eb78:	pop    gs
  40eb7a:	mov    edi,0xfde22056
  40eb7f:	mov    ds:0xad41430a,eax
  40eb84:	push   esp
  40eb85:	shr    DWORD PTR [ebx-0xd1d90fd],cl
  40eb8b:	jmp    DWORD PTR [ebp+0xf]
  40eb8e:	lahf   
  40eb8f:	adc    ch,0x4c
  40eb92:	jne    0x40eb23
  40eb94:	adc    edi,ebx
  40eb96:	cmp    edx,DWORD PTR [ebx+0x46]
  40eb99:	stos   DWORD PTR es:[edi],eax
  40eb9a:	push   es
  40eb9b:	mov    ebx,0x31e6a0c3
  40eba0:	pop    ecx
  40eba1:	retf   0xeafa
  40eba4:	clc    
  40eba5:	mov    edx,0xd2ce1dae
  40ebaa:	lock pop ss
  40ebac:	xchg   esp,eax
  40ebad:	mov    eax,ds:0x8eb5485e
  40ebb2:	mov    eax,ds:0x3f81def4
  40ebb7:	ror    DWORD PTR [edi+0x67],0x7
  40ebbb:	or     BYTE PTR [eax],0x47
  40ebbe:	pop    esi
  40ebbf:	mov    ebx,0x78458ed4
  40ebc4:	repz jnp 0x40ec3c
  40ebc7:	inc    edx
  40ebc8:	jne    0x40ec1e
  40ebca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebcb:	cdq    
  40ebcc:	mov    cs,WORD PTR [ebx+0x38]
  40ebcf:	ss je  0x40ec3d
  40ebd2:	fisubr DWORD PTR [edx+0x72]
  40ebd5:	jge    0x40eb7c
  40ebd7:	and    BYTE PTR [esp+esi*4],0xc5
  40ebdb:	(bad)  
  40ebdc:	mov    ecx,0x421db559
  40ebe1:	dec    ebx
  40ebe2:	push   0xffffff8b
  40ebe4:	test   DWORD PTR [ebp+0x7f],edi
  40ebe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe8:	mov    bl,0x89
  40ebea:	shl    BYTE PTR [edx],1
  40ebec:	xchg   ecx,eax
  40ebed:	mov    esi,0xc7bbebd0
  40ebf2:	or     eax,0x1958fa1e
  40ebf7:	leave  
  40ebf8:	jl     0x40ec59
  40ebfa:	or     BYTE PTR [ebx+0x43],bl
  40ebfd:	mov    ebx,0x4abac9d1
  40ec02:	adc    ah,BYTE PTR [ebx]
  40ec04:	push   ebx
  40ec05:	in     al,dx
  40ec06:	in     eax,dx
  40ec07:	and    edi,DWORD PTR [edi+0x6b]
  40ec0a:	(bad)  
  40ec0b:	(bad)  
  40ec0c:	sbb    dh,cl
  40ec0e:	jo     0x40ebeb
  40ec10:	sbb    al,0x2b
  40ec12:	push   es
  40ec13:	jb     0x40ebf4
  40ec15:	inc    esi
  40ec16:	jns    0x40ec2e
  40ec18:	adc    DWORD PTR [edx-0x36],ecx
  40ec1b:	sbb    BYTE PTR [edx+ebx*4],al
  40ec1e:	rol    BYTE PTR [esi],0x16
  40ec21:	in     al,0x9a
  40ec23:	callw  0x210d
  40ec27:	xlat   BYTE PTR ds:[ebx]
  40ec28:	cmp    ecx,DWORD PTR [esi+0x40]
  40ec2b:	idiv   BYTE PTR [ebp*8-0x4127661a]
  40ec32:	scas   al,BYTE PTR es:[edi]
  40ec33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec34:	lock cs mov ebx,0x3b4d988
  40ec3b:	(bad)  
  40ec3c:	dec    esp
  40ec3d:	inc    esi
  40ec3e:	xlat   BYTE PTR ds:[ebx]
  40ec3f:	dec    ebx
  40ec40:	mov    ds:0x1742b220,al
  40ec45:	and    eax,0x7e105684
  40ec4a:	xchg   edi,eax
  40ec4b:	xchg   BYTE PTR [esi+0x41],dh
  40ec4e:	mov    al,0xd
  40ec50:	mov    al,ds:0xed3bb5b4
  40ec55:	repz (bad) 
  40ec57:	(bad)  
  40ec58:	outs   dx,DWORD PTR ds:[esi]
  40ec59:	push   ss
  40ec5a:	jg     0x40ebf3
  40ec5c:	(bad)  
  40ec5d:	loopne 0x40ecc4
  40ec5f:	icebp  
  40ec60:	addr16 dec esp
  40ec62:	xor    eax,0x6e933eb9
  40ec67:	data16 js 0x40ebfd
  40ec6a:	inc    eax
  40ec6b:	xchg   ecx,eax
  40ec6c:	shl    DWORD PTR [edx+0x1],1
  40ec6f:	fisubr WORD PTR [edi-0x6f]
  40ec72:	sub    al,0x7c
  40ec74:	jno    0x40ecd9
  40ec76:	aaa    
  40ec77:	dec    ecx
  40ec78:	push   ds
  40ec79:	dec    esi
  40ec7a:	pop    esi
  40ec7b:	xchg   ecx,eax
  40ec7c:	ins    BYTE PTR es:[edi],dx
  40ec7d:	in     eax,0xaa
  40ec7f:	dec    edi
  40ec80:	mov    es,WORD PTR [ebx]
  40ec82:	loop   0x40ec48
  40ec84:	inc    esp
  40ec85:	cli    
  40ec86:	mov    eax,ds:0xd97a9864
  40ec8b:	ja     0x40ecc3
  40ec8d:	rcl    BYTE PTR [edx-0x26],cl
  40ec90:	bound  esi,QWORD PTR [edx]
  40ec92:	adc    eax,0x33127d31
  40ec97:	xchg   DWORD PTR [esi+0x2255d747],ebp
  40ec9d:	rcr    DWORD PTR [ecx+0x6b],cl
  40eca0:	into   
  40eca1:	jle    0x40ec6c
  40eca3:	pop    es
  40eca4:	add    al,BYTE PTR [esi]
  40eca6:	dec    ebx
  40eca7:	inc    ebx
  40eca8:	xchg   edx,eax
  40eca9:	lock test al,0xd8
  40ecac:	sub    BYTE PTR [esi-0x49],ch
  40ecaf:	test   eax,0xa7f6179d
  40ecb4:	inc    ebp
  40ecb5:	daa    
  40ecb6:	repnz fiadd DWORD PTR [edi+0x2f]
  40ecba:	mov    bl,BYTE PTR [esi]
  40ecbc:	xor    BYTE PTR [ebx-0x607f5950],0xd5
  40ecc3:	je     0x40ecf8
  40ecc5:	add    dl,BYTE PTR [ecx-0x79]
  40ecc8:	clc    
  40ecc9:	add    al,0xa8
  40eccb:	jo     0x40ed4a
  40eccd:	sbb    eax,0x1c399328
  40ecd2:	ins    DWORD PTR es:[edi],dx
  40ecd3:	ss sahf 
  40ecd5:	mov    eax,0x7455151
  40ecda:	sub    bl,BYTE PTR [edx]
  40ecdc:	gs call 0xb423:0xca51fa62
  40ece4:	clc    
  40ece5:	or     esp,eax
  40ece7:	sar    ecx,0xe3
  40ecea:	jp     0x40ed25
  40ecec:	mov    gs,esi
  40ecee:	cmp    edi,esi
  40ecf0:	xor    BYTE PTR [ebp+0x34],ah
  40ecf3:	scas   eax,DWORD PTR es:[edi]
  40ecf4:	cmp    eax,edx
  40ecf6:	pop    ebx
  40ecf7:	xchg   edx,eax
  40ecf8:	repnz xlat BYTE PTR ds:[ebx]
  40ecfa:	test   DWORD PTR ds:0x8f3b109d,edx
  40ed00:	mov    dl,0x38
  40ed02:	les    ebx,FWORD PTR [ecx-0x66d94b79]
  40ed08:	in     eax,0xe2
  40ed0a:	xor    eax,0x51b31257
  40ed0f:	mov    dh,0x61
  40ed11:	xchg   ecx,eax
  40ed12:	rol    BYTE PTR [eax-0x459324e6],1
  40ed18:	sti    
  40ed19:	popf   
  40ed1a:	cmp    DWORD PTR [edx+ecx*8-0x3ccc1a2a],edi
  40ed21:	lock sbb al,0xfc
  40ed24:	inc    edx
  40ed25:	and    BYTE PTR [edx-0x23],bl
  40ed28:	mov    ebp,0x2ab65a2c
  40ed2d:	cld    
  40ed2e:	int    0xe
  40ed30:	inc    esi
  40ed31:	ja     0x40ecbf
  40ed33:	xchg   ebx,eax
  40ed34:	adc    dh,BYTE PTR [ecx-0x601b4c69]
  40ed3a:	push   0xe
  40ed3c:	adc    al,BYTE PTR [eax]
  40ed3e:	rol    BYTE PTR gs:[edx+0x3b],cl
  40ed42:	dec    eax
  40ed43:	lods   eax,DWORD PTR ds:[esi]
  40ed44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed45:	dec    ebx
  40ed46:	mov    ?,edi
  40ed48:	sub    BYTE PTR [esi+0x151cb76c],bh
  40ed4e:	and    DWORD PTR [ebx],edx
  40ed50:	or     eax,0x72638efb
  40ed55:	in     eax,dx
  40ed56:	jle    0x40ed65
  40ed58:	ins    BYTE PTR es:[edi],dx
  40ed59:	std    
  40ed5a:	mov    ch,0x66
  40ed5c:	mov    ebx,0xb24f8d72
  40ed61:	mov    ds:0xb7677ce3,eax
  40ed66:	repnz xchg ebx,eax
  40ed68:	aad    0xba
  40ed6a:	(bad)  
  40ed6b:	not    BYTE PTR [esi-0x725062dc]
  40ed71:	imul   ebp
  40ed73:	(bad)  
  40ed74:	mov    al,bh
  40ed76:	adc    BYTE PTR [edx],bh
  40ed78:	pop    esp
  40ed79:	xchg   ebx,eax
  40ed7a:	xor    eax,0x2fdc17c8
  40ed7f:	or     eax,0xf58ee8d5
  40ed84:	pop    edx
  40ed85:	cdq    
  40ed86:	mov    ch,0x2d
  40ed88:	es pop ebx
  40ed8b:	fld    TBYTE PTR [edx-0x267d41ab]
  40ed91:	call   0x9547c408
  40ed96:	push   ebp
  40ed97:	mov    cl,BYTE PTR [edx]
  40ed99:	xor    edi,DWORD PTR [edi+0x6d4fe3b7]
  40ed9f:	cmp    al,0xba
  40eda1:	jo     0x40ed81
  40eda3:	add    eax,0xedaf50fa
  40eda8:	cmp    ah,BYTE PTR [ecx-0x75]
  40edab:	jge    0x40eda9
  40edad:	and    ebp,0x677fcdbd
  40edb3:	repnz shl BYTE PTR [edi],cl
  40edb6:	or     al,0xa1
  40edb8:	call   0xef3aad59
  40edbd:	adc    BYTE PTR [ecx-0x8e80b5d],dh
  40edc3:	ins    BYTE PTR es:[edi],dx
  40edc4:	popa   
  40edc5:	nop
  40edc6:	pop    ss
  40edc7:	out    dx,al
  40edc8:	xchg   DWORD PTR [ebx+0x5c8ee4d5],eax
  40edce:	mov    ah,0xef
  40edd0:	clc    
  40edd1:	jne    0x40edae
  40edd3:	mov    bh,0x58
  40edd5:	scas   eax,DWORD PTR es:[edi]
  40edd6:	xor    ecx,DWORD PTR [ecx-0x6c76d093]
  40eddc:	add    BYTE PTR [eax-0x2],ah
  40eddf:	xor    dh,al
  40ede1:	xchg   esi,eax
  40ede2:	sub    bl,cl
  40ede4:	xor    eax,0xba747cc4
  40ede9:	inc    ebx
  40edea:	sbb    al,0x5
  40edec:	clc    
  40eded:	or     eax,0xb380db54
  40edf2:	stos   BYTE PTR es:[edi],al
  40edf3:	add    DWORD PTR [esi+0x5eb96731],edx
  40edf9:	mov    ds:0x5b6c4a54,eax
  40edfe:	sbb    eax,0xb8f5aae3
  40ee03:	retf   
  40ee04:	or     al,0x70
  40ee06:	pusha  
  40ee07:	bound  eax,QWORD PTR [esi+eiz*4+0x46fd5b51]
  40ee0e:	(bad)  
  40ee0f:	mov    eax,0x8c3824b4
  40ee14:	cmp    ah,BYTE PTR [ebp-0x45]
  40ee17:	call   0x4f5c820a
  40ee1c:	repz adc al,0xc7
  40ee1f:	out    0x2d,al
  40ee21:	pushf  
  40ee22:	lahf   
  40ee23:	mov    WORD PTR [eax+0x470523b1],gs
  40ee29:	push   ebx
  40ee2a:	sub    eax,0xdc8171ac
  40ee2f:	stc    
  40ee30:	ret    0x29f7
  40ee33:	push   eax
  40ee34:	mov    ebx,0xd002983d
  40ee39:	push   esi
  40ee3a:	cmp    eax,0xbfc03ff6
  40ee3f:	add    eax,0xf823d42f
  40ee44:	xchg   edi,eax
  40ee45:	cli    
  40ee46:	xchg   bl,ah
  40ee48:	in     al,dx
  40ee49:	mov    eax,ds:0x509bfa9c
  40ee4e:	(bad)  
  40ee4f:	int3   
  40ee50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee51:	xor    BYTE PTR [edx],dl
  40ee53:	dec    ebp
  40ee54:	aas    
  40ee55:	sub    ebx,DWORD PTR [edi]
  40ee57:	mov    ch,0x62
  40ee59:	daa    
  40ee5a:	int3   
  40ee5b:	sbb    al,0x36
  40ee5d:	dec    edx
  40ee5e:	push   ebx
  40ee5f:	dec    edx
  40ee60:	repz sbb al,0xa9
  40ee63:	mov    ds:0x1ad1eac6,eax
  40ee68:	mov    WORD PTR [ebx+0x1a1feb],fs
  40ee6e:	sbb    eax,0xaab2b804
  40ee73:	or     al,0x93
  40ee75:	loopne 0x40ee82
  40ee77:	xor    al,0x2d
  40ee79:	jb     0x40eee0
  40ee7b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7d:	imul   BYTE PTR [edi+0x3b6a0420]
  40ee83:	std    
  40ee84:	loope  0x40ee24
  40ee86:	jp     0x40eeb7
  40ee88:	inc    edx
  40ee89:	inc    edx
  40ee8a:	jae    0x40ef03
  40ee8c:	(bad)  
  40ee8e:	cmc    
  40ee8f:	and    BYTE PTR [edi-0xf219c4a],0x59
  40ee96:	lods   al,BYTE PTR ds:[esi]
  40ee97:	add    DWORD PTR [edx-0x4682e554],edx
  40ee9d:	shl    DWORD PTR gs:[eax+0x19635f04],1
  40eea4:	in     eax,dx
  40eea5:	jecxz  0x40ee9a
  40eea7:	mov    fs,WORD PTR [edi]
  40eea9:	out    dx,al
  40eeaa:	in     eax,0x85
  40eeac:	push   ds
  40eead:	loopne 0x40ef12
  40eeaf:	sub    eax,0x9b447868
  40eeb4:	fdiv   st(2),st
  40eeb6:	cdq    
  40eeb7:	or     al,0x36
  40eeb9:	test   DWORD PTR [eax],0x9f9041a9
  40eebf:	and    eax,0x101290a8
  40eec4:	inc    eax
  40eec5:	cs cmp cl,bl
  40eec8:	lea    ebx,[esp+ecx*2+0x60]
  40eecc:	mov    ebx,0x4a4e814c
  40eed1:	fisttp DWORD PTR [edx-0x2dd4afe2]
  40eed7:	or     ah,BYTE PTR ds:0x644af15e
  40eedd:	loope  0x40ee96
  40eedf:	gs push esp
  40eee1:	mov    edx,ds
  40eee3:	int    0x72
  40eee5:	shl    BYTE PTR [edi+0x2aee0c57],cl
  40eeeb:	in     eax,0x82
  40eeed:	jae    0x40ef44
  40eeef:	cmp    DWORD PTR [eax+0x77ea916],edx
  40eef5:	jb     0x40ef30
  40eef7:	add    BYTE PTR [ebx],bl
  40eef9:	push   ebx
  40eefa:	int3   
  40eefb:	adc    BYTE PTR [ecx],cl
  40eefd:	hlt    
  40eefe:	dec    edi
  40eeff:	je     0x40ee94
  40ef01:	adc    edx,DWORD PTR [esp+ecx*1-0xc]
  40ef05:	xor    dl,ah
  40ef07:	and    edi,DWORD PTR ds:0x2ebf39a5
  40ef0d:	xor    BYTE PTR [ebx-0x44],dl
  40ef10:	cmc    
  40ef11:	xchg   edx,eax
  40ef12:	adc    eax,0x5645f572
  40ef17:	dec    edi
  40ef18:	sub    DWORD PTR ds:0x8f6c18b7,eax
  40ef1e:	sti    
  40ef1f:	xchg   ebx,eax
  40ef20:	inc    ebx
  40ef21:	pop    edi
  40ef22:	pushf  
  40ef23:	ja     0x40ef67
  40ef25:	jl     0x40ef21
  40ef27:	mov    dl,BYTE PTR [edi]
  40ef29:	push   eax
  40ef2a:	mov    ebx,0x34ed11cf
  40ef2f:	adc    esp,DWORD PTR [ebp-0x55]
  40ef32:	cdq    
  40ef33:	je     0x40ef79
  40ef35:	mov    al,0xc8
  40ef37:	sbb    ch,BYTE PTR [ecx+0x301e85c4]
  40ef3d:	xor    esp,DWORD PTR [eax]
  40ef3f:	add    dl,BYTE PTR [edi]
  40ef41:	dec    edi
  40ef42:	dec    esp
  40ef43:	xor    DWORD PTR [ecx],edi
  40ef45:	(bad)  
  40ef47:	pop    ds
  40ef48:	xor    al,0x19
  40ef4a:	cmp    al,0x12
  40ef4c:	jl     0x40ef83
  40ef4e:	push   cs
  40ef4f:	mov    ah,0x73
  40ef51:	jno    0x40ef05
  40ef53:	xor    ch,BYTE PTR [ebx+0x68]
  40ef56:	push   ebx
  40ef57:	into   
  40ef58:	inc    eax
  40ef59:	aad    0x1f
  40ef5b:	pop    ebx
  40ef5c:	mov    edx,0x11f91df1
  40ef61:	test   DWORD PTR [ebx+0xc6e4e8c],0x182a78f6
  40ef6b:	lods   al,BYTE PTR ds:[esi]
  40ef6c:	sub    BYTE PTR [ecx],dh
  40ef6e:	daa    
  40ef6f:	imul   ecx,DWORD PTR [edx],0x1b
  40ef72:	or     edx,edx
  40ef74:	and    eax,0xe3ff6871
  40ef79:	cld    
  40ef7a:	sti    
  40ef7b:	inc    edi
  40ef7c:	xchg   esi,eax
  40ef7d:	lods   eax,DWORD PTR ds:[esi]
  40ef7e:	psubusw mm4,QWORD PTR [edx]
  40ef81:	ret    
  40ef82:	push   ecx
  40ef83:	int    0x29
  40ef85:	jb     0x40ef52
  40ef87:	mov    dl,0x5b
  40ef89:	lods   eax,DWORD PTR ds:[esi]
  40ef8a:	jb     0x40ef16
  40ef8c:	sub    DWORD PTR ds:0x8cce2054,edi
  40ef92:	scas   al,BYTE PTR es:[edi]
  40ef93:	sub    bl,al
  40ef95:	fidivr DWORD PTR [eax-0x78a97217]
  40ef9b:	and    eax,0x2d
  40ef9e:	fldenv [edx]
  40efa0:	in     eax,dx
  40efa1:	xor    BYTE PTR [eax],cl
  40efa3:	pop    edx
  40efa4:	enter  0x109f,0xf9
  40efa8:	mov    edi,0x44cc515b
  40efad:	call   DWORD PTR [ebx]
  40efaf:	and    ch,bh
  40efb1:	aam    0xfd
  40efb3:	daa    
  40efb4:	gs pusha 
  40efb6:	aaa    
  40efb7:	mov    dl,0x31
  40efb9:	jmp    0xa31ad3c1
  40efbe:	add    eax,0x76861103
  40efc3:	push   ebp
  40efc4:	bound  edx,QWORD PTR [edi+0x2583b801]
  40efca:	mov    WORD PTR [ebp+0x74],es
  40efcd:	cmp    al,ch
  40efcf:	jno    0x40f04a
  40efd1:	jno    0x40ef8b
  40efd3:	lods   al,BYTE PTR ds:[esi]
  40efd4:	call   0xb365:0x2907389b
  40efdb:	lahf   
  40efdc:	push   ebp
  40efdd:	adc    edx,esp
  40efdf:	xor    eax,0xdfe3ef26
  40efe4:	dec    eax
  40efe5:	sub    BYTE PTR [ebp-0x6d],cl
  40efe8:	icebp  
  40efe9:	js     0x40f01a
  40efeb:	in     eax,0xb7
  40efed:	xchg   BYTE PTR [ebp+esi*4-0x3faaaacd],cl
  40eff4:	fdivrp st(5),st
  40eff6:	nop
  40eff7:	mov    cl,0xfb
  40eff9:	push   cs
  40effa:	mov    esi,eax
  40effc:	hlt    
  40effd:	ins    BYTE PTR es:[edi],dx
  40effe:	sub    DWORD PTR [ebp-0x6a86e88d],0x5d
  40f005:	imul   ecx,DWORD PTR [edi+0x70],0xffffffdc
  40f009:	mov    eax,0xfc776bc7
  40f00e:	mov    ds:0xc4e3715f,eax
  40f013:	test   eax,0x6580f89
  40f018:	ds or  al,0xfd
  40f01b:	cwde   
  40f01c:	(bad)  
  40f01d:	mov    ds:0xce27187c,eax
  40f022:	out    0x28,eax
  40f024:	ins    BYTE PTR es:[edi],dx
  40f025:	daa    
  40f026:	hlt    
  40f027:	rcr    ecx,cl
  40f029:	pop    edi
  40f02a:	add    esp,edx
  40f02c:	repz pop ebx
  40f02e:	xor    esi,DWORD PTR [edi]
  40f030:	out    0xd,al
  40f032:	ret    
  40f033:	or     DWORD PTR ds:0x7cd32739,edi
  40f039:	aad    0xaf
  40f03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f03c:	shl    bl,1
  40f03e:	into   
  40f03f:	popf   
  40f040:	lods   al,BYTE PTR ds:[esi]
  40f041:	sub    esp,DWORD PTR [esi-0x65260b85]
  40f047:	jl     0x40f07f
  40f049:	adc    dh,BYTE PTR [ebp-0x45]
  40f04c:	hlt    
  40f04d:	dec    BYTE PTR [edx+0x37]
  40f050:	ss popf 
  40f052:	jge    0x40f07a
  40f054:	and    al,0xf1
  40f056:	or     bh,BYTE PTR [ebx]
  40f058:	mov    bl,0xc1
  40f05a:	jmp    0x40f0d7
  40f05c:	jns    0x40f078
  40f05e:	cmp    edi,DWORD PTR [eax-0x65985860]
  40f064:	mov    esi,0x218f1dc7
  40f069:	push   esp
  40f06a:	lea    ecx,[eax-0x428bc819]
  40f070:	aaa    
  40f071:	dec    ebx
  40f072:	adc    al,0x4c
  40f074:	jnp    0x40f001
  40f076:	xchg   BYTE PTR [eax-0x1],al
  40f079:	and    esi,DWORD PTR [edx]
  40f07b:	iret   
  40f07c:	scas   eax,DWORD PTR es:[edi]
  40f07d:	ins    DWORD PTR es:[edi],dx
  40f07e:	or     eax,0x6206f2d4
  40f083:	fsubr  QWORD PTR [ebx-0x51]
  40f086:	push   es
  40f087:	retf   0x3168
  40f08a:	xchg   edi,eax
  40f08b:	xor    ebx,DWORD PTR [edx]
  40f08d:	ins    DWORD PTR es:[edi],dx
  40f08e:	mov    ?,WORD PTR [ebx+0x27eff283]
  40f094:	scas   eax,DWORD PTR es:[edi]
  40f095:	scas   al,BYTE PTR es:[edi]
  40f096:	mov    cl,0x46
  40f098:	call   0xa043:0x49a13ad
  40f09f:	addr16 into 
  40f0a1:	xor    DWORD PTR [eax-0x3d292d4e],esi
  40f0a7:	inc    ecx
  40f0a8:	push   eax
  40f0a9:	(bad)  
  40f0aa:	mov    esi,0x8038a506
  40f0af:	push   ebp
  40f0b0:	in     eax,dx
  40f0b1:	mov    ebp,0x6d5cf7fa
  40f0b6:	nop
  40f0b7:	mov    ax,0xb01a
  40f0bb:	adc    DWORD PTR [ebx+edi*1+0x7a],esp
  40f0bf:	rcl    BYTE PTR [eax-0x122f70ea],1
  40f0c5:	(bad)  
  40f0c6:	jmp    0xd322b1a4
  40f0cb:	mov    edi,0xee456928
  40f0d0:	gs pop edi
  40f0d2:	sub    cl,BYTE PTR [eax-0x65]
  40f0d5:	mov    ebx,0xcb548f16
  40f0da:	sahf   
  40f0db:	inc    eax
  40f0dc:	mov    dl,BYTE PTR [esi+0x23c1472e]
  40f0e2:	dec    esp
  40f0e3:	mov    al,ds:0x7c3a890c
  40f0e8:	cmp    al,0xe
  40f0ea:	icebp  
  40f0eb:	sar    BYTE PTR [eax],0x55
  40f0ee:	nop
  40f0ef:	and    bl,BYTE PTR [edx+edi*1]
  40f0f2:	cmp    al,0x94
  40f0f4:	sbb    BYTE PTR [edx+0x2b],0x37
  40f0f8:	pusha  
  40f0f9:	fsubrp st(7),st
  40f0fb:	arpl   WORD PTR [ecx+0x6ead0653],bx
  40f101:	xchg   ecx,eax
  40f102:	inc    edx
  40f103:	into   
  40f104:	les    esi,FWORD PTR [ecx+0x531dc1c7]
  40f10a:	jp     0x40f0df
  40f10c:	lahf   
  40f10d:	jge    0x40f0ec
  40f10f:	jle    0x40f0be
  40f111:	into   
  40f112:	into   
  40f113:	(bad)  
  40f114:	stc    
  40f115:	ret    
  40f116:	(bad)  
  40f117:	adc    edi,esp
  40f119:	sbb    ch,BYTE PTR [esi-0x7a]
  40f11c:	inc    esi
  40f11d:	int    0x26
  40f11f:	add    eax,0x818fb539
  40f125:	je     0xce523dfd
  40f12b:	and    ah,BYTE PTR [edx]
  40f12d:	pop    ecx
  40f12e:	sti    
  40f12f:	retf   0x302
  40f132:	jns    0x40f17e
  40f134:	out    dx,eax
  40f135:	add    al,0xb9
  40f137:	cmp    bh,BYTE PTR [edi]
  40f139:	pop    ebx
  40f13a:	mov    cl,0xff
  40f13c:	mov    ds:0xeb2950ae,al
  40f141:	add    DWORD PTR [eax+eiz*8+0x0],0x8828a8ed
  40f149:	dec    esi
  40f14a:	fnstsw WORD PTR [edx+0x58]
  40f14d:	jns    0x40f1a4
  40f14f:	adc    al,0x20
  40f151:	push   edi
  40f152:	mov    ebp,0x66205c1e
  40f157:	cmp    eax,0x67f3a190
  40f15c:	and    esp,ecx
  40f15e:	aas    
  40f15f:	sbb    eax,0xd98d2f50
  40f164:	cmp    al,0xa3
  40f166:	popa   
  40f167:	or     esp,DWORD PTR [ecx]
  40f169:	xor    edi,esi
  40f16b:	mov    al,ds:0xccd72c02
  40f170:	inc    ebx
  40f171:	int    0x35
  40f173:	in     eax,dx
  40f174:	repz sbb al,0x82
  40f177:	adc    DWORD PTR [ecx-0x2ad73f0d],edi
  40f17d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f17e:	push   ecx
  40f17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f180:	and    al,bh
  40f182:	xchg   ebp,eax
  40f183:	pop    ebx
  40f184:	shl    DWORD PTR [ecx],cl
  40f186:	aaa    
  40f187:	jmp    0x40f1af
  40f189:	and    eax,0xb290f48b
  40f18e:	and    dl,bl
  40f190:	inc    ebx
  40f191:	jle    0x40f141
  40f193:	in     al,dx
  40f194:	sub    DWORD PTR [ecx+0x60],edi
  40f197:	mov    eax,0xcca297d0
  40f19c:	pop    ebx
  40f19d:	and    ch,BYTE PTR [edx+0x17079290]
  40f1a3:	inc    edx
  40f1a4:	adc    eax,0xa18492ce
  40f1a9:	mov    cl,bh
  40f1ab:	bound  esp,QWORD PTR [esi+edx*4]
  40f1ae:	out    dx,eax
  40f1af:	bound  ebp,QWORD PTR [ecx]
  40f1b1:	push   es
  40f1b2:	sub    al,BYTE PTR [eax+0x2c]
  40f1b5:	fdiv   QWORD PTR [ecx-0x661b2b20]
  40f1bb:	es je  0x40f1bf
  40f1be:	add    eax,0x199b2f25
  40f1c3:	or     BYTE PTR [edi-0x4aba564a],bl
  40f1c9:	stos   BYTE PTR es:[edi],al
  40f1ca:	mov    edx,0xa3a80c7f
  40f1cf:	sbb    DWORD PTR [ebx],edx
  40f1d1:	inc    esp
  40f1d2:	clc    
  40f1d3:	sub    eax,0x47dbeff1
  40f1d8:	mov    WORD PTR [ebp+0xc],es
  40f1db:	add    cl,dl
  40f1dd:	xchg   ecx,eax
  40f1de:	sbb    eax,ecx
  40f1e0:	(bad)  
  40f1e1:	fisttp DWORD PTR [ebp-0x65]
  40f1e4:	aas    
  40f1e5:	push   eax
  40f1e6:	test   DWORD PTR [ecx+0x36],eax
  40f1e9:	aad    0x4b
  40f1eb:	xor    DWORD PTR [ecx-0x6d304fe1],ebp
  40f1f1:	push   ecx
  40f1f2:	inc    esi
  40f1f3:	rol    edx,1
  40f1f5:	(bad)  
  40f1f6:	(bad)  
  40f1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1f8:	sub    ebx,edx
  40f1fa:	ret    
  40f1fb:	push   ds
  40f1fc:	pop    eax
  40f1fd:	ins    BYTE PTR es:[edi],dx
  40f1fe:	push   esi
  40f1ff:	fst    QWORD PTR [eax-0x5b0922ea]
  40f205:	ins    BYTE PTR es:[edi],dx
  40f206:	cdq    
  40f207:	add    al,0x7d
  40f209:	dec    ecx
  40f20a:	add    DWORD PTR [ebx+0x77],0xffffffce
  40f20e:	xor    ebp,esi
  40f210:	sub    cl,BYTE PTR [eax-0x5fddfbb9]
  40f216:	push   es
  40f217:	push   esi
  40f218:	imul   esp,ecx,0x95276db4
  40f21e:	hlt    
  40f21f:	sti    
  40f220:	fs pop ebx
  40f222:	inc    edi
  40f223:	call   0x9495:0xf3e373a6
  40f22a:	pop    ss
  40f22b:	fistp  WORD PTR cs:[ebp-0x54026284]
  40f232:	in     al,dx
  40f233:	cdq    
  40f234:	lods   al,BYTE PTR ds:[esi]
  40f235:	sti    
  40f236:	xor    BYTE PTR [edi-0x3080c85d],cl
  40f23c:	imul   ecx,DWORD PTR [edi-0x55],0x8b129334
  40f243:	mul    BYTE PTR [eax]
  40f245:	pop    edx
  40f246:	sub    esp,esp
  40f248:	sub    eax,0x4d124041
  40f24d:	neg    DWORD PTR [edx]
  40f24f:	xchg   esi,eax
  40f250:	mov    ds:0x7b4cdd0f,al
  40f255:	(bad)  
  40f256:	in     al,dx
  40f257:	mov    edi,0xe748caa4
  40f25c:	int3   
  40f25d:	call   0x4a763212
  40f262:	inc    ecx
  40f263:	sub    DWORD PTR [ebp+0x58e5a27a],eax
  40f269:	jmp    0x7c37:0x8d1ce9d0
  40f270:	outs   dx,BYTE PTR ds:[esi]
  40f271:	es push edi
  40f273:	add    ah,ah
  40f275:	mov    edi,0x903b82d7
  40f27a:	xor    bl,cl
  40f27c:	jge    0x40f262
  40f27e:	xchg   ebp,eax
  40f27f:	or     bh,dh
  40f281:	adc    edx,DWORD PTR [ebx]
  40f283:	ret    0x146e
  40f286:	into   
  40f287:	dec    eax
  40f288:	sbb    esp,DWORD PTR [eax-0x2220e2c7]
  40f28e:	add    al,0xfd
  40f290:	inc    ebx
  40f292:	int    0x72
  40f294:	stos   DWORD PTR es:[edi],eax
  40f295:	mov    dh,0x48
  40f297:	or     ch,al
  40f299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f29a:	and    DWORD PTR [eax+0xb83cafa],0x87cac2b0
  40f2a4:	into   
  40f2a5:	cdq    
  40f2a6:	cli    
  40f2a7:	es popf 
  40f2a9:	cmp    al,0x1e
  40f2ab:	jne    0x40f271
  40f2ad:	ret    0xb7f3
  40f2b0:	lahf   
  40f2b1:	jg     0x40f31c
  40f2b3:	icebp  
  40f2b4:	cld    
  40f2b5:	pushf  
  40f2b6:	mov    ds:0xaaf91c0f,eax
  40f2bb:	test   al,0xb8
  40f2bd:	fld    DWORD PTR [ebx-0x6]
  40f2c0:	push   eax
  40f2c1:	aad    0xb5
  40f2c3:	frstor [ecx+0x116d3379]
  40f2c9:	fistp  WORD PTR [esi-0x24]
  40f2cc:	sub    BYTE PTR [edx+eiz*1],ch
  40f2cf:	xor    DWORD PTR [ecx],0x8de69b3d
  40f2d5:	xchg   DWORD PTR [esi],ebp
  40f2d7:	mov    ecx,0xe673ca9b
  40f2dc:	xlat   BYTE PTR ds:[ebx]
  40f2dd:	lea    esp,[ebx+ebp*1]
  40f2e0:	push   ss
  40f2e1:	out    0x4f,al
  40f2e3:	scas   al,BYTE PTR es:[edi]
  40f2e4:	shr    DWORD PTR [ebp+0x2b],0x50
  40f2e8:	repz in al,dx
  40f2ea:	dec    ebx
  40f2eb:	fmul   st(2),st
  40f2ed:	jbe    0x40f2f9
  40f2ef:	push   esi
  40f2f0:	hlt    
  40f2f1:	jne    0x40f361
  40f2f3:	adc    al,0x69
  40f2f5:	aaa    
  40f2f6:	rcr    BYTE PTR ss:[esp+esi*1+0x5698b918],1
  40f2fe:	js     0x40f359
  40f300:	outs   dx,DWORD PTR ds:[esi]
  40f301:	xchg   BYTE PTR [ecx-0x2e796a6e],dh
  40f307:	pop    ebx
  40f308:	cmp    BYTE PTR [edi+0x747303d0],bl
  40f30e:	jmp    0x40f31a
  40f310:	popa   
  40f311:	cmc    
  40f312:	ror    DWORD PTR [ebp+0x3b],cl
  40f315:	mov    dl,0x28
  40f317:	cwde   
  40f318:	mov    ebp,0xdaf0a77f
  40f31d:	iret   
  40f31e:	out    0xd8,al
  40f320:	ins    DWORD PTR es:[edi],dx
  40f321:	imul   ecx,DWORD PTR [ecx+0x56f634d4],0x3e
  40f328:	adc    edx,DWORD PTR [ebx]
  40f32a:	mov    WORD PTR [ecx],es
  40f32c:	or     BYTE PTR [ebx-0x6a5dad17],dh
  40f332:	scas   al,BYTE PTR es:[edi]
  40f333:	test   BYTE PTR ds:0x8d180c1b,cl
  40f339:	retf   
  40f33a:	push   ebp
  40f33b:	lahf   
  40f33c:	inc    esi
  40f33d:	punpckhwd mm0,QWORD PTR [eax-0x6056b75e]
  40f344:	sar    BYTE PTR [edx],0xc5
  40f347:	adc    al,0x2d
  40f349:	sbb    al,0xf2
  40f34b:	jg     0x40f32d
  40f34d:	(bad)  
  40f34e:	hlt    
  40f34f:	push   es
  40f350:	mov    ch,0xca
  40f352:	mov    al,ds:0xfb2521ad
  40f357:	cld    
  40f358:	mov    edi,0xec0a0706
  40f35d:	xchg   ebx,eax
  40f35e:	into   
  40f35f:	in     al,dx
  40f360:	into   
  40f361:	sbb    al,BYTE PTR [esi+0x4c]
  40f364:	jns    0x40f3a6
  40f366:	pop    edx
  40f367:	bound  ebp,QWORD PTR [ebx-0x595a617c]
  40f36d:	dec    ebx
  40f36e:	sbb    dl,0xe0
  40f371:	sbb    BYTE PTR [ebp*8-0x389231c1],bl
  40f378:	inc    esp
  40f379:	in     eax,0xf7
  40f37b:	sbb    DWORD PTR [ecx+0x7db1dba6],esp
  40f381:	into   
  40f382:	xlat   BYTE PTR ds:[ebx]
  40f383:	test   DWORD PTR ds:0x9780248e,0x14469242
  40f38d:	rol    DWORD PTR [esi],1
  40f38f:	in     al,dx
  40f390:	aas    
  40f391:	out    0xbf,eax
  40f393:	pop    ss
  40f394:	hlt    
  40f395:	sbb    DWORD PTR ds:0x73d9b063,ebx
  40f39b:	loope  0x40f38c
  40f39d:	mov    ds,ebx
  40f39f:	rol    DWORD PTR [ebp+0x16c3b47a],cl
  40f3a5:	and    ebx,DWORD PTR [eax+0x4e]
  40f3a8:	adc    edi,esp
  40f3aa:	mov    ah,0x6d
  40f3ac:	cld    
  40f3ad:	add    al,0xa4
  40f3af:	or     eax,0xf2e02442
  40f3b4:	loop   0x40f404
  40f3b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3b7:	aas    
  40f3b8:	stos   BYTE PTR es:[edi],al
  40f3b9:	sbb    ch,BYTE PTR [ebx]
  40f3bb:	jns    0x40f401
  40f3bd:	rcl    BYTE PTR [edx+esi*8-0x7b],cl
  40f3c1:	inc    esp
  40f3c2:	or     ebx,edi
  40f3c4:	push   esi
  40f3c5:	push   0x11
  40f3c7:	mov    fs,WORD PTR [edi]
  40f3c9:	cmp    DWORD PTR [edi],0x7a
  40f3cc:	sub    al,0x9c
  40f3ce:	test   eax,0x8b061807
  40f3d3:	dec    ebx
  40f3d4:	push   edi
  40f3d5:	retf   0xfa52
  40f3d8:	in     al,0xa6
  40f3da:	xor    BYTE PTR [eax],dl
  40f3dc:	fsubr  QWORD PTR [ecx+0x489b63b8]
  40f3e2:	inc    edx
  40f3e3:	dec    ecx
  40f3e4:	jmp    0xb43e:0xf1044bf8
  40f3eb:	call   0xf66:0x6fcae905
  40f3f2:	(bad)  
  40f3f3:	sub    eax,DWORD PTR [ecx]
  40f3f5:	jmp    0xabb53de8
  40f3fa:	add    al,0x29
  40f3fc:	ret    0xe460
  40f3ff:	lea    ebp,[esi+0x5fe8807c]
  40f405:	fnsave [esp+ecx*4-0x52]
  40f409:	adc    al,0x1f
  40f40b:	das    
  40f40c:	add    BYTE PTR [edi],dl
  40f40e:	jmp    0x40f442
  40f410:	dec    esi
  40f411:	sub    eax,0x8081f0f8
  40f416:	sti    
  40f417:	mov    ch,0xcf
  40f419:	and    esi,DWORD PTR [esi+0x3d]
  40f41c:	cmc    
  40f41d:	sub    al,0xa1
  40f41f:	test   eax,0xe736842f
  40f424:	mov    gs,WORD PTR [esp+eiz*8-0x17edb326]
  40f42b:	jmp    0x2da7:0x9aeb0dda
  40f432:	cmc    
  40f433:	or     eax,0xe880829d
  40f438:	jmp    0x40f3f9
  40f43a:	inc    dx
  40f43c:	icebp  
  40f43d:	or     al,0xe0
  40f43f:	adc    BYTE PTR [ebx+0x43],0x38
  40f443:	sti    
  40f444:	pop    edi
  40f445:	fcmovnbe st,st(7)
  40f447:	popa   
  40f448:	std    
  40f449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f44a:	jno    0x40f471
  40f44c:	dec    eax
  40f44d:	addr16 je 0x40f40e
  40f450:	mov    dl,bl
  40f452:	int3   
  40f453:	fbstp  TBYTE PTR [esi]
  40f455:	push   ebp
  40f456:	xchg   edx,eax
  40f457:	out    dx,eax
  40f458:	mov    bh,0x46
  40f45a:	nop
  40f45b:	push   eax
  40f45c:	jg     0x40f43c
  40f45e:	inc    esi
  40f45f:	jg     0x40f4ce
  40f461:	mov    esp,?
  40f463:	sbb    BYTE PTR [esi-0x53],ah
  40f466:	add    BYTE PTR [ebp-0x1f],ah
  40f469:	(bad)  
  40f46a:	out    dx,al
  40f46b:	add    eax,0x31cb2e1c
  40f470:	cmp    al,0xc9
  40f472:	cld    
  40f473:	mov    ah,0x8f
  40f475:	int    0xb1
  40f477:	aad    0xb6
  40f479:	ds inc ecx
  40f47b:	test   DWORD PTR [edi],ecx
  40f47d:	sbb    BYTE PTR [ebp-0x63],ch
  40f480:	retf   0x8efa
  40f483:	test   al,dl
  40f485:	retf   0xed94
  40f488:	daa    
  40f489:	sahf   
  40f48a:	sub    eax,0x3c140c8e
  40f48f:	add    eax,0x8056df2
  40f494:	repz xor dl,BYTE PTR ds:0xf91f
  40f49a:	std    
  40f49b:	cmp    eax,0xdc9fdb79
  40f4a0:	mov    ecx,0x3327380f
  40f4a5:	inc    esp
  40f4a6:	sahf   
  40f4a7:	ja     0x40f46f
  40f4a9:	xor    eax,0x61c42bdc
  40f4ae:	pop    ss
  40f4af:	jne    0x40f48a
  40f4b1:	mov    ds:0xa6f12eda,al
  40f4b6:	inc    BYTE PTR [edi]
  40f4b8:	aas    
  40f4b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4ba:	xor    ecx,DWORD PTR [ebx+eiz*1+0x38]
  40f4be:	xor    bh,ch
  40f4c0:	jecxz  0x40f4d4
  40f4c2:	jbe    0x40f52d
  40f4c4:	and    bl,al
  40f4c6:	fs inc ecx
  40f4c8:	jp     0x40f548
  40f4ca:	xchg   ecx,eax
  40f4cb:	ja     0x40f47b
  40f4cd:	psubusw mm3,QWORD PTR [ecx-0x56ab2423]
  40f4d4:	fwait
  40f4d5:	dec    eax
  40f4d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d7:	cld    
  40f4d8:	sbb    BYTE PTR ds:0x34b9d148,dl
  40f4de:	lds    eax,FWORD PTR [esi-0x33]
  40f4e1:	xlat   BYTE PTR ds:[ebx]
  40f4e2:	stos   DWORD PTR es:[edi],eax
  40f4e3:	or     ax,0xe67c
  40f4e7:	ret    0xf36a
  40f4ea:	ja     0x40f487
  40f4ec:	dec    edi
  40f4ed:	jnp    0x40f4d1
  40f4ef:	adc    DWORD PTR [eax],0xffffffcc
  40f4f2:	mov    WORD PTR [edx+edi*1-0x71d696ce],cs
  40f4f9:	lds    esp,FWORD PTR [edi+ecx*1-0x5c]
  40f4fd:	out    0x90,al
  40f4ff:	pushf  
  40f500:	sbb    esp,DWORD PTR [eax+0x7b416700]
  40f506:	mov    edx,0xee529511
  40f50b:	pop    ecx
  40f50c:	jg     0x40f57c
  40f50e:	das    
  40f50f:	mov    dh,0x62
  40f511:	jnp    0x40f4a4
  40f513:	stc    
  40f514:	cmp    ah,BYTE PTR [edi+0x23ee8ce9]
  40f51a:	mov    cs,WORD PTR [esi-0xcf1414b]
  40f520:	mov    dh,BYTE PTR ds:0x1c496d5c
  40f526:	(bad)  
  40f527:	fisubr WORD PTR [ebx-0x5de0eb59]
  40f52d:	add    al,0x2d
  40f52f:	(bad)  
  40f530:	adc    eax,0x70d198db
  40f535:	cmp    bh,dl
  40f537:	pop    edi
  40f538:	aaa    
  40f539:	stc    
  40f53a:	lahf   
  40f53b:	or     al,bh
  40f53d:	into   
  40f53e:	dec    esp
  40f53f:	(bad)  
  40f540:	adc    al,BYTE PTR [esi+0x6d3c99a0]
  40f546:	test   al,0x42
  40f548:	inc    ebp
  40f549:	or     al,0x83
  40f54b:	inc    edx
  40f54c:	mov    eax,ds:0x66cb40cc
  40f551:	sar    DWORD PTR [ebx],1
  40f553:	jo     0x40f52b
  40f555:	mov    ch,0xa9
  40f557:	jne    0x40f4f8
  40f559:	int    0xb1
  40f55b:	and    DWORD PTR [eax+0x730e4eda],ebx
  40f561:	add    eax,0x71e3b70b
  40f566:	sub    ecx,edx
  40f568:	popa   
  40f569:	pop    edi
  40f56a:	mov    bh,0x28
  40f56c:	jp     0x40f5e2
  40f56e:	lock dec edi
  40f570:	cld    
  40f571:	je     0x40f50a
  40f573:	mov    eax,0xc0c7de1a
  40f578:	addr16 inc esi
  40f57a:	sbb    eax,0xd72b722b
  40f57f:	sbb    eax,DWORD PTR [ecx-0x9d9ffde]
  40f585:	pusha  
  40f586:	add    edx,edi
  40f588:	cmp    al,0xad
  40f58a:	pop    edi
  40f58b:	sbb    DWORD PTR [ecx],ebp
  40f58d:	test   al,0x36
  40f58f:	shl    BYTE PTR [eax+0x1b],cl
  40f592:	mov    bh,0xc7
  40f594:	pop    ds
  40f595:	mov    cs,WORD PTR ds:0x61384441
  40f59b:	add    al,0x32
  40f59d:	lahf   
  40f59e:	in     al,dx
  40f59f:	ja     0x40f5da
  40f5a1:	imul   eax,DWORD PTR [edi],0x17393807
  40f5a7:	sbb    DWORD PTR [edx-0x3f],edx
  40f5aa:	mov    al,0xe
  40f5ac:	lock dec ecx
  40f5ae:	jmp    0x40f598
  40f5b0:	bound  ebx,QWORD PTR [ecx]
  40f5b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5b3:	clc    
  40f5b4:	inc    edi
  40f5b5:	and    BYTE PTR [ecx],al
  40f5b7:	jae    0x40f573
  40f5b9:	gs in  al,0xb2
  40f5bc:	(bad)  
  40f5bd:	ror    dh,0xb4
  40f5c0:	mov    ebx,0x84312b9d
  40f5c5:	lods   eax,DWORD PTR ds:[esi]
  40f5c6:	mov    ecx,0xc63cb722
  40f5cb:	adc    eax,0x463941fe
  40f5d0:	outs   dx,BYTE PTR ds:[esi]
  40f5d1:	add    eax,0x5be26866
  40f5d7:	call   0xe4006e02
  40f5dc:	js     0x40f654
  40f5de:	pop    edi
  40f5df:	ret    
  40f5e0:	cli    
  40f5e1:	and    eax,0x97eb9377
  40f5e6:	test   BYTE PTR cs:0x1e5f7aff,bh
  40f5ed:	call   0x7ea4:0x4c4e9333
  40f5f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5f5:	call   FWORD PTR [edi-0x74]
  40f5f8:	pushf  
  40f5f9:	dec    eax
  40f5fa:	xchg   ecx,eax
  40f5fb:	out    0x8b,eax
  40f5fd:	mov    bl,0x0
  40f5ff:	sbb    edi,0xf37b4964
  40f605:	sahf   
  40f606:	adc    DWORD PTR [esi+0x41c00847],edx
  40f60c:	jo     0x40f666
  40f60e:	and    DWORD PTR [edx-0x5e8278a2],0x7275e27b
  40f618:	jno    0x40f669
  40f61a:	out    dx,eax
  40f61b:	push   ds
  40f61c:	add    al,0xdd
  40f61e:	add    dl,BYTE PTR [edx]
  40f620:	aaa    
  40f621:	iret   
  40f622:	pop    esp
  40f623:	sbb    BYTE PTR [ebx+0x53],cl
  40f626:	mov    ch,0xc3
  40f628:	sti    
  40f629:	push   edx
  40f62a:	push   esi
  40f62b:	fstp   DWORD PTR [ecx]
  40f62d:	or     ch,bh
  40f62f:	bnd jo 0x40f625
  40f632:	add    ebx,DWORD PTR ds:0x4441d265
  40f638:	and    BYTE PTR [esi+ecx*2],dh
  40f63b:	dec    ebx
  40f63c:	fucomi st,st(1)
  40f63e:	lods   al,BYTE PTR ds:[esi]
  40f63f:	std    
  40f640:	repnz pop es
  40f642:	retf   
  40f643:	cs stos DWORD PTR es:[edi],eax
  40f645:	jecxz  0x40f645
  40f647:	or     ebx,ebp
  40f649:	pop    esp
  40f64a:	mov    bl,0xdc
  40f64c:	dec    edi
  40f64d:	int3   
  40f64e:	jno    0x40f611
  40f650:	sbb    BYTE PTR [esi+0x6a5cf01c],0x19
  40f657:	arpl   WORD PTR [ecx+ebp*4],ax
  40f65a:	in     eax,0x75
  40f65c:	scas   al,BYTE PTR es:[edi]
  40f65d:	xor    DWORD PTR [eax+0x60],0x6a
  40f661:	push   ecx
  40f662:	fiadd  DWORD PTR [ebx]
  40f664:	retf   
  40f665:	fbld   TBYTE PTR [ebx+0x42245cf2]
  40f66b:	icebp  
  40f66c:	popa   
  40f66d:	ins    BYTE PTR es:[edi],dx
  40f66e:	fwait
  40f66f:	dec    edx
  40f670:	test   BYTE PTR [esi],dh
  40f672:	int3   
  40f673:	repz test eax,0x55a6961f
  40f679:	stos   DWORD PTR es:[edi],eax
  40f67a:	fidiv  WORD PTR [edi-0x749a8709]
  40f680:	popa   
  40f681:	push   ds
  40f682:	mov    eax,ds:0x9a323a59
  40f687:	jl     0x40f6eb
  40f689:	pop    edx
  40f68a:	jno    0x40f694
  40f68c:	cmc    
  40f68d:	mov    esi,0xe3438e04
  40f692:	iret   
  40f693:	ss sbb ecx,ebx
  40f696:	mov    ecx,0x5eb6bf58
  40f69b:	xor    eax,0x340b7f1
  40f6a0:	(bad)  
  40f6a1:	jmp    0x411b79
  40f6a6:	mov    eax,DWORD PTR [ebp-0x38]
  40f6a9:	add    eax,DWORD PTR [ebp+0x8]
  40f6ac:	mov    DWORD PTR [ebp-0x18],eax
  40f6af:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6b2:	test   eax,eax
  40f6b4:	je     0x411b02
  40f6ba:	mov    DWORD PTR [ebp-0x20],0x0
  40f6c1:	push   0x3
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x7a72b8f0
  40f71a:	and    al,0x2
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0xffffffdf
  40f724:	pop    ebx
  40f725:	pop    ebp
  40f726:	test   dh,0x10
  40f729:	clc    
  40f72a:	xor    eax,0xa9b175fe
  40f72f:	xchg   edi,eax
  40f730:	lock xchg esp,eax
  40f732:	adc    ecx,eax
  40f734:	cmp    BYTE PTR [esi],0xb1
  40f737:	idiv   eax
  40f739:	addr16 (bad) 
  40f73b:	add    ecx,DWORD PTR [ebp+0x71ab75f4]
  40f741:	rcl    edx,0x9f
  40f744:	mov    WORD PTR [edx+ecx*1-0x73],?
  40f748:	xchg   edi,eax
  40f749:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74a:	rcr    esi,cl
  40f74c:	ins    BYTE PTR es:[edi],dx
  40f74d:	pop    ss
  40f74e:	pop    eax
  40f74f:	xlat   BYTE PTR ds:[ebx]
  40f750:	rol    BYTE PTR [eax],1
  40f752:	push   ebp
  40f753:	ja     0x40f737
  40f755:	cmp    eax,0x55c37e27
  40f75a:	mov    al,0xc3
  40f75c:	ds add eax,0x5bb1ae8b
  40f762:	inc    ebp
  40f763:	pop    edx
  40f764:	icebp  
  40f765:	xlat   BYTE PTR ds:[ebx]
  40f766:	sahf   
  40f767:	jno    0x40f75a
  40f769:	pusha  
  40f76a:	push   edi
  40f76b:	(bad)  
  40f76c:	dec    edi
  40f76d:	push   esi
  40f76e:	add    esi,DWORD PTR [ecx+eiz*1+0x24f2fe07]
  40f775:	aaa    
  40f776:	(bad)  
  40f777:	dec    esp
  40f779:	push   edx
  40f77a:	setne  BYTE PTR [eax]
  40f77d:	or     eax,0x9996f529
  40f782:	push   esp
  40f783:	add    eax,0xd3b7f8f6
  40f788:	pop    edx
  40f789:	inc    ebx
  40f78a:	bound  ebp,QWORD PTR [ebp-0x2b]
  40f78d:	mov    dh,0x10
  40f78f:	jb     0x40f79f
  40f791:	xor    eax,0xac13e84b
  40f797:	adc    DWORD PTR [edi+0x3eb5f044],esp
  40f79d:	mov    bl,0x5
  40f79f:	push   eax
  40f7a0:	(bad)  
  40f7a1:	aad    0x62
  40f7a3:	(bad)  
  40f7a4:	int    0xb3
  40f7a6:	fild   QWORD PTR [edi]
  40f7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a9:	mov    cl,0x72
  40f7ab:	xchg   ecx,eax
  40f7ac:	fimul  WORD PTR [esp+edx*2+0x4a]
  40f7b0:	sbb    DWORD PTR [ebx-0x52],0xd5331bb7
  40f7b7:	push   es
  40f7b8:	jbe    0x40f786
  40f7ba:	mov    dh,0x84
  40f7bc:	push   ecx
  40f7bd:	nop    DWORD PTR [esi-0x599b7ae6]
  40f7c4:	lock cdq 
  40f7c6:	inc    ecx
  40f7c7:	and    eax,0x1ed2f34d
  40f7cc:	xlat   BYTE PTR ds:[ebx]
  40f7cd:	or     al,0x60
  40f7cf:	std    
  40f7d0:	ret    
  40f7d1:	outs   dx,BYTE PTR ds:[esi]
  40f7d2:	rcr    edx,cl
  40f7d4:	sbb    ebx,esi
  40f7d6:	nop
  40f7d7:	mov    ah,0xfe
  40f7d9:	jmp    0x1ac902de
  40f7de:	leave  
  40f7df:	ins    DWORD PTR es:[edi],dx
  40f7e0:	sti    
  40f7e1:	inc    ebx
  40f7e2:	pusha  
  40f7e3:	fcmovne st,st(7)
  40f7e5:	inc    edx
  40f7e6:	cmp    ch,BYTE PTR [edi+0x47]
  40f7e9:	dec    ebp
  40f7ea:	fbld   TBYTE PTR [ebp+0x3418e983]
  40f7f0:	fisttp WORD PTR [edx+0x107c4adf]
  40f7f6:	inc    ecx
  40f7f7:	es adc al,0xbb
  40f7fa:	mov    ds:0x56c1f392,eax
  40f7ff:	aaa    
  40f800:	inc    eax
  40f801:	stos   DWORD PTR es:[edi],eax
  40f802:	sub    bh,al
  40f804:	inc    edi
  40f805:	(bad)  
  40f806:	pop    ds
  40f807:	xlat   BYTE PTR ds:[ebx]
  40f808:	and    edx,ebx
  40f80a:	aaa    
  40f80b:	fsubr  QWORD PTR [esi]
  40f80d:	in     al,0xf0
  40f80f:	dec    ecx
  40f810:	loop   0x40f860
  40f812:	fisubr WORD PTR [ecx+0x19]
  40f815:	pop    ds
  40f816:	mov    ds:0x97741430,al
  40f81b:	dec    ebp
  40f81c:	xor    BYTE PTR [eax+0x5341a8dd],al
  40f822:	sbb    BYTE PTR [ebx-0xa],ch
  40f825:	or     BYTE PTR [ebp-0x161bb145],bh
  40f82b:	mov    esi,0xc859da83
  40f830:	xor    eax,0x876fd02
  40f835:	mov    dh,0x6c
  40f837:	loopne 0x40f885
  40f839:	pop    ecx
  40f83a:	pop    ecx
  40f83b:	je     0x40f7c0
  40f83d:	cs cmp al,0xe
  40f840:	std    
  40f841:	(bad)  
  40f842:	clc    
  40f843:	arpl   WORD PTR [ebx],bx
  40f845:	or     BYTE PTR [ebx],0x4e
  40f848:	shl    BYTE PTR [esi-0x6a],1
  40f84b:	jb     0x40f856
  40f84d:	or     al,0x49
  40f84f:	cmp    ah,BYTE PTR [esi]
  40f851:	int3   
  40f852:	or     eax,DWORD PTR [esi]
  40f854:	out    dx,al
  40f855:	fsubr  QWORD PTR [ebp+0x3ad189fd]
  40f85b:	and    ecx,esi
  40f85d:	xchg   ebp,eax
  40f85e:	dec    ebp
  40f85f:	int3   
  40f860:	cmc    
  40f861:	out    0x20,eax
  40f863:	out    0x4e,al
  40f865:	mov    ecx,0xd39a5924
  40f86a:	mov    esi,0xdb673151
  40f86f:	xor    BYTE PTR [edx-0x15],cl
  40f872:	test   al,0x94
  40f874:	dec    ebx
  40f875:	idiv   esi
  40f877:	dec    esp
  40f878:	pop    ds
  40f879:	xor    al,bh
  40f87b:	push   esp
  40f87c:	(bad)  
  40f87d:	es lock adc al,ch
  40f881:	lds    esi,FWORD PTR [esi+edi*4-0x35]
  40f885:	cmp    ecx,DWORD PTR [ebp+0x69]
  40f888:	jl     0x40f859
  40f88a:	mov    dh,0xf2
  40f88c:	pop    ebp
  40f88d:	push   eax
  40f88e:	outs   dx,BYTE PTR ds:[esi]
  40f88f:	xchg   cl,dl
  40f891:	fisub  WORD PTR ds:0xfec5bdd
  40f897:	add    DWORD PTR [ebx-0x79f856af],0xcac4d7d5
  40f8a1:	(bad)  
  40f8a2:	fs je  0x40f896
  40f8a5:	dec    ebp
  40f8a6:	jb     0x40f871
  40f8a8:	mov    edi,ss
  40f8aa:	(bad)  
  40f8ab:	clc    
  40f8ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8ad:	xchg   ecx,eax
  40f8ae:	pop    es
  40f8af:	jbe    0x40f8e7
  40f8b1:	inc    esi
  40f8b2:	call   0x9aa:0x541d6177
  40f8b9:	pop    esp
  40f8ba:	fbld   TBYTE PTR [eax]
  40f8bc:	stos   BYTE PTR es:[edi],al
  40f8bd:	or     eax,DWORD PTR [edx+0x6e04c83d]
  40f8c3:	push   edx
  40f8c4:	fisttp QWORD PTR [esi]
  40f8c6:	(bad)  
  40f8c7:	cmp    ecx,DWORD PTR [edx+0x23]
  40f8ca:	aas    
  40f8cb:	std    
  40f8cc:	retf   
  40f8cd:	inc    ebx
  40f8ce:	add    BYTE PTR [ecx-0x73a0c52b],bh
  40f8d4:	loopne 0x40f887
  40f8d6:	pop    ecx
  40f8d7:	fidivr WORD PTR [edx-0x6343b3e1]
  40f8dd:	push   ebp
  40f8de:	stos   DWORD PTR es:[edi],eax
  40f8df:	inc    esi
  40f8e0:	jge    0x40f896
  40f8e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8e3:	enter  0x4d39,0xea
  40f8e7:	shl    DWORD PTR [eax-0x37f36d35],1
  40f8ed:	cmp    eax,0xbb5218ed
  40f8f2:	jbe    0x40f8d1
  40f8f4:	sbb    al,bh
  40f8f6:	xchg   ecx,eax
  40f8f7:	call   0x603d:0x4dedaeac
  40f8fe:	in     eax,dx
  40f8ff:	adc    ah,BYTE PTR [esi]
  40f901:	cmp    DWORD PTR [ecx+0x2a],ebx
  40f904:	ins    DWORD PTR es:[edi],dx
  40f905:	lds    ebx,FWORD PTR [edx]
  40f907:	adc    edx,esp
  40f909:	(bad)  
  40f90a:	push   ds
  40f90b:	mov    bl,0x7
  40f90d:	loope  0x40f93a
  40f90f:	adc    eax,0x96578a6d
  40f914:	js     0x40f91a
  40f916:	inc    ebp
  40f917:	push   eax
  40f918:	mov    esi,0xeae4824d
  40f91d:	inc    esi
  40f91e:	ret    
  40f91f:	retf   0x3140
  40f922:	jae    0x40f96d
  40f924:	xor    esi,DWORD PTR [ecx+eax*1+0x3f]
  40f928:	popa   
  40f929:	lods   al,BYTE PTR ds:[esi]
  40f92a:	mov    ch,0x7a
  40f92c:	pop    ebp
  40f92d:	push   es
  40f92e:	adc    DWORD PTR [esi-0x4dc57653],edx
  40f934:	hlt    
  40f935:	pushf  
  40f936:	push   edx
  40f937:	push   0xffffff95
  40f939:	icebp  
  40f93a:	inc    edx
  40f93b:	shl    BYTE PTR [edx+eax*8+0x3fd677ce],1
  40f942:	lock cld 
  40f944:	push   ecx
  40f945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f946:	and    dl,BYTE PTR [ecx]
  40f948:	jbe    0x40f935
  40f94a:	sbb    BYTE PTR [ebx],al
  40f94c:	sub    ch,bl
  40f94e:	dec    edi
  40f94f:	pop    ebp
  40f950:	leave  
  40f951:	scas   al,BYTE PTR es:[edi]
  40f952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f953:	sub    al,0x44
  40f955:	mov    dl,0xbe
  40f957:	adc    bh,BYTE PTR [edx]
  40f959:	xor    al,0x22
  40f95b:	inc    edi
  40f95c:	aas    
  40f95d:	xchg   ebp,eax
  40f95e:	adc    al,BYTE PTR ds:0x842dbcf3
  40f964:	ficom  DWORD PTR [ebx+0x1a]
  40f967:	mov    dl,0xec
  40f969:	adc    DWORD PTR [edx],eax
  40f96b:	mov    al,0x12
  40f96d:	pusha  
  40f96e:	add    bl,BYTE PTR [ecx-0x86562f]
  40f974:	scas   eax,DWORD PTR es:[edi]
  40f975:	scas   eax,DWORD PTR es:[edi]
  40f976:	inc    esp
  40f977:	dec    eax
  40f978:	setge  BYTE PTR [ebx]
  40f97b:	cmp    eax,0x1b186e37
  40f980:	sahf   
  40f981:	sar    BYTE PTR [ecx-0x47a46ac6],0x4e
  40f988:	sub    al,0xea
  40f98a:	mov    ebp,0x57e22d82
  40f98f:	icebp  
  40f990:	fldenv [edx]
  40f992:	pop    esp
  40f993:	add    BYTE PTR [eax],ah
  40f995:	fwait
  40f996:	loop   0x40f9b8
  40f998:	das    
  40f999:	jmp    0x5d8a6b63
  40f99e:	jno    0x40f953
  40f9a0:	hlt    
  40f9a1:	ins    BYTE PTR es:[edi],dx
  40f9a2:	xor    ch,BYTE PTR [ebp-0x3f]
  40f9a5:	(bad)  
  40f9a6:	nop
  40f9a7:	jns    0x40f9d8
  40f9a9:	rol    BYTE PTR [ebx-0x49],0x28
  40f9ad:	gs lock addr16 in eax,dx
  40f9b1:	int    0xb0
  40f9b3:	mov    esp,0xd798a75d
  40f9b8:	outs   dx,BYTE PTR es:[esi]
  40f9ba:	adc    eax,0x11b136af
  40f9bf:	add    BYTE PTR [edx+0x76c2f8b5],al
  40f9c5:	into   
  40f9c6:	pop    es
  40f9c7:	jb     0x40fa29
  40f9c9:	dec    esi
  40f9ca:	add    esi,DWORD PTR [edx+eax*4]
  40f9cd:	inc    ebp
  40f9ce:	mov    ah,0xef
  40f9d0:	je     0x40fa10
  40f9d2:	adc    al,0x39
  40f9d4:	ins    DWORD PTR es:[edi],dx
  40f9d5:	adc    ch,BYTE PTR [eax+0x5ec63db8]
  40f9db:	out    dx,al
  40f9dc:	dec    edi
  40f9dd:	(bad)  
  40f9de:	leave  
  40f9df:	popa   
  40f9e0:	inc    ebp
  40f9e1:	mov    eax,DWORD PTR [edi-0x10cf7589]
  40f9e7:	push   eax
  40f9e8:	xor    eax,0xf9be892f
  40f9ed:	mov    esp,0xe4f36197
  40f9f2:	ss retf 
  40f9f4:	iret   
  40f9f5:	imul   ecx,DWORD PTR ds:0x40be06a5,0xffffffdf
  40f9fc:	add    BYTE PTR [esi+eiz*1],cl
  40f9ff:	dec    esi
  40fa00:	jns    0x40fa58
  40fa02:	push   eax
  40fa03:	mov    cl,0xf5
  40fa05:	xlat   BYTE PTR ds:[ebx]
  40fa06:	addr16 push ecx
  40fa08:	inc    esp
  40fa09:	mov    ebx,0xfd17cd87
  40fa0e:	jecxz  0x40f9d4
  40fa10:	pop    eax
  40fa11:	dec    esp
  40fa12:	add    al,0x94
  40fa14:	and    eax,0x806dda07
  40fa19:	aad    0xf1
  40fa1b:	std    
  40fa1c:	adc    DWORD PTR [ebp-0xd],esp
  40fa1f:	data16 in al,0x1f
  40fa22:	jbe    0x40fa42
  40fa24:	push   eax
  40fa25:	cs xchg edi,eax
  40fa27:	push   cs
  40fa28:	mov    esi,0xd40762da
  40fa2d:	jb     0x40f9b3
  40fa2f:	pop    es
  40fa30:	pop    es
  40fa31:	loope  0x40fa7f
  40fa33:	mov    al,0x63
  40fa35:	cmp    DWORD PTR [ebx+0x6c2a10e6],0x6e
  40fa3c:	int3   
  40fa3d:	cmp    eax,0x425012e7
  40fa42:	mov    ds:0xa649fc8f,eax
  40fa47:	popf   
  40fa48:	shl    BYTE PTR [eax+0x13],0x3
  40fa4c:	cmp    dl,BYTE PTR [ecx-0x4b79aab3]
  40fa52:	inc    esp
  40fa53:	dec    edi
  40fa54:	fnstcw WORD PTR [eax-0x28b0e73e]
  40fa5a:	cs dec ebx
  40fa5c:	(bad)  
  40fa5e:	outs   dx,BYTE PTR ds:[esi]
  40fa5f:	push   ds
  40fa60:	test   DWORD PTR [esi],ebp
  40fa62:	mov    ebx,0x59ca5fae
  40fa67:	jnp    0x40fabb
  40fa69:	and    DWORD PTR [ecx],ebx
  40fa6b:	dec    eax
  40fa6c:	fdivr  DWORD PTR [esi+0x1f]
  40fa6f:	xchg   ecx,eax
  40fa70:	dec    edx
  40fa71:	inc    ecx
  40fa72:	rcl    DWORD PTR gs:[edx+0x49],0xa5
  40fa77:	(bad)  
  40fa78:	or     BYTE PTR [ecx+0x36],al
  40fa7b:	mov    eax,ds:0x8b1949fb
  40fa80:	(bad)  
  40fa81:	or     eax,ebx
  40fa83:	or     BYTE PTR [eax+edx*1-0x46],bl
  40fa87:	cmp    eax,0xce2c6983
  40fa8c:	lods   al,BYTE PTR ds:[esi]
  40fa8d:	ret    0x3576
  40fa90:	cmp    BYTE PTR [ebp-0x7c],al
  40fa93:	push   0xffffff93
  40fa95:	ja     0x40fa52
  40fa97:	and    BYTE PTR [ecx-0x5b3db98c],al
  40fa9d:	shl    DWORD PTR [ebx+ebp*8],1
  40faa0:	mov    al,0x2e
  40faa2:	ja     0x40fad0
  40faa4:	push   eax
  40faa5:	jl     0x40faaf
  40faa7:	int    0x4e
  40faa9:	jb     0x40fa7b
  40faab:	std    
  40faac:	ins    BYTE PTR es:[edi],dx
  40faad:	sub    dh,BYTE PTR [ebx+ebp*4-0x40df6981]
  40fab4:	push   ebx
  40fab5:	pop    esi
  40fab6:	pop    ds
  40fab7:	retf   0x1ed4
  40faba:	in     al,0xaf
  40fabc:	sbb    ebx,DWORD PTR [ebx+0x7c]
  40fabf:	js     0x40fb0d
  40fac1:	cld    
  40fac2:	enter  0x74ef,0xb1
  40fac6:	hlt    
  40fac7:	dec    edi
  40fac8:	out    dx,al
  40fac9:	fs fcom st(3)
  40facc:	xor    eax,0x31b707b3
  40fad1:	inc    eax
  40fad2:	out    0x27,eax
  40fad4:	out    0x6e,al
  40fad6:	push   edi
  40fad7:	push   0xf6d5a8b3
  40fadc:	dec    esi
  40fadd:	repz std 
  40fadf:	adc    al,0x47
  40fae1:	sub    eax,0x95ead0cd
  40fae6:	or     BYTE PTR [esi],dh
  40fae8:	push   ds
  40fae9:	outs   dx,DWORD PTR ds:[esi]
  40faea:	fadd   QWORD PTR [esi+0x54]
  40faed:	mov    DWORD PTR [edx+ecx*8-0x14831bb6],edx
  40faf4:	pop    esp
  40faf5:	mov    DWORD PTR [edi],edx
  40faf7:	sbb    ch,BYTE PTR [ecx+0x48660a57]
  40fafd:	mov    dl,0x71
  40faff:	in     eax,0x35
  40fb01:	int    0x70
  40fb03:	cld    
  40fb04:	sbb    DWORD PTR [ecx+ebx*8],esi
  40fb07:	dec    ebp
  40fb08:	mov    edx,0x6b7bcec1
  40fb0d:	add    DWORD PTR [ebp+0x5729ae0c],eax
  40fb13:	int    0x83
  40fb15:	sbb    al,0xd2
  40fb17:	mov    bl,0x88
  40fb19:	mov    ecx,0x64e8149a
  40fb1e:	sbb    ebp,DWORD PTR [eax+0x28312de1]
  40fb24:	add    BYTE PTR [ebx-0x49],al
  40fb27:	push   0x1770f225
  40fb2c:	jns    0x40fba9
  40fb2e:	jp     0x40fb24
  40fb30:	sbb    dl,al
  40fb32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb33:	fmul   QWORD PTR [ecx]
  40fb35:	xchg   BYTE PTR [eax],al
  40fb37:	retf   
  40fb38:	dec    esi
  40fb39:	adc    DWORD PTR [edi+0x63],edi
  40fb3c:	jns    0x40fae7
  40fb3e:	shr    BYTE PTR ds:0x1982c8e3,1
  40fb44:	stos   BYTE PTR es:[edi],al
  40fb45:	cmp    BYTE PTR [ebx-0x14],ch
  40fb48:	lods   eax,DWORD PTR ds:[esi]
  40fb49:	(bad)  
  40fb4a:	aam    0x83
  40fb4c:	add    dl,dh
  40fb4e:	or     al,0x57
  40fb50:	add    ch,ch
  40fb52:	or     eax,0x293e244a
  40fb57:	add    al,0x70
  40fb59:	sub    eax,0xbbd9eb60
  40fb5e:	sar    BYTE PTR [ebp+edi*4+0xf1b82d2],cl
  40fb65:	sub    DWORD PTR [eax-0x65583613],0xffffff92
  40fb6c:	mov    esi,0xc6df4220
  40fb71:	dec    ebp
  40fb72:	scas   al,BYTE PTR es:[edi]
  40fb73:	xor    edx,DWORD PTR [ebx+edx*2+0x7d04f6be]
  40fb7a:	outs   dx,DWORD PTR ds:[esi]
  40fb7b:	clc    
  40fb7c:	fstp   QWORD PTR [edi-0x27]
  40fb7f:	jne    0x40fbe9
  40fb81:	add    al,0x4b
  40fb83:	xchg   ecx,eax
  40fb84:	lods   al,BYTE PTR ds:[esi]
  40fb85:	mov    ah,0xc8
  40fb87:	xchg   edx,eax
  40fb88:	call   0x4e5c2a45
  40fb8d:	jno    0x40fb2f
  40fb8f:	fimul  WORD PTR [ecx]
  40fb91:	popa   
  40fb92:	jmp    DWORD PTR [ebx+0x47]
  40fb95:	inc    edi
  40fb96:	repz sub BYTE PTR es:[edi+edx*8-0x1d7f43fe],al
  40fb9f:	xchg   edx,eax
  40fba0:	int    0xd9
  40fba2:	jo     0x40fbcc
  40fba4:	sar    bh,0x71
  40fba7:	in     al,dx
  40fba8:	jp     0x40fbfc
  40fbaa:	rol    BYTE PTR [edx-0x5af61fd6],cl
  40fbb0:	dec    esi
  40fbb1:	call   0xf3b779f9
  40fbb6:	ret    0x76ad
  40fbb9:	adc    al,0x75
  40fbbb:	sub    BYTE PTR [eax+ebx*4-0x15],ah
  40fbbf:	xchg   edi,eax
  40fbc0:	stc    
  40fbc1:	mov    DWORD PTR ds:0xef251ca7,esp
  40fbc7:	lahf   
  40fbc8:	outs   dx,BYTE PTR ds:[esi]
  40fbc9:	mov    ds:0xf7c11309,eax
  40fbce:	xchg   esi,eax
  40fbcf:	jo     0x40fbe0
  40fbd1:	cwde   
  40fbd2:	neg    BYTE PTR [ebx+0x699a88b0]
  40fbd8:	(bad)  
  40fbd9:	or     al,0x1a
  40fbdb:	arpl   WORD PTR [esi],bx
  40fbdd:	popf   
  40fbde:	add    eax,0x81be6805
  40fbe3:	sbb    ecx,DWORD PTR [ebx]
  40fbe5:	repz hlt 
  40fbe7:	lds    ebx,FWORD PTR ds:0x455179ea
  40fbed:	xor    BYTE PTR [edi],dl
  40fbef:	sub    al,0xb
  40fbf1:	inc    edx
  40fbf2:	sti    
  40fbf3:	or     eax,0x6423f50c
  40fbf8:	adc    DWORD PTR [ebp-0x61289456],ebx
  40fbfe:	adc    BYTE PTR [esi+0x5db9135d],0x25
  40fc05:	ins    BYTE PTR es:[edi],dx
  40fc06:	shr    DWORD PTR [edi],cl
  40fc08:	dec    ebx
  40fc09:	enter  0x9f4a,0xce
  40fc0d:	div    esp
  40fc0f:	rcr    cl,1
  40fc11:	leave  
  40fc12:	aas    
  40fc13:	sbb    BYTE PTR [esi+edi*4],0xd1
  40fc17:	cdq    
  40fc18:	add    BYTE PTR [edi+0x4871beae],dh
  40fc1e:	icebp  
  40fc1f:	shl    eax,0xc4
  40fc22:	call   0xc589:0x9ed04aae
  40fc29:	mov    ah,0x24
  40fc2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc2c:	(bad)  
  40fc2d:	imul   edi,DWORD PTR [edx],0x17
  40fc30:	div    BYTE PTR [eax+eax*1]
  40fc33:	add    BYTE PTR [ecx+0x18],dh
  40fc36:	lock in eax,0x9b
  40fc39:	aaa    
  40fc3a:	add    DWORD PTR [esp+esi*4+0x301d01b1],0x492cefb
  40fc45:	mov    ch,0x64
  40fc47:	loope  0x40fc6c
  40fc49:	int    0x4
  40fc4b:	jb     0x40fc1b
  40fc4d:	test   al,0x96
  40fc4f:	push   eax
  40fc50:	nop
  40fc51:	jmp    0x1e14:0x1459ae57
  40fc58:	iret   
  40fc59:	mov    ds:0xfcc8aa46,al
  40fc5e:	pop    ss
  40fc5f:	mov    bh,0xeb
  40fc61:	into   
  40fc62:	mov    dl,0xeb
  40fc64:	add    dl,BYTE PTR [esi+edi*2+0x733d802]
  40fc6b:	jo     0x40fc86
  40fc6d:	xchg   ecx,eax
  40fc6e:	stc    
  40fc6f:	pop    esi
  40fc70:	dec    ecx
  40fc71:	sub    eax,0xba45c97f
  40fc76:	es stc 
  40fc78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc79:	sahf   
  40fc7a:	lea    ecx,[edx]
  40fc7c:	mov    ebp,0x34761db2
  40fc81:	or     ebp,DWORD PTR [edx-0x19]
  40fc84:	jns    0x40fc89
  40fc86:	(bad)  
  40fc87:	fild   DWORD PTR [ebx]
  40fc89:	retf   
  40fc8a:	bound  edi,QWORD PTR [esi+0x4748272]
  40fc90:	les    esp,FWORD PTR [ebx]
  40fc92:	jne    0x40fca6
  40fc94:	or     eax,0xc503ffb0
  40fc99:	mov    cl,0xa1
  40fc9b:	outs   dx,DWORD PTR ds:[esi]
  40fc9c:	adc    al,0x80
  40fc9e:	loop   0x40fc61
  40fca0:	pop    ebx
  40fca1:	push   edx
  40fca2:	bound  eax,QWORD PTR gs:[edx+eax*4]
  40fca6:	mov    eax,0x24bb4700
  40fcab:	jns    0x40fcbd
  40fcad:	or     ch,cl
  40fcaf:	cmp    esp,eax
  40fcb1:	sbb    eax,0x7c7a2b2
  40fcb6:	inc    eax
  40fcb7:	inc    esi
  40fcb8:	mov    ecx,DWORD PTR es:[edx+0x1eebe803]
  40fcbf:	cmc    
  40fcc0:	inc    ecx
  40fcc1:	fs push ebx
  40fcc3:	rcr    DWORD PTR [ecx],1
  40fcc5:	call   0x6e92:0xb51268ca
  40fccc:	xchg   DWORD PTR [ebp-0x40],esi
  40fccf:	scas   al,BYTE PTR es:[edi]
  40fcd0:	fnsave [ebp-0x69]
  40fcd3:	jp     0x40fd41
  40fcd5:	stos   BYTE PTR es:[edi],al
  40fcd6:	jmp    0x48473685
  40fcdb:	push   esi
  40fcdc:	xor    edi,edi
  40fcde:	pop    eax
  40fcdf:	ds xchg edx,eax
  40fce1:	sbb    al,0xd7
  40fce3:	mov    cl,0x6a
  40fce5:	cmp    DWORD PTR [ecx-0x4bf4ce11],0x9
  40fcec:	daa    
  40fced:	test   al,bh
  40fcef:	ins    DWORD PTR es:[edi],dx
  40fcf0:	mov    edi,0x1ac2145f
  40fcf5:	jmp    0x40fcb6
  40fcf7:	jmp    0x73c7:0xaa4e7e63
  40fcfe:	stos   DWORD PTR es:[edi],eax
  40fcff:	in     al,0xf5
  40fd01:	(bad)  
  40fd02:	repnz popf 
  40fd04:	mov    ds:0x1d7a9aa7,al
  40fd09:	inc    eax
  40fd0a:	jecxz  0x40fc8c
  40fd0c:	imul   esp,DWORD PTR [edx-0xf86c706],0xfffffff4
  40fd13:	mov    BYTE PTR [esi],cl
  40fd15:	sbb    eax,0xb76e4203
  40fd1a:	mov    ch,0x3b
  40fd1c:	push   0xda744648
  40fd21:	sub    ch,BYTE PTR [ecx]
  40fd23:	shl    bh,cl
  40fd25:	xor    al,0x29
  40fd27:	out    dx,al
  40fd28:	and    DWORD PTR [esi*1-0x6b96fa97],ebx
  40fd2f:	in     al,0x3f
  40fd31:	daa    
  40fd32:	leave  
  40fd33:	lods   eax,DWORD PTR ds:[esi]
  40fd34:	xchg   edx,eax
  40fd35:	push   ss
  40fd36:	inc    esp
  40fd37:	jbe    0x40fd06
  40fd39:	mov    ecx,0xaae7dcde
  40fd3e:	int    0x7
  40fd40:	add    eax,0xeb7cdca5
  40fd45:	dec    edi
  40fd46:	test   eax,0x19083e0
  40fd4b:	push   ss
  40fd4c:	rcl    ch,1
  40fd4e:	into   
  40fd4f:	nop
  40fd50:	fdiv   QWORD PTR [ebx+edi*2+0x1bbbc5a7]
  40fd57:	xchg   ebx,eax
  40fd58:	fsub   DWORD PTR [ebp+0xa]
  40fd5b:	imul   ebx,eax,0x74
  40fd5e:	and    DWORD PTR [eax+0x70422054],ebx
  40fd64:	jp     0x40fd7a
  40fd66:	std    
  40fd67:	addr16 pop eax
  40fd69:	lods   al,BYTE PTR ds:[esi]
  40fd6a:	repnz mov ds:0x7e5d13d,al
  40fd70:	ret    
  40fd71:	mov    eax,0x1e568a5b
  40fd76:	jbe    0x40fda3
  40fd78:	(bad)  
  40fd79:	stos   BYTE PTR es:[edi],al
  40fd7a:	mov    al,ch
  40fd7c:	out    dx,eax
  40fd7d:	and    eax,DWORD PTR [ecx+0x10]
  40fd80:	or     cl,BYTE PTR [esi]
  40fd82:	scas   eax,DWORD PTR es:[edi]
  40fd83:	jecxz  0x40fd86
  40fd85:	lea    edi,[eax+edx*1]
  40fd88:	ds mov ebp,ebp
  40fd8b:	jge    0x40fded
  40fd8d:	xor    DWORD PTR [esi+0x55167f30],0x57
  40fd94:	xor    DWORD PTR [eax],0x57c96062
  40fd9a:	pusha  
  40fd9b:	push   esi
  40fd9c:	outs   dx,BYTE PTR ds:[esi]
  40fd9d:	enter  0xc860,0x55
  40fda1:	push   ebp
  40fda2:	xor    DWORD PTR [eax+0x75c0e884],edx
  40fda8:	mov    ch,0x85
  40fdaa:	loopne 0x40fd53
  40fdac:	jnp    0x40fd3c
  40fdae:	(bad)  
  40fdaf:	jecxz  0x40fdcd
  40fdb1:	loopne 0x40fd4e
  40fdb3:	and    ebx,ecx
  40fdb5:	sti    
  40fdb6:	cdq    
  40fdb7:	ss cdq 
  40fdb9:	icebp  
  40fdba:	cdq    
  40fdbb:	sub    ebp,ecx
  40fdbd:	adc    eax,DWORD PTR [ebx+ebx*8+0x68ecfe1b]
  40fdc4:	xchg   ebx,eax
  40fdc5:	and    ebx,ecx
  40fdc7:	push   es
  40fdc8:	and    BYTE PTR [esi+0x122c9b0c],al
  40fdce:	popa   
  40fdcf:	xlat   BYTE PTR ds:[ebx]
  40fdd0:	rcl    DWORD PTR [ecx+0x5be71d35],0x5f
  40fdd7:	imul   edx,DWORD PTR [bp+di],0xffffffa0
  40fddb:	inc    ebp
  40fddc:	sar    edi,cl
  40fdde:	pop    es
  40fddf:	mov    bl,0xe4
  40fde1:	not    BYTE PTR [esi-0x2f]
  40fde4:	jge    0x40fda3
  40fde6:	lock dec ecx
  40fde8:	xor    ah,BYTE PTR [esi+0x69]
  40fdeb:	push   cs
  40fdec:	ret    
  40fded:	sub    edi,DWORD PTR [esi]
  40fdef:	das    
  40fdf0:	jg     0x40fdb0
  40fdf2:	add    al,0xcc
  40fdf4:	mov    dl,0x5a
  40fdf6:	cmp    DWORD PTR [eax],eax
  40fdf8:	xor    BYTE PTR [eax],dl
  40fdfa:	ror    BYTE PTR [ebp+0x30],0x2d
  40fdfe:	pop    eax
  40fdff:	xchg   ecx,eax
  40fe00:	rol    DWORD PTR [ebp+0x1c],cl
  40fe03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe04:	ins    DWORD PTR es:[edi],dx
  40fe05:	jl     0x40fe31
  40fe07:	gs mov ebx,0x23855007
  40fe0d:	inc    ebp
  40fe0e:	cmp    al,0x83
  40fe10:	dec    edx
  40fe11:	retf   
  40fe12:	sub    eax,0x43adb007
  40fe17:	pop    es
  40fe18:	or     ah,BYTE PTR [ecx+ebp*8-0x69c09bf1]
  40fe1f:	fist   WORD PTR [edx+ebx*8]
  40fe22:	or     edi,DWORD PTR [edi+0xe291d24]
  40fe28:	xor    esi,ebx
  40fe2a:	enter  0xd1bb,0x7d
  40fe2e:	inc    ebp
  40fe2f:	or     eax,0x964e2af6
  40fe34:	push   ss
  40fe35:	repnz std 
  40fe37:	pop    es
  40fe38:	mov    ss,WORD PTR [edx-0x4d]
  40fe3b:	ja     0x40fe7e
  40fe3d:	lods   eax,DWORD PTR ds:[esi]
  40fe3e:	imul   eax,DWORD PTR [esi],0x6c88b65d
  40fe44:	jo     0x40fe71
  40fe46:	int3   
  40fe47:	stc    
  40fe48:	mov    esi,0xc48dbb3a
  40fe4d:	mov    ah,0x1e
  40fe4f:	in     eax,dx
  40fe50:	xlat   BYTE PTR ds:[ebx]
  40fe51:	fisttp WORD PTR [edx+ecx*4]
  40fe54:	jnp    0x40feac
  40fe56:	sbb    BYTE PTR ds:0xdf883afa,al
  40fe5c:	sbb    eax,0x18901692
  40fe61:	sar    BYTE PTR [ebx+0x4c],cl
  40fe64:	sbb    edx,DWORD PTR es:[ecx]
  40fe67:	inc    ebp
  40fe68:	ds mov eax,0xd52f65c
  40fe6e:	call   0xd863b485
  40fe73:	loope  0x40fe5b
  40fe75:	xchg   edi,eax
  40fe76:	pop    ebp
  40fe77:	mov    bh,0xe0
  40fe79:	add    al,0x49
  40fe7b:	push   esp
  40fe7c:	add    ah,BYTE PTR [ebx]
  40fe7e:	mov    gs,WORD PTR [ecx]
  40fe80:	ficomp WORD PTR [edx]
  40fe82:	std    
  40fe83:	mov    al,0xa
  40fe85:	push   ds
  40fe86:	push   esp
  40fe87:	pop    eax
  40fe88:	les    ebx,FWORD PTR [ecx+0x577f28f9]
  40fe8e:	out    dx,eax
  40fe8f:	sbb    al,0x72
  40fe91:	(bad)  
  40fe92:	(bad)  
  40fe93:	cmp    ah,BYTE PTR [ecx-0x4c]
  40fe96:	retf   0x2e40
  40fe99:	jge    0x40fe23
  40fe9b:	icebp  
  40fe9c:	idiv   BYTE PTR [ecx+0x35]
  40fe9f:	push   es
  40fea0:	inc    esp
  40fea1:	inc    esi
  40fea2:	stc    
  40fea3:	es push ebx
  40fea5:	or     BYTE PTR [ebp+0x34],bh
  40fea8:	add    al,0x1b
  40feaa:	ins    BYTE PTR es:[edi],dx
  40feab:	mov    eax,ds:0x891f29d2
  40feb0:	push   ss
  40feb1:	in     al,dx
  40feb2:	(bad)  
  40feb3:	aas    
  40feb4:	push   eax
  40feb6:	dec    edx
  40feb7:	in     al,0x15
  40feb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40feba:	cmp    ebp,DWORD PTR [edi-0x326fa5c0]
  40fec0:	inc    edx
  40fec1:	(bad)  
  40fec2:	push   ss
  40fec3:	inc    edx
  40fec4:	xchg   edx,eax
  40fec5:	shr    DWORD PTR ds:0x52b937d8,1
  40fecb:	popa   
  40fecc:	cmp    edi,DWORD PTR [esi+0x1f2e361]
  40fed2:	xor    BYTE PTR [ebx-0x5d],ah
  40fed5:	call   0x6b09a6d2
  40feda:	retf   
  40fedb:	je     0x40fee2
  40fedd:	test   eax,0x11822d5b
  40fee2:	sbb    ah,cl
  40fee4:	adc    ah,BYTE PTR es:[ebp-0x50]
  40fee8:	mov    WORD PTR [edx],es
  40feea:	cmp    DWORD PTR [ebx+0x13],ebx
  40feed:	imul   edx,DWORD PTR [edi-0x43],0xffffffd4
  40fef1:	fs les eax,FWORD PTR gs:[edi]
  40fef5:	je     0x40fea0
  40fef7:	dec    esi
  40fef8:	jb     0x40ff75
  40fefa:	sti    
  40fefb:	add    cl,BYTE PTR [ecx-0x4ebba86c]
  40ff01:	mov    edi,0x265df9cd
  40ff06:	add    bh,ah
  40ff08:	push   es
  40ff09:	div    DWORD PTR [edx+0x64980933]
  40ff0f:	add    dh,BYTE PTR [eax]
  40ff11:	adc    BYTE PTR [ecx],ch
  40ff13:	inc    esp
  40ff14:	(bad)  
  40ff15:	enter  0xb82d,0x75
  40ff19:	or     eax,0x3ebdc5b3
  40ff1e:	cmp    esp,DWORD PTR [ebx]
  40ff20:	xor    BYTE PTR [ecx-0x6536d8d2],0x3c
  40ff27:	arpl   WORD PTR [ebx+0xa680e0a],bp
  40ff2d:	in     al,0x7e
  40ff2f:	pop    esp
  40ff30:	inc    edi
  40ff31:	inc    eax
  40ff32:	scas   al,BYTE PTR es:[edi]
  40ff33:	ficom  DWORD PTR [edx+0x4d982537]
  40ff39:	sbb    DWORD PTR [ebp-0x31],edx
  40ff3c:	les    edi,FWORD PTR [esi-0x46871ec5]
  40ff42:	xlat   BYTE PTR ds:[ebx]
  40ff43:	mov    BYTE PTR [esi],dh
  40ff45:	neg    BYTE PTR ds:0xf13eef28
  40ff4b:	std    
  40ff4c:	leave  
  40ff4d:	mov    DWORD PTR [ebx+0x5ade1aee],esi
  40ff53:	retf   0xff44
  40ff56:	in     eax,dx
  40ff57:	or     cl,0xb7
  40ff5a:	dec    eax
  40ff5b:	jmp    0x40ff1f
  40ff5d:	aad    0x2c
  40ff5f:	sbb    al,0x50
  40ff61:	imul   edi,DWORD PTR [eax+ebx*4-0x20dcce3c],0xe1e07671
  40ff6c:	cwde   
  40ff6d:	imul   esi,esp,0xf5661930
  40ff73:	jecxz  0x40ff48
  40ff75:	and    BYTE PTR [ebx-0x70698e1b],bl
  40ff7b:	call   0xfc2:0xf4dfde51
  40ff82:	int3   
  40ff83:	push   ecx
  40ff84:	repz jge 0x40ffd7
  40ff87:	popf   
  40ff88:	xchg   esp,eax
  40ff89:	jbe    0x40ff26
  40ff8b:	ror    DWORD PTR [esi+0x1a],cl
  40ff8e:	mov    bh,0x65
  40ff90:	sbb    al,0x3e
  40ff92:	push   ss
  40ff93:	pop    edx
  40ff94:	loop   0x40ffcd
  40ff96:	add    edi,DWORD PTR [edi-0x4f]
  40ff99:	imul   edi,eax,0x26337b5
  40ff9f:	sar    edi,1
  40ffa1:	outs   dx,BYTE PTR ds:[esi]
  40ffa2:	pop    ebp
  40ffa3:	xchg   esp,eax
  40ffa4:	pop    esp
  40ffa5:	js     0x40ffed
  40ffa7:	lock hlt 
  40ffa9:	inc    esp
  40ffaa:	cmp    ebp,DWORD PTR [edx]
  40ffac:	pop    ebp
  40ffad:	jmp    0x40ffcf
  40ffaf:	mov    bh,0x1a
  40ffb1:	ds push eax
  40ffb3:	jo     0x40ff39
  40ffb5:	mov    ebp,0x9d441130
  40ffba:	fcom   QWORD PTR [eax-0x1a]
  40ffbd:	sbb    eax,0xbd69f73b
  40ffc2:	dec    esp
  40ffc3:	xchg   ebx,eax
  40ffc4:	jo     0x40ff9c
  40ffc6:	ss mov bh,ah
  40ffc9:	fimul  DWORD PTR [eax+ebp*2]
  40ffcc:	push   esp
  40ffcd:	leave  
  40ffce:	rol    BYTE PTR [ebx-0x4e],0xb4
  40ffd2:	xor    al,0x3d
  40ffd4:	lods   al,BYTE PTR ds:[esi]
  40ffd5:	ins    BYTE PTR es:[edi],dx
  40ffd6:	push   es
  40ffd7:	mov    ds:0xbf2c8dec,eax
  40ffdc:	push   cs
  40ffdd:	push   es
  40ffde:	pushf  
  40ffdf:	dec    ecx
  40ffe0:	or     DWORD PTR [ebp-0x5555ad89],ecx
  40ffe6:	dec    ebp
  40ffe7:	loop   0x40ff6d
  40ffe9:	js     0x40ffa2
  40ffeb:	bound  edx,QWORD PTR [ebp-0x4]
  40ffee:	popa   
  40ffef:	les    ebp,FWORD PTR [esi]
  40fff1:	test   eax,0x6bbf6bd2
  40fff6:	mov    edi,0xbb3cd98
  40fffb:	inc    ecx
  40fffc:	jo     0x40ffeb
  40fffe:	jl     0x40ffa7
  410000:	and    al,0x6d
  410002:	repnz or BYTE PTR [ecx],dl
  410005:	ds jo  0x410061
  410008:	xchg   esp,eax
  410009:	outs   dx,BYTE PTR ds:[esi]
  41000a:	mov    ch,0xc2
  41000c:	mov    ch,0xdc
  41000e:	ficom  DWORD PTR [edi-0x41]
  410011:	fld    DWORD PTR [ecx+0x673c293]
  410017:	mov    ch,0xee
  410019:	lea    edx,[ebp+0x7c]
  41001c:	sub    dl,BYTE PTR [esi]
  41001e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41001f:	sub    al,0x65
  410021:	push   ebp
  410022:	mov    ecx,0x571177c7
  410027:	dec    esi
  410028:	push   eax
  410029:	sub    DWORD PTR [esi+0x2d],0xa2aee12c
  410030:	into   
  410031:	inc    ebp
  410032:	fldcw  WORD PTR [ebp+0x30]
  410035:	pop    ds
  410036:	out    0xe8,al
  410038:	imul   edx,DWORD PTR [edi],0x3de712f2
  41003e:	adc    eax,edi
  410040:	mov    bh,0xa4
  410042:	mov    edx,0xd68f726e
  410047:	ss out dx,al
  410049:	inc    esp
  41004a:	call   0xadf0be34
  41004f:	xchg   edi,eax
  410050:	fisubr WORD PTR [eax+0x7b]
  410053:	test   BYTE PTR [ecx+0x5247d125],0xa1
  41005a:	push   0x68040ebd
  41005f:	adc    eax,0x42f71257
  410064:	jle    0x41007c
  410066:	xor    al,0xae
  410068:	xchg   edx,eax
  410069:	leave  
  41006a:	cwde   
  41006b:	bt     DWORD PTR [ecx+0x29],0x82
  410070:	and    esp,DWORD PTR [esi+0x4e]
  410073:	addr16 push esi
  410075:	jbe    0x410065
  410077:	leave  
  410078:	fdiv   st,st(7)
  41007a:	rol    DWORD PTR [esi],1
  41007c:	add    ch,BYTE PTR [ebx-0x59b56456]
  410082:	lahf   
  410083:	enter  0xc0ef,0x37
  410087:	nop
  410088:	mov    cl,0x2c
  41008a:	or     dl,BYTE PTR [eax]
  41008c:	imul   edx,DWORD PTR [eax],0x9e2c3068
  410092:	cld    
  410093:	repnz fdivr st,st(6)
  410096:	add    BYTE PTR [edx-0x6e758ddf],ch
  41009c:	cld    
  41009d:	and    ecx,eax
  41009f:	retf   0x4ef0
  4100a2:	fwait
  4100a3:	(bad)  
  4100a4:	aad    0x96
  4100a6:	xor    eax,0xff977160
  4100ab:	or     edx,0x9778b270
  4100b1:	out    0x8d,eax
  4100b3:	pusha  
  4100b4:	lods   al,BYTE PTR ds:[esi]
  4100b5:	mov    ebp,0x3b5138d2
  4100ba:	and    DWORD PTR [ecx+edx*1],ebp
  4100bd:	dec    esi
  4100be:	pop    ecx
  4100bf:	mov    ds:0xe69e2fba,al
  4100c4:	mov    ds:0xee5e1888,eax
  4100c9:	mov    ds:0x293d76ba,eax
  4100ce:	scas   al,BYTE PTR es:[edi]
  4100cf:	imul   ebx,DWORD PTR [ebx+eiz*4-0x76427e73],0xffffff86
  4100d7:	xor    edx,0x1a9a14d7
  4100dd:	mov    esi,0xad645610
  4100e2:	sub    al,0x1e
  4100e4:	in     al,dx
  4100e5:	lock and eax,0x2d759cdc
  4100eb:	daa    
  4100ec:	jno    0x410165
  4100ee:	loop   0x4100ae
  4100f0:	jg     0x41009d
  4100f2:	inc    ebx
  4100f3:	sahf   
  4100f4:	lds    ecx,FWORD PTR [eax]
  4100f6:	data16 and BYTE PTR cs:[edi-0x284618d3],al
  4100fe:	test   dl,0xa5
  410101:	mov    al,0x20
  410103:	shr    BYTE PTR [esi+edi*1-0x168faeac],cl
  41010a:	sub    al,0x63
  41010c:	dec    esi
  41010d:	cdq    
  41010e:	xchg   DWORD PTR [ebx+eax*4-0x581e0414],edx
  410115:	addr16 retf 0x44d0
  410119:	and    ah,dl
  41011b:	pushf  
  41011c:	and    BYTE PTR [ebx],al
  41011e:	inc    ecx
  41011f:	mov    BYTE PTR [ebp-0x35],al
  410122:	retf   
  410123:	(bad)  
  410124:	loop   0x4100d3
  410126:	call   0x2aa8c409
  41012b:	push   ecx
  41012c:	retf   0x9a47
  41012f:	repnz outs dx,BYTE PTR ds:[esi]
  410131:	(bad)  
  410132:	icebp  
  410133:	sub    ebx,DWORD PTR [ecx-0x3ea4767c]
  410139:	xchg   edi,eax
  41013a:	xor    cl,ch
  41013c:	push   ebx
  41013d:	cs inc edx
  41013f:	pop    DWORD PTR [ecx+0x4a]
  410142:	sbb    DWORD PTR [ecx],0x16df6f91
  410148:	call   0x1776:0x83d6ba1e
  41014f:	add    cl,0x34
  410152:	jle    0x410171
  410154:	daa    
  410155:	fsubr  st(1),st
  410157:	adc    eax,0x9489c6a0
  41015c:	das    
  41015d:	jae    0x4101ca
  41015f:	nop
  410160:	mov    esp,0x1a8b9343
  410165:	das    
  410166:	adc    esi,ebp
  410168:	psllw  mm0,QWORD PTR [ecx+0x1ae2752c]
  41016f:	nop
  410170:	dec    edx
  410171:	xor    al,0xef
  410173:	call   0xa5c119a3
  410178:	push   esp
  410179:	addr16 adc ecx,0xe2e311a4
  410180:	iret   
  410181:	repnz mov eax,0x1fe91ee9
  410187:	mov    bh,0xf5
  410189:	js     0x4101d0
  41018b:	dec    edx
  41018c:	out    dx,al
  41018d:	xchg   esp,eax
  41018e:	jb     0x4101fa
  410190:	bound  esp,QWORD PTR [eax+0x5db65c7f]
  410196:	sbb    ax,0xdf0b
  41019a:	ss in  al,dx
  41019c:	fld    QWORD PTR [edi-0x166bf646]
  4101a2:	xchg   BYTE PTR [edx+0x6a],ah
  4101a5:	mov    ebx,DWORD PTR [edi+0x6b]
  4101a8:	mov    ds:0x7aff7ac9,al
  4101ad:	push   edx
  4101ae:	retf   0x7504
  4101b1:	addr16 mov ?,edi
  4101b4:	dec    ecx
  4101b5:	and    cl,BYTE PTR [esi+0x380284de]
  4101bb:	nop
  4101bc:	std    
  4101bd:	aam    0xca
  4101bf:	fwait
  4101c0:	cwde   
  4101c1:	stos   BYTE PTR es:[edi],al
  4101c2:	test   BYTE PTR [ebp+0x20],bh
  4101c5:	std    
  4101c6:	inc    eax
  4101c7:	(bad)  [eax-0xac2843]
  4101cd:	cmp    ebx,0x5e
  4101d0:	push   ss
  4101d1:	and    ch,BYTE PTR [esi-0x5b]
  4101d4:	add    al,0x3b
  4101d6:	add    eax,0x5fc3a662
  4101db:	push   ebx
  4101dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101dd:	sub    eax,0xfac34447
  4101e2:	pushf  
  4101e3:	in     eax,0x3d
  4101e5:	mov    ah,0xd
  4101e7:	sti    
  4101e8:	scas   al,BYTE PTR es:[edi]
  4101e9:	push   es
  4101ea:	mov    ch,0x9c
  4101ec:	jne    0x4101d4
  4101ee:	push   ds
  4101ef:	ds es pop ebx
  4101f2:	push   edi
  4101f3:	xchg   DWORD PTR [ebx-0x5770a65],ebx
  4101f9:	mov    esp,?
  4101fb:	sbb    esp,DWORD PTR [ebp+0x6b]
  4101fe:	daa    
  4101ff:	lods   al,BYTE PTR es:[esi]
  410201:	ret    
  410202:	mov    ds:0x6db80480,eax
  410207:	xlat   BYTE PTR ds:[ebx]
  410208:	inc    esi
  410209:	mov    eax,0x9673cd82
  41020e:	pop    ebx
  41020f:	or     ebp,DWORD PTR [ebx-0x5e38483]
  410215:	inc    eax
  410216:	and    al,0xe3
  410218:	pop    ecx
  410219:	xor    BYTE PTR [edi-0x573871e8],dh
  41021f:	es pop esi
  410221:	and    DWORD PTR [ebx-0x47],esp
  410224:	icebp  
  410225:	jecxz  0x4101ff
  410227:	cwde   
  410228:	mov    esp,0x59b1aef3
  41022d:	xchg   esp,eax
  41022e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41022f:	mov    cl,0xa2
  410231:	xlat   BYTE PTR ds:[ebx]
  410232:	aad    0x50
  410234:	gs gs leave 
  410237:	sbb    BYTE PTR [edi+edi*2],bl
  41023a:	adc    eax,0x4577dee0
  41023f:	push   eax
  410240:	jo     0x4102b3
  410242:	ja     0x4102bd
  410244:	mov    DWORD PTR [esi],esp
  410246:	ins    DWORD PTR es:[edi],dx
  410247:	jecxz  0x41028a
  410249:	jbe    0x410281
  41024b:	mov    edx,0xd10b4892
  410250:	pop    esi
  410251:	outs   dx,BYTE PTR ds:[esi]
  410252:	xor    al,0xb6
  410254:	loop   0x4102a2
  410256:	inc    edx
  410257:	arpl   bx,bp
  410259:	cli    
  41025a:	dec    edi
  41025b:	xchg   edx,eax
  41025c:	xchg   ebp,eax
  41025d:	mov    al,ds:0x24a77d6d
  410262:	(bad)  
  410263:	inc    esp
  410264:	jmp    0xc5c768f3
  410269:	leave  
  41026a:	ins    BYTE PTR es:[edi],dx
  41026b:	mov    edi,0x8c4c9f2a
  410270:	in     eax,dx
  410271:	mov    cs,WORD PTR [eax-0x43c42d8c]
  410277:	imul   eax,DWORD PTR [edi+0x3287ae99],0x87de7eb5
  410281:	push   es
  410282:	push   cs
  410283:	sub    DWORD PTR [ebx+0x4d],edi
  410286:	lds    edx,FWORD PTR [ebp+0x127493fd]
  41028c:	jge    0x410292
  41028e:	sub    bl,BYTE PTR [ecx-0x25]
  410291:	leave  
  410292:	mov    esp,DWORD PTR [ebx]
  410294:	inc    BYTE PTR [edx+edi*2]
  410297:	sbb    bh,dh
  410299:	retf   0x29
  41029c:	outs   dx,BYTE PTR ds:[esi]
  41029d:	jmp    0x4cbe:0xd24bebf5
  4102a4:	dec    ecx
  4102a5:	scas   al,BYTE PTR es:[edi]
  4102a6:	in     al,0x41
  4102a8:	hlt    
  4102a9:	pop    es
  4102aa:	sbb    edi,DWORD PTR [ecx+0x4ac248ae]
  4102b0:	add    ebp,DWORD PTR [ecx-0x5afdaef7]
  4102b6:	pop    ebx
  4102b7:	push   esi
  4102b8:	ret    
  4102b9:	ret    
  4102ba:	ret    
  4102bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102bc:	pop    ds
  4102bd:	fwait
  4102be:	mov    ecx,0x2a518c0d
  4102c3:	pop    es
  4102c4:	int    0xa2
  4102c6:	lahf   
  4102c7:	imul   edx,DWORD PTR [edi+0x72],0x47
  4102cb:	lds    edi,FWORD PTR [edx]
  4102cd:	push   edi
  4102ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102cf:	adc    ebp,DWORD PTR [edx+ebp*2-0x25]
  4102d3:	stos   DWORD PTR es:[edi],eax
  4102d4:	inc    edi
  4102d5:	inc    esp
  4102d6:	jecxz  0x4102b9
  4102d8:	mov    ah,0x20
  4102da:	es dec edi
  4102dc:	popf   
  4102dd:	in     eax,dx
  4102de:	xlat   BYTE PTR ds:[ebx]
  4102df:	inc    ebp
  4102e0:	xchg   ecx,eax
  4102e1:	add    eax,0xdd3171ff
  4102e6:	xchg   BYTE PTR [ecx+esi*8],al
  4102e9:	jns    0x410306
  4102eb:	test   DWORD PTR [ebx],ebp
  4102ed:	xor    eax,0xccd5ae4c
  4102f2:	xor    al,0xf9
  4102f4:	xchg   ebx,eax
  4102f5:	or     DWORD PTR [eax+0x2d1edeb0],0x12
  4102fc:	ja     0x410290
  4102fe:	sti    
  4102ff:	je     0x41030f
  410301:	ins    BYTE PTR es:[edi],dx
  410302:	ret    
  410303:	shr    cl,1
  410305:	retf   0x1762
  410308:	sbb    BYTE PTR [edi-0x18],ah
  41030b:	repz int 0xf8
  41030e:	jge    0x41031c
  410310:	mov    ecx,0x160e5d2f
  410315:	mov    bl,0x2
  410317:	rcr    DWORD PTR [ecx-0x60],0xea
  41031b:	inc    edx
  41031c:	in     al,0x4d
  41031e:	adc    BYTE PTR [edi-0x3d],cl
  410321:	adc    al,0x3e
  410323:	icebp  
  410324:	sub    DWORD PTR [ebx-0x60],edx
  410327:	add    ah,BYTE PTR [eax+edx*4+0x9]
  41032b:	mov    ecx,0x96519b86
  410330:	add    BYTE PTR [ebp+eiz*8+0x51],ch
  410334:	jae    0x4102bb
  410336:	mov    edx,0xc6805108
  41033b:	xchg   esp,eax
  41033c:	jle    0x410307
  41033e:	mov    edi,0x4f85d307
  410343:	mov    edi,0x4ec8a532
  410348:	add    ecx,DWORD PTR [eax-0xc]
  41034b:	sub    dl,BYTE PTR ds:0x3eb92c09
  410351:	lock and DWORD PTR [ebx-0x40bdd5a3],ecx
  410358:	loop   0x410312
  41035a:	and    dh,BYTE PTR [ebx]
  41035c:	data16 aas 
  41035e:	push   edi
  41035f:	jl     0x410346
  410361:	pushf  
  410362:	jg     0x410387
  410364:	mov    dh,0xfc
  410366:	pop    esp
  410367:	dec    edi
  410368:	dec    edx
  410369:	fnstsw WORD PTR [esi+0x49172bb6]
  41036f:	jge    0x4103bc
  410371:	sub    BYTE PTR [ecx-0x57],cl
  410374:	and    esp,DWORD PTR [edi-0x5922e1c8]
  41037a:	cmp    al,0xd2
  41037c:	xlat   BYTE PTR ds:[ebx]
  41037d:	dec    ebx
  41037e:	in     al,0x63
  410380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410381:	push   cs
  410382:	push   ebp
  410383:	sbb    DWORD PTR [esi+0x96a655b],esi
  410389:	sub    DWORD PTR [eax+0x66],edi
  41038c:	fwait
  41038d:	adc    eax,0x17b10eaa
  410392:	(bad)  
  410393:	jmp    DWORD PTR [esi+0x6f]
  410396:	ret    0x1faf
  410399:	leave  
  41039a:	jl     0x41031d
  41039c:	jmp    DWORD PTR [ebx+0x5bc339dc]
  4103a2:	stos   DWORD PTR es:[edi],eax
  4103a3:	sub    DWORD PTR [esi-0x5346dbd7],eax
  4103a9:	inc    eax
  4103aa:	fdiv   st,st(4)
  4103ac:	jp     0x4103c1
  4103ae:	stos   BYTE PTR es:[edi],al
  4103af:	lods   al,BYTE PTR ds:[esi]
  4103b0:	push   cs
  4103b1:	int3   
  4103b2:	das    
  4103b3:	sbb    cl,al
  4103b5:	(bad)  
  4103b6:	sub    eax,0x2883fa94
  4103bb:	ret    
  4103bc:	mov    ah,0xf5
  4103be:	xchg   esp,eax
  4103bf:	pop    ebx
  4103c0:	sbb    eax,0xaf8653b9
  4103c5:	retf   
  4103c6:	test   cl,bl
  4103c8:	adc    al,cl
  4103ca:	jno    0x4103d8
  4103cc:	cdq    
  4103cd:	fcom   DWORD PTR ds:0xa6594c56
  4103d3:	sbb    bl,cl
  4103d5:	push   0x7
  4103d7:	aam    0xc8
  4103d9:	xchg   ecx,eax
  4103da:	hlt    
  4103db:	pushf  
  4103dc:	out    dx,eax
  4103dd:	nop
  4103de:	imul   ebp,DWORD PTR [esi],0xffffff8c
  4103e1:	test   DWORD PTR [edi+eiz*2],ebp
  4103e4:	ins    DWORD PTR es:[edi],dx
  4103e5:	iret   
  4103e6:	(bad)  
  4103e7:	out    0xcb,al
  4103e9:	cmp    BYTE PTR [eax],ch
  4103eb:	jbe    0x410402
  4103ed:	add    BYTE PTR [esi],ah
  4103ef:	and    ecx,ebx
  4103f1:	xchg   ebp,eax
  4103f2:	jb     0x41038e
  4103f4:	ja     0x410452
  4103f6:	fldenv [ebp-0x5854af50]
  4103fc:	fnstenv [edi-0xa]
  4103ff:	popa   
  410400:	adc    al,dh
  410402:	dec    ebp
  410403:	lahf   
  410404:	(bad)  
  410406:	push   0xffffff93
  410408:	jmp    0x410451
  41040a:	push   esi
  41040b:	das    
  41040c:	es sub eax,0x8fd2cade
  410412:	jmp    0x4103d0
  410414:	mov    ecx,0x1cb35e1b
  410419:	(bad)  
  41041a:	dec    edi
  41041b:	into   
  41041c:	dec    edi
  41041d:	inc    eax
  41041e:	sbb    al,0x6d
  410420:	sbb    bh,BYTE PTR ds:0x4360e88d
  410426:	sub    eax,0x493869ac
  41042b:	shl    BYTE PTR [edi],1
  41042d:	cmp    eax,0xc3848892
  410432:	ds mov ah,0x76
  410435:	lock scas al,BYTE PTR es:[edi]
  410437:	cmp    eax,0xfe799118
  41043c:	mov    eax,0xfc500d82
  410441:	inc    edi
  410442:	into   
  410443:	imul   ecx,DWORD PTR [ebx+0x20],0xdffd13c8
  41044a:	ja     0x410482
  41044c:	sbb    DWORD PTR [eax-0x4a],edi
  41044f:	dec    ecx
  410450:	and    BYTE PTR [eax+0x1f],bl
  410453:	jl     0x410429
  410455:	push   eax
  410456:	(bad)  
  410457:	or     edi,DWORD PTR [ebx]
  410459:	js     0x4104a6
  41045b:	sbb    bh,BYTE PTR ds:0x5e651ce8
  410461:	sbb    al,0x95
  410463:	mov    bh,0x5d
  410465:	cmp    ch,BYTE PTR [edi+0x26]
  410468:	aaa    
  410469:	pop    edi
  41046a:	scas   al,BYTE PTR es:[edi]
  41046b:	xor    eax,0xe4ce852f
  410470:	les    ecx,FWORD PTR [edi+0x1ebb87ac]
  410476:	lahf   
  410477:	mov    cl,0xed
  410479:	pop    ebx
  41047a:	xor    eax,esi
  41047c:	leave  
  41047d:	mov    ds:0xe55fe3a4,al
  410482:	pop    ebp
  410483:	ins    BYTE PTR es:[edi],dx
  410484:	fstp   DWORD PTR [esi+0x62ff3c82]
  41048a:	xchg   edx,eax
  41048b:	push   ds
  41048c:	dec    ebx
  41048d:	pop    ds
  41048e:	(bad)
  410491:	cwde   
  410492:	ror    BYTE PTR [esi],cl
  410494:	shl    DWORD PTR ds:0x3ae58ea4,0xe3
  41049b:	popa   
  41049c:	xchg   ebp,eax
  41049d:	jmp    0x918931e7
  4104a2:	sbb    bh,BYTE PTR [esi-0x4c1a78a2]
  4104a8:	aaa    
  4104a9:	dec    ebx
  4104aa:	scas   al,BYTE PTR es:[edi]
  4104ab:	pop    edi
  4104ac:	jmp    0x8fb5e9b8
  4104b1:	sub    al,0x2b
  4104b3:	test   DWORD PTR ds:[ebp+0x7d23c434],edi
  4104ba:	rol    DWORD PTR [esi],0x46
  4104bd:	ja     0x4104ad
  4104bf:	xor    al,0x16
  4104c1:	fs mov ebx,0xaaf92b21
  4104c7:	jno    0x4104d8
  4104c9:	imul   esi,DWORD PTR [ebx-0x5a60a2df],0xffffff9d
  4104d0:	jne    0x4104c7
  4104d2:	fisttp WORD PTR [edx-0x1d830623]
  4104d8:	sahf   
  4104d9:	mov    dl,0x78
  4104db:	int3   
  4104dc:	jp     0x41052a
  4104de:	jns    0x4104c1
  4104e0:	jo     0x41052a
  4104e2:	mov    dh,0xb5
  4104e4:	mov    dh,0x4b
  4104e6:	jg     0x410514
  4104e8:	(bad)  
  4104e9:	icebp  
  4104ea:	test   BYTE PTR [esi],dh
  4104ec:	adc    esi,DWORD PTR [eax+0x6e]
  4104ef:	jbe    0x4104bd
  4104f1:	sub    ebp,DWORD PTR [ebp+0x6a]
  4104f4:	mov    es,WORD PTR [ebp-0x604fa16c]
  4104fa:	iret   
  4104fb:	inc    ebx
  4104fc:	mov    bh,0xc9
  4104fe:	push   edi
  4104ff:	out    0xf2,eax
  410501:	xor    DWORD PTR [ecx+esi*8+0x4f],esi
  410505:	sub    ch,BYTE PTR [esi]
  410507:	mov    dh,0x3d
  410509:	in     al,dx
  41050a:	inc    BYTE PTR [ebp-0x19]
  41050d:	sar    bl,cl
  41050f:	inc    eax
  410510:	stc    
  410511:	push   cs
  410512:	in     al,dx
  410513:	test   BYTE PTR [eax+0x61a430b0],dl
  410519:	sub    eax,0xc99d3193
  41051e:	adc    BYTE PTR [ecx+0x29],0x58
  410522:	cmc    
  410523:	call   0x479417f6
  410528:	xor    eax,esp
  41052a:	call   0xab5:0xe5760c73
  410531:	bound  ebx,QWORD PTR [ecx+0x23]
  410534:	ss loopne 0x41053d
  410537:	mov    eax,ds:0x4a5492ce
  41053c:	cs out dx,eax
  41053e:	inc    edi
  41053f:	inc    ebp
  410540:	sub    eax,0x4098d1db
  410545:	sub    ecx,DWORD PTR [eax+0x26ca57fc]
  41054b:	cli    
  41054c:	push   esp
  41054d:	sbb    al,0x4
  41054f:	sbb    eax,0x68fa036a
  410554:	ins    BYTE PTR es:[edi],dx
  410555:	and    eax,0x687edd72
  41055a:	das    
  41055b:	jbe    0x4105b5
  41055d:	cmc    
  41055e:	ret    0x9dc7
  410561:	or     dl,BYTE PTR [edx]
  410563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410564:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410566:	xor    esp,edi
  410568:	dec    esp
  410569:	fst    QWORD PTR [edx-0x4b05cc3c]
  41056f:	push   esi
  410570:	mov    eax,0x710eed37
  410575:	and    ah,bh
  410577:	invd   
  410579:	cmp    eax,0xb1db934d
  41057e:	test   DWORD PTR es:[ebx-0x25cfbf9c],ecx
  410585:	jl     0x410511
  410587:	je     0x41055d
  410589:	leave  
  41058a:	or     esi,DWORD PTR [esi]
  41058c:	pop    esp
  41058d:	mov    esi,0xda1dab39
  410592:	imul   eax,DWORD PTR [edx-0x38],0xf45194e4
  410599:	ror    dh,cl
  41059b:	adc    esp,esi
  41059d:	sub    al,0x7b
  41059f:	cmp    edi,DWORD PTR [edx]
  4105a1:	dec    ebx
  4105a2:	dec    eax
  4105a3:	shl    ah,0x1b
  4105a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105a7:	neg    DWORD PTR [eax-0x595706d0]
  4105ad:	jmp    0x7a351c69
  4105b2:	fsub   st,st(1)
  4105b4:	stos   BYTE PTR es:[edi],al
  4105b5:	(bad)  
  4105b6:	loope  0x41058a
  4105b8:	adc    al,0xb6
  4105ba:	mov    al,0x2d
  4105bc:	fisub  WORD PTR [eax]
  4105be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105bf:	arpl   ax,ax
  4105c1:	adc    al,0x67
  4105c3:	inc    ebp
  4105c4:	jbe    0x410585
  4105c6:	jp     0x4105c3
  4105c8:	shl    BYTE PTR [edi+edx*2+0x7c],0x23
  4105cd:	or     edi,ebp
  4105cf:	xlat   BYTE PTR ds:[ebx]
  4105d0:	mov    ecx,0xd045f9d9
  4105d5:	sbb    BYTE PTR [ebp+eax*4-0x6],bl
  4105d9:	push   edi
  4105da:	(bad)  
  4105db:	xor    esp,edx
  4105dd:	add    BYTE PTR [ebp+ebp*1-0x3e],bl
  4105e1:	dec    edx
  4105e2:	es pop ebx
  4105e4:	sub    edx,ebx
  4105e6:	xchg   edi,eax
  4105e7:	sbb    dh,bl
  4105e9:	daa    
  4105ea:	and    eax,0x16d88cb3
  4105ef:	or     al,BYTE PTR [ecx+0x47]
  4105f2:	dec    esi
  4105f3:	sub    al,0x95
  4105f5:	pop    ss
  4105f6:	ret    
  4105f7:	jle    0x410644
  4105f9:	(bad)  
  4105fa:	aas    
  4105fb:	lock ficom DWORD PTR [eax-0x6e]
  4105ff:	adc    BYTE PTR [edx+eax*4-0x4016a3ee],bl
  410606:	sar    BYTE PTR [ebp+edx*4-0x33853ee0],1
  41060d:	or     cl,ah
  41060f:	xchg   ecx,eax
  410610:	mov    esp,0x66ece67c
  410615:	pop    edi
  410616:	lahf   
  410617:	scas   al,BYTE PTR es:[edi]
  410618:	inc    ebp
  410619:	inc    ecx
  41061a:	inc    eax
  41061b:	rcl    DWORD PTR [eax],1
  41061d:	jo     0x410605
  41061f:	and    esi,DWORD PTR [bx]
  410622:	fsub   DWORD PTR [eax+0x27]
  410625:	popa   
  410626:	adc    DWORD PTR ss:[edi-0x3bcfb3d5],0xef9ced59
  410631:	scas   al,BYTE PTR es:[edi]
  410632:	mov    ds:0x47ca1f15,eax
  410637:	pop    edi
  410638:	xchg   ecx,eax
  410639:	ds mov bl,0xc5
  41063c:	ret    0x5e81
  41063f:	inc    eax
  410640:	cmp    ebp,DWORD PTR [esi]
  410642:	mov    ds:0x50620d57,al
  410647:	aad    0x95
  410649:	pushf  
  41064a:	pop    es
  41064b:	and    eax,esp
  41064d:	jns    0x4106a3
  41064f:	adc    BYTE PTR [eax-0x7957d713],cl
  410655:	xchg   ecx,eax
  410656:	xchg   ebx,eax
  410657:	jb     0x41064f
  410659:	out    0x4,eax
  41065b:	mov    ecx,esi
  41065d:	inc    eax
  41065e:	std    
  41065f:	mov    esi,0xb41dbbed
  410664:	mov    bl,0x2c
  410666:	sbb    al,0x3e
  410668:	pop    edi
  410669:	pop    es
  41066a:	sbb    esp,DWORD PTR [edx+0x7f3c8408]
  410670:	stc    
  410671:	sbb    BYTE PTR [esi+0x5e],bh
  410674:	sub    DWORD PTR [edi],ebp
  410676:	mov    ah,0x7f
  410678:	jno    0x410610
  41067a:	in     al,dx
  41067b:	sub    al,0xd6
  41067d:	jmp    0xd3eb074
  410682:	popa   
  410683:	out    0x9d,eax
  410685:	ins    DWORD PTR es:[edi],dx
  410686:	fs mov esi,0xd05cca35
  41068c:	imul   ebp,DWORD PTR [esi-0x3e6e4464],0xffffff86
  410693:	ss mov edx,0xef11d75d
  410699:	imul   edx,edx,0x41
  41069c:	push   eax
  41069d:	stos   DWORD PTR es:[edi],eax
  41069e:	ins    DWORD PTR es:[edi],dx
  41069f:	sub    edi,DWORD PTR [ecx+0x1a]
  4106a2:	aad    0x89
  4106a4:	out    0x65,eax
  4106a6:	cs loope 0x4106b1
  4106a9:	jge    0x41064f
  4106ab:	in     al,dx
  4106ac:	mov    dh,bl
  4106ae:	xor    DWORD PTR [esi+0x58],0x51
  4106b2:	push   edi
  4106b3:	xor    BYTE PTR [edi+0x4758e26e],ah
  4106b9:	mov    ebp,0x725cf055
  4106be:	test   DWORD PTR [eax+ecx*8+0x3f],ecx
  4106c2:	bound  ebp,QWORD PTR [ecx+0x48]
  4106c5:	sbb    al,0xd0
  4106c7:	dec    ebp
  4106c8:	push   edi
  4106c9:	jmp    0x89e5:0x566ecfd7
  4106d0:	add    DWORD PTR [edx+0x78563f1b],edx
  4106d6:	inc    edx
  4106d7:	dec    esp
  4106d8:	in     eax,dx
  4106d9:	push   ss
  4106da:	xor    BYTE PTR [ebx-0x259bbc99],ah
  4106e0:	mov    ds:0x32268168,al
  4106e5:	mov    eax,0x6137afac
  4106ea:	cwde   
  4106eb:	add    al,0x50
  4106ed:	sub    ch,BYTE PTR [ebx]
  4106ef:	pusha  
  4106f0:	xchg   ebx,eax
  4106f1:	cmp    dh,BYTE PTR [edx-0x50]
  4106f4:	mov    ecx,DWORD PTR [ecx+0x2918220a]
  4106fa:	aas    
  4106fb:	daa    
  4106fc:	je     0x4106db
  4106fe:	(bad)  
  4106ff:	cli    
  410700:	mov    esp,0x9c3fe0a8
  410705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410706:	jnp    0x4106e8
  410708:	jo     0x4106f4
  41070a:	pop    edi
  41070b:	adc    BYTE PTR [eax-0x5799396],cl
  410711:	int    0x6c
  410713:	ins    DWORD PTR es:[edi],dx
  410714:	std    
  410715:	repz lock lahf 
  410718:	xor    bl,BYTE PTR [eax+ecx*4-0x7e]
  41071c:	in     al,dx
  41071d:	dec    edi
  41071e:	sub    esp,DWORD PTR [edx]
  410720:	sbb    edx,ebx
  410722:	xchg   ebp,eax
  410723:	std    
  410724:	xchg   BYTE PTR [eax+0x7a358b91],dl
  41072a:	test   BYTE PTR [edx],bl
  41072c:	and    al,0x3c
  41072e:	scas   eax,DWORD PTR es:[edi]
  41072f:	dec    eax
  410730:	sti    
  410731:	adc    al,0x83
  410733:	adc    eax,ebx
  410735:	stos   BYTE PTR es:[edi],al
  410736:	or     dl,BYTE PTR [ebx-0x57fe7c31]
  41073c:	dec    ecx
  41073d:	sub    dh,BYTE PTR [ecx+0x7e]
  410740:	xchg   edx,eax
  410741:	or     BYTE PTR [esi],ah
  410743:	jl     0x4106e0
  410745:	jno    0x410791
  410747:	pop    esp
  410748:	jmp    0x4106d3
  41074a:	or     ebp,0xffffffc8
  41074d:	mov    ebp,0xc1aa70c7
  410752:	and    ebx,DWORD PTR [eax]
  410754:	mov    ch,0x9f
  410756:	nop
  410757:	retf   
  410758:	jbe    0x410727
  41075a:	mov    dl,0x23
  41075c:	mov    WORD PTR [esi+0x2b8620],?
  410762:	and    dl,dh
  410764:	sti    
  410765:	pop    ebx
  410766:	pop    ecx
  410767:	popf   
  410768:	and    dh,BYTE PTR [edx]
  41076a:	(bad)  
  41076b:	jnp    0x410757
  41076d:	loope  0x41072b
  41076f:	mov    ebx,DWORD PTR [ecx+0x63f12cff]
  410775:	pop    ecx
  410776:	repz pop ecx
  410778:	or     dl,BYTE PTR [edi+0x46194a01]
  41077e:	sbb    cl,BYTE PTR ds:[ebx-0x78d945b7]
  410785:	fidivr DWORD PTR [ebx-0x14]
  410788:	pop    ds
  410789:	loope  0x410764
  41078b:	adc    BYTE PTR [ecx-0x6bb6880d],cl
  410791:	ja     0x41075e
  410793:	xor    ebp,eax
  410795:	adc    ch,BYTE PTR [ebp+0x128d1e7b]
  41079b:	or     BYTE PTR [edi],0xa3
  41079e:	ret    
  41079f:	mov    dx,0x7acf
  4107a3:	sbb    eax,0xbed4b97d
  4107a8:	pop    ebp
  4107a9:	xor    esp,DWORD PTR [ebx]
  4107ab:	inc    esi
  4107ac:	fsubp  st(6),st
  4107ae:	jne    0x410819
  4107b0:	retf   0x727c
  4107b3:	sbb    edx,DWORD PTR [ebp-0x5e1d628f]
  4107b9:	pop    ss
  4107ba:	out    dx,al
  4107bb:	or     eax,0xe4595f1f
  4107c0:	or     eax,0x1815fad0
  4107c5:	mov    esp,0x32d85f66
  4107ca:	aad    0x38
  4107cc:	stos   BYTE PTR es:[edi],al
  4107cd:	or     DWORD PTR ss:[ecx+0x3],esp
  4107d1:	addr16 push esp
  4107d3:	add    DWORD PTR [edi+0x2bd3066a],esi
  4107d9:	outs   dx,BYTE PTR ds:[esi]
  4107da:	add    ecx,ebx
  4107dc:	nop
  4107dd:	in     al,dx
  4107de:	sub    BYTE PTR [esi-0x3f3b67a6],al
  4107e4:	jle    0x4107f8
  4107e6:	mov    dh,0x28
  4107e8:	aam    0xb9
  4107ea:	mov    dh,0x8b
  4107ec:	push   0xffffff82
  4107ee:	mov    eax,0x2afe7b6b
  4107f3:	inc    ebx
  4107f4:	test   DWORD PTR [ebx],0x3130d147
  4107fa:	xchg   ebx,eax
  4107fb:	xchg   edx,eax
  4107fc:	stos   DWORD PTR es:[edi],eax
  4107fd:	iret   
  4107fe:	inc    eax
  4107ff:	arpl   si,bp
  410801:	inc    edx
  410802:	inc    edi
  410803:	dec    esi
  410804:	push   ebp
  410805:	fdivr  QWORD PTR [edx+0x2d]
  410808:	fild   QWORD PTR [ecx]
  41080a:	pop    edx
  41080b:	mov    edx,0x5ce7eee5
  410810:	dec    ecx
  410811:	scas   al,BYTE PTR es:[edi]
  410812:	dec    ebp
  410813:	sub    BYTE PTR [ebp+0x5699d727],cl
  410819:	jnp    0x41084c
  41081b:	mov    ds:0xc9701ef4,al
  410820:	dec    ecx
  410821:	mov    edi,DWORD PTR [edx-0xb10b650]
  410827:	test   al,0x5b
  410829:	jle    0x4107f5
  41082b:	mov    edi,0xf17bb932
  410830:	or     eax,0x8b082893
  410835:	fs rcr bl,cl
  410838:	and    BYTE PTR [ebp+0x68],bh
  41083b:	add    DWORD PTR [edi],ecx
  41083d:	xchg   edx,eax
  41083e:	loope  0x410846
  410840:	(bad)
  410844:	jmp    0xabf3dfa9
  410849:	or     BYTE PTR [eax],dh
  41084b:	ja     0x410815
  41084d:	mov    ebx,0xb27a7e19
  410852:	xchg   DWORD PTR [edx+0x4f8c9cd],edi
  410858:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410859:	sub    BYTE PTR [edi-0x495dc31c],0xea
  410860:	jmp    FWORD PTR [eax+0x53a83e]
  410866:	outs   dx,DWORD PTR ds:[esi]
  410867:	aas    
  410868:	lock imul esp,DWORD PTR [edx+esi*1],0x51
  41086d:	je     0x4108c6
  41086f:	call   0x5eaf642c
  410874:	push   0x72
  410876:	test   DWORD PTR [ebx+0x50d1eae3],eax
  41087c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41087e:	xor    DWORD PTR [esi-0x1e1d1f49],0xffffffb7
  410885:	jp     0x410834
  410887:	adc    BYTE PTR [edx+0x29530f9c],cl
  41088d:	xchg   ebp,esp
  41088f:	push   ds
  410890:	sti    
  410891:	les    esi,FWORD PTR [ebp+0x2b]
  410894:	ud0    ecx,DWORD PTR [esi-0x70590267]
  41089b:	lods   eax,DWORD PTR ds:[esi]
  41089c:	mov    ebx,edx
  41089e:	mov    ch,0xe9
  4108a0:	dec    edi
  4108a1:	cs push ss
  4108a3:	mov    edi,0xfde6d1d1
  4108a8:	adc    eax,0xb92498ff
  4108ad:	fcmovbe st,st(0)
  4108af:	or     eax,eax
  4108b1:	xchg   eax,ecx
  4108b3:	fucomp st(7)
  4108b5:	xchg   dh,bh
  4108b7:	arpl   WORD PTR [edi],ax
  4108b9:	repnz push esi
  4108bb:	mov    DWORD PTR [edi+0x25359e51],esp
  4108c1:	mov    eax,0x2055d27f
  4108c6:	(bad)  
  4108c7:	cmp    BYTE PTR [edi],bh
  4108c9:	fdivr  DWORD PTR [edx+esi*8]
  4108cc:	mov    bh,0xf5
  4108ce:	jp     0x41086b
  4108d0:	lahf   
  4108d1:	or     eax,0x15d337e7
  4108d6:	test   al,0x33
  4108d8:	mov    ah,0x38
  4108da:	xchg   esi,eax
  4108db:	inc    ebp
  4108dc:	xor    eax,0x700a5b8f
  4108e1:	out    dx,al
  4108e2:	mov    esi,DWORD PTR [ecx-0x22]
  4108e5:	outs   dx,BYTE PTR ds:[esi]
  4108e6:	call   0xd6ca8a76
  4108eb:	imul   edx,DWORD PTR [esi],0xc13baca4
  4108f1:	jmp    0x4108c2
  4108f3:	out    dx,eax
  4108f4:	add    al,0xa3
  4108f6:	cs loop 0x4108a4
  4108f9:	jne    0x4108b6
  4108fb:	xchg   ebp,eax
  4108fc:	fldcw  WORD PTR [ebx]
  4108fe:	push   edi
  4108ff:	cmp    ebp,DWORD PTR [ecx+0x3cdfba06]
  410905:	mov    dh,0x15
  410907:	jo     0x41097b
  410909:	lods   al,BYTE PTR ds:[esi]
  41090a:	out    0xcc,al
  41090c:	mov    bh,0xae
  41090e:	out    0x4e,eax
  410910:	les    edx,FWORD PTR [bp+di-0x51]
  410914:	mov    esp,0x83299497
  410919:	xor    bl,cl
  41091b:	aam    0xd8
  41091d:	dec    edi
  41091e:	xlat   BYTE PTR ds:[ebx]
  41091f:	and    eax,0xbc42b398
  410924:	add    BYTE PTR [edi-0x48eb8b4e],0x31
  41092b:	fist   WORD PTR [edi+0x5c]
  41092e:	pop    ds
  41092f:	ins    BYTE PTR es:[edi],dx
  410930:	test   ah,bh
  410932:	scas   eax,DWORD PTR es:[edi]
  410933:	(bad)
  410936:	sub    esp,DWORD PTR [edx-0x43a02ca4]
  41093c:	sbb    al,0x3c
  41093e:	(bad)  
  41093f:	ins    BYTE PTR es:[edi],dx
  410940:	outs   dx,BYTE PTR ds:[esi]
  410941:	cdq    
  410942:	out    dx,al
  410943:	push   esp
  410944:	in     eax,0x58
  410946:	dec    eax
  410947:	pop    ecx
  410948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410949:	push   eax
  41094a:	lahf   
  41094b:	outs   dx,BYTE PTR ds:[esi]
  41094c:	(bad)  
  41094d:	and    dl,ch
  41094f:	repnz jmp 0xc096:0x2bbb606a
  410957:	mov    DWORD PTR [edi-0x504f0c09],ebp
  41095d:	lods   eax,DWORD PTR ds:[esi]
  41095e:	call   0x9bf7f722
  410963:	xchg   esi,eax
  410964:	xor    al,0xb
  410966:	inc    esp
  410967:	(bad)  
  410968:	mov    edi,0x7bef193a
  41096d:	dec    edi
  41096e:	lods   eax,DWORD PTR ds:[esi]
  41096f:	scas   al,BYTE PTR es:[edi]
  410970:	loop   0x410900
  410972:	outs   dx,BYTE PTR ds:[esi]
  410973:	or     DWORD PTR [esi+0x53],ebx
  410976:	je     0x4109e2
  410978:	and    DWORD PTR [edi],esi
  41097a:	cmp    al,0x21
  41097c:	or     ecx,edx
  41097e:	test   al,0x3
  410980:	dec    edx
  410981:	int    0xa0
  410983:	cmp    al,0xc2
  410985:	mov    bh,0xc2
  410987:	jbe    0x410936
  410989:	mov    al,0xfe
  41098b:	xor    al,0xba
  41098d:	icebp  
  41098e:	loopne 0x41098a
  410990:	push   ebx
  410991:	div    BYTE PTR [edx-0x67]
  410994:	sbb    ch,BYTE PTR [edi+ecx*4]
  410997:	into   
  410998:	adc    al,0x98
  41099a:	loop   0x4109e2
  41099c:	push   cs
  41099d:	sub    dh,BYTE PTR [esi+0x77]
  4109a0:	inc    ebx
  4109a1:	es xchg esi,eax
  4109a3:	dec    edi
  4109a4:	rcl    DWORD PTR [eax-0x18],cl
  4109a7:	pop    ebp
  4109a8:	imul   DWORD PTR [esi-0x2e67cf78]
  4109ae:	mov    esp,0x83b0227e
  4109b3:	dec    eax
  4109b4:	mov    fs,ecx
  4109b6:	pop    edi
  4109b7:	es dec esi
  4109b9:	out    dx,al
  4109ba:	push   ebx
  4109bb:	sub    ebx,eax
  4109bd:	fisub  WORD PTR ds:0xb2f5bf63
  4109c3:	(bad)  
  4109c4:	or     ebx,DWORD PTR [edx-0x2c24d967]
  4109ca:	adc    DWORD PTR [eax-0x15],edx
  4109cd:	adc    eax,0x715c631c
  4109d2:	cdq    
  4109d3:	jns    0x410a4e
  4109d5:	mov    esi,0xb5def488
  4109da:	sub    eax,0x806ca914
  4109df:	js     0x4109b9
  4109e1:	out    dx,eax
  4109e2:	mov    ds:0x8bb93e89,eax
  4109e7:	sahf   
  4109e8:	mov    eax,0x914bae4a
  4109ed:	sbb    DWORD PTR [ecx+0x1c],0x6c
  4109f1:	dec    edi
  4109f2:	push   0xffffffb5
  4109f4:	in     al,0x3c
  4109f6:	shr    BYTE PTR [esi+0x53],cl
  4109f9:	cdq    
  4109fa:	lods   al,BYTE PTR ds:[esi]
  4109fb:	rol    esi,0x9f
  4109fe:	jno    0x41098e
  410a00:	adc    eax,edx
  410a02:	iret   
  410a03:	dec    ecx
  410a04:	mov    edx,0xf17044bb
  410a09:	add    al,0x1c
  410a0b:	dec    ebx
  410a0c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410a0e:	dec    esi
  410a0f:	arpl   cx,ax
  410a11:	jno    0x4109dc
  410a13:	jp     0x410a06
  410a15:	ja     0x410a8c
  410a17:	in     eax,0x10
  410a19:	call   0x723:0xc0b4e07c
  410a20:	pop    edx
  410a21:	xor    eax,0x9dcba8a4
  410a26:	aas    
  410a27:	in     eax,0xa8
  410a29:	adc    eax,0xb85d6c41
  410a2e:	mov    dh,0x4d
  410a30:	mov    edx,0xd569b814
  410a35:	inc    esi
  410a36:	mov    edx,0x4fa175a0
  410a3b:	jno    0x4109cc
  410a3d:	(bad)
  410a41:	and    ah,BYTE PTR [esi+0x179193ac]
  410a47:	cmp    DWORD PTR [edx],esp
  410a49:	dec    edi
  410a4a:	push   esp
  410a4b:	outs   dx,DWORD PTR ds:[esi]
  410a4c:	rcl    DWORD PTR [ebx],cl
  410a4e:	je     0x410a26
  410a50:	jecxz  0x410ab3
  410a52:	test   eax,0x9a707327
  410a57:	push   ecx
  410a58:	or     al,0xc3
  410a5a:	addr16 mov ds:0xd30f,al
  410a5e:	sbb    DWORD PTR [ecx-0x10],ebp
  410a61:	fstp   TBYTE PTR [eax+0x2575c39]
  410a67:	inc    ecx
  410a68:	dec    ebp
  410a69:	ins    DWORD PTR es:[edi],dx
  410a6a:	xchg   ebp,eax
  410a6c:	inc    ecx
  410a6d:	pop    edi
  410a6e:	in     al,dx
  410a6f:	mov    WORD PTR [ebx],gs
  410a71:	stc    
  410a72:	xchg   DWORD PTR [eax],edx
  410a74:	scas   al,BYTE PTR es:[edi]
  410a75:	jle    0x410ab0
  410a77:	sar    DWORD PTR [eax+0x6a],cl
  410a7a:	jp     0x410a76
  410a7c:	(bad)  
  410a7d:	jle    0x410a31
  410a7f:	adc    BYTE PTR [esi],bh
  410a81:	or     eax,0xb2e3185
  410a86:	shl    DWORD PTR [ebx-0x13],1
  410a89:	neg    DWORD PTR [edi-0x4c385455]
  410a8f:	inc    esp
  410a90:	fld    QWORD PTR [edx+0x6b43be51]
  410a96:	mov    ecx,0x78094185
  410a9b:	ss pop ecx
  410a9d:	mov    cl,0x18
  410a9f:	hlt    
  410aa0:	out    dx,al
  410aa1:	or     al,0x6a
  410aa3:	and    al,0x99
  410aa5:	pop    ebp
  410aa6:	in     eax,dx
  410aa7:	ss data16 int3 
  410aaa:	enter  0x49f6,0xbc
  410aae:	jp     0x410b25
  410ab0:	bound  esi,QWORD PTR [eax+edi*8+0x65]
  410ab4:	rcr    BYTE PTR [ebx],1
  410ab6:	call   DWORD PTR [ebp-0x60e9a9bb]
  410abc:	and    al,0x63
  410abe:	iret   
  410abf:	and    ebp,DWORD PTR [edx]
  410ac1:	js     0x410a6a
  410ac3:	cld    
  410ac4:	push   edx
  410ac5:	test   al,0x5a
  410ac7:	data16 js 0x410ad4
  410aca:	fimul  WORD PTR [esi]
  410acc:	(bad)  
  410acd:	xchg   edx,eax
  410ace:	rcl    edx,1
  410ad0:	in     al,0x6f
  410ad2:	push   ss
  410ad3:	std    
  410ad4:	jbe    0x410b3d
  410ad6:	jmp    0x410a82
  410ad8:	scas   eax,DWORD PTR es:[edi]
  410ad9:	push   esi
  410ada:	mov    bh,0x22
  410adc:	fstp   DWORD PTR [ebx-0x19]
  410adf:	xchg   ebp,eax
  410ae0:	jbe    0x410ae1
  410ae2:	push   ecx
  410ae3:	rcl    BYTE PTR [eax+0x1882a536],cl
  410ae9:	sbb    al,0x82
  410aeb:	out    0xc9,al
  410aed:	dec    eax
  410aee:	inc    esi
  410aef:	in     al,dx
  410af0:	add    bl,BYTE PTR [ecx+0x1b8e158b]
  410af6:	adc    BYTE PTR [ecx-0x54dbb0d5],0xc7
  410afd:	mov    ecx,0x4308c190
  410b02:	data16 aad 0xa4
  410b05:	mov    bl,0x32
  410b07:	push   ebx
  410b08:	bound  esi,QWORD PTR [ebp+0x63e9b20]
  410b0e:	cs dec eax
  410b10:	lods   al,BYTE PTR ds:[esi]
  410b11:	loope  0x410af1
  410b13:	mov    ecx,0xddae1886
  410b18:	mov    al,ds:0x96d3723d
  410b1d:	mov    bh,0x94
  410b1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b20:	(bad)  
  410b22:	xchg   edx,eax
  410b23:	mov    ecx,0x7f5c1c88
  410b28:	mov    esi,0xac01017f
  410b2d:	inc    ebp
  410b2e:	push   eax
  410b2f:	dec    edi
  410b30:	cli    
  410b31:	jnp    0x410b98
  410b33:	cmp    al,BYTE PTR [eax-0x26]
  410b36:	sbb    al,0x96
  410b38:	xlat   BYTE PTR ds:[ebx]
  410b39:	scas   eax,DWORD PTR es:[edi]
  410b3a:	cmp    ebp,DWORD PTR [eax]
  410b3c:	mov    al,ds:0x5ddf8997
  410b41:	out    dx,al
  410b42:	push   ecx
  410b43:	retf   
  410b44:	jge    0x410b92
  410b46:	loope  0x410bbd
  410b48:	jmp    0x410ad7
  410b4a:	sbb    bh,BYTE PTR [eax+0x7670bedd]
  410b50:	les    ebp,FWORD PTR [ebx+0x386e2a60]
  410b56:	out    dx,al
  410b57:	test   BYTE PTR [ecx-0x1f6aa8a],cl
  410b5d:	idiv   BYTE PTR [ecx+edi*2]
  410b60:	mov    BYTE PTR [ebx+0x57],cl
  410b63:	ficom  DWORD PTR [esi]
  410b65:	iret   
  410b66:	ins    BYTE PTR es:[edi],dx
  410b67:	mov    ds,eax
  410b69:	add    edi,DWORD PTR [edi*1-0x46300821]
  410b70:	jnp    0x410b49
  410b72:	in     al,0xf7
  410b74:	mov    esi,esi
  410b76:	in     al,0x84
  410b78:	les    ecx,FWORD PTR [ebx+0x3a]
  410b7b:	loopne 0x410b4e
  410b7d:	sbb    dh,BYTE PTR [eax]
  410b7f:	push   ds
  410b80:	dec    eax
  410b81:	cdq    
  410b82:	iret   
  410b83:	inc    ecx
  410b84:	out    dx,eax
  410b85:	retf   
  410b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b87:	retf   
  410b88:	mov    bh,al
  410b8a:	dec    eax
  410b8b:	sub    eax,0xc137a240
  410b90:	sar    DWORD PTR [ebp+edx*1+0x384d763],1
  410b97:	cld    
  410b98:	adc    eax,0x9a46b46a
  410b9d:	dec    edx
  410b9e:	cmp    esi,esi
  410ba0:	pop    edi
  410ba1:	test   BYTE PTR cs:[ebp+0x2c30a253],bl
  410ba8:	pop    ebx
  410ba9:	xor    DWORD PTR [ecx+0x67],esi
  410bac:	test   BYTE PTR [ecx],cl
  410bae:	add    edi,eax
  410bb0:	or     BYTE PTR [edx+esi*2],ah
  410bb3:	inc    esi
  410bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bb5:	fdiv   QWORD PTR ds:0x2ef4d7e3
  410bbb:	pop    eax
  410bbc:	stos   BYTE PTR es:[edi],al
  410bbd:	std    
  410bbe:	addr16 mov eax,eax
  410bc1:	sahf   
  410bc2:	fist   WORD PTR [edx]
  410bc4:	fbstp  TBYTE PTR [ebx-0x4fb136e7]
  410bca:	xor    dl,BYTE PTR [edx-0x7f]
  410bcd:	sub    esi,DWORD PTR [edi+0x6ced9ac1]
  410bd3:	sbb    eax,0xc22dbb32
  410bd8:	loopne 0x410be9
  410bda:	ret    
  410bdb:	adc    edx,eax
  410bdd:	jg     0x410bfe
  410bdf:	in     al,0x1f
  410be1:	sub    edi,DWORD PTR [ebp-0x7b]
  410be4:	sti    
  410be5:	fsubrp st(3),st
  410be7:	call   0xb133e1b0
  410bec:	retf   
  410bed:	clc    
  410bee:	mov    edi,esp
  410bf0:	push   esp
  410bf1:	cmp    eax,0xee38afee
  410bf6:	lods   eax,DWORD PTR ds:[esi]
  410bf7:	ret    
  410bf8:	retf   0xdd03
  410bfb:	mov    ss,WORD PTR [ebp+0x66bbd275]
  410c01:	mov    esp,0x32044c5e
  410c06:	mov    ds:0xb508ec34,al
  410c0b:	xchg   edi,eax
  410c0c:	mov    ds:0xc7401e57,eax
  410c11:	mov    bl,0x69
  410c13:	lods   al,BYTE PTR ds:[esi]
  410c14:	imul   edx,esp,0x8e2a25fc
  410c1a:	pop    ss
  410c1b:	test   BYTE PTR [edx+0x471e2d8d],bh
  410c21:	mov    gs,WORD PTR [edx+0x5c]
  410c24:	ficomp WORD PTR [ecx*4+0x15bbc45b]
  410c2b:	call   0xe4426d2e
  410c30:	fwait
  410c31:	pushf  
  410c32:	xchg   edi,eax
  410c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c34:	push   ebx
  410c35:	cmp    eax,0x83b87dc9
  410c3a:	cmp    cl,cl
  410c3c:	mov    edi,0x8c388bfd
  410c41:	das    
  410c42:	retf   
  410c43:	sbb    DWORD PTR [ebx],ecx
  410c45:	lock test al,0x78
  410c48:	dec    ecx
  410c49:	loopne 0x410c1f
  410c4b:	mov    ds:0x8505ded8,al
  410c50:	xchg   BYTE PTR [esp+eiz*4-0x79],dl
  410c54:	push   eax
  410c55:	add    cl,BYTE PTR ds:0xb9326d7a
  410c5b:	lds    edx,FWORD PTR [edi+0x13]
  410c5e:	mov    dh,0x29
  410c60:	sub    eax,0x67f590fd
  410c65:	dec    edi
  410c66:	push   ecx
  410c67:	xor    esp,DWORD PTR [ecx]
  410c69:	mov    dl,0x95
  410c6b:	(bad)  
  410c6d:	cwde   
  410c6e:	popf   
  410c6f:	cmc    
  410c70:	hlt    
  410c71:	leave  
  410c72:	std    
  410c73:	sbb    DWORD PTR [ebp+0x1970522f],ebp
  410c79:	dec    ecx
  410c7a:	(bad)  
  410c7b:	dec    eax
  410c7c:	loope  0x410c36
  410c7e:	outs   dx,BYTE PTR ds:[esi]
  410c7f:	repnz push ecx
  410c81:	pop    esi
  410c82:	and    ecx,DWORD PTR [edx]
  410c84:	ror    DWORD PTR [ebp-0x6f9f44c9],1
  410c8a:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c8c:	mov    cl,0xea
  410c8e:	arpl   WORD PTR [ebx-0x24],di
  410c91:	fwait
  410c92:	jecxz  0x410c7f
  410c94:	pop    ss
  410c95:	imul   eax,DWORD PTR [esi-0x6ee4c354],0x46
  410c9c:	push   esi
  410c9d:	ds test al,0xd8
  410ca0:	sbb    ecx,edi
  410ca2:	jg     0x410d1b
  410ca4:	js     0x410cdf
  410ca6:	inc    ebp
  410ca7:	adc    ch,BYTE PTR [edx]
  410ca9:	inc    eax
  410caa:	push   ebx
  410cab:	es ins DWORD PTR es:[edi],dx
  410cad:	or     ch,al
  410caf:	mov    ch,0x5b
  410cb1:	(bad)  
  410cb2:	aam    0xee
  410cb4:	inc    edx
  410cb5:	push   es
  410cb6:	shr    BYTE PTR [ebx+0x22],0x39
  410cba:	push   0x1eb67dca
  410cbf:	(bad)  
  410cc0:	mov    edx,0x3ffc478
  410cc5:	bound  ecx,QWORD PTR [esi-0x41]
  410cc8:	push   0xd690549f
  410ccd:	retf   
  410cce:	or     eax,esp
  410cd0:	pop    ds
  410cd1:	neg    DWORD PTR [ebx]
  410cd3:	xchg   edx,eax
  410cd4:	and    DWORD PTR [ecx+0x19],edx
  410cd7:	push   ecx
  410cd8:	pop    esp
  410cd9:	jo     0x410cfe
  410cdb:	add    BYTE PTR [edx+0x2],dl
  410cde:	test   edx,eax
  410ce0:	fld    QWORD PTR [eax+0x25]
  410ce3:	inc    esp
  410ce5:	push   0x163c1ac5
  410cea:	fcom   DWORD PTR [ecx]
  410cec:	dec    ecx
  410ced:	add    eax,DWORD PTR [esi]
  410cef:	push   0x7d
  410cf1:	(bad)
  410cf5:	mov    dh,0xc4
  410cf7:	and    eax,0x65fc9ff6
  410cfc:	mov    al,ds:0xa40e798c
  410d02:	xor    ch,ch
  410d04:	idiv   BYTE PTR [edi+0x35932ffb]
  410d0a:	je     0x410d81
  410d0c:	jb     0x410cdf
  410d0e:	pop    ecx
  410d0f:	inc    eax
  410d10:	mov    al,BYTE PTR [ebp+0x39d4b1b8]
  410d16:	adc    DWORD PTR [eax+0x70],0xffffff8a
  410d1a:	cmp    eax,0xf4376f48
  410d1f:	push   0x4692aaaf
  410d24:	push   esi
  410d25:	in     al,0xf
  410d27:	jno    0x410d83
  410d29:	sbb    al,0x45
  410d2b:	jmp    0x410cf2
  410d2d:	in     eax,dx
  410d2e:	mov    bl,0xaf
  410d30:	and    eax,0x11c92ca0
  410d35:	pop    edx
  410d36:	aaa    
  410d37:	es lahf 
  410d39:	retf   0x2adb
  410d3c:	mov    ebx,0x663954a0
  410d41:	push   esp
  410d42:	ret    
  410d43:	out    dx,al
  410d44:	dec    edi
  410d45:	mov    WORD PTR [edx-0x596ce0e7],?
  410d4b:	inc    eax
  410d4c:	and    DWORD PTR [ecx+0x188cdc9d],0x17
  410d53:	xor    DWORD PTR [esi+0x77f0252b],eax
  410d59:	imul   ebx,DWORD PTR [edx+0x36],0xffffffab
  410d5d:	aas    
  410d5e:	sti    
  410d5f:	retf   0xc519
  410d62:	aad    0x83
  410d64:	cmp    ecx,DWORD PTR [ebp+esi*8-0x49]
  410d68:	fldenv [ecx-0x5b3fcb4a]
  410d6e:	ficom  WORD PTR [edi-0x74]
  410d71:	fsub   QWORD PTR [ebx+0x16]
  410d74:	ret    0x29d8
  410d77:	in     al,0x28
  410d79:	loope  0x410da4
  410d7b:	pop    es
  410d7c:	mov    bh,0xa5
  410d7e:	popf   
  410d7f:	cmc    
  410d80:	push   0x24a57f1b
  410d85:	fadd   DWORD PTR [ebp+0x6e]
  410d88:	push   ebp
  410d89:	out    0xd5,eax
  410d8b:	pop    ebp
  410d8c:	mov    ah,0x2a
  410d8e:	pop    eax
  410d8f:	sbb    ebx,eax
  410d91:	sbb    al,0x0
  410d93:	popf   
  410d94:	lods   al,BYTE PTR ds:[esi]
  410d95:	test   BYTE PTR [esp+ebx*4-0x2d],dh
  410d99:	mov    cs,WORD PTR [ecx]
  410d9b:	dec    edx
  410d9c:	mov    DWORD PTR [ebx+0x355817db],ebp
  410da2:	das    
  410da3:	popa   
  410da4:	jle    0x410da5
  410da6:	fimul  DWORD PTR [edi]
  410da8:	jg     0x410d63
  410daa:	push   ebx
  410dab:	push   ss
  410dac:	(bad)  
  410dad:	inc    esp
  410dae:	pusha  
  410daf:	dec    esi
  410db0:	cli    
  410db1:	lahf   
  410db2:	cs sahf 
  410db4:	dec    eax
  410db5:	push   es
  410db6:	jg     0x410d46
  410db8:	ficomp WORD PTR [ebx-0x3]
  410dbb:	in     al,0x39
  410dbd:	push   0xff7596f6
  410dc2:	mov    BYTE PTR [esi-0x60],bh
  410dc5:	nop
  410dc6:	pushf  
  410dc7:	neg    BYTE PTR ds:0x9c182171
  410dcd:	inc    ecx
  410dce:	(bad)  
  410dcf:	jae    0x410da1
  410dd1:	sbb    al,0xe3
  410dd3:	add    al,0xfc
  410dd5:	das    
  410dd6:	adc    bh,0x70
  410dd9:	mov    cl,0x29
  410ddb:	or     DWORD PTR [esi-0x5084a76c],edx
  410de1:	iret   
  410de2:	pop    ss
  410de3:	adc    al,0x61
  410de5:	repnz sbb eax,0xfad9f080
  410deb:	fidivr DWORD PTR [eax-0x57adb287]
  410df1:	(bad)  
  410df2:	in     eax,0xfc
  410df4:	sub    BYTE PTR [esi],cl
  410df6:	aaa    
  410df7:	xor    al,BYTE PTR [ebp+0x23]
  410dfa:	xchg   esi,eax
  410dfb:	ins    BYTE PTR es:[edi],dx
  410dfc:	xchg   esi,eax
  410dfd:	pop    ebx
  410dfe:	enter  0x33bc,0xf1
  410e02:	rol    eax,cl
  410e04:	lock not dl
  410e07:	test   al,0xad
  410e09:	xchg   edx,eax
  410e0a:	sub    DWORD PTR [ebx+0x39],edi
  410e0d:	repnz lods al,BYTE PTR ss:[esi]
  410e10:	push   0xffffffdc
  410e12:	sub    bl,dh
  410e14:	jne    0x410e0a
  410e16:	mov    eax,ds:0x344aaf59
  410e1b:	js     0x410dc4
  410e1d:	imul   ecx,DWORD PTR [ecx-0x4c],0x2db25306
  410e24:	fcmovbe st,st(4)
  410e26:	pop    ss
  410e27:	or     edi,DWORD PTR gs:0x5031acfa
  410e2e:	jecxz  0x410dd8
  410e30:	loop   0x410e91
  410e32:	mov    ecx,0xdb8fa4bd
  410e37:	mov    cl,0x17
  410e39:	dec    eax
  410e3a:	jge    0x410e0a
  410e3c:	sbb    ax,0x10ed
  410e40:	cmp    DWORD PTR [eax+ebp*4],esi
  410e43:	mov    edi,0x7c1969df
  410e48:	mov    ch,0xb9
  410e4a:	rol    BYTE PTR [edx+0x6da1ac3a],0x31
  410e51:	mov    DWORD PTR [ebx],esi
  410e53:	inc    edx
  410e54:	test   al,0x42
  410e56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e57:	cmp    DWORD PTR [edi-0x3],ebx
  410e5a:	push   es
  410e5b:	mov    bh,0x4b
  410e5d:	mov    eax,0x1b04c8aa
  410e62:	in     al,0xed
  410e64:	iret   
  410e65:	retf   
  410e66:	pop    ds
  410e67:	daa    
  410e68:	sti    
  410e69:	dec    eax
  410e6a:	sbb    esp,DWORD PTR [ebx+0xfc321b8]
  410e70:	adc    DWORD PTR [esi+edx*2-0x3a],ebx
  410e74:	nop
  410e75:	dec    ebp
  410e76:	xchg   edi,eax
  410e77:	out    dx,al
  410e78:	sub    BYTE PTR [edx+0x5bbc03b9],0x27
  410e7f:	jge    0x410eec
  410e81:	push   ecx
  410e82:	push   esp
  410e83:	cs cli 
  410e85:	sub    eax,0x953dbc15
  410e8a:	dec    esi
  410e8b:	jmp    0x410e3d
  410e8d:	adc    DWORD PTR [edi],0x51ff6cf
  410e93:	jl     0x410f0a
  410e95:	jl     0x410ee9
  410e97:	lods   eax,DWORD PTR ds:[esi]
  410e98:	cmp    eax,0x78d90b51
  410e9d:	xor    BYTE PTR [edx+0x1e],cl
  410ea0:	push   0x9ea489ad
  410ea5:	jge    0x410e28
  410ea7:	(bad)  
  410ea9:	jg     0x410ef4
  410eab:	mov    DWORD PTR [edi-0x56],edi
  410eae:	push   esp
  410eaf:	mov    edi,0x3e8b5731
  410eb4:	lods   al,BYTE PTR ds:[esi]
  410eb5:	jno    0x410eb7
  410eb7:	retf   0x6f80
  410eba:	dec    ecx
  410ebb:	dec    ebp
  410ebc:	add    ecx,esi
  410ebe:	dec    ebp
  410ebf:	fcmovbe st,st(1)
  410ec1:	adc    eax,0x6aee7983
  410ec6:	adc    al,0x7a
  410ec8:	cmp    ebx,DWORD PTR [ebp-0x7525360]
  410ece:	mov    DWORD PTR [eax],edx
  410ed0:	cld    
  410ed1:	mov    ecx,0x4337738c
  410ed6:	(bad)  
  410ed7:	sti    
  410ed8:	mov    cl,0x7c
  410eda:	cdq    
  410edb:	xlat   BYTE PTR ds:[ebx]
  410edc:	mov    ebx,0x979ca6a5
  410ee1:	sub    cl,BYTE PTR [edx-0x6]
  410ee4:	lods   al,BYTE PTR ds:[esi]
  410ee5:	mov    ebp,DWORD PTR [edx-0x2c9f92c]
  410eeb:	shl    BYTE PTR [ebx+0x15],1
  410eee:	call   0x4df945c6
  410ef3:	add    al,0x83
  410ef5:	pop    es
  410ef6:	sub    cl,BYTE PTR [ebx+ebx*2]
  410ef9:	frstor [ebx-0x29580b60]
  410eff:	inc    DWORD PTR ds:0x7c6ed45
  410f05:	lahf   
  410f06:	sub    BYTE PTR [ebx-0x3c082ca3],dl
  410f0c:	push   ecx
  410f0d:	int    0xaf
  410f0f:	mov    ch,0x4e
  410f11:	clc    
  410f12:	and    cl,BYTE PTR [ebp+0x4]
  410f15:	pop    esp
  410f16:	dec    ecx
  410f17:	(bad)
  410f1c:	in     eax,dx
  410f1d:	cmp    DWORD PTR [esi],ecx
  410f1f:	sbb    eax,0xbbd39e6e
  410f24:	jl     0x410f84
  410f26:	sbb    dh,BYTE PTR [edx]
  410f28:	pusha  
  410f29:	ror    ah,1
  410f2b:	nop
  410f2c:	mov    ebp,0x9f88f7a9
  410f31:	xchg   ebx,eax
  410f32:	and    ebp,edx
  410f34:	dec    ebp
  410f35:	call   0x4ada:0xddfa2a29
  410f3c:	fmulp  st(4),st
  410f3e:	jmp    0x410fa6
  410f40:	out    dx,eax
  410f41:	jp     0x410ec6
  410f43:	mov    edx,esp
  410f45:	dec    edx
  410f46:	add    al,0xe
  410f48:	xor    al,0x82
  410f4a:	fsub   DWORD PTR [edx]
  410f4c:	scas   al,BYTE PTR es:[edi]
  410f4d:	mov    edi,0xefb3ad07
  410f52:	iret   
  410f53:	lea    ecx,[eax-0x2f]
  410f56:	pop    es
  410f57:	adc    edi,DWORD PTR [ebx-0x7a]
  410f5a:	add    eax,0xcd6cce6e
  410f5f:	add    edi,esp
  410f61:	sub    cl,ah
  410f63:	cli    
  410f64:	cld    
  410f65:	mov    esi,0xbd10e69a
  410f6a:	sub    BYTE PTR [edx],bh
  410f6c:	push   ecx
  410f6d:	pop    esp
  410f6e:	jmp    0x410f1a
  410f70:	ret    
  410f71:	retf   0x1208
  410f74:	or     eax,0xba785a5d
  410f79:	jmp    0x98073848
  410f7e:	inc    eax
  410f7f:	jg     0x410fc9
  410f81:	iret   
  410f82:	mov    ah,BYTE PTR [edx]
  410f84:	fild   DWORD PTR [ecx-0x6edc5cba]
  410f8a:	sbb    BYTE PTR [eax+eax*4-0x4d0c69b1],dh
  410f91:	and    al,0xe2
  410f93:	(bad)  
  410f94:	int3   
  410f95:	fimul  WORD PTR ds:0x55adca53
  410f9b:	push   ebx
  410f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f9d:	clc    
  410f9e:	mov    si,0x4cdc
  410fa2:	mov    eax,0xae732bfe
  410fa7:	mov    ebp,0x9dfe301d
  410fac:	jnp    0x411027
  410fae:	jp     0x410f54
  410fb0:	lock or DWORD PTR [edx-0x5536990d],esi
  410fb7:	xlat   BYTE PTR ds:[ebx]
  410fb8:	push   edx
  410fb9:	pop    edi
  410fba:	cmp    BYTE PTR [eax+0x2f8d7dab],bh
  410fc0:	jno    0x410fc5
  410fc2:	es mov BYTE PTR ds:[ebp-0x421e2b87],ah
  410fca:	fld    TBYTE PTR [edi-0x2a]
  410fcd:	sub    eax,0xba2565ee
  410fd2:	mov    bl,0x3c
  410fd4:	scas   al,BYTE PTR es:[edi]
  410fd5:	mov    bh,0xea
  410fd7:	hlt    
  410fd8:	mov    WORD PTR [edi+0x41],?
  410fdb:	int    0xb0
  410fdd:	mov    ah,0x80
  410fdf:	push   0xf9be9a69
  410fe4:	push   ebp
  410fe5:	push   esi
  410fe6:	push   0x5a388082
  410feb:	xchg   DWORD PTR [edi+eax*2+0x76e77338],edx
  410ff2:	cs inc ebx
  410ff4:	push   ebp
  410ff5:	fimul  DWORD PTR [ecx-0x79]
  410ff8:	cwde   
  410ff9:	cli    
  410ffa:	loopne 0x410f8e
  410ffc:	mov    BYTE PTR [ebp+edi*1+0x6a553004],cl
  411003:	push   eax
  411004:	sub    eax,0xa994a3b3
  411009:	push   eax
  41100a:	sbb    cl,bl
  41100c:	data16 std 
  41100e:	inc    esp
  41100f:	mov    dh,0x7e
  411011:	fucomip st,st(6)
  411013:	ins    BYTE PTR es:[edi],dx
  411014:	outs   dx,BYTE PTR ds:[esi]
  411015:	sbb    ebp,DWORD PTR [edi+0x49d45095]
  41101b:	mov    edx,0xd4803f6c
  411020:	pop    es
  411021:	loope  0x41101c
  411023:	ror    BYTE PTR [edi],cl
  411025:	ret    0xf01d
  411028:	imul   eax,DWORD PTR [edi+0x19],0xffffffe1
  41102c:	jmp    0xb2dc:0x9ba7fc8e
  411033:	sub    DWORD PTR [edx+0x2],edi
  411036:	mov    edi,0x851a5202
  41103b:	add    DWORD PTR [ecx-0x67314d02],ebp
  411041:	jmp    0x1a0a580d
  411046:	xchg   edx,eax
  411047:	sbb    al,0xf4
  411049:	mov    ebp,0x632cf676
  41104e:	add    DWORD PTR [edx+0x6828967a],esi
  411054:	ss jmp 0x274253b0
  41105a:	loope  0x411027
  41105c:	bound  eax,QWORD PTR [ebp+0x56ed287a]
  411062:	sar    BYTE PTR [ecx-0x7c],1
  411065:	push   ss
  411066:	mov    ch,BYTE PTR fs:[edi-0x64]
  41106a:	xlat   BYTE PTR ds:[ebx]
  41106b:	cmp    cl,BYTE PTR [ecx-0x6df0b51a]
  411071:	jmp    0x622b79dc
  411076:	test   DWORD PTR ds:0x5f0b2ac9,0xe29058bf
  411080:	lods   eax,DWORD PTR ds:[esi]
  411081:	test   BYTE PTR [ecx+0x7fddfbe],cl
  411087:	add    BYTE PTR [edx+esi*8+0x1],0xde
  41108c:	mov    edx,fs
  41108e:	or     DWORD PTR [ebp-0x28],edx
  411091:	adc    eax,0xf92ae7
  411096:	(bad)
  411099:	dec    edx
  41109a:	repz fsin 
  41109d:	xchg   BYTE PTR [ebx-0x491c4037],dh
  4110a3:	cs ins DWORD PTR es:[edi],dx
  4110a5:	push   ss
  4110a6:	sub    edi,DWORD PTR [ebx-0xe3f5881]
  4110ac:	mov    ebp,ebx
  4110ae:	enter  0xb7ec,0x4e
  4110b2:	shr    BYTE PTR [esi],0xed
  4110b5:	jp     0x411081
  4110b7:	jbe    0x411136
  4110b9:	pop    edx
  4110ba:	pop    ss
  4110bb:	push   0x5865a678
  4110c0:	sbb    ebp,0x5cb4e621
  4110c6:	int    0xfd
  4110c8:	loopne 0x411089
  4110ca:	push   es
  4110cb:	mov    dl,0xc3
  4110cd:	mov    esp,0xd993daa3
  4110d2:	ins    DWORD PTR es:[edi],dx
  4110d3:	in     al,dx
  4110d4:	adc    dl,BYTE PTR ss:[esi-0x40]
  4110d8:	add    ebp,DWORD PTR [ebx]
  4110da:	mov    ebx,0x5658acee
  4110df:	test   eax,0x686d23c7
  4110e4:	mov    edx,0x450a2511
  4110e9:	imul   ecx,DWORD PTR [esi+0x1d],0x44
  4110ed:	repnz add esi,DWORD PTR [eax-0x47]
  4110f1:	inc    eax
  4110f2:	in     al,0x7c
  4110f4:	in     eax,dx
  4110f5:	jns    0x4110a4
  4110f7:	jno    0x4110af
  4110f9:	cmp    al,0x90
  4110fb:	fidiv  WORD PTR [esi-0x3b]
  4110fe:	cwde   
  4110ff:	pushf  
  411100:	xor    al,BYTE PTR [edx-0x6dada223]
  411106:	shr    BYTE PTR [esi+0x2dd454d8],0x7a
  41110d:	adc    eax,0x7cb8408f
  411112:	mov    esp,0xb0ca19cb
  411117:	mov    ecx,0x743530ba
  41111c:	push   0x76c950e
  411121:	inc    edi
  411122:	dec    esp
  411123:	fs sbb esi,esp
  411126:	call   0xd188:0xd68de913
  41112d:	inc    edx
  41112e:	mov    DWORD PTR [eax-0x3e9e4013],ecx
  411134:	fld    QWORD PTR [ecx+0x26]
  411137:	dec    edx
  411138:	dec    edx
  411139:	dec    eax
  41113a:	call   0x715b:0x827758bd
  411141:	scas   al,BYTE PTR es:[edi]
  411142:	ss int3 
  411144:	outs   dx,DWORD PTR ds:[esi]
  411145:	inc    esp
  411146:	jle    0x4111ae
  411148:	jns    0x411119
  41114a:	dec    ebx
  41114b:	shl    esp,cl
  41114d:	jnp    0x411107
  41114f:	outs   dx,BYTE PTR ds:[esi]
  411150:	sbb    DWORD PTR [ebx+0x7f],edx
  411153:	outs   dx,BYTE PTR ds:[esi]
  411154:	test   eax,0x91198df
  411159:	jle    0x411140
  41115b:	cld    
  41115c:	dec    ebx
  41115d:	push   ebx
  41115e:	in     al,0xe5
  411160:	pop    ebx
  411161:	popf   
  411162:	fistp  QWORD PTR ds:0x47b3b617
  411168:	loopne 0x41113c
  41116a:	(bad)  
  41116c:	jp     0x411137
  41116e:	enter  0xb59,0xfd
  411172:	or     DWORD PTR [esi-0xd03fef6],esi
  411178:	ins    DWORD PTR es:[edi],dx
  411179:	jge    0x411127
  41117b:	sar    bl,1
  41117d:	push   edx
  41117e:	push   esi
  41117f:	mov    bl,0xbc
  411181:	into   
  411182:	ds jae 0x411187
  411185:	add    al,0x4d
  411187:	sub    eax,0xcaae9586
  41118c:	and    eax,ebx
  41118e:	xor    al,BYTE PTR [ecx+esi*2-0x36]
  411192:	cmp    eax,DWORD PTR [edi+0x64]
  411195:	sbb    esi,DWORD PTR [ecx*8-0x2d48a4e5]
  41119c:	pop    edx
  41119d:	mov    esi,0x531efc3b
  4111a2:	fisub  WORD PTR [ebx+0x464158ca]
  4111a8:	jmp    0xdeed:0x5cd3c5bb
  4111af:	dec    ebx
  4111b0:	mov    ?,WORD PTR [esi+0x61]
  4111b3:	pop    edx
  4111b4:	fistp  DWORD PTR ds:0xf106ce62
  4111ba:	push   eax
  4111bb:	mov    eax,0x666bdfff
  4111c0:	push   ss
  4111c1:	out    0x24,eax
  4111c3:	inc    edi
  4111c4:	out    0x12,al
  4111c6:	pushf  
  4111c7:	xchg   DWORD PTR [ebx],eax
  4111c9:	dec    esp
  4111ca:	std    
  4111cb:	push   ebx
  4111cc:	fmul   QWORD PTR [eax]
  4111ce:	xor    al,0x82
  4111d0:	push   ebx
  4111d1:	inc    DWORD PTR [ebx]
  4111d3:	mov    dl,0xc6
  4111d5:	out    dx,eax
  4111d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111d7:	mov    ebp,0x89fcd77e
  4111dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111dd:	cmovno edx,DWORD PTR [ebx+0x3d]
  4111e1:	outs   dx,DWORD PTR ds:[esi]
  4111e2:	(bad)  
  4111e4:	sub    eax,0xd2283d0f
  4111e9:	or     al,0x10
  4111eb:	rcl    esi,0xbb
  4111ee:	adc    BYTE PTR [ecx+0x4b],ch
  4111f1:	ja     0x4111cc
  4111f3:	dec    esp
  4111f4:	int    0xf6
  4111f6:	add    DWORD PTR [esi+edx*2-0x56],0xf17b31b7
  4111fe:	(bad)  
  4111ff:	xchg   edx,eax
  411200:	lods   eax,DWORD PTR ds:[esi]
  411201:	add    eax,DWORD PTR [esi+0x11]
  411204:	mov    al,0x36
  411206:	jb     0x41124b
  411208:	sbb    BYTE PTR [edx],dl
  41120a:	mov    dl,0x98
  41120c:	sub    al,0xc5
  41120e:	mov    al,ds:0xee4dc788
  411213:	jl     0x4111a0
  411215:	leave  
  411216:	sub    bh,BYTE PTR [ecx-0x48c630fc]
  41121c:	shr    DWORD PTR [esi],cl
  41121e:	jno    0x4111d3
  411220:	hlt    
  411221:	inc    edx
  411222:	pop    ds
  411223:	jb     0x411299
  411225:	dec    esp
  411226:	inc    eax
  411227:	ja     0x4111d0
  411229:	sar    cl,0x7d
  41122c:	mov    ds:0x7435b573,eax
  411231:	push   ss
  411232:	clc    
  411233:	add    eax,0x1feb9ee1
  411238:	inc    eax
  411239:	add    BYTE PTR [ebx-0x5b],ah
  41123c:	dec    ebp
  41123d:	mov    bl,0x31
  41123f:	push   es
  411240:	daa    
  411241:	or     DWORD PTR [ebp+0x10],edx
  411244:	sar    BYTE PTR [eax+0x7f1e6925],cl
  41124a:	repnz add al,0x69
  41124d:	das    
  41124e:	inc    eax
  41124f:	fldenv [edi+0x4]
  411252:	mov    cs,WORD PTR [eax-0x2a]
  411255:	mov    al,0x7
  411257:	and    eax,0x16a105f
  41125c:	icebp  
  41125d:	ret    0xc496
  411260:	mov    esi,0x314df5ae
  411265:	pop    esi
  411266:	mov    dh,0x39
  411268:	xchg   DWORD PTR [ebp+ebp*2+0x21877e2f],esp
  41126f:	cdq    
  411270:	inc    edx
  411271:	cdq    
  411272:	loope  0x411214
  411274:	rol    BYTE PTR ds:0xd06cb71e,1
  41127a:	mov    bl,0x6c
  41127c:	xor    al,0x62
  41127e:	(bad)  
  41127f:	xchg   esp,eax
  411280:	mov    WORD PTR [ecx-0x5b02fe54],es
  411286:	and    al,0x8c
  411288:	or     ah,BYTE PTR [ebx-0x80]
  41128b:	scas   al,BYTE PTR es:[edi]
  41128c:	daa    
  41128d:	or     eax,0x82daca17
  411292:	dec    eax
  411293:	cmp    ch,bl
  411295:	push   ds
  411296:	sahf   
  411297:	in     al,dx
  411298:	adc    BYTE PTR [eax],0xe6
  41129b:	cmp    cl,BYTE PTR [ebp+0x4025a3e1]
  4112a1:	xchg   ecx,eax
  4112a2:	pop    ss
  4112a3:	xchg   BYTE PTR [ebx-0x6e],dh
  4112a6:	loopne 0x4112d3
  4112a8:	or     DWORD PTR [ecx],esi
  4112aa:	mov    ds:0x91696f71,al
  4112af:	push   es
  4112b0:	mov    dh,0x16
  4112b2:	and    al,ah
  4112b4:	rcr    DWORD PTR [edi+0x75],1
  4112b7:	and    al,0x1f
  4112b9:	sbb    BYTE PTR [ebx+eiz*4-0x7a],dl
  4112bd:	inc    edx
  4112be:	out    0xd1,eax
  4112c0:	mov    dh,0x30
  4112c2:	mov    bh,0xf0
  4112c4:	sbb    BYTE PTR [eax+0x15],0xd6
  4112c8:	pushf  
  4112c9:	mov    dl,0xd0
  4112cb:	xchg   ebx,eax
  4112cc:	sub    al,0xad
  4112ce:	cli    
  4112cf:	inc    bh
  4112d1:	mov    ebp,0xa9f51055
  4112d6:	lea    ebx,[ebx*4+0x8903f1e]
  4112dd:	arpl   WORD PTR [ecx+0x2fbe6b02],bp
  4112e3:	adc    al,0xc5
  4112e5:	je     0x4112e3
  4112e7:	lea    esp,[ebp+0x48d32852]
  4112ed:	imul   ebx,DWORD PTR [ebx-0x27],0xffffffe8
  4112f1:	ss jb  0x411327
  4112f4:	bound  esi,QWORD PTR [esi+0x2f]
  4112f7:	cmp    DWORD PTR [bx+di+0x37f4],edx
  4112fc:	std    
  4112fd:	xor    esi,DWORD PTR ds:0x69708d3
  411303:	push   ebx
  411304:	adc    BYTE PTR [edi],bh
  411306:	addr16 or eax,0x8e612874
  41130c:	mov    eax,DWORD PTR [edx-0x3f4301b4]
  411312:	jb     0x41138f
  411314:	pop    ebx
  411315:	sub    eax,0x51ad5a27
  41131a:	mov    es,WORD PTR [eax+ecx*4-0x42]
  41131e:	call   0x4a3b082c
  411323:	cld    
  411324:	jb     0x4112f0
  411326:	test   eax,0x734e7512
  41132b:	aam    0x16
  41132d:	inc    ebx
  41132e:	pusha  
  41132f:	(bad)  
  411330:	xor    eax,0x729af24b
  411335:	or     edi,DWORD PTR [esi+0x30]
  411338:	inc    eax
  411339:	inc    esp
  41133a:	push   edx
  41133b:	repnz out dx,eax
  41133d:	dec    edx
  41133e:	shl    DWORD PTR [edi-0x6a],1
  411341:	inc    ah
  411343:	xchg   esi,eax
  411344:	mov    ebp,0xe474bf9d
  411349:	je     0x411351
  41134b:	dec    edi
  41134c:	cdq    
  41134d:	imul   edx,DWORD PTR [ebx+0x64ea6e00],0x55469916
  411357:	mov    ss,esi
  411359:	jmp    0xcacaf303
  41135e:	pop    ebp
  41135f:	(bad)  
  411360:	mov    ah,dh
  411362:	test   DWORD PTR [ebx-0x18],ecx
  411365:	dec    edi
  411366:	test   dl,al
  411368:	(bad)  
  411369:	sbb    DWORD PTR [eax-0x6519f2ce],ecx
  41136f:	push   esp
  411370:	sub    BYTE PTR [ebp+0x676d8d37],0xe0
  411377:	mov    cl,0xf5
  411379:	call   0x3e81526
  41137e:	or     eax,0x6eea53e5
  411383:	add    eax,DWORD PTR [edi+0x21]
  411386:	bound  ebx,QWORD PTR [ecx]
  411388:	cmp    al,BYTE PTR [eax]
  41138a:	ror    ah,cl
  41138c:	push   0x2e5d1ed4
  411391:	add    DWORD PTR [ecx+0x42a4b43],edx
  411397:	adc    eax,0xd2b42ac1
  41139c:	gs mov cl,0x2b
  41139f:	jo     0x411416
  4113a1:	xchg   ecx,eax
  4113a2:	xchg   edi,eax
  4113a3:	retf   0x9b32
  4113a6:	ret    
  4113a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a8:	xor    dh,BYTE PTR [esi-0x21a645aa]
  4113ae:	daa    
  4113af:	dec    ebp
  4113b0:	data16 test BYTE PTR [eax+ebp*1+0x4e],cl
  4113b5:	lahf   
  4113b6:	mov    cl,0x4d
  4113b8:	push   ds
  4113b9:	and    ch,BYTE PTR [ebx-0x57]
  4113bc:	pop    ebp
  4113bd:	mov    cl,0x63
  4113bf:	dec    edx
  4113c0:	xchg   BYTE PTR [ebx-0x27],dl
  4113c3:	icebp  
  4113c4:	sahf   
  4113c5:	mov    eax,0x2603258e
  4113ca:	xchg   BYTE PTR [ecx+eax*2],cl
  4113cd:	daa    
  4113ce:	and    eax,edi
  4113d0:	mov    ?,WORD PTR [esi-0x67483482]
  4113d6:	mov    ds,WORD PTR [ecx-0x56]
  4113d9:	sbb    al,al
  4113db:	dec    edx
  4113dc:	mov    dl,BYTE PTR [edi]
  4113de:	ror    cl,0x10
  4113e1:	dec    ecx
  4113e2:	xor    al,0x34
  4113e4:	stc    
  4113e5:	fidivr WORD PTR [ebx+0x2f]
  4113e8:	popa   
  4113e9:	scas   eax,DWORD PTR es:[edi]
  4113ea:	pop    ss
  4113eb:	aam    0x11
  4113ed:	fild   QWORD PTR [eax-0x65]
  4113f0:	test   ah,bl
  4113f2:	sub    al,0x28
  4113f4:	fstp   QWORD PTR [esi]
  4113f6:	add    eax,DWORD PTR [edi+0x32b6a65a]
  4113fc:	pusha  
  4113fd:	inc    esi
  4113fe:	jns    0x4113f7
  411400:	(bad)  
  411401:	or     eax,0xbeebd6e3
  411406:	rcl    edx,cl
  411408:	mov    edx,0xeca6c984
  41140d:	leave  
  41140e:	int    0xbb
  411410:	cmp    dl,BYTE PTR [edx+0x58]
  411413:	inc    edi
  411414:	retf   0x8ca7
  411417:	pop    esp
  411418:	push   0x9850433c
  41141d:	bound  eax,QWORD PTR fs:[ebp-0x57be2783]
  411424:	mov    ebx,0xc3c9cc22
  411429:	push   esp
  41142a:	adc    BYTE PTR [esi],dl
  41142c:	sub    bl,BYTE PTR [ecx-0x653f76b8]
  411432:	jno    0x411405
  411434:	fcomp  DWORD PTR [ebp+0x27]
  411437:	mov    eax,DWORD PTR [edx-0x71f571e3]
  41143d:	jge    0x4114bc
  41143f:	push   ebx
  411440:	sbb    eax,DWORD PTR [eax-0x3f]
  411443:	add    ah,bh
  411445:	mov    ebx,0x40bd0669
  41144a:	push   edi
  41144b:	fidiv  WORD PTR ds:0x17966e3f
  411451:	jg     0x41141f
  411453:	aaa    
  411454:	inc    cl
  411456:	jns    0x411464
  411458:	(bad)  
  411459:	icebp  
  41145a:	pop    ebp
  41145b:	jmp    0xc849:0xc7572910
  411462:	adc    BYTE PTR [edx],al
  411464:	ret    
  411465:	icebp  
  411466:	leave  
  411467:	pop    ds
  411468:	or     ch,BYTE PTR fs:[esi+0x5c]
  41146c:	out    0x0,eax
  41146e:	mov    WORD PTR [edi+ebp*4-0x51],cs
  411472:	(bad)  
  411473:	cmp    al,0x87
  411475:	ror    bl,cl
  411477:	ret    
  411478:	sbb    DWORD PTR [ebx+0x7e],esp
  41147b:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41147d:	pop    es
  41147e:	or     DWORD PTR [edx+0x78],edi
  411481:	xchg   BYTE PTR [ebp-0x11],cl
  411484:	(bad)  
  411485:	cmp    DWORD PTR ds:0x92017eb6,edx
  41148b:	and    DWORD PTR [ecx+0x2d996fb4],esi
  411491:	repz sub esp,DWORD PTR [ebx+0x610a7971]
  411498:	add    BYTE PTR [ebp-0x33229111],0x35
  41149f:	sub    BYTE PTR [ebx],bl
  4114a1:	mov    eax,0xd625a1cd
  4114a6:	aad    0x9c
  4114a8:	mov    dl,0x55
  4114aa:	ss or  ebp,0x786a2be4
  4114b1:	push   0x42
  4114b3:	mov    bh,0x29
  4114b5:	add    eax,0xb796ede9
  4114ba:	fwait
  4114bb:	cmp    eax,0xc3b1e07f
  4114c0:	mov    ebp,0x60f7939
  4114c5:	add    eax,0xa86ebf1
  4114ca:	pop    ebp
  4114cb:	mov    edi,0x286566d2
  4114d0:	in     eax,dx
  4114d1:	es xchg ebp,eax
  4114d3:	cmp    dh,BYTE PTR ds:0x8750485e
  4114d9:	mov    BYTE PTR [esi],bh
  4114db:	ds sbb cl,dh
  4114de:	loope  0x4114f3
  4114e0:	cli    
  4114e1:	jp     0x4114fe
  4114e3:	int3   
  4114e4:	and    eax,DWORD PTR [edx]
  4114e6:	mov    ds:0x3f02441e,al
  4114eb:	addr16 mov ah,0x6e
  4114ee:	shl    BYTE PTR [eax],cl
  4114f0:	cmp    DWORD PTR [ecx-0x73],eax
  4114f3:	ja     0x411555
  4114f5:	push   esi
  4114f6:	iret   
  4114f7:	ds or  eax,0xa51bbfcb
  4114fd:	push   edi
  4114fe:	cwde   
  4114ff:	push   ds
  411500:	ja     0x4114f1
  411502:	(bad)  
  411503:	adc    BYTE PTR [ebp+edi*1+0x78],dh
  411507:	js     0x41155f
  411509:	retf   
  41150a:	pop    ss
  41150b:	rol    BYTE PTR [edx],0xbc
  41150e:	ins    BYTE PTR es:[edi],dx
  41150f:	sub    al,0x44
  411511:	jns    0x41154b
  411513:	dec    esi
  411514:	add    BYTE PTR [edi-0x2],dh
  411517:	(bad)  
  411518:	xchg   ecx,eax
  411519:	aaa    
  41151a:	and    esp,ebx
  41151c:	mov    ecx,0xb87c6508
  411521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411522:	dec    edx
  411523:	jge    0x4114e7
  411525:	adc    al,0x12
  411527:	retf   
  411528:	push   edi
  411529:	jnp    0x41153d
  41152b:	xor    BYTE PTR [edx-0x7d],al
  41152e:	sub    bl,0x50
  411531:	rcr    edx,cl
  411533:	cmp    edi,DWORD PTR [edx+0x4b178b9d]
  411539:	jae    0x4114c5
  41153b:	push   0x34
  41153d:	and    ah,BYTE PTR [ebx+0x12]
  411540:	sub    BYTE PTR [esi+eiz*2],0x7b
  411544:	sbb    eax,0xb9c8c188
  411549:	push   ds
  41154a:	fdiv   QWORD PTR [ecx]
  41154c:	xor    ecx,esp
  41154e:	sub    DWORD PTR [edi+0x3c],ebx
  411551:	fistp  QWORD PTR [esi]
  411553:	xchg   BYTE PTR cs:[ebx+0x71612185],ah
  41155a:	and    eax,0xf70b7011
  41155f:	outs   dx,BYTE PTR ds:[esi]
  411560:	test   BYTE PTR [di],cl
  411563:	outs   dx,BYTE PTR ds:[esi]
  411564:	ret    
  411565:	rcl    BYTE PTR [esi+0x72bb7aee],0x95
  41156c:	arpl   WORD PTR [ebx+0x70823a94],cx
  411572:	out    0x1e,al
  411574:	xor    bx,WORD PTR [eax-0x4d]
  411578:	aas    
  411579:	test   BYTE PTR [ebx],0xcd
  41157c:	mov    BYTE PTR [ebp-0x774372b],0xec
  411583:	xchg   esp,eax
  411584:	fstp   DWORD PTR [edi+0x18]
  411587:	and    BYTE PTR [ebp+0x14],dh
  41158a:	add    ebx,DWORD PTR [edi+0x6d]
  41158d:	cmp    eax,0x69ca416e
  411592:	in     al,0x88
  411594:	mov    edx,0x410bafc9
  411599:	pop    edx
  41159a:	xchg   DWORD PTR [edi-0x66bd4105],edx
  4115a0:	add    eax,0x77549ee8
  4115a5:	xchg   ebx,eax
  4115a6:	addr16 cwde 
  4115a8:	outs   dx,DWORD PTR ds:[esi]
  4115a9:	push   esi
  4115aa:	je     0x41153d
  4115ac:	int    0xc0
  4115ae:	cs cld 
  4115b0:	jo     0x4115fb
  4115b2:	adc    al,0xee
  4115b4:	arpl   WORD PTR [edi],di
  4115b6:	cmp    DWORD PTR [eax-0x30],esp
  4115b9:	sahf   
  4115ba:	cmp    ebp,DWORD PTR [edx+0x3a3650fb]
  4115c0:	mov    esp,0xe21c9069
  4115c5:	mov    bh,0x48
  4115c7:	add    al,BYTE PTR [edx+0x872b6ce]
  4115cd:	sar    DWORD PTR [ebx+ebp*4+0x55],0x69
  4115d2:	push   ss
  4115d3:	sbb    BYTE PTR [ebp-0x50bc4009],0x89
  4115da:	mov    DWORD PTR [ebx+0x59ff3bca],eax
  4115e0:	stos   BYTE PTR es:[edi],al
  4115e1:	bound  ebp,QWORD PTR [ebp+0x46]
  4115e4:	pop    edx
  4115e5:	ret    
  4115e6:	push   esp
  4115e7:	pop    ss
  4115e8:	and    ebp,DWORD PTR [edx+edx*1-0x2a]
  4115ec:	repnz daa 
  4115ee:	pop    ss
  4115ef:	mov    al,0x36
  4115f1:	jnp    0x4115b9
  4115f3:	bound  ebx,QWORD PTR [edi-0x22]
  4115f6:	mov    ds:0x1b211e9c,al
  4115fb:	jnp    0x41167a
  4115fd:	pop    ss
  4115fe:	retf   0x2638
  411601:	push   ecx
  411602:	ins    BYTE PTR es:[edi],dx
  411603:	shl    DWORD PTR [ebp-0x23ae44fd],cl
  411609:	jbe    0x411620
  41160b:	fucom  st(6)
  41160d:	fidiv  DWORD PTR [eax]
  41160f:	fwait
  411610:	mov    ecx,0x92ce0a33
  411615:	and    BYTE PTR [eax-0x6e],cl
  411618:	add    al,0x2c
  41161a:	int    0x44
  41161c:	sbb    ebx,esp
  41161e:	and    ebp,DWORD PTR [ebp+0x4d]
  411621:	pop    sp
  411623:	pop    esi
  411624:	repz daa 
  411626:	sub    al,0x3e
  411628:	call   FWORD PTR [esi+0x41]
  41162b:	sub    al,0x2f
  41162d:	hlt    
  41162e:	ret    
  41162f:	popa   
  411630:	mov    esi,0x2ddd541a
  411635:	xchg   ebp,eax
  411636:	add    BYTE PTR [ebx],ah
  411638:	inc    esi
  411639:	sbb    edi,DWORD PTR [ecx-0x9efc8b9]
  41163f:	mov    edx,0x99bf4bb4
  411644:	mov    al,ds:0x68a3e1b2
  411649:	dec    edx
  41164a:	push   edx
  41164b:	ins    DWORD PTR es:[edi],dx
  41164c:	ror    BYTE PTR [ebx-0x11],cl
  41164f:	xchg   BYTE PTR [ebx-0x12],dh
  411652:	les    edx,FWORD PTR [edi+0x4eb31493]
  411658:	clc    
  411659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41165a:	mov    cl,0x82
  41165c:	int3   
  41165d:	arpl   ax,dx
  41165f:	rcr    BYTE PTR [edi-0x37],cl
  411662:	pop    edx
  411663:	js     0x4116e4
  411665:	jbe    0x4115f9
  411667:	and    esi,esi
  411669:	call   DWORD PTR [eax+0x84d00c7]
  41166f:	jmp    0x16e7:0x3b897a77
  411676:	ret    
  411677:	push   esp
  411678:	clc    
  411679:	mov    ebp,0x740b851b
  41167e:	pop    edi
  41167f:	add    al,0x6e
  411681:	xchg   DWORD PTR [edx+0x51b74d61],eax
  411687:	loopne 0x41169a
  411689:	enter  0x9068,0x6
  41168d:	dec    ebp
  41168e:	jo     0x4116b0
  411690:	inc    ebp
  411691:	mov    esi,0xbaa791eb
  411696:	mov    WORD PTR [edx],fs
  411698:	idiv   DWORD PTR [eax-0x3ff7e91]
  41169e:	fbstp  TBYTE PTR [ecx]
  4116a0:	lods   eax,DWORD PTR ds:[esi]
  4116a1:	adc    ah,cl
  4116a3:	gs call 0x18e5:0x85e22245
  4116ab:	retf   0x8197
  4116ae:	mov    dl,BYTE PTR [ebp-0x2e]
  4116b1:	lahf   
  4116b2:	adc    eax,0xb16f4d45
  4116b7:	jo     0x411733
  4116b9:	jae    0x4116bf
  4116bb:	mov    al,0x6
  4116bd:	dec    ecx
  4116be:	mov    edi,0x77c724b8
  4116c3:	pop    ebp
  4116c4:	jle    0x411734
  4116c6:	sub    eax,0x9a3c922
  4116cb:	inc    ebx
  4116cc:	add    eax,0x521d2f7f
  4116d1:	sbb    BYTE PTR [ebx+eax*2+0x2d],dl
  4116d5:	sbb    BYTE PTR [edx],bl
  4116d7:	inc    esp
  4116d8:	and    BYTE PTR [esi-0x6a],bl
  4116db:	setge  BYTE PTR [esi+0x15e9813d]
  4116e2:	mov    cl,al
  4116e4:	pop    ebx
  4116e5:	out    0xa4,eax
  4116e7:	repz sub eax,edi
  4116ea:	pusha  
  4116eb:	and    DWORD PTR ds:0x6968ef3f,esp
  4116f1:	jmp    DWORD PTR [edx+0x2c55d984]
  4116f7:	outs   dx,BYTE PTR ds:[esi]
  4116f8:	call   0x98f2:0x99a2a7e7
  4116ff:	dec    ebp
  411700:	xor    al,0x12
  411702:	je     0x4116e0
  411704:	add    DWORD PTR [ecx+0x24],ecx
  411707:	cmp    eax,0xc6364c4c
  41170c:	cmp    ebx,DWORD PTR [ebp+0x1488de92]
  411712:	lds    ecx,FWORD PTR [ecx-0x4568ea85]
  411718:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411719:	into   
  41171a:	or     dh,ah
  41171c:	iret   
  41171d:	adc    bh,al
  41171f:	lods   al,BYTE PTR ds:[esi]
  411720:	iret   
  411721:	jo     0x411780
  411723:	push   cs
  411724:	dec    esp
  411725:	aaa    
  411726:	das    
  411727:	or     BYTE PTR [eax],cl
  411729:	mov    ecx,0x4e4db41
  41172e:	loopne 0x411792
  411730:	popa   
  411731:	shr    DWORD PTR [esp+eiz*8-0x38962d88],cl
  411738:	sbb    esi,ecx
  41173a:	sub    BYTE PTR [eax],dh
  41173c:	sahf   
  41173d:	cmp    DWORD PTR [ebp+0x7d7e1159],ecx
  411743:	xchg   ecx,eax
  411744:	xlat   BYTE PTR ds:[ebx]
  411745:	jge    0x4116d5
  411747:	and    al,0x63
  411749:	jne    0x4116e1
  41174b:	shl    BYTE PTR [ecx],cl
  41174d:	mov    ah,0x91
  41174f:	cmp    esi,ecx
  411751:	jns    0x41175c
  411753:	das    
  411754:	jae    0x411769
  411756:	mov    esi,0x40ca98e
  41175b:	in     eax,dx
  41175c:	outs   dx,DWORD PTR ds:[esi]
  41175d:	(bad)  
  41175e:	jo     0x41174c
  411760:	icebp  
  411761:	push   esp
  411762:	shl    eax,cl
  411764:	mov    BYTE PTR [ebp+0x6149563f],ah
  41176a:	shl    DWORD PTR [edx+0x5a7b245f],1
  411770:	mov    ds:0xcff9007f,al
  411775:	enter  0xd297,0xea
  411779:	movsx  ecx,bp
  41177c:	xchg   DWORD PTR [edi+ebx*8+0x49],edi
  411780:	sub    al,0x4e
  411782:	sub    eax,0x321b1d88
  411787:	shl    BYTE PTR [ebp+0x1c737716],0x9e
  41178e:	lea    eax,[esi]
  411790:	in     al,dx
  411791:	add    ch,BYTE PTR [esi]
  411793:	push   ss
  411794:	pop    esp
  411795:	sub    DWORD PTR [ebp*8-0x6718e5da],esi
  41179c:	sbb    eax,0xf7241e79
  4117a1:	cmp    ecx,ebp
  4117a3:	fiadd  WORD PTR [ecx+0x70]
  4117a6:	mov    edi,0xcb49d5c3
  4117ab:	lds    ebx,FWORD PTR ss:[edx-0xb1220a3]
  4117b2:	(bad)  
  4117b3:	push   ecx
  4117b4:	mov    cl,BYTE PTR [ecx]
  4117b6:	sub    ecx,DWORD PTR [edx]
  4117b8:	sbb    DWORD PTR [edi],ebx
  4117ba:	mov    ch,0x57
  4117bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117bd:	retf   0x4453
  4117c0:	pop    ebp
  4117c1:	mov    eax,0x36490614
  4117c6:	push   cs
  4117c7:	es jl  0x4117a7
  4117ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117cb:	mov    eax,ds:0xa3b83785
  4117d0:	jbe    0x4117e5
  4117d2:	mov    ds:0x1ac56624,al
  4117d7:	or     edi,eax
  4117d9:	or     BYTE PTR [esi+0x57],dh
  4117dc:	ja     0x41184a
  4117de:	dec    ecx
  4117df:	sbb    BYTE PTR [eax-0x18],dh
  4117e2:	sahf   
  4117e3:	sub    edx,0x731d910
  4117e9:	mov    esp,0x5717430e
  4117ee:	and    dl,dl
  4117f0:	mov    ebp,fs
  4117f2:	mov    ebp,0xbc4e998a
  4117f7:	inc    eax
  4117f8:	mov    ds:0x56c57d8b,al
  4117fd:	push   ecx
  4117fe:	cmp    DWORD PTR [eax-0x4af56278],ecx
  411804:	mov    esp,0xa32bdc9f
  411809:	cmp    BYTE PTR [ecx+edx*4-0x495fc5b8],cl
  411810:	out    dx,al
  411811:	jbe    0x411798
  411813:	dec    esi
  411814:	loop   0x411809
  411816:	adc    dl,BYTE PTR [bp+0x5b]
  41181a:	mov    al,0x18
  41181c:	aaa    
  41181d:	adc    eax,0x6093b7cf
  411822:	adc    al,BYTE PTR [esi+0x7b328bd9]
  411828:	cmp    DWORD PTR ds:0xfcf7571b,ecx
  41182e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41182f:	add    DWORD PTR [ecx+ecx*2-0x42c7af9d],eax
  411836:	pop    eax
  411837:	xchg   esp,eax
  411838:	pushf  
  411839:	out    dx,al
  41183a:	mov    eax,0x28d7b76b
  41183f:	add    ebp,DWORD PTR [ebx]
  411841:	push   ebp
  411842:	jo     0x411824
  411844:	xchg   ebx,eax
  411845:	add    esp,DWORD PTR [edx]
  411847:	fcmovnb st,st(1)
  411849:	jmp    DWORD PTR [ebp+0x8]
  41184c:	xor    al,0x12
  41184e:	adc    eax,0xa400286
  411853:	test   bh,ah
  411855:	or     edi,eax
  411857:	sbb    BYTE PTR [eax-0x1947e698],al
  41185d:	daa    
  41185e:	stc    
  41185f:	(bad)  
  411860:	cmp    eax,0xf7eb402d
  411865:	out    0x6d,al
  411867:	(bad)  
  411868:	hlt    
  411869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41186a:	mov    ds:0x74b0fe58,al
  41186f:	addr16 jge 0x411849
  411872:	xchg   esi,eax
  411873:	dec    ebp
  411874:	sub    eax,0xdbd8a2c4
  411879:	xchg   ebp,eax
  41187a:	adc    DWORD PTR [ebx],ecx
  41187c:	mov    DWORD PTR [ebx],ebx
  41187e:	adc    DWORD PTR [edx+edx*2+0x4d2e9f9e],ecx
  411885:	test   eax,0xd6ea1a99
  41188a:	xchg   ebx,eax
  41188b:	xchg   ebp,eax
  41188c:	fcom   st(7)
  41188e:	inc    eax
  41188f:	es inc ebx
  411891:	adc    ah,BYTE PTR [ebx-0x7b6587bb]
  411897:	ins    DWORD PTR es:[edi],dx
  411898:	into   
  411899:	(bad)  
  41189a:	icebp  
  41189b:	ror    BYTE PTR [esp+eax*1+0x33],1
  41189f:	shl    cl,0x2b
  4118a2:	test   cl,0x52
  4118a5:	fwait
  4118a6:	outs   dx,DWORD PTR ds:[esi]
  4118a7:	or     DWORD PTR [esi],ebp
  4118a9:	imul   ebp,DWORD PTR [edi],0x1185cf58
  4118af:	shl    BYTE PTR fs:[esi+0x12],cl
  4118b3:	mov    ebp,0xd43b9f86
  4118b8:	fisub  DWORD PTR [ebx+0x2b]
  4118bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118bd:	test   al,0x10
  4118bf:	lea    edi,[ecx-0x64801414]
  4118c5:	cli    
  4118c6:	mov    esp,0x84ee8a31
  4118cb:	test   BYTE PTR [esp+ebx*4+0x7],al
  4118cf:	mov    esi,0x65b4fb7f
  4118d4:	scas   eax,DWORD PTR es:[edi]
  4118d5:	lahf   
  4118d6:	outs   dx,BYTE PTR ds:[esi]
  4118d7:	cpuid  
  4118d9:	jno    0x4118cb
  4118db:	cmp    al,0xb
  4118dd:	jge    0x4118ab
  4118df:	push   ss
  4118e0:	div    ch
  4118e2:	in     eax,0xb
  4118e4:	inc    esi
  4118e5:	retf   0xeb19
  4118e8:	pop    es
  4118e9:	retf   0xf552
  4118ec:	jmp    0x4947:0x318723d2
  4118f3:	mov    cl,0x44
  4118f5:	idiv   BYTE PTR [ebx-0x43]
  4118f8:	jae    0x411957
  4118fa:	cmp    BYTE PTR [ebx-0x12],ch
  4118fd:	cs or  esi,esi
  411900:	stos   BYTE PTR es:[edi],al
  411901:	nop
  411902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411904:	inc    edi
  411905:	xor    ebx,DWORD PTR [esp+eiz*8-0x46]
  411909:	clc    
  41190a:	gs pop ebx
  41190c:	(bad)  
  41190f:	pop    es
  411910:	sahf   
  411911:	fwait
  411912:	mov    cl,0x34
  411914:	lods   eax,DWORD PTR ds:[esi]
  411915:	(bad)  [ebx-0x2c]
  411918:	push   ds
  411919:	cmp    bl,dl
  41191b:	pop    eax
  41191c:	rcl    bh,1
  41191e:	(bad)  [eax]
  411920:	loope  0x4118d0
  411922:	inc    ecx
  411923:	inc    esi
  411924:	pushf  
  411925:	add    ah,BYTE PTR [esi-0x1aa0efc4]
  41192b:	pop    ss
  41192c:	scas   al,BYTE PTR es:[edi]
  41192d:	sbb    eax,0xd5b68d5a
  411932:	cdq    
  411933:	inc    ebp
  411934:	or     al,0x55
  411936:	fisub  WORD PTR [ebp+0x40a6c13e]
  41193c:	dec    edi
  41193d:	push   ebp
  41193e:	rol    BYTE PTR [ebx],0x90
  411941:	test   al,0x9c
  411943:	out    dx,eax
  411944:	xchg   edx,eax
  411945:	adc    cl,ch
  411947:	adc    al,0x21
  411949:	adc    BYTE PTR ds:[edx],al
  41194c:	adc    ebp,DWORD PTR [ecx-0x39]
  41194f:	sti    
  411950:	pop    ebp
  411951:	push   0x30
  411953:	xchg   esp,eax
  411954:	in     al,0xeb
  411956:	ja     0x411996
  411958:	aam    0x88
  41195a:	or     BYTE PTR [edx-0xd1b0c7],bl
  411960:	mov    edi,0x2d564a25
  411965:	jp     0x411903
  411967:	pop    ds
  411968:	dec    esi
  411969:	inc    ecx
  41196a:	pop    ebp
  41196b:	or     eax,0xb7c340c0
  411970:	rcl    DWORD PTR [ebx-0x34],cl
  411973:	inc    ecx
  411974:	jp     0x411923
  411976:	fwait
  411977:	push   0xab412d3e
  41197c:	pusha  
  41197d:	mov    al,ds:0x9b5e2009
  411982:	inc    edi
  411983:	inc    esp
  411984:	das    
  411985:	mov    ch,0xaf
  411987:	jle    0x4119fe
  411989:	rcr    ah,1
  41198b:	mov    edi,0x11d32045
  411990:	add    edx,DWORD PTR [edi-0x62208c00]
  411996:	test   BYTE PTR [edx],dl
  411998:	test   al,0x30
  41199a:	rcr    DWORD PTR [esi-0x6e],cl
  41199d:	mov    WORD PTR [ecx-0x1ff2b5ba],ds
  4119a3:	xchg   ebx,eax
  4119a4:	jl     0x411a02
  4119a6:	pop    edi
  4119a7:	mov    eax,ds:0xcb0b9dcf
  4119ac:	lea    esp,[esi+0x350eb917]
  4119b2:	aas    
  4119b3:	or     BYTE PTR [ebx-0x34],dl
  4119b6:	add    bl,al
  4119b8:	xor    ah,ah
  4119ba:	int3   
  4119bb:	out    0x8,al
  4119bd:	and    al,0x17
  4119bf:	cmp    al,0xda
  4119c1:	mov    ah,0xbc
  4119c3:	dec    ebx
  4119c4:	jno    0x411968
  4119c6:	inc    esp
  4119c7:	dec    edx
  4119c8:	sti    
  4119c9:	inc    ebx
  4119ca:	in     eax,dx
  4119cb:	jp     0x4119d4
  4119cd:	int3   
  4119ce:	into   
  4119cf:	jg     0x411990
  4119d1:	out    dx,eax
  4119d2:	inc    eax
  4119d3:	les    esi,FWORD PTR [edi-0x47e354fa]
  4119d9:	pop    esi
  4119da:	sub    ebx,DWORD PTR [eax+0x1]
  4119dd:	loop   0x4119f6
  4119df:	jmp    0xbd05eeeb
  4119e4:	jnp    0x41196d
  4119e6:	enter  0x9b6e,0x13
  4119ea:	rol    edx,0x0
  4119ed:	mov    al,BYTE PTR [eax+0x23]
  4119f0:	loopne 0x411a49
  4119f2:	(bad)  
  4119f3:	and    esp,DWORD PTR [esp+ebx*1]
  4119f6:	push   es
  4119f7:	push   0x9f6bf2a4
  4119fc:	aad    0xa4
  4119fe:	pop    eax
  4119ff:	jge    0x41199a
  411a01:	jecxz  0x411a7c
  411a03:	cmp    edi,DWORD PTR [eax+0x4]
  411a06:	je     0x411995
  411a08:	sub    ebx,DWORD PTR [edi+esi*8+0xc]
  411a0c:	shl    esi,0xc7
  411a0f:	xlat   BYTE PTR ds:[ebx]
  411a10:	mov    ebx,0x24d497d2
  411a15:	push   esp
  411a16:	fist   WORD PTR [ebx+0x601a5893]
  411a1c:	jno    0x4119ff
  411a1e:	inc    eax
  411a1f:	fninit 
  411a21:	stos   BYTE PTR es:[edi],al
  411a22:	jp     0x4119c0
  411a24:	pop    ebx
  411a25:	stos   DWORD PTR es:[edi],eax
  411a26:	push   esi
  411a27:	inc    esp
  411a28:	fldenv [ebx]
  411a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a2b:	mov    bh,0x9b
  411a2d:	aad    0x79
  411a2f:	sbb    eax,DWORD PTR [edx+0x2d]
  411a32:	inc    ebx
  411a33:	imul   esp,DWORD PTR [edi],0xada65be9
  411a39:	jmp    0x4119e3
  411a3b:	adc    al,0xde
  411a3d:	inc    ecx
  411a3e:	mov    BYTE PTR [ecx],ah
  411a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a41:	jmp    0xfa9f9271
  411a46:	cmp    ax,0x224e
  411a4a:	clc    
  411a4b:	inc    edx
  411a4c:	fadd   QWORD PTR [edi+edx*8-0xf2b57d1]
  411a53:	pop    esi
  411a54:	xchg   DWORD PTR [ebp+0x6f],esi
  411a57:	push   cs
  411a58:	add    DWORD PTR [edx],0x1d48f2b7
  411a5e:	rol    DWORD PTR [ecx+0x65a75f8e],0x42
  411a65:	ret    
  411a66:	jmp    0xf3e8307b
  411a6b:	add    cl,ah
  411a6d:	enter  0xb7b9,0xa6
  411a71:	cs mov eax,0x3c8e9a0b
  411a77:	rcr    ebp,1
  411a79:	dec    esi
  411a7a:	mov    esp,0xe06e930c
  411a7f:	(bad)  
  411a80:	hlt    
  411a81:	xlat   BYTE PTR ds:[ebx]
  411a82:	test   DWORD PTR gs:[ecx-0x5387055e],0x7090b11b
  411a8d:	mov    ebx,DWORD PTR [esi+0xe]
  411a90:	popf   
  411a91:	mov    bh,0x2e
  411a93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a94:	sbb    al,0x2d
  411a96:	add    ecx,DWORD PTR [ecx]
  411a98:	lods   eax,DWORD PTR ds:[esi]
  411a99:	mov    dh,0xa0
  411a9b:	loop   0x411a90
  411a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a9e:	ins    DWORD PTR es:[edi],dx
  411a9f:	sub    BYTE PTR [esi-0x13],bh
  411aa2:	jl     0x411a63
  411aa4:	mov    cl,0x37
  411aa6:	xchg   edx,eax
  411aa7:	cld    
  411aa8:	mov    dl,0x6b
  411aaa:	adc    BYTE PTR [esi-0x15b5b34f],0xbf
  411ab1:	add    al,0x7a
  411ab3:	retf   
  411ab4:	loopne 0x411a50
  411ab6:	lock push eax
  411ab8:	add    eax,0x8dce33bc
  411abd:	test   BYTE PTR [ecx],al
  411abf:	repz jb 0x411af4
  411ac2:	add    BYTE PTR [ebx+0x558b084d],cl
  411ac8:	loopne 0x411a53
  411aca:	add    al,0x8a
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a723
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a727
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a72f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a733
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a737
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a73b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a73f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a743
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a74b
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a713
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a71b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a71f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a723
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a727
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [ebp+eiz*1-0x1d],ah
  412638:	aaa    
  412639:	imul   ecx,DWORD PTR [edx+0x5c178383],0xffffff83
  412640:	add    DWORD PTR [ebp+eax*2-0x1c],0x5d
  412645:	clc    
  412646:	mov    bh,0x11
  412648:	pop    esi
  412649:	push   cs
  41264a:	das    
  41264b:	hlt    
  41264c:	data16 jle 0x4125d5
  41264f:	mov    ah,0xd6
  412651:	(bad)  
  412652:	mov    ch,0xd
  412654:	mov    al,ds:0x2d1c873b
  412659:	cmp    eax,0x54f7fda5
  41265e:	ficomp DWORD PTR [eax+0x44]
  412661:	jle    0x412612
  412663:	mov    esp,0xcd783c4b
  412668:	xor    al,0xb4
  41266a:	(bad)  
  41266b:	ja     0x41260a
  41266d:	sbb    eax,0xaf0c7905
  412672:	data16 or BYTE PTR [ebx+0x71],al
  412676:	or     esp,eax
  412678:	mov    cl,0x3f
  41267a:	and    eax,0xefe0e404
  41267f:	or     esp,DWORD PTR [ebx-0x9]
  412682:	xchg   edx,eax
  412683:	(bad)  
  412684:	xchg   edx,eax
  412685:	(bad)  
  412686:	enter  0x811e,0xfa
  41268a:	inc    esi
  41268b:	lods   al,BYTE PTR ds:[esi]
  41268c:	ret    0xd8ee
  41268f:	sub    BYTE PTR [edx],cl
  412691:	aas    
  412692:	es mov cl,0xe8
  412695:	xchg   edi,eax
  412696:	sbb    DWORD PTR [ebp+0x144c0e43],ebx
  41269c:	xor    eax,0x646949da
  4126a1:	or     ebx,DWORD PTR ds:0x18c3acbb
  4126a7:	bound  eax,QWORD PTR [eax-0x7b]
  4126aa:	fistp  WORD PTR [ebp-0x9dc3072]
  4126b0:	dec    edi
  4126b1:	adc    dh,BYTE PTR [edx]
  4126b3:	push   eax
  4126b4:	cmc    
  4126b5:	xor    cl,0x44
  4126b8:	mov    ebx,ebx
  4126ba:	fadd   QWORD PTR [edx]
  4126bc:	xor    ebx,DWORD PTR [edx-0x6c]
  4126bf:	push   ebx
  4126c0:	xchg   ebp,eax
  4126c1:	adc    bl,BYTE PTR [esi]
  4126c3:	into   
  4126c4:	ss aaa 
  4126c6:	fidivr DWORD PTR [eax+0x6c]
  4126c9:	rcr    DWORD PTR [ebx+0x69],0xec
  4126cd:	cdq    
  4126ce:	dec    ebx
  4126cf:	fnstsw WORD PTR [ebp+0x1f]
  4126d2:	ret    
  4126d3:	fs pusha 
  4126d5:	xor    BYTE PTR [ebx-0x7e],bh
  4126d8:	scas   al,BYTE PTR es:[edi]
  4126d9:	or     eax,0x6b243651
  4126de:	xchg   ecx,eax
  4126df:	test   eax,0x85564c26
  4126e4:	or     dh,BYTE PTR [esi]
  4126e6:	test   eax,0xeaceacaf
  4126eb:	aas    
  4126ec:	aam    0xfd
  4126ee:	popf   
  4126ef:	dec    DWORD PTR [edi]
  4126f1:	pop    eax
  4126f2:	push   ds
  4126f3:	mov    ch,0x4f
  4126f5:	sbb    dl,BYTE PTR [edi-0x18]
  4126f8:	jno    0x4126b3
  4126fa:	and    eax,0x2352d7df
  4126ff:	xor    ebx,ecx
  412701:	out    dx,eax
  412702:	mov    edi,0x7d25ae4c
  412707:	push   esi
  412708:	scas   al,BYTE PTR es:[edi]
  412709:	or     eax,0xed253e45
  41270e:	add    DWORD PTR ds:0xd15b8c02,0x336e5903
  412718:	(bad)  
  412719:	aam    0x57
  41271b:	aad    0x0
  41271d:	ret    0xfdd0
  412720:	jae    0x4126ae
  412722:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412724:	mul    DWORD PTR [ecx-0x109c3366]
  41272a:	scas   al,BYTE PTR es:[edi]
  41272b:	repnz inc esi
  41272d:	(bad)  
  41272e:	mov    ch,0x2f
  412730:	dec    eax
  412731:	in     al,0x65
  412733:	arpl   bx,sp
  412735:	and    ebp,ebx
  412737:	mov    edx,0xecb0d8d1
  41273c:	and    al,0xbe
  41273e:	or     eax,DWORD PTR [ebp+ebx*8+0x5881d6ef]
  412745:	scas   eax,DWORD PTR es:[edi]
  412746:	sub    DWORD PTR [edi-0x72],ebp
  412749:	loopne 0x4126e8
  41274b:	in     al,dx
  41274c:	(bad)  
  41274e:	ds pop ebx
  412750:	mov    tr5,edi
  412753:	(bad)  
  412754:	cli    
  412755:	(bad)  
  412756:	and    ch,ah
  412758:	xchg   esi,eax
  412759:	lods   al,BYTE PTR ds:[esi]
  41275a:	push   0xb0bb8f61
  41275f:	xor    DWORD PTR [eax+ebx*8+0x672ddbb2],ebx
  412766:	fld    QWORD PTR [edx+0x1f]
  412769:	(bad)  
  41276a:	and    eax,0xe21f999d
  41276f:	mov    ch,0x5
  412771:	ins    DWORD PTR es:[edi],dx
  412772:	jge    0x412782
  412774:	in     eax,0xc9
  412776:	xor    eax,0xf24fd6e3
  41277b:	jo     0x41270d
  41277d:	imul   esi,DWORD PTR [edx],0xe402adc8
  412783:	xchg   ebx,eax
  412784:	and    DWORD PTR [esi],0x26
  412787:	adc    BYTE PTR es:[esi+ebp*4+0x32],bh
  41278c:	in     eax,dx
  41278d:	out    0x68,eax
  41278f:	popf   
  412790:	out    0x8c,al
  412792:	jge    0x412779
  412794:	push   eax
  412795:	hlt    
  412796:	jmp    0x412756
  412798:	ins    DWORD PTR es:[edi],dx
  412799:	sbb    al,0x95
  41279b:	jne    0x4127a5
  41279d:	dec    esp
  41279e:	inc    edi
  41279f:	mov    al,0x8a
  4127a1:	adc    al,BYTE PTR cs:[ebx]
  4127a4:	xlat   BYTE PTR ds:[ebx]
  4127a5:	cmp    al,0x51
  4127a7:	xor    eax,0x28377f19
  4127ac:	add    ah,ch
  4127ae:	mov    edi,0xa5ba7c4
  4127b3:	mov    ch,0xdb
  4127b5:	jo     0x412816
  4127b7:	mov    edx,0xb390887a
  4127bc:	xchg   ebx,eax
  4127bd:	fs pop edi
  4127bf:	dec    ebp
  4127c0:	dec    edx
  4127c1:	sub    DWORD PTR [edi-0x413d3dd8],ecx
  4127c7:	fsubr  DWORD PTR [edi-0x47]
  4127ca:	and    al,0x32
  4127cc:	inc    esi
  4127cd:	sbb    esp,eax
  4127cf:	imul   edi,DWORD PTR [edx],0xacb4d968
  4127d5:	aaa    
  4127d6:	(bad)  
  4127d7:	je     0x41277f
  4127d9:	mov    ds:0x43611ff3,eax
  4127de:	sar    edx,0xa6
  4127e1:	ror    DWORD PTR [ebx-0x1d97e750],0x33
  4127e8:	xchg   edx,eax
  4127e9:	sub    al,0xb5
  4127eb:	je     0x4127dc
  4127ed:	sbb    cl,0x46
  4127f0:	inc    edx
  4127f1:	cwde   
  4127f2:	popf   
  4127f3:	mov    BYTE PTR [eax],bh
  4127f5:	inc    esp
  4127f6:	jg     0x412846
  4127f8:	dec    ebx
  4127f9:	(bad)
  4127fc:	mov    edx,0xaee0f3cb
  412801:	in     al,0xdb
  412803:	cmc    
  412804:	mov    bh,0xc4
  412806:	or     DWORD PTR [esp+edx*2],esp
  412809:	cmc    
  41280a:	fwait
  41280b:	int3   
  41280c:	xchg   ecx,eax
  41280d:	sbb    eax,0xa81cb8aa
  412812:	(bad)  
  412813:	mov    esi,0x4f01468b
  412818:	dec    ebp
  412819:	mov    cs,WORD PTR [ebx-0x76bef347]
  41281f:	daa    
  412820:	out    0x3a,eax
  412822:	ins    DWORD PTR es:[edi],dx
  412823:	lods   al,BYTE PTR ds:[esi]
  412824:	test   al,0xae
  412826:	mov    esp,0x2d9f0d51
  41282b:	fsubr  st(7),st
  41282d:	mov    ah,0x63
  41282f:	icebp  
  412830:	sub    eax,ebp
  412832:	icebp  
  412833:	jmp    0xc4dfc12a
  412838:	fst    DWORD PTR [ecx-0x1a8352df]
  41283e:	jl     0x412861
  412840:	xchg   BYTE PTR [ebx-0x7a],ch
  412843:	jecxz  0x41282a
  412845:	ins    DWORD PTR es:[edi],dx
  412846:	fimul  DWORD PTR [esi-0x5aab8601]
  41284c:	jle    0x4128b5
  41284e:	in     al,0x61
  412850:	xchg   edi,eax
  412851:	(bad)  
  412853:	mov    cl,0x60
  412855:	in     eax,dx
  412856:	push   esp
  412857:	and    ebp,DWORD PTR [eax]
  412859:	(bad)  
  41285a:	stos   DWORD PTR es:[edi],eax
  41285b:	mov    bh,0x8
  41285d:	add    eax,0xe5be30
  412862:	fidiv  DWORD PTR [ecx]
  412864:	jbe    0x412853
  412866:	(bad)  
  412867:	ror    DWORD PTR [ebp-0x48c5434d],cl
  41286d:	not    esp
  41286f:	xor    eax,0x8d77faf9
  412874:	push   0xffffffff
  412876:	push   edx
  412877:	sbb    BYTE PTR [esi+0x10eb1658],dh
  41287d:	in     eax,0x94
  41287f:	push   0x8c497830
  412884:	outs   dx,DWORD PTR ds:[esi]
  412885:	inc    eax
  412886:	outs   dx,BYTE PTR ds:[esi]
  412887:	loope  0x412824
  412889:	out    dx,al
  41288a:	ret    0x2d06
  41288d:	mov    ch,0xb9
  41288f:	sbb    al,0xe9
  412891:	enter  0xfd14,0xd8
  412895:	jns    0x4128b0
  412897:	pop    ds
  412898:	adc    al,0x9e
  41289a:	cmp    dh,BYTE PTR [esi+ebx*2]
  41289d:	retf   
  41289e:	pop    edi
  41289f:	mov    ecx,0x65b89bd2
  4128a4:	(bad)  
  4128a5:	mov    bh,0xf0
  4128a7:	rcr    BYTE PTR [bx+si],cl
  4128aa:	fwait
  4128ab:	push   ecx
  4128ac:	sub    ah,0x1a
  4128af:	cld    
  4128b0:	enter  0x67a7,0xce
  4128b4:	scas   eax,DWORD PTR es:[edi]
  4128b5:	inc    esi
  4128b6:	push   0x220d5759
  4128bb:	xchg   ebp,eax
  4128bc:	nop
  4128bd:	or     eax,0xd31caa4a
  4128c2:	fdivr  DWORD PTR [ebp+ecx*1-0x3f]
  4128c6:	cmc    
  4128c7:	pop    eax
  4128c8:	mov    ch,0xee
  4128ca:	sbb    ecx,DWORD PTR [edi+0x42156250]
  4128d0:	dec    ebx
  4128d1:	arpl   WORD PTR [esp+edi*1],cx
  4128d4:	add    DWORD PTR [edx-0x27],ebp
  4128d7:	push   edi
  4128d8:	fbstp  TBYTE PTR [edi-0x55]
  4128db:	inc    edi
  4128dc:	jg     0x4128ae
  4128de:	push   edi
  4128df:	jo     0x4128e8
  4128e1:	aaa    
  4128e2:	lods   eax,DWORD PTR ds:[esi]
  4128e3:	idiv   DWORD PTR [ecx+0x20bc650]
  4128e9:	mov    WORD PTR [eax+0x7c798d3e],cs
  4128ef:	inc    ecx
  4128f0:	inc    eax
  4128f1:	add    eax,0xb574a4bc
  4128f6:	xchg   esi,eax
  4128f7:	ror    DWORD PTR [ebp-0x5d],0xf5
  4128fb:	popf   
  4128fc:	sub    edi,DWORD PTR [edi]
  4128fe:	mov    dh,0x72
  412900:	dec    edx
  412901:	cmp    DWORD PTR [edx],esp
  412903:	or     DWORD PTR [edi-0x5a47b8b2],0x1a
  41290a:	(bad)  
  41290b:	fisubr WORD PTR [esi+eax*2+0x23]
  41290f:	push   ecx
  412910:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412911:	pop    ebp
  412912:	push   edx
  412913:	push   edx
  412914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412915:	push   esp
  412916:	scas   al,BYTE PTR es:[edi]
  412917:	clc    
  412918:	stc    
  412919:	mul    BYTE PTR [eax+0x6f1ea230]
  41291f:	inc    edi
  412920:	mov    eax,0x49b7620c
  412925:	mov    ds:0x41444391,eax
  41292a:	stc    
  41292b:	dec    ebp
  41292c:	jmp    DWORD PTR [esi+0x4851935a]
  412932:	mov    ds,WORD PTR [edi+0x48947590]
  412938:	popf   
  412939:	mov    dh,0xe5
  41293b:	popf   
  41293c:	inc    eax
  41293d:	outs   dx,DWORD PTR ds:[esi]
  41293e:	ja     0x41291a
  412940:	test   eax,0x197fc18a
  412945:	in     al,0x42
  412947:	dec    edx
  412948:	add    bl,BYTE PTR [eax+ebx*8]
  41294b:	popa   
  41294c:	pop    esp
  41294d:	lds    ebx,FWORD PTR [ebp-0x435702f0]
  412953:	outs   dx,WORD PTR ds:[esi]
  412955:	cdq    
  412956:	pop    esi
  412957:	push   0xa8afede7
  41295c:	push   eax
  41295d:	xor    ah,ah
  41295f:	stc    
  412960:	push   ds
  412961:	into   
  412962:	icebp  
  412963:	push   ss
  412964:	lds    edx,FWORD PTR [ebx+0x1081b433]
  41296a:	inc    edx
  41296b:	jmp    0x9ee3d3
  412970:	sub    al,0xb1
  412972:	push   cs
  412973:	jo     0x412978
  412975:	icebp  
  412976:	cmp    BYTE PTR [edi-0x7df1ce77],cl
  41297c:	aas    
  41297d:	int3   
  41297e:	pop    esi
  41297f:	xor    eax,0x8ac44c70
  412984:	xor    eax,0x4e4670f6
  412989:	xlat   BYTE PTR ds:[ebx]
  41298a:	sub    eax,DWORD PTR [ecx-0x5b474ee5]
  412990:	push   esi
  412991:	in     al,0xda
  412993:	(bad)  
  412994:	jae    0x41299a
  412996:	push   0xfffffff6
  412998:	and    ch,ch
  41299a:	adc    DWORD PTR [ecx+0x6],eax
  41299d:	loop   0x412966
  41299f:	sahf   
  4129a0:	jns    0x412a06
  4129a2:	and    bh,BYTE PTR [ecx-0x7f]
  4129a5:	mov    bh,0x8f
  4129a7:	out    0xd6,eax
  4129a9:	fcomp  st(4)
  4129ab:	loopne 0x4129d9
  4129ad:	scas   al,BYTE PTR es:[edi]
  4129ae:	push   ecx
  4129af:	push   eax
  4129b0:	adc    BYTE PTR [ecx-0x5f035751],ch
  4129b6:	pop    ebp
  4129b7:	xor    DWORD PTR [esp+eax*4-0x1980d2db],edx
  4129be:	int    0x75
  4129c0:	mov    esi,0xd0b47ae9
  4129c5:	les    esp,FWORD PTR [eax+edx*4-0x6aec18c5]
  4129cc:	out    0x87,al
  4129ce:	mov    edi,0x131d9e55
  4129d3:	cli    
  4129d4:	aas    
  4129d5:	ss jb  0x412a22
  4129d8:	jle    0x4129de
  4129da:	out    dx,al
  4129db:	pusha  
  4129dc:	aaa    
  4129dd:	mov    ebp,0xd006629f
  4129e2:	iret   
  4129e3:	into   
  4129e4:	fimul  WORD PTR [ebx+0x4526eb1e]
  4129ea:	ss imul esi,ebp,0xb903a846
  4129f1:	inc    edi
  4129f2:	pop    ss
  4129f3:	cmp    eax,esi
  4129f5:	mov    ebx,0x7a3323c2
  4129fa:	ret    
  4129fb:	cmc    
  4129fc:	mov    DWORD PTR [edx+0x1072602c],edi
  412a02:	push   esp
  412a03:	dec    esi
  412a04:	mov    edx,0x6cc3a646
  412a09:	jp     0x4129ac
  412a0b:	adc    esp,edi
  412a0d:	mov    eax,0xb3f92cc0
  412a12:	mov    ds:0xebe32b49,al
  412a17:	ss xchg ebp,eax
  412a19:	aas    
  412a1a:	cmp    esp,DWORD PTR [edx+0x39]
  412a1d:	in     al,dx
  412a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a1f:	loop   0x412a2e
  412a21:	nop
  412a22:	mov    ebx,DWORD PTR [edx+edx*4]
  412a25:	popa   
  412a26:	mov    WORD PTR [edx-0x5ed4cdd5],ds
  412a2c:	cld    
  412a2d:	inc    ebx
  412a2e:	loop   0x412a4a
  412a30:	and    edi,DWORD PTR [ecx-0x3]
  412a33:	popf   
  412a34:	mov    eax,ds:0x702c307b
  412a39:	or     dh,bh
  412a3b:	ins    DWORD PTR es:[edi],dx
  412a3c:	neg    DWORD PTR [ebx]
  412a3e:	add    esp,edi
  412a40:	jb     0x412a01
  412a42:	out    0x63,al
  412a44:	adc    BYTE PTR [ecx-0x5fd008c0],bl
  412a4a:	ins    BYTE PTR es:[edi],dx
  412a4b:	and    ah,BYTE PTR [esi]
  412a4d:	ficomp WORD PTR [ecx+0x1b4edd88]
  412a53:	sti    
  412a54:	es and eax,0x5cbe1c77
  412a5b:	(bad)  
  412a5c:	jb     0x412a62
  412a5e:	mov    cl,0x5e
  412a60:	xchg   ebp,eax
  412a61:	imul   ebx,ebp,0xa0b408ce
  412a67:	test   cl,dh
  412a69:	xor    eax,0x6f3a2c9a
  412a6e:	jno    0x412aa6
  412a70:	push   cs
  412a71:	xchg   edi,eax
  412a72:	imul   eax,eax,0xfffffff4
  412a75:	repnz stos DWORD PTR es:[di],eax
  412a78:	(bad)  
  412a79:	(bad)
  412a7c:	arpl   WORD PTR [ebx],bp
  412a7e:	lods   eax,DWORD PTR ds:[esi]
  412a7f:	loop   0x412a55
  412a81:	xchg   edi,eax
  412a82:	jge    0x412ab9
  412a84:	fcomp  DWORD PTR [edi+0x646d8922]
  412a8a:	adc    BYTE PTR [ecx],0x94
  412a8d:	in     al,dx
  412a8e:	in     eax,dx
  412a8f:	xchg   dh,al
  412a91:	jecxz  0x412ad2
  412a93:	hlt    
  412a94:	adc    eax,0x9d09c9da
  412a99:	jne    0x412ae8
  412a9b:	mov    ch,0x8
  412a9d:	loop   0x412a8e
  412a9f:	leave  
  412aa0:	div    BYTE PTR [edi+esi*1+0x57]
  412aa4:	add    esi,DWORD PTR [eax+ebp*2]
  412aa7:	int3   
  412aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412aa9:	mov    esi,ecx
  412aab:	jle    0x412a74
  412aad:	sar    DWORD PTR [ebx],0x8c
  412ab0:	xchg   ebp,eax
  412ab1:	mov    ds:0x833d3eb4,eax
  412ab6:	retf   
  412ab7:	push   esp
  412ab8:	test   eax,0x9fec0837
  412abd:	enter  0xc9fc,0xab
  412ac1:	cld    
  412ac2:	hlt    
  412ac3:	and    eax,0x6e19cc38
  412ac8:	inc    BYTE PTR [edx-0x6a]
  412acb:	fld    DWORD PTR [ebx]
  412acd:	repnz push es
  412acf:	push   ss
  412ad0:	mov    eax,eax
  412ad2:	push   cs
  412ad3:	xchg   edx,eax
  412ad4:	adc    DWORD PTR ds:0x82c97430,ebx
  412ada:	mov    bl,0xf6
  412adc:	pop    esp
  412add:	mov    ds:0x9092ec38,al
  412ae2:	adc    BYTE PTR [eax],bl
  412ae4:	pop    edx
  412ae5:	rol    bh,0x1e
  412ae8:	cmp    ecx,DWORD PTR [edx]
  412aea:	push   ecx
  412aeb:	pop    ebp
  412aec:	ret    
  412aed:	pop    ebx
  412aee:	mov    ah,0xeb
  412af0:	jb     0x412b1b
  412af2:	push   eax
  412af3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412af4:	and    dh,dl
  412af6:	iret   
  412af7:	sub    dl,dh
  412af9:	pop    edi
  412afa:	push   DWORD PTR [edi]
  412afc:	outs   dx,BYTE PTR ds:[esi]
  412afd:	or     eax,ebp
  412aff:	test   BYTE PTR [ebp+0x667763a4],bh
  412b05:	ins    DWORD PTR es:[edi],dx
  412b06:	call   0x5122:0xe4c0ed28
  412b0d:	inc    esp
  412b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b0f:	cmp    eax,0xac6883ce
  412b14:	fisttp QWORD PTR [edi-0x4b71e678]
  412b1a:	xchg   BYTE PTR [edx+0x2e],ch
  412b1d:	sti    
  412b1e:	xchg   ebp,eax
  412b1f:	and    al,0xdb
  412b21:	xchg   ebx,eax
  412b22:	sbb    DWORD PTR [edx-0x3789560e],ecx
  412b28:	and    eax,0x73fe71e6
  412b2d:	and    ebx,DWORD PTR [eax-0x264f5ce0]
  412b33:	fisub  DWORD PTR [ecx+eax*4]
  412b36:	push   0x16677abe
  412b3b:	pushf  
  412b3c:	call   esi
  412b3e:	pop    edi
  412b3f:	inc    edi
  412b40:	xchg   DWORD PTR [edi+0x71],eax
  412b43:	and    bh,0xe5
  412b46:	mov    edx,0x249f1534
  412b4b:	cmp    ch,BYTE PTR [ebx+eiz*2]
  412b4e:	cmp    al,0xdc
  412b50:	mov    eax,ds:0xe46a98b8
  412b55:	scas   eax,DWORD PTR es:[edi]
  412b56:	adc    BYTE PTR [eax],ah
  412b58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b59:	sbb    esi,DWORD PTR [esi+0x7318945f]
  412b5f:	cmc    
  412b60:	cli    
  412b61:	mov    DWORD PTR [ecx],eax
  412b63:	mov    cl,0x2b
  412b65:	std    
  412b66:	aas    
  412b67:	and    dl,dl
  412b69:	loopne 0x412bea
  412b6b:	rcl    DWORD PTR [eax],cl
  412b6d:	sub    BYTE PTR [eax],bl
  412b6f:	imul   ebx,esi,0xc3962151
  412b75:	popa   
  412b76:	data16 stos BYTE PTR es:[edi],al
  412b78:	push   0x46e07d1b
  412b7d:	dec    esp
  412b7e:	sbb    al,0xa3
  412b80:	loope  0x412b8b
  412b82:	dec    esp
  412b83:	lods   eax,DWORD PTR ds:[esi]
  412b84:	outs   dx,DWORD PTR ds:[esi]
  412b85:	mov    al,0xfb
  412b87:	dec    ebp
  412b88:	add    ebx,DWORD PTR [edi]
  412b8a:	pop    ds
  412b8b:	enter  0xf00b,0xff
  412b8f:	push   ss
  412b90:	fnsave [ebp-0x7b]
  412b93:	mov    cl,0xad
  412b95:	scas   al,BYTE PTR es:[edi]
  412b96:	push   eax
  412b97:	xor    eax,0xdb677b28
  412b9c:	xor    esp,DWORD PTR [edi+0x4ff1ed0e]
  412ba2:	daa    
  412ba3:	retf   0x4690
  412ba6:	add    al,0x77
  412ba8:	pop    es
  412ba9:	sub    ch,BYTE PTR [ecx]
  412bab:	jbe    0x412bda
  412bad:	sbb    esi,DWORD PTR ds:0x640bfaa2
  412bb3:	movzx  eax,BYTE PTR [ecx-0x26]
  412bb7:	or     eax,0x3a6465e3
  412bbc:	cmp    al,0xfc
  412bbe:	push   es
  412bbf:	into   
  412bc0:	shr    BYTE PTR [edx-0x5df3f2dc],cl
  412bc6:	loop   0x412bad
  412bc8:	adc    DWORD PTR [esi],ebp
  412bca:	(bad)  
  412bcc:	sbb    esi,DWORD PTR [edi]
  412bce:	aaa    
  412bcf:	adc    BYTE PTR [eax-0x29],dh
  412bd2:	leave  
  412bd3:	ror    DWORD PTR [edi-0x1d],cl
  412bd6:	adc    edi,DWORD PTR [ecx]
  412bd8:	dec    esi
  412bd9:	xchg   ebx,eax
  412bda:	imul   esp,edi,0x8cc96298
  412be0:	pop    ecx
  412be1:	xchg   esi,eax
  412be2:	cmp    BYTE PTR [eax-0x225aea34],cl
  412be8:	hlt    
  412be9:	cmp    ecx,DWORD PTR [esi]
  412beb:	mov    esp,0xca0f657a
  412bf0:	fisttp DWORD PTR [eax-0x58]
  412bf3:	jae    0x412c24
  412bf5:	dec    edi
  412bf6:	sbb    DWORD PTR [eax+0x671b7924],ebx
  412bfc:	into   
  412bfd:	outs   dx,DWORD PTR ds:[esi]
  412bfe:	jnp    0x412b95
  412c00:	inc    edx
  412c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c02:	outs   dx,BYTE PTR ds:[esi]
  412c03:	add    DWORD PTR [eax],edx
  412c05:	scas   al,BYTE PTR es:[edi]
  412c06:	cwde   
  412c07:	xchg   esi,eax
  412c08:	scas   al,BYTE PTR es:[edi]
  412c09:	mov    ch,0xc3
  412c0b:	fnsave [ecx+0x2e]
  412c0e:	jp     0x412be7
  412c10:	mov    al,0x2c
  412c12:	mov    ebp,DWORD PTR [eax-0x3e]
  412c15:	sbb    BYTE PTR [edx-0x401a214c],0xc3
  412c1c:	dec    ebp
  412c1d:	shl    DWORD PTR [edi+0x1b243423],cl
  412c23:	popf   
  412c24:	ss cs iret 
  412c27:	adc    bh,bh
  412c29:	aad    0x48
  412c2b:	jp     0x412bf1
  412c2d:	mov    cl,dh
  412c2f:	and    ah,BYTE PTR [edx-0x4ebdf599]
  412c35:	or     eax,DWORD PTR [ebp-0x1a]
  412c38:	adc    eax,0x4a68399c
  412c3d:	jle    0x412c92
  412c3f:	lods   al,BYTE PTR ds:[esi]
  412c40:	out    dx,al
  412c41:	jb     0x412ca5
  412c43:	inc    edx
  412c44:	sub    al,0x14
  412c46:	push   cs
  412c47:	ret    
  412c48:	add    ebp,DWORD PTR [esi-0x36904035]
  412c4e:	push   ecx
  412c4f:	pop    edi
  412c50:	add    cl,cl
  412c52:	xor    ecx,0xadda2bb1
  412c58:	lahf   
  412c59:	cwde   
  412c5a:	(bad)  
  412c5b:	mov    eax,0xcb6b751f
  412c60:	push   ds
  412c61:	pop    ecx
  412c62:	xchg   BYTE PTR [edi+0x32],dl
  412c65:	bnd jg 0x412c30
  412c68:	xchg   edx,eax
  412c69:	xor    ch,BYTE PTR es:[eax]
  412c6c:	xlat   BYTE PTR ds:[ebx]
  412c6d:	mov    ah,0xe2
  412c6f:	(bad)  
  412c70:	fisttp QWORD PTR [esi+0x7a7b258c]
  412c76:	push   ebp
  412c77:	jp     0x412c9c
  412c79:	dec    BYTE PTR [ebp+0x6c7cae6c]
  412c7f:	push   ss
  412c80:	inc    ebx
  412c81:	pop    edi
  412c82:	jle    0x412cd3
  412c84:	sub    BYTE PTR [esi],cl
  412c86:	push   esi
  412c87:	or     eax,0xa21395a2
  412c8c:	hlt    
  412c8d:	stos   DWORD PTR es:[edi],eax
  412c8e:	adc    al,0x47
  412c90:	inc    ecx
  412c91:	(bad)  
  412c92:	sub    BYTE PTR [ecx+ecx*2-0x58663869],0x65
  412c9a:	ja     0x412c21
  412c9c:	add    eax,0x71fcd5ae
  412ca1:	inc    eax
  412ca2:	das    
  412ca3:	loopne 0x412cca
  412ca5:	shl    DWORD PTR [edi+0x5c6b6537],cl
  412cab:	ds sti 
  412cad:	fldenv [eax*2-0x237079eb]
  412cb4:	mov    ah,0xa2
  412cb6:	add    al,0x15
  412cb8:	ror    DWORD PTR [esp+ebx*4+0x69346cc7],0xb3
  412cc0:	mov    ecx,DWORD PTR ds:0x35de5d3a
  412cc6:	sub    BYTE PTR [ebx],0x92
  412cc9:	cmp    BYTE PTR [edi],bl
  412ccb:	bound  edx,QWORD PTR [esi]
  412ccd:	sub    bl,BYTE PTR [eax]
  412ccf:	call   0x669ddc67
  412cd4:	xor    BYTE PTR [ebx],dl
  412cd6:	mov    ebx,DWORD PTR [ecx+ecx*1-0x5b]
  412cda:	enter  0x89ca,0x99
  412cde:	call   0xb33d617
  412ce3:	aad    0x94
  412ce5:	jo     0x412cc9
  412ce7:	test   eax,0xdb4eaa6a
  412cec:	ins    BYTE PTR es:[edi],dx
  412ced:	shr    bl,1
  412cef:	int    0x2c
  412cf1:	mov    dl,0x8f
  412cf3:	scas   eax,DWORD PTR es:[edi]
  412cf4:	ret    
  412cf5:	cmp    ebp,DWORD PTR [edi+0x23]
  412cf8:	(bad)  
  412cfa:	imul   ebx,DWORD PTR ds:0x7bea7ac2,0xfffffff7
  412d01:	xor    al,dl
  412d03:	push   ebx
  412d05:	out    0x2a,al
  412d07:	adc    eax,0xe594d1b5
  412d0c:	ffree  st(0)
  412d0e:	cwde   
  412d0f:	aad    0x17
  412d11:	retf   0xc5ff
  412d14:	int    0xbf
  412d16:	mov    ebx,0x6ff91f73
  412d1b:	pop    ebx
  412d1c:	bound  esi,QWORD PTR [edx+0x55]
  412d1f:	sub    esi,DWORD PTR [edi-0x3a0f416f]
  412d25:	xor    eax,0x8d03a01
  412d2a:	add    al,0xcf
  412d2c:	jle    0x412d76
  412d2e:	jno    0x412d96
  412d30:	iret   
  412d31:	inc    esi
  412d32:	push   0x337f852a
  412d37:	daa    
  412d38:	xor    al,0x53
  412d3a:	call   0x6716:0x9e893c89
  412d41:	dec    edx
  412d42:	or     esp,ecx
  412d44:	adc    eax,0xeab8548b
  412d49:	fwait
  412d4a:	out    dx,al
  412d4b:	pop    edx
  412d4c:	push   esi
  412d4d:	stos   DWORD PTR es:[edi],eax
  412d4e:	lods   al,BYTE PTR ds:[esi]
  412d4f:	and    al,0x73
  412d51:	sahf   
  412d52:	and    ch,0x50
  412d55:	pushf  
  412d56:	dec    ebx
  412d57:	dec    esp
  412d58:	ret    
  412d59:	push   ebp
  412d5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d5b:	and    DWORD PTR [esi-0x64],esi
  412d5e:	sbb    DWORD PTR [edx+0x1005f4a9],0x20
  412d65:	cmp    DWORD PTR [ebp-0x18],edx
  412d68:	xor    al,0xaa
  412d6a:	rcr    cl,cl
  412d6c:	inc    edx
  412d6d:	test   eax,0xf6a79db8
  412d72:	add    bl,BYTE PTR ds:0xdce540f7
  412d78:	dec    ecx
  412d79:	(bad)  
  412d7a:	xor    DWORD PTR [ebp+0xba231b6],esi
  412d80:	push   es
  412d81:	pop    esp
  412d82:	xor    esi,DWORD PTR [ebp-0x21c56d28]
  412d88:	mov    esp,0x6149d951
  412d8d:	(bad)  
  412d8e:	shl    DWORD PTR [eax+0x5ac4f102],cl
  412d94:	sahf   
  412d95:	mov    ebx,0x7fdc3adc
  412d9a:	or     al,0xc
  412d9c:	dec    ecx
  412d9d:	out    0xb,al
  412d9f:	aam    0x64
  412da1:	std    
  412da2:	inc    esi
  412da3:	out    0xc1,eax
  412da5:	and    bh,BYTE PTR [ecx]
  412da7:	test   al,0xf7
  412da9:	inc    ebp
  412daa:	cmp    eax,DWORD PTR [ecx]
  412dac:	push   0x4e7a3e74
  412db1:	mov    eax,0xfa845cb9
  412db6:	push   es
  412db7:	test   BYTE PTR [eax+0x55559c88],0x18
  412dbe:	sbb    DWORD PTR [eax-0x2a],esi
  412dc1:	add    bl,BYTE PTR [ebp-0x78]
  412dc4:	or     esp,eax
  412dc6:	inc    esp
  412dc7:	cmp    eax,0x3861215c
  412dcc:	cs push es
  412dce:	ror    dh,cl
  412dd0:	cmp    edx,DWORD PTR [ecx]
  412dd2:	and    esi,DWORD PTR [ebx+0x17]
  412dd5:	xchg   ebx,eax
  412dd6:	loope  0x412e10
  412dd8:	mov    eax,ds:0x61d0f497
  412ddd:	ja     0x412e55
  412ddf:	xor    eax,0x458e94b9
  412de4:	and    DWORD PTR [ecx+0x0],ecx
  412de7:	push   0x71
  412de9:	mov    BYTE PTR [edi],cl
  412deb:	xor    al,0x85
  412ded:	es fwait
  412def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df0:	mov    DWORD PTR [eax-0x53ce75e5],ebp
  412df6:	test   al,0xb8
  412df8:	sbb    eax,0x5906f842
  412dfd:	xor    al,0x18
  412dff:	push   0x15e99bfc
  412e04:	adc    ebx,ecx
  412e06:	jl     0x412de6
  412e08:	push   ss
  412e09:	sub    ch,BYTE PTR [edi-0xf]
  412e0c:	ins    BYTE PTR es:[edi],dx
  412e0d:	shl    DWORD PTR [ebx],0x96
  412e10:	sbb    DWORD PTR [eax],ebp
  412e12:	(bad)  
  412e13:	pop    ecx
  412e14:	sbb    al,0x88
  412e16:	and    BYTE PTR gs:[ecx+0x16],bl
  412e1a:	sbb    edx,DWORD PTR [edx]
  412e1c:	test   bl,ah
  412e1e:	sbb    al,0x48
  412e20:	sti    
  412e21:	mov    dh,0xeb
  412e23:	into   
  412e24:	arpl   WORD PTR [edx],bp
  412e26:	add    eax,0x6eaead35
  412e2b:	(bad)  
  412e2d:	inc    edi
  412e2e:	rol    DWORD PTR [edx+0x3d],1
  412e31:	adc    eax,0x6970f30a
  412e36:	out    0x41,al
  412e38:	lods   eax,DWORD PTR ds:[esi]
  412e39:	(bad)  
  412e3a:	loop   0x412e92
  412e3c:	mov    al,ds:0xa231d536
  412e41:	fiadd  WORD PTR [eax+ecx*1-0x7e]
  412e45:	push   ss
  412e46:	mov    ecx,0x2fff6655
  412e4b:	mov    ebx,edi
  412e4d:	mov    al,ds:0x538e60fa
  412e52:	(bad)  
  412e53:	call   0x7ddb:0x167eaec4
  412e5a:	stc    
  412e5b:	pop    ecx
  412e5c:	cs jo  0x412e6b
  412e5f:	scas   eax,DWORD PTR es:[edi]
  412e60:	cmp    ecx,DWORD PTR [ecx-0x4f]
  412e63:	aas    
  412e64:	mov    ecx,esp
  412e66:	bound  edx,QWORD PTR fs:[edi+ebp*1+0x21]
  412e6b:	xchg   BYTE PTR [eax-0x67],cl
  412e6e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e70:	mov    edi,0xcb8a72f
  412e75:	dec    ebp
  412e76:	sub    dl,BYTE PTR [ecx+eiz*1]
  412e79:	fmul   st,st(0)
  412e7b:	xchg   BYTE PTR [esi],ah
  412e7d:	jno    0x412e2f
  412e7f:	jg     0x412eea
  412e81:	push   ecx
  412e82:	(bad)  
  412e83:	fidivr DWORD PTR [ebx-0x6cfd30a8]
  412e89:	stos   BYTE PTR es:[edi],al
  412e8a:	loope  0x412e8b
  412e8c:	xchg   cl,dl
  412e8e:	jno    0x412e1a
  412e90:	out    dx,eax
  412e91:	adc    edx,ecx
  412e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e94:	add    BYTE PTR [ebx+0x5a9c7d66],ah
  412e9a:	imul   ebp
  412e9c:	push   0xbcdaf96c
  412ea1:	and    BYTE PTR [edx-0x24f758d7],bh
  412ea7:	jmp    edi
  412ea9:	dec    eax
  412eaa:	cmp    eax,DWORD PTR [eax-0x7d22a933]
  412eb0:	push   ds
  412eb1:	pop    edi
  412eb2:	xchg   ebx,eax
  412eb3:	pop    esi
  412eb4:	outs   dx,BYTE PTR ds:[esi]
  412eb5:	inc    edx
  412eb6:	jge    0x412e38
  412eb8:	sub    eax,0x76d1d0bf
  412ebd:	jl     0x412e96
  412ebf:	push   0x77
  412ec1:	stos   BYTE PTR es:[edi],al
  412ec2:	dec    eax
  412ec3:	jnp    0x412eb0
  412ec5:	jne    0x412e65
  412ec7:	xchg   ecx,eax
  412ec8:	cmp    dl,ch
  412eca:	(bad)  
  412ecb:	mov    ecx,0xfdb22cae
  412ed0:	jmp    0x412e6d
  412ed2:	sbb    eax,0x183a742b
  412ed7:	ins    DWORD PTR es:[edi],dx
  412ed8:	mov    ah,0x19
  412eda:	outs   dx,DWORD PTR ds:[esi]
  412edb:	push   ebp
  412edc:	imul   edx,DWORD PTR [edx+0x18],0xffffffc7
  412ee0:	(bad)  [edi+edx*4-0x56]
  412ee4:	test   ah,al
  412ee6:	jg     0x412f0f
  412ee8:	mov    al,ds:0x3d2dfe6d
  412eed:	fist   WORD PTR [edx]
  412eef:	mov    ds:0x27dda84a,al
  412ef4:	push   eax
  412ef5:	and    al,0x93
  412ef7:	adc    eax,0xdadb929f
  412efc:	clc    
  412efd:	sub    eax,0x8ced3486
  412f02:	xchg   ebp,eax
  412f03:	out    0x55,eax
  412f05:	xchg   ebx,eax
  412f06:	imul   edi,DWORD PTR [edx],0xf1a7d915
  412f0c:	and    eax,0xef95195b
  412f11:	inc    ebp
  412f12:	es aad 0x6a
  412f15:	dec    ebx
  412f16:	push   es
  412f17:	lods   al,BYTE PTR ds:[esi]
  412f18:	mov    ecx,0xf4a52b14
  412f1d:	fnstsw WORD PTR [ecx]
  412f1f:	xchg   ebp,eax
  412f20:	jne    0x412ea5
  412f22:	mov    cs,ecx
  412f24:	fs fimul WORD PTR fs:[ebp+0x7c93d2c0]
  412f2c:	jbe    0x412f51
  412f2e:	or     al,0x91
  412f30:	sub    cl,BYTE PTR [ebx]
  412f32:	cld    
  412f33:	sub    DWORD PTR [ecx],esp
  412f35:	sbb    eax,0x6c11316b
  412f3a:	or     al,0xd9
  412f3c:	sbb    DWORD PTR [eax-0x48],edi
  412f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f40:	push   eax
  412f41:	pop    edi
  412f42:	adc    DWORD PTR [ebx+ebx*8],esi
  412f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f46:	cmp    DWORD PTR [edi+0x9],eax
  412f49:	loop   0x412f1e
  412f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f4c:	xchg   edi,eax
  412f4d:	add    ecx,eax
  412f4f:	jle    0x412ede
  412f51:	imul   bl
  412f53:	sub    ah,ah
  412f55:	pop    ecx
  412f56:	dec    esi
  412f57:	scas   eax,DWORD PTR es:[edi]
  412f58:	fldz   
  412f5a:	(bad)  
  412f5b:	cmp    BYTE PTR [esp+edx*1+0x1],dl
  412f5f:	or     edi,DWORD PTR [edi-0x2f7423ad]
  412f65:	xor    al,ch
  412f67:	out    0xe5,al
  412f69:	jle    0x412f8d
  412f6b:	(bad)  
  412f6c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f6e:	rcr    BYTE PTR [edx-0x7048480c],0x92
  412f75:	lock dec esp
  412f77:	(bad)  
  412f78:	in     eax,dx
  412f79:	push   ebp
  412f7a:	or     al,0x73
  412f7c:	pop    esi
  412f7d:	or     DWORD PTR [eax+0x4],ebx
  412f80:	cmp    edi,0xbb32b254
  412f86:	inc    eax
  412f87:	pop    ecx
  412f88:	cmp    DWORD PTR [esi+0x39],0xffffffc4
  412f8c:	scas   eax,DWORD PTR es:[edi]
  412f8d:	in     eax,dx
  412f8e:	jmp    0x30684f72
  412f93:	cwde   
  412f94:	nop
  412f95:	rol    BYTE PTR [ebx],1
  412f97:	jmp    0x412f82
  412f99:	cmp    cl,BYTE PTR [ebx]
  412f9b:	adc    al,0xb0
  412f9d:	xchg   ecx,eax
  412f9e:	adc    ebx,DWORD PTR [eax+eax*8]
  412fa1:	and    ebx,DWORD PTR [esp+ebx*2]
  412fa4:	stos   DWORD PTR es:[edi],eax
  412fa5:	push   ds
  412fa6:	mov    ds:0x69845507,eax
  412fab:	xor    DWORD PTR [ebp-0x23],edi
  412fae:	lea    edi,[ebx-0x1bb81ef8]
  412fb4:	test   ebx,ebx
  412fb6:	js     0x412ff5
  412fb8:	mov    eax,ds:0xf54cb46e
  412fbd:	js     0x412fc8
  412fbf:	inc    edi
  412fc0:	add    ch,BYTE PTR [esi-0x50]
  412fc3:	jle    0x413020
  412fc5:	cmp    eax,0x2089d401
  412fca:	mov    ebx,0x35e9b3e1
  412fcf:	leave  
  412fd0:	mov    dl,0xf7
  412fd2:	jne    0x412fdc
  412fd4:	or     cl,dl
  412fd6:	call   0x8ed370e7
  412fdb:	enter  0xd3a8,0xbb
  412fdf:	xor    al,0xb0
  412fe1:	int    0x80
  412fe3:	cmc    
  412fe4:	adc    eax,0x7e8deb9e
  412fe9:	push   ebp
  412fea:	xchg   esi,eax
  412feb:	sub    DWORD PTR [ebx],edi
  412fed:	dec    esi
  412fee:	jmp    0x413009
  412ff0:	xor    bh,bl
  412ff2:	add    BYTE PTR [edx+0x781ad2f3],0x5a
  412ff9:	pusha  
  412ffa:	in     al,dx
  412ffb:	jns    0x412fd3
  412ffd:	(bad)  
  412ffe:	arpl   di,di
  413000:	inc    esi
  413001:	push   ss
  413002:	retf   0x5149
  413005:	in     al,dx
  413006:	xor    al,0x70
  413008:	mov    ah,0x72
  41300a:	jns    0x413048
  41300c:	mov    al,ds:0x2aa84c7b
  413011:	neg    ah
  413013:	mov    es,WORD PTR [edi+0x4df9f1f8]
  413019:	enter  0x75d6,0x6a
  41301d:	mov    ebx,ecx
  41301f:	xchg   ebx,eax
  413020:	and    al,0xa4
  413022:	dec    eax
  413023:	pop    eax
  413024:	outs   dx,BYTE PTR ds:[esi]
  413025:	arpl   cx,di
  413027:	mov    BYTE PTR [ebx-0x80],ah
  41302a:	mov    bl,0xc6
  41302c:	loop   0x413040
  41302e:	in     eax,dx
  41302f:	inc    esi
  413030:	int    0x7
  413032:	xchg   DWORD PTR [edx-0x7],esp
  413035:	pop    ss
  413036:	xor    bl,BYTE PTR [ebp-0x1e]
  413039:	icebp  
  41303a:	jle    0x41304d
  41303c:	xchg   DWORD PTR [ebp-0x47],eax
  41303f:	sub    dl,BYTE PTR [edx-0x70]
  413042:	mov    bl,0x24
  413044:	leave  
  413045:	ror    DWORD PTR [ebx],0x6f
  413048:	ficomp DWORD PTR [esi]
  41304a:	in     eax,0xcf
  41304c:	xor    eax,0xdccd10fc
  413051:	cmp    al,0xcb
  413053:	rcr    DWORD PTR [edi],0x16
  413056:	dec    edx
  413057:	jg     0x413099
  413059:	dec    ebx
  41305a:	xchg   ebx,eax
  41305b:	mov    bh,dh
  41305d:	and    DWORD PTR [ebp-0x30],0xbb01d574
  413064:	push   0x92fbf6cf
  413069:	xchg   esp,eax
  41306a:	or     DWORD PTR [eax],eax
  41306c:	cld    
  41306d:	std    
  41306e:	fwait
  41306f:	jb     0x413085
  413071:	cmc    
  413072:	imul   edx,DWORD PTR [ebp+0x42],0x480c212e
  413079:	pop    esi
  41307a:	add    bl,BYTE PTR [esi+0x0]
  41307d:	mov    eax,0xb321e1c8
  413082:	jnp    0x413028
  413084:	xchg   ebx,eax
  413085:	adc    dl,dh
  413087:	mov    WORD PTR [ebp-0x379dc12e],fs
  41308d:	out    dx,eax
  41308e:	ins    DWORD PTR es:[edi],dx
  41308f:	xchg   ebp,eax
  413090:	push   es
  413091:	add    eax,ebp
  413093:	inc    edi
  413094:	(bad)  
  413095:	pop    ss
  413096:	loope  0x4130a8
  413098:	fcom   QWORD PTR [ecx]
  41309a:	div    dh
  41309c:	or     eax,0x62ea94fa
  4130a1:	pop    esp
  4130a2:	int    0x3b
  4130a4:	dec    esi
  4130a5:	jecxz  0x4130ee
  4130a7:	push   ebp
  4130a8:	pushf  
  4130a9:	push   eax
  4130aa:	xchg   BYTE PTR [esi-0x1100981a],ah
  4130b0:	and    BYTE PTR [edi+0x48d16dc8],0x7a
  4130b7:	xor    ebp,ebp
  4130b9:	(bad)  
  4130ba:	push   ds
  4130bb:	lods   al,BYTE PTR ds:[si]
  4130bd:	sbb    al,0x72
  4130bf:	inc    ebp
  4130c0:	jp     0x413081
  4130c2:	test   DWORD PTR [esi+0x42e76b05],0x42f0b5a1
  4130cc:	fadd   QWORD PTR [eax]
  4130ce:	xchg   BYTE PTR [ecx-0x6f4378b],al
  4130d4:	mov    dh,0xcd
  4130d6:	test   bl,bl
  4130d8:	dec    eax
  4130d9:	jb     0x41315a
  4130db:	fwait
  4130dc:	js     0x41307d
  4130de:	dec    esp
  4130df:	push   ebp
  4130e0:	and    ebp,DWORD PTR [ecx-0x35e594d]
  4130e6:	push   esi
  4130e7:	jnp    0x41307e
  4130e9:	push   0xffffffac
  4130eb:	xchg   edx,eax
  4130ec:	stos   DWORD PTR es:[edi],eax
  4130ed:	push   cs
  4130ee:	and    BYTE PTR [ecx],0xa8
  4130f1:	mov    ebp,0x1a7824ff
  4130f6:	add    dl,dl
  4130f8:	fcmovb st,st(0)
  4130fa:	jmp    0xe17c:0xa9ebeb26
  413101:	hlt    
  413102:	hlt    
  413103:	js     0x413176
  413105:	cli    
  413106:	test   DWORD PTR ds:0x23e93675,esi
  41310c:	(bad)
  413110:	fisub  WORD PTR [edi-0x23]
  413113:	jg     0x4130de
  413115:	cmp    eax,0x3acffaaa
  41311a:	pusha  
  41311b:	(bad)  
  41311c:	ja     0x41318e
  41311e:	add    edx,DWORD PTR [edi-0x1d]
  413121:	sti    
  413122:	sub    eax,0xd0de5fc3
  413127:	les    ebp,FWORD PTR [ebp+0x7c]
  41312a:	sahf   
  41312b:	ds inc esi
  41312d:	adc    bh,BYTE PTR [esp+esi*1-0x46]
  413131:	push   esp
  413132:	aaa    
  413133:	pop    esi
  413134:	out    dx,al
  413135:	aas    
  413136:	pop    ebx
  413137:	mov    dl,0x58
  413139:	in     al,dx
  41313a:	jl     0x41314e
  41313c:	push   ecx
  41313d:	fcom   QWORD PTR [eax]
  41313f:	jge    0x4130cd
  413141:	clc    
  413142:	leave  
  413143:	das    
  413144:	(bad)  
  413145:	test   DWORD PTR [ebx+0x79],0xb9039a3b
  41314c:	sub    al,0x2e
  41314e:	xor    eax,0xf4a64422
  413153:	pop    esp
  413154:	icebp  
  413155:	xor    BYTE PTR [ebp-0x4a],ah
  413158:	out    dx,al
  413159:	cld    
  41315a:	ja     0x4130f2
  41315c:	in     eax,0xb2
  41315e:	lods   al,BYTE PTR ds:[esi]
  41315f:	and    ah,bl
  413161:	jns    0x413187
  413163:	popa   
  413164:	pusha  
  413165:	arpl   sp,dx
  413167:	xor    BYTE PTR [ecx+edi*2-0x68],ch
  41316b:	jne    0x413136
  41316d:	sbb    eax,DWORD PTR [esi+edx*1-0x3e79d026]
  413174:	sub    eax,0x49cda1a0
  413179:	inc    ebx
  41317a:	fsubr  st(1),st
  41317c:	pop    eax
  41317d:	pop    esp
  41317e:	and    eax,0x88afbb36
  413183:	sbb    edx,DWORD PTR es:[edi-0x3b79f09c]
  41318a:	aam    0xa0
  41318c:	dec    eax
  41318d:	sub    bl,dh
  41318f:	lods   al,BYTE PTR ds:[esi]
  413190:	lods   al,BYTE PTR ds:[esi]
  413191:	adc    DWORD PTR [ecx-0x3b],0xffffffa5
  413195:	sbb    dl,BYTE PTR [ebx-0x27]
  413198:	test   DWORD PTR [edx-0x42a3d614],0xeab43f38
  4131a2:	xchg   esi,eax
  4131a3:	add    BYTE PTR [ebp+0x476c4029],0xef
  4131aa:	sub    BYTE PTR [ecx+edx*1],dh
  4131ad:	xor    ecx,DWORD PTR [ebx+0x62b0b1dd]
  4131b3:	jb     0x413147
  4131b5:	push   ecx
  4131b6:	fimul  DWORD PTR [ebp+0x25]
  4131b9:	and    eax,DWORD PTR [ecx]
  4131bb:	or     BYTE PTR [ebp-0x57],ah
  4131be:	push   ebp
  4131bf:	bts    DWORD PTR [eax],0xaa
  4131c3:	mov    esi,0xaa1b0f28
  4131c8:	fnsave [ecx]
  4131ca:	call   esp
  4131cc:	add    al,0x42
  4131ce:	aas    
  4131cf:	dec    ebp
  4131d0:	xchg   esi,eax
  4131d1:	adc    edi,ebx
  4131d3:	cmp    al,0xe3
  4131d5:	mov    ds:0x93d37505,eax
  4131da:	inc    esi
  4131db:	add    BYTE PTR [ecx+edx*1-0x5fe4b388],ah
  4131e2:	adc    ebx,DWORD PTR [edx]
  4131e4:	dec    esp
  4131e5:	lock jmp 0x50b:0x10fdfd5f
  4131ed:	add    BYTE PTR [edx-0x10],ah
  4131f0:	jmp    DWORD PTR [eax+esi*8+0x63]
  4131f4:	sub    eax,0x29834e96
  4131f9:	loop   0x41320d
  4131fb:	inc    ebx
  4131fc:	popa   
  4131fd:	pop    edx
  4131fe:	mov    edi,0x368614c2
  413203:	xchg   esi,eax
  413204:	push   esp
  413205:	in     al,dx
  413206:	cdq    
  413207:	imul   ebx,DWORD PTR [ecx+0x20],0x17
  41320b:	or     eax,0x841167ba
  413210:	inc    edx
  413211:	out    dx,al
  413212:	jl     0x4131b6
  413214:	cmp    al,0x2d
  413216:	sub    eax,0x1ca710b5
  41321b:	in     al,dx
  41321c:	(bad)  
  41321d:	ja     0x413205
  41321f:	das    
  413220:	call   0x1b9b5dc2
  413225:	cmp    eax,0x99fb5b0e
  41322a:	xor    al,0xdf
  41322c:	scas   eax,DWORD PTR es:[edi]
  41322d:	arpl   WORD PTR gs:[ecx-0x1b2b0316],bx
  413234:	fdivr  st(1),st
  413236:	mov    edi,DWORD PTR [ecx]
  413238:	pop    esi
  413239:	repnz lock sbb bh,ah
  41323d:	(bad)
  413240:	loop   0x413285
  413242:	and    eax,DWORD PTR [esi+0x9997774]
  413248:	iret   
  413249:	(bad)  
  41324b:	hlt    
  41324c:	push   ebx
  41324d:	sar    DWORD PTR [ebp-0x77912f04],0x26
  413254:	mov    ebx,ebx
  413256:	and    BYTE PTR [esi-0x5b],ch
  413259:	fs jns 0x4132ab
  41325c:	lahf   
  41325d:	stc    
  41325e:	sub    ah,BYTE PTR [edi+0x13d4f358]
  413264:	and    eax,0xf2acd9ad
  413269:	mov    ah,0x90
  41326b:	cld    
  41326c:	jns    0x41320f
  41326e:	(bad)  
  41326f:	dec    ebp
  413270:	std    
  413271:	xchg   esi,eax
  413272:	xor    DWORD PTR [ebx+0x46],ebx
  413275:	cmp    al,0xd1
  413277:	das    
  413278:	sub    ch,BYTE PTR [ebp+eax*4+0x3db888ac]
  41327f:	push   ecx
  413280:	icebp  
  413281:	imul   eax,DWORD PTR [edi],0xffffffa4
  413284:	push   0x988aa578
  413289:	sahf   
  41328a:	jp     0x4132a7
  41328c:	dec    edx
  41328d:	stc    
  41328e:	test   eax,0x306da418
  413293:	scas   eax,DWORD PTR es:[edi]
  413294:	jmp    0x413291
  413296:	jg     0x413243
  413298:	mov    eax,ds:0xc39b516a
  41329d:	inc    ebx
  41329e:	adc    eax,0x2e67adc9
  4132a3:	sub    BYTE PTR [ebx],0xbb
  4132a6:	idiv   BYTE PTR [ebx+0x6c]
  4132a9:	pop    ebx
  4132aa:	loopne 0x41329f
  4132ac:	xchg   ecx,eax
  4132ad:	cmp    ah,ah
  4132af:	mov    ah,0xa9
  4132b1:	aas    
  4132b2:	mov    BYTE PTR [edx-0x3],dh
  4132b5:	dec    edx
  4132b6:	mov    bl,0x57
  4132b8:	outs   dx,BYTE PTR ds:[esi]
  4132b9:	sub    dl,BYTE PTR [edx+0x74]
  4132bc:	(bad)  
  4132be:	retf   0xd727
  4132c1:	dec    edx
  4132c2:	inc    ebp
  4132c3:	out    dx,eax
  4132c4:	(bad)  
  4132c5:	fdivr  st(5),st
  4132c7:	aad    0xa0
  4132c9:	cdq    
  4132ca:	out    dx,eax
  4132cb:	add    bh,BYTE PTR [ecx-0x62]
  4132ce:	fidiv  WORD PTR [ebx]
  4132d0:	ror    BYTE PTR [ecx-0x41],0xcc
  4132d4:	mov    dl,0x47
  4132d6:	push   cs
  4132d7:	sbb    DWORD PTR [esi+0x7f],ebx
  4132da:	ss push 0xbde2f649
  4132e0:	pop    eax
  4132e1:	pop    esi
  4132e2:	loop   0x4132f2
  4132e4:	xor    eax,0xcd424c92
  4132e9:	xchg   edi,eax
  4132ea:	xor    BYTE PTR [ebp+0x7ca9c78a],0xb6
  4132f1:	aaa    
  4132f2:	dec    ecx
  4132f3:	push   ecx
  4132f4:	sub    edi,DWORD PTR [eax-0x5b]
  4132f7:	cmp    DWORD PTR [edx+0x72],edx
  4132fa:	or     dh,BYTE PTR [eax]
  4132fc:	es je  0x413308
  4132ff:	mov    esp,0x43e41c2
  413304:	xchg   DWORD PTR [ecx-0x30b40be9],esp
  41330a:	aaa    
  41330b:	in     eax,0xd4
  41330d:	xor    cl,bh
  41330f:	pop    ecx
  413310:	mov    ah,0xaa
  413312:	bound  ebp,QWORD PTR [esi+0x11c76901]
  413318:	mov    ah,0xd7
  41331a:	nop
  41331b:	jge    0x4132ad
  41331d:	mov    al,ds:0x90041f1
  413322:	sbb    DWORD PTR [eax],edi
  413324:	out    dx,al
  413325:	ror    DWORD PTR [ecx+0x26],cl
  413328:	scas   eax,DWORD PTR es:[edi]
  413329:	sub    edx,DWORD PTR [ecx+0x4cf7da3b]
  41332f:	es push ss
  413331:	(bad)  
  413333:	ja     0x4132d2
  413335:	mov    al,0x4
  413337:	inc    eax
  413338:	or     edi,edi
  41333a:	mov    DWORD PTR [ecx-0x26608152],edi
  413340:	dec    esp
  413341:	or     eax,0xf3cb2a2d
  413346:	in     eax,0xb3
  413348:	in     eax,dx
  413349:	mul    ch
  41334b:	test   DWORD PTR [ebp+0x1698f729],ecx
  413351:	jecxz  0x413345
  413353:	pop    ss
  413354:	push   0xffffff90
  413356:	push   0x28d0c2cb
  41335b:	mov    ecx,0x847dfd40
  413360:	outs   dx,DWORD PTR ds:[esi]
  413361:	seto   ah
  413364:	adc    eax,0x25aabd70
  413369:	fadd   DWORD PTR [ecx-0x138f7326]
  41336f:	test   al,0x2c
  413371:	sub    eax,0x242cc916
  413376:	jp     0x41331a
  413378:	mov    ds:0x8314f343,al
  41337d:	std    
  41337e:	scas   eax,DWORD PTR es:[edi]
  41337f:	mov    ebp,0xffd4c933
  413384:	ret    
  413385:	mov    edi,0x74581a18
  41338a:	jnp    0x413374
  41338c:	test   eax,0x77e3b6ff
  413391:	out    0x32,eax
  413393:	je     0x41340e
  413395:	jb     0x413358
  413397:	loopne 0x413402
  413399:	xor    ebp,DWORD PTR [esp+edi*4+0x1a431393]
  4133a0:	pop    ss
  4133a1:	stos   BYTE PTR es:[edi],al
  4133a2:	adc    DWORD PTR [edx+0x2c],edi
  4133a5:	push   0x5110dc24
  4133aa:	jb     0x4133fe
  4133ac:	adc    bl,BYTE PTR ds:0x7866e1b2
  4133b2:	xor    edi,DWORD PTR [edx]
  4133b4:	mov    ah,0x6d
  4133b6:	pushf  
  4133b7:	leave  
  4133b8:	sahf   
  4133b9:	push   edi
  4133ba:	xchg   ebp,eax
  4133bb:	mov    ebx,DWORD PTR ds:0xd2e75205
  4133c1:	sub    ah,BYTE PTR [ebx+0xb]
  4133c4:	sub    DWORD PTR [eax],edi
  4133c6:	ret    0xf790
  4133c9:	and    al,BYTE PTR ds:[ebp+eax*1+0x52]
  4133ce:	lea    esp,[eax-0x7b8046c6]
  4133d4:	sub    dl,BYTE PTR [ebp+0x2a713a58]
  4133da:	sbb    al,0x70
  4133dc:	mov    dh,0xd8
  4133de:	dec    eax
  4133df:	push   DWORD PTR [eax+0x15e388a8]
  4133e5:	pushf  
  4133e6:	cld    
  4133e7:	push   esp
  4133e9:	fbld   TBYTE PTR [ebx-0x9]
  4133ec:	hlt    
  4133ed:	icebp  
  4133ee:	test   al,0x6a
  4133f0:	repnz out 0xc7,al
  4133f3:	fs dec esi
  4133f5:	and    ebp,DWORD PTR [eax+0x3b]
  4133f8:	jp     0x413415
  4133fa:	call   0x3a30:0x6dea5259
  413401:	enter  0x870d,0x6a
  413405:	cmp    BYTE PTR [esi],dh
  413407:	lock lahf 
  413409:	pop    ecx
  41340a:	or     DWORD PTR [ecx-0x4e7de9b9],esi
  413410:	sbb    ch,BYTE PTR ds:0x19512251
  413416:	jecxz  0x413436
  413418:	daa    
  413419:	inc    eax
  41341a:	ins    BYTE PTR es:[edi],dx
  41341b:	add    ecx,DWORD PTR [edx+0x3d9f5ada]
  413421:	cmp    eax,0x4e9a6291
  413426:	loope  0x413433
  413428:	mov    ch,0xc3
  41342a:	xchg   DWORD PTR [ecx],esp
  41342c:	adc    dh,BYTE PTR [eiz*8+0x41699668]
  413433:	mov    cl,0xa8
  413435:	mov    ebp,DWORD PTR [ebx+0x72]
  413438:	push   esi
  413439:	and    esp,esi
  41343b:	inc    esi
  41343c:	cwde   
  41343d:	call   0xb6ecc62f
  413442:	gs clc 
  413444:	add    eax,esp
  413446:	(bad)  
  413447:	lods   eax,DWORD PTR ds:[esi]
  413448:	inc    sp
  41344a:	sbb    eax,0x7fc79464
  41344f:	arpl   WORD PTR [edi-0x75],bx
  413452:	jp     0x413482
  413454:	mov    edx,0xbcb21f66
  413459:	cmp    eax,ebp
  41345b:	(bad)  
  41345c:	sbb    ah,BYTE PTR [ebp+0x33bcb7a]
  413462:	rcr    DWORD PTR [edi],1
  413464:	and    ecx,edi
  413466:	rcl    DWORD PTR [ebp-0x2c675fb1],0x40
  41346d:	popf   
  41346e:	inc    ecx
  41346f:	lds    eax,FWORD PTR [edi]
  413471:	out    dx,al
  413472:	mov    ds,edi
  413474:	xor    al,0x23
  413476:	or     ah,BYTE PTR [eax+ebp*1+0x5bb42cd0]
  41347d:	xchg   ebx,eax
  41347e:	or     eax,0xfaacfa0d
  413483:	push   ecx
  413484:	retf   
  413485:	pop    esp
  413486:	mov    eax,ds:0x3a983b1a
  41348b:	lahf   
  41348c:	cmc    
  41348d:	repnz daa 
  41348f:	xchg   ecx,eax
  413490:	sub    cl,cl
  413492:	mov    ah,dh
  413494:	gs stos BYTE PTR es:[edi],al
  413496:	mov    ss,WORD PTR [edi+0x25]
  413499:	dec    ebx
  41349a:	clc    
  41349b:	stos   DWORD PTR es:[edi],eax
  41349c:	arpl   WORD PTR [ebx+ebp*2-0x4a],si
  4134a0:	dec    edx
  4134a1:	loop   0x413436
  4134a3:	pushf  
  4134a4:	inc    eax
  4134a5:	mov    cl,0xf2
  4134a7:	inc    ecx
  4134a8:	adc    DWORD PTR [ecx],esp
  4134aa:	add    al,0x22
  4134ac:	mov    ch,BYTE PTR [esi]
  4134ae:	and    BYTE PTR [ebx-0x5d],ch
  4134b1:	jno    0x413527
  4134b3:	stos   DWORD PTR es:[edi],eax
  4134b4:	stos   DWORD PTR es:[edi],eax
  4134b5:	xchg   ebp,eax
  4134b6:	out    0x32,eax
  4134b8:	sbb    bl,BYTE PTR es:[edx+0x566ebce3]
  4134bf:	pushf  
  4134c0:	push   0xb183319e
  4134c5:	xor    eax,0x4f599ae6
  4134ca:	call   0x51c6d16e
  4134cf:	cld    
  4134d0:	inc    edx
  4134d1:	xor    bl,BYTE PTR [ebp-0x3e8ab810]
  4134d7:	stos   DWORD PTR es:[edi],eax
  4134d8:	or     DWORD PTR [ebx+0x66f92a6c],ebp
  4134de:	test   al,0x49
  4134e0:	mov    ch,0xab
  4134e2:	mov    bh,0xa
  4134e4:	ret    0x866a
  4134e7:	and    BYTE PTR [edx-0x7955cab2],dl
  4134ed:	in     al,0x3
  4134ef:	mov    eax,0xaed6a24e
  4134f4:	inc    edx
  4134f5:	mov    esi,0x9897d9b3
  4134fa:	scas   al,BYTE PTR es:[edi]
  4134fb:	fcom   st(6)
  4134fd:	in     eax,0xc7
  4134ff:	(bad)  
  413500:	sbb    BYTE PTR [esi+0x69],dl
  413503:	or     esp,DWORD PTR [esi+edi*1+0x784b4ffa]
  41350a:	mov    edx,0xc4a2a76c
  41350f:	sub    DWORD PTR [esi+0xa432f68],ecx
  413515:	inc    eax
  413516:	jo     0x413517
  413518:	mov    eax,0xbcd7e1e3
  41351d:	sbb    BYTE PTR [esi],al
  41351f:	mov    bh,BYTE PTR [edi]
  413521:	adc    BYTE PTR [edi],dl
  413523:	outs   dx,DWORD PTR ds:[esi]
  413524:	stc    
  413525:	aas    
  413526:	pop    edx
  413527:	loope  0x4134fe
  413529:	fwait
  41352a:	xlat   BYTE PTR ds:[ebx]
  41352b:	pop    ss
  41352c:	stos   BYTE PTR es:[edi],al
  41352d:	mov    ebp,0xd2bab728
  413532:	scas   al,BYTE PTR es:[edi]
  413533:	fnsetpm(287 only) 
  413535:	pop    ebx
  413536:	dec    ebp
  413537:	mov    ch,0x38
  413539:	adc    DWORD PTR [ecx+0x6799569f],esp
  41353f:	hlt    
  413540:	and    al,0x40
  413542:	xor    BYTE PTR [eax-0x5a7a5b40],dl
  413548:	cmp    eax,0x453e358c
  41354d:	mov    ds:0xcd293519,eax
  413552:	jbe    0x413512
  413554:	int    0x18
  413556:	xchg   edi,eax
  413557:	pop    edx
  413558:	adc    ecx,DWORD PTR [eax+eiz*4-0x66]
  41355c:	push   ebp
  41355d:	cli    
  41355e:	xchg   edi,edx
  413560:	adc    BYTE PTR [edi+0x3b4d63f9],ch
  413566:	jo     0x413511
  413568:	leave  
  413569:	cwde   
  41356a:	jp     0x4134fa
  41356c:	sub    ecx,DWORD PTR [edi+0x336c45a9]
  413572:	fprem  
  413574:	fstsw  WORD PTR [ecx-0x174dfb78]
  41357b:	outs   dx,DWORD PTR ds:[esi]
  41357c:	sub    eax,0x14a8f138
  413581:	daa    
  413582:	cmp    BYTE PTR [edi],cl
  413584:	test   al,0x35
  413586:	cmp    DWORD PTR ds:[ebx+0x778dff05],edx
  41358d:	bound  edi,QWORD PTR [edx]
  41358f:	es ret 0x3b28
  413593:	in     eax,0x32
  413595:	push   ss
  413596:	dec    esi
  413597:	push   ebp
  413598:	dec    ebp
  413599:	pop    esp
  41359a:	loopne 0x4135f4
  41359c:	dec    esi
  41359d:	addr16 adc eax,0xa59eb6d6
  4135a3:	push   cs
  4135a4:	and    edi,DWORD PTR [ebx]
  4135a6:	sti    
  4135a7:	push   esp
  4135a8:	mov    dh,BYTE PTR [edi]
  4135aa:	inc    ebx
  4135ab:	dec    eax
  4135ac:	mov    esp,0x9d24b7a4
  4135b1:	inc    esp
  4135b2:	inc    edx
  4135b3:	(bad)  
  4135b4:	(bad)  
  4135b5:	fisub  DWORD PTR [ecx-0x42]
  4135b8:	dec    eax
  4135b9:	cmp    cl,al
  4135bb:	mul    BYTE PTR [esi]
  4135bd:	mov    edx,0xf1ebc4fc
  4135c2:	rcl    DWORD PTR [ebx],1
  4135c4:	cmp    DWORD PTR [edx],ebx
  4135c6:	ret    
  4135c7:	and    eax,0x9d030d50
  4135cc:	aad    0x37
  4135ce:	jl     0x4135b6
  4135d0:	inc    edi
  4135d1:	data16 fwait
  4135d3:	cmc    
  4135d4:	imul   ecx,DWORD PTR [ebp+0x755e09e7],0xffffff93
  4135db:	ss push ebp
  4135dd:	and    ah,BYTE PTR [eax+0x55]
  4135e0:	fdivr  QWORD PTR [ebx+0x56]
  4135e3:	ret    0x57cd
  4135e6:	mov    ch,0x41
  4135e8:	mov    al,ds:0x591a8a66
  4135ed:	mov    cl,0x7f
  4135ef:	shl    bh,0x9a
  4135f2:	jg     0x4135c2
  4135f4:	jbe    0x41361c
  4135f6:	icebp  
  4135f7:	out    dx,eax
  4135f8:	repnz cmp DWORD PTR [esi+0x44],ebp
  4135fc:	push   es
  4135fd:	retf   0x2271
  413600:	bound  esi,QWORD PTR gs:[eax]
  413603:	jbe    0x413674
  413605:	aaa    
  413606:	xor    ebp,ebp
  413608:	mov    ecx,DWORD PTR [edi]
  41360a:	mov    ds:0xb23bcf68,eax
  41360f:	jb     0x4135ac
  413611:	lods   eax,DWORD PTR ds:[esi]
  413612:	sub    DWORD PTR [eax],esi
  413614:	cmp    DWORD PTR [eax],0xf
  413617:	ins    BYTE PTR es:[edi],dx
  413618:	lods   al,BYTE PTR ds:[esi]
  413619:	repz jae 0x413612
  41361c:	push   ebp
  41361d:	or     eax,0x4beb7fc6
  413622:	mov    edx,0xd0705eee
  413627:	(bad)  
  413628:	outs   dx,DWORD PTR ds:[esi]
  413629:	inc    ebx
  41362a:	inc    esi
  41362b:	xchg   edi,eax
  41362c:	push   ecx
  41362d:	dec    ecx
  41362e:	mov    dh,0x84
  413630:	xchg   edx,eax
  413631:	dec    ebp
  413632:	fisub  WORD PTR [ebp-0x76]
  413635:	and    edi,DWORD PTR [esi+0x738e7a6c]
  41363b:	jnp    0x41363b
  41363d:	fimul  WORD PTR [ecx-0x1f]
  413640:	test   eax,0x16db53f1
  413645:	or     dh,BYTE PTR [eax+0x24]
  413648:	clc    
  413649:	sti    
  41364a:	mov    al,0xfa
  41364c:	and    DWORD PTR [edx-0x1f271da5],esi
  413652:	out    dx,al
  413653:	and    al,0xe0
  413655:	popa   
  413656:	ja     0x41366e
  413658:	out    0x15,eax
  41365a:	jle    0x413624
  41365c:	outs   dx,BYTE PTR ds:[esi]
  41365d:	stc    
  41365e:	mov    BYTE PTR [edx-0x73],bh
  413661:	mov    al,ds:0x90048773
  413666:	jl     0x4136a7
  413668:	inc    esi
  413669:	sbb    al,0x7b
  41366b:	sbb    bl,BYTE PTR [esi]
  41366d:	mov    edx,ebx
  41366f:	lahf   
  413670:	mov    bh,0xbb
  413672:	call   0xf2799f23
  413677:	push   cs
  413678:	jl     0x41365a
  41367a:	ds mov edi,0xbcbe8bc2
  413680:	and    esi,ebx
  413682:	rcl    DWORD PTR [eax-0x4b17cf9f],1
  413688:	sbb    bl,dl
  41368a:	cdq    
  41368b:	pop    ss
  41368c:	sbb    al,0x1d
  41368e:	test   BYTE PTR [eax-0x1a],bl
  413691:	outs   dx,BYTE PTR ds:[esi]
  413692:	popf   
  413693:	jp     0x413649
  413695:	pop    es
  413696:	add    al,0xe8
  413698:	dec    ebp
  413699:	or     dl,BYTE PTR [edx-0x1f7f7d06]
  41369f:	in     eax,dx
  4136a0:	inc    edi
  4136a1:	clc    
  4136a2:	jns    0x413634
  4136a4:	stos   DWORD PTR es:[edi],eax
  4136a5:	or     dh,BYTE PTR [ebx]
  4136a7:	in     al,0x37
  4136a9:	mov    ah,0x6f
  4136ab:	push   eax
  4136ac:	push   esi
  4136ad:	lea    eax,[edi]
  4136af:	sbb    bl,al
  4136b1:	xor    bl,bl
  4136b3:	mov    WORD PTR [edi-0xd],cs
  4136b6:	push   cs
  4136b7:	mov    ebp,0x8d6fc435
  4136bc:	dec    esi
  4136bd:	mov    cl,dh
  4136bf:	pushf  
  4136c0:	inc    ebp
  4136c1:	cmp    edi,eax
  4136c3:	icebp  
  4136c4:	pop    ss
  4136c5:	test   ebp,ebx
  4136c7:	push   dx
  4136c9:	loopne 0x41365a
  4136cb:	mov    eax,0x87b4b367
  4136d0:	add    cl,BYTE PTR [edx+edi*2]
  4136d3:	std    
  4136d4:	stos   DWORD PTR es:[edi],eax
  4136d5:	mov    edi,0x382b3bb5
  4136da:	sar    BYTE PTR [esp+ebp*2],0x7f
  4136de:	outs   dx,BYTE PTR ds:[esi]
  4136df:	push   ebp
  4136e0:	pusha  
  4136e1:	mov    ch,0x99
  4136e3:	sbb    DWORD PTR [edx-0x2440359a],ecx
  4136e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136ea:	jmp    0x4136c5
  4136ec:	sub    al,0x2
  4136ee:	sbb    al,0x22
  4136f0:	jne    0x413720
  4136f2:	mov    cl,0x1
  4136f4:	mov    dl,0x7f
  4136f6:	icebp  
  4136f7:	mov    esp,0x7a33b8da
  4136fc:	mov    ah,0xd1
  4136fe:	mov    ecx,0x73e910e
  413703:	(bad)
  413707:	add    BYTE PTR [ebp+0x16a31a5e],al
  41370d:	fwait
  41370e:	(bad)  
  41370f:	push   ebp
  413710:	and    al,0xca
  413712:	sbb    bl,BYTE PTR [edx-0x6c]
  413715:	and    eax,0x3fbbc5d7
  41371a:	mov    cl,0x90
  41371c:	(bad)  
  41371d:	xlat   BYTE PTR ds:[ebx]
  41371e:	dec    ebx
  41371f:	and    eax,0x3d9ed944
  413724:	call   FWORD PTR [ebx+ebx*2]
  413727:	inc    edi
  413728:	pop    ecx
  413729:	or     bh,BYTE PTR [ebx+0x70200f6]
  41372f:	mov    bh,0x73
  413731:	scas   al,BYTE PTR es:[edi]
  413732:	outs   dx,DWORD PTR ds:[esi]
  413733:	xor    al,0x2
  413735:	mov    cl,0x8f
  413737:	push   ebp
  413738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413739:	lods   eax,DWORD PTR ds:[esi]
  41373a:	dec    ecx
  41373b:	sahf   
  41373c:	aad    0x1b
  41373e:	test   BYTE PTR [edx],ah
  413740:	neg    BYTE PTR [esi-0x4dfbc9c4]
  413746:	pop    ecx
  413747:	pop    ss
  413748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413749:	or     ch,BYTE PTR [edx-0x1b]
  41374c:	out    dx,al
  41374d:	xchg   DWORD PTR [ecx],esp
  41374f:	pop    eax
  413750:	stos   DWORD PTR es:[edi],eax
  413751:	ins    BYTE PTR es:[edi],dx
  413752:	inc    edi
  413753:	(bad)  [ebp+0x2cee5757]
  413759:	pop    edi
  41375a:	int3   
  41375b:	rol    BYTE PTR [esi],cl
  41375d:	jnp    0x4136e4
  41375f:	lods   al,BYTE PTR ds:[esi]
  413760:	test   BYTE PTR [edx+0x74],bh
  413763:	sub    eax,0x9a93c857
  413768:	shl    esi,1
  41376a:	xor    eax,0x9b52cf77
  41376f:	cli    
  413770:	mov    esp,0x943d79a0
  413775:	scas   al,BYTE PTR es:[edi]
  413776:	stos   DWORD PTR es:[edi],eax
  413777:	cmp    DWORD PTR [bp+si-0x4],esp
  41377c:	clc    
  41377d:	int3   
  41377e:	(bad)
  413781:	cmp    DWORD PTR [ebp-0x35],esi
  413784:	pop    ebx
  413785:	sbb    DWORD PTR [esi-0x6c39ccb2],ebx
  41378b:	outs   dx,DWORD PTR ds:[esi]
  41378c:	sbb    al,BYTE PTR [ecx+0x28b9fa34]
  413792:	mov    ebp,0x85fa9a15
  413797:	xor    dl,dh
  413799:	jg     0x413782
  41379b:	(bad)
  41379e:	mov    esi,esp
  4137a0:	mov    al,ds:0xb9dba6a1
  4137a5:	stos   BYTE PTR es:[edi],al
  4137a6:	cmc    
  4137a7:	std    
  4137a8:	rol    DWORD PTR [ecx],0xd6
  4137ab:	cmc    
  4137ac:	js     0x413812
  4137ae:	jmp    ecx
  4137b0:	inc    edx
  4137b1:	jl     0x4137ab
  4137b3:	call   0x871a:0x2b070222
  4137ba:	stos   DWORD PTR es:[edi],eax
  4137bb:	mov    bl,0x20
  4137bd:	or     DWORD PTR [bp-0x5e],edx
  4137c1:	mov    esi,0xb75ffded
  4137c6:	and    DWORD PTR [eax+0x69],edx
  4137c9:	mov    ecx,0x85d99da4
  4137ce:	jmp    0xee28:0x6bb39682
  4137d5:	(bad)  
  4137d6:	int    0xeb
  4137d8:	push   ds
  4137d9:	popa   
  4137da:	dec    esi
  4137db:	loopne 0x4137c4
  4137dd:	neg    ah
  4137df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137e0:	test   al,0x68
  4137e2:	rol    DWORD PTR [ecx+0x64],cl
  4137e5:	stc    
  4137e6:	call   0xac56:0x8f1d680a
  4137ed:	mov    bl,0x66
  4137ef:	push   ds
  4137f0:	int3   
  4137f1:	icebp  
  4137f2:	mov    edx,0x93071cf2
  4137f7:	pop    ss
  4137f8:	retf   
  4137f9:	pop    esp
  4137fa:	call   0xf52c46b0
  4137ff:	push   edi
  413800:	lahf   
  413801:	clc    
  413802:	add    bl,BYTE PTR [esi-0x68]
  413805:	mov    DWORD PTR [ebp+0x13],0x4dd7220e
  41380c:	stos   DWORD PTR es:[edi],eax
  41380d:	push   ecx
  41380e:	cmc    
  41380f:	mov    al,ds:0x146e2ee
  413814:	adc    BYTE PTR [ebp+0x379682e4],dh
  41381a:	or     edi,esp
  41381c:	push   cs
  41381d:	aaa    
  41381e:	pop    ds
  41381f:	in     al,dx
  413820:	fadd   QWORD PTR [esi-0x2f]
  413823:	mov    ebx,0x6b538f08
  413828:	adc    DWORD PTR [edx-0x51],0xfcbadbd9
  41382f:	int3   
  413830:	cmp    eax,0xf8dc2999
  413835:	push   edi
  413836:	(bad)  
  413837:	(bad)  
  413838:	or     al,BYTE PTR [edx]
  41383a:	mov    al,bl
  41383c:	pushf  
  41383d:	xchg   edi,eax
  41383e:	inc    ebx
  41383f:	scas   eax,DWORD PTR es:[edi]
  413840:	push   esi
  413841:	push   ebx
  413842:	ins    DWORD PTR es:[edi],dx
  413843:	dec    ebx
  413844:	cdq    
  413845:	sbb    BYTE PTR [ebp-0x3615739f],ah
  41384b:	xchg   ebp,eax
  41384c:	mov    esi,0xd59e0daf
  413851:	pop    eax
  413852:	iret   
  413853:	repz xchg ecx,eax
  413855:	mov    ebp,esp
  413857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413858:	pop    ebp
  413859:	cdq    
  41385a:	cld    
  41385b:	inc    esp
  41385c:	icebp  
  41385d:	imul   esp,DWORD PTR [edi-0x161ff653],0xffffffc4
  413864:	push   0xa70272ab
  413869:	pop    ebp
  41386a:	dec    ebx
  41386b:	jecxz  0x41383f
  41386d:	cmp    BYTE PTR [ebp-0x6b],bh
  413870:	out    dx,eax
  413871:	push   0xd973968
  413876:	push   ss
  413877:	imul   esi,DWORD PTR [ecx-0x1e9b0722],0x61
  41387e:	mov    esp,0x6cf61527
  413883:	cmp    eax,0x422b9ceb
  413888:	or     eax,0x5760d88c
  41388d:	sub    edi,DWORD PTR [edx-0x6429639d]
  413893:	lahf   
  413894:	sahf   
  413895:	(bad)  
  413896:	pop    eax
  413897:	jmp    0x4138d1
  413899:	mov    ch,0x55
  41389b:	or     DWORD PTR [ebx-0x48],esp
  41389e:	cld    
  41389f:	je     0x41389e
  4138a1:	and    BYTE PTR [eax+0x17f50c98],ch
  4138a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138a8:	xor    BYTE PTR [eax-0x3d],0x76
  4138ac:	rcl    BYTE PTR [edi-0x5],cl
  4138af:	mov    al,0xc9
  4138b1:	jmp    0x2575:0xeac2b904
  4138b8:	(bad)  
  4138b9:	ror    BYTE PTR ds:0x5c9006d4,0xe
  4138c0:	imul   eax,DWORD PTR [edi-0x127dc8f9],0x5f
  4138c7:	loope  0x413878
  4138c9:	jmp    0x5244:0xb4b7a0c4
  4138d0:	fbld   TBYTE PTR [ecx-0x15]
  4138d3:	(bad)  
  4138d4:	push   esi
  4138d5:	mov    ebx,0xb9bc3cc4
  4138da:	loop   0x413880
  4138dc:	inc    ebp
  4138dd:	inc    esp
  4138de:	mov    bh,dl
  4138e0:	cli    
  4138e1:	shl    DWORD PTR [ebp-0x25],cl
  4138e4:	add    al,0x98
  4138e6:	lea    ecx,[esi]
  4138e8:	loop   0x41387f
  4138ea:	leave  
  4138eb:	adc    al,0x44
  4138ed:	dec    esp
  4138ee:	mov    esi,0x9716636f
  4138f3:	int    0x10
  4138f5:	mov    esp,DWORD PTR [esi]
  4138f7:	jge    0x4138f0
  4138f9:	push   edi
  4138fa:	icebp  
  4138fb:	pushf  
  4138fc:	dec    eax
  4138fd:	mov    ah,0x36
  4138ff:	mov    al,0x11
  413901:	sbb    al,0x59
  413903:	xchg   ebx,eax
  413904:	xor    DWORD PTR [ebp+0x4],eax
  413907:	rcr    DWORD PTR [edi],1
  413909:	call   0x59fa:0x189c8500
  413910:	mov    esi,0x3263afe1
  413915:	jge    0x413915
  413917:	push   es
  413918:	into   
  413919:	xchg   esi,eax
  41391a:	test   al,0xf1
  41391c:	fld    TBYTE PTR [esi-0x6cf48f85]
  413922:	popa   
  413923:	inc    ecx
  413924:	xor    al,0xae
  413926:	xchg   esp,eax
  413927:	adc    dl,BYTE PTR [esi+0x794cf8d9]
  41392d:	cdq    
  41392e:	inc    edx
  41392f:	(bad)  
  413930:	in     eax,0xe1
  413932:	sbb    BYTE PTR [edx],bh
  413934:	and    edx,DWORD PTR [ebp-0x3da96e6f]
  41393a:	or     dl,dl
  41393c:	sar    DWORD PTR [edi+0x527f6020],0x95
  413943:	pushf  
  413944:	sub    BYTE PTR [edi-0x369f8e7c],ah
  41394a:	xor    bl,ch
  41394c:	jg     0x413909
  41394e:	inc    esp
  41394f:	sbb    BYTE PTR [ecx+0x25cb5779],ah
  413955:	mov    ch,0x14
  413957:	daa    
  413958:	or     DWORD PTR [esi-0x2ef76fca],ebx
  41395e:	jl     0x4138f8
  413960:	gs cdq 
  413962:	aas    
  413963:	popa   
  413964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413965:	push   edx
  413966:	sahf   
  413967:	aas    
  413968:	adc    eax,0x94685b4d
  41396d:	xlat   BYTE PTR ds:[ebx]
  41396e:	mov    ?,WORD PTR [ebp-0x70097b84]
  413974:	mov    al,0xee
  413976:	lods   eax,DWORD PTR ds:[esi]
  413977:	mov    ebp,esp
  413979:	fst    QWORD PTR [edx+eiz*2]
  41397c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41397d:	mov    ds:0xb1a30c76,al
  413982:	ins    DWORD PTR es:[edi],dx
  413983:	mov    bl,0xa2
  413985:	cs and eax,0xf33ca433
  41398b:	int3   
  41398c:	sbb    ebp,DWORD PTR [esi+0x16527b9e]
  413992:	sbb    ch,BYTE PTR [ebp-0x45]
  413995:	ret    0xf271
  413998:	in     al,dx
  413999:	or     dl,0x3
  41399c:	and    al,0x27
  41399e:	jl     0x4139c7
  4139a0:	fnstcw WORD PTR ds:0x78c3ecf3
  4139a6:	jno    0x413972
  4139a8:	scas   eax,DWORD PTR es:[edi]
  4139a9:	pop    esi
  4139aa:	scas   eax,DWORD PTR es:[edi]
  4139ab:	xor    BYTE PTR [ecx],cl
  4139ad:	cmp    BYTE PTR [esi+0x372e85fa],dh
  4139b3:	cmp    al,0x8a
  4139b5:	mov    ah,BYTE PTR [esi-0x1f3a98ff]
  4139bb:	(bad)  
  4139bd:	(bad)  
  4139be:	je     0x413a1c
  4139c0:	lock adc ah,dl
  4139c3:	pushf  
  4139c4:	cli    
  4139c5:	mov    ds:0xdaf21124,al
  4139ca:	pop    ss
  4139cb:	les    esp,FWORD PTR [esi]
  4139cd:	inc    ecx
  4139ce:	cld    
  4139cf:	cwde   
  4139d0:	retf   0xdf88
  4139d3:	or     al,BYTE PTR [edi]
  4139d5:	in     eax,dx
  4139d6:	je     0x413a17
  4139d8:	xor    eax,0x3967e9c5
  4139dd:	or     edx,esp
  4139df:	fistp  DWORD PTR [ebp-0x2d76ee2e]
  4139e5:	into   
  4139e6:	in     al,dx
  4139e7:	sub    eax,0x7d36935a
  4139ec:	out    dx,eax
  4139ed:	pop    ss
  4139ee:	imul   ebx,ebp,0xd3ee7267
  4139f4:	int3   
  4139f5:	fbld   TBYTE PTR [ebx+0x76]
  4139f8:	dec    edx
  4139f9:	jg     0x4139c0
  4139fb:	or     edi,ebp
  4139fd:	lock repz test ecx,esi
  413a01:	xor    al,cl
  413a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a04:	adc    BYTE PTR [ecx+0x12b39bc0],0x2a
  413a0b:	inc    eax
  413a0c:	(bad)  [ecx+0x3ac8d9bb]
  413a12:	dec    eax
  413a13:	je     0x413a5e
  413a15:	mov    bl,0x8d
  413a17:	js     0x413a89
  413a19:	mov    WORD PTR [edi+0x5cc76def],fs
  413a1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a20:	push   esp
  413a21:	push   0xe4b21702
  413a26:	or     ebp,DWORD PTR [eax]
  413a28:	add    eax,DWORD PTR ds:0x4f7ddab1
  413a2e:	sti    
  413a2f:	sbb    ah,al
  413a31:	into   
  413a32:	mov    cl,0x21
  413a34:	sbb    esp,ecx
  413a36:	rcl    BYTE PTR [eax-0x77],1
  413a39:	(bad)  [edi+0x14]
  413a3c:	mov    ebp,0xea8d656a
  413a41:	cmc    
  413a42:	cmp    esp,DWORD PTR [ebx+edi*8]
  413a45:	in     eax,0xe
  413a47:	das    
  413a48:	sbb    eax,0xc4f5fbf5
  413a4d:	dec    esp
  413a4e:	sbb    al,BYTE PTR [ebx]
  413a50:	push   ebp
  413a51:	mov    al,ds:0x439fdbcd
  413a56:	pop    esi
  413a57:	(bad)  
  413a58:	sub    dh,BYTE PTR [eax]
  413a5a:	or     eax,DWORD PTR [eax]
  413a5c:	fwait
  413a5d:	int3   
  413a5e:	sti    
  413a5f:	test   DWORD PTR [edi],eax
  413a61:	js     0x413ab2
  413a63:	pop    esp
  413a64:	test   al,0xcc
  413a66:	add    DWORD PTR [edi+0x31],0x257ee7f8
  413a6d:	mov    cl,0x58
  413a6f:	retf   0x15d
  413a72:	xor    al,0x4a
  413a74:	ret    
  413a75:	in     al,0x18
  413a77:	or     BYTE PTR [ebx+0x2e],dl
  413a7a:	mov    edi,0xf60cfcd0
  413a7f:	(bad)  
  413a80:	dec    ebx
  413a81:	test   DWORD PTR [esi],0x87d091ca
  413a87:	ja     0x413a74
  413a89:	and    ch,dl
  413a8b:	ret    0x8c86
  413a8e:	jp     0x413a86
  413a90:	je     0x413af1
  413a92:	fld    QWORD PTR [esi+0x98b38a5]
  413a98:	inc    ebx
  413a99:	jp     0x413a84
  413a9b:	xor    al,0x69
  413a9d:	enter  0x8fab,0x92
  413aa1:	lods   al,BYTE PTR ds:[esi]
  413aa2:	sbb    cl,bh
  413aa4:	mov    edi,0x24f0b067
  413aa9:	cmp    eax,0x1fe45f3b
  413aae:	mov    cs,WORD PTR ds:0xcd0b1d77
  413ab4:	dec    esi
  413ab5:	pop    ss
  413ab6:	jne    0x413ae3
  413ab8:	push   ebp
  413ab9:	gs inc esp
  413abb:	mov    bh,0x7a
  413abd:	mov    ebp,0x4ec9c30f
  413ac2:	fmul   st,st(0)
  413ac4:	out    dx,eax
  413ac5:	lods   eax,DWORD PTR ds:[esi]
  413ac6:	pop    es
  413ac7:	out    0xb7,al
  413ac9:	test   al,0x1e
  413acb:	inc    esi
  413acc:	mov    ebp,0xf544b4d
  413ad1:	mov    eax,0x9d83adc4
  413ad6:	retf   
  413ad7:	sahf   
  413ad8:	aas    
  413ad9:	repz jge 0x413b16
  413adc:	jns    0x413a7b
  413ade:	push   ss
  413adf:	mov    DWORD PTR ds:0xf999ea93,edx
  413ae5:	(bad)  
  413ae6:	adc    bl,ch
  413ae8:	test   DWORD PTR [eax+ebx*4-0x42],0x189eafe7
  413af0:	(bad)  
  413af1:	imul   edx,ebx,0x5e88316d
  413af7:	jge    0x413ae5
  413af9:	jo     0x413b1d
  413afb:	mov    edi,0x4492dce8
  413b00:	mov    BYTE PTR [edi+esi*2+0x75],ah
  413b04:	inc    ebx
  413b05:	jmp    0x155f:0xbe6f5abb
  413b0c:	or     al,0x60
  413b0e:	mov    ebp,DWORD PTR [ebx]
  413b10:	imul   esi,DWORD PTR [edx-0xf],0xb65fe624
  413b17:	imul   ecx,DWORD PTR [ebx],0xd8c9b52c
  413b1d:	or     eax,0x22748a55
  413b22:	xchg   BYTE PTR [ecx],ah
  413b24:	sub    edx,DWORD PTR [ebp-0x138e438]
  413b2a:	pop    ecx
  413b2b:	mov    dl,BYTE PTR [edi+ebx*4]
  413b2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b2f:	or     DWORD PTR [esi],0xee0a5514
  413b35:	xchg   esi,eax
  413b36:	fnstcw WORD PTR [esi]
  413b38:	mov    eax,ds:0x1974f3c5
  413b3d:	rol    DWORD PTR [esi],0xe2
  413b40:	push   es
  413b41:	shl    BYTE PTR [edx-0x56],0xb6
  413b45:	sbb    bh,ch
  413b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b48:	mov    ds:0x707133b4,eax
  413b4d:	shr    BYTE PTR [edi+0x7c],0xce
  413b51:	loop   0x413b04
  413b53:	mov    ch,0x1b
  413b55:	std    
  413b56:	lea    eax,[edx]
  413b58:	pop    ebp
  413b59:	xchg   esi,eax
  413b5a:	loop   0x413b84
  413b5c:	pop    edx
  413b5d:	fsubr  QWORD PTR [ebp-0x39]
  413b60:	sbb    DWORD PTR [edi+esi*8-0xe4732c7],eax
  413b67:	inc    esi
  413b68:	fld    DWORD PTR [esi+esi*4+0x589406ef]
  413b6f:	in     al,dx
  413b70:	ror    ecx,cl
  413b72:	dec    esi
  413b73:	sbb    ah,cl
  413b75:	and    eax,0x435d5d16
  413b7a:	jno    0x413b29
  413b7c:	stos   BYTE PTR es:[edi],al
  413b7d:	add    DWORD PTR [eax],edx
  413b7f:	add    dl,BYTE PTR [esp+eax*1]
  413b82:	cmp    al,0x13
  413b84:	repz mov esp,esp
  413b87:	aam    0x86
  413b89:	and    ebp,DWORD PTR [ecx+0xd9a67ed]
  413b8f:	push   esp
  413b90:	push   edi
  413b91:	sar    BYTE PTR [edi-0x50],1
  413b94:	(bad)  [eax]
  413b96:	dec    edi
  413b97:	in     al,0xbe
  413b99:	jmp    0x694f71f9
  413b9e:	jecxz  0x413b7f
  413ba0:	pushf  
  413ba1:	dec    ebx
  413ba2:	shl    DWORD PTR [edi-0x5f833ac],cl
  413ba8:	inc    ebp
  413ba9:	sbb    al,0x50
  413bab:	cli    
  413bac:	add    al,0x81
  413bae:	retf   0x86ed
  413bb1:	push   0x4c051781
  413bb6:	push   ecx
  413bb7:	mov    al,ds:0x98d9f1e9
  413bbc:	pop    ecx
  413bbd:	and    edx,esp
  413bbf:	inc    esi
  413bc0:	mov    edx,0x40cae89d
  413bc5:	and    bl,BYTE PTR [ebx+0x3ded505e]
  413bcb:	or     cl,BYTE PTR [edi-0x6f]
  413bce:	aad    0x75
  413bd0:	cmp    al,0xe
  413bd2:	cs adc al,0xd7
  413bd5:	in     al,0x7d
  413bd7:	add    BYTE PTR [eax+0x6d],ah
  413bda:	popf   
  413bdb:	arpl   WORD PTR [edi-0x4e8c405c],bx
  413be1:	fsubr  QWORD PTR [edx-0x77fa19eb]
  413be7:	loope  0x413c58
  413be9:	lds    esp,FWORD PTR [ebp-0x5d]
  413bec:	cmp    bl,BYTE PTR [ecx]
  413bee:	fld    TBYTE PTR [eax+0x19]
  413bf1:	cmp    DWORD PTR [ecx+ebx*2+0x5d],esi
  413bf5:	xor    BYTE PTR [edi+0x107c39bd],cl
  413bfb:	pop    esp
  413bfc:	shl    BYTE PTR ds:0x8d380ddf,0x47
  413c03:	in     eax,dx
  413c04:	fcmovnu st,st(3)
  413c06:	xchg   esi,eax
  413c07:	jmp    0x413c22
  413c09:	mov    esi,0xfeee6b6
  413c0e:	cs jae 0x413bd0
  413c11:	inc    ecx
  413c12:	sub    bl,BYTE PTR ss:[esi-0x20f72039]
  413c19:	sahf   
  413c1a:	outs   dx,BYTE PTR ds:[esi]
  413c1b:	loope  0x413c35
  413c1d:	es pop ss
  413c1f:	push   ss
  413c20:	push   esi
  413c21:	popa   
  413c22:	pop    es
  413c23:	retf   0x22c5
  413c26:	adc    al,0xf8
  413c28:	cld    
  413c29:	mov    DWORD PTR ss:[ebx+0x25],edi
  413c2d:	push   edx
  413c2e:	stos   BYTE PTR es:[edi],al
  413c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c30:	mov    esp,eax
  413c32:	test   eax,0xb70bcdec
  413c37:	jmp    0x413ca4
  413c39:	xor    BYTE PTR [edi],bl
  413c3b:	repnz bound esp,QWORD PTR [ebx]
  413c3e:	adc    eax,0xa584ceff
  413c43:	mov    al,ds:0xef286492
  413c48:	out    0x8c,al
  413c4a:	sbb    eax,0x6b3f380d
  413c4f:	mov    ebx,0xc651f257
  413c54:	popf   
  413c55:	lock ret 
  413c57:	int    0xc5
  413c59:	jg     0x413c1f
  413c5b:	or     eax,0x83ff9dff
  413c60:	aaa    
  413c61:	push   ss
  413c62:	jle    0x413ce1
  413c64:	cmp    DWORD PTR [edi+0x32],ebx
  413c67:	test   DWORD PTR [edi+esi*8],esp
  413c6a:	mov    ecx,0x6e398f8c
  413c6f:	ds pop ebx
  413c71:	adc    BYTE PTR [ebx-0x3334f418],0xc0
  413c78:	aam    0x47
  413c7a:	or     esi,esp
  413c7c:	sub    BYTE PTR [esi],0xf4
  413c7f:	(bad)  
  413c80:	dec    eax
  413c81:	push   ecx
  413c82:	add    ch,BYTE PTR [ebx-0x28]
  413c85:	xchg   edi,eax
  413c86:	adc    eax,DWORD PTR [edi]
  413c88:	jnp    0x413c96
  413c8a:	xchg   DWORD PTR [esp+ebx*2+0x3d],ecx
  413c8e:	and    esi,edx
  413c90:	push   0xfd89e87
  413c95:	fbstp  TBYTE PTR [eax]
  413c97:	clc    
  413c98:	call   0x5854df88
  413c9d:	pop    es
  413c9e:	push   eax
  413c9f:	addr16 jns 0x413c96
  413ca2:	daa    
  413ca3:	in     al,0xb7
  413ca5:	hlt    
  413ca6:	outs   dx,BYTE PTR ds:[esi]
  413ca7:	pop    ebp
  413ca8:	lock out dx,eax
  413caa:	repnz inc ebx
  413cac:	or     BYTE PTR [edx],0x9d
  413caf:	ficomp WORD PTR [esi-0x19a3bf3a]
  413cb5:	add    eax,0xc7365c53
  413cba:	jmp    0xe42b:0x26035da7
  413cc1:	mov    eax,0xb03cd700
  413cc6:	push   edx
  413cc7:	outs   dx,BYTE PTR ds:[esi]
  413cc8:	mul    DWORD PTR [esi]
  413cca:	aad    0x16
  413ccc:	jl     0x413d36
  413cce:	mov    cl,0xf
  413cd0:	adc    eax,DWORD PTR [edi+0x7e148119]
  413cd6:	mov    ah,0x7c
  413cd8:	and    DWORD PTR [ebx],ebx
  413cda:	clc    
  413cdb:	and    al,0xbc
  413cdd:	outs   dx,BYTE PTR ds:[esi]
  413cde:	mov    ebp,DWORD PTR [eax]
  413ce0:	pusha  
  413ce1:	sub    al,0x1f
  413ce3:	jnp    0x413d27
  413ce5:	rol    BYTE PTR [edi+ecx*4-0x43],1
  413ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cea:	scas   al,BYTE PTR es:[edi]
  413ceb:	mov    BYTE PTR [edi],al
  413ced:	jnp    0x413cca
  413cef:	ret    0xa0e2
  413cf2:	arpl   WORD PTR [eax+esi*4-0x714047ad],bx
  413cf9:	idiv   ah
  413cfb:	les    eax,FWORD PTR [edx+0x54]
  413cfe:	push   es
  413cff:	cdq    
  413d00:	hlt    
  413d01:	int3   
  413d02:	mov    ah,0x73
  413d04:	xchg   edx,eax
  413d05:	into   
  413d06:	mov    bh,0x5e
  413d08:	inc    esp
  413d09:	pop    esi
  413d0a:	lods   eax,DWORD PTR ds:[esi]
  413d0b:	fist   WORD PTR [esi]
  413d0d:	retf   
  413d0e:	push   edx
  413d0f:	add    ch,bh
  413d11:	add    BYTE PTR [eax+0x4b],ch
  413d14:	sub    ebp,DWORD PTR [ebx]
  413d16:	xor    al,0xe8
  413d18:	mov    ds:0x2a7f81c3,eax
  413d1d:	aad    0x6
  413d1f:	cmp    BYTE PTR ds:0x35a14162,0xb
  413d26:	add    edx,esp
  413d28:	(bad)  
  413d2a:	leave  
  413d2b:	mov    edi,0x79b04b5a
  413d30:	mov    ecx,0xfbf94ae
  413d35:	mov    DWORD PTR [edx],ebp
  413d37:	or     eax,0xa9fcdd51
  413d3c:	xchg   edx,eax
  413d3d:	xor    bl,BYTE PTR [esi-0x51]
  413d40:	push   cs
  413d41:	scas   eax,DWORD PTR es:[edi]
  413d42:	add    DWORD PTR [ebp+edx*1-0x6316720e],esp
  413d49:	lods   eax,DWORD PTR ds:[esi]
  413d4a:	jbe    0x413d99
  413d4c:	cmp    BYTE PTR [esi],cl
  413d4e:	xchg   DWORD PTR [ebp+0x30],esp
  413d51:	data16 in al,0x4e
  413d54:	dec    esi
  413d55:	and    eax,0xe9ca8fea
  413d5a:	lahf   
  413d5b:	lock fdiv st(4),st
  413d5e:	jno    0x413d75
  413d60:	xchg   DWORD PTR [ebp-0x1d],esi
  413d63:	ss xchg ebx,eax
  413d65:	hlt    
  413d66:	out    dx,eax
  413d67:	add    ah,BYTE PTR [ecx+0x14003f8d]
  413d6d:	or     al,0x8d
  413d6f:	sar    BYTE PTR [ebp+0x3b],0x6d
  413d73:	sahf   
  413d74:	in     eax,dx
  413d75:	loope  0x413d9c
  413d77:	xchg   BYTE PTR [esp],dh
  413d7a:	das    
  413d7b:	dec    edx
  413d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d7d:	loopne 0x413d3b
  413d7f:	test   ebp,edx
  413d81:	mov    ds:0xbc4a6025,al
  413d86:	cdq    
  413d87:	pop    ss
  413d88:	fcom   st(6)
  413d8a:	fcmove st,st(2)
  413d8c:	or     DWORD PTR [ebx+0x6ecf5329],ecx
  413d92:	cmp    eax,0xf201eb8a
  413d97:	mov    eax,ds:0xa8b9c2b2
  413d9c:	push   edi
  413d9d:	sar    esp,1
  413d9f:	in     eax,dx
  413da0:	xchg   edx,eax
  413da1:	and    ch,BYTE PTR [eax+esi*1+0x5e]
  413da5:	ins    DWORD PTR es:[edi],dx
  413da6:	pop    edx
  413da7:	add    eax,0x582e8052
  413dac:	ss cld 
  413dae:	xor    eax,0xc96c61dd
  413db3:	push   es
  413db4:	in     eax,dx
  413db5:	dec    ecx
  413db6:	jmp    0x413dd9
  413db8:	xchg   esi,eax
  413db9:	cmp    al,0xa2
  413dbb:	push   ebx
  413dbc:	jns    0x413d63
  413dbe:	lds    esp,FWORD PTR [esi]
  413dc0:	pop    esi
  413dc1:	pushf  
  413dc2:	dec    ebp
  413dc3:	xor    al,0x79
  413dc5:	ja     0x413dff
  413dc7:	jmp    0x413d4c
  413dc9:	ds jno 0x413de0
  413dcc:	lahf   
  413dcd:	mov    dl,0x63
  413dcf:	mov    DWORD PTR [ebx],esi
  413dd1:	shl    ecx,0xb9
  413dd4:	and    ecx,DWORD PTR [ebx+ebx*8-0x2c]
  413dd8:	push   ebp
  413dd9:	pop    eax
  413dda:	sti    
  413ddb:	popf   
  413ddc:	push   ds
  413ddd:	sbb    eax,DWORD PTR [ebp+0x6e]
  413de0:	sub    BYTE PTR [esi+0x67],0x56
  413de4:	in     eax,0x7
  413de6:	sti    
  413de7:	sub    ebx,DWORD PTR [ebp-0x47]
  413dea:	ficomp WORD PTR [edx]
  413dec:	dec    edi
  413ded:	cwde   
  413dee:	adc    al,ah
  413df0:	daa    
  413df1:	mov    al,ds:0xcc5539a
  413df6:	in     al,dx
  413df7:	and    al,0x2
  413df9:	icebp  
  413dfa:	jmp    0x413daf
  413dfc:	outs   dx,DWORD PTR ds:[esi]
  413dfd:	mov    cl,BYTE PTR [ecx+edx*8-0x2c1e7333]
  413e04:	adc    DWORD PTR [esi+esi*8+0x67],0xffffffee
  413e09:	fs je  0x413de9
  413e0c:	jno    0x413d93
  413e0e:	daa    
  413e0f:	repz and edx,DWORD PTR [eax]
  413e12:	ret    0x7d27
  413e15:	sub    esi,ebp
  413e17:	out    dx,al
  413e18:	push   ss
  413e19:	call   0x2caf9f38
  413e1e:	push   edi
  413e1f:	cmp    DWORD PTR [eax-0x6bf1bb2b],eax
  413e25:	pop    ds
  413e26:	push   es
  413e27:	mov    edi,0xb1d50101
  413e2c:	jle    0x413e42
  413e2e:	test   DWORD PTR [ecx+0x49],esi
  413e31:	daa    
  413e32:	xchg   esi,eax
  413e33:	or     edx,edi
  413e35:	cmp    esi,edx
  413e37:	popa   
  413e38:	mov    cl,0xf
  413e3a:	stos   BYTE PTR es:[edi],al
  413e3b:	cld    
  413e3c:	ins    DWORD PTR es:[edi],dx
  413e3d:	cmp    eax,0x58670f4d
  413e42:	retf   
  413e43:	aam    0x6f
  413e45:	dec    esp
  413e46:	or     cl,bl
  413e48:	cmp    DWORD PTR [esi],edi
  413e4a:	cld    
  413e4b:	lea    ebx,[edx-0x744019ff]
  413e51:	mov    al,ds:0x1e234a7
  413e56:	add    edx,DWORD PTR [eax+0x5ab89e6c]
  413e5c:	in     eax,0x1b
  413e5e:	out    0x34,al
  413e60:	xchg   ebx,eax
  413e61:	jo     0x413eab
  413e63:	test   BYTE PTR [ebx+0x6a],ah
  413e66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e67:	sahf   
  413e68:	mov    al,ds:0xb9ca5d1b
  413e6d:	pop    esp
  413e6e:	or     al,0xc6
  413e70:	call   DWORD PTR [edx-0x673b3b3f]
  413e76:	scas   eax,DWORD PTR es:[edi]
  413e77:	fwait
  413e78:	jge    0x413ec5
  413e7a:	sub    DWORD PTR [ebx-0x39939f59],0xa50af8b2
  413e84:	shl    BYTE PTR [ebx],cl
  413e86:	push   ds
  413e87:	neg    BYTE PTR [ebx]
  413e89:	cmp    al,0x97
  413e8b:	and    ebx,DWORD PTR [esp+ecx*1-0x69]
  413e8f:	je     0x413e61
  413e91:	sahf   
  413e92:	add    eax,0xc53e1429
  413e97:	xchg   ebx,eax
  413e98:	inc    esp
  413e99:	adc    al,0x58
  413e9b:	sub    bl,dh
  413e9d:	lods   al,BYTE PTR ds:[esi]
  413e9e:	cwde   
  413e9f:	rcr    BYTE PTR ds:0x367b7406,0xd1
  413ea6:	(bad)  
  413ea7:	nop
  413ea8:	xchg   esi,eax
  413ea9:	pushf  
  413eaa:	ins    DWORD PTR es:[edi],dx
  413eab:	mov    DWORD PTR [edi+0x3ad076d5],edi
  413eb1:	cli    
  413eb2:	call   0xd3341d2
  413eb7:	inc    ebx
  413eb8:	ss shl ch,1
  413ebb:	or     DWORD PTR [edi],0xc3e9bc1e
  413ec1:	xchg   esp,eax
  413ec2:	mov    ah,ch
  413ec4:	retf   
  413ec5:	mov    ebx,esi
  413ec7:	imul   esp,esp,0x7d
  413eca:	fld    TBYTE PTR [eax-0x44]
  413ecd:	adc    bh,BYTE PTR [ebp-0x63]
  413ed0:	mov    DWORD PTR [edx+0x6980cee8],edx
  413ed6:	retf   
  413ed7:	out    dx,eax
  413ed8:	mov    ah,0xf7
  413eda:	iret   
  413edb:	xchg   edx,eax
  413edc:	div    BYTE PTR [ebx+edx*8]
  413edf:	jp     0x413ec8
  413ee1:	cmp    DWORD PTR [ecx+0x6ed759f0],eax
  413ee7:	inc    esi
  413ee8:	mov    WORD PTR [ecx+0x74a685fb],ds
  413eee:	in     eax,0xa1
  413ef0:	inc    esp
  413ef1:	add    DWORD PTR [ebp-0x65c7590],0xffffffd3
  413ef8:	cld    
  413ef9:	in     eax,0x6d
  413efb:	jb     0x413f49
  413efd:	jbe    0x413ed9
  413eff:	and    eax,0xa6ba78f4
  413f04:	test   al,0xb0
  413f06:	xor    eax,0xece3e5c4
  413f0b:	enter  0x293d,0xd1
  413f0f:	xchg   edx,eax
  413f10:	call   0x1f87ea60
  413f15:	fwait
  413f16:	jo     0x413f74
  413f18:	mov    eax,ds:0xdd3258a
  413f1d:	bsr    edx,DWORD PTR [eax]
  413f20:	lods   al,BYTE PTR ds:[esi]
  413f21:	fisttp DWORD PTR [ebx-0x3c2be110]
  413f27:	push   0x69
  413f29:	push   cs
  413f2a:	xchg   BYTE PTR ds:0x177f1f1f,bl
  413f30:	mov    ds:0x4f17bff4,eax
  413f35:	sbb    bl,BYTE PTR ds:[edx+0x78]
  413f39:	rol    ah,0xfa
  413f3c:	(bad)  
  413f3d:	pushf  
  413f3e:	rcl    al,0x71
  413f41:	test   al,0xec
  413f43:	std    
  413f44:	jg     0x413f69
  413f46:	test   BYTE PTR [edx-0x2633f8e4],al
  413f4c:	jmp    0x78f9321
  413f51:	pop    edx
  413f52:	lahf   
  413f53:	ins    BYTE PTR es:[edi],dx
  413f54:	outs   dx,BYTE PTR ds:[esi]
  413f55:	push   esp
  413f56:	loope  0x413f82
  413f58:	test   eax,esi
  413f5a:	sti    
  413f5b:	pop    ebp
  413f5c:	dec    edx
  413f5d:	and    al,BYTE PTR [ebp+0x39]
  413f60:	add    eax,0xa21a9f7c
  413f65:	adc    BYTE PTR [edi+0x476167e0],dl
  413f6b:	mov    al,0x6c
  413f6d:	push   edx
  413f6e:	jg     0x413f5d
  413f70:	stos   BYTE PTR es:[edi],al
  413f71:	fild   QWORD PTR [eax+0x61ae1bee]
  413f77:	xor    DWORD PTR [esi+0x5d594c25],ebx
  413f7d:	xlat   BYTE PTR ds:[ebx]
  413f7e:	cwde   
  413f7f:	in     al,0xcb
  413f81:	fs mov bh,0xbb
  413f84:	xchg   esp,eax
  413f85:	sub    eax,0xcef41170
  413f8a:	push   0x1
  413f8c:	retf   
  413f8d:	cmp    bh,BYTE PTR [ebx-0xc279f8a]
  413f93:	cs mov ebp,0xe7d83b83
  413f99:	inc    eax
  413f9a:	cmp    DWORD PTR [edx-0x61fbf97],0xfffffff3
  413fa1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fa3:	sbb    DWORD PTR [esi-0x24f2e81],eax
  413fa9:	hlt    
  413faa:	adc    BYTE PTR [ecx-0x21d7034],bl
  413fb0:	(bad)  
  413fb1:	push   ebp
  413fb2:	pop    ss
  413fb3:	in     al,dx
  413fb4:	adc    DWORD PTR [eax],esi
  413fb6:	rcl    DWORD PTR [ebx+0x35],1
  413fb9:	in     al,dx
  413fba:	loopne 0x413f47
  413fbc:	ret    
  413fbd:	xchg   ecx,eax
  413fbe:	mov    al,0x3e
  413fc0:	ror    DWORD PTR [ecx+0x52],1
  413fc3:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413fc5:	retf   
  413fc6:	inc    ebx
  413fc7:	rcl    cl,1
  413fc9:	xlat   BYTE PTR ds:[ebx]
  413fca:	cmp    esp,edx
  413fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fcd:	sub    eax,0xe5130713
  413fd2:	(bad)
  413fd5:	sahf   
  413fd6:	inc    ebx
  413fd7:	ror    BYTE PTR [ecx-0x6159ca22],cl
  413fdd:	and    edi,esi
  413fdf:	popf   
  413fe0:	imul   esp,DWORD PTR [eax+0x4a6b8600],0xddb6045c
  413fea:	pop    ebx
  413feb:	push   ebp
  413fec:	mov    dh,BYTE PTR [ebx-0xec563a6]
  413ff2:	push   edx
  413ff3:	dec    esi
  413ff4:	(bad)  
  413ff6:	pop    es
  413ff7:	push   cs
  413ff8:	inc    esp
  413ff9:	push   eax
  413ffa:	cmp    bh,al
  413ffc:	mov    BYTE PTR [eax],dl
  413ffe:	push   es
  413fff:	xor    DWORD PTR [ebx],ecx
  414001:	pusha  
  414002:	frstor [esi+0x648aed80]
  414008:	out    dx,eax
  414009:	lods   al,BYTE PTR ds:[esi]
  41400a:	adc    al,0xea
  41400c:	dec    edx
  41400d:	popa   
  41400e:	push   edx
  41400f:	popa   
  414010:	jo     0x413fc4
  414012:	xchg   esi,eax
  414013:	jle    0x413ffd
  414015:	cwde   
  414016:	pop    ecx
  414017:	mov    edi,0x394d1caf
  41401c:	stos   DWORD PTR es:[edi],eax
  41401d:	fdivp  st(7),st
  41401f:	ss push ss
  414021:	sbb    eax,DWORD PTR [edx-0x36]
  414024:	mov    BYTE PTR [ebp+0x74b1f233],al
  41402a:	mov    ?,WORD PTR [ebx]
  41402c:	mov    al,0xea
  41402e:	jb     0x4140a0
  414030:	add    BYTE PTR [ebx],ch
  414032:	ins    DWORD PTR es:[edi],dx
  414033:	cmc    
  414034:	sub    bl,bh
  414036:	push   0x3c1c3ec0
  41403b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41403c:	xor    dh,ch
  41403e:	adc    al,0x53
  414040:	push   0xffffffe3
  414042:	stc    
  414043:	nop
  414044:	rcl    DWORD PTR [esi-0x6e26d2d0],0x22
  41404b:	xchg   ecx,eax
  41404c:	mov    ds:0x11783552,eax
  414051:	cmp    BYTE PTR [esi+0x37],0xfe
  414055:	dec    edx
  414056:	jns    0x413ff5
  414058:	shr    dl,0x7c
  41405b:	push   eax
  41405c:	mov    edx,edi
  41405e:	xor    eax,0xd042c3f5
  414063:	cmp    dh,bl
  414065:	sbb    BYTE PTR [eax],0xd0
  414068:	adc    BYTE PTR [esi+0x30f492d8],bl
  41406e:	loopne 0x41407e
  414070:	adc    ch,BYTE PTR [eax+0x7e]
  414073:	imul   esp,DWORD PTR [ecx-0x4c],0xf717f602
  41407a:	xor    DWORD PTR [esi],edi
  41407c:	std    
  41407d:	inc    esp
  41407e:	mov    ch,0xdb
  414080:	in     eax,dx
  414081:	cmp    esi,ecx
  414083:	jle    0x4140f0
  414085:	les    edi,FWORD PTR [esi+ecx*8]
  414088:	rol    BYTE PTR [ebx-0x702ad6ac],0x19
  41408f:	adc    dh,BYTE PTR [ecx-0x6666dacc]
  414095:	mov    edx,0x4c35628b
  41409a:	idiv   DWORD PTR [eax-0x36]
  41409d:	mov    eax,0x3faa2a1a
  4140a2:	scas   al,BYTE PTR es:[edi]
  4140a3:	fld    st(3)
  4140a5:	inc    esi
  4140a6:	xchg   esp,eax
  4140a7:	idiv   BYTE PTR [edi-0x61]
  4140aa:	clc    
  4140ab:	mov    ebx,?
  4140ad:	fdiv   DWORD PTR [eax+0x7b1ea746]
  4140b3:	adc    DWORD PTR [eax],0xffffffce
  4140b6:	lock das 
  4140b8:	and    ah,al
  4140ba:	xchg   esp,eax
  4140bb:	icebp  
  4140bc:	cld    
  4140bd:	shl    DWORD PTR ds:0x896167f6,0x4a
  4140c4:	cdq    
  4140c5:	dec    esp
  4140c6:	data16 aad 0xb5
  4140c9:	pop    ss
  4140ca:	dec    esp
  4140cb:	and    ch,dh
  4140cd:	push   ecx
  4140ce:	fwait
  4140cf:	imul   ecx,edi,0xdff057b9
  4140d5:	je     0x414111
  4140d7:	out    0x4e,al
  4140d9:	inc    ebx
  4140da:	cmp    esi,DWORD PTR [ecx]
  4140dc:	pop    ecx
  4140dd:	or     edi,DWORD PTR [ebx+0x6a55cabf]
  4140e3:	and    al,0x66
  4140e5:	repz inc DWORD PTR [ebp-0x9]
  4140e9:	adc    al,0x79
  4140eb:	test   eax,0xa95aeeeb
  4140f0:	or     edx,DWORD PTR [ebx+ecx*1-0x614b20f6]
  4140f7:	xchg   ebx,eax
  4140f8:	call   0xac84edc2
  4140fd:	inc    ebx
  4140fe:	cld    
  4140ff:	or     bh,bh
  414101:	mov    ch,0x2a
  414103:	fld    st(6)
  414106:	clc    
  414107:	push   ebx
  414108:	cmp    bl,cl
  41410a:	dec    edx
  41410b:	pushf  
  41410c:	vpsrld ymm5,ymm2,XMMWORD PTR [ebp+0x170f81da]
  414114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414115:	dec    ebx
  414116:	aaa    
  414117:	bound  esi,QWORD PTR [ecx-0x6f]
  41411a:	ins    DWORD PTR es:[edi],dx
  41411b:	mov    esi,0x57924cb
  414120:	xor    DWORD PTR [ebx+0x1b],esp
  414123:	dec    ebp
  414124:	arpl   cx,ax
  414126:	pop    ecx
  414127:	mov    dl,BYTE PTR [esp+ecx*1]
  41412a:	icebp  
  41412b:	jb     0x4141a2
  41412d:	dec    esi
  41412e:	into   
  41412f:	push   ecx
  414130:	lahf   
  414131:	and    al,ah
  414133:	int3   
  414134:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414136:	sub    eax,0x62b78361
  41413b:	inc    esi
  41413c:	pop    es
  41413d:	and    al,dl
  41413f:	out    dx,eax
  414140:	xor    al,0x2d
  414142:	push   eax
  414143:	sub    BYTE PTR [ebp+eax*4+0xd15fe35],0xd9
  41414b:	mov    ch,0x6
  41414d:	shr    BYTE PTR [ebp+0x17c9f66f],cl
  414153:	leave  
  414154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414155:	and    al,0x1
  414157:	or     BYTE PTR ds:0xfe553567,0x13
  41415e:	and    al,0xaf
  414160:	xor    BYTE PTR [edx+ebp*2],cl
  414163:	pop    edi
  414164:	out    0x4,eax
  414166:	stc    
  414167:	aaa    
  414168:	pop    edx
  414169:	ja     0x414107
  41416b:	fwait
  41416c:	stc    
  41416d:	jne    0x414152
  41416f:	shl    BYTE PTR [ebx+edx*8],cl
  414172:	scas   eax,DWORD PTR es:[edi]
  414173:	jo     0x414130
  414175:	je     0x414183
  414177:	push   es
  414178:	push   edi
  414179:	jmp    0xcc5c5f98
  41417e:	lahf   
  41417f:	and    BYTE PTR [ebx+0x77a351c7],al
  414185:	sbb    esp,DWORD PTR [ebx]
  414187:	popf   
  414188:	push   ecx
  414189:	ins    BYTE PTR es:[edi],dx
  41418a:	fidivr DWORD PTR [esp+ecx*4+0x5e]
  41418e:	jno    0x414186
  414190:	ds dec esi
  414192:	sbb    DWORD PTR ds:0x7f9d133,eax
  414198:	and    BYTE PTR [ebx],0xd5
  41419b:	in     eax,dx
  41419c:	int3   
  41419d:	retf   
  41419e:	pop    ecx
  41419f:	call   0x156d66bc
  4141a4:	xor    BYTE PTR [edx],cl
  4141a6:	pop    ds
  4141a7:	jbe    0x4141b9
  4141a9:	mov    dl,0x1
  4141ab:	sbb    DWORD PTR [edi],edx
  4141ad:	add    DWORD PTR [ecx+0x647754b4],edx
  4141b3:	inc    ecx
  4141b4:	sub    ch,BYTE PTR [esi-0x797ed724]
  4141ba:	push   ecx
  4141bb:	mov    cl,BYTE PTR [ecx-0x6f]
  4141be:	mov    eax,0x9b86f469
  4141c3:	aad    0xb7
  4141c5:	xor    BYTE PTR [eiz*4-0x15d58ec3],al
  4141cc:	xor    BYTE PTR [ebx-0x5a2d2d07],0x73
  4141d3:	jo     0x4141f0
  4141d5:	push   esp
  4141d6:	call   0x4ffbccf6
  4141db:	(bad)  
  4141dc:	sub    dl,BYTE PTR [eax+eiz*1+0x6207c5de]
  4141e3:	push   eax
  4141e4:	enter  0xe870,0xca
  4141e8:	loop   0x41420c
  4141ea:	aas    
  4141eb:	and    DWORD PTR [eax+0xdbb8a8a],eax
  4141f1:	adc    eax,0xb64fcb36
  4141f6:	frstor [esi]
  4141f8:	icebp  
  4141f9:	mov    cl,BYTE PTR [esi-0x7d4d47d8]
  4141ff:	xchg   esp,eax
  414200:	sbb    ebp,DWORD PTR ds:0x2522b51d
  414206:	out    dx,al
  414207:	dec    ebp
  414208:	adc    eax,DWORD PTR [edx-0x24]
  41420b:	dec    ebp
  41420c:	fldcw  WORD PTR [esi]
  41420e:	mov    esp,0xa332c929
  414213:	mov    ss,WORD PTR [ebp+0x66ea6a91]
  414219:	cwde   
  41421a:	in     al,dx
  41421b:	ror    DWORD PTR [ebx+0x60],1
  41421e:	push   esi
  41421f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414220:	popa   
  414221:	test   eax,0xb5c3fd45
  414226:	cmp    eax,esp
  414228:	outs   dx,DWORD PTR ds:[esi]
  414229:	cmp    BYTE PTR [ebp-0x7b046fb1],al
  41422f:	push   edx
  414230:	call   0x1d43:0x8203dd3a
  414237:	retf   0xfd3a
  41423a:	shl    DWORD PTR [ebx+0x42],0xaf
  41423e:	mov    ebx,0x3f5bd630
  414243:	or     eax,0xb987ff5
  414248:	mov    ebp,0xc92220f6
  41424d:	scas   eax,DWORD PTR es:[edi]
  41424e:	test   al,0xc5
  414250:	push   edi
  414251:	adc    ah,BYTE PTR [ebx-0x614fb9bc]
  414257:	xor    BYTE PTR [eax+eax*8],0xd8
  41425b:	sub    BYTE PTR [esi+0x602a1fc1],0xe7
  414262:	push   ds
  414263:	jle    0x414229
  414265:	pushf  
  414266:	lahf   
  414267:	ror    DWORD PTR [edx-0x27],cl
  41426a:	xchg   esp,eax
  41426b:	push   ebx
  41426c:	daa    
  41426d:	std    
  41426e:	jecxz  0x41429b
  414270:	cwde   
  414271:	ja     0x4142d2
  414273:	lock aaa 
  414275:	jne    0x414201
  414277:	mov    al,ds:0x9875bd54
  41427c:	push   ss
  41427d:	xor    bl,cl
  41427f:	std    
  414280:	aam    0x1d
  414282:	lods   eax,DWORD PTR ds:[esi]
  414283:	data16 mov cl,0xea
  414286:	pop    ss
  414287:	cmp    al,0xbf
  414289:	jns    0x414252
  41428b:	adc    cl,BYTE PTR [ebx+0xc]
  41428e:	std    
  41428f:	dec    edi
  414290:	fdivr  QWORD PTR [ebp+edx*8-0x3deb72d9]
  414297:	outs   dx,DWORD PTR ds:[esi]
  414298:	hlt    
  414299:	dec    edx
  41429a:	sar    BYTE PTR [edx],0xa2
  41429d:	test   eax,0xe1faeb66
  4142a2:	dec    edx
  4142a3:	inc    ebx
  4142a4:	test   eax,0x5e49d01a
  4142a9:	pop    ebp
  4142aa:	loope  0x4142e4
  4142ac:	pop    esi
  4142ad:	(bad)  
  4142ae:	or     cl,BYTE PTR ds:0x4204f0e5
  4142b4:	push   edx
  4142b5:	mov    ds:0x98e9fd7b,eax
  4142ba:	ret    0xd9e
  4142bd:	xlat   BYTE PTR ds:[ebx]
  4142be:	nop
  4142bf:	test   BYTE PTR [ebp+0x233dd7c3],0x8b
  4142c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142c7:	pop    esi
  4142c8:	sti    
  4142c9:	mov    ch,0xc6
  4142cb:	mov    edi,DWORD PTR [edx-0x3d249aca]
  4142d1:	sbb    eax,0xa16a49a3
  4142d6:	sub    eax,0xffd1c4fe
  4142db:	cdq    
  4142dc:	out    dx,eax
  4142dd:	(bad)  
  4142de:	fwait
  4142df:	call   0x6c42:0xd831a138
  4142e6:	test   eax,0x43e11a28
  4142eb:	inc    edx
  4142ec:	fwait
  4142ed:	jno    0x4142d3
  4142ef:	jge    0x414310
  4142f1:	sbb    dh,BYTE PTR [eax-0x32eab821]
  4142f7:	sbb    BYTE PTR [edi],ch
  4142f9:	sar    DWORD PTR [ecx-0x537e815c],0x95
  414300:	mov    edi,0x22a47f21
  414305:	or     BYTE PTR [edx],0x6a
  414308:	das    
  414309:	cli    
  41430a:	inc    ebx
  41430b:	mov    dh,0xae
  41430d:	pop    edx
  41430e:	ficom  DWORD PTR [eax-0x567ab167]
  414314:	repnz mov dh,0x42
  414317:	sub    ebx,esi
  414319:	test   eax,0xc661ce2e
  41431e:	jle    0x4142b1
  414320:	in     al,0x4a
  414322:	add    BYTE PTR [edx+0x1e],0x39
  414326:	ret    0x33e3
  414329:	cli    
  41432a:	dec    eax
  41432b:	repz fisttp WORD PTR [edx+0x5acf1f5a]
  414332:	fmul   QWORD PTR [esi-0x14]
  414335:	sbb    ebx,edx
  414337:	fdiv   QWORD PTR [esi]
  414339:	xlat   BYTE PTR ds:[ebx]
  41433a:	in     al,0x8f
  41433c:	sub    BYTE PTR [esi+ecx*1],bh
  41433f:	push   ss
  414340:	adc    eax,0xdd9fd14b
  414345:	ja     0x4143c0
  414347:	or     al,0x63
  414349:	fstp   QWORD PTR [edi+0x4]
  41434c:	fdivr  DWORD PTR [edi]
  41434e:	and    eax,0x7cf92091
  414353:	shl    edi,0x48
  414356:	xchg   ebp,eax
  414357:	jae    0x414313
  414359:	stos   BYTE PTR es:[edi],al
  41435a:	loope  0x4142df
  41435c:	dec    esi
  41435d:	jne    0x414326
  41435f:	js     0x4142fb
  414361:	pop    es
  414362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414363:	push   cs
  414364:	adc    BYTE PTR [eax-0x2848b1d8],dl
  41436a:	push   ebx
  41436b:	or     DWORD PTR [ebx+0x7180e4f],ebp
  414371:	mov    eax,ds:0xdd7f5f1a
  414376:	dec    esi
  414377:	sbb    eax,0xc963a86a
  41437c:	(bad)  
  41437d:	cwde   
  41437e:	adc    bh,BYTE PTR [edx-0x61]
  414381:	inc    edx
  414382:	bound  esi,QWORD PTR [edi+0x2b]
  414385:	sbb    ah,BYTE PTR [ebx+0x49]
  414388:	leave  
  414389:	or     eax,0xad8adf43
  41438e:	add    dh,dl
  414390:	imul   edi,DWORD PTR [eax+ebx*2+0x66],0x6cc64694
  414398:	out    dx,al
  414399:	sub    BYTE PTR [edi+0x79],cl
  41439c:	fiadd  WORD PTR [eax-0x18dff26c]
  4143a2:	xchg   ecx,eax
  4143a3:	out    dx,al
  4143a4:	adc    BYTE PTR [edx],dl
  4143a6:	and    BYTE PTR [ebx+eax*4],ch
  4143a9:	aad    0xab
  4143ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ac:	xchg   ah,dh
  4143ae:	sbb    dh,al
  4143b0:	ficomp DWORD PTR [eax-0xa48f675]
  4143b6:	out    0x9b,al
  4143b8:	mov    edx,0x17784096
  4143bd:	or     al,0x1d
  4143bf:	ret    0x8e47
  4143c2:	aam    0xe1
  4143c4:	pop    es
  4143c5:	inc    ebp
  4143c6:	aad    0xe4
  4143c8:	inc    eax
  4143c9:	shl    ch,cl
  4143cb:	pop    esi
  4143cc:	iret   
  4143cd:	ficom  DWORD PTR [edx+0x71]
  4143d0:	dec    ebx
  4143d1:	out    dx,al
  4143d2:	mov    cl,BYTE PTR [ecx+0x7f2a206b]
  4143d8:	loop   0x4143dd
  4143da:	push   0x75cbe0bc
  4143df:	icebp  
  4143e0:	push   edx
  4143e1:	sbb    BYTE PTR [esi-0x7cec1139],0xa2
  4143e8:	aas    
  4143e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143ea:	in     ax,0xe4
  4143ed:	icebp  
  4143ee:	mov    ecx,0x64471a4e
  4143f3:	fld    DWORD PTR [edi-0x7f]
  4143f6:	adc    al,0xf0
  4143f8:	lds    eax,FWORD PTR [ebp-0x7d681135]
  4143fe:	je     0x4143e7
  414400:	inc    ebp
  414401:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414402:	dec    eax
  414403:	mov    al,0x13
  414405:	push   ecx
  414406:	loope  0x414431
  414408:	js     0x41439e
  41440a:	ja     0x41439a
  41440c:	leave  
  41440d:	or     ebx,edx
  41440f:	inc    eax
  414410:	sub    ebp,DWORD PTR [ebp-0x4a]
  414413:	aad    0xbe
  414415:	xchg   BYTE PTR [esi],dh
  414417:	clc    
  414418:	sbb    al,0xb1
  41441a:	ds pop edx
  41441c:	cmp    edx,DWORD PTR [ecx+0x3febd221]
  414422:	and    bh,BYTE PTR [ebx-0x60]
  414425:	jp     0x4143d0
  414427:	and    bh,BYTE PTR [ebx-0x4ba38c36]
  41442d:	loopne 0x414471
  41442f:	inc    ebp
  414430:	adc    ah,dl
  414432:	mov    eax,gs
  414434:	les    edx,FWORD PTR [ecx+0x52]
  414437:	and    BYTE PTR [ebp-0x786d4fe5],0xaf
  41443e:	pop    es
  41443f:	xchg   esp,eax
  414440:	(bad)  
  414441:	out    dx,eax
  414442:	cli    
  414443:	xchg   edx,eax
  414444:	push   es
  414445:	dec    ebx
  414446:	scas   eax,DWORD PTR es:[edi]
  414447:	sbb    eax,0x2417b75
  41444c:	and    al,0xe7
  41444e:	rcl    BYTE PTR [edi-0x57],0xc9
  414452:	imul   ebx,DWORD PTR [ecx+ebx*2-0x6add2b99],0xfcc014
  41445d:	inc    eax
  41445e:	loop   0x4143f5
  414460:	dec    eax
  414461:	and    eax,0x53debc80
  414466:	jle    0x4144d0
  414468:	inc    edi
  414469:	es pop ebx
  41446b:	ret    
  41446c:	or     eax,0x4cf33d6
  414471:	aas    
  414472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414473:	enter  0x7a02,0xcc
  414477:	sub    bl,BYTE PTR [esi]
  414479:	les    esp,FWORD PTR ds:0x1e9ecaca
  41447f:	ret    
  414480:	xchg   esi,eax
  414481:	cmc    
  414482:	mov    edx,0xc9f38d2c
  414487:	or     al,0x81
  414489:	sub    al,0xfb
  41448b:	pop    eax
  41448c:	jge    0x41448b
  41448e:	push   edx
  41448f:	or     ah,BYTE PTR [ebx-0x549d40ec]
  414495:	adc    al,0x77
  414497:	push   edi
  414498:	jge    0x4144b2
  41449a:	mov    WORD PTR [edi],cs
  41449c:	jae    0x41442c
  41449e:	inc    esi
  41449f:	jmp    0xe39477c7
  4144a4:	mov    edi,0x5dca4234
  4144a9:	or     esi,DWORD PTR [ecx+edi*1-0x5d0ccdd8]
  4144b0:	dec    ecx
  4144b1:	mov    esp,0x9b8da75b
  4144b6:	fldcw  WORD PTR [edi+0x14]
  4144b9:	shr    BYTE PTR [ebp+0x52f0d2b8],0x58
  4144c0:	das    
  4144c1:	push   esi
  4144c2:	jno    0x414539
  4144c4:	push   ss
  4144c5:	(bad)  
  4144c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144c7:	and    BYTE PTR [edx-0x7f],ch
  4144ca:	xchg   edi,eax
  4144cb:	push   0x64
  4144cd:	xchg   ebp,eax
  4144ce:	data16 aam 0x4b
  4144d1:	or     ch,al
  4144d3:	mov    ah,0x2
  4144d5:	inc    ebp
  4144d6:	ds inc ebp
  4144d8:	jmp    0x414530
  4144da:	xchg   edi,ecx
  4144dc:	sti    
  4144dd:	test   eax,eax
  4144df:	dec    edx
  4144e0:	je     0x414508
  4144e2:	ror    DWORD PTR [edi+0x222f5d7e],1
  4144e8:	xchg   ebp,eax
  4144e9:	fistp  QWORD PTR cs:[edx+0x51]
  4144ed:	ror    DWORD PTR [esi],0x7c
  4144f0:	jmp    0x414503
  4144f2:	data16 outs dx,BYTE PTR ds:[esi]
  4144f4:	lds    esi,FWORD PTR [esi+0x50]
  4144f7:	xchg   esi,eax
  4144f8:	or     bl,BYTE PTR [eax+0x35]
  4144fb:	stc    
  4144fc:	sub    edx,edi
  4144fe:	fcmovnb st,st(7)
  414500:	pop    edi
  414501:	adc    eax,ebx
  414503:	adc    al,0x17
  414505:	imul   esi,DWORD PTR [edx+esi*8+0x7b6e3acc],0x22
  41450d:	mov    DWORD PTR [esi-0x46452b6f],esp
  414513:	fisttp WORD PTR [edi]
  414515:	mov    ecx,0xb0790d73
  41451a:	xchg   ebp,eax
  41451b:	jbe    0x414538
  41451d:	imul   edx,DWORD PTR [ebp+0x912cdad],0x95168929
  414527:	mov    BYTE PTR [esi-0x7f03e2a4],ch
  41452d:	and    eax,0xa17e8b9
  414532:	mov    al,ds:0xab09741c
  414537:	cld    
  414538:	mov    esi,0x2fa91fcd
  41453d:	mov    bh,0xb5
  41453f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414540:	je     0x4144d5
  414542:	jg     0x41453a
  414544:	adc    eax,edx
  414546:	cmp    eax,0x70d86294
  41454b:	in     al,dx
  41454c:	out    0xc3,eax
  41454e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41454f:	sub    dl,al
  414551:	fs adc ebx,ecx
  414554:	fs pop ebx
  414556:	xchg   DWORD PTR ds:0x28aba6da,esp
  41455c:	mov    esp,0x4b53bc31
  414561:	ins    BYTE PTR es:[edi],dx
  414562:	jnp    0x414562
  414564:	pusha  
  414565:	ja     0x4145a1
  414567:	outs   dx,BYTE PTR ds:[esi]
  414568:	daa    
  414569:	imul   esi,DWORD PTR [esi+0xa0f4469],0xcb4e363a
  414573:	jb     0x4145e4
  414575:	pop    esi
  414576:	jl     0x4145a9
  414578:	std    
  414579:	out    dx,al
  41457a:	cmp    eax,DWORD PTR gs:[eax]
  41457d:	in     eax,dx
  41457e:	iret   
  41457f:	out    0x33,al
  414581:	stos   DWORD PTR es:[edi],eax
  414582:	adc    BYTE PTR [eax],dh
  414584:	inc    ebp
  414585:	push   cs
  414586:	out    dx,al
  414587:	leave  
  414588:	jmp    0xbda7168
  41458d:	xchg   esi,eax
  41458e:	or     esp,ecx
  414590:	mov    ebp,0xad26459f
  414595:	pop    ebx
  414596:	dec    eax
  414597:	iret   
  414598:	pop    edx
  414599:	gs jns 0x414575
  41459c:	rol    BYTE PTR [ebx+0x20f9595f],cl
  4145a2:	mov    fs,ebp
  4145a4:	pop    esp
  4145a5:	mov    al,0x45
  4145a7:	test   eax,0x7e71ff87
  4145ac:	(bad)  
  4145ad:	jbe    0x4145f9
  4145af:	jno    0x414614
  4145b1:	jns    0x41456f
  4145b3:	mov    al,ds:0xd9fad0e4
  4145b8:	imul   ecx,DWORD PTR [ebp-0x32981889],0x6e031e91
  4145c2:	jae    0x4145d4
  4145c4:	dec    esp
  4145c5:	and    ebx,0x759e056
  4145cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145cc:	pop    ebx
  4145cd:	adc    DWORD PTR [ecx-0x4ed26c72],eax
  4145d3:	xor    al,BYTE PTR [ebx-0x48]
  4145d6:	aad    0x2
  4145d8:	clc    
  4145d9:	dec    eax
  4145da:	mov    eax,0x32db8941
  4145df:	popf   
  4145e0:	push   esp
  4145e1:	mov    dl,BYTE PTR [eax+0x42f4998f]
  4145e7:	jns    0x414606
  4145e9:	repnz lea edi,[ebx-0x17cecc7f]
  4145f0:	push   cs
  4145f1:	mov    ebp,0x378ef428
  4145f6:	cmc    
  4145f7:	push   edx
  4145f8:	pop    ecx
  4145f9:	adc    al,0xa0
  4145fb:	stc    
  4145fc:	sbb    al,0xa5
  4145fe:	lods   al,BYTE PTR ds:[esi]
  4145ff:	push   esp
  414600:	ins    DWORD PTR es:[edi],dx
  414601:	ror    DWORD PTR [ecx+0x73e24650],1
  414607:	test   al,0xf6
  414609:	cld    
  41460a:	jmp    0x906b:0x26928d82
  414611:	ss push es
  414613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414614:	out    0x2e,eax
  414616:	pop    ebp
  414617:	dec    ecx
  414618:	dec    ecx
  414619:	push   eax
  41461a:	mov    esp,0x6664c371
  41461f:	pop    ebx
  414620:	sti    
  414621:	icebp  
  414622:	test   eax,0xa94fbf5d
  414627:	mov    dl,0x62
  414629:	clc    
  41462a:	lods   al,BYTE PTR ds:[esi]
  41462b:	sub    DWORD PTR [eax],edi
  41462d:	cdq    
  41462e:	mov    bl,0x6c
  414630:	(bad)  
  414631:	jmp    0x414690
  414633:	mov    ch,0x36
  414635:	mov    ch,0x7b
  414637:	cmp    eax,0x1b863433
  41463c:	pop    ss
  41463d:	inc    esp
  41463e:	iret   
  41463f:	(bad)  
  414640:	mov    ecx,0x5edccfb3
  414645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414646:	fldln2 
  414648:	push   esp
  414649:	int    0xb0
  41464b:	add    cl,ah
  41464d:	add    al,0x13
  41464f:	scas   eax,DWORD PTR es:[edi]
  414650:	pop    edx
  414651:	mov    ss,WORD PTR [esi+eiz*4+0x4fa44215]
  414658:	mov    al,BYTE PTR [ecx+0x4c]
  41465b:	xchg   ebp,eax
  41465c:	(bad)  
  41465d:	pop    ecx
  41465e:	sub    ah,al
  414660:	(bad)  
  414661:	addr16 je 0x414677
  414664:	in     eax,0xe3
  414666:	fst    QWORD PTR [ecx+0x1cc510c4]
  41466c:	data16 add BYTE PTR [edx-0x2ed7ad94],dl
  414673:	pusha  
  414674:	pop    ecx
  414675:	or     bh,BYTE PTR [ebp+0x3d8b20ce]
  41467b:	or     ebp,ebp
  41467d:	mov    ah,0xf1
  41467f:	adc    BYTE PTR [eax+0x22],0x79
  414683:	loope  0x41460c
  414685:	out    0x1a,eax
  414687:	in     al,dx
  414688:	int    0x51
  41468a:	outs   dx,BYTE PTR ds:[esi]
  41468b:	fcmovb st,st(1)
  41468d:	in     eax,0x5
  41468f:	add    bh,0xed
  414692:	or     dh,al
  414694:	pop    edi
  414695:	push   ds
  414696:	outs   dx,DWORD PTR ds:[esi]
  414697:	inc    ebx
  414698:	push   esi
  414699:	shr    DWORD PTR [eax-0x30],cl
  41469c:	or     BYTE PTR [ecx-0x30ee944a],bh
  4146a2:	xchg   esi,eax
  4146a3:	jmp    0x58f2:0x9cb40814
  4146aa:	test   BYTE PTR [edx+ebp*1],ah
  4146ad:	mov    cl,BYTE PTR [edx+edx*2]
  4146b0:	sbb    ah,dl
  4146b2:	pop    es
  4146b3:	ret    0xff04
  4146b6:	or     al,0x86
  4146b8:	push   ds
  4146b9:	pop    ecx
  4146ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146bb:	and    eax,DWORD PTR [eax-0x7ce101e8]
  4146c1:	inc    eax
  4146c2:	test   BYTE PTR [esi+eax*4+0x46],bh
  4146c6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4146c8:	and    al,0xe7
  4146ca:	ficomp DWORD PTR es:[esi-0x6c926367]
  4146d1:	std    
  4146d2:	mov    WORD PTR [edi-0x4677638e],?
  4146d8:	cld    
  4146d9:	pop    eax
  4146da:	shl    BYTE PTR [ebx-0x2742a92a],cl
  4146e0:	pop    es
  4146e1:	or     al,0x8c
  4146e3:	out    0x56,eax
  4146e5:	aad    0x76
  4146e7:	daa    
  4146e8:	inc    ecx
  4146e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146ea:	adc    eax,0x40453678
  4146ef:	or     DWORD PTR [edx],ebx
  4146f1:	xor    eax,0x80f70988
  4146f6:	imul   ecx,ebx,0x22
  4146f9:	mov    ecx,0x2ef031c9
  4146fe:	jl     0x414704
  414700:	mov    edi,0xdaf69d3c
  414705:	and    ah,BYTE PTR [ecx-0x1b88026a]
  41470b:	out    dx,eax
  41470c:	clc    
  41470d:	pop    ss
  41470e:	mov    al,ds:0xa4bc9d16
  414713:	xchg   ebx,eax
  414714:	inc    edi
  414715:	jae    0x414729
  414717:	loope  0x414730
  414719:	jge    0x414706
  41471b:	cmp    al,0x6f
  41471d:	mov    edi,0xf1f6e77b
  414722:	mov    ebx,0xaa20cf1c
  414727:	jnp    0x4146eb
  414729:	mov    cl,BYTE PTR ds:0x179b7328
  41472f:	inc    esp
  414730:	ss retf 
  414732:	enter  0xc0ec,0xdf
  414736:	sub    BYTE PTR [esi],cl
  414738:	jmp    0x41475f
  41473a:	int    0xec
  41473c:	add    BYTE PTR [ebp-0x49],bl
  41473f:	mov    esp,0x8284ec6f
  414744:	retf   0x27ee
  414747:	push   0x36
  414749:	inc    edx
  41474a:	dec    ecx
  41474b:	stos   BYTE PTR es:[edi],al
  41474c:	sar    BYTE PTR [eax+ecx*8],cl
  41474f:	mov    eax,0x4f56313f
  414754:	dec    ecx
  414755:	stos   DWORD PTR es:[edi],eax
  414756:	xor    DWORD PTR [edi+0x34b85f29],esi
  41475c:	jae    0x4147a6
  41475e:	fs or  esi,esi
  414761:	fwait
  414762:	icebp  
  414763:	sub    BYTE PTR [esi+ebx*8],0x66
  414767:	fwait
  414768:	push   ebp
  414769:	stos   BYTE PTR es:[edi],al
  41476a:	mov    ch,0x62
  41476c:	jb     0x41470a
  41476e:	ficomp WORD PTR [ecx-0x67]
  414771:	xlat   BYTE PTR ds:[ebx]
  414772:	xchg   DWORD PTR [eax+0x54],esp
  414775:	sahf   
  414776:	or     al,0x3b
  414778:	lock push edx
  41477a:	popf   
  41477b:	ins    DWORD PTR es:[edi],dx
  41477c:	inc    ebp
  41477d:	mov    cl,dl
  41477f:	jae    0x414769
  414781:	cmp    eax,DWORD PTR ds:0x4d90498d
  414787:	cld    
  414788:	inc    esi
  414789:	mov    edx,0x541fdfaf
  41478e:	gs popa 
  414790:	out    0xd6,eax
  414792:	push   es
  414793:	fcmovnbe st,st(2)
  414795:	push   ds
  414796:	enter  0xe12f,0x75
  41479a:	mul    BYTE PTR [ecx]
  41479c:	call   0x5fd8:0xc58fb662
  4147a3:	cmp    eax,0x499e9304
  4147a8:	ror    BYTE PTR [ebp-0x4c],cl
  4147ab:	outs   dx,BYTE PTR ds:[esi]
  4147ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147ad:	jg     0x41473c
  4147af:	or     BYTE PTR [edx-0x6df9ed7b],dh
  4147b5:	jg     0x414757
  4147b7:	mov    al,0x1b
  4147b9:	jmp    0x414762
  4147bb:	fucom  st(4)
  4147bd:	fld    TBYTE PTR [edx-0x2]
  4147c0:	gs ja  0x41483b
  4147c3:	push   esi
  4147c4:	in     eax,0x97
  4147c6:	aaa    
  4147c7:	jns    0x414771
  4147c9:	mov    BYTE PTR [edi+esi*1],dl
  4147cc:	outs   dx,BYTE PTR ds:[esi]
  4147cd:	xor    edi,edx
  4147cf:	cmp    al,0x64
  4147d1:	fstp   DWORD PTR [esi+0x80ddb2f]
  4147d7:	js     0x41476e
  4147d9:	xchg   ebx,eax
  4147da:	dec    esi
  4147db:	push   edi
  4147dc:	daa    
  4147dd:	jne    0x414778
  4147df:	leave  
  4147e0:	leave  
  4147e1:	aas    
  4147e2:	in     al,0xe1
  4147e4:	cwde   
  4147e5:	fstp   QWORD PTR [eax-0x3abbc848]
  4147eb:	retf   0x4fd3
  4147ee:	je     0x4147b9
  4147f0:	cmp    ebx,DWORD PTR [eax-0x29]
  4147f3:	mov    esp,ecx
  4147f5:	sbb    al,0x18
  4147f7:	xor    eax,0x9e153bc8
  4147fc:	adc    DWORD PTR [edi],0xa99da5c8
  414802:	mov    WORD PTR [eax],?
  414804:	sub    esi,DWORD PTR [esi-0x4806060d]
  41480a:	xchg   esi,eax
  41480b:	mov    BYTE PTR [ebp+esi*4+0x763ebf],bl
  414812:	outs   dx,BYTE PTR ds:[si]
  414814:	mov    eax,0x3f41eb68
  414819:	adc    edx,DWORD PTR [eax+0x76]
  41481c:	arpl   bp,dx
  41481e:	call   FWORD PTR [esi]
  414820:	sub    DWORD PTR [edx],esp
  414822:	je     0x4147e6
  414824:	pop    es
  414825:	test   DWORD PTR [esi-0x7ea5047b],edx
  41482b:	loope  0x4148aa
  41482d:	popf   
  41482e:	pop    esp
  41482f:	inc    edi
  414830:	bound  esp,QWORD PTR [esi+0x24fa8f02]
  414836:	or     BYTE PTR [eax+0x17132660],bh
  41483c:	pop    ebx
  41483d:	pop    ss
  41483e:	gs loop 0x414817
  414841:	sub    DWORD PTR [ebx-0x16],esp
  414844:	push   ebp
  414845:	push   ecx
  414846:	adc    DWORD PTR ds:0x9bad6399,edi
  41484c:	jmp    0xe752:0xd6f00c49
  414853:	(bad)  
  414854:	enter  0xb8ee,0x85
  414858:	xchg   edx,eax
  414859:	lea    esi,[ebx+0x75]
  41485c:	out    0xbb,al
  41485e:	and    eax,0xada83090
  414863:	cdq    
  414864:	dec    edx
  414865:	sub    BYTE PTR [ebx-0x6fc30332],cl
  41486b:	jmp    0xd328:0x1baf106
  414872:	out    dx,al
  414873:	aad    0x31
  414875:	push   ds
  414876:	mov    eax,ds:0x19173ec9
  41487b:	or     eax,0xb5a063bb
  414880:	test   al,0xef
  414882:	mov    al,0xdd
  414884:	arpl   WORD PTR [edx+0x1e6e580],si
  41488a:	nop
  41488b:	jg     0x414855
  41488d:	idiv   BYTE PTR [eax+0x30c92ee5]
  414893:	rcl    dh,1
  414895:	mov    cl,0x73
  414897:	mov    bl,0xfe
  414899:	loop   0x41490d
  41489b:	jmp    0x4148e0
  41489d:	ds pop esp
  41489f:	(bad)  
  4148a0:	imul   esp,esi,0x7cdedccb
  4148a6:	iret   
  4148a7:	jo     0x41491a
  4148a9:	mov    ds:0xda73d834,eax
  4148ae:	neg    BYTE PTR [esi+0x28]
  4148b1:	ret    
  4148b2:	push   ss
  4148b3:	call   FWORD PTR [ecx+0x6]
  4148b6:	(bad)  
  4148b7:	xchg   edi,eax
  4148b8:	dec    edx
  4148b9:	iret   
  4148ba:	jae    0x4148e0
  4148bc:	imul   eax,DWORD PTR [esi],0xc55f68e9
  4148c2:	fmul   DWORD PTR [ebp-0x5dc471b5]
  4148c8:	push   edx
  4148c9:	xchg   DWORD PTR [ebx],edi
  4148cb:	popf   
  4148cc:	cs repz mov edi,0xb625e36c
  4148d3:	dec    esi
  4148d4:	in     eax,0x15
  4148d6:	shl    DWORD PTR [ebp+0x37],1
  4148d9:	jecxz  0x41486f
  4148db:	test   DWORD PTR [ecx+0x5189625b],0xa34b30de
  4148e5:	das    
  4148e6:	inc    eax
  4148e7:	adc    al,0xdc
  4148e9:	ins    BYTE PTR es:[edi],dx
  4148ea:	or     al,0x2f
  4148ec:	pop    esi
  4148ed:	mov    ds:0x40090094,eax
  4148f2:	clc    
  4148f3:	mov    al,ds:0x965b26d9
  4148f8:	xor    eax,0xfe6bf0c0
  4148fd:	dec    ebp
  4148fe:	jmp    0x414929
  414900:	jge    0x414943
  414902:	pop    ss
  414903:	add    eax,0x5ac40f1b
  414908:	sub    dh,bl
  41490a:	mov    ds:0xa8dd9c4a,eax
  41490f:	cmp    BYTE PTR [ecx+0x6fb3aa4d],dl
  414915:	rol    DWORD PTR [ebp+0x7c],1
  414918:	fistp  DWORD PTR [ebp+0x32c1e39d]
  41491e:	pop    esp
  41491f:	jmp    0xffd3:0xae09591b
  414926:	int    0x4e
  414928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414929:	inc    ebp
  41492a:	cmp    al,BYTE PTR [edx+ebx*4]
  41492d:	aaa    
  41492e:	mov    ecx,DWORD PTR [ebx+edi*8+0x76]
  414932:	xchg   edi,eax
  414933:	les    esp,FWORD PTR [esi+0x5abb5e37]
  414939:	adc    eax,0x2cad5397
  41493e:	fsubr  st(0),st
  414940:	rcl    esi,cl
  414942:	test   eax,0xb2b8d9fe
  414947:	add    cl,BYTE PTR [ecx*4-0x7665af83]
  41494e:	jp     0x414926
  414950:	retf   
  414951:	popf   
  414952:	(bad)
  414955:	xchg   esp,eax
  414956:	pop    ecx
  414957:	jb     0x4149ce
  414959:	sahf   
  41495a:	cdq    
  41495b:	push   esi
  41495c:	xor    al,0xee
  41495e:	outs   dx,BYTE PTR ds:[esi]
  41495f:	dec    ecx
  414960:	pop    eax
  414961:	jo     0x4149d6
  414963:	mul    BYTE PTR [edi-0x1d]
  414966:	loope  0x414904
  414968:	push   es
  414969:	push   0x6a306dd2
  41496e:	push   edi
  41496f:	cld    
  414970:	cmp    BYTE PTR [ebp-0xa],cl
  414973:	leave  
  414974:	push   ebp
  414975:	mov    di,0x5fc3
  414979:	ss xchg ecx,eax
  41497b:	jge    0x414984
  41497d:	lods   eax,DWORD PTR ds:[esi]
  41497e:	jns    0x41492b
  414980:	sub    BYTE PTR [edx],dl
  414982:	pop    es
  414983:	xchg   ebx,eax
  414984:	sahf   
  414985:	cvtps2pd xmm1,xmm4
  414988:	and    DWORD PTR [eax],ebx
  41498a:	mov    ebp,0x73af00f8
  41498f:	imul   ebx,esp,0x23578e41
  414995:	xchg   ecx,eax
  414996:	mov    dl,0xa3
  414998:	mov    ch,0x17
  41499a:	fwait
  41499b:	ret    
  41499c:	push   edi
  41499d:	jmp    0x90f:0x140218b9
  4149a4:	or     al,0xd2
  4149a6:	pop    DWORD PTR [eax]
  4149a8:	ins    DWORD PTR es:[edi],dx
  4149a9:	dec    esp
  4149aa:	inc    ebx
  4149ab:	les    esp,FWORD PTR ds:0xe9085589
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	repnz test esp,eax
  414b8b:	js     0x414b8c
  414b8d:	add    BYTE PTR [bp+di+0x5c17],0x83
  414b93:	cmp    edi,0xffffffbf
  414b96:	into   
  414b97:	in     eax,dx
  414b98:	rcr    esi,1
  414b9a:	xchg   ecx,eax
  414b9b:	adc    ecx,DWORD PTR [edi-0x55bacbc7]
  414ba1:	out    0xbc,al
  414ba3:	adc    DWORD PTR [eax],esp
  414ba5:	push   ebx
  414ba6:	fcom   DWORD PTR [ebx+0x21a2ee96]
  414bac:	es or  ah,ch
  414baf:	(bad)  
  414bb0:	or     DWORD PTR [ebp+0x7f],ebx
  414bb3:	loop   0x414bd2
  414bb5:	pop    esi
  414bb6:	lock xor dl,bl
  414bb9:	mov    dl,0xb4
  414bbb:	aaa    
  414bbc:	imul   eax,DWORD PTR [esp+ebp*8-0x75],0x61648d8c
  414bc4:	add    eax,0xbe834da6
  414bc9:	add    DWORD PTR [ecx],esp
  414bcb:	jo     0x414bd0
  414bcd:	add    BYTE PTR [ebx],dh
  414bcf:	scas   eax,DWORD PTR es:[edi]
  414bd0:	mov    ?,WORD PTR [edx+0x58ce2f4f]
  414bd6:	fdivrp st(5),st
  414bd8:	or     al,0x48
  414bda:	pushf  
  414bdb:	mov    ebx,?
  414bdd:	xchg   edx,eax
  414bde:	inc    esi
  414bdf:	loop   0x414c11
  414be1:	or     BYTE PTR [ecx],0xf1
  414be4:	aaa    
  414be5:	enter  0xa272,0xd3
  414be9:	out    0x26,eax
  414beb:	add    edi,ebx
  414bed:	loop   0x414b78
  414bef:	push   es
  414bf0:	mov    dl,0x91
  414bf2:	js     0x414bda
  414bf4:	call   0x415d:0x929120e3
  414bfb:	sbb    edi,DWORD PTR [ebp+0x73]
  414bfe:	mov    ebx,0x6ae6da6c
  414c03:	inc    eax
  414c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c05:	std    
  414c06:	(bad)  
  414c07:	xor    DWORD PTR [ecx-0x65],eax
  414c0a:	call   0x971e0219
  414c0f:	addr16 in eax,0x3e
  414c12:	cmp    DWORD PTR [ebx-0x7a],eax
  414c15:	in     eax,dx
  414c16:	push   edx
  414c17:	mov    ecx,DWORD PTR [ecx+0x2f]
  414c1a:	push   ecx
  414c1b:	jmp    0x3c436b2e
  414c20:	call   0xecbb:0xe9ef9cf4
  414c27:	xchg   edx,eax
  414c28:	fs jge 0x414c94
  414c2b:	push   esp
  414c2c:	ss js  0x414bed
  414c2f:	sbb    BYTE PTR [ebx+0x47],bl
  414c32:	add    al,0x6e
  414c34:	daa    
  414c35:	pop    eax
  414c36:	mov    DWORD PTR [ecx],ebx
  414c38:	retf   0xca89
  414c3b:	inc    edx
  414c3c:	pop    ebx
  414c3d:	mov    edi,0x2ddd63ee
  414c42:	test   al,0xb
  414c44:	xor    al,0x79
  414c46:	hlt    
  414c47:	and    eax,0x1363a071
  414c4c:	xchg   edx,eax
  414c4d:	retf   
  414c4e:	mov    esi,0xb8dad0c4
  414c53:	mov    ds:0x7be502fa,eax
  414c58:	mov    dl,0x7e
  414c5a:	loop   0x414cc5
  414c5c:	imul   edi,DWORD PTR [esi],0xd79c70b3
  414c62:	xchg   ebp,eax
  414c63:	xor    dl,ch
  414c65:	adc    BYTE PTR [eax-0x52d9654b],dl
  414c6b:	sub    BYTE PTR [ebx],bh
  414c6d:	add    eax,0x73fd2848
  414c72:	mov    eax,ds:0x6d15a4fb
  414c77:	add    al,0x5a
  414c79:	push   esi
  414c7a:	lahf   
  414c7b:	or     DWORD PTR [esi+0x67],edx
  414c7e:	mov    ss,WORD PTR [edi+0x1e5579fc]
  414c84:	jl     0x414cbd
  414c86:	xchg   ebp,eax
  414c87:	cmp    eax,0xcbc08cc1
  414c8c:	dec    ebx
  414c8d:	ds jae 0x414c78
  414c90:	add    dl,BYTE PTR [eax+0x52741c01]
  414c96:	sub    DWORD PTR [esi-0x1a],ebx
  414c99:	loope  0x414c77
  414c9b:	loope  0x414c4a
  414c9d:	loope  0x414c23
  414c9f:	mov    esp,ebp
  414ca1:	fisttp DWORD PTR [esi+0x157fc151]
  414ca7:	je     0x414d27
  414ca9:	jl     0x414ced
  414cab:	repz (bad) 
  414cad:	dec    ebx
  414cae:	ins    DWORD PTR es:[edi],dx
  414caf:	pusha  
  414cb0:	xchg   DWORD PTR [ecx-0x5533d0ca],esp
  414cb6:	mov    bl,0xe8
  414cb8:	pushf  
  414cb9:	push   ebp
  414cba:	cmp    al,0x4c
  414cbc:	mov    ch,0x90
  414cbe:	stos   BYTE PTR es:[edi],al
  414cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cc0:	stos   BYTE PTR es:[edi],al
  414cc1:	mov    bh,BYTE PTR [ecx+0x7c9a624c]
  414cc7:	fnstsw WORD PTR [eax+0xb]
  414cca:	popf   
  414ccb:	push   0x72
  414ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cce:	inc    ebp
  414ccf:	(bad)  
  414cd0:	dec    ebx
  414cd1:	push   cs
  414cd2:	rcr    DWORD PTR [edx+eiz*2],0x26
  414cd6:	jl     0x414d00
  414cd8:	inc    edi
  414cd9:	push   ebx
  414cda:	(bad)  
  414cdb:	mov    ecx,0x25c5f42c
  414ce0:	sub    DWORD PTR [ebp+0x4b],esi
  414ce3:	ss test al,dl
  414ce6:	mov    al,ds:0x2e8103a7
  414ceb:	daa    
  414cec:	and    al,0x60
  414cee:	enter  0x5b28,0xd
  414cf2:	pop    ecx
  414cf3:	les    eax,FWORD PTR [ecx-0x25c13289]
  414cf9:	cld    
  414cfa:	rol    BYTE PTR [edx+0x66a1db2f],0xf
  414d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d02:	add    ebx,DWORD PTR [esi+0x13a648e5]
  414d08:	adc    al,0x2c
  414d0a:	out    dx,eax
  414d0b:	inc    edi
  414d0c:	jb     0x414d17
  414d0e:	dec    ebx
  414d0f:	and    eax,0x1af9427f
  414d14:	mov    al,ds:0x6b1b3c71
  414d19:	rcr    DWORD PTR [ebp+0x77],cl
  414d1c:	jmp    0x414cae
  414d1e:	xchg   esi,eax
  414d1f:	mov    dh,0x7b
  414d21:	pop    ebx
  414d22:	inc    edx
  414d23:	popa   
  414d24:	daa    
  414d25:	test   al,0xb0
  414d27:	mov    ebp,0x4d2db6c7
  414d2c:	ds dec ebp
  414d2e:	xor    bl,BYTE PTR [ecx-0x12]
  414d31:	cmp    BYTE PTR [esi-0x405e7771],dl
  414d37:	rol    esp,1
  414d39:	js     0x414cbb
  414d3b:	mov    ds,ebx
  414d3d:	inc    edx
  414d3e:	mov    dx,0xfc9d
  414d42:	or     eax,DWORD PTR [eax+0x34]
  414d45:	sub    cl,BYTE PTR [edi-0x1]
  414d48:	inc    edx
  414d49:	add    al,0xbd
  414d4b:	retf   0x3df2
  414d4e:	pop    ebx
  414d4f:	inc    eax
  414d50:	lea    edx,[edi+0x35f97a9d]
  414d56:	out    dx,eax
  414d57:	lock cmp BYTE PTR [ebx-0x6d5d063c],ah
  414d5e:	jge    0x414d7c
  414d60:	cmp    cl,BYTE PTR [edx+ebp*4-0x72]
  414d64:	xor    DWORD PTR [ecx-0x2c],edi
  414d67:	arpl   WORD PTR [edi+ebx*2-0x39],cx
  414d6b:	xor    bl,BYTE PTR [ecx]
  414d6d:	in     eax,dx
  414d6e:	in     al,0x10
  414d70:	pop    edx
  414d71:	or     DWORD PTR [ecx-0x75c5b7f7],ebx
  414d77:	stos   BYTE PTR es:[edi],al
  414d78:	or     al,0xad
  414d7a:	ins    DWORD PTR es:[edi],dx
  414d7b:	inc    ebx
  414d7c:	pop    ecx
  414d7d:	dec    ebx
  414d7e:	out    0x8c,al
  414d80:	and    dh,ah
  414d82:	dec    eax
  414d83:	repnz shr DWORD PTR [ebp+0x60c4593b],cl
  414d8a:	mov    bh,BYTE PTR [edi]
  414d8c:	bound  eax,QWORD PTR [edi+0x2f3c3904]
  414d92:	push   ds
  414d93:	sbb    al,0xb8
  414d95:	jg     0x414e01
  414d97:	fdiv   DWORD PTR [eax+0x663360bc]
  414d9d:	mov    dl,0xc1
  414d9f:	jge    0x414ddd
  414da1:	xchg   edi,eax
  414da2:	lods   eax,DWORD PTR ds:[esi]
  414da3:	sub    edi,esp
  414da5:	pop    es
  414da6:	mov    BYTE PTR [ecx-0x80],cl
  414da9:	arpl   WORD PTR [eax],dx
  414dab:	sahf   
  414dac:	(bad)  
  414dae:	in     al,dx
  414daf:	sub    edx,esi
  414db1:	push   edi
  414db2:	xchg   esp,eax
  414db3:	fisubr DWORD PTR [edx-0xb]
  414db6:	ret    0x9ece
  414db9:	inc    ecx
  414dba:	(bad)  
  414dbb:	pop    esi
  414dbc:	(bad)  
  414dbd:	aad    0x9e
  414dbf:	rcr    DWORD PTR [edx-0x7629f80e],0x5e
  414dc6:	jmp    0x414de5
  414dc8:	adc    al,0xfa
  414dca:	aam    0x4e
  414dcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dcd:	or     al,0x75
  414dcf:	xor    eax,0x1c8830df
  414dd4:	add    bh,BYTE PTR [ecx+0x62]
  414dd7:	(bad)  
  414dd8:	push   esp
  414dd9:	cmp    al,0x9f
  414ddb:	scas   al,BYTE PTR es:[edi]
  414ddc:	jl     0x414dee
  414dde:	imul   esp,DWORD PTR [ebx-0x12e658c2],0xffffffe1
  414de5:	or     BYTE PTR [edi],ah
  414de7:	into   
  414de8:	(bad)  
  414de9:	jge    0x414d89
  414deb:	dec    esp
  414dec:	xchg   esp,eax
  414ded:	data16 sbb cl,cl
  414df0:	ret    
  414df1:	aad    0xaf
  414df3:	push   0x50
  414df5:	mov    al,0xef
  414df7:	call   0x4111f560
  414dfc:	mov    al,0x89
  414dfe:	scas   eax,DWORD PTR es:[edi]
  414dff:	daa    
  414e00:	test   al,0x36
  414e02:	cwde   
  414e03:	arpl   WORD PTR [edi-0xf],cx
  414e06:	shl    DWORD PTR [esi],1
  414e08:	stc    
  414e09:	fs ret 0xfd32
  414e0d:	popf   
  414e0e:	xchg   esi,eax
  414e0f:	in     eax,0xac
  414e11:	jmp    0x414dec
  414e13:	retf   0xe8d4
  414e16:	mov    WORD PTR [ecx+0x5],ss
  414e19:	or     bl,dh
  414e1b:	mov    ds:0x7bfd8631,al
  414e20:	mov    ds:0x480c1862,al
  414e25:	pop    eax
  414e26:	mov    ebx,0xbf4b649
  414e2b:	scas   eax,DWORD PTR es:[edi]
  414e2c:	repnz and al,BYTE PTR [esi+0x40]
  414e30:	push   0x9de4476a
  414e35:	setge  BYTE PTR [ebx-0x7d]
  414e39:	in     eax,0x51
  414e3b:	jo     0x414e30
  414e3d:	and    al,0x7a
  414e3f:	test   DWORD PTR [ecx+edx*8-0x14],edx
  414e43:	adc    BYTE PTR [edx-0x55f84159],0x42
  414e4a:	xchg   esi,eax
  414e4b:	sbb    eax,0xe51c2f9c
  414e50:	cmp    dh,dl
  414e52:	or     esi,edi
  414e54:	sbb    al,0xb7
  414e56:	shr    DWORD PTR ds:0xe5e5b52,1
  414e5c:	dec    esi
  414e5d:	mov    ebx,0xb7102feb
  414e62:	pop    es
  414e63:	enter  0x5ff1,0xb2
  414e67:	mov    al,0x61
  414e69:	sub    al,0x35
  414e6b:	sbb    eax,0xdea23d5
  414e70:	jl     0x414dfc
  414e72:	mov    dl,0xea
  414e74:	jns    0x414ee0
  414e76:	xor    DWORD PTR [eax],0xffffffc3
  414e79:	adc    al,0x9b
  414e7b:	sub    ebx,DWORD PTR [eax-0x6]
  414e7e:	push   ss
  414e7f:	mov    esi,0xfce482fe
  414e84:	aam    0x70
  414e86:	xchg   ebp,eax
  414e87:	cli    
  414e88:	xchg   BYTE PTR ds:0xea5b2115,dl
  414e8e:	sub    ah,ch
  414e90:	sub    al,0x35
  414e92:	mov    ebx,DWORD PTR [ecx]
  414e94:	scas   al,BYTE PTR es:[edi]
  414e95:	sti    
  414e96:	add    al,0xf4
  414e98:	das    
  414e99:	int3   
  414e9a:	loop   0x414f13
  414e9c:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  414e9e:	in     eax,0xb6
  414ea0:	cmp    al,0x55
  414ea2:	das    
  414ea3:	xor    dl,dl
  414ea5:	icebp  
  414ea6:	mov    ebx,0x1a3722da
  414eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eac:	push   esp
  414ead:	sti    
  414eae:	int    0x40
  414eb0:	not    edx
  414eb2:	sbb    BYTE PTR [edi+0x11],ch
  414eb5:	push   ss
  414eb6:	int3   
  414eb7:	mov    edi,0x682b3b03
  414ebc:	ss je  0x414ea4
  414ebf:	jmp    0x4695:0x92931fd4
  414ec6:	cs addr16 or eax,esi
  414eca:	in     al,dx
  414ecb:	or     eax,0x5e4816a6
  414ed0:	sbb    cx,cx
  414ed3:	addr16 popa 
  414ed5:	jecxz  0x414ec3
  414ed7:	inc    ecx
  414ed8:	iret   
  414ed9:	mul    dh
  414edb:	mov    ebp,0xf7740873
  414ee0:	into   
  414ee1:	test   DWORD PTR [edx],esi
  414ee3:	jecxz  0x414ecc
  414ee5:	ins    BYTE PTR es:[edi],dx
  414ee6:	sub    eax,0x93c77742
  414eeb:	jmp    FWORD PTR [ecx+0x10]
  414eee:	pop    ss
  414eef:	jb     0x414f18
  414ef1:	stc    
  414ef2:	sahf   
  414ef3:	xor    bl,BYTE PTR [edi]
  414ef5:	xchg   BYTE PTR [esi-0x7c728b47],ch
  414efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414efc:	outs   dx,BYTE PTR ds:[esi]
  414efd:	jge    0x414f4b
  414eff:	imul   ebx,DWORD PTR [edx],0xe3cbba64
  414f05:	aas    
  414f06:	mov    bl,BYTE PTR [edx+0x60]
  414f09:	xchg   ebp,eax
  414f0a:	imul   ebp,DWORD PTR [edi],0x9e2bae53
  414f10:	int    0xdd
  414f12:	adc    DWORD PTR [edx-0xcc44ce7],ebp
  414f18:	fcomp  QWORD PTR [ebx+0x6bcae9c8]
  414f1e:	scas   eax,DWORD PTR es:[edi]
  414f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f20:	imul   ecx,edx,0xffffff93
  414f23:	mov    dl,0xaa
  414f25:	sbb    al,0x30
  414f27:	mov    edi,0x18ff24ac
  414f2c:	imul   edx,DWORD PTR [esi+edx*8-0x67f1aad3],0xe2b40c3e
  414f37:	add    al,dh
  414f39:	xadd   BYTE PTR [ebx],bh
  414f3c:	push   ss
  414f3d:	(bad)  
  414f3e:	lods   al,BYTE PTR ds:[esi]
  414f3f:	fwait
  414f40:	repnz leave 
  414f42:	je     0x414f25
  414f44:	push   ebx
  414f45:	ror    BYTE PTR [ebp-0x3e],cl
  414f48:	or     dl,BYTE PTR [edi+ecx*8-0x52]
  414f4c:	inc    esi
  414f4d:	lock xchg edx,eax
  414f4f:	bt     DWORD PTR [ebx+eiz*1],ebx
  414f53:	mov    ebx,0xee8bee
  414f58:	add    BYTE PTR [eax-0x24],ch
  414f5b:	fbld   TBYTE PTR [edx+ebp*4]
  414f5e:	mov    cl,0xe3
  414f60:	and    BYTE PTR [ebp+0x7e],bh
  414f63:	dec    edx
  414f64:	lods   al,BYTE PTR ds:[esi]
  414f65:	fwait
  414f66:	mov    WORD PTR [eax-0x9],?
  414f69:	or     eax,DWORD PTR [ebx-0x3c0615e7]
  414f6f:	inc    esp
  414f70:	aam    0xea
  414f72:	add    edi,ecx
  414f74:	imul   edi,DWORD PTR [ecx-0x58],0xfffffff3
  414f78:	xor    ch,BYTE PTR [edi+ebp*2]
  414f7b:	(bad)  
  414f7c:	jl     0x414fc0
  414f7e:	lods   al,BYTE PTR ds:[esi]
  414f7f:	push   eax
  414f80:	and    al,0x55
  414f82:	mov    ch,0xab
  414f84:	sbb    BYTE PTR [eax],ch
  414f86:	jb     0x414f0e
  414f88:	sub    BYTE PTR [edx],dl
  414f8a:	jno    0x414fdd
  414f8c:	popa   
  414f8d:	cmp    al,0x4
  414f8f:	xchg   ecx,eax
  414f90:	jbe    0x414f84
  414f92:	pop    es
  414f93:	js     0x414f82
  414f95:	adc    dl,BYTE PTR [edx+0x372c5637]
  414f9b:	repz not BYTE PTR [ecx-0x2c1a992d]
  414fa2:	cli    
  414fa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa5:	int3   
  414fa6:	ds jge 0x414f3b
  414fa9:	ror    DWORD PTR [esp+eiz*4+0x5812a896],cl
  414fb0:	and    ah,al
  414fb2:	aam    0xb5
  414fb4:	stos   BYTE PTR es:[edi],al
  414fb5:	lahf   
  414fb6:	jo     0x414ff8
  414fb8:	jb     0x414fe9
  414fba:	sbb    DWORD PTR [edi-0x26],0x90cc175c
  414fc1:	mov    ah,0x60
  414fc3:	(bad)  [edx+0x54]
  414fc6:	stos   BYTE PTR es:[edi],al
  414fc7:	xchg   ebp,eax
  414fc8:	mov    esi,0x57f2c83e
  414fcd:	(bad)  
  414fce:	jmp    0xf8d50129
  414fd3:	adc    ebp,0x582b279e
  414fd9:	in     eax,dx
  414fda:	push   0x209fd42
  414fdf:	push   esi
  414fe0:	(bad)  
  414fe1:	adc    DWORD PTR [ebx+0x56207fce],ebx
  414fe7:	add    DWORD PTR [ecx-0x66e705d0],eax
  414fed:	aad    0x5c
  414fef:	xor    al,0xc4
  414ff1:	sbb    BYTE PTR [edi-0x66c54f20],ah
  414ff7:	jno    0x414fb8
  414ff9:	sbb    BYTE PTR [ecx+0x9258a7],0x77
  415000:	ret    0xfabe
  415003:	push   eax
  415004:	nop
  415005:	in     al,dx
  415006:	xchg   ecx,eax
  415007:	adc    BYTE PTR [edi+0x3],0x55
  41500b:	call   0x92dcb882
  415010:	pop    ebx
  415011:	xor    eax,0x27594476
  415016:	adc    edi,ebp
  415018:	inc    BYTE PTR [esi-0x1f]
  41501b:	pop    es
  41501c:	clc    
  41501d:	mov    bl,0xec
  41501f:	inc    BYTE PTR [ecx]
  415021:	jecxz  0x414fab
  415023:	jnp    0x415027
  415025:	and    esp,edi
  415027:	mov    dh,al
  415029:	inc    ebx
  41502a:	mov    bl,0x4a
  41502c:	fild   WORD PTR [eax-0x297850b8]
  415032:	loopne 0x414fd7
  415034:	adc    al,0x4e
  415036:	add    edi,edx
  415038:	mov    ebx,0x6811dee7
  41503d:	mov    ch,0x3f
  41503f:	or     edx,edx
  415041:	mov    ecx,DWORD PTR [ecx+0x2d590bbe]
  415047:	mov    ds,WORD PTR [edx-0x61]
  41504a:	repz lahf 
  41504c:	lods   eax,DWORD PTR ds:[esi]
  41504d:	push   esi
  41504e:	fistp  DWORD PTR [edi+0x5a]
  415051:	sbb    BYTE PTR [ebx+esi*4+0x4f47a997],0xb1
  415059:	out    0x6f,al
  41505b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41505c:	xchg   esp,eax
  41505d:	pusha  
  41505e:	sbb    al,BYTE PTR [esi-0x50]
  415061:	aaa    
  415062:	xchg   edx,eax
  415063:	mov    edi,0x167ea7b1
  415068:	aas    
  415069:	sub    al,0x87
  41506b:	mov    ebx,0xb8449b2e
  415070:	mov    ds:0x4191e6f,al
  415075:	cmc    
  415076:	outs   dx,DWORD PTR ds:[esi]
  415077:	inc    eax
  415078:	jo     0x415082
  41507a:	inc    eax
  41507b:	mov    dh,0x78
  41507d:	inc    edi
  41507e:	prefetch (bad)
  41507f:	or     eax,0xa67d54d8
  415084:	int    0x49
  415086:	mov    ebp,0x561263ba
  41508b:	or     al,al
  41508d:	test   eax,0xa023595d
  415092:	xor    BYTE PTR [esi+0x64d5cb96],ah
  415098:	(bad)  
  415099:	cld    
  41509a:	(bad)  
  41509b:	call   0x52772bf9
  4150a0:	cmp    esp,DWORD PTR [edi]
  4150a2:	sahf   
  4150a3:	pop    edx
  4150a4:	inc    esp
  4150a5:	xor    DWORD PTR [esi-0x4d],0xc0b2c05d
  4150ac:	inc    ecx
  4150ad:	in     al,0x38
  4150af:	dec    ecx
  4150b0:	in     eax,0x7a
  4150b2:	mov    cl,BYTE PTR [ebx+0x3dbc373d]
  4150b8:	xor    esi,DWORD PTR [edi+0x7a]
  4150bb:	gs test eax,0xbfb85341
  4150c1:	dec    ebx
  4150c2:	into   
  4150c3:	aas    
  4150c4:	cmp    ecx,DWORD PTR [ecx+0x4e]
  4150c7:	cdq    
  4150c8:	rcr    BYTE PTR [edx],0x77
  4150cb:	xor    ah,BYTE PTR [edx-0x12]
  4150ce:	rcl    BYTE PTR [ebp-0x3b1d9fd4],cl
  4150d4:	push   ss
  4150d5:	mov    DWORD PTR gs:[esi],edx
  4150d8:	lahf   
  4150d9:	sbb    eax,DWORD PTR [ebx]
  4150db:	clc    
  4150dc:	scas   eax,DWORD PTR es:[edi]
  4150dd:	daa    
  4150de:	mov    ds:0x706a966a,eax
  4150e3:	push   cs
  4150e4:	(bad)  
  4150e5:	mov    ebx,0xbc6f9ed4
  4150ea:	mov    esi,0x33bde097
  4150ef:	push   es
  4150f0:	je     0x415125
  4150f2:	pop    edx
  4150f3:	fidivr DWORD PTR [esi]
  4150f5:	pusha  
  4150f6:	ss fs js 0x4150f9
  4150fa:	fistp  WORD PTR [esi-0x104636ca]
  415100:	shl    DWORD PTR [eax+0x53],cl
  415103:	dec    ebx
  415104:	xchg   DWORD PTR [esi+0x50],ebx
  415107:	int    0x3f
  415109:	push   esp
  41510a:	push   ss
  41510b:	sbb    dh,BYTE PTR [ebp-0x70]
  41510e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41510f:	clc    
  415110:	in     eax,dx
  415111:	mov    edi,0x911fc230
  415116:	jg     0x41517b
  415118:	jmp    0x8ce1452
  41511d:	fbstp  TBYTE PTR [edi]
  41511f:	jbe    0x41517b
  415121:	sbb    eax,0xe86c78d3
  415126:	xlat   BYTE PTR ds:[ebx]
  415127:	iret   
  415128:	fdivr  QWORD PTR [ebp+0x53341dae]
  41512e:	ret    
  41512f:	sbb    edx,edi
  415131:	mov    ah,0x7d
  415133:	shl    DWORD PTR [eax-0x67323813],0x14
  41513a:	or     al,0x56
  41513c:	in     al,0x8a
  41513e:	jne    0x41516a
  415140:	fbstp  TBYTE PTR [edx+edx*8+0x79]
  415144:	out    dx,al
  415145:	mov    es:0xb23e9e48,al
  41514b:	test   al,0xe9
  41514d:	ins    WORD PTR es:[edi],dx
  41514f:	pop    esi
  415150:	push   esp
  415151:	sar    BYTE PTR [esi-0x7b],cl
  415154:	dec    eax
  415155:	sbb    DWORD PTR [edx-0x2dfc1ab],ecx
  41515b:	jl     0x4151bd
  41515d:	int    0xad
  41515f:	sub    BYTE PTR [ecx+0x3c8b0104],dh
  415165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415166:	fdivr  DWORD PTR [esi-0x7b394654]
  41516c:	and    al,bh
  41516e:	ret    
  41516f:	stos   BYTE PTR es:[edi],al
  415170:	je     0x41518d
  415172:	test   al,0x90
  415174:	jnp    0x415149
  415176:	ins    BYTE PTR es:[edi],dx
  415177:	(bad)  
  415178:	loop   0x415136
  41517a:	push   edi
  41517b:	xor    edi,DWORD PTR [edx-0x67d3b4d8]
  415181:	inc    edi
  415182:	dec    edx
  415183:	int    0x8c
  415185:	dec    eax
  415186:	aaa    
  415187:	cmp    DWORD PTR [ebx],0xffffffc0
  41518a:	and    al,0x58
  41518c:	xor    DWORD PTR [esi+ebp*4],ebx
  41518f:	in     al,0x31
  415191:	popf   
  415192:	sub    DWORD PTR [esi-0x14e4925a],0x4f
  415199:	ret    
  41519a:	mov    eax,DWORD PTR [eax-0x4eaf2d3e]
  4151a0:	push   ecx
  4151a1:	mov    ah,0x3
  4151a3:	scas   eax,DWORD PTR es:[edi]
  4151a4:	jbe    0x415195
  4151a6:	and    DWORD PTR [ebx+0x6f16353e],ecx
  4151ac:	int3   
  4151ad:	(bad)  
  4151ae:	imul   ecx,DWORD PTR [eax+0x4873b006],0x4292e97f
  4151b8:	sub    al,0xc5
  4151ba:	ins    BYTE PTR es:[edi],dx
  4151bb:	and    ah,al
  4151bd:	lods   eax,DWORD PTR ds:[esi]
  4151be:	test   al,0xc3
  4151c0:	mov    esi,0x4e70cb9d
  4151c5:	push   es
  4151c6:	sbb    al,0x61
  4151c8:	ficom  WORD PTR [ebp-0xebdc897]
  4151ce:	stos   BYTE PTR es:[edi],al
  4151cf:	jnp    0x41518f
  4151d1:	or     ecx,DWORD PTR [eax+0x6]
  4151d4:	xchg   edi,eax
  4151d5:	xor    al,ah
  4151d7:	bound  esp,QWORD PTR [edi]
  4151d9:	lss    ebx,FWORD PTR [edi+ebx*8]
  4151dd:	ret    0x27e9
  4151e0:	cmp    eax,0x1ea37df3
  4151e5:	mov    eax,ds:0xe06a2a35
  4151ea:	mov    al,ds:0xc3be4ff0
  4151ef:	sub    DWORD PTR [eax+0x45],ecx
  4151f2:	and    al,0xbf
  4151f4:	xlat   BYTE PTR ds:[ebx]
  4151f5:	xchg   BYTE PTR [eax-0x6d4ebb58],bl
  4151fb:	lods   al,BYTE PTR ds:[esi]
  4151fc:	inc    esi
  4151fd:	std    
  4151fe:	fisubr DWORD PTR [edx]
  415200:	je     0x4151b6
  415202:	add    DWORD PTR [ebp+0x43],ebx
  415205:	cmp    al,0xf3
  415207:	scas   al,BYTE PTR es:[edi]
  415208:	and    cl,BYTE PTR [esi-0x12]
  41520b:	subps  xmm7,XMMWORD PTR [edi-0x18]
  41520f:	(bad)  
  415211:	dec    eax
  415212:	daa    
  415213:	mov    eax,ds:0x18efbdef
  415218:	dec    esi
  415219:	and    DWORD PTR [edx+0x4b8dda51],ebx
  41521f:	sbb    al,0x93
  415221:	and    DWORD PTR [ecx],esp
  415223:	sub    DWORD PTR [ecx+edi*1+0x4d],ebp
  415227:	aad    0x4c
  415229:	inc    edx
  41522a:	jb     0xa6fb76da
  415230:	(bad)  
  415231:	mov    edi,0xc1cd01fc
  415236:	or     DWORD PTR [ecx-0x66],ebp
  415239:	add    dl,ah
  41523b:	pop    ss
  41523c:	fsub   st(2),st
  41523e:	xor    al,0xbb
  415240:	and    bh,BYTE PTR [eax]
  415242:	push   esi
  415243:	jecxz  0x415252
  415245:	je     0x4151d7
  415247:	int3   
  415248:	push   esi
  415249:	mov    dl,BYTE PTR [edx]
  41524b:	mov    dh,0xa7
  41524d:	mov    ds:0x9ece3d00,al
  415252:	sahf   
  415253:	es sbb esp,ebp
  415256:	fcos   
  415258:	sbb    dl,BYTE PTR [ecx+0x68cef16b]
  41525e:	add    DWORD PTR [edx-0x7c1b3a2f],ecx
  415264:	rol    BYTE PTR [ebp+eiz*8-0x6f],0x12
  415269:	cmp    ch,BYTE PTR [edx-0x33bdf9ce]
  41526f:	push   ecx
  415270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415271:	jnp    0x415251
  415273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415274:	imul   eax,DWORD PTR [ecx],0xffffffd4
  415277:	mov    edx,0xa28bdfb4
  41527c:	jecxz  0x415262
  41527e:	test   al,0xad
  415280:	xchg   ecx,eax
  415281:	pop    ds
  415282:	sub    edx,esi
  415284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415285:	ins    DWORD PTR es:[edi],dx
  415286:	jmp    0xabbf:0x74086fae
  41528d:	(bad)  
  41528e:	mov    bh,0xe2
  415290:	aam    0x86
  415292:	ins    DWORD PTR es:[edi],dx
  415293:	pop    edi
  415294:	inc    ecx
  415295:	je     0x4152aa
  415297:	sbb    ch,BYTE PTR [edx-0x73cfd326]
  41529d:	sbb    al,0x9e
  41529f:	push   0x72082942
  4152a4:	shr    DWORD PTR [edx+eax*4],1
  4152a7:	loope  0x4152f6
  4152a9:	mov    edx,0xea4ff401
  4152ae:	xchg   esi,eax
  4152af:	adc    eax,0x579ed179
  4152b4:	mov    DWORD PTR [edi-0x67],edi
  4152b7:	fsub   DWORD PTR [ecx]
  4152b9:	retf   0xf88b
  4152bc:	push   edx
  4152bd:	outs   dx,DWORD PTR ds:[esi]
  4152be:	daa    
  4152bf:	cld    
  4152c0:	sti    
  4152c1:	dec    ebp
  4152c2:	inc    edi
  4152c3:	push   ds
  4152c4:	xchg   edi,eax
  4152c5:	dec    esp
  4152c6:	cmp    DWORD PTR [ecx+0x4d],esi
  4152c9:	test   DWORD PTR [ebx+0x2a0abbcc],edi
  4152cf:	bound  esi,QWORD PTR [esi-0x7da39c6]
  4152d5:	lahf   
  4152d6:	cmp    DWORD PTR [edx+0x6f32a9e5],eax
  4152dc:	pop    ecx
  4152dd:	fmul   QWORD PTR [edx-0x64]
  4152e0:	pop    eax
  4152e1:	cmp    DWORD PTR [edx],0xe
  4152e4:	jmp    0x4152d7
  4152e6:	inc    edi
  4152e7:	ins    BYTE PTR es:[edi],dx
  4152e8:	adc    al,0x63
  4152ea:	inc    ebp
  4152eb:	fldln2 
  4152ed:	ficom  DWORD PTR [esi+0x3de225c8]
  4152f3:	inc    ebx
  4152f4:	xchg   BYTE PTR [ebp-0x54804a7],cl
  4152fa:	fist   WORD PTR [esp+esi*4+0x56]
  4152fe:	inc    ecx
  4152ff:	jg     0x4152b2
  415301:	sub    ebp,DWORD PTR [edi+0x46]
  415304:	clc    
  415305:	xchg   ebx,eax
  415306:	or     bl,al
  415308:	int3   
  415309:	xchg   ebx,eax
  41530a:	inc    edi
  41530b:	push   esp
  41530c:	mov    bh,0xbc
  41530e:	mov    dl,0xca
  415310:	mov    edx,DWORD PTR [ebx+0x25]
  415313:	jnp    0x415389
  415315:	lods   eax,DWORD PTR ds:[esi]
  415316:	jnp    0x415348
  415318:	jo     0x415365
  41531a:	mov    eax,0x627944c6
  41531f:	mov    edi,0x6450b568
  415324:	push   es
  415325:	retf   0x4c7
  415328:	push   edx
  415329:	test   BYTE PTR [esi],0x6
  41532c:	fisub  DWORD PTR [edx-0x6c]
  41532f:	mov    ds:0xb4388ad8,al
  415334:	jnp    0x415371
  415336:	in     eax,0x72
  415338:	inc    ebp
  415339:	dec    ebx
  41533a:	push   es
  41533b:	adc    ebx,ebp
  41533d:	cmp    al,0x40
  41533f:	jns    0x41530c
  415341:	sub    esp,DWORD PTR [edx+ebp*1+0x78]
  415345:	(bad)  
  415346:	sbb    eax,0xaa84dc3
  41534b:	push   ds
  41534c:	push   0x10
  41534e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41534f:	mov    esi,0x5d92081a
  415354:	mov    eax,0xad182f01
  415359:	inc    edi
  41535a:	add    esi,DWORD PTR cs:[edx]
  41535d:	ja     0x41535c
  41535f:	jmp    0x2fe9:0xba348d76
  415366:	and    al,BYTE PTR [ebx-0x5d7a2661]
  41536c:	sub    eax,0xb42896b9
  415371:	mov    bl,0x40
  415373:	push   ebx
  415374:	neg    al
  415376:	pushf  
  415377:	std    
  415378:	push   eax
  415379:	xchg   ebx,eax
  41537a:	dec    ebp
  41537b:	cmp    al,0x57
  41537d:	dec    eax
  41537e:	imul   edi,DWORD PTR [esi-0x62],0x25352b66
  415385:	cwde   
  415386:	scas   al,BYTE PTR es:[edi]
  415387:	ret    
  415388:	popf   
  415389:	and    eax,0x3803c4c0
  41538e:	pushf  
  41538f:	(bad)  
  415391:	and    ch,dl
  415393:	or     esi,DWORD PTR [edi]
  415395:	lea    ebx,[esi]
  415397:	inc    edi
  415398:	hlt    
  415399:	sar    ebx,0x5
  41539c:	cdq    
  41539d:	into   
  41539e:	sub    DWORD PTR [ecx-0x42],0x7fa52774
  4153a5:	dec    esp
  4153a6:	inc    edx
  4153a7:	out    dx,eax
  4153a8:	ja     0x415363
  4153aa:	xchg   esp,eax
  4153ab:	(bad)  
  4153ad:	cwde   
  4153ae:	leave  
  4153af:	add    bh,BYTE PTR [edi+edi*8+0x0]
  4153b3:	loop   0x4153e4
  4153b5:	cli    
  4153b6:	icebp  
  4153b7:	fimul  DWORD PTR [eax]
  4153b9:	sub    eax,eax
  4153bb:	jns    0x4153df
  4153bd:	pop    edi
  4153be:	jl     0x41537a
  4153c0:	fistp  WORD PTR [edi+0x7957c848]
  4153c6:	mov    eax,gs:0x61624b6e
  4153cc:	adc    cl,BYTE PTR [ebp+0x21e404d5]
  4153d2:	dec    ebx
  4153d3:	ds add ebx,ebx
  4153d6:	imul   eax,DWORD PTR [ecx-0x78507bfe],0xe6ff502
  4153e0:	or     eax,DWORD PTR [ecx]
  4153e2:	inc    ebx
  4153e3:	arpl   WORD PTR [edi-0xf2f9da6],dx
  4153e9:	push   esi
  4153ea:	std    
  4153eb:	push   esp
  4153ec:	imul   esp,edi,0x24
  4153ef:	clc    
  4153f0:	aaa    
  4153f1:	add    eax,0x802659e1
  4153f6:	dec    eax
  4153f8:	xlat   BYTE PTR ds:[ebx]
  4153f9:	jns    0x41537b
  4153fb:	iret   
  4153fc:	jl     0x4153c3
  4153fe:	xor    eax,0xf543af4e
  415403:	(bad)  
  415404:	(bad)  
  415405:	in     eax,dx
  415406:	(bad)  
  415407:	rcl    BYTE PTR [edx-0x38],cl
  41540a:	push   ss
  41540b:	adc    BYTE PTR [edx-0x7f],bh
  41540e:	clc    
  41540f:	(bad)  
  415410:	sbb    al,0xba
  415412:	sahf   
  415413:	mov    dl,0xd5
  415415:	xchg   DWORD PTR [eax+0x14],edi
  415418:	and    esp,ebp
  41541a:	mov    eax,0xfbd69183
  41541f:	mov    gs,WORD PTR [eax+0x4]
  415422:	or     BYTE PTR [esi+0x24],0x31
  415426:	pop    ds
  415427:	push   edx
  415428:	jg     0x41548d
  41542a:	lock jb 0x415429
  41542d:	lods   al,BYTE PTR ds:[esi]
  41542e:	popf   
  41542f:	pop    es
  415430:	lods   eax,DWORD PTR ds:[esi]
  415431:	aad    0x9c
  415433:	cld    
  415434:	fild   QWORD PTR ds:0x49d38a7e
  41543a:	cmc    
  41543b:	aad    0xf8
  41543d:	xchg   DWORD PTR [edi],ebp
  41543f:	dec    esi
  415440:	dec    edx
  415441:	mov    BYTE PTR [esi-0x10],bh
  415444:	out    dx,eax
  415445:	call   0xc94355dd
  41544a:	mov    ah,0xe2
  41544c:	jmp    0x4b2:0xe29db4b3
  415453:	mov    bl,0xfb
  415455:	xchg   ah,ch
  415457:	or     al,BYTE PTR [ebx]
  415459:	cmp    ebp,eax
  41545b:	inc    ebp
  41545c:	aas    
  41545d:	clc    
  41545e:	loopne 0x4153f6
  415460:	iret   
  415461:	in     eax,0x13
  415463:	cmp    DWORD PTR [eax+0x51],0xd636dd05
  41546a:	jb     0x415457
  41546c:	ja     0x41543e
  41546e:	add    ecx,DWORD PTR [eax+0x4a]
  415471:	sub    DWORD PTR [esi+0x50],eax
  415474:	out    dx,eax
  415475:	push   ebx
  415476:	cs jo  0x415453
  415479:	mov    DWORD PTR [esi+0x75],edx
  41547c:	sbb    DWORD PTR [esi+edx*2+0xe],esi
  415480:	push   0x35a15867
  415485:	imul   eax,eax,0x90fd1a13
  41548b:	pop    edi
  41548c:	cld    
  41548d:	es retf 0x3a9a
  415491:	hlt    
  415492:	sub    dh,BYTE PTR [ebp+0x2]
  415495:	ds mov dh,0x54
  415498:	mov    edx,0xa49327db
  41549d:	inc    ebp
  41549e:	in     eax,dx
  41549f:	sahf   
  4154a0:	xor    eax,0x98e78f4b
  4154a5:	pop    edi
  4154a6:	clc    
  4154a7:	sbb    eax,0xfb626107
  4154ac:	or     BYTE PTR [ecx+0x2390f35f],bl
  4154b2:	(bad)
  4154b5:	xchg   BYTE PTR [esi-0x6af4bf8a],dl
  4154bb:	mov    ah,0xb9
  4154bd:	mov    ds:0xbc3bdbe5,eax
  4154c2:	or     BYTE PTR [esi],dl
  4154c4:	and    BYTE PTR [edx+ecx*4],cl
  4154c7:	mov    ds,edi
  4154c9:	loope  0x4154b6
  4154cb:	int3   
  4154cc:	pop    edx
  4154cd:	lods   eax,DWORD PTR ds:[esi]
  4154ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154cf:	enter  0xfcbf,0x3
  4154d3:	imul   edx,DWORD PTR [ebp-0x52f80100],0x2fccbf39
  4154dd:	jmp    0xf06f586b
  4154e2:	les    ebp,FWORD PTR [ecx]
  4154e4:	das    
  4154e5:	add    eax,0x8034a967
  4154ea:	data16 and BYTE PTR [esi-0x66436dd],ch
  4154f1:	aam    0xe8
  4154f3:	fwait
  4154f4:	mov    al,0x78
  4154f6:	sub    ecx,DWORD PTR [ecx+eax*4]
  4154f9:	bound  edx,QWORD PTR [ebp+0x49]
  4154fc:	mov    ?,WORD PTR [ecx]
  4154fe:	les    ecx,FWORD PTR [edx-0x7492b1e4]
  415504:	ret    
  415505:	(bad)  
  415507:	xor    DWORD PTR [ebp+0x70aa2fa7],0x2bdf5c55
  415511:	ins    DWORD PTR es:[edi],dx
  415512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415513:	add    BYTE PTR [ecx+0x56],cl
  415516:	imul   edx,DWORD PTR [ebp+0x4d1dec01],0x2
  41551d:	jp     0x4154ce
  41551f:	fsubr  DWORD PTR [eax]
  415521:	push   esi
  415522:	push   eax
  415523:	je     0x415568
  415525:	sub    eax,0xeea272c1
  41552a:	mov    ecx,0xa65bcc34
  41552f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415530:	cmp    DWORD PTR [ebx+0x530b19fe],ebp
  415536:	or     eax,0xe7df3482
  41553b:	sub    cl,BYTE PTR [eax]
  41553d:	imul   DWORD PTR [esp+esi*4]
  415540:	cmp    al,BYTE PTR [esi-0x7e985d7d]
  415546:	sti    
  415547:	xchg   BYTE PTR [ecx],cl
  415549:	(bad)  
  41554a:	out    dx,eax
  41554b:	xchg   ebx,eax
  41554c:	push   edi
  41554d:	adc    eax,0x26e01861
  415552:	jns    0x415571
  415554:	inc    edx
  415555:	fstp   QWORD PTR [ebx]
  415557:	imul   esi,DWORD PTR [edx+0x28],0x34
  41555b:	(bad)  
  41555d:	cmp    al,0x11
  41555f:	hlt    
  415560:	gs or  eax,0x2122d35d
  415566:	inc    ebp
  415567:	aam    0x2a
  415569:	fist   WORD PTR [eax+edx*1-0x4a0fb617]
  415570:	push   ebp
  415571:	mov    ds:0x5ebb4238,eax
  415576:	pop    esi
  415577:	adc    BYTE PTR [edi],al
  415579:	and    al,bl
  41557b:	adc    ah,BYTE PTR [ecx+esi*4+0x60381587]
  415582:	jbe    0x4155b5
  415584:	add    eax,0xb190169a
  415589:	test   DWORD PTR [edx+eiz*2+0x7cd306d5],0x29b00a6d
  415594:	fisub  WORD PTR [eax]
  415596:	in     eax,dx
  415597:	mov    cl,0xda
  415599:	fnstcw WORD PTR [edx+0x34]
  41559c:	push   ebp
  41559d:	bound  edi,QWORD PTR [eax+edi*2]
  4155a0:	xor    ecx,edx
  4155a2:	mov    al,ds:0xae0acdd0
  4155a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a8:	ficomp DWORD PTR [esi+0x28cb73dd]
  4155ae:	outs   dx,BYTE PTR ds:[esi]
  4155af:	ins    BYTE PTR es:[edi],dx
  4155b0:	int    0xb2
  4155b2:	sub    al,0x10
  4155b4:	inc    edx
  4155b5:	in     eax,dx
  4155b6:	ret    
  4155b7:	iret   
  4155b8:	mov    bh,0xba
  4155ba:	lea    ebp,ds:0x16aa26d0
  4155c0:	add    ebp,0xffffffb7
  4155c3:	scas   eax,DWORD PTR es:[edi]
  4155c4:	sbb    edi,eax
  4155c6:	mov    al,ds:0xcaf1ec52
  4155cb:	sub    DWORD PTR [ebx-0x664715a6],ecx
  4155d1:	dec    esi
  4155d2:	shl    edx,0xd8
  4155d5:	and    dl,0xf1
  4155d8:	mov    DWORD PTR [eax+0x15],esp
  4155db:	push   ss
  4155dc:	into   
  4155dd:	inc    eax
  4155de:	push   ds
  4155df:	xchg   edx,eax
  4155e0:	ret    
  4155e1:	sub    dl,cl
  4155e3:	adc    BYTE PTR [ebx+0x9],cl
  4155e6:	sbb    BYTE PTR [esi],ch
  4155e8:	pop    eax
  4155e9:	adc    al,BYTE PTR [edi+0x447e6b8e]
  4155ef:	sub    esp,DWORD PTR [edx+ebx*8-0x4b05405a]
  4155f6:	sbb    eax,0xed51c7d4
  4155fb:	mov    al,0x4d
  4155fd:	sbb    bh,BYTE PTR [eax+0x460f45a8]
  415603:	shl    BYTE PTR [ebx+ebp*2-0x6c62f1b0],1
  41560a:	retf   
  41560b:	addr16 inc esi
  41560e:	xor    BYTE PTR [edx+0x295541ff],bl
  415614:	popf   
  415615:	leave  
  415616:	push   0x1b36f56f
  41561b:	push   esp
  41561c:	jmp    FWORD PTR [edx]
  41561e:	rcr    BYTE PTR [esi],cl
  415620:	stc    
  415621:	jno    0x41561a
  415623:	test   BYTE PTR [eax+ebx*2],ah
  415626:	xor    al,0xa
  415628:	dec    eax
  415629:	push   ebx
  41562a:	repz ret 0x534f
  41562e:	pusha  
  41562f:	daa    
  415630:	cmp    DWORD PTR [ebp+ebp*8+0x777939d1],edx
  415637:	mov    DWORD PTR [edx+0x50973c5f],0x7bf702b9
  415641:	jb     0x415677
  415643:	push   esp
  415644:	adc    eax,DWORD PTR [ebx+0x54]
  415647:	lds    edx,FWORD PTR [esi-0x34e84ab4]
  41564d:	lea    ebx,[ebx-0x33583894]
  415653:	ins    DWORD PTR es:[edi],dx
  415654:	mov    es,ebp
  415656:	(bad)  
  415657:	loopne 0x4155f2
  415659:	cmp    BYTE PTR [ebx],0xb4
  41565c:	mov    edx,0xf1ec3823
  415661:	mov    esi,0x3cfca789
  415666:	test   eax,0x3d0d5b4e
  41566b:	mov    bh,0x11
  41566d:	inc    edi
  41566e:	leave  
  41566f:	add    ecx,0xffffff8a
  415672:	xchg   esp,eax
  415673:	out    dx,al
  415674:	push   esp
  415675:	fwait
  415676:	imul   edi,DWORD PTR [edx],0x75
  415679:	push   esp
  41567a:	dec    edi
  41567b:	pusha  
  41567c:	pop    ebx
  41567d:	pop    ebp
  41567e:	lea    edx,[ebp+0x73f5c702]
  415684:	cmp    ebp,DWORD PTR ds:0xecb9db33
  41568a:	aad    0xf4
  41568c:	fiadd  WORD PTR [ebp+eax*8+0xd5451ca]
  415693:	or     al,dl
  415695:	mov    dl,0x5c
  415697:	ret    
  415698:	xchg   edi,eax
  415699:	mov    dl,0xf1
  41569b:	dec    edi
  41569c:	hlt    
  41569d:	int3   
  41569e:	xchg   ecx,eax
  41569f:	jg     0x415643
  4156a1:	inc    ecx
  4156a2:	pop    ebp
  4156a3:	repnz mov ebx,0x336cf854
  4156aa:	mov    edx,0x12f733e8
  4156af:	push   esi
  4156b0:	or     al,ah
  4156b2:	cmp    DWORD PTR [ebp+0x6e],0x25a79d12
  4156b9:	call   0x2558b45b
  4156be:	mov    esi,0x317b42e1
  4156c3:	adc    al,0xbe
  4156c5:	jno    0x4156dc
  4156c7:	push   cs
  4156c8:	xchg   ebx,eax
  4156c9:	in     al,dx
  4156ca:	dec    eax
  4156cb:	pop    ebp
  4156cc:	inc    eax
  4156cd:	push   es
  4156ce:	das    
  4156cf:	mov    ebx,0xd0dcf8f2
  4156d4:	cmp    al,0xa0
  4156d6:	push   0x46
  4156d8:	outs   dx,DWORD PTR ds:[esi]
  4156d9:	cli    
  4156da:	stos   DWORD PTR es:[edi],eax
  4156db:	sub    edx,eax
  4156dd:	inc    edi
  4156de:	in     eax,dx
  4156df:	jp     0x415749
  4156e1:	stc    
  4156e2:	cmp    ch,BYTE PTR [edi+eax*1]
  4156e5:	sub    al,0x73
  4156e7:	add    eax,0x9371354f
  4156ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ed:	jbe    0x415753
  4156ef:	retf   
  4156f0:	sub    al,0x34
  4156f2:	push   esi
  4156f3:	adc    edi,DWORD PTR [esp]
  4156f6:	mov    ?,WORD PTR [eax-0x68f0f5a8]
  4156fc:	aam    0xa0
  4156fe:	(bad)  
  4156ff:	mov    eax,ds:0xe0e98430
  415704:	jp     0x4156ac
  415706:	pop    esp
  415707:	addr16 add eax,0xc592beb4
  41570d:	xlat   BYTE PTR ds:[ebx]
  41570e:	xchg   edx,eax
  41570f:	das    
  415710:	pushf  
  415711:	xchg   ebx,eax
  415712:	mov    eax,0x2a16b481
  415717:	call   DWORD PTR [ebx]
  415719:	jle    0x415756
  41571b:	ret    0x32c9
  41571e:	(bad)  [ecx-0x7e]
  415721:	jl     0x4156c9
  415723:	jmp    0x415755
  415725:	jbe    0x4156ec
  415727:	(bad)  
  415728:	in     al,dx
  415729:	dec    ebp
  41572a:	sub    BYTE PTR [ecx-0x6f],0x2
  41572e:	sbb    dl,BYTE PTR [esi]
  415730:	mov    ds:0x7315cf57,al
  415735:	das    
  415736:	lds    ecx,FWORD PTR [esp+esi*2]
  415739:	jb     0x415736
  41573b:	fcom   QWORD PTR [ebx]
  41573d:	int3   
  41573e:	mov    cl,0x68
  415740:	xor    DWORD PTR [ebx+0x3214537d],esp
  415746:	mov    cl,0x15
  415748:	xor    al,0xd1
  41574a:	call   0x10012f9
  41574f:	into   
  415750:	or     edx,DWORD PTR [ebx-0x20f3d31c]
  415756:	cmp    edx,edi
  415758:	push   edx
  415759:	dec    eax
  41575a:	rcl    BYTE PTR [eax-0xd8841d6],cl
  415760:	mov    ebx,0x60ded7b9
  415765:	je     0x4157a2
  415767:	(bad)  
  415768:	(bad)  
  415769:	scas   eax,DWORD PTR es:[edi]
  41576a:	xchg   BYTE PTR [esi+ecx*8+0x4868f77b],ah
  415771:	or     eax,0x534f326b
  415776:	push   0xd
  415778:	pop    es
  415779:	jnp    0x415709
  41577b:	sub    BYTE PTR [ecx-0x22],cl
  41577e:	idiv   cl
  415780:	loope  0x41579a
  415782:	xchg   bl,bl
  415784:	nop
  415785:	mov    esp,0xd3a559dc
  41578a:	add    eax,0x195b2a8e
  41578f:	repz sbb al,0x1
  415792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415793:	rcl    DWORD PTR [edi],0x5c
  415796:	xor    eax,0xed1ffe97
  41579b:	push   esp
  41579c:	pop    ds
  41579d:	into   
  41579e:	push   eax
  41579f:	xchg   ecx,eax
  4157a0:	cmp    edi,ecx
  4157a2:	push   es
  4157a3:	dec    ecx
  4157a4:	or     ebx,DWORD PTR [edx+0x3dd58a17]
  4157aa:	imul   edi,DWORD PTR [edi],0xa0a4eec0
  4157b0:	scas   eax,DWORD PTR es:[edi]
  4157b1:	imul   ebp,DWORD PTR [ecx],0x1306805a
  4157b7:	pushf  
  4157b8:	sub    edi,DWORD PTR [esi]
  4157ba:	add    DWORD PTR [eax-0x60],0x68
  4157be:	cs hlt 
  4157c0:	jmp    0x415798
  4157c2:	fisttp WORD PTR [edx+0x65599b2c]
  4157c8:	pop    edi
  4157c9:	mov    BYTE PTR [edi+0x2],ah
  4157cc:	in     eax,0x81
  4157ce:	ds lahf 
  4157d0:	sub    al,0xe3
  4157d2:	or     cl,BYTE PTR [ebx+0x77da22ae]
  4157d8:	pop    esi
  4157d9:	enter  0x33dd,0x54
  4157dd:	pushf  
  4157de:	pop    es
  4157df:	dec    ebp
  4157e0:	dec    edi
  4157e1:	cmp    edx,DWORD PTR [edx-0x23df4643]
  4157e7:	mov    ecx,0xbbfa2fbe
  4157ec:	mov    ch,0xd6
  4157ee:	push   edi
  4157ef:	adc    al,0x89
  4157f1:	or     ch,BYTE PTR [ebx*2+0x77efaa6e]
  4157f8:	cmp    eax,0x542381da
  4157fd:	in     al,0x86
  4157ff:	iret   
  415800:	inc    esi
  415801:	jle    0x415850
  415803:	dec    ebx
  415804:	cmp    al,0x64
  415806:	mov    fs,WORD PTR [ebp+0x6849b186]
  41580c:	lods   eax,DWORD PTR ds:[esi]
  41580d:	mov    dh,0x66
  41580f:	jbe    0x415845
  415811:	dec    esp
  415812:	sti    
  415813:	inc    esp
  415814:	xchg   esi,eax
  415815:	xor    bh,BYTE PTR [edx]
  415817:	cld    
  415818:	pop    edi
  415819:	jmp    0x554a:0xd08b3f25
  415820:	mov    eax,DWORD PTR [edx-0x65cec32e]
  415826:	xor    ecx,edx
  415828:	jne    0x41581b
  41582a:	test   eax,0x64e8e219
  41582f:	pop    esp
  415830:	aam    0x4d
  415832:	cmp    BYTE PTR [esp+ecx*4+0x64],dl
  415836:	cmp    DWORD PTR [esi-0x6af63187],eax
  41583c:	fsubr  st(4),st
  41583e:	inc    esi
  41583f:	nop
  415840:	push   eax
  415841:	or     edx,DWORD PTR [edi]
  415843:	inc    esp
  415844:	mov    bh,0x53
  415846:	shl    dl,cl
  415848:	push   0x5e8cf07b
  41584d:	xor    bh,BYTE PTR [edx-0x72]
  415850:	jl     0x415869
  415852:	jb     0x415882
  415854:	add    al,0x4e
  415856:	jge    0x415871
  415858:	xor    DWORD PTR [ebx+edx*1],eax
  41585b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41585c:	jns    0x4158dd
  41585e:	outs   dx,DWORD PTR ds:[esi]
  41585f:	inc    edi
  415860:	(bad)  
  415862:	cmp    DWORD PTR [edx-0x1f],0x5d701d51
  415869:	addr16 add bl,al
  41586c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586d:	jg     0x4158a1
  41586f:	mov    edi,0x62315c3f
  415874:	scas   al,BYTE PTR es:[edi]
  415875:	adc    BYTE PTR ds:0x9b8c608e,dh
  41587b:	sub    al,BYTE PTR [esi-0x56]
  41587e:	and    DWORD PTR [ebp+0x7f51b231],0x6eff47f1
  415888:	aam    0xba
  41588a:	popa   
  41588b:	pop    ebp
  41588c:	mov    ds:0x2d0f91ce,eax
  415891:	int3   
  415892:	fdivr  QWORD PTR [edi+0x3c4e4eb9]
  415898:	xchg   ebx,eax
  415899:	loop   0x415886
  41589b:	out    0xc0,eax
  41589d:	js     0x415907
  41589f:	mov    ch,0x24
  4158a1:	ret    0x69d6
  4158a4:	adc    ch,ch
  4158a6:	mov    esp,0x87b8fdcd
  4158ab:	and    BYTE PTR [esi+edx*4],ah
  4158ae:	sahf   
  4158af:	push   eax
  4158b0:	jbe    0x415864
  4158b2:	fisubr WORD PTR [ebx+0x2b64b0e9]
  4158b8:	inc    edx
  4158b9:	sub    ecx,DWORD PTR [eax]
  4158bb:	lds    edi,FWORD PTR [eax]
  4158bd:	xchg   BYTE PTR [edx+0x65],bh
  4158c0:	imul   edx,DWORD PTR [ecx+0x571284da],0xffffffad
  4158c7:	or     al,0x37
  4158c9:	gs (bad) 
  4158cb:	jecxz  0x41585a
  4158cd:	popf   
  4158ce:	imul   edx,DWORD PTR [esi],0xffffff9b
  4158d1:	dec    esp
  4158d2:	ret    
  4158d3:	inc    eax
  4158d4:	out    0xcc,eax
  4158d6:	xchg   edx,eax
  4158d7:	pop    es
  4158d8:	in     eax,0x3d
  4158da:	popf   
  4158db:	retf   
  4158dc:	mov    edi,0x7758ae22
  4158e1:	aaa    
  4158e2:	fbstp  TBYTE PTR [ebx+0x6a]
  4158e5:	pushf  
  4158e6:	and    eax,DWORD PTR [ebx+0x17b6d74d]
  4158ec:	xor    esi,DWORD PTR [ebx+0x69]
  4158ef:	arpl   WORD PTR [edi],di
  4158f1:	jmp    0xa416a2c3
  4158f6:	dec    ebp
  4158f7:	inc    edx
  4158f8:	xchg   edi,eax
  4158f9:	and    BYTE PTR [esi],0x33
  4158fc:	test   BYTE PTR [eax],al
  4158fe:	jns    0x415911
  415900:	fsubr  DWORD PTR [ebx]
  415902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415903:	mov    edx,0xff854741
  415908:	add    ah,BYTE PTR [eax]
  41590a:	ret    
  41590b:	inc    edi
  41590c:	mov    ah,0x60
  41590e:	sub    dh,dl
  415910:	gs gs mov edx,0x980462ef
  415917:	adc    ah,BYTE PTR [ecx+0x79946aab]
  41591d:	mov    ah,0x43
  41591f:	les    edi,FWORD PTR [eax+0x1ff1e2e7]
  415925:	sub    ebx,ecx
  415927:	mov    ds:0xa8f6143f,al
  41592c:	and    eax,0xa8cc0432
  415931:	inc    cl
  415933:	mov    esi,0x42c71854
  415938:	jge    0x4158f3
  41593a:	test   esi,esi
  41593c:	push   esp
  41593d:	aas    
  41593e:	mov    BYTE PTR [edi+eiz*1-0x3322fafb],0x85
  415946:	push   eax
  415947:	mov    ds:0xb7cb473e,al
  41594c:	xchg   BYTE PTR [ecx+0x6fd4c986],al
  415952:	inc    ecx
  415953:	mov    ch,0xe9
  415955:	or     bh,BYTE PTR [ebp-0x75]
  415958:	jp     0x4159a1
  41595a:	not    BYTE PTR [ebx+edx*1]
  41595d:	(bad)  
  41595e:	fdivr  QWORD PTR [edx+0x21]
  415961:	mov    esp,eax
  415963:	or     eax,0xd95a27d2
  415968:	test   al,0x62
  41596a:	jbe    0x41594c
  41596c:	in     eax,0xc4
  41596e:	mov    ebx,0x79fbb5d5
  415973:	mov    eax,ds:0xa2d83fb4
  415978:	in     al,dx
  415979:	xchg   BYTE PTR [esp+ebx*4],dh
  41597c:	leave  
  41597d:	jae    0x41598d
  41597f:	sub    eax,0x88c621e8
  415984:	imul   BYTE PTR [edi-0x3c]
  415987:	pop    esi
  415988:	mov    edi,0x1ead76
  41598d:	and    ebp,ebp
  41598f:	adc    DWORD PTR [edi],ebx
  415991:	xor    eax,0x5708e291
  415996:	(bad)  
  415997:	sbb    BYTE PTR [ecx],bl
  415999:	inc    ecx
  41599a:	loop   0x415982
  41599c:	das    
  41599d:	dec    eax
  41599e:	and    al,0x62
  4159a0:	xchg   esi,eax
  4159a1:	stos   DWORD PTR es:[edi],eax
  4159a2:	jle    0x415995
  4159a4:	mov    WORD PTR [eax+0x70a0ad68],?
  4159aa:	and    DWORD PTR [edx+0x7b61fff3],esi
  4159b0:	aaa    
  4159b1:	push   esp
  4159b2:	push   cs
  4159b3:	arpl   WORD PTR [ebx+0x61b68688],dx
  4159b9:	pop    ss
  4159ba:	fs mov esp,0x33b49f1
  4159c0:	dec    ebx
  4159c1:	or     ah,0xb5
  4159c4:	stos   BYTE PTR es:[edi],al
  4159c5:	jae    0x4159c3
  4159c7:	ins    DWORD PTR es:[edi],dx
  4159c8:	cmp    BYTE PTR [edi+0x64],dl
  4159cb:	(bad)  
  4159cc:	cli    
  4159cd:	jge    0x4159b9
  4159cf:	(bad)  
  4159d0:	sbb    al,0x4c
  4159d2:	or     esp,ebx
  4159d4:	inc    eax
  4159d5:	ins    BYTE PTR es:[edi],dx
  4159d6:	xchg   edx,eax
  4159d7:	repnz cmp al,0x99
  4159da:	xchg   ecx,eax
  4159db:	(bad)  
  4159dd:	aam    0xd
  4159df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e0:	or     bh,BYTE PTR [ebp-0x3a]
  4159e3:	push   ds
  4159e4:	fcompp 
  4159e6:	dec    esi
  4159e7:	rol    DWORD PTR cs:[ebx+0x51],1
  4159eb:	fmul   QWORD PTR [edi+0x415f72b3]
  4159f1:	test   BYTE PTR [esi+ecx*1+0x60],ch
  4159f5:	call   0x4a0abfef
  4159fa:	out    dx,al
  4159fb:	push   eax
  4159fc:	sub    DWORD PTR [esi*8-0x7b3962bd],ebx
  415a03:	dec    eax
  415a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a05:	loop   0x415a64
  415a07:	mov    al,0xdb
  415a09:	in     al,dx
  415a0a:	in     eax,dx
  415a0b:	mov    esp,DWORD PTR [edi]
  415a0d:	push   eax
  415a0e:	lock pop eax
  415a10:	repz enter 0x86ad,0xe3
  415a15:	jmp    0xdbbfa20a
  415a1a:	stc    
  415a1b:	or     BYTE PTR [ecx-0x2c4f8089],dh
  415a21:	push   0x37
  415a23:	xor    edx,DWORD PTR [ecx+ebx*2+0x49]
  415a27:	div    BYTE PTR [edx+0x38]
  415a2a:	shr    BYTE PTR [ecx-0x2f],1
  415a2d:	xchg   cl,ah
  415a2f:	xchg   esp,eax
  415a30:	jg     0x4159ea
  415a32:	dec    ebp
  415a33:	xchg   DWORD PTR [eax+0x39],ecx
  415a36:	ret    0xe37f
  415a39:	or     esp,eax
  415a3b:	inc    edx
  415a3c:	shl    ebp,cl
  415a3e:	adc    al,0x38
  415a40:	ja     0x415ac1
  415a42:	cmp    bl,0x7
  415a45:	sar    DWORD PTR [edx-0xf12e85a],0xc
  415a4c:	sbb    eax,0xd0a6f5d1
  415a51:	pop    es
  415a52:	push   0x26
  415a54:	mov    bh,0x50
  415a56:	sbb    al,0x74
  415a58:	int3   
  415a59:	mov    cl,0x21
  415a5b:	cmp    al,0x38
  415a5d:	pop    ds
  415a5e:	(bad)  
  415a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a60:	or     esp,DWORD PTR [ecx]
  415a62:	and    BYTE PTR [edx],cl
  415a64:	inc    ecx
  415a65:	jo     0x415a39
  415a67:	les    edi,FWORD PTR [eax+0x193e312f]
  415a6d:	xchg   ecx,eax
  415a6e:	sub    DWORD PTR ds:0xa6fc8004,ecx
  415a74:	in     al,0xc9
  415a76:	sub    dh,BYTE PTR [eiz*1-0x12c36f20]
  415a7d:	xor    ebx,DWORD PTR ds:0x3840
  415a82:	(bad)  
  415a84:	push   ds
  415a85:	aas    
  415a86:	nop
  415a87:	mov    ah,0xba
  415a89:	inc    ecx
  415a8a:	test   al,0x7d
  415a8c:	in     eax,0x96
  415a8e:	inc    ebp
  415a90:	push   0x61
  415a92:	inc    edx
  415a93:	outs   dx,BYTE PTR ds:[esi]
  415a94:	mov    ch,0xdd
  415a96:	out    0x5f,eax
  415a98:	inc    esi
  415a99:	xchg   DWORD PTR [eax+0x2c],eax
  415a9c:	mov    eax,0x1b6173f
  415aa1:	mov    bh,0xa8
  415aa3:	xchg   edx,eax
  415aa4:	aad    0xf0
  415aa6:	scas   eax,DWORD PTR es:[edi]
  415aa7:	dec    ebp
  415aa8:	ins    DWORD PTR es:[edi],dx
  415aa9:	std    
  415aaa:	inc    ebx
  415aab:	mov    DWORD PTR [ebx],esi
  415aad:	fdivr  DWORD PTR [esi]
  415aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ab0:	adc    bh,bh
  415ab2:	ins    BYTE PTR es:[edi],dx
  415ab3:	mov    dl,BYTE PTR [ebp-0x15]
  415ab6:	pop    ss
  415ab7:	inc    edi
  415ab8:	mov    bh,0x0
  415aba:	rcr    edx,0xc2
  415abd:	ret    
  415abe:	adc    dh,BYTE PTR [esi+0x23]
  415ac1:	je     0x415b23
  415ac3:	imul   edx,DWORD PTR [edx+0x48b1a21b],0xffffffc3
  415aca:	inc    edx
  415acb:	aaa    
  415acc:	aaa    
  415acd:	ja     0x415ae2
  415acf:	sahf   
  415ad0:	jns    0x415ae8
  415ad2:	mov    cl,0x8b
  415ad4:	dec    ecx
  415ad5:	loope  0x415a65
  415ad7:	pop    ebp
  415ad8:	xor    BYTE PTR [edx],0x57
  415adb:	add    eax,0x12f83877
  415ae0:	pushf  
  415ae1:	xor    al,0xdd
  415ae3:	add    BYTE PTR [ecx+0x38],dl
  415ae6:	fidiv  WORD PTR [ebp-0x64]
  415ae9:	es or  dl,BYTE PTR cs:[esi]
  415aed:	mov    esp,0x2a4704f9
  415af2:	sub    al,0x7b
  415af4:	xchg   edx,eax
  415af5:	hlt    
  415af6:	mov    edx,0xc5ca46f
  415afb:	mov    cl,0x5
  415afd:	cld    
  415afe:	std    
  415aff:	inc    ecx
  415b00:	xchg   DWORD PTR ds:[eax+0x77a0c211],ecx
  415b07:	pop    ds
  415b08:	iret   
  415b09:	std    
  415b0a:	adc    ah,0x35
  415b0d:	push   ds
  415b0e:	stos   BYTE PTR es:[edi],al
  415b0f:	retf   
  415b10:	pop    ss
  415b11:	push   ebx
  415b12:	mov    ds:0xa8a0f4a3,eax
  415b17:	div    DWORD PTR [esi+0x3064fbbd]
  415b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b1e:	(bad)  
  415b1f:	imul   BYTE PTR [eax+0x75]
  415b22:	and    al,0x73
  415b24:	mov    ds:0x19c922b5,eax
  415b29:	push   es
  415b2a:	inc    ebp
  415b2b:	sbb    eax,0x266ec594
  415b30:	push   edx
  415b31:	xor    ah,dl
  415b33:	add    ch,BYTE PTR [eax+ebp*2]
  415b36:	ds xor ebx,ebx
  415b39:	nop
  415b3a:	push   ecx
  415b3b:	je     0x415afc
  415b3d:	test   al,0x62
  415b3f:	lods   al,BYTE PTR ds:[esi]
  415b40:	adc    al,0x2b
  415b42:	push   edx
  415b43:	sbb    edi,DWORD PTR [ebx]
  415b45:	out    0x67,eax
  415b47:	inc    edx
  415b48:	push   ebx
  415b49:	push   esp
  415b4a:	jmp    0x8f52:0x93090265
  415b51:	mov    al,0xc2
  415b53:	adc    edx,DWORD PTR [ebx+0x5b15c910]
  415b59:	fst    QWORD PTR [ebp-0x22ffef9c]
  415b5f:	mov    ds:0xd540220c,al
  415b64:	lods   al,BYTE PTR ds:[esi]
  415b65:	jmp    0x415aef
  415b67:	outs   dx,BYTE PTR ds:[esi]
  415b68:	adc    al,0x22
  415b6a:	dec    esp
  415b6b:	add    BYTE PTR [esi+0x6b],cl
  415b6e:	int3   
  415b6f:	pop    ebx
  415b70:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b72:	daa    
  415b73:	fs inc ebx
  415b75:	and    al,0x5b
  415b77:	js     0x415b61
  415b79:	jmp    0xc0b3:0xb9a009f3
  415b80:	daa    
  415b81:	daa    
  415b82:	mov    dh,0x84
  415b84:	cmp    BYTE PTR [ebp+0x14],ah
  415b87:	in     eax,dx
  415b88:	lds    ebx,FWORD PTR [esp-0x7ba5cab4]
  415b8f:	test   eax,0x72693920
  415b94:	and    eax,0x2c16fb44
  415b99:	mov    ecx,0xe805b1b0
  415b9e:	cmp    bl,al
  415ba0:	icebp  
  415ba1:	jg     0x415c1a
  415ba3:	fnsave [ebp+ebx*2-0x25]
  415ba7:	xchg   edi,eax
  415ba8:	shl    BYTE PTR ds:0x91e1e202,1
  415bae:	loope  0x415b6d
  415bb0:	je     0x415b56
  415bb2:	xor    ch,BYTE PTR [edx]
  415bb4:	jnp    0x415be7
  415bb6:	lea    ebp,[edx-0x18c38241]
  415bbc:	or     al,BYTE PTR [eax-0x18]
  415bbf:	out    dx,al
  415bc0:	ja     0x415b53
  415bc2:	xor    BYTE PTR [esi],ah
  415bc4:	outs   dx,DWORD PTR ds:[esi]
  415bc5:	dec    ebx
  415bc6:	mov    bl,0xa1
  415bc8:	jle    0x415b8d
  415bca:	jne    0x415bda
  415bcc:	inc    esp
  415bcd:	fadd   QWORD PTR [ebx-0x5ddfb0a]
  415bd3:	mov    dl,0x96
  415bd5:	push   ebp
  415bd6:	loope  0x415c2c
  415bd8:	mov    ebx,0x5e121783
  415bdd:	pop    es
  415bde:	call   0xd61f:0x8d6fda32
  415be5:	iret   
  415be6:	pop    ds
  415be7:	jo     0x415c55
  415be9:	dec    edi
  415bea:	sar    BYTE PTR [ecx+0x18],1
  415bed:	push   es
  415bee:	cmp    al,0x1a
  415bf0:	and    DWORD PTR [edx+0x49],esi
  415bf3:	shl    BYTE PTR [edi],0xb1
  415bf6:	popf   
  415bf7:	xchg   BYTE PTR [eax-0x71a63057],dh
  415bfd:	jecxz  0x415beb
  415bff:	mov    eax,0xab96b81e
  415c04:	jp     0x415c00
  415c06:	jmp    0x53e84e5c
  415c0b:	mov    edi,0x65e988d6
  415c10:	push   esi
  415c11:	aad    0x89
  415c13:	xchg   ecx,eax
  415c14:	mov    esi,0x4ee6632d
  415c19:	popf   
  415c1a:	adc    ah,cl
  415c1c:	mov    ah,0x81
  415c1e:	dec    ebx
  415c1f:	add    BYTE PTR [si-0x10],bh
  415c23:	jae    0x415bb3
  415c25:	dec    eax
  415c26:	jmp    0x24ca:0x5608c42
  415c2d:	pop    edi
  415c2e:	mov    esi,DWORD PTR [esi]
  415c30:	inc    ecx
  415c31:	cmc    
  415c32:	in     al,dx
  415c33:	pop    ebx
  415c34:	mov    edx,0x403a6da4
  415c39:	mov    edi,0xf22f373b
  415c3e:	sub    eax,0xbcf43c7f
  415c43:	dec    edx
  415c44:	(bad)  
  415c45:	dec    esp
  415c46:	call   0x40b2:0xa61dbb04
  415c4d:	je     0x415bd7
  415c4f:	jge    0x415c19
  415c51:	cmp    BYTE PTR [esi],cl
  415c53:	fcom   DWORD PTR [eax]
  415c55:	mov    ebp,0x57b49008
  415c5a:	jmp    0xdd0e:0x81156ca7
  415c61:	mov    esp,0x895c2ae1
  415c66:	into   
  415c67:	shl    BYTE PTR [edx+0x3e],1
  415c6a:	xor    ebp,DWORD PTR [ecx]
  415c6c:	xlat   BYTE PTR ds:[ebx]
  415c6d:	stc    
  415c6e:	sbb    BYTE PTR [eax+0x2aba7f72],cl
  415c74:	stos   DWORD PTR es:[edi],eax
  415c75:	adc    DWORD PTR [edx-0x127bab47],esi
  415c7b:	sbb    BYTE PTR ds:0x5f31293b,cl
  415c81:	sub    eax,0x9a5780aa
  415c86:	jnp    0x415c87
  415c88:	or     eax,0x909323aa
  415c8d:	sub    dl,0x58
  415c90:	pop    ss
  415c91:	jmp    0x1083386f
  415c96:	ds stos BYTE PTR es:[edi],al
  415c98:	jg     0x415c85
  415c9a:	mov    dl,0x77
  415c9c:	jnp    0x415cac
  415c9e:	sub    eax,0xf77f3b4b
  415ca3:	mov    BYTE PTR [edx+edx*1],0x66
  415ca7:	in     eax,dx
  415ca8:	add    cl,BYTE PTR [ebx+0x4a]
  415cab:	inc    ebx
  415cac:	push   0xe434d3c8
  415cb1:	scas   eax,DWORD PTR es:[edi]
  415cb2:	xchg   edi,eax
  415cb3:	js     0x415ce6
  415cb5:	xchg   ebx,eax
  415cb6:	inc    edx
  415cb7:	sbb    BYTE PTR [ebx],al
  415cb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cba:	sub    BYTE PTR [eax],cl
  415cbc:	rcl    DWORD PTR [esi],1
  415cbe:	test   DWORD PTR [ebx],esi
  415cc0:	lea    si,[edx]
  415cc3:	jnp    0x415cf7
  415cc5:	rcl    BYTE PTR [eax-0x1b],0x29
  415cc9:	pop    edi
  415cca:	daa    
  415ccb:	scas   eax,DWORD PTR es:[edi]
  415ccc:	stos   BYTE PTR es:[edi],al
  415ccd:	jae    0x415cf6
  415ccf:	jle    0x415d07
  415cd1:	and    bl,bl
  415cd3:	fmul   st(6),st
  415cd5:	push   0x3332651e
  415cda:	push   ds
  415cdb:	pop    ebp
  415cdc:	ins    BYTE PTR es:[edi],dx
  415cdd:	or     eax,0xdcebcbf4
  415ce2:	int    0x15
  415ce4:	jg     0x415c68
  415ce6:	push   esp
  415ce7:	xchg   BYTE PTR [eax],bh
  415ce9:	lods   al,BYTE PTR ds:[esi]
  415cea:	rcl    DWORD PTR [ebp-0x7db49b94],cl
  415cf0:	and    BYTE PTR [edi-0x4a99cd39],0xb8
  415cf7:	jmp    0xa919606e
  415cfc:	data16 mov bl,0x94
  415cff:	out    dx,eax
  415d00:	push   0xfffffffc
  415d02:	int3   
  415d03:	adc    cl,bl
  415d05:	jle    0x415d59
  415d07:	sti    
  415d08:	and    eax,0x4e4dfbac
  415d0d:	xchg   ecx,eax
  415d0e:	mov    ch,0x42
  415d10:	mul    DWORD PTR [ebp-0x26]
  415d13:	adc    al,0x1f
  415d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d16:	or     al,0x1d
  415d18:	and    ebx,edx
  415d1a:	push   ds
  415d1b:	push   0xffffff92
  415d1d:	cdq    
  415d1e:	sti    
  415d1f:	mov    ecx,0x5dec2827
  415d24:	push   edi
  415d25:	pop    ss
  415d26:	push   ebp
  415d27:	add    dh,BYTE PTR [edx+esi*8-0x7a]
  415d2b:	ror    ch,cl
  415d2d:	ret    
  415d2e:	or     eax,0xbc34c6e7
  415d33:	lea    esi,[ebp-0x3]
  415d36:	lahf   
  415d37:	(bad)  
  415d38:	hlt    
  415d39:	imul   ebp,DWORD PTR [edi-0x27d477e3],0x7c
  415d40:	jg     0x415cc6
  415d42:	in     eax,0xf3
  415d44:	cmp    bl,BYTE PTR [ebx]
  415d46:	ud2    
  415d48:	(bad)  [ecx]
  415d4a:	std    
  415d4b:	popa   
  415d4c:	or     eax,0x7c025c6c
  415d51:	xchg   esi,eax
  415d53:	dec    edx
  415d54:	cmp    dl,BYTE PTR [ebx+0x5e665134]
  415d5a:	inc    esp
  415d5b:	xchg   DWORD PTR [ebp+0x76],eax
  415d5e:	(bad)  
  415d5f:	fcomp  QWORD PTR [esi-0x4fc587cb]
  415d65:	xchg   ebp,eax
  415d66:	sbb    ch,BYTE PTR [eax-0x37]
  415d69:	iret   
  415d6a:	clc    
  415d6b:	cld    
  415d6c:	fmul   DWORD PTR [bp+si+0x48e6]
  415d71:	jb     0x415d46
  415d73:	ror    cl,cl
  415d75:	jp     0x415dd6
  415d77:	xchg   esi,eax
  415d78:	out    dx,eax
  415d79:	enter  0x4f03,0x7b
  415d7d:	sbb    ch,BYTE PTR [ecx]
  415d7f:	xchg   ecx,eax
  415d80:	cld    
  415d81:	xorps  xmm4,xmm5
  415d84:	mov    WORD PTR [edx+0x61],?
  415d87:	mov    bh,0x1c
  415d89:	and    al,0x72
  415d8b:	xor    DWORD PTR [ebp-0x6e],ebp
  415d8e:	repnz mov dh,0x11
  415d91:	add    al,0x88
  415d93:	push   0x3b
  415d95:	mov    DWORD PTR [edi-0x12775e08],edx
  415d9b:	mov    ?,WORD PTR [eax+0x7672b2d6]
  415da1:	cmp    DWORD PTR [ecx],ebx
  415da3:	mov    cl,0xf5
  415da5:	retf   0xb082
  415da8:	shr    DWORD PTR [edx+ecx*1-0x55],1
  415dac:	inc    ecx
  415dad:	dec    eax
  415dae:	add    ebx,edx
  415db0:	popa   
  415db1:	add    DWORD PTR [edx-0x340af915],ebx
  415db7:	mov    bh,0xd2
  415db9:	dec    eax
  415dba:	jmp    0xa4b8:0x24ee5bf0
  415dc1:	mov    WORD PTR [edx+0x431a6c0f],ss
  415dc7:	lods   eax,DWORD PTR ds:[esi]
  415dc8:	repnz test eax,0x4175fd56
  415dce:	push   ebp
  415dcf:	sub    edi,DWORD PTR [esi]
  415dd1:	sbb    eax,esp
  415dd3:	mov    bl,BYTE PTR [esi]
  415dd5:	cld    
  415dd6:	pop    esp
  415dd7:	mov    esp,0xd3843a7e
  415ddc:	pop    edi
  415ddd:	test   al,0x77
  415ddf:	sbb    DWORD PTR [ebp+0x6c],ebx
  415de2:	pop    edx
  415de3:	pushf  
  415de4:	jl     0x415e1f
  415de6:	mov    eax,ds:0x785fd254
  415deb:	addr16 loopne 0x415de0
  415dee:	jmp    0xc368fd86
  415df3:	xchg   BYTE PTR gs:[edx+eax*2],ah
  415df7:	inc    edi
  415df8:	xor    edi,DWORD PTR [edx]
  415dfa:	inc    ebp
  415dfb:	jmp    0x415e2d
  415dfd:	dec    esp
  415dfe:	pop    ebx
  415dff:	mov    ebp,0xfeccc809
  415e04:	pop    ebp
  415e05:	lock xchg BYTE PTR [ebx+ebp*4+0x7a],bh
  415e0a:	rdmsr  
  415e0c:	mov    ch,dh
  415e0e:	iret   
  415e0f:	mov    esp,0xb2cf1655
  415e14:	or     ecx,edx
  415e16:	les    ecx,FWORD PTR [eax]
  415e18:	fstp   st(7)
  415e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e1b:	lahf   
  415e1c:	add    al,0x45
  415e1e:	es stos BYTE PTR es:[edi],al
  415e20:	push   0x227aa3a6
  415e25:	xchg   BYTE PTR [edx+0x4df03a8],dh
  415e2b:	stc    
  415e2c:	mov    edx,0xb031ab82
  415e31:	inc    esp
  415e32:	in     al,0xd2
  415e34:	call   0xe8e4847e
  415e39:	xchg   DWORD PTR [ebp+edi*1-0x35bdb3e0],esi
  415e40:	push   ds
  415e41:	xchg   ecx,eax
  415e42:	dec    edx
  415e43:	fucomip st,st(0)
  415e45:	xor    eax,edi
  415e47:	adc    eax,0x12358715
  415e4c:	(bad)  
  415e4d:	pop    eax
  415e4e:	sbb    al,0xc5
  415e50:	pop    esi
  415e51:	mov    eax,0x54bba357
  415e56:	add    BYTE PTR [esi],dl
  415e58:	and    al,0x2c
  415e5a:	or     al,BYTE PTR [ebx-0x1b683831]
  415e60:	lods   eax,DWORD PTR ds:[esi]
  415e61:	loopne 0x415e1c
  415e63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e64:	push   esp
  415e65:	outs   dx,DWORD PTR ds:[esi]
  415e66:	das    
  415e67:	dec    eax
  415e68:	inc    esp
  415e69:	inc    esp
  415e6a:	imul   edx,DWORD PTR [eax],0x45a9a462
  415e70:	and    al,0xc1
  415e72:	mov    bh,0xe3
  415e74:	adc    eax,DWORD PTR [edi-0x3fc4c504]
  415e7a:	dec    esi
  415e7b:	das    
  415e7c:	setne  BYTE PTR [esi]
  415e7f:	mov    ecx,0xf887da45
  415e84:	out    0x23,eax
  415e86:	sbb    esi,edi
  415e88:	mov    ds:0xf2eab16d,eax
  415e8d:	rol    BYTE PTR [edi+0x4c2ba6f6],0x2c
  415e94:	inc    bh
  415e96:	and    bl,BYTE PTR [edi+eax*4]
  415e99:	data16 aaa 
  415e9b:	push   esi
  415e9c:	cmp    eax,DWORD PTR ds:0x96d20c25
  415ea2:	pop    ds
  415ea3:	outs   dx,BYTE PTR ds:[esi]
  415ea4:	shl    DWORD PTR [eax+eiz*8+0x4997f8ec],cl
  415eab:	aas    
  415eac:	or     BYTE PTR [eax-0x308810b],ch
  415eb2:	scas   eax,DWORD PTR es:[edi]
  415eb3:	sbb    al,ch
  415eb5:	lods   eax,DWORD PTR ds:[esi]
  415eb6:	jmpw   0x1874
  415eba:	inc    edx
  415ebb:	data16 test BYTE PTR gs:[ecx],ah
  415ebf:	test   eax,0xff1c9c08
  415ec4:	scas   eax,DWORD PTR es:[edi]
  415ec5:	inc    ecx
  415ec6:	lods   eax,DWORD PTR ds:[esi]
  415ec7:	push   edx
  415ec8:	and    dl,BYTE PTR [edx-0x51]
  415ecb:	add    edx,DWORD PTR [edi+0x77]
  415ece:	sub    al,0x4b
  415ed0:	je     0x415f37
  415ed2:	dec    ecx
  415ed3:	xchg   ebp,eax
  415ed4:	(bad)  
  415ed5:	call   0x823025b6
  415eda:	sti    
  415edb:	(bad)  
  415edc:	(bad)  [edx]
  415ede:	test   BYTE PTR [edi-0x15ace539],dl
  415ee4:	test   al,0x88
  415ee6:	jo     0x415f63
  415ee8:	ja     0x415e7d
  415eea:	loope  0x415e6f
  415eec:	push   esp
  415eed:	lock scas eax,DWORD PTR es:[edi]
  415eef:	jo     0x415e82
  415ef1:	mov    cl,BYTE PTR [edi]
  415ef3:	push   ds
  415ef4:	adc    dh,bh
  415ef6:	mov    bl,dl
  415ef8:	cmp    esp,edi
  415efa:	xor    eax,0xeeddb8dd
  415eff:	test   al,0xdc
  415f01:	mov    bh,0xe9
  415f03:	pop    eax
  415f04:	xchg   BYTE PTR [eax],bh
  415f06:	lahf   
  415f07:	not    BYTE PTR [esp+edx*4+0x1d]
  415f0b:	xchg   edx,eax
  415f0c:	add    edi,DWORD PTR [edx+0x3d]
  415f0f:	xchg   ebx,eax
  415f10:	xchg   ebp,eax
  415f11:	mov    ebx,0x4ee64b0c
  415f16:	mov    bh,0x71
  415f18:	arpl   WORD PTR [ebx-0x5c4687b4],ax
  415f1e:	out    dx,eax
  415f1f:	sub    DWORD PTR [ebp-0x5f],ebp
  415f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f23:	mov    edx,0x27a4a63a
  415f28:	enter  0x3ea3,0xe4
  415f2c:	pop    ebx
  415f2d:	stc    
  415f2e:	mov    DWORD PTR [esi-0x23c64e9f],0xea9fec5d
  415f38:	in     eax,dx
  415f39:	iret   
  415f3a:	xor    esp,esi
  415f3c:	and    DWORD PTR [ebx-0x23fe02f4],ebx
  415f42:	sub    cl,BYTE PTR [ecx+0x38]
  415f45:	dec    ebx
  415f46:	xor    dh,bh
  415f48:	inc    edi
  415f49:	dec    edi
  415f4a:	fimul  WORD PTR [ecx]
  415f4c:	add    DWORD PTR [ebx*4+0x4a1ce6ee],esp
  415f53:	sbb    ecx,DWORD PTR [esi]
  415f55:	loope  0x415fca
  415f57:	pop    eax
  415f58:	xor    BYTE PTR [ebx-0x7b929656],bh
  415f5e:	scas   al,BYTE PTR es:[edi]
  415f5f:	scas   al,BYTE PTR es:[edi]
  415f60:	inc    edi
  415f61:	loop   0x415f4b
  415f63:	cmp    eax,0x49d9c3e0
  415f68:	pop    esi
  415f69:	jmp    0x2aa36cfa
  415f6e:	test   DWORD PTR [edx+0x5],edi
  415f71:	push   ebx
  415f72:	cld    
  415f73:	aam    0xe1
  415f75:	lahf   
  415f76:	ss loop 0x415fb0
  415f79:	jp     0x415f79
  415f7b:	jb     0x415fde
  415f7d:	add    al,0xf6
  415f7f:	sbb    BYTE PTR [eax],ch
  415f81:	addr16 or eax,0xab511c2e
  415f87:	push   ecx
  415f88:	xchg   edx,eax
  415f89:	dec    ebp
  415f8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f8b:	sub    ch,al
  415f8d:	test   eax,0xca82b984
  415f92:	clc    
  415f93:	jbe    0x415fbc
  415f95:	mov    DWORD PTR [esi],esi
  415f97:	adc    DWORD PTR [eax+0x3ead705d],edi
  415f9d:	pop    eax
  415f9e:	push   edi
  415f9f:	mov    ds:0x553aa9ca,eax
  415fa4:	icebp  
  415fa5:	jge    0x415f58
  415fa7:	aaa    
  415fa8:	out    0x20,eax
  415faa:	and    eax,0x12c5ec58
  415faf:	and    al,0x30
  415fb1:	sbb    BYTE PTR [esi-0x3196960e],bh
  415fb7:	pop    ebx
  415fb8:	add    al,0x86
  415fba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fbb:	cmp    dh,BYTE PTR [ebx+edi*1+0x26f9c4cd]
  415fc2:	mov    dh,0x34
  415fc4:	add    al,BYTE PTR [ebx-0x78]
  415fc7:	and    bh,BYTE PTR [eax+esi*8+0x76fbbb]
  415fce:	inc    ebx
  415fcf:	jo     0x415f93
  415fd1:	les    ebp,FWORD PTR ds:0xdd4dbac7
  415fd7:	xor    eax,0xc44b14e7
  415fdc:	adc    ebp,DWORD PTR [eax-0x2a6a6ad0]
  415fe2:	ficom  DWORD PTR [ecx-0x7c]
  415fe5:	stos   BYTE PTR es:[edi],al
  415fe6:	xchg   ecx,eax
  415fe7:	outs   dx,BYTE PTR ds:[esi]
  415fe8:	cmp    esp,DWORD PTR [edx+eax*2-0x67]
  415fec:	push   eax
  415fed:	sbb    ch,0xd
  415ff0:	int3   
  415ff1:	pop    ebp
  415ff2:	int    0x18
  415ff4:	and    DWORD PTR [edx],esi
  415ff6:	and    BYTE PTR [edi+0x38afca2b],bh
  415ffc:	mov    ds:0x6f4e7e12,eax
  416001:	inc    esp
  416002:	push   edx
  416003:	push   edx
  416004:	jl     0x416058
  416006:	stc    
  416007:	and    al,0x36
  416009:	aad    0xf8
  41600b:	test   BYTE PTR [esp+ebx*4+0x61],0xd6
  416010:	fcomip st,st(2)
  416012:	sub    eax,DWORD PTR [edx+0x9]
  416015:	scas   al,BYTE PTR es:[edi]
  416016:	add    al,0xa3
  416018:	sahf   
  416019:	and    BYTE PTR [edx+0x3edec0f3],bh
  41601f:	push   0x78170acd
  416024:	clc    
  416025:	clc    
  416026:	fs lock std 
  416029:	popf   
  41602a:	lods   eax,DWORD PTR ds:[esi]
  41602b:	or     eax,0xb1be7742
  416030:	and    DWORD PTR [ebp-0x76cc853f],0xee96d94e
  41603a:	xchg   esp,eax
  41603b:	ins    DWORD PTR es:[edi],dx
  41603c:	push   esi
  41603d:	repnz push esi
  41603f:	inc    edx
  416040:	jnp    0x415fce
  416042:	std    
  416043:	ret    0x2452
  416046:	(bad)  
  416047:	pusha  
  416048:	mov    ebx,0x3934f3b8
  41604d:	mov    DWORD PTR ss:[ecx-0x8],ecx
  416051:	cmp    al,0xb0
  416053:	int    0x9b
  416055:	aam    0x4a
  416057:	stos   BYTE PTR es:[edi],al
  416058:	into   
  416059:	lea    edx,[eax+edx*2-0x47]
  41605d:	xchg   ecx,eax
  41605e:	data16 (bad) 
  416060:	mov    ebx,0x83985a57
  416065:	div    DWORD PTR [ecx-0x46]
  416068:	pop    es
  416069:	or     dl,BYTE PTR [eax+0x37]
  41606c:	mov    edx,0x5330ad6c
  416071:	arpl   WORD PTR [edi],bx
  416073:	and    ch,BYTE PTR [eax+0x24]
  416076:	pop    ebx
  416077:	jb     0x4160e6
  416079:	mov    al,0x8f
  41607b:	mov    esi,0x649d8ae6
  416080:	stos   DWORD PTR es:[edi],eax
  416081:	lods   eax,DWORD PTR ds:[esi]
  416082:	test   esi,edx
  416084:	stos   DWORD PTR es:[edi],eax
  416085:	cs dec ecx
  416087:	cmp    edx,DWORD PTR [ecx-0x21ffb5c9]
  41608d:	xchg   ecx,eax
  41608e:	fidiv  WORD PTR [esi-0x4d]
  416091:	das    
  416092:	das    
  416093:	arpl   WORD PTR [ebx+0x5e],bp
  416096:	mov    esi,0x92429bc2
  41609b:	mov    eax,ds:0xd773b922
  4160a0:	push   edx
  4160a1:	push   es
  4160a2:	jb     0x4160ee
  4160a4:	pop    esp
  4160a5:	in     al,0xce
  4160a7:	dec    edx
  4160a8:	or     esi,DWORD PTR [ebp-0x3370c9ff]
  4160ae:	fidivr WORD PTR [edi]
  4160b0:	into   
  4160b1:	mov    al,ds:0x5613ff72
  4160b6:	xchg   esp,eax
  4160b7:	push   ecx
  4160b8:	es (bad) 
  4160ba:	(bad)  
  4160bb:	mov    ah,0xdc
  4160bd:	aas    
  4160be:	jo     0x416043
  4160c0:	inc    edi
  4160c1:	out    0x3c,al
  4160c3:	test   bh,dh
  4160c5:	mov    cl,0xdb
  4160c7:	into   
  4160c8:	retf   0x1116
  4160cb:	popf   
  4160cc:	lea    ebx,[esi]
  4160ce:	mov    edi,ebp
  4160d0:	cmp    ebx,ecx
  4160d2:	repz add eax,esi
  4160d5:	mov    al,ds:0x7ed1789f
  4160da:	fucomip st,st(2)
  4160dc:	xchg   ebp,eax
  4160dd:	(bad)
  4160e0:	scas   eax,DWORD PTR es:[edi]
  4160e1:	inc    ecx
  4160e2:	and    DWORD PTR [ecx-0x2462b1d8],edx
  4160e8:	bound  edx,QWORD PTR [eax+0x17e75e09]
  4160ee:	xchg   cl,dh
  4160f0:	adc    eax,0x6c2cee0f
  4160f5:	mov    bh,BYTE PTR [edi]
  4160f7:	dec    edx
  4160f8:	retf   
  4160f9:	cmc    
  4160fa:	xchg   ebx,eax
  4160fb:	inc    edi
  4160fc:	addr16 push eax
  4160fe:	sbb    esi,DWORD PTR [ecx-0xf619bbe]
  416104:	out    dx,eax
  416105:	pushf  
  416106:	popa   
  416107:	cmp    DWORD PTR [edi+esi*1+0x577fb376],eax
  41610e:	jmp    0x823e:0x4789f544
  416115:	sub    BYTE PTR [eax],ah
  416117:	stos   BYTE PTR es:[edi],al
  416118:	dec    esi
  416119:	jb     0x416106
  41611b:	pushf  
  41611c:	pop    esp
  41611d:	lock or cl,BYTE PTR [ebx-0x2e]
  416121:	shr    DWORD PTR [eax+0x1911178c],0xd3
  416128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416129:	jecxz  0x416182
  41612b:	xor    DWORD PTR [eax-0x3],ebx
  41612e:	mov    al,ds:0xcff7e16a
  416133:	into   
  416134:	mov    bh,0x67
  416136:	or     al,0x69
  416138:	jne    0x41617f
  41613a:	pop    eax
  41613b:	mov    ch,0x50
  41613d:	mov    ch,0x45
  41613f:	lock pop eax
  416141:	or     edx,DWORD PTR [eax]
  416143:	dec    edi
  416144:	xor    DWORD PTR [ecx-0x17d351c5],0x6b
  41614b:	or     al,0xcc
  41614d:	xchg   edx,eax
  41614e:	mov    ds:0x2c13f061,al
  416153:	pop    esp
  416154:	lds    edx,FWORD PTR [eax+0x6801c970]
  41615a:	dec    edi
  41615b:	xor    ecx,0xb35473ae
  416161:	fadd   QWORD PTR [eax+0x7171aa45]
  416167:	jmp    0xf1ed:0x9eb676a9
  41616e:	jle    0x41618d
  416170:	inc    edi
  416171:	and    eax,0x87afe214
  416176:	scas   eax,DWORD PTR es:[edi]
  416177:	mov    edx,0xa551dc34
  41617c:	call   0xbe0d:0x2d4b17d4
  416183:	mov    bl,0xdd
  416185:	call   0xb00714f2
  41618a:	jmp    0x416192
  41618c:	aad    0xc5
  41618e:	call   DWORD PTR [edi-0x24]
  416191:	sub    ebx,ecx
  416193:	ret    
  416194:	mov    dl,0x38
  416196:	sub    esp,DWORD PTR [ecx+0x2c]
  416199:	(bad)  
  41619a:	push   ebp
  41619b:	and    BYTE PTR [ecx+eiz*4-0x5a],ah
  41619f:	jnp    0x4161dc
  4161a1:	shl    dl,1
  4161a3:	repnz daa 
  4161a5:	(bad)  
  4161a7:	jle    0x41616c
  4161a9:	and    cl,BYTE PTR [edi]
  4161ab:	mov    ds:0x4dff9226,al
  4161b0:	mov    ?,WORD PTR [ebx-0x7c]
  4161b3:	int    0xf7
  4161b5:	daa    
  4161b6:	aaa    
  4161b7:	out    dx,eax
  4161b8:	lock adc DWORD PTR es:[edi+0x336a6d65],edi
  4161c0:	or     DWORD PTR [ebx-0x9],esp
  4161c3:	cdq    
  4161c4:	push   ebx
  4161c5:	shl    DWORD PTR [ebx+0x47],1
  4161c8:	dec    ebp
  4161c9:	cdq    
  4161ca:	or     ah,BYTE PTR [edi-0x1d00acab]
  4161d0:	push   eax
  4161d1:	(bad)  
  4161d2:	popa   
  4161d3:	or     DWORD PTR [ebp+0x48],esp
  4161d6:	gs mov esi,0xcf4456b7
  4161dc:	push   eax
  4161dd:	mov    ah,dl
  4161df:	mov    ch,0xbd
  4161e1:	or     eax,0x4fb72265
  4161e6:	xchg   BYTE PTR [esp+ebx*4],bh
  4161e9:	sub    BYTE PTR [ecx],bl
  4161eb:	lods   eax,DWORD PTR ds:[esi]
  4161ec:	cmp    BYTE PTR [eax],ah
  4161ee:	push   edi
  4161ef:	add    al,0x73
  4161f1:	js     0x4161e3
  4161f3:	sbb    eax,0x3f0cc94c
  4161f8:	popa   
  4161f9:	jnp    0x416236
  4161fb:	and    BYTE PTR [ebx-0xb],ch
  4161fe:	sub    al,0xac
  416200:	outs   dx,DWORD PTR ds:[esi]
  416201:	jg     0x4161b2
  416203:	(bad)  
  416204:	and    eax,esp
  416206:	pop    ds
  416207:	test   al,0x10
  416209:	(bad)  
  41620a:	(bad)  
  41620c:	repz clc 
  41620e:	mov    ecx,0xf881064c
  416213:	fwait
  416214:	adc    al,0x32
  416216:	add    eax,0xaf1cda7a
  41621b:	fidivr DWORD PTR [ebx]
  41621d:	imul   ecx,ebx,0x4a
  416220:	push   esi
  416221:	or     DWORD PTR [ecx-0x17],esi
  416224:	fiadd  WORD PTR [eax]
  416226:	add    BYTE PTR [ebx],bh
  416228:	add    eax,0xd98e2499
  41622d:	sahf   
  41622e:	les    ecx,FWORD PTR [ebx+0x6abb022c]
  416234:	push   0xffffff88
  416236:	pop    esp
  416237:	aad    0xfb
  416239:	ret    0xb0ba
  41623c:	cwde   
  41623d:	mov    ds:0xc5d271bf,eax
  416242:	scas   eax,DWORD PTR es:[edi]
  416243:	cs repnz or cl,cl
  416247:	pop    es
  416248:	xor    DWORD PTR [edx+0x66ff15b2],esi
  41624e:	data16 in al,dx
  416250:	add    DWORD PTR [ebx+0x1e],ecx
  416253:	cmp    ebx,esp
  416255:	sbb    bl,BYTE PTR [ebx]
  416257:	and    eax,DWORD PTR [esi+0x23]
  41625a:	sbb    edx,DWORD PTR [eax]
  41625c:	in     eax,dx
  41625d:	pop    ss
  41625e:	xor    ebx,ebx
  416260:	sbb    al,0xf1
  416262:	inc    ebp
  416263:	mov    BYTE PTR [eax-0x1a8be738],bl
  416269:	mov    cl,0x7c
  41626b:	popa   
  41626c:	pushf  
  41626d:	ret    0x8eb3
  416270:	jnp    0x41623c
  416272:	ins    DWORD PTR es:[edi],dx
  416273:	sbb    ecx,DWORD PTR [ebp-0x5c0d640a]
  416279:	xor    eax,0x55bf4ce7
  41627e:	mov    dl,0xc0
  416280:	mul    BYTE PTR [edx+eiz*2+0x434decee]
  416287:	lods   eax,DWORD PTR ds:[esi]
  416288:	and    BYTE PTR [eax+0x7f],ch
  41628b:	in     eax,0x3e
  41628d:	dec    edi
  41628e:	jmp    0x6c53c872
  416293:	in     eax,0x7f
  416295:	in     eax,dx
  416296:	lock push es
  416298:	ss push esp
  41629a:	sub    DWORD PTR [ebx],ecx
  41629c:	shl    ebx,1
  41629e:	rcl    BYTE PTR [ebx+0x364f5c58],1
  4162a4:	and    eax,DWORD PTR [ecx-0x73d06e03]
  4162aa:	xor    ebp,edi
  4162ac:	iret   
  4162ad:	data16 fstp TBYTE PTR [edi-0x33b5f419]
  4162b4:	scas   eax,DWORD PTR es:[edi]
  4162b5:	push   ss
  4162b6:	mov    edi,0x7bbf7af7
  4162bb:	adc    al,BYTE PTR [esi+0x6c]
  4162be:	shl    DWORD PTR [edx],0x17
  4162c1:	ins    BYTE PTR es:[edi],dx
  4162c2:	jle    0x4162fc
  4162c4:	and    DWORD PTR ds:[edi+esi*1-0x22],edx
  4162c9:	mov    dl,0x57
  4162cb:	(bad)  
  4162cc:	or     DWORD PTR [esi-0x67],ecx
  4162cf:	or     edx,DWORD PTR [ebp-0x798fd579]
  4162d5:	or     DWORD PTR [esi],ecx
  4162d7:	or     BYTE PTR [esi+edi*1+0x79],cl
  4162db:	add    cl,BYTE PTR [eax]
  4162dd:	fsub   QWORD PTR ds:0x18f96218
  4162e3:	adc    BYTE PTR [ebp-0x41a8e127],al
  4162e9:	loop   0x416273
  4162eb:	sub    al,0xc8
  4162ed:	(bad)  
  4162ee:	dec    eax
  4162ef:	xor    eax,0x246b8186
  4162f4:	or     al,0xb5
  4162f6:	push   edx
  4162f7:	daa    
  4162f8:	and    al,0xc1
  4162fa:	mov    cl,0x73
  4162fc:	pop    esi
  4162fd:	data16 das 
  4162ff:	cmp    al,0x4e
  416301:	arpl   WORD PTR [esi-0x5e],bp
  416304:	sbb    esp,DWORD PTR [edx+0x50]
  416307:	xchg   ecx,eax
  416308:	retf   
  416309:	outs   dx,DWORD PTR ds:[esi]
  41630a:	in     al,dx
  41630b:	nop
  41630c:	popa   
  41630d:	cli    
  41630e:	dec    ebx
  41630f:	nop
  416310:	jne    0x41638c
  416312:	xor    eax,0x1a2ad344
  416317:	aam    0xcb
  416319:	dec    eax
  41631a:	pop    ss
  41631b:	stos   BYTE PTR es:[edi],al
  41631c:	push   es
  41631d:	add    al,0x3c
  41631f:	dec    DWORD PTR [ecx-0x7d71917f]
  416325:	mov    ch,0x47
  416327:	add    edi,ebx
  416329:	inc    esp
  41632a:	les    edx,FWORD PTR [edi-0x7205b5fd]
  416330:	mov    edi,0xf3636951
  416335:	sbb    ecx,esi
  416337:	push   cs
  416338:	dec    eax
  416339:	add    eax,esi
  41633b:	call   0xfceb:0x21cf21d4
  416342:	int    0xd4
  416344:	add    al,0x88
  416346:	push   ecx
  416347:	test   DWORD PTR [esi+esi*2-0x6c55ddf3],esi
  41634e:	daa    
  41634f:	dec    ecx
  416350:	adc    BYTE PTR [esi+0x73],dl
  416353:	inc    eax
  416354:	sti    
  416355:	aam    0x2b
  416357:	sbb    eax,0xab98f5f0
  41635c:	jo     0x41632f
  41635e:	pop    esp
  41635f:	scas   eax,DWORD PTR es:[edi]
  416360:	test   BYTE PTR [eax],al
  416362:	jecxz  0x4163ab
  416364:	repz fld QWORD PTR [esp+eax*2+0x4c]
  416369:	or     ah,BYTE PTR [edx+0x1a]
  41636c:	jge    0x4163db
  41636e:	ja     0x4163a9
  416370:	push   esi
  416371:	test   DWORD PTR [edi-0xa],edi
  416374:	cmc    
  416375:	idiv   ah
  416377:	lods   al,BYTE PTR ds:[esi]
  416378:	push   edi
  416379:	add    al,0x41
  41637b:	popf   
  41637c:	xor    WORD PTR [edx],si
  41637f:	scas   al,BYTE PTR es:[edi]
  416380:	mov    edx,0xb68c7920
  416385:	rcr    BYTE PTR [eax+0x2a],0x68
  416389:	dec    esp
  41638a:	and    ecx,DWORD PTR [ecx-0x4]
  41638d:	inc    edx
  41638e:	mov    edx,0x5e92335b
  416393:	xor    edx,DWORD PTR [ebp-0x8]
  416396:	loopne 0x416373
  416398:	sbb    dh,BYTE PTR [ebp+0x56eb7080]
  41639e:	in     eax,0xa6
  4163a0:	mov    ch,0x6e
  4163a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163a3:	mov    eax,ds:0x68d0fa88
  4163a8:	lock jb 0x416389
  4163ab:	mov    bh,0x47
  4163ad:	push   edx
  4163ae:	mov    edx,0x6e24989f
  4163b3:	sbb    DWORD PTR [edx+edx*2+0x2f],ebp
  4163b7:	add    al,0x51
  4163b9:	inc    eax
  4163ba:	icebp  
  4163bb:	shr    BYTE PTR [ecx-0x39],1
  4163be:	push   ebp
  4163bf:	sbb    DWORD PTR [ebx+0x543d084c],ebx
  4163c5:	sub    ah,dl
  4163c7:	adc    DWORD PTR [edx+0x38571bf],eax
  4163cd:	add    ebx,DWORD PTR ds:0xbe769818
  4163d3:	sub    al,0x6a
  4163d6:	dec    eax
  4163d7:	sbb    al,0x96
  4163d9:	cli    
  4163da:	adc    DWORD PTR ds:0xea2ead9a,esp
  4163e0:	mov    ebp,0x5cf2a4f5
  4163e5:	xchg   ecx,eax
  4163e6:	imul   ecx,DWORD PTR [esi+0x5a],0xa1326089
  4163ed:	mov    ebx,0x94888675
  4163f2:	or     bl,cl
  4163f4:	cli    
  4163f5:	clc    
  4163f6:	test   BYTE PTR [edi],ah
  4163f8:	push   cs
  4163f9:	ja     0x41644d
  4163fb:	pop    ds
  4163fc:	cld    
  4163fd:	dec    edx
  4163fe:	adc    DWORD PTR [eax-0x3a],edx
  416401:	scas   eax,DWORD PTR es:[edi]
  416402:	cld    
  416403:	je     0x416392
  416405:	push   ebx
  416406:	je     0x416468
  416408:	scas   al,BYTE PTR es:[edi]
  416409:	mov    ecx,0xc06d7da9
  41640e:	mov    al,ds:0xe04066a3
  416413:	sahf   
  416414:	push   ecx
  416415:	mov    dh,0xc5
  416417:	mov    eax,ds:0xefacafe8
  41641c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41641d:	xor    ebp,ebp
  41641f:	adc    dh,ah
  416421:	pusha  
  416422:	xchg   ebp,eax
  416423:	mov    ch,0x7a
  416425:	cmp    DWORD PTR [edx+0xb],ebx
  416428:	or     BYTE PTR [eax+0x6e21bf11],dl
  41642e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41642f:	div    BYTE PTR [edx-0x1b29143d]
  416435:	sub    esi,DWORD PTR [edi]
  416437:	nop
  416438:	pop    eax
  416439:	pop    ebp
  41643a:	jge    0x41641e
  41643c:	jmp    0xca3e:0xb53deda8
  416443:	shl    bh,1
  416445:	adc    eax,0x57b8d0b4
  41644a:	dec    ebp
  41644b:	mov    esp,0x52cc51bc
  416450:	out    0xa0,eax
  416452:	ds xchg esp,eax
  416454:	xor    cl,dl
  416456:	push   0x80270754
  41645b:	hlt    
  41645c:	pop    ds
  41645d:	mov    al,0xb4
  41645f:	outs   dx,DWORD PTR ds:[esi]
  416460:	mov    esp,?
  416462:	sti    
  416463:	inc    esp
  416464:	lahf   
  416465:	ds dec esp
  416467:	cmp    BYTE PTR [edi],0xba
  41646a:	push   0x11
  41646c:	repz popa 
  41646e:	pop    edi
  41646f:	aas    
  416470:	sbb    DWORD PTR [eax],esp
  416472:	gs jns 0x416406
  416475:	inc    edi
  416476:	push   0x49
  416478:	aad    0xd5
  41647a:	push   ebp
  41647b:	dec    eax
  41647c:	out    0x99,eax
  41647e:	repnz mov ah,0x63
  416481:	loope  0x416440
  416483:	jns    0x416458
  416485:	pop    ss
  416486:	out    0xf4,al
  416488:	inc    esi
  416489:	test   esp,0x6fc6ae13
  41648f:	push   eax
  416490:	fadd   st(4),st
  416492:	and    BYTE PTR [ecx+0x29],al
  416495:	pop    esi
  416496:	sbb    al,0x6a
  416498:	pop    esi
  416499:	dec    edi
  41649a:	pushf  
  41649b:	or     eax,0xc0b0a40e
  4164a0:	mov    BYTE PTR [edi+0x56f188a5],bh
  4164a6:	lods   eax,DWORD PTR ds:[esi]
  4164a7:	retf   0x3c0b
  4164aa:	push   edx
  4164ab:	inc    ebx
  4164ac:	(bad)  
  4164ae:	sub    eax,0xda33ea85
  4164b3:	pop    ebx
  4164b4:	push   ebx
  4164b5:	repnz stos BYTE PTR es:[edi],al
  4164b7:	call   0x9a628dab
  4164bc:	repz push ecx
  4164be:	cmp    al,dl
  4164c0:	sub    eax,0xcc4e5255
  4164c5:	mov    ss,ebp
  4164c7:	pop    ecx
  4164c8:	mov    bh,0x52
  4164ca:	push   ss
  4164cb:	dec    eax
  4164cc:	inc    ecx
  4164cd:	xor    eax,0x2839302
  4164d2:	mov    eax,ds:0x77fff504
  4164d7:	ret    0xa9d5
  4164da:	(bad)  
  4164db:	inc    ebx
  4164dc:	mov    esp,0xe0e158bc
  4164e1:	inc    edi
  4164e2:	aam    0x2d
  4164e4:	and    al,0x26
  4164e6:	mov    esp,0xf524e597
  4164eb:	ins    DWORD PTR es:[edi],dx
  4164ec:	rcr    BYTE PTR [edx+eiz*1],cl
  4164ef:	mov    bl,0xea
  4164f1:	mov    bl,0x2a
  4164f3:	jmp    0x416516
  4164f5:	dec    ebp
  4164f6:	dec    ecx
  4164f7:	mov    edx,0x92d01cfd
  4164fc:	add    eax,0xe5f5c1a3
  416501:	jecxz  0x41649a
  416503:	sbb    cl,BYTE PTR cs:[eax-0x3b28c0ba]
  41650a:	in     al,dx
  41650b:	xchg   BYTE PTR [eax+0x76d93d33],dh
  416511:	add    ebx,DWORD PTR [ebx]
  416513:	les    esi,FWORD PTR [edi+0x3ac9c2cb]
  416519:	adc    dh,dl
  41651b:	jnp    0x4164cb
  41651d:	repnz pop ebx
  41651f:	nop
  416520:	inc    ecx
  416521:	push   es
  416522:	stc    
  416523:	div    DWORD PTR [ecx-0x77]
  416526:	jbe    0x4164fa
  416528:	push   eax
  416529:	sub    DWORD PTR [ebp-0x2679ae8e],ebp
  41652f:	or     BYTE PTR [ebx],dh
  416531:	cli    
  416532:	repz jmp 0x4165a7
  416535:	out    dx,al
  416536:	popa   
  416537:	cli    
  416538:	ror    ebp,0x42
  41653b:	ins    DWORD PTR es:[edi],dx
  41653c:	jae    0x4164d6
  41653e:	daa    
  41653f:	ror    DWORD PTR [ecx],0x1c
  416542:	into   
  416543:	sahf   
  416544:	out    dx,eax
  416545:	daa    
  416546:	jl     0x41650d
  416548:	jnp    0x41651f
  41654a:	or     al,0x1a
  41654c:	clc    
  41654d:	adc    DWORD PTR [ebx+0x64],esi
  416550:	xor    DWORD PTR [edi],edx
  416552:	mov    DWORD PTR [edi+edx*8+0x55],ebx
  416556:	and    ah,ch
  416558:	leave  
  416559:	popa   
  41655a:	in     al,0xb0
  41655c:	cwde   
  41655d:	es ret 0x14b1
  416561:	daa    
  416562:	push   0xffffffc5
  416564:	sbb    ecx,DWORD PTR [ecx-0x711449fe]
  41656a:	(bad)  
  41656b:	xor    BYTE PTR [edx+0x72],al
  41656e:	jmp    0x797b:0xb680c109
  416575:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416576:	jmp    0x95027b75
  41657b:	push   edx
  41657c:	ja     0x416535
  41657e:	and    dl,ah
  416580:	adc    BYTE PTR [ebx+eiz*1+0x60],ah
  416584:	shl    DWORD PTR [esi+0x3b],cl
  416587:	fs ret 0xbc4
  41658b:	idiv   BYTE PTR [esi]
  41658d:	and    BYTE PTR [eax+0xa],bh
  416590:	pop    eax
  416591:	cmp    DWORD PTR [esi+0x31],esp
  416594:	jno    0x4165d9
  416596:	sub    DWORD PTR [ebx+esi*4],eax
  416599:	jnp    0x4165cd
  41659b:	mov    al,ds:0xe2e7db58
  4165a0:	jno    0x416590
  4165a2:	pop    esi
  4165a3:	lods   eax,DWORD PTR ds:[esi]
  4165a4:	sub    DWORD PTR [eax-0x5f],esp
  4165a7:	push   es
  4165a8:	or     al,0x1c
  4165aa:	daa    
  4165ab:	lahf   
  4165ac:	or     BYTE PTR [esi],dl
  4165ae:	dec    ecx
  4165af:	cli    
  4165b0:	jge    0x4165eb
  4165b2:	or     DWORD PTR [edx],esp
  4165b4:	xchg   edi,eax
  4165b5:	or     esp,DWORD PTR [esi-0x616e0ac8]
  4165bb:	mov    ebp,0xad3bf9d4
  4165c0:	push   eax
  4165c1:	adc    BYTE PTR [edi-0x79],dh
  4165c4:	xchg   ebx,eax
  4165c5:	test   DWORD PTR [edi+0x3915ce75],esp
  4165cb:	pop    ebx
  4165cc:	sub    BYTE PTR [edi-0x5d43809c],dl
  4165d2:	es es in al,0x16
  4165d6:	mov    al,ds:0x9b526022
  4165db:	addr16 or al,0xb6
  4165de:	cwde   
  4165df:	mov    ecx,0x77e3e666
  4165e4:	lock sub DWORD PTR ds:0x671881b9,ebx
  4165eb:	pop    ebp
  4165ec:	inc    ebx
  4165ed:	add    eax,0x5a8eee7d
  4165f2:	dec    esp
  4165f3:	dec    esi
  4165f4:	in     eax,0x50
  4165f6:	jbe    0x4165cb
  4165f8:	lahf   
  4165f9:	xchg   al,al
  4165fb:	or     dh,ah
  4165fd:	unpcklps xmm7,XMMWORD PTR [edx-0x5a826e92]
  416604:	pushf  
  416605:	out    0x6d,eax
  416607:	test   BYTE PTR [eax+0x6b],0x4
  41660b:	jmp    0x416604
  41660d:	fild   QWORD PTR [esi]
  41660f:	add    BYTE PTR [ecx],dh
  416611:	stos   DWORD PTR es:[edi],eax
  416612:	adc    al,0x98
  416614:	mov    ah,dl
  416616:	shl    BYTE PTR [esi],0xa4
  416619:	dec    edx
  41661a:	push   edi
  41661b:	sahf   
  41661c:	sbb    eax,0x2f8ce134
  416621:	sub    al,0x81
  416623:	(bad)  
  416624:	cmp    eax,0xbb0a5d8a
  416629:	(bad)  
  41662b:	inc    esp
  41662c:	(bad)  
  41662d:	leave  
  41662e:	not    DWORD PTR [ebp-0x4]
  416631:	xchg   edi,eax
  416632:	add    cl,BYTE PTR [edx-0x16]
  416635:	loope  0x416611
  416637:	adc    ecx,0x342d1c50
  41663d:	cdq    
  41663e:	xor    ch,BYTE PTR [edx]
  416640:	retf   0xe208
  416643:	xor    ch,BYTE PTR [eax]
  416645:	fistp  DWORD PTR [edi+eax*1+0x54]
  416649:	mov    ds:0xe10fb62e,eax
  41664e:	in     eax,0x84
  416650:	imul   ecx,DWORD PTR [esi*2-0x53612306],0xffffffba
  416658:	sub    al,0xdf
  41665a:	inc    ebx
  41665b:	and    cl,al
  41665d:	xchg   esp,eax
  41665e:	pop    esi
  41665f:	in     al,0xbb
  416661:	out    0x5e,al
  416663:	mov    al,ds:0x89a8bcaa
  416668:	cli    
  416669:	lea    eax,[eax]
  41666b:	add    al,0x6f
  41666d:	clc    
  41666e:	push   ds
  41666f:	stc    
  416670:	pop    esp
  416671:	aad    0x4f
  416673:	and    esi,DWORD PTR [esi+0x69ca7d34]
  416679:	(bad)  
  41667a:	or     al,0x74
  41667c:	retf   0xa5c4
  41667f:	or     ecx,ebp
  416681:	je     0x416672
  416683:	test   edx,edx
  416685:	mov    ecx,0x67ba948a
  41668a:	cmp    ah,BYTE PTR [ebp-0x557265e5]
  416690:	or     ebp,0x4d
  416693:	hlt    
  416694:	mov    eax,ds:0xf7cea4ec
  416699:	xor    al,0x7a
  41669b:	dec    ebp
  41669c:	mov    esi,0x5b00892c
  4166a1:	ins    BYTE PTR es:[edi],dx
  4166a2:	and    eax,0xc70bd71d
  4166a7:	sbb    esp,edi
  4166a9:	add    al,0x3
  4166ab:	pushf  
  4166ac:	xchg   BYTE PTR [eax+ecx*8+0x132b4216],cl
  4166b3:	push   0xfffffff5
  4166b5:	and    eax,0xc9f0f36
  4166ba:	aaa    
  4166bb:	pop    esp
  4166bc:	mov    al,0x89
  4166be:	shl    edi,cl
  4166c0:	push   ebx
  4166c1:	pop    ebx
  4166c2:	lods   eax,DWORD PTR ds:[esi]
  4166c3:	emms   
  4166c5:	sub    bh,BYTE PTR [edx-0x63]
  4166c8:	ror    BYTE PTR [eax],0x5e
  4166cb:	mov    ds:0xb8ee9584,eax
  4166d0:	sbb    esp,0xa81ef8bc
  4166d6:	(bad)  
  4166d7:	push   ss
  4166d8:	sub    al,0x9b
  4166da:	cdq    
  4166db:	xchg   DWORD PTR [ebx+0x6b],ebx
  4166de:	pop    ds
  4166df:	pushf  
  4166e0:	add    dh,bh
  4166e2:	xor    ax,0x7d01
  4166e6:	dec    esp
  4166e7:	ret    0xe9e9
  4166ea:	fistp  QWORD PTR [eax]
  4166ec:	retf   0x9b3f
  4166ef:	jne    0x4166c1
  4166f1:	daa    
  4166f2:	cs inc edi
  4166f4:	jns    0x4166cf
  4166f6:	das    
  4166f7:	or     BYTE PTR [ebx],ah
  4166f9:	out    dx,al
  4166fa:	dec    edx
  4166fb:	fcomp  DWORD PTR [ebx-0x7418bf50]
  416701:	mul    bh
  416703:	sbb    edx,edi
  416705:	aam    0x2f
  416707:	nop
  416708:	sbb    BYTE PTR [eax+ecx*4-0x56],al
  41670c:	retf   
  41670d:	(bad)  
  41670e:	pop    ebx
  41670f:	cmp    DWORD PTR es:[edi-0x36],ebp
  416713:	out    dx,eax
  416714:	ins    DWORD PTR es:[edi],dx
  416715:	(bad)  
  416716:	pusha  
  416717:	inc    ecx
  416718:	xor    eax,0x49fb7dbb
  41671d:	xor    eax,0xa7f754d2
  416722:	pop    es
  416723:	ror    ecx,cl
  416725:	pop    eax
  416726:	icebp  
  416727:	enter  0xec72,0xa0
  41672b:	je     0x416700
  41672d:	or     DWORD PTR [ecx],edx
  41672f:	icebp  
  416730:	jmp    0x416775
  416732:	mov    dl,0xbf
  416734:	sbb    eax,0x2a6dc00e
  416739:	or     ah,dl
  41673b:	adc    eax,0x2b3bb18
  416740:	inc    edi
  416741:	in     al,dx
  416742:	push   0xa23e3946
  416747:	pop    ds
  416748:	retf   0xb1ec
  41674b:	cmp    BYTE PTR gs:[esi+0x74],al
  41674f:	push   0xc79f9
  416754:	jae    0x416760
  416756:	dec    ebp
  416757:	sbb    al,0x3f
  416759:	lock ror BYTE PTR [esi+0x851eb11],1
  416760:	cmp    eax,0x78b1371c
  416765:	nop
  416766:	lock add ch,BYTE PTR [ebx+0x5a0ee503]
  41676d:	fmul   st(2),st
  41676f:	ins    DWORD PTR es:[edi],dx
  416770:	jns    0x416764
  416772:	test   BYTE PTR [ecx+0x7785c90b],bl
  416778:	push   es
  416779:	inc    ecx
  41677a:	frstor [edi+0x46190ec8]
  416780:	and    ebp,DWORD PTR [ecx]
  416782:	dec    edx
  416783:	mul    BYTE PTR [edi-0x2d109818]
  416789:	add    DWORD PTR [esi-0x75],edx
  41678c:	fisubr WORD PTR [edx]
  41678e:	cdq    
  41678f:	push   cs
  416790:	sbb    DWORD PTR [eax],0xd95493b
  416796:	xchg   ecx,eax
  416797:	sbb    DWORD PTR [esi],edx
  416799:	inc    ebx
  41679a:	sub    edi,DWORD PTR [edx+0x61]
  41679d:	xor    al,0x79
  41679f:	cmp    bl,BYTE PTR gs:[ecx+ebx*4+0x6d1e94ef]
  4167a7:	test   bh,bl
  4167a9:	or     eax,0xaa793e6b
  4167ae:	fcomp  QWORD PTR cs:[ebx+0x46]
  4167b2:	sbb    DWORD PTR [ecx-0x5d],esi
  4167b5:	dec    esi
  4167b6:	xor    al,0xa8
  4167b8:	loope  0x416824
  4167ba:	sti    
  4167bb:	dec    si
  4167bd:	scas   al,BYTE PTR es:[edi]
  4167be:	imul   edi,DWORD PTR [ebx],0xc077ccd5
  4167c4:	and    esi,edi
  4167c6:	sti    
  4167c7:	fcmove st,st(6)
  4167c9:	aam    0x9b
  4167cb:	rol    esp,cl
  4167cd:	mov    ebx,0x2149aaeb
  4167d2:	into   
  4167d3:	fcomp  DWORD PTR [eax-0x5bb3d7de]
  4167d9:	pop    ecx
  4167da:	fsub   QWORD PTR [eax-0x116bc9f]
  4167e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e1:	sar    esi,0x7b
  4167e4:	dec    edi
  4167e5:	jno    0x4167d0
  4167e7:	mov    ah,0x1c
  4167e9:	jp     0x416799
  4167eb:	addr16 call 0xc62fd637
  4167f1:	inc    ecx
  4167f2:	dec    ecx
  4167f3:	lock push ss
  4167f5:	cmp    al,0x2e
  4167f7:	jae    0x416825
  4167f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167fa:	sub    DWORD PTR [esp+edi*4],edx
  4167fd:	push   eax
  4167fe:	jo     0x41678d
  416800:	mov    esi,0xecda907b
  416805:	cld    
  416806:	adc    DWORD PTR [esi+0x54],ecx
  416809:	les    ebp,FWORD PTR [eax]
  41680b:	dec    ebx
  41680c:	pop    ebp
  41680d:	ja     0x4167fd
  41680f:	jmp    0xacda96cf
  416814:	push   ebx
  416815:	xor    DWORD PTR [edx-0x7b684c98],eax
  41681b:	pushf  
  41681c:	or     BYTE PTR ds:0xcc6e9fbe,bh
  416822:	xchg   ecx,eax
  416823:	retf   
  416824:	pop    ebp
  416825:	pushf  
  416826:	pop    ds
  416827:	xchg   ecx,eax
  416828:	jg     0x416894
  41682a:	sahf   
  41682b:	and    eax,0x4baa0c18
  416830:	test   BYTE PTR [ecx],0xc0
  416833:	(bad)  
  416836:	push   esi
  416837:	xor    edi,eax
  416839:	add    BYTE PTR [eax-0x7],0x97
  41683d:	das    
  41683e:	int3   
  41683f:	pop    edi
  416840:	inc    edi
  416841:	mov    ecx,0xb4a3196a
  416846:	or     al,0x39
  416848:	inc    eax
  416849:	push   esp
  41684a:	aad    0x34
  41684c:	mov    dh,ah
  41684e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41684f:	(bad)  
  416850:	int    0xe0
  416852:	call   0x7344:0xde92a176
  416859:	sub    eax,0x22a5ba80
  41685e:	inc    ebp
  41685f:	fbld   TBYTE PTR [edi+0x77659b07]
  416865:	mov    ch,0xdd
  416867:	repnz sub cl,BYTE PTR [esi+0x73]
  41686b:	jmp    DWORD PTR [eax+0x48]
  41686e:	jge    0x416807
  416870:	push   0xe358a052
  416875:	mov    ecx,0xe4773f5f
  41687a:	call   0x3b60:0xb6f6c7f0
  416881:	je     0x41687a
  416883:	inc    edx
  416884:	jg     0x41681e
  416886:	or     eax,0xcc87595c
  41688b:	cmp    cl,BYTE PTR [esi-0x3319ea0]
  416891:	sbb    DWORD PTR [eax],ebx
  416893:	add    al,0x7c
  416895:	jp     0x416886
  416897:	jb     0x4168db
  416899:	shl    DWORD PTR [ebp-0x3f],cl
  41689c:	jo     0x416829
  41689e:	cwde   
  41689f:	mov    es,WORD PTR [ebx-0x31]
  4168a2:	das    
  4168a3:	cld    
  4168a4:	outs   dx,BYTE PTR ds:[esi]
  4168a5:	push   ebp
  4168a6:	outs   dx,BYTE PTR ds:[esi]
  4168a7:	popa   
  4168a8:	test   BYTE PTR [ebx+0x27706b4c],dh
  4168ae:	les    ebp,FWORD PTR [edx+0x6634ada8]
  4168b4:	ins    BYTE PTR es:[edi],dx
  4168b5:	adc    DWORD PTR ds:0xf21cff23,esp
  4168bb:	xchg   ebx,eax
  4168bc:	inc    eax
  4168bd:	mov    eax,DWORD PTR [ecx-0xc]
  4168c0:	mov    DWORD PTR [esi+0x361e4e5],ebp
  4168c6:	js     0x4168c8
  4168c8:	mov    dh,0xf2
  4168ca:	xchg   esi,eax
  4168cb:	jecxz  0x41694c
  4168cd:	fcmove st,st(7)
  4168cf:	cmp    al,0x67
  4168d1:	js     0x416889
  4168d3:	push   ds
  4168d4:	adc    al,0xa0
  4168d6:	cmp    DWORD PTR [ecx-0xd],edx
  4168d9:	cmc    
  4168da:	add    cl,BYTE PTR [eax-0x7bc91c65]
  4168e0:	addr16 test ch,dl
  4168e3:	cwde   
  4168e4:	ja     0x416954
  4168e6:	aad    0xf5
  4168e8:	je     0x4168a8
  4168ea:	inc    eax
  4168eb:	pop    esp
  4168ec:	in     eax,dx
  4168ed:	xchg   esp,eax
  4168ee:	les    edi,FWORD PTR [edx+0x13]
  4168f1:	popa   
  4168f2:	pop    edx
  4168f3:	cld    
  4168f4:	add    al,0x81
  4168f6:	push   0xffffffb4
  4168f8:	mov    al,0x9f
  4168fa:	cs sbb edi,0xffffff8c
  4168fe:	stos   BYTE PTR es:[edi],al
  4168ff:	popf   
  416900:	sub    ah,BYTE PTR [ebx-0x739d28cb]
  416906:	mov    ecx,es
  416908:	mov    esi,0x39a292ee
  41690d:	test   edx,eax
  41690f:	outs   dx,DWORD PTR ds:[esi]
  416910:	or     dl,BYTE PTR [ebx-0x4f]
  416913:	in     eax,0xc6
  416915:	add    DWORD PTR ds:0x8e7f1dc0,esp
  41691b:	sub    esp,ebp
  41691d:	mov    eax,ds:0x9e85eb08
  416922:	cdq    
  416923:	adc    edx,0xd882b7cc
  416929:	(bad)  
  41692b:	xchg   ecx,eax
  41692c:	popa   
  41692d:	nop
  41692e:	mov    al,0x2
  416930:	inc    esp
  416931:	cmp    BYTE PTR [ecx],bl
  416933:	push   ebx
  416934:	mov    bl,BYTE PTR [ecx-0x10]
  416937:	fwait
  416938:	shl    ebp,cl
  41693a:	popf   
  41693b:	shl    DWORD PTR [esi],cl
  41693d:	jmp    0xc508:0xcd5d8fd3
  416944:	mov    ecx,0x62dda573
  416949:	push   edx
  41694a:	out    dx,al
  41694b:	shl    DWORD PTR ds:0xede538ba,1
  416951:	mov    ds:0x7a28329,al
  416956:	adc    dl,BYTE PTR [ecx-0x52a59ca8]
  41695c:	jns    0x4169a8
  41695e:	jo     0x4169dd
  416960:	pop    esi
  416961:	or     esp,DWORD PTR [edi-0x49a85c1a]
  416967:	fdiv   QWORD PTR [eax]
  416969:	and    BYTE PTR [edx],0xcd
  41696c:	das    
  41696d:	mov    eax,ds:0x2a461661
  416972:	xor    BYTE PTR [eax],ch
  416974:	call   DWORD PTR [eax+0x1f7ee6ca]
  41697a:	cwde   
  41697b:	sbb    DWORD PTR [eax+0x51],ebx
  41697e:	or     BYTE PTR [esi],dl
  416980:	loopne 0x41691e
  416982:	(bad)  
  416983:	xor    DWORD PTR [eax],esp
  416985:	(bad)  
  416986:	push   ecx
  416987:	xchg   ebp,eax
  416988:	(bad)  
  416989:	mov    al,0xd3
  41698b:	pop    ss
  41698c:	and    eax,0x63c085dc
  416991:	push   esp
  416992:	(bad)  
  416993:	push   0x74
  416995:	jecxz  0x416926
  416997:	jbe    0x41699b
  416999:	mov    ds:0x6837c850,eax
  41699e:	call   0xd533:0xa305541c
  4169a5:	in     al,dx
  4169a6:	or     ebp,DWORD PTR [ecx-0x45]
  4169a9:	das    
  4169aa:	test   eax,0x49999539
  4169af:	push   ss
  4169b0:	dec    edx
  4169b1:	(bad)  [ebx]
  4169b3:	test   DWORD PTR [ebx+0xee0a845],esi
  4169b9:	popf   
  4169ba:	xor    eax,0x23047444
  4169bf:	push   0xffffffff
  4169c1:	sar    bh,1
  4169c3:	out    0x5b,eax
  4169c5:	sahf   
  4169c6:	(bad)  
  4169c7:	pop    ss
  4169c8:	les    eax,FWORD PTR [edi]
  4169ca:	push   es
  4169cb:	jns    0x416a2a
  4169cd:	cdq    
  4169ce:	rcr    dh,cl
  4169d0:	aam    0xa4
  4169d2:	imul   edx,DWORD PTR [esi+0x6e],0xffffff93
  4169d6:	jle    0x416a35
  4169d8:	cmp    al,0xea
  4169da:	ins    DWORD PTR es:[edi],dx
  4169db:	stos   BYTE PTR es:[edi],al
  4169dc:	adc    eax,0xe0fed967
  4169e1:	jae    0x416972
  4169e3:	clc    
  4169e4:	sbb    DWORD PTR [edi-0x1a7835d5],edi
  4169ea:	adc    DWORD PTR [edx-0x616b7ae1],ecx
  4169f0:	shl    BYTE PTR [edi],cl
  4169f2:	xchg   esp,eax
  4169f3:	dec    edi
  4169f4:	mov    eax,DWORD PTR [ebx]
  4169f6:	mov    eax,0x3f7df0ea
  4169fb:	xchg   ecx,eax
  4169fc:	int    0x6
  4169fe:	jb     0x416a3a
  416a00:	jns    0x416a50
  416a02:	push   edi
  416a03:	push   0x746fbdf1
  416a08:	cwde   
  416a09:	mov    esp,0x78bb5fe6
  416a0e:	add    bl,BYTE PTR [esi+0x24]
  416a11:	sahf   
  416a12:	or     al,0x57
  416a14:	hlt    
  416a15:	pop    esi
  416a16:	dec    edi
  416a17:	inc    eax
  416a18:	pop    eax
  416a19:	pop    ss
  416a1a:	and    bh,BYTE PTR [ebx]
  416a1c:	and    BYTE PTR [ebp+0x2d6eee59],ah
  416a22:	cdq    
  416a23:	xchg   ecx,eax
  416a24:	push   esp
  416a25:	and    al,0x2d
  416a27:	and    eax,0xa03305df
  416a2c:	test   DWORD PTR [esi],eax
  416a2e:	out    0xb5,al
  416a30:	inc    esp
  416a31:	inc    ecx
  416a32:	das    
  416a33:	adc    dh,ah
  416a35:	push   edi
  416a36:	ins    BYTE PTR es:[di],dx
  416a38:	shl    BYTE PTR [ebx+ecx*8+0x51],0xfc
  416a3d:	(bad)  [edi-0x53f826b1]
  416a43:	dec    esi
  416a44:	popa   
  416a45:	mov    ebp,0xcc650680
  416a4a:	jbe    0x4169ea
  416a4c:	xchg   ebp,eax
  416a4d:	push   ebp
  416a4e:	xchg   edx,eax
  416a4f:	loop   0x416a76
  416a51:	xor    BYTE PTR [eax-0x3de16ad6],ch
  416a57:	lds    ebp,FWORD PTR [esi-0x20]
  416a5a:	ss cwde 
  416a5c:	in     eax,dx
  416a5d:	and    BYTE PTR [eax-0x32],0x36
  416a61:	pop    esp
  416a62:	mov    BYTE PTR [ebx+0x9],al
  416a65:	jmp    0x8ee23630
  416a6a:	sbb    BYTE PTR [edx-0xe],dl
  416a6d:	mov    dl,0xfa
  416a6f:	pusha  
  416a70:	pop    edx
  416a71:	xor    edi,DWORD PTR [eax-0x1568a90e]
  416a77:	cmp    al,BYTE PTR [esi]
  416a79:	jl     0x416a6e
  416a7b:	mov    ecx,0x35531e63
  416a80:	daa    
  416a81:	lods   al,BYTE PTR ds:[esi]
  416a82:	je     0x416ae3
  416a84:	iret   
  416a85:	dec    esi
  416a86:	outs   dx,BYTE PTR ds:[esi]
  416a87:	and    ebx,0x9c66b663
  416a8d:	dec    ebx
  416a8e:	(bad)  
  416a8f:	fidiv  WORD PTR [edi]
  416a91:	stos   BYTE PTR es:[edi],al
  416a92:	mov    edi,DWORD PTR [edi]
  416a94:	cmp    ebp,DWORD PTR [esi]
  416a96:	adc    bl,BYTE PTR [edi+esi*1-0x2]
  416a9a:	iret   
  416a9b:	popa   
  416a9c:	daa    
  416a9d:	shl    DWORD PTR [edx+0x4d],1
  416aa0:	test   eax,0x1d2704d9
  416aa5:	xor    ch,BYTE PTR [edx+0x5bfeecd4]
  416aab:	data16 sar BYTE PTR [eax],1
  416aae:	push   ebx
  416aaf:	dec    edi
  416ab0:	or     ch,bh
  416ab2:	aam    0xda
  416ab4:	repnz cmp esi,0xd4e821bc
  416abb:	stc    
  416abc:	dec    dx
  416abe:	cld    
  416abf:	scas   eax,DWORD PTR es:[edi]
  416ac0:	push   es
  416ac1:	jp     0x416a5a
  416ac3:	pop    esp
  416ac4:	sub    ecx,esp
  416ac6:	rcl    DWORD PTR [esi+0xf],0xf
  416aca:	push   0x8ce52086
  416acf:	aaa    
  416ad0:	test   cl,0xc7
  416ad3:	ficomp DWORD PTR [ebp+0x35e3b806]
  416ad9:	push   edx
  416ada:	adc    al,ch
  416adc:	fwait
  416add:	mov    edx,0x354b8a8e
  416ae2:	aam    0xb5
  416ae4:	int    0x3
  416ae6:	imul   ecx,DWORD PTR [edx],0xffffffb7
  416ae9:	push   ebp
  416aea:	pop    ebx
  416aeb:	fdiv   st(0),st
  416aed:	sub    BYTE PTR [edi+0x3b],dl
  416af0:	inc    ecx
  416af1:	mov    ecx,0x1ae48f31
  416af6:	sahf   
  416af7:	test   DWORD PTR [ebx+0x73a1a76],0x31e4e7ec
  416b01:	aaa    
  416b02:	dec    ebp
  416b03:	jbe    0x416ae9
  416b05:	daa    
  416b06:	adc    BYTE PTR [eax+0x5a],dh
  416b09:	cdq    
  416b0a:	test   bh,ch
  416b0c:	mov    ds:0x3483caaf,al
  416b11:	int3   
  416b12:	xchg   edx,eax
  416b13:	xor    esp,ebp
  416b15:	gs sub al,0xaa
  416b19:	push   eax
  416b1a:	int3   
  416b1b:	inc    edx
  416b1c:	inc    edx
  416b1d:	adc    al,bl
  416b1f:	adc    BYTE PTR [edi-0x7a],bh
  416b22:	cmp    eax,DWORD PTR [ebp-0x46e27ddb]
  416b28:	mov    ecx,DWORD PTR [edx+0x6a28ce9a]
  416b2e:	sbb    esi,ecx
  416b30:	xchg   ebp,eax
  416b31:	xchg   BYTE PTR ss:[ecx+0x2b2de248],ch
  416b38:	push   edx
  416b39:	pop    ebx
  416b3a:	push   ebx
  416b3b:	cmp    ecx,eax
  416b3d:	ins    DWORD PTR es:[edi],dx
  416b3e:	jns    0x416b14
  416b40:	inc    esi
  416b41:	loope  0x416b9b
  416b43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b44:	jns    0x416bc3
  416b46:	popa   
  416b47:	push   0xffffffe7
  416b49:	mov    ebp,0xca6982c9
  416b4e:	frndint 
  416b50:	push   es
  416b51:	test   ah,cl
  416b53:	stos   DWORD PTR es:[edi],eax
  416b54:	or     dl,bh
  416b56:	ins    BYTE PTR es:[edi],dx
  416b57:	inc    ebx
  416b58:	mov    WORD PTR [ebx],ss
  416b5a:	adc    ebp,eax
  416b5c:	aas    
  416b5d:	mov    al,0x77
  416b5f:	dec    edi
  416b60:	test   al,0x96
  416b62:	int3   
  416b63:	pop    ebp
  416b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b65:	jns    0x416b1f
  416b67:	out    dx,eax
  416b68:	shl    BYTE PTR [eax+0x496a56d4],0xb8
  416b6f:	in     al,dx
  416b70:	mov    DWORD PTR es:[ebp+eiz*8-0x30],eax
  416b75:	shr    BYTE PTR [edi-0x370aa647],1
  416b7b:	and    bl,BYTE PTR [ebp-0x21f25bf3]
  416b81:	frstor [ecx]
  416b83:	imul   ebx,DWORD PTR [eax-0x42ed43dc],0x44889b8d
  416b8d:	aad    0xb
  416b8f:	in     eax,0xce
  416b91:	fld    DWORD PTR [esi-0x334b0d7e]
  416b97:	mov    dh,0x90
  416b99:	ror    BYTE PTR [edi+0xb],0x6c
  416b9d:	lods   eax,DWORD PTR ds:[esi]
  416b9e:	add    cl,BYTE PTR [ecx-0x6c526915]
  416ba4:	ror    esp,1
  416ba6:	jecxz  0x416b5c
  416ba8:	mov    cl,0xf9
  416baa:	adc    eax,0xcc07885e
  416baf:	fist   WORD PTR [esi]
  416bb1:	mov    ecx,0xef5fa92a
  416bb6:	fwait
  416bb7:	sbb    ecx,DWORD PTR [ebx+0x6b]
  416bba:	and    ebp,ecx
  416bbc:	lods   al,BYTE PTR ds:[esi]
  416bbd:	aaa    
  416bbe:	dec    edx
  416bbf:	inc    ebp
  416bc0:	xchg   esi,eax
  416bc1:	or     BYTE PTR [edi],dh
  416bc3:	aam    0x58
  416bc5:	fdiv   QWORD PTR [ecx]
  416bc7:	fsub   st,st(0)
  416bc9:	test   al,0x54
  416bcb:	sub    edx,DWORD PTR [ecx-0x1]
  416bce:	cli    
  416bcf:	enter  0x51f8,0xcd
  416bd3:	js     0x416bab
  416bd5:	fcom   QWORD PTR [ebx]
  416bd7:	mov    ebx,0x1ff01ab9
  416bdc:	jo     0x416b80
  416bde:	mov    edi,0x9e57efae
  416be3:	jg     0x416c4c
  416be5:	sub    ebp,esp
  416be7:	dec    ecx
  416be8:	pop    eax
  416be9:	out    dx,eax
  416bea:	xchg   ebx,eax
  416beb:	mov    ds:0x941900f8,al
  416bf0:	push   edi
  416bf1:	repnz imul eax,ebx,0x44
  416bf5:	pop    eax
  416bf6:	int3   
  416bf7:	add    ebp,ebp
  416bf9:	(bad)  
  416bfa:	cld    
  416bfb:	xlat   BYTE PTR ds:[ebx]
  416bfc:	xor    al,BYTE PTR [ebx]
  416bfe:	arpl   sp,dx
  416c00:	(bad)  
  416c01:	dec    eax
  416c02:	cmp    al,0x81
  416c04:	(bad)  
  416c05:	mov    bh,bl
  416c07:	imul   esp,edi,0xffffff80
  416c0a:	loopne 0x416b9c
  416c0c:	inc    ebp
  416c0d:	push   ss
  416c0e:	fdiv   DWORD PTR [esi]
  416c10:	call   0x178d:0x89eafd2c
  416c17:	push   0x38
  416c19:	mov    eax,0xb8469f9
  416c1e:	xchg   edi,eax
  416c1f:	xchg   esp,eax
  416c20:	jmp    0x546c892f
  416c25:	cmp    esp,ebx
  416c27:	pop    edx
  416c28:	ret    0x57bf
  416c2b:	push   esi
  416c2c:	mov    ebx,0xa778edab
  416c31:	lahf   
  416c32:	cdq    
  416c33:	imul   ecx,DWORD PTR [esi-0x73],0x14598910
  416c3a:	inc    ecx
  416c3b:	jnp    0x416bbe
  416c3d:	cli    
  416c3e:	(bad)  [ebx-0x6d]
  416c41:	adc    BYTE PTR [edi],cl
  416c43:	loopne 0x416bef
  416c45:	aam    0x15
  416c47:	mov    dh,dl
  416c49:	adc    eax,0x145338d0
  416c4e:	jl     0x416c40
  416c50:	pop    edi
  416c51:	ins    DWORD PTR es:[edi],dx
  416c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c53:	jmp    0xbfc2a9b8
  416c58:	loop   0x416bfd
  416c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c5b:	lahf   
  416c5c:	mov    esp,0xc900079c
  416c61:	push   edx
  416c62:	test   eax,0x209ffb25
  416c67:	(bad)  
  416c68:	xchg   esp,eax
  416c69:	cwde   
  416c6a:	push   es
  416c6b:	mov    dl,0xe5
  416c6d:	sub    edi,DWORD PTR [ecx+0x74ed3df9]
  416c73:	aam    0xe
  416c75:	in     al,0x28
  416c77:	pop    esp
  416c78:	sahf   
  416c79:	adc    cl,BYTE PTR [esi-0x2ad421c2]
  416c7f:	sub    DWORD PTR [esi-0x25],0x2c
  416c83:	push   edi
  416c84:	test   eax,0xbc425702
  416c89:	es add al,0xef
  416c8c:	cmp    ebx,esi
  416c8e:	add    dh,cl
  416c90:	push   ss
  416c91:	adc    al,BYTE PTR [ecx-0x23]
  416c94:	je     0x416ca2
  416c96:	or     dh,BYTE PTR [esi+0x5d4df2c9]
  416c9c:	(bad)  
  416c9d:	pop    ebp
  416c9e:	pop    ss
  416c9f:	fistp  WORD PTR [esi-0x3ccf0c1e]
  416ca5:	aaa    
  416ca6:	pushf  
  416ca7:	add    ah,dl
  416ca9:	out    0xf2,eax
  416cab:	sub    dh,cl
  416cad:	mov    eax,0xfd3c19f5
  416cb2:	adc    al,0x30
  416cb4:	adc    eax,0x39bd7ef2
  416cb9:	jp     0x416cf0
  416cbb:	mov    edi,0xae3d2ee5
  416cc0:	pop    esi
  416cc1:	loopne 0x416c73
  416cc3:	push   edi
  416cc4:	dec    ebx
  416cc5:	fadd   DWORD PTR [eax]
  416cc7:	xchg   esp,eax
  416cc8:	xor    al,0xb5
  416cca:	push   esp
  416ccb:	clc    
  416ccc:	in     al,dx
  416ccd:	pop    ecx
  416cce:	cs test eax,0x325daf82
  416cd4:	adc    eax,0xd4697d4a
  416cd9:	push   edx
  416cda:	jmp    0xce180f6e
  416cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ce0:	in     eax,dx
  416ce1:	scas   eax,DWORD PTR es:[edi]
  416ce2:	mov    al,0x20
  416ce4:	fs cmp ebp,edi
  416ce7:	xchg   edx,eax
  416ce8:	or     al,0x87
  416cea:	shl    BYTE PTR [ebx+0x63ceace5],1
  416cf0:	lahf   
  416cf1:	jecxz  0x416d03
  416cf3:	sar    DWORD PTR [eax],0xee
  416cf6:	test   al,0x39
  416cf8:	pop    edx
  416cf9:	mov    ds:0x32e12465,eax
  416cfe:	inc    ebp
  416cff:	push   ds
  416d00:	cdq    
  416d01:	push   cs
  416d02:	xchg   ebx,eax
  416d03:	push   cs
  416d04:	enter  0x3dec,0xff
  416d08:	dec    esi
  416d09:	idiv   BYTE PTR [edi-0x1fb5919c]
  416d0f:	(bad)  
  416d10:	mov    BYTE PTR [esi+esi*1-0x6c2085a3],dl
  416d17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d18:	xchg   BYTE PTR [ecx+0x2b],bh
  416d1b:	dec    edx
  416d1c:	pop    es
  416d1d:	rcl    ebp,cl
  416d1f:	sbb    BYTE PTR [esi-0x77cf3979],al
  416d25:	repz xchg ebx,eax
  416d27:	fisub  DWORD PTR [edi+ebp*1]
  416d2a:	(bad)  
  416d2b:	and    DWORD PTR [edx-0xb],ecx
  416d2e:	mov    ds:0x806b5964,al
  416d33:	push   0x57
  416d35:	(bad)  
  416d36:	sbb    eax,0xa274ee52
  416d3b:	xchg   edx,eax
  416d3c:	push   ebp
  416d3d:	mov    ebx,0x8e1ca30
  416d42:	repnz sub edi,DWORD PTR [ebx-0xb]
  416d46:	xchg   ebx,eax
  416d47:	lods   eax,DWORD PTR ds:[esi]
  416d48:	dec    esi
  416d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d4a:	push   ds
  416d4b:	add    ecx,ebp
  416d4d:	mov    edi,0xbfb9b2df
  416d52:	xchg   BYTE PTR [edx+0x29],bl
  416d55:	mov    ebp,0x8ba9838c
  416d5a:	mov    ch,0xff
  416d5c:	mov    ah,0x3d
  416d5e:	xor    dh,0xac
  416d61:	or     eax,0x8ec5b009
  416d66:	adc    esi,DWORD PTR [esi-0x6a2449de]
  416d6c:	push   ecx
  416d6d:	mov    cl,BYTE PTR [ecx+ebp*2]
  416d70:	rol    DWORD PTR [ebx-0x27],0x88
  416d74:	jp     0x416d48
  416d76:	sbb    ch,BYTE PTR [edi-0x4]
  416d79:	fisub  WORD PTR [edi+0x2a]
  416d7c:	es ret 
  416d7e:	mov    esp,0xcecc23dc
  416d83:	pop    edi
  416d84:	push   0xe0c5ecc
  416d89:	frstor ds:0xe2abebe9
  416d8f:	mov    ah,0x6c
  416d91:	mov    bh,0xfb
  416d93:	sub    DWORD PTR [eax+0x35f717be],eax
  416d99:	scas   al,BYTE PTR es:[edi]
  416d9a:	push   ds
  416d9b:	cli    
  416d9c:	sbb    al,0x1b
  416d9e:	in     eax,dx
  416d9f:	int    0xd9
  416da1:	repz or al,0x83
  416da4:	fist   WORD PTR [ecx+0x4]
  416da7:	outs   dx,DWORD PTR ds:[esi]
  416da8:	pop    ecx
  416da9:	xlat   BYTE PTR ds:[ebx]
  416daa:	call   0xab6f6711
  416daf:	sbb    edi,DWORD PTR [eax-0x5796a1b2]
  416db5:	test   eax,ecx
  416db7:	bound  esp,QWORD PTR [edx-0x28]
  416dba:	movq   QWORD PTR [ebx+0x4d5838af],mm7
  416dc1:	(bad)  
  416dc2:	leave  
  416dc3:	and    DWORD PTR [ecx+edx*8+0x75],esp
  416dc7:	out    dx,eax
  416dc8:	imul   esp,DWORD PTR [ebp+0x0],0xfffffff7
  416dcc:	and    al,BYTE PTR [esi+0x4ba2bbb2]
  416dd2:	popa   
  416dd3:	aam    0x1c
  416dd5:	out    0x12,al
  416dd7:	leave  
  416dd8:	sar    BYTE PTR [ebx],0x4e
  416ddb:	test   BYTE PTR [edi-0x35],ah
  416dde:	les    esp,FWORD PTR [ebp-0x24]
  416de1:	sbb    eax,0x9ab77fae
  416de6:	aad    0x4c
  416de8:	jecxz  0x416dc2
  416dea:	push   edi
  416deb:	(bad)
  416def:	push   cs
  416df0:	sbb    al,0x84
  416df2:	dec    esp
  416df3:	push   es
  416df4:	xchg   esp,eax
  416df5:	pop    ss
  416df6:	dec    edi
  416df7:	jl     0x416db1
  416df9:	into   
  416dfa:	loope  0x416dc2
  416dfc:	pusha  
  416dfd:	xchg   DWORD PTR [ecx],edx
  416dff:	loop   0x416e11
  416e01:	push   ds
  416e02:	int3   
  416e03:	sbb    DWORD PTR [edx-0x6a818119],ecx
  416e09:	adc    DWORD PTR [esi],eax
  416e0b:	dec    eax
  416e0c:	shl    DWORD PTR [edx],1
  416e0e:	jl     0x416de9
  416e10:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  416e12:	iret   
  416e13:	(bad)  
  416e14:	popa   
  416e15:	mov    dl,0xad
  416e17:	test   DWORD PTR [edi],esi
  416e19:	arpl   WORD PTR [edx-0x7e6a0d6a],bx
  416e1f:	jle    0x416e8a
  416e21:	xchg   esi,eax
  416e22:	pop    eax
  416e23:	sbb    BYTE PTR [eax],0xca
  416e26:	outs   dx,DWORD PTR ds:[esi]
  416e27:	retf   
  416e28:	test   al,0xb8
  416e2a:	fsubrp st(5),st
  416e2c:	inc    esp
  416e2d:	fcmove st,st(0)
  416e2f:	push   edi
  416e30:	sar    DWORD PTR [ebp-0x7f02f8d0],0x9d
  416e37:	inc    edx
  416e38:	xlat   BYTE PTR ds:[ebx]
  416e39:	call   0x62b1:0x70359361
  416e40:	add    al,0xe8
  416e42:	mov    bh,0x9a
  416e44:	into   
  416e45:	dec    ebx
  416e46:	xor    al,0x43
  416e48:	mov    al,0x11
  416e4a:	push   edx
  416e4b:	inc    edx
  416e4c:	call   0x9922b30a
  416e51:	stc    
  416e52:	out    dx,al
  416e53:	mov    DWORD PTR [esi-0x39483b8c],ecx
  416e59:	sbb    BYTE PTR [edi],dh
  416e5b:	mov    esi,0x6f288deb
  416e60:	rcl    BYTE PTR [ebx+esi*8],cl
  416e63:	xor    ecx,edx
  416e65:	mov    ecx,0xf977acf5
  416e6a:	retf   0xf6cb
  416e6d:	push   esi
  416e6e:	push   esi
  416e6f:	enter  0x698b,0xaf
  416e73:	jns    0x416e7d
  416e75:	inc    eax
  416e76:	scas   eax,DWORD PTR es:[edi]
  416e77:	dec    esp
  416e78:	(bad)  
  416e7a:	mov    cl,0x6d
  416e7c:	in     eax,dx
  416e7d:	sub    al,0xcd
  416e7f:	dec    esi
  416e80:	jp     0x416e31
  416e82:	or     DWORD PTR [edi-0x56337af9],0xffffff98
  416e89:	xchg   edi,eax
  416e8a:	pop    ss
  416e8b:	jne    0x416eca
  416e8d:	jae    0x416ea8
  416e8f:	(bad)  
  416e90:	xchg   ecx,eax
  416e91:	std    
  416e92:	pop    ebx
  416e93:	inc    edx
  416e94:	dec    esi
  416e95:	mov    esp,0xebeca364
  416e9a:	int3   
  416e9b:	inc    eax
  416e9c:	sahf   
  416e9d:	fistp  QWORD PTR [edx]
  416e9f:	push   ecx
  416ea0:	icebp  
  416ea1:	cmp    al,BYTE PTR [edx+edx*1]
  416ea4:	popa   
  416ea5:	rcl    BYTE PTR [ecx],1
  416ea7:	pop    ds
  416ea8:	jbe    0x416f1e
  416eaa:	stc    
  416eab:	cdq    
  416eac:	sub    al,0x52
  416eae:	jg     0x416ecd
  416eb0:	mov    bl,0x54
  416eb2:	(bad)  
  416eb3:	add    al,0x1a
  416eb5:	fwait
  416eb6:	call   0x1cee:0x68fa48d3
  416ebd:	mov    WORD PTR [edi-0x30],?
  416ec0:	inc    ecx
  416ec1:	inc    edx
  416ec2:	and    esp,eax
  416ec4:	mov    eax,DWORD PTR [edx-0x5db5332d]
  416eca:	sub    al,0xbb
  416ecc:	xchg   esi,eax
  416ecd:	dec    edx
  416ece:	cmc    
  416ecf:	mov    BYTE PTR [eax+0x51],ah
  416ed2:	push   0x236b91fd
  416ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ed8:	in     eax,dx
  416ed9:	in     eax,dx
  416eda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416edb:	sbb    dl,BYTE PTR [edx+ebx*2]
  416ede:	jle    0x416f40
  416ee0:	adc    dh,BYTE PTR ds:0x6110916a
  416ee6:	daa    
  416ee7:	jo     0x416f54
  416ee9:	mov    ah,BYTE PTR [esi+0x6d]
  416eec:	mov    edi,0x7c080c1e
  416ef1:	cmp    BYTE PTR [edi-0x26],cl
  416ef4:	popf   
  416ef5:	inc    edx
  416ef6:	mov    dl,0xf9
  416ef8:	in     eax,dx
  416ef9:	pop    esi
  416efa:	and    al,0x9c
  416efc:	mov    ebx,0x3383bdad
  416f01:	shr    BYTE PTR [ebx],1
  416f03:	retf   0xce2b
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	inc    ebx
  416f18:	add    DWORD PTR [edx-0x7dbf6c63],ebx
  416f1e:	adc    DWORD PTR [edi],0x5c
  416f21:	add    DWORD PTR [ebx-0x5836893d],0xffffffc3
  416f28:	push   0x4e6bf366
  416f2d:	sub    BYTE PTR [ebx-0x762479a1],cl
  416f33:	mov    al,ds:0x26c1da6e
  416f38:	xor    eax,0xf82f4547
  416f3d:	jg     0x416f08
  416f3f:	imul   edx,esp,0x4143402
  416f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f46:	in     eax,dx
  416f47:	fcmovnb st,st(1)
  416f49:	pop    edi
  416f4a:	sar    BYTE PTR [ecx-0x542a943d],0x86
  416f51:	pop    edx
  416f52:	push   eax
  416f53:	aam    0x3
  416f55:	push   ds
  416f56:	rol    DWORD PTR [ecx],1
  416f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f59:	into   
  416f5a:	sub    BYTE PTR [edx+0x58],dl
  416f5d:	inc    ebp
  416f5e:	jl     0x416f8c
  416f60:	das    
  416f61:	push   ds
  416f62:	inc    edi
  416f63:	jbe    0x416f6a
  416f65:	mov    ebp,0x75e60936
  416f6a:	mov    edi,0x470d59b6
  416f6f:	fs xor al,0x71
  416f72:	int3   
  416f73:	mov    BYTE PTR [edi],cl
  416f75:	mov    esi,0xd3cb8ac6
  416f7a:	div    DWORD PTR [edi-0x5988e0a1]
  416f80:	(bad)  
  416f81:	ss ds mov dl,0xcc
  416f85:	gs lock enter 0x2e2f,0xae
  416f8b:	and    bl,BYTE PTR [edx-0x7fdae248]
  416f91:	aas    
  416f92:	dec    ebx
  416f93:	add    esp,DWORD PTR [eax]
  416f95:	out    dx,eax
  416f96:	xor    BYTE PTR [edx],ch
  416f98:	pop    ebp
  416f99:	pop    eax
  416f9a:	xor    ecx,DWORD PTR [edx+0x15819cbb]
  416fa0:	mov    eax,ds:0x383ce9d9
  416fa5:	hlt    
  416fa6:	dec    esi
  416fa7:	xchg   ebx,eax
  416fa8:	imul   esi,DWORD PTR [ecx-0x1d1424f1],0xead5d23
  416fb2:	push   esi
  416fb3:	xor    esp,DWORD PTR [edi]
  416fb5:	leave  
  416fb6:	mov    ebx,0x7f1b3c79
  416fbb:	sar    DWORD PTR [edx+ebx*1+0x2c8beac9],1
  416fc2:	cmc    
  416fc3:	pop    ss
  416fc4:	mov    dh,0x22
  416fc6:	lock aam 0x87
  416fc9:	push   0xffffffad
  416fcb:	mov    al,ds:0xba30b456
  416fd0:	scas   al,BYTE PTR es:[edi]
  416fd1:	pop    ss
  416fd2:	jg     0x416fba
  416fd4:	dec    edx
  416fd5:	clc    
  416fd6:	xchg   edi,eax
  416fd7:	aas    
  416fd8:	cmp    eax,0x271395dc
  416fdd:	sub    esp,DWORD PTR [esi+0x6ef4e528]
  416fe3:	pop    ecx
  416fe4:	data16 scas al,BYTE PTR es:[edi]
  416fe6:	ins    DWORD PTR es:[edi],dx
  416fe7:	dec    ecx
  416fe8:	xor    DWORD PTR [ebp+0x3a],esp
  416feb:	mov    bl,0x2d
  416fed:	jb     0x417047
  416fef:	dec    edi
  416ff0:	popf   
  416ff1:	ss mov ch,bh
  416ff4:	gs push 0x7150490b
  416ffa:	sub    eax,0xdfab733c
  416fff:	mov    edi,0x62157664
  417004:	enter  0xe101,0x58
  417008:	inc    ecx
  417009:	ja     0x41704d
  41700b:	xchg   ch,ch
  41700d:	dec    esi
  41700e:	pusha  
  41700f:	adc    ecx,edx
  417011:	and    esp,DWORD PTR [ebx-0x1e]
  417014:	jno    0x41701a
  417016:	pop    ebp
  417017:	cli    
  417018:	or     eax,0x4630ffab
  41701d:	jg     0x416faa
  41701f:	xchg   ebp,eax
  417020:	stc    
  417021:	test   BYTE PTR [eax],cl
  417023:	jmp    0x6c99b97e
  417028:	mov    bh,0x87
  41702a:	out    dx,eax
  41702b:	mov    cl,0x41
  41702d:	scas   al,BYTE PTR es:[edi]
  41702e:	add    ah,BYTE PTR [eax+ebp*2+0x40c5268f]
  417035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417036:	std    
  417037:	retf   0x4824
  41703a:	push   edi
  41703b:	pop    es
  41703c:	xchg   edx,eax
  41703d:	into   
  41703e:	inc    ecx
  41703f:	and    DWORD PTR [eax+0x37],esi
  417042:	cmp    DWORD PTR [ecx+ebx*2],edx
  417045:	cdq    
  417046:	fist   WORD PTR [edx+0x6175c0da]
  41704c:	(bad)  
  41704d:	pop    ebp
  41704e:	test   al,0xdb
  417050:	out    dx,al
  417051:	scas   al,BYTE PTR es:[edi]
  417052:	mov    ch,0xbd
  417054:	iret   
  417055:	push   0x43ee8a19
  41705a:	stc    
  41705b:	jle    0x4170a2
  41705d:	icebp  
  41705e:	sub    al,0x23
  417060:	mov    WORD PTR ds:0x44c5dada,?
  417066:	cdq    
  417067:	mov    eax,0x22f67ba
  41706c:	in     eax,0xc4
  41706e:	push   edx
  41706f:	adc    edi,DWORD PTR [eax+edx*1-0x65]
  417073:	fiadd  DWORD PTR [ecx-0x656ebe8b]
  417079:	jmp    0x49c6:0x6a67da2a
  417080:	sbb    cl,BYTE PTR [edi+0x6c1ffeed]
  417086:	or     al,0x41
  417088:	and    BYTE PTR [ecx],bh
  41708a:	mov    eax,0xe4b4c866
  41708f:	aam    0x30
  417091:	jmp    0x8295:0xe2389648
  417098:	(bad)  
  417099:	rcr    bl,1
  41709b:	lahf   
  41709c:	jmp    0x4170cd
  41709e:	add    BYTE PTR [esi-0x70],ch
  4170a1:	ins    DWORD PTR es:[edi],dx
  4170a2:	push   cs
  4170a3:	inc    eax
  4170a4:	xor    dh,BYTE PTR [ecx-0x56]
  4170a7:	hlt    
  4170a8:	hlt    
  4170a9:	inc    ebp
  4170aa:	loopne 0x417044
  4170ac:	dec    edx
  4170ad:	jb     0x4170ff
  4170af:	cdq    
  4170b0:	mov    WORD PTR ds:0x4837d218,fs
  4170b6:	stos   BYTE PTR es:[edi],al
  4170b7:	cdq    
  4170b8:	je     0x4170d3
  4170ba:	cmp    DWORD PTR [ebp+0x6f32f380],esp
  4170c0:	or     eax,0x52261916
  4170c5:	push   edx
  4170c6:	mov    ds:0x9bdc55e8,al
  4170cb:	fwait
  4170cc:	and    dh,BYTE PTR [ecx-0x1c165627]
  4170d2:	cmp    eax,0xa750942f
  4170d7:	pop    ebx
  4170d8:	outs   dx,DWORD PTR ds:[esi]
  4170d9:	push   cs
  4170da:	test   esp,ebp
  4170dc:	jnp    0x4170b0
  4170de:	repz sbb al,0x63
  4170e1:	push   ds
  4170e2:	adc    BYTE PTR [eax+edx*1-0x379b6d06],0x2b
  4170ea:	imul   ebp,esp,0x9672833b
  4170f0:	push   ebp
  4170f1:	jnp    0x4170dd
  4170f3:	and    eax,0xd0ae6836
  4170f8:	out    dx,al
  4170f9:	jmp    0xf118:0xe72b918b
  417100:	xor    bh,BYTE PTR [ebp+0x2f]
  417103:	ret    
  417104:	mov    ds:0xfac5f6d4,al
  417109:	push   edx
  41710a:	sbb    al,0x7b
  41710c:	or     ebx,DWORD PTR [eax-0x3ccc48c2]
  417112:	jge    0x41714e
  417114:	sub    al,0xb2
  417116:	scas   al,BYTE PTR es:[edi]
  417117:	aas    
  417118:	add    al,BYTE PTR [edx+ebp*4-0x73495ce2]
  41711f:	out    dx,al
  417120:	and    eax,0xf1c2747b
  417125:	mov    edx,0x92f6f4f6
  41712a:	out    dx,al
  41712b:	pop    edx
  41712c:	xor    DWORD PTR [ebp-0x1f],edx
  41712f:	ds lock iret 
  417132:	imul   ebx,DWORD PTR [ebx-0x72b20f9],0x77bc2a0d
  41713c:	inc    esp
  41713d:	aad    0x2e
  41713f:	mov    al,ds:0xe8c9d243
  417144:	pop    es
  417145:	cmc    
  417146:	cwde   
  417147:	jg     0x41710c
  417149:	cmp    DWORD PTR [eax-0x1e],0x3
  41714d:	mov    ebp,0xd86f5bf7
  417152:	fidivr WORD PTR [esi+0x7c51ea47]
  417158:	sbb    bl,BYTE PTR [ecx]
  41715a:	mov    ds:0x227685b4,al
  41715f:	stos   DWORD PTR es:[edi],eax
  417160:	sub    eax,0x4cc7f91d
  417165:	mov    cl,0x66
  417167:	mov    edx,0x4ed7ee16
  41716c:	test   eax,0x4aa3e638
  417171:	push   esi
  417172:	add    eax,ebx
  417174:	pop    edi
  417175:	sti    
  417176:	sbb    esi,ecx
  417178:	dec    ecx
  417179:	mov    edx,0x6441cc70
  41717e:	popf   
  41717f:	cld    
  417180:	pop    ebp
  417181:	popa   
  417182:	mov    BYTE PTR [ecx+edi*4],dl
  417185:	addr16 mov ch,ch
  417188:	pop    ecx
  417189:	or     dh,BYTE PTR [ebp+0x62d77f6f]
  41718f:	pop    edx
  417190:	dec    ecx
  417191:	push   ecx
  417192:	(bad)  
  417193:	iret   
  417194:	inc    esi
  417195:	and    dl,BYTE PTR [eax]
  417197:	dec    edi
  417198:	push   ds
  417199:	push   ebx
  41719a:	into   
  41719b:	mov    edx,0xb2119402
  4171a0:	inc    ecx
  4171a1:	xchg   BYTE PTR ds:[ecx+0x3b],dh
  4171a5:	into   
  4171a6:	xchg   esi,eax
  4171a7:	cdq    
  4171a8:	pop    eax
  4171a9:	ins    DWORD PTR es:[edi],dx
  4171aa:	push   es
  4171ab:	mov    DWORD PTR [edi+0x1acf8e42],ecx
  4171b1:	and    al,0x45
  4171b3:	into   
  4171b4:	inc    eax
  4171b5:	xor    DWORD PTR [edi-0x12],esp
  4171b8:	and    ch,BYTE PTR [ecx+0x4c]
  4171bb:	mov    ah,0x7b
  4171bd:	hlt    
  4171be:	inc    esi
  4171bf:	outs   dx,BYTE PTR ds:[esi]
  4171c0:	int3   
  4171c1:	out    0x3c,eax
  4171c3:	inc    ecx
  4171c4:	into   
  4171c5:	ss gs in al,dx
  4171c8:	push   ss
  4171c9:	mov    eax,ds:0x931cf370
  4171ce:	add    cl,BYTE PTR [esi+0x752a4bd8]
  4171d4:	std    
  4171d5:	ins    BYTE PTR es:[edi],dx
  4171d6:	pop    ss
  4171d7:	pop    eax
  4171d8:	inc    ebp
  4171d9:	imul   ebx,eax,0x2e9c378
  4171df:	cmp    dh,BYTE PTR [edi+0x3dae3001]
  4171e5:	pmulhw mm4,QWORD PTR [esi+0x35]
  4171e9:	jo     0x4171bb
  4171eb:	mov    BYTE PTR [ecx],cl
  4171ed:	xor    cl,ch
  4171ef:	call   0x6ec2:0x21f572b5
  4171f6:	push   0x53
  4171f8:	retf   
  4171f9:	jp     0xa797897a
  4171ff:	rcr    DWORD PTR [ebp-0x158db7ef],0xb6
  417206:	int3   
  417207:	lds    ecx,FWORD PTR [eax]
  417209:	int3   
  41720a:	inc    eax
  41720b:	mov    ch,0x5d
  41720d:	retf   0xf4f
  417210:	sti    
  417211:	adc    edx,ecx
  417213:	repz xchg esp,eax
  417215:	inc    ebx
  417216:	fld    QWORD PTR [ebx]
  417218:	inc    eax
  417219:	outs   dx,BYTE PTR ds:[esi]
  41721a:	push   0x4d
  41721c:	ss (bad) 
  41721e:	xlat   BYTE PTR ds:[ebx]
  41721f:	std    
  417220:	pop    esi
  417221:	dec    eax
  417222:	push   0x1fe90c49
  417227:	das    
  417228:	test   edx,esi
  41722a:	fldcw  WORD PTR [ecx+esi*1-0x7b0fc1cd]
  417231:	ror    DWORD PTR [eax-0x6f],0xde
  417235:	push   edx
  417236:	mov    ebp,DWORD PTR [ebx-0x6a]
  417239:	mov    ch,0xf4
  41723b:	int3   
  41723c:	dec    ecx
  41723d:	out    0x20,al
  41723f:	pop    ecx
  417240:	mov    cs,esi
  417242:	js     0xcc0e63d4
  417248:	add    eax,eax
  41724a:	retf   
  41724b:	push   0xffffffaa
  41724d:	sbb    DWORD PTR [ebp-0x6d5030ac],eax
  417253:	int3   
  417254:	pop    ecx
  417255:	test   ebx,ecx
  417257:	es cdq 
  417259:	jne    0x41721f
  41725b:	outs   dx,BYTE PTR ds:[esi]
  41725c:	aaa    
  41725d:	cmp    DWORD PTR [esp+edi*1],0xffffffd9
  417261:	sub    BYTE PTR [edi],ah
  417263:	push   ebx
  417264:	cwde   
  417265:	push   cs
  417266:	mov    ds:0xe4e5fcd8,al
  41726b:	dec    ecx
  41726c:	arpl   ax,cx
  41726e:	pop    ecx
  41726f:	rol    BYTE PTR [esi+0x35e1c6f5],cl
  417275:	fnsave [edi+0x5]
  417278:	xor    eax,DWORD PTR [ecx+0x6a0a7a9]
  41727e:	sub    BYTE PTR [esi+ebx*1],ch
  417281:	out    dx,al
  417282:	fiadd  WORD PTR [ebx-0x33739d8f]
  417288:	mov    bh,0x44
  41728a:	sub    ch,BYTE PTR [ebp+0x4ee1c1fc]
  417290:	xchg   DWORD PTR [edi-0x5a],ecx
  417293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417294:	sub    DWORD PTR [esi+0x5f],esp
  417297:	iret   
  417298:	or     edx,DWORD PTR ds:0x14018bd
  41729e:	enter  0x7a17,0x4f
  4172a2:	fmul   QWORD PTR [ebx+0x32]
  4172a5:	(bad)  [edi]
  4172a7:	xchg   esp,eax
  4172a8:	fimul  DWORD PTR [eax+0x70]
  4172ab:	sbb    al,0x65
  4172ad:	xchg   esi,eax
  4172ae:	sbb    eax,esi
  4172b0:	std    
  4172b1:	ret    0xa728
  4172b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172b5:	mov    ds:0x93ac01bc,al
  4172ba:	mov    cl,0xa2
  4172bc:	jne    0x4172ca
  4172be:	xor    ebx,edi
  4172c0:	pop    eax
  4172c1:	mov    ecx,0x31f6effb
  4172c6:	pushf  
  4172c7:	(bad)  
  4172c8:	hlt    
  4172c9:	shl    ah,0x4c
  4172cc:	(bad)  
  4172cd:	xchg   edx,eax
  4172ce:	sti    
  4172cf:	pop    edx
  4172d0:	nop
  4172d1:	push   eax
  4172d2:	neg    BYTE PTR [ecx-0x6951e334]
  4172d8:	shl    DWORD PTR [ecx-0x695624f3],0xfa
  4172df:	mov    edi,0x8f6429fa
  4172e4:	sub    BYTE PTR [esi+0xc],dh
  4172e7:	xlat   BYTE PTR ds:[ebx]
  4172e8:	add    eax,0xa9cfec58
  4172ed:	mov    esi,0xb2d7c9ec
  4172f2:	mov    edx,0xb491550b
  4172f7:	inc    edi
  4172f8:	arpl   bx,sp
  4172fa:	js     0x417372
  4172fc:	add    ecx,esi
  4172fe:	inc    esp
  4172ff:	bound  edi,QWORD PTR [eax-0x62]
  417302:	jb     0x4172e7
  417304:	jl     0x4172b8
  417306:	sbb    edi,edx
  417308:	shl    DWORD PTR [ebp-0x3c62cbc],1
  41730e:	imul   edi,esi,0x5cbf6a76
  417314:	shl    BYTE PTR [eax-0x13],1
  417317:	xchg   ecx,eax
  417318:	iret   
  417319:	fcomip st,st(3)
  41731b:	mov    ecx,0x979e3368
  417320:	fxam   
  417322:	mov    bh,0xb8
  417324:	es call 0x3130:0x5b27ab48
  41732c:	xor    esp,edi
  41732e:	or     cl,BYTE PTR [ebx+0x66]
  417331:	mov    esp,0x3b32e9eb
  417336:	into   
  417337:	push   edx
  417338:	sub    al,0xbd
  41733a:	(bad)  
  41733b:	mov    WORD PTR [ebx+0x6635e397],ss
  417341:	fstp   TBYTE PTR [edx-0x5e]
  417344:	xor    ch,BYTE PTR [ecx-0x7ab3d573]
  41734a:	push   0x9966bde0
  41734f:	jmp    0x4a62:0xfff7e30f
  417356:	push   0xc67202e6
  41735b:	cmp    eax,DWORD PTR [ebx+0x71]
  41735e:	shr    DWORD PTR [ecx+ecx*1],1
  417361:	mov    BYTE PTR [edx-0x4f],cl
  417364:	add    al,0x9e
  417366:	test   eax,0xc92edfe7
  41736b:	inc    edi
  41736c:	sub    bl,ah
  41736e:	dec    ebp
  41736f:	ret    
  417370:	mov    ds:0xb63b410f,al
  417375:	fsub   QWORD PTR [ebp+0x9]
  417378:	lock imul edx,DWORD PTR [ebx],0xffffff96
  41737c:	jae    0x417302
  41737e:	xchg   esi,eax
  41737f:	std    
  417380:	repz sti 
  417382:	mov    esi,0xe809724
  417387:	inc    ebp
  417388:	ins    BYTE PTR es:[edi],dx
  417389:	or     eax,0x78372d7b
  41738e:	ficom  WORD PTR [edx]
  417390:	xchg   ecx,eax
  417391:	dec    esp
  417392:	ror    DWORD PTR ds:0x4809f41b,cl
  417398:	pop    eax
  417399:	iret   
  41739a:	xchg   ebp,eax
  41739b:	push   ds
  41739c:	push   0xa5a2b3a5
  4173a1:	daa    
  4173a2:	jmp    0x4173d8
  4173a4:	xor    BYTE PTR [eax+0x9b40da6],ah
  4173aa:	inc    esp
  4173ab:	jl     0x417417
  4173ad:	ss inc eax
  4173af:	xor    ecx,DWORD PTR [edx]
  4173b1:	push   0xe799e066
  4173b6:	cmp    dh,0xce
  4173b9:	ret    0x183c
  4173bc:	test   DWORD PTR [esi],ecx
  4173be:	lods   eax,DWORD PTR ds:[esi]
  4173bf:	aas    
  4173c0:	shl    ebp,0x6d
  4173c3:	add    BYTE PTR [ecx+0x4828a35a],dh
  4173c9:	mov    edi,0x14b8b8fb
  4173ce:	mov    ebp,0x265f36d2
  4173d3:	add    ch,al
  4173d5:	or     edx,esp
  4173d7:	cdq    
  4173d8:	adc    al,BYTE PTR [ecx]
  4173da:	arpl   WORD PTR [ecx+0x7c9efec0],bx
  4173e0:	aad    0x35
  4173e2:	inc    esp
  4173e3:	sub    eax,0x75f4ae5b
  4173e8:	inc    ecx
  4173e9:	xchg   edi,eax
  4173ea:	test   eax,0xabc44925
  4173ef:	rcl    DWORD PTR [ecx],0xa5
  4173f2:	frstor ds:0x4a012a3d
  4173f8:	push   cs
  4173f9:	call   0x4d40:0x85537851
  417400:	mov    edx,0xcbe83670
  417405:	or     eax,0x3031d0d
  41740a:	cld    
  41740b:	fsubr  DWORD PTR [ecx]
  41740d:	add    al,0xe9
  41740f:	pop    edi
  417410:	add    eax,0x136fd500
  417415:	xlat   BYTE PTR ds:[ebx]
  417416:	sub    esi,DWORD PTR [edx]
  417418:	add    ebx,DWORD PTR [eax+esi*2+0x3]
  41741c:	fwait
  41741d:	or     cl,dl
  41741f:	mov    ds:0x7a0fe30e,eax
  417424:	mov    WORD PTR [esi+0x6c2f389e],?
  41742a:	cwde   
  41742b:	jne    0x417480
  41742d:	adc    DWORD PTR [ecx-0x5],esp
  417430:	loope  0x41745e
  417432:	clc    
  417433:	cmc    
  417434:	jno    0x417462
  417436:	ret    
  417437:	jmp    0x1aef86f1
  41743c:	dec    edi
  41743d:	xchg   dh,cl
  41743f:	enter  0x203a,0x66
  417443:	ss test al,0x72
  417446:	iret   
  417447:	or     al,BYTE PTR [esi]
  417449:	sbb    al,0x32
  41744b:	fs shl ecx,1
  41744e:	iret   
  41744f:	int    0x13
  417451:	nop
  417452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417453:	imul   edx,DWORD PTR [ebx-0x69],0x229df065
  41745a:	xor    eax,0xf19a4eb7
  41745f:	in     eax,dx
  417460:	pop    eax
  417461:	add    edx,DWORD PTR [edi+0x57]
  417464:	jns    0x4174c4
  417466:	stos   DWORD PTR es:[edi],eax
  417467:	(bad)  
  417468:	neg    DWORD PTR [edx+0x68]
  41746b:	sub    DWORD PTR [eax-0x50682231],eax
  417471:	shr    BYTE PTR [esi-0x33],1
  417474:	mov    ah,0x33
  417476:	add    eax,0xad06af6a
  41747b:	aaa    
  41747c:	add    al,0x1c
  41747e:	dec    esp
  41747f:	iret   
  417480:	xor    al,0x1d
  417482:	int3   
  417483:	cmp    DWORD PTR [ebp-0x41cdf1e8],edi
  417489:	hlt    
  41748a:	ficom  DWORD PTR [ebx+0x64bd75d9]
  417490:	push   esi
  417491:	fisubr DWORD PTR [ebp+0x20]
  417494:	mov    ch,0x27
  417496:	and    esi,DWORD PTR [ecx-0x7aa6cda6]
  41749c:	pop    es
  41749d:	xor    DWORD PTR [eax+ebx*4-0xf],0x13
  4174a2:	stos   BYTE PTR es:[edi],al
  4174a3:	mov    DWORD PTR [edi],ecx
  4174a5:	cs retf 
  4174a7:	push   edx
  4174a8:	inc    ebx
  4174a9:	(bad)  
  4174aa:	pop    ebp
  4174ab:	sub    eax,0x43f17d5c
  4174b0:	clc    
  4174b1:	and    ah,BYTE PTR [ebx+0x1ff66d53]
  4174b7:	and    ecx,0xffffffae
  4174ba:	sar    ch,cl
  4174bc:	and    BYTE PTR [eax-0x13],ah
  4174bf:	mov    ah,0x4d
  4174c1:	mov    bl,0x48
  4174c3:	xor    eax,0xb2fc4001
  4174c8:	push   ebp
  4174c9:	push   0x7b
  4174cb:	repnz and cl,BYTE PTR [eax]
  4174ce:	sbb    al,0xaa
  4174d0:	jle    0x4174f1
  4174d2:	loopne 0x41751e
  4174d4:	nop
  4174d5:	inc    ebp
  4174d6:	lods   al,BYTE PTR ds:[esi]
  4174d7:	not    DWORD PTR [edi+eiz*8]
  4174da:	fstp   QWORD PTR [eax-0x171dee2a]
  4174e0:	cmp    eax,0x6e839040
  4174e5:	mov    edi,0xfdf6e14d
  4174ea:	mov    DWORD PTR [eax],ebp
  4174ec:	push   eax
  4174ed:	xchg   BYTE PTR [ebp+0x38],dh
  4174f0:	inc    eax
  4174f1:	add    cl,BYTE PTR [edx+edx*1]
  4174f4:	imul   esi,DWORD PTR [esi-0x33],0xc775f0f4
  4174fb:	int3   
  4174fc:	mov    ?,WORD PTR [eax-0x392ae704]
  417502:	int    0xad
  417504:	xor    al,0x37
  417506:	xor    BYTE PTR [ecx-0x379ed1b1],al
  41750c:	sub    al,0x36
  41750e:	and    ebx,ebx
  417510:	cvtps2pi mm1,xmm1
  417513:	ret    0x91b5
  417516:	stc    
  417517:	aaa    
  417518:	rcl    BYTE PTR [esi+eax*2],cl
  41751b:	data16 cld 
  41751d:	push   esi
  41751e:	sbb    BYTE PTR [edi],bh
  417520:	std    
  417521:	loop   0x41753d
  417523:	in     al,0xbb
  417525:	cmp    DWORD PTR [eax],ebp
  417527:	cld    
  417528:	outs   dx,BYTE PTR ds:[esi]
  417529:	cld    
  41752a:	retf   
  41752b:	jne    0x4174c7
  41752d:	or     eax,DWORD PTR [edi+0x63]
  417530:	test   al,0xcd
  417533:	adc    cl,BYTE PTR [esi+eax*1+0x53118bb2]
  41753a:	inc    eax
  41753b:	jg     0x417576
  41753d:	inc    ebp
  41753e:	jbe    0x41755c
  417540:	xchg   ebp,eax
  417541:	clc    
  417542:	(bad)  
  417544:	seta   dh
  417547:	jbe    0x4175a4
  417549:	je     0x41750f
  41754b:	add    al,0x2a
  41754d:	or     BYTE PTR ds:0x3d555560,ch
  417553:	mov    dh,0xc0
  417555:	fst    st(7)
  417557:	aam    0xfb
  417559:	or     al,0xd4
  41755b:	mov    dh,0xfd
  41755d:	push   ds
  41755e:	xchg   ecx,eax
  41755f:	vpmullw xmm0,xmm5,XMMWORD PTR [ecx]
  417563:	call   0xb75cf391
  417568:	mov    ah,0xc8
  41756a:	push   ebx
  41756b:	and    eax,0x60b4ffb8
  417570:	repnz xor al,0xab
  417573:	push   ecx
  417574:	dec    ebx
  417575:	xor    ecx,DWORD PTR [ebp-0x291d66d3]
  41757b:	or     al,0x48
  41757d:	ja     0x4175dc
  41757f:	mov    esi,edx
  417581:	push   ecx
  417582:	(bad)  
  417583:	xor    al,0x65
  417585:	inc    esi
  417586:	test   al,0xfb
  417588:	adc    cl,BYTE PTR [ebx-0x2]
  41758b:	mov    al,ds:0x8b08dfc4
  417590:	push   eax
  417591:	inc    edx
  417592:	and    DWORD PTR [ebp+0x73],0xc
  417596:	inc    edx
  417597:	cmp    BYTE PTR [eax+eax*4],ch
  41759a:	(bad)  
  41759b:	cmc    
  41759c:	jno    0x417593
  41759e:	in     eax,dx
  41759f:	bound  esp,QWORD PTR [edx-0x30907e86]
  4175a5:	lea    edx,[ecx]
  4175a7:	jle    0x4175af
  4175a9:	outs   dx,BYTE PTR ds:[esi]
  4175aa:	push   ss
  4175ab:	sbb    al,0xf4
  4175ad:	leave  
  4175ae:	mov    ebx,DWORD PTR [esi]
  4175b0:	push   edx
  4175b1:	xor    DWORD PTR [edx+0x71],eax
  4175b4:	and    al,0x5a
  4175b6:	call   0xb6b7:0x6b3b5b4a
  4175bd:	push   0x4c
  4175bf:	jb     0x417608
  4175c1:	inc    DWORD PTR [ecx]
  4175c3:	jbe    0x4175c7
  4175c5:	xchg   edx,eax
  4175c6:	push   esp
  4175c7:	jnp    0x4175d8
  4175c9:	adc    DWORD PTR [esi-0x8],0xfffffff3
  4175cd:	in     al,0x13
  4175cf:	ret    0x4312
  4175d2:	pop    eax
  4175d3:	inc    ecx
  4175d4:	sub    ebx,DWORD PTR [ebp+0x37]
  4175d7:	xor    DWORD PTR [ebp-0x1d218c5c],0x16
  4175de:	sub    eax,0xb915360d
  4175e3:	mov    ah,0xa4
  4175e5:	cmp    ebp,DWORD PTR [edi+0x1de0b58c]
  4175eb:	(bad)  
  4175ec:	out    dx,al
  4175ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175ee:	cwde   
  4175ef:	jecxz  0x417655
  4175f1:	popf   
  4175f2:	jns    0x4175f5
  4175f4:	dec    edi
  4175f5:	icebp  
  4175f6:	outs   dx,DWORD PTR ds:[esi]
  4175f7:	cld    
  4175f8:	xchg   esi,eax
  4175f9:	fld    QWORD PTR [esi-0x48921992]
  4175ff:	retf   0x1d67
  417602:	aas    
  417603:	xchg   esp,eax
  417604:	and    ax,0x7cc2
  417608:	push   0xacd07ed2
  41760d:	jg     0x4175bf
  41760f:	mov    BYTE PTR [esi],ah
  417611:	test   eax,0x7f30affa
  417616:	scas   al,BYTE PTR es:[edi]
  417617:	mov    BYTE PTR [eax+0x18a45c3d],0x20
  41761e:	xchg   ebp,eax
  41761f:	xor    BYTE PTR [eax+0x7c9f9186],ah
  417625:	lahf   
  417626:	lock test eax,0xf7fc57d6
  41762c:	dec    ecx
  41762d:	rol    DWORD PTR [esi],cl
  41762f:	fcmovnb st,st(6)
  417631:	add    al,al
  417633:	mov    bl,0xe2
  417635:	pop    eax
  417636:	sub    eax,0x1051329d
  41763b:	(bad)  
  41763c:	mov    dl,0xb9
  41763e:	xlat   BYTE PTR ds:[ebx]
  41763f:	data16 cs adc al,0x78
  417643:	inc    esi
  417644:	xchg   edi,eax
  417645:	lahf   
  417646:	pop    ebp
  417647:	pop    es
  417648:	cmp    dh,BYTE PTR [ecx+0x4dbb8d98]
  41764e:	cld    
  41764f:	jl     0x4175f6
  417651:	das    
  417652:	(bad)  
  417653:	xor    eax,0xa1c1782d
  417658:	retf   0x47ff
  41765b:	popa   
  41765c:	push   esi
  41765d:	mov    BYTE PTR [edi-0x7d],0x89
  417661:	mov    ebp,0x33223128
  417666:	jns    0x4175f5
  417668:	outs   dx,BYTE PTR ds:[esi]
  417669:	pop    esi
  41766a:	(bad)  
  41766b:	(bad)  
  41766c:	jb     0x417631
  41766e:	shl    ah,1
  417670:	aas    
  417671:	ret    0x7ebd
  417674:	call   esp
  417676:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  417678:	dec    edi
  417679:	or     al,0xd0
  41767b:	outs   dx,BYTE PTR ds:[esi]
  41767c:	je     0x41768f
  41767e:	fwait
  41767f:	retf   
  417680:	push   eax
  417681:	(bad)  [edi]
  417683:	test   ebx,ecx
  417685:	jne    0x417656
  417687:	fwait
  417688:	daa    
  417689:	dec    edi
  41768a:	and    eax,0xc1cb40d4
  41768f:	mov    dh,0x27
  417691:	int    0xe7
  417693:	rcr    DWORD PTR [ebx],cl
  417695:	pop    ecx
  417696:	pop    ss
  417697:	popa   
  417698:	shl    DWORD PTR es:[ebx-0x3c],cl
  41769c:	(bad)  
  41769d:	jp     0x4176fb
  41769f:	add    DWORD PTR [ebx+0x26],esp
  4176a2:	and    DWORD PTR [edx],0x9ab90d0d
  4176a8:	stos   DWORD PTR es:[edi],eax
  4176a9:	shl    dh,1
  4176ab:	xor    cl,bl
  4176ad:	or     ebx,DWORD PTR [esi-0x30]
  4176b0:	xor    DWORD PTR [ecx+0x177aaf2e],eax
  4176b6:	push   cs
  4176b7:	pop    ecx
  4176b8:	out    0xf6,eax
  4176ba:	pop    edi
  4176bb:	lods   eax,DWORD PTR ds:[esi]
  4176bc:	(bad)  
  4176bd:	xchg   ecx,eax
  4176be:	(bad)  
  4176c0:	or     DWORD PTR [ebx-0x2737c13b],0x3c
  4176c7:	sbb    BYTE PTR [ebx+edx*2+0x18],0xc3
  4176cc:	(bad)  
  4176cd:	ds xor eax,0xed830866
  4176d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176d4:	push   ebp
  4176d5:	sub    ecx,edi
  4176d7:	or     BYTE PTR [ebp-0x59],0x28
  4176db:	jns    0x417689
  4176dd:	call   0xe643:0xa6d6c08f
  4176e4:	(bad)  
  4176e5:	sbb    bl,BYTE PTR [ebp-0x7]
  4176e8:	scas   eax,DWORD PTR es:[edi]
  4176e9:	mov    edx,cs
  4176eb:	push   ds
  4176ec:	mov    esi,0xe5a54a06
  4176f1:	and    edx,edi
  4176f3:	push   ds
  4176f4:	jp     0x4176c5
  4176f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176f7:	scas   eax,DWORD PTR es:[edi]
  4176f8:	gs push esi
  4176fa:	xchg   edx,eax
  4176fb:	sub    al,0x59
  4176fd:	aaa    
  4176fe:	add    eax,0x96bff288
  417703:	rcl    ch,0xb3
  417706:	dec    edi
  417707:	sbb    bl,BYTE PTR [ebx-0x54]
  41770a:	inc    ebp
  41770b:	loop   0x417772
  41770d:	pop    ecx
  41770e:	icebp  
  41770f:	js     0x41770f
  417711:	xchg   esp,eax
  417712:	mov    cl,0x5c
  417714:	adc    al,0xe
  417716:	mov    ah,BYTE PTR [ebp+0x50e6ab78]
  41771c:	pop    esi
  41771d:	pop    ecx
  41771e:	out    dx,eax
  41771f:	jno    0x417722
  417721:	or     eax,0xaf694068
  417726:	pushf  
  417727:	dec    esp
  417728:	les    edi,FWORD PTR ds:0xa898d451
  41772e:	loope  0x4176d9
  417730:	and    esi,ebx
  417732:	inc    esi
  417733:	es aas 
  417735:	cld    
  417736:	mov    ecx,0x17a946e9
  41773b:	push   es
  41773c:	jg     0x41772b
  41773e:	into   
  41773f:	repz icebp 
  417741:	or     bl,BYTE PTR [esi-0x2f4aa0f1]
  417747:	inc    ebp
  417748:	adc    eax,0x6ee303aa
  41774d:	popa   
  41774e:	push   es
  41774f:	push   cs
  417750:	scas   eax,DWORD PTR es:[edi]
  417751:	jle    0x417750
  417753:	jb     0x4176f2
  417755:	and    eax,0x5e1b5bc5
  41775a:	loopne 0x41773b
  41775c:	cmc    
  41775d:	xor    DWORD PTR [eax],0xeaed5a0
  417763:	pop    ebp
  417764:	das    
  417765:	mov    edi,0x7cf893c3
  41776a:	test   BYTE PTR [esi],0x8c
  41776d:	popf   
  41776e:	and    ch,BYTE PTR ds:0x465efb6a
  417774:	add    eax,0x18d29e25
  417779:	jge    0x4176fd
  41777b:	mov    al,ds:0xed3336b0
  417780:	clc    
  417781:	jne    0x417764
  417783:	gs adc ecx,edx
  417786:	lods   al,BYTE PTR ds:[esi]
  417787:	and    DWORD PTR [ebp-0x68],ebx
  41778a:	xor    BYTE PTR [esi],dh
  41778c:	(bad)
  41778f:	push   ebp
  417790:	jmp    0x11b2f28
  417795:	div    DWORD PTR [esi+0x6c]
  417798:	leave  
  417799:	push   eax
  41779a:	push   es
  41779b:	outs   dx,DWORD PTR ds:[esi]
  41779c:	pop    ds
  41779d:	mov    ch,0x97
  41779f:	shr    BYTE PTR [esp+eiz*2],1
  4177a2:	sbb    DWORD PTR ds:0x62555bf2,ebp
  4177a8:	imul   edx,DWORD PTR [edi],0xffffff8a
  4177ab:	pushw  0xf3d2
  4177af:	stos   BYTE PTR es:[edi],al
  4177b0:	loopne 0x417762
  4177b2:	addr16 jg 0x41781b
  4177b5:	dec    esp
  4177b7:	or     BYTE PTR [ecx+0x47828f62],0xc1
  4177be:	xchg   ecx,eax
  4177bf:	mov    edx,0x4120de53
  4177c4:	inc    esi
  4177c5:	into   
  4177c6:	add    esi,DWORD PTR [ecx-0x46]
  4177c9:	jae    0x41783e
  4177cb:	xchg   esp,eax
  4177cc:	test   al,0x6e
  4177ce:	pop    ecx
  4177cf:	retf   0xc2a5
  4177d2:	cmp    eax,0x1151bc6
  4177d7:	daa    
  4177d8:	cmp    esi,esi
  4177da:	cmp    dl,BYTE PTR [ebx+0x7a6291d8]
  4177e0:	xchg   ecx,eax
  4177e1:	dec    esi
  4177e2:	in     al,dx
  4177e3:	cmp    edi,DWORD PTR [ebp-0x378c576]
  4177e9:	mov    bh,0x39
  4177eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ec:	jb     0x417865
  4177ee:	push   ebp
  4177ef:	or     ah,al
  4177f1:	ror    DWORD PTR [edx-0x619ac839],cl
  4177f7:	adc    al,0xa4
  4177f9:	lods   al,BYTE PTR ds:[esi]
  4177fa:	popa   
  4177fb:	je     0x41783d
  4177fd:	and    eax,0x9893e459
  417802:	jp     0x417857
  417804:	sbb    al,0x17
  417806:	xor    DWORD PTR [edi-0x5e],edx
  417809:	jecxz  0x4177c2
  41780b:	test   edi,0xaed11d77
  417811:	lods   eax,DWORD PTR ds:[esi]
  417812:	clc    
  417813:	sar    DWORD PTR [ebx-0x4c5620b3],cl
  417819:	adc    BYTE PTR [esi+0x69],bl
  41781c:	ja     0x417849
  41781e:	js     0x417884
  417820:	xchg   esp,eax
  417821:	or     BYTE PTR [ebx],ch
  417823:	jle    0x417897
  417825:	add    esi,DWORD PTR [ecx+0x392122a2]
  41782b:	lock jns 0x41787d
  41782e:	xchg   esi,eax
  41782f:	inc    edi
  417830:	dec    esi
  417831:	test   BYTE PTR [esi+esi*1+0x2d],ch
  417835:	fs lahf 
  417837:	repz jnp 0x4178ae
  41783a:	jle    0x4178b1
  41783c:	jmp    0x4178b2
  41783e:	xlat   BYTE PTR ds:[ebx]
  41783f:	fisub  WORD PTR [esi+eiz*2]
  417842:	cwde   
  417843:	mov    ds:0x4ec4fe3a,al
  417848:	mov    al,ds:0xe8583347
  41784d:	mov    bh,0x8d
  41784f:	xchg   ebp,eax
  417850:	or     DWORD PTR [ecx+0x6fd57e72],esp
  417856:	jmp    0x417899
  417858:	jb     0x41783f
  41785a:	fist   WORD PTR [ebp-0x43ac2e11]
  417860:	stos   BYTE PTR es:[edi],al
  417861:	sbb    bl,0xe2
  417864:	jb     0x4178c1
  417866:	pop    edx
  417867:	add    eax,0x40fa65fd
  41786c:	and    eax,0x182c6aa5
  417871:	js     0x417823
  417873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417874:	push   es
  417875:	xchg   ebx,eax
  417876:	mov    al,ds:0x1e000cb4
  41787b:	fistp  DWORD PTR gs:[esi-0x11d8c2e6]
  417882:	fwait
  417883:	out    0xa7,eax
  417885:	push   ebp
  417886:	repz fldenv [esi+eax*1-0x1a9fcbe7]
  41788e:	pop    es
  41788f:	mov    edx,0xd173c19a
  417894:	stos   BYTE PTR es:[edi],al
  417895:	mov    ?,WORD PTR [ebx]
  417897:	ret    
  417898:	adc    ebx,ebp
  41789a:	ja     0x417878
  41789c:	pushf  
  41789d:	cmp    BYTE PTR [ecx-0x529a4203],ah
  4178a3:	or     eax,0xe2d268e1
  4178a8:	or     bh,0xd
  4178ab:	mov    ah,0xe8
  4178ad:	mov    eax,ds:0xa4f62193
  4178b2:	fwait
  4178b3:	xor    dh,BYTE PTR [ecx+0xcb00b5c]
  4178b9:	test   al,0xe8
  4178bb:	sbb    al,0xbf
  4178bd:	not    eax
  4178bf:	cmp    ch,BYTE PTR [eax+0x78df4d9d]
  4178c5:	push   ss
  4178c6:	and    al,0x57
  4178c8:	jb     0x4178c4
  4178ca:	xlat   BYTE PTR ds:[ebx]
  4178cb:	dec    edi
  4178cc:	or     ax,0xb46b
  4178d0:	xchg   ecx,ecx
  4178d2:	xchg   dh,dl
  4178d4:	xchg   BYTE PTR [esi+eax*4],al
  4178d7:	push   ss
  4178d8:	retf   
  4178d9:	sub    ebx,eax
  4178db:	aam    0xef
  4178dd:	and    ah,ah
  4178df:	sub    ecx,edx
  4178e1:	iret   
  4178e2:	rcr    DWORD PTR [ecx-0x16012ef8],cl
  4178e8:	mov    bh,0x10
  4178ea:	test   eax,0x3f8696e1
  4178ef:	jecxz  0x4178a0
  4178f1:	mov    WORD PTR [ebp+0x53],cs
  4178f4:	pop    edx
  4178f5:	push   cs
  4178f6:	xchg   edi,eax
  4178f7:	pop    ebx
  4178f8:	xchg   BYTE PTR [edx+0x6a],bl
  4178fb:	jb     0x4178ee
  4178fd:	loopne 0x417907
  4178ff:	cmp    DWORD PTR [ecx],edi
  417901:	in     al,0x70
  417903:	sbb    dh,BYTE PTR [edi-0x13dfd610]
  417909:	retf   
  41790a:	jae    0x4178e6
  41790c:	sar    bh,cl
  41790e:	add    al,0xe1
  417910:	inc    eax
  417911:	popa   
  417912:	shl    bl,0x12
  417915:	push   es
  417916:	xor    al,0xec
  417918:	mov    bl,0x63
  41791a:	sub    dh,BYTE PTR [esi+0x54cca407]
  417920:	ror    DWORD PTR [esi+0x5d386769],1
  417926:	dec    ebp
  417927:	pop    ss
  417928:	test   eax,0x6c3f0e97
  41792d:	sub    DWORD PTR [ebx-0x69],edi
  417930:	mov    ds:0xe64478d,eax
  417935:	les    esi,FWORD PTR [ebp+eax*8-0x65]
  417939:	enter  0xf284,0x13
  41793d:	or     al,0x7a
  41793f:	and    edx,DWORD PTR [eax+esi*1]
  417942:	add    DWORD PTR [edi+0x43],eax
  417945:	stos   BYTE PTR es:[edi],al
  417946:	sub    DWORD PTR [edx+0x53],0xb0e8475e
  41794d:	out    0x1a,al
  41794f:	test   DWORD PTR [esi+0x72],0x384ec202
  417956:	fwait
  417957:	cs repnz stos DWORD PTR es:[edi],eax
  41795a:	jb     0x4179b2
  41795c:	(bad)  
  41795e:	(bad)  
  41795f:	xor    eax,0xcbf2636e
  417964:	(bad)  
  417965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417966:	scas   al,BYTE PTR es:[edi]
  417967:	fs int3 
  417969:	mov    BYTE PTR [ecx],0xab
  41796c:	xlat   BYTE PTR ds:[ebx]
  41796d:	cli    
  41796e:	or     edx,DWORD PTR [esi]
  417970:	nop
  417971:	das    
  417972:	ret    
  417973:	cmp    ebx,eax
  417975:	stos   DWORD PTR es:[edi],eax
  417976:	ds adc al,0x4d
  417979:	test   al,0xd4
  41797b:	das    
  41797c:	std    
  41797d:	int    0x3b
  41797f:	sahf   
  417980:	mov    ebx,DWORD PTR [ebp+eiz*8-0x6c]
  417984:	into   
  417985:	mov    ds:0x7b0b4ab3,al
  41798a:	rcr    BYTE PTR [esi-0x14],0xd5
  41798e:	add    DWORD PTR [ebx],edi
  417990:	(bad)  
  417991:	sub    DWORD PTR [eax-0xf2656eb],esi
  417997:	adc    eax,0x41dea89
  41799c:	test   ebp,esp
  41799e:	into   
  41799f:	test   BYTE PTR [edi],ch
  4179a1:	mov    cl,0x4c
  4179a3:	jnp    0x41798f
  4179a5:	(bad)
  4179a8:	lea    edx,[ecx]
  4179aa:	sub    eax,0xe47af80
  4179af:	add    BYTE PTR [edx+ecx*4],bh
  4179b2:	jmp    0x9d8a:0x57006845
  4179b9:	dec    edx
  4179ba:	loopne 0x4179c7
  4179bc:	xchg   esi,eax
  4179bd:	ret    0xaa0c
  4179c0:	xchg   DWORD PTR [eax+0x3b4f77b5],edx
  4179c6:	jb     0x4179cf
  4179c8:	popa   
  4179c9:	outs   dx,BYTE PTR ds:[esi]
  4179ca:	pop    edx
  4179cb:	pop    es
  4179cc:	pusha  
  4179cd:	xor    dh,al
  4179cf:	cdq    
  4179d0:	ins    BYTE PTR es:[edi],dx
  4179d1:	aad    0x56
  4179d3:	sbb    esp,DWORD PTR [esi-0x4c9f6ccd]
  4179d9:	pop    ecx
  4179da:	idiv   al
  4179dc:	ja     0x4179d9
  4179de:	cmp    ebx,DWORD PTR [edi+0x49]
  4179e1:	dec    edx
  4179e2:	mov    bh,0xaf
  4179e4:	xor    ebp,ebp
  4179e6:	dec    esi
  4179e7:	mov    al,ds:0x662c37a1
  4179ec:	adc    ch,al
  4179ee:	shr    DWORD PTR [ebp-0x10],0x69
  4179f2:	sbb    DWORD PTR ds:0x3505e2dd,edx
  4179f8:	dec    ecx
  4179f9:	mov    esp,0x51ba66ad
  4179fe:	mov    ecx,0x16069a6
  417a03:	mov    BYTE PTR [ecx],bl
  417a05:	pop    es
  417a06:	xchg   ebx,eax
  417a07:	fstp   TBYTE PTR [ebx-0x5e]
  417a0a:	stc    
  417a0b:	ja     0x417a57
  417a0d:	shr    DWORD PTR [eax+0x3a272a6],0x21
  417a14:	push   ds
  417a15:	pop    esi
  417a16:	jle    0x4179ac
  417a18:	and    eax,0x36dfd312
  417a1d:	jmp    0x417a03
  417a1f:	adc    DWORD PTR [ebx-0x4254ea],eax
  417a25:	mov    BYTE PTR [edi+eiz*4-0x89416ab],cl
  417a2c:	or     dh,cl
  417a2e:	cmp    al,0x55
  417a30:	or     al,0x59
  417a32:	push   cs
  417a33:	xlat   BYTE PTR ds:[ebx]
  417a34:	pop    ecx
  417a35:	mov    bl,0x39
  417a37:	jmp    0x417a8e
  417a39:	mov    ebp,0x4e84d2fe
  417a3e:	or     bl,BYTE PTR ds:0x7a7b0703
  417a44:	push   edx
  417a45:	xchg   ecx,eax
  417a46:	fwait
  417a47:	(bad)  
  417a48:	out    dx,eax
  417a49:	das    
  417a4a:	push   esi
  417a4b:	push   ds
  417a4c:	inc    esp
  417a4d:	sbb    eax,0x6415480f
  417a52:	lea    edx,[ecx]
  417a54:	or     bl,dh
  417a56:	adc    eax,0x59d532
  417a5b:	call   DWORD PTR [eax-0x96f9382]
  417a61:	cwde   
  417a62:	fisttp DWORD PTR [ecx]
  417a64:	mov    cl,BYTE PTR [edx+0x726d335a]
  417a6a:	xor    DWORD PTR [ebp+0x21],esp
  417a6d:	pop    ebp
  417a6e:	mov    eax,ds:0x4563bbd2
  417a73:	mov    edx,0xe5c4166e
  417a78:	mov    ah,0xb6
  417a7a:	(bad)  
  417a7b:	stc    
  417a7c:	mov    cl,0xff
  417a7e:	scas   al,BYTE PTR es:[edi]
  417a7f:	mov    ebp,0xb9aabeb1
  417a84:	xchg   ebx,eax
  417a85:	(bad)  [esi+edx*8-0x2b82089c]
  417a8c:	fiadd  DWORD PTR [eax+0x2595e76c]
  417a92:	test   eax,0x30729186
  417a97:	add    BYTE PTR [ebx+0x50],0xb1
  417a9b:	mov    bl,BYTE PTR [ecx+0x128856c9]
  417aa1:	add    al,0x3c
  417aa3:	div    BYTE PTR [ecx+eiz*2-0x1467b590]
  417aaa:	add    ebp,0x95cfadd7
  417ab0:	mov    ebp,ecx
  417ab2:	xchg   DWORD PTR [ebp-0x12],ebx
  417ab5:	or     DWORD PTR [edi],ebx
  417ab7:	jp     0x417a52
  417ab9:	pop    esp
  417aba:	fld    TBYTE PTR ds:0xe589b2fb
  417ac0:	ret    
  417ac1:	std    
  417ac2:	pop    ebp
  417ac3:	loope  0x417b2c
  417ac5:	jno    0x417b3a
  417ac7:	(bad)  [esi+0x7c]
  417aca:	xchg   esi,eax
  417acb:	popa   
  417acc:	out    0x79,eax
  417ace:	mov    al,cl
  417ad0:	pop    esi
  417ad1:	stos   DWORD PTR es:[edi],eax
  417ad2:	out    0x5a,eax
  417ad4:	pop    ebp
  417ad5:	loope  0x417b35
  417ad7:	outs   dx,DWORD PTR ds:[esi]
  417ad8:	jno    0x417b58
  417ada:	xchg   esp,eax
  417adb:	ds pop edx
  417add:	dec    cl
  417adf:	sbb    bl,BYTE PTR ds:0x5a01f992
  417ae5:	and    DWORD PTR [edi-0x66ab69e0],ecx
  417aeb:	sub    edi,ebp
  417aed:	and    ch,BYTE PTR [edx+0x63]
  417af0:	pop    es
  417af1:	adc    ch,BYTE PTR [esi]
  417af3:	pop    ebp
  417af4:	mov    dl,BYTE PTR [eax-0x36b78fae]
  417afa:	(bad)  
  417afb:	(bad)  
  417afc:	sahf   
  417afd:	mov    al,ds:0x179ba82c
  417b02:	push   0x5f
  417b04:	imul   ebp,edx,0x5453635f
  417b0a:	aas    
  417b0b:	push   esp
  417b0c:	and    DWORD PTR [ebp+0x58],eax
  417b0f:	cmp    esi,DWORD PTR [esi+0x1e]
  417b12:	fsubr  st(3),st
  417b14:	push   0xe1c5ab9e
  417b19:	leave  
  417b1a:	push   es
  417b1b:	int    0x7b
  417b1d:	pop    esi
  417b1e:	cmp    esp,DWORD PTR [esi+0x3a]
  417b21:	inc    edx
  417b22:	aam    0x56
  417b24:	call   0xabd33ac9
  417b29:	mov    BYTE PTR [edx],cl
  417b2b:	loopne 0x417b45
  417b2d:	inc    esp
  417b2e:	cmp    dl,dl
  417b30:	test   BYTE PTR [ebx+0x44],bl
  417b33:	jge    0x417b7a
  417b35:	loop   0x417ada
  417b37:	enter  0x2341,0x88
  417b3b:	int    0x46
  417b3d:	loop   0x417ad6
  417b3f:	pop    DWORD PTR [eax-0x2e596346]
  417b45:	inc    eax
  417b46:	pop    ebx
  417b47:	or     eax,edx
  417b49:	jmp    0x450c:0xb587144a
  417b50:	clc    
  417b51:	test   al,0x7a
  417b53:	mov    edi,DWORD PTR [edi-0x5b]
  417b56:	add    esi,esi
  417b58:	mov    eax,ds:0x845bff2c
  417b5d:	fwait
  417b5e:	mov    eax,ds:0xdd78aeef
  417b63:	lea    edx,[ecx-0x363b264d]
  417b69:	dec    eax
  417b6a:	or     ah,BYTE PTR [ecx+0x5ea77f66]
  417b70:	xchg   edx,eax
  417b71:	adc    al,BYTE PTR [ebx-0x42]
  417b74:	gs (bad) 
  417b76:	aad    0xda
  417b78:	sub    bh,BYTE PTR fs:[edx-0x6f]
  417b7c:	adc    BYTE PTR [edx+0x2f],ah
  417b7f:	inc    ecx
  417b80:	push   ebx
  417b81:	jb     0x417b3f
  417b83:	(bad)
  417b86:	add    esi,ebp
  417b88:	or     BYTE PTR [ebp+0x31],ch
  417b8b:	push   edx
  417b8c:	scas   eax,DWORD PTR es:[edi]
  417b8d:	xchg   esp,eax
  417b8e:	hlt    
  417b8f:	mov    eax,ds:0x9e8d31d9
  417b94:	(bad)  
  417b95:	test   al,0x6e
  417b97:	test   al,0xce
  417b99:	mov    ecx,0x6c50a9f0
  417b9e:	sbb    DWORD PTR [ecx],edx
  417ba0:	pop    eax
  417ba1:	and    BYTE PTR [esi-0x3782c869],ah
  417ba7:	retf   
  417ba8:	adc    edx,DWORD PTR [esi+0x66]
  417bab:	rcr    DWORD PTR cs:[esi+0x51],cl
  417baf:	aad    0xab
  417bb1:	scas   eax,DWORD PTR es:[edi]
  417bb2:	and    ebx,DWORD PTR [ebp+0x12]
  417bb5:	adc    esp,DWORD PTR [edx-0x18]
  417bb8:	out    dx,eax
  417bb9:	xchg   esi,eax
  417bba:	je     0x417c2b
  417bbc:	fs loop 0x417c16
  417bbf:	gs inc ecx
  417bc1:	jecxz  0x417bfc
  417bc3:	sub    BYTE PTR [ebp+0x74],dh
  417bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc7:	jmp    0x3964:0xa459c9ae
  417bce:	mov    edx,0x3c891b95
  417bd3:	sub    BYTE PTR [ebp-0x65ce0202],0xe3
  417bda:	ja     0x417c18
  417bdc:	push   edi
  417bdd:	xchg   BYTE PTR [ebp-0x7b],ch
  417be0:	in     al,0xbe
  417be2:	out    dx,eax
  417be3:	scas   al,BYTE PTR es:[edi]
  417be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417be5:	or     BYTE PTR [ebx],bh
  417be7:	and    eax,0x9c0ffb34
  417bec:	push   esp
  417bed:	out    0x12,al
  417bef:	pop    ds
  417bf0:	mul    BYTE PTR [edi]
  417bf2:	(bad)  
  417bf4:	inc    edx
  417bf5:	rol    ch,0x9a
  417bf8:	loop   0x417c69
  417bfa:	aas    
  417bfb:	(bad)  
  417bfc:	in     eax,dx
  417bfd:	xor    DWORD PTR [ecx+eax*2],0xffffff90
  417c01:	cwde   
  417c02:	call   0xe983:0xc5bd6a9b
  417c09:	stos   DWORD PTR es:[edi],eax
  417c0a:	stos   BYTE PTR es:[edi],al
  417c0b:	push   ebp
  417c0c:	pop    esi
  417c0d:	cmc    
  417c0e:	test   DWORD PTR [ecx],ecx
  417c10:	outs   dx,BYTE PTR ds:[esi]
  417c11:	lahf   
  417c12:	aaa    
  417c13:	shl    DWORD PTR [edi],1
  417c15:	xchg   edx,eax
  417c16:	add    al,0xe8
  417c18:	add    dh,ah
  417c1a:	pop    ss
  417c1b:	inc    BYTE PTR [esi+0x3c]
  417c1e:	jb     0x417c15
  417c20:	loopne 0x417c3b
  417c22:	push   0xe82400e9
  417c27:	ds and esp,esi
  417c2a:	bound  edi,QWORD PTR [si-0x27d1]
  417c2f:	sub    ebx,DWORD PTR [edi]
  417c31:	cdq    
  417c32:	inc    esi
  417c33:	and    BYTE PTR [esi],bl
  417c35:	sbb    BYTE PTR [ebp+0x1707040d],cl
  417c3b:	nop
  417c3c:	sub    eax,DWORD PTR [ebx+edx*8+0x43]
  417c40:	mov    cl,0xa4
  417c42:	push   ds
  417c43:	inc    esi
  417c44:	std    
  417c45:	in     al,0x9b
  417c47:	ret    
  417c48:	xor    ecx,DWORD PTR [ebx]
  417c4a:	mov    bh,BYTE PTR [edx+0x73]
  417c4d:	pop    edi
  417c4e:	fstp   TBYTE PTR [esi-0x4744e246]
  417c54:	(bad)  
  417c55:	lock adc esp,DWORD PTR [edx+ecx*1]
  417c59:	add    al,0xea
  417c5b:	out    0x2e,al
  417c5d:	jmp    0xcd1e:0xc6e90226
  417c64:	fcom   st(6)
  417c66:	imul   esp,edi,0x7897d60
  417c6c:	mov    eax,0x46f64877
  417c71:	or     edx,DWORD PTR [ebp-0x6f]
  417c74:	adc    al,dl
  417c76:	xchg   esp,eax
  417c77:	jmp    0x3657bc41
  417c7c:	or     edi,0x68
  417c7f:	jnp    0x417c79
  417c81:	cmp    al,0x1b
  417c83:	jle    0x417cd7
  417c85:	adc    bl,al
  417c87:	test   al,0xef
  417c89:	ror    BYTE PTR [edi],cl
  417c8b:	stos   DWORD PTR es:[edi],eax
  417c8c:	cli    
  417c8d:	fist   DWORD PTR [ebx+0x29]
  417c90:	add    cl,BYTE PTR [ecx+0x1011b4a6]
  417c96:	sbb    BYTE PTR ds:[esi+0x89102b],ch
  417c9d:	push   ds
  417c9e:	retf   
  417c9f:	jmp    0x467136e9
  417ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca5:	ins    DWORD PTR es:[edi],dx
  417ca6:	fdivrp st(2),st
  417ca8:	jl     0x417cf3
  417caa:	cmp    eax,0x27546db0
  417caf:	and    eax,0x76a7fb65
  417cb4:	or     dl,BYTE PTR [esi]
  417cb6:	pop    es
  417cb7:	retf   
  417cb8:	xor    DWORD PTR [edx+0x23],esp
  417cbb:	adc    esi,DWORD PTR [edx+ebp*2+0x26]
  417cbf:	scas   eax,DWORD PTR es:[edi]
  417cc0:	adc    ch,BYTE PTR [ebx-0x7e36210b]
  417cc6:	xchg   ebp,eax
  417cc7:	push   ecx
  417cc8:	jno    0x417cbd
  417cca:	lahf   
  417ccb:	add    cl,bh
  417ccd:	(bad)  
  417ccf:	(bad)  
  417cd1:	out    dx,al
  417cd2:	jb     0x417c8c
  417cd4:	mov    ch,0x9f
  417cd6:	mov    esi,0x37d2ccaf
  417cdb:	and    BYTE PTR [ebx+eax*1-0x64],bh
  417cdf:	mov    esp,0xa25cd9ef
  417ce4:	int    0xad
  417ce6:	and    eax,0xc6beda37
  417ceb:	sub    dl,al
  417ced:	mov    esp,esi
  417cef:	and    DWORD PTR ds:0xda4a0984,esp
  417cf5:	mov    bl,BYTE PTR [esi-0x7d]
  417cf8:	icebp  
  417cf9:	pop    esp
  417cfa:	mov    ecx,0x43f99a14
  417cff:	push   esp
  417d00:	ficomp WORD PTR [eax]
  417d02:	sti    
  417d03:	call   0xd96a:0x2805af6f
  417d0a:	xor    DWORD PTR [edi+0x36],edi
  417d0d:	dec    ebx
  417d0e:	hlt    
  417d0f:	(bad)  [edi]
  417d11:	mov    ebp,0x43fae6f9
  417d16:	jge    0x417d3b
  417d18:	retf   0xee80
  417d1b:	xchg   ebp,eax
  417d1c:	add    al,0x45
  417d1f:	jp     0x417ce4
  417d21:	mov    cl,0x9f
  417d23:	imul   eax
  417d25:	neg    DWORD PTR [eax]
  417d27:	enter  0xf93,0xb2
  417d2b:	call   0xc9a0a34c
  417d30:	inc    ebx
  417d31:	sbb    eax,0xd151d04e
  417d36:	mov    ebp,0x5bc629f5
  417d3b:	out    dx,eax
  417d3c:	push   eax
  417d3d:	sar    cl,cl
  417d3f:	test   BYTE PTR [esi-0x29],dl
  417d42:	fcomp  QWORD PTR [edx]
  417d44:	aad    0xd3
  417d46:	push   esi
  417d47:	mov    dh,0x51
  417d49:	call   FWORD PTR [eax]
  417d4b:	lods   eax,DWORD PTR ds:[esi]
  417d4c:	test   BYTE PTR [ebx+0x1e],ah
  417d4f:	les    esi,FWORD PTR [ebp+0x37a646b]
  417d55:	adc    esi,esi
  417d57:	mov    ah,cl
  417d59:	and    al,al
  417d5b:	mov    bl,0x5e
  417d5d:	mov    dh,0xa0
  417d5f:	sahf   
  417d60:	adc    dl,dh
  417d62:	push   ds
  417d63:	in     eax,dx
  417d64:	sbb    bh,BYTE PTR ds:0x299af5e8
  417d6a:	retf   
  417d6b:	nop
  417d6c:	addr16 into 
  417d6e:	cmp    esi,ecx
  417d70:	mov    ch,0x5b
  417d72:	stos   DWORD PTR es:[edi],eax
  417d73:	xchg   ebp,eax
  417d74:	inc    ebx
  417d75:	push   0xbc6741e7
  417d7a:	xchg   edi,eax
  417d7b:	arpl   bp,ax
  417d7d:	jmp    0x3ff004e5
  417d82:	imul   DWORD PTR [ecx+0x1]
  417d85:	push   0x27
  417d87:	inc    esp
  417d88:	fadd   st,st(2)
  417d8a:	aas    
  417d8b:	xor    al,0x20
  417d8d:	jo     0x417e01
  417d8f:	jmp    0x417dfe
  417d91:	push   ds
  417d92:	cdq    
  417d93:	dec    ebx
  417d94:	or     BYTE PTR [ebp-0x352cd48d],al
  417d9a:	mov    esp,0x9611376e
  417d9f:	int3   
  417da0:	push   edx
  417da1:	cmp    al,0x99
  417da3:	mov    ebx,0x5d1bfa24
  417da8:	shl    BYTE PTR ds:0x69ffc210,cl
  417dae:	jb     0x417e11
  417db0:	aas    
  417db1:	mov    ah,0x48
  417db3:	pop    edx
  417db4:	repz push edi
  417db6:	test   al,0xb
  417db8:	push   eax
  417db9:	mov    al,BYTE PTR [esi+ebx*4-0x65224e14]
  417dc0:	push   esp
  417dc1:	aad    0x53
  417dc3:	leave  
  417dc4:	repnz mov edi,DWORD PTR [edx+ecx*2]
  417dc8:	imul   ebx,DWORD PTR [eax+0x6b],0xeed21844
  417dcf:	loop   0x417daa
  417dd1:	or     dl,BYTE PTR [ebx-0x3e]
  417dd4:	mov    es,WORD PTR cs:[esi+0x61]
  417dd8:	sbb    eax,0x3fd72bcc
  417ddd:	pop    ss
  417dde:	shl    BYTE PTR [esp+ebx*4],cl
  417de1:	xlat   BYTE PTR ds:[ebx]
  417de2:	daa    
  417de3:	sbb    al,0xc5
  417de5:	sub    BYTE PTR [ebp-0x7f],ch
  417de8:	in     eax,0xe
  417dea:	scas   al,BYTE PTR es:[edi]
  417deb:	and    DWORD PTR [edx-0x675c8875],0x265459d
  417df5:	popf   
  417df6:	dec    ebp
  417df7:	xor    DWORD PTR [ecx],ecx
  417df9:	aas    
  417dfa:	fsubr  DWORD PTR [edi]
  417dfc:	and    DWORD PTR ds:0xd0cc14b1,ebp
  417e02:	or     ecx,edi
  417e04:	pushf  
  417e05:	xor    eax,0x15c28ab
  417e0a:	adc    dh,bh
  417e0c:	dec    ebp
  417e0d:	or     esp,DWORD PTR [ecx-0x45c87317]
  417e13:	mov    ch,0x36
  417e15:	clc    
  417e16:	fs mov cl,0xf6
  417e19:	xor    edx,DWORD PTR [eax]
  417e1b:	add    DWORD PTR [ecx+0x2],ebp
  417e1e:	jge    0x417e7c
  417e20:	adc    eax,0x57aed9c7
  417e25:	pushf  
  417e26:	sub    esp,eax
  417e28:	xchg   BYTE PTR [ebp+0x40c744e1],bh
  417e2e:	add    DWORD PTR [ebx+0x3e6ddfed],esp
  417e34:	rcr    BYTE PTR [ecx],0x40
  417e37:	cmp    eax,0xaf9477d1
  417e3c:	and    DWORD PTR [eax-0x305fcd49],ebx
  417e42:	psllw  mm5,QWORD PTR [edi+ecx*8]
  417e46:	cli    
  417e47:	std    
  417e48:	nop
  417e49:	shr    BYTE PTR [ebp+edi*4-0x6d],0xaf
  417e4e:	fsubr  QWORD PTR [ecx-0x35]
  417e51:	fadd   DWORD PTR [edi-0x41]
  417e54:	or     BYTE PTR [edi],bl
  417e56:	adc    ch,al
  417e58:	xchg   ecx,eax
  417e59:	fstp   QWORD PTR [ecx+ebp*4]
  417e5c:	sahf   
  417e5d:	jnp    0x417e04
  417e5f:	pop    eax
  417e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e61:	cdq    
  417e62:	mov    edi,0xd740b514
  417e67:	push   esp
  417e68:	aam    0xdb
  417e6a:	aam    0xb9
  417e6c:	xchg   esp,eax
  417e6d:	or     eax,0x26934fa2
  417e72:	scas   eax,DWORD PTR es:[edi]
  417e73:	into   
  417e74:	sbb    eax,0x158b7e69
  417e79:	arpl   WORD PTR [esi+ebp*2+0x3f73ef8a],bx
  417e80:	bound  ecx,QWORD PTR [eax+0x2262b6ed]
  417e86:	jb     0x417ef4
  417e88:	inc    esp
  417e89:	adc    BYTE PTR [edi-0x14],dh
  417e8c:	dec    ecx
  417e8d:	ret    0x1b74
  417e90:	jle    0x417e18
  417e92:	push   eax
  417e93:	outs   dx,BYTE PTR ds:[esi]
  417e94:	fmul   DWORD PTR [ecx+edi*8-0x70083a39]
  417e9b:	mov    DWORD PTR ds:0x7f8910ee,ebx
  417ea1:	sbb    al,BYTE PTR [ebp+0x3c8dbf7a]
  417ea7:	ja     0x417e79
  417ea9:	fnsave [eax]
  417eab:	and    al,0xb8
  417ead:	jmp    0x8ddf:0xbb7abf77
  417eb4:	push   esi
  417eb5:	repnz mov dh,0x22
  417eb8:	test   eax,0xef90fffa
  417ebd:	loope  0x417e80
  417ebf:	push   cs
  417ec0:	hlt    
  417ec1:	test   DWORD PTR [esi-0xb],ebx
  417ec4:	add    edx,DWORD PTR [eax]
  417ec6:	inc    edi
  417ec7:	test   ebx,ebx
  417ec9:	ret    
  417eca:	ret    0x965e
  417ecd:	ja     0x417eb4
  417ecf:	sub    eax,0xa653f444
  417ed4:	cmc    
  417ed5:	das    
  417ed6:	cmp    ah,bh
  417ed8:	sbb    ebx,esi
  417eda:	(bad)  
  417edb:	mov    edx,0x87766265
  417ee0:	outs   dx,DWORD PTR ds:[esi]
  417ee1:	dec    esi
  417ee2:	leave  
  417ee3:	mov    esi,0xcbccb7
  417ee8:	add    eax,0xd66a8a18
  417eed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eee:	and    edi,esp
  417ef0:	daa    
  417ef1:	std    
  417ef2:	int3   
  417ef3:	sbb    ecx,DWORD PTR [esi]
  417ef5:	mov    esp,DWORD PTR [ebx+0x26694651]
  417efb:	sti    
  417efc:	pop    ss
  417efd:	and    eax,eax
  417eff:	inc    eax
  417f00:	jge    0x417f7e
  417f02:	mov    cl,0x78
  417f04:	outs   dx,DWORD PTR ds:[esi]
  417f05:	mov    WORD PTR [edx-0x62],cs
  417f08:	cwde   
  417f09:	inc    esi
  417f0a:	push   0x1fea2a1f
  417f0f:	mov    dl,0xfb
  417f11:	mov    dh,0xd2
  417f13:	push   0xa2713857
  417f18:	mov    al,0x6
  417f1a:	fcom   st(2)
  417f1c:	fcmovbe st,st(5)
  417f1e:	bound  eax,QWORD PTR [ebx]
  417f20:	jp     0x417f40
  417f22:	mov    ds,eax
  417f24:	inc    ebx
  417f25:	push   ss
  417f26:	xchg   edi,eax
  417f27:	jbe    0x417ecd
  417f29:	lahf   
  417f2a:	mov    WORD PTR [esi-0x257719f5],?
  417f30:	inc    eax
  417f31:	std    
  417f32:	(bad)  
  417f33:	sub    al,0x5e
  417f35:	imul   esp,DWORD PTR [edx-0x57],0x75aa6b69
  417f3c:	mov    ds:0x7819807d,al
  417f41:	loopne 0x417f63
  417f43:	or     al,0x70
  417f45:	and    eax,0x98e7d2b0
  417f4a:	std    
  417f4b:	jns    0x417f8f
  417f4d:	test   eax,0x3903e9b2
  417f52:	test   BYTE PTR [ebp+0x6],bh
  417f55:	mov    bl,0xd6
  417f57:	jmp    0xd4f0:0xe80d1d59
  417f5e:	jae    0x417fa1
  417f60:	bound  edx,QWORD PTR [eax]
  417f62:	adc    BYTE PTR [edx+0x7f],bh
  417f65:	test   BYTE PTR [edx-0x10022817],0xe0
  417f6c:	lds    ebx,FWORD PTR [esi+0x7cb97c5e]
  417f72:	jne    0x417fc9
  417f74:	push   0x6d
  417f76:	enter  0x3183,0x7b
  417f7a:	int3   
  417f7b:	(bad)  
  417f7c:	sub    al,BYTE PTR [edi]
  417f7e:	cmc    
  417f7f:	cmp    BYTE PTR [ebp+0x24],bl
  417f82:	or     DWORD PTR [edi+0x4d],esp
  417f85:	dec    eax
  417f86:	popf   
  417f87:	sub    bh,BYTE PTR [eax+0x1c]
  417f8a:	icebp  
  417f8b:	add    DWORD PTR [edi-0x42],0x1b
  417f8f:	aam    0x23
  417f91:	adc    ebp,esp
  417f93:	or     ah,BYTE PTR [ebx+0x5a]
  417f96:	nop
  417f97:	jge    0x417f9c
  417f99:	pop    ebp
  417f9a:	jge    0x417f20
  417f9c:	and    BYTE PTR [edi+0x6031fea8],bh
  417fa2:	push   ecx
  417fa3:	push   ds
  417fa4:	dec    esi
  417fa5:	jno    0x418015
  417fa7:	push   es
  417fa8:	xchg   ah,cl
  417faa:	lock and cl,ch
  417fad:	pop    esi
  417fae:	xchg   edi,eax
  417faf:	cmp    DWORD PTR [edi+0x6c454347],esi
  417fb5:	sar    ch,0x30
  417fb8:	les    edi,FWORD PTR [edi+0x42c2107e]
  417fbe:	inc    esi
  417fbf:	ror    DWORD PTR [edx+0x42eb1807],1
  417fc5:	inc    ebp
  417fc6:	mov    bl,ah
  417fc8:	and    cl,ch
  417fca:	aad    0x2f
  417fcc:	(bad)  
  417fcd:	jae    0x418037
  417fcf:	je     0x41800c
  417fd1:	push   ss
  417fd2:	inc    ebp
  417fd3:	ins    BYTE PTR es:[edi],dx
  417fd4:	je     0x418009
  417fd6:	xchg   ch,bl
  417fd8:	push   ebx
  417fd9:	jmp    DWORD PTR [esp+ebp*8]
  417fdc:	mov    eax,ds:0x2da1b3ba
  417fe1:	ds jb  0x418052
  417fe4:	sbb    eax,0xa57d667c
  417fe9:	add    esp,DWORD PTR [edx]
  417feb:	add    eax,0xd912a14a
  417ff0:	setae  BYTE PTR [edi]
  417ff3:	jae    0x41806a
  417ff5:	xchg   bl,dh
  417ff7:	cld    
  417ff8:	call   0x3ffb716
  417ffd:	push   es
  417ffe:	rcr    DWORD PTR [ebx+0x24],1
  418001:	jmp    0x2670:0x8693c8d2
  418008:	sub    ch,BYTE PTR [edi]
  41800a:	pop    edx
  41800b:	pop    ebx
  41800c:	lea    ebp,[edi-0x48]
  41800f:	mov    esp,0xfab7ad64
  418014:	push   edx
  418015:	in     al,dx
  418016:	xor    esp,DWORD PTR [edx]
  418018:	lahf   
  418019:	scas   eax,DWORD PTR es:[edi]
  41801a:	cld    
  41801b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801c:	mov    bl,0x8
  41801e:	es js  0x418071
  418021:	fs and eax,0xce0cae30
  418027:	push   ecx
  418028:	shr    ah,1
  41802a:	shl    DWORD PTR [ecx-0x39],1
  41802d:	es call 0xf6e48a96
  418033:	xchg   DWORD PTR [edi],esp
  418035:	out    dx,al
  418036:	adc    bl,bl
  418038:	mov    cl,BYTE PTR [edi+ebp*2-0x30]
  41803c:	mov    edx,DWORD PTR [ecx+0x52d0ad9b]
  418042:	sbb    al,0x60
  418044:	das    
  418045:	aas    
  418046:	ret    0x6778
  418049:	dec    ebp
  41804a:	int    0xfa
  41804c:	rol    BYTE PTR ds:0x6371c0a6,1
  418052:	in     eax,dx
  418053:	mov    WORD PTR [esi],?
  418055:	sub    al,BYTE PTR [eax+esi*8-0x52fe4e08]
  41805c:	and    ebx,esp
  41805e:	stos   BYTE PTR es:[edi],al
  41805f:	mov    dl,0xd7
  418061:	sub    bl,BYTE PTR [eax+0x1f]
  418064:	fld    QWORD PTR [ebx]
  418066:	pxor   mm1,QWORD PTR [ebp+0x1e]
  41806a:	mov    bl,0xdf
  41806c:	inc    eax
  41806d:	or     BYTE PTR [edi+0x46],ah
  418070:	jno    0x4180cb
  418072:	lahf   
  418073:	gs cdq 
  418075:	adc    edi,ebx
  418077:	(bad)  
  418078:	ds loope 0x417ffd
  41807b:	push   cs
  41807c:	add    ecx,eax
  41807e:	les    ecx,FWORD PTR [edi-0xd771d7f]
  418084:	mov    eax,esi
  418086:	ret    0x5b1
  418089:	popf   
  41808a:	and    DWORD PTR [ebx-0x17],ebx
  41808d:	dec    ebp
  41808e:	aad    0x2b
  418090:	dec    esi
  418091:	jle    0x41807c
  418093:	nop
  418094:	jle    0x418067
  418096:	sbb    ebx,DWORD PTR [esi-0x6f]
  418099:	in     eax,dx
  41809a:	mov    cs,WORD PTR ds:0x8a8ae431
  4180a0:	push   esi
  4180a1:	stc    
  4180a2:	xchg   edx,eax
  4180a3:	add    eax,0x51795869
  4180a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a9:	add    edx,DWORD PTR [ebx-0x392ab2ad]
  4180af:	icebp  
  4180b0:	pop    ebx
  4180b1:	cwde   
  4180b2:	xchg   edx,eax
  4180b3:	in     al,dx
  4180b4:	out    dx,al
  4180b5:	sahf   
  4180b6:	dec    edi
  4180b7:	arpl   WORD PTR [ebx+ecx*4+0x4afd6e51],si
  4180be:	push   ecx
  4180bf:	and    cl,BYTE PTR [edi+0x6777f9ef]
  4180c5:	xchg   esi,eax
  4180c6:	fiadd  WORD PTR [edi-0xc]
  4180c9:	into   
  4180ca:	lahf   
  4180cb:	sbb    bl,BYTE PTR [esi]
  4180cd:	fmul   st,st(7)
  4180cf:	mov    bh,0xa4
  4180d1:	cdq    
  4180d2:	imul   eax,ebp,0xfffffff9
  4180d5:	in     al,dx
  4180d6:	jle    0x4180cb
  4180d8:	sbb    eax,0x78c462ac
  4180dd:	stc    
  4180de:	or     al,0xd0
  4180e0:	test   BYTE PTR [ecx],cl
  4180e2:	fdiv   DWORD PTR [edi+0x62]
  4180e5:	fdivr  DWORD PTR [ecx]
  4180e7:	or     DWORD PTR [bp+di+0x7e],ebx
  4180eb:	sub    BYTE PTR [esi-0x3f],dh
  4180ee:	sbb    bh,BYTE PTR [ebp+0x3cbf9fdf]
  4180f4:	dec    eax
  4180f5:	mov    cl,0x45
  4180f7:	aad    0xda
  4180f9:	inc    edi
  4180fa:	loope  0x41808d
  4180fc:	pop    DWORD PTR [ebp-0x52]
  4180ff:	push   edi
  418100:	push   0x32
  418102:	jge    0x41813e
  418104:	js     0x418101
  418106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418107:	(bad)  
  418108:	frstor [edx+0x7d10ea2a]
  41810e:	inc    ebx
  41810f:	mov    edi,0x2401aef
  418114:	mov    dl,0x56
  418116:	stc    
  418117:	fmul   QWORD PTR [edi-0x674d6ee8]
  41811d:	mov    ch,0x17
  41811f:	inc    esi
  418120:	xor    eax,ecx
  418122:	(bad)  
  418123:	loopne 0x41818d
  418125:	into   
  418126:	mov    ebx,0xe9229b8b
  41812b:	mov    ds:0x8e2c6596,eax
  418130:	mov    WORD PTR [edi+0x61e7289a],ss
  418136:	repnz or eax,0x29130edb
  41813c:	and    edx,ebp
  41813e:	adc    BYTE PTR [ecx+0x1],bl
  418141:	sbb    cl,BYTE PTR [esi-0x7b54cd5f]
  418147:	repz mov bl,0xb6
  41814a:	or     eax,0x563704f
  41814f:	or     BYTE PTR [esi+0x63],al
  418152:	loopne 0x4181cf
  418154:	fs cli 
  418156:	loope  0x41817c
  418158:	and    esp,DWORD PTR [ecx-0x774de73f]
  41815e:	call   0xf48a9925
  418163:	(bad)  
  418164:	mul    edi
  418166:	aad    0x80
  418168:	push   esp
  418169:	cld    
  41816a:	adc    eax,0xc0119069
  41816f:	pop    eax
  418170:	mov    al,0x3
  418172:	xor    dl,BYTE PTR [ebx-0x5f6618cb]
  418178:	neg    DWORD PTR [ebp+ebp*4+0x64]
  41817c:	or     al,0x80
  41817e:	mov    BYTE PTR [ebp+ecx*4+0x75385302],bl
  418185:	inc    edx
  418186:	sub    BYTE PTR [ecx],0x38
  418189:	sbb    al,0x1f
  41818b:	clc    
  41818c:	push   ebx
  41818d:	and    cl,BYTE PTR ds:0xfb8aefeb
  418193:	push   edx
  418194:	xchg   ebp,esp
  418196:	dec    ebp
  418197:	or     bh,BYTE PTR [eax+0x1a]
  41819a:	xchg   ebp,eax
  41819b:	push   edi
  41819c:	sar    DWORD PTR [ebp+0xbb7e08c],cl
  4181a2:	mov    edx,0x4f8f947a
  4181a7:	mov    ch,0xf0
  4181a9:	dec    ebx
  4181aa:	test   al,0x7b
  4181ac:	push   cs
  4181ad:	pop    edi
  4181ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181af:	and    BYTE PTR [ebp-0x74222173],bl
  4181b5:	fdivr  DWORD PTR [ebx]
  4181b7:	repnz pop ss
  4181b9:	push   esi
  4181ba:	bound  ebx,QWORD PTR [ebx]
  4181bc:	mov    al,ds:0x55488c75
  4181c1:	stos   BYTE PTR es:[edi],al
  4181c2:	jae    0x41822f
  4181c4:	mov    bl,0x8a
  4181c6:	mov    ah,0x79
  4181c8:	mov    ds:0xe9c2947b,eax
  4181cd:	and    dl,BYTE PTR es:[edi-0xe5d2482]
  4181d4:	inc    esi
  4181d5:	sbb    al,0xdf
  4181d7:	ins    BYTE PTR es:[edi],dx
  4181d8:	push   ecx
  4181d9:	sub    eax,0x5ec2a0de
  4181de:	outs   dx,BYTE PTR ds:[esi]
  4181df:	xchg   ebx,eax
  4181e0:	leave  
  4181e1:	pop    ecx
  4181e2:	jmp    0xe5cf:0xf43e2dd5
  4181e9:	ds cld 
  4181eb:	jge    0x4181f7
  4181ed:	pop    ebx
  4181ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ef:	mov    eax,0xe6e2634f
  4181f4:	jns    0x418258
  4181f6:	mov    cl,0x97
  4181f8:	fisub  WORD PTR [ebp-0x26]
  4181fb:	hlt    
  4181fc:	inc    ebp
  4181fd:	sar    DWORD PTR [ebp+0x141bb5a6],1
  418203:	inc    edi
  418204:	pop    ds
  418205:	inc    eax
  418207:	push   edi
  418208:	retf   
  418209:	ror    DWORD PTR [edi-0x75],cl
  41820c:	aaa    
  41820d:	inc    eax
  41820e:	mov    esp,0x57fe7839
  418213:	sbb    DWORD PTR [ecx+0x30],esi
  418216:	mov    ah,0x3e
  418218:	call   DWORD PTR [esi]
  41821a:	jne    0x418204
  41821c:	sti    
  41821d:	adc    esi,DWORD PTR [edx+ecx*8]
  418220:	pushf  
  418221:	inc    ebx
  418222:	test   BYTE PTR [ebp+0x62eb8844],dh
  418228:	push   0x29e1957f
  41822d:	in     eax,dx
  41822e:	cld    
  41822f:	jecxz  0x418232
  418231:	xchg   esp,eax
  418232:	mov    ch,0x76
  418234:	jmp    0x418293
  418236:	inc    edx
  418237:	jns    0x418227
  418239:	cmp    al,BYTE PTR [ebp-0x74]
  41823c:	in     eax,dx
  41823d:	sub    al,0xe5
  41823f:	lds    edi,FWORD PTR [edi+esi*2]
  418242:	lods   eax,DWORD PTR ds:[esi]
  418243:	icebp  
  418244:	mov    al,ds:0x3b9b3ada
  418249:	int    0x29
  41824b:	cmp    BYTE PTR [esi+0x48],cl
  41824e:	out    dx,al
  41824f:	jae    0x418290
  418251:	mov    esi,DWORD PTR [ecx+0xe]
  418254:	call   0xb5ef:0xca14fcc5
  41825b:	mov    esp,0x9bc4e9b1
  418260:	mov    ah,0x10
  418262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418263:	ret    0x8378
  418266:	cdq    
  418267:	xor    edi,DWORD PTR [esi-0x557d38f4]
  41826d:	test   DWORD PTR ds:0xcb1267fb,ebp
  418273:	in     al,dx
  418274:	cmc    
  418275:	loope  0x418240
  418277:	cmp    al,0x68
  418279:	lahf   
  41827a:	js     0x418230
  41827c:	dec    edi
  41827d:	nop
  41827e:	pop    edx
  41827f:	jg     0x418248
  418281:	imul   ebp,DWORD PTR [eax+ecx*1+0x55],0x936835cc
  418289:	mov    esi,0xf28dd6cf
  41828e:	fcomip st,st(6)
  418290:	adc    al,0x30
  418292:	in     eax,0x9a
  418294:	lock out 0xa3,eax
  418297:	retf   0xd753
  41829a:	push   ss
  41829b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41829c:	jge    0x418261
  41829e:	mov    ch,0x41
  4182a0:	jmp    0x4182ae
  4182a2:	sub    eax,0x50953254
  4182a7:	jbe    0x4182d2
  4182a9:	add    DWORD PTR [esp+ecx*8-0x789d5842],eax
  4182b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182b1:	out    0x4,eax
  4182b3:	xor    al,0xd5
  4182b5:	pop    es
  4182b6:	mov    ch,0xd3
  4182b8:	inc    edi
  4182b9:	sar    BYTE PTR [ecx-0x79],cl
  4182bc:	hlt    
  4182bd:	fcompp 
  4182bf:	scas   al,BYTE PTR es:[edi]
  4182c0:	imul   ebp,DWORD PTR ds:0xad00ea24,0xffffffa6
  4182c7:	hlt    
  4182c8:	inc    edx
  4182c9:	xor    ebp,DWORD PTR [esp+edx*8-0x5e]
  4182cd:	mov    ebp,0xacd6234
  4182d2:	or     al,0xac
  4182d4:	pop    ebp
  4182d5:	fist   DWORD PTR [ecx+0x38]
  4182d8:	add    bl,BYTE PTR [ecx-0x79d4da78]
  4182de:	fdivr  DWORD PTR [eax]
  4182e0:	sbb    al,0x16
  4182e2:	dec    ecx
  4182e3:	mov    al,ds:0xb09ae456
  4182e8:	arpl   WORD PTR [edi],cx
  4182ea:	je     0x4182da
  4182ec:	enter  0x997f,0x67
  4182f0:	enter  0x9d7,0x5e
  4182f4:	sub    edi,DWORD PTR [edi+edi*8+0x71]
  4182f8:	out    dx,eax
  4182f9:	push   es
  4182fa:	xchg   edi,eax
  4182fb:	inc    ecx
  4182fc:	sbb    BYTE PTR [edi-0x23],dh
  4182ff:	clc    
  418300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418301:	cld    
  418302:	into   
  418303:	test   al,0xb2
  418305:	imul   edi,DWORD PTR [eax+edx*2-0x147d5c88],0xbac8d5ca
  418310:	ds out 0x2b,al
  418313:	imul   ecx,DWORD PTR [edi+0xb118ec3],0xffffffa9
  41831a:	dec    esp
  41831b:	test   eax,0x50617091
  418320:	push   edx
  418321:	sub    eax,0x209e3b8c
  418326:	mov    eax,0x269f4ea7
  41832b:	pop    ds
  41832c:	loopne 0x418381
  41832e:	mov    cl,0xfc
  418330:	test   DWORD PTR [ebp-0x5b],esp
  418333:	repz mov ?,WORD PTR [edx+0x77]
  418337:	adc    ebp,ecx
  418339:	sub    DWORD PTR [ebp+ecx*1+0x47fdaf9],edx
  418340:	rcl    BYTE PTR [esi+0x1015ef41],0x3a
  418347:	(bad)  
  418348:	out    0xe,al
  41834a:	js     0x41833f
  41834c:	sub    BYTE PTR [edi],al
  41834e:	jno    0x4182f2
  418350:	addr16 jnp 0x418357
  418353:	xchg   ebp,eax
  418354:	mov    ebp,ebx
  418356:	fmul   st(1),st
  418358:	ins    DWORD PTR es:[edi],dx
  418359:	jl     0x418315
  41835b:	or     BYTE PTR [ebx],ah
  41835d:	jno    0x41839a
  41835f:	inc    ecx
  418360:	(bad)  
  418362:	mov    esp,0xcbbefef5
  418367:	jae    0x4183dc
  418369:	mov    BYTE PTR [ecx],al
  41836b:	loope  0x418397
  41836d:	sub    DWORD PTR [edi+0x38e1872],esp
  418373:	mov    ebp,0x245a1342
  418378:	mov    edx,0x13377b0
  41837d:	sub    eax,0x51e6a878
  418382:	xchg   edx,esp
  418384:	sti    
  418385:	sub    ebp,DWORD PTR [ebp-0x7b53f270]
  41838b:	or     eax,0xfa6f4317
  418390:	(bad)  
  418391:	fdiv   st,st(6)
  418393:	xchg   edi,eax
  418394:	(bad)  
  418395:	push   edi
  418396:	adc    BYTE PTR [ebx],0x4f
  418399:	fcomp  DWORD PTR [edx+0x27]
  41839d:	push   0x60d61e06
  4183a2:	push   ds
  4183a3:	hlt    
  4183a4:	jne    0x418348
  4183a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183a7:	jle    0x418413
  4183a9:	pop    ebp
  4183aa:	mov    ds:0x7b01b9b5,al
  4183af:	mov    eax,ds:0x304baa10
  4183b4:	mov    ds:0x5bf9487c,al
  4183b9:	sub    BYTE PTR [ebp-0x52cabb83],0xb0
  4183c0:	or     BYTE PTR [edx+0x26f6eff7],0x64
  4183c7:	ror    BYTE PTR [ebx-0x61],0xc0
  4183cb:	xor    edx,edx
  4183cd:	pop    edx
  4183ce:	push   es
  4183cf:	lds    edi,FWORD PTR [edi-0x5d]
  4183d2:	retf   0x7e6b
  4183d5:	cmp    al,0xdf
  4183d7:	call   0x18c7:0x82ca8d5d
  4183de:	adc    eax,0xe678d17c
  4183e3:	adc    al,0x30
  4183e5:	mov    edi,0xe4e1fd34
  4183ea:	ror    DWORD PTR [ecx],0x4
  4183ed:	mov    edi,0x266f066
  4183f2:	push   ds
  4183f3:	or     DWORD PTR [esi+0x5a0410cb],esi
  4183f9:	dec    BYTE PTR [esi]
  4183fb:	cli    
  4183fc:	dec    ebx
  4183fd:	mov    BYTE PTR [ecx+0x3c50cdd9],dl
  418403:	dec    esp
  418404:	std    
  418405:	dec    edi
  418406:	out    dx,al
  418407:	mov    ebp,edi
  418409:	gs js  0x418404
  41840c:	xor    esi,DWORD PTR [edi]
  41840e:	test   eax,0x4d475a5a
  418413:	sar    edx,1
  418415:	inc    esp
  418416:	mov    eax,0xd7a533e3
  41841b:	or     eax,0xf1af8fe0
  418420:	fisttp DWORD PTR [edx+edi*4-0xcc79eb1]
  418427:	mov    eax,ds:0x13bc8524
  41842c:	mov    cl,0x9
  41842e:	mov    ds:0xa5e3cdb3,al
  418433:	push   es
  418434:	int3   
  418435:	mov    bl,0x49
  418437:	in     eax,0xc5
  418439:	clc    
  41843a:	mov    eax,ds:0xb7e72d41
  41843f:	xor    ebp,DWORD PTR [ebx+ecx*1]
  418442:	dec    ebp
  418443:	leave  
  418444:	gs dec ecx
  418446:	loop   0x4183e8
  418448:	add    ch,BYTE PTR [ebp-0xd]
  41844b:	inc    ebp
  41844c:	dec    esi
  41844d:	retf   
  41844e:	mov    eax,0xb6036322
  418453:	ret    
  418454:	repz fcomp QWORD PTR [ebx]
  418457:	(bad)  
  418458:	cmc    
  418459:	and    al,ch
  41845b:	js     0x418434
  41845d:	enter  0x5d8c,0x9f
  418461:	push   ebx
  418462:	loopne 0x418458
  418464:	and    eax,0x47dabec8
  418469:	pop    ds
  41846a:	(bad)  
  41846b:	repnz inc ebx
  41846d:	scas   eax,DWORD PTR es:[edi]
  41846e:	add    bh,ch
  418470:	jge    0x4184c2
  418472:	add    eax,0xc82397e5
  418477:	sbb    BYTE PTR [eax+0x26],ah
  41847a:	lods   eax,DWORD PTR ds:[esi]
  41847b:	dec    ebp
  41847c:	cmc    
  41847d:	sar    DWORD PTR [esi-0x5b587aab],0x6c
  418484:	push   es
  418485:	push   ebx
  418486:	pushf  
  418487:	mov    cs,WORD PTR [esi+ebp*4]
  41848a:	pop    es
  41848b:	icebp  
  41848c:	in     eax,0xf6
  41848e:	(bad)  
  41848f:	cmc    
  418490:	or     DWORD PTR [edx+0xa],ecx
  418493:	or     al,0x8
  418495:	mov    ds:0x85468f41,eax
  41849a:	lds    ebp,FWORD PTR [ebx]
  41849c:	(bad)
  4184a0:	jns    0x418461
  4184a2:	int3   
  4184a3:	ins    BYTE PTR es:[edi],dx
  4184a4:	mov    cl,BYTE PTR [esi+0x73b838cb]
  4184aa:	lds    ebp,FWORD PTR [ecx+0x1c]
  4184ad:	fwait
  4184ae:	cmp    DWORD PTR [esi-0x29],edx
  4184b1:	adc    al,0xb3
  4184b3:	adc    eax,0x333dccd0
  4184b8:	xchg   ebx,eax
  4184b9:	dec    esi
  4184ba:	mov    esi,0xebe8d7e1
  4184bf:	scas   al,BYTE PTR es:[edi]
  4184c0:	xchg   edi,eax
  4184c1:	or     eax,0xec509831
  4184c6:	inc    al
  4184c8:	xchg   edi,eax
  4184c9:	add    BYTE PTR [bx+si+0x7676],ah
  4184ce:	xchg   ecx,eax
  4184cf:	inc    edx
  4184d0:	sahf   
  4184d1:	cmp    al,0x72
  4184d3:	aas    
  4184d4:	sti    
  4184d5:	add    ah,BYTE PTR [ebp+eax*8-0x121d3e35]
  4184dc:	jmp    FWORD PTR [edx]
  4184de:	gs jmp 0x3ab3:0x16ceee4e
  4184e6:	or     BYTE PTR [ecx+0x4b],al
  4184e9:	lods   eax,DWORD PTR ds:[esi]
  4184ea:	nop
  4184eb:	inc    ebp
  4184ec:	js     0x4184c0
  4184ee:	shl    esp,1
  4184f0:	cmc    
  4184f1:	jecxz  0x4184b1
  4184f3:	shr    edx,1
  4184f5:	mov    ds:0x1ba7c99d,eax
  4184fa:	mov    al,0x31
  4184fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184fd:	jno    0x41849a
  4184ff:	or     BYTE PTR [esi+eax*2],cl
  418502:	or     esp,ebx
  418504:	sar    BYTE PTR [esi],cl
  418506:	and    DWORD PTR [edi],0xc744eb78
  41850c:	add    esi,DWORD PTR [ebp-0x7c]
  41850f:	cmp    al,0x91
  418511:	ins    DWORD PTR es:[edi],dx
  418512:	adc    al,0x11
  418514:	out    dx,eax
  418515:	mov    cl,0x46
  418517:	aam    0xaf
  418519:	cli    
  41851a:	pop    ds
  41851b:	aam    0x46
  41851d:	ret    
  41851e:	(bad)  
  41851f:	or     al,dl
  418521:	mul    BYTE PTR [esi-0x68]
  418524:	retf   
  418525:	xchg   ebp,eax
  418526:	in     al,dx
  418527:	nop
  418528:	data16 fisub WORD PTR [edi+0x2a]
  41852c:	add    al,0xce
  41852e:	and    edx,DWORD PTR [ebp+0x25]
  418531:	leave  
  418532:	call   0x9a7723b0
  418537:	cld    
  418538:	(bad)  
  418539:	fldenv [edi-0xc9e3166]
  41853f:	jmp    0xfca8:0x55c4e254
  418546:	xor    cl,BYTE PTR [esi-0xe]
  418549:	ins    DWORD PTR es:[edi],dx
  41854a:	sub    dh,BYTE PTR [esi-0x6e6e358b]
  418550:	adc    BYTE PTR [edi-0x30],0xf0
  418554:	das    
  418555:	orps   xmm3,XMMWORD PTR [ecx-0x3e]
  418559:	dec    ecx
  41855a:	cdq    
  41855b:	xchg   ebp,eax
  41855c:	xchg   edi,eax
  41855d:	(bad)  
  41855e:	leave  
  41855f:	pop    ecx
  418560:	nop
  418561:	icebp  
  418562:	add    eax,DWORD PTR [esp+esi*4+0x29]
  418566:	fcomp  QWORD PTR [edi]
  418568:	xor    bl,dl
  41856a:	and    al,0x5d
  41856c:	ins    DWORD PTR es:[edi],dx
  41856d:	cmp    edx,DWORD PTR [eax+edx*1+0x6c0636bc]
  418574:	add    DWORD PTR [eax],esp
  418576:	lea    ebp,fs:[edx+0x17]
  41857a:	xchg   edx,eax
  41857b:	xor    ecx,esp
  41857d:	sub    ecx,0x9eeecfe8
  418583:	dec    BYTE PTR [edi+0x1d]
  418586:	xor    eax,0x6fe4bec
  41858b:	xor    DWORD PTR [ebp+0x3c],ebx
  41858e:	mov    eax,ds:0xcfc89746
  418593:	ror    DWORD PTR [ebx+0x12],0x3b
  418597:	xchg   edi,eax
  418598:	rcr    DWORD PTR [esi],cl
  41859a:	mov    DWORD PTR [esi+0x2a],edx
  41859d:	sbb    ch,BYTE PTR [edx+0x45ccbaa7]
  4185a3:	inc    edi
  4185a4:	(bad)  
  4185a5:	ror    DWORD PTR [esi+eax*2+0x33],0x8
  4185aa:	test   BYTE PTR [ebx],dl
  4185ac:	rcl    DWORD PTR [edx],cl
  4185ae:	push   0xffffffbb
  4185b0:	sbb    BYTE PTR [esi-0x37164aae],bh
  4185b6:	jnp    0x418628
  4185b8:	cs add eax,0x521c980f
  4185be:	cwde   
  4185bf:	jp     0x418585
  4185c1:	mov    bl,bh
  4185c3:	push   edi
  4185c4:	xchg   esi,eax
  4185c5:	jecxz  0x4185d3
  4185c7:	adc    eax,0x7b74d610
  4185cc:	jns    0x4185eb
  4185ce:	clc    
  4185cf:	leave  
  4185d0:	dec    esi
  4185d1:	jo     0x418616
  4185d3:	(bad)  [eax+0x34]
  4185d6:	cmp    edi,DWORD PTR [edx]
  4185d8:	imul   edx,DWORD PTR [edi-0x58],0xe3c6f829
  4185df:	test   al,0x94
  4185e1:	push   es
  4185e2:	lea    edi,[esi-0x525f9048]
  4185e8:	mov    bl,0x56
  4185ea:	(bad)  
  4185eb:	mov    BYTE PTR [esi],al
  4185ed:	mov    eax,0x69c4e289
  4185f2:	jle    0x41859a
  4185f4:	call   0x6f0:0xd2e4de6
  4185fb:	jmp    0x350d:0xce4e5268
  418602:	mov    ds:0xdb53b3a2,al
  418607:	aaa    
  418608:	test   DWORD PTR [eax],ebx
  41860a:	jnp    0x418677
  41860c:	adc    eax,0x1f44a843
  418611:	pop    ebp
  418612:	inc    esi
  418613:	cld    
  418614:	imul   eax,ecx,0x7c252940
  41861a:	(bad)  
  41861b:	sub    al,0xa5
  41861d:	xor    ebx,esi
  41861f:	pop    edi
  418620:	jno    0x41869b
  418622:	or     bl,BYTE PTR [eax-0x48]
  418625:	(bad)  
  418626:	mov    edx,0x42261a9b
  41862b:	mov    ebp,ss
  41862d:	(bad)  
  41862e:	(bad)  
  41862f:	pushf  
  418630:	push   ds
  418631:	mov    ch,0x90
  418633:	xor    al,0x27
  418635:	mov    dh,0xc7
  418637:	fld    QWORD PTR [esi-0x2c]
  41863a:	push   es
  41863b:	sub    eax,0x70b47b61
  418640:	push   es
  418641:	xchg   edx,ebx
  418643:	xchg   ebx,eax
  418644:	leave  
  418645:	imul   edx,DWORD PTR [ebx-0x6568d406],0xffffff9d
  41864c:	js     0x41869f
  41864e:	or     eax,0xf59d57a2
  418653:	(bad)  
  418654:	fbstp  TBYTE PTR [edx-0x4b]
  418657:	aaa    
  418658:	inc    ebp
  418659:	and    bl,cl
  41865b:	cli    
  41865c:	push   ebx
  41865d:	jmp    0x4185e3
  41865f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418660:	popf   
  418661:	pop    esp
  418662:	leave  
  418663:	pop    esp
  418664:	mov    ah,0x2
  418666:	imul   esp,ebp,0xffffff82
  418669:	stos   DWORD PTR es:[edi],eax
  41866a:	idiv   BYTE PTR [edx]
  41866c:	test   DWORD PTR [edi+0x70e01368],ebx
  418672:	scas   al,BYTE PTR es:[edi]
  418673:	and    BYTE PTR [edx-0x332e0a86],ah
  418679:	mov    cl,0x85
  41867b:	frstor [ebx+0x33fd4ec5]
  418681:	mov    dl,0x6
  418683:	mov    bl,0x1d
  418685:	push   ds
  418686:	cmp    eax,0xf0a1d3ca
  41868b:	scas   al,BYTE PTR es:[edi]
  41868c:	mov    al,ds:0x12fbba8
  418691:	sub    DWORD PTR [edx],eax
  418693:	shl    ecx,0x18
  418696:	cmp    eax,DWORD PTR [eax+0x7dedfd5]
  41869c:	mov    edi,0x3a633a8b
  4186a1:	xor    edx,edi
  4186a3:	dec    ebp
  4186a4:	les    eax,FWORD PTR [ebp-0x833ac6b]
  4186aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ab:	cdq    
  4186ac:	test   al,0x0
  4186ae:	inc    ecx
  4186af:	push   edx
  4186b0:	xchg   edi,eax
  4186b1:	jno    0x41866f
  4186b3:	into   
  4186b4:	ins    BYTE PTR es:[edi],dx
  4186b5:	add    DWORD PTR [eax+0x34],0x3a
  4186b9:	bound  ebx,QWORD PTR [ebp-0x77ce41f9]
  4186bf:	in     al,dx
  4186c0:	mov    ds:0xa65235c7,al
  4186c5:	scas   eax,DWORD PTR es:[edi]
  4186c6:	(bad)  
  4186c7:	mov    ds:0x4bc42afd,al
  4186cc:	add    eax,0x2b0f019d
  4186d1:	sub    eax,0xe263f532
  4186d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186d7:	call   0x7865d917
  4186dc:	cmp    dl,BYTE PTR [edx]
  4186de:	ror    BYTE PTR [eax+0x5e],0xa5
  4186e2:	add    al,0x7c
  4186e4:	inc    eax
  4186e5:	gs nop esi
  4186e9:	jae    0x41870b
  4186eb:	dec    edi
  4186ec:	ss jmp 0x92eac1b9
  4186f2:	pop    eax
  4186f3:	xor    al,0x9f
  4186f5:	pop    esi
  4186f6:	int3   
  4186f7:	cwde   
  4186f8:	test   DWORD PTR [eax+0x36f08cd5],edi
  4186fe:	mov    ax,0x1fcd
  418702:	lods   eax,DWORD PTR ds:[esi]
  418703:	popf   
  418704:	mov    dl,0x87
  418706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418707:	jno    0x41876f
  418709:	sbb    eax,0x4a81c847
  41870e:	push   cs
  41870f:	inc    ebx
  418710:	or     ecx,DWORD PTR [ecx+0x789edf5c]
  418716:	in     al,dx
  418717:	dec    esi
  418718:	xor    BYTE PTR [ecx+0x7a],al
  41871b:	pop    edx
  41871c:	fnstsw WORD PTR [ebx]
  41871e:	jbe    0x418776
  418720:	popf   
  418721:	aad    0xa
  418723:	int3   
  418724:	cmp    DWORD PTR [edi+ebx*1],0x835151cb
  41872b:	icebp  
  41872c:	cmc    
  41872d:	and    DWORD PTR [eax],ebp
  41872f:	imul   esi,DWORD PTR [edi-0x19d8fc23],0x3a
  418736:	jle    0x41875e
  418738:	fs sbb eax,0x207c34d6
  41873e:	dec    edi
  41873f:	js     0x41877e
  418741:	or     bh,BYTE PTR [ebp+0x1ab8663b]
  418747:	sbb    ah,BYTE PTR [esp+ebp*2-0x61]
  41874b:	ret    0x6cf8
  41874e:	(bad)  
  41874f:	rcr    BYTE PTR [ecx+eax*8],1
  418752:	xor    dh,BYTE PTR [edx-0x704a2a72]
  418758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418759:	push   esi
  41875a:	je     0x418762
  41875c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41875d:	scas   eax,DWORD PTR es:[edi]
  41875e:	cmp    ebx,ebp
  418760:	stos   BYTE PTR es:[edi],al
  418761:	push   ebx
  418762:	xchg   edi,eax
  418763:	mov    bl,bl
  418765:	rcl    dl,1
  418767:	inc    esi
  418768:	int3   
  418769:	je     0x4186f8
  41876b:	es in  eax,0xe2
  41876e:	sub    eax,DWORD PTR [esi-0x4b]
  418771:	std    
  418772:	sub    dh,al
  418774:	aaa    
  418775:	jp     0x418713
  418777:	lods   al,BYTE PTR ds:[esi]
  418778:	pop    es
  418779:	and    cl,BYTE PTR [edx+0x17ea9075]
  41877f:	imul   ebp,DWORD PTR [ecx],0xffffffd7
  418782:	cmp    esi,DWORD PTR [eax+ecx*8-0x4113a94c]
  418789:	icebp  
  41878a:	fisttp DWORD PTR [ebx]
  41878c:	mov    ch,0x7
  41878e:	pusha  
  41878f:	pop    ss
  418790:	ror    BYTE PTR ds:0x6c42e16e,cl
  418796:	scas   al,BYTE PTR es:[edi]
  418797:	adc    al,0x4e
  418799:	sbb    bh,BYTE PTR ds:0xb6cd7128
  41879f:	and    dh,BYTE PTR [edi]
  4187a1:	prefetch BYTE PTR [edx+esi*8-0x20]
  4187a6:	repz call 0xe7a7c80f
  4187ac:	popa   
  4187ad:	dec    eax
  4187ae:	cmc    
  4187af:	mov    dh,0x34
  4187b1:	lds    ebp,FWORD PTR [ecx]
  4187b3:	inc    edx
  4187b4:	xor    ebp,DWORD PTR [esp+edx*2]
  4187b7:	in     eax,0xc0
  4187b9:	cmp    al,0xf9
  4187bb:	push   ds
  4187bc:	or     ecx,DWORD PTR [eax-0x57]
  4187bf:	push   ds
  4187c0:	in     al,dx
  4187c1:	and    ch,BYTE PTR [esi]
  4187c3:	jne    0x418815
  4187c5:	xchg   esp,eax
  4187c6:	jle    0x418772
  4187c8:	adc    bh,BYTE PTR [esi+0x13]
  4187cb:	cmp    BYTE PTR [ecx+0x7749ba2b],cl
  4187d1:	sbb    ch,BYTE PTR [esi]
  4187d3:	cmp    al,0x2b
  4187d5:	or     BYTE PTR [ebx-0x20],bh
  4187d8:	dec    edx
  4187d9:	ds pushf 
  4187db:	dec    ebx
  4187dc:	out    0x6d,al
  4187de:	mov    ch,0xb9
  4187e0:	test   BYTE PTR [esi-0x525b9cf2],0x35
  4187e7:	push   es
  4187e8:	fdiv   QWORD PTR [ebp-0x3477cf9f]
  4187ee:	inc    edx
  4187ef:	push   ebx
  4187f0:	or     BYTE PTR [ecx-0x6d],ch
  4187f3:	jmp    FWORD PTR [esi]
  4187f5:	or     BYTE PTR [esi+eiz*4],0xa
  4187f9:	xor    eax,0x899e1c74
  4187fe:	stos   DWORD PTR es:[edi],eax
  4187ff:	retf   
  418800:	popa   
  418801:	jmp    0xa1d7:0x12951ef
  418808:	add    BYTE PTR ds:0x31849fe8,ch
  41880e:	stos   BYTE PTR es:[edi],al
  41880f:	mov    ebx,0x40b5fdb
  418814:	inc    esi
  418815:	call   0x7073bcd6
  41881a:	lock sbb BYTE PTR [di],ah
  41881e:	sbb    ebp,ebx
  418820:	fiadd  WORD PTR [esi]
  418822:	xchg   esi,eax
  418823:	add    DWORD PTR ds:0x27632b8c,ecx
  418829:	mov    ss,WORD PTR [esi]
  41882b:	jbe    0x41884a
  41882d:	repnz mov dh,0x22
  418830:	int3   
  418831:	fld    DWORD PTR [ebp+0x2b]
  418834:	mov    edi,0x880e61b1
  418839:	rcl    edi,cl
  41883b:	inc    edi
  41883c:	sub    ecx,edx
  41883e:	test   eax,0x6a73472f
  418843:	and    dh,BYTE PTR [edx+0x3f]
  418846:	test   al,0x8e
  418848:	ins    BYTE PTR es:[edi],dx
  418849:	xchg   esi,eax
  41884a:	je     0x418879
  41884c:	push   edi
  41884d:	icebp  
  41884e:	pop    esp
  41884f:	sahf   
  418850:	pop    edx
  418851:	add    edx,DWORD PTR [ebx]
  418853:	lds    edx,FWORD PTR [edx*1-0x83e5448]
  41885a:	jae    0x41882c
  41885c:	sub    ch,BYTE PTR [edx]
  41885e:	mov    bl,0x5f
  418860:	test   DWORD PTR [esi],esi
  418862:	jle    0x41886e
  418864:	jl     0x418897
  418866:	push   0xffffffa4
  418868:	or     eax,0x24bc2dd9
  41886d:	mov    esp,0x41ca3bde
  418872:	inc    ecx
  418873:	data16 add ah,BYTE PTR [edx+0x7e]
  418877:	mov    eax,0xceb4a4a5
  41887c:	mov    bl,0x2c
  41887e:	fucomip st,st(5)
  418880:	imul   DWORD PTR [ecx+esi*1+0x0]
  418884:	lods   al,BYTE PTR ds:[esi]
  418885:	mul    dh
  418887:	xchg   edx,eax
  418888:	inc    esi
  418889:	loop   0x4188c6
  41888b:	xlat   BYTE PTR ds:[ebx]
  41888c:	mov    eax,0xb7960068
  418891:	push   ecx
  418892:	sub    esp,esp
  418894:	call   0xe613:0xf4a24cad
  41889b:	push   cs
  41889c:	stc    
  41889d:	and    BYTE PTR [eax],bl
  41889f:	pop    esi
  4188a0:	xlat   BYTE PTR ds:[ebx]
  4188a1:	sub    ecx,ebx
  4188a3:	push   ds
  4188a4:	mov    dl,0x6a
  4188a6:	xchg   ebx,eax
  4188a7:	retf   0x31a2
  4188aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188ab:	ret    
  4188ac:	or     BYTE PTR [eax+0x6eb788cf],0x53
  4188b3:	test   eax,0x230ccb90
  4188b8:	push   ss
  4188b9:	cmp    bh,BYTE PTR [ebp+0x35d0d29c]
  4188bf:	lea    esp,[ecx+eiz*8+0x31d006aa]
  4188c6:	ds xor bl,0xf9
  4188ca:	mov    ah,0xbd
  4188cc:	xor    DWORD PTR [eax],esi
  4188ce:	cmp    eax,0xb46ef199
  4188d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188d4:	mov    dl,BYTE PTR [ebp+0xd]
  4188d7:	imul   esi,DWORD PTR ds:0x21626b9a,0xffffffd7
  4188de:	dec    eax
  4188df:	jge    0x4188a7
  4188e1:	repz xchg edi,eax
  4188e3:	add    BYTE PTR [ebx+0x578e24f0],dl
  4188e9:	cmp    ebp,DWORD PTR [edx]
  4188eb:	inc    BYTE PTR ds:0xe4d2e51c
  4188f1:	out    0xd4,al
  4188f3:	nop
  4188f4:	int3   
  4188f5:	stos   BYTE PTR es:[edi],al
  4188f6:	out    0x66,eax
  4188f8:	push   ebx
  4188f9:	push   edi
  4188fa:	add    DWORD PTR [eax-0x32],ebx
  4188fd:	(bad)  
  4188fe:	int    0x97
  418900:	adc    esp,DWORD PTR [edi-0x4a]
  418903:	mov    cl,0x15
  418905:	ret    
  418906:	mov    ds:0x6e17ad19,al
  41890b:	push   es
  41890c:	dec    ebx
  41890d:	cld    
  41890e:	push   ds
  41890f:	inc    esi
  418910:	imul   eax,DWORD PTR [ebx],0xffffffc9
  418913:	call   0xa30b:0xa2b85825
  41891a:	mov    ch,0x33
  41891c:	mov    eax,0xad118431
  418921:	popa   
  418922:	dec    DWORD PTR [edi+0x1]
  418925:	mov    bh,0x4b
  418927:	or     BYTE PTR [edx-0x33],al
  41892a:	mov    dh,0x37
  41892c:	and    ch,ch
  41892e:	push   ss
  41892f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418930:	xchg   BYTE PTR [esi-0x71c8a2a7],bh
  418936:	idiv   DWORD PTR [esi+0x602af5c6]
  41893c:	add    DWORD PTR [ebp-0x71c77d0d],esp
  418942:	jb     0x418912
  418944:	(bad)  
  418946:	push   ebx
  418947:	ror    dh,1
  418949:	pop    esp
  41894a:	mov    eax,ds:0x62244d98
  41894f:	push   cs
  418950:	jp     0x4189b6
  418952:	fwait
  418953:	sub    eax,0x9099881b
  418958:	jnp    0x41896e
  41895a:	in     al,dx
  41895b:	or     BYTE PTR ds:0x405ea5,0xfc
  418962:	jge    0x4189e2
  418964:	sbb    BYTE PTR [edx],dl
  418966:	ins    DWORD PTR es:[edi],dx
  418967:	mov    BYTE PTR [ebx],dl
  418969:	xchg   esp,eax
  41896a:	push   0xf6bd5b9
  41896f:	push   edi
  418970:	xor    DWORD PTR [ecx],0x9d6e0f25
  418976:	dec    ecx
  418977:	sbb    BYTE PTR [esi+0x66],al
  41897a:	mov    edi,0x307aa1fc
  41897f:	in     eax,0xb7
  418981:	adc    DWORD PTR [eax+0x74],ecx
  418984:	aam    0x98
  418986:	push   edi
  418987:	aad    0x6e
  418989:	ins    DWORD PTR es:[edi],dx
  41898a:	mov    dl,0xc9
  41898c:	cwde   
  41898d:	pop    ds
  41898e:	inc    ebp
  41898f:	cmp    ah,BYTE PTR [bp+di]
  418992:	inc    edi
  418993:	int    0xab
  418995:	loop   0x4189f0
  418997:	jne    0x41893c
  418999:	inc    esi
  41899a:	xor    eax,0x7f9cd1d0
  41899f:	repz mov al,ds:0x904778de
  4189a5:	clc    
  4189a6:	fld    TBYTE PTR [edx+0x55131deb]
  4189ac:	jge    0x418a28
  4189ae:	jns    0x418956
  4189b0:	int    0xfd
  4189b2:	push   eax
  4189b3:	cmp    DWORD PTR ds:0xce322452,eax
  4189b9:	cdq    
  4189ba:	bound  esp,QWORD PTR [eax-0x19]
  4189bd:	sar    DWORD PTR ds:0x742ee460,0x4f
  4189c4:	and    DWORD PTR ds:0xc48d4198,ebx
  4189ca:	and    al,0x9c
  4189cc:	xor    BYTE PTR [eax],cl
  4189ce:	mov    cs,WORD PTR [eax+0x76aa0564]
  4189d4:	mov    DWORD PTR [ebp+0x7c],0x3ccae299
  4189db:	mov    ah,0x0
  4189dd:	push   0x4110f474
  4189e2:	out    0x9b,eax
  4189e4:	push   0xd4b36838
  4189e9:	or     eax,0xa04e68a8
  4189ee:	mov    ecx,0xc237eed1
  4189f3:	ja     0x418997
  4189f5:	mov    WORD PTR [ebp-0x6cc0a063],es
  4189fb:	mov    cl,0x36
  4189fd:	mov    bl,0xcf
  4189ff:	jmp    0x418a14
  418a01:	scas   al,BYTE PTR es:[edi]
  418a02:	sub    eax,0x158b2455
  418a07:	icebp  
  418a08:	jle    0x41899c
  418a0a:	ins    BYTE PTR es:[edi],dx
  418a0b:	sub    eax,edx
  418a0d:	adc    al,0x1c
  418a0f:	jae    0x4189df
  418a11:	cld    
  418a12:	nop
  418a13:	fldcw  WORD PTR [edi]
  418a15:	pop    edx
  418a16:	pop    WORD PTR [eax-0x22]
  418a1a:	dec    BYTE PTR [edx]
  418a1c:	dec    eax
  418a1d:	shl    BYTE PTR [ecx-0x4ca5d8a3],cl
  418a23:	mov    cs:0xc18e10b2,eax
  418a29:	sub    DWORD PTR [eax+0x5d],edi
  418a2c:	or     eax,0x5a45b2a3
  418a31:	(bad)  
  418a32:	data16 (bad) [bp+di+0x3b]
  418a37:	loop   0x4189d1
  418a39:	inc    edi
  418a3a:	sub    DWORD PTR [ecx+0x31d638fe],ebp
  418a40:	repz scas eax,DWORD PTR es:[edi]
  418a42:	and    DWORD PTR [ebx-0x47],edx
  418a45:	ud0    ecx,DWORD PTR [ecx]
  418a48:	fmul   st(5),st
  418a4a:	add    bh,al
  418a4c:	fstp   st(7)
  418a4e:	inc    esi
  418a4f:	retf   0x9469
  418a52:	cwde   
  418a53:	xchg   DWORD PTR [edi],esi
  418a55:	aam    0xcb
  418a57:	xor    DWORD PTR ds:0x35124095,edx
  418a5d:	xchg   esp,eax
  418a5e:	or     ah,BYTE PTR [eax-0x47]
  418a61:	xchg   edx,eax
  418a62:	jmp    0x6a64:0xfa62c45b
  418a69:	(bad)  
  418a6a:	repz lahf 
  418a6c:	out    dx,al
  418a6d:	push   ds
  418a6e:	cmp    ch,BYTE PTR [ebp-0x79]
  418a71:	int    0x6
  418a73:	cld    
  418a74:	lds    edi,FWORD PTR [ecx]
  418a76:	mov    ?,esi
  418a78:	and    ebp,DWORD PTR [eax+ebp*8+0x21]
  418a7c:	dec    ebp
  418a7d:	adc    BYTE PTR [edx-0x51],bh
  418a80:	inc    ebp
  418a81:	inc    ebp
  418a82:	push   ebp
  418a83:	xor    bl,al
  418a85:	sub    dh,ch
  418a87:	xor    BYTE PTR [ebx+esi*8+0x23fa7977],bl
  418a8e:	mov    cs,edi
  418a90:	and    DWORD PTR [edx],edx
  418a92:	fadd   QWORD PTR [edi-0x156e9b8b]
  418a98:	enter  0x7cda,0x83
  418a9c:	inc    esp
  418a9d:	ja     0x418abc
  418a9f:	and    ah,ah
  418aa1:	adc    dh,cl
  418aa3:	hlt    
  418aa4:	add    DWORD PTR [eax+edi*2],edi
  418aa7:	fwait
  418aa8:	inc    ebp
  418aa9:	rol    DWORD PTR [edx+0x15],0xc6
  418aad:	xor    cl,BYTE PTR [edx-0x1d047958]
  418ab3:	les    ebp,FWORD PTR [ecx-0x32cb7ef3]
  418ab9:	push   ebx
  418aba:	inc    edx
  418abb:	mov    bl,0x3d
  418abd:	sbb    DWORD PTR [ebp+0x6be301ee],ecx
  418ac3:	xchg   edx,eax
  418ac4:	aas    
  418ac5:	in     al,0xe2
  418ac7:	cmp    eax,0x445c5529
  418acc:	bound  esp,QWORD PTR [ebp+0x3199875f]
  418ad2:	cdq    
  418ad3:	out    0xe6,eax
  418ad5:	push   ds
  418ad6:	fmul   DWORD PTR [eax+0x75aa3b6f]
  418adc:	or     bl,ch
  418ade:	repnz cwde 
  418ae0:	ret    
  418ae1:	data16 mov cl,0x8f
  418ae4:	dec    esp
  418ae5:	jmp    0xfdd2c28f
  418aea:	gs push 0x7c
  418aed:	pop    ebp
  418aee:	or     cl,BYTE PTR [esi-0x5f]
  418af1:	adc    eax,DWORD PTR [ecx-0x20]
  418af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418af5:	stos   BYTE PTR es:[edi],al
  418af6:	push   ecx
  418af7:	lahf   
  418af8:	rcl    DWORD PTR [edi-0x25],0xbd
  418afc:	mov    cl,dl
  418afe:	retf   0x7b7
  418b01:	sbb    eax,esp
  418b03:	sbb    esp,ebp
  418b05:	fld    TBYTE PTR fs:[edx+0x50fb11ea]
  418b0c:	into   
  418b0d:	mov    al,0xa5
  418b0f:	rcl    DWORD PTR ds:0x4dd2731e,0x9
  418b16:	jge    0x418a9a
  418b18:	stos   DWORD PTR es:[edi],eax
  418b19:	outs   dx,DWORD PTR ds:[esi]
  418b1a:	sub    DWORD PTR [ebx-0x517210e7],ecx
  418b20:	call   0xe9285e17
  418b25:	mov    eax,ds:0xef16ab16
  418b2a:	(bad)  
  418b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b2c:	icebp  
  418b2d:	jo     0x418b42
  418b2f:	dec    esp
  418b30:	imul   edx,eax,0xa5266539
  418b36:	pusha  
  418b37:	je     0x418bb5
  418b39:	daa    
  418b3a:	and    BYTE PTR [ebx],ch
  418b3c:	sub    al,BYTE PTR [edx-0x3a3c0e58]
  418b42:	mov    gs,WORD PTR [esi]
  418b44:	sub    BYTE PTR [ebp+0x15],ch
  418b47:	jmp    0x7c4e:0x5aa1c802
  418b4e:	mov    ah,0xaa
  418b50:	(bad)
  418b54:	pop    ss
  418b55:	cwde   
  418b56:	fwait
  418b57:	sub    al,0xf1
  418b59:	push   eax
  418b5a:	mov    bh,0x96
  418b5c:	das    
  418b5d:	xchg   edx,eax
  418b5e:	jl     0x418afc
  418b60:	adc    BYTE PTR [edx-0x3af36cea],al
  418b66:	iret   
  418b67:	popa   
  418b68:	clc    
  418b69:	out    dx,eax
  418b6a:	xchg   ebp,eax
  418b6b:	push   es
  418b6c:	xchg   ecx,eax
  418b6d:	inc    esi
  418b6e:	loop   0x418b85
  418b70:	mov    bh,0xa0
  418b72:	sbb    DWORD PTR [ebp-0x3b],0xa77fb1e6
  418b79:	mov    esi,0x3e117177
  418b7e:	add    al,0xbb
  418b80:	cmp    BYTE PTR [esi+0x1aaa81bf],ch
  418b86:	aaa    
  418b87:	or     ebp,DWORD PTR [edi+ebp*4]
  418b8a:	mul    WORD PTR [edi]
  418b8d:	mov    eax,ds:0x2b067028
  418b92:	mov    bl,0xdd
  418b94:	retf   0xed2a
  418b97:	push   eax
  418b98:	fsub   DWORD PTR [edx+0x46]
  418b9b:	aas    
  418b9c:	push   ss
  418b9d:	push   cs
  418b9e:	test   ebp,ebp
  418ba0:	pop    eax
  418ba1:	sub    al,cl
  418ba3:	faddp  st(5),st
  418ba5:	push   eax
  418ba6:	popf   
  418ba7:	sub    eax,0xd376df25
  418bac:	leave  
  418bad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bae:	push   esp
  418baf:	inc    eax
  418bb0:	inc    edi
  418bb1:	xor    cl,BYTE PTR [ebx-0x4f]
  418bb4:	add    ebp,esi
  418bb6:	or     DWORD PTR [edi+0x37a06732],esi
  418bbc:	retf   0xa596
  418bbf:	stos   BYTE PTR es:[edi],al
  418bc0:	mov    edi,0x1dd70590
  418bc5:	jge    0x418bea
  418bc7:	push   ecx
  418bc8:	mov    ah,0x56
  418bca:	or     eax,0xebe8579e
  418bcf:	mov    fs,WORD PTR [edx]
  418bd1:	push   cs
  418bd2:	add    DWORD PTR [esi],edi
  418bd4:	and    al,0xfe
  418bd6:	iret   
  418bd7:	inc    ecx
  418bd8:	scas   al,BYTE PTR es:[edi]
  418bd9:	fmul   DWORD PTR [edi]
  418bdb:	xor    dl,BYTE PTR [ecx]
  418bdd:	inc    ecx
  418bde:	push   0x7f
  418be0:	in     al,dx
  418be1:	js     0x418b91
  418be3:	and    al,0x6
  418be5:	std    
  418be6:	jns    0x418c17
  418be8:	push   edx
  418be9:	cli    
  418bea:	enter  0xe623,0xfa
  418bee:	pop    edx
  418bef:	(bad)  
  418bf0:	(bad)  
  418bf1:	pop    es
  418bf2:	or     al,0x88
  418bf4:	xchg   esi,eax
  418bf5:	les    esi,FWORD PTR [ebp+0x5e]
  418bf8:	cdq    
  418bf9:	adc    bl,BYTE PTR [esi+0x1c]
  418bfc:	push   esi
  418bfd:	pop    es
  418bfe:	fdivr  DWORD PTR [ecx-0x773c78b7]
  418c04:	or     eax,0x76dadb3c
  418c09:	ret    
  418c0a:	lock gs dec esp
  418c0d:	push   es
  418c0e:	cmp    al,0xfa
  418c10:	cwde   
  418c11:	mov    DWORD PTR [esi-0x6f85800f],ebp
  418c17:	xor    ch,BYTE PTR [ebp+0x2b]
  418c1a:	xchg   ecx,eax
  418c1b:	xchg   edx,ebx
  418c1d:	push   0x3c
  418c1f:	mov    ?,WORD PTR [edx]
  418c21:	lock dec ebx
  418c23:	clc    
  418c24:	cli    
  418c25:	cld    
  418c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c27:	push   eax
  418c28:	add    ecx,DWORD PTR ds:[edi-0x8]
  418c2c:	jae    0x418bcf
  418c2e:	pop    es
  418c2f:	js     0x418c8c
  418c31:	add    DWORD PTR [eax-0xb],esi
  418c34:	js     0x418c5c
  418c36:	out    0xb4,eax
  418c38:	pop    eax
  418c39:	icebp  
  418c3a:	dec    ebx
  418c3b:	dec    esi
  418c3c:	lods   eax,DWORD PTR ds:[esi]
  418c3d:	int    0xde
  418c3f:	sar    dh,0x96
  418c42:	xchg   esi,eax
  418c43:	mov    bl,al
  418c45:	test   al,0x3a
  418c47:	(bad)  
  418c48:	push   0x5b
  418c4a:	mov    edi,DWORD PTR [edi-0x2598ed89]
  418c50:	lahf   
  418c51:	in     al,dx
  418c52:	jle    0x418c0d
  418c54:	push   cs
  418c55:	mov    dh,BYTE PTR [ebx]
  418c57:	adc    al,0x31
  418c59:	xor    DWORD PTR [edx],ecx
  418c5b:	(bad)  
  418c5c:	retf   
  418c5d:	ins    DWORD PTR es:[edi],dx
  418c5e:	stc    
  418c5f:	(bad)  
  418c62:	mov    eax,ds:0xee1efc0a
  418c67:	out    dx,al
  418c68:	mov    dl,0xec
  418c6a:	gs push eax
  418c6c:	jns    0x418c53
  418c6e:	cli    
  418c6f:	jl     0x418c2d
  418c71:	in     al,dx
  418c72:	les    esi,FWORD PTR [esp+edi*1]
  418c75:	or     eax,DWORD PTR [edx-0x63ce190a]
  418c7b:	mov    ecx,0xc991869e
  418c80:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418c82:	jmp    0x418c11
  418c84:	daa    
  418c85:	popa   
  418c86:	ret    0xe8e8
  418c89:	xchg   DWORD PTR [esi],ebp
  418c8b:	mov    bl,0x61
  418c8d:	sbb    ecx,ebx
  418c8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c90:	inc    eax
  418c91:	xor    al,0x90
  418c93:	aam    0x4f
  418c95:	and    BYTE PTR [edi-0x4ae84403],dl
  418c9b:	(bad)  
  418c9c:	xchg   ebx,eax
  418c9d:	inc    esp
  418c9e:	jl     0x418d19
  418ca0:	or     BYTE PTR [eax+eax*2],0x6c
  418ca4:	jl     0x418c8c
  418ca6:	mov    dl,0xca
  418ca8:	in     eax,0xe6
  418caa:	push   0xa14d0dba
  418caf:	out    0xae,eax
  418cb1:	out    dx,eax
  418cb2:	add    esp,0x624c9972
  418cb8:	or     al,0x2e
  418cba:	mov    dh,BYTE PTR [esi-0xf]
  418cbd:	mov    al,0x5d
  418cbf:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  418cc1:	or     DWORD PTR [ebp-0x67b63db7],esp
  418cc7:	adc    BYTE PTR [eax],bl
  418cc9:	mov    ss,edi
  418ccb:	mov    al,ds:0xdbdd6161
  418cd0:	aam    0x12
  418cd2:	sbb    ebx,DWORD PTR [esi+0x27a48252]
  418cd8:	dec    ebp
  418cd9:	call   0xc6765988
  418cde:	inc    edi
  418cdf:	push   ecx
  418ce0:	pop    esi
  418ce1:	pop    ds
  418ce2:	and    eax,DWORD PTR [edi+0x4d]
  418ce5:	rol    ah,0xac
  418ce8:	iret   
  418ce9:	or     dl,BYTE PTR [ebp-0x35]
  418cec:	jl     0x418cca
  418cee:	retf   
  418cef:	enter  0x6b7e,0x81
  418cf3:	out    0x7e,al
  418cf5:	inc    edi
  418cf6:	or     al,0xc5
  418cf8:	xchg   WORD PTR [edi+0x6b],si
  418cfc:	and    al,0x5f
  418cfe:	in     al,dx
  418cff:	adc    DWORD PTR [ebp+0x2c],0x7e8a9279
  418d06:	sub    al,0x2c
  418d08:	ins    BYTE PTR es:[edi],dx
  418d09:	imul   esi,DWORD PTR [ecx+0x54],0x99da0786
  418d10:	call   0x4077:0x5ba97298
  418d17:	sub    DWORD PTR [esi-0x2d],ecx
  418d1a:	mov    dh,0xf6
  418d1c:	cwde   
  418d1d:	sar    esp,0xe2
  418d20:	cmp    al,0x7
  418d22:	dec    ebp
  418d23:	mov    bl,0xbe
  418d25:	clc    
  418d26:	call   0x75731ff
  418d2b:	add    ecx,ebp
  418d2d:	add    edi,DWORD PTR [ebp+0x3429c068]
  418d33:	push   ecx
  418d34:	inc    edi
  418d35:	or     eax,ebx
  418d37:	sbb    DWORD PTR [eax],esp
  418d39:	and    al,0xd5
  418d3b:	or     eax,0x97e0b30c
  418d40:	cwde   
  418d41:	leave  
  418d42:	ret    0x9b50
  418d45:	jp     0x418da1
  418d47:	daa    
  418d48:	adc    eax,0x873c6b50
  418d4d:	shr    dl,0xfd
  418d50:	adc    DWORD PTR [edx+0xa],edx
  418d53:	lahf   
  418d54:	mov    ds:0xa41375d7,al
  418d59:	in     eax,0xd8
  418d5b:	test   DWORD PTR [esi+0x49],0xc9d1cc78
  418d62:	cmp    BYTE PTR [ecx+0x2e631350],al
  418d68:	and    DWORD PTR [ecx],ebx
  418d6a:	enter  0x1bf9,0x1a
  418d6e:	push   0x4a
  418d70:	in     al,dx
  418d71:	push   ebx
  418d72:	stos   BYTE PTR es:[edi],al
  418d73:	pop    es
  418d74:	cmc    
  418d75:	adc    edi,esp
  418d77:	xchg   edi,eax
  418d78:	jp     0x418d5f
  418d7a:	dec    esi
  418d7b:	cmp    al,0x1e
  418d7d:	lahf   
  418d7e:	xor    eax,0x4d952962
  418d83:	fs inc eax
  418d85:	sbb    BYTE PTR [edx-0x412c8757],ch
  418d8b:	add    eax,0x43a708bf
  418d90:	cmp    al,BYTE PTR [ebx-0x47d390d]
  418d96:	or     al,0xde
  418d98:	in     eax,0x5e
  418d9a:	add    eax,0x22ae0e0c
  418d9f:	jecxz  0x418dd0
  418da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418da2:	push   edi
  418da3:	in     al,0x4
  418da5:	jb     0x418da2
  418da7:	and    al,bh
  418da9:	popf   
  418daa:	inc    esi
  418dab:	data16 or al,0x4e
  418dae:	and    BYTE PTR cs:[eax],dl
  418db1:	cmp    BYTE PTR [edx+0x23263e40],dl
  418db7:	adc    DWORD PTR [edx-0x4e],edi
  418dba:	dec    edi
  418dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dbc:	mov    WORD PTR [edx+ebp*2-0x79],gs
  418dc0:	inc    esi
  418dc1:	in     eax,0xf7
  418dc3:	cs scas al,BYTE PTR es:[edi]
  418dc5:	mov    esp,0x9afd6669
  418dca:	jg     0x418d6e
  418dcc:	jbe    0x418d99
  418dce:	es mov bh,0x40
  418dd1:	ja     0x418d77
  418dd3:	jbe    0x418d6a
  418dd5:	dec    ebx
  418dd6:	ret    
  418dd7:	jg     0x418de5
  418dd9:	sub    BYTE PTR [edi-0x76f43f2],bh
  418ddf:	std    
  418de0:	adc    edx,DWORD PTR [ebp-0x46b4e11]
  418de6:	lods   al,BYTE PTR ds:[esi]
  418de7:	into   
  418de8:	inc    edx
  418de9:	cwde   
  418dea:	dec    ebx
  418deb:	es lock sbb al,0x6a
  418def:	adc    al,0x5f
  418df1:	xchg   ecx,eax
  418df2:	mov    bh,0xdb
  418df4:	pop    es
  418df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418df6:	sti    
  418df7:	fdivp  st(6),st
  418df9:	add    DWORD PTR [eax-0x2f],0x97d2dc3b
  418e00:	nop
  418e01:	lea    esp,es:[ecx-0x25]
  418e05:	shr    BYTE PTR ds:0x365b3da7,cl
  418e0b:	call   0x3c1255a1
  418e10:	jge    0x418dbe
  418e12:	push   0xfffffff1
  418e14:	dec    ebx
  418e15:	or     esp,DWORD PTR [edx]
  418e17:	sbb    DWORD PTR [ebx+0x7041e0ef],eax
  418e1d:	icebp  
  418e1e:	pop    eax
  418e1f:	mov    ss,esi
  418e21:	mov    dl,0xc2
  418e23:	les    ecx,FWORD PTR [ebx-0x63f32919]
  418e29:	sbb    eax,0xa47af686
  418e2e:	sbb    DWORD PTR [edi],eax
  418e30:	jb     0x418e6c
  418e32:	in     eax,0xbb
  418e34:	das    
  418e35:	xchg   esp,eax
  418e36:	mov    bl,0x8a
  418e38:	push   0xffffffe6
  418e3a:	cwde   
  418e3b:	sub    al,0x9d
  418e3d:	loop   0x418eb1
  418e3f:	adc    al,0xc0
  418e41:	inc    ecx
  418e42:	fmul   QWORD PTR [edi]
  418e44:	ret    0x93ed
  418e47:	shl    ebp,1
  418e49:	in     al,0x48
  418e4b:	mov    ?,WORD PTR [bp+si-0x46b8]
  418e50:	loop   0x418def
  418e52:	repz jnp 0x418de9
  418e55:	cwde   
  418e56:	push   0x75834418
  418e5b:	call   0x4418:0x6c6381c2
  418e62:	jno    0x418e5e
  418e64:	test   eax,0x510fa220
  418e69:	fisubr DWORD PTR [eax-0xf]
  418e6c:	ret    0xde63
  418e6f:	jecxz  0x418e3e
  418e71:	pop    es
  418e72:	dec    esi
  418e73:	pop    edi
  418e74:	inc    edx
  418e75:	xchg   ebx,eax
  418e76:	or     DWORD PTR [ecx+0x58cdbf3e],eax
  418e7c:	rcr    DWORD PTR [esi-0x179b423d],cl
  418e82:	push   esp
  418e83:	mov    esp,0x29a5f680
  418e88:	push   edx
  418e89:	push   es
  418e8a:	and    al,0x6d
  418e8c:	daa    
  418e8d:	test   DWORD PTR [ecx-0x10206c08],eax
  418e93:	(bad)  
  418e94:	jne    0x418e57
  418e96:	call   0x4c4e:0xb6d8cce4
  418e9d:	retf   
  418e9e:	shr    DWORD PTR [ecx],1
  418ea0:	sbb    dl,BYTE PTR [edi-0x59]
  418ea3:	loope  0x418eb2
  418ea5:	or     edi,ebp
  418ea7:	shr    DWORD PTR [ecx],0x47
  418eaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eab:	mov    edx,0x92d32a6
  418eb0:	std    
  418eb1:	and    dl,BYTE PTR [esi+edi*1-0x330b7e45]
  418eb8:	dec    esp
  418eb9:	xchg   edx,eax
  418eba:	(bad)
  418ebd:	inc    esp
  418ebe:	adc    BYTE PTR [edx-0x7d9bac99],ah
  418ec4:	sub    DWORD PTR [ebp-0x1d31abb8],ecx
  418eca:	repz jmp 0xf4b4631f
  418ed0:	outs   dx,BYTE PTR ds:[esi]
  418ed1:	pusha  
  418ed2:	mov    ecx,DWORD PTR [ebp-0x23]
  418ed5:	push   0xffffffc7
  418ed7:	cld    
  418ed8:	dec    ecx
  418ed9:	dec    esp
  418eda:	xchg   ecx,eax
  418edb:	jp     0x418ea5
  418edd:	dec    esi
  418ede:	ficomp WORD PTR [eax*4-0x3f98f938]
  418ee5:	add    DWORD PTR [ecx],esi
  418ee7:	dec    edi
  418ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ee9:	leave  
  418eea:	aam    0x66
  418eec:	ret    
  418eed:	dec    ecx
  418eee:	ja     0x418f2a
  418ef0:	cmp    esp,DWORD PTR [edx-0x5aafbadd]
  418ef6:	outs   dx,DWORD PTR ds:[esi]
  418ef7:	mov    eax,ds:0x1c3d6be1
  418efc:	sub    DWORD PTR [edx],ecx
  418efe:	add    BYTE PTR [ecx+0xcff07c0],bl
  418f04:	lahf   
  418f05:	fist   WORD PTR [edi+eax*4+0x483e4bc7]
  418f0c:	xchg   esp,eax
  418f0d:	jne    0x418ee7
  418f0f:	xchg   ebx,eax
  418f10:	add    eax,0x8d126343
  418f15:	rcl    BYTE PTR [edx+0x737f9562],0xe5
  418f1c:	mov    dh,0x8a
  418f1e:	pusha  
  418f1f:	fdiv   DWORD PTR [esi]
  418f21:	cmp    cl,BYTE PTR [eax+0x481cee0a]
  418f27:	inc    ebx
  418f28:	das    
  418f29:	dec    edx
  418f2a:	inc    ecx
  418f2b:	or     dl,BYTE PTR [esp+eiz*4-0x1df1ac81]
  418f32:	imul   edi,DWORD PTR [edi+eiz*2],0xaa3e23ab
  418f39:	imul   edi,ecx,0xffffffd7
  418f3c:	je     0x418ec3
  418f3e:	add    DWORD PTR [eax-0x3c69f6ca],edi
  418f44:	lea    edx,[esi-0x6d]
  418f47:	push   ecx
  418f48:	or     dh,BYTE PTR [edi-0x643b2101]
  418f4e:	dec    ebp
  418f4f:	pop    ebx
  418f50:	sub    eax,0x21d987f
  418f55:	fucomp st(0)
  418f57:	cmp    esp,edi
  418f59:	aaa    
  418f5a:	jp     0x418f1c
  418f5c:	out    0xc7,al
  418f5e:	aaa    
  418f5f:	daa    
  418f60:	xlat   BYTE PTR ds:[ebx]
  418f61:	lods   eax,DWORD PTR ds:[esi]
  418f62:	ins    DWORD PTR es:[edi],dx
  418f63:	mov    ds:0xd34d6c19,al
  418f68:	hlt    
  418f69:	or     ch,bl
  418f6b:	(bad)  
  418f6c:	xchg   edi,eax
  418f6d:	xchg   DWORD PTR [eax-0xb],esp
  418f70:	ins    BYTE PTR es:[edi],dx
  418f71:	mov    ebp,0x56c9744
  418f76:	pop    ecx
  418f77:	clc    
  418f78:	xor    al,0xb5
  418f7a:	pop    es
  418f7b:	adc    DWORD PTR ds:0x17afabc1,eax
  418f81:	gs or  DWORD PTR cs:[esi],esp
  418f85:	test   esi,ebp
  418f87:	or     bh,BYTE PTR [eax-0x3b]
  418f8a:	push   0x7c
  418f8c:	fstp   TBYTE PTR [ebp+0x12a2590d]
  418f92:	fcomp  QWORD PTR [ebx+edi*2]
  418f95:	(bad)  [ebx]
  418f97:	mov    esi,0x4bfc590
  418f9c:	in     eax,0xf2
  418f9e:	xor    al,0x96
  418fa0:	sub    ah,al
  418fa2:	(bad)  
  418fa3:	jle    0x418f9c
  418fa5:	and    ebp,esp
  418fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fa8:	out    dx,eax
  418fa9:	cld    
  418faa:	mov    ch,0x61
  418fac:	xchg   esi,eax
  418fad:	ror    esi,0x5d
  418fb0:	in     eax,0x2b
  418fb2:	adc    DWORD PTR [ecx-0x40],esp
  418fb5:	cld    
  418fb6:	(bad)  
  418fb7:	sar    DWORD PTR [edi+0x37],1
  418fba:	lock or al,0xc1
  418fbd:	test   al,0xa7
  418fbf:	fisub  WORD PTR [ecx]
  418fc1:	mov    al,ds:0x8177573a
  418fc6:	repnz sub cl,BYTE PTR [ecx]
  418fc9:	(bad)  
  418fcb:	in     al,dx
  418fcc:	mov    edi,0xc6006e3d
  418fd1:	inc    ebp
  418fd2:	popf   
  418fd3:	mov    esp,0x54feb6b7
  418fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fd9:	xor    DWORD PTR [ecx+0x43bdd6e0],ecx
  418fdf:	cmp    edx,DWORD PTR [edi-0x7fe7216]
  418fe5:	xchg   BYTE PTR [eax],bh
  418fe7:	nop
  418fe8:	jno    0x418fb2
  418fea:	fidivr DWORD PTR [ebx-0x3e4f8d6f]
  418ff0:	fidivr WORD PTR [esi*4+0x113ec0a3]
  418ff7:	mov    DWORD PTR [edx],ecx
  418ff9:	daa    
  418ffa:	sub    edx,DWORD PTR [edi]
  418ffc:	dec    esi
  418ffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ffe:	or     al,0x43
  419000:	cmp    BYTE PTR [ebx+0x71],al
  419003:	clc    
  419004:	xor    edx,esi
  419006:	pop    ebx
  419007:	test   eax,0x9451c6ad
  41900c:	mov    ds:0xa73038c,eax
  419011:	mov    ecx,0x8e5fce0c
  419016:	add    eax,0xf62d4e81
  41901b:	cli    
  41901c:	cs mov edx,0xca6da9e3
  419022:	scas   eax,DWORD PTR es:[edi]
  419023:	cmp    bl,BYTE PTR [eax+0x616fca1]
  419029:	add    DWORD PTR [edx+0x112bbe18],ebp
  41902f:	push   eax
  419030:	cmc    
  419031:	out    dx,al
  419032:	mov    cl,0x11
  419034:	mov    bl,0x34
  419036:	mov    ds:0x30526ac3,eax
  41903b:	push   edx
  41903c:	push   ecx
  41903d:	xlat   BYTE PTR ds:[ebx]
  41903e:	mov    bl,0xe4
  419040:	mov    edx,DWORD PTR ds:0x6dd510ba
  419046:	or     BYTE PTR [esi-0x729d414c],ah
  41904c:	mwait  
  41904f:	and    BYTE PTR [edi],dh
  419051:	inc    esp
  419052:	xor    BYTE PTR [ecx+ebx*8+0x76],0x1a
  419057:	test   al,0xea
  419059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41905a:	or     DWORD PTR [edi-0x6b],eax
  41905d:	mov    esi,0x4b62ea00
  419062:	repnz es mov ebp,0x822ecc6e
  419069:	xchg   DWORD PTR [ecx+edx*8+0x144a4535],ebp
  419070:	mov    ch,0xfb
  419072:	jecxz  0x4190d7
  419074:	jae    0x419011
  419076:	shl    BYTE PTR [esp+ebx*1-0x7a4e8ced],cl
  41907d:	mov    edi,0x9741f033
  419082:	adc    al,0x88
  419084:	pushf  
  419085:	test   DWORD PTR [ebp-0x69],ebx
  419088:	jo     0x419058
  41908a:	push   esi
  41908b:	fisttp DWORD PTR [esi]
  41908d:	xchg   ecx,eax
  41908e:	call   0x60494dcc
  419093:	cmp    eax,0xc104d5ef
  419098:	sbb    bl,bh
  41909a:	mov    ebx,0x875794e9
  41909f:	nop
  4190a0:	mov    dh,0x27
  4190a2:	pusha  
  4190a3:	daa    
  4190a4:	jno    0x4190ab
  4190a6:	cmp    eax,0xd9afcac4
  4190ab:	das    
  4190ac:	mov    gs:0xed4d1f0e,eax
  4190b2:	sbb    eax,0xa589459a
  4190b8:	mov    ch,0x15
  4190ba:	lahf   
  4190bb:	cwde   
  4190bc:	(bad)  
  4190bd:	out    dx,al
  4190be:	jle    0x4190ad
  4190c0:	xlat   BYTE PTR ds:[ebx]
  4190c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190c2:	mov    esp,0xfe59d7fe
  4190c7:	ds jmp 0xfe5f:0xd0aee93f
  4190cf:	sub    BYTE PTR [ecx-0x1f7ec23f],dh
  4190d5:	loop   0x419104
  4190d7:	mov    esi,0x564715b5
  4190dc:	push   edx
  4190dd:	nop
  4190de:	pop    ebx
  4190df:	jge    0x4190d0
  4190e1:	loope  0x4190b4
  4190e3:	mov    bh,0xaa
  4190e5:	jbe    0x4190be
  4190e7:	fmul   st(1),st
  4190e9:	int3   
  4190ea:	xor    cl,cl
  4190ec:	push   ss
  4190ed:	push   esi
  4190ee:	push   cs
  4190ef:	call   0x7415af53
  4190f4:	aad    0xe5
  4190f6:	dec    ecx
  4190f7:	cmp    cl,cl
  4190f9:	and    eax,0x86130610
  4190fe:	pusha  
  4190ff:	std    
  419100:	pop    edx
  419101:	jle    0x4190ef
  419103:	jmp    0x419150
  419105:	lods   eax,DWORD PTR ds:[esi]
  419106:	pusha  
  419107:	dec    esp
  419108:	popa   
  419109:	arpl   WORD PTR [eax],sp
  41910b:	test   al,0x21
  41910d:	sbb    al,ch
  41910f:	ds push ss
  419111:	push   cs
  419112:	retf   0x374c
  419115:	and    al,BYTE PTR [ebp-0x23]
  419118:	jne    0x41911b
  41911a:	mov    eax,DWORD PTR [esi+0x27]
  41911d:	inc    ebp
  41911e:	inc    edi
  41911f:	repnz sub al,0x99
  419122:	push   cs
  419123:	retf   0xacae
  419126:	sti    
  419127:	mov    al,0xed
  419129:	mov    ch,BYTE PTR [eax]
  41912b:	test   eax,0x39940c58
  419130:	lahf   
  419131:	arpl   WORD PTR [eax+0x3882bb9c],si
  419137:	push   esp
  419138:	add    edi,DWORD PTR [ebx+0x4b37bf]
  41913e:	mov    ebp,DWORD PTR [edi]
  419140:	push   0x350dd7c3
  419145:	leave  
  419146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419147:	sbb    eax,0x25321153
  41914c:	adc    cl,BYTE PTR [ebx-0x2aec68e9]
  419152:	pop    eax
  419153:	leave  
  419154:	add    al,BYTE PTR [ebx+eax*8]
  419157:	ret    0x8fc9
  41915a:	cld    
  41915b:	lods   al,BYTE PTR ds:[esi]
  41915c:	mov    ebp,0xb63a763a
  419161:	not    BYTE PTR ds:0x1df015da
  419167:	add    DWORD PTR [edx-0x1a49762f],esi
  41916d:	enter  0x1ee0,0x5b
  419171:	dec    esp
  419172:	or     BYTE PTR [eax+0x23],ch
  419175:	mov    dh,0x7c
  419177:	gs xor al,0x23
  41917a:	loopne 0x419155
  41917c:	(bad)  
  41917d:	or     ebp,DWORD PTR [ecx]
  41917f:	dec    ecx
  419180:	aaa    
  419181:	sbb    DWORD PTR [ebp+esi*8+0x49],0x36
  419186:	ud0    edi,DWORD PTR [edx-0x70]
  41918a:	out    dx,al
  41918b:	les    edx,FWORD PTR [esi+esi*8+0x6565003]
  419192:	call   0x63cd5921
  419197:	(bad)  
  419199:	add    al,0x98
  41919b:	call   0x4553489
  4191a0:	sub    esp,DWORD PTR [esi+0x6fac805a]
  4191a6:	sub    edi,ecx
  4191a8:	(bad)  
  4191a9:	dec    esp
  4191aa:	cld    
  4191ab:	add    eax,0x8663374f
  4191b0:	pop    esp
  4191b1:	je     0x4191be
  4191b3:	cmp    eax,0x7993de6a
  4191b8:	cld    
  4191b9:	popf   
  4191ba:	pop    ebx
  4191bb:	sub    dl,BYTE PTR [edi-0x2381a63d]
  4191c1:	inc    edi
  4191c2:	mov    DWORD PTR [edx+0x78b031ef],esi
  4191c8:	push   eax
  4191c9:	data16 mov bl,0x69
  4191cc:	xchg   ebp,eax
  4191cd:	fsubr  QWORD PTR [edx-0x3f]
  4191d0:	(bad)  
  4191d1:	xchg   esp,eax
  4191d2:	scas   eax,DWORD PTR es:[edi]
  4191d3:	into   
  4191d4:	push   0xffffffa5
  4191d6:	and    al,0xd0
  4191d8:	mov    edi,0xd94273a4
  4191dd:	ins    BYTE PTR es:[edi],dx
  4191de:	shufps xmm0,XMMWORD PTR [ecx],0x6b
  4191e2:	imul   ebx,esp,0xa1e9357e
  4191e8:	rcl    BYTE PTR [ecx+esi*4],0xf3
  4191ec:	dec    ecx
  4191ed:	sub    dl,BYTE PTR [edi+0x46]
  4191f0:	pop    esi
  4191f1:	xchg   ebx,eax
  4191f2:	ss dec edi
  4191f4:	mov    fs,edx
  4191f6:	inc    DWORD PTR [ecx+0x1c]
  4191f9:	push   edi
  4191fa:	cmp    esp,ecx
  4191fc:	repz in al,dx
  4191fe:	dec    eax
  4191ff:	dec    ebp
  419200:	sbb    eax,0xdc70eeeb
  419205:	mov    edi,?
  419207:	lock (bad) 
  419209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41920a:	aad    0xe4
  41920c:	and    ecx,DWORD PTR [ebx]
  41920e:	je     0x419257
  419210:	imul   edx,DWORD PTR [ebp+ebx*2-0x7a7a0ba8],0x3b7ea5f3
  41921b:	dec    esp
  41921c:	unpckhps xmm1,XMMWORD PTR [edi-0x5a]
  419220:	lods   eax,DWORD PTR ds:[esi]
  419221:	sub    DWORD PTR [edi-0x56],edi
  419224:	pop    edx
  419225:	add    DWORD PTR [esi+0x4ff68700],ecx
  41922b:	sub    BYTE PTR [ebx+0x2efe7df0],al
  419231:	add    ebp,esi
  419233:	mov    cs,WORD PTR [ebp-0x7dd2b6a6]
  419239:	(bad)  
  41923a:	cmp    edi,DWORD PTR [ecx-0x47]
  41923d:	aaa    
  41923e:	in     al,dx
  41923f:	or     eax,0xe05260f4
  419244:	mov    cl,ch
  419246:	adc    al,0x3e
  419248:	stos   DWORD PTR es:[edi],eax
  419249:	and    BYTE PTR [esp+eiz*2+0xa],cl
  41924d:	sub    esi,edx
  41924f:	jb     0x41924a
  419251:	sar    eax,1
  419253:	sub    BYTE PTR [ebx],cl
  419255:	imul   edx,ecx,0x6d10953d
  41925b:	mov    al,ds:0x634d02c8
  419260:	jle    0x4192d3
  419262:	sbb    al,BYTE PTR [eax+0x2a]
  419265:	jbe    0x41924e
  419267:	pop    eax
  419268:	xor    ecx,DWORD PTR [ecx+0x26]
  41926b:	add    eax,0x2a57d5b6
  419270:	add    bh,ch
  419272:	mov    eax,0x88a92900
  419277:	or     DWORD PTR [edi],edi
  419279:	imul   esp,DWORD PTR [edx],0x89f9915a
  41927f:	cmp    DWORD PTR [esi-0x5f],ecx
  419282:	adc    al,0x34
  419284:	push   cs
  419285:	shl    DWORD PTR [edx],cl
  419287:	adc    bl,BYTE PTR gs:[ecx]
  41928a:	dec    ecx
  41928b:	cli    
  41928c:	mov    WORD PTR [esi-0x7637ccd6],ss
  419292:	dec    ebp
  419293:	or     BYTE PTR [ebx+0x558b084d],cl
  419299:	test   al,0x81
  41929b:	shl    edx,0x8
  41929e:	push   edi
  41929f:	add    BYTE PTR [edi],cl
  4192a1:	scas   eax,DWORD PTR es:[edi]
  4192a2:	retf   0x4d89
  4192a5:	test   al,0x8b
  4192a7:	dec    ebp
  4192a8:	or     BYTE PTR [ebx-0x3e7e53ab],cl
  4192ae:	pushf  
  4192af:	clc    
  4192b0:	add    BYTE PTR fs:[ebx],cl
  4192b3:	retf   0x4d89
  4192b6:	lods   al,BYTE PTR ds:[esi]
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0x68
  4192cc:	cmc    
  4192cd:	lahf   
  4192ce:	frstor [edi]
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx-0x6c2681e],0x4e
  4192dc:	out    dx,eax
  4192dd:	test   eax,0xf1fddf39
  4192e2:	outs   dx,DWORD PTR ds:[esi]
  4192e3:	cli    
  4192e4:	inc    ecx
  4192e5:	adc    eax,0x1d8fd0dd
  4192ea:	jge    0x4192b1
  4192ec:	popf   
  4192ed:	pop    ecx
  4192ee:	inc    edi
  4192ef:	pop    ds
  4192f0:	ret    0x6858
  4192f3:	jnp    0x4192b7
  4192f5:	push   cs
  4192f6:	add    edi,DWORD PTR [edi+0x3a7f0495]
  4192fc:	in     al,dx
  4192fd:	repz out dx,al
  4192ff:	lods   al,BYTE PTR ds:[esi]
  419300:	mov    ebp,0x2199e0b6
  419305:	dec    edi
  419306:	and    dl,BYTE PTR [edi]
  419308:	pop    edi
  419309:	cmc    
  41930a:	cmp    BYTE PTR [eax-0x37122ffc],al
  419310:	lods   al,BYTE PTR ds:[esi]
  419311:	pop    ecx
  419312:	loope  0x41933b
  419314:	repnz aaa 
  419316:	fadd   QWORD PTR [ebx]
  419318:	mov    ds:0x3a98dce1,al
  41931d:	ret    0xbe24
  419320:	xor    cl,BYTE PTR [ebx-0x541f0018]
  419326:	push   ebx
  419327:	mov    ecx,0xb40726af
  41932c:	sbb    eax,0x8549f470
  419331:	push   ds
  419332:	pop    eax
  419333:	mov    bh,0x24
  419335:	mov    eax,0x1a6a94b6
  41933a:	inc    BYTE PTR [ebp-0x71f15d27]
  419340:	pop    es
  419341:	outs   dx,BYTE PTR ds:[esi]
  419342:	lock adc ah,BYTE PTR [edi+0x2c]
  419346:	xchg   BYTE PTR [edx],bl
  419348:	stos   BYTE PTR es:[edi],al
  419349:	sar    DWORD PTR [esp+ebp*1],cl
  41934c:	adc    dl,0x18
  41934f:	shl    DWORD PTR [eax+0x5a97ed4e],cl
  419355:	mov    esp,cr5
  419358:	call   0x1e34:0x4c3d5e55
  41935f:	or     edi,DWORD PTR [edx+0x6ce6cbd]
  419365:	jb     0x4193a3
  419367:	cmp    eax,0x42440b8c
  41936c:	test   eax,0x12116cb6
  419371:	cmp    BYTE PTR [ecx+0x9],ch
  419374:	ss icebp 
  419376:	mov    ah,0xe8
  419378:	call   FWORD PTR [eax-0x79]
  41937b:	jns    0x4192fd
  41937d:	call   FWORD PTR [edx]
  41937f:	mov    ds:0xfd07a88d,eax
  419384:	test   BYTE PTR [ebx],al
  419386:	fcom   QWORD PTR [esp+esi*8+0x30]
  41938a:	push   es
  41938b:	cmp    al,0x62
  41938e:	test   ecx,eax
  419390:	xor    DWORD PTR [edx],esi
  419392:	int    0x7f
  419394:	mov    edi,0xba5d944b
  419399:	ret    0x1a51
  41939c:	ins    BYTE PTR es:[edi],dx
  41939d:	push   esi
  41939e:	in     eax,0x1a
  4193a0:	out    dx,eax
  4193a1:	hlt    
  4193a2:	add    DWORD PTR [esi-0x68960204],esi
  4193a8:	ins    BYTE PTR es:[edi],dx
  4193a9:	jae    0x41939d
  4193ab:	fwait
  4193ac:	cdq    
  4193ad:	cmp    al,0x72
  4193af:	clc    
  4193b0:	ins    BYTE PTR es:[edi],dx
  4193b1:	sbb    eax,0xebf1e05b
  4193b6:	arpl   WORD PTR [edx+0x42],ax
  4193b9:	ret    0xcfc5
  4193bc:	loope  0x419398
  4193be:	dec    esp
  4193bf:	pop    ds
  4193c0:	das    
  4193c1:	test   DWORD PTR [ecx+edx*2+0x58],eax
  4193c5:	push   eax
  4193c6:	xchg   al,dl
  4193c8:	sub    ecx,esp
  4193ca:	sbb    ah,BYTE PTR [esi]
  4193cc:	mov    eax,0xdfc2fd9a
  4193d1:	adc    DWORD PTR ds:0x37025c0b,eax
  4193d7:	or     dh,bh
  4193d9:	int3   
  4193da:	dec    esp
  4193db:	addr16 push edx
  4193dd:	test   al,0xb6
  4193df:	push   cs
  4193e0:	inc    ecx
  4193e1:	scas   eax,DWORD PTR es:[edi]
  4193e2:	aas    
  4193e3:	call   FWORD PTR [ecx]
  4193e5:	mov    DWORD PTR [ebp+0x2a],esp
  4193e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193e9:	fisub  WORD PTR [edi+eax*2]
  4193ec:	xor    al,0x5
  4193ee:	sar    DWORD PTR [ebx-0x5b],0xa9
  4193f2:	pop    esi
  4193f3:	add    al,0xd5
  4193f5:	push   edi
  4193f6:	js     0x41938e
  4193f8:	xor    DWORD PTR [esi-0x54f37fd3],edx
  4193fe:	ss sti 
  419400:	test   ebp,esi
  419402:	push   ebx
  419403:	in     al,0xf
  419405:	and    al,0x60
  419407:	(bad)  
  419408:	sub    ecx,DWORD PTR [eax-0x5b]
  41940b:	adc    BYTE PTR [ecx],0x39
  41940e:	adc    al,BYTE PTR [ecx+0x32]
  419411:	jg     0x419399
  419413:	mov    edx,ds
  419415:	push   edx
  419416:	movaps xmm2,XMMWORD PTR [edx]
  419419:	sub    cl,BYTE PTR [ecx-0x3b956b4f]
  41941f:	xor    bh,ch
  419421:	push   0x85296cc4
  419426:	and    ebp,DWORD PTR [edi+0x4357e001]
  41942c:	inc    eax
  41942d:	dec    edx
  41942e:	out    dx,eax
  41942f:	ret    0x7e89
  419432:	or     al,0x75
  419434:	sbb    DWORD PTR [ebx],edx
  419436:	xor    DWORD PTR [edi],eax
  419438:	mov    ecx,0x316771df
  41943d:	enter  0xb3c0,0xc7
  419441:	enter  0x637f,0xe7
  419445:	or     ah,BYTE PTR [edi-0x3a26e719]
  41944b:	bound  ebp,QWORD PTR [ebp-0x72]
  41944e:	idiv   DWORD PTR [edx]
  419450:	and    al,0x53
  419452:	(bad)  
  419453:	xchg   edx,eax
  419454:	sub    DWORD PTR [ecx-0x5],0xa98d85f1
  41945b:	mov    al,0x58
  41945d:	pusha  
  41945e:	and    ecx,DWORD PTR [esi]
  419460:	adc    bl,ch
  419462:	cmp    DWORD PTR [eax+0x28ee36be],ebx
  419468:	(bad)  
  419469:	std    
  41946a:	stc    
  41946b:	faddp  st(6),st
  41946d:	in     al,0xd2
  41946f:	fstp   TBYTE PTR [ebx+esi*2+0x64b4bef0]
  419476:	(bad)  
  419477:	or     bh,dl
  419479:	cdq    
  41947a:	test   al,0xbc
  41947c:	and    esi,edi
  41947e:	je     0x419445
  419480:	sub    edx,ecx
  419482:	jae    0x41947e
  419484:	dec    edx
  419485:	adc    edi,edx
  419487:	adc    edi,esi
  419489:	and    al,0xa4
  41948b:	sub    eax,0x3485c271
  419490:	cld    
  419491:	xor    al,0xd8
  419493:	(bad)  
  419494:	push   esp
  419495:	sets   BYTE PTR [esi-0xfa89bb9]
  41949c:	and    al,0x10
  41949e:	or     DWORD PTR [edx],ecx
  4194a0:	xlat   BYTE PTR ds:[ebx]
  4194a1:	int    0x4a
  4194a3:	xchg   ecx,eax
  4194a4:	adc    eax,0x558006b9
  4194a9:	inc    eax
  4194aa:	and    ah,BYTE PTR [esi]
  4194ac:	push   cs
  4194ad:	cmp    DWORD PTR [edx+0x18],0x61
  4194b1:	loope  0x41952b
  4194b3:	inc    ecx
  4194b4:	mov    ds:0x2efc95db,eax
  4194b9:	pop    esp
  4194ba:	cld    
  4194bb:	xor    bh,BYTE PTR [edx+0x6863d9cd]
  4194c1:	adc    DWORD PTR [edi],0x811965bf
  4194c7:	xchg   ebx,eax
  4194c8:	popa   
  4194c9:	fiadd  WORD PTR [ebp-0x48]
  4194cc:	add    al,0x68
  4194ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194cf:	push   esp
  4194d0:	inc    eax
  4194d1:	repnz pop ecx
  4194d3:	out    0x5,al
  4194d5:	sub    BYTE PTR [eax],dh
  4194d7:	sub    bl,BYTE PTR [ebx-0x58c03d32]
  4194dd:	in     al,0x75
  4194df:	pop    esp
  4194e0:	mov    edi,0xad192737
  4194e5:	or     edx,DWORD PTR [edi]
  4194e7:	pop    eax
  4194e8:	mov    al,ds:0x14119b6a
  4194ed:	push   eax
  4194ee:	or     BYTE PTR [esp+ebp*4],al
  4194f1:	loope  0x4194bf
  4194f3:	dec    edi
  4194f4:	mov    ebp,0xb87504ce
  4194f9:	cmc    
  4194fa:	mov    bl,BYTE PTR [ebx-0x52]
  4194fd:	cmp    bl,BYTE PTR [esi+0x11da92c5]
  419503:	fwait
  419504:	push   ebx
  419505:	inc    esp
  419506:	or     dh,dh
  419508:	loope  0x41956d
  41950a:	push   ebp
  41950b:	or     edi,DWORD PTR [eax+0x4a]
  41950e:	ror    BYTE PTR [ebp+0x3ffc7c73],1
  419514:	push   edi
  419515:	repz inc edx
  419517:	and    BYTE PTR [ebx],cl
  419519:	mov    fs,WORD PTR [edi+edi*4]
  41951c:	aaa    
  41951d:	pop    esp
  41951e:	pop    ebx
  41951f:	data16 int3 
  419521:	mov    ch,0xb9
  419523:	sbb    dh,BYTE PTR [eax+0x18528cec]
  419529:	mov    dl,0xaa
  41952b:	sbb    eax,0x1f1469bd
  419530:	push   esi
  419531:	xchg   ebp,eax
  419532:	iret   
  419533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419534:	ins    BYTE PTR es:[edi],dx
  419535:	and    eax,0xab75eff2
  41953a:	sti    
  41953b:	ins    DWORD PTR es:[edi],dx
  41953c:	mov    edi,0xbce1bad8
  419541:	cld    
  419542:	inc    edi
  419543:	and    al,0xb0
  419545:	sub    al,0x8a
  419547:	sub    eax,0x4eb70160
  41954c:	push   ebp
  41954d:	inc    edi
  41954e:	cmp    al,0x4e
  419550:	data16 icebp 
  419552:	out    dx,eax
  419553:	mov    esi,DWORD PTR [ebp-0x46]
  419556:	cs out dx,al
  419558:	out    dx,eax
  419559:	ins    BYTE PTR es:[edi],dx
  41955a:	sbb    BYTE PTR [ecx],0x3
  41955d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955e:	icebp  
  41955f:	retf   
  419560:	pop    ds
  419561:	(bad)  
  419562:	jbe    0x419519
  419564:	gs aas 
  419566:	cmp    al,0x85
  419568:	aad    0xa6
  41956a:	lds    esi,FWORD PTR [esi-0x3b586e15]
  419570:	clc    
  419571:	jbe    0x4195e1
  419573:	aam    0xf4
  419575:	mov    al,0xa4
  419577:	sub    edi,DWORD PTR [edx]
  419579:	sahf   
  41957a:	call   DWORD PTR [edi]
  41957c:	sub    ebx,DWORD PTR [edx+eiz*1+0x7cbfb37b]
  419583:	inc    ecx
  419584:	test   DWORD PTR [ecx],0xeb9db8e0
  41958a:	cmp    DWORD PTR ds:0xd5b1fb84,0x39
  419591:	pop    edx
  419592:	ret    0x19ae
  419595:	sti    
  419596:	(bad)  
  419597:	arpl   WORD PTR [eax-0x573458da],ax
  41959d:	mov    bh,0x51
  41959f:	cmp    al,0x52
  4195a1:	jp     0x41955c
  4195a3:	mov    ah,0x89
  4195a5:	push   esp
  4195a6:	jecxz  0x419611
  4195a8:	pop    ebp
  4195a9:	mov    DWORD PTR [ecx+0x4537b17f],ecx
  4195af:	pop    eax
  4195b0:	jbe    0x41957b
  4195b2:	pop    ss
  4195b3:	pop    esi
  4195b4:	cs mov dl,0x17
  4195b7:	ret    0x7f68
  4195ba:	shl    BYTE PTR [ebp+0x7a],0xd9
  4195be:	cmp    esp,edx
  4195c0:	mov    ebx,ecx
  4195c2:	cmp    ebx,0x586d35b5
  4195c8:	xor    BYTE PTR [edx],0xdd
  4195cb:	mov    ah,0x90
  4195cd:	aas    
  4195ce:	ins    DWORD PTR es:[edi],dx
  4195cf:	hlt    
  4195d0:	mov    ecx,0x1b40b595
  4195d5:	nop
  4195d6:	mov    eax,fs:0x80104e44
  4195dc:	aad    0xa2
  4195de:	sbb    ecx,edi
  4195e0:	fist   DWORD PTR [eax+0x5e]
  4195e3:	adc    eax,0x447b381e
  4195e8:	out    0x90,al
  4195ea:	push   ss
  4195eb:	mov    esp,es
  4195ed:	clc    
  4195ee:	in     al,dx
  4195ef:	push   esi
  4195f0:	fimul  DWORD PTR [edx]
  4195f2:	fwait
  4195f3:	inc    edx
  4195f4:	xlat   BYTE PTR ds:[ebx]
  4195f5:	sub    eax,esp
  4195f7:	and    dh,BYTE PTR ds:0xc24a8789
  4195fd:	sahf   
  4195fe:	inc    edi
  4195ff:	jg     0x4195db
  419601:	(bad)
  419604:	inc    ecx
  419605:	xchg   esi,eax
  419606:	jae    0x419588
  419608:	les    edi,FWORD PTR [ecx-0x5e]
  41960b:	retf   0x5175
  41960e:	sub    al,0x57
  419610:	lds    esi,FWORD PTR [edx]
  419612:	cmp    BYTE PTR [ecx],cl
  419614:	shl    ecx,cl
  419616:	mov    cl,BYTE PTR [esi+0x6591376f]
  41961c:	dec    eax
  41961d:	repz popa 
  41961f:	sub    bl,0x62
  419622:	std    
  419623:	hlt    
  419624:	mov    esp,0x2037d96a
  419629:	xchg   ebp,eax
  41962a:	les    esp,FWORD PTR [ebp-0x6c]
  41962d:	in     eax,dx
  41962e:	pop    DWORD PTR [edx]
  419630:	cmp    al,0x61
  419632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419633:	scas   eax,DWORD PTR es:[edi]
  419634:	dec    esi
  419635:	mov    esp,0xe306b53a
  41963a:	mov    esi,0x453fc959
  41963f:	cs sbb bh,ch
  419642:	sub    ecx,DWORD PTR [esi+ebx*8+0x7d310f51]
  419649:	in     eax,dx
  41964a:	jo     0x4195d6
  41964c:	loopne 0x4195fb
  41964e:	inc    ebp
  41964f:	xor    DWORD PTR [ecx+0x5f],edi
  419652:	mov    BYTE PTR [ebx-0x4f],0x5f
  419656:	aam    0x45
  419658:	jecxz  0x4195e8
  41965a:	dec    esp
  41965b:	cmp    ebp,DWORD PTR [edx-0x23]
  41965e:	les    esi,FWORD PTR [ebx-0x6c7875a]
  419664:	retf   
  419665:	vandnps xmm2,xmm2,XMMWORD PTR [esi-0x5badb37a]
  41966d:	mov    ebx,DWORD PTR [ebx]
  41966f:	rol    DWORD PTR [edx-0x3ce4a279],0xa3
  419676:	into   
  419677:	dec    ebx
  419678:	add    DWORD PTR [edi+0x2c],0xc1cff41d
  41967f:	push   esp
  419680:	xor    DWORD PTR [esi+0x9],edx
  419683:	sub    al,BYTE PTR [ecx-0x7a]
  419686:	sahf   
  419687:	jmp    0x249346b6
  41968c:	and    BYTE PTR [eax],ah
  41968e:	pop    edi
  41968f:	push   ss
  419690:	add    eax,0x2cf522f2
  419695:	ins    DWORD PTR es:[edi],dx
  419696:	out    dx,al
  419697:	mov    esp,0xc9f4c758
  41969c:	out    0x26,eax
  41969e:	and    esp,DWORD PTR [edi+0x11]
  4196a1:	mov    esp,0xdbc19fb
  4196a6:	ja     0x419674
  4196a8:	dec    eax
  4196a9:	out    dx,al
  4196aa:	cmp    BYTE PTR [ebx],bl
  4196ac:	idiv   DWORD PTR [ebx-0x5b]
  4196af:	adc    al,0x33
  4196b1:	dec    ecx
  4196b2:	xor    BYTE PTR [ebp+0x5b],cl
  4196b5:	arpl   si,ax
  4196b7:	(bad)  
  4196b8:	shl    DWORD PTR [esi+0x11],cl
  4196bb:	in     al,dx
  4196bc:	sub    al,0xe3
  4196be:	inc    esp
  4196bf:	push   cs
  4196c0:	mov    ebx,0xf219499a
  4196c5:	jns    0x419700
  4196c7:	fld    DWORD PTR [ecx-0x2]
  4196ca:	push   eax
  4196cb:	xchg   edx,eax
  4196cc:	cmp    ecx,DWORD PTR [esi]
  4196ce:	sbb    DWORD PTR [edx-0x22],eax
  4196d1:	add    DWORD PTR [ebx+ecx*1],esi
  4196d4:	inc    edi
  4196d5:	push   eax
  4196d6:	in     al,dx
  4196d7:	dec    ecx
  4196d8:	test   eax,0x8acd575a
  4196dd:	out    dx,al
  4196de:	dec    ecx
  4196df:	jns    0x4196bd
  4196e1:	ins    BYTE PTR es:[edi],dx
  4196e2:	repnz cmc 
  4196e4:	add    bh,ah
  4196e6:	hlt    
  4196e7:	mov    eax,ds:0x57cafb22
  4196ec:	aam    0x7f
  4196ee:	lea    eax,[edx+ebp*1]
  4196f1:	mov    al,0xdd
  4196f3:	inc    edi
  4196f4:	mov    WORD PTR [eax+edx*4+0x51],?
  4196f8:	push   ecx
  4196f9:	dec    ebx
  4196fa:	inc    edi
  4196fb:	jp     0x419690
  4196fd:	pop    esp
  4196fe:	ss push esp
  419700:	mov    ds:0xb5f953a8,eax
  419705:	xor    eax,0x50fbbe8
  41970a:	inc    ebx
  41970b:	add    ch,BYTE PTR [ecx+0x7268d9e5]
  419711:	adc    DWORD PTR [ebp-0x49],ecx
  419714:	inc    ebx
  419715:	push   es
  419716:	pop    edx
  419717:	jbe    0x4196ab
  419719:	push   0x35fdedd7
  41971e:	adc    esp,DWORD PTR [eax]
  419720:	push   ss
  419721:	addr16 cwde 
  419723:	inc    BYTE PTR [ebx-0x1e81c09d]
  419729:	or     BYTE PTR [edx-0x7e],ch
  41972c:	or     ch,dh
  41972e:	loope  0x4196f5
  419730:	cmp    bl,ah
  419732:	xor    ah,BYTE PTR [ebp+esi*4-0x36]
  419736:	ds adc eax,0xf939b527
  41973c:	cld    
  41973d:	pop    ebx
  41973e:	retf   
  41973f:	arpl   WORD PTR [edi+0x14],si
  419742:	add    DWORD PTR [edi],eax
  419744:	div    BYTE PTR [eax]
  419746:	sbb    al,0x99
  419748:	xor    al,0x78
  41974a:	sar    BYTE PTR [ebx-0x65],cl
  41974d:	or     al,0xd8
  41974f:	pop    ecx
  419750:	cmp    DWORD PTR [eax],edi
  419752:	jmp    0x8827:0x5e4cad3d
  419759:	cmp    bh,al
  41975b:	and    bl,BYTE PTR [eax-0xf673ddd]
  419761:	sti    
  419762:	outs   dx,DWORD PTR ds:[esi]
  419763:	push   edx
  419764:	pop    ebx
  419765:	inc    edi
  419766:	fidiv  DWORD PTR [ecx*1-0x2f4eb52a]
  41976d:	out    dx,eax
  41976e:	adc    al,0xd5
  419770:	or     al,0x45
  419772:	adc    bl,BYTE PTR [eax-0x7c]
  419775:	sbb    ebx,0x2fb516bb
  41977b:	pop    edi
  41977c:	lods   eax,DWORD PTR ds:[esi]
  41977d:	mov    ebp,0xd3b22bd
  419782:	mov    eax,0x9074455d
  419787:	in     al,dx
  419788:	dec    ecx
  419789:	adc    dh,cl
  41978b:	sahf   
  41978c:	ins    DWORD PTR es:[edi],dx
  41978d:	mov    bl,0xb2
  41978f:	cld    
  419790:	mov    esp,0x33190570
  419795:	sub    DWORD PTR ds:0xbe207ebe,0xffffff82
  41979c:	add    al,0x3d
  41979e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41979f:	push   ds
  4197a0:	aam    0x3d
  4197a2:	ss jl  0x419775
  4197a5:	sub    ebp,DWORD PTR [ebx]
  4197a7:	pop    ecx
  4197a8:	and    ch,bh
  4197aa:	adc    ah,BYTE PTR ds:0xe77f2792
  4197b0:	imul   edi,DWORD PTR [edi+0x3b97aea],0xffffffcd
  4197b7:	popf   
  4197b8:	imul   edx,ecx,0x33
  4197bb:	data16 sti 
  4197bd:	in     eax,0x73
  4197bf:	dec    eax
  4197c0:	jmp    0xe1b5:0x533e07e0
  4197c7:	mov    ecx,0xcb0561aa
  4197cc:	xor    al,BYTE PTR [ecx]
  4197ce:	retf   
  4197cf:	not    bh
  4197d1:	xor    BYTE PTR [ecx*8+0x12e2d07f],bl
  4197d8:	or     BYTE PTR [eax+0x1266a9d3],0x83
  4197df:	ror    eax,cl
  4197e1:	dec    ebp
  4197e2:	jmp    0x3445123a
  4197e7:	sbb    eax,0x46e3d664
  4197ec:	jne    0x41984a
  4197ee:	mov    esi,DWORD PTR [edx+0x33]
  4197f1:	cmp    DWORD PTR [ebx],esi
  4197f3:	cmp    eax,0x909fc60d
  4197f8:	adc    dh,ah
  4197fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197fb:	fs push ebp
  4197fd:	adc    BYTE PTR [edi+ebx*8-0x5413a1fe],dh
  419804:	mov    esi,0x9aafa4a
  419809:	shl    DWORD PTR [edx+0x75fdfbd9],0x49
  419810:	push   edx
  419811:	and    eax,0x8d602b5d
  419816:	ja     0x4197cf
  419818:	fcomp  QWORD PTR ds:[esi+0x4]
  41981c:	inc    edx
  41981d:	pop    esp
  41981e:	test   eax,0xc64ea7c0
  419823:	adc    al,0x80
  419825:	cdq    
  419826:	pop    edx
  419827:	(bad)  
  419828:	aad    0x36
  41982a:	leave  
  41982b:	jae    0x419863
  41982d:	and    al,0xf
  41982f:	popa   
  419830:	and    bl,BYTE PTR [eax+0x3adcac68]
  419836:	icebp  
  419837:	outs   dx,DWORD PTR ds:[esi]
  419838:	ror    BYTE PTR ds:0xe573c8a6,cl
  41983e:	mov    bh,0xe3
  419840:	jbe    0x419888
  419842:	test   DWORD PTR [edi+0x652146ec],0xbeeb38bc
  41984c:	sub    edx,DWORD PTR [ebx-0x16]
  41984f:	(bad)  
  419851:	in     al,dx
  419852:	stos   DWORD PTR es:[edi],eax
  419853:	sahf   
  419854:	out    dx,al
  419855:	dec    ebp
  419856:	test   edx,edx
  419858:	popa   
  419859:	push   ebp
  41985a:	push   ebx
  41985b:	imul   esp,esp,0x21
  41985e:	jae    0x41985c
  419860:	pop    es
  419861:	push   ds
  419862:	imul   esi,DWORD PTR [edi+0x582ca4b8],0x42abc413
  41986c:	and    eax,0xd361180f
  419871:	jge    0x4197f4
  419873:	fisub  DWORD PTR [ebx+0x68f4040c]
  419879:	sub    edx,DWORD PTR [eax]
  41987b:	or     al,0xa8
  41987d:	idiv   DWORD PTR [esi+0xbd7e4ba]
  419883:	jecxz  0x41984c
  419885:	cmp    eax,0xbf77794f
  41988a:	(bad)  
  41988b:	dec    ebp
  41988c:	fmulp  st(4),st
  41988e:	mov    bh,0x2a
  419890:	mov    esp,0xf5ab12db
  419895:	inc    ecx
  419896:	jns    0x419862
  419898:	adc    BYTE PTR [edx-0x2b],bl
  41989b:	pop    ebp
  41989c:	dec    edi
  41989d:	js     0x419882
  41989f:	jl     0x41985d
  4198a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198a2:	push   cs
  4198a3:	imul   eax,DWORD PTR [ecx+0x1e596724],0xfa096b86
  4198ad:	fiadd  DWORD PTR [ebx]
  4198af:	pop    ebx
  4198b0:	iret   
  4198b1:	es and edx,eax
  4198b4:	(bad)  
  4198b5:	les    eax,FWORD PTR [ebx-0x6b]
  4198b8:	je     0x41987a
  4198ba:	push   ebx
  4198bb:	call   0xa22a:0xa515d3b9
  4198c2:	xor    bh,BYTE PTR ds:[edx-0x54]
  4198c6:	push   ebp
  4198c7:	cdq    
  4198c8:	push   ebp
  4198c9:	add    edx,DWORD PTR [ebp-0x17309c51]
  4198cf:	push   ebp
  4198d0:	xchg   ebx,eax
  4198d1:	mov    bl,0xc8
  4198d3:	sub    bl,bl
  4198d5:	sbb    dh,BYTE PTR [ecx]
  4198d7:	mov    al,0x1c
  4198d9:	arpl   WORD PTR [eax+ebp*1-0x130307bb],dx
  4198e0:	ss inc ebx
  4198e2:	dec    edx
  4198e3:	adc    bh,BYTE PTR [edi+0x3b]
  4198e6:	and    al,0x90
  4198e8:	cmp    ecx,edx
  4198ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198eb:	xor    al,0x44
  4198ed:	jae    0x4198d0
  4198ef:	nop
  4198f0:	int    0xda
  4198f2:	mov    ebp,cs
  4198f4:	adc    DWORD PTR [ebx],esi
  4198f6:	add    bl,dl
  4198f8:	pop    esi
  4198f9:	fild   QWORD PTR [ecx+edi*8-0x28]
  4198fd:	popf   
  4198fe:	xchg   esi,eax
  4198ff:	scas   al,BYTE PTR es:[edi]
  419900:	fist   WORD PTR [esi+ebp*8+0x3da8a3a2]
  419907:	jno    0x419983
  419909:	add    cl,BYTE PTR [ebx+ebx*1]
  41990c:	push   esp
  41990d:	jb     0x41989b
  41990f:	xchg   DWORD PTR [edx+0x38983862],esi
  419915:	outs   dx,BYTE PTR ds:[esi]
  419916:	shr    BYTE PTR [ebx-0x2f],0xee
  41991a:	out    dx,al
  41991b:	fld    DWORD PTR [esi+0x5c2bc529]
  419921:	mov    ebx,0x2fa983c7
  419926:	xor    ebp,DWORD PTR [ecx]
  419928:	ja     0x4198b9
  41992a:	jp     0x419944
  41992c:	out    0xf8,eax
  41992e:	add    BYTE PTR [edi*4-0x7a6b7bda],ch
  419935:	and    DWORD PTR [edi+0x56292984],0xcec7cf4c
  41993f:	dec    ebx
  419940:	cwde   
  419941:	or     DWORD PTR [ecx+0x2bbe16b2],ecx
  419947:	cs jp  0x41998b
  41994a:	dec    ebp
  41994b:	cmp    esi,esp
  41994d:	cmp    dh,BYTE PTR [eax]
  41994f:	lea    edi,[ecx+0x493e2634]
  419955:	(bad)  
  419956:	test   al,0xa5
  419958:	sub    DWORD PTR [esi-0x38],esi
  41995b:	cdq    
  41995c:	push   eax
  41995d:	aam    0x53
  41995f:	or     esp,DWORD PTR [ebx]
  419961:	jmp    0xd2117e77
  419966:	pop    ds
  419967:	cwde   
  419968:	dec    ebp
  419969:	das    
  41996a:	cmp    DWORD PTR [eax-0x7a],eax
  41996d:	sets   BYTE PTR [ebx-0x2965e471]
  419974:	xchg   edx,eax
  419975:	mov    cs,ecx
  419977:	fsub   DWORD PTR [di]
  41997a:	push   esi
  41997b:	je     0x419912
  41997d:	pop    edx
  41997e:	not    DWORD PTR [ecx]
  419980:	inc    edx
  419981:	je     0x41994c
  419983:	out    dx,eax
  419984:	sbb    BYTE PTR [eax+0x17257df9],cl
  41998a:	fsubr  QWORD PTR [ebx]
  41998c:	mov    WORD PTR [ebx+eax*1-0x3],cs
  419990:	stos   DWORD PTR es:[edi],eax
  419991:	jns    0x419962
  419993:	xchg   edx,eax
  419994:	mov    ch,0xc2
  419996:	mov    bh,0xcd
  419998:	adc    BYTE PTR [edi+0x34eb2665],al
  41999e:	aad    0x7
  4199a0:	sbb    ch,dl
  4199a2:	or     dh,BYTE PTR [eax-0x63083752]
  4199a8:	ds push eax
  4199aa:	das    
  4199ab:	mov    al,BYTE PTR [ebx+ecx*1]
  4199ae:	retf   0x3b8a
  4199b1:	nop
  4199b2:	inc    eax
  4199b3:	repz imul ecx,ebx,0x2b4a60a1
  4199ba:	lahf   
  4199bb:	in     al,0x51
  4199bd:	pop    ebx
  4199be:	push   esp
  4199bf:	pop    DWORD PTR [ebx-0x2e]
  4199c2:	das    
  4199c3:	mov    ah,0xf4
  4199c5:	adc    eax,0x98ec2b20
  4199ca:	aas    
  4199cb:	in     al,dx
  4199cc:	adc    edi,DWORD PTR [ebx]
  4199ce:	(bad)  
  4199cf:	fs mov cl,0x89
  4199d2:	in     al,0x26
  4199d4:	shl    BYTE PTR [esi+esi*4],0x25
  4199d8:	push   esi
  4199d9:	les    ebp,FWORD PTR [esi+esi*1]
  4199dc:	repnz mov al,0x4d
  4199df:	call   0xf898d942
  4199e4:	jle    0x4199dc
  4199e6:	mov    WORD PTR [esi+0x35590950],?
  4199ec:	popf   
  4199ed:	shr    BYTE PTR [edi+0x69eb334b],1
  4199f3:	dec    eax
  4199f4:	mov    ah,0x81
  4199f6:	add    eax,0x5e6142bc
  4199fb:	and    bl,al
  4199fd:	and    BYTE PTR [edi+0x1f90d99a],cl
  419a03:	add    DWORD PTR [ecx-0x2a0e190b],0xc990e114
  419a0d:	(bad)  
  419a0e:	(bad)  
  419a0f:	adc    ebp,DWORD PTR [esi-0xd]
  419a12:	and    BYTE PTR [edi-0x776c4e12],dh
  419a18:	jl     0x419a68
  419a1a:	inc    ecx
  419a1b:	popf   
  419a1c:	or     edi,DWORD PTR [ebp-0x3d956a4e]
  419a22:	dec    esp
  419a23:	js     0x419a9b
  419a25:	retf   
  419a26:	jmp    0x4199c0
  419a28:	cli    
  419a29:	xchg   BYTE PTR [edi],bh
  419a2b:	sbb    bh,cl
  419a2d:	mov    BYTE PTR [eax],dl
  419a2f:	pop    ss
  419a30:	out    dx,eax
  419a31:	inc    ecx
  419a32:	xor    bh,BYTE PTR [eax+0x4b]
  419a35:	vpandn xmm7,xmm4,xmm3
  419a39:	in     al,dx
  419a3a:	leave  
  419a3b:	leave  
  419a3c:	sbb    ebx,DWORD PTR [eax+eax*2]
  419a3f:	(bad)  
  419a40:	out    dx,eax
  419a41:	push   esp
  419a42:	push   eax
  419a43:	push   eax
  419a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a45:	daa    
  419a46:	and    al,0xb5
  419a48:	push   esp
  419a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a4a:	repnz push ebx
  419a4c:	cmp    BYTE PTR [ebp+eax*1+0x63],bh
  419a50:	jno    0x419a68
  419a52:	xor    ebx,DWORD PTR [edi-0x8]
  419a55:	loop   0x4199e9
  419a57:	dec    ebp
  419a58:	jmp    0x2a22:0x8d487256
  419a5f:	(bad)  
  419a60:	stos   BYTE PTR es:[edi],al
  419a61:	cmp    esp,DWORD PTR [esp+esi*2+0x26]
  419a65:	ret    
  419a66:	imul   ebp,DWORD PTR [ebx],0x21
  419a69:	push   0x52
  419a6b:	push   eax
  419a6c:	mov    bl,0x35
  419a6e:	hlt    
  419a6f:	pop    ecx
  419a70:	out    0x15,eax
  419a72:	sbb    edi,esi
  419a74:	loopne 0x4199fc
  419a76:	cmp    eax,0x91c0b891
  419a7b:	xor    bl,0x1f
  419a7e:	or     BYTE PTR [ecx+0x46],ah
  419a81:	sbb    BYTE PTR [ecx],ah
  419a83:	inc    ebp
  419a84:	inc    edi
  419a85:	pop    esi
  419a86:	outs   dx,BYTE PTR ds:[esi]
  419a87:	xor    BYTE PTR [bp-0x15ae],dh
  419a8c:	push   edx
  419a8d:	bound  esp,QWORD PTR [eax+0x5c545c8d]
  419a93:	ss cwde 
  419a95:	xor    eax,0x9dc203fd
  419a9a:	bound  ebx,QWORD PTR [eax-0x201ba429]
  419aa0:	mov    ah,0x88
  419aa2:	rcl    DWORD PTR [edx],1
  419aa4:	push   ebp
  419aa5:	out    0x88,al
  419aa7:	adc    al,0x70
  419aa9:	xor    dl,BYTE PTR [edi+0x32]
  419aac:	cmp    al,bh
  419aae:	xor    eax,0x7a13fa0d
  419ab3:	mov    eax,ds:0x2fe531f9
  419ab8:	out    dx,eax
  419ab9:	psllq  mm5,QWORD PTR [eax+0x5d]
  419abd:	add    BYTE PTR [eax],0x30
  419ac0:	or     edi,ebx
  419ac2:	sbb    BYTE PTR [ecx-0x4f],dl
  419ac5:	div    dh
  419ac7:	sub    eax,DWORD PTR [ebx+0x670f8bdb]
  419acd:	and    edi,edi
  419acf:	pop    esi
  419ad0:	mov    ah,0xf4
  419ad2:	mov    ah,0xef
  419ad4:	shl    BYTE PTR [esp+ebp*2+0x7b848c27],cl
  419adb:	and    ah,BYTE PTR [ecx]
  419add:	sbb    DWORD PTR ds:0x7586629,edi
  419ae3:	ja     0x419ab6
  419ae5:	xchg   edi,eax
  419ae6:	dec    ecx
  419ae7:	sar    DWORD PTR [ecx+eiz*1+0x3],1
  419aeb:	inc    ecx
  419aec:	test   al,cl
  419aee:	add    DWORD PTR [edi-0x42],esi
  419af1:	retf   
  419af2:	retf   0x55f7
  419af5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  419af7:	repz push ecx
  419af9:	mov    ds:0xb58e05b3,eax
  419afe:	jbe    0x419b5c
  419b00:	jno    0x419b13
  419b02:	inc    esp
  419b03:	aas    
  419b04:	lods   eax,DWORD PTR ds:[esi]
  419b05:	arpl   WORD PTR [esi],ax
  419b07:	mov    cl,0xc3
  419b09:	or     DWORD PTR [edx],esp
  419b0b:	or     DWORD PTR [ebp+0x703322e9],0xffffffa0
  419b12:	or     al,0xe4
  419b14:	xchg   edi,eax
  419b15:	add    dh,BYTE PTR [eax+edx*4]
  419b18:	sbb    DWORD PTR [ebp-0x3d6d7d28],esp
  419b1e:	not    BYTE PTR [ebp+0x6cb03e72]
  419b24:	pop    ecx
  419b25:	sbb    al,BYTE PTR [esp+eax*4]
  419b28:	and    BYTE PTR [edx],al
  419b2a:	repz pop esi
  419b2c:	test   al,0x82
  419b2e:	inc    ebp
  419b2f:	aad    0x3f
  419b31:	popf   
  419b32:	popa   
  419b33:	add    eax,0xab72950c
  419b38:	sub    DWORD PTR [ecx+eax*2+0x65],esp
  419b3c:	inc    eax
  419b3d:	jnp    0x419b18
  419b3f:	out    dx,al
  419b40:	test   eax,0xcc1aa425
  419b45:	cdq    
  419b46:	(bad)  
  419b47:	pop    ecx
  419b48:	std    
  419b49:	into   
  419b4a:	push   cs
  419b4b:	add    eax,0x8da17837
  419b50:	mov    al,ds:0xb2c3f0db
  419b55:	and    al,0xd2
  419b57:	in     al,0x21
  419b59:	sbb    DWORD PTR [esp+eiz*2-0x3a],edx
  419b5d:	or     al,0x2a
  419b5f:	and    DWORD PTR [ebp-0x51],ecx
  419b62:	mov    edx,0x83661a33
  419b67:	push   ecx
  419b68:	inc    edi
  419b69:	(bad)  [ebx-0x4071c98b]
  419b6f:	call   0x7492:0xf0175deb
  419b76:	adc    DWORD PTR [ecx-0xd],esi
  419b79:	jle    0x419be1
  419b7b:	mov    ds:0x4dc372d,eax
  419b80:	sbb    al,0xde
  419b82:	seta   cl
  419b85:	mov    eax,ds:0x7dbb47df
  419b8a:	sub    ebp,DWORD PTR [esi]
  419b8c:	cmp    al,0x42
  419b8e:	mov    WORD PTR [edi+0x67008600],cs
  419b94:	sbb    ebp,DWORD PTR [ecx-0x8]
  419b97:	nop
  419b98:	pop    ds
  419b99:	jecxz  0x419b5a
  419b9b:	xor    edi,ecx
  419b9d:	lods   eax,DWORD PTR ds:[esi]
  419b9e:	mov    ebx,0xadaa535e
  419ba3:	ins    BYTE PTR es:[edi],dx
  419ba4:	dec    ecx
  419ba5:	cs jno 0x8315ee49
  419bac:	xor    esp,ebp
  419bae:	pop    ebp
  419baf:	test   BYTE PTR [ecx],0xbc
  419bb2:	ja     0x419b7b
  419bb4:	fldenv [edx-0x273dd544]
  419bba:	enterw 0x956e,0x83
  419bbf:	fsub   DWORD PTR ds:0x810e57f1
  419bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc6:	inc    esi
  419bc7:	scas   al,BYTE PTR es:[edi]
  419bc8:	mov    ebx,0xcfa7893e
  419bcd:	mov    dh,0xe0
  419bcf:	pop    edx
  419bd0:	adc    BYTE PTR [edx+edx*1-0x853e42],bh
  419bd7:	outs   dx,DWORD PTR ds:[esi]
  419bd8:	cld    
  419bd9:	int    0xf0
  419bdb:	mov    ?,WORD PTR [eax+0x20]
  419bde:	out    0x7c,al
  419be0:	rsm    
  419be2:	or     ch,BYTE PTR [ecx+0x174de7af]
  419be8:	sub    bl,ch
  419bea:	mov    esi,0x7819965a
  419bef:	jnp    0x419ba5
  419bf1:	xor    ch,al
  419bf3:	dec    esp
  419bf4:	push   eax
  419bf5:	cwde   
  419bf6:	shl    DWORD PTR fs:[ecx-0x6f],0x20
  419bfb:	std    
  419bfc:	cmp    BYTE PTR [edi-0xe],0x46
  419c00:	lds    esi,FWORD PTR [eax-0x6c]
  419c03:	jne    0x419c2c
  419c05:	sbb    BYTE PTR [edi],ch
  419c07:	sub    ch,dl
  419c09:	shl    DWORD PTR [ecx],0xfb
  419c0c:	inc    BYTE PTR [ebx+0x3]
  419c0f:	inc    esi
  419c10:	cli    
  419c11:	add    DWORD PTR [edi-0xa231935],0x5
  419c18:	adc    DWORD PTR [ebp+0x7fff84f9],esi
  419c1e:	dec    eax
  419c1f:	dec    ebp
  419c20:	add    ebp,DWORD PTR ds:0xb9a9b6fd
  419c26:	cwde   
  419c27:	push   esi
  419c28:	jl     0x419c86
  419c2a:	sbb    al,0xba
  419c2c:	mov    ds:0x26538fb4,al
  419c31:	add    DWORD PTR [edx-0x25],ebx
  419c34:	adc    al,0x12
  419c36:	cli    
  419c37:	jmp    0x309d:0x90844d61
  419c3e:	pop    ss
  419c3f:	stc    
  419c40:	repz cmp dh,dl
  419c43:	or     ah,bh
  419c45:	push   DWORD PTR [ebp-0x546f50ea]
  419c4b:	mov    ds:0xa8a986da,al
  419c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c51:	inc    ecx
  419c52:	jb     0x419c0e
  419c54:	cdq    
  419c55:	test   DWORD PTR [ecx],ebp
  419c57:	icebp  
  419c58:	mov    dh,0x99
  419c5a:	arpl   WORD PTR [ecx],bp
  419c5c:	mov    esp,0x7aee133f
  419c61:	xchg   edx,eax
  419c62:	inc    ebp
  419c63:	dec    ebp
  419c64:	stos   BYTE PTR es:[edi],al
  419c65:	ins    BYTE PTR es:[edi],dx
  419c66:	mul    BYTE PTR [esi+0x281a135b]
  419c6c:	stos   BYTE PTR es:[edi],al
  419c6d:	jne    0x419c49
  419c6f:	jmp    0x5aab:0xd9810267
  419c76:	jecxz  0x419ce7
  419c78:	push   eax
  419c79:	xchg   ebp,eax
  419c7a:	fnstsw WORD PTR [ebp+0x8]
  419c7d:	sbb    esp,DWORD PTR [esi]
  419c7f:	in     al,0xc3
  419c81:	in     al,0x8d
  419c83:	ret    
  419c84:	push   ebp
  419c85:	es int3 
  419c87:	xchg   ebp,eax
  419c88:	fcomp  DWORD PTR [edi]
  419c8a:	sti    
  419c8b:	xor    eax,0x1a1746f5
  419c90:	ja     0x419d0b
  419c92:	and    al,BYTE PTR [ecx]
  419c94:	xchg   esp,eax
  419c95:	fld    QWORD PTR [edi+0x27]
  419c98:	add    al,0x1f
  419c9a:	mov    BYTE PTR [esi],ah
  419c9c:	mov    ebx,0x7e419e6
  419ca1:	adc    esi,DWORD PTR [eax-0x5a]
  419ca4:	and    ebp,edx
  419ca6:	out    0xa7,eax
  419ca8:	xchg   DWORD PTR ds:0xbd33292e,edi
  419cae:	inc    ebx
  419caf:	jmp    0x6c8b:0xb2bd1b02
  419cb6:	cli    
  419cb7:	sbb    DWORD PTR [ecx-0x7f],esi
  419cba:	jae    0x419c5c
  419cbc:	mov    edx,DWORD PTR [eax]
  419cbe:	jle    0x419d16
  419cc0:	push   ebx
  419cc1:	gs pop eax
  419cc3:	mov    ecx,esp
  419cc5:	fnsave [esi+0x49]
  419cc8:	pop    eax
  419cc9:	pop    es
  419cca:	mov    eax,ds:0x6712c6b1
  419ccf:	push   edi
  419cd0:	jbe    0x419c77
  419cd2:	xchg   ebp,eax
  419cd3:	mov    ch,0xf3
  419cd5:	repz add ah,0x68
  419cd9:	sub    BYTE PTR [esi+eiz*4-0x67],0xd5
  419cde:	scas   eax,DWORD PTR es:[edi]
  419cdf:	icebp  
  419ce0:	daa    
  419ce1:	je     0x419ca0
  419ce3:	and    WORD PTR [edx-0x7e],si
  419ce7:	ins    DWORD PTR es:[edi],dx
  419ce8:	xlat   BYTE PTR ds:[ebx]
  419ce9:	jg     0x419ca2
  419ceb:	clc    
  419cec:	pop    ss
  419ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cee:	push   es
  419cef:	push   esi
  419cf0:	ret    
  419cf1:	test   al,0x4c
  419cf3:	push   edx
  419cf4:	pop    ebx
  419cf5:	das    
  419cf6:	in     eax,0x75
  419cf8:	fwait
  419cf9:	jmp    0xf7f9:0x7a4b0116
  419d00:	jle    0x419ce6
  419d02:	add    BYTE PTR [esi-0x34],cl
  419d05:	out    0x49,eax
  419d07:	aam    0x4d
  419d09:	jp     0x419cf8
  419d0b:	xchg   esp,eax
  419d0c:	loope  0x419cdf
  419d0e:	fwait
  419d0f:	adc    bh,dl
  419d11:	mov    dl,0x5f
  419d13:	ds jmp 0x4f38:0x3690682
  419d1b:	stos   DWORD PTR es:[edi],eax
  419d1c:	jo     0x419d63
  419d1e:	add    DWORD PTR [esi+0x6a3efade],esp
  419d24:	jns    0x419ced
  419d26:	jl     0x419caf
  419d28:	test   BYTE PTR [esi],0x99
  419d2b:	shl    BYTE PTR [ecx+edi*2+0x4d0c524c],1
  419d32:	push   esp
  419d33:	and    eax,0xe9dc0bdf
  419d38:	pop    edi
  419d39:	(bad)  
  419d3a:	jo     0x419d71
  419d3c:	mov    al,ds:0xdaf2f87
  419d41:	aaa    
  419d42:	lods   al,BYTE PTR ds:[esi]
  419d43:	outs   dx,DWORD PTR ds:[esi]
  419d44:	dec    edx
  419d45:	aaa    
  419d46:	mov    ecx,0x3c3567f4
  419d4b:	jb     0x419d59
  419d4d:	je     0x419d33
  419d4f:	sti    
  419d50:	push   cs
  419d51:	sbb    edx,edi
  419d53:	popf   
  419d54:	push   cs
  419d55:	scas   al,BYTE PTR es:[edi]
  419d56:	or     eax,0x319c1f8c
  419d5b:	pop    ecx
  419d5c:	out    dx,eax
  419d5d:	dec    ebp
  419d5e:	int    0x24
  419d60:	xor    eax,0x3a4404ba
  419d65:	mov    edx,0x42dddbeb
  419d6a:	call   0x6f28:0xe997f22f
  419d71:	push   ds
  419d72:	lods   eax,DWORD PTR ds:[esi]
  419d73:	fnstcw WORD PTR [ebx+0x26]
  419d76:	adc    ebp,DWORD PTR ds:0x7e44230e
  419d7c:	std    
  419d7d:	imul   eax,DWORD PTR [esi-0x33],0xffffffab
  419d81:	ret    0x7705
  419d84:	jecxz  0x419deb
  419d86:	mov    ecx,0x361ef69e
  419d8b:	in     al,0xf9
  419d8d:	push   DWORD PTR ds:0x805c9ad
  419d93:	push   esi
  419d94:	dec    ebx
  419d95:	xor    DWORD PTR [eax+0x79],esp
  419d98:	pushf  
  419d99:	and    DWORD PTR [eax+0x24],ebp
  419d9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d9d:	es cmc 
  419d9f:	add    ebp,DWORD PTR gs:[edx+0xe]
  419da3:	(bad)  
  419da5:	inc    edx
  419da6:	outs   dx,BYTE PTR ds:[esi]
  419da7:	inc    esi
  419da8:	aad    0xea
  419daa:	outs   dx,BYTE PTR ds:[esi]
  419dab:	loopne 0x419db8
  419dad:	adc    al,0x8
  419daf:	mov    ebp,0xc99ab03d
  419db4:	loop   0x419d52
  419db6:	mov    esi,0xf1ff1b2
  419dbb:	sbb    ebx,ecx
  419dbd:	cmp    BYTE PTR [esi+ebx*8],dh
  419dc0:	dec    edx
  419dc1:	test   DWORD PTR [ecx+0x66],ecx
  419dc4:	jno    0x419e29
  419dc6:	push   eax
  419dc7:	sti    
  419dc8:	xchg   esp,eax
  419dc9:	mov    esi,0x72415dda
  419dce:	push   es
  419dcf:	daa    
  419dd0:	jecxz  0x419e1c
  419dd2:	mov    al,0x48
  419dd4:	sub    bh,BYTE PTR [eax-0x6d]
  419dd7:	mov    al,ds:0x300f09da
  419ddc:	xchg   esi,eax
  419ddd:	jle    0x419d6a
  419ddf:	dec    ebp
  419de0:	inc    edx
  419de1:	push   0x64
  419de3:	pop    es
  419de4:	dec    eax
  419de5:	ds xor BYTE PTR cs:[ecx+0x60],0x11
  419deb:	outs   dx,BYTE PTR ds:[esi]
  419dec:	pop    ebp
  419ded:	mov    ebx,0xd064141d
  419df2:	retf   
  419df3:	sbb    ebp,DWORD PTR [edi-0x5154d708]
  419df9:	daa    
  419dfa:	retf   
  419dfb:	test   eax,0xe53a17ba
  419e00:	mov    esp,0xb1aab065
  419e05:	addr16 inc ebp
  419e07:	ret    0x3500
  419e0a:	sbb    eax,0xc1709c3c
  419e0f:	lea    esi,[edi-0x13]
  419e12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e13:	push   esp
  419e14:	mov    ebx,0xf600450d
  419e19:	lock dec ecx
  419e1b:	or     BYTE PTR [ebp+0x3cb33da0],dh
  419e21:	sahf   
  419e22:	imul   DWORD PTR [ebx-0x18]
  419e25:	push   es
  419e26:	push   ecx
  419e27:	cmp    edx,DWORD PTR [edi-0x61]
  419e2a:	xchg   edx,eax
  419e2b:	dec    ebp
  419e2c:	xchg   ebx,eax
  419e2d:	test   eax,0xc4c57312
  419e32:	ret    
  419e33:	fiadd  DWORD PTR [ebx+0x11]
  419e36:	imul   ecx,DWORD PTR [ebp-0x74],0xe9e68398
  419e3d:	mov    ebp,0xad95ab18
  419e42:	jmp    FWORD PTR [ebx-0xc8e7d20]
  419e48:	mov    edi,0xae361b02
  419e4d:	(bad)  
  419e4e:	fnsave [esi+0x1c787b11]
  419e54:	jnp    0x419e7e
  419e56:	(bad)  
  419e57:	stc    
  419e58:	mov    eax,0xb4b08b88
  419e5d:	bound  edx,QWORD PTR [edi+0x69052158]
  419e63:	fisub  WORD PTR [edx-0x1646bdc8]
  419e69:	test   al,0xb6
  419e6b:	mov    ch,0x5
  419e6d:	imul   esp,DWORD PTR [esp+eax*4-0x54],0xffffffba
  419e72:	aad    0xce
  419e74:	push   ebx
  419e75:	rcr    DWORD PTR [edx+ecx*8],cl
  419e78:	loope  0x419e78
  419e7a:	and    BYTE PTR ds:0x4acd9cf3,bh
  419e80:	or     BYTE PTR [edi+0x7e441c4e],cl
  419e86:	xchg   edx,eax
  419e87:	xor    esp,DWORD PTR [edx]
  419e89:	call   0x96a002ec
  419e8e:	(bad)  
  419e8f:	cdq    
  419e90:	push   edi
  419e91:	into   
  419e92:	test   BYTE PTR [edx-0x20],dh
  419e95:	lea    eax,[esi+0xf97d18e]
  419e9b:	jo     0x419e69
  419e9d:	inc    eax
  419e9e:	xchg   edx,eax
  419e9f:	mov    eax,0x5dc431b1
  419ea4:	push   esi
  419ea5:	and    bh,BYTE PTR [esi]
  419ea7:	mov    dh,dh
  419ea9:	pop    ss
  419eaa:	(bad)  
  419eab:	cmp    dh,dh
  419ead:	sub    BYTE PTR [edi-0x70],al
  419eb0:	pop    ds
  419eb1:	pop    esp
  419eb2:	cli    
  419eb3:	inc    ebx
  419eb4:	add    DWORD PTR [esi+0x21f873c6],ecx
  419eba:	in     eax,0x25
  419ebc:	call   0x2734:0x79292772
  419ec3:	scas   al,BYTE PTR es:[edi]
  419ec4:	bound  edx,QWORD PTR [eax-0x4f724456]
  419eca:	fsub   QWORD PTR [eax+0x1e317c7e]
  419ed0:	pop    ds
  419ed1:	not    DWORD PTR [eax]
  419ed3:	xchg   edi,eax
  419ed4:	inc    ecx
  419ed5:	fild   WORD PTR [edx]
  419ed7:	sti    
  419ed8:	jnp    0x419edc
  419eda:	test   DWORD PTR [eax+eiz*4],0x8863490f
  419ee1:	mov    al,ds:0xf0c891fc
  419ee6:	cli    
  419ee7:	imul   DWORD PTR [esi-0xa]
  419eea:	sub    eax,0x217189af
  419eef:	sbb    al,0x29
  419ef1:	dec    ebp
  419ef2:	dec    esi
  419ef3:	in     eax,0xb9
  419ef5:	fistp  QWORD PTR [esi-0x15]
  419ef8:	push   edi
  419ef9:	sti    
  419efa:	pop    ecx
  419efb:	mov    esp,0x59c43712
  419f00:	mov    esi,0x178c1289
  419f05:	sub    eax,0x71a495ad
  419f0a:	dec    edi
  419f0b:	sbb    al,0xf0
  419f0d:	loope  0x419f65
  419f0f:	sbb    DWORD PTR [edx],eax
  419f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f12:	popa   
  419f13:	xchg   esp,eax
  419f14:	push   es
  419f15:	in     eax,0x37
  419f17:	lods   eax,DWORD PTR ds:[esi]
  419f18:	jmp    0xbb5d:0xbbe0c3e7
  419f1f:	cli    
  419f20:	cmp    BYTE PTR [edi+0x41976a13],bh
  419f26:	outs   dx,DWORD PTR ds:[esi]
  419f27:	fild   QWORD PTR [esi+0x4cb16176]
  419f2d:	or     eax,0xfbf89f79
  419f32:	int    0xf4
  419f34:	jae    0x419f36
  419f36:	aas    
  419f37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f38:	(bad)  [edi-0x48]
  419f3b:	inc    edx
  419f3c:	jne    0x419ec8
  419f3e:	(bad)  
  419f3f:	mov    dh,0x3b
  419f41:	pop    ecx
  419f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f43:	loop   0x419fa9
  419f45:	xlat   BYTE PTR ds:[ebx]
  419f46:	pop    eax
  419f47:	cmp    eax,0xff791499
  419f4c:	cmp    bl,BYTE PTR [eax+ebx*2]
  419f4f:	cdq    
  419f50:	cmp    edi,edx
  419f52:	mov    bl,0xf2
  419f54:	jmp    0x519a7230
  419f59:	sti    
  419f5a:	cli    
  419f5b:	jbe    0x419f7c
  419f5d:	pop    ecx
  419f5e:	(bad)  [ecx-0x28]
  419f61:	mov    ?,WORD PTR [esi]
  419f63:	xor    edi,esp
  419f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f66:	daa    
  419f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f68:	dec    edi
  419f69:	addr16 js 0x419f57
  419f6c:	mov    bh,0x4a
  419f6e:	(bad)  
  419f6f:	call   0x5b77a08b
  419f74:	push   eax
  419f75:	pop    esp
  419f76:	test   al,0x1b
  419f78:	shl    edx,0x59
  419f7b:	jl     0x419f45
  419f7d:	mov    esp,0xbc4bc338
  419f82:	jge    0x41a000
  419f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f85:	or     ecx,DWORD PTR [edx-0x2c]
  419f88:	mov    WORD PTR [edi],fs
  419f8a:	outs   dx,DWORD PTR ds:[esi]
  419f8b:	xchg   ecx,eax
  419f8c:	(bad)  
  419f8e:	inc    eax
  419f8f:	xchg   ebp,eax
  419f90:	(bad)  
  419f91:	in     al,dx
  419f92:	js     0x419f36
  419f94:	pushf  
  419f95:	cli    
  419f96:	icebp  
  419f97:	jg     0x419f55
  419f99:	mov    WORD PTR [ebp+0x29ccb0dc],?
  419f9f:	adc    DWORD PTR [eax+0x43b5e39a],eax
  419fa5:	dec    ecx
  419fa6:	and    BYTE PTR [eax-0x52],cl
  419fa9:	mov    ebx,0x8012e286
  419fae:	adc    eax,0xbb495fe9
  419fb3:	repz pop ebx
  419fb5:	push   esi
  419fb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fb7:	and    eax,0xcc501760
  419fbc:	mov    gs,WORD PTR [eax]
  419fbe:	rcl    DWORD PTR [edx+0x21],1
  419fc1:	ins    BYTE PTR es:[edi],dx
  419fc2:	je     0x41a005
  419fc4:	mov    esp,0x69728f9d
  419fc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fca:	in     al,0x8a
  419fcc:	ins    BYTE PTR es:[di],dx
  419fce:	hlt    
  419fcf:	jo     0x419f95
  419fd1:	arpl   bp,cx
  419fd3:	bnd gs jg 0x41a018
  419fd7:	and    edi,eax
  419fd9:	int3   
  419fda:	cmp    al,0xa1
  419fdc:	lods   al,BYTE PTR ds:[esi]
  419fdd:	add    ah,dl
  419fdf:	imul   edx,DWORD PTR [edi],0xffffffdb
  419fe2:	repz not BYTE PTR [edi+0x3d]
  419fe6:	xchg   ebp,eax
  419fe7:	push   0x192f481
  419fec:	sub    eax,0x914ad989
  419ff1:	(bad)  
  419ff2:	push   ebx
  419ff3:	pop    esi
  419ff4:	xor    BYTE PTR [eax+0x33],cl
  419ff7:	adc    esi,esp
  419ff9:	lds    ebp,FWORD PTR [edx+0x6632bec]
  419fff:	push   ecx
  41a000:	fwait
  41a001:	sti    
  41a002:	das    
  41a003:	inc    edi
  41a004:	popf   
  41a005:	mov    edx,0xb24bb694
  41a00a:	lods   al,BYTE PTR ds:[esi]
  41a00b:	push   0x45
  41a00d:	mov    ch,cl
  41a00f:	inc    ebp
  41a010:	stos   DWORD PTR es:[edi],eax
  41a011:	pop    edx
  41a012:	stos   BYTE PTR es:[edi],al
  41a013:	dec    esp
  41a014:	or     al,0x96
  41a016:	push   cs
  41a017:	pop    eax
  41a018:	push   esi
  41a019:	ins    DWORD PTR es:[edi],dx
  41a01a:	push   ss
  41a01b:	leave  
  41a01c:	cli    
  41a01d:	inc    ebp
  41a01e:	push   ebp
  41a01f:	fimul  WORD PTR [eax+0x35]
  41a022:	adc    ebx,edx
  41a024:	out    dx,eax
  41a025:	popa   
  41a026:	sbb    al,0x8d
  41a028:	push   edi
  41a029:	xchg   esp,eax
  41a02a:	ja     0x41a000
  41a02c:	loopne 0x41a026
  41a02e:	push   edx
  41a02f:	out    0x7f,eax
  41a031:	xlat   BYTE PTR ds:[ebx]
  41a032:	fld    QWORD PTR [ebp+0x1ac944c3]
  41a038:	out    dx,al
  41a039:	xchg   esi,eax
  41a03a:	or     ebx,DWORD PTR [ecx]
  41a03c:	xor    bh,al
  41a03e:	bound  esi,QWORD PTR [edx+0x2444b533]
  41a044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a045:	inc    esp
  41a046:	mov    cl,0x27
  41a049:	and    al,0x9
  41a04b:	loop   0x419ff7
  41a04d:	ss mov ebp,0xabe5c030
  41a053:	mov    ds:0x298e292f,al
  41a058:	mov    ebp,0x491188e1
  41a05d:	ret    0xad47
  41a060:	mov    eax,0x24aed85e
  41a065:	(bad)  
  41a066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a067:	sbb    ecx,DWORD PTR [ecx+0x2b]
  41a06a:	cli    
  41a06b:	pop    esi
  41a06c:	jne    0x41a089
  41a06e:	test   ebp,ebp
  41a070:	jmp    0xc501:0x95f27042
  41a077:	ret    0x2cfd
  41a07a:	sub    bh,BYTE PTR [edx-0x23]
  41a07d:	xor    bl,BYTE PTR [eax-0x3e514559]
  41a083:	std    
  41a084:	xchg   ebp,eax
  41a085:	and    eax,eax
  41a087:	andps  xmm2,XMMWORD PTR ds:0xe52902f7
  41a08e:	mov    ch,0x5
  41a090:	sbb    ebp,DWORD PTR [edx]
  41a092:	ins    BYTE PTR es:[edi],dx
  41a093:	lods   eax,DWORD PTR ds:[esi]
  41a094:	dec    esp
  41a095:	mov    ax,0x20f
  41a099:	mov    ebx,0xdd3c4361
  41a09e:	sbb    DWORD PTR [edx],ebp
  41a0a0:	ret    0xb2e0
  41a0a3:	add    BYTE PTR [edx+ebx*8+0x50],dh
  41a0a7:	push   esp
  41a0a8:	xor    ebp,DWORD PTR ds:0xc6ca434e
  41a0ae:	lods   al,BYTE PTR ds:[esi]
  41a0af:	xchg   ebx,eax
  41a0b0:	clc    
  41a0b1:	std    
  41a0b2:	cmp    al,0xd1
  41a0b4:	lds    ecx,FWORD PTR [esi+edi*4-0x42]
  41a0b8:	mov    bh,0x95
  41a0ba:	sbb    al,0xb2
  41a0bc:	in     eax,0x54
  41a0be:	inc    ebx
  41a0bf:	es pop ss
  41a0c1:	mov    edx,0xf2682909
  41a0c6:	or     al,0x95
  41a0c8:	or     esi,esi
  41a0ca:	mov    dh,al
  41a0cc:	loopne 0x41a063
  41a0ce:	pop    ebp
  41a0cf:	fcomp  DWORD PTR [ebx-0x2b]
  41a0d2:	mov    WORD PTR [ecx],fs
  41a0d4:	sub    eax,0xfcabddcd
  41a0d9:	jo     0x41a14e
  41a0db:	cmp    esp,esp
  41a0dd:	retf   
  41a0de:	sti    
  41a0df:	sbb    esi,DWORD PTR [ebx+0x750adcb1]
  41a0e5:	push   0xffffff8f
  41a0e7:	inc    ebp
  41a0e8:	jle    0x41a108
  41a0ea:	inc    esp
  41a0eb:	imul   ebp,DWORD PTR [esi+0x3a],0x11
  41a0ef:	xchg   ecx,eax
  41a0f0:	mov    WORD PTR [esi-0x1e8321cd],?
  41a0f6:	inc    eax
  41a0f7:	and    BYTE PTR [ebp-0x64],ch
  41a0fa:	fptan  
  41a0fc:	push   ecx
  41a0fd:	sub    eax,0x2d2c1cda
  41a102:	xchg   edi,eax
  41a103:	in     al,0xc9
  41a105:	iret   
  41a106:	out    dx,al
  41a107:	mov    ch,0x41
  41a109:	xchg   ebx,eax
  41a10a:	mov    ch,0x53
  41a10c:	aam    0x7b
  41a10e:	sub    BYTE PTR [ecx+esi*8+0x1d],al
  41a112:	fs mov bl,ah
  41a115:	scas   al,BYTE PTR es:[edi]
  41a116:	fidivr DWORD PTR [esp+eiz*4+0x75]
  41a11a:	cmp    DWORD PTR [ebx-0x7e],ebx
  41a11d:	jge    0x41a0ac
  41a11f:	push   ecx
  41a120:	cmp    eax,DWORD PTR [esi+0x1ad3943b]
  41a126:	sbb    cl,BYTE PTR [ecx]
  41a128:	xchg   ebp,eax
  41a129:	xor    al,0xc6
  41a12b:	push   ds
  41a12c:	dec    ecx
  41a12d:	cmp    eax,0xd1e11eb7
  41a132:	fsub   DWORD PTR [ecx+ebx*1]
  41a135:	push   ebx
  41a136:	cmp    BYTE PTR [edi],dh
  41a138:	rcr    BYTE PTR [esi],0x13
  41a13b:	cdq    
  41a13c:	inc    eax
  41a13d:	imul   DWORD PTR [edx-0xb]
  41a140:	xchg   ebx,eax
  41a141:	ins    DWORD PTR es:[edi],dx
  41a142:	mov    cl,0x75
  41a144:	les    ecx,FWORD PTR [eax]
  41a146:	icebp  
  41a147:	les    ebx,FWORD PTR [edx+0x5a]
  41a14a:	fld    TBYTE PTR [ebp+0x5b]
  41a14d:	push   esp
  41a14e:	pop    ecx
  41a14f:	iret   
  41a150:	iret   
  41a151:	and    BYTE PTR [eax+0x2788fff5],ch
  41a157:	(bad)  
  41a158:	call   0xf4cfd5f2
  41a15d:	sub    BYTE PTR ds:0x8c8266bd,ah
  41a163:	cs or  ebp,edi
  41a166:	inc    ebx
  41a167:	pop    eax
  41a168:	mov    dh,0x8d
  41a16a:	xor    al,0xbf
  41a16c:	shl    DWORD PTR [edx+0x46a332bb],cl
  41a172:	cdq    
  41a173:	or     al,0xd4
  41a175:	int3   
  41a176:	scas   eax,DWORD PTR es:[edi]
  41a177:	daa    
  41a178:	xchg   DWORD PTR [esi+0x1d],esp
  41a17b:	mov    esi,0x9b49dc51
  41a180:	ror    al,cl
  41a182:	call   0xaba8b6c8
  41a187:	call   0xaaeb:0xc56f6c69
  41a18e:	xor    BYTE PTR [ebx-0x45],bh
  41a191:	fld    QWORD PTR [edx-0x6e172935]
  41a197:	dec    esp
  41a198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a199:	fiadd  DWORD PTR [ebx]
  41a19b:	pushf  
  41a19c:	pop    edi
  41a19d:	or     edi,eax
  41a19f:	call   0x2b779a54
  41a1a4:	pop    es
  41a1a5:	jg     0x41a1c4
  41a1a7:	jno    0x41a215
  41a1a9:	mov    bl,0xb
  41a1ab:	xor    al,0x38
  41a1ad:	retf   0x30bd
  41a1b0:	and    al,0x5b
  41a1b2:	dec    ebx
  41a1b3:	jne    0x41a219
  41a1b5:	jle    0x41a1f0
  41a1b7:	sub    BYTE PTR [eax+0x5256444b],0xa3
  41a1be:	mov    al,0xf6
  41a1c0:	call   0xb970:0x191a1c17
  41a1c7:	adc    eax,0x4cfa0643
  41a1cc:	adc    bh,dh
  41a1ce:	cmp    DWORD PTR [eax],eax
  41a1d0:	enter  0x9937,0x44
  41a1d4:	ins    DWORD PTR es:[edi],dx
  41a1d5:	dec    eax
  41a1d6:	sub    al,0x4e
  41a1d8:	adc    ch,BYTE PTR [ebp+0x1ff3cbcd]
  41a1de:	stc    
  41a1df:	pop    esi
  41a1e0:	and    al,0xc8
  41a1e2:	sbb    ah,ah
  41a1e4:	lea    edx,[ebp-0x75768845]
  41a1ea:	add    BYTE PTR [ebx-0x34c011e7],0x2f
  41a1f1:	addr16 add edx,ebx
  41a1f4:	or     al,0x46
  41a1f6:	jl     0x41a266
  41a1f8:	(bad)  [eax+esi*2-0x6d0cfdc7]
  41a1ff:	and    dh,dl
  41a201:	out    dx,eax
  41a202:	(bad)  
  41a203:	fisubr DWORD PTR [edx]
  41a205:	loope  0x41a196
  41a207:	mov    ebp,DWORD PTR [ebp+0x65]
  41a20a:	inc    ecx
  41a20b:	add    ch,dl
  41a20d:	push   esi
  41a20e:	mov    ah,0x12
  41a210:	les    ebx,FWORD PTR [ecx+0x75]
  41a213:	test   DWORD PTR [ebx+0x7e55550b],ebp
  41a219:	shr    DWORD PTR [eax+0xd457f64],cl
  41a21f:	jmp    0x67cd:0xc4cd5f52
  41a226:	pop    ds
  41a227:	push   ss
  41a228:	das    
  41a229:	adc    bl,BYTE PTR [eax+0x74]
  41a22c:	jno    0x41a242
  41a22e:	adc    BYTE PTR [edi],dl
  41a230:	xor    DWORD PTR [esi+esi*4-0xf1f00b9],0x44
  41a238:	and    ebp,DWORD PTR [edx-0x2a]
  41a23b:	out    0x9d,al
  41a23d:	leave  
  41a23e:	dec    eax
  41a23f:	test   al,0xd0
  41a241:	dec    esi
  41a242:	adc    DWORD PTR [eax+0x1e],ecx
  41a245:	jo     0x41a28f
  41a247:	mul    DWORD PTR ds:0x32f8adda
  41a24d:	push   DWORD PTR [ebp-0x5c2f9051]
  41a253:	jno    0x41a21f
  41a255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a256:	ret    0xda38
  41a259:	das    
  41a25a:	sub    DWORD PTR [eax+0x6a],ebx
  41a25d:	int3   
  41a25e:	pop    eax
  41a25f:	dec    ebp
  41a260:	jmp    0x41a2b8
  41a262:	xor    al,0x93
  41a264:	pop    ss
  41a265:	lods   eax,DWORD PTR ds:[esi]
  41a266:	and    ebp,DWORD PTR [esi]
  41a268:	outs   dx,DWORD PTR ds:[esi]
  41a269:	das    
  41a26a:	enter  0x75b2,0x28
  41a26e:	mov    al,dh
  41a270:	retf   
  41a271:	xchg   ebx,eax
  41a272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a273:	imul   ebp,DWORD PTR [eax+ebp*2],0xacef8b4f
  41a27a:	sti    
  41a27b:	nop
  41a27c:	and    edx,DWORD PTR [ebp-0x4e595114]
  41a282:	pop    eax
  41a283:	pop    esp
  41a284:	sub    DWORD PTR ds:0x38a8f9fb,esp
  41a28a:	sbb    BYTE PTR [edi],al
  41a28c:	pop    edi
  41a28d:	mov    cl,0x1f
  41a28f:	jne    0x41a30f
  41a291:	nop
  41a292:	sbb    eax,0x493d5ac5
  41a297:	stc    
  41a298:	fsubp  st(5),st
  41a29a:	adc    esi,eax
  41a29c:	and    dh,BYTE PTR ds:0xea7f968f
  41a2a2:	pop    edx
  41a2a3:	cmp    eax,DWORD PTR [esi+0x6c48da6e]
  41a2a9:	mov    BYTE PTR [ecx],bl
  41a2ab:	dec    edx
  41a2ac:	ror    DWORD PTR [esi-0x70],1
  41a2af:	fcom   QWORD PTR [ecx+0x1244c7d3]
  41a2b5:	push   ss
  41a2b6:	cmp    al,0x98
  41a2b8:	icebp  
  41a2b9:	mov    dl,0x51
  41a2bb:	pop    edi
  41a2bc:	pop    ebp
  41a2bd:	scas   eax,DWORD PTR es:[edi]
  41a2be:	dec    edx
  41a2bf:	out    dx,eax
  41a2c0:	in     al,dx
  41a2c1:	mov    bl,ah
  41a2c3:	outs   dx,BYTE PTR ds:[esi]
  41a2c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c5:	cdq    
  41a2c6:	push   esi
  41a2c7:	push   edx
  41a2c8:	dec    ebp
  41a2c9:	pop    ebx
  41a2ca:	out    dx,eax
  41a2cb:	add    esi,0xffffff82
  41a2ce:	pop    ebx
  41a2cf:	jge    0x41a341
  41a2d1:	pop    edi
  41a2d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d3:	lock (bad) 
  41a2d5:	sbb    BYTE PTR [ebx],cl
  41a2d7:	out    dx,eax
  41a2d8:	mov    eax,ds:0x5da783e5
  41a2dd:	xchg   esi,eax
  41a2de:	jae    0x41a2a2
  41a2e0:	dec    esp
  41a2e1:	call   DWORD PTR [edx]
  41a2e3:	fs and al,0xb0
  41a2e6:	pop    ebp
  41a2e7:	push   cs
  41a2e8:	sub    DWORD PTR [ecx],eax
  41a2ea:	pop    esp
  41a2eb:	jg     0x41a2ed
  41a2ed:	je     0x41a2fb
  41a2ef:	add    DWORD PTR [eax-0x10],ebp
  41a2f2:	jae    0x41a2fa
  41a2f4:	inc    ecx
  41a2f5:	and    esi,ebp
  41a2f7:	mov    ebp,0x5230b4ae
  41a2fc:	aad    0x57
  41a2fe:	adc    BYTE PTR [esi],ch
  41a300:	xchg   edx,eax
  41a301:	call   0x1d70589
  41a306:	rcr    BYTE PTR [ebx+0xe2d74ae],1
  41a30c:	cmp    BYTE PTR [esi+0x21285b18],bh
  41a312:	cs xchg ebx,eax
  41a314:	test   DWORD PTR [eax],ecx
  41a316:	stos   BYTE PTR es:[edi],al
  41a317:	(bad)  
  41a318:	cs lahf 
  41a31a:	out    dx,al
  41a31b:	fadd   DWORD PTR [esi+0x1f4e8fd]
  41a321:	jmp    0xf805d4cb
  41a326:	gs adc eax,0xed73019e
  41a32c:	mov    dh,0x91
  41a32e:	xor    eax,0xc4412799
  41a333:	sbb    BYTE PTR [ebp-0x12],bl
  41a336:	mov    eax,ds:0xca40f13e
  41a33b:	sub    eax,0x739dc46b
  41a340:	into   
  41a341:	gs mov edx,0x64df328e
  41a347:	xlat   BYTE PTR ds:[ebx]
  41a348:	stos   DWORD PTR es:[edi],eax
  41a349:	jp     0x41a354
  41a34b:	(bad)  
  41a34c:	mov    ebx,0x8539c00
  41a351:	cmc    
  41a352:	jbe    0x41a3b9
  41a354:	xor    al,0xd4
  41a356:	(bad)
  41a35a:	scas   al,BYTE PTR es:[edi]
  41a35b:	jnp    0x41a362
  41a35d:	clc    
  41a35e:	shr    BYTE PTR [ebx],cl
  41a360:	jne    0x41a30b
  41a362:	push   ebx
  41a363:	(bad)  
  41a364:	and    ebx,DWORD PTR [esi]
  41a366:	hlt    
  41a367:	jno    0x41a33c
  41a369:	adc    dl,BYTE PTR [ecx+0x1a]
  41a36c:	cmc    
  41a36d:	pop    esp
  41a36e:	sti    
  41a36f:	lods   al,BYTE PTR ds:[esi]
  41a370:	cmp    DWORD PTR [edx+0x4c],eax
  41a373:	int    0xcf
  41a375:	add    ecx,edi
  41a377:	push   0xffffffb5
  41a379:	xor    DWORD PTR [eax],edi
  41a37b:	inc    eax
  41a37c:	jns    0x41a387
  41a37e:	add    al,0x82
  41a380:	inc    ecx
  41a381:	jmp    0x6b4d:0xfd9f6b06
  41a388:	and    DWORD PTR [ecx-0x53],edx
  41a38b:	add    al,BYTE PTR [eax-0x50f79432]
  41a391:	stos   DWORD PTR es:[edi],eax
  41a392:	and    eax,0x140de6a2
  41a397:	sahf   
  41a398:	mov    ebx,0x52df42bf
  41a39d:	retf   
  41a39e:	mov    ebp,0xcb577390
  41a3a3:	dec    ebp
  41a3a4:	mov    ch,0x17
  41a3a6:	xchg   BYTE PTR [esp+ecx*2],bh
  41a3a9:	test   eax,0x8b652f51
  41a3ae:	add    DWORD PTR [eax-0x34d5c7c4],ebp
  41a3b4:	das    
  41a3b5:	mov    esi,0xaf0363d6
  41a3ba:	stc    
  41a3bb:	or     BYTE PTR ds:0x48da9206,ah
  41a3c1:	push   ss
  41a3c2:	jae    0x41a35e
  41a3c4:	xor    eax,DWORD PTR [esi+eiz*2+0x3d179a08]
  41a3cb:	xchg   esi,eax
  41a3cc:	inc    esp
  41a3cd:	mov    ds:0xa2e62336,eax
  41a3d2:	add    DWORD PTR ds:0x4a686475,esp
  41a3d8:	or     DWORD PTR [ebp+0x3],esi
  41a3db:	sbb    eax,0x380b9126
  41a3e0:	and    eax,0x4a646d0
  41a3e5:	aaa    
  41a3e6:	jbe    0x41a36c
  41a3e8:	and    BYTE PTR [esi+0x14],bh
  41a3eb:	or     edx,DWORD PTR [esi+0x695280]
  41a3f1:	cmp    eax,0x8abfb07d
  41a3f6:	rcr    edx,1
  41a3f8:	test   BYTE PTR [ecx],ah
  41a3fa:	pop    edi
  41a3fb:	arpl   WORD PTR [ebp+0x8119e02],si
  41a401:	inc    esp
  41a402:	out    0x41,al
  41a404:	sbb    DWORD PTR [esi+edi*4+0xa],ebp
  41a408:	sar    DWORD PTR [eax-0xd],0xc8
  41a40c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a40d:	add    eax,0x7feea07f
  41a412:	pushf  
  41a413:	outs   dx,DWORD PTR ds:[esi]
  41a414:	sub    bh,BYTE PTR [edx]
  41a416:	mov    dh,0x50
  41a418:	das    
  41a419:	mov    dl,0x79
  41a41b:	adc    DWORD PTR es:[edx+0x64dc1f5c],ebx
  41a422:	adc    cl,BYTE PTR ds:0x2861c2f5
  41a428:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a429:	pusha  
  41a42a:	pop    esi
  41a42b:	sbb    cl,ch
  41a42d:	jns    0x41a45f
  41a42f:	loop   0x41a3fa
  41a431:	jg     0x41a3c1
  41a433:	or     al,0x2
  41a435:	adc    BYTE PTR [ebp+0x17],cl
  41a438:	sbb    ebp,DWORD PTR [ebx+eiz*4]
  41a43b:	sub    ecx,DWORD PTR [edi-0x5b6e1cca]
  41a441:	or     ebp,DWORD PTR [edx+0x14ca3f0e]
  41a447:	pop    es
  41a448:	mov    BYTE PTR [ebp+eax*1+0x853a417],al
  41a44f:	outs   dx,DWORD PTR ds:[esi]
  41a451:	pop    esp
  41a452:	jne    0x41a41c
  41a454:	pop    ebx
  41a455:	jb     0x41a4cd
  41a457:	nop
  41a458:	fcmovnu st,st(2)
  41a45a:	scas   eax,DWORD PTR es:[edi]
  41a45b:	mov    WORD PTR [edx-0x15390704],fs
  41a461:	gs mov ah,0x22
  41a464:	outs   dx,BYTE PTR ds:[esi]
  41a465:	in     eax,dx
  41a466:	mov    eax,0xb1cb26f4
  41a46b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a46c:	xor    bl,BYTE PTR [eax]
  41a46e:	dec    edx
  41a46f:	inc    ecx
  41a470:	clc    
  41a471:	dec    esp
  41a472:	mov    cl,0x92
  41a474:	add    eax,0x880431a1
  41a479:	sub    al,0xd8
  41a47b:	(bad)  
  41a47c:	daa    
  41a47d:	mov    eax,ds:0x6c2e99cf
  41a482:	dec    ebx
  41a483:	and    ebp,DWORD PTR [edx]
  41a485:	add    eax,0xae444b7a
  41a48a:	or     al,0xf7
  41a48c:	sbb    eax,0x47bea303
  41a491:	adc    DWORD PTR [edi],0xcccab2fa
  41a497:	xor    BYTE PTR [ebx*1-0x3634d992],dl
  41a49e:	(bad)  
  41a49f:	xor    al,0x6f
  41a4a1:	pop    ecx
  41a4a2:	dec    ecx
  41a4a3:	jns    0x41a504
  41a4a5:	mov    eax,ds:0xab7eec00
  41a4aa:	daa    
  41a4ab:	test   eax,0x6d90956d
  41a4b0:	jno    0x41a4f3
  41a4b2:	or     BYTE PTR [esp+esi*8+0x2e35ad86],dl
  41a4b9:	loopne 0x41a509
  41a4bb:	adc    BYTE PTR [ebx],al
  41a4bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4bf:	ret    
  41a4c0:	in     eax,0x1b
  41a4c2:	or     al,0x56
  41a4c4:	shr    BYTE PTR [esi+0x1f2925e6],0xc1
  41a4cb:	and    bh,BYTE PTR [ecx-0x65d294e8]
  41a4d1:	sub    bh,BYTE PTR [eax+0x2ccb833a]
  41a4d7:	mov    al,ds:0xbc342e36
  41a4dc:	sbb    esi,0xeef74631
  41a4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e3:	ret    0xf105
  41a4e6:	push   eax
  41a4e7:	jecxz  0x41a4b3
  41a4e9:	enter  0xcc02,0xc2
  41a4ed:	sub    esp,esi
  41a4ef:	inc    ebp
  41a4f0:	cmp    esp,DWORD PTR ds:0x2495a262
  41a4f6:	jnp    0x41a53c
  41a4f8:	stos   DWORD PTR es:[edi],eax
  41a4f9:	popf   
  41a4fa:	dec    esp
  41a4fb:	mov    eax,ds:0x3e0d6873
  41a500:	sbb    ebp,esp
  41a502:	sbb    WORD PTR [ecx+0x74],bp
  41a506:	outs   dx,DWORD PTR ds:[esi]
  41a507:	rcr    BYTE PTR [eax+edx*4],cl
  41a50a:	xchg   ebx,eax
  41a50b:	adc    bh,ah
  41a50d:	mov    BYTE PTR [edi-0x12],ah
  41a510:	jae    0x41a552
  41a512:	test   al,0x3a
  41a514:	shl    DWORD PTR [edi],cl
  41a516:	sub    edx,DWORD PTR [edx+eiz*2]
  41a519:	xchg   esi,eax
  41a51a:	mov    al,ds:0x72fea016
  41a51f:	or     DWORD PTR [eax],edx
  41a521:	(bad)  
  41a522:	dec    ebx
  41a523:	mov    cl,BYTE PTR [ecx]
  41a525:	dec    esi
  41a526:	xor    ah,BYTE PTR [edx+0x13]
  41a529:	adc    edx,DWORD PTR [edi-0x6d]
  41a52c:	xor    edx,eax
  41a52e:	jmp    0x41a4c1
  41a530:	into   
  41a531:	pusha  
  41a532:	jmp    0x41a4cd
  41a534:	add    eax,0x846bcd05
  41a539:	jae    0x41a4cd
  41a53b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a53c:	outs   dx,DWORD PTR ds:[esi]
  41a53d:	xchg   BYTE PTR [ebx],dh
  41a53f:	mov    BYTE PTR [ecx-0x6a0d0cfc],ah
  41a545:	fs adc al,0x9
  41a548:	dec    eax
  41a549:	pusha  
  41a54a:	loope  0x41a535
  41a54c:	hlt    
  41a54d:	push   ecx
  41a54e:	hlt    
  41a54f:	enter  0x3e80,0x9
  41a553:	xor    edx,DWORD PTR ds:0x33fc2864
  41a559:	add    edi,DWORD PTR [ebp-0x30]
  41a55c:	mov    ecx,0x5b57d2dd
  41a561:	pop    edi
  41a562:	dec    esi
  41a563:	popa   
  41a564:	pop    ss
  41a565:	gs and eax,esi
  41a568:	push   edx
  41a569:	dec    ecx
  41a56a:	ja     0x41a55e
  41a56c:	fwait
  41a56d:	in     eax,0x24
  41a56f:	jb     0x41a4f6
  41a571:	mov    ds:0xd0e25721,al
  41a576:	xor    ebx,DWORD PTR [ebx]
  41a578:	inc    ecx
  41a579:	push   es
  41a57a:	mov    eax,0x7592bb58
  41a57f:	mov    bh,0x76
  41a581:	xor    al,0xcf
  41a583:	push   eax
  41a584:	xor    edi,esi
  41a586:	hlt    
  41a587:	add    ebx,DWORD PTR [edx+0x7a]
  41a58a:	ficom  WORD PTR [eax+0x665f630c]
  41a590:	xchg   edx,eax
  41a591:	add    bh,BYTE PTR [eax]
  41a593:	adc    al,0xc0
  41a595:	inc    ebx
  41a596:	mov    ds:0x49b03948,eax
  41a59b:	push   esp
  41a59c:	xor    ah,ah
  41a59e:	xchg   dh,al
  41a5a0:	ret    
  41a5a1:	je     0x41a550
  41a5a3:	rol    BYTE PTR [eax-0x70],cl
  41a5a6:	std    
  41a5a7:	pop    es
  41a5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a9:	je     0x41a59a
  41a5ab:	push   DWORD PTR [edx]
  41a5ad:	jp     0x41a59d
  41a5af:	pop    ds
  41a5b0:	lods   al,BYTE PTR ds:[esi]
  41a5b1:	retf   
  41a5b2:	es in  al,0xff
  41a5b5:	sub    BYTE PTR [edi-0x62],al
  41a5b8:	shl    BYTE PTR [edi],0x11
  41a5bb:	aam    0xd
  41a5bd:	mov    edx,0xe82b12f5
  41a5c2:	out    0xc3,al
  41a5c4:	in     al,0x8c
  41a5c6:	test   eax,0xe3bc9af9
  41a5cb:	data16 ins BYTE PTR es:[edi],dx
  41a5cd:	in     al,0x4c
  41a5cf:	jecxz  0x41a5c5
  41a5d1:	xchg   sp,ax
  41a5d3:	ins    BYTE PTR es:[edi],dx
  41a5d4:	adc    BYTE PTR [edi+0x4f],ah
  41a5d7:	jmp    0x41a585
  41a5d9:	lea    edx,[di+0x17]
  41a5dd:	push   0xffffffe4
  41a5df:	fwait
  41a5e0:	stos   DWORD PTR es:[edi],eax
  41a5e1:	call   0xd640:0x3c0cb406
  41a5e8:	icebp  
  41a5e9:	push   ebp
  41a5ea:	int    0xe3
  41a5ec:	int    0x8c
  41a5ee:	icebp  
  41a5ef:	mov    al,ds:0xcc249a25
  41a5f4:	stc    
  41a5f5:	sti    
  41a5f6:	sahf   
  41a5f7:	push   0x5f
  41a5f9:	bound  bp,DWORD PTR [ecx+0x5a]
  41a5fd:	lock div BYTE PTR [ebp-0x35]
  41a601:	inc    edx
  41a602:	xor    edi,edx
  41a604:	out    dx,al
  41a605:	(bad)  
  41a606:	add    bl,dl
  41a608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a609:	imul   ebx,DWORD PTR [esi-0x59],0x441c9a5d
  41a610:	sbb    eax,DWORD PTR [eax+0x4f]
  41a613:	and    DWORD PTR [edx],ebp
  41a615:	loopne 0x41a5e9
  41a617:	jge    0x41a618
  41a619:	retf   0xc601
  41a61c:	pop    ebx
  41a61d:	int    0x84
  41a61f:	push   edi
  41a620:	inc    eax
  41a621:	daa    
  41a622:	cmp    ecx,ecx
  41a624:	push   ebp
  41a625:	aad    0x36
  41a627:	(bad)  
  41a628:	xchg   esp,eax
  41a629:	inc    edx
  41a62a:	mov    ds:0x4d145e78,al
  41a62f:	int    0xe9
  41a631:	fldcw  WORD PTR ds:0x7ea846e2
  41a637:	cmp    BYTE PTR [esp+ebx*2+0x11],al
  41a63b:	mov    ebp,0x67858977
  41a640:	xchg   ecx,eax
  41a641:	sub    BYTE PTR [edi+0x5f69556b],0xac
  41a648:	xor    al,0x41
  41a64a:	shl    BYTE PTR [eax-0x7048168f],cl
  41a650:	lock je 0x41a66c
  41a653:	add    eax,0xaadf224d
  41a658:	push   ecx
  41a659:	adc    al,0x18
  41a65b:	outs   dx,DWORD PTR ds:[esi]
  41a65c:	adc    al,0x27
  41a65e:	js     0x41a6ae
  41a660:	pushf  
  41a661:	xor    BYTE PTR [ecx+ecx*4+0x5015dd81],dh
  41a668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a669:	ret    
  41a66a:	(bad)  
  41a66b:	xchg   esp,eax
  41a66c:	xchg   esp,eax
  41a66d:	xchg   BYTE PTR [ebp-0x11815b88],bl
  41a673:	pop    edi
  41a674:	mov    bh,0x76
  41a676:	stos   DWORD PTR es:[edi],eax
  41a677:	scas   eax,DWORD PTR es:[edi]
  41a678:	dec    BYTE PTR [eax-0x4d]
  41a67b:	add    DWORD PTR [edi],eax
  41a67d:	ret    
  41a67e:	jp     0x41a685
  41a680:	(bad)  
  41a682:	shr    BYTE PTR [ecx],0x40
  41a685:	hlt    
  41a686:	sub    ah,dh
  41a688:	adc    esp,edx
  41a68a:	aam    0x51
  41a68c:	test   eax,0x3363fb39
  41a691:	dec    ecx
  41a692:	popa   
  41a693:	xchg   edi,eax
  41a694:	push   esi
  41a695:	aam    0xb0
  41a697:	fwait
  41a698:	test   al,0x1f
  41a69a:	pop    eax
  41a69b:	dec    ecx
  41a69c:	push   esi
  41a69d:	or     BYTE PTR [eax+0x7f],0x23
  41a6a1:	stos   DWORD PTR es:[edi],eax
  41a6a2:	call   0xb163:0x2ba3c54c
  41a6a9:	in     al,dx
  41a6aa:	fistp  WORD PTR [edi+0x5c]
  41a6ad:	cld    
  41a6ae:	and    ecx,ecx
  41a6b0:	jmp    0x41a64b
  41a6b2:	dec    DWORD PTR [edx-0x212f36e0]
  41a6b8:	out    dx,al
  41a6b9:	dec    ebx
  41a6ba:	(bad)  
  41a6bb:	inc    DWORD PTR [esi+0x5c]
  41a6be:	inc    edi
  41a6bf:	std    
  41a6c0:	stos   DWORD PTR es:[edi],eax
  41a6c1:	lock xchg esi,eax
  41a6c3:	mov    ebx,0x6702b75
  41a6c8:	retf   
  41a6c9:	jge    0x41a73c
  41a6cb:	push   ss
  41a6cc:	cmc    
  41a6cd:	adc    al,0xc1
  41a6cf:	xchg   ebp,eax
  41a6d0:	jb     0x41a748
  41a6d2:	inc    ebx
  41a6d3:	rcl    BYTE PTR [edi+0x2487ef34],1
  41a6d9:	rep outs dx,DWORD PTR ds:[esi]
  41a6db:	pop    edi
  41a6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6dd:	push   0xe68cf17c
  41a6e2:	cmp    BYTE PTR [esi+0x36],dh
  41a6e5:	cdq    
  41a6e6:	or     ecx,ebx
  41a6e8:	cs stos DWORD PTR es:[edi],eax
  41a6ea:	call   0xfa29ebf1
  41a6ef:	cmp    dh,BYTE PTR [esi]
  41a6f1:	dec    ebx
  41a6f2:	shl    dl,0x0
  41a6f5:	aam    0x42
  41a6f7:	dec    ecx
  41a6f8:	repz ret 0x6bb2
  41a6fc:	jo     0x41a690
  41a6fe:	push   es
  41a6ff:	mov    edi,0x995393fa
  41a704:	sbb    DWORD PTR [edi+0x38],ebp
  41a707:	cmc    
  41a708:	add    ah,BYTE PTR es:[ebp-0x46]
  41a70c:	outs   dx,DWORD PTR ds:[esi]
  41a70d:	sbb    eax,0x14494f16
  41a712:	shl    DWORD PTR [ebx],1
  41a714:	cmp    DWORD PTR ds:0x28c1c10e,ebx
  41a71a:	shr    BYTE PTR [ebp-0x6d774134],0x7
  41a721:	push   ebp
  41a722:	inc    ebp
  41a723:	jecxz  0x41a6ff
  41a725:	outs   dx,BYTE PTR ds:[esi]
  41a726:	leave  
  41a727:	push   ecx
  41a728:	fisubr WORD PTR [edx+0x11]
  41a72b:	jge    0x41a70b
  41a72d:	jg     0x41a744
  41a72f:	pusha  
  41a730:	arpl   WORD PTR ds:0xfce1e30c,bp
  41a736:	mov    ecx,0x229e31ca
  41a73b:	fisttp DWORD PTR [ebx]
  41a73d:	jge    0x41a735
  41a73f:	xchg   BYTE PTR [edx],cl
  41a741:	add    BYTE PTR [esi],0xe6
  41a744:	daa    
  41a745:	pop    esp
  41a746:	mov    edx,0x289301c0
  41a74b:	shl    DWORD PTR [eax+0x20],0x2a
  41a74f:	jnp    0x41a70e
  41a751:	aad    0xd3
  41a753:	lock dec ebx
  41a755:	mov    ds:0x892dc0c7,al
  41a75a:	data16 fldcw WORD PTR [ecx+0x42]
  41a75e:	adc    edi,edi
  41a760:	mov    al,ds:0x1b42200d
  41a765:	sbb    BYTE PTR [edi],dh
  41a767:	test   BYTE PTR [ebx+0x364bd5ba],ch
  41a76d:	sub    al,0xf3
  41a76f:	lods   al,BYTE PTR ds:[esi]
  41a770:	sahf   
  41a771:	jmp    0x41a768
  41a773:	mov    edx,0xcd256eb
  41a778:	ficom  WORD PTR [ebx+0x67]
  41a77b:	xchg   esi,eax
  41a77c:	or     al,0xf1
  41a77e:	test   DWORD PTR [edx-0x163dd3bf],0xc9b5e7a5
  41a788:	cdq    
  41a789:	rcr    edx,cl
  41a78b:	sti    
  41a78c:	iret   
  41a78d:	js     0x41a79c
  41a78f:	jmp    0xfaa2:0xb7d3625a
  41a796:	rcr    BYTE PTR [ebp+0x1b],1
  41a799:	xor    al,0x47
  41a79b:	mov    dh,0xc1
  41a79d:	mov    WORD PTR [ecx-0x46],cs
  41a7a0:	mov    edi,0x2cc6a65c
  41a7a5:	cli    
  41a7a6:	pop    esi
  41a7a7:	mov    esp,0xc963540f
  41a7ac:	sbb    DWORD PTR [ecx],ecx
  41a7ae:	and    DWORD PTR ds:0xd8e14701,edx
  41a7b4:	sub    eax,0x613fc5b8
  41a7b9:	xor    DWORD PTR [edx-0x55],edi
  41a7bc:	test   BYTE PTR [edx+0x386cc112],ah
  41a7c2:	cli    
  41a7c3:	fnstcw WORD PTR [eax+0x31]
  41a7c6:	nop
  41a7c7:	sub    esi,ecx
  41a7c9:	retf   0xdd41
  41a7cc:	xchg   esi,eax
  41a7cd:	shl    DWORD PTR [edi],1
  41a7cf:	leave  
  41a7d0:	add    BYTE PTR [eiz*4+0x47dba83e],cl
  41a7d7:	les    esp,FWORD PTR [esi-0x3c]
  41a7da:	pop    ebp
  41a7db:	mov    ecx,0xe0a8c082
  41a7e0:	leave  
  41a7e1:	popa   
  41a7e2:	iret   
  41a7e3:	(bad)  
  41a7e4:	test   BYTE PTR [edx+esi*4],ah
  41a7e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7e8:	retf   0xfceb
  41a7eb:	aam    0x2b
  41a7ed:	std    
  41a7ee:	sbb    dh,BYTE PTR [ecx+0x4d10cfc5]
  41a7f4:	ins    BYTE PTR es:[edi],dx
  41a7f5:	mov    esi,0xe9a7cd68
  41a7fa:	leave  
  41a7fb:	fisttp QWORD PTR [edi]
  41a7fd:	dec    edi
  41a7fe:	stos   DWORD PTR es:[edi],eax
  41a7ff:	lea    esp,[ecx-0x2b34bbe5]
  41a805:	pop    es
  41a806:	sar    DWORD PTR [ebx+0x51],0xff
  41a80a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a80b:	or     eax,0xf1aa7ee5
  41a810:	ret    
  41a811:	inc    eax
  41a812:	pop    eax
  41a813:	pop    ebp
  41a814:	inc    esp
  41a815:	fnsave [eax+eiz*4-0x66]
  41a819:	aas    
  41a81a:	int    0xc1
  41a81c:	xchg   ebp,eax
  41a81d:	clc    
  41a81e:	out    dx,eax
  41a81f:	push   ds
  41a820:	shl    BYTE PTR [eax+eax*1+0x7b],0x22
  41a825:	xchg   edx,eax
  41a826:	push   edx
  41a827:	sahf   
  41a828:	xchg   ecx,eax
  41a829:	mov    ebp,0xe6b59b2
  41a82e:	jmp    0x6f8a:0x68a33ea5
  41a835:	fidiv  DWORD PTR [esi]
  41a837:	push   edi
  41a838:	stos   DWORD PTR es:[edi],eax
  41a839:	xchg   edi,eax
  41a83a:	cmp    DWORD PTR [edi+0x47],edi
  41a83d:	adc    cl,BYTE PTR [esi]
  41a83f:	into   
  41a840:	enter  0x3c9,0xdc
  41a844:	mov    edi,0xb8722bb5
  41a849:	arpl   WORD PTR [edi],ax
  41a84b:	pop    edi
  41a84c:	gs mov bh,0xfb
  41a84f:	leave  
  41a850:	data16 add al,0xd1
  41a853:	into   
  41a854:	lahf   
  41a855:	cmp    eax,0x85cd8ed2
  41a85a:	or     al,0x8f
  41a85c:	or     BYTE PTR [edi+0x7ace571e],0xe0
  41a863:	int    0x7
  41a865:	push   ss
  41a866:	push   ebp
  41a867:	(bad)  [ebp+eiz*4+0x7d]
  41a86b:	repnz mov esi,0xaa5cca45
  41a871:	repnz mov edi,0x9b6a07c8
  41a877:	lods   eax,DWORD PTR ds:[esi]
  41a878:	xchg   esp,eax
  41a879:	lods   al,BYTE PTR ds:[esi]
  41a87a:	inc    ecx
  41a87b:	frstor [esi]
  41a87d:	popa   
  41a87e:	mov    dh,0xc4
  41a880:	test   al,0x7
  41a882:	hlt    
  41a883:	jge    0x41a810
  41a885:	mov    ch,0x9f
  41a887:	inc    eax
  41a888:	repnz mov al,0xb4
  41a88b:	jne    0x41a8d6
  41a88d:	dec    ebx
  41a88e:	xor    eax,0x8130d2d3
  41a893:	mov    dh,0x9d
  41a895:	jle    0x41a834
  41a897:	pop    ecx
  41a898:	cs popa 
  41a89a:	addr16 sbb eax,ecx
  41a89d:	fcomp  st(4)
  41a89f:	sbb    al,al
  41a8a1:	cmp    ah,BYTE PTR [esi+edi*1+0x53d6d58b]
  41a8a8:	xchg   esi,eax
  41a8a9:	sub    cl,BYTE PTR [edx]
  41a8ab:	fimul  DWORD PTR [edx+esi*2+0x6f]
  41a8af:	hlt    
  41a8b0:	in     eax,0xc
  41a8b2:	push   ebp
  41a8b3:	pusha  
  41a8b4:	jl     0x41a8c4
  41a8b6:	sbb    eax,0x583b7c21
  41a8bb:	jbe    0x41a83d
  41a8bd:	ret    
  41a8be:	sub    al,0x5e
  41a8c0:	mov    ebx,DWORD PTR [ecx]
  41a8c2:	jo     0x41a915
  41a8c4:	in     eax,dx
  41a8c5:	push   0xffffffcb
  41a8c7:	xor    DWORD PTR [esi+0x35],ebx
  41a8ca:	das    
  41a8cb:	pop    esp
  41a8cc:	es sub eax,0xe841b472
  41a8d2:	in     al,dx
  41a8d3:	out    dx,eax
  41a8d4:	out    0xd1,al
  41a8d6:	xor    al,0x30
  41a8d8:	push   ebx
  41a8d9:	push   eax
  41a8da:	xchg   ecx,esi
  41a8dc:	scas   eax,DWORD PTR es:[edi]
  41a8dd:	sbb    al,0x8f
  41a8df:	cs in  eax,0x88
  41a8e2:	clc    
  41a8e3:	sti    
  41a8e4:	or     BYTE PTR [edi+eax*1],ch
  41a8e7:	outs   dx,BYTE PTR ds:[esi]
  41a8e8:	jmp    0x41a8ce
  41a8ea:	adc    al,0x7c
  41a8ec:	gs cmp al,0x8b
  41a8ef:	sbb    BYTE PTR cs:[esi-0x85a8d0a],ah
  41a8f6:	mov    esi,0xdfed3f53
  41a8fb:	popf   
  41a8fc:	scas   eax,DWORD PTR es:[edi]
  41a8fd:	scas   eax,DWORD PTR es:[edi]
  41a8fe:	xchg   edx,eax
  41a8ff:	out    0x71,eax
  41a901:	mov    eax,ds:0x40e4675a
  41a906:	xchg   esi,eax
  41a907:	out    0x40,eax
  41a909:	push   es
  41a90a:	mov    dl,0x19
  41a90c:	ret    0xca88
  41a90f:	dec    edx
  41a910:	and    BYTE PTR [edx-0xb],cl
  41a913:	pop    ds
  41a914:	mov    ds:0x79e4f0c8,eax
  41a919:	int3   
  41a91a:	ins    WORD PTR es:[edi],dx
  41a91c:	fimul  DWORD PTR [edi-0x4299ddea]
  41a922:	cmp    esi,DWORD PTR [ebx-0x6f]
  41a925:	lea    ebp,[edx-0x15a9d29f]
  41a92b:	loopne 0x41a916
  41a92d:	loop   0x41a8b3
  41a92f:	xchg   esi,eax
  41a931:	dec    esp
  41a932:	out    0x8d,eax
  41a934:	repnz adc al,0x9a
  41a937:	test   al,0x26
  41a939:	repnz outs dx,BYTE PTR ds:[si]
  41a93c:	hlt    
  41a93d:	(bad)  
  41a93e:	into   
  41a93f:	cmp    eax,0x343ed92b
  41a944:	mov    eax,ds:0x1adf15c6
  41a949:	mov    edi,0x2cc209d6
  41a94e:	ins    BYTE PTR es:[edi],dx
  41a94f:	or     eax,0xfb745cc0
  41a954:	sti    
  41a955:	sti    
  41a956:	ins    BYTE PTR es:[edi],dx
  41a957:	data16 ja 0x41a93b
  41a95a:	stc    
  41a95b:	sbb    ebp,DWORD PTR [edi]
  41a95d:	jle    0x41a97c
  41a95f:	mov    edx,0x682b8d50
  41a964:	sub    esp,DWORD PTR [esi+0x42]
  41a967:	jno    0x41a9a5
  41a969:	cld    
  41a96a:	add    BYTE PTR [ebp+0x4c9f7995],dh
  41a970:	scas   al,BYTE PTR es:[edi]
  41a971:	inc    edx
  41a972:	pop    ebp
  41a973:	adc    BYTE PTR [esi+0x20fe045a],0xcb
  41a97a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a97b:	inc    ecx
  41a97c:	fist   WORD PTR [eax]
  41a97e:	add    ah,BYTE PTR [edx-0x80]
  41a981:	pop    eax
  41a982:	add    DWORD PTR [ebp-0x67ca9198],ebx
  41a988:	fcom   QWORD PTR [eax]
  41a98a:	sbb    esp,DWORD PTR [ebx+edi*4]
  41a98d:	nop
  41a98e:	mov    BYTE PTR [edi],al
  41a990:	clc    
  41a991:	inc    esi
  41a992:	jmp    DWORD PTR [edi+edi*8]
  41a995:	out    dx,al
  41a996:	jae    0x41a921
  41a998:	pop    ecx
  41a999:	add    BYTE PTR [esi-0x80],0x75
  41a99d:	leave  
  41a99e:	or     eax,0xfef1c067
  41a9a3:	lock jge 0x41a967
  41a9a6:	data16 mov bl,0x55
  41a9a9:	cmp    BYTE PTR [esi+0xd],cl
  41a9ac:	mov    DWORD PTR [ebx],ebp
  41a9ae:	or     BYTE PTR [edi+ebx*1-0x63],ah
  41a9b2:	stc    
  41a9b3:	gs jg  0x41aa1e
  41a9b6:	cmp    ah,BYTE PTR [ebx-0x74]
  41a9b9:	and    bh,BYTE PTR [ebp+0x4]
  41a9bc:	and    al,0x77
  41a9be:	jbe    0x41aa17
  41a9c0:	sbb    ebx,DWORD PTR [esi]
  41a9c2:	mov    eax,ds:0xbf57c27a
  41a9c7:	cmp    dh,0x63
  41a9ca:	or     al,0x94
  41a9cc:	inc    ebp
  41a9cd:	mov    edi,0xad7c4674
  41a9d2:	imul   edx,ecx,0xffffffec
  41a9d5:	scas   al,BYTE PTR es:[edi]
  41a9d6:	jp     0x41a9a8
  41a9d8:	push   esp
  41a9d9:	adc    DWORD PTR [eax+0x34fb6891],0xf18ab943
  41a9e3:	lods   al,BYTE PTR ds:[esi]
  41a9e4:	and    BYTE PTR [ebx-0xe],ah
  41a9e7:	sbb    al,0xb0
  41a9e9:	push   0x44
  41a9eb:	add    al,0xac
  41a9ed:	into   
  41a9ee:	rcr    BYTE PTR [ebx+edi*8+0x2e],1
  41a9f2:	mov    esi,0x6434189d
  41a9f7:	mov    bh,0xdf
  41a9f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9fa:	xchg   ebp,esi
  41a9fc:	(bad)  
  41a9fe:	lods   al,BYTE PTR ds:[esi]
  41a9ff:	mov    cl,0xfd
  41aa01:	mov    esi,0xa4d0680
  41aa06:	adc    DWORD PTR [edi+0xb57ad84],edx
  41aa0c:	jmp    0x877e88fb
  41aa11:	inc    ebx
  41aa12:	sbb    ax,dx
  41aa15:	adc    DWORD PTR [ebp+0x64f6d639],0x50
  41aa1c:	pop    es
  41aa1d:	hlt    
  41aa1e:	push   ds
  41aa1f:	and    al,0x60
  41aa21:	test   eax,0x839aa300
  41aa26:	and    esi,DWORD PTR [ebp-0x43ca6798]
  41aa2c:	xchg   DWORD PTR [eax],esi
  41aa2e:	pop    esi
  41aa2f:	mov    esp,0xdf8109eb
  41aa34:	or     ecx,DWORD PTR ds:0xa134e3dd
  41aa3a:	arpl   bp,di
  41aa3c:	fnstcw WORD PTR [edx-0x7e]
  41aa3f:	xchg   esp,eax
  41aa40:	ins    BYTE PTR es:[edi],dx
  41aa41:	fwait
  41aa42:	out    0xa1,al
  41aa44:	sub    DWORD PTR [ecx+0x7eb130c9],edx
  41aa4a:	pop    eax
  41aa4b:	fstp   QWORD PTR [ebx+edi*4+0x2a]
  41aa4f:	stc    
  41aa50:	mov    al,0xc2
  41aa52:	dec    ebp
  41aa53:	or     ebp,DWORD PTR [ecx-0x62deb952]
  41aa59:	pop    ss
  41aa5a:	xor    esi,DWORD PTR [ebp-0x43]
  41aa5d:	xor    esp,DWORD PTR [edi]
  41aa5f:	pop    ss
  41aa60:	pusha  
  41aa61:	icebp  
  41aa62:	pop    es
  41aa63:	in     al,dx
  41aa64:	stos   BYTE PTR es:[edi],al
  41aa65:	loope  0x41aa4d
  41aa67:	sub    BYTE PTR [edi],0x6
  41aa6a:	mov    ds,WORD PTR ds:0x7106e3cc
  41aa70:	ret    
  41aa71:	aas    
  41aa72:	mov    edx,0x2ed435fd
  41aa77:	cwde   
  41aa78:	cmp    eax,0xf0826db6
  41aa7d:	and    al,0x52
  41aa7f:	or     ecx,DWORD PTR [eax]
  41aa81:	sbb    eax,0xfa259c52
  41aa86:	ffree  st(0)
  41aa88:	pop    esi
  41aa89:	pop    es
  41aa8a:	fnstenv [ebx-0x75306fdb]
  41aa90:	inc    ebx
  41aa91:	fwait
  41aa92:	les    esi,FWORD PTR [eax+0x4b]
  41aa95:	retf   0xda1b
  41aa98:	(bad)  
  41aa99:	mov    ebx,0x72b15cd5
  41aa9e:	inc    esi
  41aa9f:	(bad)  
  41aaa0:	adc    DWORD PTR [ecx+ebx*1+0x22],eax
  41aaa4:	cld    
  41aaa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaa6:	adc    edx,DWORD PTR [edi+eiz*8+0x442a2ff1]
  41aaad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aaae:	push   0x8c16321f
  41aab3:	add    BYTE PTR ds:0x35fb47dd,ch
  41aab9:	call   0xf4fe:0xe734587f
  41aac0:	stos   BYTE PTR es:[edi],al
  41aac1:	adc    al,0x23
  41aac3:	add    bh,0xe2
  41aac6:	js     0x41aada
  41aac8:	sub    edx,edi
  41aaca:	and    ah,BYTE PTR [edi]
  41aacc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aacd:	jg     0x41aaf7
  41aacf:	and    DWORD PTR [ebp-0x62],0xe07d2f36
  41aad6:	lock dec esp
  41aad8:	(bad)  ds:0x90ac64ac
  41aade:	call   0x2b98:0x43448f8a
  41aae5:	xlat   BYTE PTR ds:[ebx]
  41aae6:	mov    BYTE PTR [edx+edi*8+0x46cc32e3],bl
  41aaed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaee:	or     ah,BYTE PTR [ebx-0x1e]
  41aaf1:	fdivr  QWORD PTR [edx+esi*8+0x11359d8b]
  41aaf8:	or     eax,0x4d3e7437
  41aafd:	push   0xffffff91
  41aaff:	sub    BYTE PTR [ecx+eax*8],cl
  41ab02:	mov    edx,ecx
  41ab04:	shl    BYTE PTR [edi+0x450f6f9a],0xa0
  41ab0b:	dec    edx
  41ab0c:	js     0x41aaa4
  41ab0e:	push   ecx
  41ab0f:	das    
  41ab10:	mov    DWORD PTR [edi+0x7d66d4f6],esp
  41ab16:	dec    eax
  41ab17:	mov    cl,0xe6
  41ab19:	pop    esi
  41ab1a:	les    ecx,FWORD PTR [edi]
  41ab1c:	dec    ecx
  41ab1d:	call   0x410acbae
  41ab22:	(bad)  
  41ab23:	std    
  41ab24:	cdq    
  41ab25:	lock pushf 
  41ab27:	(bad)  
  41ab28:	out    dx,eax
  41ab29:	js     0x41aabd
  41ab2b:	lahf   
  41ab2c:	xor    DWORD PTR [esi-0x29d68bc7],edx
  41ab32:	mov    cs,WORD PTR [esi+0x9]
  41ab35:	or     esp,0x2d124afb
  41ab3b:	scas   eax,DWORD PTR es:[edi]
  41ab3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab3d:	adc    DWORD PTR [edi+0x9a807d6],0x2ecd5ac4
  41ab47:	adc    eax,0x3068080f
  41ab4c:	sbb    DWORD PTR [ecx-0x10e675ed],eax
  41ab52:	sub    bl,BYTE PTR [ebp-0x1b]
  41ab55:	sub    dl,BYTE PTR [esi+0x38]
  41ab58:	add    al,BYTE PTR [ecx-0xb]
  41ab5b:	add    DWORD PTR [ebx-0x3e],edi
  41ab5e:	dec    esp
  41ab5f:	popf   
  41ab60:	fmulp  st(7),st
  41ab62:	mov    bl,BYTE PTR [eax]
  41ab64:	xchg   ebx,eax
  41ab65:	jl     0x41aaec
  41ab67:	or     ch,BYTE PTR [eax]
  41ab69:	addr16 xchg edx,eax
  41ab6b:	aam    0x30
  41ab6d:	test   eax,0x7d4e0e83
  41ab72:	fcom   DWORD PTR [edx-0x453b3337]
  41ab78:	das    
  41ab79:	inc    ebx
  41ab7a:	(bad)  
  41ab7b:	inc    esi
  41ab7c:	inc    ecx
  41ab7d:	sub    ebx,DWORD PTR [ebx]
  41ab7f:	xchg   ecx,eax
  41ab80:	bound  ebx,QWORD PTR [edi+0x3eae4699]
  41ab86:	xchg   ebp,eax
  41ab87:	jmp    0xd91744cb
  41ab8c:	leave  
  41ab8d:	rcr    cl,cl
  41ab8f:	pop    edi
  41ab90:	mov    bh,0xed
  41ab92:	in     al,0xa4
  41ab94:	scas   al,BYTE PTR es:[edi]
  41ab95:	call   0x1911:0xc8acd3b0
  41ab9c:	mov    edx,0x2e0e0e2f
  41aba1:	shl    DWORD PTR [ebx],cl
  41aba3:	sub    BYTE PTR [ebx+0xd],0xc3
  41aba7:	sbb    cl,ah
  41aba9:	popf   
  41abaa:	popf   
  41abab:	sbb    eax,0x13d31042
  41abb0:	mov    BYTE PTR [esi-0x2d376aef],dl
  41abb6:	xor    bl,BYTE PTR [ecx-0x33d2a3ea]
  41abbc:	push   eax
  41abbd:	sub    al,0x25
  41abbf:	daa    
  41abc0:	(bad)  
  41abc2:	or     dh,BYTE PTR [edi+0x2]
  41abc5:	pop    esi
  41abc6:	dec    edx
  41abc7:	mov    esi,0x71395fb0
  41abcc:	scas   eax,DWORD PTR es:[edi]
  41abcd:	inc    esp
  41abce:	scas   al,BYTE PTR es:[edi]
  41abcf:	iret   
  41abd0:	(bad)  
  41abd1:	idiv   edi
  41abd3:	loop   0x41abb2
  41abd5:	mov    al,0x9f
  41abd7:	mov    eax,0xddb251d0
  41abdc:	jmp    0x41aba4
  41abde:	jp     0x41ab9a
  41abe0:	and    edi,DWORD PTR [esi-0x59]
  41abe3:	jmp    0x695f:0xab9d56a8
  41abea:	out    dx,al
  41abeb:	nop
  41abec:	mov    cl,0x1b
  41abee:	stos   BYTE PTR es:[edi],al
  41abef:	cmp    eax,0x12fb9723
  41abf4:	stos   BYTE PTR es:[edi],al
  41abf5:	sbb    eax,0xa1c65978
  41abfa:	(bad)  
  41abfb:	shr    DWORD PTR [ecx],1
  41abfd:	popa   
  41abfe:	inc    esi
  41abff:	leave  
  41ac00:	popf   
  41ac01:	xor    edi,DWORD PTR [edx+0x723af13f]
  41ac07:	in     al,0x7e
  41ac09:	fisub  DWORD PTR gs:[eax]
  41ac0c:	mov    edi,0xea119959
  41ac11:	jg     0x41abb5
  41ac13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac14:	push   ss
  41ac15:	aas    
  41ac16:	outs   dx,BYTE PTR ds:[esi]
  41ac17:	int3   
  41ac18:	gs hlt 
  41ac1a:	sbb    ah,BYTE PTR [edi]
  41ac1c:	fcomp  DWORD PTR [edi+ebp*2+0x27d08ba6]
  41ac23:	mov    esp,ebp
  41ac25:	pushf  
  41ac26:	or     BYTE PTR [eax+0x75],cl
  41ac29:	adc    bh,BYTE PTR [ebp+ecx*2-0x7e]
  41ac2d:	aam    0xdf
  41ac2f:	fdivr  QWORD PTR [esi-0x20b86d9c]
  41ac35:	scas   eax,DWORD PTR es:[edi]
  41ac36:	stc    
  41ac37:	xchg   dh,cl
  41ac39:	cmp    bl,ch
  41ac3b:	rcl    BYTE PTR [edx],0x56
  41ac3e:	xchg   esi,eax
  41ac3f:	xchg   bl,dh
  41ac41:	dec    ecx
  41ac42:	push   esi
  41ac43:	into   
  41ac44:	and    esi,ecx
  41ac46:	adc    DWORD PTR [ebp+0x1a],ebp
  41ac49:	cmc    
  41ac4a:	addr16 add eax,0x7c369337
  41ac50:	jnp    0x41ac5d
  41ac52:	in     al,dx
  41ac53:	in     eax,0x2a
  41ac55:	xlat   BYTE PTR ds:[ebx]
  41ac56:	call   0xfb8c:0x3e3c2f4f
  41ac5d:	inc    esi
  41ac5e:	add    al,0x53
  41ac60:	sbb    ax,WORD PTR [edi]
  41ac63:	add    bl,ah
  41ac65:	popf   
  41ac66:	ss in  al,dx
  41ac68:	and    al,0x2c
  41ac6a:	mov    ds:0x4070f5aa,eax
  41ac6f:	pop    edi
  41ac70:	(bad)  
  41ac71:	clc    
  41ac72:	and    BYTE PTR [ebx],cl
  41ac74:	cld    
  41ac75:	gs call 0x8fac945a
  41ac7b:	fisub  WORD PTR [ecx-0x35e68784]
  41ac81:	inc    edx
  41ac82:	dec    esp
  41ac83:	push   edx
  41ac84:	(bad)  
  41ac85:	loope  0x41acff
  41ac87:	inc    edx
  41ac88:	add    al,0x31
  41ac8a:	in     eax,0xc9
  41ac8c:	pop    es
  41ac8d:	jle    0x41ac43
  41ac8f:	sub    ah,BYTE PTR ds:0x5f66b6b3
  41ac95:	dec    eax
  41ac96:	adc    BYTE PTR [ecx-0x6eeeaf43],0xdd
  41ac9d:	fld    QWORD PTR [edi]
  41ac9f:	push   esp
  41aca0:	stc    
  41aca1:	pop    esi
  41aca2:	dec    edi
  41aca3:	and    eax,0xc53d00f7
  41aca8:	(bad)  
  41aca9:	test   al,0x3a
  41acab:	sub    ah,BYTE PTR [edi]
  41acad:	out    0x8c,eax
  41acaf:	fwait
  41acb0:	ror    bh,0x69
  41acb3:	push   0x269ee404
  41acb8:	dec    edi
  41acb9:	sahf   
  41acba:	shr    DWORD PTR [edi],1
  41acbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acbe:	dec    edx
  41acbf:	jmp    0x41ace0
  41acc1:	fdiv   QWORD PTR [edx+edx*2-0x76531626]
  41acc8:	sar    BYTE PTR [edi+0x6e],1
  41accb:	inc    esi
  41accc:	std    
  41accd:	cmc    
  41acce:	fwait
  41accf:	cli    
  41acd0:	dec    esi
  41acd1:	scas   eax,DWORD PTR es:[edi]
  41acd2:	and    DWORD PTR [esi],ebx
  41acd4:	dec    esi
  41acd5:	jno    0x41ac85
  41acd7:	pop    edx
  41acd8:	aam    0xdd
  41acda:	pop    ebx
  41acdb:	enter  0x3c1b,0x4d
  41acdf:	aam    0xcc
  41ace1:	jo     0x41acb4
  41ace3:	cwde   
  41ace4:	mov    DWORD PTR [edx],edx
  41ace6:	lds    eax,FWORD PTR [eax-0x726c16de]
  41acec:	in     al,dx
  41aced:	fild   DWORD PTR ds:0x36c18809
  41acf3:	mov    ds:0xd569f7fb,eax
  41acf8:	lahf   
  41acf9:	(bad)  
  41acfa:	outs   dx,DWORD PTR ds:[esi]
  41acfb:	mov    ch,0x5c
  41acfd:	stos   DWORD PTR es:[edi],eax
  41acfe:	mov    esp,0xd02aeae7
  41ad03:	aam    0x16
  41ad05:	xchg   esp,eax
  41ad06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad07:	scas   eax,DWORD PTR es:[edi]
  41ad08:	pop    es
  41ad09:	test   eax,0xa24d45f6
  41ad0e:	inc    edx
  41ad0f:	jb     0x41ad6e
  41ad11:	cli    
  41ad12:	inc    edi
  41ad13:	fidiv  WORD PTR [ebp+0x58]
  41ad16:	fld    QWORD PTR [eax]
  41ad18:	ins    BYTE PTR es:[edi],dx
  41ad19:	sbb    ebp,DWORD PTR [eax]
  41ad1b:	jmp    0x41ad09
  41ad1d:	inc    eax
  41ad1e:	inc    edi
  41ad1f:	inc    ebp
  41ad20:	lea    ebx,[eax-0x7e6be7fd]
  41ad26:	push   eax
  41ad27:	jmp    0x9ecaff77
  41ad2c:	pop    esi
  41ad2d:	and    dh,0x29
  41ad30:	mov    ?,WORD PTR [eax+0x44]
  41ad33:	aaa    
  41ad34:	mov    al,ds:0xb89a543
  41ad39:	nop
  41ad3a:	mov    dh,0x91
  41ad3c:	jmp    0x41ad02
  41ad3e:	sbb    BYTE PTR es:[esp+ecx*4],bh
  41ad42:	test   al,0xff
  41ad44:	into   
  41ad45:	sbb    BYTE PTR [ebx+ecx*4],0xce
  41ad49:	sub    BYTE PTR [edi-0x7a],ch
  41ad4c:	fst    st(1)
  41ad4e:	push   esi
  41ad4f:	or     al,0xa5
  41ad51:	dec    ebp
  41ad52:	jnp    0x41ad98
  41ad54:	cdq    
  41ad55:	in     eax,0xa2
  41ad57:	les    ebx,FWORD PTR [ecx-0x40c43459]
  41ad5d:	outs   dx,DWORD PTR ds:[esi]
  41ad5e:	push   cs
  41ad5f:	je     0x41ad8a
  41ad61:	(bad)  
  41ad63:	test   DWORD PTR [edi+0x0],ebx
  41ad66:	sbb    al,0xd9
  41ad68:	lock mov BYTE PTR ds:0x12d5b7,bl
  41ad6f:	outs   dx,BYTE PTR ds:[esi]
  41ad70:	test   eax,0x7a36e934
  41ad75:	ins    BYTE PTR es:[edi],dx
  41ad76:	mov    ds,WORD PTR [esi+0x416f42a2]
  41ad7c:	pop    esi
  41ad7d:	jl     0x41ad23
  41ad7f:	adc    al,0xc2
  41ad81:	nop
  41ad82:	xor    al,0xdf
  41ad84:	sbb    eax,0x2fbd5eac
  41ad89:	push   ebx
  41ad8a:	and    al,0xec
  41ad8c:	xor    ebp,DWORD PTR [ecx+0x4cfc7966]
  41ad92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad93:	(bad)
  41ad96:	fisttp DWORD PTR [ecx+edi*2-0x32]
  41ad9a:	dec    ecx
  41ad9b:	xchg   bl,bh
  41ad9d:	mov    bl,0x6f
  41ad9f:	inc    eax
  41ada0:	sub    al,0x51
  41ada2:	sub    DWORD PTR [ebp+0x49],ebx
  41ada5:	inc    ebx
  41ada6:	(bad)  
  41ada7:	int3   
  41ada8:	sub    ah,0xe1
  41adab:	xchg   DWORD PTR [ebx+0xe],ebp
  41adae:	fcmovbe st,st(6)
  41adb0:	mov    ecx,0x8e071f1a
  41adb5:	inc    edx
  41adb6:	push   ecx
  41adb7:	jno    0x41ae31
  41adb9:	inc    eax
  41adba:	lods   eax,DWORD PTR ds:[esi]
  41adbb:	mov    ah,0x93
  41adbd:	daa    
  41adbe:	inc    esp
  41adbf:	inc    edx
  41adc0:	sar    edi,1
  41adc2:	xor    DWORD PTR [edi-0x18ce6721],0xffffffdc
  41adc9:	lahf   
  41adca:	cmp    DWORD PTR [esi],esp
  41adcc:	in     eax,dx
  41adcd:	mov    dl,0x81
  41adcf:	mov    ds:0x34da8d50,eax
  41add4:	loop   0x41ae2b
  41add6:	mov    bl,0x23
  41add8:	dec    ebx
  41add9:	aaa    
  41adda:	jns    0x41adfe
  41addc:	mov    bh,0xbd
  41adde:	js     0x41ad7b
  41ade0:	jne    0x41ae4f
  41ade2:	jl     0x41ad92
  41ade4:	xchg   edx,eax
  41ade5:	mov    BYTE PTR [esi-0x70e7ba07],dh
  41adeb:	fsubr  st,st(1)
  41aded:	data16 das 
  41adef:	mov    dl,0xda
  41adf1:	cmp    DWORD PTR [ebx+0x3e],edi
  41adf4:	ds out 0x66,al
  41adf7:	and    al,0x1d
  41adf9:	gs and eax,0x3efca30e
  41adff:	mov    ah,0xd3
  41ae01:	fmul   QWORD PTR [eiz*2+0x72344ca2]
  41ae08:	jl     0x41adf5
  41ae0a:	mov    eax,ds:0xe7c1537e
  41ae0f:	stos   BYTE PTR es:[edi],al
  41ae10:	sub    ah,BYTE PTR ds:0xbc75be88
  41ae16:	cs scas al,BYTE PTR es:[edi]
  41ae18:	shl    DWORD PTR [ebx+ebx*8+0x3f],0x6f
  41ae1d:	fwait
  41ae1e:	add    al,0x33
  41ae20:	sbb    al,ch
  41ae22:	aaa    
  41ae23:	hlt    
  41ae24:	in     eax,dx
  41ae25:	iret   
  41ae26:	int3   
  41ae27:	mov    ecx,0xcbe7ad3e
  41ae2c:	xor    ebp,DWORD PTR [eax]
  41ae2e:	(bad)  
  41ae2f:	das    
  41ae30:	jbe    0x41ae6d
  41ae32:	outs   dx,BYTE PTR ds:[esi]
  41ae33:	pop    esp
  41ae34:	sub    al,bl
  41ae36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae37:	mov    al,ds:0xbf8b54c8
  41ae3c:	stos   DWORD PTR es:[edi],eax
  41ae3d:	enter  0x8cce,0xb5
  41ae41:	jecxz  0x41ade7
  41ae43:	cdq    
  41ae44:	cmp    esp,DWORD PTR [ebp+0x724619c8]
  41ae4a:	mov    ch,0xa3
  41ae4c:	jmp    0x919b:0x5cf0a45a
  41ae53:	fstp   DWORD PTR [edi-0x129fca2a]
  41ae59:	mov    ch,0x68
  41ae5b:	loope  0x41ae4c
  41ae5d:	push   ebp
  41ae5e:	ds (bad) gs:[edx+0x6a37ac66]
  41ae66:	inc    esi
  41ae67:	ja     0x41aeda
  41ae69:	stc    
  41ae6a:	sbb    ah,bl
  41ae6c:	and    bl,ch
  41ae6e:	cmp    ebx,DWORD PTR [ecx-0x1c2fa762]
  41ae74:	int3   
  41ae75:	std    
  41ae76:	neg    BYTE PTR [eax+0xffe293f]
  41ae7c:	inc    ebp
  41ae7d:	jmp    0xcf709800
  41ae82:	or     esp,DWORD PTR [ebx]
  41ae84:	push   ds
  41ae85:	dec    edi
  41ae86:	test   ecx,eax
  41ae88:	add    DWORD PTR [esi+edx*4-0x6283513a],esi
  41ae8f:	dec    esi
  41ae90:	mov    eax,0x68a3bf94
  41ae95:	lds    dx,DWORD PTR [ebx-0x60de9043]
  41ae9c:	std    
  41ae9d:	adc    edi,DWORD PTR ds:0xd2b7231d
  41aea3:	into   
  41aea4:	dec    esi
  41aea5:	inc    ebp
  41aea6:	mov    bh,0x98
  41aea8:	repnz adc DWORD PTR [edx+0x7febd105],edx
  41aeaf:	mov    bh,0x10
  41aeb1:	mov    esi,0x4ca79b74
  41aeb6:	cmp    esi,DWORD PTR [edi]
  41aeb8:	mov    ecx,0x64afe449
  41aebd:	sbb    edx,DWORD PTR [edx+edx*1+0x14]
  41aec1:	push   0xffffffd1
  41aec3:	mov    al,0x4e
  41aec5:	sub    dl,BYTE PTR [ecx+0x716a71c3]
  41aecb:	arpl   bx,cx
  41aecd:	(bad)
  41aed0:	pop    ds
  41aed1:	jae    0x41af1e
  41aed3:	jge    0x41aee0
  41aed5:	call   0xcb722aca
  41aeda:	inc    esi
  41aedb:	clc    
  41aedc:	dec    DWORD PTR [esi-0xe]
  41aedf:	pop    esi
  41aee0:	dec    ebp
  41aee1:	xor    eax,0xdd76672e
  41aee6:	lock stc 
  41aee8:	in     al,0x62
  41aeea:	xor    al,0x1b
  41aeec:	fprem1 
  41aeee:	adc    eax,0xb5efce18
  41aef3:	mov    bl,BYTE PTR [esi+0x38]
  41aef6:	jbe    0x41aedc
  41aef8:	jle    0x41af13
  41aefa:	test   al,0xf9
  41aefc:	sar    edx,1
  41aefe:	out    dx,eax
  41aeff:	enter  0xf890,0xf6
  41af03:	daa    
  41af04:	ret    0x8e0f
  41af07:	fmul   st,st(2)
  41af09:	shl    ecx,0xe4
  41af0c:	stc    
  41af0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af0e:	push   ds
  41af0f:	imul   ebx,DWORD PTR ds:0xc6e820e6,0xffffffc9
  41af16:	shl    DWORD PTR ds:0x85275d1a,0x40
  41af1d:	test   BYTE PTR cs:[edi-0x20],cl
  41af21:	adc    DWORD PTR [esi+0x7a],ebx
  41af24:	fsubr  st,st(2)
  41af26:	ror    DWORD PTR [ecx-0x3d0fe918],1
  41af2c:	mov    edx,0xcd301a52
  41af31:	(bad)  
  41af32:	aad    0x32
  41af34:	out    0xa3,eax
  41af36:	add    ch,ch
  41af38:	cmp    ebp,edi
  41af3a:	ja     0x41af20
  41af3c:	pop    edx
  41af3d:	stos   BYTE PTR es:[edi],al
  41af3e:	push   es
  41af3f:	jle    0x41af71
  41af41:	clc    
  41af42:	popa   
  41af43:	pop    ss
  41af44:	sbb    al,0x5a
  41af46:	sbb    cl,0x7
  41af49:	stos   BYTE PTR es:[edi],al
  41af4a:	ja     0x41aefb
  41af4c:	add    eax,0xd77f6487
  41af51:	cdq    
  41af52:	jae    0x41af73
  41af54:	and    eax,0x9d8a84e0
  41af59:	pushf  
  41af5a:	sti    
  41af5b:	mov    ds:0x5daa17ad,al
  41af60:	pop    edi
  41af61:	xor    DWORD PTR [eax],0xe2da93c8
  41af67:	daa    
  41af68:	out    0xab,al
  41af6a:	mov    edi,0x55c33508
  41af6f:	dec    esp
  41af70:	test   DWORD PTR [ebx-0x4f],esp
  41af73:	ret    0x54b2
  41af76:	shr    DWORD PTR [edx+0x1ce1d755],0x6f
  41af7d:	cmp    edi,DWORD PTR [ecx+0x29478e5c]
  41af83:	stos   BYTE PTR es:[edi],al
  41af84:	arpl   WORD PTR [ebp-0x79],ax
  41af87:	mov    al,0xb7
  41af89:	std    
  41af8a:	or     ebx,DWORD PTR [edi]
  41af8c:	or     eax,0xa819442
  41af91:	outs   dx,BYTE PTR ds:[esi]
  41af92:	arpl   WORD PTR [esi-0x1d],sp
  41af95:	xor    eax,0xae173d03
  41af9a:	ja     0x41afaf
  41af9c:	aam    0x1a
  41af9e:	push   esi
  41af9f:	sbb    eax,0x5a49857
  41afa4:	inc    eax
  41afa5:	cmp    DWORD PTR [esp+ecx*4+0x65],ecx
  41afa9:	enter  0x687d,0xc2
  41afad:	fisubr WORD PTR [esi]
  41afaf:	neg    ebx
  41afb1:	call   0xda06:0x4ed61d81
  41afb8:	jmp    0x280d:0x58e22603
  41afbf:	(bad)  
  41afc3:	adc    BYTE PTR [ebp+0x57d3b7fb],dl
  41afc9:	xor    DWORD PTR [edi+ebx*2+0x1f562158],ecx
  41afd0:	adc    al,0x34
  41afd2:	mov    ecx,0x3e243751
  41afd7:	je     0x41b00d
  41afd9:	(bad)  
  41afda:	fwait
  41afdb:	mov    eax,ds:0x35141b19
  41afe0:	mov    ah,0x7b
  41afe2:	enter  0x2b47,0x14
  41afe6:	jo     0x41af74
  41afe8:	add    ebp,DWORD PTR [edi+eax*4+0x248425b8]
  41afef:	(bad)  
  41aff0:	fcom   DWORD PTR [edx]
  41aff2:	inc    esp
  41aff3:	sbb    esp,edi
  41aff5:	xchg   edi,eax
  41aff6:	push   esi
  41aff7:	add    al,0x44
  41aff9:	sbb    ecx,DWORD PTR [edx+0x18]
  41affc:	std    
  41affd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41affe:	jle    0x41afdd
  41b000:	stos   DWORD PTR es:[edi],eax
  41b001:	adc    cl,BYTE PTR [esi+eax*1]
  41b004:	stos   BYTE PTR es:[edi],al
  41b005:	jbe    0x41b066
  41b007:	xchg   ebx,eax
  41b008:	ret    0x55e7
  41b00b:	add    BYTE PTR [edx+edx*2+0x799625fc],al
  41b012:	push   0xffffffce
  41b014:	mov    al,ds:0x59368161
  41b019:	or     eax,0xe44334a5
  41b01e:	push   0x62
  41b020:	adc    al,0x67
  41b022:	lock mov edx,0xf2ba226b
  41b028:	pop    ebx
  41b029:	daa    
  41b02a:	or     BYTE PTR [ecx],al
  41b02c:	mov    es,WORD PTR [edi]
  41b02e:	sbb    DWORD PTR [ebp+0x3e],esp
  41b031:	test   DWORD PTR [eax-0x6fe53960],esi
  41b037:	mov    ebx,0x5ee9df8b
  41b03c:	sub    DWORD PTR [ebx],esi
  41b03e:	mov    ds:0x70fd2741,al
  41b043:	out    0x46,eax
  41b045:	jb     0x41aff1
  41b047:	stos   DWORD PTR es:[edi],eax
  41b048:	jbe    0x41b0bf
  41b04a:	jge    0x41b0c5
  41b04c:	push   cs
  41b04d:	popa   
  41b04e:	sbb    DWORD PTR [ebp-0x1b4acead],ecx
  41b054:	sar    BYTE PTR [eax+0x4c10bc5c],0xb9
  41b05b:	and    DWORD PTR [ebp+0x16f82e05],ecx
  41b061:	mov    BYTE PTR [ebx],dh
  41b063:	dec    ecx
  41b064:	and    eax,0xb5821b3a
  41b069:	xor    esp,0xf67f1b1b
  41b06f:	loope  0x41b092
  41b071:	(bad)  
  41b072:	and    BYTE PTR [ebx],ah
  41b074:	push   0x17ea2de3
  41b079:	pop    esi
  41b07a:	dec    esi
  41b07b:	rol    BYTE PTR [ebx-0x31],cl
  41b07e:	xor    edi,DWORD PTR [edi+0x7f458d29]
  41b084:	stc    
  41b085:	xchg   esi,eax
  41b086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b087:	dec    eax
  41b088:	push   ebx
  41b089:	iret   
  41b08a:	(bad)  
  41b08b:	xchg   ecx,eax
  41b08c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b08d:	in     al,0xe6
  41b08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b090:	xchg   ebx,eax
  41b091:	mov    bl,0x15
  41b093:	jmp    0x41b01f
  41b095:	int3   
  41b096:	lds    ecx,FWORD PTR [edi+0x793f53c5]
  41b09c:	pop    ecx
  41b09d:	mov    eax,ds:0x9496495c
  41b0a2:	sbb    edi,DWORD PTR [ecx-0x2697993e]
  41b0a8:	xor    ch,dl
  41b0aa:	ds mov dh,0x88
  41b0ad:	xor    ecx,ebp
  41b0af:	fidiv  WORD PTR ds:0x618f7348
  41b0b5:	test   BYTE PTR [ebp+0x3c2e9a33],bh
  41b0bb:	scas   al,BYTE PTR es:[edi]
  41b0bc:	and    esp,DWORD PTR [edi]
  41b0be:	lods   eax,DWORD PTR ds:[esi]
  41b0bf:	dec    eax
  41b0c0:	ret    0x655f
  41b0c3:	pop    DWORD PTR [edi-0x1d]
  41b0c6:	popa   
  41b0c7:	inc    ebp
  41b0c8:	jmp    0x897e:0x389b2c3c
  41b0cf:	pop    edi
  41b0d0:	addps  xmm6,XMMWORD PTR [ecx+0x42136e72]
  41b0d7:	es cmp eax,0x6b0059f8
  41b0dd:	popf   
  41b0de:	cmp    edi,edi
  41b0e0:	pop    ds
  41b0e1:	mov    al,0x59
  41b0e3:	sub    al,0xc6
  41b0e5:	cdq    
  41b0e6:	pop    ds
  41b0e7:	sub    eax,0x1d77d9fe
  41b0ec:	or     eax,0xefb8fc01
  41b0f1:	push   cs
  41b0f2:	sub    DWORD PTR [ebx],0x98db948c
  41b0f8:	mov    WORD PTR [ecx-0x692d9438],cs
  41b0fe:	add    al,0xaf
  41b100:	in     al,dx
  41b101:	mov    ah,0x24
  41b103:	stos   DWORD PTR es:[edi],eax
  41b104:	rcl    cl,cl
  41b106:	ins    BYTE PTR es:[edi],dx
  41b107:	fidiv  DWORD PTR [ecx-0x65811e57]
  41b10d:	(bad)  
  41b10e:	js     0x41b134
  41b110:	ja     0x41b11e
  41b112:	cld    
  41b113:	cmc    
  41b114:	xchg   bh,al
  41b116:	lods   eax,DWORD PTR ds:[esi]
  41b117:	mov    edx,0xf3d6f219
  41b11c:	push   esp
  41b11d:	lods   al,BYTE PTR ds:[esi]
  41b11e:	dec    ebx
  41b11f:	fsubr  DWORD PTR [edx-0x23da3166]
  41b125:	and    esp,DWORD PTR [edi]
  41b127:	pop    ss
  41b128:	std    
  41b129:	push   ds
  41b12a:	not    DWORD PTR [eax]
  41b12c:	mov    esi,0x93b16f4
  41b131:	mov    cl,0xec
  41b133:	xchg   ebx,eax
  41b134:	pop    eax
  41b135:	adc    eax,0xfcdcd1be
  41b13a:	mov    eax,ds:0xe39b5770
  41b13f:	xchg   ecx,eax
  41b140:	std    
  41b141:	mov    ds:0xdcc3dabb,eax
  41b146:	add    al,0x23
  41b148:	mov    eax,0xa02e40d6
  41b14d:	xchg   ebx,eax
  41b14e:	pushf  
  41b14f:	push   ds
  41b150:	dec    ebx
  41b151:	test   al,0x95
  41b153:	inc    ecx
  41b154:	xor    dh,cl
  41b156:	cli    
  41b157:	sbb    edi,DWORD PTR [eax]
  41b159:	cs out 0x51,al
  41b15c:	fstp   TBYTE PTR [edi]
  41b15e:	rcl    DWORD PTR [ebp+0x7af4c951],cl
  41b164:	mov    esp,0x9141659d
  41b169:	(bad)  
  41b16a:	sbb    ah,BYTE PTR [edi+0x67b13242]
  41b170:	pop    es
  41b171:	xchg   esp,eax
  41b172:	lods   eax,DWORD PTR ds:[esi]
  41b173:	xor    eax,0xb3b0971b
  41b178:	xor    al,0x39
  41b17a:	cmp    BYTE PTR [ebx+0x2777e288],ch
  41b180:	es mov bl,0x90
  41b183:	out    0x77,eax
  41b185:	push   esp
  41b186:	add    dl,ah
  41b188:	pop    edx
  41b189:	cli    
  41b18a:	repnz dec esp
  41b18c:	mov    DWORD PTR [edi-0x24],esi
  41b18f:	test   BYTE PTR [eax],bh
  41b191:	push   edi
  41b192:	rcl    BYTE PTR [edi+ecx*8+0x1eafd061],0x82
  41b19a:	arpl   WORD PTR [esi],dx
  41b19c:	add    edx,ebx
  41b19e:	adc    BYTE PTR [ebp+0x253546b8],0xce
  41b1a5:	and    BYTE PTR [edx-0x2d],dh
  41b1a8:	xchg   BYTE PTR [ebx-0x24],dh
  41b1ab:	(bad)  
  41b1ac:	cwde   
  41b1ad:	cmp    al,0xb7
  41b1af:	or     cl,BYTE PTR [edi+0x75]
  41b1b2:	mov    ebx,0xf6f7c881
  41b1b7:	mov    eax,ds:0x75e1288d
  41b1bc:	daa    
  41b1bd:	mov    bh,0x2b
  41b1bf:	cmp    eax,0xdfeb0704
  41b1c4:	rcl    DWORD PTR [ebx+0x2f],cl
  41b1c7:	add    al,BYTE PTR [ebx]
  41b1c9:	adc    al,0xe5
  41b1cb:	fsub   DWORD PTR [ebx+0x67f90b97]
  41b1d1:	adc    DWORD PTR [ebp+esi*4+0x26798fcf],esp
  41b1d8:	aam    0x8c
  41b1da:	cmp    esi,DWORD PTR [esi-0x5e]
  41b1dd:	repz shl DWORD PTR [esi+0x22f9d2b8],0xc0
  41b1e5:	sbb    DWORD PTR [edx+0x4e],edx
  41b1e8:	repz jnp 0x41b1b3
  41b1eb:	lahf   
  41b1ec:	pop    ds
  41b1ed:	outs   dx,BYTE PTR ds:[esi]
  41b1ee:	inc    ecx
  41b1ef:	sub    al,BYTE PTR [esi+0x1cc28a0b]
  41b1f5:	pop    edi
  41b1f6:	pop    ds
  41b1f7:	ins    DWORD PTR es:[edi],dx
  41b1f8:	add    DWORD PTR [esi-0x70870a72],ebx
  41b1fe:	mov    eax,ds:0xe2f1f0d2
  41b203:	inc    edi
  41b204:	push   ebx
  41b205:	and    BYTE PTR [esi-0x73],bh
  41b208:	das    
  41b209:	in     al,dx
  41b20a:	ins    DWORD PTR es:[edi],dx
  41b20b:	(bad)  
  41b20c:	call   0x61682da7
  41b211:	mov    ch,0x82
  41b213:	pop    ds
  41b214:	mov    DWORD PTR [edx-0x6c4d1282],ecx
  41b21a:	jl     0x41b23c
  41b21c:	dec    ecx
  41b21d:	fsubp  st(2),st
  41b21f:	imul   esp,DWORD PTR [edi+ebp*2+0x12],0xc4287522
  41b227:	push   edi
  41b228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b229:	das    
  41b22a:	sub    eax,DWORD PTR [ebp+0x456c2de4]
  41b230:	ins    DWORD PTR es:[edi],dx
  41b231:	jb     0x41b256
  41b233:	lahf   
  41b234:	xchg   edx,eax
  41b235:	and    al,0xae
  41b237:	pop    esp
  41b238:	cmp    eax,0x8590c279
  41b23d:	pop    ds
  41b23e:	push   es
  41b23f:	sub    eax,0x35d4f84
  41b244:	xor    ecx,DWORD PTR [esp+0x33f9f282]
  41b24b:	sti    
  41b24c:	bound  eax,QWORD PTR [ebp+eax*1-0x18]
  41b250:	pusha  
  41b251:	frstor [esi+0x37]
  41b254:	and    esp,ebp
  41b256:	stc    
  41b257:	sti    
  41b258:	and    esp,edx
  41b25a:	or     BYTE PTR [ebp+0x65],0xee
  41b25e:	fdiv   QWORD PTR [ecx]
  41b260:	fistp  QWORD PTR [edi+0x27]
  41b263:	sub    al,0x98
  41b265:	in     al,0xf2
  41b267:	jae    0x41b211
  41b269:	sub    BYTE PTR [edi],cl
  41b26b:	outs   dx,BYTE PTR ds:[esi]
  41b26c:	xor    BYTE PTR [ebx],0xec
  41b26f:	mov    eax,0x202c0138
  41b274:	sti    
  41b275:	add    al,0x63
  41b277:	push   ebx
  41b278:	add    bh,ch
  41b27a:	mov    ds:0x3a919cf6,al
  41b27f:	std    
  41b280:	out    dx,eax
  41b281:	imul   edx,DWORD PTR [edx+0x24b9e019],0xffffff9f
  41b288:	push   ebx
  41b289:	sub    ebp,DWORD PTR ds:0x1a5503db
  41b28f:	outs   dx,DWORD PTR ds:[esi]
  41b290:	mov    dl,0xb7
  41b292:	pop    edx
  41b293:	int    0x87
  41b295:	std    
  41b296:	test   al,0x7d
  41b298:	and    DWORD PTR [eax],ebp
  41b29a:	inc    edi
  41b29b:	mov    bh,0x45
  41b29d:	cmc    
  41b29e:	mov    WORD PTR [ecx+0x6c],es
  41b2a1:	jg     0x41b252
  41b2a3:	cli    
  41b2a4:	pop    edx
  41b2a5:	outs   dx,DWORD PTR ds:[esi]
  41b2a6:	lea    ebp,es:[eax]
  41b2a9:	and    al,0x90
  41b2ab:	sahf   
  41b2ac:	fidiv  WORD PTR [esi-0x3d]
  41b2af:	xchg   eax,esp
  41b2b1:	or     ecx,DWORD PTR [eax+0x7078db8e]
  41b2b7:	mov    edx,0x8e152892
  41b2bc:	push   esi
  41b2bd:	add    BYTE PTR [ecx],ch
  41b2bf:	jb     0x41b2e2
  41b2c1:	pop    ebx
  41b2c2:	leave  
  41b2c3:	xchg   ebp,eax
  41b2c4:	mov    ch,0xf3
  41b2c6:	retf   
  41b2c7:	mov    ah,0x42
  41b2c9:	mov    ebx,esi
  41b2cb:	jp     0x41b2ef
  41b2cd:	pop    edx
  41b2ce:	jecxz  0x41b2cc
  41b2d0:	std    
  41b2d1:	je     0x41b2e0
  41b2d3:	mov    ebx,0x891b280c
  41b2d8:	rol    cl,0x22
  41b2db:	retf   
  41b2dc:	pop    esp
  41b2dd:	outs   dx,DWORD PTR ds:[esi]
  41b2de:	ins    BYTE PTR es:[edi],dx
  41b2df:	iret   
  41b2e0:	je     0x41b281
  41b2e2:	push   eax
  41b2e3:	jmp    0x2ee6c063
  41b2e8:	pop    ebp
  41b2e9:	(bad)  
  41b2ea:	sbb    BYTE PTR [ecx],0xa0
  41b2ed:	mov    bh,0xa9
  41b2ef:	xchg   edx,eax
  41b2f0:	xchg   edi,eax
  41b2f1:	test   dh,0xdd
  41b2f4:	ror    edi,0xfb
  41b2f7:	add    al,0xa0
  41b2f9:	icebp  
  41b2fa:	test   eax,0xb2184c96
  41b2ff:	mov    al,ds:0xd295cbfd
  41b304:	int    0xfc
  41b306:	jecxz  0x41b2c2
  41b308:	cmp    al,0xc1
  41b30a:	mov    bh,0xd3
  41b30c:	retf   0x3f08
  41b30f:	in     al,0x4f
  41b311:	arpl   WORD PTR [edi-0x2f2e615c],dx
  41b317:	sub    eax,0x5e5361c2
  41b31c:	xor    esp,esi
  41b31e:	inc    edx
  41b31f:	ds mov ch,0xe1
  41b322:	outs   dx,BYTE PTR ds:[esi]
  41b323:	ftst   
  41b325:	adc    DWORD PTR ds:0xc8a43598,0xf5e4f11a
  41b32f:	les    ecx,FWORD PTR [eax]
  41b331:	inc    esp
  41b332:	repz pop eax
  41b334:	xchg   ecx,eax
  41b335:	mov    ds:0x92c4e6ea,al
  41b33a:	xchg   BYTE PTR [ebp-0x2e],bh
  41b33d:	adc    al,0x94
  41b33f:	loop   0x41b365
  41b341:	enter  0xf65,0x72
  41b345:	repz adc al,0x6
  41b348:	outs   dx,BYTE PTR ds:[esi]
  41b349:	call   0xbafc:0x876ccfa7
  41b350:	inc    esi
  41b351:	shl    bh,0x4
  41b354:	mov    es,WORD PTR [edi-0x755b0fa8]
  41b35a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b35b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b35c:	sbb    eax,DWORD PTR [eax-0x32180bc9]
  41b362:	jge    0x41b2e5
  41b364:	loope  0x41b337
  41b366:	out    dx,eax
  41b367:	pop    ss
  41b368:	test   eax,0x3e24c23d
  41b36d:	xor    ecx,DWORD PTR [ebp+0x39]
  41b370:	jge    0x41b378
  41b372:	sub    ebp,0x33
  41b375:	in     al,0x2f
  41b377:	mov    ebp,0x819aa70b
  41b37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b37d:	cmp    BYTE PTR [ecx+eax*1],dl
  41b380:	sub    al,0xa2
  41b382:	mov    bh,0x66
  41b384:	add    al,0x31
  41b386:	add    eax,esi
  41b388:	fs sub al,0x7e
  41b38b:	add    DWORD PTR [edx],eax
  41b38d:	loop   0x41b3e6
  41b38f:	mov    esp,0xc3cbbc21
  41b394:	fwait
  41b395:	test   al,0x47
  41b397:	sbb    DWORD PTR [ebx+ebx*2+0x45],ebp
  41b39b:	pop    ebp
  41b39c:	inc    ecx
  41b39d:	ins    DWORD PTR es:[edi],dx
  41b39e:	ins    BYTE PTR es:[edi],dx
  41b39f:	xchg   esi,eax
  41b3a0:	rcl    DWORD PTR [esi+0x69],cl
  41b3a3:	xchg   BYTE PTR [esi+0x61e68409],dh
  41b3a9:	sub    BYTE PTR ds:0x74a6dac3,cl
  41b3af:	je     0x41b413
  41b3b1:	adc    eax,0x4f630bf3
  41b3b6:	pop    ss
  41b3b7:	out    dx,eax
  41b3b8:	mov    WORD PTR [esp+esi*1+0x60e1a323],fs
  41b3bf:	loope  0x41b3ef
  41b3c1:	pop    edi
  41b3c2:	push   ds
  41b3c3:	scas   eax,DWORD PTR es:[edi]
  41b3c4:	leave  
  41b3c5:	test   eax,0xd050ad84
  41b3ca:	lods   eax,DWORD PTR ds:[esi]
  41b3cb:	mov    eax,DWORD PTR [edi-0x5b867984]
  41b3d1:	pop    ss
  41b3d2:	mov    ah,0xc9
  41b3d4:	vhsubpd ymm5,ymm6,YMMWORD PTR [ebx+eax*2]
  41b3d9:	cli    
  41b3da:	repnz cmp ecx,DWORD PTR [ebx-0x76]
  41b3de:	mov    eax,0xf64b347f
  41b3e3:	cmp    BYTE PTR [ebx+0x36],ch
  41b3e6:	mov    ch,0xed
  41b3e8:	retf   0x3b67
  41b3eb:	fidivr DWORD PTR [ebx]
  41b3ed:	dec    edx
  41b3ee:	hlt    
  41b3ef:	test   eax,0x71e25f09
  41b3f4:	xchg   edi,eax
  41b3f5:	sar    DWORD PTR [edx],cl
  41b3f7:	dec    edx
  41b3f8:	mov    ebx,0x743f245c
  41b3fd:	imul   ebx,DWORD PTR [edx],0xffffffb5
  41b400:	dec    ebx
  41b401:	xor    DWORD PTR [ebx+0x61],esi
  41b404:	clc    
  41b405:	mov    edi,0x628fc84e
  41b40a:	fs imul esi,edi,0x56
  41b40e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b410:	pop    edx
  41b411:	stos   DWORD PTR es:[edi],eax
  41b412:	dec    esi
  41b413:	fsub   st,st(2)
  41b415:	push   edi
  41b416:	inc    ebx
  41b417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b418:	jecxz  0x41b3a8
  41b41a:	mov    eax,ds:0xe59d8b4f
  41b41f:	jecxz  0x41b412
  41b421:	push   ecx
  41b422:	mov    edx,0x3d2bd5d5
  41b427:	pop    es
  41b428:	jg     0x41b3b9
  41b42a:	xlat   BYTE PTR ds:[ebx]
  41b42b:	fmul   DWORD PTR [ebx-0x6d]
  41b42e:	push   edi
  41b42f:	or     dl,bl
  41b431:	cmp    al,0x71
  41b433:	arpl   WORD PTR [edi-0x6a],cx
  41b436:	cld    
  41b437:	pop    ecx
  41b438:	push   0x18d79407
  41b43d:	stc    
  41b43e:	ds cld 
  41b440:	jmp    0x41b43d
  41b442:	inc    ebx
  41b443:	sub    eax,0x6406b130
  41b448:	push   eax
  41b449:	rol    DWORD PTR [ebx+ebx*2+0x6a24a485],cl
  41b450:	and    ch,BYTE PTR [esi]
  41b452:	int    0xbc
  41b454:	pop    ecx
  41b455:	cmp    al,0x29
  41b457:	pop    es
  41b458:	jnp    0x41b3ec
  41b45a:	sub    bl,BYTE PTR [eax+esi*4]
  41b45d:	sar    cl,0x57
  41b460:	retf   0x962c
  41b463:	push   ecx
  41b464:	addr16 int3 
  41b466:	inc    esi
  41b467:	adc    eax,0xcabc2ea0
  41b46c:	mov    ds:0x56b98001,eax
  41b471:	cmp    DWORD PTR [esi+ebx*4-0x424a41d9],esi
  41b478:	push   ecx
  41b479:	inc    edx
  41b47a:	sub    edx,esi
  41b47c:	cli    
  41b47d:	mov    ebx,0x79430d85
  41b482:	dec    ebx
  41b483:	das    
  41b484:	sub    BYTE PTR [ebp+0x5],dh
  41b487:	push   edx
  41b488:	cmp    esp,DWORD PTR [esi-0x499a6603]
  41b48e:	mov    eax,ds:0x6207fd27
  41b493:	sar    BYTE PTR [edi-0x67],cl
  41b496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b497:	pop    es
  41b498:	cmp    ebp,ecx
  41b49a:	inc    esp
  41b49b:	loop   0x41b4ee
  41b49d:	aam    0x62
  41b49f:	lea    edi,[ebx+0x1f]
  41b4a2:	call   0x9ca3:0xac9b661e
  41b4a9:	and    BYTE PTR [ecx-0xe],dl
  41b4ac:	push   ss
  41b4ad:	and    dh,al
  41b4af:	ds ret 0xe2f1
  41b4b3:	int3   
  41b4b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4b5:	xor    eax,0x4b2af37d
  41b4ba:	sbb    cl,bl
  41b4bc:	retf   0x1c2
  41b4bf:	sti    
  41b4c0:	sbb    edi,DWORD PTR [edi+0x5836d771]
  41b4c6:	xor    al,0xc2
  41b4c8:	mov    ebp,0xa9ad1e6b
  41b4cd:	push   cs
  41b4ce:	stos   DWORD PTR es:[edi],eax
  41b4cf:	cld    
  41b4d0:	rol    ah,1
  41b4d2:	adc    BYTE PTR ds:0xdd6f88bd,dl
  41b4d8:	mov    BYTE PTR [eax],dl
  41b4da:	mov    ds:0x384700f2,eax
  41b4df:	mov    ebp,0x9b6f3211
  41b4e4:	cmp    eax,DWORD PTR [ebx]
  41b4e6:	sub    dl,ch
  41b4e8:	cmp    ebx,DWORD PTR [edx-0x37]
  41b4eb:	add    al,0x39
  41b4ed:	push   edx
  41b4ee:	adc    eax,0x739a820d
  41b4f3:	sbb    DWORD PTR [ebx+0x6aa35270],esp
  41b4f9:	push   ds
  41b4fa:	dec    ecx
  41b4fb:	retf   
  41b4fc:	(bad)  
  41b4fd:	push   ss
  41b4fe:	loop   0x41b4b6
  41b500:	xchg   esi,eax
  41b501:	aaa    
  41b502:	add    DWORD PTR [edx+0x2fb7bfe8],edi
  41b508:	jno    0x41b4d2
  41b50a:	sub    esi,edi
  41b50c:	je     0x41b4a6
  41b50e:	mov    ebp,0x83f82ce8
  41b513:	push   ebx
  41b514:	xchg   esi,eax
  41b515:	(bad)  
  41b516:	scas   eax,DWORD PTR es:[edi]
  41b517:	scas   eax,DWORD PTR es:[edi]
  41b518:	mov    ds:0x712b5d6d,al
  41b51d:	pop    es
  41b51e:	jl     0x41b4c1
  41b520:	add    DWORD PTR [eax-0x27],edi
  41b523:	jno    0x41b557
  41b525:	jo     0x41b4b5
  41b527:	adc    BYTE PTR [edx-0x11],ch
  41b52a:	std    
  41b52b:	dec    edi
  41b52c:	test   al,0xd3
  41b52e:	into   
  41b52f:	int3   
  41b530:	add    al,0x8b
  41b532:	or     edx,DWORD PTR [edx+0x58]
  41b535:	inc    edi
  41b536:	mov    edx,0x4ad1a53d
  41b53b:	sbb    eax,0xacb08cbb
  41b540:	inc    edx
  41b541:	push   ss
  41b542:	or     BYTE PTR [edx+esi*4],bh
  41b545:	sbb    eax,0xc0ad4d4b
  41b54a:	pop    ecx
  41b54b:	lahf   
  41b54c:	dec    ebx
  41b54d:	aam    0x8a
  41b54f:	mov    dh,0x30
  41b551:	mov    edx,0x4e58d81b
  41b556:	mov    dh,0xb7
  41b558:	ret    
  41b559:	iret   
  41b55a:	pop    ss
  41b55b:	loope  0x41b592
  41b55d:	xchg   edi,eax
  41b55e:	clc    
  41b55f:	xor    DWORD PTR [edx+0x21128223],edi
  41b565:	clc    
  41b566:	add    BYTE PTR [esi+0x68],bl
  41b569:	lahf   
  41b56a:	fld    QWORD PTR [edi+ebx*8-0x6a50040b]
  41b571:	pop    ecx
  41b572:	cmp    esi,esp
  41b574:	and    eax,0xbc2e9b58
  41b579:	imul   esi,ecx,0x13
  41b57c:	xlat   BYTE PTR ds:[ebx]
  41b57d:	sahf   
  41b57e:	outs   dx,BYTE PTR ds:[esi]
  41b57f:	sbb    BYTE PTR ds:0xc5492e5e,bh
  41b585:	imul   edi,esi,0x48
  41b588:	inc    esp
  41b589:	xchg   ebx,eax
  41b58a:	and    al,0x17
  41b58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b58d:	in     eax,dx
  41b58e:	pop    esi
  41b58f:	cs iret 
  41b591:	popa   
  41b592:	add    BYTE PTR [edx*1+0x7d9317fe],cl
  41b599:	test   DWORD PTR [esi-0x5e521fd5],eax
  41b59f:	aas    
  41b5a0:	xchg   edx,eax
  41b5a1:	cli    
  41b5a2:	retf   
  41b5a3:	mov    ds:0x65ec5149,al
  41b5a8:	popa   
  41b5a9:	add    BYTE PTR [ebp+0x2f],cl
  41b5ac:	sar    DWORD PTR [ecx],0x65
  41b5af:	aad    0xdd
  41b5b1:	sub    esp,DWORD PTR [ecx-0x484cd22b]
  41b5b7:	into   
  41b5b8:	xchg   esi,eax
  41b5b9:	mov    eax,DWORD PTR [esi]
  41b5bb:	sahf   
  41b5bc:	adc    ch,dl
  41b5be:	aad    0x6b
  41b5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5c1:	add    BYTE PTR [edx+0x7a],bh
  41b5c4:	adc    al,BYTE PTR [ebx-0x40]
  41b5c7:	leave  
  41b5c8:	sbb    ebp,DWORD PTR [edx]
  41b5ca:	fs repz push eax
  41b5cd:	xchg   esp,eax
  41b5ce:	mov    ebx,0x475a52fd
  41b5d3:	jle    0x41b556
  41b5d5:	test   DWORD PTR [eax+eiz*2],ebx
  41b5d8:	inc    esi
  41b5d9:	jge    0x41b616
  41b5db:	retf   0x3b6d
  41b5de:	pusha  
  41b5df:	and    al,0x8e
  41b5e1:	push   DWORD PTR [ebx+0x7ff5ea6b]
  41b5e7:	or     esi,DWORD PTR [edi+ecx*4+0x44]
  41b5eb:	outs   dx,DWORD PTR ds:[esi]
  41b5ec:	mov    dl,0x98
  41b5ee:	mov    ds:0x5da65c30,al
  41b5f3:	push   ebp
  41b5f4:	or     al,0x8a
  41b5f6:	add    edi,DWORD PTR [edx]
  41b5f8:	in     eax,dx
  41b5f9:	int3   
  41b5fa:	scas   eax,DWORD PTR es:[edi]
  41b5fb:	les    ebp,FWORD PTR [edx-0x4745a657]
  41b601:	jg     0x41b5c0
  41b603:	mov    bh,0x34
  41b605:	bsr    edi,DWORD PTR [eax]
  41b608:	or     DWORD PTR [eax-0x4a2d4fe6],ebp
  41b60e:	in     eax,0x66
  41b610:	mov    dh,0x67
  41b612:	push   0x14
  41b614:	das    
  41b615:	xor    BYTE PTR [esi-0x52],dh
  41b618:	xchg   ebp,eax
  41b619:	cdq    
  41b61a:	psrlq  mm4,QWORD PTR [esp+edx*4-0x66]
  41b61f:	hlt    
  41b620:	pop    es
  41b621:	ret    
  41b622:	xor    DWORD PTR [edi],esp
  41b624:	(bad)  [edi+0x2d]
  41b627:	sub    BYTE PTR [edx+edi*4+0x42],ah
  41b62b:	and    BYTE PTR [ebx],ah
  41b62d:	push   cs
  41b62e:	imul   ebp,esp,0xffffffe1
  41b631:	icebp  
  41b632:	aam    0x57
  41b634:	xor    ebp,DWORD PTR [eax+0x1d]
  41b637:	jbe    0x41b65f
  41b639:	and    ecx,DWORD PTR [edi-0x7420a1a6]
  41b63f:	and    al,0xbe
  41b641:	arpl   WORD PTR [ebx-0x7e4faa75],ax
  41b647:	ror    ebp,0xeb
  41b64a:	inc    edx
  41b64b:	add    dh,BYTE PTR [ebx]
  41b64d:	retf   0x4d89
  41b650:	mov    al,0x8b
  41b652:	dec    ebp
  41b653:	or     BYTE PTR [ebx-0x30fc4bab],cl
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a72f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a733
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a737
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a73b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a73f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a743
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42986b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a74b
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a713
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429bef
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a71b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a71f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a723
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a727
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shr    DWORD PTR [edi+0x3e],cl
  41bf77:	xor    eax,0x82f9bb62
  41bf7c:	sbb    ecx,0x5c
  41bf7f:	add    DWORD PTR [ebx-0x1414d2f9],0xffffffca
  41bf86:	xchg   ecx,eax
  41bf87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf88:	test   eax,0x1f6cd329
  41bf8d:	jbe    0x41bfc5
  41bf8f:	jl     0x41c006
  41bf91:	sar    BYTE PTR es:[ecx+eax*4],cl
  41bf95:	mov    ds:0x19de1bf7,al
  41bf9a:	cmp    al,0x10
  41bf9c:	test   eax,0x1f5c1381
  41bfa1:	jbe    0x41bfc9
  41bfa3:	loopne 0x41bfb3
  41bfa5:	inc    edx
  41bfa6:	and    edx,DWORD PTR [edi+edx*4-0x4c]
  41bfaa:	mov    edi,0x76d344af
  41bfaf:	les    esp,FWORD PTR [edi-0x22]
  41bfb2:	daa    
  41bfb3:	xchg   edi,eax
  41bfb4:	repnz or DWORD PTR [ebx],0xffffffea
  41bfb8:	lahf   
  41bfb9:	aam    0xfd
  41bfbb:	cmc    
  41bfbc:	out    0xc5,eax
  41bfbe:	je     0x41bfa6
  41bfc0:	cmp    esi,DWORD PTR [edx+0x31]
  41bfc3:	mov    dl,BYTE PTR [ecx]
  41bfc5:	int    0xe
  41bfc7:	add    DWORD PTR [edi],edi
  41bfc9:	ja     0x41c010
  41bfcb:	pop    edx
  41bfcc:	fistp  WORD PTR [edx]
  41bfce:	or     ch,BYTE PTR [ebx-0x5b39742c]
  41bfd4:	loopne 0x41c040
  41bfd6:	jnp    0x41c035
  41bfd8:	jge    0x41bfdc
  41bfda:	mov    BYTE PTR [esi-0x7e9ffbb2],al
  41bfe0:	adc    bh,BYTE PTR [esp+ebp*2]
  41bfe3:	dec    esp
  41bfe4:	cmp    eax,0x8832ecc0
  41bfe9:	inc    edi
  41bfea:	sbb    DWORD PTR [esi],ebx
  41bfec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfed:	adc    eax,ebp
  41bfef:	hlt    
  41bff0:	(bad)  
  41bff1:	fcomp  DWORD PTR [ebp-0x2356939a]
  41bff7:	sub    BYTE PTR [ecx+0x2b],0xa8
  41bffb:	scas   eax,DWORD PTR es:[edi]
  41bffc:	mov    eax,ds:0x9aa51234
  41c001:	das    
  41c002:	ja     0x41bfa5
  41c004:	jne    0x41c020
  41c006:	sbb    ah,BYTE PTR [edx+0x692556d5]
  41c00c:	inc    ecx
  41c00d:	xor    BYTE PTR [edi-0x1b],dl
  41c010:	call   0x101e2d62
  41c015:	outs   dx,BYTE PTR ds:[esi]
  41c016:	sub    eax,0x6d03d5f8
  41c01b:	push   esp
  41c01c:	xchg   BYTE PTR [ebp+0x76],ch
  41c01f:	test   eax,0xae2f945c
  41c024:	or     ah,al
  41c026:	rol    DWORD PTR [ebx],1
  41c028:	jmp    0x71f6:0x1dff5769
  41c02f:	dec    esi
  41c030:	shr    DWORD PTR [edx+eiz*2-0x19],1
  41c034:	cdq    
  41c035:	loope  0x41bfe2
  41c037:	xor    DWORD PTR [eax+0x1c9463c6],ebp
  41c03d:	arpl   WORD PTR ds:0x2697bb1,dx
  41c043:	call   0xbf528068
  41c048:	jne    0x41c019
  41c04a:	xor    edx,DWORD PTR [ecx+0x28aa73a4]
  41c050:	popa   
  41c051:	adc    cl,ah
  41c053:	mov    eax,0xee803367
  41c058:	pop    esp
  41c059:	adc    DWORD PTR [esi],0xffffffdc
  41c05c:	inc    ebp
  41c05d:	inc    esi
  41c05e:	(bad)  
  41c05f:	mov    ebx,0x72f3b96e
  41c064:	mov    ebx,eax
  41c066:	push   0x13
  41c068:	and    bh,BYTE PTR [ebx-0x6ec59adc]
  41c06e:	mov    dh,0x5b
  41c070:	mov    ecx,0xe91ca411
  41c075:	mov    ds:0x955024fe,eax
  41c07a:	ja     0x41c029
  41c07c:	sbb    DWORD PTR [ecx+0xe],eax
  41c07f:	imul   esi,DWORD PTR [ecx],0xfffffffb
  41c082:	adc    al,BYTE PTR [edi-0x443178b1]
  41c088:	call   0x6a71:0xdfa4f2a8
  41c08f:	(bad)  [eax+eiz*4-0x6ede7efb]
  41c096:	sub    BYTE PTR [eax],dh
  41c098:	test   al,0xc0
  41c09a:	loopne 0x41c0e5
  41c09c:	sub    ecx,DWORD PTR [ecx]
  41c09e:	mov    ebx,DWORD PTR [eax-0x442b0994]
  41c0a4:	add    BYTE PTR [edx+0x15],al
  41c0a7:	icebp  
  41c0a8:	jle    0x41c030
  41c0aa:	or     BYTE PTR [edx],0xab
  41c0ad:	dec    esi
  41c0ae:	adc    edi,0xffffff87
  41c0b1:	stc    
  41c0b2:	pop    es
  41c0b3:	ins    DWORD PTR es:[di],dx
  41c0b5:	ret    
  41c0b6:	std    
  41c0b7:	sbb    al,0x3a
  41c0b9:	inc    esp
  41c0ba:	or     eax,0xfde6c262
  41c0bf:	fldcw  WORD PTR [ebx]
  41c0c1:	mov    DWORD PTR [edx],ecx
  41c0c3:	and    eax,0xa7dc97bd
  41c0c8:	xchg   esi,eax
  41c0c9:	dec    ebx
  41c0ca:	jne    0x41c108
  41c0cc:	call   0x4c93ecd6
  41c0d1:	pop    edx
  41c0d2:	loopne 0x41c13d
  41c0d4:	aam    0x4e
  41c0d6:	out    0x32,eax
  41c0d8:	push   edi
  41c0d9:	dec    edx
  41c0da:	mov    eax,0x65544733
  41c0df:	push   eax
  41c0e0:	xor    DWORD PTR [eax-0x37bc47f3],ebp
  41c0e6:	jae    0x41c117
  41c0e8:	outs   dx,BYTE PTR ds:[esi]
  41c0e9:	loop   0x41c165
  41c0eb:	mov    ah,0x42
  41c0ed:	jmp    0x95429c63
  41c0f2:	imul   ebx,DWORD PTR [ecx],0x4c02edd8
  41c0f8:	push   ebx
  41c0f9:	(bad)  
  41c0fa:	pop    ebp
  41c0fb:	fimul  WORD PTR [ecx+0x15]
  41c0fe:	icebp  
  41c0ff:	mov    WORD PTR [esi-0x4b],ss
  41c102:	sbb    eax,0x87ba6771
  41c107:	mov    ah,0x7c
  41c109:	stc    
  41c10a:	jle    0x41c0ac
  41c10c:	mov    edi,0xcec2021e
  41c111:	push   edx
  41c112:	xor    BYTE PTR [edi],ah
  41c114:	arpl   WORD PTR ds:0x8de3e7a2,bp
  41c11a:	int    0x98
  41c11c:	mov    dl,BYTE PTR [ebp-0x593884b8]
  41c122:	bound  eax,QWORD PTR ds:[eax]
  41c125:	dec    edi
  41c126:	mov    ebp,0x64c5f7c2
  41c12b:	test   BYTE PTR [ebp+0x71],dh
  41c12e:	add    DWORD PTR [ebp-0x6cc6a479],esp
  41c134:	adc    edx,DWORD PTR cs:[edx]
  41c137:	dec    ebp
  41c138:	out    dx,al
  41c139:	push   0x15
  41c13b:	mov    eax,0x3a4d576e
  41c140:	push   ds
  41c141:	in     eax,dx
  41c142:	int    0x6b
  41c144:	cmc    
  41c145:	lea    dx,[ebx+0x61]
  41c149:	xor    eax,0xddd1ca6c
  41c14e:	wbinvd 
  41c150:	stos   BYTE PTR es:[edi],al
  41c151:	jne    0x41c101
  41c153:	or     eax,DWORD PTR [edx]
  41c155:	pop    DWORD PTR [ebx-0x7]
  41c158:	cmp    esi,edi
  41c15a:	out    dx,eax
  41c15b:	xor    edx,esi
  41c15d:	add    BYTE PTR [ebx+0x729beee1],ch
  41c163:	ins    DWORD PTR es:[edi],dx
  41c164:	bound  edx,QWORD PTR [edi]
  41c166:	xchg   edi,eax
  41c167:	sub    al,0xc9
  41c16a:	add    al,bl
  41c16c:	pop    edx
  41c16d:	nop
  41c16e:	ds scas al,BYTE PTR es:[edi]
  41c170:	mov    ch,0x8e
  41c172:	sbb    DWORD PTR [esi],ebx
  41c174:	ror    BYTE PTR ds:0x430283fd,cl
  41c17a:	jmp    0x5e9716ad
  41c17f:	mov    es,WORD PTR [edx-0x3ab03da5]
  41c185:	xchg   ecx,eax
  41c186:	xchg   edx,eax
  41c187:	add    al,0x9b
  41c189:	cmp    cl,BYTE PTR [edx-0x2d9c0d7e]
  41c18f:	dec    BYTE PTR [esi+0x40]
  41c192:	mov    ds:0xc003b8ca,al
  41c197:	or     eax,0xc70c8c76
  41c19c:	hlt    
  41c19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c19e:	push   esi
  41c19f:	or     ch,dl
  41c1a1:	jecxz  0x41c1a3
  41c1a3:	mov    ebp,0x8ed15257
  41c1a8:	add    edi,DWORD PTR [ebp-0x79]
  41c1ab:	scas   al,BYTE PTR es:[edi]
  41c1ac:	retf   
  41c1ad:	pop    edi
  41c1ae:	push   ss
  41c1af:	(bad)  
  41c1b0:	adc    DWORD PTR es:[ecx+0x54d2bd58],ebx
  41c1b7:	(bad)  
  41c1b9:	out    0x6e,eax
  41c1bb:	xchg   esi,eax
  41c1bc:	mov    al,dh
  41c1be:	neg    DWORD PTR [eax+0x315196ff]
  41c1c4:	inc    ebp
  41c1c5:	stc    
  41c1c6:	pop    ebp
  41c1c7:	adc    bl,cl
  41c1c9:	ficom  DWORD PTR [esi+ecx*2+0x32883d2]
  41c1d0:	mov    al,ds:0x732e6f36
  41c1d5:	xchg   bl,dh
  41c1d7:	fst    st(3)
  41c1d9:	adc    dl,bl
  41c1db:	add    ecx,ecx
  41c1dd:	and    ebp,ebx
  41c1df:	fcomp  st(5)
  41c1e1:	dec    esi
  41c1e2:	mov    ds:0xb6181cd3,al
  41c1e7:	adc    ch,dl
  41c1e9:	push   eax
  41c1ea:	sub    eax,0xc430a5d3
  41c1ef:	in     eax,0xb2
  41c1f1:	gs xchg ebp,eax
  41c1f3:	dec    ecx
  41c1f4:	pop    ebx
  41c1f5:	adc    al,0x6b
  41c1f7:	xor    BYTE PTR [ebx-0x328b5831],0xe1
  41c1fe:	mov    BYTE PTR [ebp-0x8e50690],al
  41c204:	nop
  41c205:	xchg   bl,cl
  41c207:	mov    ebx,edx
  41c209:	lahf   
  41c20a:	xor    edi,esi
  41c20c:	imul   esp,DWORD PTR [edx],0xdbbf4bcd
  41c212:	adc    ch,BYTE PTR [eax]
  41c214:	xchg   cl,dh
  41c216:	bnd jne 0x41c20f
  41c219:	pop    edi
  41c21a:	imul   edx,DWORD PTR [esi],0x5774ee85
  41c220:	nop
  41c221:	stc    
  41c222:	mov    cl,0x2f
  41c224:	push   edx
  41c225:	or     ecx,edx
  41c227:	(bad)  
  41c229:	dec    esp
  41c22a:	fidivr WORD PTR [ebx+ebx*8-0x691bbef8]
  41c231:	xchg   ebp,eax
  41c232:	mov    dh,0x68
  41c234:	and    ecx,DWORD PTR [eax-0x41]
  41c237:	and    BYTE PTR [ebx-0x5f],bh
  41c23a:	ds lahf 
  41c23c:	cs pop ecx
  41c23e:	jmp    0x41c229
  41c240:	mov    al,0xec
  41c242:	lahf   
  41c243:	inc    ecx
  41c244:	mov    cl,BYTE PTR [eax-0x795377b7]
  41c24a:	cmc    
  41c24b:	in     al,dx
  41c24c:	fadd   st(3),st
  41c24e:	outs   dx,DWORD PTR ds:[esi]
  41c24f:	mov    bl,0xf2
  41c251:	fstp   DWORD PTR [ecx-0xdb31272]
  41c257:	ja     0x41c1da
  41c259:	ret    0x2a3f
  41c25c:	jb     0x41c220
  41c25e:	push   eax
  41c25f:	pusha  
  41c260:	std    
  41c261:	adc    al,0x7f
  41c263:	dec    edx
  41c264:	adc    BYTE PTR [edi+0x74bc636d],bh
  41c26a:	push   esp
  41c26b:	pusha  
  41c26c:	jmp    0x3b95:0xf58e6390
  41c273:	adc    bh,BYTE PTR [eax]
  41c275:	out    dx,eax
  41c276:	je     0x41c22a
  41c278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c279:	repz push eax
  41c27b:	xchg   DWORD PTR [edi-0x7a],ebx
  41c27e:	adc    BYTE PTR [edi+eiz*2],bh
  41c281:	pop    ecx
  41c282:	jns    0x41c285
  41c284:	popf   
  41c285:	mov    ds:0xad8ff7de,al
  41c28a:	jmp    0xd83b:0x29f3b5c8
  41c291:	dec    ebx
  41c292:	sbb    edx,DWORD PTR [ebp-0x13]
  41c295:	gs enter 0xcf22,0xc9
  41c29a:	into   
  41c29b:	dec    edi
  41c29c:	jmp    0x41c25d
  41c29e:	jnp    0x41c224
  41c2a0:	sbb    esp,DWORD PTR [ecx-0x7]
  41c2a3:	fs mov cl,0x73
  41c2a6:	ror    BYTE PTR [eax+0x75],cl
  41c2a9:	(bad)  
  41c2aa:	lea    esi,[ebx]
  41c2ac:	test   BYTE PTR [eax+0x6ffc22f3],dl
  41c2b2:	inc    esi
  41c2b3:	sbb    eax,0xefd8fbb4
  41c2b8:	adc    al,0x3
  41c2ba:	femms  
  41c2bc:	daa    
  41c2bd:	popf   
  41c2be:	mov    dh,ah
  41c2c0:	mov    al,ds:0x10995e59
  41c2c5:	jmp    0x1731:0x1c7e5e9b
  41c2cc:	jns    0x41c318
  41c2ce:	stc    
  41c2cf:	shl    DWORD PTR [ebp+0x1],cl
  41c2d2:	mov    dh,0xdf
  41c2d4:	mov    esi,0x30946050
  41c2d9:	gs push ebx
  41c2db:	pop    ecx
  41c2dc:	jecxz  0x41c30c
  41c2de:	arpl   WORD PTR [ebx],si
  41c2e0:	inc    ecx
  41c2e1:	test   al,0xfe
  41c2e3:	ss xchg ebx,eax
  41c2e5:	mov    bl,BYTE PTR [ebx]
  41c2e7:	inc    eax
  41c2e8:	or     al,0xb3
  41c2ea:	lods   eax,DWORD PTR ds:[esi]
  41c2eb:	test   DWORD PTR [ebp+0x6d065d64],esi
  41c2f1:	pop    ds
  41c2f2:	out    0xce,eax
  41c2f4:	inc    BYTE PTR [ebx-0x43]
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2f9:	mov    eax,ds:0xbbb6977f
  41c2fe:	xlat   BYTE PTR ds:[ebx]
  41c2ff:	cdq    
  41c300:	jo     0x41c34b
  41c302:	test   al,0xd7
  41c304:	push   edx
  41c305:	aad    0xdb
  41c307:	mov    eax,0x62e596b
  41c30c:	sub    eax,0x9cd28f25
  41c311:	out    0xd6,al
  41c313:	jnp    0x41c34d
  41c315:	mov    bl,0xb2
  41c317:	push   ds
  41c318:	dec    edi
  41c319:	fsubrp st(5),st
  41c31b:	jb     0x41c2dc
  41c31d:	imul   edi,DWORD PTR [esi-0x7f],0x27
  41c321:	xor    dh,BYTE PTR [esi-0x55]
  41c324:	add    dh,BYTE PTR [esi+0x5]
  41c327:	clc    
  41c328:	inc    edi
  41c329:	shr    DWORD PTR [ebx+0x4c8701e6],0xd7
  41c330:	nop
  41c331:	dec    ebx
  41c332:	mov    al,0xe9
  41c334:	inc    ebx
  41c335:	gs jnp 0x41c363
  41c338:	lods   al,BYTE PTR ds:[esi]
  41c339:	int3   
  41c33a:	iret   
  41c33b:	push   esp
  41c33c:	xor    al,0xdc
  41c33e:	call   0x7382a886
  41c343:	pop    es
  41c344:	sub    edx,DWORD PTR [ebx]
  41c346:	or     al,dl
  41c348:	and    si,WORD PTR [edx+esi*2+0x1504fb71]
  41c350:	push   ebx
  41c351:	aas    
  41c352:	(bad)  
  41c353:	(bad)  
  41c354:	sub    BYTE PTR [esi],0x9b
  41c357:	and    BYTE PTR [ecx-0x64],bh
  41c35a:	mov    bh,0xe9
  41c35c:	adc    eax,0xd5b097df
  41c361:	push   eax
  41c362:	stos   DWORD PTR es:[edi],eax
  41c363:	cli    
  41c364:	aam    0xf7
  41c366:	cld    
  41c367:	test   BYTE PTR [eax+0x457e4538],ah
  41c36d:	pop    esp
  41c36e:	xor    DWORD PTR [edx+0x7f7e6614],esi
  41c374:	ret    0xd336
  41c377:	int    0x56
  41c379:	xchg   ebp,eax
  41c37a:	inc    ebx
  41c37b:	data16 cmp al,dl
  41c37e:	jg     0x41c3dd
  41c380:	ficom  WORD PTR [edx-0x4a9253f6]
  41c386:	les    esp,FWORD PTR [ecx+edi*1]
  41c389:	sbb    ah,0x15
  41c38c:	or     DWORD PTR [ebp+0x1079d126],esp
  41c392:	jle    0x41c3e2
  41c394:	or     al,0x1d
  41c396:	add    BYTE PTR [ebp+0x7f4de57d],0x94
  41c39d:	mov    cl,0x72
  41c39f:	idiv   BYTE PTR [ecx-0x1e53d532]
  41c3a5:	mov    esp,DWORD PTR [edx]
  41c3a7:	sub    BYTE PTR [eax],al
  41c3a9:	xor    al,0x23
  41c3ab:	fisub  WORD PTR [eax+0x50]
  41c3ae:	sbb    eax,0xbbe12951
  41c3b3:	shl    DWORD PTR [eax-0x40],1
  41c3b6:	adc    esp,edx
  41c3b8:	fisubr WORD PTR [esi+eax*1+0x186836d6]
  41c3bf:	inc    ecx
  41c3c0:	rcl    BYTE PTR ds:0x5a0eef4f,1
  41c3c6:	retf   
  41c3c7:	dec    eax
  41c3c8:	pop    esi
  41c3c9:	pop    ds
  41c3ca:	mov    edx,ds
  41c3cc:	loope  0x41c3f0
  41c3ce:	or     eax,0x5cdac39
  41c3d3:	das    
  41c3d4:	pop    esp
  41c3d5:	imul   esp,DWORD PTR [edx],0xd459cef5
  41c3db:	das    
  41c3dc:	xor    ebp,DWORD PTR [eax]
  41c3de:	or     BYTE PTR [ebx],0xc3
  41c3e1:	mov    eax,ds:0x26ceab6a
  41c3e6:	or     ebx,edx
  41c3e8:	add    DWORD PTR [esp+edx*2+0x77b43f07],0x2f9880c1
  41c3f3:	cmp    al,0xde
  41c3f5:	jp     0x41c37f
  41c3f7:	mov    dl,0x2
  41c3f9:	push   edx
  41c3fa:	test   eax,0x3f519ca4
  41c3ff:	mov    dl,0x47
  41c401:	add    ebx,DWORD PTR [esi]
  41c403:	sbb    BYTE PTR [ebp+0x3a365c36],ch
  41c409:	ret    
  41c40a:	outs   dx,DWORD PTR ds:[esi]
  41c40b:	pop    esp
  41c40c:	mov    eax,0x4f552581
  41c411:	int3   
  41c412:	rol    DWORD PTR [ecx-0x36],1
  41c415:	mov    ecx,0x37481c84
  41c41a:	shl    DWORD PTR [ecx+ecx*4],1
  41c41d:	in     eax,0x63
  41c41f:	stc    
  41c420:	arpl   WORD PTR cs:[ecx],ax
  41c423:	adc    bh,bl
  41c425:	and    eax,DWORD PTR [ecx]
  41c427:	pop    ecx
  41c428:	mov    bh,0x39
  41c42a:	sbb    DWORD PTR [ebp+0x42],ecx
  41c42d:	scas   al,BYTE PTR es:[edi]
  41c42e:	add    DWORD PTR [ebx+0x58efff5d],0x52437c82
  41c438:	shl    ecx,1
  41c43a:	push   ecx
  41c43b:	cmp    eax,0x6555eeae
  41c440:	stc    
  41c441:	cmp    ebx,DWORD PTR [edi+0xc]
  41c444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c445:	jno    0x41c3e2
  41c447:	ror    ebp,0x19
  41c44a:	aam    0xd8
  41c44c:	stos   DWORD PTR es:[edi],eax
  41c44d:	call   0xeb01:0x5f5ab4b8
  41c454:	sub    al,0x72
  41c456:	mov    edi,DWORD PTR [edx-0x46aeff4]
  41c45c:	(bad)  
  41c45d:	xlat   BYTE PTR ds:[ebx]
  41c45e:	pop    ebx
  41c45f:	cmp    dh,BYTE PTR [ecx-0x6275d13b]
  41c465:	mov    al,ds:0x20fed26e
  41c46a:	push   esp
  41c46b:	clc    
  41c46c:	int3   
  41c46d:	(bad)  
  41c46e:	adc    DWORD PTR ds:0x26721e36,esp
  41c474:	jecxz  0x41c3f6
  41c476:	pop    edx
  41c477:	mov    ds:0x3aec398f,al
  41c47c:	pop    ss
  41c47d:	push   edx
  41c47e:	xchg   ecx,eax
  41c47f:	pop    edi
  41c480:	icebp  
  41c481:	inc    esi
  41c482:	sub    al,0x5d
  41c484:	int3   
  41c485:	rol    DWORD PTR [ebx-0x30],cl
  41c488:	retf   0xe2f5
  41c48b:	pop    edx
  41c48c:	push   cs
  41c48d:	xchg   BYTE PTR [edx-0x5b1159d3],bl
  41c493:	pop    ebx
  41c494:	jmp    0x4fee:0x5b14de57
  41c49b:	imul   edi,DWORD PTR [eax],0x583f3c9b
  41c4a1:	mov    bl,0xf0
  41c4a3:	repz mov eax,0xe7395975
  41c4a9:	mov    edi,0xd1b7914e
  41c4ae:	or     dh,cl
  41c4b0:	xor    bl,bh
  41c4b2:	sti    
  41c4b3:	or     al,0x1
  41c4b5:	sbb    cl,BYTE PTR [esi]
  41c4b7:	into   
  41c4b8:	cmp    al,0xce
  41c4ba:	pop    ecx
  41c4bb:	popf   
  41c4bc:	in     al,0x3d
  41c4be:	daa    
  41c4bf:	sbb    eax,DWORD PTR [ebp+ebp*8+0xc]
  41c4c3:	sbb    ebx,DWORD PTR [ecx+0x5ea0bd33]
  41c4c9:	pop    edx
  41c4ca:	popf   
  41c4cb:	fisubr DWORD PTR [edx-0x6f6cbee7]
  41c4d1:	push   0xbcb1eb0
  41c4d6:	or     ebp,edx
  41c4d8:	ins    DWORD PTR es:[edi],dx
  41c4d9:	and    al,0x18
  41c4db:	jmp    0x60bde5ed
  41c4e0:	sbb    dh,dl
  41c4e2:	fsubr  DWORD PTR [ecx-0x25]
  41c4e5:	nop
  41c4e6:	shl    esp,0x3f
  41c4e9:	call   0x3a7e:0xce0b6ad5
  41c4f0:	mov    ds:0x647250ef,eax
  41c4f5:	into   
  41c4f6:	sbb    al,0x19
  41c4f8:	scas   al,BYTE PTR es:[edi]
  41c4f9:	mov    eax,0xe08119e4
  41c4fe:	sbb    al,0xd8
  41c500:	stc    
  41c501:	cmc    
  41c502:	mov    WORD PTR [esi-0x5a971157],ss
  41c508:	rcr    DWORD PTR [edi-0x7504c7d0],0x30
  41c50f:	(bad)  
  41c511:	aaa    
  41c512:	xchg   edx,eax
  41c513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c514:	bound  esp,QWORD PTR [ecx+0x50]
  41c517:	sbb    eax,0xee721ef3
  41c51c:	lahf   
  41c51d:	in     eax,dx
  41c51e:	out    0x65,eax
  41c520:	repz or esp,DWORD PTR [eax-0x1a]
  41c524:	jle    0x41c543
  41c526:	mov    cl,0x55
  41c528:	jg     0x41c500
  41c52a:	cmc    
  41c52b:	push   ds
  41c52c:	jo     0x41c4e6
  41c52e:	stc    
  41c52f:	inc    esi
  41c530:	cmp    dh,BYTE PTR [ebp+0x10]
  41c533:	mov    eax,0x80dfbf1
  41c538:	data16 ror BYTE PTR [ebx-0x2cbb22ac],1
  41c53f:	sub    ebx,DWORD PTR [ebp-0x36]
  41c542:	xor    al,ah
  41c544:	daa    
  41c545:	dec    ecx
  41c546:	int    0x4a
  41c548:	add    BYTE PTR [edi],dh
  41c54a:	mov    ebp,0x537c2f44
  41c54f:	sub    edx,eax
  41c551:	xor    dl,BYTE PTR [ebx+eiz*2]
  41c554:	mov    ds:0xf3286b4,eax
  41c559:	rcr    BYTE PTR [ecx+0x32],1
  41c55c:	pop    esp
  41c55d:	jl     0x41c503
  41c55f:	ror    BYTE PTR gs:[esp+esi*4+0x6327ba0c],0x94
  41c568:	cdq    
  41c569:	(bad)  
  41c56a:	sti    
  41c56b:	mov    dh,dh
  41c56d:	test   eax,0x6e409860
  41c572:	shl    DWORD PTR [esi+0x44],cl
  41c575:	leave  
  41c576:	push   ss
  41c577:	or     BYTE PTR [edi-0x5f],0xf2
  41c57b:	mov    eax,0xe8e47350
  41c580:	and    eax,DWORD PTR [edx]
  41c582:	call   0x1282:0xa279a4d7
  41c589:	cdq    
  41c58a:	cli    
  41c58b:	mov    edx,0x6fae2ad7
  41c590:	les    edx,FWORD PTR [edx-0x598743f1]
  41c596:	and    eax,0x3fce6018
  41c59b:	in     al,dx
  41c59c:	xor    esi,esp
  41c59e:	inc    eax
  41c59f:	sbb    eax,0x9f6a61ae
  41c5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5a5:	mov    dl,0x95
  41c5a7:	cdq    
  41c5a8:	mov    bl,0x74
  41c5aa:	push   0xffffffae
  41c5ac:	mov    ecx,es
  41c5ae:	pop    es
  41c5af:	retf   0x30f7
  41c5b2:	inc    edi
  41c5b3:	mov    ecx,0xc0b46926
  41c5b8:	dec    DWORD PTR [edx-0x1]
  41c5bb:	sbb    eax,0x6baec6a1
  41c5c0:	dec    ebx
  41c5c1:	adc    DWORD PTR [edx+0x75777d3e],edx
  41c5c7:	jmp    0x2c1715fd
  41c5cc:	outs   dx,BYTE PTR ds:[esi]
  41c5cd:	popf   
  41c5ce:	mov    eax,ds:0x497b8aa4
  41c5d3:	mov    edx,0x5fa4b35
  41c5d8:	loopne 0x41c5f4
  41c5da:	add    cl,BYTE PTR [ecx]
  41c5dc:	retf   
  41c5dd:	fcom   st(4)
  41c5df:	pop    ds
  41c5e0:	push   ecx
  41c5e2:	pop    esi
  41c5e3:	jmp    0x41c61d
  41c5e5:	sub    al,0x68
  41c5e7:	mov    gs,WORD PTR [edi+0x3a]
  41c5ea:	pop    edi
  41c5eb:	in     al,0x94
  41c5ed:	into   
  41c5ee:	iret   
  41c5ef:	sub    bh,BYTE PTR [eax]
  41c5f1:	fcomp  DWORD PTR [edx]
  41c5f3:	mov    ds:0x3a73f735,eax
  41c5f8:	imul   ebx,edx,0x498c27dc
  41c5fe:	ret    0x987
  41c601:	mov    edx,0xf35593dd
  41c606:	fs popf 
  41c608:	ins    DWORD PTR es:[edi],dx
  41c609:	out    0xc,al
  41c60b:	js     0x41c5fe
  41c60d:	sbb    dh,BYTE PTR [edi-0x1]
  41c610:	jle    0x41c59d
  41c612:	pusha  
  41c613:	pop    eax
  41c614:	push   eax
  41c615:	ror    edi,1
  41c617:	jge    0x41c5a4
  41c619:	dec    edx
  41c61a:	jge    0x41c5eb
  41c61c:	and    eax,0xa2c358d7
  41c621:	mov    ds,WORD PTR [eax]
  41c623:	or     DWORD PTR [ecx+0x7e0962ee],edx
  41c629:	and    bl,BYTE PTR [ecx]
  41c62b:	inc    edi
  41c62c:	enter  0x2e27,0x79
  41c630:	out    0xf6,eax
  41c632:	or     bh,BYTE PTR ds:0xab91f851
  41c638:	mov    al,ds:0xd07f8760
  41c63d:	mov    ?,WORD PTR [ecx]
  41c63f:	lds    edx,FWORD PTR [ecx+0x2a]
  41c642:	clc    
  41c643:	sub    BYTE PTR [eax-0x42],al
  41c646:	fsubr  QWORD PTR [ebp+0xc]
  41c649:	add    al,0xcc
  41c64b:	inc    esi
  41c64c:	xlat   BYTE PTR ds:[ebx]
  41c64d:	push   ebx
  41c64e:	and    DWORD PTR [edx+0x3d3a2363],edx
  41c654:	xchg   bl,ch
  41c656:	inc    ecx
  41c657:	mov    ch,0xa
  41c659:	dec    edx
  41c65a:	(bad)  
  41c65b:	repnz and BYTE PTR [edi],dl
  41c65e:	shr    BYTE PTR [ebx-0x61],0x9
  41c662:	mov    ebx,0x53902ac3
  41c667:	idiv   BYTE PTR [esi+0x4f8f9011]
  41c66d:	xchg   ecx,eax
  41c66e:	bound  esi,QWORD PTR [edx-0x5038dbf1]
  41c674:	stos   BYTE PTR es:[edi],al
  41c675:	xchg   ebp,eax
  41c676:	mov    eax,ds:0xe09dc6a6
  41c67b:	jge    0x41c673
  41c67d:	mov    eax,ds:0x8a4781bd
  41c682:	pop    esp
  41c683:	int3   
  41c684:	push   ss
  41c685:	leave  
  41c686:	add    BYTE PTR [ebp-0x6de21058],ah
  41c68c:	jmp    0x41c67b
  41c68e:	in     eax,0xdb
  41c690:	sub    ebx,ebx
  41c692:	fnsave [edi]
  41c694:	rol    DWORD PTR [ebx+0x5a],1
  41c697:	xlat   BYTE PTR ds:[ebx]
  41c698:	stos   DWORD PTR es:[edi],eax
  41c699:	mov    edi,0xa488e226
  41c69e:	scas   al,BYTE PTR es:[edi]
  41c69f:	and    edi,DWORD PTR [edi-0x538ed6bc]
  41c6a5:	gs stos DWORD PTR es:[edi],eax
  41c6a7:	pop    es
  41c6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a9:	jae    0x41c71a
  41c6ab:	icebp  
  41c6ac:	das    
  41c6ad:	add    edx,DWORD PTR [ecx+0x1c]
  41c6b0:	stos   BYTE PTR es:[edi],al
  41c6b1:	ins    BYTE PTR es:[edi],dx
  41c6b2:	adc    eax,0x32022f0a
  41c6b7:	aaa    
  41c6b8:	ds sub al,0xcc
  41c6bb:	mov    ebp,0x7e4a5877
  41c6c0:	inc    ebp
  41c6c1:	push   ebx
  41c6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6c3:	pop    edi
  41c6c4:	clc    
  41c6c5:	jp     0x41c665
  41c6c7:	mov    BYTE PTR [eax-0x28],bl
  41c6ca:	cdq    
  41c6cb:	or     al,BYTE PTR [ecx+eiz*2-0xdd81062]
  41c6d2:	sub    eax,0xc2b3de91
  41c6d7:	pop    edi
  41c6d8:	mov    al,0x31
  41c6da:	test   cl,dl
  41c6dc:	(bad)  
  41c6dd:	das    
  41c6de:	pushf  
  41c6df:	adc    al,0x2b
  41c6e1:	xlat   BYTE PTR ds:[ebx]
  41c6e2:	xchg   ecx,eax
  41c6e3:	dec    eax
  41c6e4:	jo     0x41c6a9
  41c6e6:	mov    dh,0xa7
  41c6e8:	(bad)
  41c6eb:	fisttp WORD PTR [edx]
  41c6ed:	sub    dl,BYTE PTR [eax+0x52]
  41c6f0:	ins    BYTE PTR es:[edi],dx
  41c6f1:	xchg   esi,eax
  41c6f2:	jmp    0x41c6b2
  41c6f4:	jno    0x41c6d0
  41c6f6:	repz add BYTE PTR [edi-0x785ec54],al
  41c6fd:	sub    BYTE PTR [esi],cl
  41c6ff:	cld    
  41c700:	sub    BYTE PTR [edx+0x4710aa7d],al
  41c706:	fnstsw WORD PTR [ecx+ebp*4-0x3ee71529]
  41c70d:	pop    ecx
  41c70e:	fnsave [edx]
  41c710:	stos   DWORD PTR es:[edi],eax
  41c711:	and    BYTE PTR [esi-0xf5e0e47],0x60
  41c718:	fist   WORD PTR [edx-0x7ad510cb]
  41c71e:	mov    eax,0xb017230c
  41c723:	je     0x41c6b4
  41c725:	pusha  
  41c726:	iret   
  41c727:	pop    ecx
  41c728:	xor    DWORD PTR [eax+0x506da5a0],0x8fe3bc10
  41c732:	(bad)  
  41c733:	call   0x28b4:0xe15dad40
  41c73a:	fld    QWORD PTR [edx+0xc]
  41c73d:	scas   eax,DWORD PTR es:[edi]
  41c73e:	call   0x3deb343
  41c743:	inc    ecx
  41c744:	pop    esi
  41c745:	push   eax
  41c746:	fs scas eax,DWORD PTR es:[edi]
  41c748:	and    bh,BYTE PTR [edx+0xe]
  41c74b:	add    ah,BYTE PTR [ecx-0xf]
  41c74e:	gs jne 0x41c702
  41c751:	lea    ebx,[ebx-0x2f8e2fb8]
  41c757:	add    esp,eax
  41c759:	sub    al,0x7f
  41c75b:	pop    ss
  41c75c:	out    0xe0,al
  41c75e:	sbb    cl,ah
  41c760:	adc    DWORD PTR [ecx+0x663bb3e6],eax
  41c766:	cmc    
  41c767:	add    BYTE PTR [esi],dh
  41c769:	fadd   DWORD PTR [ecx-0x5eb1157c]
  41c76f:	add    BYTE PTR gs:[ebx+0x6db22994],bh
  41c776:	xlat   BYTE PTR ds:[ebx]
  41c777:	pop    esi
  41c778:	mov    DWORD PTR [esi-0x3d7131f5],0xa52a50fe
  41c782:	dec    edi
  41c783:	pop    esp
  41c784:	or     ebp,DWORD PTR [edx+0x1b5d41d9]
  41c78a:	xchg   esp,eax
  41c78b:	add    cl,cl
  41c78d:	inc    ecx
  41c78e:	mov    edi,edx
  41c790:	xchg   esp,eax
  41c791:	lea    ebx,fs:[esi]
  41c794:	mov    DWORD PTR [edx+0x300d46b4],ecx
  41c79a:	inc    esp
  41c79b:	test   eax,0xf9890f59
  41c7a0:	sbb    al,0x69
  41c7a2:	sbb    eax,0x6c3ee547
  41c7a7:	inc    esp
  41c7a8:	pop    edx
  41c7a9:	add    esi,DWORD PTR [edi+0xf0f7abd]
  41c7af:	push   0x9185438c
  41c7b4:	push   eax
  41c7b5:	ds test eax,0xe4c9af87
  41c7bb:	test   al,0xa4
  41c7bd:	and    al,0x5b
  41c7bf:	rol    DWORD PTR [eax],0xe4
  41c7c2:	push   ss
  41c7c3:	sbb    al,0x17
  41c7c5:	mov    ebp,0xd8cb6797
  41c7ca:	loopne 0x41c7ff
  41c7cc:	addr16 stc 
  41c7ce:	sbb    esp,DWORD PTR [esi-0x43]
  41c7d1:	(bad)  [edi+0x19]
  41c7d4:	xor    al,0xac
  41c7d6:	mov    bl,0x20
  41c7d8:	and    BYTE PTR [edx-0xfd29f75],bh
  41c7de:	ins    BYTE PTR es:[edi],dx
  41c7df:	mov    al,0x25
  41c7e1:	test   BYTE PTR [edi-0x47d57137],ch
  41c7e7:	cli    
  41c7e8:	xchg   edi,eax
  41c7e9:	adc    DWORD PTR [eax-0x1d],0x2d
  41c7ed:	sub    al,0x26
  41c7ef:	in     al,0x22
  41c7f1:	test   BYTE PTR [eax],ch
  41c7f3:	dec    ebx
  41c7f4:	mov    bl,0x8
  41c7f6:	inc    esi
  41c7f7:	or     ch,BYTE PTR [edx-0x592a3c3e]
  41c7fd:	sub    esi,ebx
  41c7ff:	xchg   ebp,eax
  41c800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c801:	and    esi,DWORD PTR [ecx-0x41]
  41c804:	dec    eax
  41c805:	dec    eax
  41c806:	outs   dx,DWORD PTR ds:[esi]
  41c807:	dec    ebp
  41c808:	in     al,dx
  41c809:	xchg   ebp,eax
  41c80a:	ds (bad) 
  41c80c:	(bad)  
  41c80d:	iret   
  41c80e:	mov    BYTE PTR [edi-0x5d6daec7],ah
  41c814:	imul   edi,DWORD PTR [esi],0x66
  41c817:	and    BYTE PTR [edx-0x7a],cl
  41c81a:	inc    esp
  41c81b:	(bad)  
  41c81c:	jp     0x41c895
  41c81e:	popf   
  41c81f:	cmovae eax,DWORD PTR [edi+0x15]
  41c823:	add    ebx,DWORD PTR [esi+esi*1+0x5]
  41c827:	cmp    eax,0x9244f4a5
  41c82c:	test   DWORD PTR [edx],edx
  41c82e:	(bad)  
  41c82f:	out    0x4f,eax
  41c831:	push   edx
  41c832:	add    cl,BYTE PTR [ebx-0x7d260a49]
  41c838:	mov    WORD PTR [esi],cs
  41c83a:	jnp    0x41c80f
  41c83c:	jmp    0x6caf:0x2609e76a
  41c843:	xchg   BYTE PTR [esi-0x39],ah
  41c846:	arpl   WORD PTR [edi],di
  41c848:	test   al,0x6d
  41c84a:	cmp    ebx,DWORD PTR [edx]
  41c84c:	sbb    al,0xc0
  41c84e:	xchg   ecx,eax
  41c84f:	in     al,0x70
  41c851:	jle    0x41c7fb
  41c853:	push   0x4d
  41c855:	mov    ch,0xab
  41c857:	mov    edi,esp
  41c859:	arpl   WORD PTR [ecx+0x6d],ax
  41c85c:	ds imul esp,edi,0x7406138
  41c863:	cmp    DWORD PTR [ebp-0x1],esp
  41c866:	jne    0x41c806
  41c868:	adc    DWORD PTR [ecx],ebp
  41c86a:	dec    eax
  41c86b:	jge    0x41c8e6
  41c86d:	jecxz  0x41c84d
  41c86f:	sub    dl,0xa4
  41c872:	popa   
  41c873:	fs pop ebp
  41c876:	fst    DWORD PTR [ebx]
  41c878:	or     dl,bh
  41c87a:	add    BYTE PTR [esi+0x26e73216],dl
  41c880:	jae    0x41c8d0
  41c882:	pop    edi
  41c883:	xchg   esp,eax
  41c884:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c886:	inc    ebp
  41c887:	add    edx,ebp
  41c889:	dec    esp
  41c88a:	(bad)  [ebx+0x2ad413ee]
  41c890:	enter  0x3259,0x1a
  41c894:	jns    0x41c8e6
  41c896:	xor    esp,esp
  41c898:	rol    ecx,1
  41c89a:	jo     0x41c8be
  41c89c:	ror    DWORD PTR [ecx-0x29],cl
  41c89f:	repnz cmp cl,BYTE PTR [esp+edi*1]
  41c8a3:	aaa    
  41c8a4:	and    eax,0xb0cda659
  41c8a9:	rol    DWORD PTR [edx],0x7a
  41c8ac:	inc    eax
  41c8ad:	repz and eax,0x9c71bf61
  41c8b3:	and    al,0x46
  41c8b5:	push   ebx
  41c8b6:	out    dx,eax
  41c8b7:	xor    BYTE PTR [ebx-0x494ad890],dl
  41c8bd:	adc    BYTE PTR [eax],bl
  41c8bf:	test   eax,0x72d8dbcd
  41c8c4:	xor    BYTE PTR [edx+0xb],ch
  41c8c7:	inc    DWORD PTR [esi+esi*2-0x26]
  41c8cb:	popf   
  41c8cc:	loopne 0x41c873
  41c8ce:	out    dx,eax
  41c8cf:	fdivr  DWORD PTR [eax+0x2588b56d]
  41c8d5:	xchg   ebp,eax
  41c8d6:	pop    esi
  41c8d7:	xor    DWORD PTR [esi-0x160309d3],esi
  41c8dd:	inc    esp
  41c8de:	pusha  
  41c8df:	sub    edi,esi
  41c8e1:	out    0x50,al
  41c8e3:	jp     0x41c899
  41c8e5:	jbe    0x41c8e2
  41c8e7:	out    dx,eax
  41c8e8:	xchg   ecx,eax
  41c8e9:	push   cs
  41c8ea:	sub    eax,0x60769341
  41c8ef:	das    
  41c8f0:	xchg   edi,eax
  41c8f1:	mov    ds:0x62d81fdb,eax
  41c8f6:	add    ah,BYTE PTR [edx]
  41c8f8:	push   esp
  41c8f9:	mov    DWORD PTR [edi],esi
  41c8fb:	into   
  41c8fc:	add    dl,dh
  41c8fe:	inc    eax
  41c8ff:	loope  0x41c92f
  41c901:	mov    edx,ds
  41c903:	call   0x3219:0xb27ebed2
  41c90a:	lock mov ebx,0xbc0afc79
  41c910:	in     al,dx
  41c911:	lahf   
  41c912:	mov    al,0x55
  41c914:	sbb    eax,0x64496f4e
  41c919:	(bad)  
  41c91a:	xchg   edx,eax
  41c91b:	cdq    
  41c91c:	retf   
  41c91d:	cwde   
  41c91e:	dec    esp
  41c91f:	mov    cl,0xde
  41c921:	icebp  
  41c922:	push   edi
  41c923:	dec    ebx
  41c924:	push   cs
  41c925:	or     DWORD PTR [esi],0x22f844b8
  41c92b:	bound  esp,QWORD PTR [edi+0x74]
  41c92e:	pop    esi
  41c92f:	push   ds
  41c930:	hlt    
  41c931:	add    BYTE PTR [edi+0x28],bh
  41c934:	ror    BYTE PTR [ebp+0x1e848b67],0xb0
  41c93b:	ret    0x7f9b
  41c93e:	shr    BYTE PTR [eax+0x7c6af3b8],cl
  41c944:	nop
  41c945:	cmp    BYTE PTR [ecx+0x1e],bl
  41c948:	dec    edi
  41c949:	sbb    eax,0xcda8d4cc
  41c94e:	ds xchg edi,eax
  41c950:	mov    ah,0x30
  41c952:	scas   eax,DWORD PTR es:[edi]
  41c953:	(bad)  
  41c954:	jnp    0x41c95b
  41c956:	xchg   DWORD PTR [ebx],esi
  41c958:	inc    BYTE PTR [edx]
  41c95a:	lock clc 
  41c95c:	in     eax,0xc1
  41c95e:	push   ebx
  41c95f:	xchg   edx,eax
  41c960:	call   0x7e163cb
  41c965:	(bad)  
  41c967:	xor    al,0x61
  41c969:	jge    0x41c9a0
  41c96b:	scas   al,BYTE PTR es:[edi]
  41c96c:	lock fwait
  41c96e:	mov    fs,WORD PTR [esi+0x59]
  41c971:	repnz (bad) 
  41c973:	sbb    edi,ebp
  41c975:	int    0xba
  41c977:	dec    eax
  41c978:	mul    BYTE PTR [edi]
  41c97a:	stc    
  41c97b:	hlt    
  41c97c:	jmp    0x41c9e3
  41c97e:	outs   dx,DWORD PTR ds:[esi]
  41c97f:	lock add ah,cl
  41c982:	mov    ecx,0x1528f1c
  41c987:	adc    DWORD PTR ds:0x697da6c5,edx
  41c98d:	and    eax,0x6b8031b0
  41c992:	lahf   
  41c993:	inc    ebp
  41c994:	dec    ebx
  41c995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c996:	lahf   
  41c997:	stc    
  41c998:	push   eax
  41c999:	repz xchg edx,eax
  41c99b:	jo     0x41c943
  41c99d:	pop    esi
  41c99e:	sub    BYTE PTR [ecx],al
  41c9a0:	jg     0x41c9be
  41c9a2:	lods   eax,DWORD PTR ds:[esi]
  41c9a3:	jmp    0xe5df:0x986287ee
  41c9aa:	retf   0xae01
  41c9ad:	jne    0x41c9c0
  41c9af:	cmp    BYTE PTR [edx-0xf857dc5],bh
  41c9b5:	loop   0x41c979
  41c9b7:	imul   BYTE PTR [edi+0x40]
  41c9ba:	dec    eax
  41c9bb:	aam    0x6a
  41c9bd:	loope  0x41c953
  41c9bf:	bound  ecx,QWORD PTR [eax-0x13]
  41c9c2:	jo     0x41ca2d
  41c9c4:	adc    BYTE PTR [edi-0x6a],ch
  41c9c7:	popa   
  41c9c8:	mov    dh,0x34
  41c9ca:	loop   0x41ca2a
  41c9cc:	aam    0x47
  41c9ce:	inc    esi
  41c9cf:	mov    esp,DWORD PTR [eax+0x12]
  41c9d2:	fnstsw WORD PTR [ebp-0x76]
  41c9d5:	mov    ds:0x8c6e289c,al
  41c9da:	pop    eax
  41c9db:	arpl   dx,ax
  41c9dd:	inc    esp
  41c9de:	inc    ebp
  41c9df:	inc    edi
  41c9e0:	and    DWORD PTR [ecx+0x48ee54a7],esp
  41c9e6:	retf   
  41c9e7:	cld    
  41c9e8:	or     DWORD PTR [ebp+0x13ab703b],eax
  41c9ee:	loop   0x41c9bc
  41c9f0:	or     DWORD PTR [ebp+0x335771c0],ebx
  41c9f6:	jne    0x41c988
  41c9f8:	jno    0x41ca4c
  41c9fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9fb:	sahf   
  41c9fc:	jp     0x41ca71
  41c9fe:	or     BYTE PTR [edx],ah
  41ca00:	aad    0x7d
  41ca02:	test   eax,0x27eab0f4
  41ca07:	scas   eax,DWORD PTR es:[edi]
  41ca08:	jge    0x41ca1e
  41ca0a:	cs push es
  41ca0c:	call   0xd42f:0x4217447
  41ca13:	sahf   
  41ca14:	or     al,0x97
  41ca16:	add    eax,0xcfa849fe
  41ca1b:	jbe    0x41c9cc
  41ca1d:	pop    ds
  41ca1e:	retf   0xf7f3
  41ca21:	std    
  41ca22:	dec    ebp
  41ca23:	je     0x41ca75
  41ca25:	push   ebx
  41ca26:	rcr    DWORD PTR [eax+edx*2],1
  41ca29:	add    esp,DWORD PTR [ebx*4+0x383d765c]
  41ca30:	fcomp  DWORD PTR ds:0x73b972c1
  41ca36:	dec    eax
  41ca37:	out    dx,eax
  41ca38:	mov    bl,0x1
  41ca3a:	sbb    ebx,DWORD PTR [eax+0x1c]
  41ca3d:	aaa    
  41ca3e:	jge    0x41ca69
  41ca40:	xor    esi,DWORD PTR [ecx]
  41ca42:	fwait
  41ca43:	and    BYTE PTR [esi],0xf3
  41ca46:	out    0x21,al
  41ca48:	les    esi,FWORD PTR [ecx-0x28d1e36b]
  41ca4e:	fistp  QWORD PTR gs:[edi+0x6c]
  41ca52:	jmp    0xd2f41cf8
  41ca57:	bound  ebp,QWORD PTR [edx+0x3e29759d]
  41ca5d:	(bad)  
  41ca5f:	and    DWORD PTR [ecx-0x3a5f9dd4],eax
  41ca65:	mov    bh,0x3c
  41ca67:	jge    0x41cad8
  41ca69:	mov    es,WORD PTR [eax-0x4c70081f]
  41ca6f:	pushf  
  41ca70:	cmp    al,0x3a
  41ca72:	xchg   BYTE PTR [ecx],ah
  41ca74:	jnp    0x41ca93
  41ca76:	fisub  DWORD PTR [ebx+eiz*2-0x12dc2a]
  41ca7d:	jno    0x41ca64
  41ca7f:	(bad)  [edx]
  41ca81:	jle    0x41cafa
  41ca83:	sub    ebp,ebp
  41ca85:	mov    ebx,0xb1821c43
  41ca8a:	call   0x35980ac5
  41ca8f:	dec    ecx
  41ca90:	not    DWORD PTR [edx]
  41ca92:	rcr    DWORD PTR [edi],cl
  41ca94:	in     al,dx
  41ca95:	jnp    0x41ca57
  41ca97:	dec    esp
  41ca98:	js     0x41ca24
  41ca9a:	das    
  41ca9b:	jl     0x41ca97
  41ca9d:	rcr    DWORD PTR [eax-0x4e],1
  41caa0:	call   0x5f485d4b
  41caa5:	and    al,0xe1
  41caa7:	add    al,0x5c
  41caa9:	cmp    al,0x11
  41caab:	sets   BYTE PTR [ebx-0x55744f22]
  41cab2:	(bad)  
  41cab4:	mov    DWORD PTR [edx-0x29],ecx
  41cab7:	adc    dh,bl
  41cab9:	jg     0x41cabc
  41cabb:	xchg   edi,eax
  41cabc:	icebp  
  41cabd:	rol    BYTE PTR [ebp+0x2fbd1711],0xaf
  41cac4:	adc    esp,esp
  41cac6:	popf   
  41cac7:	in     eax,0x69
  41cac9:	jns    0x41ca8b
  41cacb:	mov    ds:0x963d3f17,al
  41cad0:	in     al,dx
  41cad1:	inc    esi
  41cad2:	fnstsw WORD PTR es:[ecx]
  41cad5:	sbb    eax,0xc1da1137
  41cada:	repnz cs and cl,cl
  41cade:	sub    al,0x8b
  41cae0:	mov    bl,0x57
  41cae2:	test   DWORD PTR [esi+edx*8],esi
  41cae5:	pop    es
  41cae6:	or     DWORD PTR [ebx],edx
  41cae8:	fstp   DWORD PTR [ebp+0x5e]
  41caeb:	cmp    cl,dh
  41caed:	xor    dl,BYTE PTR [ebx-0x7c]
  41caf0:	mov    al,BYTE PTR [edi+eiz*2+0x15]
  41caf4:	mov    ebp,cs
  41caf6:	dec    ebx
  41caf7:	stos   BYTE PTR es:[edi],al
  41caf8:	in     eax,dx
  41caf9:	sub    BYTE PTR [edi+0x1f],bl
  41cafc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41cafe:	jge    0x41cabf
  41cb00:	pop    ecx
  41cb01:	int    0x2f
  41cb03:	enter  0x8c11,0x7d
  41cb07:	shl    BYTE PTR [ebp-0x4275c765],1
  41cb0d:	mov    dl,BYTE PTR [edi+0x5]
  41cb10:	inc    esp
  41cb11:	add    BYTE PTR [esi],bh
  41cb13:	dec    edx
  41cb14:	jnp    0x41cafa
  41cb16:	mov    edx,?
  41cb18:	lods   eax,DWORD PTR ds:[esi]
  41cb19:	push   ds
  41cb1a:	into   
  41cb1b:	sahf   
  41cb1c:	(bad)  
  41cb1d:	sbb    al,0x9
  41cb1f:	ja     0x41cb1a
  41cb21:	sub    al,BYTE PTR [edx+0x4d32b990]
  41cb27:	out    0xd2,eax
  41cb29:	xchg   ecx,eax
  41cb2a:	jno    0x41cb50
  41cb2c:	rol    DWORD PTR [ebx+0x4e],0x5
  41cb30:	pop    ebx
  41cb31:	sub    al,0xc1
  41cb33:	fsubrp st(0),st
  41cb35:	test   eax,0x4668d2e4
  41cb3a:	in     eax,0xf8
  41cb3c:	dec    eax
  41cb3d:	sbb    BYTE PTR [ebp-0x47],dl
  41cb40:	xor    ch,0xfc
  41cb43:	loope  0x41cb7e
  41cb45:	pop    ss
  41cb46:	fadd   QWORD PTR [edx+0xb17236a]
  41cb4c:	mov    edx,esp
  41cb4e:	mov    ebx,0x95e334a5
  41cb53:	push   esp
  41cb54:	rol    cl,1
  41cb56:	ret    0x946a
  41cb59:	js     0x41caee
  41cb5b:	ins    DWORD PTR es:[edi],dx
  41cb5c:	test   DWORD PTR [ebp+eax*4+0x50],edx
  41cb60:	inc    eax
  41cb61:	mov    ds:0xd55942af,al
  41cb66:	stc    
  41cb67:	or     BYTE PTR [edx-0x41],cl
  41cb6a:	adc    DWORD PTR [edi+0x3d],edi
  41cb6d:	xchg   ebp,eax
  41cb6e:	outs   dx,DWORD PTR ds:[esi]
  41cb6f:	jnp    0x41cbbb
  41cb71:	and    BYTE PTR [ebp+0x32],al
  41cb74:	sub    ebx,DWORD PTR [eax+0x4ebc337f]
  41cb7a:	push   cs
  41cb7b:	or     cl,ch
  41cb7d:	or     edx,DWORD PTR ds:0xe6347728
  41cb83:	dec    eax
  41cb84:	inc    edi
  41cb85:	pop    es
  41cb86:	(bad)  
  41cb87:	out    dx,eax
  41cb88:	or     dl,al
  41cb8a:	or     ebp,DWORD PTR ss:[ecx+eiz*2]
  41cb8e:	xor    esi,DWORD PTR [ebx+0x7d11ea51]
  41cb94:	push   ecx
  41cb95:	cli    
  41cb96:	jmp    0x39de:0x2d7fd1c8
  41cb9d:	push   esp
  41cb9e:	call   FWORD PTR [ebp-0x64]
  41cba1:	sub    ebx,DWORD PTR [eax]
  41cba3:	imul   ebx,DWORD PTR [ebx+0x22698aa3],0x9568032f
  41cbad:	cmp    eax,0x765f1fc7
  41cbb2:	mov    ch,0xfc
  41cbb4:	xchg   edi,eax
  41cbb5:	clc    
  41cbb6:	xlat   BYTE PTR ds:[ebx]
  41cbb7:	ss int3 
  41cbb9:	es push ebp
  41cbbb:	push   es
  41cbbc:	daa    
  41cbbd:	and    ah,al
  41cbbf:	xchg   esp,eax
  41cbc0:	mov    BYTE PTR [esi+0x65],bl
  41cbc3:	jae    0x41cc05
  41cbc5:	xor    dl,ch
  41cbc7:	cmp    DWORD PTR [eax+0x68a2e592],edi
  41cbcd:	dec    edx
  41cbce:	inc    ecx
  41cbcf:	gs out 0x9e,eax
  41cbd2:	scas   eax,DWORD PTR es:[edi]
  41cbd3:	mov    ebp,0xc517bc91
  41cbd8:	inc    edx
  41cbd9:	or     BYTE PTR [edx+0x3c],bh
  41cbdc:	rcl    BYTE PTR [edx],0x93
  41cbdf:	mov    ds:0x911b30c2,eax
  41cbe4:	fwait
  41cbe5:	push   eax
  41cbe6:	and    eax,0xe2f32247
  41cbeb:	outs   dx,BYTE PTR ds:[esi]
  41cbec:	call   0xd406:0xfddcf7d6
  41cbf3:	out    dx,al
  41cbf4:	fs scas eax,DWORD PTR es:[edi]
  41cbf6:	test   al,0x1a
  41cbf8:	push   0xfe33e079
  41cbfd:	and    DWORD PTR [edi],0x1eefafb1
  41cc03:	push   cs
  41cc04:	sbb    eax,0xfdf30c53
  41cc09:	xchg   DWORD PTR [ebx],esi
  41cc0b:	sub    DWORD PTR [ebx+0x4c],edi
  41cc0e:	fcomi  st,st(2)
  41cc10:	out    dx,al
  41cc11:	retf   
  41cc12:	outs   dx,BYTE PTR ds:[esi]
  41cc13:	popa   
  41cc14:	call   0x8815:0x9a755522
  41cc1b:	sar    DWORD PTR [ebp+esi*8+0x2d1f9e7a],cl
  41cc22:	pop    esp
  41cc23:	pop    eax
  41cc24:	mov    DWORD PTR [edi+0x75],ebx
  41cc27:	loope  0x41cc96
  41cc29:	scas   al,BYTE PTR es:[edi]
  41cc2a:	stc    
  41cc2b:	jo     0x41cbff
  41cc2d:	popa   
  41cc2e:	fisub  DWORD PTR [edi-0x6f]
  41cc31:	outs   dx,DWORD PTR ds:[esi]
  41cc32:	jae    0x41cc72
  41cc34:	push   es
  41cc35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc36:	inc    ebx
  41cc37:	push   es
  41cc38:	cmp    ebp,DWORD PTR [esi+0x16f056da]
  41cc3e:	sahf   
  41cc3f:	add    al,0x98
  41cc41:	push   0xffffffd0
  41cc43:	stos   DWORD PTR es:[edi],eax
  41cc44:	je     0x41cc06
  41cc46:	hlt    
  41cc47:	push   eax
  41cc48:	cwde   
  41cc49:	fild   WORD PTR [esi+edx*8-0x2904df3c]
  41cc50:	cdq    
  41cc51:	inc    ecx
  41cc52:	push   es
  41cc53:	cs das 
  41cc55:	in     eax,0xe6
  41cc57:	scas   al,BYTE PTR es:[edi]
  41cc58:	and    BYTE PTR [edi],bl
  41cc5a:	push   eax
  41cc5b:	jg     0x41cc32
  41cc5d:	push   ecx
  41cc5e:	cli    
  41cc5f:	sub    DWORD PTR [ebp+0x506b2357],esp
  41cc65:	jmp    0x1c32420d
  41cc6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc6b:	mov    bh,0xab
  41cc6d:	mov    dh,0xeb
  41cc6f:	std    
  41cc70:	dec    esp
  41cc71:	out    0x2d,al
  41cc73:	inc    ebp
  41cc74:	mov    esp,0xdb987efc
  41cc79:	add    bh,BYTE PTR [esp+ebp*1+0x7f]
  41cc7d:	test   DWORD PTR [ecx],0x6402420e
  41cc83:	xchg   bl,al
  41cc85:	pop    es
  41cc86:	lock push 0xd1a08908
  41cc8c:	in     eax,dx
  41cc8d:	icebp  
  41cc8e:	xor    ebx,DWORD PTR [edi+0x2a]
  41cc91:	cmp    cl,ah
  41cc93:	fsubr  QWORD PTR ds:0x327f1031
  41cc99:	cmp    DWORD PTR [ebp+0x354ecb03],eax
  41cc9f:	mov    ah,0xb0
  41cca1:	push   ebp
  41cca2:	push   es
  41cca3:	popa   
  41cca4:	sub    BYTE PTR [ebp+0x4337ac25],0x9f
  41ccab:	adc    eax,0x8cccf304
  41ccb0:	pop    es
  41ccb1:	bswap  ecx
  41ccb3:	icebp  
  41ccb4:	pop    edx
  41ccb5:	add    dh,BYTE PTR [ebx]
  41ccb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccb8:	mov    eax,ds:0x85b87775
  41ccbd:	cmc    
  41ccbe:	mov    dl,0x64
  41ccc0:	cmp    al,0xd0
  41ccc3:	xchg   ebx,eax
  41ccc4:	dec    ebx
  41ccc5:	call   0x4fd9:0x9cd21b8e
  41cccc:	or     al,0x4d
  41ccce:	(bad)  
  41cccf:	ffreep st(2)
  41ccd1:	jg     0x41cd3f
  41ccd3:	fsub   QWORD PTR [edx+0x75e31cc9]
  41ccd9:	test   BYTE PTR [ebx-0x504bf7aa],dh
  41ccdf:	fwait
  41cce0:	adc    eax,0xb69ec4bb
  41cce5:	test   al,0x98
  41cce7:	ret    0x88b8
  41ccea:	fwait
  41cceb:	mov    ds:0x555fa69b,al
  41ccf0:	push   eax
  41ccf1:	add    eax,0x6ca31fbb
  41ccf6:	jne    0x41cc8c
  41ccf8:	jb     0x41cc91
  41ccfa:	adc    eax,0x1aab7702
  41ccff:	add    DWORD PTR [ebx],edi
  41cd01:	(bad)  
  41cd02:	mov    ds:0xa9696816,al
  41cd07:	mov    dl,0x70
  41cd09:	xchg   DWORD PTR [ebp-0x5ee787ca],ecx
  41cd0f:	in     eax,0xb2
  41cd11:	fs and ecx,eax
  41cd14:	adc    edx,DWORD PTR ds:0x59815651
  41cd1a:	dec    edi
  41cd1b:	adc    al,0xcc
  41cd1d:	call   FWORD PTR [ebx]
  41cd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd20:	dec    edx
  41cd21:	mov    eax,ds:0x8db05ea0
  41cd26:	(bad)  
  41cd27:	mov    edx,0xacdb1577
  41cd2c:	jae    0x41cda1
  41cd2e:	xchg   cl,bh
  41cd30:	sti    
  41cd31:	mov    dh,0x58
  41cd33:	pop    ebp
  41cd34:	push   ebp
  41cd35:	jle    0x41cda5
  41cd37:	mov    edi,0xa212b2dd
  41cd3c:	shl    DWORD PTR [eax+0x1101583f],cl
  41cd42:	and    edi,DWORD PTR [edx+eiz*1-0x3c]
  41cd46:	gs mov ah,0xcf
  41cd49:	mul    BYTE PTR [edi-0x6c]
  41cd4c:	fbld   TBYTE PTR [ecx-0x3bb7f527]
  41cd52:	(bad)  
  41cd53:	out    dx,al
  41cd54:	(bad)  
  41cd55:	ds push ss
  41cd57:	pop    edi
  41cd58:	adc    eax,0x9b836b09
  41cd5d:	ret    0xa971
  41cd60:	mul    edi
  41cd62:	and    edi,DWORD PTR [ebx]
  41cd64:	clc    
  41cd65:	mov    eax,0x8c5a0be
  41cd6a:	cmp    al,0x9b
  41cd6c:	pop    es
  41cd6d:	mov    ch,dl
  41cd6f:	out    dx,eax
  41cd70:	(bad)  
  41cd71:	sbb    eax,0xf3979a51
  41cd76:	out    dx,eax
  41cd77:	adc    eax,0xb07168fc
  41cd7c:	or     DWORD PTR [esi-0x7e],0xdfa1a466
  41cd83:	xchg   ebp,eax
  41cd84:	lds    edx,FWORD PTR [ebp-0x47a86e44]
  41cd8a:	fimul  WORD PTR [ebp+0x6b]
  41cd8d:	test   DWORD PTR [edx-0x32],0x95c91653
  41cd94:	sub    BYTE PTR [edi],0x9
  41cd97:	adc    eax,0x2d4645b9
  41cd9c:	pop    ebx
  41cd9d:	mov    eax,0xc23bc74f
  41cda2:	test   BYTE PTR [ecx+ecx*1+0x7958c1fb],0x3a
  41cdaa:	js     0x41cd8a
  41cdac:	sahf   
  41cdad:	or     eax,0x73d454bb
  41cdb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdb3:	fld    DWORD PTR [ebx+0x64c0503c]
  41cdb9:	mov    es,WORD PTR [esi+0x74]
  41cdbc:	dec    esp
  41cdbd:	inc    edi
  41cdbe:	(bad)  
  41cdbf:	imul   ecx,DWORD PTR [ebx-0x14bc22ef],0x617fa7d1
  41cdc9:	mov    ecx,0x16ffc172
  41cdce:	(bad)  [ebx-0x512c42ea]
  41cdd4:	repnz mov eax,edi
  41cdd7:	and    al,0x99
  41cdd9:	mov    ah,0x51
  41cddb:	rcl    BYTE PTR [esi-0x64699536],0xaa
  41cde2:	cmp    eax,0x75c1d610
  41cde7:	es cmp al,0x35
  41cdea:	inc    esp
  41cdeb:	xor    DWORD PTR [ebx],ebx
  41cded:	dec    esp
  41cdee:	or     BYTE PTR [ebx-0x1],bh
  41cdf1:	inc    ebx
  41cdf2:	pop    esp
  41cdf3:	cmp    edx,DWORD PTR [ecx]
  41cdf5:	popa   
  41cdf6:	mov    al,ds:0x3bc3c0fd
  41cdfb:	dec    ebx
  41cdfc:	jmp    0x9b9d:0xee65307
  41ce03:	push   0xb
  41ce05:	push   ds
  41ce06:	shl    BYTE PTR [edx+0x5a],1
  41ce09:	repz xor DWORD PTR [edi],ebp
  41ce0c:	and    DWORD PTR [eax*8-0x75dcdf0c],ebp
  41ce13:	(bad)  [ebx-0x2b5644b4]
  41ce19:	mov    ds:0xf9639196,al
  41ce1e:	retf   
  41ce1f:	imul   esi,DWORD PTR [ecx],0x32
  41ce22:	std    
  41ce23:	repz out 0x78,al
  41ce26:	push   eax
  41ce27:	es (bad) 
  41ce2a:	or     cl,ch
  41ce2c:	dec    eax
  41ce2d:	(bad)  
  41ce2e:	dec    edi
  41ce2f:	das    
  41ce30:	test   BYTE PTR gs:[ecx+0x46],dh
  41ce34:	ror    DWORD PTR [ebx+0x26],cl
  41ce37:	pop    esp
  41ce38:	xlat   BYTE PTR ds:[ebx]
  41ce39:	iret   
  41ce3a:	gs push cs
  41ce3c:	jb     0x41ce2c
  41ce3e:	mov    ds:0x7e84811e,eax
  41ce43:	jae    0x41cdf1
  41ce45:	sbb    ebp,ebx
  41ce47:	and    dl,BYTE PTR [edi-0x76]
  41ce4a:	push   esi
  41ce4b:	cdq    
  41ce4c:	imul   ebx,DWORD PTR [edi+esi*8-0x5],0xffffffbe
  41ce51:	sub    BYTE PTR ds:0x963c0aee,bh
  41ce57:	in     al,0x80
  41ce59:	ins    DWORD PTR es:[edi],dx
  41ce5a:	push   esp
  41ce5b:	jnp    0x41ce7c
  41ce5d:	bound  ebx,QWORD PTR [esi]
  41ce5f:	iret   
  41ce60:	pop    esp
  41ce61:	ins    DWORD PTR es:[edi],dx
  41ce62:	sbb    al,0x99
  41ce64:	dec    DWORD PTR [eax-0x564f6383]
  41ce6a:	icebp  
  41ce6b:	lock and DWORD PTR [ecx+0x9b9cfc],eax
  41ce72:	cmp    DWORD PTR [edx+0x7e],ecx
  41ce75:	mov    ?,WORD PTR [eax+0x66505b80]
  41ce7b:	rcr    DWORD PTR [edi],0xd5
  41ce7e:	inc    esi
  41ce7f:	or     dl,BYTE PTR [eax+0x258dc644]
  41ce85:	push   ds
  41ce86:	inc    eax
  41ce87:	sbb    dh,al
  41ce89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce8a:	inc    eax
  41ce8b:	jle    0x41ce57
  41ce8d:	aad    0x6e
  41ce8f:	sub    eax,0xd011c827
  41ce94:	pop    edx
  41ce95:	scas   eax,DWORD PTR es:[edi]
  41ce96:	mov    ebp,0x44c16a27
  41ce9b:	cmc    
  41ce9c:	push   cs
  41ce9d:	pop    ebx
  41ce9e:	add    BYTE PTR [edx-0x2d07fc77],al
  41cea4:	repnz mov eax,ds:0x8af3bdcb
  41ceaa:	dec    esi
  41ceab:	ficomp WORD PTR [ecx-0x75]
  41ceae:	dec    ebx
  41ceaf:	adc    DWORD PTR [eax],eax
  41ceb1:	lahf   
  41ceb2:	in     eax,dx
  41ceb3:	inc    esp
  41ceb4:	cs pop es
  41ceb6:	mov    esi,0xbb8aeb40
  41cebb:	xchg   BYTE PTR [esi+0x543d47d6],dl
  41cec1:	idiv   bh
  41cec3:	lds    esp,FWORD PTR ds:0xafed0a40
  41cec9:	or     BYTE PTR [esi+0x1b],bh
  41cecc:	or     edi,DWORD PTR [edx+0x2b]
  41cecf:	pop    ss
  41ced0:	mov    cl,0x45
  41ced2:	add    DWORD PTR [edx-0x2bb3c23f],ebp
  41ced8:	cld    
  41ced9:	stos   BYTE PTR es:[edi],al
  41ceda:	cs ds cmp al,0x84
  41cede:	call   0xecbfa8e0
  41cee3:	adc    DWORD PTR [ebp+0x6a],ebp
  41cee6:	das    
  41cee7:	mov    WORD PTR [eax],cs
  41cee9:	rcl    BYTE PTR [ebx+edi*8],cl
  41ceec:	or     eax,0x8ab3d502
  41cef1:	popf   
  41cef2:	jbe    0x41cf28
  41cef4:	enter  0xff90,0x33
  41cef8:	pop    edi
  41cef9:	jg     0x41cf39
  41cefb:	sbb    BYTE PTR [edx+0x278f9f69],0xb
  41cf02:	sub    ebx,DWORD PTR ds:0xc606585b
  41cf08:	sysexit 
  41cf0a:	sub    eax,0x361b57ad
  41cf0f:	ret    
  41cf10:	jle    0x41cf25
  41cf12:	sub    ebp,DWORD PTR [esi+0x58]
  41cf15:	in     eax,dx
  41cf16:	and    dl,dl
  41cf18:	push   ecx
  41cf19:	sub    DWORD PTR ds:0x198835d1,eax
  41cf1f:	outs   dx,BYTE PTR ds:[esi]
  41cf20:	lahf   
  41cf21:	pop    ss
  41cf22:	jmp    0x41cf3e
  41cf24:	mov    edi,0x62352318
  41cf29:	fbld   TBYTE PTR [ebx-0x75e55f72]
  41cf2f:	cmp    bh,BYTE PTR [edx+0x3b]
  41cf32:	sar    BYTE PTR [ebp+0x46],0x82
  41cf36:	push   DWORD PTR [eax]
  41cf38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf39:	rcr    BYTE PTR [ebp+0x309c839e],1
  41cf3f:	push   edi
  41cf40:	jp     0x41cf60
  41cf42:	in     eax,dx
  41cf43:	fcomi  st,st(2)
  41cf45:	fcomp  QWORD PTR [ebp+eax*4+0xb]
  41cf49:	fistp  WORD PTR [ebp-0x30592bb1]
  41cf4f:	pop    ebx
  41cf50:	inc    ecx
  41cf51:	or     al,0xb4
  41cf53:	fisub  DWORD PTR [ecx-0x24391281]
  41cf59:	test   BYTE PTR [ecx],0xa8
  41cf5c:	pushf  
  41cf5d:	pushf  
  41cf5e:	mov    ds:0x3f880744,al
  41cf63:	out    dx,al
  41cf64:	jae    0x41cf0d
  41cf66:	call   0x49a2:0xdae3a00a
  41cf6d:	inc    esp
  41cf6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf6f:	xor    eax,DWORD PTR [esi+0x50]
  41cf72:	das    
  41cf73:	out    0xef,eax
  41cf75:	push   ebx
  41cf76:	sub    BYTE PTR [ecx-0x51],bh
  41cf79:	cmp    edx,0x34
  41cf7c:	mov    eax,0xf256bf3e
  41cf81:	mov    ds:0xcf2193a9,al
  41cf86:	mov    ebp,0x2fa5e779
  41cf8b:	and    BYTE PTR [ecx],dl
  41cf8d:	ins    BYTE PTR es:[edi],dx
  41cf8e:	add    BYTE PTR [ebp+0x31fb294],cl
  41cf94:	ins    BYTE PTR es:[edi],dx
  41cf95:	jns    0x41cf34
  41cf97:	pop    ecx
  41cf98:	sbb    eax,0x62439fa4
  41cf9d:	jl     0x41cfb7
  41cf9f:	(bad)  
  41cfa0:	push   eax
  41cfa1:	pop    ecx
  41cfa2:	ss cli 
  41cfa4:	cmp    BYTE PTR [ebx],bl
  41cfa6:	add    DWORD PTR [edx-0x48b2e0cc],esi
  41cfac:	xor    eax,0xfd531b2d
  41cfb1:	mov    DWORD PTR [edi+ecx*8-0x67],esp
  41cfb5:	jno    0x41cf6c
  41cfb7:	popa   
  41cfb8:	cmc    
  41cfb9:	push   edi
  41cfba:	nop
  41cfbb:	push   ds
  41cfbc:	fbstp  TBYTE PTR [ebx+edx*8-0x51]
  41cfc0:	test   DWORD PTR [ecx-0x2],0xb0785507
  41cfc7:	sub    cl,BYTE PTR [edx]
  41cfc9:	pop    eax
  41cfca:	push   ebx
  41cfcb:	jb     0x47781e8e
  41cfd1:	jmp    0xfa2e:0xadda13cb
  41cfd8:	xchg   edx,eax
  41cfd9:	jg     0x41cf79
  41cfdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfdc:	xor    eax,0x28d08146
  41cfe1:	pop    ebx
  41cfe2:	cwde   
  41cfe3:	fld    QWORD PTR [ebx]
  41cfe5:	push   0xffffffba
  41cfe7:	xchg   esi,eax
  41cfe8:	dec    esp
  41cfe9:	xchg   edx,eax
  41cfea:	loope  0x41cffd
  41cfec:	jnp    0x41cfa4
  41cfee:	inc    ebp
  41cfef:	mov    bh,0x6
  41cff1:	mov    edx,0xcdf0fd88
  41cff6:	pop    edx
  41cff7:	push   ebp
  41cff8:	hlt    
  41cff9:	cld    
  41cffa:	je     0x41d046
  41cffc:	frstor [eax]
  41cffe:	pop    edx
  41cfff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d000:	lgs    edx,FWORD PTR [edi+0x1e4879b5]
  41d007:	jne    0x41d019
  41d009:	stos   DWORD PTR es:[edi],eax
  41d00a:	in     eax,dx
  41d00b:	jg     0x41cfc8
  41d00d:	sub    ebp,DWORD PTR [ebp+0x9]
  41d010:	pushf  
  41d011:	shl    BYTE PTR [edi+0xf0413f8],1
  41d017:	(bad)  
  41d018:	(bad)  [ecx+ebx*4+0x36]
  41d01c:	mov    ebx,0x9f090568
  41d021:	pop    ebp
  41d022:	jo     0x41cfea
  41d024:	add    dh,bh
  41d026:	add    DWORD PTR [ecx+0x65],0x70350148
  41d02d:	jns    0x41d0ad
  41d02f:	and    eax,0xb1df6a67
  41d034:	adc    al,0x12
  41d036:	mov    bh,0xed
  41d038:	repz inc eax
  41d03a:	jge    0x41d082
  41d03c:	inc    ebp
  41d03d:	or     esi,edx
  41d03f:	xchg   DWORD PTR [ebp+0x70c68b8b],esp
  41d045:	clc    
  41d046:	push   cs
  41d047:	lds    eax,FWORD PTR [ebp+ecx*1+0x3d41d34d]
  41d04e:	push   DWORD PTR ds:0x29e42dd8
  41d054:	idiv   BYTE PTR [eax]
  41d056:	cmp    ebp,eax
  41d058:	push   cs
  41d059:	adc    BYTE PTR [esp+eax*2+0x7c2a3c28],dl
  41d060:	sbb    al,0x41
  41d062:	dec    ebp
  41d063:	mov    ds:0xe600be89,al
  41d068:	scas   al,BYTE PTR es:[edi]
  41d069:	adc    dh,BYTE PTR [ecx+0x2aa8c091]
  41d06f:	out    0xeb,eax
  41d071:	(bad)  
  41d073:	and    BYTE PTR [ebx-0x7e],ch
  41d076:	mov    al,ds:0xcd40d1ca
  41d07b:	nop
  41d07c:	jns    0x41d00c
  41d07e:	cmp    DWORD PTR [esi+edi*2],eax
  41d081:	mov    dl,0x5b
  41d083:	add    al,0x81
  41d085:	es mov ebx,0xbb9ca625
  41d08b:	aaa    
  41d08c:	ror    esp,cl
  41d08e:	jae    0x41d109
  41d090:	ret    0x3aca
  41d093:	jno    0x41d0c1
  41d095:	xchg   esp,eax
  41d096:	sbb    al,0x5e
  41d098:	outs   dx,BYTE PTR ds:[esi]
  41d099:	loopne 0x41d095
  41d09b:	adc    al,0x3e
  41d09d:	adc    eax,0xbb978764
  41d0a2:	jbe    0x41d115
  41d0a4:	add    DWORD PTR [eax+esi*8],esp
  41d0a7:	lahf   
  41d0a8:	mov    ds:0x98a3a2be,eax
  41d0ad:	(bad)  
  41d0ae:	(bad)  
  41d0af:	xchg   ecx,eax
  41d0b0:	das    
  41d0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0b2:	mov    edi,0x43fd2b24
  41d0b7:	cmp    ch,ah
  41d0b9:	(bad)  
  41d0ba:	sub    eax,0x33ab2251
  41d0bf:	xlat   BYTE PTR ds:[ebx]
  41d0c0:	or     bl,BYTE PTR [eax]
  41d0c2:	inc    edx
  41d0c3:	scas   al,BYTE PTR es:[edi]
  41d0c4:	cmp    eax,DWORD PTR [ecx]
  41d0c6:	stc    
  41d0c7:	sub    eax,0x574fcb50
  41d0cc:	cwde   
  41d0cd:	jnp    0x41d05c
  41d0cf:	fidivr DWORD PTR [ecx-0x12]
  41d0d2:	and    eax,0x2936b8f6
  41d0d7:	in     al,dx
  41d0d8:	jbe    0x41d125
  41d0da:	leave  
  41d0db:	je     0x41d0fe
  41d0dd:	test   DWORD PTR [esi+0x4bc2ec9a],edx
  41d0e3:	xchg   esi,eax
  41d0e4:	addr16 call 0x8aa9b131
  41d0ea:	jmp    0x41d08d
  41d0ec:	fld    TBYTE PTR [ebx-0x3c]
  41d0ef:	(bad)  
  41d0f0:	hlt    
  41d0f1:	or     eax,0x9459aeb8
  41d0f6:	repnz arpl WORD PTR [ebp+0x3091b992],si
  41d0fd:	std    
  41d0fe:	and    al,0x53
  41d100:	push   esi
  41d101:	out    dx,al
  41d102:	cmp    al,0xe0
  41d104:	push   esp
  41d105:	mov    dh,BYTE PTR [edx-0x35]
  41d108:	inc    eax
  41d109:	rcl    BYTE PTR [ecx],cl
  41d10b:	fldln2 
  41d10d:	xor    BYTE PTR [eax-0x13],dh
  41d110:	push   ds
  41d111:	jo     0x41d0b9
  41d113:	outs   dx,DWORD PTR ds:[esi]
  41d114:	jl     0x41d17d
  41d116:	or     edi,edx
  41d118:	fs inc eax
  41d11a:	jno    0x41d11f
  41d11c:	pop    ebp
  41d11d:	shr    DWORD PTR [eax+eiz*8+0x3d],0x50
  41d122:	or     al,0x49
  41d124:	push   edi
  41d125:	sub    dh,BYTE PTR [eax-0x47aa5bfb]
  41d12b:	xchg   edx,eax
  41d12c:	pop    ds
  41d12d:	push   eax
  41d12e:	and    eax,0x8c541d67
  41d133:	pop    ebx
  41d134:	ret    
  41d135:	or     esp,ebp
  41d137:	xor    cl,BYTE PTR [ecx]
  41d139:	ror    DWORD PTR ss:[ebx+0x395ff0fc],0x5d
  41d141:	or     esp,ebp
  41d143:	jmp    0x41d0c7
  41d145:	scas   eax,DWORD PTR es:[edi]
  41d146:	add    DWORD PTR [edx],edx
  41d148:	inc    ebp
  41d149:	xor    dh,BYTE PTR [ebp+0x62b7f483]
  41d14f:	or     eax,0x573784be
  41d154:	cmp    DWORD PTR [ecx-0x4d50a534],edx
  41d15a:	stos   BYTE PTR es:[edi],al
  41d15b:	fs sbb al,dh
  41d15e:	jle    0x41d13d
  41d160:	mov    esp,0x342928cd
  41d165:	aas    
  41d166:	inc    edi
  41d167:	ss jle 0x41d187
  41d16a:	je     0x41d1a2
  41d16c:	mov    ch,0x6d
  41d16e:	in     al,0xd8
  41d170:	call   0xab0b67f
  41d175:	cs ins DWORD PTR es:[edi],dx
  41d177:	icebp  
  41d178:	mov    al,ds:0xa6492767
  41d17d:	addr16 cld 
  41d17f:	aad    0x10
  41d181:	js     0x41d182
  41d183:	xchg   DWORD PTR [edx],ebx
  41d185:	retf   
  41d186:	and    bl,BYTE PTR [esi-0xd]
  41d189:	push   eax
  41d18a:	stos   DWORD PTR es:[edi],eax
  41d18b:	inc    esi
  41d18c:	add    eax,0xef921498
  41d191:	test   al,0xb8
  41d193:	sub    esp,esi
  41d195:	push   es
  41d196:	jns    0x41d149
  41d198:	sub    cl,BYTE PTR [eax]
  41d19a:	cmp    bl,BYTE PTR [ebx+eax*1-0x34]
  41d19e:	dec    ebx
  41d19f:	mov    edx,0x49c9714e
  41d1a4:	push   ecx
  41d1a5:	jmp    0x86dc57b5
  41d1aa:	jecxz  0x41d214
  41d1ac:	lahf   
  41d1ad:	loop   0x41d14d
  41d1af:	push   eax
  41d1b0:	pop    es
  41d1b1:	lea    esp,[edi]
  41d1b3:	xchg   al,ah
  41d1b5:	mov    DWORD PTR ds:0xec0e7fe8,ebp
  41d1bb:	pop    es
  41d1bc:	push   DWORD PTR [edx+0x20]
  41d1bf:	pop    ds
  41d1c0:	dec    eax
  41d1c1:	addr16 std 
  41d1c3:	pusha  
  41d1c4:	sub    ebp,ebp
  41d1c6:	(bad)
  41d1c9:	pop    edx
  41d1ca:	jmp    FWORD PTR cs:[edx+0x2636d3c4]
  41d1d1:	mov    ebx,DWORD PTR [ecx+0x3e]
  41d1d4:	adc    ecx,eax
  41d1d6:	inc    esp
  41d1d7:	cdq    
  41d1d8:	cmp    al,0x69
  41d1da:	out    0x98,al
  41d1dc:	int    0x2f
  41d1de:	inc    edi
  41d1df:	arpl   WORD PTR [edx],si
  41d1e1:	mov    esi,DWORD PTR [edi+0x77]
  41d1e4:	aaa    
  41d1e5:	leave  
  41d1e6:	stos   DWORD PTR es:[edi],eax
  41d1e7:	jecxz  0x41d201
  41d1e9:	(bad)  
  41d1ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1eb:	push   edi
  41d1ec:	xchg   ebp,eax
  41d1ed:	sub    ebp,DWORD PTR [esi+edi*8]
  41d1f0:	dec    edi
  41d1f1:	sbb    al,0x5a
  41d1f3:	iret   
  41d1f4:	pop    edx
  41d1f5:	pop    ebx
  41d1f6:	mov    bh,0x37
  41d1f8:	ret    
  41d1f9:	in     eax,0x79
  41d1fb:	lea    esp,ds:0x4127ba4e
  41d201:	repnz inc edx
  41d203:	xchg   esi,eax
  41d204:	sar    bh,0xa1
  41d207:	aam    0xd3
  41d209:	add    DWORD PTR [ecx-0x7b],0x862ab001
  41d210:	pop    ebp
  41d211:	cmc    
  41d212:	xchg   ebx,eax
  41d213:	retf   
  41d214:	scas   eax,DWORD PTR es:[edi]
  41d215:	mov    cl,0xfd
  41d217:	cld    
  41d218:	cwde   
  41d219:	mov    ch,0xdb
  41d21b:	cmp    ebx,esi
  41d21d:	pop    edi
  41d21e:	js     0x41d1e9
  41d220:	aaa    
  41d221:	xchg   edx,eax
  41d222:	jp     0x41d210
  41d224:	push   edi
  41d225:	ret    0x9784
  41d228:	push   0xb52cd64
  41d22d:	sahf   
  41d22e:	jecxz  0x41d1e7
  41d230:	and    ah,BYTE PTR [edi+esi*8]
  41d233:	or     eax,0x861e7860
  41d238:	frstor [edi-0x1765b515]
  41d23e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d23f:	aad    0x1f
  41d241:	sbb    al,0xf3
  41d243:	cmp    DWORD PTR [esi],eax
  41d245:	loopne 0x41d267
  41d247:	and    ah,BYTE PTR [edx-0x5c]
  41d24a:	repz shl DWORD PTR [edx],1
  41d24d:	jle    0x41d1ff
  41d24f:	cmp    BYTE PTR [edi],ah
  41d251:	fdiv   QWORD PTR [eax+0x76]
  41d254:	or     eax,0x2bd6a8bb
  41d259:	into   
  41d25a:	adc    dl,BYTE PTR [ecx]
  41d25c:	xchg   edi,eax
  41d25d:	pop    edx
  41d25e:	xchg   edx,eax
  41d25f:	mov    bh,0xc
  41d261:	imul   ebx,esp,0x54d889c3
  41d267:	rcl    BYTE PTR [edx+0x33562ded],0xe1
  41d26e:	scas   eax,DWORD PTR es:[edi]
  41d26f:	test   al,0x94
  41d271:	leave  
  41d272:	or     esi,DWORD PTR [edx-0x3fc83cf3]
  41d278:	nop
  41d279:	pop    esp
  41d27a:	gs mov al,0xea
  41d27d:	push   ebx
  41d27e:	in     eax,0x45
  41d280:	(bad)  
  41d281:	aaa    
  41d282:	mov    ss,WORD PTR gs:[ebx-0x2dc37ccf]
  41d289:	jl     0x41d2d7
  41d28b:	call   0x1c38:0xaf968aed
  41d292:	xor    BYTE PTR [ebx],cl
  41d294:	adc    eax,DWORD PTR [esi+0x2f]
  41d297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d298:	imul   esi,DWORD PTR [ebx+0x6458ebd5],0xffffff83
  41d29f:	lea    edx,[ecx]
  41d2a1:	dec    bl
  41d2a3:	mov    ah,0x73
  41d2a5:	je     0x41d321
  41d2a7:	mov    ecx,0x8db6a497
  41d2ac:	je     0x41d2de
  41d2ae:	mov    al,ds:0x5e2faed0
  41d2b3:	int3   
  41d2b4:	sbb    al,al
  41d2b6:	stos   BYTE PTR es:[edi],al
  41d2b7:	mov    ebp,0x9dafe802
  41d2bc:	ja     0x41d308
  41d2be:	xor    cl,BYTE PTR [edi-0x69]
  41d2c1:	pop    edx
  41d2c2:	and    DWORD PTR [ecx-0x44],0x6a
  41d2c6:	fst    st(2)
  41d2c8:	push   esp
  41d2c9:	nop
  41d2ca:	mov    ds,WORD PTR [ebp-0x5e4b03c6]
  41d2d0:	lods   eax,DWORD PTR ds:[esi]
  41d2d1:	(bad)  
  41d2d2:	jb     0x41d257
  41d2d4:	pop    ebx
  41d2d5:	xchg   edx,eax
  41d2d6:	std    
  41d2d7:	shl    DWORD PTR [edi+0x86e86b],1
  41d2dd:	mov    ds,WORD PTR [ebp-0x585d2f93]
  41d2e3:	inc    ecx
  41d2e4:	cld    
  41d2e5:	sub    DWORD PTR [eax],edi
  41d2e7:	jmp    0xa7f:0x53af6044
  41d2ee:	dec    edi
  41d2ef:	ror    edx,1
  41d2f1:	pop    ds
  41d2f2:	jns    0x41d313
  41d2f4:	int3   
  41d2f5:	mov    esp,0xe6a38c2e
  41d2fa:	cmp    al,0x1d
  41d2fc:	in     al,dx
  41d2fd:	add    DWORD PTR [eax+0x32],ebx
  41d300:	imul   ecx,esi,0xffffff9d
  41d303:	repz mov al,0xe5
  41d306:	and    BYTE PTR [edi+0x6c],ch
  41d309:	scas   eax,DWORD PTR es:[edi]
  41d30a:	pop    ss
  41d30b:	out    0x32,al
  41d30d:	or     al,0x26
  41d30f:	mov    al,ds:0xd62dd8cc
  41d314:	mov    ds:0xd5813f42,eax
  41d319:	ffree  st(3)
  41d31b:	push   eax
  41d31c:	in     eax,dx
  41d31d:	sti    
  41d31e:	stos   DWORD PTR es:[edi],eax
  41d31f:	in     al,0xd0
  41d321:	dec    eax
  41d322:	cdq    
  41d323:	ss out dx,eax
  41d325:	ins    DWORD PTR es:[edi],dx
  41d326:	imul   esp,DWORD PTR [ebx],0xffffffb4
  41d329:	mov    WORD PTR [ebp+0x45],es
  41d32c:	dec    ebp
  41d32d:	sti    
  41d32e:	push   ebx
  41d32f:	sbb    esp,DWORD PTR [edi]
  41d331:	(bad)  
  41d333:	cld    
  41d334:	xor    BYTE PTR [edx-0x6a],dl
  41d337:	jl     0x41d30e
  41d339:	enter  0x601f,0xca
  41d33d:	cmp    esp,DWORD PTR [esi]
  41d33f:	lea    ecx,[ecx+ecx*1+0xb]
  41d343:	xlat   BYTE PTR ds:[ebx]
  41d344:	loopne 0x41d3bf
  41d346:	jo     0x41d2e9
  41d348:	push   ds
  41d349:	and    al,0xb4
  41d34b:	mov    eax,ds:0x4312e1e2
  41d350:	aam    0x14
  41d352:	and    DWORD PTR [ebx-0x691a4cc1],0xafc11db1
  41d35c:	add    ch,BYTE PTR [ebx]
  41d35e:	pop    ss
  41d35f:	pop    eax
  41d360:	xchg   ecx,eax
  41d361:	inc    esp
  41d362:	mov    ds:0x7feed2f5,al
  41d367:	ss sahf 
  41d369:	xlat   BYTE PTR ds:[ebx]
  41d36a:	mov    ah,cl
  41d36c:	jbe    0x41d31e
  41d36e:	test   al,0xf3
  41d370:	nop
  41d371:	cli    
  41d372:	shr    DWORD PTR [esi+edi*2],0xd2
  41d376:	sahf   
  41d377:	pop    ebx
  41d378:	jp     0x41d3f8
  41d37a:	icebp  
  41d37b:	jecxz  0x41d3be
  41d37d:	les    edx,FWORD PTR [esi-0x10]
  41d380:	rcr    DWORD PTR [ebx-0x7afe0948],cl
  41d386:	scas   al,BYTE PTR es:[edi]
  41d387:	repnz mul esi
  41d38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d38b:	and    DWORD PTR [edx+0x11f8cd91],0x3e
  41d392:	jnp    0x41d3e2
  41d394:	scas   al,BYTE PTR es:[edi]
  41d395:	dec    esp
  41d396:	imul   BYTE PTR [esi-0x42]
  41d399:	les    edx,FWORD PTR [esi]
  41d39b:	push   edi
  41d39c:	enter  0xe50e,0x12
  41d3a0:	mov    ah,0x37
  41d3a2:	adc    DWORD PTR [esi-0x72a454ba],edx
  41d3a8:	repnz pop edi
  41d3aa:	inc    edi
  41d3ab:	pushf  
  41d3ac:	mov    eax,0x6698e088
  41d3b1:	fld    QWORD PTR [ebx-0x7b9939d7]
  41d3b7:	shl    BYTE PTR [esi],cl
  41d3b9:	jo     0x41d360
  41d3bb:	adc    al,0x80
  41d3bd:	add    al,BYTE PTR [ebx]
  41d3bf:	aaa    
  41d3c0:	mov    al,ds:0xf563518b
  41d3c5:	sub    BYTE PTR [eax-0x1ad13ff8],bh
  41d3cb:	cmp    al,0xb3
  41d3cd:	loope  0x41d3b4
  41d3cf:	out    0xbb,al
  41d3d1:	mov    eax,0x8bc6e2e8
  41d3d6:	arpl   bx,di
  41d3d8:	in     eax,0x3d
  41d3da:	mov    ds:0xc1eaa3ef,al
  41d3df:	sbb    bl,BYTE PTR [ebx]
  41d3e1:	not    BYTE PTR [esp+edx*2+0x6b]
  41d3e5:	outs   dx,BYTE PTR ds:[esi]
  41d3e6:	jne    0x41d451
  41d3e8:	test   DWORD PTR [eax+ebp*2-0x23],ecx
  41d3ec:	mov    dl,BYTE PTR [ebx]
  41d3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3f0:	or     BYTE PTR [ecx+0x79578f6a],bl
  41d3f6:	mov    al,ds:0xde0b9fbf
  41d3fb:	rcl    DWORD PTR [edx-0x47742763],1
  41d401:	es ret 0xd41a
  41d405:	dec    edi
  41d406:	out    0x4e,eax
  41d408:	inc    edx
  41d409:	sub    ebx,ebp
  41d40b:	sub    al,0x77
  41d40d:	icebp  
  41d40e:	inc    ecx
  41d40f:	nop
  41d410:	jge    0x41d426
  41d412:	dec    esi
  41d413:	lock push edx
  41d415:	iret   
  41d416:	push   ds
  41d417:	(bad)  
  41d418:	mov    ds:0xb414508c,eax
  41d41d:	(bad)  
  41d41e:	inc    ebx
  41d41f:	pop    es
  41d420:	imul   ecx,DWORD PTR [ecx-0x4],0x8d02ec7a
  41d427:	xor    ch,bl
  41d429:	loopne 0x41d433
  41d42b:	cmp    eax,0xa309d0b5
  41d430:	fistp  QWORD PTR [edx]
  41d432:	and    BYTE PTR [esi-0x1873695f],0x54
  41d439:	icebp  
  41d43a:	pop    es
  41d43b:	cmp    ebp,DWORD PTR [ebx]
  41d43d:	or     eax,0x3e03b08b
  41d442:	cmp    BYTE PTR [edi+0x6fc44491],0x86
  41d449:	(bad)  
  41d44a:	xchg   esi,eax
  41d44b:	mov    ds:0x80686f35,al
  41d450:	pop    ebp
  41d451:	pop    ebp
  41d452:	ja     0x41d3ef
  41d454:	and    ch,bl
  41d456:	nop
  41d457:	xchg   DWORD PTR [edi],ecx
  41d459:	rol    BYTE PTR [ecx+0x327a1233],cl
  41d45f:	xchg   ecx,eax
  41d460:	pop    edi
  41d461:	(bad)  
  41d462:	dec    DWORD PTR [ecx-0x3a]
  41d465:	sti    
  41d466:	lds    edx,FWORD PTR [ecx]
  41d468:	loopne 0x41d499
  41d46a:	xchg   edi,eax
  41d46b:	cmc    
  41d46c:	in     eax,0x9a
  41d46e:	fsubr  DWORD PTR [edi+0x59]
  41d471:	push   eax
  41d472:	int3   
  41d473:	inc    ebx
  41d474:	dec    ecx
  41d475:	scas   eax,DWORD PTR es:[edi]
  41d476:	add    eax,0xf7f1bc8e
  41d47b:	std    
  41d47c:	iret   
  41d47d:	mov    al,ds:0x19dfed16
  41d482:	pop    edx
  41d483:	gs mov bh,0xee
  41d486:	pop    eax
  41d487:	int    0x6f
  41d489:	ins    BYTE PTR es:[edi],dx
  41d48a:	xor    DWORD PTR [esi+ebx*2],ecx
  41d48d:	mov    cl,0x8e
  41d48f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d490:	push   ss
  41d491:	or     dh,0x30
  41d494:	or     BYTE PTR [edx],dl
  41d496:	int3   
  41d497:	push   edi
  41d498:	inc    esp
  41d499:	cmp    cl,BYTE PTR [eax+0x3c5fb409]
  41d49f:	xchg   esi,eax
  41d4a0:	fisttp WORD PTR [eax+0x62]
  41d4a3:	call   0x7bc7:0x60adf102
  41d4aa:	inc    ecx
  41d4ab:	mov    cl,0x9f
  41d4ad:	push   esp
  41d4ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4af:	(bad)
  41d4b2:	lea    esi,[edi-0xa]
  41d4b5:	push   edx
  41d4b6:	ss mov ebx,0x2e260cb5
  41d4bc:	mov    cl,0xe0
  41d4be:	inc    edx
  41d4bf:	or     BYTE PTR [eax],dl
  41d4c1:	xor    bh,BYTE PTR [edx+eax*1]
  41d4c4:	or     al,0xd8
  41d4c6:	mov    eax,0x25a2fcf3
  41d4cb:	and    BYTE PTR [ebx+0x30],cl
  41d4ce:	sbb    ebx,DWORD PTR [eax]
  41d4d0:	mov    ds:0xc80b2c37,eax
  41d4d5:	xchg   ebx,eax
  41d4d6:	lahf   
  41d4d7:	sti    
  41d4d8:	pop    esp
  41d4d9:	inc    eax
  41d4da:	xor    ch,BYTE PTR [edi]
  41d4dc:	mov    ah,0xad
  41d4de:	push   ebx
  41d4df:	jo     0x41d4fa
  41d4e1:	ret    0xe4fb
  41d4e4:	shl    bl,0xd0
  41d4e7:	cmp    bl,ch
  41d4e9:	sub    BYTE PTR [ebx],bh
  41d4eb:	mov    ebp,0x7315ab43
  41d4f0:	or     BYTE PTR [esi],ah
  41d4f2:	repnz stos BYTE PTR es:[edi],al
  41d4f4:	inc    ecx
  41d4f5:	mov    ecx,0xfdd8e7a2
  41d4fa:	add    ebx,eax
  41d4fc:	jae    0x41d492
  41d4fe:	lods   eax,DWORD PTR ds:[esi]
  41d4ff:	inc    esi
  41d500:	xor    ebp,esp
  41d502:	sar    BYTE PTR [ebx+0xd],1
  41d505:	mov    ch,0x15
  41d507:	jbe    0x41d49d
  41d509:	dec    esp
  41d50a:	fdivr  QWORD PTR [edx-0x59]
  41d50d:	stos   DWORD PTR es:[edi],eax
  41d50e:	call   0x284e736f
  41d513:	xchg   esp,eax
  41d514:	call   0x8930:0x2cfa5b97
  41d51b:	jae    0x41d59b
  41d51d:	ins    BYTE PTR es:[edi],dx
  41d51e:	imul   ecx,DWORD PTR [esi+0x68],0xf733ab50
  41d525:	imul   edi,DWORD PTR [ebp+0x39],0x90da1ba5
  41d52c:	shl    BYTE PTR [ecx+0x4835114a],cl
  41d532:	mov    cl,0xda
  41d534:	dec    esi
  41d535:	jns    0x41d59f
  41d537:	mov    esp,0xd4c94346
  41d53c:	xchg   esi,eax
  41d53d:	inc    esi
  41d53e:	loop   0x41d514
  41d540:	out    dx,al
  41d541:	jp     0x41d530
  41d543:	mul    DWORD PTR [edx-0x3143ce59]
  41d549:	pop    eax
  41d54a:	mov    ds,WORD PTR [ebp+0x2e6819c1]
  41d550:	dec    ebx
  41d551:	pop    DWORD PTR [ebx-0x7a]
  41d554:	mov    edx,0x7aa8a5e9
  41d559:	xor    eax,0x474ed1e0
  41d55e:	dec    esi
  41d55f:	nop
  41d560:	mov    esi,0xb502b99c
  41d565:	mov    cl,0x1d
  41d567:	push   ds
  41d568:	pop    ecx
  41d569:	inc    eax
  41d56a:	stc    
  41d56b:	push   edi
  41d56c:	sbb    edi,DWORD PTR ds:0x5164bafe
  41d572:	cmp    edi,DWORD PTR [esi+0x7]
  41d575:	dec    edx
  41d576:	sub    dl,dh
  41d578:	adc    al,0xed
  41d57a:	mov    DWORD PTR [ebp+0x38],0x3224ddef
  41d581:	dec    edi
  41d582:	fcomp  QWORD PTR [ecx-0x743e28a0]
  41d588:	dec    edx
  41d589:	(bad)  
  41d58a:	dec    edi
  41d58b:	mov    ds:0xd49b6eef,eax
  41d590:	test   DWORD PTR [ecx],0xd3a3bc53
  41d596:	push   ebx
  41d597:	xchg   ebp,eax
  41d598:	jl     0x41d570
  41d59a:	push   0x4a8bbc74
  41d59f:	lods   al,BYTE PTR ds:[esi]
  41d5a0:	jo     0x41d5b4
  41d5a2:	mov    eax,0x417ed695
  41d5a7:	sbb    DWORD PTR [edx-0x25],0xcb260288
  41d5ae:	loop   0x41d610
  41d5b0:	lock fdivr QWORD PTR [eax+0x56492ed7]
  41d5b7:	pop    ss
  41d5b8:	inc    edx
  41d5b9:	cmp    eax,0x71d40a3
  41d5be:	imul   ecx,DWORD PTR [esi+esi*1-0x4],0x1f
  41d5c3:	pop    edx
  41d5c4:	mov    bl,0xcd
  41d5c6:	jge    0x41d61f
  41d5c8:	imul   ebp,edi,0xfffffff2
  41d5cb:	retf   
  41d5cc:	and    DWORD PTR [ebp+ebp*8+0x1b93830],eax
  41d5d3:	lds    esi,FWORD PTR [edi]
  41d5d5:	dec    edi
  41d5d6:	cmp    BYTE PTR [ebx-0x4743a942],dl
  41d5dc:	in     al,dx
  41d5dd:	ins    BYTE PTR es:[edi],dx
  41d5de:	mov    cl,0x7
  41d5e0:	repz xor al,0xca
  41d5e3:	jmp    0x41d65b
  41d5e5:	xchg   ebx,eax
  41d5e6:	cmp    DWORD PTR [ebx+esi*8+0x68],0x3fed9ee6
  41d5ee:	(bad)  
  41d5ef:	loopne 0x41d667
  41d5f1:	cmp    DWORD PTR [ebp-0x1ed3a299],edi
  41d5f7:	jp     0x41d65a
  41d5f9:	sub    bl,BYTE PTR [edi-0x7c]
  41d5fc:	push   esi
  41d5fd:	mov    ecx,0x2c5fe06c
  41d602:	int3   
  41d603:	jns    0x41d657
  41d605:	fcmovne st,st(4)
  41d607:	ja     0x41d60d
  41d609:	lock int 0x64
  41d60c:	retf   0xd1bf
  41d60f:	rol    BYTE PTR [edx],cl
  41d611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d612:	cwde   
  41d613:	push   esp
  41d614:	rcr    BYTE PTR [ebx-0x1f21ac35],cl
  41d61a:	dec    esi
  41d61b:	jae    0x41d677
  41d61d:	mov    ah,0x81
  41d61f:	test   al,0x1f
  41d621:	fst    DWORD PTR [ebx+0x13172174]
  41d627:	loope  0x41d65d
  41d629:	jecxz  0x41d613
  41d62b:	andnps xmm6,XMMWORD PTR [eax-0x5c]
  41d62f:	jo     0x41d66b
  41d631:	mov    al,0xd7
  41d633:	retf   0x32c4
  41d636:	cwde   
  41d637:	cmc    
  41d638:	aad    0x1b
  41d63a:	mov    ecx,0xa5762ff4
  41d63f:	jnp    0x41d64b
  41d641:	(bad)  
  41d643:	ror    DWORD PTR [esi+0x77],0x78
  41d647:	sbb    DWORD PTR [eax],esp
  41d649:	into   
  41d64a:	xor    BYTE PTR [ebx+0x51],dh
  41d64d:	jecxz  0x41d5fd
  41d64f:	in     al,dx
  41d650:	jo     0x41d61e
  41d652:	pop    ebx
  41d653:	scas   al,BYTE PTR es:[edi]
  41d654:	icebp  
  41d655:	sub    eax,0x83cf2e46
  41d65a:	popf   
  41d65b:	mov    ?,WORD PTR ds:0xe4997587
  41d661:	add    cl,BYTE PTR ds:0xcf0042c5
  41d667:	and    DWORD PTR [ecx+esi*4],eax
  41d66a:	add    BYTE PTR [edi-0x20ab5189],ah
  41d670:	mov    ch,0x8b
  41d672:	test   eax,0x12bceb15
  41d677:	mul    bh
  41d679:	outs   dx,DWORD PTR ds:[esi]
  41d67a:	adc    eax,0x3b3092d3
  41d67f:	jmp    0x6985:0xa19e284c
  41d686:	and    eax,edx
  41d688:	(bad)  
  41d689:	rcr    ecx,cl
  41d68b:	lds    ebp,FWORD PTR [ecx]
  41d68d:	loope  0x41d6c5
  41d68f:	sbb    dh,BYTE PTR [ebx]
  41d691:	cli    
  41d692:	mov    al,ds:0xcbcc4478
  41d697:	cmp    cl,BYTE PTR [edx]
  41d699:	stos   DWORD PTR es:[edi],eax
  41d69a:	cli    
  41d69b:	pop    eax
  41d69c:	sbb    DWORD PTR ds:0xff944c67,0xea733895
  41d6a6:	sbb    eax,0x15d1e196
  41d6ab:	fstp   TBYTE PTR ds:0x57e31d34
  41d6b1:	push   ss
  41d6b2:	pusha  
  41d6b3:	retf   
  41d6b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6b5:	inc    esp
  41d6b6:	rcl    eax,1
  41d6b8:	pop    ds
  41d6b9:	(bad)  
  41d6ba:	cmp    dh,BYTE PTR [ebp+ebx*8+0x4a6698cb]
  41d6c1:	data16 sahf 
  41d6c3:	push   ebp
  41d6c4:	push   es
  41d6c5:	xchg   ebp,eax
  41d6c6:	es test al,0x34
  41d6c9:	or     eax,0xada01930
  41d6ce:	push   edi
  41d6cf:	xlat   BYTE PTR ds:[ebx]
  41d6d0:	xchg   BYTE PTR ds:0xd7a7c5d8,ah
  41d6d6:	adc    dl,dh
  41d6d8:	pusha  
  41d6d9:	xor    al,BYTE PTR [ebx]
  41d6db:	fld    DWORD PTR [ebx+0x2a4e7123]
  41d6e1:	inc    DWORD PTR [esi+0xd]
  41d6e4:	add    al,0x67
  41d6e6:	cmp    DWORD PTR [esi+0x67],0x47
  41d6ea:	jb     0x41d760
  41d6ec:	int3   
  41d6ed:	popf   
  41d6ee:	dec    edi
  41d6ef:	in     al,dx
  41d6f0:	add    DWORD PTR [ebx+0x143118ad],0x51af821b
  41d6fa:	push   0x721a1c86
  41d6ff:	jge    0x41d6f3
  41d701:	dec    ebp
  41d702:	mov    cl,0xfe
  41d704:	gs mov edi,0xd857d6f6
  41d70a:	in     eax,0xdd
  41d70c:	jg     0x41d718
  41d70e:	mov    cl,0xdb
  41d710:	stos   BYTE PTR es:[edi],al
  41d711:	push   ds
  41d712:	jecxz  0x41d6d4
  41d714:	jae    0x41d77b
  41d716:	or     eax,0xa59a629e
  41d71b:	and    bh,cl
  41d71d:	mov    edi,0x4a493ee4
  41d722:	cmp    edi,ebp
  41d724:	mov    dl,0x45
  41d726:	or     al,0x9c
  41d729:	jle    0x41d786
  41d72b:	jbe    0x41d769
  41d72d:	cs jl  0x41d70c
  41d730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d731:	dec    ecx
  41d732:	push   0x6f
  41d734:	pushf  
  41d735:	push   0xfd7d52ef
  41d73a:	sbb    al,0x5
  41d73c:	in     al,0x86
  41d73e:	cld    
  41d73f:	repz xlat BYTE PTR ds:[ebx]
  41d741:	xchg   edi,eax
  41d742:	inc    ebp
  41d743:	push   esp
  41d744:	sub    eax,0x60e6f5db
  41d749:	add    eax,0xabeb35e7
  41d74e:	mov    WORD PTR [esi+0x25257f34],es
  41d754:	xchg   BYTE PTR [edx+ecx*1-0x7d],al
  41d758:	mov    esp,fs
  41d75a:	aaa    
  41d75b:	shl    BYTE PTR [ecx+0x4f],0xc1
  41d75f:	push   esi
  41d760:	add    al,0x7e
  41d762:	outs   dx,BYTE PTR ds:[esi]
  41d763:	lahf   
  41d764:	fneni(8087 only) 
  41d766:	sub    DWORD PTR [edi-0x2dcd4618],ecx
  41d76c:	ret    
  41d76d:	adc    BYTE PTR [ebx-0x3c],dl
  41d770:	aad    0x21
  41d772:	pop    esp
  41d773:	popf   
  41d774:	in     eax,0x3f
  41d776:	or     BYTE PTR [eax-0x7],0x6e
  41d77a:	call   0xe728:0x136f8602
  41d781:	dec    esp
  41d782:	jle    0x41d791
  41d784:	stos   BYTE PTR es:[edi],al
  41d785:	push   ss
  41d786:	int3   
  41d787:	out    0x31,eax
  41d789:	add    DWORD PTR [esi+0x72],edx
  41d78c:	imul   ebp,DWORD PTR [ebx+0x7c],0x3c24a164
  41d793:	bound  edx,QWORD PTR [eax+0x507b555f]
  41d799:	fisubr WORD PTR [ecx+0x34]
  41d79c:	and    eax,0x6246df0d
  41d7a1:	sbb    bl,ch
  41d7a3:	imul   ecx,DWORD PTR [esp+ecx*1-0x77],0x756bbf99
  41d7ab:	mov    edi,0xebb63bb
  41d7b0:	ja     0x41d73e
  41d7b2:	or     eax,0x3bcccf46
  41d7b7:	mov    ebp,0xabc2baa7
  41d7bc:	icebp  
  41d7bd:	add    dl,BYTE PTR [eax]
  41d7bf:	mov    ch,bh
  41d7c1:	aad    0xe9
  41d7c3:	xor    ah,BYTE PTR [eax-0x67]
  41d7c6:	je     0x41d7f4
  41d7c8:	retf   0x8c3
  41d7cb:	in     eax,0x77
  41d7cd:	je     0x41d77a
  41d7cf:	cmp    eax,0x5e
  41d7d2:	(bad)  
  41d7d3:	cli    
  41d7d4:	sbb    ebp,DWORD PTR [esp+ecx*1-0x42]
  41d7d8:	mov    ah,0x95
  41d7da:	push   ds
  41d7db:	mov    ebx,es
  41d7dd:	sub    DWORD PTR [ebp-0x37dce6a7],eax
  41d7e3:	jmp    0x3315f202
  41d7e8:	xor    esp,DWORD PTR [ecx]
  41d7ea:	dec    ebx
  41d7eb:	or     eax,0x90cb43d1
  41d7f0:	js     0x41d78e
  41d7f2:	dec    esi
  41d7f3:	idiv   BYTE PTR [ecx+0x7e97b0ee]
  41d7f9:	sbb    DWORD PTR [eax-0xe],esp
  41d7fc:	sub    DWORD PTR [ebp+0xf],ebp
  41d7ff:	or     BYTE PTR [edx+esi*8-0x69],0x3b
  41d804:	xchg   DWORD PTR gs:[ebx-0x48469aff],edi
  41d80b:	xchg   edx,eax
  41d80c:	(bad)  
  41d80e:	add    esi,edx
  41d810:	scas   al,BYTE PTR es:[edi]
  41d811:	retf   0x8cc2
  41d814:	js     0x41d819
  41d816:	and    BYTE PTR [ebp+0x71ad7851],cl
  41d81c:	pushf  
  41d81d:	mov    ch,0x8c
  41d81f:	xchg   edi,eax
  41d820:	out    0xb3,eax
  41d822:	test   ebx,esi
  41d824:	and    eax,0xa26c97b6
  41d829:	fnsave [esi+eax*2]
  41d82c:	lods   al,BYTE PTR ds:[esi]
  41d82d:	mov    ah,0x18
  41d82f:	pop    edx
  41d830:	fcom   DWORD PTR [ebx-0x4c]
  41d833:	and    BYTE PTR [ebx+0x56fe324f],dl
  41d839:	outs   dx,BYTE PTR ds:[esi]
  41d83a:	aas    
  41d83b:	sti    
  41d83c:	push   eax
  41d83d:	push   es
  41d83e:	pop    es
  41d83f:	out    dx,al
  41d840:	pop    ds
  41d841:	add    eax,0x76f582bc
  41d846:	mov    ecx,0xf40f1dd9
  41d84b:	retf   
  41d84c:	pop    edi
  41d84d:	xor    ch,al
  41d84f:	jge    0x41d890
  41d851:	in     al,dx
  41d852:	sub    eax,0x182871f1
  41d857:	mov    ds:0xa79e9eaf,al
  41d85c:	outs   dx,DWORD PTR ds:[esi]
  41d85d:	mov    edx,0xc09ee812
  41d862:	xchg   cl,bl
  41d864:	fucomi st,st(5)
  41d866:	push   es
  41d867:	ret    0xb2d6
  41d86a:	into   
  41d86b:	or     eax,0xcf058650
  41d870:	xchg   ecx,eax
  41d871:	sub    al,0x9f
  41d873:	mov    dh,0xfc
  41d875:	ret    
  41d876:	jge    0x41d83d
  41d878:	retf   0x3dde
  41d87b:	retf   0x1501
  41d87e:	jl     0x41d89c
  41d880:	ds sti 
  41d882:	(bad)  
  41d884:	push   ds
  41d885:	(bad)  
  41d886:	sub    BYTE PTR [eax],ah
  41d888:	sbb    BYTE PTR [edi+0x30],al
  41d88b:	mov    ecx,0x7204c5fa
  41d890:	xor    DWORD PTR [ebx+ecx*8],esi
  41d893:	leave  
  41d894:	cmp    BYTE PTR [edx+0x1f5a0509],al
  41d89a:	and    al,0x96
  41d89c:	mov    edi,0xf1911704
  41d8a1:	lds    ebp,FWORD PTR [eax+0x2a1d4d93]
  41d8a7:	jmp    0x272c:0xc5822cc4
  41d8ae:	outs   dx,BYTE PTR ds:[esi]
  41d8af:	jnp    0x41d8d8
  41d8b1:	jbe    0x41d834
  41d8b3:	mov    edx,0x77c605a8
  41d8b8:	mov    bl,0xbf
  41d8ba:	mov    dh,0x51
  41d8bc:	mov    al,ds:0x531198fa
  41d8c1:	loope  0x41d8f7
  41d8c3:	lods   al,BYTE PTR ds:[esi]
  41d8c4:	cmp    eax,0xc3bab55d
  41d8c9:	cmp    eax,0x5d2174be
  41d8ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8cf:	mov    ss,WORD PTR [eax]
  41d8d1:	popa   
  41d8d2:	sub    ah,BYTE PTR [edx-0x7e]
  41d8d5:	dec    esp
  41d8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8d7:	mov    ebp,0x852edda0
  41d8dc:	popf   
  41d8dd:	ret    0x8b29
  41d8e0:	lea    esi,[esi-0x24]
  41d8e3:	idiv   BYTE PTR [esi]
  41d8e5:	loop   0x41d876
  41d8e7:	iret   
  41d8e8:	lods   al,BYTE PTR ds:[esi]
  41d8e9:	lock nop
  41d8eb:	inc    esp
  41d8ec:	enter  0xfe7,0xa7
  41d8f0:	iret   
  41d8f1:	sti    
  41d8f2:	stc    
  41d8f3:	out    dx,eax
  41d8f4:	sbb    ecx,eax
  41d8f6:	(bad)  
  41d8f7:	loope  0x41d937
  41d8f9:	aad    0x1
  41d8fb:	mov    eax,0xbfd79433
  41d900:	nop
  41d901:	mov    ds:0x4c029758,eax
  41d906:	mov    edi,0x72b8b975
  41d90b:	add    DWORD PTR [esi],0x78
  41d90e:	pop    edx
  41d90f:	or     edx,edx
  41d911:	loope  0x41d990
  41d913:	or     edx,DWORD PTR [ecx+0x4c]
  41d916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d917:	jg     0x41d991
  41d919:	mov    dh,0x24
  41d91b:	mov    dh,ch
  41d91d:	cmp    BYTE PTR [edi-0x172e621],0x4d
  41d924:	push   edx
  41d925:	mov    ebp,0xc1e8a532
  41d92a:	jmp    0xf7d:0x8957e4e2
  41d931:	addr16 mov eax,0x89b8e393
  41d937:	mov    DWORD PTR [edi+0x73],ebx
  41d93a:	fcmovnbe st,st(2)
  41d93c:	call   0xbef13c44
  41d941:	test   BYTE PTR [eax-0x66],cl
  41d944:	xor    DWORD PTR [eax],ebp
  41d946:	inc    ebp
  41d947:	mov    ah,0x24
  41d949:	adc    al,0x43
  41d94b:	out    dx,eax
  41d94c:	mov    esp,0x92e2923c
  41d951:	ror    BYTE PTR ds:0x5a545556,1
  41d957:	aaa    
  41d958:	lea    ebx,[ebp+0x64891548]
  41d95e:	idiv   DWORD PTR [edi-0x68]
  41d961:	xchg   ecx,eax
  41d962:	inc    esp
  41d963:	stos   BYTE PTR es:[edi],al
  41d964:	jo     0x41d91c
  41d966:	or     al,0xa3
  41d968:	jge    0x41d9b7
  41d96a:	hlt    
  41d96b:	xchg   BYTE PTR [esi],al
  41d96d:	jns    0x41d9bd
  41d96f:	add    DWORD PTR [bx+0x3d],esp
  41d973:	popf   
  41d974:	dec    ebx
  41d975:	sbb    edi,DWORD PTR [edi]
  41d977:	pop    ecx
  41d978:	shl    DWORD PTR [eax],1
  41d97a:	jmp    0x9de45f61
  41d97f:	inc    ebp
  41d980:	cdq    
  41d981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d982:	ret    0xba42
  41d985:	sbb    eax,0x29614a5b
  41d98a:	mov    cl,0x5d
  41d98c:	ds jp  0x41d9c3
  41d98f:	inc    esi
  41d990:	jmp    0x41d9c3
  41d992:	mov    ebx,0x5cc4ff1c
  41d997:	int3   
  41d998:	dec    ecx
  41d999:	xchg   esp,ebx
  41d99b:	jmp    0x49a4b8e4
  41d9a0:	adc    BYTE PTR [esi-0xce148c7],al
  41d9a6:	push   0xffffff99
  41d9a8:	sub    BYTE PTR [eax+edx*8-0xb],ch
  41d9ac:	pop    edi
  41d9ad:	jnp    0x41d9f2
  41d9af:	xor    ch,BYTE PTR [edi-0x63]
  41d9b2:	mov    dl,0x3b
  41d9b4:	loopne 0x41da11
  41d9b6:	pop    eax
  41d9b7:	repnz pop edx
  41d9b9:	ret    0xc4bc
  41d9bc:	in     al,0xec
  41d9be:	ror    ebp,0xe9
  41d9c1:	loopne 0x41da14
  41d9c3:	bswap  edx
  41d9c5:	mov    ebp,0xb5f95312
  41d9ca:	cli    
  41d9cb:	test   BYTE PTR [ebx],ch
  41d9cd:	cdq    
  41d9ce:	lds    ecx,FWORD PTR [eax+0x41]
  41d9d1:	pusha  
  41d9d2:	jno    0x41da34
  41d9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9d5:	mov    BYTE PTR [eax+0x27],dh
  41d9d8:	push   cs
  41d9d9:	pop    es
  41d9da:	sbb    eax,0x91eecf0b
  41d9df:	out    dx,al
  41d9e0:	push   0x5a
  41d9e2:	cmp    DWORD PTR [edi],eax
  41d9e4:	xchg   esp,eax
  41d9e5:	jmp    0x7b49c848
  41d9ea:	adc    ebp,DWORD PTR [edi+0x7e69c5e4]
  41d9f0:	in     eax,dx
  41d9f1:	fwait
  41d9f2:	dec    esp
  41d9f3:	xor    BYTE PTR es:[ebx+0x7549d78e],0xf1
  41d9fb:	sbb    BYTE PTR [ebx+0x13ef1b1e],bl
  41da01:	pop    esi
  41da02:	pop    edx
  41da03:	inc    edi
  41da04:	sti    
  41da05:	aam    0xe6
  41da07:	cwde   
  41da08:	sub    al,0x85
  41da0a:	ins    BYTE PTR es:[edi],dx
  41da0b:	push   ss
  41da0c:	or     edx,ebx
  41da0e:	sbb    eax,0x18a0dc79
  41da13:	sub    eax,0x2b8b4b85
  41da18:	(bad)  
  41da19:	in     al,dx
  41da1a:	add    dh,ah
  41da1c:	out    dx,al
  41da1d:	(bad)  
  41da1e:	inc    ebp
  41da1f:	inc    ecx
  41da20:	jmp    0xf892b32
  41da25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da26:	data16 adc al,0x21
  41da29:	push   0xc09157f8
  41da2e:	add    al,0x97
  41da30:	cmp    al,0x8b
  41da32:	fcomp  DWORD PTR [edx]
  41da34:	sbb    DWORD PTR [edx],esp
  41da36:	test   BYTE PTR ds:0xc2549a0d,0x34
  41da3d:	daa    
  41da3e:	jmp    0x4265:0xc65522f1
  41da45:	icebp  
  41da46:	sar    DWORD PTR [esi],1
  41da48:	outs   dx,BYTE PTR ds:[esi]
  41da49:	pusha  
  41da4a:	(bad)  
  41da4b:	cmp    edx,eax
  41da4d:	mov    cl,0x61
  41da4f:	inc    ecx
  41da50:	and    DWORD PTR ds:0x1c224d09,ebp
  41da56:	xchg   esp,eax
  41da57:	in     eax,0x81
  41da59:	ja     0x41dacc
  41da5b:	mov    dh,0x91
  41da5d:	das    
  41da5e:	retf   0xbf25
  41da61:	push   edx
  41da62:	mov    WORD PTR [ebp+0x1a2649b7],?
  41da68:	adc    dh,BYTE PTR [eax-0x39a61e27]
  41da6e:	retf   0x3b79
  41da71:	imul   edx,ebx,0x5c153d91
  41da77:	loopne 0x41da26
  41da79:	dec    esp
  41da7a:	fdivr  st(7),st
  41da7c:	ins    BYTE PTR es:[edi],dx
  41da7d:	arpl   dx,di
  41da7f:	fsubr  DWORD PTR [edi+0x50]
  41da82:	and    edi,edx
  41da84:	dec    ebx
  41da85:	sbb    DWORD PTR [eax],ebp
  41da87:	inc    eax
  41da88:	jb     0x41da99
  41da8a:	jno    0x41dafc
  41da8c:	mov    ecx,0x33efd8b4
  41da91:	es cld 
  41da93:	sbb    ebx,DWORD PTR [esi]
  41da95:	cmc    
  41da96:	in     al,0x51
  41da98:	sub    dl,BYTE PTR [ecx-0x6cdfa7d1]
  41da9e:	push   ecx
  41da9f:	idiv   DWORD PTR [edi-0x7ff1a846]
  41daa5:	call   0x81d8257a
  41daaa:	jne    0x41da86
  41daac:	stos   BYTE PTR es:[edi],al
  41daad:	imul   edi,DWORD PTR [ebp+eiz*1+0x3df61320],0x36
  41dab5:	and    eax,0x6801c961
  41daba:	xchg   ecx,eax
  41dabb:	dec    ecx
  41dabc:	ins    BYTE PTR es:[edi],dx
  41dabd:	dec    edx
  41dabe:	mov    edi,0x1caeb7b3
  41dac3:	mov    ds:0xe6fcb1eb,al
  41dac8:	fnstcw WORD PTR [ecx]
  41daca:	dec    esi
  41dacb:	call   0xa934d4f7
  41dad0:	inc    edx
  41dad1:	mov    cl,0x24
  41dad3:	or     edx,ecx
  41dad5:	mov    ds:0x9468e301,al
  41dada:	mov    DWORD PTR [esp+eiz*2],ebx
  41dadd:	sahf   
  41dade:	loop   0x41db08
  41dae0:	test   ebx,ebp
  41dae2:	popf   
  41dae3:	aas    
  41dae4:	xchg   ebx,eax
  41dae5:	inc    ebx
  41dae6:	pop    ebp
  41dae7:	jmp    0x41db5d
  41dae9:	rcr    BYTE PTR [eax-0x3c],0x6d
  41daed:	adc    eax,0x23854a8b
  41daf2:	bnd jmp 0x41daf2
  41daf5:	sub    al,0x66
  41daf7:	fsub   QWORD PTR [eax+0x31]
  41dafa:	test   BYTE PTR [eax+0x67],al
  41dafd:	xchg   BYTE PTR ds:0xdec86544,ch
  41db03:	inc    ebp
  41db04:	loop   0x41db6f
  41db06:	lods   eax,DWORD PTR ds:[esi]
  41db07:	dec    edx
  41db08:	aaa    
  41db09:	push   ss
  41db0a:	out    0x7d,al
  41db0c:	stos   BYTE PTR es:[edi],al
  41db0d:	add    al,0x37
  41db0f:	xlat   BYTE PTR ds:[ebx]
  41db10:	shl    dl,cl
  41db12:	lods   eax,DWORD PTR ds:[esi]
  41db13:	aas    
  41db14:	sti    
  41db15:	daa    
  41db16:	cdq    
  41db17:	mov    DWORD PTR [esi+edx*4],ebx
  41db1a:	xor    bl,BYTE PTR [ebp+0x7]
  41db1d:	adc    BYTE PTR ds:0xed985b77,dl
  41db23:	pop    ebp
  41db24:	sbb    al,0xca
  41db26:	bswap  ebp
  41db28:	mov    dh,bh
  41db2a:	mov    ds:0x597d4f04,al
  41db2f:	iret   
  41db30:	sar    DWORD PTR [ebx-0x3a74ca49],cl
  41db36:	inc    eax
  41db37:	es xchg esi,eax
  41db39:	push   es
  41db3a:	daa    
  41db3b:	mov    dh,0xf8
  41db3d:	xlat   BYTE PTR ds:[ebx]
  41db3e:	or     DWORD PTR [eax-0x3a05b9ef],eax
  41db44:	std    
  41db45:	mov    edi,0xe44ffb66
  41db4a:	bound  esp,QWORD PTR [esi+0x4b]
  41db4d:	pop    ss
  41db4e:	or     ch,BYTE PTR [edx]
  41db50:	sub    al,0x6d
  41db52:	cmp    DWORD PTR [ebp+0x5b],ebp
  41db55:	loopne 0x41db1e
  41db57:	pop    edi
  41db58:	sbb    al,0xd5
  41db5a:	ret    
  41db5b:	mov    ds:0x9c736ccc,al
  41db60:	jge    0x41db00
  41db62:	or     BYTE PTR ds:0x1e0aaf6d,dl
  41db68:	sub    DWORD PTR [ecx+edi*8],esp
  41db6b:	loop   0x41db42
  41db6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db6e:	dec    edi
  41db6f:	call   0xd43c:0xc8ad8090
  41db76:	adc    al,0xa
  41db78:	test   al,0xb7
  41db7a:	es push ebp
  41db7c:	(bad)  
  41db7d:	stc    
  41db7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db7f:	or     esi,eax
  41db81:	mul    BYTE PTR [ebp+0x24]
  41db84:	mov    edi,edi
  41db86:	cmp    BYTE PTR [ebx-0x10],bl
  41db89:	adc    DWORD PTR [edx],0x61
  41db8c:	push   ebp
  41db8d:	stos   BYTE PTR es:[edi],al
  41db8e:	or     BYTE PTR [ebp+0x37f41610],cl
  41db94:	popa   
  41db95:	loop   0x41dbbf
  41db97:	push   esp
  41db98:	push   ss
  41db99:	das    
  41db9a:	fisubr DWORD PTR [edx+0x7bcee5a5]
  41dba0:	mov    edi,0x8609d118
  41dba5:	retf   0xe7f
  41dba8:	stos   DWORD PTR es:[edi],eax
  41dba9:	push   edx
  41dbaa:	inc    ebp
  41dbab:	loope  0x41db45
  41dbad:	lods   eax,DWORD PTR ds:[esi]
  41dbae:	es loopne 0x41dc1e
  41dbb1:	add    al,0xe
  41dbb3:	mov    bl,0x12
  41dbb5:	call   0x78a6:0xafaf7951
  41dbbc:	sbb    al,0xe0
  41dbbe:	xor    DWORD PTR [esi+ebp*2],ebp
  41dbc1:	xor    BYTE PTR [ebx+ebp*8],0xee
  41dbc5:	js     0x41dbbd
  41dbc7:	adc    eax,0x8157eeea
  41dbcc:	cmp    DWORD PTR [eax+0x61fe85eb],0xfffffffa
  41dbd3:	push   cs
  41dbd4:	mov    ch,0x32
  41dbd6:	aas    
  41dbd7:	test   al,0x4f
  41dbd9:	or     DWORD PTR [ebx],esp
  41dbdb:	mov    eax,0x38fc8d4e
  41dbe0:	jmp    0x89fdebb0
  41dbe5:	jge    0x41dc3a
  41dbe7:	pop    ecx
  41dbe8:	xchg   edi,eax
  41dbe9:	fisubr DWORD PTR [ebx+0x3e]
  41dbec:	gs mov ebx,0x47f10fa5
  41dbf2:	and    ebx,DWORD PTR [edx]
  41dbf4:	xlat   BYTE PTR ds:[ebx]
  41dbf5:	out    0x19,al
  41dbf7:	into   
  41dbf8:	(bad)  
  41dbf9:	std    
  41dbfa:	mov    WORD PTR [edi+0x745bc8a],ss
  41dc00:	fidivr DWORD PTR [ebx+0x40]
  41dc03:	std    
  41dc04:	fdiv   QWORD PTR [ebp+0x1f]
  41dc07:	test   BYTE PTR [ebx-0x2],0x9d
  41dc0b:	pop    ebp
  41dc0d:	mov    ds:0xa567333c,eax
  41dc12:	lahf   
  41dc13:	sti    
  41dc14:	mov    edx,0x540f7573
  41dc19:	(bad)  
  41dc1b:	mov    al,0xd1
  41dc1d:	dec    esi
  41dc1e:	mov    WORD PTR [esi+0x4f4c6d64],?
  41dc24:	(bad)  
  41dc25:	or     eax,DWORD PTR [ebx+0x2b]
  41dc28:	xor    BYTE PTR [ecx-0x52],cl
  41dc2b:	inc    edx
  41dc2c:	push   0xffffffe4
  41dc2e:	cmp    BYTE PTR [eax-0x13],ch
  41dc31:	xor    ah,cl
  41dc33:	jmp    0x41dc6c
  41dc35:	hlt    
  41dc36:	test   eax,0x2ad79c98
  41dc3b:	jns    0x41dcbc
  41dc3d:	pop    ebx
  41dc3e:	std    
  41dc3f:	fild   WORD PTR [ecx+0x47]
  41dc42:	sbb    ebp,DWORD PTR [ebp+0x7466a5ce]
  41dc48:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41dc4a:	in     al,dx
  41dc4b:	in     al,0x18
  41dc4d:	xchg   ebp,eax
  41dc4e:	sbb    ecx,esi
  41dc50:	scas   al,BYTE PTR es:[edi]
  41dc51:	inc    eax
  41dc52:	pop    esi
  41dc53:	xlat   BYTE PTR ds:[ebx]
  41dc54:	inc    edi
  41dc55:	mov    ch,0x54
  41dc57:	mov    esi,0x44015f3d
  41dc5c:	in     eax,0x6f
  41dc5e:	pop    ecx
  41dc60:	test   BYTE PTR [ebp*8+0x3cb68f15],dh
  41dc67:	ret    0x56f3
  41dc6a:	iret   
  41dc6b:	gs ret 0xae8d
  41dc6f:	(bad)  [ebx]
  41dc71:	out    dx,eax
  41dc72:	and    DWORD PTR [eax+0x8],edi
  41dc75:	mov    ?,ebp
  41dc77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc78:	sti    
  41dc79:	js     0x41dc0c
  41dc7b:	jno    0x41dc78
  41dc7d:	sbb    ebx,edx
  41dc7f:	(bad)  
  41dc80:	xchg   edi,eax
  41dc81:	adc    al,0xda
  41dc83:	div    BYTE PTR [edx-0x30]
  41dc86:	cld    
  41dc87:	push   ds
  41dc88:	(bad)  
  41dc89:	jmp    0x9f39:0x4827e772
  41dc90:	push   esp
  41dc91:	push   edi
  41dc92:	test   DWORD PTR [eax],edi
  41dc94:	retf   0x5090
  41dc97:	pop    edx
  41dc98:	adc    BYTE PTR [edi+0x6f],dl
  41dc9b:	sbb    esp,esp
  41dc9d:	pop    ds
  41dc9e:	mov    esp,0x1e8a18ec
  41dca3:	mov    WORD PTR [ebp-0x26623d01],ss
  41dca9:	xor    al,0x7b
  41dcab:	test   ah,al
  41dcad:	enter  0x4869,0x6d
  41dcb1:	fdivr  DWORD PTR [esi+0x74af89b7]
  41dcb7:	xchg   ebx,eax
  41dcb8:	sub    al,BYTE PTR [edi]
  41dcba:	js     0x41dc58
  41dcbc:	inc    DWORD PTR [ebx]
  41dcbe:	xorps  xmm4,xmm4
  41dcc1:	addr16 jl 0x41dc8f
  41dcc4:	bound  edi,QWORD PTR [ebp+0xe]
  41dcc7:	pushf  
  41dcc8:	clc    
  41dcc9:	or     eax,0x96c7570d
  41dcce:	pop    ds
  41dccf:	loop   0x41dcf0
  41dcd1:	stos   BYTE PTR es:[edi],al
  41dcd2:	mov    edx,0x7d12b3e4
  41dcd7:	cli    
  41dcd8:	and    eax,0xf75b4f33
  41dcdd:	iret   
  41dcde:	in     eax,0xb3
  41dce0:	ja     0x41dc9a
  41dce2:	xor    eax,DWORD PTR [edx-0x7fa8068c]
  41dce8:	pop    ebx
  41dce9:	clc    
  41dcea:	das    
  41dceb:	xlat   BYTE PTR ds:[ebx]
  41dcec:	mov    edx,0xf188ca07
  41dcf1:	sub    edx,edi
  41dcf3:	(bad)  
  41dcf4:	leave  
  41dcf5:	adc    ebx,DWORD PTR [esi]
  41dcf7:	outs   dx,DWORD PTR ds:[esi]
  41dcf8:	mov    dl,0x19
  41dcfa:	(bad)  
  41dcfb:	mov    ebp,0x65b576b0
  41dd00:	ins    DWORD PTR es:[edi],dx
  41dd01:	add    al,0x0
  41dd03:	aaa    
  41dd04:	ret    0x6dda
  41dd07:	mov    dh,0xd6
  41dd09:	in     al,dx
  41dd0a:	fbstp  TBYTE PTR [ebx]
  41dd0c:	push   ebx
  41dd0d:	xchg   ecx,eax
  41dd0e:	ins    BYTE PTR es:[edi],dx
  41dd0f:	cmp    BYTE PTR [ebp+0x6af586b9],al
  41dd15:	adc    eax,0x4cd6f06f
  41dd1a:	ss repz call 0xa8d5:0x86892144
  41dd23:	data16 jge 0x41dcf5
  41dd26:	pop    es
  41dd27:	push   ds
  41dd28:	repz sbb al,0xd6
  41dd2b:	push   edi
  41dd2c:	ja     0x41dd72
  41dd2e:	sbb    DWORD PTR [eax+0x764485d4],edx
  41dd34:	or     DWORD PTR [edi],edx
  41dd36:	add    eax,0x920e7005
  41dd3b:	test   cl,bl
  41dd3d:	in     eax,0x3
  41dd3f:	push   esi
  41dd40:	(bad)  
  41dd42:	sub    bh,bh
  41dd44:	jmp    0x141a:0x49b22999
  41dd4b:	and    DWORD PTR [ebx-0x2ac48a87],0x44
  41dd52:	dec    edi
  41dd53:	xor    ebp,DWORD PTR [ebx-0x596b293b]
  41dd59:	dec    ebp
  41dd5a:	cmp    ah,dh
  41dd5c:	pop    es
  41dd5d:	lods   eax,DWORD PTR ds:[esi]
  41dd5e:	lods   al,BYTE PTR ds:[esi]
  41dd5f:	es pusha 
  41dd61:	mov    WORD PTR [ecx-0x35318085],ds
  41dd67:	inc    edx
  41dd68:	ret    
  41dd69:	sar    BYTE PTR [edx+0x77ea8b63],1
  41dd6f:	mov    WORD PTR [ebx],cs
  41dd71:	ror    BYTE PTR [edx+edi*4-0x55],0x8f
  41dd76:	aaa    
  41dd77:	scas   eax,DWORD PTR es:[edi]
  41dd78:	das    
  41dd79:	inc    eax
  41dd7a:	inc    ebx
  41dd7b:	out    0xb3,eax
  41dd7d:	push   ebp
  41dd7e:	std    
  41dd7f:	jl     0x41ddc4
  41dd81:	mov    edx,ebx
  41dd83:	or     al,0xea
  41dd85:	mov    bh,0x19
  41dd87:	scas   eax,DWORD PTR es:[edi]
  41dd88:	jmp    0x4a2a21c9
  41dd8d:	adc    eax,0xe9435e6a
  41dd92:	lock sbb ch,BYTE PTR ds:0x197b431d
  41dd99:	scas   al,BYTE PTR es:[edi]
  41dd9a:	js     0x41dd79
  41dd9c:	cwde   
  41dd9d:	or     al,0x5c
  41dd9f:	ds jb  0x41ddc2
  41dda2:	sbb    dl,0xa4
  41dda5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda6:	pop    ds
  41dda7:	int3   
  41dda8:	lods   al,BYTE PTR ds:[esi]
  41dda9:	add    BYTE PTR [ecx],bh
  41ddab:	or     ebx,0xffffffe0
  41ddae:	jo     0x41dd8e
  41ddb0:	jbe    0x41dd82
  41ddb2:	lahf   
  41ddb3:	xor    dh,ah
  41ddb5:	(bad)  [edx-0x67]
  41ddb8:	bound  esp,QWORD PTR [edx-0x5d]
  41ddbb:	ja     0x41de31
  41ddbd:	lds    ecx,FWORD PTR [esi]
  41ddbf:	jecxz  0x41dd6e
  41ddc1:	(bad)  
  41ddc2:	rol    bl,0x72
  41ddc5:	(bad)  
  41ddc6:	jns    0x41ddcf
  41ddc8:	cld    
  41ddc9:	xor    eax,0xbfeb4c93
  41ddce:	in     al,dx
  41ddcf:	mov    bl,BYTE PTR [ebx+edi*4-0x29]
  41ddd3:	adc    eax,DWORD PTR [ebx]
  41ddd5:	and    eax,0x87ffd466
  41ddda:	stc    
  41dddb:	push   eax
  41dddc:	cmp    ch,bh
  41ddde:	retf   
  41dddf:	lods   eax,DWORD PTR ds:[esi]
  41dde0:	add    esp,DWORD PTR [edi+0x4c5f80e2]
  41dde6:	sbb    ecx,ecx
  41dde8:	out    0xe8,eax
  41ddea:	out    0x95,al
  41ddec:	dec    edx
  41dded:	jmp    0x9653:0xd05f943
  41ddf4:	arpl   bp,dx
  41ddf6:	sbb    al,0x2e
  41ddf8:	(bad)  
  41ddf9:	lahf   
  41ddfa:	mov    dh,0xa7
  41ddfc:	popf   
  41ddfd:	call   FWORD PTR [eax]
  41ddff:	dec    esi
  41de00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de01:	lock pop ds
  41de03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de04:	xor    ecx,esi
  41de06:	sub    BYTE PTR [esi+ecx*1+0x61f68cb5],al
  41de0d:	int3   
  41de0e:	mov    ebp,0x1f5d2043
  41de13:	jno    0x41de2e
  41de15:	popf   
  41de16:	or     cl,dh
  41de18:	jmp    0x41de11
  41de1a:	xchg   ecx,eax
  41de1b:	js     0x41de22
  41de1d:	push   edi
  41de1e:	je     0x41ddfa
  41de20:	add    al,0xbd
  41de22:	test   edi,0xd1122b6a
  41de28:	dec    esp
  41de29:	add    al,0xc8
  41de2b:	pop    ecx
  41de2c:	pop    ebx
  41de2d:	sub    BYTE PTR [eax],ah
  41de2f:	mov    WORD PTR [edi+edi*4+0x49],gs
  41de33:	iret   
  41de34:	sub    eax,0x85c6370e
  41de39:	psllw  mm0,QWORD PTR ds:0x87f4e8cc
  41de40:	mov    ecx,0x7b2080c
  41de45:	loopne 0x41de2a
  41de47:	out    0x1a,al
  41de49:	data16 test al,0x32
  41de4c:	sbb    DWORD PTR [bp+si],ecx
  41de4f:	std    
  41de50:	(bad)  
  41de52:	ret    
  41de53:	das    
  41de54:	inc    edi
  41de55:	dec    esp
  41de56:	int    0x3
  41de58:	sahf   
  41de59:	je     0x5a14eb37
  41de5f:	sbb    BYTE PTR [eax+0x1f],ch
  41de62:	nop
  41de63:	imul   ebp,DWORD PTR [edx],0x2d
  41de66:	sub    ebx,DWORD PTR [edx+0x7d]
  41de69:	sbb    BYTE PTR [eax-0x189b8128],dl
  41de6f:	mov    edi,0xeb7f9270
  41de74:	mov    cl,0xce
  41de76:	inc    ebx
  41de77:	sahf   
  41de78:	fsubr  QWORD PTR [ebx+0x1fe2c4bd]
  41de7e:	push   edx
  41de7f:	xchg   edx,eax
  41de80:	mov    edx,0x71d4cef2
  41de85:	stc    
  41de86:	mov    dh,0xd2
  41de88:	iret   
  41de89:	sub    ebx,eax
  41de8b:	mov    eax,?
  41de8d:	inc    edi
  41de8e:	add    ecx,DWORD PTR [ebx+0x13]
  41de91:	(bad)  
  41de92:	ja     0x41dee1
  41de94:	mov    edx,0x17750f6b
  41de99:	fs (bad) 
  41de9b:	xor    cl,ch
  41de9d:	stos   BYTE PTR es:[edi],al
  41de9e:	cmp    eax,0x3380eeda
  41dea3:	push   es
  41dea4:	pushf  
  41dea5:	into   
  41dea6:	aaa    
  41dea7:	into   
  41dea8:	test   ch,dl
  41deaa:	push   ebx
  41deab:	pushf  
  41deac:	mov    ah,0x95
  41deae:	mov    ecx,0x740354e6
  41deb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deb4:	mul    BYTE PTR [eax+0x1f9faad2]
  41deba:	mov    ah,0xb3
  41debc:	clc    
  41debd:	xlat   BYTE PTR ds:[ebx]
  41debe:	scas   al,BYTE PTR es:[edi]
  41debf:	mov    cl,0x49
  41dec1:	pop    eax
  41dec2:	sbb    ch,bh
  41dec4:	xchg   BYTE PTR [ecx],al
  41dec6:	jmp    0x9020:0x6a6625a6
  41decd:	bound  ecx,QWORD PTR [ecx+edi*2-0x673b7282]
  41ded4:	dec    eax
  41ded5:	or     ebp,DWORD PTR [ebx+0x10f4a9fa]
  41dedb:	mov    DWORD PTR [ecx+0x265bbfcb],edi
  41dee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dee2:	push   ds
  41dee3:	mov    dl,0xe3
  41dee5:	cmp    al,BYTE PTR [eax-0x3a]
  41dee8:	pop    edx
  41dee9:	sbb    esi,esi
  41deeb:	aas    
  41deec:	or     al,0x91
  41deee:	xor    al,0xa0
  41def0:	push   ecx
  41def1:	stos   BYTE PTR es:[edi],al
  41def2:	mov    DWORD PTR [edx-0x14],esp
  41def5:	pop    ss
  41def6:	repnz and al,0x8a
  41def9:	mov    ds:0xa6d69356,al
  41defe:	mov    al,0x99
  41df00:	jl     0x41df30
  41df02:	ins    BYTE PTR es:[edi],dx
  41df03:	test   ch,dl
  41df05:	mov    dh,0xd4
  41df07:	mov    DWORD PTR [edx+0x31],edx
  41df0a:	or     BYTE PTR [ecx],bh
  41df0c:	cli    
  41df0d:	and    DWORD PTR [esi],ebx
  41df0f:	rcr    DWORD PTR [edi-0x1811bac8],1
  41df15:	clc    
  41df16:	ins    DWORD PTR es:[edi],dx
  41df17:	repnz mov ds:0xf449c6c,eax
  41df1d:	inc    esp
  41df1e:	and    al,0xd9
  41df20:	xchg   esi,eax
  41df21:	(bad)  
  41df22:	cld    
  41df23:	push   esp
  41df24:	mov    cl,0x25
  41df26:	inc    edx
  41df27:	add    dl,BYTE PTR [esi]
  41df29:	push   esp
  41df2a:	adc    BYTE PTR fs:[ecx-0x69],dl
  41df2e:	push   esi
  41df2f:	add    bl,ch
  41df31:	xchg   ecx,eax
  41df32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df33:	outs   dx,BYTE PTR ds:[esi]
  41df34:	xchg   edx,eax
  41df35:	(bad)  
  41df36:	(bad)  
  41df37:	mov    cl,0x2
  41df39:	add    BYTE PTR [edx+0xd],dh
  41df3c:	(bad)  
  41df3d:	rcl    BYTE PTR [ebp-0x3cf53295],1
  41df43:	lahf   
  41df44:	out    0x53,al
  41df46:	(bad)  
  41df47:	pusha  
  41df48:	cwde   
  41df49:	mov    ?,WORD PTR [edx+edi*1-0x58]
  41df4d:	mov    ah,dl
  41df4f:	push   eax
  41df50:	mov    dh,0x4a
  41df52:	test   DWORD PTR [eax+0x78],edx
  41df55:	in     eax,0x0
  41df57:	sbb    bh,cl
  41df59:	ret    
  41df5a:	mov    fs,WORD PTR [ecx]
  41df5c:	jno    0x41df69
  41df5e:	jmp    0x41dfb8
  41df60:	gs jecxz 0x41dfe2
  41df63:	mov    ch,0xd7
  41df65:	or     bl,BYTE PTR [ecx]
  41df67:	dec    ecx
  41df68:	add    DWORD PTR [edx],ebp
  41df6a:	ds imul edi,esi,0xa77e0190
  41df71:	(bad)  
  41df73:	mov    dl,0x97
  41df75:	pop    edi
  41df76:	pop    ds
  41df77:	push   edi
  41df78:	aad    0x2f
  41df7a:	cmp    eax,0xffffffc7
  41df7d:	enter  0xd445,0xde
  41df81:	mov    es,WORD PTR [eax+ecx*2]
  41df84:	xchg   ebx,eax
  41df85:	or     eax,0xcd03d80d
  41df8a:	ins    BYTE PTR es:[edi],dx
  41df8b:	inc    esp
  41df8c:	adc    al,0xf8
  41df8e:	mov    eax,0xac8ee7dd
  41df93:	fsub   DWORD PTR [ebp-0x58]
  41df96:	add    eax,0x4f703c79
  41df9b:	mov    ds:0x2a582e43,eax
  41dfa0:	pop    edx
  41dfa1:	lds    esi,FWORD PTR [esi+0x415bb4c7]
  41dfa7:	mov    ah,0x81
  41dfa9:	pop    edi
  41dfaa:	je     0x41dfaf
  41dfac:	push   0xffffffdb
  41dfae:	lahf   
  41dfaf:	xchg   esi,ebp
  41dfb1:	sar    BYTE PTR [esi],cl
  41dfb3:	push   ss
  41dfb4:	ja     0x41df4c
  41dfb6:	xor    edi,ebx
  41dfb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfb9:	xor    ch,bl
  41dfbb:	cmp    dl,BYTE PTR [edi]
  41dfbd:	jmp    0x41df8f
  41dfbf:	out    0xf8,al
  41dfc1:	ins    DWORD PTR es:[edi],dx
  41dfc2:	and    al,0x26
  41dfc4:	xor    eax,0xfad5b44b
  41dfc9:	sub    dh,ah
  41dfcb:	mov    eax,0x23e25d7a
  41dfd0:	dec    edx
  41dfd1:	div    esi
  41dfd3:	xchg   ebp,eax
  41dfd4:	sub    bh,ch
  41dfd6:	(bad)  
  41dfd7:	fs cmp al,0x5e
  41dfda:	(bad)  
  41dfdb:	pop    ebx
  41dfdc:	nop
  41dfdd:	daa    
  41dfde:	mov    ch,0x4
  41dfe0:	mov    WORD PTR [edi+ebp*8-0x3c],fs
  41dfe4:	or     ebx,eax
  41dfe6:	mov    dl,0x9f
  41dfe8:	push   ss
  41dfe9:	daa    
  41dfea:	fs sbb al,0xd0
  41dfed:	idiv   DWORD PTR [ebx-0xe511997]
  41dff3:	pop    ebx
  41dff4:	mov    ds:0x99fb62f0,al
  41dff9:	aas    
  41dffa:	mov    ebp,0x1f2365c7
  41dfff:	mov    ebp,0x6702307b
  41e004:	or     al,dl
  41e006:	out    0x64,eax
  41e008:	test   al,0xb3
  41e00a:	sbb    dl,BYTE PTR [ebx-0x2f18b135]
  41e010:	cmp    BYTE PTR [esi+0x61],bh
  41e013:	and    dl,BYTE PTR [esi+ecx*2]
  41e016:	pop    edi
  41e017:	loop   0x41e087
  41e019:	sub    BYTE PTR [esp+ebx*2+0x56b47c6],cl
  41e020:	fisttp WORD PTR [esi]
  41e022:	xchg   edi,eax
  41e023:	pop    ss
  41e024:	inc    ecx
  41e025:	add    ecx,ecx
  41e027:	jmp    0x923a:0x28b12f26
  41e02e:	aaa    
  41e02f:	add    ebx,DWORD PTR [edx]
  41e031:	stos   DWORD PTR es:[edi],eax
  41e032:	inc    esi
  41e033:	sub    al,0x6e
  41e035:	add    eax,0x9c68b52b
  41e03a:	stc    
  41e03b:	or     al,0xdd
  41e03d:	aaa    
  41e03e:	push   cs
  41e03f:	stos   BYTE PTR es:[edi],al
  41e040:	sub    dl,ch
  41e042:	jmp    0x707:0xf22bbde5
  41e049:	cli    
  41e04a:	mov    BYTE PTR [eax],ch
  41e04c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e04d:	ror    DWORD PTR [ebx+0x4],0x34
  41e051:	mov    ?,WORD PTR [eax]
  41e053:	mov    esp,ecx
  41e055:	push   edx
  41e056:	fisub  DWORD PTR [ecx+0x15]
  41e059:	push   ebp
  41e05a:	mov    dh,0xad
  41e05c:	xlat   BYTE PTR ds:[ebx]
  41e05d:	call   0xe153e347
  41e062:	jae    0x41e063
  41e064:	fiadd  DWORD PTR [edi+0x30]
  41e067:	inc    edi
  41e068:	add    BYTE PTR [esi+0x4cfe8eba],ch
  41e06e:	jno    0x41e01a
  41e070:	push   ebp
  41e071:	scas   al,BYTE PTR es:[edi]
  41e072:	sbb    eax,0x175fcff5
  41e077:	xor    eax,0x5a4f8a77
  41e07c:	scas   al,BYTE PTR es:[edi]
  41e07d:	mov    edi,DWORD PTR [eax+ecx*1]
  41e080:	loope  0x41e0a3
  41e082:	test   bh,dh
  41e084:	fst    st(3)
  41e086:	pushf  
  41e087:	(bad)  
  41e088:	ins    BYTE PTR es:[edi],dx
  41e089:	out    0xf2,eax
  41e08b:	test   eax,0x5ffa9e83
  41e090:	jmp    0x41e03b
  41e092:	cmp    dl,cl
  41e094:	jg     0x41e0ac
  41e096:	rcl    ch,0xc1
  41e099:	mov    edi,0x4e497782
  41e09e:	dec    eax
  41e09f:	(bad)  
  41e0a0:	pushf  
  41e0a1:	mov    ecx,0xeaaa4ebc
  41e0a6:	inc    ebx
  41e0a7:	adc    BYTE PTR [ebp+0x58],bh
  41e0aa:	rcl    BYTE PTR [edx+0x28],0xca
  41e0ae:	call   0xf275:0xf3b06135
  41e0b5:	and    bh,0x9d
  41e0b8:	ret    0xa05a
  41e0bb:	xchg   ebx,eax
  41e0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0bd:	fwait
  41e0be:	popf   
  41e0bf:	xchg   BYTE PTR [eax+0x1f2be3b],cl
  41e0c5:	mov    edx,0x9faffe7b
  41e0ca:	xchg   ebp,eax
  41e0cb:	jg     0x41e13e
  41e0cd:	jmp    0x54a:0xd9629735
  41e0d4:	sub    edx,DWORD PTR [ebx]
  41e0d6:	add    ah,dh
  41e0d8:	xchg   ebp,eax
  41e0d9:	fwait
  41e0da:	add    eax,edi
  41e0dc:	pop    eax
  41e0dd:	jne    0x41e0b6
  41e0df:	pop    ds
  41e0e0:	inc    edx
  41e0e1:	adc    al,0xc5
  41e0e3:	mov    edx,fs
  41e0e5:	mov    ds:0xe24db060,eax
  41e0ea:	rol    DWORD PTR [ebp+0x928eff5],1
  41e0f0:	data16 (bad) 
  41e0f2:	cld    
  41e0f3:	xchg   esp,eax
  41e0f4:	jle    0x41e133
  41e0f6:	or     DWORD PTR [ebx+ecx*8-0x59ccec50],ebp
  41e0fd:	daa    
  41e0fe:	sbb    DWORD PTR [esi+ecx*8],esp
  41e101:	xor    edx,edi
  41e103:	jae    0x41e117
  41e105:	mov    DWORD PTR [ebp-0x2114c82f],0x547ba140
  41e10f:	push   es
  41e110:	add    eax,0x943bb319
  41e115:	cld    
  41e116:	aad    0xd4
  41e118:	mov    esp,0xc72aebcd
  41e11d:	out    0x48,al
  41e11f:	into   
  41e120:	jle    0x41e0ba
  41e122:	push   ebp
  41e123:	out    0x58,al
  41e125:	data16 mov BYTE PTR [edi+0x3b36afc7],dl
  41e12c:	mov    bh,0x10
  41e12e:	push   esp
  41e12f:	adc    eax,0xcbe903a6
  41e134:	call   0x23d3070d
  41e139:	lds    esp,FWORD PTR [ecx+0x51932da6]
  41e13f:	bound  edx,QWORD PTR [ebx+edx*2]
  41e142:	cmp    eax,eax
  41e144:	aaa    
  41e145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e146:	(bad)  
  41e147:	leave  
  41e148:	daa    
  41e149:	push   ds
  41e14a:	ja     0x41e126
  41e14c:	cdq    
  41e14d:	jno    0x41e11a
  41e14f:	adc    DWORD PTR [esi+ebp*4-0x19],edx
  41e153:	and    al,0x69
  41e155:	mov    al,ds:0xe6dc472d
  41e15a:	mov    ch,0xca
  41e15c:	ret    
  41e15d:	imul   edx,DWORD PTR [eax],0x7be0bd93
  41e163:	fucomp st(7)
  41e165:	cmp    bl,al
  41e167:	mov    bl,0xf
  41e169:	ret    
  41e16a:	adc    eax,0xf8387c6c
  41e16f:	xchg   BYTE PTR [ebx],dl
  41e171:	rcr    eax,0x71
  41e174:	inc    edi
  41e175:	mov    edx,es
  41e177:	push   esi
  41e178:	push   ebx
  41e179:	in     al,0x5e
  41e17b:	jno    0x41e128
  41e17d:	loope  0x41e155
  41e17f:	cmp    dl,cl
  41e181:	or     al,0x11
  41e183:	mov    DWORD PTR [esi+0x57c05a2d],edx
  41e189:	stc    
  41e18a:	cmp    eax,ebp
  41e18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e18d:	lods   al,BYTE PTR ds:[esi]
  41e18e:	dec    esi
  41e18f:	inc    esp
  41e190:	inc    ebx
  41e191:	cli    
  41e192:	lea    esi,[esi]
  41e194:	daa    
  41e195:	pop    ss
  41e196:	idiv   DWORD PTR [esi*2-0x35fa5326]
  41e19d:	mov    dl,BYTE PTR [ebx+0x66841d39]
  41e1a3:	ffree  st(2)
  41e1a5:	or     cl,BYTE PTR [edx-0x628faa4c]
  41e1ab:	outs   dx,BYTE PTR ds:[esi]
  41e1ac:	nop
  41e1ad:	dec    edi
  41e1ae:	lea    esi,[esi+0x2c]
  41e1b1:	jmp    0x41e216
  41e1b3:	call   0x65d3584c
  41e1b8:	push   esi
  41e1b9:	sbb    eax,0xf8b7c3ba
  41e1be:	stos   DWORD PTR es:[edi],eax
  41e1bf:	sub    edi,DWORD PTR [edx-0x3f]
  41e1c2:	test   eax,0x9c602c69
  41e1c7:	test   DWORD PTR [esi+0x7db648cd],0x66a5b47e
  41e1d1:	pop    esp
  41e1d2:	mov    eax,0xa706001c
  41e1d7:	fucomip st,st(3)
  41e1d9:	std    
  41e1da:	test   DWORD PTR [ebp+edi*4-0x75060bd6],ecx
  41e1e1:	dec    ebp
  41e1e2:	pop    esi
  41e1e3:	cmp    al,0x7
  41e1e5:	mov    ebx,DWORD PTR [ebp+eiz*4+0x4c6b0f19]
  41e1ec:	leave  
  41e1ed:	aam    0xc5
  41e1ef:	mov    cl,0xe4
  41e1f1:	out    dx,eax
  41e1f2:	sbb    al,0x27
  41e1f4:	outs   dx,BYTE PTR ds:[esi]
  41e1f5:	ror    edx,cl
  41e1f7:	fdiv   QWORD PTR [ecx+0x1e37ef37]
  41e1fd:	mov    ds:0x2fd2816b,eax
  41e202:	test   al,0x41
  41e204:	inc    esi
  41e205:	cmp    ebp,DWORD PTR [edx+0x184d1118]
  41e20b:	(bad)  
  41e20c:	jmp    0xe2c1:0x1b0d690b
  41e213:	imul   eax,DWORD PTR [edx+0x425bd313],0x8abc5f1c
  41e21d:	test   eax,0x5dce1d6c
  41e222:	jge    0x41e20f
  41e224:	xchg   edi,eax
  41e225:	fs jns 0x41e275
  41e228:	psubsw mm4,QWORD PTR [eax-0x7a1975f9]
  41e22f:	je     0x41e1f4
  41e231:	mov    ah,0x4f
  41e233:	sbb    esp,esi
  41e235:	fcmovnbe st,st(5)
  41e237:	cmp    ch,bl
  41e239:	or     eax,0xf90c2e18
  41e23e:	js     0x41e264
  41e240:	mov    DWORD PTR [ebx+0x1b],ebp
  41e243:	sbb    ah,BYTE PTR [esp+ebp*8+0x3c]
  41e247:	and    eax,0xbd204a07
  41e24c:	xchg   edx,eax
  41e24d:	push   edx
  41e24e:	(bad)  
  41e24f:	sub    edi,ecx
  41e251:	mov    esi,0x4b8e4bb3
  41e256:	and    cl,BYTE PTR [ecx]
  41e258:	mov    eax,0x4aea95a6
  41e25d:	enter  0xe3a7,0xb1
  41e261:	xchg   DWORD PTR [ebx],esp
  41e263:	sbb    al,0x62
  41e265:	hlt    
  41e266:	ret    
  41e267:	push   ecx
  41e268:	adc    BYTE PTR [eax+0x75],0x2a
  41e26c:	stos   DWORD PTR es:[edi],eax
  41e26d:	ficomp WORD PTR [edi]
  41e26f:	sbb    ah,BYTE PTR ds:0x498297f0
  41e275:	and    ch,al
  41e277:	jo     0x41e2d7
  41e279:	jg     0x41e2a0
  41e27b:	jmp    0x2d63:0xc5515585
  41e282:	(bad)  
  41e283:	or     ebx,DWORD PTR ss:[esi]
  41e286:	mov    eax,DWORD PTR [ebx]
  41e288:	mov    ebx,0xadfedb4e
  41e28d:	dec    esi
  41e28e:	daa    
  41e28f:	mov    esp,DWORD PTR [esp+eiz*4-0x41608fdf]
  41e296:	data16 jnp 0x41e2ab
  41e299:	gs in  eax,0x28
  41e29c:	push   ds
  41e29d:	int    0x59
  41e29f:	sbb    al,0x91
  41e2a1:	pop    ebx
  41e2a2:	inc    esp
  41e2a3:	xlat   BYTE PTR ds:[ebx]
  41e2a4:	out    dx,eax
  41e2a5:	inc    ebp
  41e2a6:	and    al,0x78
  41e2a8:	mov    ds:0x200de6c9,al
  41e2ad:	in     al,0x76
  41e2af:	popa   
  41e2b0:	jg     0x41e29c
  41e2b2:	push   es
  41e2b3:	push   0x1b
  41e2b5:	pop    ss
  41e2b6:	aad    0x7d
  41e2b8:	out    0xd4,al
  41e2ba:	cmc    
  41e2bb:	and    eax,0x417c31c4
  41e2c0:	retf   
  41e2c1:	aaa    
  41e2c2:	(bad)  
  41e2c3:	push   eax
  41e2c4:	pop    ss
  41e2c5:	daa    
  41e2c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2c7:	(bad)  
  41e2c8:	retf   
  41e2c9:	sahf   
  41e2ca:	aad    0xb9
  41e2cc:	sbb    BYTE PTR [edi+0x6c],bh
  41e2cf:	or     eax,ebx
  41e2d1:	mov    al,0x48
  41e2d3:	call   0x7ac8:0x4c67370a
  41e2da:	and    eax,0xf430650f
  41e2df:	das    
  41e2e0:	mov    edx,0xdeb72ff3
  41e2e5:	push   esp
  41e2e6:	rcr    BYTE PTR [esi+0x53],1
  41e2e9:	icebp  
  41e2ea:	push   ebx
  41e2eb:	hlt    
  41e2ec:	pop    DWORD PTR [edi+0x1e]
  41e2ef:	inc    edi
  41e2f0:	jae    0x41e2eb
  41e2f2:	xchg   BYTE PTR [ebp+0xd1ae891],bl
  41e2f8:	sar    DWORD PTR [ebp-0x7d],cl
  41e2fb:	mov    edi,0x97141a3c
  41e300:	jb     0x41e307
  41e302:	jb     0x41e2b3
  41e304:	ror    DWORD PTR [eax+0x7],cl
  41e307:	dec    esi
  41e308:	mov    dh,BYTE PTR [edi]
  41e30a:	sbb    BYTE PTR [ebx+ebp*8],dl
  41e30d:	cmp    DWORD PTR [edi+0x1ef1d957],ecx
  41e313:	xor    BYTE PTR [esi-0x600af95b],0xa8
  41e31a:	imul   ebx,ebx,0xa1e5be47
  41e320:	pop    edi
  41e321:	loope  0x41e382
  41e323:	cdq    
  41e324:	lods   al,BYTE PTR ds:[esi]
  41e325:	fucomp st(1)
  41e327:	xor    eax,edi
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0xc2
  41e3e0:	inc    ecx
  41e3e1:	or     dh,dl
  41e3e3:	adc    ebp,edx
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0x5a
  41e3ec:	add    DWORD PTR ds:0x46c7ee41,edi
  41e3f2:	out    dx,al
  41e3f3:	test   al,0x83
  41e3f5:	imul   esi,DWORD PTR [ebp-0x2a8fe88c],0x55b4eeb6
  41e3ff:	pop    es
  41e400:	test   DWORD PTR [ecx],ebp
  41e402:	loop   0x41e421
  41e404:	aas    
  41e405:	push   ss
  41e406:	mov    ds:0x4b617308,eax
  41e40b:	cmp    BYTE PTR [ecx],0x9e
  41e40e:	hlt    
  41e40f:	retf   0x6343
  41e412:	mov    cl,0x92
  41e414:	fild   QWORD PTR [ebp+0x6f8b9328]
  41e41a:	add    ah,BYTE PTR [edi+0x33]
  41e41d:	mov    WORD PTR [esi+0x21],?
  41e420:	inc    esi
  41e421:	mov    es,WORD PTR [ebx-0x6a94a748]
  41e427:	stc    
  41e428:	sbb    ebp,DWORD PTR [eax]
  41e42a:	adc    al,0x61
  41e42c:	int3   
  41e42d:	stc    
  41e42e:	jl     0x41e417
  41e430:	xchg   ecx,eax
  41e431:	mov    ecx,0xba03cb2f
  41e436:	sti    
  41e437:	paddusb mm3,QWORD PTR [esi]
  41e43a:	adc    bl,bh
  41e43c:	pop    ebx
  41e43d:	add    al,0xbe
  41e43f:	pop    ebx
  41e440:	(bad)  
  41e441:	in     eax,dx
  41e442:	jmp    0x5c4c:0x5a64df38
  41e449:	ret    0xd5d2
  41e44c:	pushf  
  41e44d:	xchg   BYTE PTR [ecx+esi*4],bh
  41e450:	imul   edi,edi,0x4eb3e1ee
  41e456:	aam    0xc6
  41e458:	cmp    ch,bl
  41e45a:	out    dx,al
  41e45b:	push   edi
  41e45c:	mov    edx,0x49d48bb8
  41e461:	psrlw  mm4,QWORD PTR [edi-0x77e023f5]
  41e468:	mov    bh,0x3b
  41e46a:	fbld   TBYTE PTR [edx+0x64de590b]
  41e470:	inc    ebx
  41e471:	inc    edi
  41e472:	inc    edi
  41e473:	enter  0xe27d,0x87
  41e477:	sahf   
  41e478:	cmp    eax,0x3b01534a
  41e47d:	out    0x82,al
  41e47f:	xchg   edi,eax
  41e480:	inc    esi
  41e481:	pop    esi
  41e482:	add    cl,dh
  41e484:	ins    BYTE PTR es:[edi],dx
  41e485:	outs   dx,BYTE PTR ds:[esi]
  41e486:	pop    edi
  41e487:	(bad)  
  41e488:	cmc    
  41e489:	repz mov edi,0x7f128eff
  41e48f:	add    bh,0x23
  41e492:	aas    
  41e493:	pop    edx
  41e494:	cmp    al,0xe0
  41e496:	jbe    0x41e490
  41e498:	fisub  DWORD PTR [ecx-0xd]
  41e49b:	pop    ebx
  41e49c:	sbb    esi,eax
  41e49e:	jg     0x41e42c
  41e4a0:	sti    
  41e4a1:	dec    edx
  41e4a2:	xor    esp,eax
  41e4a4:	sti    
  41e4a5:	cs or  al,bl
  41e4a8:	in     eax,dx
  41e4a9:	sbb    BYTE PTR [ecx],dh
  41e4ab:	js     0x41e48c
  41e4ad:	inc    esp
  41e4ae:	stos   DWORD PTR es:[edi],eax
  41e4af:	and    al,0x3b
  41e4b1:	fisub  WORD PTR [esi+0x4bef3834]
  41e4b7:	jg     0x41e514
  41e4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4ba:	push   ecx
  41e4bb:	inc    ecx
  41e4bc:	mov    ds:0x4c99004d,eax
  41e4c1:	leave  
  41e4c2:	sub    ebp,edi
  41e4c4:	hlt    
  41e4c5:	test   al,0x30
  41e4c7:	jno    0x41e4cf
  41e4c9:	scas   al,BYTE PTR es:[edi]
  41e4ca:	daa    
  41e4cb:	daa    
  41e4cc:	inc    ecx
  41e4cd:	mov    DWORD PTR [ebx-0x63],ebx
  41e4d0:	mov    WORD PTR [edx],es
  41e4d2:	mov    eax,0x819decc9
  41e4d7:	push   cs
  41e4d8:	mov    ebp,0x245d2b10
  41e4dd:	repz mov ecx,0xf03934f
  41e4e3:	or     ebp,DWORD PTR [edi-0x14]
  41e4e6:	adc    eax,0x5cb3f961
  41e4eb:	fwait
  41e4ec:	or     al,0xbe
  41e4ee:	fmul   st,st(3)
  41e4f0:	leave  
  41e4f1:	sub    edi,DWORD PTR [eax]
  41e4f3:	or     dl,al
  41e4f5:	jecxz  0x41e516
  41e4f7:	push   0x83cf9f70
  41e4fc:	add    eax,0xffffff9d
  41e4ff:	add    al,0x6
  41e501:	push   0xffffff90
  41e503:	jge    0x41e4d3
  41e505:	pop    ss
  41e506:	xchg   ebp,eax
  41e507:	sbb    esp,DWORD PTR [edx+0xca7af2a]
  41e50d:	and    edx,DWORD PTR [ecx]
  41e50f:	(bad)  
  41e510:	sub    ch,BYTE PTR ds:0xf70ef84a
  41e516:	cdq    
  41e517:	aas    
  41e518:	xchg   esi,ebx
  41e51a:	jge    0x41e59a
  41e51c:	mov    eax,ds:0x2cfc6e7f
  41e521:	das    
  41e522:	mov    ebp,0x5ff982c6
  41e527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e528:	fld    DWORD PTR ds:0x83c9e490
  41e52e:	mov    eax,0xe51ae85b
  41e533:	cmp    ebp,DWORD PTR [esi+ebx*8]
  41e536:	add    dh,BYTE PTR [edi]
  41e538:	aam    0x96
  41e53a:	ja     0x41e5b9
  41e53c:	adc    al,0xab
  41e53e:	pop    esp
  41e53f:	pop    es
  41e540:	xor    ch,BYTE PTR [edx+0x22608eac]
  41e546:	test   dl,0x80
  41e549:	lahf   
  41e54a:	jae    0x41e4fc
  41e54c:	mov    dh,0x68
  41e54e:	fbld   TBYTE PTR [edx-0x5e]
  41e551:	push   edx
  41e552:	cwde   
  41e553:	dec    edi
  41e554:	push   ds
  41e555:	daa    
  41e556:	hlt    
  41e557:	sub    DWORD PTR [ebp-0x54],edi
  41e55a:	pop    ds
  41e55b:	retf   
  41e55c:	inc    ebp
  41e55d:	lock jle 0x41e5b0
  41e560:	lahf   
  41e561:	jns    0x41e592
  41e563:	popf   
  41e564:	sahf   
  41e565:	jo     0x41e5e1
  41e567:	xchg   ebp,eax
  41e568:	ja     0x41e548
  41e56a:	in     eax,dx
  41e56b:	lods   eax,DWORD PTR ds:[esi]
  41e56c:	or     bh,0x3d
  41e56f:	add    dl,BYTE PTR [bx]
  41e572:	int    0xa
  41e574:	sub    cl,BYTE PTR [ecx]
  41e576:	add    esp,ebp
  41e578:	cmp    dh,dl
  41e57a:	add    dh,BYTE PTR [edx-0x77]
  41e57d:	arpl   cx,bp
  41e57f:	dec    ebx
  41e580:	repnz jmp 0x7175:0x9b5e96bb
  41e588:	sbb    BYTE PTR [edi+0x11460f9e],dh
  41e58e:	jcxz   0x41e60c
  41e591:	xor    ecx,DWORD PTR [ebx-0x25]
  41e594:	xor    esi,DWORD PTR [eiz*2-0x60defee3]
  41e59b:	lods   eax,DWORD PTR ds:[esi]
  41e59c:	daa    
  41e59d:	mov    ebp,0x810b371d
  41e5a2:	mov    esp,0x1a23d28d
  41e5a7:	les    ebx,FWORD PTR [esp+ebp*1]
  41e5aa:	or     BYTE PTR [eax-0x30],bl
  41e5ad:	enter  0xb006,0x2a
  41e5b1:	in     al,dx
  41e5b2:	fwait
  41e5b3:	clc    
  41e5b4:	and    eax,DWORD PTR [ebx+ecx*2-0x37]
  41e5b8:	outs   dx,BYTE PTR ds:[esi]
  41e5b9:	sub    DWORD PTR [esp+ebp*2-0x3a],eax
  41e5bd:	cmp    BYTE PTR [ecx+0x60],bh
  41e5c0:	data16 ffree st(7)
  41e5c3:	mov    esi,0x8ba5651
  41e5c8:	out    0xa4,al
  41e5ca:	push   ecx
  41e5cb:	pop    ecx
  41e5cc:	aam    0xfc
  41e5ce:	rcl    DWORD PTR [eax+0x6fe98cfc],cl
  41e5d4:	pop    esi
  41e5d5:	inc    esp
  41e5d6:	xchg   edi,eax
  41e5d7:	jge    0x41e631
  41e5d9:	lds    edx,FWORD PTR [ebx-0x5]
  41e5dc:	adc    al,0x61
  41e5de:	add    al,0xb5
  41e5e0:	add    ah,ah
  41e5e2:	idiv   DWORD PTR [ebx+0x4]
  41e5e5:	dec    esi
  41e5e6:	lock lods eax,DWORD PTR ds:[esi]
  41e5e8:	pop    ds
  41e5e9:	dec    eax
  41e5ea:	jmp    0x9442b711
  41e5ef:	add    al,0xe6
  41e5f1:	push   edx
  41e5f2:	jge    0x41e668
  41e5f4:	rol    dh,1
  41e5f6:	xor    DWORD PTR [ecx],ebp
  41e5f8:	sbb    cl,ah
  41e5fa:	js     0x41e5db
  41e5fc:	mov    edx,0x40edefac
  41e601:	std    
  41e602:	retf   0xef49
  41e605:	jb     0x41e67f
  41e607:	lahf   
  41e608:	cld    
  41e609:	aas    
  41e60a:	in     al,0x66
  41e60c:	push   ds
  41e60d:	sbb    DWORD PTR [edx+0x20],0xe1845891
  41e614:	sub    BYTE PTR [ebp+0x4581bc9b],cl
  41e61a:	push   ss
  41e61b:	mov    edi,0x855ef47a
  41e620:	xchg   edi,eax
  41e621:	xchg   esp,eax
  41e622:	jl     0x41e696
  41e624:	dec    ecx
  41e625:	mov    BYTE PTR [esi+0xbe222fe],bl
  41e62b:	xor    dl,ah
  41e62d:	add    BYTE PTR [eax+0x43087fb],al
  41e633:	je     0x41e698
  41e635:	call   0x63838702
  41e63a:	(bad)  
  41e63b:	fcmovbe st,st(2)
  41e63d:	or     BYTE PTR [esi+0x428adc44],0x2a
  41e644:	shl    DWORD PTR [ecx],cl
  41e646:	jle    0x41e639
  41e648:	outs   dx,DWORD PTR ds:[esi]
  41e649:	push   ss
  41e64a:	data16 aaa 
  41e64c:	inc    ebp
  41e64d:	ret    
  41e64e:	dec    ecx
  41e64f:	out    0x9,eax
  41e651:	push   ebx
  41e652:	gs aam 0xe5
  41e655:	scas   eax,DWORD PTR es:[edi]
  41e656:	or     bl,BYTE PTR [ebp-0x41b93ec4]
  41e65c:	data16 icebp 
  41e65e:	ins    BYTE PTR es:[edi],dx
  41e65f:	or     ebp,edi
  41e661:	sbb    BYTE PTR [edx],ah
  41e663:	jle    0x41e680
  41e665:	ret    0xc49f
  41e668:	ret    0x9d02
  41e66b:	imul   BYTE PTR [ebx-0x1f4956c3]
  41e671:	dec    ecx
  41e672:	inc    ebp
  41e673:	inc    edx
  41e674:	cdq    
  41e675:	cmp    al,0xdb
  41e677:	(bad)  
  41e679:	sub    eax,0x6bac5147
  41e67e:	dec    esi
  41e67f:	scas   al,BYTE PTR es:[edi]
  41e680:	cdq    
  41e681:	cdq    
  41e682:	mov    edi,0xd5eb9df0
  41e687:	xor    eax,0x7d4dbadd
  41e68c:	jmp    0x2f4e1848
  41e691:	fcmovnb st,st(3)
  41e693:	popf   
  41e694:	inc    edi
  41e695:	dec    edi
  41e696:	stos   BYTE PTR es:[edi],al
  41e697:	and    ebx,DWORD PTR [edx-0x638722c2]
  41e69d:	test   eax,0x7dba740d
  41e6a2:	sub    al,0x8d
  41e6a4:	or     ah,BYTE PTR [edx+0x748c9824]
  41e6aa:	fldenv [ebp+0x19]
  41e6ad:	inc    esp
  41e6ae:	fld    QWORD PTR [ecx+0x60d0451a]
  41e6b4:	xchg   ecx,eax
  41e6b5:	inc    eax
  41e6b6:	inc    edx
  41e6b7:	mov    dh,0x1b
  41e6b9:	test   BYTE PTR [edx+0x6c],ch
  41e6bc:	je     0x41e721
  41e6be:	je     0x41e736
  41e6c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6c1:	mov    ebx,0x736b6fe7
  41e6c6:	ds mov cl,0xd5
  41e6c9:	das    
  41e6ca:	fisttp QWORD PTR [edi+0x5228ea7e]
  41e6d0:	jae    0x41e6fc
  41e6d2:	test   bl,al
  41e6d4:	jg     0x41e6e2
  41e6d6:	(bad)  
  41e6d7:	adc    al,0xf2
  41e6d9:	mov    ch,0xe4
  41e6db:	out    dx,eax
  41e6dc:	xchg   edi,eax
  41e6dd:	pop    esp
  41e6de:	out    0xad,eax
  41e6e0:	test   eax,0x3647927e
  41e6e5:	mov    ah,0x89
  41e6e7:	ds (bad) 
  41e6eb:	call   0xd5e7:0xa88ac744
  41e6f2:	cmp    dl,al
  41e6f4:	push   0x62
  41e6f6:	cmp    ch,BYTE PTR [eax+0x6f]
  41e6f9:	neg    BYTE PTR [edx-0x66]
  41e6fc:	and    DWORD PTR [eax+0x35],edi
  41e6ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e700:	and    ah,BYTE PTR [ebp+0x7e0744cd]
  41e706:	sbb    ebp,DWORD PTR [ebx]
  41e708:	add    eax,DWORD PTR [edi-0xa978587]
  41e70e:	push   edi
  41e70f:	sub    eax,0x3c36b854
  41e714:	mov    dl,0x75
  41e716:	lods   al,BYTE PTR ds:[esi]
  41e717:	xchg   edx,eax
  41e718:	jp     0x41e6ba
  41e71a:	out    0xfb,al
  41e71c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e71d:	sbb    ah,BYTE PTR [ebx]
  41e71f:	inc    esp
  41e720:	pop    ebx
  41e721:	addr16 adc al,0x93
  41e724:	dec    ebp
  41e725:	bound  esi,QWORD PTR [esi+0x3bce8234]
  41e72b:	add    ah,BYTE PTR [edi+eiz*8-0x7f240349]
  41e732:	push   edi
  41e733:	ja     0x41e758
  41e735:	ss xchg esi,eax
  41e737:	jp     0x41e784
  41e739:	pop    ebx
  41e73a:	call   0x80d2:0xc7d5d266
  41e741:	and    esp,DWORD PTR [edx+0x20a028ed]
  41e747:	aaa    
  41e748:	bound  ecx,QWORD PTR [eax]
  41e74a:	idiv   DWORD PTR [ecx+0x2173b32e]
  41e750:	std    
  41e751:	dec    edx
  41e752:	ins    DWORD PTR es:[edi],dx
  41e753:	bound  eax,QWORD PTR [ebx]
  41e755:	es out dx,al
  41e757:	sbb    BYTE PTR [edi-0x5cf9a5e9],bl
  41e75d:	or     DWORD PTR [ebx-0x4cc4846b],esp
  41e763:	lahf   
  41e764:	loop   0x41e7d3
  41e766:	pop    eax
  41e767:	push   esp
  41e768:	dec    esp
  41e769:	psubusw mm1,QWORD PTR [edx+0x53]
  41e76d:	dec    edi
  41e76e:	sub    esi,DWORD PTR [ebx+esi*1-0x61]
  41e772:	cmp    dh,ch
  41e774:	mov    ?,WORD PTR [ebp+edi*1+0x5c50ddd8]
  41e77b:	push   0x71
  41e77d:	cmp    BYTE PTR [eax],cl
  41e77f:	mov    BYTE PTR [ebp+0x3d],bl
  41e782:	data16 mov dh,0xb7
  41e785:	adc    ch,cl
  41e787:	xchg   esi,eax
  41e788:	cmc    
  41e789:	sbb    DWORD PTR [ebx+0x45],ebp
  41e78c:	mov    edx,0xbb46b2e0
  41e791:	pop    ds
  41e792:	adc    ah,BYTE PTR [edi-0x79116660]
  41e798:	aaa    
  41e799:	clc    
  41e79a:	ins    DWORD PTR es:[edi],dx
  41e79b:	das    
  41e79c:	jnp    0x41e7d1
  41e79e:	add    eax,0x99673fe4
  41e7a3:	sbb    al,BYTE PTR [ebx+0x762430be]
  41e7a9:	cwde   
  41e7aa:	inc    BYTE PTR ds:0x80fa5b73
  41e7b0:	xchg   DWORD PTR [edi+0x34],ebx
  41e7b3:	pop    eax
  41e7b4:	test   DWORD PTR [ebx+0x3be60755],ebp
  41e7ba:	test   ah,bh
  41e7bc:	xor    al,0x5c
  41e7be:	js     0x41e74a
  41e7c0:	std    
  41e7c1:	test   eax,0x1514c0e7
  41e7c6:	sub    BYTE PTR [esi-0x3f9c97e5],al
  41e7cc:	adc    al,dl
  41e7ce:	cmp    al,0x96
  41e7d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7d1:	mov    ebp,edx
  41e7d3:	(bad)  
  41e7d4:	mov    BYTE PTR [edx],bh
  41e7d6:	or     ecx,ebx
  41e7d8:	(bad)  
  41e7d9:	adc    bh,ah
  41e7db:	shr    BYTE PTR [ebx-0x3faf4d25],0x37
  41e7e2:	xchg   ebx,eax
  41e7e3:	dec    esp
  41e7e4:	and    ebx,0x35
  41e7e7:	test   eax,0x8fbdcd5e
  41e7ec:	fwait
  41e7ed:	aad    0x5a
  41e7ef:	fistp  QWORD PTR [ecx+0x5b3d85af]
  41e7f5:	push   eax
  41e7f6:	push   ecx
  41e7f7:	mov    esp,0xb206f499
  41e7fc:	xor    dl,cl
  41e7fe:	and    eax,0xa4f164f1
  41e803:	or     DWORD PTR ds:0xfba936e9,ebx
  41e809:	push   es
  41e80a:	push   eax
  41e80b:	fdiv   QWORD PTR [esi+0x6a]
  41e80e:	sub    al,0xff
  41e810:	xlat   BYTE PTR ds:[ebx]
  41e811:	aas    
  41e812:	and    eax,0x3a7ae855
  41e817:	fcmove st,st(1)
  41e819:	or     ebx,ebp
  41e81b:	mov    eax,0x8b593de
  41e820:	push   edi
  41e821:	xor    ecx,DWORD PTR [ebp-0x7f4b5f89]
  41e827:	sbb    DWORD PTR [edi+0x37],0x5adc9810
  41e82e:	adc    al,0x59
  41e830:	mov    esp,0xa51e0f46
  41e835:	inc    ebx
  41e836:	cwde   
  41e837:	nop
  41e838:	cmp    esp,edi
  41e83a:	sub    BYTE PTR [edx+ebp*4-0x1c],0x8b
  41e83f:	inc    ecx
  41e840:	je     0x41e7dd
  41e842:	inc    edi
  41e843:	addr16 xor al,0xe6
  41e846:	arpl   WORD PTR [esi],sp
  41e848:	mov    bl,0x2b
  41e84a:	and    esp,esp
  41e84c:	adc    bh,bh
  41e84e:	enter  0xf43,0xdf
  41e852:	mov    dh,0xfe
  41e854:	shl    DWORD PTR [ebp-0x4972da13],cl
  41e85a:	loope  0x41e87e
  41e85c:	adc    al,0x28
  41e85e:	ret    0xd2ba
  41e861:	retf   0xad4f
  41e864:	popa   
  41e865:	add    DWORD PTR [edi-0x39e82968],esp
  41e86b:	in     al,dx
  41e86c:	stos   DWORD PTR es:[edi],eax
  41e86d:	adc    DWORD PTR [ebx+eiz*4-0x75390b8c],edi
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	pop    es
  41e876:	add    DWORD PTR [ebx-0x43a72013],edx
  41e87c:	mov    eax,0x25153
  41e881:	out    dx,al
  41e882:	icebp  
  41e883:	arpl   WORD PTR [eax],bp
  41e885:	repnz pushf 
  41e887:	std    
  41e888:	push   ebx
  41e889:	push   edx
  41e88a:	xlat   BYTE PTR ds:[ebx]
  41e88b:	add    eax,0x890318ea
  41e890:	add    eax,0x94e14c0e
  41e895:	jg     0x41e8f1
  41e897:	int    0xd2
  41e899:	dec    edx
  41e89a:	pusha  
  41e89b:	xchg   ebx,eax
  41e89d:	stos   BYTE PTR es:[edi],al
  41e89e:	gs mov ecx,0x1fef66a9
  41e8a4:	cwde   
  41e8a5:	adc    ecx,ebx
  41e8a7:	rol    BYTE PTR [ecx],cl
  41e8a9:	jne    0x41e8aa
  41e8ab:	stos   DWORD PTR es:[edi],eax
  41e8ac:	mov    DWORD PTR [eax],ecx
  41e8ae:	clc    
  41e8af:	sbb    eax,0x5ea1b1e4
  41e8b4:	cmc    
  41e8b5:	aam    0x76
  41e8b7:	ins    DWORD PTR es:[edi],dx
  41e8b8:	in     eax,0xf6
  41e8ba:	pop    ebx
  41e8bb:	arpl   WORD PTR gs:[edx+0xa942a04],bp
  41e8c2:	int    0xf1
  41e8c4:	jecxz  0x41e87a
  41e8c6:	and    DWORD PTR [ebx],0x7d
  41e8c9:	ss adc al,0x25
  41e8cc:	mov    ch,0x6
  41e8ce:	mov    ebx,0x61debdb7
  41e8d3:	sbb    ah,BYTE PTR [edi+0xac93ec9]
  41e8d9:	and    esp,DWORD PTR [ecx]
  41e8db:	cld    
  41e8dc:	bound  edi,QWORD PTR [ebx-0x77]
  41e8df:	in     eax,dx
  41e8e0:	out    dx,al
  41e8e1:	dec    BYTE PTR [esi+0x2fb6c4e8]
  41e8e7:	mov    ebx,0x848e0462
  41e8ec:	popa   
  41e8ed:	in     eax,0x54
  41e8ef:	dec    ebx
  41e8f0:	repz xor esp,DWORD PTR [edi+eiz*2-0x46134343]
  41e8f8:	scas   eax,DWORD PTR es:[edi]
  41e8f9:	mov    dh,0xcf
  41e8fb:	pop    eax
  41e8fc:	rcl    edx,0xd6
  41e8ff:	in     eax,dx
  41e900:	cmp    DWORD PTR [ebp-0x8c2f91c],ebp
  41e906:	xchg   ebx,eax
  41e907:	ins    DWORD PTR es:[edi],dx
  41e908:	xchg   edx,eax
  41e909:	and    DWORD PTR [edi],eax
  41e90b:	loope  0x41e8e3
  41e90d:	pusha  
  41e90e:	xor    DWORD PTR [eax+0x4b0ba171],ebp
  41e914:	jbe    0x41e98c
  41e916:	xchg   DWORD PTR [edx],edi
  41e918:	adc    esi,DWORD PTR [esi-0x282603e0]
  41e91e:	and    al,0xe2
  41e920:	lods   al,BYTE PTR ds:[esi]
  41e921:	pop    eax
  41e922:	jno    0x41e8b3
  41e924:	data16 (bad) 
  41e926:	cmp    eax,0xa80f0029
  41e92b:	sti    
  41e92c:	fmul   DWORD PTR [ebp+eax*2-0x67]
  41e930:	out    dx,eax
  41e931:	mov    ecx,0xcb39abac
  41e936:	jmp    0x41e8e6
  41e938:	adc    BYTE PTR [edx-0x1d],bh
  41e93b:	(bad)  
  41e93c:	std    
  41e93d:	dec    eax
  41e93e:	test   edi,esi
  41e940:	add    al,0x21
  41e942:	dec    ebx
  41e943:	(bad)  
  41e944:	out    dx,al
  41e945:	(bad)  
  41e946:	push   cs
  41e947:	dec    eax
  41e948:	lock jns 0x41e907
  41e94b:	popaw  
  41e94d:	fldcw  WORD PTR [edi+eax*8-0x37]
  41e951:	aad    0x82
  41e953:	popa   
  41e954:	sub    al,0x69
  41e956:	cmp    al,0x7b
  41e958:	adc    eax,DWORD PTR [edx-0x34bd01af]
  41e95e:	js     0x41e932
  41e960:	mov    al,ds:0xe7ad6cbe
  41e965:	add    ah,BYTE PTR ds:0x6ec5f474
  41e96b:	mov    ebx,0x7b77b620
  41e970:	call   0x27c8:0xbc023153
  41e977:	popf   
  41e978:	add    ecx,DWORD PTR [esi]
  41e97a:	adc    al,0xb7
  41e97c:	xchg   edx,eax
  41e97d:	sub    cl,BYTE PTR [ebx-0x2dcc5fc]
  41e983:	fsubrp st(4),st
  41e985:	mov    dh,0x80
  41e987:	scas   eax,DWORD PTR es:[edi]
  41e988:	sbb    edi,DWORD PTR [eax-0x17]
  41e98b:	int3   
  41e98c:	daa    
  41e98d:	int    0x80
  41e98f:	dec    ebp
  41e990:	fwait
  41e991:	pop    ecx
  41e992:	jne    0x41e962
  41e994:	inc    edi
  41e995:	or     ch,BYTE PTR cs:[edi]
  41e998:	mov    BYTE PTR [eax],ch
  41e99a:	add    DWORD PTR [eax+eax*1+0x5e],ebp
  41e99e:	cs push cs
  41e9a0:	ins    BYTE PTR es:[edi],dx
  41e9a1:	adc    BYTE PTR [edx-0x63],bl
  41e9a4:	add    al,0x9
  41e9a6:	rcr    DWORD PTR [esi+0x7692e213],0x5b
  41e9ad:	pushf  
  41e9ae:	sub    DWORD PTR [ebp-0x80],esp
  41e9b1:	and    BYTE PTR [edx-0x59],cl
  41e9b4:	pop    ebx
  41e9b5:	jge    0x41e9e4
  41e9b7:	adc    bh,ah
  41e9b9:	add    DWORD PTR [eax-0x64a16c4a],0x598fca52
  41e9c3:	retf   0x8558
  41e9c6:	sub    DWORD PTR [ebp+0xb7a7944],ebx
  41e9cc:	mov    ebp,0x35686d65
  41e9d1:	rcr    DWORD PTR [edx+0x4c],1
  41e9d4:	inc    eax
  41e9d5:	jecxz  0x41e967
  41e9d7:	test   BYTE PTR [ebx-0xdca8dde],0xc8
  41e9de:	jo     0x41e97e
  41e9e0:	mov    ecx,ebx
  41e9e2:	mov    esi,0x3d91d3e5
  41e9e7:	jle    0x41ea44
  41e9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9ea:	push   0xffffff93
  41e9ec:	setle  BYTE PTR [eax-0x32]
  41e9f0:	cmp    BYTE PTR [edx],al
  41e9f2:	jae    0x41ea39
  41e9f4:	push   0xe4a42e37
  41e9f9:	sub    DWORD PTR [ecx+0x51],edi
  41e9fc:	lods   al,BYTE PTR ds:[esi]
  41e9fd:	sti    
  41e9fe:	ret    
  41e9ff:	sub    BYTE PTR [ebx-0x3173eec4],al
  41ea05:	pop    ebp
  41ea06:	xlat   BYTE PTR ds:[ebx]
  41ea07:	pop    ebx
  41ea08:	xchg   ecx,eax
  41ea09:	test   al,0xf9
  41ea0b:	jmpw   0x4711
  41ea0f:	je     0x41ea5d
  41ea11:	pop    ebx
  41ea12:	jmp    0x41ea13
  41ea14:	dec    edi
  41ea15:	jno    0x41ea59
  41ea17:	cs mov edi,0x15ca4011
  41ea1d:	push   es
  41ea1e:	dec    edx
  41ea1f:	fistp  WORD PTR [ebp+0x69]
  41ea22:	rcl    BYTE PTR [edi+0x3a09d21c],0x31
  41ea29:	sub    eax,0x608cf82a
  41ea2e:	xor    ah,bh
  41ea30:	idiv   al
  41ea32:	imul   ebp,ebx,0xffffffda
  41ea35:	aaa    
  41ea36:	in     al,0x6c
  41ea38:	sbb    ch,BYTE PTR [ecx-0x34]
  41ea3b:	dec    esi
  41ea3c:	xchg   ebx,eax
  41ea3d:	cmp    eax,0xaa56eaf5
  41ea43:	cmp    ch,BYTE PTR fs:[edx]
  41ea46:	imul   ebp,DWORD PTR [ebx+0x14],0x4d319c7c
  41ea4d:	sub    DWORD PTR [edi-0x39c7d8bf],0x90eda72f
  41ea57:	cs sub al,0xcf
  41ea5a:	nop
  41ea5b:	test   al,0xa5
  41ea5d:	icebp  
  41ea5e:	lods   eax,DWORD PTR ds:[esi]
  41ea5f:	and    eax,0xd1366240
  41ea64:	mov    dh,0x36
  41ea66:	push   ebp
  41ea67:	pop    edi
  41ea68:	cmp    dl,bh
  41ea6a:	repnz fist WORD PTR [esi+0x420b12dc]
  41ea71:	mov    cl,BYTE PTR [ebp-0x28707809]
  41ea77:	or     eax,DWORD PTR [ecx+0x62a552e9]
  41ea7d:	and    eax,0x85bf9c7
  41ea82:	mov    bl,0xe0
  41ea84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea85:	stos   DWORD PTR es:[edi],eax
  41ea86:	pop    ss
  41ea87:	mov    ah,0x66
  41ea89:	sub    DWORD PTR [esi+edx*8],0x5bb4ea69
  41ea90:	xchg   esi,eax
  41ea91:	add    edi,ecx
  41ea93:	and    eax,0x52f7547e
  41ea98:	test   BYTE PTR [edi-0x6db0fdb8],bl
  41ea9e:	(bad)  
  41ea9f:	pop    edi
  41eaa0:	mov    ds:0x4bbe76f7,al
  41eaa5:	add    BYTE PTR [ecx-0x131f34e1],dh
  41eaab:	pop    eax
  41eaac:	cmp    DWORD PTR [edx+0x4],ebp
  41eaaf:	(bad)  
  41eab0:	sub    ah,BYTE PTR [ecx-0x57a56a06]
  41eab6:	mov    ds:0x6f91d163,al
  41eabb:	in     eax,dx
  41eabc:	imul   ecx,DWORD PTR [edi+0x48d7d7a8],0xffffffe9
  41eac3:	ins    DWORD PTR es:[edi],dx
  41eac4:	cmc    
  41eac5:	jns    0x41eab2
  41eac7:	sub    al,0x5d
  41eac9:	xchg   edx,eax
  41eaca:	lds    esi,FWORD PTR [esi]
  41eacc:	popa   
  41eacd:	loope  0x41eaf9
  41eacf:	xchg   ebp,eax
  41ead0:	sub    cl,BYTE PTR [esi-0x31]
  41ead3:	mov    edi,0xa59ff85f
  41ead8:	fbld   TBYTE PTR [eax]
  41eada:	xor    al,0x96
  41eadc:	fnsave [ebx]
  41eade:	jp     0x41eab7
  41eae0:	inc    ecx
  41eae1:	jl     0x41eb1b
  41eae3:	repnz sbb dh,BYTE PTR [edx]
  41eae6:	push   ds
  41eae7:	or     DWORD PTR [ebx+0xa5dff78],0x2d77ff5f
  41eaf1:	xchg   ecx,eax
  41eaf2:	inc    edi
  41eaf3:	inc    ebx
  41eaf4:	aaa    
  41eaf5:	mov    dh,0x92
  41eaf7:	outs   dx,BYTE PTR ds:[esi]
  41eaf8:	sub    eax,0x93a787bb
  41eafd:	lds    ebp,FWORD PTR [ecx+0x7a]
  41eb00:	pop    esi
  41eb01:	or     edi,ebp
  41eb03:	xchg   ebp,eax
  41eb04:	nop
  41eb05:	mov    al,ds:0x82ffb4e2
  41eb0a:	fmulp  st(1),st
  41eb0c:	mov    bh,0xeb
  41eb0e:	fstp   TBYTE PTR [ebx-0x6d]
  41eb11:	out    dx,al
  41eb12:	test   DWORD PTR [ecx-0x15],ecx
  41eb15:	sbb    eax,0xdac9eaf2
  41eb1a:	pop    esp
  41eb1b:	mov    ebp,0x96e8113
  41eb20:	into   
  41eb21:	sub    BYTE PTR [ebx-0x24],cl
  41eb24:	sub    DWORD PTR [esi+0x479af72e],eax
  41eb2a:	fisttp QWORD PTR [esi+edx*1-0x42]
  41eb2e:	and    ebx,ebp
  41eb30:	in     al,0x4e
  41eb32:	aad    0x5f
  41eb34:	mov    edi,eax
  41eb36:	and    BYTE PTR [ebx-0x45f68339],cl
  41eb3c:	sbb    bl,BYTE PTR [ecx]
  41eb3e:	sar    DWORD PTR [ecx-0x28c3ddf6],0x2c
  41eb45:	ret    0x94da
  41eb48:	push   eax
  41eb49:	gs xor al,0xb8
  41eb4c:	adc    eax,0x8e9fc8c6
  41eb51:	lods   eax,DWORD PTR ds:[esi]
  41eb52:	popf   
  41eb53:	shl    BYTE PTR [edi],0x75
  41eb56:	xor    eax,0x28dc3dfd
  41eb5b:	pop    ss
  41eb5c:	pusha  
  41eb5d:	push   es
  41eb5e:	mov    al,ds:0x799036f6
  41eb63:	cmp    esp,esp
  41eb65:	scas   eax,DWORD PTR es:[edi]
  41eb66:	xor    bh,BYTE PTR [ecx+ebx*8-0x7d14c85f]
  41eb6d:	imul   ebp,ebx,0xbfcd22bd
  41eb73:	jae    0x41eb58
  41eb75:	test   al,0xc7
  41eb77:	fcomp  QWORD PTR [ebx+0x2fce5da0]
  41eb7d:	and    eax,0x576f275e
  41eb82:	inc    ecx
  41eb83:	sti    
  41eb84:	lds    ebx,FWORD PTR [esi+0x36]
  41eb87:	add    al,0xf5
  41eb89:	mov    ch,0x9e
  41eb8b:	loope  0x41eba2
  41eb8d:	inc    ebp
  41eb8e:	xchg   esi,eax
  41eb8f:	mov    dh,0xff
  41eb91:	sub    bl,BYTE PTR [edi]
  41eb93:	inc    ebx
  41eb94:	pop    eax
  41eb95:	lock dec ebp
  41eb97:	test   BYTE PTR [edx-0x441c3b1f],bh
  41eb9d:	popa   
  41eb9e:	push   cs
  41eb9f:	arpl   WORD PTR [edi-0x41ee856],cx
  41eba5:	sbb    BYTE PTR [edi+eiz*1-0x78],al
  41eba9:	mov    gs,WORD PTR [edi]
  41ebab:	lock and cl,ah
  41ebae:	push   ecx
  41ebaf:	mov    eax,0x81fe980c
  41ebb4:	push   ecx
  41ebb5:	test   BYTE PTR [edi],0xe5
  41ebb8:	push   ebp
  41ebb9:	lods   al,BYTE PTR ds:[esi]
  41ebba:	in     eax,0x2e
  41ebbc:	or     al,0xf
  41ebbe:	mov    edx,0x298d14a1
  41ebc3:	sub    bl,cl
  41ebc5:	sbb    eax,0x66dc8b39
  41ebca:	dec    ebx
  41ebcb:	cmp    al,0xb4
  41ebcd:	int    0xd1
  41ebcf:	shl    bh,0x26
  41ebd2:	sub    esp,DWORD PTR [eax+0x25273b12]
  41ebd8:	lock test al,0xa0
  41ebdb:	xchg   edx,eax
  41ebdc:	(bad)  
  41ebdd:	dec    eax
  41ebde:	in     eax,0x98
  41ebe0:	push   cs
  41ebe1:	add    BYTE PTR [edx-0x476e6de9],dl
  41ebe7:	add    al,0x3d
  41ebe9:	fwait
  41ebea:	std    
  41ebeb:	daa    
  41ebec:	push   ss
  41ebed:	pop    edx
  41ebee:	cmc    
  41ebef:	aam    0x41
  41ebf1:	inc    esi
  41ebf2:	inc    edi
  41ebf3:	popf   
  41ebf4:	test   DWORD PTR [ebp-0x165b27dd],esi
  41ebfa:	test   al,0x8f
  41ebfc:	mov    ds:0x41e20528,al
  41ec01:	ret    0x9c3c
  41ec04:	jmp    0x4e39a5ca
  41ec09:	loopne 0x41ec82
  41ec0b:	sub    ebx,DWORD PTR [ebp-0x7b50a0d0]
  41ec11:	stos   BYTE PTR es:[edi],al
  41ec12:	mov    bl,0x43
  41ec14:	in     eax,0xb7
  41ec16:	add    DWORD PTR [ebx-0x279edd42],eax
  41ec1c:	fchs   
  41ec1e:	mov    cl,0x90
  41ec20:	fistp  QWORD PTR [edx]
  41ec22:	mov    ebx,0x5a6460de
  41ec27:	icebp  
  41ec28:	jmp    0x41ec6c
  41ec2a:	ja     0x41ec34
  41ec2c:	mov    bh,0xa6
  41ec2e:	clc    
  41ec2f:	outs   dx,DWORD PTR ds:[esi]
  41ec30:	adc    eax,0x44118088
  41ec35:	rcl    BYTE PTR [esi+ecx*1+0x61],0x71
  41ec3a:	(bad)  
  41ec3b:	imul   ecx,DWORD PTR [ebx+esi*1-0x8],0x2b194a9e
  41ec43:	aas    
  41ec44:	fnstenv [ebx+0x7e]
  41ec47:	pop    ebp
  41ec48:	and    dh,BYTE PTR [edx]
  41ec4a:	jb     0x41ec77
  41ec4c:	sbb    eax,0x5649bcf2
  41ec51:	ret    
  41ec52:	repz xchg esi,eax
  41ec54:	adc    ch,bh
  41ec56:	jecxz  0x41ecc3
  41ec58:	mov    esp,0x21dc7cf2
  41ec5d:	popa   
  41ec5e:	imul   ebx,DWORD PTR [eax-0x2b],0xa
  41ec62:	jg     0x41ec21
  41ec64:	jne    0x41ebe6
  41ec66:	ds (bad) 
  41ec69:	stos   BYTE PTR es:[edi],al
  41ec6a:	adc    BYTE PTR [ebp+edi*2-0x49b816f3],bh
  41ec71:	stos   DWORD PTR es:[edi],eax
  41ec72:	sbb    al,BYTE PTR [ecx-0x5734e6aa]
  41ec78:	cdq    
  41ec79:	mov    gs,WORD PTR [eax]
  41ec7b:	and    eax,0xb339ff8e
  41ec80:	and    BYTE PTR [ebx],0xaf
  41ec83:	gs loop 0x41ec69
  41ec86:	aaa    
  41ec87:	(bad)  
  41ec88:	or     BYTE PTR [ebx],bh
  41ec8a:	or     DWORD PTR [ecx-0x49],esp
  41ec8d:	mov    ebp,0xc64203e3
  41ec92:	shl    BYTE PTR [edi-0x4f06eb31],cl
  41ec98:	pusha  
  41ec99:	out    0x32,eax
  41ec9b:	bound  ecx,QWORD PTR [ebx]
  41ec9d:	mov    esi,0xc22f7e84
  41eca2:	sub    eax,DWORD PTR [eax]
  41eca4:	adc    ch,BYTE PTR [ecx-0x47d3864b]
  41ecaa:	retf   
  41ecab:	(bad)  
  41ecac:	xlat   BYTE PTR ds:[ebx]
  41ecad:	adc    BYTE PTR ds:0x678beff9,bh
  41ecb3:	mov    al,ds:0xe34fadb6
  41ecb8:	fiadd  DWORD PTR [edx+0x32c9007b]
  41ecbe:	sahf   
  41ecbf:	and    ebx,DWORD PTR ds:0xd295e1a6
  41ecc5:	pop    ss
  41ecc6:	sbb    eax,0x19c5c51e
  41eccb:	js     0x41ec8e
  41eccd:	cmp    BYTE PTR [ebp-0x11bab166],dh
  41ecd3:	rol    dh,cl
  41ecd5:	inc    esp
  41ecd6:	aad    0xa9
  41ecd8:	add    al,0x6e
  41ecda:	sbb    cl,BYTE PTR [ebp-0x64]
  41ecdd:	pop    edx
  41ecde:	(bad)  
  41ecdf:	out    dx,eax
  41ece0:	ds ret 0x823
  41ece4:	cmp    DWORD PTR [ebp+0x48641a7c],ebx
  41ecea:	mov    ebp,0x495efd9b
  41ecef:	adc    eax,0x33fb0c6e
  41ecf4:	adc    edx,DWORD PTR [esi+0x48de4035]
  41ecfa:	or     al,0xb5
  41ecfc:	(bad)  
  41ecfd:	pop    esi
  41ecfe:	in     al,dx
  41ecff:	mov    ebp,0xea545c87
  41ed04:	jl     0x41ed15
  41ed06:	pop    edx
  41ed07:	in     eax,0xe8
  41ed09:	hlt    
  41ed0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed0b:	sbb    DWORD PTR [edx-0xc09c19],ecx
  41ed11:	jge    0x41ecf9
  41ed13:	cmp    eax,0xb0999cb1
  41ed18:	or     dh,bl
  41ed1a:	xor    bl,BYTE PTR [esi-0x397b1cfd]
  41ed20:	or     ah,BYTE PTR [esi-0x1e76aefc]
  41ed26:	xchg   esp,eax
  41ed27:	ss add al,0x2d
  41ed2a:	outs   dx,BYTE PTR ds:[esi]
  41ed2b:	imul   ebp,eax,0x1b52ecaf
  41ed31:	dec    edi
  41ed32:	or     edi,DWORD PTR [edx-0x448adf62]
  41ed38:	xchg   ecx,eax
  41ed39:	outs   dx,DWORD PTR ds:[esi]
  41ed3a:	stc    
  41ed3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed3c:	fs in  al,0x6c
  41ed3f:	aad    0x49
  41ed41:	nop
  41ed42:	pop    ebx
  41ed43:	jmp    0x49e2:0xd65c81a6
  41ed4a:	xchg   ecx,eax
  41ed4b:	jb     0x41ecf3
  41ed4d:	int    0x61
  41ed4f:	(bad)  
  41ed50:	xor    al,0x66
  41ed52:	daa    
  41ed53:	and    esi,eax
  41ed55:	scas   al,BYTE PTR es:[edi]
  41ed56:	jno    0x41ed53
  41ed58:	sbb    cl,BYTE PTR [ecx]
  41ed5a:	shl    DWORD PTR [ebx+0x27c6a97f],cl
  41ed60:	mov    ds:0x4c89b357,al
  41ed65:	pop    ebx
  41ed66:	push   0xbf61099b
  41ed6b:	mov    ds:0x3805a1f8,eax
  41ed70:	in     al,0x74
  41ed72:	adc    eax,0x548442da
  41ed77:	lock sbb BYTE PTR [eax+0x4a],cl
  41ed7b:	daa    
  41ed7c:	mov    WORD PTR [edx-0x2f],es
  41ed7f:	jno    0x41edd8
  41ed81:	(bad)  
  41ed82:	scas   al,BYTE PTR es:[edi]
  41ed83:	mov    dh,0xcb
  41ed85:	pop    ecx
  41ed86:	sub    eax,DWORD PTR [edi*1+0x3c0d1df3]
  41ed8d:	xchg   esi,eax
  41ed8e:	push   cs
  41ed8f:	ja     0x41ed40
  41ed91:	xchg   ebx,eax
  41ed92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed93:	(bad)  
  41ed94:	popa   
  41ed95:	aam    0x79
  41ed97:	xchg   BYTE PTR [ebx-0x6d],ah
  41ed9a:	out    dx,al
  41ed9b:	aad    0x1e
  41ed9d:	ss stc 
  41ed9f:	mov    dl,0x5a
  41eda1:	mov    eax,0x228fe390
  41eda6:	aam    0x87
  41eda8:	(bad)  
  41eda9:	call   0x8f316b8e
  41edae:	imul   edx,edx,0x57855892
  41edb4:	mov    al,0x63
  41edb6:	xchg   edx,eax
  41edb7:	fld    TBYTE PTR [edx+eiz*4-0x6f6b6c02]
  41edbe:	(bad)  
  41edbf:	cli    
  41edc0:	pop    edx
  41edc1:	jg     0x41ee29
  41edc3:	cmp    ecx,esp
  41edc5:	fidivr DWORD PTR [ebp-0x4abf40dd]
  41edcb:	jns    0x41ed7c
  41edcd:	add    ecx,DWORD PTR [esi]
  41edcf:	daa    
  41edd0:	inc    ebx
  41edd1:	mov    ebx,0xb69a2f5a
  41edd6:	jo     0x41ee11
  41edd8:	(bad)  
  41edd9:	sbb    ebp,ecx
  41eddb:	lock fst QWORD PTR [ebp+0x2c]
  41eddf:	push   ds
  41ede0:	add    al,0x37
  41ede2:	stc    
  41ede3:	mov    ds:0xe811a01a,al
  41ede8:	dec    ebx
  41ede9:	dec    edi
  41edea:	pop    esp
  41edeb:	or     BYTE PTR [ebx],ah
  41eded:	xchg   al,dl
  41edef:	test   al,0xa5
  41edf1:	nop
  41edf2:	enter  0xf5cf,0xe
  41edf6:	mov    eax,0x9fa7fd71
  41edfb:	push   ecx
  41edfc:	fstp   DWORD PTR [eax+0x7b3f5351]
  41ee02:	cmp    al,0xeb
  41ee04:	adc    esi,eax
  41ee06:	arpl   sp,sp
  41ee08:	jge    0x41ee55
  41ee0a:	ret    
  41ee0b:	mov    eax,0x4ea83f8e
  41ee10:	push   ss
  41ee11:	(bad)  
  41ee12:	mov    eax,esp
  41ee14:	adc    ah,ch
  41ee16:	repz mov ah,0x40
  41ee19:	stos   BYTE PTR es:[edi],al
  41ee1a:	ins    BYTE PTR es:[edi],dx
  41ee1b:	repz cld 
  41ee1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee1e:	aas    
  41ee1f:	xchg   edx,eax
  41ee20:	sti    
  41ee21:	loope  0x41ee9e
  41ee23:	std    
  41ee24:	dec    edx
  41ee25:	push   ss
  41ee26:	popa   
  41ee27:	cli    
  41ee28:	mov    eax,0x19897147
  41ee2d:	fdiv   QWORD PTR [ecx]
  41ee2f:	xchg   esi,eax
  41ee30:	mov    bl,0x2d
  41ee32:	je     0x41ee91
  41ee34:	mov    ecx,DWORD PTR [ebp-0x3d6b2805]
  41ee3a:	rcl    BYTE PTR [ebx+0x51],cl
  41ee3d:	or     BYTE PTR [eax+0x72],bl
  41ee40:	test   bh,bl
  41ee42:	(bad)  
  41ee43:	xor    esi,edi
  41ee45:	ss dec edx
  41ee47:	xor    edx,ebp
  41ee49:	sbb    bl,BYTE PTR ds:0x418234eb
  41ee4f:	push   edx
  41ee50:	jae    0x41ee15
  41ee52:	jbe    0x41ee65
  41ee54:	adc    edi,esi
  41ee56:	and    al,0x5
  41ee58:	mov    ecx,0xc62f80a2
  41ee5d:	mov    esp,0x2b1af6c9
  41ee62:	mov    ds:0x2a1625a8,eax
  41ee67:	(bad)  
  41ee68:	xlat   BYTE PTR ds:[ebx]
  41ee69:	jb     0x41ee81
  41ee6b:	fs mov dl,0x70
  41ee6e:	stos   BYTE PTR es:[edi],al
  41ee6f:	or     BYTE PTR [ebp+0x49],bh
  41ee72:	or     al,0x29
  41ee74:	dec    esp
  41ee75:	inc    esi
  41ee76:	add    eax,0xd704b668
  41ee7b:	daa    
  41ee7c:	mov    bl,0x8f
  41ee7e:	and    eax,DWORD PTR [ebp+0x25]
  41ee81:	iret   
  41ee82:	shr    DWORD PTR [eax-0x2309205d],1
  41ee88:	clc    
  41ee89:	clc    
  41ee8a:	push   esp
  41ee8b:	call   0x86664066
  41ee90:	sbb    bl,dl
  41ee92:	dec    ecx
  41ee93:	inc    edi
  41ee94:	mov    al,ds:0xd975a393
  41ee99:	pop    ecx
  41ee9a:	xchg   esi,eax
  41ee9b:	or     esi,esp
  41ee9d:	push   es
  41ee9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee9f:	jmp    0x91c8:0xdf95422
  41eea6:	mov    ecx,0x7e1fedd
  41eeab:	mov    al,ds:0xa378cce9
  41eeb0:	mov    edi,0x79327157
  41eeb5:	cwde   
  41eeb6:	ja     0x41eea7
  41eeb8:	add    al,0x70
  41eebb:	les    ebx,FWORD PTR [edi]
  41eebd:	push   esi
  41eebe:	push   ss
  41eebf:	scas   eax,DWORD PTR es:[edi]
  41eec0:	sub    DWORD PTR [ebp+0x75cf77f8],esp
  41eec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eec7:	jge    0x41eef6
  41eec9:	adc    BYTE PTR [ebp-0x48664bf4],bl
  41eecf:	pop    es
  41eed0:	mov    al,ds:0x4a63161e
  41eed5:	push   edi
  41eed6:	inc    ebp
  41eed7:	xchg   bl,bh
  41eed9:	sub    BYTE PTR [edx+0x639ffe3f],al
  41eedf:	adc    BYTE PTR [edi+0x5b],dh
  41eee2:	ss out 0x41,al
  41eee5:	out    0x77,al
  41eee7:	pop    eax
  41eee8:	mov    edx,0x68a0edb6
  41eeed:	xchg   edi,eax
  41eeee:	push   0x68
  41eef0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef1:	jmp    0xf111:0x76968ee4
  41eef8:	mov    esi,0xe67c3023
  41eefd:	xlat   BYTE PTR ds:[ebx]
  41eefe:	rcl    BYTE PTR [eax+ebx*1-0x29],0xdb
  41ef03:	fisttp WORD PTR [esp+edx*2-0x32]
  41ef07:	aas    
  41ef08:	rol    DWORD PTR [edi],cl
  41ef0a:	out    0x9d,eax
  41ef0c:	inc    ecx
  41ef0d:	imul   ecx,DWORD PTR [edi+0x741ddf4b],0x1f
  41ef14:	mov    esi,0x512289df
  41ef19:	and    BYTE PTR [eax],0xe0
  41ef1c:	xor    eax,0xbd0b9f4
  41ef21:	add    al,0xe3
  41ef23:	jp     0x41ef86
  41ef25:	pop    esp
  41ef26:	xor    esi,edi
  41ef28:	sub    DWORD PTR [edx],0x8ca284e2
  41ef2e:	retf   
  41ef2f:	into   
  41ef30:	mov    gs,WORD PTR [ecx-0x4381baa9]
  41ef36:	mov    ecx,0x3fcb733c
  41ef3b:	out    dx,eax
  41ef3c:	cdq    
  41ef3d:	cdq    
  41ef3e:	mov    al,ds:0x8e15b50d
  41ef43:	cs inc ecx
  41ef45:	addr16 push edi
  41ef47:	dec    ebx
  41ef48:	sahf   
  41ef49:	ret    
  41ef4a:	in     al,0xf4
  41ef4c:	add    eax,0x5f43e2fa
  41ef51:	(bad)  
  41ef53:	fldcw  WORD PTR [eax+0x73]
  41ef56:	fistp  WORD PTR [ebx]
  41ef58:	cmp    BYTE PTR [ebp-0x5f],ah
  41ef5b:	jl     0x41ef71
  41ef5d:	pop    eax
  41ef5e:	jecxz  0x41ef2b
  41ef60:	sar    BYTE PTR [ecx],cl
  41ef62:	adc    eax,0x7e5a1b4b
  41ef67:	jge    0x41efe4
  41ef69:	xor    cl,BYTE PTR [edi]
  41ef6b:	shr    DWORD PTR [eax-0x9aca6e7],0x65
  41ef72:	fs in  al,0x9d
  41ef75:	sub    BYTE PTR [ecx+0x37e850c2],dh
  41ef7b:	jae    0x41ef3d
  41ef7d:	in     eax,dx
  41ef7e:	xchg   ebx,eax
  41ef7f:	xor    ecx,ecx
  41ef81:	mov    esp,0x4e948aea
  41ef86:	pushf  
  41ef87:	gs ja  0x41ef3d
  41ef8a:	cwde   
  41ef8b:	push   edx
  41ef8c:	adc    DWORD PTR [ecx],0x77
  41ef8f:	sub    eax,0x2dd4a5ef
  41ef94:	push   edx
  41ef95:	rcr    DWORD PTR [edi-0x74fa1ea5],0x90
  41ef9c:	cmp    edx,DWORD PTR [esi+ebp*2+0x31]
  41efa0:	add    edi,ebx
  41efa2:	mov    dl,0x9f
  41efa4:	xor    BYTE PTR [ebx-0x167c6a39],dh
  41efaa:	ins    DWORD PTR es:[edi],dx
  41efab:	add    BYTE PTR ds:0x4f32d353,al
  41efb1:	bound  eax,QWORD PTR [esi+0x78]
  41efb4:	out    0x92,al
  41efb6:	(bad)  
  41efb7:	enter  0x8045,0x56
  41efbb:	stc    
  41efbc:	popa   
  41efbd:	ins    BYTE PTR es:[edi],dx
  41efbe:	out    0x33,eax
  41efc0:	in     eax,dx
  41efc1:	retf   
  41efc2:	std    
  41efc3:	pop    es
  41efc4:	xchg   esi,eax
  41efc5:	pop    edi
  41efc6:	and    bl,bh
  41efc8:	xlat   BYTE PTR ds:[ebx]
  41efc9:	(bad)  
  41efca:	scas   al,BYTE PTR es:[edi]
  41efcb:	test   DWORD PTR [ecx-0x3a],0x45692187
  41efd2:	fadd   QWORD PTR [edi]
  41efd4:	push   eax
  41efd5:	ror    bl,1
  41efd7:	scas   al,BYTE PTR es:[edi]
  41efd8:	and    dl,al
  41efda:	inc    ecx
  41efdb:	not    ecx
  41efdd:	mov    esi,0x33cc5c5f
  41efe2:	fdiv   DWORD PTR [ebx+eiz*2-0x3f]
  41efe6:	arpl   WORD PTR [eax-0x2b1563b8],sp
  41efec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efed:	dec    ebx
  41efee:	push   0xffffffa3
  41eff0:	pop    esp
  41eff1:	pop    edi
  41eff2:	adc    al,0x0
  41eff4:	dec    esp
  41eff5:	mov    esp,0x942f68d6
  41effa:	aas    
  41effb:	jmp    0x41f070
  41effd:	pop    ds
  41effe:	lods   eax,DWORD PTR ds:[esi]
  41efff:	test   DWORD PTR [ebx-0x80],0x5fc1133
  41f006:	push   ds
  41f007:	leave  
  41f008:	mov    dh,0x3b
  41f00a:	pop    es
  41f00b:	(bad)  
  41f00c:	sub    esi,DWORD PTR [ecx]
  41f00e:	aaa    
  41f00f:	popf   
  41f010:	mov    ebp,0x988726
  41f015:	inc    eax
  41f016:	cld    
  41f017:	mov    eax,0xbb6c4be7
  41f01c:	int3   
  41f01d:	push   edx
  41f01e:	xchg   edx,eax
  41f01f:	into   
  41f020:	sub    al,0x35
  41f022:	fwait
  41f023:	or     al,0xfc
  41f025:	das    
  41f026:	std    
  41f027:	es push ecx
  41f029:	inc    ecx
  41f02a:	or     al,0x3b
  41f02c:	iret   
  41f02d:	or     bl,ah
  41f02f:	out    0x7a,al
  41f031:	dec    bh
  41f033:	out    dx,al
  41f034:	nop
  41f035:	mov    dh,BYTE PTR [ecx-0x6e6f7275]
  41f03b:	xchg   ebp,eax
  41f03c:	(bad)  
  41f03d:	fld    QWORD PTR [edx]
  41f03f:	xchg   ebp,eax
  41f040:	inc    ebp
  41f041:	repz push edi
  41f043:	xor    al,BYTE PTR [edi]
  41f045:	xchg   esp,eax
  41f046:	popf   
  41f047:	and    eax,DWORD PTR [ebp-0x63]
  41f04a:	push   ebx
  41f04b:	mov    eax,ss
  41f04d:	mov    dl,0x84
  41f04f:	(bad)  
  41f050:	pop    eax
  41f051:	cwde   
  41f052:	and    al,0x81
  41f054:	cmp    BYTE PTR [edi+eax*1-0x3f972964],bh
  41f05b:	das    
  41f05c:	nop
  41f05d:	jmp    0x41efee
  41f05f:	sbb    DWORD PTR [esi+0xcc4609f],eax
  41f065:	jns    0x41eff3
  41f067:	sbb    eax,0x30e3bfe8
  41f06c:	sbb    eax,0x4f5fe899
  41f071:	cmp    al,0x79
  41f073:	dec    eax
  41f074:	sub    BYTE PTR es:[ecx-0x66b9b78e],0x50
  41f07c:	(bad)  
  41f07d:	idiv   esp
  41f07f:	and    BYTE PTR [edi+0xe],dl
  41f082:	mov    al,ds:0x4ee51b65
  41f087:	mov    bh,0x75
  41f089:	test   eax,0x2890c8a1
  41f08e:	data16 (bad) 
  41f091:	xor    esi,ebp
  41f093:	sub    BYTE PTR [edx+edi*1-0x42],0x15
  41f098:	pop    ebx
  41f099:	scas   al,BYTE PTR es:[edi]
  41f09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f09b:	jg     0x41f0f6
  41f09d:	and    BYTE PTR [ecx],cl
  41f09f:	inc    esi
  41f0a0:	pcmpeqw mm2,QWORD PTR [ecx-0x6b]
  41f0a4:	lahf   
  41f0a5:	aaa    
  41f0a6:	mov    bl,BYTE PTR ds:0x95e4500e
  41f0ac:	dec    ebp
  41f0ad:	ja     0x41f127
  41f0af:	sub    al,0xb7
  41f0b1:	add    cl,BYTE PTR [ecx+0xee39e2f]
  41f0b7:	dec    edi
  41f0b8:	and    ebx,ebx
  41f0ba:	xor    al,0x6
  41f0bc:	xor    eax,0x85812e48
  41f0c1:	into   
  41f0c2:	dec    ebx
  41f0c3:	scas   eax,DWORD PTR es:[edi]
  41f0c4:	jp     0x41f0ef
  41f0c6:	or     ebx,DWORD PTR [ecx-0x66c909c0]
  41f0cc:	call   0xdaef:0x4db79060
  41f0d3:	rcr    DWORD PTR [ebx+0x1ce4a40],1
  41f0d9:	test   BYTE PTR gs:[esi+0x71],bh
  41f0dd:	dec    esp
  41f0de:	mov    ch,BYTE PTR [edx+0x44]
  41f0e1:	pop    ss
  41f0e2:	push   edi
  41f0e3:	xchg   edx,eax
  41f0e4:	(bad)  
  41f0e5:	adc    dl,BYTE PTR [edx+0x4fecf1b9]
  41f0eb:	imul   ecx,DWORD PTR [eax+0x70],0xffffffe4
  41f0ef:	cmpordps xmm6,XMMWORD PTR [ebx-0x2f]
  41f0f4:	push   esi
  41f0f5:	jno    0x41f0cd
  41f0f7:	in     eax,0x76
  41f0f9:	fs push es
  41f0fb:	cmp    al,0xb2
  41f0fd:	stos   DWORD PTR es:[edi],eax
  41f0fe:	mov    al,ds:0xc295143c
  41f103:	out    0xf0,al
  41f105:	add    eax,0x26ebc152
  41f10a:	jbe    0x41f167
  41f10c:	sbb    ebp,DWORD PTR [ecx]
  41f10e:	xchg   ebp,eax
  41f10f:	ror    DWORD PTR [eax],cl
  41f111:	mul    DWORD PTR [edx+0x3e930ced]
  41f117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f118:	dec    eax
  41f119:	retf   
  41f11a:	pop    ebp
  41f11b:	jl     0x41f15b
  41f11d:	sbb    dh,BYTE PTR [esi-0x1c]
  41f120:	dec    edi
  41f121:	adc    al,0xbe
  41f123:	(bad)  
  41f124:	div    BYTE PTR [esi+0xc]
  41f127:	jbe    0x41f0c2
  41f129:	sub    BYTE PTR [edx],dh
  41f12b:	dec    ecx
  41f12c:	mov    eax,DWORD PTR [edi+0x3c]
  41f12f:	arpl   WORD PTR [eax+0x1871e8f1],si
  41f135:	inc    eax
  41f136:	xor    eax,0x74be0c28
  41f13b:	(bad)  
  41f13c:	std    
  41f13d:	jnp    0x41f122
  41f13f:	test   al,0xcc
  41f141:	ds jmp 0x78cd:0xfdb23d70
  41f149:	push   edx
  41f14a:	int3   
  41f14b:	lahf   
  41f14c:	loop   0x41f198
  41f14e:	sbb    dh,BYTE PTR [eax+0x25]
  41f151:	pop    esi
  41f152:	js     0x41f179
  41f154:	pop    gs
  41f156:	pop    edx
  41f157:	iret   
  41f158:	sbb    al,BYTE PTR [edi-0xc79cbfb]
  41f15e:	test   BYTE PTR [edx+0x70],0xff
  41f162:	xchg   esp,eax
  41f163:	push   edx
  41f164:	das    
  41f165:	mov    ch,0xdb
  41f167:	cmp    al,cl
  41f169:	je     0x41f1df
  41f16b:	mov    ah,0x3d
  41f16d:	or     BYTE PTR [edi-0x4ee64f8c],bh
  41f173:	add    edx,edi
  41f175:	jnp    0x41f149
  41f177:	sub    BYTE PTR [ebx+edx*8],0x11
  41f17b:	dec    ecx
  41f17c:	push   es
  41f17d:	jge    0x41f1b7
  41f17f:	and    eax,0x5273b649
  41f184:	sub    DWORD PTR [esi-0x11a6f3bd],0xffffffcf
  41f18b:	ret    0x5977
  41f18e:	mov    eax,ds:0xfc035d41
  41f193:	int3   
  41f194:	adc    al,0x1b
  41f196:	retf   
  41f197:	inc    esp
  41f198:	mov    bh,0x1b
  41f19a:	cmp    al,BYTE PTR [ebp-0x3e]
  41f19d:	mov    ds:0x64ec4354,al
  41f1a2:	retf   0x90b1
  41f1a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1a6:	pop    ss
  41f1a7:	lock adc eax,0xb2183214
  41f1ad:	add    edx,DWORD PTR [ebx-0x6]
  41f1b0:	dec    edx
  41f1b1:	loope  0x41f1a6
  41f1b3:	mov    dh,0xe0
  41f1b5:	xor    esi,edi
  41f1b7:	lahf   
  41f1b8:	dec    edx
  41f1b9:	jne    0x41f151
  41f1bb:	cli    
  41f1bc:	or     ch,cl
  41f1be:	fsub   DWORD PTR [eax-0x2b]
  41f1c1:	adc    al,0xea
  41f1c3:	icebp  
  41f1c4:	pop    edi
  41f1c5:	(bad)  
  41f1c6:	cmc    
  41f1c7:	mov    bh,0xef
  41f1c9:	mov    eax,ds:0xf8c29dbb
  41f1ce:	lds    ebp,FWORD PTR [ebp+0x3a67e647]
  41f1d4:	fcmovb st,st(4)
  41f1d6:	push   ss
  41f1d7:	xor    BYTE PTR [edx-0x64],cl
  41f1da:	add    esp,DWORD PTR [eax-0x61]
  41f1dd:	jl     0x41f195
  41f1df:	inc    esi
  41f1e0:	repz pop esp
  41f1e2:	mov    al,0xf6
  41f1e4:	js     0x41f1ed
  41f1e6:	outs   dx,BYTE PTR ds:[esi]
  41f1e7:	add    al,0x31
  41f1e9:	fcomp  DWORD PTR [esi+0x51e034a9]
  41f1ef:	xor    eax,DWORD PTR [ecx]
  41f1f1:	pop    ecx
  41f1f2:	mov    ch,0x2e
  41f1f4:	lods   al,BYTE PTR ds:[esi]
  41f1f5:	cmp    ebp,DWORD PTR [ebp-0xa]
  41f1f8:	xchg   DWORD PTR [ebp-0x62],ebp
  41f1fb:	hlt    
  41f1fc:	xor    ebx,DWORD PTR [edi-0x43]
  41f1ff:	mov    edx,DWORD PTR [esi+0x11]
  41f202:	mov    edi,0xe09554a2
  41f207:	jne    0x41f234
  41f209:	adc    DWORD PTR [edi+0x5a],esi
  41f20c:	mov    eax,0x1720ea6c
  41f211:	into   
  41f212:	lods   eax,DWORD PTR ds:[esi]
  41f213:	add    BYTE PTR [edi+eax*1-0x56],dh
  41f217:	inc    edi
  41f218:	aas    
  41f219:	mul    DWORD PTR [ebp-0x1]
  41f21c:	fldenv [ebp-0x12]
  41f21f:	mov    al,ds:0x85e974f0
  41f224:	(bad)  
  41f225:	stos   BYTE PTR es:[edi],al
  41f226:	mov    esi,0xa8cc74c2
  41f22b:	dec    ebx
  41f22c:	mov    WORD PTR ds:0xddc4a9b7,?
  41f232:	mov    ebp,0xf3f4caae
  41f237:	push   edx
  41f238:	dec    esp
  41f239:	sbb    al,0xeb
  41f23b:	js     0x41f211
  41f23d:	pop    ebx
  41f23e:	xor    DWORD PTR [edi*2-0x2f799dc0],esi
  41f245:	nop
  41f246:	cmp    ecx,eax
  41f248:	fidiv  DWORD PTR [esi]
  41f24a:	mov    esp,0x2fdba651
  41f24f:	jecxz  0x41f22f
  41f251:	dec    BYTE PTR [ebx]
  41f253:	push   0x33
  41f255:	(bad)  
  41f256:	(bad)  [ebx]
  41f258:	neg    ebp
  41f25a:	ds pop esi
  41f25c:	add    DWORD PTR [edi-0x69906c56],eax
  41f262:	fisttp WORD PTR [esi]
  41f264:	inc    eax
  41f265:	jno    0x41f2be
  41f267:	pop    esp
  41f268:	stc    
  41f269:	imul   edi,DWORD PTR [ebx-0x1d772c85],0xffffff80
  41f270:	xchg   esp,eax
  41f271:	or     cl,BYTE PTR [edx+0x6c281e6f]
  41f277:	sbb    bh,BYTE PTR [ecx]
  41f279:	jle    0x41f27f
  41f27b:	xor    esp,DWORD PTR [eax]
  41f27d:	jmp    0x41f2b9
  41f27f:	jns    0x41f300
  41f281:	and    al,0x1b
  41f283:	ror    DWORD PTR [esi+0x3b1e25ea],1
  41f289:	ds stc 
  41f28b:	push   edx
  41f28c:	jmp    0x41f219
  41f28e:	pop    es
  41f28f:	ins    DWORD PTR es:[edi],dx
  41f290:	sti    
  41f291:	out    0xca,al
  41f293:	mov    esi,ebx
  41f295:	xchg   edi,eax
  41f296:	(bad)  
  41f297:	jmp    0x41f279
  41f299:	cmp    al,0x9f
  41f29b:	test   BYTE PTR [ebx],ah
  41f29d:	clc    
  41f29e:	ds xor bl,al
  41f2a1:	repnz in al,dx
  41f2a3:	xor    al,0xbb
  41f2a5:	sbb    BYTE PTR [esi-0x26],0x3e
  41f2a9:	sub    DWORD PTR [edx+eax*1],ebx
  41f2ac:	inc    esp
  41f2ad:	adc    al,0x17
  41f2af:	cmp    al,0xbc
  41f2b1:	sub    dl,bh
  41f2b3:	push   0x1ed0a217
  41f2b8:	addr16 das 
  41f2ba:	sub    al,0x3c
  41f2bc:	daa    
  41f2bd:	inc    edx
  41f2be:	aam    0x62
  41f2c0:	mov    DWORD PTR [edi],ebx
  41f2c2:	lock dec edx
  41f2c4:	push   ebx
  41f2c5:	loop   0x41f26e
  41f2c7:	or     al,0x95
  41f2c9:	or     al,0xc1
  41f2cb:	in     al,dx
  41f2cc:	into   
  41f2cd:	pop    eax
  41f2ce:	mov    ebx,DWORD PTR [edi-0x1f]
  41f2d1:	xchg   BYTE PTR [edi],bl
  41f2d3:	or     eax,0xfa03465a
  41f2d8:	and    BYTE PTR [esp+ebx*1+0x37751fae],bh
  41f2df:	data16 aam 0x17
  41f2e2:	in     eax,dx
  41f2e3:	scas   eax,DWORD PTR es:[edi]
  41f2e4:	out    0x27,eax
  41f2e6:	retf   0xb013
  41f2e9:	adc    DWORD PTR [ebp+eiz*1-0x1ac8206b],0xf566f2b8
  41f2f4:	push   es
  41f2f5:	xor    eax,0x2eb02835
  41f2fa:	int3   
  41f2fb:	jle    0x41f2eb
  41f2fd:	and    al,0xbd
  41f2ff:	xor    al,0xf2
  41f301:	mov    ah,0xaf
  41f303:	(bad)  
  41f304:	push   edx
  41f305:	mov    dl,0x69
  41f307:	retf   0xa582
  41f30a:	sahf   
  41f30b:	je     0x41f2af
  41f30d:	mov    ah,0xde
  41f30f:	ret    0x1ba3
  41f312:	pop    ds
  41f313:	mov    BYTE PTR [ecx+0x9],al
  41f316:	sub    edx,eax
  41f318:	loopne 0x41f2d4
  41f31a:	les    ecx,FWORD PTR [ebx+0x1eedaa8]
  41f320:	and    ah,BYTE PTR [ecx+eax*1-0xe]
  41f324:	clc    
  41f325:	fs cmp al,0x1d
  41f328:	jge    0x41f395
  41f32a:	out    0xbd,al
  41f32c:	outs   dx,DWORD PTR ds:[esi]
  41f32d:	stos   DWORD PTR es:[edi],eax
  41f32e:	call   0x6a3a:0x484b2c09
  41f335:	push   ebx
  41f336:	push   ebx
  41f337:	dec    esp
  41f338:	push   0x61
  41f33a:	enter  0xe051,0x8a
  41f33e:	inc    eax
  41f33f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f340:	div    DWORD PTR [ebx]
  41f342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f343:	out    dx,al
  41f344:	xor    DWORD PTR [edi+0x6d60f242],ebp
  41f34a:	push   edx
  41f34b:	in     al,0x3c
  41f34d:	or     eax,0xbd0066d1
  41f352:	add    eax,0x565f3cd9
  41f357:	lahf   
  41f358:	nop
  41f359:	iret   
  41f35a:	mov    BYTE PTR ds:0xa9636c0f,ch
  41f360:	mov    cl,0x87
  41f362:	adc    eax,0x7f3c5674
  41f367:	xchg   ecx,eax
  41f368:	lea    eax,[eiz*8+0x425ec922]
  41f36f:	fsubr  QWORD PTR [edi-0xc]
  41f372:	iret   
  41f373:	fiadd  WORD PTR [edi]
  41f375:	repz mov bh,0xa9
  41f378:	aam    0x75
  41f37a:	aad    0xa4
  41f37c:	xor    BYTE PTR [edi+0x18a08450],bl
  41f382:	leave  
  41f383:	pop    ebx
  41f384:	js     0x41f349
  41f386:	pop    ecx
  41f387:	sbb    al,0xb
  41f389:	mov    DWORD PTR ds:[edx-0x7948049d],ebx
  41f390:	fnstsw ax
  41f392:	dec    esi
  41f393:	pop    edi
  41f394:	sbb    BYTE PTR [esi],0x45
  41f397:	pop    ds
  41f398:	dec    eax
  41f399:	aaa    
  41f39a:	add    al,0x5a
  41f39c:	loope  0x41f3d8
  41f39e:	mov    ecx,0x561afa57
  41f3a3:	shl    DWORD PTR [esi+0x75792386],1
  41f3a9:	daa    
  41f3aa:	fwait
  41f3ab:	xor    BYTE PTR [ebp-0x56],ah
  41f3ae:	int3   
  41f3af:	aas    
  41f3b0:	shl    BYTE PTR [ebp+0x4a9bee37],0x6a
  41f3b7:	push   ecx
  41f3b8:	popf   
  41f3b9:	mov    eax,ds:0xde2f2d8b
  41f3be:	(bad)  
  41f3c1:	or     eax,0x1f6f617e
  41f3c6:	adc    DWORD PTR [edi-0x6e0d03cf],esp
  41f3cc:	call   0x6feb9f28
  41f3d1:	mov    BYTE PTR [eax],dh
  41f3d3:	jl     0x41f42f
  41f3d5:	sbb    eax,0x222eafce
  41f3da:	outs   dx,BYTE PTR ds:[esi]
  41f3db:	jmp    0x1c9d:0x5a0597fa
  41f3e2:	jle    0x41f3f9
  41f3e4:	stos   DWORD PTR es:[edi],eax
  41f3e5:	mov    al,0x93
  41f3e7:	mov    dh,ch
  41f3e9:	cwde   
  41f3ea:	xchg   ebp,eax
  41f3eb:	inc    ebp
  41f3ec:	xchg   BYTE PTR [ebx+esi*2-0x41],bl
  41f3f0:	xchg   edx,eax
  41f3f1:	(bad)  
  41f3f2:	les    edi,FWORD PTR [ebx+esi*1]
  41f3f5:	aas    
  41f3f6:	pop    ss
  41f3f7:	sbb    esi,DWORD PTR [esi+0x77b06ea9]
  41f3fd:	xchg   ebp,eax
  41f3fe:	and    al,0x2
  41f400:	ret    0x102d
  41f403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f404:	leave  
  41f405:	add    ch,BYTE PTR [esi-0x5e9b1dfe]
  41f40b:	jmp    0x47e5:0xe1fc10e8
  41f412:	stc    
  41f413:	lds    edx,FWORD PTR [ecx-0x53004b94]
  41f419:	mov    DWORD PTR [ebx+0x772fecb2],eax
  41f41f:	in     eax,0xd8
  41f421:	(bad)  
  41f424:	out    0x4d,eax
  41f426:	pop    esi
  41f427:	and    edi,esi
  41f429:	jmp    0xefc06590
  41f42e:	mov    cl,0xb1
  41f430:	cld    
  41f431:	or     al,0xed
  41f433:	(bad)  
  41f434:	adc    edi,DWORD PTR [ebx+eiz*2+0x24]
  41f438:	sbb    BYTE PTR [edi],dl
  41f43a:	and    eax,0xc99d9184
  41f43f:	xor    DWORD PTR [ebp+0x62fb556b],eax
  41f445:	mov    eax,0x94711d66
  41f44a:	test   eax,0xe22c6f1c
  41f44f:	jmp    0x18f7b1ae
  41f454:	sub    cl,dh
  41f456:	lahf   
  41f457:	add    bh,bh
  41f459:	mov    bl,0x52
  41f45b:	sbb    esp,DWORD PTR [eax]
  41f45d:	out    0xc8,eax
  41f45f:	push   0xe9966c1c
  41f464:	icebp  
  41f465:	push   edi
  41f466:	retf   0xfcf7
  41f469:	mov    edi,0x8fbe0395
  41f46e:	mov    ebp,0x7c0978a6
  41f473:	outs   dx,BYTE PTR ds:[esi]
  41f474:	ja     0x41f432
  41f476:	adc    DWORD PTR [eax+0xd],ebp
  41f479:	inc    ebx
  41f47a:	sahf   
  41f47b:	inc    esi
  41f47c:	inc    edx
  41f47d:	sub    DWORD PTR [ecx+0x36b2fb13],eax
  41f483:	in     eax,dx
  41f484:	les    ebx,FWORD PTR [ebx]
  41f486:	icebp  
  41f487:	jge    0x41f4a9
  41f489:	jmp    0xd547c22
  41f48e:	add    al,0x32
  41f490:	xor    ebp,esi
  41f492:	pop    ebp
  41f493:	int3   
  41f494:	xor    dh,BYTE PTR [ecx+eiz*2-0x61]
  41f498:	in     eax,0xcf
  41f49a:	push   ebp
  41f49b:	pusha  
  41f49c:	add    al,0xd2
  41f49e:	add    cl,BYTE PTR [ebx+0x9]
  41f4a1:	xchg   BYTE PTR [ebx-0x1e],cl
  41f4a4:	mov    ds:0xc662c750,al
  41f4a9:	ins    DWORD PTR es:[edi],dx
  41f4aa:	mov    esi,0x9a1c2f70
  41f4af:	fild   DWORD PTR [edi-0x55ce89bd]
  41f4b5:	stc    
  41f4b6:	adc    eax,0x9059d68
  41f4bb:	inc    esp
  41f4bc:	pop    eax
  41f4bd:	mov    BYTE PTR [ebp+0x5b97a057],ah
  41f4c3:	pop    esp
  41f4c4:	in     al,0xd7
  41f4c6:	test   DWORD PTR [edx-0x43],0x631354bd
  41f4cd:	in     eax,0x90
  41f4cf:	sbb    al,0xfb
  41f4d1:	lods   al,BYTE PTR ds:[esi]
  41f4d2:	sbb    WORD PTR [edi],0x66
  41f4d6:	cmp    BYTE PTR [edx-0x4d5d122a],0x43
  41f4dd:	nop
  41f4de:	xchg   ebp,eax
  41f4df:	cld    
  41f4e0:	mov    ebx,0xc7299763
  41f4e5:	jl     0x41f4eb
  41f4e7:	mov    eax,0x3e92ebf
  41f4ec:	add    ebp,DWORD PTR [ebp-0x662c47f1]
  41f4f2:	mov    dh,0x73
  41f4f4:	js     0x41f499
  41f4f6:	(bad)  
  41f4f7:	mov    ebp,0xe1b81e2d
  41f4fc:	xor    eax,0x5e84329e
  41f501:	ja     0x41f527
  41f503:	iret   
  41f504:	imul   ebx,DWORD PTR [esi],0xc8702547
  41f50a:	ret    0x1746
  41f50d:	adc    eax,DWORD PTR [di+0x26]
  41f511:	adc    eax,0xb9dccab1
  41f516:	dec    eax
  41f517:	xor    esi,edi
  41f519:	cdq    
  41f51a:	hlt    
  41f51b:	jg     0x41f53f
  41f51d:	mov    ds:0xdcc849b1,eax
  41f522:	mov    eax,edx
  41f524:	test   al,0xb8
  41f526:	sbb    edx,DWORD PTR [ebx+ebp*1]
  41f529:	pop    ecx
  41f52a:	and    DWORD PTR [edi+0x7b],0x8fff170a
  41f531:	loopne 0x41f4e9
  41f533:	jno    0x41f4bf
  41f535:	popa   
  41f536:	mov    ebx,0x5d4c5b26
  41f53b:	lock ficomp WORD PTR [edi+0x37a84b4b]
  41f542:	or     bl,bh
  41f544:	jb     0x41f52b
  41f546:	loop   0x41f545
  41f548:	xchg   ecx,eax
  41f549:	dec    edi
  41f54a:	push   edi
  41f54b:	mov    bl,0x22
  41f54d:	call   0x2bcd:0xa48f089f
  41f554:	cmp    eax,0xdaf8248f
  41f559:	pushf  
  41f55a:	mov    esi,0x55891a8b
  41f55f:	sahf   
  41f560:	sbb    al,0xc3
  41f562:	xchg   ebx,eax
  41f563:	jg     0x41f585
  41f565:	lds    esi,FWORD PTR [edx+0x14]
  41f568:	loopne 0x41f5d6
  41f56a:	(bad)  [edi+0x676627d]
  41f570:	mov    bh,0xa4
  41f572:	mov    cl,0x40
  41f574:	inc    ebp
  41f575:	pop    ebp
  41f576:	xor    BYTE PTR [esi+esi*2],dh
  41f579:	out    0x28,al
  41f57b:	add    dl,BYTE PTR [ebx+0x2b]
  41f57e:	add    al,0xd6
  41f580:	mov    edx,0x73ac2848
  41f585:	cmp    BYTE PTR [edx+0x20],ch
  41f588:	dec    edx
  41f589:	sahf   
  41f58a:	jmp    0xefd88e9f
  41f58f:	pop    ecx
  41f590:	mov    ds:0xe0743f1c,eax
  41f595:	adc    BYTE PTR [eax+edi*8],dh
  41f598:	cli    
  41f599:	mov    ecx,0xe9f6b085
  41f59e:	mov    ecx,0xb67b5cdd
  41f5a3:	lahf   
  41f5a4:	cmp    BYTE PTR [eax+0x6b1bc386],dh
  41f5aa:	test   al,0x3b
  41f5ac:	hlt    
  41f5ad:	mov    gs,WORD PTR [ebx+0x142950]
  41f5b3:	shl    ah,cl
  41f5b5:	into   
  41f5b6:	mov    ebp,0x4f8d0326
  41f5bb:	mov    esi,0x533ccadb
  41f5c0:	inc    ebp
  41f5c1:	inc    ebp
  41f5c2:	test   eax,0x5d1b893a
  41f5c7:	das    
  41f5c8:	and    DWORD PTR [ecx*8-0x6bddfbf4],0x20
  41f5d0:	pop    edx
  41f5d1:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f5d3:	mov    BYTE PTR [eax-0x7e],ch
  41f5d6:	rcl    BYTE PTR [ebp+ebx*2-0x58],0x7d
  41f5db:	mov    ds,WORD PTR cs:[esi+eiz*2+0x399df310]
  41f5e3:	mov    ebp,DWORD PTR ds:0x6b46e51e
  41f5e9:	ret    
  41f5ea:	lods   eax,DWORD PTR ds:[esi]
  41f5eb:	push   0x63
  41f5ed:	retf   
  41f5ee:	dec    ebx
  41f5ef:	and    al,0x75
  41f5f1:	dec    eax
  41f5f2:	mov    esp,0x4a9b9818
  41f5f7:	imul   edi,DWORD PTR [esi-0x43],0x74ed3db1
  41f5fe:	std    
  41f5ff:	pop    esi
  41f600:	lods   eax,DWORD PTR ds:[esi]
  41f601:	mov    edi,0x3be8c235
  41f606:	pop    ss
  41f607:	add    DWORD PTR [edx],0xaa06fa7f
  41f60d:	lea    ebx,gs:[ecx+0x1a]
  41f611:	lea    ebp,[ebx]
  41f613:	jl     0x41f688
  41f615:	mov    WORD PTR ds:0x7a5e4b3f,?
  41f61b:	add    ebx,DWORD PTR [ebx+0x4fa4fbcf]
  41f621:	dec    edi
  41f622:	pop    eax
  41f623:	jns    0x41f601
  41f625:	dec    esp
  41f626:	push   ebp
  41f627:	mov    ds:0xb4115047,al
  41f62c:	(bad)  
  41f62d:	stos   DWORD PTR es:[edi],eax
  41f62e:	jbe    0x41f6ab
  41f630:	cmc    
  41f631:	ret    0xd7d7
  41f634:	not    DWORD PTR [ebx+0x7e]
  41f637:	xchg   BYTE PTR [eax+edi*1-0x46e32d7a],dh
  41f63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f63f:	test   al,0x53
  41f641:	and    eax,0xbc2d853
  41f646:	inc    edi
  41f647:	or     BYTE PTR [esi+eax*8-0x5b7d8fc8],ch
  41f64e:	push   0x37
  41f650:	out    0x80,al
  41f652:	loop   0x41f695
  41f654:	out    dx,al
  41f655:	fwait
  41f656:	(bad)  
  41f657:	sbb    al,0x2c
  41f659:	push   esi
  41f65a:	cmp    eax,0x5f1b8e4f
  41f65f:	jnp    0x41f5fc
  41f661:	and    al,0x56
  41f663:	popa   
  41f664:	sbb    eax,0x3026e372
  41f669:	aas    
  41f66a:	dec    ebx
  41f66b:	add    al,0x90
  41f66d:	(bad)  
  41f66e:	mov    ss:0xf483d25d,al
  41f674:	mov    edx,0x8992850e
  41f679:	dec    eax
  41f67a:	add    al,0x86
  41f67c:	rol    bh,0x23
  41f67f:	push   ss
  41f680:	test   eax,0x229bde85
  41f685:	into   
  41f686:	push   ss
  41f687:	cmp    BYTE PTR [eax-0x16],al
  41f68a:	inc    ecx
  41f68b:	movzx  ebx,WORD PTR [ebx]
  41f68e:	jno    0x41f6ff
  41f690:	jb     0x41f66f
  41f692:	jmp    0x8f989d4
  41f697:	dec    ebx
  41f698:	pop    es
  41f699:	jb     0x41f704
  41f69b:	inc    esi
  41f69c:	mov    eax,0x34ca69e
  41f6a1:	jl     0x41f65c
  41f6a3:	adc    dh,BYTE PTR [eax-0x33]
  41f6a6:	mov    esi,0x72c9977
  41f6ab:	sbb    eax,DWORD PTR [edx+0x2ba676e7]
  41f6b1:	adc    DWORD PTR [ecx],esi
  41f6b3:	cmp    eax,0xa1b1c6d4
  41f6b8:	repz mov bl,0x5b
  41f6bb:	or     bh,bh
  41f6bd:	test   al,0x80
  41f6bf:	and    eax,0xf07c42e5
  41f6c4:	addr16 dec ebx
  41f6c6:	push   0xb306f91
  41f6cb:	mov    eax,ds:0x39ceedd2
  41f6d0:	adc    ch,BYTE PTR [ebx-0x585270aa]
  41f6d6:	inc    ebx
  41f6d7:	je     0x41f748
  41f6d9:	fldcw  WORD PTR [ecx-0x64]
  41f6dc:	jg     0x41f6b5
  41f6de:	jno    0x41f664
  41f6e0:	daa    
  41f6e1:	rcl    DWORD PTR [ebp-0x7a],cl
  41f6e4:	push   es
  41f6e5:	mov    ds:0x3b0b1671,al
  41f6ea:	and    al,0x6a
  41f6ed:	ins    BYTE PTR es:[edi],dx
  41f6ee:	mov    dl,0x15
  41f6f0:	pop    eax
  41f6f1:	repz sub eax,0x2ecf0cbd
  41f6f7:	sub    BYTE PTR [ebx+0x4e],cl
  41f6fa:	leave  
  41f6fb:	aam    0x64
  41f6fd:	sbb    al,0xb6
  41f6ff:	popf   
  41f700:	push   eax
  41f701:	sub    esp,DWORD PTR [edi+0xa]
  41f704:	cs cmc 
  41f706:	sbb    BYTE PTR [ecx+0x5c],ah
  41f709:	dec    edi
  41f70a:	push   ds
  41f70b:	sub    BYTE PTR [ebx+0x47f5e787],0xcf
  41f712:	cmp    bl,ch
  41f714:	xor    bh,BYTE PTR [ebp+0x41]
  41f717:	dec    ebx
  41f718:	(bad)  
  41f71a:	dec    ebp
  41f71b:	jg     0x41f704
  41f71d:	cmp    al,0xf7
  41f71f:	push   ecx
  41f720:	jmp    0x5609708c
  41f725:	cmp    ch,BYTE PTR [esi-0x5162e625]
  41f72b:	sbb    cl,BYTE PTR [esi+0x1]
  41f72e:	xor    ecx,DWORD PTR [edx+ebx*4]
  41f731:	dec    ebx
  41f732:	push   ebx
  41f733:	xchg   ebx,eax
  41f734:	xchg   ebx,eax
  41f735:	push   es
  41f736:	sbb    DWORD PTR [esi],ecx
  41f738:	sub    ecx,DWORD PTR [edx]
  41f73a:	cmc    
  41f73b:	xchg   ebx,eax
  41f73c:	sub    ebx,ebx
  41f73e:	mov    edx,DWORD PTR [edi]
  41f740:	mov    DWORD PTR [edi+0x69dea496],esi
  41f746:	push   eax
  41f747:	cli    
  41f748:	add    BYTE PTR [eax+edx*8-0x28afc2d9],cl
  41f74f:	cwde   
  41f750:	ja     0x41f76d
  41f752:	inc    esi
  41f753:	push   esi
  41f754:	sub    al,0x43
  41f756:	sar    DWORD PTR [eax+0x45],0x6e
  41f75a:	not    DWORD PTR [esi+0x4c]
  41f75d:	mov    esp,0xb19e6ce7
  41f762:	push   cs
  41f763:	stos   DWORD PTR es:[edi],eax
  41f764:	push   ecx
  41f765:	pop    es
  41f766:	cwde   
  41f767:	stc    
  41f768:	or     esp,DWORD PTR [esi+eax*1+0x3873974]
  41f76f:	std    
  41f770:	rcl    BYTE PTR [esi-0x29ab6fca],cl
  41f776:	ins    BYTE PTR es:[di],dx
  41f778:	imul   BYTE PTR [eax+edx*4+0x5e949faa]
  41f77f:	add    dl,BYTE PTR [ebp+0x29f715e9]
  41f785:	test   dh,cl
  41f787:	mov    eax,ds:0xb7769bbe
  41f78c:	add    al,0x9d
  41f78e:	fild   WORD PTR [ebx+0xe]
  41f791:	xor    BYTE PTR [edx-0x61],al
  41f794:	pop    ebp
  41f795:	sar    esp,cl
  41f797:	cli    
  41f798:	jbe    0x41f79d
  41f79a:	push   edi
  41f79b:	pop    ebx
  41f79c:	sub    edi,DWORD PTR [edi-0x51cd9a8c]
  41f7a2:	nop
  41f7a3:	mov    ebp,edi
  41f7a5:	or     BYTE PTR [esi],0x3f
  41f7a8:	fucomp st(3)
  41f7aa:	es adc eax,0x2f7af2ab
  41f7b0:	and    eax,0xee2bbae1
  41f7b5:	jo     0x41f777
  41f7b7:	pop    eax
  41f7b8:	inc    esi
  41f7b9:	mov    ebp,0x64c15c3f
  41f7be:	dec    esp
  41f7bf:	cmp    al,0xd8
  41f7c1:	sub    BYTE PTR [ebx-0x221cceb2],dh
  41f7c7:	es xchg edi,eax
  41f7c9:	aaa    
  41f7ca:	repz mov edx,0x8f8af4d0
  41f7d0:	sub    DWORD PTR ds:0x9fa8f15d,esp
  41f7d6:	sar    bl,1
  41f7d8:	cmc    
  41f7d9:	xor    ebx,DWORD PTR [esi]
  41f7db:	(bad)  
  41f7dc:	ins    DWORD PTR es:[edi],dx
  41f7dd:	or     esi,ebp
  41f7df:	mov    esi,0x3c3ddd14
  41f7e4:	jge    0x41f7f4
  41f7e6:	(bad)  
  41f7e7:	mov    bl,0xae
  41f7e9:	xchg   ebp,eax
  41f7ea:	fld    TBYTE PTR [ecx+0x741969a3]
  41f7f0:	mov    ds:0x1a57947e,eax
  41f7f5:	test   eax,0xb47eb916
  41f7fa:	das    
  41f7fb:	pop    ebp
  41f7fc:	out    dx,al
  41f7fd:	dec    edx
  41f7fe:	in     al,0xf1
  41f800:	lahf   
  41f801:	adc    eax,0x569a4268
  41f806:	lods   eax,DWORD PTR ds:[esi]
  41f807:	pop    edi
  41f808:	mov    dh,0x47
  41f80a:	and    ch,0x11
  41f80d:	mov    esi,DWORD PTR [eax-0x79fbef38]
  41f813:	cmc    
  41f814:	les    esi,FWORD PTR [edx+0x4d]
  41f817:	jmp    0x9f76:0x8c84b53b
  41f81e:	lea    esi,[edx]
  41f820:	mov    ecx,0xc7aec8d4
  41f825:	dec    edi
  41f826:	hlt    
  41f827:	sub    esp,DWORD PTR [esi+0x7897178f]
  41f82d:	aam    0x56
  41f82f:	add    DWORD PTR [esi],eax
  41f831:	cwde   
  41f832:	push   eax
  41f833:	sbb    DWORD PTR [ebp+ecx*4-0x3e2ab7b5],0xffffffde
  41f83b:	(bad)  
  41f83d:	test   DWORD PTR [ecx],esp
  41f83f:	dec    edi
  41f840:	sub    al,0x27
  41f842:	stos   BYTE PTR es:[edi],al
  41f843:	loop   0x41f7f1
  41f845:	lock xchg esi,eax
  41f847:	or     dh,BYTE PTR [edi]
  41f849:	rcl    DWORD PTR [esi-0x3c3fba59],0x2c
  41f850:	push   esp
  41f851:	push   ebx
  41f852:	add    ecx,DWORD PTR [edi]
  41f854:	cmp    BYTE PTR ds:0x348ae6f3,bl
  41f85a:	xor    ch,BYTE PTR [edi]
  41f85c:	les    ebx,FWORD PTR [ebx]
  41f85e:	inc    eax
  41f85f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f860:	pusha  
  41f861:	mov    al,ds:0xe4aa7183
  41f866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f867:	jb     0x41f80a
  41f869:	call   0x1143:0xef1e364d
  41f870:	jle    0x41f8a6
  41f872:	mov    eax,0xfe2450a9
  41f877:	push   ds
  41f878:	ins    DWORD PTR es:[edi],dx
  41f879:	push   cs
  41f87a:	mov    ebx,0x3c08cf6e
  41f87f:	jg     0x41f89f
  41f881:	call   0x823a196b
  41f886:	jle    0x41f854
  41f888:	add    BYTE PTR [edi+0x1b1b3e3e],0xdc
  41f88f:	inc    eax
  41f890:	mov    eax,0xcd12b977
  41f895:	dec    ecx
  41f896:	call   0x34e580e4
  41f89b:	es pop edi
  41f89d:	cmp    al,0x7a
  41f89f:	mov    ecx,0x287bf3db
  41f8a4:	xor    esi,DWORD PTR ds:0xedb18173
  41f8aa:	push   ebx
  41f8ab:	jo     0x41f901
  41f8ad:	dec    edx
  41f8ae:	add    ch,dl
  41f8b0:	mov    edi,0x4c9b2898
  41f8b5:	aaa    
  41f8b6:	fild   WORD PTR [eax]
  41f8b8:	sub    bl,dl
  41f8ba:	test   BYTE PTR [ecx+0x72790314],bl
  41f8c0:	mov    edi,edi
  41f8c2:	outs   dx,BYTE PTR ds:[esi]
  41f8c3:	xchg   edi,eax
  41f8c4:	mov    ss,WORD PTR ds:0xa23977f1
  41f8ca:	adc    BYTE PTR [ebx+0x40],ch
  41f8cd:	xchg   ch,dl
  41f8cf:	mov    BYTE PTR [esi-0x39538de9],cl
  41f8d5:	mov    eax,ds:0x5627f32
  41f8da:	hlt    
  41f8db:	push   cs
  41f8dc:	loopne 0x41f8ac
  41f8de:	not    al
  41f8e0:	mov    ds:0xa6144591,al
  41f8e5:	shl    BYTE PTR [esi],cl
  41f8e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8e8:	imul   ecx,DWORD PTR [ebp+ebp*4-0x57],0xfffffff0
  41f8ed:	jle    0x41f959
  41f8ef:	adc    BYTE PTR [eax-0x4e],dl
  41f8f2:	pop    ss
  41f8f3:	xchg   edx,eax
  41f8f4:	mov    al,ds:0x67215abb
  41f8f9:	adc    DWORD PTR [ecx+0x13ce7070],esi
  41f8ff:	mov    ebp,0x914beacf
  41f904:	mov    cl,0xdb
  41f906:	push   ebp
  41f907:	mov    BYTE PTR [ebp-0x6],cl
  41f90a:	mov    edi,0xe67967ef
  41f90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f910:	std    
  41f911:	push   eax
  41f912:	data16 into 
  41f914:	mov    ebx,0x49a2338c
  41f919:	xor    BYTE PTR [esi-0x25eb4c57],bh
  41f91f:	in     al,dx
  41f920:	test   al,0xf
  41f922:	fstp   TBYTE PTR [ebp+0x2ba9d0ae]
  41f928:	inc    ecx
  41f929:	data16 lahf 
  41f92b:	clc    
  41f92c:	sahf   
  41f92d:	xchg   ebx,eax
  41f92e:	inc    esi
  41f92f:	lock dec esi
  41f931:	push   edi
  41f932:	push   edx
  41f933:	ret    0x787e
  41f936:	push   0x68b02bb2
  41f93b:	mov    al,0x41
  41f93d:	inc    esi
  41f93e:	adc    cl,dh
  41f940:	test   al,0x8
  41f942:	mov    WORD PTR [eax+0x238a0aa8],es
  41f948:	aaa    
  41f949:	mov    dh,0x3e
  41f94b:	ds inc ebp
  41f94d:	out    0xf0,eax
  41f94f:	mov    bl,0x97
  41f951:	es xchg edi,eax
  41f953:	adc    al,0x5f
  41f955:	lods   eax,DWORD PTR ds:[esi]
  41f956:	mov    ds:0x6e722083,eax
  41f95b:	mov    esp,DWORD PTR [edi-0x71860da4]
  41f961:	jp     0x41f984
  41f963:	inc    edi
  41f964:	mov    bh,0x9c
  41f966:	int    0x84
  41f968:	shl    dh,1
  41f96a:	mov    al,BYTE PTR [ebx-0x35]
  41f96d:	sti    
  41f96e:	sub    edi,eax
  41f970:	adc    dl,dh
  41f972:	and    eax,0x28f920b0
  41f977:	xchg   ebx,eax
  41f978:	or     cl,cl
  41f97a:	push   esi
  41f97b:	daa    
  41f97c:	push   0x4b
  41f97e:	cmp    DWORD PTR [ecx+0x5979565a],0xc3e2786
  41f988:	loope  0x41f91c
  41f98a:	push   cs
  41f98b:	outs   dx,DWORD PTR ds:[esi]
  41f98c:	adc    eax,0x85694661
  41f991:	cmp    bh,ch
  41f993:	sahf   
  41f994:	xor    bl,BYTE PTR [eax+0x22]
  41f997:	sti    
  41f998:	pusha  
  41f999:	mov    al,ds:0xa583b041
  41f99e:	shl    BYTE PTR [ebx+0x64],0xc3
  41f9a2:	hlt    
  41f9a3:	lock sbb al,0xb2
  41f9a6:	adc    al,0xea
  41f9a8:	test   BYTE PTR [edi],bh
  41f9aa:	arpl   WORD PTR [ecx+0x694735a2],ax
  41f9b0:	bound  eax,QWORD PTR ds:0x3c232502
  41f9b6:	jle    0x41f9ac
  41f9b8:	lods   al,BYTE PTR ds:[esi]
  41f9b9:	out    0xa1,eax
  41f9bb:	fsubp  st(2),st
  41f9bd:	jle    0x41f9e9
  41f9bf:	ret    0xbf5
  41f9c2:	dec    edi
  41f9c3:	loop   0x41fa17
  41f9c5:	imul   ebp,DWORD PTR [ebp+0x0],0x46
  41f9c9:	mov    dl,0x51
  41f9cb:	push   ss
  41f9cc:	cwde   
  41f9cd:	fadd   st(4),st
  41f9cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d0:	test   BYTE PTR [edi-0x70],dh
  41f9d3:	or     BYTE PTR [eax+ecx*2],ah
  41f9d6:	jae    0x41fa06
  41f9d8:	(bad)  
  41f9d9:	rcr    esp,1
  41f9db:	and    BYTE PTR [edi+0x3c],dh
  41f9de:	pop    ecx
  41f9df:	sbb    DWORD PTR [ebx-0x48],esi
  41f9e2:	leave  
  41f9e3:	sub    ch,bh
  41f9e5:	sbb    dl,BYTE PTR [ebx]
  41f9e7:	xor    cl,BYTE PTR [edi-0x514cf412]
  41f9ed:	in     eax,0xa
  41f9ef:	sub    al,0xf5
  41f9f1:	jnp    0x41fa2a
  41f9f3:	mov    esi,0x5cfecf2a
  41f9f8:	and    edx,DWORD PTR [edi+ebx*8+0x51998e64]
  41f9ff:	imul   edi,ecx,0xfffffffc
  41fa02:	pop    ebx
  41fa03:	cmp    BYTE PTR [esi-0x26],ch
  41fa06:	in     al,0xf8
  41fa08:	test   edx,edi
  41fa0a:	pushf  
  41fa0b:	ins    DWORD PTR es:[edi],dx
  41fa0c:	mov    cl,0x90
  41fa0e:	icebp  
  41fa0f:	mov    dl,0x81
  41fa11:	fst    QWORD PTR [edi+edx*1+0x3d]
  41fa15:	shl    BYTE PTR [ebp+0x8],1
  41fa18:	sbb    BYTE PTR [eax],cl
  41fa1a:	cwde   
  41fa1b:	clc    
  41fa1c:	loop   0x41f9f8
  41fa1e:	dec    ebx
  41fa1f:	(bad)  
  41fa20:	jg     0x41fa9a
  41fa22:	jns    0x41f9f6
  41fa24:	es sub ecx,0x3e
  41fa28:	mov    ss:0xe3619b47,al
  41fa2e:	arpl   si,di
  41fa30:	(bad)  
  41fa31:	aad    0x83
  41fa33:	test   al,0x42
  41fa35:	jmp    0x41f9c3
  41fa37:	push   ecx
  41fa38:	lea    esi,[ebx-0x71915cb1]
  41fa3e:	lahf   
  41fa3f:	dec    esp
  41fa40:	inc    esp
  41fa41:	xlat   BYTE PTR ds:[ebx]
  41fa42:	dec    ebp
  41fa43:	push   ecx
  41fa44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa45:	repz ror BYTE PTR es:[ebp+0x79d8facb],0x95
  41fa4e:	dec    BYTE PTR [eax-0x5cb734c4]
  41fa54:	xchg   ebp,eax
  41fa55:	out    dx,ax
  41fa57:	xor    BYTE PTR [edi],ch
  41fa59:	aaa    
  41fa5a:	js     0x41fac5
  41fa5c:	mov    dh,0x53
  41fa5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa5f:	(bad)  
  41fa60:	xor    bl,BYTE PTR [ecx]
  41fa62:	push   ecx
  41fa63:	call   0xe60a:0xde635acd
  41fa6a:	out    dx,eax
  41fa6b:	popa   
  41fa6c:	sbb    BYTE PTR [eax*2+0x1c06da52],bl
  41fa73:	push   ebp
  41fa74:	(bad)  
  41fa75:	loop   0x41fa2e
  41fa77:	lods   al,BYTE PTR ds:[esi]
  41fa78:	dec    esi
  41fa79:	push   ds
  41fa7a:	out    dx,eax
  41fa7b:	push   eax
  41fa7c:	push   ebp
  41fa7d:	push   ebp
  41fa7e:	pop    DWORD PTR [ecx+0x7399e85d]
  41fa84:	mov    bl,0x77
  41fa86:	add    DWORD PTR [ecx-0xb],ebp
  41fa89:	or     DWORD PTR [eax],edx
  41fa8b:	sub    esi,esp
  41fa8d:	push   0x8a97a104
  41fa92:	dec    esp
  41fa93:	mov    bl,0x37
  41fa95:	retf   0xca4e
  41fa98:	sar    BYTE PTR [eax-0x16c26c5c],0x5a
  41fa9f:	cmp    DWORD PTR [eax+0x32],0x3e07f6af
  41faa6:	and    dh,dh
  41faa8:	cmp    eax,0x3931ad8f
  41faad:	daa    
  41faae:	inc    esi
  41faaf:	bound  ecx,QWORD PTR [eax-0x13b456ab]
  41fab5:	mov    edx,0x1c0aaa9e
  41faba:	sbb    DWORD PTR [eax-0x6e],ebp
  41fabd:	nop
  41fabe:	pop    ds
  41fabf:	dec    esi
  41fac0:	call   0xd62f95f0
  41fac5:	pushf  
  41fac6:	mov    al,ds:0xb750a018
  41facb:	jl     0x41faa8
  41facd:	test   DWORD PTR [ecx],ebp
  41facf:	cmp    BYTE PTR [edi-0xd],ah
  41fad2:	cmp    DWORD PTR [edi+0x566a4798],esi
  41fad8:	dec    edx
  41fad9:	jns    0x41fb19
  41fadb:	enter  0x6a4f,0x5b
  41fadf:	sub    DWORD PTR [edx+esi*2],esp
  41fae2:	sub    DWORD PTR [ecx+0x5],edx
  41fae5:	fcmovnu st,st(6)
  41fae7:	out    dx,eax
  41fae8:	jnp    0x41fb14
  41faea:	(bad)  
  41faeb:	int3   
  41faec:	xor    DWORD PTR [ebp+0x5d708bd3],ebp
  41faf2:	adc    eax,0xc90663af
  41faf7:	dec    eax
  41faf8:	xor    DWORD PTR [ebx+0x716973fc],eax
  41fafe:	mov    eax,ds:0xf5691cd5
  41fb03:	push   ss
  41fb04:	in     eax,dx
  41fb05:	push   edi
  41fb06:	push   ecx
  41fb07:	mov    ds:0x40fea43c,eax
  41fb0c:	or     BYTE PTR [esi-0x7e65401b],dh
  41fb12:	iret   
  41fb13:	sbb    DWORD PTR [edx+0x1d],0xffffffeb
  41fb17:	mov    ebx,0x44eb7e7d
  41fb1c:	(bad)
  41fb20:	adc    al,BYTE PTR [esi]
  41fb22:	pop    eax
  41fb23:	ffree  st(5)
  41fb25:	mov    edx,0x3f9ff2ac
  41fb2a:	stos   DWORD PTR es:[edi],eax
  41fb2b:	sub    BYTE PTR [ebp+0x3c],bh
  41fb2e:	and    bh,BYTE PTR [ecx]
  41fb30:	mov    ds:0xdcf3cacb,eax
  41fb35:	jmp    0x73a3:0x7b5b8e60
  41fb3c:	enter  0xa8ce,0xf4
  41fb40:	cld    
  41fb41:	pop    edi
  41fb42:	ror    DWORD PTR [ebx-0x26fb1e0d],0xb2
  41fb49:	dec    ebx
  41fb4a:	fmul   DWORD PTR [ecx+0x6a77938]
  41fb50:	(bad)
  41fb53:	cmp    BYTE PTR [eax+0x69791934],bl
  41fb59:	cmp    dl,ch
  41fb5b:	in     eax,0xb
  41fb5d:	(bad)  
  41fb5e:	int3   
  41fb5f:	jmp    0x58a9:0xa9df410a
  41fb66:	(bad)  
  41fb67:	hlt    
  41fb68:	jne    0x41fb84
  41fb6a:	adc    BYTE PTR [esi+0x21],dl
  41fb6d:	cdq    
  41fb6e:	or     al,0x8
  41fb70:	sbb    al,0x90
  41fb72:	adc    eax,0xc2b7bbf9
  41fb77:	popf   
  41fb78:	inc    edi
  41fb79:	nop    DWORD PTR [bp-0x24]
  41fb7e:	xchg   edx,eax
  41fb7f:	mov    al,ds:0x4e8893bc
  41fb84:	pop    ecx
  41fb85:	cmp    edi,DWORD PTR [ecx]
  41fb87:	add    al,BYTE PTR [esp+ecx*4-0x46b5c969]
  41fb8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb8f:	cmp    eax,0x7c57575b
  41fb94:	adc    DWORD PTR [ebx],esp
  41fb96:	push   edi
  41fb97:	mov    BYTE PTR [edx],bl
  41fb99:	mov    WORD PTR ss:[eax+0x10ca07d9],gs
  41fba0:	fnsave [eax+0x3519c044]
  41fba6:	out    0x86,al
  41fba8:	cmc    
  41fba9:	cmc    
  41fbaa:	dec    ecx
  41fbab:	in     al,dx
  41fbac:	stos   BYTE PTR es:[edi],al
  41fbad:	jmp    0xe8c0:0x92958bc1
  41fbb4:	icebp  
  41fbb5:	push   esp
  41fbb6:	mov    ebx,0x44cf1de
  41fbbb:	repnz xor eax,0x6ffd8ed6
  41fbc1:	add    dh,BYTE PTR [esi-0x3e]
  41fbc4:	mov    dl,0xe6
  41fbc6:	push   ecx
  41fbc7:	push   edx
  41fbc8:	sbb    DWORD PTR ds:0xb809360,edi
  41fbce:	sbb    al,0xb5
  41fbd0:	cmp    ebx,ebp
  41fbd2:	bound  eax,QWORD PTR [edi-0x30dac4fe]
  41fbd8:	or     dl,BYTE PTR [ebp+0x538f7c66]
  41fbde:	inc    ebx
  41fbdf:	pop    ss
  41fbe0:	(bad)  
  41fbe1:	sub    ebp,esp
  41fbe3:	cmc    
  41fbe4:	popa   
  41fbe5:	push   esi
  41fbe6:	xchg   ebp,eax
  41fbe7:	enter  0x75c9,0xc7
  41fbeb:	(bad)  
  41fbec:	push   DWORD PTR [esi]
  41fbee:	fs dec esp
  41fbf0:	in     al,0x66
  41fbf2:	ss jle 0x41fc51
  41fbf5:	cs pop esp
  41fbf7:	mov    DWORD PTR ds:0xe232c65,esp
  41fbfd:	jecxz  0x41fc09
  41fbff:	jno    0x41fc47
  41fc01:	lock sahf 
  41fc03:	cmp    dh,BYTE PTR [esi+edi*1]
  41fc06:	jmp    0x41fc3a
  41fc08:	sub    esp,DWORD PTR [esi+ebp*1+0x3d]
  41fc0c:	inc    esi
  41fc0d:	arpl   WORD PTR ds:0xea6be0f7,dx
  41fc13:	js     0x41fbfb
  41fc15:	shl    DWORD PTR [ebx+0x7d9dc2d8],cl
  41fc1b:	lds    ecx,FWORD PTR [ebx+0x89c2cbb]
  41fc21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc22:	imul   edi,DWORD PTR [ecx],0xcc9f7a59
  41fc28:	add    al,0x1f
  41fc2a:	mov    al,ds:0x7f40f975
  41fc2f:	mov    DWORD PTR [ebp+0xcb695f1],ebx
  41fc35:	push   ebx
  41fc36:	cli    
  41fc37:	xchg   edx,eax
  41fc38:	cmp    al,0x56
  41fc3a:	inc    ebx
  41fc3b:	js     0x41fbdf
  41fc3d:	jmp    0xc7a3c02d
  41fc42:	sub    bl,ah
  41fc44:	int3   
  41fc45:	arpl   WORD PTR [eax-0x6513a08f],bx
  41fc4b:	jb     0x41fcb7
  41fc4d:	xor    al,0x13
  41fc4f:	out    dx,al
  41fc50:	xchg   esi,eax
  41fc51:	daa    
  41fc52:	dec    edi
  41fc53:	in     al,0xa4
  41fc55:	(bad)  
  41fc57:	fdiv   DWORD PTR [ebx+0x3e308316]
  41fc5d:	mov    dh,0x6f
  41fc5f:	push   esp
  41fc60:	shr    BYTE PTR [eax],0xb9
  41fc63:	rcr    BYTE PTR [edi],cl
  41fc65:	int3   
  41fc66:	mov    DWORD PTR [ecx+eiz*4+0x49785f5e],ebp
  41fc6d:	inc    edx
  41fc6e:	xor    al,BYTE PTR [edx-0x7adc7dc8]
  41fc74:	sub    ebp,esi
  41fc76:	sub    al,BYTE PTR [esi+0xaf4ecb0]
  41fc7c:	mov    ds:0x7b4e4e69,eax
  41fc81:	je     0x41fcc7
  41fc83:	(bad)  
  41fc85:	shr    esp,1
  41fc87:	(bad)  
  41fc89:	mov    al,0xbd
  41fc8b:	ins    DWORD PTR es:[edi],dx
  41fc8c:	stc    
  41fc8d:	sbb    DWORD PTR [edi+0x2f28fc8b],ecx
  41fc93:	jno    0x41fc1e
  41fc95:	pop    ss
  41fc96:	in     eax,0xf0
  41fc98:	popf   
  41fc99:	cmp    eax,0x1e4c2aad
  41fc9e:	ss jmp 0xf88bbc1d
  41fca4:	pop    ds
  41fca5:	push   ds
  41fca6:	jbe    0x41fcfd
  41fca8:	dec    ebx
  41fca9:	sahf   
  41fcaa:	daa    
  41fcab:	std    
  41fcac:	jns    0x41fc4d
  41fcae:	cld    
  41fcaf:	xor    al,ah
  41fcb1:	mov    al,dh
  41fcb3:	idiv   esp
  41fcb5:	mov    al,ds:0x4400e20b
  41fcba:	fcomp  DWORD PTR [esi-0x15]
  41fcbd:	cli    
  41fcbe:	add    eax,0xf4b2f0d9
  41fcc3:	stos   DWORD PTR es:[edi],eax
  41fcc4:	fs push ecx
  41fcc6:	ins    DWORD PTR es:[edi],dx
  41fcc7:	fs dec al
  41fcca:	fimul  WORD PTR [edi-0x4282b7fe]
  41fcd0:	pusha  
  41fcd1:	sahf   
  41fcd2:	ins    BYTE PTR es:[edi],dx
  41fcd3:	call   0xe658:0xd3d78104
  41fcda:	jmp    0x7cf3d512
  41fcdf:	cmp    al,0xe
  41fce1:	repnz mov DWORD PTR [edi+0x5dc41483],esp
  41fce8:	in     al,dx
  41fce9:	cmp    dh,BYTE PTR [edi]
  41fceb:	test   eax,0x1600331a
  41fcf0:	mov    edx,0x5c196e81
  41fcf5:	call   DWORD PTR [eax]
  41fcf7:	jmp    0x41fcf0
  41fcf9:	dec    ebp
  41fcfa:	push   eax
  41fcfb:	ror    ch,0x28
  41fcfe:	and    bh,BYTE PTR [eax-0x37]
  41fd01:	xchg   DWORD PTR [ebx+0x52],esp
  41fd04:	outs   dx,DWORD PTR ds:[esi]
  41fd05:	sti    
  41fd06:	mov    al,ds:0x683cc6cf
  41fd0b:	adc    al,0x8
  41fd0e:	jmp    0x54e9b538
  41fd13:	mov    bh,0x9e
  41fd15:	mov    edx,0x943bb8c9
  41fd1a:	sub    BYTE PTR ds:0x762c698,bl
  41fd20:	push   ebp
  41fd21:	cmp    edx,DWORD PTR [esi]
  41fd23:	xchg   ecx,eax
  41fd24:	xlat   BYTE PTR ds:[ebx]
  41fd25:	aas    
  41fd26:	jmp    0x5a1a:0xdd9adfa9
  41fd2d:	rol    al,1
  41fd2f:	enter  0x5fd3,0xfb
  41fd33:	cdq    
  41fd34:	add    al,0xc8
  41fd36:	es inc ebp
  41fd38:	popf   
  41fd39:	inc    edi
  41fd3a:	out    0x54,eax
  41fd3c:	push   edi
  41fd3d:	xchg   esi,eax
  41fd3e:	jge    0x41fcdb
  41fd40:	sub    esp,DWORD PTR [ebx-0x59]
  41fd43:	sub    edx,DWORD PTR [ebx-0x1ff8222f]
  41fd49:	inc    eax
  41fd4a:	or     DWORD PTR [ebp+0xb],edx
  41fd4d:	cli    
  41fd4e:	mov    al,0x7
  41fd50:	test   al,0x52
  41fd52:	push   edi
  41fd53:	test   eax,0xbe3a449b
  41fd58:	inc    esp
  41fd59:	in     al,dx
  41fd5a:	hlt    
  41fd5b:	inc    ebp
  41fd5c:	daa    
  41fd5d:	pop    eax
  41fd5e:	and    eax,0x6d7837d2
  41fd63:	inc    eax
  41fd64:	in     eax,dx
  41fd65:	xor    dh,BYTE PTR [ecx+0x1e0fa9e3]
  41fd6b:	lahf   
  41fd6c:	xchg   esi,eax
  41fd6d:	les    eax,FWORD PTR [ebx-0x5b]
  41fd70:	cdq    
  41fd71:	xchg   edx,eax
  41fd72:	rol    esp,0xfe
  41fd75:	jg     0x41fd4c
  41fd77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd78:	push   ebp
  41fd79:	dec    edx
  41fd7a:	enter  0xf550,0x13
  41fd7e:	nop
  41fd7f:	aam    0xed
  41fd81:	cmp    edi,ecx
  41fd83:	bound  ebp,QWORD PTR [ebx]
  41fd85:	fst    DWORD PTR [ecx+0x80a9317]
  41fd8b:	outs   dx,DWORD PTR ds:[esi]
  41fd8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd8d:	mov    al,ds:0x309c201e
  41fd92:	xchg   edx,eax
  41fd93:	shl    DWORD PTR [esi],1
  41fd95:	or     al,0xd7
  41fd97:	cmp    al,0x82
  41fd99:	and    ah,BYTE PTR [esi-0x17]
  41fd9c:	leave  
  41fd9d:	ret    0x74d4
  41fda0:	jg     0x41fd60
  41fda2:	inc    esp
  41fda3:	icebp  
  41fda4:	sbb    ah,BYTE PTR [ebp-0x57c375d3]
  41fdaa:	cmp    edx,DWORD PTR [ebx]
  41fdac:	adc    eax,0x22bfc9e8
  41fdb1:	mov    al,ds:0xdfa8b54b
  41fdb6:	xor    eax,0x80545de3
  41fdbb:	and    ecx,DWORD PTR [edi+0x5]
  41fdbe:	mov    al,BYTE PTR [esi]
  41fdc0:	fld    TBYTE PTR [ecx]
  41fdc2:	adc    BYTE PTR [esi-0x171f175a],cl
  41fdc8:	and    al,0x63
  41fdca:	aaa    
  41fdcb:	outs   dx,DWORD PTR ds:[esi]
  41fdcc:	aam    0xcc
  41fdce:	in     eax,0xe6
  41fdd0:	retf   
  41fdd1:	xor    al,0x7a
  41fdd3:	mov    eax,ds:0x3bd9ef53
  41fdd8:	pusha  
  41fdd9:	test   BYTE PTR [ecx-0x727afe9e],0x80
  41fde0:	mov    ch,0xd0
  41fde2:	mov    ds,WORD PTR [ebp-0x252ba35c]
  41fde8:	ins    DWORD PTR es:[edi],dx
  41fde9:	inc    eax
  41fdea:	hlt    
  41fdeb:	push   esp
  41fdec:	(bad)  
  41fded:	jge    0x41fd78
  41fdef:	mov    esi,0x65e674e2
  41fdf4:	ja     0x41fd7f
  41fdf6:	cmp    eax,0x6eb6458b
  41fdfb:	popf   
  41fdfc:	mov    ah,0x55
  41fdfe:	retf   0x6f97
  41fe01:	sub    BYTE PTR [ebx+ebp*4-0x15177741],bh
  41fe08:	sbb    al,0xc3
  41fe0a:	push   ss
  41fe0b:	sahf   
  41fe0c:	xor    edi,edx
  41fe0e:	sub    esi,0xc
  41fe11:	call   0x4714bc4b
  41fe16:	gs or  eax,0x4804ade7
  41fe1c:	mov    fs,WORD PTR [ebx]
  41fe1e:	(bad)  
  41fe1f:	into   
  41fe20:	jb     0x41fe76
  41fe22:	fadd   QWORD PTR [edx+0x72]
  41fe25:	pop    edi
  41fe26:	ror    DWORD PTR [edx],0xf0
  41fe29:	aas    
  41fe2a:	out    0x0,eax
  41fe2c:	std    
  41fe2d:	cmp    dh,ch
  41fe2f:	lods   eax,DWORD PTR ds:[esi]
  41fe30:	ret    0x8e5d
  41fe33:	dec    esi
  41fe34:	shr    DWORD PTR [edi+ebp*2-0x3a1f232f],1
  41fe3b:	stos   DWORD PTR es:[edi],eax
  41fe3c:	or     BYTE PTR [ebx-0x5b],al
  41fe3f:	das    
  41fe40:	stc    
  41fe41:	retf   
  41fe42:	js     0x41fea0
  41fe44:	and    ebx,esi
  41fe46:	outs   dx,BYTE PTR ds:[esi]
  41fe47:	arpl   WORD PTR [esp+ebx*8+0x61],cx
  41fe4b:	inc    ebp
  41fe4c:	xchg   bl,bl
  41fe4e:	fs or  eax,0xd3835572
  41fe54:	add    ecx,0xffffffc9
  41fe57:	pop    ebp
  41fe58:	jae    0x41fe59
  41fe5a:	adc    eax,0x1472c2f4
  41fe5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe60:	inc    edi
  41fe61:	shl    BYTE PTR [ecx+0x2d],cl
  41fe64:	fnsave [edi+0x62]
  41fe67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe68:	pop    edi
  41fe69:	mov    ds:0xd6121175,eax
  41fe6e:	ror    BYTE PTR [edx],1
  41fe70:	adc    dh,ch
  41fe72:	xchg   ecx,eax
  41fe73:	stos   DWORD PTR es:[edi],eax
  41fe74:	(bad)  
  41fe76:	or     bh,BYTE PTR [esi+edi*1]
  41fe79:	xchg   edi,eax
  41fe7a:	ror    BYTE PTR [edi+0x42],0x3b
  41fe7e:	mov    dl,0x2b
  41fe80:	fdiv   DWORD PTR [ecx-0x2d]
  41fe83:	popf   
  41fe84:	add    al,0xd7
  41fe86:	dec    esp
  41fe87:	or     esp,DWORD PTR [edi-0x5c]
  41fe8a:	mov    ah,0x40
  41fe8c:	ins    DWORD PTR es:[edi],dx
  41fe8d:	scas   eax,DWORD PTR es:[edi]
  41fe8e:	pop    ds
  41fe8f:	jmp    0x41d8b595
  41fe94:	dec    BYTE PTR [ebx+0x5f]
  41fe97:	jae    0x41fe35
  41fe99:	push   ebx
  41fe9a:	adc    eax,0x5596dc91
  41fe9f:	dec    edi
  41fea0:	sub    BYTE PTR [esi+0x1f],al
  41fea3:	fld    TBYTE PTR [edx]
  41fea5:	jl     0x41fec7
  41fea7:	mov    edi,0x5a2eb7cd
  41feac:	inc    esi
  41fead:	push   ecx
  41feae:	jae    0x41fecc
  41feb0:	mov    ebx,eax
  41feb2:	cdq    
  41feb3:	lods   al,BYTE PTR ds:[esi]
  41feb4:	mov    ds:0x8aeadfbf,eax
  41feb9:	mov    bl,0xc
  41febb:	je     0x41fec4
  41febd:	add    ebx,DWORD PTR [edx-0x1f]
  41fec0:	fidivr DWORD PTR [eax]
  41fec2:	(bad)  
  41fec3:	fst    QWORD PTR [ebx-0x1d47e89e]
  41fec9:	and    al,0x56
  41fecb:	push   ss
  41fecc:	(bad)  
  41fece:	mov    al,0xf7
  41fed0:	in     eax,0x80
  41fed2:	sub    BYTE PTR [ecx+0x68],0xea
  41fed6:	push   esp
  41fed7:	leave  
  41fed8:	dec    ebp
  41fed9:	and    al,0xb9
  41fedb:	inc    ebp
  41fedc:	or     BYTE PTR [edx],dh
  41fede:	call   0x10a2dd0a
  41fee3:	pop    ss
  41fee4:	nop
  41fee5:	repz inc esp
  41fee7:	stc    
  41fee8:	mov    ah,0x1
  41feea:	fcmovne st,st(3)
  41feec:	dec    esi
  41feed:	pop    es
  41feee:	mov    dh,0xca
  41fef0:	popf   
  41fef1:	into   
  41fef2:	mov    al,ds:0x780a7a4
  41fef7:	(bad)  
  41fef8:	push   edx
  41fef9:	sbb    bl,BYTE PTR [ecx]
  41fefb:	jge    0x41feb1
  41fefd:	jmp    0xc0061859
  41ff02:	and    al,BYTE PTR [ebx-0xce38b62]
  41ff08:	jmp    0x41ff2f
  41ff0a:	pushf  
  41ff0b:	push   edx
  41ff0c:	mov    cl,BYTE PTR [ebp+0x5c9bfffe]
  41ff12:	mov    bh,0x2c
  41ff14:	bound  edx,QWORD PTR [esp+eiz*2+0x44]
  41ff18:	ret    
  41ff19:	in     al,0x8a
  41ff1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff1c:	into   
  41ff1d:	inc    eax
  41ff1e:	lahf   
  41ff1f:	xchg   edi,eax
  41ff20:	push   es
  41ff21:	pop    ebp
  41ff22:	sbb    al,BYTE PTR [ebx]
  41ff24:	and    edi,esi
  41ff26:	dec    ecx
  41ff27:	adc    BYTE PTR [esi+0x46],ah
  41ff2a:	pop    ebx
  41ff2b:	sub    eax,0x5b8f2623
  41ff30:	adc    eax,0x9f495ecf
  41ff35:	adc    ch,BYTE PTR [edi+0xde4956]
  41ff3b:	and    al,0x9a
  41ff3d:	bound  ecx,QWORD PTR [edi-0x5c]
  41ff40:	xchg   ecx,eax
  41ff41:	stc    
  41ff42:	mov    WORD PTR [edx+0x21],?
  41ff45:	cs cs test al,0x53
  41ff49:	enter  0xd791,0x18
  41ff4d:	outs   dx,DWORD PTR ds:[esi]
  41ff4e:	xchg   BYTE PTR [edx],dh
  41ff50:	dec    esi
  41ff51:	mov    cl,0x81
  41ff53:	or     ebx,DWORD PTR [esi]
  41ff55:	jb     0x41ffcb
  41ff57:	adc    edx,eax
  41ff59:	pushf  
  41ff5a:	and    esp,DWORD PTR [ebp+0x8]
  41ff5d:	scas   al,BYTE PTR es:[edi]
  41ff5e:	add    al,0x52
  41ff60:	enter  0x7843,0xb1
  41ff64:	and    edx,edi
  41ff66:	cmp    bl,BYTE PTR [eax-0x1f]
  41ff69:	and    BYTE PTR [ecx],0x47
  41ff6c:	mov    cl,0xff
  41ff6e:	mov    DWORD PTR [esp+eax*2-0xd],ebx
  41ff72:	ins    BYTE PTR es:[edi],dx
  41ff73:	mov    DWORD PTR [ecx],esi
  41ff75:	push   eax
  41ff76:	loope  0x41ff62
  41ff78:	push   eax
  41ff79:	push   0x17
  41ff7b:	inc    eax
  41ff7c:	sub    bl,BYTE PTR [eax]
  41ff7e:	aas    
  41ff7f:	inc    edx
  41ff80:	cmp    bl,bh
  41ff82:	leave  
  41ff83:	xor    ebp,DWORD PTR [eax-0x6b956b8]
  41ff89:	or     DWORD PTR [ecx+0x6a],edx
  41ff8c:	int3   
  41ff8d:	(bad)  [edx+0x19]
  41ff90:	das    
  41ff91:	call   0x7945:0x37229eba
  41ff98:	inc    edx
  41ff99:	mov    cl,0x37
  41ff9b:	mov    edi,0x701097e4
  41ffa0:	popa   
  41ffa1:	mov    DWORD PTR ds:0x9ae4dc8f,ecx
  41ffa7:	pop    ebp
  41ffa8:	or     DWORD PTR [edi],0x1e
  41ffab:	shl    BYTE PTR gs:[esi],0x4
  41ffaf:	pop    ds
  41ffb0:	int    0x14
  41ffb2:	cmp    ch,BYTE PTR [esp+eax*8+0x4]
  41ffb6:	sti    
  41ffb7:	cmp    eax,0x6a7da52b
  41ffbc:	lahf   
  41ffbd:	inc    edi
  41ffbe:	je     0x41ffac
  41ffc0:	in     eax,0x8a
  41ffc2:	dec    esp
  41ffc3:	les    edi,FWORD PTR [esi+ebx*8+0x6d]
  41ffc7:	bound  eax,QWORD PTR [esi+0xdf56843]
  41ffcd:	ds mov esp,0x3efb71c2
  41ffd3:	inc    esp
  41ffd4:	stos   BYTE PTR es:[edi],al
  41ffd5:	loop   0x420024
  41ffd7:	fs dec ebp
  41ffd9:	test   esp,edi
  41ffdb:	jge    0x41ff86
  41ffdd:	in     eax,0x3a
  41ffdf:	mov    ebp,ebp
  41ffe1:	sbb    esi,DWORD PTR [ebx+0x35c6978f]
  41ffe7:	pop    edi
  41ffe8:	test   ch,dh
  41ffea:	rcl    DWORD PTR [edi-0x2d],1
  41ffed:	jne    0x41ffbc
  41ffef:	test   DWORD PTR [ecx-0x47],0xa30a273c
  41fff6:	icebp  
  41fff7:	jl     0x420005
  41fff9:	mov    ah,0x72
  41fffb:	xor    esi,DWORD PTR [edi]
  41fffd:	pop    ebp
  41fffe:	or     esp,DWORD PTR [edi-0x652e84e6]
  420004:	or     BYTE PTR [esi],0xe0
  420007:	mov    esi,DWORD PTR [edi]
  420009:	cmc    
  42000a:	jo     0x41ffa8
  42000c:	lea    edx,ds:0x4f52cebc
  420012:	push   edi
  420013:	add    al,0x3b
  420015:	sub    al,0xcf
  420017:	punpcklbw mm0,DWORD PTR [esi+0x1c]
  42001b:	loop   0x420098
  42001d:	enter  0x607e,0x63
  420021:	sar    DWORD PTR ds:0x8ae9bfff,1
  420027:	test   al,bh
  420029:	jo     0x420073
  42002b:	sti    
  42002c:	xchg   ebp,eax
  42002d:	out    dx,eax
  42002e:	fs cdq 
  420030:	jle    0x4200a7
  420032:	pop    es
  420033:	nop
  420034:	mov    esp,es
  420036:	ret    
  420037:	stc    
  420038:	fcom   QWORD PTR ss:[ebp-0x39ae86b]
  42003f:	fdiv   DWORD PTR [ecx+0x25]
  420042:	lahf   
  420043:	pop    ebp
  420044:	dec    edx
  420045:	adc    ebx,DWORD PTR [ebx]
  420047:	cmp    BYTE PTR [edx+0x76],dl
  42004a:	push   edi
  42004b:	sbb    ch,BYTE PTR cs:[ebp-0x5350eec6]
  420052:	(bad)  
  420053:	sub    eax,DWORD PTR [ecx+0x4f8d2eb6]
  420059:	inc    ebp
  42005a:	adc    bh,BYTE PTR ds:0x603c4397
  420060:	dec    edi
  420061:	pop    ss
  420062:	mov    eax,ds:0x54b1ac05
  420067:	adc    BYTE PTR [eax],ah
  420069:	mov    BYTE PTR [ebp+0x4f],al
  42006c:	aaa    
  42006d:	jno    0x4200d4
  42006f:	adc    DWORD PTR [ebx],eax
  420071:	lock dec eax
  420073:	dec    edi
  420074:	test   eax,0xd5af35c0
  420079:	pop    ebp
  42007a:	(bad)  
  42007b:	jae    0x420032
  42007d:	xor    eax,0x21d7a485
  420082:	ds and bl,al
  420085:	(bad)  
  420086:	addr16 ret 
  420088:	(bad)  
  420089:	mov    dh,0x64
  42008b:	push   0x55a482b2
  420090:	in     al,0xed
  420092:	push   ebp
  420093:	and    al,ah
  420095:	scas   eax,DWORD PTR es:[edi]
  420096:	mov    edi,0x3dcb63f
  42009b:	fcmovne st,st(2)
  42009d:	stos   BYTE PTR es:[edi],al
  42009e:	ins    BYTE PTR es:[edi],dx
  42009f:	and    ch,BYTE PTR [edi-0xd]
  4200a2:	lods   al,BYTE PTR ds:[esi]
  4200a3:	sub    edi,esi
  4200a5:	push   ds
  4200a6:	cmp    eax,DWORD PTR [edx+0x3a6e2d88]
  4200ac:	sbb    ah,BYTE PTR ds:[edx-0x407bfb60]
  4200b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b4:	clc    
  4200b5:	jo     0x420075
  4200b7:	or     cl,BYTE PTR [edx+edi*1-0x626ebcb2]
  4200be:	int3   
  4200bf:	sub    DWORD PTR [eax-0x7c],0xffffff8b
  4200c3:	xchg   edi,eax
  4200c4:	or     DWORD PTR [ebx+0x45],edi
  4200c7:	std    
  4200c8:	inc    ebp
  4200c9:	or     DWORD PTR [ecx],ebp
  4200cb:	std    
  4200cc:	jmp    0x5bd36012
  4200d1:	push   0x72
  4200d3:	jle    0x42013f
  4200d5:	sar    eax,1
  4200d7:	ja     0x420118
  4200d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200da:	arpl   bp,ax
  4200dc:	cmp    eax,0x2d114348
  4200e1:	nop
  4200e2:	bound  esi,QWORD PTR [esi+0x7728821c]
  4200e8:	lock ror ebx,cl
  4200eb:	jb     0x4200ad
  4200ed:	xor    al,0x44
  4200ef:	mov    ds:0x1bcbc96a,al
  4200f4:	or     al,0xf3
  4200f6:	sbb    ebx,DWORD PTR [esp+ecx*2+0x466e3ba]
  4200fd:	lea    edi,[ebp+edi*1-0x7a723f66]
  420104:	dec    ebx
  420105:	imul   si,WORD PTR [ebx],0x26
  420109:	test   BYTE PTR [ecx+0x46],dh
  42010c:	dec    esp
  42010d:	fwait
  42010e:	xchg   ecx,eax
  42010f:	stos   DWORD PTR es:[edi],eax
  420110:	xchg   ebx,eax
  420111:	adc    BYTE PTR [edi+0x2a],0xfb
  420115:	or     dh,BYTE PTR [esi]
  420117:	add    dl,BYTE PTR [eax+0x13]
  42011a:	mov    ds:0xad1b8a57,al
  42011f:	es addr16 push esi
  420122:	outs   dx,DWORD PTR ds:[esi]
  420123:	sbb    al,0x94
  420125:	pop    eax
  420126:	inc    eax
  420127:	fild   DWORD PTR [edi-0x1714e525]
  42012d:	loope  0x420124
  42012f:	pop    ecx
  420130:	leave  
  420131:	sti    
  420132:	nop
  420133:	js     0x42012f
  420135:	push   ecx
  420136:	outs   dx,BYTE PTR ds:[esi]
  420137:	push   eax
  420138:	and    dl,BYTE PTR [esi]
  42013a:	aam    0x9d
  42013c:	xchg   edx,eax
  42013d:	or     BYTE PTR [ebp-0x37],ch
  420140:	out    dx,al
  420141:	xchg   DWORD PTR [ecx],eax
  420143:	ja     0x420142
  420145:	jl     0x42011d
  420147:	mov    al,ds:0xd404bb5b
  42014c:	das    
  42014d:	bound  edi,QWORD PTR [ebp+ebx*2-0x37351b96]
  420154:	add    edi,DWORD PTR [esi+0x2cd5d843]
  42015a:	push   esi
  42015b:	mov    dl,0x2f
  42015d:	lahf   
  42015e:	popf   
  42015f:	and    ebx,DWORD PTR [esi-0x6fd75b19]
  420165:	addr16 jb 0x420166
  420168:	push   ss
  420169:	mov    eax,ds:0x23529f22
  42016e:	inc    edx
  42016f:	xor    al,0x33
  420171:	push   ecx
  420172:	leave  
  420173:	loope  0x42010e
  420175:	leave  
  420176:	xor    esi,0xf7662466
  42017c:	pop    esi
  42017d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42017e:	lock in al,0xb3
  420181:	xchg   edi,eax
  420182:	dec    esi
  420183:	and    ecx,DWORD PTR [ecx-0x2]
  420186:	pop    ecx
  420187:	rol    BYTE PTR [esp],1
  42018a:	add    ebp,DWORD PTR [edx-0x19]
  42018d:	(bad)  
  42018e:	ins    BYTE PTR es:[edi],dx
  42018f:	out    dx,al
  420190:	adc    eax,ebp
  420192:	dec    ebp
  420193:	jl     0x4201e0
  420195:	ret    0x6563
  420198:	dec    ecx
  420199:	push   ss
  42019a:	cmc    
  42019b:	lods   eax,DWORD PTR ds:[esi]
  42019c:	scas   al,BYTE PTR es:[edi]
  42019d:	jbe    0x420201
  42019f:	xchg   edx,eax
  4201a0:	mov    fs,WORD PTR [edi-0x383e645d]
  4201a6:	cs out dx,al
  4201a8:	push   ds
  4201a9:	jmp    0x6f2c:0x2c4d81b1
  4201b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201b1:	cld    
  4201b2:	ret    0x8021
  4201b5:	inc    edi
  4201b6:	jmp    0x9a78:0x440fc718
  4201bd:	xchg   ecx,eax
  4201be:	and    al,0xc6
  4201c0:	push   esi
  4201c1:	sub    ecx,esi
  4201c3:	clc    
  4201c4:	nop
  4201c5:	or     DWORD PTR [eax],0x153e638f
  4201cb:	int    0x17
  4201cd:	mov    edi,0xfe91f7e1
  4201d2:	pop    edx
  4201d3:	stos   DWORD PTR es:[edi],eax
  4201d4:	ret    
  4201d5:	push   es
  4201d6:	pop    ebx
  4201d7:	repnz clc 
  4201d9:	loop   0x42018a
  4201db:	pop    ebp
  4201dc:	test   BYTE PTR [ebp+0x143adcd0],0x84
  4201e3:	out    0xdb,al
  4201e5:	out    dx,al
  4201e6:	loop   0x4201d1
  4201e8:	(bad)  
  4201e9:	and    DWORD PTR [esi+0x4b79c1bf],ebx
  4201ef:	dec    esp
  4201f0:	mov    bh,0x74
  4201f2:	(bad)  
  4201f3:	out    0x55,eax
  4201f5:	loopne 0x420270
  4201f7:	push   cs
  4201f8:	mov    ah,0x9c
  4201fa:	jne    0x4201cb
  4201fc:	mov    esi,0x988d213d
  420201:	cwde   
  420202:	xchg   ecx,eax
  420203:	aaa    
  420204:	dec    esp
  420205:	jge    0x4201dc
  420207:	jecxz  0x420231
  420209:	popf   
  42020a:	adc    eax,0xa572921
  42020f:	loope  0x42020e
  420211:	dec    esp
  420212:	(bad)  
  420214:	cmp    eax,0x9131eeea
  420219:	pop    fs
  42021b:	push   esp
  42021c:	das    
  42021d:	dec    ecx
  42021e:	xchg   BYTE PTR [ebp+ecx*1-0x15a44641],dh
  420225:	jne    0x420231
  420227:	call   FWORD PTR ss:[edx+0x57]
  42022b:	push   0xe0868a10
  420230:	sbb    edi,DWORD PTR [eax]
  420232:	jae    0x420221
  420234:	cmp    DWORD PTR [edx+ecx*4-0x7851f539],edi
  42023b:	push   ds
  42023c:	fwait
  42023d:	jl     0x4202a8
  42023f:	mov    al,0x9c
  420241:	shl    BYTE PTR [eax+0x6b28c7f8],cl
  420247:	ficomp DWORD PTR [eax]
  420249:	clc    
  42024a:	sbb    edi,edi
  42024c:	enter  0xeddb,0xb8
  420250:	aas    
  420251:	sbb    DWORD PTR [ecx],ebx
  420253:	cdq    
  420254:	enter  0x9324,0x9f
  420258:	sub    BYTE PTR [edi+0x259735a],cl
  42025e:	retf   0xee5
  420261:	jbe    0x420212
  420263:	pop    es
  420264:	(bad)  
  420265:	and    al,0x42
  420267:	xchg   ecx,eax
  420268:	xor    eax,0x30e66be1
  42026d:	mov    al,0x81
  42026f:	fisubr WORD PTR [ebx+0x5e]
  420272:	mov    BYTE PTR [esi-0x11a063da],cl
  420278:	cmp    ebx,edi
  42027a:	and    eax,0xd96f10aa
  42027f:	adc    al,0x23
  420281:	lds    eax,FWORD PTR [ebx+0x7b9ecff1]
  420287:	xchg   esp,eax
  420288:	jns    0x42025c
  42028a:	cmc    
  42028b:	xchg   edx,eax
  42028c:	out    0x2b,al
  42028e:	js     0x4202bc
  420290:	pop    eax
  420291:	int3   
  420292:	mov    DWORD PTR [eax+0x5],0xae4a78e9
  420299:	cmp    ebp,DWORD PTR [edx-0x2c]
  42029c:	and    eax,0x1b0ae716
  4202a1:	cmp    ecx,esp
  4202a3:	xchg   ecx,eax
  4202a4:	push   esi
  4202a5:	sahf   
  4202a6:	arpl   WORD PTR [esi],bx
  4202a8:	cmp    al,0x95
  4202aa:	or     eax,0xfe4e4d01
  4202af:	xor    dl,BYTE PTR [ebx-0x7b]
  4202b2:	stos   DWORD PTR es:[edi],eax
  4202b3:	inc    ebx
  4202b4:	nop
  4202b5:	shl    BYTE PTR ss:[edi-0x2d],cl
  4202b9:	push   ecx
  4202ba:	adc    DWORD PTR [edi+0x38586311],edi
  4202c0:	stc    
  4202c1:	push   0x7ae1b7ab
  4202c6:	ja     0x4202d8
  4202c8:	not    BYTE PTR [esi-0x4e199a04]
  4202ce:	add    DWORD PTR [ebx-0x49dae367],ebp
  4202d4:	cli    
  4202d5:	enter  0xd012,0xb1
  4202d9:	dec    edi
  4202da:	mov    WORD PTR [ebp-0x418c5a36],fs
  4202e0:	ins    BYTE PTR es:[edi],dx
  4202e1:	sub    eax,0x7a85b5d4
  4202e6:	adc    al,0x88
  4202e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e9:	sar    cl,0xb1
  4202ec:	mov    bh,0x66
  4202ee:	add    edi,DWORD PTR [esi-0x6aea4b84]
  4202f4:	jle    0x420370
  4202f6:	adc    al,0xdd
  4202f8:	leave  
  4202f9:	xor    eax,0xd9b170cf
  4202fe:	cwde   
  4202ff:	fadd   DWORD PTR [ebx]
  420301:	bound  eax,QWORD PTR [ecx-0x46cca4c]
  420307:	cwde   
  420308:	icebp  
  420309:	dec    eax
  42030a:	jp     0x4202cd
  42030c:	xchg   esi,eax
  42030d:	iret   
  42030e:	inc    edi
  42030f:	push   edx
  420310:	xor    ax,0x15e8
  420314:	jp     0x4202bb
  420316:	xor    esp,edx
  420318:	loopne 0x4202e8
  42031a:	pop    eax
  42031b:	xchg   edx,eax
  42031c:	pop    esp
  42031d:	sub    eax,0x6615c8a7
  420322:	mov    ds:0x49e8f4f5,al
  420327:	inc    esi
  420328:	adc    ah,BYTE PTR [ebp+0x7c4c9214]
  42032e:	jmp    0xbc9b:0x9f62cca3
  420335:	pushf  
  420336:	rcl    BYTE PTR [edi+esi*8-0x6d],0xab
  42033b:	and    eax,0xdd01ccd7
  420340:	adc    DWORD PTR [esi+0x4b4d1a15],ebx
  420346:	cmp    cl,cl
  420348:	imul   eax
  42034a:	data16 mov dh,0x4f
  42034d:	fistp  QWORD PTR [eax-0x5942bc52]
  420353:	sub    DWORD PTR [ebp+esi*2+0x7e30eac5],eax
  42035a:	data16 cmp BYTE PTR [ebp-0x2b98be87],cl
  420361:	jae    0x4202f5
  420363:	and    eax,0xb9933611
  420368:	jmp    0x42032b
  42036a:	push   edx
  42036b:	xor    DWORD PTR [esi+0x79fc4db9],eax
  420371:	pop    ebx
  420372:	sub    dh,bh
  420374:	cmp    ebp,DWORD PTR [edx-0x42703479]
  42037a:	into   
  42037b:	add    esi,DWORD PTR [edi-0x35]
  42037e:	aad    0xc3
  420380:	(bad)  
  420382:	shl    BYTE PTR [eax+eax*4],0xf0
  420386:	jne    0x4203a7
  420388:	dec    eax
  420389:	or     DWORD PTR [ebp+esi*4+0x6],ebp
  42038d:	shl    BYTE PTR ss:[edi+0x2a],1
  420391:	fwait
  420392:	sub    DWORD PTR [ecx],eax
  420394:	and    BYTE PTR [edx-0x4eb43666],bh
  42039a:	dec    esi
  42039b:	sub    bh,BYTE PTR [ebp+esi*4+0x1a]
  42039f:	and    BYTE PTR [edi],bh
  4203a1:	inc    ebp
  4203a2:	jo     0x420423
  4203a4:	loop   0x4203b5
  4203a6:	sbb    DWORD PTR [ebp-0x68],edx
  4203a9:	pop    edx
  4203aa:	and    dl,BYTE PTR [ecx-0x72]
  4203ad:	cmp    edx,edi
  4203af:	xchg   BYTE PTR [edi+0x644df68a],al
  4203b5:	jge    0x420357
  4203b7:	mov    ah,0x59
  4203b9:	mov    ch,0x3
  4203bb:	je     0x4203e3
  4203bd:	not    BYTE PTR [edi]
  4203bf:	rcr    BYTE PTR [edx],1
  4203c1:	pushf  
  4203c2:	stos   DWORD PTR es:[edi],eax
  4203c3:	or     cl,BYTE PTR [edi+0x60e46c73]
  4203c9:	retf   0xd189
  4203cc:	inc    esi
  4203cd:	add    dl,BYTE PTR [eax]
  4203cf:	sti    
  4203d0:	shr    BYTE PTR [edi+0x5ef0690a],cl
  4203d6:	fld    QWORD PTR [eax]
  4203d8:	or     al,0xac
  4203da:	data16 xchg BYTE PTR [bx-0x160f],dl
  4203e0:	pop    ds
  4203e1:	push   eax
  4203e2:	and    ebp,ebx
  4203e4:	pop    ss
  4203e5:	sbb    cl,ch
  4203e7:	(bad)  
  4203e8:	(bad)  
  4203ea:	mov    bl,0x41
  4203ec:	out    dx,eax
  4203ed:	mov    al,ds:0x18fd29d1
  4203f2:	(bad)  
  4203f3:	jb     0x420470
  4203f5:	sub    DWORD PTR [edx*1-0x75d09e01],0x21
  4203fd:	mov    esi,0xf251b3d7
  420402:	aaa    
  420403:	mov    ch,0xbc
  420405:	push   edx
  420406:	(bad)  
  420407:	jmp    FWORD PTR [edi-0x7f]
  42040a:	aad    0x18
  42040c:	xchg   ecx,eax
  42040d:	mov    ds:0xd06a23e2,eax
  420412:	mov    al,ds:0xf3ba9367
  420417:	adc    DWORD PTR [eax-0x3aac75ff],edx
  42041d:	xlat   BYTE PTR ds:[ebx]
  42041e:	inc    ebp
  42041f:	push   ebp
  420420:	xchg   ah,dl
  420422:	dec    eax
  420423:	cmp    al,0xf2
  420425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420426:	mov    dl,0xa9
  420428:	add    DWORD PTR [ebx-0x30e7cda8],0xaf490d0e
  420432:	enter  0x4319,0x20
  420436:	dec    edx
  420437:	gs dec ebp
  420439:	push   esi
  42043a:	jp     0x42048c
  42043c:	dec    eax
  42043d:	call   0x27d4:0xf23c58b
  420444:	daa    
  420445:	or     ah,ch
  420447:	pop    esi
  420448:	mov    al,ds:0x494e3b87
  42044d:	ret    
  42044e:	jmp    0x1cf77be9
  420453:	mov    dh,BYTE PTR [ebx+0x1e2dcc77]
  420459:	mov    ah,0x92
  42045b:	push   edx
  42045c:	pmaxsw mm7,QWORD PTR [ebx-0xa]
  420460:	rcl    dh,1
  420462:	xchg   edi,eax
  420463:	fwait
  420464:	jmp    0x7d42:0x6ae8666
  42046b:	int    0x5b
  42046d:	xor    al,0x99
  42046f:	mov    esi,0x7dee5dbf
  420474:	pop    ds
  420475:	das    
  420476:	pop    edi
  420477:	out    0x99,eax
  420479:	scas   eax,DWORD PTR es:[edi]
  42047a:	dec    edi
  42047b:	jne    0x4204c8
  42047d:	call   edi
  42047f:	jae    0x4204f0
  420481:	cmp    DWORD PTR [esi+0x4c9b3836],0xffffffab
  420488:	hlt    
  420489:	fwait
  42048a:	push   edx
  42048b:	fnstsw WORD PTR [eax-0x29765639]
  420491:	out    0x94,eax
  420493:	xchg   ebp,eax
  420494:	sahf   
  420495:	fidivr DWORD PTR [ebp+eax*4-0x37]
  420499:	or     DWORD PTR [edx+0x37],ecx
  42049c:	in     al,0xe0
  42049e:	lahf   
  42049f:	or     BYTE PTR [edi],cl
  4204a1:	int    0x1c
  4204a3:	scas   eax,DWORD PTR es:[edi]
  4204a4:	sub    eax,0x560ecc16
  4204a9:	addr16 sbb esi,esi
  4204ac:	es xchg edx,eax
  4204ae:	lahf   
  4204af:	or     DWORD PTR [eax+0x38adff8],0x12
  4204b6:	inc    esi
  4204b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204b8:	loopne 0x42048d
  4204ba:	ret    
  4204bb:	or     ebx,DWORD PTR [esi+eiz*8+0x41f06f9c]
  4204c2:	retf   0x75f3
  4204c5:	inc    ebx
  4204c6:	mov    eax,0x53266f31
  4204cb:	lock sub esp,DWORD PTR ds:0x122ade8b
  4204d2:	jmp    0x420484
  4204d4:	pop    ebp
  4204d5:	(bad)  
  4204d6:	jmp    0x42046e
  4204d8:	mov    ebp,0x2f19332a
  4204dd:	xchg   edi,eax
  4204de:	xchg   esi,eax
  4204df:	lds    esp,FWORD PTR [edx]
  4204e1:	inc    BYTE PTR [ebp-0x5d03d4ed]
  4204e7:	loopne 0x4204f5
  4204e9:	clc    
  4204ea:	or     cl,BYTE PTR [ebx-0x66de3437]
  4204f0:	pushf  
  4204f1:	stos   DWORD PTR es:[edi],eax
  4204f2:	jnp    0x42051c
  4204f4:	xchg   ebp,eax
  4204f5:	sti    
  4204f6:	add    ebp,edi
  4204f8:	clc    
  4204f9:	pop    eax
  4204fa:	jmp    0xe835c162
  4204ff:	icebp  
  420500:	xchg   edx,eax
  420501:	xor    DWORD PTR [ebp-0x52],edi
  420504:	pop    ebp
  420505:	mov    ch,0x40
  420507:	cmp    al,0xc1
  420509:	or     BYTE PTR [edi+0x6dcdb941],dh
  42050f:	retf   0xf779
  420512:	leave  
  420513:	and    BYTE PTR [ebp+0x0],bl
  420516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420517:	jbe    0x420511
  420519:	fs push ebp
  42051b:	push   esp
  42051c:	jnp    0x4204c0
  42051e:	mov    cl,BYTE PTR [eax]
  420520:	or     ch,BYTE PTR [ebx+edx*4-0x1ec143]
  420527:	jge    0x4204d4
  420529:	lahf   
  42052a:	fimul  DWORD PTR ds:0xea3adf73
  420530:	mov    esp,ecx
  420532:	dec    edx
  420533:	or     ebp,esp
  420535:	adc    al,BYTE PTR [ecx+0x14]
  420538:	pop    ss
  420539:	xchg   edi,eax
  42053a:	cmp    ecx,DWORD PTR [edi+0x724cea4b]
  420540:	mov    WORD PTR [edx+0x2c],fs
  420543:	cmp    ch,dh
  420545:	test   eax,0xebbcb25
  42054a:	sbb    BYTE PTR [edx],ah
  42054c:	mov    cl,0x6e
  42054e:	adc    DWORD PTR [ecx+0x2ff116f3],esi
  420554:	or     DWORD PTR [ebx-0x1421f970],0x888db826
  42055e:	adc    al,BYTE PTR [eax-0x36]
  420561:	sar    DWORD PTR [esi],cl
  420563:	aaa    
  420564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420565:	inc    edx
  420566:	mov    WORD PTR [ebp+0x33a1b323],fs
  42056c:	jb     0x4205d9
  42056e:	(bad)  
  42056f:	jno    0x42051e
  420571:	out    0xe3,eax
  420573:	jecxz  0x420567
  420575:	xchg   ebp,eax
  420576:	xchg   ebx,eax
  420577:	sub    DWORD PTR [edi],0xffffffae
  42057a:	xchg   edi,eax
  42057b:	jae    0x4205bb
  42057d:	add    al,0x53
  42057f:	pop    esp
  420580:	int    0xc9
  420582:	shl    edx,0x7
  420585:	ins    BYTE PTR es:[edi],dx
  420586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420587:	fist   WORD PTR [edi-0x40f6f234]
  42058d:	push   es
  42058e:	int    0x58
  420590:	ficomp DWORD PTR [edx+0x571b607]
  420596:	mov    ds:0xc6efd539,eax
  42059b:	lods   eax,DWORD PTR ds:[esi]
  42059c:	cld    
  42059d:	xchg   esp,eax
  42059e:	and    al,BYTE PTR [edx+0x1865fcd0]
  4205a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a5:	dec    eax
  4205a6:	push   es
  4205a7:	xchg   edx,eax
  4205a8:	mov    eax,0x60f59f70
  4205ad:	inc    ebx
  4205ae:	dec    esi
  4205af:	add    BYTE PTR [esi-0x7fc1bada],ch
  4205b5:	inc    edi
  4205b6:	pmaxub mm6,QWORD PTR [edx-0x32b7a6ca]
  4205bd:	retf   0x216b
  4205c0:	cmp    eax,0xc9efaa8f
  4205c5:	or     eax,0x8ab4660d
  4205ca:	stos   DWORD PTR es:[edi],eax
  4205cb:	mov    edi,0xdfd04d0f
  4205d0:	into   
  4205d1:	ins    DWORD PTR es:[edi],dx
  4205d2:	mov    WORD PTR [edi],cs
  4205d4:	mov    fs,WORD PTR [edx]
  4205d6:	sub    DWORD PTR [ebx+0x10],edx
  4205d9:	push   es
  4205da:	aaa    
  4205db:	mov    esi,0xda99bd72
  4205e0:	in     al,0xa4
  4205e2:	ret    0x1959
  4205e5:	and    DWORD PTR [eax-0x7141cd0c],esp
  4205eb:	ja     0x420591
  4205ed:	les    ebp,FWORD PTR [edx-0x40]
  4205f0:	call   0xe59f:0x7b60a7f7
  4205f7:	ja     0x42061a
  4205f9:	(bad)  
  4205fa:	jnp    0x420661
  4205fc:	cmp    eax,DWORD PTR [edx+esi*8-0x38c7277f]
  420603:	fstp   QWORD PTR [ebp-0x2bae04ad]
  420609:	fidivr DWORD PTR [eax+0x4d]
  42060c:	adc    al,BYTE PTR [ebp+0x34b95c5f]
  420612:	or     DWORD PTR [edi-0x12],esi
  420615:	jge    0x420642
  420617:	ret    
  420618:	leave  
  420619:	mov    eax,0xb2f12438
  42061e:	sti    
  42061f:	aam    0x1e
  420621:	sbb    BYTE PTR [eax],dl
  420623:	dec    ebx
  420624:	ret    0x6eca
  420627:	fisub  DWORD PTR [ecx-0x7ce63c93]
  42062d:	xchg   edx,eax
  42062e:	or     eax,0x60f64c87
  420633:	xor    DWORD PTR [ebx+0x37a68951],eax
  420639:	popf   
  42063a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42063b:	xor    ch,bh
  42063d:	push   esi
  42063e:	xor    esi,DWORD PTR [ebp-0x72]
  420641:	and    edx,DWORD PTR [ebx+0x1c4f2a39]
  420647:	iret   
  420648:	div    edi
  42064a:	fcomip st,st(7)
  42064c:	mov    DWORD PTR [ebx+ebp*1],eax
  42064f:	iret   
  420650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420651:	pop    esp
  420652:	add    cl,BYTE PTR [esi-0x6374e028]
  420658:	leave  
  420659:	pop    esi
  42065a:	(bad)  
  42065b:	fiadd  DWORD PTR [ebx]
  42065d:	(bad)  [edi]
  42065f:	cmp    DWORD PTR [edi-0x22],eax
  420662:	popa   
  420663:	ds mov cl,0x9
  420666:	xor    eax,0x413ad782
  42066b:	jmp    0x4206a2
  42066d:	ins    BYTE PTR es:[edi],dx
  42066e:	leave  
  42066f:	push   0x5e
  420671:	mov    ebx,0x2df9629a
  420676:	jne    0x42061b
  420678:	(bad)  
  420679:	mov    eax,0xf40131e1
  42067e:	inc    esi
  42067f:	pop    ss
  420680:	pop    ebx
  420681:	leave  
  420682:	leave  
  420683:	mov    ebp,0x84aa83eb
  420688:	leave  
  420689:	pop    ebp
  42068a:	das    
  42068b:	fcomp  QWORD PTR [edi-0x55d71f37]
  420691:	mov    eax,0xe424080a
  420696:	mov    eax,ds:0x5fcfe121
  42069b:	dec    ebp
  42069c:	jno    0x420713
  42069e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42069f:	mov    ebp,0x7b271aa0
  4206a4:	xchg   ebp,eax
  4206a5:	inc    ebx
  4206a6:	push   ebx
  4206a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206a8:	fidivr DWORD PTR [ebp+eiz*1-0x62]
  4206ac:	mov    edx,0xb707cd2f
  4206b1:	pop    eax
  4206b2:	dec    eax
  4206b3:	xchg   ebx,eax
  4206b4:	sub    edx,ebp
  4206b6:	shl    DWORD PTR [esi+0x3b],cl
  4206b9:	mov    WORD PTR ds:0xfe1f54ed,?
  4206bf:	imul   ebx,DWORD PTR [eax-0x6a417e24],0x17
  4206c6:	jmp    0x420655
  4206c8:	or     al,0x5e
  4206ca:	shr    edx,0xa1
  4206cd:	or     al,0xec
  4206cf:	sbb    dl,BYTE PTR [esi]
  4206d1:	stos   DWORD PTR es:[edi],eax
  4206d2:	je     0x420694
  4206d4:	jge    0x420699
  4206d6:	lahf   
  4206d7:	ss push ecx
  4206d9:	in     eax,0x54
  4206db:	imul   BYTE PTR [ebp-0x40]
  4206de:	push   ebx
  4206df:	and    edx,DWORD PTR [esi-0x37c54db]
  4206e5:	call   0xd9d0:0xd42bedcd
  4206ec:	sbb    BYTE PTR [ebp-0x64],ch
  4206ef:	test   al,0xf9
  4206f1:	add    DWORD PTR [eax+0x500ba407],ecx
  4206f7:	nop
  4206f8:	cs in  al,0x54
  4206fb:	add    eax,0xbef56101
  420700:	call   0x5db10bde
  420705:	(bad)  
  420706:	mov    eax,0xda0670a3
  42070b:	cmc    
  42070c:	xor    edi,DWORD PTR [ebp+0x226a9df7]
  420712:	mov    eax,0x939a89b9
  420717:	cmp    BYTE PTR [esi-0x3c],al
  42071a:	and    ch,BYTE PTR [esi-0x79]
  42071d:	lock iret 
  42071f:	xchg   esp,eax
  420720:	xor    eax,0x5cb34960
  420725:	add    al,0x9
  420727:	jmp    0xb34cb24e
  42072c:	add    ch,bh
  42072e:	mov    bl,BYTE PTR [edx+0x75]
  420731:	jae    0x4207b2
  420733:	iret   
  420734:	rol    BYTE PTR [esp+ebx*8],0x9c
  420738:	adc    DWORD PTR ds:0x3674ec85,0x2a
  42073f:	xlat   BYTE PTR ds:[ebx]
  420740:	in     eax,dx
  420741:	aas    
  420742:	pop    ebp
  420743:	mov    ebp,0x83985009
  420748:	cdq    
  420749:	popf   
  42074a:	fstp   TBYTE PTR [eax]
  42074c:	outs   dx,DWORD PTR ds:[esi]
  42074d:	push   ecx
  42074e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42074f:	and    dl,dl
  420751:	repz lds eax,FWORD PTR [esi]
  420754:	jnp    0x420752
  420756:	pushf  
  420757:	repz inc edi
  420759:	ficom  DWORD PTR [edi+0x19]
  42075c:	aam    0xdd
  42075e:	bound  ebp,QWORD PTR [ebp-0x4445758d]
  420764:	int    0xeb
  420766:	outs   dx,DWORD PTR ds:[esi]
  420767:	ret    
  420768:	loopne 0x420770
  42076a:	cmp    BYTE PTR [esi+ebp*8],ah
  42076d:	jae    0x420757
  42076f:	nop
  420770:	xor    eax,0x93f0cf0a
  420775:	mov    edx,0xee2ccd23
  42077a:	std    
  42077b:	push   ecx
  42077c:	dec    ebp
  42077d:	xchg   BYTE PTR [esi],al
  42077f:	sbb    esp,DWORD PTR ds:0xd1227cfe
  420785:	add    BYTE PTR [esp+edi*4+0xe],bh
  420789:	cld    
  42078a:	scas   eax,DWORD PTR es:[edi]
  42078b:	lock adc eax,0x7c814abd
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a70b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a72b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a747
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a717
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a72f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a733
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a737
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a73b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a73f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a72b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a717
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a743
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a74b
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a713
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a72b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a717
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a72b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a717
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a72b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a717
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a72b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a717
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a72b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a717
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a72b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a717
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a72b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a717
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a72b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a717
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a72b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a717
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a72b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a717
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a72b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a717
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a72b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a717
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a72b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a717
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a72b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a747
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a717
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a71b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a71f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a723
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	iret   
  421dbb:	retf   
  421dbc:	loop   0x421e0c
  421dbe:	outs   dx,DWORD PTR ds:[esi]
  421dbf:	mov    cl,0x82
  421dc1:	add    DWORD PTR [eax],0x5c
  421dc4:	add    DWORD PTR [ebx-0x521120ab],0xffffff8d
  421dcb:	sub    DWORD PTR [ecx],0xb30cb1df
  421dd1:	xchg   esi,eax
  421dd2:	test   BYTE PTR [ebx+0x23007684],bh
  421dd8:	call   0x61e6a4ab
  421ddd:	cmp    edi,DWORD PTR [ecx+0x2b3b046f]
  421de3:	cmp    dh,0xb7
  421de6:	inc    edx
  421de7:	add    DWORD PTR [ecx],0x25
  421dea:	jns    0x421daf
  421dec:	cmp    ah,bl
  421dee:	jecxz  0x421d9d
  421df0:	mov    esp,0x9e957b74
  421df5:	(bad)
  421df9:	cli    
  421dfa:	outs   dx,BYTE PTR ds:[esi]
  421dfb:	fiadd  DWORD PTR [ecx]
  421dfd:	jo     0x421d9f
  421dff:	or     bl,BYTE PTR [edi]
  421e01:	repnz dec ecx
  421e03:	pusha  
  421e04:	cwde   
  421e05:	mov    BYTE PTR [ecx+0x6a],0xc6
  421e09:	dec    esi
  421e0a:	into   
  421e0b:	mov    bh,0x7c
  421e0d:	jge    0x421e23
  421e0f:	mov    edi,0x7998e654
  421e14:	mov    DWORD PTR [esi],ebx
  421e16:	mov    esp,ecx
  421e18:	mov    DWORD PTR [esi+0x509f01ac],edi
  421e1e:	aaa    
  421e1f:	mov    bh,0x5b
  421e21:	fdiv   DWORD PTR [eax]
  421e23:	cmp    BYTE PTR [edi+0x3359e126],dh
  421e29:	and    eax,DWORD PTR [eax-0xa]
  421e2c:	mov    edi,0xde976b0b
  421e31:	(bad)  
  421e32:	mov    esi,0x5685f54c
  421e37:	xlat   BYTE PTR ds:[ebx]
  421e38:	or     eax,DWORD PTR [ebx+0x7eedeebf]
  421e3e:	pop    es
  421e3f:	pop    ds
  421e40:	jo     0x421dc7
  421e42:	rol    BYTE PTR ds:0xac0aecdf,1
  421e48:	ret    
  421e49:	outs   dx,BYTE PTR ds:[esi]
  421e4a:	adc    ch,al
  421e4c:	adc    dh,dl
  421e4e:	or     ah,BYTE PTR [eax+0x769c4fd2]
  421e54:	lods   al,BYTE PTR ds:[esi]
  421e55:	add    eax,0xaf81539c
  421e5a:	lea    edi,[ecx]
  421e5c:	outs   dx,BYTE PTR ds:[esi]
  421e5d:	subps  xmm6,XMMWORD PTR [ebp-0x1c]
  421e61:	sub    edi,DWORD PTR [edi-0x5d]
  421e64:	rol    BYTE PTR [ecx-0x5a82751d],0xbe
  421e6b:	imul   ecx,esi,0xaa3a065d
  421e71:	push   ds
  421e72:	mov    ebx,0x40646c89
  421e77:	xchg   esi,eax
  421e78:	(bad)  
  421e79:	fs stos BYTE PTR es:[edi],al
  421e7b:	jnp    0x421ee6
  421e7d:	xor    BYTE PTR [esi-0x312924d8],dh
  421e83:	outs   dx,DWORD PTR ds:[esi]
  421e84:	sete   BYTE PTR [ecx+0x5f]
  421e88:	sbb    BYTE PTR [ebx+0x41],ch
  421e8b:	hlt    
  421e8c:	cmp    dl,BYTE PTR [esi+0x1742d1da]
  421e92:	push   ecx
  421e93:	fisub  DWORD PTR [edx+0x28]
  421e96:	fcom   DWORD PTR [ebx+0x2916c9ec]
  421e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9d:	cmp    DWORD PTR [edx],ebp
  421e9f:	sbb    dh,al
  421ea1:	leave  
  421ea2:	das    
  421ea3:	mov    dl,0xe8
  421ea5:	lock ror dl,cl
  421ea8:	pop    ds
  421ea9:	aam    0x42
  421eab:	or     cl,BYTE PTR [ecx-0x4]
  421eae:	push   esp
  421eaf:	inc    esi
  421eb0:	sbb    DWORD PTR ds:0x979ec26f,ebp
  421eb6:	dec    ecx
  421eb7:	push   ecx
  421eb8:	stos   DWORD PTR es:[edi],eax
  421eb9:	rcl    ch,cl
  421ebb:	test   bh,dl
  421ebd:	pop    edi
  421ebe:	or     eax,0xbe2f33
  421ec3:	ja     0x421e9f
  421ec5:	inc    ebp
  421ec6:	cs ins BYTE PTR es:[edi],dx
  421ec8:	sbb    edi,edi
  421eca:	xchg   DWORD PTR [eax-0x19d79c78],edi
  421ed0:	adc    DWORD PTR [ebp+0x32aeb129],ebp
  421ed6:	fwait
  421ed7:	aas    
  421ed8:	mov    DWORD PTR [eax+0x76],eax
  421edb:	xor    al,0x74
  421edd:	bound  ecx,QWORD PTR [ebx-0x54]
  421ee0:	ja     0x421e67
  421ee2:	add    ebp,DWORD PTR [eax]
  421ee4:	mov    al,0xb8
  421ee6:	loope  0x421f4a
  421ee8:	dec    eax
  421ee9:	rol    BYTE PTR [esi-0x10],1
  421eec:	ror    BYTE PTR [ebx-0x27],cl
  421eef:	pop    eax
  421ef0:	stc    
  421ef1:	jge    0x421ebe
  421ef3:	adc    cl,BYTE PTR [eax-0x17ab7af2]
  421ef9:	rep lods al,BYTE PTR ds:[esi]
  421efb:	and    esi,DWORD PTR [edx]
  421efd:	add    DWORD PTR [ebx+0x33],0x3d
  421f01:	in     eax,0x8e
  421f03:	mov    ds:0x1d31b8b4,eax
  421f08:	nop
  421f09:	mov    dl,0x22
  421f0b:	fdivr  DWORD PTR [eax]
  421f0d:	sub    ch,BYTE PTR [esi]
  421f0f:	pop    edi
  421f10:	jns    0x421f32
  421f12:	fldcw  WORD PTR [ebp+0x38]
  421f15:	jbe    0x421f87
  421f17:	mov    bh,ah
  421f19:	push   ebp
  421f1a:	aam    0x99
  421f1c:	mov    esi,0xa1a9d02f
  421f21:	cli    
  421f22:	ds and ah,al
  421f25:	add    BYTE PTR fs:[esi-0x1e8f261c],dh
  421f2c:	mul    DWORD PTR [eax+0x6fd4b9ec]
  421f32:	sub    DWORD PTR [esi+esi*4],esi
  421f35:	mov    dl,0xd6
  421f37:	mov    dh,0x33
  421f39:	mov    bl,0x4a
  421f3b:	mov    ebp,0x68e8a621
  421f40:	popf   
  421f41:	adc    bh,bh
  421f43:	cs jne 0x421ef8
  421f46:	or     eax,0xbcbc368e
  421f4b:	push   es
  421f4c:	xchg   esp,eax
  421f4d:	mov    al,ds:0x2fe66352
  421f52:	sti    
  421f53:	stos   BYTE PTR es:[edi],al
  421f54:	pop    ebx
  421f55:	fld    TBYTE PTR [ebx+0x66b9bbf5]
  421f5b:	popa   
  421f5c:	push   cs
  421f5d:	mov    dl,0x3f
  421f5f:	lods   eax,DWORD PTR ds:[esi]
  421f60:	ret    
  421f61:	shl    BYTE PTR [edx+0xca0420d],cl
  421f67:	jge    0x421f17
  421f69:	mov    ch,0x17
  421f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f6c:	add    bh,BYTE PTR [ecx+0x15a154a6]
  421f72:	out    0x49,al
  421f74:	loope  0x421f0d
  421f76:	push   cs
  421f77:	mov    dl,0xfa
  421f79:	adc    BYTE PTR [ebx+0x2980c0ab],bl
  421f7f:	call   0xce88:0xd24a53c1
  421f86:	sbb    dl,BYTE PTR [ebx+edi*2]
  421f89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f8a:	jno    0x421fe0
  421f8c:	or     BYTE PTR [ecx-0x72af5ef3],dh
  421f92:	xor    BYTE PTR [ecx-0x22],cl
  421f95:	cdq    
  421f96:	inc    ebp
  421f97:	ror    al,1
  421f99:	jmp    0x2a129996
  421f9e:	outs   dx,BYTE PTR ds:[esi]
  421f9f:	inc    eax
  421fa0:	daa    
  421fa1:	inc    edi
  421fa2:	xor    cl,al
  421fa4:	inc    eax
  421fa5:	cwde   
  421fa6:	enter  0xd78b,0x79
  421faa:	psllw  mm3,0xec
  421fae:	int    0x13
  421fb0:	mov    ds:0xf8443b4c,eax
  421fb5:	stos   BYTE PTR es:[edi],al
  421fb6:	outs   dx,DWORD PTR ds:[esi]
  421fb7:	adc    DWORD PTR [eax],0xffffff9d
  421fba:	dec    eax
  421fbb:	xor    al,0xc1
  421fbd:	push   0xe219cc18
  421fc2:	and    al,0x6c
  421fc4:	(bad)  
  421fc5:	xlat   BYTE PTR ds:[ebx]
  421fc6:	push   eax
  421fc7:	xor    ebx,DWORD PTR [ebp-0x56]
  421fca:	inc    ebp
  421fcb:	(bad)  
  421fcc:	not    DWORD PTR gs:[esp+eax*4+0x60]
  421fd1:	and    dl,BYTE PTR [ebx-0x3ec751db]
  421fd7:	sub    dh,dl
  421fd9:	sub    al,0xbe
  421fdb:	mov    dh,0xaa
  421fdd:	adc    DWORD PTR [edx],0x68
  421fe0:	lods   al,BYTE PTR ds:[esi]
  421fe1:	fwait
  421fe2:	pop    ebx
  421fe3:	repz test dl,dl
  421fe6:	into   
  421fe7:	jb     0x42200d
  421fe9:	add    esi,DWORD PTR [ebp+0x3]
  421fec:	iret   
  421fed:	test   dh,bh
  421fef:	aas    
  421ff0:	lahf   
  421ff1:	or     eax,0x5ed84db1
  421ff6:	in     al,dx
  421ff7:	sbb    BYTE PTR [edi],al
  421ff9:	jne    0x422017
  421ffb:	loopne 0x422053
  421ffd:	loope  0x421ff4
  421fff:	call   0x70f8588c
  422004:	dec    edx
  422005:	xchg   ecx,eax
  422006:	jmp    0xf348:0x893c2a48
  42200d:	mov    ds:0x2293d9c6,eax
  422012:	inc    edi
  422013:	fwait
  422014:	or     ch,cl
  422016:	dec    esi
  422017:	cld    
  422018:	popa   
  422019:	das    
  42201a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42201b:	(bad)
  42201e:	inc    ebx
  42201f:	pop    ds
  422020:	sbb    DWORD PTR [esi],esi
  422022:	daa    
  422023:	dec    esp
  422024:	inc    edx
  422025:	mov    ch,bh
  422027:	xor    al,0x8c
  422029:	mov    al,ds:0x5beb5891
  42202e:	inc    eax
  42202f:	jno    0x421fc2
  422031:	daa    
  422032:	stc    
  422033:	pop    edx
  422034:	inc    eax
  422035:	inc    esi
  422036:	loop   0x4220ab
  422038:	out    dx,eax
  422039:	mov    esi,0xec855bd6
  42203e:	or     BYTE PTR [ebp+0x63],al
  422041:	cmc    
  422042:	xchg   BYTE PTR [ebx-0x1],ch
  422045:	arpl   WORD PTR [eax+eax*2+0x70],bx
  422049:	add    edi,DWORD PTR [ebx+0x5e]
  42204c:	dec    ebx
  42204d:	pop    edi
  42204e:	mov    edx,0x4c6bb499
  422053:	inc    esi
  422054:	data16 adc BYTE PTR [edx+0x26],ch
  422058:	hlt    
  422059:	xor    al,0xec
  42205b:	add    eax,0x89c5cb40
  422060:	xor    al,0x34
  422062:	mov    ebp,0x9ae1481a
  422067:	ins    BYTE PTR es:[edi],dx
  422068:	scas   eax,DWORD PTR es:[edi]
  422069:	jno    0x4220cc
  42206b:	push   ebp
  42206c:	jp     0x42200e
  42206e:	adc    cl,dh
  422070:	cmp    DWORD PTR [edi],ecx
  422072:	jmp    0x42207b
  422074:	scas   al,BYTE PTR es:[edi]
  422075:	cmc    
  422076:	cmp    DWORD PTR [ebp+0x4],edi
  422079:	mov    edx,0x2cd12b7c
  42207e:	push   esp
  42207f:	cmp    BYTE PTR [ecx],dh
  422081:	cmp    BYTE PTR [eax],bh
  422083:	(bad)  
  422084:	cs leave 
  422086:	std    
  422087:	cli    
  422088:	add    edi,DWORD PTR [ebp+0x1cc28608]
  42208e:	dec    edx
  42208f:	or     al,BYTE PTR [edx+0x59]
  422092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422093:	push   ss
  422094:	mov    esi,0xe873a05b
  422099:	fimul  DWORD PTR [esi]
  42209b:	xor    dh,0xa5
  42209e:	in     al,dx
  42209f:	inc    eax
  4220a0:	sub    eax,0xbe353c2e
  4220a5:	push   ecx
  4220a6:	scas   eax,DWORD PTR es:[edi]
  4220a7:	ja     0x422029
  4220a9:	and    ah,bl
  4220ab:	dec    edi
  4220ac:	js     0x4220ec
  4220ae:	jecxz  0x4220e4
  4220b0:	hlt    
  4220b1:	inc    edx
  4220b2:	fidiv  WORD PTR [edi+edx*1-0x487ce8f0]
  4220b9:	xlat   BYTE PTR ds:[ebx]
  4220ba:	ret    
  4220bb:	or     edx,DWORD PTR [eax-0x605e7ddd]
  4220c1:	cwde   
  4220c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c3:	imul   edx,DWORD PTR [ecx-0x5f486c1b],0x914c7fb9
  4220cd:	pushf  
  4220ce:	adc    BYTE PTR [ebx],cl
  4220d0:	test   al,0xbd
  4220d2:	jo     0x42205d
  4220d4:	add    edx,DWORD PTR [ebx+0x3]
  4220d7:	and    eax,0x6cabde0e
  4220dc:	mov    al,0xae
  4220de:	or     ebx,ebp
  4220e0:	cmp    al,0xd4
  4220e2:	cmp    eax,0xb52a6f33
  4220e7:	or     BYTE PTR fs:[eax+eax*1],dh
  4220eb:	aas    
  4220ec:	lods   al,BYTE PTR ds:[esi]
  4220ed:	pop    esi
  4220ee:	mov    bh,BYTE PTR [ecx]
  4220f0:	and    al,0xad
  4220f2:	cwde   
  4220f3:	mov    ebp,0xb7efc5ad
  4220f8:	mov    esi,DWORD PTR [edi]
  4220fa:	aaa    
  4220fb:	dec    esp
  4220fc:	cmc    
  4220fd:	enter  0x6539,0x9f
  422101:	sub    al,0xa2
  422103:	fwait
  422104:	or     ah,BYTE PTR [ecx+esi*1+0x41]
  422108:	xor    BYTE PTR [ecx-0x6ca54b29],ah
  42210e:	pop    edx
  42210f:	pop    edi
  422110:	push   es
  422111:	out    0x3d,al
  422113:	les    ebp,FWORD PTR [esi-0x670e1fb8]
  422119:	xor    ebx,esp
  42211b:	xor    ah,BYTE PTR [eax]
  42211d:	mov    bh,0xfc
  42211f:	repz push 0x2c
  422122:	into   
  422123:	mov    cs,WORD PTR [ebx]
  422125:	int3   
  422126:	call   0xb3e1943c
  42212b:	jno    0x42216a
  42212d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42212e:	pop    ds
  42212f:	sub    DWORD PTR [edi-0x25],esp
  422132:	into   
  422133:	sahf   
  422134:	test   eax,0xf34b9782
  422139:	fcom   DWORD PTR [ecx]
  42213b:	clc    
  42213c:	jge    0x422192
  42213e:	jecxz  0x422132
  422140:	ins    BYTE PTR es:[edi],dx
  422141:	pop    esi
  422142:	mov    cl,0x17
  422144:	test   BYTE PTR [esi-0x1],bl
  422147:	sar    BYTE PTR [ecx+0x46d52c44],cl
  42214d:	sbb    BYTE PTR [edx],dh
  42214f:	(bad)  
  422150:	adc    al,0xd1
  422152:	hlt    
  422153:	xchg   ebx,eax
  422154:	mov    ch,0x97
  422156:	shr    ebp,0xfa
  422159:	jmp    0x8560:0x3114a3c6
  422160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422161:	inc    esp
  422162:	inc    ecx
  422163:	mov    bl,0x61
  422165:	aad    0x36
  422167:	dec    edi
  422168:	mov    WORD PTR [ecx+edx*1-0x13],fs
  42216c:	jl     0x422116
  42216e:	outs   dx,BYTE PTR ds:[esi]
  42216f:	xor    bh,BYTE PTR [esi+esi*2-0x12118bc1]
  422176:	pop    eax
  422177:	push   edx
  422178:	sbb    bl,BYTE PTR [ebx]
  42217a:	push   ebx
  42217b:	pop    ebp
  42217c:	jmp    0xdc17c572
  422181:	push   ss
  422182:	(bad)  
  422183:	adc    eax,DWORD PTR [edi+0x68]
  422186:	mov    ecx,DWORD PTR [ebx]
  422188:	or     DWORD PTR [esi],0x37
  42218b:	imul   eax,DWORD PTR [ecx-0x48],0xbbd33a
  422192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422193:	loope  0x422189
  422195:	sbb    edx,edi
  422197:	test   BYTE PTR [ebx],bh
  422199:	jmp    0xcfe:0x2044ddc7
  4221a0:	mov    esp,0xa80adecf
  4221a5:	lods   eax,DWORD PTR ds:[esi]
  4221a6:	sbb    eax,0xbcf2d7e
  4221ab:	call   0x46b9c83d
  4221b0:	out    dx,eax
  4221b1:	inc    ecx
  4221b2:	clc    
  4221b3:	mov    eax,DWORD PTR [edx-0x23]
  4221b6:	retf   0x1b1b
  4221b9:	cdq    
  4221ba:	fiadd  WORD PTR [ebp+eiz*1-0xa]
  4221be:	hlt    
  4221bf:	mov    bl,BYTE PTR [esi]
  4221c1:	add    ebx,0x8100e9df
  4221c7:	push   esp
  4221c8:	jl     0x422237
  4221ca:	leave  
  4221cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221cc:	dec    ebp
  4221cd:	cmp    BYTE PTR [ebp-0x1a2d4224],dl
  4221d3:	jecxz  0x42219b
  4221d5:	push   0x6a35e1c7
  4221da:	xor    eax,DWORD PTR [ebx]
  4221dc:	pop    eax
  4221dd:	pop    ecx
  4221de:	outs   dx,DWORD PTR ds:[esi]
  4221df:	push   ebx
  4221e0:	retf   0x697b
  4221e3:	push   ss
  4221e4:	sahf   
  4221e5:	xor    bl,BYTE PTR [edx]
  4221e7:	or     al,0x9c
  4221e9:	out    dx,eax
  4221ea:	in     eax,0xdd
  4221ec:	inc    esp
  4221ed:	and    DWORD PTR [eax+0x4a],edx
  4221f0:	aam    0xdd
  4221f2:	sub    dh,BYTE PTR [eax+0x3c]
  4221f5:	cmp    ch,BYTE PTR [ebx]
  4221f7:	sub    DWORD PTR [eax-0x5eeec7cc],esp
  4221fd:	scas   eax,DWORD PTR es:[edi]
  4221fe:	outs   dx,BYTE PTR ds:[esi]
  4221ff:	mov    bh,0x2a
  422201:	inc    edi
  422202:	jle    0x42221e
  422204:	clc    
  422205:	mov    eax,0x7b84287
  42220a:	jb     0x422265
  42220c:	jmp    0x4221cc
  42220e:	or     esi,DWORD PTR [edi]
  422210:	dec    esi
  422211:	in     eax,0xfa
  422213:	fistp  DWORD PTR [ebp+0x78b77d08]
  422219:	push   ecx
  42221a:	sar    ebx,cl
  42221c:	xchg   edi,eax
  42221d:	inc    esp
  42221e:	sbb    ch,BYTE PTR [esi]
  422220:	in     eax,dx
  422221:	stc    
  422222:	leave  
  422223:	scas   eax,DWORD PTR es:[edi]
  422224:	aaa    
  422225:	ds cwde 
  422227:	and    eax,0x460da498
  42222c:	mov    ebx,0x4a9d559b
  422231:	mov    ebx,0x64a27a7b
  422236:	or     BYTE PTR fs:0x906a01a5,cl
  42223d:	push   cs
  42223e:	inc    ecx
  42223f:	jo     0x42223f
  422241:	scas   eax,DWORD PTR es:[edi]
  422242:	mov    esp,0xf2d147fe
  422247:	clc    
  422248:	(bad)  
  42224a:	icebp  
  42224b:	shl    ebp,1
  42224d:	and    esi,DWORD PTR gs:[eax+0x4f]
  422251:	in     al,0x7e
  422253:	inc    ebx
  422254:	xor    al,0xc0
  422256:	xor    BYTE PTR [edi],ah
  422258:	fstp   QWORD PTR [ebx+0x49b1cd0b]
  42225e:	(bad)
  422263:	lds    ebx,FWORD PTR [edi+0x54f0ff99]
  422269:	leave  
  42226a:	sbb    edi,DWORD PTR [edi]
  42226c:	ja     0x4221fd
  42226e:	in     al,0x9f
  422270:	and    ch,ch
  422272:	cs jmp 0x281a74ab
  422278:	loopne 0x4222c6
  42227a:	cmp    ch,al
  42227c:	ror    BYTE PTR [ebp-0x6f90655e],1
  422282:	jb     0x422279
  422284:	mul    eax
  422286:	sbb    al,BYTE PTR [ecx]
  422288:	jmp    0x1abe5bb7
  42228d:	xbegin 0xb179638d
  422293:	pop    es
  422294:	pop    esp
  422295:	cdq    
  422296:	mov    bl,0x1e
  422298:	mov    dl,0x4f
  42229a:	dec    edi
  42229b:	cwde   
  42229c:	stos   BYTE PTR es:[edi],al
  42229d:	ror    DWORD PTR [ebx],1
  42229f:	pop    edi
  4222a0:	retf   
  4222a1:	daa    
  4222a2:	jmp    0xe8ec:0x3bb64fe5
  4222a9:	(bad)  
  4222aa:	je     0x422238
  4222ac:	sub    ecx,ebx
  4222ae:	icebp  
  4222af:	dec    ecx
  4222b0:	stos   DWORD PTR es:[edi],eax
  4222b1:	call   0x8716f1d6
  4222b6:	push   ecx
  4222b7:	xchg   esi,eax
  4222b8:	adc    eax,0xc686cd60
  4222bd:	or     al,0x4a
  4222c0:	inc    esi
  4222c1:	outs   dx,BYTE PTR ds:[esi]
  4222c2:	call   0xd6ba2264
  4222c7:	clc    
  4222c8:	or     al,0x55
  4222ca:	popf   
  4222cb:	loop   0x4222e5
  4222cd:	push   ebp
  4222ce:	adc    al,0xf9
  4222d0:	sub    al,0xae
  4222d2:	mov    gs,WORD PTR [ebx+esi*8-0x1500bd35]
  4222d9:	stos   BYTE PTR es:[edi],al
  4222da:	xlat   BYTE PTR ds:[ebx]
  4222db:	mov    al,ds:0x130d87b4
  4222e0:	and    eax,0x854c8bd
  4222e5:	push   0x6c6ed25a
  4222ea:	mov    bl,0xc1
  4222ec:	cli    
  4222ed:	dec    ecx
  4222ee:	call   0xb347f22a
  4222f3:	rol    DWORD PTR [edx+0x14],cl
  4222f6:	jbe    0x422302
  4222f8:	jp     0x422339
  4222fa:	ss gs loopne 0x4222a0
  4222fe:	outs   dx,DWORD PTR ds:[esi]
  4222ff:	call   0x5235586a
  422304:	mov    eax,DWORD PTR [esi+edx*8]
  422307:	enter  0x15c7,0x34
  42230b:	mov    cl,0xfe
  42230d:	add    eax,0x4dd8e79b
  422312:	and    al,0x4d
  422314:	out    dx,al
  422315:	xchg   ebp,eax
  422316:	xor    DWORD PTR [ebx+0x66ae636e],eax
  42231c:	imul   DWORD PTR [ecx+0x3]
  42231f:	ficomp DWORD PTR [eax-0x78d15728]
  422325:	mov    cl,0x1d
  422327:	inc    esi
  422328:	and    eax,0x9080ebd6
  42232d:	clc    
  42232e:	push   ebx
  42232f:	cmp    al,0x2d
  422331:	xlat   BYTE PTR ds:[ebx]
  422332:	lds    ebx,FWORD PTR [edx+0x76]
  422335:	stos   DWORD PTR es:[edi],eax
  422336:	cmp    al,0xd8
  422338:	sbb    al,BYTE PTR [edx]
  42233a:	sub    ebp,DWORD PTR [ebx]
  42233c:	jae    0x4222bf
  42233e:	(bad)
  422341:	mov    es,ecx
  422343:	ins    DWORD PTR es:[edi],dx
  422344:	push   ebp
  422345:	rol    DWORD PTR [edi-0x29e14b53],cl
  42234b:	mov    edi,0x3f380901
  422350:	test   bh,dh
  422352:	fldl2e 
  422354:	mov    ds:0x7b1c28b0,eax
  422359:	pop    ebp
  42235a:	loopne 0x4222f9
  42235c:	push   cs
  42235d:	xor    BYTE PTR [edx-0x63fe786c],bh
  422363:	sub    BYTE PTR [ebp+0x3de4c921],0xfc
  42236a:	retf   
  42236b:	mov    ah,0x6e
  42236d:	aad    0x56
  42236f:	xlat   BYTE PTR ds:[ebx]
  422370:	inc    esi
  422371:	scas   eax,DWORD PTR es:[edi]
  422372:	nop
  422373:	cmc    
  422374:	call   FWORD PTR [edi]
  422376:	iret   
  422377:	xchg   ebp,eax
  422378:	mov    eax,0x37890ce7
  42237d:	call   0xfbed5098
  422382:	adc    DWORD PTR [ebp+0x6e],edi
  422385:	add    al,0x17
  422387:	or     bh,BYTE PTR [ecx-0x12dca99a]
  42238d:	sbb    esi,DWORD PTR [esi]
  42238f:	and    eax,0xab63f1ad
  422394:	dec    ebx
  422395:	jp     0x42239b
  422397:	sbb    DWORD PTR [ecx],0x68bddf8f
  42239d:	ret    0x516b
  4223a0:	lea    esp,[ebp+0xd]
  4223a3:	xor    BYTE PTR [ebp-0x101524c9],ah
  4223a9:	nop    DWORD PTR [edx+0x49]
  4223ad:	pop    eax
  4223ae:	mov    ebp,0xdef2aaa4
  4223b3:	xor    BYTE PTR [esi-0x3],ah
  4223b6:	popa   
  4223b7:	mov    al,0x54
  4223b9:	mov    bh,BYTE PTR [ebx+0x1f]
  4223bc:	pop    ss
  4223bd:	sbb    bl,dh
  4223bf:	retf   0x1c
  4223c2:	dec    ebp
  4223c3:	jmp    0x4826:0x9b046ee0
  4223ca:	hlt    
  4223cb:	jmp    0x5a7ae0ca
  4223d0:	cdq    
  4223d1:	mov    bh,0x21
  4223d3:	in     al,0x27
  4223d5:	push   ecx
  4223d6:	pusha  
  4223d7:	sbb    al,0xb1
  4223d9:	into   
  4223da:	adc    esp,DWORD PTR [ebp+0x4205ea5c]
  4223e0:	mov    al,0x59
  4223e2:	pop    esp
  4223e3:	imul   ecx,DWORD PTR ds:0x554a3336,0x10
  4223ea:	xchg   ebp,eax
  4223eb:	add    DWORD PTR [edx+0x3a4eeb6f],ebp
  4223f1:	push   ebx
  4223f2:	add    al,0x3f
  4223f4:	adc    al,0x34
  4223f6:	pop    ss
  4223f7:	add    BYTE PTR [eax-0x6c4e3207],cl
  4223fd:	inc    ebx
  4223fe:	not    BYTE PTR ds:0xd7f3e8d9
  422404:	jne    0x422406
  422406:	ins    BYTE PTR es:[edi],dx
  422407:	or     al,0x9f
  422409:	dec    ebp
  42240a:	mov    dh,0xc8
  42240c:	pop    ecx
  42240d:	push   ss
  42240e:	stc    
  42240f:	or     BYTE PTR cs:[ebp+0x4a233aff],cl
  422416:	sub    BYTE PTR [edi-0x56abc086],cl
  42241c:	out    dx,al
  42241d:	cs inc ecx
  42241f:	icebp  
  422420:	jecxz  0x422456
  422422:	dec    edi
  422423:	cli    
  422424:	(bad)  
  422425:	sub    eax,0xc696702f
  42242a:	xchg   edx,eax
  42242b:	enter  0xc2e4,0xf
  42242f:	lods   eax,DWORD PTR ds:[esi]
  422430:	sub    DWORD PTR [edx],eax
  422432:	arpl   WORD PTR [ebx],sp
  422434:	mov    bl,BYTE PTR [ebx+0x66126b78]
  42243a:	fwait
  42243b:	gs push edx
  42243d:	mov    ebx,0xf1442282
  422442:	sub    bh,cl
  422444:	call   ebx
  422446:	mov    ecx,0xa573d18c
  42244b:	and    BYTE PTR es:[edx+0x4104db14],ah
  422452:	sub    BYTE PTR [esi],dh
  422454:	into   
  422455:	pop    ss
  422456:	and    DWORD PTR [ebx],edx
  422458:	stos   DWORD PTR es:[edi],eax
  422459:	jae    0x4223f1
  42245b:	jb     0x422455
  42245d:	div    DWORD PTR [esi]
  42245f:	cmp    eax,0x3adfc43a
  422464:	mov    WORD PTR [esi],ss
  422466:	leave  
  422467:	inc    edi
  422468:	xor    eax,DWORD PTR [esi-0x7c]
  42246b:	push   0x8bff6739
  422470:	fwait
  422471:	test   DWORD PTR [ebp-0x35c1f65b],edx
  422477:	jmp    0x14edaefa
  42247c:	and    eax,0x64aca586
  422481:	retf   
  422482:	mul    dl
  422484:	sub    eax,0x16589494
  422489:	shl    BYTE PTR [edx],1
  42248b:	xor    al,0x36
  42248d:	loope  0x4224a8
  42248f:	xor    BYTE PTR [ecx],bh
  422491:	mov    al,0x78
  422493:	push   es
  422494:	sub    ah,BYTE PTR [eax-0x70]
  422497:	lahf   
  422498:	sbb    esi,DWORD PTR [ecx]
  42249a:	and    al,BYTE PTR [esi]
  42249c:	mov    dh,0x1d
  42249e:	lahf   
  42249f:	out    dx,al
  4224a0:	dec    esi
  4224a1:	xchg   edi,eax
  4224a2:	mov    ch,0x64
  4224a4:	mov    ecx,0x2355bc8e
  4224a9:	aad    0xdf
  4224ab:	xchg   DWORD PTR [ecx+0x1c737e41],eax
  4224b1:	into   
  4224b2:	xchg   BYTE PTR ds:0x8369a204,ch
  4224b8:	adc    BYTE PTR [ebp-0x57552240],cl
  4224be:	pop    eax
  4224bf:	lods   eax,DWORD PTR ds:[esi]
  4224c0:	fild   DWORD PTR [eax]
  4224c2:	jge    0x4224a4
  4224c4:	hlt    
  4224c5:	or     eax,0x154b2924
  4224ca:	mov    bl,dh
  4224cc:	dec    esi
  4224cd:	jmp    0x4224f3
  4224cf:	and    bh,BYTE PTR [ecx-0xc]
  4224d2:	pusha  
  4224d3:	loope  0x4224f9
  4224d5:	in     al,dx
  4224d6:	jmp    0xc524:0x6fd1184f
  4224dd:	adc    ecx,esp
  4224df:	popa   
  4224e0:	adc    al,0x1b
  4224e2:	imul   esp,DWORD PTR [edx+0x77],0x35866ab7
  4224e9:	sub    DWORD PTR [esi-0x68f50520],edi
  4224ef:	in     al,0xe9
  4224f1:	xchg   ebx,eax
  4224f2:	loope  0x4224f6
  4224f4:	pop    ds
  4224f5:	pop    ss
  4224f6:	pop    ss
  4224f7:	xchg   esi,eax
  4224f8:	cmp    eax,0xdca70827
  4224fd:	inc    ebx
  4224fe:	rcl    DWORD PTR [edi],0x67
  422501:	arpl   WORD PTR [ebx],cx
  422503:	lds    ebp,FWORD PTR [edx+0x46]
  422506:	shl    bl,0x66
  422509:	imul   edi,DWORD PTR [eax],0x63
  42250c:	xchg   BYTE PTR [esi+0x73a93c5b],bh
  422512:	pop    edi
  422513:	retf   
  422514:	mov    ecx,0xbd94714d
  422519:	call   0xc1a91216
  42251e:	js     0x42258a
  422520:	js     0x42254e
  422522:	cli    
  422523:	es enter 0x78c8,0x15
  422528:	fnstcw WORD PTR [esi+0x414f188]
  42252e:	adc    eax,0xdd37ce58
  422533:	sar    BYTE PTR [esp+ebx*1],0x38
  422537:	mov    ah,0xc3
  422539:	xchg   ebx,eax
  42253a:	fs pop ecx
  42253c:	out    0x79,eax
  42253e:	in     eax,0xea
  422540:	(bad)  
  422541:	cmp    eax,0x1fd2078
  422546:	mov    ds:0xd5cccde,eax
  42254b:	mov    ah,0x3f
  42254e:	cmc    
  42254f:	mov    al,BYTE PTR [ecx+0x5206d832]
  422555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422556:	inc    edi
  422557:	xchg   esp,eax
  422558:	mov    bh,0x3c
  42255a:	dec    edi
  42255b:	in     eax,dx
  42255c:	xchg   BYTE PTR [eax],ch
  42255e:	push   esi
  42255f:	push   cs
  422560:	icebp  
  422561:	call   0x5b1a6434
  422566:	mov    dh,0x56
  422569:	xchg   esi,eax
  42256a:	mov    al,0xf4
  42256c:	rcl    bh,1
  42256e:	jb     0x422504
  422570:	jg     0x42255f
  422572:	rcr    DWORD PTR [ebx-0x5f],0x56
  422576:	pop    es
  422577:	mov    al,dl
  422579:	popa   
  42257a:	sub    eax,DWORD PTR [ecx+ebp*4+0x5c]
  42257e:	dec    eax
  42257f:	and    al,0x85
  422581:	je     0x4225b0
  422583:	scas   eax,DWORD PTR es:[edi]
  422584:	fs repnz xchg edx,eax
  422587:	xchg   edi,eax
  422588:	pop    esi
  422589:	into   
  42258a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42258b:	and    eax,0x656ff6da
  422590:	in     al,dx
  422591:	and    BYTE PTR [ecx-0x124c49ca],al
  422597:	not    ah
  422599:	ds xchg esp,eax
  42259b:	push   edx
  42259c:	pop    ebx
  42259d:	shl    al,1
  42259f:	enter  0x7a89,0x85
  4225a3:	sbb    al,0x9a
  4225a5:	and    ebx,eax
  4225a7:	xchg   ebp,eax
  4225a8:	mov    esi,0x3964bc91
  4225ad:	stc    
  4225ae:	in     al,dx
  4225af:	add    BYTE PTR [ebp+0x16a6f8c],ah
  4225b5:	and    ebp,DWORD PTR [eax+0x36]
  4225b8:	inc    esi
  4225b9:	jle    0x422620
  4225bb:	cmp    bl,0xd4
  4225be:	icebp  
  4225bf:	mov    ecx,0xe237440d
  4225c4:	xor    eax,0x75196692
  4225c9:	lods   al,BYTE PTR ds:[esi]
  4225ca:	ret    0x522c
  4225cd:	movlps QWORD PTR [esi+eax*4-0x2d9690fc],xmm2
  4225d5:	jl     0x422597
  4225d7:	adc    eax,0xf8f4ed77
  4225dc:	mov    al,ds:0x8d80e21e
  4225e1:	aaa    
  4225e2:	push   cs
  4225e3:	js     0x422635
  4225e5:	stos   BYTE PTR es:[edi],al
  4225e6:	push   edi
  4225e7:	les    ebx,FWORD PTR [ebx]
  4225e9:	jg     0x4225d3
  4225eb:	call   0xf3f2:0xa8ce28e9
  4225f2:	scas   al,BYTE PTR es:[edi]
  4225f3:	xchg   edi,eax
  4225f4:	xor    al,0x34
  4225f6:	cmp    ecx,edx
  4225f8:	adc    bl,BYTE PTR [esi-0x393fd335]
  4225fe:	ja     0x42258a
  422600:	fwait
  422601:	pushf  
  422602:	xchg   edx,eax
  422603:	outs   dx,BYTE PTR ds:[esi]
  422604:	cmp    DWORD PTR [edi-0x3c2a2a8a],ecx
  42260a:	(bad)  
  42260b:	and    DWORD PTR [ebp-0x268b3bb7],esi
  422611:	scas   eax,DWORD PTR es:[edi]
  422612:	jmp    0xf8d3:0x90c60142
  422619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42261a:	pop    ss
  42261b:	mov    ds:0xfbcb8686,al
  422620:	add    bh,0x6b
  422623:	scas   al,BYTE PTR es:[edi]
  422624:	icebp  
  422625:	push   edi
  422626:	xor    edx,DWORD PTR [ebx+0x1f]
  422629:	arpl   WORD PTR [esp+esi*2+0x5c444763],sp
  422630:	(bad)  
  422631:	xlat   BYTE PTR es:[ebx]
  422633:	outs   dx,BYTE PTR ds:[esi]
  422634:	sti    
  422635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422636:	inc    esp
  422637:	mov    eax,0xb2b4e51f
  42263c:	mov    dl,0xbf
  42263e:	and    dh,BYTE PTR [ebp-0x31f53039]
  422644:	or     al,0x5a
  422646:	outs   dx,DWORD PTR ds:[esi]
  422647:	retf   0x46ef
  42264a:	js     0x42268e
  42264c:	sbb    eax,0x8401e89e
  422651:	test   BYTE PTR [ebp-0x17],0xd9
  422655:	xchg   DWORD PTR [ebx-0x6b73fb5d],eax
  42265b:	push   esp
  42265c:	mov    bl,BYTE PTR [eax+0x17]
  42265f:	push   ebx
  422660:	fcmovne st,st(0)
  422662:	xor    al,0x10
  422664:	xchg   esp,eax
  422665:	mov    eax,0x75c48252
  42266a:	adc    DWORD PTR [ebp+eax*8+0x5e534923],esi
  422671:	dec    edx
  422672:	leave  
  422673:	mov    ah,0xc4
  422675:	add    al,0x36
  422677:	mov    ebp,DWORD PTR [edi+0x9]
  42267a:	mov    al,0xdd
  42267c:	dec    edi
  42267d:	mov    ebx,DWORD PTR [ebx]
  42267f:	mov    ds:0xc4acc6e3,al
  422684:	mov    ds:0x87ce0008,eax
  422689:	xor    BYTE PTR [esi-0xf],0xae
  42268d:	scas   al,BYTE PTR es:[edi]
  42268e:	retf   0xefc7
  422691:	jnp    0x4226a4
  422693:	mov    esp,0x2b70c836
  422698:	push   ebp
  422699:	inc    edx
  42269a:	iret   
  42269b:	and    DWORD PTR [ecx+0x12bdd1d0],0xffffffa0
  4226a2:	cmp    BYTE PTR [ecx],al
  4226a4:	dec    ebp
  4226a5:	stos   DWORD PTR es:[edi],eax
  4226a6:	and    dh,BYTE PTR [ebp+0x43d7cef9]
  4226ac:	nop
  4226ad:	dec    edx
  4226ae:	xor    DWORD PTR [ebx],ebp
  4226b0:	mov    ebp,0x343dcbcf
  4226b5:	push   DWORD PTR [esi+0x1d3a8212]
  4226bb:	fld    DWORD PTR [esp+ebx*8]
  4226be:	ja     0x422685
  4226c0:	adc    bl,dl
  4226c2:	and    eax,0xaf7263b2
  4226c7:	(bad)  
  4226c8:	ds in  eax,dx
  4226ca:	into   
  4226cb:	sub    eax,0x4b3bd510
  4226d0:	repnz or edx,DWORD PTR [ebx-0x24]
  4226d4:	(bad)  
  4226d5:	xchg   esi,eax
  4226d6:	int    0x20
  4226d8:	shl    BYTE PTR [edx-0x32],0x35
  4226dc:	cmc    
  4226dd:	std    
  4226de:	xchg   BYTE PTR [ebp-0x3ec09f25],al
  4226e4:	shl    DWORD PTR [esi-0x19],cl
  4226e7:	mov    ecx,0x9bf03788
  4226ec:	stos   BYTE PTR es:[edi],al
  4226ed:	push   edi
  4226ee:	ret    0x31d0
  4226f1:	sar    DWORD PTR [ecx+0x2c],1
  4226f4:	mov    cl,0x54
  4226f6:	out    dx,al
  4226f7:	daa    
  4226f8:	cs ins DWORD PTR es:[edi],dx
  4226fa:	xor    BYTE PTR [ebx-0x62],ch
  4226fd:	les    edx,FWORD PTR [esi-0x52e93d93]
  422703:	dec    esi
  422704:	push   ecx
  422705:	push   cs
  422706:	jns    0x42270a
  422708:	jg     0x4226d9
  42270a:	ficom  WORD PTR ds:0xd292a4cd
  422710:	shr    DWORD PTR [eax],cl
  422712:	mov    ebp,DWORD PTR [ebx]
  422714:	jg     0x4226e6
  422716:	sbb    esp,ecx
  422718:	dec    ebp
  422719:	pusha  
  42271a:	(bad)  [eax]
  42271c:	xchg   ecx,eax
  42271d:	test   eax,0x8be2e6da
  422722:	mov    bh,0xd8
  422724:	icebp  
  422725:	inc    esp
  422726:	jo     0x42273f
  422728:	push   esi
  422729:	or     ebx,DWORD PTR [edx+0xb]
  42272c:	imul   eax,DWORD PTR [ebx],0x19
  42272f:	std    
  422730:	push   DWORD PTR [ecx]
  422732:	adc    eax,eax
  422734:	test   eax,0x6d584940
  422739:	pop    ss
  42273a:	imul   esp,esi,0x3e4dbc33
  422740:	mov    WORD PTR [edi-0x3d],ss
  422743:	mov    ds:0x70e89064,al
  422748:	xchg   edi,eax
  422749:	lds    ecx,FWORD PTR [eax-0x54989489]
  42274f:	jmp    0x42278a
  422751:	jl     0x422779
  422753:	inc    esp
  422754:	cmp    eax,0x48efdb30
  422759:	test   BYTE PTR [ebx+ecx*4-0x59f6ba2b],bl
  422760:	call   0xd98cb3e1
  422765:	mov    eax,ds:0x670adbe8
  42276a:	inc    ecx
  42276b:	sahf   
  42276c:	and    ch,BYTE PTR ds:0x79a023c4
  422772:	cmp    al,0x92
  422774:	(bad)  
  422775:	clc    
  422776:	sub    ch,BYTE PTR [edx-0x14]
  422779:	cwde   
  42277a:	jno    0x422796
  42277c:	push   ebp
  42277d:	push   edx
  42277e:	and    eax,DWORD PTR [ecx]
  422780:	sub    eax,0x3cf8f16d
  422785:	in     eax,0xc9
  422787:	pop    es
  422788:	adc    DWORD PTR [edx+0x7133ffc2],ebp
  42278e:	outs   dx,BYTE PTR ds:[esi]
  42278f:	cmc    
  422790:	and    al,0xaf
  422792:	or     BYTE PTR cs:[edi+0x5186a61c],0x89
  42279a:	(bad)  
  42279b:	jl     0x422731
  42279d:	mov    ds:0xcfb3e687,eax
  4227a2:	lods   eax,DWORD PTR ds:[esi]
  4227a3:	fs dec esp
  4227a5:	stos   BYTE PTR es:[edi],al
  4227a6:	and    BYTE PTR [eax],ch
  4227a8:	xchg   esi,eax
  4227a9:	ss mov bh,0x7
  4227ac:	out    0xad,al
  4227ae:	dec    esi
  4227af:	ret    
  4227b0:	outs   dx,BYTE PTR ds:[esi]
  4227b1:	add    dl,al
  4227b3:	clc    
  4227b4:	mov    ebp,ecx
  4227b6:	aas    
  4227b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b8:	aam    0x81
  4227ba:	nop
  4227bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227bc:	lock stc 
  4227be:	bound  esp,QWORD PTR [edx-0x28]
  4227c1:	inc    ebx
  4227c2:	in     eax,0x7f
  4227c4:	cs imul ecx,esp,0x2125f9d3
  4227cb:	lahf   
  4227cc:	mov    ds:0xdfad4a8a,eax
  4227d1:	ja     0x42284e
  4227d3:	rol    DWORD PTR [edi],1
  4227d5:	nop
  4227d6:	pop    eax
  4227d7:	or     eax,0xd2f9442b
  4227dc:	je     0x42279b
  4227de:	out    dx,al
  4227df:	leave  
  4227e0:	sbb    cl,BYTE PTR ds:[ebx]
  4227e3:	cld    
  4227e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227e5:	shl    DWORD PTR [edx-0x4b],cl
  4227e8:	or     al,0x10
  4227ea:	inc    edi
  4227eb:	fwait
  4227ec:	xor    DWORD PTR [eax],0x1c
  4227ef:	sub    esi,ecx
  4227f1:	jnp    0x422796
  4227f3:	outs   dx,BYTE PTR ds:[esi]
  4227f4:	mov    ecx,0xb4255d10
  4227f9:	add    DWORD PTR [edi+0x5a35889a],eax
  4227ff:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422801:	loope  0x42282e
  422803:	pop    ebp
  422804:	xchg   esi,eax
  422805:	mov    dl,0xd8
  422807:	xchg   ecx,eax
  422808:	add    eax,0xbfe138b
  42280d:	cmp    edx,DWORD PTR [edx-0x3602c96f]
  422813:	mov    ebx,0x98d7c592
  422818:	mov    ds:0xfa52f359,eax
  42281d:	and    ch,al
  42281f:	scas   al,BYTE PTR es:[edi]
  422820:	fsub   DWORD PTR [ebp+0x31bbdf96]
  422826:	push   edx
  422827:	mov    dh,0x65
  422829:	cmp    cl,BYTE PTR [eax+ecx*2]
  42282c:	mov    DWORD PTR [ebp-0x742ab26d],esi
  422832:	xchg   edi,eax
  422833:	rcr    DWORD PTR [ecx+0x6e1793e8],0xbd
  42283a:	test   al,0xc0
  42283c:	or     esi,DWORD PTR [esi]
  42283e:	jecxz  0x42284b
  422840:	mov    al,0x78
  422842:	loopne 0x4228b5
  422844:	outs   dx,DWORD PTR ds:[esi]
  422845:	xor    DWORD PTR [ebp-0x31d259be],edi
  42284b:	(bad)  [esi+eiz*1+0x44698398]
  422852:	lock pop edx
  422854:	(bad)  
  422855:	neg    ch
  422857:	call   0x3090ca25
  42285c:	aaa    
  42285d:	mov    WORD PTR [ecx+edi*2-0x35],?
  422861:	fld    DWORD PTR [edi]
  422863:	dec    ecx
  422864:	mov    bh,0xc6
  422866:	cmp    BYTE PTR [ebx+eiz*8+0x23],bl
  42286a:	fcomp  DWORD PTR [edx-0x42]
  42286d:	add    BYTE PTR [eax-0x48],0xf2
  422871:	mov    cl,0xe5
  422873:	jno    0x42286f
  422875:	test   BYTE PTR [esi+0x2a],al
  422878:	mov    ebx,0xd5b9861c
  42287d:	(bad)  
  42287e:	jmp    0x9705:0xcffde121
  422885:	inc    edi
  422886:	enter  0xb9fa,0x92
  42288a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42288b:	cmp    eax,0xcd8e91db
  422890:	stc    
  422891:	popa   
  422892:	ja     0x422853
  422894:	jmp    0xd48826bc
  422899:	pop    edx
  42289a:	push   ebx
  42289b:	pand   mm7,QWORD PTR [eax-0x6138f67f]
  4228a2:	stos   BYTE PTR es:[edi],al
  4228a3:	mov    edx,0xb77e232f
  4228a8:	(bad)  
  4228a9:	or     BYTE PTR [edx-0x4e38c038],dl
  4228af:	call   0x32e8:0x36920846
  4228b6:	(bad)  
  4228b7:	mov    DWORD PTR [ebx],ebx
  4228b9:	sub    eax,0xe4dfe20b
  4228be:	inc    esp
  4228bf:	dec    ebp
  4228c0:	jg     0x4228a9
  4228c2:	mov    ecx,0xf279cc0c
  4228c7:	mov    eax,ds:0xe5e0bd61
  4228cc:	push   0xffffff89
  4228ce:	mov    ebp,0x9361a880
  4228d3:	add    DWORD PTR es:[ebp+0x13f38d1d],ebp
  4228da:	in     al,0x8
  4228dc:	inc    DWORD PTR ds:0xc3f78c0
  4228e2:	scas   al,BYTE PTR es:[edi]
  4228e3:	gs dec ebx
  4228e5:	lock data16 jo 0x4228c2
  4228e9:	sti    
  4228ea:	int3   
  4228eb:	push   0x65
  4228ed:	push   cs
  4228ee:	(bad)  
  4228ef:	ins    DWORD PTR es:[edi],dx
  4228f0:	aad    0xaa
  4228f2:	mov    ah,0x98
  4228f4:	jl     0x42293c
  4228f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228f7:	scas   al,BYTE PTR es:[edi]
  4228f8:	pop    esp
  4228f9:	(bad)  
  4228fa:	sub    eax,0x69c5e599
  4228ff:	push   ds
  422900:	push   ss
  422901:	cmc    
  422902:	imul   ebx,DWORD PTR [ecx],0xc8696776
  422908:	ret    
  422909:	div    DWORD PTR [ebx]
  42290b:	sbb    eax,0xe8a0327f
  422910:	popf   
  422911:	push   eax
  422912:	retf   
  422913:	div    ah
  422915:	xchg   esi,eax
  422916:	jnp    0x422915
  422918:	mov    al,0x39
  42291a:	mov    dl,cl
  42291c:	ret    
  42291d:	and    eax,0xf615c08a
  422922:	pusha  
  422923:	ins    BYTE PTR es:[edi],dx
  422924:	rcl    DWORD PTR ds:0xb0b89aa9,0xee
  42292b:	retf   0x2739
  42292e:	rol    BYTE PTR [eax+0x16866ef9],0x86
  422935:	bound  edx,QWORD PTR ds:0x9aec2042
  42293b:	jne    0x42291e
  42293d:	ins    BYTE PTR es:[edi],dx
  42293e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42293f:	daa    
  422940:	popf   
  422941:	repnz inc ebx
  422943:	inc    esp
  422944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422945:	in     al,dx
  422946:	cmc    
  422947:	sahf   
  422948:	xor    al,0x8f
  42294a:	ins    DWORD PTR es:[edi],dx
  42294b:	aaa    
  42294c:	cdq    
  42294d:	aam    0xd
  42294f:	out    dx,eax
  422950:	inc    esi
  422951:	js     0x4228f5
  422953:	adc    BYTE PTR [eax+0x0],bh
  422956:	test   BYTE PTR [eax],dh
  422958:	das    
  422959:	inc    esi
  42295a:	sbb    DWORD PTR [eax],esi
  42295c:	out    dx,al
  42295d:	push   cs
  42295e:	or     ah,BYTE PTR [ebx-0x6d9e6fcd]
  422964:	cmp    eax,0xca6ab652
  422969:	and    DWORD PTR [edi-0x7b],0x7159d066
  422970:	loope  0x422921
  422972:	into   
  422973:	imul   ebp
  422975:	es inc ebp
  422977:	sti    
  422978:	add    ch,BYTE PTR [esi-0x137af74d]
  42297e:	mov    edx,0x21f1f263
  422983:	pop    ebp
  422984:	imul   eax,DWORD PTR ds:0xdaeee1f9,0x69
  42298b:	xor    eax,esi
  42298d:	(bad)  ds:0xa2d43e28
  422993:	shl    esp,cl
  422995:	into   
  422996:	or     al,0x5b
  422998:	mov    edx,0xd733ed1f
  42299d:	(bad)  
  42299e:	mov    dh,0x22
  4229a0:	not    BYTE PTR [ecx+0x729b685b]
  4229a6:	pusha  
  4229a7:	(bad)  
  4229a9:	popa   
  4229aa:	stc    
  4229ab:	rcl    DWORD PTR [edi],0x46
  4229ae:	outs   dx,BYTE PTR ds:[esi]
  4229af:	popf   
  4229b0:	bswap  edi
  4229b2:	xchg   edx,eax
  4229b3:	inc    ebx
  4229b4:	lods   eax,DWORD PTR ds:[esi]
  4229b5:	in     al,dx
  4229b6:	or     bl,BYTE PTR [eax-0x759dbf10]
  4229bc:	pop    esi
  4229bd:	outs   dx,DWORD PTR ds:[esi]
  4229be:	stc    
  4229bf:	push   ecx
  4229c0:	call   esp
  4229c2:	dec    ecx
  4229c3:	ins    BYTE PTR es:[edi],dx
  4229c4:	retf   
  4229c5:	jne    0x42298a
  4229c7:	ins    BYTE PTR es:[edi],dx
  4229c8:	test   al,0x45
  4229ca:	ret    
  4229cb:	fwait
  4229cc:	mov    ah,0xe3
  4229ce:	sbb    BYTE PTR [esi],ah
  4229d0:	or     bl,BYTE PTR [edx+ecx*8]
  4229d3:	jbe    0x4229c7
  4229d5:	jmp    0x422959
  4229d7:	ret    
  4229d8:	inc    ebp
  4229d9:	xor    ch,BYTE PTR [esi+0x6cb2ce75]
  4229df:	dec    ecx
  4229e0:	dec    esi
  4229e1:	icebp  
  4229e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229e3:	in     eax,0x45
  4229e5:	aam    0x28
  4229e7:	and    DWORD PTR [esi],esp
  4229e9:	dec    eax
  4229ea:	xor    BYTE PTR [edx],bl
  4229ec:	popa   
  4229ed:	aad    0xeb
  4229ef:	cli    
  4229f0:	mov    esp,0x495861cf
  4229f5:	icebp  
  4229f6:	xor    BYTE PTR [ecx],0x87
  4229f9:	fimul  DWORD PTR [edx-0x32]
  4229fc:	test   dl,0xf1
  4229ff:	mov    cs,WORD PTR [edx]
  422a01:	add    dh,BYTE PTR [ebx+0x5af5b01]
  422a07:	add    BYTE PTR [ebp-0x4b113076],bl
  422a0d:	xchg   ebx,eax
  422a0e:	adc    al,0xa0
  422a10:	xor    DWORD PTR [ebx+0x23a470d2],esi
  422a16:	test   ah,bh
  422a18:	pop    ebp
  422a19:	sbb    DWORD PTR [ebx],edx
  422a1b:	test   BYTE PTR [edx],ch
  422a1d:	pop    es
  422a1e:	pop    ds
  422a1f:	imul   ecx,edi,0x987d7994
  422a25:	sbb    al,0x4f
  422a27:	fld    DWORD PTR [edx]
  422a29:	loope  0x422a35
  422a2b:	push   es
  422a2c:	js     0x4229dc
  422a2e:	leave  
  422a2f:	inc    eax
  422a30:	sbb    bl,BYTE PTR [ebp-0x5aaa9a4d]
  422a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a37:	in     eax,0x4f
  422a39:	inc    eax
  422a3a:	fsubp  st(5),st
  422a3c:	inc    ebp
  422a3d:	pop    ecx
  422a3e:	mov    BYTE PTR [ebp+0x49],ch
  422a41:	into   
  422a42:	cmp    al,0x1d
  422a44:	xor    cl,BYTE PTR ds:0x5d120d62
  422a4a:	mov    ebp,0x322066f2
  422a4f:	test   BYTE PTR [esi+0x43],0x7f
  422a53:	stos   DWORD PTR es:[edi],eax
  422a54:	xor    esi,DWORD PTR [ebx]
  422a56:	and    al,0xc8
  422a58:	or     cl,BYTE PTR ss:[eax-0x69e28053]
  422a5f:	cmp    al,0x76
  422a61:	push   edi
  422a62:	sbb    DWORD PTR [esi+0x453076ac],esi
  422a68:	push   ss
  422a69:	cmp    esp,ebp
  422a6b:	dec    eax
  422a6c:	mov    ecx,DWORD PTR [esi+0x26]
  422a6f:	loop   0x422a29
  422a71:	rcl    BYTE PTR [esi+0x77],0x9e
  422a75:	shl    BYTE PTR [ecx-0x765a57d2],1
  422a7b:	retf   
  422a7c:	mov    eax,0xe095510e
  422a81:	adc    BYTE PTR [edx+0x56],dl
  422a84:	xor    BYTE PTR [edx-0xb9f4419],dl
  422a8a:	sbb    DWORD PTR [esi+ebp*8-0x12b1d9f5],0xca4cb593
  422a95:	out    dx,al
  422a96:	addr16 stc 
  422a98:	inc    ebp
  422a99:	mov    ch,BYTE PTR [ebx-0x57]
  422a9c:	ret    
  422a9d:	push   ecx
  422a9e:	ret    0xcbb7
  422aa1:	add    DWORD PTR [edx],0x35
  422aa4:	das    
  422aa5:	and    al,0x13
  422aa7:	adc    eax,0x7f712ce6
  422aac:	xor    DWORD PTR [esi],edi
  422aae:	lods   al,BYTE PTR ds:[esi]
  422aaf:	add    eax,0x3bb15bc3
  422ab4:	mov    esp,DWORD PTR [ebx+0x2fa91332]
  422aba:	or     esp,DWORD PTR [edi]
  422abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422abd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422abe:	ror    DWORD PTR [ecx-0x498eac8],1
  422ac4:	xchg   ebx,eax
  422ac5:	sub    esp,DWORD PTR [edi-0x23]
  422ac8:	dec    ebp
  422ac9:	mov    eax,0xc46e5e07
  422ace:	mov    fs,ebp
  422ad0:	rcr    edx,1
  422ad2:	dec    edi
  422ad3:	test   eax,0x43254839
  422ad8:	mov    ?,WORD PTR [ecx+0x5720f30b]
  422ade:	js     0x422af5
  422ae0:	jbe    0x422b15
  422ae2:	pop    ecx
  422ae3:	push   cs
  422ae4:	xchg   edi,eax
  422ae5:	fidivr DWORD PTR [eax-0x47]
  422ae8:	fild   WORD PTR [edx+0xb]
  422aeb:	das    
  422aec:	inc    edx
  422aed:	cwde   
  422aee:	(bad)  
  422aef:	mov    ebp,0x4f1de9fd
  422af4:	cs xchg ebp,eax
  422af6:	ins    DWORD PTR es:[edi],dx
  422af7:	inc    esp
  422af8:	adc    BYTE PTR [eax],ah
  422afa:	mov    dh,0x5d
  422afc:	push   ds
  422afd:	push   ebp
  422afe:	push   ds
  422aff:	retf   0xb99a
  422b02:	pop    ecx
  422b03:	gs clc 
  422b05:	or     esp,DWORD PTR [ecx-0x50]
  422b08:	pop    eax
  422b09:	aad    0xc
  422b0b:	xor    esi,0xffffff83
  422b0e:	outs   dx,BYTE PTR ds:[esi]
  422b0f:	inc    ecx
  422b10:	mov    cl,0x41
  422b12:	repnz repnz mov cl,0x7d
  422b16:	in     al,0x74
  422b18:	call   edi
  422b1a:	je     0x422b6e
  422b1c:	cmp    bh,BYTE PTR [edx]
  422b1e:	fbstp  TBYTE PTR [ebp+0x5e35fc30]
  422b24:	mov    eax,0xdf0947d4
  422b29:	pop    ecx
  422b2a:	ss imul ecx,ebx,0xc195a5ff
  422b31:	cdq    
  422b32:	mov    bh,0x5d
  422b34:	jmp    0x422b1c
  422b36:	push   ss
  422b37:	push   0x3eb9cad4
  422b3c:	push   0x3b
  422b3e:	pushf  
  422b3f:	aad    0x66
  422b41:	(bad)  
  422b42:	jno    0x422b70
  422b44:	pop    es
  422b45:	dec    esp
  422b46:	fs stos DWORD PTR es:[edi],eax
  422b48:	push   eax
  422b49:	sbb    bl,BYTE PTR [eax]
  422b4b:	mov    edi,DWORD PTR [ebx]
  422b4d:	pop    edx
  422b4e:	mov    ch,0x7a
  422b50:	jmp    0x422baa
  422b52:	adc    edx,DWORD PTR [eax+eax*8-0x6]
  422b56:	mov    ch,0x9c
  422b58:	inc    ecx
  422b59:	out    dx,eax
  422b5a:	std    
  422b5b:	lods   al,BYTE PTR ds:[esi]
  422b5c:	scas   eax,DWORD PTR es:[edi]
  422b5d:	ins    DWORD PTR es:[edi],dx
  422b5e:	enter  0x8fac,0x2c
  422b62:	scas   al,BYTE PTR es:[edi]
  422b63:	push   0x12
  422b65:	dec    esp
  422b66:	add    cl,bl
  422b68:	js     0x422b35
  422b6a:	push   ebp
  422b6b:	pop    es
  422b6c:	adc    cl,BYTE PTR [ebp-0x37]
  422b6f:	mov    edi,0xacfeed98
  422b74:	lods   eax,DWORD PTR ds:[esi]
  422b75:	jg     0x422bcf
  422b77:	adc    DWORD PTR [ebx-0x18],eax
  422b7a:	scas   al,BYTE PTR es:[edi]
  422b7b:	ins    DWORD PTR es:[edi],dx
  422b7c:	int    0x58
  422b7e:	xor    al,0xcc
  422b80:	shl    BYTE PTR [edx+ecx*4-0x1c],cl
  422b84:	add    eax,0x3d624f27
  422b89:	dec    edx
  422b8a:	call   0xe693e802
  422b8f:	dec    ecx
  422b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b91:	gs inc ebx
  422b93:	addr16 pop ebp
  422b95:	(bad)  
  422b96:	pminub mm7,QWORD PTR [esi+0x1ceb6ec3]
  422b9d:	xchg   edi,eax
  422b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b9f:	nop
  422ba0:	test   al,0xc3
  422ba2:	cld    
  422ba3:	icebp  
  422ba4:	dec    edx
  422ba5:	inc    esi
  422ba6:	imul   edx,DWORD PTR [edi-0x231d3aa5],0xa46b4a27
  422bb0:	mov    al,0xe3
  422bb2:	xor    BYTE PTR [edi-0x6aa1da40],0x98
  422bb9:	sub    eax,0x2e21eb10
  422bbe:	imul   edx,DWORD PTR [esi],0x337549b3
  422bc4:	daa    
  422bc5:	in     eax,dx
  422bc6:	mov    cs:0xc7ce254e,al
  422bcc:	sbb    ecx,edx
  422bce:	aas    
  422bcf:	shl    BYTE PTR [ecx-0x8],cl
  422bd2:	cmp    al,0x3c
  422bd4:	in     eax,0x32
  422bd6:	dec    edi
  422bd7:	and    eax,DWORD PTR [edx+0x55]
  422bda:	scas   al,BYTE PTR es:[edi]
  422bdb:	loope  0x422c3a
  422bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bde:	sti    
  422bdf:	and    al,0xc1
  422be1:	dec    ebx
  422be2:	sbb    BYTE PTR [edi],dh
  422be4:	enter  0xaeb6,0x28
  422be8:	cmp    ecx,DWORD PTR [eax+edi*2+0x3665daf5]
  422bef:	pop    edx
  422bf0:	sti    
  422bf1:	mov    dh,BYTE PTR [ebp-0x414ba2e1]
  422bf7:	cmp    ah,BYTE PTR [ecx]
  422bf9:	ins    DWORD PTR es:[edi],dx
  422bfa:	push   0x8859bd0e
  422bff:	in     eax,dx
  422c00:	sbb    cl,BYTE PTR cs:[ebp+edx*1+0x54]
  422c05:	push   edx
  422c06:	imul   edx,DWORD PTR [edx],0xaca09a32
  422c0c:	sub    DWORD PTR [esi+ebx*8+0x72],ecx
  422c10:	pop    DWORD PTR [ebp+0x505ac2e2]
  422c16:	stos   DWORD PTR es:[edi],eax
  422c17:	aas    
  422c18:	cmp    dh,ah
  422c1a:	push   esi
  422c1b:	outs   dx,DWORD PTR ds:[esi]
  422c1c:	jp     0x422bad
  422c1e:	shl    DWORD PTR [ecx],cl
  422c20:	stos   DWORD PTR es:[edi],eax
  422c21:	out    0x7e,eax
  422c23:	arpl   WORD PTR ds:0x9a8481ac,cx
  422c29:	mov    ch,0x39
  422c2b:	cmp    edx,DWORD PTR [ecx+0x1b]
  422c2e:	leave  
  422c2f:	push   edi
  422c30:	sbb    edi,ebp
  422c32:	push   0x7e
  422c34:	add    dl,al
  422c36:	outs   dx,BYTE PTR ds:[esi]
  422c37:	and    DWORD PTR [esi],eax
  422c39:	xchg   ebp,eax
  422c3a:	add    BYTE PTR [ebx-0x19313444],dl
  422c40:	out    dx,al
  422c41:	(bad)  
  422c42:	jo     0x422bfa
  422c44:	daa    
  422c45:	sbb    BYTE PTR [eax-0x7a],ah
  422c48:	push   es
  422c49:	in     eax,dx
  422c4a:	scas   eax,DWORD PTR es:[edi]
  422c4b:	mov    DWORD PTR [ecx+eiz*4],ebx
  422c4e:	(bad)  
  422c50:	and    esp,edx
  422c52:	add    eax,0xfb982c6f
  422c57:	sbb    edi,DWORD PTR [edi]
  422c59:	repnz fstp DWORD PTR [ebx]
  422c5c:	push   ecx
  422c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c5e:	inc    edi
  422c5f:	jle    0x422c0e
  422c61:	inc    edx
  422c62:	lods   eax,DWORD PTR ds:[esi]
  422c63:	add    eax,0x4de7e948
  422c68:	adc    dh,dl
  422c6a:	aaa    
  422c6b:	sti    
  422c6c:	cmp    ch,BYTE PTR [ecx+eax*1+0x20]
  422c70:	test   eax,0x48796747
  422c75:	jecxz  0x422c0f
  422c77:	in     al,dx
  422c78:	je     0x422c6d
  422c7a:	push   esi
  422c7b:	les    eax,FWORD PTR ss:0x70116f4
  422c82:	sbb    ebx,DWORD PTR [ecx]
  422c84:	mov    al,ds:0x5aa25426
  422c89:	fbld   TBYTE PTR [esi]
  422c8b:	jmp    FWORD PTR [ebx]
  422c8d:	les    edi,FWORD PTR [ebx+0x725acef3]
  422c93:	pop    esp
  422c94:	fistp  DWORD PTR [edi-0x7a]
  422c97:	test   bh,0x65
  422c9a:	enter  0x8700,0xef
  422c9e:	adc    al,0x2f
  422ca0:	ret    0x577c
  422ca3:	jne    0x422d06
  422ca5:	sbb    ecx,ebp
  422ca7:	in     eax,dx
  422ca8:	test   DWORD PTR [edx],ecx
  422caa:	inc    esp
  422cab:	(bad)  
  422cac:	fwait
  422cad:	or     eax,0x24615987
  422cb2:	pop    edx
  422cb3:	stos   BYTE PTR es:[edi],al
  422cb4:	les    eax,FWORD PTR [edi]
  422cb6:	ja     0x422cff
  422cb8:	clc    
  422cb9:	jp     0x422d2a
  422cbb:	imul   esp,ebp,0x75
  422cbe:	xchg   edx,eax
  422cbf:	gs xchg edx,eax
  422cc1:	call   0xea173d99
  422cc6:	daa    
  422cc7:	(bad)  
  422cc8:	ficomp WORD PTR [esi]
  422cca:	sahf   
  422ccb:	jbe    0x422cac
  422ccd:	test   al,ch
  422ccf:	(bad)  
  422cd0:	inc    ecx
  422cd2:	xor    BYTE PTR [ebp+0x20],bl
  422cd5:	out    0x8e,al
  422cd7:	cmp    BYTE PTR [edi-0x233f075f],cl
  422cdd:	jl     0x422c6b
  422cdf:	sbb    DWORD PTR [eax+0x3b],eax
  422ce2:	fwait
  422ce3:	call   0x5cee:0xd8a85918
  422cea:	xchg   edx,eax
  422ceb:	push   ds
  422cec:	shl    BYTE PTR [edi],cl
  422cee:	leave  
  422cef:	fwait
  422cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf1:	je     0x422d6c
  422cf3:	(bad)  
  422cf4:	loope  0x422d11
  422cf6:	jae    0x422d10
  422cf8:	in     eax,dx
  422cf9:	int    0x7b
  422cfb:	push   ebx
  422cfc:	sbb    ah,BYTE PTR [esp+ecx*2-0x24a5b35f]
  422d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d04:	inc    esi
  422d05:	fcomp  QWORD PTR [ebp-0x7f]
  422d08:	inc    esp
  422d09:	imul   eax,DWORD PTR [edx+0x43],0xefd2af11
  422d10:	and    al,0x5e
  422d12:	aad    0x67
  422d14:	sahf   
  422d15:	sub    DWORD PTR [esp+esi*4+0x38],eax
  422d19:	xchg   ebp,eax
  422d1a:	cmp    DWORD PTR [eax+0x58],0xffffffe7
  422d1e:	push   ss
  422d1f:	imul   DWORD PTR [edx-0x2d]
  422d22:	and    al,0xaf
  422d24:	mov    cs,WORD PTR ds:0x27721a0d
  422d2a:	mov    DWORD PTR [edi-0x11],edi
  422d2d:	pop    ss
  422d2e:	pop    ds
  422d2f:	test   DWORD PTR [ebp+ebx*2-0x5842ecd4],ecx
  422d36:	inc    ecx
  422d37:	sbb    cl,ch
  422d39:	pop    esi
  422d3a:	push   edi
  422d3b:	lods   eax,DWORD PTR ds:[esi]
  422d3c:	inc    edi
  422d3d:	mov    BYTE PTR [esi+ebp*8+0x3927ca5c],dl
  422d44:	out    0x8,eax
  422d46:	ret    
  422d47:	push   ss
  422d48:	and    al,0xa4
  422d4a:	jbe    0x422d8b
  422d4c:	push   esi
  422d4d:	call   0xd26a:0x121e057a
  422d54:	xchg   edi,eax
  422d55:	or     ebp,ecx
  422d57:	loop   0x422d7e
  422d59:	jl     0x422dc8
  422d5b:	clc    
  422d5c:	in     eax,0xc6
  422d5e:	scas   al,BYTE PTR es:[edi]
  422d5f:	sbb    DWORD PTR [ecx-0x6cfadf7a],0x197eaa56
  422d69:	mov    al,0xe1
  422d6b:	mov    eax,0x3deec225
  422d70:	dec    edx
  422d71:	ins    BYTE PTR es:[edi],dx
  422d72:	push   eax
  422d73:	das    
  422d74:	sub    DWORD PTR [ecx+0x4332d01f],esp
  422d7a:	mov    ebx,edi
  422d7c:	pop    edx
  422d7d:	in     al,dx
  422d7e:	scas   eax,DWORD PTR es:[edi]
  422d7f:	and    esp,DWORD PTR [ebx-0x3d]
  422d82:	ret    0x56e7
  422d85:	mov    edi,fs
  422d87:	xor    edi,DWORD PTR [edx+0x57]
  422d8a:	shl    DWORD PTR [edx-0x48],1
  422d8d:	mov    WORD PTR [edx-0x469a083d],fs
  422d93:	leave  
  422d94:	xor    eax,DWORD PTR [edx]
  422d96:	xor    DWORD PTR [esi],esp
  422d98:	(bad)  
  422d99:	and    ecx,DWORD PTR [edi]
  422d9b:	rcr    ecx,0x32
  422d9e:	push   esp
  422d9f:	dec    esi
  422da0:	retf   
  422da1:	dec    esi
  422da2:	and    eax,0x226c959d
  422da7:	test   BYTE PTR [ebp-0x424a8022],0x30
  422dae:	xor    cl,cl
  422db0:	test   edi,ebx
  422db2:	int    0xb3
  422db4:	inc    esi
  422db5:	and    DWORD PTR [ebp+0x38],ecx
  422db8:	pop    es
  422db9:	out    dx,al
  422dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dbb:	mov    ebp,0x5cc53bf
  422dc0:	out    dx,al
  422dc1:	cdq    
  422dc2:	push   ds
  422dc3:	lods   al,BYTE PTR ds:[esi]
  422dc4:	xchg   edx,eax
  422dc5:	test   al,0x7
  422dc7:	sbb    edi,DWORD PTR [eax]
  422dc9:	aas    
  422dca:	add    esi,esi
  422dcc:	dec    edi
  422dcd:	gs sbb al,0xb8
  422dd0:	out    0x64,eax
  422dd2:	mov    WORD PTR [ebp-0x49d35ea6],gs
  422dd8:	mov    ebx,0x18714370
  422ddd:	cmp    DWORD PTR [edx-0xc],0xf88ef262
  422de4:	loopne 0x422d67
  422de6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422de7:	push   esi
  422de8:	icebp  
  422de9:	sub    eax,0x8432ebbb
  422dee:	cld    
  422def:	fs test esp,ecx
  422df2:	dec    esp
  422df3:	mov    edx,0x6d88fbf0
  422df8:	jne    0x422db8
  422dfa:	out    0xbf,eax
  422dfc:	dec    esi
  422dfd:	adc    edi,DWORD PTR [ecx+eiz*4+0x28]
  422e01:	pop    edx
  422e02:	push   es
  422e03:	adc    esp,esi
  422e05:	inc    edx
  422e06:	xor    eax,edi
  422e08:	mov    fs,WORD PTR [ebx+0x5c]
  422e0b:	sbb    BYTE PTR [ebp+0x648b77f8],ch
  422e11:	inc    edi
  422e12:	sub    DWORD PTR [edi-0x61],ebp
  422e15:	push   edi
  422e16:	lods   al,BYTE PTR ds:[esi]
  422e17:	rol    DWORD PTR [ebp+0x1394e029],cl
  422e1d:	clc    
  422e1e:	lods   al,BYTE PTR ds:[esi]
  422e1f:	sbb    DWORD PTR [esi-0x56],eax
  422e22:	push   esp
  422e23:	mul    DWORD PTR [esi-0x2]
  422e26:	dec    edi
  422e27:	mov    dh,BYTE PTR ds:0xe0d1e1ac
  422e2d:	pop    esi
  422e2e:	aas    
  422e2f:	cld    
  422e30:	sub    bl,dh
  422e32:	jge    0x422de9
  422e34:	stc    
  422e35:	ret    
  422e36:	mov    bl,0x2e
  422e38:	inc    eax
  422e39:	push   edx
  422e3a:	mov    al,ds:0xfe0ea87a
  422e3f:	xchg   ebp,eax
  422e40:	pop    edi
  422e41:	dec    ebp
  422e42:	sbb    ebp,DWORD PTR [esi+ecx*1+0x55e77aa4]
  422e49:	inc    edx
  422e4a:	jmp    0xcbaa7105
  422e4f:	sbb    ch,BYTE PTR [ebx]
  422e51:	dec    eax
  422e52:	or     ch,dl
  422e54:	and    al,0x19
  422e56:	push   0xda7bec09
  422e5b:	scas   al,BYTE PTR es:[edi]
  422e5c:	dec    edx
  422e5d:	mov    bl,0xba
  422e5f:	mov    al,0xb3
  422e61:	shr    BYTE PTR [esi],cl
  422e63:	enter  0x9b6,0x10
  422e67:	pop    DWORD PTR [ebx-0x2f6c74f6]
  422e6d:	jmp    0xc542d4ed
  422e72:	loope  0x422ee2
  422e74:	in     al,0x8d
  422e76:	jg     0x422ed0
  422e78:	es ja  0x422e78
  422e7b:	mov    ecx,0x7a3db0d6
  422e80:	out    dx,al
  422e81:	and    al,0x7c
  422e83:	arpl   WORD PTR [eax],bx
  422e85:	add    eax,0xebde1c0
  422e8a:	push   0x2f91c941
  422e8f:	ror    DWORD PTR [esi+0x2e],cl
  422e92:	iret   
  422e93:	cwde   
  422e94:	test   al,0xe2
  422e96:	out    dx,eax
  422e97:	call   0x234c:0x4fbdb187
  422e9e:	sar    ebp,1
  422ea0:	retf   
  422ea1:	xchg   esp,eax
  422ea2:	push   ss
  422ea3:	pop    edx
  422ea4:	imul   edx,DWORD PTR [ebp-0x4c1e61b9],0x49
  422eab:	sub    BYTE PTR [ecx+0x59],ah
  422eae:	inc    ebp
  422eaf:	xchg   edi,eax
  422eb0:	arpl   sp,cx
  422eb2:	mov    WORD PTR [edx-0x3b],es
  422eb5:	jae    0x422ea6
  422eb7:	and    al,0xda
  422eb9:	ss clc 
  422ebb:	push   0x923a1ad2
  422ec0:	cwde   
  422ec1:	ret    0xec10
  422ec4:	jb     0x422e95
  422ec6:	sbb    DWORD PTR [ebp+0x293b65bc],eax
  422ecc:	or     BYTE PTR [ecx+0x20f1dcd1],bl
  422ed2:	cmp    DWORD PTR [eax-0x1c],ebx
  422ed5:	push   ecx
  422ed6:	sub    bh,BYTE PTR [eax+0x5e]
  422ed9:	and    esi,DWORD PTR [esi-0x53]
  422edc:	mov    cl,0xa6
  422ede:	sbb    edi,esp
  422ee0:	fcomp  QWORD PTR [eax]
  422ee2:	jmp    0x422f23
  422ee4:	(bad)  
  422ee5:	je     0x422f35
  422ee7:	xchg   DWORD PTR [edi+0x75ed9870],edx
  422eed:	adc    eax,0x71ca3ad8
  422ef2:	lock loopne 0x422eb2
  422ef5:	fmul   DWORD PTR [ebx]
  422ef7:	jno    0x422f10
  422ef9:	scas   al,BYTE PTR es:[edi]
  422efa:	pop    ecx
  422efb:	push   ebx
  422efc:	push   esi
  422efd:	mov    eax,ds:0xc4063306
  422f02:	adc    BYTE PTR [eax-0x24ef122e],dl
  422f08:	dec    esp
  422f09:	cmp    al,0xfd
  422f0b:	inc    edx
  422f0c:	push   esp
  422f0d:	pop    eax
  422f0e:	inc    edi
  422f0f:	in     eax,dx
  422f10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f11:	loope  0x422f78
  422f13:	outs   dx,BYTE PTR ds:[esi]
  422f14:	inc    esp
  422f15:	sub    BYTE PTR [esi-0x3b],cl
  422f18:	clc    
  422f19:	(bad)  
  422f1a:	enter  0x1006,0xa9
  422f1e:	test   DWORD PTR [ecx-0x2844973b],esi
  422f24:	inc    edi
  422f25:	repnz lds ebp,FWORD PTR [ebx-0x12]
  422f29:	sub    eax,0xf7df473c
  422f2e:	fmul   QWORD PTR [eax+0x30]
  422f31:	lock imul ebx,DWORD PTR [esp+edi*2+0x60],0xffffffca
  422f37:	outs   dx,BYTE PTR ds:[esi]
  422f38:	push   ebp
  422f39:	les    ebp,FWORD PTR [edx+0x5c]
  422f3c:	mov    eax,ds:0x7e46c3d9
  422f41:	fcomp  st(7)
  422f43:	div    DWORD PTR [ecx*8+0x5683e88e]
  422f4a:	std    
  422f4b:	pop    esp
  422f4c:	mov    al,0xfe
  422f4e:	dec    edi
  422f4f:	(bad)  
  422f50:	jo     0x422f9a
  422f52:	mov    edx,0x357294e1
  422f57:	cmc    
  422f58:	enter  0x9e0e,0xf
  422f5c:	aaa    
  422f5d:	or     dl,BYTE PTR [eax]
  422f5f:	mov    esi,0xa5b0e441
  422f64:	inc    eax
  422f65:	push   ecx
  422f66:	nop
  422f67:	sbb    al,0xd3
  422f69:	and    al,0x2e
  422f6b:	inc    esi
  422f6c:	jge    0x422f73
  422f6e:	mov    DWORD PTR [ecx],edx
  422f70:	lahf   
  422f71:	test   al,0x86
  422f73:	add    dh,BYTE PTR [eax]
  422f75:	pushf  
  422f76:	ins    BYTE PTR es:[edi],dx
  422f77:	fidiv  DWORD PTR [ebx+0x4d]
  422f7a:	ficomp WORD PTR [ecx]
  422f7c:	cs addr16 call 0xfde2:0x581b6f10
  422f85:	mov    dl,0xe2
  422f87:	and    DWORD PTR [ebx+edi*4],edi
  422f8a:	es inc esp
  422f8c:	ja     0x422fff
  422f8e:	shl    al,cl
  422f90:	mov    BYTE PTR [eax+eax*8-0x70d02533],0xd5
  422f98:	add    DWORD PTR [edx+0x33670fa3],edx
  422f9e:	lock inc esi
  422fa0:	mov    ds:0xab72f0ed,al
  422fa5:	or     ebx,ebp
  422fa7:	sbb    al,BYTE PTR [esi-0x61]
  422faa:	jb     0x422f97
  422fac:	leave  
  422fad:	mov    ch,0x3b
  422faf:	sbb    eax,0x5a85af6d
  422fb4:	(bad)  
  422fb6:	rcr    DWORD PTR [edi-0x48],0xd0
  422fba:	mov    ebx,ss
  422fbc:	xor    ebx,DWORD PTR [edi+edi*2+0x4c]
  422fc0:	mov    eax,0x4337cdd
  422fc5:	lds    ebx,FWORD PTR [edi+0x2705c444]
  422fcb:	xor    BYTE PTR [eax-0x6727965],bl
  422fd1:	hlt    
  422fd2:	pop    ebx
  422fd3:	(bad)  
  422fd4:	jno    0x422fbe
  422fd6:	and    eax,0x8c706064
  422fdb:	pop    edx
  422fdc:	dec    esp
  422fdd:	inc    ecx
  422fde:	pop    esp
  422fdf:	dec    ecx
  422fe0:	inc    esi
  422fe1:	scas   eax,DWORD PTR es:[edi]
  422fe2:	dec    ebx
  422fe3:	test   eax,0xd975e9a2
  422fe8:	jae    0x422f7c
  422fea:	inc    esp
  422feb:	idiv   cl
  422fed:	and    al,0x5c
  422fef:	mov    ecx,0x8ba83c0e
  422ff4:	push   0x693c3cad
  422ff9:	test   esp,eax
  422ffb:	jbe    0x42304b
  422ffd:	cmp    esi,DWORD PTR [ebp+eax*2+0x7c8a035e]
  423004:	pop    ecx
  423005:	xor    edx,ebx
  423007:	xchg   eax,ebx
  423009:	cmp    ch,BYTE PTR [esi+0xd357808]
  42300f:	sbb    ebx,DWORD PTR [ecx+0x48126678]
  423015:	push   ss
  423016:	jge    0x422fa9
  423018:	(bad)  
  423019:	fwait
  42301a:	mov    al,BYTE PTR [edx+0x53]
  42301d:	mul    BYTE PTR ds:[esi+eiz*8-0x41]
  423022:	pop    ebx
  423023:	adc    DWORD PTR [ebp-0x4c3ce59c],0x19271851
  42302d:	mov    esi,es
  42302f:	and    bh,BYTE PTR [esi+0x4b]
  423032:	push   0x1e
  423034:	rcr    DWORD PTR [ebx+0x71],cl
  423037:	inc    ebx
  423038:	fcom   QWORD PTR [ebp+0x5fdd9736]
  42303e:	or     ebp,DWORD PTR [edx]
  423040:	adc    al,dh
  423042:	dec    ecx
  423043:	je     0x422ffa
  423045:	cdq    
  423046:	popa   
  423047:	gs cdq 
  423049:	dec    ebx
  42304a:	outs   dx,BYTE PTR ds:[esi]
  42304b:	jge    0x423078
  42304d:	pop    edx
  42304e:	loopne 0x422ffa
  423050:	outs   dx,BYTE PTR ds:[esi]
  423051:	js     0x422fd4
  423053:	lea    ecx,[edx]
  423055:	loop   0x423044
  423057:	dec    eax
  423058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423059:	pop    esi
  42305a:	addr16 sti 
  42305c:	mov    edx,0xe34c7c3e
  423061:	mov    ecx,0x7579fd63
  423066:	jo     0x423062
  423068:	mov    ?,WORD PTR [esi-0x2718224f]
  42306e:	lods   eax,DWORD PTR ds:[esi]
  42306f:	mov    al,0x1e
  423071:	stc    
  423072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423073:	push   ds
  423074:	sub    al,0xe1
  423076:	scas   al,BYTE PTR es:[edi]
  423077:	mov    esp,0x27a1916e
  42307c:	sub    edx,DWORD PTR [ebx-0x69]
  42307f:	jmp    FWORD PTR gs:[eax+ebp*2+0x4b20533d]
  423087:	inc    esi
  423088:	scas   al,BYTE PTR es:[edi]
  423089:	fist   DWORD PTR [ebp+0x5a]
  42308c:	repz adc DWORD PTR [esi+0x224cb09],edi
  423093:	jge    0x423081
  423095:	daa    
  423096:	lahf   
  423097:	mov    esp,0x927a9637
  42309c:	pushf  
  42309d:	mov    cl,0x1f
  42309f:	xor    bh,cl
  4230a1:	stos   DWORD PTR es:[edi],eax
  4230a2:	pop    edx
  4230a3:	mov    DWORD PTR [ebx-0x31],ebx
  4230a6:	dec    esi
  4230a7:	push   ss
  4230a8:	sbb    eax,0xeb6b7460
  4230ad:	xchg   DWORD PTR [esi+0x338b86b9],esp
  4230b3:	push   ebp
  4230b4:	mov    dh,0x71
  4230b6:	out    0x68,al
  4230b8:	pop    ecx
  4230b9:	aas    
  4230ba:	jmp    0x423061
  4230bc:	fmul   QWORD PTR [edi+0x0]
  4230bf:	addr16 loopne 0x423110
  4230c2:	(bad)  
  4230c3:	mov    al,ds:0x792ba577
  4230c8:	icebp  
  4230c9:	adc    DWORD PTR [ebx+0x2e],ecx
  4230cc:	add    eax,0x85cc01f9
  4230d1:	shl    ebp,1
  4230d3:	mov    dh,0x72
  4230d5:	call   0xef8386e9
  4230da:	dec    edx
  4230db:	subps  xmm7,XMMWORD PTR [esi-0x54]
  4230df:	std    
  4230e0:	scas   eax,DWORD PTR es:[edi]
  4230e1:	les    ecx,FWORD PTR [esi+esi*1+0x6d]
  4230e5:	jecxz  0x423070
  4230e7:	inc    eax
  4230e8:	inc    edi
  4230e9:	icebp  
  4230ea:	fnstenv [ecx]
  4230ec:	iret   
  4230ed:	iret   
  4230ee:	dec    edx
  4230ef:	loopne 0x42310b
  4230f1:	adc    bl,BYTE PTR [esp+ebx*8]
  4230f4:	fstp   DWORD PTR [ecx+ebp*8]
  4230f7:	mov    ebp,DWORD PTR [edx-0x2b1d830]
  4230fd:	mov    cl,0x1c
  4230ff:	or     eax,0xed8d02e9
  423104:	dec    ebx
  423105:	std    
  423106:	mov    ds:0xbecb4cde,eax
  42310b:	jae    0x42315f
  42310d:	mov    ah,0xf5
  42310f:	and    edi,DWORD PTR [edi+eiz*2+0x38]
  423113:	cmp    ebx,DWORD PTR [ebp+0x511bd7fc]
  423119:	inc    esi
  42311a:	loop   0x4230ed
  42311c:	out    0xe7,eax
  42311e:	xor    dh,BYTE PTR [ebp-0x71193a98]
  423124:	mov    dl,0xaa
  423126:	retf   0x96d7
  423129:	addr16 dec ecx
  42312b:	inc    esi
  42312c:	xchg   BYTE PTR [eax],cl
  42312e:	lea    eax,[esi+0x2e786366]
  423134:	mov    eax,ds:0x7da9557
  423139:	xor    esp,edx
  42313b:	mov    eax,ds:0x402dc05b
  423140:	sub    BYTE PTR [ebx],dh
  423142:	mov    eax,ds:0xc3c47828
  423147:	(bad)  
  423148:	jle    0x42312b
  42314a:	cmp    esp,esp
  42314c:	lahf   
  42314d:	jg     0x4231c3
  42314f:	mov    bl,0xf6
  423151:	sahf   
  423152:	xchg   ecx,eax
  423153:	loop   0x4231bb
  423155:	add    al,ah
  423157:	or     al,0x42
  423159:	mov    ecx,0xd18bed62
  42315e:	push   ds
  42315f:	mov    edi,0x994d24d2
  423164:	sub    ebx,DWORD PTR ds:0x8bd8d2cc
  42316a:	js     0x423176
  42316c:	fild   QWORD PTR [eax-0xc]
  42316f:	aas    
  423170:	inc    BYTE PTR fs:[edi+0x134a90a4]
  423177:	add    eax,0x6e7c1bec
  42317c:	retf   
  42317d:	or     DWORD PTR [eax-0x118b7d8a],0xffffffd2
  423184:	dec    ecx
  423185:	dec    ebx
  423186:	mov    dl,0x54
  423188:	jg     0x423192
  42318a:	ins    DWORD PTR es:[edi],dx
  42318b:	adc    esp,0xb5648fe
  423191:	sub    BYTE PTR [ebx+0x6c2c4c4c],dl
  423197:	xchg   ebx,eax
  423198:	fcom   QWORD PTR [ebp-0x498a8c0f]
  42319e:	push   cs
  42319f:	dec    edi
  4231a0:	ds popf 
  4231a2:	inc    ebx
  4231a3:	pop    ecx
  4231a4:	in     ax,dx
  4231a6:	out    0x33,al
  4231a8:	dec    eax
  4231a9:	fsubr  QWORD PTR [esi]
  4231ab:	out    0xa4,eax
  4231ad:	das    
  4231ae:	enter  0xcb7d,0x9e
  4231b2:	pop    edi
  4231b3:	pop    ebp
  4231b4:	adc    DWORD PTR ds:0x6310b5bc,esp
  4231ba:	loop   0x4231bb
  4231bc:	(bad)  
  4231bd:	imul   DWORD PTR [ebx]
  4231bf:	jl     0x4231db
  4231c1:	outs   dx,BYTE PTR ds:[esi]
  4231c2:	dec    esi
  4231c3:	cdq    
  4231c4:	sbb    DWORD PTR [ecx+0x43],0xffffffde
  4231c8:	mov    cl,0x65
  4231ca:	mov    dl,0x7b
  4231cc:	in     al,0xb7
  4231ce:	cs enter 0x2298,0x50
  4231d3:	cli    
  4231d4:	mov    bl,0xae
  4231d6:	pop    esi
  4231d7:	sub    eax,0xbbe44aff
  4231dc:	imul   esp,DWORD PTR [esi-0x6e036fed],0xffffffcd
  4231e3:	test   BYTE PTR [edx],0xb8
  4231e6:	inc    esi
  4231e7:	scas   eax,DWORD PTR es:[edi]
  4231e8:	fcomip st,st(0)
  4231ea:	xor    eax,DWORD PTR [edx-0x54f6ac]
  4231f0:	call   0xc1c7:0x7bbde882
  4231f7:	clc    
  4231f8:	ror    BYTE PTR [ebx+0x28],0x7b
  4231fc:	imul   esp,DWORD PTR [ebp+0x77],0xffffff81
  423200:	fadd   DWORD PTR [esi]
  423202:	jmp    0x423196
  423204:	cmc    
  423205:	cs mov ebp,0x6ae4be4
  42320b:	hlt    
  42320c:	imul   esi,DWORD PTR es:[edi-0xe],0x74
  423211:	cmp    eax,0x5ca438f0
  423216:	xor    BYTE PTR [eax-0x52f88790],bl
  42321c:	shl    DWORD PTR [ecx],cl
  42321e:	je     0x423218
  423220:	iret   
  423221:	les    ebx,FWORD PTR [ebx-0x77924701]
  423227:	inc    DWORD PTR [eax-0xf]
  42322a:	push   ebp
  42322b:	cwde   
  42322c:	into   
  42322d:	dec    ebp
  42322e:	sbb    eax,edx
  423230:	cmp    DWORD PTR [edi-0x7a],eax
  423233:	out    0xc3,al
  423235:	mov    al,ds:0xb3d71fca
  42323a:	(bad)
  42323e:	imul   ecx,DWORD PTR [ecx-0x30],0xb8447284
  423245:	sub    BYTE PTR [edx+0x6d],0x5b
  423249:	(bad)
  42324c:	fisttp QWORD PTR [ebx-0x44]
  42324f:	mov    ch,0x51
  423251:	aad    0x9c
  423253:	out    dx,eax
  423254:	cli    
  423255:	test   BYTE PTR ds:0x884a385a,cl
  42325b:	not    BYTE PTR [esp+ecx*2-0x58]
  42325f:	and    eax,0x77b1c48
  423264:	retf   
  423265:	sbb    eax,0x3b49a914
  42326a:	jge    0x4232d0
  42326c:	adc    eax,0x55fd8c03
  423271:	cmp    DWORD PTR [edx+0x4bdf8509],edx
  423277:	add    al,0x20
  423279:	push   eax
  42327a:	fs jmp 0x238013bd
  423280:	(bad)  
  423281:	dec    edi
  423282:	into   
  423283:	jno    0x4232ab
  423285:	push   cs
  423286:	iret   
  423287:	scas   al,BYTE PTR es:[edi]
  423288:	data16 or dl,ah
  42328b:	pop    edi
  42328c:	stc    
  42328d:	lods   eax,DWORD PTR ds:[esi]
  42328e:	sub    DWORD PTR [esi+0x178dcf70],0xffffffc8
  423295:	out    0xcf,al
  423297:	enter  0x9885,0x8b
  42329b:	adc    al,0xb3
  42329d:	and    eax,DWORD PTR [esi-0x2a41782d]
  4232a3:	adc    ah,ah
  4232a5:	pop    ds
  4232a6:	jecxz  0x423303
  4232a8:	mov    al,BYTE PTR [eax]
  4232aa:	sbb    DWORD PTR [ecx+eiz*1],ebp
  4232ad:	xchg   ecx,eax
  4232ae:	adc    BYTE PTR [edi],ch
  4232b0:	(bad)  
  4232b1:	out    dx,eax
  4232b2:	shr    dh,cl
  4232b4:	mov    al,0x15
  4232b6:	js     0x4232a5
  4232b8:	mov    bh,0xd3
  4232ba:	jecxz  0x4232f2
  4232bc:	sbb    al,0xe9
  4232be:	mov    cl,0x10
  4232c0:	cmc    
  4232c1:	sbb    cl,dl
  4232c3:	dec    esp
  4232c4:	pop    ss
  4232c5:	loopne 0x42324e
  4232c7:	pop    ebx
  4232c8:	sbb    DWORD PTR [edi],edi
  4232ca:	jae    0x423331
  4232cc:	cdq    
  4232cd:	fucomip st,st(1)
  4232d0:	adc    eax,0x7e248a46
  4232d5:	mov    eax,0x9a2ca4e
  4232da:	or     esp,ecx
  4232dc:	jmp    0x43:0x91b5c62c
  4232e3:	mov    eax,ds:0x4a859247
  4232e8:	cmp    eax,DWORD PTR [edx]
  4232ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232eb:	fnstsw WORD PTR [eax]
  4232ed:	sbb    edx,DWORD PTR [esi-0x4def90]
  4232f3:	sub    DWORD PTR ds:0xbd525bb5,0x38
  4232fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232fb:	scas   eax,DWORD PTR es:[edi]
  4232fc:	ret    
  4232fd:	stc    
  4232fe:	push   edx
  4232ff:	cmp    dh,BYTE PTR [ebx+0x47]
  423302:	mov    cl,0xcf
  423304:	inc    esp
  423305:	pusha  
  423306:	sbb    eax,0xf5fa065d
  42330b:	push   eax
  42330c:	fldcw  WORD PTR [esi]
  42330e:	ins    DWORD PTR es:[edi],dx
  42330f:	ret    0xd1fb
  423312:	les    ebp,FWORD PTR [ebp+0x490441a3]
  423318:	(bad)  
  423319:	lods   eax,DWORD PTR ds:[esi]
  42331a:	dec    ebp
  42331b:	rcl    DWORD PTR [esi],cl
  42331d:	in     eax,0x97
  42331f:	imul   ebx,DWORD PTR [esi],0xe00bfe77
  423325:	fisub  DWORD PTR [edi+0x4cc9c05f]
  42332b:	mov    ah,0xb
  42332d:	popf   
  42332e:	dec    ecx
  42332f:	cmp    DWORD PTR [ebx],esi
  423331:	or     BYTE PTR [ebp+0x6b4bb2e1],dh
  423337:	cmp    BYTE PTR [ebp+ecx*1+0xabac61a],bh
  42333e:	fnstsw WORD PTR [ecx+0x5ab7b2f0]
  423344:	stos   BYTE PTR es:[edi],al
  423345:	dec    esp
  423346:	cld    
  423347:	dec    eax
  423348:	lods   al,BYTE PTR es:[esi]
  42334a:	cmp    dl,bl
  42334c:	mov    eax,0x7e219870
  423351:	shr    BYTE PTR [ecx],0x48
  423354:	sbb    DWORD PTR [eax],edi
  423356:	xchg   esi,eax
  423357:	pop    ebp
  423358:	je     0x42332c
  42335a:	mov    al,0xdb
  42335c:	int    0x8a
  42335e:	popf   
  42335f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423360:	push   cs
  423361:	mov    DWORD PTR [ecx-0x25],ebx
  423364:	in     eax,0x13
  423366:	push   cs
  423367:	int    0xe3
  423369:	sub    edi,esi
  42336b:	mov    ds:0x48e1cd2d,al
  423370:	jg     0x423354
  423372:	sub    eax,DWORD PTR [ebx-0x5a]
  423375:	jg     0x423332
  423377:	dec    ebx
  423378:	pop    es
  423379:	cld    
  42337a:	(bad)  
  42337b:	inc    ebx
  42337c:	sub    al,BYTE PTR [edi+0x41ace313]
  423382:	mov    edi,0xa7ab79a2
  423387:	sbb    BYTE PTR [edi+0x2c],ch
  42338a:	scas   al,BYTE PTR es:[edi]
  42338b:	jo     0x423395
  42338d:	mov    WORD PTR [eax-0x4f],cs
  423390:	dec    DWORD PTR [ebp+0xd]
  423393:	repz in al,0x46
  423396:	jns    0x423328
  423398:	xchg   edx,eax
  423399:	icebp  
  42339a:	cmp    BYTE PTR [ebx+0x2f],0xc3
  42339e:	fs xor al,0x7e
  4233a1:	pushf  
  4233a2:	fisttp WORD PTR [edi]
  4233a4:	fstp   TBYTE PTR [esi+0x3f7d18cc]
  4233aa:	mov    ds:0x7ea0ff9,al
  4233af:	mov    DWORD PTR [eax],esp
  4233b1:	push   edx
  4233b2:	sub    dh,dl
  4233b4:	or     bl,0x1d
  4233b7:	jo     0x423365
  4233b9:	mov    dl,0x60
  4233bb:	sar    DWORD PTR [eax-0x3b16d807],1
  4233c1:	sub    cl,ah
  4233c3:	(bad)  [esi]
  4233c5:	inc    ebp
  4233c6:	(bad)  
  4233c7:	fscale 
  4233c9:	cli    
  4233ca:	dec    eax
  4233cb:	lock loopne 0x423392
  4233ce:	xor    BYTE PTR ds:0xf228e715,bh
  4233d4:	imul   edi,DWORD PTR [edx-0xa],0xffffff9f
  4233d8:	daa    
  4233d9:	int    0x23
  4233db:	out    dx,eax
  4233dc:	fsubrp st(6),st
  4233de:	paddq  mm1,mm1
  4233e1:	(bad)  
  4233e3:	jns    0x423429
  4233e5:	cmp    al,0x49
  4233e7:	lds    ebp,FWORD PTR [esp+edx*4]
  4233ea:	dec    esp
  4233ec:	xor    al,0x64
  4233ee:	pop    ss
  4233ef:	mov    edx,0x1f9106cb
  4233f4:	and    ah,ah
  4233f6:	push   es
  4233f7:	sbb    BYTE PTR [ebp+ecx*2+0x55e5dfec],cl
  4233fe:	adc    bh,ch
  423400:	sub    eax,0xf5595a01
  423405:	sbb    dl,BYTE PTR [ebp-0x24c37a37]
  42340b:	out    dx,eax
  42340c:	out    dx,eax
  42340d:	mov    bh,0x15
  42340f:	cdq    
  423410:	pop    ebx
  423411:	push   es
  423412:	pop    ds
  423413:	inc    esp
  423414:	std    
  423415:	mov    cl,0xe5
  423417:	idiv   DWORD PTR [ebx-0x49]
  42341a:	inc    esi
  42341b:	das    
  42341c:	es push ebp
  42341e:	retf   0x361c
  423421:	add    eax,0x6b8db730
  423426:	inc    ecx
  423427:	arpl   bp,sp
  423429:	xchg   DWORD PTR [ebx-0x6a39c750],esi
  42342f:	mov    ds:0xb51b2f4b,al
  423434:	inc    esp
  423435:	mov    DWORD PTR [esi-0x32f47ab4],edi
  42343b:	mov    eax,0xa48afa7b
  423440:	add    BYTE PTR [ebx+0x4a533cbd],dh
  423446:	xchg   cx,ax
  423448:	push   ebp
  423449:	daa    
  42344a:	sub    al,0xc
  42344c:	mov    al,0xc4
  42344e:	out    0x90,eax
  423450:	sbb    BYTE PTR [ecx+0x37ac8421],cl
  423456:	mov    bl,0x98
  423458:	sar    edi,cl
  42345a:	xor    edx,DWORD PTR [ecx+edi*2]
  42345d:	mov    eax,eax
  42345f:	outs   dx,BYTE PTR ds:[esi]
  423460:	das    
  423461:	cmc    
  423462:	adc    edx,DWORD PTR [ebp-0x414f1f68]
  423468:	shl    DWORD PTR [ebp-0x7d6df37f],cl
  42346e:	outs   dx,DWORD PTR ds:[esi]
  42346f:	or     dh,BYTE PTR [esi+0x29da015f]
  423475:	fs push eax
  423477:	jne    0x423482
  423479:	jo     0x423450
  42347b:	sti    
  42347c:	jmp    0x2652:0xdde60a36
  423483:	pop    ebx
  423484:	push   ds
  423485:	jmp    0x269:0xf92af3f4
  42348c:	sti    
  42348d:	cli    
  42348e:	add    bh,BYTE PTR [edx]
  423490:	fdiv   DWORD PTR [ecx+0x32616e71]
  423496:	mov    al,ds:0x275fe64e
  42349b:	xchg   edx,eax
  42349c:	mov    edx,0x2437c3c6
  4234a1:	js     0x42349d
  4234a3:	(bad)  
  4234a4:	fwait
  4234a5:	int    0x8f
  4234a7:	sti    
  4234a8:	or     BYTE PTR [edx],0x7c
  4234ab:	lods   al,BYTE PTR ds:[esi]
  4234ac:	cmp    BYTE PTR [ebp+0x52],ah
  4234af:	es loop 0x423509
  4234b2:	es jl  0x4234e3
  4234b5:	jmp    0x423528
  4234b7:	test   DWORD PTR [ebx-0x41],esp
  4234ba:	outs   dx,BYTE PTR ds:[esi]
  4234bb:	mov    bl,0x7
  4234bd:	icebp  
  4234be:	and    BYTE PTR [ebx-0xf33e1e5],dl
  4234c4:	popf   
  4234c5:	adc    ch,bh
  4234c7:	inc    ecx
  4234c8:	cmp    edi,DWORD PTR [edx]
  4234ca:	getsec 
  4234cc:	outs   dx,DWORD PTR ds:[esi]
  4234cd:	cmp    ebx,DWORD PTR [ebx]
  4234cf:	int    0xac
  4234d1:	and    DWORD PTR [ebx+edi*8],eax
  4234d4:	sbb    eax,0xa9487b
  4234d9:	xchg   DWORD PTR [ebx],eax
  4234db:	push   ss
  4234dc:	dec    esi
  4234dd:	mov    ecx,DWORD PTR [ecx]
  4234df:	xor    al,0x4
  4234e1:	or     eax,0x94724a4c
  4234e6:	mov    ah,dh
  4234e8:	sbb    dl,BYTE PTR [ecx+0x56]
  4234eb:	inc    ebp
  4234ec:	int    0xae
  4234ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234ef:	ret    0xd59c
  4234f2:	stc    
  4234f3:	or     DWORD PTR [eax-0x4c],edx
  4234f6:	mov    ebp,0xdb73819
  4234fb:	mov    edi,0x2ae86fa2
  423500:	inc    edi
  423501:	pop    ebx
  423502:	jb     0x42348d
  423504:	xor    al,0x75
  423506:	pop    ds
  423507:	test   eax,0x87697ca5
  42350c:	cmp    ebp,DWORD PTR [edx+0x640cfab8]
  423512:	sbb    esi,DWORD PTR ds:0x38afe05b
  423518:	mov    ds:0xabd93666,al
  42351d:	pop    ebp
  42351e:	mov    eax,es
  423520:	ret    0xca78
  423523:	jns    0x42358f
  423525:	push   edi
  423526:	and    DWORD PTR [eax-0x4f],ecx
  423529:	xor    eax,0x66141d83
  42352e:	retf   0x3c2e
  423531:	pushf  
  423532:	cmp    dh,ah
  423534:	rcr    esi,cl
  423536:	and    DWORD PTR [esi-0x398ecf30],edi
  42353c:	inc    edx
  42353d:	test   al,0xf0
  42353f:	outs   dx,DWORD PTR ds:[esi]
  423540:	jo     0x423505
  423542:	and    BYTE PTR [ecx],bh
  423544:	scas   eax,DWORD PTR es:[edi]
  423545:	frstor [edi+edx*4]
  423548:	ss loope 0x4234f0
  42354b:	and    DWORD PTR [eax-0xd8b7e01],edx
  423551:	push   ebx
  423552:	or     DWORD PTR [ecx+0x3f],ebx
  423555:	dec    eax
  423556:	xchg   edi,eax
  423557:	jb     0x423517
  423559:	out    dx,eax
  42355a:	pop    ecx
  42355b:	cdq    
  42355c:	popf   
  42355d:	pop    es
  42355e:	add    eax,DWORD PTR [esi+edi*8-0x732bcdf]
  423565:	mov    esi,0xfab3d4f6
  42356a:	mov    ds:0x66ea3124,eax
  42356f:	sub    dl,BYTE PTR [eax+0x2aa75815]
  423575:	sub    BYTE PTR [edi+0x6a],ch
  423578:	outs   dx,DWORD PTR ds:[esi]
  423579:	dec    edx
  42357a:	or     dl,BYTE PTR [ecx-0x7f]
  42357d:	imul   DWORD PTR [eax]
  42357f:	shr    BYTE PTR [edi+0x9cdb050],1
  423585:	cmp    DWORD PTR [edx-0x7a43bff3],ecx
  42358b:	push   esp
  42358c:	cmp    esi,DWORD PTR ds:0xd314de73
  423592:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423593:	sub    al,0x70
  423595:	pop    esi
  423596:	push   ecx
  423597:	add    BYTE PTR [edi+0x4a],al
  42359a:	push   esp
  42359b:	push   edx
  42359c:	xor    DWORD PTR [edx+eax*2],0x65
  4235a0:	das    
  4235a1:	in     eax,dx
  4235a2:	mov    DWORD PTR [ebp+0x7ace9442],esp
  4235a8:	cli    
  4235a9:	mov    dh,0x2c
  4235ab:	xor    al,0xbe
  4235ad:	in     al,0x78
  4235af:	dec    esp
  4235b0:	cmp    edx,esp
  4235b2:	fstp   DWORD PTR [eax+ebp*8-0xc138b21]
  4235b9:	pop    edx
  4235ba:	push   edi
  4235bb:	mov    esp,0xca337971
  4235c0:	push   edi
  4235c1:	jmp    0x711a:0x43cd4dd4
  4235c8:	fsubr  QWORD PTR [edi]
  4235ca:	and    eax,0xf30d075f
  4235cf:	mov    ah,0x77
  4235d1:	popf   
  4235d2:	push   esi
  4235d3:	mov    edi,0x2f90b97d
  4235d8:	xor    ebx,esi
  4235da:	(bad)  
  4235db:	ins    DWORD PTR es:[edi],dx
  4235dc:	icebp  
  4235dd:	out    0xf1,al
  4235df:	or     DWORD PTR [ecx+0x21],0xffffff85
  4235e3:	cmp    BYTE PTR ds:0xba533c27,0x26
  4235ea:	cmp    BYTE PTR ds:0x2fd93380,0xdf
  4235f1:	or     al,0x8d
  4235f3:	dec    ebx
  4235f4:	mov    cl,ch
  4235f6:	inc    ecx
  4235f7:	add    BYTE PTR [eax+0x30],0x3b
  4235fb:	sbb    al,0xee
  4235fd:	je     0x4235e8
  4235ff:	pop    ebx
  423600:	popf   
  423601:	or     al,0x46
  423603:	or     al,0xb2
  423605:	xor    bh,BYTE PTR [ebp+edi*1+0x27]
  423609:	test   DWORD PTR [ebx],ecx
  42360b:	mov    bh,0x4e
  42360d:	adc    al,0x3a
  42360f:	rol    BYTE PTR [ecx],0xbd
  423612:	xchg   ebp,eax
  423613:	inc    ebx
  423614:	or     BYTE PTR [edx+0x2c],ah
  423617:	pop    ebx
  423618:	gs adc al,0x41
  42361b:	mul    edi
  42361d:	push   ss
  42361e:	int    0x93
  423620:	push   eax
  423621:	xchg   BYTE PTR fs:[edx+0x630f9782],dh
  423628:	cmp    eax,DWORD PTR [ebx+0xf56b9a1]
  42362e:	jmp    0xffdce9b1
  423633:	imul   ecx,DWORD PTR [eax-0x1d09f45e],0xb2606e7c
  42363d:	xchg   edi,eax
  42363e:	das    
  42363f:	add    BYTE PTR [edx+ebx*4],cl
  423642:	shl    DWORD PTR [esi],cl
  423644:	jge    0x4235c6
  423646:	(bad)  
  423647:	push   esp
  423648:	mov    BYTE PTR [edx+0x53d7210f],ch
  42364e:	(bad)  
  42364f:	push   0x40
  423651:	sbb    ch,dl
  423653:	fdivr  DWORD PTR [eax-0x6a17df8b]
  423659:	das    
  42365a:	out    dx,al
  42365b:	out    0x9f,eax
  42365d:	xor    DWORD PTR [edi+0x65ba06fb],ecx
  423663:	pusha  
  423664:	xchg   ebp,eax
  423665:	nop
  423666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423667:	pop    es
  423668:	mov    al,0x9d
  42366a:	fisttp QWORD PTR [ebx+0x30]
  42366d:	mov    edx,0x70face81
  423672:	jbe    0x42369c
  423674:	(bad)  
  423675:	add    BYTE PTR [edx-0x24c20795],dh
  42367b:	push   0xb709710c
  423680:	(bad)  
  423681:	lahf   
  423682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423683:	ss push ecx
  423685:	test   al,0x60
  423687:	push   es
  423688:	sti    
  423689:	int3   
  42368a:	(bad)  [ebx+0x19]
  42368d:	or     BYTE PTR [ebp-0x24],ch
  423690:	cld    
  423691:	push   edx
  423692:	lea    ebx,[edi+0x9]
  423695:	mov    bh,0xf2
  423697:	ss cmc 
  423699:	jno    0x423668
  42369b:	les    edx,FWORD PTR [eax+0x326a2ad7]
  4236a1:	xlat   BYTE PTR ds:[ebx]
  4236a2:	jge    0x4236a7
  4236a4:	adc    DWORD PTR [edx],edi
  4236a6:	xchg   ecx,eax
  4236a7:	or     DWORD PTR [ebx-0x41],ebx
  4236aa:	scas   eax,DWORD PTR es:[edi]
  4236ab:	cmp    ecx,edi
  4236ad:	sar    ah,0x55
  4236b0:	add    eax,0xdd5ff30d
  4236b5:	mov    esi,?
  4236b7:	push   ecx
  4236b8:	int3   
  4236b9:	out    dx,eax
  4236ba:	and    dh,dh
  4236bc:	arpl   WORD PTR [edx],cx
  4236be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236bf:	lods   eax,DWORD PTR ds:[esi]
  4236c0:	pushf  
  4236c1:	cdq    
  4236c2:	ins    DWORD PTR es:[edi],dx
  4236c3:	cmp    al,bh
  4236c5:	and    DWORD PTR [eax],edi
  4236c7:	lods   al,BYTE PTR ds:[esi]
  4236c8:	cmp    al,0x76
  4236ca:	xchg   edx,eax
  4236cb:	shr    BYTE PTR [esi-0x3c],1
  4236ce:	inc    esp
  4236cf:	sbb    cl,BYTE PTR [edi+0x332a2f23]
  4236d5:	arpl   dx,di
  4236d7:	xor    eax,0x87dbf170
  4236dc:	mov    al,ds:0x84bffcfc
  4236e1:	pop    esp
  4236e2:	cs or  edi,ebp
  4236e5:	clc    
  4236e6:	(bad)  
  4236e7:	pop    edx
  4236e8:	stos   BYTE PTR es:[edi],al
  4236e9:	dec    edx
  4236ea:	loop   0x423763
  4236ec:	xor    ebp,DWORD PTR [ecx+ebp*4]
  4236ef:	ds inc ecx
  4236f1:	popf   
  4236f2:	cdq    
  4236f3:	sbb    al,ch
  4236f5:	cwde   
  4236f6:	cmp    dl,BYTE PTR ds:0xb4f38a0f
  4236fc:	ja     0x4236ce
  4236fe:	mov    bl,0xd0
  423700:	xchg   edi,eax
  423701:	dec    ebp
  423702:	mov    dl,0xab
  423704:	adc    eax,0xbb75e75b
  423709:	push   edi
  42370a:	and    DWORD PTR [esi+0xb1739ce],0x850dd6c
  423714:	imul   edx,ecx,0x16817f9e
  42371a:	inc    edx
  42371b:	jae    0x4236b2
  42371d:	(bad)  
  42371e:	loop   0x4236cd
  423720:	add    cl,bh
  423722:	pop    ebp
  423723:	sub    eax,0x5975e04d
  423728:	ror    DWORD PTR [edi+0x1c],cl
  42372b:	fucomip st,st(6)
  42372d:	or     ebx,DWORD PTR [ecx-0x5a]
  423730:	dec    edx
  423731:	pop    esi
  423732:	int    0xa5
  423734:	out    dx,eax
  423735:	dec    eax
  423736:	stc    
  423737:	mov    dh,0xab
  423739:	imul   ebx,DWORD PTR [edx+0x6346ba39],0xe101f960
  423743:	add    al,0xc6
  423745:	scas   al,BYTE PTR es:[edi]
  423746:	out    dx,eax
  423747:	push   edx
  423748:	pop    edx
  423749:	mov    DWORD PTR [eax-0x7d],eax
  42374c:	iret   
  42374d:	test   DWORD PTR [ecx],edi
  42374f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423750:	mov    ah,0x75
  423752:	mov    ds:0xd85d31de,eax
  423757:	or     BYTE PTR ds:0xa3aa9654,al
  42375d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42375e:	adc    BYTE PTR [esi-0x5b718b9a],cl
  423764:	xchg   BYTE PTR [ecx+0x20],dl
  423767:	call   0x79342a7e
  42376c:	mov    ecx,DWORD PTR [ebx]
  42376e:	dec    esp
  42376f:	loopne 0x423758
  423771:	mov    edx,0xfa489e14
  423776:	pusha  
  423777:	popa   
  423778:	addr16 mov ebx,0x450da8f3
  42377e:	mov    bh,BYTE PTR [edi]
  423780:	scas   al,BYTE PTR es:[edi]
  423781:	std    
  423782:	pop    ebx
  423783:	fld    DWORD PTR [ebp+ebx*4+0x4f]
  423787:	and    DWORD PTR [eax+0x50],esp
  42378a:	mov    ds:0x7bb84906,al
  42378f:	mov    ecx,0x88fdd09c
  423794:	push   esp
  423795:	mov    esp,0x16c99c92
  42379a:	xchg   edi,eax
  42379b:	jle    0x423816
  42379d:	cmp    DWORD PTR [esi-0x5b],esi
  4237a0:	ja     0x4237c0
  4237a2:	(bad)  
  4237a3:	dec    esi
  4237a4:	sbb    eax,0xe9ee834b
  4237a9:	adc    eax,DWORD PTR [ecx]
  4237ab:	pop    edx
  4237ac:	jns    0x4237b1
  4237ae:	shl    DWORD PTR [eax+0x1199ec62],1
  4237b4:	mov    BYTE PTR ds:0xac135651,ch
  4237ba:	outs   dx,BYTE PTR ds:[esi]
  4237bb:	lods   eax,DWORD PTR ds:[esi]
  4237bc:	scas   eax,DWORD PTR es:[edi]
  4237bd:	or     DWORD PTR [edx+0x34935c95],0x2ded55d0
  4237c7:	hlt    
  4237c8:	xor    DWORD PTR [esi],ecx
  4237ca:	sbb    al,0x2a
  4237cc:	and    al,0xf2
  4237ce:	mul    BYTE PTR [ebp-0x20907ae7]
  4237d4:	mov    ds:0xb255d6a9,al
  4237d9:	jne    0x423769
  4237db:	outs   dx,BYTE PTR ds:[esi]
  4237dc:	fld    TBYTE PTR [ebx-0x5c0cef67]
  4237e2:	sahf   
  4237e3:	stos   DWORD PTR es:[edi],eax
  4237e4:	(bad)  
  4237e5:	mov    eax,ds:0xe39d29fd
  4237ea:	shr    DWORD PTR [eax],1
  4237ec:	mov    ch,0x22
  4237ee:	or     eax,0xfbf65dd3
  4237f3:	cmp    al,0x1b
  4237f5:	dec    esp
  4237f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237f7:	out    dx,al
  4237f8:	clc    
  4237f9:	sbb    edi,DWORD PTR [edi+eiz*2+0x3f]
  4237fd:	pop    ecx
  4237fe:	pop    edi
  4237ff:	ret    0x1548
  423802:	cmp    ah,BYTE PTR [eax-0x47]
  423805:	push   0x6a
  423807:	mov    ecx,0x487f67bd
  42380c:	retf   0xaccf
  42380f:	jecxz  0x4237b8
  423811:	out    dx,al
  423812:	xor    ebp,edi
  423814:	fild   QWORD PTR [ebx]
  423816:	or     DWORD PTR [eax],edi
  423818:	inc    eax
  423819:	ins    DWORD PTR es:[edi],dx
  42381a:	cmp    BYTE PTR [edx+eiz*4],dl
  42381d:	hlt    
  42381e:	ret    
  42381f:	loopne 0x4237ff
  423821:	pop    eax
  423822:	mov    dl,0x4d
  423824:	dec    ebx
  423825:	fisubr WORD PTR [ebx-0x17]
  423828:	push   esi
  423829:	mov    eax,0xfd4293d1
  42382e:	pop    esp
  42382f:	aad    0x5d
  423831:	loop   0x42386f
  423833:	add    BYTE PTR [edx],bh
  423835:	or     edx,DWORD PTR [esp+esi*1]
  423838:	dec    eax
  423839:	imul   DWORD PTR [ebx+ebx*2-0x41b307cc]
  423840:	sub    al,0xf4
  423842:	xchg   BYTE PTR [edi],al
  423844:	mov    DWORD PTR [ebp+0x178d00c],edi
  42384a:	mov    al,BYTE PTR ds:0xf390512f
  423850:	cmp    DWORD PTR ds:0x44334df3,esp
  423856:	mov    eax,ds:0x5fae4608
  42385b:	or     edx,DWORD PTR [ebx]
  42385d:	pop    ebx
  42385e:	mov    BYTE PTR [eax-0x40],dh
  423861:	stc    
  423862:	fnsave [edx+0x38]
  423865:	daa    
  423866:	mov    ecx,0x7b2546cf
  42386b:	jl     0x4238bc
  42386d:	stos   BYTE PTR es:[edi],al
  42386e:	cld    
  42386f:	xor    ecx,esi
  423871:	or     DWORD PTR [edi],0xfffffffd
  423874:	inc    cx
  423876:	fidiv  DWORD PTR [edi+0x11115c54]
  42387c:	dec    DWORD PTR [esi]
  42387e:	inc    edi
  42387f:	repz retf 0x821f
  423883:	or     al,0x1
  423885:	inc    esi
  423886:	sbb    BYTE PTR [ebx+0x2c],bh
  423889:	jbe    0x423885
  42388b:	or     ebp,edx
  42388d:	push   ebp
  42388e:	or     DWORD PTR [esi-0x3c],0xa5b9aed2
  423895:	pusha  
  423896:	lahf   
  423897:	(bad)  
  423898:	fdivr  st(1),st
  42389a:	push   ebx
  42389b:	mov    edi,0xcaa99461
  4238a0:	push   esi
  4238a1:	xchg   BYTE PTR [edi+0x33b6ab77],al
  4238a7:	add    DWORD PTR [ebp+0x3f676667],0x8e90167e
  4238b1:	and    ch,0xd1
  4238b4:	mov    eax,fs:0xb7807a25
  4238ba:	xchg   esi,eax
  4238bb:	outs   dx,DWORD PTR ds:[esi]
  4238bc:	push   ss
  4238bd:	out    dx,al
  4238be:	loop   0x42386b
  4238c0:	and    eax,DWORD PTR [edi-0x5b]
  4238c3:	push   ebp
  4238c4:	out    0x7e,al
  4238c6:	and    ah,BYTE PTR [edx]
  4238c8:	shr    BYTE PTR [edx],0xed
  4238cb:	fst    QWORD PTR [edx-0x3e11b4c5]
  4238d1:	mov    al,0x54
  4238d3:	cmovl  esp,DWORD PTR [edx]
  4238d6:	mov    dl,0x80
  4238d8:	(bad)  
  4238d9:	(bad)  [ecx+0x33da26ed]
  4238df:	lahf   
  4238e0:	fwait
  4238e1:	pop    edi
  4238e2:	push   edx
  4238e3:	dec    edi
  4238e4:	mov    esp,0x9c11919c
  4238e9:	or     eax,edi
  4238eb:	sbb    dh,BYTE PTR [edx]
  4238ed:	sbb    al,0xb3
  4238ef:	pop    eax
  4238f0:	mov    BYTE PTR [edx],ah
  4238f2:	pop    esi
  4238f3:	stos   BYTE PTR es:[edi],al
  4238f4:	or     DWORD PTR ds:0xc1727113,esp
  4238fa:	(bad)  [edx+0x59]
  4238fd:	sbb    al,0x5a
  4238ff:	(bad)  
  423900:	jns    0x4238ac
  423902:	and    eax,0x730431e8
  423907:	ss (bad) 
  423909:	scas   al,BYTE PTR es:[edi]
  42390a:	outs   dx,BYTE PTR ds:[esi]
  42390b:	push   edi
  42390c:	adc    cl,BYTE PTR [ebp-0x286cff94]
  423912:	dec    esi
  423913:	and    bh,BYTE PTR [esp+ebx*1-0x5f]
  423917:	sbb    eax,0xb135773a
  42391c:	iret   
  42391d:	(bad)  
  42391f:	mov    dh,0xfa
  423921:	fcomp  DWORD PTR [eax-0x5]
  423924:	(bad)  
  423925:	and    DWORD PTR [eax-0x2d],esp
  423928:	loop   0x42397a
  42392a:	pop    ebp
  42392b:	aas    
  42392c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42392d:	stos   DWORD PTR es:[edi],eax
  42392e:	adc    al,0x1
  423930:	adc    DWORD PTR [esi+0x3c223413],ecx
  423936:	or     ebx,DWORD PTR [ebp-0x73]
  423939:	stos   DWORD PTR es:[edi],eax
  42393a:	lods   al,BYTE PTR ds:[esi]
  42393b:	enter  0xc9e6,0x21
  42393f:	inc    esi
  423940:	xor    ah,bl
  423942:	arpl   WORD PTR [edx+0x19902989],dx
  423948:	jmp    0x950a:0x236be40a
  42394f:	mov    BYTE PTR [esi-0x23],al
  423952:	jle    0x423988
  423954:	ja     0x4239b7
  423956:	shl    dl,cl
  423958:	(bad)  
  423959:	adc    DWORD PTR [esi+0xfec0d41],edi
  42395f:	sub    eax,0xfd4ce618
  423964:	jl     0x42395b
  423966:	jmp    0x42395e
  423968:	or     BYTE PTR [esi],bh
  42396a:	pop    eax
  42396b:	leave  
  42396c:	push   ebp
  42396d:	xlat   BYTE PTR ds:[ebx]
  42396e:	pop    ebx
  42396f:	jne    0x4239bc
  423971:	inc    ecx
  423972:	xchg   edx,eax
  423973:	int    0x3
  423975:	ins    BYTE PTR es:[edi],dx
  423976:	aam    0xa6
  423978:	mov    dh,0x1f
  42397a:	xchg   edi,eax
  42397b:	mov    ebp,0x6b403952
  423980:	inc    esi
  423981:	iret   
  423982:	lods   al,BYTE PTR ds:[esi]
  423983:	cmp    eax,DWORD PTR [ebx+0x7b]
  423986:	push   ebp
  423987:	into   
  423988:	sbb    ebx,DWORD PTR [ebx]
  42398a:	sub    dh,BYTE PTR [edi-0x14f7304e]
  423990:	stc    
  423991:	and    eax,0x853e6872
  423996:	fldenv [eax+0x1e364ce4]
  42399c:	push   ecx
  42399d:	sub    esp,DWORD PTR [ecx]
  42399f:	aas    
  4239a0:	je     0x423a12
  4239a2:	popf   
  4239a3:	lahf   
  4239a4:	and    ecx,DWORD PTR [eax]
  4239a6:	cmp    eax,0x2c03b4b4
  4239ab:	popf   
  4239ac:	cmp    eax,0x4dc02df3
  4239b1:	aas    
  4239b2:	dec    ebx
  4239b3:	cwde   
  4239b4:	in     eax,0xf7
  4239b6:	pop    ds
  4239b7:	ins    DWORD PTR es:[edi],dx
  4239b8:	push   edx
  4239b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239ba:	pop    edx
  4239bb:	sbb    DWORD PTR [ecx-0x1ca4507a],edx
  4239c1:	rol    ecx,cl
  4239c3:	(bad)  
  4239c4:	jne    0x423a0d
  4239c6:	lods   al,BYTE PTR ds:[esi]
  4239c7:	(bad)  
  4239c8:	pop    ebx
  4239c9:	std    
  4239ca:	push   ds
  4239cb:	enter  0x32f8,0x45
  4239cf:	gs dec ecx
  4239d1:	xchg   esp,eax
  4239d2:	push   cs
  4239d3:	mov    al,ds:0x16d8fda2
  4239d8:	mov    ebx,ecx
  4239da:	dec    ecx
  4239db:	mov    ss,WORD PTR [ecx-0x6dc15ec9]
  4239e1:	dec    edx
  4239e2:	pop    ds
  4239e3:	into   
  4239e4:	sar    BYTE PTR ds:0xe9b65b17,cl
  4239ea:	mov    gs,WORD PTR [eax-0x67b8cd3f]
  4239f0:	clc    
  4239f1:	stos   BYTE PTR es:[edi],al
  4239f2:	jb     0x423984
  4239f4:	xor    bl,bl
  4239f6:	fistp  WORD PTR [edi+0x3872a336]
  4239fc:	aad    0x3
  4239fe:	ret    0x89c
  423a01:	jae    0x423a35
  423a03:	mov    bl,0x25
  423a05:	ins    DWORD PTR es:[edi],dx
  423a06:	pushf  
  423a07:	xchg   DWORD PTR [esi+0x6f9ed801],ebx
  423a0d:	test   al,0x2d
  423a0f:	aam    0xcb
  423a11:	mov    dl,0x56
  423a13:	add    DWORD PTR [ebx],esi
  423a15:	in     al,dx
  423a16:	jl     0x42399b
  423a18:	lds    edx,FWORD PTR [eax+eax*2+0x5211ce1b]
  423a1f:	cli    
  423a20:	repz inc edx
  423a22:	pop    esi
  423a23:	int3   
  423a24:	repnz mov ds:0xf57ec791,eax
  423a2a:	xor    eax,esi
  423a2c:	jbe    0x4239cc
  423a2e:	mov    esi,0x8d8f65c6
  423a33:	push   eax
  423a34:	xchg   ebx,eax
  423a35:	sar    DWORD PTR [edi],0xd6
  423a38:	inc    edi
  423a39:	or     eax,esi
  423a3b:	sbb    eax,0x6970cc01
  423a40:	mov    ds:0xf69bdb8f,al
  423a45:	loopne 0x423aa5
  423a47:	in     eax,0xca
  423a49:	mov    dh,0x8
  423a4b:	enter  0x288b,0x7c
  423a4f:	xlat   BYTE PTR ds:[ebx]
  423a50:	mov    esi,DWORD PTR [edx+0x10]
  423a53:	ins    DWORD PTR es:[edi],dx
  423a54:	fldenv [edi+ecx*1+0x2982276]
  423a5b:	push   ds
  423a5c:	push   ecx
  423a5d:	std    
  423a5e:	mov    ebx,0xcd623dcc
  423a63:	add    BYTE PTR [esi],ah
  423a65:	nop
  423a66:	stc    
  423a67:	(bad)  [ecx-0x54]
  423a6a:	sbb    al,0x36
  423a6c:	iret   
  423a6d:	adc    BYTE PTR [ebp+0x17],dl
  423a70:	dec    ebp
  423a71:	(bad)  
  423a72:	jmp    0x5f974c9f
  423a77:	jno    0x423a98
  423a79:	shl    BYTE PTR [eax],1
  423a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a7c:	stos   BYTE PTR es:[edi],al
  423a7d:	je     0x423a0e
  423a7f:	or     dh,BYTE PTR [ebp+0x6852ab0f]
  423a85:	and    ebp,DWORD PTR [ecx+edi*1]
  423a88:	icebp  
  423a89:	rcl    BYTE PTR [ebx-0x57],cl
  423a8c:	popa   
  423a8d:	clc    
  423a8e:	in     al,dx
  423a8f:	xor    al,0x49
  423a91:	arpl   WORD PTR ds:0xe69ad353,si
  423a97:	mov    ecx,0xefa51dda
  423a9c:	sub    al,al
  423a9e:	add    ch,BYTE PTR [edi]
  423aa0:	jge    0x423ac1
  423aa2:	lds    edi,FWORD PTR [esp+ebx*2-0x3a]
  423aa6:	ror    dh,cl
  423aa8:	sbb    DWORD PTR [eax+0x40],esp
  423aab:	xor    al,0x53
  423aad:	or     al,0x48
  423aaf:	gs sub edi,eax
  423ab2:	hlt    
  423ab3:	shl    DWORD PTR [edi],1
  423ab5:	xlat   BYTE PTR ds:[ebx]
  423ab6:	neg    BYTE PTR [esi]
  423ab8:	mov    esp,0xc93d6d65
  423abd:	call   0xb7b6:0x1addf104
  423ac4:	jmp    0xd526:0x1a383ed4
  423acb:	dec    esi
  423acc:	jbe    0x423b07
  423ace:	xchg   BYTE PTR [edi+eiz*2-0x2f],dh
  423ad2:	pop    ds
  423ad3:	in     eax,0xf3
  423ad5:	jb     0x423adf
  423ad7:	mov    edi,0x10ead4b8
  423adc:	push   esp
  423add:	push   es
  423ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423adf:	cmp    DWORD PTR [ebx],edi
  423ae1:	xchg   esi,eax
  423ae2:	ins    BYTE PTR es:[edi],dx
  423ae3:	addr16 sbb al,0x4
  423ae6:	fisttp DWORD PTR [ebx+0x15]
  423ae9:	push   esi
  423aea:	mov    al,0x8a
  423aec:	and    ah,BYTE PTR [esi+0x78e76afa]
  423af2:	adc    eax,0xe497f7f3
  423af7:	pop    ecx
  423af8:	das    
  423af9:	stos   DWORD PTR es:[edi],eax
  423afa:	push   0xa3f2db2b
  423aff:	dec    ecx
  423b00:	add    dh,BYTE PTR [ecx+ebp*8-0x35]
  423b04:	popf   
  423b05:	imul   ebp,DWORD PTR [ebp+0x5d],0x3ac4b0bc
  423b0c:	mov    bh,0xa2
  423b0e:	push   eax
  423b0f:	fs loop 0x423b5b
  423b12:	xchg   ebp,eax
  423b13:	mov    al,0x2
  423b15:	test   DWORD PTR [eax],ebx
  423b17:	sbb    al,0x6a
  423b19:	push   0xffffffed
  423b1b:	out    dx,eax
  423b1c:	mul    DWORD PTR [esi+ebx*1+0x663e7400]
  423b23:	retf   
  423b24:	inc    ebx
  423b25:	jne    0x423b6d
  423b27:	sbb    al,0xdc
  423b29:	jmp    esi
  423b2b:	je     0x423af8
  423b2d:	xchg   edi,eax
  423b2e:	loopne 0x423b40
  423b30:	rcl    DWORD PTR [eax],1
  423b32:	clc    
  423b33:	xchg   ebx,eax
  423b34:	cmp    bh,ah
  423b36:	lock in al,0xfc
  423b39:	or     dl,BYTE PTR [ecx-0x45]
  423b3c:	int    0xe4
  423b3e:	push   edx
  423b3f:	mov    edx,0x3b3dc4b1
  423b44:	pop    ecx
  423b45:	push   ebp
  423b46:	push   edi
  423b47:	ss push 0xffffffed
  423b4a:	test   eax,0xb4663a1d
  423b4f:	lods   eax,DWORD PTR ds:[esi]
  423b50:	ja     0x423b54
  423b52:	jne    0x423b1b
  423b54:	adc    cl,bh
  423b56:	shl    BYTE PTR [esi+0x1ff225a0],cl
  423b5c:	cmp    al,bh
  423b5e:	or     eax,0x4d2dd960
  423b63:	pop    ebp
  423b64:	dec    esp
  423b65:	mov    bl,0xca
  423b67:	lods   al,BYTE PTR ds:[esi]
  423b68:	mov    ch,0xe
  423b6a:	sbb    BYTE PTR [ecx-0x2a],ch
  423b6d:	push   ebx
  423b6e:	jno    0x423b0b
  423b70:	xchg   edi,eax
  423b71:	addr16 push edi
  423b73:	pushf  
  423b74:	ss cs sti 
  423b77:	je     0x423b0d
  423b79:	ret    0xf753
  423b7c:	mov    dh,0x46
  423b7e:	ror    BYTE PTR [esi-0x5b],0x4b
  423b82:	adc    edx,esi
  423b84:	sbb    eax,0xc8174fca
  423b89:	(bad)  
  423b8a:	pop    ecx
  423b8b:	mov    dl,0x4a
  423b8d:	outs   dx,BYTE PTR ds:[esi]
  423b8e:	test   BYTE PTR [ebp+0x2703d59b],dl
  423b94:	dec    ebx
  423b95:	cmc    
  423b96:	adc    al,0xfa
  423b98:	pop    ecx
  423b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b9a:	push   ebp
  423b9b:	repz cmc 
  423b9d:	or     DWORD PTR [esi-0x76],ebp
  423ba0:	(bad)  
  423ba1:	pop    edi
  423ba2:	or     BYTE PTR [eax],ah
  423ba4:	xchg   edx,eax
  423ba5:	adc    eax,ebp
  423ba7:	jmp    0x423c23
  423ba9:	inc    ebp
  423baa:	iret   
  423bab:	call   0xff60e9ad
  423bb0:	mov    ds,WORD PTR [edi]
  423bb2:	pop    ss
  423bb3:	and    ebp,DWORD PTR [esi-0x72]
  423bb6:	jecxz  0x423be0
  423bb8:	test   ah,cl
  423bba:	mov    BYTE PTR [ebx+esi*1-0x17],cl
  423bbe:	inc    esp
  423bbf:	mov    esi,0x946010e9
  423bc4:	adc    esp,DWORD PTR [eax]
  423bc6:	ja     0x423c3b
  423bc8:	mov    dh,0x46
  423bca:	sar    esp,0xab
  423bcd:	shr    BYTE PTR [ebp-0x29],1
  423bd0:	jmp    0xa2c8:0x3b8e592b
  423bd7:	add    dl,al
  423bd9:	jmp    0xd592:0xa86c0331
  423be0:	jno    0x423bea
  423be2:	mov    esi,0x31084ac0
  423be7:	pop    es
  423be8:	cmc    
  423be9:	push   0xba8f1ded
  423bee:	iret   
  423bef:	or     edx,ebx
  423bf1:	jbe    0x423c2d
  423bf3:	in     eax,dx
  423bf4:	bound  ecx,QWORD PTR [eax-0x408fe224]
  423bfa:	adc    al,BYTE PTR [edi]
  423bfc:	(bad)  
  423bfd:	aad    0x84
  423bff:	fist   WORD PTR [ecx-0x48]
  423c02:	shl    DWORD PTR [ebx+0x27],cl
  423c05:	sub    al,0x40
  423c07:	retf   0x7602
  423c0a:	xchg   esi,eax
  423c0b:	(bad)  
  423c0c:	ins    BYTE PTR es:[edi],dx
  423c0d:	ins    DWORD PTR es:[edi],dx
  423c0e:	sub    al,0x42
  423c10:	dec    edx
  423c11:	cmp    DWORD PTR [edx+edx*1+0x56045928],ebx
  423c18:	pop    edi
  423c19:	in     eax,0xac
  423c1b:	adc    DWORD PTR [edx+0x5d],edi
  423c1e:	and    cl,cl
  423c20:	sub    BYTE PTR [eax],cl
  423c22:	push   0xffffffbd
  423c24:	(bad)  
  423c25:	push   eax
  423c26:	xchg   ebp,eax
  423c27:	scas   al,BYTE PTR es:[edi]
  423c28:	mov    ds:0xa03aab72,eax
  423c2d:	js     0x423ca5
  423c2f:	mov    ds:0x30ceffa2,al
  423c34:	add    BYTE PTR [esi-0x5d45c019],dl
  423c3a:	jp     0x423bc3
  423c3c:	xchg   edi,eax
  423c3d:	adc    BYTE PTR [ebp+0x10],al
  423c40:	pop    es
  423c41:	adc    bh,ch
  423c43:	fucomp st(4)
  423c45:	popf   
  423c46:	jne    0x423c2f
  423c48:	adc    al,0x86
  423c4a:	mov    ch,0xc5
  423c4c:	inc    esi
  423c4d:	ret    0xcf9e
  423c50:	push   esp
  423c51:	fild   WORD PTR [edx+0x45]
  423c54:	mov    al,0x25
  423c56:	cmc    
  423c57:	xor    BYTE PTR [ebp+0x22],bl
  423c5a:	(bad)  
  423c5b:	mov    ebx,0xea568ad5
  423c60:	cmp    BYTE PTR ds:0xc474ef06,bl
  423c66:	xchg   ebx,eax
  423c67:	dec    esp
  423c68:	inc    edx
  423c69:	cmp    ebp,ebx
  423c6b:	out    dx,eax
  423c6c:	popa   
  423c6d:	inc    ebp
  423c6e:	out    0x51,al
  423c70:	ds stos DWORD PTR es:[edi],eax
  423c72:	xor    ah,ch
  423c74:	fcomp  st(1)
  423c77:	add    ebp,esp
  423c79:	push   cs
  423c7a:	(bad)  
  423c7b:	xchg   ebx,eax
  423c7c:	xor    DWORD PTR [ecx],eax
  423c7e:	repnz outs dx,BYTE PTR ds:[esi]
  423c80:	jns    0x423ca8
  423c82:	add    DWORD PTR [ebp+0xc],0x4774de6b
  423c89:	or     DWORD PTR [eax-0x26],0x7948e5f8
  423c90:	fst    DWORD PTR [edi+0x10c64d56]
  423c96:	push   esi
  423c97:	or     eax,0xf53d60c5
  423c9c:	mov    esi,ss
  423c9e:	inc    ebx
  423c9f:	mov    ah,0x28
  423ca1:	dec    edx
  423ca2:	js     0x423cd9
  423ca4:	cmp    BYTE PTR [ebx+0x3f1d573e],0xd5
  423cab:	mov    edi,0x147eeb7b
  423cb0:	mov    edi,0x7f0e6b9c
  423cb5:	sbb    DWORD PTR [ebx-0x4f84617b],0xc
  423cbc:	mov    BYTE PTR [eiz*1+0x7a1d927e],ah
  423cc3:	jl     0x423d2e
  423cc5:	enter  0x9da6,0x7f
  423cc9:	int3   
  423cca:	and    ch,BYTE PTR [edi]
  423ccc:	int3   
  423ccd:	sub    al,0x38
  423ccf:	pop    ds
  423cd0:	int    0x4c
  423cd2:	loopne 0x423cba
  423cd4:	and    ecx,ebp
  423cd6:	xor    al,0x87
  423cd8:	pop    ss
  423cd9:	pop    eax
  423cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cdb:	or     edi,ecx
  423cdd:	xor    DWORD PTR [esp+eiz*8+0x47],ebp
  423ce1:	mov    bl,0x55
  423ce3:	test   cl,bl
  423ce5:	xchg   edi,eax
  423ce6:	dec    edi
  423ce7:	data16 loope 0x423cc0
  423cea:	enter  0xd8c4,0xba
  423cee:	sub    eax,0xa39a9176
  423cf3:	sbb    DWORD PTR [ebx+0x60],esp
  423cf6:	xor    DWORD PTR [edx+esi*4-0x6b],edx
  423cfa:	xor    BYTE PTR [esi+ecx*4+0x1b],ah
  423cfe:	aas    
  423cff:	arpl   WORD PTR [esi],ax
  423d01:	ins    DWORD PTR es:[edi],dx
  423d02:	mov    BYTE PTR gs:[edx+0x1906a9f2],ch
  423d09:	pop    esp
  423d0a:	shl    edi,0xee
  423d0d:	push   0x72
  423d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d10:	test   DWORD PTR [eax],0xa3447303
  423d16:	dec    ecx
  423d17:	adc    ecx,DWORD PTR [edx-0x8]
  423d1a:	sahf   
  423d1b:	das    
  423d1c:	cmp    BYTE PTR [ecx],bh
  423d1e:	xchg   BYTE PTR [ecx-0x43956cdc],cl
  423d24:	xor    eax,0xb59a46eb
  423d29:	std    
  423d2a:	sbb    cl,BYTE PTR [eax]
  423d2c:	push   esi
  423d2d:	adc    al,0x6e
  423d2f:	es into 
  423d31:	jbe    0x423d51
  423d33:	jp     0x423daa
  423d35:	jns    0x423d61
  423d37:	xor    DWORD PTR [eax],ecx
  423d39:	cmp    ebx,DWORD PTR [ebx+0x7e]
  423d3c:	or     BYTE PTR [ebx],dl
  423d3e:	mov    cx,0x1dcd
  423d42:	repz jp 0x423d16
  423d45:	mov    dl,0x12
  423d47:	mov    bl,0x1d
  423d49:	stos   BYTE PTR es:[edi],al
  423d4a:	mov    edi,0x319d7f68
  423d4f:	outs   dx,DWORD PTR ds:[esi]
  423d50:	lds    eax,FWORD PTR [ebx]
  423d52:	mov    ebp,0xdf884814
  423d57:	loopne 0x423d84
  423d59:	(bad)  
  423d5a:	or     BYTE PTR [ecx+0x5d],al
  423d5d:	inc    edi
  423d5e:	cmp    eax,0xa635e281
  423d63:	push   ss
  423d64:	scas   al,BYTE PTR es:[edi]
  423d65:	add    BYTE PTR [ebx+0x26b3b152],0x83
  423d6c:	mov    WORD PTR [eax+0x62e44e4d],?
  423d72:	call   0x7b8d6fdb
  423d77:	repnz inc ebx
  423d79:	hlt    
  423d7a:	(bad)  
  423d7b:	in     al,0xa7
  423d7d:	sahf   
  423d7e:	fwait
  423d7f:	adc    edi,DWORD PTR [ebx-0x4322ff75]
  423d85:	cmp    BYTE PTR [eax],0xab
  423d88:	add    al,0xf
  423d8a:	ror    DWORD PTR [edx+edx*4-0x58],cl
  423d8e:	xchg   edx,eax
  423d8f:	mov    ecx,0xb4799879
  423d94:	call   0xd70277b8
  423d99:	dec    ecx
  423d9a:	repnz add BYTE PTR [ecx-0x59],ch
  423d9e:	(bad)  
  423d9f:	das    
  423da0:	fs mov bl,dh
  423da3:	repnz mov al,0x4
  423da6:	in     eax,0x63
  423da8:	lea    edi,[edx-0x7f]
  423dab:	pop    edi
  423dac:	inc    ebp
  423dad:	in     al,0xb4
  423daf:	clc    
  423db0:	mov    eax,0xdd816133
  423db5:	out    0xd2,eax
  423db7:	int    0x0
  423db9:	inc    esp
  423dba:	int3   
  423dbb:	push   esp
  423dbc:	jl     0x423d64
  423dbe:	fldenv [edi]
  423dc0:	push   eax
  423dc1:	call   0xc8:0x867966ca
  423dc8:	lahf   
  423dc9:	or     eax,0xb635157b
  423dce:	xchg   esp,eax
  423dcf:	int    0x5b
  423dd1:	xor    edi,eax
  423dd3:	aas    
  423dd4:	daa    
  423dd5:	dec    ebp
  423dd6:	leave  
  423dd7:	inc    esp
  423dd8:	dec    esi
  423dd9:	(bad)  
  423ddc:	pop    edi
  423ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dde:	pop    ss
  423ddf:	jge    0x423d94
  423de1:	in     al,dx
  423de2:	sub    eax,0xb2fe43fd
  423de7:	jnp    0x423e65
  423de9:	stc    
  423dea:	into   
  423deb:	mov    edi,0x45745aac
  423df0:	fldcw  WORD PTR [esi+edi*8]
  423df3:	mov    ebx,0xa9fb08d0
  423df8:	sub    eax,0x752e34d5
  423dfd:	mov    ecx,DWORD PTR [esi-0x69693f60]
  423e03:	xor    eax,0x3e958377
  423e08:	push   edi
  423e09:	ret    
  423e0a:	push   cs
  423e0b:	outs   dx,DWORD PTR ds:[esi]
  423e0c:	dec    edx
  423e0d:	sub    DWORD PTR [edi+0x7e],edx
  423e10:	sbb    al,0xb9
  423e12:	in     al,dx
  423e13:	lods   al,BYTE PTR ds:[esi]
  423e14:	xchg   ebx,eax
  423e15:	push   ebx
  423e16:	xchg   edi,eax
  423e17:	mov    dh,0x32
  423e19:	jl     0x423dd4
  423e1b:	rol    BYTE PTR [ebx+ecx*2+0x4da2222d],1
  423e22:	dec    esi
  423e23:	pop    ecx
  423e24:	fild   DWORD PTR [edx-0x3e]
  423e27:	or     ecx,eax
  423e29:	sub    cl,al
  423e2b:	push   esi
  423e2c:	mov    cl,0xc3
  423e2e:	push   ebp
  423e2f:	xor    BYTE PTR [eax-0x38],cl
  423e32:	int3   
  423e33:	pop    ebx
  423e34:	and    ah,BYTE PTR [eax+0xe5f1721]
  423e3a:	ins    DWORD PTR es:[edi],dx
  423e3b:	adc    al,0x66
  423e3d:	repnz pop ss
  423e3f:	fwait
  423e40:	mov    edi,0x89cf7ed6
  423e45:	xor    edx,DWORD PTR [esi+0x165ef474]
  423e4b:	icebp  
  423e4c:	mov    edx,0x17e44115
  423e51:	popf   
  423e52:	enter  0xb293,0x88
  423e56:	push   0x75
  423e58:	inc    edx
  423e59:	in     eax,0x31
  423e5b:	fld    TBYTE PTR [ebx-0x7922d90f]
  423e61:	mov    esp,0xd5e50f9
  423e66:	xchg   edi,eax
  423e67:	jb     0x423e17
  423e69:	and    al,0x48
  423e6b:	aas    
  423e6c:	sbb    dl,bl
  423e6e:	sbb    BYTE PTR [ebx],bh
  423e70:	mov    ah,0x1e
  423e72:	xchg   ebp,eax
  423e73:	cmc    
  423e74:	adc    esp,ecx
  423e76:	cmp    ebp,DWORD PTR [ebx+edx*4-0x71405247]
  423e7d:	cld    
  423e7e:	fwait
  423e7f:	retf   0x4cc2
  423e82:	pop    esp
  423e83:	rcl    esi,1
  423e85:	xor    eax,0xc52604a3
  423e8a:	aad    0x15
  423e8c:	mov    esi,0x825ab2dc
  423e91:	ins    BYTE PTR es:[edi],dx
  423e92:	pop    eax
  423e93:	out    dx,al
  423e94:	es sti 
  423e96:	leave  
  423e97:	cmp    ah,BYTE PTR [ecx+0x25]
  423e9a:	ins    BYTE PTR es:[edi],dx
  423e9b:	pop    ecx
  423e9c:	mov    dl,0x4b
  423e9e:	sbb    al,0x39
  423ea0:	jmp    0x3f5b:0x32ee835a
  423ea7:	mov    esp,0xdfbeed98
  423eac:	daa    
  423ead:	adc    bl,BYTE PTR [ebx-0x5]
  423eb0:	mov    ds:0x1cbde40f,al
  423eb5:	and    DWORD PTR [eax-0xfbb80b5],ebx
  423ebb:	jmp    FWORD PTR [esi+0x1c]
  423ebe:	add    BYTE PTR [eax+0x7b],ah
  423ec1:	mov    ebx,0xed95ac53
  423ec6:	jle    0x423e8e
  423ec8:	sub    DWORD PTR [edi],esi
  423eca:	or     DWORD PTR ds:0xcfe96b61,ebp
  423ed0:	and    al,0x34
  423ed2:	ds sbb ch,bh
  423ed5:	mov    esp,ecx
  423ed7:	mov    bl,0xa2
  423ed9:	push   es
  423eda:	sbb    DWORD PTR [edx-0x61],edx
  423edd:	call   0x3fbe:0xb4c9c6e6
  423ee4:	mov    ?,WORD PTR [ebp+0x1e5294f1]
  423eea:	nop
  423eeb:	stos   BYTE PTR es:[edi],al
  423eec:	adc    esi,edx
  423eee:	xchg   ebx,eax
  423eef:	inc    edi
  423ef0:	jle    0x423f6f
  423ef2:	sub    BYTE PTR [ecx],al
  423ef4:	into   
  423ef5:	mov    ebx,0x106aeb04
  423efa:	jae    0x423f29
  423efc:	dec    edi
  423efd:	shl    BYTE PTR [ecx],1
  423eff:	mov    cl,0xb6
  423f01:	repz jb 0x423ee1
  423f04:	fs push ebx
  423f06:	lods   eax,DWORD PTR ds:[esi]
  423f07:	or     eax,0x40912a25
  423f0c:	xchg   esi,eax
  423f0d:	sub    DWORD PTR [esi-0x11],edx
  423f10:	mov    bl,0xdc
  423f12:	xor    eax,0xcd3bbc04
  423f17:	mov    dl,0x7
  423f19:	adc    eax,0x34a96d4a
  423f1e:	or     al,0xc6
  423f20:	and    DWORD PTR [ebp-0x18],0xc8c28df
  423f27:	push   cs
  423f28:	jl     0x423f41
  423f2a:	mov    al,ds:0x51da631e
  423f2f:	inc    edi
  423f30:	mov    cl,0x95
  423f32:	xor    BYTE PTR [ebx+0x654481ba],dh
  423f38:	les    eax,FWORD PTR [esp+edi*4]
  423f3b:	hlt    
  423f3c:	jecxz  0x423f92
  423f3e:	dec    edi
  423f3f:	sahf   
  423f40:	dec    eax
  423f41:	in     eax,0x24
  423f43:	mov    DWORD PTR [esi],edi
  423f45:	retf   
  423f46:	gs jae 0x423faf
  423f49:	ror    BYTE PTR [edi-0x1b],0x3d
  423f4d:	mov    esp,0x214fae04
  423f52:	or     eax,0x591803f
  423f57:	sbb    eax,DWORD PTR [esi]
  423f59:	sti    
  423f5a:	sub    al,0xda
  423f5c:	sbb    eax,0x6b7ec48d
  423f61:	call   0x955281a1
  423f66:	add    al,0x6e
  423f68:	adc    dl,ch
  423f6a:	mov    bh,0x12
  423f6c:	mov    cl,0xf2
  423f6e:	repz and esi,DWORD PTR ds:0x29a62766
  423f75:	cwde   
  423f76:	mov    ds:0x6c389de4,al
  423f7b:	add    ch,BYTE PTR [ebx+ecx*2-0x5d]
  423f7f:	xchg   esp,eax
  423f80:	xchg   BYTE PTR [ebx+0x12beaa25],al
  423f86:	dec    ebp
  423f87:	out    dx,eax
  423f88:	icebp  
  423f89:	xor    di,WORD PTR [esi]
  423f8c:	daa    
  423f8d:	ret    
  423f8e:	mov    cl,0x6f
  423f90:	sub    eax,0xab9a769d
  423f95:	call   0x8733:0xc2cb30d3
  423f9c:	fadd   st(0),st
  423f9e:	js     0x423f6d
  423fa0:	jb     0x423f4e
  423fa2:	jmp    0x423fc4
  423fa4:	in     eax,dx
  423fa5:	sub    eax,0xf16d9bd5
  423faa:	cmp    eax,ecx
  423fac:	xchg   edi,eax
  423fad:	fstp   DWORD PTR [edi]
  423faf:	daa    
  423fb0:	in     eax,dx
  423fb1:	imul   esp,DWORD PTR [eax+0x47f68cfc],0x5ff19741
  423fbb:	pusha  
  423fbc:	aaa    
  423fbd:	je     0x423f9f
  423fbf:	rcl    eax,0xb9
  423fc2:	cmp    bh,BYTE PTR [edi-0x7]
  423fc5:	test   BYTE PTR [eax-0x6662bd],0x3f
  423fcc:	mov    edx,0x45ed2bd0
  423fd1:	ds and eax,0x9605b4a0
  423fd7:	xchg   edi,eax
  423fd8:	and    DWORD PTR [ebx],esi
  423fda:	mov    esp,0x86bfc00a
  423fdf:	sbb    al,0xde
  423fe1:	inc    ebp
  423fe2:	into   
  423fe3:	inc    esi
  423fe4:	loopne 0x423fed
  423fe6:	xor    ecx,DWORD PTR [ebx]
  423fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fe9:	fwait
  423fea:	cwde   
  423feb:	mov    esi,0x1fef5f3e
  423ff0:	mov    esi,0x2632e859
  423ff5:	stos   BYTE PTR es:[edi],al
  423ff6:	test   eax,0x85d75e20
  423ffb:	shr    ah,1
  423ffd:	xor    al,0x22
  423fff:	cwde   
  424000:	push   ds
  424001:	repz cmp ebx,edi
  424004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424005:	(bad)  
  424006:	xor    esi,DWORD PTR [edx]
  424008:	xchg   ebp,eax
  424009:	loopne 0x423f8c
  42400b:	jo     0x423fbd
  42400d:	dec    ebx
  42400e:	adc    eax,0x3690efe1
  424013:	lds    edx,FWORD PTR [esi+0x1eeb855c]
  424019:	mov    ecx,0x27e74dee
  42401e:	xchg   esi,eax
  42401f:	add    dh,BYTE PTR [edi-0x4f]
  424022:	mov    dh,BYTE PTR [edx]
  424024:	cmp    edx,edx
  424026:	test   DWORD PTR [ebx+0x7b898b88],ecx
  42402c:	mov    al,0x96
  42402e:	test   DWORD PTR [eax-0x61dda330],0x757d9918
  424038:	outs   dx,BYTE PTR ds:[esi]
  424039:	outs   dx,DWORD PTR ds:[esi]
  42403a:	fucom  st(3)
  42403c:	sub    DWORD PTR [edx+0x55],0xfffffff7
  424040:	mov    esi,0xf766c646
  424045:	lahf   
  424046:	dec    ecx
  424047:	mov    ebp,0x5a430b28
  42404c:	data16 jg 0x42409e
  42404f:	fisttp WORD PTR [esi-0x5ce898d5]
  424055:	std    
  424056:	add    al,0x3f
  424058:	cld    
  424059:	scas   al,BYTE PTR es:[edi]
  42405a:	aas    
  42405b:	jne    0x424069
  42405d:	pop    ds
  42405e:	in     eax,dx
  42405f:	gs stos DWORD PTR es:[edi],eax
  424061:	xor    esp,DWORD PTR [esi+0x1e9e925b]
  424067:	or     al,0xe3
  424069:	pop    ecx
  42406a:	or     DWORD PTR [eax+0x1e3b15f4],edi
  424070:	cmp    bl,BYTE PTR [esi+0x6829056]
  424076:	pop    ecx
  424077:	add    BYTE PTR [edx+0x5e85911d],bl
  42407d:	fisub  DWORD PTR [esi]
  42407f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424080:	clc    
  424081:	in     al,0x63
  424083:	mov    al,ds:0x2430df29
  424088:	fs pop edi
  42408a:	xor    ebp,esp
  42408c:	pushf  
  42408d:	sbb    DWORD PTR [eax-0x6],0xc51e0008
  424094:	inc    esi
  424095:	jnp    0x42408a
  424097:	jl     0x424061
  424099:	outs   dx,BYTE PTR ds:[esi]
  42409a:	xor    eax,0x22371baa
  42409f:	outs   dx,DWORD PTR ds:[esi]
  4240a0:	mov    DWORD PTR [eax-0x29],edi
  4240a3:	jns    0x4240a3
  4240a5:	je     0x424104
  4240a7:	adc    DWORD PTR [edx+0x50],esi
  4240aa:	popf   
  4240ab:	sub    eax,0xf4dedd1f
  4240b0:	call   0xeb0c8dd7
  4240b5:	push   es
  4240b6:	or     bh,bh
  4240b8:	gs jl  0x42409a
  4240bb:	push   cs
  4240bc:	pop    esp
  4240bd:	shl    BYTE PTR [edx+ebp*8],0x23
  4240c1:	adc    al,0xf0
  4240c3:	mov    eax,ds:0xe6f5a29
  4240c8:	sub    al,0xa
  4240ca:	cdq    
  4240cb:	mov    ebp,0xf9acf87
  4240d0:	repz xchg edi,eax
  4240d2:	js     0x42408f
  4240d4:	jmp    0x7742:0x942579b5
  4240db:	xor    BYTE PTR [ecx],bl
  4240dd:	jb     0x424075
  4240df:	push   esi
  4240e0:	push   ecx
  4240e1:	loopne 0x4240ed
  4240e3:	nop
  4240e4:	push   cs
  4240e5:	dec    esp
  4240e6:	inc    esp
  4240e7:	into   
  4240e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240e9:	mov    ch,BYTE PTR [ebx]
  4240eb:	jns    0x424092
  4240ed:	jb     0x424095
  4240ef:	fidiv  WORD PTR [edx-0x75]
  4240f2:	or     ch,BYTE PTR [ebp-0x6167740d]
  4240f8:	pop    es
  4240f9:	adc    bh,dl
  4240fb:	retf   0xddf1
  4240fe:	int    0x58
  424100:	fadd   st(4),st
  424102:	xor    dl,dh
  424104:	xchg   DWORD PTR [ebx+0x4f101bc6],esp
  42410a:	mov    ch,0xc0
  42410c:	pop    esp
  42410d:	dec    esi
  42410e:	xchg   edi,eax
  42410f:	mov    ecx,0x37b62e75
  424114:	pop    esp
  424115:	rol    edx,1
  424117:	dec    edx
  424118:	push   esp
  424119:	pusha  
  42411a:	ficomp DWORD PTR [eax-0x8]
  42411d:	cmp    al,0x21
  42411f:	jl     0x4240f2
  424121:	jo     0x424151
  424123:	pop    edx
  424124:	mov    edi,0x2bc2c263
  424129:	mov    esp,0x132477a9
  42412e:	push   esp
  42412f:	fstp   QWORD PTR [esi]
  424131:	out    dx,eax
  424132:	fisttp WORD PTR [ebx-0x3277bf31]
  424138:	or     BYTE PTR [eax+0x6e],ch
  42413b:	sub    al,0x5a
  42413d:	jmp    0x424106
  42413f:	ret    0xcfcd
  424142:	pop    ebp
  424143:	(bad)  
  424144:	jmp    0x4240fe
  424146:	mov    ds:0x5bf89c85,al
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a727
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a72f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a733
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429fdf
  4242e2:	mov    ecx,DWORD PTR ds:0x429fe7
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a737
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429fcb
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	stos   BYTE PTR es:[edi],al
  424455:	lock dec edx
  424457:	je     0x4243f2
  424459:	loopne 0x4244a6
  42445b:	dec    ecx
  42445c:	scas   al,BYTE PTR es:[edi]
  42445d:	mov    ecx,DWORD PTR [edx+0x7ca30534]
  424463:	hlt    
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
