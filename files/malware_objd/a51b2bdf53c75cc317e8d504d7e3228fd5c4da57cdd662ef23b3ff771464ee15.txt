
a51b2bdf53c75cc317e8d504d7e3228fd5c4da57cdd662ef23b3ff771464ee15.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c56
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d62
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237e2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238a9
  4012ea:	push   0x42392d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	mov    edi,0x6251d0d6
  401442:	bound  esp,QWORD PTR [edx+0x62]
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ecx
  401453:	jne    0x40149a
  401455:	(bad)  
  401456:	or     BYTE PTR [edx+0x42],dh
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	xor    ecx,esp
  401506:	pop    esi
  401507:	push   ds
  401508:	push   0x2428b769
  40150d:	retf   0xa39a
  401510:	add    DWORD PTR [ecx+0x66],ecx
  401513:	adc    al,0x93
  401515:	xor    bh,dl
  401517:	xchg   ecx,eax
  401518:	imul   esp,DWORD PTR [eax],0xcbd00cc0
  40151e:	outs   dx,DWORD PTR ds:[esi]
  40151f:	mov    eax,es:0xd10f14e4
  401525:	cdq    
  401526:	mov    es,esp
  401528:	js     0x401562
  40152a:	ds aad 0x8
  40152d:	sub    BYTE PTR [ebp+edi*8+0x688f3c23],al
  401534:	xor    eax,0x8688f8e7
  401539:	add    BYTE PTR [ebx],0xf9
  40153c:	dec    edx
  40153d:	jmp    0xfbfa60d9
  401542:	out    dx,eax
  401543:	cwde   
  401544:	adc    dh,BYTE PTR [ecx+0x6a]
  401547:	pop    ss
  401548:	je     0x4014e1
  40154a:	mov    DWORD PTR [edi],ebx
  40154c:	sbb    eax,0xa8cf0457
  401551:	(bad)  
  401553:	push   ds
  401554:	xlat   BYTE PTR ds:[ebx]
  401555:	push   0x6f4693e9
  40155a:	in     eax,dx
  40155b:	pushf  
  40155c:	dec    eax
  40155d:	imul   edi,DWORD PTR [edx+0xe],0xb3ea7a3
  401564:	pop    esi
  401565:	xor    DWORD PTR [esi-0xed28502],edi
  40156b:	fisubr DWORD PTR [edx+0x4c887945]
  401571:	cmp    al,cl
  401573:	mov    al,0x79
  401575:	pusha  
  401576:	or     ch,BYTE PTR [ebx-0x5]
  401579:	in     al,dx
  40157a:	dec    eax
  40157b:	add    eax,0x62fc148b
  401580:	ss jne 0x4015a4
  401583:	xor    eax,0xab8b0574
  401588:	out    0x45,eax
  40158a:	retf   
  40158b:	dec    edx
  40158c:	cli    
  40158d:	not    edx
  40158f:	loop   0x4015d7
  401591:	loopne 0x4015e4
  401593:	dec    ecx
  401594:	add    esp,DWORD PTR [ebp-0xc]
  401597:	jae    0x40160d
  401599:	arpl   si,bx
  40159b:	mov    dl,0x1e
  40159d:	sub    eax,0x35f8f25
  4015a2:	aam    0xac
  4015a4:	adc    BYTE PTR [ebp-0x55a3d0a6],0x22
  4015ab:	jnp    0x40157a
  4015ad:	ret    0xd7ae
  4015b0:	or     bh,BYTE PTR [esi+esi*2+0x35aa581c]
  4015b7:	sbb    BYTE PTR [ecx],al
  4015b9:	xor    DWORD PTR [esi+0x5a],esp
  4015bc:	js     0x401628
  4015be:	outs   dx,DWORD PTR ds:[esi]
  4015bf:	outs   dx,DWORD PTR ds:[esi]
  4015c0:	and    BYTE PTR [ecx+ebx*2],al
  4015c3:	xchg   DWORD PTR [edx+0xa7c51f5],ecx
  4015c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015ca:	popa   
  4015cb:	scas   eax,DWORD PTR es:[edi]
  4015cc:	jg     0x401581
  4015ce:	sub    edi,DWORD PTR [eax-0x5af44abc]
  4015d4:	shl    DWORD PTR [ebx-0x259301a1],cl
  4015da:	xchg   BYTE PTR [ebp+0x34c815dd],ch
  4015e0:	push   esp
  4015e1:	int    0x9c
  4015e3:	dec    edx
  4015e4:	iret   
  4015e5:	inc    ecx
  4015e6:	adc    DWORD PTR [eax],0x1
  4015e9:	test   al,0x8e
  4015eb:	shr    dl,0xa9
  4015ee:	hlt    
  4015ef:	xchg   ebx,eax
  4015f0:	outs   dx,BYTE PTR ds:[esi]
  4015f1:	mov    al,0xad
  4015f3:	pop    esi
  4015f4:	cmp    al,dl
  4015f6:	clc    
  4015f7:	mov    esp,0xbbfa0ecc
  4015fc:	hlt    
  4015fd:	outs   dx,DWORD PTR ds:[esi]
  4015fe:	retf   0xdb52
  401601:	out    0xc1,al
  401603:	jl     0x4015cc
  401605:	addr16 lahf 
  401607:	adc    al,0xdd
  401609:	pop    ebp
  40160a:	and    cl,BYTE PTR [edi+0x2f3350c2]
  401610:	call   0x6f687134
  401615:	arpl   WORD PTR [eax+0x54],ax
  401618:	popf   
  401619:	or     ebp,DWORD PTR [eax-0x5fac5a19]
  40161f:	and    dl,0x50
  401622:	xchg   ecx,eax
  401623:	daa    
  401624:	adc    eax,0x62977add
  401629:	stos   BYTE PTR es:[edi],al
  40162a:	mov    BYTE PTR [eax-0x244012db],dl
  401630:	cmp    BYTE PTR [esi-0x675f6aa4],bh
  401636:	out    dx,al
  401637:	adc    cl,al
  401639:	and    ecx,ebp
  40163b:	jle    0x40164d
  40163d:	xchg   ecx,eax
  40163e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40163f:	(bad)  
  401641:	jle    0x40168c
  401643:	xchg   ebp,eax
  401644:	icebp  
  401645:	sbb    esi,DWORD PTR [edx]
  401647:	ds repz push 0xf746e72
  40164e:	ins    DWORD PTR es:[edi],dx
  40164f:	(bad)  
  401650:	cmp    al,0xf5
  401652:	and    dh,BYTE PTR [ecx-0x20]
  401655:	nop
  401656:	daa    
  401657:	loopne 0x401636
  401659:	popa   
  40165a:	(bad)  
  40165b:	div    BYTE PTR [edx-0x3e821a43]
  401661:	out    0x7b,eax
  401663:	lock xor DWORD PTR ds:0xf76d60e2,esi
  40166a:	mov    al,ds:0x2090646c
  40166f:	loope  0x401606
  401671:	mov    esp,DWORD PTR [edi-0x39]
  401674:	sbb    eax,0x684c6560
  401679:	sub    DWORD PTR [edx-0x629b18e8],ebx
  40167f:	and    cl,ah
  401681:	xor    BYTE PTR [esi+0x6c],0xeb
  401685:	(bad)  
  401686:	cmp    ch,BYTE PTR [esi-0x2cb79a7f]
  40168c:	jae    0x401620
  40168e:	ins    DWORD PTR es:[edi],dx
  40168f:	xchg   BYTE PTR [esi+0x46],dh
  401692:	jbe    0x401632
  401694:	add    dl,BYTE PTR [ecx+0x3a]
  401697:	push   ecx
  401698:	(bad)  
  40169a:	pop    eax
  40169b:	(bad)  
  40169c:	in     al,dx
  40169d:	dec    ebp
  40169e:	test   ch,ch
  4016a0:	adc    eax,DWORD PTR [edi]
  4016a2:	pop    esp
  4016a3:	rol    DWORD PTR [eax+edx*1-0x7],0xe0
  4016a8:	cdq    
  4016a9:	pop    ds
  4016aa:	stos   DWORD PTR es:[edi],eax
  4016ab:	pop    esi
  4016ac:	xchg   esi,eax
  4016ad:	pop    eax
  4016ae:	ds jno 0x401676
  4016b1:	xchg   edi,eax
  4016b2:	dec    edi
  4016b3:	dec    esp
  4016b4:	leave  
  4016b5:	out    dx,eax
  4016b6:	mov    esp,0xf5d49f8c
  4016bb:	pop    ds
  4016bc:	jge    0x40169f
  4016be:	out    dx,eax
  4016bf:	test   al,0xee
  4016c1:	adc    ecx,DWORD PTR [edx]
  4016c3:	xchg   ebx,eax
  4016c4:	pop    edi
  4016c5:	jnp    0x4016ac
  4016c7:	outs   dx,BYTE PTR ds:[esi]
  4016c8:	dec    edx
  4016c9:	adc    eax,0x70ba12b0
  4016ce:	das    
  4016cf:	dec    edx
  4016d0:	les    ebp,FWORD PTR [ebp+0x41d9141d]
  4016d6:	jmp    0x5c304fdc
  4016db:	lods   eax,DWORD PTR ds:[esi]
  4016dc:	inc    esi
  4016dd:	fisubr DWORD PTR ds:0xcf1351e0
  4016e3:	mov    esp,0xdfff8d70
  4016e8:	stos   BYTE PTR es:[edi],al
  4016e9:	mov    ch,0x4f
  4016eb:	into   
  4016ec:	call   0xfa17:0xbdf215a1
  4016f3:	nop
  4016f4:	repz scas eax,DWORD PTR es:[edi]
  4016f6:	mov    eax,ds:0xf6fdcb41
  4016fb:	jbe    0x4016a5
  4016fd:	jne    0x4016d1
  4016ff:	pop    esp
  401700:	mov    ds:0xe4293728,eax
  401705:	jno    0x4016d8
  401707:	push   ecx
  401708:	fs iret 
  40170a:	sbb    al,BYTE PTR [eax]
  40170c:	xchg   esi,eax
  40170d:	and    DWORD PTR [esi],0x3
  401710:	jecxz  0x401772
  401712:	inc    ecx
  401713:	sub    al,0x91
  401715:	lods   al,BYTE PTR ds:[esi]
  401716:	jae    0x4016fa
  401718:	aas    
  401719:	shr    DWORD PTR [edx-0x5bd0dc80],0x93
  401720:	mov    cl,0x6b
  401722:	imul   ebx,DWORD PTR [ebp+0xfa94da8],0xffffffeb
  401729:	mov    ds:0x33612ad3,al
  40172e:	(bad)  
  40172f:	(bad)  
  401730:	pop    ss
  401731:	mov    bh,0xa6
  401733:	int3   
  401734:	shl    BYTE PTR [eax-0xa],0x41
  401738:	inc    ebp
  401739:	lock xchg DWORD PTR [ecx+0x147e7452],esi
  401740:	shl    ecx,1
  401742:	test   al,0xcc
  401744:	sbb    DWORD PTR [ecx-0xe],0x76
  401748:	repnz inc ecx
  40174a:	mov    ds:0xe04d4ce6,al
  40174f:	ror    BYTE PTR [ebp+0x12],1
  401752:	xor    al,cl
  401754:	inc    esp
  401755:	icebp  
  401756:	sbb    esp,DWORD PTR [eax-0x566534d3]
  40175c:	mov    ch,0xf9
  40175e:	dec    esi
  40175f:	pop    ebp
  401760:	sub    eax,0xc18020d
  401765:	jo     0x4017a0
  401767:	in     al,dx
  401768:	pop    edx
  401769:	mov    eax,0xaff7022f
  40176e:	push   ecx
  40176f:	shl    DWORD PTR [edx-0xf8160a7],1
  401775:	arpl   WORD PTR [eax],ax
  401777:	jns    0x401790
  401779:	rcr    BYTE PTR [edx+0x6c4f22ac],cl
  40177f:	shl    DWORD PTR [edi],1
  401781:	test   eax,0xf5edf93e
  401786:	(bad)  [edx+0x2]
  401789:	xor    eax,0x25d2888e
  40178e:	jl     0x40171f
  401790:	sub    al,0xc5
  401792:	cmc    
  401793:	add    al,BYTE PTR [edi+0x4a27ab21]
  401799:	stc    
  40179a:	repnz or BYTE PTR [ecx],bh
  40179d:	pop    esp
  40179e:	dec    ebp
  40179f:	ss jmp 0x4017c9
  4017a2:	jne    0x401823
  4017a4:	push   ss
  4017a5:	mov    ds:0x528ee823,al
  4017aa:	or     al,0x26
  4017ac:	xchg   ecx,eax
  4017ad:	jmp    0xd32686ca
  4017b2:	in     al,0x92
  4017b4:	xor    al,0xf
  4017b6:	mov    edi,0x3bdfecf2
  4017bb:	sub    bh,cl
  4017bd:	js     0x401833
  4017bf:	adc    al,BYTE PTR [esi+0x3c2711f0]
  4017c5:	and    eax,0x9ae17d73
  4017ca:	sub    bh,BYTE PTR [edx-0x1d54ac53]
  4017d0:	stc    
  4017d1:	adc    DWORD PTR [eax],esi
  4017d3:	repz mov ebx,0x7d300bb5
  4017d9:	shl    BYTE PTR [edi],1
  4017db:	push   esp
  4017dc:	mov    bl,BYTE PTR [esi]
  4017de:	mov    ecx,0xf30b01d
  4017e3:	cwde   
  4017e4:	out    dx,al
  4017e5:	jno    0x40181e
  4017e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017e8:	cli    
  4017e9:	cmc    
  4017ea:	stc    
  4017eb:	mov    WORD PTR [ebp+0x72],?
  4017ee:	popf   
  4017ef:	cwde   
  4017f0:	js     0x40177b
  4017f2:	cs js  0x401778
  4017f5:	xchg   DWORD PTR [ebp-0x670eb3be],esp
  4017fb:	lock mov dl,0x76
  4017fe:	arpl   WORD PTR [edx-0x1fcf9df7],dx
  401804:	jmp    0x4017ae
  401806:	mov    esp,0xb37b42b5
  40180b:	imul   ebp,ecx,0xffffffb0
  40180e:	xchg   ecx,eax
  40180f:	xchg   esi,eax
  401810:	sbb    al,0x18
  401812:	and    eax,0x4404ece8
  401817:	mov    ebp,edi
  401819:	mov    ds:0x7b7c315c,eax
  40181e:	out    dx,eax
  40181f:	gs ret 
  401821:	jo     0x4017ad
  401823:	fist   DWORD PTR [edi+0x15]
  401826:	repz and al,0x7e
  401829:	sbb    ah,BYTE PTR [ecx+0x1a2bccf7]
  40182f:	loop   0x40180c
  401831:	imul   edi,DWORD PTR [ebp+0x77],0xffffffa7
  401835:	pop    es
  401836:	fidivr WORD PTR [edx+0x87349da]
  40183c:	ja     0x401872
  40183e:	mov    edi,DWORD PTR [ecx]
  401840:	lods   eax,DWORD PTR ds:[esi]
  401841:	xchg   ebx,eax
  401842:	icebp  
  401843:	mov    edx,0x845ebd25
  401848:	pop    esp
  401849:	aad    0xde
  40184b:	(bad)  
  40184c:	gs jne 0x401899
  40184f:	ins    DWORD PTR es:[edi],dx
  401850:	retf   
  401851:	mov    dh,0xdf
  401853:	pop    ecx
  401854:	sub    BYTE PTR [esp+ebx*4-0x20aa3b2d],al
  40185b:	sbb    al,0xf9
  40185d:	inc    edi
  40185e:	dec    edx
  40185f:	outs   dx,DWORD PTR ds:[esi]
  401860:	scas   al,BYTE PTR es:[edi]
  401861:	lods   eax,DWORD PTR ds:[esi]
  401862:	mov    edi,DWORD PTR [ecx+0x7]
  401865:	jmp    0xe3a45976
  40186a:	cmp    BYTE PTR [ecx],bh
  40186c:	mov    dl,0x85
  40186e:	xchg   ebx,eax
  40186f:	mov    edx,0x9af6f3af
  401874:	and    ecx,edi
  401876:	adc    ebp,DWORD PTR [ebx-0x7d]
  401879:	inc    edx
  40187a:	stc    
  40187b:	in     eax,dx
  40187c:	jbe    0x4018bd
  40187e:	popa   
  40187f:	mov    dh,0xbc
  401881:	mov    ds:0xe2422107,al
  401886:	jg     0x401819
  401888:	ret    
  401889:	shl    DWORD PTR [eax+0x78aa48d1],1
  40188f:	sub    al,0x83
  401891:	aaa    
  401892:	(bad)  
  401894:	xor    BYTE PTR [edx+0x42920960],al
  40189a:	das    
  40189b:	lea    edx,[ecx+0x3dddc764]
  4018a1:	in     al,dx
  4018a2:	fs punpckhbw mm3,mm4
  4018a6:	jle    0x4018cd
  4018a8:	aad    0xa6
  4018aa:	pop    ds
  4018ab:	cmc    
  4018ac:	xchg   esi,eax
  4018ad:	sub    BYTE PTR [esi+ebp*2],bl
  4018b0:	mov    edx,0x25191b70
  4018b5:	xor    al,0xf3
  4018b7:	sbb    DWORD PTR [ebp-0x6979edca],0x34
  4018be:	push   cs
  4018bf:	pop    ss
  4018c0:	aad    0xd8
  4018c2:	imul   ecx,DWORD PTR [esi],0x9b4c7fe1
  4018c8:	and    dl,bh
  4018ca:	mov    ch,0x1a
  4018cc:	hlt    
  4018cd:	(bad)  
  4018ce:	call   0x6027:0x82ad1491
  4018d5:	inc    ecx
  4018d6:	push   eax
  4018d7:	add    ah,BYTE PTR [eax]
  4018d9:	add    DWORD PTR [ecx+0x6f],0x4826855c
  4018e0:	push   ebx
  4018e1:	ss cmc 
  4018e3:	xor    al,0xe5
  4018e5:	outs   dx,DWORD PTR ds:[esi]
  4018e6:	into   
  4018e7:	in     eax,0x80
  4018e9:	mov    ds:0xd4757762,eax
  4018ee:	xchg   esi,eax
  4018ef:	jmp    DWORD PTR [edx+0x1cb1d882]
  4018f5:	inc    eax
  4018f6:	lds    ebx,FWORD PTR [edi+esi*2-0x32]
  4018fa:	xchg   esi,eax
  4018fb:	mov    eax,0xa3b6b414
  401900:	in     al,dx
  401901:	adc    eax,0x5f154130
  401906:	pop    es
  401907:	dec    ecx
  401908:	dec    eax
  401909:	dec    ebp
  40190a:	retf   0xa2b4
  40190d:	xchg   edi,eax
  40190e:	sbb    edi,DWORD PTR [esi-0x4f74c1b0]
  401914:	iret   
  401915:	sbb    esi,DWORD PTR [eax]
  401917:	sar    BYTE PTR [edx+ebx*4],1
  40191a:	rol    DWORD PTR [edx+0x7a],0x41
  40191e:	(bad)  
  40191f:	inc    ah
  401921:	test   eax,0xa817d21
  401926:	lods   eax,DWORD PTR ds:[esi]
  401927:	stos   BYTE PTR es:[edi],al
  401928:	sbb    esi,ebp
  40192a:	mov    al,ds:0x75787a2f
  40192f:	push   0x6b
  401931:	sub    eax,0x473ae539
  401936:	js     0x401971
  401938:	mov    esi,0xc757f7d2
  40193d:	pushf  
  40193e:	test   eax,0x2a0a2553
  401943:	test   al,ch
  401945:	out    0xb5,eax
  401947:	out    dx,al
  401948:	sbb    DWORD PTR [ecx-0x57a06373],ecx
  40194e:	leave  
  40194f:	gs pop edi
  401951:	mov    cl,0x17
  401953:	adc    BYTE PTR [eax+0xf1a878],cl
  401959:	ja     0x401986
  40195b:	xchg   DWORD PTR [ebx+0x4ec711ec],esp
  401961:	jb     0x40195d
  401963:	pop    ebp
  401964:	imul   dh
  401966:	mov    al,ds:0xff115049
  40196b:	and    bl,bh
  40196d:	xor    eax,0xb72e28d0
  401972:	and    ebx,DWORD PTR [ebx-0x7b0e1e02]
  401978:	inc    ebx
  401979:	add    eax,0x9141603a
  40197e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40197f:	outs   dx,BYTE PTR ds:[esi]
  401980:	add    eax,0x8062accf
  401985:	cdq    
  401986:	xor    BYTE PTR [eax+edx*2-0xb1cf6bd],0xcf
  40198e:	shl    BYTE PTR [edx],0x5b
  401991:	and    ecx,edi
  401993:	hlt    
  401994:	cmp    ecx,DWORD PTR [eax]
  401996:	adc    BYTE PTR [esi+0x74],bl
  401999:	pslld  mm1,mm6
  40199c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40199d:	push   ebx
  40199e:	aaa    
  40199f:	mov    bl,dh
  4019a1:	jmp    0x401938
  4019a3:	les    ebx,FWORD PTR cs:[edi]
  4019a6:	aaa    
  4019a7:	hlt    
  4019a8:	fisttp DWORD PTR [esi-0x33289a7d]
  4019ae:	imul   edi,DWORD PTR [eax],0x20718d22
  4019b4:	mov    BYTE PTR [esi+0x19d04ad8],bh
  4019ba:	int    0xa0
  4019bc:	or     edi,DWORD PTR [eax-0x67]
  4019bf:	call   0x9dc6:0x7a21be37
  4019c6:	push   esi
  4019c7:	loopne 0x40198f
  4019c9:	out    dx,eax
  4019ca:	dec    edx
  4019cb:	mov    edx,0xd7e9d907
  4019d0:	fdiv   QWORD PTR [edi+0x17824e65]
  4019d6:	ret    
  4019d7:	xchg   BYTE PTR [edi],bl
  4019d9:	push   ss
  4019da:	adc    eax,0x61633f13
  4019df:	addr16 fsub st,st(2)
  4019e2:	mov    ds:0x73613e2,al
  4019e7:	ja     0x4019af
  4019e9:	pop    ss
  4019ea:	xchg   edi,eax
  4019eb:	call   0xc06cbf9
  4019f0:	jns    0x401a2f
  4019f2:	pop    edx
  4019f3:	pop    ebp
  4019f4:	add    ebx,DWORD PTR [edx+0x35a0a038]
  4019fa:	xchg   DWORD PTR [esi+eiz*8+0x29],ebp
  4019fe:	in     eax,0x92
  401a00:	fadd   DWORD PTR [edx+0x7b]
  401a03:	sti    
  401a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a05:	mov    eax,ds:0xa16b6f0d
  401a0a:	test   DWORD PTR [edi-0x54a5bc1],eax
  401a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a11:	stc    
  401a12:	inc    edx
  401a13:	(bad)  
  401a14:	mov    eax,ds:0x433386e5
  401a19:	cmp    ch,BYTE PTR [ecx+0x1e412c73]
  401a1f:	shr    DWORD PTR [ebp-0x1c],cl
  401a22:	mov    bh,0xe2
  401a24:	mov    bl,0xf9
  401a26:	or     eax,DWORD PTR [ebp+0x24bd8649]
  401a2c:	test   BYTE PTR [edi+0x6b407a7c],0x4
  401a33:	push   ebx
  401a34:	sbb    DWORD PTR [ecx+0x44],esi
  401a37:	push   cs
  401a38:	out    0xeb,eax
  401a3a:	xchg   BYTE PTR [edi-0x1],al
  401a3d:	addr16 push ebp
  401a3f:	lods   eax,DWORD PTR ds:[esi]
  401a40:	retf   
  401a41:	jns    0x401a9e
  401a43:	mov    bl,ch
  401a45:	arpl   WORD PTR [eax-0x296cc8be],di
  401a4b:	add    al,0x70
  401a4d:	daa    
  401a4e:	sub    ah,BYTE PTR [eax]
  401a50:	or     BYTE PTR [esi+0x56],ch
  401a53:	cmp    al,BYTE PTR [edx+0x50f307cc]
  401a59:	daa    
  401a5a:	jmp    0x8202:0xe0eac929
  401a61:	into   
  401a62:	fldz   
  401a64:	or     BYTE PTR [edi-0x20d4806a],bh
  401a6a:	sub    BYTE PTR [eax+0x57],ah
  401a6d:	data16 (bad) 
  401a6f:	jo     0x4019f9
  401a71:	loope  0x401a7f
  401a73:	dec    esp
  401a74:	aaa    
  401a75:	cdq    
  401a76:	pop    esi
  401a77:	dec    esp
  401a78:	sahf   
  401a79:	inc    edx
  401a7a:	or     DWORD PTR [eax],0xf6ff8703
  401a80:	dec    eax
  401a81:	out    dx,eax
  401a82:	push   eax
  401a83:	fldcw  WORD PTR [edi+ebx*1+0x2bf35bf5]
  401a8a:	mov    cl,BYTE PTR [ecx-0x6a]
  401a8d:	mov    ds:0x77c6986,al
  401a92:	jb     0x401ad1
  401a94:	xchg   edi,eax
  401a95:	and    DWORD PTR [eax+0x20020c95],eax
  401a9b:	adc    ah,BYTE PTR [ebx]
  401a9d:	fld    TBYTE PTR [eax+0x56]
  401aa0:	inc    edi
  401aa1:	shr    DWORD PTR [esp+ecx*4],cl
  401aa4:	cli    
  401aa5:	scas   eax,DWORD PTR es:[edi]
  401aa6:	(bad)  
  401aa8:	(bad)  
  401aa9:	dec    esp
  401aaa:	cmc    
  401aab:	jns    0x401b20
  401aad:	ret    
  401aae:	and    BYTE PTR [esi],ch
  401ab0:	pop    eax
  401ab1:	mov    esp,0x1cefbcf2
  401ab6:	add    BYTE PTR [edx],bl
  401ab8:	loopne 0x401a55
  401aba:	adc    eax,0x90b88a77
  401abf:	dec    ebx
  401ac0:	sbb    BYTE PTR [eax+0x3d],al
  401ac3:	stc    
  401ac4:	(bad)  
  401ac5:	retf   
  401ac6:	add    BYTE PTR [edx+0x46533c63],bl
  401acc:	adc    dh,BYTE PTR [edx+0x4aba6104]
  401ad2:	aad    0x6d
  401ad4:	sahf   
  401ad5:	imul   esp,esi,0x9fe46cd6
  401adb:	and    eax,0x1239c7be
  401ae0:	xchg   DWORD PTR [esi+0x1],esp
  401ae3:	or     BYTE PTR [eax+0x178bc0e4],cl
  401ae9:	jge    0x401a6f
  401aeb:	std    
  401aec:	push   es
  401aed:	lahf   
  401aee:	(bad)  
  401aef:	fdiv   DWORD PTR [ecx]
  401af1:	test   ah,ah
  401af3:	(bad)  
  401af4:	or     eax,DWORD PTR [ecx]
  401af6:	loope  0x401ad9
  401af8:	pop    eax
  401af9:	lds    esi,FWORD PTR [esp+edi*1-0x6488a750]
  401b00:	nop
  401b01:	pop    esp
  401b02:	in     al,0xd8
  401b04:	mov    eax,DWORD PTR [ebx]
  401b06:	outs   dx,BYTE PTR ds:[esi]
  401b07:	ret    
  401b08:	inc    esp
  401b09:	repnz nop
  401b0b:	or     edx,DWORD PTR [eax-0x5a1414c6]
  401b11:	adc    ebp,edx
  401b13:	mov    ah,BYTE PTR [ecx]
  401b15:	xchg   edx,eax
  401b16:	test   DWORD PTR es:0xab9538ba,ebp
  401b1d:	dec    edx
  401b1e:	sbb    eax,0x3fba3ef5
  401b23:	int    0xba
  401b25:	xchg   ecx,eax
  401b26:	ins    BYTE PTR es:[edi],dx
  401b27:	loopne 0x401b30
  401b29:	sbb    DWORD PTR [ecx+0x2900dc88],esp
  401b2f:	clc    
  401b30:	sub    bh,BYTE PTR [edi-0x40]
  401b33:	jp     0x401b83
  401b35:	xchg   ebp,eax
  401b36:	or     BYTE PTR [esi+0x40fff6fa],al
  401b3c:	mov    ecx,0x21188cf8
  401b41:	jne    0x401b68
  401b43:	scas   al,BYTE PTR es:[edi]
  401b44:	dec    ecx
  401b45:	fdiv   QWORD PTR [ebp-0x6f3e0bb4]
  401b4b:	pop    eax
  401b4c:	popf   
  401b4d:	and    BYTE PTR [ebx],al
  401b4f:	pop    esp
  401b50:	call   0x54e0a605
  401b55:	(bad)  
  401b56:	cld    
  401b57:	std    
  401b58:	mov    edx,0xa441ce8c
  401b5d:	mov    edi,DWORD PTR [edx-0x4a98cd84]
  401b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b64:	push   edx
  401b65:	sub    DWORD PTR [edi-0x666e62f],ebp
  401b6b:	sub    al,0xb0
  401b6d:	pop    ss
  401b6e:	push   esp
  401b6f:	xchg   ebp,eax
  401b70:	jb     0x401bc1
  401b72:	cdq    
  401b73:	inc    esi
  401b74:	inc    ebx
  401b75:	cmp    DWORD PTR ds:0xb929436f,0x98467a15
  401b7f:	jmp    0x2986:0x6d5d3af4
  401b86:	mov    eax,DWORD PTR [edx]
  401b88:	adc    BYTE PTR [edx],0x28
  401b8b:	push   ebx
  401b8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b8d:	aad    0xa3
  401b8f:	ds loopne 0x401b62
  401b92:	jnp    0x401b67
  401b94:	jg     0x401ba8
  401b96:	lods   al,BYTE PTR ds:[esi]
  401b97:	cmp    dl,BYTE PTR ds:[ebx-0x2]
  401b9b:	and    dl,BYTE PTR [edi]
  401b9d:	inc    BYTE PTR [ebp+ecx*8-0xd]
  401ba1:	adc    eax,0x157a41bb
  401ba6:	sbb    dl,bh
  401ba8:	test   ebp,ecx
  401baa:	mov    ebp,0x6b426c67
  401baf:	xor    esp,esi
  401bb1:	mov    ebp,DWORD PTR [ecx+0x2208ef66]
  401bb7:	inc    eax
  401bb8:	fnstsw WORD PTR [eax-0x6b2a93de]
  401bbe:	and    edx,DWORD PTR [edi-0x36622c08]
  401bc4:	sub    DWORD PTR [edx-0x1],ecx
  401bc7:	push   eax
  401bc8:	push   0x51
  401bca:	and    dl,BYTE PTR [esi]
  401bcc:	ret    
  401bcd:	mov    ds:0xba2cece5,al
  401bd2:	xchg   ecx,eax
  401bd3:	xor    eax,0xce4310e1
  401bd8:	adc    eax,0xac6c0c92
  401bdd:	inc    ebx
  401bde:	and    DWORD PTR [ebx-0x7dd06896],0xf585a88c
  401be8:	push   ebx
  401be9:	arpl   WORD PTR [esi+0x74],di
  401bec:	jmp    0x4e8082b9
  401bf1:	pop    ecx
  401bf2:	jl     0x401bdc
  401bf4:	and    esp,esi
  401bf6:	(bad)  
  401bf7:	xchg   edi,eax
  401bf8:	sub    BYTE PTR [edi+0x33b87d89],bh
  401bfe:	mul    dl
  401c00:	aad    0xb6
  401c02:	stos   BYTE PTR es:[edi],al
  401c03:	fadd   DWORD PTR [edi-0x7c]
  401c06:	pop    eax
  401c07:	fsub   QWORD PTR ds:0x274ce
  401c0d:	jnp    0x401c7e
  401c0f:	mov    ds:0x9bd82bdc,al
  401c14:	cmp    BYTE PTR [ebx+0x5055e16a],cl
  401c1a:	push   ss
  401c1b:	bswap  eax
  401c1d:	add    al,0x3e
  401c1f:	rcr    DWORD PTR [eax+0x507d2618],cl
  401c25:	xlat   BYTE PTR ds:[ebx]
  401c26:	add    eax,0xd9798e17
  401c2b:	fild   QWORD PTR [ebp-0x80]
  401c2e:	push   edx
  401c2f:	retf   
  401c30:	in     eax,0xe
  401c32:	xor    eax,0x53a755e7
  401c37:	mov    eax,0xbaf8d3a1
  401c3c:	sub    DWORD PTR [ebx+eax*1-0x55],ebx
  401c40:	dec    esp
  401c41:	out    dx,eax
  401c42:	adc    eax,0xc56eee38
  401c47:	repz cs sub al,0x9f
  401c4b:	pop    eax
  401c4c:	xchg   esi,eax
  401c4d:	xchg   esi,eax
  401c4e:	outs   dx,DWORD PTR ds:[esi]
  401c4f:	add    cl,BYTE PTR [edi+0x7bda893f]
  401c55:	gs (bad) 
  401c57:	dec    esi
  401c58:	push   ebp
  401c59:	cwde   
  401c5a:	adc    BYTE PTR [esi+0xe],ah
  401c5d:	mov    ecx,0xcdeccf4a
  401c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c63:	mov    edx,0x8383ea
  401c68:	arpl   WORD PTR [eax-0x1d6c6511],sp
  401c6e:	mov    ecx,0x8d5c9947
  401c73:	inc    esp
  401c74:	inc    esi
  401c75:	inc    edx
  401c76:	test   eax,0xf9fe28eb
  401c7b:	ficom  WORD PTR [ebx+0x1b]
  401c7e:	fidiv  WORD PTR [ebp+0x5a]
  401c81:	add    ah,BYTE PTR [edi+0x7f45853b]
  401c87:	xchg   DWORD PTR [ebp-0x23765be1],ebx
  401c8d:	adc    BYTE PTR [eax*4-0x526ac70a],0xc7
  401c95:	sbb    edi,DWORD PTR [edx+0x73]
  401c98:	imul   ecx,DWORD PTR [eax-0x779c74d8],0x44e26993
  401ca2:	mov    WORD PTR ss:[ebx],cs
  401ca5:	pop    ds
  401ca6:	inc    esi
  401ca7:	aad    0xef
  401ca9:	arpl   WORD PTR [ecx+0x6c3c0b77],di
  401caf:	cmp    DWORD PTR [ebx+0x4b016a74],esi
  401cb5:	add    bl,al
  401cb7:	aam    0xd2
  401cb9:	repnz inc eax
  401cbb:	or     eax,0x61db04e4
  401cc0:	fild   WORD PTR [eax-0x412fafd3]
  401cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cc7:	ret    
  401cc8:	sbb    ch,BYTE PTR [eax]
  401cca:	outs   dx,BYTE PTR ds:[esi]
  401ccb:	ja     0x401d17
  401ccd:	mov    bl,0x6b
  401ccf:	aaa    
  401cd0:	gs jle 0x401c69
  401cd3:	gs jb  0x401cb4
  401cd6:	or     ecx,ebp
  401cd8:	add    BYTE PTR [eax],dl
  401cda:	nop
  401cdb:	pushf  
  401cdc:	mov    ecx,0x7d00b1fa
  401ce1:	loopne 0x401ca1
  401ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ce4:	loop   0x401c83
  401ce6:	scas   al,BYTE PTR es:[edi]
  401ce7:	lea    edx,[edx]
  401ce9:	adc    cl,ah
  401ceb:	ficom  DWORD PTR [edx+0x7d735693]
  401cf1:	int    0x65
  401cf3:	mov    WORD PTR [edx],ss
  401cf5:	in     eax,0xcc
  401cf7:	jne    0x401c84
  401cf9:	mov    edx,DWORD PTR [esi-0x4b]
  401cfc:	add    al,0xcb
  401cfe:	mov    al,0x2a
  401d00:	xchg   esi,eax
  401d01:	les    ebx,FWORD PTR [eax+0x57]
  401d04:	adc    eax,0x216d08e8
  401d09:	hlt    
  401d0a:	icebp  
  401d0b:	mov    ds:0x3fe0b295,eax
  401d10:	ss xchg edi,eax
  401d12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d13:	xor    ecx,DWORD PTR [edi]
  401d15:	stos   BYTE PTR es:[edi],al
  401d16:	and    al,0xbd
  401d18:	and    al,0x60
  401d1a:	in     al,dx
  401d1b:	outs   dx,DWORD PTR ds:[esi]
  401d1c:	adc    eax,DWORD PTR [edx-0x77]
  401d1f:	mov    al,0x8c
  401d21:	push   edi
  401d22:	sbb    al,0xc3
  401d24:	push   ds
  401d25:	push   es
  401d26:	mov    cl,al
  401d28:	xchg   ebx,eax
  401d29:	sbb    ebp,esp
  401d2b:	in     eax,dx
  401d2c:	daa    
  401d2d:	dec    eax
  401d2e:	in     eax,dx
  401d2f:	xchg   ebp,eax
  401d30:	inc    eax
  401d31:	mov    dl,0x67
  401d33:	inc    edx
  401d34:	adc    al,0x31
  401d36:	fnstsw ax
  401d38:	inc    esi
  401d39:	inc    edx
  401d3a:	mov    ebp,0xc3ddac88
  401d3f:	sub    eax,0xa2b3cfa4
  401d44:	outs   dx,BYTE PTR ds:[esi]
  401d45:	or     ah,bh
  401d47:	mov    eax,ds:0xf489b346
  401d4c:	fwait
  401d4d:	(bad)  
  401d4e:	jmp    0x93d4893
  401d53:	push   0x855417ea
  401d58:	aas    
  401d59:	loope  0x401da7
  401d5b:	mov    ebx,0xb3bb225b
  401d60:	fs aam 0x1d
  401d63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d64:	aad    0x90
  401d66:	lods   al,BYTE PTR ds:[esi]
  401d67:	sar    bl,1
  401d69:	xchg   ebp,eax
  401d6a:	ds cld 
  401d6c:	push   edi
  401d6d:	push   edx
  401d6e:	out    dx,eax
  401d6f:	scas   al,BYTE PTR es:[edi]
  401d70:	jbe    0x401dce
  401d72:	outs   dx,BYTE PTR ds:[esi]
  401d73:	(bad)  
  401d74:	mov    eax,0xa58df154
  401d79:	ins    BYTE PTR es:[edi],dx
  401d7a:	in     al,dx
  401d7b:	shl    BYTE PTR [eax-0x226831de],1
  401d81:	jno    0x401dc7
  401d83:	imul   ebp,DWORD PTR [eax],0x74842b6d
  401d89:	mov    esp,eax
  401d8b:	retf   0x47eb
  401d8e:	addr16 loop 0x401d3d
  401d91:	mov    cl,BYTE PTR [ecx]
  401d93:	frstor [esi]
  401d95:	stos   BYTE PTR es:[edi],al
  401d96:	and    DWORD PTR [ecx-0x39],ebx
  401d99:	pop    eax
  401d9a:	add    DWORD PTR [edi],esi
  401d9c:	push   es
  401d9d:	xchg   ebp,eax
  401d9e:	hlt    
  401d9f:	rcr    BYTE PTR [edx-0x3653d076],cl
  401da5:	ror    DWORD PTR [edx+ebp*2],1
  401da8:	sahf   
  401da9:	dec    edi
  401daa:	inc    ebx
  401dab:	pop    ss
  401dac:	lods   al,BYTE PTR ds:[esi]
  401dad:	repz pop ecx
  401daf:	out    dx,eax
  401db0:	data16 xlat BYTE PTR ds:[ebx]
  401db2:	inc    ebp
  401db3:	push   ebp
  401db4:	xor    eax,0x26cf14bc
  401db9:	imul   eax,ecx,0x2
  401dbc:	xchg   edx,eax
  401dbd:	and    eax,0xac4938f5
  401dc2:	mov    cl,0xee
  401dc4:	cli    
  401dc5:	popa   
  401dc6:	pop    ss
  401dc7:	jbe    0x401e0c
  401dc9:	push   edi
  401dca:	jbe    0x401e24
  401dcc:	xchg   ax,ax
  401dce:	in     eax,dx
  401dcf:	repnz (bad) 
  401dd1:	sbb    DWORD PTR [ecx-0x14b75890],esi
  401dd7:	push   ebp
  401dd8:	ins    BYTE PTR es:[edi],dx
  401dd9:	dec    edx
  401dda:	(bad)  
  401ddb:	fisttp QWORD PTR [eax]
  401ddd:	cld    
  401dde:	mov    edx,0x3b343cd5
  401de3:	mov    WORD PTR [ecx-0x6cb47037],ss
  401de9:	xor    dl,BYTE PTR [edx]
  401deb:	loop   0x401dc0
  401ded:	jo     0x401d73
  401def:	push   ss
  401df0:	sub    BYTE PTR [ebp+0x7a7092df],dh
  401df6:	ins    BYTE PTR es:[edi],dx
  401df7:	aad    0x82
  401df9:	fisub  DWORD PTR [ebp+0x4a165b64]
  401dff:	dec    edx
  401e00:	pop    edx
  401e01:	imul   esi,edi,0xb4dce50c
  401e07:	lea    esp,[edx+0x54]
  401e0a:	shl    DWORD PTR [esi],cl
  401e0c:	je     0x401e8d
  401e0e:	test   BYTE PTR [ebx+0xa],ch
  401e11:	lods   al,BYTE PTR ds:[esi]
  401e12:	test   ecx,esp
  401e14:	ins    DWORD PTR es:[edi],dx
  401e15:	mov    al,BYTE PTR [eax+0x7179f428]
  401e1b:	fdivr  DWORD PTR [esi-0x6f4d80cf]
  401e21:	dec    edx
  401e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e23:	ror    DWORD PTR [ecx],cl
  401e25:	or     BYTE PTR [ecx+0x77],ah
  401e28:	stc    
  401e29:	cmp    ecx,DWORD PTR [ebx+0x37]
  401e2c:	and    BYTE PTR [ebx-0x6e],dl
  401e2f:	mov    eax,ds:0xeaee7a86
  401e34:	and    edx,esi
  401e36:	or     BYTE PTR [ebp+0x7c6a8795],ah
  401e3c:	xor    al,0xd4
  401e3e:	xor    dl,BYTE PTR [ecx-0x2e]
  401e41:	inc    eax
  401e42:	loope  0x401e47
  401e44:	xchg   ebx,eax
  401e45:	dec    ebx
  401e46:	inc    esi
  401e47:	sbb    al,0xdb
  401e49:	sub    DWORD PTR [esi+edi*4+0x325d43c9],0x12
  401e51:	xor    BYTE PTR [esi],al
  401e53:	gs clc 
  401e55:	or     DWORD PTR [edx+0x531ec008],ecx
  401e5b:	loope  0x401ec5
  401e5d:	xchg   esp,eax
  401e5e:	jg     0x401edb
  401e60:	pushf  
  401e61:	pop    ss
  401e62:	aaa    
  401e63:	cs ins DWORD PTR es:[edi],dx
  401e65:	fistp  DWORD PTR [ecx]
  401e67:	dec    edi
  401e68:	arpl   WORD PTR [edx-0x2c5ef24],bp
  401e6e:	pop    edx
  401e6f:	loop   0x401ebf
  401e71:	mov    al,ds:0xc57ebab3
  401e76:	mov    bl,0xd9
  401e78:	fimul  DWORD PTR [esp+edx*8+0x55]
  401e7c:	fdivr  QWORD PTR [esi]
  401e7e:	mov    ah,0x37
  401e80:	mov    al,ds:0xd8bd2b80
  401e85:	int    0x48
  401e87:	dec    DWORD PTR [edx-0x223db3f2]
  401e8d:	jns    0x401e10
  401e8f:	lds    esi,FWORD PTR [ebx]
  401e91:	push   ss
  401e92:	pop    eax
  401e93:	sbb    eax,0x5819cae
  401e98:	cmp    dl,ch
  401e9a:	mov    BYTE PTR [ebp-0x20],al
  401e9d:	(bad)  
  401e9e:	jecxz  0x401e5b
  401ea0:	xor    bl,dl
  401ea2:	mov    dl,0x7e
  401ea4:	mov    esp,0xbfc3ffcf
  401ea9:	sub    ebx,DWORD PTR [ecx+edi*8+0x19e3000a]
  401eb0:	xor    DWORD PTR ds:[ebx],eax
  401eb3:	inc    ebp
  401eb4:	or     BYTE PTR [edx+0x19],ch
  401eb7:	xchg   ebp,eax
  401eb8:	pop    eax
  401eb9:	imul   ebp,DWORD PTR [eax-0x749e7b8],0xf03bd33b
  401ec3:	scas   eax,DWORD PTR es:[edi]
  401ec4:	dec    ebp
  401ec5:	hlt    
  401ec6:	rcr    BYTE PTR [ecx-0x65923374],1
  401ecc:	(bad)  
  401ece:	aas    
  401ecf:	push   0x9e2ce9fb
  401ed4:	inc    ebp
  401ed5:	sub    al,BYTE PTR [edi]
  401ed7:	or     al,0xef
  401ed9:	cld    
  401eda:	dec    ebp
  401edb:	xlat   BYTE PTR ds:[ebx]
  401edc:	push   esp
  401edd:	sub    al,0xa1
  401edf:	(bad)  [esi+0x7f]
  401ee2:	mov    bh,BYTE PTR ds:0xc5e36ac0
  401ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ee9:	mov    bh,0x12
  401eeb:	clc    
  401eec:	and    dl,BYTE PTR [edx+0xd1e9c7c]
  401ef2:	(bad)  
  401ef3:	stc    
  401ef4:	fwait
  401ef5:	out    0x8e,al
  401ef7:	pop    esp
  401ef8:	stos   BYTE PTR es:[edi],al
  401ef9:	sbb    eax,0x9ad29d16
  401efe:	or     DWORD PTR [esi+ecx*4-0x1a64083],eax
  401f05:	call   0x346a5bd4
  401f0a:	scas   eax,DWORD PTR es:[edi]
  401f0b:	loop   0x401f2c
  401f0d:	jle    0x401eaa
  401f0f:	bound  edx,QWORD PTR [edi+0x2f]
  401f12:	js     0x401eca
  401f14:	mov    ecx,0xb6031f81
  401f19:	mov    DWORD PTR [ecx],ecx
  401f1b:	dec    eax
  401f1c:	dec    edx
  401f1d:	fst    QWORD PTR [edx]
  401f1f:	dec    ebp
  401f20:	push   esp
  401f21:	fisttp DWORD PTR [eax]
  401f23:	push   0xffffffcc
  401f25:	mov    ds:0x9f6893f3,eax
  401f2a:	dec    ecx
  401f2b:	out    0x92,eax
  401f2d:	adc    ebx,0xb6904df0
  401f33:	pop    ss
  401f34:	ror    ah,1
  401f36:	gs inc ecx
  401f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f39:	lods   eax,DWORD PTR ds:[esi]
  401f3a:	jecxz  0x401f6d
  401f3c:	mov    ecx,0x94290a16
  401f41:	sub    al,0xe1
  401f43:	clc    
  401f44:	add    al,BYTE PTR [esi+0x14]
  401f47:	or     ebx,DWORD PTR [edi+0x3353c15d]
  401f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f4e:	sbb    eax,0x9d1dde08
  401f53:	addr16 cmp eax,0xa4d0fe1f
  401f59:	out    dx,eax
  401f5a:	adc    ch,dh
  401f5c:	mov    edx,0xb71e4068
  401f61:	xchg   BYTE PTR [edi+0x2f],cl
  401f64:	sub    eax,0x6d8ff2aa
  401f69:	add    eax,0xff6e5ff
  401f6e:	test   BYTE PTR [edi],0xee
  401f71:	push   cs
  401f72:	cdq    
  401f73:	dec    edx
  401f74:	inc    edi
  401f75:	jmp    0x401f96
  401f77:	xor    al,0x42
  401f79:	(bad)  
  401f7a:	sbb    eax,0xcea20401
  401f7f:	ficomp WORD PTR [ecx-0x243468d2]
  401f85:	sub    eax,0xcf2d76b4
  401f8a:	mov    eax,0x90027b1d
  401f8f:	call   0x8d49aa6f
  401f94:	inc    edx
  401f95:	xor    BYTE PTR [ebx-0x19],cl
  401f98:	add    DWORD PTR [eax+eax*8+0x50166f80],0x1e6aa640
  401fa3:	hlt    
  401fa4:	psrad  mm2,QWORD PTR [edi]
  401fa7:	lds    edi,FWORD PTR [ebp-0x1bb66e2d]
  401fad:	mov    edi,esp
  401faf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fb1:	cvtps2pi mm7,QWORD PTR [ebx-0x7f]
  401fb5:	mov    eax,0xd14b9e6e
  401fba:	test   DWORD PTR [esi],eax
  401fbc:	hlt    
  401fbd:	aad    0xb
  401fbf:	push   eax
  401fc0:	adc    BYTE PTR [edx+0x746f06ca],al
  401fc6:	add    bh,BYTE PTR es:[ebp-0x198a051d]
  401fcd:	adc    eax,0xef892ccf
  401fd2:	js     0x401f94
  401fd4:	add    BYTE PTR [eax-0x20263b6f],ch
  401fda:	sub    esi,DWORD PTR [esi-0x452c64ed]
  401fe0:	call   0x59293fef
  401fe5:	mov    dh,0xb1
  401fe7:	mov    edi,fs
  401fe9:	aam    0x8a
  401feb:	push   es
  401fec:	sbb    BYTE PTR [edi+0x1a],0x1d
  401ff0:	into   
  401ff1:	inc    esp
  401ff2:	mov    al,ds:0xf4b64c1
  401ff7:	xlat   BYTE PTR ds:[ebx]
  401ff8:	mov    bh,0x78
  401ffa:	jl     0x402037
  401ffc:	test   BYTE PTR [eax+edi*4-0x21],dl
  402000:	push   es
  402001:	add    eax,0xc24d157e
  402006:	sbb    eax,0xa1d40e1c
  40200b:	jmp    0x9d6871de
  402010:	add    dl,BYTE PTR [eax]
  402012:	pop    ebp
  402013:	mov    dl,0x9b
  402015:	out    0x74,eax
  402017:	mov    ds:0x430f4ee7,al
  40201c:	adc    BYTE PTR [ebx],cl
  40201e:	ins    DWORD PTR es:[edi],dx
  40201f:	nop
  402020:	enter  0x7630,0xbd
  402024:	sbb    DWORD PTR [esi-0x141f4712],0xffffffc9
  40202b:	ds dec eax
  40202d:	test   ah,ah
  40202f:	enter  0x4ccf,0x10
  402033:	cld    
  402034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402035:	push   esi
  402036:	stos   DWORD PTR es:[edi],eax
  402037:	xchg   ebp,eax
  402038:	or     dl,0xb8
  40203b:	jno    0x401fd3
  40203d:	mov    eax,0x3cbaf5cc
  402042:	mov    BYTE PTR [edi+eiz*8],bh
  402045:	loope  0x402090
  402047:	jmp    0x40209a
  402049:	or     DWORD PTR [edx+0x2f49f9fe],esi
  40204f:	call   0xf14c:0x85c9c5ee
  402056:	aas    
  402057:	mov    cl,0x4a
  402059:	test   BYTE PTR [ecx-0x15],dl
  40205c:	xchg   edx,eax
  40205d:	clc    
  40205e:	or     DWORD PTR ds:0x4cbd6b89,0xffffffc9
  402065:	mov    esi,0xb09c9bee
  40206a:	jp     0x40206a
  40206c:	push   ss
  40206d:	ficomp DWORD PTR [ecx-0x699863e]
  402073:	add    esi,ebp
  402075:	sahf   
  402076:	retf   
  402077:	jge    0x401ffc
  402079:	(bad)  
  40207a:	gs repnz xchg ebp,eax
  40207d:	cmp    cl,bl
  40207f:	rol    ecx,cl
  402081:	les    ebp,FWORD PTR [ebp-0x2f]
  402084:	add    cl,BYTE PTR ds:0x79539de9
  40208a:	push   esp
  40208b:	cmp    DWORD PTR [edi+0x136c490d],esi
  402091:	into   
  402092:	cmp    eax,0xa268242e
  402097:	dec    edx
  402098:	dec    esi
  402099:	or     edx,DWORD PTR [edx]
  40209b:	aaa    
  40209c:	add    ch,BYTE PTR [esi-0x3802be40]
  4020a2:	xchg   esp,eax
  4020a3:	setnp  ah
  4020a6:	xlat   BYTE PTR ds:[ebx]
  4020a7:	jno    0x402104
  4020a9:	mov    eax,ds:0x9dece78b
  4020ae:	stos   BYTE PTR es:[edi],al
  4020af:	sub    eax,0x7c28884e
  4020b4:	cmp    al,0x3b
  4020b6:	sbb    bl,0xfb
  4020b9:	pop    eax
  4020ba:	jmp    0x5cd3:0x4424367f
  4020c1:	neg    DWORD PTR [edi]
  4020c3:	daa    
  4020c4:	mov    edx,0xa2a32863
  4020c9:	pop    esi
  4020ca:	sub    al,0xb4
  4020cc:	sub    al,0xc2
  4020ce:	pop    esi
  4020cf:	adc    edx,edx
  4020d1:	iret   
  4020d2:	dec    ecx
  4020d3:	lods   eax,DWORD PTR ds:[esi]
  4020d4:	ficomp WORD PTR [esi]
  4020d6:	sbb    dl,0xce
  4020d9:	or     DWORD PTR [ecx+0x1c4835e8],edi
  4020df:	int3   
  4020e0:	lock fdivp st(7),st
  4020e3:	inc    edi
  4020e4:	xchg   edx,eax
  4020e5:	jmp    0x8ed:0xd730b8f2
  4020ec:	(bad)  [esi]
  4020ee:	setno  BYTE PTR [edx+0x48479e43]
  4020f5:	xchg   ebx,eax
  4020f6:	jle    0x4020b5
  4020f8:	mov    dh,0xda
  4020fa:	xor    eax,0xc714348c
  4020ff:	mov    eax,ds:0xb50a7684
  402104:	pop    edx
  402105:	bound  ecx,QWORD PTR [ecx-0x2edcde4a]
  40210b:	lock in al,dx
  40210d:	cwde   
  40210e:	cli    
  40210f:	cmp    BYTE PTR [edi+eiz*4-0x253eec13],0xc6
  402117:	sar    BYTE PTR [esi-0x13],1
  40211a:	sbb    esi,DWORD PTR [eax]
  40211c:	loop   0x4020df
  40211e:	cmp    ah,BYTE PTR [edi]
  402120:	scas   eax,DWORD PTR es:[edi]
  402121:	mov    cl,0xd1
  402123:	adc    al,0xb5
  402125:	scas   eax,DWORD PTR es:[edi]
  402126:	sbb    eax,0xafb683d7
  40212b:	outs   dx,DWORD PTR ds:[esi]
  40212c:	fs cmp eax,0x2f221113
  402132:	pop    esp
  402133:	nop
  402134:	sti    
  402135:	xor    BYTE PTR [eax+0x4b59ed81],cl
  40213b:	daa    
  40213c:	clc    
  40213d:	mov    ebp,0x3bfb3cc7
  402142:	mov    cl,0x96
  402144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402145:	or     DWORD PTR [edx],esi
  402147:	dec    esi
  402148:	scas   al,BYTE PTR es:[edi]
  402149:	sub    dh,0x92
  40214c:	(bad)
  402150:	sbb    al,0x6d
  402152:	or     esp,esi
  402154:	test   DWORD PTR [edx],esp
  402156:	mov    ah,0x22
  402158:	out    dx,al
  402159:	dec    esi
  40215a:	cmp    eax,0x825baa08
  40215f:	adc    bl,BYTE PTR ds:0x3de9cb01
  402165:	test   DWORD PTR [ebp-0x4e],ebp
  402168:	push   ebp
  402169:	mov    cl,0x48
  40216b:	fsub   QWORD PTR [edi+0x3]
  40216e:	(bad)  
  40216f:	out    dx,eax
  402170:	cld    
  402171:	sub    al,0x67
  402173:	hlt    
  402174:	dec    eax
  402175:	out    dx,eax
  402176:	fst    DWORD PTR [edx]
  402178:	test   BYTE PTR [esi-0x5e1f05e4],ch
  40217e:	pop    esi
  40217f:	adc    al,0xac
  402181:	data16 hlt 
  402183:	fcmovu st,st(1)
  402185:	mov    ds:0x870043ff,eax
  40218a:	rol    BYTE PTR [edi+ecx*4+0x537b56d2],1
  402191:	xchg   esi,eax
  402192:	dec    esp
  402193:	push   esp
  402194:	cmc    
  402195:	lahf   
  402196:	retf   0xca4b
  402199:	fisttp DWORD PTR [esi]
  40219b:	and    DWORD PTR [ebx+0x68219ba6],0x492b72e7
  4021a5:	or     al,0xd7
  4021a7:	mov    al,ds:0x7da392e5
  4021ac:	jo     0x40216b
  4021ae:	sub    ebx,esi
  4021b0:	sub    BYTE PTR [esi+0x74],dl
  4021b3:	xor    ch,BYTE PTR [ebx-0x5e]
  4021b6:	jns    0x402230
  4021b8:	jbe    0x4021e4
  4021ba:	or     ebx,DWORD PTR [edi+0x2fb04b5]
  4021c0:	(bad)  
  4021c1:	fld    TBYTE PTR [ecx]
  4021c3:	add    eax,0xa0137d60
  4021c8:	mov    edx,0x9d21bc47
  4021cd:	inc    BYTE PTR [edi+esi*2]
  4021d0:	add    BYTE PTR [esi-0x1dca40e0],ch
  4021d6:	ficom  WORD PTR [edx]
  4021d8:	jg     0x402191
  4021da:	dec    edi
  4021db:	adc    ch,BYTE PTR fs:[ecx]
  4021de:	(bad)  
  4021df:	loop   0x4021a3
  4021e1:	dec    esi
  4021e2:	and    BYTE PTR [esi-0x6c],dl
  4021e5:	and    DWORD PTR [eax-0x6448a922],ecx
  4021eb:	pop    esi
  4021ec:	popf   
  4021ed:	mov    dl,0xf7
  4021ef:	jmp    0x4021bf
  4021f1:	push   cs
  4021f2:	cdq    
  4021f3:	mov    bh,0xdb
  4021f5:	jmp    DWORD PTR [edx+0x4cf6c17a]
  4021fb:	fcomp  QWORD PTR [esi+0x7b898b76]
  402201:	mov    ch,0x24
  402203:	xchg   edx,ebx
  402205:	cld    
  402206:	xchg   esi,eax
  402207:	scas   al,BYTE PTR es:[edi]
  402208:	inc    ebx
  402209:	dec    edi
  40220a:	jb     0x402265
  40220c:	fild   WORD PTR [esi-0xa27e8db]
  402212:	sub    DWORD PTR [esi],edi
  402214:	ins    BYTE PTR es:[edi],dx
  402215:	and    ecx,DWORD PTR [ebx]
  402217:	popf   
  402218:	fisttp QWORD PTR [ecx]
  40221a:	call   0x231a:0xa8841238
  402221:	es das 
  402223:	gs push 0x557eb02a
  402229:	ins    BYTE PTR es:[edi],dx
  40222a:	add    cl,BYTE PTR [ebx+0x1243222]
  402230:	sub    bl,BYTE PTR [edi-0x2007b805]
  402236:	jle    0x402251
  402238:	mov    edx,0x9e6bcff8
  40223d:	xchg   ebx,eax
  40223e:	mov    cl,0x67
  402240:	ficom  DWORD PTR ds:[esi+0x62]
  402244:	ret    
  402245:	push   ss
  402246:	pushf  
  402247:	inc    edx
  402248:	ins    BYTE PTR es:[edi],dx
  402249:	call   0xd40435d7
  40224e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40224f:	push   edi
  402250:	fwait
  402251:	jle    0x4022ab
  402253:	sub    al,0xa7
  402255:	jmp    0x40227f
  402257:	pop    ebp
  402258:	not    BYTE PTR [edi+0x50]
  40225b:	lds    ebp,FWORD PTR [ebp+0xa]
  40225e:	(bad)  
  402260:	push   edi
  402261:	out    dx,eax
  402262:	mov    cl,0xaf
  402264:	jno    0x402204
  402266:	faddp  st(0),st
  402268:	xor    ecx,DWORD PTR [esi+eax*4-0x48689966]
  40226f:	cmc    
  402270:	mov    edx,0x974d54d3
  402275:	call   0xa2b3e533
  40227a:	(bad)  
  40227b:	iret   
  40227c:	daa    
  40227d:	sub    edi,eax
  40227f:	push   ds
  402280:	stc    
  402281:	ret    
  402282:	push   ds
  402283:	in     al,0xbd
  402285:	fs cmp ah,0x5f
  402289:	and    ebx,edi
  40228b:	(bad)  
  40228c:	pop    esi
  40228d:	jl     0x402269
  40228f:	arpl   WORD PTR fs:[eax+0x45daadf5],dx
  402296:	les    esp,FWORD PTR [ecx+0x1c38c47f]
  40229c:	mov    ?,edi
  40229e:	inc    ebp
  40229f:	(bad)  {k4}{z}
  4022a4:	fisttp WORD PTR [ebp-0x3bf38ef]
  4022aa:	leave  
  4022ab:	scas   al,BYTE PTR es:[edi]
  4022ac:	dec    eax
  4022ad:	imul   ebp,DWORD PTR [edi-0x2d2eb3be],0x97f3f519
  4022b7:	mov    dl,0x61
  4022b9:	add    DWORD PTR [ecx],ebp
  4022bb:	add    BYTE PTR [esi],al
  4022bd:	sub    eax,0x38af1fe7
  4022c2:	add    ecx,DWORD PTR ds:0xed103ba5
  4022c8:	dec    esi
  4022c9:	add    al,0xbd
  4022cb:	icebp  
  4022cc:	call   0x350a:0x535578df
  4022d3:	outs   dx,BYTE PTR ds:[esi]
  4022d4:	sbb    DWORD PTR [eax+ebx*4+0x45],esp
  4022d8:	mov    ah,0xdc
  4022da:	mov    esi,DWORD PTR [ecx+eiz*2]
  4022dd:	daa    
  4022de:	mov    ss,ebx
  4022e0:	outs   dx,BYTE PTR ds:[esi]
  4022e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022e2:	sub    dl,ch
  4022e4:	mov    dh,0x9a
  4022e6:	xchg   DWORD PTR [esi+0x30],ecx
  4022e9:	stc    
  4022ea:	int3   
  4022eb:	call   0xc51b2ec9
  4022f0:	in     eax,0x40
  4022f2:	mov    esp,gs
  4022f4:	or     al,0x3
  4022f6:	out    0xc0,eax
  4022f8:	and    ebp,DWORD PTR [ecx-0x6bc793c7]
  4022fe:	xchg   esi,eax
  4022ff:	cli    
  402300:	pop    esp
  402301:	imul   esi,DWORD PTR [eax+0x68825bd2],0x39
  402308:	retf   
  402309:	mov    edi,0x452340a
  40230e:	xor    eax,0xf62fbb8f
  402313:	ret    
  402314:	or     DWORD PTR [ebp+0x1c],0xd1d8c417
  40231b:	loop   0x40235e
  40231d:	in     eax,dx
  40231e:	xor    BYTE PTR [eax-0xcede739],bl
  402324:	(bad)  
  402325:	xor    al,BYTE PTR [edi-0x1d]
  402328:	adc    al,0x9f
  40232a:	jnp    0x40233e
  40232c:	ret    
  40232d:	push   esi
  40232e:	and    dh,dh
  402330:	js     0x40234c
  402332:	lock pusha 
  402334:	sub    eax,0xb6def599
  402339:	push   edx
  40233a:	enter  0x46e1,0x6b
  40233e:	mov    WORD PTR gs:[ecx-0xa99d21a],es
  402345:	fistp  DWORD PTR [ecx+0x46]
  402348:	hlt    
  402349:	inc    ebx
  40234a:	xor    eax,ebp
  40234c:	push   0xb000fcb4
  402351:	scas   eax,DWORD PTR es:[edi]
  402352:	push   ecx
  402353:	pushf  
  402354:	pop    es
  402355:	ja     0x40233d
  402357:	aad    0x50
  402359:	arpl   WORD PTR [ecx-0x28],cx
  40235c:	inc    ecx
  40235d:	cmp    eax,0x1b530dea
  402362:	cmp    ecx,esp
  402364:	push   es
  402365:	fisttp QWORD PTR [eax-0x44]
  402368:	sbb    al,0xff
  40236a:	inc    ecx
  40236b:	jmp    0x2455eeb4
  402370:	xchg   ebp,eax
  402371:	mov    WORD PTR [bx],?
  402374:	ss and eax,0x3d3c6b4
  40237a:	aas    
  40237b:	add    ecx,ecx
  40237d:	push   ebp
  40237e:	loop   0x4023e9
  402380:	push   esp
  402381:	test   al,0x5f
  402383:	pop    edx
  402384:	stos   DWORD PTR es:[edi],eax
  402385:	mov    dh,0x40
  402387:	into   
  402388:	popf   
  402389:	cdq    
  40238a:	jmp    0x4023f0
  40238c:	dec    esi
  40238d:	ret    0x768b
  402390:	pop    ds
  402391:	cmp    DWORD PTR [ebx+edi*8],esi
  402394:	bswap  ebp
  402396:	cmp    al,0x7b
  402398:	(bad)  
  402399:	sbb    eax,0x4ab32e2d
  40239e:	cmc    
  40239f:	jns    0x40238d
  4023a1:	mov    BYTE PTR [esi+0x3f0a5dec],ah
  4023a7:	inc    ebx
  4023a8:	fisub  WORD PTR [ebx+0x1e]
  4023ab:	inc    edx
  4023ac:	jmp    0xf2f4411b
  4023b1:	in     al,dx
  4023b2:	add    DWORD PTR [eax+0x4fccd351],edx
  4023b8:	push   esi
  4023b9:	adc    eax,0xda8e6d7b
  4023be:	dec    ebx
  4023bf:	aad    0xd7
  4023c1:	fwait
  4023c2:	inc    eax
  4023c3:	jb     0x4023b6
  4023c5:	add    BYTE PTR [ebx+eax*8+0x68],0xbb
  4023ca:	and    BYTE PTR [ebx-0x15],dh
  4023cd:	fwait
  4023ce:	xor    edi,0x4d0974dc
  4023d4:	popf   
  4023d5:	rcr    DWORD PTR [eax-0x17a37f27],1
  4023db:	pop    edi
  4023dc:	push   0xfd9d4461
  4023e1:	jne    0x4023d9
  4023e3:	and    DWORD PTR [esi],ecx
  4023e5:	dec    eax
  4023e6:	jg     0x40245d
  4023e8:	sar    BYTE PTR [eax-0x16b78e32],1
  4023ee:	test   al,0xce
  4023f0:	dec    eax
  4023f1:	push   ebp
  4023f2:	retf   
  4023f3:	out    0x1c,al
  4023f5:	lock loope 0x4023d9
  4023f8:	stos   DWORD PTR es:[edi],eax
  4023f9:	xchg   edx,eax
  4023fa:	pop    ebp
  4023fb:	mov    ah,0x46
  4023fd:	cwde   
  4023fe:	int3   
  4023ff:	shl    DWORD PTR [esi+0xad7a893],0x3e
  402406:	ins    BYTE PTR es:[edi],dx
  402407:	add    eax,0x1315dd83
  40240c:	lods   eax,DWORD PTR ds:[esi]
  40240d:	mov    ebx,DWORD PTR [edi]
  40240f:	mov    ebx,0xa472efe7
  402414:	inc    esp
  402415:	retf   0x391f
  402418:	mov    es,WORD PTR [ebx-0x1d]
  40241b:	icebp  
  40241c:	xchg   esi,eax
  40241d:	jmp    0x25789f7d
  402422:	sbb    bh,0x8b
  402425:	xor    BYTE PTR [edx],ah
  402427:	ret    
  402428:	lods   eax,DWORD PTR ds:[esi]
  402429:	gs pop esi
  40242b:	dec    edx
  40242c:	add    ecx,ecx
  40242e:	sbb    eax,0x93ba0976
  402433:	mov    bh,0xa5
  402435:	mov    dl,0x41
  402437:	jl     0x402429
  402439:	adc    esi,DWORD PTR [eax+0x1]
  40243c:	xchg   esi,eax
  40243d:	sar    BYTE PTR [ebp+0x72],cl
  402440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402441:	ffree  st(3)
  402443:	(bad)  
  402444:	cmp    eax,edi
  402446:	mov    ds:0x3be8efbb,al
  40244b:	mov    ebx,0x5919f310
  402450:	add    DWORD PTR [edi-0x5b6421ef],esi
  402456:	cmp    bh,BYTE PTR [eax]
  402458:	(bad)  
  402459:	call   0x59b:0xdf8ad680
  402460:	sbb    BYTE PTR ds:0xfdd60eec,al
  402466:	(bad)  
  402467:	mov    edx,0x48e676b7
  40246c:	add    DWORD PTR [eax+0x750e1c84],eax
  402472:	fsub   DWORD PTR [ecx]
  402474:	push   ss
  402475:	cmp    dl,ah
  402477:	mov    edx,0x3770be4b
  40247c:	push   0xb
  40247e:	sub    cl,0xc9
  402481:	loope  0x40244a
  402483:	cdq    
  402484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402485:	popa   
  402486:	(bad)  
  402487:	imul   edx,ebp,0xcee8874e
  40248d:	pshufw mm6,QWORD PTR fs:[esi+0x53],0xfb
  402493:	adc    BYTE PTR [esi],ch
  402495:	test   al,0x57
  402497:	and    ecx,DWORD PTR [edx-0x50]
  40249a:	pop    ss
  40249b:	jge    0x40249e
  40249d:	retf   0x1497
  4024a0:	jmp    0x221b:0xd88b8a71
  4024a7:	shr    al,1
  4024a9:	ins    BYTE PTR es:[edi],dx
  4024aa:	push   ds
  4024ab:	jbe    0x402432
  4024ad:	shl    BYTE PTR [esi-0x5d],0x4a
  4024b1:	mov    bh,0x98
  4024b3:	fmul   QWORD PTR [esi]
  4024b5:	mov    dh,0xdc
  4024b7:	mov    ds:0xa55c1e98,eax
  4024bc:	inc    ebx
  4024bd:	fwait
  4024be:	pop    edx
  4024bf:	and    BYTE PTR [ecx-0x6e],0x51
  4024c3:	popf   
  4024c4:	dec    eax
  4024c5:	retf   0x456a
  4024c8:	sbb    cl,BYTE PTR [ecx+0x7]
  4024cb:	gs js  0x40245e
  4024ce:	inc    edi
  4024cf:	mov    esp,0x29457f65
  4024d4:	outs   dx,BYTE PTR ds:[esi]
  4024d5:	xor    BYTE PTR [ebx+0x6f7132bc],ch
  4024db:	dec    esi
  4024dc:	sub    BYTE PTR [eax+edi*2+0x3b],bh
  4024e0:	jp     0x402542
  4024e2:	call   0xa7a3:0xf2dc1486
  4024e9:	sub    ah,BYTE PTR [ecx+0x4a]
  4024ec:	pop    esi
  4024ed:	loop   0x402560
  4024ef:	cli    
  4024f0:	setne  BYTE PTR [ecx-0x79]
  4024f4:	dec    eax
  4024f5:	and    bh,BYTE PTR [ebp-0x43]
  4024f8:	outs   dx,BYTE PTR ds:[esi]
  4024f9:	repz mov dh,0xdb
  4024fc:	lock clc 
  4024fe:	push   0x8c1c975c
  402503:	jnp    0x4024ee
  402505:	loopne 0x4024c0
  402507:	das    
  402508:	shr    al,0x2c
  40250b:	das    
  40250c:	and    eax,0x2951f2b7
  402511:	push   ecx
  402512:	outs   dx,BYTE PTR ds:[esi]
  402513:	cmp    al,0xb3
  402515:	push   ebx
  402516:	inc    ebp
  402517:	jge    0x4024aa
  402519:	mov    cl,0xf6
  40251b:	cwde   
  40251c:	std    
  40251d:	and    edx,esp
  40251f:	fdiv   DWORD PTR [ebp+0x224382bf]
  402525:	xor    cl,bh
  402527:	sar    BYTE PTR [ecx+0x6c],cl
  40252a:	inc    esp
  40252b:	xchg   DWORD PTR [ebp+0x1b1908f1],edx
  402531:	sub    al,0x8b
  402533:	int3   
  402534:	cmp    DWORD PTR [ebx],esi
  402536:	mov    ebp,?
  402538:	daa    
  402539:	in     eax,dx
  40253a:	dec    ecx
  40253b:	add    al,0xb0
  40253d:	xor    dl,BYTE PTR [ebp-0x2f6bff6c]
  402543:	mov    ds:0xfe87d38d,eax
  402548:	icebp  
  402549:	pop    ebx
  40254a:	inc    ebx
  40254b:	or     ebp,0x477cf498
  402551:	sahf   
  402552:	jp     0x40252f
  402554:	sbb    al,0x44
  402556:	mov    dl,0xe5
  402558:	inc    ebp
  402559:	jmp    0x374956
  40255e:	mov    edi,0x64d8ff08
  402563:	ret    0xa254
  402566:	push   ebx
  402567:	xchg   esi,eax
  402568:	lods   eax,DWORD PTR ds:[esi]
  402569:	pop    esp
  40256a:	and    dh,BYTE PTR [ebp+0xcae919]
  402570:	imul   ecx,DWORD PTR [ebp-0x3d32e70],0x7e
  402577:	bnd je 0x40252d
  40257a:	clc    
  40257b:	and    eax,0x82829321
  402580:	xchg   esi,eax
  402581:	mov    dh,0x3d
  402583:	push   ebp
  402584:	pop    ecx
  402585:	cmp    cl,BYTE PTR [edx]
  402587:	mov    dl,0x7c
  402589:	mov    bl,0xa6
  40258b:	and    al,0x82
  40258d:	outs   dx,DWORD PTR ds:[esi]
  40258e:	mov    edi,DWORD PTR [eax+esi*8-0x4476ff02]
  402595:	and    DWORD PTR [eax-0x3b9dd828],0x4cfe9fec
  40259f:	push   es
  4025a0:	pop    eax
  4025a1:	mov    ds:0x36238eb3,eax
  4025a6:	ret    
  4025a7:	sbb    dh,BYTE PTR [esi+0x8]
  4025aa:	inc    esi
  4025ab:	in     eax,dx
  4025ac:	cmp    BYTE PTR [edi-0x80],0xed
  4025b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025b1:	mov    ah,0x2
  4025b3:	scas   al,BYTE PTR es:[edi]
  4025b4:	ret    0xe85c
  4025b7:	adc    bh,bh
  4025b9:	dec    ebp
  4025ba:	ja     0x402638
  4025bc:	jmp    0x402588
  4025be:	stos   DWORD PTR es:[edi],eax
  4025bf:	jbe    0x402570
  4025c1:	jmp    0x402631
  4025c3:	dec    esp
  4025c4:	mov    DWORD PTR [edi+0x29bab7ca],ebx
  4025ca:	add    eax,0x63d366b2
  4025cf:	gs retf 
  4025d1:	test   eax,0x1849d74d
  4025d6:	pusha  
  4025d7:	add    eax,0xd72e9f6
  4025dc:	out    dx,al
  4025dd:	js     0x4025de
  4025df:	fsubr  QWORD PTR [edi+0x25]
  4025e2:	adc    BYTE PTR [ecx+0x26],bl
  4025e5:	addr16 jae 0x4025e3
  4025e8:	icebp  
  4025e9:	fmul   st,st(4)
  4025eb:	mov    ch,0x34
  4025ed:	leave  
  4025ee:	aad    0xbb
  4025f0:	stos   BYTE PTR es:[edi],al
  4025f1:	and    edi,eax
  4025f3:	mov    al,0xd8
  4025f5:	jmp    0x402649
  4025f7:	into   
  4025f8:	rcl    BYTE PTR [ebx],cl
  4025fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025fb:	out    0x3f,eax
  4025fd:	adc    DWORD PTR [edi+ecx*4+0x15],edx
  402601:	and    esp,DWORD PTR [ecx]
  402603:	add    al,0xd0
  402605:	push   esi
  402606:	das    
  402607:	clc    
  402608:	xchg   ebp,eax
  402609:	jne    0x40265b
  40260b:	push   cs
  40260c:	test   eax,0x88cec7f3
  402611:	cld    
  402612:	mov    esi,0x952e268d
  402617:	pop    ebx
  402618:	xchg   ebx,eax
  402619:	ins    DWORD PTR es:[edi],dx
  40261a:	pop    ecx
  40261b:	je     0x4025e5
  40261d:	pop    edi
  40261e:	cs clc 
  402620:	and    eax,0x512f91ff
  402625:	test   al,0xeb
  402627:	mov    ah,0x9e
  402629:	data16 (bad) 
  40262b:	lods   al,BYTE PTR ds:[esi]
  40262c:	aas    
  40262d:	ja     0x402649
  40262f:	xchg   edx,eax
  402630:	aas    
  402631:	out    0x13,al
  402633:	add    BYTE PTR [esi-0x20],cl
  402636:	scas   al,BYTE PTR es:[edi]
  402637:	out    dx,al
  402638:	fnsave [eax+0x6e]
  40263b:	xchg   esi,eax
  40263c:	push   cs
  40263d:	nop
  40263e:	fcomp  DWORD PTR [edi-0x21]
  402641:	and    BYTE PTR [edi],bl
  402643:	and    dh,BYTE PTR [esi+eiz*2-0x2c]
  402647:	mov    BYTE PTR [edx-0x46],0x50
  40264b:	adc    eax,0xd76322f7
  402650:	sub    DWORD PTR [ebx],edx
  402652:	lock sbb ch,BYTE PTR [ebp-0x403d7a2f]
  402659:	lods   al,BYTE PTR ds:[esi]
  40265a:	add    eax,0x26679524
  40265f:	mov    eax,ds:0x36e8e9bc
  402664:	mov    DWORD PTR [esi+0x66],eax
  402667:	dec    ebx
  402668:	jecxz  0x402696
  40266a:	mov    ch,0x7d
  40266c:	push   esi
  40266d:	mov    ebp,0x80f661ed
  402672:	cmp    ecx,eax
  402674:	stos   DWORD PTR es:[edi],eax
  402675:	jmp    0x581c:0x8cb24062
  40267c:	leave  
  40267d:	jns    0x4026e1
  40267f:	fbld   TBYTE PTR [ebx]
  402681:	mov    ecx,0x7ceb96dd
  402686:	outs   dx,DWORD PTR ds:[esi]
  402687:	sub    DWORD PTR [eax-0x7c],esp
  40268a:	mov    eax,ds:0xbcb93553
  40268f:	inc    edi
  402690:	pop    edi
  402691:	outs   dx,DWORD PTR ds:[esi]
  402692:	jge    0x4026fd
  402694:	sub    DWORD PTR [ebx+edx*2+0xb],0x26c26eaa
  40269c:	sar    BYTE PTR [ecx-0xebf4fa2],0x9f
  4026a3:	xor    BYTE PTR [edx+0x4771a842],cl
  4026a9:	push   edi
  4026aa:	pop    esi
  4026ab:	(bad)
  4026ae:	cmc    
  4026af:	mov    eax,ds:0xa78fee39
  4026b4:	add    ch,ch
  4026b6:	sti    
  4026b7:	sbb    al,0xc2
  4026b9:	push   edi
  4026ba:	retf   
  4026bb:	stos   BYTE PTR es:[edi],al
  4026bc:	jmp    0x7278:0x4476c7d9
  4026c3:	add    edx,esi
  4026c5:	mov    edx,0x25d7c622
  4026ca:	push   edi
  4026cb:	adc    al,0xc6
  4026cd:	mov    esi,DWORD PTR [eax]
  4026cf:	sub    ebp,eax
  4026d1:	(bad)  
  4026d2:	bnd ret 0xeaa3
  4026d6:	test   BYTE PTR [edi],0xbe
  4026d9:	mov    ch,0x87
  4026db:	pop    edi
  4026dc:	out    dx,al
  4026dd:	mov    ?,WORD PTR [esp+edx*1+0x4dbfe095]
  4026e4:	nop
  4026e5:	jl     0x40273b
  4026e7:	add    cl,BYTE PTR [ebp-0x6f9a30d]
  4026ed:	clc    
  4026ee:	fist   DWORD PTR [ecx-0x60c630f8]
  4026f4:	retf   0x92c5
  4026f7:	xchg   esi,eax
  4026f8:	jae    0x402751
  4026fa:	leave  
  4026fb:	pop    ss
  4026fc:	and    edi,edx
  4026fe:	fcomp  st(1)
  402700:	pop    edx
  402701:	or     esp,DWORD PTR [eax+esi*8+0x29]
  402705:	mov    BYTE PTR [ebx+eax*2-0x5d85b7d3],al
  40270c:	add    DWORD PTR [ebp+0xfd021fa],edx
  402712:	dec    ebx
  402713:	inc    ebp
  402714:	xchg   BYTE PTR cs:[edx],ah
  402717:	jno    0x402737
  402719:	and    DWORD PTR [esi],ebx
  40271b:	aam    0x2a
  40271d:	(bad)  
  40271e:	mov    bl,0xc5
  402720:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402721:	clc    
  402722:	aam    0xaa
  402724:	jecxz  0x40278d
  402726:	daa    
  402727:	cmp    eax,0xcd9ecaa1
  40272c:	sbb    eax,0x59396702
  402731:	(bad)  
  402732:	cmp    eax,0xac50d32c
  402737:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402739:	push   0xffffffce
  40273b:	jbe    0x4026e7
  40273d:	shl    BYTE PTR [edx],cl
  40273f:	pop    ss
  402740:	fs pop esp
  402742:	xor    ebx,esp
  402744:	enter  0x729f,0x7b
  402748:	jns    0x402778
  40274a:	pop    edx
  40274b:	mov    edi,0x9c90f219
  402750:	out    0x21,al
  402752:	jmp    DWORD PTR [ebx+0x36cde244]
  402758:	fsubr  QWORD PTR [esi]
  40275a:	rcl    edi,0xdf
  40275d:	loopne 0x4026e2
  40275f:	pop    eax
  402760:	push   es
  402761:	das    
  402762:	lods   al,BYTE PTR ds:[esi]
  402763:	aad    0xa8
  402765:	and    esi,DWORD PTR [ecx]
  402767:	xchg   BYTE PTR ds:0xbed44e1d,ah
  40276d:	push   ebp
  40276e:	xor    esp,edi
  402770:	xor    al,0xc2
  402772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402773:	retf   
  402774:	aas    
  402775:	add    eax,0x2d7e2a1a
  40277a:	mov    ah,0xb0
  40277c:	push   ds
  40277d:	jl     0x402716
  40277f:	xchg   ebp,eax
  402780:	push   ecx
  402781:	(bad)  
  402782:	(bad)  
  402783:	shr    ah,cl
  402785:	jnp    0x4027ac
  402787:	ins    DWORD PTR es:[edi],dx
  402788:	jle    0x402723
  40278a:	or     dl,bl
  40278c:	push   es
  40278d:	push   edi
  40278e:	fucomp st(1)
  402790:	(bad)  
  402791:	jo     0x402714
  402793:	mov    bh,bh
  402795:	test   BYTE PTR [ebx-0x7d83c28b],cl
  40279b:	lds    ebp,FWORD PTR [edi-0x7daf55c]
  4027a1:	les    esp,FWORD PTR [edx-0x19]
  4027a4:	in     eax,dx
  4027a5:	aaa    
  4027a6:	mov    ds:0x75a54059,eax
  4027ab:	or     BYTE PTR [esi+ecx*2],al
  4027ae:	xchg   ecx,eax
  4027af:	ins    BYTE PTR es:[edi],dx
  4027b0:	not    bl
  4027b2:	std    
  4027b3:	out    0xd7,al
  4027b5:	neg    DWORD PTR [ecx+0x7a]
  4027b8:	ret    
  4027b9:	ror    DWORD PTR [edi-0x48c0ce9b],1
  4027bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c0:	fldenv [edx+0x13]
  4027c3:	add    al,0x2c
  4027c5:	aaa    
  4027c6:	jb     0x40278a
  4027c8:	add    DWORD PTR [edx-0x1084473d],0xffffffdc
  4027cf:	push   ebx
  4027d0:	call   0x6158:0xaf6d144b
  4027d7:	ret    0xd802
  4027da:	ficomp DWORD PTR [edi+0x15d7bfa6]
  4027e0:	aas    
  4027e1:	push   ds
  4027e2:	push   ebx
  4027e3:	sahf   
  4027e4:	dec    ebp
  4027e5:	retf   0xeadd
  4027e8:	inc    esp
  4027e9:	mov    bh,0x70
  4027eb:	cmp    BYTE PTR [ebx],al
  4027ed:	mov    ecx,0x55591614
  4027f2:	push   ecx
  4027f3:	xchg   esi,eax
  4027f4:	cmp    dh,BYTE PTR [ecx+0x6e]
  4027f7:	mov    fs,edi
  4027f9:	dec    esp
  4027fa:	add    BYTE PTR [eax],al
  4027fc:	jns    0x402796
  4027fe:	sub    al,0xf8
  402800:	add    al,0x69
  402802:	fiadd  WORD PTR [edi]
  402804:	mov    ds:0x6356394f,al
  402809:	pop    esp
  40280a:	mov    ecx,0xb8234f7
  40280f:	sbb    BYTE PTR [edi],bh
  402811:	sbb    cl,BYTE PTR [ecx+0x33d261ee]
  402817:	cwde   
  402818:	hlt    
  402819:	fwait
  40281a:	jbe    0x4027b7
  40281c:	dec    ebx
  40281d:	jns    0x402858
  40281f:	ss xchg edi,eax
  402821:	push   ds
  402822:	jae    0x40283e
  402824:	jle    0x4027d0
  402826:	aam    0x9
  402828:	inc    ecx
  402829:	inc    edi
  40282a:	add    ebx,DWORD PTR [edi]
  40282c:	or     DWORD PTR ds:0x7a5fc91d,0xffffffe3
  402833:	stos   BYTE PTR es:[edi],al
  402834:	dec    esi
  402835:	daa    
  402836:	std    
  402837:	fs in  al,0x77
  40283a:	mov    dh,0xde
  40283c:	mov    ch,0xbf
  40283e:	cwde   
  40283f:	sahf   
  402840:	in     eax,0x4
  402842:	in     eax,dx
  402843:	xchg   ecx,eax
  402844:	sub    ch,ch
  402846:	mov    ebx,0xed7dd6eb
  40284b:	push   edx
  40284c:	lahf   
  40284d:	push   esi
  40284e:	xlat   BYTE PTR ds:[ebx]
  40284f:	fisttp QWORD PTR [ebp+0xc]
  402852:	pop    edi
  402853:	fstp   DWORD PTR [ebx+0xde69d16]
  402859:	clc    
  40285a:	pop    es
  40285b:	lea    edx,[edi+0x50df10af]
  402861:	aam    0x63
  402863:	out    dx,al
  402864:	push   0xffffffb0
  402866:	icebp  
  402867:	int3   
  402868:	ins    DWORD PTR es:[edi],dx
  402869:	in     eax,dx
  40286a:	inc    ebx
  40286b:	push   ss
  40286c:	leave  
  40286d:	cli    
  40286e:	xchg   esp,eax
  40286f:	mov    edi,DWORD PTR [ebp-0x1104f17c]
  402875:	mov    bh,ch
  402877:	sbb    BYTE PTR [ecx+esi*2+0x37199755],bl
  40287e:	mov    ebx,0x8d661e49
  402883:	mov    cl,0x76
  402885:	mov    ch,0xc2
  402887:	mov    eax,ds:0xe96ab30
  40288c:	and    eax,0x69e720c1
  402891:	lahf   
  402892:	inc    ecx
  402893:	mov    cl,0xfb
  402895:	pop    es
  402896:	jmp    0x402905
  402898:	xor    esp,edi
  40289a:	push   ds
  40289b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40289c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40289d:	jmp    0x402890
  40289f:	in     eax,dx
  4028a0:	inc    ecx
  4028a1:	cmp    edi,ebx
  4028a3:	mov    edi,0xed4dcb00
  4028a8:	iret   
  4028a9:	jmp    0x5a00:0xc10a718e
  4028b0:	(bad)  
  4028b1:	shr    BYTE PTR [edi],1
  4028b3:	in     eax,dx
  4028b4:	icebp  
  4028b5:	adc    DWORD PTR [ebx],eax
  4028b7:	add    al,0x7
  4028b9:	adc    DWORD PTR [ecx],eax
  4028bb:	cmp    ecx,ebp
  4028bd:	add    eax,0xf2daf0cc
  4028c2:	hlt    
  4028c3:	xchg   edx,eax
  4028c4:	or     BYTE PTR [edi-0x788a6f72],dl
  4028ca:	and    DWORD PTR [esi],ebx
  4028cc:	dec    ebx
  4028cd:	js     0x4028d8
  4028cf:	test   DWORD PTR [ebx],edx
  4028d1:	out    0x29,al
  4028d3:	jl     0x402945
  4028d5:	rcl    BYTE PTR [edi+0x5a],0x75
  4028d9:	jns    0x402860
  4028db:	or     DWORD PTR [eax],0x3e
  4028de:	mov    ecx,0x2afa8c92
  4028e3:	push   ebx
  4028e4:	fistp  WORD PTR [esp+ebp*1]
  4028e7:	pop    edi
  4028e8:	arpl   WORD PTR ds:0xccc0e2be,sp
  4028ee:	mov    dl,0x60
  4028f0:	cli    
  4028f1:	lahf   
  4028f2:	nop
  4028f3:	push   ss
  4028f4:	fcmovbe st,st(1)
  4028f6:	xchg   esi,eax
  4028f7:	cli    
  4028f8:	push   ebx
  4028f9:	xor    edi,DWORD PTR [edi-0x72e04cba]
  4028ff:	dec    esi
  402900:	push   es
  402901:	push   esi
  402902:	data16 mov al,0x72
  402905:	mov    ch,0x31
  402907:	dec    esi
  402908:	fcomp  DWORD PTR [ebp+0xafca0d5]
  40290e:	bnd jnp 0x40292b
  402911:	sub    BYTE PTR [edi+0x54],bh
  402914:	aad    0xb7
  402916:	xor    al,0x8
  402918:	aas    
  402919:	dec    ebx
  40291a:	mov    esi,0xb80866e3
  40291f:	mov    ebx,0x99913065
  402924:	xchg   esp,eax
  402925:	and    eax,DWORD PTR [edi-0x2014fd4a]
  40292b:	pop    edi
  40292c:	(bad)  [edi-0x56]
  40292f:	sbb    esp,DWORD PTR [ebp-0x67]
  402932:	fidiv  WORD PTR [edx-0x67]
  402935:	pop    eax
  402936:	sub    eax,0x4b92a9c9
  40293b:	jle    0x40292b
  40293d:	sub    eax,0x730c2423
  402942:	fwait
  402943:	xlat   BYTE PTR ds:[ebx]
  402944:	stc    
  402945:	jp     0x4028e2
  402947:	xchg   edi,eax
  402948:	xor    BYTE PTR [eax],0xe
  40294b:	push   0x196e4d67
  402950:	add    bh,BYTE PTR [eax]
  402952:	sbb    BYTE PTR [edx+0x6a],bl
  402955:	cdq    
  402956:	jns    0x402946
  402958:	mov    al,ds:0x597e0ac4
  40295d:	jnp    0x40292d
  40295f:	pop    edx
  402960:	js     0x402992
  402962:	pop    es
  402963:	fdivrp st(2),st
  402965:	sbb    eax,0x9e9cf275
  40296a:	aas    
  40296b:	add    ebx,DWORD PTR [esi+0x42]
  40296e:	out    0x8e,eax
  402970:	outs   dx,DWORD PTR ds:[esi]
  402971:	xor    al,0x55
  402973:	leave  
  402974:	lds    ecx,FWORD PTR [eax+0x5a9fe1a5]
  40297a:	jg     0x4029a8
  40297c:	gs in  al,0xd0
  40297f:	push   cs
  402980:	mov    bh,0xc2
  402982:	jecxz  0x4029b6
  402984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402985:	retf   0x92fb
  402988:	mov    edx,0xb79856e3
  40298d:	sti    
  40298e:	outs   dx,BYTE PTR ds:[esi]
  40298f:	sub    DWORD PTR [ecx+0x7349284b],esp
  402995:	or     BYTE PTR [ebx],bh
  402997:	add    BYTE PTR [edi],cl
  402999:	scas   eax,DWORD PTR es:[edi]
  40299a:	sub    al,0xf1
  40299c:	mov    ds:0xfe2a0046,al
  4029a1:	(bad)
  4029a4:	(bad)  
  4029a5:	xchg   esp,eax
  4029a6:	int3   
  4029a7:	(bad)  
  4029a8:	aad    0xe0
  4029aa:	loope  0x4029bd
  4029ac:	inc    esp
  4029ad:	dec    ebp
  4029ae:	sbb    al,0x3f
  4029b0:	ret    0xf948
  4029b3:	rcr    DWORD PTR [eax-0x658b8a72],cl
  4029b9:	cmp    DWORD PTR [ecx+esi*8+0x22],ebx
  4029bd:	aam    0x26
  4029bf:	dec    eax
  4029c0:	pop    edi
  4029c1:	cli    
  4029c2:	mov    edi,0x9b26bc10
  4029c7:	iret   
  4029c8:	jmp    0x54626461
  4029cd:	fidiv  DWORD PTR [edi+0x17c13da5]
  4029d3:	xchg   ebp,eax
  4029d4:	inc    ebx
  4029d5:	out    0xc1,eax
  4029d7:	xor    esi,DWORD PTR [eax]
  4029d9:	xor    al,0xd0
  4029db:	(bad)  
  4029dc:	jg     0x40296c
  4029de:	adc    DWORD PTR [eax+eax*4+0x18],ecx
  4029e2:	cmp    ecx,DWORD PTR [esi+0x5534e611]
  4029e8:	unpcklps xmm6,xmm2
  4029eb:	mov    ch,0xcf
  4029ed:	pop    ebp
  4029ee:	mov    ds:0xde77d93f,eax
  4029f3:	popf   
  4029f4:	js     0x4029ee
  4029f6:	jnp    0x4029b0
  4029f8:	popf   
  4029f9:	fs retf 
  4029fb:	ret    
  4029fc:	push   ecx
  4029fd:	cli    
  4029fe:	repnz in al,0x8
  402a01:	and    dh,bl
  402a03:	out    dx,al
  402a04:	or     DWORD PTR [esi],0xc
  402a07:	mov    edi,0x35e972d0
  402a0c:	rcl    DWORD PTR [esi+0x4ee512fc],cl
  402a12:	js     0x402a4b
  402a14:	popa   
  402a15:	or     BYTE PTR [eax-0x20],cl
  402a18:	loope  0x4029e7
  402a1a:	xchg   ebp,eax
  402a1b:	cvtpi2ps xmm6,mm6
  402a1e:	je     0x402a27
  402a20:	mov    ebp,DWORD PTR ds:0x380d5fa4
  402a26:	mov    al,0xa4
  402a28:	outs   dx,DWORD PTR ds:[esi]
  402a29:	jmp    0x402a73
  402a2b:	ss inc esp
  402a2d:	adc    al,0x7f
  402a2f:	jmp    0x4029b3
  402a31:	sub    al,0xa9
  402a33:	(bad)  
  402a34:	pop    ebp
  402a35:	lock cwde 
  402a37:	lea    esp,[edx-0x3b]
  402a3a:	xchg   al,bl
  402a3c:	out    dx,eax
  402a3d:	call   0xdee2:0x63baa239
  402a44:	test   DWORD PTR [ecx+0x393feef],ebx
  402a4a:	ret    
  402a4b:	loope  0x402a04
  402a4d:	mov    cl,BYTE PTR [ebp-0x18]
  402a50:	(bad)  
  402a51:	lahf   
  402a52:	or     BYTE PTR [ecx-0x16a524cd],0xdf
  402a59:	dec    esi
  402a5a:	xor    DWORD PTR [ecx],esi
  402a5c:	fistp  WORD PTR [ecx-0x6a]
  402a5f:	gs sub al,0x9d
  402a62:	ja     0x402a38
  402a64:	lea    esi,[eax+ecx*4]
  402a67:	dec    ecx
  402a68:	inc    edx
  402a69:	pushf  
  402a6a:	retf   
  402a6b:	stos   DWORD PTR es:[edi],eax
  402a6c:	stc    
  402a6d:	and    ah,ah
  402a6f:	xchg   edx,ebp
  402a71:	fld    TBYTE PTR [edi+0x70ab8b5]
  402a77:	jg     0x402aee
  402a79:	arpl   WORD PTR [edx],bx
  402a7b:	xchg   ebp,eax
  402a7c:	data16 in al,0xc9
  402a7f:	or     eax,0x17c2368a
  402a84:	dec    eax
  402a85:	iret   
  402a86:	icebp  
  402a87:	inc    edx
  402a88:	mov    eax,ebp
  402a8a:	repz mov dl,0xa7
  402a8d:	frstor [eax]
  402a8f:	push   ss
  402a90:	push   edi
  402a91:	ret    
  402a92:	push   ebx
  402a93:	js     0x402a90
  402a95:	gs add edi,ebp
  402a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a99:	sub    ah,BYTE PTR [ecx]
  402a9b:	clc    
  402a9c:	cmp    esp,esp
  402a9e:	mov    ah,0xe4
  402aa0:	sbb    eax,DWORD PTR [esi-0x313a74c0]
  402aa6:	sbb    eax,0xcfd85dd0
  402aab:	iret   
  402aac:	stos   BYTE PTR es:[edi],al
  402aad:	ds js  0x402a8b
  402ab0:	sbb    DWORD PTR [edx+ebx*8-0x74],0xffffffba
  402ab5:	stos   DWORD PTR es:[edi],eax
  402ab6:	popa   
  402ab7:	clc    
  402ab8:	cmp    BYTE PTR [esi-0x64],cl
  402abb:	xchg   edx,eax
  402abc:	fnstsw WORD PTR ds:0x7dd6566a
  402ac2:	pop    edx
  402ac3:	jg     0x402a7c
  402ac5:	cs jns 0x402b18
  402ac8:	push   ebx
  402ac9:	call   0xd1d2:0xb329472f
  402ad0:	mov    ds:0x97d50823,eax
  402ad5:	dec    ebx
  402ad6:	mov    eax,0xa905f309
  402adc:	mov    dl,0xe1
  402ade:	and    DWORD PTR cs:[ebx+0x224f01ad],0x3f
  402ae6:	(bad)  
  402ae7:	cli    
  402ae8:	test   ecx,0xe39fc582
  402aee:	dec    eax
  402aef:	mov    edi,cs
  402af1:	fwait
  402af2:	dec    ebx
  402af3:	inc    eax
  402af4:	mov    al,ds:0xf9f929e8
  402af9:	mov    ss,WORD PTR [edx]
  402afb:	pop    esi
  402afc:	jo     0x402b4a
  402afe:	mov    cl,0x1c
  402b00:	add    ch,BYTE PTR [ebx-0x56252ebf]
  402b06:	fidiv  WORD PTR [edx-0x2e9f0dc4]
  402b0c:	push   ss
  402b0d:	aas    
  402b0e:	ret    
  402b0f:	sbb    DWORD PTR [edi-0x756676f6],edi
  402b15:	xor    ebx,DWORD PTR [eax-0x6255a113]
  402b1b:	add    dh,BYTE PTR [eax]
  402b1d:	push   0x1b
  402b1f:	sub    edi,0xffffffec
  402b22:	nop
  402b23:	into   
  402b24:	mov    ebp,0xfa5ff269
  402b29:	mov    ch,0xc1
  402b2b:	imul   esi,DWORD PTR [ebx-0x1570bed7],0x582fc149
  402b35:	push   ecx
  402b36:	xchg   esi,eax
  402b37:	fimul  DWORD PTR [esi]
  402b39:	clc    
  402b3a:	sbb    DWORD PTR [edx+edx*2],0xe73c4c91
  402b41:	add    bl,BYTE PTR [eax+eiz*4]
  402b44:	gs ret 
  402b46:	shl    BYTE PTR [ecx+ebp*4+0x45],cl
  402b4a:	fwait
  402b4b:	mov    dl,0x1f
  402b4d:	push   edi
  402b4e:	pushf  
  402b4f:	ds (bad) 
  402b51:	inc    ax
  402b53:	and    al,0x4d
  402b55:	push   eax
  402b56:	cmp    dl,ch
  402b58:	test   DWORD PTR [ebx-0x10],ebp
  402b5b:	popa   
  402b5c:	cmp    ecx,DWORD PTR [edi+ebx*4-0x43]
  402b60:	pop    edi
  402b61:	inc    ebp
  402b62:	mov    esi,0xa6439258
  402b67:	imul   edi,edx,0x7bb2217b
  402b6d:	pop    esp
  402b6e:	jmp    0x8666:0x5517bd3e
  402b75:	jl     0x402b3e
  402b77:	out    0x67,eax
  402b79:	mov    BYTE PTR [esi-0x31f98e5e],ch
  402b7f:	(bad)  
  402b80:	push   0x209b6610
  402b85:	sbb    ah,ch
  402b87:	jnp    0x402c06
  402b89:	fst    DWORD PTR [esi]
  402b8b:	addr16 mov bh,0x8b
  402b8e:	into   
  402b8f:	sbb    eax,0xb241141b
  402b94:	add    al,bl
  402b96:	popa   
  402b97:	iret   
  402b98:	ret    0x3475
  402b9b:	jnp    0x402be5
  402b9d:	mov    esp,0x38a03d70
  402ba2:	jbe    0x402bcd
  402ba4:	out    0x5f,al
  402ba6:	je     0x402c15
  402ba8:	fidiv  WORD PTR [eax-0x282b9ca6]
  402bae:	outs   dx,DWORD PTR ds:[esi]
  402baf:	das    
  402bb0:	adc    DWORD PTR [edx+0x18707566],edx
  402bb6:	lods   eax,DWORD PTR ds:[esi]
  402bb7:	fdiv   DWORD PTR [edx-0x52d6612f]
  402bbd:	fisubr DWORD PTR [ecx*1+0x750beede]
  402bc4:	nop
  402bc5:	fdiv   DWORD PTR [edx]
  402bc7:	(bad)  
  402bc8:	adc    BYTE PTR [ebp-0x6eef38f3],ah
  402bce:	pop    esp
  402bcf:	loope  0x402c2f
  402bd1:	xchg   edi,eax
  402bd2:	pop    edx
  402bd3:	sub    DWORD PTR [edx],ebp
  402bd5:	int    0x50
  402bd7:	adc    bh,BYTE PTR [edx+ecx*1]
  402bda:	ss inc ecx
  402bdc:	ss cmc 
  402bde:	out    dx,al
  402bdf:	and    DWORD PTR [ebx-0x47],0xffffff91
  402be3:	cmp    eax,0x1d517c97
  402be8:	pop    edi
  402be9:	mov    al,0x5a
  402beb:	push   ebx
  402bec:	and    DWORD PTR [ecx+esi*1+0x10],edx
  402bf0:	push   esi
  402bf1:	js     0x402c64
  402bf3:	test   al,0xdf
  402bf5:	jmp    0xcbd3:0x2a8a85cf
  402bfc:	sbb    al,0xe
  402bfe:	mov    edx,0xdd47311b
  402c03:	xor    esp,DWORD PTR [ecx]
  402c05:	les    esp,FWORD PTR [edx-0x3e]
  402c08:	loopne 0x402bf7
  402c0a:	inc    esi
  402c0b:	xor    eax,0x1b826f6f
  402c10:	aad    0xa0
  402c12:	jb     0x402bd6
  402c14:	(bad)  [ecx+0x2]
  402c17:	es rol dh,cl
  402c1a:	inc    ecx
  402c1b:	xlat   BYTE PTR ds:[ebx]
  402c1c:	fmul   QWORD PTR [edx]
  402c1e:	sub    edi,DWORD PTR [ebx+0x51]
  402c21:	test   al,0x6f
  402c23:	sbb    eax,ebx
  402c25:	inc    esi
  402c26:	mov    eax,DWORD PTR [edx]
  402c28:	cmp    BYTE PTR [ecx],bl
  402c2a:	jmp    0xbead06c2
  402c2f:	rcr    BYTE PTR [edi+0x1152566a],1
  402c35:	xor    DWORD PTR [eax],esp
  402c37:	mov    ah,0x67
  402c39:	mov    bh,BYTE PTR [edi-0x2b]
  402c3c:	xor    eax,0x79353e56
  402c41:	out    dx,al
  402c42:	call   0xebd45c81
  402c47:	jecxz  0x402c1b
  402c49:	imul   esi,DWORD PTR [esi],0xfffffff9
  402c4c:	(bad)  
  402c4d:	outs   dx,BYTE PTR ds:[esi]
  402c4e:	mov    esp,0xcedf6455
  402c53:	test   DWORD PTR [eax+0x3f],esp
  402c56:	test   ch,bh
  402c58:	adc    eax,0x5a26f348
  402c5d:	mov    ch,BYTE PTR [ecx]
  402c5f:	sar    ebx,0x75
  402c62:	sti    
  402c63:	int    0x8a
  402c65:	mov    eax,ds:0xb0d0b8f2
  402c6a:	loop   0x402c08
  402c6c:	fs add al,0x43
  402c6f:	hlt    
  402c70:	adc    esi,DWORD PTR [ebp-0x20]
  402c73:	dec    eax
  402c74:	(bad)  
  402c75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c76:	and    BYTE PTR [ebx],ah
  402c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c79:	(bad)  
  402c7a:	mov    esp,0x1f2d1407
  402c7f:	mov    bh,0x89
  402c81:	cs mov eax,0x494b6276
  402c87:	ror    BYTE PTR [ebx],1
  402c89:	mov    DWORD PTR es:[ebx+0x3f20e7ad],edi
  402c90:	mov    ch,0x73
  402c92:	sahf   
  402c93:	add    eax,0xb16658e1
  402c98:	ins    BYTE PTR es:[edi],dx
  402c99:	inc    edi
  402c9a:	pop    ds
  402c9b:	sub    DWORD PTR [ecx+0x14],esi
  402c9e:	inc    esi
  402c9f:	xchg   edi,eax
  402ca0:	icebp  
  402ca1:	jb     0x402cd6
  402ca3:	adc    BYTE PTR [edi],dh
  402ca5:	in     eax,0x59
  402ca7:	pop    ecx
  402ca8:	adc    ecx,ebx
  402caa:	ret    0x9429
  402cad:	jo     0x402cb5
  402caf:	push   0x24
  402cb1:	jl     0x402c45
  402cb3:	(bad)  
  402cb4:	fadd   QWORD PTR [esp+eiz*8]
  402cb7:	in     eax,0xd2
  402cb9:	int3   
  402cba:	(bad)  
  402cbb:	push   edi
  402cbc:	loopne 0x402cca
  402cbe:	xor    eax,DWORD PTR [ebp-0x7ce5d391]
  402cc4:	xor    DWORD PTR [edi+0xf3e58e3],edi
  402cca:	fwait
  402ccb:	loope  0x402cbc
  402ccd:	push   ebx
  402cce:	cmp    eax,0x7d01047a
  402cd3:	mov    edi,0x2605471e
  402cd8:	inc    ecx
  402cd9:	int    0xf4
  402cdb:	push   edx
  402cdc:	dec    ebp
  402cdd:	int3   
  402cde:	mov    ecx,0x98ed41dd
  402ce3:	pop    edi
  402ce4:	ss aam 0xca
  402ce7:	mov    BYTE PTR [ecx],dl
  402ce9:	into   
  402cea:	pop    ebx
  402ceb:	mov    ecx,0xf523f226
  402cf0:	es sub eax,0x26b9f40
  402cf6:	sbb    ecx,DWORD PTR [esi]
  402cf8:	mov    ebx,DWORD PTR [edx+0x38bb1e9f]
  402cfe:	call   0x14e1:0x7f131fbf
  402d05:	mov    ebp,0xe6e67fe6
  402d0a:	ja     0x402d58
  402d0c:	inc    ebx
  402d0d:	or     BYTE PTR [edi-0x29],dh
  402d10:	mov    edi,0x9b85d373
  402d15:	enter  0xa730,0x37
  402d19:	pop    esi
  402d1a:	xor    bl,BYTE PTR [ebx+0x54]
  402d1d:	das    
  402d1e:	lea    eax,[ebx]
  402d20:	adc    ch,BYTE PTR [edi]
  402d22:	mov    ds:0x16ef83fc,al
  402d27:	cs ret 0x933a
  402d2b:	jnp    0x402d3a
  402d2d:	iret   
  402d2e:	out    dx,al
  402d2f:	(bad)  
  402d30:	int3   
  402d31:	sbb    DWORD PTR [ecx+0x53c55a07],ebp
  402d37:	ja     0x402d86
  402d39:	aam    0x6f
  402d3b:	push   edi
  402d3c:	dec    ebp
  402d3d:	sub    ah,bl
  402d3f:	inc    ebx
  402d40:	inc    edx
  402d41:	(bad)  
  402d42:	(bad)  
  402d43:	shl    DWORD PTR [ebx-0x1e9c548c],cl
  402d49:	lahf   
  402d4a:	clc    
  402d4b:	aas    
  402d4c:	ins    BYTE PTR es:[edi],dx
  402d4d:	je     0x402d62
  402d4f:	sub    ebx,DWORD PTR [edi]
  402d51:	xor    ebx,DWORD PTR [edx]
  402d53:	mov    ch,0xcc
  402d55:	mov    bh,0x9e
  402d57:	xor    ch,ch
  402d59:	sti    
  402d5a:	add    edx,eax
  402d5c:	and    al,0x32
  402d5e:	rcl    BYTE PTR [ebx-0x54],0xa4
  402d62:	add    ecx,DWORD PTR [esi-0x124c0e0a]
  402d68:	retf   0x81c2
  402d6b:	sbb    DWORD PTR [esi+0x5e],edi
  402d6e:	(bad)  
  402d6f:	call   DWORD PTR [edi-0x20]
  402d72:	jmp    0x402d3f
  402d74:	js     0x402de1
  402d76:	(bad)  
  402d77:	sub    BYTE PTR [esi+ebp*2],dh
  402d7a:	push   ebp
  402d7b:	(bad)  
  402d7d:	(bad)  
  402d7e:	cmp    eax,0x766bfe9a
  402d83:	and    ebp,DWORD PTR [edi+esi*1]
  402d86:	enter  0x73ae,0x6f
  402d8a:	mov    edi,DWORD PTR fs:[edi-0x2402e191]
  402d91:	jmp    0x402dc4
  402d93:	pop    ss
  402d94:	sub    DWORD PTR [eax+0x7c695fff],edi
  402d9a:	pop    ebp
  402d9b:	mov    ebx,0xcfe20bcf
  402da0:	test   DWORD PTR [esp+edi*4-0x6f],0x10f23d9
  402da8:	out    0xe8,eax
  402daa:	rcl    bl,1
  402dac:	jne    0x402df6
  402dae:	xor    al,0x99
  402db0:	push   cs
  402db1:	xlat   BYTE PTR ds:[ebx]
  402db2:	cmp    eax,0x700897f2
  402db7:	call   0x1bcc:0x4b699a6
  402dbe:	pop    ss
  402dbf:	lods   eax,DWORD PTR ds:[esi]
  402dc0:	add    bh,0xc7
  402dc3:	cmp    al,ah
  402dc5:	sti    
  402dc6:	cmp    ebp,DWORD PTR [ecx]
  402dc8:	sar    DWORD PTR [ebp-0x20],cl
  402dcb:	sbb    ecx,DWORD PTR [edi-0x69f40b7f]
  402dd1:	pop    esi
  402dd2:	push   edi
  402dd3:	test   eax,0x62abdb7a
  402dd8:	(bad)  
  402dd9:	imul   esp,DWORD PTR [esp+ebp*4+0x18],0x59
  402dde:	loop   0x402df8
  402de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de1:	push   0xfffffff5
  402de3:	pop    ebp
  402de4:	xchg   BYTE PTR [ecx-0x4dd0da0d],al
  402dea:	mov    edi,0x58b94a63
  402def:	jae    0x402e5e
  402df1:	xor    DWORD PTR [eax+0x2eac718],eax
  402df7:	mov    bh,0xa
  402df9:	jecxz  0x402da6
  402dfb:	in     eax,0x9
  402dfd:	lods   eax,DWORD PTR ds:[esi]
  402dfe:	sbb    eax,0x38bfdacc
  402e03:	aaa    
  402e04:	inc    eax
  402e05:	add    al,cl
  402e07:	mov    ebp,0x16301d61
  402e0c:	jo     0x402e27
  402e0e:	inc    ebp
  402e0f:	std    
  402e10:	(bad)  
  402e11:	fsub   DWORD PTR [edx]
  402e13:	leave  
  402e14:	sub    dh,dl
  402e16:	cwde   
  402e17:	sub    al,0xee
  402e19:	mov    ?,WORD PTR [edi+0x30b64bf0]
  402e1f:	hlt    
  402e20:	adc    al,0x1d
  402e22:	cmp    DWORD PTR [ebp-0x47b0c4d0],ebx
  402e28:	jnp    0x402e89
  402e2a:	fwait
  402e2b:	jg     0x402e62
  402e2d:	xchg   DWORD PTR [ebx+0x50],esi
  402e30:	call   0xe7f440
  402e35:	jecxz  0x402e93
  402e37:	fwait
  402e38:	push   es
  402e39:	sub    DWORD PTR [ebx+0x45e7b61c],ecx
  402e3f:	lods   eax,DWORD PTR ds:[esi]
  402e40:	inc    ebp
  402e41:	jl     0x402e45
  402e43:	xlat   BYTE PTR ds:[ebx]
  402e44:	jg     0x402e0f
  402e46:	mov    dh,0x2f
  402e48:	fisubr WORD PTR [edi]
  402e4a:	enter  0x3968,0x50
  402e4e:	jmp    0x402e95
  402e50:	and    BYTE PTR [ebx+0x20],dl
  402e53:	das    
  402e54:	cmp    al,0x6c
  402e56:	push   esi
  402e57:	mov    eax,ds:0x7fe51893
  402e5c:	push   edi
  402e5d:	push   esi
  402e5e:	push   eax
  402e5f:	pop    ds
  402e60:	cld    
  402e61:	retf   
  402e62:	fwait
  402e63:	sbb    BYTE PTR [ecx-0xb1c77d4],dl
  402e69:	xchg   esp,eax
  402e6a:	arpl   WORD PTR [ebp+0x4e],ax
  402e6d:	shl    DWORD PTR [ebx+0x62],cl
  402e70:	popa   
  402e71:	xor    dh,BYTE PTR fs:[edi]
  402e74:	pop    edx
  402e75:	add    eax,0xebd88e40
  402e7a:	push   0xffffffde
  402e7c:	pop    es
  402e7d:	mov    ecx,0x897eaedf
  402e82:	(bad)  
  402e83:	pushf  
  402e84:	pop    es
  402e85:	sub    BYTE PTR [ebx],bh
  402e87:	in     al,0x7a
  402e89:	jbe    0x402f07
  402e8b:	mov    ch,0x48
  402e8d:	(bad)  
  402e8e:	or     eax,0x40284cde
  402e93:	ret    
  402e94:	push   ss
  402e95:	xchg   DWORD PTR [esi],ecx
  402e97:	and    edx,DWORD PTR [edi-0xd]
  402e9a:	pop    ebp
  402e9b:	(bad)  [ecx]
  402e9d:	mov    eax,0xaf1e1277
  402ea2:	in     al,dx
  402ea3:	aas    
  402ea4:	inc    edi
  402ea5:	in     al,dx
  402ea6:	ds cwde 
  402ea8:	(bad)  
  402ea9:	sar    BYTE PTR [ebx+0x14a6992d],cl
  402eaf:	push   esp
  402eb0:	loopne 0x402e82
  402eb2:	jmp    0xe3bb:0xd58d6790
  402eb9:	mov    bl,0x10
  402ebb:	and    eax,0xfbf7718d
  402ec0:	leave  
  402ec1:	xchg   edi,eax
  402ec2:	pop    edx
  402ec3:	jl     0x402f3b
  402ec5:	ja     0x402ebd
  402ec7:	fist   DWORD PTR [eax+0x1]
  402eca:	(bad)  
  402ecb:	std    
  402ecc:	xor    DWORD PTR [ebx+0x28db2a0c],0x72ad3b22
  402ed6:	push   0xffffff9c
  402ed8:	pop    ds
  402ed9:	lods   eax,DWORD PTR ds:[esi]
  402eda:	xor    BYTE PTR [edi+0x5ba20cff],dl
  402ee0:	popf   
  402ee1:	mov    esp,0xb3d91408
  402ee6:	sbb    bl,BYTE PTR [ebp+0x58]
  402ee9:	xchg   DWORD PTR [edx],edi
  402eeb:	pusha  
  402eec:	lods   eax,DWORD PTR ds:[esi]
  402eed:	imul   edi,DWORD PTR [ecx],0xffffff84
  402ef0:	pop    edi
  402ef1:	pop    ecx
  402ef2:	jl     0x402e80
  402ef4:	das    
  402ef5:	xchg   DWORD PTR [edi+0x45a86365],edx
  402efb:	sahf   
  402efc:	push   cs
  402efd:	les    esi,FWORD PTR [ebx-0x53]
  402f00:	in     eax,0x53
  402f02:	loopne 0x402e84
  402f04:	push   edi
  402f05:	cmc    
  402f06:	mov    eax,0xa5714ae0
  402f0b:	add    eax,0x8dadffd
  402f10:	mov    esi,0x98c46709
  402f15:	pushf  
  402f16:	fadd   st(3),st
  402f18:	xor    esp,DWORD PTR [ecx+0x6c636432]
  402f1e:	rol    DWORD PTR [esi-0x227120a9],cl
  402f24:	dec    esi
  402f25:	xor    al,0x68
  402f27:	mov    edi,0x63f3fed6
  402f2c:	and    al,0x92
  402f2e:	xchg   ah,bh
  402f30:	fcom   QWORD PTR [ebx]
  402f32:	and    BYTE PTR [ecx],al
  402f34:	jb     0x402ec7
  402f36:	jb     0x402f74
  402f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f39:	(bad)  
  402f3a:	sub    eax,0x81a12653
  402f3f:	mov    ecx,ss
  402f41:	jb     0x402f36
  402f43:	pop    ebp
  402f44:	xor    cl,BYTE PTR [ecx+0x32]
  402f47:	or     ecx,DWORD PTR [ebx]
  402f49:	mov    ebx,0x5db73db7
  402f4e:	xor    ebx,esi
  402f50:	cmp    eax,0x24190de4
  402f55:	or     ebx,DWORD PTR [ecx+0x60cca113]
  402f5b:	inc    ebp
  402f5c:	in     eax,dx
  402f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5e:	adc    esp,DWORD PTR ds:[ebx-0x5c587c4d]
  402f65:	or     al,ch
  402f67:	mov    ds:0xd568145b,al
  402f6c:	mov    WORD PTR [eax+0x6a],gs
  402f6f:	lea    edi,[ebx]
  402f71:	gs int 0x93
  402f74:	popa   
  402f75:	(bad)
  402f7a:	(bad)  
  402f7b:	pop    ebp
  402f7c:	xchg   edi,eax
  402f7d:	jmp    0x402fc3
  402f7f:	outs   dx,DWORD PTR ds:[esi]
  402f80:	inc    edi
  402f81:	lods   al,BYTE PTR ds:[esi]
  402f83:	int    0x16
  402f85:	xchg   ecx,eax
  402f86:	jb     0x402ff9
  402f88:	out    dx,eax
  402f89:	jecxz  0x402f64
  402f8b:	cmp    eax,DWORD PTR [edi+0x37]
  402f8e:	mov    al,0xf6
  402f90:	aas    
  402f91:	es mov bh,0xa8
  402f94:	jns    0x402f5b
  402f96:	mov    ecx,0x364d3f85
  402f9b:	pusha  
  402f9c:	jl     0x402fcb
  402f9e:	push   ebx
  402f9f:	inc    esi
  402fa0:	and    esp,ebp
  402fa2:	(bad)
  402fa5:	icebp  
  402fa6:	test   al,0xca
  402fa8:	adc    al,0x9c
  402faa:	ja     0x40301b
  402fac:	fld    TBYTE PTR [eax]
  402fae:	add    ah,BYTE PTR [ecx-0x3007615d]
  402fb4:	mov    BYTE PTR [eax+eiz*8],cl
  402fb7:	popa   
  402fb8:	push   esi
  402fb9:	retf   
  402fba:	test   al,0x96
  402fbc:	popf   
  402fbd:	ret    
  402fbe:	jg     0x403002
  402fc0:	cmp    esi,DWORD PTR [esi+ebx*8-0x4be92c1a]
  402fc7:	cmp    ebx,ebx
  402fc9:	xor    DWORD PTR [edi+ebp*1+0x3d],ebx
  402fcd:	(bad)  
  402fce:	sbb    al,0xf2
  402fd0:	imul   edi,DWORD PTR [edi],0xffffffab
  402fd3:	mov    es,WORD PTR [eax-0x79084f8]
  402fd9:	lock mov cl,0x4f
  402fdc:	jae    0x402fc7
  402fde:	aaa    
  402fdf:	lea    eax,[eax*2+0x624f9357]
  402fe6:	jmp    0x403011
  402fe8:	aad    0x24
  402fea:	sbb    eax,0xa2f63da
  402fef:	push   0x68
  402ff1:	test   eax,0xda2a8f99
  402ff6:	ins    BYTE PTR es:[edi],dx
  402ff7:	dec    edi
  402ff8:	ror    BYTE PTR ds:0xcbfa9aa6,cl
  402ffe:	inc    eax
  402fff:	mov    edx,0x3aada450
  403004:	jne    0x402f91
  403006:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403007:	pop    esp
  403008:	mov    BYTE PTR [eax],0xb3
  40300b:	call   0x811f:0x2048a7ab
  403012:	xchg   ebp,edx
  403014:	adc    DWORD PTR [ebp+0x2],edx
  403017:	mov    BYTE PTR [eax+0x6f],bh
  40301a:	push   edi
  40301b:	jo     0x403089
  40301d:	ret    0xbebe
  403020:	dec    eax
  403021:	(bad)  
  403022:	mov    al,0xb2
  403024:	jns    0x402ff1
  403026:	mov    bl,0xba
  403028:	pop    edi
  403029:	pop    ecx
  40302a:	cmc    
  40302b:	or     eax,DWORD PTR [edx+0x23]
  40302e:	add    al,BYTE PTR [edx-0x41]
  403031:	mov    al,BYTE PTR [eax-0x5c1b1504]
  403037:	jnp    0x40303c
  403039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40303a:	cmp    ch,BYTE PTR [esi]
  40303c:	popf   
  40303d:	das    
  40303e:	or     edi,esp
  403040:	ins    DWORD PTR es:[edi],dx
  403041:	and    eax,0xca2c7ab8
  403046:	loope  0x403055
  403048:	out    0x51,eax
  40304a:	popf   
  40304b:	cld    
  40304c:	cli    
  40304d:	adc    eax,0xd5722617
  403052:	pop    es
  403053:	jg     0x403083
  403055:	pop    ebp
  403056:	dec    ecx
  403057:	(bad)  
  403058:	mov    ds:0xb067d663,eax
  40305d:	out    dx,eax
  40305e:	ror    BYTE PTR [edi+0x7e943004],1
  403064:	sub    DWORD PTR [ecx-0x537e064],0x8f589b51
  40306e:	shl    BYTE PTR [esi-0xd],cl
  403071:	xchg   esp,eax
  403072:	popa   
  403073:	xor    al,0xc1
  403075:	sub    BYTE PTR [ebx+0x748b6e28],ch
  40307b:	(bad)  
  40307c:	push   ss
  40307d:	mov    ebx,DWORD PTR [esi-0x5ac1abe0]
  403083:	mov    eax,0xc2dc0656
  403088:	dec    ecx
  403089:	pop    eax
  40308a:	fidivr DWORD PTR [esi]
  40308c:	cwde   
  40308d:	fldenv [ecx-0xe72212]
  403093:	xchg   esp,eax
  403094:	dec    esi
  403095:	pop    edi
  403096:	clc    
  403097:	arpl   WORD PTR [edx],si
  403099:	ret    0x7897
  40309c:	mov    ecx,esi
  40309e:	arpl   bp,ax
  4030a0:	xchg   ecx,eax
  4030a1:	mov    bl,0x7a
  4030a3:	in     eax,dx
  4030a4:	xchg   ebp,eax
  4030a5:	call   0xc8bc3e5b
  4030aa:	sbb    BYTE PTR [edi],ch
  4030ac:	pop    ebp
  4030ad:	pop    esp
  4030ae:	cmc    
  4030af:	imul   ebx,DWORD PTR [ecx-0x73],0xf39cb4de
  4030b6:	ds and eax,0x567da4c0
  4030bc:	dec    ebp
  4030bd:	fs std 
  4030bf:	cmp    esp,ebx
  4030c1:	mov    dl,0x48
  4030c3:	(bad)  
  4030c4:	sti    
  4030c5:	mov    ss,WORD PTR [esi+eax*2-0x6eca2eed]
  4030cc:	scas   eax,DWORD PTR es:[edi]
  4030cd:	idiv   eax
  4030cf:	test   esp,ebx
  4030d1:	mov    edx,0x297a6244
  4030d6:	ja     0x4030ef
  4030d8:	cmp    DWORD PTR [eax-0x44],ebp
  4030db:	jb     0x403061
  4030dd:	add    ecx,esp
  4030df:	add    DWORD PTR [edx],ecx
  4030e1:	and    esi,ebp
  4030e3:	sub    al,0x6b
  4030e5:	test   al,0xcb
  4030e7:	mov    cs,WORD PTR [esi]
  4030e9:	test   eax,0x2d0d15aa
  4030ee:	jle    0x40312f
  4030f0:	dec    esi
  4030f1:	xchg   esi,eax
  4030f2:	mov    eax,ds:0x93e4baf7
  4030f7:	add    eax,0x53e90fcc
  4030fc:	push   esp
  4030fd:	mov    ecx,edi
  4030ff:	sub    eax,DWORD PTR [ebp+ecx*2-0x7a]
  403103:	or     DWORD PTR ds:0x93a44e6,ebx
  403109:	adc    esp,DWORD PTR [ebx+edi*4-0x7e]
  40310d:	dec    esi
  40310e:	popa   
  40310f:	adc    al,0xed
  403111:	mov    DWORD PTR [ebp-0x85f7918],edx
  403117:	and    DWORD PTR [esi],eax
  403119:	push   ds
  40311a:	leave  
  40311b:	and    al,0x72
  40311d:	jne    0x4030ce
  40311f:	mov    dh,0xeb
  403121:	lea    edx,[ebp-0x5a368854]
  403127:	cmp    cl,BYTE PTR [ebp+ebp*8-0xb76de12]
  40312e:	or     edi,DWORD PTR [esi+0x56]
  403131:	ins    DWORD PTR es:[edi],dx
  403132:	daa    
  403133:	adc    esi,DWORD PTR [ebp+0x6f5d3947]
  403139:	adc    DWORD PTR [eax+ebx*2-0x69b5aad6],ecx
  403140:	fwait
  403141:	idiv   BYTE PTR [eax+edx*4]
  403144:	stos   BYTE PTR es:[edi],al
  403145:	mov    al,0xc0
  403147:	jg     0x4030c9
  403149:	(bad)  
  40314a:	mov    al,0xe5
  40314c:	data16 (bad) 
  40314e:	(bad)  
  403150:	mov    cl,0xf5
  403152:	jle    0x403113
  403154:	and    BYTE PTR [eax+0x35],cl
  403157:	imul   edi,DWORD PTR [edx-0x5d37e6c],0xffffffd2
  40315e:	retf   0x9f5d
  403161:	and    al,0xf2
  403163:	or     eax,0x939780c8
  403168:	scas   eax,DWORD PTR es:[edi]
  403169:	dec    edi
  40316a:	test   al,0x7
  40316c:	inc    edi
  40316d:	cmc    
  40316e:	jle    0x403123
  403170:	mov    al,0x2e
  403172:	xchg   ebx,eax
  403173:	sahf   
  403174:	pop    ebp
  403175:	shr    al,cl
  403177:	jg     0x403116
  403179:	hlt    
  40317a:	addr16 neg cl
  40317d:	stos   DWORD PTR es:[edi],eax
  40317e:	not    DWORD PTR [edx+ecx*4+0x55]
  403182:	inc    eax
  403183:	sar    BYTE PTR [ebp-0x50e07b3d],1
  403189:	ud2    
  40318b:	inc    ebp
  40318c:	inc    edx
  40318d:	pop    edx
  40318e:	aam    0x3f
  403190:	dec    BYTE PTR [esi]
  403192:	in     eax,dx
  403193:	sar    DWORD PTR [ecx],1
  403195:	das    
  403196:	hlt    
  403197:	jmp    0xfaf2c6d7
  40319c:	(bad)  
  40319d:	push   esp
  40319e:	mov    al,ds:0xae309a99
  4031a3:	test   BYTE PTR [eax],bl
  4031a5:	push   ds
  4031a6:	push   0xb7ddccd2
  4031ab:	xor    ebx,ecx
  4031ad:	xchg   ebx,eax
  4031ae:	popf   
  4031af:	jae    0x403192
  4031b1:	and    BYTE PTR [esi+0x71c4cf06],0x81
  4031b8:	jbe    0x4031be
  4031ba:	xchg   ebx,eax
  4031bb:	sub    eax,0x8ae29d75
  4031c0:	bound  ebp,QWORD PTR [esi-0x14]
  4031c3:	(bad)  
  4031c4:	fsub   st(6),st
  4031c6:	in     eax,dx
  4031c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c8:	aad    0x94
  4031ca:	test   DWORD PTR [ebx],esp
  4031cc:	cmp    edi,DWORD PTR [bp+di-0x3fb7]
  4031d1:	or     ecx,esi
  4031d3:	or     eax,0x9b58742
  4031d8:	repz add al,0xf3
  4031db:	rcl    edx,cl
  4031dd:	add    eax,0x7dde7ea0
  4031e2:	mov    al,ds:0x7e6ebc15
  4031e7:	loopne 0x403253
  4031e9:	add    esi,DWORD PTR [edx-0x59]
  4031ec:	sti    
  4031ed:	js     0x40324c
  4031ef:	jge    0x4031ed
  4031f1:	mov    bl,0xb6
  4031f3:	push   ebp
  4031f4:	enter  0x2142,0x1b
  4031f8:	xchg   esp,eax
  4031f9:	stos   BYTE PTR es:[edi],al
  4031fa:	cmp    al,0x80
  4031fc:	and    eax,0x123a07b7
  403201:	jecxz  0x40322b
  403203:	test   DWORD PTR [ecx],edi
  403205:	(bad)  
  403206:	jle    0x4031b3
  403208:	stos   BYTE PTR es:[edi],al
  403209:	and    eax,DWORD PTR [edi-0x69]
  40320c:	lea    ecx,[edx]
  40320e:	sahf   
  40320f:	push   esp
  403210:	jg     0x403228
  403212:	cmovs  edx,DWORD PTR [edx-0x7b]
  403216:	or     ebp,DWORD PTR [edi+0x7e73a780]
  40321c:	inc    esi
  40321d:	push   edx
  40321e:	jp     0x4031a0
  403220:	cmp    al,bh
  403222:	test   BYTE PTR [esi+0x5a1eda2b],al
  403228:	fwait
  403229:	shl    ah,cl
  40322b:	adc    eax,0xa0aad361
  403230:	out    dx,al
  403231:	and    eax,0xdb54c867
  403236:	push   ebx
  403237:	test   DWORD PTR [edi-0x4d],esp
  40323a:	shr    DWORD PTR [ebx],1
  40323c:	out    dx,al
  40323d:	scas   al,BYTE PTR es:[edi]
  40323e:	pusha  
  40323f:	add    ecx,DWORD PTR [ecx+0x42]
  403242:	enter  0x1aa8,0x8e
  403246:	adc    al,0x9b
  403248:	mov    cl,0xc8
  40324a:	out    0xab,al
  40324c:	loopne 0x4031d5
  40324e:	push   cs
  40324f:	pop    ds
  403250:	aam    0x47
  403252:	fadd   QWORD PTR [ebp-0x10f74922]
  403258:	dec    ebx
  403259:	adc    dl,BYTE PTR [ecx-0x11189170]
  40325f:	outs   dx,BYTE PTR ds:[esi]
  403260:	jno    0x403267
  403262:	clc    
  403263:	ret    
  403264:	mov    edx,0x72bdb1d2
  403269:	repnz repz adc al,0xf
  40326d:	add    DWORD PTR [esi-0x626a1abe],0x1e
  403274:	fbld   TBYTE PTR [esi]
  403276:	mov    cl,0xeb
  403278:	dec    edi
  403279:	push   ss
  40327a:	jmp    0x2fa525fc
  40327f:	shl    DWORD PTR [ebx+0x5f],1
  403282:	in     al,0xca
  403284:	pushf  
  403285:	lock or al,0x4d
  403288:	xor    eax,0x879c9e2a
  40328d:	dec    ecx
  40328e:	mov    al,ds:0xabf07c53
  403293:	shr    esp,0x8a
  403296:	inc    BYTE PTR [esi+0x1c]
  403299:	loope  0x4032eb
  40329b:	(bad)  
  40329c:	sub    ah,al
  40329e:	jae    0x4032ff
  4032a0:	sti    
  4032a1:	jns    0x40328b
  4032a3:	or     al,BYTE PTR [ebx+0x3821e87d]
  4032a9:	pop    esp
  4032aa:	test   eax,0x8449f5c1
  4032af:	fcmovnbe st,st(6)
  4032b1:	(bad)  
  4032b2:	les    esi,FWORD PTR [esi-0x18]
  4032b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b6:	imul   esi,DWORD PTR [edx],0xe4473f06
  4032bc:	fdivr  QWORD PTR [ebx+0x71661243]
  4032c2:	retf   
  4032c3:	(bad)  
  4032c4:	(bad)  
  4032c6:	lods   eax,DWORD PTR ds:[esi]
  4032c7:	mov    esi,0xc5a595bf
  4032cc:	iret   
  4032cd:	jmp    0xe641:0xa8a2c678
  4032d4:	std    
  4032d5:	xchg   esp,eax
  4032d6:	call   0xcee1712c
  4032db:	dec    ebx
  4032dc:	jmp    0xe9988047
  4032e1:	xchg   DWORD PTR [ebx-0x2a],esi
  4032e4:	and    DWORD PTR [eax+ebx*8],0x3a
  4032e8:	hlt    
  4032e9:	and    DWORD PTR [edx+0x23165190],esp
  4032ef:	xor    BYTE PTR [eax-0x3e],cl
  4032f2:	mov    dh,0xcd
  4032f4:	sbb    al,0xee
  4032f6:	je     0x40328e
  4032f8:	call   0xd22e:0xd8492aaa
  4032ff:	add    al,0x5b
  403301:	arpl   WORD PTR [ecx],bp
  403303:	cs aaa 
  403305:	mov    esp,0x4c929b25
  40330a:	call   0x6023:0x7488f55b
  403311:	add    BYTE PTR [ebx-0xf],0x6c
  403315:	pop    ebx
  403316:	out    dx,eax
  403317:	and    esp,DWORD PTR ds:[eax]
  40331a:	mov    WORD PTR [ecx-0x1f],?
  40331d:	icebp  
  40331e:	fmul   st,st(1)
  403320:	push   ecx
  403321:	inc    ebp
  403322:	out    dx,eax
  403323:	outs   dx,DWORD PTR ds:[esi]
  403324:	in     eax,0xf7
  403326:	jbe    0x403357
  403328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403329:	sub    ebp,DWORD PTR [esi+edi*1+0x42]
  40332d:	jne    0x403345
  40332f:	xchg   edx,eax
  403330:	rcr    BYTE PTR [edx+0x45c63f76],1
  403336:	fstp   TBYTE PTR [eax]
  403338:	push   edi
  403339:	push   ebx
  40333a:	into   
  40333b:	push   esp
  40333c:	mov    esi,esi
  40333e:	inc    edi
  40333f:	dec    edi
  403340:	mov    ecx,esi
  403342:	jb     0x403352
  403344:	push   ebp
  403345:	cmc    
  403346:	cmp    ch,bl
  403348:	mov    ebx,0x7cb420cc
  40334d:	push   0x4e2249e4
  403352:	popf   
  403353:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403354:	test   DWORD PTR cs:[ebx-0x2e],ebp
  403358:	pop    edi
  403359:	sub    al,0x35
  40335b:	xor    BYTE PTR [edi],bh
  40335d:	xchg   bl,bh
  40335f:	in     al,dx
  403360:	mov    BYTE PTR [ebx+0x725cc0],cl
  403366:	ret    
  403367:	jne    0x4033b5
  403369:	in     al,0xef
  40336b:	push   cs
  40336c:	jmp    0xd47f:0x806488a0
  403373:	nop
  403374:	test   al,0x96
  403376:	cmc    
  403377:	call   0xf7f41209
  40337c:	mov    ebp,0x96223052
  403381:	je     0x403320
  403383:	cli    
  403384:	daa    
  403385:	(bad)  
  403387:	loopne 0x403326
  403389:	adc    DWORD PTR [edx-0x52],ebp
  40338c:	or     BYTE PTR [edi-0xf],bh
  40338f:	(bad)  
  403391:	xor    eax,0xd18b3dc0
  403396:	loope  0x403318
  403398:	adc    BYTE PTR [ebp-0xed62118],cl
  40339e:	inc    esi
  40339f:	pop    ss
  4033a0:	mov    eax,0x5ac6052c
  4033a5:	imul   ebp,DWORD PTR [edi],0xffffff88
  4033a8:	out    0xd8,eax
  4033aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033ac:	dec    esi
  4033ad:	push   ss
  4033ae:	jle    0x4033c5
  4033b0:	aas    
  4033b1:	xchg   edi,eax
  4033b2:	into   
  4033b3:	fwait
  4033b4:	jg     0x4033c2
  4033b6:	icebp  
  4033b7:	cmc    
  4033b8:	call   FWORD PTR [eax-0x6b88f31f]
  4033be:	cmp    bl,BYTE PTR [ecx+ecx*8+0x62]
  4033c2:	mov    esp,ebp
  4033c4:	adc    BYTE PTR [edi-0x6d10c204],bl
  4033ca:	fcmovne st,st(3)
  4033cc:	imul   ebp,DWORD PTR [ecx+0x66],0xffffffb9
  4033d0:	jb     0x403419
  4033d2:	sbb    DWORD PTR [eax],ebp
  4033d4:	les    ecx,FWORD PTR [ebp+0x7bddcfd8]
  4033da:	daa    
  4033db:	and    al,0xc3
  4033dd:	(bad)  
  4033de:	cld    
  4033df:	xor    DWORD PTR [eax-0x18],eax
  4033e2:	(bad)  
  4033e3:	cmp    BYTE PTR [esp+0x5d],al
  4033e7:	or     ah,BYTE PTR [edi+ebp*2]
  4033ea:	jp     0x40339e
  4033ec:	sbb    BYTE PTR [eax+0x1f],al
  4033ef:	loopne 0x4033d2
  4033f1:	jae    0x40339d
  4033f3:	fsubr  st(1),st
  4033f5:	and    eax,0x67942b68
  4033fa:	mov    ebp,ecx
  4033fc:	and    al,0x1c
  4033fe:	loopne 0x40339b
  403400:	jno    0x403450
  403402:	pop    ebx
  403403:	add    DWORD PTR [ebx+0x42e1c565],edi
  403409:	cs into 
  40340b:	push   ss
  40340c:	loope  0x4033a9
  40340e:	enter  0xbc06,0x11
  403412:	retf   0x26d3
  403415:	push   ecx
  403416:	ins    DWORD PTR es:[edi],dx
  403417:	mov    cl,0x5
  403419:	aaa    
  40341a:	push   es
  40341b:	pop    esp
  40341c:	jnp    0x40343a
  40341e:	icebp  
  40341f:	sub    BYTE PTR [ecx-0x60afa2cc],bl
  403425:	mov    esi,es
  403427:	xor    bl,dh
  403429:	jmp    0xba40be70
  40342e:	push   ebx
  40342f:	fadd   DWORD PTR [ecx+0x25f6884]
  403435:	jbe    0x40340f
  403437:	jp     0x4033c1
  403439:	pop    DWORD PTR [eax-0x31]
  40343c:	mov    dl,0x14
  40343e:	jmp    DWORD PTR [edi+0x30]
  403441:	and    DWORD PTR [ebx+0x68],edx
  403444:	or     bh,ch
  403446:	jno    0x40340e
  403448:	repnz mov edi,0x615688bb
  40344e:	(bad)  
  40344f:	retf   
  403450:	jle    0x403456
  403452:	inc    ebp
  403453:	aam    0x5
  403455:	fisttp DWORD PTR [edx+0x5fcc2d0d]
  40345b:	inc    ebx
  40345c:	mov    dl,BYTE PTR [edx]
  40345e:	add    ecx,DWORD PTR [ecx+0x22]
  403461:	xchg   esp,eax
  403462:	jl     0x403438
  403464:	dec    ecx
  403465:	xchg   bx,ax
  403467:	sar    BYTE PTR [edi-0x29],0x6d
  40346b:	aaa    
  40346c:	inc    ebx
  40346d:	add    cl,dh
  40346f:	imul   ebp,DWORD PTR [eax],0x2a9bdb2d
  403475:	xchg   ecx,eax
  403476:	add    BYTE PTR [ebp+0x4d1b6372],dh
  40347c:	push   ecx
  40347d:	clc    
  40347e:	or     al,0xda
  403480:	xchg   ecx,eax
  403481:	inc    eax
  403482:	icebp  
  403483:	repz bound edi,QWORD PTR [esi-0x29]
  403487:	cdq    
  403488:	iret   
  403489:	in     al,dx
  40348a:	in     eax,0xac
  40348c:	and    DWORD PTR [esi-0x34],ebx
  40348f:	icebp  
  403490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403491:	imul   eax,edx,0xfffffffc
  403494:	push   0x56fc15d2
  403499:	or     eax,0x95b4667e
  40349e:	or     cl,0x60
  4034a1:	mov    ss,WORD PTR ds:0x49cd0127
  4034a7:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4034a9:	jb     0x4034d2
  4034ab:	adc    dh,BYTE PTR [ebp+0x763802ba]
  4034b1:	add    DWORD PTR [edi],0x3b
  4034b4:	int3   
  4034b5:	mov    esp,0x38ee378e
  4034ba:	int3   
  4034bb:	jne    0x403444
  4034bd:	leave  
  4034be:	popa   
  4034bf:	mov    BYTE PTR [esi+0x2e1a8726],0xd0
  4034c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c7:	push   edi
  4034c8:	jo     0x40349b
  4034ca:	mov    eax,ds:0x5d3be764
  4034cf:	fnsave [ebp+0x577b4596]
  4034d5:	stos   DWORD PTR es:[edi],eax
  4034d6:	mov    dh,0xac
  4034d8:	pop    ebp
  4034d9:	mov    ds:0xbb7b5f03,al
  4034de:	xor    dh,bh
  4034e0:	cmc    
  4034e1:	test   BYTE PTR [ebx],cl
  4034e3:	(bad)  
  4034e5:	fisub  WORD PTR [eax+0x75134e57]
  4034eb:	adc    ebx,DWORD PTR [ebx+0x3f]
  4034ee:	call   0x99216dd3
  4034f3:	push   ecx
  4034f4:	(bad)  
  4034f5:	fild   WORD PTR [edi]
  4034f7:	add    al,0xda
  4034f9:	ret    0xdf32
  4034fc:	loop   0x403527
  4034fe:	mov    BYTE PTR [esi+0x6cab32c7],cl
  403504:	push   esi
  403505:	test   BYTE PTR [edi+0x7],al
  403508:	adc    BYTE PTR [ecx-0x1],ch
  40350b:	arpl   WORD PTR [eax-0x39f9d517],dx
  403511:	inc    ebx
  403512:	cdq    
  403513:	cdq    
  403514:	cmp    esp,DWORD PTR [ebx+0x2a5fd584]
  40351a:	fwait
  40351b:	pop    ss
  40351c:	aam    0x59
  40351e:	fucom  st(6)
  403520:	mov    ebp,0x1a43ee5
  403525:	aad    0xe9
  403527:	ret    0x4d40
  40352a:	push   ss
  40352b:	and    al,0x3d
  40352d:	ror    BYTE PTR [ecx-0x177b43d6],1
  403533:	push   edi
  403534:	mov    dl,0xec
  403536:	ins    DWORD PTR es:[edi],dx
  403537:	shl    ah,0x13
  40353a:	jno    0x40358d
  40353c:	loopne 0x40351a
  40353e:	mov    ah,BYTE PTR [eax+ebx*2-0x3ff5df72]
  403545:	(bad)  
  403546:	lock xchg esp,esp
  403549:	xchg   ebp,eax
  40354a:	adc    ebx,DWORD PTR [esi+0x3c]
  40354d:	push   edx
  40354e:	mov    ?,WORD PTR [ecx+edx*4]
  403551:	shr    BYTE PTR gs:[edx+0x2ae1e64f],1
  403558:	cmp    DWORD PTR [esi],0x64
  40355b:	pop    ecx
  40355c:	and    al,0x3a
  40355e:	xchg   ebx,eax
  40355f:	popf   
  403560:	mov    ah,0xc5
  403562:	(bad)  
  403563:	mov    eax,cs
  403565:	xor    BYTE PTR [edx],cl
  403567:	cld    
  403568:	ja     0x403514
  40356a:	imul   ecx,DWORD PTR [ecx-0x5d95ed99],0xb92f7138
  403574:	lods   al,BYTE PTR ds:[esi]
  403575:	xchg   ebp,eax
  403576:	test   esp,ebx
  403578:	std    
  403579:	std    
  40357a:	stos   DWORD PTR es:[edi],eax
  40357b:	in     eax,dx
  40357c:	add    eax,ebx
  40357e:	aas    
  40357f:	push   esi
  403580:	xor    al,0x89
  403582:	data16 (bad) 
  403584:	into   
  403585:	imul   ebp,DWORD PTR [ecx-0x66],0x59b3adfa
  40358c:	sbb    BYTE PTR [edx-0x417afb96],0x1f
  403593:	dec    edx
  403594:	or     eax,0x25c4fec5
  403599:	outs   dx,BYTE PTR ds:[esi]
  40359a:	and    BYTE PTR [ebp+eax*4+0xeef9cee],0x4a
  4035a2:	rol    DWORD PTR [eax+eiz*4],1
  4035a5:	xchg   ecx,eax
  4035a6:	and    DWORD PTR [edx],edx
  4035a8:	ret    
  4035a9:	call   edx
  4035ab:	test   BYTE PTR ds:0xee6ff91,bh
  4035b1:	mov    ch,0x4
  4035b3:	push   esp
  4035b4:	(bad)  
  4035b5:	xor    esp,DWORD PTR [edx+0x51]
  4035b8:	push   0x35
  4035ba:	sbb    eax,esp
  4035bc:	lods   eax,DWORD PTR ds:[esi]
  4035bd:	push   0xdfb904c4
  4035c2:	or     DWORD PTR [eax-0x4],ecx
  4035c5:	ffree  st(3)
  4035c7:	mov    dh,0x8d
  4035c9:	or     al,ah
  4035cb:	rcl    esp,0x66
  4035ce:	or     al,0x79
  4035d0:	mov    dl,0x77
  4035d2:	mov    BYTE PTR [ecx],0x87
  4035d5:	sub    DWORD PTR [ebx-0x7257c228],edx
  4035db:	cmp    esp,edi
  4035dd:	enter  0x99e7,0x47
  4035e1:	out    0xa5,eax
  4035e3:	add    bh,cl
  4035e5:	pop    es
  4035e6:	bound  esp,QWORD PTR [eax-0x68d87e7f]
  4035ec:	jnp    0x4035f3
  4035ee:	cmp    ah,BYTE PTR [ebx+0x3c]
  4035f1:	(bad)  
  4035f2:	cli    
  4035f3:	je     0x4035ad
  4035f5:	loope  0x403662
  4035f7:	mov    bh,0x2d
  4035f9:	data16 add cl,BYTE PTR [edx-0x20107d4b]
  403600:	ja     0x403643
  403602:	push   esi
  403603:	lahf   
  403604:	mov    edi,0x2e719f8d
  403609:	pusha  
  40360a:	scas   eax,DWORD PTR es:[edi]
  40360b:	mov    bh,0xb6
  40360d:	(bad)  
  40360e:	mov    ebp,0x4e57427b
  403613:	call   0xdd02c832
  403618:	push   es
  403619:	sub    ecx,esp
  40361b:	fcmovu st,st(4)
  40361d:	nop
  40361e:	dec    ebp
  40361f:	and    BYTE PTR [eax+0x5a],dl
  403622:	(bad)  
  403623:	popa   
  403624:	or     BYTE PTR [ecx+0x5f],0x9
  403628:	jl     0x403671
  40362a:	add    cl,ch
  40362c:	xor    eax,0x86f0fdd9
  403631:	loop   0x403614
  403633:	dec    edx
  403634:	and    eax,0xbbab80ea
  403639:	cmp    eax,DWORD PTR [ecx-0x155aa3fc]
  40363f:	sbb    ah,BYTE PTR [ecx]
  403641:	les    edx,FWORD PTR [esi+0x49485607]
  403647:	mov    eax,ds:0x9c2600c3
  40364c:	fidivr WORD PTR [ebx+0x7cc8e5cf]
  403652:	cld    
  403653:	sub    al,0x90
  403655:	js     0x4036b8
  403657:	xor    al,BYTE PTR [edx+0x6e]
  40365a:	xor    ecx,ecx
  40365c:	xchg   esi,eax
  40365d:	es test al,0xc1
  403660:	pop    edi
  403662:	lods   al,BYTE PTR ds:[esi]
  403663:	les    edi,FWORD PTR [edx]
  403665:	jmp    0xff60fe2f
  40366a:	xchg   dh,ch
  40366c:	retf   
  40366d:	cmp    DWORD PTR [ecx+edx*2+0x20],esi
  403671:	out    0x7c,eax
  403673:	jge    0x403633
  403675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403676:	dec    esp
  403677:	xor    esp,DWORD PTR [ebx-0x4c]
  40367a:	push   ebp
  40367b:	push   edx
  40367c:	repz xchg esi,eax
  40367e:	pop    edx
  40367f:	push   ebx
  403680:	and    DWORD PTR [ebx],esp
  403682:	dec    esp
  403683:	mov    bh,0x58
  403685:	push   cs
  403686:	pusha  
  403687:	or     ecx,ecx
  403689:	(bad)  
  40368b:	push   ebx
  40368c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40368d:	dec    ecx
  40368e:	push   edx
  40368f:	fdivr  DWORD PTR [eax+0xd]
  403692:	enter  0xf922,0x1d
  403696:	sub    al,0xc8
  403698:	push   ebp
  403699:	cli    
  40369a:	aas    
  40369b:	rcl    BYTE PTR [edx],cl
  40369d:	sbb    dh,cl
  40369f:	in     al,0xa
  4036a1:	aam    0x9d
  4036a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036a4:	inc    eax
  4036a5:	fdivrp st(1),st
  4036a7:	popa   
  4036a8:	fist   DWORD PTR [eax+0x6e8f4798]
  4036ae:	in     eax,0x6d
  4036b0:	fwait
  4036b1:	add    eax,0x4791bdef
  4036b6:	stos   BYTE PTR es:[edi],al
  4036b7:	and    ah,BYTE PTR [ecx-0xa689b6]
  4036bd:	icebp  
  4036be:	fwait
  4036bf:	lea    esi,[esi-0x4]
  4036c2:	inc    esi
  4036c3:	ds (bad) 
  4036c5:	mov    edi,0xe53e5e3
  4036ca:	push   edi
  4036cb:	js     0x40368c
  4036cd:	lock pop esp
  4036cf:	adc    cl,dh
  4036d1:	cmp    BYTE PTR [edi+0x5f6d0c5e],bh
  4036d7:	mov    ah,0xdd
  4036d9:	push   cs
  4036da:	mov    bl,0xcd
  4036dc:	inc    edx
  4036dd:	xlat   BYTE PTR ds:[ebx]
  4036de:	add    eax,0x6351c92e
  4036e3:	xchg   edx,eax
  4036e4:	stos   DWORD PTR es:[edi],eax
  4036e5:	inc    ebp
  4036e6:	xor    BYTE PTR [edi+0x1c],0x2
  4036ea:	stc    
  4036eb:	sub    BYTE PTR [ebx-0x5f66983],ch
  4036f1:	(bad)  
  4036f2:	mov    edx,0xc0a000c4
  4036f7:	or     ch,dh
  4036f9:	lock test DWORD PTR [edx-0x25fb6f20],ebp
  403700:	ret    0x8070
  403703:	jge    0x4036c7
  403705:	dec    ebp
  403706:	loope  0x4036cc
  403708:	and    dl,BYTE PTR [edi]
  40370a:	jmp    0x4036fc
  40370c:	cmp    esp,DWORD PTR [edx-0x58ecf7cf]
  403712:	xchg   BYTE PTR [ebp+0x8],cl
  403715:	(bad)  
  403716:	hlt    
  403717:	popa   
  403718:	scas   al,BYTE PTR es:[edi]
  403719:	cmp    BYTE PTR [edx],bl
  40371b:	push   cs
  40371c:	or     bh,BYTE PTR [ecx+0x58]
  40371f:	nop
  403720:	scas   al,BYTE PTR es:[edi]
  403721:	mov    ss,WORD PTR [ebp+ebx*2+0x69]
  403725:	sbb    DWORD PTR [edi],edi
  403727:	xchg   edx,eax
  403728:	mov    eax,ds:0xae5501c4
  40372d:	push   edi
  40372e:	mov    ah,0x5e
  403730:	and    BYTE PTR [edi-0x7c],0x8
  403734:	enter  0xb908,0xa
  403738:	(bad)
  40373b:	ret    
  40373c:	push   ebx
  40373d:	das    
  40373e:	push   esi
  40373f:	stos   DWORD PTR es:[edi],eax
  403740:	addr16 ja 0x40379c
  403743:	mov    al,0x80
  403745:	call   0xfe6abee0
  40374a:	mov    edi,es
  40374c:	(bad)  
  40374d:	call   0x9734:0x9853b5a3
  403754:	dec    esi
  403755:	adc    al,BYTE PTR [ebx*2-0xe8764e7]
  40375c:	aad    0xe4
  40375e:	or     eax,0x18344c50
  403763:	aaa    
  403764:	leave  
  403765:	mov    eax,ds:0x42e26f8e
  40376a:	(bad)  
  40376b:	dec    edi
  40376c:	jns    0x403790
  40376e:	loopne 0x4037d6
  403770:	cmp    eax,DWORD PTR [edx-0x29]
  403773:	into   
  403774:	push   esp
  403775:	and    DWORD PTR [edx],0xeef101c4
  40377b:	push   esp
  40377c:	xchg   esi,eax
  40377d:	adc    eax,DWORD PTR [ecx-0x3f]
  403780:	push   ebp
  403781:	arpl   WORD PTR [edx],di
  403783:	inc    esp
  403784:	ficom  WORD PTR [ecx]
  403786:	ins    DWORD PTR es:[edi],dx
  403787:	xor    BYTE PTR [bp+di+0x64f9],bh
  40378c:	je     0x403785
  40378e:	push   ecx
  40378f:	out    0x71,al
  403791:	mov    ds:0xb0923c8d,al
  403796:	mov    esp,0xaa8301dc
  40379b:	pop    edi
  40379c:	arpl   WORD PTR [edi+0x69765550],di
  4037a2:	fld    TBYTE PTR [edx+0x661ce928]
  4037a8:	and    ch,BYTE PTR [edi+0x3b]
  4037ab:	pop    esi
  4037ac:	pop    ds
  4037ad:	push   esp
  4037ae:	sti    
  4037af:	xchg   ecx,eax
  4037b0:	pop    DWORD PTR [edi-0x56]
  4037b3:	jbe    0x403783
  4037b5:	aaa    
  4037b6:	loope  0x403820
  4037b8:	add    eax,0x52a5cece
  4037bd:	inc    ecx
  4037be:	(bad)  
  4037c0:	xor    BYTE PTR [ebp-0x3c],bl
  4037c3:	inc    esp
  4037c4:	out    0x7f,al
  4037c6:	fld    TBYTE PTR [ebp+eax*2-0x6a]
  4037ca:	mov    ?,WORD PTR [esi]
  4037cc:	add    BYTE PTR [edi-0x73a03f9f],dl
  4037d2:	cs jnp 0x4037b9
  4037d5:	mov    ?,WORD PTR [edi+0x75]
  4037d8:	(bad)  
  4037d9:	push   es
  4037da:	add    DWORD PTR [ebp+eiz*1+0x5b],ebp
  4037de:	int3   
  4037df:	xchg   edx,eax
  4037e0:	ins    DWORD PTR es:[edi],dx
  4037e1:	hlt    
  4037e2:	or     esi,DWORD PTR [edi]
  4037e4:	enter  0x8b5c,0x5d
  4037e8:	cmp    bh,BYTE PTR ds:0x793e192c
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fs fadd st(6),st
  40389a:	sub    ebx,edi
  40389c:	jg     0x40387b
  40389e:	pop    edi
  40389f:	bound  esp,QWORD PTR [edx-0x23]
  4038a2:	pop    edi
  4038a3:	bound  esp,QWORD PTR [edx-0x72]
  4038a6:	xchg   BYTE PTR [ebp+0x12cb809f],ah
  4038ac:	mov    ds:0x82018646,eax
  4038b1:	out    dx,eax
  4038b2:	es sar eax,cl
  4038b5:	scas   eax,DWORD PTR es:[edi]
  4038b6:	int3   
  4038b7:	stc    
  4038b8:	mov    al,0x18
  4038ba:	jp     0x40388b
  4038bc:	push   0x1939f3b0
  4038c1:	sub    ebp,ecx
  4038c3:	mov    ds:0x2a0060a2,al
  4038c8:	mov    ecx,0x1920b900
  4038cd:	dec    esp
  4038ce:	inc    edi
  4038cf:	jmp    0x97f0:0x18cf527a
  4038d6:	sar    DWORD PTR [ebp+eiz*8-0x58b028d5],1
  4038dd:	dec    edx
  4038de:	inc    eax
  4038df:	mov    edi,gs
  4038e1:	(bad)  
  4038e3:	adc    BYTE PTR [ebx*1-0x40fbaa30],cl
  4038ea:	les    edx,FWORD PTR [ebx+esi*1]
  4038ed:	sbb    eax,0x49b9499e
  4038f2:	test   eax,0x72949675
  4038f7:	push   ss
  4038f8:	mov    al,0xcb
  4038fa:	push   ss
  4038fb:	mov    al,ds:0x908a70d9
  403900:	xchg   BYTE PTR [esi+0x20],ah
  403903:	add    eax,0xbca42fb1
  403908:	out    0xfc,al
  40390a:	aas    
  40390b:	push   ebp
  40390c:	pusha  
  40390d:	repz cld 
  40390f:	push   ebx
  403910:	push   ebx
  403911:	adc    dh,ch
  403913:	xchg   ebp,eax
  403914:	pop    es
  403915:	jbe    0x403897
  403917:	gs jbe 0x403995
  40391a:	std    
  40391b:	ins    BYTE PTR es:[edi],dx
  40391c:	mov    eax,ds:0xae7336a7
  403921:	repz push esi
  403923:	and    eax,0x5814c8
  403928:	xor    cl,bl
  40392a:	jno    0x4038de
  40392c:	cmp    ebx,DWORD PTR [edx]
  40392e:	mov    eax,ds:0x61abb634
  403933:	cld    
  403934:	or     BYTE PTR [ecx+0x631bbc80],0x81
  40393b:	inc    sp
  40393d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40393e:	jo     0x4038db
  403940:	dec    esp
  403941:	dec    eax
  403942:	mov    cl,BYTE PTR [ecx]
  403944:	mov    edi,0xb8f6b9d3
  403949:	(bad)  
  40394a:	hlt    
  40394b:	call   0x97289364
  403950:	in     al,dx
  403951:	dec    esp
  403952:	shl    BYTE PTR [esi+0x35c56132],1
  403958:	mov    ecx,esi
  40395a:	bound  eax,QWORD PTR [edi+ebx*1]
  40395d:	mov    ds:0x43172962,eax
  403962:	xchg   edx,eax
  403963:	rol    BYTE PTR [edx],1
  403965:	data16 jnp 0x40397c
  403968:	stos   DWORD PTR es:[edi],eax
  403969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40396a:	out    dx,eax
  40396b:	xchg   ecx,ebx
  40396d:	sbb    BYTE PTR [ebx-0x3de85e03],dh
  403973:	or     ebp,DWORD PTR [eax]
  403975:	sub    BYTE PTR [eax-0x3df67239],ch
  40397b:	lods   al,BYTE PTR ds:[esi]
  40397c:	mov    ds:0x8225b161,eax
  403981:	mov    edi,0xc60c2dd
  403986:	and    eax,0xb7459003
  40398b:	sbb    eax,0xe3aa1857
  403990:	fbstp  TBYTE PTR [edi+0x24829cdf]
  403996:	cmp    bh,ah
  403998:	mov    eax,ds:0xae695ff
  40399d:	or     eax,0x4ef1c4d
  4039a2:	inc    edi
  4039a3:	test   al,0x1d
  4039a5:	(bad)  
  4039a6:	mov    bl,0x43
  4039a8:	leave  
  4039a9:	push   edx
  4039aa:	add    al,0x11
  4039ac:	mov    eax,ds:0x22a8e56d
  4039b1:	ins    BYTE PTR es:[edi],dx
  4039b2:	pop    es
  4039b3:	div    DWORD PTR [edi]
  4039b5:	lahf   
  4039b6:	arpl   WORD PTR [esi+0x5779202],sp
  4039bc:	mov    ch,0xe2
  4039be:	xor    BYTE PTR [eax],ch
  4039c0:	cld    
  4039c1:	aaa    
  4039c2:	dec    ecx
  4039c3:	outs   dx,BYTE PTR ds:[esi]
  4039c4:	rcr    al,cl
  4039c6:	ret    0x447e
  4039c9:	repz mov eax,ds:0xdb4bdd20
  4039cf:	inc    ecx
  4039d0:	push   0xffffff88
  4039d2:	jmp    0x403a1e
  4039d4:	fdivr  DWORD PTR [edx-0x2649208d]
  4039da:	pop    esi
  4039db:	(bad)  
  4039dc:	and    eax,0xd2b25a52
  4039e1:	xor    BYTE PTR [eax-0x1406f7b],0x3c
  4039e8:	mov    bl,bl
  4039ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039eb:	inc    ecx
  4039ec:	or     al,BYTE PTR [eax+0xd29ca85]
  4039f2:	call   0x3f1cea06
  4039f7:	xlat   BYTE PTR ds:[ebx]
  4039f8:	pop    ebp
  4039f9:	dec    ecx
  4039fa:	les    esp,FWORD PTR [edx+edi*1+0x2cfb324a]
  403a01:	icebp  
  403a02:	dec    ebp
  403a03:	iret   
  403a04:	das    
  403a05:	pop    eax
  403a06:	movntq QWORD PTR [ebp+0xf],mm5
  403a0a:	mov    edi,0xb9573209
  403a0f:	jb     0x403a1e
  403a11:	jnp    0x403993
  403a13:	mov    ah,0x7f
  403a15:	hlt    
  403a16:	test   al,0xc4
  403a18:	jmp    0x4039bc
  403a1a:	sub    edi,DWORD PTR [edx-0x2da66344]
  403a20:	out    dx,eax
  403a21:	or     esi,0x1bc9f2d8
  403a27:	mov    ah,0xcd
  403a29:	sar    BYTE PTR [ecx+0x79],cl
  403a2c:	push   DWORD PTR [eax-0x1f]
  403a2f:	pop    edx
  403a30:	jo     0x4039d3
  403a32:	jmp    0x4fd8:0x1b151864
  403a39:	(bad)  
  403a3a:	jmp    0x7c3e:0x7c045d00
  403a41:	fsub   QWORD PTR [ebx+0x1c]
  403a44:	adc    dh,bl
  403a46:	int3   
  403a47:	sahf   
  403a48:	popf   
  403a49:	(bad)  
  403a4a:	push   ecx
  403a4b:	mov    eax,ds:0x44ccf345
  403a50:	lds    ecx,FWORD PTR [esi+0x43e838f2]
  403a56:	frstor [esi-0x1a340fe]
  403a5c:	in     eax,0x28
  403a5e:	mov    ebx,0x497b8fc4
  403a63:	daa    
  403a64:	sbb    DWORD PTR ds:0x9b443fc3,eax
  403a6a:	iret   
  403a6b:	jg     0x403a36
  403a6d:	xchg   ebp,eax
  403a6e:	mov    bh,0x13
  403a70:	push   ebp
  403a71:	stc    
  403a72:	pop    ss
  403a73:	push   edi
  403a74:	imul   eax,ebx,0x3c
  403a77:	imul   ecx,ebx,0x34143808
  403a7d:	and    eax,0x66b9f34c
  403a82:	nop
  403a83:	dec    esi
  403a84:	aam    0xde
  403a86:	out    0xc,eax
  403a88:	mov    ch,BYTE PTR [ecx]
  403a8a:	add    BYTE PTR [eax-0x507fb479],al
  403a90:	test   DWORD PTR [esi-0x22],edx
  403a93:	out    0x7b,eax
  403a95:	aam    0x27
  403a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a98:	cdq    
  403a99:	mov    ah,0x82
  403a9b:	adc    dl,dl
  403a9d:	jns    0x403aba
  403a9f:	sahf   
  403aa0:	jnp    0x403a7a
  403aa2:	xor    edi,ebp
  403aa4:	clc    
  403aa5:	loopne 0x403a77
  403aa7:	sbb    dh,0xbe
  403aaa:	dec    ebx
  403aab:	mov    eax,ds:0xc2a4bd07
  403ab0:	jmp    0x91bbdede
  403ab5:	stc    
  403ab6:	leave  
  403ab7:	mov    ebp,0x319dc8b
  403abc:	icebp  
  403abd:	xchg   edi,eax
  403abe:	mov    dl,BYTE PTR ds:[esi+eiz*8+0x3bd69671]
  403ac6:	dec    ebp
  403ac7:	call   0xc60a:0xa7cf071a
  403ace:	ins    BYTE PTR es:[edi],dx
  403acf:	shr    DWORD PTR [ecx],cl
  403ad1:	rcl    ebp,0x8e
  403ad4:	inc    edx
  403ad5:	retf   0x2020
  403ad8:	fimul  WORD PTR [ecx+0x7e114920]
  403ade:	mov    es,ebx
  403ae0:	test   al,0x95
  403ae2:	push   esp
  403ae3:	sar    DWORD PTR [edi],1
  403ae5:	xchg   esi,eax
  403ae6:	push   esi
  403ae7:	inc    ecx
  403ae8:	mov    ecx,0x1d1613f1
  403aed:	neg    BYTE PTR [eax+0x495be4a6]
  403af3:	lock ret 0xe9d7
  403af7:	adc    al,0xf4
  403af9:	add    edx,edi
  403afb:	push   esi
  403afc:	test   al,0x46
  403afe:	dec    eax
  403aff:	arpl   WORD PTR [ebx],ax
  403b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b02:	adc    ebp,edi
  403b04:	cmp    al,BYTE PTR [ecx]
  403b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b07:	push   ds
  403b08:	(bad)  
  403b0a:	cli    
  403b0b:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  403b0d:	push   ds
  403b0e:	pushf  
  403b0f:	xor    DWORD PTR [eax-0x7a],eax
  403b12:	lods   eax,DWORD PTR ds:[esi]
  403b13:	cs loopne 0x403acd
  403b16:	jmp    0xbf45:0xf8677e60
  403b1d:	sub    esp,edi
  403b1f:	mov    al,0xa8
  403b21:	icebp  
  403b22:	mov    dh,0x6
  403b24:	loopne 0x403b56
  403b26:	push   eax
  403b27:	aas    
  403b28:	sub    dh,BYTE PTR [edi+0x3e93a357]
  403b2e:	pop    esi
  403b2f:	pusha  
  403b30:	fcmovbe st,st(0)
  403b32:	(bad)  
  403b34:	push   esi
  403b35:	call   0xf66aaf7
  403b3a:	or     al,0xec
  403b3c:	sar    BYTE PTR [edi+0x59b59663],1
  403b42:	and    ch,BYTE PTR [eax-0x8]
  403b45:	dec    eax
  403b46:	aas    
  403b47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b48:	popa   
  403b49:	mov    WORD PTR [edi-0x40],ds
  403b4c:	mov    al,ds:0x4ca681ba
  403b51:	or     al,ch
  403b53:	sub    DWORD PTR [eax+0x3a],eax
  403b56:	in     eax,0xe0
  403b58:	dec    ebp
  403b59:	dec    DWORD PTR [eax-0x3af06cd9]
  403b5f:	fwait
  403b60:	lds    edx,FWORD PTR [esi]
  403b62:	out    dx,eax
  403b63:	add    bl,ah
  403b65:	sti    
  403b66:	outs   dx,DWORD PTR ds:[esi]
  403b67:	and    ch,BYTE PTR [ecx-0x35d45514]
  403b6d:	push   ebp
  403b6e:	push   ss
  403b6f:	mov    edx,0xbce8143c
  403b74:	es retf 0xf560
  403b78:	mov    eax,ds:0x3f7047ae
  403b7d:	mov    bh,0x3f
  403b7f:	ins    DWORD PTR es:[edi],dx
  403b80:	cmp    ah,ch
  403b82:	popa   
  403b83:	dec    ecx
  403b84:	xor    eax,0x49da8171
  403b89:	xlat   BYTE PTR ds:[ebx]
  403b8a:	test   al,ah
  403b8c:	sahf   
  403b8d:	retf   
  403b8e:	mov    BYTE PTR [ebx+0x1c0f200e],al
  403b94:	cmp    ecx,ecx
  403b96:	sbb    ah,BYTE PTR [ebp+ebp*4+0x45]
  403b9a:	fs jp  0x403b2b
  403b9d:	ss inc eax
  403b9f:	xchg   ch,ch
  403ba1:	ret    
  403ba2:	jb     0x403b72
  403ba4:	sar    DWORD PTR [ebp+0x3f0e0d6a],1
  403baa:	and    al,BYTE PTR [eax-0x6]
  403bad:	gs jmp 0xcced:0x149a4595
  403bb5:	imul   esp,DWORD PTR [ecx+0x28],0x1cf56aac
  403bbc:	loopne 0x403b5a
  403bbe:	sub    DWORD PTR [ebx+0x5a1a046b],edi
  403bc4:	retf   
  403bc5:	mov    al,0xdb
  403bc7:	and    al,0xbc
  403bc9:	mov    cl,0x0
  403bcb:	mov    edi,esp
  403bcd:	jno    0x403bb4
  403bcf:	loopne 0x403c00
  403bd1:	cli    
  403bd2:	imul   ebx,DWORD PTR [ebx+0x4b7f2a84],0xd3c070b9
  403bdc:	push   ecx
  403bdd:	mov    esi,0x9f9a1c14
  403be2:	nop
  403be3:	imul   edx,esp,0x26bead06
  403be9:	sub    cl,ah
  403beb:	jmp    0xaf19:0x818cd563
  403bf2:	jns    0x403c63
  403bf4:	test   BYTE PTR [edi],ch
  403bf6:	popa   
  403bf7:	mov    ecx,0x4f9f73be
  403bfc:	(bad)  
  403bfd:	xor    eax,0x12bdf71
  403c02:	sub    BYTE PTR [ecx+0x59558cd2],dl
  403c08:	jl     0x403bcc
  403c0a:	bound  esi,QWORD PTR [edi]
  403c0c:	mov    edx,0xea118560
  403c11:	inc    eax
  403c12:	mov    ch,0xda
  403c14:	push   ecx
  403c15:	dec    esi
  403c16:	out    0xc,al
  403c18:	jb     0x403bb0
  403c1a:	fstp   QWORD PTR [ebx]
  403c1c:	loope  0x403c04
  403c1e:	cmp    al,0xc4
  403c20:	cmp    BYTE PTR [edx],0x7f
  403c23:	xor    eax,0xfb8f5ab3
  403c28:	ja     0x403c5a
  403c2a:	fisubr WORD PTR [eax+0x17]
  403c2d:	push   es
  403c2e:	jmp    0x403bb4
  403c30:	jno    0x403c09
  403c32:	and    BYTE PTR [esi-0x3d],bl
  403c35:	push   edx
  403c36:	push   es
  403c37:	inc    eax
  403c38:	dec    edx
  403c3a:	mov    ah,0xa8
  403c3c:	(bad)  
  403c3d:	jmp    0xe31f:0x85f9ee38
  403c44:	inc    esp
  403c45:	add    al,0xd9
  403c47:	aam    0x39
  403c49:	pop    esi
  403c4a:	xlat   BYTE PTR ds:[ebx]
  403c4b:	lods   eax,DWORD PTR ds:[esi]
  403c4c:	jns    0x403c89
  403c4e:	xor    ebx,ebx
  403c50:	jge    0x403c57
  403c52:	mov    bl,0xcc
  403c54:	repnz pusha 
  403c56:	mov    ds:0x4f361fb4,al
  403c5b:	cmp    DWORD PTR [edx+0x48b341a5],ecx
  403c61:	xchg   esp,eax
  403c62:	xor    ebx,DWORD PTR [eax]
  403c64:	pop    edx
  403c65:	in     al,dx
  403c66:	gs jno 0x403ca2
  403c69:	or     eax,0x13599ceb
  403c6e:	addr16 dec ebp
  403c70:	dec    ebp
  403c71:	ror    DWORD PTR [ecx],cl
  403c73:	sbb    ah,BYTE PTR [edi-0x19]
  403c76:	jecxz  0x403c3a
  403c78:	push   0xffffffeb
  403c7a:	dec    edi
  403c7b:	and    eax,0x868fb3e6
  403c80:	pop    edi
  403c81:	jg     0x403c9c
  403c83:	ins    BYTE PTR es:[edi],dx
  403c84:	(bad)  
  403c86:	mov    cl,0x9b
  403c88:	hlt    
  403c89:	push   es
  403c8a:	inc    esi
  403c8b:	adc    al,0x8d
  403c8d:	dec    esi
  403c8e:	dec    eax
  403c8f:	push   ebx
  403c90:	or     al,0x76
  403c92:	ror    BYTE PTR [ebp+0xd],1
  403c95:	xor    eax,0x49f9d3d6
  403c9a:	lahf   
  403c9b:	mov    esp,0x40ec71f3
  403ca0:	xchg   ebx,eax
  403ca1:	clc    
  403ca2:	or     al,0xc2
  403ca4:	stos   DWORD PTR es:[edi],eax
  403ca5:	sbb    edi,DWORD PTR [ebp-0x47c05527]
  403cab:	mov    ch,0xad
  403cad:	inc    esi
  403cae:	mov    esp,0x9e1eac4b
  403cb3:	(bad)  [ebp-0x4e]
  403cb6:	in     eax,dx
  403cb7:	test   BYTE PTR [ecx],al
  403cb9:	stos   DWORD PTR es:[edi],eax
  403cba:	mov    ebp,0x5bca5f5b
  403cbf:	cdq    
  403cc0:	fisub  WORD PTR [edx-0x69623d95]
  403cc6:	loope  0x403cf3
  403cc8:	arpl   WORD PTR [esp+eax*8-0x76],sp
  403ccc:	push   cs
  403ccd:	ins    BYTE PTR es:[edi],dx
  403cce:	sbb    BYTE PTR [ebx],cl
  403cd0:	(bad)  
  403cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cd2:	inc    ebp
  403cd3:	cmp    BYTE PTR [ecx+0x43],dl
  403cd6:	add    eax,0x40ad730f
  403cdb:	inc    ebx
  403cdc:	add    edx,DWORD PTR [ebx+0x29]
  403cdf:	xchg   ebp,eax
  403ce0:	xor    DWORD PTR [ecx],ebp
  403ce2:	bnd jb 0x403d05
  403ce5:	sbb    bl,BYTE PTR [ecx+0x36]
  403ce8:	dec    esp
  403ce9:	imul   BYTE PTR ds:0x12a17627
  403cef:	mov    ecx,0xb66f2184
  403cf4:	lahf   
  403cf5:	jno    0x403c84
  403cf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cf8:	pop    esp
  403cf9:	stos   DWORD PTR es:[edi],eax
  403cfa:	mov    ds:0xd3ebbeec,al
  403cff:	sub    ah,BYTE PTR [ebx+0x1f048e50]
  403d05:	sbb    esi,DWORD PTR [edi+eiz*1]
  403d08:	ret    0x7315
  403d0b:	pop    edi
  403d0c:	jb     0x403c96
  403d0e:	(bad)  
  403d0f:	fist   WORD PTR [edi+0x51]
  403d12:	cmp    dl,BYTE PTR ds:0xdaa8fc8e
  403d18:	cmp    dl,dl
  403d1a:	int3   
  403d1b:	ss aam 0xa2
  403d1e:	sahf   
  403d1f:	mov    esp,0xd57ce796
  403d24:	aaa    
  403d25:	xor    BYTE PTR [ebx],dh
  403d27:	stc    
  403d28:	hlt    
  403d29:	xchg   edi,eax
  403d2a:	jp     0x403d9e
  403d2c:	sbb    ch,BYTE PTR [edi]
  403d2e:	adc    DWORD PTR [edx+0x50],eax
  403d31:	dec    ebx
  403d32:	enter  0x2954,0x50
  403d36:	ins    DWORD PTR es:[edi],dx
  403d37:	push   ecx
  403d38:	sbb    al,0x7b
  403d3a:	xchg   ecx,eax
  403d3b:	cmp    BYTE PTR [esi],ch
  403d3d:	and    edi,DWORD PTR [ebp+ebp*8+0x6439b39b]
  403d44:	sar    BYTE PTR [edx],1
  403d46:	hlt    
  403d47:	cmc    
  403d48:	shl    bl,1
  403d4a:	or     eax,DWORD PTR [edi+0x1fc0f03c]
  403d50:	xchg   ebp,eax
  403d51:	cmp    eax,DWORD PTR [edi]
  403d53:	les    ebp,FWORD PTR [edx]
  403d55:	mov    DWORD PTR ds:0x2efcb1e8,ecx
  403d5b:	ds sub eax,0xebbf11d8
  403d61:	push   ebp
  403d62:	out    dx,eax
  403d63:	(bad)  
  403d64:	mov    edi,DWORD PTR [eax-0x78]
  403d67:	daa    
  403d68:	sbb    dl,0xfa
  403d6b:	jl     0x403da1
  403d6d:	dec    esp
  403d6e:	push   ds
  403d6f:	test   al,0xe1
  403d71:	jae    0x403da3
  403d73:	shl    DWORD PTR [edi+0x354a1046],0x42
  403d7a:	inc    eax
  403d7b:	nop
  403d7c:	aas    
  403d7d:	inc    ecx
  403d7e:	pop    ebx
  403d7f:	push   ebp
  403d80:	pushf  
  403d81:	add    eax,0xa4681c97
  403d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d87:	add    ah,BYTE PTR [eax-0x4ae921e3]
  403d8d:	retf   0xb931
  403d90:	icebp  
  403d91:	add    al,0xf4
  403d93:	stos   DWORD PTR es:[edi],eax
  403d94:	cwde   
  403d95:	cmc    
  403d96:	xor    cl,dh
  403d98:	inc    cx
  403d9a:	mov    al,ds:0xc2beab7d
  403d9f:	loopne 0x403e17
  403da1:	mov    esp,esi
  403da3:	loopne 0x403d34
  403da5:	pop    ecx
  403da6:	jl     0x403dc2
  403da8:	into   
  403da9:	cdq    
  403daa:	loop   0x403e09
  403dac:	(bad)  
  403dad:	(bad)  
  403dae:	rcr    BYTE PTR [ebx],cl
  403db0:	sti    
  403db1:	adc    ecx,DWORD PTR [ebp-0x47c77cd6]
  403db7:	mov    eax,ds:0xbc3d5dca
  403dbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dbd:	jge    0x403d62
  403dbf:	clc    
  403dc0:	(bad)  
  403dc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc2:	or     ah,BYTE PTR [esi]
  403dc4:	jmp    0x403e28
  403dc6:	repz mov bl,0xba
  403dc9:	or     edx,0x1cfc2849
  403dcf:	lock jno 0x403dba
  403dd2:	mov    ds:0xedea90d5,al
  403dd7:	(bad)  
  403dd8:	test   eax,0xdd0b980e
  403ddd:	ins    BYTE PTR es:[edi],dx
  403dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ddf:	dec    ebp
  403de0:	jp     0x403dd1
  403de2:	rol    DWORD PTR [edi],1
  403de4:	outs   dx,BYTE PTR ds:[esi]
  403de5:	xchg   edi,eax
  403de6:	ret    
  403de7:	xchg   edx,eax
  403de8:	jge    0x403de3
  403dea:	in     al,0x62
  403dec:	dec    edi
  403ded:	cld    
  403dee:	xchg   edi,eax
  403def:	push   ecx
  403df0:	(bad)  
  403df1:	mov    edi,0xe6b87322
  403df6:	ja     0x403d8a
  403df8:	mov    dh,0xa9
  403dfa:	adc    BYTE PTR ds:0x4b0a77e5,dh
  403e00:	out    dx,al
  403e01:	push   cs
  403e02:	aas    
  403e03:	xchg   ch,al
  403e05:	sti    
  403e06:	mov    edx,0x7eddba7b
  403e0b:	mov    eax,ds:0x2490d185
  403e10:	sub    edx,DWORD PTR [edx-0x20]
  403e13:	bound  ax,DWORD PTR [ecx-0x42d2b841]
  403e1a:	jmp    0xceb23ff1
  403e1f:	mov    WORD PTR [eax+0x116f7abb],?
  403e25:	fnstcw WORD PTR [ebp+0xeaf64d2]
  403e2b:	fnsave [ebp+0x1a]
  403e2e:	pop    ds
  403e2f:	das    
  403e30:	mov    fs,WORD PTR [ebp-0x25a096b4]
  403e36:	(bad)
  403e39:	xchg   DWORD PTR [ebx+0x7d],eax
  403e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e3d:	and    edx,DWORD PTR [ebx+0x34]
  403e40:	or     DWORD PTR [ebx-0x45],eax
  403e43:	rcr    DWORD PTR [ebp-0x327928b7],1
  403e49:	icebp  
  403e4a:	je     0x403ea2
  403e4c:	neg    DWORD PTR [esp+edx*2+0x5b314355]
  403e53:	sbb    DWORD PTR [ebx+edx*1-0x5894b71c],eax
  403e5a:	cmovp  edi,esi
  403e5d:	push   0x42ab57f6
  403e62:	jns    0x403e2b
  403e64:	push   0x1721ae6b
  403e69:	xor    eax,0x3686d59b
  403e6e:	or     al,0x41
  403e70:	mov    edx,0x69f33723
  403e75:	adc    esi,DWORD PTR [ebx]
  403e77:	mov    ebp,0xfe2a40a7
  403e7c:	shl    DWORD PTR [edx-0x548649f8],0x6d
  403e83:	adc    esi,DWORD PTR [eax-0x50]
  403e86:	sbb    bl,BYTE PTR [ebx+0x72bfd419]
  403e8c:	jle    0x403e16
  403e8e:	dec    esp
  403e8f:	out    0x20,al
  403e91:	pop    ebx
  403e92:	sub    dl,dh
  403e94:	adc    eax,0xf16b806f
  403e99:	xor    bl,ah
  403e9b:	jno    0x403e22
  403e9d:	call   0xcf5ec115
  403ea2:	mov    ss,edx
  403ea4:	dec    edi
  403ea5:	in     eax,dx
  403ea6:	fs iret 
  403ea8:	cli    
  403ea9:	sub    eax,0x59600085
  403eae:	jbe    0x403ef8
  403eb0:	add    DWORD PTR [edi+ecx*2+0x78],ecx
  403eb4:	push   DWORD PTR [edi+0x2de88c25]
  403eba:	outs   dx,BYTE PTR ds:[esi]
  403ebb:	stos   BYTE PTR es:[edi],al
  403ebc:	mov    dl,cl
  403ebe:	dec    eax
  403ebf:	clc    
  403ec0:	repz and ebp,DWORD PTR [ebp+ebp*4-0x5df61d28]
  403ec8:	dec    edx
  403ec9:	iret   
  403eca:	lock lahf 
  403ecc:	ins    BYTE PTR es:[edi],dx
  403ecd:	sbb    cl,BYTE PTR [ecx+0x620108de]
  403ed3:	adc    esi,0xffffffad
  403ed6:	inc    eax
  403ed7:	jb     0x403ef5
  403ed9:	adc    eax,0xd454928b
  403ede:	ins    BYTE PTR es:[edi],dx
  403edf:	stc    
  403ee0:	xchg   DWORD PTR [ebx],edi
  403ee2:	mov    bh,0x41
  403ee4:	or     edi,DWORD PTR [eax]
  403ee6:	pop    esp
  403ee7:	cli    
  403ee8:	add    al,0xd7
  403eea:	sbb    eax,0x605897a6
  403eef:	jno    0x403eb0
  403ef1:	mov    DWORD PTR [ebp+0x60],esi
  403ef4:	xlat   BYTE PTR ds:[ebx]
  403ef5:	fadd   QWORD PTR [eax]
  403ef7:	repz cmp DWORD PTR [eax+0x34],eax
  403efb:	enter  0xba8e,0x67
  403eff:	sbb    ecx,DWORD PTR es:[ebx]
  403f02:	mov    edx,0x67a3daf5
  403f07:	aas    
  403f08:	xchg   edx,eax
  403f09:	idiv   DWORD PTR [edi]
  403f0b:	cdq    
  403f0c:	mov    DWORD PTR [ebp+0xdaeeb2a],edx
  403f12:	lods   al,BYTE PTR ds:[esi]
  403f13:	pop    DWORD PTR ds:0x27da36f1
  403f19:	ins    BYTE PTR es:[edi],dx
  403f1a:	(bad)  
  403f1b:	or     edi,ecx
  403f1d:	pop    ecx
  403f1e:	fstp   TBYTE PTR [esi+0x3f4da475]
  403f24:	and    eax,0xbc888f8
  403f29:	and    eax,0xc022cbf2
  403f2e:	fild   WORD PTR [esi+0x1e1b6e6a]
  403f34:	mov    ebx,DWORD PTR [esi]
  403f36:	ds push ds
  403f38:	push   0xbbd22f97
  403f3d:	sbb    ebx,DWORD PTR [edi+0x58]
  403f40:	fisubr WORD PTR [edi]
  403f42:	xor    eax,DWORD PTR ds:0x82517059
  403f48:	mov    ebx,gs
  403f4a:	sbb    BYTE PTR [ebx],ah
  403f4c:	test   eax,0xb7938e12
  403f51:	dec    ecx
  403f52:	adc    DWORD PTR [edx],edi
  403f54:	rcr    BYTE PTR [eax-0xb],1
  403f57:	add    eax,0xeb15d2ac
  403f5c:	push   esi
  403f5d:	icebp  
  403f5e:	fimul  DWORD PTR [eax+0x8d7dde7]
  403f64:	nop
  403f65:	sub    dl,BYTE PTR [eax]
  403f67:	(bad)  
  403f68:	jno    0x403f00
  403f6a:	jle    0x403f41
  403f6c:	psubsw mm6,QWORD PTR [edi]
  403f6f:	lea    esp,[ecx+0x7fdff470]
  403f75:	gs aad 0xc8
  403f78:	cwde   
  403f79:	push   cs
  403f7a:	aas    
  403f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7c:	nop
  403f7d:	jle    0x403ff1
  403f7f:	popa   
  403f80:	lea    esp,[edi]
  403f82:	add    DWORD PTR [ecx],esi
  403f84:	cld    
  403f85:	aad    0x48
  403f87:	add    al,0x40
  403f89:	fmul   st,st(4)
  403f8b:	sbb    DWORD PTR [ecx],esp
  403f8d:	loopne 0x403feb
  403f8f:	xor    DWORD PTR [di],ebp
  403f92:	jp     0x403fd4
  403f94:	and    eax,0xf02d16b7
  403f99:	xchg   ebx,eax
  403f9a:	pop    edx
  403f9b:	adc    DWORD PTR [ebx+0x56],ebx
  403f9e:	jmp    0x145fa6a6
  403fa3:	lock xchg ecx,eax
  403fa5:	outs   dx,DWORD PTR ds:[esi]
  403fa6:	(bad)  
  403faa:	mov    ecx,0x2df60151
  403faf:	cmc    
  403fb0:	mov    edx,0xb1afd992
  403fb5:	push   eax
  403fb6:	jo     0x40400a
  403fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fb9:	(bad)  
  403fba:	clc    
  403fbb:	(bad)  
  403fbc:	shl    DWORD PTR [edi-0x48],1
  403fbf:	aad    0x47
  403fc1:	push   ss
  403fc2:	lods   eax,DWORD PTR ds:[esi]
  403fc3:	push   ebp
  403fc4:	fdivr  st,st(0)
  403fc6:	xchg   cl,cl
  403fc8:	push   0x43
  403fca:	fdivr  DWORD PTR [ebp-0x54]
  403fcd:	jmp    0xcd7c6e0f
  403fd2:	jg     0x404006
  403fd4:	jno    0x404008
  403fd6:	jo     0x403f89
  403fd8:	rcl    ebx,1
  403fda:	sub    al,0x50
  403fdc:	xchg   BYTE PTR [esi+eiz*8+0x656b62c],dh
  403fe3:	mov    edi,0x97198b28
  403fe8:	add    al,0x28
  403fea:	push   ss
  403feb:	mov    WORD PTR [ebx],?
  403fed:	pop    bx
  403fef:	ins    DWORD PTR es:[edi],dx
  403ff0:	loop   0x403f7b
  403ff2:	bnd jle 0x403ffa
  403ff5:	mov    ch,BYTE PTR [edi+0xb]
  403ff8:	add    esp,DWORD PTR [ebp+0x34]
  403ffb:	push   ds
  403ffc:	scas   eax,DWORD PTR es:[edi]
  403ffd:	hlt    
  403ffe:	inc    ecx
  403fff:	xchg   eax,esp
  404001:	(bad)  
  404002:	rcr    al,0x13
  404005:	push   eax
  404006:	add    cl,BYTE PTR [ecx-0x3a9bac0b]
  40400c:	push   0xffffffdb
  40400e:	sbb    DWORD PTR [eax+0x2a],edx
  404011:	ret    0xf6f4
  404014:	rcl    DWORD PTR [ecx+0x3a52d664],1
  40401a:	rol    dl,cl
  40401c:	(bad)  
  40401d:	push   0x353ca281
  404022:	push   ebx
  404023:	je     0x404041
  404025:	adc    eax,0x7b24f8af
  40402a:	push   es
  40402b:	cmp    eax,0x55b51b97
  404030:	addr16 mov ds:0xfe22,al
  404034:	fidiv  WORD PTR [eax+esi*4]
  404037:	mov    ah,0x1a
  404039:	fcom   QWORD PTR [esi]
  40403b:	mov    ?,ecx
  40403d:	cmp    dh,al
  40403f:	push   ds
  404040:	xchg   ebx,eax
  404041:	scas   eax,DWORD PTR es:[edi]
  404042:	arpl   WORD PTR [ebx-0x6e1ee3bd],si
  404048:	and    al,0xad
  40404a:	inc    edi
  40404b:	mov    dl,BYTE PTR [ebp-0x5a]
  40404e:	js     0x403ff1
  404050:	lahf   
  404051:	add    eax,0x5b3d8a24
  404056:	cld    
  404057:	push   ds
  404058:	jmp    0xfe87:0x80a99675
  40405f:	out    dx,al
  404060:	or     cl,BYTE PTR [ebx+0xdc9335f]
  404066:	nop
  404067:	and    eax,0x1d1c6724
  40406c:	xchg   esi,eax
  40406d:	mov    dh,0xdc
  40406f:	ret    0xdfd7
  404072:	ins    BYTE PTR es:[edi],dx
  404073:	mov    WORD PTR [ebx-0x5e],?
  404076:	xchg   ecx,eax
  404077:	addr16 pop ecx
  404079:	mov    dl,0xfc
  40407b:	and    DWORD PTR [eax-0x11],0x5
  40407f:	call   0x8a77c90e
  404084:	add    BYTE PTR [ecx],al
  404086:	sub    BYTE PTR [ecx+0x72],0xff
  40408a:	xor    dh,BYTE PTR [ecx+ebp*2-0x53]
  40408e:	call   0x6d982522
  404093:	inc    edi
  404094:	(bad)  
  404095:	cld    
  404096:	(bad)  
  404097:	ins    DWORD PTR es:[edi],dx
  404098:	fmul   DWORD PTR [edi]
  40409a:	bswap  ebp
  40409c:	bound  ebx,QWORD PTR [ebp+0x245f229b]
  4040a2:	imul   BYTE PTR [esi-0x39]
  4040a5:	sub    ebp,ebp
  4040a7:	js     0x4040e2
  4040a9:	test   BYTE PTR [eax-0x72],al
  4040ac:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040ae:	adc    BYTE PTR [eax],0xe2
  4040b1:	pop    ss
  4040b2:	mov    dh,0xd3
  4040b4:	xchg   edi,eax
  4040b5:	cwde   
  4040b6:	cmp    al,0x6a
  4040b8:	call   0xc7b21fb9
  4040bd:	data16 jbe 0x4040ad
  4040c0:	and    bl,0x9
  4040c3:	call   0xe4ce9906
  4040c8:	cld    
  4040c9:	mov    al,ds:0x70f7d110
  4040ce:	stos   BYTE PTR es:[edi],al
  4040cf:	popf   
  4040d0:	repnz stos DWORD PTR es:[edi],eax
  4040d2:	loopne 0x4040c0
  4040d4:	adc    ebp,0xaeae06b3
  4040da:	mov    dl,dl
  4040dc:	adc    BYTE PTR [ecx],dl
  4040de:	mov    ecx,0xcccb4b23
  4040e3:	adc    ah,bl
  4040e5:	nop
  4040e6:	mov    cs,eax
  4040e8:	das    
  4040e9:	(bad)  
  4040ea:	dec    edx
  4040eb:	fdiv   st(4),st
  4040ed:	out    dx,eax
  4040ee:	adc    esi,DWORD PTR [edi]
  4040f0:	or     eax,0x7570aede
  4040f5:	xor    esi,DWORD PTR [ebx-0x24]
  4040f8:	mov    ds:0x953be3f0,al
  4040fd:	xor    DWORD PTR [ecx+edi*4+0x6f],edx
  404101:	jg     0x404168
  404103:	lods   al,BYTE PTR ds:[esi]
  404104:	out    0xa6,al
  404106:	mov    eax,0xf07b1915
  40410b:	jns    0x404186
  40410d:	xor    eax,0xfd0cfa59
  404112:	sub    ebp,DWORD PTR [edx+ebp*8+0x62]
  404116:	xchg   esi,eax
  404117:	popf   
  404118:	dec    eax
  404119:	rcl    DWORD PTR [ecx+0x65],cl
  40411c:	xchg   edi,eax
  40411d:	mov    ds:0xdff5df2a,al
  404122:	test   BYTE PTR ss:[edx+0x4],al
  404126:	loopne 0x4040cc
  404128:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404129:	and    ebx,DWORD PTR [ebx-0x589f0a27]
  40412f:	ja     0x4040ee
  404131:	rcr    BYTE PTR [ebx-0x5],1
  404134:	lock idiv BYTE PTR cs:[edx+0x4e]
  404139:	push   ds
  40413a:	and    bl,BYTE PTR [ebx+0x2367e13d]
  404140:	dec    ecx
  404141:	stc    
  404142:	mov    eax,0x7d870188
  404147:	cmc    
  404148:	cmp    BYTE PTR [ebx],bl
  40414a:	ins    BYTE PTR es:[edi],dx
  40414b:	loope  0x40410e
  40414d:	mov    ah,BYTE PTR ds:0xd57000b0
  404153:	dec    edx
  404154:	test   eax,0x9681d11c
  404159:	jae    0x4040f5
  40415b:	push   ecx
  40415c:	xchg   BYTE PTR [edi-0x38b9aee5],ch
  404162:	sbb    DWORD PTR [esi+0x6a],eax
  404165:	push   ebx
  404166:	fimul  DWORD PTR [eax+edi*8+0x6f9b102f]
  40416d:	add    dh,BYTE PTR [ebx-0x3b]
  404170:	mov    al,ds:0x132d03d6
  404175:	aad    0x80
  404177:	test   BYTE PTR [edi+edi*8],dl
  40417a:	mov    bh,0xd3
  40417c:	mov    eax,0x61a2ec0e
  404181:	sbb    DWORD PTR [edi-0x8042068],ecx
  404187:	adc    al,0x54
  404189:	test   ebp,eax
  40418b:	(bad)  
  40418c:	nop
  40418d:	in     al,0xe
  40418f:	adc    al,0x66
  404191:	jge    0x404152
  404193:	inc    esi
  404194:	pop    esp
  404195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404196:	or     DWORD PTR [eax-0xa],eax
  404199:	imul   ecx,DWORD PTR [ecx],0x6d
  40419c:	mov    dl,0xb0
  40419e:	lea    esi,[ebp+0xaec6f45]
  4041a4:	out    0xff,eax
  4041a6:	and    al,0xef
  4041a8:	mov    WORD PTR [edi+0x50c3baab],?
  4041ae:	pop    eax
  4041af:	adc    eax,DWORD PTR [eax-0x20]
  4041b2:	sar    DWORD PTR [ecx],1
  4041b4:	inc    esi
  4041b5:	repz (bad) 
  4041b7:	pop    esp
  4041b8:	sbb    BYTE PTR ds:0xa12793ba,0x98
  4041bf:	iret   
  4041c0:	dec    ecx
  4041c1:	xor    DWORD PTR [esi-0x52],esp
  4041c4:	sub    ch,BYTE PTR [ecx+edi*8]
  4041c7:	(bad)  
  4041c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c9:	push   ebp
  4041ca:	push   ebp
  4041cb:	aad    0xc
  4041cd:	cmp    ah,BYTE PTR ds:0x20be3764
  4041d3:	test   esp,esp
  4041d5:	test   al,0x17
  4041d7:	mov    al,ds:0xe58e3962
  4041dc:	les    esp,FWORD PTR [ebx]
  4041de:	mov    eax,ds:0xd51c115c
  4041e3:	out    0x46,al
  4041e5:	fbld   TBYTE PTR [esi+0x32]
  4041e8:	mov    ah,0x5f
  4041ea:	or     DWORD PTR ds:0x30803792,0x9702c849
  4041f4:	xchg   ebp,eax
  4041f5:	into   
  4041f6:	(bad)  
  4041f7:	imul   BYTE PTR [ebp+0xb]
  4041fa:	adc    eax,0xcfe000d1
  4041ff:	jmp    0x5c11:0x19262135
  404206:	push   esi
  404207:	xchg   bl,al
  404209:	dec    eax
  40420a:	(bad)  
  40420b:	and    bl,BYTE PTR [ecx]
  40420d:	(bad)  
  40420e:	out    0x3c,eax
  404210:	and    al,0xf8
  404212:	inc    ecx
  404213:	pop    es
  404214:	dec    ebp
  404215:	or     eax,0xdcd13075
  40421a:	xlat   BYTE PTR ds:[ebx]
  40421b:	pop    es
  40421c:	scas   eax,DWORD PTR es:[edi]
  40421d:	push   edx
  40421e:	sbb    al,0xe3
  404220:	mov    esp,0xca6d9802
  404225:	sub    ah,cl
  404227:	and    DWORD PTR [edi-0x62acdfa1],0x9f7aee0f
  404231:	pop    edi
  404232:	nop
  404233:	mov    ds:0x93c8203a,eax
  404238:	dec    edi
  404239:	pop    esi
  40423a:	pop    edi
  40423b:	loopne 0x404211
  40423d:	push   ebp
  40423e:	jbe    0x404247
  404240:	jb     0x4041e3
  404242:	xchg   DWORD PTR [ebx+0x6e],ecx
  404245:	jp     0x404220
  404247:	dec    esi
  404248:	stos   DWORD PTR es:[edi],eax
  404249:	into   
  40424a:	cmp    esp,DWORD PTR [eax]
  40424c:	jb     0x4042bc
  40424e:	adc    esi,DWORD PTR [edi+eax*4]
  404251:	shl    bl,0x96
  404254:	jmp    0x404225
  404256:	push   ebp
  404257:	js     0x4041d9
  404259:	push   0x81036a2b
  40425e:	push   0x2875fe1f
  404263:	inc    eax
  404264:	hlt    
  404265:	popa   
  404266:	bound  edi,QWORD PTR ds:0x34f01bb6
  40426c:	repz xchg esp,eax
  40426e:	push   0xffffffa7
  404270:	cld    
  404271:	cdq    
  404272:	mov    bl,0xb6
  404274:	shl    DWORD PTR [esi],1
  404276:	popf   
  404277:	aas    
  404278:	pop    es
  404279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40427a:	inc    ecx
  40427b:	push   edi
  40427c:	mov    cs,WORD PTR ds:0x8244f71
  404282:	adc    DWORD PTR [bp+di-0x6],esi
  404286:	push   ss
  404287:	(bad)  [edx+0xaa1885f]
  40428d:	push   edi
  40428e:	iret   
  40428f:	cmc    
  404290:	sbb    al,0x3a
  404292:	sub    bh,BYTE PTR [eax+0x3d490869]
  404298:	pop    ecx
  404299:	popf   
  40429a:	mov    edx,0xd2c4ad0c
  40429f:	jne    0x4042fa
  4042a1:	dec    edx
  4042a2:	dec    esp
  4042a3:	ja     0x40428b
  4042a5:	inc    edx
  4042a6:	xacquire xchg BYTE PTR [edx],ah
  4042a9:	jmp    0x34cd:0x88ae39fa
  4042b0:	push   ebp
  4042b1:	ret    
  4042b2:	cmp    bh,ah
  4042b4:	or     eax,0x1fdcf14c
  4042b9:	sahf   
  4042ba:	push   0xade0310a
  4042bf:	hlt    
  4042c0:	sahf   
  4042c1:	jl     0x40427a
  4042c3:	jmp    0xa4199e3e
  4042c8:	xchg   ecx,eax
  4042c9:	retf   
  4042ca:	sahf   
  4042cb:	cmp    ecx,DWORD PTR [edi+0x6f]
  4042ce:	out    dx,al
  4042cf:	(bad)  
  4042d0:	clc    
  4042d1:	lods   eax,DWORD PTR ds:[esi]
  4042d2:	(bad)  
  4042d3:	fucomi st,st(2)
  4042d5:	lods   al,BYTE PTR ds:[esi]
  4042d6:	and    edi,0x13b846a3
  4042dc:	jp     0x4042d8
  4042de:	cmp    eax,0x3a0fa87
  4042e3:	aaa    
  4042e4:	adc    eax,0xc29b0131
  4042e9:	aas    
  4042ea:	inc    esi
  4042eb:	sahf   
  4042ec:	pushf  
  4042ed:	sub    DWORD PTR [ecx],edx
  4042ef:	mov    esi,DWORD PTR [eax]
  4042f1:	inc    ebp
  4042f2:	out    0xb6,eax
  4042f4:	rcr    DWORD PTR [ebx+0x2b7b26dd],1
  4042fa:	or     BYTE PTR [esi+eiz*8-0x55],al
  4042fe:	xlat   BYTE PTR ds:[ebx]
  4042ff:	fnstenv [esi]
  404301:	cwde   
  404302:	mov    WORD PTR [ebx-0x58884898],ds
  404308:	and    al,0xab
  40430a:	sbb    DWORD PTR [ebp+0xa7d1ea1],eax
  404310:	ja     0x404298
  404312:	jmp    0x9d86:0x7099150e
  404319:	icebp  
  40431a:	jp     0x404379
  40431c:	sbb    BYTE PTR [ecx+0x1d],ah
  40431f:	dec    esi
  404320:	fwait
  404321:	mov    esp,0x26ac01f3
  404326:	pop    eax
  404327:	pop    edx
  404328:	inc    BYTE PTR [ebx+ebx*4-0x41]
  40432c:	and    BYTE PTR [ebx],0x7c
  40432f:	push   eax
  404330:	int    0x46
  404332:	dec    edi
  404333:	pop    edi
  404334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404335:	pop    es
  404336:	or     eax,0xad21e245
  40433b:	imul   esi,DWORD PTR [ebp+0x3a],0xcdfa2e0
  404342:	push   0xf93f4aff
  404347:	jns    0x4042ce
  404349:	iret   
  40434a:	ja     0x40431a
  40434c:	pusha  
  40434d:	sub    BYTE PTR [edi],cl
  40434f:	mov    ds:0x700d7054,eax
  404354:	dec    esp
  404355:	cmp    edx,esp
  404357:	adc    eax,0xf4d9377b
  40435c:	jae    0x4043c6
  40435e:	jg     0x4042e3
  404360:	mov    ebp,0x8d8d481b
  404365:	in     al,0xa4
  404367:	adc    ecx,DWORD PTR [edx]
  404369:	lahf   
  40436a:	lods   eax,DWORD PTR ds:[esi]
  40436b:	mov    BYTE PTR [ebx+0x5eb316d9],dh
  404371:	int    0x1f
  404373:	or     bh,bh
  404375:	pop    esi
  404376:	stos   DWORD PTR es:[edi],eax
  404377:	shl    DWORD PTR [esi-0x1e80f8fb],cl
  40437d:	int3   
  40437e:	fdiv   QWORD PTR [ebx+0x57]
  404381:	dec    edx
  404382:	repz xchg esi,eax
  404384:	xor    al,0x6d
  404386:	rcl    ch,cl
  404388:	(bad)
  40438b:	cmp    ebx,DWORD PTR [esi-0x41]
  40438e:	(bad)  
  40438f:	int3   
  404390:	mov    cl,0x29
  404392:	pop    ss
  404393:	int3   
  404394:	push   es
  404395:	inc    ebx
  404396:	push   cs
  404397:	into   
  404398:	add    edi,eax
  40439a:	lds    ebp,FWORD PTR [edx+0x7cf924bf]
  4043a0:	mov    al,0x7a
  4043a2:	adc    esi,esp
  4043a4:	mov    dl,0x23
  4043a6:	pop    edi
  4043a7:	mov    dl,0x85
  4043a9:	ds xchg ebx,eax
  4043ab:	inc    ebp
  4043ac:	mov    cl,0xf2
  4043ae:	sar    DWORD PTR [edx+0x4a],cl
  4043b1:	adc    eax,0x8d64df50
  4043b6:	push   ecx
  4043b7:	cmp    cl,bh
  4043b9:	mov    bh,0x53
  4043bb:	xchg   esi,eax
  4043bc:	inc    ebp
  4043bd:	push   0x12
  4043bf:	fstp   DWORD PTR [edx-0x12]
  4043c2:	inc    eax
  4043c3:	(bad)  
  4043c4:	fisttp DWORD PTR [edi+edi*4+0x1b8c5ca9]
  4043cb:	dec    eax
  4043cc:	pop    ecx
  4043cd:	mov    eax,ds:0xf3c57f5
  4043d2:	into   
  4043d3:	jle    0x4043ff
  4043d5:	cwde   
  4043d6:	hlt    
  4043d7:	adc    eax,0xd0978ce9
  4043dc:	push   es
  4043dd:	idiv   BYTE PTR [edi]
  4043df:	mov    esi,0x5732c350
  4043e4:	(bad)  
  4043e5:	jge    0x4043aa
  4043e7:	stc    
  4043e8:	jmp    0x99991dbb
  4043ed:	xor    eax,0xd0e96183
  4043f2:	push   es
  4043f3:	and    BYTE PTR [eax],0x88
  4043f6:	mov    cl,0xfe
  4043f8:	icebp  
  4043f9:	pop    ecx
  4043fa:	and    BYTE PTR [ebx+esi*1+0x7d],0x4d
  4043ff:	mov    edx,0xb1e65390
  404404:	scas   al,BYTE PTR es:[edi]
  404405:	jae    0x404443
  404407:	call   0xa7948f04
  40440c:	dec    esi
  40440d:	and    bh,dl
  40440f:	jle    0x4043b2
  404411:	popa   
  404412:	ins    BYTE PTR es:[edi],dx
  404413:	rcr    BYTE PTR [edi+edx*2],1
  404416:	adc    al,0x25
  404418:	stos   DWORD PTR es:[edi],eax
  404419:	out    0x49,al
  40441b:	outs   dx,BYTE PTR ds:[esi]
  40441c:	push   edi
  40441d:	jge    0x4043fe
  40441f:	jge    0x4043b0
  404421:	std    
  404422:	push   edx
  404423:	lods   eax,DWORD PTR ds:[esi]
  404424:	and    eax,0x35054fff
  404429:	in     eax,dx
  40442a:	push   edx
  40442b:	lods   al,BYTE PTR ds:[esi]
  40442c:	xor    DWORD PTR [ebx],eax
  40442e:	shl    esi,0x13
  404431:	jo     0x4043fe
  404433:	cmp    bl,BYTE PTR [edi+eiz*4+0x59]
  404437:	loope  0x4043dd
  404439:	jbe    0x404421
  40443b:	ror    esp,cl
  40443d:	shl    DWORD PTR [edx+0x7805988c],1
  404443:	add    dl,BYTE PTR [edx]
  404445:	call   0xd6d5:0x967ffc4a
  40444c:	fist   DWORD PTR [eax+0x51]
  40444f:	xchg   DWORD PTR [ebx-0x70947d43],ebp
  404455:	inc    eax
  404456:	cld    
  404457:	cmp    ch,BYTE PTR [esi-0x36]
  40445a:	xlat   BYTE PTR ds:[ebx]
  40445b:	sahf   
  40445c:	mov    ds:0x5c23d4dd,eax
  404461:	cs or  al,0x52
  404464:	hlt    
  404465:	push   ds
  404466:	adc    esi,esp
  404468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404469:	jl     0x40444f
  40446b:	xchg   ebx,eax
  40446c:	aad    0x2c
  40446e:	pop    edx
  40446f:	jns    0x40446f
  404471:	stos   WORD PTR es:[edi],ax
  404473:	into   
  404474:	in     al,0xc8
  404476:	test   ch,ch
  404478:	jp     0x4043ff
  40447a:	push   edx
  40447b:	jb     0x40446e
  40447d:	fsubr  st(6),st
  40447f:	out    dx,eax
  404480:	add    al,0x6d
  404482:	mov    eax,ds:0x1334d6f7
  404487:	out    dx,eax
  404488:	add    al,0xcb
  40448a:	sbb    ebx,edi
  40448c:	loope  0x404446
  40448e:	sub    BYTE PTR ds:0x9edf76c3,ch
  404494:	xor    eax,0xd9bec7ed
  404499:	popa   
  40449a:	and    al,0x6
  40449c:	sbb    esp,DWORD PTR [ebp-0x7722bf45]
  4044a2:	mov    eax,0xa843f004
  4044a7:	adc    BYTE PTR [ebp-0x2e],dh
  4044aa:	pop    es
  4044ab:	jge    0x4044e1
  4044ad:	adc    cl,BYTE PTR [eax+0x7]
  4044b0:	call   0xe477:0xabf9a474
  4044b7:	pop    eax
  4044b8:	rcl    BYTE PTR [esp+edi*4],1
  4044bb:	sbb    al,0x88
  4044bd:	cmp    eax,0xbb6a69c7
  4044c2:	addr16 adc ch,bh
  4044c5:	or     al,0x4e
  4044c7:	pop    edx
  4044c8:	clc    
  4044c9:	dec    ecx
  4044ca:	jns    0x404453
  4044cc:	in     eax,0x90
  4044ce:	mov    bl,0x71
  4044d0:	dec    edi
  4044d1:	test   BYTE PTR [ecx-0x38],dh
  4044d4:	addr16 out 0x2d,eax
  4044d7:	xor    dl,0x2b
  4044da:	mov    eax,DWORD PTR [edx]
  4044dc:	imul   ebx,DWORD PTR [ecx],0x4fb7a95c
  4044e2:	mov    bl,0xa9
  4044e4:	add    dl,BYTE PTR [ebp-0x6839d996]
  4044ea:	lock test eax,0x4cc67c09
  4044f0:	pusha  
  4044f1:	sbb    DWORD PTR [eax+0x65],0x61393006
  4044f8:	leave  
  4044f9:	add    eax,0x37be48e3
  4044fe:	pop    eax
  4044ff:	clc    
  404500:	xor    eax,0x88f286de
  404505:	fwait
  404506:	repnz pop edx
  404508:	and    eax,0x4ed38bba
  40450d:	stos   BYTE PTR es:[edi],al
  40450e:	imul   esp,edi,0x443808db
  404514:	int    0xc3
  404516:	push   ds
  404517:	xor    bl,BYTE PTR [edx-0x31]
  40451a:	mov    ecx,0x24c0d3b5
  40451f:	fdivr  st(6),st
  404521:	push   0x1aed7bae
  404526:	adc    dh,BYTE PTR [edi]
  404528:	xchg   ecx,eax
  404529:	pusha  
  40452a:	pop    ds
  40452b:	cs push ecx
  40452d:	sahf   
  40452e:	push   edx
  40452f:	sbb    ah,BYTE PTR [edi]
  404531:	das    
  404532:	pop    es
  404533:	test   DWORD PTR [ecx+0x5408a695],ebp
  404539:	or     bh,ah
  40453b:	add    eax,esp
  40453d:	dec    edx
  40453e:	push   ds
  40453f:	rol    BYTE PTR [edx+0x5e],1
  404542:	pop    ecx
  404543:	inc    edi
  404544:	ror    DWORD PTR [esi-0x60],0x16
  404548:	mov    DWORD PTR [ecx+0x5d3a7c35],edx
  40454e:	adc    ecx,DWORD PTR [esi-0x18]
  404551:	push   ebp
  404552:	xchg   ebp,eax
  404553:	aam    0x56
  404555:	sbb    ecx,esp
  404557:	and    eax,DWORD PTR [esi-0x1ca93bb8]
  40455d:	cmp    ebp,ebp
  40455f:	jmp    0x404564
  404561:	sub    bl,dl
  404563:	mov    al,0xa7
  404565:	icebp  
  404566:	mov    ebp,0x46b72ea3
  40456b:	mov    edx,0xa0cbda69
  404570:	sub    ah,dh
  404572:	loopne 0x4045a2
  404574:	je     0x4045ee
  404576:	mov    ecx,0x9aa6e12
  40457b:	mov    ecx,0xa8a33c1e
  404580:	push   0x4f42bd57
  404585:	or     ebp,ebx
  404587:	in     eax,dx
  404588:	mov    bh,0xde
  40458a:	imul   eax,edx,0x75544383
  404590:	loopne 0x404596
  404592:	xor    DWORD PTR [ebx],ebp
  404594:	scas   al,BYTE PTR es:[edi]
  404595:	push   edi
  404596:	jge    0x40455f
  404598:	and    DWORD PTR [ebp+0x7e],esp
  40459b:	call   0x8567:0x6f99e765
  4045a2:	call   0xdabf:0x93a81fa8
  4045a9:	hlt    
  4045aa:	dec    ebx
  4045ab:	jo     0x404561
  4045ad:	mov    dl,0x4d
  4045af:	imul   edi,DWORD PTR [edx-0x4c],0x34
  4045b3:	call   0xf96a9d92
  4045b8:	dec    esp
  4045b9:	cmp    bl,0x47
  4045bc:	jne    0x4045b5
  4045be:	mov    ds:0x4d8160d0,al
  4045c3:	ins    BYTE PTR es:[edi],dx
  4045c4:	inc    ebx
  4045c5:	dec    ebx
  4045c6:	push   0xa02d34cd
  4045cb:	mov    esi,0x3bd8682a
  4045d0:	rol    BYTE PTR [esi],cl
  4045d2:	mov    dl,dh
  4045d4:	arpl   WORD PTR ss:[ecx+esi*2-0x2be04251],si
  4045dc:	jne    0x404570
  4045de:	adc    bl,BYTE PTR [ebx-0x63528e97]
  4045e4:	dec    eax
  4045e5:	mov    ebx,0x248356cd
  4045ea:	cmc    
  4045eb:	(bad)
  4045f0:	ret    0xc921
  4045f3:	inc    eax
  4045f4:	mov    bl,0xc9
  4045f6:	push   esp
  4045f7:	jb     0x40465e
  4045f9:	ins    BYTE PTR es:[edi],dx
  4045fa:	sub    al,0xf9
  4045fc:	add    eax,0xfcd317b0
  404601:	adc    dl,BYTE PTR [ecx+ebx*1-0x68]
  404605:	xchg   DWORD PTR [ebp-0x6c675ca3],edi
  40460b:	add    BYTE PTR [edx+eax*4],ch
  40460e:	mov    esi,0xb991e568
  404613:	outs   dx,DWORD PTR ds:[esi]
  404614:	pusha  
  404615:	pop    ecx
  404616:	ds rcl eax,cl
  404619:	jnp    0x404666
  40461b:	test   DWORD PTR [edx],edi
  40461d:	cli    
  40461e:	data16 jmp 0x404614
  404621:	or     esp,DWORD PTR [edx]
  404623:	mov    eax,0x34a5b471
  404628:	test   eax,0x32d3ac2e
  40462d:	loop   0x404689
  40462f:	mov    WORD PTR [eax-0x19ad08f4],?
  404635:	pop    ecx
  404636:	iret   
  404637:	jbe    0x40462f
  404639:	xchg   esp,eax
  40463a:	loop   0x404661
  40463c:	shl    DWORD PTR [ebx+0x43ddd681],1
  404642:	sbb    al,BYTE PTR [ebp-0x31f59374]
  404648:	mov    eax,0x93457b68
  40464d:	ror    esp,cl
  40464f:	adc    al,0xf4
  404651:	xchg   ecx,eax
  404652:	sbb    al,0xed
  404654:	sbb    DWORD PTR [edx],0xffffffd8
  404657:	or     eax,0x9aa8bd8
  40465c:	(bad)  
  40465d:	aam    0x90
  40465f:	mov    esp,ebx
  404661:	mov    ds:0x8ea48819,al
  404666:	pop    ecx
  404667:	and    al,dl
  404669:	xor    esi,DWORD PTR [ebp+0x789a9574]
  40466f:	mov    ebx,0xde76eb71
  404674:	leave  
  404675:	and    bl,BYTE PTR [edi+0x547fda1d]
  40467b:	xchg   BYTE PTR ds:0xfcca8bf4,cl
  404681:	cld    
  404682:	fnstcw WORD PTR fs:[bx+si-0x1d8c]
  404688:	bound  ebp,QWORD PTR [esi]
  40468a:	stc    
  40468b:	xchg   esp,eax
  40468c:	imul   ebp,DWORD PTR [ebx],0xffffffa8
  40468f:	mov    ebx,0x2533a08f
  404694:	ret    0x4aa8
  404697:	mov    al,ds:0x71ad9733
  40469c:	xor    ecx,DWORD PTR [eax-0x15d3fbef]
  4046a2:	mov    cl,0xdd
  4046a4:	(bad)  
  4046a5:	ins    BYTE PTR es:[edi],dx
  4046a6:	daa    
  4046a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046a8:	push   eax
  4046a9:	pop    esp
  4046aa:	xor    al,0x1d
  4046ac:	ror    DWORD PTR [ebx],0x9a
  4046af:	dec    eax
  4046b0:	xchg   BYTE PTR ds:0xac0a7487,dl
  4046b6:	mov    ebp,0x7c7397e2
  4046bb:	fistp  QWORD PTR [edx+ebp*2]
  4046be:	sub    edx,ebx
  4046c0:	aam    0x49
  4046c2:	shr    BYTE PTR [ebp+0x50],0xf1
  4046c6:	dec    ecx
  4046c7:	push   ebp
  4046c8:	xor    dh,0xb1
  4046cb:	mov    ebp,0x90ba57d
  4046d0:	pop    eax
  4046d1:	dec    ecx
  4046d2:	pop    esi
  4046d3:	repnz and eax,0xa9fdcfc6
  4046d9:	mov    esi,0xe9291eeb
  4046de:	(bad)  
  4046df:	mov    dl,0x67
  4046e1:	fiadd  WORD PTR [ecx]
  4046e3:	cmp    bh,dl
  4046e5:	hlt    
  4046e6:	pop    ebp
  4046e7:	cld    
  4046e8:	scas   eax,DWORD PTR es:[edi]
  4046e9:	add    al,0x52
  4046eb:	call   0xdb6a010
  4046f0:	xor    DWORD PTR [eax],edi
  4046f2:	sbb    dh,BYTE PTR [ebx-0x53b1677c]
  4046f8:	push   esi
  4046f9:	pop    eax
  4046fa:	cmp    ebp,esi
  4046fc:	arpl   WORD PTR [ecx+0xe33e6b9],sp
  404702:	ds (bad) 
  404704:	loope  0x404780
  404706:	test   al,0x1a
  404708:	inc    esi
  404709:	jo     0x404789
  40470b:	cmp    al,0x8f
  40470d:	dec    cx
  40470f:	repnz and al,0xfd
  404712:	in     eax,dx
  404713:	push   cs
  404714:	sahf   
  404715:	int    0xe
  404717:	cmc    
  404718:	sub    cl,BYTE PTR [edi+0xa]
  40471b:	jb     0x40471b
  40471d:	inc    eax
  40471e:	adc    eax,0xda059157
  404723:	push   edx
  404724:	out    dx,eax
  404725:	cwde   
  404726:	dec    esp
  404727:	fistp  WORD PTR [esi]
  404729:	cmp    DWORD PTR [edi+0x74],esi
  40472c:	sbb    ebp,DWORD PTR ds:0xf9a109c8
  404732:	jns    0x40474f
  404734:	push   0x9e52e7f0
  404739:	shr    BYTE PTR [edi+0x28becf0e],cl
  40473f:	stos   BYTE PTR es:[edi],al
  404740:	pop    es
  404741:	xor    eax,0xc02ba23d
  404746:	in     al,0xfa
  404748:	js     0x4047a2
  40474a:	mov    ebx,0x140da388
  40474f:	sub    eax,0x7547e6e7
  404754:	call   0xcf272b46
  404759:	push   es
  40475a:	sub    edi,DWORD PTR [edi+0x7b]
  40475d:	push   eax
  40475e:	add    dl,BYTE PTR [eax+0x447e24f0]
  404764:	or     ch,BYTE PTR [esi+esi*2]
  404767:	retf   0x561a
  40476a:	inc    ebx
  40476b:	push   ss
  40476c:	mov    ecx,0xc8346d98
  404771:	lahf   
  404772:	ret    0x1376
  404775:	aaa    
  404776:	jge    0x404771
  404778:	repnz mov ebp,0x4133e173
  40477e:	pop    ebx
  40477f:	out    dx,eax
  404780:	mov    edx,DWORD PTR [ecx+0x3a]
  404783:	cmp    esi,edx
  404785:	(bad)  
  404786:	adc    DWORD PTR [ecx],esp
  404788:	sbb    BYTE PTR [edi],ah
  40478a:	cli    
  40478b:	sti    
  40478c:	xchg   esi,eax
  40478d:	in     eax,dx
  40478e:	mov    ds:0xce534933,al
  404793:	pushf  
  404794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404795:	or     eax,0x8469d2fa
  40479a:	ja     0x4047d2
  40479c:	or     al,0xd5
  40479e:	outs   dx,DWORD PTR ds:[esi]
  40479f:	in     eax,dx
  4047a0:	sub    esi,DWORD PTR [eax+0x44673233]
  4047a6:	fldcw  WORD PTR [ecx+0x3]
  4047a9:	cmp    eax,0xdeebe98e
  4047ae:	jg     0x40481d
  4047b0:	bound  edi,QWORD PTR gs:[eax+edi*4+0x4b]
  4047b5:	mov    DWORD PTR [ecx+0x1b],ebx
  4047b8:	enter  0xc385,0x83
  4047bc:	jae    0x404758
  4047be:	(bad)  
  4047bf:	shr    DWORD PTR [esi+ebp*1],cl
  4047c2:	dec    ebx
  4047c3:	cmp    bh,BYTE PTR [esi+ebp*1-0x6175693f]
  4047ca:	adc    al,0x77
  4047cc:	test   DWORD PTR [ebx],ebx
  4047ce:	sbb    BYTE PTR [esi],dl
  4047d0:	sub    eax,DWORD PTR [ebp+ebp*2+0x3c]
  4047d4:	jmp    0x404827
  4047d6:	pop    ds
  4047d7:	scas   eax,DWORD PTR es:[edi]
  4047d8:	cmp    ah,ah
  4047da:	push   es
  4047db:	push   es
  4047dc:	add    bh,dl
  4047de:	jne    0x40481b
  4047e0:	ficom  WORD PTR [eax+ebx*1+0xf]
  4047e4:	inc    esp
  4047e5:	repnz out dx,al
  4047e7:	xchg   edx,eax
  4047e8:	mov    edi,0xb1113850
  4047ed:	or     al,0xa7
  4047ef:	push   edx
  4047f0:	sub    esi,DWORD PTR [esi]
  4047f2:	test   al,0x1c
  4047f4:	push   0x7c
  4047f6:	xchg   BYTE PTR [esp+esi*2+0x3799036c],ch
  4047fd:	test   al,0x29
  4047ff:	test   eax,0x72c86c0
  404804:	inc    esp
  404805:	and    eax,0xd3766432
  40480a:	retf   0x3b39
  40480d:	or     ebx,esi
  40480f:	loopne 0x404838
  404811:	scas   eax,DWORD PTR es:[edi]
  404812:	iret   
  404813:	lods   eax,DWORD PTR ds:[esi]
  404814:	jne    0x4047e7
  404816:	lods   eax,DWORD PTR ds:[esi]
  404817:	in     al,0x66
  404819:	push   eax
  40481a:	inc    ebx
  40481b:	test   BYTE PTR [eax-0x7f],al
  40481e:	into   
  40481f:	pushf  
  404820:	xchg   edi,eax
  404821:	xchg   ecx,eax
  404822:	mov    ebx,0x63ed8bf4
  404827:	popa   
  404828:	mov    dl,0xe5
  40482a:	mov    ecx,0x941ad579
  40482f:	(bad)  
  404831:	clc    
  404832:	aaa    
  404833:	mov    eax,0xbac79ad4
  404838:	scas   al,BYTE PTR es:[edi]
  404839:	inc    esi
  40483a:	adc    eax,0x27fe6701
  40483f:	adc    esi,ebx
  404841:	push   eax
  404842:	push   esi
  404843:	xchg   esi,eax
  404844:	xchg   edx,eax
  404845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404846:	ins    BYTE PTR es:[edi],dx
  404847:	fsubr  QWORD PTR ds:0x2e34ba4e
  40484d:	in     eax,0x29
  40484f:	inc    ebx
  404850:	cmp    BYTE PTR [eax+ebp*2+0x38],bh
  404854:	stos   BYTE PTR es:[edi],al
  404855:	add    al,0xf2
  404857:	push   ebx
  404858:	scas   al,BYTE PTR es:[edi]
  404859:	(bad)  
  40485a:	sbb    DWORD PTR [ecx-0x7f],eax
  40485d:	jl     0x404812
  40485f:	leave  
  404860:	int3   
  404861:	pop    ebp
  404862:	ins    DWORD PTR es:[edi],dx
  404863:	fwait
  404864:	and    al,0x7c
  404866:	xchg   BYTE PTR [esi],al
  404868:	inc    esp
  404869:	mov    eax,0x242a6000
  40486e:	out    0xe7,al
  404870:	cwde   
  404871:	cdq    
  404872:	push   ecx
  404873:	dec    esi
  404874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404875:	sar    DWORD PTR ss:[edi+0x3df62d4d],cl
  40487c:	add    eax,0xde85f7bc
  404881:	add    al,0xf6
  404883:	cmp    al,0x5b
  404885:	inc    ebp
  404886:	mov    ebx,0x92d6b2c7
  40488b:	jl     0x4048eb
  40488d:	rcr    BYTE PTR [bp+0x4c76],0x82
  404893:	int    0x34
  404895:	dec    esp
  404896:	rcr    DWORD PTR [ecx],cl
  404898:	pop    esp
  404899:	cdq    
  40489a:	scas   eax,DWORD PTR es:[edi]
  40489b:	aaa    
  40489c:	in     eax,0x83
  40489e:	frstor [eax]
  4048a0:	loopne 0x40488a
  4048a2:	or     edx,DWORD PTR [ebp-0xbdcaa9]
  4048a8:	jmp    0x404916
  4048aa:	fimul  WORD PTR [edi+eax*4+0x67]
  4048ae:	mov    dh,0xcc
  4048b0:	pop    ds
  4048b1:	push   ecx
  4048b2:	xchg   esp,eax
  4048b3:	(bad)  
  4048b4:	arpl   WORD PTR [ecx],si
  4048b6:	jns    0x404932
  4048b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b9:	rcl    BYTE PTR [esi+0x54],1
  4048bc:	push   0xc6bbc646
  4048c1:	fsub   QWORD PTR [eax]
  4048c3:	fs in  eax,dx
  4048c5:	(bad)  
  4048c6:	outs   dx,BYTE PTR ds:[esi]
  4048c7:	popf   
  4048c8:	cmp    BYTE PTR [ebx-0x39126832],dl
  4048ce:	test   DWORD PTR [esi-0x77bb380],esp
  4048d4:	adc    ah,bh
  4048d6:	mov    ah,0x36
  4048d8:	lods   al,BYTE PTR ds:[esi]
  4048d9:	imul   ecx,DWORD PTR [ebp-0x2a5a5137],0xe654d9d9
  4048e3:	call   0x6e5bd6c2
  4048e8:	call   0x14fd:0x9ed1bfd
  4048ef:	test   BYTE PTR [edx-0x6f4ec182],al
  4048f5:	mov    ?,WORD PTR [esi-0x73]
  4048f8:	fidivr WORD PTR [esi]
  4048fa:	push   edi
  4048fb:	cld    
  4048fc:	sub    dl,al
  4048fe:	inc    esp
  4048ff:	in     eax,dx
  404900:	pop    edi
  404901:	lods   eax,DWORD PTR ds:[esi]
  404902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404903:	push   edi
  404904:	pushf  
  404905:	adc    al,BYTE PTR [ecx]
  404907:	dec    edi
  404908:	loop   0x4048e6
  40490a:	and    edx,ebx
  40490c:	stos   DWORD PTR es:[edi],eax
  40490d:	leave  
  40490e:	ss mov edx,0xfe9e6d5e
  404914:	fistp  WORD PTR [edi+esi*4-0x61762397]
  40491b:	fxch   st(0)
  40491d:	fxch   st(6)
  40491f:	fwait
  404920:	bound  edi,QWORD PTR [edx+0x166efb05]
  404926:	xchg   ecx,eax
  404927:	mov    edi,0xa890f7ad
  40492c:	dec    esi
  40492d:	inc    eax
  40492e:	call   0x9873a688
  404933:	inc    esi
  404934:	in     eax,dx
  404935:	inc    edx
  404936:	xor    DWORD PTR [edx-0x55c7637f],edi
  40493c:	cmc    
  40493d:	push   eax
  40493e:	pop    ecx
  40493f:	retf   0x1e20
  404942:	fisubr WORD PTR [ebx+0x21]
  404945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404946:	pop    ebx
  404947:	mov    al,ds:0xfcba1f21
  40494c:	add    al,0xd8
  40494e:	js     0x4049cc
  404950:	nop
  404951:	xchg   edi,eax
  404952:	cmp    esi,DWORD PTR [ecx-0x63]
  404955:	js     0x404923
  404957:	fist   WORD PTR [edi]
  404959:	(bad)  
  40495a:	in     al,dx
  40495b:	sbb    BYTE PTR [ebx+0x41],ch
  40495e:	inc    eax
  40495f:	add    al,0x9
  404961:	dec    esi
  404962:	mov    edi,0xe8bf70b1
  404967:	pop    ss
  404968:	xchg   edi,eax
  404969:	inc    esi
  40496a:	mov    ds:0xf8a99f79,eax
  40496f:	rcl    DWORD PTR [eax],cl
  404971:	jns    0x4049bb
  404973:	(bad)  
  404975:	adc    DWORD PTR [eax+0x37c8fbf7],ebx
  40497b:	pushf  
  40497c:	and    dh,bl
  40497e:	push   esi
  40497f:	xchg   esp,eax
  404980:	dec    esi
  404981:	mov    dl,BYTE PTR [eax-0x2fe79395]
  404987:	pop    es
  404988:	add    al,0x27
  40498a:	push   ebp
  40498b:	add    ebx,DWORD PTR fs:[ebx]
  40498e:	and    al,0x25
  404990:	les    edi,FWORD PTR [ebx+0x32]
  404993:	inc    edi
  404994:	nop
  404995:	mov    eax,ds:0xecbea309
  40499a:	leave  
  40499b:	mov    ?,WORD PTR [ebp+0x54]
  40499e:	push   0x66
  4049a0:	into   
  4049a1:	(bad)  
  4049a2:	cld    
  4049a3:	pop    esp
  4049a4:	std    
  4049a5:	dec    ecx
  4049a6:	frstor [edx+0x53]
  4049a9:	out    0x2f,eax
  4049ab:	pop    ebp
  4049ac:	pop    esp
  4049ad:	arpl   WORD PTR [ebp-0x2f],sp
  4049b0:	push   es
  4049b1:	push   esi
  4049b2:	retf   0xc9ef
  4049b5:	pushf  
  4049b6:	inc    esi
  4049b7:	shl    BYTE PTR [edx+0x54],cl
  4049ba:	ins    DWORD PTR es:[edi],dx
  4049bb:	popa   
  4049bc:	fdivr  DWORD PTR [esp+eiz*2-0x397659d0]
  4049c3:	xchg   BYTE PTR [ebx+eax*1],ch
  4049c6:	pop    edx
  4049c7:	push   ecx
  4049c8:	repnz and DWORD PTR [ebx+0x2d972ae4],ebp
  4049cf:	jecxz  0x40498a
  4049d1:	jmp    DWORD PTR [esi+0x3eed89ce]
  4049d7:	sub    al,0xc5
  4049d9:	scas   al,BYTE PTR es:[edi]
  4049da:	dec    ecx
  4049db:	test   esp,eax
  4049dd:	ins    DWORD PTR es:[edi],dx
  4049de:	jo     0x404a40
  4049e0:	mov    dh,0xfd
  4049e2:	mov    dh,0xe7
  4049e4:	or     dl,BYTE PTR [eax+0xe]
  4049e7:	dec    ecx
  4049e8:	in     al,0x7c
  4049ea:	sbb    ebx,DWORD PTR [eax+0x33]
  4049ed:	aas    
  4049ee:	loop   0x404a4e
  4049f0:	add    esp,DWORD PTR [esi-0x2e]
  4049f3:	scas   eax,DWORD PTR es:[edi]
  4049f4:	add    BYTE PTR [esi-0x6b],ch
  4049f7:	mov    eax,0xaccae733
  4049fc:	pop    esp
  4049fd:	cwde   
  4049fe:	fwait
  4049ff:	xor    BYTE PTR [edi+0xef7b930],dl
  404a05:	popa   
  404a06:	push   ebp
  404a07:	fdiv   DWORD PTR [ecx+ecx*4+0x4]
  404a0b:	fidivr DWORD PTR [ebx-0x2b]
  404a0e:	je     0x404a28
  404a10:	jo     0x404a19
  404a12:	les    eax,FWORD PTR [edi+ebx*8-0x58]
  404a16:	pop    ebx
  404a17:	adc    BYTE PTR [ebp-0x51],0xc6
  404a1b:	adc    DWORD PTR [ebx],ecx
  404a1d:	push   0x6117cb5
  404a22:	cdq    
  404a23:	retf   
  404a24:	imul   eax,DWORD PTR [eax-0x376444cd],0x92c13857
  404a2e:	fstp   DWORD PTR ds:0x5abd8719
  404a34:	pop    ecx
  404a35:	scas   eax,DWORD PTR es:[edi]
  404a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a37:	and    al,BYTE PTR [ebx]
  404a39:	dec    BYTE PTR [ebx-0x75]
  404a3c:	fdiv   st(1),st
  404a3e:	xor    BYTE PTR [ebx-0x19],bh
  404a41:	test   esi,ebp
  404a43:	int3   
  404a44:	mov    eax,ds:0xcc225529
  404a49:	cmp    eax,0xe82cd3b8
  404a4e:	mov    ch,0xae
  404a50:	not    BYTE PTR [ebp-0xc]
  404a53:	clc    
  404a54:	push   ebx
  404a55:	pop    es
  404a56:	push   esi
  404a57:	jge    0x404a09
  404a59:	dec    ecx
  404a5a:	call   0x338c:0x1fb017e
  404a61:	dec    edx
  404a62:	(bad)  
  404a63:	loop   0x404aab
  404a65:	ret    
  404a66:	arpl   bx,di
  404a68:	sub    ebx,DWORD PTR [edx+esi*8+0x78]
  404a6c:	dec    eax
  404a6d:	out    0x7c,al
  404a6f:	inc    ecx
  404a70:	adc    ecx,ecx
  404a72:	mov    eax,0xee1235f3
  404a77:	mov    ds:0x254fbe65,eax
  404a7c:	ins    DWORD PTR es:[edi],dx
  404a7d:	arpl   WORD PTR [ecx+0xce99f7b],bp
  404a83:	loope  0x404a9f
  404a85:	dec    edx
  404a86:	shl    BYTE PTR [eax-0x47b74cf5],cl
  404a8c:	retf   
  404a8d:	lods   al,BYTE PTR ds:[esi]
  404a8e:	into   
  404a8f:	in     ax,0xb6
  404a92:	mov    ds:0xcf392df1,al
  404a97:	sub    eax,0x70291199
  404a9c:	push   edi
  404a9d:	add    BYTE PTR [ebx-0x45],dl
  404aa0:	int3   
  404aa1:	add    bh,0x94
  404aa4:	rol    BYTE PTR [eax],cl
  404aa6:	pusha  
  404aa7:	sub    DWORD PTR es:[edx-0xb],eax
  404aab:	pop    ebp
  404aac:	popf   
  404aad:	jns    0x404a90
  404aaf:	mov    edx,0xb1a2fbf8
  404ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab5:	std    
  404ab6:	aas    
  404ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ab8:	jb     0x404aff
  404aba:	mov    ebx,0xb5a9bece
  404abf:	cdq    
  404ac0:	jp     0x404aad
  404ac2:	jmp    0x7cc41a66
  404ac7:	mov    ?,esp
  404ac9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404aca:	stc    
  404acb:	adc    ebx,ecx
  404acd:	out    dx,al
  404ace:	and    bh,0xd
  404ad1:	iret   
  404ad2:	pushf  
  404ad3:	clc    
  404ad4:	jns    0x404ad6
  404ad6:	and    dh,BYTE PTR [ebp-0x37]
  404ad9:	(bad)  
  404ada:	leavew 
  404adc:	cwde   
  404add:	dec    esp
  404ade:	or     DWORD PTR [eax-0x53812872],eax
  404ae4:	and    ebp,ecx
  404ae6:	repnz out 0xa,eax
  404ae9:	ins    DWORD PTR es:[edi],dx
  404aea:	inc    edx
  404aeb:	mov    ds:0x7a52b10d,eax
  404af0:	ret    
  404af1:	das    
  404af2:	fbstp  TBYTE PTR ds:0x3e2dc48b
  404af8:	loopne 0x404b40
  404afa:	jb     0x404af8
  404afc:	jecxz  0x404b4a
  404afe:	sub    DWORD PTR [edi+0x31],ebp
  404b01:	mov    edi,0x8022406a
  404b06:	js     0x404aac
  404b08:	sub    DWORD PTR ds:0xc66006c1,esp
  404b0e:	push   cs
  404b0f:	in     eax,0x15
  404b11:	lods   al,BYTE PTR ds:[esi]
  404b12:	sbb    cl,BYTE PTR [esi+edx*4-0x1fdeb90c]
  404b19:	jg     0x404b80
  404b1b:	xor    DWORD PTR [esi],eax
  404b1d:	or     eax,0x7784278f
  404b22:	cdq    
  404b23:	mov    al,0x46
  404b25:	pushf  
  404b26:	sub    DWORD PTR [edi],0xffffffbb
  404b29:	(bad)  
  404b2b:	(bad)  
  404b2c:	jle    0x404b15
  404b2e:	or     di,si
  404b31:	mov    bl,0x2c
  404b33:	aaa    
  404b34:	fsubr  DWORD PTR [edx-0x22b1c253]
  404b3a:	inc    eax
  404b3b:	std    
  404b3c:	iret   
  404b3d:	mov    eax,ds:0xe862eecc
  404b42:	adc    DWORD PTR [edx-0x3741222b],esi
  404b48:	pop    ss
  404b49:	(bad)
  404b4d:	inc    esi
  404b4e:	mov    bh,0x27
  404b50:	fdivrp st(4),st
  404b52:	add    al,0x1f
  404b54:	inc    ebp
  404b55:	fst    QWORD PTR ds:0x3f58d4f9
  404b5b:	dec    esi
  404b5c:	in     eax,dx
  404b5d:	xor    al,0x79
  404b5f:	add    eax,0xbdb30c11
  404b64:	dec    esp
  404b65:	pop    edi
  404b66:	sbb    al,0x68
  404b68:	cmp    BYTE PTR [ecx],bl
  404b6a:	pop    ss
  404b6b:	xchg   ecx,eax
  404b6c:	xor    ch,BYTE PTR [ebp-0x9be4cf6]
  404b72:	imul   ebx,DWORD PTR [esi+0x23a6c11c],0x1a
  404b79:	daa    
  404b7a:	and    eax,edx
  404b7c:	xchg   edx,eax
  404b7d:	add    eax,0x9a667d34
  404b82:	add    edi,edi
  404b84:	imul   eax,DWORD PTR [ebx+0x1a],0x74
  404b88:	pop    eax
  404b89:	push   edx
  404b8a:	mov    ah,0xf3
  404b8c:	push   ss
  404b8d:	shl    ecx,0x27
  404b90:	jno    0x404b3f
  404b92:	(bad)  
  404b93:	jp     0x404b16
  404b95:	inc    ecx
  404b97:	fbstp  TBYTE PTR [edx]
  404b99:	adc    BYTE PTR [edx+0xe441fa5],ch
  404b9f:	cmp    eax,0x4f0b9d43
  404ba4:	pusha  
  404ba5:	rol    BYTE PTR [edi-0x74e6d23e],0x79
  404bac:	mov    dh,0x1d
  404bae:	jl     0x404bdd
  404bb0:	jecxz  0x404b63
  404bb2:	adc    ecx,ecx
  404bb4:	por    mm5,mm4
  404bb7:	dec    esp
  404bb8:	int    0x4c
  404bba:	mov    edi,0x88dea75d
  404bbf:	pop    edi
  404bc0:	scas   eax,DWORD PTR es:[edi]
  404bc1:	jae    0x404c2e
  404bc3:	adc    BYTE PTR [ebx],al
  404bc5:	jae    0x404b94
  404bc7:	shl    BYTE PTR [eax-0x27c11f88],cl
  404bcd:	out    0x67,eax
  404bcf:	sbb    DWORD PTR [edi+0x3d15cfa],0xffffffe2
  404bd6:	xchg   ebx,eax
  404bd7:	inc    edi
  404bd8:	loop   0x404b70
  404bda:	jns    0x404c33
  404bdc:	push   edi
  404bdd:	daa    
  404bde:	pop    ecx
  404bdf:	ins    DWORD PTR es:[edi],dx
  404be0:	sbb    al,0xb3
  404be2:	jns    0x404c02
  404be4:	sub    bh,al
  404be6:	cmc    
  404be7:	daa    
  404be8:	inc    eax
  404be9:	shr    BYTE PTR [edi-0x22],0x23
  404bed:	std    
  404bee:	loope  0x404c35
  404bf0:	mov    cl,0x21
  404bf2:	mov    ds:0xc1531c24,eax
  404bf7:	mov    cl,0xa1
  404bf9:	inc    ebx
  404bfa:	inc    ebx
  404bfb:	inc    edx
  404bfc:	cmp    BYTE PTR [ecx],dh
  404bfe:	ss xor eax,0x26895ea
  404c04:	loopne 0x404bdf
  404c06:	xchg   esi,eax
  404c07:	xchg   BYTE PTR [ebx+0x57529a62],cl
  404c0d:	or     BYTE PTR [edi-0x49],dh
  404c10:	mov    esi,0x6942f6e9
  404c15:	mov    WORD PTR [ecx-0x340f797e],fs
  404c1b:	into   
  404c1c:	inc    ebp
  404c1d:	adc    al,0xcf
  404c1f:	cld    
  404c20:	or     eax,0xc8cc1e1d
  404c25:	inc    esi
  404c26:	push   ds
  404c27:	(bad)  
  404c28:	mov    ds:0xe38bde6,al
  404c2d:	mov    DWORD PTR [ecx+0x38f3abdd],0xed990444
  404c37:	fs xchg ecx,eax
  404c39:	fmul   st,st(3)
  404c3b:	or     al,0xff
  404c3d:	retf   
  404c3e:	pop    esi
  404c3f:	iret   
  404c40:	mov    dl,BYTE PTR [eax]
  404c42:	ins    DWORD PTR es:[edi],dx
  404c43:	mov    eax,0xb664fdab
  404c48:	inc    esp
  404c49:	pop    edi
  404c4a:	inc    esp
  404c4b:	mov    dl,0xb2
  404c4d:	test   DWORD PTR [esi],eax
  404c4f:	dec    edi
  404c50:	and    al,BYTE PTR [edi]
  404c52:	ds stos BYTE PTR es:[edi],al
  404c54:	xchg   ecx,eax
  404c55:	mov    DWORD PTR [edi-0x78ada54f],esp
  404c5b:	and    ch,BYTE PTR [edi+eiz*2+0x14]
  404c5f:	sub    BYTE PTR [ebx+0x50],bh
  404c62:	jb     0x404c13
  404c64:	and    al,0x55
  404c66:	add    ch,BYTE PTR [edi+eax*1+0x7f163aef]
  404c6d:	sbb    esi,DWORD PTR [edx+esi*1-0x78]
  404c71:	sub    eax,0xb19d5856
  404c76:	lahf   
  404c77:	aam    0x28
  404c79:	and    al,0x4d
  404c7b:	push   ds
  404c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c7d:	adc    al,bl
  404c7f:	das    
  404c80:	mov    edi,0xf7446e52
  404c85:	inc    esi
  404c86:	xor    eax,0x62688be9
  404c8b:	and    DWORD PTR [edx+0x2f73b681],esp
  404c91:	jl     0x404d04
  404c93:	ss mov ?,edi
  404c96:	fcmovnu st,st(4)
  404c98:	lods   eax,DWORD PTR ds:[esi]
  404c99:	stos   DWORD PTR es:[edi],eax
  404c9a:	pop    eax
  404c9b:	dec    esi
  404c9c:	leave  
  404c9d:	in     eax,dx
  404c9e:	rol    BYTE PTR [ebx],1
  404ca0:	mov    ebp,0x8d5294a8
  404ca5:	fmul   QWORD PTR [esi-0x18]
  404ca8:	cmp    al,0xa6
  404caa:	addr16 addr16 int 0xf5
  404cae:	push   cs
  404caf:	aas    
  404cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cb1:	add    ch,bl
  404cb3:	push   esp
  404cb4:	imul   dh
  404cb6:	dec    edi
  404cb7:	in     al,dx
  404cb8:	lods   al,BYTE PTR ds:[esi]
  404cb9:	jp     0x404cb5
  404cbb:	(bad)  
  404cbc:	and    dl,BYTE PTR [ebx+0x64b8f45e]
  404cc2:	pushf  
  404cc3:	add    esi,DWORD PTR [ebp-0x64]
  404cc6:	and    BYTE PTR ds:0xbe701d0c,bl
  404ccc:	pop    ss
  404ccd:	jno    0x404d4e
  404ccf:	pop    ecx
  404cd0:	mov    dl,0x13
  404cd2:	dec    eax
  404cd3:	pop    esp
  404cd4:	mov    WORD PTR [edx],?
  404cd6:	iret   
  404cd7:	inc    esi
  404cd8:	pop    es
  404cd9:	or     al,0xa7
  404cdb:	inc    esi
  404cdc:	mov    dh,0x47
  404cde:	and    BYTE PTR [esi+0x433741ee],ch
  404ce4:	js     0x404cdf
  404ce6:	xchg   ecx,eax
  404ce7:	mov    cl,0xce
  404ce9:	loop   0x404ca7
  404ceb:	std    
  404cec:	lods   eax,DWORD PTR ds:[esi]
  404ced:	lahf   
  404cee:	scas   al,BYTE PTR es:[edi]
  404cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cf0:	xor    BYTE PTR [ebx+eax*2-0x2a27b2b3],bh
  404cf7:	jno    0x404c84
  404cf9:	cld    
  404cfa:	jb     0x404d15
  404cfc:	xor    eax,esi
  404cfe:	clc    
  404cff:	sbb    DWORD PTR [edx-0x5c],edi
  404d02:	adc    eax,0x632f1e78
  404d07:	fbld   TBYTE PTR [edi-0x32f8f003]
  404d0d:	pop    ds
  404d0e:	mov    al,ds:0xaea3791a
  404d13:	jg     0x404ce1
  404d15:	lods   eax,DWORD PTR cs:[esi]
  404d17:	jg     0x404d8e
  404d19:	arpl   bx,di
  404d1b:	outs   dx,BYTE PTR ds:[esi]
  404d1c:	inc    ecx
  404d1d:	or     ebx,DWORD PTR [edx+ebx*4]
  404d20:	cmp    BYTE PTR [eax],0x6c
  404d23:	mov    eax,ds:0x9bf830f2
  404d28:	push   esi
  404d29:	loop   0x404d33
  404d2b:	push   ebp
  404d2c:	sub    al,0xe6
  404d2e:	das    
  404d2f:	aam    0x70
  404d31:	mov    esp,0x2cd79f3d
  404d36:	sub    eax,0xeffb3673
  404d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3c:	hlt    
  404d3d:	pop    edi
  404d3e:	jmp    0x16e0:0x351635b0
  404d45:	ja     0x404dba
  404d47:	enter  0x9efd,0x76
  404d4b:	les    edx,FWORD PTR [ebx+0x5f]
  404d4e:	jecxz  0x404cdd
  404d50:	add    eax,esp
  404d52:	ror    DWORD PTR [esi+eax*2],0x2a
  404d56:	(bad)  
  404d57:	out    dx,al
  404d58:	shl    BYTE PTR [ebp-0x8],cl
  404d5b:	mov    dh,0xc6
  404d5d:	sbb    al,0x30
  404d5f:	mov    WORD PTR [ecx],gs
  404d61:	es pop ebx
  404d63:	nop
  404d64:	arpl   WORD PTR [ebp+0x5],di
  404d67:	sub    DWORD PTR [ecx+0x629f3f30],edi
  404d6d:	jb     0x404d4d
  404d6f:	aas    
  404d70:	gs xchg esp,eax
  404d72:	or     bh,BYTE PTR [esi+0x6e]
  404d75:	mov    al,0xec
  404d77:	inc    eax
  404d78:	leave  
  404d79:	mov    ebx,0x95657d30
  404d7e:	adc    esp,DWORD PTR [ecx-0x37]
  404d81:	std    
  404d82:	(bad)  
  404d83:	ds cmc 
  404d85:	dec    ecx
  404d86:	pop    ebx
  404d87:	cli    
  404d88:	push   es
  404d89:	push   cs
  404d8a:	mov    ch,0xb2
  404d8c:	push   eax
  404d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d8e:	jbe    0x404d1b
  404d90:	push   ds
  404d91:	lds    esi,FWORD PTR [ebx-0x20]
  404d94:	sti    
  404d95:	cmp    DWORD PTR [eax+0x18],0x50
  404d99:	mov    edx,0xce418fcc
  404d9e:	retf   
  404d9f:	jbe    0x404ddb
  404da1:	and    DWORD PTR [eax+0x44],edx
  404da4:	xchg   edi,eax
  404da5:	aad    0xba
  404da7:	(bad)  
  404da8:	xchg   ecx,eax
  404da9:	inc    eax
  404daa:	xchg   ebp,eax
  404dab:	jmp    0x982ebd69
  404db0:	in     al,0x43
  404db2:	adc    dl,BYTE PTR [ebx+0x53]
  404db5:	arpl   WORD PTR [edx+ecx*8],bp
  404db8:	repnz dec esi
  404dba:	aaa    
  404dbb:	mov    esp,0xc8f33902
  404dc0:	mov    ebx,0x841930c2
  404dc5:	fisttp QWORD PTR [esi+0x274be3ce]
  404dcb:	push   esi
  404dcc:	sbb    eax,0xe2f84988
  404dd1:	repnz push ebx
  404dd3:	jmp    0x8545dd6
  404dd8:	sub    bl,BYTE PTR [edx+0x11]
  404ddb:	sbb    al,0xf6
  404ddd:	fs push eax
  404ddf:	cmp    eax,0x955f6135
  404de4:	fbstp  TBYTE PTR [edi]
  404de6:	imul   esi,DWORD PTR [eax+0x9],0xd839461e
  404ded:	xchg   BYTE PTR [ebp+ebx*2+0x1b84b6ff],ch
  404df4:	dec    esp
  404df5:	stc    
  404df6:	sub    dh,BYTE PTR [edi-0x26]
  404df9:	fdivr  st,st(1)
  404dfb:	aas    
  404dfc:	dec    edx
  404dfd:	bts    DWORD PTR [ebp+ecx*4+0x70ccf13b],edx
  404e05:	ds jne 0x404e36
  404e08:	jmp    0xc4ce:0x55e680e2
  404e0f:	not    edi
  404e11:	sbb    eax,0xdfba8366
  404e16:	lods   al,BYTE PTR ds:[esi]
  404e17:	jns    0x404e0a
  404e19:	mov    WORD PTR [esi+ebx*1],ss
  404e1c:	jmp    0xa56a0395
  404e21:	loop   0x404dc7
  404e23:	jmp    0x42df0a90
  404e28:	jecxz  0x404e0f
  404e2a:	sbb    eax,0x5a0d241a
  404e2f:	fstp   DWORD PTR [ebx-0x5eaca6ab]
  404e35:	push   es
  404e36:	jns    0x404e86
  404e38:	fwait
  404e39:	retf   0xb4bc
  404e3c:	fdiv   DWORD PTR [esi]
  404e3e:	add    eax,0x8bb9338c
  404e43:	jl     0x404e4c
  404e45:	mov    ds:0x21e004a0,eax
  404e4a:	push   ecx
  404e4b:	mov    esp,0xc31f7736
  404e50:	sub    DWORD PTR [ebp+0xdeaeb11],edi
  404e56:	jnp    0x404deb
  404e58:	xor    DWORD PTR [esp+edx*8-0x7a9afc77],0x36fd999
  404e63:	mov    edi,0x64d8aed1
  404e68:	mov    ecx,0x34d50e18
  404e6d:	repnz push ecx
  404e6f:	fmul   QWORD PTR [ebx-0x6a193fd1]
  404e75:	push   ecx
  404e76:	fs push 0xbd79873d
  404e7c:	cld    
  404e7d:	int3   
  404e7e:	out    dx,eax
  404e7f:	test   DWORD PTR [edi+eax*8+0x52fc6fa9],ebx
  404e86:	sub    DWORD PTR [esi+esi*8],esp
  404e89:	cmp    esp,DWORD PTR [edi*8-0x27946379]
  404e90:	mov    cl,0x3f
  404e92:	mov    dh,BYTE PTR [esi]
  404e94:	out    dx,eax
  404e95:	les    eax,FWORD PTR [edi+0x4f]
  404e98:	fisubr WORD PTR [esp+ebp*1]
  404e9b:	arpl   WORD PTR [ebp+0x58fafb88],sp
  404ea1:	ss mov edi,0x5d57b9f8
  404ea7:	fcmovnu st,st(5)
  404ea9:	mov    ds:0xf22da162,eax
  404eae:	sub    eax,0x7d6392e4
  404eb3:	push   esp
  404eb4:	sub    edx,0x1650576e
  404eba:	push   edx
  404ebb:	dec    edi
  404ebc:	mov    ds:0x49b3dc8f,al
  404ec1:	add    ecx,DWORD PTR [esi+0x75f18300]
  404ec7:	and    al,0x1e
  404ec9:	xor    dl,BYTE PTR [eax-0x64]
  404ecc:	pop    esp
  404ecd:	or     al,bl
  404ecf:	xor    ecx,DWORD PTR [esi+0x694af4f7]
  404ed5:	sub    edx,DWORD PTR [eax+0x46]
  404ed8:	mov    DWORD PTR [eax-0x6abb0772],edx
  404ede:	pop    ds
  404edf:	cli    
  404ee0:	push   cs
  404ee1:	in     al,dx
  404ee2:	ss ret 
  404ee4:	daa    
  404ee5:	icebp  
  404ee6:	push   esi
  404ee7:	ins    BYTE PTR es:[edi],dx
  404ee8:	inc    ebx
  404ee9:	mov    dh,0x73
  404eeb:	pop    ecx
  404eec:	popa   
  404eed:	mov    bh,al
  404eef:	adc    eax,0x7ba6b517
  404ef4:	iret   
  404ef5:	sbb    BYTE PTR es:[ebx+0x6a],dh
  404ef9:	inc    esi
  404efa:	test   BYTE PTR [eax-0x44b14e32],0x89
  404f01:	pop    ebp
  404f02:	repnz mov bh,0x6d
  404f05:	fst    QWORD PTR [eax+0x50]
  404f08:	fucomi st,st(6)
  404f0a:	mov    esi,0x833a0d58
  404f0f:	loopne 0x404f22
  404f11:	aas    
  404f12:	inc    esp
  404f13:	and    DWORD PTR [edi-0x6e522cb9],0xfffffff9
  404f1a:	test   DWORD PTR [eax],0x93db51d6
  404f20:	sar    BYTE PTR [edx+eiz*1-0x1da64b16],1
  404f27:	lods   eax,DWORD PTR ds:[esi]
  404f28:	or     eax,0xb4facd9b
  404f2d:	ins    DWORD PTR es:[edi],dx
  404f2e:	dec    esi
  404f2f:	dec    esi
  404f30:	sahf   
  404f31:	add    DWORD PTR [edi+0x14731f1b],edx
  404f37:	cli    
  404f38:	or     eax,0x88727376
  404f3d:	in     eax,0xa7
  404f3f:	inc    edi
  404f40:	mov    ebx,0x7994ed69
  404f45:	retf   
  404f46:	scas   al,BYTE PTR es:[edi]
  404f47:	pop    esi
  404f48:	xchg   ebx,eax
  404f49:	sti    
  404f4a:	sbb    BYTE PTR [ecx+0x16],dh
  404f4d:	xchg   ebp,eax
  404f4e:	in     eax,0x38
  404f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f51:	pop    ebx
  404f52:	out    dx,al
  404f53:	xor    edi,edx
  404f55:	inc    edx
  404f56:	sub    edx,DWORD PTR [ebx-0x3ca91231]
  404f5c:	popa   
  404f5d:	fwait
  404f5e:	mov    dh,0x8
  404f60:	mov    esp,0x2768d58f
  404f65:	in     al,dx
  404f66:	xor    dh,al
  404f68:	cmp    eax,DWORD PTR [eax]
  404f6a:	xchg   edi,eax
  404f6b:	das    
  404f6c:	pop    ebx
  404f6d:	aas    
  404f6e:	(bad)  
  404f6f:	xchg   edi,eax
  404f70:	sub    DWORD PTR [ebx-0x248eb1c9],esi
  404f76:	loop   0x404f98
  404f78:	xchg   ecx,eax
  404f79:	loop   0x404f64
  404f7b:	cwde   
  404f7c:	add    bh,BYTE PTR [edx+0x363aca86]
  404f82:	(bad)  
  404f83:	mov    ecx,0x12a74567
  404f88:	xchg   ecx,eax
  404f89:	sub    ch,ch
  404f8b:	bound  esp,QWORD PTR [eax+0x5e]
  404f8e:	pop    DWORD PTR [edx-0x7b785c3f]
  404f94:	mov    ds:0x46d3e1e7,eax
  404f99:	mov    esp,0x2f83fd1
  404f9e:	xor    DWORD PTR [ebx-0x69],esp
  404fa1:	jbe    0x404ff8
  404fa3:	pop    eax
  404fa4:	sahf   
  404fa5:	cwde   
  404fa6:	xor    esp,DWORD PTR [ebp-0xf452c54]
  404fac:	ins    DWORD PTR es:[edi],dx
  404fad:	lds    edx,FWORD PTR [esi]
  404faf:	xor    DWORD PTR [edx],esi
  404fb1:	test   edi,0x9845e7d7
  404fb7:	mov    DWORD PTR [ebp+0xa],esi
  404fba:	fidivr WORD PTR [eax-0x36]
  404fbd:	int    0x9f
  404fbf:	leave  
  404fc0:	cli    
  404fc1:	mov    ds:0x52afff89,al
  404fc6:	test   al,0xc4
  404fc8:	sahf   
  404fc9:	jb     0x40502d
  404fcb:	imul   edx,DWORD PTR [ebp-0x6f],0x7c
  404fcf:	ins    DWORD PTR es:[edi],dx
  404fd0:	adc    eax,0x504c2021
  404fd5:	ss in  eax,dx
  404fd7:	or     eax,0x924862ce
  404fdc:	fldcw  WORD PTR [ecx-0x2521c09f]
  404fe2:	loop   0x405063
  404fe4:	xchg   ebp,eax
  404fe5:	mov    BYTE PTR [edi+ebp*2-0x544c5497],dh
  404fec:	xor    ebx,edx
  404fee:	aad    0x67
  404ff0:	dec    ebp
  404ff1:	mov    ebp,0x3b4ce240
  404ff6:	imul   ebp,eax,0x72
  404ff9:	std    
  404ffa:	pop    ebp
  404ffb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffc:	ret    
  404ffd:	xchg   ebx,eax
  404ffe:	xor    DWORD PTR [esi],eax
  405000:	fwait
  405001:	pop    esi
  405002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405003:	pop    ss
  405004:	jp     0x404fe8
  405006:	rol    BYTE PTR [edi+edx*1-0x31d27c41],cl
  40500d:	imul   esi,esp,0x7e
  405010:	xlat   BYTE PTR ds:[ebx]
  405011:	jle    0x404fab
  405013:	call   0x2de3c67c
  405018:	pushf  
  405019:	xor    eax,0xbba7b541
  40501e:	mov    eax,0x4c56d5b8
  405023:	xor    bl,BYTE PTR [ebx+0x19]
  405026:	test   esp,0x61e7b1c5
  40502c:	rcl    BYTE PTR [edi],1
  40502e:	daa    
  40502f:	mov    ah,0x1a
  405031:	mov    al,ds:0x313b4cd5
  405036:	pop    es
  405037:	mov    DWORD PTR [esi+0x5c45079],edi
  40503d:	jae    0x4050ab
  40503f:	pop    edi
  405040:	int    0xee
  405042:	fisub  DWORD PTR [eax]
  405044:	push   ecx
  405045:	mov    esi,DWORD PTR [edi]
  405047:	mov    dl,0x48
  405049:	js     0x4050a0
  40504b:	add    DWORD PTR [eax+0x65cacb75],edx
  405051:	int3   
  405052:	scas   eax,DWORD PTR es:[edi]
  405053:	pop    eax
  405054:	imul   esi,DWORD PTR [ebx+esi*1+0x9],0x5f
  405059:	or     DWORD PTR [eax-0x46ec92c2],esp
  40505f:	mov    ?,WORD PTR [eax+ecx*1+0x54]
  405063:	dec    edx
  405064:	fstp   DWORD PTR [esi-0x70]
  405067:	lahf   
  405068:	sub    cl,ah
  40506a:	and    esp,DWORD PTR [ecx]
  40506c:	(bad)  
  40506d:	fisubr DWORD PTR [edi-0x3ed3fb9e]
  405073:	or     dl,BYTE PTR [ebp+0x72]
  405076:	test   al,0xcd
  405078:	aas    
  405079:	mov    ebx,0xd8488544
  40507e:	pop    ebx
  40507f:	adc    eax,0x33e7196c
  405084:	or     al,0xe7
  405086:	inc    ecx
  405087:	loop   0x4050bb
  405089:	lds    eax,FWORD PTR [edx+0x43]
  40508c:	adc    BYTE PTR [ebx+0x52],ch
  40508f:	cld    
  405090:	and    DWORD PTR [edx],0x50
  405093:	mov    ds:0x5edfae52,eax
  405098:	outs   dx,BYTE PTR ds:[esi]
  405099:	ds dec esp
  40509b:	lahf   
  40509c:	push   ss
  40509d:	mov    al,0xde
  40509f:	inc    ebx
  4050a0:	jmp    0x311f58ae
  4050a5:	pushf  
  4050a6:	adc    ecx,DWORD PTR [ebp+0x7c]
  4050a9:	repnz inc esi
  4050ab:	lock adc DWORD PTR [esi-0x2b],esp
  4050af:	ja     0x405068
  4050b1:	add    ecx,ebx
  4050b3:	dec    ecx
  4050b4:	fdiv   DWORD PTR [edi+edx*2+0x55]
  4050b8:	xor    ebx,ebx
  4050ba:	mov    ch,0x39
  4050bc:	popa   
  4050bd:	sub    al,0x88
  4050bf:	out    dx,eax
  4050c0:	out    0xac,eax
  4050c2:	adc    al,0xb7
  4050c4:	sbb    eax,0xcdd206cb
  4050c9:	dec    ebx
  4050ca:	mov    edi,DWORD PTR [edi+0x19deb1ad]
  4050d0:	dec    ebx
  4050d1:	stos   DWORD PTR es:[edi],eax
  4050d2:	fcomp  DWORD PTR [ebx+0x196289]
  4050d8:	xor    eax,0xce58341d
  4050dd:	sub    DWORD PTR [ebx-0x3e90ec22],ebp
  4050e3:	xor    ecx,esi
  4050e5:	test   dl,0x6a
  4050e8:	fidivr DWORD PTR ss:[edx+0x5b]
  4050ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050ed:	test   eax,0xc59a5b0c
  4050f2:	xor    dh,BYTE PTR [ebx*1-0x60209482]
  4050f9:	(bad)  
  4050fa:	fisttp QWORD PTR ds:0xe140737d
  405100:	aam    0x52
  405102:	jl     0x40510e
  405104:	std    
  405105:	fcmovbe st,st(1)
  405107:	dec    ebp
  405108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405109:	in     al,0x6f
  40510b:	test   DWORD PTR [ebx],ebp
  40510d:	jae    0x405145
  40510f:	popf   
  405110:	arpl   WORD PTR [ebp+0x6738912d],bx
  405116:	jmp    0x2375:0x76dee84f
  40511d:	add    eax,0x881373b8
  405122:	mov    esp,0xdd93bbc9
  405127:	mov    ?,WORD PTR [ecx+0x79013966]
  40512d:	ret    
  40512e:	stos   DWORD PTR es:[edi],eax
  40512f:	dec    ebx
  405130:	mov    WORD PTR [ebp-0xf6b9150],?
  405136:	sbb    DWORD PTR [edx+0x35],ebx
  405139:	xor    DWORD PTR [ecx-0x30],ecx
  40513c:	sbb    bl,bl
  40513e:	lods   al,BYTE PTR ds:[esi]
  40513f:	and    BYTE PTR [edi],0xb5
  405142:	imul   esp,eax,0xffffffc4
  405145:	(bad)  
  405146:	jmp    0xe35f:0xb6a6e346
  40514d:	inc    esp
  40514e:	xchg   ebx,eax
  40514f:	adc    ch,al
  405151:	xchg   edi,eax
  405152:	jmp    0x2e27:0xce5129a9
  405159:	jmp    0xf1271242
  40515e:	das    
  40515f:	outs   dx,BYTE PTR ds:[esi]
  405160:	fs ja  0x4051b0
  405163:	mov    ebp,0x4b1386c1
  405168:	sub    BYTE PTR [esi+0x745bac5b],ah
  40516e:	(bad)  
  405170:	mov    ecx,0xc0f7ca0f
  405175:	inc    edi
  405176:	and    ebx,ecx
  405178:	std    
  405179:	xor    dh,BYTE PTR ss:[edx-0x6e1e1336]
  405180:	inc    edx
  405181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405182:	loopne 0x40515e
  405184:	xor    cl,BYTE PTR [edi-0x59bef7f1]
  40518a:	loope  0x405155
  40518c:	jl     0x4051f0
  40518e:	ins    BYTE PTR es:[edi],dx
  40518f:	xchg   edi,eax
  405190:	mov    ch,0xa7
  405192:	dec    ebp
  405193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405194:	pop    ss
  405195:	cmp    ebx,DWORD PTR [esp+ecx*1+0x4]
  405199:	mov    edx,0x5df33b52
  40519e:	xor    eax,0x304eb184
  4051a3:	int    0x56
  4051a5:	retf   
  4051a6:	mov    ds:0x4571249d,eax
  4051ab:	and    edi,DWORD PTR [ecx]
  4051ad:	or     ch,al
  4051af:	and    esp,DWORD PTR ds:0x6985d088
  4051b5:	pop    edx
  4051b6:	adc    al,0xff
  4051b8:	pop    ss
  4051b9:	loopne 0x4051f3
  4051bb:	jmp    edx
  4051bd:	jl     0x4051bb
  4051bf:	daa    
  4051c0:	sbb    al,0x28
  4051c2:	pop    ds
  4051c3:	jp     0x40520a
  4051c5:	push   ecx
  4051c6:	pushf  
  4051c7:	push   es
  4051c8:	xchg   DWORD PTR [edx-0x80],ecx
  4051cb:	outs   dx,BYTE PTR ds:[esi]
  4051cc:	cmp    eax,0x4b8b1c99
  4051d1:	cmp    eax,0x7a8057e9
  4051d6:	push   es
  4051d7:	xchg   DWORD PTR [esp+ecx*2],ebp
  4051da:	sub    eax,DWORD PTR [ebx-0x6bec243f]
  4051e0:	(bad)  
  4051e1:	cld    
  4051e2:	fnstenv [ebp-0x5]
  4051e5:	jp     0x405192
  4051e7:	outs   dx,BYTE PTR ds:[esi]
  4051e8:	mov    dh,0x29
  4051ea:	cmp    esi,0xffffff8f
  4051ed:	jle    0x40518b
  4051ef:	push   ds
  4051f0:	mov    dl,0x65
  4051f2:	adc    al,0x63
  4051f4:	mov    edi,0xfc7576f5
  4051f9:	lds    esi,FWORD PTR [esi-0x7a]
  4051fc:	sub    al,0xe2
  4051fe:	daa    
  4051ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405200:	or     ah,dl
  405202:	mov    ?,ecx
  405204:	jmp    0x48d9:0x1141e872
  40520b:	jno    0x40525f
  40520d:	imul   edx,DWORD PTR [ebx],0x23dd5c3e
  405213:	stos   BYTE PTR es:[edi],al
  405214:	fs inc edx
  405216:	enter  0x4b9,0x9
  40521a:	enter  0x6483,0x98
  40521e:	push   esp
  40521f:	rcr    DWORD PTR [ecx+0xb],0x56
  405223:	push   0xffffff99
  405225:	pop    esi
  405226:	es sub al,0xef
  405229:	cmp    eax,0x2ccea58e
  40522e:	leave  
  40522f:	or     eax,0x22ab2430
  405234:	int3   
  405235:	mov    cl,0x19
  405237:	adc    al,al
  405239:	cld    
  40523a:	mov    ds,WORD PTR [edx-0x6e900b20]
  405240:	aaa    
  405241:	enter  0x366d,0x6
  405245:	pushf  
  405246:	(bad)  
  405247:	push   ecx
  405248:	sub    bl,BYTE PTR [edi]
  40524a:	jp     0x40523d
  40524c:	gs (bad) 
  40524e:	out    dx,al
  40524f:	iret   
  405250:	jnp    0x405299
  405252:	in     al,0x6c
  405254:	push   0x6c
  405256:	jae    0x405292
  405258:	retf   0x3ffa
  40525b:	adc    esi,DWORD PTR [edi]
  40525d:	imul   ebx,DWORD PTR [ecx*1-0x2f7ef666],0x34802390
  405268:	in     eax,0xb4
  40526a:	test   DWORD PTR ds:0x19a49916,ecx
  405270:	dec    ebx
  405271:	mul    BYTE PTR [edx+0x261a06ed]
  405277:	iret   
  405278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405279:	pop    ecx
  40527a:	add    cl,cl
  40527c:	mov    esi,0xef669c09
  405281:	je     0x405248
  405283:	and    DWORD PTR [ebx-0x1ff31f5f],edi
  405289:	pop    ds
  40528a:	aam    0xac
  40528c:	xor    al,0x7c
  40528e:	add    al,0x3d
  405290:	mov    eax,ds:0x4da681ff
  405295:	push   ebx
  405296:	or     ch,BYTE PTR [esi]
  405298:	dec    DWORD PTR [eax]
  40529a:	xchg   ebx,eax
  40529b:	adc    cl,bh
  40529d:	pop    ss
  40529e:	inc    esp
  40529f:	scas   al,BYTE PTR es:[edi]
  4052a0:	xor    eax,0x4bbbb903
  4052a5:	stos   BYTE PTR es:[edi],al
  4052a6:	jmp    DWORD PTR ds:0x92f6f8c5
  4052ac:	push   esi
  4052ad:	call   0xb4db:0x171c778b
  4052b4:	fmul   DWORD PTR [edx-0x6b]
  4052b7:	or     BYTE PTR [ebp-0x5638a21],bl
  4052bd:	push   ebp
  4052be:	sbb    cl,BYTE PTR [edi]
  4052c0:	lods   eax,DWORD PTR ds:[esi]
  4052c1:	xor    ch,0xa2
  4052c4:	stos   BYTE PTR es:[edi],al
  4052c5:	lods   eax,DWORD PTR ds:[esi]
  4052c6:	sti    
  4052c7:	sub    bl,BYTE PTR [ebx+0xf32f3d4]
  4052cd:	(bad)  
  4052ce:	or     al,0x2c
  4052d0:	out    0xcc,eax
  4052d2:	stos   DWORD PTR es:[edi],eax
  4052d3:	dec    edi
  4052d4:	outs   dx,DWORD PTR ds:[esi]
  4052d5:	fild   DWORD PTR [edi+eax*4-0x73]
  4052d9:	push   ebp
  4052da:	mov    eax,0xf9c147fe
  4052df:	xor    DWORD PTR [edx],0x75679d0
  4052e5:	add    eax,0xfd5b1900
  4052ea:	xchg   edi,eax
  4052eb:	addr16 test al,0x5
  4052ee:	mov    ds:0x8a99ff17,eax
  4052f3:	in     al,dx
  4052f4:	leave  
  4052f5:	xor    al,0xd9
  4052f7:	push   esi
  4052f8:	ret    
  4052f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052fa:	sbb    al,0xe4
  4052fc:	adc    al,0x75
  4052fe:	mov    esp,0x12f40556
  405303:	push   0x58
  405305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405306:	push   ebp
  405307:	inc    ebx
  405308:	imul   ebx,DWORD PTR [ebx+0x1d9ae48f],0x4658e841
  405312:	sbb    DWORD PTR [eax+ebp*1],esp
  405315:	ins    DWORD PTR es:[edi],dx
  405316:	sub    esp,DWORD PTR [edi]
  405318:	bound  ecx,QWORD PTR [edi+eiz*8-0x8]
  40531c:	push   ebx
  40531d:	lds    esi,FWORD PTR [edi+0x11]
  405320:	in     al,dx
  405321:	out    dx,al
  405322:	repnz inc esi
  405324:	jmp    DWORD PTR [edx]
  405326:	xor    edi,ecx
  405328:	push   cs
  405329:	nop
  40532a:	jb     0x405349
  40532c:	jno    0x405390
  40532e:	jge    0x405381
  405330:	xchg   BYTE PTR [edx+ebp*8+0x7f],dh
  405334:	add    DWORD PTR [edx+0x44],0xffffffb9
  405338:	add    al,0xb
  40533a:	repz repnz adc cl,BYTE PTR [edi]
  40533e:	jl     0x4052d2
  405340:	leave  
  405341:	loop   0x405349
  405343:	aas    
  405344:	push   0x3d73d537
  405349:	xchg   edx,eax
  40534a:	fbstp  TBYTE PTR [edi+eax*8-0x68]
  40534e:	shl    BYTE PTR [edi],1
  405350:	xchg   bh,ch
  405352:	sub    DWORD PTR [eax+0x2d4c0ff6],ebp
  405358:	iret   
  405359:	shr    DWORD PTR [eax-0x13cc5f66],0x24
  405360:	xchg   ebp,eax
  405361:	dec    edi
  405362:	add    ebx,edx
  405364:	push   eax
  405365:	mov    cl,0x70
  405367:	xor    esp,DWORD PTR [eax*2+0x3b2078d0]
  40536e:	mov    bh,0x6
  405370:	bound  ecx,QWORD PTR [edx+0x35afff03]
  405376:	ja     0x4053cf
  405378:	pop    ss
  405379:	es lahf 
  40537b:	(bad)  
  40537c:	in     eax,dx
  40537d:	push   0x6c
  40537f:	repnz or cl,BYTE PTR [edi+0x200de908]
  405386:	add    al,BYTE PTR [edx]
  405388:	sub    al,0x53
  40538a:	jle    0x4053c7
  40538c:	pop    edi
  40538d:	test   al,0x8e
  40538f:	sub    DWORD PTR ds:0x4499bf8f,ecx
  405395:	(bad)  
  405396:	push   ss
  405397:	pop    esi
  405398:	lahf   
  405399:	or     al,0x4e
  40539b:	add    esp,DWORD PTR [esp+ebp*1]
  40539e:	outs   dx,BYTE PTR ds:[esi]
  40539f:	imul   edi,DWORD PTR [ecx],0x291c17c4
  4053a5:	mov    eax,ds:0xbe48abe5
  4053aa:	fisubr DWORD PTR [si-0x345f]
  4053af:	mov    dh,0x6e
  4053b1:	dec    eax
  4053b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053b3:	lods   eax,DWORD PTR ds:[esi]
  4053b4:	pusha  
  4053b5:	and    eax,0x6f55340f
  4053ba:	out    0x44,al
  4053bc:	mov    dl,0xae
  4053be:	mov    ds:0x3f66409,eax
  4053c3:	lds    edi,FWORD PTR [ebp-0x60]
  4053c6:	rol    BYTE PTR [edx+0x22e0ce6d],1
  4053cc:	sbb    BYTE PTR [esi],cl
  4053ce:	ins    DWORD PTR es:[edi],dx
  4053cf:	fwait
  4053d0:	cmc    
  4053d1:	cmp    esi,esi
  4053d3:	xor    al,0x25
  4053d5:	jl     0x405421
  4053d7:	into   
  4053d8:	pop    ecx
  4053d9:	ds clc 
  4053db:	add    eax,0x55828ed0
  4053e0:	retf   
  4053e1:	shl    BYTE PTR [ecx+0xbb9f8e1],cl
  4053e7:	mov    edi,0xdf88713c
  4053ec:	push   eax
  4053ed:	loope  0x4053ef
  4053ef:	aas    
  4053f0:	or     ebp,DWORD PTR [eax+edx*8]
  4053f3:	jbe    0x405427
  4053f5:	mov    ds:0xe1fca1e8,al
  4053fa:	mov    ebx,0x6db4fe70
  4053ff:	out    0x3a,al
  405401:	pop    esp
  405402:	sub    BYTE PTR [ecx+0x2e],bl
  405405:	stos   DWORD PTR es:[edi],eax
  405406:	inc    edi
  405407:	cmp    ecx,DWORD PTR [ecx+0x72c9066a]
  40540d:	xchg   ecx,eax
  40540e:	push   edi
  40540f:	fcomp  DWORD PTR [edx]
  405411:	sub    BYTE PTR [ebx+0x21],dl
  405414:	pop    edx
  405415:	in     eax,0x9e
  405417:	sub    BYTE PTR [eax+eiz*1-0x26],ch
  40541b:	push   ebp
  40541c:	outs   dx,BYTE PTR ds:[esi]
  40541d:	adc    al,0x9f
  40541f:	hlt    
  405420:	adc    eax,0x996d985e
  405425:	or     al,BYTE PTR [ebx+0x71]
  405428:	push   ebp
  405429:	xchg   ebp,eax
  40542a:	inc    esi
  40542b:	dec    ebp
  40542c:	push   ebp
  40542d:	mov    ss,edx
  40542f:	cmp    eax,0x36a69cf
  405434:	jmp    0xf1209283
  405439:	into   
  40543a:	sbb    cl,BYTE PTR [esi+edi*8-0x3f]
  40543e:	sub    al,0x60
  405440:	add    eax,0xe6ea2f71
  405445:	(bad)  
  405446:	bound  esp,QWORD PTR [ebp+ecx*2-0x2fccbcef]
  40544d:	sahf   
  40544e:	dec    ebp
  40544f:	xchg   edx,eax
  405450:	stos   BYTE PTR es:[edi],al
  405451:	cmp    DWORD PTR [edi],0xffffff8d
  405454:	add    eax,0x5d4181fd
  405459:	fldcw  WORD PTR [ebp-0x247fa364]
  40545f:	inc    edi
  405460:	cmp    ch,BYTE PTR [ebp-0x26]
  405463:	std    
  405464:	into   
  405465:	xchg   ebp,eax
  405466:	call   0xcb71:0x790d62f3
  40546d:	inc    edi
  40546e:	mov    ds,ebx
  405470:	enter  0xe847,0x5a
  405474:	loope  0x4054d3
  405476:	mov    esi,DWORD PTR [eax]
  405478:	and    DWORD PTR [edx],edi
  40547a:	or     DWORD PTR [ebp+0x9],edi
  40547d:	out    0xd6,eax
  40547f:	push   eax
  405480:	ret    
  405481:	jp     0x405479
  405483:	and    eax,0x447d3206
  405488:	jne    0x405469
  40548a:	leave  
  40548b:	cli    
  40548c:	je     0x4054bf
  40548e:	mov    al,ch
  405490:	cs xchg ecx,eax
  405492:	pop    edx
  405493:	add    BYTE PTR [esi],ah
  405495:	mov    ch,0x3b
  405497:	pop    ebx
  405498:	daa    
  405499:	aaa    
  40549a:	pop    esp
  40549b:	mov    cl,0x90
  40549d:	icebp  
  40549e:	jo     0x4054a6
  4054a0:	xor    cl,ch
  4054a2:	jae    0x405489
  4054a4:	sbb    ch,BYTE PTR [ebx]
  4054a6:	jb     0x4054f5
  4054a8:	int3   
  4054a9:	pop    ebx
  4054aa:	cmp    ch,bl
  4054ac:	xlat   BYTE PTR ds:[ebx]
  4054ad:	or     eax,DWORD PTR [edx+0x21d60bf7]
  4054b3:	or     ebp,DWORD PTR [eax-0x60c1d08e]
  4054b9:	(bad)  
  4054ba:	fidiv  WORD PTR [edx+0x19]
  4054bd:	rol    DWORD PTR [bp+si+0x5f98],0xdc
  4054c3:	out    0x7e,eax
  4054c5:	fs jbe 0x4054e0
  4054c8:	or     ch,cl
  4054ca:	sti    
  4054cb:	xor    eax,0xd522c23b
  4054d0:	inc    eax
  4054d1:	mov    al,0x84
  4054d3:	sub    DWORD PTR [edi-0x2b843faf],0x970ec7f9
  4054dd:	or     al,0x63
  4054df:	jae    0x405495
  4054e1:	out    0x64,eax
  4054e3:	dec    ebx
  4054e4:	lods   eax,DWORD PTR ds:[esi]
  4054e5:	fs fmulp st(2),st
  4054e8:	push   0x5d3006cf
  4054ed:	mov    ds:0x77da5f9a,eax
  4054f2:	and    BYTE PTR [esi-0x3dd859c2],bh
  4054f8:	pop    ebp
  4054f9:	adc    DWORD PTR [edi],0xffffffef
  4054fc:	fisubr WORD PTR [ecx]
  4054fe:	mov    eax,0xe5ba255
  405503:	inc    edx
  405505:	enter  0x356,0xf2
  405509:	aad    0x7b
  40550b:	mov    dh,0x35
  40550d:	and    DWORD PTR [edx+0x61],ebx
  405510:	lods   eax,DWORD PTR ds:[esi]
  405511:	mov    ds,WORD PTR [edi-0x2f]
  405514:	mov    dh,0x5
  405516:	mov    eax,0xe466b809
  40551b:	mov    bl,0x92
  40551d:	or     al,0xd6
  40551f:	shl    ebp,0x45
  405522:	mov    dh,BYTE PTR [ecx-0x48]
  405525:	dec    ecx
  405526:	fild   DWORD PTR [eax]
  405528:	mov    ebp,0x22414fd0
  40552d:	cmp    cl,BYTE PTR [esi-0xb7d0d10]
  405533:	ror    BYTE PTR [ebp+0x41baadf6],1
  405539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40553a:	sub    al,0xc1
  40553c:	leave  
  40553d:	pop    esp
  40553e:	iret   
  40553f:	mov    ah,0x11
  405541:	jp     0x405562
  405543:	mov    edx,0x29a8cc72
  405548:	inc    esi
  405549:	push   edi
  40554a:	adc    al,ah
  40554c:	and    BYTE PTR [ebx-0x14d6a97c],dl
  405552:	mov    DWORD PTR [esp+ecx*8],ecx
  405555:	and    al,0x9d
  405557:	mov    esi,0xc5e1ef6c
  40555c:	jnp    0x405558
  40555e:	cld    
  40555f:	addr16 sti 
  405561:	and    DWORD PTR [edx],ebp
  405563:	cs retf 
  405565:	dec    ecx
  405566:	inc    ebx
  405567:	test   al,0x10
  405569:	pop    esp
  40556a:	jmp    0x9036:0x2fa96afe
  405571:	push   0xffffffb4
  405573:	mov    bh,0x95
  405575:	retf   
  405576:	leave  
  405577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405578:	les    edi,FWORD PTR [edi+0x2e]
  40557b:	jmp    0x405509
  40557d:	jns    0x40557e
  40557f:	dec    ebx
  405580:	adc    DWORD PTR [edi-0x2c],edi
  405583:	sub    eax,0x70e0df93
  405588:	stc    
  405589:	sbb    eax,0x50ba2b56
  40558e:	repnz sub DWORD PTR [ebp-0x2f631e3e],0x2a6ecfd6
  405599:	jo     0x4055a9
  40559b:	push   eax
  40559c:	bsr    esi,DWORD PTR [esi-0x492a66f8]
  4055a3:	jmp    0x405565
  4055a5:	cmp    eax,0x255f51f9
  4055aa:	lea    ebp,[edi+0x9]
  4055ad:	stos   BYTE PTR es:[edi],al
  4055ae:	xor    esi,eax
  4055b0:	dec    edx
  4055b1:	fst    QWORD PTR [esi+esi*4]
  4055b5:	icebp  
  4055b6:	mov    esp,0xe3e2910d
  4055bb:	push   esp
  4055bc:	or     edi,ebp
  4055be:	(bad)  
  4055bf:	in     eax,0x69
  4055c1:	retf   0xb14f
  4055c4:	outs   dx,DWORD PTR ds:[esi]
  4055c5:	xchg   esi,eax
  4055c6:	adc    eax,0x6d96d624
  4055cb:	jge    0x4055c8
  4055cd:	and    BYTE PTR [esi-0x13],0xaf
  4055d1:	push   es
  4055d2:	jae    0x4055f0
  4055d4:	outs   dx,DWORD PTR ds:[esi]
  4055d5:	imul   eax,DWORD PTR [esi-0x7c668f0b],0xc0441c1b
  4055df:	mov    edx,DWORD PTR [ebx-0x1a7d0db0]
  4055e5:	imul   esi,edi,0xb1c683f0
  4055eb:	fdiv   st,st(6)
  4055ed:	adc    ecx,edi
  4055ef:	or     al,bh
  4055f1:	xor    ecx,esp
  4055f3:	mov    esp,0xd2c338f4
  4055f8:	mov    esi,DWORD PTR [edx-0x12]
  4055fb:	aam    0x19
  4055fd:	xor    eax,0x8c913e0b
  405602:	repz or esi,DWORD PTR [ecx*8-0x40108854]
  40560a:	data16 add dh,BYTE PTR [edx]
  40560d:	imul   ebp,DWORD PTR [eax-0x3c01e3f],0xcb0f968d
  405617:	test   DWORD PTR [ecx],ebx
  405619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40561a:	and    al,0xbd
  40561c:	pop    es
  40561d:	pop    ds
  40561e:	pusha  
  40561f:	mov    bl,0x45
  405621:	fwait
  405622:	enter  0x9a7c,0xd3
  405626:	(bad)
  40562a:	retf   
  40562b:	mov    dl,0x73
  40562d:	(bad)  
  40562f:	fcomp  DWORD PTR [ecx+0x70]
  405632:	dec    esp
  405633:	dec    esi
  405634:	lods   al,BYTE PTR ds:[esi]
  405635:	pop    ebx
  405636:	xor    edx,DWORD PTR [ecx+eiz*4-0x53c9d518]
  40563d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40563e:	sbb    DWORD PTR [edi+0x40587260],ebp
  405644:	pop    es
  405645:	(bad)  
  405646:	jg     0x4055f6
  405648:	call   0xc338fd3b
  40564d:	dec    ebx
  40564e:	in     eax,0x88
  405650:	push   edx
  405651:	gs fucomp st(5)
  405654:	rcr    DWORD PTR [esi],0xfa
  405657:	mov    esi,0x8328d304
  40565c:	mov    DWORD PTR [bp+di+0x5d],ecx
  405660:	mov    DWORD PTR [edi+0x2c],ebx
  405663:	out    dx,al
  405664:	popf   
  405665:	(bad)  
  405666:	cmp    bh,BYTE PTR [ebx+eiz*2+0x21]
  40566a:	fnstsw WORD PTR [ebp+0x57]
  40566d:	ins    DWORD PTR es:[edi],dx
  40566e:	push   ds
  40566f:	call   0x7e7b:0xf8d36846
  405676:	scas   eax,DWORD PTR es:[edi]
  405677:	or     DWORD PTR [edx+0x27a59b0e],eax
  40567d:	scas   eax,DWORD PTR es:[edi]
  40567e:	out    dx,eax
  40567f:	cmp    edi,eax
  405681:	fwait
  405682:	cmp    dl,BYTE PTR [edi-0x2]
  405685:	sbb    DWORD PTR [ecx+0x46],eax
  405688:	psubq  mm0,mm7
  40568b:	push   0xffffff8f
  40568d:	push   ds
  40568e:	iret   
  40568f:	dec    esi
  405690:	push   ebp
  405691:	add    bl,BYTE PTR [ebx-0xa]
  405694:	mov    DWORD PTR [ebp+0x58],edx
  405697:	(bad)  
  405698:	outs   dx,DWORD PTR ds:[esi]
  405699:	sbb    DWORD PTR [ebx+ebp*4],edx
  40569c:	cmp    al,0x3e
  40569e:	or     DWORD PTR [esi],ecx
  4056a0:	stos   DWORD PTR es:[edi],eax
  4056a1:	jbe    0x4056c0
  4056a3:	sub    BYTE PTR [edi-0x62],dh
  4056a6:	mov    esp,0xd9d2d852
  4056ab:	jmp    0x4d020d9f
  4056b0:	lods   eax,DWORD PTR ds:[esi]
  4056b1:	pop    ds
  4056b2:	test   bh,ah
  4056b4:	xor    eax,0x4eed6a50
  4056b9:	packsswb mm1,mm3
  4056bc:	lock jne 0x4056f1
  4056bf:	ja     0x4056e0
  4056c1:	int    0xf2
  4056c3:	xchg   DWORD PTR [ecx+0x5a59dc61],eax
  4056c9:	mov    al,0xee
  4056cb:	jo     0x405746
  4056cd:	lds    esp,FWORD PTR [esi-0x28]
  4056d0:	or     bh,BYTE PTR [ebx]
  4056d2:	cmc    
  4056d3:	add    BYTE PTR [ebp-0x70],al
  4056d6:	pusha  
  4056d7:	inc    esp
  4056d8:	or     ch,dl
  4056da:	les    edx,FWORD PTR [ecx+0x3aba9724]
  4056e0:	push   esp
  4056e1:	and    dh,BYTE PTR [edx-0x6036c631]
  4056e7:	xchg   BYTE PTR [ecx+0x5c],al
  4056ea:	aaa    
  4056eb:	mov    edx,0xe8443529
  4056f0:	mov    edx,0x3e93a25e
  4056f5:	out    0xfe,al
  4056f7:	add    eax,0xd60626a6
  4056fc:	pop    edx
  4056fd:	aaa    
  4056fe:	push   0xffffffcd
  405700:	xchg   esp,eax
  405701:	jp     0x405705
  405703:	sub    bl,dl
  405705:	push   0xbcd366cd
  40570a:	push   0xffffffdb
  40570c:	daa    
  40570d:	xchg   esp,eax
  40570e:	fdivrp st(7),st
  405710:	ja     0x4056ae
  405712:	mov    ch,BYTE PTR ds:0x45c4bb5
  405718:	test   eax,0x702b698b
  40571d:	cli    
  40571e:	ds loopne 0x40576d
  405721:	(bad)  
  405723:	lahf   
  405724:	mov    BYTE PTR [eax],bh
  405726:	fsub   QWORD PTR [ebx-0x2113b552]
  40572c:	xor    ax,0x436b
  405730:	push   es
  405731:	repnz mov esp,0x10e848a1
  405737:	sub    dl,BYTE PTR [esi+eiz*8-0x5c971926]
  40573e:	sar    BYTE PTR [ecx],cl
  405740:	xor    ah,BYTE PTR [edi]
  405742:	jnp    0x40574e
  405744:	push   0xffffffa1
  405746:	push   eax
  405747:	jne    0x4056d2
  405749:	ins    DWORD PTR es:[edi],dx
  40574a:	mov    ?,WORD PTR [eax]
  40574c:	jnp    0x4057a4
  40574e:	sahf   
  40574f:	and    DWORD PTR [ebp+ecx*8+0x62],esp
  405753:	adc    eax,0x6295c91f
  405758:	sbb    BYTE PTR [ecx-0x73],dl
  40575b:	jmp    0x4056df
  40575d:	fcmovnu st,st(6)
  40575f:	in     eax,dx
  405760:	(bad)  
  405761:	imul   ebx,DWORD PTR [ecx-0x40],0xdbabda8b
  405768:	add    edx,0x4b
  40576b:	jg     0x40573f
  40576d:	push   es
  40576e:	sub    al,0x0
  405770:	(bad)  
  405771:	ins    DWORD PTR es:[edi],dx
  405772:	mov    edx,0xf5b62d3a
  405777:	repz and DWORD PTR [eax-0x51],ecx
  40577b:	or     bl,bl
  40577d:	ror    DWORD PTR [edx-0x20fa6dcc],1
  405783:	sbb    al,0xe
  405785:	ret    
  405786:	cmp    BYTE PTR [ebx-0x75941b4],dl
  40578c:	clc    
  40578d:	sbb    edx,DWORD PTR [edi+ecx*2-0x70d0db63]
  405794:	fimul  WORD PTR [edx-0x4f26b73]
  40579a:	xchg   DWORD PTR [edx-0x71dd3ff3],ebp
  4057a0:	les    eax,FWORD PTR [edi+0x7f607ae8]
  4057a6:	(bad)  
  4057a7:	aas    
  4057a8:	or     dh,BYTE PTR [edi]
  4057aa:	pop    ss
  4057ab:	cld    
  4057ac:	call   0xf306:0x4858a6b0
  4057b3:	sbb    DWORD PTR [ebx-0x7f001e27],ebx
  4057b9:	rcl    DWORD PTR [edi],0x3
  4057bc:	dec    ebx
  4057bd:	les    eax,FWORD PTR [ebx]
  4057bf:	jg     0x40579d
  4057c1:	outs   dx,DWORD PTR ds:[esi]
  4057c2:	aam    0x2d
  4057c4:	into   
  4057c5:	ret    0xd56b
  4057c8:	mov    al,ds:0xdce3c5ff
  4057cd:	popf   
  4057ce:	and    eax,0x6afca9f8
  4057d3:	push   ebx
  4057d4:	sbb    DWORD PTR [edx+0x53f60f4c],edi
  4057da:	arpl   WORD PTR [ebx+edi*4+0x33bfa43a],di
  4057e1:	aaa    
  4057e2:	stos   DWORD PTR es:[edi],eax
  4057e3:	scas   al,BYTE PTR es:[edi]
  4057e4:	pop    ebx
  4057e5:	adc    ebp,edi
  4057e7:	loopne 0x4057a5
  4057e9:	adc    eax,0x3d0256ee
  4057ee:	cs pushf 
  4057f0:	int    0xef
  4057f2:	pop    edx
  4057f3:	ja     0x40577e
  4057f5:	xchg   esi,eax
  4057f6:	mov    ah,0xea
  4057f8:	in     eax,0xba
  4057fa:	lea    esi,[ebp-0x5465da02]
  405800:	or     eax,0xf5eb60cc
  405805:	icebp  
  405806:	add    al,BYTE PTR [edx+ebp*8]
  405809:	cmc    
  40580a:	test   eax,0xe4c17aa9
  40580f:	(bad)  
  405811:	mov    al,ds:0x90fd45fe
  405816:	add    ax,0x437c
  40581a:	pop    edi
  40581b:	repnz push esi
  40581d:	jle    0x405814
  40581f:	cmp    eax,0x14cde624
  405824:	pop    edx
  405825:	xor    BYTE PTR [edi+0x7c],cl
  405828:	pop    ebp
  405829:	push   0x7d97b85
  40582e:	sub    ecx,esi
  405830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405831:	add    DWORD PTR [edx-0x4a3a6adf],esp
  405837:	or     ah,BYTE PTR [esi-0x2651d4fd]
  40583d:	xchg   edi,eax
  40583e:	ss jnp 0x40581f
  405841:	xchg   edx,eax
  405842:	mov    eax,DWORD PTR [ecx-0xc1e2c2b]
  405848:	adc    eax,0xb0728587
  40584d:	adc    esi,esp
  40584f:	mov    esp,0x9d78b41a
  405854:	push   ebp
  405855:	sub    bh,bh
  405857:	ins    DWORD PTR es:[edi],dx
  405858:	mov    ch,0x2c
  40585a:	ret    0x1451
  40585d:	xor    ecx,0xd8543f8
  405863:	and    DWORD PTR [esi-0x3e],ebp
  405866:	popf   
  405867:	sbb    eax,0x582438a9
  40586c:	sbb    ebx,DWORD PTR [eax-0x42]
  40586f:	mov    ah,0xf6
  405871:	or     ecx,ecx
  405873:	sub    esp,ecx
  405875:	mov    ecx,edx
  405877:	xchg   BYTE PTR [ebx],dh
  405879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40587a:	call   0x9b18:0xcab1f93a
  405881:	adc    BYTE PTR [edx-0x73933591],0x9b
  405888:	loopne 0x4058d8
  40588a:	inc    ebp
  40588b:	(bad)  
  40588c:	rol    BYTE PTR [eax+0x15],cl
  40588f:	xlat   BYTE PTR ds:[ebx]
  405891:	add    cl,BYTE PTR [edx-0x693b2208]
  405897:	ins    BYTE PTR es:[edi],dx
  405898:	mov    cs,WORD PTR [edx-0x69dc101e]
  40589e:	mov    ds:0x8c180fdd,al
  4058a3:	retf   
  4058a4:	out    dx,al
  4058a5:	out    0xe4,al
  4058a7:	in     al,dx
  4058a8:	clc    
  4058a9:	clc    
  4058aa:	icebp  
  4058ab:	and    BYTE PTR [edi],ah
  4058ad:	adc    DWORD PTR [eax+0x21ee4257],edx
  4058b3:	xchg   dh,cl
  4058b5:	and    bl,BYTE PTR [eax+edi*4+0x15]
  4058b9:	pop    edi
  4058ba:	int3   
  4058bb:	or     al,0xa4
  4058bd:	pushf  
  4058be:	pop    edx
  4058bf:	retf   0x324
  4058c2:	into   
  4058c3:	imul   bh
  4058c5:	inc    esp
  4058c6:	pop    es
  4058c7:	jbe    0x40593c
  4058c9:	aas    
  4058ca:	ficom  DWORD PTR [ebx]
  4058cc:	retf   
  4058cd:	xchg   ecx,eax
  4058ce:	pop    ecx
  4058cf:	or     esp,ecx
  4058d1:	fadd   QWORD PTR ds:0x74cd7936
  4058d7:	jb     0x405952
  4058d9:	mov    ah,0x21
  4058db:	xor    al,BYTE PTR [ebx]
  4058dd:	(bad)  
  4058de:	call   DWORD PTR [esi-0x323fc9f0]
  4058e4:	inc    esp
  4058e5:	or     BYTE PTR ds:0xaf60513d,0xf
  4058ec:	(bad)  
  4058ed:	mov    eax,ds:0x3a35973d
  4058f2:	or     eax,0x63de4a8b
  4058f7:	xchg   ebp,eax
  4058f8:	or     ecx,edx
  4058fa:	outs   dx,BYTE PTR ds:[esi]
  4058fb:	sbb    al,0x18
  4058fd:	lods   al,BYTE PTR ds:[esi]
  4058fe:	push   es
  4058ff:	int    0x70
  405901:	jno    0x405884
  405903:	bound  esi,QWORD PTR [edx-0x6c180ffe]
  405909:	aaa    
  40590a:	jl     0x4058cd
  40590c:	mov    edi,0x3687b360
  405911:	arpl   dx,ax
  405913:	ror    BYTE PTR [ecx-0x46],1
  405916:	sub    esp,DWORD PTR [ebx]
  405918:	add    al,0x1b
  40591a:	enter  0x67b8,0x96
  40591e:	mov    ecx,0x9ebd7e52
  405923:	test   eax,0x4fe5e3c5
  405928:	xchg   edi,edx
  40592a:	push   es
  40592b:	fdivr  QWORD PTR [ebp-0x4904db4f]
  405931:	lds    esp,FWORD PTR [edi]
  405933:	stos   BYTE PTR es:[edi],al
  405934:	ins    DWORD PTR es:[edi],dx
  405935:	hlt    
  405936:	push   cs
  405937:	ins    BYTE PTR es:[edi],dx
  405938:	call   0xc222:0xf56703ec
  40593f:	jmp    0x6c1:0x3c19330a
  405946:	paddw  mm3,QWORD PTR [esi]
  405949:	push   ds
  40594a:	jle    0x4059a4
  40594c:	and    eax,0x1d3633f1
  405951:	xchg   ebx,eax
  405952:	pop    esp
  405953:	repz jo 0x405961
  405956:	aaa    
  405957:	sbb    BYTE PTR [ebx-0x1e],cl
  40595a:	int    0x3b
  40595c:	push   ds
  40595d:	(bad)  
  40595e:	pop    eax
  40595f:	mov    dh,0x4b
  405961:	ret    
  405962:	add    DWORD PTR [ebp-0x7],ebp
  405965:	pop    esi
  405966:	cli    
  405967:	jb     0x40598f
  405969:	sub    BYTE PTR [ebx+0x2],dh
  40596c:	into   
  40596d:	mov    esp,0xc72a9fad
  405972:	cmp    al,0x6a
  405974:	ss xchg ebx,eax
  405976:	dec    eax
  405977:	je     0x40595f
  405979:	fiadd  WORD PTR [edi-0x3cb3f39c]
  40597f:	mov    esi,0xd61f2f94
  405984:	add    eax,0x42d32bf6
  405989:	in     al,dx
  40598a:	xchg   esp,eax
  40598b:	push   edx
  40598c:	xor    BYTE PTR [ecx-0x212b5561],bl
  405992:	bound  eax,QWORD PTR [ecx-0x38]
  405995:	jmp    0x2a2243ec
  40599a:	std    
  40599b:	jge    0x4059b3
  40599d:	cmp    cl,BYTE PTR [esi-0xf]
  4059a0:	stos   BYTE PTR es:[edi],al
  4059a1:	lea    ebx,ds:0xd09d21db
  4059a7:	call   eax
  4059a9:	or     bl,ah
  4059ab:	pop    ss
  4059ac:	fs ja  0x405988
  4059af:	xchg   ebp,eax
  4059b0:	mov    al,0xb9
  4059b2:	sahf   
  4059b3:	adc    esp,edi
  4059b5:	push   edi
  4059b6:	dec    eax
  4059b7:	(bad)  
  4059b9:	sub    eax,0x93bcfb22
  4059be:	fiadd  DWORD PTR [ebp+0x39d0566d]
  4059c4:	out    0xfc,al
  4059c6:	or     al,0xba
  4059c8:	xchg   edx,eax
  4059c9:	stc    
  4059ca:	daa    
  4059cb:	shr    BYTE PTR [edx+0x5a],1
  4059ce:	xor    ebp,eax
  4059d0:	xchg   ebx,eax
  4059d1:	cwde   
  4059d2:	jp     0x4059e9
  4059d4:	fcmovnb st,st(2)
  4059d6:	xor    eax,0xceeabbc7
  4059db:	jnp    0x4059ac
  4059dd:	test   ah,cl
  4059df:	imul   esi,edi,0xfffffff5
  4059e2:	and    eax,0xea3c7144
  4059e7:	pop    ds
  4059e8:	popf   
  4059e9:	and    edi,edi
  4059eb:	sbb    ebx,esp
  4059ed:	popa   
  4059ee:	rcl    BYTE PTR [edi-0x436a4220],cl
  4059f4:	xor    ebx,DWORD PTR [edx+0x3c881ad4]
  4059fa:	push   0xffffffe8
  4059fc:	push   ecx
  4059fd:	jp     0x4059aa
  4059ff:	ja     0x4059c5
  405a01:	ja     0x405a49
  405a03:	adc    al,0xe0
  405a05:	lods   eax,DWORD PTR ds:[esi]
  405a06:	out    0xfc,al
  405a08:	mov    ecx,0x87cbd64c
  405a0d:	sbb    DWORD PTR [eax-0x490862d7],ecx
  405a13:	sbb    BYTE PTR [edi+0xb],ch
  405a16:	jmp    0x405a1d
  405a18:	lods   al,BYTE PTR ds:[esi]
  405a19:	xchg   edx,eax
  405a1a:	aad    0xd8
  405a1c:	mov    edi,0x88259af0
  405a21:	jb     0x4059ac
  405a23:	mov    WORD PTR [edi-0x402e66ec],fs
  405a29:	loope  0x405a2e
  405a2b:	jp     0x405a11
  405a2d:	(bad)  
  405a2e:	stc    
  405a2f:	ds or  cl,ah
  405a32:	jge    0x405a0c
  405a34:	or     BYTE PTR [esi],al
  405a36:	add    edx,DWORD PTR [edi+0x6733587]
  405a3c:	push   ecx
  405a3d:	fistp  QWORD PTR [edi-0x1f9189bc]
  405a43:	aad    0x5c
  405a45:	and    BYTE PTR [eax+0x2e],al
  405a48:	(bad)  
  405a49:	or     ah,dh
  405a4b:	int3   
  405a4c:	ss adc al,0x50
  405a4f:	mov    ch,0x48
  405a51:	xchg   esp,eax
  405a52:	sbb    BYTE PTR [esi-0x78],0x80
  405a56:	sub    bh,bh
  405a58:	jl     0x4059fa
  405a5a:	mov    ds:0x6d7c974a,al
  405a5f:	xor    edi,edx
  405a61:	sar    BYTE PTR [esp+eax*4],cl
  405a64:	cs jge 0x405a7d
  405a67:	popf   
  405a68:	and    ecx,edi
  405a6a:	sub    BYTE PTR [ebp+0x47f29cde],cl
  405a70:	ins    BYTE PTR es:[edi],dx
  405a71:	ss mov bh,0xf6
  405a74:	xchg   esp,eax
  405a75:	jp     0x405a4e
  405a77:	xor    al,0xb9
  405a79:	dec    edx
  405a7a:	push   ebx
  405a7b:	lock inc esi
  405a7d:	out    dx,eax
  405a7e:	xor    al,0xb7
  405a80:	lds    eax,FWORD PTR [ebx-0x3a]
  405a83:	mov    eax,ds:0x9f2262d4
  405a88:	and    bl,bl
  405a8a:	loopne 0x405a2f
  405a8c:	bound  esi,QWORD PTR [ebp+0x4dfb278d]
  405a92:	dec    esp
  405a93:	rol    DWORD PTR [ebx-0x28],0x4a
  405a97:	mov    edx,0xf76b0c80
  405a9c:	xchg   ecx,eax
  405a9d:	adc    edx,DWORD PTR [edx-0x19]
  405aa0:	fwait
  405aa1:	enter  0x953f,0xb2
  405aa5:	xor    BYTE PTR [edx+0x19b98811],dl
  405aab:	jnp    0x405ab4
  405aad:	dec    edi
  405aae:	inc    ebx
  405aaf:	add    esp,DWORD PTR [esi]
  405ab1:	dec    esi
  405ab2:	(bad)  [edx+0x3b]
  405ab5:	or     DWORD PTR ds:0x7a07f997,ebp
  405abb:	and    al,0x8e
  405abd:	sbb    ch,0xd2
  405ac0:	jmp    0x405a4f
  405ac2:	or     DWORD PTR [edi+0x2f],ebp
  405ac5:	push   0xf5296f50
  405aca:	dec    ebx
  405acb:	out    dx,eax
  405acc:	ins    DWORD PTR es:[edi],dx
  405acd:	lock dec esp
  405acf:	pop    ds
  405ad0:	mov    bl,0x6b
  405ad2:	sahf   
  405ad3:	sbb    edi,DWORD PTR ds:0xc9c8eec
  405ad9:	adc    eax,0x8b24ac0d
  405ade:	cli    
  405adf:	push   ds
  405ae0:	pop    ss
  405ae1:	jb     0x405b44
  405ae3:	dec    edi
  405ae4:	jle    0x405b15
  405ae6:	mov    ah,0xc2
  405ae8:	push   esi
  405ae9:	gs dec edi
  405aeb:	into   
  405aec:	mov    al,ds:0x963bbe91
  405af1:	mov    gs,WORD PTR [edx+0x4b]
  405af4:	rcr    DWORD PTR [ebx],cl
  405af6:	and    eax,0xf1cd18ba
  405afb:	hlt    
  405afc:	mov    esp,0x2efc65bb
  405b01:	lds    esi,FWORD PTR [ebp+ebp*4-0x43]
  405b05:	jns    0x405b84
  405b07:	jnp    0x405b0f
  405b09:	inc    eax
  405b0a:	out    dx,eax
  405b0b:	mov    BYTE PTR [edi],ah
  405b0d:	pop    ebp
  405b0e:	rol    esp,0xcb
  405b11:	or     dh,BYTE PTR [eax-0x73]
  405b14:	pushf  
  405b15:	push   es
  405b16:	cmp    al,ah
  405b18:	mov    DWORD PTR [ecx],ebp
  405b1a:	fld    DWORD PTR [ecx-0x1ce9447a]
  405b20:	shl    DWORD PTR [edi],0x14
  405b23:	xchg   ecx,eax
  405b24:	repz push eax
  405b26:	(bad)  
  405b27:	shl    BYTE PTR [esi+eax*8-0x63a002f8],cl
  405b2e:	sub    al,0x29
  405b30:	lods   al,BYTE PTR ds:[esi]
  405b31:	push   ebp
  405b32:	jo     0x405ade
  405b34:	add    DWORD PTR [edx+0x74d9dc8d],0x81e2f5b7
  405b3e:	dec    esp
  405b3f:	xor    DWORD PTR [eax-0x772e595],ebp
  405b45:	les    ebp,FWORD PTR [eax+0x10e79dcc]
  405b4b:	xchg   esp,eax
  405b4c:	add    cl,bh
  405b4e:	mov    eax,ds:0x6ed1d313
  405b53:	daa    
  405b54:	or     al,0x33
  405b56:	stos   DWORD PTR es:[edi],eax
  405b57:	sbb    edi,DWORD PTR [ebx-0xdc49e7c]
  405b5d:	pop    ebp
  405b5e:	imul   eax,esp,0xffffff8b
  405b61:	pusha  
  405b62:	mov    ds:0x103ee199,eax
  405b67:	ins    BYTE PTR es:[edi],dx
  405b68:	imul   edx,DWORD PTR [esp+edx*4+0x38],0x22
  405b6d:	lods   eax,DWORD PTR ds:[esi]
  405b6e:	mov    BYTE PTR [edx-0x53],bh
  405b71:	jmp    0xf3c12c0f
  405b76:	(bad)  
  405b77:	cld    
  405b78:	jmp    0x1b0f:0x62ebe1f7
  405b7f:	(bad)  
  405b80:	adc    bh,bh
  405b82:	dec    ebp
  405b83:	out    0xf4,eax
  405b85:	add    eax,0xc43630f0
  405b8a:	xchg   edi,eax
  405b8b:	pop    edi
  405b8c:	pop    ebp
  405b8d:	iret   
  405b8e:	xchg   esp,eax
  405b8f:	sub    BYTE PTR [ebx],bl
  405b91:	and    eax,0x5a384128
  405b96:	add    eax,0xb17c806f
  405b9b:	add    ebp,DWORD PTR [edx-0x78]
  405b9e:	rol    edi,1
  405ba0:	inc    ebp
  405ba1:	pop    edx
  405ba2:	fwait
  405ba3:	jmp    0x405b37
  405ba5:	test   bl,cl
  405ba7:	jge    0x405c0f
  405ba9:	xchg   edi,eax
  405baa:	test   eax,0xa18033b6
  405baf:	pop    ebp
  405bb0:	es ins BYTE PTR es:[edi],dx
  405bb2:	out    dx,eax
  405bb3:	jnp    0x405c09
  405bb5:	xor    edx,eax
  405bb7:	mov    eax,0x7d2da52e
  405bbc:	repz in eax,0xcb
  405bbf:	cmp    al,0xdb
  405bc1:	or     DWORD PTR [esi-0x2a],edi
  405bc4:	push   0x12bea5a8
  405bc9:	push   0x10
  405bcb:	ins    BYTE PTR es:[edi],dx
  405bcc:	push   es
  405bcd:	xchg   ebp,edx
  405bcf:	sbb    ebx,0x895ae6ee
  405bd5:	imul   ecx,DWORD PTR ds:0x82f99cd7,0x1267d6e6
  405bdf:	scas   eax,DWORD PTR es:[edi]
  405be0:	in     al,dx
  405be1:	xor    bh,BYTE PTR [ecx]
  405be3:	pushf  
  405be4:	(bad)  
  405be6:	push   DWORD PTR [edx+0x1e]
  405be9:	loopne 0x405bb9
  405beb:	arpl   WORD PTR [ebp+edi*4+0x0],bp
  405bef:	mov    eax,0x98507575
  405bf4:	sbb    BYTE PTR [edi-0x15],dh
  405bf7:	outs   dx,BYTE PTR ds:[esi]
  405bf9:	and    DWORD PTR [esi+edi*2+0x70],edx
  405bfd:	lock inc edi
  405bff:	jne    0x405ba5
  405c01:	idiv   DWORD PTR [edi]
  405c03:	cmp    al,0xd4
  405c05:	ret    0x598a
  405c08:	dec    edx
  405c09:	mov    fs,esi
  405c0b:	dec    ecx
  405c0c:	inc    ecx
  405c0d:	push   esp
  405c0e:	clc    
  405c0f:	sbb    ecx,DWORD PTR [edx]
  405c11:	test   al,0x91
  405c13:	test   bl,0x7a
  405c16:	aam    0xb8
  405c18:	(bad)  
  405c19:	shr    BYTE PTR [edx-0x49],cl
  405c1c:	jo     0x405be5
  405c1e:	iret   
  405c1f:	mul    DWORD PTR [edi+0x29dfbe24]
  405c25:	pop    eax
  405c26:	fcomp  QWORD PTR [ecx]
  405c28:	jl     0x405c42
  405c2a:	cmp    BYTE PTR [ebp-0xe],ah
  405c2d:	dec    edx
  405c2e:	ret    
  405c2f:	int3   
  405c30:	shl    DWORD PTR [ebp-0x45],cl
  405c33:	cmp    cl,BYTE PTR [eax]
  405c35:	dec    esi
  405c36:	sbb    ecx,DWORD PTR [ecx]
  405c38:	dec    eax
  405c39:	ficom  DWORD PTR [ecx+0x25]
  405c3c:	xchg   esp,eax
  405c3d:	push   esp
  405c3e:	dec    edi
  405c3f:	ss dec esp
  405c41:	pusha  
  405c42:	pop    ss
  405c43:	(bad)  
  405c44:	scas   eax,DWORD PTR es:[edi]
  405c45:	test   eax,0xbcd6fc49
  405c4a:	mov    eax,ds:0x421ad2
  405c4f:	push   DWORD PTR [eax]
  405c51:	push   DWORD PTR ds:0x421d2e
  405c57:	push   DWORD PTR ds:0x421ada
  405c5d:	push   DWORD PTR ds:0x421d0e
  405c63:	push   DWORD PTR ds:0x421da2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421cd2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423837
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x4237f6
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a62
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423982
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	xchg   ebp,eax
  40635b:	jmp    0x6262:0x3b382942
  406362:	adc    BYTE PTR [edi+0x62],bl
  406365:	bound  ecx,QWORD PTR [ebx+ecx*4+0x74efb378]
  40636c:	retf   0x10fe
  40636f:	aas    
  406370:	adc    eax,0x398fec2a
  406375:	push   edx
  406376:	lods   al,BYTE PTR ds:[esi]
  406377:	sbb    al,0x88
  406379:	add    BYTE PTR [edx+0x1a85e4bd],dl
  40637f:	mov    WORD PTR [ebp-0x66],?
  406382:	mov    al,0x2d
  406384:	cmp    cl,BYTE PTR [esi]
  406386:	cmc    
  406387:	es ja  0x406386
  40638a:	fsub   st,st(6)
  40638c:	stos   BYTE PTR es:[edi],al
  40638d:	cdq    
  40638e:	lahf   
  40638f:	mov    esi,0x4d972e07
  406394:	sub    al,0x42
  406396:	xchg   BYTE PTR [edi-0x1f],ch
  406399:	dec    edi
  40639a:	out    0xd3,eax
  40639c:	lds    eax,FWORD PTR [ebp+0x3d]
  40639f:	jmp    0xb67b39ec
  4063a4:	cmp    BYTE PTR [ecx+0x16126360],dl
  4063aa:	jnp    0x40633f
  4063ac:	scas   eax,DWORD PTR es:[edi]
  4063ad:	mov    eax,0xd511f8e4
  4063b2:	adc    eax,ebx
  4063b4:	das    
  4063b5:	sub    eax,0xe3f1f686
  4063ba:	jo     0x406410
  4063bc:	adc    al,0x5a
  4063be:	ss add ecx,esp
  4063c1:	lock push esp
  4063c3:	xchg   ecx,eax
  4063c4:	pushf  
  4063c5:	mov    BYTE PTR [edx-0x3214715],ch
  4063cb:	fidivr DWORD PTR [ebp-0x63e894b8]
  4063d1:	jg     0x4063c1
  4063d3:	sub    eax,0x5b7a9271
  4063d8:	sub    edx,DWORD PTR [edx+0x15]
  4063db:	fiadd  DWORD PTR [ecx]
  4063dd:	and    eax,0xdda7ac8f
  4063e2:	fisubr WORD PTR [esp+esi*2]
  4063e5:	pop    edi
  4063e6:	mov    fs,WORD PTR [ebp+0x370a8880]
  4063ec:	repz adc ebp,DWORD PTR [ebx+0x7a]
  4063f0:	outs   dx,DWORD PTR ds:[esi]
  4063f1:	mov    bh,BYTE PTR [eax+0x5720cefb]
  4063f7:	sub    eax,0x6ba9f959
  4063fc:	sbb    eax,0x8645cdbb
  406401:	push   ebx
  406402:	or     ecx,edi
  406404:	inc    eax
  406405:	test   esp,esi
  406407:	or     BYTE PTR [eax+0x1e],bl
  40640a:	jg     0x4063d3
  40640c:	mov    edi,es
  40640e:	repz xor al,0x20
  406411:	cld    
  406412:	add    DWORD PTR [esi],ecx
  406414:	xchg   edx,eax
  406415:	div    DWORD PTR [ebx-0x6e]
  406418:	cmc    
  406419:	popf   
  40641a:	mov    ecx,0x8c1e0e8d
  40641f:	adc    esp,DWORD PTR [ebx-0x12]
  406422:	ficomp WORD PTR [edx-0x60eecbba]
  406428:	test   eax,0xaf25764a
  40642d:	pop    DWORD PTR [esi+ebp*4]
  406430:	xchg   edi,eax
  406431:	or     ch,ch
  406433:	pop    esi
  406434:	push   eax
  406435:	mov    cl,0xe7
  406437:	shr    BYTE PTR [ebx],0xd7
  40643a:	xor    BYTE PTR [ecx-0x5f],ah
  40643d:	mov    al,ds:0xcad1c5c8
  406442:	pop    ds
  406443:	in     al,0xbe
  406445:	leave  
  406446:	inc    esp
  406447:	imul   esi,DWORD PTR [ecx+0x64],0x39
  40644b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644d:	jmp    FWORD PTR [edi]
  40644f:	loope  0x40648d
  406451:	fst    QWORD PTR [edx+0x3b]
  406454:	pop    ss
  406455:	mov    edx,0x62375e5a
  40645a:	xchg   edx,eax
  40645b:	pusha  
  40645c:	test   DWORD PTR [eax-0x35d31b4a],esi
  406462:	cmp    ah,0xac
  406465:	push   cs
  406466:	pop    ebp
  406467:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406468:	mov    dh,0x37
  40646a:	and    al,0xa9
  40646c:	ins    BYTE PTR es:[edi],dx
  40646d:	dec    esi
  40646e:	mov    dh,0xe7
  406470:	dec    ebp
  406471:	test   BYTE PTR [eax],dl
  406473:	ror    bh,0xa1
  406476:	ja     0x4063f9
  406478:	xor    BYTE PTR [ebx-0x44],ch
  40647b:	sub    esi,DWORD PTR [ebx+0x20dab051]
  406481:	pop    edi
  406482:	xor    bh,BYTE PTR [edi]
  406484:	(bad)  
  406486:	call   0x5622:0x4bc1b44b
  40648d:	mov    ebx,0xbbdf3e79
  406492:	ficomp WORD PTR [eax-0x4a]
  406495:	mov    cl,0xbd
  406497:	popf   
  406498:	fst    QWORD PTR [ebp+ebx*1-0x7b]
  40649c:	outs   dx,DWORD PTR ds:[esi]
  40649d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649e:	adc    ecx,DWORD PTR [ecx+edx*1+0x23]
  4064a2:	iret   
  4064a3:	bound  ecx,QWORD PTR [edi*1-0x3b201bdc]
  4064aa:	mov    esi,0x1a8cd8ef
  4064af:	jne    0x40647e
  4064b1:	inc    ebx
  4064b2:	scas   eax,DWORD PTR es:[edi]
  4064b3:	das    
  4064b4:	arpl   WORD PTR [esi+0x77],si
  4064b7:	(bad)  
  4064b8:	push   ebx
  4064b9:	cmovp  eax,DWORD PTR [esi]
  4064bc:	mov    cl,0x29
  4064be:	out    dx,eax
  4064bf:	or     DWORD PTR [edi],ecx
  4064c1:	shl    DWORD PTR [ecx-0x29dd8722],cl
  4064c7:	jge    0x4064c9
  4064c9:	mov    bl,BYTE PTR [eax+0x6c]
  4064cc:	loopne 0x4064fb
  4064ce:	cmp    BYTE PTR [ebx+0x7f555f14],ah
  4064d4:	jo     0x4064d1
  4064d6:	inc    esi
  4064d7:	aad    0xca
  4064d9:	into   
  4064da:	mov    dh,0x64
  4064dc:	lea    edi,[edx-0xc]
  4064df:	sub    ch,BYTE PTR [edi]
  4064e1:	dec    eax
  4064e2:	shl    BYTE PTR [ebp-0x8dc5d77],cl
  4064e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e9:	push   cs
  4064ea:	imul   ebx,edi,0xb86a71dd
  4064f0:	test   DWORD PTR [eax-0x48a69680],0xa2902644
  4064fa:	and    DWORD PTR [edi-0x10],edx
  4064fd:	arpl   WORD PTR [edi],sp
  4064ff:	and    eax,0x97d1fce5
  406504:	pop    edi
  406505:	test   eax,0x4524ebb2
  40650a:	sar    DWORD PTR [ebx],cl
  40650c:	loope  0x406588
  40650e:	xlat   BYTE PTR ds:[ebx]
  40650f:	ret    
  406510:	dec    ecx
  406511:	fcmovnu st,st(1)
  406513:	popa   
  406514:	mov    al,ds:0x9d5cd60b
  406519:	lods   eax,DWORD PTR ds:[esi]
  40651a:	cwde   
  40651b:	mov    dl,0x59
  40651d:	test   esp,ecx
  40651f:	fdivrp st(3),st
  406521:	(bad)  
  406522:	mov    BYTE PTR ds:0xe42d7664,dh
  406528:	pusha  
  406529:	add    BYTE PTR [esi],0x50
  40652c:	test   eax,edx
  40652e:	or     DWORD PTR ds:0xf51eb748,edi
  406534:	pop    eax
  406535:	nop
  406536:	dec    edi
  406537:	adc    cl,BYTE PTR [edx+esi*8]
  40653a:	shl    BYTE PTR [esi+0x1ad7d570],1
  406540:	push   esp
  406541:	inc    ecx
  406542:	adc    al,0xbe
  406544:	jo     0x40654b
  406546:	sub    al,0xa4
  406548:	leave  
  406549:	div    DWORD PTR [edi+0x28]
  40654c:	add    al,0x76
  40654e:	dec    edx
  40654f:	fimul  DWORD PTR [ecx]
  406551:	sub    DWORD PTR [ecx+0x5c4410b3],edi
  406557:	adc    ecx,DWORD PTR [eax]
  406559:	or     DWORD PTR [edx-0x66],esp
  40655c:	xchg   edx,eax
  40655d:	jge    0x40654d
  40655f:	and    al,0x39
  406561:	inc    DWORD PTR [edx-0x72]
  406564:	jle    0x4065e5
  406566:	int3   
  406567:	jmp    0x80ecae65
  40656c:	(bad)  
  40656d:	push   esi
  40656e:	mov    edx,0x5b51a0c
  406573:	push   eax
  406574:	pop    edi
  406575:	ror    bl,0xfb
  406578:	sahf   
  406579:	push   esi
  40657a:	xchg   esi,eax
  40657b:	add    BYTE PTR [edi],dl
  40657d:	jp     0x40654e
  40657f:	or     eax,0xa860fd4
  406584:	aas    
  406585:	pop    edx
  406586:	aaa    
  406587:	jno    0x4065ec
  406589:	mov    ecx,DWORD PTR [esi+0x3981d557]
  40658f:	cmp    eax,0x44891a6c
  406594:	adc    DWORD PTR [edi],ebx
  406596:	jo     0x406524
  406598:	gs jcxz 0x406525
  40659c:	icebp  
  40659d:	jno    0x4065be
  40659f:	xor    al,0x2c
  4065a1:	idiv   BYTE PTR [eax+0x3989b186]
  4065a7:	ror    ebx,1
  4065a9:	or     BYTE PTR [esi-0x2a860742],ch
  4065af:	sub    esi,ebx
  4065b1:	(bad)  
  4065b2:	fdiv   QWORD PTR [eax]
  4065b4:	xor    eax,0xf5a2f6f
  4065b9:	sub    esi,DWORD PTR [eax+0x7ae3ec15]
  4065bf:	stos   BYTE PTR es:[edi],al
  4065c0:	icebp  
  4065c1:	mov    edi,0xd8d648d7
  4065c6:	cmc    
  4065c7:	daa    
  4065c8:	cmp    eax,0xe8c1df3b
  4065cd:	fld    QWORD PTR [ebx-0x63555948]
  4065d3:	lea    ebp,[edx+0x37]
  4065d6:	xor    esi,esp
  4065d8:	pop    ds
  4065d9:	xor    BYTE PTR [ebx+0x49],ah
  4065dc:	adc    al,0xc2
  4065de:	aad    0x4b
  4065e0:	test   DWORD PTR [ebp-0x23],eax
  4065e3:	shl    DWORD PTR [ecx],1
  4065e5:	in     eax,dx
  4065e6:	xor    BYTE PTR [edi+edx*2+0x18adc306],0xe
  4065ee:	dec    esp
  4065ef:	shr    edx,0x1e
  4065f2:	js     0x406648
  4065f4:	xor    al,0x12
  4065f6:	adc    eax,0xa0ba976f
  4065fb:	ret    
  4065fc:	ficomp DWORD PTR [edi+0x6a6b8018]
  406602:	test   eax,0x38e571f4
  406607:	sub    al,0xaf
  406609:	inc    ecx
  40660a:	cmp    eax,0xe5903fb2
  40660f:	inc    ebx
  406610:	imul   esp,DWORD PTR [ecx-0x34],0xffffffa2
  406614:	lods   al,BYTE PTR ds:[esi]
  406615:	mov    ds:0xe24744ae,al
  40661a:	mov    cl,0xc8
  40661c:	sub    eax,0xcb3a57da
  406621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406622:	in     eax,dx
  406623:	push   edx
  406624:	mov    al,0xbf
  406626:	test   al,0x74
  406628:	xchg   ebx,eax
  406629:	mov    eax,0x3f1e4b41
  40662e:	sbb    cl,bl
  406630:	ja     0x4065c4
  406632:	xchg   edi,eax
  406633:	jnp    0x4065fa
  406635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406636:	arpl   dx,si
  406638:	call   0x8fc9:0x9828eb82
  40663f:	or     esp,eax
  406641:	lahf   
  406642:	push   edi
  406643:	in     al,dx
  406644:	push   ss
  406645:	xor    bh,bl
  406647:	sbb    DWORD PTR [ebx-0x58],edi
  40664a:	cmp    eax,eax
  40664c:	std    
  40664d:	in     eax,0x78
  40664f:	in     al,dx
  406650:	mov    eax,ds:0xf2ae2f35
  406655:	cmc    
  406656:	pusha  
  406657:	add    DWORD PTR ds:0x8f491357,edx
  40665d:	ret    
  40665e:	inc    esp
  40665f:	mov    ah,0xc7
  406661:	cdq    
  406662:	out    0xeb,al
  406664:	add    al,0x13
  406666:	in     eax,0x54
  406668:	enter  0x5ea8,0xa1
  40666c:	jmp    0xc9df0a4c
  406671:	jge    0x406631
  406673:	out    0xe6,eax
  406675:	dec    edx
  406676:	xchg   ebx,eax
  406677:	push   eax
  406678:	mov    eax,ds:0x2b47782f
  40667d:	enter  0xf6ae,0x2d
  406681:	aad    0xc8
  406683:	pop    esi
  406684:	and    eax,eax
  406686:	repz mov dl,0xd2
  406689:	pop    ds
  40668a:	dec    ecx
  40668b:	and    eax,0xc6012ff3
  406690:	and    DWORD PTR [esi+0x7130138],esi
  406696:	cli    
  406697:	adc    al,0xe0
  406699:	xchg   esi,eax
  40669a:	xor    bl,cl
  40669c:	ins    BYTE PTR es:[edi],dx
  40669d:	jne    0x4066f6
  40669f:	test   eax,esi
  4066a1:	pushf  
  4066a2:	and    eax,DWORD PTR [edi]
  4066a4:	jl     0x4066f3
  4066a6:	dec    ebx
  4066a7:	loop   0x40671b
  4066a9:	and    al,0x7a
  4066ab:	fisubr WORD PTR [eax-0x4]
  4066ae:	sbb    eax,0xb126534c
  4066b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b4:	js     0x406732
  4066b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b7:	cmp    ch,BYTE PTR [edi]
  4066b9:	imul   esi,eax,0xa05b32fa
  4066bf:	aaa    
  4066c0:	repnz mov DWORD PTR ds:0x344fff14,ebp
  4066c7:	int    0xbb
  4066c9:	loop   0x4066fc
  4066cb:	dec    edi
  4066cc:	jge    0x40674a
  4066ce:	jne    0x40674a
  4066d0:	int    0x44
  4066d2:	ret    
  4066d3:	jmp    0x5b21:0x1fc4296b
  4066da:	ret    0xcf6b
  4066dd:	sbb    al,0x40
  4066df:	inc    edx
  4066e0:	sub    edi,DWORD PTR [ebp-0x2f]
  4066e3:	dec    esi
  4066e4:	mov    al,ds:0x3ac0c6ec
  4066e9:	jecxz  0x4066ae
  4066eb:	or     ah,BYTE PTR [ebp+0x67ccc13a]
  4066f1:	push   edx
  4066f2:	popf   
  4066f3:	aaa    
  4066f4:	and    eax,0xe3046313
  4066f9:	add    DWORD PTR [eax+0x4d],ebx
  4066fc:	arpl   WORD PTR cs:[esi+0x2db15f52],sp
  406703:	ds cs gs stos DWORD PTR es:[edi],eax
  406707:	push   esi
  406708:	inc    esi
  406709:	imul   esp,DWORD PTR [ebp-0x34660e51],0x2b714d3
  406713:	mov    ds:0xb9eb4870,al
  406718:	inc    edx
  406719:	and    al,al
  40671b:	and    BYTE PTR [ebx],0xae
  40671e:	gs test al,0x92
  406721:	mov    ch,0x76
  406723:	jg     0x4066bb
  406725:	dec    ebp
  406726:	clc    
  406727:	cmp    dl,BYTE PTR [ebx-0x474578d]
  40672d:	adc    BYTE PTR [edi+0x49],bl
  406730:	xchg   edi,eax
  406731:	mov    esp,fs
  406733:	cli    
  406734:	cmp    DWORD PTR [edx],esi
  406736:	mov    ch,0xfe
  406738:	cdq    
  406739:	mov    ebp,0x77392105
  40673e:	pop    eax
  40673f:	dec    ebp
  406740:	adc    al,0xc1
  406742:	aam    0x5b
  406744:	inc    edx
  406745:	(bad)  
  406746:	sbb    DWORD PTR [ecx+edi*8+0x22ffe1d0],edi
  40674d:	pop    esi
  40674e:	outs   dx,DWORD PTR ds:[esi]
  40674f:	xchg   ebx,eax
  406750:	dec    ebp
  406751:	nop
  406752:	pop    ebp
  406753:	xchg   edi,eax
  406754:	les    esi,FWORD PTR [ebx-0x5b]
  406757:	lods   eax,DWORD PTR ds:[esi]
  406758:	mov    ds:0x5cba84c0,al
  40675d:	dec    di
  40675f:	xchg   edx,eax
  406760:	add    eax,0x371031d6
  406765:	icebp  
  406766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406767:	lea    ebp,[edx]
  406769:	xchg   DWORD PTR [edx+eiz*1-0x52],esi
  40676d:	jmp    0xa563:0x48d79913
  406774:	xchg   BYTE PTR [esi],ah
  406776:	(bad)  
  406777:	call   0x9d9f65c6
  40677c:	inc    esi
  40677d:	cs repnz fdiv st,st(5)
  406781:	popf   
  406782:	(bad)  
  406783:	out    dx,eax
  406784:	fidivr DWORD PTR [edx-0x45]
  406787:	test   DWORD PTR [eax-0x4e076b13],ecx
  40678d:	ror    BYTE PTR [esi+edx*2],0x16
  406791:	xchg   ecx,eax
  406792:	add    DWORD PTR [edi],ecx
  406794:	sti    
  406795:	push   ebx
  406796:	lock mov fs,WORD PTR [edx+0x77]
  40679a:	enter  0x57c9,0x27
  40679e:	loope  0x40674d
  4067a0:	ss jg  0x406809
  4067a3:	dec    esp
  4067a4:	stos   DWORD PTR es:[edi],eax
  4067a5:	jmp    0x3ddf132d
  4067aa:	sti    
  4067ab:	dec    edi
  4067ac:	cli    
  4067ad:	ret    
  4067ae:	stos   DWORD PTR es:[edi],eax
  4067af:	push   ds
  4067b0:	push   cs
  4067b1:	js     0x4067f1
  4067b3:	fwait
  4067b4:	mul    DWORD PTR [eax+ecx*8]
  4067b7:	dec    esi
  4067b8:	push   esi
  4067b9:	adc    dh,BYTE PTR [ebp+0x1e]
  4067bc:	leave  
  4067bd:	push   ss
  4067be:	or     al,0x42
  4067c0:	pop    ebx
  4067c1:	fcomi  st,st(0)
  4067c3:	mov    edx,0xd3d9c730
  4067c8:	lea    eax,[ecx-0x18]
  4067cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067cc:	inc    esi
  4067cd:	lock pop ecx
  4067cf:	daa    
  4067d0:	jmp    0x40682d
  4067d2:	adc    DWORD PTR [edx+eiz*4+0x32],edi
  4067d6:	inc    esi
  4067d7:	jmp    0x51c2:0xc02101f2
  4067de:	and    al,0xb2
  4067e1:	nop
  4067e2:	in     eax,dx
  4067e3:	arpl   WORD PTR [esi+0x5],ax
  4067e6:	mov    edx,0x879e0b21
  4067eb:	scas   eax,DWORD PTR es:[edi]
  4067ec:	out    0x5e,eax
  4067ee:	sar    BYTE PTR [ebx],cl
  4067f0:	sub    eax,0x66784925
  4067f5:	ror    DWORD PTR [ebp-0x4],1
  4067f8:	in     eax,0x68
  4067fa:	push   edi
  4067fb:	pop    ss
  4067fc:	out    dx,eax
  4067fd:	bound  edi,QWORD PTR [edi]
  4067ff:	xchg   ebp,ecx
  406801:	data16 rcr BYTE PTR [edx],1
  406804:	jns    0x4067e0
  406806:	or     eax,0xb77eae2e
  40680b:	add    dh,BYTE PTR [edi+ecx*2]
  40680e:	ins    BYTE PTR es:[edi],dx
  40680f:	mov    ebx,0x441ac71
  406814:	and    BYTE PTR [esi+eax*8+0x57],ah
  406818:	addr16 out dx,eax
  40681a:	jge    0x4067a5
  40681c:	sbb    DWORD PTR [esi+ecx*1+0x20789ff0],esp
  406823:	jae    0x4067a5
  406825:	mov    ah,0xe9
  406827:	adc    DWORD PTR [esi-0x74],ebp
  40682a:	push   ebp
  40682b:	out    0xa1,al
  40682d:	inc    ebp
  40682e:	test   al,0x56
  406830:	mov    eax,0xe3bf4d47
  406835:	dec    ebp
  406836:	push   0x8877a565
  40683b:	inc    esp
  40683c:	ins    DWORD PTR es:[edi],dx
  40683d:	repz mov eax,ds:0x744e251c
  406843:	pop    ss
  406844:	inc    esi
  406845:	iret   
  406846:	adc    ebx,DWORD PTR es:[edi+0x17]
  40684a:	xchg   esp,eax
  40684b:	adc    BYTE PTR [edi+0x1f],0x10
  40684f:	rol    esi,0x6f
  406852:	push   ebp
  406853:	lock dec esi
  406855:	js     0x406810
  406857:	xchg   ebp,eax
  406858:	cmp    BYTE PTR [ecx],bh
  40685a:	adc    BYTE PTR [edi-0x16],al
  40685d:	or     eax,0x7ec92902
  406862:	sub    DWORD PTR [edx-0x11],esi
  406865:	inc    ebp
  406866:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406867:	sbb    BYTE PTR [esi+esi*2],ch
  40686a:	int3   
  40686b:	dec    edx
  40686c:	inc    edx
  40686d:	mov    ecx,0xc794659a
  406872:	mov    ebx,DWORD PTR [edi+0x23]
  406875:	fdivr  DWORD PTR [ecx+0x1f]
  406878:	dec    edi
  406879:	scas   eax,DWORD PTR es:[edi]
  40687a:	dec    edi
  40687b:	jne    0x4068fb
  40687d:	push   cs
  40687e:	xlat   BYTE PTR ds:[ebx]
  40687f:	es mov cl,0xff
  406882:	sbb    al,bl
  406884:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406885:	cmp    eax,0x65f8b37d
  40688a:	loope  0x4068f8
  40688c:	adc    eax,0xd96e14da
  406891:	jp     0x4068d0
  406893:	pop    esp
  406894:	sbb    DWORD PTR [esi+0x20],eax
  406897:	push   ecx
  406898:	aam    0x12
  40689a:	or     DWORD PTR ds:0x356ceb83,eax
  4068a0:	inc    ecx
  4068a1:	repnz xor ebx,DWORD PTR ss:[eax+0xf7f60c4]
  4068a9:	fisttp WORD PTR [ebp+eax*1+0x5b]
  4068ad:	cwde   
  4068ae:	rcr    BYTE PTR [ecx],cl
  4068b0:	hlt    
  4068b1:	(bad)  
  4068b2:	cdq    
  4068b3:	sub    esi,esp
  4068b5:	sub    bl,BYTE PTR [eax]
  4068b7:	xchg   ebp,eax
  4068b8:	int    0xfc
  4068ba:	sbb    ah,bl
  4068bc:	enter  0x5225,0xf8
  4068c0:	cmp    dl,BYTE PTR [ebx]
  4068c2:	outs   dx,BYTE PTR ds:[esi]
  4068c3:	xor    al,0x89
  4068c5:	mov    ds:0x2fee8b28,eax
  4068ca:	addr16 mov al,ds:0x41df
  4068ce:	sub    BYTE PTR [ebx-0x22052da7],dh
  4068d4:	in     al,dx
  4068d5:	mov    edi,0xd2c41a3d
  4068da:	iret   
  4068db:	push   ds
  4068dc:	shl    bl,0x9b
  4068df:	add    BYTE PTR [edi],0xa9
  4068e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068e3:	and    BYTE PTR [eax+edi*2],bh
  4068e6:	push   ebp
  4068e7:	shl    DWORD PTR [eax],0x21
  4068ea:	call   0x7c70:0xaa0162da
  4068f1:	mov    BYTE PTR [esi+edx*8],ah
  4068f4:	aad    0x19
  4068f6:	das    
  4068f7:	ss addr16 jnp 0x4068b6
  4068fb:	fdiv   QWORD PTR [edx-0x290c27d9]
  406901:	pop    esp
  406902:	(bad)  
  406903:	aas    
  406904:	push   0x6ffd5e3a
  406909:	imul   edx,DWORD PTR [esi+0x63fcf9b7],0xffffffa5
  406910:	dec    eax
  406911:	nop
  406912:	jne    0x40694e
  406914:	dec    esp
  406915:	jbe    0x40694e
  406917:	inc    edi
  406918:	mov    dl,0xb5
  40691a:	jo     0x4068a9
  40691c:	mov    al,0xf0
  40691e:	nop
  40691f:	cmp    DWORD PTR [ecx-0x56],ebp
  406922:	int    0x85
  406924:	mov    eax,ds:0x368d4420
  406929:	call   0x81783aac
  40692e:	call   FWORD PTR [edi]
  406930:	sub    eax,0x3bda1cc4
  406935:	mov    dl,0x26
  406937:	mov    edx,0x59b0e3e6
  40693c:	and    DWORD PTR [edx-0x7d],ebx
  40693f:	pop    esp
  406940:	inc    edx
  406941:	cdq    
  406942:	loope  0x4068d3
  406944:	cld    
  406945:	add    eax,0x4be61c56
  40694a:	xor    al,0xf7
  40694c:	mov    ch,0xe6
  40694e:	cmp    eax,0xd37ce017
  406953:	pop    ebp
  406954:	or     al,0x97
  406956:	jne    0x4069d0
  406958:	lock out dx,eax
  40695a:	popa   
  40695b:	push   es
  40695c:	loop   0x406905
  40695e:	push   edx
  40695f:	loopne 0x406907
  406961:	sbb    eax,0xa7634890
  406966:	icebp  
  406967:	mov    ds:0xfebda90b,eax
  40696c:	push   ss
  40696d:	test   eax,0xd7dc56ae
  406972:	jge    0x406987
  406974:	xor    BYTE PTR [ecx-0x26aefc34],ah
  40697a:	xchg   BYTE PTR [edx+0x2b],ah
  40697d:	loopne 0x406904
  40697f:	test   DWORD PTR [edi+0x4a],0x2e6ee202
  406986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406987:	or     al,0xc1
  406989:	(bad)  
  40698a:	and    edx,DWORD PTR [ecx+0x396305db]
  406990:	add    DWORD PTR [edx-0x199c5cc],ebp
  406996:	jge    0x406a00
  406998:	test   DWORD PTR [ebx],esi
  40699a:	sub    bl,dl
  40699c:	mov    al,0xd8
  40699e:	xor    eax,0xea25f454
  4069a3:	sub    eax,0xdb91803
  4069a8:	and    al,0x5f
  4069aa:	xor    eax,0xb78ddf28
  4069af:	cli    
  4069b0:	sbb    al,0x73
  4069b2:	fidiv  DWORD PTR [edi+0x46]
  4069b5:	and    BYTE PTR [ebp-0x3be298ff],bh
  4069bb:	mov    al,ds:0x3b61819a
  4069c0:	pop    es
  4069c1:	pusha  
  4069c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069c3:	cdq    
  4069c4:	sahf   
  4069c5:	mov    bl,0x8d
  4069c7:	xor    edx,DWORD PTR ds:0xa09dfb1c
  4069cd:	mov    WORD PTR [edi+0x400ff60c],ds
  4069d3:	and    edi,DWORD PTR [eax-0x30]
  4069d6:	(bad)  
  4069d7:	mov    edx,0x831244dc
  4069dc:	xor    BYTE PTR [edx+0x3],dh
  4069df:	xchg   ebx,eax
  4069e0:	cdq    
  4069e1:	scas   al,BYTE PTR es:[edi]
  4069e2:	stos   BYTE PTR es:[edi],al
  4069e3:	or     ah,ah
  4069e5:	fcomp  DWORD PTR [eax-0x68]
  4069e8:	imul   edi,DWORD PTR [esi+0x39951ab8],0x7
  4069ef:	clc    
  4069f0:	sbb    esp,DWORD PTR [ecx+ecx*8-0x6f]
  4069f4:	cld    
  4069f5:	retf   0x54fa
  4069f8:	lock jns 0x406a10
  4069fb:	stc    
  4069fc:	repnz aad 0x28
  4069ff:	sub    BYTE PTR [eax],ah
  406a01:	aam    0x11
  406a03:	(bad)  
  406a04:	xor    BYTE PTR ds:0x4ab37cb2,cl
  406a0a:	adc    eax,0x4b4bb2c6
  406a0f:	das    
  406a10:	fst    DWORD PTR [edi]
  406a12:	cmp    ah,cl
  406a14:	cmc    
  406a15:	scas   al,BYTE PTR es:[edi]
  406a16:	push   esp
  406a17:	or     al,BYTE PTR [esi]
  406a19:	mov    ecx,0x7ae58437
  406a1e:	mov    ds:0x38833163,eax
  406a23:	or     eax,ebx
  406a25:	mov    eax,ds:0xe90e0c35
  406a2a:	jecxz  0x406a83
  406a2c:	or     dh,ch
  406a2e:	adc    DWORD PTR [ebx],edx
  406a30:	xlat   BYTE PTR ds:[ebx]
  406a31:	push   esi
  406a32:	je     0x406a18
  406a34:	mov    dh,BYTE PTR [ebp-0x7d271e8a]
  406a3a:	es nop
  406a3c:	and    DWORD PTR [ebp+eiz*1+0x29ce92c6],ebp
  406a43:	push   ebp
  406a44:	dec    esi
  406a45:	push   eax
  406a46:	ss dec edx
  406a48:	sub    ebx,ebx
  406a4a:	pusha  
  406a4b:	out    dx,eax
  406a4c:	cmp    dl,ch
  406a4e:	and    edi,DWORD PTR [edx]
  406a50:	inc    ecx
  406a51:	push   edi
  406a52:	dec    eax
  406a53:	test   al,0x22
  406a55:	mov    edx,0xd041875d
  406a5b:	gs pop edx
  406a5d:	out    dx,eax
  406a5e:	or     ebp,DWORD PTR [edi-0x66]
  406a61:	xchg   esi,esi
  406a63:	jbe    0x406a1e
  406a65:	inc    edi
  406a66:	out    0xcf,al
  406a68:	mov    cl,BYTE PTR [eax-0x7d]
  406a6b:	int3   
  406a6c:	nop    DWORD PTR [esi]
  406a6f:	or     al,0xaa
  406a71:	or     eax,esp
  406a73:	ds into 
  406a75:	pop    ss
  406a76:	icebp  
  406a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a78:	mov    ah,BYTE PTR [edx+0x3]
  406a7b:	out    dx,al
  406a7c:	cdq    
  406a7d:	(bad)  [ebx-0x7b7adbb1]
  406a83:	int    0xe3
  406a85:	pop    ebp
  406a86:	push   esi
  406a87:	ss xchg esp,eax
  406a89:	das    
  406a8a:	jecxz  0x406a92
  406a8c:	jmp    0xc19b:0xd16d48db
  406a93:	lock or BYTE PTR [edi-0x48],0x63
  406a98:	or     DWORD PTR [ecx+ecx*8],0x2356000a
  406a9f:	cmp    eax,0x3a1835a9
  406aa4:	ja     0x406aa0
  406aa6:	fsubr  QWORD PTR [esi]
  406aa8:	fistp  DWORD PTR [esi-0x1899530b]
  406aae:	pop    edi
  406aaf:	div    DWORD PTR [esi-0xeca2a8e]
  406ab5:	jbe    0x406afa
  406ab7:	add    ebx,esi
  406ab9:	inc    ecx
  406aba:	sub    al,0xe5
  406abc:	cmp    cl,cl
  406abe:	dec    esi
  406abf:	inc    eax
  406ac0:	xor    DWORD PTR [edx],edx
  406ac2:	sbb    al,0x85
  406ac4:	mov    edx,0x1d52e72
  406ac9:	add    ah,dl
  406acb:	adc    eax,0x839b3d82
  406ad0:	adc    eax,DWORD PTR [edx+0x47bdc0d3]
  406ad6:	adc    BYTE PTR [ecx-0x5fef7dbf],ah
  406adc:	lods   al,BYTE PTR ds:[esi]
  406add:	ins    BYTE PTR es:[edi],dx
  406ade:	vpcmpgtb ymm5,ymm4,YMMWORD PTR [esi-0x71]
  406ae3:	push   ds
  406ae4:	and    eax,DWORD PTR [esi+0x79]
  406ae7:	daa    
  406ae8:	into   
  406ae9:	or     BYTE PTR [edi-0x5f31a5fc],dl
  406aef:	mov    ebp,0x3a1a955
  406af4:	push   es
  406af5:	mov    al,0xd9
  406af7:	pop    ecx
  406af8:	nop
  406af9:	hlt    
  406afa:	sahf   
  406afb:	adc    ebp,ecx
  406afd:	inc    ebp
  406afe:	jg     0x406b40
  406b00:	cmc    
  406b01:	xor    BYTE PTR [ecx-0x5329e1fc],ch
  406b07:	mov    ebp,0xfb1b864f
  406b0c:	cmp    DWORD PTR [ecx-0x75f221f3],edx
  406b12:	jne    0x406af4
  406b14:	scas   eax,DWORD PTR es:[edi]
  406b15:	imul   edi,DWORD PTR [edi-0x3f76961],0x74
  406b1c:	jae    0x406b28
  406b1e:	cli    
  406b1f:	sbb    DWORD PTR [edx+0x3],ebx
  406b22:	mov    al,0x60
  406b24:	pop    ss
  406b25:	sub    eax,0x2659f79c
  406b2a:	test   BYTE PTR [edi+ecx*2+0x2c],0x8d
  406b2f:	jmp    0x7f2f:0x426e6ac3
  406b36:	pop    esp
  406b37:	add    BYTE PTR [edi],ch
  406b39:	pop    esp
  406b3a:	jnp    0x406ae7
  406b3c:	clc    
  406b3d:	(bad)  
  406b3e:	dec    ebp
  406b3f:	sbb    ebx,DWORD PTR ds:0xa18a669e
  406b45:	mov    bl,0x27
  406b47:	xchg   edi,eax
  406b48:	shl    DWORD PTR [eax],cl
  406b4a:	lock jo 0x406b11
  406b4d:	test   al,0x5f
  406b4f:	pop    es
  406b50:	jns    0x406b7f
  406b52:	adc    eax,0x5fee9edf
  406b57:	add    eax,0xf0604a57
  406b5c:	pop    esp
  406b5d:	aas    
  406b5e:	xor    ah,ah
  406b60:	mov    WORD PTR [ebp+0x3ad2fd35],cs
  406b66:	xchg   edx,eax
  406b67:	jb     0x406b26
  406b69:	push   ss
  406b6a:	mov    WORD PTR [eax+0x3444c22d],?
  406b70:	fisttp WORD PTR [esi+0x78b98c3e]
  406b76:	cmc    
  406b77:	(bad)  
  406b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b79:	icebp  
  406b7a:	push   0x32
  406b7c:	sbb    ecx,DWORD PTR [ebp+0x6858d03e]
  406b82:	aas    
  406b83:	or     eax,0xd19fae00
  406b88:	sub    BYTE PTR [ecx+0x7ff0e646],al
  406b8e:	pushf  
  406b8f:	add    eax,0xefd7258
  406b94:	or     BYTE PTR fs:[ecx],0x88
  406b98:	add    ch,dh
  406b9a:	sbb    DWORD PTR [edi],0xf82c49b5
  406ba0:	xchg   esp,eax
  406ba1:	repz pusha 
  406ba3:	dec    esi
  406ba4:	xor    eax,0xb0fffe4d
  406ba9:	push   eax
  406baa:	sbb    al,0x9f
  406bac:	add    eax,0x4f23cc53
  406bb1:	jg     0x406b9f
  406bb3:	sbb    BYTE PTR [edx-0x21],dl
  406bb6:	push   cs
  406bb7:	fsubr  DWORD PTR [ebx-0x4b94c3ef]
  406bbd:	arpl   WORD PTR [esi-0x3ffb92b9],di
  406bc3:	xor    BYTE PTR [eax+0x1322e0c2],al
  406bc9:	jl     0x406bb5
  406bcb:	xchg   BYTE PTR [eax+0x401268],bl
  406bd1:	xor    DWORD PTR [ebx],ebx
  406bd3:	sbb    ch,ch
  406bd5:	dec    ebp
  406bd6:	les    ebx,FWORD PTR [esp+ebx*8-0x4b]
  406bda:	(bad)  
  406bdb:	inc    ecx
  406bdc:	push   eax
  406bdd:	dec    ebp
  406bde:	adc    al,0x68
  406be0:	outs   dx,DWORD PTR ds:[esi]
  406be1:	sub    ecx,DWORD PTR [eax+0x34]
  406be4:	mov    ebx,0x34430216
  406be9:	mov    bl,dh
  406beb:	frstpm(287 only) 
  406bed:	ss inc esp
  406bef:	or     eax,0xcd96677d
  406bf4:	call   0x5ea7:0x57249b08
  406bfb:	loope  0x406c30
  406bfd:	dec    esp
  406bfe:	sbb    al,0x3f
  406c00:	in     al,0x78
  406c02:	xor    DWORD PTR [edx+ebx*1],0x31
  406c06:	inc    ebp
  406c07:	mov    ?,ebp
  406c09:	cld    
  406c0a:	(bad)  
  406c0c:	add    ch,BYTE PTR [eax]
  406c0e:	stos   BYTE PTR es:[edi],al
  406c0f:	mov    ecx,0x985c9a28
  406c14:	or     eax,0x72f8999c
  406c19:	mul    BYTE PTR [esp+ecx*1]
  406c1c:	in     al,0xcd
  406c1e:	cmp    al,0xf2
  406c20:	cmp    BYTE PTR [eax-0x27],bl
  406c23:	out    0x2a,eax
  406c25:	inc    esp
  406c26:	inc    ebx
  406c27:	push   ss
  406c28:	call   0xfc0f:0x902a647e
  406c2f:	fnstcw WORD PTR [edx]
  406c31:	stc    
  406c32:	inc    ecx
  406c33:	dec    esi
  406c34:	hlt    
  406c35:	in     eax,dx
  406c36:	xlat   BYTE PTR gs:[ebx]
  406c38:	add    bh,BYTE PTR [ebp+0x2dddfcd]
  406c3e:	xor    BYTE PTR fs:[ecx],bh
  406c41:	inc    edx
  406c42:	xor    DWORD PTR [ecx-0xd],esi
  406c45:	imul   ecx,ebx,0x1b
  406c48:	cmp    eax,DWORD PTR [edx-0x55]
  406c4b:	lods   eax,DWORD PTR ds:[esi]
  406c4c:	jne    0x406c40
  406c4e:	cs adc eax,0xa92123db
  406c54:	repnz cmp eax,0x21fe3acd
  406c5a:	or     esi,esi
  406c5c:	das    
  406c5d:	push   ecx
  406c5e:	mov    ebx,DWORD PTR [eax+0x641a01d3]
  406c64:	mov    bh,0x4
  406c66:	push   edx
  406c67:	push   ebx
  406c68:	pop    ecx
  406c69:	(bad)  
  406c6a:	ja     0x406c11
  406c6c:	inc    edi
  406c6d:	mov    eax,0xf453ddd5
  406c72:	jo     0x406cb9
  406c74:	xor    eax,0xbe2dd1f5
  406c79:	xor    ch,BYTE PTR [ecx]
  406c7b:	mov    eax,0x794f9053
  406c80:	(bad)  
  406c81:	cmp    al,0x55
  406c83:	push   eax
  406c84:	fdivr  st(0),st
  406c86:	call   0x93d:0x7320deda
  406c8d:	test   BYTE PTR [edx-0x2b],ah
  406c90:	inc    esi
  406c91:	fdiv   DWORD PTR [ebp-0x10]
  406c94:	mov    al,ds:0x3bfc1bcf
  406c99:	dec    esp
  406c9a:	in     al,dx
  406c9b:	add    cl,ah
  406c9d:	push   esp
  406c9e:	cwde   
  406c9f:	ret    
  406ca0:	daa    
  406ca1:	jmp    DWORD PTR [edi]
  406ca3:	icebp  
  406ca4:	jmp    0xb88ccd3d
  406ca9:	jge    0x406d10
  406cab:	dec    edx
  406cac:	(bad)  
  406cad:	cmp    eax,0x4c796faa
  406cb2:	mov    ds:0xd3789e9d,al
  406cb7:	and    bl,BYTE PTR [eax]
  406cb9:	add    eax,0xb13dee1
  406cbe:	or     ch,BYTE PTR [edi+esi*1]
  406cc1:	shl    esp,1
  406cc3:	fldcw  WORD PTR [ecx-0xda17ada]
  406cc9:	inc    ebp
  406cca:	out    dx,al
  406ccb:	ds jle 0x406c98
  406cce:	dec    ebp
  406ccf:	sub    DWORD PTR [ebp-0x451af64c],esp
  406cd5:	loopne 0x406c76
  406cd7:	push   ebp
  406cd8:	or     edx,ebp
  406cda:	or     al,0x5c
  406cdc:	pop    ss
  406cdd:	lock adc edi,DWORD PTR [ecx-0x4fdd473a]
  406ce4:	ficom  DWORD PTR [esi-0x6719a150]
  406cea:	pop    edx
  406ceb:	mov    ds:0xcf266083,al
  406cf0:	dec    ebx
  406cf1:	pop    ds
  406cf2:	and    DWORD PTR [edi],ebx
  406cf4:	cmp    cl,BYTE PTR [esi]
  406cf6:	jae    0x406d44
  406cf8:	xchg   esi,eax
  406cf9:	xor    ebp,ecx
  406cfb:	loop   0x406cfb
  406cfd:	sbb    dl,BYTE PTR [ebp+0x16]
  406d00:	dec    edi
  406d01:	cdq    
  406d02:	test   DWORD PTR [edx+0x5a],esi
  406d05:	push   esp
  406d06:	nop
  406d07:	jbe    0x406d3f
  406d09:	std    
  406d0a:	or     eax,0x3855f523
  406d0f:	fs lahf 
  406d11:	cli    
  406d12:	adc    bl,BYTE PTR [edi+0x3e]
  406d15:	lods   al,BYTE PTR ds:[esi]
  406d16:	xor    al,cl
  406d18:	cli    
  406d19:	sub    ebp,DWORD PTR [ecx]
  406d1b:	shrd   DWORD PTR [ebx],esi,cl
  406d1e:	nop
  406d1f:	lods   eax,DWORD PTR ds:[esi]
  406d20:	jmp    0xb5dc:0xaa98e2b3
  406d27:	lea    ecx,[ecx]
  406d29:	test   eax,0xcef4eb90
  406d2e:	sub    al,0x21
  406d30:	dec    edi
  406d31:	leave  
  406d32:	sbb    dl,BYTE PTR [ecx+0x5f73cca9]
  406d38:	scas   al,BYTE PTR es:[edi]
  406d39:	cmp    ebp,ebx
  406d3b:	add    BYTE PTR [esp+edx*2+0x3c6b7c8c],ah
  406d42:	mov    ebp,0x4155c0d1
  406d47:	int    0x33
  406d49:	addr16 (bad) 
  406d4b:	hlt    
  406d4c:	dec    eax
  406d4d:	loope  0x406ce4
  406d4f:	repz dec edx
  406d51:	addr16 cwde 
  406d53:	xchg   ebp,eax
  406d54:	sbb    DWORD PTR ds:[edx-0x42],0x3dd39436
  406d5c:	and    edi,DWORD PTR [ecx+0x30]
  406d5f:	jae    0x406d74
  406d61:	cmp    BYTE PTR [ecx-0x2a4c60d5],0xca
  406d68:	push   ss
  406d69:	pop    esp
  406d6a:	pop    eax
  406d6b:	cmp    DWORD PTR ds:0x6a2931e4,esp
  406d71:	fst    QWORD PTR [edx+0x734c005b]
  406d77:	xor    DWORD PTR [ebx],0x74
  406d7a:	pop    ss
  406d7b:	repnz ins BYTE PTR es:[edi],dx
  406d7d:	push   0x4f118a9d
  406d82:	hlt    
  406d83:	add    ecx,eax
  406d85:	shrd   DWORD PTR [ebp-0x209609e5],esi,cl
  406d8c:	call   0x8d64:0xdd57c379
  406d93:	dec    ebx
  406d94:	or     dl,BYTE PTR [esi-0x13428107]
  406d9a:	(bad)  
  406d9b:	adc    esi,eax
  406d9d:	pop    ebx
  406d9e:	in     al,dx
  406d9f:	stos   DWORD PTR es:[edi],eax
  406da0:	xor    al,0x8f
  406da2:	shl    DWORD PTR ds:0x75d12bef,0xbe
  406da9:	jmp    0x4455:0xc1c9fdb
  406db0:	fcom   DWORD PTR [eax+0x74]
  406db3:	sahf   
  406db4:	push   edi
  406db5:	fwait
  406db6:	inc    esp
  406db7:	mov    ch,0x43
  406db9:	popf   
  406dba:	mov    bh,0x5f
  406dbc:	scas   al,BYTE PTR es:[edi]
  406dbd:	push   0x477b236e
  406dc2:	push   ebx
  406dc3:	gs push ebp
  406dc5:	mov    esp,0xf33c8b0
  406dca:	add    BYTE PTR [edx+ebx*1],0x57
  406dce:	adc    eax,0xeb76878c
  406dd3:	or     al,0x79
  406dd5:	data16 cmc 
  406dd7:	je     0x406ddc
  406dd9:	and    al,0xf1
  406ddb:	pop    ds
  406ddc:	ficom  WORD PTR [ebx]
  406dde:	dec    esp
  406ddf:	retf   
  406de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406de1:	das    
  406de2:	jmp    0x406d70
  406de4:	jl     0x406da3
  406de6:	js     0x406dcc
  406de8:	daa    
  406de9:	daa    
  406dea:	ins    BYTE PTR es:[edi],dx
  406deb:	mov    DWORD PTR [edx-0x6d543105],esi
  406df1:	push   esp
  406df2:	sub    DWORD PTR [eax-0x5a91d09b],0x4b
  406df9:	clc    
  406dfa:	mov    bh,0xb5
  406dfc:	aas    
  406dfd:	fwait
  406dfe:	adc    al,0x10
  406e00:	mov    esi,0xd11f7b99
  406e05:	jo     0x406e59
  406e07:	fistp  DWORD PTR [ebx+ebx*8]
  406e0a:	mov    al,ds:0x34d9b8d9
  406e0f:	mov    dl,0xd7
  406e11:	loopne 0x406e31
  406e13:	jb     0x406e43
  406e15:	xchg   esp,eax
  406e16:	scas   eax,DWORD PTR es:[edi]
  406e17:	ins    BYTE PTR es:[edi],dx
  406e18:	popa   
  406e19:	fs push ecx
  406e1b:	jmp    0xcd61bd6a
  406e20:	jecxz  0x406dc3
  406e22:	add    bh,bh
  406e24:	imul   eax,DWORD PTR ds:0x2b5e9afe,0xffffff83
  406e2b:	fisttp QWORD PTR ds:0x8915c11c
  406e31:	loopne 0x406e00
  406e33:	pop    esp
  406e34:	nop
  406e35:	inc    ebp
  406e36:	call   0x2b08a2a9
  406e3b:	pop    ds
  406e3c:	pop    esp
  406e3d:	push   edi
  406e3e:	jb     0x406e8e
  406e40:	imul   ebx,DWORD PTR [ebx-0x6835f809],0xffffffe6
  406e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e48:	or     eax,0x6ad2e506
  406e4d:	sbb    esp,DWORD PTR [ebp-0x627d8d2c]
  406e53:	push   eax
  406e54:	stos   DWORD PTR es:[edi],eax
  406e55:	mov    DWORD PTR [ebx],eax
  406e57:	dec    edi
  406e58:	xor    ch,cl
  406e5a:	mov    esi,0x7c267386
  406e5f:	lea    edi,[eax+eiz*2]
  406e62:	fs iret 
  406e64:	xor    esp,DWORD PTR [edi]
  406e66:	outs   dx,BYTE PTR ds:[esi]
  406e67:	pop    es
  406e68:	pop    ds
  406e69:	shl    BYTE PTR [esi-0x3e],cl
  406e6c:	cmp    dh,BYTE PTR [esi]
  406e6e:	sub    DWORD PTR [ebx],edi
  406e70:	stos   DWORD PTR es:[edi],eax
  406e71:	push   esi
  406e72:	xchg   ebp,eax
  406e73:	sbb    al,0xc8
  406e75:	je     0x406e87
  406e77:	sti    
  406e78:	inc    esp
  406e79:	leave  
  406e7a:	rep lods eax,DWORD PTR ds:[esi]
  406e7c:	and    al,0x2d
  406e7e:	push   cs
  406e7f:	les    ebp,FWORD PTR [edx-0x23ab1a7a]
  406e85:	aaa    
  406e86:	sbb    al,BYTE PTR [edx+0x14]
  406e89:	sbb    cl,BYTE PTR [ebx]
  406e8b:	gs fcmovne st,st(4)
  406e8e:	or     al,BYTE PTR [esi+0x78]
  406e91:	mul    DWORD PTR [edx-0x3e]
  406e94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e95:	cwde   
  406e96:	mov    edi,0x18f3652a
  406e9b:	dec    ecx
  406e9c:	lods   al,BYTE PTR ds:[esi]
  406e9d:	(bad)  
  406e9e:	push   ebp
  406e9f:	retf   
  406ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ea1:	sub    eax,0x89267980
  406ea6:	adc    al,0xc4
  406ea8:	sub    BYTE PTR [edi],al
  406eaa:	mov    ds:0x1ae812c1,eax
  406eaf:	mov    cl,0xce
  406eb1:	or     BYTE PTR [edx+0x72],dh
  406eb4:	popa   
  406eb5:	cmp    DWORD PTR ss:[edi+esi*8+0x30],edi
  406eba:	pop    edx
  406ebb:	add    al,0xc2
  406ebd:	inc    eax
  406ebe:	pop    edi
  406ebf:	mov    esi,0x77c0335e
  406ec4:	ss js  0x406e57
  406ec7:	(bad)  
  406ec8:	cmp    ebp,DWORD PTR [edx+0x23de1569]
  406ece:	stos   DWORD PTR es:[edi],eax
  406ecf:	or     BYTE PTR [esi+0x3177220f],ah
  406ed5:	arpl   WORD PTR [esi+0x11],cx
  406ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ed9:	xchg   edx,eax
  406eda:	rol    DWORD PTR [edi],1
  406edc:	ins    DWORD PTR es:[edi],dx
  406edd:	mov    ?,eax
  406edf:	pop    ds
  406ee0:	aam    0xd5
  406ee2:	test   BYTE PTR [edx+0x6d],0x7d
  406ee6:	hlt    
  406ee7:	sti    
  406ee8:	fdivrp st(6),st
  406eea:	cmp    BYTE PTR [eax+0x1c],dh
  406eed:	sahf   
  406eee:	adc    eax,0x9c707508
  406ef3:	mov    ebx,0xd60bce06
  406ef8:	lods   eax,DWORD PTR ds:[esi]
  406ef9:	scas   al,BYTE PTR es:[edi]
  406efa:	adc    al,0xf1
  406efc:	add    esp,DWORD PTR [edx+0x4a]
  406eff:	xchg   edx,eax
  406f00:	jl     0x406f42
  406f02:	sbb    BYTE PTR [ebp-0x51],dl
  406f05:	pop    ss
  406f06:	fwait
  406f07:	idiv   DWORD PTR [edi]
  406f09:	mov    eax,ds:0x55025d1b
  406f0e:	or     ebp,DWORD PTR [edx-0x7673aabf]
  406f14:	sub    ecx,DWORD PTR [esi-0x311f299a]
  406f1a:	lods   al,BYTE PTR ds:[esi]
  406f1b:	jl     0x406eec
  406f1d:	cmovo  ecx,DWORD PTR [ebx]
  406f20:	(bad)  
  406f21:	sbb    dh,al
  406f23:	or     ah,BYTE PTR [edi+0x2af0415b]
  406f29:	mov    ebp,0x4475a694
  406f2e:	call   0x2b5b4cf1
  406f33:	and    edx,DWORD PTR [edi]
  406f35:	mov    ecx,0xd47c2f
  406f3a:	push   0x4
  406f3c:	mov    bl,ah
  406f3e:	fcom   st(0)
  406f40:	mov    ebx,0x5c6834b5
  406f45:	push   esi
  406f46:	aaa    
  406f47:	push   ecx
  406f48:	fcomp  DWORD PTR [ebx]
  406f4a:	mov    DWORD PTR [ebx+0x47668267],ecx
  406f50:	les    ecx,FWORD PTR [ecx]
  406f52:	stos   DWORD PTR es:[edi],eax
  406f53:	std    
  406f54:	loope  0x406fca
  406f56:	arpl   WORD PTR [ecx-0x2fb77c81],bx
  406f5c:	es in  al,0x8
  406f5f:	scas   eax,DWORD PTR es:[edi]
  406f60:	pop    ebx
  406f61:	pop    edi
  406f62:	lods   al,BYTE PTR ds:[esi]
  406f63:	mov    bh,0xa6
  406f65:	jns    0x406ef7
  406f67:	stc    
  406f68:	mov    bh,0x81
  406f6a:	mov    dl,0x1a
  406f6c:	jmp    0x406efc
  406f6e:	jmp    0xe88:0xcc1014f0
  406f75:	fs pop edx
  406f77:	arpl   WORD PTR [edx],si
  406f79:	xor    DWORD PTR [ebx+0x0],esi
  406f7c:	arpl   WORD PTR [edi+esi*4-0x40d439a3],bx
  406f83:	sbb    DWORD PTR [edx-0x78],esp
  406f86:	sub    esi,DWORD PTR cs:[ebp-0x63]
  406f8a:	xor    BYTE PTR [ebp-0x30],bl
  406f8d:	fild   QWORD PTR [edi-0x127c75da]
  406f93:	adc    DWORD PTR [esi-0x62b61253],edx
  406f99:	sub    bh,BYTE PTR [ecx]
  406f9b:	test   eax,0xf552884b
  406fa0:	jp     0x406f42
  406fa2:	add    al,BYTE PTR [ebx+0x25]
  406fa5:	js     0x406f84
  406fa7:	sbb    esi,DWORD PTR [ecx]
  406fa9:	shr    al,1
  406fab:	es (bad) 
  406fad:	bound  ebp,QWORD PTR [eax+0x509e240]
  406fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb4:	scas   al,BYTE PTR es:[edi]
  406fb5:	jmp    0x16c51666
  406fba:	pop    ecx
  406fbb:	bound  ebx,QWORD PTR [edx]
  406fbd:	fs mov esi,0x1184e9da
  406fc3:	cmp    DWORD PTR [edx-0x62],edi
  406fc6:	push   ecx
  406fc7:	dec    ecx
  406fc8:	pop    esi
  406fc9:	dec    edi
  406fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fcb:	fsubr  DWORD PTR ds:0x8e10cd2e
  406fd1:	imul   ecx,DWORD PTR [ecx+0x12],0xd9271eba
  406fd8:	repnz dec esp
  406fda:	or     BYTE PTR [ebx+eiz*1+0x4fb7fe6c],cl
  406fe1:	push   cs
  406fe2:	pop    ss
  406fe3:	inc    ch
  406fe5:	jno    0x407036
  406fe7:	pop    ebx
  406fe8:	xchg   DWORD PTR [ebx+ebp*4+0x23],esp
  406fec:	inc    edx
  406fed:	xor    DWORD PTR [ecx-0xc],ebx
  406ff0:	push   ecx
  406ff1:	shr    DWORD PTR [edi+0x4c41bc26],0x7b
  406ff8:	test   al,0xd2
  406ffa:	cmp    eax,0x3ad9cdac
  406fff:	daa    
  407000:	(bad)  
  407001:	mov    eax,0x130c28b3
  407006:	cmp    ch,bh
  407008:	inc    ebp
  407009:	(bad)  
  40700a:	sbb    ebp,DWORD PTR [ecx-0x751997f5]
  407010:	stos   DWORD PTR es:[edi],eax
  407011:	jmp    0x407001
  407013:	add    eax,0x49190f47
  407018:	mov    dh,0xd6
  40701a:	or     DWORD PTR [ecx-0x2c],eax
  40701d:	sbb    BYTE PTR [ecx+0x5cc0366a],cl
  407023:	jnp    0x406fb9
  407025:	jecxz  0x406fdf
  407027:	loope  0x407076
  407029:	inc    ecx
  40702a:	jg     0x407063
  40702c:	lods   al,BYTE PTR ds:[esi]
  40702d:	xor    al,0xd3
  40702f:	xlat   BYTE PTR ds:[ebx]
  407030:	xchg   esi,eax
  407031:	or     bl,dl
  407033:	push   0xffffff8e
  407035:	mov    ds:0xf3aeb25b,al
  40703a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40703b:	mov    ebp,0x24d958f
  407040:	and    eax,0x2b11f6ea
  407045:	das    
  407046:	retf   0x94f8
  407049:	sub    ebx,edx
  40704b:	(bad)  
  40704c:	std    
  40704d:	(bad)  
  40704e:	repnz loope 0x407099
  407051:	jmp    0xebdc:0x5284a8c8
  407058:	or     BYTE PTR [edx-0x267281bf],bl
  40705e:	es push 0x37cdf9d2
  407064:	push   0x74
  407066:	jb     0x407044
  407068:	mov    BYTE PTR [edx],bh
  40706a:	and    ebp,DWORD PTR [esp+edi*2+0x0]
  40706e:	hlt    
  40706f:	int3   
  407070:	aas    
  407071:	loope  0x40706c
  407073:	adc    DWORD PTR [ebp+0x54],ebx
  407076:	jo     0x4070db
  407078:	repnz xchg esi,eax
  40707a:	pop    esp
  40707b:	fadd   DWORD PTR [eax]
  40707d:	mov    bl,0x5b
  40707f:	fimul  WORD PTR fs:[ecx-0x49be0cfe]
  407086:	imul   edi,ebp,0xffffffce
  407089:	lds    edx,FWORD PTR [ecx-0x55]
  40708c:	retf   0x39b7
  40708f:	pop    esp
  407090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407091:	mov    ebp,DWORD PTR [ecx+edi*8+0x49]
  407095:	sahf   
  407096:	sub    al,0x7f
  407098:	test   DWORD PTR [esi],ebp
  40709a:	daa    
  40709b:	(bad)  
  40709c:	ins    BYTE PTR es:[edi],dx
  40709d:	sahf   
  40709e:	(bad)  
  40709f:	pop    esi
  4070a0:	inc    ecx
  4070a1:	mov    esp,0xbc460d52
  4070a6:	push   0xfffffff3
  4070a8:	sbb    eax,0x682c6a5a
  4070ad:	inc    esp
  4070ae:	xchg   esi,eax
  4070af:	cmc    
  4070b0:	stos   BYTE PTR es:[edi],al
  4070b1:	dec    esi
  4070b2:	loope  0x40707f
  4070b4:	jno    0x4070b3
  4070b6:	addr16 iret 
  4070b8:	sti    
  4070b9:	or     ecx,DWORD PTR [eax-0x3]
  4070bc:	cmp    BYTE PTR [edi+edx*4-0x67b0e62c],dh
  4070c3:	aaa    
  4070c4:	xor    eax,0x99848135
  4070c9:	adc    ebx,DWORD PTR [esp+edx*2]
  4070cc:	xor    ecx,DWORD PTR [ecx]
  4070ce:	out    0xb6,eax
  4070d0:	and    bl,BYTE PTR [edx]
  4070d2:	inc    esp
  4070d3:	xor    ch,bl
  4070d5:	push   ds
  4070d6:	retf   0x6a88
  4070d9:	es inc edx
  4070db:	and    bh,BYTE PTR ds:0x291eb632
  4070e1:	aam    0x13
  4070e3:	fwait
  4070e4:	sub    esi,DWORD PTR [esi+0x1675d0b2]
  4070ea:	lods   eax,DWORD PTR ds:[esi]
  4070eb:	mov    ebp,0x43886383
  4070f0:	mov    eax,ds:0xc9150a59
  4070f5:	jnp    0x4070e0
  4070f7:	adc    eax,0x556e4a5
  4070fc:	sahf   
  4070fd:	call   0x40b227f1
  407102:	and    al,0x80
  407104:	xchg   ebx,eax
  407105:	cmp    al,0xd8
  407107:	sub    BYTE PTR [edi+0x45],dh
  40710a:	push   ebx
  40710b:	or     al,BYTE PTR [edi-0x14150aad]
  407111:	mov    ds:0x676e621d,eax
  407116:	add    eax,0x71253d47
  40711b:	pop    esi
  40711c:	test   ecx,edx
  40711e:	call   FWORD PTR ds:0xa7b2fab
  407124:	test   eax,0x40405eb
  407129:	mov    edx,0x410105a3
  40712e:	fwait
  40712f:	mov    ds:0x9eeff39c,al
  407134:	jmp    0xaea76b44
  407139:	popf   
  40713a:	js     0x4070cb
  40713c:	int    0x91
  40713e:	cmp    ah,BYTE PTR [eax+eiz*4+0x502eba11]
  407145:	xor    esp,edi
  407147:	mov    cs:0xb618f11e,al
  40714d:	inc    esp
  40714e:	or     eax,0xe8e7e4e0
  407153:	push   ecx
  407154:	push   es
  407155:	mov    ecx,0xca33c42b
  40715a:	outs   dx,DWORD PTR ds:[esi]
  40715b:	mov    ds:0xda0e2262,al
  407160:	xchg   ecx,eax
  407161:	xor    eax,0xd6c95bff
  407166:	inc    edx
  407167:	fs (bad) 
  40716a:	jp     0x407183
  40716c:	fidiv  WORD PTR [ebx+0x560abf26]
  407172:	outs   dx,DWORD PTR ds:[esi]
  407173:	test   eax,0x31156b3d
  407178:	enter  0x395,0x83
  40717c:	mul    BYTE PTR [esi]
  40717e:	inc    ebp
  40717f:	fs xor eax,0xd4f74cf3
  407185:	icebp  
  407186:	xor    dl,BYTE PTR [edi]
  407188:	punpckldq mm7,DWORD PTR [eax-0x2]
  40718c:	jp     0x4071c7
  40718e:	mov    bh,0x57
  407190:	dec    esi
  407191:	(bad)  
  407192:	xchg   esp,eax
  407193:	repnz xchg bp,ax
  407196:	pop    ebx
  407197:	(bad)  
  407198:	jnp    0x407121
  40719a:	dec    ebx
  40719b:	push   0xa0239fb2
  4071a0:	xchg   ebx,eax
  4071a1:	test   eax,0xdf26aaf7
  4071a6:	in     al,0xe
  4071a8:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4071aa:	dec    edx
  4071ab:	adc    DWORD PTR [edx-0x3c],ecx
  4071ae:	and    esi,DWORD PTR [eax+0x3e1134b2]
  4071b4:	xchg   edx,eax
  4071b5:	imul   edx,esp,0xffffff9b
  4071b8:	mov    dl,al
  4071ba:	pusha  
  4071bb:	pop    eax
  4071bc:	xor    eax,0xe43a370b
  4071c1:	cli    
  4071c2:	ficomp WORD PTR [edx+0x7b00e31b]
  4071c8:	dec    edi
  4071c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071ca:	push   eax
  4071cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071cc:	sub    bh,BYTE PTR [edi-0x31]
  4071cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071d0:	aaa    
  4071d1:	into   
  4071d2:	mov    ah,0x8
  4071d4:	or     ecx,DWORD PTR [edx+0x36]
  4071d7:	pop    es
  4071d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071d9:	mov    BYTE PTR [ebx-0x2eabbfbe],ah
  4071df:	mov    gs,WORD PTR [esi]
  4071e1:	stos   BYTE PTR es:[edi],al
  4071e2:	cmp    DWORD PTR [ebp-0x366ab9aa],0xffffffb0
  4071e9:	or     DWORD PTR [esi+0x25f229fd],ecx
  4071ef:	test   al,0x92
  4071f1:	popa   
  4071f2:	jnp    0x4071e8
  4071f4:	or     ecx,DWORD PTR [edi+0x2]
  4071f7:	pop    es
  4071f8:	clc    
  4071f9:	dec    edi
  4071fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071fb:	jno    0x407254
  4071fd:	repnz popf 
  4071ff:	cwde   
  407200:	dec    eax
  407201:	icebp  
  407202:	cmp    ch,BYTE PTR [ecx+0x36]
  407205:	call   0x875defaa
  40720a:	xchg   ebp,eax
  40720b:	adc    eax,0xbe7547cb
  407210:	(bad)  
  407211:	dec    ecx
  407212:	xchg   ecx,eax
  407213:	adc    edx,DWORD PTR [eax-0x39]
  407216:	cmc    
  407217:	mov    edi,0xfbde968b
  40721c:	ins    BYTE PTR es:[edi],dx
  40721d:	in     al,dx
  40721e:	push   ds
  40721f:	sbb    DWORD PTR [edi+esi*2+0x30],0x7d814b06
  407227:	or     ebp,edi
  407229:	sbb    BYTE PTR [ecx-0x1f45ef05],ah
  40722f:	sbb    edx,edx
  407231:	mov    al,0x68
  407233:	mov    edi,0x6fa0efc8
  407238:	mov    ah,0x9d
  40723a:	pop    es
  40723b:	jmp    0x81339f79
  407240:	and    ah,ah
  407242:	sahf   
  407243:	out    dx,eax
  407244:	ret    
  407245:	add    BYTE PTR ds:0xcdebee7f,0x22
  40724c:	mov    al,ds:0x1f636671
  407251:	loop   0x4071ef
  407253:	cmp    edx,edi
  407255:	mov    ch,0xdc
  407257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407258:	ret    
  407259:	pop    ebp
  40725a:	test   al,0x26
  40725c:	scas   al,BYTE PTR es:[edi]
  40725d:	mov    ah,0x7c
  40725f:	popf   
  407260:	test   BYTE PTR [ebp-0x1ff68ae4],bh
  407266:	xchg   edx,eax
  407267:	fidivr WORD PTR [esi+0x4a]
  40726a:	mov    DWORD PTR [ecx+0x2],edx
  40726d:	mov    al,0x73
  40726f:	xchg   ebp,eax
  407270:	lahf   
  407271:	sub    DWORD PTR [esi+0x75d01ff9],ebp
  407277:	add    esi,eax
  407279:	mov    al,0x73
  40727b:	pusha  
  40727c:	and    eax,0x68657585
  407281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407282:	fwait
  407283:	pop    ebp
  407284:	(bad)  
  407285:	dec    ebp
  407286:	sbb    DWORD PTR [ebx-0x4e],esi
  407289:	xchg   bh,bh
  40728b:	rcl    DWORD PTR [esi+0x1e],cl
  40728e:	inc    eax
  40728f:	push   ebp
  407290:	je     0x4072c9
  407292:	out    0xf3,al
  407294:	push   edi
  407295:	fmul   QWORD PTR [edi-0x6c]
  407298:	push   0x392575c1
  40729d:	dec    esp
  40729e:	mov    WORD PTR [edx],ss
  4072a0:	jns    0x407320
  4072a2:	sub    al,0x61
  4072a4:	in     al,dx
  4072a5:	mov    cl,0x15
  4072a7:	cmp    ebp,edi
  4072a9:	pop    edi
  4072aa:	out    dx,al
  4072ab:	pushf  
  4072ac:	sbb    al,0xe2
  4072ae:	jle    0x40729b
  4072b0:	mov    edi,0x3ad2e7e
  4072b5:	push   eax
  4072b6:	sub    bh,BYTE PTR ds:0x9260dd20
  4072bc:	sahf   
  4072bd:	fcmovnb st,st(2)
  4072bf:	sub    ebx,DWORD PTR [ebx-0x443f076a]
  4072c5:	push   edi
  4072c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c7:	add    BYTE PTR [ecx+eiz*4+0x52],al
  4072cb:	je     0x4072db
  4072cd:	and    al,0x91
  4072cf:	sub    DWORD PTR [ebx],0xe146c794
  4072d5:	cdq    
  4072d6:	sti    
  4072d7:	adc    al,0x4f
  4072d9:	inc    edi
  4072da:	sbb    BYTE PTR [edi-0x73],0xa2
  4072de:	sub    BYTE PTR [ebx+0x48172f1c],dh
  4072e4:	or     eax,0xe35ecee1
  4072e9:	leave  
  4072ea:	repz or al,dl
  4072ed:	mov    bl,0x40
  4072ef:	cmp    ch,ah
  4072f1:	jns    0x407335
  4072f3:	mov    eax,ds:0x62c739ea
  4072f8:	push   ss
  4072f9:	jp     0x40728e
  4072fb:	aaa    
  4072fc:	or     bl,dh
  4072fe:	loop   0x4072b9
  407300:	jb     0x40731c
  407302:	inc    ebx
  407303:	mul    DWORD PTR [eax+0x61e093d1]
  407309:	inc    ecx
  40730a:	cmpps  xmm4,XMMWORD PTR [ecx],0xb9
  40730e:	jb     0x407358
  407310:	xor    eax,0x1dc5359a
  407315:	fnstsw WORD PTR [eax-0x2255fce0]
  40731b:	mov    dh,0x1e
  40731d:	jb     0x407306
  40731f:	popf   
  407320:	push   ecx
  407321:	mov    ah,0x55
  407323:	mov    esi,DWORD PTR [edx*4-0x4155413d]
  40732a:	sub    al,0x87
  40732c:	out    dx,eax
  40732d:	dec    esi
  40732e:	push   esp
  40732f:	xchg   DWORD PTR [ebx-0x35dc503f],edx
  407335:	adc    ebx,ebx
  407337:	cmp    eax,0x36bc0853
  40733c:	inc    ebx
  40733d:	mov    ebx,DWORD PTR [esi-0xc047c56]
  407343:	cs cmp ch,bl
  407346:	xlat   BYTE PTR ds:[ebx]
  407347:	push   es
  407348:	xor    esi,DWORD PTR [eax+0x6afc711d]
  40734e:	push   cs
  40734f:	sub    DWORD PTR [ecx-0x7f8d07e1],0xffffffcf
  407356:	jge    0x4072fa
  407358:	push   ds
  407359:	jbe    0x4072f8
  40735b:	rcl    DWORD PTR [ecx-0x1238a69b],cl
  407361:	adc    eax,0xaceb787f
  407366:	retf   
  407367:	mov    esi,0x9673a544
  40736c:	mov    al,0x91
  40736e:	ins    DWORD PTR es:[edi],dx
  40736f:	call   0x9f860dd0
  407374:	ret    0x759f
  407377:	or     edi,DWORD PTR cs:[edx-0x8ba6c81]
  40737e:	xchg   esp,eax
  40737f:	push   0x8
  407381:	shr    BYTE PTR [eax+ebp*4],0x3c
  407385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407386:	es daa 
  407388:	xchg   edi,eax
  407389:	fisttp DWORD PTR [edi]
  40738b:	add    eax,0xa306a283
  407390:	xchg   ebp,eax
  407391:	je     0x40738a
  407393:	mov    ebx,0x42880643
  407398:	jmp    0x47b7f628
  40739d:	sub    ebp,DWORD PTR [ebx+0x75]
  4073a0:	mov    ds:0x4a26604c,al
  4073a5:	push   0xffffffdd
  4073a7:	add    eax,0xffcbe59
  4073ac:	loope  0x407391
  4073ae:	push   ecx
  4073af:	sbb    DWORD PTR es:[ecx-0x29a2eee7],esi
  4073b6:	or     DWORD PTR [eax+edx*2+0x177456fc],ebp
  4073bd:	adc    eax,DWORD PTR [eax]
  4073bf:	(bad)
  4073c3:	or     DWORD PTR [ebx+0x15018c38],edx
  4073c9:	in     al,dx
  4073ca:	cdq    
  4073cb:	xor    bl,ch
  4073cd:	xor    dh,BYTE PTR [ebx]
  4073cf:	bound  esp,QWORD PTR [eax]
  4073d1:	sbb    esi,DWORD PTR [edx+eax*8]
  4073d4:	or     al,0x8a
  4073d6:	mov    edi,0x44c8ac95
  4073db:	mov    bh,0x4d
  4073dd:	lahf   
  4073de:	add    cl,BYTE PTR ds:0xd032373f
  4073e4:	adc    al,0xa5
  4073e6:	jl     0x40745d
  4073e8:	cmc    
  4073e9:	jno    0x40741f
  4073eb:	push   esi
  4073ec:	xchg   ebx,eax
  4073ed:	das    
  4073ee:	push   edx
  4073ef:	inc    ebx
  4073f0:	std    
  4073f1:	int3   
  4073f2:	xchg   edi,eax
  4073f3:	cmc    
  4073f4:	out    dx,al
  4073f5:	and    al,0xb7
  4073f7:	mov    ds:0x899a8f47,eax
  4073fc:	xor    eax,0xd7eef945
  407401:	or     eax,DWORD PTR [ecx]
  407403:	dec    ecx
  407404:	push   esp
  407405:	push   ds
  407406:	and    DWORD PTR [edx-0x5b8cdd40],ebx
  40740c:	in     al,0x6f
  40740e:	out    0x41,eax
  407410:	mov    al,ds:0x88efcbd9
  407415:	(bad)  
  407416:	in     al,dx
  407417:	cmp    eax,eax
  407419:	stos   BYTE PTR es:[edi],al
  40741a:	lahf   
  40741b:	nop
  40741c:	int    0xa7
  40741e:	inc    ebp
  40741f:	je     0x407486
  407421:	mov    al,ds:0xa97f72e8
  407426:	sti    
  407427:	mov    ds:0x5610da39,eax
  40742c:	in     eax,dx
  40742d:	icebp  
  40742e:	mov    eax,0x7b5b5af
  407433:	or     al,0x50
  407435:	fsub   DWORD PTR [ebx+0x7e]
  407438:	sub    eax,0xb8b02380
  40743d:	mov    ch,0x44
  40743f:	(bad)  
  407440:	push   ecx
  407441:	jecxz  0x40742d
  407443:	loope  0x40747a
  407445:	popa   
  407446:	(bad)  
  407447:	sbb    eax,esi
  407449:	pop    edi
  40744a:	(bad)  
  40744b:	out    dx,eax
  40744c:	aam    0x9d
  40744e:	jmp    0x46a:0x3e6c5ebf
  407455:	fidiv  DWORD PTR [eax+eiz*1-0x52]
  407459:	pop    ebx
  40745a:	mov    eax,0x28bb6127
  40745f:	xor    al,0x34
  407461:	shl    DWORD PTR [ebx+0x4c67f33d],cl
  407467:	icebp  
  407468:	dec    ebp
  407469:	inc    ebx
  40746a:	clc    
  40746b:	je     0x4073ed
  40746d:	xor    al,0x3e
  40746f:	hlt    
  407470:	pop    edx
  407471:	mov    esp,0x9ae5302a
  407476:	inc    edx
  407477:	rcl    ebp,1
  407479:	xor    ebx,DWORD PTR [ebx]
  40747b:	aas    
  40747c:	inc    edx
  40747d:	(bad)  
  40747e:	mov    dh,0x32
  407480:	imul   edx,DWORD PTR [edi-0x18],0xffffffae
  407484:	inc    esi
  407485:	lods   al,BYTE PTR ds:[esi]
  407486:	mov    ch,0x4
  407488:	mov    ds:0x5f0dae4b,eax
  40748d:	gs xor eax,0xf8e9cbe
  407493:	jg     0x4074b1
  407495:	push   ds
  407496:	loopne 0x407438
  407498:	out    dx,eax
  407499:	sub    BYTE PTR [ecx+0x1bd7fd1e],cl
  40749f:	imul   eax,DWORD PTR [eax-0x1e235757],0xffffffc5
  4074a6:	mov    cl,0x32
  4074a8:	inc    ecx
  4074a9:	mov    ds,WORD PTR [ebp-0x21]
  4074ac:	push   0x2e27dcdd
  4074b1:	pop    esi
  4074b2:	jmp    0xa07f:0x31a00d93
  4074b9:	add    ch,BYTE PTR [eax]
  4074bb:	ffree  st(6)
  4074bd:	xchg   ebp,eax
  4074be:	xchg   esp,eax
  4074bf:	adc    al,0x60
  4074c1:	jp     0x4074cf
  4074c3:	inc    eax
  4074c4:	je     0x407511
  4074c6:	test   eax,0x421f0e9f
  4074cb:	repnz stos BYTE PTR es:[edi],al
  4074cd:	lock adc DWORD PTR [ebx-0x50],edx
  4074d1:	add    al,0xb3
  4074d3:	scas   eax,DWORD PTR es:[edi]
  4074d4:	push   ebp
  4074d5:	sub    ah,BYTE PTR [edx-0x7465621a]
  4074db:	inc    edx
  4074dc:	or     al,0x45
  4074de:	icebp  
  4074df:	fld    st(3)
  4074e1:	in     eax,0x95
  4074e3:	xchg   edx,eax
  4074e4:	jno    0x407492
  4074e6:	xor    dl,dl
  4074e8:	mov    ds:0x308477ea,eax
  4074ed:	push   ebp
  4074ee:	mov    ah,0x15
  4074f0:	stos   BYTE PTR es:[edi],al
  4074f1:	je     0x4074d1
  4074f3:	push   0xef81fec3
  4074f8:	imul   esp,DWORD PTR [eax],0xb25da08c
  4074fe:	neg    bh
  407500:	iret   
  407501:	aas    
  407502:	jb     0x4074fd
  407504:	out    0x84,al
  407506:	idiv   BYTE PTR [ebp+0x45ea0eac]
  40750c:	imul   esp,ecx,0xffffffcf
  40750f:	mov    edi,0xa35b4224
  407514:	jle    0x4074a8
  407516:	js     0x407558
  407518:	enter  0xac25,0x3e
  40751c:	sub    cl,ch
  40751e:	jmp    0x9c9d:0x1767375c
  407525:	sbb    al,0xed
  407527:	mov    eax,0x505812ac
  40752c:	in     al,dx
  40752d:	inc    eax
  40752e:	jnp    0x40750a
  407530:	or     edx,DWORD PTR [ebx]
  407532:	imul   esi,ebp,0x7a
  407535:	(bad)  
  407536:	jmp    0x44c1:0x24727c5e
  40753d:	push   ebx
  40753e:	push   esp
  40753f:	imul   eax,ebp,0x4b
  407542:	inc    ebx
  407543:	es mov bh,0x73
  407546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407547:	push   eax
  407548:	mov    ah,0x17
  40754a:	push   ebx
  40754b:	cli    
  40754c:	xchg   ebx,eax
  40754d:	sub    al,0xe6
  40754f:	pop    ebx
  407550:	jne    0x4075be
  407552:	xchg   esi,eax
  407553:	add    bh,BYTE PTR [edx]
  407555:	arpl   WORD PTR [ebx],ax
  407557:	xchg   DWORD PTR [eax+0x14391a71],esp
  40755d:	iret   
  40755e:	sahf   
  40755f:	leave  
  407560:	outs   dx,BYTE PTR ds:[esi]
  407561:	adc    al,BYTE PTR [eax+0x1b167063]
  407567:	xchg   DWORD PTR [eax-0x3e],ebx
  40756a:	mov    ds:0xec3517ec,al
  40756f:	sbb    al,0x54
  407571:	pop    es
  407572:	adc    cl,ch
  407574:	test   DWORD PTR [ebx+edi*2],esi
  407577:	scas   eax,DWORD PTR es:[edi]
  407578:	sub    edi,DWORD PTR [eax-0x368e36f0]
  40757e:	je     0x4075a8
  407580:	lock jge 0x4075db
  407583:	jl     0x407542
  407585:	inc    eax
  407586:	and    esp,ebp
  407588:	mov    esp,0x71b7f7be
  40758d:	stos   DWORD PTR es:[edi],eax
  40758e:	adc    dh,BYTE PTR [esi+0x1b32f1d2]
  407594:	jmp    0xd1da4926
  407599:	aas    
  40759a:	cli    
  40759b:	mov    ds:0xcc4fe0a0,al
  4075a0:	ja     0x4075e0
  4075a2:	jle    0x407623
  4075a4:	jne    0x4075b1
  4075a6:	or     eax,0x9670cd53
  4075ab:	shr    DWORD PTR [ecx-0x24],1
  4075ae:	loopne 0x407580
  4075b0:	fwait
  4075b1:	ds std 
  4075b3:	loope  0x407605
  4075b5:	dec    ebp
  4075b6:	dec    esi
  4075b7:	jno    0x40755c
  4075b9:	add    al,0x19
  4075bb:	mov    edi,edx
  4075bd:	std    
  4075be:	mov    cl,0xb
  4075c0:	sbb    eax,esi
  4075c2:	pusha  
  4075c3:	aad    0x46
  4075c5:	ror    BYTE PTR [eax-0x30],cl
  4075c8:	pop    ss
  4075c9:	mov    dl,cl
  4075cb:	(bad)  
  4075cc:	in     al,dx
  4075cd:	aam    0x2d
  4075cf:	addr16 inc dh
  4075d2:	and    eax,0x27d150ff
  4075d7:	jae    0x40763a
  4075d9:	sbb    al,0x19
  4075db:	shr    BYTE PTR [ebx],1
  4075dd:	cld    
  4075de:	mov    BYTE PTR [ecx],ch
  4075e0:	mov    edi,0xa4f23594
  4075e5:	ror    dl,cl
  4075e7:	test   DWORD PTR [esi-0x523890a2],edi
  4075ed:	jne    0x407614
  4075ef:	mov    dl,0x53
  4075f1:	mov    eax,ds:0x80e667b8
  4075f6:	popf   
  4075f7:	add    eax,DWORD PTR [ebx]
  4075f9:	cmp    eax,0x6e5e344e
  4075fe:	pop    ebx
  4075ff:	inc    ebp
  407600:	mov    ecx,0xb64030c4
  407605:	push   edx
  407606:	inc    edi
  407607:	test   DWORD PTR [eax-0x703f3367],edx
  40760d:	fistp  DWORD PTR [eax+0x5e178542]
  407613:	push   ecx
  407614:	cmp    edi,eax
  407616:	loopne 0x40760a
  407618:	add    eax,0x6bc6948f
  40761d:	lock pop esp
  40761f:	es add edi,esp
  407622:	arpl   ax,bx
  407624:	scas   al,BYTE PTR es:[edi]
  407625:	inc    esi
  407626:	js     0x407690
  407628:	xchg   BYTE PTR [eax+0x7],al
  40762b:	lds    edx,FWORD PTR [esi]
  40762d:	jmp    0xcc3c53fe
  407632:	dec    edi
  407633:	imul   esi,DWORD PTR [esi+0x62],0xbae89bbe
  40763a:	ds push 0x74
  40763d:	adc    al,dh
  40763f:	aaa    
  407640:	adc    al,BYTE PTR es:0x6c760bc3
  407647:	push   ecx
  407648:	add    al,0xde
  40764a:	into   
  40764b:	mov    bh,0x32
  40764d:	loope  0x407643
  40764f:	jp     0x40766c
  407651:	sub    esp,DWORD PTR gs:[esi+eiz*1]
  407655:	xor    BYTE PTR [esi],cl
  407657:	mov    DWORD PTR [eax-0x4d],ebp
  40765a:	cld    
  40765b:	mov    eax,ds:0x25ae1547
  407660:	pop    ss
  407661:	mov    ds:0x34791bf5,eax
  407666:	loope  0x407605
  407668:	or     al,0xc7
  40766a:	or     esi,DWORD PTR ds:0xbd9fac29
  407670:	aaa    
  407671:	mov    bh,0x3b
  407673:	sbb    ah,bh
  407675:	mov    edx,0x7f6eb0d5
  40767a:	sbb    BYTE PTR [ebx-0x6159b5a7],0x54
  407681:	add    al,0xc4
  407683:	and    edx,0x3e
  407686:	imul   edx,DWORD PTR [esi],0x8ed76cc1
  40768c:	mov    eax,0x35381c13
  407691:	sar    DWORD PTR [eax-0x7b1ae4d0],1
  407697:	sub    ch,0xff
  40769a:	popa   
  40769b:	xchg   ebp,eax
  40769c:	pop    ecx
  40769d:	scas   al,BYTE PTR es:[edi]
  40769e:	inc    edx
  40769f:	adc    DWORD PTR [edx-0x759ad960],edi
  4076a5:	jmp    0xb23f136
  4076aa:	in     eax,0x20
  4076ac:	xchg   esi,eax
  4076ad:	xlat   BYTE PTR ds:[ebx]
  4076ae:	or     eax,0x6300b75e
  4076b3:	fwait
  4076b4:	pop    ss
  4076b5:	sahf   
  4076b6:	aad    0x6e
  4076b8:	pushf  
  4076b9:	enter  0x1e41,0x85
  4076bd:	div    DWORD PTR [ebx+0x46a98395]
  4076c3:	mov    edx,0xb5841476
  4076c8:	stc    
  4076c9:	xchg   esi,eax
  4076ca:	jmp    0x40773b
  4076cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076cd:	neg    DWORD PTR [edx-0x33]
  4076d0:	mov    bl,0x80
  4076d2:	cmp    al,0xff
  4076d4:	xchg   esi,eax
  4076d5:	out    0xbb,eax
  4076d7:	push   0xd10da02e
  4076dc:	jle    0x4076ba
  4076de:	bound  ecx,QWORD PTR [eax-0x1480fe9d]
  4076e4:	mov    bh,0x5d
  4076e6:	xor    BYTE PTR [ecx],bh
  4076e8:	enter  0xd94e,0x42
  4076ec:	imul   ebp,DWORD PTR [eax+0x34b9576c],0x12
  4076f3:	pushf  
  4076f4:	pop    esi
  4076f5:	cdq    
  4076f6:	lods   eax,DWORD PTR ds:[esi]
  4076f7:	popf   
  4076f8:	test   dl,al
  4076fa:	and    edi,edi
  4076fc:	add    BYTE PTR [ebx+0x40],al
  4076ff:	mov    edx,0xee75178c
  407704:	in     al,dx
  407705:	stc    
  407706:	sbb    al,BYTE PTR [edx+0x5f381db6]
  40770c:	add    eax,0x4a54329
  407711:	adc    dl,ah
  407713:	sbb    eax,0xd0708017
  407718:	outs   dx,DWORD PTR ds:[esi]
  407719:	popf   
  40771a:	gs out dx,eax
  40771c:	in     eax,0xaa
  40771e:	push   es
  40771f:	call   DWORD PTR [esi+0x2e]
  407723:	popf   
  407724:	pop    ebx
  407725:	lods   eax,DWORD PTR ds:[esi]
  407726:	call   0xe4f6e937
  40772b:	xchg   ebp,eax
  40772c:	push   edx
  40772d:	cli    
  40772e:	out    0x8c,eax
  407730:	call   DWORD PTR [ebp-0x3b4a79da]
  407736:	push   eax
  407737:	cmp    bh,dh
  407739:	jecxz  0x407728
  40773b:	test   DWORD PTR [esi],ebx
  40773d:	mov    bl,0xc
  40773f:	addr16 dec esp
  407741:	rcr    BYTE PTR [ebp+edi*2+0x59],1
  407745:	sub    BYTE PTR [edx+0x4041c9e7],0x13
  40774c:	and    al,0x20
  40774e:	dec    ebx
  40774f:	sbb    al,0x38
  407751:	outs   dx,BYTE PTR ds:[esi]
  407752:	mov    WORD PTR [eax],fs
  407754:	clc    
  407755:	adc    DWORD PTR [ecx+0x44b04acd],eax
  40775b:	mov    DWORD PTR [ecx+0x7e],edi
  40775e:	dec    ebx
  40775f:	xchg   DWORD PTR [eax],ebx
  407761:	out    0x4d,eax
  407763:	fimul  DWORD PTR [edx-0x662b79b4]
  407769:	dec    esp
  40776a:	xor    BYTE PTR [ebp-0x71],bl
  40776d:	ins    BYTE PTR es:[edi],dx
  40776e:	jmp    0xc673:0x4d562217
  407775:	dec    edx
  407776:	dec    edx
  407777:	aaa    
  407778:	jno    0x407705
  40777a:	jne    0x40779a
  40777c:	inc    ebp
  40777d:	xchg   DWORD PTR [edi+0x28],eax
  407780:	outs   dx,BYTE PTR ds:[esi]
  407781:	push   0xffffffa1
  407783:	mov    bh,0xeb
  407785:	out    dx,al
  407786:	das    
  407787:	and    BYTE PTR [edi],0xfd
  40778a:	pop    ecx
  40778b:	mov    ds:0x42e3e273,eax
  407790:	add    al,0xcd
  407792:	jns    0x40771b
  407794:	fisub  DWORD PTR [ebx]
  407796:	adc    eax,0x83d6c38b
  40779b:	jae    0x4077ed
  40779d:	jmp    0x89a1:0x24fc79a1
  4077a4:	push   edi
  4077a5:	cwde   
  4077a6:	adc    eax,0x7a699070
  4077ab:	xchg   ecx,eax
  4077ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077ad:	pop    ds
  4077ae:	and    al,0x14
  4077b0:	add    eax,0x956f4530
  4077b5:	outs   dx,DWORD PTR ds:[esi]
  4077b6:	(bad)  
  4077b7:	sahf   
  4077b8:	xor    eax,0x6fa2f0cd
  4077bd:	push   ds
  4077be:	ror    BYTE PTR [eax-0x5a],1
  4077c1:	sub    bl,BYTE PTR [edi]
  4077c3:	repnz (bad) 
  4077c6:	aaa    
  4077c7:	cmp    al,0x78
  4077c9:	lea    eax,[esi]
  4077cb:	pop    ds
  4077cc:	pop    esi
  4077cd:	pop    es
  4077ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077cf:	jae    0x40777f
  4077d1:	scas   eax,DWORD PTR es:[edi]
  4077d2:	and    eax,0x207ce768
  4077d7:	xor    DWORD PTR [esi],0x62
  4077da:	push   eax
  4077db:	cmp    eax,0x91463fe5
  4077e0:	sub    bl,dl
  4077e2:	leave  
  4077e3:	push   ds
  4077e4:	inc    eax
  4077e5:	cmp    bl,cl
  4077e7:	pop    ebx
  4077e8:	adc    al,0x48
  4077ea:	fstp   DWORD PTR [edx-0x2cf4a716]
  4077f0:	jns    0x4077c5
  4077f2:	xor    ah,BYTE PTR [edx]
  4077f4:	in     al,0x2d
  4077f6:	xchg   ebx,eax
  4077f7:	push   DWORD PTR [edx]
  4077f9:	aam    0xc8
  4077fb:	adc    al,0xf5
  4077fd:	pop    esp
  4077fe:	pop    ss
  4077ff:	(bad)  
  407800:	adc    DWORD PTR es:[edi],ebx
  407803:	inc    edx
  407804:	sub    bl,ch
  407806:	jb     0x407871
  407808:	out    dx,al
  407809:	inc    ecx
  40780a:	mov    edx,0x165843ab
  40780f:	cld    
  407810:	imul   eax,DWORD PTR [ebp-0x2da9f38e],0x630045ba
  40781a:	int3   
  40781b:	dec    edx
  40781c:	push   ebx
  40781d:	out    dx,eax
  40781e:	push   ebp
  40781f:	dec    ebx
  407820:	jnp    0x4077f1
  407822:	or     al,0xf9
  407824:	add    BYTE PTR [esi+ebp*4],ch
  407827:	sub    eax,0xc48bd693
  40782c:	pop    esp
  40782d:	jne    0x4077d1
  40782f:	cwde   
  407830:	or     BYTE PTR ss:[edi],ch
  407833:	cdq    
  407834:	mov    ebp,0x46043b18
  407839:	sbb    esp,DWORD PTR [eax+0x41]
  40783c:	jnp    0x407805
  40783e:	pop    edi
  40783f:	push   esp
  407840:	sub    DWORD PTR [edx-0x66],ebp
  407843:	xchg   ebx,eax
  407844:	push   ds
  407845:	jnp    0x407847
  407847:	adc    DWORD PTR [ebx-0x6b06df8],ebx
  40784d:	lea    ebx,[eax+0x11]
  407850:	xor    eax,0xe375720
  407855:	mov    al,ds:0x73ad1b2c
  40785a:	jl     0x40784a
  40785c:	mov    esp,0x1ccba910
  407861:	jmp    0xc5af26b6
  407866:	inc    ecx
  407867:	add    esi,DWORD PTR [esi-0x3e6aa2ce]
  40786d:	repnz push esp
  40786f:	dec    edi
  407870:	sbb    BYTE PTR [edx],0x43
  407873:	and    bh,0x46
  407876:	enter  0x2561,0x68
  40787a:	dec    edx
  40787b:	or     BYTE PTR [ebx-0x67],dl
  40787e:	clc    
  40787f:	mov    al,ds:0x8f385175
  407884:	aas    
  407885:	outs   dx,BYTE PTR ds:[esi]
  407886:	sar    ebp,1
  407888:	mov    ebx,0x56e13b0c
  40788d:	les    edx,FWORD PTR [esi-0xc215a87]
  407893:	or     DWORD PTR [esi-0x4c],esp
  407896:	es loopne 0x407828
  407899:	xor    cl,bl
  40789b:	jno    0x407841
  40789d:	sti    
  40789e:	xor    dl,dl
  4078a0:	inc    edi
  4078a1:	or     eax,0x37922e50
  4078a6:	mov    esp,0xe46a0cbc
  4078ab:	imul   edx,DWORD PTR [edi+0x172c2a0a],0x25
  4078b2:	sub    DWORD PTR [edi],ecx
  4078b4:	fidiv  WORD PTR [eax+eiz*2+0x16]
  4078b8:	add    ebp,esi
  4078ba:	pushf  
  4078bb:	aaa    
  4078bc:	sti    
  4078bd:	or     ebx,DWORD PTR [edx+ebx*2+0x489ecb63]
  4078c4:	xchg   ebx,eax
  4078c5:	mov    ebp,0x24ab163d
  4078ca:	ror    BYTE PTR [eax+0x9],1
  4078cd:	mov    dh,0x2f
  4078cf:	sub    dl,BYTE PTR [edx]
  4078d1:	in     al,0xca
  4078d3:	pop    ss
  4078d4:	and    BYTE PTR [esi-0x45],ch
  4078d7:	imul   edi
  4078d9:	and    DWORD PTR [eax-0x116a993a],esi
  4078df:	out    dx,eax
  4078e0:	mov    ebx,0xea2cebb9
  4078e5:	or     BYTE PTR [edi+0x4e],dh
  4078e8:	out    dx,eax
  4078e9:	imul   eax,DWORD PTR [ebx],0xffffffce
  4078ec:	dec    esp
  4078ed:	stc    
  4078ee:	aam    0xa3
  4078f0:	push   ecx
  4078f1:	sub    BYTE PTR ds:0x380ceb2e,0x78
  4078f8:	pop    ecx
  4078f9:	(bad)  
  4078fa:	scas   al,BYTE PTR es:[edi]
  4078fb:	adc    BYTE PTR [edi-0x70],ch
  4078fe:	mov    esp,edi
  407900:	cmp    dl,al
  407902:	leave  
  407903:	lds    ebp,FWORD PTR [edi+0x49]
  407906:	ss jnp 0x407969
  407909:	call   0xa5c3:0x7200e6d1
  407910:	mov    ds:0x7dffe180,al
  407915:	out    0x26,al
  407917:	jmp    0xb0ce8a64
  40791c:	push   0x7b1ea1e4
  407921:	cmp    dl,BYTE PTR [ecx-0x57011869]
  407927:	int3   
  407928:	icebp  
  407929:	jg     0x40795b
  40792b:	xchg   ecx,eax
  40792c:	sub    eax,0xd5529e38
  407931:	les    eax,FWORD PTR [ebx+0x2a5cb64b]
  407937:	inc    eax
  407938:	push   eax
  407939:	mov    ah,0x3d
  40793b:	push   ds
  40793c:	pop    es
  40793d:	mov    eax,0xa4e61b6a
  407942:	in     eax,dx
  407943:	popf   
  407944:	push   ebx
  407945:	dec    esi
  407946:	xchg   esi,eax
  407947:	sbb    BYTE PTR [ebx-0x611e53b7],0x98
  40794e:	adc    edx,edi
  407950:	ins    BYTE PTR es:[edi],dx
  407951:	clc    
  407952:	mov    dh,0x97
  407954:	clc    
  407955:	sub    eax,edx
  407957:	inc    esp
  407958:	pop    eax
  407959:	jb     0x4078ec
  40795b:	push   es
  40795c:	mov    ebp,0x5209b226
  407961:	sub    bl,BYTE PTR [eax]
  407963:	mov    ah,0x64
  407965:	or     bl,BYTE PTR [edi]
  407967:	stos   BYTE PTR es:[edi],al
  407968:	imul   edi,eax,0x66
  40796b:	or     eax,0x2c3fd50d
  407970:	cmp    bl,BYTE PTR [edx+ebp*4+0x54]
  407974:	inc    edi
  407975:	mov    dl,0x4c
  407978:	push   eax
  407979:	push   ebp
  40797b:	adc    DWORD PTR [esi-0x58210d7f],ebp
  407981:	pop    ecx
  407982:	test   al,0x3f
  407984:	jbe    0x407978
  407986:	ret    0x9da5
  407989:	(bad)  
  40798a:	add    BYTE PTR [ebx-0x5b749956],cl
  407990:	cli    
  407991:	push   ss
  407992:	rol    BYTE PTR [ecx+0x7f78095d],1
  407998:	jne    0x40794c
  40799a:	xor    edi,DWORD PTR [eax-0x48]
  40799d:	mov    ah,BYTE PTR [ebp+ebx*4-0x4c]
  4079a1:	ret    
  4079a2:	inc    eax
  4079a3:	pop    ebx
  4079a4:	add    ecx,eax
  4079a6:	call   0x52937271
  4079ab:	push   esp
  4079ac:	xor    dh,dl
  4079ae:	retf   0xa6ab
  4079b1:	or     edi,DWORD PTR ds:0x156cd1f5
  4079b7:	xchg   ebp,eax
  4079b8:	and    eax,0x4c87179b
  4079bd:	pop    esp
  4079be:	aad    0x4f
  4079c0:	cmp    esp,DWORD PTR [ecx-0x5d0e785d]
  4079c6:	mov    ecx,0xdef92c2f
  4079cb:	pop    ebx
  4079cc:	pusha  
  4079cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ce:	mov    cl,0x40
  4079d0:	dec    ebx
  4079d1:	rcl    BYTE PTR gs:[ecx],1
  4079d4:	dec    eax
  4079d5:	mov    bh,0xdf
  4079d7:	in     al,0x21
  4079d9:	push   0xd18c9008
  4079de:	fidivr DWORD PTR [edx-0x68]
  4079e1:	inc    ebx
  4079e2:	fdiv   st,st(4)
  4079e4:	into   
  4079e5:	add    DWORD PTR [eax-0x50],edx
  4079e8:	jp     0x4079db
  4079ea:	shl    ah,cl
  4079ec:	test   al,0x2b
  4079ee:	int3   
  4079ef:	imul   edx,DWORD PTR [edx-0x480c1e8f],0x3
  4079f6:	sub    al,0xe1
  4079f8:	cmp    DWORD PTR [edx-0xe],esi
  4079fb:	test   BYTE PTR ds:0x1a3b3902,0xd6
  407a02:	or     dl,BYTE PTR [edx-0x2c]
  407a05:	mov    ds,WORD PTR [ebp-0x1647b2bc]
  407a0b:	xor    eax,0x30b04cca
  407a10:	lods   al,BYTE PTR ds:[esi]
  407a11:	out    dx,eax
  407a12:	push   cs
  407a13:	and    al,0x4e
  407a15:	hlt    
  407a16:	dec    ecx
  407a17:	cmp    DWORD PTR [ecx+0x72],0xffffffa9
  407a1b:	mov    WORD PTR [ebp-0x69a7f356],fs
  407a21:	fdiv   QWORD PTR ds:0xf92da558
  407a27:	jmp    0xa5c1e3df
  407a2c:	or     al,0xcc
  407a2e:	mov    cl,BYTE PTR [edx+0x25]
  407a31:	stos   DWORD PTR es:[edi],eax
  407a32:	pop    edx
  407a33:	and    al,0xd7
  407a35:	sahf   
  407a36:	repz and al,0xf8
  407a39:	mov    esi,0x42e35c10
  407a3e:	add    BYTE PTR [esi+edi*2-0x26674ca1],al
  407a45:	mov    ebp,0x8c7b87dd
  407a4a:	mov    ch,ah
  407a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a4d:	push   cs
  407a4e:	mov    dl,0x25
  407a50:	rcl    DWORD PTR [eax-0x30],1
  407a53:	or     al,0xd1
  407a55:	mov    eax,0x197ea578
  407a5a:	mov    ebp,0xa3ca3fa
  407a5f:	xchg   ecx,eax
  407a60:	mov    eax,0x1c63ebae
  407a65:	ficom  WORD PTR [ebx]
  407a67:	rdmsr  
  407a69:	mov    cs,WORD PTR [edi+ecx*1]
  407a6c:	les    ecx,FWORD PTR [ebp+0x3b]
  407a6f:	push   edx
  407a70:	das    
  407a71:	adc    BYTE PTR [ebx],cl
  407a73:	hlt    
  407a74:	lock stc 
  407a76:	jns    0x407ac5
  407a78:	iret   
  407a79:	shr    BYTE PTR [eax+0x5f87d709],cl
  407a7f:	cwde   
  407a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a81:	es js  0x407a99
  407a84:	xor    BYTE PTR [eax+0x1cf00b7b],dh
  407a8a:	lods   eax,DWORD PTR ds:[esi]
  407a8b:	jl     0x407a33
  407a8d:	ins    DWORD PTR es:[edi],dx
  407a8e:	jecxz  0x407aff
  407a90:	aad    0x59
  407a92:	and    bl,ch
  407a94:	jno    0x407a9b
  407a96:	ds xchg ebx,eax
  407a98:	adc    dl,dh
  407a9a:	cmp    al,0x8b
  407a9c:	sbb    BYTE PTR [ecx+0x2b],bl
  407a9f:	into   
  407aa0:	sets   BYTE PTR [esi-0x10e33152]
  407aa7:	push   ebp
  407aa8:	sub    BYTE PTR [ecx+eiz*4+0x7e],al
  407aac:	mov    esi,0x74db6783
  407ab1:	and    eax,0x7558adbb
  407ab6:	faddp  st(7),st
  407ab8:	fs jge 0x407aad
  407abb:	inc    edi
  407abc:	rol    DWORD PTR [ebx],cl
  407abe:	adc    BYTE PTR [eax+0x45d9d5b9],bl
  407ac4:	test   BYTE PTR [ecx-0x1464922e],ch
  407aca:	fwait
  407acb:	sub    DWORD PTR [edx],0xffffffe4
  407ace:	jne    0x407ae6
  407ad0:	lods   al,BYTE PTR ds:[esi]
  407ad1:	dec    ebx
  407ad2:	(bad)  
  407ad3:	fwait
  407ad4:	xlat   BYTE PTR ds:[ebx]
  407ad5:	aas    
  407ad6:	hlt    
  407ad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad8:	xchg   esi,eax
  407ad9:	ss push ds
  407adb:	ret    
  407adc:	mov    DWORD PTR [ebx+0x61ee7857],esp
  407ae2:	mov    ds:0xf9680c2,al
  407ae7:	jge    0x407a69
  407ae9:	test   BYTE PTR [edi],0xd2
  407aec:	sub    dh,BYTE PTR [esi+ebx*2]
  407aef:	and    bl,BYTE PTR [ebx]
  407af1:	lds    edx,FWORD PTR [ebx+ebx*4+0x237055b6]
  407af8:	out    0x4d,al
  407afa:	inc    esp
  407afb:	or     BYTE PTR [edx+0x3],dh
  407afe:	jp     0x407ae5
  407b00:	mov    ecx,ebx
  407b02:	sar    BYTE PTR [ebx+0x48d77e2f],1
  407b08:	retf   
  407b09:	stos   DWORD PTR es:[edi],eax
  407b0a:	stos   DWORD PTR es:[edi],eax
  407b0b:	adc    al,0xbc
  407b0d:	xchg   edx,eax
  407b0e:	or     edi,DWORD PTR [ebx-0x4b]
  407b11:	push   ecx
  407b12:	cmp    BYTE PTR [esi-0x6e],dh
  407b15:	aam    0xd3
  407b17:	xor    BYTE PTR [ebx+0x63],al
  407b1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b1b:	dec    ecx
  407b1c:	add    eax,0x9bfb87b3
  407b21:	jmp    0xab48:0x9e89447f
  407b28:	jb     0x407b42
  407b2a:	dec    ebp
  407b2b:	xsha1  (bad)
  407b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b2d:	or     al,BYTE PTR [eax]
  407b2f:	sti    
  407b30:	aam    0x7a
  407b32:	aam    0x9f
  407b34:	cmp    al,BYTE PTR [ecx-0x6854f0fc]
  407b3a:	stc    
  407b3b:	pop    edi
  407b3c:	cwde   
  407b3d:	fwait
  407b3e:	and    ecx,DWORD PTR [ecx]
  407b40:	dec    edi
  407b41:	fnsave [eax+ecx*4-0x3f057632]
  407b48:	or     BYTE PTR [eax],ah
  407b4a:	mov    esi,0x726af54
  407b4f:	shl    BYTE PTR [esp+ebx*2],1
  407b52:	std    
  407b53:	or     eax,0xf00f1cb8
  407b58:	and    BYTE PTR [edx],0x0
  407b5b:	fsubr  DWORD PTR [eax]
  407b5d:	ja     0x407af6
  407b5f:	stos   DWORD PTR es:[edi],eax
  407b60:	leave  
  407b61:	addr16 repnz out 0x7c,eax
  407b65:	xchg   ebp,eax
  407b66:	loopne 0x407b67
  407b68:	les    eax,FWORD PTR [edx]
  407b6a:	fwait
  407b6b:	mov    cs,WORD PTR [edi]
  407b6d:	mov    WORD PTR [eax-0x43],ss
  407b70:	mov    esi,0xb280707
  407b75:	aaa    
  407b76:	or     ebp,DWORD PTR [eax+esi*8+0x16]
  407b7a:	push   es
  407b7b:	popa   
  407b7c:	gs ja  0x407bdd
  407b7f:	dec    esi
  407b80:	lahf   
  407b81:	mov    bh,BYTE PTR [edx+0x5743f5c6]
  407b87:	jno    0x407bec
  407b89:	adc    BYTE PTR [esi+0xb268451],0xa0
  407b90:	outs   dx,BYTE PTR ds:[esi]
  407b91:	xchg   ebp,eax
  407b92:	scas   al,BYTE PTR es:[edi]
  407b93:	(bad)  
  407b94:	mov    ebp,0x82109ae5
  407b99:	scas   eax,DWORD PTR es:[edi]
  407b9a:	aas    
  407b9b:	gs scas eax,DWORD PTR es:[edi]
  407b9d:	outs   dx,DWORD PTR ds:[esi]
  407b9e:	(bad)  
  407b9f:	pop    eax
  407ba0:	cs push eax
  407ba2:	or     BYTE PTR [eax-0x7],al
  407ba5:	and    DWORD PTR [ecx],edx
  407ba7:	es aas 
  407ba9:	mov    ch,0x6f
  407bab:	cli    
  407bac:	sar    BYTE PTR [edi],1
  407bae:	push   edx
  407baf:	ret    
  407bb0:	ds jl  0x407bc2
  407bb3:	test   DWORD PTR [esi],eax
  407bb5:	rcl    BYTE PTR [edx+0x5a],1
  407bb8:	aad    0xd0
  407bba:	dec    ecx
  407bbb:	call   0xf559:0x3d2fb560
  407bc2:	pop    esp
  407bc3:	rol    ebx,0x48
  407bc6:	popf   
  407bc7:	and    bh,bh
  407bc9:	xor    BYTE PTR [edx],ah
  407bcb:	sub    eax,0x8fea8a4f
  407bd0:	pusha  
  407bd1:	rcr    bl,1
  407bd3:	and    BYTE PTR [esi-0x6210fd2b],ch
  407bd9:	push   ss
  407bda:	pmullw mm2,mm4
  407bdd:	fstp   DWORD PTR [ecx]
  407bdf:	ds cwde 
  407be1:	fld    DWORD PTR [edx+0x3a415df7]
  407be7:	bound  edi,QWORD PTR [esi+0x3c]
  407bea:	shr    DWORD PTR [eax-0x14],1
  407bed:	sub    ebp,eax
  407bef:	adc    ah,BYTE PTR [esi+0x72268b86]
  407bf5:	cmp    eax,0xd08ad031
  407bfa:	mov    ebp,0xf343219e
  407bff:	adc    DWORD PTR [esi-0x63],edi
  407c02:	jp     0x407bed
  407c04:	add    dh,BYTE PTR [esi]
  407c06:	mov    ecx,0xf7881c9c
  407c0b:	mov    dl,0x45
  407c0d:	push   esp
  407c0e:	mov    ecx,DWORD PTR [ebx+0xdad3b52]
  407c14:	sub    al,0x57
  407c16:	int3   
  407c17:	push   esi
  407c18:	xor    BYTE PTR ds:0x246a586e,dh
  407c1e:	sub    al,0x2d
  407c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c21:	jae    0x407c81
  407c23:	jmp    DWORD PTR [ecx]
  407c25:	xchg   ebx,eax
  407c26:	(bad)  
  407c28:	mov    edi,0x78941f1a
  407c2d:	out    dx,al
  407c2e:	xchg   esi,eax
  407c2f:	mov    ah,ah
  407c31:	into   
  407c32:	fnsave [eax+0x6f]
  407c35:	push   edx
  407c36:	dec    ebx
  407c37:	push   ebp
  407c38:	xor    ecx,esi
  407c3a:	ja     0x407bea
  407c3c:	nop
  407c3d:	cld    
  407c3e:	pop    ss
  407c3f:	xor    BYTE PTR [esi-0x66a61ad0],cl
  407c45:	pop    ecx
  407c46:	mov    al,0xcb
  407c48:	seto   BYTE PTR [edi-0x385fc0d6]
  407c4f:	neg    DWORD PTR [ebp+0x7ca994a6]
  407c55:	xchg   ebx,eax
  407c56:	sbb    DWORD PTR [edx+eiz*8-0x1483a7dc],0x59
  407c5e:	(bad)  
  407c5f:	pop    ss
  407c60:	sub    DWORD PTR [eax-0x3b00d7b1],ecx
  407c66:	je     0x407c61
  407c68:	rcl    esp,0xc7
  407c6b:	lods   al,BYTE PTR ds:[esi]
  407c6c:	jmp    ebp
  407c6e:	sub    dh,BYTE PTR [ebp+0x4dac2ffc]
  407c74:	stos   DWORD PTR es:[edi],eax
  407c75:	int    0xbb
  407c77:	test   eax,0x4074476c
  407c7c:	add    al,0xda
  407c7e:	call   0xbb277a9
  407c83:	stos   BYTE PTR es:[edi],al
  407c84:	test   DWORD PTR [esi],edx
  407c86:	retf   0x32ec
  407c89:	ins    BYTE PTR es:[edi],dx
  407c8a:	ret    0x73c3
  407c8d:	shl    BYTE PTR ds:0x4d605109,cl
  407c93:	lods   al,BYTE PTR ds:[esi]
  407c94:	dec    edi
  407c95:	nop
  407c96:	and    ah,BYTE PTR [esi+0x4c]
  407c99:	inc    eax
  407c9a:	xor    dh,bl
  407c9c:	pop    ebx
  407c9d:	xchg   edi,eax
  407c9e:	enter  0xdea3,0x34
  407ca2:	jo     0x407c70
  407ca4:	cmp    DWORD PTR [eax-0x80],edx
  407ca7:	data16 sub BYTE PTR [ecx],dh
  407caa:	or     bl,BYTE PTR [edi-0x11]
  407cad:	xchg   esi,eax
  407cae:	cs pop ebx
  407cb0:	or     al,0xf
  407cb2:	adc    edi,DWORD PTR [ecx-0xe0b69c7]
  407cb8:	mov    edx,0x1136e63a
  407cbd:	sub    eax,0xaf7f62b6
  407cc2:	or     DWORD PTR [ecx],0xc
  407cc5:	mov    dh,0xb3
  407cc7:	inc    eax
  407cc8:	adc    ch,cl
  407cca:	jp     0x407cbc
  407ccc:	cdq    
  407ccd:	clc    
  407cce:	dec    ebp
  407ccf:	in     al,0x9
  407cd1:	sbb    al,0xcc
  407cd3:	sub    ebp,eax
  407cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd6:	push   ebx
  407cd7:	cmc    
  407cd8:	xchg   DWORD PTR [eax],ebx
  407cda:	out    dx,al
  407cdb:	mov    DWORD PTR [esp+edx*8],ebp
  407cde:	inc    ebx
  407cdf:	fst    DWORD PTR [esi+0x34a4cd2c]
  407ce5:	and    eax,0x930c96bc
  407cea:	rcl    BYTE PTR [eax],1
  407cec:	sub    esi,DWORD PTR [eax+ecx*4-0x25]
  407cf0:	push   eax
  407cf1:	adc    ebx,edx
  407cf3:	adc    cl,BYTE PTR [ebx]
  407cf5:	inc    ebp
  407cf6:	cs mov ah,0xcb
  407cf9:	mov    bl,al
  407cfb:	jg     0x407cf8
  407cfd:	test   BYTE PTR [esi+0x7e],dl
  407d00:	cdq    
  407d01:	mov    eax,0xe0ebc868
  407d06:	pop    edx
  407d07:	rol    BYTE PTR [eax+0x58e23a80],cl
  407d0d:	call   0x8650dfbf
  407d12:	adc    edx,DWORD PTR ds:0x3a66c521
  407d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d19:	hlt    
  407d1a:	push   ds
  407d1b:	pop    edx
  407d1c:	ins    BYTE PTR es:[edi],dx
  407d1d:	lods   eax,DWORD PTR ds:[esi]
  407d1e:	(bad)  
  407d1f:	fisub  WORD PTR [eax]
  407d21:	(bad)  
  407d22:	push   cs
  407d23:	call   0x37d7:0xc032ee00
  407d2a:	lods   eax,DWORD PTR ds:[esi]
  407d2b:	jmp    0x3935:0x74659cd6
  407d32:	mov    ch,BYTE PTR [edi-0x48]
  407d35:	jb     0x407ce5
  407d37:	test   BYTE PTR [ebp-0x64],dl
  407d3a:	adc    BYTE PTR [eax],cl
  407d3c:	jmp    FWORD PTR [ecx-0x62b65ea1]
  407d42:	xor    edi,DWORD PTR [esi]
  407d44:	nop
  407d45:	(bad)  
  407d46:	loop   0x407db8
  407d48:	pop    eax
  407d49:	push   es
  407d4a:	xlat   BYTE PTR ds:[ebx]
  407d4b:	retf   
  407d4c:	shr    DWORD PTR [ebp-0x5],cl
  407d4f:	cmp    al,0xf2
  407d51:	mov    esi,0x4483336d
  407d56:	sbb    bl,BYTE PTR [ebp-0x7a]
  407d59:	adc    BYTE PTR [esi+0x434143af],ah
  407d5f:	arpl   dx,si
  407d61:	loop   0x407dc1
  407d63:	test   BYTE PTR [eax+0x35],0xa7
  407d67:	imul   ecx,DWORD PTR [esi-0x6da2b1e7],0x7f
  407d6e:	mov    ds:0x2a1862cb,eax
  407d73:	add    al,0x44
  407d75:	push   ebx
  407d76:	jb     0x407db5
  407d78:	ins    BYTE PTR es:[edi],dx
  407d79:	mov    esp,0x29bfa110
  407d7e:	mov    al,ds:0x665754aa
  407d83:	inc    edx
  407d84:	(bad)  
  407d85:	loopne 0x407d59
  407d87:	xchg   ecx,eax
  407d88:	repnz and eax,0xc235eb51
  407d8e:	hlt    
  407d8f:	or     al,0x6d
  407d91:	cli    
  407d92:	mov    dh,0xd3
  407d94:	jg     0x407d21
  407d96:	retf   0x8105
  407d99:	call   0x2430:0xb09c0007
  407da0:	sti    
  407da1:	in     al,0x54
  407da3:	lods   al,BYTE PTR ds:[esi]
  407da4:	addr16 push esp
  407da6:	push   0x8276ee6c
  407dab:	enter  0xbe8f,0xbd
  407daf:	sbb    esp,ecx
  407db1:	fsub   DWORD PTR [eax+edx*1]
  407db4:	cmp    eax,0xff23b346
  407db9:	nop
  407dba:	inc    ebp
  407dbb:	clc    
  407dbc:	fcmovnb st,st(3)
  407dbe:	mov    ebp,DWORD PTR [edi+0x868754b]
  407dc4:	jbe    0x407e38
  407dc6:	lods   al,BYTE PTR es:[si]
  407dc9:	shl    BYTE PTR [ebx+0x1b],cl
  407dcc:	or     al,dl
  407dce:	in     al,dx
  407dcf:	in     al,dx
  407dd0:	pop    ebp
  407dd1:	(bad)  
  407dd2:	fisttp WORD PTR [edx+edi*2]
  407dd5:	cmp    al,0xbc
  407dd7:	in     al,0x0
  407dd9:	aad    0xaa
  407ddb:	(bad)  
  407ddc:	pop    es
  407ddd:	(bad)  
  407dde:	mov    ah,0x9c
  407de0:	mov    edx,0xe265cf03
  407de5:	or     dl,BYTE PTR [eax-0x1412f00]
  407deb:	sbb    ecx,eax
  407ded:	outs   dx,BYTE PTR ds:[esi]
  407dee:	shr    BYTE PTR [esi+0x6d],0xaa
  407df2:	inc    ebx
  407df3:	sbb    BYTE PTR [ecx],bl
  407df5:	cli    
  407df6:	add    eax,0xad28b3ab
  407dfb:	push   edx
  407dfc:	dec    edx
  407dfd:	mov    ebx,DWORD PTR [edx+0xae65e33]
  407e03:	popa   
  407e04:	jb     0x407dbb
  407e06:	fcom   DWORD PTR [edx-0x54]
  407e09:	mov    DWORD PTR [edi+0x3c7ec94b],ebx
  407e0f:	mov    al,0xe4
  407e11:	in     eax,0x5
  407e13:	sbb    ah,BYTE PTR [ebp+0x204bf3b6]
  407e19:	push   eax
  407e1a:	das    
  407e1b:	and    esi,DWORD PTR [eax-0x18]
  407e1e:	inc    esi
  407e1f:	ds mov edi,0x8a690ec3
  407e25:	cmp    BYTE PTR [esi],al
  407e27:	sti    
  407e28:	cwde   
  407e29:	inc    edx
  407e2a:	adc    edi,ebx
  407e2c:	add    BYTE PTR [edi-0x3c],ah
  407e2f:	mov    eax,0x718484bf
  407e34:	cs xor al,0x9b
  407e37:	mov    al,0x68
  407e39:	in     al,dx
  407e3a:	not    BYTE PTR [ebx+0x1d103482]
  407e40:	pop    es
  407e41:	cmp    eax,0xf674db7
  407e46:	iret   
  407e47:	int    0xe2
  407e49:	sbb    esp,DWORD PTR [esi+0x41f703bc]
  407e4f:	lods   eax,DWORD PTR ds:[esi]
  407e50:	jnp    0x407e89
  407e52:	pop    ebx
  407e53:	xchg   ebp,eax
  407e54:	adc    al,0x40
  407e56:	push   0x42685a55
  407e5b:	xchg   ebp,eax
  407e5c:	js     0x407e35
  407e5e:	jnp    0x407de4
  407e60:	adc    DWORD PTR [esi+0x40],edi
  407e63:	or     eax,0xe05736b1
  407e68:	and    cl,dl
  407e6a:	inc    ebx
  407e6b:	iret   
  407e6c:	mov    eax,esp
  407e6e:	pop    ss
  407e6f:	pop    edi
  407e70:	and    DWORD PTR [ecx],0xffffff82
  407e73:	dec    esp
  407e74:	loopne 0x407e17
  407e76:	loop   0x407e67
  407e78:	jnp    0x407ecb
  407e7a:	in     al,0xa9
  407e7c:	mov    edx,0x9b34c8ad
  407e81:	adc    bl,BYTE PTR [edi]
  407e83:	jne    0x407e77
  407e85:	pop    ax
  407e87:	xchg   ebx,eax
  407e88:	or     BYTE PTR [eax+0x52],cl
  407e8b:	ficom  DWORD PTR [edx-0x49]
  407e8e:	xor    BYTE PTR fs:[esi],0x9
  407e92:	mul    DWORD PTR [eax-0x4a93c2f7]
  407e98:	fisub  DWORD PTR [ebp+0x10]
  407e9b:	mov    ah,0x51
  407e9d:	sub    BYTE PTR [edi+ebp*8-0x35f7fba3],0x7
  407ea5:	(bad)  
  407ea6:	push   cs
  407ea7:	mov    WORD PTR [edi],fs
  407ea9:	test   al,0x4f
  407eab:	scas   eax,DWORD PTR es:[edi]
  407eac:	push   ecx
  407ead:	addr16 test al,0xed
  407eb0:	clc    
  407eb1:	xor    esi,ecx
  407eb3:	mov    bl,al
  407eb5:	out    dx,al
  407eb6:	enter  0x3bee,0x44
  407eba:	xor    edi,eax
  407ebc:	push   esi
  407ebd:	mov    dl,0x28
  407ebf:	repnz and BYTE PTR [eax+ebx*4-0x4e035293],bl
  407ec7:	iret   
  407ec8:	in     eax,dx
  407ec9:	and    al,ch
  407ecb:	not    ah
  407ecd:	stc    
  407ece:	cmp    DWORD PTR [edx+0x6c],ebp
  407ed1:	aaa    
  407ed2:	mov    bh,0x20
  407ed4:	jecxz  0x407e95
  407ed6:	cmp    eax,0xea8aa4af
  407edb:	fcom   DWORD PTR [ebx+0x5f]
  407ede:	mov    edi,DWORD PTR [edi-0x25]
  407ee1:	push   edx
  407ee2:	pop    ebx
  407ee3:	jge    0x407e67
  407ee5:	push   ds
  407ee6:	repnz cmc 
  407ee8:	shl    edi,0x7d
  407eeb:	pop    es
  407eec:	push   cs
  407eed:	pop    ecx
  407eee:	jmp    0x407e8f
  407ef0:	fisub  DWORD PTR [edi+0x4a3f73d0]
  407ef6:	fsub   QWORD PTR [eax]
  407ef8:	rcl    BYTE PTR [edi],0xd8
  407efb:	mov    ebp,ss
  407efd:	add    dl,BYTE PTR [eax]
  407eff:	enter  0x1ae2,0x26
  407f03:	xchg   BYTE PTR [ebp-0x7b],dh
  407f06:	xor    ecx,DWORD PTR [ecx]
  407f08:	dec    eax
  407f09:	mov    cl,0x75
  407f0b:	push   ebx
  407f0c:	fdiv   QWORD PTR [ecx+0x2281b198]
  407f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f13:	cmp    DWORD PTR [esi+0xc3fde10],ecx
  407f19:	ja     0x407f2d
  407f1b:	fcomp  QWORD PTR [esi+0x7a]
  407f1e:	mov    ds:0xb7348b93,eax
  407f23:	cwde   
  407f24:	mov    dh,0xed
  407f26:	mov    dl,0xdc
  407f28:	retf   
  407f29:	push   edx
  407f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f2b:	bound  ebx,QWORD PTR [edi+0x71b120d7]
  407f31:	out    0x7c,eax
  407f33:	cmp    eax,DWORD PTR [ebp+esi*1-0x73]
  407f37:	mov    al,0xf4
  407f39:	xor    eax,0xb4bb7259
  407f3e:	sbb    bl,BYTE PTR [edx+0x6f]
  407f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f42:	loopne 0x407ef5
  407f44:	lods   al,BYTE PTR ds:[esi]
  407f45:	ficomp DWORD PTR [eax-0x23]
  407f48:	mov    gs,WORD PTR [ecx+0x652ce35a]
  407f4e:	call   0xd74edbe1
  407f53:	imul   esi,ebp,0xffffffff
  407f56:	xchg   edi,eax
  407f57:	dec    esi
  407f58:	test   eax,0xfdd670b5
  407f5d:	jge    0x407f3e
  407f5f:	ret    0xca80
  407f62:	adc    BYTE PTR [edi+0x21631322],0x5d
  407f69:	and    edi,esi
  407f6b:	mov    esp,0xd8b11342
  407f70:	and    esp,DWORD PTR [esi]
  407f72:	xlat   BYTE PTR ds:[ebx]
  407f73:	jb     0x407f2b
  407f75:	xchg   ecx,eax
  407f76:	mov    DWORD PTR [eax+0x21],esp
  407f79:	mov    ecx,0x472a6d9
  407f7e:	sbb    DWORD PTR [edi-0x73e6a16c],edi
  407f84:	jo     0x407f1e
  407f86:	push   es
  407f87:	rcl    BYTE PTR ds:0x751d4318,cl
  407f8d:	outs   dx,DWORD PTR ds:[esi]
  407f8e:	sub    ecx,esi
  407f90:	and    DWORD PTR ds:0xeed6d057,edi
  407f96:	cmp    DWORD PTR ds:0x5ed23aab,ecx
  407f9c:	jmp    0x407fe3
  407f9e:	sbb    ebp,ecx
  407fa0:	sbb    al,0x8e
  407fa2:	mov    bl,BYTE PTR [ecx+edi*1-0x6ca59da]
  407fa9:	dec    ebx
  407faa:	js     0x407f8e
  407fac:	leave  
  407fad:	pop    eax
  407fae:	cdq    
  407faf:	push   ss
  407fb0:	mov    ds:0x41600e2e,eax
  407fb5:	out    0x36,al
  407fb7:	dec    eax
  407fb8:	inc    ebp
  407fb9:	clc    
  407fba:	sub    bh,BYTE PTR [esi-0x25f5d436]
  407fc0:	pop    ebx
  407fc1:	call   0x452e7846
  407fc6:	sahf   
  407fc7:	adc    ebp,DWORD PTR [ebx-0x3bcf15f7]
  407fcd:	shl    BYTE PTR [esp+eax*1],cl
  407fd0:	and    al,0xe5
  407fd2:	add    dl,bh
  407fd4:	sar    eax,0x78
  407fd7:	inc    edx
  407fd8:	pop    eax
  407fd9:	and    BYTE PTR [esi],bl
  407fdb:	jle    0x407f99
  407fdd:	ja     0x40805e
  407fdf:	loope  0x408054
  407fe1:	sbb    bl,BYTE PTR [edi+0x29d7bd7]
  407fe7:	in     eax,0x47
  407fe9:	xchg   ebx,eax
  407fea:	inc    ecx
  407feb:	jo     0x407fa6
  407fed:	xchg   edi,eax
  407fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fef:	push   0xffffffab
  407ff1:	cmp    al,0x7f
  407ff3:	movntps XMMWORD PTR [ebx],xmm3
  407ff6:	idiv   DWORD PTR [edx+0x13]
  407ff9:	bound  eax,QWORD PTR [edi-0x76]
  407ffc:	xor    dl,BYTE PTR [esi+0x2f]
  407fff:	repz mov bl,0x89
  408002:	retf   
  408003:	(bad)  
  408004:	icebp  
  408005:	lock xchg edi,eax
  408007:	sub    esi,esi
  408009:	aam    0xb4
  40800b:	add    bl,BYTE PTR [edx+esi*1-0x4d]
  40800f:	iret   
  408010:	out    0x15,al
  408012:	in     eax,0x66
  408014:	ficomp DWORD PTR [ebx]
  408016:	sahf   
  408017:	retf   
  408018:	int    0x38
  40801a:	or     bl,BYTE PTR [ecx]
  40801c:	jg     0x407fb0
  40801e:	imul   ebx,DWORD PTR [eax-0x962f723],0xf
  408025:	lock xchg ebx,eax
  408027:	jb     0x408058
  408029:	mov    al,0x7d
  40802b:	add    al,0x5
  40802d:	mov    ah,0xad
  40802f:	int    0x13
  408031:	fs rcl ch,1
  408034:	jbe    0x408000
  408036:	retf   
  408037:	sub    esp,DWORD PTR [ebx]
  408039:	mov    ds:0x49f43fb3,al
  40803e:	adc    BYTE PTR [ecx+0x1f71a8b5],bl
  408044:	mov    cs,WORD PTR [ebx+0x1f]
  408047:	das    
  408048:	jmp    0x9ab1:0x203c8713
  40804f:	add    edi,DWORD PTR [eax-0x3c8794f9]
  408055:	and    BYTE PTR [ebp-0x70],ch
  408058:	jmp    0x74dff3ad
  40805d:	dec    ebp
  40805e:	test   al,0xbb
  408060:	add    BYTE PTR [esi-0x1adc6c4],cl
  408066:	mov    ch,0x29
  408068:	add    BYTE PTR [ebx+0x7d],al
  40806b:	sbb    ch,BYTE PTR [esi+0x13]
  40806e:	ficomp WORD PTR [edx+0x76802ced]
  408074:	dec    ebx
  408075:	lods   al,BYTE PTR ds:[esi]
  408076:	xchg   ebp,eax
  408077:	jno    0x407ff9
  408079:	sbb    al,BYTE PTR [ecx+0x14]
  40807c:	clc    
  40807d:	retf   0x1d4b
  408080:	clc    
  408081:	jle    0x408021
  408083:	call   0xdf240f12
  408088:	or     eax,0xdcc2ba04
  40808d:	daa    
  40808e:	daa    
  40808f:	stos   DWORD PTR es:[edi],eax
  408090:	sub    DWORD PTR [esi],edx
  408092:	je     0x4080d4
  408094:	and    al,0x95
  408096:	daa    
  408097:	push   esp
  408098:	pop    esp
  408099:	test   al,0xa5
  40809b:	dec    eax
  40809c:	fstp   DWORD PTR [ebx]
  40809e:	bound  ebp,QWORD PTR [edx+0x40]
  4080a1:	and    al,0x2c
  4080a3:	push   edx
  4080a4:	mov    dh,0x67
  4080a6:	test   DWORD PTR [ecx-0x2a],eax
  4080a9:	fsubr  QWORD PTR [ebx]
  4080ab:	xchg   esp,eax
  4080ac:	sub    BYTE PTR [esi+0x17d04c79],ch
  4080b2:	mov    edx,0x1bf71087
  4080b7:	dec    ecx
  4080b8:	in     eax,0x36
  4080ba:	pop    edi
  4080bb:	ins    DWORD PTR es:[edi],dx
  4080bc:	mov    ds:0x7b02431c,al
  4080c1:	js     0x40805f
  4080c3:	(bad)  
  4080c5:	das    
  4080c6:	mov    ds:0xfc47ede8,eax
  4080cb:	and    DWORD PTR [ebx],ecx
  4080cd:	push   0x17
  4080cf:	xlat   BYTE PTR ds:[ebx]
  4080d0:	pop    ds
  4080d1:	popa   
  4080d2:	stos   DWORD PTR es:[edi],eax
  4080d3:	repnz in al,0x54
  4080d6:	jns    0x4080cc
  4080d8:	and    bh,bh
  4080da:	popf   
  4080db:	dec    edx
  4080dc:	out    dx,al
  4080dd:	aad    0xce
  4080df:	cmp    bh,BYTE PTR [edi+0x6b]
  4080e2:	test   DWORD PTR [ebx+0x11324635],esi
  4080e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080e9:	sti    
  4080ea:	and    BYTE PTR [edx+0x213b456b],0x7a
  4080f1:	or     al,0xa6
  4080f3:	cmp    al,0x45
  4080f5:	test   BYTE PTR [eax],bl
  4080f7:	rol    eax,1
  4080f9:	dec    eax
  4080fa:	xchg   ecx,eax
  4080fb:	add    al,0xfe
  4080fd:	sbb    ebx,DWORD PTR [edi-0x383751c]
  408103:	sbb    BYTE PTR [ecx+0x74],0x63
  408107:	inc    edx
  408108:	daa    
  408109:	ror    BYTE PTR ds:[eax],1
  40810c:	mov    bh,0xaf
  40810e:	aas    
  40810f:	or     DWORD PTR [esi-0x7cb33f28],ebx
  408115:	adc    al,BYTE PTR [ebx]
  408117:	inc    ch
  408119:	adc    DWORD PTR [esi+0x75],eax
  40811c:	repnz push esp
  40811e:	pop    ecx
  40811f:	lods   al,BYTE PTR ds:[esi]
  408120:	mov    edi,edi
  408122:	mov    edi,DWORD PTR [edx+eiz*8]
  408125:	aaa    
  408126:	iret   
  408127:	and    ebp,DWORD PTR [ebx+0x3ea2eeb7]
  40812d:	(bad)  [ecx+0x1a]
  408130:	add    ecx,DWORD PTR [ecx]
  408132:	scas   eax,DWORD PTR es:[edi]
  408133:	fwait
  408134:	outs   dx,DWORD PTR ds:[esi]
  408135:	call   0x21609aae
  40813a:	mul    DWORD PTR [ebx+0x4f780aad]
  408140:	(bad)  
  408141:	jmp    0xa65d2a9a
  408146:	xor    al,BYTE PTR [ebp+0x25630eba]
  40814c:	adc    dh,BYTE PTR [edi+0x6c0d6acd]
  408152:	cmc    
  408153:	lahf   
  408154:	cmp    DWORD PTR [edi],eax
  408156:	cmp    eax,0xdcfc1e2d
  40815b:	clc    
  40815c:	adc    DWORD PTR [esi-0xd92a1f2],0x3f
  408163:	mov    ch,0x86
  408165:	cmp    DWORD PTR [eax+0x1f1602d5],edi
  40816b:	mov    bh,0x14
  40816d:	std    
  40816e:	aad    0x65
  408170:	popf   
  408171:	jl     0x408116
  408173:	cmp    eax,0xd161fc2f
  408178:	and    al,0x6c
  40817a:	test   BYTE PTR [ebx+0x39],ch
  40817d:	nop
  40817e:	fcmovu st,st(1)
  408180:	or     BYTE PTR [edi+0x7f],al
  408183:	sar    DWORD PTR [esi-0x797ca35],1
  408189:	test   eax,0x3f3176a1
  40818e:	jo     0x408129
  408190:	repnz (bad) 
  408192:	pop    edi
  408193:	pop    esi
  408194:	aaa    
  408195:	jp     0x4081a1
  408197:	ins    DWORD PTR es:[edi],dx
  408198:	jecxz  0x4081c9
  40819a:	xchg   ebx,eax
  40819b:	mov    bl,0xdc
  40819d:	ret    
  40819e:	pop    esp
  40819f:	push   cs
  4081a0:	jbe    0x408130
  4081a2:	call   0xbd7:0x72070382
  4081a9:	in     al,dx
  4081aa:	jmp    0xd5963417
  4081af:	fdivrp st(4),st
  4081b1:	aaa    
  4081b2:	add    ecx,DWORD PTR [ecx+eax*2]
  4081b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081b6:	pusha  
  4081b7:	jmp    0xfb0a:0x14e082f8
  4081be:	shl    ah,1
  4081c0:	cdq    
  4081c1:	mul    BYTE PTR [eax+0x11389977]
  4081c7:	rol    DWORD PTR [edi+ebp*8-0x33],0x6b
  4081cc:	cli    
  4081cd:	add    DWORD PTR [eax-0x66c8ab8d],ecx
  4081d3:	mov    ebp,0xfecd987a
  4081d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081d9:	test   BYTE PTR [edx],dh
  4081db:	scas   al,BYTE PTR es:[edi]
  4081dc:	ss mov bl,0x54
  4081df:	sub    bh,bh
  4081e1:	out    0xaf,al
  4081e3:	add    DWORD PTR [edx],ecx
  4081e5:	xchg   eax,edi
  4081e7:	shl    BYTE PTR [ecx+0x3],cl
  4081ea:	sbb    ebx,edi
  4081ec:	sub    cl,dl
  4081ee:	xor    DWORD PTR [ebx],ebp
  4081f0:	iret   
  4081f1:	xor    DWORD PTR [ecx],ebx
  4081f3:	les    esp,FWORD PTR [esi-0x6a]
  4081f6:	xchg   ebp,eax
  4081f7:	sahf   
  4081f8:	sub    ah,dh
  4081fa:	scas   al,BYTE PTR es:[edi]
  4081fb:	aaa    
  4081fc:	lods   eax,DWORD PTR ds:[esi]
  4081fd:	fmul   DWORD PTR [ebp+0x77]
  408200:	int    0x3d
  408202:	dec    ebp
  408203:	retf   0x89b1
  408206:	sub    BYTE PTR [eax],ah
  408208:	push   ebx
  408209:	je     0x4081ad
  40820b:	push   0xffffff85
  40820d:	jmp    0xdb4c1c57
  408212:	add    BYTE PTR [ebp+0x18],ah
  408215:	fistp  QWORD PTR [ebp-0x41]
  408218:	pop    ds
  408219:	mov    WORD PTR [esi+ebx*2],fs
  40821c:	into   
  40821d:	and    ch,0xbb
  408220:	sbb    al,ah
  408222:	lahf   
  408223:	push   0xffffff9f
  408225:	aad    0xd7
  408227:	pusha  
  408228:	fldcw  WORD PTR [edx]
  40822a:	mov    ebx,DWORD PTR [eax-0x50db91f0]
  408230:	dec    edx
  408231:	or     BYTE PTR [esi-0x2bc21cb3],al
  408237:	in     eax,0x6d
  408239:	cmp    DWORD PTR [esi-0xfa966bd],0xffffff8e
  408240:	xchg   edx,eax
  408241:	aas    
  408242:	cwde   
  408243:	repnz std 
  408245:	repz xor BYTE PTR [ecx-0x5aee8939],bh
  40824c:	dec    edx
  40824d:	xchg   BYTE PTR [eax+0x29],dh
  408250:	inc    BYTE PTR [edx-0x40]
  408253:	add    al,0x9b
  408255:	shr    DWORD PTR cs:[esi],cl
  408258:	sub    bl,ah
  40825a:	std    
  40825b:	push   es
  40825c:	repz fldcw WORD PTR [si]
  408260:	push   ebx
  408261:	icebp  
  408262:	push   0xd4f2a624
  408267:	sub    edi,DWORD PTR [ecx+0x57]
  40826a:	popa   
  40826b:	sub    al,0xe8
  40826d:	sbb    al,0x57
  40826f:	ret    0x1e10
  408272:	scas   eax,DWORD PTR es:[edi]
  408273:	pushf  
  408274:	jns    0x408225
  408276:	(bad)  
  408277:	jmp    0xa720:0xc3c7845b
  40827e:	dec    eax
  40827f:	ret    
  408280:	add    BYTE PTR [eax],ch
  408282:	pop    ebx
  408283:	jp     0x40822d
  408285:	push   ebx
  408286:	bound  edx,QWORD PTR [ecx+0x16759986]
  40828c:	bound  edi,QWORD PTR [eax+0x58]
  40828f:	inc    ebp
  408290:	rcr    cl,cl
  408292:	xchg   BYTE PTR [edi],bh
  408294:	jae    0x4082e5
  408296:	sti    
  408297:	retf   
  408298:	lahf   
  408299:	mov    ds:0x4e370e6,al
  40829e:	jnp    0x408246
  4082a0:	dec    ecx
  4082a1:	clc    
  4082a2:	mov    DWORD PTR [eax-0x45f6bcaa],0x169828f2
  4082ac:	and    ebp,DWORD PTR [edi-0x5b]
  4082af:	cmp    al,0x76
  4082b1:	push   ebx
  4082b2:	(bad)  
  4082b3:	gs out 0x91,eax
  4082b6:	adc    bh,cl
  4082b8:	pop    esi
  4082b9:	bnd jnp 0x40831a
  4082bc:	ror    BYTE PTR [esp+ebp*1-0x21],0xa
  4082c1:	stos   BYTE PTR es:[edi],al
  4082c2:	jecxz  0x408262
  4082c4:	loope  0x4082b6
  4082c6:	pop    ebp
  4082c7:	pop    ebp
  4082c8:	xor    al,0x6f
  4082ca:	add    dh,BYTE PTR [edx+0x16]
  4082cd:	lods   al,BYTE PTR ds:[esi]
  4082ce:	xor    al,0xed
  4082d0:	retf   0xc345
  4082d3:	aaa    
  4082d4:	and    eax,0x6e44a6e3
  4082d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082da:	sub    edx,DWORD PTR [ebx+0x3e]
  4082dd:	pushf  
  4082de:	jo     0x4082fb
  4082e0:	cs adc edx,edi
  4082e3:	hlt    
  4082e4:	xchg   edi,eax
  4082e5:	fiadd  DWORD PTR [eax-0x1d]
  4082e8:	mov    esi,0x7b776ec7
  4082ed:	call   0xfe506f8
  4082f2:	pusha  
  4082f3:	rcl    bl,1
  4082f5:	push   ebp
  4082f6:	dec    edx
  4082f7:	or     ah,dh
  4082f9:	inc    edi
  4082fa:	retf   0xa6eb
  4082fd:	out    0xd1,al
  4082ff:	mov    ebp,0x1ade4990
  408304:	mov    esp,0xb6654875
  408309:	xchg   edi,eax
  40830a:	cmp    ebx,DWORD PTR [esi+0x42695080]
  408310:	xor    al,0x3
  408312:	xchg   ebp,eax
  408313:	(bad)  
  408314:	cmc    
  408315:	xchg   esp,eax
  408316:	std    
  408317:	loope  0x408340
  408319:	out    0x16,eax
  40831b:	mov    ecx,0xb6a30826
  408320:	mov    edx,0x47ec54f2
  408325:	aaa    
  408326:	mov    ebx,0xf032989b
  40832b:	jae    0x40832d
  40832d:	jge    0x408320
  40832f:	jno    0x408350
  408331:	inc    edx
  408332:	adc    BYTE PTR [ebx+0x48],ch
  408335:	add    ebp,edx
  408337:	ret    
  408338:	mov    BYTE PTR [edi+esi*8],0x83
  40833c:	ficomp DWORD PTR [eax-0x66]
  40833f:	sbb    eax,0x3190a930
  408344:	addr16 (bad) 
  408347:	int3   
  408348:	bound  edx,QWORD PTR [eax-0x5e8a2c5c]
  40834e:	inc    ecx
  40834f:	out    0x72,al
  408351:	addr16 push cs
  408353:	cli    
  408354:	xchg   ecx,eax
  408355:	push   0xffffffe7
  408357:	add    cl,BYTE PTR [edi+0x1b0dd00c]
  40835d:	xor    ah,BYTE PTR [eax-0x7b]
  408360:	or     al,bh
  408362:	sub    al,bh
  408364:	sbb    eax,0x6a357931
  408369:	enter  0x65f9,0xfa
  40836d:	fnstenv [ecx+edi*2-0x2a079592]
  408374:	sar    bh,1
  408376:	dec    esp
  408377:	xchg   ecx,eax
  408378:	dec    esp
  408379:	ret    
  40837a:	xor    BYTE PTR [ecx+0x3340a22a],al
  408380:	ds or  ebx,edi
  408383:	sub    eax,0x41a56083
  408388:	test   DWORD PTR [si-0x3ac9],ecx
  40838d:	xor    al,BYTE PTR [edi-0x6e93137a]
  408393:	dec    esi
  408394:	add    DWORD PTR [ebx+0x682d1064],ebp
  40839a:	and    dh,ch
  40839c:	test   DWORD PTR [ebx+0x20],ecx
  40839f:	add    DWORD PTR [edx+0x6924d1f2],ebp
  4083a5:	popa   
  4083a6:	pop    ebp
  4083a7:	sub    esi,DWORD PTR [ecx]
  4083a9:	adc    DWORD PTR [edx+edx*1],edi
  4083ac:	sbb    DWORD PTR [edx+edx*4-0x672dc2b6],esi
  4083b3:	scas   al,BYTE PTR es:[edi]
  4083b4:	jnp    0x408355
  4083b6:	pop    ecx
  4083b7:	cmp    DWORD PTR [ebx+0x3b],edx
  4083ba:	push   ds
  4083bb:	xchg   ebx,eax
  4083bc:	shl    DWORD PTR [edi+ebx*1+0x62f9ba9d],1
  4083c3:	push   0xc736419d
  4083c8:	jge    0x4083eb
  4083ca:	jle    0x4083b2
  4083cc:	mov    ds:0x9108fd45,al
  4083d1:	sub    BYTE PTR [ebx],al
  4083d3:	jge    0x40842d
  4083d5:	cld    
  4083d6:	adc    DWORD PTR [esi],0xb4884dad
  4083dc:	mov    ds:0xd8cd306a,eax
  4083e1:	in     eax,dx
  4083e2:	or     eax,ecx
  4083e4:	xchg   bp,ax
  4083e6:	retf   0xa38e
  4083e9:	fisubr DWORD PTR [ebx+ebp*8-0x7cede7b4]
  4083f0:	scas   eax,DWORD PTR es:[edi]
  4083f1:	popf   
  4083f2:	sbb    al,0xc7
  4083f4:	data16 xchg BYTE PTR [esi+0x60],dh
  4083f8:	sbb    dl,BYTE PTR [ebx]
  4083fa:	sub    eax,0x121e344f
  4083ff:	lahf   
  408400:	lods   eax,DWORD PTR ds:[esi]
  408401:	jle    0x4083ca
  408403:	xor    edi,DWORD PTR [eax+0x278b45a2]
  408409:	adc    eax,0x65594f59
  40840e:	(bad)  
  40840f:	dec    ebx
  408410:	mov    al,0x14
  408412:	add    al,BYTE PTR [esi-0x3a2874ed]
  408418:	(bad)  
  408419:	adc    BYTE PTR [eax],dl
  40841b:	dec    esi
  40841c:	in     eax,0x8
  40841e:	sbb    BYTE PTR ds:0x909cb3df,0x17
  408425:	loope  0x40841f
  408427:	xchg   BYTE PTR [edx-0x11423826],al
  40842d:	in     al,0xca
  40842f:	pop    ss
  408430:	ss test al,0xee
  408433:	mov    DWORD PTR [edx-0x4e],edi
  408436:	xchg   ecx,eax
  408437:	shr    BYTE PTR [edx+eiz*2+0x20292635],cl
  40843e:	jno    0x40847f
  408440:	cwde   
  408441:	xchg   ecx,eax
  408442:	inc    ebp
  408443:	lock dec eax
  408445:	sub    ebx,DWORD PTR [esi+0x4b]
  408448:	xchg   ecx,edx
  40844a:	jbe    0x4084c8
  40844c:	xlat   BYTE PTR ds:[ebx]
  40844d:	jae    0x4084c7
  40844f:	push   eax
  408450:	ins    DWORD PTR es:[edi],dx
  408451:	xor    eax,0x4e5bc74e
  408456:	and    edx,DWORD PTR [ecx]
  408458:	sub    DWORD PTR [ecx],ecx
  40845a:	pop    ss
  40845b:	imul   edx,DWORD PTR [ebp+0x483254aa],0xcdf15504
  408465:	sub    al,0x40
  408467:	push   0xffffffd9
  408469:	icebp  
  40846a:	pop    ds
  40846b:	in     eax,0xe6
  40846d:	shr    DWORD PTR [ebx],cl
  40846f:	add    al,bh
  408471:	sbb    BYTE PTR [ebx+eax*8+0x3911782d],dh
  408478:	inc    edx
  408479:	out    0x9b,eax
  40847b:	lods   eax,DWORD PTR ds:[esi]
  40847c:	inc    edi
  40847d:	xchg   ecx,eax
  40847e:	enter  0xdbf5,0x87
  408482:	ret    0x6959
  408485:	cmp    ecx,DWORD PTR [esi+0x4cf42ff4]
  40848b:	or     eax,0x1771fd39
  408490:	cmp    bh,dl
  408492:	sti    
  408493:	loopne 0x4084da
  408495:	ins    DWORD PTR es:[edi],dx
  408496:	ret    0x7f71
  408499:	jae    0x408461
  40849b:	jo     0x4084b6
  40849d:	(bad)  
  40849f:	jae    0x408496
  4084a1:	sub    bl,0x57
  4084a4:	shr    DWORD PTR [ecx],1
  4084a6:	mov    edi,0x2fbcc8eb
  4084ab:	pushf  
  4084ac:	ins    DWORD PTR es:[edi],dx
  4084ad:	sbb    eax,0x8bfbcdaf
  4084b2:	mul    DWORD PTR [edi]
  4084b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4084b5:	pop    ebx
  4084b6:	jg     0x408511
  4084b8:	push   edi
  4084b9:	fiadd  WORD PTR [eax+ebp*8+0x1a2a5732]
  4084c0:	call   0xa91d:0x3ebc456d
  4084c7:	scas   al,BYTE PTR es:[edi]
  4084c8:	pop    ecx
  4084c9:	xchg   ebp,eax
  4084ca:	in     al,dx
  4084cb:	out    0x9b,eax
  4084cd:	cmp    BYTE PTR [ebp+0x1198b967],ah
  4084d3:	cmc    
  4084d4:	sub    eax,0xe97a2927
  4084d9:	in     al,dx
  4084da:	cmc    
  4084db:	mov    bl,BYTE PTR [edx+eax*2-0x2f]
  4084df:	stc    
  4084e0:	and    edx,DWORD PTR [edx]
  4084e2:	aaa    
  4084e3:	jo     0x408519
  4084e5:	out    0x70,al
  4084e7:	cdq    
  4084e8:	lock lahf 
  4084ea:	sub    ch,BYTE PTR [edx]
  4084ec:	cmp    ch,0x85
  4084ef:	ss das 
  4084f1:	mov    al,ds:0x6b28ef59
  4084f6:	and    cl,BYTE PTR [ebx-0x7add196e]
  4084fc:	stc    
  4084fd:	adc    ecx,DWORD PTR [ebp-0x61]
  408500:	popa   
  408501:	add    BYTE PTR [ecx],dl
  408503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408504:	mov    es,esi
  408506:	idiv   BYTE PTR [edi-0x49]
  408509:	adc    edx,DWORD PTR [edi+ebx*4+0x19eaf525]
  408510:	inc    ebp
  408511:	push   eax
  408512:	inc    BYTE PTR [ebx+0x45]
  408515:	xor    ch,bh
  408517:	pop    edx
  408518:	push   ebx
  408519:	jbe    0x408566
  40851b:	ss cmc 
  40851d:	sub    edx,DWORD PTR [ecx-0x7667a812]
  408523:	ins    BYTE PTR es:[edi],dx
  408524:	lods   al,BYTE PTR ds:[esi]
  408525:	dec    eax
  408526:	xor    bh,BYTE PTR [esi-0x6d]
  408529:	sahf   
  40852a:	out    0x6d,eax
  40852c:	and    eax,0xc4a50a94
  408531:	push   es
  408532:	fsub   DWORD PTR [ebx]
  408534:	repnz fist DWORD PTR [edi-0x2f]
  408538:	loope  0x4084eb
  40853a:	jecxz  0x4084fa
  40853c:	adc    al,0x69
  40853e:	mov    ecx,0x9bd75381
  408543:	addr16 mov ebp,0xb598d7da
  408549:	xor    cl,BYTE PTR ss:[ecx]
  40854c:	popa   
  40854d:	mov    esi,0x5aeef791
  408552:	jle    0x40850a
  408554:	ret    
  408555:	(bad)  
  408556:	mov    ebx,0x465aaa6f
  40855b:	or     DWORD PTR [edi],eax
  40855d:	jb     0x4085cf
  40855f:	mov    fs,WORD PTR [edx+0x18082ccd]
  408565:	addr16 push ss
  408567:	push   0x6a
  408569:	pop    ecx
  40856a:	sub    bl,dh
  40856c:	jmp    0x408590
  40856e:	mov    DWORD PTR [edx+ecx*1-0xd],ecx
  408572:	xchg   edx,eax
  408573:	mov    ebx,0x2a2ed8e9
  408578:	fisub  DWORD PTR [ebx+0x28]
  40857b:	cmp    al,0xcd
  40857d:	sub    dh,BYTE PTR [edi+0x2b938226]
  408583:	xor    DWORD PTR [edx],ecx
  408585:	jg     0x4085d2
  408587:	jl     0x408531
  408589:	cmp    ebp,edx
  40858b:	inc    edx
  40858c:	pop    ebx
  40858d:	adc    DWORD PTR [esi],edi
  40858f:	stos   BYTE PTR es:[edi],al
  408590:	in     al,dx
  408591:	mov    eax,0x9527ad20
  408596:	jne    0x4085f8
  408598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408599:	(bad)  
  40859a:	push   esi
  40859b:	mov    WORD PTR [edx],es
  40859d:	mov    BYTE PTR [esi+esi*8],ah
  4085a0:	loopne 0x408618
  4085a2:	and    eax,0x39b353dc
  4085a7:	mov    bh,0x74
  4085a9:	inc    esi
  4085aa:	mov    ch,0xb
  4085ac:	dec    ecx
  4085ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085af:	pusha  
  4085b0:	push   es
  4085b1:	mov    ecx,0xe8b08a1d
  4085b6:	mov    eax,0x85e9bd39
  4085bb:	aad    0xc8
  4085bd:	test   al,0x9c
  4085bf:	cld    
  4085c0:	call   0x2ec0:0x7482e1f3
  4085c7:	mov    esi,0x1bec975d
  4085cc:	xchg   ebp,eax
  4085cd:	sub    BYTE PTR [eax-0x168ae3d7],ah
  4085d3:	fmul   QWORD PTR [edx+0x1bec2ab1]
  4085d9:	into   
  4085da:	mov    ds:0x54e083d1,al
  4085df:	or     ebx,DWORD PTR [ebp+0x45]
  4085e2:	in     eax,dx
  4085e3:	ins    BYTE PTR es:[edi],dx
  4085e4:	pop    esi
  4085e5:	shr    BYTE PTR [ecx-0x52],0x4e
  4085e9:	xor    eax,DWORD PTR [edx]
  4085eb:	mov    ch,BYTE PTR [esi+0x5ef15eaa]
  4085f1:	cs mov ebp,0x71104696
  4085f7:	gs xchg ebx,eax
  4085f9:	add    edx,eax
  4085fb:	fnsave [ebx-0x4e]
  4085fe:	pushf  
  4085ff:	mov    ch,0x5a
  408601:	and    DWORD PTR [eax+ebp*2+0x33],esp
  408605:	cmp    bl,al
  408607:	in     al,dx
  408608:	mov    dl,0xff
  40860a:	mov    dh,0x86
  40860c:	push   ss
  40860d:	and    eax,0x86ffce11
  408612:	mov    DWORD PTR [edx-0x59],esi
  408615:	das    
  408616:	cli    
  408617:	stos   DWORD PTR es:[edi],eax
  408618:	or     edi,DWORD PTR ds:0x4db64b74
  40861e:	(bad)  
  40861f:	(bad)  
  408621:	iret   
  408622:	cs stos BYTE PTR es:[edi],al
  408624:	bound  esi,QWORD PTR [edi]
  408626:	adc    dh,BYTE PTR [edi-0x19a9a67]
  40862c:	xor    BYTE PTR [edx-0x8ad9aa7],bh
  408632:	into   
  408633:	push   0x88ae78b4
  408638:	sbb    bh,BYTE PTR [eax+0x27]
  40863b:	imul   esi,DWORD PTR [esi+0x63],0xf62556de
  408642:	fcmovu st,st(6)
  408644:	sub    BYTE PTR [ecx+0x3f324f4],0x4b
  40864b:	push   ebp
  40864c:	sti    
  40864d:	and    eax,0x76ce8543
  408652:	mov    ah,0x3
  408654:	mov    bl,0xf0
  408656:	inc    ebx
  408657:	add    DWORD PTR [esi+0x39],0xc1f335fd
  40865e:	mov    dh,0x6a
  408660:	scas   al,BYTE PTR es:[edi]
  408661:	out    0x7e,eax
  408663:	loope  0x40869f
  408665:	sbb    eax,0x6093ee69
  40866a:	adc    al,0x33
  40866c:	and    DWORD PTR [ebx+0xb26c58b],esp
  408672:	adc    dl,BYTE PTR ds:[edi-0x4498de1a]
  408679:	retf   
  40867a:	clc    
  40867b:	adc    eax,0x6f8645fe
  408680:	imul   eax,ecx,0xffffff96
  408683:	push   ebp
  408684:	cmp    ecx,DWORD PTR [eax+0x439d9f8]
  40868a:	mov    ecx,0x8a44faab
  40868f:	mov    edi,0x36456935
  408694:	xor    eax,0xb6c8159
  408699:	jb     0x4086c7
  40869b:	mov    esp,0x1f66fe2f
  4086a0:	fimul  WORD PTR [ebp-0x1]
  4086a3:	fs call 0x8130:0x96f0aad4
  4086ab:	mov    bh,0x7d
  4086ad:	stc    
  4086ae:	ins    DWORD PTR es:[edi],dx
  4086af:	sbb    ecx,ecx
  4086b1:	mov    esi,0xea050c88
  4086b7:	in     eax,dx
  4086b8:	pop    esp
  4086b9:	imul   BYTE PTR [esi]
  4086bb:	add    DWORD PTR [esi+0x10],eax
  4086be:	popa   
  4086bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c0:	inc    eax
  4086c1:	xchg   edx,eax
  4086c2:	pop    esi
  4086c3:	pop    ecx
  4086c4:	in     eax,dx
  4086c5:	dec    edi
  4086c6:	and    esp,DWORD PTR [eax+0x7f]
  4086c9:	dec    eax
  4086ca:	mov    ch,BYTE PTR [edx+ebx*2-0x34]
  4086ce:	mov    ecx,ecx
  4086d0:	dec    ecx
  4086d1:	pushf  
  4086d2:	xchg   ebx,eax
  4086d3:	retf   0x9044
  4086d6:	mov    edx,0x33036a57
  4086db:	rcr    BYTE PTR [edx-0x7d],cl
  4086de:	ret    0x5208
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x616e306
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  esi,QWORD PTR [edi-0x2f026431]
  408723:	mov    edi,DWORD PTR [edx]
  408725:	xor    BYTE PTR [edi+0x782b0da2],dl
  40872b:	mov    dh,0x18
  40872d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40872e:	sub    bh,BYTE PTR cs:[edx+0x15eb871d]
  408735:	sbb    al,0xfe
  408737:	fld    QWORD PTR [eax-0x6d801b06]
  40873d:	jae    0x4086f2
  40873f:	inc    ebp
  408740:	stc    
  408741:	and    DWORD PTR [ebx],ecx
  408743:	out    dx,al
  408744:	out    0x91,eax
  408746:	arpl   si,cx
  408748:	ror    cl,0xbd
  40874b:	adc    BYTE PTR [esi-0x28],dl
  40874e:	les    edx,FWORD PTR [eax]
  408750:	xchg   edx,eax
  408751:	add    ah,0x0
  408754:	ret    0x3ecd
  408757:	push   0xd
  408759:	xchg   ecx,eax
  40875a:	or     BYTE PTR [ecx],bh
  40875c:	pop    edi
  40875d:	mov    ds:0x92527b6e,al
  408762:	sahf   
  408763:	dec    BYTE PTR [ebp-0x71]
  408766:	(bad)  
  408767:	out    dx,al
  408768:	push   ecx
  408769:	cwde   
  40876a:	outs   dx,DWORD PTR ds:[esi]
  40876b:	sbb    BYTE PTR [edx+0x6f2ee660],bl
  408771:	imul   esp,DWORD PTR [ebx],0xdb07f97e
  408777:	inc    eax
  408778:	fldenv [esi-0x76]
  40877b:	dec    ebx
  40877c:	cdq    
  40877d:	fnstenv [ecx]
  40877f:	aas    
  408780:	in     eax,0x0
  408782:	inc    ebp
  408783:	shr    ebx,0x9b
  408786:	sub    dl,BYTE PTR [esi-0x3f4e67b7]
  40878c:	cli    
  40878d:	mov    ecx,0xa1230403
  408792:	cmc    
  408793:	inc    eax
  408794:	sbb    eax,0x8ac7047
  408799:	sub    cl,BYTE PTR [ebx-0x43]
  40879c:	jnp    0x40877a
  40879e:	jl     0x4087a6
  4087a0:	sub    eax,0xbcf52cdd
  4087a5:	ss mov cx,0x549f
  4087aa:	lods   al,BYTE PTR ds:[esi]
  4087ab:	mov    BYTE PTR [edi],bh
  4087ad:	in     eax,0x8c
  4087af:	call   0xf274:0xe2102616
  4087b6:	gs stos DWORD PTR es:[edi],eax
  4087b8:	mov    WORD PTR ds:0x9a99fc4f,ss
  4087be:	mov    ecx,eax
  4087c0:	cld    
  4087c1:	dec    eax
  4087c2:	mov    WORD PTR [ecx],gs
  4087c4:	dec    ebp
  4087c5:	js     0x40876d
  4087c7:	inc    ecx
  4087c8:	adc    cl,ch
  4087ca:	(bad)  
  4087cb:	pop    esi
  4087cc:	add    al,0x4
  4087ce:	int    0x1a
  4087d0:	ja     0x4087c9
  4087d2:	mov    esp,0xc09a551b
  4087d7:	inc    eax
  4087d8:	test   eax,0x2938804e
  4087dd:	aad    0x0
  4087df:	xor    DWORD PTR [esi],0xffffff81
  4087e2:	(bad)  
  4087e3:	xor    DWORD PTR [edi-0x53160616],esp
  4087e9:	push   cs
  4087ea:	xor    DWORD PTR [esi-0x1f3eb939],ebp
  4087f0:	mov    esp,0x2e3950f8
  4087f5:	pop    ds
  4087f6:	cmp    ebx,0x4b
  4087f9:	ins    DWORD PTR es:[edi],dx
  4087fa:	gs mov ss,edi
  4087fd:	sub    eax,0x9c36393e
  408802:	test   eax,0xd0cac997
  408807:	adc    bh,BYTE PTR [edi+0x3a]
  40880a:	pop    esp
  40880c:	jnp    0x40880d
  40880e:	pop    ecx
  40880f:	inc    esi
  408810:	int    0xf1
  408812:	pop    es
  408813:	xor    eax,0xcee96d06
  408818:	pop    esi
  408819:	xchg   edi,eax
  40881a:	ret    0xae31
  40881d:	xor    eax,0xd9d672e8
  408822:	pop    ebx
  408823:	mov    ah,BYTE PTR [edx-0x111e8aec]
  408829:	adc    BYTE PTR [edi-0x3c5a03a4],ch
  40882f:	push   edi
  408830:	xchg   DWORD PTR [esi+0x22f0f276],ebx
  408836:	inc    ebx
  408837:	mov    dl,0xfa
  408839:	xor    eax,0xdcd90c49
  40883e:	iret   
  40883f:	test   eax,0xd8e31247
  408844:	mov    cl,0x5c
  408846:	cdq    
  408847:	pop    edx
  408848:	add    al,0xce
  40884a:	test   al,0x22
  40884c:	or     BYTE PTR [edx+0xbb20ccf],dl
  408852:	jmp    0x7023:0xd804ef57
  408859:	pop    ebx
  40885a:	pop    ecx
  40885b:	nop
  40885c:	in     eax,dx
  40885d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40885e:	outs   dx,BYTE PTR ds:[esi]
  40885f:	repz bound ebp,QWORD PTR [eax-0x43cbd27c]
  408866:	push   edi
  408867:	into   
  408868:	pushf  
  408869:	inc    eax
  40886a:	pop    ebp
  40886b:	xchg   esp,eax
  40886c:	cld    
  40886d:	xchg   ebp,eax
  40886e:	stc    
  40886f:	call   0xd102600c
  408874:	imul   edx,DWORD PTR [ecx-0xf98f80e],0xffffff83
  40887b:	xor    al,0xc2
  40887d:	retf   
  40887e:	push   edx
  40887f:	add    edx,ebp
  408881:	ja     0x4088a2
  408883:	inc    eax
  408884:	cli    
  408885:	dec    edi
  408886:	pop    ebx
  408887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408888:	cs scas eax,DWORD PTR es:[edi]
  40888a:	mov    al,0xfc
  40888c:	int3   
  40888d:	and    eax,0x15762c20
  408892:	mov    ch,0xe7
  408894:	popa   
  408895:	jo     0x408868
  408897:	retf   0xa2a2
  40889a:	test   edx,esi
  40889c:	jno    0x408915
  40889e:	add    al,0x40
  4088a0:	xchg   esi,eax
  4088a1:	mov    ah,0xd2
  4088a3:	mov    WORD PTR [ebp-0x5defdbaa],?
  4088a9:	jmp    0x2c71:0xc4e3902f
  4088b0:	dec    esp
  4088b1:	dec    ebp
  4088b2:	xchg   esp,eax
  4088b3:	inc    edi
  4088b4:	add    ebx,DWORD PTR [eax-0x1b590ce1]
  4088ba:	cmp    al,0x4c
  4088bc:	mov    ebx,0xe0cd5a3c
  4088c1:	mov    bh,0x45
  4088c3:	add    al,ch
  4088c5:	pop    ebp
  4088c6:	imul   ebp,DWORD PTR [esi],0x3db195a
  4088cc:	mov    dl,0xbf
  4088ce:	pop    ecx
  4088cf:	pop    es
  4088d0:	dec    ecx
  4088d1:	or     BYTE PTR [eax],0x25
  4088d4:	pop    ds
  4088d5:	cmp    bl,BYTE PTR [ecx+0x6f8ecd73]
  4088db:	push   0xffffff8d
  4088dd:	outs   dx,BYTE PTR ds:[esi]
  4088de:	mov    edi,0x6d70ff0c
  4088e3:	lods   al,BYTE PTR ds:[esi]
  4088e4:	dec    esp
  4088e5:	repz mov edx,0xe7921862
  4088eb:	ins    BYTE PTR es:[edi],dx
  4088ec:	ja     0x40889c
  4088ee:	add    DWORD PTR ds:0x3bde49c,edi
  4088f4:	cmp    eax,0x966c49e5
  4088f9:	push   0xffffffa6
  4088fb:	test   DWORD PTR [ebx],edx
  4088fd:	push   ebx
  4088fe:	and    ebx,ecx
  408900:	xor    bl,BYTE PTR [eax]
  408902:	mov    DWORD PTR [esi-0x3cd5458e],ebp
  408908:	pop    es
  408909:	jb     0x40893e
  40890b:	fsub   QWORD PTR [ecx-0x5000c515]
  408911:	push   ds
  408912:	sbb    BYTE PTR [eax],ch
  408914:	mov    eax,0xb0f7ce00
  408919:	inc    edi
  40891a:	xchg   esp,eax
  40891b:	hlt    
  40891c:	test   BYTE PTR [eax+0x6570bcbb],dh
  408922:	ret    0x8acd
  408925:	retf   0xb28a
  408928:	dec    edi
  408929:	xchg   BYTE PTR [edi-0x18],dl
  40892c:	call   0xe1ea:0xff4aebb9
  408933:	push   cs
  408934:	dec    ecx
  408935:	adc    ah,BYTE PTR [edx-0x4084fca8]
  40893b:	xchg   ecx,eax
  40893c:	out    dx,al
  40893d:	mov    DWORD PTR es:[ecx],ebp
  408940:	fs into 
  408942:	fisubr DWORD PTR [eax+0x49]
  408945:	dec    edx
  408946:	ins    BYTE PTR es:[edi],dx
  408947:	bnd jg 0x408947
  40894a:	jne    0x40895a
  40894c:	adc    bl,BYTE PTR [eax]
  40894e:	rcl    BYTE PTR [eax],0x7f
  408951:	inc    edi
  408952:	push   esi
  408953:	mov    DWORD PTR [ebp+0x1455e3c7],ebx
  408959:	outs   dx,BYTE PTR ds:[esi]
  40895a:	ret    0x88c4
  40895d:	retf   0x4686
  408960:	mov    BYTE PTR [edi],dh
  408962:	cmp    esi,DWORD PTR [eax+0xb]
  408965:	rcr    DWORD PTR [ecx+0x51],0x7
  408969:	lods   al,BYTE PTR ds:[esi]
  40896a:	mov    ds:0xd754f37a,eax
  40896f:	outs   dx,DWORD PTR ds:[esi]
  408970:	arpl   cx,cx
  408972:	inc    ebx
  408973:	call   DWORD PTR [ebp-0x71aab5bc]
  408979:	cmp    esp,ebp
  40897b:	dec    eax
  40897c:	mov    ds:0x3adb86ab,eax
  408981:	push   edi
  408982:	pusha  
  408983:	xchg   eax,edx
  408985:	adc    dh,BYTE PTR [edi+ebp*2+0x47]
  408989:	ffreep st(2)
  40898b:	mov    dh,0x79
  40898d:	or     DWORD PTR [ebp+esi*1-0x37],ebp
  408991:	xchg   edx,eax
  408992:	add    DWORD PTR [eax],eax
  408994:	push   esi
  408995:	js     0x4089dc
  408997:	aam    0xa5
  408999:	pop    es
  40899a:	cmc    
  40899b:	dec    esp
  40899c:	jo     0x4089bb
  40899e:	jns    0x408962
  4089a0:	sbb    DWORD PTR [eax+eax*1],eax
  4089a3:	jp     0x408930
  4089a5:	mov    dl,0xd0
  4089a7:	repz sub eax,DWORD PTR [edx]
  4089aa:	daa    
  4089ab:	pop    esp
  4089ac:	sti    
  4089ad:	jle    0x4089f8
  4089af:	mov    WORD PTR [eax],gs
  4089b1:	fisub  DWORD PTR [edi+0x46]
  4089b4:	jo     0x408a15
  4089b6:	dec    edi
  4089b7:	int3   
  4089b8:	push   0x67f24c5b
  4089bd:	lods   eax,DWORD PTR ds:[esi]
  4089be:	sub    al,0xa6
  4089c0:	adc    eax,0x283bbb15
  4089c5:	dec    esp
  4089c6:	add    DWORD PTR [esi],esp
  4089c8:	ss out 0x2b,al
  4089cb:	or     al,0x3
  4089cd:	sub    al,0xdd
  4089cf:	ret    
  4089d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089d1:	sub    BYTE PTR [ebp-0x27],0x77
  4089d5:	cmp    DWORD PTR [ebx+0x7f07b0ec],ecx
  4089db:	test   ebp,esp
  4089dd:	adc    al,0xc5
  4089df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089e0:	mov    dh,0xb7
  4089e2:	sahf   
  4089e3:	cld    
  4089e4:	out    0x3f,al
  4089e6:	fisttp QWORD PTR [eax-0x5b8d0577]
  4089ec:	out    0xd4,al
  4089ee:	retf   0x63ca
  4089f1:	mov    cl,0x17
  4089f3:	int3   
  4089f4:	in     al,dx
  4089f5:	mov    ebx,0x136d328e
  4089fa:	sub    eax,0x2b4c858e
  4089ff:	mov    dl,BYTE PTR cs:[esi+0x28497482]
  408a06:	lahf   
  408a07:	pop    es
  408a08:	mov    bh,BYTE PTR [esi-0x24927e3]
  408a0e:	mov    bh,0x7b
  408a10:	push   esp
  408a11:	dec    eax
  408a12:	mov    al,0xdc
  408a14:	inc    esi
  408a15:	xor    bl,BYTE PTR [ebx+0x2c]
  408a18:	jns    0x4089a5
  408a1a:	ds sti 
  408a1c:	adc    al,0xa2
  408a1e:	push   0xa4e65c99
  408a23:	popf   
  408a24:	jmp    0x5534:0xef8c3847
  408a2b:	fnstsw WORD PTR [edi+0x4c27c1c6]
  408a31:	clc    
  408a32:	xchg   ebp,eax
  408a33:	push   es
  408a34:	(bad)  
  408a35:	dec    edi
  408a36:	test   eax,0x50d3b06f
  408a3b:	mov    ebp,0xbf18a829
  408a40:	jo     0x408ab7
  408a42:	jb     0x408a6a
  408a44:	fisttp WORD PTR [eax-0x79]
  408a47:	xchg   esi,eax
  408a48:	cmp    esi,DWORD PTR [ebx]
  408a4a:	outs   dx,BYTE PTR ds:[esi]
  408a4b:	and    edx,edx
  408a4d:	push   ds
  408a4e:	or     eax,0x916bb452
  408a53:	loopne 0x408a80
  408a55:	or     dl,BYTE PTR [esi+0x5]
  408a58:	shl    DWORD PTR [edi+0x2440bc61],cl
  408a5e:	aaa    
  408a5f:	jl     0x408a36
  408a61:	outs   dx,DWORD PTR ds:[esi]
  408a62:	pop    esi
  408a63:	add    DWORD PTR [edi+0x23],esi
  408a66:	lds    ebx,FWORD PTR [ecx]
  408a68:	cmp    BYTE PTR [eax+0x54],0x65
  408a6c:	nop
  408a6d:	lods   eax,DWORD PTR ds:[esi]
  408a6e:	xor    eax,0xafb2dc6d
  408a73:	lods   al,BYTE PTR ds:[esi]
  408a74:	cmc    
  408a75:	repz es into 
  408a78:	lahf   
  408a79:	cmp    ebp,DWORD PTR [ebp+0xc2ad49f]
  408a7f:	mov    bl,0xbc
  408a81:	jb     0x408a57
  408a83:	dec    eax
  408a84:	sbb    BYTE PTR [ecx+0x44],cl
  408a87:	push   ss
  408a88:	and    eax,0x42c3b15a
  408a8d:	aas    
  408a8e:	(bad)  
  408a90:	call   0xac195d1
  408a95:	fstp   DWORD PTR [ebp+esi*8-0x3f2f938b]
  408a9c:	inc    ebp
  408a9d:	adc    eax,DWORD PTR [esi+esi*8]
  408aa0:	pop    esi
  408aa1:	mov    esi,0x6f3c79b1
  408aa6:	mov    WORD PTR [eax],ss
  408aa8:	scas   eax,DWORD PTR es:[edi]
  408aa9:	popa   
  408aaa:	mov    edi,fs
  408aac:	or     eax,0x29469101
  408ab1:	inc    eax
  408ab2:	lods   al,BYTE PTR ds:[esi]
  408ab3:	inc    edx
  408ab4:	adc    DWORD PTR [ecx+ebx*2],ecx
  408ab7:	outs   dx,DWORD PTR ds:[esi]
  408ab8:	adc    ebx,ebp
  408aba:	jmp    0x2a0c:0x4c8c97ee
  408ac1:	sahf   
  408ac2:	imul   al
  408ac4:	imul   edx,DWORD PTR [esi],0x27704934
  408aca:	(bad)  
  408acb:	out    0x13,eax
  408acd:	and    DWORD PTR [edx-0x5662306f],edx
  408ad3:	sahf   
  408ad4:	mov    ds:0x62c447fb,al
  408ad9:	mov    ebx,DWORD PTR [esi-0x5f]
  408adc:	pushf  
  408add:	out    dx,al
  408ade:	jnp    0x408aca
  408ae0:	(bad)  
  408ae1:	retf   
  408ae2:	mov    edi,0xf8a805df
  408ae7:	repnz shr BYTE PTR [ebx+0x6a],cl
  408aeb:	retf   0xe198
  408aee:	mov    ecx,0x64f2d093
  408af3:	(bad)
  408af7:	add    BYTE PTR [edi-0x66],cl
  408afa:	pop    ds
  408afb:	(bad)  
  408afc:	loope  0x408b6c
  408afe:	mul    BYTE PTR [edx-0x57ce841b]
  408b04:	add    BYTE PTR [ecx+eiz*2-0x4761639e],ch
  408b0b:	aad    0xee
  408b0d:	xchg   ebp,eax
  408b0e:	adc    al,0xca
  408b10:	push   ds
  408b11:	retf   
  408b12:	push   DWORD PTR [esp+ebp*8-0x2e]
  408b16:	in     al,dx
  408b17:	mov    al,0x9e
  408b19:	repnz mov ds:0x472a97c4,al
  408b1f:	cld    
  408b20:	mov    cl,0x42
  408b22:	outs   dx,BYTE PTR ds:[esi]
  408b23:	adc    al,0xd0
  408b25:	adc    eax,0x6cde6b93
  408b2a:	fwait
  408b2b:	pusha  
  408b2c:	rol    DWORD PTR ds:0x9174aa7c,0x7b
  408b33:	pop    ebx
  408b34:	xchg   ebp,eax
  408b35:	or     BYTE PTR [ebx-0x5bcd0704],bh
  408b3b:	hlt    
  408b3c:	push   0x5a9f6fcd
  408b41:	and    dl,BYTE PTR [edx+0x4765177d]
  408b47:	inc    ecx
  408b48:	test   ebx,0x576c0d89
  408b4e:	and    BYTE PTR [esi-0x10e56865],bl
  408b54:	shr    ebx,0x8d
  408b57:	fwait
  408b58:	loopne 0x408b90
  408b5a:	clc    
  408b5b:	dec    ebp
  408b5c:	push   ecx
  408b5d:	mov    ah,0x2d
  408b5f:	add    eax,0x8e3d687d
  408b64:	cwde   
  408b65:	or     ch,BYTE PTR ds:[eax]
  408b68:	mov    eax,0x48c7df65
  408b6d:	aad    0x2d
  408b6f:	or     DWORD PTR [ecx],eax
  408b71:	mov    eax,ds:0xfd337bb3
  408b76:	pop    ecx
  408b77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b78:	cwde   
  408b79:	call   0xbe6:0xe174a375
  408b80:	arpl   WORD PTR [ebx+0x74043dcf],cx
  408b86:	xchg   ecx,eax
  408b87:	dec    DWORD PTR [esi]
  408b89:	fcos   
  408b8b:	inc    esp
  408b8c:	mov    ds:0xa582b3cb,eax
  408b91:	cmc    
  408b92:	xchg   ecx,eax
  408b93:	push   ecx
  408b94:	enter  0x91d3,0xa6
  408b98:	test   eax,0x753d9a42
  408b9d:	(bad)  
  408b9e:	pop    edi
  408ba0:	pop    eax
  408ba1:	push   es
  408ba2:	js     0x408b4b
  408ba4:	ret    
  408ba5:	jg     0x408bbe
  408ba7:	lea    esp,[edi+0x33]
  408baa:	pop    esp
  408bab:	out    0xdf,eax
  408bad:	(bad)  
  408bae:	cwde   
  408baf:	imul   edx,DWORD PTR [ebx+edi*2-0x5e],0x28
  408bb4:	out    0x74,eax
  408bb6:	stc    
  408bb7:	jmp    0x2261:0xba1534b9
  408bbe:	push   0x9c6e4443
  408bc3:	add    edi,ebx
  408bc5:	cwde   
  408bc6:	or     DWORD PTR [ecx-0x44],ecx
  408bc9:	(bad)  
  408bca:	and    BYTE PTR [ecx+0x6fe5d927],dl
  408bd0:	ret    0x530a
  408bd3:	inc    ebx
  408bd4:	test   al,0xa0
  408bd6:	imul   ebp,DWORD PTR [ebp+edx*2-0x3c],0x8ecf97c6
  408bde:	xchg   BYTE PTR [ecx],bh
  408be0:	cwde   
  408be1:	arpl   bp,bx
  408be3:	mov    al,ds:0x751594a2
  408be8:	cmp    dl,BYTE PTR [esi]
  408bea:	neg    edi
  408bec:	mov    esi,DWORD PTR [esi+0x31d977d3]
  408bf2:	shl    BYTE PTR [edi-0x52dceaf6],1
  408bf8:	imul   eax,DWORD PTR [ebp-0x15],0x7574531b
  408bff:	jg     0x408c78
  408c01:	xchg   ebp,eax
  408c02:	mov    bh,0x8d
  408c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c05:	xchg   esp,eax
  408c06:	in     eax,0x33
  408c08:	cmc    
  408c09:	cmp    al,0xc5
  408c0b:	xchg   edi,eax
  408c0c:	call   0x8fdcfb0e
  408c11:	or     DWORD PTR [edx-0x7e],ecx
  408c14:	cdq    
  408c15:	add    eax,0xce1a9e62
  408c1a:	lods   al,BYTE PTR ds:[esi]
  408c1b:	mov    WORD PTR [ebp-0x58],gs
  408c1e:	jmp    0x802d88e7
  408c23:	pushf  
  408c24:	lahf   
  408c25:	aam    0xe4
  408c27:	sbb    eax,0x907ae476
  408c2c:	adc    DWORD PTR [esi-0x3925298a],edi
  408c32:	jae    0x408bdc
  408c34:	fbld   TBYTE PTR [ebp+0x3a]
  408c37:	icebp  
  408c38:	mov    esi,0x2674a5af
  408c3d:	dec    ebx
  408c3e:	neg    ch
  408c40:	jnp    0x408c53
  408c42:	jae    0x408bd0
  408c44:	xor    esi,DWORD PTR [edi-0x55]
  408c47:	mov    ss,edi
  408c49:	neg    BYTE PTR [eax]
  408c4b:	das    
  408c4c:	shl    DWORD PTR [edx-0x1a],0x57
  408c50:	push   0xfffffff4
  408c52:	repz idiv BYTE PTR [esp+edx*8+0x1b]
  408c57:	scas   al,BYTE PTR es:[edi]
  408c58:	pop    edx
  408c59:	out    0x3b,eax
  408c5b:	outs   dx,DWORD PTR ds:[esi]
  408c5c:	aaa    
  408c5d:	lds    esi,FWORD PTR [eax+0x3c3c78af]
  408c63:	xor    eax,0xa83a59d6
  408c68:	int    0xf1
  408c6a:	(bad)  
  408c6b:	sub    ebx,DWORD PTR [ecx-0x4bdac235]
  408c71:	adc    al,0xaf
  408c73:	cmp    eax,0x92678eb1
  408c78:	repnz mov BYTE PTR [edx+0x37],bl
  408c7c:	outs   dx,BYTE PTR ds:[esi]
  408c7d:	xchg   ecx,eax
  408c7e:	ss jg  0x408c5e
  408c81:	cmp    DWORD PTR ds:0xe3115824,edx
  408c87:	test   al,0x51
  408c89:	repz or eax,0xb3b8f32a
  408c8f:	jno    0x408ca6
  408c91:	rcl    BYTE PTR [edx+edx*4-0x1c8abc1f],0x33
  408c99:	jne    0x408c5a
  408c9b:	(bad)  [eax+0x7bd5f3f7]
  408ca1:	pop    ebx
  408ca2:	(bad)  [ecx-0x7b7d065b]
  408ca8:	add    DWORD PTR [ebx],eax
  408caa:	mov    edx,0xd0f64ef3
  408caf:	call   0xa1d978b6
  408cb4:	sbb    DWORD PTR [eax+edx*2],edi
  408cb7:	mov    edx,DWORD PTR [edx-0x58c30757]
  408cbd:	sub    al,0x98
  408cbf:	jecxz  0x408cd7
  408cc1:	daa    
  408cc2:	lods   eax,DWORD PTR ds:[esi]
  408cc3:	aas    
  408cc4:	mov    ds:0xd0afa2a1,al
  408cc9:	popa   
  408cca:	and    eax,edx
  408ccc:	scas   eax,DWORD PTR es:[edi]
  408ccd:	(bad)  [ecx+0x1f]
  408cd0:	push   cs
  408cd1:	aaa    
  408cd2:	push   edi
  408cd3:	push   edi
  408cd4:	retf   0xaeea
  408cd7:	fsubr  QWORD PTR [esp+ecx*4+0x3cb52bbf]
  408cde:	shl    eax,0xe7
  408ce1:	mov    BYTE PTR [edi+0x469f5263],dh
  408ce7:	push   edi
  408ce8:	mov    esi,0x387062ad
  408ced:	jb     0x408c9a
  408cef:	aas    
  408cf0:	mov    BYTE PTR [edx],al
  408cf2:	fsubp  st(5),st
  408cf4:	mov    cl,0xf
  408cf6:	and    al,BYTE PTR [ecx]
  408cf8:	fld    QWORD PTR [ecx]
  408cfa:	jae    0x408d57
  408cfc:	sub    ebx,DWORD PTR [ecx-0x4a506592]
  408d02:	xor    ah,ah
  408d04:	xchg   ebx,eax
  408d05:	adc    ah,BYTE PTR [edx]
  408d07:	scas   eax,DWORD PTR es:[edi]
  408d08:	sub    BYTE PTR [eax-0x201d5cdd],cl
  408d0e:	add    al,0x65
  408d10:	(bad)  
  408d11:	push   edi
  408d12:	dec    esp
  408d13:	xor    BYTE PTR [edx+0xff205aa],bh
  408d19:	fld    DWORD PTR [eax]
  408d1b:	data16 fsub QWORD PTR cs:[edx+0x31d4eefe]
  408d23:	out    0x79,al
  408d25:	jne    0x408cc0
  408d27:	add    eax,0xff18b410
  408d2c:	sbb    eax,0x673ece55
  408d31:	xchg   ecx,eax
  408d32:	sub    al,0x46
  408d34:	outs   dx,DWORD PTR ds:[esi]
  408d35:	push   ds
  408d36:	imul   ecx,DWORD PTR [edx+esi*1-0x49],0x25
  408d3b:	cmp    ebx,DWORD PTR [edx+0x18]
  408d3e:	sub    BYTE PTR [ecx-0x59eff4c],bh
  408d44:	mov    cl,0xf5
  408d46:	in     eax,dx
  408d47:	ins    DWORD PTR es:[edi],dx
  408d48:	push   esp
  408d49:	adc    eax,0xd1bbe24e
  408d4e:	test   al,0xe1
  408d50:	scas   al,BYTE PTR es:[edi]
  408d51:	pop    esp
  408d52:	and    dh,BYTE PTR [ecx+0x43d424ff]
  408d58:	xchg   edx,ebp
  408d5a:	fs jne 0x408dda
  408d5d:	adc    al,0xce
  408d5f:	out    0xa0,al
  408d61:	inc    edx
  408d62:	jmp    0x91ee:0x869a5297
  408d69:	mov    esp,0x5b035d01
  408d6e:	sar    DWORD PTR gs:[edi],0xbf
  408d72:	int    0x6f
  408d74:	mov    esi,0x26b6f837
  408d79:	out    0xed,al
  408d7b:	test   DWORD PTR [ebx-0x2e891d55],ebx
  408d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d82:	sahf   
  408d83:	inc    edi
  408d84:	add    ecx,DWORD PTR [eax+0x735d37e8]
  408d8a:	es in  al,0x2a
  408d8d:	fcom   QWORD PTR [esi+0x2f]
  408d90:	enter  0x4d3c,0xfc
  408d94:	mov    esi,0x2f59c838
  408d99:	mov    ecx,0x55d0c6f5
  408d9e:	pop    eax
  408d9f:	cmp    eax,0x103709e8
  408da4:	mov    eax,ds:0x2c41eb22
  408da9:	dec    esp
  408daa:	es inc ebp
  408dac:	cwde   
  408dad:	cld    
  408dae:	fcomp  DWORD PTR [ebp-0x5f171f39]
  408db4:	pop    esi
  408db5:	ret    
  408db6:	(bad)  
  408db7:	imul   DWORD PTR ds:0x8a167839
  408dbd:	xor    eax,0xe1ce1b1d
  408dc2:	push   cs
  408dc3:	mov    esi,0xcebaba52
  408dc8:	lock or bl,BYTE PTR [edx+0x72]
  408dcc:	mov    ah,BYTE PTR [edi]
  408dce:	pop    edi
  408dcf:	ss loop 0x408e2b
  408dd2:	test   eax,0x6e659bde
  408dd7:	push   cs
  408dd8:	dec    edi
  408dd9:	stc    
  408dda:	sbb    DWORD PTR [edi+0x6a5ec2ad],0x34df72d2
  408de4:	test   BYTE PTR [esi+edx*2-0x5ec3a5a],0xad
  408dec:	(bad)  
  408ded:	out    dx,eax
  408dee:	xchg   ecx,eax
  408def:	clc    
  408df0:	inc    eax
  408df1:	pop    ecx
  408df2:	add    eax,0xc7058bc5
  408df7:	cld    
  408df8:	sti    
  408df9:	out    dx,eax
  408dfa:	rol    BYTE PTR [edx+0x2d],cl
  408dfd:	std    
  408dfe:	cmp    ch,BYTE PTR [esi]
  408e00:	retf   
  408e01:	daa    
  408e02:	cdq    
  408e03:	ins    DWORD PTR es:[edi],dx
  408e04:	call   0xa414e909
  408e09:	and    ch,BYTE PTR [ecx+0x4c757f29]
  408e0f:	or     BYTE PTR [edi],ch
  408e11:	push   0xabe88a0a
  408e16:	pusha  
  408e17:	add    eax,0x6f16c2a8
  408e1c:	dec    esp
  408e1d:	mov    ah,0xdb
  408e1f:	jae    0x408de4
  408e21:	cdq    
  408e22:	mov    esp,0x32dfe55f
  408e27:	lods   eax,DWORD PTR ds:[esi]
  408e28:	mov    ecx,0x3502a2c8
  408e2d:	cmp    DWORD PTR [ebp+0x28b8cb93],ecx
  408e33:	xchg   DWORD PTR [esi+0x5b],ecx
  408e36:	inc    eax
  408e37:	cmp    ah,cl
  408e39:	mov    dh,0x3f
  408e3c:	pop    esi
  408e3d:	gs mov bl,0xb6
  408e40:	lds    esi,FWORD PTR [eax]
  408e42:	pop    ebx
  408e43:	mov    esi,0xb8007063
  408e48:	aas    
  408e49:	lahf   
  408e4a:	dec    eax
  408e4b:	push   esi
  408e4c:	lods   eax,DWORD PTR ds:[esi]
  408e4d:	mov    ah,0x53
  408e4f:	cmp    al,0xfb
  408e51:	dec    edi
  408e52:	xchg   ebx,eax
  408e53:	je     0x408e92
  408e55:	js     0x408ed6
  408e57:	xor    BYTE PTR [edi-0x2821e5bf],cl
  408e5d:	inc    ebx
  408e5e:	icebp  
  408e5f:	fsubr  QWORD PTR [edx-0x2e41ab01]
  408e65:	cs jg  0x408ebb
  408e68:	mov    ds,esi
  408e6a:	xor    bh,BYTE PTR ds:0x64bfb1a4
  408e70:	pop    ds
  408e71:	add    eax,0x6226e701
  408e76:	push   0x1361e110
  408e7b:	pop    ebp
  408e7c:	dec    esi
  408e7d:	xchg   DWORD PTR [ebx-0x41],edi
  408e80:	pop    ebx
  408e81:	mov    ds:0xc3c4193e,al
  408e86:	pop    esp
  408e87:	xor    ebp,ecx
  408e89:	in     eax,0x65
  408e8b:	mov    eax,ds:0x563d77ae
  408e90:	sub    ecx,DWORD PTR [ecx-0x6b532b91]
  408e96:	les    eax,FWORD PTR [ecx-0x4af23ecf]
  408e9c:	pop    ds
  408e9d:	dec    edx
  408e9e:	ins    BYTE PTR es:[edi],dx
  408e9f:	mov    bh,0xd
  408ea1:	enter  0x5c46,0x53
  408ea5:	mov    al,ds:0xeab6e3a4
  408eaa:	mov    eax,ds:0x72c9b207
  408eaf:	or     eax,0xcdd1601c
  408eb4:	jno    0x408e93
  408eb6:	add    BYTE PTR [eax-0x15de0026],bl
  408ebc:	xchg   esi,eax
  408ebd:	sahf   
  408ebe:	mov    ds:0x672d770a,al
  408ec3:	bound  esi,QWORD PTR [ebx+0x97a1cbc]
  408ec9:	mov    DWORD PTR [eax-0x85d0865],0x1b621b1e
  408ed3:	push   0x548060fc
  408ed8:	fimul  WORD PTR [ecx+0x71]
  408edb:	fs test al,0xd4
  408ede:	pop    ebx
  408edf:	mov    al,0xba
  408ee1:	push   edi
  408ee2:	adc    esi,DWORD PTR [ecx-0x4b]
  408ee5:	or     al,0xd8
  408ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee8:	enter  0xf1a1,0x35
  408eec:	cmp    edi,ecx
  408eee:	mov    esp,0xcd793186
  408ef3:	fistp  QWORD PTR [edx-0x553ca45]
  408ef9:	jg     0x408f13
  408efb:	sub    ecx,DWORD PTR [edi+0x497f6a21]
  408f01:	inc    eax
  408f02:	sub    al,0x8c
  408f04:	push   0x98badaae
  408f09:	sar    cl,1
  408f0b:	add    ah,bh
  408f0d:	sbb    al,0x61
  408f0f:	pop    ebp
  408f10:	loop   0x408f20
  408f12:	mov    esi,0x4b7e971b
  408f17:	retf   0x28fa
  408f1a:	pop    esi
  408f1b:	fchs   
  408f1d:	xchg   esi,eax
  408f1e:	sar    DWORD PTR [esi+0x4d],1
  408f21:	lock jle 0x408f3a
  408f24:	popf   
  408f25:	mov    dh,0x4b
  408f27:	sub    eax,0x4b19027e
  408f2c:	and    DWORD PTR [esi],esp
  408f2e:	inc    ebx
  408f2f:	aaa    
  408f30:	dec    esp
  408f31:	(bad)  
  408f32:	xchg   esp,eax
  408f33:	push   ebp
  408f34:	mov    ds:0xc98e9e25,eax
  408f39:	cld    
  408f3a:	repnz push 0xa59e1f65
  408f40:	outs   dx,DWORD PTR ds:[esi]
  408f41:	pusha  
  408f42:	dec    eax
  408f43:	mov    eax,ebx
  408f45:	dec    edi
  408f46:	pop    eax
  408f47:	stc    
  408f48:	pop    edi
  408f49:	pop    ecx
  408f4a:	call   0x5dcf0e81
  408f4f:	jo     0x408edb
  408f51:	mov    BYTE PTR [edi+0x310a5414],dl
  408f57:	aam    0x1e
  408f59:	(bad)  
  408f5b:	mov    ecx,0x774fb181
  408f60:	sbb    eax,0x6235b483
  408f65:	(bad)  
  408f66:	dec    eax
  408f67:	fidivr WORD PTR [edi+0x65]
  408f6a:	fisub  DWORD PTR [ebp*4-0x2b04d2c2]
  408f71:	inc    esp
  408f72:	ins    BYTE PTR es:[edi],dx
  408f73:	pop    esi
  408f74:	jge    0x408f88
  408f76:	mov    esi,eax
  408f78:	loopne 0x408f6c
  408f7a:	xchg   esp,eax
  408f7b:	push   cs
  408f7c:	cmp    al,0x64
  408f7e:	test   DWORD PTR [edi+0x18fbac7e],esp
  408f84:	shr    esi,1
  408f86:	gs fwait
  408f88:	in     eax,dx
  408f89:	jnp    0x408fa0
  408f8b:	mov    al,0x1a
  408f8d:	fidiv  WORD PTR [eax]
  408f8f:	mov    al,0x47
  408f91:	mov    edi,0x69922623
  408f96:	enter  0xe861,0xd
  408f9a:	push   cs
  408f9b:	mov    cl,0xec
  408f9d:	popf   
  408f9e:	in     al,dx
  408f9f:	jl     0x408fe9
  408fa1:	sbb    ebx,ecx
  408fa3:	jno    0x40901c
  408fa5:	(bad)  
  408fa7:	or     BYTE PTR [edx+0x5b],bh
  408faa:	sub    eax,0x38223212
  408faf:	outs   dx,BYTE PTR ds:[esi]
  408fb0:	retf   
  408fb1:	add    eax,0xd1b296f1
  408fb6:	and    ebx,DWORD PTR [ebx]
  408fb8:	inc    ebp
  408fb9:	cmp    DWORD PTR [esp+ecx*2+0x59841d74],ebx
  408fc0:	adc    dh,BYTE PTR [edi]
  408fc2:	sar    BYTE PTR [ebp-0x2c],0x91
  408fc6:	push   ebx
  408fc7:	dec    esi
  408fc8:	adc    eax,DWORD PTR [edx-0xd]
  408fcb:	xchg   DWORD PTR [ebp+0x1e95c456],esp
  408fd1:	in     al,0xf4
  408fd3:	out    0xe8,al
  408fd5:	cli    
  408fd6:	push   ecx
  408fd7:	cmp    BYTE PTR [eax],bl
  408fd9:	(bad)  
  408fda:	loop   0x409012
  408fdc:	ffreep st(0)
  408fde:	xchg   ecx,eax
  408fdf:	adc    eax,0x9939558
  408fe4:	or     BYTE PTR [eax],ah
  408fe6:	push   ecx
  408fe7:	pop    esp
  408fe8:	dec    eax
  408fe9:	dec    edi
  408fea:	repz into 
  408fec:	inc    ecx
  408fed:	dec    ebp
  408fee:	aas    
  408fef:	mov    bl,0x76
  408ff1:	xchg   ebp,eax
  408ff2:	push   ss
  408ff3:	nop
  408ff4:	push   eax
  408ff5:	xchg   esi,eax
  408ff6:	push   es
  408ff7:	ret    
  408ff8:	iret   
  408ff9:	push   edx
  408ffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ffb:	mov    esi,0xb5d26f6c
  409000:	fstp   DWORD PTR [eax+ecx*4+0x65ba568d]
  409007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409008:	mov    edx,0xcea3ef45
  40900d:	fidivr DWORD PTR [ebx+edi*4]
  409010:	stos   DWORD PTR es:[edi],eax
  409011:	hlt    
  409012:	ror    DWORD PTR [ebp-0x6f],0xb1
  409016:	(bad)  
  409017:	sbb    BYTE PTR [ebx-0xafa0ae1],ch
  40901d:	adc    al,BYTE PTR [ebp+0x6c]
  409020:	sar    DWORD PTR [esi],1
  409022:	and    esi,DWORD PTR [edx-0x37577084]
  409028:	in     eax,dx
  409029:	fild   DWORD PTR [ecx-0x3]
  40902c:	mov    bl,BYTE PTR [ebx+eax*1]
  40902f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409030:	xchg   DWORD PTR [edi],edi
  409032:	icebp  
  409033:	enter  0x4c48,0x14
  409037:	cmp    bh,dh
  409039:	jmp    0xc32c:0x7e33c382
  409040:	clc    
  409041:	adc    DWORD PTR [eax+esi*4+0x385da58d],ebx
  409048:	push   eax
  409049:	test   BYTE PTR [edx],ch
  40904b:	xchg   ebx,eax
  40904c:	add    ebp,edi
  40904e:	pop    esi
  40904f:	neg    al
  409051:	xchg   DWORD PTR [esi+0x5c],edx
  409054:	retf   0x9681
  409057:	sbb    ch,dh
  409059:	xor    ch,al
  40905b:	add    eax,0x1852a9da
  409060:	push   0xd82d077d
  409065:	clc    
  409066:	jo     0x4090b2
  409068:	out    0x84,eax
  40906a:	mov    ch,0xfd
  40906c:	in     eax,dx
  40906d:	push   ecx
  40906e:	cwde   
  40906f:	cld    
  409070:	int    0xbc
  409072:	xchg   ebx,eax
  409073:	mov    al,ds:0x7acff788
  409078:	sar    DWORD PTR [ecx+0x1],1
  40907b:	call   0xc821bc3f
  409080:	jne    0x4090b1
  409082:	xor    ah,al
  409084:	cmp    cl,BYTE PTR [esi-0x5bcebc78]
  40908a:	pusha  
  40908b:	inc    esp
  40908c:	aas    
  40908d:	pop    esi
  40908e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40908f:	dec    edx
  409090:	sub    DWORD PTR [edx+0x1b],esi
  409093:	(bad)  
  409094:	in     eax,0x23
  409096:	xor    DWORD PTR [ebx-0x77],esp
  409099:	mov    esp,0xd899b6b2
  40909e:	mov    cl,BYTE PTR [edi+0x48]
  4090a1:	rcr    DWORD PTR [edx+0x19],1
  4090a4:	scas   al,BYTE PTR es:[edi]
  4090a5:	and    eax,0xb97d5376
  4090aa:	fs (bad) 
  4090ac:	imul   ebx,DWORD PTR [edi],0x30
  4090af:	sbb    eax,0x6a6e1d90
  4090b4:	cmp    al,BYTE PTR [esi]
  4090b6:	fst    QWORD PTR ds:0x3a33bfb
  4090bc:	push   ds
  4090bd:	jns    0x409055
  4090bf:	inc    ecx
  4090c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090c1:	sbb    BYTE PTR [ebx+edx*1],bh
  4090c4:	mov    ds:0x2a79219f,eax
  4090c9:	fbld   TBYTE PTR [ebp+0x68945fc6]
  4090cf:	xlat   BYTE PTR ds:[ebx]
  4090d0:	pop    ecx
  4090d1:	(bad)  
  4090d2:	jmp    0x409074
  4090d4:	clc    
  4090d5:	xlat   BYTE PTR ds:[ebx]
  4090d6:	inc    ecx
  4090d7:	sbb    al,0x77
  4090d9:	nop
  4090da:	dec    edx
  4090db:	dec    esp
  4090dc:	sbb    ecx,DWORD PTR [edi+edx*1+0x28fe3a77]
  4090e3:	rcl    edx,1
  4090e5:	xor    DWORD PTR [ebp+0x54200bf7],esp
  4090eb:	or     DWORD PTR [esi],eax
  4090ed:	imul   esp,DWORD PTR [ebp+edx*8-0x1b5689c9],0x9d02566a
  4090f8:	mov    al,ds:0xab2042dd
  4090fd:	in     al,0xa8
  4090ff:	data16 shr BYTE PTR ds:0x8ee4f29f,1
  409106:	gs or  al,0xbe
  409109:	stos   BYTE PTR es:[edi],al
  40910a:	mov    ebp,0x557290bc
  40910f:	mov    dh,0xfb
  409111:	sub    bh,dh
  409113:	int3   
  409114:	jmp    0xe5f1340f
  409119:	or     BYTE PTR [ecx-0x8f4c8e1],dl
  40911f:	jle    0x409175
  409121:	cli    
  409122:	cmp    DWORD PTR [esi-0x72fe0486],eax
  409128:	inc    ebx
  409129:	ja     0x4090e0
  40912b:	fld    DWORD PTR [ebp+0x6db8c091]
  409131:	and    DWORD PTR [esi],edx
  409133:	jne    0x409156
  409135:	sahf   
  409136:	les    esp,FWORD PTR [ebx+0x47f3b542]
  40913c:	lods   al,BYTE PTR ds:[esi]
  40913d:	loopne 0x4090dd
  40913f:	lock xchg esi,eax
  409141:	mov    BYTE PTR [ebx+ebp*2+0x3e441634],al
  409148:	push   es
  409149:	sahf   
  40914a:	sbb    esp,DWORD PTR cs:[ebp+0x41c80f9e]
  409151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409152:	jp     0x409107
  409154:	jae    0x409154
  409156:	add    bl,al
  409158:	popa   
  409159:	fild   QWORD PTR [edi-0x58dc09e7]
  40915f:	pop    ecx
  409160:	push   0xd2f8c355
  409165:	ins    DWORD PTR es:[edi],dx
  409166:	jne    0x409184
  409168:	test   BYTE PTR [esi+0x26aa9319],0x45
  40916f:	mov    ds:0x784b777d,eax
  409174:	aas    
  409175:	popa   
  409176:	jne    0x409193
  409178:	sbb    al,0x99
  40917a:	or     eax,0xa98c1650
  40917f:	mov    bl,0x4f
  409181:	xchg   ebx,eax
  409182:	shl    DWORD PTR [edi-0x7409641c],cl
  409188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409189:	ror    BYTE PTR [edi-0x3f],cl
  40918c:	pop    ds
  40918d:	push   edi
  40918e:	out    0x86,al
  409190:	jmp    0x40917a
  409192:	js     0x409150
  409194:	mov    al,0x62
  409196:	mov    bh,0xf2
  409198:	in     eax,0x2d
  40919a:	popf   
  40919b:	mov    ds:0x8f4aa14e,eax
  4091a0:	sub    esp,ebx
  4091a2:	add    edi,esi
  4091a4:	jbe    0x40917f
  4091a6:	xor    BYTE PTR [eax-0x326fc1be],dh
  4091ac:	or     eax,0x942f3d86
  4091b1:	pop    ebx
  4091b2:	cwde   
  4091b3:	rol    DWORD PTR ds:[ecx-0x74],cl
  4091b7:	pushaw 
  4091b9:	cs mov dh,0x7b
  4091bc:	inc    ecx
  4091bd:	loop   0x409217
  4091bf:	bound  ecx,QWORD PTR [ebx-0x54]
  4091c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c3:	fst    QWORD PTR [ebx-0x50]
  4091c6:	jmp    0x1feb044
  4091cb:	or     al,0xa
  4091cd:	test   eax,0x37ee9a5a
  4091d2:	rol    DWORD PTR [esi],0x5a
  4091d5:	dec    esp
  4091d6:	cmp    BYTE PTR [esi],ah
  4091d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d9:	push   ds
  4091da:	test   BYTE PTR [eax+0x4d24868b],cl
  4091e0:	push   ds
  4091e1:	and    dl,ch
  4091e3:	dec    esi
  4091e4:	int3   
  4091e5:	push   edi
  4091e6:	push   0x8fe141da
  4091eb:	xchg   esp,eax
  4091ec:	jnp    0x409266
  4091ee:	lods   eax,DWORD PTR ds:[esi]
  4091ef:	in     al,0x60
  4091f1:	or     dh,BYTE PTR [edi+0x73]
  4091f4:	test   BYTE PTR [esp+ecx*2-0x18],0x77
  4091f9:	les    eax,FWORD PTR [ebp-0x42b165c9]
  4091ff:	in     al,dx
  409200:	and    cl,BYTE PTR [ebp+eax*2+0x2e8c3cec]
  409207:	and    edx,DWORD PTR [esi-0x24f4612]
  40920d:	out    dx,eax
  40920e:	sbb    ebp,DWORD PTR [ebp-0x43]
  409211:	cmp    dh,BYTE PTR [eax+0x5fca4326]
  409217:	stc    
  409218:	mov    eax,0xe732eb69
  40921d:	in     al,dx
  40921e:	daa    
  40921f:	out    0x22,eax
  409221:	fidiv  WORD PTR [esi]
  409223:	xor    esi,DWORD PTR [ecx+0x75678b2f]
  409229:	cs mov esi,0xefeb5297
  40922f:	inc    ebx
  409230:	mov    edi,0xc2537c3b
  409235:	std    
  409236:	ins    BYTE PTR es:[edi],dx
  409237:	mov    ebp,0xf69cb68b
  40923c:	mov    ebp,0xbed3ca27
  409241:	loopne 0x409241
  409243:	fcomp  DWORD PTR cs:[edi-0x49859b94]
  40924a:	jle    0x40924d
  40924c:	add    eax,DWORD PTR [esi+0x35]
  40924f:	inc    ebx
  409250:	adc    DWORD PTR [eax+eax*1-0x543bcffd],ecx
  409257:	add    al,0xa9
  409259:	and    bh,BYTE PTR [ebp+0x35]
  40925c:	lea    eax,[edi+ecx*4]
  40925f:	push   ebp
  409260:	cli    
  409261:	jge    0x40928d
  409263:	push   ecx
  409264:	sub    bh,BYTE PTR [ebx+0x1f9b31ad]
  40926a:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40926c:	mov    edi,0x15ec8585
  409271:	xor    al,BYTE PTR [ebp-0x38f3bbe6]
  409277:	xor    al,0x54
  409279:	or     dh,BYTE PTR [ebx-0xa]
  40927c:	cmp    DWORD PTR [ebx+0x7cc2edd3],ebp
  409282:	mov    DWORD PTR [eax-0x7c6f7df5],ecx
  409288:	dec    edx
  409289:	mov    esp,0xb0619e59
  40928e:	adc    al,0xb6
  409290:	xlat   BYTE PTR ds:[ebx]
  409291:	jo     0x409281
  409293:	inc    esi
  409294:	push   edx
  409295:	cmp    ebx,ecx
  409297:	daa    
  409298:	cld    
  409299:	test   BYTE PTR [ecx-0x6e],ah
  40929c:	adc    BYTE PTR ds:0xb1e7fdb7,dl
  4092a2:	leave  
  4092a3:	pop    edx
  4092a4:	outs   dx,DWORD PTR ds:[esi]
  4092a5:	push   eax
  4092a6:	mov    DWORD PTR [ecx+esi*1+0x261860e5],0x49e02011
  4092b1:	enter  0x26d2,0x8c
  4092b5:	pop    esp
  4092b6:	and    ax,0x5a9b
  4092ba:	iret   
  4092bb:	mov    edi,gs
  4092bd:	test   eax,0xc18f7b9
  4092c2:	mov    ah,BYTE PTR [edi-0x4b]
  4092c5:	dec    ecx
  4092c6:	leave  
  4092c7:	not    BYTE PTR [esi+0x27]
  4092ca:	scas   eax,DWORD PTR es:[edi]
  4092cb:	lahf   
  4092cc:	push   ds
  4092cd:	int    0x91
  4092cf:	enter  0xcdf0,0x0
  4092d3:	push   esp
  4092d4:	push   ecx
  4092d5:	xchg   edi,eax
  4092d6:	bswap  ecx
  4092d8:	xor    DWORD PTR [ebx-0x1],ebx
  4092db:	push   cs
  4092dc:	cs (bad) 
  4092de:	pop    esi
  4092df:	fs ss inc ebx
  4092e2:	mov    dh,0x26
  4092e4:	lds    esp,FWORD PTR [ebp+0x1f]
  4092e7:	lock sub BYTE PTR [esi+0x1ab5a002],dl
  4092ee:	sub    BYTE PTR [ebp+0x4911bc57],cl
  4092f4:	adc    al,0x5f
  4092f6:	push   ebx
  4092f7:	(bad)  
  4092f8:	or     ebx,DWORD PTR [esi-0x5fe34681]
  4092fe:	mov    bl,BYTE PTR [edx-0x2a86c11d]
  409304:	stos   DWORD PTR es:[edi],eax
  409305:	mov    bh,0xec
  409307:	scas   al,BYTE PTR es:[edi]
  409308:	cdq    
  409309:	sub    cl,ch
  40930b:	(bad)  
  40930c:	xchg   edx,eax
  40930d:	cmp    bl,BYTE PTR [ecx-0x13a03e27]
  409313:	fistp  WORD PTR [edx-0x2e]
  409316:	fstp   QWORD PTR [edx-0x3c]
  409319:	sub    al,0xb1
  40931b:	aam    0xb
  40931d:	jnp    0x40930c
  40931f:	push   esi
  409320:	sar    eax,cl
  409322:	xchg   ecx,eax
  409323:	jmpw   0x5ed0
  409327:	adc    ebp,0x4a
  40932a:	neg    DWORD PTR [eax]
  40932c:	or     BYTE PTR [ebx+0x21b72952],cl
  409332:	mov    al,ds:0x63aaf402
  409337:	fs mov eax,cs:0xf1679f0b
  40933e:	push   ebp
  40933f:	push   0x6eeb07f0
  409344:	dec    esp
  409345:	in     al,dx
  409346:	js     0x4093a9
  409348:	mov    eax,0x4abf2cf2
  40934d:	pop    ebp
  40934e:	adc    DWORD PTR [esi-0x5cecfa76],esi
  409354:	cmp    eax,0x430e10d9
  409359:	call   0xf3b7:0x71a68704
  409360:	(bad)  [edi-0x2fbb3b5d]
  409366:	add    ah,BYTE PTR [ebp+0x60]
  409369:	jmp    0xc31b:0xeaa085df
  409370:	call   0xf3775490
  409375:	jno    0x4093bd
  409377:	sbb    BYTE PTR [eax+eax*1],dl
  40937a:	or     cl,cl
  40937c:	aam    0x2
  40937e:	adc    al,0xff
  409380:	xchg   esi,eax
  409381:	dec    esp
  409382:	out    dx,eax
  409383:	dec    edi
  409384:	dec    ebx
  409385:	xor    BYTE PTR [edx],al
  409387:	cmp    BYTE PTR [esi+ecx*1],0xe0
  40938b:	(bad)
  40938f:	pop    ds
  409390:	ret    0xcded
  409393:	mov    dh,0xe8
  409395:	es lock sar ecx,1
  409399:	and    eax,0x5183b3d1
  40939e:	or     al,bl
  4093a0:	rcl    DWORD PTR [eax],cl
  4093a2:	sti    
  4093a3:	inc    ebp
  4093a4:	jnp    0x40935d
  4093a6:	mov    edi,0x76de8700
  4093ab:	out    dx,eax
  4093ac:	inc    edi
  4093ad:	jbe    0x40942d
  4093af:	aad    0x48
  4093b1:	jnp    0x4093cf
  4093b3:	retf   
  4093b4:	mov    edx,0xbb3218f8
  4093b9:	(bad)  
  4093bb:	repz pop ecx
  4093bd:	test   BYTE PTR [esi-0xf2c3972],dh
  4093c3:	inc    ecx
  4093c4:	mov    ah,0x5d
  4093c6:	in     eax,0xca
  4093c8:	mov    al,0xf6
  4093ca:	mov    ecx,DWORD PTR [esi+0x7d]
  4093cd:	jae    0x409404
  4093cf:	pop    ecx
  4093d0:	and    ah,ch
  4093d2:	arpl   WORD PTR [edi],dx
  4093d4:	and    DWORD PTR [eax-0x27],ebp
  4093d7:	xchg   BYTE PTR [esi+0x6],ah
  4093da:	and    eax,0x3fd84576
  4093df:	shl    DWORD PTR [ebx],1
  4093e1:	pop    esi
  4093e2:	and    edi,DWORD PTR [eax+0xd1c1588]
  4093e8:	fisttp DWORD PTR [ebx-0x53c9e9ec]
  4093ee:	mov    fs,WORD PTR [edx+0x1ac6c01e]
  4093f4:	sti    
  4093f5:	pop    eax
  4093f6:	js     0x409397
  4093f8:	arpl   WORD PTR [esi],cx
  4093fa:	neg    DWORD PTR [ebp-0x3074fa4a]
  409400:	sbb    al,0x6f
  409402:	(bad)  
  409403:	in     eax,dx
  409404:	popa   
  409405:	mov    WORD PTR [ebp+0x3cbd4739],?
  40940b:	int    0x51
  40940d:	cmp    ecx,DWORD PTR [eax]
  40940f:	pop    ss
  409410:	inc    eax
  409411:	loop   0x409416
  409413:	jae    0x4093c3
  409415:	xchg   ebx,eax
  409416:	inc    edx
  409417:	sbb    ch,BYTE PTR ds:0xf6d9ab6f
  40941d:	or     al,0xfa
  409420:	and    al,0x66
  409422:	mov    esp,0xaf1841c
  409427:	popf   
  409428:	pusha  
  409429:	das    
  40942a:	scas   al,BYTE PTR es:[edi]
  40942b:	push   0x21
  40942d:	test   DWORD PTR [esi+0x571da283],esp
  409433:	popa   
  409434:	cmp    eax,0x2879247a
  409439:	dec    eax
  40943a:	dec    ecx
  40943b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40943c:	test   ah,dl
  40943e:	jne    0x40943c
  409440:	mov    DWORD PTR [ebp+0x6814994a],ecx
  409446:	and    ecx,ecx
  409448:	stos   BYTE PTR es:[edi],al
  409449:	jne    0x40941d
  40944b:	ret    0x7a82
  40944e:	jne    0x4093e1
  409450:	cmp    eax,0xd4df8e62
  409455:	mov    esp,esi
  409457:	and    esp,DWORD PTR [ebp+0x1e6bba51]
  40945d:	imul   edx,DWORD PTR [esp+esi*4-0x74008c0f],0xffffffd8
  409465:	adc    dl,0xa9
  409468:	mov    cl,0x4a
  40946a:	in     eax,0x1e
  40946c:	or     dh,BYTE PTR [ecx-0xd740e1c]
  409472:	pop    ds
  409473:	jnp    0x40948b
  409475:	mov    bh,0x8e
  409477:	jb     0x409469
  409479:	shl    esp,1
  40947b:	call   0x9ab0be46
  409480:	rol    DWORD PTR [ebx+0x6],1
  409483:	ja     0x409422
  409485:	js     0x409451
  409487:	mov    eax,0xddb01a81
  40948c:	jnp    0x409463
  40948e:	aam    0xe9
  409490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409491:	ins    BYTE PTR es:[edi],dx
  409492:	push   esp
  409493:	add    ebp,esp
  409495:	iret   
  409496:	jns    0x4094a9
  409498:	push   edi
  409499:	mov    WORD PTR gs:[esi],ds
  40949c:	add    al,0xc4
  40949e:	dec    edi
  40949f:	sbb    cl,BYTE PTR [ebp+0x29]
  4094a2:	fistp  QWORD PTR [ecx-0x12]
  4094a5:	shr    BYTE PTR [eax+ebp*4+0x6f],0xd3
  4094aa:	xlat   BYTE PTR ds:[ebx]
  4094ab:	xchg   esi,eax
  4094ac:	lds    ebx,FWORD PTR [ebx+0x546fbf8b]
  4094b2:	ins    BYTE PTR es:[edi],dx
  4094b3:	retf   
  4094b4:	mov    ds:0xf4cdead5,al
  4094b9:	pop    ebx
  4094ba:	dec    ecx
  4094bb:	stc    
  4094bc:	fcomip st,st(5)
  4094be:	add    ecx,DWORD PTR [ebx]
  4094c0:	test   BYTE PTR [esi+ecx*8],cl
  4094c3:	retf   
  4094c4:	cli    
  4094c5:	xor    al,0x1c
  4094c7:	(bad)  
  4094c8:	rol    BYTE PTR [ecx],0x88
  4094cb:	jmp    0x106e:0x4d46dec5
  4094d2:	pushf  
  4094d3:	jecxz  0x4094d7
  4094d5:	sbb    al,0x96
  4094d7:	dec    edx
  4094d8:	sbb    al,0xbc
  4094da:	xchg   cx,ax
  4094dc:	into   
  4094dd:	adc    BYTE PTR [esp+esi*1+0x51],cl
  4094e1:	xor    al,0x42
  4094e3:	sbb    al,0xa3
  4094e5:	xlat   BYTE PTR ds:[ebx]
  4094e6:	fs mov esp,0x1e2048dc
  4094ec:	in     al,0x69
  4094ee:	xchg   esi,esp
  4094f0:	test   eax,0x2b54377e
  4094f5:	out    dx,al
  4094f6:	add    DWORD PTR ds:0xe8fb296c,edx
  4094fc:	je     0x4094b7
  4094fe:	pop    ebp
  4094ff:	jae    0x4094d5
  409501:	hlt    
  409502:	mov    ch,0xa7
  409504:	jb     0x4094cd
  409506:	push   ebx
  409507:	cli    
  409508:	xor    esp,ebx
  40950a:	dec    ebx
  40950b:	stos   DWORD PTR es:[edi],eax
  40950c:	xor    DWORD PTR [eax-0x4e0a23ac],edx
  409512:	xlat   BYTE PTR ds:[ebx]
  409513:	sbb    ch,BYTE PTR [ebp-0x52c24f15]
  409519:	inc    eax
  40951a:	push   esp
  40951b:	sbb    BYTE PTR [ebp-0x6e55ecfe],cl
  409521:	pop    esp
  409522:	data16 jge 0x40955b
  409525:	cmp    BYTE PTR [ecx+esi*2-0x653adbe8],bl
  40952c:	inc    edx
  40952d:	or     esp,DWORD PTR [eax+ebx*8+0x106f92b2]
  409534:	sbb    esp,ebx
  409536:	pop    esp
  409537:	mov    al,ds:0x1bd513ae
  40953c:	or     DWORD PTR [edx+0x6b672681],edx
  409542:	dec    esp
  409543:	mul    BYTE PTR [ebx-0x79177958]
  409549:	sar    BYTE PTR [ebx],0x89
  40954c:	sbb    al,0x43
  40954e:	xlat   BYTE PTR ds:[ebx]
  40954f:	out    dx,eax
  409550:	loope  0x40955e
  409552:	shl    DWORD PTR ds:0xd13e30f5,1
  409558:	scas   eax,DWORD PTR es:[edi]
  409559:	lahf   
  40955a:	icebp  
  40955b:	xchg   BYTE PTR [esi+0x55],bl
  40955e:	pop    ebx
  40955f:	mov    cl,0x44
  409561:	sbb    eax,0x153c6bdf
  409566:	ins    BYTE PTR es:[edi],dx
  409567:	sub    eax,0xd1e10147
  40956c:	in     eax,0xbc
  40956e:	aaa    
  40956f:	or     eax,0xf857500a
  409574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409575:	ret    0x4d6d
  409578:	int    0xc9
  40957a:	jle    0x409521
  40957c:	or     cl,BYTE PTR [eax-0x7172a7ea]
  409582:	jl     0x4095c4
  409584:	mov    ds:0x12d5f1f9,eax
  409589:	mov    edx,0xa5be7437
  40958e:	inc    BYTE PTR [edx]
  409590:	into   
  409591:	push   ss
  409592:	adc    BYTE PTR [esi+0x18],dh
  409595:	and    esp,edx
  409597:	out    0x49,al
  409599:	sahf   
  40959a:	pop    ss
  40959b:	push   0xffffffe5
  40959d:	mov    esi,0xf8a27c9a
  4095a2:	dec    ebx
  4095a3:	jb     0x4095d2
  4095a5:	adc    DWORD PTR [esi-0x7e],esi
  4095a8:	fmul   DWORD PTR [esi-0x6a1f3ec8]
  4095ae:	popf   
  4095af:	dec    esp
  4095b0:	clc    
  4095b1:	mov    ebp,0x67e9ec7b
  4095b6:	iret   
  4095b7:	aaa    
  4095b8:	aad    0xcc
  4095ba:	xlat   BYTE PTR ds:[bx]
  4095bc:	push   esp
  4095bd:	adc    eax,0xae4de93a
  4095c2:	sbb    DWORD PTR [ebx],ecx
  4095c4:	shl    BYTE PTR [ebp-0x3194149a],1
  4095ca:	and    DWORD PTR [eax],edx
  4095cc:	repz addr16 jg 0x409558
  4095d0:	inc    ecx
  4095d1:	mov    es,WORD PTR [edx]
  4095d3:	mov    ch,0x80
  4095d5:	inc    edx
  4095d6:	sbb    DWORD PTR [ecx-0x3b33c28b],edi
  4095dc:	jmp    0x40962c
  4095de:	sti    
  4095df:	scas   eax,DWORD PTR es:[edi]
  4095e0:	xchg   DWORD PTR [edx+0x48],edx
  4095e3:	adc    eax,DWORD PTR [edx-0x55babc23]
  4095e9:	mov    ebx,0xc73c7c18
  4095ee:	test   eax,0x765e5175
  4095f3:	retf   0x7fb4
  4095f6:	in     al,0xc0
  4095f8:	xchg   ebx,eax
  4095f9:	jge    0x4095c5
  4095fb:	pop    ds
  4095fc:	pop    ebx
  4095fd:	add    ebx,DWORD PTR [eax-0x28]
  409600:	push   ebp
  409601:	mov    edx,0xbe4f6a1
  409606:	mov    dl,0xa3
  409608:	or     eax,edx
  40960a:	ss adc eax,0xda8ea145
  409610:	cmp    bl,BYTE PTR [edx+0xf16ad43]
  409616:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409617:	lahf   
  409618:	cmp    eax,DWORD PTR [eax]
  40961a:	push   ecx
  40961b:	push   esi
  40961c:	imul   esi,DWORD PTR [ebx+0x1],0xd5db6357
  409623:	pop    es
  409624:	fcom   QWORD PTR [edi+ebp*4+0xd]
  409628:	lahf   
  409629:	jg     0x409626
  40962b:	fisubr WORD PTR [ecx-0x12f137a8]
  409631:	sub    al,0x11
  409633:	jl     0x4096ab
  409635:	dec    ecx
  409636:	mov    edx,DWORD PTR [eax+0x2c491227]
  40963c:	add    eax,0x9166f45c
  409641:	push   edx
  409642:	loop   0x409617
  409644:	xchg   BYTE PTR [esi],ah
  409646:	lods   eax,DWORD PTR ds:[esi]
  409647:	pop    edi
  409648:	shl    DWORD PTR [ebp-0x77f5d482],0x58
  40964f:	mov    edx,0xc0563e27
  409654:	xchg   dl,dl
  409656:	bound  ebp,QWORD PTR [eax-0x4432286e]
  40965c:	stos   BYTE PTR es:[edi],al
  40965d:	xchg   esp,eax
  40965e:	out    0xc8,eax
  409660:	out    0x69,al
  409662:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409663:	adc    bh,ah
  409665:	int3   
  409666:	or     al,0xcc
  409668:	mov    al,0x4e
  40966a:	mov    ds:0x9872dc15,al
  40966f:	out    dx,al
  409670:	inc    edi
  409671:	mov    bl,0x80
  409673:	stos   BYTE PTR es:[edi],al
  409674:	adc    al,0xaf
  409676:	jge    0x40960c
  409678:	fs enter 0xb75,0x9f
  40967d:	mov    WORD PTR [esi-0x19],ss
  409680:	push   cs
  409681:	loope  0x409670
  409683:	lea    ebx,[edi-0x58c7465a]
  409689:	mov    ebp,0x2ee98aca
  40968e:	ja     0x409679
  409690:	push   0xe428ee41
  409695:	(bad)  
  409697:	cmc    
  409698:	out    dx,al
  409699:	mov    dh,0x80
  40969b:	mov    edi,0x7fddde40
  4096a0:	add    edx,ebp
  4096a2:	mov    eax,ds:0xd76f31e6
  4096a7:	in     al,dx
  4096a8:	and    BYTE PTR [ebp+0x3d],al
  4096ab:	bound  esp,QWORD PTR ss:[ecx]
  4096ae:	sub    BYTE PTR [ebp+0x1c03aca1],al
  4096b4:	stc    
  4096b5:	sbb    BYTE PTR [eax-0x2bde17f6],ah
  4096bb:	mov    cl,0x87
  4096bd:	jmp    0xa5a1:0x4a57f54f
  4096c4:	test   DWORD PTR [edx],edi
  4096c6:	cli    
  4096c7:	aaa    
  4096c8:	cmp    BYTE PTR [eax+ebx*8-0xc],dl
  4096cc:	(bad)  
  4096cd:	cmc    
  4096ce:	and    eax,0x94449e4c
  4096d3:	sbb    eax,0x5f424e0
  4096d8:	jns    0x409733
  4096da:	outs   dx,BYTE PTR ds:[esi]
  4096db:	mov    ah,bh
  4096dd:	jle    0x409736
  4096df:	mov    dl,0x1f
  4096e1:	mov    ah,0x6d
  4096e3:	jmp    0x6cc0:0xc2b0343d
  4096ea:	cdq    
  4096eb:	cmp    eax,0x133c694b
  4096f0:	mov    bl,0x9b
  4096f2:	and    al,0x22
  4096f4:	cmp    ch,BYTE PTR [esi]
  4096f6:	scas   eax,DWORD PTR es:[edi]
  4096f7:	enter  0x9852,0x85
  4096fb:	ins    DWORD PTR es:[edi],dx
  4096fc:	cmp    al,0x3b
  4096fe:	jmp    0x1260:0x94b85809
  409705:	push   cs
  409706:	cdq    
  409707:	xor    eax,0xa0ccf7f5
  40970c:	pop    es
  40970d:	sub    bh,al
  40970f:	arpl   WORD PTR [ecx-0x47ce3fa4],di
  409715:	mov    ebx,DWORD PTR [ecx-0x7598cc8c]
  40971b:	(bad)  
  40971d:	fsubr  st,st(1)
  40971f:	fdivr  DWORD PTR [ebp+0x11]
  409722:	outs   dx,BYTE PTR es:[esi]
  409724:	fisubr WORD PTR [edi]
  409726:	sbb    cl,BYTE PTR [ecx]
  409728:	fisttp DWORD PTR [esi-0x1e8bf58a]
  40972e:	pop    ds
  40972f:	fild   QWORD PTR [edi+0x56]
  409732:	lods   al,BYTE PTR ds:[esi]
  409733:	jl     0x4096c3
  409735:	dec    edi
  409736:	adc    DWORD PTR [ebp-0x5],edi
  409739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973a:	sbb    eax,0x7fa56664
  40973f:	mov    eax,ds:0xfcd7bd53
  409744:	leave  
  409745:	sub    eax,0xdba291a
  40974a:	cs pop eax
  40974c:	shr    DWORD PTR [edi+0x10b2491f],1
  409752:	push   ebp
  409753:	(bad)  
  409754:	cdq    
  409755:	jl     0x40979c
  409757:	leave  
  409758:	mov    esp,0xdb8518fb
  40975d:	ins    BYTE PTR es:[edi],dx
  40975e:	push   cs
  40975f:	cmp    DWORD PTR [edi],ebx
  409761:	adc    DWORD PTR ds:0xa13022e6,eax
  409767:	and    al,0xc7
  409769:	mov    eax,ds:0x1346693e
  40976e:	jbe    0x4097d3
  409770:	xchg   edx,eax
  409771:	sbb    eax,0xfc87680e
  409776:	mov    al,ds:0xf2134acc
  40977b:	ins    BYTE PTR es:[edi],dx
  40977c:	xchg   BYTE PTR [edi-0x3eb53cd1],cl
  409782:	in     al,dx
  409783:	inc    ebx
  409784:	fstp   DWORD PTR [edi+0x30d12e83]
  40978a:	sbb    ah,BYTE PTR [edi-0x3c]
  40978d:	or     dl,BYTE PTR [eax-0x14]
  409790:	cwde   
  409791:	xchg   cl,bh
  409793:	or     BYTE PTR [edx],al
  409795:	mov    cl,0xc8
  409797:	sub    al,cl
  409799:	cld    
  40979a:	into   
  40979b:	shl    BYTE PTR cs:[edx],1
  40979e:	jp     0x409785
  4097a0:	dec    ebx
  4097a1:	cmp    al,0xa6
  4097a3:	ret    0x32df
  4097a6:	mov    ds:0x986417c3,al
  4097ab:	fldenv [edi-0x1aff4362]
  4097b1:	aad    0x99
  4097b3:	ret    0x7440
  4097b6:	fimul  DWORD PTR [eax+0x3e]
  4097b9:	and    al,0x2b
  4097bb:	lods   al,BYTE PTR ds:[esi]
  4097bc:	addr16 sbb ch,0x5e
  4097c0:	std    
  4097c1:	fild   DWORD PTR cs:[ebx+edx*2]
  4097c5:	ret    
  4097c6:	pop    ebp
  4097c7:	mov    ebx,0x1c045d2a
  4097cc:	clc    
  4097cd:	stos   DWORD PTR es:[edi],eax
  4097ce:	ret    0x2711
  4097d1:	mov    ecx,0x9330b9f5
  4097d6:	daa    
  4097d7:	test   DWORD PTR [edx+ebx*8-0x420497b2],ebx
  4097de:	shr    BYTE PTR [ecx-0x26],0xcf
  4097e2:	mov    BYTE PTR [edx-0x76],bh
  4097e5:	adc    eax,0x1297a095
  4097ea:	dec    esi
  4097eb:	fimul  DWORD PTR [edi+0x57]
  4097ee:	jo     0x409779
  4097f0:	sahf   
  4097f1:	sahf   
  4097f2:	ins    DWORD PTR es:[edi],dx
  4097f3:	leave  
  4097f4:	sub    DWORD PTR [ebp+0x16ac2920],eax
  4097fa:	jne    0x40979c
  4097fc:	aas    
  4097fd:	xchg   esp,eax
  4097fe:	sbb    edi,DWORD PTR [ebx-0x3e]
  409801:	scas   eax,DWORD PTR es:[edi]
  409802:	int    0xbc
  409804:	sbb    cl,BYTE PTR [edi]
  409806:	or     eax,0x6d9ecec1
  40980b:	add    eax,esp
  40980d:	mov    BYTE PTR [esi],0x2c
  409810:	ja     0x40980e
  409812:	test   eax,0x9a7e9b59
  409817:	push   ss
  409818:	inc    ecx
  409819:	pop    ss
  40981a:	div    DWORD PTR [edi]
  40981c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40981d:	fld    DWORD PTR [edx]
  40981f:	in     al,0xa4
  409821:	leave  
  409822:	cmp    al,0xb0
  409824:	ds jne 0x409856
  409827:	and    ah,BYTE PTR [edx]
  409829:	repz loope 0x409801
  40982c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40982d:	cs mov dl,0x7e
  409830:	psraw  mm0,mm7
  409833:	div    DWORD PTR ds:0x842a6161
  409839:	jecxz  0x4097bf
  40983b:	aam    0xa4
  40983d:	cmp    bh,BYTE PTR [ebx+0x77391932]
  409843:	sbb    eax,0xdc35106f
  409848:	and    dl,bh
  40984a:	stc    
  40984b:	les    edi,FWORD PTR [ebx]
  40984d:	mov    edi,0xaaa54577
  409852:	enter  0x2588,0x8a
  409856:	push   es
  409857:	xor    eax,0x88b011aa
  40985c:	xlat   BYTE PTR ds:[ebx]
  40985d:	add    al,0x16
  40985f:	stc    
  409860:	retf   
  409861:	jp     0x409897
  409863:	push   edi
  409864:	sbb    BYTE PTR [ebx+0x31],0x13
  409868:	inc    esp
  409869:	int    0x9f
  40986b:	ins    BYTE PTR es:[edi],dx
  40986c:	test   BYTE PTR [ebx],dh
  40986e:	jmp    0xa551:0xbf9c5308
  409875:	push   ss
  409876:	fs xchg edi,eax
  409878:	leave  
  409879:	add    BYTE PTR [edx],dl
  40987b:	stos   BYTE PTR es:[edi],al
  40987c:	popf   
  40987d:	inc    ebx
  40987e:	dec    ebx
  40987f:	sub    eax,0xcd8b7eab
  409884:	ss aam 0xe4
  409887:	xor    bl,bh
  409889:	aad    0x30
  40988b:	sub    al,0xf8
  40988d:	lock popf 
  40988f:	xor    DWORD PTR [ebx+0x4e6ab8f4],edx
  409895:	ret    0x8864
  409898:	je     0x4098b3
  40989a:	push   ebp
  40989b:	sub    bh,BYTE PTR [edi+0x26]
  40989e:	push   ebp
  40989f:	es jb  0x4098f6
  4098a2:	inc    edi
  4098a3:	push   esp
  4098a4:	sbb    al,0xdd
  4098a6:	inc    edx
  4098a7:	shl    eax,cl
  4098a9:	daa    
  4098aa:	mov    WORD PTR [ecx],fs
  4098ac:	dec    ecx
  4098ad:	jge    0x4098e4
  4098af:	mov    esp,0x4ef9cee2
  4098b4:	dec    eax
  4098b5:	inc    eax
  4098b7:	sub    al,0xb5
  4098b9:	ror    DWORD PTR [ebp-0x1ab1ef30],1
  4098bf:	lods   eax,DWORD PTR ds:[esi]
  4098c0:	xchg   ebp,eax
  4098c1:	dec    edi
  4098c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098c3:	std    
  4098c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098c5:	sbb    al,0x52
  4098c7:	sar    DWORD PTR [eax-0xc96180a],cl
  4098cd:	and    esp,DWORD PTR [ebx+0x60]
  4098d0:	sbb    cl,BYTE PTR [ecx]
  4098d2:	jecxz  0x409863
  4098d4:	mov    ds:0x2859c289,al
  4098d9:	adc    ebx,ecx
  4098db:	push   ss
  4098dc:	sbb    dh,BYTE PTR [ecx-0x52]
  4098df:	test   DWORD PTR [eax+0x1e971a79],esp
  4098e5:	push   eax
  4098e6:	cmp    BYTE PTR [edx],ah
  4098e8:	jp     0x40989a
  4098ea:	mov    cs,WORD PTR ds:0xfe4a98cd
  4098f0:	xchg   edi,eax
  4098f1:	dec    DWORD PTR [eax-0x80]
  4098f4:	sahf   
  4098f5:	outs   dx,DWORD PTR ds:[esi]
  4098f6:	sub    al,0x67
  4098f8:	ss ret 
  4098fa:	add    DWORD PTR ss:[eax+0xc],esi
  4098fe:	xchg   esp,eax
  4098ff:	ds xor al,0x6c
  409902:	push   es
  409903:	sub    BYTE PTR [ebp-0x4aa5f81],dl
  409909:	sbb    DWORD PTR [edi-0x20],ebp
  40990c:	fcmovnb st,st(1)
  40990e:	mov    ecx,0x79b8508c
  409913:	pop    ebx
  409914:	sbb    eax,DWORD PTR [esi-0x74edf30c]
  40991a:	les    eax,FWORD PTR [ebp+ebp*4+0x19003cfa]
  409921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409922:	hlt    
  409923:	or     DWORD PTR [ebp-0x712eb14c],edi
  409929:	icebp  
  40992a:	int    0x64
  40992c:	es push si
  40992f:	inc    edx
  409930:	mov    eax,fs
  409932:	sbb    BYTE PTR es:[ecx-0x25d3f8f6],dh
  409939:	adc    eax,0xcb932028
  40993e:	shl    BYTE PTR [edx+0x79],cl
  409941:	sbb    eax,0x59ac32cf
  409946:	dec    edx
  409947:	dec    ecx
  409948:	xchg   edi,eax
  409949:	out    dx,eax
  40994a:	xor    dh,BYTE PTR [edi-0x14]
  40994d:	outs   dx,BYTE PTR ds:[esi]
  40994e:	push   cs
  40994f:	out    0x55,al
  409951:	pushf  
  409952:	loop   0x409932
  409954:	sbb    al,0x29
  409957:	add    eax,0x69eb430a
  40995c:	(bad)  
  40995d:	sbb    BYTE PTR [edi],dl
  40995f:	shl    BYTE PTR ds:0xbc5dc319,cl
  409965:	or     ebx,ebp
  409967:	mov    cl,0xc8
  409969:	int    0x77
  40996b:	ffree  st(3)
  40996d:	jo     0x409968
  40996f:	add    cl,BYTE PTR [ebx+0x40]
  409972:	addr16 jb 0x40994d
  409975:	test   bh,bl
  409977:	mov    bh,0x79
  409979:	cwde   
  40997a:	in     al,0xe1
  40997c:	mov    ebx,0x64317a68
  409981:	adc    DWORD PTR ds:0x2e2cee66,0xcbd99183
  40998b:	fsubr  QWORD PTR [esi+0x7f]
  40998e:	fmul   QWORD PTR [esi]
  409990:	in     eax,0xc8
  409992:	add    edi,edx
  409994:	xchg   edi,eax
  409995:	mov    ch,0xc4
  409997:	retf   
  409998:	jo     0x409a07
  40999a:	rcl    bh,cl
  40999c:	cmp    eax,0x7e4a91c4
  4099a1:	mov    ds:0x3ac27982,al
  4099a6:	adc    al,0x16
  4099a8:	imul   eax,ecx,0x6e2a9a16
  4099ae:	scas   al,BYTE PTR es:[edi]
  4099af:	pushf  
  4099b0:	jnp    0x409a0c
  4099b2:	les    esp,FWORD PTR [edi-0x14ef3320]
  4099b8:	test   eax,0x2a3e5809
  4099bd:	fld    DWORD PTR [eax+0x257b1ed0]
  4099c3:	(bad)  
  4099c4:	fisttp QWORD PTR [ebx-0x50]
  4099c7:	and    BYTE PTR [edi+0x72],0x30
  4099cb:	mov    ah,0xb2
  4099cd:	mov    al,ds:0x11f1f211
  4099d2:	mov    ebx,0x4b4e8859
  4099d7:	fisttp WORD PTR ds:0x5c28f7ec
  4099dd:	hlt    
  4099de:	xor    eax,0x6936d959
  4099e3:	outs   dx,BYTE PTR ds:[esi]
  4099e4:	popf   
  4099e5:	aad    0xfd
  4099e7:	adc    al,0xf9
  4099e9:	cmp    BYTE PTR [esi],ah
  4099eb:	fucomi st,st(2)
  4099ed:	add    BYTE PTR [eax-0x38],dl
  4099f0:	adc    eax,0x841f0087
  4099f5:	mov    al,0xcc
  4099f7:	or     BYTE PTR [ecx-0x3],dl
  4099fa:	push   ebx
  4099fb:	xchg   edx,eax
  4099fc:	mov    bh,dh
  4099fe:	push   eax
  4099ff:	das    
  409a00:	pusha  
  409a01:	xchg   ebx,eax
  409a02:	inc    ebx
  409a03:	fist   DWORD PTR [eax-0x7901c616]
  409a09:	add    al,0xc
  409a0b:	into   
  409a0c:	cmp    edx,DWORD PTR [esi+0x42]
  409a0f:	xchg   ebp,eax
  409a10:	aas    
  409a11:	pop    eax
  409a12:	cmc    
  409a13:	xchg   ebx,eax
  409a14:	inc    edi
  409a15:	add    edx,DWORD PTR [ebx-0x3a]
  409a18:	mov    ecx,0xb99145a4
  409a1d:	mov    DWORD PTR [edi+0x579b2b8c],ecx
  409a23:	xchg   ebp,eax
  409a24:	ja     0x409a4f
  409a26:	popa   
  409a27:	xlat   BYTE PTR ds:[ebx]
  409a28:	aam    0x28
  409a2a:	sub    DWORD PTR ds:0x987c2fcf,edx
  409a30:	pop    eax
  409a31:	sbb    ch,bh
  409a33:	popa   
  409a34:	mov    ebx,0x5031e023
  409a39:	repz cmp BYTE PTR ds:0x31c40350,0x40
  409a41:	pushf  
  409a42:	daa    
  409a43:	sub    al,0xb5
  409a45:	bound  esi,QWORD PTR [ebx+0x5b0635f8]
  409a4b:	push   edi
  409a4c:	jb     0x409a5f
  409a4e:	aas    
  409a4f:	dec    edi
  409a50:	cmp    edx,ebx
  409a52:	loope  0x4099df
  409a54:	hlt    
  409a55:	adc    ax,0x30e3
  409a59:	xchg   ebx,eax
  409a5a:	imul   edi,DWORD PTR [esi],0xffffffeb
  409a5d:	ror    BYTE PTR [ebx-0x58],1
  409a60:	je     0x409a8b
  409a62:	ret    0x387f
  409a65:	mov    ebx,0x557eba9b
  409a6a:	clc    
  409a6b:	lahf   
  409a6c:	lods   al,BYTE PTR ds:[esi]
  409a6d:	push   eax
  409a6e:	ins    BYTE PTR es:[edi],dx
  409a6f:	hlt    
  409a70:	cmp    DWORD PTR [edi-0x7d802dd0],edi
  409a76:	(bad)  
  409a77:	repnz in eax,0x1
  409a7a:	aad    0x58
  409a7c:	jnp    0x409a4c
  409a7e:	push   ebx
  409a7f:	pop    ss
  409a80:	pushf  
  409a81:	add    cl,al
  409a83:	inc    ebp
  409a84:	fisttp WORD PTR [edx+0x20]
  409a87:	(bad)  
  409a88:	xor    ch,BYTE PTR [esi+0xc38e042]
  409a8e:	xchg   esi,eax
  409a8f:	jns    0x409a60
  409a91:	hlt    
  409a92:	out    0x20,eax
  409a94:	pushf  
  409a95:	mov    dh,0x28
  409a97:	fiadd  WORD PTR [eax-0x5a]
  409a9a:	or     al,0x65
  409a9c:	(bad)  
  409a9d:	xchg   ecx,eax
  409a9e:	lahf   
  409a9f:	pop    ecx
  409aa0:	(bad)  
  409aa1:	sub    edx,esp
  409aa3:	das    
  409aa4:	scas   al,BYTE PTR es:[edi]
  409aa5:	call   0xbc9d629f
  409aaa:	sub    al,0xf6
  409aac:	jmp    0x608f:0x4afa53d3
  409ab3:	mov    dl,0x5
  409ab5:	aam    0x38
  409ab7:	lea    eax,[esi+0x22]
  409aba:	lock dec sp
  409abd:	out    dx,eax
  409abe:	retf   
  409abf:	pop    ds
  409ac0:	test   edx,esi
  409ac2:	jle    0x409a89
  409ac4:	dec    ecx
  409ac5:	adc    eax,0x6a6563da
  409aca:	mov    cs,WORD PTR [ebx+0x62b277f5]
  409ad0:	xor    al,0x2e
  409ad2:	mov    dh,0x7e
  409ad4:	adc    DWORD PTR [eax+0x5f],edi
  409ad7:	cmp    DWORD PTR [esi+0x63],0xfffffff0
  409adb:	pop    ss
  409adc:	pop    esi
  409add:	xor    eax,0x5742ce5c
  409ae2:	fs aaa 
  409ae4:	xchg   DWORD PTR [esi+0x3a],edi
  409ae7:	lea    esi,[ebp-0x77dcc92c]
  409aed:	arpl   WORD PTR [ecx],si
  409aef:	pop    ds
  409af0:	sub    cl,BYTE PTR [ebx]
  409af2:	sbb    al,0x41
  409af4:	mov    eax,0xe6045d6
  409af9:	pop    ebx
  409afa:	call   0xe404123f
  409aff:	fidivr WORD PTR [ebp-0x21900607]
  409b05:	mov    dh,0x77
  409b07:	jae    0x409a89
  409b09:	xor    ecx,0x3
  409b0c:	push   edx
  409b0d:	std    
  409b0e:	cs enter 0xf31e,0x5f
  409b13:	mov    esp,0x8f3633de
  409b18:	xchg   BYTE PTR [ecx+0x4d],dh
  409b1b:	cmp    eax,0x48db0134
  409b20:	lods   eax,DWORD PTR ds:[esi]
  409b21:	not    BYTE PTR [edx+0x31fa1c55]
  409b27:	mov    bl,0x2c
  409b29:	prefetcht2 BYTE PTR [esi-0x73ec638f]
  409b30:	mov    ecx,0xa95f28ad
  409b35:	push   eax
  409b36:	jae    0x409b3d
  409b38:	mov    ch,BYTE PTR [ebp-0x16]
  409b3b:	xchg   ecx,eax
  409b3c:	jmp    0xe791aa3d
  409b41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b42:	jbe    0x409b46
  409b44:	bound  ecx,QWORD PTR [edi+esi*1-0x8fe70f0]
  409b4b:	scas   al,BYTE PTR es:[edi]
  409b4c:	add    al,0x64
  409b4e:	cmp    edi,esp
  409b50:	cwde   
  409b51:	dec    edi
  409b52:	stos   BYTE PTR es:[edi],al
  409b53:	pop    edi
  409b54:	fisttp WORD PTR [edx-0xbc2b25]
  409b5a:	popa   
  409b5b:	mov    gs,WORD PTR [esi+0x33a8f761]
  409b61:	cmovns edi,DWORD PTR [edx+0x22]
  409b65:	daa    
  409b66:	lods   al,BYTE PTR ds:[esi]
  409b67:	sub    eax,0xe703a39a
  409b6c:	into   
  409b6d:	mov    ah,0x0
  409b6f:	mov    dh,0x87
  409b71:	sbb    ah,BYTE PTR es:[ebp-0x59267e2a]
  409b78:	(bad)  
  409b79:	push   ebp
  409b7a:	push   ss
  409b7b:	std    
  409b7c:	pusha  
  409b7d:	test   eax,0x926ac2c4
  409b82:	mov    al,ds:0xb272a7d8
  409b87:	add    edx,DWORD PTR [esi-0x3b]
  409b8a:	data16 (bad) 
  409b8c:	mov    ah,0x32
  409b8e:	and    eax,0x8d40d5dd
  409b93:	xor    DWORD PTR [eax],0x47
  409b96:	pop    edi
  409b97:	dec    ebx
  409b98:	aad    0xac
  409b9a:	sub    DWORD PTR [edx],ecx
  409b9c:	xchg   esp,eax
  409b9d:	aas    
  409b9e:	add    DWORD PTR [ebp+0x50],0x7b4042d0
  409ba5:	adc    eax,0x866d6484
  409baa:	mov    ds:0x514f51,al
  409baf:	test   eax,0x90d0c46b
  409bb4:	mov    esi,0x7880513a
  409bb9:	in     eax,dx
  409bba:	aas    
  409bbb:	clc    
  409bbc:	lds    ebx,FWORD PTR [eax-0x30]
  409bbf:	lods   eax,DWORD PTR ds:[esi]
  409bc0:	lahf   
  409bc1:	aaa    
  409bc2:	lock ret 
  409bc4:	push   es
  409bc5:	xchg   esp,eax
  409bc6:	mov    ch,0x14
  409bc8:	fstp   TBYTE PTR [esi+eiz*4]
  409bcb:	mov    ecx,0x4a8b2b44
  409bd0:	sbb    DWORD PTR [esi+0x74],ebp
  409bd3:	test   al,0x6b
  409bd5:	push   ebx
  409bd6:	sbb    ch,dl
  409bd8:	jnp    0x409b6a
  409bda:	mov    edx,0xf591eb21
  409bdf:	dec    eax
  409be0:	jge    0x409b72
  409be2:	cmp    DWORD PTR [ebx],eax
  409be4:	or     eax,0xd69ccd73
  409be9:	and    al,0x37
  409beb:	and    al,0xf0
  409bed:	push   eax
  409bee:	daa    
  409bef:	xor    ebx,esi
  409bf1:	fmul   QWORD PTR [ebp+0x1a]
  409bf4:	jae    0x409ba0
  409bf6:	or     bl,dh
  409bf8:	sub    eax,0x14882f2c
  409bfd:	xchg   ecx,eax
  409bfe:	(bad)  
  409bff:	ficomp WORD PTR [edi+edx*8+0x600e7ab8]
  409c06:	xor    cl,BYTE PTR [edi]
  409c08:	xor    DWORD PTR [ecx],ecx
  409c0a:	xchg   edx,eax
  409c0b:	call   0x644ecc69
  409c10:	das    
  409c11:	int3   
  409c12:	jnp    0x409c36
  409c14:	adc    BYTE PTR [ecx],cl
  409c16:	(bad)  
  409c17:	je     0x409c5b
  409c19:	xchg   edx,eax
  409c1a:	inc    esp
  409c1b:	xor    eax,0xd67e4d7f
  409c20:	push   esi
  409c21:	mov    al,0x11
  409c23:	add    al,0x82
  409c25:	jo     0x409c78
  409c27:	jle    0x409c2b
  409c29:	pop    ebx
  409c2a:	retf   0x1c61
  409c2d:	mov    bl,0x9e
  409c2f:	in     eax,dx
  409c30:	lods   al,BYTE PTR ds:[esi]
  409c31:	or     eax,0x6266578
  409c36:	maxps  xmm7,xmm1
  409c39:	sbb    eax,0xf8b2bf5
  409c3e:	xor    bl,bh
  409c40:	and    eax,0x92dc33f4
  409c45:	xor    al,0xd7
  409c47:	ds pop ecx
  409c49:	add    eax,0x44d262c6
  409c4e:	jno    0x409cbc
  409c50:	popa   
  409c51:	push   ss
  409c52:	sub    al,0xe8
  409c54:	ror    BYTE PTR [edx+0x4e],cl
  409c57:	aam    0xf0
  409c59:	mov    edi,ss
  409c5b:	pop    edx
  409c5c:	or     ecx,0x67
  409c5f:	push   eax
  409c60:	sti    
  409c61:	in     al,dx
  409c62:	test   DWORD PTR [eax],eax
  409c64:	cdq    
  409c65:	mov    DWORD PTR [edx+0x1f5f8437],ebx
  409c6b:	jo     0x409bed
  409c6d:	jb     0x409ce6
  409c6f:	lods   al,BYTE PTR ds:[esi]
  409c70:	js     0x409c22
  409c72:	mov    DWORD PTR [eax-0x32],edx
  409c75:	add    al,0x4d
  409c77:	push   es
  409c78:	push   edi
  409c79:	inc    edi
  409c7a:	inc    edx
  409c7b:	mov    edx,0x3e90ebc9
  409c80:	jp     0x409ca2
  409c82:	std    
  409c83:	or     eax,0x452291a3
  409c88:	addr16 das 
  409c8a:	je     0x409cad
  409c8c:	fist   DWORD PTR [ecx-0x55d81531]
  409c92:	xchg   DWORD PTR [ebp-0x7d],esi
  409c95:	sbb    DWORD PTR ds:0x89ac090b,0xffffff88
  409c9c:	pop    eax
  409c9d:	adc    DWORD PTR [ecx-0x72],0xffffff98
  409ca1:	(bad)  
  409ca2:	push   cs
  409ca3:	xor    eax,0x5d54c2be
  409ca8:	xor    DWORD PTR ds:0xd22d19ff,edi
  409cae:	std    
  409caf:	fild   WORD PTR [edx-0x1c]
  409cb2:	ret    0xcc59
  409cb5:	retf   
  409cb6:	pop    esp
  409cb7:	lock dec ebx
  409cb9:	adc    al,0x89
  409cbb:	and    dl,0x5b
  409cbe:	mov    dl,0xe4
  409cc0:	sbb    al,0x4d
  409cc2:	push   esi
  409cc3:	clc    
  409cc4:	mov    cl,0x46
  409cc6:	xor    eax,0x9f22ad1f
  409ccb:	jl     0x409c74
  409ccd:	jl     0x409d4b
  409ccf:	xchg   esi,eax
  409cd0:	mov    bl,0xe4
  409cd2:	inc    ebx
  409cd3:	xor    al,0xd1
  409cd5:	or     al,0x49
  409cd7:	es cmp eax,0xbbb39eb
  409cdd:	imul   esi,DWORD PTR [bx],0xc4d5c1bd
  409ce4:	xor    DWORD PTR [ebp+0x62],esi
  409ce7:	arpl   WORD PTR [edi],ax
  409ce9:	inc    edx
  409cea:	fbstp  TBYTE PTR [eax+0x1e]
  409ced:	(bad)  
  409cee:	shl    BYTE PTR [esi-0x42],cl
  409cf1:	cmp    esi,DWORD PTR [edi+0xe]
  409cf4:	les    esi,FWORD PTR [ebx-0x28be20c8]
  409cfa:	mov    es,WORD PTR [ebx+0x17808627]
  409d00:	pop    ecx
  409d01:	sub    eax,0x6357c63e
  409d06:	cwde   
  409d07:	je     0x409d81
  409d09:	sub    eax,DWORD PTR [eax+0x5a]
  409d0c:	add    eax,0x68c37669
  409d11:	fistp  DWORD PTR [eax]
  409d13:	cmp    esi,DWORD PTR ds:0x1e448e02
  409d19:	in     eax,dx
  409d1a:	mov    esi,0xbed3bbbf
  409d1f:	sub    al,0x90
  409d21:	sbb    dl,bl
  409d23:	adc    ch,bl
  409d25:	test   DWORD PTR [edx-0x69b363b5],edi
  409d2b:	mov    ah,0x87
  409d2d:	mov    esp,0x188ca1e7
  409d32:	push   cs
  409d33:	cmp    ah,BYTE PTR [edx-0x4a6190fb]
  409d39:	scas   al,BYTE PTR es:[edi]
  409d3a:	popf   
  409d3b:	sar    BYTE PTR [ecx-0x19],cl
  409d3e:	stos   BYTE PTR es:[edi],al
  409d3f:	call   0x786f3606
  409d44:	cmc    
  409d45:	jmp    0x409d89
  409d47:	dec    esi
  409d48:	test   DWORD PTR [ebp-0x46fe6511],esi
  409d4e:	popf   
  409d4f:	ret    
  409d50:	push   ebx
  409d51:	jbe    0x409dc2
  409d53:	mov    eax,ds:0x652c1cbe
  409d58:	int    0xdb
  409d5a:	mov    WORD PTR [edx],?
  409d5c:	sub    cl,BYTE PTR [ecx]
  409d5e:	daa    
  409d5f:	imul   eax
  409d61:	jecxz  0x409dd7
  409d63:	or     esi,DWORD PTR [esi-0x46]
  409d66:	sahf   
  409d67:	xor    eax,0xb5fb1750
  409d6c:	adc    DWORD PTR [ecx+0x32],esi
  409d6f:	jnp    0x409d55
  409d71:	pusha  
  409d72:	in     al,0xc3
  409d74:	inc    edx
  409d75:	popf   
  409d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d77:	add    dl,ch
  409d79:	mov    esi,0xf31bc74b
  409d7e:	shr    BYTE PTR [edx+0x13],cl
  409d81:	jg     0x409d3a
  409d83:	adc    al,0x3c
  409d85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d86:	adc    edx,ebp
  409d88:	cmp    al,0x7a
  409d8a:	push   ebp
  409d8b:	jmp    0x367c:0xec01bd49
  409d92:	sub    edi,DWORD PTR [esi]
  409d94:	in     eax,0xb3
  409d96:	mov    dl,BYTE PTR [ecx+ecx*1+0x1b]
  409d9a:	xor    DWORD PTR [esi],0xffffff8a
  409d9d:	push   ebx
  409d9e:	push   ebp
  409d9f:	xor    DWORD PTR [esi-0xc],0xffffffd5
  409da3:	and    al,0x7b
  409da5:	sub    al,dl
  409da7:	les    edx,FWORD PTR [esp+edx*4-0x5]
  409dab:	or     ah,BYTE PTR [esi]
  409dad:	loopne 0x409e04
  409daf:	add    al,0xe0
  409db1:	fcom   DWORD PTR [ecx-0x699308ad]
  409db7:	daa    
  409db8:	lods   al,BYTE PTR ds:[esi]
  409db9:	add    edi,edi
  409dbb:	mov    BYTE PTR [ecx+0x73468c61],al
  409dc1:	and    dh,dl
  409dc3:	push   ebx
  409dc4:	fst    QWORD PTR [esi]
  409dc6:	sub    edi,DWORD PTR [eax+0x7]
  409dc9:	outs   dx,DWORD PTR ds:[esi]
  409dca:	pop    esi
  409dcb:	popf   
  409dcc:	xlat   BYTE PTR ds:[ebx]
  409dcd:	dec    esi
  409dce:	int3   
  409dcf:	aas    
  409dd0:	inc    edi
  409dd1:	push   ds
  409dd2:	loope  0x409dbe
  409dd4:	xchg   ebp,eax
  409dd5:	mov    edx,0x64497590
  409dda:	xlat   BYTE PTR ds:[ebx]
  409ddb:	lods   al,BYTE PTR ds:[esi]
  409ddc:	hlt    
  409ddd:	cmp    al,0x65
  409ddf:	jge    0x409dad
  409de1:	inc    ebx
  409de2:	and    ch,BYTE PTR [ebp-0x7eb9d80c]
  409de8:	in     eax,dx
  409de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dea:	push   es
  409deb:	repnz xchg esi,eax
  409ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dee:	imul   ecx,DWORD PTR [edx],0xf4d0bfb2
  409df4:	push   cs
  409df5:	aas    
  409df6:	xchg   esp,eax
  409df7:	fstp   QWORD PTR [edx]
  409df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfa:	rcl    DWORD PTR [esi+0x1d],1
  409dfd:	mov    dl,0xa8
  409dff:	rcr    ecx,1
  409e01:	jne    0x409de7
  409e03:	sahf   
  409e04:	push   esp
  409e05:	test   DWORD PTR [edi+0x79],esi
  409e08:	mov    ?,edx
  409e0a:	pop    es
  409e0b:	je     0x409dcb
  409e0d:	mov    esi,0x94152454
  409e12:	jl     0x409dd7
  409e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e15:	mov    ch,0x37
  409e17:	pop    ebp
  409e18:	bound  esp,QWORD PTR [eax-0x74d24315]
  409e1e:	pop    ecx
  409e1f:	jns    0x409dc0
  409e21:	mov    DWORD PTR [ebp-0x77fd430a],ebx
  409e27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e28:	xchg   edx,eax
  409e29:	add    dl,dh
  409e2b:	pop    eax
  409e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e2d:	jne    0x409dfb
  409e2f:	dec    edi
  409e30:	hlt    
  409e31:	test   eax,0x560ec53f
  409e36:	xor    ah,bl
  409e38:	test   DWORD PTR [esi],edx
  409e3a:	dec    ebx
  409e3b:	in     al,dx
  409e3c:	adc    al,0x26
  409e3e:	scas   al,BYTE PTR es:[edi]
  409e3f:	(bad)  
  409e40:	clc    
  409e41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e42:	test   BYTE PTR [esp+eax*8-0x58e91007],0x76
  409e4a:	mov    ah,0x8f
  409e4d:	push   ss
  409e4e:	dec    ecx
  409e4f:	jnp    0x409e92
  409e51:	mov    ds,WORD PTR [edx]
  409e53:	xlat   BYTE PTR ds:[ebx]
  409e54:	loopne 0x409e28
  409e56:	test   DWORD PTR [esi+edx*1+0x996da3e],edi
  409e5d:	jecxz  0x409e1a
  409e5f:	and    al,0xf4
  409e61:	out    0x5f,eax
  409e63:	(bad)  
  409e64:	lods   al,BYTE PTR ds:[esi]
  409e65:	aas    
  409e66:	sbb    dh,dl
  409e68:	adc    eax,DWORD PTR [eax+0x2df3e33c]
  409e6e:	jbe    0x409ee8
  409e70:	clc    
  409e71:	xor    al,0x9c
  409e73:	sub    ebp,DWORD PTR [eax-0x73]
  409e76:	dec    esi
  409e77:	jno    0x409e8f
  409e79:	jb     0x409eba
  409e7b:	adc    bl,cl
  409e7d:	jl     0x409ed8
  409e7f:	lea    ecx,[esi+0x56]
  409e82:	ficom  WORD PTR ds:0xf56482da
  409e88:	jns    0x409e49
  409e8a:	aam    0x24
  409e8c:	mov    edi,0x20615490
  409e91:	test   ebp,esp
  409e93:	test   BYTE PTR [ebx+0x18],bh
  409e96:	pop    ebx
  409e97:	add    BYTE PTR [ebp-0x385e0b3f],ah
  409e9d:	push   esi
  409e9e:	loope  0x409e6d
  409ea0:	jmpw   0xb222
  409ea4:	push   ecx
  409ea5:	int3   
  409ea6:	call   0x88fd075c
  409eab:	add    bh,BYTE PTR ss:[ecx]
  409eae:	imul   eax,ebx,0xffffff95
  409eb1:	cmp    al,0xd
  409eb3:	pop    esi
  409eb4:	fs mov ecx,0xcf83a24c
  409eba:	jne    0x409ec4
  409ebc:	xor    BYTE PTR [ebx-0x74],ah
  409ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec0:	or     BYTE PTR [edx],ah
  409ec2:	add    DWORD PTR [ecx],edi
  409ec4:	jl     0x409ec7
  409ec6:	push   esi
  409ec7:	lods   eax,DWORD PTR ds:[esi]
  409ec8:	mov    ds:0x29be676b,eax
  409ecd:	mov    ebx,0xe34eecfb
  409ed2:	jmp    0x2d74:0x73ecaacf
  409ed9:	stos   DWORD PTR es:[edi],eax
  409eda:	mov    ch,0x45
  409edc:	mov    ds:0x381457ce,eax
  409ee1:	cmp    eax,ebp
  409ee3:	mov    ecx,DWORD PTR [edx]
  409ee5:	mov    fs,WORD PTR [ebx+0x3]
  409ee8:	test   eax,0xc618ed05
  409eed:	ret    
  409eee:	xchg   edx,eax
  409eef:	ss sbb eax,0x2bde5184
  409ef5:	outs   dx,DWORD PTR ds:[esi]
  409ef6:	out    dx,eax
  409ef7:	adc    eax,DWORD PTR [esi]
  409ef9:	arpl   WORD PTR [ebp-0x43],dx
  409efc:	in     eax,0xa8
  409efe:	inc    esi
  409eff:	data16 or BYTE PTR cs:[edx-0x14994702],ah
  409f07:	and    edx,DWORD PTR [edx+0x48991a05]
  409f0d:	fdiv   DWORD PTR [ebx]
  409f0f:	cwde   
  409f10:	ss or  eax,0xd563df49
  409f16:	data16 clc 
  409f18:	dec    ecx
  409f19:	in     eax,dx
  409f1a:	daa    
  409f1b:	adc    BYTE PTR [eax],ch
  409f1d:	push   esp
  409f1e:	inc    esp
  409f1f:	add    bl,BYTE PTR [edx-0x3b]
  409f22:	xor    ah,BYTE PTR [edx+0x7ffc11d2]
  409f28:	pop    edi
  409f29:	and    al,0x9a
  409f2b:	push   edi
  409f2c:	rcl    ecx,1
  409f2e:	out    0xf7,eax
  409f30:	test   al,0xa6
  409f32:	add    ah,BYTE PTR [edx-0x1]
  409f35:	cdq    
  409f36:	dec    ebp
  409f37:	inc    ebx
  409f38:	jg     0x409f18
  409f3a:	cmp    eax,0xa11db874
  409f3f:	jo     0x409fa0
  409f41:	fmul   st,st(2)
  409f43:	iret   
  409f44:	arpl   di,ax
  409f46:	mov    ds:0x52e74486,al
  409f4b:	ror    BYTE PTR [ebx],cl
  409f4d:	sahf   
  409f4e:	icebp  
  409f4f:	mov    ecx,0x4e8d7168
  409f54:	mov    bl,0xd4
  409f56:	mov    bh,BYTE PTR [ebx-0x64da8210]
  409f5c:	pusha  
  409f5d:	inc    ecx
  409f5e:	push   esp
  409f5f:	aam    0x47
  409f61:	add    DWORD PTR [ebx+0x20],ecx
  409f64:	jns    0x409f56
  409f66:	test   eax,0x9ff27810
  409f6b:	add    DWORD PTR [ebp-0x44],edi
  409f6e:	fstp   DWORD PTR [edx+0x48]
  409f71:	lds    ebx,FWORD PTR [esi-0x6f95bf05]
  409f77:	jae    0x409f92
  409f79:	out    0x6,eax
  409f7b:	adc    al,0x6c
  409f7d:	icebp  
  409f7e:	cs in  al,0x94
  409f81:	xor    eax,0xe555993d
  409f86:	jne    0x409f80
  409f88:	outs   dx,BYTE PTR ds:[esi]
  409f89:	or     eax,0x7b6cc657
  409f8e:	sbb    ebp,DWORD PTR [ebp+0x46]
  409f91:	(bad)  
  409f93:	hlt    
  409f94:	fadd   DWORD PTR [eax+0x7956b4fd]
  409f9a:	xor    DWORD PTR [ebx-0x763e818e],esi
  409fa0:	icebp  
  409fa1:	xchg   esi,eax
  409fa2:	lock test eax,0xe0e65ea1
  409fa8:	loopne 0x40a00c
  409faa:	adc    DWORD PTR [ebx],0xfffffff2
  409fad:	cmp    eax,0x913eaacf
  409fb2:	mov    ds,esp
  409fb4:	out    dx,eax
  409fb5:	inc    esp
  409fb6:	push   cs
  409fb7:	mov    bl,0x4
  409fb9:	cmp    eax,DWORD PTR [eax+0x6d7336e3]
  409fbf:	test   BYTE PTR [ebx+ebp*8+0x7a],cl
  409fc3:	add    eax,0xd200f555
  409fc8:	js     0x40a042
  409fca:	pop    ecx
  409fcb:	idiv   al
  409fcd:	arpl   WORD PTR [ebx],ax
  409fcf:	mov    esi,cs
  409fd1:	sub    al,0x4
  409fd3:	dec    edx
  409fd4:	or     al,al
  409fd6:	leave  
  409fd7:	sub    eax,DWORD PTR [ecx]
  409fd9:	jmp    0x4b61d1fc
  409fde:	popfw  
  409fe0:	mov    ch,0x74
  409fe2:	cs xchg edi,eax
  409fe4:	addr16 xor ebx,eax
  409fe7:	lods   al,BYTE PTR ds:[esi]
  409fe8:	mov    cl,0x50
  409fea:	es and al,0xf9
  409fed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fee:	cmp    bh,bh
  409ff0:	nop
  409ff1:	pop    ebp
  409ff2:	xchg   ebp,eax
  409ff3:	xor    BYTE PTR [esp+ebp*2],bh
  409ff6:	mov    esp,0xc5cdbc71
  409ffb:	xor    DWORD PTR [ebp+eax*8-0x56280975],edx
  40a002:	mov    eax,DWORD PTR [esi]
  40a004:	mov    ch,dh
  40a006:	dec    edx
  40a007:	push   ebp
  40a008:	ret    0xa0fc
  40a00b:	cmc    
  40a00c:	les    edx,FWORD PTR [edi]
  40a00e:	fs xor ah,ah
  40a011:	out    0x73,al
  40a013:	cmp    bl,BYTE PTR [ecx-0x4e]
  40a016:	imul   ah
  40a018:	cs push ds
  40a01a:	cs fsubr st(4),st
  40a01d:	dec    BYTE PTR [edi]
  40a01f:	lods   al,BYTE PTR ds:[esi]
  40a020:	sti    
  40a021:	adc    al,0xa9
  40a023:	xchg   edx,eax
  40a024:	nop
  40a025:	dec    edx
  40a026:	jno    0x40a085
  40a028:	xor    bh,BYTE PTR [eax-0x3c]
  40a02b:	aam    0x95
  40a02d:	fisub  DWORD PTR [eax+0x27]
  40a030:	sbb    edi,esp
  40a032:	mov    al,ds:0x29d68776
  40a037:	and    DWORD PTR [edi],0x925184de
  40a03d:	fistp  DWORD PTR [edi+0xa]
  40a040:	aas    
  40a041:	in     eax,dx
  40a042:	sbb    BYTE PTR [esi+0x4e6b1871],ch
  40a048:	mov    BYTE PTR [eax-0x329292a6],dh
  40a04e:	jo     0x40a078
  40a050:	add    BYTE PTR [ecx],dh
  40a052:	mov    ebp,DWORD PTR [ebx+0x72]
  40a055:	sti    
  40a056:	stc    
  40a057:	dec    ecx
  40a058:	jns    0x40a00c
  40a05a:	lods   al,BYTE PTR ds:[esi]
  40a05b:	push   esp
  40a05c:	scas   eax,DWORD PTR es:[edi]
  40a05d:	sbb    esi,0x906dfa75
  40a063:	jp     0x40a03b
  40a065:	add    al,BYTE PTR [ecx+0x5da68383]
  40a06b:	mov    cl,0x67
  40a06d:	mov    ebx,0x88e5c730
  40a072:	mov    ebx,0xc7d9bbfb
  40a078:	shl    esi,0x54
  40a07b:	or     eax,0x57fae84e
  40a080:	push   cs
  40a081:	inc    edx
  40a082:	pop    ebp
  40a083:	sub    eax,0xbb5a3c7
  40a088:	sub    eax,0xd3c9a197
  40a08d:	and    BYTE PTR es:[esi],al
  40a090:	push   eax
  40a091:	inc    esi
  40a092:	inc    esp
  40a093:	rcr    DWORD PTR [eax-0x3c],0xe7
  40a097:	push   edx
  40a098:	bound  ebp,QWORD PTR [edx+0x27d63855]
  40a09e:	leave  
  40a09f:	fstp   TBYTE PTR [ecx-0x242f612]
  40a0a5:	cwde   
  40a0a6:	data16 mov ds:0xd086b7b9,al
  40a0ac:	pop    edx
  40a0ad:	js     0x40a03d
  40a0af:	inc    ebx
  40a0b0:	iret   
  40a0b1:	cs dec eax
  40a0b3:	imul   edi,ecx,0x4a
  40a0b6:	cmp    eax,0x97fe4765
  40a0bb:	inc    edx
  40a0bc:	int3   
  40a0bd:	hlt    
  40a0be:	nop
  40a0bf:	in     al,0xc1
  40a0c1:	int3   
  40a0c2:	push   ss
  40a0c3:	pop    esp
  40a0c4:	dec    esi
  40a0c5:	icebp  
  40a0c6:	test   eax,0xb002351e
  40a0cb:	sub    al,0x46
  40a0cd:	loopne 0x40a0c4
  40a0cf:	lahf   
  40a0d0:	inc    ebp
  40a0d1:	lahf   
  40a0d2:	inc    ebp
  40a0d3:	mov    BYTE PTR [edi-0x20],cl
  40a0d6:	xchg   DWORD PTR [edx],esp
  40a0d8:	cmp    esi,esi
  40a0da:	ins    BYTE PTR es:[edi],dx
  40a0db:	sahf   
  40a0dc:	mov    ebp,0x9c7e525c
  40a0e1:	ss fsubrp st(0),st
  40a0e4:	test   BYTE PTR [ecx],0x5a
  40a0e7:	push   edx
  40a0e8:	jmp    ebp
  40a0ea:	or     DWORD PTR [ebx+0x45],edx
  40a0ed:	push   es
  40a0ee:	dec    edi
  40a0ef:	dec    edx
  40a0f0:	outs   dx,BYTE PTR ds:[esi]
  40a0f1:	dec    edx
  40a0f2:	into   
  40a0f3:	mov    ebp,0x527cc82f
  40a0f8:	dec    ebx
  40a0f9:	xchg   ebp,eax
  40a0fa:	sbb    al,0x3c
  40a0fc:	data16 in al,dx
  40a0fe:	scas   al,BYTE PTR es:[edi]
  40a0ff:	inc    edi
  40a100:	inc    esi
  40a101:	inc    ecx
  40a102:	out    dx,al
  40a103:	jae    0x40a0d3
  40a105:	lahf   
  40a106:	aas    
  40a107:	cmp    edi,esi
  40a109:	cmp    DWORD PTR [edx-0x47],eax
  40a10c:	adc    eax,DWORD PTR [ecx-0x2a]
  40a10f:	cld    
  40a110:	cld    
  40a111:	pop    esp
  40a112:	aaa    
  40a113:	and    bl,BYTE PTR [edi-0x540a2669]
  40a119:	sub    eax,DWORD PTR [ebx+0x5361c6ae]
  40a11f:	cmp    ah,ah
  40a121:	out    dx,al
  40a122:	xchg   BYTE PTR [esi],bh
  40a124:	arpl   WORD PTR [esi+0x2fcee31c],sp
  40a12a:	push   cs
  40a12b:	sti    
  40a12c:	or     al,BYTE PTR [ecx-0x41f1fccf]
  40a132:	adc    DWORD PTR [eax+0x8fc4ed5],ebx
  40a138:	pop    ds
  40a139:	not    BYTE PTR [edi-0x41]
  40a13c:	jbe    0x40a0df
  40a13e:	dec    edx
  40a13f:	inc    ebx
  40a140:	bound  esp,QWORD PTR [edi+0x58a92dcf]
  40a146:	je     0x40a112
  40a148:	adc    ah,BYTE PTR [edx-0x56baa1c]
  40a14e:	test   al,0x5f
  40a150:	mov    bh,0x74
  40a152:	loope  0x40a198
  40a154:	xchg   DWORD PTR [eax+0x2a],edx
  40a157:	in     al,dx
  40a158:	in     eax,0x7b
  40a15a:	mov    bh,0xaa
  40a15c:	mov    cl,0x80
  40a15e:	or     BYTE PTR [ecx*1+0x241c23e7],bh
  40a165:	call   eax
  40a167:	cwde   
  40a168:	and    ecx,eax
  40a16a:	push   ecx
  40a16b:	stos   BYTE PTR es:[edi],al
  40a16c:	mov    cl,0xc3
  40a16e:	retf   
  40a16f:	stos   BYTE PTR es:[edi],al
  40a170:	mov    esi,0x8265c887
  40a175:	xchg   esi,eax
  40a176:	aaa    
  40a177:	nop
  40a178:	push   edi
  40a179:	push   0xffffffa6
  40a17b:	xor    eax,0x3a6256e6
  40a180:	out    0x43,al
  40a182:	int    0x82
  40a184:	test   DWORD PTR [eax-0x13845ccc],esi
  40a18a:	int    0x51
  40a18c:	mov    ebp,0xfb07f43d
  40a191:	out    0xc6,al
  40a193:	daa    
  40a194:	push   cs
  40a195:	gs test DWORD PTR cs:[esi],esp
  40a199:	xchg   edx,eax
  40a19a:	ins    DWORD PTR es:[edi],dx
  40a19b:	dec    esi
  40a19c:	xchg   ecx,eax
  40a19d:	sub    BYTE PTR [edx],0x1e
  40a1a0:	ja     0x40a1d6
  40a1a2:	call   0xc96f:0xe50c2879
  40a1a9:	cmp    eax,0xb85448a7
  40a1ae:	loopne 0x40a226
  40a1b0:	pop    es
  40a1b1:	imul   ebp,DWORD PTR [eax],0xffffffe9
  40a1b4:	dec    edx
  40a1b5:	cmp    BYTE PTR [esp+edi*4+0x2014f28f],0x41
  40a1bd:	stos   BYTE PTR es:[edi],al
  40a1be:	jno    0x40a1d2
  40a1c0:	sbb    al,0x50
  40a1c2:	das    
  40a1c3:	jmp    0x40a187
  40a1c5:	or     eax,0xd80c8e22
  40a1cb:	cmp    ah,BYTE PTR [edx+0x6]
  40a1ce:	cld    
  40a1cf:	adc    eax,0xbbc39892
  40a1d4:	xchg   edx,eax
  40a1d5:	dec    eax
  40a1d6:	scas   eax,DWORD PTR es:[edi]
  40a1d7:	add    eax,0x1c017f36
  40a1dc:	xchg   edx,eax
  40a1dd:	dec    ebp
  40a1de:	push   ebx
  40a1df:	push   esi
  40a1e0:	cwde   
  40a1e1:	es int 0x87
  40a1e4:	test   al,0xaa
  40a1e6:	invd   
  40a1e8:	push   eax
  40a1e9:	sbb    al,0xd1
  40a1eb:	fld    TBYTE PTR [ecx]
  40a1ed:	add    ch,BYTE PTR [edi-0x777674fb]
  40a1f3:	xchg   eax,ebp
  40a1f5:	or     DWORD PTR [esi-0x74],ecx
  40a1f8:	rol    BYTE PTR [edx+0x7db9953a],1
  40a1fe:	std    
  40a1ff:	mov    ds:0xb3e69a72,al
  40a204:	jbe    0x40a1cc
  40a206:	retf   0x5f77
  40a209:	popa   
  40a20a:	loopne 0x40a280
  40a20c:	mov    DWORD PTR [eax],eax
  40a20e:	popf   
  40a20f:	inc    esi
  40a210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a211:	daa    
  40a212:	jl     0x40a203
  40a214:	mov    dh,0x31
  40a216:	les    esi,FWORD PTR ss:[edx+0x1407c7c7]
  40a21d:	mov    ch,0xa0
  40a21f:	sub    al,0x29
  40a221:	je     0x40a211
  40a223:	xor    ebx,DWORD PTR [eax]
  40a225:	ja     0x40a265
  40a227:	(bad)  
  40a228:	jmp    0x817c:0x58367947
  40a22f:	push   es
  40a230:	pop    es
  40a231:	ins    BYTE PTR es:[edi],dx
  40a232:	push   es
  40a233:	xchg   ecx,eax
  40a234:	mov    ebp,DWORD PTR [ebp-0x4f06d453]
  40a23a:	test   eax,0x2bf021a8
  40a23f:	scas   eax,DWORD PTR es:[edi]
  40a240:	dec    ebx
  40a241:	sub    esi,0xfffffff1
  40a244:	ins    DWORD PTR es:[edi],dx
  40a245:	and    al,0x97
  40a247:	mov    edi,0xc783002d
  40a24c:	sbb    eax,0x81a2760f
  40a251:	fnstsw WORD PTR [ebx]
  40a253:	mov    eax,ds:0xa9a1ffdd
  40a258:	mov    DWORD PTR [ebp-0x25],ebx
  40a25b:	xor    al,0x71
  40a25d:	outs   dx,BYTE PTR ds:[esi]
  40a25e:	pusha  
  40a25f:	push   0xc12f97e0
  40a264:	inc    esp
  40a265:	inc    esp
  40a266:	mov    esp,0x2f9f0839
  40a26b:	xor    eax,0xe1bc9976
  40a270:	bound  edx,QWORD PTR [esi+eax*4+0x7c]
  40a274:	or     edx,ebp
  40a276:	and    BYTE PTR [edx+0xe],0x82
  40a27a:	(bad)  
  40a27b:	jmp    0x46958d22
  40a280:	add    al,0xcb
  40a282:	scas   eax,DWORD PTR es:[edi]
  40a283:	repz int3 
  40a285:	cmp    edx,eax
  40a287:	mov    al,0xe4
  40a289:	in     al,dx
  40a28a:	or     al,0x6
  40a28c:	sub    DWORD PTR [eax],eax
  40a28e:	rol    DWORD PTR [eax-0x3dc56f39],0xac
  40a295:	sub    DWORD PTR [ecx-0x5b],ebx
  40a298:	hlt    
  40a299:	pop    ds
  40a29a:	data16 out 0x85,al
  40a29d:	repnz hlt 
  40a29f:	(bad)  
  40a2a0:	loop   0x40a29f
  40a2a2:	or     eax,0x20406c89
  40a2a7:	(bad)  
  40a2a8:	pop    edi
  40a2a9:	lahf   
  40a2aa:	lods   eax,DWORD PTR ds:[esi]
  40a2ab:	ret    0x5183
  40a2ae:	dec    eax
  40a2af:	xor    al,0x5a
  40a2b1:	jp     0x40a2a7
  40a2b3:	xchg   edx,eax
  40a2b4:	sub    esi,DWORD PTR [ecx*1+0x405105e6]
  40a2bb:	jae    0x40a33c
  40a2bd:	hlt    
  40a2be:	out    dx,eax
  40a2bf:	xlat   BYTE PTR ds:[ebx]
  40a2c0:	push   esp
  40a2c1:	and    dl,BYTE PTR [edi]
  40a2c3:	sahf   
  40a2c4:	pop    es
  40a2c5:	je     0x40a2dd
  40a2c7:	cmp    BYTE PTR [esi+eax*2-0x2c],al
  40a2cb:	ficom  WORD PTR [edx]
  40a2cd:	aad    0xbe
  40a2cf:	hlt    
  40a2d0:	sbb    ebx,edi
  40a2d2:	nop
  40a2d3:	mov    ebp,0xe1d142d3
  40a2d8:	dec    eax
  40a2d9:	mov    cl,0xba
  40a2db:	pop    ecx
  40a2dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2dd:	shr    BYTE PTR [ecx],0xfe
  40a2e0:	out    0xb8,al
  40a2e2:	jnp    0x40a353
  40a2e4:	out    dx,al
  40a2e5:	cmp    cl,cl
  40a2e7:	xor    BYTE PTR [ebx],cl
  40a2e9:	sub    ch,bl
  40a2eb:	mov    ebp,DWORD PTR [esi]
  40a2ed:	cs jmp 0x4b91:0x92e9b456
  40a2f5:	nop
  40a2f6:	sub    al,0xa7
  40a2f8:	sbb    ebx,DWORD PTR [eax]
  40a2fa:	mov    ds:0x90e7d8c7,eax
  40a2ff:	adc    eax,0x1976033a
  40a304:	pop    ebx
  40a305:	jg     0x40a339
  40a307:	arpl   WORD PTR [eax+0x7f],di
  40a30a:	and    eax,esp
  40a30c:	bound  ebx,QWORD PTR [esi-0x20]
  40a30f:	mov    esp,0xe4bceaca
  40a314:	xor    eax,0x44fe86a6
  40a319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a31a:	pop    es
  40a31b:	pop    ecx
  40a31c:	es pop ds
  40a31e:	fdiv   st,st(3)
  40a320:	test   eax,0xf8922348
  40a325:	lds    esp,FWORD PTR [edi]
  40a327:	cld    
  40a328:	inc    esp
  40a329:	mov    ds:0x555d9116,eax
  40a32e:	sbb    edx,DWORD PTR [eax]
  40a330:	push   esi
  40a331:	bound  ebx,QWORD PTR [ebx-0x5a]
  40a334:	pusha  
  40a335:	cmp    al,BYTE PTR ds:0x42431954
  40a33b:	and    bh,bh
  40a33d:	mov    esp,0xc3c9b3d0
  40a342:	lahf   
  40a343:	stc    
  40a344:	pop    esp
  40a345:	aas    
  40a346:	add    eax,0x4affc62a
  40a34b:	inc    esp
  40a34c:	sbb    bl,0xd6
  40a34f:	mov    dl,0x66
  40a351:	dec    ecx
  40a352:	xchg   esi,eax
  40a353:	mov    bh,BYTE PTR [ecx+0x4b04c1f5]
  40a359:	dec    esi
  40a35a:	sub    al,BYTE PTR [edi+0x2d]
  40a35d:	push   0xc63b49c6
  40a362:	test   BYTE PTR [ecx-0x77],dl
  40a365:	mov    bl,BYTE PTR [ebx-0x23]
  40a368:	dec    edi
  40a369:	inc    edi
  40a36a:	cmc    
  40a36b:	mov    dl,0x86
  40a36d:	jmp    0x40a2ff
  40a36f:	icebp  
  40a370:	ror    DWORD PTR [edi],cl
  40a372:	lock aas 
  40a374:	lods   eax,DWORD PTR ds:[esi]
  40a375:	shl    BYTE PTR [edi],cl
  40a377:	mov    al,0x20
  40a379:	jle    0x40a3ab
  40a37b:	and    eax,0xb1208e4d
  40a380:	out    dx,al
  40a381:	xchg   ebx,eax
  40a382:	dec    ecx
  40a383:	aad    0xdf
  40a385:	neg    ah
  40a387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a388:	nop
  40a389:	jnp    0x40a364
  40a38b:	mov    al,ds:0x60e078c9
  40a390:	jnp    0x40a400
  40a392:	add    cl,BYTE PTR [ecx+0x33]
  40a395:	cld    
  40a396:	js     0x40a3c8
  40a398:	sbb    al,0xa5
  40a39a:	in     al,dx
  40a39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a39c:	stos   DWORD PTR es:[edi],eax
  40a39d:	pop    ebx
  40a39e:	outs   dx,BYTE PTR ds:[esi]
  40a39f:	das    
  40a3a0:	sub    cl,dl
  40a3a2:	lods   al,BYTE PTR ds:[esi]
  40a3a3:	call   0x945b:0x541e8064
  40a3aa:	std    
  40a3ab:	xchg   edi,eax
  40a3ac:	mov    BYTE PTR [edx+0x7a79f92a],al
  40a3b2:	jmp    0x40a41d
  40a3b4:	imul   edx,DWORD PTR [ebp+0x45],0xffffffb5
  40a3b8:	cld    
  40a3b9:	ins    DWORD PTR es:[edi],dx
  40a3ba:	adc    ah,cl
  40a3bc:	(bad)  
  40a3bd:	mov    bh,0xb6
  40a3bf:	pop    ecx
  40a3c0:	or     BYTE PTR [edi],0xda
  40a3c3:	adc    ah,cl
  40a3c5:	cld    
  40a3c6:	scas   eax,DWORD PTR es:[edi]
  40a3c7:	das    
  40a3c8:	scas   eax,DWORD PTR es:[edi]
  40a3c9:	push   ebp
  40a3ca:	(bad)  
  40a3cb:	sti    
  40a3cc:	pop    ss
  40a3cd:	mov    cl,0x8b
  40a3cf:	(bad)  
  40a3d1:	push   ebp
  40a3d2:	pop    ebp
  40a3d3:	pop    ds
  40a3d4:	xor    cl,BYTE PTR [ecx+0x7b60b39]
  40a3da:	adc    eax,0x9bf5765d
  40a3df:	shl    dl,1
  40a3e1:	or     eax,0x702c68ac
  40a3e6:	jb     0x40a450
  40a3e8:	sub    ah,BYTE PTR ds:[eax+0x6a3d7a7]
  40a3ef:	mov    edx,0xc7ebae0c
  40a3f4:	lahf   
  40a3f5:	mov    al,0x9
  40a3f7:	pop    edi
  40a3f8:	pop    edx
  40a3f9:	or     DWORD PTR es:[ecx],esp
  40a3fc:	mov    esi,DWORD PTR [ebp+0x146d7d3]
  40a402:	ja     0x40a45b
  40a404:	mov    edx,0x70fcc8eb
  40a409:	mov    al,ds:0x1312bf2
  40a40e:	ror    BYTE PTR [ebx*8-0x198be272],0xe
  40a416:	jbe    0x40a3b6
  40a418:	jle    0x40a41c
  40a41a:	icebp  
  40a41b:	punpcklbw mm3,DWORD PTR [edi+0x71]
  40a41f:	xchg   DWORD PTR [esi-0xc5e3296],edx
  40a425:	mov    esi,0x1f495430
  40a42a:	push   0xffffff98
  40a42c:	pushf  
  40a42d:	xor    ebp,DWORD PTR [edx]
  40a42f:	jae    0x40a3bb
  40a431:	cs mov cl,0xb0
  40a434:	call   0xb4c2:0xa7c65c89
  40a43b:	mov    BYTE PTR [ecx],ah
  40a43d:	xchg   ebp,eax
  40a43e:	cli    
  40a43f:	or     cl,dl
  40a441:	and    eax,0xffd91f74
  40a446:	daa    
  40a447:	pop    es
  40a448:	mov    ds:0x5791beb8,al
  40a44d:	sbb    ebx,ecx
  40a44f:	jle    0x40a401
  40a451:	cli    
  40a452:	retf   0x75c7
  40a455:	out    0xff,eax
  40a457:	mov    ebp,0x61152af0
  40a45c:	sub    edi,DWORD PTR [esi+0x50]
  40a45f:	enter  0x88d,0x5d
  40a463:	leave  
  40a464:	xor    eax,0x2b20002b
  40a469:	fisttp QWORD PTR [ecx+eiz*1]
  40a46c:	sbb    edx,DWORD PTR [eax-0x64]
  40a46f:	scas   al,BYTE PTR es:[edi]
  40a470:	mov    esi,0xc8d6a27
  40a475:	pop    esp
  40a476:	(bad)  
  40a478:	cmp    eax,0xd32cba35
  40a47d:	scas   eax,DWORD PTR es:[edi]
  40a47e:	loop   0x40a4c1
  40a480:	cmp    eax,0x4dd09e6e
  40a485:	sbb    bh,BYTE PTR [ecx+ebp*8]
  40a488:	ror    DWORD PTR [edi-0x25],0x9b
  40a48c:	adc    al,0x53
  40a48e:	xlat   BYTE PTR ds:[ebx]
  40a48f:	out    0x2f,eax
  40a491:	rcr    DWORD PTR [ebx-0x23ae776e],cl
  40a497:	mov    ?,esp
  40a499:	into   
  40a49a:	and    BYTE PTR [edi*2+0xefd2ca3],cl
  40a4a1:	stc    
  40a4a2:	sub    eax,0xac24ca0a
  40a4a7:	add    al,0x4f
  40a4a9:	xor    BYTE PTR [eax-0x52698dbd],ch
  40a4af:	jno    0x40a4a3
  40a4b1:	jns    0x40a4b7
  40a4b3:	in     al,dx
  40a4b4:	fcomp  DWORD PTR [esi+0x61]
  40a4b7:	pop    esi
  40a4b8:	pop    ebx
  40a4b9:	retf   
  40a4ba:	sbb    ch,dh
  40a4bc:	fidivr DWORD PTR [edx-0x33]
  40a4bf:	loop   0x40a4ad
  40a4c1:	imul   edi,ecx,0x1d7d9b01
  40a4c7:	xor    DWORD PTR [esi-0x53],edi
  40a4ca:	push   ds
  40a4cb:	jp     0x40a514
  40a4cd:	lods   al,BYTE PTR ds:[esi]
  40a4ce:	push   0x58
  40a4d0:	inc    eax
  40a4d1:	cwde   
  40a4d2:	xor    BYTE PTR [ecx-0x22],cl
  40a4d5:	jp     0x40a46d
  40a4d7:	iret   
  40a4d8:	dec    edi
  40a4d9:	fcmovne st,st(1)
  40a4db:	cwde   
  40a4dc:	sub    eax,0x294bae8e
  40a4e1:	and    eax,0x8cf736fb
  40a4e6:	test   BYTE PTR [ebx-0x37],ch
  40a4e9:	out    dx,eax
  40a4ea:	lods   eax,DWORD PTR ds:[esi]
  40a4eb:	in     eax,0xe9
  40a4ed:	int    0xcb
  40a4ef:	daa    
  40a4f0:	aad    0x57
  40a4f2:	inc    esp
  40a4f3:	cli    
  40a4f4:	popa   
  40a4f5:	aam    0xe6
  40a4f7:	imul   ebp,DWORD PTR [esi],0x2ddbbb7d
  40a4fd:	mov    ds:0xd91a0d75,al
  40a502:	cwde   
  40a503:	or     DWORD PTR [ebx-0x628f654c],ebp
  40a509:	xor    bl,BYTE PTR [edi]
  40a50b:	dec    edi
  40a50c:	pop    eax
  40a50d:	xchg   esi,eax
  40a50e:	and    BYTE PTR [ebx+0x1c],bl
  40a511:	retf   
  40a512:	mov    ebp,0xeceb9c94
  40a517:	add    al,0xe2
  40a519:	mov    ebp,0xa3104b6f
  40a51e:	mov    BYTE PTR [ebp-0x1dc8d19b],dl
  40a524:	jnp    0x40a4e0
  40a526:	adc    al,cl
  40a528:	out    0xc1,al
  40a52a:	cmp    al,0x50
  40a52c:	outs   dx,DWORD PTR ds:[esi]
  40a52d:	ret    
  40a52e:	mov    esp,gs
  40a530:	inc    esp
  40a531:	xor    al,0x32
  40a533:	sbb    BYTE PTR es:[edx+0x2f],0x0
  40a538:	push   0xffffffb6
  40a53a:	or     al,0x4a
  40a53c:	movups XMMWORD PTR [ebx+eax*4-0x1ca647bf],xmm6
  40a544:	pop    edx
  40a545:	pop    ebx
  40a546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a547:	bound  ebx,QWORD PTR [edx]
  40a549:	push   0x55
  40a54b:	mov    esp,0x8af75161
  40a550:	sub    ebp,DWORD PTR [eax-0x7f]
  40a553:	pop    es
  40a554:	fld    DWORD PTR [edi+eax*1-0x79c768bc]
  40a55b:	daa    
  40a55c:	scas   eax,DWORD PTR es:[edi]
  40a55d:	sbb    cl,BYTE PTR [ebx+ecx*2-0x39]
  40a561:	xor    esp,edx
  40a563:	enter  0x1fef,0xa9
  40a567:	and    eax,0xc8e601ba
  40a56c:	mov    eax,ds:0x1205eaa3
  40a571:	fnstsw WORD PTR [esi+0x46f0698a]
  40a577:	test   ebp,ebx
  40a579:	cmp    BYTE PTR [ebx-0x58],ch
  40a57c:	call   0x52a7:0x63a94bfe
  40a583:	xor    edx,DWORD PTR [ebx+ecx*1]
  40a586:	sub    BYTE PTR [ebx-0x62],0x42
  40a58a:	leave  
  40a58b:	mov    ds:0x556530d2,eax
  40a590:	inc    ebx
  40a591:	dec    ebp
  40a592:	fbld   TBYTE PTR [eax-0x73]
  40a595:	mov    ah,0x5c
  40a597:	popf   
  40a598:	dec    ebx
  40a599:	popf   
  40a59a:	hlt    
  40a59b:	or     BYTE PTR [esi+edi*8-0x2c330719],bl
  40a5a2:	sub    eax,0xe090f336
  40a5a7:	ret    0xa9a9
  40a5aa:	pop    ds
  40a5ab:	and    eax,0x41322334
  40a5b0:	scas   al,BYTE PTR es:[edi]
  40a5b1:	dec    ebp
  40a5b2:	xor    al,0x6f
  40a5b4:	std    
  40a5b5:	mov    ds:0xe233061e,al
  40a5ba:	ror    BYTE PTR [ecx+ecx*4],1
  40a5bd:	jmp    0x91c69dfe
  40a5c2:	frstor [ebx]
  40a5c4:	out    dx,eax
  40a5c5:	jo     0x40a5e4
  40a5c7:	mov    dl,0xbd
  40a5c9:	dec    esp
  40a5ca:	ja     0x40a63c
  40a5cc:	xchg   ebx,eax
  40a5cd:	int    0xe0
  40a5cf:	adc    dh,BYTE PTR [edx-0x65c91378]
  40a5d5:	xor    al,0xc3
  40a5d7:	lds    esp,FWORD PTR [esi+ebp*1-0x5c107f9b]
  40a5de:	and    dl,ch
  40a5e0:	aas    
  40a5e1:	inc    esp
  40a5e2:	pusha  
  40a5e3:	add    edi,DWORD PTR [eax]
  40a5e5:	into   
  40a5e6:	add    al,0xde
  40a5e8:	jne    0x40a5bf
  40a5ea:	sbb    edx,esi
  40a5ec:	repnz or eax,0xf757d8f6
  40a5f2:	push   edx
  40a5f3:	sub    eax,edi
  40a5f5:	inc    esp
  40a5f6:	mov    edx,DWORD PTR [esi+edx*4]
  40a5f9:	inc    edi
  40a5fa:	ss ja  0x40a5c2
  40a5fd:	push   0x8048e99a
  40a602:	loopne 0x40a679
  40a604:	mov    ecx,0xb22be6be
  40a609:	push   0xffffff90
  40a60b:	and    ebp,ebp
  40a60d:	or     edx,DWORD PTR [ebx]
  40a60f:	sub    BYTE PTR [edi-0x74611695],0x14
  40a616:	push   ebx
  40a617:	or     BYTE PTR [esi],dl
  40a619:	test   al,0x79
  40a61b:	adc    DWORD PTR [ebx+0x9],ebp
  40a61e:	dec    eax
  40a61f:	and    dl,ah
  40a621:	(bad)  
  40a622:	popf   
  40a623:	gs mov ebp,0x1bf6944
  40a629:	push   0xb644aeee
  40a62e:	out    dx,eax
  40a62f:	out    0x72,eax
  40a631:	push   edx
  40a632:	fs sbb eax,0xf5445147
  40a638:	les    ebp,FWORD PTR [ebx-0x61d64667]
  40a63e:	sub    edi,DWORD PTR [esp+eax*8]
  40a641:	ja     0x40a686
  40a643:	pop    ebx
  40a644:	jl     0x40a5ef
  40a646:	repz enter 0xd0a5,0x9
  40a64b:	dec    DWORD PTR [ebx]
  40a64d:	test   eax,0x2909df00
  40a652:	cli    
  40a653:	push   edi
  40a654:	xlat   BYTE PTR ds:[ebx]
  40a655:	cmp    al,0x26
  40a657:	ss jp  0x40a69d
  40a65a:	outs   dx,DWORD PTR ds:[esi]
  40a65b:	mov    ah,0x8
  40a65d:	mov    ch,0x79
  40a65f:	add    DWORD PTR [edi+eiz*8],esp
  40a662:	pop    es
  40a663:	pop    es
  40a664:	fdivr  DWORD PTR [esi+0x29]
  40a667:	(bad)  
  40a668:	sbb    eax,0x883ea4a0
  40a66d:	mov    ebx,0x410b9cce
  40a672:	aaa    
  40a673:	sub    ebx,DWORD PTR [edx]
  40a675:	mov    ds:0x2fef412,eax
  40a67a:	xor    dh,cl
  40a67c:	pop    es
  40a67d:	adc    al,0x1d
  40a67f:	jb     0x40a6b2
  40a681:	sti    
  40a682:	pop    ebp
  40a683:	push   edx
  40a684:	adc    BYTE PTR [esi+ecx*4+0x6f],0xec
  40a689:	fdivr  QWORD PTR ds:[edi]
  40a68c:	sbb    BYTE PTR [ecx+0x2a],cl
  40a68f:	(bad)  
  40a690:	lahf   
  40a691:	push   esp
  40a692:	pushf  
  40a693:	cmp    eax,0x196f13d0
  40a698:	arpl   WORD PTR [edx-0x79],sp
  40a69b:	or     esp,DWORD PTR [esi+0x10]
  40a69e:	jne    0x40a67e
  40a6a0:	pop    ebx
  40a6a1:	sbb    ch,cl
  40a6a3:	and    ax,0x355e
  40a6a7:	or     eax,0x8dc4899b
  40a6ac:	sub    edi,ebx
  40a6ae:	scas   al,BYTE PTR es:[edi]
  40a6af:	test   BYTE PTR [ecx-0x2d],dl
  40a6b2:	ds inc ecx
  40a6b4:	pushf  
  40a6b5:	out    0x69,al
  40a6b7:	loopne 0x40a718
  40a6b9:	in     eax,dx
  40a6ba:	jmp    0x4f040268
  40a6bf:	push   0x233be08a
  40a6c4:	pop    edi
  40a6c5:	ja     0x40a661
  40a6c7:	repnz lods al,BYTE PTR ds:[esi]
  40a6c9:	push   ecx
  40a6ca:	add    edi,DWORD PTR [edx+0x48]
  40a6cd:	dec    esp
  40a6ce:	push   ebx
  40a6cf:	and    DWORD PTR [esi-0x3871f021],eax
  40a6d5:	or     DWORD PTR [esi],esi
  40a6d7:	mov    ecx,0x63e3dfd
  40a6dc:	cli    
  40a6dd:	inc    eax
  40a6de:	push   eax
  40a6df:	pop    esi
  40a6e0:	cmp    DWORD PTR [ebp-0x6e],esp
  40a6e3:	pop    ecx
  40a6e4:	stos   DWORD PTR es:[edi],eax
  40a6e5:	shl    BYTE PTR [edx+eax*8],0xca
  40a6e9:	push   0x2eb2415
  40a6ee:	cwde   
  40a6ef:	shr    edi,cl
  40a6f1:	push   ecx
  40a6f2:	xlat   BYTE PTR ds:[ebx]
  40a6f3:	adc    al,BYTE PTR [edx-0x46909106]
  40a6f9:	out    0x7e,eax
  40a6fb:	mov    edi,0xa96c7728
  40a700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a701:	outs   dx,DWORD PTR ds:[esi]
  40a702:	or     cl,BYTE PTR [edi]
  40a704:	add    al,0x7f
  40a706:	dec    eax
  40a707:	adc    eax,0xeb3c362b
  40a70c:	jae    0x40a71a
  40a70e:	jecxz  0x40a6a7
  40a710:	xchg   edi,eax
  40a711:	shl    DWORD PTR [edi+0x20],cl
  40a714:	inc    ebx
  40a715:	dec    ecx
  40a716:	(bad)  
  40a717:	neg    DWORD PTR [edx]
  40a719:	mov    edi,DWORD PTR [esi-0x316fdc24]
  40a71f:	aam    0xec
  40a721:	push   ebp
  40a722:	fistp  WORD PTR [esi]
  40a724:	mov    ebx,0x52122a03
  40a729:	inc    ebp
  40a72a:	test   eax,0x1ee96e1f
  40a72f:	pop    ebp
  40a730:	jmp    0xedb87e7f
  40a735:	call   0x1560:0xa394090c
  40a73c:	mov    ds:0x4194f2c7,al
  40a741:	std    
  40a742:	inc    ebp
  40a743:	push   0x7759d4a6
  40a748:	or     al,0xf4
  40a74a:	into   
  40a74b:	add    al,0xf0
  40a74d:	sbb    BYTE PTR [edi+0x7d],ch
  40a750:	cmp    DWORD PTR [edx],0x96f682b7
  40a756:	and    al,0xe7
  40a758:	ss inc ebx
  40a75a:	call   0xffc6:0xc3713a9a
  40a761:	lods   al,BYTE PTR ds:[esi]
  40a762:	mov    esp,0xa7ef1c88
  40a767:	ins    BYTE PTR es:[edi],dx
  40a768:	mov    gs,WORD PTR [edi]
  40a76a:	add    ch,BYTE PTR [ebp-0x50283632]
  40a770:	and    cl,BYTE PTR [ebp-0x7d]
  40a773:	mov    eax,0x1f603de5
  40a778:	adc    cl,ah
  40a77a:	mov    dl,0x93
  40a77c:	and    DWORD PTR [ebx],edx
  40a77e:	pop    esi
  40a77f:	sar    edx,cl
  40a781:	and    eax,DWORD PTR [ebx]
  40a783:	arpl   WORD PTR [ecx],sp
  40a785:	mov    ecx,0x74da4ba4
  40a78a:	popf   
  40a78b:	xor    BYTE PTR [esi+0x7045a212],0xe1
  40a792:	dec    ebx
  40a793:	jae    0x40a71f
  40a795:	sbb    ah,al
  40a797:	gs jmp 0x154d:0x5bd60575
  40a79f:	fild   QWORD PTR [ecx+0x5b]
  40a7a2:	ja     0x40a7e4
  40a7a4:	pop    ebx
  40a7a5:	ja     0x40a7ab
  40a7a7:	fist   WORD PTR [eax+0x2af53d48]
  40a7ad:	pop    esi
  40a7ae:	dec    ecx
  40a7af:	ret    
  40a7b0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40a7b2:	loop   0x40a799
  40a7b4:	shl    DWORD PTR ds:[ebx-0x43],1
  40a7b8:	cld    
  40a7b9:	in     eax,0xc8
  40a7bb:	fstp   DWORD PTR [esp+edx*4+0x2f]
  40a7bf:	aam    0xb5
  40a7c1:	lahf   
  40a7c2:	push   ebx
  40a7c3:	jno    0x40a7cf
  40a7c5:	inc    edi
  40a7c6:	and    al,0x1f
  40a7c8:	jl     0x40a770
  40a7ca:	outs   dx,BYTE PTR ds:[esi]
  40a7cb:	mov    bh,0x4f
  40a7cd:	cdq    
  40a7ce:	test   edx,esp
  40a7d0:	and    al,0xf9
  40a7d3:	push   ebp
  40a7d4:	cmp    bh,dl
  40a7d6:	push   edi
  40a7d7:	mov    ch,0x47
  40a7d9:	xor    DWORD PTR [eax-0x49],esp
  40a7dc:	adc    eax,0xde6d4392
  40a7e1:	push   ds
  40a7e2:	mov    bl,0xef
  40a7e4:	aaa    
  40a7e5:	fist   DWORD PTR [ebx+eiz*4]
  40a7e8:	rol    BYTE PTR [ebx],1
  40a7ea:	xchg   ecx,eax
  40a7eb:	cs es mov ch,0xe4
  40a7ef:	ret    0xab66
  40a7f2:	xor    BYTE PTR [eax],0xe6
  40a7f5:	push   cs
  40a7f6:	mov    al,ds:0x846bb367
  40a7fb:	call   0x3c1955ad
  40a800:	and    bl,BYTE PTR [ecx+0x3a]
  40a803:	aas    
  40a804:	adc    DWORD PTR [eax+0x3d],0x827946dd
  40a80b:	test   dh,dl
  40a80d:	cdq    
  40a80e:	in     eax,0xc6
  40a810:	pop    esp
  40a812:	sbb    al,0xa5
  40a814:	dec    ebx
  40a815:	pusha  
  40a816:	pop    ebp
  40a817:	in     eax,dx
  40a818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a819:	sbb    DWORD PTR [edx-0x7608b089],edi
  40a81f:	or     al,BYTE PTR [ecx]
  40a821:	jae    0x40a868
  40a823:	xor    DWORD PTR [edi+edx*1-0x6b],eax
  40a827:	jle    0x40a869
  40a829:	xlat   BYTE PTR ds:[ebx]
  40a82a:	jo     0x40a7d9
  40a82c:	adc    al,0x59
  40a82e:	mov    al,ds:0x81658b33
  40a833:	cmp    ebx,DWORD PTR [edi-0x7d]
  40a836:	or     esp,DWORD PTR [eax]
  40a838:	xchg   edx,eax
  40a839:	add    esi,DWORD PTR [edx-0x2867c287]
  40a83f:	dec    edx
  40a840:	mov    esp,fs
  40a842:	pop    ss
  40a843:	jp     0x40a833
  40a845:	std    
  40a846:	test   eax,0xd8801d7a
  40a84b:	adc    BYTE PTR [eax+0x450ce16d],cl
  40a851:	cmp    edx,DWORD PTR [esi+0x6bc034a1]
  40a857:	add    al,0x4a
  40a859:	add    eax,0x975ca60c
  40a85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85f:	mov    ah,0xdf
  40a861:	push   ss
  40a862:	shl    BYTE PTR ds:0xeddcd7a1,1
  40a868:	adc    bl,BYTE PTR [edx]
  40a86a:	or     al,0x33
  40a86c:	jle    0x40a87f
  40a86e:	pop    eax
  40a86f:	pop    edi
  40a870:	jmp    DWORD PTR [eax+ebp*8]
  40a873:	div    dl
  40a875:	push   edx
  40a876:	xchg   esi,eax
  40a877:	cmp    ebx,DWORD PTR [edi]
  40a879:	pop    ebp
  40a87a:	jbe    0x40a86d
  40a87c:	dec    esi
  40a87d:	and    eax,0x3594ee6d
  40a882:	nop
  40a883:	ror    DWORD PTR [ecx-0x275d1811],0x9b
  40a88a:	mov    ss,WORD PTR [esi+ebp*2-0x1e]
  40a88e:	cdq    
  40a88f:	mov    ecx,0xe78dfcaf
  40a894:	in     eax,dx
  40a895:	sub    al,0xa4
  40a897:	push   0x70
  40a899:	mov    dl,0x2e
  40a89b:	outs   dx,BYTE PTR ds:[esi]
  40a89c:	(bad)  
  40a89d:	es rcl ch,0x6b
  40a8a1:	ins    BYTE PTR es:[edi],dx
  40a8a2:	lock adc eax,0xcc0d54f0
  40a8a8:	jp     0x40a890
  40a8aa:	add    eax,0x7273b9c3
  40a8af:	pop    ebp
  40a8b0:	into   
  40a8b1:	mov    cs,WORD PTR [edi-0x7c]
  40a8b4:	add    al,0x20
  40a8b6:	cmp    al,0xca
  40a8b8:	or     al,0xb7
  40a8ba:	pop    ss
  40a8bb:	mov    al,ds:0x50406491
  40a8c0:	adc    DWORD PTR [ecx+0x3a],edx
  40a8c3:	in     al,0x17
  40a8c5:	inc    ebx
  40a8c6:	adc    BYTE PTR [edx],bh
  40a8c8:	(bad)  
  40a8c9:	jb     0x40a8f6
  40a8cb:	sub    esp,esi
  40a8cd:	loope  0x40a8c8
  40a8cf:	ror    ebx,0x1f
  40a8d2:	iret   
  40a8d3:	inc    edi
  40a8d4:	or     BYTE PTR [ebp-0x246bacf3],bh
  40a8da:	inc    ebp
  40a8db:	adc    eax,esi
  40a8dd:	xchg   edi,eax
  40a8de:	mul    BYTE PTR [edi+0x34]
  40a8e1:	sbb    DWORD PTR [esi-0x7e3fd800],ebp
  40a8e7:	call   0xc3de8d94
  40a8ec:	nop
  40a8ed:	dec    ecx
  40a8ee:	mov    ah,0x77
  40a8f0:	fsubr  st(7),st
  40a8f2:	outs   dx,BYTE PTR ds:[esi]
  40a8f3:	or     esp,ebx
  40a8f5:	repz push edx
  40a8f7:	jmp    0xc84e:0x2a7b0468
  40a8fe:	or     al,0x3a
  40a900:	pop    ebp
  40a901:	add    edx,DWORD PTR [edx-0x2a41806b]
  40a907:	push   ebx
  40a908:	xor    al,0xd2
  40a90a:	pushf  
  40a90b:	adc    BYTE PTR [edi],bl
  40a90d:	pop    ds
  40a90e:	mov    bh,0x88
  40a910:	gs ins BYTE PTR es:[edi],dx
  40a912:	cld    
  40a913:	adc    al,bh
  40a915:	pop    ecx
  40a916:	push   0x9aea414c
  40a91b:	aaa    
  40a91c:	push   0xffffffa8
  40a91e:	or     al,0xee
  40a920:	push   0x68
  40a922:	jne    0x40a901
  40a924:	arpl   WORD PTR [eax+0x5e06103d],bp
  40a92a:	retf   0x1a84
  40a92d:	stos   BYTE PTR es:[edi],al
  40a92e:	leave  
  40a92f:	add    al,0x9c
  40a931:	mov    DWORD PTR [edx],ecx
  40a933:	xor    DWORD PTR [ecx],esp
  40a935:	add    al,0x9f
  40a937:	and    DWORD PTR [eax],ecx
  40a939:	lods   al,BYTE PTR ds:[esi]
  40a93a:	mov    eax,ds:0xd9a225b
  40a93f:	dec    edx
  40a940:	cli    
  40a941:	xor    eax,0x3ac274f
  40a946:	jne    0x40a9ba
  40a948:	mov    bl,0x6d
  40a94a:	(bad)  
  40a94b:	push   esp
  40a94c:	ins    DWORD PTR es:[edi],dx
  40a94d:	pop    eax
  40a94e:	es aam 0x43
  40a951:	push   edx
  40a952:	hlt    
  40a953:	mov    cl,0x97
  40a955:	nop
  40a956:	xor    al,0x3e
  40a958:	leave  
  40a959:	ror    edi,0x2c
  40a95c:	stos   DWORD PTR es:[edi],eax
  40a95d:	mov    BYTE PTR [edx],bl
  40a95f:	push   ebp
  40a960:	enter  0xc2be,0x8a
  40a964:	push   ebx
  40a965:	ficomp WORD PTR [esi-0xa]
  40a968:	xchg   ebx,eax
  40a969:	data16 out dx,al
  40a96b:	and    BYTE PTR [eax-0x5d1a9f24],ah
  40a971:	pop    ebp
  40a972:	ja     0x40a907
  40a974:	rcr    DWORD PTR ds:0xf60a3559,0xd8
  40a97b:	in     al,0x7e
  40a97d:	scas   al,BYTE PTR es:[edi]
  40a97e:	and    al,0xcf
  40a980:	xchg   edi,eax
  40a981:	aam    0x3e
  40a983:	pop    es
  40a984:	out    0xc4,eax
  40a986:	adc    edx,ebx
  40a988:	add    DWORD PTR [eax+ebx*8-0xfd67d59],esp
  40a98f:	cs popf 
  40a991:	pop    ds
  40a992:	add    DWORD PTR [edx],esi
  40a994:	mov    dl,BYTE PTR [esi+0x6dbcd7]
  40a99a:	ret    0x432e
  40a99d:	call   0xfefef1d1
  40a9a2:	clc    
  40a9a3:	sbb    eax,0xa5c7feb5
  40a9a8:	jl     0x40aa06
  40a9aa:	adc    ecx,DWORD PTR [edi+0x52]
  40a9ad:	xor    eax,0x293218a3
  40a9b2:	daa    
  40a9b3:	pop    esi
  40a9b4:	arpl   WORD PTR [eax],ax
  40a9b6:	xchg   ebx,eax
  40a9b7:	jo     0x40a9fa
  40a9b9:	add    BYTE PTR [ecx-0x131431f7],0x21
  40a9c0:	out    dx,ax
  40a9c2:	xlat   BYTE PTR ds:[ebx]
  40a9c3:	mul    BYTE PTR [ebp-0x3d1ef7d3]
  40a9c9:	inc    edi
  40a9ca:	pop    esi
  40a9cb:	jecxz  0x40a985
  40a9cd:	dec    eax
  40a9ce:	lock out 0x7c,eax
  40a9d1:	jnp    0x40a9a6
  40a9d3:	jmp    0x8758:0x328fd771
  40a9da:	ret    0xf9b2
  40a9dd:	rol    edi,1
  40a9df:	jge    0x40aa27
  40a9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e2:	mov    WORD PTR [edi],es
  40a9e4:	or     eax,0xe699ae45
  40a9e9:	fcmovb st,st(4)
  40a9eb:	rcl    BYTE PTR [esi+edx*2+0x6],0x39
  40a9f0:	cmp    ch,ah
  40a9f2:	cmp    al,0x9d
  40a9f4:	push   cs
  40a9f5:	(bad)  
  40a9f7:	(bad)  
  40a9f8:	jno    0x40a9b2
  40a9fa:	and    al,BYTE PTR [edx+0x72]
  40a9fd:	cld    
  40a9fe:	and    DWORD PTR [edx+eiz*8+0x71d4dc01],ebp
  40aa05:	xchg   ecx,eax
  40aa06:	(bad)  
  40aa07:	sub    eax,0xcf808b54
  40aa0c:	outs   dx,BYTE PTR ds:[esi]
  40aa0d:	imul   edx,DWORD PTR es:[edx+0x29],0x4
  40aa12:	pop    ds
  40aa13:	pop    es
  40aa14:	mov    esi,0x30faf39f
  40aa19:	jmp    0xcacc85a4
  40aa1e:	inc    ebp
  40aa1f:	outs   dx,DWORD PTR ds:[esi]
  40aa20:	and    dl,dl
  40aa22:	imul   esi,ebp,0xffffffb0
  40aa25:	jmp    0xdffc:0x4df6955f
  40aa2c:	sbb    eax,0xa905108f
  40aa31:	int    0x1c
  40aa33:	rcr    DWORD PTR [ebp+0x2c66970b],cl
  40aa39:	in     al,dx
  40aa3a:	div    BYTE PTR [esi+0x33]
  40aa3d:	sbb    edi,DWORD PTR [eax-0x3d427b27]
  40aa43:	xchg   ebx,eax
  40aa44:	arpl   WORD PTR [eax-0x64b05a0e],bx
  40aa4a:	scas   eax,DWORD PTR es:[edi]
  40aa4b:	aam    0xb5
  40aa4d:	jmp    0x40aa02
  40aa4f:	jno    0x40a9f8
  40aa51:	arpl   WORD PTR [ebx+ebx*8+0x65],ax
  40aa55:	xadd   esi,ebp
  40aa58:	inc    edi
  40aa59:	xchg   ebx,eax
  40aa5a:	aad    0xac
  40aa5c:	loopne 0x40a9f1
  40aa5e:	xchg   ebp,eax
  40aa5f:	sahf   
  40aa60:	loopne 0x40aa2a
  40aa62:	sbb    BYTE PTR [ecx+0x47c2a518],al
  40aa68:	sar    DWORD PTR [esp+edx*2-0x22],cl
  40aa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6d:	cmp    eax,DWORD PTR [edx+0x1855ef23]
  40aa73:	mov    ebx,0xc1eeb75
  40aa78:	inc    edi
  40aa79:	sbb    esp,DWORD PTR [edx+0xa]
  40aa7c:	push   edx
  40aa7d:	fstp   TBYTE PTR [ebx+edi*2+0x6779e07c]
  40aa84:	cmp    DWORD PTR [ebx-0x1e],0xc3236cf0
  40aa8b:	icebp  
  40aa8c:	fiadd  DWORD PTR [esi-0x7]
  40aa8f:	aam    0x33
  40aa91:	sar    DWORD PTR [edx+0x3272db],0x3
  40aa98:	ret    0x4589
  40aa9b:	or     BYTE PTR [ebx-0x3ecc13bb],cl
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x57df2ebc
  40aacc:	hlt    
  40aacd:	push   esp
  40aace:	hlt    
  40aacf:	bound  esp,QWORD PTR [edx+0x10]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx-0x46]
  40aad6:	jl     0x40aa91
  40aad8:	and    al,0x73
  40aada:	in     al,dx
  40aadb:	test   eax,0x362dc390
  40aae0:	inc    edx
  40aae1:	aam    0xf3
  40aae3:	and    ch,BYTE PTR [ebx]
  40aae5:	pushf  
  40aae6:	or     DWORD PTR ss:[ebp+0x5bafedfb],ebx
  40aaed:	push   ds
  40aaee:	push   cs
  40aaef:	mov    cl,0x76
  40aaf1:	ds std 
  40aaf3:	retf   0xbbcd
  40aaf6:	mov    esp,DWORD PTR [ecx]
  40aaf8:	mov    edx,0xe4c7c146
  40aafd:	jmp    0x7e75:0x2be16886
  40ab04:	mov    al,ds:0x681a1493
  40ab09:	pop    ebp
  40ab0a:	xchg   edx,eax
  40ab0b:	sti    
  40ab0c:	and    BYTE PTR [edi],bh
  40ab0e:	inc    ecx
  40ab0f:	cmp    edi,DWORD PTR [ecx]
  40ab11:	xlat   BYTE PTR ds:[ebx]
  40ab12:	or     BYTE PTR [ebx+eiz*2],bl
  40ab15:	adc    ah,BYTE PTR [eax+0x963d90a]
  40ab1b:	call   0x93f58a4a
  40ab20:	mov    dh,dl
  40ab22:	in     eax,dx
  40ab23:	dec    edi
  40ab24:	aam    0x6f
  40ab26:	pop    ebx
  40ab27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab28:	dec    esi
  40ab29:	call   0xafae:0xa428e80c
  40ab30:	adc    eax,DWORD PTR [edx-0x59]
  40ab33:	repz leave 
  40ab35:	mov    dh,0x9
  40ab37:	xchg   esi,eax
  40ab38:	or     DWORD PTR [esp+ebx*4-0x7c],ecx
  40ab3c:	add    ah,BYTE PTR [edi-0x31]
  40ab3f:	sbb    eax,0xa30f351d
  40ab44:	add    bh,dl
  40ab46:	adc    ebp,ecx
  40ab48:	mov    ch,bl
  40ab4a:	mov    bl,0xef
  40ab4c:	lea    edi,[eax-0x60]
  40ab4f:	imul   eax,DWORD PTR [ebx-0x6a],0x70c41d56
  40ab56:	mov    ch,0x1e
  40ab58:	xor    al,0x6c
  40ab5a:	test   al,0xf6
  40ab5c:	inc    edx
  40ab5d:	lods   al,BYTE PTR ds:[esi]
  40ab5e:	cld    
  40ab5f:	jb     0x40ab0f
  40ab61:	jns    0x40ab3b
  40ab63:	cmp    DWORD PTR [edx+0x31c9fe31],esi
  40ab69:	aam    0xe3
  40ab6b:	enter  0xb1c4,0xa
  40ab6f:	dec    DWORD PTR [edx-0x4289654b]
  40ab75:	xchg   edx,eax
  40ab76:	repz call 0x7c729f14
  40ab7c:	shl    DWORD PTR [ebx],cl
  40ab7e:	pusha  
  40ab7f:	out    0x6c,eax
  40ab81:	bound  eax,QWORD PTR [edx+0x45]
  40ab84:	clc    
  40ab85:	arpl   WORD PTR [esi],bp
  40ab87:	sar    DWORD PTR [ecx-0x29],1
  40ab8a:	pop    ds
  40ab8b:	jne    0x40ab90
  40ab8d:	mov    esp,0x241d2a1a
  40ab92:	push   ebx
  40ab93:	(bad)  
  40ab94:	int3   
  40ab95:	xchg   edi,eax
  40ab96:	iret   
  40ab97:	dec    ebx
  40ab99:	jge    0x40ab3e
  40ab9b:	imul   edx,eax,0x737e3828
  40aba1:	jnp    0x40ac1c
  40aba3:	mov    cl,0x3e
  40aba5:	fiadd  DWORD PTR [edi+0x27]
  40aba8:	and    al,0xf9
  40abaa:	and    DWORD PTR [edi+ebx*1-0x53b5c913],ebx
  40abb1:	mov    al,0x93
  40abb3:	pop    esi
  40abb4:	(bad)  
  40abb5:	mov    ch,0x8f
  40abb7:	or     DWORD PTR [ebx+0x3b57c32b],edx
  40abbd:	out    0xe2,al
  40abbf:	xchg   esp,eax
  40abc0:	cwde   
  40abc1:	xchg   ebp,eax
  40abc2:	lahf   
  40abc3:	mov    esi,DWORD PTR [eax+0x61]
  40abc6:	test   al,0xa6
  40abc8:	imul   BYTE PTR [eax-0x7dbff5fd]
  40abce:	and    ch,0xcc
  40abd1:	ins    DWORD PTR es:[edi],dx
  40abd2:	out    0xb2,al
  40abd4:	std    
  40abd5:	sbb    eax,DWORD PTR [ecx-0x7e]
  40abd8:	pop    eax
  40abd9:	cmp    esp,edx
  40abdb:	add    eax,0x1a8b06ab
  40abe0:	call   edx
  40abe2:	lea    eax,[ebx-0x49aee7d5]
  40abe8:	adc    al,0x18
  40abea:	xchg   ebx,eax
  40abeb:	fldenv [eax-0x2c380439]
  40abf1:	mov    ebx,0x2305a349
  40abf6:	aas    
  40abf7:	mov    BYTE PTR [esi],bl
  40abf9:	add    BYTE PTR [eax+edi*8+0x52],bl
  40abfd:	push   es
  40abfe:	cwde   
  40abff:	pop    ds
  40ac00:	out    0x52,al
  40ac02:	push   0x87903197
  40ac07:	cld    
  40ac08:	mov    cl,0x49
  40ac0a:	scas   eax,DWORD PTR es:[edi]
  40ac0b:	in     al,dx
  40ac0c:	js     0x40ab98
  40ac0e:	sub    BYTE PTR [ebx-0x13],0x85
  40ac12:	and    eax,esi
  40ac14:	lods   al,BYTE PTR ds:[esi]
  40ac15:	nop
  40ac16:	mov    esp,0x617b3f98
  40ac1b:	dec    eax
  40ac1c:	jge    0x40ac58
  40ac1e:	fdivr  DWORD PTR ds:0x46e46d6d
  40ac24:	mov    esi,0x925876e9
  40ac29:	popa   
  40ac2a:	ja     0x40acab
  40ac2c:	int3   
  40ac2d:	mov    al,ds:0xdc435dff
  40ac32:	out    dx,al
  40ac33:	cmp    al,0x34
  40ac35:	js     0x40abe8
  40ac37:	mov    dl,0xc5
  40ac39:	or     bl,BYTE PTR [edi]
  40ac3b:	fsubr  st(2),st
  40ac3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac3e:	and    BYTE PTR [eax-0x65c95ed8],bh
  40ac44:	dec    ebp
  40ac45:	sar    DWORD PTR [edi],cl
  40ac47:	(bad)  
  40ac48:	das    
  40ac49:	xor    bh,bh
  40ac4b:	es clc 
  40ac4d:	add    ecx,DWORD PTR [edi+0x21db0134]
  40ac53:	sbb    BYTE PTR [esp+esi*8],ch
  40ac56:	and    eax,ebx
  40ac58:	jecxz  0x40ac74
  40ac5a:	xchg   ebx,eax
  40ac5b:	cmp    ch,BYTE PTR [edx]
  40ac5d:	fidiv  WORD PTR [esi+0x66050186]
  40ac63:	dec    edx
  40ac64:	jmp    0x9a02919a
  40ac69:	push   esi
  40ac6a:	imul   esp,edx,0x41
  40ac6d:	in     eax,0x9c
  40ac6f:	cmp    eax,0xcbe10d85
  40ac74:	lods   al,BYTE PTR ds:[esi]
  40ac75:	dec    edi
  40ac76:	ret    
  40ac77:	fadd   QWORD PTR [ecx]
  40ac79:	and    edx,DWORD PTR fs:[ebx-0xd99890]
  40ac80:	cmp    bh,BYTE PTR [edx+ebx*2+0x62]
  40ac84:	mov    bl,0xe7
  40ac86:	(bad)  
  40ac88:	add    edx,DWORD PTR [esp+ebp*1-0x7e9e1fb1]
  40ac8f:	or     edi,DWORD PTR [ebp+0x5d]
  40ac92:	cmp    BYTE PTR [ebx-0x10e882a1],bh
  40ac98:	push   es
  40ac99:	mov    esp,0x15e38953
  40ac9e:	rcl    eax,cl
  40aca0:	retf   
  40aca1:	mov    esi,0xdaa8a14f
  40aca6:	pop    ecx
  40aca7:	sub    DWORD PTR [esi-0x697f39b0],ecx
  40acad:	mov    ebx,0x549b316b
  40acb2:	rcr    DWORD PTR [eax-0x6f],cl
  40acb5:	push   cs
  40acb6:	imul   esp,DWORD PTR [edi-0x480a6c6e],0x23
  40acbd:	es in  al,dx
  40acbf:	inc    esp
  40acc0:	int3   
  40acc1:	mov    edx,0xd1046efa
  40acc6:	mov    dl,0x62
  40acc8:	and    eax,0xbf384128
  40accd:	nop
  40acce:	mov    edx,0xeeb70403
  40acd3:	pushf  
  40acd4:	mov    al,0xfe
  40acd6:	jp     0x40acbb
  40acd8:	fistp  QWORD PTR [esi-0x75]
  40acdb:	shr    BYTE PTR [ebp+0x5],cl
  40acde:	std    
  40acdf:	push   edi
  40ace0:	pop    eax
  40ace1:	jp     0x40aca3
  40ace3:	jne    0x40accb
  40ace5:	jl     0x40acbe
  40ace7:	push   ebp
  40ace8:	into   
  40ace9:	pop    ss
  40acea:	push   0xc56f1c98
  40acef:	lods   eax,DWORD PTR ds:[esi]
  40acf0:	jmp    0x2f1a:0xcf5ec532
  40acf7:	scas   eax,DWORD PTR es:[edi]
  40acf8:	push   edx
  40acf9:	push   ebx
  40acfa:	xlat   BYTE PTR ds:[ebx]
  40acfb:	test   DWORD PTR [edx],ebx
  40acfd:	xor    DWORD PTR [eax-0x3c],0x6867cf33
  40ad04:	call   0x3d5:0x73ece926
  40ad0b:	cdq    
  40ad0c:	imul   edi,DWORD PTR [ebx],0x7
  40ad0f:	(bad)  [ebp-0x5c4f7ad2]
  40ad15:	outs   dx,BYTE PTR ds:[esi]
  40ad16:	sahf   
  40ad17:	jg     0x40ad61
  40ad19:	stc    
  40ad1a:	sti    
  40ad1b:	mov    eax,0xb68dd33d
  40ad20:	addr16 sahf 
  40ad22:	jle    0x40ad53
  40ad24:	nop    DWORD PTR [edi]
  40ad27:	push   ebp
  40ad28:	adc    eax,DWORD PTR [eax]
  40ad2a:	ja     0x40acbe
  40ad2c:	inc    esp
  40ad2d:	fdiv   DWORD PTR [eax]
  40ad2f:	data16 fmul DWORD PTR [eax]
  40ad32:	mov    bh,0x3a
  40ad34:	clc    
  40ad35:	jp     0x40ad2c
  40ad37:	mov    ecx,0x5998007b
  40ad3c:	loope  0x40ad67
  40ad3e:	pop    edx
  40ad3f:	xor    dh,bl
  40ad41:	sahf   
  40ad42:	add    al,BYTE PTR [ebp+0x1a35825c]
  40ad48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad49:	arpl   WORD PTR [ebx-0x1],bp
  40ad4c:	jge    0x40ad2c
  40ad4e:	loopne 0x40ad25
  40ad50:	enter  0x66c,0x53
  40ad54:	push   ds
  40ad55:	lea    ecx,[edi-0x14]
  40ad58:	fldcw  WORD PTR [edx-0x3aea3436]
  40ad5e:	scas   al,BYTE PTR es:[edi]
  40ad5f:	and    al,BYTE PTR [ebx+ebx*1+0x33da805b]
  40ad66:	mov    al,BYTE PTR [ecx+ecx*1]
  40ad69:	jb     0x40ad48
  40ad6b:	dec    BYTE PTR [eax+edi*8+0x53]
  40ad6f:	or     BYTE PTR [edi+0x793a30d],0xb7
  40ad76:	xchg   ecx,eax
  40ad77:	dec    esi
  40ad78:	sub    DWORD PTR ds:0x5ffd4bed,eax
  40ad7e:	xor    ebp,DWORD PTR [eax-0x37]
  40ad81:	jecxz  0x40adb1
  40ad83:	icebp  
  40ad84:	nop
  40ad85:	cmp    al,0x34
  40ad87:	adc    eax,0x34ffde9a
  40ad8c:	sbb    ch,BYTE PTR [eax+0x2e39e372]
  40ad92:	mov    esp,0xaeeefd93
  40ad97:	cs dec eax
  40ad99:	fwait
  40ad9a:	mov    esi,DWORD PTR [eax+0x52]
  40ad9d:	sbb    eax,0xdb7936d0
  40ada2:	jge    0x40ae15
  40ada4:	push   esp
  40ada5:	add    ah,cl
  40ada7:	push   eax
  40ada8:	outs   dx,DWORD PTR ds:[esi]
  40ada9:	(bad)  
  40adaa:	loop   0x40ad64
  40adac:	push   edx
  40adad:	arpl   ax,si
  40adaf:	pop    es
  40adb0:	scas   al,BYTE PTR es:[edi]
  40adb1:	(bad)  
  40adb2:	ins    BYTE PTR es:[edi],dx
  40adb3:	dec    edi
  40adb4:	or     DWORD PTR [ebx+0x36],ebp
  40adb7:	inc    ebp
  40adb8:	mov    ds:0x8741b097,eax
  40adbd:	pop    edi
  40adbe:	and    bl,BYTE PTR [edx-0x66]
  40adc1:	cmp    BYTE PTR [ebp-0x50],bh
  40adc4:	mov    WORD PTR [ecx],?
  40adc6:	jmp    0x40adee
  40adc8:	leave  
  40adc9:	sbb    ecx,esi
  40adcb:	fisttp WORD PTR [ebx]
  40adcd:	scas   eax,DWORD PTR es:[edi]
  40adce:	mov    bh,0x70
  40add0:	fsub   QWORD PTR [edx+0x35e498e3]
  40add6:	inc    eax
  40add7:	ins    DWORD PTR es:[edi],dx
  40add8:	cmp    ebp,esp
  40adda:	pop    eax
  40addb:	mov    WORD PTR [edi],?
  40addd:	adc    al,0x79
  40addf:	scas   eax,DWORD PTR es:[edi]
  40ade0:	(bad)  
  40ade1:	fst    DWORD PTR [ecx]
  40ade3:	jo     0x40adac
  40ade5:	cmp    al,0xb4
  40ade7:	sti    
  40ade8:	leave  
  40ade9:	jmp    0x2a21fcac
  40adee:	or     eax,0x456b5ba4
  40adf3:	and    BYTE PTR [edi],0xdd
  40adf6:	jmp    0x46f00376
  40adfb:	jne    0x40adac
  40adfd:	fst    st(0)
  40adff:	aam    0x83
  40ae01:	retf   0xd051
  40ae04:	sub    eax,0x6461132f
  40ae09:	pushf  
  40ae0a:	fadd   DWORD PTR [ebx+0x11]
  40ae0d:	dec    edi
  40ae0e:	adc    al,0xc8
  40ae10:	xor    BYTE PTR [ebx],bl
  40ae12:	mov    dl,0x50
  40ae14:	mov    eax,ds:0x6a48603b
  40ae19:	inc    esi
  40ae1a:	mov    WORD PTR [ebp+eax*2-0x7b98ce34],cs
  40ae21:	mov    ch,0x6e
  40ae23:	nop
  40ae24:	fidiv  DWORD PTR [edi+ebp*4]
  40ae27:	add    al,0x3e
  40ae29:	fiadd  WORD PTR [edi+0x3f]
  40ae2c:	fdiv   DWORD PTR [edx]
  40ae2e:	mov    ebp,0x5bea6e
  40ae33:	push   es
  40ae34:	mov    cs,WORD PTR [ebx]
  40ae36:	pop    es
  40ae37:	sbb    esp,ebp
  40ae39:	xor    al,BYTE PTR [eax+0x5b76a258]
  40ae3f:	data16 cmp al,0x1
  40ae42:	mov    bh,0xb
  40ae44:	pop    ebx
  40ae45:	out    dx,eax
  40ae46:	bndstx ds:0xcf1ba9db,(bad)
  40ae4d:	mov    bh,0x2a
  40ae4f:	cmp    DWORD PTR [edi],0x330378e
  40ae55:	fnstenv [di-0x5454]
  40ae5a:	call   0x753c6d0b
  40ae5f:	cld    
  40ae60:	sub    DWORD PTR [ebp+0x7f],ebp
  40ae63:	fst    DWORD PTR [eax]
  40ae65:	mov    ds:0x2bdd976f,al
  40ae6a:	jg     0x40ae5d
  40ae6c:	jno    0x40ae0c
  40ae6e:	shl    edi,cl
  40ae70:	xchg   DWORD PTR ds:[eax-0x6d5cb273],ecx
  40ae77:	dec    edx
  40ae78:	je     0x40ae38
  40ae7a:	push   es
  40ae7b:	pop    edx
  40ae7c:	mov    BYTE PTR [eax+0x34],ah
  40ae7f:	jle    0x40ae46
  40ae81:	mov    ecx,0x465d725f
  40ae86:	xchg   edi,eax
  40ae87:	or     al,0x33
  40ae89:	into   
  40ae8a:	push   eax
  40ae8b:	jge    0x40ae7e
  40ae8d:	sub    ecx,edi
  40ae8f:	cs out dx,al
  40ae91:	dec    esi
  40ae92:	or     esi,esi
  40ae94:	dec    ebp
  40ae95:	mov    BYTE PTR [edi+0x7c],bl
  40ae98:	mov    dh,0x4a
  40ae9a:	cmp    eax,DWORD PTR [edx-0x18]
  40ae9d:	dec    ebp
  40ae9e:	jbe    0x40aed8
  40aea0:	lods   al,BYTE PTR ds:[esi]
  40aea1:	fsubr  DWORD PTR [ebx]
  40aea3:	cmp    al,0x65
  40aea5:	cmp    BYTE PTR [ebp-0x2e],0xe9
  40aea9:	xor    DWORD PTR [ebx],ebp
  40aeab:	scas   al,BYTE PTR es:[edi]
  40aeac:	ret    0xd1d3
  40aeaf:	fild   WORD PTR [edx+0x43eb4254]
  40aeb5:	bound  edi,QWORD PTR [edi]
  40aeb7:	pop    ecx
  40aeb8:	fcom   QWORD PTR [ecx+0x3c5f82f1]
  40aebe:	stc    
  40aebf:	or     al,0xea
  40aec1:	rcl    DWORD PTR [ecx-0x1f3903c1],0xee
  40aec8:	das    
  40aec9:	ret    
  40aeca:	xor    al,0xe8
  40aecc:	jle    0x40aefc
  40aece:	inc    ebx
  40aecf:	and    esp,DWORD PTR [ebx+0x5c]
  40aed2:	inc    ebp
  40aed3:	popa   
  40aed4:	lea    esp,[ecx+edi*2+0x73]
  40aed8:	inc    esi
  40aed9:	or     DWORD PTR [edi],edx
  40aedb:	add    al,0x81
  40aedd:	jno    0x40aec8
  40aedf:	mov    ds:0x137d0ac8,eax
  40aee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aee5:	ficom  WORD PTR [esp+esi*4]
  40aee8:	fs mov dl,0x7c
  40aeeb:	push   edx
  40aeec:	mov    esp,0xe55cdbde
  40aef1:	xor    BYTE PTR [ecx+eax*8],dl
  40aef4:	push   cs
  40aef5:	out    dx,eax
  40aef6:	pop    ebx
  40aef7:	test   DWORD PTR [ebx],edx
  40aef9:	pushf  
  40aefa:	add    BYTE PTR [edx],al
  40aefc:	push   0xa98f2849
  40af01:	sub    BYTE PTR [edi],ch
  40af03:	ins    DWORD PTR es:[edi],dx
  40af04:	add    DWORD PTR [edi-0x35],eax
  40af07:	sbb    ebp,edi
  40af09:	imul   esi,DWORD PTR [ebx+0x3d935409],0x54418aa6
  40af13:	sbb    eax,0x30540365
  40af18:	and    al,0x8f
  40af1a:	out    0x7b,eax
  40af1c:	pop    esp
  40af1d:	or     dh,0xe4
  40af20:	lods   eax,DWORD PTR ds:[esi]
  40af21:	out    dx,eax
  40af22:	mov    eax,0x4201dae5
  40af27:	dec    esi
  40af28:	dec    DWORD PTR [eax-0xc]
  40af2b:	push   ss
  40af2c:	lods   eax,DWORD PTR ds:[esi]
  40af2d:	and    DWORD PTR [ebp-0x69533265],0x4bdd911c
  40af37:	push   ss
  40af38:	jmp    0x40aeca
  40af3a:	icebp  
  40af3b:	(bad)  
  40af3d:	dec    ecx
  40af3e:	pop    esi
  40af3f:	adc    BYTE PTR [eax+0x5db3b4a5],dh
  40af45:	fisub  DWORD PTR [edi]
  40af47:	fisttp WORD PTR [edx]
  40af49:	xchg   ebp,eax
  40af4a:	mov    bl,0x4c
  40af4c:	xchg   ecx,eax
  40af4d:	imul   ebx,ecx,0xffffffbe
  40af50:	(bad)  
  40af51:	scas   eax,DWORD PTR es:[edi]
  40af52:	adc    edi,DWORD PTR [edi]
  40af54:	and    BYTE PTR ss:[ebx*4+0x246e9aa1],dh
  40af5c:	out    dx,al
  40af5d:	pop    ebp
  40af5e:	pop    esp
  40af5f:	dec    ebx
  40af60:	loopne 0x40af96
  40af62:	add    dl,al
  40af64:	ror    DWORD PTR [eax-0x4f85ff23],1
  40af6a:	ret    0xcb3c
  40af6d:	mov    ds:0xbca96183,eax
  40af72:	or     eax,0x7e123ecb
  40af77:	js     0x40af90
  40af79:	sbb    esp,0xad006746
  40af7f:	call   0xa86:0xc3af1b46
  40af86:	sub    esi,edx
  40af88:	xlat   BYTE PTR ds:[ebx]
  40af89:	sar    BYTE PTR ds:0x34ea7bd6,cl
  40af8f:	inc    esp
  40af90:	popf   
  40af91:	das    
  40af92:	cmp    esp,esi
  40af94:	stc    
  40af95:	mov    ebp,0x1d2a509
  40af9a:	pop    ds
  40af9b:	fsub   st,st(1)
  40af9d:	or     BYTE PTR [ebp+0x46],al
  40afa0:	loopne 0x40afc0
  40afa2:	pop    ds
  40afa3:	lea    ecx,[ecx+edx*2+0x760176dd]
  40afaa:	es daa 
  40afac:	inc    edx
  40afad:	pop    eax
  40afae:	sub    DWORD PTR [esi+esi*1-0x18],ecx
  40afb2:	ds jg  0x40afc4
  40afb5:	popa   
  40afb6:	popa   
  40afb7:	test   BYTE PTR [edx-0x7],bh
  40afba:	call   0x75559a36
  40afbf:	(bad)  
  40afc1:	fwait
  40afc2:	push   ebp
  40afc3:	sbb    eax,0x5ab551e6
  40afc8:	mov    WORD PTR [edx-0x793ccac7],cs
  40afce:	and    ebp,DWORD PTR [ebp+0x38]
  40afd1:	fist   DWORD PTR [ebx+edx*8]
  40afd4:	inc    ebx
  40afd5:	or     eax,DWORD PTR [edx+0x51]
  40afd8:	nop
  40afd9:	or     bl,BYTE PTR [edi+0x3b]
  40afdc:	pop    edi
  40afdd:	fistp  WORD PTR [eax-0xa2539b0]
  40afe3:	fistp  QWORD PTR [edi+esi*4-0x6d]
  40afe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afe8:	mov    cl,BYTE PTR [edi+0x64]
  40afeb:	popf   
  40afec:	(bad)  
  40afed:	fcom   QWORD PTR ds:0x10bfb159
  40aff3:	ins    DWORD PTR es:[edi],dx
  40aff4:	jmp    0x40afb1
  40aff6:	or     al,0x36
  40aff8:	data16 lods al,BYTE PTR ds:[esi]
  40affa:	add    BYTE PTR [eax],ch
  40affc:	addr16 pop eax
  40affe:	mov    ah,0x6c
  40b000:	mov    es,WORD PTR [ecx-0x49]
  40b003:	cmp    ebx,esp
  40b005:	stc    
  40b006:	and    ch,dh
  40b008:	sti    
  40b009:	xchg   DWORD PTR [ebx-0x52],edi
  40b00c:	cwde   
  40b00d:	jmp    0xca7e:0xecf19140
  40b014:	(bad)  
  40b015:	(bad)  
  40b016:	jge    0x40afa2
  40b018:	mov    bl,ah
  40b01a:	mov    DWORD PTR [esi-0x6b9a1caa],ebp
  40b020:	mov    edi,0x73440881
  40b025:	xor    al,0xe
  40b027:	stos   DWORD PTR es:[edi],eax
  40b028:	jno    0x40b026
  40b02a:	jge    0x40afb9
  40b02c:	addr16 jno 0x40b07e
  40b02f:	mov    WORD PTR [esi],gs
  40b031:	nop
  40b032:	or     ch,cl
  40b034:	mov    edx,ecx
  40b036:	test   DWORD PTR [edx+0x74],edx
  40b039:	gs stc 
  40b03b:	dec    ebx
  40b03c:	rcr    BYTE PTR [edx+0x5e],cl
  40b03f:	bnd data16 jnp 0x40b04f
  40b043:	mov    DWORD PTR [esi+edx*4-0x23],esi
  40b047:	mov    esp,0xc7bca260
  40b04c:	nop
  40b04d:	sbb    eax,0x44b1c151
  40b052:	(bad)  
  40b053:	pop    edx
  40b054:	imul   edx,DWORD PTR ds:0xd79a67c3,0xffffffcb
  40b05b:	iret   
  40b05c:	nop
  40b05d:	jnp    0x40b03d
  40b05f:	push   cs
  40b060:	jmp    0x40b01d
  40b062:	enter  0xc3ef,0x4d
  40b066:	aad    0xd8
  40b068:	ret    0xcfd6
  40b06b:	cmc    
  40b06c:	mov    dh,0xa3
  40b06e:	inc    eax
  40b06f:	jnp    0x40b053
  40b071:	inc    eax
  40b072:	int3   
  40b073:	jb     0x40aff7
  40b075:	push   0xd9459819
  40b07a:	push   0x78456fe7
  40b07f:	add    eax,0x488075ba
  40b084:	outs   dx,DWORD PTR ds:[esi]
  40b085:	sub    al,0x0
  40b087:	(bad)  
  40b089:	sahf   
  40b08a:	rcl    DWORD PTR [ebx],1
  40b08c:	jge    0x40b030
  40b08e:	push   ebx
  40b08f:	or     DWORD PTR [ecx+0xa],edi
  40b092:	jl     0x40b05c
  40b094:	pop    esi
  40b095:	sbb    cl,al
  40b097:	popa   
  40b098:	ss push 0x4d
  40b09b:	ja     0x40b0b3
  40b09d:	je     0x40b05e
  40b09f:	lock add eax,0x6901d23c
  40b0a5:	push   es
  40b0a6:	xchg   DWORD PTR [di-0x2120],edi
  40b0ab:	adc    bl,dh
  40b0ad:	sub    DWORD PTR es:[ebx+0x98f73af],0x7d9d0070
  40b0b8:	push   0x9
  40b0ba:	cs loope 0x40b085
  40b0bd:	pop    esi
  40b0be:	mov    WORD PTR [esi+0x5f],ss
  40b0c1:	cmp    eax,0x63785d3e
  40b0c6:	push   ss
  40b0c7:	jmp    0x40b069
  40b0c9:	and    esi,DWORD PTR [eax]
  40b0cb:	xor    ah,ah
  40b0cd:	push   ds
  40b0ce:	lahf   
  40b0cf:	std    
  40b0d0:	push   ebx
  40b0d1:	pop    esp
  40b0d2:	xchg   ecx,eax
  40b0d3:	lea    edx,[edx+ebp*8-0x5a]
  40b0d7:	call   0x3fe8a5d5
  40b0dc:	sbb    eax,0x8bbcd307
  40b0e1:	ret    0xb72d
  40b0e4:	push   cs
  40b0e5:	out    0x71,eax
  40b0e7:	neg    DWORD PTR [edx-0x43586ca0]
  40b0ed:	mov    edx,0x12724464
  40b0f2:	jg     0x40b146
  40b0f4:	ds icebp 
  40b0f6:	inc    edi
  40b0f7:	das    
  40b0f8:	pop    edi
  40b0f9:	mov    al,ds:0x366807c
  40b0fe:	cld    
  40b0ff:	stos   DWORD PTR es:[edi],eax
  40b100:	loope  0x40b155
  40b102:	(bad)  
  40b104:	ror    DWORD PTR [edx],cl
  40b106:	xor    esp,eax
  40b108:	sub    esp,DWORD PTR [eax]
  40b10a:	xchg   esi,eax
  40b10b:	daa    
  40b10c:	shr    ecx,0x3f
  40b10f:	sti    
  40b110:	repz fstp DWORD PTR [ecx+0x4b9a761d]
  40b117:	mov    al,ds:0x3404ed3a
  40b11c:	xchg   ebx,eax
  40b11d:	add    ebp,edi
  40b11f:	and    al,0x71
  40b121:	mov    edi,0x43df36e6
  40b126:	fld    TBYTE PTR [ecx+0x76]
  40b129:	inc    esi
  40b12a:	mov    ebp,ecx
  40b12c:	push   cs
  40b12d:	lahf   
  40b12e:	(bad)
  40b131:	scas   eax,DWORD PTR es:[edi]
  40b132:	jg     0x40b146
  40b134:	test   al,0x6d
  40b136:	sbb    eax,0x775c9713
  40b13b:	mov    ch,0x1
  40b13d:	ds dec esp
  40b13f:	in     eax,0x87
  40b141:	dec    edx
  40b142:	mov    esi,ebp
  40b144:	aaa    
  40b145:	or     BYTE PTR [esi],0xd2
  40b148:	dec    esp
  40b149:	out    0x24,eax
  40b14b:	xor    BYTE PTR [esi+0x3a1b5c2e],dh
  40b151:	aaa    
  40b152:	lea    ebx,es:[edx+0x4d]
  40b156:	cmp    ch,BYTE PTR [ebx]
  40b158:	clc    
  40b159:	dec    edx
  40b15a:	out    0x17,al
  40b15c:	int3   
  40b15d:	sub    eax,0x3c9e613e
  40b162:	test   ah,dl
  40b164:	js     0x40b1b7
  40b166:	jo     0x40b12a
  40b168:	ret    
  40b169:	push   eax
  40b16a:	xchg   esp,eax
  40b16b:	(bad)  
  40b16e:	sti    
  40b16f:	les    ebp,FWORD PTR [ebx-0x2bf9dc02]
  40b175:	idiv   DWORD PTR [esi]
  40b177:	mov    ?,eax
  40b179:	in     eax,dx
  40b17a:	pop    es
  40b17b:	(bad)  
  40b17d:	pop    ecx
  40b17e:	xor    al,0x42
  40b180:	fbld   TBYTE PTR ss:[ecx-0x68]
  40b184:	inc    esi
  40b185:	fdiv   QWORD PTR ds:0x6a633291
  40b18b:	or     DWORD PTR [ebx+eiz*8+0x64],ebx
  40b18f:	ror    DWORD PTR [edi],cl
  40b191:	pop    ebx
  40b192:	fcomip st,st(2)
  40b194:	pushf  
  40b195:	ins    DWORD PTR es:[edi],dx
  40b196:	in     al,dx
  40b197:	push   ebx
  40b198:	dec    esi
  40b199:	rol    DWORD PTR [ebp-0x26],1
  40b19c:	jae    0x40b17f
  40b19e:	ins    BYTE PTR es:[edi],dx
  40b19f:	(bad)  
  40b1a0:	push   edi
  40b1a1:	shl    DWORD PTR [esi+eiz*1-0xf],0x15
  40b1a6:	(bad)  
  40b1a7:	cdq    
  40b1a8:	out    dx,eax
  40b1a9:	adc    al,0x8b
  40b1ab:	jle    0x40b222
  40b1ad:	mov    ch,0xd7
  40b1af:	mov    edx,ebx
  40b1b1:	mov    dl,0x38
  40b1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b4:	cli    
  40b1b5:	stos   BYTE PTR es:[edi],al
  40b1b6:	sahf   
  40b1b7:	cmc    
  40b1b8:	or     al,0xac
  40b1ba:	icebp  
  40b1bb:	pop    eax
  40b1bc:	xchg   DWORD PTR [esi+0x2d7483d],ecx
  40b1c2:	xor    edx,ebx
  40b1c4:	inc    ecx
  40b1c5:	and    DWORD PTR [eax],esp
  40b1c7:	jge    0x40b1ea
  40b1c9:	ins    DWORD PTR es:[edi],dx
  40b1ca:	push   ds
  40b1cb:	popa   
  40b1cc:	and    eax,0x39177cbe
  40b1d1:	lods   al,BYTE PTR ds:[esi]
  40b1d2:	popa   
  40b1d3:	adc    al,0xd8
  40b1d5:	arpl   WORD PTR [ecx+ebp*4+0x522ac2d6],bx
  40b1dc:	mov    edi,0x9d2634e2
  40b1e1:	rol    DWORD PTR [ebx+0x42ae2c00],cl
  40b1e7:	xchg   ebp,eax
  40b1e8:	mov    fs:0x6adfff3,al
  40b1ee:	mov    edi,0x37e9212d
  40b1f3:	int3   
  40b1f4:	stc    
  40b1f5:	jmp    0x40b18c
  40b1f7:	les    esp,FWORD PTR [ecx+0x42]
  40b1fa:	fucomi st,st(0)
  40b1fc:	test   eax,0x99413139
  40b201:	pop    edx
  40b202:	sbb    eax,0x20da1fb
  40b207:	push   ss
  40b208:	ja     0x40b26d
  40b20a:	lods   al,BYTE PTR ds:[esi]
  40b20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b20c:	in     eax,0x8
  40b20e:	pop    ebx
  40b20f:	mov    eax,ds:0x71141bdd
  40b214:	inc    DWORD PTR [ecx-0x50]
  40b217:	mov    bl,0x63
  40b219:	jecxz  0x40b218
  40b21b:	inc    esp
  40b21c:	jb     0x40b246
  40b21e:	loop   0x40b28e
  40b220:	add    BYTE PTR [edi+0x38],ch
  40b223:	outs   dx,BYTE PTR ds:[esi]
  40b224:	popa   
  40b225:	xor    eax,0x766e40be
  40b22a:	pop    ebp
  40b22b:	mov    al,0x1e
  40b22d:	rol    DWORD PTR [ebp-0x60354581],0x33
  40b234:	outs   dx,BYTE PTR ds:[esi]
  40b235:	and    al,0x11
  40b237:	mov    ds:0x85b00d6f,al
  40b23c:	repnz pop esp
  40b23e:	mov    esp,0x3f9920a4
  40b243:	test   BYTE PTR [ebp+0x39],dl
  40b246:	mov    ah,0x99
  40b248:	jge    0x40b23b
  40b24a:	cmp    edx,esi
  40b24c:	xor    BYTE PTR [edx+0x2d4a3166],cl
  40b252:	pop    esi
  40b253:	in     al,dx
  40b254:	dec    ebx
  40b255:	mov    al,0xfa
  40b257:	jno    0x40b22f
  40b259:	(bad)  
  40b25a:	out    0xe6,al
  40b25c:	out    0x1e,eax
  40b25e:	jb     0x40b2d7
  40b260:	and    edx,DWORD PTR [eax-0x21]
  40b263:	imul   ebp,DWORD PTR [esi],0x70284078
  40b269:	mov    eax,0xb78ef9c
  40b26e:	push   0x7b
  40b270:	sbb    esp,DWORD PTR [edx-0x7e]
  40b273:	je     0x40b22e
  40b275:	or     eax,0xa06fb6fc
  40b27a:	out    dx,al
  40b27b:	inc    esi
  40b27c:	mov    bh,0xf4
  40b27e:	push   ebp
  40b27f:	add    BYTE PTR [ebp-0x50],0x59
  40b283:	mov    edi,0x88aee424
  40b288:	int    0xb
  40b28a:	sbb    al,0x8a
  40b28c:	test   al,0x1f
  40b28e:	push   0xffffff8c
  40b290:	mov    edx,0xb30904a
  40b295:	jg     0x40b302
  40b297:	mov    BYTE PTR ds:0x584a81ae,0x85
  40b29e:	repz adc ebp,DWORD PTR [ebp+0x61]
  40b2a2:	mov    bh,0x95
  40b2a4:	jecxz  0x40b27f
  40b2a6:	dec    ecx
  40b2a7:	and    eax,0xa4f7a772
  40b2ac:	in     al,dx
  40b2ad:	pop    esp
  40b2ae:	mov    al,ds:0x9c198f3b
  40b2b3:	call   0xe98c:0x9b92a4d2
  40b2ba:	xchg   edx,eax
  40b2bb:	or     dh,BYTE PTR ss:[esi]
  40b2be:	clc    
  40b2bf:	or     BYTE PTR [edx+0x164a00b5],0x23
  40b2c6:	ds leave 
  40b2c8:	cmp    eax,0xeb277474
  40b2cd:	xchg   BYTE PTR [esi-0x5d],bh
  40b2d0:	popa   
  40b2d1:	fidivr DWORD PTR [ebp-0x4f]
  40b2d4:	(bad)  
  40b2d5:	mov    WORD PTR [esi-0x6b8f17d2],cs
  40b2db:	xchg   ebx,eax
  40b2dc:	int    0x23
  40b2de:	fsave  ss:[esp+ebp*1-0x11]
  40b2e4:	mov    bl,0x4c
  40b2e6:	mov    ds:0xea1561b3,eax
  40b2eb:	sti    
  40b2ec:	mov    edx,ecx
  40b2ee:	xlat   BYTE PTR ds:[ebx]
  40b2ef:	or     DWORD PTR [esi-0x10],ebp
  40b2f2:	fxch   st(2)
  40b2f4:	fcom   DWORD PTR [edx+0x8]
  40b2f7:	mov    esp,0x3d79fba6
  40b2fc:	int    0x35
  40b2fe:	add    eax,0x3f2f486a
  40b303:	sbb    DWORD PTR [ebp-0x24],ebp
  40b306:	push   ds
  40b307:	fs out 0xfb,eax
  40b30a:	xlat   BYTE PTR ds:[ebx]
  40b30b:	or     al,dh
  40b30d:	sub    esp,ebx
  40b30f:	sub    al,0x79
  40b311:	and    ebp,ebx
  40b313:	lock and al,0xe5
  40b316:	pop    ds
  40b317:	xchg   edi,eax
  40b318:	cmp    DWORD PTR [ebp+0x3f],edi
  40b31b:	iret   
  40b31c:	clc    
  40b31d:	enter  0xccc2,0xec
  40b321:	sub    al,0xfc
  40b323:	sub    eax,0xbec6cf45
  40b328:	bound  ecx,QWORD PTR [eax+0x6b]
  40b32b:	mov    ss,ebx
  40b32d:	push   es
  40b32e:	push   ebp
  40b32f:	xchg   edi,eax
  40b330:	in     eax,0x5f
  40b332:	popf   
  40b333:	popf   
  40b334:	mov    ah,0x8e
  40b336:	or     BYTE PTR ds:0x4d6c6c6c,cl
  40b33c:	dec    esp
  40b33d:	cmp    al,0xfd
  40b33f:	bswap  esi
  40b341:	cli    
  40b342:	add    dh,BYTE PTR [ecx+0x470e8969]
  40b348:	jns    0x40b2f6
  40b34a:	ja     0x40b39e
  40b34c:	out    dx,al
  40b34d:	sbb    DWORD PTR [esi-0x741cc01b],0xffffff8a
  40b354:	or     esi,ebp
  40b356:	mov    al,cs:0xbb194d91
  40b35c:	inc    edi
  40b35d:	pop    ss
  40b35e:	adc    eax,DWORD PTR [ebx]
  40b360:	loope  0x40b345
  40b362:	test   BYTE PTR [edi],ch
  40b364:	jmp    0x40b30b
  40b366:	jmp    0x1d6:0xf4859f22
  40b36d:	jmp    0x40b33e
  40b36f:	out    0x7e,al
  40b371:	lods   al,BYTE PTR ds:[esi]
  40b372:	leave  
  40b373:	push   ebp
  40b374:	xor    eax,0x6d2f98c3
  40b379:	fst    QWORD PTR [eax-0x4304e7a0]
  40b37f:	out    dx,eax
  40b380:	inc    ebp
  40b381:	sub    dl,ah
  40b383:	jp     0x40b32a
  40b385:	aam    0x8
  40b387:	arpl   WORD PTR [edi],bx
  40b389:	xor    esi,DWORD PTR [edi]
  40b38b:	xor    BYTE PTR [ebx+edi*1],cl
  40b38e:	lods   eax,DWORD PTR ds:[esi]
  40b38f:	mov    eax,ds:0x65692c2
  40b394:	iret   
  40b395:	sahf   
  40b396:	adc    eax,esp
  40b398:	mov    ah,BYTE PTR [edi+0x45b809bd]
  40b39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b39f:	xor    esp,DWORD PTR [ecx+0x79]
  40b3a2:	or     dl,BYTE PTR [esi]
  40b3a4:	cli    
  40b3a5:	mov    WORD PTR [ecx-0x64],cs
  40b3a8:	(bad)  
  40b3a9:	push   ecx
  40b3aa:	lods   eax,DWORD PTR ds:[esi]
  40b3ab:	mov    DWORD PTR [ecx+esi*4],esp
  40b3ae:	cmp    al,0x1f
  40b3b0:	cmp    edi,DWORD PTR [ecx+0x48]
  40b3b3:	out    0xfe,eax
  40b3b5:	add    BYTE PTR [ebx+0x4],dl
  40b3b8:	imul   ecx,edi,0xe93a5254
  40b3be:	stos   BYTE PTR es:[edi],al
  40b3bf:	fnsave es:[eax+0x725107c]
  40b3c6:	imul   edx,DWORD PTR [eax+0x4],0x75
  40b3ca:	lock inc esp
  40b3cc:	push   esi
  40b3cd:	lods   eax,DWORD PTR ds:[esi]
  40b3ce:	repnz mov cl,0x59
  40b3d1:	push   ecx
  40b3d2:	mul    DWORD PTR [eax-0x74]
  40b3d5:	cmp    eax,0x2591bcb2
  40b3da:	sub    dh,BYTE PTR [ebp+0x67]
  40b3dd:	mov    eax,0xea3fd2e0
  40b3e2:	sahf   
  40b3e3:	leave  
  40b3e4:	mov    al,ds:0x1340f2d9
  40b3e9:	mov    ecx,0xd366fced
  40b3ee:	stc    
  40b3ef:	and    esp,DWORD PTR [edx+0x8]
  40b3f2:	sbb    DWORD PTR [esi-0x377d36f2],edi
  40b3f8:	pop    eax
  40b3f9:	imul   ecx,DWORD PTR [ecx-0xb],0xfa004039
  40b400:	inc    edx
  40b401:	loop   0x40b3c9
  40b403:	je     0x40b3c4
  40b405:	clc    
  40b406:	cmp    DWORD PTR [eiz*1-0x647dff58],edi
  40b40d:	mov    dh,0x2c
  40b40f:	adc    ebx,ebp
  40b411:	jg     0x40b3fc
  40b413:	add    BYTE PTR [eax-0x39],bl
  40b416:	retf   0xfeee
  40b419:	xor    BYTE PTR [ebx+0x4b],al
  40b41c:	jl     0x40b40f
  40b41e:	inc    esi
  40b41f:	imul   ebp,DWORD PTR [edi-0x15],0x137d6b8e
  40b426:	mov    cl,0x91
  40b428:	mov    al,0x54
  40b42a:	in     eax,dx
  40b42b:	test   DWORD PTR [edx+0x3a63ec52],esi
  40b431:	or     eax,0xd444836d
  40b436:	inc    eax
  40b438:	mov    ds:0x80d473c0,al
  40b43d:	je     0x40b3ff
  40b43f:	pusha  
  40b440:	mov    al,ds:0xca096c0e
  40b445:	xchg   ebx,eax
  40b446:	(bad)  
  40b447:	int    0xb
  40b449:	pop    es
  40b44a:	mov    cl,0xba
  40b44c:	and    BYTE PTR [ecx-0x6e],ch
  40b44f:	lods   eax,DWORD PTR ds:[esi]
  40b450:	fstp   QWORD PTR [ecx+ecx*8-0x65]
  40b454:	inc    esi
  40b455:	imul   bx,ax,0x228c
  40b45a:	xor    eax,0xd12bbed6
  40b45f:	pop    eax
  40b460:	clc    
  40b461:	jo     0x40b439
  40b463:	fwait
  40b464:	pushf  
  40b465:	jb     0x40b428
  40b467:	mov    esp,ebp
  40b469:	add    BYTE PTR [ecx-0x46],ah
  40b46c:	and    DWORD PTR [ebx],esi
  40b46e:	bound  esp,QWORD PTR [ebx+0x47c1f6aa]
  40b474:	ret    0xcf3a
  40b477:	rcr    DWORD PTR [ecx],1
  40b479:	js     0x40b4ba
  40b47b:	js     0x40b42a
  40b47d:	xor    ecx,esp
  40b47f:	xor    eax,DWORD PTR [edi-0x73]
  40b482:	xchg   edx,eax
  40b483:	inc    esp
  40b484:	test   al,0xec
  40b486:	test   dl,0xf6
  40b489:	push   0x520bdcb
  40b48e:	repz mov eax,ds:0x810d76eb
  40b494:	xchg   edx,eax
  40b495:	push   ebx
  40b496:	add    esp,DWORD PTR [ebp+0x66]
  40b499:	fild   QWORD PTR [eax-0x1594ed76]
  40b49f:	mov    eax,ds:0x561eb2c8
  40b4a4:	push   cs
  40b4a5:	push   ds
  40b4a6:	outs   dx,BYTE PTR ds:[esi]
  40b4a7:	push   cs
  40b4a8:	pusha  
  40b4a9:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40b4ab:	and    edi,DWORD PTR [edx-0x21]
  40b4ae:	jmp    0x40b477
  40b4b0:	int    0x56
  40b4b2:	pusha  
  40b4b3:	or     eax,0xebfb6db1
  40b4b8:	pop    edx
  40b4b9:	ins    BYTE PTR es:[edi],dx
  40b4ba:	pop    ss
  40b4bb:	in     al,0x7a
  40b4bd:	and    BYTE PTR [ebx+0x3b872b6d],ch
  40b4c3:	adc    ch,BYTE PTR ds:0x17d3abc7
  40b4c9:	lahf   
  40b4ca:	jle    0x40b4ba
  40b4cc:	pop    ebp
  40b4cd:	(bad)  
  40b4ce:	(bad)  [eax]
  40b4d0:	mov    edi,0xf3a75db3
  40b4d5:	retf   
  40b4d6:	lods   al,BYTE PTR ds:[esi]
  40b4d7:	(bad)  
  40b4d8:	lods   al,BYTE PTR ds:[esi]
  40b4d9:	cmp    DWORD PTR [ebx+ecx*2-0x32],0x71
  40b4de:	stos   BYTE PTR es:[edi],al
  40b4df:	sub    DWORD PTR ds:0x81b2f93c,edx
  40b4e5:	(bad)  
  40b4e6:	std    
  40b4e7:	pop    esi
  40b4e8:	fisub  WORD PTR [ecx+edi*1+0x6943c3f9]
  40b4ef:	test   al,0x72
  40b4f1:	inc    edx
  40b4f2:	inc    ecx
  40b4f3:	xchg   edx,eax
  40b4f4:	ficom  WORD PTR [ebx+0x1726a98e]
  40b4fa:	dec    eax
  40b4fb:	shr    DWORD PTR [ecx-0x2e6e56f1],cl
  40b501:	cmp    ebx,DWORD PTR [ebp+0x78ac1e0d]
  40b507:	rcl    DWORD PTR [ebx+0x452c2d7],1
  40b50d:	into   
  40b50e:	scas   eax,DWORD PTR es:[edi]
  40b50f:	sub    al,0xf9
  40b511:	aam    0x86
  40b513:	mov    BYTE PTR [esi+eax*4+0x59],ah
  40b517:	xor    bl,BYTE PTR [edi-0x77]
  40b51a:	arpl   bx,ax
  40b51c:	adc    dh,BYTE PTR [esi-0x2c1ca9be]
  40b522:	pop    esp
  40b523:	push   edx
  40b524:	cmp    BYTE PTR [ecx],al
  40b526:	std    
  40b527:	mov    WORD PTR [ebp+0x78bdd874],gs
  40b52d:	xchg   edi,eax
  40b52e:	lock push 0x759ed7f1
  40b534:	icebp  
  40b535:	mov    edi,0xa6d49553
  40b53a:	pop    esi
  40b53b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53c:	mov    al,0x15
  40b53e:	xor    BYTE PTR [edi+eiz*2-0x1fa0bf],dh
  40b545:	lahf   
  40b546:	mov    ch,0x19
  40b548:	and    esi,DWORD PTR [eax+0x1d4306c9]
  40b54e:	cmp    DWORD PTR [ebp-0x6fc42ddc],eax
  40b554:	lds    esp,FWORD PTR [edx-0x7a]
  40b557:	stc    
  40b558:	loopne 0x40b510
  40b55a:	test   bl,0x77
  40b55d:	xor    bl,BYTE PTR [edi-0x2f260ce9]
  40b563:	in     al,dx
  40b564:	and    ebx,ebp
  40b566:	cmc    
  40b567:	jge    0x40b57b
  40b569:	imul   edi,DWORD PTR [eax],0xe52bbba7
  40b56f:	ins    DWORD PTR es:[edi],dx
  40b570:	sbb    eax,0x46ed4262
  40b575:	sbb    al,0x9f
  40b577:	test   eax,0xc23b1713
  40b57c:	jl     0x40b580
  40b57e:	mov    esp,0xc5d2e0ea
  40b583:	jno    0x40b57f
  40b585:	mov    al,ds:0xa43b19e2
  40b58a:	sbb    ch,al
  40b58c:	xor    ecx,0xffffff97
  40b58f:	loope  0x40b560
  40b591:	sar    DWORD PTR [esi+ebx*2-0x12cc9120],1
  40b598:	inc    esi
  40b599:	jle    0x40b609
  40b59b:	push   eax
  40b59c:	aad    0x7a
  40b59e:	pop    es
  40b59f:	mov    edi,0x7a457dbe
  40b5a4:	sahf   
  40b5a5:	test   eax,0xea3e80b3
  40b5aa:	xor    DWORD PTR [edx+0x360d638b],ebp
  40b5b0:	sbb    ah,BYTE PTR [edi+0x48]
  40b5b3:	sti    
  40b5b4:	mov    edx,0x582b6c3e
  40b5b9:	inc    ebx
  40b5ba:	stos   DWORD PTR es:[edi],eax
  40b5bb:	inc    ecx
  40b5bc:	and    DWORD PTR [ecx+0x5e],ebp
  40b5bf:	jl     0x40b63b
  40b5c1:	stc    
  40b5c2:	aaa    
  40b5c3:	pusha  
  40b5c4:	xor    BYTE PTR [ecx],ch
  40b5c6:	mov    bl,0x5f
  40b5c8:	mov    edi,0xa74bcc56
  40b5cd:	seto   BYTE PTR [eax+eiz*2]
  40b5d1:	dec    esi
  40b5d2:	into   
  40b5d3:	sub    BYTE PTR [ecx],cl
  40b5d5:	inc    ecx
  40b5d6:	call   0x6e96:0xec51abb
  40b5dd:	leave  
  40b5de:	mov    DWORD PTR [eax+0x1504192],ebx
  40b5e4:	nop
  40b5e5:	and    edx,DWORD PTR [edi+esi*2]
  40b5e8:	xchg   esi,edx
  40b5ea:	mov    BYTE PTR [ebp-0x1c1ea4d7],cl
  40b5f0:	data16 ja 0x40b602
  40b5f3:	mov    al,ds:0xccbb33a2
  40b5f8:	cmp    DWORD PTR [edi+0x68f75342],edx
  40b5fe:	inc    eax
  40b5ff:	adc    bh,BYTE PTR [edx+eax*1]
  40b602:	nop
  40b603:	outs   dx,DWORD PTR ds:[esi]
  40b604:	popf   
  40b605:	mov    ecx,0x1e6a5e0b
  40b60a:	ret    
  40b60b:	xchg   ecx,eax
  40b60c:	out    dx,eax
  40b60d:	mov    WORD PTR [eax+0x42],cs
  40b610:	mov    al,ds:0xbfff1464
  40b615:	enter  0x5ee4,0x99
  40b619:	stos   DWORD PTR es:[edi],eax
  40b61a:	push   ds
  40b61b:	scas   eax,DWORD PTR es:[edi]
  40b61c:	cmp    esi,esi
  40b61e:	mov    esi,0xb7809f90
  40b623:	je     0x40b5aa
  40b625:	sub    ebx,ebx
  40b627:	pop    esp
  40b628:	test   al,0xe0
  40b62a:	jmp    0x50d5799f
  40b62f:	jmp    0xac8:0x45fa047d
  40b636:	add    DWORD PTR [eax+0x3d623980],edi
  40b63c:	nop
  40b63d:	or     BYTE PTR [esi+0x63],bl
  40b640:	jp     0x40b612
  40b642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b643:	sar    BYTE PTR [edi+0x336d9240],0xbc
  40b64a:	inc    esp
  40b64b:	jg     0x40b5e6
  40b64d:	adc    ch,dl
  40b64f:	mov    cs,WORD PTR [edx+0x36]
  40b652:	and    DWORD PTR gs:[ecx],eax
  40b655:	dec    ecx
  40b656:	jae    0x40b612
  40b658:	and    edi,DWORD PTR [ecx-0x4a93fbbe]
  40b65e:	ret    
  40b65f:	aam    0xf7
  40b661:	mov    ch,0x2f
  40b663:	push   cs
  40b664:	or     al,0xed
  40b666:	je     0x40b6b0
  40b668:	cmc    
  40b669:	sbb    DWORD PTR [ecx+ebx*1+0x4dc3d998],edi
  40b670:	push   0xbd553cc8
  40b675:	xor    BYTE PTR [edi-0x65],bh
  40b678:	sbb    ch,BYTE PTR [edi]
  40b67a:	xchg   ebp,eax
  40b67b:	push   es
  40b67c:	pusha  
  40b67d:	push   0x65
  40b67f:	and    al,0xdc
  40b681:	sub    DWORD PTR [ecx-0x55],0x59c70783
  40b688:	fimul  DWORD PTR [edi-0x4ee0b3f8]
  40b68e:	adc    bh,cl
  40b690:	in     al,dx
  40b691:	fnstenv [ecx+0x74d8233f]
  40b697:	mov    cl,0xd1
  40b699:	add    al,0x67
  40b69b:	cmp    BYTE PTR [edx+0x5f],bl
  40b69e:	pop    ebx
  40b69f:	daa    
  40b6a0:	pushf  
  40b6a1:	inc    eax
  40b6a2:	or     al,0x4c
  40b6a4:	push   cs
  40b6a5:	test   eax,0x61ee7a0c
  40b6aa:	inc    ebx
  40b6ab:	mov    dh,0x7e
  40b6ad:	sbb    ah,bl
  40b6af:	mov    eax,0xbfa0d45f
  40b6b4:	das    
  40b6b5:	out    0xa1,eax
  40b6b7:	or     al,0x26
  40b6b9:	addr16 push ebx
  40b6bb:	sar    BYTE PTR [ebx-0x4c826be3],1
  40b6c1:	sub    ch,BYTE PTR [ebx+0x0]
  40b6c4:	mov    dl,0xc0
  40b6c6:	rcr    ebx,cl
  40b6c8:	stos   BYTE PTR es:[edi],al
  40b6c9:	and    bh,BYTE PTR [ecx-0x3a]
  40b6cc:	push   es
  40b6cd:	sub    ecx,eax
  40b6cf:	sbb    BYTE PTR ds:0x13dc7d9,ah
  40b6d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d7:	dec    DWORD PTR [eax]
  40b6d9:	or     al,0xec
  40b6db:	xor    al,0x1b
  40b6dd:	aaa    
  40b6de:	(bad)  
  40b6df:	xchg   edx,eax
  40b6e0:	mov    ecx,0x91ec061b
  40b6e5:	std    
  40b6e6:	leave  
  40b6e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6e8:	ror    DWORD PTR [ebp+0x18a0aa72],cl
  40b6ee:	xchg   BYTE PTR [edi+0x51da6306],dh
  40b6f4:	push   esp
  40b6f5:	jns    0x40b68b
  40b6f7:	jl     0x40b72c
  40b6f9:	and    al,0x8f
  40b6fb:	mov    eax,0xdc9174f9
  40b700:	mov    ah,0x66
  40b702:	xchg   BYTE PTR [edi],bl
  40b704:	iret   
  40b705:	mov    ecx,0x4ac2b25f
  40b70a:	mov    ebx,DWORD PTR [ecx*1-0x324065d0]
  40b711:	(bad)  
  40b712:	adc    DWORD PTR [edx],edi
  40b714:	js     0x40b77e
  40b716:	mov    eax,ds:0x4cfafc69
  40b71b:	xor    al,0xff
  40b71d:	dec    eax
  40b71e:	sbb    ecx,DWORD PTR [bp+si-0x704]
  40b723:	xchg   esi,eax
  40b724:	in     eax,0xb4
  40b726:	fild   QWORD PTR ds:0xa14c34a6
  40b72c:	loop   0x40b76d
  40b72e:	lahf   
  40b72f:	add    BYTE PTR [eax-0xfda630e],dl
  40b735:	jle    0x40b75d
  40b737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b738:	push   ebx
  40b739:	mov    edx,0x832e6b30
  40b73e:	cmp    DWORD PTR [edx+edx*1-0x13],esi
  40b742:	outs   dx,BYTE PTR ds:[esi]
  40b743:	out    dx,eax
  40b744:	mov    eax,DWORD PTR [edx+0x37]
  40b747:	and    esp,DWORD PTR [esi]
  40b749:	mov    eax,ds:0xbb7f6ca9
  40b74e:	xor    dh,BYTE PTR ds:0x9c6172ae
  40b754:	add    eax,0x503ee43f
  40b759:	and    al,0xb3
  40b75b:	pop    ebp
  40b75c:	rcr    edi,0xbc
  40b75f:	out    0xbf,al
  40b761:	jnp    0x40b7cd
  40b763:	pop    esi
  40b764:	retf   
  40b765:	sbb    eax,0x3f8bab25
  40b76a:	test   cl,bh
  40b76c:	icebp  
  40b76d:	dec    esp
  40b76e:	fld    TBYTE PTR [ebx-0x7c8de954]
  40b774:	(bad)  
  40b775:	fcomp  DWORD PTR [esi]
  40b777:	(bad)  
  40b778:	cmp    dl,bh
  40b77a:	add    eax,0x296e024a
  40b77f:	mov    esi,0xa5c672c9
  40b785:	cli    
  40b786:	sbb    dl,al
  40b788:	push   0x3eff1491
  40b78d:	fiadd  DWORD PTR [eax-0x3fbcaf86]
  40b793:	or     al,0xf1
  40b795:	les    esp,FWORD PTR [edx]
  40b797:	idiv   edx
  40b799:	xchg   ebp,eax
  40b79a:	dec    ebx
  40b79b:	stc    
  40b79c:	or     bl,al
  40b79e:	inc    eax
  40b79f:	pop    edx
  40b7a0:	inc    ebx
  40b7a1:	jmp    0xb8be:0xe5d79ac5
  40b7a8:	add    esp,DWORD PTR [esi+0x4546a331]
  40b7ae:	xor    BYTE PTR [esi+edx*4-0x62],ch
  40b7b2:	scas   eax,DWORD PTR es:[edi]
  40b7b3:	sbb    BYTE PTR [eax-0x6653f5f5],ah
  40b7b9:	in     eax,dx
  40b7ba:	rol    edi,1
  40b7bc:	icebp  
  40b7bd:	(bad)  
  40b7be:	mov    ebx,0x6d98a267
  40b7c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c4:	ins    BYTE PTR es:[edi],dx
  40b7c5:	stc    
  40b7c6:	jecxz  0x40b7cf
  40b7c8:	sbb    eax,0xbd15698e
  40b7cd:	sub    DWORD PTR [esi+esi*4],eax
  40b7d0:	enter  0xeb40,0x91
  40b7d4:	jnp    0x40b7f7
  40b7d6:	stos   BYTE PTR es:[edi],al
  40b7d7:	pop    ecx
  40b7d8:	or     eax,0xa4c163ee
  40b7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7de:	cli    
  40b7df:	das    
  40b7e0:	sbb    eax,0x1446eb91
  40b7e5:	adc    eax,0xd5b6f00e
  40b7ea:	outs   dx,DWORD PTR ds:[esi]
  40b7eb:	out    0x2d,al
  40b7ed:	xchg   cl,bh
  40b7ef:	inc    eax
  40b7f0:	mov    ebp,0x40e608e7
  40b7f5:	mov    al,BYTE PTR [ebx-0x550cb750]
  40b7fb:	inc    esi
  40b7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7fd:	inc    ecx
  40b7fe:	ja     0x40b7b8
  40b800:	out    dx,eax
  40b801:	imul   ebx,DWORD PTR [eax-0x25],0x49
  40b805:	mov    ah,0x91
  40b807:	xor    BYTE PTR [ebp+0x6d],dl
  40b80a:	mov    ah,BYTE PTR [ecx-0x4737c7e7]
  40b810:	jmp    0x4f0f4d7a
  40b815:	push   edx
  40b816:	pop    ss
  40b817:	pop    ebp
  40b818:	inc    edx
  40b819:	push   ds
  40b81a:	mov    cl,0x56
  40b81c:	jo     0x40b894
  40b81e:	int3   
  40b81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b820:	xchg   ebp,eax
  40b821:	inc    edx
  40b822:	sbb    eax,0x2aa44f22
  40b827:	idiv   BYTE PTR [edx-0x55a7e356]
  40b82d:	cmc    
  40b82e:	xchg   DWORD PTR [ebx+0x52],edx
  40b831:	adc    esp,DWORD PTR [ecx]
  40b833:	jl     0x40b84f
  40b835:	ds add al,0xc9
  40b838:	ret    0x8411
  40b83b:	xchg   ebp,eax
  40b83c:	xor    DWORD PTR [esi+0x4489cea8],0xffffffde
  40b843:	mov    eax,0xa715a75d
  40b848:	adc    eax,0x156256d7
  40b84d:	jae    0x40b894
  40b84f:	gs fs test eax,0x5e85bbcc
  40b856:	es sahf 
  40b858:	pop    esi
  40b859:	pusha  
  40b85a:	scas   eax,DWORD PTR es:[edi]
  40b85b:	and    al,0x17
  40b85d:	je     0x40b872
  40b85f:	and    edx,DWORD PTR [esi+0x5c]
  40b862:	xor    BYTE PTR [eax-0x3],cl
  40b865:	dec    ecx
  40b866:	pop    edi
  40b867:	push   esp
  40b868:	loope  0x40b814
  40b86a:	ret    
  40b86b:	div    DWORD PTR [ebx+0x45cdce9b]
  40b871:	mov    ebp,0xc1f8f3d5
  40b876:	out    dx,al
  40b877:	int    0xca
  40b879:	mov    bh,0x31
  40b87b:	adc    ebp,DWORD PTR [ecx]
  40b87d:	ret    0x68a6
  40b880:	adc    BYTE PTR [edi+0x3ecd8371],cl
  40b886:	sti    
  40b887:	push   cs
  40b888:	mov    cl,0x78
  40b88a:	push   0x9e07817d
  40b88f:	shr    BYTE PTR [edx],0x4f
  40b892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b893:	popa   
  40b894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b895:	lahf   
  40b896:	mov    ebp,DWORD PTR [ecx-0x6f]
  40b899:	data16 in al,dx
  40b89b:	adc    DWORD PTR gs:[eax+esi*4],edi
  40b89f:	lea    ebx,[esi]
  40b8a1:	inc    esi
  40b8a2:	jbe    0x40b865
  40b8a4:	mov    esi,0x9c1c41fc
  40b8a9:	retf   
  40b8aa:	cli    
  40b8ab:	mov    ah,0x1c
  40b8ad:	mov    dh,0xe0
  40b8af:	push   ebp
  40b8b0:	cwde   
  40b8b1:	ds icebp 
  40b8b3:	out    0x8e,al
  40b8b5:	jnp    0x40b842
  40b8b7:	adc    ecx,ebp
  40b8b9:	lahf   
  40b8ba:	das    
  40b8bb:	lock fdiv st(0),st
  40b8be:	mov    edx,DWORD PTR [edi-0x51]
  40b8c1:	mov    esp,0x5f572f99
  40b8c6:	test   al,0xb9
  40b8c8:	adc    BYTE PTR [esi],dh
  40b8ca:	xor    bl,dh
  40b8cc:	push   esp
  40b8cd:	(bad)  
  40b8ce:	fld    DWORD PTR [eax+ecx*8]
  40b8d1:	(bad)  
  40b8d2:	inc    eax
  40b8d3:	pop    edx
  40b8d4:	lods   eax,DWORD PTR ds:[si]
  40b8d6:	dec    ebp
  40b8d7:	arpl   WORD PTR [esi],bx
  40b8d9:	sub    ecx,DWORD PTR [ecx+0x6b820c91]
  40b8df:	cmp    BYTE PTR [edx],dh
  40b8e1:	clc    
  40b8e2:	xchg   BYTE PTR [edi-0x27fadfea],bl
  40b8e8:	sbb    al,0xc4
  40b8ea:	xchg   ebp,eax
  40b8eb:	imul   esp,DWORD PTR [esi-0x5e],0xffffffed
  40b8ef:	iret   
  40b8f0:	in     al,dx
  40b8f1:	dec    ebp
  40b8f2:	pushf  
  40b8f3:	pop    edi
  40b8f4:	jle    0x40b967
  40b8f6:	ret    0x5c11
  40b8f9:	xchg   edi,eax
  40b8fa:	jo     0x40b907
  40b8fc:	hlt    
  40b8fd:	fucomip st,st(6)
  40b8ff:	cmp    cl,0xcb
  40b902:	inc    ebx
  40b903:	lock mov ebx,0x31bcbaeb
  40b909:	lahf   
  40b90a:	sbb    DWORD PTR [edx+0x10bdd8ec],0x4
  40b911:	int    0x7b
  40b913:	nop    DWORD PTR [ebx*2-0x887bf65]
  40b91b:	add    edx,DWORD PTR [esp+ebx*8-0x47]
  40b91f:	loop   0x40b98f
  40b921:	dec    esi
  40b922:	pop    ecx
  40b923:	sub    eax,0x7551b7db
  40b928:	pop    es
  40b929:	xchg   ebx,eax
  40b92a:	pop    ecx
  40b92b:	cmp    BYTE PTR [eax-0x64],dl
  40b92e:	mov    ah,0xdf
  40b930:	add    cl,ah
  40b932:	lods   al,BYTE PTR ds:[esi]
  40b933:	add    eax,0x33762e15
  40b938:	aad    0xa
  40b93a:	or     ch,bh
  40b93c:	sbb    DWORD PTR [ebp+0x70c625bb],0xa8690ed1
  40b946:	test   BYTE PTR ds:0xa4b7bbba,ah
  40b94c:	fmul   st,st(6)
  40b94e:	add    dh,BYTE PTR [eax]
  40b950:	mov    ecx,0x404902ad
  40b955:	push   ds
  40b956:	add    eax,0x1d369473
  40b95b:	push   edi
  40b95c:	or     DWORD PTR [ebx+0x33e9779c],eax
  40b962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b963:	jo     0x40b9a9
  40b965:	arpl   dx,si
  40b967:	cmp    esp,DWORD PTR [ebx-0x10]
  40b96a:	std    
  40b96b:	and    BYTE PTR [edi-0x29],ah
  40b96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b96f:	mov    esi,cs
  40b971:	jmp    0xbe6c3e60
  40b976:	and    al,0x36
  40b978:	mov    ds:0x87f3563,eax
  40b97d:	or     al,BYTE PTR [edx-0x1910d6e9]
  40b983:	push   es
  40b984:	jmp    0xd9b3d77d
  40b989:	dec    edx
  40b98a:	mov    ds:0xf72e5172,eax
  40b98f:	aad    0xba
  40b991:	jb     0x40b97b
  40b993:	test   eax,0x8a90f579
  40b998:	push   esp
  40b999:	cmp    al,BYTE PTR [edx+0x1ff86625]
  40b99f:	push   esp
  40b9a0:	call   0x359:0x559881e9
  40b9a7:	mov    esp,0x775fd71e
  40b9ac:	int    0x75
  40b9ae:	push   eax
  40b9af:	or     ah,ah
  40b9b1:	or     al,BYTE PTR ds:0xa75381ac
  40b9b7:	or     edx,DWORD PTR [esp+ebx*8]
  40b9ba:	sbb    BYTE PTR ds:0xdd27731a,bl
  40b9c0:	div    al
  40b9c2:	pop    eax
  40b9c3:	sub    esi,DWORD PTR [edx-0x10]
  40b9c6:	sbb    DWORD PTR [edx+0x4c13bfbe],esp
  40b9cc:	inc    esi
  40b9cd:	sar    esp,0xcd
  40b9d0:	mov    ebp,0x5782eaa4
  40b9d5:	call   0xb83a50cc
  40b9da:	push   esp
  40b9db:	xchg   edx,eax
  40b9dc:	ror    BYTE PTR [ebx-0x7b7bb26a],0xc4
  40b9e3:	push   0xa2fe790d
  40b9e8:	out    0x58,eax
  40b9ea:	jecxz  0x40b9a2
  40b9ec:	fcom   DWORD PTR [edx-0x426231ad]
  40b9f2:	jle    0x40ba1b
  40b9f4:	out    dx,eax
  40b9f5:	call   ecx
  40b9f7:	xor    ah,BYTE PTR [ebp+0x79]
  40b9fa:	int3   
  40b9fb:	and    ebp,DWORD PTR [edx-0x2]
  40b9fe:	mov    ah,0x8b
  40ba00:	dec    esi
  40ba01:	call   0xefc1:0xd0a9af05
  40ba08:	pop    eax
  40ba09:	sub    al,0x49
  40ba0b:	inc    ecx
  40ba0c:	jb     0x40ba0f
  40ba0e:	or     BYTE PTR [ebp+0x6e6ea95],bl
  40ba14:	lahf   
  40ba15:	sub    ebx,DWORD PTR [ecx+0x7a]
  40ba18:	jo     0x40ba82
  40ba1a:	push   ebx
  40ba1b:	jmp    0x5140:0xaca3faa
  40ba22:	push   0x2
  40ba24:	ja     0x10003f16
  40ba2a:	repnz loop 0x40baa1
  40ba2d:	mov    ecx,0x113a70e1
  40ba32:	cmp    al,0x86
  40ba34:	inc    ebx
  40ba35:	or     edx,DWORD PTR [ecx-0x106ad26b]
  40ba3b:	cmc    
  40ba3c:	jno    0x40ba74
  40ba3e:	repz inc ebx
  40ba40:	push   ss
  40ba41:	ds clc 
  40ba43:	and    eax,0xd2aed3ab
  40ba48:	sub    DWORD PTR [esi+ecx*4],0xffffffa2
  40ba4c:	loopne 0x40b9ff
  40ba4e:	inc    edi
  40ba4f:	mov    ebx,0x1d89931b
  40ba54:	xchg   edx,eax
  40ba55:	push   ds
  40ba56:	xchg   cx,ax
  40ba58:	pop    esp
  40ba59:	stos   BYTE PTR es:[edi],al
  40ba5a:	add    ch,BYTE PTR ds:0x864b89b4
  40ba60:	ins    BYTE PTR es:[edi],dx
  40ba61:	pop    edx
  40ba62:	cs icebp 
  40ba64:	or     DWORD PTR [edx-0x278d89bd],ebp
  40ba6a:	stos   BYTE PTR es:[edi],al
  40ba6b:	out    dx,al
  40ba6c:	jne    0x40ba5e
  40ba6e:	fdiv   QWORD PTR ds:0x70eda138
  40ba74:	jb     0x40bace
  40ba76:	mov    eax,0x51d152a5
  40ba7b:	cld    
  40ba7c:	(bad)  
  40ba7d:	sbb    bl,BYTE PTR [edx+esi*4-0x4702c790]
  40ba84:	mov    esp,0x7af89df4
  40ba89:	in     al,dx
  40ba8a:	xchg   BYTE PTR [eax+0x61],dh
  40ba8d:	pop    ss
  40ba8e:	or     dl,al
  40ba90:	xchg   BYTE PTR [ecx],ah
  40ba92:	scas   eax,DWORD PTR es:[edi]
  40ba93:	fld    TBYTE PTR [ebp+0x5e]
  40ba96:	ins    BYTE PTR es:[edi],dx
  40ba97:	mov    bh,0x71
  40ba99:	stos   DWORD PTR es:[edi],eax
  40ba9a:	xor    edi,DWORD PTR [edi+0x63e7ee05]
  40baa0:	in     al,0xf0
  40baa2:	and    eax,DWORD PTR [eiz*2+0x57a556eb]
  40baa9:	test   eax,0x39527466
  40baae:	jnp    0x40ba6e
  40bab0:	sub    eax,0xca744a08
  40bab5:	out    0x76,eax
  40bab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bab8:	mov    ebx,0x4f2dc965
  40babd:	mov    cl,0x47
  40babf:	outs   dx,DWORD PTR ds:[esi]
  40bac0:	scas   eax,DWORD PTR es:[edi]
  40bac1:	rcl    ecx,0xe2
  40bac4:	stos   BYTE PTR es:[edi],al
  40bac5:	push   ebx
  40bac6:	pmulhw mm6,QWORD PTR [eax]
  40bac9:	sti    
  40baca:	inc    ebx
  40bacb:	addr16 xchg edi,eax
  40bacd:	stc    
  40bace:	cld    
  40bacf:	push   0x2c
  40bad1:	shl    DWORD PTR [ecx],1
  40bad3:	pop    ebx
  40bad4:	mov    dh,0xb0
  40bad6:	push   edi
  40bad7:	aad    0x94
  40bad9:	scas   al,BYTE PTR es:[edi]
  40bada:	add    ebx,DWORD PTR [esi-0x2abe0ab3]
  40bae0:	mov    eax,0xedfba671
  40bae5:	shl    ebp,cl
  40bae7:	sbb    eax,0x621994cd
  40baec:	mov    dl,0xac
  40baee:	ja     0x40bab4
  40baf0:	xchg   esp,eax
  40baf1:	ins    DWORD PTR es:[edi],dx
  40baf2:	cmp    DWORD PTR [edx-0x4a],0xbec131ee
  40baf9:	ret    
  40bafa:	inc    ebx
  40bafb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bafc:	pop    esp
  40bafd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bafe:	mov    al,ds:0xe1b56930
  40bb03:	or     bh,al
  40bb05:	mov    ebp,0xe446ae03
  40bb0a:	les    ebp,FWORD PTR [eax-0x2f]
  40bb0d:	jmp    0xd926:0x7e584624
  40bb14:	mov    esp,0x9fcb243c
  40bb19:	enter  0x79ae,0x32
  40bb1d:	mov    ecx,0xf6fb6e43
  40bb22:	mov    ebp,fs
  40bb24:	ins    DWORD PTR es:[edi],dx
  40bb25:	mov    bl,0x1
  40bb27:	adc    al,0xda
  40bb29:	test   al,0xe9
  40bb2b:	mov    esp,0x5f3ba601
  40bb30:	out    0xf,al
  40bb32:	push   ss
  40bb33:	jmp    0x1e562940
  40bb38:	sbb    al,0x1a
  40bb3a:	imul   al
  40bb3c:	les    edi,FWORD PTR [eax]
  40bb3e:	(bad)  
  40bb40:	out    dx,eax
  40bb41:	jns    0x40bbb4
  40bb43:	mul    DWORD PTR [ebx-0x7472e422]
  40bb49:	pop    ss
  40bb4a:	and    DWORD PTR ss:[edx],ebp
  40bb4d:	sbb    edx,eax
  40bb4f:	out    0x4d,al
  40bb51:	or     eax,0x6dc475ee
  40bb56:	inc    esp
  40bb57:	cdq    
  40bb58:	pop    ebp
  40bb59:	aad    0x40
  40bb5b:	in     eax,0xc8
  40bb5d:	call   0x50e37987
  40bb62:	rol    DWORD PTR [ecx],1
  40bb64:	loope  0x40bb38
  40bb66:	jns    0x40bba9
  40bb68:	fsubp  st(1),st
  40bb6a:	(bad)  
  40bb6c:	sbb    esp,DWORD PTR [edi+0x6]
  40bb6f:	retf   0xbe17
  40bb72:	ja     0x40bbc8
  40bb74:	dec    edi
  40bb75:	mov    bh,BYTE PTR ds:0x899d8595
  40bb7b:	retf   
  40bb7c:	pusha  
  40bb7d:	or     DWORD PTR [edx+0x3ba5d3f3],edx
  40bb83:	les    edi,FWORD PTR [edx]
  40bb85:	jmp    0x2fdfce0c
  40bb8a:	hlt    
  40bb8b:	int    0xec
  40bb8d:	neg    edx
  40bb8f:	mov    ch,0x6b
  40bb91:	push   ebp
  40bb92:	and    ebx,DWORD PTR [ecx+eiz*1]
  40bb95:	ja     0x40bb47
  40bb97:	int3   
  40bb98:	repnz pop ebx
  40bb9a:	test   eax,0xc6237f89
  40bb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bba0:	mov    bh,BYTE PTR [ecx]
  40bba2:	pop    esi
  40bba3:	fucomip st,st(0)
  40bba5:	outs   dx,DWORD PTR ds:[esi]
  40bba6:	iret   
  40bba7:	cmp    BYTE PTR [edx+0x1f795c71],ah
  40bbad:	push   edi
  40bbae:	call   0x8985d1fa
  40bbb3:	stos   BYTE PTR es:[edi],al
  40bbb4:	dec    eax
  40bbb5:	mov    ebx,0x4bfd960c
  40bbba:	dec    edi
  40bbbb:	cs or  ecx,edx
  40bbbe:	(bad)  
  40bbbf:	fst    DWORD PTR [edx-0x6149af7]
  40bbc5:	xor    eax,0x5499e32a
  40bbca:	inc    eax
  40bbcb:	pop    edi
  40bbcc:	add    ebx,ecx
  40bbce:	jge    0x40bc2c
  40bbd0:	jb     0x40bb76
  40bbd2:	les    esi,FWORD PTR [eax+0x3f6d4113]
  40bbd8:	add    BYTE PTR [edx+0x9b0ed9],al
  40bbde:	cmp    cl,dl
  40bbe0:	xor    al,0xee
  40bbe2:	inc    edx
  40bbe3:	dec    eax
  40bbe4:	add    bh,BYTE PTR [edx+ecx*2]
  40bbe7:	rol    DWORD PTR [edi],cl
  40bbe9:	pop    ebp
  40bbea:	ja     0x40bbda
  40bbec:	(bad)  
  40bbed:	jl     0x40bc00
  40bbef:	lods   al,BYTE PTR ds:[esi]
  40bbf0:	(bad)  
  40bbf1:	fistp  DWORD PTR [edi+ecx*4+0x76]
  40bbf5:	xchg   ebx,eax
  40bbf6:	pusha  
  40bbf7:	jae    0x40bc76
  40bbf9:	push   ebp
  40bbfa:	jl     0x40bbf3
  40bbfc:	ss inc ebp
  40bbfe:	jmp    0x18c0:0x4939407c
  40bc05:	sbb    DWORD PTR [eax+0x26eb6d92],ebp
  40bc0b:	jae    0x40bbbe
  40bc0d:	or     ebp,eax
  40bc0f:	pop    esi
  40bc10:	mov    gs,WORD PTR [esp+ebx*8+0x2215ecbf]
  40bc17:	dec    ebx
  40bc18:	mov    dh,0xd1
  40bc1a:	pop    esi
  40bc1b:	xchg   esi,eax
  40bc1c:	das    
  40bc1d:	xor    cl,ah
  40bc1f:	and    BYTE PTR [edx-0x74422749],al
  40bc25:	nop
  40bc26:	in     al,0x6d
  40bc28:	adc    DWORD PTR [ecx],eax
  40bc2a:	push   ss
  40bc2b:	pop    ss
  40bc2c:	dec    esi
  40bc2d:	lods   al,BYTE PTR ds:[esi]
  40bc2e:	cdq    
  40bc2f:	jl     0x40bc7a
  40bc31:	pop    eax
  40bc32:	aad    0x1
  40bc34:	mov    ah,0x9d
  40bc36:	xchg   edx,eax
  40bc37:	sbb    esi,esp
  40bc39:	xchg   edi,eax
  40bc3a:	aam    0xc9
  40bc3c:	in     al,0x5
  40bc3e:	xchg   ecx,eax
  40bc3f:	out    dx,eax
  40bc40:	mov    al,ds:0x938b6660
  40bc45:	loope  0x40bc5b
  40bc47:	pop    ebp
  40bc48:	sti    
  40bc49:	shl    dl,0x13
  40bc4c:	xchg   ebp,eax
  40bc4d:	xor    eax,0x3a7e09c9
  40bc52:	mov    esp,0x8655f368
  40bc57:	jo     0x40bc4a
  40bc59:	mov    esi,0x8de93381
  40bc5e:	sub    dl,BYTE PTR [esp+eax*4]
  40bc61:	mov    esp,0xba854658
  40bc66:	mov    WORD PTR ds:0xa793409,fs
  40bc6c:	push   ebp
  40bc6d:	mov    al,BYTE PTR [ebp+0x17]
  40bc70:	inc    eax
  40bc71:	jbe    0x40bc17
  40bc73:	cmp    ebp,DWORD PTR [edx-0x16]
  40bc76:	fistp  DWORD PTR [edx+ebp*4-0x4ffd4ca9]
  40bc7d:	adc    al,0x7a
  40bc7f:	xor    al,0x9d
  40bc81:	pop    esp
  40bc82:	js     0x40bc4f
  40bc84:	mov    ds:0xd49d05b4,al
  40bc89:	jns    0x40bca5
  40bc8b:	sbb    DWORD PTR [ebx],ebx
  40bc8d:	dec    ebp
  40bc8e:	mov    ebx,0x8f629b06
  40bc93:	into   
  40bc94:	retf   
  40bc95:	std    
  40bc96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc97:	in     eax,0xf6
  40bc99:	sar    DWORD PTR [edx+0x2],1
  40bc9c:	jno    0x40bcdb
  40bc9e:	in     eax,dx
  40bc9f:	push   0xffffff8d
  40bca1:	push   ecx
  40bca2:	retf   0x7d5d
  40bca5:	mov    al,ds:0x59a6c14b
  40bcaa:	or     esi,DWORD PTR [eax+edi*8-0x26]
  40bcae:	push   eax
  40bcaf:	mov    ch,0x1d
  40bcb1:	jae    0x40bc7b
  40bcb3:	sub    al,0x4c
  40bcb5:	int3   
  40bcb6:	xchg   edx,eax
  40bcb7:	push   0xffffffbf
  40bcb9:	push   ds
  40bcba:	add    al,0xe7
  40bcbc:	retf   0xaa24
  40bcbf:	das    
  40bcc0:	and    al,0x5a
  40bcc2:	add    cl,BYTE PTR [edx+0x31]
  40bcc5:	repnz out 0x74,eax
  40bcc8:	repnz arpl bx,si
  40bccb:	sti    
  40bccc:	xchg   edx,eax
  40bccd:	dec    esp
  40bcce:	sub    BYTE PTR [ecx+0x43],dl
  40bcd1:	repnz pop es
  40bcd3:	rcr    BYTE PTR [ecx+0x6f7e6e1b],1
  40bcd9:	ins    DWORD PTR es:[edi],dx
  40bcda:	adc    dh,BYTE PTR [esi]
  40bcdc:	fild   QWORD PTR [esi+0x22]
  40bcdf:	lds    esi,FWORD PTR [edi]
  40bce1:	sub    edi,DWORD PTR [ebx+0x12]
  40bce4:	(bad)  
  40bce5:	sub    eax,0xe1132133
  40bcea:	cmp    al,BYTE PTR [esi]
  40bcec:	popa   
  40bced:	xchg   edx,eax
  40bcee:	mov    dl,0x86
  40bcf0:	cmp    al,0xba
  40bcf2:	push   0xffffffa7
  40bcf4:	mov    BYTE PTR [edx+ebx*2+0x2a],cl
  40bcf8:	inc    eax
  40bcf9:	xchg   ah,al
  40bcfb:	fstp   QWORD PTR [edi+0x4b]
  40bcfe:	jge    0x40bd2d
  40bd00:	(bad)  
  40bd01:	rcr    BYTE PTR [ebp+0x71fc3467],cl
  40bd07:	addr16 push ebp
  40bd09:	or     eax,0xd4024bff
  40bd0e:	or     bl,BYTE PTR [ebp+0x3c004ce4]
  40bd14:	xor    ah,BYTE PTR [edi-0x2e38f619]
  40bd1a:	xor    BYTE PTR [eax+eax*2],bl
  40bd1d:	mov    ecx,0xad97d6bb
  40bd22:	into   
  40bd23:	cmp    eax,0x4fa8d1f1
  40bd28:	mov    edx,DWORD PTR [ecx+0x61a4cd50]
  40bd2e:	mov    ch,0x66
  40bd30:	mov    esp,0x31bb7589
  40bd35:	(bad)  
  40bd36:	jbe    0x40bd9f
  40bd38:	ss inc esi
  40bd3a:	test   BYTE PTR [edx],ah
  40bd3c:	mov    eax,ds:0xf3ea2ded
  40bd41:	mov    ah,0x76
  40bd43:	test   DWORD PTR [ebx+0x48],ebp
  40bd46:	mov    cl,BYTE PTR [ebp+0x66]
  40bd49:	out    dx,eax
  40bd4a:	test   al,0x1b
  40bd4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd4d:	ins    BYTE PTR es:[edi],dx
  40bd4e:	adc    al,0x28
  40bd50:	inc    eax
  40bd51:	pop    ebp
  40bd52:	dec    ebx
  40bd53:	fdivr  st,st(0)
  40bd55:	retf   0x1adf
  40bd58:	mov    esi,0xb192c534
  40bd5d:	push   cs
  40bd5e:	mov    edx,0x8bd99dfa
  40bd63:	lea    ebx,[edx]
  40bd65:	mov    dh,0x6d
  40bd67:	call   0x10542746
  40bd6c:	add    edx,eax
  40bd6e:	aad    0x3c
  40bd70:	jno    0x40bd40
  40bd72:	(bad)  
  40bd73:	jmp    0xf5b7:0x71a7406
  40bd7a:	mov    ecx,0xa76fb8cc
  40bd80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd81:	jl     0x40bd8c
  40bd83:	fsubr  st,st(3)
  40bd85:	xor    DWORD PTR [ebx-0x1e],edx
  40bd88:	and    edx,esp
  40bd8a:	mov    ds:0x76238f4b,eax
  40bd8f:	jnp    0x40bd9d
  40bd91:	fbld   TBYTE PTR [ebp-0x71]
  40bd94:	popa   
  40bd95:	adc    BYTE PTR [ecx-0x21],bh
  40bd98:	les    esp,FWORD PTR [ebx+0x4a]
  40bd9b:	mov    bh,0xa6
  40bd9d:	shr    BYTE PTR [ecx-0x2e],cl
  40bda0:	xlat   BYTE PTR ds:[ebx]
  40bda1:	mov    al,ds:0x358717a2
  40bda6:	jmp    0xe26b:0xa0a5e3e8
  40bdad:	push   eax
  40bdae:	pop    ebp
  40bdaf:	add    eax,0xe91f2a25
  40bdb4:	inc    eax
  40bdb5:	xchg   bl,dl
  40bdb7:	lock call 0x73d30db3
  40bdbd:	mov    ebx,esp
  40bdbf:	fidivr DWORD PTR [ebp+0x1290cf5]
  40bdc5:	push   cs
  40bdc6:	int    0x4a
  40bdc8:	nop
  40bdc9:	pop    esp
  40bdca:	xchg   BYTE PTR [eax+0x6],al
  40bdcd:	jb     0x40bddf
  40bdcf:	fmul   DWORD PTR [ebp-0x22]
  40bdd2:	pop    ecx
  40bdd3:	je     0x40bd83
  40bdd5:	or     eax,0x4f64d389
  40bdda:	pop    esi
  40bddb:	out    0x8,eax
  40bddd:	mov    ds:0xd09f6ce9,eax
  40bde2:	sbb    WORD PTR [edx+0x75b35ea1],0x5ac5
  40bdeb:	push   esi
  40bdec:	btr    DWORD PTR [edx-0x27b60e45],0xfb
  40bdf4:	dec    ebp
  40bdf5:	data16 fld QWORD PTR [edi+0x7e65750]
  40bdfc:	dec    edi
  40bdfd:	aaa    
  40bdfe:	or     bl,BYTE PTR [ecx+0x60]
  40be01:	aaa    
  40be02:	ins    DWORD PTR es:[edi],dx
  40be03:	mov    ecx,0x40d72505
  40be08:	sub    ch,BYTE PTR [eax-0x3a44566e]
  40be0e:	add    ah,BYTE PTR [eax]
  40be10:	in     al,0xf4
  40be12:	adc    eax,0x79380ac1
  40be17:	jmp    0x1762:0x3665300
  40be1e:	mov    dh,0xf5
  40be20:	and    esi,DWORD PTR ds:0xf1a7ee47
  40be26:	xchg   DWORD PTR [ebp+ecx*8+0x326a6ca],ecx
  40be2d:	adc    eax,0xc632b6c7
  40be32:	and    eax,0xd389e26e
  40be37:	mov    esi,0x309a7657
  40be3c:	jnp    0x40bdf5
  40be3e:	push   es
  40be3f:	ins    BYTE PTR es:[edi],dx
  40be40:	jnp    0x40bdea
  40be42:	push   ebx
  40be43:	aam    0x99
  40be45:	test   dh,ch
  40be47:	movups XMMWORD PTR [ebx],xmm6
  40be4a:	and    edi,DWORD PTR [edi+0x69cec850]
  40be50:	mov    ah,0xb3
  40be52:	push   ebp
  40be53:	pop    ds
  40be54:	stos   BYTE PTR es:[edi],al
  40be55:	(bad)
  40be58:	dec    ebp
  40be59:	pushf  
  40be5a:	(bad)  
  40be5b:	(bad)
  40be5e:	add    BYTE PTR [ebp+0x5ae2280a],dl
  40be64:	out    dx,al
  40be65:	xchg   esp,eax
  40be66:	mov    ah,0x6e
  40be68:	adc    esp,esi
  40be6a:	or     DWORD PTR [ecx+0x4eb2b28e],ebp
  40be70:	push   ecx
  40be71:	add    cl,0x1f
  40be74:	mov    ah,0x1
  40be76:	cmp    BYTE PTR [esp+ebp*2-0x5d],bl
  40be7a:	xchg   edx,eax
  40be7b:	btc    DWORD PTR [edx],esi
  40be7e:	mov    edx,0x8f59edbf
  40be83:	cld    
  40be84:	push   esi
  40be85:	sbb    eax,0xe16ee4b
  40be8a:	dec    edx
  40be8b:	xor    al,0x66
  40be8d:	call   0x9424c9de
  40be92:	fs and al,bl
  40be95:	cdq    
  40be96:	xchg   esi,eax
  40be97:	jae    0x40be86
  40be99:	data16 mov ds:0x978d26fa,al
  40be9f:	mov    edi,0xa2872dc2
  40bea4:	retf   0x405c
  40bea7:	inc    esi
  40bea8:	gs mov edi,0xc5d1c8be
  40beae:	add    al,0xc1
  40beb0:	nop
  40beb1:	sar    DWORD PTR [ebx],cl
  40beb3:	push   ebp
  40beb4:	icebp  
  40beb5:	(bad)  [edi]
  40beb7:	(bad)  
  40beb8:	fwait
  40beb9:	je     0x40be43
  40bebb:	cmp    al,BYTE PTR [ebx]
  40bebd:	rol    DWORD PTR [ebx-0x3adedfa9],1
  40bec3:	fild   QWORD PTR [edi+0x68]
  40bec6:	fld    DWORD PTR [ecx]
  40bec8:	cmp    dh,bh
  40beca:	jno    0x40beb9
  40becc:	mov    ecx,0x6521920a
  40bed1:	dec    esp
  40bed2:	jns    0x40beee
  40bed4:	push   0xffffff8d
  40bed6:	dec    ebp
  40bed7:	cmp    DWORD PTR [edi],0x45
  40beda:	push   es
  40bedb:	mov    bh,0x80
  40bedd:	jle    0x40bef6
  40bedf:	xchg   esi,eax
  40bee0:	mov    esi,0x43b83b54
  40bee5:	fcom   QWORD PTR [eax+0x40]
  40bee8:	daa    
  40bee9:	iret   
  40beea:	mov    ah,0xc7
  40beec:	mov    ?,ebx
  40beee:	ds popa 
  40bef0:	jo     0x40bf6e
  40bef2:	mov    edx,0xf142e3a7
  40bef7:	imul   ebx,DWORD PTR [esp+ebx*8],0xde71ceae
  40befe:	scas   eax,DWORD PTR es:[edi]
  40beff:	lahf   
  40bf00:	icebp  
  40bf01:	les    ecx,FWORD PTR [edx]
  40bf03:	outs   dx,DWORD PTR ds:[esi]
  40bf04:	or     al,ah
  40bf06:	idiv   ecx
  40bf08:	mov    eax,0x6c7e2cfa
  40bf0d:	leave  
  40bf0e:	add    cl,BYTE PTR [edi]
  40bf10:	int3   
  40bf11:	lea    esp,[ebx+0x514c35f]
  40bf17:	or     dl,BYTE PTR [ebx+esi*4]
  40bf1a:	push   es
  40bf1b:	fld    QWORD PTR [ebx-0x51]
  40bf1e:	lods   eax,DWORD PTR ds:[esi]
  40bf20:	pop    es
  40bf21:	xchg   esp,eax
  40bf22:	(bad)  
  40bf23:	scas   eax,DWORD PTR es:[edi]
  40bf24:	aaa    
  40bf25:	addr16 je 0x40bf87
  40bf28:	data16 or BYTE PTR es:[edi+edx*2-0x32],dl
  40bf2e:	shl    DWORD PTR [ecx+0x50],1
  40bf31:	cmp    BYTE PTR [esi+0x43],bh
  40bf34:	mov    ecx,0xd4f07e01
  40bf39:	push   es
  40bf3a:	lds    esp,FWORD PTR [ebx+eax*1+0xd]
  40bf3e:	rcl    DWORD PTR [ebx-0x1b],1
  40bf41:	fistp  QWORD PTR [ebx-0x1385ee06]
  40bf47:	cmp    dh,bl
  40bf49:	dec    edx
  40bf4a:	fnstsw WORD PTR [eax-0xc]
  40bf4d:	pop    ecx
  40bf4e:	fcomip st,st(5)
  40bf50:	sub    eax,0xa4c54845
  40bf55:	dec    ecx
  40bf56:	lahf   
  40bf57:	(bad)  
  40bf58:	xor    dh,BYTE PTR [esi]
  40bf5a:	(bad)
  40bf5e:	sub    eax,0x352b9c0e
  40bf63:	daa    
  40bf64:	sub    dh,cl
  40bf66:	push   ss
  40bf67:	clc    
  40bf68:	jno    0x40bf72
  40bf6a:	push   eax
  40bf6b:	or     al,0xcf
  40bf6d:	fild   QWORD PTR [eax-0x7]
  40bf70:	retf   0x246c
  40bf73:	cmp    ecx,DWORD PTR [edi]
  40bf75:	and    bl,dl
  40bf77:	mov    eax,0x5b1b9074
  40bf7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf7d:	in     al,0x3a
  40bf7f:	push   ss
  40bf80:	loopne 0x40bf5c
  40bf82:	fwait
  40bf83:	jae    0x40bf15
  40bf85:	add    DWORD PTR [eax-0x222139c5],ecx
  40bf8b:	in     al,dx
  40bf8c:	xor    edi,edx
  40bf8e:	pop    ebp
  40bf8f:	mov    eax,DWORD PTR [edi-0x40]
  40bf92:	ret    
  40bf93:	sub    ah,BYTE PTR [edi+edx*8+0x71]
  40bf97:	xchg   ecx,eax
  40bf98:	push   esp
  40bf99:	bound  eax,QWORD PTR [ebx-0x2337f192]
  40bf9f:	xchg   esi,eax
  40bfa0:	xchg   ebp,eax
  40bfa1:	jno    0x40bf7d
  40bfa3:	shl    BYTE PTR [edx-0x6a],1
  40bfa6:	xchg   BYTE PTR [esi+0x2d384987],dl
  40bfac:	loop   0x40bf3c
  40bfae:	ins    BYTE PTR es:[edi],dx
  40bfaf:	inc    esi
  40bfb0:	mov    ds:0xa004c73d,al
  40bfb5:	or     ebx,ebp
  40bfb7:	push   0x13ea891
  40bfbc:	int    0xbe
  40bfbe:	pop    ds
  40bfbf:	test   ebx,ebx
  40bfc1:	mov    DWORD PTR [edi],esi
  40bfc3:	mov    esi,0xec6f474a
  40bfc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc9:	xor    al,0xe2
  40bfcb:	ret    0xca09
  40bfce:	sbb    BYTE PTR [ebp*8+0x5e606e79],bh
  40bfd5:	or     BYTE PTR [ebx+0x3a59a2fb],dh
  40bfdb:	sub    DWORD PTR [ebp+eiz*4-0x5ffa29ff],0xfffffffb
  40bfe3:	push   0x7b
  40bfe5:	xchg   edi,eax
  40bfe6:	sahf   
  40bfe7:	in     eax,0xb1
  40bfe9:	xchg   esi,eax
  40bfea:	push   eax
  40bfeb:	push   ebx
  40bfec:	hlt    
  40bfed:	pop    es
  40bfee:	repz scas eax,DWORD PTR es:[edi]
  40bff0:	cmp    eax,0xb0a96f9e
  40bff5:	adc    eax,0xd6ef920
  40bffa:	(bad)  [edx+eax*2-0x1af21e68]
  40c001:	and    eax,0xa3787a71
  40c006:	or     eax,0x18b50936
  40c00b:	add    dh,bh
  40c00d:	les    edi,FWORD PTR [ebx]
  40c00f:	popa   
  40c010:	inc    ecx
  40c011:	icebp  
  40c012:	xchg   BYTE PTR [ebp+0x56f557a9],al
  40c018:	fwait
  40c019:	inc    esi
  40c01a:	or     BYTE PTR [ebp-0x35],al
  40c01d:	fs jbe 0x40c07f
  40c020:	mov    edx,0x6c6eba09
  40c025:	cmc    
  40c026:	push   eax
  40c027:	mov    ebx,?
  40c029:	xor    eax,0xe75a05ff
  40c02e:	div    BYTE PTR [ebx]
  40c030:	jne    0x40c024
  40c032:	cli    
  40c033:	hlt    
  40c034:	adc    bl,ch
  40c036:	jecxz  0x40c011
  40c038:	sub    ecx,DWORD PTR [ebp+0xf61fcb3]
  40c03e:	std    
  40c03f:	out    dx,al
  40c040:	xchg   ecx,eax
  40c041:	xchg   edx,eax
  40c042:	jmp    0xa942:0x3188fb06
  40c049:	sbb    BYTE PTR [eax+0x6112abb0],dh
  40c04f:	test   esi,esi
  40c051:	mov    al,ds:0x51cb58d1
  40c056:	dec    ebx
  40c057:	xchg   edi,eax
  40c058:	ins    BYTE PTR es:[edi],dx
  40c059:	lock push ecx
  40c05b:	sti    
  40c05c:	jmp    0xaf8d:0x2b08f408
  40c063:	scas   eax,DWORD PTR es:[edi]
  40c064:	loop   0x40c051
  40c066:	jge    0x40c052
  40c068:	xor    DWORD PTR [edi+edi*8-0x77],0xffffffec
  40c06d:	xchg   DWORD PTR [edi],eax
  40c06f:	popf   
  40c070:	jo     0x40c07e
  40c072:	ins    BYTE PTR es:[edi],dx
  40c073:	push   ebp
  40c074:	fwait
  40c075:	cli    
  40c076:	xchg   edi,eax
  40c077:	icebp  
  40c078:	fs leave 
  40c07a:	jl     0x40c0a6
  40c07c:	xlat   BYTE PTR ds:[ebx]
  40c07d:	arpl   sp,sp
  40c07f:	sbb    bh,BYTE PTR [ebp+0xd1f81d5]
  40c085:	sbb    al,0xe0
  40c087:	idiv   DWORD PTR [ebx+0x44]
  40c08a:	mov    ?,WORD PTR [bp+si-0x4477]
  40c08f:	lock sbb al,0x0
  40c092:	out    dx,al
  40c093:	icebp  
  40c094:	test   DWORD PTR [edx-0x74],ebp
  40c097:	std    
  40c098:	int3   
  40c099:	jne    0x40c02e
  40c09b:	ss xor al,0x0
  40c09e:	mov    edx,edi
  40c0a0:	outs   dx,BYTE PTR ds:[esi]
  40c0a1:	icebp  
  40c0a2:	out    0xa7,al
  40c0a4:	(bad)  
  40c0a5:	sub    al,0x7f
  40c0a7:	jp     0x40c04a
  40c0a9:	xchg   esp,eax
  40c0aa:	scas   al,BYTE PTR es:[edi]
  40c0ab:	loopne 0x40c124
  40c0ad:	adc    ah,BYTE PTR [ebp-0x31d4a99f]
  40c0b3:	aad    0x32
  40c0b5:	stc    
  40c0b6:	sti    
  40c0b7:	clc    
  40c0b8:	mov    bh,0x29
  40c0ba:	(bad)  
  40c0bb:	rcl    BYTE PTR [ebp+0xb],cl
  40c0be:	popa   
  40c0bf:	js     0x40c049
  40c0c1:	clc    
  40c0c2:	pusha  
  40c0c3:	jle    0x40c09a
  40c0c5:	outs   dx,BYTE PTR ds:[esi]
  40c0c6:	addr16 aam 0x76
  40c0c9:	or     DWORD PTR [edx+0x12924357],ebx
  40c0cf:	in     eax,dx
  40c0d0:	test   eax,0xdab46910
  40c0d5:	push   ebp
  40c0d6:	popa   
  40c0d7:	cs popf 
  40c0d9:	pusha  
  40c0da:	stc    
  40c0db:	add    ebp,DWORD PTR [ebx]
  40c0dd:	jnp    0x40c07c
  40c0df:	jne    0x40c070
  40c0e1:	pop    ds
  40c0e2:	mov    eax,ds:0xefc69148
  40c0e7:	xchg   ecx,eax
  40c0e8:	arpl   WORD PTR [esi],cx
  40c0ea:	xchg   ebp,eax
  40c0eb:	mov    ch,bh
  40c0ed:	push   cs
  40c0ee:	mov    ah,0x95
  40c0f0:	jns    0x40c077
  40c0f2:	cs or  eax,0xc4894372
  40c0f8:	xor    eax,DWORD PTR [eax-0x2]
  40c0fb:	xchg   edx,eax
  40c0fc:	add    ecx,DWORD PTR [edi-0x19]
  40c0ff:	scas   al,BYTE PTR es:[edi]
  40c100:	pop    ecx
  40c101:	push   ebp
  40c102:	(bad)  
  40c103:	dec    ecx
  40c104:	or     dl,dl
  40c106:	mov    ds:0x2c8497c9,eax
  40c10b:	lods   eax,DWORD PTR ds:[esi]
  40c10c:	int3   
  40c10d:	jae    0x40c0cd
  40c10f:	mov    dl,0x21
  40c111:	mov    ebp,0xe19b6252
  40c116:	cmc    
  40c117:	mov    ebx,0x602bb9d3
  40c11c:	lods   al,BYTE PTR ds:[esi]
  40c11d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c11e:	cmp    ch,BYTE PTR [ecx+0x82e5eb0]
  40c124:	mov    ebx,0xd2ecdba7
  40c129:	ds das 
  40c12b:	lea    edi,[edi+0x6e7b31c3]
  40c131:	push   esp
  40c132:	xchg   ecx,eax
  40c133:	ins    BYTE PTR es:[edi],dx
  40c134:	add    BYTE PTR [ebx],al
  40c136:	cwde   
  40c137:	out    0x35,al
  40c139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c13a:	loope  0x40c131
  40c13c:	jmp    0x62:0x45b70b87
  40c143:	loope  0x40c185
  40c145:	imul   edx,DWORD PTR [ebp+0x7a],0xbc0c9df7
  40c14c:	xor    BYTE PTR ds:0x9593d46d,ah
  40c152:	pop    ds
  40c153:	or     DWORD PTR [edx],edx
  40c155:	mov    dl,0x24
  40c157:	mov    bl,BYTE PTR [ebx]
  40c159:	data16 (bad) 
  40c15b:	loop   0x40c16d
  40c15d:	ja     0x40c18b
  40c15f:	sbb    DWORD PTR [eax-0x2a0896b3],0x6b24a2eb
  40c169:	or     ch,BYTE PTR gs:[edx+ebp*2-0x3a]
  40c16e:	xor    al,0xe9
  40c170:	jo     0x40c11b
  40c172:	enter  0x4a0,0xb4
  40c176:	lock (bad) 
  40c178:	into   
  40c179:	lods   eax,DWORD PTR ds:[esi]
  40c17a:	loop   0x40c106
  40c17c:	dec    ebp
  40c17d:	and    edx,DWORD PTR [ecx-0x64]
  40c180:	jge    0x40c1fd
  40c182:	pop    esi
  40c183:	add    ebx,edx
  40c185:	pop    esi
  40c186:	pop    ss
  40c187:	push   ebp
  40c188:	hlt    
  40c189:	xchg   ebx,eax
  40c18a:	pushf  
  40c18b:	push   0xffffffa2
  40c18d:	xchg   esi,eax
  40c18e:	mov    esi,0x6d24384f
  40c193:	adc    eax,0xa77ff5c5
  40c198:	add    dh,BYTE PTR [ebp+0x7a12ccef]
  40c19e:	xor    BYTE PTR [ebx],dh
  40c1a0:	fdiv   QWORD PTR ds:0xca8e7069
  40c1a6:	jnp    0x40c1fe
  40c1a8:	call   0x4391:0xc91727a3
  40c1af:	std    
  40c1b0:	xchg   edi,eax
  40c1b1:	push   ds
  40c1b2:	out    0xc7,al
  40c1b4:	shl    ebp,cl
  40c1b6:	gs jno 0x40c1e2
  40c1b9:	cmp    DWORD PTR [eax],ebx
  40c1bb:	add    edx,DWORD PTR [edi+0x184f42e3]
  40c1c1:	outs   dx,DWORD PTR ds:[esi]
  40c1c2:	adc    edi,DWORD PTR [esi-0x6a]
  40c1c5:	and    edx,ebp
  40c1c7:	shl    edi,0x97
  40c1ca:	loope  0x40c1f7
  40c1cc:	pop    ds
  40c1cd:	retf   
  40c1ce:	dec    ebx
  40c1cf:	ds fstp st(4)
  40c1d2:	sub    edi,edi
  40c1d4:	pusha  
  40c1d5:	jmp    0xd5b4f6d9
  40c1da:	xor    esi,edx
  40c1dc:	mov    ch,0xf
  40c1de:	pop    ecx
  40c1df:	push   ss
  40c1e0:	jbe    0x40c1dd
  40c1e2:	and    dl,BYTE PTR [ecx-0x19]
  40c1e5:	daa    
  40c1e6:	arpl   WORD PTR [edx-0x7d866ba4],bx
  40c1ec:	dec    eax
  40c1ed:	ss xchg ecx,eax
  40c1ef:	fmul   DWORD PTR [ebp+0x79]
  40c1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f3:	pop    ebx
  40c1f4:	(bad)  
  40c1f5:	mov    esi,0xee08de7d
  40c1fa:	jle    0x40c276
  40c1fc:	jg     0x40c277
  40c1fe:	cdq    
  40c1ff:	shr    BYTE PTR [edx],cl
  40c201:	inc    ebx
  40c202:	cmp    DWORD PTR [eax+ebp*8],ebp
  40c205:	push   es
  40c206:	push   esi
  40c207:	xor    DWORD PTR [ecx],0x14
  40c20a:	sub    eax,0x7c17916b
  40c20f:	ret    
  40c210:	cmp    bh,BYTE PTR ds:0x149b815e
  40c216:	pop    ebx
  40c217:	repz cld 
  40c219:	mov    ebx,DWORD PTR [edx]
  40c21b:	xlat   BYTE PTR ds:[ebx]
  40c21c:	add    esp,DWORD PTR [ebx+edx*8-0x7d000ace]
  40c223:	in     eax,0xc2
  40c225:	(bad)  
  40c227:	push   eax
  40c228:	test   al,0x95
  40c22a:	cmp    al,0x24
  40c22c:	in     al,0xeb
  40c22e:	jmp    0x1f595c30
  40c233:	cmc    
  40c234:	mov    dh,0x81
  40c236:	and    BYTE PTR [ebx+0x28],dh
  40c239:	std    
  40c23a:	mov    edx,0xa5062195
  40c23f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c240:	pushf  
  40c241:	xor    eax,DWORD PTR [eax]
  40c243:	je     0x40c24c
  40c245:	ror    DWORD PTR [edi],cl
  40c247:	pop    ds
  40c248:	fadd   DWORD PTR [ecx]
  40c24a:	neg    BYTE PTR [eax+ebx*1-0x2e539ec9]
  40c251:	not    BYTE PTR [esi+0x112f1a84]
  40c257:	jge    0x40c1f3
  40c259:	sbb    al,0x2
  40c25b:	mov    ebx,0x97d21f11
  40c260:	add    DWORD PTR [eax],edx
  40c262:	std    
  40c263:	xor    al,0x7c
  40c265:	cdq    
  40c266:	cwde   
  40c267:	xor    al,0x50
  40c269:	imul   esp,DWORD PTR [eax+0x5],0xffffffa6
  40c26d:	xor    DWORD PTR [edx-0x79],ebp
  40c270:	stc    
  40c271:	mov    ebp,0x411bdc8b
  40c276:	push   es
  40c277:	push   ebp
  40c278:	in     eax,dx
  40c279:	add    ecx,DWORD PTR [edi+0x9816f0b]
  40c27f:	rol    DWORD PTR [ecx-0x35edcd85],cl
  40c285:	maxps  xmm0,XMMWORD PTR [ebx]
  40c288:	(bad)  
  40c289:	(bad)  
  40c28b:	cmp    ebp,DWORD PTR [eax+ebp*1+0x38]
  40c28f:	out    0x57,al
  40c291:	pop    ds
  40c292:	mov    bl,BYTE PTR [eax]
  40c294:	xor    al,0xaa
  40c296:	retf   0xe41e
  40c299:	pop    ebp
  40c29a:	mov    esi,0xc5ce67be
  40c29f:	add    DWORD PTR [edi+0x58],0xffffff8b
  40c2a3:	xor    eax,0xb20e83c7
  40c2a8:	mov    ch,BYTE PTR [eax]
  40c2aa:	inc    esi
  40c2ab:	pop    edi
  40c2ac:	lea    esi,[edx]
  40c2ae:	stos   BYTE PTR es:[edi],al
  40c2af:	jae    0x40c24f
  40c2b1:	xor    al,0xf1
  40c2b3:	xchg   ecx,eax
  40c2b4:	pop    ebx
  40c2b5:	ror    DWORD PTR [esi+0x5a192a57],1
  40c2bb:	cmp    esi,esp
  40c2bd:	dec    esi
  40c2be:	shl    DWORD PTR [edi],1
  40c2c0:	jnp    0x40c317
  40c2c2:	call   0xc7d9:0x26e718ce
  40c2c9:	outs   dx,DWORD PTR ds:[esi]
  40c2ca:	repnz les eax,FWORD PTR [esi-0x34f737ee]
  40c2d1:	mov    dl,0xed
  40c2d3:	jle    0x40c334
  40c2d5:	fisttp WORD PTR [edx-0x54]
  40c2d8:	xchg   esp,eax
  40c2d9:	xchg   ebp,eax
  40c2da:	mov    al,ds:0x642197e0
  40c2df:	or     al,0x4
  40c2e1:	lock xchg ebx,eax
  40c2e3:	sub    BYTE PTR [edi],ah
  40c2e5:	scas   al,BYTE PTR es:[edi]
  40c2e6:	sub    DWORD PTR [eax+0x1a],ecx
  40c2e9:	pop    ebx
  40c2ea:	ret    0x7eb8
  40c2ed:	aaa    
  40c2ee:	or     eax,0x9ec5f786
  40c2f3:	pop    esp
  40c2f4:	add    eax,0x534a6a8a
  40c2f9:	pop    esi
  40c2fa:	or     eax,0x9bfbe749
  40c2ff:	(bad)  
  40c301:	dec    edx
  40c302:	call   0x8b9f:0x619ae85c
  40c309:	push   ds
  40c30a:	mov    dl,0x4f
  40c30c:	xchg   ebp,eax
  40c30d:	adc    ebx,DWORD PTR [edx-0x44]
  40c310:	out    dx,eax
  40c311:	mov    eax,0x1e805336
  40c316:	retf   
  40c317:	(bad)  
  40c318:	sub    dl,BYTE PTR ds:0xc2791be1
  40c31e:	inc    edi
  40c31f:	in     al,dx
  40c320:	push   es
  40c321:	pushf  
  40c322:	jb     0x40c39c
  40c324:	mov    ah,0xd7
  40c326:	xor    eax,0xf55e3fa9
  40c32b:	int3   
  40c32c:	dec    ebx
  40c32d:	or     eax,0xa720e4d5
  40c332:	push   ecx
  40c333:	adc    al,BYTE PTR [ebx+0x51]
  40c336:	sar    DWORD PTR [esi-0x78],1
  40c339:	xor    BYTE PTR [eax],0x57
  40c33c:	adc    ebp,DWORD PTR [eax]
  40c33e:	int3   
  40c33f:	pusha  
  40c340:	sub    DWORD PTR [eax-0x26],eax
  40c343:	js     0x40c3b3
  40c345:	icebp  
  40c346:	(bad)  
  40c347:	loopne 0x40c34b
  40c349:	xchg   DWORD PTR es:[eax*4+0x62d3176f],ebx
  40c351:	ret    
  40c352:	and    esp,DWORD PTR [edi+0x3703f561]
  40c358:	pop    edi
  40c359:	retf   
  40c35a:	(bad)
  40c35d:	sbb    BYTE PTR [ebp-0x3f],bl
  40c360:	and    esp,DWORD PTR [ecx+0xa]
  40c363:	loop   0x40c3bd
  40c365:	aam    0x8e
  40c367:	outs   dx,BYTE PTR ds:[esi]
  40c368:	pop    es
  40c369:	arpl   WORD PTR [eax+0x53b7bda1],cx
  40c36f:	int    0x72
  40c371:	cs sub al,0xc0
  40c374:	std    
  40c375:	fisttp WORD PTR [ebp-0x33]
  40c378:	inc    edx
  40c379:	enter  0xba64,0x50
  40c37d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c37e:	xchg   ecx,eax
  40c37f:	add    esi,ebp
  40c381:	scas   eax,DWORD PTR es:[edi]
  40c382:	ss out 0x4c,eax
  40c385:	in     eax,dx
  40c386:	retf   0xa74c
  40c389:	dec    edx
  40c38a:	not    DWORD PTR [eax-0x2633f5b0]
  40c390:	enter  0x172d,0xa8
  40c394:	icebp  
  40c395:	addr16 inc esp
  40c397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c398:	adc    eax,0x7f7dac1e
  40c39d:	mov    edx,0x42334889
  40c3a2:	mov    esp,0x1ab3f40e
  40c3a7:	shl    BYTE PTR [esi-0x6936a2e7],0xdd
  40c3ae:	imul   esi,DWORD PTR [esi+0x63],0xe6fd3aa9
  40c3b5:	xor    esp,ecx
  40c3b7:	xchg   esp,eax
  40c3b8:	add    DWORD PTR [ecx+0x2967a5c],ecx
  40c3be:	pop    ebx
  40c3bf:	sbb    BYTE PTR [ecx+0x2a],bh
  40c3c2:	aam    0x34
  40c3c4:	popf   
  40c3c5:	aas    
  40c3c6:	add    BYTE PTR [edx-0x359223bb],dh
  40c3cc:	lods   al,BYTE PTR ds:[esi]
  40c3cd:	pop    ebp
  40c3ce:	jge    0x40c3dc
  40c3d0:	sub    eax,0x94cc00e7
  40c3d5:	iret   
  40c3d6:	rcr    DWORD PTR [edi+edx*4+0x3d1f865d],cl
  40c3dd:	jge    0x40c3d2
  40c3df:	int3   
  40c3e0:	add    DWORD PTR [ebx+0x27f06f37],ebp
  40c3e6:	push   ebp
  40c3e7:	sub    eax,0x1541fa9c
  40c3ec:	popa   
  40c3ed:	xor    eax,0x611e052e
  40c3f2:	mov    WORD PTR ds:0x21bdc598,ss
  40c3f8:	loop   0x40c39e
  40c3fa:	das    
  40c3fb:	xchg   ebx,eax
  40c3fc:	in     al,0xf3
  40c3fe:	sbb    edi,DWORD PTR [ebx+ebx*4-0x22]
  40c402:	jnp    0x40c3dd
  40c404:	and    edi,ebp
  40c406:	leave  
  40c407:	push   cs
  40c408:	into   
  40c409:	mov    esi,0x3df71726
  40c40e:	dec    ecx
  40c40f:	cmp    BYTE PTR [ebx+ebx*1+0x404c6431],dh
  40c416:	in     eax,0x25
  40c418:	cmp    eax,0xf9dfed80
  40c41d:	lock scas eax,DWORD PTR es:[edi]
  40c41f:	iret   
  40c420:	cmp    eax,0xe5c8c48b
  40c425:	mov    esi,0x12d44e43
  40c42a:	ds mov esp,0x9039ed01
  40c430:	jmp    0x9085:0x1f87d74e
  40c437:	jle    0x40c3f2
  40c439:	dec    eax
  40c43a:	imul   ebp,DWORD PTR [ebp-0x79b874cc],0x759b72e8
  40c444:	jl     0x40c435
  40c446:	mov    dl,0xd
  40c448:	push   0xe4074d07
  40c44d:	inc    edi
  40c44e:	jecxz  0x40c453
  40c450:	sbb    esp,DWORD PTR [ecx-0x62a776c1]
  40c456:	fld    QWORD PTR [ebp+0x74636924]
  40c45c:	sbb    al,0x8a
  40c45e:	xor    ebp,esi
  40c460:	jb     0x40c3e2
  40c462:	es and eax,0xd5258b43
  40c468:	retf   
  40c469:	jnp    0x40c3fc
  40c46b:	sti    
  40c46c:	ins    BYTE PTR es:[edi],dx
  40c46d:	adc    esp,ecx
  40c46f:	repz dec ecx
  40c471:	sbb    al,0xa8
  40c473:	outs   dx,DWORD PTR ds:[esi]
  40c474:	cld    
  40c475:	cmp    eax,0xb181d559
  40c47a:	cwde   
  40c47b:	or     DWORD PTR [edx+ebp*1-0x636cfd19],edi
  40c482:	lods   al,BYTE PTR ds:[esi]
  40c483:	sub    al,0x25
  40c485:	inc    ebx
  40c486:	mov    eax,ds:0x408e91b3
  40c48b:	jnp    0x40c469
  40c48d:	add    al,0x3a
  40c48f:	push   0xffffffa1
  40c491:	stos   BYTE PTR es:[edi],al
  40c492:	repz call 0x18b5c942
  40c498:	cmp    al,0x4e
  40c49a:	out    dx,al
  40c49b:	sbb    edi,DWORD PTR [esi]
  40c49d:	cli    
  40c49e:	scas   eax,DWORD PTR es:[edi]
  40c49f:	pop    ds
  40c4a0:	daa    
  40c4a1:	xchg   edx,eax
  40c4a2:	scas   eax,DWORD PTR es:[edi]
  40c4a3:	std    
  40c4a4:	xchg   dl,al
  40c4a6:	jl     0x40c445
  40c4a8:	pushf  
  40c4a9:	mov    ds:0xa6e4194b,al
  40c4ae:	in     al,dx
  40c4af:	xor    ebx,DWORD PTR [eax+ecx*1]
  40c4b2:	les    esp,FWORD PTR [edi-0x46]
  40c4b5:	outs   dx,BYTE PTR ds:[esi]
  40c4b6:	push   ss
  40c4b7:	mov    edi,0x71d98f85
  40c4bc:	loop   0x40c533
  40c4be:	fbstp  TBYTE PTR ds:0xb35718fa
  40c4c4:	out    dx,eax
  40c4c5:	fdivp  st(0),st
  40c4c7:	ja     0x40c458
  40c4c9:	inc    eax
  40c4ca:	push   0x62
  40c4cc:	jnp    0x40c4f1
  40c4ce:	sbb    DWORD PTR [edx],ebx
  40c4d0:	lds    esp,FWORD PTR [esi+eiz*2]
  40c4d3:	test   eax,0x9d41ca81
  40c4d8:	add    BYTE PTR [ecx],bh
  40c4da:	jns    0x40c513
  40c4dc:	push   esp
  40c4dd:	int3   
  40c4de:	and    ecx,DWORD PTR [ebx+0x314bbf83]
  40c4e4:	iret   
  40c4e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4e6:	and    ecx,edx
  40c4e8:	xor    BYTE PTR es:[ebx],ch
  40c4eb:	gs es loopne 0x40c515
  40c4ef:	js     0x40c567
  40c4f1:	loopne 0x40c562
  40c4f3:	adc    DWORD PTR [ebx+0x7c9a7519],ecx
  40c4f9:	sti    
  40c4fa:	imul   ebx,DWORD PTR [ebp-0x2918524e],0xe9d090f
  40c504:	fisub  WORD PTR [edi-0x3ee8e6df]
  40c50a:	push   ebp
  40c50b:	mov    DWORD PTR [edx-0x48],0xae746245
  40c512:	int3   
  40c513:	mov    ds:0xacc4d2a4,eax
  40c518:	mov    DWORD PTR [eax+eiz*8],0x8f1669ce
  40c51f:	jmp    0x40c4ae
  40c521:	imul   esp,DWORD PTR [edx-0x62fa89fc],0xffffff96
  40c528:	mov    ch,0xe8
  40c52a:	into   
  40c52b:	dec    ecx
  40c52c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c52d:	dec    esi
  40c52e:	dec    edx
  40c52f:	mov    ah,BYTE PTR [ebx-0x34]
  40c532:	fsubr  DWORD PTR [ecx-0x44]
  40c535:	jle    0x40c52b
  40c537:	mov    edx,0x9ad208d
  40c53c:	call   0x583a:0x5796d113
  40c543:	fist   WORD PTR [ebx+0x42a35515]
  40c549:	jno    0x40c540
  40c54b:	cmc    
  40c54c:	aad    0x2c
  40c54e:	je     0x40c563
  40c550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c551:	sub    dh,ah
  40c553:	(bad)  
  40c554:	or     BYTE PTR [ebp-0xa],dl
  40c557:	cli    
  40c558:	xor    eax,0x7850f499
  40c55d:	ss imul ebp,ebp,0xffffffc4
  40c561:	mov    ebp,0xd461291e
  40c566:	mov    eax,0x4c096f39
  40c56b:	(bad)  
  40c56c:	cld    
  40c56d:	(bad)  
  40c56e:	push   eax
  40c56f:	lds    esi,FWORD PTR [edx-0x453b2d76]
  40c575:	mov    ah,BYTE PTR [eax]
  40c577:	aam    0x50
  40c579:	jmp    0x83642452
  40c57e:	mov    eax,ds:0x786c973a
  40c583:	and    eax,0x404e5a1c
  40c588:	outs   dx,BYTE PTR ds:[esi]
  40c58a:	mov    ds:0x3c3af3b8,al
  40c58f:	mov    cs,WORD PTR [edi+0x49]
  40c592:	js     0x40c59e
  40c594:	sub    al,0x48
  40c596:	in     al,0x58
  40c598:	mul    DWORD PTR [edi+0x12a64625]
  40c59e:	dec    esi
  40c59f:	cmp    ebp,ecx
  40c5a1:	pop    eax
  40c5a2:	adc    BYTE PTR [edx],al
  40c5a4:	sbb    BYTE PTR [esi-0x51f2e36a],0xe3
  40c5ab:	mov    bl,0xfa
  40c5ad:	adc    dl,bl
  40c5af:	imul   eax,DWORD PTR [ecx-0x7c2c2900],0x31d5f3a1
  40c5b9:	test   DWORD PTR [ecx+0x66],eax
  40c5bc:	inc    ebp
  40c5bd:	xchg   edx,eax
  40c5be:	bound  ebp,QWORD PTR [ecx]
  40c5c0:	xor    al,0xdf
  40c5c2:	mov    cs,ebp
  40c5c4:	jg     0x40c577
  40c5c6:	in     eax,0x81
  40c5c8:	in     eax,dx
  40c5c9:	push   edi
  40c5ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5cb:	fst    QWORD PTR [ebx+ebp*4-0x75c8b629]
  40c5d2:	push   es
  40c5d3:	stos   DWORD PTR es:[edi],eax
  40c5d4:	jbe    0x40c5be
  40c5d6:	pop    esp
  40c5d7:	sub    esi,edx
  40c5d9:	sub    ebx,DWORD PTR [ebx]
  40c5db:	or     dl,bh
  40c5dd:	cmp    DWORD PTR [ecx+esi*4+0x18],ecx
  40c5e1:	ds jecxz 0x40c5ac
  40c5e4:	dec    ebp
  40c5e5:	dec    esp
  40c5e6:	dec    ebx
  40c5e7:	call   0x9cbd646c
  40c5ec:	jb     0x40c576
  40c5ee:	in     al,dx
  40c5ef:	pusha  
  40c5f0:	xor    dh,BYTE PTR [ebp+0x681e0c18]
  40c5f6:	add    dl,BYTE PTR [ecx]
  40c5f8:	push   es
  40c5f9:	int    0xbe
  40c5fb:	push   esi
  40c5fc:	iret   
  40c5fd:	ror    DWORD PTR [eax-0x627ad9f5],cl
  40c603:	dec    edi
  40c604:	and    dl,ah
  40c606:	addr16 inc ebx
  40c608:	sahf   
  40c609:	jnp    0x40c593
  40c60b:	add    DWORD PTR [ecx+0x447dea94],eax
  40c611:	sbb    al,0x9e
  40c613:	xchg   DWORD PTR [edx+eax*8+0x1e9c18c],ecx
  40c61a:	sub    ebx,DWORD PTR [edi-0x6b]
  40c61d:	lahf   
  40c61e:	lock sahf 
  40c620:	add    al,0x4c
  40c622:	ror    BYTE PTR [ecx],cl
  40c624:	inc    ecx
  40c625:	or     al,0xd0
  40c627:	mov    dl,0x5b
  40c629:	(bad)  
  40c62a:	hlt    
  40c62b:	xchg   edi,eax
  40c62c:	lock pop esp
  40c62e:	pop    eax
  40c62f:	fnstsw WORD PTR [ebx+0x2a]
  40c632:	mov    ds:0x4420b50e,eax
  40c637:	dec    edi
  40c638:	pop    ebx
  40c639:	jno    0x40c67d
  40c63b:	inc    edi
  40c63c:	sub    DWORD PTR [esi+0x57f9c9b],ebp
  40c642:	mov    ch,0x71
  40c644:	mov    ah,0x28
  40c646:	test   eax,ecx
  40c648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c649:	and    dl,cl
  40c64b:	jnp    0x40c6b9
  40c64d:	call   esi
  40c64f:	mov    edi,0x169994e1
  40c654:	hlt    
  40c655:	retf   0xf34d
  40c658:	ins    BYTE PTR es:[edi],dx
  40c659:	sub    BYTE PTR [ebx],0x54
  40c65c:	sbb    ebp,DWORD PTR [edx]
  40c65e:	sub    al,BYTE PTR [eax-0x5e2154fe]
  40c664:	cwde   
  40c665:	stc    
  40c666:	and    esi,DWORD PTR [ebx]
  40c668:	mov    esi,0x270f7b9b
  40c66d:	aad    0x49
  40c66f:	mov    al,0x89
  40c671:	test   al,0x32
  40c673:	add    ebx,esi
  40c675:	pop    ecx
  40c676:	pop    ds
  40c677:	sub    ecx,DWORD PTR [eax+0x1e]
  40c67a:	pop    esi
  40c67b:	push   0x466ae103
  40c680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c681:	outs   dx,BYTE PTR ds:[esi]
  40c682:	add    ecx,DWORD PTR [edi+0x35]
  40c685:	out    0x46,eax
  40c687:	push   ecx
  40c688:	out    0x98,al
  40c68a:	lods   eax,DWORD PTR ds:[esi]
  40c68b:	stos   DWORD PTR es:[edi],eax
  40c68c:	sbb    ebp,esi
  40c68e:	xor    esp,DWORD PTR [esi+0x34]
  40c691:	lods   eax,DWORD PTR es:[esi]
  40c693:	inc    ebp
  40c694:	je     0x40c67f
  40c696:	pop    eax
  40c697:	inc    esp
  40c698:	adc    BYTE PTR [edx],dl
  40c69a:	out    dx,eax
  40c69b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c69c:	jmp    0x3567d64
  40c6a1:	pop    ecx
  40c6a2:	(bad)  
  40c6a3:	ss in  al,dx
  40c6a5:	cmp    al,0x6e
  40c6a7:	repz add BYTE PTR [ebx+0x7d5e0fda],al
  40c6ae:	cdq    
  40c6af:	push   esi
  40c6b0:	sub    al,0x6a
  40c6b2:	jbe    0x40c669
  40c6b4:	lods   al,BYTE PTR ds:[esi]
  40c6b5:	dec    esp
  40c6b6:	test   DWORD PTR [eax],edi
  40c6b8:	stc    
  40c6b9:	jmp    0x548da97f
  40c6be:	pop    esp
  40c6bf:	and    DWORD PTR [bx+di+0x4],0x8ac25267
  40c6c7:	sbb    esp,DWORD PTR [edi+0x28c4ec50]
  40c6cd:	or     eax,0x19cfcec
  40c6d2:	push   0x15
  40c6d4:	push   ebx
  40c6d5:	dec    esi
  40c6d6:	data16 sti 
  40c6d8:	mov    bl,BYTE PTR [edx]
  40c6da:	push   0x71896a54
  40c6df:	jns    0x40c686
  40c6e1:	ficomp WORD PTR [edx-0x2e]
  40c6e4:	push   ebp
  40c6e5:	jle    0x40c738
  40c6e7:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6e9:	jnp    0x40c6aa
  40c6eb:	cmp    BYTE PTR [esi-0x4],dl
  40c6ee:	(bad)  
  40c6ef:	xlat   BYTE PTR ds:[ebx]
  40c6f0:	cwde   
  40c6f1:	add    DWORD PTR ds:0xcd967aa1,ebx
  40c6f7:	imul   esi,DWORD PTR [ebx+0x61c6aebb],0xf7d07e37
  40c701:	push   ss
  40c702:	lahf   
  40c703:	jb     0x40c724
  40c705:	jge    0x40c72a
  40c707:	xchg   esi,eax
  40c708:	add    bh,0x14
  40c70b:	fild   WORD PTR [edx+0x76880cc2]
  40c711:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c712:	or     BYTE PTR [edx],dl
  40c714:	mov    eax,0x1d264061
  40c719:	js     0x40c6bf
  40c71b:	shl    DWORD PTR [esi-0x187d1b40],1
  40c721:	mov    ch,0x1c
  40c723:	lock xor al,0x96
  40c726:	ret    0x9f2f
  40c729:	stos   BYTE PTR es:[edi],al
  40c72a:	xor    BYTE PTR [edx-0x40388f02],ch
  40c730:	pop    ss
  40c731:	div    BYTE PTR [edx+edx*8+0xc49aca9]
  40c738:	inc    ebp
  40c739:	mov    DWORD PTR [ebx+0x5637b95b],edi
  40c73f:	xchg   BYTE PTR [edx+0x6ef8e7e],ch
  40c745:	or     BYTE PTR ds:0x64f08bca,0xfd
  40c74c:	push   esi
  40c74d:	jmp    0xaf285de1
  40c752:	fwait
  40c753:	xor    DWORD PTR [ebx-0x6cb9cfc7],edx
  40c759:	sti    
  40c75a:	push   ds
  40c75b:	jo     0x40c787
  40c75d:	and    DWORD PTR [edi+esi*8],edx
  40c760:	scas   eax,DWORD PTR es:[edi]
  40c761:	daa    
  40c762:	and    bh,BYTE PTR [edx+edi*8-0x16]
  40c766:	lods   eax,DWORD PTR ds:[esi]
  40c767:	pop    ebx
  40c768:	push   edi
  40c769:	lods   al,BYTE PTR ds:[esi]
  40c76a:	add    eax,DWORD PTR [ecx]
  40c76c:	popa   
  40c76d:	not    DWORD PTR [edx+edi*2-0x78c22fb3]
  40c774:	adc    eax,0x2ac8a8e0
  40c779:	mov    ds,WORD PTR ds:0xbd7a4044
  40c77f:	int3   
  40c780:	iret   
  40c781:	adc    ecx,ebp
  40c783:	lea    esp,[ecx+0x47]
  40c786:	adc    BYTE PTR [edx],dh
  40c788:	call   0x3b3dcc6a
  40c78d:	mov    ecx,0x994051d
  40c792:	xor    edi,DWORD PTR [edx+0x64e96efc]
  40c798:	loopne 0x40c73b
  40c79a:	mov    ebp,esp
  40c79c:	inc    ebx
  40c79d:	dec    eax
  40c79e:	fs cmp eax,0x50337b1c
  40c7a4:	fsub   st,st(5)
  40c7a6:	(bad)  
  40c7a7:	addr16 xchg esp,eax
  40c7a9:	cmp    al,0x48
  40c7ab:	or     dl,BYTE PTR [edx-0x94561ae]
  40c7b1:	jle    0x40c749
  40c7b3:	or     DWORD PTR [ecx-0x1f],esi
  40c7b6:	inc    esp
  40c7b7:	pop    edi
  40c7b8:	test   ebp,edi
  40c7ba:	mov    eax,0xffbbbff7
  40c7bf:	in     eax,dx
  40c7c0:	jmp    0x8c42:0x9c52d468
  40c7c7:	scas   al,BYTE PTR es:[edi]
  40c7c8:	xchg   DWORD PTR [ecx+0x76798fd2],eax
  40c7ce:	add    eax,0x7f217064
  40c7d3:	push   es
  40c7d4:	push   ds
  40c7d5:	pop    es
  40c7d6:	sub    DWORD PTR [ecx],edi
  40c7d8:	test   eax,edi
  40c7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7db:	or     cl,cl
  40c7dd:	and    dl,BYTE PTR [ebx-0x33c7ba5a]
  40c7e3:	inc    eax
  40c7e4:	addr16 ret 0x3d1
  40c7e8:	sbb    DWORD PTR [ecx+0x17632293],edx
  40c7ee:	or     esi,DWORD PTR ds:0xe8cd6968
  40c7f4:	setp   BYTE PTR [edi+0x7fc1c28a]
  40c7fb:	dec    ecx
  40c7fc:	int    0xf8
  40c7fe:	jle    0x40c7df
  40c800:	outs   dx,DWORD PTR ds:[esi]
  40c801:	cmp    bh,cl
  40c803:	(bad)  
  40c805:	sar    BYTE PTR [eax+edi*1-0x79],cl
  40c809:	cdq    
  40c80a:	add    ch,BYTE PTR [ebp-0x6f33c5c5]
  40c810:	ret    0x8751
  40c813:	adc    eax,0x887f2cd2
  40c818:	leave  
  40c819:	sub    edx,ebp
  40c81b:	mov    ss,WORD PTR [esi+0x6d9781f3]
  40c821:	dec    edi
  40c822:	imul   ebp,DWORD PTR [ebp-0xd262490],0xffffffdf
  40c829:	outs   dx,DWORD PTR ds:[esi]
  40c82a:	das    
  40c82b:	std    
  40c82c:	ss jl  0x40c818
  40c82f:	retf   0x3197
  40c832:	loop   0x40c87e
  40c834:	push   edx
  40c835:	ins    BYTE PTR es:[edi],dx
  40c836:	(bad)  
  40c837:	mov    dh,0x55
  40c839:	jp     0x40c87d
  40c83b:	ret    
  40c83c:	xor    esp,DWORD PTR [ecx-0x20]
  40c83f:	inc    esi
  40c840:	repnz fldcw WORD PTR [eax+ecx*8+0x68499a7]
  40c848:	fs xchg edi,eax
  40c84a:	(bad)  
  40c84b:	sub    edx,DWORD PTR [edi+0x54d2ca6e]
  40c851:	lods   eax,DWORD PTR ds:[esi]
  40c852:	add    eax,0x38af4af2
  40c857:	test   DWORD PTR ds:0xe9eb2ece,0xeee17d6d
  40c861:	nop
  40c862:	scas   eax,DWORD PTR es:[edi]
  40c863:	inc    esi
  40c864:	nop
  40c865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c866:	mov    ah,0x1c
  40c868:	int    0x4a
  40c86a:	inc    edi
  40c86b:	ins    BYTE PTR es:[edi],dx
  40c86c:	rcl    ch,0xf4
  40c86f:	jl     0x40c8e5
  40c871:	inc    edi
  40c872:	jne    0x40c8a4
  40c874:	aas    
  40c875:	or     BYTE PTR [ebx+0x67],ah
  40c878:	push   ebp
  40c879:	pop    es
  40c87a:	sbb    BYTE PTR [eax],ah
  40c87c:	out    0x91,eax
  40c87e:	sub    eax,0xf84de428
  40c883:	inc    esp
  40c884:	fldenv [eiz*1-0x549cd366]
  40c88b:	xor    dh,0x71
  40c88e:	cld    
  40c88f:	enter  0x42b7,0x99
  40c893:	add    cl,ch
  40c895:	xchg   DWORD PTR [eax],edi
  40c897:	das    
  40c898:	jb     0x40c88c
  40c89a:	(bad)  [esp+ebx*8-0x1bba9d02]
  40c8a1:	out    0x31,eax
  40c8a3:	(bad)  
  40c8a5:	jae    0x40c8d9
  40c8a7:	sub    bh,ch
  40c8a9:	mov    esi,0xdf0fd880
  40c8ae:	icebp  
  40c8af:	(bad)  ds:0x8c22f454
  40c8b5:	sbb    eax,0x36a53c71
  40c8ba:	pop    ebx
  40c8bb:	inc    ebx
  40c8bc:	mov    ds:0xd7f03f93,al
  40c8c1:	ins    BYTE PTR es:[edi],dx
  40c8c2:	cmp    DWORD PTR [edx],ebx
  40c8c4:	sbb    eax,0x19804dd4
  40c8c9:	sbb    bh,BYTE PTR [ecx+0x4a]
  40c8cc:	pop    ss
  40c8cd:	push   ds
  40c8ce:	push   edi
  40c8cf:	dec    ebx
  40c8d0:	jl     0x40c8db
  40c8d2:	xchg   edi,eax
  40c8d3:	dec    ebp
  40c8d4:	test   al,0x2
  40c8d6:	cmp    BYTE PTR [ebx-0x5080c5b4],ah
  40c8dc:	out    dx,al
  40c8dd:	fcmovnb st,st(7)
  40c8df:	mov    bl,0x12
  40c8e1:	xor    esi,0xffffff97
  40c8e4:	ja     0x40c8b6
  40c8e6:	and    eax,0x905a83a
  40c8eb:	dec    ax
  40c8ed:	push   eax
  40c8ee:	pop    edx
  40c8ef:	xchg   dl,dh
  40c8f1:	(bad)  
  40c8f2:	js     0x40c8ec
  40c8f4:	pop    edx
  40c8f5:	mov    WORD PTR [edx-0x8],gs
  40c8f8:	mov    cl,0x29
  40c8fa:	popa   
  40c8fb:	inc    esp
  40c8fc:	mov    ds:0x3ea6ea6d,eax
  40c901:	pop    ds
  40c902:	cwde   
  40c903:	es js  0x40c957
  40c906:	arpl   WORD PTR [edi],ax
  40c908:	xchg   esi,eax
  40c909:	iret   
  40c90a:	or     ebx,DWORD PTR [eax]
  40c90c:	push   esp
  40c90d:	in     al,dx
  40c90e:	fs aad 0x74
  40c911:	ins    BYTE PTR es:[edi],dx
  40c912:	or     BYTE PTR [edi+0x42527c05],0xd0
  40c919:	sbb    eax,0xf45badb
  40c91e:	and    bh,cl
  40c920:	loopne 0x40c97d
  40c922:	push   esp
  40c923:	ins    DWORD PTR es:[edi],dx
  40c924:	push   0x53
  40c926:	iret   
  40c927:	xchg   ecx,eax
  40c928:	aam    0xf4
  40c92a:	int3   
  40c92b:	fdiv   DWORD PTR [edi-0x235098dc]
  40c931:	dec    esp
  40c932:	out    0x1d,eax
  40c934:	xchg   esp,eax
  40c935:	sbb    bh,BYTE PTR ds:0xf1ccd334
  40c93b:	mov    al,0x9e
  40c93d:	jns    0x40c8f4
  40c93f:	iret   
  40c940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c941:	push   edi
  40c942:	push   0xffffffba
  40c944:	xchg   ebp,eax
  40c945:	sbb    al,0xdd
  40c947:	stc    
  40c948:	xchg   ebp,eax
  40c949:	shr    BYTE PTR [edx],0x18
  40c94c:	scas   al,BYTE PTR es:[edi]
  40c94d:	out    0x5a,al
  40c94f:	jns    0x40c924
  40c951:	lea    esp,[ebp+0x77341274]
  40c957:	mov    edi,edx
  40c959:	sbb    DWORD PTR [eax+edi*4-0x29],edi
  40c95d:	mul    DWORD PTR [edi-0x7]
  40c960:	and    al,0x69
  40c962:	mov    al,ds:0x28138ff4
  40c967:	cmp    BYTE PTR [ecx-0x70],ah
  40c96a:	(bad)  
  40c96b:	imul   eax,DWORD PTR [eax*4+0x5dcf2028],0xffffffa7
  40c973:	pop    esp
  40c974:	sub    eax,0x639c5cbc
  40c979:	and    eax,0x7d707aa1
  40c97e:	xor    ebp,DWORD PTR [ebp-0xb]
  40c981:	xchg   esi,eax
  40c982:	in     al,dx
  40c983:	aam    0xc3
  40c985:	pop    ebx
  40c986:	aas    
  40c987:	call   0x7d7a05bc
  40c98c:	jmp    0x32605a77
  40c991:	pop    ebp
  40c992:	inc    edx
  40c993:	lock cli 
  40c995:	push   ebp
  40c996:	sub    esi,DWORD PTR [edi-0x1d]
  40c999:	arpl   sp,si
  40c99b:	out    dx,al
  40c99c:	xchg   edi,eax
  40c99d:	into   
  40c99e:	retf   0xb1ff
  40c9a1:	lea    edx,[eax]
  40c9a3:	add    eax,0x495ee64b
  40c9a8:	aas    
  40c9a9:	iret   
  40c9aa:	sahf   
  40c9ab:	inc    ebx
  40c9ac:	sub    DWORD PTR [esp+edx*2-0x5c1a4513],0x18
  40c9b4:	daa    
  40c9b5:	popf   
  40c9b6:	pop    edx
  40c9b7:	mov    al,0x35
  40c9b9:	inc    eax
  40c9ba:	lock jo 0x40c97d
  40c9bd:	pop    es
  40c9be:	ficom  WORD PTR [ebx-0x220e585f]
  40c9c4:	jle    0x40c9c9
  40c9c6:	ja     0x40c960
  40c9c8:	xlat   BYTE PTR ds:[ebx]
  40c9c9:	imul   esi,ebp,0x7f
  40c9cc:	fisttp DWORD PTR [edi+0x8a4db5e]
  40c9d2:	mov    edi,0x6c398e59
  40c9d7:	dec    esi
  40c9d8:	in     al,0xf7
  40c9da:	and    DWORD PTR [esi+0x45],ebx
  40c9dd:	outs   dx,BYTE PTR ds:[esi]
  40c9de:	mov    al,0xe0
  40c9e0:	es clc 
  40c9e2:	pop    esi
  40c9e3:	inc    ebx
  40c9e4:	xor    eax,0x8cad2e08
  40c9e9:	dec    edi
  40c9ea:	xor    ebx,edi
  40c9ec:	sbb    ah,0xce
  40c9ef:	or     DWORD PTR [eax],esp
  40c9f1:	pushf  
  40c9f2:	test   eax,0xcb75c064
  40c9f7:	bnd jmp 0x40c9a9
  40c9fa:	aam    0xab
  40c9fc:	and    eax,0xea99281b
  40ca01:	arpl   WORD PTR [esi-0x5d4da195],bp
  40ca07:	scas   eax,DWORD PTR es:[edi]
  40ca08:	loopne 0x40c9ef
  40ca0a:	xor    esp,eax
  40ca0c:	inc    ebp
  40ca0d:	enter  0x892a,0xfa
  40ca11:	fdivr  DWORD PTR [esi]
  40ca13:	cld    
  40ca14:	daa    
  40ca15:	pop    esi
  40ca16:	mov    ds:0x9133c902,eax
  40ca1b:	ficomp WORD PTR [ebx-0x9]
  40ca1e:	dec    ebp
  40ca1f:	test   BYTE PTR [edi+0x3a],cl
  40ca22:	mov    esp,0xcfba39e1
  40ca27:	dec    eax
  40ca28:	dec    ebp
  40ca29:	cmp    eax,DWORD PTR [esi+edi*2+0x5fa68a14]
  40ca30:	jmp    0x40c9f2
  40ca32:	add    ah,BYTE PTR [esi-0x2c24e27c]
  40ca38:	mov    eax,0x9dcfd03b
  40ca3d:	mov    edi,0xa19f5a7b
  40ca42:	jnp    0x40ca9f
  40ca44:	pusha  
  40ca45:	fdivr  QWORD PTR [edi+0x34]
  40ca48:	cdq    
  40ca49:	test   eax,0x71379a54
  40ca4e:	cwde   
  40ca4f:	and    edx,DWORD PTR [esi]
  40ca51:	sahf   
  40ca52:	sar    ch,0xc7
  40ca55:	sub    eax,0xa91aa0d9
  40ca5a:	push   cs
  40ca5b:	dec    ecx
  40ca5c:	fidivr WORD PTR [ecx-0x694a9ce5]
  40ca62:	inc    esp
  40ca63:	lods   eax,DWORD PTR ds:[esi]
  40ca64:	imul   edi,DWORD PTR [eax-0x4410f5e3],0xb0622868
  40ca6e:	out    dx,al
  40ca6f:	push   ss
  40ca70:	mov    ebx,0x8f3fd892
  40ca75:	lock fucom st(4)
  40ca78:	inc    ebx
  40ca79:	sti    
  40ca7a:	nop
  40ca7b:	lahf   
  40ca7c:	inc    esi
  40ca7d:	mov    ds:0x4a78cd17,eax
  40ca82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca83:	inc    bh
  40ca85:	push   ecx
  40ca86:	mov    dh,0xc
  40ca88:	jp     0x40ca20
  40ca8a:	pop    eax
  40ca8b:	or     ebx,DWORD PTR [edi]
  40ca8d:	repz cmp cl,BYTE PTR [ebx]
  40ca90:	sti    
  40ca91:	xor    edi,esi
  40ca93:	sub    bh,dl
  40ca95:	mov    cl,0x1a
  40ca97:	pop    esp
  40ca98:	int    0x27
  40ca9a:	mov    eax,0x69de6737
  40ca9f:	and    dl,BYTE PTR ds:0x64abae37
  40caa5:	dec    eax
  40caa6:	and    BYTE PTR [edi+0x6fcbd132],0xa2
  40caad:	dec    esp
  40caae:	sbb    ecx,DWORD PTR [edi+0x865cf34]
  40cab4:	jns    0x40cacb
  40cab6:	lods   eax,DWORD PTR ds:[esi]
  40cab7:	inc    edi
  40cab8:	and    ah,cl
  40caba:	pop    ds
  40cabb:	dec    eax
  40cabc:	jns    0x40ca40
  40cabe:	stos   BYTE PTR es:[edi],al
  40cabf:	jg     0x40ca6e
  40cac1:	dec    eax
  40cac2:	push   0xfffffffa
  40cac4:	mov    edx,0x17692301
  40cac9:	pop    es
  40caca:	int3   
  40cacb:	pop    ecx
  40cacc:	or     eax,edx
  40cace:	mov    ebx,0xd91aca0b
  40cad3:	cmc    
  40cad4:	cdq    
  40cad5:	mov    ebx,0x763118e7
  40cada:	xor    DWORD PTR [edi],esi
  40cadc:	test   BYTE PTR [ecx-0x4e],cl
  40cadf:	cmp    al,0xe7
  40cae1:	scas   al,BYTE PTR es:[edi]
  40cae2:	pop    edi
  40cae3:	adc    esp,DWORD PTR [eax+0x1d28223c]
  40cae9:	fisttp WORD PTR [edx]
  40caeb:	in     eax,0x1c
  40caed:	sub    DWORD PTR [eax],esi
  40caef:	aad    0x1e
  40caf1:	popa   
  40caf2:	push   0x8587d84e
  40caf7:	aaa    
  40caf8:	arpl   WORD PTR [edi-0x49],sp
  40cafb:	fdecstp 
  40cafd:	cdq    
  40cafe:	push   ebx
  40caff:	fistp  QWORD PTR [edx]
  40cb01:	mov    bl,0xc
  40cb03:	jg     0x40ca91
  40cb05:	mov    esp,0x759e5e14
  40cb0a:	gs push ebp
  40cb0c:	mov    bl,0xcb
  40cb0e:	dec    esi
  40cb0f:	inc    edi
  40cb10:	mov    bh,BYTE PTR gs:[edx]
  40cb13:	inc    ecx
  40cb14:	mov    ebp,0x1b1b14ab
  40cb19:	push   0x78
  40cb1b:	je     0x40cb14
  40cb1d:	packssdw mm3,QWORD PTR [edx+0x4aa2e8db]
  40cb24:	int    0xf2
  40cb26:	pop    ebx
  40cb27:	addr16 xchg esi,eax
  40cb29:	cwde   
  40cb2a:	and    DWORD PTR [ecx-0x5b],ecx
  40cb2d:	inc    ebp
  40cb2e:	sbb    esp,DWORD PTR [edi+0x11b1b478]
  40cb34:	push   es
  40cb35:	xchg   esi,eax
  40cb36:	add    cl,BYTE PTR ds:[esi]
  40cb39:	fs cli 
  40cb3b:	sub    ah,BYTE PTR ds:0x11841762
  40cb41:	imul   esp,eax,0x92cc026
  40cb47:	pop    es
  40cb48:	mov    BYTE PTR [ecx],al
  40cb4a:	fs ins BYTE PTR es:[di],dx
  40cb4d:	(bad)  
  40cb4e:	fist   WORD PTR [ebp+0x32]
  40cb51:	aam    0xfc
  40cb53:	ret    0xcafd
  40cb56:	cmp    BYTE PTR [ebp-0x397bf03c],0x32
  40cb5d:	mov    ds:0xe392278c,al
  40cb62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb63:	jno    0x40cb2c
  40cb65:	stos   DWORD PTR es:[edi],eax
  40cb66:	push   ds
  40cb67:	dec    ebx
  40cb68:	outs   dx,DWORD PTR ds:[esi]
  40cb69:	lahf   
  40cb6a:	sub    eax,0x696cc915
  40cb6f:	fwait
  40cb70:	mov    ebx,0xe5a29014
  40cb76:	and    ebx,DWORD PTR [ebx]
  40cb78:	fbstp  TBYTE PTR [eax+ecx*1]
  40cb7b:	pop    edx
  40cb7c:	or     DWORD PTR [ecx+0x14e2b9c],ebp
  40cb82:	jb     0x40cbec
  40cb84:	adc    DWORD PTR [esp+ebx*4],ebp
  40cb87:	pop    edx
  40cb88:	adc    BYTE PTR [eax-0x1f7bc948],cl
  40cb8e:	mov    al,ds:0x8e40bf04
  40cb93:	loope  0x40cb97
  40cb95:	(bad)  
  40cb96:	loop   0x40cb6a
  40cb98:	xor    DWORD PTR [esi-0xfe1c65f],esp
  40cb9e:	shl    DWORD PTR [edx+0x79],0xde
  40cba2:	daa    
  40cba3:	add    al,0x6
  40cba5:	push   eax
  40cba6:	inc    edi
  40cba7:	fiadd  DWORD PTR [esi+0x4f1d17e7]
  40cbad:	mov    dl,0x2e
  40cbaf:	ins    DWORD PTR es:[edi],dx
  40cbb0:	adc    al,0xe0
  40cbb2:	rol    DWORD PTR [ecx-0x80],0x62
  40cbb6:	adc    DWORD PTR [esi+0x69],0x44
  40cbba:	jae    0x40cb58
  40cbbc:	sbb    BYTE PTR [esi+ebx*1-0x61],al
  40cbc0:	int3   
  40cbc1:	das    
  40cbc2:	dec    eax
  40cbc3:	inc    esi
  40cbc4:	jle    0x40cbd2
  40cbc6:	jo     0x40cc2e
  40cbc8:	in     eax,dx
  40cbc9:	add    esi,esi
  40cbcb:	lods   eax,DWORD PTR ds:[esi]
  40cbcc:	pop    es
  40cbcd:	mov    dh,0x7d
  40cbcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd0:	mov    ds:0x37614c59,eax
  40cbd6:	nop
  40cbd7:	leave  
  40cbd8:	stc    
  40cbd9:	int3   
  40cbda:	cs pushf 
  40cbdc:	dec    eax
  40cbdd:	and    DWORD PTR [edx],ebp
  40cbdf:	xor    al,dh
  40cbe1:	mov    bh,0x1
  40cbe3:	mov    ecx,ecx
  40cbe5:	mov    bl,BYTE PTR [eax]
  40cbe7:	imul   DWORD PTR [ecx-0x3614a1d]
  40cbed:	dec    esi
  40cbee:	sbb    DWORD PTR [esi],edx
  40cbf0:	push   ebp
  40cbf1:	pop    eax
  40cbf2:	adc    eax,ebp
  40cbf4:	ja     0x40cc67
  40cbf6:	sahf   
  40cbf7:	mov    ds:0x169448f5,al
  40cbfc:	popa   
  40cbfd:	fsubr  QWORD PTR [esi]
  40cbff:	add    edx,DWORD PTR [edx]
  40cc01:	jecxz  0x40cc6e
  40cc03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc04:	xchg   ebx,eax
  40cc05:	aas    
  40cc06:	adc    al,0xd1
  40cc08:	mov    ds:0x863f6d8,al
  40cc0d:	test   DWORD PTR [edi+0x20],esp
  40cc10:	xchg   edi,eax
  40cc11:	jne    0x40cbc8
  40cc13:	add    DWORD PTR [edx-0x1b],edi
  40cc16:	pop    es
  40cc17:	out    dx,eax
  40cc18:	mov    al,0xfc
  40cc1a:	iret   
  40cc1b:	cmc    
  40cc1c:	call   0x95880092
  40cc21:	(bad)  
  40cc22:	cmp    al,0x81
  40cc24:	adc    al,0xe2
  40cc26:	cs retf 
  40cc28:	push   ebx
  40cc29:	test   eax,0xbd4291b6
  40cc2e:	ss ins DWORD PTR es:[edi],dx
  40cc30:	cdq    
  40cc31:	or     DWORD PTR ds:0xae60155f,esp
  40cc37:	sahf   
  40cc38:	push   ebx
  40cc39:	(bad)  
  40cc3a:	into   
  40cc3b:	das    
  40cc3c:	dec    edx
  40cc3d:	nop    edi
  40cc40:	sub    ebx,edx
  40cc42:	call   0xbaad129
  40cc47:	push   cs
  40cc48:	xor    al,0x8d
  40cc4a:	xchg   esp,eax
  40cc4b:	loope  0x40cc0c
  40cc4d:	mul    BYTE PTR [edi+0x1f]
  40cc50:	add    DWORD PTR [ebx-0x32c1b7f8],eax
  40cc56:	sbb    eax,0x77563b2d
  40cc5b:	fcomp  QWORD PTR [ebp+0x1e2383dc]
  40cc61:	pop    esp
  40cc62:	sbb    al,0x18
  40cc64:	cmp    eax,0x3ea79609
  40cc69:	dec    esp
  40cc6a:	and    cl,BYTE PTR [ebp-0x30a8ac4a]
  40cc70:	ror    BYTE PTR [edi+0x66075d31],cl
  40cc76:	das    
  40cc77:	pop    esp
  40cc78:	jae    0x40cc63
  40cc7a:	retf   
  40cc7b:	loopne 0x40ccae
  40cc7d:	rol    BYTE PTR [eax+eax*2+0x74c0c652],cl
  40cc84:	imul   DWORD PTR [eax-0x73]
  40cc87:	pop    es
  40cc88:	rcl    BYTE PTR [eax],1
  40cc8a:	(bad)  [ecx+0x20b9c8b1]
  40cc90:	adc    al,0x5d
  40cc92:	mov    bh,0x96
  40cc94:	adc    DWORD PTR [edx-0x3fdc78e0],0x15
  40cc9b:	fs sbb eax,0x9edb2ff9
  40cca1:	dec    ecx
  40cca2:	pop    eax
  40cca3:	pop    esp
  40cca4:	clc    
  40cca5:	stos   BYTE PTR es:[edi],al
  40cca6:	ja     0x40ccd2
  40cca8:	push   eax
  40cca9:	add    DWORD PTR [esi+0x3d],ebx
  40ccac:	retf   0xdc62
  40ccaf:	outs   dx,DWORD PTR ds:[esi]
  40ccb0:	(bad)  
  40ccb1:	imul   DWORD PTR [ebp+0x3b060286]
  40ccb7:	dec    esp
  40ccb8:	xchg   DWORD PTR [edi],ebp
  40ccba:	pop    ebx
  40ccbb:	push   edi
  40ccbc:	outs   dx,BYTE PTR ds:[esi]
  40ccbd:	fcmovb st,st(7)
  40ccbf:	lea    ebp,[esi]
  40ccc1:	jecxz  0x40cccc
  40ccc3:	or     DWORD PTR fs:[edi+0x61],edi
  40ccc7:	xor    esi,DWORD PTR [esi]
  40ccc9:	js     0x40ccc4
  40cccb:	sbb    dh,BYTE PTR [ecx]
  40cccd:	(bad)  
  40ccce:	adc    BYTE PTR [eax],dh
  40ccd0:	inc    ebp
  40ccd1:	aad    0x4f
  40ccd3:	or     ebx,DWORD PTR [ecx-0x706f7971]
  40ccd9:	out    dx,al
  40ccda:	in     eax,0xc4
  40ccdc:	popf   
  40ccdd:	mov    dl,0xb5
  40ccdf:	leave  
  40cce0:	enter  0xe97e,0x46
  40cce4:	ins    DWORD PTR es:[edi],dx
  40cce5:	test   eax,0xd54e4ff8
  40ccea:	add    dh,BYTE PTR [ebp+eax*8-0x633cf06c]
  40ccf1:	repz mov ah,0xba
  40ccf4:	sbb    ebp,DWORD PTR [ecx-0x27]
  40ccf7:	(bad)
  40ccfb:	jbe    0x40cccd
  40ccfd:	push   ebp
  40ccfe:	cli    
  40ccff:	out    0x5b,al
  40cd01:	cdq    
  40cd02:	ss pop ds
  40cd04:	mov    esi,0x1702a17
  40cd09:	pop    eax
  40cd0a:	adc    edx,DWORD PTR [esi]
  40cd0c:	xchg   esp,eax
  40cd0d:	test   eax,0xb4f606bb
  40cd12:	pop    esp
  40cd13:	xchg   edx,eax
  40cd14:	dec    esi
  40cd15:	(bad)  
  40cd16:	bound  ecx,QWORD PTR [edi]
  40cd18:	dec    edi
  40cd19:	xchg   edx,eax
  40cd1a:	sbb    esp,edi
  40cd1c:	ret    
  40cd1d:	cdq    
  40cd1e:	pop    esp
  40cd1f:	(bad)  
  40cd20:	cmp    ebx,ebp
  40cd22:	mov    esi,ecx
  40cd24:	int3   
  40cd25:	jl     0x40cce3
  40cd27:	jae    0x40ccd9
  40cd29:	push   ss
  40cd2a:	das    
  40cd2b:	xchg   BYTE PTR [ebp-0x40],bl
  40cd2e:	stos   DWORD PTR es:[edi],eax
  40cd2f:	or     BYTE PTR [edx+eiz*1+0x5c86085e],dh
  40cd36:	jns    0x40cd23
  40cd38:	fwait
  40cd39:	ja     0x40cd96
  40cd3b:	mov    cl,BYTE PTR [edi+edx*4-0x1c]
  40cd3f:	mov    ebx,0x33450c52
  40cd44:	in     al,dx
  40cd45:	jae    0x40cccb
  40cd47:	push   es
  40cd48:	xor    al,0xeb
  40cd4a:	call   0x72045764
  40cd4f:	jg     0x40cda9
  40cd51:	imul   eax,DWORD PTR [ecx],0x452307a
  40cd57:	adc    eax,0x594663b7
  40cd5c:	call   DWORD PTR [eax]
  40cd5e:	add    eax,0x4d22cca7
  40cd63:	addr16 aas 
  40cd65:	add    dl,BYTE PTR [ebx]
  40cd67:	setnp  BYTE PTR [edx+eiz*4+0x5c]
  40cd6c:	and    eax,0xffffffe8
  40cd6f:	pop    esp
  40cd70:	push   es
  40cd71:	outs   dx,DWORD PTR ds:[esi]
  40cd72:	inc    edi
  40cd73:	out    dx,eax
  40cd74:	xchg   BYTE PTR [ecx],ch
  40cd76:	pop    es
  40cd77:	icebp  
  40cd78:	xchg   DWORD PTR [esi],ecx
  40cd7a:	jno    0x40cd21
  40cd7c:	adc    dh,dh
  40cd7e:	in     al,dx
  40cd7f:	fwait
  40cd80:	and    eax,DWORD PTR [edx-0x27]
  40cd83:	mov    cs,ebp
  40cd85:	repnz (bad) 
  40cd88:	ins    BYTE PTR es:[edi],dx
  40cd89:	cmp    al,0xf4
  40cd8b:	mov    dl,BYTE PTR [edi]
  40cd8d:	in     eax,0xa7
  40cd8f:	sbb    DWORD PTR [esi+ebp*8],ebx
  40cd92:	(bad)  
  40cd93:	xor    DWORD PTR [eax],edx
  40cd95:	aad    0x51
  40cd97:	gs imul ecx,esi,0x6a
  40cd9b:	mov    dh,0x58
  40cd9d:	stos   BYTE PTR es:[edi],al
  40cd9e:	in     eax,dx
  40cd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda0:	inc    edx
  40cda1:	cmp    al,0xff
  40cda3:	scas   eax,DWORD PTR es:[edi]
  40cda4:	fs loop 0x40cd9d
  40cda7:	hlt    
  40cda8:	call   0xb5c18c8b
  40cdad:	jnp    0x40cda1
  40cdaf:	inc    ebp
  40cdb0:	sbb    DWORD PTR [esi-0x80],ebx
  40cdb3:	or     cl,BYTE PTR [edx]
  40cdb5:	jne    0x40cda1
  40cdb7:	ret    0x56b9
  40cdba:	outs   dx,BYTE PTR ds:[esi]
  40cdbb:	jb     0x40ce1d
  40cdbd:	xor    eax,DWORD PTR [esi+0x63]
  40cdc0:	cld    
  40cdc1:	pop    ds
  40cdc2:	repz xor ebp,ecx
  40cdc5:	sub    bl,BYTE PTR [ebp+0x77]
  40cdc8:	jnp    0x40cd9f
  40cdca:	sub    eax,0x54c96450
  40cdcf:	inc    eax
  40cdd0:	in     eax,dx
  40cdd1:	dec    ebp
  40cdd2:	sbb    esi,DWORD PTR [ecx]
  40cdd4:	inc    eax
  40cdd5:	addr16 mov dh,0xcb
  40cdd8:	add    BYTE PTR [ebx-0x31664e0e],dh
  40cdde:	sub    al,0xf3
  40cde0:	hlt    
  40cde1:	aaa    
  40cde2:	adc    BYTE PTR [ebx-0x5f187fc7],dh
  40cde8:	fiadd  DWORD PTR [ecx+0x7e]
  40cdeb:	sbb    BYTE PTR [ebx-0x38],bl
  40cdee:	stos   BYTE PTR es:[di],al
  40cdf0:	or     al,0xa0
  40cdf2:	and    al,0x56
  40cdf4:	sub    al,0x8b
  40cdf6:	mov    ah,0x6c
  40cdf8:	(bad)  
  40cdf9:	and    ch,BYTE PTR [ebp+0x5ecc301]
  40cdff:	dec    esi
  40ce00:	mov    esi,0x2ab4f27
  40ce05:	and    DWORD PTR [ebp+0x615882ff],ebp
  40ce0b:	ins    BYTE PTR es:[edi],dx
  40ce0c:	jne    0x40cdec
  40ce0e:	add    bl,BYTE PTR ds:0x7d80a114
  40ce14:	xchg   ebx,eax
  40ce15:	icebp  
  40ce16:	mov    ah,0x8d
  40ce18:	pop    ebp
  40ce19:	dec    esi
  40ce1a:	scas   eax,DWORD PTR es:[edi]
  40ce1b:	aaa    
  40ce1c:	mov    edi,edi
  40ce1e:	sbb    DWORD PTR [ebp+0x5a],esi
  40ce21:	or     ch,bl
  40ce23:	or     esi,DWORD PTR [esi-0x3e711c2e]
  40ce29:	sub    dh,BYTE PTR [edx]
  40ce2b:	jecxz  0x40cdc4
  40ce2d:	jno    0x40ce4e
  40ce2f:	cmp    ah,BYTE PTR [edi]
  40ce31:	cmp    al,BYTE PTR [edi]
  40ce33:	fcomp  QWORD PTR [edx]
  40ce35:	xor    DWORD PTR [esi],ebx
  40ce37:	mov    ds:0x1ff4de0f,eax
  40ce3c:	ss and ah,ah
  40ce3f:	cld    
  40ce40:	jo     0x40ce57
  40ce42:	xchg   BYTE PTR [ebx+0x3b1f5138],bh
  40ce48:	enter  0x840f,0x71
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	add    BYTE PTR [ebx+0x458bec7d],cl
  40ce54:	or     BYTE PTR [ebx+0x448b1455],cl
  40ce5a:	add    BYTE PTR [ecx+edi*4],0x93
  40ce5e:	or     BYTE PTR [ecx+0x7],dl
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c56
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42385a
  40cf91:	push   0x423812
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a76
  40cff7:	mov    ebx,DWORD PTR ds:0x421a9e
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c56
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cda
  40d0ed:	mov    esi,DWORD PTR ds:0x421cd2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421cd2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	push   0x59
  40d113:	les    esi,FWORD PTR [ebx-0x3e]
  40d116:	shl    DWORD PTR [edx+0x62],1
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx-0x72]
  40d11e:	cmp    BYTE PTR [ebx+esi*2-0x3f],al
  40d122:	loopne 0x40d0da
  40d124:	repz call 0xb6119473
  40d12a:	pop    DWORD PTR [ebx+0x5fe2933f]
  40d130:	push   cs
  40d131:	mov    ecx,0x971fdb9d
  40d136:	jno    0x40d184
  40d138:	aaa    
  40d139:	dec    ebx
  40d13a:	test   cl,cl
  40d13c:	in     al,dx
  40d13d:	aam    0x3c
  40d13f:	gs fwait
  40d141:	xor    al,0x69
  40d143:	fist   WORD PTR [esi-0x31]
  40d146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d147:	psllw  mm7,mm3
  40d14a:	add    eax,0xd0ee9530
  40d14f:	leave  
  40d150:	jl     0x40d12d
  40d152:	rcr    ecx,1
  40d154:	out    dx,eax
  40d155:	mov    edi,0x108fd181
  40d15a:	(bad)  
  40d15b:	jb     0x40d1cf
  40d15d:	adc    eax,0x4965fd21
  40d162:	xor    al,0xa0
  40d164:	imul   esi,DWORD PTR [esi+0x3b123ada],0xd8dd5cf1
  40d16e:	mov    esi,0xc0f936be
  40d173:	mov    dl,0xb3
  40d175:	scas   al,BYTE PTR es:[edi]
  40d176:	sar    DWORD PTR [ebx+ebp*8-0x68],cl
  40d17a:	pusha  
  40d17b:	mov    BYTE PTR [edx+0x18],bh
  40d17e:	mov    cl,0x50
  40d180:	rcl    DWORD PTR [ebp-0x6cdd9fb6],cl
  40d186:	adc    eax,0xa0f53af8
  40d18b:	icebp  
  40d18c:	cli    
  40d18d:	mov    BYTE PTR [ebx-0x6c],dh
  40d190:	sub    edi,esi
  40d192:	inc    esi
  40d193:	push   eax
  40d194:	lahf   
  40d195:	add    ah,bl
  40d197:	(bad)  
  40d198:	cvtpi2ps xmm2,QWORD PTR [edx-0x17f0fca0]
  40d19f:	mov    cl,0xf4
  40d1a1:	dec    ebx
  40d1a2:	pop    eax
  40d1a3:	xor    BYTE PTR [ebp+eax*2+0x7513fb13],ah
  40d1aa:	add    al,0x52
  40d1ac:	mov    ds:0xeb37e8f8,eax
  40d1b1:	mov    bh,0xb8
  40d1b3:	faddp  st(5),st
  40d1b5:	xor    cl,ch
  40d1b7:	jle    0x40d16f
  40d1b9:	cmp    cl,cl
  40d1bb:	adc    ah,ah
  40d1bd:	add    ecx,DWORD PTR [ecx+0x68499dcf]
  40d1c3:	leave  
  40d1c4:	push   ebx
  40d1c5:	pop    ss
  40d1c6:	jecxz  0x40d1ab
  40d1c8:	xchg   ebx,eax
  40d1c9:	jmp    0x40d188
  40d1cb:	imul   ebx,DWORD PTR [eax-0x5341eb8],0x838f61e1
  40d1d5:	cmp    dl,BYTE PTR [edi]
  40d1d7:	fsub   st,st(3)
  40d1d9:	inc    edi
  40d1da:	mov    edi,0xbb4b1702
  40d1df:	ficomp DWORD PTR [esi-0x59fb0f2a]
  40d1e5:	int3   
  40d1e6:	and    DWORD PTR [ebx-0x5a],0xb
  40d1ea:	sub    eax,0x66941410
  40d1ef:	push   es
  40d1f0:	pusha  
  40d1f1:	lods   al,BYTE PTR ds:[esi]
  40d1f2:	jae    0x40d1e8
  40d1f4:	scas   eax,DWORD PTR es:[edi]
  40d1f5:	in     eax,0x19
  40d1f7:	(bad)  
  40d1f9:	loopne 0x40d262
  40d1fb:	shl    BYTE PTR [eax+0x47],1
  40d1fe:	mov    ecx,0xabe1f055
  40d203:	sub    DWORD PTR [ecx+0x18],eax
  40d206:	nop
  40d207:	inc    esi
  40d208:	lods   eax,DWORD PTR ds:[esi]
  40d209:	push   cs
  40d20a:	mov    al,ds:0x4db01ecc
  40d20f:	pop    es
  40d210:	mov    ecx,0x8eea3a68
  40d215:	sbb    al,0x19
  40d217:	ins    DWORD PTR es:[edi],dx
  40d218:	pop    esp
  40d219:	in     al,0x69
  40d21b:	mov    ah,0x35
  40d21d:	addr16 fsub st,st(2)
  40d220:	mov    edi,edx
  40d222:	test   eax,0x4a74c43e
  40d227:	lock or al,0x2c
  40d22a:	mov    al,ds:0xed3c081c
  40d22f:	lea    ebx,[ebx+ebp*1]
  40d232:	jno    0x40d22e
  40d234:	add    eax,0xa07f92dd
  40d239:	inc    esp
  40d23a:	out    dx,al
  40d23b:	(bad)  
  40d23d:	or     esi,esp
  40d23f:	mov    ebx,0xaf5ce652
  40d244:	lds    ecx,FWORD PTR [ecx]
  40d246:	sar    DWORD PTR [ebp+0x25],1
  40d249:	jnp    0x40d1fa
  40d24b:	xchg   ebp,eax
  40d24c:	shr    al,cl
  40d24e:	icebp  
  40d24f:	xor    dl,ch
  40d251:	mov    al,ds:0xcaf27524
  40d256:	push   edi
  40d257:	scas   al,BYTE PTR es:[edi]
  40d258:	leave  
  40d259:	xchg   esp,eax
  40d25a:	push   ebp
  40d25b:	das    
  40d25c:	test   BYTE PTR [ebx],ah
  40d25e:	cmp    cl,BYTE PTR [eax+ebp*2]
  40d261:	mov    edi,0xe70d1b60
  40d266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d267:	ret    0x1147
  40d26a:	mov    dh,0xd3
  40d26c:	shl    esp,cl
  40d26e:	inc    ecx
  40d26f:	xchg   ebx,eax
  40d270:	sbb    ah,BYTE PTR ss:[esi+0x3f8e2a98]
  40d277:	mov    al,ds:0x6d5c4b55
  40d27c:	pushf  
  40d27d:	cmc    
  40d27e:	push   ecx
  40d27f:	dec    esp
  40d280:	(bad)  
  40d281:	in     eax,0x5e
  40d283:	enter  0x636b,0xd7
  40d287:	dec    edi
  40d288:	xchg   DWORD PTR [ecx-0x15],ebx
  40d28b:	fstp   st(1)
  40d28d:	sbb    BYTE PTR [eax-0x16],bl
  40d290:	shl    BYTE PTR [edx],1
  40d292:	cld    
  40d293:	mov    dl,0x1a
  40d295:	jo     0x40d2b1
  40d297:	push   ss
  40d298:	fst    DWORD PTR [ecx]
  40d29a:	out    0x96,eax
  40d29c:	out    dx,eax
  40d29d:	jp     0x40d2bd
  40d29f:	shr    DWORD PTR [eax-0x37],0x5a
  40d2a3:	mov    ebp,0xb73e7f5b
  40d2a8:	cmp    ebx,edi
  40d2aa:	mov    dh,BYTE PTR [ebx]
  40d2ac:	hlt    
  40d2ad:	inc    esi
  40d2ae:	add    ah,BYTE PTR [ecx+0xe]
  40d2b1:	jmp    0xa969:0x6ea8fa46
  40d2b8:	fst    DWORD PTR [ebp+0x2]
  40d2bb:	cmp    ah,BYTE PTR [ebx+0x77]
  40d2be:	dec    edx
  40d2bf:	add    eax,0xa2af0959
  40d2c4:	sbb    eax,0x1f0283f1
  40d2c9:	clc    
  40d2ca:	mov    dh,BYTE PTR [edi-0x1bb96b35]
  40d2d0:	cwde   
  40d2d1:	sub    ecx,DWORD PTR [ecx+eiz*1]
  40d2d4:	bound  esi,QWORD PTR [edi-0x12]
  40d2d7:	lock xor al,0x54
  40d2da:	out    dx,eax
  40d2db:	dec    ebp
  40d2dc:	(bad)  
  40d2dd:	xchg   esp,eax
  40d2de:	sub    BYTE PTR [edx+esi*1],al
  40d2e1:	add    cl,BYTE PTR [edi+0x18]
  40d2e4:	jmp    0x40d331
  40d2e6:	scas   eax,DWORD PTR es:[edi]
  40d2e7:	sub    al,BYTE PTR [esi-0x71f03bde]
  40d2ed:	push   esp
  40d2ee:	enter  0x8c1a,0x1d
  40d2f2:	ins    DWORD PTR es:[edi],dx
  40d2f3:	mov    bl,0x96
  40d2f5:	mov    DWORD PTR [esi+ebx*8-0x19],ecx
  40d2f9:	aaa    
  40d2fa:	pop    es
  40d2fb:	(bad)  
  40d2fc:	fisubr WORD PTR [ecx+0x2daf1e73]
  40d302:	xchg   edi,eax
  40d303:	loope  0x40d36b
  40d305:	pop    ebp
  40d306:	pop    ss
  40d307:	ins    BYTE PTR es:[edi],dx
  40d308:	jmp    0xc5dad288
  40d30d:	sti    
  40d30e:	add    DWORD PTR [ebp-0x25224c4d],esi
  40d314:	in     al,dx
  40d315:	jbe    0x40d32a
  40d317:	and    eax,0x3abc1927
  40d31c:	sbb    ch,al
  40d31e:	jae    0x40d2b6
  40d320:	sub    eax,0x1697aedb
  40d325:	jmp    0xd27a:0x6b80c9d4
  40d32c:	push   es
  40d32d:	xor    BYTE PTR [edx+ebp*8-0x8cc7cf],cl
  40d334:	into   
  40d335:	dec    esi
  40d336:	inc    edx
  40d337:	lods   al,BYTE PTR ds:[esi]
  40d338:	pop    eax
  40d339:	xchg   ecx,eax
  40d33a:	cdq    
  40d33b:	inc    edx
  40d33c:	jmp    0xb1852e3e
  40d341:	mov    ebp,0xacc1468f
  40d346:	add    BYTE PTR [esi-0x65c1bdae],0x9c
  40d34d:	jns    0x40d316
  40d34f:	adc    ecx,DWORD PTR [edi+ecx*1]
  40d352:	fcom   QWORD PTR [edx-0x26]
  40d355:	stc    
  40d356:	leave  
  40d357:	add    BYTE PTR [esi-0x164e69],dl
  40d35d:	int3   
  40d35e:	sbb    al,0xa9
  40d360:	xchg   esi,eax
  40d361:	push   esp
  40d362:	bound  esp,QWORD PTR [eax+0x60]
  40d365:	xchg   ebx,eax
  40d366:	xor    BYTE PTR [esi+0x24],0xfc
  40d36a:	mov    ebx,0x8b654452
  40d36f:	ds cmp dl,al
  40d372:	popf   
  40d373:	ins    BYTE PTR es:[edi],dx
  40d374:	sar    BYTE PTR [esi+0x6f],0x22
  40d378:	(bad)  
  40d379:	adc    eax,0xb47abddb
  40d37e:	lock mov cl,BYTE PTR [edi]
  40d381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d382:	xchg   ebp,eax
  40d383:	push   0x503fa7ea
  40d388:	inc    edi
  40d389:	out    0x12,al
  40d38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d38c:	cmp    DWORD PTR [eax-0x333efa1e],0xba454f67
  40d396:	mov    bh,0x5c
  40d398:	adc    ah,BYTE PTR [ebp+0x5c]
  40d39b:	leave  
  40d39c:	push   ebp
  40d39d:	xor    DWORD PTR [ecx+eax*2-0x33],edx
  40d3a1:	xor    eax,0x134c4472
  40d3a6:	mov    ch,ah
  40d3a8:	test   eax,0x2c2f9d79
  40d3ad:	out    dx,al
  40d3ae:	lods   al,BYTE PTR ds:[esi]
  40d3af:	pop    ebx
  40d3b0:	(bad)  
  40d3b1:	ficomp WORD PTR [ebp-0x13db611a]
  40d3b7:	das    
  40d3b8:	adc    eax,0xd302df0b
  40d3bd:	push   edx
  40d3be:	cmp    al,0xfe
  40d3c0:	inc    eax
  40d3c1:	retf   
  40d3c2:	ds push eax
  40d3c4:	not    BYTE PTR [ebx-0x6e4d79ac]
  40d3ca:	call   0x87d8f2a2
  40d3cf:	inc    eax
  40d3d0:	sbb    ah,BYTE PTR [edx+edx*2]
  40d3d3:	out    dx,eax
  40d3d4:	jo     0x40d36d
  40d3d6:	shl    DWORD PTR [eax],cl
  40d3d8:	in     eax,dx
  40d3d9:	jne    0x40d407
  40d3db:	gs push ds
  40d3dd:	fild   QWORD PTR [ebp-0x39e92353]
  40d3e3:	sub    esi,DWORD PTR ds:0xc1c2c8c
  40d3e9:	call   0x6c67d68f
  40d3ee:	mov    ds:0xfe2ade93,al
  40d3f3:	popf   
  40d3f4:	xchg   ebx,eax
  40d3f5:	mov    ds:0xe99be882,al
  40d3fa:	sbb    eax,0x7106a45c
  40d3ff:	pop    ds
  40d400:	ror    BYTE PTR [ecx],cl
  40d402:	push   ss
  40d403:	add    eax,0x2a040abc
  40d408:	xchg   ebp,eax
  40d409:	cmp    DWORD PTR [edx+edi*2-0xc],edx
  40d40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d40e:	out    0x93,al
  40d410:	pop    edx
  40d411:	call   0xa3bf:0x422faa09
  40d418:	cmc    
  40d419:	or     dh,BYTE PTR [esi]
  40d41b:	lods   al,BYTE PTR ds:[esi]
  40d41c:	(bad)  
  40d41d:	jnp    0x40d3cb
  40d41f:	jge    0x40d409
  40d421:	fadd   DWORD PTR [eax+ebx*1+0x35795b76]
  40d428:	mov    ebx,0x177eee66
  40d42d:	loopne 0x40d434
  40d42f:	push   ds
  40d430:	arpl   si,bp
  40d432:	ja     0x40d3f3
  40d434:	add    eax,0x36224b88
  40d439:	add    eax,0x95862c37
  40d43e:	clc    
  40d43f:	mov    WORD PTR [esi+0x12],ds
  40d442:	mov    al,0x80
  40d444:	repz mov al,0x5b
  40d447:	cs add esp,0x32
  40d44b:	adc    DWORD PTR [ecx+0x45],esi
  40d44e:	push   ss
  40d44f:	daa    
  40d450:	cmc    
  40d451:	inc    esi
  40d452:	mov    BYTE PTR [ebx-0x2112111a],al
  40d458:	dec    esi
  40d459:	in     eax,dx
  40d45a:	fidiv  WORD PTR [eax+0x4c]
  40d45d:	or     edx,DWORD PTR [esi+0x43f6f656]
  40d463:	je     0x40d460
  40d465:	or     eax,esi
  40d467:	sahf   
  40d468:	test   edx,edx
  40d46a:	jne    0x40d416
  40d46c:	dec    edi
  40d46d:	xor    edi,esp
  40d46f:	ds je  0x40d432
  40d472:	add    ebp,esi
  40d474:	or     BYTE PTR [edi+0x1e],bh
  40d477:	sbb    bl,ah
  40d479:	xchg   ebx,eax
  40d47a:	lahf   
  40d47b:	cmc    
  40d47c:	test   al,0x6b
  40d47e:	stos   BYTE PTR es:[edi],al
  40d47f:	sbb    BYTE PTR [eax+0x5527678e],bl
  40d485:	dec    ebp
  40d486:	outs   dx,BYTE PTR ds:[esi]
  40d487:	mov    eax,0x37767eb5
  40d48c:	out    dx,eax
  40d48d:	aad    0x67
  40d48f:	imul   edx,DWORD PTR [edi],0x99974ec2
  40d495:	add    BYTE PTR [edx-0x6f],ch
  40d498:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d499:	imul   esp,eax,0x69
  40d49c:	or     bh,BYTE PTR [esi]
  40d49e:	test   DWORD PTR [ecx-0x1a073c19],edi
  40d4a4:	pop    ebp
  40d4a5:	int    0xc7
  40d4a7:	lahf   
  40d4a8:	inc    edx
  40d4a9:	fsub   QWORD PTR [eax+0x57]
  40d4ac:	call   0x5c148784
  40d4b1:	pop    eax
  40d4b2:	add    eax,0x6c3f5807
  40d4b7:	loope  0x40d4f9
  40d4b9:	test   BYTE PTR [edx+0x1a],cl
  40d4bc:	push   ecx
  40d4bd:	adc    al,0x97
  40d4bf:	dec    ebp
  40d4c0:	pop    eax
  40d4c1:	loop   0x40d477
  40d4c3:	stos   DWORD PTR es:[edi],eax
  40d4c4:	and    edi,DWORD PTR [ebx+0x279a8ce4]
  40d4ca:	sbb    al,0x9e
  40d4cc:	clc    
  40d4cd:	in     eax,0x4a
  40d4cf:	inc    ebp
  40d4d0:	rol    DWORD PTR [edi+edi*2-0x15],1
  40d4d4:	ret    
  40d4d5:	push   ss
  40d4d6:	xchg   ebx,eax
  40d4d7:	or     dl,BYTE PTR ds:[ebx-0x44db42a4]
  40d4de:	lods   eax,DWORD PTR ds:[esi]
  40d4df:	push   ss
  40d4e0:	add    BYTE PTR [edx],0x61
  40d4e3:	retf   
  40d4e4:	sub    DWORD PTR [edi+0x74],esi
  40d4e7:	push   es
  40d4e8:	cmp    eax,0xbd6585ef
  40d4ed:	sub    eax,ecx
  40d4ef:	dec    edi
  40d4f0:	es hlt 
  40d4f2:	push   ebx
  40d4f3:	mov    ds:0x9b888853,eax
  40d4f8:	ja     0x40d4a9
  40d4fa:	fwait
  40d4fb:	mov    WORD PTR [ecx-0x70],?
  40d4fe:	shr    dl,cl
  40d500:	pop    eax
  40d501:	pop    ss
  40d502:	push   0x4b54fdc3
  40d507:	cwde   
  40d508:	in     al,dx
  40d509:	jecxz  0x40d4e6
  40d50b:	sub    edi,DWORD PTR [ebx]
  40d50d:	push   es
  40d50e:	mov    eax,0x12ecd33c
  40d513:	call   0x3dc8173e
  40d518:	push   ss
  40d519:	iret   
  40d51a:	inc    esp
  40d51b:	test   al,0x6e
  40d51d:	xlat   BYTE PTR ds:[ebx]
  40d51e:	push   0xffffff8c
  40d520:	xchg   edi,eax
  40d521:	inc    edi
  40d522:	imul   edx,edx,0x4b
  40d525:	push   0xffffff9d
  40d527:	xchg   ebp,eax
  40d528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d529:	pop    ds
  40d52a:	loop   0x40d4dd
  40d52c:	mov    bl,0x32
  40d52e:	enter  0x8582,0x24
  40d532:	scas   eax,DWORD PTR es:[edi]
  40d533:	mov    esp,0x1244a798
  40d538:	clc    
  40d539:	pop    ecx
  40d53a:	call   0x1c2b7dad
  40d53f:	adc    al,BYTE PTR ss:[edx]
  40d542:	fcomip st,st(7)
  40d544:	push   edi
  40d545:	mov    esi,0xd74e816e
  40d54a:	xchg   esi,eax
  40d54b:	shr    BYTE PTR [edx-0x46],1
  40d54e:	mov    bh,0x5f
  40d550:	retf   
  40d551:	js     0x40d539
  40d553:	sti    
  40d554:	xor    esp,edx
  40d556:	cmp    BYTE PTR [edi+0x68060c9b],0x49
  40d55d:	retf   
  40d55e:	xchg   ebp,eax
  40d55f:	out    dx,al
  40d560:	inc    ecx
  40d561:	fcmove st,st(1)
  40d563:	(bad)
  40d567:	mul    BYTE PTR [ebx]
  40d569:	in     eax,0xc
  40d56b:	dec    esp
  40d56c:	jecxz  0x40d5c4
  40d56e:	lea    eax,[edi+ebx*2+0x2dbbbbb2]
  40d575:	rcr    DWORD PTR [edx],cl
  40d577:	pop    edi
  40d578:	push   edi
  40d579:	aas    
  40d57a:	cvtdq2ps xmm5,XMMWORD PTR [esi]
  40d57d:	cmp    BYTE PTR [esi],al
  40d57f:	mov    fs,WORD PTR [edx-0x2900625e]
  40d585:	lea    edx,cs:[ecx+0x1b]
  40d589:	push   ecx
  40d58a:	call   0x34084c11
  40d58f:	jg     0x40d554
  40d591:	xchg   esp,eax
  40d592:	mov    ch,0xd8
  40d594:	div    BYTE PTR [ebp-0xe]
  40d597:	xchg   BYTE PTR [eax+0x0],cl
  40d59a:	and    eax,0x8009a99a
  40d59f:	imul   eax,eax,0x88625a99
  40d5a5:	loope  0x40d59e
  40d5a7:	aad    0xa6
  40d5a9:	sar    BYTE PTR [eax+0x36],1
  40d5ac:	loop   0x40d5f9
  40d5ae:	out    dx,al
  40d5af:	and    eax,0xe1288f2b
  40d5b4:	ret    0xcc75
  40d5b7:	mov    dl,0x5e
  40d5b9:	aam    0xc1
  40d5bb:	rcl    DWORD PTR [eax+0x79],cl
  40d5be:	dec    edx
  40d5bf:	scas   eax,DWORD PTR es:[edi]
  40d5c0:	or     dh,BYTE PTR [ebp+0x7]
  40d5c3:	push   esp
  40d5c4:	pusha  
  40d5c5:	retf   
  40d5c6:	mov    esp,0x2a9c42c0
  40d5cb:	rcl    dh,cl
  40d5cd:	(bad)  
  40d5ce:	xchg   edx,eax
  40d5cf:	jle    0x40d61e
  40d5d1:	xchg   ebp,eax
  40d5d2:	add    dl,BYTE PTR [edi]
  40d5d4:	rcr    dh,1
  40d5d6:	fld    QWORD PTR [eax+eax*4]
  40d5d9:	retf   0x8f8e
  40d5dc:	pop    es
  40d5dd:	push   eax
  40d5de:	cmc    
  40d5df:	jne    0x40d5c7
  40d5e1:	imul   ebp,DWORD PTR [ebx-0x1c],0x19
  40d5e5:	push   ds
  40d5e6:	test   eax,0x951e5501
  40d5eb:	xor    bl,BYTE PTR [ebx-0x28]
  40d5ee:	jl     0x40d62c
  40d5f0:	and    ecx,DWORD PTR [edi]
  40d5f2:	pop    ebx
  40d5f3:	sub    eax,0x7d2e4328
  40d5f8:	and    DWORD PTR [esi],eax
  40d5fa:	sub    eax,0xa128514b
  40d5ff:	push   0xffffff8d
  40d601:	add    DWORD PTR [edx+eax*1-0x1a3345e5],ebx
  40d608:	mov    bl,0xb3
  40d60a:	ficomp WORD PTR [edi-0x6b]
  40d60d:	jnp    0x40d67f
  40d60f:	xchg   BYTE PTR [ecx+0x4c7b4814],ch
  40d615:	pop    esp
  40d616:	or     eax,0x2a062aa7
  40d61b:	out    0x12,eax
  40d61d:	dec    ebx
  40d61e:	push   ss
  40d61f:	pop    esp
  40d620:	push   ss
  40d621:	dec    edi
  40d622:	dec    eax
  40d623:	mov    WORD PTR [ecx+0xa],?
  40d626:	cmp    esp,DWORD PTR [esi]
  40d628:	jbe    0x40d646
  40d62a:	mov    ds:0x904f93f,eax
  40d62f:	xor    eax,0x3fbc04e9
  40d634:	outs   dx,BYTE PTR ds:[esi]
  40d635:	cmp    ebp,DWORD PTR [edi+ebp*4]
  40d638:	inc    edi
  40d639:	dec    edi
  40d63a:	mov    bh,BYTE PTR [ebx+0x202901a2]
  40d640:	add    bl,0xb1
  40d643:	xor    DWORD PTR [esi-0x29],ebx
  40d646:	or     DWORD PTR [eax],ebx
  40d648:	push   es
  40d649:	mov    cl,0x80
  40d64c:	lods   al,BYTE PTR ds:[esi]
  40d64d:	(bad)  
  40d64e:	push   ecx
  40d64f:	push   ss
  40d650:	out    0x84,eax
  40d652:	pop    edx
  40d653:	inc    ebp
  40d654:	clc    
  40d655:	das    
  40d656:	fisttp WORD PTR [edi+0x50]
  40d659:	pop    edi
  40d65a:	jmp    0x2e3c128e
  40d65f:	mov    bl,0x1d
  40d661:	(bad)  
  40d663:	jbe    0x40d644
  40d665:	das    
  40d666:	cmc    
  40d667:	mov    ecx,0xc319670a
  40d66c:	jl     0x40d64e
  40d66e:	xor    ebx,edx
  40d670:	sub    BYTE PTR [ecx+0x3055cf2],0xa5
  40d677:	out    0xf6,eax
  40d679:	xchg   edi,eax
  40d67a:	xchg   ebx,ebx
  40d67c:	sbb    eax,0xcb9cc9f5
  40d681:	lea    edi,[edx+0x52]
  40d684:	leave  
  40d685:	outs   dx,DWORD PTR ds:[esi]
  40d686:	add    DWORD PTR [esi+ebx*1-0x26fcbd80],ebx
  40d68d:	push   edx
  40d68e:	punpckhdq mm2,QWORD PTR [edx-0x16814d1d]
  40d695:	mov    eax,ds:0x6bae0ff0
  40d69a:	mov    eax,DWORD PTR [eax+0x4]
  40d69d:	jge    0x40d64c
  40d69f:	xchg   edi,eax
  40d6a0:	or     DWORD PTR ds:0x6751d12d,eax
  40d6a6:	or     BYTE PTR [ebx+0x2f89bb46],dh
  40d6ac:	out    dx,eax
  40d6ad:	lahf   
  40d6ae:	in     eax,dx
  40d6af:	mov    ch,cl
  40d6b1:	sub    BYTE PTR [edi+edi*4+0x20],bh
  40d6b5:	(bad)  
  40d6b6:	and    al,0x3d
  40d6b8:	repz push edi
  40d6ba:	mov    cl,0x9a
  40d6bc:	mov    esi,fs
  40d6be:	fcmovbe st,st(0)
  40d6c0:	js     0x40d73b
  40d6c2:	push   esp
  40d6c3:	dec    ecx
  40d6c4:	lods   al,BYTE PTR ds:[esi]
  40d6c5:	in     al,0x65
  40d6c7:	push   ds
  40d6c8:	xor    dl,dh
  40d6ca:	cmp    esp,ebp
  40d6cc:	xchg   DWORD PTR [ebp+0x7d],ebx
  40d6cf:	pushf  
  40d6d0:	mov    esp,0xf1b0e5a6
  40d6d5:	popa   
  40d6d6:	adc    ah,ah
  40d6d8:	pop    ebp
  40d6d9:	add    al,0x9b
  40d6db:	int3   
  40d6dc:	mov    edx,0x9e38614f
  40d6e1:	sahf   
  40d6e2:	inc    edi
  40d6e3:	push   ebp
  40d6e4:	mov    WORD PTR [edi-0x5bedad62],cs
  40d6ea:	and    al,0xde
  40d6ed:	jp     0x40d721
  40d6ef:	call   0xeaeb:0x2dc24241
  40d6f6:	cli    
  40d6f7:	fwait
  40d6f8:	xchg   esi,eax
  40d6f9:	loopne 0x40d74b
  40d6fb:	fcom   DWORD PTR [ecx]
  40d6fd:	pop    edi
  40d6fe:	push   ss
  40d6ff:	es push cs
  40d701:	inc    esi
  40d702:	or     edi,DWORD PTR [esi-0x3dd07a5c]
  40d708:	push   ebp
  40d709:	stos   BYTE PTR es:[edi],al
  40d70a:	xor    DWORD PTR [esi-0x12],edi
  40d70d:	outs   dx,DWORD PTR ds:[esi]
  40d70e:	inc    edi
  40d70f:	leave  
  40d710:	(bad)  
  40d711:	lds    ebx,FWORD PTR [esi+0x1f]
  40d714:	fstp   QWORD PTR [ecx+0x5fe85b4e]
  40d71a:	retf   
  40d71b:	retf   
  40d71c:	add    esi,DWORD PTR [esi]
  40d71e:	in     eax,dx
  40d71f:	dec    eax
  40d720:	stos   DWORD PTR es:[edi],eax
  40d721:	sbb    BYTE PTR [eax],0xc0
  40d724:	sahf   
  40d725:	pushf  
  40d726:	mov    bh,0x9f
  40d728:	clc    
  40d729:	lahf   
  40d72a:	mov    ebx,edx
  40d72c:	ret    0xb208
  40d72f:	leave  
  40d730:	jmp    0x40d778
  40d732:	pop    es
  40d733:	test   al,0x16
  40d735:	in     eax,0x1c
  40d737:	jnp    0x40d755
  40d739:	sub    DWORD PTR [edx+edx*2],esp
  40d73c:	jmp    0xdfb1011d
  40d741:	xchg   ecx,eax
  40d742:	sti    
  40d743:	lds    esi,FWORD PTR [eax-0x794ceb5e]
  40d749:	rcl    DWORD PTR [ebp+0x4babb905],1
  40d74f:	jnp    0x40d77a
  40d751:	jb     0x40d753
  40d753:	jmp    0x8988c180
  40d758:	out    dx,al
  40d759:	mov    WORD PTR [esp+eax*2+0x1a],ds
  40d75d:	xor    al,0x7d
  40d75f:	mov    bh,0x99
  40d761:	sar    BYTE PTR [ebp+0x737daeaf],1
  40d767:	add    ecx,ebx
  40d769:	stos   BYTE PTR es:[edi],al
  40d76a:	cwde   
  40d76b:	jg     0x40d73e
  40d76d:	(bad)  
  40d76e:	mov    ecx,0x4fc086b2
  40d773:	lea    ebx,[ecx+eiz*2-0x70]
  40d777:	push   edi
  40d778:	icebp  
  40d779:	outs   dx,DWORD PTR ds:[esi]
  40d77a:	jg     0x40d7cb
  40d77c:	sbb    bh,BYTE PTR [esp+ebx*4]
  40d77f:	mov    al,BYTE PTR [edx]
  40d781:	ins    DWORD PTR es:[edi],dx
  40d782:	cmp    al,0xec
  40d784:	(bad)  
  40d785:	and    bl,bh
  40d787:	jmp    0x40d7ae
  40d789:	daa    
  40d78a:	mov    dl,0xf8
  40d78c:	adc    dl,cl
  40d78e:	mov    ds:0xc6096302,eax
  40d793:	pop    ss
  40d794:	ins    DWORD PTR es:[edi],dx
  40d795:	es stos BYTE PTR es:[edi],al
  40d797:	cwde   
  40d798:	fstp   QWORD PTR [esi-0x5e]
  40d79b:	sbb    BYTE PTR [ebx-0x387b649a],0xfd
  40d7a2:	lods   al,BYTE PTR ds:[esi]
  40d7a3:	inc    ebp
  40d7a4:	loop   0x40d7d6
  40d7a6:	fs inc esi
  40d7a8:	add    DWORD PTR [eax-0x18401e9b],eax
  40d7ae:	inc    ecx
  40d7af:	pop    esp
  40d7b0:	dec    esp
  40d7b1:	cld    
  40d7b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7b3:	or     al,0x64
  40d7b5:	add    eax,0x8acaf7e2
  40d7ba:	fistp  DWORD PTR [edx+0x7f]
  40d7bd:	aas    
  40d7be:	jmp    DWORD PTR [ebx+0x1f2233fb]
  40d7c4:	and    ch,BYTE PTR [esi]
  40d7c6:	fild   WORD PTR [edx]
  40d7c8:	xor    esi,DWORD PTR ds:0x9152912f
  40d7ce:	or     DWORD PTR [ecx-0x69],ebp
  40d7d1:	lock adc ebx,ebx
  40d7d4:	fwait
  40d7d5:	icebp  
  40d7d6:	inc    DWORD PTR [edx-0x76d979b1]
  40d7dc:	xor    DWORD PTR [edx+0x4b63f06a],esp
  40d7e2:	sbb    BYTE PTR [edi],al
  40d7e4:	fdiv   QWORD PTR [edx+ebp*2]
  40d7e7:	add    BYTE PTR [edx],dh
  40d7e9:	(bad)  
  40d7ea:	sbb    BYTE PTR [esi],dh
  40d7ec:	stos   DWORD PTR es:[edi],eax
  40d7ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ee:	scas   eax,DWORD PTR es:[edi]
  40d7ef:	shl    DWORD PTR [ebp+0x7a],cl
  40d7f2:	sub    eax,ebp
  40d7f4:	sbb    ah,dh
  40d7f6:	test   al,0x26
  40d7f8:	push   edi
  40d7f9:	loope  0x40d7d1
  40d7fb:	popa   
  40d7fc:	and    edx,DWORD PTR ds:0xa942977e
  40d802:	mov    bh,0x8c
  40d804:	arpl   WORD PTR [edx-0x2f4b3838],cx
  40d80a:	xchg   ecx,eax
  40d80b:	xor    DWORD PTR [edx-0x74],esp
  40d80e:	mov    edi,DWORD PTR [esi+0x6bffc509]
  40d814:	xchg   ecx,eax
  40d815:	pop    esi
  40d816:	adc    DWORD PTR [ecx+0x16],esp
  40d819:	pop    ds
  40d81a:	sub    bl,ah
  40d81c:	push   ebx
  40d81d:	add    DWORD PTR [ebx+0x3e],edi
  40d820:	and    eax,0xe79f2ad5
  40d825:	aad    0xd5
  40d827:	out    0x7,al
  40d829:	fs sahf 
  40d82b:	jmp    0x40d7ad
  40d82d:	scas   al,BYTE PTR es:[edi]
  40d82e:	retf   0x2396
  40d831:	rcl    eax,1
  40d833:	nop
  40d834:	jo     0x40d89c
  40d836:	add    bh,BYTE PTR [esi+0x5170df6b]
  40d83c:	xchg   esi,eax
  40d83d:	aas    
  40d83e:	inc    ecx
  40d83f:	enter  0x812f,0xf3
  40d843:	cmp    dh,BYTE PTR [edi-0x2c]
  40d846:	mov    al,ds:0xc42b71d4
  40d84b:	and    DWORD PTR [edx+0x6b],esp
  40d84e:	ds mov ah,0x7f
  40d851:	adc    BYTE PTR [ebx-0x7d],bh
  40d854:	or     eax,0xafec283f
  40d859:	ret    
  40d85a:	adc    al,0xe1
  40d85c:	xchg   edx,eax
  40d85d:	loope  0x40d881
  40d85f:	adc    al,0x97
  40d861:	mov    WORD PTR [edx+0x38],gs
  40d864:	push   ecx
  40d865:	bound  esp,QWORD PTR [ebx+eax*1-0x5a]
  40d869:	mov    eax,ds:0x2d527d27
  40d86e:	fs push edi
  40d870:	mov    BYTE PTR [edi-0x35],al
  40d873:	scas   eax,DWORD PTR es:[edi]
  40d874:	mov    BYTE PTR [ecx-0x4aca4638],dl
  40d87a:	add    eax,0xea751301
  40d87f:	jbe    0x40d81e
  40d881:	rcl    BYTE PTR [ebx*4-0x3f03b66],1
  40d888:	pusha  
  40d889:	aad    0x46
  40d88b:	in     eax,0x20
  40d88d:	out    0x59,al
  40d88f:	call   0x64fefeba
  40d894:	cmp    al,al
  40d896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d897:	fs mov bh,0x2c
  40d89a:	push   ss
  40d89b:	repz pop edi
  40d89d:	mov    eax,0x98f01a54
  40d8a2:	jle    0x40d900
  40d8a4:	mov    BYTE PTR [ecx+0xcea61d5],dh
  40d8aa:	sar    DWORD PTR [ebp+0x6f],cl
  40d8ad:	out    dx,eax
  40d8ae:	mov    WORD PTR [ebx],?
  40d8b0:	mov    cs,edx
  40d8b2:	(bad)  
  40d8b3:	or     cl,BYTE PTR [ebx]
  40d8b5:	mov    edx,0x990986d0
  40d8ba:	xchg   esp,eax
  40d8bb:	or     BYTE PTR [eax-0x1372d2c5],0x1b
  40d8c2:	mov    bl,0x25
  40d8c4:	sbb    ebp,DWORD PTR [ebx]
  40d8c6:	stos   BYTE PTR es:[edi],al
  40d8c7:	or     eax,0xe96543b0
  40d8cc:	mov    ds:0x7378a14d,eax
  40d8d1:	loop   0x40d874
  40d8d3:	pop    ss
  40d8d4:	popa   
  40d8d5:	xchg   edi,eax
  40d8d6:	jmp    0xff00a78f
  40d8db:	sub    DWORD PTR [edx-0xd4f762],edi
  40d8e1:	ret    0x2e5b
  40d8e4:	sbb    al,BYTE PTR [ecx-0x19]
  40d8e7:	mov    dl,0xd4
  40d8e9:	mov    eax,ds:0x99dc61b5
  40d8ee:	pop    edi
  40d8ef:	sub    DWORD PTR [esi],eax
  40d8f1:	not    BYTE PTR [eax-0x7c]
  40d8f4:	int    0x83
  40d8f6:	or     eax,0x9964d389
  40d8fb:	adc    dh,0xc2
  40d8fe:	stos   DWORD PTR es:[edi],eax
  40d8ff:	sbb    al,0x30
  40d901:	dec    ecx
  40d902:	push   edx
  40d903:	(bad)  
  40d904:	outs   dx,DWORD PTR ds:[esi]
  40d905:	frstor [ebp-0x2e83194e]
  40d90b:	loopne 0x40d8a5
  40d90d:	dec    ecx
  40d90e:	bound  esp,QWORD PTR [eax+0x5e]
  40d911:	mov    ch,0x9e
  40d913:	dec    ebp
  40d914:	lock mov ebx,0x3a06921e
  40d91a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d91b:	scas   al,BYTE PTR es:[edi]
  40d91c:	jmp    0x5adccb1
  40d921:	mov    bh,0xb
  40d923:	xlat   BYTE PTR fs:[ebx]
  40d925:	xor    DWORD PTR [edx+0x3f9bc23f],esp
  40d92b:	(bad)  
  40d92c:	je     0x40d946
  40d92e:	sahf   
  40d92f:	push   ebp
  40d930:	xor    BYTE PTR [edx],ch
  40d932:	sbb    eax,0x78b37977
  40d937:	mov    edx,0xd28be9cb
  40d93c:	mov    esi,0xe977bd34
  40d941:	test   DWORD PTR [ecx+esi*1],edi
  40d944:	imul   edx,ecx,0xe48f2908
  40d94a:	mov    bl,BYTE PTR [edi-0x1c2fe3a4]
  40d950:	fisub  DWORD PTR [ebx]
  40d952:	pop    ss
  40d953:	push   ebp
  40d954:	jge    0x40d91b
  40d956:	xchg   esp,eax
  40d957:	fnstsw WORD PTR [ebx+0x4bda99c1]
  40d95d:	adc    ebx,DWORD PTR [ebp-0x63c8e3af]
  40d963:	mul    ebx
  40d965:	pop    ebp
  40d966:	dec    edi
  40d967:	daa    
  40d968:	mov    eax,0xf07d3498
  40d96d:	cdq    
  40d96e:	loop   0x40d9ba
  40d970:	(bad)  
  40d971:	pop    ebx
  40d972:	xor    al,0x9d
  40d974:	jg     0x40d985
  40d976:	jle    0x40d9da
  40d978:	jbe    0x40d955
  40d97a:	sub    BYTE PTR [ecx],bh
  40d97c:	or     eax,0xffffff9a
  40d97f:	jp     0x40d9eb
  40d981:	(bad)  
  40d982:	imul   eax,DWORD PTR [eax],0x7
  40d985:	outs   dx,BYTE PTR ds:[esi]
  40d986:	sub    ecx,DWORD PTR [ebx-0x32ce0a30]
  40d98c:	int    0xe1
  40d98e:	jle    0x40d976
  40d990:	cmp    eax,0x26e711ff
  40d995:	xchg   ebp,eax
  40d996:	jmp    0x40d932
  40d998:	inc    eax
  40d999:	jnp    0x40d9e3
  40d99b:	mov    WORD PTR [ebp+0x72],?
  40d99e:	fmul   QWORD PTR [eax+0x51]
  40d9a1:	out    0x36,al
  40d9a3:	(bad)  
  40d9a4:	not    DWORD PTR [ebp-0x45]
  40d9a7:	aad    0x73
  40d9a9:	add    bh,BYTE PTR [esi+0x7ef74d5b]
  40d9af:	ins    DWORD PTR es:[edi],dx
  40d9b0:	inc    edx
  40d9b1:	lods   al,BYTE PTR ds:[esi]
  40d9b2:	pop    ss
  40d9b3:	rcl    BYTE PTR [ecx-0x4492dba3],1
  40d9b9:	call   0xb7d2:0xb74fcbe9
  40d9c0:	mov    WORD PTR [edx],es
  40d9c2:	loope  0x40d96a
  40d9c4:	xchg   BYTE PTR [edi],ah
  40d9c6:	xor    DWORD PTR [edi-0x6afac610],edi
  40d9cc:	(bad)  
  40d9cd:	xchg   esi,eax
  40d9ce:	dec    ebx
  40d9cf:	daa    
  40d9d0:	scas   al,BYTE PTR es:[edi]
  40d9d1:	pop    ecx
  40d9d2:	loope  0x40d957
  40d9d4:	push   eax
  40d9d5:	jo     0x40d9f1
  40d9d7:	imul   eax,DWORD PTR [ebp+0x25],0x2f25c072
  40d9de:	(bad)  
  40d9e1:	mov    edi,0x9841f86c
  40d9e6:	(bad)  
  40d9e7:	pop    ebp
  40d9e8:	xor    cl,dl
  40d9ea:	and    dl,BYTE PTR [edi]
  40d9ec:	xor    al,0x2a
  40d9ee:	add    BYTE PTR ds:0xbed26aed,0x3a
  40d9f5:	outs   dx,BYTE PTR ds:[esi]
  40d9f6:	mov    WORD PTR [esi*4-0x6e47d64e],?
  40d9fd:	jl     0x40d9a2
  40d9ff:	mov    BYTE PTR [edx*8-0x2309aa4],dl
  40da06:	addr16 ret 
  40da08:	fcmovne st,st(7)
  40da0a:	mov    ch,BYTE PTR [esi-0x11]
  40da0d:	lea    ebp,[ebp+0x5b]
  40da10:	mov    DWORD PTR [ebp-0x7b],ebp
  40da13:	stc    
  40da14:	xor    eax,0xe05963c6
  40da19:	or     eax,0x7e2465b6
  40da1e:	mov    ecx,DWORD PTR [esi-0x3bf1ad28]
  40da24:	je     0x40da5e
  40da26:	dec    edx
  40da27:	and    ebx,DWORD PTR [eax]
  40da29:	ret    
  40da2a:	sub    eax,0x87d355c2
  40da2f:	adc    BYTE PTR [eax],ch
  40da31:	pop    ecx
  40da32:	xchg   edi,eax
  40da33:	xchg   esp,eax
  40da34:	push   esp
  40da35:	add    al,0xff
  40da37:	push   ss
  40da38:	or     bl,0x87
  40da3b:	and    DWORD PTR [ecx-0x35],0x734a5bec
  40da42:	jmp    0x40da2a
  40da44:	mov    cl,0x4f
  40da46:	or     al,0xb3
  40da48:	(bad)  
  40da49:	fistp  QWORD PTR [edi+edx*4+0x242b9723]
  40da50:	fidivr DWORD PTR [esi+0x5e9b2dd3]
  40da56:	fldcw  WORD PTR [edi+0x57]
  40da59:	out    0xcb,al
  40da5b:	and    edi,ebp
  40da5d:	aam    0x63
  40da5f:	loope  0x40da2b
  40da61:	loop   0x40dab9
  40da63:	loope  0x40da83
  40da65:	mov    esi,0x6ead774
  40da6a:	stos   DWORD PTR es:[edi],eax
  40da6b:	inc    eax
  40da6c:	dec    esi
  40da6d:	push   edi
  40da6e:	ret    
  40da6f:	inc    DWORD PTR [ebx]
  40da71:	leave  
  40da72:	dec    ebp
  40da73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da74:	xlat   BYTE PTR ds:[ebx]
  40da75:	fwait
  40da76:	std    
  40da77:	mov    ch,0xc6
  40da79:	sbb    esp,ebp
  40da7b:	stos   BYTE PTR es:[edi],al
  40da7c:	ins    DWORD PTR es:[edi],dx
  40da7d:	jne    0x40dad9
  40da7f:	ins    DWORD PTR es:[edi],dx
  40da80:	cmp    eax,0x5536b296
  40da85:	mov    edi,0x2f2cd225
  40da8a:	ja     0x40dac3
  40da8c:	jb     0x40dad2
  40da8e:	aaa    
  40da8f:	rol    DWORD PTR [eax+0x51c3b557],cl
  40da95:	mov    dh,0xd3
  40da97:	add    BYTE PTR [esi],cl
  40da99:	sub    eax,0xc209eab6
  40da9e:	(bad)  
  40da9f:	fcom   DWORD PTR [eax+0x63]
  40daa2:	inc    edi
  40daa3:	mov    cl,0x90
  40daa5:	call   0x5f61:0x76228eab
  40daac:	jge    0x40daae
  40daae:	xchg   DWORD PTR [edi],edx
  40dab0:	and    esp,DWORD PTR [esi+0x1a]
  40dab3:	pop    esp
  40dab4:	push   ebx
  40dab5:	rol    DWORD PTR [ebp-0x12],0xe3
  40dab9:	mov    DWORD PTR [ebx],esp
  40dabb:	jne    0x40db2a
  40dabd:	cmp    dl,BYTE PTR [ecx+0x5d]
  40dac0:	mov    dh,0xe4
  40dac2:	ss push eax
  40dac4:	push   esp
  40dac5:	cmp    al,0x5
  40dac7:	cwde   
  40dac8:	in     eax,dx
  40dac9:	stos   DWORD PTR es:[edi],eax
  40daca:	push   edi
  40dacb:	mov    esi,0x841c8e83
  40dad0:	sbb    ebx,esp
  40dad2:	call   0x7a490e70
  40dad7:	push   ebp
  40dad8:	stos   DWORD PTR es:[edi],eax
  40dad9:	enter  0xaf37,0x59
  40dadd:	adc    edx,DWORD PTR [ecx+0x15215404]
  40dae3:	mov    al,0x83
  40dae5:	outs   dx,DWORD PTR ds:[esi]
  40dae6:	neg    ecx
  40dae8:	int3   
  40dae9:	(bad)  
  40daea:	bound  ebp,QWORD PTR [ecx-0xf4c000e]
  40daf0:	fsub   QWORD PTR [esi]
  40daf2:	mov    ah,0x72
  40daf5:	outs   dx,BYTE PTR ds:[esi]
  40daf6:	(bad)  
  40daf7:	push   edx
  40daf8:	jns    0x40dad6
  40dafa:	or     al,0x4f
  40dafc:	ins    BYTE PTR es:[edi],dx
  40dafd:	test   eax,0x93d0862c
  40db02:	sbb    dl,BYTE PTR [ecx-0x55caf340]
  40db08:	je     0x40daad
  40db0a:	mov    ds:0x19f1f838,al
  40db0f:	inc    edi
  40db10:	xchg   esi,eax
  40db11:	xor    al,0xe1
  40db13:	cmp    esi,DWORD PTR [esi]
  40db15:	gs cld 
  40db17:	xchg   ecx,eax
  40db18:	mov    cl,dh
  40db1a:	pop    esi
  40db1b:	pop    es
  40db1c:	add    al,BYTE PTR [esi+0x7]
  40db1f:	xchg   edi,eax
  40db20:	xchg   bl,dl
  40db22:	loop   0x40db6f
  40db24:	js     0x40db95
  40db26:	xor    BYTE PTR [esi-0x337d9462],ah
  40db2c:	sub    BYTE PTR [eax-0x598ef8d6],0x10
  40db33:	add    DWORD PTR [edi+ebp*1],ebx
  40db36:	mov    eax,DWORD PTR [eax]
  40db38:	jmp    0x6b61:0xb2adc20c
  40db3f:	fucompp 
  40db41:	mov    bh,0xba
  40db43:	mov    eax,ds:0x7731eb2f
  40db48:	(bad)  
  40db49:	and    BYTE PTR [ebx+eax*4],bl
  40db4c:	inc    esi
  40db4d:	or     BYTE PTR [bx+di],bl
  40db50:	xor    esi,DWORD PTR [ecx+0x3e57d521]
  40db56:	sbb    al,0xa3
  40db58:	dec    esp
  40db59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db5a:	cmp    ah,bl
  40db5c:	nop
  40db5d:	adc    esi,DWORD PTR [ecx]
  40db5f:	fucom  st(7)
  40db61:	mov    ebp,0x357f8934
  40db66:	sbb    DWORD PTR [ebx],edx
  40db68:	retf   0x29c8
  40db6b:	(bad)  
  40db6c:	pop    edi
  40db6d:	in     eax,0xed
  40db6f:	cli    
  40db70:	sub    esi,DWORD PTR [edi-0x8]
  40db73:	arpl   WORD PTR [ecx-0x2885ce93],si
  40db79:	sub    ecx,esp
  40db7b:	retf   0xcb4a
  40db7e:	xchg   ebp,eax
  40db7f:	lds    eax,FWORD PTR [edx]
  40db81:	out    0x84,al
  40db83:	icebp  
  40db84:	adc    eax,0xeb8237cb
  40db89:	idiv   esp
  40db8b:	xor    BYTE PTR [ebp-0x22],dh
  40db8e:	aam    0xef
  40db90:	bound  ecx,QWORD PTR [eax+0x27]
  40db93:	out    dx,eax
  40db94:	inc    esp
  40db95:	lock ins DWORD PTR es:[edi],dx
  40db97:	jne    0x6224d490
  40db9d:	lds    ebp,FWORD PTR [ecx+edi*8+0x3d]
  40dba1:	jnp    0x40db66
  40dba3:	int    0x5b
  40dba5:	xor    DWORD PTR [esi+0x5b2461fe],esi
  40dbab:	adc    BYTE PTR [esp+edi*8+0x7b88a20f],ch
  40dbb2:	and    edi,DWORD PTR [edi]
  40dbb4:	stos   BYTE PTR es:[edi],al
  40dbb5:	add    dl,BYTE PTR [edi-0x7d]
  40dbb8:	enter  0xf313,0x9e
  40dbbc:	imul   ecx,DWORD PTR [ecx+0x2],0x3d
  40dbc0:	in     eax,0xf9
  40dbc2:	(bad)  [ebp+0x79]
  40dbc5:	fstp   TBYTE PTR [eax*8+0x4ff0abfb]
  40dbcc:	pusha  
  40dbcd:	outs   dx,BYTE PTR ds:[esi]
  40dbcf:	idiv   DWORD PTR [esp+eiz*2]
  40dbd2:	test   DWORD PTR [eax-0x64],ebx
  40dbd5:	lods   al,BYTE PTR ds:[esi]
  40dbd6:	adc    eax,0x8a1dc55b
  40dbdb:	fld    st(0)
  40dbdd:	mov    esi,0x8902faae
  40dbe2:	push   ebp
  40dbe3:	pop    ds
  40dbe4:	shl    BYTE PTR [ebx+0x1643267b],cl
  40dbea:	fisub  DWORD PTR [ebp+0x2a]
  40dbed:	sub    ecx,0xffffffc3
  40dbf0:	ja     0x40db9f
  40dbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbf3:	cwde   
  40dbf4:	mov    dl,0xdc
  40dbf6:	dec    edi
  40dbf7:	adc    dh,cl
  40dbf9:	jmp    0xcf0af9f1
  40dbfe:	jge    0x40dbca
  40dc00:	lock adc esp,DWORD PTR [edx]
  40dc03:	xor    dl,ch
  40dc05:	scas   eax,DWORD PTR es:[edi]
  40dc06:	dec    ecx
  40dc07:	sbb    BYTE PTR [esi+0x5a5a8a25],0xe4
  40dc0e:	scas   al,BYTE PTR es:[edi]
  40dc0f:	sub    ebx,ebp
  40dc11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc12:	addr16 mov ebp,0xdad56732
  40dc18:	dec    eax
  40dc19:	in     al,dx
  40dc1a:	pusha  
  40dc1b:	sar    DWORD PTR [eax+0x45ef0ead],cl
  40dc21:	mov    bl,0x3b
  40dc23:	sbb    ch,BYTE PTR [ecx]
  40dc25:	jmp    0x40dc8d
  40dc27:	daa    
  40dc28:	push   esi
  40dc29:	mov    edi,0xf8437f0c
  40dc2e:	push   ebp
  40dc2f:	fldcw  WORD PTR [eax+0x2]
  40dc32:	outs   dx,BYTE PTR ds:[esi]
  40dc33:	cld    
  40dc34:	add    eax,0x1ed3ec35
  40dc39:	and    ebp,DWORD PTR [eax+0x17]
  40dc3c:	sbb    esi,esp
  40dc3e:	mov    esi,0x855f61cb
  40dc43:	pusha  
  40dc44:	cmp    eax,0xeee133ee
  40dc49:	jbe    0x40dbe6
  40dc4b:	cmp    eax,0xa1a27f99
  40dc50:	add    DWORD PTR ds:0x6de1749f,esi
  40dc56:	sbb    bh,BYTE PTR [ebp-0x43]
  40dc59:	mov    edx,0xc3d4cbe5
  40dc5e:	xor    esp,DWORD PTR [ecx-0x673723ff]
  40dc64:	call   0x3d7e:0x92b2a2de
  40dc6b:	sub    eax,0x180d8e95
  40dc70:	mov    ecx,0xfd5bbfe3
  40dc75:	es mov dh,0xa6
  40dc78:	lahf   
  40dc79:	shl    BYTE PTR [eax+edi*2+0x6b9e059e],0x47
  40dc81:	cld    
  40dc82:	xchg   esp,eax
  40dc83:	dec    ebx
  40dc84:	cmp    dh,ah
  40dc86:	sub    BYTE PTR [ecx+esi*8-0x15e89292],cl
  40dc8d:	xchg   ebp,eax
  40dc8e:	sub    al,0xc0
  40dc90:	add    DWORD PTR [edi+eax*8+0x67],edi
  40dc94:	loopne 0x40dc24
  40dc96:	mov    ds:0x13da1d6,al
  40dc9b:	cld    
  40dc9c:	or     edi,DWORD PTR [edi+ecx*8+0x6a]
  40dca0:	(bad)  
  40dca1:	cmc    
  40dca2:	pop    ecx
  40dca3:	xchg   ebp,eax
  40dca4:	cs mov edx,0x6ea469a2
  40dcaa:	inc    ebx
  40dcab:	and    DWORD PTR [esi+esi*1+0x2dcbf6b5],ebx
  40dcb2:	(bad)
  40dcb6:	inc    eax
  40dcb7:	and    ah,BYTE PTR [ebp-0x3d]
  40dcba:	in     al,dx
  40dcbb:	int    0x67
  40dcbd:	or     DWORD PTR [eax],eax
  40dcbf:	sbb    dl,BYTE PTR ds:0x5bc3b7b0
  40dcc5:	push   ds
  40dcc6:	dec    esp
  40dcc7:	sbb    edx,DWORD PTR [esi]
  40dcc9:	add    esi,0x33308713
  40dccf:	pop    es
  40dcd0:	push   edx
  40dcd1:	sub    dh,BYTE PTR [edi+ecx*8]
  40dcd4:	push   ebx
  40dcd5:	sub    al,BYTE PTR [eax]
  40dcd7:	dec    eax
  40dcd8:	clc    
  40dcd9:	ja     0x40dd48
  40dcdb:	into   
  40dcdc:	xchg   edi,eax
  40dcdd:	dec    ecx
  40dcde:	int3   
  40dcdf:	pop    ds
  40dce0:	pop    ds
  40dce1:	xchg   ecx,eax
  40dce2:	call   0xa148:0x3d739d0d
  40dce9:	fcomp  DWORD PTR [ecx+ebx*4]
  40dcec:	stos   DWORD PTR es:[edi],eax
  40dced:	(bad)  
  40dcee:	idiv   BYTE PTR [esi+0x1d2b9007]
  40dcf4:	add    bh,BYTE PTR ss:[eax+0x38]
  40dcf8:	push   cs
  40dcf9:	aad    0x8
  40dcfb:	mov    BYTE PTR [ecx],ah
  40dcfd:	add    dh,BYTE PTR [eax-0x58]
  40dd00:	fwait
  40dd01:	inc    esi
  40dd02:	sbb    DWORD PTR [ebx-0x58b1c1ef],ebx
  40dd08:	xchg   esi,eax
  40dd09:	mov    al,dh
  40dd0b:	sbb    ecx,esp
  40dd0d:	xchg   ebp,eax
  40dd0e:	sub    DWORD PTR [esi],edx
  40dd10:	std    
  40dd11:	hlt    
  40dd12:	stc    
  40dd13:	(bad)  
  40dd14:	mov    bh,0xf8
  40dd16:	mov    bh,0xf2
  40dd18:	mov    ebp,0x656b3d89
  40dd1d:	retf   
  40dd1e:	arpl   WORD PTR [ecx+ebx*8+0x7d3b42df],di
  40dd25:	ja     0x40dd67
  40dd27:	dec    ebp
  40dd28:	std    
  40dd29:	add    al,0xbe
  40dd2b:	mov    dh,0x6e
  40dd2d:	les    edx,FWORD PTR [ebx]
  40dd2f:	sar    DWORD PTR [esi],0xc0
  40dd32:	jle    0x40dd59
  40dd34:	fidiv  DWORD PTR [eax+0x148cc6b3]
  40dd3a:	xor    DWORD PTR [ebx+0x2dfb38b7],edx
  40dd40:	jg     0x40ddb8
  40dd42:	cwde   
  40dd43:	imul   eax,DWORD PTR [edx],0x5c
  40dd46:	cmp    al,0x2b
  40dd48:	and    BYTE PTR [ebp-0x46],0xf6
  40dd4c:	std    
  40dd4d:	and    edx,ecx
  40dd4f:	hlt    
  40dd50:	xor    ebx,ebp
  40dd52:	pop    ebx
  40dd53:	mov    bh,0x95
  40dd55:	add    ch,BYTE PTR [edx+eax*8-0x191285f5]
  40dd5c:	outs   dx,DWORD PTR ds:[esi]
  40dd5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd5e:	or     eax,0x8eeb7733
  40dd63:	or     eax,0xb18daa6d
  40dd68:	(bad)  
  40dd69:	or     al,0xed
  40dd6b:	or     BYTE PTR [ecx-0xac29069],bh
  40dd71:	or     al,0xca
  40dd73:	(bad)  
  40dd74:	mov    ds:0xd9867278,al
  40dd79:	retf   
  40dd7a:	xchg   edi,eax
  40dd7b:	xchg   ecx,eax
  40dd7c:	mov    ds:0x4d887c62,al
  40dd81:	ret    
  40dd82:	cmp    al,0xd8
  40dd84:	jbe    0x40dd92
  40dd86:	push   esp
  40dd87:	add    DWORD PTR [ecx+0x5f],eax
  40dd8a:	jge    0x40dddd
  40dd8c:	dec    esp
  40dd8d:	xchg   edi,eax
  40dd8e:	inc    ebp
  40dd8f:	mov    ebp,0xaa95cb98
  40dd94:	fcomp  DWORD PTR [ecx+ecx*1-0x4]
  40dd98:	out    0xb,eax
  40dd9a:	pop    eax
  40dd9b:	add    eax,0x9fb4fb35
  40dda0:	fidivr DWORD PTR [ebp-0x14e4c2ca]
  40dda6:	sub    BYTE PTR [ebx],dl
  40dda8:	cs mov ecx,0xf07a7fb7
  40ddae:	adc    ch,BYTE PTR [ebp-0x7871d679]
  40ddb4:	test   al,0xfe
  40ddb6:	push   eax
  40ddb7:	pop    esi
  40ddb8:	sbb    BYTE PTR ds:0x530ea282,cl
  40ddbe:	dec    edi
  40ddbf:	or     eax,0x2889b4d
  40ddc4:	sub    DWORD PTR [edx+0x4a7cf95],0xffffffeb
  40ddcb:	fisubr WORD PTR [ebp-0x5d]
  40ddce:	pop    esp
  40ddcf:	inc    ebp
  40ddd0:	repnz xchg ecx,eax
  40ddd2:	push   cs
  40ddd3:	or     BYTE PTR [edi-0x6c],dh
  40ddd6:	cmp    eax,0xf53cdfd3
  40dddb:	jnp    0x40dd62
  40dddd:	inc    esi
  40ddde:	call   0xdf45:0x8d53af4a
  40dde5:	or     BYTE PTR [edi-0x73d0be84],dl
  40ddeb:	mov    al,ds:0xdf57c89c
  40ddf0:	pop    esp
  40ddf1:	xchg   ecx,eax
  40ddf2:	jmp    FWORD PTR [eax-0x46]
  40ddf5:	ror    bl,cl
  40ddf7:	inc    ebx
  40ddf8:	pop    ebp
  40ddf9:	(bad)  
  40ddfa:	sbb    eax,0xa81cf0fd
  40ddff:	fiadd  DWORD PTR [ebp+eax*2-0x1be31939]
  40de06:	lahf   
  40de07:	add    DWORD PTR [ebx-0x4cdaed4f],edi
  40de0d:	add    DWORD PTR [esi+ecx*2-0x3fb113e6],ecx
  40de14:	(bad)  
  40de15:	mov    ebx,0x36a16a02
  40de1a:	cmp    ebx,DWORD PTR ss:[eax+0x4ed7c791]
  40de21:	fcomi  st,st(3)
  40de23:	cmp    ebp,DWORD PTR [esi-0xa]
  40de26:	fild   WORD PTR [edi-0x54]
  40de29:	add    eax,0x8b0030ff
  40de2e:	dec    edi
  40de2f:	mov    ebx,ds
  40de31:	sahf   
  40de32:	push   eax
  40de33:	bound  esi,QWORD PTR [eax+0x512b1e85]
  40de39:	jae    0x40ddff
  40de3b:	retf   
  40de3c:	cmp    bh,BYTE PTR [ecx+0x6d8eb702]
  40de42:	cmp    eax,0x4a73c8c3
  40de47:	and    al,al
  40de49:	add    esp,esp
  40de4b:	les    esi,FWORD PTR [esi]
  40de4d:	xchg   BYTE PTR [esp+edi*2+0x73387ab8],bh
  40de54:	pop    esi
  40de55:	or     eax,0xe8790352
  40de5a:	pop    edx
  40de5b:	jecxz  0x40de6c
  40de5d:	mov    esi,DWORD PTR [edx+edx*4]
  40de60:	add    DWORD PTR [edi+0x4b98ff2c],0x6d2f1ed3
  40de6a:	in     al,dx
  40de6b:	ss pop esi
  40de6d:	xor    ebp,esi
  40de6f:	call   0x37a2:0x53acf8c3
  40de76:	adc    BYTE PTR [edi],dh
  40de78:	push   esp
  40de79:	xchg   ebp,eax
  40de7a:	jno    0x40deb2
  40de7c:	jecxz  0x40de06
  40de7e:	adc    ch,BYTE PTR [eax]
  40de80:	repnz sbb al,0xdd
  40de83:	ret    
  40de84:	imul   esi,eax,0x2ef410cc
  40de8a:	jno    0x40de89
  40de8c:	dec    ecx
  40de8d:	out    dx,al
  40de8e:	ins    BYTE PTR es:[edi],dx
  40de8f:	push   0xc
  40de91:	cli    
  40de92:	imul   ebp,DWORD PTR [esi+0x36e7b541],0xffffffb4
  40de99:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40de9b:	mov    ebp,0x1225a317
  40dea0:	sbb    eax,0xe19367dd
  40dea5:	pop    edx
  40dea6:	lahf   
  40dea7:	sub    eax,0x44d1201e
  40deac:	push   0x30
  40deae:	aam    0x28
  40deb0:	push   edi
  40deb1:	jp     0x40df00
  40deb3:	mov    fs,eax
  40deb5:	mov    dh,0x53
  40deb7:	or     dl,0xc4
  40deba:	push   es
  40debb:	(bad)  
  40debc:	jp     0x40dee6
  40debe:	push   ds
  40debf:	pop    edx
  40dec0:	out    0xc3,al
  40dec2:	cli    
  40dec3:	xchg   DWORD PTR [esi],esi
  40dec5:	call   0xdc7498bd
  40deca:	or     eax,0x6f7a0724
  40decf:	adc    al,0x9
  40ded1:	out    0x71,eax
  40ded3:	out    0xf3,eax
  40ded5:	leave  
  40ded6:	repnz push ss
  40ded8:	leave  
  40ded9:	push   ebp
  40deda:	shl    DWORD PTR [edi+0x3def4119],0xf
  40dee1:	jns    0x40df0f
  40dee3:	mov    ds:0xa1207beb,eax
  40dee8:	adc    eax,0xa9445aa1
  40deed:	push   eax
  40deee:	cdq    
  40deef:	mov    eax,ds:0xfa354d23
  40def4:	rcl    BYTE PTR [edi],1
  40def6:	inc    edx
  40def7:	js     0x40df59
  40def9:	mov    ss,WORD PTR [ebx-0x732d4d63]
  40deff:	push   cs
  40df00:	sbb    eax,0xa1035c05
  40df05:	and    edi,DWORD PTR [ebp+0x50]
  40df08:	ret    
  40df09:	xchg   BYTE PTR [edx+0x62],al
  40df0c:	adc    DWORD PTR [ebx],edi
  40df0e:	outs   dx,DWORD PTR ds:[esi]
  40df0f:	add    DWORD PTR [ebp+ebp*4+0x68],esp
  40df13:	or     DWORD PTR [edx-0x54],0xf39eed1f
  40df1a:	inc    esp
  40df1b:	xor    DWORD PTR gs:[edx],0x930e830
  40df22:	mov    ds:0x278c3485,eax
  40df27:	mov    bh,0x5a
  40df29:	mov    DWORD PTR [esi],ebp
  40df2b:	(bad)  [eax+eax*1]
  40df2e:	push   0x97dae99c
  40df33:	push   ss
  40df34:	mov    DWORD PTR [esi-0x15],ebp
  40df37:	adc    DWORD PTR [ebx-0x2f79c4f1],0xa33045cf
  40df41:	shr    BYTE PTR [ebx+0x76],cl
  40df44:	scas   eax,DWORD PTR es:[edi]
  40df45:	arpl   WORD PTR [eax-0x29b3a5b4],sp
  40df4b:	mov    dh,0x18
  40df4d:	mov    cl,0x2b
  40df4f:	in     eax,0x22
  40df51:	mov    edx,DWORD PTR [ecx-0x4d]
  40df54:	stos   DWORD PTR es:[edi],eax
  40df55:	mov    al,ds:0xc31edd63
  40df5a:	test   DWORD PTR [ebx+0x3390fa6a],0xa046e699
  40df64:	out    dx,eax
  40df65:	mov    bl,0xb7
  40df67:	mov    edx,0x5e1db29c
  40df6c:	sar    eax,1
  40df6e:	pop    esp
  40df6f:	ficom  DWORD PTR [eax+eiz*2+0x54]
  40df73:	imul   edx
  40df75:	out    dx,al
  40df76:	add    al,0x6b
  40df78:	imul   esi,DWORD PTR ds:0x4634c1b3,0xb84d603b
  40df82:	push   esp
  40df83:	lds    esp,FWORD PTR [esi]
  40df85:	hlt    
  40df86:	loope  0x40dfaf
  40df88:	jge    0x40df94
  40df8a:	or     ebx,DWORD PTR [edx+0x1f]
  40df8d:	inc    ebx
  40df8e:	(bad)  
  40df8f:	adc    DWORD PTR [eax],ecx
  40df91:	int    0x41
  40df93:	jecxz  0x40dfb8
  40df95:	inc    ebx
  40df96:	dec    eax
  40df97:	cmp    DWORD PTR [eax+0x29f65ab2],ebx
  40df9d:	xchg   ecx,eax
  40df9e:	mov    dh,0x16
  40dfa0:	imul   BYTE PTR [ebx]
  40dfa2:	mul    DWORD PTR [eax-0x53682b70]
  40dfa8:	sbb    edx,DWORD PTR [esi-0x159f1fc9]
  40dfae:	dec    edi
  40dfaf:	adc    DWORD PTR [ecx-0x3],esi
  40dfb2:	daa    
  40dfb3:	ins    BYTE PTR es:[edi],dx
  40dfb4:	mov    dl,0xde
  40dfb6:	xlat   BYTE PTR ds:[ebx]
  40dfb7:	adc    DWORD PTR [edx-0x15],edx
  40dfba:	fwait
  40dfbb:	dec    ebp
  40dfbc:	(bad)  
  40dfbd:	jae    0x40dfef
  40dfbf:	pop    ds
  40dfc0:	mov    ah,0x17
  40dfc2:	dec    eax
  40dfc3:	out    0x46,al
  40dfc5:	jmp    0x553a:0xe655a71d
  40dfcc:	out    0x64,eax
  40dfce:	sti    
  40dfcf:	push   ebx
  40dfd0:	lea    ebp,[ebx+0x58]
  40dfd3:	jle    0x40dfd9
  40dfd5:	mov    ah,0x61
  40dfd7:	ret    0x319a
  40dfda:	daa    
  40dfdb:	or     eax,DWORD PTR [ebx-0x58556a65]
  40dfe1:	pop    esi
  40dfe2:	bound  eax,QWORD PTR [ebx]
  40dfe4:	adc    bh,0x64
  40dfe7:	das    
  40dfe8:	out    0xfe,al
  40dfea:	out    0x69,al
  40dfec:	scas   al,BYTE PTR es:[edi]
  40dfed:	imul   ebp,DWORD PTR [edi+0x3a],0xfffffffe
  40dff1:	hlt    
  40dff2:	outs   dx,BYTE PTR ds:[esi]
  40dff3:	push   ebp
  40dff4:	inc    ebx
  40dff5:	pop    esi
  40dff6:	(bad)  
  40dff7:	dec    edi
  40dff8:	dec    ecx
  40dff9:	xchg   ebp,eax
  40dffa:	push   0x16cbbb93
  40dfff:	lock dec esp
  40e001:	jnp    0x40e078
  40e003:	sbb    al,0xaf
  40e005:	stc    
  40e006:	sbb    BYTE PTR [ebx+0x64],dh
  40e009:	cmp    al,0xd2
  40e00b:	or     dh,cl
  40e00d:	push   ebp
  40e00e:	jmp    0x421b2fe4
  40e013:	aaa    
  40e014:	add    ebx,0x59202999
  40e01a:	cmp    ebp,edi
  40e01c:	test   BYTE PTR [eax-0x1f08e1d6],ah
  40e022:	jmp    0xb2cd6e1e
  40e027:	mov    ah,0xf4
  40e029:	sub    al,0x4d
  40e02b:	push   eax
  40e02c:	cmp    al,0x45
  40e02e:	ss jp  0x40e0ad
  40e031:	jb     0x40e077
  40e033:	leave  
  40e034:	leave  
  40e035:	inc    ebp
  40e036:	int    0x60
  40e038:	push   ds
  40e039:	call   0x4fdf:0x4e846dee
  40e040:	leave  
  40e041:	mov    eax,0xf35d92d3
  40e046:	mov    bl,0xa8
  40e048:	sub    BYTE PTR [edx+0x6e290a4b],cl
  40e04e:	dec    edi
  40e04f:	cwde   
  40e050:	add    bl,dl
  40e052:	mov    cl,0xbb
  40e054:	stc    
  40e055:	jbe    0x40e06e
  40e057:	or     eax,0x9198fd8f
  40e05c:	xor    DWORD PTR [esi+0xd],0xffffff80
  40e060:	stos   DWORD PTR es:[edi],eax
  40e061:	pop    esp
  40e062:	inc    eax
  40e063:	xchg   esi,eax
  40e064:	xor    eax,0xf30c0c2c
  40e069:	mov    ecx,0xbebf326e
  40e06e:	mov    cl,0x5a
  40e070:	pop    edx
  40e071:	sbb    DWORD PTR [esi-0x33],ebp
  40e074:	cwde   
  40e075:	adc    esp,esi
  40e077:	push   esp
  40e078:	outs   dx,BYTE PTR ds:[esi]
  40e079:	push   esi
  40e07a:	sar    eax,0x37
  40e07d:	push   edx
  40e07e:	inc    esi
  40e07f:	adc    dl,cl
  40e081:	push   es
  40e082:	dec    edx
  40e083:	(bad)  
  40e084:	sahf   
  40e085:	or     cl,BYTE PTR [ebp-0x74cf03c7]
  40e08b:	(bad)  
  40e08c:	sbb    al,0xbc
  40e08e:	xchg   BYTE PTR [ebx-0x6627d602],al
  40e094:	outs   dx,BYTE PTR ds:[esi]
  40e095:	fwait
  40e096:	out    dx,eax
  40e097:	sub    al,0xfb
  40e099:	sbb    al,0x5e
  40e09b:	dec    edx
  40e09c:	and    DWORD PTR [edi-0x46a7d52a],eax
  40e0a2:	cmp    ch,al
  40e0a4:	mov    edx,DWORD PTR [eax-0x56833924]
  40e0aa:	push   0xffffffe4
  40e0ac:	imul   edx,DWORD PTR [ebp+0x3def9f65],0x34
  40e0b3:	mov    dh,0xad
  40e0b5:	mov    ds:0x39df232a,al
  40e0ba:	xlat   BYTE PTR ds:[ebx]
  40e0bb:	div    bh
  40e0bd:	xchg   esi,eax
  40e0be:	jp     0x40e07c
  40e0c0:	add    ebp,DWORD PTR ds:0x64a13fbf
  40e0c6:	mov    bl,0xd0
  40e0c8:	call   FWORD PTR [eax]
  40e0ca:	cmp    al,0x92
  40e0cc:	call   0xda8d1969
  40e0d1:	sti    
  40e0d2:	arpl   WORD PTR [ebp+0x1306a0c5],cx
  40e0d8:	imul   esp,DWORD PTR [bx-0x79],0xffffff81
  40e0dd:	int    0xec
  40e0df:	cmp    DWORD PTR [ecx+0x3ceb8419],ebx
  40e0e5:	fucomip st,st(4)
  40e0e7:	lods   al,BYTE PTR ds:[esi]
  40e0e8:	lea    edi,[esi-0x56]
  40e0eb:	xor    bh,al
  40e0ed:	push   eax
  40e0ee:	mov    ch,0xb3
  40e0f0:	aaa    
  40e0f1:	rol    BYTE PTR [eax],1
  40e0f3:	ret    0x75f8
  40e0f6:	sahf   
  40e0f7:	adc    BYTE PTR [edi+0x79],0x60
  40e0fb:	or     al,ch
  40e0fd:	cdq    
  40e0fe:	clc    
  40e0ff:	xchg   esi,eax
  40e100:	sub    BYTE PTR [esi],bh
  40e102:	sbb    al,0x84
  40e104:	push   ebx
  40e105:	out    dx,al
  40e106:	lea    ebx,[ebx-0x74c5873e]
  40e10c:	out    dx,al
  40e10d:	dec    esp
  40e10e:	in     eax,dx
  40e10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e110:	in     al,0x3
  40e112:	das    
  40e113:	and    al,0x16
  40e115:	inc    edx
  40e116:	pop    edx
  40e117:	js     0x40e11a
  40e119:	imul   eax,DWORD PTR [edx-0x5adfb100],0x2d65d0b
  40e123:	outs   dx,DWORD PTR ds:[esi]
  40e124:	mov    dh,0x9d
  40e126:	sub    al,0x28
  40e128:	mov    ebp,0x5f6aedfd
  40e12d:	jle    0x40e173
  40e12f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e130:	in     al,0x3e
  40e132:	rol    DWORD PTR ds:0xcffef36f,cl
  40e138:	cld    
  40e139:	stos   BYTE PTR es:[edi],al
  40e13a:	popf   
  40e13b:	mov    ch,al
  40e13d:	aas    
  40e13e:	clc    
  40e13f:	int3   
  40e140:	dec    edi
  40e141:	call   0xe79:0x52e719b0
  40e148:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e149:	sub    edi,DWORD PTR [ecx-0x33531f79]
  40e14f:	retf   
  40e150:	stos   DWORD PTR es:[edi],eax
  40e151:	jge    0x40e17c
  40e153:	lods   al,BYTE PTR ds:[esi]
  40e154:	cmp    ch,bh
  40e156:	cmp    DWORD PTR [ebp-0x9],ecx
  40e159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e15a:	dec    ecx
  40e15b:	popf   
  40e15c:	inc    eax
  40e15d:	(bad)  
  40e15e:	ja     0x40e1c8
  40e160:	mov    ds:0x8fb3144,al
  40e165:	or     eax,0xf891b564
  40e16a:	cmc    
  40e16b:	jb     0x40e11c
  40e16d:	jle    0x40e1ac
  40e16f:	cmc    
  40e170:	in     eax,0xd2
  40e172:	ins    DWORD PTR es:[edi],dx
  40e173:	mov    bl,0x70
  40e175:	daa    
  40e176:	popa   
  40e177:	neg    DWORD PTR [esi]
  40e179:	fstp   TBYTE PTR ds:0x95ac204a
  40e17f:	xchg   DWORD PTR ss:[edx+0x69],edx
  40e183:	mov    dl,0xb6
  40e185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e186:	outs   dx,BYTE PTR ds:[esi]
  40e187:	lods   eax,DWORD PTR ds:[esi]
  40e188:	dec    ecx
  40e189:	icebp  
  40e18a:	xchg   edi,eax
  40e18b:	inc    edi
  40e18c:	adc    BYTE PTR [ebx+0x1e],ah
  40e18f:	bound  ebp,QWORD PTR [edx]
  40e191:	int    0xfe
  40e193:	test   eax,0xd01fdbfd
  40e198:	(bad)
  40e19d:	adc    BYTE PTR [eax],ch
  40e19f:	add    DWORD PTR [ebp+0x7f4ffddf],esp
  40e1a5:	mov    edi,0x68ecd0c7
  40e1aa:	fisttp QWORD PTR [esp+ebp*4-0x10]
  40e1ae:	or     al,0xe8
  40e1b0:	pop    ss
  40e1b1:	jmp    0x93c6:0x88985998
  40e1b8:	push   esp
  40e1b9:	int    0x1d
  40e1bb:	aad    0x90
  40e1bd:	cmp    edx,DWORD PTR [esi]
  40e1bf:	sbb    edi,DWORD PTR [ecx+esi*4]
  40e1c2:	call   0xf49f5723
  40e1c7:	push   edi
  40e1c8:	sbb    al,0xa5
  40e1ca:	enter  0x65d,0xdd
  40e1ce:	ds stc 
  40e1d0:	sbb    eax,0x727b3418
  40e1d5:	fdivr  st(6),st
  40e1d7:	addr16 jne 0x40e1b5
  40e1da:	ins    BYTE PTR es:[edi],dx
  40e1db:	dec    edx
  40e1dc:	mov    eax,ds:0x22050228
  40e1e1:	push   cs
  40e1e2:	retf   0x5b15
  40e1e5:	add    al,0x9f
  40e1e7:	shr    BYTE PTR [edi+0x21],cl
  40e1ea:	sbb    DWORD PTR [ebx+ecx*2-0x3e],ecx
  40e1ee:	push   ebx
  40e1ef:	in     al,dx
  40e1f0:	(bad)  
  40e1f1:	lds    edx,FWORD PTR [edi+0xc960c56]
  40e1f7:	shl    DWORD PTR [ebx],0x4
  40e1fa:	ror    BYTE PTR ds:0x80b3c15b,1
  40e200:	ins    BYTE PTR es:[edi],dx
  40e201:	pop    ebp
  40e202:	daa    
  40e203:	mov    ebx,0xcc39887f
  40e208:	adc    al,0x12
  40e20a:	jbe    0x40e1d7
  40e20c:	xchg   DWORD PTR [esi+eiz*4],edi
  40e20f:	std    
  40e210:	shr    BYTE PTR [ebx],0x74
  40e213:	jp     0x40e19a
  40e215:	add    esi,DWORD PTR [ecx-0x3b]
  40e218:	nop
  40e219:	ror    DWORD PTR [eax],cl
  40e21b:	sub    ebp,edi
  40e21d:	dec    ebp
  40e21e:	push   ecx
  40e21f:	pushf  
  40e220:	(bad)  
  40e221:	call   0x782aaf60
  40e226:	es mov dh,0x74
  40e229:	lock mov DWORD PTR [ebp-0x787e8762],ecx
  40e230:	fcomp  DWORD PTR [ebx-0x12736bb]
  40e236:	mov    ebp,0xa57ae22e
  40e23b:	adc    eax,DWORD PTR es:[edx+ecx*2+0x8]
  40e240:	cmp    DWORD PTR [eax+0x2b],ebp
  40e243:	dec    esi
  40e244:	ret    
  40e245:	(bad)  
  40e246:	imul   esp,DWORD PTR [ebx+0x8],0xed6c8c42
  40e24d:	dec    ebp
  40e24e:	mov    edx,DWORD PTR [edi-0x31]
  40e251:	je     0x40e2bc
  40e253:	mov    eax,0x7168d08f
  40e258:	ficomp WORD PTR [ecx+0x6f]
  40e25b:	sbb    bl,BYTE PTR [edx+0x69ff05b9]
  40e261:	loop   0x40e284
  40e263:	adc    al,0x65
  40e265:	stos   BYTE PTR es:[edi],al
  40e266:	arpl   WORD PTR [edi+0x3d226c54],di
  40e26c:	test   BYTE PTR [esi+ecx*1+0x658b92cf],cl
  40e273:	rcr    al,cl
  40e275:	mov    ebp,0x58c4d6f8
  40e27a:	mov    ebp,DWORD PTR ds:0x3a4a0a14
  40e280:	push   edi
  40e281:	lods   al,BYTE PTR ds:[esi]
  40e282:	jmp    0xa003c4d0
  40e287:	xchg   edx,eax
  40e288:	jecxz  0x40e2c4
  40e28a:	push   ecx
  40e28b:	aam    0xc0
  40e28d:	adc    BYTE PTR [esi+0x52],dh
  40e290:	xchg   esp,eax
  40e291:	test   ecx,0xa09fe3e9
  40e297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e298:	shl    edx,0xc9
  40e29b:	jbe    0x40e2ce
  40e29d:	sbb    edx,DWORD PTR [ebp-0x72a1c77a]
  40e2a3:	cwde   
  40e2a4:	enter  0x35f9,0x80
  40e2a8:	dec    edi
  40e2a9:	xchg   ebp,eax
  40e2aa:	stos   BYTE PTR es:[edi],al
  40e2ab:	mov    al,0x13
  40e2ad:	pop    edx
  40e2ae:	jae    0x40e269
  40e2b0:	retf   
  40e2b1:	repz es xor al,0x7e
  40e2b5:	popf   
  40e2b6:	loop   0x40e2a3
  40e2b8:	push   edi
  40e2b9:	test   BYTE PTR [ebx],cl
  40e2bb:	inc    ebp
  40e2bc:	xchg   esi,eax
  40e2bd:	adc    eax,0x68bf259d
  40e2c2:	mov    bl,0xe7
  40e2c4:	dec    esp
  40e2c5:	in     al,dx
  40e2c6:	sub    eax,0x8cb8c87b
  40e2cb:	es push eax
  40e2cd:	push   edi
  40e2ce:	inc    eax
  40e2cf:	test   al,0x25
  40e2d2:	mov    edi,0x63d9e533
  40e2d7:	dec    edx
  40e2d8:	jge    0x40e299
  40e2da:	mov    ds:0x57d03eeb,al
  40e2df:	jns    0x40e29b
  40e2e1:	or     al,0x11
  40e2e3:	std    
  40e2e4:	call   0x40b7bbc5
  40e2e9:	mov    edi,0x6031fbba
  40e2ee:	lock jg 0x40e289
  40e2f1:	neg    ch
  40e2f3:	dec    BYTE PTR [edx-0xb]
  40e2f6:	aas    
  40e2f7:	cmp    esi,DWORD PTR [eax-0x63]
  40e2fa:	mov    esp,0x23062242
  40e2ff:	gs pop es
  40e301:	mov    edx,0x7c49b955
  40e306:	aad    0xc3
  40e308:	out    dx,al
  40e309:	push   es
  40e30a:	shl    BYTE PTR ds:0x101b9c78,0x9a
  40e311:	xchg   ebx,eax
  40e312:	jne    0x40e381
  40e314:	fs sar si,1
  40e318:	stos   BYTE PTR es:[edi],al
  40e319:	std    
  40e31a:	test   DWORD PTR [ecx-0x4c],esi
  40e31d:	lods   eax,DWORD PTR ds:[esi]
  40e31e:	test   eax,0x897ce924
  40e323:	pop    ss
  40e324:	lea    eax,[eax+0x28f03759]
  40e32a:	sub    al,BYTE PTR [ebp+0x1e]
  40e32d:	nop
  40e32e:	imul   BYTE PTR [esi]
  40e330:	fisubr DWORD PTR [esi]
  40e332:	ror    DWORD PTR [eax],cl
  40e334:	ret    0xe66d
  40e337:	pop    ebx
  40e338:	cmp    al,0x19
  40e33a:	mov    dh,0x14
  40e33c:	mov    ds:0x2935c0ec,eax
  40e341:	les    ebp,FWORD PTR [esi]
  40e343:	cs sahf 
  40e345:	stos   DWORD PTR es:[edi],eax
  40e346:	mov    ah,0xb2
  40e348:	ins    BYTE PTR es:[edi],dx
  40e349:	(bad)  
  40e34b:	mov    dl,0xa4
  40e34d:	jg     0x40e37f
  40e34f:	lods   al,BYTE PTR ds:[esi]
  40e350:	inc    edi
  40e351:	aas    
  40e352:	shl    DWORD PTR [ebx+0x31],0x3a
  40e356:	lods   al,BYTE PTR ds:[esi]
  40e357:	call   0x7fbc:0x8a9ca39a
  40e35e:	and    DWORD PTR [ebx+0x5b],ebp
  40e361:	out    dx,eax
  40e362:	sbb    BYTE PTR [esi+0x5100f47a],0xa9
  40e369:	(bad)  
  40e36c:	add    eax,0x933e9267
  40e371:	xchg   DWORD PTR [edx-0x6bb99fd0],esp
  40e377:	retf   0x1fa1
  40e37a:	push   ds
  40e37b:	mov    ch,0x3b
  40e37d:	and    dl,BYTE PTR [edx]
  40e37f:	add    edx,DWORD PTR [ecx-0x10e042e7]
  40e385:	or     dl,dl
  40e387:	dec    ebp
  40e388:	xor    al,0x33
  40e38a:	outs   dx,DWORD PTR ds:[esi]
  40e38b:	pop    ecx
  40e38c:	repnz (bad) 
  40e38e:	in     eax,0xa5
  40e390:	push   edi
  40e391:	dec    edi
  40e392:	xchg   esi,eax
  40e393:	nop
  40e394:	das    
  40e395:	addr16 out dx,eax
  40e397:	call   0x6668be98
  40e39c:	(bad)  
  40e39d:	jmp    FWORD PTR [esi]
  40e39f:	sti    
  40e3a0:	ss push 0xffffffab
  40e3a3:	call   0xb8b7:0xd4a0a2e6
  40e3aa:	and    BYTE PTR [eax-0x6b33b172],ch
  40e3b0:	and    eax,0xb5f61cf1
  40e3b5:	iret   
  40e3b6:	mov    esp,0x6212f03b
  40e3bb:	mov    ds:0x201971d1,eax
  40e3c0:	dec    ebp
  40e3c1:	in     al,0xf1
  40e3c3:	mov    al,0xc1
  40e3c5:	mov    ch,0xc3
  40e3c7:	mov    eax,ds:0x894c1c3
  40e3cc:	imul   eax,edx,0xffffffa0
  40e3cf:	jecxz  0x40e3df
  40e3d1:	test   eax,0x65d02bc0
  40e3d6:	and    BYTE PTR [edi+0x1fb1803f],dl
  40e3dc:	mov    WORD PTR [esi],cs
  40e3de:	repnz ins DWORD PTR es:[edi],dx
  40e3e0:	ret    
  40e3e1:	mov    al,0xe1
  40e3e3:	out    dx,eax
  40e3e4:	xor    bh,dh
  40e3e6:	inc    edi
  40e3e7:	push   edx
  40e3e8:	loope  0x40e42f
  40e3ea:	retf   
  40e3eb:	add    al,0xbf
  40e3ed:	aaa    
  40e3ee:	popf   
  40e3ef:	pusha  
  40e3f0:	add    ebx,DWORD PTR [eax+0x504f16ec]
  40e3f6:	inc    ebp
  40e3f7:	and    DWORD PTR [edi-0x6ab53be7],edi
  40e3fd:	pop    ebx
  40e3fe:	cmp    al,0xab
  40e400:	pop    es
  40e401:	jnp    0x40e3bf
  40e403:	pop    ebx
  40e404:	sbb    BYTE PTR [eax+edx*1-0x7803a960],0xab
  40e40c:	xor    ecx,ecx
  40e40e:	call   0x8a2f:0xb913b7d
  40e415:	mov    ecx,DWORD PTR ds:0x6c526ab5
  40e41b:	nop
  40e41c:	pop    ebp
  40e41d:	pop    edi
  40e41e:	sub    al,0x8e
  40e420:	aaa    
  40e421:	jmp    0x7b71:0xe3137dde
  40e428:	out    0x2a,al
  40e42a:	xor    ecx,DWORD PTR [esi]
  40e42c:	jae    0x40e4a3
  40e42e:	xchg   ebp,eax
  40e42f:	cmovl  ecx,ebx
  40e432:	(bad)  
  40e433:	xchg   edx,eax
  40e434:	inc    edx
  40e435:	(bad)  
  40e436:	clc    
  40e437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e438:	fistp  WORD PTR [ebp-0x425da75b]
  40e43e:	repnz ss inc esi
  40e441:	cmp    DWORD PTR [esi+eax*8-0x6cd84a7c],edx
  40e448:	loope  0x40e3e9
  40e44a:	stc    
  40e44b:	inc    edi
  40e44c:	fdivp  st(3),st
  40e44e:	sbb    dl,BYTE PTR [eax+0x5457a842]
  40e454:	outs   dx,BYTE PTR ds:[esi]
  40e455:	xchg   esp,eax
  40e456:	jae    0x40e435
  40e458:	(bad)  
  40e45a:	call   0x26a10635
  40e45f:	cmp    edi,DWORD PTR [ebp-0x79e2e730]
  40e465:	fiadd  WORD PTR [edx-0x22ae2a6d]
  40e46b:	cmp    BYTE PTR [esi],cl
  40e46d:	ret    
  40e46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e46f:	jle    0x40e47d
  40e471:	mov    ss,WORD PTR [ebp+0x5c920c2f]
  40e477:	mov    BYTE PTR [esi],dl
  40e479:	retf   0xc10c
  40e47c:	mov    BYTE PTR [ecx-0x7a9e03c4],dl
  40e482:	sbb    DWORD PTR [edi-0x23],0x45eb8af3
  40e489:	mov    al,ds:0x2c2b3c5f
  40e48e:	lock sbb ch,BYTE PTR [edi]
  40e491:	iret   
  40e492:	pop    esp
  40e493:	and    ebp,DWORD PTR [eax-0x6d3ece0d]
  40e499:	dec    ebp
  40e49a:	lds    esp,FWORD PTR [ecx+ebp*2-0x9ccfb63]
  40e4a1:	rcr    bh,cl
  40e4a3:	jno    0x40e507
  40e4a5:	in     al,dx
  40e4a6:	aad    0x33
  40e4a8:	and    eax,0x4c46780b
  40e4ad:	nop
  40e4ae:	imul   edx,eax,0xffffffa9
  40e4b1:	ins    BYTE PTR es:[edi],dx
  40e4b2:	and    ch,BYTE PTR [esi]
  40e4b4:	mov    ah,BYTE PTR [edi]
  40e4b6:	pusha  
  40e4b7:	dec    eax
  40e4b8:	ffree  st(6)
  40e4ba:	lock (bad) 
  40e4bc:	pop    eax
  40e4bd:	sbb    DWORD PTR [ebp-0x62ea40b1],0x15307f6
  40e4c7:	pop    ds
  40e4c8:	shl    DWORD PTR [ebp-0x3a8b9180],1
  40e4ce:	bound  edi,QWORD PTR [eax+0x35f08027]
  40e4d4:	or     DWORD PTR [eax],edx
  40e4d6:	mov    edx,0x913f61a7
  40e4db:	push   0x6
  40e4dd:	push   esi
  40e4de:	cdq    
  40e4df:	and    eax,0xd75f8648
  40e4e4:	push   ecx
  40e4e5:	(bad)  
  40e4e6:	dec    esi
  40e4e7:	mov    dl,0x44
  40e4e9:	jne    0x40e55d
  40e4eb:	ret    
  40e4ec:	add    al,0x16
  40e4ee:	inc    edi
  40e4ef:	inc    ecx
  40e4f0:	std    
  40e4f1:	adc    al,0xfb
  40e4f3:	rol    BYTE PTR [edx+0x28],cl
  40e4f6:	pop    ecx
  40e4f7:	inc    ebp
  40e4f8:	ins    BYTE PTR es:[edi],dx
  40e4f9:	test   al,0x9e
  40e4fb:	pop    ds
  40e4fc:	cli    
  40e4fd:	shl    BYTE PTR [esi+0x1f8982f1],cl
  40e503:	stc    
  40e504:	mov    ch,0x3c
  40e506:	or     ebp,DWORD PTR [eax+edi*4+0x536e3ff4]
  40e50d:	xor    eax,0x7ece8ef4
  40e512:	popf   
  40e513:	into   
  40e514:	mov    dh,0xe2
  40e516:	and    eax,0xff93750b
  40e51b:	arpl   WORD PTR [edx+0x1d10e118],di
  40e521:	aad    0xbf
  40e523:	push   ss
  40e524:	xor    al,0x4
  40e526:	(bad)  
  40e527:	in     al,0xf7
  40e529:	xor    ebx,eax
  40e52b:	mov    al,0xb7
  40e52d:	push   eax
  40e52e:	adc    DWORD PTR [edi-0x1be7d1a7],eax
  40e534:	bound  edx,QWORD PTR [esp+ebx*4+0x34]
  40e538:	data16 stos BYTE PTR es:[edi],al
  40e53a:	pop    ebx
  40e53b:	pop    ebp
  40e53c:	dec    edx
  40e53d:	les    eax,FWORD PTR [esi+ebx*8-0x7be204f7]
  40e544:	jno    0x40e5a7
  40e546:	inc    ebp
  40e547:	aas    
  40e548:	fs mov eax,0xefcc0edd
  40e54e:	loop   0x40e5a3
  40e550:	sbb    dh,BYTE PTR [ecx-0x4c]
  40e553:	xchg   edi,eax
  40e554:	mov    esi,0x2e35456f
  40e559:	add    eax,0xf82b8818
  40e55e:	shl    cl,1
  40e560:	add    al,0x68
  40e562:	enter  0x575b,0x61
  40e566:	retf   0x1906
  40e569:	push   ebp
  40e56a:	std    
  40e56b:	push   esp
  40e56c:	cmp    esp,DWORD PTR [ebx+0x58756c42]
  40e572:	jle    0x40e56b
  40e574:	jnp    0x40e5ad
  40e576:	mov    al,ds:0xbb6cd323
  40e57b:	jp     0x40e572
  40e57d:	or     esp,DWORD PTR ds:0x750c8b6a
  40e583:	nop
  40e584:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e585:	pop    ss
  40e586:	inc    edx
  40e587:	jmp    DWORD PTR [eax+0x5e]
  40e58a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e58c:	mov    BYTE PTR [edi+0x46e8e1e4],cl
  40e592:	mov    BYTE PTR ds:0x1bec73c6,ch
  40e598:	iret   
  40e599:	cli    
  40e59a:	inc    ecx
  40e59b:	loopne 0x40e527
  40e59d:	mov    bl,0xb7
  40e59f:	aas    
  40e5a0:	cli    
  40e5a1:	and    eax,0xa30934a2
  40e5a6:	jg     0x40e5d1
  40e5a8:	and    edx,eax
  40e5aa:	xchg   BYTE PTR [ecx+0x78b7f256],al
  40e5b0:	fwait
  40e5b1:	inc    ebp
  40e5b2:	mov    dl,0x48
  40e5b4:	sub    al,0x36
  40e5b6:	sub    al,0x65
  40e5b8:	mov    esp,esi
  40e5ba:	or     DWORD PTR [eax+0x6321d2c7],esi
  40e5c0:	push   cs
  40e5c1:	pushf  
  40e5c2:	jmp    0xa815:0x8a802b7c
  40e5c9:	arpl   WORD PTR [edx-0xec2b9e4],ax
  40e5cf:	dec    eax
  40e5d0:	rcl    BYTE PTR [ebp-0x14],cl
  40e5d3:	mov    BYTE PTR [edx+0x3670c2c0],al
  40e5d9:	mov    es,WORD PTR [esi+0x1ec3c8be]
  40e5df:	and    al,ah
  40e5e1:	mov    bl,0xa6
  40e5e3:	sbb    al,0x42
  40e5e5:	in     eax,0xf0
  40e5e7:	leave  
  40e5e8:	sbb    cl,BYTE PTR [esi+esi*2-0x63dfdfab]
  40e5ef:	pop    ss
  40e5f0:	cmp    edx,eax
  40e5f2:	mov    cl,0xc7
  40e5f4:	cdq    
  40e5f5:	mov    eax,0xe7527262
  40e5fa:	pushf  
  40e5fb:	fwait
  40e5fc:	jb     0x40e59f
  40e5fe:	lea    edi,[esp+ebx*2+0x58aacd78]
  40e605:	in     eax,0x2b
  40e607:	xor    dl,al
  40e609:	je     0x40e5cd
  40e60b:	pop    ss
  40e60c:	dec    ebp
  40e60d:	out    dx,eax
  40e60e:	fcmovnu st,st(3)
  40e610:	dec    DWORD PTR [esi-0x44]
  40e613:	jp     0x40e5c7
  40e615:	mov    bl,0x77
  40e617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e618:	out    dx,eax
  40e619:	std    
  40e61a:	shl    BYTE PTR [esi+ebx*1+0x4b],0x2d
  40e61f:	gs popa 
  40e621:	nop
  40e622:	test   BYTE PTR [edi],al
  40e624:	inc    esi
  40e625:	dec    edx
  40e626:	or     eax,0x1afe2dc1
  40e62b:	jbe    0x40e652
  40e62d:	mov    WORD PTR [ebx+esi*1-0x2ebb02a4],es
  40e634:	retf   0xaf02
  40e637:	fdivrp st(3),st
  40e639:	push   esi
  40e63a:	outs   dx,BYTE PTR ds:[esi]
  40e63b:	inc    edx
  40e63c:	rol    BYTE PTR [ecx+0x7a3c46e1],cl
  40e642:	push   edi
  40e643:	sahf   
  40e644:	xchg   edi,eax
  40e645:	rcl    BYTE PTR [edi-0x30fe2c02],0x17
  40e64c:	pop    es
  40e64d:	pop    edi
  40e64e:	sbb    BYTE PTR ds:0x627db35b,dh
  40e654:	retf   
  40e655:	call   0xeb69:0xaec80a52
  40e65c:	dec    DWORD PTR [eax+0x4a138ef3]
  40e662:	shr    dh,1
  40e664:	add    DWORD PTR gs:[esi],edx
  40e667:	fidiv  DWORD PTR [ebp+0x0]
  40e66a:	fisub  WORD PTR [esi-0x24]
  40e66d:	outs   dx,DWORD PTR ds:[esi]
  40e66e:	sub    bh,dh
  40e670:	in     al,dx
  40e671:	inc    ebx
  40e672:	lods   al,BYTE PTR ds:[esi]
  40e673:	sbb    DWORD PTR [edi-0x5d],eax
  40e676:	jmp    0x40e60e
  40e678:	lods   al,BYTE PTR ds:[esi]
  40e679:	mov    esp,0x41f17ca6
  40e67e:	add    al,0xc5
  40e680:	mov    dl,0xd3
  40e682:	pop    edi
  40e683:	shr    BYTE PTR [edx+0x39],cl
  40e686:	imul   esp,DWORD PTR [ecx+0x64e40aba],0xffffffad
  40e68d:	push   0x26747274
  40e692:	retf   0x837a
  40e695:	test   eax,0x30e71ed2
  40e69a:	pop    esp
  40e69b:	jno    0x40e6bc
  40e69d:	jo     0x40e69b
  40e69f:	rcr    ah,0x50
  40e6a2:	pop    edx
  40e6a3:	fst    DWORD PTR [ecx-0x6]
  40e6a6:	sbb    bl,bh
  40e6a8:	sbb    eax,0x7e5e9f41
  40e6ad:	dec    esp
  40e6ae:	mov    gs,edi
  40e6b0:	mov    ah,0xb0
  40e6b2:	imul   eax,DWORD PTR [ecx],0xda870834
  40e6b8:	pop    esi
  40e6b9:	gs push ds
  40e6bb:	mov    ah,0x2c
  40e6bd:	loop   0x40e67a
  40e6bf:	es dec ecx
  40e6c1:	stos   DWORD PTR es:[edi],eax
  40e6c2:	and    BYTE PTR [ebx+0x3a],ch
  40e6c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6c6:	mov    ds,ebp
  40e6c8:	cmp    DWORD PTR [ebx-0x4e],esp
  40e6cb:	xlat   BYTE PTR ds:[ebx]
  40e6cc:	mov    esi,0xec38eac8
  40e6d1:	sbb    bl,bh
  40e6d3:	repz jnp 0x40e727
  40e6d6:	xchg   esp,eax
  40e6d7:	push   ebp
  40e6d8:	mov    dh,0xa4
  40e6da:	pushf  
  40e6db:	and    ebp,DWORD PTR [ecx+0xd]
  40e6de:	add    al,0xeb
  40e6e0:	retf   
  40e6e1:	cli    
  40e6e2:	fisttp DWORD PTR [eax+esi*2]
  40e6e5:	xor    ebx,eax
  40e6e7:	cmp    BYTE PTR [eax-0x5e],al
  40e6ea:	cmp    eax,0x3ac83b4c
  40e6ef:	pop    esi
  40e6f0:	push   esi
  40e6f1:	xlat   BYTE PTR ds:[ebx]
  40e6f2:	add    eax,0x826269f6
  40e6f7:	add    ebx,DWORD PTR [edi+0x274409b9]
  40e6fd:	out    dx,al
  40e6fe:	outs   dx,BYTE PTR ds:[esi]
  40e6ff:	mov    bh,0xb4
  40e701:	add    al,0x0
  40e703:	mov    ds:0x793befde,al
  40e708:	adc    edi,ecx
  40e70a:	mov    al,ds:0x71451c10
  40e70f:	jo     0x40e6fb
  40e711:	sbb    esi,DWORD PTR [edi]
  40e713:	stc    
  40e714:	mov    WORD PTR [ecx+edi*4+0x70],es
  40e718:	sub    eax,0xc0a086fd
  40e71d:	pop    edx
  40e71e:	or     BYTE PTR [ecx-0x2b],bh
  40e721:	loop   0x40e7a1
  40e723:	scas   eax,DWORD PTR es:[edi]
  40e724:	jbe    0x40e703
  40e726:	add    BYTE PTR [eax+0x6],ah
  40e729:	fdivr  QWORD PTR [ebp+0x1a9301e6]
  40e72f:	pop    ss
  40e730:	sub    BYTE PTR [esp+eax*4+0x72b8052c],ah
  40e737:	(bad)  
  40e738:	out    dx,al
  40e739:	and    eax,0x47640451
  40e73e:	loopne 0x40e6c7
  40e740:	retf   
  40e741:	gs cmp ebx,esp
  40e744:	inc    ecx
  40e745:	test   DWORD PTR ds:0xf5127354,eax
  40e74b:	cmp    eax,0xa5e4998d
  40e750:	into   
  40e751:	in     eax,0x72
  40e753:	idiv   bl
  40e755:	xchg   ecx,eax
  40e756:	fadd   QWORD PTR [ebx-0x651edfbb]
  40e75c:	pop    ebp
  40e75d:	pop    esp
  40e75e:	cdq    
  40e75f:	imul   esp,DWORD PTR [esi+0x2c],0xffffffce
  40e763:	or     esi,DWORD PTR fs:[eax+0x7a]
  40e767:	or     DWORD PTR [ebp+0x8e6ac5e],0x32
  40e76e:	(bad)  
  40e76f:	dec    ebp
  40e770:	adc    BYTE PTR [edi+ebx*4-0x3eef493],0x2f
  40e778:	push   0x6c60910f
  40e77d:	xchg   ecx,eax
  40e77e:	arpl   sp,ax
  40e780:	and    DWORD PTR [edi-0x526d6b0f],ebx
  40e786:	icebp  
  40e787:	ret    0x2783
  40e78a:	jns    0x40e761
  40e78c:	sbb    bl,BYTE PTR [edx-0x6f8d936f]
  40e792:	jae    0x40e720
  40e794:	fwait
  40e795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e796:	push   ebp
  40e797:	sbb    al,0x82
  40e799:	(bad)  
  40e79a:	out    0x12,eax
  40e79c:	xchg   edi,edx
  40e79e:	mov    ebx,0x62e68d26
  40e7a3:	mov    ah,0x4b
  40e7a5:	lods   al,BYTE PTR ds:[esi]
  40e7a6:	adc    DWORD PTR [edx],ebx
  40e7a8:	xchg   ebp,eax
  40e7a9:	xchg   ecx,eax
  40e7aa:	inc    eax
  40e7ab:	jecxz  0x40e812
  40e7ad:	xchg   edx,eax
  40e7ae:	add    DWORD PTR [edx],ebx
  40e7b0:	adc    edx,esi
  40e7b2:	iret   
  40e7b3:	add    BYTE PTR [esi+0x6f],dl
  40e7b6:	mul    DWORD PTR [edx+0x70]
  40e7b9:	dec    edx
  40e7ba:	mov    ds:0xfe737ab1,eax
  40e7bf:	dec    ebx
  40e7c0:	or     esi,ebp
  40e7c2:	arpl   WORD PTR [esi],bx
  40e7c4:	xchg   ecx,eax
  40e7c5:	popf   
  40e7c6:	js     0x40e7d4
  40e7c8:	add    eax,0x1d0e64f2
  40e7cd:	mov    bl,0x36
  40e7cf:	fmul   DWORD PTR [esi-0x563c2f4]
  40e7d5:	mov    al,ds:0x5047ebda
  40e7da:	je     0x40e823
  40e7dc:	or     eax,0xaa123c52
  40e7e1:	cmp    al,0xa0
  40e7e3:	add    DWORD PTR [edi*2+0x4816192c],0x1596d61c
  40e7ee:	cmp    DWORD PTR [eax-0x4c272ebb],eax
  40e7f4:	aad    0x13
  40e7f6:	rcr    BYTE PTR [edi+0x47],1
  40e7f9:	mov    dl,0x51
  40e7fb:	ins    DWORD PTR es:[edi],dx
  40e7fc:	jl     0x40e7a7
  40e7fe:	xor    cl,BYTE PTR [edx+ebp*8]
  40e801:	mov    esi,0x13f0209
  40e806:	mov    ebp,0x6d118c92
  40e80b:	ror    BYTE PTR [esi+0x1d],1
  40e80e:	mov    al,BYTE PTR [ebp+0x7a4f884b]
  40e814:	and    esi,0xf001746e
  40e81a:	mov    DWORD PTR [edi-0x75],eax
  40e81d:	and    DWORD PTR [esi-0x3246a85e],0xbb350f87
  40e827:	in     eax,dx
  40e828:	out    0x92,al
  40e82a:	es cdq 
  40e82c:	int    0x95
  40e82e:	iret   
  40e82f:	(bad)  
  40e830:	out    0x6c,al
  40e832:	jne    0x40e825
  40e834:	cwde   
  40e835:	dec    eax
  40e836:	xor    eax,0x1bf1a4db
  40e83b:	jg     0x40e841
  40e83d:	nop
  40e83e:	fnsave ds:0x56acd351
  40e844:	lds    ebx,FWORD PTR [esi+0x73]
  40e847:	dec    esp
  40e848:	inc    ecx
  40e849:	icebp  
  40e84a:	aam    0x9c
  40e84c:	rcr    DWORD PTR [edi-0x4724259e],cl
  40e852:	dec    eax
  40e853:	add    DWORD PTR [esi-0x6786f452],0x7f
  40e85a:	xchg   esi,eax
  40e85b:	dec    edi
  40e85c:	jg     0x40e8d4
  40e85e:	ror    al,0xb5
  40e861:	sbb    eax,0xd41f72bb
  40e866:	adc    DWORD PTR [eax-0x7cdcf737],0xb765f5d7
  40e870:	lds    ebp,FWORD PTR ds:[eax]
  40e873:	std    
  40e874:	push   ebp
  40e875:	aad    0xee
  40e877:	xor    al,0x15
  40e879:	call   0x8ebf:0x5b3e40a9
  40e880:	jl     0x40e8e2
  40e882:	mov    gs,ebp
  40e884:	sub    eax,0x1db6b28d
  40e889:	pusha  
  40e88a:	or     eax,0xdb09d0ba
  40e88f:	mov    al,ds:0x75c27a8
  40e894:	lahf   
  40e895:	mov    edx,es
  40e897:	or     BYTE PTR [edx-0x3c],ch
  40e89a:	jns    0x40e82b
  40e89c:	or     eax,0xe2a83fbd
  40e8a1:	out    0x3,al
  40e8a3:	mov    bh,0x21
  40e8a5:	pop    edx
  40e8a6:	and    eax,0xe3203c4e
  40e8ab:	fbstp  TBYTE PTR [eax+ebx*8+0x66777123]
  40e8b2:	out    0x27,eax
  40e8b4:	mov    ds:0xe12bddeb,al
  40e8b9:	jmp    0x40e886
  40e8bb:	je     0x40e87f
  40e8bd:	(bad)  
  40e8be:	jo     0x40e88e
  40e8c0:	and    DWORD PTR [esi],ebp
  40e8c2:	mov    WORD PTR [ebp+0x26da63c3],ss
  40e8c8:	addr16 and eax,0x9307234c
  40e8ce:	or     edi,DWORD PTR [esi]
  40e8d0:	pop    ecx
  40e8d1:	int    0xb
  40e8d3:	adc    eax,0x486068e4
  40e8d8:	mov    bl,0xcd
  40e8da:	mov    ebp,0x82ff2d2
  40e8df:	lods   al,BYTE PTR ds:[esi]
  40e8e0:	pop    ds
  40e8e1:	test   al,0xc9
  40e8e3:	lea    edi,[ebx-0xe2883]
  40e8e9:	mov    ebx,0xc952066b
  40e8ee:	xchg   DWORD PTR [ecx-0x2588fb88],eax
  40e8f4:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40e8f6:	rcr    DWORD PTR [edx],cl
  40e8f8:	xchg   edx,eax
  40e8f9:	add    bh,BYTE PTR [ebp+0x3d]
  40e8fc:	hlt    
  40e8fd:	enter  0xe621,0xd2
  40e901:	pop    ss
  40e902:	add    eax,0xaa5757e8
  40e907:	aad    0x9a
  40e909:	(bad)  
  40e90a:	cld    
  40e90b:	cmp    DWORD PTR [ecx],ebx
  40e90d:	cli    
  40e90e:	dec    esi
  40e90f:	les    esi,FWORD PTR [ebp-0x6]
  40e912:	sub    cl,BYTE PTR [edx]
  40e914:	shr    esi,cl
  40e916:	cmp    DWORD PTR gs:[ebp+0x7e493525],ebp
  40e91d:	and    eax,0xc81df678
  40e922:	data16 fyl2x 
  40e925:	sub    esp,DWORD PTR [esp+edi*8]
  40e928:	mov    esi,0x89fc4274
  40e92d:	cld    
  40e92e:	call   DWORD PTR [esi+0x2d]
  40e931:	push   ebx
  40e932:	push   0x2ac7eb5d
  40e937:	xor    BYTE PTR ds:0xfa981d30,ch
  40e93d:	retf   
  40e93e:	out    0x5a,eax
  40e940:	push   0xfffffff2
  40e942:	xchg   ebx,eax
  40e943:	jecxz  0x40e913
  40e945:	fld    TBYTE PTR [esi+ebp*1-0x38cba33b]
  40e94c:	lock sbb BYTE PTR [edx-0x3f],ch
  40e950:	sbb    BYTE PTR [ecx-0x6a946183],bl
  40e956:	fld    TBYTE PTR [ebp+0x6ff49e7a]
  40e95c:	sub    DWORD PTR [esi+0x47],eax
  40e95f:	pop    ss
  40e960:	lock imul edx,esi,0x117e7949
  40e967:	and    edi,esp
  40e969:	sbb    edi,DWORD PTR [ebp+0xf]
  40e96c:	or     esi,DWORD PTR [edx-0x32]
  40e96f:	(bad)  
  40e970:	leave  
  40e971:	shl    DWORD PTR [ebx-0x1c9b224b],cl
  40e977:	lods   eax,DWORD PTR ds:[esi]
  40e978:	push   eax
  40e979:	xor    esp,edi
  40e97b:	mov    gs,edx
  40e97d:	jnp    0x40e926
  40e97f:	push   ss
  40e980:	mov    edi,DWORD PTR [eax-0x77]
  40e983:	in     eax,dx
  40e984:	(bad)
  40e987:	rol    BYTE PTR [eax+0x2277ef53],1
  40e98d:	punpcklbw mm1,DWORD PTR [edx+edi*8-0x6313cfa]
  40e995:	inc    ecx
  40e996:	mov    al,ds:0x99b42e92
  40e99b:	pop    ebx
  40e99c:	or     ah,BYTE PTR [edi-0x2ff2ddbd]
  40e9a2:	sti    
  40e9a3:	dec    edi
  40e9a4:	call   0x71b5:0x7d108d88
  40e9ab:	mov    ebx,0xe8bcae38
  40e9b0:	inc    ebp
  40e9b1:	sahf   
  40e9b2:	out    0x78,al
  40e9b4:	aam    0xf6
  40e9b6:	pop    esi
  40e9b7:	mov    dl,0x4d
  40e9b9:	or     ah,BYTE PTR [eax+0x7ea34ecf]
  40e9bf:	frstor [ecx]
  40e9c1:	std    
  40e9c2:	pusha  
  40e9c3:	in     al,dx
  40e9c4:	dec    edi
  40e9c5:	shr    BYTE PTR [edx],1
  40e9c7:	cmp    DWORD PTR [edi],0xe
  40e9ca:	add    eax,0x96beabe4
  40e9cf:	leave  
  40e9d0:	std    
  40e9d1:	xchg   esp,eax
  40e9d2:	lds    eax,FWORD PTR [edi]
  40e9d4:	adc    eax,ecx
  40e9d6:	sbb    al,0xb7
  40e9d8:	mov    al,0xee
  40e9da:	inc    edx
  40e9db:	retf   0x173f
  40e9de:	jle    0x40ea02
  40e9e0:	mov    ebp,0x3a94e0a8
  40e9e5:	outs   dx,BYTE PTR ds:[esi]
  40e9e6:	lods   eax,DWORD PTR ds:[esi]
  40e9e7:	cmp    ebx,DWORD PTR [ebx]
  40e9e9:	push   ecx
  40e9ea:	shl    DWORD PTR [ebx-0x39],0x85
  40e9ee:	xor    ch,bl
  40e9f0:	dec    eax
  40e9f1:	sub    eax,0x3c0c5851
  40e9f6:	cmp    al,0x2
  40e9f8:	inc    esp
  40e9f9:	arpl   sp,ax
  40e9fb:	fbstp  TBYTE PTR [edx+0x5c72a6d9]
  40ea01:	and    ebp,DWORD PTR [edi+ebp*1+0xb57bd58]
  40ea08:	sbb    BYTE PTR [esi],0x81
  40ea0b:	pop    ss
  40ea0c:	shl    esp,1
  40ea0e:	lods   eax,DWORD PTR ds:[esi]
  40ea0f:	sub    eax,0xa7a07d3c
  40ea14:	push   es
  40ea15:	pop    ds
  40ea16:	fmul   DWORD PTR ds:0x89f30455
  40ea1c:	or     BYTE PTR [edx],dh
  40ea1e:	xor    eax,0x84bb85d5
  40ea23:	inc    ebx
  40ea24:	lods   eax,DWORD PTR ds:[esi]
  40ea25:	lea    edi,[ecx]
  40ea27:	mov    ecx,0x3491e421
  40ea2c:	push   ebx
  40ea2d:	lods   al,BYTE PTR ds:[esi]
  40ea2e:	jl     0x40ea95
  40ea30:	fst    DWORD PTR [ebx]
  40ea32:	nop
  40ea33:	hlt    
  40ea34:	popf   
  40ea35:	and    BYTE PTR [ebx+0x4f],ah
  40ea38:	push   esp
  40ea39:	outs   dx,BYTE PTR ds:[esi]
  40ea3a:	loopne 0x40e9bf
  40ea3c:	stc    
  40ea3d:	mov    esi,0xabc53752
  40ea42:	in     eax,0x71
  40ea44:	sbb    edi,0xc878685d
  40ea4a:	jmp    0xb02d8d8a
  40ea4f:	arpl   WORD PTR ds:[ebx],di
  40ea52:	push   esp
  40ea53:	jle    0x40e9ed
  40ea55:	icebp  
  40ea56:	fwait
  40ea57:	mov    edx,0x8580f4a1
  40ea5c:	sbb    BYTE PTR [eax+eiz*2],0x20
  40ea60:	mov    eax,0xb8d82541
  40ea65:	dec    esp
  40ea66:	mov    eax,gs
  40ea68:	sbb    ecx,DWORD PTR [ebp-0x41]
  40ea6b:	cmp    al,0x2a
  40ea6d:	push   edi
  40ea6e:	cmp    bh,cl
  40ea70:	stos   BYTE PTR es:[edi],al
  40ea71:	sbb    eax,DWORD PTR [ebx]
  40ea73:	lods   al,BYTE PTR ds:[esi]
  40ea74:	ins    DWORD PTR es:[edi],dx
  40ea75:	and    dl,BYTE PTR [eax]
  40ea77:	inc    eax
  40ea78:	xor    esp,DWORD PTR [ecx]
  40ea7a:	int    0xc2
  40ea7c:	mov    eax,0x68af579d
  40ea81:	inc    ebp
  40ea82:	mov    edi,ds
  40ea84:	xor    edx,esp
  40ea86:	mov    dl,0x40
  40ea88:	loope  0x40ea9d
  40ea8a:	mov    bl,0x8a
  40ea8c:	jno    0x40ea5e
  40ea8e:	sbb    al,0x8a
  40ea90:	or     ebp,0x4
  40ea93:	mov    ebp,0x1ffdbf92
  40ea98:	imul   ecx,eax,0x149e57ed
  40ea9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea9f:	inc    eax
  40eaa0:	and    edi,eax
  40eaa2:	fsubrp st(2),st
  40eaa4:	mov    al,0xb6
  40eaa6:	jp     0x40eaef
  40eaa8:	stc    
  40eaa9:	lods   eax,DWORD PTR ds:[esi]
  40eaaa:	mov    ecx,0xefd99dfc
  40eaaf:	xchg   edx,eax
  40eab0:	inc    eax
  40eab1:	in     al,dx
  40eab2:	xchg   ebx,eax
  40eab3:	(bad)  
  40eab5:	mov    al,0xb8
  40eab7:	out    dx,al
  40eab8:	fistp  DWORD PTR [ecx]
  40eaba:	test   BYTE PTR [esi+0x54a1b9a3],0xcc
  40eac1:	dec    edi
  40eac2:	test   BYTE PTR [edx],cl
  40eac4:	dec    ebp
  40eac5:	mov    dl,0x75
  40eac7:	xchg   ecx,eax
  40eac8:	push   ss
  40eac9:	and    eax,0xa35bd57a
  40eace:	addr16 enter 0x56ae,0x82
  40ead3:	mov    eax,0xc44b3e30
  40ead8:	cdq    
  40ead9:	bound  ebx,QWORD PTR [ebx+ecx*4-0x4c]
  40eadd:	xor    DWORD PTR [ecx+0x7e],ecx
  40eae0:	or     dh,dh
  40eae2:	leave  
  40eae3:	push   ebp
  40eae4:	mov    bl,0x5f
  40eae6:	rcr    DWORD PTR [ebp+eax*4+0x2c],cl
  40eaea:	sub    eax,0x5f635c63
  40eaef:	push   es
  40eaf0:	ja     0x40eac0
  40eaf2:	fmulp  st(7),st
  40eaf4:	inc    esp
  40eaf5:	inc    eax
  40eaf6:	cwde   
  40eaf7:	mov    ebp,0x452e36d2
  40eafc:	mov    esi,0x6946f7e3
  40eb01:	mov    al,0x38
  40eb03:	dec    ecx
  40eb04:	mov    eax,ds:0xd6a379a3
  40eb09:	stc    
  40eb0a:	or     DWORD PTR [esi],0x605c9012
  40eb10:	mov    dh,0xf0
  40eb12:	daa    
  40eb13:	xor    eax,0x44ecfcd8
  40eb18:	and    al,0xe5
  40eb1a:	test   BYTE PTR [ebx-0x47],bl
  40eb1d:	jecxz  0x40eb9c
  40eb1f:	neg    DWORD PTR [ebx-0x13370261]
  40eb25:	test   DWORD PTR [esi],edi
  40eb27:	pop    ebx
  40eb28:	add    BYTE PTR [edi],dh
  40eb2a:	sahf   
  40eb2b:	jge    0x40eafb
  40eb2d:	(bad)  
  40eb2e:	fs retf 0xc0f1
  40eb32:	or     al,0xc0
  40eb34:	pop    es
  40eb35:	fdivr  QWORD PTR [edx+esi*8]
  40eb38:	cs (bad) 
  40eb3a:	repnz mov al,ds:0xed823e72
  40eb40:	mov    eax,0xd739720c
  40eb45:	mov    bh,0xf7
  40eb47:	mov    al,ds:0xd4e4827c
  40eb4c:	int3   
  40eb4d:	in     al,0x25
  40eb4f:	(bad)  
  40eb50:	xchg   ecx,eax
  40eb51:	push   ds
  40eb52:	jg     0x40eb91
  40eb54:	push   edi
  40eb55:	cmc    
  40eb56:	gs call 0x8e90:0x3b0b212a
  40eb5e:	or     bh,0xa6
  40eb61:	or     BYTE PTR [eax],ch
  40eb63:	outs   dx,BYTE PTR ds:[esi]
  40eb64:	inc    ebp
  40eb65:	mov    DWORD PTR [edi],eax
  40eb67:	xor    al,0xc9
  40eb69:	mov    bh,0xa1
  40eb6b:	push   ebp
  40eb6c:	mov    esi,0x7c268043
  40eb71:	lods   eax,DWORD PTR ds:[esi]
  40eb72:	mov    al,0x59
  40eb74:	shl    BYTE PTR [ebp+0x26e4f1ad],1
  40eb7a:	daa    
  40eb7b:	push   0xd2da7d7a
  40eb80:	sahf   
  40eb81:	jb     0x40eba7
  40eb83:	ret    0x4e74
  40eb86:	adc    DWORD PTR [ebx+0x7661f32d],eax
  40eb8c:	jle    0x40eb6a
  40eb8e:	(bad)  
  40eb90:	xlat   BYTE PTR ds:[ebx]
  40eb91:	sti    
  40eb92:	call   0x8eeb5b02
  40eb97:	stc    
  40eb98:	dec    esi
  40eb99:	mov    dh,0x40
  40eb9b:	daa    
  40eb9c:	(bad)  
  40eb9d:	je     0x40ebe9
  40eb9f:	mul    DWORD PTR [eax]
  40eba1:	int3   
  40eba2:	idiv   esi
  40eba4:	inc    esi
  40eba5:	fnstenv [edi]
  40eba7:	into   
  40eba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eba9:	fldcw  WORD PTR [eax]
  40ebab:	mov    ch,0xd0
  40ebad:	pop    ds
  40ebae:	push   esi
  40ebaf:	inc    esi
  40ebb0:	adc    dl,ah
  40ebb2:	shl    BYTE PTR [ebx-0x78b989c6],0x53
  40ebb9:	ret    
  40ebba:	rcl    DWORD PTR [esi-0x7ec8e34a],1
  40ebc0:	push   ds
  40ebc1:	shr    bh,cl
  40ebc3:	pop    ebx
  40ebc4:	mov    edx,DWORD PTR [ecx+0x65bc2321]
  40ebca:	push   ecx
  40ebcb:	rcr    DWORD PTR [esi-0x150b16],cl
  40ebd1:	mov    edx,DWORD PTR [ebx-0x56]
  40ebd4:	adc    BYTE PTR [eax-0x2a],ch
  40ebd7:	pop    ss
  40ebd8:	and    dl,BYTE PTR [edx+0x6b]
  40ebdb:	mov    WORD PTR [ebp+eax*4+0x1f2e6c09],es
  40ebe2:	dec    edi
  40ebe3:	dec    esp
  40ebe4:	push   DWORD PTR [esi+0x51]
  40ebe7:	xor    eax,0x484b6502
  40ebec:	lahf   
  40ebed:	sub    dl,BYTE PTR [edi-0x6b]
  40ebf0:	arpl   WORD PTR [edx+0x68],bx
  40ebf3:	popf   
  40ebf4:	fld    DWORD PTR [esi]
  40ebf6:	mov    dl,0x33
  40ebf8:	aas    
  40ebf9:	fstp   TBYTE PTR [edx+0x1a0abe40]
  40ebff:	inc    ebp
  40ec00:	jecxz  0x40ec25
  40ec02:	dec    edx
  40ec03:	inc    esp
  40ec04:	leave  
  40ec05:	dec    edx
  40ec06:	mov    ds:0xaf73b645,eax
  40ec0b:	(bad)
  40ec0e:	sbb    BYTE PTR [edi-0x38],cl
  40ec11:	ret    0x7cde
  40ec14:	das    
  40ec15:	and    bl,BYTE PTR [esi-0x64]
  40ec18:	mov    ch,0xab
  40ec1a:	and    ebp,DWORD PTR [ebp+ecx*8+0x4a]
  40ec1e:	cmc    
  40ec1f:	push   0xca464800
  40ec24:	dec    eax
  40ec25:	stos   DWORD PTR es:[edi],eax
  40ec26:	sub    DWORD PTR [edx+0x36283d14],esi
  40ec2c:	lea    esp,[eax+0x3d43015f]
  40ec32:	pop    esp
  40ec33:	xor    dh,BYTE PTR [ecx]
  40ec35:	pop    DWORD PTR [edx]
  40ec37:	xchg   DWORD PTR [ebx+edx*8+0x73f8a4d],esi
  40ec3e:	imul   edx,DWORD PTR [edx-0x4242ce8e],0xffffffb4
  40ec45:	jle    0x40ec02
  40ec47:	fcomi  st,st(1)
  40ec49:	sahf   
  40ec4a:	mov    edx,DWORD PTR [ebx+0x531c1202]
  40ec50:	std    
  40ec51:	popa   
  40ec52:	lahf   
  40ec53:	pop    ds
  40ec54:	into   
  40ec55:	cmp    edx,DWORD PTR [ecx]
  40ec57:	inc    eax
  40ec58:	sbb    eax,0x403ec590
  40ec5d:	lea    ebx,[ebx]
  40ec5f:	cmp    BYTE PTR [ecx-0x27],dl
  40ec62:	pop    edi
  40ec63:	call   FWORD PTR [edi+0x6a]
  40ec66:	or     eax,ecx
  40ec68:	arpl   WORD PTR [eax+edx*1-0x77],si
  40ec6c:	clc    
  40ec6d:	cmp    esp,DWORD PTR [ebx]
  40ec6f:	inc    ebx
  40ec70:	out    0x5e,eax
  40ec72:	ror    BYTE PTR [ecx-0x6a],1
  40ec75:	add    DWORD PTR [ebx-0xf],0xaba3420b
  40ec7c:	jb     0x40ecb5
  40ec7e:	lds    ebp,FWORD PTR gs:[eax]
  40ec81:	sub    eax,0x883e535b
  40ec86:	stos   DWORD PTR es:[edi],eax
  40ec87:	mov    WORD PTR ds:0x2f855ae4,?
  40ec8d:	lock cmp edi,esp
  40ec90:	pop    ebx
  40ec91:	push   eax
  40ec92:	jmp    0x9cf3:0x4a36deca
  40ec99:	xor    DWORD PTR [esi+0x12],0x17328f3e
  40eca0:	js     0x40ecf0
  40eca2:	push   ecx
  40eca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca4:	and    DWORD PTR [eax],esp
  40eca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eca7:	in     eax,dx
  40eca8:	add    eax,0xa49da2fa
  40ecad:	cld    
  40ecae:	pop    esp
  40ecaf:	jno    0x40ecd2
  40ecb1:	dec    ebx
  40ecb2:	data16 std 
  40ecb4:	or     dl,bh
  40ecb6:	je     0x40ec73
  40ecb8:	test   al,0x20
  40ecba:	push   edx
  40ecbb:	les    eax,FWORD PTR [ebp-0x34]
  40ecbe:	jle    0x40ecc6
  40ecc0:	bound  edi,QWORD PTR [ebp+0x26085a7a]
  40ecc6:	sbb    DWORD PTR [eax-0x4affc476],ebx
  40eccc:	call   0x99a4089f
  40ecd1:	push   edx
  40ecd2:	popa   
  40ecd3:	push   0x4f6c9292
  40ecd8:	dec    edx
  40ecd9:	push   DWORD PTR [ebx]
  40ecdb:	cdq    
  40ecdc:	push   eax
  40ecdd:	mov    edx,0x5721b64d
  40ece2:	mov    bh,0xde
  40ece4:	pop    ebp
  40ece5:	adc    cl,cl
  40ece7:	add    al,ah
  40ece9:	cli    
  40ecea:	sbb    ebp,ebx
  40ecec:	es inc ebp
  40ecee:	sti    
  40ecef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecf0:	jno    0x40ec93
  40ecf2:	lock test eax,0x2c9007f9
  40ecf8:	adc    BYTE PTR [edi-0x55f4859a],dl
  40ecfe:	fwait
  40ecff:	cld    
  40ed00:	test   DWORD PTR [esi+0xf337f9e],eax
  40ed06:	test   DWORD PTR ds:0xb3b7fa29,eax
  40ed0c:	fsubp  st(1),st
  40ed0e:	pop    esi
  40ed0f:	cmp    eax,0x619e5b18
  40ed14:	jne    0x40ed95
  40ed16:	idiv   BYTE PTR [edi]
  40ed18:	or     WORD PTR [ecx+ebx*1-0x6503f010],0x6a
  40ed21:	push   cs
  40ed22:	icebp  
  40ed23:	adc    ch,0x6c
  40ed26:	jp     0x40ecaf
  40ed28:	xor    eax,0x4b9efd3c
  40ed2d:	inc    ebp
  40ed2e:	(bad)  
  40ed2f:	push   ebx
  40ed30:	adc    edi,DWORD PTR [esi]
  40ed32:	(bad)  
  40ed33:	push   ebx
  40ed34:	aas    
  40ed35:	aaa    
  40ed36:	imul   esp,DWORD PTR [edi-0x21],0x25e99586
  40ed3d:	in     eax,dx
  40ed3e:	fdivr  st,st(1)
  40ed40:	cmp    al,0x88
  40ed42:	adc    ch,BYTE PTR [ecx+eax*1+0x7c]
  40ed46:	fsub   DWORD PTR [ebx+edx*1]
  40ed49:	ja     0x40ed21
  40ed4b:	dec    esi
  40ed4c:	icebp  
  40ed4d:	bound  edi,QWORD PTR [esi]
  40ed4f:	cwde   
  40ed50:	sbb    edi,ebx
  40ed52:	jne    0x40ed0b
  40ed54:	div    DWORD PTR [esi-0x4960d215]
  40ed5a:	sbb    eax,0x4fe73d08
  40ed5f:	sar    DWORD PTR [ebp-0x4873a301],0x86
  40ed66:	ret    0x1a79
  40ed69:	repz in al,dx
  40ed6b:	js     0x40ecfb
  40ed6d:	cmp    al,0x1e
  40ed6f:	retf   0x5140
  40ed72:	imul   edx,DWORD PTR [esi+0x62],0x3a0d058c
  40ed79:	sbb    BYTE PTR [edi+ecx*2+0x37],dl
  40ed7d:	jno    0x40ed7f
  40ed7f:	ins    DWORD PTR es:[edi],dx
  40ed80:	sbb    al,0xbf
  40ed82:	pop    ds
  40ed83:	or     BYTE PTR [edx+0x71aaa6f1],dl
  40ed89:	(bad)  
  40ed8a:	stc    
  40ed8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed8c:	cmp    eax,0x5797ac94
  40ed91:	pop    es
  40ed92:	sub    ebp,ebx
  40ed94:	out    0x3,al
  40ed96:	xor    BYTE PTR [eax+0x4b3afdf6],0x29
  40ed9d:	add    BYTE PTR [ebp+ecx*1+0x75],bh
  40eda1:	sub    DWORD PTR [ecx],ebx
  40eda3:	ins    BYTE PTR es:[edi],dx
  40eda4:	pop    bp
  40eda6:	out    dx,al
  40eda7:	dec    ebp
  40eda8:	mov    edx,0xef7a5fa0
  40edad:	xor    eax,0x8092134a
  40edb2:	js     0x40edbe
  40edb4:	(bad)  
  40edb6:	pusha  
  40edb7:	xchg   DWORD PTR [esi],edx
  40edb9:	fwait
  40edba:	mov    ebx,0x83d9ce86
  40edbf:	out    dx,al
  40edc0:	jmp    0x1f89:0x4a723b4c
  40edc7:	ins    DWORD PTR es:[edi],dx
  40edc8:	retf   0x8c41
  40edcb:	adc    al,0xbc
  40edcd:	mov    ecx,0x91eb4fcf
  40edd2:	imul   ebx,edi,0x299f55b1
  40edd8:	adc    BYTE PTR [ebp+0x54],bh
  40eddb:	pop    ebp
  40eddc:	mov    ebp,esi
  40edde:	dec    ebx
  40eddf:	jmp    0x40ee50
  40ede1:	aam    0xec
  40ede3:	pop    edi
  40ede4:	cwde   
  40ede5:	cmp    DWORD PTR [esi],0x6d
  40ede8:	daa    
  40ede9:	mov    BYTE PTR [edx+0xd],ah
  40edec:	daa    
  40eded:	jns    0x40ee33
  40edef:	in     al,dx
  40edf0:	jg     0x40ee52
  40edf2:	mov    al,ds:0xf300e2cf
  40edf7:	lods   al,BYTE PTR ds:[esi]
  40edf8:	in     al,0x5e
  40edfa:	cmp    eax,0xdd62834c
  40edff:	pop    ebp
  40ee00:	in     al,0x2a
  40ee02:	leave  
  40ee03:	repnz xor eax,0x78b3bc
  40ee09:	sbb    BYTE PTR [ebx+0xf42ec6a],bl
  40ee0f:	push   edi
  40ee10:	shr    BYTE PTR [ecx+esi*2-0x3f],0x33
  40ee15:	mov    cl,0x98
  40ee17:	jne    0x40ede0
  40ee19:	dec    edx
  40ee1a:	stos   DWORD PTR es:[edi],eax
  40ee1b:	push   ecx
  40ee1c:	call   0x1d46:0xbea931d4
  40ee23:	pusha  
  40ee24:	loope  0x40ee89
  40ee26:	cs in  al,0x8e
  40ee29:	xor    al,0x8b
  40ee2b:	adc    DWORD PTR [edi-0x59],ebx
  40ee2e:	sbb    BYTE PTR [esi+0x27],ch
  40ee31:	fcom   DWORD PTR [ebx-0x32a6814c]
  40ee37:	push   0x1eb2bfd2
  40ee3c:	or     bh,BYTE PTR [ecx-0xa5e8e84]
  40ee42:	sbb    eax,0xad430afe
  40ee47:	adc    al,0x27
  40ee49:	in     eax,0x6d
  40ee4b:	je     0x40ee9c
  40ee4d:	leave  
  40ee4e:	push   ebx
  40ee4f:	or     al,0x9f
  40ee51:	fadd   DWORD PTR [ebp-0x68466de1]
  40ee57:	lds    ebp,FWORD PTR [ecx-0x34d218bf]
  40ee5d:	lea    eax,[ecx+edx*2+0x58]
  40ee61:	and    edx,DWORD PTR [ecx-0x7c3d1d62]
  40ee67:	adc    edx,DWORD PTR [edx-0x73]
  40ee6a:	fistp  QWORD PTR [esp+ebx*8+0x15]
  40ee6e:	rcl    BYTE PTR [eax+edi*4],1
  40ee71:	push   es
  40ee72:	sbb    DWORD PTR cs:[esi+0x52],edi
  40ee76:	inc    ebx
  40ee77:	and    eax,DWORD PTR [ecx+0xe]
  40ee7a:	jmp    0x40eeeb
  40ee7c:	pop    ss
  40ee7d:	test   BYTE PTR [esi-0x285a74a1],ch
  40ee83:	mov    WORD PTR fs:[ebx+0x32bc4bdf],?
  40ee8a:	pushf  
  40ee8b:	jle    0x40ee51
  40ee8d:	mov    al,0xf
  40ee8f:	ret    
  40ee90:	je     0x40ee30
  40ee92:	ret    
  40ee93:	sbb    esp,0xb83db194
  40ee99:	pop    ds
  40ee9a:	int    0x8b
  40ee9c:	out    dx,eax
  40ee9d:	fs ins DWORD PTR es:[edi],dx
  40ee9f:	fisttp WORD PTR [esi-0x6c]
  40eea2:	or     eax,0x8ac46f9e
  40eea7:	sub    ebx,0xb560f351
  40eead:	xchg   ebx,eax
  40eeae:	push   ds
  40eeaf:	pop    ebx
  40eeb0:	into   
  40eeb1:	jle    0x40eeef
  40eeb3:	aaa    
  40eeb4:	sbb    al,0x93
  40eeb6:	(bad)  
  40eeb7:	and    al,0x54
  40eeb9:	mov    ah,0x58
  40eebb:	sbb    al,0xe1
  40eebd:	mov    cl,0x95
  40eebf:	mov    ah,BYTE PTR [edi+ebp*1+0x11]
  40eec3:	shl    DWORD PTR [esi-0x5c5292d4],cl
  40eec9:	out    0x6c,eax
  40eecb:	pop    esp
  40eecc:	xchg   ebp,eax
  40eecd:	in     ax,0xc
  40eed0:	cli    
  40eed1:	inc    esi
  40eed2:	cli    
  40eed3:	mov    eax,ds:0x4e8afa17
  40eed8:	arpl   WORD PTR [ebx-0x58],dx
  40eedb:	fsub   DWORD PTR [eax-0x77]
  40eede:	and    eax,0x570a46d8
  40eee3:	dec    ebx
  40eee4:	aam    0x68
  40eee6:	mov    al,ds:0x367835d4
  40eeeb:	inc    esp
  40eeec:	mov    ebx,0xe418a08c
  40eef1:	ja     0x40eef3
  40eef3:	ins    DWORD PTR es:[edi],dx
  40eef4:	mov    ah,0x8f
  40eef6:	and    esi,eax
  40eef8:	int    0x50
  40eefa:	int3   
  40eefb:	cmp    al,0x3a
  40eefd:	outs   dx,DWORD PTR ds:[esi]
  40eefe:	cwde   
  40eeff:	loop   0x40eedb
  40ef01:	mov    ecx,0x5ee40c4c
  40ef06:	push   ebp
  40ef07:	ficom  WORD PTR [ebx]
  40ef09:	sbb    esi,esi
  40ef0b:	xor    eax,ecx
  40ef0d:	add    eax,0x3a5cfa78
  40ef12:	fld    DWORD PTR [edi+ebp*1-0x41]
  40ef16:	adc    dh,BYTE PTR [esi-0x69]
  40ef19:	sub    eax,esp
  40ef1b:	fldcw  WORD PTR [esi-0x5d]
  40ef1e:	jo     0x40eec8
  40ef20:	adc    edi,DWORD PTR [ebx+esi*8+0x3784a56a]
  40ef27:	ss sbb ebx,eax
  40ef2a:	adc    esp,ecx
  40ef2c:	dec    esp
  40ef2d:	dec    esp
  40ef2e:	loopne 0x40eee3
  40ef30:	jbe    0x40eed9
  40ef32:	mov    bl,0x8b
  40ef34:	iret   
  40ef35:	imul   edi,DWORD PTR [edx+ebx*2-0x66],0x6c
  40ef3a:	mov    WORD PTR [eax-0x27],?
  40ef3d:	sbb    BYTE PTR ss:[ecx-0x40],al
  40ef41:	repnz push ss
  40ef43:	cdq    
  40ef44:	retf   
  40ef45:	les    esp,FWORD PTR [eax-0x15]
  40ef48:	loopne 0x40ef68
  40ef4a:	jae    0x40eefb
  40ef4c:	jnp    0x40efc1
  40ef4e:	outs   dx,BYTE PTR ds:[esi]
  40ef4f:	lods   al,BYTE PTR ds:[esi]
  40ef50:	ss and al,0xed
  40ef53:	pop    esp
  40ef54:	mov    ah,0xe5
  40ef56:	call   0xcd089b26
  40ef5b:	cmp    bh,BYTE PTR [edi+0xf]
  40ef5e:	mov    ebp,DWORD PTR [eax-0x6c]
  40ef61:	es pop edi
  40ef63:	and    eax,0x3ffc6f30
  40ef68:	je     0x40ef04
  40ef6a:	or     BYTE PTR [edi+0x35634e7f],al
  40ef70:	out    dx,eax
  40ef71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef72:	ffree  st(6)
  40ef74:	cmp    DWORD PTR [ecx+0x1d],0x55
  40ef78:	sub    eax,0x62adead4
  40ef7d:	xor    eax,0xc1dd9214
  40ef82:	sub    BYTE PTR [edi],0x84
  40ef85:	pop    ecx
  40ef86:	jno    0x40efdb
  40ef88:	inc    edx
  40ef89:	mov    ebx,0x737b1ae3
  40ef8e:	(bad)  
  40ef8f:	mov    esp,0x9bab91bc
  40ef94:	mov    dh,0x22
  40ef96:	adc    al,0x8e
  40ef98:	jle    0x40ef91
  40ef9a:	fcmovne st,st(0)
  40ef9c:	fld    TBYTE PTR [edi]
  40ef9e:	pop    es
  40ef9f:	test   eax,0x65d9fb11
  40efa4:	jge    0x40efdf
  40efa6:	xchg   edx,eax
  40efa7:	and    eax,DWORD PTR [edx]
  40efa9:	push   0x34
  40efab:	push   ss
  40efac:	add    esp,0x3e74d530
  40efb2:	mov    edx,0x2d0036b7
  40efb7:	sub    esp,DWORD PTR gs:[ebx-0x34]
  40efbb:	push   ebp
  40efbc:	nop
  40efbd:	(bad)  
  40efbe:	aam    0x36
  40efc0:	xchg   ebp,eax
  40efc1:	jge    0x40ef5a
  40efc3:	and    eax,0x84522c9a
  40efc8:	dec    ebp
  40efc9:	and    edx,DWORD PTR [ecx]
  40efcb:	mov    bl,0x26
  40efcd:	loop   0x40ef71
  40efcf:	in     eax,dx
  40efd0:	jno    0x40f008
  40efd2:	fidiv  DWORD PTR [ecx]
  40efd4:	jge    0x40ef8e
  40efd6:	mov    BYTE PTR [edi+0x65f2deed],ah
  40efdc:	jmp    0x22d3:0x86e97faf
  40efe3:	js     0x40ef97
  40efe5:	dec    edi
  40efe6:	aad    0xd3
  40efe8:	lahf   
  40efe9:	add    BYTE PTR [eax-0x16],ch
  40efec:	sub    ah,BYTE PTR [ebx]
  40efee:	push   edi
  40efef:	sti    
  40eff0:	mov    ch,bl
  40eff2:	mov    cl,0x95
  40eff4:	je     0x40f063
  40eff6:	push   edi
  40eff7:	pop    edi
  40eff8:	xchg   ebp,eax
  40eff9:	inc    esp
  40effa:	mov    edx,0xd43a3121
  40efff:	ja     0x40f043
  40f001:	sbb    dl,cl
  40f003:	shr    BYTE PTR [eax],cl
  40f005:	add    esi,DWORD PTR [esi+ebp*4-0x6f]
  40f009:	mov    WORD PTR [edx-0x74],?
  40f00c:	cdq    
  40f00d:	mov    bh,0xd5
  40f00f:	jae    0x40efb6
  40f011:	jmp    0xb2d6:0x1b892d46
  40f018:	stc    
  40f019:	jge    0x40f05b
  40f01b:	into   
  40f01c:	mov    eax,ds:0x90068c65
  40f021:	dec    ebx
  40f022:	push   ecx
  40f023:	nop
  40f024:	sub    edx,esp
  40f026:	retf   0xd8a
  40f029:	in     al,0x43
  40f02b:	pop    edx
  40f02c:	xlat   BYTE PTR ds:[ebx]
  40f02d:	or     eax,DWORD PTR gs:[ebp+0x1]
  40f031:	(bad)  
  40f032:	(bad)  
  40f033:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f034:	nop
  40f035:	and    DWORD PTR [eax+edx*1-0x5b],ebx
  40f039:	add    DWORD PTR [esi],ebp
  40f03b:	inc    esi
  40f03c:	adc    eax,0xdd6d5ca2
  40f041:	loope  0x40f062
  40f043:	or     al,0x38
  40f045:	xchg   ebx,eax
  40f046:	push   ecx
  40f047:	jne    0x40f04e
  40f049:	pusha  
  40f04a:	ins    BYTE PTR es:[edi],dx
  40f04b:	sub    eax,0x2a85949e
  40f050:	(bad)  
  40f052:	mov    cl,0xe9
  40f054:	xor    edi,DWORD PTR [esi]
  40f056:	mov    DWORD PTR [ecx],esi
  40f058:	mov    ecx,0x463c545a
  40f05d:	jns    0x40f062
  40f05f:	test   BYTE PTR [esi],dl
  40f061:	ja     0x40f061
  40f063:	test   eax,0x44a8303c
  40f068:	repnz xchg ebp,eax
  40f06a:	retf   
  40f06b:	xchg   esp,eax
  40f06c:	out    dx,al
  40f06d:	add    bl,BYTE PTR [ebp+0x7c]
  40f070:	call   0x5f210500
  40f075:	xchg   DWORD PTR [edi-0x52],ebp
  40f078:	mov    ah,0x3c
  40f07a:	push   eax
  40f07b:	mov    al,ds:0x8472d6ab
  40f080:	in     eax,dx
  40f081:	fisubr DWORD PTR [ebp-0x31]
  40f084:	jo     0x40f05f
  40f086:	xor    al,0xf
  40f088:	mov    eax,0xde269791
  40f08d:	xor    BYTE PTR [ebx-0x5c78868e],bh
  40f093:	ja     0x40f0fa
  40f095:	repz fstp DWORD PTR [eax]
  40f098:	aam    0x97
  40f09a:	je     0x40f0a8
  40f09c:	mov    bl,0x4c
  40f09e:	add    DWORD PTR [ebp+0x56017a66],ebx
  40f0a4:	push   cs
  40f0a5:	mov    al,ds:0xecaf029e
  40f0aa:	cwde   
  40f0ab:	mov    bl,0x5d
  40f0ad:	sub    al,0x47
  40f0af:	and    ebp,DWORD PTR [esi]
  40f0b1:	sbb    dh,BYTE PTR [ecx-0x7ffa75de]
  40f0b7:	leave  
  40f0b8:	popa   
  40f0b9:	mov    ch,0x0
  40f0bb:	mov    es,WORD PTR [ebp+0x2e]
  40f0be:	hlt    
  40f0bf:	mov    ah,ah
  40f0c1:	mov    esp,0x6286102e
  40f0c6:	sbb    ebp,DWORD PTR [ebx-0x1d]
  40f0c9:	push   ds
  40f0ca:	hlt    
  40f0cb:	ds cs push esi
  40f0ce:	mov    eax,ds:0x66b86d29
  40f0d3:	xchg   ebx,eax
  40f0d4:	dec    ecx
  40f0d5:	sub    DWORD PTR [eax],esp
  40f0d7:	or     ah,bh
  40f0d9:	mov    esp,edi
  40f0db:	cli    
  40f0dc:	dec    edi
  40f0dd:	call   0x4df3c5bb
  40f0e2:	neg    cl
  40f0e4:	shr    bl,cl
  40f0e6:	ss pusha 
  40f0e8:	pop    edx
  40f0e9:	sbb    eax,DWORD PTR [ebx+eiz*4]
  40f0ec:	lds    ebx,FWORD PTR [edx]
  40f0ee:	mov    al,0x76
  40f0f0:	aam    0x76
  40f0f2:	dec    edx
  40f0f3:	pop    esi
  40f0f4:	cs (bad) 
  40f0f6:	push   ss
  40f0f7:	dec    ecx
  40f0f8:	mov    cs,WORD PTR [edx+0x3e66105d]
  40f0fe:	xchg   ecx,eax
  40f0ff:	out    dx,eax
  40f100:	inc    ebx
  40f101:	sub    eax,0xd48ae918
  40f106:	jmp    0x64eccd74
  40f10b:	cmp    BYTE PTR ds:0xcbaa6b56,cl
  40f111:	xchg   edx,eax
  40f112:	pop    ebx
  40f113:	loop   0x40f0b9
  40f115:	mov    DWORD PTR [edx+0x35370944],edi
  40f11b:	aaa    
  40f11c:	xchg   ebp,eax
  40f11d:	mov    ebx,0x777b111b
  40f122:	jae    0x40f178
  40f124:	inc    edx
  40f125:	xchg   ecx,eax
  40f126:	jmp    0x4135c0d7
  40f12b:	outs   dx,BYTE PTR ds:[esi]
  40f12c:	scas   eax,DWORD PTR es:[edi]
  40f12d:	push   edi
  40f12e:	sar    DWORD PTR [eax+ecx*2+0x46188f11],0xb6
  40f136:	mov    ebx,0x3a56bf49
  40f13b:	ds jbe 0x40f0d0
  40f13e:	sti    
  40f13f:	(bad)  
  40f140:	mov    al,ds:0x72352b29
  40f145:	in     eax,0xc7
  40f147:	and    BYTE PTR [edi],ah
  40f149:	es push ecx
  40f14b:	mov    ch,0x7b
  40f14d:	or     BYTE PTR [eax-0x2b],dh
  40f150:	sbb    ah,BYTE PTR [ebx+0x16]
  40f153:	adc    eax,0x4a270c52
  40f158:	int    0x72
  40f15a:	repnz arpl bp,ax
  40f15d:	inc    eax
  40f15e:	pop    ds
  40f15f:	cmp    ah,BYTE PTR [edi]
  40f161:	mov    DWORD PTR [ebx],esi
  40f163:	hlt    
  40f164:	je     0x40f164
  40f166:	fistp  WORD PTR [ebp+0x1]
  40f169:	out    dx,al
  40f16a:	push   ebx
  40f16b:	xor    al,0x38
  40f16d:	push   ss
  40f16e:	ficomp DWORD PTR [esi-0xe]
  40f171:	mov    dl,0x1e
  40f173:	popa   
  40f174:	mov    al,0x29
  40f176:	ins    DWORD PTR es:[edi],dx
  40f177:	mov    bl,0xa1
  40f179:	cli    
  40f17a:	push   ebp
  40f17b:	mov    ecx,0x20a3c972
  40f180:	xchg   esi,eax
  40f181:	(bad)  
  40f182:	mov    ss,WORD PTR [ecx+0x7d]
  40f185:	jge    0x40f1e4
  40f187:	fsub   st,st(7)
  40f189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f18a:	fs add eax,0x77ad8957
  40f190:	lea    ebp,[eax-0x15c70c87]
  40f196:	adc    esi,0x16305b10
  40f19c:	sub    DWORD PTR [ecx+0x4d],edi
  40f19f:	dec    edx
  40f1a0:	and    edx,DWORD PTR ds:0x83c5d84f
  40f1a6:	loopne 0x40f132
  40f1a8:	jge    0x40f132
  40f1aa:	lds    ebx,FWORD PTR [ecx-0x439d3605]
  40f1b0:	mov    al,ds:0x9decebea
  40f1b5:	lock test BYTE PTR [ebp-0x26b98be],ah
  40f1bc:	ret    0x3fbe
  40f1bf:	call   FWORD PTR [edx]
  40f1c1:	sti    
  40f1c2:	or     dl,BYTE PTR [edi-0x26]
  40f1c5:	test   eax,0x5624f227
  40f1ca:	and    cl,BYTE PTR [edi]
  40f1cc:	adc    eax,0x723cc301
  40f1d1:	enter  0xd661,0xb0
  40f1d5:	lea    edx,[esi+0x6ed92250]
  40f1db:	hlt    
  40f1dc:	clc    
  40f1dd:	cmp    bl,ch
  40f1df:	aaa    
  40f1e0:	dec    edx
  40f1e1:	and    DWORD PTR [eax],eax
  40f1e3:	push   ebx
  40f1e4:	or     al,0x68
  40f1e6:	dec    ebp
  40f1e7:	inc    edx
  40f1e8:	or     BYTE PTR [edx],bh
  40f1ea:	cmp    eax,0x9f8af05c
  40f1ef:	mov    DWORD PTR [edx-0x4a5789fe],ecx
  40f1f5:	adc    al,0x92
  40f1f7:	fcmovne st,st(1)
  40f1f9:	mov    cl,0xc1
  40f1fb:	std    
  40f1fc:	outs   dx,DWORD PTR ds:[esi]
  40f1fd:	mov    eax,ds:0x10016096
  40f202:	leave  
  40f203:	jne    0x40f1d3
  40f205:	sub    al,dl
  40f207:	xchg   DWORD PTR [edi+0x38],ebx
  40f20a:	outs   dx,BYTE PTR ds:[esi]
  40f20b:	xchg   esi,eax
  40f20c:	cmp    BYTE PTR [ebx-0x32],0xa2
  40f210:	repnz mov ebx,0xa344a8c
  40f216:	lea    ebp,[edx-0x6c]
  40f219:	out    0x2d,al
  40f21b:	jmp    0x40f293
  40f21d:	lds    esp,FWORD PTR [eax+edi*4]
  40f220:	adc    dh,BYTE PTR [ebx+0x5d]
  40f223:	data16 add ch,BYTE PTR [edi-0x5874ce84]
  40f22a:	pop    esp
  40f22b:	push   dx
  40f22d:	push   0x53
  40f22f:	sahf   
  40f230:	loopne 0x40f27a
  40f232:	popf   
  40f233:	dec    ecx
  40f234:	mov    edx,0xc1abfe58
  40f239:	call   0x22c6:0xd338bf99
  40f240:	lds    esi,FWORD PTR [eax+0x3b240974]
  40f246:	rol    DWORD PTR [ebp+0x5d849daa],cl
  40f24c:	neg    BYTE PTR [ebx-0x5b]
  40f24f:	test   al,0x50
  40f251:	popf   
  40f252:	lods   eax,DWORD PTR ds:[esi]
  40f253:	aaa    
  40f254:	int3   
  40f255:	cmp    DWORD PTR [edi],ebp
  40f257:	fdivr  QWORD PTR [ebx-0x3a]
  40f25a:	aas    
  40f25b:	out    0xac,al
  40f25d:	movlps QWORD PTR [eax+0x1913f161],xmm6
  40f264:	bswap  esp
  40f266:	cs pop edi
  40f268:	out    0x5f,eax
  40f26a:	out    0xbb,eax
  40f26c:	sub    ebp,ecx
  40f26e:	cmc    
  40f26f:	call   0xdcb4:0x3cdafa4d
  40f276:	jb     0x40f29e
  40f278:	gs nop
  40f27a:	push   ss
  40f27b:	or     eax,0x6b09a105
  40f280:	mov    fs,WORD PTR [ecx-0x66]
  40f283:	lods   al,BYTE PTR ds:[esi]
  40f284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f285:	arpl   WORD PTR [esi],si
  40f287:	test   esp,0xba641063
  40f28d:	ss jb  0x40f2a5
  40f290:	push   0x16
  40f292:	sub    al,0xd7
  40f294:	sub    cl,al
  40f296:	xchg   esp,eax
  40f297:	call   0xe766166b
  40f29c:	addr16 cmp bh,0x75
  40f2a0:	ss pop ebp
  40f2a2:	push   esp
  40f2a3:	sbb    BYTE PTR [edx+0x4dadc7ed],0xd9
  40f2aa:	push   edi
  40f2ab:	jge    0x40f2eb
  40f2ad:	and    bl,BYTE PTR [edi]
  40f2af:	jmp    0xfd12:0xb2425b0c
  40f2b6:	xchg   edx,eax
  40f2b7:	add    ebx,DWORD PTR [edx]
  40f2b9:	sbb    al,BYTE PTR [esi-0x599f5051]
  40f2bf:	call   0xefaee27e
  40f2c4:	icebp  
  40f2c5:	fwait
  40f2c6:	mov    edx,0x79fafaa1
  40f2cb:	leave  
  40f2cc:	stos   BYTE PTR es:[edi],al
  40f2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ce:	cmp    eax,0x70
  40f2d1:	iret   
  40f2d2:	sub    BYTE PTR [ebx-0x59],bl
  40f2d5:	ret    
  40f2d6:	int3   
  40f2d7:	fist   WORD PTR cs:[ebx]
  40f2da:	fdivr  st(0),st
  40f2dc:	and    DWORD PTR [edx-0x219c4bd1],eax
  40f2e2:	repz test eax,0x72d54961
  40f2e8:	fs add esp,ecx
  40f2eb:	xor    eax,0x7f28c405
  40f2f0:	sti    
  40f2f1:	xor    bh,bl
  40f2f3:	retf   0xe96b
  40f2f6:	xchg   ebp,eax
  40f2f7:	pop    ds
  40f2f8:	jo     0x40f292
  40f2fa:	mov    fs,WORD PTR ss:[edi-0x7eef5615]
  40f301:	jle    0x40f287
  40f303:	repz mov gs,WORD PTR ds:0xbfaf572e
  40f30a:	sub    al,0x37
  40f30c:	stc    
  40f30d:	lea    esi,[ecx-0x83a930e]
  40f313:	stos   BYTE PTR es:[edi],al
  40f314:	mov    ecx,0xa53c3055
  40f319:	add    al,0xc2
  40f31b:	ror    bh,cl
  40f31d:	pop    esp
  40f31e:	(bad)  
  40f31f:	in     al,dx
  40f320:	mov    al,ds:0x43538631
  40f325:	push   esi
  40f326:	mov    edi,0xb88ca5bc
  40f32b:	push   ecx
  40f32c:	mov    DWORD PTR [edi+0x49],ecx
  40f32f:	xchg   ebx,eax
  40f330:	stos   BYTE PTR es:[edi],al
  40f331:	and    esp,DWORD PTR [edi]
  40f333:	cs fdiv st,st(6)
  40f336:	mov    ah,0x9b
  40f338:	xor    al,dh
  40f33a:	ins    DWORD PTR es:[edi],dx
  40f33b:	mov    edi,0x8a456202
  40f340:	sahf   
  40f341:	jns    0x40f360
  40f343:	icebp  
  40f344:	push   cs
  40f345:	and    al,0x1d
  40f347:	imul   ecx,DWORD PTR [edx],0x27
  40f34a:	jp     0x40f396
  40f34c:	mov    cl,0x4c
  40f34e:	fld    QWORD PTR [edi+0x4665d36e]
  40f354:	daa    
  40f355:	add    al,bl
  40f357:	jp     0x40f319
  40f359:	and    esp,esp
  40f35b:	sahf   
  40f35c:	add    dh,BYTE PTR [eax+0x7e]
  40f35f:	sub    DWORD PTR [eax-0x5],0x64ab0192
  40f366:	mov    dl,0xdb
  40f368:	fnstsw WORD PTR [esp+ebp*4+0x7d606aa]
  40f36f:	push   esp
  40f370:	and    eax,0xb0bb64c3
  40f375:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f376:	jmp    0x40f3d1
  40f378:	xchg   esi,eax
  40f379:	or     al,0xc1
  40f37b:	jno    0x40f329
  40f37d:	push   eax
  40f37e:	push   ebx
  40f37f:	xor    DWORD PTR [ecx-0x7c],edx
  40f382:	cmp    esp,DWORD PTR [edx-0x160b7dbd]
  40f388:	inc    esi
  40f389:	push   esi
  40f38a:	ds push esp
  40f38c:	ret    
  40f38d:	(bad)  
  40f38e:	popf   
  40f38f:	pop    ss
  40f390:	and    ebp,DWORD PTR [eax-0x75]
  40f393:	xor    cl,BYTE PTR [edx-0x28b633c7]
  40f399:	fistp  WORD PTR [esi+0x3e]
  40f39c:	hlt    
  40f39d:	shl    DWORD PTR [ebx],cl
  40f39f:	mov    edi,0x99612670
  40f3a4:	xchg   edx,eax
  40f3a5:	retf   0xf4aa
  40f3a8:	idiv   esi
  40f3aa:	test   DWORD PTR [esi-0xa95005f],esi
  40f3b0:	test   al,0x7c
  40f3b3:	pusha  
  40f3b4:	mov    ebx,0x9d0c941d
  40f3b9:	test   DWORD PTR [ebp+0x40],esp
  40f3bc:	mov    edx,0xaf25833d
  40f3c1:	mov    edi,0xa28507d7
  40f3c6:	fucomp st(5)
  40f3c8:	pop    edi
  40f3c9:	mov    ah,0xe4
  40f3cb:	loop   0x40f3a4
  40f3cd:	ss push eax
  40f3cf:	sbb    DWORD PTR [ebx],edx
  40f3d1:	xor    al,0x6
  40f3d3:	jmp    0x40f441
  40f3d5:	adc    esp,DWORD PTR [esi-0xc]
  40f3d8:	ins    DWORD PTR es:[edi],dx
  40f3d9:	stos   DWORD PTR es:[edi],eax
  40f3da:	jo     0x40f43c
  40f3dc:	mov    ah,0x65
  40f3de:	pop    ss
  40f3df:	inc    ebp
  40f3e0:	sub    edx,edi
  40f3e2:	loopne 0x40f373
  40f3e4:	ins    DWORD PTR es:[edi],dx
  40f3e5:	mov    ch,0xc7
  40f3e7:	xor    DWORD PTR [eax-0x1d],edi
  40f3ea:	cmp    edx,DWORD PTR [ebp-0x2d8375f3]
  40f3f0:	cdq    
  40f3f1:	lea    ax,[edi+eax*1-0x4f36a609]
  40f3f9:	in     al,0x93
  40f3fb:	pushf  
  40f3fc:	loope  0x40f3f1
  40f3fe:	mov    ss,ecx
  40f400:	shr    DWORD PTR [bx+di+0x4635],1
  40f405:	add    edi,eax
  40f407:	lock ret 
  40f409:	and    eax,0x3fb18949
  40f40e:	fistp  DWORD PTR gs:[eax]
  40f411:	push   ss
  40f412:	dec    ebx
  40f413:	sub    DWORD PTR [edi-0x19],ebp
  40f416:	pop    ecx
  40f417:	add    al,0x2
  40f419:	xlat   BYTE PTR ds:[ebx]
  40f41a:	iret   
  40f41b:	push   ecx
  40f41c:	das    
  40f41d:	cli    
  40f41e:	inc    eax
  40f41f:	add    eax,0x56177d70
  40f424:	sbb    BYTE PTR [edx+0x6f],cl
  40f427:	add    dh,BYTE PTR [ecx-0x4d]
  40f42a:	sbb    ecx,0x131f6d95
  40f430:	jno    0x40f3b9
  40f432:	jae    0x40f3ce
  40f434:	xchg   ebp,eax
  40f435:	pop    ss
  40f436:	dec    edi
  40f437:	jb     0x40f4ae
  40f439:	popa   
  40f43a:	ror    BYTE PTR [eax+0x6],cl
  40f43d:	cld    
  40f43e:	mov    ch,0x9b
  40f440:	push   ds
  40f441:	in     al,0x59
  40f443:	fild   DWORD PTR [edx+0x2d]
  40f446:	pop    edi
  40f447:	sbb    ah,dh
  40f449:	int3   
  40f44a:	iret   
  40f44b:	test   al,0x20
  40f44d:	sub    al,0xb5
  40f44f:	mov    ah,0x2c
  40f451:	aad    0x99
  40f453:	bound  edx,QWORD PTR [ecx]
  40f455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f456:	cwde   
  40f457:	shl    BYTE PTR [eax+0x7f],cl
  40f45a:	sahf   
  40f45b:	xlat   BYTE PTR ds:[ebx]
  40f45c:	add    ah,al
  40f45e:	dec    ebp
  40f45f:	pop    ds
  40f460:	jmp    0x6fca5b0
  40f465:	dec    esp
  40f466:	sub    al,0x3d
  40f468:	jbe    0x40f4a5
  40f46a:	add    edx,esi
  40f46c:	jnp    0x40f46e
  40f46e:	sub    BYTE PTR [esi+esi*2],bl
  40f471:	cmp    DWORD PTR [edx-0x2c],ebx
  40f474:	xchg   edx,eax
  40f475:	stc    
  40f476:	aam    0x3a
  40f478:	jg     0x890a299c
  40f47e:	xchg   ecx,eax
  40f47f:	jns    0x40f42b
  40f481:	inc    ecx
  40f482:	out    dx,al
  40f483:	push   ebx
  40f484:	sbb    eax,DWORD PTR [edi-0x4f8bbaa1]
  40f48a:	add    ah,dh
  40f48c:	das    
  40f48d:	addr16 xchg ecx,eax
  40f48f:	and    edi,DWORD PTR [edi-0x74e3471d]
  40f495:	adc    cl,BYTE PTR [ebx+0x421cd235]
  40f49b:	add    BYTE PTR [ecx],al
  40f49d:	xor    cl,BYTE PTR [ebx+0x158b0875]
  40f4a3:	rcr    BYTE PTR [edx+eax*2],cl
  40f4a6:	add    BYTE PTR [ecx+0x510893f6],al
  40f4ac:	pop    es
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	pop    esp
  40f4c5:	in     eax,dx
  40f4c6:	xchg   esi,eax
  40f4c7:	out    dx,al
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x39]
  40f4d1:	rcl    BYTE PTR ds:[edi],1
  40f4d4:	sbb    dl,BYTE PTR [esp+edx*2]
  40f4d7:	xchg   edi,eax
  40f4d8:	popf   
  40f4d9:	xchg   ecx,eax
  40f4da:	push   ebp
  40f4db:	mov    edx,0xd9dd6df5
  40f4e0:	loope  0x40f54b
  40f4e2:	popf   
  40f4e3:	push   ds
  40f4e4:	cmp    eax,0x875a6050
  40f4e9:	cs jns 0x40f4b4
  40f4ec:	jge    0x40f4a6
  40f4ee:	mov    cl,0x60
  40f4f0:	mov    edi,0x62988486
  40f4f5:	adc    DWORD PTR [edi],ebp
  40f4f7:	mov    eax,0xcef978f8
  40f4fc:	jp     0x40f579
  40f4fe:	scas   al,BYTE PTR es:[edi]
  40f4ff:	push   edi
  40f500:	lods   eax,DWORD PTR ds:[esi]
  40f501:	ret    
  40f502:	mov    dh,0x3d
  40f504:	mov    ebx,0xe975f977
  40f509:	test   al,0xa2
  40f50b:	push   0x7a
  40f50d:	ror    esi,0xe9
  40f510:	icebp  
  40f511:	bound  ebp,QWORD PTR [ebx]
  40f513:	sbb    DWORD PTR [eax],esi
  40f515:	mov    ds:0x27932b54,al
  40f51a:	adc    ebp,DWORD PTR [ecx]
  40f51c:	push   esp
  40f51d:	cld    
  40f51e:	push   cs
  40f51f:	or     edx,ebp
  40f521:	cmp    edx,DWORD PTR [ebx-0x4d]
  40f524:	ficomp DWORD PTR [esi+0x37]
  40f527:	outs   dx,DWORD PTR ds:[esi]
  40f528:	fdiv   st(3),st
  40f52a:	push   ecx
  40f52b:	fist   DWORD PTR ds:0x7636c54c
  40f531:	jle    0x40f4bb
  40f533:	pushf  
  40f534:	jl     0x40f4ca
  40f536:	in     eax,0xea
  40f538:	and    al,0x10
  40f53a:	sahf   
  40f53b:	call   0x379f:0xf0b06de7
  40f542:	jge    0x40f4eb
  40f544:	adc    al,0x50
  40f546:	loop   0x40f50e
  40f548:	data16 rcl BYTE PTR [ebp+esi*2+0x7f],cl
  40f54d:	add    DWORD PTR [ecx+0xf],edi
  40f550:	shr    DWORD PTR [ecx],cl
  40f552:	ror    esi,cl
  40f554:	mov    esi,0xe2f55ed9
  40f559:	sbb    DWORD PTR [eax+0x2849404f],edx
  40f55f:	pop    esp
  40f560:	xchg   esp,eax
  40f561:	cmp    al,0xe7
  40f563:	(bad)  
  40f564:	mov    eax,ds:0x1f6247f
  40f569:	xor    al,0xea
  40f56b:	retf   0x65d0
  40f56e:	test   eax,0xc5d8159b
  40f573:	jl     0x40f57b
  40f575:	mov    esi,0xba0ea38a
  40f57a:	outs   dx,BYTE PTR ds:[esi]
  40f57b:	lock and eax,DWORD PTR [edx+0x6e]
  40f57f:	pop    edi
  40f580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f581:	pop    ds
  40f582:	jnp    0x40f5cc
  40f584:	adc    ebx,esp
  40f586:	call   0x1dd673bb
  40f58b:	ret    
  40f58c:	sbb    al,BYTE PTR [esi]
  40f58e:	std    
  40f58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f590:	mov    ebx,DWORD PTR [eax-0x648339d]
  40f596:	adc    ebp,0x7042be8a
  40f59c:	lods   eax,DWORD PTR ds:[esi]
  40f59d:	repz jg 0x40f52d
  40f5a0:	jne    0x40f588
  40f5a2:	mov    eax,0x1aa67c1c
  40f5a7:	push   edx
  40f5a8:	and    eax,0x51c12cbc
  40f5ad:	or     DWORD PTR [edx+0x6a18df69],edx
  40f5b3:	rcr    bh,cl
  40f5b5:	aas    
  40f5b6:	daa    
  40f5b7:	and    DWORD PTR [ebp-0x4],ecx
  40f5ba:	mov    esp,DWORD PTR [edi+0x6d]
  40f5bd:	mov    ebp,0x49b3e254
  40f5c2:	pop    es
  40f5c3:	jmp    0x25080944
  40f5c8:	stos   DWORD PTR es:[edi],eax
  40f5c9:	iret   
  40f5ca:	pop    edx
  40f5cb:	iret   
  40f5cc:	test   BYTE PTR ds:0x866eb7b2,ch
  40f5d2:	add    ebp,DWORD PTR [edx+ebx*1+0x62]
  40f5d6:	jl     0x40f5e8
  40f5d8:	scas   eax,DWORD PTR es:[edi]
  40f5d9:	call   0x6127b135
  40f5de:	pop    edx
  40f5df:	dec    ecx
  40f5e0:	pop    ebx
  40f5e1:	in     eax,0xea
  40f5e3:	mov    cl,0x14
  40f5e5:	mov    dh,0xe4
  40f5e7:	loopne 0x40f613
  40f5e9:	out    0xc6,al
  40f5eb:	inc    esp
  40f5ec:	xchg   ecx,eax
  40f5ed:	mov    dl,BYTE PTR ds:0x61cad4eb
  40f5f3:	mov    bl,0xcc
  40f5f5:	and    dl,ch
  40f5f7:	aam    0xd8
  40f5f9:	les    esi,FWORD PTR [eax+0x482a0f62]
  40f5ff:	inc    edi
  40f600:	xchg   esp,eax
  40f601:	ins    BYTE PTR es:[edi],dx
  40f602:	das    
  40f603:	fmul   DWORD PTR [esi+eiz*2]
  40f606:	cli    
  40f607:	rcl    DWORD PTR [esi-0x6d],cl
  40f60a:	dec    esp
  40f60b:	cmp    edx,edx
  40f60d:	dec    ecx
  40f60e:	mov    esp,0x82453571
  40f613:	xchg   esi,ebx
  40f615:	xor    DWORD PTR [ebx+0x4aa00eee],edx
  40f61b:	push   edx
  40f61c:	sub    ah,BYTE PTR [ebx+eax*1-0x43db8640]
  40f623:	push   ebp
  40f624:	clc    
  40f625:	xchg   ebp,eax
  40f626:	in     al,dx
  40f627:	retf   0x8e19
  40f62a:	sub    al,0x64
  40f62c:	pop    esi
  40f62d:	sub    al,0x29
  40f62f:	adc    bl,al
  40f631:	sbb    al,0x8a
  40f634:	sub    edi,DWORD PTR [edi]
  40f636:	push   esp
  40f637:	aam    0x4e
  40f639:	test   eax,0x33b6117c
  40f63e:	lods   al,BYTE PTR ds:[esi]
  40f63f:	mov    ebx,ds
  40f641:	xchg   esi,edi
  40f643:	into   
  40f644:	jmp    0xc753:0x28e0999c
  40f64b:	mov    ah,0x82
  40f64d:	and    ah,BYTE PTR [eax+0x21490cd1]
  40f653:	aaa    
  40f654:	push   ebp
  40f655:	scas   eax,DWORD PTR es:[edi]
  40f656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f657:	pop    eax
  40f658:	mov    ds:0x3b1e3aba,al
  40f65d:	adc    eax,0x5aa977e2
  40f662:	mov    esi,0xda76793d
  40f667:	pop    ds
  40f668:	aad    0x51
  40f66a:	aad    0x87
  40f66c:	mov    ch,0xf7
  40f66e:	rcr    DWORD PTR [eax+0x61],1
  40f671:	sub    eax,0x284dd709
  40f676:	in     al,0x23
  40f678:	imul   ebp,DWORD PTR [eax],0x2a6d634
  40f67e:	add    bh,dh
  40f680:	and    eax,0xe23be4dd
  40f685:	stos   DWORD PTR es:[edi],eax
  40f686:	jmp    0x40f68c
  40f688:	lea    edx,[esi+esi*2]
  40f68b:	call   0x700f90d5
  40f690:	stos   DWORD PTR es:[edi],eax
  40f691:	sbb    DWORD PTR [ecx+0x79bd0ae5],0x27
  40f698:	fnsave [eax+0x60]
  40f69b:	(bad)  
  40f69c:	pushf  
  40f69d:	cli    
  40f69e:	and    ah,dh
  40f6a0:	fdivr  DWORD PTR [ecx*2-0x5d848dcc]
  40f6a7:	jnp    0x40f6b5
  40f6a9:	mov    esp,0xfa68c20d
  40f6ae:	xchg   esi,eax
  40f6af:	jp     0x40f725
  40f6b1:	data16 into 
  40f6b3:	aad    0x2
  40f6b5:	mov    edi,0x41725a15
  40f6ba:	push   es
  40f6bb:	lock pushf 
  40f6bd:	cmp    ah,BYTE PTR ds:0x328b3795
  40f6c3:	sbb    eax,0xc7ea40bc
  40f6c8:	mov    ds:0xcb59d9f8,eax
  40f6cd:	sub    BYTE PTR [ebp+0x77e59756],bl
  40f6d3:	(bad)  
  40f6d5:	lds    ebx,FWORD PTR [edi]
  40f6d7:	xchg   esp,eax
  40f6d8:	sub    al,0xf3
  40f6da:	push   ss
  40f6db:	xchg   edx,eax
  40f6dc:	test   DWORD PTR [ebx],ebx
  40f6de:	mov    edx,0x1832cc19
  40f6e3:	push   es
  40f6e4:	mov    ah,0xa4
  40f6e6:	into   
  40f6e7:	pop    edi
  40f6e8:	cmp    edx,DWORD PTR [eax]
  40f6ea:	mov    eax,ds:0x6bb4b90e
  40f6ef:	stc    
  40f6f0:	pop    esp
  40f6f1:	stos   DWORD PTR es:[edi],eax
  40f6f2:	or     esi,DWORD PTR ds:0xd66f8d21
  40f6f8:	jns    0x40f722
  40f6fa:	mov    dh,0xd7
  40f6fc:	xor    al,0xa6
  40f6fe:	jl     0x40f6a2
  40f700:	mov    eax,0x9a5e2fb4
  40f705:	dec    eax
  40f706:	inc    esi
  40f707:	cmp    cl,cl
  40f709:	scas   al,BYTE PTR es:[edi]
  40f70a:	sub    DWORD PTR [edx+0x51],ebx
  40f70d:	jno    0x40f712
  40f70f:	jle    0x40f6cf
  40f711:	mov    WORD PTR [eax+eiz*4],?
  40f714:	xor    BYTE PTR [ebp+0x3b],dh
  40f717:	pop    edx
  40f718:	dec    esp
  40f719:	dec    esp
  40f71a:	cmp    al,0x9e
  40f71d:	call   0xeae331f8
  40f722:	shl    DWORD PTR [esp+ebx*2+0x54d7f5f1],0x4d
  40f72a:	pop    ss
  40f72b:	inc    ebx
  40f72c:	lea    eax,[ecx-0x4db1f56d]
  40f732:	dec    ebx
  40f733:	pop    esp
  40f734:	cmc    
  40f735:	scas   al,BYTE PTR es:[edi]
  40f736:	xchg   esi,eax
  40f737:	in     al,dx
  40f738:	out    dx,eax
  40f739:	aaa    
  40f73a:	adc    DWORD PTR [esi+0xc],ebx
  40f73d:	std    
  40f73e:	add    eax,0x99766ade
  40f743:	adc    DWORD PTR [edx],0x71
  40f746:	inc    dl
  40f748:	lock mov ch,0xdd
  40f74b:	or     eax,0xb525e849
  40f750:	ret    0x7dde
  40f753:	sbb    al,0xbd
  40f755:	jbe    0x40f719
  40f757:	push   cs
  40f758:	xchg   edx,eax
  40f759:	dec    esp
  40f75a:	enter  0xe49,0x6
  40f75e:	pushf  
  40f75f:	(bad)  
  40f760:	and    dh,cl
  40f762:	(bad)  
  40f763:	cmp    edi,DWORD PTR [eax+0x70]
  40f766:	ror    BYTE PTR [esi+0x7adc9380],1
  40f76c:	and    ebx,ebx
  40f76e:	jmp    0x8280:0xfa81c05a
  40f775:	clc    
  40f776:	xor    al,0x50
  40f778:	xor    BYTE PTR [ebx+0x6387899],dh
  40f77e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f77f:	fadd   st(7),st
  40f781:	or     al,0xfb
  40f783:	cmc    
  40f784:	out    dx,al
  40f785:	xchg   ebx,eax
  40f786:	cli    
  40f787:	ret    0x7585
  40f78a:	retf   0xf973
  40f78d:	in     al,dx
  40f78e:	aaa    
  40f78f:	call   0xb5c4e9d
  40f794:	outs   dx,BYTE PTR ds:[esi]
  40f795:	add    DWORD PTR ds:0x6bc7bb22,esi
  40f79b:	or     BYTE PTR [edx-0x54],ch
  40f79e:	ss (bad) 
  40f7a0:	(bad)  
  40f7a1:	(bad)  
  40f7a2:	jo     0x40f773
  40f7a4:	mov    BYTE PTR [ebp+0x3ada4b84],ch
  40f7aa:	and    DWORD PTR [edi],edx
  40f7ac:	fadd   DWORD PTR [esi-0x22a6a371]
  40f7b2:	(bad)  
  40f7b4:	loopne 0x40f7ff
  40f7b6:	jno    0x40f837
  40f7b8:	mov    eax,0xb56dcdfd
  40f7bd:	xchg   DWORD PTR [edi+0x17],eax
  40f7c0:	test   eax,0x4b37ce59
  40f7c5:	mov    cl,BYTE PTR ds:[eax-0x31]
  40f7c9:	test   BYTE PTR [ecx+ebp*2],bl
  40f7cc:	adc    bh,bh
  40f7ce:	pop    esi
  40f7cf:	outs   dx,BYTE PTR ds:[esi]
  40f7d0:	pusha  
  40f7d1:	or     BYTE PTR [ebp+0xb],0x28
  40f7d5:	sbb    bl,BYTE PTR [esi-0x6f3c2fa8]
  40f7db:	adc    BYTE PTR [eax],bl
  40f7dd:	int3   
  40f7de:	pop    ebp
  40f7df:	push   ecx
  40f7e0:	loopne 0x40f79d
  40f7e2:	test   eax,0x8ffdec4c
  40f7e7:	xlat   BYTE PTR ds:[ebx]
  40f7e8:	lock ins DWORD PTR es:[edi],dx
  40f7ea:	dec    edx
  40f7eb:	call   0x99ff:0x65d54613
  40f7f2:	neg    DWORD PTR [eax+0x30629b25]
  40f7f8:	mov    edx,0x26f9a5f5
  40f7fd:	mov    eax,ds:0x7c898939
  40f802:	and    eax,0xa1cbdc03
  40f807:	push   esp
  40f808:	mov    WORD PTR [edx+0x4be193e],gs
  40f80e:	ds (bad) 
  40f810:	loopne 0x40f88b
  40f812:	lock sbb bh,dh
  40f815:	xchg   ecx,eax
  40f816:	push   edx
  40f817:	xchg   esi,eax
  40f818:	adc    cl,al
  40f81a:	add    bl,dl
  40f81c:	sub    BYTE PTR [edi+0xc80df78],bl
  40f822:	ret    0x131c
  40f825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f826:	jecxz  0x40f7db
  40f828:	data16 fistp DWORD PTR [esp+edi*4-0x74]
  40f82d:	sbb    al,0x19
  40f82f:	sti    
  40f830:	das    
  40f831:	push   ecx
  40f832:	pop    esi
  40f833:	aad    0x26
  40f835:	(bad)  
  40f836:	(bad)  
  40f837:	xor    eax,0x76a6d576
  40f83c:	retf   
  40f83d:	sbb    dl,BYTE PTR [ebx+0x431a7f27]
  40f843:	daa    
  40f844:	push   edi
  40f845:	fidivr DWORD PTR [esi]
  40f847:	push   cs
  40f848:	push   0x14705d41
  40f84d:	xchg   esp,eax
  40f84e:	imul   eax,ecx,0x856903b
  40f854:	aas    
  40f855:	stos   BYTE PTR es:[edi],al
  40f856:	jecxz  0x40f890
  40f858:	mov    BYTE PTR [ecx+esi*1-0x3c],0x73
  40f85d:	sub    edi,DWORD PTR [ecx-0x79e7b999]
  40f863:	mov    edx,ds
  40f865:	cmp    dl,al
  40f867:	or     DWORD PTR [esi+0x7d],0xaa84dc74
  40f86e:	xor    edx,DWORD PTR [eax]
  40f870:	xchg   esi,eax
  40f871:	imul   edi,DWORD PTR [eax-0x3c17361c],0x6
  40f878:	fstp   DWORD PTR [ecx+0x7f2d8b3d]
  40f87e:	xchg   edi,eax
  40f87f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f880:	dec    ebx
  40f881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f882:	xor    ebp,DWORD PTR [ebx-0x2ea1ff5b]
  40f888:	sti    
  40f889:	pop    esi
  40f88a:	std    
  40f88b:	mov    dl,0xa9
  40f88d:	and    DWORD PTR [eax-0x54833877],ebx
  40f893:	clc    
  40f894:	cwde   
  40f895:	pop    ebx
  40f896:	jecxz  0x40f85a
  40f898:	lock push ecx
  40f89a:	push   edi
  40f89b:	adc    edi,DWORD PTR [ebp-0x68aec122]
  40f8a1:	or     esp,ebp
  40f8a3:	and    al,BYTE PTR [edi-0x48]
  40f8a6:	fcmovu st,st(7)
  40f8a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8a9:	mov    ebp,0xfa60db26
  40f8ae:	jmp    0x40f86d
  40f8b0:	mov    ch,BYTE PTR [bx+si+0x7144]
  40f8b5:	xchg   edx,eax
  40f8b6:	inc    esp
  40f8b7:	and    al,0x6e
  40f8b9:	mov    eax,0xb69f2c2a
  40f8be:	mov    ds:0x813394a0,al
  40f8c3:	mov    ah,0x38
  40f8c5:	mov    ch,ah
  40f8c7:	(bad)  
  40f8c8:	(bad)  
  40f8c9:	mov    DWORD PTR ds:0xc1c4ee75,0xa45511b9
  40f8d3:	js     0x40f880
  40f8d5:	fxch   st(6)
  40f8d7:	sar    BYTE PTR [edx+edi*2+0x74360915],0xd6
  40f8df:	xor    al,0x30
  40f8e1:	loop   0x40f938
  40f8e3:	or     esi,DWORD PTR [esi+0x6c]
  40f8e6:	push   cs
  40f8e7:	push   0xbb88e60c
  40f8ec:	sbb    bl,BYTE PTR [ebx-0x4e]
  40f8ef:	jl     0x40f90b
  40f8f1:	adc    al,0xe8
  40f8f3:	int    0xe6
  40f8f5:	pop    esp
  40f8f6:	add    BYTE PTR [edi+0x58],al
  40f8f9:	xchg   DWORD PTR [edx],edx
  40f8fb:	inc    ebp
  40f8fc:	ins    BYTE PTR es:[edi],dx
  40f8fd:	or     DWORD PTR cs:[esi-0x7182f8c2],ebp
  40f904:	std    
  40f905:	xor    ecx,0xc6b4bba
  40f90b:	lods   eax,DWORD PTR ds:[esi]
  40f90c:	cwde   
  40f90d:	call   0xf7893893
  40f912:	sbb    eax,DWORD PTR [esi]
  40f914:	rol    bh,cl
  40f916:	adc    ah,BYTE PTR [esi]
  40f918:	inc    ebx
  40f919:	fstp   DWORD PTR [esp+eiz*4]
  40f91c:	xor    esp,0x61ea8e64
  40f922:	jp     0x40f971
  40f924:	or     DWORD PTR [eax],edi
  40f926:	sub    eax,0x5a2a33d6
  40f92b:	nop
  40f92c:	aam    0xc0
  40f92e:	add    al,0x47
  40f930:	xchg   edx,eax
  40f931:	pop    edx
  40f932:	push   ecx
  40f933:	inc    edx
  40f934:	and    bh,0xe6
  40f937:	pop    ebp
  40f938:	and    esi,DWORD PTR [edi-0x573f5cf]
  40f93e:	and    eax,0xa99ae26a
  40f943:	add    al,0xad
  40f945:	das    
  40f946:	imul   ebx,DWORD PTR [ebx+0x2acd95e1],0xb2febeaa
  40f950:	call   FWORD PTR [ecx]
  40f952:	or     eax,0x613ac2a2
  40f957:	cwde   
  40f958:	gs icebp 
  40f95a:	nop
  40f95b:	and    edi,edi
  40f95d:	sub    al,0xe3
  40f95f:	jl     0x40f91f
  40f961:	jns    0x40f996
  40f963:	daa    
  40f964:	dec    edi
  40f965:	hlt    
  40f966:	jmp    0x5244:0xe8099da6
  40f96d:	jo     0x40f8fc
  40f96f:	call   0x9003d489
  40f974:	cmp    DWORD PTR [edx+ebp*1-0x35],edx
  40f978:	lods   al,BYTE PTR ds:[esi]
  40f979:	sub    al,0x6c
  40f97b:	clc    
  40f97c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f97d:	xor    BYTE PTR [edx],bh
  40f97f:	push   ebp
  40f980:	xlat   BYTE PTR ds:[ebx]
  40f981:	rcl    DWORD PTR [ebx-0x1d],cl
  40f984:	ret    
  40f985:	(bad)  
  40f986:	lea    edx,[ebx-0x7b74243e]
  40f98c:	(bad)  
  40f98d:	iret   
  40f98e:	adc    ebx,DWORD PTR [edx+0x4a]
  40f991:	mov    esi,0xb479de61
  40f996:	bound  ebp,QWORD PTR [ebx-0x2944ed84]
  40f99c:	jo     0x40f9df
  40f99e:	mov    bh,0xfe
  40f9a0:	jo     0x84cc004c
  40f9a6:	xchg   edx,eax
  40f9a7:	xor    DWORD PTR [edx-0x9497130],edx
  40f9ad:	mov    edi,0x4ceba242
  40f9b2:	adc    al,0x50
  40f9b4:	xor    al,0xf7
  40f9b6:	cmp    DWORD PTR cs:[ecx+0x30],esp
  40f9ba:	push   0xffffff87
  40f9bc:	int3   
  40f9bd:	jo     0x40f94e
  40f9bf:	push   edx
  40f9c0:	and    dl,0x38
  40f9c3:	ss jl  0x40f9fc
  40f9c6:	fisttp QWORD PTR [ebx+0x2a33f2a4]
  40f9cc:	sbb    edi,DWORD PTR [ecx]
  40f9ce:	sub    bl,BYTE PTR [edi]
  40f9d0:	adc    BYTE PTR [eax],al
  40f9d2:	imul   eax,DWORD PTR [esi-0x46862bf3],0x12f71839
  40f9dc:	pop    eax
  40f9dd:	nop
  40f9de:	push   ecx
  40f9df:	or     DWORD PTR [ebp*1-0x1a377307],edx
  40f9e6:	xor    bh,BYTE PTR [ebx-0x6]
  40f9e9:	mov    esp,0xd14fe838
  40f9ee:	xor    ebx,DWORD PTR [eax+eax*4]
  40f9f1:	jmp    0xf7e6:0xb8175b29
  40f9f8:	ja     0x40fa09
  40f9fa:	inc    edx
  40f9fb:	xor    eax,DWORD PTR [bp+si]
  40f9fe:	sbb    bl,0x57
  40fa01:	sbb    BYTE PTR [ebp-0x8e57e20],al
  40fa07:	ss push ebp
  40fa09:	sub    al,0x11
  40fa0b:	iret   
  40fa0c:	outs   dx,DWORD PTR ds:[esi]
  40fa0d:	inc    esp
  40fa0e:	(bad)  [ebp+0x5e]
  40fa11:	mov    ch,0xae
  40fa13:	xchg   esp,eax
  40fa14:	sub    ebp,DWORD PTR [edx]
  40fa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa17:	dec    esi
  40fa18:	jmp    0xca76d4a0
  40fa1d:	daa    
  40fa1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa1f:	sbb    DWORD PTR [eax+0x1e1e6e6b],eax
  40fa25:	iret   
  40fa26:	pop    ebx
  40fa27:	sbb    ch,BYTE PTR [eax+0x1a3c9b1]
  40fa2d:	ins    DWORD PTR es:[edi],dx
  40fa2e:	lods   eax,DWORD PTR ds:[esi]
  40fa2f:	in     al,dx
  40fa30:	inc    ebx
  40fa31:	sahf   
  40fa32:	sbb    al,0x3f
  40fa34:	popf   
  40fa35:	jnp    0x40f9cb
  40fa37:	aad    0xe1
  40fa39:	xor    DWORD PTR [edx],esi
  40fa3b:	adc    dl,al
  40fa3d:	jbe    0x40fa87
  40fa3f:	test   eax,0x1fc2538f
  40fa44:	sbb    bh,BYTE PTR [ebx]
  40fa46:	sbb    dh,BYTE PTR [esi-0x1afd4821]
  40fa4c:	sub    al,0x1c
  40fa4e:	test   DWORD PTR [edx-0x2e],esp
  40fa51:	dec    edi
  40fa52:	push   eax
  40fa53:	or     al,0x37
  40fa55:	jp     0x40fa82
  40fa57:	mov    edx,0x3dac8d08
  40fa5c:	mov    ?,WORD PTR [edi-0x15]
  40fa5f:	mov    ebx,0xefa1452
  40fa64:	xchg   ebp,eax
  40fa65:	pop    esp
  40fa66:	jmp    0x60a1:0x9b24b7ba
  40fa6d:	and    DWORD PTR [edi+0x1d],ebp
  40fa70:	pop    edi
  40fa71:	push   0x56759595
  40fa76:	mov    ds:0x2d6d8dac,eax
  40fa7b:	xchg   esi,eax
  40fa7c:	clc    
  40fa7d:	ss xchg ebx,eax
  40fa7f:	adc    DWORD PTR [ecx+0x1a],0x96fb53e5
  40fa86:	outs   dx,DWORD PTR ds:[esi]
  40fa87:	push   esi
  40fa88:	outs   dx,BYTE PTR ds:[esi]
  40fa89:	jle    0x40fa0e
  40fa8b:	lahf   
  40fa8c:	je     0x40fa68
  40fa8e:	icebp  
  40fa8f:	pop    ecx
  40fa90:	(bad)  [edx]
  40fa92:	aaa    
  40fa93:	test   al,0xd6
  40fa96:	mov    eax,0xda6f50c
  40fa9b:	bound  ecx,QWORD PTR [edx]
  40fa9d:	push   0x42f0e4cb
  40faa2:	dec    eax
  40faa3:	shr    DWORD PTR [edi+0x4f51445d],0xf7
  40faaa:	std    
  40faab:	neg    DWORD PTR [edx-0x5d3fd110]
  40fab1:	jle    0x40fa6f
  40fab3:	sub    dl,dh
  40fab5:	imul   ebx,DWORD PTR [edx-0x24e94a92],0xfffffff4
  40fabc:	sbb    DWORD PTR ds:0x8e6b13bc,esp
  40fac2:	(bad)  
  40fac3:	mov    ebp,0x2ab4e57e
  40fac8:	pop    edi
  40fac9:	jg     0x40fac6
  40facb:	mov    dh,0xf6
  40facd:	stc    
  40face:	mov    BYTE PTR [esi],cl
  40fad0:	ror    BYTE PTR [esi-0x1a],1
  40fad3:	and    DWORD PTR [ecx],0xffffffeb
  40fad6:	shl    DWORD PTR [edx+0x5ba55b4e],0xa
  40fadd:	into   
  40fade:	data16 jb 0x40fb35
  40fae1:	shl    BYTE PTR [ecx+0x5460628d],0x44
  40fae8:	push   edi
  40fae9:	mov    eax,0x522f61ae
  40faee:	cmp    BYTE PTR ds:0xf3c0009,0x9f
  40faf5:	aam    0x1f
  40faf7:	jb     0x40fb3a
  40faf9:	arpl   WORD PTR [ecx-0xecf2304],ax
  40faff:	pop    ecx
  40fb00:	(bad)  [eax-0x4c55cc86]
  40fb06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb07:	imul   dl
  40fb09:	xor    BYTE PTR [ecx],bh
  40fb0b:	pushf  
  40fb0c:	js     0x40fb74
  40fb0e:	test   al,0x15
  40fb10:	clc    
  40fb11:	js     0x40fad5
  40fb13:	push   es
  40fb14:	js     0x40fb1a
  40fb16:	ror    ch,0x7d
  40fb19:	pusha  
  40fb1a:	clc    
  40fb1b:	sbb    ah,al
  40fb1d:	xor    DWORD PTR [edi+0x17a05841],edx
  40fb23:	mov    ebx,DWORD PTR [ebp+0x6f]
  40fb26:	(bad)  
  40fb27:	mov    edi,0x41cdf6ce
  40fb2c:	pop    ebp
  40fb2d:	mov    dh,0x5
  40fb2f:	retf   0xa55d
  40fb32:	ret    
  40fb33:	pop    es
  40fb34:	jl     0x40fb04
  40fb36:	add    DWORD PTR es:[ebx],edi
  40fb39:	stc    
  40fb3a:	idiv   DWORD PTR [edx+0x3c]
  40fb3d:	fs xor dl,BYTE PTR gs:[ebx+0x2bfdafb7]
  40fb45:	ficom  WORD PTR [edi+0x9]
  40fb48:	cmp    al,0x79
  40fb4a:	and    DWORD PTR [eax-0x527cadff],edi
  40fb50:	jns    0x40fb6d
  40fb52:	push   edi
  40fb53:	cmova  ebx,DWORD PTR [eax+0x1]
  40fb57:	sub    al,BYTE PTR [eax+ebp*2+0x24a72edb]
  40fb5e:	mov    eax,ds:0x8610b65a
  40fb63:	xor    DWORD PTR [ecx],edx
  40fb65:	mov    eax,0x66ebc1d4
  40fb6a:	inc    esp
  40fb6b:	dec    eax
  40fb6c:	add    ebp,DWORD PTR [ebp+0x310b03c8]
  40fb72:	scas   al,BYTE PTR es:[edi]
  40fb73:	pop    eax
  40fb74:	or     eax,0x641d0666
  40fb79:	out    0xca,al
  40fb7b:	xchg   ebx,eax
  40fb7c:	iret   
  40fb7d:	iret   
  40fb7e:	(bad)  
  40fb7f:	fld    TBYTE PTR [esi+0x37e0e4ce]
  40fb85:	mov    eax,0x808a2711
  40fb8a:	mov    esi,DWORD PTR [eax]
  40fb8c:	dec    ebx
  40fb8d:	dec    ecx
  40fb8e:	inc    esi
  40fb8f:	leave  
  40fb90:	jno    0x40fb86
  40fb92:	aad    0xf8
  40fb94:	inc    esp
  40fb95:	add    eax,0x71a019b8
  40fb9a:	fwait
  40fb9b:	xor    al,0x97
  40fb9d:	xor    cl,BYTE PTR [ebx+edx*8+0x43c70166]
  40fba4:	mov    esi,0xe3880721
  40fba9:	mov    eax,ds:0xbe3ad455
  40fbae:	jle    0x40fb7d
  40fbb0:	jno    0x40fb41
  40fbb2:	sub    BYTE PTR [esi+0x72],ch
  40fbb5:	call   0xd72e:0x8b409789
  40fbbc:	jp     0x40fb4a
  40fbbe:	push   ss
  40fbbf:	das    
  40fbc0:	sub    eax,0x703ea380
  40fbc5:	jmp    0xa094:0xca0ca0af
  40fbcc:	jecxz  0x40fbf0
  40fbce:	fldcw  WORD PTR [ecx-0x6cb99cd]
  40fbd4:	rol    DWORD PTR [edx+0x6b],1
  40fbd7:	mov    al,ds:0xbd5f3450
  40fbdc:	jne    0x40fbfd
  40fbde:	inc    edx
  40fbdf:	lods   eax,DWORD PTR ds:[esi]
  40fbe0:	jle    0x40fbff
  40fbe2:	jmp    0x40fc3b
  40fbe4:	pop    edi
  40fbe5:	shl    DWORD PTR cs:[edx+0x1a],0x79
  40fbea:	mov    bl,0x8b
  40fbec:	mov    edx,0x8ca74018
  40fbf1:	jno    0x40fbb8
  40fbf3:	aad    0x59
  40fbf5:	rcr    BYTE PTR [esi-0x11],cl
  40fbf8:	jmp    0x40fc65
  40fbfa:	loop   0x40fc21
  40fbfc:	cld    
  40fbfd:	inc    edi
  40fbfe:	data16 and al,0x20
  40fc01:	shl    DWORD PTR [edx],0x12
  40fc04:	xchg   BYTE PTR [eax],dl
  40fc06:	or     BYTE PTR [esi-0x46],dl
  40fc09:	push   edx
  40fc0a:	fisubr DWORD PTR [ecx+0x6f]
  40fc0d:	nop
  40fc0e:	daa    
  40fc0f:	jecxz  0x40fbf7
  40fc11:	ja     0x40fbb4
  40fc13:	dec    edx
  40fc14:	jno    0x40fc0a
  40fc16:	push   0xb8478a35
  40fc1b:	mov    esi,esp
  40fc1d:	sar    BYTE PTR [edx-0x60],1
  40fc20:	cmp    eax,0x51a30fe6
  40fc25:	dec    ebx
  40fc26:	sub    BYTE PTR [edx],ah
  40fc28:	mov    edx,0xbfe60fa5
  40fc2d:	sbb    BYTE PTR [ebx],cl
  40fc2f:	stos   BYTE PTR es:[edi],al
  40fc30:	dec    eax
  40fc31:	xchg   BYTE PTR [ecx-0x4d4460a3],bh
  40fc37:	pop    ebx
  40fc38:	jnp    0x40fc42
  40fc3a:	jb     0x40fc42
  40fc3c:	mov    ebp,0xc8239bcb
  40fc41:	call   0xc120:0x9daec651
  40fc48:	popa   
  40fc49:	inc    eax
  40fc4a:	jmp    0x40fc50
  40fc4c:	repz cli 
  40fc4e:	das    
  40fc4f:	mov    eax,0x92c93785
  40fc54:	loope  0x40fc1d
  40fc56:	push   ecx
  40fc57:	or     al,0x87
  40fc59:	icebp  
  40fc5a:	mov    esi,0xdf79ff6d
  40fc5f:	in     al,0x8a
  40fc61:	ret    
  40fc62:	rcl    BYTE PTR [edx],1
  40fc64:	shl    DWORD PTR [edi-0x5b],cl
  40fc67:	or     eax,0x54a0a8b0
  40fc6c:	in     eax,0x6a
  40fc6e:	adc    esi,ecx
  40fc70:	pushf  
  40fc71:	jmp    0xde37b712
  40fc76:	data16 xor al,0xf0
  40fc79:	inc    edi
  40fc7a:	fwait
  40fc7b:	cs add edx,esp
  40fc7e:	pop    ebp
  40fc7f:	sub    ch,bl
  40fc81:	lock fabs 
  40fc84:	or     esp,DWORD PTR [esi]
  40fc86:	mov    ebx,0xcabac2ab
  40fc8b:	sub    eax,0xd81c3384
  40fc90:	movd   mm3,DWORD PTR [esi]
  40fc93:	xor    ch,dl
  40fc95:	sub    eax,0x12
  40fc98:	or     eax,ebx
  40fc9a:	hlt    
  40fc9b:	int3   
  40fc9c:	out    0xad,eax
  40fc9e:	shl    DWORD PTR [ebx],cl
  40fca0:	lahf   
  40fca1:	neg    DWORD PTR [ecx]
  40fca3:	push   ebx
  40fca4:	xchg   ebx,eax
  40fca5:	mov    ch,dl
  40fca7:	xlat   BYTE PTR ds:[ebx]
  40fca8:	ja     0x40fc7f
  40fcaa:	aaa    
  40fcab:	fmul   st(3),st
  40fcad:	xor    edx,DWORD PTR ds:0x99e1
  40fcb2:	dec    ebx
  40fcb3:	pusha  
  40fcb4:	or     edx,edx
  40fcb6:	xor    al,dl
  40fcb8:	sub    DWORD PTR ds:0x23d1117e,0xffffff98
  40fcbf:	sbb    al,0xd
  40fcc1:	adc    BYTE PTR [edi-0x75279794],dh
  40fcc7:	les    ecx,FWORD PTR [esi+ebx*2+0x4c94685f]
  40fcce:	lods   eax,DWORD PTR ds:[esi]
  40fccf:	lds    edx,FWORD PTR [ebx+edi*4+0x46]
  40fcd3:	cld    
  40fcd4:	cwde   
  40fcd5:	(bad)  
  40fcd6:	adc    al,0x9f
  40fcd8:	fs popf 
  40fcda:	fcmovnb st,st(7)
  40fcdc:	outs   dx,BYTE PTR ds:[esi]
  40fcdd:	addr16 cmp cl,dl
  40fce0:	stc    
  40fce1:	and    DWORD PTR [ebp+0x40],ebx
  40fce4:	adc    DWORD PTR [eax-0x20a544db],ecx
  40fcea:	mov    ch,0x4c
  40fcec:	push   eax
  40fced:	xor    al,BYTE PTR ds:0x35f14a16
  40fcf3:	push   edi
  40fcf4:	(bad)  
  40fcf5:	xor    DWORD PTR [eax],esi
  40fcf7:	into   
  40fcf8:	ss retf 
  40fcfa:	les    ecx,FWORD PTR [ebp+0x4fa3de50]
  40fd00:	(bad)  [ecx]
  40fd02:	mov    ds:0xdab44fb0,eax
  40fd07:	jns    0x40fcbf
  40fd09:	imul   edx,DWORD PTR [ebx],0x3c
  40fd0c:	jle    0x40fccd
  40fd0e:	and    bh,dh
  40fd10:	addr16 andps xmm2,xmm0
  40fd14:	cmp    al,0x9a
  40fd16:	pop    ecx
  40fd17:	(bad)  
  40fd19:	cmp    ebp,edx
  40fd1b:	jmp    DWORD PTR [ebp-0x753e5c6d]
  40fd21:	and    BYTE PTR ds:0x89e0e5f2,0xce
  40fd28:	push   esi
  40fd29:	ret    0x2953
  40fd2c:	mov    esp,0x764d0163
  40fd31:	daa    
  40fd32:	stc    
  40fd33:	mov    eax,0xdf2fa6bc
  40fd38:	pop    ecx
  40fd39:	dec    eax
  40fd3a:	and    eax,0x4f3e5549
  40fd3f:	jge    0x40fd5f
  40fd41:	jbe    0x40fcc9
  40fd43:	aas    
  40fd44:	loop   0x40fd46
  40fd46:	je     0x40fcc9
  40fd48:	mov    dh,0x97
  40fd4a:	mov    ds:0x77f56cc9,al
  40fd4f:	lods   al,BYTE PTR ds:[esi]
  40fd50:	mov    ebx,0xdf26a576
  40fd55:	ja     0x40fd98
  40fd57:	(bad)  
  40fd58:	push   ds
  40fd59:	fcomp  DWORD PTR [eax+eiz*8-0x2669572f]
  40fd60:	iret   
  40fd61:	(bad)  
  40fd62:	std    
  40fd63:	ds push edi
  40fd65:	mov    bl,0x1d
  40fd67:	sbb    bh,BYTE PTR [esp+ebp*2]
  40fd6a:	add    BYTE PTR ds:0xdcc216fa,cl
  40fd70:	std    
  40fd71:	dec    ebx
  40fd72:	adc    al,0x67
  40fd74:	icebp  
  40fd75:	add    cl,BYTE PTR [eax-0x7a71c590]
  40fd7b:	jle    0x40fd30
  40fd7d:	pop    ebx
  40fd7e:	inc    esp
  40fd7f:	aas    
  40fd80:	mov    esp,0x2f58b7c9
  40fd85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd86:	inc    eax
  40fd87:	aam    0x16
  40fd89:	arpl   cx,dx
  40fd8b:	inc    edi
  40fd8c:	jge    0x40fd68
  40fd8e:	inc    esi
  40fd8f:	adc    eax,0xd77c64bc
  40fd94:	cmp    al,0x9
  40fd96:	xlat   BYTE PTR ds:[ebx]
  40fd97:	inc    ebp
  40fd98:	mov    bl,0xa3
  40fd9a:	and    DWORD PTR [ebp*4+0x7ab67900],0xe9fccc4f
  40fda5:	or     dh,BYTE PTR [edi]
  40fda7:	and    bh,dl
  40fda9:	jecxz  0x40fd89
  40fdab:	push   esi
  40fdac:	push   edx
  40fdad:	ret    0x172e
  40fdb0:	iret   
  40fdb1:	(bad)  
  40fdb3:	add    BYTE PTR [ecx-0x4a54730b],0x16
  40fdba:	lods   al,BYTE PTR ds:[esi]
  40fdbb:	fdiv   st(2),st
  40fdbd:	and    al,0xb1
  40fdbf:	sahf   
  40fdc0:	and    al,0x3f
  40fdc2:	lods   eax,DWORD PTR ds:[esi]
  40fdc3:	mov    edi,0x211338bd
  40fdc8:	fiadd  WORD PTR [edx+esi*8+0x45]
  40fdcc:	cld    
  40fdcd:	inc    edx
  40fdce:	rol    esi,1
  40fdd0:	mov    dh,0x2f
  40fdd2:	jge    0x40fd6c
  40fdd4:	or     esi,DWORD PTR [ebx]
  40fdd6:	pop    ebp
  40fdd7:	jo     0x40fd8b
  40fdd9:	and    DWORD PTR [eax-0x5d2aa805],ecx
  40fddf:	push   ecx
  40fde0:	xchg   BYTE PTR [ebx-0x7488d56b],dh
  40fde6:	xchg   edi,eax
  40fde7:	sbb    al,0x32
  40fde9:	aas    
  40fdea:	adc    eax,0xb11b57a4
  40fdef:	or     al,0x44
  40fdf1:	popf   
  40fdf2:	inc    esi
  40fdf3:	xchg   ecx,eax
  40fdf4:	cld    
  40fdf5:	mul    BYTE PTR [eax-0x3c14d7b]
  40fdfb:	pusha  
  40fdfc:	and    eax,0xd6866962
  40fe01:	sar    DWORD PTR [ecx+0x94b2b84],0xf
  40fe08:	jb     0x40fd94
  40fe0a:	lods   al,BYTE PTR ds:[esi]
  40fe0b:	cmp    ecx,DWORD PTR [esi]
  40fe0d:	(bad)  
  40fe0e:	iret   
  40fe0f:	jecxz  0x40fe52
  40fe11:	jb     0x40fe15
  40fe13:	enter  0x7281,0x4a
  40fe17:	pop    esp
  40fe18:	and    eax,0x701e0513
  40fe1d:	daa    
  40fe1e:	fs inc ecx
  40fe20:	aas    
  40fe21:	jnp    0x40fe78
  40fe23:	add    dh,BYTE PTR [edx-0x357e8998]
  40fe29:	mov    dl,0x3c
  40fe2b:	out    dx,eax
  40fe2c:	cmp    al,0x82
  40fe2e:	imul   ebp,edi,0x5c
  40fe31:	jp     0x40fe1d
  40fe33:	jo     0x40fe42
  40fe35:	pop    edi
  40fe36:	rcl    DWORD PTR [ecx],0x6f
  40fe39:	push   ecx
  40fe3a:	into   
  40fe3b:	push   ebx
  40fe3c:	mov    dl,dl
  40fe3e:	sub    di,WORD PTR [esi-0x7d]
  40fe42:	stos   DWORD PTR es:[edi],eax
  40fe43:	inc    esi
  40fe44:	ins    DWORD PTR es:[edi],dx
  40fe45:	or     bl,BYTE PTR [edi+0xc]
  40fe48:	pusha  
  40fe49:	outs   dx,BYTE PTR ds:[esi]
  40fe4a:	lea    eax,[edx-0x202ccc50]
  40fe50:	jno    0x40fe91
  40fe52:	cwde   
  40fe53:	fcomp  QWORD PTR [ebp+0x10f8fa62]
  40fe59:	push   ss
  40fe5a:	mov    eax,0x1205446a
  40fe5f:	call   0x129f23b7
  40fe64:	xor    DWORD PTR [esi+0x2b],eax
  40fe67:	mov    bl,BYTE PTR [ebp+0x5cdaa938]
  40fe6d:	xchg   esi,eax
  40fe6e:	xor    ah,BYTE PTR [edi-0x64]
  40fe71:	add    eax,0x7c32adf1
  40fe76:	gs repnz loope 0x40fed5
  40fe7a:	sub    dl,BYTE PTR [ebx]
  40fe7c:	cmc    
  40fe7d:	inc    ebp
  40fe7e:	popf   
  40fe7f:	push   0x914979d0
  40fe84:	ins    BYTE PTR es:[edi],dx
  40fe85:	adc    al,0xe9
  40fe87:	sbb    eax,0xca1da727
  40fe8c:	loopne 0x40fe78
  40fe8e:	js     0x40fe9f
  40fe90:	sbb    DWORD PTR [edx+eax*1-0x6e],edx
  40fe94:	or     eax,0xa51ac619
  40fe99:	push   ds
  40fe9a:	jb     0x40feeb
  40fe9c:	outs   dx,DWORD PTR ds:[esi]
  40fe9d:	xchg   DWORD PTR [edx+0x4238488],ebp
  40fea3:	repz jecxz 0x40feba
  40fea6:	xor    eax,0xc8d3de8c
  40feab:	or     BYTE PTR [ebx+0x3b7ea6a4],ah
  40feb1:	out    0xb6,eax
  40feb3:	xchg   DWORD PTR [esi],esp
  40feb5:	inc    ecx
  40feb6:	mov    edx,eax
  40feb8:	mov    DWORD PTR [esi+edi*2],ebp
  40febb:	jge    0x40ff37
  40febd:	sbb    cl,al
  40febf:	fdiv   DWORD PTR [ecx+esi*4]
  40fec2:	xchg   DWORD PTR [edi+ecx*8+0x76],ecx
  40fec6:	cld    
  40fec7:	adc    BYTE PTR [edi-0x27bfc48],0xb5
  40fece:	push   es
  40fecf:	neg    DWORD PTR [eax-0x5d35fd82]
  40fed5:	and    eax,0x112999c3
  40feda:	cmp    edx,DWORD PTR [ecx]
  40fedc:	mov    edi,0x38d21a6c
  40fee1:	jecxz  0x40ff05
  40fee3:	popf   
  40fee4:	leave  
  40fee5:	cmp    DWORD PTR [ebx],edi
  40fee7:	inc    esp
  40fee8:	ja     0x40fe71
  40feea:	or     DWORD PTR ds:[edx-0x6e09b365],esi
  40fef1:	out    dx,al
  40fef2:	ja     0x40ff72
  40fef4:	aam    0x89
  40fef6:	sub    al,0x9c
  40fef8:	push   ds
  40fef9:	inc    ebx
  40fefa:	test   al,0x4b
  40fefc:	inc    esi
  40fefd:	ret    
  40fefe:	enter  0xfa7b,0x41
  40ff02:	dec    ebp
  40ff03:	stos   BYTE PTR es:[edi],al
  40ff04:	les    edi,FWORD PTR [edx-0x59]
  40ff07:	and    eax,0x343f3e18
  40ff0c:	mov    dl,0xbd
  40ff0e:	push   ebx
  40ff0f:	cmp    DWORD PTR [eax+0x60],ebp
  40ff12:	lds    esp,FWORD PTR [ebx]
  40ff14:	inc    ebp
  40ff15:	js     0x40fea3
  40ff17:	ss ins DWORD PTR es:[edi],dx
  40ff19:	inc    edi
  40ff1a:	ror    DWORD PTR [esi-0x146ba00b],cl
  40ff20:	je     0x40ff0b
  40ff22:	or     BYTE PTR [edx+0x53],ch
  40ff25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff26:	mov    BYTE PTR [ebx],cl
  40ff28:	dec    esi
  40ff2a:	push   ebp
  40ff2b:	icebp  
  40ff2c:	mov    ds:0xa99c2587,al
  40ff31:	ss iret 
  40ff33:	(bad)  
  40ff34:	pop    ebx
  40ff35:	aad    0x54
  40ff37:	scas   eax,DWORD PTR es:[edi]
  40ff38:	fcomp  DWORD PTR [edi-0x3e]
  40ff3c:	dec    ebp
  40ff3d:	cmp    eax,0xbd7987b0
  40ff42:	cwde   
  40ff43:	out    0xb7,eax
  40ff45:	and    al,0xc2
  40ff47:	xchg   ebp,eax
  40ff48:	push   es
  40ff49:	mov    esi,ecx
  40ff4b:	fldcw  WORD PTR [edi+ebx*2+0x319291be]
  40ff52:	sub    BYTE PTR [ebp-0x162271d7],ch
  40ff58:	rcr    BYTE PTR [eax+0x25],0xd1
  40ff5c:	bound  ecx,QWORD PTR [edi]
  40ff5e:	sbb    esi,DWORD PTR [eax+0x67]
  40ff61:	mov    bh,0x0
  40ff63:	fdivp  st(3),st
  40ff65:	stos   DWORD PTR es:[edi],eax
  40ff66:	jmp    0x40ffca
  40ff68:	sbb    dl,ch
  40ff6a:	es sub cl,al
  40ff6d:	cmp    BYTE PTR [edx+0x56e8ee13],ch
  40ff73:	sub    al,0x16
  40ff75:	aad    0x8e
  40ff77:	push   ebp
  40ff78:	lods   eax,DWORD PTR ds:[esi]
  40ff79:	sub    eax,0xa28b2658
  40ff7e:	or     eax,0xf4b4ed54
  40ff83:	in     al,dx
  40ff84:	cs push es
  40ff86:	rcl    bl,1
  40ff88:	(bad)  
  40ff89:	int    0x51
  40ff8b:	ret    
  40ff8c:	test   al,0x5
  40ff8e:	mov    ecx,0xebed096d
  40ff93:	add    WORD PTR [edi-0x769af9b7],0x47
  40ff9b:	push   edi
  40ff9c:	add    esp,DWORD PTR [edx+0x5569faad]
  40ffa2:	mov    ecx,0x1c84713c
  40ffa7:	adc    bl,ah
  40ffa9:	jg     0x40ff7c
  40ffab:	cdq    
  40ffac:	lds    esp,FWORD PTR [ecx]
  40ffae:	shr    esi,0xa5
  40ffb1:	mov    ?,WORD PTR [ebx]
  40ffb3:	repz xlat BYTE PTR ds:[ebx]
  40ffb5:	mov    dl,0x11
  40ffb7:	fdiv   QWORD PTR ds:0x2e15f6ed
  40ffbd:	cmp    BYTE PTR [edx],ah
  40ffbf:	dec    eax
  40ffc0:	mov    esp,0x4192d142
  40ffc5:	call   0x322f:0x1d6fe531
  40ffcc:	test   al,0xd3
  40ffce:	(bad)  [ebp+0x6f]
  40ffd1:	fucomi st,st(0)
  40ffd3:	or     bh,bh
  40ffd5:	adc    DWORD PTR [edx],edx
  40ffd7:	stos   DWORD PTR es:[edi],eax
  40ffd8:	sub    eax,0x76e091a8
  40ffdd:	sbb    al,0xb2
  40ffdf:	mov    al,ds:0x9c1d985
  40ffe4:	sbb    BYTE PTR [esi],dl
  40ffe6:	call   0xa520b51f
  40ffeb:	xchg   ebp,eax
  40ffec:	cmp    al,0x21
  40ffee:	pop    eax
  40ffef:	xchg   ebx,eax
  40fff0:	jecxz  0x410023
  40fff2:	sbb    BYTE PTR [esi-0x101356c9],0x40
  40fff9:	pop    esp
  40fffa:	test   al,0x11
  40fffc:	xchg   ebx,eax
  40fffd:	(bad)  
  40ffff:	data16 into 
  410001:	les    esi,FWORD PTR [edi]
  410003:	ins    BYTE PTR es:[edi],dx
  410004:	mov    dh,0x7e
  410006:	ins    DWORD PTR es:[edi],dx
  410007:	adc    al,0x80
  410009:	sub    BYTE PTR [ecx],bh
  41000b:	std    
  41000c:	jb     0x410077
  41000e:	sub    eax,0x6f15bdea
  410013:	and    DWORD PTR [edx],0xffffffbe
  410016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410017:	push   cs
  410018:	push   es
  410019:	(bad)
  41001d:	cmp    DWORD PTR [esi],ebp
  41001f:	and    dl,BYTE PTR [ebp-0x5]
  410022:	cmp    esi,esp
  410024:	jmp    0x96d021ac
  410029:	rcr    BYTE PTR [eax-0x25fa6fdc],1
  41002f:	mov    esi,0x40ae27f4
  410034:	addps  xmm3,XMMWORD PTR [esi+edx*1-0x5f]
  410039:	lods   al,BYTE PTR ds:[esi]
  41003a:	xor    BYTE PTR [edx-0x69],al
  41003d:	sahf   
  41003e:	sbb    edx,DWORD PTR [ebp+0x2ce57813]
  410044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410045:	sub    eax,0x2eea3478
  41004a:	test   DWORD PTR [edx-0x7f],0x3e8242e6
  410051:	sub    BYTE PTR [ebx+0x8],bh
  410054:	ins    BYTE PTR es:[edi],dx
  410055:	push   edi
  410056:	mov    al,ds:0x7b8bf9d6
  41005b:	sub    esp,edx
  41005d:	loop   0x410046
  41005f:	adc    DWORD PTR [ecx],ebp
  410061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410062:	or     cl,BYTE PTR [esp+eax*1-0x76]
  410066:	pusha  
  410067:	pop    edi
  410068:	sar    ebp,0xe2
  41006b:	in     eax,0x7
  41006d:	in     eax,0x47
  41006f:	cs (bad) 
  410071:	(bad)  
  410072:	adc    eax,0x3b28a5ca
  410077:	into   
  410078:	jno    0x4100ae
  41007a:	pusha  
  41007b:	hlt    
  41007c:	mov    al,0xcf
  41007e:	neg    BYTE PTR [eax]
  410080:	mov    bh,0xd3
  410082:	mov    dl,0x70
  410084:	call   DWORD PTR [eax]
  410086:	jmp    0x410106
  410088:	pop    ebp
  410089:	xor    edx,DWORD PTR [eax-0x1d092d58]
  41008f:	fidivr WORD PTR [ebx+eax*1-0x4f]
  410093:	in     al,dx
  410094:	dec    ebp
  410095:	sbb    al,0xc
  410097:	popf   
  410098:	push   0x84ea4950
  41009d:	dec    esp
  41009e:	ret    
  41009f:	daa    
  4100a0:	sbb    BYTE PTR [ebx+0x64],bh
  4100a3:	fcomp  QWORD PTR [eax]
  4100a5:	retf   
  4100a6:	mov    ch,ch
  4100a8:	push   esi
  4100a9:	adc    bl,BYTE PTR [eax-0x77]
  4100ac:	imul   edi,DWORD PTR [eax+0x447c8b96],0xd4e1fca7
  4100b6:	or     DWORD PTR [ebx],edi
  4100b8:	adc    al,0xc7
  4100ba:	mov    cl,0x5a
  4100bc:	retf   0xffe6
  4100bf:	sub    eax,0x72085c7e
  4100c4:	bnd jno 0x410057
  4100c7:	and    DWORD PTR [esi+0x77],0xac8c507f
  4100ce:	pop    es
  4100cf:	or     edx,DWORD PTR [edx+0x50]
  4100d2:	jns    0x410121
  4100d4:	retf   0x792e
  4100d7:	test   BYTE PTR [esi],0x4e
  4100da:	inc    esp
  4100db:	fadd   DWORD PTR [edi-0x4e]
  4100de:	cmp    eax,0x46b84c2c
  4100e3:	push   ds
  4100e4:	jns    0x410120
  4100e6:	xchg   esp,eax
  4100e7:	mov    dl,0xf9
  4100e9:	dec    ebx
  4100ea:	gs test ch,0x2c
  4100ee:	shl    DWORD PTR [edx-0x4268f745],1
  4100f4:	cmp    eax,0xdef07b49
  4100f9:	push   edi
  4100fa:	fisttp QWORD PTR [ebx+0x3756a608]
  410100:	xchg   esp,eax
  410101:	lods   al,BYTE PTR ds:[esi]
  410102:	(bad)  
  410103:	xor    al,0xdf
  410105:	xchg   ecx,eax
  410106:	pop    ebx
  410107:	call   0x7e7d:0xfe2dca13
  41010e:	mov    esp,0xc77cf941
  410113:	pop    ds
  410114:	xchg   ecx,eax
  410115:	jbe    0x410104
  410117:	gs ss xchg ebx,eax
  41011a:	sbb    al,0x39
  41011c:	fs mov eax,0xc919790
  410122:	iret   
  410123:	aaa    
  410124:	and    ch,BYTE PTR es:[ebp-0x7824d2c]
  41012b:	pop    ebx
  41012c:	in     eax,dx
  41012d:	sub    edi,DWORD PTR [edi-0x4f]
  410130:	pop    ds
  410131:	jmp    0xaa0eec5b
  410136:	xchg   DWORD PTR [edi-0x2],ebp
  410139:	jae    0x4100c2
  41013b:	mul    DWORD PTR [ebx]
  41013d:	data16 sub BYTE PTR [eax],cl
  410140:	pusha  
  410141:	mov    bh,0x20
  410143:	dec    edx
  410144:	pop    edx
  410145:	hlt    
  410146:	mov    ebp,0x2ce9bcbc
  41014b:	nop
  41014c:	gs mov edx,0xe571fabd
  410152:	pushf  
  410153:	(bad)
  410156:	ins    DWORD PTR es:[edi],dx
  410157:	loop   0x4101b7
  410159:	into   
  41015a:	or     ebp,DWORD PTR [esi-0x4674dafb]
  410160:	call   0xf4cbfc5e
  410165:	and    BYTE PTR [edi-0x52],0x45
  410169:	in     eax,0xa8
  41016b:	jecxz  0x41017d
  41016d:	xchg   esi,eax
  41016e:	mov    ebx,0x9592488b
  410173:	mov    bh,0xf4
  410175:	sbb    DWORD PTR [ecx],esp
  410177:	sub    DWORD PTR ds:0x26ea7efe,esi
  41017d:	mov    bh,0xf
  41017f:	int3   
  410180:	fstp   DWORD PTR [ecx+edx*8-0x38102c41]
  410187:	push   ds
  410188:	sti    
  410189:	inc    ebx
  41018a:	add    dl,BYTE PTR [edx+0x179dfa71]
  410190:	fcomip st,st(3)
  410192:	sbb    BYTE PTR [edx],cl
  410194:	iret   
  410195:	sub    esi,ebp
  410197:	nop
  410198:	xchg   ebp,eax
  410199:	cmc    
  41019a:	jnp    0x410121
  41019c:	hlt    
  41019d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019e:	fadd   DWORD PTR [ecx-0xc]
  4101a1:	sub    BYTE PTR [ebp+0x13c26eaa],ah
  4101a7:	mov    edx,DWORD PTR [esi]
  4101a9:	sahf   
  4101aa:	mov    al,ds:0x662c6098
  4101af:	jb     0x4101a8
  4101b1:	pop    ebp
  4101b2:	fwait
  4101b3:	in     eax,dx
  4101b4:	push   ss
  4101b5:	(bad)  
  4101b6:	popf   
  4101b7:	loope  0x410204
  4101b9:	adc    eax,0x2e0841df
  4101be:	inc    edx
  4101bf:	fild   DWORD PTR [esi]
  4101c1:	arpl   WORD PTR [edx+esi*4+0x9],bp
  4101c5:	add    BYTE PTR [esi],bl
  4101c7:	sbb    eax,0x7d8574d9
  4101cc:	dec    edx
  4101cd:	gs mov ch,0x5f
  4101d0:	loop   0x410233
  4101d2:	in     eax,dx
  4101d3:	and    dl,bl
  4101d5:	fldcw  WORD PTR [eax-0x14a8550d]
  4101db:	mov    ds:0x61da0511,eax
  4101e0:	or     BYTE PTR [esp+eax*1-0x2c],dh
  4101e4:	ja     0x410200
  4101e6:	fnstcw WORD PTR [ecx+edi*4]
  4101e9:	pop    eax
  4101ea:	mov    cs,ebp
  4101ec:	not    BYTE PTR [edi-0x51dfe7c1]
  4101f2:	aad    0x8b
  4101f4:	sub    ecx,edx
  4101f6:	xor    bh,BYTE PTR [ebx-0x54f092d4]
  4101fc:	inc    esi
  4101fd:	mov    DWORD PTR [ecx+eiz*4-0x6a30ffd5],esp
  410204:	jns    0x41024a
  410206:	push   cs
  410207:	sub    ch,cl
  410209:	(bad)  
  41020a:	(bad)  
  41020b:	popf   
  41020c:	(bad)
  41020f:	sar    DWORD PTR [ebp-0x74a4e7b0],0xf8
  410216:	lock aas 
  410218:	push   0xffffff8e
  41021a:	adc    esi,eax
  41021c:	ss sbb al,0x7e
  41021f:	and    BYTE PTR [edx-0x68],cl
  410222:	stc    
  410223:	fbld   TBYTE PTR [ecx+eiz*2+0x66b5148b]
  41022a:	jb     0x410261
  41022c:	pop    eax
  41022d:	mov    DWORD PTR [edx-0x3f6982c8],ebx
  410233:	add    bh,dl
  410235:	jge    0x410217
  410237:	jns    0x41020f
  410239:	sub    ecx,edi
  41023b:	mov    ebx,0x6d5a1b6b
  410240:	cli    
  410241:	(bad)  
  410242:	fdivr  QWORD PTR [ebp-0x26]
  410245:	push   cs
  410246:	mov    al,BYTE PTR [edx+0x6ee9d7d7]
  41024c:	sub    DWORD PTR [eax+esi*1-0x77],ecx
  410250:	mov    bh,0x52
  410252:	call   0x82fe:0xb021ac0f
  410259:	xor    eax,0xedf6db0a
  41025e:	ins    BYTE PTR es:[edi],dx
  41025f:	push   ebp
  410260:	ret    0x7ef
  410263:	je     0x41026a
  410265:	jge    0x410290
  410267:	pop    es
  410268:	(bad)  
  410269:	loope  0x41029a
  41026b:	adc    al,0xbf
  41026d:	mov    ebp,0x9a94ebdd
  410272:	mov    ah,0x48
  410274:	aas    
  410275:	mov    fs,WORD PTR [esi]
  410277:	mov    ch,ch
  410279:	xchg   edi,eax
  41027a:	pushf  
  41027b:	sar    DWORD PTR [ecx],1
  41027d:	push   0x753dc188
  410282:	clc    
  410283:	mov    eax,0x3a065912
  410288:	and    edi,DWORD PTR [esi]
  41028a:	sbb    al,0x39
  41028c:	pop    edx
  41028d:	sbb    ebx,DWORD PTR [ecx+ebx*2-0x34e34632]
  410294:	test   BYTE PTR [ebp-0x1d],cl
  410297:	div    BYTE PTR [edx+edx*2-0x384140d1]
  41029e:	pop    esp
  41029f:	in     eax,dx
  4102a0:	in     eax,dx
  4102a1:	cmp    esi,DWORD PTR [ebp-0x47]
  4102a4:	out    0x59,eax
  4102a6:	push   ds
  4102a7:	xchg   BYTE PTR [eax],dh
  4102a9:	mov    eax,ds:0x3c517fad
  4102ae:	dec    esp
  4102af:	push   cs
  4102b0:	mov    ?,WORD PTR [esi-0x59]
  4102b3:	ds mov ah,0x6a
  4102b6:	push   0xffffff81
  4102b8:	jle    0x4102c7
  4102ba:	pop    es
  4102bb:	mov    ebp,DWORD PTR [ecx]
  4102bd:	jmp    0x8f76b4ca
  4102c2:	iret   
  4102c3:	cld    
  4102c4:	addr16 fcmovnu st,st(2)
  4102c7:	inc    ebx
  4102c8:	daa    
  4102c9:	xor    al,0x13
  4102cb:	adc    bl,bl
  4102cd:	jns    0x4102f7
  4102cf:	adc    al,0xff
  4102d1:	aaa    
  4102d2:	xchg   ebx,eax
  4102d3:	jo     0x4102c7
  4102d5:	jp     0x4102ee
  4102d7:	xchg   BYTE PTR [edx-0x17ff7b58],ch
  4102dd:	popf   
  4102de:	dec    esi
  4102df:	and    ebx,DWORD PTR [ebx+0x6e12b074]
  4102e5:	mov    bl,0x1e
  4102e7:	lods   eax,DWORD PTR ds:[esi]
  4102e8:	inc    ebx
  4102e9:	adc    BYTE PTR [ebp+eax*2+0x12a9a118],0x3a
  4102f1:	adc    al,BYTE PTR [edi]
  4102f3:	sbb    eax,0xbcc1408e
  4102f8:	add    esp,edi
  4102fa:	push   0x555e576c
  4102ff:	out    0x9e,al
  410301:	sub    ecx,ebp
  410303:	push   0x967466ab
  410308:	ins    DWORD PTR es:[edi],dx
  410309:	dec    ebx
  41030a:	(bad)  
  41030b:	jnp    0x4102f4
  41030d:	fcom   DWORD PTR cs:[edi]
  410310:	or     BYTE PTR [ebx],ch
  410312:	scas   al,BYTE PTR es:[edi]
  410313:	int    0x5e
  410315:	xor    al,BYTE PTR [eax]
  410317:	in     eax,dx
  410318:	xchg   edx,eax
  410319:	dec    esi
  41031a:	add    eax,0xa17b0845
  41031f:	add    DWORD PTR [edi+0x46],edx
  410322:	xchg   edx,eax
  410323:	div    BYTE PTR [ebx]
  410325:	xchg   esp,eax
  410326:	mov    ss,WORD PTR [esi]
  410328:	push   0xfffffff3
  41032a:	repnz sbb al,0x38
  41032d:	hlt    
  41032e:	ss pop ss
  410330:	pop    ecx
  410331:	mov    al,ds:0xcb7aa52b
  410336:	fwait
  410337:	jns    0x4103ae
  410339:	repnz fimul DWORD PTR [esi-0x37]
  41033d:	mov    eax,DWORD PTR [ebp-0x20]
  410340:	out    0x43,al
  410342:	cmp    ebp,DWORD PTR [edx]
  410344:	inc    ebx
  410345:	lods   eax,DWORD PTR ds:[esi]
  410346:	fbstp  TBYTE PTR [esi-0x5c8fdfab]
  41034c:	(bad)  
  41034d:	fisttp DWORD PTR [esi+0x58]
  410350:	push   cs
  410351:	or     DWORD PTR [ecx],edi
  410353:	jns    0x4103b3
  410355:	in     al,0xac
  410357:	sbb    ch,BYTE PTR [ebp+0x6a]
  41035a:	adc    BYTE PTR [ebp-0x120651df],0x2d
  410361:	add    al,0x5a
  410363:	push   cs
  410364:	ja     0x410322
  410366:	out    0xa6,eax
  410368:	add    DWORD PTR [ebx+0x37],esi
  41036b:	lahf   
  41036c:	push   esi
  41036d:	add    dh,BYTE PTR [eax]
  41036f:	int    0x22
  410371:	push   ebx
  410372:	out    0x49,al
  410374:	icebp  
  410375:	pop    edi
  410376:	scas   al,BYTE PTR es:[edi]
  410377:	cs xchg esp,eax
  410379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41037a:	jecxz  0x41030a
  41037c:	mov    esi,0xfc8cfb36
  410381:	test   DWORD PTR [edi+0x13],ebp
  410384:	xchg   ebx,eax
  410385:	out    0xd5,al
  410387:	loope  0x41036d
  410389:	out    0xb0,al
  41038b:	inc    esp
  41038c:	jmp    FWORD PTR [edx-0x261033fa]
  410392:	mov    bh,0x83
  410394:	mov    ds,WORD PTR [ebp+0x40]
  410397:	sub    ebx,0x60b4317
  41039d:	into   
  41039e:	push   esi
  41039f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103a0:	aaa    
  4103a1:	adc    ch,bl
  4103a3:	or     eax,0x9276e11b
  4103a8:	and    dl,BYTE PTR [eax+0x15]
  4103ab:	xor    ecx,DWORD PTR [ecx+0x50]
  4103ae:	call   0xdfb0:0xe4f56a66
  4103b5:	sbb    eax,0xf4e1fb3a
  4103ba:	test   ch,0x61
  4103bd:	cmp    ecx,eax
  4103bf:	xchg   edx,eax
  4103c0:	pop    esp
  4103c1:	sub    BYTE PTR [eax+0x32c853b3],bh
  4103c7:	add    DWORD PTR [esi],eax
  4103c9:	dec    ecx
  4103ca:	data16 clc 
  4103cc:	retf   
  4103cd:	ret    0x4fbc
  4103d0:	sub    edi,DWORD PTR [esi-0x2a]
  4103d3:	mov    bl,0xeb
  4103d5:	xor    eax,0xedcdf30d
  4103da:	adc    al,0x6d
  4103dc:	sub    eax,0x223e3b38
  4103e1:	and    BYTE PTR [eax+0x28],0x23
  4103e5:	xor    BYTE PTR [ecx-0x12],dh
  4103e8:	inc    ecx
  4103e9:	mov    ds:0x523ff172,al
  4103ee:	es in  eax,0x62
  4103f1:	jge    0x4103ac
  4103f3:	frstor [eax]
  4103f5:	push   cs
  4103f6:	sbb    dl,BYTE PTR [edi-0x3692fabf]
  4103fc:	fldenv [ebx+ebx*1]
  4103ff:	frstor [ebp+0xb392f9a]
  410405:	push   ebx
  410406:	hlt    
  410407:	test   eax,0x20c74a34
  41040c:	pop    ss
  41040d:	push   0x6e
  41040f:	push   esi
  410410:	js     0x4103f6
  410412:	mov    ch,0x2e
  410414:	int3   
  410415:	(bad)  
  410416:	adc    ah,dl
  410418:	dec    edx
  410419:	scas   eax,DWORD PTR es:[edi]
  41041a:	sub    al,0x7f
  41041c:	and    edi,DWORD PTR [ebp+0xe]
  41041f:	in     al,0x52
  410421:	loop   0x4103ff
  410423:	pop    ss
  410424:	aad    0xa0
  410426:	fisub  DWORD PTR [ecx-0x5f5b214c]
  41042c:	(bad)  [ebx]
  41042e:	pop    eax
  41042f:	(bad)  
  410430:	clc    
  410431:	push   cs
  410432:	add    dh,dl
  410434:	add    ah,al
  410436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410437:	scas   eax,DWORD PTR es:[edi]
  410438:	(bad)  
  410439:	sub    al,0x3c
  41043b:	into   
  41043c:	mov    WORD PTR [ebp+0x66e5a70],gs
  410442:	ins    BYTE PTR es:[edi],dx
  410443:	imul   esp,esi,0x9fed4705
  410449:	adc    cl,ch
  41044b:	int3   
  41044c:	rep movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41044f:	fistp  DWORD PTR [eax]
  410451:	pop    edx
  410452:	fisub  WORD PTR [ebx]
  410454:	jo     0x410421
  410456:	mov    esi,0x622ed71c
  41045b:	cdq    
  41045c:	ror    esp,0xc5
  41045f:	xor    al,0xd0
  410461:	or     al,0x50
  410463:	adc    eax,0x6c7b3474
  410468:	jecxz  0x410499
  41046a:	test   ah,0x21
  41046d:	cmp    edx,ebx
  41046f:	in     al,0xe5
  410471:	dec    ebp
  410472:	adc    BYTE PTR [ebx+0x888c064],ah
  410478:	or     eax,0x53321cec
  41047d:	mov    ecx,0xbb076904
  410482:	or     DWORD PTR [ecx+0x22591792],eax
  410488:	fcomp  DWORD PTR [ebx+esi*4]
  41048b:	retf   0x6f19
  41048e:	scas   al,BYTE PTR es:[edi]
  41048f:	xchg   esi,eax
  410490:	cmp    BYTE PTR [ebp+eiz*1-0x312caae5],cl
  410497:	(bad)  
  410498:	aaa    
  410499:	add    BYTE PTR [ecx],cl
  41049b:	mov    eax,0xf1a16b63
  4104a0:	mov    esi,0xcfab36dd
  4104a5:	test   al,0xa2
  4104a7:	test   al,dh
  4104a9:	xchg   esp,eax
  4104aa:	sub    BYTE PTR [ebp+0x7d],dl
  4104ad:	adc    DWORD PTR [edx+0x1ec598c0],0xd0f8dd70
  4104b7:	add    BYTE PTR [edx+0x7127731a],dl
  4104bd:	icebp  
  4104be:	mov    ebx,0x4a9df10c
  4104c3:	xchg   esi,eax
  4104c4:	loopne 0x4104a7
  4104c6:	sbb    al,0xa4
  4104c8:	adc    eax,0xd2285c12
  4104cd:	dec    eax
  4104ce:	stos   DWORD PTR es:[edi],eax
  4104cf:	icebp  
  4104d0:	or     eax,0x3865c99d
  4104d5:	and    esp,DWORD PTR [ebx]
  4104d7:	jmp    0x410464
  4104d9:	retf   
  4104da:	mul    BYTE PTR [ecx]
  4104dc:	ins    DWORD PTR es:[edi],dx
  4104dd:	dec    ebp
  4104de:	push   ecx
  4104df:	dec    esi
  4104e0:	dec    eax
  4104e1:	(bad)  
  4104e2:	cmp    al,0xce
  4104e4:	xchg   ecx,eax
  4104e5:	out    dx,al
  4104e6:	mov    edi,edi
  4104e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e9:	add    al,0x19
  4104eb:	mov    cl,0xb2
  4104ed:	push   ebp
  4104ee:	xor    DWORD PTR [eax],esi
  4104f0:	or     eax,0x39b650b8
  4104f5:	call   0x3efff7db
  4104fa:	xlat   BYTE PTR ds:[ebx]
  4104fb:	and    al,0xaf
  4104fd:	cdq    
  4104fe:	dec    edi
  4104ff:	lock sub eax,0x36f3d28d
  410505:	pop    esi
  410506:	mov    bl,0x39
  410508:	sbb    eax,0xe2af07a9
  41050d:	nop
  41050e:	mov    dl,0x19
  410510:	inc    eax
  410511:	jnp    0x41055f
  410513:	jmp    0x41055a
  410515:	outs   dx,BYTE PTR ds:[esi]
  410516:	mov    dl,0x72
  410518:	ficomp WORD PTR ds:0x20f8ce89
  41051e:	mov    edi,0xc100f948
  410523:	xchg   edx,eax
  410524:	mul    BYTE PTR [ebp+0x27]
  410527:	xlat   BYTE PTR ds:[ebx]
  410528:	inc    ebx
  410529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052a:	fidiv  WORD PTR [ebx]
  41052c:	cwde   
  41052d:	scas   eax,DWORD PTR es:[edi]
  41052e:	leave  
  41052f:	shr    BYTE PTR [edi-0x7],1
  410532:	aad    0x7
  410534:	dec    esp
  410535:	outs   dx,DWORD PTR ds:[esi]
  410536:	dec    esp
  410537:	das    
  410538:	mov    esp,0x6e862666
  41053d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41053e:	jns    0x41059a
  410540:	pop    ds
  410541:	fnstcw WORD PTR [eax+0x1d]
  410544:	xor    al,0x2f
  410546:	sub    BYTE PTR [eax-0x494a73ee],dl
  41054c:	lods   eax,DWORD PTR ds:[esi]
  41054d:	gs xchg edi,eax
  41054f:	ret    
  410550:	pop    ecx
  410551:	enter  0x9362,0x20
  410555:	add    ecx,DWORD PTR [eax+ebp*1]
  410558:	je     0x410563
  41055a:	push   eax
  41055b:	daa    
  41055c:	jp     0x4104e2
  41055e:	cs push ecx
  410560:	ss cli 
  410562:	and    eax,esi
  410564:	test   BYTE PTR [ebx],bh
  410566:	adc    eax,0xf87b9139
  41056b:	cmp    DWORD PTR [ebx],0x62
  41056e:	cmp    al,cl
  410570:	sub    eax,0x36d9f2d4
  410575:	and    cl,BYTE PTR [edi]
  410577:	pop    ebx
  410578:	es and ch,bh
  41057b:	test   eax,0x42fa9ba9
  410580:	xchg   esp,eax
  410581:	fidivr WORD PTR [ecx]
  410583:	xor    BYTE PTR [eax-0x75376954],cl
  410589:	(bad)  
  41058a:	jp     0x4105d7
  41058c:	cdq    
  41058d:	test   BYTE PTR [ebx],dl
  41058f:	arpl   WORD PTR [eax-0x75f4c3b0],ax
  410595:	inc    edx
  410596:	dec    esi
  410597:	data16 sub al,0x41
  41059a:	mov    DWORD PTR [ebx-0x14],esp
  41059d:	jecxz  0x410579
  41059f:	cmp    DWORD PTR [ebx-0x77],ebp
  4105a2:	mov    ah,0x7b
  4105a4:	fisubr DWORD PTR [ebx+0x47]
  4105a7:	cmp    ah,ah
  4105a9:	in     al,dx
  4105aa:	repz mov bh,0xba
  4105ad:	stos   DWORD PTR es:[edi],eax
  4105ae:	ss fs aam 0xec
  4105b2:	jmp    0x41058c
  4105b4:	push   edx
  4105b5:	cmp    ebp,ecx
  4105b7:	cdq    
  4105b8:	enter  0x435e,0x16
  4105bc:	repnz (bad) 
  4105be:	xchg   ebx,eax
  4105bf:	add    esi,DWORD PTR [ebp+0x5b]
  4105c2:	jmp    0xba0a7b9e
  4105c7:	or     eax,0xbaec4870
  4105cc:	inc    esi
  4105cd:	in     al,0xe3
  4105cf:	popa   
  4105d0:	pusha  
  4105d1:	out    0x8a,al
  4105d3:	addr16 sbb al,0x74
  4105d6:	xchg   edx,eax
  4105d7:	push   eax
  4105d8:	sar    DWORD PTR [ebx],cl
  4105da:	out    dx,al
  4105db:	jne    0x4105e7
  4105dd:	ret    0xcb69
  4105e0:	dec    ebp
  4105e1:	fisub  WORD PTR [eax]
  4105e3:	iret   
  4105e4:	int3   
  4105e5:	sbb    cl,BYTE PTR [eax+0x1e]
  4105e8:	fs sub al,0xaa
  4105eb:	repz scas eax,DWORD PTR es:[edi]
  4105ed:	in     eax,dx
  4105ee:	mov    ebx,edx
  4105f0:	lea    ecx,es:[ebp-0x6bf23ea3]
  4105f7:	sbb    eax,0xa451db0
  4105fc:	mov    eax,ds:0xba763edc
  410601:	sti    
  410602:	sbb    eax,0xdd53b85f
  410607:	fstp   QWORD PTR [ebx]
  410609:	imul   esp,ecx,0xffffff9f
  41060c:	mov    al,0x8
  41060e:	outs   dx,DWORD PTR ds:[esi]
  41060f:	cli    
  410610:	bswap  ebx
  410612:	adc    edx,DWORD PTR [esi]
  410614:	pop    ss
  410615:	xchg   DWORD PTR [edi-0x69],esp
  410618:	adc    dl,BYTE PTR [ebx+0x5462dd8f]
  41061e:	adc    bl,BYTE PTR [ebx]
  410620:	sahf   
  410621:	mov    al,ds:0x49774c16
  410626:	(bad)  
  410627:	fidiv  WORD PTR [ebp+edx*4+0x7613f5ab]
  41062e:	sbb    eax,DWORD PTR [ebx-0x2bc3543]
  410634:	inc    ebp
  410635:	dec    BYTE PTR [edi+0x45889dbf]
  41063b:	test   al,0xa6
  41063d:	out    0xd8,al
  41063f:	dec    ebx
  410640:	xor    eax,0x30398bc5
  410645:	sub    BYTE PTR [edx+eax*2+0x20],dh
  410649:	out    0x46,eax
  41064b:	lock (bad) 
  41064d:	pusha  
  41064e:	mov    eax,ds:0x2df30d80
  410653:	js     0x410699
  410655:	pop    ecx
  410656:	adc    cl,BYTE PTR [edi]
  410658:	rcr    BYTE PTR [edi+0x3b],1
  41065b:	fcom   DWORD PTR [edi-0x3d07a0b0]
  410661:	dec    ecx
  410662:	jb     0x41069b
  410664:	adc    eax,0xd99ada13
  410669:	add    bl,BYTE PTR [edi+ebx*2+0x66a56c98]
  410670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410671:	pop    eax
  410672:	mov    ds:0x184b9c7c,al
  410677:	xchg   BYTE PTR [ebx-0x60],cl
  41067a:	test   al,0xd9
  41067c:	es out dx,al
  41067e:	or     al,0xb5
  410680:	fdiv   st,st(4)
  410682:	in     al,0xf9
  410684:	popf   
  410685:	inc    ecx
  410686:	sti    
  410687:	pop    eax
  410688:	adc    BYTE PTR [ebx-0x7c],dh
  41068b:	pop    ecx
  41068c:	mov    eax,ds:0xe9fdc09
  410691:	sub    BYTE PTR [edx-0x17f52661],dl
  410697:	sar    BYTE PTR [edi+0x4d],1
  41069a:	popa   
  41069b:	outs   dx,BYTE PTR ds:[esi]
  41069c:	in     al,dx
  41069d:	sub    al,0x56
  41069f:	mov    ah,0x51
  4106a1:	sub    dh,BYTE PTR [eax]
  4106a3:	fstp   QWORD PTR [edi+0x1c]
  4106a6:	enter  0xbc30,0x44
  4106aa:	xor    ch,0xff
  4106ad:	jae    0x410656
  4106af:	hlt    
  4106b0:	mov    BYTE PTR [edi-0x7e55c23d],ah
  4106b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106b7:	out    0x99,al
  4106b9:	fwait
  4106ba:	adc    al,0x76
  4106bc:	test   eax,0x6a6e154e
  4106c1:	enter  0x53d9,0xa2
  4106c5:	cld    
  4106c6:	mov    dh,0xf0
  4106c8:	fcomi  st,st(5)
  4106ca:	mov    ebp,0xd6dd77f6
  4106cf:	aad    0xcb
  4106d1:	sub    bh,BYTE PTR [edx-0x39]
  4106d4:	adc    dh,BYTE PTR [ecx+0x739f98ba]
  4106da:	das    
  4106db:	fsincos 
  4106dd:	pop    esi
  4106de:	fstp   TBYTE PTR [ebx]
  4106e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106e1:	xor    ebx,DWORD PTR [edi+0x7d15597d]
  4106e7:	cmp    BYTE PTR [edx+0x7a660c63],ah
  4106ed:	pop    ss
  4106ee:	leave  
  4106ef:	call   0x58b4:0x6e62973e
  4106f6:	xchg   esi,eax
  4106f7:	and    BYTE PTR [ecx+0x43],bl
  4106fa:	jo     0x410779
  4106fc:	xchg   ecx,eax
  4106fd:	sbb    esp,esp
  4106ff:	push   ecx
  410700:	mov    dl,0x34
  410702:	fs aad 0xbf
  410705:	inc    edx
  410706:	mov    esi,0x3b93816a
  41070b:	push   edi
  41070c:	pminsw mm5,QWORD PTR [ebx-0x67]
  410710:	aam    0xe9
  410712:	xchg   esi,eax
  410713:	cdq    
  410714:	pop    es
  410715:	rol    DWORD PTR [eax+0x7d],cl
  410718:	pop    edi
  410719:	(bad)  
  41071a:	xchg   ecx,eax
  41071b:	adc    al,0x5b
  41071d:	sbb    esp,ecx
  41071f:	sti    
  410720:	pop    eax
  410721:	xor    ebp,DWORD PTR [ebx]
  410723:	jmp    0xbd39820d
  410728:	cdq    
  410729:	inc    edx
  41072a:	leave  
  41072b:	or     eax,0x8443e078
  410730:	test   al,0xac
  410732:	dec    esi
  410733:	push   ds
  410734:	sysexit 
  410736:	in     eax,dx
  410737:	daa    
  410738:	mov    cl,0xc6
  41073a:	loopne 0x41078a
  41073c:	lods   eax,DWORD PTR ds:[esi]
  41073d:	aaa    
  41073e:	cld    
  41073f:	and    bl,BYTE PTR [eax+edx*2]
  410742:	mov    ecx,0x9c58551f
  410747:	rol    DWORD PTR [edx-0x2d],cl
  41074a:	int    0xa
  41074c:	xchg   esp,eax
  41074d:	or     DWORD PTR [ecx],0x52
  410750:	jo     0x410788
  410752:	pop    esi
  410753:	gs jecxz 0x4107b3
  410756:	xor    DWORD PTR [edi-0x2cec55a1],eax
  41075c:	jmp    0x53b3e78c
  410761:	ins    BYTE PTR es:[edi],dx
  410762:	pop    edx
  410763:	xchg   edx,eax
  410764:	push   ebp
  410765:	fisub  DWORD PTR [esp+ebp*4-0x3c584c06]
  41076c:	adc    dh,cl
  41076e:	sub    bh,dh
  410770:	mov    ebp,ecx
  410772:	shr    DWORD PTR [ebp-0x6a],0x30
  410776:	adc    dh,dh
  410778:	xchg   BYTE PTR es:[ecx+0x72],bh
  41077c:	shl    ebx,cl
  41077e:	xor    al,0xa2
  410780:	outs   dx,DWORD PTR ds:[esi]
  410781:	push   ds
  410782:	jnp    0x410792
  410784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410785:	lods   eax,DWORD PTR ds:[esi]
  410786:	sbb    eax,0xa6b1a688
  41078b:	mov    dl,0x4c
  41078d:	push   esp
  41078e:	xchg   ebx,eax
  41078f:	mov    eax,ds:0x200fce31
  410794:	mov    dh,0x36
  410796:	adc    ebx,DWORD PTR [edi]
  410798:	cmp    BYTE PTR [esi],al
  41079a:	je     0x4107eb
  41079c:	sbb    esp,DWORD PTR [edx+eax*8]
  41079f:	inc    ebp
  4107a0:	dec    eax
  4107a1:	jns    0x41080c
  4107a3:	jp     0x4107eb
  4107a5:	bound  ebx,QWORD PTR [ecx+0x6e999362]
  4107ab:	mov    ch,0xe7
  4107ad:	cmp    eax,0x31327f6f
  4107b2:	rcl    BYTE PTR [edx],1
  4107b4:	push   0x40
  4107b6:	push   ebp
  4107b7:	ss call edi
  4107ba:	mov    ebp,0xd5ea6f02
  4107bf:	xor    BYTE PTR [ebp+edi*1+0x4ff4c93a],bl
  4107c6:	mov    dl,0xb8
  4107c8:	arpl   WORD PTR [edi],si
  4107ca:	call   0xe08b9b58
  4107cf:	push   0xddb6573b
  4107d4:	jle    0x41082b
  4107d6:	inc    esp
  4107d7:	hlt    
  4107d8:	dec    esi
  4107d9:	sbb    DWORD PTR [esp+eax*2+0x480490e2],esi
  4107e0:	test   DWORD PTR [edi-0x6b],esp
  4107e3:	push   0xffffff90
  4107e5:	jae    0x4107fa
  4107e7:	cmp    edx,DWORD PTR [ebx-0x3c]
  4107ea:	push   edi
  4107eb:	sub    ch,ch
  4107ed:	fcmove st,st(0)
  4107ef:	cmp    DWORD PTR [edi+0x48960f05],ecx
  4107f5:	or     edi,edi
  4107f7:	cld    
  4107f8:	jbe    0x410850
  4107fa:	cmc    
  4107fb:	inc    eax
  4107fc:	lea    esi,[edx-0xe05023b]
  410802:	ds pushf 
  410804:	pop    esi
  410805:	add    al,0xbb
  410807:	cmp    al,0x93
  410809:	cmp    dh,dl
  41080b:	sbb    eax,0xbce36f95
  410810:	xor    edi,DWORD PTR [eax]
  410812:	dec    eax
  410813:	frstor [edi]
  410815:	loopne 0x410799
  410817:	test   eax,0xfe343080
  41081c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41081d:	out    0xc1,al
  41081f:	std    
  410820:	(bad)  
  410821:	jb     0x410869
  410823:	pop    ecx
  410824:	mov    esi,ebx
  410826:	mov    eax,DWORD PTR [ecx-0x49]
  410829:	outs   dx,DWORD PTR ds:[esi]
  41082a:	cld    
  41082b:	lods   eax,DWORD PTR ds:[esi]
  41082c:	sbb    BYTE PTR ds:0xdbd353b5,0x15
  410833:	sbb    DWORD PTR [edx],0x44530042
  410839:	mov    ds:0xd80a78b,eax
  41083e:	lahf   
  41083f:	mov    al,ds:0xaaf2f5d4
  410844:	(bad)  
  410845:	jns    0x4108b8
  410847:	cmp    BYTE PTR [eax],0x80
  41084a:	rcl    DWORD PTR [eax-0x68f5ab85],0x40
  410851:	in     eax,0x4f
  410853:	and    BYTE PTR [edi+edi*2+0x4cfed90c],0x8e
  41085b:	int    0xd4
  41085d:	in     al,0xe6
  41085f:	(bad)  
  410860:	jmp    0x410841
  410862:	pop    ebx
  410863:	bound  edi,QWORD PTR [ecx+edi*1]
  410866:	jne    0x410892
  410868:	repz xchg edx,eax
  41086a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41086b:	push   edi
  41086c:	pop    esp
  41086d:	jge    0x410827
  41086f:	xchg   edx,eax
  410870:	xor    eax,0xe0446115
  410875:	mov    ebx,0x5234759c
  41087a:	rol    DWORD PTR [eax+0x35efeee0],0x42
  410881:	das    
  410882:	call   0x4e64:0x5d4c3d21
  410889:	xchg   DWORD PTR [eax+ebx*8+0x341a7859],esi
  410890:	cld    
  410891:	pop    edx
  410892:	jbe    0x410873
  410894:	popf   
  410895:	xchg   DWORD PTR [edx+eax*8],edx
  410898:	aas    
  410899:	enter  0x772,0x61
  41089d:	inc    edx
  41089e:	mov    eax,0x8e08d10f
  4108a3:	and    edx,DWORD PTR [ecx]
  4108a5:	adc    cl,BYTE PTR [ebx]
  4108a7:	push   0xb
  4108a9:	scas   al,BYTE PTR es:[edi]
  4108aa:	in     al,0xed
  4108ac:	retf   0xef63
  4108af:	cmp    DWORD PTR [ebx-0x74446f79],ebp
  4108b5:	jg     0x41083e
  4108b7:	in     eax,dx
  4108b8:	pop    DWORD PTR [ecx-0x62ba0de6]
  4108be:	dec    edi
  4108bf:	cli    
  4108c0:	cli    
  4108c1:	lea    ebp,ds:0x2a19de1c
  4108c7:	repnz enter 0x1489,0xdb
  4108cc:	or     esi,0x80e15408
  4108d2:	push   ecx
  4108d3:	xchg   ecx,eax
  4108d4:	sub    eax,eax
  4108d6:	mov    edx,DWORD PTR [ebx-0x33]
  4108d9:	jp     0x41087d
  4108db:	data16 mov al,ds:0xaf21775
  4108e1:	push   ebp
  4108e2:	xchg   ebx,eax
  4108e3:	(bad)  
  4108e4:	xor    al,BYTE PTR [ebx+ebp*2+0x127c52d6]
  4108eb:	call   0x9a3f2511
  4108f0:	add    DWORD PTR [edx+0x7528d9db],esp
  4108f6:	push   0x28
  4108f8:	pop    eax
  4108f9:	push   cs
  4108fa:	test   bl,ch
  4108fc:	cmp    DWORD PTR [ecx-0x1b],edx
  4108ff:	scas   al,BYTE PTR es:[edi]
  410900:	call   0x2e7fa086
  410905:	ror    BYTE PTR [ecx-0x37bd569f],cl
  41090b:	data16 xchg BYTE PTR [ebp-0x6d],dl
  41090f:	mov    eax,0xca6cfc16
  410914:	pop    ds
  410915:	adc    edx,DWORD PTR [esi+ecx*8+0x33]
  410919:	(bad)  
  41091a:	mov    esp,0xc6c50fde
  41091f:	scas   eax,DWORD PTR es:[edi]
  410920:	ins    DWORD PTR es:[edi],dx
  410921:	dec    edx
  410922:	arpl   WORD PTR [edx],bp
  410924:	mov    eax,ds:0x70dc17f1
  410929:	jnp    0x4108ec
  41092b:	cmp    eax,0x13fa4ea7
  410930:	aas    
  410931:	aas    
  410932:	icebp  
  410933:	ins    BYTE PTR es:[edi],dx
  410934:	xchg   ebp,eax
  410935:	sahf   
  410936:	in     eax,dx
  410937:	call   0xd566:0x4bcdea5d
  41093e:	xlat   BYTE PTR ds:[ebx]
  41093f:	adc    dh,bl
  410941:	scas   al,BYTE PTR es:[edi]
  410942:	outs   dx,DWORD PTR ds:[esi]
  410943:	mov    edx,DWORD PTR [edx]
  410945:	dec    esi
  410946:	xor    al,BYTE PTR [esi-0x4f]
  410949:	shl    DWORD PTR [eax-0x46],cl
  41094c:	shl    DWORD PTR cs:[ebp+0x36],1
  410950:	xor    BYTE PTR [esp+ecx*8+0x71],al
  410954:	fstp   DWORD PTR [ebx-0x35584448]
  41095a:	popa   
  41095b:	jle    0x41094b
  41095d:	je     0x4108fd
  41095f:	sub    bl,BYTE PTR [ecx-0x644ba3a8]
  410965:	clc    
  410966:	int    0xa8
  410968:	cmc    
  410969:	pop    esi
  41096a:	push   eax
  41096b:	push   eax
  41096c:	pop    ecx
  41096d:	sbb    WORD PTR [edx+ecx*8-0x5b],si
  410972:	and    al,0x29
  410974:	dec    ecx
  410975:	and    BYTE PTR [edx-0x41],ch
  410978:	cdq    
  410979:	push   edx
  41097a:	ret    0x812f
  41097d:	call   0x323bdb11
  410982:	stos   BYTE PTR es:[edi],al
  410983:	xchg   ebp,eax
  410984:	fsubrp st(5),st
  410986:	add    DWORD PTR [eax*1-0x70d7cf96],ebp
  41098d:	js     0x41093b
  41098f:	outs   dx,BYTE PTR ds:[esi]
  410990:	push   ebx
  410991:	add    BYTE PTR [ebx],dl
  410993:	mov    cl,0x25
  410995:	out    dx,eax
  410996:	lock (bad) 
  410998:	fisubr WORD PTR [ebp-0x7b]
  41099b:	jb     0x41095c
  41099d:	pop    eax
  41099e:	sub    al,0xf8
  4109a0:	mov    eax,0xb484afde
  4109a5:	sbb    BYTE PTR [ebx-0x7a628b1c],dl
  4109ab:	jno    0x4109a0
  4109ad:	push   0x9ef6ca19
  4109b2:	pop    eax
  4109b3:	push   ebx
  4109b4:	popa   
  4109b5:	push   ebx
  4109b6:	dec    ebx
  4109b7:	out    dx,al
  4109b8:	or     DWORD PTR [ecx+0x2953785b],eax
  4109be:	pop    ebx
  4109bf:	add    eax,0xe0d8205c
  4109c4:	xchg   ebx,eax
  4109c5:	cmp    edx,edi
  4109c7:	xchg   edi,eax
  4109c8:	fld    TBYTE PTR [edi]
  4109ca:	outs   dx,DWORD PTR ds:[esi]
  4109cb:	or     al,0x69
  4109cd:	xor    esp,DWORD PTR [ebp-0x6e23e674]
  4109d3:	xor    eax,0xb2fe3cc6
  4109d8:	ret    0x5256
  4109db:	mov    ch,BYTE PTR [edi]
  4109dd:	or     BYTE PTR [esi-0x305ee750],cl
  4109e3:	test   eax,0x38c0b3d0
  4109e8:	scas   al,BYTE PTR es:[edi]
  4109e9:	test   al,0x33
  4109eb:	sbb    DWORD PTR [ebp-0x10c175f5],edx
  4109f1:	aad    0xd6
  4109f3:	fs xor eax,0x70fbb2f
  4109f9:	mov    al,ds:0x461cf4a0
  4109fe:	fcmovnbe st,st(7)
  410a00:	stos   DWORD PTR es:[edi],eax
  410a01:	je     0x410986
  410a03:	mov    ds:0x352d3ae1,eax
  410a08:	xchg   edx,eax
  410a09:	inc    eax
  410a0a:	xchg   ecx,eax
  410a0b:	dec    ebx
  410a0c:	pop    ecx
  410a0d:	push   0x969d5be6
  410a12:	fcomi  st,st(7)
  410a14:	sub    eax,0x95b4f47e
  410a19:	cwde   
  410a1a:	fwait
  410a1b:	sub    eax,DWORD PTR [esp+ebp*4+0x3984754c]
  410a22:	fwait
  410a23:	cmc    
  410a24:	jo     0x410aa0
  410a26:	dec    ebp
  410a27:	leave  
  410a28:	scas   eax,DWORD PTR es:[edi]
  410a29:	push   ds
  410a2a:	add    BYTE PTR [ecx-0x4d],bh
  410a2d:	cdq    
  410a2e:	pushf  
  410a2f:	es jp  0x410a92
  410a32:	pop    edi
  410a33:	xchg   esi,eax
  410a34:	ss rol ah,0xca
  410a38:	pop    esi
  410a39:	shufps xmm3,XMMWORD PTR [ecx+0x6a27a3e5],0x1d
  410a41:	int    0xf2
  410a43:	jg     0x410a34
  410a45:	mov    bl,0x94
  410a47:	clc    
  410a48:	sbb    dl,BYTE PTR [eax]
  410a4a:	push   edi
  410a4b:	add    al,dl
  410a4d:	cli    
  410a4e:	mov    esp,0x134422e
  410a53:	out    dx,eax
  410a54:	xchg   ebx,eax
  410a55:	(bad)  
  410a57:	xchg   edi,eax
  410a58:	inc    esp
  410a59:	je     0x410a52
  410a5b:	jb     0x410adc
  410a5d:	jo     0x410a3e
  410a5f:	jge    0x410abc
  410a61:	mov    ebx,0xdd23b982
  410a66:	mov    ebx,0x4ab2a602
  410a6b:	adc    bh,bh
  410a6d:	div    BYTE PTR [eax]
  410a6f:	mov    eax,0x49b9b55d
  410a74:	xchg   DWORD PTR [ecx-0x46a39851],esp
  410a7a:	push   ecx
  410a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a7c:	sti    
  410a7d:	pop    edi
  410a7e:	(bad)  
  410a7f:	push   0x73
  410a81:	or     eax,0xfbd0972
  410a86:	test   DWORD PTR [esi+eiz*1],esp
  410a89:	fcomp  DWORD PTR [edx]
  410a8b:	add    BYTE PTR [edx+0x2],ch
  410a8e:	pusha  
  410a8f:	js     0x410a36
  410a91:	pop    edi
  410a92:	cmp    esp,ebp
  410a94:	cwde   
  410a95:	js     0x410a56
  410a97:	push   ebp
  410a98:	(bad)  
  410a99:	je     0x410af5
  410a9b:	arpl   WORD PTR [esi-0x9],bp
  410a9e:	jno    0x410ac1
  410aa0:	xchg   edx,eax
  410aa1:	stos   DWORD PTR es:[edi],eax
  410aa2:	sbb    esi,DWORD PTR [edx]
  410aa4:	shr    DWORD PTR [eax],1
  410aa6:	lock into 
  410aa8:	or     dl,BYTE PTR [ecx]
  410aaa:	rcl    DWORD PTR [edx+0x639c3de7],1
  410ab0:	sub    al,0xa5
  410ab2:	(bad)  
  410ab3:	in     eax,0x79
  410ab5:	bound  ebx,QWORD PTR [edx+0x14]
  410ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ab9:	pop    ss
  410aba:	xor    eax,ebx
  410abc:	pop    edi
  410abd:	mov    ebp,0x952d5d69
  410ac2:	mov    WORD PTR [edx],gs
  410ac4:	imul   edx,DWORD PTR [ecx],0xc100c715
  410aca:	gs in  eax,0x6b
  410acd:	cmp    BYTE PTR [esi+0x1f44e15a],dl
  410ad3:	mov    al,0xb4
  410ad5:	push   0xffffffc4
  410ad7:	mov    ebp,0x5ee244f
  410adc:	stc    
  410add:	icebp  
  410ade:	test   eax,0xd0f57c0f
  410ae3:	jae    0x410b39
  410ae5:	loop   0x410a75
  410ae7:	adc    ch,BYTE PTR [esi]
  410ae9:	shl    DWORD PTR ss:[ebx-0x15],0x9a
  410aee:	push   ebp
  410aef:	mov    ecx,0xaa28b447
  410af4:	push   ss
  410af5:	retf   
  410af6:	jle    0x410af5
  410af8:	(bad)  
  410af9:	fisttp DWORD PTR [ecx-0x3a]
  410afc:	xor    DWORD PTR [edx+0x21dc25bd],edx
  410b02:	jae    0x410ae1
  410b04:	or     BYTE PTR [edi-0x3],al
  410b07:	scas   eax,DWORD PTR es:[edi]
  410b08:	mov    ch,0xeb
  410b0a:	xor    DWORD PTR [ebx+0x56],ebx
  410b0d:	js     0x410b19
  410b0f:	push   ebx
  410b10:	adc    DWORD PTR [esi],esp
  410b12:	jno    0x410ac6
  410b14:	pop    esi
  410b15:	call   0xd80c06ca
  410b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b1b:	add    eax,0x996929e4
  410b20:	and    al,0xdb
  410b22:	xchg   ebp,eax
  410b23:	sbb    ebp,DWORD PTR [eax-0x17]
  410b26:	mov    al,ds:0x683b7c25
  410b2b:	mov    bh,0x1
  410b2d:	xchg   esp,eax
  410b2e:	sahf   
  410b2f:	jge    0x410b91
  410b31:	inc    esi
  410b32:	aas    
  410b33:	jne    0x410b07
  410b35:	xchg   DWORD PTR [esp+ecx*2],esp
  410b38:	jns    0x410ba5
  410b3a:	(bad)  
  410b3b:	sbb    BYTE PTR [edi],cl
  410b3d:	push   esi
  410b3e:	add    ch,cl
  410b40:	neg    DWORD PTR [edi+0x64]
  410b43:	lods   al,BYTE PTR ds:[esi]
  410b44:	mov    ecx,0x3ec80c24
  410b49:	or     eax,0x720539f7
  410b4e:	push   ecx
  410b4f:	mov    esp,0xa4a79112
  410b54:	push   ecx
  410b55:	outs   dx,BYTE PTR ds:[esi]
  410b56:	rcl    DWORD PTR [ecx],0x3c
  410b59:	push   ds
  410b5a:	add    esi,DWORD PTR [eax+0x4e31e3fd]
  410b60:	(bad)  
  410b62:	dec    eax
  410b63:	cmp    al,0x5d
  410b65:	arpl   WORD PTR [edx+0x5a],bx
  410b68:	mov    bh,0x7b
  410b6a:	cmp    eax,0x2b505414
  410b6f:	sbb    edi,DWORD PTR [edi-0x6d]
  410b72:	sub    BYTE PTR [esi+0x3a],dl
  410b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b76:	ins    DWORD PTR es:[edi],dx
  410b77:	call   0x712dae6d
  410b7c:	rcl    DWORD PTR [edx-0x5922d0b7],0xa7
  410b83:	mov    eax,ds:0x983312ac
  410b88:	adc    BYTE PTR [eax-0x1193da1a],bh
  410b8e:	pop    esi
  410b8f:	cmp    dh,BYTE PTR [ecx]
  410b91:	ja     0x410bb3
  410b93:	mov    dl,0x96
  410b95:	jno    0x410b7b
  410b97:	pop    ds
  410b98:	fwait
  410b99:	xor    ebp,DWORD PTR [edx-0x61]
  410b9c:	rcr    BYTE PTR [esi+ebx*2+0x34],cl
  410ba0:	ins    BYTE PTR es:[edi],dx
  410ba1:	cmc    
  410ba2:	or     DWORD PTR [edi+0x36],esp
  410ba5:	clc    
  410ba6:	jno    0x410b3e
  410ba8:	sar    esi,1
  410baa:	jne    0x410c0a
  410bac:	jbe    0x410b89
  410bae:	and    bh,ch
  410bb0:	data16 jb 0x410b3d
  410bb3:	inc    ebx
  410bb4:	inc    esi
  410bb5:	xchg   ecx,eax
  410bb6:	push   eax
  410bb7:	pop    ebp
  410bb8:	pop    ss
  410bb9:	ins    BYTE PTR es:[edi],dx
  410bba:	sbb    ah,BYTE PTR [eax]
  410bbc:	(bad)  [edx]
  410bbe:	inc    esp
  410bbf:	push   ebx
  410bc0:	cld    
  410bc1:	sbb    esp,DWORD PTR [eax+0x3b]
  410bc4:	sti    
  410bc5:	mov    esp,0x6edf14d5
  410bca:	push   edi
  410bcb:	sbb    al,BYTE PTR [ebx-0x50]
  410bce:	mov    eax,0xe817e23f
  410bd3:	mov    eax,ds:0x59f32eb
  410bd8:	hlt    
  410bd9:	sbb    DWORD PTR [eax],edi
  410bdb:	(bad)  
  410bdc:	(bad)  
  410bdd:	pop    esp
  410bde:	xchg   edx,eax
  410bdf:	xchg   ecx,eax
  410be0:	pop    ds
  410be1:	mov    DWORD PTR [ebx],ebp
  410be3:	out    dx,eax
  410be4:	not    DWORD PTR [ebx-0x17]
  410be7:	sub    eax,0x61aab0f2
  410bec:	pop    es
  410bed:	imul   ecx,DWORD PTR [edi+0x266a054d],0xb06238d
  410bf7:	mov    ds:0xfda08a4b,eax
  410bfc:	push   ss
  410bfd:	dec    esi
  410bfe:	test   al,0xb1
  410c00:	push   ebp
  410c01:	call   0xea5b:0x7a3a7ca8
  410c08:	inc    ebx
  410c09:	mov    cl,BYTE PTR [ebx+0x36]
  410c0c:	cmp    DWORD PTR [edx],ebx
  410c0e:	lods   al,BYTE PTR ds:[esi]
  410c0f:	dec    ebp
  410c10:	popf   
  410c11:	or     dh,bh
  410c13:	(bad)  
  410c14:	jns    0x410c5c
  410c16:	out    0xe3,al
  410c18:	in     eax,dx
  410c19:	add    al,0x25
  410c1b:	fs push ecx
  410c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1e:	lock stc 
  410c20:	in     eax,0xb4
  410c22:	push   edi
  410c23:	aas    
  410c24:	inc    esi
  410c25:	mov    ecx,0xde76fde3
  410c2a:	push   ebx
  410c2b:	sbb    ch,BYTE PTR [esi+0x9]
  410c2e:	xchg   edi,eax
  410c2f:	pop    esp
  410c30:	pop    ebx
  410c31:	mov    esp,0xea73dd02
  410c36:	cwde   
  410c37:	push   es
  410c38:	fdivr  QWORD PTR [edx+0x22e9be65]
  410c3e:	cld    
  410c3f:	dec    edx
  410c40:	dec    edx
  410c41:	cmc    
  410c42:	push   0x5f2310f6
  410c47:	fmul   QWORD PTR [edx]
  410c49:	scas   eax,DWORD PTR es:[edi]
  410c4a:	push   cs
  410c4b:	and    eax,0xd11a96a
  410c50:	frstor [ecx+ebp*1+0x55cd3c48]
  410c57:	into   
  410c58:	retf   0x4ade
  410c5b:	ins    DWORD PTR es:[edi],dx
  410c5c:	mov    ds:0x9bf99c66,al
  410c61:	add    DWORD PTR [esi+0x7f11c4f6],edi
  410c67:	lock mov ebx,0x3185d641
  410c6d:	fisttp QWORD PTR ss:[edi]
  410c71:	add    al,0x37
  410c74:	inc    ebx
  410c75:	js     0x410c6e
  410c77:	dec    eax
  410c78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c79:	xor    dl,ah
  410c7b:	pop    esi
  410c7c:	sbb    esi,DWORD PTR [ebp-0x4da5132d]
  410c82:	and    BYTE PTR [ebx+0x605da74b],dh
  410c88:	std    
  410c89:	cmp    BYTE PTR [ecx+0x5a],0x7d
  410c8d:	(bad)  
  410c8f:	mov    DWORD PTR [esi+0x46f7783f],esp
  410c95:	jb     0x410cfe
  410c97:	add    bh,BYTE PTR [ecx+0x5168ffe0]
  410c9d:	adc    eax,0x1b5fef8c
  410ca2:	push   0xe5df3d5d
  410ca7:	inc    esp
  410ca8:	push   esi
  410ca9:	shr    DWORD PTR [edi],0xb9
  410cac:	and    eax,0xc6261f1
  410cb1:	imul   edi,DWORD PTR [eax-0xab970ed],0xfffffff7
  410cb8:	out    0x47,al
  410cba:	inc    esp
  410cbb:	and    eax,0x46883391
  410cc0:	sti    
  410cc1:	jp     0x410d03
  410cc3:	hlt    
  410cc4:	sbb    DWORD PTR [edi-0x2e],0x24
  410cc8:	repz adc dl,dh
  410ccb:	mov    eax,0xbbc82c15
  410cd0:	and    BYTE PTR [edx+edi*8-0xf],dl
  410cd4:	pop    edi
  410cd5:	push   ds
  410cd6:	pop    esi
  410cd7:	sti    
  410cd8:	jnp    0x410cf5
  410cda:	mov    bl,0x8b
  410cdc:	jecxz  0x410d23
  410cde:	push   eax
  410cdf:	sbb    cl,bh
  410ce1:	dec    esi
  410ce2:	add    al,0xec
  410ce4:	je     0x410d62
  410ce6:	sub    dh,ah
  410ce8:	bound  ecx,QWORD PTR [esi+eax*1-0x2c2b79a9]
  410cef:	xchg   BYTE PTR [ecx],al
  410cf1:	jno    0x410cc5
  410cf3:	pop    ecx
  410cf4:	aaa    
  410cf5:	adc    al,dh
  410cf7:	outs   dx,BYTE PTR ds:[esi]
  410cf8:	popf   
  410cf9:	inc    DWORD PTR [esi+eax*1-0x61c8a1a8]
  410d00:	jnp    0x410cb7
  410d02:	pushf  
  410d03:	mov    bh,0x64
  410d05:	call   0x60077b71
  410d0a:	ficom  WORD PTR [edi]
  410d0c:	mov    edx,0x4dbd733c
  410d11:	and    edx,DWORD PTR [ecx]
  410d13:	out    dx,eax
  410d14:	mov    ebx,0x458dde65
  410d19:	mov    ds:0xe604e31b,al
  410d1e:	shl    DWORD PTR [eax+0x30],1
  410d21:	and    eax,0x528eba28
  410d26:	pop    edx
  410d27:	fcomp  QWORD PTR [ecx+0x16]
  410d2a:	xor    cl,BYTE PTR [eax-0x78b54734]
  410d30:	and    dl,BYTE PTR [esi+0x21]
  410d33:	pop    esp
  410d34:	mov    eax,cr1
  410d37:	inc    ebx
  410d38:	xchg   edx,edx
  410d3a:	arpl   WORD PTR [ebx+0x49],di
  410d3d:	lods   eax,DWORD PTR ds:[esi]
  410d3e:	lahf   
  410d3f:	add    BYTE PTR [edx-0x11d7b4bd],bh
  410d45:	adc    ah,BYTE PTR [ecx]
  410d47:	loope  0x410cd4
  410d49:	fstp   TBYTE PTR [eax-0x16666ac]
  410d4f:	xor    bl,0xa4
  410d52:	int    0xe5
  410d54:	fstp   DWORD PTR [ebx-0x3e]
  410d57:	aaa    
  410d58:	jns    0x410cfb
  410d5a:	in     al,dx
  410d5b:	and    eax,0xdbdfc4ab
  410d60:	xor    BYTE PTR [edx-0x34],al
  410d63:	lods   eax,DWORD PTR ds:[esi]
  410d64:	xor    DWORD PTR [edx-0x6a],ebp
  410d67:	std    
  410d68:	dec    esp
  410d69:	fisttp QWORD PTR [edx-0x52f3d280]
  410d6f:	push   eax
  410d70:	inc    ebp
  410d71:	and    eax,edi
  410d73:	cs lahf 
  410d75:	imul   ebp,DWORD PTR [ebx+0x72],0x8de3a2a3
  410d7c:	scas   eax,DWORD PTR es:[edi]
  410d7d:	mov    al,0x9d
  410d7f:	inc    edi
  410d80:	and    edi,eax
  410d82:	add    DWORD PTR [eax-0x11],edi
  410d85:	adc    DWORD PTR [ebx*1+0x1f081c4f],ebx
  410d8c:	imul   ebp,DWORD PTR [esi-0x46c63a9d],0xa6f4fa1a
  410d96:	sbb    BYTE PTR [edi],ah
  410d98:	stos   BYTE PTR es:[edi],al
  410d99:	add    bl,BYTE PTR [ecx-0x7e]
  410d9c:	xor    eax,0x94ccb151
  410da1:	daa    
  410da2:	outs   dx,DWORD PTR ds:[esi]
  410da3:	mov    bh,0xfa
  410da5:	fadd   DWORD PTR [ecx+0x39]
  410da8:	dec    edx
  410da9:	loope  0x410d4e
  410dab:	pop    ss
  410dac:	mov    ebx,0xdd514604
  410db1:	jnp    0x410d47
  410db3:	adc    eax,0x392fead7
  410db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410db9:	sub    eax,0x666d67b9
  410dbe:	xlat   BYTE PTR ds:[ebx]
  410dbf:	cmp    al,0x15
  410dc1:	xor    al,0xf8
  410dc3:	es scas al,BYTE PTR es:[edi]
  410dc5:	sbb    al,bh
  410dc7:	adc    edx,DWORD PTR fs:[ecx-0x1334e913]
  410dce:	enter  0xc353,0xec
  410dd2:	xor    eax,0x191ce0aa
  410dd7:	std    
  410dd8:	or     al,0x81
  410dda:	xchg   edx,eax
  410ddb:	jnp    0x410e31
  410ddd:	xor    edi,DWORD PTR [eax+0x10]
  410de0:	bound  esi,QWORD PTR [edi+ebp*4-0x3abb96]
  410de7:	ret    0x8349
  410dea:	stc    
  410deb:	push   0xffffff9e
  410ded:	jno    0x410dc1
  410def:	sbb    al,0xc2
  410df1:	pop    esi
  410df2:	inc    ecx
  410df3:	dec    eax
  410df4:	bound  esi,QWORD PTR [esi-0x62]
  410df7:	mov    ds:0xb6395707,ax
  410dfd:	xor    esp,DWORD PTR [ebx-0x14]
  410e00:	push   eax
  410e01:	clc    
  410e02:	push   edx
  410e03:	adc    ecx,DWORD PTR [eax+0x75fa60c7]
  410e09:	or     ecx,DWORD PTR [edx]
  410e0b:	push   0xca9131be
  410e10:	or     BYTE PTR [ebx-0x1c],dh
  410e13:	pop    eax
  410e14:	sbb    al,0x61
  410e16:	or     al,0xa
  410e18:	outs   dx,BYTE PTR ds:[esi]
  410e19:	mov    WORD PTR [edx+0x16],fs
  410e1c:	jnp    0x410e5a
  410e1e:	mov    esi,0xbf459243
  410e23:	call   0x6ff1:0x79028c33
  410e2a:	and    ch,dh
  410e2c:	sbb    ebp,DWORD PTR ds:0xddfa6fab
  410e32:	and    al,0x74
  410e34:	icebp  
  410e35:	jmp    0x410e37
  410e37:	jbe    0x410dc7
  410e39:	cmp    eax,0xaede1ad9
  410e3e:	mov    cs,eax
  410e40:	dec    edi
  410e41:	sub    BYTE PTR [ebp-0x61],0x7
  410e45:	and    BYTE PTR [ecx],dl
  410e47:	mov    dl,0x9b
  410e49:	pop    esi
  410e4a:	addr16 mov ch,0x36
  410e4d:	js     0x410e14
  410e4f:	inc    ebx
  410e50:	adc    eax,0x17e8eb52
  410e55:	mul    DWORD PTR ds:0x938c4c69
  410e5b:	cmc    
  410e5c:	cs jg  0x410e40
  410e5f:	and    cl,BYTE PTR [ebx]
  410e61:	rcl    ebp,0x9
  410e64:	ret    0xd3a3
  410e67:	out    dx,al
  410e68:	loopne 0x410ebc
  410e6a:	pop    edx
  410e6b:	sub    BYTE PTR [ebx+edx*8],dh
  410e6e:	fbld   TBYTE PTR [esp+eax*1+0x9fb5266]
  410e75:	ss mov dh,0x44
  410e78:	shr    DWORD PTR [ebx],cl
  410e7a:	pop    ebx
  410e7b:	mov    al,ds:0x93c57716
  410e80:	push   esi
  410e81:	and    ecx,DWORD PTR [edx-0x23ba4686]
  410e87:	mov    dl,BYTE PTR [ebp+eax*2+0x5475bb0c]
  410e8e:	or     BYTE PTR [eax-0x2b],ch
  410e91:	lods   eax,DWORD PTR ds:[esi]
  410e92:	enter  0xee7e,0x41
  410e96:	pop    ss
  410e97:	(bad)  
  410e99:	daa    
  410e9a:	js     0x410e78
  410e9c:	push   ds
  410e9d:	mov    ss,WORD PTR [ebx]
  410e9f:	adc    DWORD PTR [edi+0x440776d8],0x708cb8ef
  410ea9:	jo     0x410e5d
  410eab:	stc    
  410eac:	mov    esi,0xe82d21ec
  410eb1:	cwde   
  410eb2:	mov    ds:0xb41a0c5d,eax
  410eb7:	push   es
  410eb8:	inc    ebp
  410eb9:	sbb    eax,0x38e67fb4
  410ebe:	push   edi
  410ebf:	mov    ds,WORD PTR ds:0x434b4ad7
  410ec5:	xchg   BYTE PTR [edi+0x3bd58f09],bh
  410ecb:	sub    DWORD PTR [edx],edx
  410ecd:	aas    
  410ece:	or     eax,ecx
  410ed0:	xor    cl,BYTE PTR [edx-0x3b]
  410ed3:	es mov ah,0x62
  410ed6:	sbb    DWORD PTR [ebp+edi*2+0x3d],ebx
  410eda:	sbb    eax,0x25c7acba
  410edf:	xchg   ebp,eax
  410ee0:	xor    DWORD PTR [esi],edi
  410ee2:	mov    bl,0x22
  410ee4:	ror    dh,1
  410ee6:	and    dh,bh
  410ee8:	das    
  410ee9:	pop    eax
  410eea:	sub    BYTE PTR [ecx+0x52],dh
  410eed:	arpl   WORD PTR [ecx+ecx*1],di
  410ef0:	pop    esp
  410ef1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ef2:	mov    bl,0x4
  410ef4:	sbb    cl,BYTE PTR [edx]
  410ef6:	sub    ch,BYTE PTR [esi-0x5a9889b0]
  410efc:	adc    BYTE PTR [edx+0x74],dl
  410eff:	pop    esp
  410f00:	and    edi,DWORD PTR [edx-0x5f]
  410f03:	sahf   
  410f04:	lea    edi,[esi]
  410f06:	mov    bh,0x6f
  410f08:	outs   dx,BYTE PTR ds:[esi]
  410f09:	outs   dx,BYTE PTR ds:[esi]
  410f0a:	(bad)  
  410f0b:	and    edx,DWORD PTR [ebp+0x1416a8d5]
  410f11:	(bad)  
  410f12:	pop    ss
  410f13:	sub    edx,DWORD PTR [ebx+0x6ea28dc6]
  410f19:	pop    ebx
  410f1a:	jp     0x410ea7
  410f1c:	pop    esi
  410f1d:	pusha  
  410f1e:	xor    al,0x66
  410f20:	or     BYTE PTR [eax-0x74386e2],ah
  410f26:	shl    DWORD PTR [ecx+0x1924a2a4],cl
  410f2c:	test   BYTE PTR [esp+esi*1],bh
  410f2f:	jo     0x410eec
  410f31:	dec    esp
  410f32:	jp     0x410f96
  410f34:	jne    0x410f0c
  410f36:	or     DWORD PTR [edi+0x2ace3d81],ebp
  410f3c:	in     eax,0xbd
  410f3e:	fdivr  DWORD PTR [ecx+0x16]
  410f41:	mov    edx,0x4ecd3b47
  410f46:	add    ebx,eax
  410f48:	add    DWORD PTR [eax-0x16],ecx
  410f4b:	aas    
  410f4c:	les    eax,FWORD PTR [eax-0x612d612b]
  410f52:	jo     0x410f34
  410f54:	sub    al,0x4
  410f56:	in     eax,0x47
  410f58:	sub    DWORD PTR [esi],esi
  410f5a:	mov    dl,BYTE PTR [ecx+0x0]
  410f5d:	jnp    0x410fb6
  410f5f:	jle    0x410fbb
  410f61:	jb     0x410f54
  410f63:	pop    edx
  410f64:	dec    ecx
  410f65:	pushf  
  410f66:	push   ecx
  410f67:	not    DWORD PTR [ecx-0xb]
  410f6a:	mov    ch,0x0
  410f6c:	retf   0x4663
  410f6f:	pop    ss
  410f70:	pop    ebp
  410f71:	adc    cl,BYTE PTR [eax+0x69f50873]
  410f77:	push   0x1f
  410f79:	jle    0x410f6e
  410f7b:	and    ebx,ebx
  410f7d:	or     DWORD PTR [esi],ebp
  410f7f:	outs   dx,DWORD PTR ds:[esi]
  410f80:	inc    ebp
  410f81:	aam    0x86
  410f83:	popf   
  410f84:	xchg   ebp,eax
  410f85:	cmp    al,0x14
  410f87:	sub    al,0x63
  410f89:	push   es
  410f8a:	sahf   
  410f8b:	psrlw  mm6,QWORD PTR [ebx-0x73]
  410f8f:	add    BYTE PTR [ebx],al
  410f91:	aaa    
  410f92:	dec    esi
  410f93:	in     al,dx
  410f94:	ja     0x410f31
  410f96:	dec    esi
  410f97:	jns    0x410ff6
  410f99:	pop    esi
  410f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f9b:	mov    edx,DWORD PTR [ebp+ebp*2-0x12]
  410f9f:	sbb    al,0x80
  410fa1:	xchg   eax,esp
  410fa3:	mov    ecx,0x4e436e24
  410fa8:	xor    BYTE PTR [esp+ebx*4],bh
  410fab:	and    al,0xfe
  410fad:	sbb    BYTE PTR [eax+0x57],cl
  410fb0:	pop    ds
  410fb1:	imul   ecx,DWORD PTR [ebp+0x66cfd18a],0xffffff97
  410fb8:	pop    ds
  410fb9:	ror    DWORD PTR [eax],0x59
  410fbc:	and    BYTE PTR [esi+0x209e25c2],0x6b
  410fc3:	inc    ebx
  410fc4:	jge    0x410fb1
  410fc6:	push   ecx
  410fc7:	jns    0x411020
  410fc9:	jno    0x410fa1
  410fcb:	in     eax,0x14
  410fcd:	or     al,0xcf
  410fcf:	jns    0x411022
  410fd1:	das    
  410fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fd3:	mov    al,0x6b
  410fd5:	push   edi
  410fd6:	adc    eax,0x60dff9fb
  410fdb:	in     al,0xd7
  410fdd:	sti    
  410fde:	sub    DWORD PTR [eax-0x4a],eax
  410fe1:	or     BYTE PTR [esi-0x6cf0ef14],0xd0
  410fe8:	out    0xaa,eax
  410fea:	mov    edx,0xa0e6c60a
  410fef:	outs   dx,BYTE PTR ds:[esi]
  410ff0:	or     eax,0x62bab083
  410ff5:	(bad)  
  410ff6:	dec    edi
  410ff7:	fadd   QWORD PTR [ebx-0x12fb7778]
  410ffd:	jge    0x411055
  410fff:	xor    bl,ah
  411001:	fcom   DWORD PTR [esi+0x6a]
  411004:	call   0xd51a:0xa007e655
  41100b:	popf   
  41100c:	dec    esp
  41100d:	pop    ss
  41100e:	addr16 ret 
  411010:	outs   dx,DWORD PTR ds:[esi]
  411011:	sbb    eax,0x7aeacb4
  411016:	cmp    eax,0xc88aaa38
  41101b:	fcom   QWORD PTR [eax-0x46597898]
  411021:	pop    ds
  411022:	dec    ebx
  411023:	lahf   
  411024:	ins    DWORD PTR es:[edi],dx
  411025:	rol    DWORD PTR [ecx+edx*1-0x16],1
  411029:	mov    ah,BYTE PTR [ebp+0x45]
  41102c:	sbb    DWORD PTR [ebp+0x4],esp
  41102f:	adc    dl,BYTE PTR [esi+eax*8]
  411032:	add    dh,BYTE PTR [edx+0x1c]
  411035:	rcl    dh,cl
  411037:	imul   esi,DWORD PTR [edi],0x29
  41103a:	sar    BYTE PTR [ecx+0x301bcb38],0xcb
  411041:	rol    BYTE PTR [edi-0xb14db4e],1
  411047:	sub    bh,BYTE PTR [edx-0x35]
  41104a:	push   ebp
  41104b:	punpcklbw mm0,DWORD PTR [ebx-0x51]
  41104f:	pop    es
  411050:	jae    0x411066
  411052:	icebp  
  411053:	mov    esp,DWORD PTR [esi]
  411055:	test   DWORD PTR [ebx-0x1a541451],ecx
  41105b:	das    
  41105c:	(bad)  
  41105d:	aam    0x34
  41105f:	fwait
  411060:	and    al,0x7b
  411062:	sbb    eax,0xffcc40fa
  411067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411068:	sbb    eax,DWORD PTR [ebx+0x12]
  41106b:	mov    ebp,0x6c9b6dd6
  411070:	pushf  
  411071:	(bad)  
  411072:	fild   DWORD PTR [edi+ebp*1-0x4c]
  411076:	mov    ah,BYTE PTR [esi]
  411078:	mov    dh,0x97
  41107a:	pop    ebp
  41107b:	mov    esi,fs
  41107d:	jle    0x4110b9
  41107f:	inc    ecx
  411080:	mov    ch,BYTE PTR [esi+0x19fb50a1]
  411086:	adc    al,0x8d
  411088:	test   BYTE PTR [esi],0x82
  41108b:	add    BYTE PTR [esi+0x1eec9bd8],bl
  411091:	xchg   ebp,eax
  411092:	inc    ecx
  411093:	das    
  411094:	pop    ds
  411095:	cli    
  411096:	xchg   esi,eax
  411097:	test   al,0xea
  411099:	mov    ch,0xdb
  41109b:	test   BYTE PTR [edi],0x5d
  41109e:	inc    ecx
  41109f:	fisub  DWORD PTR [ecx-0x4edfd1a0]
  4110a5:	ret    0xff20
  4110a8:	in     al,dx
  4110a9:	fxch   st(0)
  4110ab:	popa   
  4110ac:	ins    DWORD PTR es:[edi],dx
  4110ad:	mov    eax,ds:0x4565011b
  4110b2:	and    BYTE PTR [edi],0xe3
  4110b5:	push   ecx
  4110b6:	repnz aam 0x77
  4110b9:	push   ebp
  4110ba:	push   eax
  4110bb:	push   eax
  4110bc:	adc    eax,0x4abe0865
  4110c1:	pmaxub mm4,QWORD PTR [edx]
  4110c4:	repnz stc 
  4110c6:	adc    cl,ah
  4110c8:	and    al,0xa7
  4110ca:	gs or  eax,0xd02f1408
  4110d0:	hlt    
  4110d1:	jbe    0x411085
  4110d3:	xchg   ebp,eax
  4110d4:	and    eax,DWORD PTR [ebp+edx*8-0x2d1a9896]
  4110db:	xchg   BYTE PTR [edi+0x2d],bl
  4110de:	mov    ds:0x79aa2ea,eax
  4110e3:	fucomi st,st(7)
  4110e5:	push   es
  4110e6:	or     edi,DWORD PTR [ebx+esi*4-0x30]
  4110ea:	pop    ss
  4110eb:	out    dx,eax
  4110ec:	fdivr  QWORD PTR [eax-0x2c0d54b]
  4110f3:	mov    ebp,0xee686580
  4110f8:	in     eax,0x44
  4110fa:	or     DWORD PTR [eax+edx*2],edx
  4110fd:	nop
  4110fe:	call   DWORD PTR [eax-0x32939637]
  411104:	(bad)  
  411105:	cs ret 0x5516
  411109:	push   0x75e43ad7
  41110e:	gs clc 
  411110:	ja     0x41117f
  411112:	pop    esi
  411113:	ins    BYTE PTR es:[edi],dx
  411114:	xor    edi,DWORD PTR ds:0x44241386
  41111a:	daa    
  41111b:	addr16 es xchg edi,edi
  41111f:	adc    al,0xe3
  411121:	mov    ebx,0x62128e71
  411126:	and    DWORD PTR [ebp+ebx*8+0x6b],0xffffffd2
  41112b:	xlat   BYTE PTR ds:[ebx]
  41112c:	mov    ebx,0x71afd7b9
  411131:	shl    dh,1
  411133:	adc    edi,0x20e1ea91
  411139:	call   0x739f0389
  41113e:	rcr    esp,cl
  411140:	inc    ecx
  411141:	test   al,0x8f
  411143:	jecxz  0x4110dd
  411145:	jb     0x4110f2
  411147:	jp     0x411106
  411149:	stos   DWORD PTR es:[edi],eax
  41114a:	ins    BYTE PTR es:[edi],dx
  41114b:	cwde   
  41114c:	imul   esp,DWORD PTR [ebx+eiz*8],0x43e8f4ff
  411153:	cmp    BYTE PTR [ecx+0x614e8470],dh
  411159:	test   ah,dl
  41115b:	xchg   DWORD PTR [eax+0x17],ecx
  41115e:	icebp  
  41115f:	inc    ebx
  411160:	and    BYTE PTR [edx],ch
  411162:	and    DWORD PTR [edx],esi
  411164:	(bad)  
  411165:	push   edi
  411166:	ret    0x933c
  411169:	ja     0x4111ad
  41116b:	fidivr WORD PTR [ebx+0x36]
  41116e:	shl    esi,cl
  411170:	out    dx,al
  411171:	bound  ebx,QWORD PTR ss:[edx-0x14]
  411175:	dec    ecx
  411176:	aas    
  411177:	jge    0x41115f
  411179:	mov    ds:0x3e6afff3,eax
  41117e:	idiv   BYTE PTR [ebx+0x6a20acb8]
  411184:	xor    al,0x6c
  411186:	gs (bad) 
  411188:	fstp   DWORD PTR [edx-0x4efc1b34]
  41118e:	lods   al,BYTE PTR ds:[esi]
  41118f:	or     al,BYTE PTR [ebp+edi*2+0x36]
  411193:	adc    DWORD PTR [ecx-0x6c62608f],esi
  411199:	dec    ebx
  41119a:	mov    ds:0xcb221ed4,eax
  41119f:	ret    
  4111a0:	cli    
  4111a1:	ds dec esi
  4111a3:	mov    dh,0x1
  4111a5:	fisttp DWORD PTR [ebx+esi*2-0x11]
  4111a9:	iret   
  4111aa:	add    al,0xd1
  4111ac:	nop
  4111ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ae:	or     BYTE PTR [esi],cl
  4111b0:	scas   al,BYTE PTR es:[edi]
  4111b1:	jmp    0x4111d8
  4111b3:	inc    ebx
  4111b4:	jl     0x411174
  4111b6:	retf   
  4111b7:	mov    ebx,0x44aeb086
  4111bc:	add    eax,0x43030e78
  4111c1:	adc    ebp,edi
  4111c3:	loop   0x411146
  4111c5:	lods   al,BYTE PTR ds:[esi]
  4111c6:	pop    edx
  4111c7:	adc    BYTE PTR [esi+0x5c],al
  4111ca:	xor    eax,0x9c449ba0
  4111cf:	test   DWORD PTR ss:[ebx],edi
  4111d2:	mov    cl,0xf6
  4111d4:	push   es
  4111d5:	mov    bh,0x70
  4111d7:	loop   0x4111dd
  4111d9:	mov    ebx,0xddb76376
  4111de:	xlat   BYTE PTR ds:[ebx]
  4111df:	pusha  
  4111e0:	icebp  
  4111e1:	xor    eax,0xf2adc975
  4111e6:	pop    ebx
  4111e7:	push   ecx
  4111e8:	gs mov al,0x71
  4111eb:	lock bound edx,QWORD PTR [ebp+0xff61d4]
  4111f2:	mov    ecx,DWORD PTR [eax]
  4111f4:	mov    eax,ds:0xfd031ba1
  4111f9:	jecxz  0x411220
  4111fb:	rol    BYTE PTR [ebx+ebx*1],1
  4111fe:	(bad)  
  4111ff:	xchg   esi,eax
  411200:	push   eax
  411201:	adc    al,0x81
  411203:	scas   eax,DWORD PTR es:[edi]
  411204:	enter  0x2c76,0x7a
  411208:	inc    esp
  411209:	sti    
  41120a:	cmp    BYTE PTR [esi+0x4815de74],bl
  411210:	out    dx,eax
  411211:	je     0x411261
  411213:	inc    esi
  411214:	addr16 cli 
  411216:	xor    eax,0x3a1fa090
  41121b:	sub    ch,bh
  41121d:	sti    
  41121e:	outs   dx,DWORD PTR ds:[esi]
  41121f:	push   es
  411220:	jns    0x4111e6
  411222:	xchg   esi,eax
  411223:	mov    ecx,0x7bff674b
  411228:	push   ebx
  411229:	mov    esi,0xc45eee85
  41122e:	jl     0x411282
  411230:	shl    DWORD PTR ds:0x1bec5ce,cl
  411236:	dec    eax
  411237:	and    BYTE PTR [eax-0x35],ch
  41123a:	inc    esp
  41123b:	lods   eax,DWORD PTR ds:[esi]
  41123c:	(bad)  
  41123d:	pop    esi
  41123e:	or     eax,0xfd583506
  411243:	les    edi,FWORD PTR [esi]
  411245:	mov    bl,0xe4
  411247:	and    eax,0x27
  41124a:	cmp    ebx,DWORD PTR [ebx-0x36]
  41124d:	jns    0x4112bc
  41124f:	out    0xa3,al
  411251:	ja     0x41123a
  411253:	sti    
  411254:	into   
  411255:	int    0x57
  411257:	shl    dh,cl
  411259:	mov    BYTE PTR [edi],dl
  41125b:	jmp    0x17c8:0xc8794f89
  411262:	aad    0x1c
  411264:	dec    esi
  411265:	shr    DWORD PTR [eax-0x36],cl
  411268:	popf   
  411269:	and    edi,DWORD PTR [ebx-0x32]
  41126c:	enter  0x4dde,0x64
  411270:	test   DWORD PTR ds:0x8144672b,ebp
  411276:	xchg   ecx,eax
  411277:	dec    eax
  411278:	popf   
  411279:	cmc    
  41127a:	shl    dh,0xed
  41127d:	add    eax,0x5dacbdc4
  411282:	mov    ebp,DWORD PTR [ebp-0xa]
  411285:	fwait
  411286:	popf   
  411287:	mov    edx,0x9262aecb
  41128c:	xor    ah,BYTE PTR [edx-0x33]
  41128f:	push   ebp
  411290:	leavew 
  411292:	xchg   edx,ebp
  411294:	loop   0x41122d
  411296:	mov    bl,0x67
  411298:	push   esi
  411299:	sub    eax,0x234da243
  41129e:	std    
  41129f:	and    DWORD PTR [ebx],edi
  4112a1:	xor    al,0x20
  4112a3:	call   0x4ea40cc1
  4112a8:	fistp  QWORD PTR [edx+edi*1]
  4112ab:	cmp    BYTE PTR [edx-0x45],bl
  4112ae:	arpl   cx,sp
  4112b0:	fwait
  4112b1:	inc    esi
  4112b2:	push   0x42
  4112b4:	mov    ah,0xdf
  4112b6:	xchg   edx,eax
  4112b7:	hlt    
  4112b8:	in     eax,0x7e
  4112ba:	clc    
  4112bb:	mov    ebp,0xcbd9d7ab
  4112c0:	mov    ebx,DWORD PTR [eax+0x24]
  4112c3:	inc    eax
  4112c4:	repnz cmp ebp,DWORD PTR [edi]
  4112c7:	push   ecx
  4112c8:	lds    ecx,FWORD PTR [edi]
  4112ca:	es test al,0xe7
  4112cd:	stc    
  4112ce:	call   0xbb1100fa
  4112d3:	adc    BYTE PTR [eax-0x3cd4a17],dh
  4112d9:	sbb    esi,eax
  4112db:	ja     0x411268
  4112dd:	push   ebp
  4112de:	xlat   BYTE PTR ds:[ebx]
  4112df:	fdivr  DWORD PTR [ecx+0x35]
  4112e2:	imul   ebp,DWORD PTR [esi],0x3a
  4112e5:	call   0x697d:0x63b6e3ca
  4112ec:	fdivrp st(1),st
  4112ee:	cmp    cl,BYTE PTR [ebp+0x5003b1b8]
  4112f4:	ds test al,0x47
  4112f7:	std    
  4112f8:	jbe    0x4112bf
  4112fa:	xlat   BYTE PTR ds:[ebx]
  4112fb:	iret   
  4112fc:	cmp    al,0xa2
  4112fe:	cs retf 0xa983
  411302:	sub    ch,BYTE PTR [edi]
  411304:	test   BYTE PTR gs:[edx+0x1],ch
  411308:	sahf   
  411309:	sahf   
  41130a:	and    esp,0xaf40e93f
  411310:	out    0x3f,al
  411312:	sbb    esi,ecx
  411314:	xchg   ebx,eax
  411315:	imul   esp,DWORD PTR [esi+edx*2],0x91770fc7
  41131c:	cmp    BYTE PTR [edi+ebx*8+0x37],0x71
  411321:	shr    BYTE PTR [ebx],cl
  411323:	fadd   DWORD PTR [esi+0x11]
  411326:	cli    
  411327:	ds mov ?,ebx
  41132a:	cs xchg bl,bl
  41132d:	xlat   BYTE PTR ds:[ebx]
  41132e:	ds (bad) 
  411330:	inc    ebx
  411331:	pop    ebx
  411332:	sbb    edi,edi
  411334:	push   es
  411335:	jno    0x41137e
  411337:	sbb    al,0xd4
  411339:	sti    
  41133a:	arpl   WORD PTR es:[eax],sp
  41133d:	stc    
  41133e:	push   ds
  41133f:	jns    0x4112f1
  411341:	scas   al,BYTE PTR es:[edi]
  411342:	retf   
  411343:	cs cmp eax,0x4d400b42
  411349:	leave  
  41134a:	push   cs
  41134b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41134c:	jns    0x411357
  41134e:	mov    eax,ds:0x6140c233
  411353:	or     BYTE PTR [ebp+0x62a03734],ch
  411359:	iret   
  41135a:	dec    DWORD PTR [edi+0x7116f4af]
  411360:	pop    ebx
  411361:	mov    ch,BYTE PTR [edi-0x46b6d9c3]
  411367:	sub    BYTE PTR [edx+0x36],dh
  41136a:	sub    al,0x7
  41136c:	sub    BYTE PTR [ecx],al
  41136e:	and    cl,dl
  411370:	mov    bl,0xd1
  411372:	fsubr  QWORD PTR [edx]
  411374:	mov    bl,0x1c
  411376:	jge    0x41135b
  411378:	repz out dx,eax
  41137a:	adc    ebx,ebp
  41137c:	xchg   ebp,eax
  41137d:	std    
  41137e:	dec    ebx
  41137f:	dec    esp
  411380:	ror    BYTE PTR [edi+0x64],0x34
  411384:	add    BYTE PTR [ebp-0xa0bc909],dl
  41138a:	test   al,0xe2
  41138c:	inc    eax
  41138d:	xchg   edx,eax
  41138e:	cmp    al,0x2b
  411390:	mov    esi,0x11930fef
  411395:	pop    es
  411396:	loopne 0x41134e
  411398:	and    ebx,DWORD PTR [esi+0x4c07f685]
  41139e:	ja     0x4113b9
  4113a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a1:	cdq    
  4113a2:	jl     0x411362
  4113a4:	int3   
  4113a5:	dec    eax
  4113a6:	inc    ebx
  4113a7:	ficomp DWORD PTR [edx]
  4113a9:	xabort 0x83
  4113ac:	xor    eax,0xcbf8333d
  4113b1:	test   BYTE PTR [ebx+0x2c29865d],bh
  4113b7:	push   edx
  4113b8:	push   ebx
  4113b9:	dec    edx
  4113ba:	cli    
  4113bb:	popf   
  4113bc:	lods   al,BYTE PTR ds:[esi]
  4113bd:	mov    al,0xe
  4113bf:	iret   
  4113c0:	addr16 daa 
  4113c2:	cdq    
  4113c3:	in     eax,dx
  4113c4:	arpl   WORD PTR [edi+0x12],dx
  4113c7:	push   0x699a4a36
  4113cc:	cmp    cl,BYTE PTR [eax+0x2c]
  4113cf:	fld    QWORD PTR [eax]
  4113d1:	gs ds mov ah,0x47
  4113d5:	inc    ebx
  4113d6:	in     eax,0x76
  4113d8:	add    DWORD PTR ds:0x6bb4f13f,ebx
  4113de:	pop    ebx
  4113df:	imul   edi,DWORD PTR ds:0xbe5267f0,0xe87f1327
  4113e9:	mov    eax,ds:0xcc90d71d
  4113ee:	int3   
  4113ef:	mov    ebp,0xdb9aab8d
  4113f4:	fsub   st(4),st
  4113f6:	jo     0x4113a6
  4113f8:	dec    eax
  4113f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113fa:	pop    edx
  4113fb:	xor    ebx,DWORD PTR [edx+eax*8-0x33]
  4113ff:	fwait
  411400:	xor    ebp,esi
  411402:	or     ebx,esi
  411404:	bound  esi,QWORD PTR [eax-0x64045c67]
  41140a:	mov    eax,0xfc935117
  41140f:	stos   DWORD PTR es:[edi],eax
  411410:	lahf   
  411411:	jmp    0x376:0x74a4cb84
  411418:	sahf   
  411419:	or     DWORD PTR [eax],edx
  41141b:	fs pop edi
  41141d:	daa    
  41141e:	fmul   st(2),st
  411420:	ror    DWORD PTR [edi+0x48],0x6c
  411424:	in     eax,dx
  411425:	jno    0x4113d9
  411427:	mov    cl,0x65
  411429:	xchg   ebx,eax
  41142a:	or     cl,ah
  41142c:	push   esp
  41142d:	ficomp WORD PTR [edi+edx*4]
  411430:	fsubr  DWORD PTR [ecx-0x7d]
  411433:	adc    esp,DWORD PTR [eax]
  411435:	aaa    
  411436:	in     al,0x1d
  411438:	jns    0x4114b4
  41143a:	retf   
  41143b:	daa    
  41143c:	loopne 0x41144d
  41143e:	or     ebp,DWORD PTR [eax+ebp*1-0x25]
  411442:	inc    edx
  411443:	mov    al,ds:0xc598ba36
  411448:	and    al,0xfb
  41144a:	loopne 0x411448
  41144c:	and    edi,DWORD PTR ds:0x2c045dfc
  411452:	xor    al,0x4c
  411454:	das    
  411455:	stc    
  411456:	scas   al,BYTE PTR es:[edi]
  411457:	mov    dh,0x89
  411459:	popf   
  41145a:	xor    eax,DWORD PTR ds:0xaa1b430f
  411460:	pusha  
  411461:	cmc    
  411462:	sub    DWORD PTR [edi+0x3b],esi
  411465:	inc    esp
  411466:	imul   ecx,DWORD PTR [ecx],0xffffffa4
  411469:	(bad)  
  41146a:	int    0x91
  41146c:	or     eax,0x7ba8e7ed
  411471:	pop    eax
  411472:	not    ecx
  411474:	in     al,0xc9
  411476:	scas   al,BYTE PTR es:[edi]
  411477:	and    ecx,ecx
  411479:	aaa    
  41147a:	test   eax,0x3eb8e2c1
  41147f:	pop    eax
  411480:	lea    esi,[ecx+0xa]
  411483:	cmp    DWORD PTR [edi-0x75],ecx
  411486:	mov    esi,0xb4e7cde3
  41148b:	call   0x9fcc:0xf4729f7e
  411492:	jno    0x411479
  411494:	and    BYTE PTR [esi+0x1],bh
  411497:	add    bh,bl
  411499:	mov    cl,0x4c
  41149b:	and    al,0xd8
  41149d:	arpl   WORD PTR [edx+0x4ab3f581],si
  4114a3:	or     ch,BYTE PTR [eax+ebp*4]
  4114a6:	out    0xc9,eax
  4114a8:	pop    ebp
  4114a9:	mov    dl,0x44
  4114ab:	sti    
  4114ac:	popa   
  4114ad:	and    DWORD PTR [edi-0xa],esp
  4114b0:	xchg   ecx,eax
  4114b1:	mov    al,0xb4
  4114b3:	cmp    ebx,DWORD PTR [ebp-0x5c]
  4114b6:	ins    DWORD PTR es:[edi],dx
  4114b7:	sahf   
  4114b8:	cmp    ah,cl
  4114ba:	dec    esp
  4114bc:	fstp   st(7)
  4114be:	test   al,0x7f
  4114c0:	(bad)  
  4114c1:	gs (bad) 
  4114c4:	loopne 0x411541
  4114c6:	adc    edx,ebx
  4114c8:	mov    BYTE PTR [edx-0x27],0x78
  4114cc:	and    edx,0x51
  4114cf:	mov    ds,edx
  4114d1:	pop    es
  4114d2:	lea    ebx,[ebp-0x6]
  4114d5:	sbb    cl,bh
  4114d7:	es add eax,0x871e0956
  4114dd:	cmc    
  4114de:	xor    dl,BYTE PTR [esi+ecx*1]
  4114e1:	xlat   BYTE PTR ds:[ebx]
  4114e2:	add    dh,BYTE PTR [esi-0x2]
  4114e5:	adc    al,0x73
  4114e7:	xor    dh,dh
  4114e9:	(bad)
  4114ec:	adc    eax,0x755e1694
  4114f1:	scas   eax,DWORD PTR es:[edi]
  4114f2:	sar    BYTE PTR [esi],0x2e
  4114f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f6:	pop    edi
  4114f7:	lahf   
  4114f8:	stc    
  4114f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114fa:	mov    al,ds:0xd0b9fcd9
  4114ff:	dec    ebp
  411500:	sti    
  411501:	jae    0x4114ea
  411503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411504:	loop   0x4114eb
  411506:	dec    edx
  411507:	jnp    0x4114e8
  411509:	or     al,0xa2
  41150b:	repz inc esi
  41150d:	inc    esi
  41150e:	sti    
  41150f:	adc    bh,BYTE PTR [ecx-0x2ebac909]
  411515:	mov    eax,ds:0xe7e7f72e
  41151a:	inc    ebp
  41151b:	pusha  
  41151c:	dec    edi
  41151d:	cmc    
  41151e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41151f:	ins    DWORD PTR es:[edi],dx
  411520:	add    al,0x22
  411522:	loop   0x41155b
  411524:	pop    esp
  411525:	adc    bl,BYTE PTR [esi-0x15]
  411528:	mov    ebx,0x214adfd6
  41152d:	jmp    0xc2705d97
  411532:	jmp    0x4114da
  411534:	add    DWORD PTR [eax-0x31],ebp
  411537:	lods   eax,DWORD PTR ds:[esi]
  411538:	or     al,0x94
  41153a:	repnz call 0xd519:0x5dc64b53
  411542:	or     eax,0x3089bb82
  411547:	or     bl,0x79
  41154a:	ror    BYTE PTR [edx+0x75],cl
  41154d:	sub    al,0xba
  41154f:	stc    
  411550:	xchg   DWORD PTR [ecx+0x1eab5931],eax
  411556:	cld    
  411557:	xor    bh,bl
  411559:	stc    
  41155a:	rcl    DWORD PTR ds:0x83014705,1
  411560:	sub    esi,edi
  411562:	les    edx,FWORD PTR [ecx+0x592e0194]
  411568:	xchg   esi,eax
  411569:	sub    ebx,DWORD PTR [edi+0x4c]
  41156c:	mov    esi,0x806cd0de
  411571:	or     BYTE PTR [eax+ebp*2],dl
  411574:	adc    eax,0xdc0b0e20
  411579:	push   ecx
  41157a:	mov    dh,0x4c
  41157c:	mov    esp,0x2abf7e7d
  411581:	pop    edi
  411582:	ror    BYTE PTR [esi+0xb38a22],1
  411588:	ins    DWORD PTR es:[edi],dx
  411589:	add    al,0x21
  41158b:	mov    ds:0xec83572c,eax
  411590:	test   BYTE PTR ds:0x84ff2fb7,ah
  411596:	ret    
  411597:	shl    ecx,0xd8
  41159a:	xor    ch,BYTE PTR [eax]
  41159c:	lods   al,BYTE PTR ds:[esi]
  41159d:	and    eax,0x2a2a38b6
  4115a2:	xor    BYTE PTR [ebx+0x27dd424c],0x50
  4115a9:	je     0x4115ca
  4115ab:	xor    al,0x72
  4115ad:	mov    al,0xcc
  4115af:	aas    
  4115b0:	cld    
  4115b1:	sub    eax,DWORD PTR [ecx+0x65]
  4115b4:	stc    
  4115b5:	jg     0x4115ec
  4115b7:	pusha  
  4115b8:	pop    ecx
  4115b9:	int    0xf3
  4115bb:	sub    al,0xdc
  4115bd:	adc    cl,BYTE PTR [esi-0x44]
  4115c0:	jno    0x41158b
  4115c2:	imul   edx,esi,0xffffffd4
  4115c5:	xor    eax,0x941d9950
  4115ca:	inc    ebp
  4115cb:	stos   DWORD PTR es:[edi],eax
  4115cc:	push   esp
  4115cd:	or     ecx,DWORD PTR [edi+0x7c]
  4115d0:	push   ebx
  4115d1:	jg     0x411583
  4115d3:	dec    edx
  4115d4:	mov    eax,ds:0x36691bfc
  4115d9:	sbb    ebx,DWORD PTR [esi-0x3b]
  4115dc:	add    al,0x3a
  4115de:	mov    bh,0xf5
  4115e0:	jle    0x411562
  4115e2:	(bad)
  4115e5:	out    0x74,eax
  4115e7:	ret    
  4115e8:	jge    0x41159a
  4115ea:	sti    
  4115eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ec:	stos   BYTE PTR es:[edi],al
  4115ed:	adc    eax,0xdce27856
  4115f2:	jns    0x4115d1
  4115f4:	push   ebx
  4115f5:	in     eax,0x7a
  4115f7:	adc    al,BYTE PTR [edx-0x14db7afc]
  4115fd:	pop    ebp
  4115fe:	mov    ds:0x54fc6396,eax
  411603:	jae    0x41161e
  411605:	pop    edx
  411606:	sbb    eax,0x4c6bb290
  41160b:	call   0x84e3:0xdb3c4bc4
  411612:	push   0x9ac2b24d
  411617:	int3   
  411618:	(bad)
  41161b:	ins    BYTE PTR es:[edi],dx
  41161c:	add    BYTE PTR [edx-0x51],bl
  41161f:	adc    BYTE PTR [ecx-0x5c],bl
  411622:	mov    BYTE PTR [eax],al
  411624:	mov    bh,0x1a
  411626:	outs   dx,DWORD PTR ds:[esi]
  411627:	xchg   esi,eax
  411628:	dec    eax
  411629:	adc    DWORD PTR [edi+edi*1],ecx
  41162c:	sbb    cl,bl
  41162e:	mov    ch,cl
  411630:	cmp    al,0x89
  411632:	push   cs
  411633:	mov    bl,0xd5
  411635:	fwait
  411636:	mov    al,ds:0x51e6283
  41163b:	pop    ss
  41163c:	rcl    BYTE PTR [ebx+0x14],cl
  41163f:	xchg   edx,eax
  411640:	mov    ds:0x29e2c2ad,al
  411645:	test   eax,0x90dbbef7
  41164a:	ins    DWORD PTR es:[edi],dx
  41164b:	lea    ecx,[edx+0x6]
  41164e:	and    eax,0x514203dd
  411653:	mov    bl,0x69
  411655:	cmp    eax,0x2e7c5a0
  41165a:	leave  
  41165b:	adc    edx,ecx
  41165d:	in     al,dx
  41165e:	hlt    
  41165f:	lea    esi,[eax-0x12]
  411662:	push   ecx
  411663:	add    eax,0x28d662bb
  411668:	in     al,dx
  411669:	in     al,dx
  41166a:	imul   BYTE PTR [esi]
  41166c:	cld    
  41166d:	jmp    0x411619
  41166f:	inc    ebp
  411670:	push   ds
  411671:	iret   
  411672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411673:	call   0x5087:0x44ffec7c
  41167a:	inc    bl
  41167c:	rol    BYTE PTR [ecx+edi*8+0x7d50cc8a],1
  411683:	push   edi
  411684:	jecxz  0x4116b8
  411686:	es push cs
  411688:	mov    WORD PTR ds:0x2e07127f,cs
  41168e:	sahf   
  41168f:	mov    bh,0x2
  411691:	inc    edx
  411692:	fld    QWORD PTR [ebx-0x55]
  411695:	cli    
  411696:	jae    0x411641
  411698:	xchg   esp,eax
  411699:	repnz dec esi
  41169b:	push   esi
  41169c:	es or  edi,esi
  41169f:	retf   0xe28b
  4116a2:	mov    bh,0x85
  4116a4:	mov    esp,0x68e326f
  4116a9:	(bad)
  4116ac:	rcr    DWORD PTR [eax+edx*8],1
  4116af:	sbb    ecx,DWORD PTR [ebp+0x4727cdea]
  4116b5:	mov    bh,0xf7
  4116b7:	(bad)  
  4116b8:	xor    esp,DWORD PTR [ebp-0x4cbe97a]
  4116be:	stc    
  4116bf:	(bad)  
  4116c0:	repz jmp DWORD PTR [eax+0x159a8e94]
  4116c7:	aam    0xcf
  4116c9:	clc    
  4116ca:	push   edi
  4116cb:	stc    
  4116cc:	aad    0x3e
  4116ce:	imul   ebx,DWORD PTR [edi+0x374f99a7],0x9a53197c
  4116d8:	pop    ss
  4116d9:	sbb    DWORD PTR [ebx-0x5d],ebp
  4116dc:	sub    BYTE PTR [esi],0xc1
  4116df:	(bad)  
  4116e0:	cli    
  4116e1:	mov    esp,0xe064eb38
  4116e6:	loope  0x411701
  4116e8:	xor    DWORD PTR [esi-0x16],eax
  4116eb:	xchg   DWORD PTR [edi+0x466a9f7f],edx
  4116f1:	enter  0x9ee7,0x6c
  4116f5:	pop    edi
  4116f6:	outs   dx,BYTE PTR ds:[esi]
  4116f7:	mov    ebx,0x5c418dfd
  4116fc:	mov    bh,0xfb
  4116fe:	out    dx,eax
  4116ff:	fiadd  WORD PTR [eax]
  411701:	sub    esi,0x3c
  411704:	inc    ebx
  411705:	mov    ds:0x4c2df095,eax
  41170a:	nop    edi
  41170d:	push   ecx
  41170e:	inc    esi
  41170f:	inc    ebx
  411710:	inc    eax
  411711:	xor    cl,BYTE PTR [edi+0x44fca3cc]
  411717:	nop
  411718:	or     bl,al
  41171a:	dec    eax
  41171b:	aaa    
  41171c:	das    
  41171d:	pop    edi
  41171e:	sbb    eax,0xa40f6730
  411723:	enter  0x9f91,0x26
  411727:	adc    ch,BYTE PTR [edi+eax*2-0x5]
  41172b:	inc    ebp
  41172c:	push   es
  41172d:	or     BYTE PTR [esi+edi*4],bh
  411730:	xchg   edi,eax
  411731:	int3   
  411732:	inc    esi
  411733:	aas    
  411734:	shl    BYTE PTR [edi-0x35],0xd3
  411738:	push   esp
  411739:	adc    eax,0x6f2e156b
  41173e:	int    0xd3
  411740:	jbe    0x411715
  411742:	or     al,0xe4
  411744:	push   esi
  411745:	stos   BYTE PTR es:[edi],al
  411746:	dec    eax
  411747:	rol    WORD PTR [esi+edi*4],0xe3
  41174c:	enter  0xe893,0x5
  411750:	out    0x3b,eax
  411752:	out    dx,al
  411753:	dec    esp
  411754:	dec    eax
  411755:	cmp    dh,BYTE PTR [ecx-0x16]
  411758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411759:	int3   
  41175a:	mov    ah,0xca
  41175c:	and    DWORD PTR [ecx],esp
  41175e:	jno    0x41175b
  411760:	cs (bad) 
  411762:	les    ecx,FWORD PTR [edx+0x427d731e]
  411768:	(bad)  
  411769:	cmp    bl,BYTE PTR ds:0xd6e5337e
  41176f:	je     0x41170b
  411771:	xor    BYTE PTR [esi],al
  411773:	add    al,0x17
  411775:	(bad)  
  411776:	and    bh,BYTE PTR [edx+ebx*8]
  411779:	and    BYTE PTR [eax+ebx*8],0xe9
  41177d:	push   eax
  41177e:	and    ecx,0x95681d5
  411784:	inc    edx
  411785:	jge    0x41170f
  411787:	adc    edi,DWORD PTR [edi-0x321fb78b]
  41178d:	push   eax
  41178e:	(bad)  
  41178f:	adc    cl,BYTE PTR [eax]
  411791:	sub    DWORD PTR ds:0x9f064360,ecx
  411797:	xchg   ebx,eax
  411798:	dec    edx
  411799:	mov    al,0xa1
  41179b:	inc    edx
  41179c:	icebp  
  41179d:	(bad)  
  41179e:	pop    ecx
  41179f:	add    DWORD PTR [edi+esi*2-0x4135d2a],0xa826ca51
  4117aa:	out    dx,al
  4117ab:	pushf  
  4117ac:	out    0x1d,al
  4117ae:	push   ds
  4117af:	inc    edi
  4117b0:	adc    al,0x2
  4117b2:	xchg   edi,eax
  4117b3:	mov    bh,0x11
  4117b5:	pusha  
  4117b6:	mov    ecx,DWORD PTR [edi]
  4117b8:	mov    BYTE PTR [edx+0x3a],ah
  4117bb:	adc    eax,0x33fa091c
  4117c0:	dec    eax
  4117c1:	mov    ch,0xc6
  4117c3:	mov    cl,0x28
  4117c5:	mov    edi,0xa1f7ee75
  4117ca:	mov    eax,ds:0xdc83287c
  4117cf:	sub    DWORD PTR [esi+eax*4+0x74ebb62c],eax
  4117d6:	fs pop ecx
  4117d8:	das    
  4117d9:	jg     0x411857
  4117db:	push   0x367f34ed
  4117e0:	inc    ebx
  4117e1:	sub    DWORD PTR [esi],eax
  4117e3:	retf   
  4117e4:	shl    DWORD PTR [eax+edi*2],0x26
  4117e8:	fcomp  DWORD PTR [eax-0x77de6cf8]
  4117ee:	and    DWORD PTR [ebx-0x4a9af4d4],ecx
  4117f4:	sbb    eax,DWORD PTR [eax-0x1f]
  4117f7:	repnz mov eax,ds:0xe9769778
  4117fd:	xor    BYTE PTR [edi],bl
  4117ff:	sahf   
  411800:	lahf   
  411801:	or     al,0x9
  411803:	stos   BYTE PTR es:[edi],al
  411804:	xchg   ebp,eax
  411805:	imul   ebp,DWORD PTR [ebp-0x4b],0x5565f98
  41180c:	pop    ebp
  41180d:	and    al,0x38
  41180f:	(bad)  
  411810:	or     DWORD PTR [edx+0x71864bc4],eax
  411816:	lahf   
  411817:	sub    DWORD PTR [eax-0x247453a0],0xffffffa5
  41181e:	inc    ecx
  41181f:	push   edi
  411820:	mov    edx,DWORD PTR [edi-0xb]
  411823:	ss in  eax,0x8c
  411826:	out    0xb,eax
  411828:	bound  eax,QWORD PTR [ebx]
  41182a:	(bad)  
  41182b:	pop    ds
  41182c:	xor    eax,0x5f85578c
  411831:	rol    BYTE PTR [ebx],0xed
  411834:	jmp    0xaf63:0x6f6c3573
  41183b:	(bad)  
  41183c:	shl    DWORD PTR [eax-0x47],1
  41183f:	into   
  411840:	ffreep st(7)
  411842:	leave  
  411843:	and    ah,BYTE PTR ds:0xdb33b928
  411849:	add    esi,ecx
  41184b:	adc    ebx,0xffffffff
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0x5a80ba54
  411868:	sub    BYTE PTR [eax],ah
  41186a:	hlt    
  41186b:	push   0x62
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0xf]
  411873:	xor    eax,0x94a19735
  411878:	pusha  
  411879:	retf   0x7c99
  41187c:	(bad)  
  41187d:	xor    BYTE PTR [edx-0x580a650d],bl
  411883:	ret    
  411884:	cmc    
  411885:	jno    0x411816
  411887:	add    al,0xe3
  411889:	sbb    al,0xd
  41188b:	mov    esp,0x667a4224
  411890:	loope  0x411899
  411892:	test   BYTE PTR [esi+0x4f],cl
  411895:	in     eax,dx
  411896:	inc    ebx
  411897:	out    0x89,eax
  411899:	cmc    
  41189a:	mov    ah,0xf8
  41189c:	mov    edi,0xb04da8ce
  4118a1:	jmp    0x411872
  4118a3:	jns    0x411859
  4118a5:	mov    dl,0x34
  4118a7:	test   al,0xa3
  4118a9:	popa   
  4118aa:	je     0x4118f7
  4118ac:	xchg   esi,eax
  4118ad:	(bad)  
  4118ae:	or     DWORD PTR [edi+edx*4],edi
  4118b1:	imul   ecx,DWORD PTR [ecx+0x3b1c2953],0x2e
  4118b8:	dec    edx
  4118b9:	add    al,0x83
  4118bb:	jmp    0x4118ee
  4118bd:	rcr    DWORD PTR [ebx],cl
  4118bf:	inc    edi
  4118c0:	rol    DWORD PTR [ecx+0x73],1
  4118c3:	pusha  
  4118c4:	sub    dh,BYTE PTR ds:0xeec43aef
  4118ca:	and    al,0x95
  4118cc:	mov    ch,0x82
  4118ce:	pop    esi
  4118cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d0:	push   ecx
  4118d1:	mov    ebp,0x4066182d
  4118d6:	pop    ebx
  4118d7:	xchg   BYTE PTR [ebx],cl
  4118d9:	mov    ds:0xec17b48b,al
  4118de:	add    al,0x5d
  4118e0:	cwde   
  4118e1:	or     eax,0xf61a2ad1
  4118e6:	ror    BYTE PTR ds:0xe421ad59,1
  4118ec:	aam    0xe9
  4118ee:	icebp  
  4118ef:	(bad)  [edi-0x7684c032]
  4118f5:	mul    DWORD PTR [esi+edx*8+0x67]
  4118f9:	inc    eax
  4118fa:	push   ebp
  4118fb:	push   cs
  4118fc:	pop    esp
  4118fd:	lahf   
  4118fe:	or     bh,BYTE PTR [edx]
  411900:	push   esi
  411901:	inc    ebp
  411902:	push   ebx
  411903:	jb     0x41193f
  411905:	shr    DWORD PTR [edi],cl
  411907:	add    BYTE PTR [edi],dl
  411909:	cld    
  41190a:	rol    BYTE PTR [eax+edi*1+0x2f],0x7f
  41190f:	lock lea esp,[edi-0x29268c56]
  411916:	push   0xffffffff
  411918:	mov    DWORD PTR [esi+eiz*4],0x8cc038d0
  41191f:	cmp    al,0xfe
  411921:	inc    ecx
  411922:	or     eax,ecx
  411924:	ret    
  411925:	push   0x7c5323b0
  41192a:	add    eax,0xfd1cd4c2
  41192f:	fidivr WORD PTR [ebx-0x2b0cc08e]
  411935:	xor    al,0x3f
  411937:	pop    esi
  411938:	in     al,0xf4
  41193a:	pop    DWORD PTR [ecx]
  41193c:	cwde   
  41193d:	mov    ah,0x15
  41193f:	gs jns 0x4118f7
  411942:	fnstsw WORD PTR [edx+0x43d3a7dd]
  411948:	sbb    ah,dh
  41194a:	jmp    0x4118ff
  41194c:	push   esp
  41194d:	jecxz  0x411940
  41194f:	xchg   edx,eax
  411950:	and    al,BYTE PTR [edi]
  411952:	push   edx
  411953:	add    al,0xf2
  411955:	sbb    al,0xb9
  411957:	adc    DWORD PTR ds:0x70d4d729,edi
  41195d:	fnsave [eax]
  41195f:	dec    edi
  411960:	imul   ecx,DWORD PTR [esi],0xf
  411963:	xchg   ebx,eax
  411964:	xchg   ecx,eax
  411965:	jb     0x411943
  411967:	mov    dh,0xaf
  411969:	in     eax,0xcc
  41196b:	dec    edx
  41196c:	push   ss
  41196d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41196e:	mov    edx,0xbb1bff6e
  411973:	repz js 0x4119f2
  411976:	mov    dh,0xef
  411978:	popf   
  411979:	pop    ebp
  41197a:	test   DWORD PTR [edi-0x3c],0x5363a653
  411981:	mov    WORD PTR [esi+edi*2-0x29],cs
  411985:	mov    ds:0x961207ef,eax
  41198a:	add    BYTE PTR [edx-0x1321419],ch
  411990:	cmc    
  411991:	xchg   BYTE PTR [eax],al
  411993:	imul   esi,ebp,0xffffff82
  411996:	xchg   ebx,eax
  411997:	inc    esi
  411998:	lods   eax,DWORD PTR ds:[esi]
  411999:	in     al,dx
  41199a:	mov    al,ds:0xf5dbe597
  41199f:	xchg   BYTE PTR [ebp+0x69d249c7],ah
  4119a5:	stos   BYTE PTR es:[edi],al
  4119a6:	call   0x374335ec
  4119ab:	pop    eax
  4119ac:	ins    DWORD PTR es:[edi],dx
  4119ad:	or     eax,0x762c2f
  4119b2:	fstp   st(6)
  4119b4:	mov    eax,0xf0ae6537
  4119b9:	fwait
  4119ba:	and    edi,esi
  4119bc:	sub    bl,BYTE PTR [esi-0x4a]
  4119bf:	and    DWORD PTR [ebp-0x60666e1],esi
  4119c5:	jbe    0x411a0f
  4119c7:	sbb    al,ch
  4119c9:	xor    DWORD PTR [edi-0x42],0xffffffbe
  4119cd:	xchg   edi,eax
  4119ce:	dec    ebx
  4119cf:	sbb    al,0xf2
  4119d1:	adc    eax,0x9af1f5d
  4119d6:	je     0x411969
  4119d8:	xchg   ecx,eax
  4119d9:	minps  xmm4,XMMWORD PTR ds:0x8a651e6f
  4119e0:	(bad)  
  4119e1:	frstor [edi-0x3a]
  4119e4:	jne    0x411a31
  4119e6:	jmp    0x411a23
  4119e8:	fwait
  4119e9:	jns    0x411a20
  4119eb:	icebp  
  4119ec:	test   eax,0x16e80cef
  4119f1:	xor    DWORD PTR [eax+0x47e9d0d5],ebx
  4119f7:	push   0xe
  4119f9:	pop    ebp
  4119fa:	xchg   esp,eax
  4119fb:	pushf  
  4119fc:	lock sbb esp,DWORD PTR [ebx+0x96fdd84]
  411a03:	test   DWORD PTR [edi-0x5c5c2bd4],esi
  411a09:	jbe    0x411a0f
  411a0b:	in     eax,0xe3
  411a0d:	retf   0x480
  411a10:	bound  ecx,QWORD PTR [esi+0x6d90bbaf]
  411a16:	aad    0x39
  411a18:	mov    cl,0xde
  411a1a:	div    BYTE PTR [eax-0x2ed9306b]
  411a20:	mov    bh,0x4d
  411a22:	mov    bl,0xf0
  411a24:	cmp    bl,BYTE PTR [eax+0x2d442e8b]
  411a2a:	cwde   
  411a2b:	imul   DWORD PTR [eax]
  411a2d:	cmc    
  411a2e:	loope  0x411a3a
  411a30:	push   ecx
  411a31:	add    dl,dh
  411a33:	xchg   BYTE PTR [esi-0x42],cl
  411a36:	test   al,0x9e
  411a38:	or     DWORD PTR [ebx+0x7d],edi
  411a3b:	jmp    0x2781:0x62c69da2
  411a42:	jne    0x4119fa
  411a44:	ins    DWORD PTR es:[edi],dx
  411a45:	(bad)  
  411a46:	sti    
  411a47:	xor    DWORD PTR [ebx-0x26af9453],0x2ea8ae5c
  411a51:	pop    ebx
  411a52:	loop   0x411a8a
  411a54:	imul   esi,edx,0x13
  411a57:	cmp    eax,0x559e60ce
  411a5c:	mov    ebp,0x831693d3
  411a61:	and    ah,BYTE PTR [edx-0x128a6aab]
  411a67:	inc    ebp
  411a68:	int    0xb0
  411a6a:	ss in  eax,dx
  411a6c:	(bad)  
  411a6d:	xchg   ecx,eax
  411a6e:	call   0x9d27:0xf0fda8c3
  411a75:	mov    bh,0x9
  411a77:	adc    ecx,ebx
  411a79:	ss jge 0x411aee
  411a7c:	adc    eax,0x220a30b5
  411a81:	fistp  QWORD PTR [eax]
  411a83:	xor    al,0xd0
  411a85:	pop    edi
  411a86:	push   edx
  411a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a88:	inc    ebp
  411a89:	shl    BYTE PTR [esi],cl
  411a8b:	icebp  
  411a8c:	add    al,0xae
  411a8e:	jl     0x411a75
  411a90:	xor    cl,BYTE PTR [ecx+ebp*1]
  411a93:	xor    al,0xba
  411a95:	test   al,0xef
  411a97:	lods   al,BYTE PTR ds:[esi]
  411a98:	cwde   
  411a99:	xor    al,bl
  411a9b:	mov    ecx,0xd7c75aad
  411aa0:	dec    ebp
  411aa1:	jnp    0x411b09
  411aa3:	ins    BYTE PTR es:[edi],dx
  411aa4:	lea    ebx,[ebx+0x21aa1e50]
  411aaa:	call   0x551c1b27
  411aaf:	pop    eax
  411ab0:	sub    al,0xd3
  411ab2:	std    
  411ab3:	pop    es
  411ab4:	loop   0x411b30
  411ab6:	stc    
  411ab7:	test   eax,0xd3a02560
  411abc:	push   ebp
  411abd:	inc    eax
  411abe:	mov    ch,0xb6
  411ac0:	loope  0x411aeb
  411ac2:	cwde   
  411ac3:	les    eax,FWORD PTR [eax-0x697efd3f]
  411ac9:	aaa    
  411aca:	sbb    cl,al
  411acc:	ret    0x4278
  411acf:	mov    ebx,0xcc0d16c6
  411ad4:	pop    es
  411ad5:	mov    dl,0x26
  411ad7:	iret   
  411ad8:	xchg   ebp,eax
  411ad9:	std    
  411ada:	mov    bh,0x90
  411adc:	inc    esi
  411add:	push   cs
  411ade:	mov    esi,fs
  411ae0:	pop    ebp
  411ae1:	mov    DWORD PTR [ebx+0x3b069cf],ecx
  411ae7:	jno    0x411b1b
  411ae9:	pusha  
  411aea:	addr16 in eax,dx
  411aec:	not    edx
  411aee:	mov    ch,0xe6
  411af0:	fisubr DWORD PTR [eax]
  411af2:	xor    esp,DWORD PTR [edi+0x1]
  411af5:	retf   0x1053
  411af8:	adc    DWORD PTR [eax],ecx
  411afa:	clc    
  411afb:	mov    ch,0xf7
  411afd:	(bad)  
  411afe:	push   esp
  411aff:	inc    ebp
  411b00:	rol    DWORD PTR [edi-0x7c61338e],0x2c
  411b07:	mov    esp,0x79b16ef1
  411b0c:	sub    dl,dh
  411b0e:	ja     0x411b78
  411b10:	mov    ?,WORD PTR [esi+0x36]
  411b13:	dec    esi
  411b14:	xchg   esi,esp
  411b16:	cmp    al,ch
  411b18:	popa   
  411b19:	jns    0x411b23
  411b1b:	fwait
  411b1c:	retf   0xd2f8
  411b1f:	xchg   edx,eax
  411b20:	repz sahf 
  411b22:	adc    ebp,DWORD PTR [esi+0x69]
  411b25:	xlat   BYTE PTR ds:[ebx]
  411b26:	(bad)  
  411b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b28:	out    dx,al
  411b29:	dec    esi
  411b2a:	sbb    al,BYTE PTR [esp+ebp*1-0x779b4901]
  411b31:	push   esi
  411b32:	addr16 sub al,bh
  411b35:	xchg   ecx,eax
  411b36:	repz and DWORD PTR [ebx],edi
  411b39:	mov    ecx,0xd0dbde7
  411b3e:	pop    ecx
  411b3f:	and    al,BYTE PTR [edx+0x735f743c]
  411b45:	fsubr  QWORD PTR [edi-0x1989361c]
  411b4b:	adc    ebx,DWORD PTR [ebx-0x74a05917]
  411b51:	(bad)  
  411b52:	jp     0x411bba
  411b54:	dec    ebp
  411b55:	xchg   edx,eax
  411b56:	and    BYTE PTR ds:0xe32e6877,bl
  411b5c:	mov    ch,0xe5
  411b5e:	pop    esi
  411b5f:	xchg   edx,eax
  411b60:	scas   al,BYTE PTR es:[edi]
  411b61:	jmp    0x315c:0xaff33865
  411b68:	js     0x411b37
  411b6a:	xchg   ebp,eax
  411b6b:	add    edi,ecx
  411b6d:	mov    esi,0xe5bef24
  411b72:	mov    eax,0xcb10334e
  411b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b78:	and    ecx,edx
  411b7a:	push   edx
  411b7b:	fwait
  411b7c:	call   0x62de:0x8ce3822c
  411b83:	pop    ds
  411b84:	inc    ecx
  411b85:	popa   
  411b86:	(bad)  
  411b87:	mov    ch,0xd7
  411b89:	mov    eax,ds:0xb51974e8
  411b8e:	inc    edi
  411b8f:	out    dx,eax
  411b90:	daa    
  411b91:	sbb    DWORD PTR [ebx],edi
  411b93:	repnz stc 
  411b95:	data16 js 0x411ba3
  411b98:	inc    BYTE PTR [esi]
  411b9a:	and    eax,0xfe79fe8
  411b9f:	test   al,0x7f
  411ba1:	sbb    ah,BYTE PTR [edi]
  411ba3:	and    eax,0x3c1b920c
  411ba8:	inc    eax
  411ba9:	jb     0x411b7b
  411bab:	imul   eax,DWORD PTR [esi+0x43df0465],0x1e0c2a37
  411bb5:	outs   dx,BYTE PTR ds:[esi]
  411bb6:	fild   WORD PTR [ebx-0x130c88c1]
  411bbc:	adc    al,0x2e
  411bbe:	mov    cl,0xc1
  411bc0:	pop    ecx
  411bc1:	sub    bl,BYTE PTR [edi]
  411bc3:	jp     0x411bdd
  411bc5:	es cwde 
  411bc7:	add    DWORD PTR [eax],ecx
  411bc9:	adc    BYTE PTR [edx-0x36c9199b],ah
  411bcf:	jecxz  0x411bb8
  411bd1:	leave  
  411bd2:	mov    cl,0x2d
  411bd4:	push   edx
  411bd5:	xor    al,0xae
  411bd7:	aam    0x31
  411bd9:	and    BYTE PTR [eax+0x34],dh
  411bdc:	call   0x8732adae
  411be1:	mov    esi,0xd574d350
  411be6:	ficom  WORD PTR ds:0xaf2d299f
  411bec:	fsub   st,st(4)
  411bee:	jl     0x411c0e
  411bf0:	mov    esp,0x282c03ee
  411bf5:	(bad)  
  411bf6:	cmp    DWORD PTR [ebp+0x39],esi
  411bf9:	add    eax,0xbc96e2f3
  411bfe:	mov    ah,0x9
  411c00:	push   edi
  411c01:	or     al,0x5f
  411c03:	pop    ebp
  411c04:	pop    esp
  411c05:	mov    dh,0xb8
  411c07:	and    al,0xf5
  411c09:	sar    DWORD PTR [esp+eiz*8-0x18af6cd8],0xde
  411c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c12:	loop   0x411c67
  411c14:	mov    DWORD PTR [esi],ebp
  411c16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c18:	dec    ebp
  411c19:	(bad)  
  411c1a:	mov    ds:0x32f26b08,al
  411c1f:	aam    0x88
  411c21:	adc    eax,0xe7fc4ff0
  411c26:	inc    esp
  411c27:	sbb    BYTE PTR [eax+0x25d07714],cl
  411c2d:	vpsrlq ymm1,ymm0,xmm3
  411c31:	xchg   ebx,eax
  411c32:	mov    ah,0x4b
  411c34:	test   ch,bh
  411c36:	push   ecx
  411c37:	sar    BYTE PTR [ebp-0x48],cl
  411c3a:	add    dl,BYTE PTR [ebp+esi*1-0x42]
  411c3e:	scas   al,BYTE PTR es:[edi]
  411c3f:	jl     0x411bf5
  411c41:	jb     0x411c62
  411c43:	cmp    eax,0x564de619
  411c48:	mov    al,ah
  411c4a:	cli    
  411c4b:	dec    eax
  411c4c:	mov    eax,0x1a6fe107
  411c51:	daa    
  411c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c53:	sbb    DWORD PTR [ebx+0x7780b26a],esi
  411c59:	mov    ah,0x14
  411c5b:	mov    esp,0x1b1122ae
  411c60:	dec    ebx
  411c61:	inc    eax
  411c62:	stc    
  411c63:	adc    BYTE PTR [eax],al
  411c65:	sbb    al,0xb3
  411c67:	xchg   ebx,eax
  411c68:	test   eax,0x2ac2914e
  411c6d:	into   
  411c6e:	cdq    
  411c6f:	call   FWORD PTR [eax+0x1c]
  411c72:	(bad)  
  411c74:	push   edx
  411c75:	cwde   
  411c76:	pop    edx
  411c77:	cmp    al,0xf0
  411c79:	shl    BYTE PTR [edx],cl
  411c7b:	push   edx
  411c7c:	add    eax,0xc8580a55
  411c81:	sahf   
  411c82:	les    ebx,FWORD PTR [eax]
  411c84:	pop    edi
  411c85:	cmp    DWORD PTR [ecx-0x3e80bc38],edi
  411c8b:	cmp    ebp,DWORD PTR [eax]
  411c8d:	pop    edi
  411c8e:	mov    dl,0x89
  411c90:	pushf  
  411c91:	dec    esp
  411c92:	xchg   esp,eax
  411c93:	leave  
  411c94:	dec    eax
  411c95:	mov    dh,0x98
  411c97:	int    0xcf
  411c99:	lds    eax,FWORD PTR [bx-0x2ca4]
  411c9e:	popf   
  411c9f:	nop
  411ca0:	or     edi,edi
  411ca2:	aas    
  411ca3:	cmp    al,0x9b
  411ca5:	aam    0xe0
  411ca7:	hlt    
  411ca8:	push   ss
  411ca9:	popf   
  411caa:	inc    ecx
  411cab:	add    eax,0xab4d2858
  411cb0:	mov    eax,ds:0xf646bfa3
  411cb5:	iret   
  411cb6:	xchg   ebx,eax
  411cb7:	pop    ebp
  411cb8:	push   ds
  411cb9:	push   esp
  411cba:	cwde   
  411cbb:	in     al,0xc6
  411cbd:	dec    ecx
  411cbe:	cmp    bh,dl
  411cc0:	xlat   BYTE PTR ds:[ebx]
  411cc1:	pop    edx
  411cc2:	sbb    dl,ah
  411cc4:	fnstsw WORD PTR ds:0x8806238
  411cca:	mov    ds,WORD PTR [ebp+0x38]
  411ccd:	fwait
  411cce:	call   0x468c:0x96ed1cdc
  411cd5:	out    0x7b,eax
  411cd7:	pop    esi
  411cd8:	push   ebx
  411cd9:	push   0xffffffac
  411cdb:	(bad)  
  411cdc:	pop    edx
  411cdd:	or     ah,ch
  411cdf:	or     DWORD PTR [edi+0x59b14e53],0x959fcd0b
  411ce9:	sub    eax,0xb4ed9a4b
  411cee:	push   edi
  411cef:	mov    dh,0xec
  411cf1:	addr16 mov ebx,0x4c0bf76d
  411cf7:	out    0xe7,al
  411cf9:	mov    ah,0xc7
  411cfb:	and    cl,ah
  411cfd:	add    BYTE PTR [ecx],dh
  411cff:	shl    DWORD PTR [ecx],cl
  411d01:	(bad)  
  411d02:	mov    BYTE PTR [eax],bh
  411d04:	fisubr DWORD PTR [edi]
  411d06:	sbb    al,0x65
  411d08:	mov    al,ds:0xedfcd691
  411d0d:	jmp    0x7061:0x15650113
  411d14:	rol    DWORD PTR [eax-0x45],cl
  411d17:	(bad)  
  411d18:	mov    edi,0xae3c89c5
  411d1d:	or     BYTE PTR [esi-0x5b002d09],dh
  411d23:	aam    0x53
  411d25:	pop    ds
  411d26:	cmc    
  411d27:	sbb    al,0xa9
  411d29:	add    cl,BYTE PTR [edx+0x5]
  411d2c:	jge    0x411d62
  411d2e:	out    0x96,al
  411d30:	pop    ecx
  411d31:	push   ebp
  411d32:	ds scas eax,DWORD PTR es:[edi]
  411d34:	test   eax,0x6d55ba44
  411d39:	mov    al,ds:0xa9a04b0d
  411d3e:	sar    dh,cl
  411d40:	int    0xa6
  411d42:	out    dx,eax
  411d43:	mov    esp,0x88c73f16
  411d48:	and    DWORD PTR [edx],ebx
  411d4a:	mov    ebx,0xeda78f39
  411d4f:	mov    edx,0xc6125cfa
  411d54:	mov    dl,BYTE PTR [ebp-0x130d7e66]
  411d5a:	sbb    esp,0x394b0e65
  411d60:	test   BYTE PTR ds:0xd9efdd27,dl
  411d66:	call   FWORD PTR [ebx+eax*8+0x41]
  411d6a:	movsx  eax,WORD PTR [eax-0x709ed3b7]
  411d71:	enter  0xd193,0x77
  411d75:	pop    ebp
  411d76:	daa    
  411d77:	and    BYTE PTR [edi],dh
  411d79:	xchg   esi,eax
  411d7a:	and    DWORD PTR [edx-0x3c879848],esp
  411d80:	mov    ah,0x8
  411d82:	sub    BYTE PTR [ebx-0x42981c6],ah
  411d88:	inc    ebx
  411d89:	cmp    ebx,DWORD PTR [ecx-0x52ad9aa6]
  411d8f:	stc    
  411d90:	les    ebx,FWORD PTR [ecx]
  411d92:	(bad)  
  411d93:	xor    dh,ah
  411d95:	push   0x34
  411d97:	fwait
  411d98:	pop    edi
  411d99:	cmp    edx,DWORD PTR [ebx+esi*2-0xb326d20]
  411da0:	push   edi
  411da1:	push   esi
  411da2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411da3:	out    0x27,al
  411da5:	clc    
  411da6:	jns    0x411d99
  411da8:	lods   al,BYTE PTR ds:[esi]
  411da9:	mov    ecx,0x532a20c6
  411dae:	mov    esp,0x1c03d123
  411db3:	mov    ah,0xaa
  411db5:	mov    ecx,0xbe1f7706
  411dba:	ret    0x68a9
  411dbd:	fsubr  DWORD PTR [ebx-0x70528f8f]
  411dc3:	mov    ebx,DWORD PTR [eax+0xa2f9c97]
  411dc9:	mov    esi,0xffbf0a94
  411dce:	imul   esp,DWORD PTR [edx-0x15],0x6d
  411dd2:	fisttp WORD PTR [esi-0x255aae40]
  411dd8:	int    0x8e
  411dda:	inc    ebp
  411ddb:	dec    ecx
  411ddc:	jmp    0xcf0d6384
  411de1:	push   0xae9408b7
  411de6:	loop   0x411deb
  411de8:	cs xchg esi,eax
  411dea:	and    ebp,esp
  411dec:	test   DWORD PTR [esi+0x61],ebp
  411def:	ss mov bl,0xdd
  411df2:	call   0xeb4ab095
  411df7:	aas    
  411df8:	xlat   BYTE PTR ds:[ebx]
  411df9:	jae    0x411e1a
  411dfb:	lods   eax,DWORD PTR ds:[esi]
  411dfc:	aad    0x2c
  411dfe:	arpl   WORD PTR [edi+0x55],di
  411e01:	adc    ecx,DWORD PTR [esi+0x7f]
  411e04:	sub    DWORD PTR [ebx-0x1c],edx
  411e07:	retf   0xb0de
  411e0a:	scas   al,BYTE PTR es:[edi]
  411e0b:	or     esp,DWORD PTR [edi+0x5ddf4e6c]
  411e11:	inc    edx
  411e12:	mov    esi,0x1709378c
  411e17:	xchg   esi,eax
  411e18:	in     al,0x78
  411e1a:	enter  0x9824,0x2c
  411e1e:	pop    ds
  411e1f:	jbe    0x411dae
  411e21:	lds    ecx,FWORD PTR ds:[ebp-0x5d]
  411e25:	mov    BYTE PTR [edx+0x6f],bh
  411e28:	xchg   edx,eax
  411e29:	jge    0x411dde
  411e2b:	outs   dx,BYTE PTR ds:[esi]
  411e2c:	xchg   ebp,eax
  411e2d:	jle    0x411e92
  411e2f:	sub    bl,BYTE PTR [esi+0x1f310768]
  411e35:	popf   
  411e36:	xchg   DWORD PTR [esi],esp
  411e38:	daa    
  411e39:	nop
  411e3a:	xlat   BYTE PTR ds:[ebx]
  411e3b:	add    BYTE PTR [edx-0x1844c236],ch
  411e41:	mov    ds:0xd5994d1a,eax
  411e46:	jnp    0x411e59
  411e48:	mov    eax,0x61148811
  411e4d:	mov    eax,0x84f2ca6a
  411e52:	mov    esp,DWORD PTR [ebp+0x56]
  411e55:	fstp   QWORD PTR [edi-0x3]
  411e58:	xchg   DWORD PTR [edi],esi
  411e5a:	mov    ah,al
  411e5c:	sub    DWORD PTR [edx-0x47bdf100],ebx
  411e62:	sahf   
  411e63:	push   es
  411e64:	adc    BYTE PTR [esi-0x23336821],0x40
  411e6b:	sub    BYTE PTR [eax-0x13d5796f],0x2a
  411e72:	outs   dx,BYTE PTR ds:[esi]
  411e73:	inc    ecx
  411e74:	xchg   ebx,eax
  411e75:	jne    0x411e8b
  411e77:	sbb    al,0xc6
  411e79:	loopne 0x411e59
  411e7b:	mov    edi,0x193e2e5a
  411e80:	mov    ?,WORD PTR [ebp+0x73d61776]
  411e86:	or     DWORD PTR [edx-0x47],esp
  411e89:	and    al,0xdf
  411e8b:	in     al,dx
  411e8c:	add    BYTE PTR [ebx+0x64],ch
  411e8f:	and    esi,DWORD PTR [ebp-0x78]
  411e92:	pop    ecx
  411e93:	jno    0x411ea9
  411e95:	mov    al,ds:0x3014d92f
  411e9a:	aaa    
  411e9b:	mov    dh,0xe8
  411e9d:	adc    DWORD PTR [edi],0x6bda913a
  411ea3:	in     eax,dx
  411ea4:	inc    eax
  411ea5:	outs   dx,DWORD PTR ds:[esi]
  411ea6:	cs dec esi
  411ea8:	nop
  411ea9:	jecxz  0x411eaa
  411eab:	cmp    eax,0xf20c26d7
  411eb0:	mov    ecx,0xc4419e0
  411eb5:	loopne 0x411ea5
  411eb7:	sub    DWORD PTR [ebx],ebp
  411eb9:	std    
  411eba:	ins    BYTE PTR es:[edi],dx
  411ebb:	mov    dh,0xd4
  411ebd:	jnp    0x411e6c
  411ebf:	sbb    al,0x88
  411ec1:	stos   BYTE PTR es:[edi],al
  411ec2:	adc    BYTE PTR [edi],dh
  411ec4:	imul   edi,DWORD PTR ds:0xac01004c,0xffffffb2
  411ecb:	in     eax,0xb7
  411ecd:	pop    DWORD PTR [esi]
  411ecf:	rcl    BYTE PTR [ebp+0x3701b302],cl
  411ed5:	pop    ecx
  411ed6:	jnp    0x411f09
  411ed8:	test   al,0xc7
  411eda:	inc    ebp
  411edb:	jbe    0x411eaf
  411edd:	out    0x8a,al
  411edf:	or     BYTE PTR [edi],ch
  411ee1:	dec    al
  411ee3:	pop    ebx
  411ee4:	sub    al,0x81
  411ee6:	sub    eax,0x5581cf9d
  411eeb:	clc    
  411eec:	dec    edx
  411eed:	add    ecx,DWORD PTR [ecx+0x14f445f9]
  411ef3:	ins    DWORD PTR es:[edi],dx
  411ef4:	or     al,0x8b
  411ef6:	int    0x61
  411ef8:	(bad)  [ebp+0x343a01ba]
  411efe:	push   eax
  411eff:	arpl   WORD PTR [esi-0x32fc7016],di
  411f05:	outs   dx,DWORD PTR ds:[esi]
  411f06:	push   edi
  411f07:	jg     0x411f38
  411f09:	inc    ecx
  411f0a:	out    dx,al
  411f0b:	stos   DWORD PTR es:[edi],eax
  411f0c:	jmp    0x411f24
  411f0e:	outs   dx,BYTE PTR ds:[esi]
  411f0f:	ret    0x55d3
  411f12:	push   0x7289adbe
  411f17:	cmp    BYTE PTR [esi],al
  411f19:	retf   
  411f1a:	imul   esp,DWORD PTR [edx+0x21],0xffffffb7
  411f1e:	clc    
  411f1f:	push   edi
  411f20:	mov    BYTE PTR [ebx],ah
  411f22:	mov    dl,BYTE PTR [ebx-0x7a94a273]
  411f28:	call   0x817:0x894c15f7
  411f2f:	lods   al,BYTE PTR ds:[esi]
  411f30:	sub    eax,0x29fc416a
  411f35:	push   edi
  411f36:	aaa    
  411f37:	sub    BYTE PTR [eax-0x34],bh
  411f3a:	ror    BYTE PTR [ebx+0x414e92c5],cl
  411f40:	mov    ecx,0x9a20db76
  411f45:	(bad)  
  411f46:	lock mov WORD PTR [esi+0x77],?
  411f4a:	mov    edi,0xb4c878a6
  411f4f:	call   0x3e66:0xbf771a41
  411f56:	jg     0x411edc
  411f58:	push   0x373b0e28
  411f5d:	xor    ecx,DWORD PTR [ebx+ebp*1+0x6bcfcfef]
  411f64:	mov    DWORD PTR [ebx-0x360917e5],ebp
  411f6a:	adc    eax,0xb6d5897b
  411f6f:	(bad)  
  411f70:	xor    ebp,esp
  411f72:	lea    edx,[esp+ebx*2]
  411f75:	dec    ebx
  411f76:	cdq    
  411f77:	(bad)  [edi-0x61a048f1]
  411f7d:	fist   WORD PTR [eax-0x33a1cab5]
  411f83:	sahf   
  411f84:	repz mov al,ds:0xd8976b97
  411f8a:	ror    BYTE PTR [ebx+0x53],0xca
  411f8e:	mov    dl,0x6
  411f90:	test   eax,0xc345173a
  411f95:	jb     0x411fbc
  411f97:	les    eax,FWORD PTR [ebx+ecx*4]
  411f9a:	daa    
  411f9b:	pop    esi
  411f9c:	add    esp,DWORD PTR [esi-0x7a2d241e]
  411fa2:	fbstp  TBYTE PTR [ebx]
  411fa4:	shl    DWORD PTR [ecx+0x63eff4d2],cl
  411faa:	mov    dl,0xbb
  411fac:	jbe    0x412017
  411fae:	and    edx,DWORD PTR [edi+0x1b]
  411fb1:	mov    esi,0x3ca6bfc
  411fb6:	test   eax,0x37418a30
  411fbb:	sub    eax,0x32552fd1
  411fc0:	adc    eax,0xc6530972
  411fc5:	push   esi
  411fc6:	xor    DWORD PTR [esi+0x496529ad],esi
  411fcc:	inc    edi
  411fcd:	mov    ds:0x7e793f39,eax
  411fd2:	dec    ebx
  411fd3:	outs   dx,DWORD PTR ds:[esi]
  411fd4:	cmovge edx,edx
  411fd7:	rcr    DWORD PTR ds:0x6d3e8f69,cl
  411fdd:	xor    ecx,0xffffffa9
  411fe0:	xchg   ecx,eax
  411fe1:	cmc    
  411fe2:	std    
  411fe3:	fnstenv [ebx+0x3ba1ad4e]
  411fe9:	add    bl,BYTE PTR [edx]
  411feb:	push   edx
  411fec:	xchg   edx,eax
  411fed:	jb     0x41205d
  411fef:	ror    DWORD PTR [esi],1
  411ff1:	and    BYTE PTR [ebp-0x6d],bl
  411ff4:	loopne 0x411fb8
  411ff6:	or     bl,BYTE PTR [esp+ecx*8]
  411ff9:	cmp    al,0xeb
  411ffb:	aas    
  411ffc:	pushf  
  411ffd:	dec    eax
  411ffe:	loop   0x411fe6
  412000:	sub    al,0x3e
  412002:	fdiv   QWORD PTR [edi-0x24c69b53]
  412008:	mov    DWORD PTR [edi+edi*8-0x6ce9ed53],ebx
  41200f:	xchg   esi,eax
  412010:	lods   eax,DWORD PTR ds:[esi]
  412011:	jnp    0x41201f
  412013:	lds    edi,FWORD PTR [ecx]
  412015:	sbb    ecx,DWORD PTR [eax-0x35b33174]
  41201b:	push   ds
  41201c:	sbb    bh,BYTE PTR [ebx+0x7d]
  41201f:	les    esp,FWORD PTR [eax]
  412021:	mov    edi,0xfd8e3bcc
  412026:	mov    ds:0xfdccc2ee,eax
  41202b:	or     al,0x28
  41202d:	push   esp
  41202e:	(bad)  
  412030:	cli    
  412031:	mov    cl,0x6b
  412033:	shl    BYTE PTR [ebp+0x5e5e76ba],cl
  412039:	iret   
  41203a:	ret    0xdd97
  41203d:	test   BYTE PTR [eax+0x4d],al
  412040:	xor    BYTE PTR ds:[edx],ah
  412043:	int    0x3f
  412045:	mov    ds:0xc20fe0de,al
  41204a:	call   0x51a1f9fb
  41204f:	test   edx,0xb2f15e95
  412055:	dec    ecx
  412056:	adc    edx,0xffffffb6
  412059:	mov    eax,0x16380b25
  41205e:	leave  
  41205f:	stos   BYTE PTR es:[edi],al
  412060:	sbb    BYTE PTR [ecx],cl
  412062:	sbb    al,0x97
  412064:	(bad)  
  412065:	mov    edi,0x26a867b8
  41206a:	fiadd  DWORD PTR [ebp+0x52ec63c5]
  412070:	shr    DWORD PTR [esi-0x94e2478],1
  412076:	adc    edi,DWORD PTR [edi+ebp*4]
  412079:	mov    edx,0xc91fcc2c
  41207e:	dec    edi
  41207f:	ret    0x6ec3
  412082:	mov    eax,0x6ed827e8
  412087:	cld    
  412088:	popf   
  412089:	push   ds
  41208a:	or     ebx,DWORD PTR [ebx-0x19b560c4]
  412090:	xchg   ecx,eax
  412091:	push   ds
  412092:	mov    ss,WORD PTR [ecx+0x2b]
  412095:	pop    es
  412096:	adc    BYTE PTR [ecx-0x7a],ch
  412099:	pop    esi
  41209a:	add    al,0x8a
  41209c:	in     eax,0xba
  41209e:	mov    ebp,0xe348269
  4120a3:	ja     0x412094
  4120a5:	xchg   edi,eax
  4120a6:	pop    edx
  4120a7:	aad    0x20
  4120a9:	push   0x8ebd6450
  4120ae:	cmp    al,0x6b
  4120b0:	dec    DWORD PTR [ebp-0x15]
  4120b3:	jg     0x4120cc
  4120b5:	inc    ebx
  4120b6:	and    ch,BYTE PTR [edx]
  4120b8:	push   edx
  4120b9:	dec    edx
  4120ba:	(bad)  
  4120bb:	into   
  4120bc:	loope  0x4120b1
  4120be:	mov    eax,ds:0xfb857f29
  4120c3:	lock int3 
  4120c5:	retf   
  4120c6:	hlt    
  4120c7:	repz xchg esi,eax
  4120c9:	jp     0x412050
  4120cb:	sbb    ecx,DWORD PTR [edx+0x1b289fc1]
  4120d1:	mov    esi,0xd0a8879
  4120d6:	cmp    esp,DWORD PTR [esi+0x77]
  4120d9:	xchg   edi,eax
  4120da:	jno    0x41211a
  4120dc:	push   eax
  4120dd:	daa    
  4120de:	jbe    0x4120ea
  4120e0:	and    edx,0x13
  4120e3:	mov    ds:0x77b35709,eax
  4120e8:	xchg   edx,eax
  4120e9:	in     al,dx
  4120ea:	outs   dx,BYTE PTR ds:[esi]
  4120eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120ec:	cmp    dh,BYTE PTR [edi+0xa9a7427]
  4120f2:	cld    
  4120f3:	mov    edx,0x9d089c23
  4120f8:	mov    ds:0x4db598b1,eax
  4120fd:	mov    cs,WORD PTR [ecx+0x58730691]
  412103:	sbb    eax,0x3e16682b
  412108:	(bad)  
  412109:	mov    al,0x36
  41210b:	stc    
  41210c:	(bad)  
  41210d:	lsl    ebx,ax
  412110:	cmp    ecx,DWORD PTR [ecx+0x681b02de]
  412116:	imul   edi,esp,0x17
  412119:	add    BYTE PTR [ecx],dl
  41211b:	mov    dh,0x16
  41211d:	fcom   DWORD PTR [esi-0x39910e05]
  412123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412124:	in     eax,0x15
  412126:	ins    BYTE PTR es:[edi],dx
  412127:	sub    edi,DWORD PTR [esi]
  412129:	xchg   ebx,eax
  41212a:	gs push 0xffffffb3
  41212d:	scas   al,BYTE PTR es:[edi]
  41212e:	cmp    DWORD PTR [esi+0x181b2b6d],esi
  412134:	xlat   BYTE PTR ds:[ebx]
  412135:	js     0x412102
  412137:	ret    0x88df
  41213a:	push   edx
  41213b:	add    al,0x75
  41213d:	mov    dl,BYTE PTR [ebp-0x74da05e1]
  412143:	push   edx
  412144:	sbb    ebx,edi
  412146:	lods   al,BYTE PTR ds:[esi]
  412147:	lahf   
  412148:	std    
  412149:	adc    BYTE PTR [eax],dh
  41214b:	js     0x412177
  41214d:	jl     0x4121b3
  41214f:	scas   al,BYTE PTR es:[edi]
  412150:	inc    edx
  412151:	dec    esi
  412152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412153:	in     eax,dx
  412154:	daa    
  412155:	outs   dx,BYTE PTR ds:[esi]
  412156:	test   al,0x10
  412158:	cmp    al,0x2e
  41215a:	cmp    al,BYTE PTR [edi]
  41215c:	sahf   
  41215d:	xchg   ebx,eax
  41215e:	rep stos BYTE PTR es:[edi],al
  412160:	scas   eax,DWORD PTR es:[edi]
  412161:	mov    DWORD PTR [ebp+0x25a80344],edx
  412167:	in     eax,dx
  412168:	mov    bl,0xaf
  41216a:	outs   dx,DWORD PTR ds:[esi]
  41216b:	mov    eax,ds:0xbc9375f8
  412170:	push   ebx
  412171:	sbb    DWORD PTR [esi+eax*8+0x5],edi
  412175:	in     al,0x4c
  412177:	push   cs
  412178:	in     eax,dx
  412179:	addr16 jl 0x4121ea
  41217c:	call   0x1575:0x2387a2ce
  412183:	inc    ebp
  412184:	sti    
  412185:	dec    ecx
  412186:	mov    ds:0xd1a51522,al
  41218b:	mov    WORD PTR [ecx],es
  41218d:	ds es mov ebx,esp
  412191:	add    eax,0x29e718dc
  412196:	call   0xfe9f:0xe5fa8a79
  41219d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41219e:	fldcw  WORD PTR [esi+0x79]
  4121a1:	push   0x573f1168
  4121a6:	xor    esi,esp
  4121a8:	stos   DWORD PTR es:[edi],eax
  4121a9:	adc    ebx,edi
  4121ab:	jb     0x412192
  4121ad:	or     eax,0xa064848
  4121b2:	push   ecx
  4121b3:	mov    ecx,0xc8c6a151
  4121b8:	rcr    esp,0x52
  4121bb:	dec    esp
  4121bc:	dec    esp
  4121bd:	pop    ss
  4121be:	mov    cl,0x81
  4121c0:	sahf   
  4121c1:	lods   al,BYTE PTR ds:[esi]
  4121c2:	push   edi
  4121c3:	fsubr  QWORD PTR ds:[ecx]
  4121c6:	fnstcw WORD PTR [eax-0x36e8adf]
  4121cc:	lahf   
  4121cd:	pusha  
  4121ce:	jp     0x412183
  4121d0:	clc    
  4121d1:	shl    DWORD PTR [edi],0x0
  4121d4:	iret   
  4121d5:	sbb    al,0x45
  4121d7:	add    cl,BYTE PTR ds:0x6c6ee26b
  4121dd:	outs   dx,DWORD PTR ds:[esi]
  4121de:	pop    ecx
  4121df:	call   0xe05e1ea8
  4121e4:	stos   DWORD PTR es:[edi],eax
  4121e5:	ja     0x412242
  4121e7:	loopne 0x412197
  4121e9:	ret    0xfa
  4121ec:	xor    eax,0x11873044
  4121f1:	push   edx
  4121f2:	retf   
  4121f3:	ja     0x41223f
  4121f5:	bound  ecx,QWORD PTR [ecx-0xfa72756]
  4121fb:	xlat   BYTE PTR ds:[ebx]
  4121fc:	mov    edi,0xf720cf7c
  412201:	pop    eax
  412202:	mul    BYTE PTR [ebp+0x112af8]
  412208:	or     esi,DWORD PTR [esi+ecx*8]
  41220b:	sbb    BYTE PTR [eax+eax*1],bl
  41220e:	cmp    al,0x78
  412210:	xor    eax,0x3b06fa0f
  412215:	rcr    DWORD PTR [esi+0x10410a05],cl
  41221b:	daa    
  41221c:	mov    edi,0xf930b97d
  412221:	or     BYTE PTR [edi-0x71],dl
  412224:	jg     0x4121ff
  412226:	nop
  412227:	mov    eax,0x2d121459
  41222c:	ins    DWORD PTR es:[edi],dx
  41222d:	sub    edi,edi
  41222f:	xchg   edx,eax
  412230:	dec    esi
  412231:	add    BYTE PTR [ecx+0xc],bh
  412234:	jnp    0x412283
  412236:	or     BYTE PTR [eax+edx*2+0x786770dc],0xc0
  41223e:	xchg   BYTE PTR [ebx],al
  412240:	ds jbe 0x41224d
  412243:	inc    esp
  412244:	in     eax,0xb8
  412246:	shr    BYTE PTR [ebp+0x3d],1
  412249:	jmp    0x4121d3
  41224b:	xor    esi,DWORD PTR [ebp-0x12389fd5]
  412251:	or     DWORD PTR [ecx+edi*8],0x70a536d7
  412258:	inc    esp
  412259:	sub    bl,dh
  41225b:	jnp    0x4122ca
  41225d:	das    
  41225e:	add    ebp,DWORD PTR [ebp+0x23f32c0a]
  412264:	jmp    0x70ab3b53
  412269:	add    eax,0xa3254292
  41226e:	daa    
  41226f:	loop   0x412264
  412271:	arpl   dx,di
  412273:	push   esp
  412274:	mov    al,0x2
  412276:	mov    ah,0x61
  412278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412279:	add    bh,ch
  41227b:	popa   
  41227c:	dec    edx
  41227d:	dec    ecx
  41227e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41227f:	mov    ecx,esi
  412281:	retf   0x6234
  412284:	mov    WORD PTR [eax-0x2e],?
  412287:	or     ecx,DWORD PTR [ecx+0x50]
  41228a:	loop   0x4122d2
  41228c:	retf   0xff9f
  41228f:	and    edx,ebx
  412291:	inc    ebx
  412292:	cwde   
  412293:	pusha  
  412294:	mov    dl,0x98
  412296:	loop   0x412239
  412298:	xchg   ebp,eax
  412299:	adc    al,BYTE PTR [ecx]
  41229b:	repnz pop ebx
  41229d:	pop    eax
  41229e:	(bad)  [ebx+0x4df0a7ee]
  4122a4:	inc    esp
  4122a5:	push   ss
  4122a6:	loopne 0x4122d6
  4122a8:	xchg   esi,eax
  4122a9:	xor    ebp,DWORD PTR [edx-0x713008f9]
  4122af:	cmp    ebx,edx
  4122b1:	ins    DWORD PTR es:[edi],dx
  4122b2:	add    DWORD PTR ds:0xaabb1155,esi
  4122b8:	nop
  4122b9:	pop    edx
  4122ba:	xor    edi,DWORD PTR [edi+ebx*1-0x15]
  4122be:	mov    cl,BYTE PTR [edx-0x11]
  4122c1:	ror    BYTE PTR [ebx+0x23],0xd1
  4122c5:	cmp    DWORD PTR [ecx+0x39],ebp
  4122c8:	rol    BYTE PTR [ecx+ebp*4+0x36fdf09b],1
  4122cf:	sub    eax,0xc18cb828
  4122d4:	push   0xffffff86
  4122d6:	jo     0x412329
  4122d8:	adc    DWORD PTR [esi+0xaa0631f],eax
  4122de:	rcr    ebp,cl
  4122e0:	cdq    
  4122e1:	inc    ebp
  4122e2:	ja     0x4122fd
  4122e4:	in     al,dx
  4122e5:	fld    QWORD PTR [ebx]
  4122e7:	(bad)  
  4122e8:	sub    esi,DWORD PTR [eax-0x5d]
  4122eb:	sub    eax,0x21fd7eca
  4122f0:	adc    BYTE PTR [ecx],cl
  4122f2:	mov    BYTE PTR [ecx-0x1e282424],cl
  4122f8:	in     eax,0x4f
  4122fa:	xchg   ebx,eax
  4122fb:	dec    edx
  4122fc:	shr    DWORD PTR [ecx-0x13],1
  4122ff:	out    dx,al
  412300:	adc    BYTE PTR [edi+0x6f927858],0xac
  412307:	imul   edi,edx,0xffffffa5
  41230a:	cld    
  41230b:	and    DWORD PTR [edi],esp
  41230d:	pop    eax
  41230e:	mov    ebp,0x37705831
  412313:	(bad)  
  412314:	in     al,0x76
  412316:	cmp    BYTE PTR [edx+ebx*1-0x5f],ah
  41231a:	jno    0x4122e6
  41231c:	retf   
  41231d:	test   ch,dl
  41231f:	pop    ebx
  412320:	iret   
  412321:	dec    edx
  412322:	or     eax,0xd0ba67f4
  412327:	repz ja 0x412332
  41232a:	mov    edi,DWORD PTR [ebx-0x391fbdb9]
  412330:	adc    DWORD PTR [eax],eax
  412332:	mov    eax,ds:0x2cf0fbea
  412337:	add    al,0x39
  412339:	or     bl,0x2f
  41233c:	call   DWORD PTR [ecx-0x1d2b5999]
  412342:	mov    ds:0xba92cb8c,al
  412347:	jo     0x41235d
  412349:	adc    bl,dl
  41234b:	or     BYTE PTR [edi-0x11e5ad5],al
  412351:	in     eax,dx
  412352:	clc    
  412353:	dec    ecx
  412354:	inc    edi
  412355:	or     dl,BYTE PTR [esi+0x6233888c]
  41235b:	dec    ebp
  41235c:	les    edi,FWORD PTR [eax+0x8]
  41235f:	add    al,0x15
  412361:	dec    ebp
  412362:	inc    esp
  412363:	cmp    DWORD PTR [ebp+0x6ea4e563],ebx
  412369:	dec    eax
  41236a:	sub    DWORD PTR [esi],esp
  41236c:	or     ch,BYTE PTR ds:0x33f99422
  412372:	enter  0x7457,0x8a
  412376:	lahf   
  412377:	(bad)  [eax]
  412379:	ss test al,0x4f
  41237c:	loopne 0x412353
  41237e:	pop    ecx
  41237f:	mov    WORD PTR [eax+0x57],cs
  412382:	push   edi
  412383:	int3   
  412384:	jbe    0x4123bb
  412386:	mov    ecx,0x4dbc392c
  41238b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41238c:	mov    esi,0xe12d271d
  412391:	sub    BYTE PTR [ecx+esi*8-0x2c],dh
  412395:	loopne 0x41236c
  412397:	or     al,0xc5
  412399:	mov    al,ds:0x5a0df76f
  41239e:	xchg   esp,eax
  41239f:	test   BYTE PTR [edi+0x5],dl
  4123a2:	jp     0x4123e8
  4123a4:	stos   DWORD PTR es:[edi],eax
  4123a5:	pop    es
  4123a6:	sbb    esi,ecx
  4123a8:	adc    BYTE PTR [edx],0xd4
  4123ab:	cdq    
  4123ac:	lahf   
  4123ad:	mov    bl,0x76
  4123af:	cmp    cl,BYTE PTR [edi]
  4123b1:	xor    eax,0x5a6f7b8f
  4123b6:	aas    
  4123b7:	ss jg  0x412362
  4123ba:	cmp    al,0xb4
  4123bc:	je     0x4123c7
  4123be:	mov    eax,0x25a5c880
  4123c3:	pop    edx
  4123c4:	mov    dl,0xeb
  4123c6:	and    al,0x29
  4123c8:	inc    eax
  4123c9:	push   es
  4123ca:	pop    ebx
  4123cb:	xchg   esi,eax
  4123cc:	mov    bh,BYTE PTR [edx+edx*2+0x2]
  4123d0:	cwde   
  4123d1:	lock jp 0x412400
  4123d4:	repz sub ch,dh
  4123d7:	or     dl,0x4b
  4123da:	xchg   BYTE PTR [edx-0x7d],al
  4123dd:	ret    
  4123de:	repnz dec ecx
  4123e0:	in     eax,dx
  4123e1:	push   ss
  4123e2:	hlt    
  4123e3:	sbb    ecx,eax
  4123e5:	fwait
  4123e6:	xor    eax,0xa775517c
  4123eb:	xor    al,0xd1
  4123ed:	nop
  4123ee:	sub    eax,0xd358e931
  4123f3:	add    DWORD PTR [esi+0x7949e415],ebp
  4123f9:	retf   0xfc3f
  4123fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123fd:	fstp   QWORD PTR [edi-0x4e2d8d35]
  412403:	pop    es
  412404:	mov    bh,0xf2
  412406:	mov    dl,0x82
  412408:	xor    ebx,eax
  41240a:	and    edi,DWORD PTR [ebx+0x2ae0a3ef]
  412410:	sbb    al,0xce
  412412:	add    DWORD PTR [ecx-0x4440dcec],esp
  412418:	push   0x44
  41241a:	cs ins DWORD PTR es:[edi],dx
  41241c:	neg    DWORD PTR [edi-0x3219d9bf]
  412422:	pusha  
  412423:	pop    ebp
  412424:	xor    esi,esi
  412426:	mov    dh,0x34
  412428:	in     eax,dx
  412429:	lea    esp,[edi]
  41242b:	cmp    BYTE PTR [edx-0x39],0x65
  41242f:	xor    ebp,esi
  412431:	sub    BYTE PTR [edx-0x15],bh
  412434:	ror    BYTE PTR [esi],cl
  412436:	mov    WORD PTR [ecx-0x3e],gs
  412439:	mov    ds:0xcb6c9446,eax
  41243e:	mov    bl,0x0
  412440:	mov    ds:0xc9d67825,al
  412445:	aad    0xbb
  412447:	popf   
  412448:	stos   DWORD PTR es:[edi],eax
  412449:	or     esp,esi
  41244b:	pop    ebp
  41244c:	test   BYTE PTR [eax],0x78
  41244f:	outs   dx,DWORD PTR ds:[esi]
  412450:	scas   eax,DWORD PTR es:[edi]
  412451:	fild   QWORD PTR [ebp+0x3b78c9e8]
  412457:	ins    BYTE PTR es:[edi],dx
  412458:	xor    BYTE PTR [eax+0x70cd5df3],0x82
  41245f:	rcr    BYTE PTR [ecx-0x64],0x4b
  412463:	and    al,0x86
  412465:	ret    
  412466:	mov    bl,0xa7
  412468:	or     eax,0x91aae3f3
  41246d:	push   esp
  41246e:	adc    eax,DWORD PTR [edi+0x25]
  412471:	inc    ebx
  412472:	call   0x7b1e:0x9644389d
  412479:	(bad)  
  41247a:	movsx  ebp,WORD PTR [ebx]
  41247d:	sbb    eax,0xa31e4c81
  412482:	int3   
  412483:	sub    DWORD PTR [esi+0x21],ebp
  412486:	(bad)  [esi]
  412488:	sub    BYTE PTR [ebp-0x28bb522d],bl
  41248e:	xor    eax,0xdce4368
  412493:	or     dl,BYTE PTR [ecx+0x5a899dce]
  412499:	pop    ebx
  41249a:	xor    eax,0x9e6a0d2f
  41249f:	and    ah,BYTE PTR [ecx+ebx*1+0x7d]
  4124a3:	ja     0x4124d9
  4124a5:	mov    ecx,0x80e79a7a
  4124aa:	cld    
  4124ab:	push   esp
  4124ac:	adc    esp,DWORD PTR [edx+0x675ab34]
  4124b2:	push   ebp
  4124b3:	jle    0x4124cd
  4124b5:	cmp    eax,0xc29654f4
  4124ba:	aaa    
  4124bb:	stos   BYTE PTR es:[edi],al
  4124bc:	das    
  4124bd:	ins    DWORD PTR es:[edi],dx
  4124be:	inc    ebp
  4124bf:	xchg   edi,eax
  4124c0:	fimul  DWORD PTR [edx+0x5eadf854]
  4124c6:	pop    edi
  4124c7:	mov    eax,0x131fe71a
  4124cc:	ins    BYTE PTR es:[edi],dx
  4124cd:	sbb    eax,0xa9745423
  4124d2:	cmp    DWORD PTR [eax],esp
  4124d4:	push   ecx
  4124d5:	inc    eax
  4124d6:	jl     0x4124aa
  4124d8:	and    BYTE PTR [ebp-0x3],0x66
  4124dc:	push   0xffffffee
  4124de:	pop    ebp
  4124df:	frstor [ebp+0xf]
  4124e2:	(bad)  
  4124e3:	push   edi
  4124e4:	cli    
  4124e5:	lds    eax,FWORD PTR [edx+0x47]
  4124e8:	mov    ds:0xb3f80c36,al
  4124ed:	dec    esp
  4124ee:	ins    BYTE PTR es:[edi],dx
  4124ef:	dec    ebx
  4124f0:	sub    BYTE PTR [ecx-0x6a],cl
  4124f3:	clc    
  4124f4:	and    esp,DWORD PTR [edx+0x2251561e]
  4124fa:	arpl   WORD PTR es:[ecx-0x70b885d],bp
  412501:	retf   0xbcf2
  412504:	jecxz  0x4124ba
  412506:	cmp    DWORD PTR [ecx+0x47],eax
  412509:	cld    
  41250a:	jge    0x41251f
  41250c:	push   eax
  41250d:	dec    ebp
  41250e:	ror    BYTE PTR [esi+0x1ff83f62],0xfd
  412515:	shufps xmm4,xmm0,0x46
  412519:	dec    ecx
  41251a:	xor    BYTE PTR [ecx],0xba
  41251d:	push   ebx
  41251e:	rol    BYTE PTR [esp+esi*8-0x661a86f],1
  412525:	js     0x4124dd
  412527:	push   cs
  412528:	fsubp  st(3),st
  41252a:	lods   eax,DWORD PTR ds:[esi]
  41252b:	sbb    al,0xee
  41252d:	imul   ebp,DWORD PTR [ecx],0xcfea45c2
  412533:	int    0x21
  412535:	sub    BYTE PTR [ebx-0x4af1697f],dl
  41253b:	dec    eax
  41253c:	mov    DWORD PTR [eax+0x4b6f1626],edx
  412542:	addr16 dec ebx
  412544:	jmp    0xfe5012dd
  412549:	pop    es
  41254a:	mov    cl,0x8a
  41254c:	iret   
  41254d:	scas   al,BYTE PTR es:[edi]
  41254e:	sub    ecx,DWORD PTR [esi-0x692d3853]
  412554:	mov    ah,0x99
  412556:	or     eax,0x81bee4e
  41255b:	jp     0x41256a
  41255d:	mov    ss:0x50e98ad2,eax
  412563:	jnp    0x4125d4
  412565:	push   ecx
  412566:	push   eax
  412567:	add    BYTE PTR [esi+0x1a],cl
  41256a:	rcl    bl,1
  41256c:	adc    al,0x36
  41256e:	or     BYTE PTR [ebx],bl
  412570:	out    dx,eax
  412571:	cdq    
  412572:	call   0xcabdddb6
  412577:	mov    ds:0x87e5bb8e,al
  41257c:	lods   eax,DWORD PTR ds:[esi]
  41257d:	arpl   WORD PTR [ebp+0x507cd874],bx
  412583:	push   cs
  412584:	push   ebx
  412585:	mov    dl,0x44
  412587:	sbb    eax,0x414140d6
  41258c:	fwait
  41258d:	test   DWORD PTR [esi-0x5d25ebe0],ebx
  412593:	sub    eax,0x329e0d96
  412598:	es cs cmp al,0x97
  41259c:	(bad)  [edx+0x66]
  41259f:	jo     0x412598
  4125a1:	inc    edi
  4125a2:	aas    
  4125a3:	out    dx,eax
  4125a4:	cld    
  4125a5:	inc    ecx
  4125a6:	and    dl,dl
  4125a8:	mov    DWORD PTR [ebp-0x6a7227e0],eax
  4125ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125af:	fs ins DWORD PTR es:[edi],dx
  4125b1:	scas   al,BYTE PTR es:[edi]
  4125b2:	outs   dx,DWORD PTR ds:[esi]
  4125b3:	jmp    0xb35bb1f8
  4125b8:	(bad)  
  4125ba:	sub    BYTE PTR [eax+0x30182306],ah
  4125c0:	jnp    0x4125f4
  4125c2:	(bad)  
  4125c3:	push   cs
  4125c4:	xchg   ebx,eax
  4125c5:	test   DWORD PTR [eax-0x1b],esi
  4125c8:	pop    ecx
  4125c9:	jl     0x41259b
  4125cb:	and    cl,BYTE PTR [eax+0x1b]
  4125ce:	test   DWORD PTR [esi-0x5c],edx
  4125d1:	ret    0x3207
  4125d4:	pop    ebx
  4125d5:	mov    esp,0xb6a2e602
  4125da:	inc    ebx
  4125db:	adc    esp,esp
  4125dd:	mov    dl,0x9d
  4125df:	popa   
  4125e0:	outs   dx,DWORD PTR ds:[esi]
  4125e1:	add    edi,eax
  4125e3:	push   ebp
  4125e4:	sti    
  4125e5:	inc    edx
  4125e6:	xor    DWORD PTR [ebx+0x64b1ca64],edx
  4125ec:	das    
  4125ed:	out    dx,eax
  4125ee:	rcl    DWORD PTR [edi-0xb99b9a9],1
  4125f4:	test   BYTE PTR [ecx],al
  4125f6:	jmp    0xe88a:0x3c8d4a01
  4125fd:	pop    eax
  4125fe:	xchg   ecx,eax
  4125ff:	xchg   ebx,eax
  412600:	retf   
  412601:	test   al,0x82
  412603:	sub    BYTE PTR [ebx-0x608f4f5b],cl
  412609:	jnp    0x412595
  41260b:	inc    eax
  41260c:	je     0x4125be
  41260e:	adc    BYTE PTR [edi-0x31],bh
  412611:	rol    edx,cl
  412613:	int    0xe7
  412615:	mov    al,ds:0xab2b91be
  41261a:	xor    DWORD PTR [bx+si],ebp
  41261d:	cmp    dh,al
  41261f:	dec    ebp
  412620:	call   0xcc10:0xd445985a
  412627:	outs   dx,DWORD PTR ds:[esi]
  412628:	dec    eax
  412629:	not    DWORD PTR [edx-0x78]
  41262c:	pop    ss
  41262d:	jl     0x412637
  41262f:	xchg   ebp,eax
  412630:	or     eax,0xa9cab0ba
  412635:	cmp    BYTE PTR [esi-0x1b],dl
  412638:	dec    esi
  412639:	loope  0x41265c
  41263b:	les    ecx,FWORD PTR [edx+0x5e]
  41263e:	jge    0x41266e
  412640:	mov    esp,0x7efab72a
  412645:	mov    ch,0xf0
  412647:	push   es
  412648:	stos   BYTE PTR es:[edi],al
  412649:	sbb    al,0x53
  41264b:	fsubr  DWORD PTR gs:[eax+ebp*4-0x6fe069f6]
  412653:	cld    
  412654:	test   al,0x27
  412656:	xchg   DWORD PTR [ebp-0x76e7bb47],ebp
  41265c:	add    eax,0x6de9c2d7
  412661:	mov    fs,WORD PTR [ebx]
  412663:	loop   0x4126de
  412665:	shl    cl,0xdb
  412668:	retf   
  412669:	pusha  
  41266a:	pop    edx
  41266b:	mov    ah,0x7b
  41266d:	test   edi,ebx
  41266f:	out    0x92,al
  412671:	out    0x4b,eax
  412673:	(bad)  
  412674:	std    
  412675:	adc    eax,0x9d9c9aa9
  41267a:	ror    DWORD PTR [edx+0x16e7ada9],cl
  412680:	mov    eax,ds:0xf74c720b
  412685:	cli    
  412686:	inc    ebx
  412687:	cmc    
  412688:	cmp    dl,bh
  41268a:	in     eax,dx
  41268b:	mov    ch,0xf
  41268d:	fidivr DWORD PTR [esi+esi*8]
  412690:	mov    edi,0xdb48895
  412695:	inc    edx
  412696:	xlat   BYTE PTR ds:[ebx]
  412697:	push   0xe832f559
  41269c:	mov    ah,0xf0
  41269e:	int    0x4a
  4126a0:	and    eax,0xcb39aa33
  4126a5:	sbb    DWORD PTR fs:[esi+0x41],esp
  4126a9:	mov    ebp,0xd6fdc654
  4126ae:	xor    BYTE PTR [ebp+0x5eefb5b3],dh
  4126b4:	jp     0x412711
  4126b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126b7:	jno    0x412737
  4126b9:	shrd   DWORD PTR [ecx-0x2ae69466],edi,0xb0
  4126c1:	and    dh,dh
  4126c3:	sbb    ebp,ebp
  4126c5:	test   DWORD PTR [ecx-0x1],0x3a0f72ad
  4126cc:	sub    eax,0xdc29e92b
  4126d1:	push   ds
  4126d2:	stos   BYTE PTR es:[edi],al
  4126d3:	lds    eax,FWORD PTR [ebx+0x765713f4]
  4126d9:	add    DWORD PTR [edx-0x15],esp
  4126dc:	pop    eax
  4126dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126de:	ja     0x4126c9
  4126e0:	xchg   ebx,eax
  4126e1:	imul   eax,ebp,0xffffffbf
  4126e4:	call   0x40b4:0xb4ba659e
  4126eb:	mov    cl,0xdc
  4126ed:	popa   
  4126ee:	xor    eax,0xd44134d3
  4126f3:	loope  0x4126f6
  4126f5:	inc    esp
  4126f6:	inc    esp
  4126f7:	cmp    ecx,esp
  4126f9:	dec    edx
  4126fa:	inc    edi
  4126fb:	mov    WORD PTR [ebp+0x1b4a5bc4],gs
  412701:	add    ebp,DWORD PTR [eax+0x71]
  412704:	jge    0x412758
  412706:	rcr    BYTE PTR [ebx-0x3b],1
  412709:	push   edi
  41270a:	icebp  
  41270b:	mov    ecx,0xce459719
  412710:	(bad)  
  412711:	scas   eax,DWORD PTR es:[edi]
  412712:	aad    0x6d
  412714:	call   0x3db1:0x4a67ebe2
  41271b:	pop    ss
  41271c:	(bad)  
  41271d:	xor    ecx,DWORD PTR [ecx-0x4]
  412720:	mov    ds:0x9ce590ce,eax
  412725:	mov    ebp,0xd557df80
  41272a:	jbe    0x412708
  41272c:	in     eax,dx
  41272d:	add    al,0x29
  41272f:	iret   
  412730:	imul   DWORD PTR [edi+esi*4]
  412733:	add    ebx,ebp
  412735:	sub    DWORD PTR [eax+0x66],0x47
  412739:	pushf  
  41273a:	test   DWORD PTR [esp+edx*8+0x71d77a04],ecx
  412741:	rcl    BYTE PTR [esi+0x45],0xeb
  412745:	cmc    
  412746:	call   0x7bd391e8
  41274b:	mul    BYTE PTR [eax-0x52]
  41274e:	add    esi,DWORD PTR [eax-0x3e]
  412751:	test   BYTE PTR [esi],ch
  412753:	(bad)  
  412754:	div    BYTE PTR [esi]
  412756:	pop    ecx
  412757:	outs   dx,BYTE PTR ds:[esi]
  412758:	push   0x3dd4152f
  41275d:	(bad)  
  41275e:	sbb    DWORD PTR [esi-0x7ff8279b],esp
  412764:	lods   eax,DWORD PTR ds:[esi]
  412765:	xlat   BYTE PTR ds:[ebx]
  412766:	inc    esp
  412767:	ja     0x41270a
  412769:	sbb    al,BYTE PTR [edi+0x544cba73]
  41276f:	mov    esp,0x307a0f6a
  412774:	test   ecx,0xa17aa34c
  41277a:	cmp    DWORD PTR [esi],esi
  41277c:	mov    dh,0x78
  41277e:	scas   al,BYTE PTR es:[edi]
  41277f:	rcr    BYTE PTR [eax],cl
  412781:	test   DWORD PTR [edx+0x59],edi
  412784:	mov    eax,ss
  412786:	out    dx,eax
  412787:	add    al,0xb8
  412789:	or     DWORD PTR [edi],edi
  41278b:	(bad)  
  41278c:	push   esi
  41278d:	xchg   ebx,eax
  41278e:	sbb    BYTE PTR [ebx],ch
  412790:	push   0x2c357eb0
  412795:	mov    ebp,0x45e55d57
  41279a:	inc    eax
  41279b:	(bad)  
  41279d:	test   eax,0x6f74aec3
  4127a2:	stc    
  4127a3:	lods   al,BYTE PTR ds:[esi]
  4127a4:	sbb    eax,0xfad7a0c1
  4127a9:	hlt    
  4127aa:	xchg   ecx,eax
  4127ab:	pop    edx
  4127ac:	push   edx
  4127ad:	pop    esp
  4127ae:	int3   
  4127af:	sbb    ecx,ebx
  4127b1:	adc    BYTE PTR [edx+0x768502e0],0x8a
  4127b8:	jns    0x4127dd
  4127ba:	das    
  4127bb:	pop    esp
  4127bc:	or     DWORD PTR [edx-0x7c],esi
  4127bf:	fs mov ebp,0x4654ee6
  4127c5:	mov    ebp,edx
  4127c7:	dec    ebx
  4127c8:	les    eax,FWORD PTR [ecx]
  4127ca:	inc    esi
  4127cb:	and    bh,BYTE PTR [esi-0x186d49a2]
  4127d1:	xchg   ebp,eax
  4127d2:	sub    al,0xd1
  4127d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127d5:	out    dx,al
  4127d6:	(bad)  
  4127d7:	mov    al,0xbc
  4127d9:	jmp    0x247f:0xc67a2211
  4127e0:	jbe    0x412847
  4127e2:	adc    eax,0x88e1efd8
  4127e7:	xor    al,0x54
  4127e9:	cmp    al,0x72
  4127eb:	out    dx,eax
  4127ec:	xor    eax,0xc08250f1
  4127f1:	xor    DWORD PTR [edx],ebx
  4127f3:	fsub   st,st(3)
  4127f5:	not    DWORD PTR [ebp+0x20]
  4127f8:	xchg   edi,eax
  4127f9:	cmp    ah,BYTE PTR [ebx]
  4127fb:	add    eax,0x971c81ba
  412800:	pop    esi
  412801:	mov    bl,0xd1
  412803:	xor    al,0xe2
  412805:	test   ebx,eax
  412807:	ror    BYTE PTR [ebp+0x3cb56bf8],0x23
  41280e:	ins    BYTE PTR es:[edi],dx
  41280f:	scas   al,BYTE PTR es:[edi]
  412810:	adc    ecx,DWORD PTR [ecx]
  412812:	xchg   esi,eax
  412813:	popa   
  412814:	mov    al,ds:0x7cd02e8c
  412819:	mov    ds:0x81960c2f,eax
  41281e:	pop    esp
  41281f:	cs popa 
  412821:	and    ecx,DWORD PTR [edi+0x52638597]
  412827:	or     esp,edx
  412829:	cmp    dl,BYTE PTR [edx-0x80efd1d]
  41282f:	adc    eax,0x5fc32fa5
  412834:	adc    eax,DWORD PTR [esi]
  412836:	je     0x4127d2
  412838:	pop    ds
  412839:	mov    dl,0x9a
  41283b:	ins    DWORD PTR es:[edi],dx
  41283c:	cmp    eax,DWORD PTR [ebp-0x3176bb2d]
  412842:	stos   DWORD PTR es:[edi],eax
  412843:	xchg   DWORD PTR [esi],edx
  412845:	clc    
  412846:	mov    edi,0xf1061653
  41284b:	aam    0x0
  41284d:	ds xor bl,bh
  412850:	adc    dl,al
  412852:	add    DWORD PTR [ebp+0x6d],esi
  412855:	cmp    eax,0xfc61909b
  41285a:	arpl   WORD PTR [edi+edx*4-0x55],bp
  41285e:	not    BYTE PTR [ebx]
  412860:	gs and eax,0x6ac0017b
  412866:	rol    DWORD PTR ds:0xe62a8ef8,1
  41286c:	push   ds
  41286d:	aaa    
  41286e:	stc    
  41286f:	mov    esp,0x2b1e67
  412874:	xor    edx,esi
  412876:	jne    0x41281e
  412878:	pusha  
  412879:	mov    bh,0x20
  41287b:	push   ds
  41287c:	retf   0x970b
  41287f:	adc    dh,BYTE PTR [edx]
  412881:	mov    ah,0x6c
  412883:	mov    eax,ds:0xc5f2b2b3
  412888:	scas   eax,DWORD PTR es:[edi]
  412889:	or     ebx,DWORD PTR [ebp-0xec0a169]
  41288f:	mov    al,ds:0x3f89953
  412894:	mov    bl,BYTE PTR [ecx-0x12accb45]
  41289a:	jge    0x412903
  41289c:	adc    DWORD PTR [ecx],edi
  41289e:	iret   
  41289f:	inc    ebx
  4128a0:	mov    edi,DWORD PTR [ebx+ebx*4-0x66]
  4128a4:	imul   esp,esp,0xffffffc9
  4128a7:	ret    0x323b
  4128aa:	cwde   
  4128ab:	rcr    DWORD PTR [esi+0x1faad5c0],1
  4128b1:	(bad)  
  4128b2:	test   al,0xa3
  4128b4:	pop    edx
  4128b5:	pushf  
  4128b6:	hlt    
  4128b7:	jae    0x41285e
  4128b9:	(bad)  
  4128ba:	fcmovnbe st,st(3)
  4128bc:	dec    edx
  4128bd:	outs   dx,DWORD PTR ds:[esi]
  4128be:	lock and DWORD PTR [esi],0xffffff9d
  4128c2:	fld    TBYTE PTR [edx+0x6a]
  4128c5:	mov    ecx,0xee08afa4
  4128ca:	push   0xb8f43d80
  4128cf:	jmp    0x7afd:0x1f32b4bb
  4128d6:	(bad)  
  4128d8:	cwde   
  4128d9:	ins    BYTE PTR es:[edi],dx
  4128da:	xchg   edx,eax
  4128db:	fnsave [ecx+0x45]
  4128de:	push   edx
  4128df:	cli    
  4128e0:	cmp    eax,0x9f7ef672
  4128e5:	lods   eax,DWORD PTR ds:[esi]
  4128e6:	in     eax,dx
  4128e7:	and    ah,ah
  4128e9:	xchg   edx,eax
  4128ea:	fyl2x  
  4128ec:	push   edi
  4128ed:	add    eax,0xf9379236
  4128f2:	sti    
  4128f3:	dec    ecx
  4128f4:	call   0xe479e9fc
  4128f9:	jns    0x4128bb
  4128fb:	fcom   QWORD PTR [eax+ecx*2]
  4128fe:	fadd   QWORD PTR [edi-0x6ae12838]
  412904:	push   0xafa17f9f
  412909:	mov    ah,0xb7
  41290b:	mov    WORD PTR [ebx+0x35],ds
  41290e:	lods   al,BYTE PTR ds:[esi]
  41290f:	sub    BYTE PTR [esi],al
  412911:	jmp    0xfb41:0xf1071459
  412918:	sti    
  412919:	xchg   esi,eax
  41291a:	xchg   edi,eax
  41291b:	pop    es
  41291c:	(bad)  [ecx]
  41291e:	adc    bh,ah
  412920:	cmp    ah,ch
  412922:	xchg   BYTE PTR [esi+0x539f20c4],bl
  412928:	jmp    0x412919
  41292a:	xor    ecx,DWORD PTR [eax]
  41292c:	xlat   BYTE PTR ds:[ebx]
  41292d:	clc    
  41292e:	mov    eax,ds:0xab64ab39
  412933:	bound  edi,QWORD PTR [esi]
  412935:	rcr    BYTE PTR [edx+0x2a6e8389],1
  41293b:	sbb    esp,DWORD PTR [ebx+0x28b5ad8d]
  412941:	jno    0x412910
  412943:	or     ah,cl
  412945:	dec    edi
  412946:	and    BYTE PTR [esi],dl
  412948:	bound  esp,QWORD PTR [eax+0x3c]
  41294b:	inc    ecx
  41294c:	mov    dl,0xff
  41294e:	rol    BYTE PTR [eax],0x7e
  412951:	leave  
  412952:	sbb    DWORD PTR [ebp-0x1b708112],esi
  412958:	mov    esi,0xde15f006
  41295d:	mov    bh,BYTE PTR [ebp+0xcfd8b78]
  412963:	int    0xa6
  412965:	xchg   esi,eax
  412966:	push   es
  412967:	shr    DWORD PTR [eax+ecx*1+0x56851a65],1
  41296e:	test   BYTE PTR [ebx],bl
  412970:	sbb    BYTE PTR [edi-0x30],cl
  412973:	out    dx,eax
  412974:	xor    edi,DWORD PTR [edi]
  412976:	pop    ebp
  412977:	out    dx,al
  412978:	rcr    DWORD PTR [edi+0x6e],cl
  41297b:	jmp    0xe619:0x46189918
  412982:	cs pop esi
  412984:	xor    al,0x52
  412986:	mov    ecx,ds
  412988:	push   ss
  412989:	jmp    0x41297c
  41298b:	sbb    al,0x78
  41298d:	aas    
  41298e:	lds    ecx,FWORD PTR [esp+edx*1]
  412991:	xchg   ebp,eax
  412992:	jmp    0x3be7ccfa
  412997:	outs   dx,BYTE PTR ds:[esi]
  412998:	out    dx,eax
  412999:	or     BYTE PTR [ebx-0x3dc069bf],0xee
  4129a0:	or     edx,DWORD PTR [ecx+0x3c]
  4129a3:	call   0x4c6c220
  4129a8:	sub    dl,BYTE PTR [edx+0x59a216f5]
  4129ae:	mov    DWORD PTR [edx+0x35],edx
  4129b1:	and    eax,DWORD PTR [ebx+ebx*1+0x781d2f44]
  4129b8:	cs jmp 0x8e659482
  4129be:	lock push ebp
  4129c0:	loopne 0x4129ff
  4129c2:	stos   DWORD PTR es:[edi],eax
  4129c3:	inc    edx
  4129c4:	imul   BYTE PTR [ecx+edx*2]
  4129c7:	retf   0x5916
  4129ca:	push   ds
  4129cb:	les    ebp,FWORD PTR [edi]
  4129cd:	or     al,0x84
  4129cf:	mov    bh,0xae
  4129d1:	in     al,0x58
  4129d3:	shr    BYTE PTR [ebx],1
  4129d5:	mov    al,ds:0xd44b9bd9
  4129da:	imul   eax,DWORD PTR [ebp-0x70],0x31
  4129de:	jecxz  0x41297a
  4129e0:	inc    ebx
  4129e1:	call   0x88d:0xe56e0b6
  4129e8:	xor    ecx,DWORD PTR [edx-0x84013c9]
  4129ee:	in     al,0xd5
  4129f0:	fs jmp 0xc2cce1c1
  4129f6:	fcom   st(5)
  4129f8:	nop
  4129f9:	dec    esp
  4129fa:	cbw    
  4129fc:	imul   esp,DWORD PTR [edi+0x18],0xbb4e8e93
  412a03:	mov    dl,0xe7
  412a05:	dec    ebp
  412a06:	cmp    DWORD PTR [edi],0xcf473789
  412a0c:	dec    ecx
  412a0d:	(bad)  
  412a0e:	mov    WORD PTR [eax-0x5ea8c79f],es
  412a14:	popa   
  412a15:	sub    BYTE PTR [edx-0x33],dl
  412a18:	pop    eax
  412a19:	mov    ds:0xeddfa8a0,al
  412a1e:	jecxz  0x412a8e
  412a20:	jle    0x412a36
  412a22:	not    BYTE PTR [edi]
  412a24:	in     eax,0x13
  412a26:	lods   al,BYTE PTR ds:[esi]
  412a27:	mov    esp,DWORD PTR [eax+0x67]
  412a2a:	sahf   
  412a2b:	pop    esp
  412a2c:	fisttp QWORD PTR [esi-0x23175dc2]
  412a32:	cmp    ebx,DWORD PTR [esp+edi*1-0x10]
  412a36:	and    al,0xf9
  412a38:	xchg   ecx,eax
  412a39:	out    0x21,eax
  412a3b:	pushf  
  412a3c:	jge    0x412a38
  412a3e:	mov    edx,0x3b5aff13
  412a43:	adc    DWORD PTR [ebp+0x7c],edx
  412a46:	mov    eax,ds:0xb0672394
  412a4b:	pop    ss
  412a4c:	add    al,0xd5
  412a4e:	and    bl,dl
  412a50:	sar    BYTE PTR [ebp+0x6c],1
  412a53:	add    DWORD PTR [eax-0x4c],ebp
  412a56:	mov    dl,0x33
  412a58:	mov    ecx,0x176412c7
  412a5d:	fisubr DWORD PTR [edx-0x2d]
  412a60:	les    ebx,FWORD PTR [ecx]
  412a62:	sbb    edi,ebx
  412a64:	lods   al,BYTE PTR ds:[esi]
  412a65:	or     eax,0xc461ef7b
  412a6a:	mov    al,ds:0xb913ed83
  412a6f:	adc    eax,0xfcab460
  412a74:	jae    0x412a95
  412a76:	mov    ebp,0xdbd40c95
  412a7b:	aaa    
  412a7c:	adc    BYTE PTR [edi+0x17],ah
  412a7f:	cmp    eax,ebp
  412a81:	jnp    0x412a9d
  412a83:	enter  0xd4,0x3d
  412a87:	sub    ch,BYTE PTR [edx-0x12]
  412a8a:	jb     0x412a1e
  412a8c:	lds    ebp,FWORD PTR [edi]
  412a8e:	cli    
  412a8f:	sub    DWORD PTR [edx],0xffffff8d
  412a92:	push   eax
  412a93:	dec    ecx
  412a94:	mov    dh,0xcf
  412a96:	cmp    eax,0xc60877c7
  412a9b:	jp     0x412abf
  412a9d:	mov    ds:0xbeaa5d87,al
  412aa2:	jge    0x412af2
  412aa4:	mov    ds:0xa1c89f49,al
  412aa9:	aaa    
  412aaa:	mov    ch,0x18
  412aac:	sub    ebx,esp
  412aae:	retw   
  412ab0:	(bad)  
  412ab1:	shr    BYTE PTR [eax+0x6abedacb],cl
  412ab7:	mov    dh,0x7f
  412ab9:	fcmovnu st,st(5)
  412abb:	mov    dl,0xc0
  412abd:	pop    ebx
  412abe:	(bad)  
  412abf:	sbb    DWORD PTR [ebx+0x3373df1],ebp
  412ac5:	dec    esi
  412ac6:	fnstsw WORD PTR [ebx+0x2e]
  412ac9:	fnstenv [ebp+0x2a772826]
  412acf:	fadd   QWORD PTR [edi]
  412ad1:	icebp  
  412ad2:	shl    eax,cl
  412ad4:	push   edi
  412ad5:	inc    edx
  412ad6:	push   0xb9bf4cf0
  412adb:	clc    
  412adc:	jmp    0x412b09
  412ade:	imul   edi,DWORD PTR [edi-0x13ebaf64],0x9b6a2de9
  412ae8:	pop    ebp
  412ae9:	adc    BYTE PTR [eax],ah
  412aeb:	mov    DWORD PTR [eax-0x1d],ecx
  412aee:	loope  0x412ac6
  412af0:	lods   al,BYTE PTR ds:[esi]
  412af1:	sti    
  412af2:	push   ss
  412af3:	sub    esi,DWORD PTR [ebx+0x79]
  412af6:	daa    
  412af7:	xor    eax,0x7086e583
  412afc:	cld    
  412afd:	aam    0x6
  412aff:	mov    bh,0x53
  412b01:	pop    es
  412b02:	xchg   edi,eax
  412b03:	out    0x58,al
  412b05:	dec    edx
  412b06:	jb     0x412b24
  412b08:	mov    DWORD PTR [edi],edi
  412b0a:	jbe    0x412b76
  412b0c:	adc    al,0xb9
  412b0e:	push   edi
  412b0f:	adc    ebx,DWORD PTR [ecx-0x3255f568]
  412b15:	imul   edi,DWORD PTR [ebx+0xb],0x85ff471e
  412b1c:	mov    edx,DWORD PTR [ebp-0xc7ed2c4]
  412b22:	push   es
  412b23:	mov    edx,0xc033644
  412b28:	out    dx,ax
  412b2a:	sbb    al,bh
  412b2c:	jne    0x412ad5
  412b2e:	or     eax,0x68173bc7
  412b33:	push   cs
  412b34:	push   ds
  412b35:	ror    esp,0x97
  412b38:	cmp    edx,DWORD PTR [eax+ebx*8+0x2c3c2199]
  412b3f:	dec    edi
  412b40:	add    cl,BYTE PTR [ebx-0x73502dd0]
  412b46:	lock sbb al,0x32
  412b49:	add    eax,0xfb6bf119
  412b4e:	xchg   ecx,eax
  412b4f:	or     cl,BYTE PTR [ebx]
  412b51:	or     al,0x95
  412b53:	or     DWORD PTR [ebx-0x1a],0x9c1806c2
  412b5a:	xchg   DWORD PTR [ebx+0x2c],ebp
  412b5d:	push   ebp
  412b5e:	inc    ecx
  412b5f:	fst    QWORD PTR [ebp+0x7697e383]
  412b65:	mov    edx,DWORD PTR [ebp+0x3541400e]
  412b6b:	sbb    DWORD PTR [ebp+0x76],edi
  412b6e:	push   ds
  412b6f:	sbb    DWORD PTR [ebp-0x31],0xffffffc8
  412b73:	mov    DWORD PTR [ecx+0x53a876c7],ebx
  412b79:	daa    
  412b7a:	xor    ecx,DWORD PTR [ebp+0xa8f591b]
  412b80:	jp     0x412b3e
  412b82:	sub    ch,BYTE PTR [ecx+edx*4]
  412b85:	add    al,0x6c
  412b87:	push   ebx
  412b88:	mov    DWORD PTR [ecx+0x49ff6663],eax
  412b8e:	stos   DWORD PTR es:[edi],eax
  412b8f:	je     0x412bb0
  412b91:	mov    edx,0xcb5d9376
  412b96:	jnp    0x412bb3
  412b98:	sub    ecx,DWORD PTR [ebx]
  412b9a:	push   ebp
  412b9b:	mov    al,0xa5
  412b9d:	call   0x687c0479
  412ba2:	into   
  412ba3:	or     dh,BYTE PTR [ecx+eax*4-0x6dcabc5]
  412baa:	dec    esi
  412bab:	sbb    al,ch
  412bad:	xor    eax,0x9096cf0f
  412bb2:	push   0xc8f0ff95
  412bb7:	rol    BYTE PTR [edx],1
  412bb9:	fdiv   st(2),st
  412bbb:	and    esi,DWORD PTR [ebp-0x53b94f08]
  412bc1:	xchg   ecx,eax
  412bc2:	and    ebx,DWORD PTR [ebp+0x7ae3a973]
  412bc8:	sbb    bl,BYTE PTR [eax]
  412bca:	push   edi
  412bcb:	add    BYTE PTR [esi-0x7d19bda3],bl
  412bd1:	mov    bh,0x84
  412bd3:	dec    edi
  412bd4:	js     0x412c31
  412bd6:	cmp    al,0x70
  412bd8:	dec    ecx
  412bd9:	pop    ebx
  412bda:	pop    esi
  412bdb:	mov    eax,0x81a7da16
  412be0:	shl    BYTE PTR [edx],1
  412be2:	scas   eax,DWORD PTR es:[edi]
  412be3:	push   0x1b
  412be5:	mov    bl,0xca
  412be7:	add    dh,BYTE PTR [ebx-0x7d26f193]
  412bed:	pop    es
  412bee:	(bad)  
  412bef:	cmp    esi,esp
  412bf1:	loopne 0x412b8a
  412bf3:	mov    ds:0x5ba7ecf8,eax
  412bf8:	mov    bl,0x6e
  412bfa:	sub    DWORD PTR [ecx-0x17],ebx
  412bfd:	sub    ah,BYTE PTR ds:0x117cfdec
  412c03:	stos   DWORD PTR es:[edi],eax
  412c04:	(bad)  
  412c05:	and    edi,edx
  412c07:	cli    
  412c08:	xor    DWORD PTR [esi],esi
  412c0a:	lahf   
  412c0b:	enter  0x9a57,0x6e
  412c0f:	mov    bh,0xf1
  412c11:	mov    al,0xe2
  412c13:	call   0xf5a433a5
  412c18:	icebp  
  412c19:	jns    0x412c59
  412c1b:	mov    al,0xcc
  412c1d:	add    esp,DWORD PTR [ebx+ebp*8+0x5]
  412c21:	mov    edi,0xb74d2fa1
  412c26:	cmp    esi,DWORD PTR [eax-0x4b]
  412c29:	pop    ds
  412c2a:	jmp    0x2b2e:0x28b3e446
  412c31:	pop    eax
  412c32:	std    
  412c33:	jge    0x412bf5
  412c35:	push   cs
  412c36:	nop
  412c37:	retf   0x78cf
  412c3a:	outs   dx,DWORD PTR ds:[esi]
  412c3b:	ins    DWORD PTR es:[edi],dx
  412c3c:	or     esp,DWORD PTR [ecx-0xb4335f]
  412c42:	aaa    
  412c43:	(bad)  
  412c44:	jnp    0x412c0c
  412c46:	pop    esi
  412c47:	mov    al,0x39
  412c49:	mov    bh,0xd2
  412c4b:	pop    esi
  412c4c:	xchg   BYTE PTR [esi],bh
  412c4e:	push   eax
  412c4f:	sub    ch,BYTE PTR [edx]
  412c51:	ja     0x412c30
  412c53:	mov    DWORD PTR [esp+edi*8],esi
  412c56:	mov    al,ds:0x7179ef63
  412c5b:	fsub   QWORD PTR [ecx+ebx*4+0x1c1bd95d]
  412c62:	out    dx,eax
  412c63:	and    eax,0xc7e3293f
  412c68:	mov    edx,0x64e54a98
  412c6d:	jp     0x412bfa
  412c6f:	ret    
  412c70:	sbb    DWORD PTR [edi],ecx
  412c72:	and    esi,DWORD PTR [esi+0x322bdd90]
  412c78:	fsubr  QWORD PTR [edi+0xe]
  412c7b:	xchg   ecx,eax
  412c7c:	neg    BYTE PTR [edx-0x40488ae9]
  412c82:	mov    ds:0xac83c1d4,al
  412c87:	mov    edx,0xa52dd167
  412c8c:	xchg   ebp,edx
  412c8e:	out    dx,al
  412c8f:	stos   BYTE PTR es:[edi],al
  412c90:	xor    ch,BYTE PTR [edx]
  412c92:	loope  0x412cc0
  412c94:	mov    bh,0xbc
  412c96:	or     BYTE PTR [ebx-0x1d],ch
  412c99:	xchg   ecx,eax
  412c9a:	jo     0x412d0d
  412c9c:	dec    eax
  412c9d:	test   BYTE PTR [ebx+0x55ab64e6],bh
  412ca3:	xchg   BYTE PTR [edi+0x51],al
  412ca6:	adc    eax,0x1af5c65b
  412cab:	cmc    
  412cac:	fidivr DWORD PTR [edx+ebp*4]
  412caf:	push   ss
  412cb0:	push   ebp
  412cb1:	sub    ecx,DWORD PTR [esi+0x301ef99c]
  412cb7:	jmp    0x412cc6
  412cb9:	icebp  
  412cba:	iret   
  412cbb:	mov    ah,0xae
  412cbd:	aaa    
  412cbe:	lock rcl al,1
  412cc1:	pushf  
  412cc2:	mov    bh,0x36
  412cc4:	push   edi
  412cc5:	jmp    0x412c76
  412cc7:	sub    dh,bl
  412cc9:	stc    
  412cca:	ds jns 0x412d0d
  412ccd:	out    dx,eax
  412cce:	(bad)  
  412cd0:	cmp    DWORD PTR [esp+eax*8+0x7c6645ea],ebx
  412cd7:	in     al,dx
  412cd8:	imul   ebp,DWORD PTR [edi+0x299b715],0xffffffd4
  412cdf:	das    
  412ce0:	out    dx,eax
  412ce1:	xchg   ebx,eax
  412ce2:	aam    0x5e
  412ce4:	js     0x412d64
  412ce6:	pop    esi
  412ce7:	std    
  412ce8:	scas   eax,DWORD PTR es:[edi]
  412ce9:	std    
  412cea:	sub    al,0x7b
  412cec:	out    dx,eax
  412ced:	mov    bh,0xab
  412cef:	repz pop ebp
  412cf1:	aas    
  412cf2:	adc    al,0x4c
  412cf4:	aad    0x6e
  412cf6:	int3   
  412cf7:	fs jne 0x412d76
  412cfa:	cwde   
  412cfb:	jmp    0xde0365e9
  412d00:	add    al,0x78
  412d02:	out    dx,eax
  412d03:	jp     0x412d75
  412d05:	and    ebp,DWORD PTR [ecx-0x80]
  412d08:	push   edi
  412d09:	clc    
  412d0a:	ret    0x8c6a
  412d0d:	mov    ebx,?
  412d0f:	mov    ebx,DWORD PTR [ecx]
  412d11:	std    
  412d12:	pusha  
  412d13:	push   ds
  412d14:	rcl    DWORD PTR [ebx+eiz*8+0x56433deb],cl
  412d1b:	mov    edi,0xa1ea0f6a
  412d20:	cli    
  412d21:	cmc    
  412d22:	scas   al,BYTE PTR es:[edi]
  412d23:	dec    esp
  412d24:	mov    esi,0xb8db25e7
  412d29:	xchg   ecx,eax
  412d2a:	fnstsw WORD PTR [eax+0x6c82c13d]
  412d30:	loopne 0x412cf4
  412d32:	push   eax
  412d33:	es jp  0x412d97
  412d36:	ins    BYTE PTR es:[edi],dx
  412d37:	test   BYTE PTR [edx-0x4456fd98],0xcb
  412d3e:	rcl    DWORD PTR [ecx-0x4d],1
  412d41:	(bad)  
  412d42:	mov    esi,0xc5328b03
  412d47:	and    dl,BYTE PTR [ebx]
  412d49:	outs   dx,DWORD PTR ds:[esi]
  412d4a:	jno    0x412d1e
  412d4c:	icebp  
  412d4d:	cli    
  412d4e:	je     0x412d32
  412d50:	in     al,dx
  412d51:	pop    eax
  412d52:	sub    ebx,edi
  412d54:	in     eax,dx
  412d55:	adc    al,0xc0
  412d57:	push   edx
  412d58:	mov    bl,0x22
  412d5a:	sbb    eax,0x367ea19c
  412d5f:	sub    DWORD PTR [ecx+0x6d286142],edi
  412d65:	cmp    ah,BYTE PTR [edi-0x2fdbc29a]
  412d6b:	xchg   BYTE PTR [edx-0x4b],bh
  412d6e:	mov    edx,es
  412d70:	in     al,0x4b
  412d72:	push   edi
  412d73:	mov    ds,WORD PTR [edx]
  412d75:	or     BYTE PTR [esi-0x57],ah
  412d78:	jle    0x412d34
  412d7a:	je     0x412d01
  412d7c:	cli    
  412d7d:	gs aam 0x49
  412d80:	inc    ebp
  412d81:	jl     0x412d3f
  412d83:	das    
  412d84:	pop    es
  412d85:	dec    eax
  412d86:	(bad)  
  412d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d88:	or     eax,0x7be67295
  412d8d:	or     BYTE PTR ss:[eax-0x293622a6],al
  412d94:	push   ecx
  412d95:	test   eax,ebp
  412d97:	pop    esi
  412d98:	and    cl,BYTE PTR [ebp-0x6f]
  412d9b:	test   al,0x8c
  412d9d:	xchg   DWORD PTR [eax],ebx
  412d9f:	mov    ah,0x73
  412da1:	adc    esi,esi
  412da3:	jae    0x412d55
  412da5:	(bad)  [eax]
  412da7:	add    edx,DWORD PTR [ecx+0x1d3fed01]
  412dad:	fild   QWORD PTR [ebx-0x1b]
  412db0:	out    0x2,al
  412db2:	int3   
  412db3:	and    BYTE PTR es:[ecx-0x534d07b2],bl
  412dba:	mov    edi,0xb8cf5fff
  412dbf:	bound  esp,QWORD PTR [esi]
  412dc1:	jo     0x412d9e
  412dc3:	sbb    BYTE PTR [edx-0x53a36fc1],cl
  412dc9:	cs (bad) 
  412dcc:	inc    ebp
  412dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dce:	mov    DWORD PTR [esp+ebp*1+0x28],eax
  412dd2:	cwde   
  412dd3:	push   ds
  412dd4:	sub    edx,ebx
  412dd6:	and    BYTE PTR [edi+0x5b703c6d],cl
  412ddc:	pop    ss
  412ddd:	jge    0x412d6a
  412ddf:	and    al,0x65
  412de1:	push   0x36
  412de3:	pop    ss
  412de4:	neg    BYTE PTR [ecx+ebp*1]
  412de7:	cmp    DWORD PTR [eax-0x7c],ebx
  412dea:	xor    dl,BYTE PTR [esi]
  412dec:	pop    ecx
  412ded:	push   ebp
  412dee:	or     bl,BYTE PTR [ebp-0xf33450c]
  412df4:	clc    
  412df5:	mov    bl,ch
  412df7:	sbb    al,0xbd
  412df9:	push   esi
  412dfa:	inc    esp
  412dfb:	rol    al,cl
  412dfd:	xchg   esi,eax
  412dfe:	rcr    dl,cl
  412e00:	bound  esi,QWORD PTR [edx]
  412e02:	imul   DWORD PTR [ebx-0x46]
  412e05:	push   es
  412e06:	in     eax,0x25
  412e08:	into   
  412e09:	mov    ebp,0x8fac966a
  412e0e:	popa   
  412e0f:	in     eax,0xa5
  412e11:	lods   al,BYTE PTR ds:[esi]
  412e12:	sub    al,0x6a
  412e14:	mov    edi,0x9bf02e20
  412e19:	mov    esp,0x6932470f
  412e1e:	std    
  412e1f:	dec    ebx
  412e20:	push   0x6f
  412e22:	mov    ds:0x9e5a1d69,al
  412e27:	cmp    DWORD PTR [ebp+0x13],esp
  412e2a:	cmp    BYTE PTR [edx],al
  412e2c:	xor    DWORD PTR [ebx],ebp
  412e2e:	jle    0x412e8f
  412e30:	mov    cl,0x5f
  412e32:	adc    ebx,DWORD PTR [esi+edx*4-0x35]
  412e36:	pop    ebx
  412e37:	sub    al,BYTE PTR [edi+0x6b07b9fa]
  412e3d:	mov    DWORD PTR [ebx-0x61],esp
  412e40:	shl    BYTE PTR [ebp-0xa],0xfe
  412e44:	inc    edx
  412e45:	cs jno 0x412ec5
  412e48:	xchg   edi,eax
  412e49:	xchg   edx,eax
  412e4a:	scas   eax,DWORD PTR es:[edi]
  412e4b:	inc    edi
  412e4c:	push   ds
  412e4d:	mov    bl,0xfd
  412e4f:	fistp  WORD PTR [ebx+0xc2cb061]
  412e55:	sbb    eax,0x3e069535
  412e5a:	inc    eax
  412e5b:	test   DWORD PTR [ecx-0x688e108b],0xee28154d
  412e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e66:	jmp    0x985dbac5
  412e6b:	cmp    eax,0xf708077f
  412e70:	cmp    eax,0x52842496
  412e75:	xchg   ebp,eax
  412e76:	mov    eax,ds:0x9e34b607
  412e7b:	adc    eax,0xa2e14c48
  412e80:	fwait
  412e81:	push   es
  412e82:	sub    bh,BYTE PTR [edx+0x1b1a6771]
  412e88:	test   DWORD PTR [ebp-0x15f60870],ebx
  412e8e:	int    0x18
  412e90:	and    cl,BYTE PTR [edi-0x7e]
  412e93:	test   al,0x90
  412e95:	xor    eax,0x814deab5
  412e9a:	xchg   ebp,eax
  412e9b:	gs xchg ebp,eax
  412e9d:	sbb    bl,bh
  412e9f:	adc    esi,DWORD PTR [esi]
  412ea1:	pop    esp
  412ea2:	inc    esp
  412ea3:	fs fwait
  412ea5:	ror    BYTE PTR [edx-0x29],cl
  412ea8:	or     DWORD PTR [ecx],edi
  412eaa:	or     ecx,esp
  412eac:	xchg   ecx,eax
  412ead:	mov    ch,0xa7
  412eaf:	fldcw  WORD PTR [esi]
  412eb1:	mov    al,ds:0xca51e32d
  412eb6:	pusha  
  412eb7:	xchg   edi,eax
  412eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eb9:	retf   0x1571
  412ebc:	ds int 0xa3
  412ebf:	loopne 0x412e8d
  412ec1:	(bad)  [ecx]
  412ec3:	hlt    
  412ec4:	fs cli 
  412ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec7:	add    BYTE PTR [esi-0x24],bh
  412eca:	nop
  412ecb:	or     bh,BYTE PTR [edi+0xe]
  412ece:	mov    ch,0xf9
  412ed0:	xchg   esi,eax
  412ed1:	test   esi,edi
  412ed3:	leave  
  412ed4:	fldl2e 
  412ed6:	and    eax,0xce314498
  412edb:	xchg   edi,eax
  412edc:	cmp    ch,BYTE PTR [ebx]
  412ede:	les    esp,FWORD PTR [esi+0x19]
  412ee1:	imul   esi,DWORD PTR [esi+0x64a3d162],0xffffffb3
  412ee8:	lods   eax,DWORD PTR ds:[esi]
  412ee9:	test   eax,0x2ca0e395
  412eee:	rcl    BYTE PTR [ecx],1
  412ef0:	arpl   WORD PTR [edx-0x35fac838],bx
  412ef6:	cmp    eax,0x199181e6
  412efb:	aaa    
  412efc:	out    0x84,eax
  412efe:	cli    
  412eff:	inc    edx
  412f00:	add    edx,ebp
  412f02:	push   ebx
  412f03:	retf   
  412f04:	mov    esi,esi
  412f06:	and    cl,0x7d
  412f09:	or     al,0xba
  412f0b:	dec    esi
  412f0c:	lea    edi,[edi-0x6d]
  412f0f:	sbb    ebp,esp
  412f11:	shl    esi,1
  412f13:	xor    esp,esp
  412f15:	loop   0x412ecc
  412f17:	mov    ah,0x67
  412f19:	ds pop edx
  412f1b:	inc    ebx
  412f1c:	clc    
  412f1d:	pop    ss
  412f1e:	mov    al,BYTE PTR [ebp-0x6c]
  412f21:	loope  0x412f19
  412f23:	call   0x12d7:0x9b59078c
  412f2a:	jo     0x412eb8
  412f2c:	test   al,0xa6
  412f2e:	dec    esi
  412f2f:	pop    esi
  412f30:	div    BYTE PTR [edi+0xe]
  412f33:	adc    esp,esp
  412f35:	sbb    al,0x5a
  412f37:	gs (bad) 
  412f39:	cmp    BYTE PTR [esi],ah
  412f3b:	ret    
  412f3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f3d:	add    ecx,DWORD PTR [ecx-0x5e276fc8]
  412f43:	or     ecx,edi
  412f45:	in     al,dx
  412f46:	and    eax,0xe34987ac
  412f4b:	test   DWORD PTR [ebx-0x6b],eax
  412f4e:	or     eax,0x2ee9180d
  412f53:	test   al,0x84
  412f55:	shr    BYTE PTR [ebp+eax*1+0x75c98fe],0xd0
  412f5d:	div    bl
  412f5f:	and    esp,DWORD PTR [eax-0x20d59467]
  412f65:	or     eax,0x11991a77
  412f6a:	xchg   ebp,eax
  412f6b:	dec    esi
  412f6c:	jg     0x412f23
  412f6e:	mov    eax,fs:0xe361bb28
  412f74:	adc    DWORD PTR [edx-0xe],eax
  412f77:	xchg   BYTE PTR [edi+0x3b5ea6fc],bl
  412f7d:	nop
  412f7e:	sbb    edx,ebx
  412f80:	stos   BYTE PTR es:[edi],al
  412f81:	mov    WORD PTR [ebx+0x6c],?
  412f84:	jl     0x412f21
  412f86:	xchg   ebp,eax
  412f87:	xor    DWORD PTR [ecx-0x4f],ebp
  412f8a:	jecxz  0x412f5b
  412f8c:	popa   
  412f8d:	sub    eax,0xefaffc68
  412f92:	outs   dx,BYTE PTR ds:[esi]
  412f93:	iret   
  412f94:	fcom   DWORD PTR [edi-0x76ad8fde]
  412f9a:	add    BYTE PTR [edi],dh
  412f9c:	fnstsw WORD PTR [edx+eax*2]
  412f9f:	mul    BYTE PTR [ebp+0x194c4bad]
  412fa5:	push   0x1ef93b4c
  412faa:	das    
  412fab:	mov    ebx,0xfb48c5f9
  412fb0:	pop    esp
  412fb1:	daa    
  412fb2:	pop    ecx
  412fb3:	cmp    bh,BYTE PTR [eax]
  412fb5:	xor    BYTE PTR [edi+0x31],ch
  412fb8:	adc    eax,0xa33a6091
  412fbd:	fldcw  WORD PTR [ebx+0x75]
  412fc0:	xchg   edx,eax
  412fc1:	scas   eax,DWORD PTR es:[edi]
  412fc2:	ror    DWORD PTR [esi+ecx*1+0x12],cl
  412fc6:	popa   
  412fc7:	push   esi
  412fc9:	mov    esp,0x31409b0e
  412fce:	mov    al,0x1e
  412fd0:	and    al,0x51
  412fd2:	je     0x412ff2
  412fd4:	inc    ebp
  412fd5:	(bad)  
  412fd6:	cld    
  412fd7:	adc    DWORD PTR [eax],ebp
  412fd9:	jne    0x412ff5
  412fdb:	push   ss
  412fdc:	mov    ebx,0x3f5e3069
  412fe1:	lods   eax,DWORD PTR ds:[esi]
  412fe2:	mov    ah,BYTE PTR [ebx]
  412fe4:	leave  
  412fe5:	adc    BYTE PTR [edi+edx*1],bl
  412fe8:	dec    ecx
  412fe9:	mov    edx,0x20337f3a
  412fee:	dec    eax
  412fef:	cmp    ebx,edx
  412ff1:	shr    ebx,0xe8
  412ff4:	std    
  412ff5:	mov    eax,ds:0xf0f471b0
  412ffa:	fs pusha 
  412ffc:	inc    edi
  412ffd:	cmp    BYTE PTR [ecx-0x77],ah
  413000:	clc    
  413001:	les    eax,FWORD PTR [edx+0x696b7690]
  413007:	xchg   ebx,eax
  413008:	mov    eax,0x603ff690
  41300d:	push   esp
  41300e:	dec    ecx
  41300f:	dec    esi
  413010:	sti    
  413011:	in     al,0x9a
  413013:	xor    ecx,DWORD PTR [eax+0x12]
  413016:	xor    dl,al
  413018:	mov    DWORD PTR [edi+0x4d],esp
  41301b:	je     0x412fde
  41301d:	icebp  
  41301e:	xor    dl,BYTE PTR [esi]
  413020:	dec    esi
  413021:	lahf   
  413022:	pop    esi
  413023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413024:	jb     0x413002
  413026:	xchg   ecx,eax
  413027:	pop    eax
  413028:	ins    BYTE PTR es:[edi],dx
  413029:	jle    0x413013
  41302b:	scas   eax,DWORD PTR es:[edi]
  41302c:	jle    0x413039
  41302e:	test   eax,0xceb3e59c
  413033:	mov    eax,ds:0x3444d7b4
  413038:	pop    ss
  413039:	xchg   ebx,eax
  41303a:	lods   eax,DWORD PTR ds:[esi]
  41303b:	or     cl,BYTE PTR [esi+0x6a6f5910]
  413041:	mov    al,ds:0x4210e2b9
  413046:	dec    ebx
  413047:	inc    edi
  413048:	iret   
  413049:	xor    eax,0x1267d41e
  41304e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304f:	xor    DWORD PTR [eiz*2+0x5bb92f0],ecx
  413056:	sar    BYTE PTR [edi-0x13],0xe6
  41305a:	adc    dl,BYTE PTR [eax-0x27]
  41305d:	push   0x82bf38a
  413062:	mov    dh,0x55
  413064:	add    DWORD PTR [edx+0x4a],esi
  413067:	lods   al,BYTE PTR ds:[esi]
  413068:	(bad)  
  413069:	stc    
  41306a:	in     al,dx
  41306b:	mov    edi,0x2410f1f6
  413070:	int    0x5b
  413072:	jnp    0x413095
  413074:	inc    edx
  413075:	fsubp  st(1),st
  413077:	rcr    DWORD PTR [edx+esi*8+0x26151cc1],1
  41307e:	popf   
  41307f:	add    BYTE PTR [ecx-0x78b66696],dl
  413085:	mov    fs:0xb9901c11,eax
  41308b:	xor    BYTE PTR [esp+eax*8-0x31c2e477],bh
  413092:	xor    edi,0xffffffbc
  413095:	push   edx
  413096:	mov    ecx,DWORD PTR [ecx+edi*4+0x7d]
  41309a:	push   ds
  41309b:	pop    edx
  41309c:	jecxz  0x4130e0
  41309e:	(bad)  
  4130a0:	ss cmp eax,0xf87575a9
  4130a6:	cmp    al,0xf3
  4130a8:	pop    es
  4130a9:	ss mov bh,0x5f
  4130ad:	lahf   
  4130ae:	sbb    ebp,DWORD PTR [edx+edi*1+0x1f]
  4130b2:	push   edx
  4130b3:	es cmp al,0x2a
  4130b6:	or     bl,BYTE PTR [ebx+0x72f09c63]
  4130bc:	or     bh,BYTE PTR [ebp+0x5e]
  4130bf:	sub    esp,esi
  4130c1:	adc    edx,DWORD PTR [ecx]
  4130c3:	mov    ebp,esi
  4130c5:	jp     0x413118
  4130c7:	push   0x4f
  4130c9:	inc    esi
  4130ca:	ds xchg esp,eax
  4130cc:	mov    esp,0x5dadb7c7
  4130d1:	test   ah,0xaa
  4130d4:	pop    ebx
  4130d5:	pop    ss
  4130d6:	leave  
  4130d7:	pop    ds
  4130d8:	fisttp QWORD PTR [edi-0xb72ae11]
  4130de:	adc    al,BYTE PTR [esp+ecx*8-0x14]
  4130e2:	lds    ebx,FWORD PTR [ebx+0x2f]
  4130e5:	push   eax
  4130e6:	stos   BYTE PTR es:[edi],al
  4130e7:	or     eax,0x42a7441f
  4130ec:	mov    WORD PTR [ebx-0x2b8cdeee],fs
  4130f2:	jle    0x413134
  4130f4:	push   es
  4130f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130f6:	daa    
  4130f7:	aas    
  4130f8:	push   0xffffffa9
  4130fa:	push   0x2d
  4130fc:	xchg   DWORD PTR [edx],esp
  4130fe:	or     BYTE PTR [edi],ah
  413100:	mov    DWORD PTR [ebp-0x48afe220],edx
  413106:	cmp    esp,edx
  413108:	mov    ah,0xf6
  41310a:	shl    DWORD PTR [eax-0x6b72235a],0xaf
  413111:	sbb    esp,0xfffffff5
  413114:	out    dx,eax
  413115:	adc    esi,ebp
  413117:	pop    esi
  413118:	push   0x19
  41311a:	iret   
  41311b:	ret    0x11f
  41311e:	cmp    BYTE PTR [ecx+eiz*2+0xb6197c8],ah
  413125:	das    
  413126:	call   DWORD PTR [edx+0x6b0c298d]
  41312c:	inc    ebx
  41312d:	push   ds
  41312e:	dec    BYTE PTR [esi-0x2ab7031a]
  413134:	pop    edx
  413135:	shr    edx,0x43
  413138:	jp     0x413154
  41313a:	daa    
  41313b:	adc    eax,0x833fd650
  413140:	xchg   ecx,eax
  413141:	pop    ds
  413142:	fistp  DWORD PTR [edi-0x31f8ce53]
  413148:	icebp  
  413149:	jge    0x413199
  41314b:	jg     0x41313d
  41314d:	dec    esp
  41314e:	(bad)  
  413150:	and    esp,DWORD PTR [ebx-0x6d]
  413153:	ret    0xdfdf
  413156:	and    al,0x40
  413158:	int3   
  413159:	ins    BYTE PTR es:[edi],dx
  41315a:	cmp    ah,ch
  41315c:	sbb    ah,BYTE PTR [eax+ebp*1-0x6f]
  413160:	xchg   ebx,eax
  413161:	sti    
  413162:	inc    esi
  413163:	pop    eax
  413164:	shl    dl,0x5b
  413167:	cmp    ebp,ebx
  413169:	dec    edx
  41316a:	clc    
  41316b:	ds or  al,0x54
  41316e:	bts    edx,esi
  413171:	jle    0x413199
  413173:	mov    esi,0xb0810ea2
  413178:	dec    ebx
  413179:	jge    0x413110
  41317b:	mov    ebp,0x5c45fbd6
  413180:	aad    0x7f
  413182:	cli    
  413183:	aaa    
  413184:	sbb    bh,0xaa
  413187:	daa    
  413188:	(bad)  
  413189:	sub    BYTE PTR [ebp+ebx*4+0x649d0e3c],ch
  413190:	je     0x413202
  413192:	cwde   
  413193:	cmp    ah,dl
  413195:	pushf  
  413196:	stos   BYTE PTR es:[edi],al
  413197:	add    DWORD PTR [edx],ebp
  413199:	pop    esp
  41319a:	test   BYTE PTR [esi+0x61],ch
  41319d:	push   esp
  41319e:	jo     0x413152
  4131a0:	loop   0x413200
  4131a2:	out    0x97,eax
  4131a4:	lock stos DWORD PTR es:[edi],eax
  4131a6:	pop    es
  4131a7:	xchg   esp,eax
  4131a8:	daa    
  4131a9:	cmp    DWORD PTR [ebx+0x7],edx
  4131ac:	add    al,0xc0
  4131ae:	pop    eax
  4131af:	(bad)  
  4131b0:	cmp    al,0x47
  4131b2:	loop   0x4131a7
  4131b4:	cmp    al,BYTE PTR [eax-0x64]
  4131b7:	inc    ebx
  4131b8:	lods   al,BYTE PTR ds:[esi]
  4131b9:	loop   0x413217
  4131bb:	and    ch,BYTE PTR [edx+0x18]
  4131be:	fwait
  4131bf:	push   esp
  4131c0:	inc    ebx
  4131c1:	dec    edx
  4131c2:	fisttp DWORD PTR [edx+0x10]
  4131c5:	hlt    
  4131c6:	xchg   ebx,eax
  4131c7:	mov    BYTE PTR [esi],cl
  4131c9:	outs   dx,BYTE PTR es:[esi]
  4131cb:	shr    DWORD PTR [esi+0x41],1
  4131ce:	into   
  4131cf:	in     eax,0x22
  4131d1:	sub    al,0x6
  4131d3:	scas   al,BYTE PTR es:[edi]
  4131d4:	xchg   ebp,eax
  4131d5:	std    
  4131d6:	ja     0x4131f8
  4131d8:	rcl    BYTE PTR [edx],1
  4131da:	mov    al,0xab
  4131dc:	or     DWORD PTR [ecx-0x6f4af427],ebx
  4131e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e3:	mov    bl,0x64
  4131e5:	out    0xb3,eax
  4131e7:	push   ds
  4131e8:	adc    DWORD PTR [ecx+0x41],esi
  4131eb:	pop    ebp
  4131ec:	mov    ss,esp
  4131ee:	mov    esp,0x280c590d
  4131f3:	fidiv  WORD PTR [eax+eiz*1+0x5945d90]
  4131fa:	adc    ecx,edi
  4131fc:	jl     0x4131c4
  4131fe:	test   BYTE PTR [ebp-0x4d],al
  413201:	(bad)  [ebp+ebp*8-0x133c0d78]
  413208:	xor    ch,BYTE PTR [ebx+ecx*1+0x6b]
  41320c:	not    DWORD PTR [edi-0x18]
  41320f:	and    al,0x9d
  413211:	outs   dx,DWORD PTR ds:[esi]
  413212:	or     eax,0x2bae4475
  413217:	popa   
  413218:	int3   
  413219:	mov    bl,0xca
  41321b:	sbb    ebp,esp
  41321d:	ret    
  41321e:	pop    ss
  41321f:	pop    eax
  413220:	pushf  
  413221:	in     al,0x83
  413223:	(bad)  
  413224:	fxch   st(0)
  413226:	mov    bh,0x2a
  413228:	mov    al,ds:0x6f50cb20
  41322d:	xchg   ebp,eax
  41322e:	scas   al,BYTE PTR es:[edi]
  41322f:	lds    esp,FWORD PTR [ebp-0x1bb124bb]
  413235:	xlat   BYTE PTR ds:[ebx]
  413236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413237:	not    cl
  413239:	inc    esi
  41323a:	sub    DWORD PTR [edi],ecx
  41323c:	sub    DWORD PTR [ecx+0x6e],eax
  41323f:	sub    ebp,eax
  413241:	inc    esi
  413242:	xchg   ebx,eax
  413243:	pushf  
  413244:	adc    eax,0xcded8556
  413249:	lods   eax,DWORD PTR ds:[esi]
  41324a:	stos   DWORD PTR es:[edi],eax
  41324b:	sbb    al,0x1d
  41324d:	test   edx,esi
  41324f:	ds js  0x4131e0
  413252:	or     al,BYTE PTR [eax-0x75c7a55b]
  413258:	sbb    bh,cl
  41325a:	into   
  41325b:	jmp    0x529d404c
  413260:	(bad)  
  413261:	ss mov al,0x1
  413264:	cli    
  413265:	test   ah,ah
  413267:	sbb    bh,BYTE PTR [ecx]
  413269:	xchg   esp,eax
  41326a:	jns    0x413229
  41326c:	xor    esi,DWORD PTR [eax+0x6520d871]
  413272:	lods   al,BYTE PTR ds:[esi]
  413273:	in     al,0x1c
  413275:	out    0x43,eax
  413277:	xchg   edx,eax
  413278:	into   
  413279:	fdivr  st,st(3)
  41327b:	adc    eax,0xb7cdb7ff
  413280:	fnstenv [eax-0x2cce4d97]
  413286:	test   al,bl
  413288:	pop    es
  413289:	mov    al,0xde
  41328b:	aaa    
  41328c:	cdq    
  41328d:	adc    al,0x4
  41328f:	mov    esp,0xaf1a6d48
  413294:	dec    eax
  413295:	stc    
  413296:	sub    al,0x75
  413298:	xchg   esp,esp
  41329a:	xchg   BYTE PTR [eax+0x19],bl
  41329d:	inc    ebx
  41329e:	jnp    0x4132d4
  4132a0:	stos   DWORD PTR es:[edi],eax
  4132a1:	jp     0x413253
  4132a3:	dec    ebx
  4132a4:	loope  0x41323f
  4132a6:	scas   eax,DWORD PTR es:[edi]
  4132a7:	out    dx,eax
  4132a8:	xor    al,0xd8
  4132aa:	mov    BYTE PTR [edi+0x62],al
  4132ad:	bound  esp,QWORD PTR [esi+0x16]
  4132b0:	sub    BYTE PTR [edi-0x484d5255],0x14
  4132b7:	retf   
  4132b8:	pop    eax
  4132b9:	adc    eax,0xd182635a
  4132be:	sub    eax,0xd23ad14f
  4132c3:	inc    ebp
  4132c4:	jl     0x413260
  4132c6:	lahf   
  4132c7:	icebp  
  4132c8:	dec    ebp
  4132c9:	lea    esp,ds:0x44e78c00
  4132cf:	push   0x37
  4132d1:	ds stos BYTE PTR es:[edi],al
  4132d3:	ret    0xf66b
  4132d6:	pop    ds
  4132d7:	loopne 0x4132df
  4132d9:	fcomp  DWORD PTR [edi-0x48]
  4132dc:	lds    esp,FWORD PTR [edi-0x3a]
  4132df:	fwait
  4132e0:	loope  0x41330f
  4132e2:	add    ebp,DWORD PTR [esp+eiz*2-0x7221c7bd]
  4132e9:	fs stos DWORD PTR es:[edi],eax
  4132eb:	cli    
  4132ec:	fld    QWORD PTR [edx+0x62]
  4132ef:	and    BYTE PTR cs:[ebx-0x5a],0x11
  4132f4:	sbb    al,0x98
  4132f6:	ret    0x54c1
  4132f9:	mov    ebx,0x5461be13
  4132fe:	dec    esp
  4132ff:	jle    0x41334f
  413301:	sub    BYTE PTR [esi-0x316a447b],bh
  413307:	and    eax,0xd68fe87e
  41330c:	jle    0x413313
  41330e:	push   es
  41330f:	inc    ebx
  413310:	add    dl,bh
  413312:	mov    ebx,0x134fc54e
  413317:	xchg   edx,eax
  413318:	sti    
  413319:	sar    DWORD PTR [ebx-0x3],1
  41331c:	cmp    BYTE PTR [ebp+0x73],bh
  41331f:	jmp    DWORD PTR [eax]
  413321:	jo     0x413381
  413323:	jae    0x4132d4
  413325:	jbe    0x4132da
  413327:	push   ebp
  413328:	in     eax,0x2a
  41332a:	(bad)  
  41332b:	cmp    DWORD PTR [eax+0x78],ebp
  41332e:	sub    DWORD PTR [edx+ebp*1+0x2d5fb17c],edi
  413335:	or     DWORD PTR [esi+0x76],0xffffffb2
  413339:	inc    DWORD PTR [edx+edi*4]
  41333c:	sub    al,0x93
  41333e:	lds    ebx,FWORD PTR [eax+0x39]
  413341:	xchg   ebx,eax
  413342:	dec    edx
  413343:	jno    0x413302
  413345:	jae    0x4133c4
  413347:	mov    ch,0xb3
  413349:	inc    eax
  41334a:	xor    DWORD PTR [eax],ebx
  41334c:	ds pop ds
  41334e:	mov    ch,BYTE PTR [esi]
  413350:	cli    
  413351:	cld    
  413352:	cmc    
  413353:	hlt    
  413354:	mov    ebp,0xccbfdd45
  413359:	xor    al,0x24
  41335b:	xabort 0x31
  41335e:	out    dx,al
  41335f:	adc    al,0x65
  413361:	sbb    BYTE PTR [edx-0x7cea9d01],0x81
  413368:	arpl   WORD PTR [edi+0x4ef3dfce],ax
  41336e:	and    ch,dh
  413370:	sbb    ecx,edi
  413372:	cmc    
  413373:	push   es
  413374:	dec    ecx
  413375:	retf   0x82ca
  413378:	push   ebx
  413379:	lahf   
  41337a:	fidivr WORD PTR [edx]
  41337c:	dec    ebp
  41337d:	mov    bl,dl
  41337f:	mov    DWORD PTR [edi+0x66],ebx
  413382:	ret    
  413383:	in     al,0xbc
  413385:	pop    ebp
  413386:	xchg   ecx,eax
  413387:	push   edi
  413388:	push   edx
  413389:	push   es
  41338a:	fdiv   st(0),st
  41338c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41338d:	jecxz  0x413406
  41338f:	(bad)  [edi+ebp*4]
  413392:	dec    eax
  413393:	sbb    esi,DWORD PTR [edx-0x78]
  413396:	idiv   ah
  413398:	mov    eax,0x3a2ed48c
  41339d:	dec    esp
  41339e:	and    BYTE PTR [esi-0x4c],dl
  4133a1:	je     0x41332d
  4133a3:	pop    ecx
  4133a4:	lea    edx,[edi+edi*8-0x5ec3ba6e]
  4133ab:	jg     0x413389
  4133ad:	jecxz  0x413354
  4133af:	add    DWORD PTR [edx-0x57],edi
  4133b2:	or     esp,DWORD PTR [ebx+0x77]
  4133b5:	ret    0xea09
  4133b8:	mov    dh,0xd4
  4133ba:	dec    eax
  4133bb:	and    DWORD PTR [ecx],0xffffffcd
  4133be:	fisub  WORD PTR [edi-0x3fac8182]
  4133c4:	xchg   ebx,eax
  4133c5:	(bad)  
  4133c6:	pusha  
  4133c7:	jg     0x413436
  4133c9:	dec    ebx
  4133ca:	inc    esp
  4133cb:	push   edx
  4133cc:	jecxz  0x4133d8
  4133ce:	es icebp 
  4133d0:	add    bh,BYTE PTR [ebp+0x1a965763]
  4133d6:	jb     0x4133d9
  4133d8:	ja     0x413440
  4133da:	addr16 jbe 0x413393
  4133dd:	xchg   ebp,eax
  4133de:	or     DWORD PTR [ecx],edx
  4133e0:	pop    eax
  4133e1:	cdq    
  4133e2:	iret   
  4133e3:	stos   BYTE PTR es:[edi],al
  4133e4:	int    0x51
  4133e6:	mov    bh,0x31
  4133e8:	clc    
  4133e9:	mov    eax,DWORD PTR [edx+0x55b0c892]
  4133ef:	addr16 ja 0x4133ec
  4133f2:	aas    
  4133f3:	scas   al,BYTE PTR es:[edi]
  4133f4:	rcr    dl,cl
  4133f6:	or     esi,DWORD PTR [ebx-0x76]
  4133f9:	neg    DWORD PTR [edi+0x62]
  4133fc:	jl     0x4133a1
  4133fe:	and    eax,0x277a41cc
  413403:	mov    ch,0xdd
  413405:	es jle 0x41342a
  413408:	pop    ebx
  413409:	data16 jns 0x413409
  41340c:	push   eax
  41340d:	clc    
  41340e:	inc    DWORD PTR [edx+0x60e0623d]
  413414:	cdq    
  413415:	in     eax,0x4b
  413417:	stos   DWORD PTR es:[edi],eax
  413418:	fwait
  413419:	push   ds
  41341a:	push   ss
  41341b:	(bad)  
  41341c:	jge    0x4133e9
  41341e:	call   0x511992ca
  413423:	mov    ss,WORD PTR [eax-0x69b669bf]
  413429:	daa    
  41342a:	push   esp
  41342b:	test   eax,0xca7b019a
  413430:	outs   dx,DWORD PTR ds:[esi]
  413431:	dec    eax
  413432:	pop    esp
  413433:	sub    al,0x5f
  413435:	mov    ah,0x83
  413437:	fild   WORD PTR [ebx+ebx*4]
  41343a:	push   0x181aecad
  41343f:	in     eax,0xbd
  413441:	adc    al,0x48
  413443:	out    dx,al
  413444:	mov    ch,0x73
  413446:	mov    bl,0xf8
  413448:	and    al,BYTE PTR [edx+0x58]
  41344b:	mov    eax,0xe63d235e
  413450:	adc    ch,dh
  413452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413453:	sbb    eax,0xf0ab7254
  413458:	(bad)  
  41345a:	or     al,0x35
  41345c:	pop    ebp
  41345d:	jle    0x4133ed
  41345f:	es retf 
  413461:	sub    esp,DWORD PTR [esi-0x69]
  413464:	cmc    
  413465:	shr    DWORD PTR [edi+0x33f08f06],1
  41346b:	mov    BYTE PTR [ecx+0x538682d4],bl
  413471:	xchg   edi,eax
  413472:	xor    al,0x4b
  413474:	cs push ebp
  413476:	repz adc dh,ah
  413479:	fidivr WORD PTR [ebx+eax*8]
  41347c:	cmp    BYTE PTR [esi],dh
  41347e:	out    0x81,eax
  413480:	push   esi
  413481:	mov    cl,dl
  413483:	outs   dx,BYTE PTR ds:[esi]
  413484:	ret    0x2271
  413487:	mov    ds,WORD PTR [ecx+0x1]
  41348a:	lods   al,BYTE PTR ds:[esi]
  41348b:	int    0xbe
  41348d:	add    al,BYTE PTR [edi-0x19]
  413490:	addr16 mov eax,ds:0x7379
  413494:	add    BYTE PTR [edi],dh
  413496:	mov    edi,0xc17909f6
  41349b:	addr16 jb 0x4134b1
  41349e:	lods   eax,DWORD PTR ds:[esi]
  41349f:	popf   
  4134a0:	(bad)  
  4134a1:	cli    
  4134a2:	and    edx,DWORD PTR [ecx+0x6b]
  4134a5:	scas   eax,DWORD PTR es:[edi]
  4134a6:	jle    0x4134d4
  4134a8:	cli    
  4134a9:	or     BYTE PTR [ebx-0x36],al
  4134ac:	rcl    BYTE PTR [ebx-0x4d],0x2
  4134b0:	lods   al,BYTE PTR ds:[esi]
  4134b1:	dec    eax
  4134b2:	cwde   
  4134b3:	cmp    BYTE PTR [ebx],cl
  4134b5:	jns    0x413449
  4134b7:	fldcw  WORD PTR [eax-0x3c]
  4134ba:	dec    esp
  4134bb:	mov    al,0xb6
  4134bd:	ret    
  4134be:	ja     0x41351b
  4134c0:	add    al,0xb5
  4134c2:	sbb    ecx,eax
  4134c4:	xchg   ebp,eax
  4134c5:	xor    al,BYTE PTR [edi+ebp*8-0x1691761c]
  4134cc:	in     eax,dx
  4134cd:	clc    
  4134ce:	and    edi,DWORD PTR [ebx-0xe6edcab]
  4134d4:	adc    dl,BYTE PTR [eax+ecx*2+0x18]
  4134d8:	stos   BYTE PTR es:[edi],al
  4134d9:	inc    edi
  4134da:	call   0x7ddd:0x4561b19d
  4134e1:	and    eax,0xd75ba7de
  4134e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134e7:	mov    bl,0x9e
  4134e9:	rol    BYTE PTR [eax-0x5f],cl
  4134ec:	xlat   BYTE PTR es:[ebx]
  4134ee:	test   ch,0x16
  4134f1:	stc    
  4134f2:	push   0xc181adef
  4134f7:	fisttp WORD PTR [esi]
  4134f9:	jge    0x4134cb
  4134fb:	hlt    
  4134fc:	aam    0x1d
  4134fe:	les    esp,FWORD PTR [ebp+eiz*4-0x5a]
  413502:	fiadd  WORD PTR [ebp+0x2e]
  413505:	add    edx,DWORD PTR [eax+0x79]
  413508:	or     edx,edi
  41350a:	bound  esp,QWORD PTR [eax-0x7e]
  41350d:	ficomp DWORD PTR [ebx]
  41350f:	not    edx
  413511:	call   0x6a64:0x485d03b6
  413518:	add    al,BYTE PTR [ebx-0x40]
  41351b:	neg    edi
  41351d:	mov    eax,ds:0xc51e512b
  413522:	mov    edi,0x20c83268
  413527:	push   ss
  413528:	test   dh,bh
  41352a:	fnstsw WORD PTR [ebp+eax*4+0x1e]
  41352e:	std    
  41352f:	jb     0x41359e
  413531:	xchg   ecx,eax
  413532:	pusha  
  413533:	mov    eax,0xddd7210f
  413538:	cwde   
  413539:	inc    ebx
  41353a:	jle    0x413501
  41353c:	imul   bp,si,0x4a3a
  413541:	mov    DWORD PTR [edx],ebx
  413543:	rol    DWORD PTR [esi],cl
  413545:	imul   BYTE PTR [eax+edx*1-0x69070da9]
  41354c:	mov    edx,0x79b6a3de
  413551:	test   eax,0xec8d496a
  413556:	mov    al,0x91
  413558:	hlt    
  413559:	sub    DWORD PTR [edi-0x1e992576],esp
  41355f:	cmp    BYTE PTR [ebp-0xeaca7c4],bh
  413565:	xor    eax,0x1857b0be
  41356a:	inc    ebx
  41356b:	cs xor ch,dh
  41356e:	je     0x41355b
  413570:	xchg   esp,eax
  413571:	dec    edi
  413572:	ret    
  413573:	int3   
  413574:	in     al,0xe5
  413576:	ds mov edx,0xfb60f203
  41357c:	cli    
  41357d:	idiv   BYTE PTR [edi]
  41357f:	fwait
  413580:	loopne 0x413538
  413582:	popa   
  413583:	jmp    0x4135da
  413585:	push   esi
  413586:	das    
  413587:	inc    esi
  413588:	(bad)  
  41358a:	ret    
  41358b:	mov    ss,WORD PTR [eax+0x7aae286]
  413591:	int3   
  413592:	(bad)  
  413593:	mov    ecx,esi
  413595:	inc    eax
  413596:	adc    BYTE PTR [ecx+0x6c],ch
  413599:	sub    BYTE PTR [edx-0x37fd7547],al
  41359f:	idiv   DWORD PTR [esi-0x50]
  4135a2:	adc    al,0x8a
  4135a4:	cmc    
  4135a5:	js     0x413599
  4135a7:	jecxz  0x413547
  4135a9:	shl    edx,1
  4135ab:	cwde   
  4135ac:	pop    eax
  4135ad:	dec    edi
  4135ae:	pusha  
  4135af:	(bad)
  4135b3:	xor    eax,0x6a9568cc
  4135b8:	into   
  4135b9:	mov    edx,0x7718b32
  4135be:	js     0x413621
  4135c0:	mov    ecx,0x833968cf
  4135c5:	js     0x41355b
  4135c7:	ins    DWORD PTR es:[edi],dx
  4135c8:	and    BYTE PTR [esi],bl
  4135ca:	shr    BYTE PTR [edx],0xb5
  4135cd:	jg     0x4135e6
  4135cf:	popa   
  4135d0:	(bad)
  4135d3:	jmp    FWORD PTR [esi+ebx*8+0x40]
  4135d7:	xor    ecx,ecx
  4135d9:	sahf   
  4135da:	add    DWORD PTR [ebp-0x4d],ecx
  4135dd:	cmp    eax,0x935bd381
  4135e2:	xchg   DWORD PTR [edi+0x38],esp
  4135e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e6:	mov    ecx,0x61889baf
  4135eb:	out    0xdd,eax
  4135ed:	sbb    al,0xb7
  4135ef:	sub    al,0xd3
  4135f1:	jmp    0x593b:0x93a9e87f
  4135f8:	adc    dl,BYTE PTR [eax]
  4135fa:	sbb    al,0x60
  4135fc:	mov    ebp,eax
  4135fe:	cmp    DWORD PTR [eax],ecx
  413600:	(bad)  
  413602:	add    al,0x43
  413604:	call   0xb8c0:0x65dd4db5
  41360b:	je     0x41363c
  41360d:	adc    DWORD PTR [ecx+0x5b32b02],edx
  413613:	pop    esp
  413614:	mov    esp,0xbd133a4b
  413619:	(bad)  
  41361a:	adc    edx,DWORD PTR [ebx+0x69]
  41361d:	push   ebp
  41361e:	sbb    bh,BYTE PTR [esi+0x40]
  413621:	popa   
  413622:	cwde   
  413623:	pushf  
  413624:	add    esp,DWORD PTR [eax-0x6a]
  413627:	cmp    DWORD PTR [ebx-0x47e00e44],0x73803d8d
  413631:	fnsave [eax]
  413633:	call   0x3d37:0xee9a85c1
  41363a:	and    ah,BYTE PTR [ecx+0x3f15293f]
  413640:	adc    al,0x8c
  413642:	fistp  QWORD PTR [edx]
  413644:	imul   ebx,DWORD PTR [ecx-0x21],0xffffffb5
  413648:	xlat   BYTE PTR ds:[ebx]
  413649:	jl     0x4136a1
  41364b:	mov    ch,0x97
  41364d:	in     al,dx
  41364e:	push   esp
  41364f:	xchg   BYTE PTR [edx-0x79],cl
  413652:	sub    DWORD PTR [esi+0x22],0xfffffff0
  413656:	je     0x4135f0
  413658:	inc    ebp
  413659:	dec    esi
  41365a:	adc    al,0x6d
  41365c:	cwde   
  41365d:	outs   dx,BYTE PTR ds:[esi]
  41365e:	inc    esp
  41365f:	ret    
  413660:	cmp    al,0xd0
  413662:	mov    BYTE PTR [esi+0x45],ah
  413665:	mov    fs,esp
  413667:	and    al,0xe6
  413669:	mov    cs,ebp
  41366b:	cs ja  0x4136eb
  41366e:	dec    ebx
  41366f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413670:	jns    0x4136ea
  413672:	into   
  413673:	mov    esp,0x567dafb3
  413678:	pop    ds
  413679:	pop    es
  41367a:	das    
  41367b:	out    dx,eax
  41367c:	std    
  41367d:	fdivr  QWORD PTR [edi-0x2d]
  413680:	dec    ebx
  413681:	adc    eax,0x3d51e895
  413686:	sub    eax,0xf4f0f45d
  41368b:	push   edx
  41368c:	xchg   edi,eax
  41368d:	aas    
  41368e:	fwait
  41368f:	repnz pushf 
  413691:	jb     0x4136b7
  413693:	jmp    0x4136a1
  413695:	je     0x413694
  413697:	xchg   edx,eax
  413698:	jge    0x41364b
  41369a:	pop    ss
  41369b:	sub    DWORD PTR [ecx+edi*8-0x7a824109],esi
  4136a2:	adc    dh,bh
  4136a4:	xchg   ecx,eax
  4136a5:	push   ss
  4136a6:	cmp    eax,0xe250a01a
  4136ab:	adc    eax,0xc309ba35
  4136b0:	cmp    DWORD PTR cs:[ecx],0x21aac22b
  4136b7:	add    eax,0xffffffe5
  4136ba:	arpl   WORD PTR [ecx+0x70],si
  4136bd:	outs   dx,DWORD PTR ds:[esi]
  4136be:	cmp    esi,DWORD PTR [ebp+0x564f0574]
  4136c4:	call   FWORD PTR [edx]
  4136c6:	fiadd  DWORD PTR [eax+0x2b]
  4136c9:	fucomp st(4)
  4136cb:	mov    dh,0x69
  4136cd:	ret    
  4136ce:	adc    al,0xf
  4136d0:	repz sti 
  4136d2:	shl    DWORD PTR [ecx+0x620fb5b3],1
  4136d8:	loop   0x4136e1
  4136da:	out    dx,eax
  4136db:	add    ecx,DWORD PTR [ebp+0x65]
  4136de:	mov    eax,0xcf3ef678
  4136e3:	mov    dl,0x89
  4136e5:	xor    ch,bh
  4136e7:	pop    ebx
  4136e8:	dec    ebp
  4136e9:	mov    ebp,0x6d20464d
  4136ee:	dec    ebx
  4136ef:	fdiv   DWORD PTR [ebx+ecx*1]
  4136f2:	lods   eax,DWORD PTR ds:[esi]
  4136f3:	test   BYTE PTR [ebx-0x72],al
  4136f6:	fldenv [eax+0x230b7958]
  4136fc:	add    esp,eax
  4136fe:	int3   
  4136ff:	pop    ss
  413700:	and    BYTE PTR [esi-0x5f],bl
  413703:	xchg   ecx,eax
  413704:	scas   eax,DWORD PTR es:[edi]
  413705:	or     DWORD PTR [esi],esp
  413707:	mov    ebp,0xafcdc4cc
  41370c:	stos   BYTE PTR es:[edi],al
  41370d:	sub    DWORD PTR [edi-0x480d59fd],esp
  413713:	rcl    DWORD PTR [edi+0x14],0x10
  413717:	sti    
  413718:	mov    ds:0x12394058,al
  41371d:	xor    al,0xe3
  41371f:	adc    al,0x58
  413721:	mov    BYTE PTR [edi+0x6],al
  413724:	pop    esi
  413725:	xchg   ebx,eax
  413726:	inc    ecx
  413727:	lock and DWORD PTR [edi-0x64],ecx
  41372b:	retf   0x3155
  41372e:	push   ss
  41372f:	fwait
  413730:	shl    BYTE PTR [ebx],cl
  413732:	das    
  413733:	pop    es
  413734:	cmp    ebx,DWORD PTR [ebx+0x49a4d942]
  41373a:	cmp    al,0x81
  41373c:	stos   BYTE PTR es:[edi],al
  41373d:	mov    esp,0xd3abcd2e
  413742:	popa   
  413743:	xor    al,0xc4
  413745:	and    dl,cl
  413747:	adc    eax,0x6211a078
  41374c:	pop    edx
  41374d:	adc    esi,DWORD PTR [edi]
  41374f:	lods   eax,DWORD PTR ds:[esi]
  413750:	add    ecx,ebp
  413752:	iret   
  413753:	cdq    
  413754:	out    dx,eax
  413755:	pop    esp
  413756:	outs   dx,BYTE PTR ds:[esi]
  413757:	test   al,bl
  413759:	(bad)  
  41375b:	cmp    dl,al
  41375d:	add    ebx,edi
  41375f:	jo     0x4137e0
  413761:	pop    ebp
  413762:	mov    al,dl
  413764:	sbb    edx,DWORD PTR [ecx-0x1e]
  413767:	lods   ax,WORD PTR ds:[esi]
  413769:	jl     0x413719
  41376b:	clc    
  41376c:	add    edi,DWORD PTR [esi+ebp*1-0x53]
  413770:	xchg   edi,eax
  413771:	add    al,0xc1
  413773:	xor    esi,edx
  413775:	(bad)  
  413777:	ret    0xcfdc
  41377a:	ins    BYTE PTR es:[edi],dx
  41377b:	retf   0x9385
  41377e:	add    DWORD PTR [edx-0x48],eax
  413781:	mov    ecx,edi
  413783:	daa    
  413784:	mov    dh,0xe2
  413786:	sub    bl,BYTE PTR [eax-0x721c3c13]
  41378c:	std    
  41378d:	scas   eax,DWORD PTR es:[edi]
  41378e:	or     dl,BYTE PTR [edi]
  413790:	or     esp,ecx
  413792:	xor    ebp,DWORD PTR [ebx-0x66]
  413795:	mov    dl,0x3a
  413797:	sbb    DWORD PTR [esi+edi*2+0x14],esi
  41379b:	fldlg2 
  41379d:	xor    BYTE PTR [edx+0x3fc4dcec],cl
  4137a3:	les    ecx,FWORD PTR [edi-0x66]
  4137a6:	loopne 0x413765
  4137a8:	not    BYTE PTR [edi]
  4137aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ab:	and    ecx,DWORD PTR [ebp+0x40f5aae8]
  4137b1:	push   ss
  4137b2:	retf   0x17d5
  4137b5:	cmp    eax,0xa47ae542
  4137ba:	cld    
  4137bb:	fwait
  4137bc:	ret    0x1adf
  4137bf:	ins    DWORD PTR es:[edi],dx
  4137c0:	mov    eax,ds:0xbefd8bb1
  4137c5:	popf   
  4137c6:	int    0xdf
  4137c8:	dec    esi
  4137c9:	xchg   edi,eax
  4137ca:	xor    BYTE PTR [esi],bl
  4137cc:	pusha  
  4137cd:	inc    esi
  4137ce:	sub    BYTE PTR [ecx+0x5d],dl
  4137d1:	add    dh,dl
  4137d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d4:	popa   
  4137d5:	ror    DWORD PTR [edi-0x76],cl
  4137d8:	in     eax,0xe4
  4137da:	lods   eax,DWORD PTR ds:[esi]
  4137db:	adc    esp,ecx
  4137dd:	retf   
  4137de:	add    edx,DWORD PTR [ecx+0x4f]
  4137e1:	gs ins BYTE PTR es:[edi],dx
  4137e3:	mov    eax,ds:0x657cec46
  4137e8:	xor    al,bh
  4137ea:	sub    eax,0x798f1b2c
  4137ef:	data16 jmp 0x4137c7
  4137f2:	popf   
  4137f3:	sti    
  4137f4:	ror    ebx,cl
  4137f6:	jmp    0x8f7adda2
  4137fb:	fiadd  DWORD PTR [edx-0x32]
  4137fe:	and    eax,0x22332aae
  413803:	out    0xf6,eax
  413805:	and    ch,0x21
  413808:	rcl    eax,1
  41380a:	icebp  
  41380b:	std    
  41380c:	mov    eax,0x619da60f
  413811:	ret    
  413812:	aad    0xe6
  413814:	pop    ebp
  413815:	(bad)  
  413816:	in     al,dx
  413817:	fisub  WORD PTR [ecx-0x69]
  41381a:	push   0x4e27619d
  41381f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413820:	xchg   edx,eax
  413821:	ds inc eax
  413823:	and    bl,BYTE PTR [edx+eiz*8-0x1f605cc0]
  41382a:	aam    0xa8
  41382c:	mov    al,ds:0x8312e425
  413831:	or     BYTE PTR [esp+edi*2],0x47
  413835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413836:	push   ecx
  413837:	outs   dx,DWORD PTR ds:[esi]
  413838:	shl    ch,0xf8
  41383b:	cwde   
  41383c:	adc    al,0x6d
  41383e:	cmp    DWORD PTR [ebp-0x6],ecx
  413841:	es jecxz 0x4138a0
  413844:	ret    
  413845:	aas    
  413846:	push   eax
  413847:	push   ecx
  413848:	inc    ecx
  413849:	in     al,dx
  41384a:	out    dx,eax
  41384b:	leave  
  41384c:	call   FWORD PTR [esi-0x3a]
  41384f:	ret    0xefaf
  413852:	mov    eax,0x973e3534
  413857:	xchg   BYTE PTR [esi],al
  413859:	lahf   
  41385a:	lods   al,BYTE PTR ds:[esi]
  41385b:	aaa    
  41385c:	fnstsw WORD PTR [edx+0x4acd69a4]
  413862:	or     BYTE PTR [edx-0x48],0xaf
  413866:	loop   0x4138b5
  413868:	outs   dx,BYTE PTR ds:[esi]
  413869:	xchg   edi,eax
  41386a:	push   esp
  41386b:	test   eax,0xa1d2b72
  413870:	pop    ebp
  413871:	inc    ecx
  413872:	clc    
  413873:	mov    ebx,0xed580b54
  413878:	and    eax,DWORD PTR [edx]
  41387a:	mov    bh,0x54
  41387c:	popa   
  41387d:	retf   0x2c5b
  413880:	in     eax,0x86
  413882:	or     al,0x5d
  413884:	or     eax,0xdb946c93
  413889:	add    BYTE PTR [esi-0x5d7de137],dh
  41388f:	inc    ebp
  413890:	adc    al,0x6a
  413892:	sub    eax,0x38c46107
  413897:	nop
  413898:	dec    esi
  413899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41389a:	repnz mov al,0x9c
  41389d:	ins    DWORD PTR es:[edi],dx
  41389e:	jmp    0xc410:0xc585ac54
  4138a5:	shr    BYTE PTR [ecx+0x3904f3f5],0xcc
  4138ac:	data16 cli 
  4138ae:	mov    ch,0x9e
  4138b0:	inc    ebp
  4138b1:	nop
  4138b2:	pop    eax
  4138b3:	fs ret 0x53fd
  4138b7:	icebp  
  4138b8:	loope  0x413848
  4138ba:	or     BYTE PTR [ecx-0x3982517b],cl
  4138c0:	cli    
  4138c1:	outs   dx,DWORD PTR ds:[esi]
  4138c2:	push   esi
  4138c3:	pop    edx
  4138c4:	adc    bh,al
  4138c6:	jge    0x4138f2
  4138c8:	test   DWORD PTR [ebx-0x31341758],0x842f8575
  4138d2:	call   0x40c:0xbef0f231
  4138d9:	or     ebx,DWORD PTR es:[ebx]
  4138dc:	pop    eax
  4138dd:	mov    eax,ds:0x5641f629
  4138e2:	lahf   
  4138e3:	fnstcw WORD PTR [edx-0x1f]
  4138e6:	out    0x4f,al
  4138e8:	inc    ebp
  4138e9:	ret    
  4138ea:	aaa    
  4138eb:	inc    esi
  4138ec:	int3   
  4138ed:	ds add al,0x7
  4138f0:	in     al,0x18
  4138f2:	cli    
  4138f3:	mov    eax,0xc3ac647b
  4138f8:	dec    esi
  4138f9:	repnz cmp ecx,DWORD PTR [ecx-0x17]
  4138fd:	cmp    ebp,DWORD PTR [edx+0x39054f11]
  413903:	repz sub DWORD PTR fs:[esi-0x7d],ecx
  413908:	ins    BYTE PTR es:[edi],dx
  413909:	xor    edi,ecx
  41390b:	cwde   
  41390c:	je     0x4138e5
  41390e:	loopne 0x413972
  413910:	nop
  413911:	mov    ebp,0x633f9594
  413916:	outs   dx,BYTE PTR ds:[esi]
  413917:	mov    ecx,DWORD PTR [ecx+0x5af3322b]
  41391d:	xor    al,0xdf
  41391f:	sbb    ecx,DWORD PTR ds:0x4580e3a6
  413925:	ret    
  413926:	stos   BYTE PTR es:[edi],al
  413927:	dec    esi
  413928:	fisttp DWORD PTR [ebx]
  41392a:	cwde   
  41392b:	mov    ecx,0x95d303ed
  413930:	mov    dh,0x3a
  413932:	cdq    
  413933:	jle    0x41395d
  413935:	rcr    ch,0xfc
  413938:	mov    ch,0x18
  41393a:	jl     0x41398e
  41393c:	das    
  41393d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41393e:	lock popf 
  413940:	in     eax,0x5
  413942:	imul   ebp,DWORD PTR [edx],0x77
  413945:	rcl    BYTE PTR [esi-0x2d499171],1
  41394b:	adc    al,0x3
  41394d:	shr    BYTE PTR [ebp-0x6cf2b1ba],0x8e
  413954:	(bad)  
  413955:	mov    eax,ds:0x7e00602c
  41395a:	pop    ds
  41395b:	imul   ebx,DWORD PTR [ebp-0x62],0xfffffff8
  41395f:	or     BYTE PTR [ebx+edx*4],al
  413962:	pop    ss
  413963:	out    0xc,al
  413965:	(bad)
  41396a:	push   0x54
  41396c:	xchg   edx,eax
  41396d:	cdq    
  41396e:	retf   
  41396f:	popa   
  413970:	jne    0x413907
  413972:	pop    ebx
  413973:	pusha  
  413974:	mov    DWORD PTR [eax+0x9],edi
  413977:	(bad)  
  413978:	lods   al,BYTE PTR fs:[esi]
  41397a:	sti    
  41397b:	dec    BYTE PTR [edi+0x4a]
  41397e:	ja     0x413906
  413980:	in     eax,0xd2
  413982:	fdiv   QWORD PTR [edx]
  413984:	cmp    DWORD PTR [edx],esi
  413986:	sbb    dl,bh
  413988:	stos   BYTE PTR es:[edi],al
  413989:	mov    bl,0x9a
  41398b:	imul   eax,eax,0x42526037
  413991:	sub    ebp,DWORD PTR [ecx+edi*8+0x7a]
  413995:	ds daa 
  413997:	(bad)
  41399b:	fs add eax,0xb9cb68dc
  4139a1:	dec    ebp
  4139a2:	sahf   
  4139a3:	xchg   BYTE PTR [esi+0x2d76060b],al
  4139a9:	jno    0x41394e
  4139ab:	adc    DWORD PTR [ebp-0x7a],edx
  4139ae:	xchg   edx,eax
  4139af:	shl    DWORD PTR [ecx+0x1],0x46
  4139b3:	ja     0x4139a2
  4139b5:	fisttp DWORD PTR [ebx+eax*4]
  4139b8:	retf   
  4139b9:	pop    edi
  4139ba:	push   eax
  4139bb:	jb     0x413947
  4139bd:	dec    eax
  4139be:	xor    BYTE PTR [ebp+0x5c],bl
  4139c1:	loope  0x413a3e
  4139c3:	cmp    eax,0x6014da68
  4139c8:	or     al,0x73
  4139ca:	retf   0x8e89
  4139cd:	and    BYTE PTR [ecx+0x5e],0xc0
  4139d1:	mov    ds:0x476b6d5d,eax
  4139d6:	or     al,0x6e
  4139d8:	mov    edx,0x9387cc43
  4139dd:	jne    0x41396f
  4139df:	push   cs
  4139e0:	daa    
  4139e1:	sub    al,0x4b
  4139e3:	dec    ecx
  4139e4:	fdiv   st,st(0)
  4139e6:	bsf    eax,eax
  4139e9:	push   edx
  4139ea:	in     eax,dx
  4139eb:	jp     0x413a33
  4139ed:	ret    
  4139ee:	add    eax,0xe126e74d
  4139f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139f4:	les    ebx,FWORD PTR ds:0xd6038fc7
  4139fa:	repz sahf 
  4139fc:	fldenv [edx]
  4139fe:	ds mov dl,0xe2
  413a01:	sbb    DWORD PTR [esp+edx*4+0x3add4d9c],edx
  413a08:	mov    bl,0xcf
  413a0a:	gs jb  0x4139d7
  413a0d:	not    DWORD PTR [eax-0x16]
  413a10:	clc    
  413a11:	inc    ebp
  413a12:	xchg   esi,eax
  413a13:	push   0xa0badd57
  413a18:	imul   eax,DWORD PTR [edi+eiz*8+0x405e4c35],0xffffff9f
  413a20:	jno    0x4139e5
  413a22:	dec    esi
  413a23:	cmp    eax,0xbc5c7bf8
  413a28:	xchg   ecx,eax
  413a29:	adc    DWORD PTR [ecx+ebx*2-0x59c4d966],0x40
  413a31:	jbe    0x413aa4
  413a33:	repnz inc eax
  413a35:	dec    ecx
  413a36:	sbb    ebp,DWORD PTR [edi+esi*4+0x58]
  413a3a:	dec    edi
  413a3b:	mov    ebx,0xca9fd9fa
  413a40:	fadd   DWORD PTR [ebx]
  413a42:	imul   cl
  413a44:	les    esi,FWORD PTR [edx+eiz*4-0x76512b80]
  413a4b:	repnz mov edx,0x2612276
  413a51:	push   ss
  413a52:	xor    DWORD PTR [edx],esp
  413a54:	dec    ecx
  413a55:	dec    ecx
  413a56:	test   DWORD PTR [edx-0xa],esi
  413a59:	imul   ah
  413a5b:	xchg   ebx,eax
  413a5c:	outs   dx,BYTE PTR ds:[esi]
  413a5d:	ret    
  413a5e:	pop    edx
  413a5f:	mov    esi,0x32c73131
  413a64:	lea    esi,[ecx]
  413a66:	and    eax,0x332f802b
  413a6b:	sbb    BYTE PTR [ecx-0x140751e3],dl
  413a71:	lahf   
  413a72:	pop    esi
  413a73:	shr    BYTE PTR [eax-0x329de8e0],0xd4
  413a7a:	jbe    0x413a80
  413a7c:	stc    
  413a7d:	and    DWORD PTR [edx-0x3d365d3a],ecx
  413a83:	mov    al,0xb
  413a85:	mov    al,0xb1
  413a87:	and    ebx,0xcabbe8d1
  413a8d:	mov    al,0x48
  413a8f:	ficom  DWORD PTR [eax+0x2aa10380]
  413a95:	mov    BYTE PTR [edx-0x249d455],0xb1
  413a9c:	push   0x74
  413a9e:	mov    bh,0xb4
  413aa0:	add    DWORD PTR [esi-0x5f],ebx
  413aa3:	xchg   DWORD PTR ds:0x46dd9498,ebx
  413aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aaa:	sbb    eax,0xd6ebe5cc
  413aaf:	jmp    0x4ebb2e6b
  413ab4:	aas    
  413ab5:	cmp    esp,DWORD PTR [ebp-0x2453da7a]
  413abb:	lods   al,BYTE PTR ds:[esi]
  413abc:	mov    esp,0xbb40ad17
  413ac1:	in     eax,dx
  413ac2:	daa    
  413ac3:	into   
  413ac4:	mul    bh
  413ac6:	cld    
  413ac7:	fcmovu st,st(7)
  413ac9:	mov    bh,0x92
  413acb:	mov    bh,0xa5
  413acd:	push   ebp
  413ace:	or     ch,BYTE PTR [esi+ebx*2]
  413ad1:	movlps xmm5,QWORD PTR [edi+0x1f4d64c]
  413ad8:	push   esp
  413ad9:	data16 sub al,0xb0
  413adc:	sahf   
  413add:	imul   ebp,DWORD PTR [ecx+0x50b7990b],0x55f6256
  413ae7:	adc    ecx,DWORD PTR [eax+0x22]
  413aea:	in     al,dx
  413aeb:	ins    BYTE PTR es:[edi],dx
  413aec:	push   eax
  413aed:	add    dl,BYTE PTR [esi+edx*8]
  413af0:	psrlq  mm4,mm5
  413af3:	mov    edx,DWORD PTR [edx]
  413af5:	hlt    
  413af6:	fstp   TBYTE PTR [ecx-0x623698af]
  413afc:	sbb    edi,edi
  413afe:	inc    esi
  413aff:	cmp    BYTE PTR [edi-0x6b],bl
  413b02:	mov    esi,0xb8b9261e
  413b07:	lods   eax,DWORD PTR ds:[esi]
  413b08:	(bad)  
  413b09:	jmp    0xf5433511
  413b0e:	les    eax,FWORD PTR [bx+di-0x39]
  413b12:	ins    DWORD PTR es:[edi],dx
  413b13:	inc    edx
  413b14:	inc    edi
  413b15:	lahf   
  413b16:	cmc    
  413b17:	xchg   BYTE PTR [ebp-0x75],dl
  413b1a:	and    esp,DWORD PTR [edx+0x233dea96]
  413b20:	es push ebx
  413b22:	jae    0x413b0b
  413b24:	adc    DWORD PTR [edx+0x42],esi
  413b27:	mov    ah,0xde
  413b29:	sub    BYTE PTR [eax],ch
  413b2b:	mov    edi,0x43562ff8
  413b30:	lea    eax,[edi-0x19e7276a]
  413b36:	scas   eax,DWORD PTR es:[edi]
  413b37:	daa    
  413b38:	xor    bl,0x64
  413b3b:	enter  0x61e6,0xc2
  413b3f:	(bad)  
  413b40:	out    dx,eax
  413b41:	inc    ebp
  413b42:	psraw  mm7,QWORD PTR [ecx+0x4f]
  413b46:	ss out 0x99,al
  413b49:	test   eax,0xd25b1db1
  413b4e:	ret    
  413b4f:	jle    0x413ae0
  413b51:	inc    ebx
  413b52:	adc    cl,ch
  413b54:	cli    
  413b55:	pop    ebp
  413b56:	call   0x2798:0x6f0d3fa3
  413b5d:	xchg   edi,eax
  413b5e:	arpl   WORD PTR [esi],ax
  413b60:	dec    ebp
  413b61:	jmp    0x10bc:0x3b865ca4
  413b68:	add    ebp,DWORD PTR [esi+0x2964c84f]
  413b6e:	imul   edi,DWORD PTR [esi+eiz*4+0x37],0xe814ab68
  413b76:	int3   
  413b77:	in     eax,0x20
  413b79:	jno    0x413b32
  413b7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b7c:	int    0x12
  413b7e:	in     eax,0xe3
  413b80:	push   cs
  413b81:	jo     0x413b72
  413b83:	js     0x413b99
  413b85:	mov    esi,0x375a221
  413b8a:	adc    edx,DWORD PTR [edx+0x604d7027]
  413b90:	add    cl,BYTE PTR [ecx+ecx*4+0x34ec5cdc]
  413b97:	iret   
  413b98:	xchg   DWORD PTR [eax-0x5f],esp
  413b9b:	xchg   ecx,eax
  413b9c:	dec    edx
  413b9d:	sbb    eax,0xa01d4e6e
  413ba2:	adc    edx,DWORD PTR [edi]
  413ba4:	fidiv  DWORD PTR [ebx]
  413ba6:	lods   al,BYTE PTR ds:[esi]
  413ba7:	test   DWORD PTR [eax+0x521448b6],esi
  413bad:	push   ebx
  413bae:	(bad)  
  413baf:	gs dec ebp
  413bb1:	jnp    0x413ba6
  413bb3:	outs   dx,DWORD PTR ds:[esi]
  413bb4:	popf   
  413bb5:	mov    edx,0x43d3c125
  413bba:	test   al,0xbc
  413bbc:	jnp    0x413c15
  413bbe:	ret    0xd73d
  413bc1:	mov    bl,0x4a
  413bc3:	jecxz  0x413b8d
  413bc5:	fcom   st(2)
  413bc7:	mov    WORD PTR [ebp+0x67aa9a7d],?
  413bcd:	hlt    
  413bce:	add    ebx,ebx
  413bd0:	sub    ch,BYTE PTR [edi-0x21]
  413bd3:	adc    al,BYTE PTR [ebx-0x6]
  413bd6:	mov    bl,0x2
  413bd8:	mov    dh,0x1
  413bda:	out    dx,eax
  413bdb:	push   ss
  413bdc:	(bad)  
  413bdd:	mov    ebp,0xab57cbc4
  413be2:	push   0x30
  413be4:	fs sar ecx,0x57
  413be8:	mov    eax,0xd783d103
  413bed:	push   DWORD PTR [ebx]
  413bef:	rol    BYTE PTR [ebx-0x29c4ff09],1
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421cd2
  413c08:	mov    ds:0x421cda,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421aa2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423868
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a6e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423883
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423946
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a66
  413f9e:	mov    eax,ds:0x421a76
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ace
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c56
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239c0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	sbb    eax,0x7d991411
  414251:	inc    esi
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	fsubp  st(5),st
  41425a:	call   DWORD PTR [edx+0x7624f12a]
  414260:	(bad)  
  414261:	loope  0x4142d6
  414263:	in     eax,0x46
  414265:	es cli 
  414267:	daa    
  414268:	rcl    DWORD PTR [edi-0x2197ceb6],1
  41426e:	sti    
  41426f:	shl    BYTE PTR [esi-0x4556f7bf],1
  414275:	retf   
  414276:	xor    BYTE PTR [eiz*1+0x56b859c9],ah
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	aas    
  41427f:	add    BYTE PTR [ecx-0x620484fa],dl
  414285:	imul   esp,DWORD PTR gs:[edx-0x3fecf5f6],0xffffffa1
  41428d:	sti    
  41428e:	fstp   QWORD PTR [ebx+0x61]
  414291:	xor    eax,0xb696185a
  414296:	or     esi,DWORD PTR [ebp-0xd4fb291]
  41429c:	add    ebx,DWORD PTR [ebx-0xeba76d9]
  4142a2:	(bad)  
  4142a3:	fcmovb st,st(4)
  4142a5:	cmp    al,0xc9
  4142a7:	push   esi
  4142a8:	lods   al,BYTE PTR ds:[esi]
  4142a9:	or     al,BYTE PTR [eax]
  4142ab:	pop    ss
  4142ac:	fwait
  4142ad:	xor    al,0x37
  4142af:	data16 (bad) 
  4142b1:	mov    ?,WORD PTR [edx]
  4142b3:	cld    
  4142b4:	dec    edi
  4142b5:	das    
  4142b6:	mov    cl,0x9b
  4142b8:	add    DWORD PTR [edx-0x4d],0xffffffba
  4142bc:	push   esi
  4142bd:	pop    esp
  4142be:	mov    esp,0xf17d0db4
  4142c3:	dec    esp
  4142c4:	cmp    al,0xda
  4142c6:	push   edx
  4142c7:	mov    al,0x6d
  4142c9:	or     ecx,edx
  4142cb:	retf   0x415f
  4142ce:	(bad)
  4142d1:	mov    ebp,0x8e54e88a
  4142d6:	and    eax,0x9b52007
  4142db:	add    dh,0xde
  4142de:	ret    
  4142df:	xor    DWORD PTR [ecx-0x26],esi
  4142e2:	mov    ah,BYTE PTR [ebp+0x2a6ce71b]
  4142e8:	in     eax,dx
  4142e9:	jle    0x414286
  4142eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142ec:	mov    edx,0x93bdb817
  4142f1:	das    
  4142f2:	fucomip st,st(2)
  4142f4:	dec    esi
  4142f5:	jmp    0x7f0a:0x6588dce4
  4142fc:	clc    
  4142fd:	jmp    0xa07f:0x2be9851b
  414304:	pop    ss
  414305:	and    al,0x6
  414307:	inc    ebx
  414308:	in     eax,dx
  414309:	inc    esp
  41430a:	sti    
  41430b:	(bad)  
  41430c:	lds    eax,FWORD PTR [eax]
  41430e:	mov    esi,0xd8a221be
  414313:	push   es
  414314:	shr    DWORD PTR ds:[ecx],1
  414317:	aaa    
  414318:	or     DWORD PTR [edi],esi
  41431a:	jne    0x4142d5
  41431c:	js     0x4142b0
  41431e:	mov    al,ds:0x2bed6fe3
  414323:	inc    ebx
  414324:	cs dec esi
  414326:	mov    esi,0x2bdb5eb8
  41432b:	sbb    al,0xb1
  41432d:	nop
  41432e:	jbe    0x414372
  414330:	sub    DWORD PTR [ecx+edi*2+0xb],ecx
  414334:	imul   ebp,DWORD PTR [ebx],0xbaa4be69
  41433a:	nop
  41433b:	jmp    0xf9bc:0x19bfc558
  414342:	add    BYTE PTR [esp+esi*2],ah
  414345:	adc    ebp,0x60
  414348:	addr16 enter 0x9d50,0x61
  41434d:	pop    ebx
  41434e:	cmp    DWORD PTR [esi+0x519a173f],0x8bb800b9
  414358:	pop    ds
  414359:	push   ebx
  41435a:	inc    eax
  41435b:	cld    
  41435c:	icebp  
  41435d:	and    DWORD PTR [eax],esi
  41435f:	cmp    ch,bh
  414361:	xchg   edi,eax
  414362:	mov    bh,0x71
  414364:	iret   
  414365:	repnz inc esp
  414367:	mov    ds:0x617628fe,eax
  41436c:	adc    edx,DWORD PTR [ecx+0x2292bf83]
  414372:	imul   edi,DWORD PTR [edx+eax*1-0x2bf010a5],0x24345cec
  41437d:	inc    ebp
  41437e:	jmp    0x68c7:0xe04b5204
  414385:	xchg   DWORD PTR [esi+0x21],esp
  414388:	(bad)  
  414389:	mov    edx,0x312c11e8
  41438e:	int    0x52
  414390:	sub    ecx,edx
  414392:	push   edi
  414393:	push   ds
  414394:	sar    BYTE PTR [ecx+0x75ebda7e],0x5d
  41439b:	mov    ebx,DWORD PTR [ebp+0x6af2d9d7]
  4143a1:	es push ebx
  4143a3:	jns    0x414375
  4143a5:	cmp    BYTE PTR [ebx],bh
  4143a7:	addr16 mov ebp,0x6d971b8a
  4143ad:	dec    eax
  4143ae:	jbe    0x414376
  4143b0:	addr16 icebp 
  4143b2:	mov    al,0x23
  4143b4:	pop    ecx
  4143b5:	adc    dl,BYTE PTR [ecx]
  4143b7:	mov    bh,0x1f
  4143b9:	idiv   BYTE PTR [ebx+edx*2+0x28aea940]
  4143c0:	or     ebp,esi
  4143c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143c3:	dec    eax
  4143c4:	pop    eax
  4143c5:	push   ebp
  4143c6:	inc    ecx
  4143c7:	out    0x2d,al
  4143c9:	ins    DWORD PTR es:[edi],dx
  4143ca:	mov    edi,0x1df1766b
  4143cf:	dec    BYTE PTR [esi-0x1e]
  4143d2:	ret    
  4143d3:	(bad)  [ecx]
  4143d5:	xchg   esp,eax
  4143d6:	jno    0x414400
  4143d8:	xchg   DWORD PTR [ebx-0x1c828d70],ebx
  4143de:	jae    0x414393
  4143e0:	xchg   edx,eax
  4143e1:	imul   ebx,DWORD PTR [ebp-0x88923cd],0x150f5df7
  4143eb:	cmp    ecx,0xe45c91f3
  4143f1:	xchg   edx,eax
  4143f2:	adc    cl,BYTE PTR [edi+0x3849cab4]
  4143f8:	cmp    dl,dl
  4143fa:	scas   al,BYTE PTR es:[edi]
  4143fb:	es add cl,dh
  4143fe:	rol    BYTE PTR [edi+edi*2],1
  414401:	jp     0x414419
  414403:	loop   0x41441b
  414405:	mov    ds:0x28e425bb,eax
  41440a:	cmp    dh,dl
  41440c:	cmp    ebp,DWORD PTR [edi+0x28]
  41440f:	arpl   WORD PTR [ecx+0x5d],cx
  414412:	sbb    DWORD PTR [ebx-0x80],eax
  414415:	sub    al,0x54
  414417:	pop    esi
  414418:	dec    edx
  414419:	xor    eax,0x148fd522
  41441e:	cmp    eax,0xe60b0a32
  414423:	and    DWORD PTR [ebp-0x2db9a863],0xe9d6e60c
  41442d:	pop    ecx
  41442e:	ror    BYTE PTR [edi],0x50
  414431:	sub    al,0x5
  414433:	jecxz  0x4143be
  414435:	jbe    0x414456
  414437:	add    DWORD PTR es:[ebx+ebx*8-0x24b85899],edx
  41443f:	mul    BYTE PTR [edi+0x63f24e4]
  414445:	repz pop eax
  414447:	je     0x4143ce
  414449:	repnz mov esp,0x13e28479
  41444f:	je     0x414403
  414451:	mov    ecx,0xe00dbb63
  414456:	repz addr16 adc edi,0x72550bd1
  41445e:	mov    ds:0x71f66312,al
  414463:	int3   
  414464:	pop    esp
  414465:	mov    ebx,DWORD PTR [ebp-0x4cb8323b]
  41446b:	xchg   esi,eax
  41446c:	div    BYTE PTR [esi+0x76084d47]
  414472:	mov    cl,0x19
  414474:	xchg   esi,eax
  414475:	(bad)  [ebx-0x6673e1ef]
  41447b:	mov    edx,0x7e242423
  414480:	mov    bh,0xe2
  414482:	ds pop es
  414484:	inc    edi
  414485:	pop    ebx
  414486:	(bad)  
  414487:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414488:	inc    esp
  414489:	push   0x2501167e
  41448e:	jge    0x414489
  414490:	add    edi,eax
  414492:	callw  0x5e29
  414496:	fwait
  414497:	inc    eax
  414498:	mov    eax,ds:0xd4cd8402
  41449d:	inc    ebx
  41449e:	pop    ebp
  41449f:	xchg   ebx,eax
  4144a0:	cmp    BYTE PTR [esi-0x15df74b8],dl
  4144a6:	out    dx,eax
  4144a7:	pop    edx
  4144a8:	call   0x854b:0x5a158849
  4144af:	xor    ah,BYTE PTR [ecx+0x133e147f]
  4144b5:	test   eax,0x3e51799c
  4144ba:	mov    ds:0x2a9cc48d,eax
  4144bf:	popa   
  4144c0:	push   esi
  4144c1:	mov    ebp,0x6cd6d90d
  4144c6:	dec    edx
  4144c7:	dec    eax
  4144c8:	mov    ah,0xe1
  4144ca:	cli    
  4144cb:	lods   eax,DWORD PTR ds:[esi]
  4144cc:	add    DWORD PTR [eax+eiz*2+0x6a1de174],edi
  4144d3:	mov    ah,0x88
  4144d5:	js     0x414542
  4144d7:	push   ebp
  4144d8:	loope  0x41446d
  4144da:	lds    ecx,FWORD PTR [edx-0x66]
  4144dd:	xor    ebp,esi
  4144df:	cld    
  4144e0:	shr    BYTE PTR [edi],1
  4144e2:	out    dx,eax
  4144e3:	and    al,BYTE PTR [eax-0x56]
  4144e6:	add    ah,BYTE PTR [ebx+eiz*4]
  4144e9:	fs popf 
  4144eb:	and    DWORD PTR [ebp+ebp*8-0x3bc4dff2],edi
  4144f2:	ins    DWORD PTR es:[edi],dx
  4144f3:	mov    al,ds:0xffffff54
  4144f8:	push   0xffffff8e
  4144fa:	iret   
  4144fb:	dec    edi
  4144fc:	pop    es
  4144fd:	rcr    edx,0x2d
  414500:	ss xchg edi,eax
  414502:	add    ecx,DWORD PTR [ebx]
  414504:	pop    es
  414505:	or     ah,BYTE PTR [esi+0xb]
  414508:	fdiv   st,st(7)
  41450a:	not    BYTE PTR [ecx]
  41450c:	jp     0x4144e4
  41450e:	stos   DWORD PTR es:[edi],eax
  41450f:	shr    ah,0x8e
  414512:	dec    edi
  414513:	popa   
  414514:	scas   al,BYTE PTR es:[edi]
  414515:	xchg   DWORD PTR [ecx+0x32],esi
  414518:	mov    bl,0xba
  41451a:	add    esp,DWORD PTR [edx+edx*4+0x1d]
  41451e:	adc    BYTE PTR [esi+0x3b],dh
  414521:	cs xchg ebp,eax
  414523:	nop
  414524:	dec    ecx
  414525:	jns    0x414583
  414527:	mov    WORD PTR [eax-0x503d1656],ss
  41452d:	shl    BYTE PTR [ebx+eiz*1],cl
  414530:	xor    DWORD PTR [edx-0x59286b6e],esi
  414536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414537:	mov    eax,0x47253807
  41453c:	xor    BYTE PTR [eax],0xaa
  41453f:	aaa    
  414540:	push   cs
  414541:	jne    0x414554
  414543:	pop    ss
  414544:	and    eax,0xf19c75ee
  414549:	out    0xde,al
  41454b:	int    0x24
  41454d:	scas   eax,DWORD PTR es:[edi]
  41454e:	iret   
  41454f:	jl     0x414565
  414551:	and    DWORD PTR [edi],edx
  414553:	fs daa 
  414555:	and    BYTE PTR [edx-0x54c43a5d],0xd9
  41455c:	ret    
  41455d:	fisub  WORD PTR [esi-0x80]
  414560:	push   esp
  414561:	js     0x41452b
  414563:	imul   BYTE PTR [eax]
  414565:	popa   
  414566:	pop    esi
  414567:	fnop   
  414569:	or     esi,eax
  41456b:	push   0xffffffa0
  41456d:	pusha  
  41456e:	pop    ds
  41456f:	shr    bl,cl
  414571:	mov    edx,0x683c6219
  414576:	adc    edx,esp
  414578:	jmp    0x6beb:0x368ffd0e
  41457f:	test   DWORD PTR [ecx-0x2e],0x7b22f49e
  414586:	out    dx,eax
  414587:	nop
  414588:	adc    DWORD PTR [edx+0x5c],0xf73cd163
  41458f:	cli    
  414590:	ins    DWORD PTR es:[edi],dx
  414591:	jbe    0x414549
  414593:	jae    0x4145e2
  414595:	xchg   esp,eax
  414596:	outs   dx,DWORD PTR ds:[esi]
  414597:	lahf   
  414598:	loop   0x4145dc
  41459a:	xchg   ecx,eax
  41459b:	fidivr DWORD PTR [ebp+0x7f]
  41459e:	mov    ah,BYTE PTR [esi]
  4145a0:	mov    esp,0x6b3a38d5
  4145a5:	mov    ebp,0xe9a22a6e
  4145aa:	cs sub eax,0xaae1c63b
  4145b0:	fiadd  WORD PTR [edi-0x19]
  4145b3:	mov    ds:0x34e5b634,al
  4145b8:	push   eax
  4145b9:	ret    
  4145ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145bb:	cmp    ebp,DWORD PTR [ecx]
  4145bd:	ins    BYTE PTR es:[edi],dx
  4145be:	push   ebp
  4145bf:	lahf   
  4145c0:	test   DWORD PTR [edi+0x64],edx
  4145c3:	pop    ds
  4145c4:	sbb    eax,0x8d32ea50
  4145c9:	out    0x7f,eax
  4145cb:	fdiv   QWORD PTR [edi+ecx*1-0x7]
  4145cf:	jmp    0x2290:0x7fda8248
  4145d6:	ja     0x414567
  4145d8:	jecxz  0x41461b
  4145da:	(bad)  
  4145db:	nop
  4145dc:	push   edx
  4145dd:	push   es
  4145de:	jp     0x41461d
  4145e0:	(bad)  
  4145e1:	ins    DWORD PTR es:[edi],dx
  4145e2:	test   BYTE PTR [edi+0x3766776f],dh
  4145e8:	lds    edi,FWORD PTR [esi+ebx*4+0x64]
  4145ec:	jecxz  0x4145c9
  4145ee:	push   0x382d9fc9
  4145f3:	clc    
  4145f4:	sub    BYTE PTR [edx+eax*8-0x2a],0xfa
  4145f9:	or     BYTE PTR [edx+eiz*2+0x69c7332d],al
  414600:	pushf  
  414601:	cmp    al,0x36
  414603:	ja     0x414628
  414605:	je     0x41466f
  414607:	iret   
  414608:	addr16 dec ecx
  41460a:	jno    0x414636
  41460c:	xor    eax,0x82653c24
  414611:	popa   
  414612:	mov    eax,0xc3f54d92
  414617:	push   ss
  414618:	mov    ah,0x3a
  41461a:	shl    cl,cl
  41461c:	dec    ebx
  41461d:	push   esp
  41461e:	mov    ebp,0x34a609f7
  414623:	sahf   
  414624:	mov    WORD PTR [edx],cs
  414626:	sbb    DWORD PTR [edi-0xb3477d1],0x5a
  41462d:	aaa    
  41462e:	mov    dh,0xbc
  414630:	icebp  
  414631:	imul   ebx,DWORD PTR [ebx+0x15],0x38
  414635:	(bad)  
  414636:	xor    bl,dh
  414638:	inc    ebx
  414639:	aad    0x9f
  41463b:	jbe    0x4146a4
  41463d:	pop    ebx
  41463e:	clc    
  41463f:	add    DWORD PTR [ebx+0x6a024d47],ecx
  414645:	arpl   WORD PTR [ecx],si
  414647:	sub    al,al
  414649:	(bad)  
  41464a:	xchg   esp,eax
  41464b:	lahf   
  41464c:	fadd   st(2),st
  41464e:	(bad)  
  41464f:	mov    edi,0x5ed279be
  414654:	push   ss
  414655:	mov    BYTE PTR [eax-0x34],bl
  414658:	push   ds
  414659:	sub    eax,0x6688c9fc
  41465e:	ret    0x2d58
  414661:	cmc    
  414662:	pop    esp
  414663:	(bad)  
  414664:	mov    cl,0xa5
  414666:	frstor [ecx+0x61]
  414669:	ret    0xbb17
  41466c:	nop
  41466d:	inc    edx
  41466e:	inc    ecx
  41466f:	fdiv   DWORD PTR [edi-0x4c]
  414672:	mov    cl,0xd5
  414674:	push   0xd4f9599e
  414679:	(bad)  
  41467a:	clc    
  41467b:	add    edx,esp
  41467d:	cmp    al,0x25
  41467f:	mov    ch,0x8a
  414681:	loop   0x4146ea
  414683:	ret    
  414684:	call   0x1e1b77ab
  414689:	int3   
  41468a:	mov    eax,ds:0x6d3d48b0
  41468f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414690:	adc    cl,BYTE PTR [esi+0x26]
  414693:	fcmove st,st(5)
  414695:	mov    ecx,?
  414697:	fs push ecx
  414699:	cmc    
  41469a:	in     al,0xb8
  41469c:	mov    esp,DWORD PTR [ebx]
  41469e:	movntq QWORD PTR [eax-0x6050721d],mm2
  4146a5:	jle    0x4146cc
  4146a7:	sub    eax,0x760daff1
  4146ac:	pushf  
  4146ad:	outs   dx,DWORD PTR ds:[esi]
  4146ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146af:	cmp    eax,0x4a99fe4c
  4146b4:	imul   edx,ecx,0x757f9d8b
  4146ba:	cmp    eax,0xc07d8a7
  4146bf:	mov    esi,0x9eb6ec99
  4146c4:	jmp    0x8238:0x5b240afe
  4146cb:	push   ebp
  4146cc:	fidiv  DWORD PTR [ecx-0x65]
  4146cf:	hlt    
  4146d0:	jecxz  0x4146b6
  4146d2:	popa   
  4146d3:	xor    BYTE PTR [edi+edi*1-0x70],0x3f
  4146d8:	and    eax,0xf3c607a5
  4146dd:	mov    edx,0xe32994dc
  4146e2:	mov    esp,0x1d13ae30
  4146e7:	popf   
  4146e8:	push   0xffffffe0
  4146ea:	inc    ecx
  4146eb:	jecxz  0x41467b
  4146ed:	(bad)  
  4146ee:	fadd   DWORD PTR [esi+0x6]
  4146f1:	call   0x4a66c2cd
  4146f6:	xor    dl,BYTE PTR [ebx-0x273b49ab]
  4146fc:	data16 lods al,BYTE PTR ds:[esi]
  4146fe:	imul   edx,edx,0xffffff8d
  414701:	repz fild WORD PTR [eax]
  414704:	dec    ebx
  414705:	xor    ah,bh
  414707:	push   eax
  414708:	add    al,0xf9
  41470a:	pop    ecx
  41470b:	cmc    
  41470c:	fbstp  TBYTE PTR [esi]
  41470e:	jp     0x414690
  414710:	imul   ecx,DWORD PTR ds:0xb93e296,0xc46da517
  41471a:	outs   dx,DWORD PTR ds:[esi]
  41471b:	mov    dh,0x11
  41471d:	xlat   BYTE PTR ds:[ebx]
  41471e:	(bad)  
  41471f:	and    dh,dl
  414721:	push   0x60
  414723:	rcl    BYTE PTR [edi],1
  414725:	pop    ebx
  414726:	loopne 0x414745
  414728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414729:	cmp    ebx,DWORD PTR [ebx]
  41472b:	xor    al,0xfa
  41472d:	call   0x5eb039c4
  414732:	inc    ecx
  414733:	ret    0xbf1d
  414736:	in     al,dx
  414737:	imul   ebx,DWORD PTR [eax+0x3],0x7c
  41473b:	sbb    al,0x1f
  41473d:	or     DWORD PTR [esi+0x19],esi
  414740:	mov    esi,0x89aa9ee2
  414745:	add    ebp,DWORD PTR [ebp+0xd]
  414748:	out    0xa2,al
  41474a:	(bad)  
  41474b:	fwait
  41474c:	in     eax,0x8a
  41474e:	or     BYTE PTR [eax-0x2680de90],0x66
  414755:	neg    DWORD PTR [edi+ebx*1]
  414758:	jge    0x414757
  41475a:	add    DWORD PTR [eax+0x3d6d0bc2],edi
  414760:	mov    edi,0x661e2a44
  414765:	out    0x1d,eax
  414767:	cdq    
  414768:	es ds mov esi,0x216bdea7
  41476f:	mov    al,ch
  414771:	push   esp
  414772:	scas   eax,DWORD PTR es:[edi]
  414773:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414774:	(bad)  
  414775:	cmp    BYTE PTR [esi+eax*4],ah
  414778:	jp     0x41474c
  41477a:	sahf   
  41477b:	cmc    
  41477c:	push   ebp
  41477d:	mov    esi,0x6a090e7e
  414782:	push   cs
  414783:	xchg   ebp,eax
  414785:	or     DWORD PTR [eax+ecx*4+0x6a5d3596],eax
  41478c:	xchg   DWORD PTR [eax-0x49],eax
  41478f:	and    edx,DWORD PTR [edi+ecx*4]
  414792:	pusha  
  414793:	leave  
  414794:	sub    BYTE PTR [ebx],ah
  414796:	jbe    0x414725
  414798:	xor    DWORD PTR fs:[esi+ecx*8+0x6ac40a14],eax
  4147a0:	int    0x44
  4147a2:	add    cl,BYTE PTR [bp+di-0x50]
  4147a6:	test   eax,0x42be93e7
  4147ab:	fstp   QWORD PTR [esi+0x172bac3e]
  4147b1:	cs scas al,BYTE PTR es:[edi]
  4147b3:	fnstenv [esi+0x2c16ec65]
  4147b9:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147bb:	jl     0x414795
  4147bd:	jmp    0x3299:0x8beefb36
  4147c4:	inc    BYTE PTR [edi+0x4b174399]
  4147ca:	dec    esi
  4147cb:	push   cs
  4147cc:	pusha  
  4147cd:	inc    edi
  4147ce:	iret   
  4147cf:	sub    DWORD PTR [eax+0x37ffd9a8],edx
  4147d5:	scas   eax,DWORD PTR es:[edi]
  4147d6:	jne    0x414796
  4147d8:	pop    eax
  4147d9:	not    ebx
  4147db:	inc    edx
  4147dc:	mov    BYTE PTR [eax-0x2d],bl
  4147df:	js     0x41477c
  4147e1:	sbb    esi,DWORD PTR [ebx]
  4147e3:	sbb    al,0x22
  4147e5:	or     eax,0x1eae0e36
  4147ea:	inc    ebp
  4147eb:	icebp  
  4147ec:	bound  esi,QWORD PTR [ebx+0x8]
  4147ef:	mov    ds:0xdd4aae7,eax
  4147f4:	xor    BYTE PTR [ebx-0x41],0xa1
  4147f8:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4147fa:	sub    DWORD PTR [eax],edi
  4147fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147fd:	mov    ds,WORD PTR [esi+0x5178e800]
  414803:	jge    0x41480a
  414805:	sub    bh,dh
  414807:	leave  
  414808:	xor    eax,0xa564a186
  41480d:	cwde   
  41480e:	in     eax,0x12
  414810:	(bad)  
  414811:	jl     0x4147de
  414813:	fwait
  414814:	xor    BYTE PTR [edx+0x61],ch
  414817:	cmp    ch,BYTE PTR [edx-0x4b]
  41481a:	scas   al,BYTE PTR es:[edi]
  41481b:	fisub  WORD PTR [edx-0x6f5e1907]
  414821:	lods   eax,DWORD PTR ds:[esi]
  414822:	dec    ecx
  414823:	push   0x89b130e5
  414828:	jb     0x4147f2
  41482a:	fs std 
  41482c:	enter  0x522b,0xc0
  414830:	(bad)  
  414831:	fcmovnu st,st(4)
  414833:	out    dx,eax
  414834:	pop    eax
  414835:	sti    
  414836:	mov    BYTE PTR [ecx+edx*1+0x7c],cl
  41483a:	icebp  
  41483b:	pop    ebx
  41483c:	call   0x588a1ec
  414841:	xchg   ebp,eax
  414842:	add    DWORD PTR [edx+ebx*2+0x6a5f3b0b],0xffffff81
  41484a:	arpl   WORD PTR [eax],ax
  41484c:	loop   0x414893
  41484e:	jae    0x4148b1
  414850:	xor    eax,0x4c1ddad9
  414856:	xor    DWORD PTR [esi-0x17],0x87d784b7
  41485d:	push   esi
  41485e:	sbb    ax,0x7814
  414862:	fs std 
  414864:	fnstcw WORD PTR [ecx]
  414866:	or     eax,0x6bf39d91
  41486b:	mov    ah,dl
  41486d:	fs test eax,0x4e309276
  414873:	aaa    
  414874:	mov    al,BYTE PTR [eax]
  414876:	sub    DWORD PTR [edx-0x58052966],esp
  41487c:	sbb    al,0x96
  41487f:	call   0x729:0xe9d9f2e6
  414886:	pop    ebp
  414887:	jle    0x41484f
  414889:	mov    eax,ds:0xfcccacf4
  41488e:	aam    0x3f
  414890:	jle    0x4148ed
  414892:	cmp    bl,BYTE PTR [ecx]
  414894:	jp     0x4148a8
  414896:	imul   esi,DWORD PTR [ebx],0x57
  414899:	aaa    
  41489a:	popf   
  41489b:	adc    ah,bh
  41489d:	dec    esi
  41489e:	out    dx,eax
  41489f:	adc    BYTE PTR [ebx+0x2],0x9
  4148a3:	pop    esi
  4148a4:	jge    0x414914
  4148a6:	ret    
  4148a7:	mov    DWORD PTR [edx+0x70669374],esp
  4148ad:	stos   BYTE PTR es:[edi],al
  4148ae:	pop    edi
  4148af:	daa    
  4148b0:	jg     0x414858
  4148b2:	gs xchg edi,eax
  4148b4:	add    edx,ebp
  4148b6:	clc    
  4148b7:	adc    dh,BYTE PTR [esi+0x4f]
  4148ba:	jecxz  0x4148d5
  4148bc:	push   edi
  4148bd:	pop    esi
  4148be:	sbb    eax,0xe89b9d64
  4148c3:	and    ah,ah
  4148c5:	xor    edx,DWORD PTR [ebp+0x3bde0ba7]
  4148cb:	jmp    0xdbc08aef
  4148d0:	pop    edi
  4148d1:	mov    DWORD PTR [eax+0x5b],edx
  4148d4:	jmp    0x8f9ac929
  4148d9:	add    al,0x4a
  4148db:	jmp    0x41494d
  4148dd:	es inc edx
  4148df:	adc    eax,0xfec9f94f
  4148e4:	push   cs
  4148e5:	xor    al,0x4
  4148e7:	lds    ebp,FWORD PTR [esi]
  4148e9:	in     al,0x6f
  4148eb:	add    eax,0x8a66370e
  4148f0:	clc    
  4148f1:	push   es
  4148f2:	test   eax,0xa5cd4718
  4148f7:	xor    DWORD PTR [eax],esp
  4148f9:	std    
  4148fa:	inc    esp
  4148fb:	cmp    eax,0xb5e779d4
  414900:	lods   al,BYTE PTR ds:[esi]
  414901:	dec    ecx
  414902:	jns    0x41488f
  414904:	mov    cl,0x22
  414906:	(bad)  
  414907:	adc    DWORD PTR [ecx+ebp*4-0x5b42e4d8],eax
  41490e:	sti    
  41490f:	and    eax,DWORD PTR [ebx+0x6d2389ab]
  414915:	cld    
  414916:	pop    DWORD PTR [ebx]
  414918:	mov    BYTE PTR [eax-0x2ece6954],0x71
  41491f:	mov    ah,0x41
  414921:	or     cl,BYTE PTR [edx+0x59750225]
  414927:	mov    BYTE PTR [ebx+edx*1],bl
  41492a:	sbb    BYTE PTR [edx-0x1aacc62],ah
  414930:	jle    0x41499a
  414932:	mov    DWORD PTR ds:0xb410e1a0,ecx
  414938:	push   ebp
  414939:	loopne 0x414927
  41493b:	inc    eax
  41493c:	mov    esp,DWORD PTR [ebx+0x4]
  41493f:	xor    DWORD PTR [edi-0x7a2584d2],edi
  414945:	mov    ebp,0xa4d4f670
  41494a:	pop    edx
  41494b:	mov    ch,0xae
  41494d:	mov    al,ds:0xd0c37997
  414952:	sbb    al,0xa4
  414954:	xor    al,0xcb
  414956:	ja     0x41492a
  414958:	push   esi
  414959:	mov    BYTE PTR [ecx+0x62b5ffa6],cl
  41495f:	push   edx
  414960:	mov    ?,WORD PTR [edx-0x6d]
  414963:	jbe    0x4148f5
  414965:	sahf   
  414966:	push   esi
  414967:	repz sub edi,eax
  41496a:	cdq    
  41496b:	and    DWORD PTR [edi],ecx
  41496d:	jne    0x41490a
  41496f:	and    edx,edi
  414971:	test   al,0x87
  414973:	fucomp st(6)
  414975:	lock aas 
  414977:	push   ebx
  414978:	adc    BYTE PTR [ebp-0xd],cl
  41497b:	mov    ds:0x82d3a2fc,al
  414980:	out    dx,eax
  414981:	inc    ecx
  414982:	xchg   ecx,eax
  414983:	hlt    
  414984:	xchg   ebx,eax
  414985:	or     bh,BYTE PTR [edx-0x499c3238]
  41498b:	adc    DWORD PTR [ebx],esi
  41498d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498e:	mov    edi,0x76543094
  414993:	xchg   esp,eax
  414994:	inc    ecx
  414995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414996:	aas    
  414997:	sub    BYTE PTR [edi+0x64b82fe9],al
  41499d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41499e:	(bad)  
  4149a2:	test   DWORD PTR [eax+0x75aca3d5],0xc38ccf65
  4149ac:	in     eax,dx
  4149ad:	out    0xa8,eax
  4149af:	fisttp WORD PTR [edi+0x3c67d792]
  4149b5:	daa    
  4149b6:	cmp    BYTE PTR [ebx],bh
  4149b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b9:	dec    ecx
  4149ba:	mov    al,0x1e
  4149bc:	test   al,0xb3
  4149be:	shr    BYTE PTR [ecx-0x4e],1
  4149c1:	es cwde 
  4149c3:	and    DWORD PTR [esi-0x769ec767],0x98c9ee62
  4149cd:	lods   al,BYTE PTR ds:[esi]
  4149ce:	mov    bh,BYTE PTR [edi]
  4149d0:	or     eax,0x231dbf6
  4149d5:	push   ss
  4149d6:	test   DWORD PTR [edx],ebp
  4149d8:	lahf   
  4149d9:	dec    esp
  4149da:	sub    edx,ebx
  4149dc:	in     eax,0xa7
  4149de:	loop   0x4149b9
  4149e0:	dec    ecx
  4149e1:	and    DWORD PTR [ebp-0x61],esi
  4149e4:	enter  0x874,0xf3
  4149e8:	sub    BYTE PTR [ecx],dh
  4149ea:	and    DWORD PTR [ebp-0x17d834fb],edx
  4149f0:	fsub   st,st(7)
  4149f2:	xor    dl,al
  4149f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149f5:	retf   
  4149f6:	and    bl,cl
  4149f8:	sub    eax,0x76b63b1
  4149fd:	pop    es
  4149fe:	mov    BYTE PTR [esi+0x3e],0x90
  414a02:	add    ch,ah
  414a04:	clc    
  414a05:	rol    eax,0x83
  414a08:	test   eax,0x445f87ea
  414a0d:	sbb    BYTE PTR [ebp+0x52],dl
  414a10:	sub    cl,BYTE PTR [esi+0x2b]
  414a13:	push   cs
  414a14:	div    BYTE PTR [ebx-0x3fbd7d25]
  414a1a:	imul   esi,DWORD PTR [edx+eiz*8+0x7b],0xffffffeb
  414a1f:	adc    DWORD PTR [edx],0xffffffee
  414a22:	xchg   ebp,eax
  414a23:	inc    eax
  414a24:	push   es
  414a25:	aaa    
  414a26:	stos   BYTE PTR es:[edi],al
  414a27:	add    eax,0x177ce9cc
  414a2c:	xchg   esi,eax
  414a2d:	cdq    
  414a2e:	jl     0x414a86
  414a30:	repnz pop esi
  414a32:	lods   eax,DWORD PTR ds:[esi]
  414a33:	dec    edx
  414a34:	pop    es
  414a35:	add    ebp,DWORD PTR [ecx+0x7c924ea]
  414a3b:	mov    ebx,eax
  414a3d:	dec    ebp
  414a3e:	pop    ss
  414a3f:	add    bl,BYTE PTR cs:[esi+0x24]
  414a43:	in     al,dx
  414a44:	loop   0x414a78
  414a46:	popf   
  414a47:	xor    eax,0xf12af82b
  414a4c:	iret   
  414a4d:	nop
  414a4e:	jecxz  0x414a03
  414a50:	xchg   ebx,eax
  414a51:	into   
  414a52:	mov    ah,0xb6
  414a54:	jno    0x414a5a
  414a56:	inc    esi
  414a57:	adc    bh,bl
  414a59:	popf   
  414a5a:	adc    eax,0xaece1abb
  414a5f:	and    BYTE PTR [eax],0xa9
  414a62:	mov    eax,DWORD PTR [ebx-0x126ed72f]
  414a68:	and    edi,0xe53e0423
  414a6e:	sub    BYTE PTR [esi],ah
  414a70:	or     BYTE PTR [ebx-0x5dcc5e1e],al
  414a76:	shr    dh,cl
  414a78:	std    
  414a79:	jne    0x414a83
  414a7b:	nop
  414a7c:	cmp    ebp,ebx
  414a7e:	test   BYTE PTR [ebx+0x8d8687],0x45
  414a85:	dec    esp
  414a86:	jae    0x414a36
  414a88:	mov    edi,0x6a73ddc9
  414a8d:	add    al,0x4
  414a8f:	pop    edi
  414a90:	add    al,ch
  414a92:	adc    al,0x55
  414a94:	stos   DWORD PTR es:[edi],eax
  414a95:	pop    ebp
  414a96:	fidiv  WORD PTR [eax+0x4b]
  414a99:	sub    DWORD PTR [eax-0x26ca7772],0xd994eec9
  414aa3:	or     ecx,edx
  414aa5:	arpl   si,cx
  414aa7:	shr    DWORD PTR [eax],1
  414aa9:	in     eax,0x7
  414aab:	fdivr  DWORD PTR [edx]
  414aad:	lds    edx,FWORD PTR [ecx+eiz*8+0x41]
  414ab1:	iret   
  414ab2:	push   esi
  414ab3:	mov    dh,0xc0
  414ab5:	add    BYTE PTR [ebx],ah
  414ab7:	aam    0x41
  414ab9:	nop
  414aba:	xchg   esi,eax
  414abb:	pop    esp
  414abc:	stos   DWORD PTR es:[edi],eax
  414abd:	test   eax,0x5ef59b30
  414ac2:	jne    0x414b29
  414ac4:	shl    dh,0xd6
  414ac7:	(bad)  
  414ac8:	stos   DWORD PTR es:[edi],eax
  414ac9:	mov    ecx,DWORD PTR [ebx+0x5d]
  414acc:	jae    0x414abd
  414ace:	push   cs
  414acf:	scas   al,BYTE PTR es:[edi]
  414ad0:	call   0xeeb:0x42254d63
  414ad7:	call   0x985c3b2c
  414adc:	jl     0x414ad4
  414ade:	fdivr  st(0),st
  414ae0:	jl     0x414b5f
  414ae2:	int    0x54
  414ae4:	add    al,0x53
  414ae6:	xor    esp,DWORD PTR [eax-0x76]
  414ae9:	mov    bh,0xd8
  414aeb:	mov    fs,ecx
  414aed:	cld    
  414aee:	or     dl,bl
  414af0:	mov    ebp,0xa6b79ba
  414af5:	dec    esi
  414af6:	inc    ecx
  414af7:	jp     0x414aa6
  414af9:	mov    ebx,0x32fe3c38
  414afe:	ret    0x3592
  414b01:	addr16 dec esp
  414b03:	and    dl,BYTE PTR [ebp-0x23]
  414b06:	pop    ecx
  414b07:	jp     0x414b03
  414b09:	or     al,0xd3
  414b0b:	rol    BYTE PTR [ebx+0x9],0xe4
  414b0f:	jge    0x414b08
  414b11:	pop    ds
  414b12:	lock and BYTE PTR [ebx+0x8],cl
  414b16:	jnp    0x414b8a
  414b18:	mov    ds:0x7b973050,eax
  414b1d:	sub    DWORD PTR [esi],esi
  414b1f:	iret   
  414b20:	ins    DWORD PTR es:[edi],dx
  414b21:	fsubr  QWORD PTR [eax]
  414b23:	outs   dx,DWORD PTR ds:[esi]
  414b24:	shl    edi,cl
  414b26:	add    edi,DWORD PTR [eax+0x547790f5]
  414b2c:	nop
  414b2d:	ror    ah,1
  414b2f:	add    DWORD PTR [eax],0x7b378526
  414b35:	shl    BYTE PTR [edx],cl
  414b37:	or     esp,DWORD PTR ds:[ebp+eiz*4-0x7b]
  414b3c:	cmp    DWORD PTR [ebp+0x28],esi
  414b3f:	js     0x414b1f
  414b41:	sti    
  414b42:	jl     0x414acb
  414b44:	mov    ecx,0xb27102b6
  414b49:	xchg   eax,esp
  414b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b4c:	cmp    al,0x8a
  414b4e:	and    ebp,DWORD PTR [ebp+0x72]
  414b51:	idiv   DWORD PTR [ecx-0x37693807]
  414b57:	test   DWORD PTR ds:0x20c52e3a,0x2e4f26ac
  414b61:	bound  eax,QWORD PTR [ebp+0x74]
  414b64:	stc    
  414b65:	je     0x414b1b
  414b67:	retf   0x7e4d
  414b6a:	lea    esp,[bp+0x4caa]
  414b6f:	shl    BYTE PTR [ecx],1
  414b71:	and    edi,ebp
  414b73:	mov    esi,0x2c11ea35
  414b78:	outs   dx,BYTE PTR ds:[esi]
  414b79:	push   edx
  414b7a:	xchg   ebp,eax
  414b7b:	or     al,0x62
  414b7d:	sbb    DWORD PTR [ebp+edx*4-0xa],edi
  414b81:	scas   al,BYTE PTR es:[edi]
  414b82:	mov    al,ds:0x24ce4f3f
  414b87:	add    ah,BYTE PTR [ebx+eax*2]
  414b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b8b:	(bad)  
  414b8d:	adc    eax,0x146fe4ce
  414b92:	retf   
  414b93:	pushf  
  414b94:	es push eax
  414b96:	mov    edx,0xeaa9518a
  414b9b:	jae    0x414b6d
  414b9d:	push   esp
  414b9e:	scas   eax,DWORD PTR es:[edi]
  414b9f:	xor    DWORD PTR [eax+0x54],ebp
  414ba2:	imul   ebp,esi,0xa5465595
  414ba8:	into   
  414ba9:	pop    eax
  414baa:	arpl   bx,bx
  414bac:	gs sub al,0xc6
  414baf:	mov    ch,0xc6
  414bb1:	xor    bh,BYTE PTR [esi]
  414bb3:	inc    eax
  414bb4:	pop    edi
  414bb5:	imul   edx,DWORD PTR ds:[esi-0x7c2aba72],0xa88f325c
  414bc0:	out    0x7a,eax
  414bc2:	adc    eax,0x86c91d73
  414bc7:	xchg   DWORD PTR [ecx],ebp
  414bc9:	rcr    DWORD PTR [ecx+0x2c],1
  414bcc:	jecxz  0x414c07
  414bce:	adc    cl,0x6a
  414bd1:	ss xchg edx,eax
  414bd3:	dec    ecx
  414bd4:	pusha  
  414bd5:	fimul  WORD PTR ds:0x319fa303
  414bdb:	nop
  414bdc:	mov    gs,WORD PTR ds:0xc95cce9c
  414be2:	or     DWORD PTR [ecx-0x44aa4e4c],0x78cce038
  414bec:	inc    eax
  414bed:	int3   
  414bee:	pop    ds
  414bef:	icebp  
  414bf0:	out    dx,al
  414bf1:	sbb    al,bl
  414bf3:	les    eax,FWORD PTR [edi+eiz*4-0x2e]
  414bf7:	cmp    al,0x2a
  414bf9:	(bad)  
  414bfa:	mov    al,0x10
  414bfc:	mov    al,0x62
  414bfe:	addr16 ret 
  414c00:	leave  
  414c01:	shl    ecx,0xf6
  414c04:	inc    edi
  414c05:	in     al,dx
  414c06:	cmp    BYTE PTR [eax-0x7650dba4],0x1e
  414c0d:	mov    ebp,0xdd6a70d2
  414c12:	mov    bh,0xc9
  414c14:	sub    BYTE PTR [esi+edi*2],ah
  414c17:	and    al,0x13
  414c19:	xor    BYTE PTR [edx+0x6d],ah
  414c1c:	cmp    DWORD PTR [ecx],eax
  414c1e:	jle    0x414be0
  414c20:	sub    esi,DWORD PTR [esi]
  414c22:	retf   
  414c23:	call   0xa943177d
  414c28:	rcr    DWORD PTR ds:0x62aff8de,0xb2
  414c2f:	push   ebp
  414c30:	lods   eax,DWORD PTR ds:[esi]
  414c31:	inc    edi
  414c32:	mov    BYTE PTR [ebp-0x77935a21],dh
  414c38:	dec    edi
  414c39:	dec    esp
  414c3a:	ud0    edx,DWORD PTR [edi]
  414c3d:	lds    edi,FWORD PTR [ecx-0x16]
  414c40:	add    BYTE PTR [ebx-0x4672754],bl
  414c46:	(bad)  
  414c47:	loop   0x414c92
  414c49:	jns    0x414c9d
  414c4b:	dec    ecx
  414c4c:	mov    eax,ds:0xc7440dc6
  414c51:	jb     0x414c66
  414c53:	les    esp,FWORD PTR [edx-0x1fa37dc6]
  414c59:	jecxz  0x414bf3
  414c5b:	gs ja  0x414c55
  414c5e:	xor    ah,BYTE PTR [ebp+edi*8+0x3c]
  414c62:	mov    esi,0x22ca5776
  414c67:	adc    edx,ecx
  414c69:	jge    0x414c4a
  414c6b:	out    dx,eax
  414c6c:	push   eax
  414c6d:	pop    ebp
  414c6e:	inc    edi
  414c6f:	(bad)  
  414c70:	not    DWORD PTR [ecx-0x27]
  414c73:	fbstp  TBYTE PTR [edx-0x27e867a3]
  414c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c7a:	in     eax,dx
  414c7b:	test   eax,0xbd0c0cac
  414c80:	outs   dx,DWORD PTR ds:[esi]
  414c81:	test   DWORD PTR [ebp+0x65],esp
  414c84:	mov    ?,WORD PTR [ebp*1-0x27109220]
  414c8b:	(bad)
  414c90:	add    eax,0xb1c60e45
  414c95:	xchg   DWORD PTR [eax-0x58df9479],eax
  414c9b:	push   ss
  414c9c:	dec    ecx
  414c9d:	outs   dx,BYTE PTR ds:[esi]
  414c9e:	mov    eax,0x5ff37a15
  414ca3:	fdivr  DWORD PTR [eax+0x2d9bf70]
  414ca9:	icebp  
  414caa:	cmp    BYTE PTR [eax],0x1f
  414cad:	cwde   
  414cae:	xchg   esi,eax
  414caf:	iret   
  414cb0:	fistp  WORD PTR [ecx+edx*2]
  414cb3:	cmp    esi,DWORD PTR [ebx-0x89c4aab]
  414cb9:	mov    WORD PTR [ebx+0x6f],gs
  414cbc:	les    edx,FWORD PTR [eax-0x26]
  414cbf:	adc    ecx,DWORD PTR [esi]
  414cc1:	fidivr DWORD PTR [eax-0x638bf913]
  414cc7:	rol    BYTE PTR [esi],0xd5
  414cca:	mov    esp,eax
  414ccc:	sbb    DWORD PTR [ebx-0x2e],ebp
  414ccf:	cdq    
  414cd0:	outs   dx,BYTE PTR ds:[esi]
  414cd1:	xor    eax,0x1f37ef4a
  414cd6:	sub    eax,0x5846395c
  414cdb:	push   edi
  414cdc:	xchg   esp,eax
  414cdd:	lds    ecx,FWORD PTR [eax+ebx*2]
  414ce0:	leave  
  414ce1:	push   ebp
  414ce2:	mov    dh,0x22
  414ce4:	shl    DWORD PTR [ebx+0x42],1
  414ce7:	cdq    
  414ce8:	gs xchg esi,eax
  414cea:	leave  
  414ceb:	pop    eax
  414cec:	int    0xd0
  414cee:	cdq    
  414cef:	inc    edi
  414cf0:	(bad)  
  414cf1:	sahf   
  414cf2:	imul   esp,DWORD PTR [ebp-0x5],0xa7363f6b
  414cf9:	push   ebp
  414cfa:	push   edx
  414cfb:	(bad)  
  414cfc:	mov    eax,0xa087093f
  414d01:	test   eax,edi
  414d03:	in     al,dx
  414d04:	or     edi,DWORD PTR [eax+0x614382b0]
  414d0a:	pop    edi
  414d0b:	xlat   BYTE PTR ds:[ebx]
  414d0c:	les    ebp,FWORD PTR [esi]
  414d0e:	(bad)  
  414d0f:	cmp    BYTE PTR [edx*8+0x30da0271],al
  414d16:	add    eax,0xdd7855b0
  414d1b:	xchg   edx,eax
  414d1c:	pop    eax
  414d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d1e:	or     al,0x53
  414d20:	(bad)  
  414d22:	pop    esp
  414d23:	ror    BYTE PTR [esi+0x63102b1d],0xee
  414d2a:	and    eax,0xb143a1ad
  414d2f:	inc    ecx
  414d30:	push   esp
  414d31:	lds    eax,FWORD PTR [ebp+0x1bbb7635]
  414d37:	in     eax,0xd4
  414d39:	push   ecx
  414d3a:	jb     0x414da1
  414d3c:	jb     0x414d21
  414d3e:	mov    DWORD PTR [eax],esp
  414d40:	push   edx
  414d41:	fcom   QWORD PTR [esi-0x6b]
  414d44:	xchg   ebx,eax
  414d45:	inc    edx
  414d46:	(bad)  
  414d47:	mov    ebx,0x33cc3bd3
  414d4c:	arpl   WORD PTR [edi-0x1fb0d67e],ax
  414d52:	push   edi
  414d53:	clc    
  414d54:	pushf  
  414d55:	mov    ecx,0x726b0621
  414d5a:	loope  0x414d9d
  414d5c:	push   ss
  414d5d:	(bad)  
  414d5e:	push   ds
  414d5f:	loop   0x414dd8
  414d61:	mov    bh,0xa0
  414d63:	lds    ebp,FWORD PTR [ebx+0x41]
  414d66:	mov    edx,0x750687b
  414d6b:	popf   
  414d6c:	clc    
  414d6d:	aaa    
  414d6e:	or     al,0x80
  414d71:	(bad)  
  414d72:	mov    ah,0x8a
  414d74:	xor    BYTE PTR [edx-0x6c15e823],al
  414d7a:	cmp    ebx,eax
  414d7c:	jno    0x414d49
  414d7e:	xchg   BYTE PTR [ecx],dh
  414d80:	rol    eax,1
  414d82:	sahf   
  414d83:	aas    
  414d84:	mov    esp,0xecbb2509
  414d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d8a:	and    al,0x3b
  414d8c:	(bad)  
  414d8d:	sub    edx,DWORD PTR ds:0x21b511b3
  414d93:	outs   dx,DWORD PTR ds:[esi]
  414d94:	cmp    dl,cl
  414d96:	or     al,0x93
  414d98:	sub    DWORD PTR [eax+0x25],0xffffffcd
  414d9c:	cmp    DWORD PTR [eax+0x6caf428d],esp
  414da2:	and    eax,0x34c73adf
  414da7:	dec    esp
  414da8:	push   0xffffff9d
  414daa:	and    BYTE PTR [esi],cl
  414dac:	sar    al,cl
  414dae:	aas    
  414daf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414db0:	pop    eax
  414db1:	out    dx,al
  414db2:	mov    ebx,esp
  414db4:	and    eax,0x8dd81e26
  414db9:	scas   al,BYTE PTR es:[edi]
  414dba:	in     al,0xa9
  414dbc:	push   edi
  414dbd:	loope  0x414dee
  414dbf:	inc    edx
  414dc0:	cmc    
  414dc1:	fcom   QWORD PTR [edi-0x6c]
  414dc4:	cwde   
  414dc5:	pop    es
  414dc6:	aam    0x47
  414dc8:	ins    DWORD PTR es:[edi],dx
  414dc9:	sbb    edx,DWORD PTR [ebx+edx*4]
  414dcc:	dec    ebx
  414dcd:	mov    edx,0x44e78876
  414dd2:	scas   al,BYTE PTR es:[edi]
  414dd3:	cs mov bh,0x31
  414dd6:	sbb    eax,0xe7dcaed8
  414ddb:	add    BYTE PTR [ebp+0x23436035],ah
  414de1:	or     ebx,esi
  414de3:	cmp    dh,BYTE PTR [edx-0x15]
  414de6:	jle    0x414dfe
  414de8:	mov    ebx,0xd0a84ac6
  414ded:	inc    edx
  414dee:	inc    eax
  414def:	mov    ah,0xdd
  414df1:	outs   dx,BYTE PTR ds:[esi]
  414df2:	xor    ch,ah
  414df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414df5:	cld    
  414df6:	xor    dx,0x33
  414dfa:	adc    BYTE PTR [ebp+0x14ae6011],ch
  414e00:	or     bl,BYTE PTR [ebp+0x266ea602]
  414e06:	xchg   edx,eax
  414e07:	arpl   bx,di
  414e09:	shr    BYTE PTR [ecx-0x74],cl
  414e0c:	add    BYTE PTR [esi+ebp*8],al
  414e0f:	sub    eax,0xcc6f3fb3
  414e14:	add    DWORD PTR [ebx-0x7d],0xffffffa6
  414e18:	sar    BYTE PTR [ebp+0x6c67fd1b],cl
  414e1e:	jo     0x414dec
  414e20:	jmp    0xef55:0x13f23c1
  414e27:	out    0x39,al
  414e29:	xchg   ch,ah
  414e2b:	pop    esp
  414e2c:	push   esi
  414e2d:	hlt    
  414e2e:	cs dec esp
  414e30:	add    ebp,DWORD PTR [ecx+ecx*4]
  414e33:	hlt    
  414e34:	fstp   DWORD PTR [esi]
  414e36:	push   eax
  414e37:	adc    BYTE PTR [esi+0x348aa0f6],0x60
  414e3e:	hlt    
  414e3f:	(bad)  [ecx+0x5e]
  414e42:	adc    ebx,DWORD PTR [esi]
  414e44:	inc    eax
  414e45:	mov    dl,0xb
  414e47:	push   ds
  414e48:	cmp    dl,BYTE PTR [ebx-0x5d74e685]
  414e4e:	stos   BYTE PTR es:[edi],al
  414e4f:	icebp  
  414e50:	imul   ecx,DWORD PTR [edi+0x1da67a92],0xffffff84
  414e57:	outs   dx,BYTE PTR ds:[esi]
  414e58:	pop    ss
  414e59:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  414e5b:	and    bl,BYTE PTR [edx]
  414e5d:	jmp    0x414e5e
  414e5f:	sub    eax,0x1c462e55
  414e64:	cmp    ebx,DWORD PTR [edi+ebx*1]
  414e67:	popf   
  414e68:	movzx  ebp,BYTE PTR ds:[edx-0x4adde9ce]
  414e70:	out    0xd3,al
  414e72:	stc    
  414e73:	jae    0x414ee6
  414e75:	sahf   
  414e76:	fidivr DWORD PTR [esi]
  414e78:	scas   eax,DWORD PTR es:[edi]
  414e79:	adc    eax,0x71175c6a
  414e7e:	int3   
  414e7f:	sbb    DWORD PTR [eax+eiz*8+0x26aaaef2],esp
  414e86:	cli    
  414e87:	push   cs
  414e88:	mov    eax,ds:0xa3ea7163
  414e8d:	sub    ecx,DWORD PTR [eax+0x3656a25d]
  414e93:	and    ch,dl
  414e95:	jb     0x414ef4
  414e97:	and    al,0x6d
  414e99:	hlt    
  414e9a:	pop    es
  414e9b:	inc    esp
  414e9c:	stos   BYTE PTR es:[edi],al
  414e9d:	xor    al,0x5e
  414e9f:	shl    edi,0x8c
  414ea2:	or     ebx,DWORD PTR [esi+0x32f37537]
  414ea8:	cmp    ah,BYTE PTR ds:0xa3430b89
  414eae:	push   ebx
  414eaf:	fimul  DWORD PTR [eax+0x76]
  414eb2:	xor    DWORD PTR [edx+0x89cc077],ebp
  414eb8:	fwait
  414eb9:	and    DWORD PTR [ebx-0x5a8194fb],esp
  414ebf:	bound  esp,QWORD PTR [edi+0x69]
  414ec2:	pop    eax
  414ec3:	out    0xe,eax
  414ec5:	mov    dh,0x81
  414ec7:	cli    
  414ec8:	not    DWORD PTR ds:0x632b264f
  414ece:	std    
  414ecf:	cld    
  414ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed1:	pop    edx
  414ed2:	xchg   edi,eax
  414ed3:	stos   DWORD PTR es:[edi],eax
  414ed4:	mov    esi,0xd46232ff
  414ed9:	pusha  
  414eda:	or     ebp,DWORD PTR ds:0xb4c6757f
  414ee0:	xor    esp,edx
  414ee2:	xchg   edi,eax
  414ee3:	jne    0x414f59
  414ee5:	sub    BYTE PTR [edx+0x33],dl
  414ee8:	inc    esp
  414ee9:	cli    
  414eea:	lds    ebp,FWORD PTR [edi+eax*8+0x6eb7efe4]
  414ef1:	xchg   ebp,eax
  414ef2:	adc    ecx,ebx
  414ef4:	add    dh,BYTE PTR [ebx]
  414ef6:	xchg   edi,eax
  414ef7:	cmp    eax,0x2e72a7cf
  414efc:	cli    
  414efd:	and    al,0x7e
  414eff:	out    0x89,al
  414f01:	mov    WORD PTR [ebx+0x49],?
  414f04:	jmp    0x414efa
  414f06:	cs data16 es cmp dl,0x53
  414f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0d:	xchg   edx,eax
  414f0e:	(bad)  
  414f0f:	xchg   edx,eax
  414f10:	jne    0x414eed
  414f12:	push   ecx
  414f13:	sbb    bl,BYTE PTR [esi-0x46b4369b]
  414f19:	cmc    
  414f1a:	sub    esi,DWORD PTR fs:[edx-0x4d]
  414f1e:	cmp    DWORD PTR [edi+ebp*1+0x23b637e4],ebx
  414f25:	and    esi,ebx
  414f27:	shl    DWORD PTR [edx+eiz*8],cl
  414f2a:	and    eax,0x544bdc74
  414f2f:	or     eax,0xea0b12e7
  414f34:	push   0xffffffc9
  414f36:	call   0xffa6a892
  414f3b:	xchg   edx,eax
  414f3c:	mov    ds:0x1e304533,al
  414f41:	dec    esi
  414f42:	loop   0x414f5c
  414f44:	dec    edx
  414f45:	push   ebx
  414f46:	fld    QWORD PTR [ebx-0x23]
  414f49:	out    dx,al
  414f4a:	and    ch,BYTE PTR [esi-0x67]
  414f4d:	cli    
  414f4e:	mov    dh,0xe2
  414f50:	fstp   DWORD PTR [eax]
  414f52:	inc    esp
  414f53:	sub    esp,DWORD PTR [edx+0xa20bb50]
  414f59:	fsub   DWORD PTR [ebx+ebp*8+0x7]
  414f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5e:	pop    esi
  414f5f:	cmp    al,0x26
  414f61:	and    al,0xfd
  414f63:	(bad)  
  414f64:	outs   dx,BYTE PTR ds:[esi]
  414f65:	add    eax,0xf8abef86
  414f6a:	jg     0x414f87
  414f6c:	gs push edx
  414f6e:	push   ebx
  414f6f:	dec    ebp
  414f70:	sbb    al,0x7c
  414f72:	loopne 0x414fcf
  414f74:	jle    0x414fdf
  414f76:	repnz xchg esp,eax
  414f78:	popf   
  414f79:	mov    esp,0xb237bee9
  414f7e:	mov    ds:0xb7304a8d,eax
  414f83:	pop    es
  414f84:	std    
  414f85:	shl    BYTE PTR [ecx+0x18],1
  414f88:	loop   0x415002
  414f8a:	cmp    bl,dh
  414f8c:	sub    BYTE PTR [ebx-0xf],bl
  414f8f:	std    
  414f90:	xchg   DWORD PTR [ebp-0x3b46a4ef],eax
  414f96:	jbe    0x414f89
  414f98:	ret    
  414f99:	cs push esp
  414f9b:	(bad)  
  414f9c:	adc    eax,0x35fd47b2
  414fa1:	shl    BYTE PTR [edi+edi*2+0xc],0x81
  414fa6:	mov    al,0x1b
  414fa8:	imul   BYTE PTR [edi-0x7c95cbc6]
  414fae:	out    dx,eax
  414faf:	out    0xf9,al
  414fb1:	inc    esi
  414fb2:	sub    DWORD PTR [esi+0xe217e1a],edx
  414fb8:	out    0x3,eax
  414fba:	jnp    0x41502a
  414fbc:	repz mov eax,ds:0x29d65a27
  414fc2:	(bad)  
  414fc3:	(bad)  
  414fc5:	(bad)  
  414fc6:	(bad)  
  414fc7:	fwait
  414fc8:	dec    ebx
  414fc9:	hlt    
  414fca:	push   ebx
  414fcb:	addr16 jp 0x414fb4
  414fce:	shl    DWORD PTR [esi+0x415fb362],0xf8
  414fd5:	retf   0x2ea9
  414fd8:	xlat   BYTE PTR ds:[ebx]
  414fd9:	jp     0x414f9d
  414fdb:	mov    ?,WORD PTR ds:0x2739f5d0
  414fe1:	test   esp,ebp
  414fe3:	pop    ebp
  414fe4:	push   ss
  414fe5:	not    DWORD PTR [ecx+0x20f3efd0]
  414feb:	mov    eax,0xf0c743ce
  414ff0:	inc    edi
  414ff1:	out    0x82,al
  414ff3:	(bad)  
  414ff4:	out    0x8e,al
  414ff6:	adc    al,0x71
  414ff8:	mov    dl,0x7b
  414ffa:	jnp    0x41500f
  414ffc:	xchg   ecx,eax
  414ffd:	push   eax
  414ffe:	dec    edi
  414fff:	in     al,dx
  415000:	div    DWORD PTR [eax-0x3ca94c3b]
  415006:	imul   esp,DWORD PTR [ebp-0x5c],0x25
  41500a:	adc    ebp,DWORD PTR [edx-0xf]
  41500d:	ja     0x414fea
  41500f:	xor    bh,cl
  415011:	mov    bl,BYTE PTR [ebx-0x63]
  415014:	sti    
  415015:	pop    ebp
  415016:	xchg   esp,eax
  415017:	push   0xffffffca
  415019:	cmp    dh,BYTE PTR [edi-0x67]
  41501c:	std    
  41501d:	fnstsw WORD PTR [edx]
  41501f:	retf   
  415020:	daa    
  415021:	bound  ecx,QWORD PTR [eax]
  415023:	pop    esp
  415024:	add    BYTE PTR [eax+0x59d95f93],0xd0
  41502b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41502c:	stos   BYTE PTR es:[edi],al
  41502d:	(bad)  
  41502e:	mov    eax,0xfbff89ee
  415033:	fdivrp st(6),st
  415035:	dec    edi
  415036:	call   0xe78e:0x9aaf964b
  41503d:	in     al,0x97
  41503f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415040:	cli    
  415041:	add    al,BYTE PTR [edi]
  415043:	or     al,0x4a
  415045:	loopne 0x4150bb
  415047:	out    dx,eax
  415048:	or     DWORD PTR [edx-0x3f],0x37e97130
  41504f:	retf   
  415050:	enter  0xa40,0x89
  415054:	push   ecx
  415055:	rcr    edx,0xe1
  415058:	mov    WORD PTR [ebx+0x72afa3c7],es
  41505e:	xor    ebx,DWORD PTR ds:0xfe3771cb
  415064:	ret    0x36bb
  415067:	add    eax,0x9359641b
  41506c:	xchg   DWORD PTR [edi+0x604d152],ecx
  415072:	adc    bl,cl
  415074:	test   ebx,eax
  415076:	sub    cl,BYTE PTR [edx]
  415078:	xchg   BYTE PTR [ebp+0x7423de16],bl
  41507e:	hlt    
  41507f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415080:	sbb    BYTE PTR [ebx-0x76],cl
  415083:	fcom   DWORD PTR [ebp+0x5b]
  415086:	vpmulhuw ymm4,ymm2,YMMWORD PTR [ecx+0x5e0e3738]
  41508e:	hlt    
  41508f:	pop    eax
  415090:	sti    
  415091:	addr16 retf 
  415093:	jne    0x4150d1
  415095:	jae    0x4150f1
  415097:	inc    edi
  415098:	add    BYTE PTR [esi],al
  41509a:	in     eax,0xec
  41509c:	sub    ecx,eax
  41509e:	out    dx,al
  41509f:	cld    
  4150a0:	imul   ebp,DWORD PTR [eax+0x2f],0x3f5ed9c5
  4150a7:	outs   dx,BYTE PTR ds:[esi]
  4150a8:	push   edx
  4150a9:	fimul  DWORD PTR [eax-0x2f]
  4150ac:	inc    ebp
  4150ad:	scas   eax,DWORD PTR es:[edi]
  4150ae:	inc    ebp
  4150af:	mov    ds:0xaf8ec31e,eax
  4150b4:	dec    ecx
  4150b5:	push   ds
  4150b6:	pop    ss
  4150b7:	fucom  st(6)
  4150b9:	adc    bl,0xad
  4150bc:	(bad)  [ecx+0x5]
  4150bf:	jno    0x415098
  4150c1:	scas   al,BYTE PTR es:[edi]
  4150c2:	xchg   edi,eax
  4150c3:	adc    ah,BYTE PTR [esi+0x66]
  4150c6:	pushf  
  4150c7:	lahf   
  4150c8:	(bad)  
  4150c9:	sbb    DWORD PTR [edi-0x12],ebp
  4150cc:	call   0xc5c190de
  4150d1:	cli    
  4150d2:	sbb    eax,0x58a7e5f0
  4150d7:	out    dx,al
  4150d8:	cmp    DWORD PTR [ecx-0x7a],eax
  4150db:	lods   al,BYTE PTR ds:[esi]
  4150dc:	mov    ebx,0x3b9b5cf8
  4150e1:	sbb    dl,cl
  4150e3:	mov    ds:0xda4463c,ax
  4150e9:	mov    ds:0xee17e028,al
  4150ee:	(bad)  
  4150f0:	outs   dx,DWORD PTR ds:[esi]
  4150f1:	push   edx
  4150f2:	add    al,0x8
  4150f4:	cdq    
  4150f5:	xor    BYTE PTR [esi-0x46],0x65
  4150f9:	cdq    
  4150fa:	aaa    
  4150fb:	mov    BYTE PTR [ebx+ecx*2-0x6672e542],bh
  415102:	lock mov bh,0xf2
  415105:	test   DWORD PTR [edx+0x28],ebp
  415108:	shr    DWORD PTR [ecx+0x5e],1
  41510b:	ja     0x4150f9
  41510d:	stc    
  41510e:	bound  edx,QWORD PTR [esi+0x2cd0a86c]
  415114:	push   es
  415115:	sti    
  415116:	fisttp DWORD PTR [eax]
  415118:	ins    DWORD PTR es:[edi],dx
  415119:	icebp  
  41511a:	je     0x41510c
  41511c:	fstp   st(0)
  41511e:	fimul  WORD PTR [ecx-0x5a]
  415121:	lods   eax,DWORD PTR ds:[esi]
  415122:	jmp    0x59e2:0xacce4ce5
  415129:	retf   
  41512a:	xlat   BYTE PTR ds:[ebx]
  41512b:	push   esp
  41512c:	leave  
  41512d:	pop    ds
  41512e:	inc    edi
  41512f:	push   esi
  415130:	rcl    DWORD PTR [edx],cl
  415132:	dec    esi
  415133:	popa   
  415134:	es inc ebp
  415136:	mov    edi,0xc0b4c54d
  41513b:	xor    eax,0x656ca864
  415140:	mov    ds:0x455b5fa5,eax
  415145:	outs   dx,DWORD PTR cs:[esi]
  415147:	xchg   esi,eax
  415148:	jne    0x415113
  41514a:	mov    ecx,DWORD PTR [eax]
  41514c:	iret   
  41514d:	aad    0x5c
  41514f:	xor    ah,BYTE PTR [edi+0x296d14e7]
  415155:	xor    cl,ah
  415157:	jo     0x415117
  415159:	push   es
  41515a:	mov    edx,0xec637105
  41515f:	mov    bh,0x2a
  415161:	add    BYTE PTR [esi+0x37],bh
  415164:	pop    ds
  415165:	shl    DWORD PTR [esi-0x753dd7bd],0x9f
  41516c:	add    ebp,esi
  41516e:	(bad)  
  41516f:	cld    
  415170:	pop    ebx
  415171:	cs pusha 
  415173:	(bad)  
  415174:	(bad)  
  415175:	fmul   DWORD PTR es:[ebp+0x70]
  415179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41517b:	cmp    esp,ecx
  41517d:	mov    bh,0xc4
  41517f:	pushf  
  415180:	adc    eax,0x3e42cd43
  415185:	mov    BYTE PTR [edx-0x5f],dl
  415188:	add    DWORD PTR [edi+0x7b],eax
  41518b:	call   0x7a1d:0x93370ce3
  415192:	inc    ebx
  415193:	mov    dl,0x8c
  415195:	daa    
  415196:	dec    ebp
  415197:	cdq    
  415198:	push   ebp
  415199:	mov    ecx,0x8a65b6f0
  41519e:	stc    
  41519f:	xor    edx,DWORD PTR ds:0x1c39417e
  4151a5:	add    al,0x69
  4151a7:	stc    
  4151a8:	sar    BYTE PTR [eax+0x52ef5df9],0xeb
  4151af:	fs cli 
  4151b1:	out    0xd8,al
  4151b3:	test   DWORD PTR [eax+ecx*1+0x1c662046],ecx
  4151ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151bb:	icebp  
  4151bc:	jmp    0x10f5:0xf55c38ca
  4151c3:	jecxz  0x415193
  4151c5:	adc    bh,BYTE PTR [esi-0x58a000eb]
  4151cb:	xchg   ecx,eax
  4151cc:	cmp    bl,bl
  4151ce:	enter  0x2def,0x5c
  4151d2:	add    eax,0x8a0b0b8
  4151d7:	scas   eax,DWORD PTR es:[edi]
  4151d8:	mov    eax,0xd8e14386
  4151dd:	in     eax,0x49
  4151df:	adc    al,0x91
  4151e1:	add    al,0x8b
  4151e3:	jmp    0x4fd7:0x20ae1e95
  4151ea:	jp     0x4151fb
  4151ec:	imul   esi,ebx,0xffffffb7
  4151ef:	jae    0x415202
  4151f1:	pop    esi
  4151f2:	popa   
  4151f3:	call   0x93f:0x6bbf23f3
  4151fa:	fild   WORD PTR [ebx]
  4151fc:	(bad)  
  4151fd:	ret    0xbf96
  415200:	icebp  
  415201:	stos   BYTE PTR es:[edi],al
  415202:	test   eax,0x9c56be90
  415207:	in     al,0x80
  415209:	es retf 
  41520b:	test   DWORD PTR [edx+0x6cf774d9],edx
  415211:	push   es
  415212:	or     BYTE PTR [eax],dl
  415214:	adc    cl,dh
  415216:	scas   al,BYTE PTR es:[edi]
  415217:	jmp    0xce97d0e
  41521c:	mov    BYTE PTR [edx+0x2e],bl
  41521f:	mov    ecx,0xb4dcb8b3
  415224:	fisubr DWORD PTR [edx-0x5ad6150e]
  41522a:	fdiv   QWORD PTR [esi+edi*2]
  41522d:	jb     0x41525a
  41522f:	mov    eax,ds:0xcba245a1
  415234:	jle    0x4151d2
  415236:	jg     0x41524f
  415238:	cmp    BYTE PTR [esi-0x72748d97],bh
  41523e:	dec    esi
  41523f:	jge    0x41528a
  415241:	rol    BYTE PTR [edi],cl
  415243:	into   
  415244:	pop    ebx
  415245:	enter  0xff4f,0x5b
  415249:	lods   al,BYTE PTR ds:[esi]
  41524a:	aaa    
  41524b:	sbb    eax,0x268e96b0
  415250:	xchg   DWORD PTR [esi],ebx
  415252:	ret    
  415253:	xlat   BYTE PTR ds:[ebx]
  415254:	inc    ebx
  415255:	or     al,0x1c
  415257:	test   esi,eax
  415259:	dec    esp
  41525a:	mov    esi,0xcb24dfe7
  41525f:	jns    0x4152d6
  415261:	inc    ebx
  415262:	sub    al,0x6d
  415264:	shl    BYTE PTR [ebx],cl
  415266:	sbb    BYTE PTR [eax-0x18],0x4
  41526a:	shl    ecx,0x85
  41526d:	and    dh,ah
  41526f:	dec    esp
  415270:	or     DWORD PTR [edx-0x45],ecx
  415273:	inc    ebp
  415274:	lahf   
  415275:	push   0xffffffa2
  415277:	cmp    BYTE PTR [eax+0x6e5e5eea],dh
  41527d:	in     eax,0xb0
  41527f:	mov    cl,0x7a
  415281:	cmp    dl,BYTE PTR [edi-0xf]
  415284:	rcr    DWORD PTR [ebx],cl
  415286:	ins    BYTE PTR es:[edi],dx
  415287:	popa   
  415288:	cdq    
  415289:	aaa    
  41528a:	int    0xf8
  41528c:	push   es
  41528d:	adc    esp,DWORD PTR [esi-0x1b]
  415290:	in     al,dx
  415291:	jp     0x415284
  415293:	mov    dh,0xa4
  415295:	push   ss
  415296:	lock cmp BYTE PTR [eax],0x48
  41529a:	dec    DWORD PTR [ebx-0x5c1b5aa2]
  4152a0:	mov    esp,DWORD PTR [ecx-0x39ad5872]
  4152a6:	jmp    0x5ab1efe
  4152ab:	popf   
  4152ac:	sub    eax,0x2e43c4a4
  4152b1:	xor    BYTE PTR [ebx],dl
  4152b3:	pop    ss
  4152b4:	add    ecx,esp
  4152b6:	mov    bh,0x83
  4152b8:	nop
  4152b9:	loopne 0x4152be
  4152bb:	xchg   esi,eax
  4152bc:	add    eax,0xbbf9dbae
  4152c1:	fcomp  DWORD PTR [ebp+0x73a8122d]
  4152c7:	jge    0x41529b
  4152c9:	mov    dl,0x1c
  4152cb:	jp     0x415278
  4152cd:	loopne 0x41528d
  4152cf:	or     eax,0x6f30bf17
  4152d4:	jle    0x4152bd
  4152d6:	and    dl,BYTE PTR [edi]
  4152d8:	mov    cl,0xc3
  4152da:	xor    al,0xde
  4152dc:	outs   dx,DWORD PTR ds:[esi]
  4152dd:	inc    esp
  4152de:	xlat   BYTE PTR ds:[ebx]
  4152df:	add    BYTE PTR [ecx],dl
  4152e1:	outs   dx,DWORD PTR ds:[esi]
  4152e2:	inc    ebp
  4152e3:	add    bh,BYTE PTR [edi-0x5d]
  4152e6:	sbb    al,0x4f
  4152e8:	adc    eax,0xf24c75bf
  4152ed:	outs   dx,BYTE PTR ds:[esi]
  4152ee:	into   
  4152ef:	mov    edi,0x7fec8256
  4152f4:	mov    ebx,0x37c0663c
  4152f9:	stos   DWORD PTR es:[edi],eax
  4152fa:	cwde   
  4152fb:	mov    cl,0xd8
  4152fd:	fnstenv [edi+eax*1]
  415300:	in     eax,dx
  415301:	in     al,dx
  415302:	sahf   
  415303:	sub    cl,al
  415305:	or     eax,0x1dc1c003
  41530a:	inc    edx
  41530b:	sbb    al,0x65
  41530d:	rcr    BYTE PTR [edi],1
  41530f:	dec    ecx
  415310:	push   ebp
  415311:	mov    ch,0xdb
  415313:	imul   ebx,DWORD PTR ds:0xd8e5edc7,0x344d2d09
  41531d:	jns    0x41539b
  41531f:	sbb    dl,BYTE PTR [ebp+0x56]
  415322:	jl     0x4152bd
  415324:	inc    eax
  415325:	and    bh,BYTE PTR [eax+ebp*2-0x32]
  415329:	imul   esi,DWORD PTR [edx-0x75cacbe4],0x34fdc2e5
  415333:	add    cl,dl
  415335:	adc    al,0x84
  415337:	jo     0x4152ef
  415339:	mov    eax,ds:0x4eb6d641
  41533e:	cmc    
  41533f:	pop    ss
  415340:	mov    esp,0xecbd73e8
  415345:	xor    BYTE PTR ds:0xb2223f48,dl
  41534b:	push   edi
  41534c:	retf   
  41534d:	or     BYTE PTR [esi],ch
  41534f:	dec    esp
  415350:	stos   BYTE PTR es:[edi],al
  415351:	sub    eax,0x967aa254
  415356:	inc    esi
  415357:	adc    eax,0xb3f609b7
  41535c:	mov    ch,0x5a
  41535e:	orps   xmm1,XMMWORD PTR [eax+0x5c]
  415362:	mov    ah,0x6f
  415364:	dec    eax
  415365:	dec    ebx
  415366:	xchg   DWORD PTR [edi-0x2f48ab85],ebx
  41536c:	mov    esi,es
  41536e:	pushf  
  41536f:	add    eax,0x51da9e63
  415374:	js     0x415399
  415376:	mov    ah,0xa8
  415378:	repnz dec esp
  41537a:	or     bh,BYTE PTR [eax+0x5d]
  41537d:	mov    ebx,0xd223a2c6
  415382:	hlt    
  415383:	jmp    0x2560:0x8c44d641
  41538a:	enter  0xba41,0x81
  41538e:	mov    dl,BYTE PTR [ecx]
  415390:	jo     0x4153bc
  415392:	cmp    esp,DWORD PTR [edi-0xe4255]
  415398:	jbe    0x415389
  41539a:	nop
  41539b:	mov    al,BYTE PTR [edi]
  41539d:	mov    al,ds:0x10c7a246
  4153a2:	shl    BYTE PTR ds:[ecx-0x62225540],1
  4153a9:	jle    0x4153fc
  4153ab:	rol    DWORD PTR [eax-0x3443119b],cl
  4153b1:	je     0x4153f7
  4153b3:	gs and eax,0x83860dc2
  4153b9:	ds push ss
  4153bb:	push   cs
  4153bc:	jns    0x41536c
  4153be:	sbb    al,0x21
  4153c0:	mov    esi,0x45d641e7
  4153c5:	repz mov bl,0xda
  4153c8:	xor    ah,BYTE PTR [esi+0x73869d7d]
  4153ce:	lods   eax,DWORD PTR ds:[esi]
  4153cf:	pop    eax
  4153d0:	adc    ebp,DWORD PTR [esi-0x2dbd15fa]
  4153d6:	dec    eax
  4153d7:	mov    gs,WORD PTR [ebx+0x412ff512]
  4153dd:	ins    BYTE PTR es:[edi],dx
  4153de:	in     al,0x26
  4153e0:	sub    DWORD PTR [ecx],esp
  4153e2:	mov    ebx,0x64c160fe
  4153e7:	jno    0x4153c9
  4153e9:	ds imul eax,esp,0xb6c9a8fa
  4153f0:	cmp    cl,BYTE PTR [ebp+0x5132b5ab]
  4153f6:	mov    ds:0xbe8a3090,eax
  4153fb:	or     esp,ebp
  4153fd:	sub    eax,0xaf513edb
  415402:	(bad)  
  415404:	loope  0x4153c8
  415406:	out    0xe6,al
  415408:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415409:	sar    BYTE PTR [ebx+0x44],0xd
  41540d:	stc    
  41540e:	mov    eax,ds:0xd290e719
  415413:	icebp  
  415414:	push   es
  415415:	mov    eax,ds:0xf5fc9665
  41541a:	and    al,0x38
  41541c:	cmp    esp,DWORD PTR [ecx+0x946212]
  415422:	stos   DWORD PTR es:[edi],eax
  415423:	loop   0x41542c
  415425:	jb     0x41548d
  415427:	pop    es
  415428:	jbe    0x41542f
  41542a:	xor    DWORD PTR [edx-0x1070362c],esi
  415430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415431:	dec    ecx
  415432:	outs   dx,BYTE PTR ds:[esi]
  415433:	lods   al,BYTE PTR ds:[esi]
  415434:	xchg   edx,eax
  415435:	das    
  415436:	dec    eax
  415437:	and    eax,0x85b866e4
  41543c:	movsx  ebx,ch
  41543f:	outs   dx,DWORD PTR ds:[esi]
  415440:	retf   
  415441:	xchg   esi,eax
  415442:	mov    edx,0x45e8745d
  415447:	inc    esp
  415448:	clc    
  415449:	aas    
  41544a:	aas    
  41544b:	cli    
  41544c:	into   
  41544d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544e:	and    BYTE PTR [edx],dh
  415450:	add    eax,ecx
  415452:	ds and al,0xf4
  415455:	push   ebp
  415456:	inc    esi
  415457:	pop    edi
  415458:	pop    edi
  415459:	xchg   ecx,eax
  41545a:	adc    BYTE PTR [edi],0x52
  41545d:	int    0x52
  41545f:	leave  
  415460:	mov    ebx,0x687fc179
  415465:	jae    0x4154cf
  415467:	add    DWORD PTR [ecx+0x46314326],ebp
  41546d:	mov    WORD PTR [esi+0x5c],?
  415470:	sub    ecx,DWORD PTR [eax-0x6df76489]
  415476:	jmp    0x5b43cd0c
  41547b:	jge    0x41541a
  41547d:	mov    cl,0x83
  41547f:	nop
  415480:	xchg   edi,eax
  415481:	xchg   esp,eax
  415482:	cld    
  415483:	mov    ebp,0x51dcccb0
  415488:	pop    esp
  415489:	ds enter 0x348a,0xdb
  41548e:	stos   BYTE PTR es:[edi],al
  41548f:	xor    al,0xd4
  415491:	add    eax,0xc6f97221
  415496:	in     eax,dx
  415497:	popf   
  415498:	clc    
  415499:	pushf  
  41549a:	outs   dx,BYTE PTR ds:[esi]
  41549b:	pop    ebx
  41549c:	push   ss
  41549d:	xchg   ebx,eax
  41549e:	js     0x41545c
  4154a0:	das    
  4154a1:	aad    0x51
  4154a3:	rcr    bl,0xe6
  4154a6:	and    al,0x47
  4154a8:	inc    ecx
  4154a9:	sub    BYTE PTR [ebx+0x7a5ad628],0x52
  4154b0:	mov    edx,0xa0212dd6
  4154b5:	test   BYTE PTR [eax-0x23],bl
  4154b8:	pop    esp
  4154b9:	cmp    esp,DWORD PTR [edi]
  4154bb:	push   edx
  4154bc:	push   cs
  4154bd:	push   es
  4154be:	xchg   ebp,eax
  4154bf:	or     ah,BYTE PTR [ebp-0x64b30635]
  4154c5:	pushf  
  4154c6:	cmp    BYTE PTR [ebp-0x64],0x6f
  4154ca:	imul   ebp,DWORD PTR [ecx+0x2135420b],0xffffffdf
  4154d1:	push   DWORD PTR [ebx-0x7ad48a32]
  4154d7:	sbb    DWORD PTR [ecx+eiz*4+0x7ee00bb7],ecx
  4154de:	or     ebx,DWORD PTR [ebx-0xa77ac8e]
  4154e4:	dec    esp
  4154e5:	retf   
  4154e6:	add    edx,DWORD PTR [edi+eiz*1-0x4a8171ce]
  4154ed:	shr    BYTE PTR [ebp+edi*2-0x22],1
  4154f1:	fsub   QWORD PTR [eax+ecx*8-0x58]
  4154f5:	mov    ebx,0x4d86db63
  4154fa:	ins    BYTE PTR es:[edi],dx
  4154fb:	addr16 cmp al,0x4d
  4154fe:	fwait
  4154ff:	loopne 0x415527
  415501:	push   ebx
  415502:	adc    DWORD PTR [esi+eiz*4+0x4fbab6b0],edx
  415509:	cmp    dh,BYTE PTR [ebp*1-0xa70ea06]
  415510:	jl     0x415504
  415512:	adc    al,0xc9
  415514:	outs   dx,DWORD PTR ds:[esi]
  415515:	popf   
  415516:	in     eax,0x59
  415518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415519:	cmp    al,0xf6
  41551b:	mov    dh,0xa6
  41551d:	and    BYTE PTR [esi],bh
  41551f:	daa    
  415520:	add    bl,0x58
  415523:	jmp    0x41552a
  415525:	pop    ecx
  415526:	mov    esp,0x11cdb07b
  41552b:	call   0xd113b00e
  415530:	ja     0x415567
  415532:	lock pusha 
  415534:	test   al,0x43
  415536:	mov    ch,0x28
  415538:	or     DWORD PTR [ebx-0x6f],0xffffff80
  41553c:	sbb    cl,BYTE PTR [edx+0x31]
  41553f:	xchg   ebp,eax
  415540:	mov    edi,0xbff303c7
  415545:	xchg   ebp,eax
  415546:	mov    ebx,0x88925347
  41554b:	xor    ch,ah
  41554d:	pop    edi
  41554e:	fiadd  WORD PTR [ecx]
  415550:	sub    DWORD PTR [eax-0x61bcedae],eax
  415556:	cmc    
  415557:	jne    0x4155af
  415559:	pop    eax
  41555a:	jbe    0x415558
  41555c:	pop    edi
  41555d:	and    dh,BYTE PTR [ecx]
  41555f:	mov    ch,0xcb
  415561:	xor    edi,eax
  415563:	xchg   ebp,eax
  415564:	jae    0x415582
  415566:	sub    al,0x83
  415568:	pop    edx
  415569:	shl    BYTE PTR [edi-0x591a2b78],1
  41556f:	not    dl
  415571:	xor    DWORD PTR [ebp-0x16],esp
  415574:	push   esi
  415575:	mov    eax,DWORD PTR ds:0x284f4deb
  41557b:	loopne 0x4155d3
  41557d:	xchg   esp,eax
  41557e:	and    al,0x3a
  415580:	shl    BYTE PTR [ebx+0x42],cl
  415583:	hlt    
  415584:	jns    0x4155ca
  415586:	pop    ebp
  415587:	xor    ebp,ecx
  415589:	dec    eax
  41558a:	adc    ah,ch
  41558c:	aas    
  41558d:	dec    edx
  41558e:	retf   
  41558f:	jo     0x4155d7
  415591:	popa   
  415592:	push   ss
  415593:	rcr    DWORD PTR [esp+edi*1],1
  415596:	xor    esp,DWORD PTR [ebp-0x70]
  415599:	mov    ah,0x72
  41559b:	mov    edi,0x52a88b39
  4155a0:	ins    DWORD PTR es:[edi],dx
  4155a1:	cli    
  4155a2:	sub    BYTE PTR [ecx],0xd7
  4155a5:	into   
  4155a6:	mov    edi,0x2cecc39f
  4155ab:	mov    bh,0xc5
  4155ad:	aad    0xf2
  4155af:	sbb    al,0xf6
  4155b2:	out    dx,al
  4155b3:	pop    ecx
  4155b4:	xchg   edx,eax
  4155b5:	or     BYTE PTR [edx-0x6ea7ffc9],0x3e
  4155bc:	ins    WORD PTR es:[edi],dx
  4155be:	cld    
  4155bf:	call   0x1c71:0xe53f4b88
  4155c6:	sub    eax,esp
  4155c8:	sti    
  4155c9:	mov    bl,0x65
  4155cb:	cmp    eax,0x2a0c3b8b
  4155d0:	ret    
  4155d1:	and    edx,DWORD PTR gs:[ebp-0x10]
  4155d5:	test   BYTE PTR [eax+edi*4],ah
  4155d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155d9:	gs nop
  4155db:	ret    
  4155dc:	mov    al,0x1c
  4155de:	es push edi
  4155e0:	into   
  4155e1:	mov    ebp,0xf082eeb3
  4155e6:	arpl   WORD PTR [edx+0x4412b161],di
  4155ec:	cmp    dh,dh
  4155ee:	mov    ebp,edx
  4155f0:	mov    edi,0xd7b451dc
  4155f5:	sub    BYTE PTR [edx],dl
  4155f7:	mov    cl,0xf7
  4155f9:	and    DWORD PTR [eax+0x37],0x7a1dd4ac
  415600:	fwait
  415601:	shl    ch,cl
  415603:	dec    ebp
  415604:	call   0x303a:0xf99d6d9b
  41560b:	hlt    
  41560c:	adc    eax,edi
  41560e:	mov    BYTE PTR [edi+0x49939dd6],ch
  415614:	ret    0x22fd
  415617:	mov    al,ds:0xf9607ecd
  41561c:	iret   
  41561d:	dec    ebx
  41561e:	into   
  41561f:	cmp    BYTE PTR [edi-0x1639dd81],0xde
  415626:	lea    edi,[esi-0x51]
  415629:	ss mov edx,0xe97327d9
  41562f:	xchg   esi,eax
  415630:	mov    gs,WORD PTR [edx]
  415632:	in     eax,dx
  415633:	add    BYTE PTR [edi+0x4],0x2b
  415637:	mov    BYTE PTR [edi-0x4e9ab17a],bl
  41563d:	je     0x4155f5
  41563f:	retf   
  415640:	hlt    
  415641:	rol    BYTE PTR ds:0xe826c8f7,1
  415647:	jno    0x415629
  415649:	sti    
  41564a:	ins    DWORD PTR es:[edi],dx
  41564b:	or     dl,BYTE PTR [esi]
  41564d:	sub    dl,dh
  41564f:	pop    ebp
  415650:	fsubrp st(3),st
  415652:	inc    eax
  415653:	outs   dx,BYTE PTR ds:[esi]
  415654:	jns    0x41565d
  415656:	sbb    esp,DWORD PTR [ecx+0x6e]
  415659:	jmp    0x333b:0x7b75a15f
  415660:	dec    esi
  415661:	lahf   
  415662:	ins    BYTE PTR es:[edi],dx
  415663:	pop    edx
  415664:	push   0x7f
  415666:	pop    ss
  415667:	or     cl,bh
  415669:	retf   
  41566a:	sbb    al,0x78
  41566c:	fistp  DWORD PTR [edx+0x65]
  41566f:	sahf   
  415670:	fisub  DWORD PTR [ebx-0x1e051d44]
  415676:	push   eax
  415677:	or     dh,BYTE PTR [edi-0x44700c0d]
  41567d:	repz mov dl,0x7e
  415680:	in     al,dx
  415681:	(bad)  
  415682:	jb     0x41568b
  415684:	mov    bl,0x79
  415686:	and    ebp,DWORD PTR [edi+0x8]
  415689:	pop    eax
  41568a:	lds    edx,FWORD PTR [ecx]
  41568c:	or     BYTE PTR [eax-0x17f07e8b],bl
  415692:	push   cs
  415693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415695:	imul   eax,DWORD PTR [eax],0x64fb4e54
  41569b:	sub    al,0x66
  41569d:	ret    
  41569e:	push   esp
  41569f:	or     dh,BYTE PTR [edi]
  4156a1:	(bad)  
  4156a2:	xchg   edx,eax
  4156a3:	fdivr  DWORD PTR [edx]
  4156a5:	outs   dx,DWORD PTR ds:[esi]
  4156a6:	lahf   
  4156a7:	ins    DWORD PTR es:[edi],dx
  4156a8:	ins    BYTE PTR es:[edi],dx
  4156a9:	sti    
  4156aa:	push   es
  4156ab:	jge    0x4156eb
  4156ad:	sbb    al,0xf
  4156af:	jge    0x4156b1
  4156b1:	ret    
  4156b2:	test   DWORD PTR [edi-0x20],ebx
  4156b5:	sbb    al,0xc8
  4156b7:	dec    ecx
  4156b8:	(bad)  
  4156b9:	scas   eax,DWORD PTR es:[edi]
  4156ba:	sub    eax,0xe71fd071
  4156bf:	or     al,BYTE PTR [edx-0x39]
  4156c2:	scas   al,BYTE PTR es:[edi]
  4156c3:	xor    eax,0x2245b58c
  4156c8:	outs   dx,BYTE PTR ds:[esi]
  4156c9:	(bad)  [eax+0x50]
  4156cc:	inc    edi
  4156cd:	mov    ebp,0x34a98060
  4156d2:	aam    0xa0
  4156d4:	dec    edi
  4156d5:	mov    dh,BYTE PTR [esi+0x16fdc2ca]
  4156db:	jge    0x4156c7
  4156dd:	cli    
  4156de:	sahf   
  4156df:	lods   eax,DWORD PTR ds:[esi]
  4156e0:	jecxz  0x4156bc
  4156e2:	retf   
  4156e3:	jge    0x415729
  4156e5:	fmul   DWORD PTR [esi+0xbc21dae]
  4156eb:	mov    bh,0x57
  4156ed:	push   es
  4156ee:	(bad)
  4156f1:	pushf  
  4156f2:	dec    esp
  4156f3:	cmp    esi,DWORD PTR [edx]
  4156f5:	aad    0x4
  4156f7:	call   0x52236986
  4156fc:	mov    dh,0x70
  4156ff:	pop    ds
  415700:	into   
  415701:	mov    esi,0xf7d9bcd5
  415706:	in     eax,dx
  415707:	and    ch,cl
  415709:	outs   dx,BYTE PTR ds:[esi]
  41570a:	push   DWORD PTR [eax+0x229c2655]
  415710:	test   DWORD PTR [ecx-0x5c],esi
  415713:	test   esp,edx
  415715:	nop
  415716:	mov    bl,0xa8
  415718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415719:	push   ebx
  41571a:	rcl    DWORD PTR [ebp+0x704b4406],0xf1
  415721:	push   edx
  415722:	mov    eax,0xe47fb79e
  415727:	and    edi,esi
  415729:	xchg   edx,eax
  41572a:	mov    cl,cl
  41572c:	sub    al,0x7a
  41572e:	ds cmp esp,ebx
  415731:	push   ds
  415732:	sub    al,0xf3
  415734:	push   cs
  415735:	and    ah,BYTE PTR [eax]
  415737:	std    
  415738:	and    BYTE PTR [esi+ecx*1],ch
  41573b:	pop    ds
  41573c:	imul   ebx,DWORD PTR [ebx+0x35],0xffffffbb
  415740:	dec    ebx
  415741:	mov    ebp,DWORD PTR [ebx-0x6732977e]
  415747:	mov    eax,0x952e464e
  41574c:	sub    ch,ah
  41574e:	or     DWORD PTR [ebx+ecx*4],ecx
  415751:	dec    esp
  415752:	xor    DWORD PTR [ebp-0x1],esp
  415755:	jbe    0x4157ac
  415757:	xor    ch,BYTE PTR ds:0xd52bd609
  41575d:	sbb    al,0xfe
  41575f:	mov    ebp,0x347e113d
  415764:	mov    eax,0x728c6c59
  415769:	leave  
  41576a:	out    dx,al
  41576b:	push   ds
  41576c:	(bad)  
  41576e:	and    bh,BYTE PTR [edx-0x39]
  415771:	jno    0x4157cb
  415773:	or     ch,BYTE PTR [esi-0x22]
  415776:	not    BYTE PTR [ebx]
  415778:	mov    esp,0xc76d3454
  41577d:	retf   
  41577e:	fwait
  41577f:	dec    ecx
  415780:	(bad)
  415785:	push   0xe0b15a69
  41578a:	adc    bh,al
  41578c:	bound  ebp,QWORD PTR [esi]
  41578e:	gs pop ecx
  415790:	inc    ebx
  415791:	jmp    0x4157c1
  415793:	pop    ss
  415794:	inc    esp
  415795:	ja     0x415747
  415797:	gs jmp 0xfc8013ff
  41579d:	or     DWORD PTR ds:0x23d71f9f,eax
  4157a3:	and    eax,DWORD PTR [esi+0x58725e6d]
  4157a9:	sar    BYTE PTR [edx],0xc9
  4157ac:	adc    cl,BYTE PTR [ebp-0x33ffb6bc]
  4157b2:	inc    eax
  4157b3:	adc    ebp,esp
  4157b5:	gs xor eax,0xfffffff4
  4157b9:	fwait
  4157ba:	xor    ecx,DWORD PTR [ebx-0x28b9821b]
  4157c0:	fwait
  4157c1:	jae    0x41581b
  4157c3:	mov    ds:0xae42d889,eax
  4157c8:	mov    bh,0xe0
  4157ca:	and    eax,0x8cd54d01
  4157cf:	pop    ss
  4157d0:	je     0x4157b2
  4157d2:	cmp    ecx,DWORD PTR [edi-0x1]
  4157d5:	out    dx,al
  4157d6:	sbb    ebp,DWORD PTR [edi+0x51]
  4157d9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4157db:	jae    0x41575f
  4157dd:	or     ebx,DWORD PTR [edx]
  4157df:	jg     0x4157b8
  4157e1:	inc    esi
  4157e2:	xchg   ebp,eax
  4157e3:	add    DWORD PTR [ebx+eax*2+0x52],0x13
  4157e8:	or     ecx,DWORD PTR [edx-0x17b3dd00]
  4157ee:	mov    ah,0x7e
  4157f0:	nop
  4157f1:	enter  0xe493,0x97
  4157f5:	ins    DWORD PTR es:[edi],dx
  4157f6:	mov    esp,0x655c0e2
  4157fb:	mov    esp,0xc13e78e3
  415800:	pop    edi
  415801:	mov    ebx,0x111916a
  415806:	mov    ecx,0xec692a4
  41580b:	or     dh,BYTE PTR [esi+esi*1]
  41580e:	push   ecx
  41580f:	fiadd  DWORD PTR [ecx]
  415811:	sub    BYTE PTR [esp+edi*8+0x39],bl
  415815:	jne    0x4157d8
  415817:	ret    0x83b8
  41581a:	sbb    ch,BYTE PTR [edx]
  41581c:	adc    DWORD PTR [esi-0x50],edx
  41581f:	sub    al,0x1
  415821:	push   ss
  415822:	adc    al,dh
  415824:	mov    al,0xbe
  415826:	scas   al,BYTE PTR es:[edi]
  415827:	lea    esi,[ecx+eiz*4]
  41582a:	scas   al,BYTE PTR es:[edi]
  41582b:	pop    eax
  41582c:	inc    BYTE PTR [esi-0x30]
  41582f:	int    0x82
  415831:	sub    BYTE PTR [ecx+0x1],dh
  415834:	sbb    dh,ah
  415836:	mov    bl,BYTE PTR ds:[esi-0x33]
  41583a:	cld    
  41583b:	int    0x35
  41583d:	test   DWORD PTR [eax],edx
  41583f:	or     ecx,DWORD PTR [edx+ecx*1]
  415842:	push   ds
  415843:	dec    DWORD PTR [edx+0x5a]
  415846:	mov    ds:0x8809699b,eax
  41584b:	jmp    0x12112bb2
  415850:	repz lea eax,[ebx]
  415853:	adc    DWORD PTR [ecx+0x50],edx
  415856:	das    
  415857:	mov    ecx,0xf31e6c77
  41585c:	pop    esi
  41585d:	mov    ds:0x1cfa5ae4,al
  415862:	jne    0x4158db
  415864:	lods   al,BYTE PTR ds:[esi]
  415865:	call   0xa2b6:0x9ed608b2
  41586c:	pop    eax
  41586d:	jmp    0x4158e9
  41586f:	clc    
  415870:	pusha  
  415871:	daa    
  415872:	out    dx,al
  415873:	pusha  
  415874:	pop    ecx
  415875:	sti    
  415876:	lods   eax,DWORD PTR ds:[esi]
  415877:	cmp    eax,0x8f2b5a35
  41587c:	cmp    DWORD PTR [ebp-0xb],ecx
  41587f:	inc    esp
  415880:	mov    ebp,0x21974daf
  415885:	or     eax,0xfdfb057e
  41588a:	dec    esi
  41588b:	push   cs
  41588c:	inc    eax
  41588d:	daa    
  41588e:	inc    esp
  41588f:	scas   eax,DWORD PTR es:[edi]
  415890:	add    BYTE PTR [edi-0x2a],bl
  415893:	(bad)  
  415894:	mov    ds:0x7ecaf688,eax
  415899:	add    eax,0xe20f4bdd
  41589e:	jae    0x415838
  4158a0:	or     eax,0xcc76169f
  4158a5:	sub    dh,BYTE PTR [ecx]
  4158a7:	inc    ecx
  4158a8:	push   es
  4158a9:	jmp    0xe6ff9054
  4158ae:	cli    
  4158af:	mov    BYTE PTR [edx+edx*8-0x4a],dl
  4158b3:	bound  edi,QWORD PTR [eax-0x5c2ad1f3]
  4158b9:	dec    ebp
  4158ba:	fwait
  4158bb:	sub    cl,al
  4158bd:	mov    ds:0x8bcfd426,al
  4158c2:	mov    ebp,0x318fe914
  4158c7:	jmp    0x41593a
  4158c9:	sbb    DWORD PTR [edx-0x4d47928a],ecx
  4158cf:	pop    eax
  4158d0:	or     BYTE PTR [ecx],ch
  4158d2:	fwait
  4158d3:	jae    0x415936
  4158d5:	sbb    al,0x2
  4158d7:	push   edx
  4158d8:	mov    al,0xb6
  4158da:	and    al,0x3a
  4158dc:	mov    BYTE PTR [edi+0x64],al
  4158df:	(bad)  
  4158e1:	loop   0x415960
  4158e3:	imul   edi,eax,0xffffff88
  4158e6:	(bad)  
  4158e7:	cmp    al,0x92
  4158e9:	add    ah,BYTE PTR [eax-0x33]
  4158ec:	mov    al,0x34
  4158ee:	sbb    ah,BYTE PTR [ebp-0x22]
  4158f1:	add    ah,BYTE PTR cs:[ebp+0x7e]
  4158f5:	loope  0x415952
  4158f7:	dec    esp
  4158f8:	nop
  4158f9:	mov    cl,BYTE PTR [eax-0x79]
  4158fc:	mov    ds:0xc96e01fa,al
  415901:	pop    esp
  415902:	(bad)  
  415903:	xor    ecx,edx
  415905:	push   es
  415906:	loop   0x4158e2
  415908:	jnp    0x41596e
  41590a:	je     0x415912
  41590c:	xor    al,0xc1
  41590e:	sbb    edi,esi
  415910:	dec    esi
  415911:	scas   eax,DWORD PTR es:[edi]
  415912:	push   es
  415913:	mov    bh,0xae
  415915:	inc    edi
  415916:	mov    edx,0x4ecd7b58
  41591b:	sub    al,0x18
  41591d:	sbb    DWORD PTR [edx+0x9fb657e],eax
  415923:	mov    ss,WORD PTR [ebp+0x61]
  415926:	inc    ecx
  415927:	sub    BYTE PTR [eax+ecx*2-0x70b60647],ah
  41592e:	xchg   ebx,eax
  41592f:	mov    edx,DWORD PTR [esi-0x29]
  415932:	jge    0x4159ae
  415934:	enter  0xb15,0x56
  415938:	pop    edx
  415939:	dec    ebx
  41593a:	jg     0x4158fc
  41593c:	sub    bh,al
  41593e:	into   
  41593f:	sub    al,0x89
  415941:	mov    esi,0x7682a2fa
  415946:	out    dx,eax
  415947:	rcr    BYTE PTR ds:0x17e7d318,cl
  41594d:	dec    esi
  41594e:	out    dx,eax
  41594f:	jns    0x4158da
  415951:	dec    ebp
  415952:	bound  ecx,QWORD PTR [ebx-0x47]
  415955:	test   esi,ebx
  415957:	and    ebp,DWORD PTR [esi]
  415959:	stc    
  41595a:	cdq    
  41595b:	mov    eax,ds:0x1ac35d2c
  415960:	in     eax,0x7
  415962:	xchg   esp,eax
  415963:	fiadd  WORD PTR [ebp-0x6f]
  415966:	pushf  
  415967:	div    ebp
  415969:	mov    ecx,0xbb84534a
  41596e:	scas   eax,DWORD PTR es:[edi]
  41596f:	les    ecx,FWORD PTR [ecx-0x1f]
  415972:	sbb    al,0xf0
  415974:	in     al,dx
  415975:	outs   dx,DWORD PTR ds:[esi]
  415976:	ds es cwde 
  415979:	out    0x2a,eax
  41597b:	dec    ecx
  41597c:	sbb    ch,BYTE PTR [esi-0x51563849]
  415982:	jb     0x415952
  415984:	popf   
  415985:	mov    al,ds:0x3a893e80
  41598a:	call   0x879d:0xda7dc4a1
  415991:	in     al,dx
  415992:	adc    ecx,DWORD PTR [ebx-0x1ed787b8]
  415998:	and    BYTE PTR [ecx-0x268e1e],dl
  41599e:	mov    edi,0xe896d81b
  4159a3:	xchg   DWORD PTR [esi-0x61],ebp
  4159a6:	sbb    eax,0x53cc2573
  4159ab:	std    
  4159ac:	call   0xcb52:0x11f8297f
  4159b3:	pop    es
  4159b4:	cdq    
  4159b5:	xchg   edi,eax
  4159b6:	std    
  4159b7:	stos   DWORD PTR es:[edi],eax
  4159b8:	adc    DWORD PTR [edi-0x28],edi
  4159bb:	push   edi
  4159bc:	dec    ebx
  4159bd:	dec    edi
  4159be:	btr    DWORD PTR [esi+ebp*2],0xdd
  4159c3:	loop   0x4159cf
  4159c5:	jecxz  0x415a2a
  4159c7:	sahf   
  4159c8:	push   edi
  4159c9:	lea    ecx,[ebx+0x19634520]
  4159cf:	lahf   
  4159d0:	nop
  4159d1:	test   BYTE PTR [ecx+0xc0d32af],ah
  4159d7:	lods   eax,DWORD PTR ds:[esi]
  4159d8:	add    al,0x57
  4159da:	adc    BYTE PTR [ebx-0x4deb3872],dh
  4159e0:	jle    0x41599f
  4159e2:	adc    eax,0x58ef1535
  4159e7:	jne    0x415a01
  4159e9:	mov    dl,0x24
  4159eb:	xor    eax,0xe09bc816
  4159f0:	inc    ecx
  4159f1:	in     al,0x90
  4159f3:	or     eax,0x5c5f49f2
  4159f8:	or     eax,0x3aa5257a
  4159fd:	pop    ebx
  4159fe:	mov    esp,0x12d0d403
  415a03:	int3   
  415a04:	cmp    al,0x34
  415a06:	sahf   
  415a07:	out    0xd5,eax
  415a09:	push   edx
  415a0a:	adc    eax,0xde189808
  415a0f:	sub    al,0xaa
  415a11:	xchg   edi,eax
  415a12:	popa   
  415a13:	jle    0x4159d4
  415a15:	outs   dx,BYTE PTR ds:[esi]
  415a16:	fcomp  QWORD PTR [eax]
  415a18:	leave  
  415a19:	std    
  415a1a:	mov    bl,0x91
  415a1c:	aad    0x6e
  415a1e:	pusha  
  415a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a20:	aas    
  415a21:	inc    esi
  415a22:	sbb    BYTE PTR [edx+0x4bfd0ca],bh
  415a28:	(bad)  
  415a29:	mov    edx,0xd2653f3c
  415a2e:	mov    ah,0xda
  415a30:	loopne 0x4159f0
  415a32:	add    eax,0x3b4f3f1f
  415a37:	jecxz  0x4159fb
  415a39:	and    eax,DWORD PTR [eax+0x28355be0]
  415a3f:	out    dx,eax
  415a40:	ss pop esp
  415a42:	ret    
  415a43:	stos   BYTE PTR es:[edi],al
  415a44:	les    edi,FWORD PTR [esi+edi*4+0x72]
  415a48:	xlat   BYTE PTR ds:[ebx]
  415a49:	or     ah,BYTE PTR [edi-0x6c542884]
  415a4f:	sub    eax,0x831d8c6e
  415a54:	cmp    ebp,DWORD PTR ds:0x5c0b972f
  415a5a:	add    al,0x26
  415a5c:	inc    edi
  415a5d:	xor    eax,0xef3ae87
  415a62:	fucomi st,st(4)
  415a64:	pop    eax
  415a65:	jbe    0x415a79
  415a67:	mov    ds:0x3dbcccfa,al
  415a6c:	mov    cl,0xf
  415a6e:	cmp    cl,BYTE PTR [edx+edx*8]
  415a71:	lea    edi,[esi-0x60e107d0]
  415a77:	push   0x2f
  415a79:	xchg   ecx,eax
  415a7a:	add    eax,0x69d3c597
  415a7f:	imul   edi,ecx,0xffffffaa
  415a82:	sub    DWORD PTR [eax-0x43],esi
  415a85:	mov    al,ds:0xf12114a3
  415a8a:	pop    edi
  415a8b:	push   esi
  415a8c:	out    0x27,al
  415a8e:	shl    DWORD PTR [ecx-0x60],0xf
  415a92:	inc    esp
  415a93:	leave  
  415a94:	jmp    0x8d2d:0x34398de2
  415a9b:	or     BYTE PTR [edi],dh
  415a9d:	xor    dh,BYTE PTR [edx]
  415a9f:	sub    al,0x77
  415aa1:	jns    0x415a24
  415aa3:	iret   
  415aa4:	and    al,0xf1
  415aa6:	out    dx,eax
  415aa7:	mov    al,ds:0xa39c7b1c
  415aac:	dec    eax
  415aad:	mov    cl,0xd7
  415aaf:	inc    ebx
  415ab0:	mov    DWORD PTR [esi+edx*8+0x55],esi
  415ab4:	cmp    BYTE PTR [eax],bh
  415ab6:	pop    edx
  415ab7:	outs   dx,DWORD PTR ds:[esi]
  415ab8:	pop    edi
  415ab9:	cs mov edx,0x867cd65f
  415abf:	mov    dl,BYTE PTR [eax]
  415ac1:	xor    al,0x3a
  415ac3:	aas    
  415ac4:	(bad)  
  415ac5:	sub    ebx,DWORD PTR [ebx]
  415ac7:	push   ds
  415ac8:	jl     0x415b00
  415aca:	sbb    dl,ch
  415acc:	out    dx,eax
  415acd:	mov    DWORD PTR [ebp-0x31],edi
  415ad0:	pop    ds
  415ad1:	jmp    0x415a7a
  415ad3:	cmp    esi,DWORD PTR [ecx+0x3c]
  415ad6:	sti    
  415ad7:	dec    ebp
  415ad8:	(bad)  
  415ad9:	mov    esi,0x72aecdd7
  415ade:	mov    ebx,0xdf68fe72
  415ae3:	lods   eax,DWORD PTR ds:[esi]
  415ae4:	nop
  415ae5:	inc    ebx
  415ae6:	jge    0x415b63
  415ae8:	aam    0x7b
  415aea:	push   esi
  415aeb:	pushf  
  415aec:	push   ds
  415aed:	pop    es
  415aee:	push   ebp
  415aef:	dec    ecx
  415af0:	push   ecx
  415af1:	div    BYTE PTR ds:[ecx-0x14a9d3f8]
  415af8:	fstp   TBYTE PTR [esi+0x34a21971]
  415afe:	sbb    al,0x9
  415b00:	lods   eax,DWORD PTR ds:[esi]
  415b01:	push   ss
  415b02:	and    DWORD PTR [esi-0x5ec4d4e5],0x219f492
  415b0c:	(bad)  
  415b0d:	jmp    DWORD PTR [esi+0x42]
  415b10:	xchg   ebp,eax
  415b11:	xchg   BYTE PTR [esi-0x6],cl
  415b14:	popf   
  415b15:	(bad)  
  415b16:	in     eax,0xbc
  415b18:	mov    ebx,0xbfc95493
  415b1d:	bound  esp,QWORD PTR ds:0x7297f667
  415b23:	pop    esi
  415b24:	sbb    dl,BYTE PTR [edi+ecx*1]
  415b27:	adc    ah,BYTE PTR [edi-0x1a]
  415b2a:	loope  0x415b79
  415b2c:	imul   edi,DWORD PTR [esi-0x5d],0x2ed226ef
  415b33:	bnd js 0x415b1e
  415b36:	clc    
  415b37:	mov    dl,BYTE PTR [edx-0x12]
  415b3a:	aas    
  415b3b:	and    eax,0xb4129099
  415b40:	xor    BYTE PTR [esi-0x47],bh
  415b43:	and    ah,BYTE PTR [eax-0x1c189300]
  415b49:	leave  
  415b4a:	in     al,dx
  415b4b:	ss cmc 
  415b4d:	fcmovnb st,st(0)
  415b4f:	pop    ebx
  415b50:	je     0x415ae3
  415b52:	(bad)  [eax+ebp*2-0xf7b52d1]
  415b59:	mov    ch,0xaf
  415b5b:	clc    
  415b5c:	aam    0x83
  415b5e:	mov    DWORD PTR [esp+ecx*1+0x490ba007],esp
  415b65:	and    edx,ebp
  415b67:	call   0xb829:0xdec4959a
  415b6e:	cdq    
  415b6f:	clc    
  415b70:	jbe    0x415b3c
  415b72:	sbb    BYTE PTR [eax+0x4ff9dc31],0xb3
  415b79:	fcomip st,st(7)
  415b7b:	daa    
  415b7c:	clc    
  415b7d:	call   0xd0cb874a
  415b82:	sbb    esi,DWORD PTR [eax+ecx*1+0x1f0efdc5]
  415b89:	mov    cl,0x10
  415b8b:	mov    DWORD PTR [ebx+0x53],ebp
  415b8e:	cmp    dh,BYTE PTR [eax]
  415b90:	das    
  415b91:	xlat   BYTE PTR ds:[ebx]
  415b92:	adc    eax,0xd1748d07
  415b97:	das    
  415b98:	int3   
  415b99:	gs dec edi
  415b9b:	ins    DWORD PTR es:[edi],dx
  415b9c:	stos   DWORD PTR es:[edi],eax
  415b9d:	jnp    0x415b31
  415b9f:	bound  esi,QWORD PTR [esi+0x6e]
  415ba2:	repnz clc 
  415ba4:	inc    esp
  415ba5:	stos   DWORD PTR es:[edi],eax
  415ba6:	ret    
  415ba7:	leave  
  415ba8:	sbb    al,BYTE PTR [edi+eiz*8]
  415bab:	jae    0x415bee
  415bad:	aad    0x8a
  415baf:	pop    edx
  415bb0:	rol    DWORD PTR [edx+0x47],0x24
  415bb4:	in     eax,0x59
  415bb6:	ror    BYTE PTR [eax],cl
  415bb8:	popa   
  415bb9:	cmp    eax,0x5e7c6a5c
  415bbe:	ja     0x415bf8
  415bc0:	and    BYTE PTR [edx-0x76],ah
  415bc3:	pop    esp
  415bc4:	fcomp  DWORD PTR [ecx+esi*1]
  415bc7:	pop    esp
  415bc8:	fcomp  QWORD PTR [esi]
  415bca:	jg     0x415bcc
  415bcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bcd:	dec    ebp
  415bce:	ins    DWORD PTR es:[edi],dx
  415bcf:	std    
  415bd0:	mov    edx,0x3debbf68
  415bd5:	(bad)  
  415bd6:	div    bh
  415bd8:	daa    
  415bd9:	xor    DWORD PTR [eax],ecx
  415bdb:	inc    eax
  415bdc:	pop    ebp
  415bdd:	or     al,0x7b
  415bdf:	call   0xc921e4d6
  415be4:	mov    DWORD PTR [esi+0x20],ebx
  415be7:	stos   DWORD PTR es:[edi],eax
  415be8:	adc    bl,dl
  415bea:	idiv   DWORD PTR [esi+0x49e88f39]
  415bf0:	pop    ebp
  415bf1:	sbb    al,BYTE PTR [eax+0x788879b8]
  415bf7:	ss mov ah,0xa1
  415bfa:	or     al,BYTE PTR ds:0x5b71e621
  415c00:	jecxz  0x415c76
  415c02:	test   al,0x5b
  415c04:	stos   BYTE PTR es:[edi],al
  415c05:	fistp  DWORD PTR [edi]
  415c07:	sbb    al,0x2b
  415c09:	aad    0x94
  415c0b:	jne    0x415c31
  415c0d:	test   eax,0x654ed587
  415c12:	mov    dl,0xab
  415c14:	ins    DWORD PTR es:[edi],dx
  415c15:	xchg   dh,ch
  415c17:	push   cs
  415c18:	sub    al,0xc8
  415c1a:	jne    0x415c3b
  415c1c:	stc    
  415c1d:	lods   eax,DWORD PTR ds:[esi]
  415c1e:	push   ss
  415c1f:	mov    dl,0x97
  415c21:	fist   WORD PTR [ecx+ecx*1]
  415c24:	imul   ebp,DWORD PTR [esi+ebp*8-0x7e],0xffffffc2
  415c29:	in     eax,0x32
  415c2b:	push   0xff7f92e0
  415c30:	jmp    FWORD PTR ds:0xd95c50fe
  415c36:	push   cs
  415c37:	(bad)  
  415c38:	jge    0x415c0e
  415c3a:	sbb    eax,0xbcc2e45c
  415c3f:	loopne 0x415c87
  415c41:	ss repz retf 0x349c
  415c46:	fmul   st,st(7)
  415c48:	xor    eax,0x215917f5
  415c4d:	xchg   edi,eax
  415c4e:	adc    cl,BYTE PTR [edi-0xfcd3266]
  415c54:	lea    ebx,[ebp+0x4c]
  415c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c58:	or     DWORD PTR [ecx+0x65],edx
  415c5b:	pop    edi
  415c5c:	sub    BYTE PTR [edx-0x6b95b8cb],bl
  415c62:	call   0xb35a9314
  415c67:	push   eax
  415c68:	sub    BYTE PTR [edx-0x46],dl
  415c6b:	jns    0x415cd8
  415c6d:	cmp    ebx,DWORD PTR [eax+0x77]
  415c70:	push   edi
  415c71:	rol    bl,cl
  415c73:	mov    dl,0xa7
  415c75:	call   0x5ba5:0x308c22fc
  415c7c:	push   es
  415c7d:	inc    eax
  415c7e:	sub    DWORD PTR [edi-0x63],0x21
  415c82:	mov    eax,0x10dddc7a
  415c87:	stc    
  415c88:	adc    ax,0xf1b9
  415c8c:	or     eax,0xe7b178a8
  415c91:	repz (bad)
  415c94:	in     al,0xc8
  415c96:	cmp    eax,0x4b770dd9
  415c9b:	sbb    BYTE PTR [edx+0x19],dl
  415c9e:	aas    
  415c9f:	outs   dx,DWORD PTR ds:[esi]
  415ca0:	test   edi,ecx
  415ca2:	or     edi,DWORD PTR [edx+eax*4+0x47]
  415ca6:	sub    ebx,DWORD PTR [ebp-0x46]
  415ca9:	push   esi
  415caa:	enter  0x4ef2,0x64
  415cae:	fwait
  415caf:	sbb    eax,0x373ba9cb
  415cb4:	pop    es
  415cb5:	(bad)  
  415cb6:	out    dx,al
  415cb7:	mov    ah,BYTE PTR [ebx+0x69ec766]
  415cbd:	adc    esp,edx
  415cbf:	out    dx,al
  415cc0:	xchg   ebx,eax
  415cc1:	add    eax,0xd02ce4fb
  415cc6:	repz xor eax,0xa9d99e35
  415ccc:	jae    0x415c68
  415cce:	add    BYTE PTR [ebp+0x6529d0b0],bl
  415cd4:	jg     0x415d06
  415cd6:	aaa    
  415cd7:	(bad)  
  415cd9:	mov    ah,0x7c
  415cdb:	jmp    0xc921101f
  415ce0:	(bad)  
  415ce2:	adc    eax,eax
  415ce4:	sbb    ebx,DWORD PTR [esi+0x4]
  415ce7:	mov    edi,0xe3a5e185
  415cec:	xor    ebp,DWORD PTR [ecx+eiz*1]
  415cef:	jecxz  0x415d56
  415cf1:	out    0xc,al
  415cf3:	loope  0x415cc0
  415cf5:	sub    ch,dh
  415cf7:	std    
  415cf8:	sub    al,0xa3
  415cfa:	mov    edx,0x821fb059
  415cff:	add    dh,BYTE PTR ds:0x817dc2d3
  415d05:	push   ebx
  415d06:	sbb    eax,0x8274a424
  415d0b:	sub    BYTE PTR [edi+0x260269f8],dl
  415d11:	fdivr  QWORD PTR [esp+ebx*8]
  415d14:	cld    
  415d15:	(bad)  
  415d16:	(bad)  
  415d17:	xlat   BYTE PTR ds:[ebx]
  415d18:	jmp    0x2c2fc686
  415d1d:	and    al,0x1c
  415d1f:	into   
  415d20:	popa   
  415d21:	sub    cl,ah
  415d23:	(bad)  
  415d24:	push   esi
  415d25:	clc    
  415d26:	jmp    0x415d07
  415d28:	and    ebx,eax
  415d2a:	js     0x415d17
  415d2c:	scas   al,BYTE PTR es:[edi]
  415d2d:	cmovns ebx,DWORD PTR [esi+0x69]
  415d31:	sbb    ebx,ebp
  415d33:	jno    0x415ce0
  415d35:	in     eax,0x28
  415d37:	pop    ebx
  415d38:	push   0xc2402447
  415d3d:	les    eax,FWORD PTR [ecx]
  415d3f:	jge    0x415d55
  415d41:	arpl   WORD PTR [edi+0x1d],di
  415d44:	mov    esp,0xafc0d412
  415d49:	test   DWORD PTR [esi+0x37fce9c3],esi
  415d4f:	jp     0x415d01
  415d51:	test   al,0x30
  415d53:	cdq    
  415d54:	mov    dl,0xde
  415d56:	push   0xffffffa3
  415d58:	mov    bh,0x9e
  415d5a:	xor    DWORD PTR [ebx],edi
  415d5c:	xor    esi,DWORD PTR [edx]
  415d5e:	lods   eax,DWORD PTR ds:[esi]
  415d5f:	adc    edx,DWORD PTR [ebp+0x735f10e]
  415d65:	jge    0x415cf3
  415d67:	data16 ja 0x415cf7
  415d6a:	mov    al,BYTE PTR [esi-0x5f7663a2]
  415d70:	cs dec esi
  415d72:	daa    
  415d73:	fidivr WORD PTR [ebx-0x7d]
  415d76:	cmc    
  415d77:	mov    eax,0x386c7e72
  415d7c:	sahf   
  415d7d:	mov    edx,0xdec7db98
  415d82:	inc    ebp
  415d84:	call   0xb278a7db
  415d89:	clc    
  415d8a:	jecxz  0x415d61
  415d8c:	xor    bh,BYTE PTR [ecx+0x3fc38a68]
  415d92:	(bad)  
  415d93:	(bad)  
  415d94:	jnp    0x415d54
  415d96:	push   esp
  415d97:	outs   dx,BYTE PTR ds:[esi]
  415d98:	xchg   ecx,eax
  415d99:	icebp  
  415d9a:	dec    edi
  415d9b:	bound  ebp,QWORD PTR [edx]
  415d9d:	test   BYTE PTR [ebx+0x27a766ff],cl
  415da3:	mov    ebp,edi
  415da5:	and    al,0x37
  415da7:	popf   
  415da8:	or     edx,DWORD PTR [eax]
  415daa:	xlat   BYTE PTR fs:[ebx]
  415dac:	xchg   bl,cl
  415dae:	stos   DWORD PTR es:[edi],eax
  415daf:	and    al,0x2a
  415db1:	jo     0x415d61
  415db3:	pop    ebx
  415db4:	sbb    eax,0xfa8fcdb3
  415db9:	outs   dx,DWORD PTR ds:[esi]
  415dba:	ins    BYTE PTR es:[edi],dx
  415dbb:	mov    eax,0x5f450be1
  415dc0:	mov    dh,0x53
  415dc2:	sti    
  415dc3:	sbb    al,0xab
  415dc5:	xor    ecx,DWORD PTR [ebx+0x30]
  415dc8:	test   eax,0x7ecd7840
  415dcd:	add    ebx,ecx
  415dcf:	cmp    DWORD PTR [esi+0x2a45818c],edx
  415dd5:	sbb    BYTE PTR [edx],bl
  415dd7:	add    esi,ecx
  415dd9:	mov    ds:0x519af6ba,eax
  415dde:	retf   
  415ddf:	nop
  415de0:	dec    ebx
  415de1:	xchg   esi,eax
  415de2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de5:	div    BYTE PTR [eax+edx*4+0x48]
  415de9:	mov    ecx,DWORD PTR [eax-0x5e]
  415dec:	adc    bl,bl
  415dee:	jp     0x415e41
  415df0:	pop    ebp
  415df1:	adc    DWORD PTR [edx+ebx*2-0x7a3f32df],0x9f75288e
  415dfc:	cmp    esp,DWORD PTR ds:0x7e0609
  415e02:	mov    DWORD PTR [ecx+0x5f942c17],edx
  415e08:	jns    0x415df0
  415e0a:	mov    ebp,DWORD PTR [edx+0x229d132b]
  415e10:	sub    al,0x24
  415e12:	push   esi
  415e13:	das    
  415e14:	pop    ds
  415e15:	adc    BYTE PTR [edi-0x69],al
  415e18:	les    edi,FWORD PTR [eax]
  415e1a:	out    dx,eax
  415e1b:	pop    esi
  415e1c:	sub    ah,ah
  415e1e:	neg    BYTE PTR [eax+0x264ba824]
  415e24:	test   cl,cl
  415e26:	fs out dx,al
  415e28:	cmp    ebp,ebp
  415e2a:	clc    
  415e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e2c:	(bad)  
  415e2d:	jbe    0x415e51
  415e2f:	lahf   
  415e30:	test   BYTE PTR [esi+eax*8+0x4fb5d293],dl
  415e37:	xchg   edx,eax
  415e38:	retf   0x95c0
  415e3b:	dec    bx
  415e3d:	sar    ch,0xb5
  415e40:	in     eax,0x78
  415e42:	xor    edx,DWORD PTR [eax]
  415e44:	xor    al,0x15
  415e46:	inc    ebx
  415e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e49:	icebp  
  415e4a:	xor    esi,eax
  415e4c:	add    al,0x6f
  415e4e:	inc    esi
  415e4f:	cmp    esi,DWORD PTR [ecx+0x1d]
  415e52:	jg     0x415de3
  415e54:	sbb    edx,DWORD PTR [ebp+0x4e]
  415e57:	fstp   TBYTE PTR [eax-0x58add926]
  415e5d:	adc    bl,BYTE PTR [esi]
  415e5f:	xchg   DWORD PTR [ecx+0x28],ebp
  415e62:	push   eax
  415e63:	jo     0x415e4a
  415e65:	icebp  
  415e66:	out    0x9b,eax
  415e68:	cld    
  415e69:	dec    edx
  415e6a:	jle    0x415e01
  415e6c:	xor    ebp,DWORD PTR [edx]
  415e6e:	mov    dl,0x80
  415e70:	adc    eax,0x86e66483
  415e75:	cmp    DWORD PTR [ebx-0x3e],esi
  415e78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e79:	add    bl,BYTE PTR [eax]
  415e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e7c:	push   cs
  415e7d:	call   0xcd71:0xb2bf0117
  415e84:	mov    esi,0x8412852a
  415e89:	cs xchg ebx,eax
  415e8b:	scas   eax,DWORD PTR es:[edi]
  415e8c:	out    dx,eax
  415e8d:	mov    esp,0x33ea0efe
  415e92:	sbb    ebx,DWORD PTR [esi+0x0]
  415e95:	push   0x4cbcc984
  415e9a:	inc    ebx
  415e9b:	es push edx
  415e9d:	out    dx,eax
  415e9e:	jae    0x415eef
  415ea0:	adc    al,BYTE PTR [edi+0x40]
  415ea3:	pop    edx
  415ea4:	es loopne 0x415e78
  415ea7:	xor    eax,0xdcc4512e
  415eac:	pxor   mm5,mm4
  415eaf:	push   ebx
  415eb0:	sbb    al,BYTE PTR [esp+esi*1+0x11]
  415eb4:	adc    ecx,ecx
  415eb6:	inc    esi
  415eb7:	mov    edi,0xf070e3af
  415ebc:	dec    esp
  415ebd:	std    
  415ebe:	aaa    
  415ebf:	adc    DWORD PTR [ecx-0x72423c6f],ebx
  415ec5:	xchg   esi,eax
  415ec6:	cld    
  415ec7:	(bad)  
  415ec8:	div    BYTE PTR [edx]
  415eca:	(bad)  
  415ecb:	je     0x415eb7
  415ecd:	cdq    
  415ece:	stos   DWORD PTR es:[edi],eax
  415ecf:	das    
  415ed0:	jle    0x415e9c
  415ed2:	ret    0x2ef6
  415ed5:	sub    eax,0x2100d1be
  415eda:	jl     0x415edb
  415edc:	pusha  
  415edd:	mov    cl,0xe6
  415edf:	fdiv   QWORD PTR [edi]
  415ee1:	mov    edx,DWORD PTR [edx+edx*4]
  415ee4:	shl    BYTE PTR [edx+0x169bc2b9],1
  415eea:	call   0x5ce6:0xd6ca7ddc
  415ef1:	(bad)  
  415ef2:	sbb    eax,0x554a71f
  415ef7:	(bad)  
  415ef8:	sbb    BYTE PTR [edx-0x7c765154],dh
  415efe:	pop    ds
  415eff:	mov    ebp,ebp
  415f01:	outs   dx,BYTE PTR ds:[esi]
  415f02:	rol    bh,1
  415f04:	(bad)  
  415f05:	(bad)  
  415f06:	repz imul edi,DWORD PTR [edi],0x1b14842b
  415f0d:	pop    ds
  415f0e:	inc    esp
  415f0f:	fisubr DWORD PTR [esi]
  415f11:	hlt    
  415f12:	clc    
  415f13:	bound  edx,QWORD PTR [ebp-0x42]
  415f16:	icebp  
  415f17:	or     eax,0xeea65c4e
  415f1c:	inc    esp
  415f1d:	mov    cl,0xe6
  415f1f:	mov    edi,0x345ac7d5
  415f24:	arpl   WORD PTR ds:0x4c0fb4f1,si
  415f2a:	dec    ebp
  415f2b:	leave  
  415f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f2d:	jp     0x415f65
  415f2f:	ds mov ebp,0x1179e4eb
  415f35:	in     al,0x43
  415f37:	ins    DWORD PTR es:[edi],dx
  415f38:	bound  esp,QWORD PTR [ebx-0x75]
  415f3b:	outs   dx,BYTE PTR ds:[esi]
  415f3c:	(bad)  
  415f3d:	cwde   
  415f3e:	sbb    al,0xd8
  415f40:	in     al,0x23
  415f42:	dec    esp
  415f43:	cmc    
  415f44:	imul   ecx,DWORD PTR [edx],0xc64b2cc8
  415f4a:	inc    esi
  415f4b:	inc    ecx
  415f4c:	test   al,0xeb
  415f4e:	inc    edi
  415f4f:	ret    0xd6c6
  415f52:	mov    ebp,0x645a5240
  415f57:	mov    cl,0xc3
  415f59:	ror    DWORD PTR [edi-0x1a28c7fe],0x84
  415f60:	or     eax,0xd1097380
  415f65:	out    dx,al
  415f66:	pop    ds
  415f67:	jl     0x415f9e
  415f69:	ret    0xce5f
  415f6c:	and    cx,WORD PTR fs:[ecx]
  415f70:	and    al,0x88
  415f72:	add    al,0x17
  415f74:	outs   dx,BYTE PTR ds:[esi]
  415f75:	and    DWORD PTR [esi],0xffffffde
  415f78:	or     eax,0x86b1f2c8
  415f7d:	popa   
  415f7e:	jae    0x415f7d
  415f80:	or     al,0xfc
  415f82:	sbb    DWORD PTR [esi],0xcb585e9
  415f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f89:	stos   BYTE PTR es:[edi],al
  415f8a:	jle    0x415fb7
  415f8c:	dec    esp
  415f8d:	fstp   st(0)
  415f8f:	(bad)  
  415f90:	scas   al,BYTE PTR es:[edi]
  415f91:	adc    al,0x90
  415f93:	mov    ah,0x73
  415f95:	call   0x482a6cf8
  415f9a:	mov    dh,0xdd
  415f9c:	lods   al,BYTE PTR ds:[esi]
  415f9d:	call   FWORD PTR [edi+esi*8+0x32]
  415fa1:	pop    edx
  415fa2:	sbb    eax,0x3625177c
  415fa7:	call   FWORD PTR [ebx+0x5c2a9a41]
  415fad:	xchg   esp,eax
  415fae:	inc    edx
  415faf:	xor    dh,BYTE PTR [ebx+ebx*8-0x50a36dc7]
  415fb6:	jmp    0x59f5:0xd218f265
  415fbd:	push   ebp
  415fbe:	mov    ds:0x6894d046,al
  415fc3:	fs mov ss,esp
  415fc6:	xor    DWORD PTR [eax+0x2],0x9d906bab
  415fcd:	sub    DWORD PTR [ecx+0x247ae406],ecx
  415fd3:	div    ebx
  415fd5:	test   DWORD PTR [ecx-0x27],0x2c0441e7
  415fdc:	fwait
  415fdd:	push   eax
  415fde:	dec    esp
  415fdf:	not    BYTE PTR [esi+0x411cd21b]
  415fe5:	or     al,0xc1
  415fe7:	in     eax,dx
  415fe8:	(bad)  
  415fe9:	fucomp st(4)
  415feb:	ror    ecx,cl
  415fed:	or     bh,BYTE PTR [edi]
  415fef:	push   ds
  415ff0:	or     eax,0xc7a57fb3
  415ff5:	test   DWORD PTR [eax*4-0xe16fb05],eax
  415ffc:	ins    DWORD PTR es:[edi],dx
  415ffd:	fbld   TBYTE PTR [eax+0x7e]
  416000:	pop    eax
  416001:	stc    
  416002:	mov    ds:0xe9ee632b,eax
  416007:	dec    esi
  416008:	add    eax,0xcf694cf7
  41600d:	pushf  
  41600e:	rcl    ecx,cl
  416010:	mov    cl,0x6f
  416012:	add    BYTE PTR [esi-0x58],cl
  416015:	push   ebp
  416016:	jp     0x416062
  416018:	loop   0x416074
  41601a:	dec    edx
  41601b:	lods   eax,DWORD PTR ds:[esi]
  41601c:	das    
  41601d:	push   0xeb37b18b
  416022:	out    0x94,eax
  416024:	call   0x27294ca3
  416029:	fidivr WORD PTR [eax-0x63]
  41602c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41602d:	push   ss
  41602e:	jmp    0x52be:0x2e799597
  416035:	push   edi
  416036:	push   ebx
  416037:	iret   
  416038:	retf   
  416039:	test   eax,0xd1a33f5c
  41603e:	adc    DWORD PTR [edx],esi
  416040:	(bad)  
  416041:	scas   eax,DWORD PTR es:[edi]
  416042:	fdiv   QWORD PTR [edi+0x67]
  416045:	test   al,0x37
  416047:	iret   
  416048:	je     0x415fd6
  41604a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41604b:	aam    0x2e
  41604d:	pushf  
  41604e:	mov    cl,0x8e
  416050:	inc    edi
  416051:	dec    edi
  416052:	add    bh,BYTE PTR [edx]
  416054:	mov    al,ds:0xbbabf25d
  416059:	fs mov dl,0xe5
  41605c:	es in  eax,dx
  41605e:	and    esp,DWORD PTR [esi+0x761ee196]
  416064:	dec    ebx
  416065:	sub    al,BYTE PTR [ecx]
  416067:	out    0x49,al
  416069:	mov    esi,0x3187b49d
  41606e:	inc    esi
  41606f:	sbb    DWORD PTR [ecx],eax
  416071:	mov    edx,0x32240a49
  416076:	ror    BYTE PTR [edi],0xb3
  416079:	jge    0x416081
  41607b:	mov    dl,0x56
  41607d:	and    eax,DWORD PTR [ebx]
  41607f:	add    edi,DWORD PTR [edx]
  416081:	jno    0x4160bf
  416083:	and    DWORD PTR [ebx-0x55],0xf13cbf2
  41608a:	and    cl,bl
  41608c:	jl     0x4160c4
  41608e:	and    BYTE PTR [edi+0x76],al
  416091:	popf   
  416092:	test   eax,0x9b20f5d7
  416097:	das    
  416098:	mov    eax,0x2d578f1f
  41609d:	les    ebp,FWORD PTR [esi]
  41609f:	(bad)  
  4160a0:	jl     0x416108
  4160a2:	test   eax,0x69958629
  4160a7:	dec    esi
  4160a8:	les    edi,FWORD PTR [edi-0x19239f3]
  4160ae:	fmul   st(4),st
  4160b0:	inc    esi
  4160b1:	or     eax,0xffcce1f4
  4160b6:	in     eax,dx
  4160b7:	call   0xcad1:0x7bab0152
  4160be:	cmp    BYTE PTR [ebx+0xce14af5],ah
  4160c4:	and    edx,ebp
  4160c6:	adc    BYTE PTR [edi-0x4a],ch
  4160c9:	and    eax,0x44425b57
  4160ce:	jo     0x4160f0
  4160d0:	in     eax,dx
  4160d1:	loop   0x4160a0
  4160d3:	fcom   DWORD PTR [ebx]
  4160d5:	mov    edx,0xc3ea3187
  4160da:	jnp    0x4160e9
  4160dc:	fdiv   st,st(1)
  4160de:	dec    ebx
  4160df:	pop    edi
  4160e0:	(bad)  
  4160e2:	xchg   BYTE PTR [eax+0x67819f61],bh
  4160e8:	xchg   edi,eax
  4160e9:	push   0x9f6ac7f0
  4160ee:	mov    ebx,DWORD PTR [ecx-0x11d80377]
  4160f4:	cmp    ebx,DWORD PTR [ebx]
  4160f6:	xor    edx,DWORD PTR es:[eax+eax*4+0x4]
  4160fb:	and    eax,0x78278e1d
  416100:	icebp  
  416101:	and    ah,BYTE PTR [esi-0x56]
  416104:	dec    ebx
  416105:	add    eax,0x951d5507
  41610a:	and    DWORD PTR [ebx],esp
  41610c:	sub    eax,0xbd6c615e
  416111:	dec    ebp
  416112:	addr16 out 0x25,eax
  416115:	stos   BYTE PTR es:[edi],al
  416116:	jne    0x416145
  416118:	mov    al,0x29
  41611a:	push   0x7fcc09aa
  41611f:	mov    ch,0xe5
  416121:	mov    edx,0xbf68d2cd
  416126:	ja     0x41612a
  416128:	sbb    bh,BYTE PTR [ecx]
  41612a:	push   eax
  41612b:	jmp    0x1f5b3acc
  416130:	dec    eax
  416131:	push   ebx
  416132:	sbb    esi,DWORD PTR [ebx-0x67b2d2a9]
  416138:	push   ecx
  416139:	scas   al,BYTE PTR es:[edi]
  41613a:	inc    esp
  41613b:	jp     0x4160bd
  41613d:	jmp    0x2509:0xe2922ceb
  416144:	inc    esp
  416145:	retf   0xaccf
  416148:	cmp    ch,BYTE PTR [eax]
  41614a:	shl    DWORD PTR [ecx-0x4f7be716],cl
  416150:	mov    edi,0x18972cb5
  416155:	scas   eax,DWORD PTR es:[edi]
  416156:	pop    esi
  416157:	xor    BYTE PTR [ebx+0x35],al
  41615a:	aas    
  41615b:	es fcomi st,st(7)
  41615e:	xchg   BYTE PTR [edi-0x3174fec5],dh
  416164:	rcl    DWORD PTR [esi-0x1e036caa],1
  41616a:	push   0xffffffba
  41616c:	pop    edx
  41616d:	aad    0x37
  41616f:	mov    ch,0x57
  416171:	dec    eax
  416172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416173:	add    eax,0x85218d12
  416178:	ror    BYTE PTR [ebx],1
  41617a:	adc    ah,BYTE PTR [edx-0x78e507dc]
  416180:	add    ebp,edi
  416182:	mov    esi,0xce5aaa62
  416187:	imul   BYTE PTR ds:0x1b34f09a
  41618d:	or     eax,0x10103a43
  416192:	cmp    eax,DWORD PTR [edx-0x5a]
  416195:	jns    0x4161f3
  416197:	mov    edx,0x7a7d978c
  41619c:	outs   dx,BYTE PTR ds:[esi]
  41619d:	mov    esi,0x720a5002
  4161a2:	ucomiss xmm2,DWORD PTR [eax]
  4161a5:	sub    eax,0x487e566e
  4161aa:	loope  0x416226
  4161ac:	cmp    ebx,edx
  4161ae:	and    ch,dh
  4161b0:	push   ebp
  4161b1:	xchg   ebx,eax
  4161b2:	inc    ebp
  4161b3:	or     edx,DWORD PTR [esi-0x26]
  4161b6:	fistp  WORD PTR [ebx-0x60]
  4161b9:	into   
  4161ba:	scas   al,BYTE PTR es:[edi]
  4161bb:	push   edx
  4161bc:	ror    BYTE PTR [eax+0x30c1eb43],cl
  4161c2:	or     ebx,DWORD PTR [eax+0x5f1712cf]
  4161c8:	xlat   BYTE PTR ds:[ebx]
  4161c9:	out    dx,eax
  4161ca:	loop   0x416190
  4161cc:	shl    DWORD PTR [ecx+0x21],0xde
  4161d0:	in     al,dx
  4161d1:	out    0xe9,al
  4161d3:	into   
  4161d4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d6:	pop    ebp
  4161d7:	pop    ebp
  4161d8:	aas    
  4161d9:	fnstenv [ebp+0x1f9da294]
  4161df:	dec    esi
  4161e0:	pop    ds
  4161e1:	mov    WORD PTR ds:0x61300de8,ss
  4161e7:	mov    bh,dl
  4161e9:	loopne 0x416242
  4161eb:	bound  esi,QWORD PTR [edi+0x16]
  4161ee:	lods   eax,DWORD PTR ds:[esi]
  4161ef:	lds    eax,FWORD PTR [edx+0x4]
  4161f2:	sub    BYTE PTR [ebp+0x33],bh
  4161f5:	jg     0x416188
  4161f7:	lods   eax,DWORD PTR ds:[esi]
  4161f8:	mov    DWORD PTR [ebx+edx*4+0x62],edx
  4161fc:	push   ss
  4161fd:	ret    
  4161fe:	das    
  4161ff:	scas   eax,DWORD PTR es:[edi]
  416200:	loop   0x416236
  416202:	scas   eax,DWORD PTR es:[edi]
  416203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416204:	jb     0x4161dd
  416206:	test   BYTE PTR [edi+0x37],0x4a
  41620a:	pop    edi
  41620b:	mov    dh,0x30
  41620d:	inc    ebp
  41620e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620f:	out    dx,al
  416210:	test   BYTE PTR [ebx+eiz*1+0x3feda861],0xf1
  416218:	mov    ?,ebx
  41621a:	cmp    al,0x63
  41621c:	push   ss
  41621d:	cmp    BYTE PTR [eax],0xf6
  416220:	ror    DWORD PTR ss:[ebx-0x27a250a1],1
  416227:	stos   BYTE PTR es:[edi],al
  416228:	data16 or BYTE PTR ds:[edx+0xbaef463],cl
  416230:	lds    edx,FWORD PTR [ebp-0x2a420ae4]
  416236:	push   eax
  416237:	push   esp
  416238:	push   es
  416239:	xchg   edi,eax
  41623a:	xchg   ebp,eax
  41623b:	loop   0x4161ef
  41623d:	mov    cl,0x40
  41623f:	call   0xde41fa76
  416244:	sar    DWORD PTR gs:[ebx+0x78],1
  416248:	xchg   eax,ebp
  41624a:	mov    ch,0xbc
  41624c:	into   
  41624d:	nop
  41624e:	cs dec ecx
  416250:	cs dec al
  416253:	mov    ebx,0x3046141f
  416258:	pop    ds
  416259:	adc    al,BYTE PTR [eax-0x6fd0eff0]
  41625f:	mov    ecx,0x1c7aea48
  416264:	jmp    0x8cebe2fc
  416269:	leave  
  41626a:	sub    ebx,ebx
  41626c:	mov    esi,0x6e44ede6
  416271:	ror    BYTE PTR [edi+0x6f],1
  416274:	mov    ecx,0xc6a0d896
  416279:	mul    BYTE PTR [ecx-0x3f2d710e]
  41627f:	div    BYTE PTR [ebx]
  416281:	pushf  
  416282:	mov    al,ds:0x336e3e85
  416287:	mov    al,ds:0x687dd4d5
  41628c:	test   eax,0x28a65a78
  416291:	mov    DWORD PTR [eax-0x72],esi
  416294:	xor    edi,DWORD PTR ds:0x867311cf
  41629a:	popa   
  41629b:	repnz repz clc 
  41629e:	arpl   WORD PTR [edx-0x70],sp
  4162a1:	repnz int 0xdf
  4162a4:	pop    esp
  4162a5:	or     BYTE PTR [ecx+0x52],0xec
  4162a9:	dec    ebp
  4162aa:	sub    al,0xf
  4162ac:	mov    esi,0x8d5a6a89
  4162b1:	push   0x235186eb
  4162b6:	jno    0x41630a
  4162b8:	xor    BYTE PTR [eax-0x4d],dh
  4162bb:	mov    dh,0x7b
  4162bd:	sti    
  4162be:	fisttp QWORD PTR [esi+0x6be98ff8]
  4162c4:	jmp    0xfbcf4709
  4162c9:	inc    ecx
  4162ca:	add    bh,BYTE PTR [ebx+0x62]
  4162cd:	sbb    cl,BYTE PTR [eax-0x1aa78859]
  4162d3:	out    0xda,eax
  4162d5:	stc    
  4162d6:	popa   
  4162d7:	mov    eax,0x6d9ff1d7
  4162dc:	mov    ss,ecx
  4162de:	stos   DWORD PTR es:[edi],eax
  4162df:	ret    0x4719
  4162e2:	push   0xffffffda
  4162e4:	push   es
  4162e5:	mov    ds:0x74cec3a3,eax
  4162ea:	mov    fs,WORD PTR [ecx+0x3cf295fb]
  4162f0:	or     BYTE PTR [edi],cl
  4162f2:	mov    al,0xad
  4162f4:	inc    esp
  4162f5:	cmp    eax,0xae346eef
  4162fa:	stos   BYTE PTR es:[edi],al
  4162fb:	lahf   
  4162fc:	js     0x4162bb
  4162fe:	mov    ebp,0xeb950c25
  416303:	ja     0x4162e4
  416305:	mov    esp,0x63b1c13a
  41630a:	push   esi
  41630b:	mov    ds:0xf0ceac2,eax
  416310:	lahf   
  416311:	and    al,0x6
  416313:	lea    eax,[esi+0x731d3159]
  416319:	dec    esi
  41631a:	dec    ebx
  41631b:	je     0x4162ea
  41631d:	sbb    DWORD PTR [eax+0x45],esi
  416320:	(bad)  
  416321:	fs fwait
  416323:	xchg   edx,eax
  416324:	and    al,0xe4
  416326:	jo     0x41630c
  416328:	out    0x91,al
  41632a:	stos   BYTE PTR es:[edi],al
  41632b:	mov    eax,ds:0xfd73a09d
  416330:	in     eax,dx
  416331:	lea    esi,[esi+0x6f]
  416334:	add    eax,0x686e9ee
  416339:	ins    DWORD PTR es:[edi],dx
  41633a:	lods   eax,DWORD PTR ds:[esi]
  41633b:	call   0xc94d04f8
  416340:	in     eax,dx
  416341:	xor    DWORD PTR [ecx+0x4e0d5f0e],0xffffffb3
  416348:	mov    BYTE PTR [ebx+eiz*2],ah
  41634b:	sbb    cl,ah
  41634d:	adc    dh,BYTE PTR [edi+0x3d]
  416350:	test   DWORD PTR [ebx+0x7a],0x32650323
  416357:	(bad)  
  416359:	cmp    eax,0x5598a47f
  41635e:	mov    fs,esp
  416360:	das    
  416361:	ret    
  416362:	mov    edx,0xb35b6729
  416367:	push   ebp
  416368:	pop    edx
  416369:	xor    eax,0x683da2ff
  41636e:	inc    esi
  41636f:	pop    esp
  416370:	fld    QWORD PTR [ebx]
  416372:	adc    BYTE PTR [ebx+0x97a226d],bl
  416378:	jno    0x41635f
  41637a:	jp     0x4163b0
  41637c:	jmp    0x416317
  41637e:	das    
  41637f:	daa    
  416380:	mov    ds:0x36b12a79,al
  416385:	dec    esi
  416386:	mov    esi,0x7683929f
  41638b:	cmc    
  41638c:	out    dx,eax
  41638d:	loopne 0x416384
  41638f:	push   ecx
  416390:	ins    BYTE PTR es:[edi],dx
  416391:	mov    bh,0x2
  416393:	stos   BYTE PTR es:[edi],al
  416394:	mov    bl,0x5e
  416396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416397:	in     al,dx
  416398:	dec    eax
  416399:	fld    DWORD PTR [ecx+0x73ea2acb]
  41639f:	out    dx,eax
  4163a0:	dec    ecx
  4163a1:	icebp  
  4163a2:	xor    eax,0x76d1765d
  4163a7:	push   esp
  4163a8:	adc    DWORD PTR [ebx],ecx
  4163aa:	call   0x9bb:0x5816349a
  4163b1:	arpl   WORD PTR es:[eax+0x7e],di
  4163b5:	and    BYTE PTR [ebx],cl
  4163b7:	push   ds
  4163b8:	push   edx
  4163b9:	pop    ds
  4163ba:	push   esi
  4163bb:	jnp    0x4163f7
  4163bd:	loope  0x4163a6
  4163bf:	dec    esi
  4163c0:	add    BYTE PTR [edx+ebp*8],bl
  4163c3:	bound  ecx,QWORD PTR [ebp-0x1]
  4163c6:	mov    ebx,0xfd4bbb2f
  4163cb:	push   es
  4163cc:	pop    DWORD PTR [esi+0x79]
  4163cf:	xchg   ebp,eax
  4163d0:	xchg   ebx,eax
  4163d1:	(bad)  [edi-0x78]
  4163d4:	mov    cs,WORD PTR [ebp+ebx*8-0x14f6d65f]
  4163db:	imul   edx,edx,0x5851f072
  4163e1:	cmp    eax,0xc4f4dadc
  4163e6:	jle    0x4163e7
  4163e8:	inc    ecx
  4163e9:	mul    BYTE PTR [edi+0x432af60f]
  4163ef:	hlt    
  4163f0:	mov    al,ds:0x8f95e613
  4163f5:	gs xchg ecx,eax
  4163f7:	lds    ecx,FWORD PTR [ecx]
  4163f9:	inc    ebx
  4163fa:	inc    eax
  4163fb:	imul   edx,DWORD PTR [esi],0xffffffb8
  4163fe:	iret   
  4163ff:	into   
  416400:	push   cs
  416401:	mov    bh,0x65
  416403:	rcr    DWORD PTR [ecx+0x78],0x68
  416407:	push   edi
  416408:	lods   eax,DWORD PTR ds:[esi]
  416409:	repz neg DWORD PTR [eax]
  41640c:	adc    ecx,DWORD PTR [edi]
  41640e:	pop    esp
  41640f:	mov    eax,0xd4780476
  416414:	fcmovnbe st,st(2)
  416416:	xor    DWORD PTR [edi+ebp*1+0x12],0x381af8dc
  41641e:	aas    
  41641f:	inc    edx
  416420:	inc    esp
  416421:	leave  
  416422:	pop    ss
  416423:	sahf   
  416424:	xor    al,0xf4
  416426:	mov    bl,0xf6
  416428:	int3   
  416429:	sub    BYTE PTR [edi+0xc],cl
  41642c:	inc    ecx
  41642d:	sbb    eax,0x14edeede
  416432:	sbb    eax,0x9f299097
  416437:	outs   dx,DWORD PTR ds:[esi]
  416438:	sbb    eax,0x8b40838
  41643d:	pop    eax
  41643e:	mov    ecx,0x16c33195
  416443:	jns    0x41641e
  416445:	dec    ecx
  416446:	adc    BYTE PTR [edx],dh
  416448:	pop    ss
  416449:	mov    ah,0xe9
  41644b:	cli    
  41644c:	push   0xffffffb0
  41644e:	cmp    DWORD PTR [esi+0x59],ebx
  416451:	dec    ecx
  416452:	jmp    esp
  416454:	ret    
  416455:	rol    eax,1
  416457:	test   al,0xb7
  416459:	cmp    eax,0xbb95c213
  41645e:	fidiv  DWORD PTR [eax-0x4e]
  416461:	das    
  416462:	jb     0x416498
  416464:	test   al,0x11
  416466:	xchg   esp,eax
  416467:	aam    0xe6
  416469:	arpl   WORD PTR [edi+0x3b7f0c95],dx
  41646f:	mov    ecx,0xacdd647
  416474:	imul   esi,DWORD PTR ds:0xfdcd32ae,0x1d
  41647b:	cmp    DWORD PTR ds:0x9fb87124,ebp
  416481:	dec    eax
  416482:	mov    WORD PTR [esi+0x140ebdef],es
  416488:	jmp    0x1496:0xecedd179
  41648f:	mov    eax,ds:0xda2ac064
  416494:	cmp    al,0xb
  416496:	enter  0xe051,0x9b
  41649a:	test   BYTE PTR [ebx-0xef1698a],0xe0
  4164a1:	mov    DWORD PTR ds:0x38b1acd2,eax
  4164a7:	push   0x5a937254
  4164ac:	inc    edx
  4164ad:	lods   eax,DWORD PTR ds:[esi]
  4164ae:	sub    bl,BYTE PTR [ecx]
  4164b0:	mov    bl,0x16
  4164b2:	pop    ebp
  4164b3:	add    cl,ah
  4164b5:	addr16 adc eax,0x1940c075
  4164bb:	push   esp
  4164bc:	push   edx
  4164bd:	lods   eax,DWORD PTR ds:[esi]
  4164be:	cmp    DWORD PTR [eax],ebx
  4164c0:	or     bl,BYTE PTR [edx+0x3b]
  4164c3:	in     al,0x3b
  4164c5:	(bad)  
  4164c6:	js     0x4164cd
  4164c8:	hlt    
  4164c9:	out    0x97,eax
  4164cb:	cld    
  4164cc:	gs adc eax,0xade625d8
  4164d2:	cld    
  4164d3:	pop    es
  4164d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164d5:	inc    ecx
  4164d6:	xchg   ch,ch
  4164d8:	inc    ebp
  4164d9:	push   eax
  4164da:	mov    dl,0x83
  4164dc:	das    
  4164dd:	inc    esi
  4164de:	test   eax,0x99de3c24
  4164e3:	xchg   BYTE PTR [esi],al
  4164e5:	xchg   ebp,eax
  4164e6:	mov    esp,0x858d3d07
  4164eb:	mov    WORD PTR ds:0xe28ecd8c,?
  4164f1:	daa    
  4164f2:	push   ds
  4164f3:	and    eax,0xaec7d4cc
  4164f8:	push   ecx
  4164f9:	dec    ecx
  4164fa:	dec    DWORD PTR [ebp+0x29]
  4164fd:	xchg   esp,eax
  4164fe:	loop   0x41657b
  416500:	dec    ecx
  416501:	dec    ebp
  416502:	mov    edi,0xec0be03f
  416507:	bound  ecx,QWORD PTR [ebx]
  416509:	lea    eax,ds:0x77f2319
  41650f:	xchg   ebx,eax
  416510:	sti    
  416511:	sbb    BYTE PTR ss:[ebx+0x677ee9f5],0x14
  416519:	sbb    eax,0x38689831
  41651e:	cwde   
  41651f:	xor    al,0x54
  416521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416522:	mov    ah,BYTE PTR [esi-0x21150559]
  416528:	repnz div DWORD PTR [ebx]
  41652b:	inc    esp
  41652c:	cs in  al,0x4b
  41652f:	jbe    0x41652b
  416531:	lock arpl WORD PTR [eax+eiz*8+0x255881de],si
  416539:	std    
  41653a:	and    ah,BYTE PTR [ebp-0x37]
  41653d:	mov    ebx,0x428ca3de
  416542:	mov    eax,0x91b8f74
  416547:	adc    eax,0xd69759fe
  41654c:	and    BYTE PTR fs:[esi],cl
  41654f:	mov    edx,DWORD PTR [edi]
  416551:	rep stos BYTE PTR es:[edi],al
  416553:	adc    edi,ebp
  416555:	sti    
  416556:	mov    bh,0x87
  416558:	push   0x4d8992fc
  41655d:	addr16 clc 
  41655f:	push   ebx
  416560:	loope  0x416554
  416562:	shr    BYTE PTR [eax+0x296735d1],0xf1
  416569:	jl     0x416532
  41656b:	cmp    esi,DWORD PTR fs:[edx-0xa]
  41656f:	out    0xfc,eax
  416571:	retf   0x77a7
  416574:	enter  0xf286,0xb6
  416578:	imul   edi,edi,0xffffffe4
  41657b:	mov    al,ds:0xca013d88
  416580:	xor    BYTE PTR [ebx+ebx*1],bh
  416583:	lock sub eax,0xaf95b707
  416589:	into   
  41658a:	test   eax,0xe6c4b3b5
  41658f:	leave  
  416590:	shr    BYTE PTR [edx-0x73],cl
  416593:	and    BYTE PTR [ebp-0x2f6ecd6],ch
  416599:	(bad)  
  41659a:	mov    ah,0xd
  41659c:	xchg   ebx,eax
  41659d:	sub    dl,dl
  41659f:	popf   
  4165a0:	mov    eax,0x4e7e6351
  4165a5:	mov    BYTE PTR [ebx+0x32],0x8f
  4165a9:	test   eax,0xc55cb16a
  4165ae:	jb     0x4165b0
  4165b0:	out    0xe8,eax
  4165b2:	jp     0x416583
  4165b4:	adc    al,0x14
  4165b6:	cmp    eax,DWORD PTR [ebx-0x10]
  4165b9:	jae    0x41657c
  4165bb:	out    0x5d,al
  4165bd:	pop    ss
  4165be:	pop    ecx
  4165bf:	popf   
  4165c0:	aad    0x3a
  4165c2:	xchg   ebx,eax
  4165c3:	mov    esi,0x740effff
  4165c8:	add    DWORD PTR [esi],ebp
  4165ca:	xchg   dl,bl
  4165cc:	or     cl,dh
  4165ce:	enter  0x7de3,0xa7
  4165d2:	test   DWORD PTR [esi+0x1d],edx
  4165d5:	or     esp,eax
  4165d7:	mov    ss,WORD PTR [ecx+0x2c]
  4165da:	inc    ebx
  4165db:	push   esi
  4165dc:	dec    ebp
  4165dd:	push   esp
  4165de:	sub    al,BYTE PTR [edx-0x6f734ecf]
  4165e4:	jae    0x416639
  4165e6:	jmp    0x50e1cf04
  4165eb:	mov    dh,0xc3
  4165ed:	clc    
  4165ee:	cdq    
  4165ef:	into   
  4165f0:	mov    esi,0x58bc5de6
  4165f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f6:	push   ecx
  4165f7:	dec    esi
  4165f8:	adc    esp,DWORD PTR [eax]
  4165fa:	jne    0x416622
  416600:	movsx  di,BYTE PTR [eax]
  416604:	mov    ebx,0x3b4b
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    bl,dl
  416673:	push   esp
  416674:	jmp    0xc062:0x6123db1b
  41667b:	pop    edi
  41667c:	bound  esp,QWORD PTR [edx+0x6a]
  41667f:	jg     0x416673
  416681:	pop    ebx
  416682:	dec    esi
  416683:	clc    
  416684:	js     0x4166ff
  416686:	adc    BYTE PTR [eax],al
  416688:	call   0xfff4:0xdb209557
  41668f:	sahf   
  416690:	adc    al,0xcc
  416692:	loope  0x4166a3
  416694:	ins    BYTE PTR es:[edi],dx
  416695:	ror    DWORD PTR [edx-0x61],cl
  416698:	call   0x40e33262
  41669d:	out    0x1b,eax
  41669f:	adc    ah,BYTE PTR [ebx+ebx*2+0x58e8a95]
  4166a6:	xor    ah,bl
  4166a8:	fst    QWORD PTR [ebp-0x70]
  4166ab:	lods   eax,DWORD PTR ds:[esi]
  4166ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166ad:	ins    BYTE PTR es:[edi],dx
  4166ae:	int3   
  4166af:	pop    esi
  4166b0:	je     0x41667c
  4166b2:	inc    ebx
  4166b3:	adc    BYTE PTR [esi],bl
  4166b5:	aad    0x81
  4166b7:	in     al,0x4f
  4166b9:	fs dec edx
  4166bb:	pop    edi
  4166bc:	idiv   BYTE PTR [edi+0x1]
  4166bf:	cli    
  4166c0:	fstp   TBYTE PTR [esi-0x44]
  4166c3:	mov    cl,BYTE PTR [edx+0x58b02524]
  4166c9:	sub    al,0x3d
  4166cb:	dec    edi
  4166cc:	cmp    eax,0x7744c450
  4166d1:	ja     0x41672a
  4166d3:	int3   
  4166d4:	adc    al,0xd5
  4166d6:	std    
  4166d7:	pop    ebx
  4166d8:	or     eax,0x1fb5fad2
  4166dd:	lods   al,BYTE PTR ds:[esi]
  4166de:	ds jp  0x41673e
  4166e1:	aaa    
  4166e2:	(bad)  
  4166e3:	in     al,dx
  4166e4:	rdtsc  
  4166e6:	(bad)  
  4166e7:	mov    ah,0x79
  4166e9:	loope  0x416681
  4166eb:	jb     0x41668e
  4166ed:	xchg   DWORD PTR [ecx],edi
  4166ef:	stc    
  4166f0:	pushf  
  4166f1:	ret    
  4166f2:	dec    BYTE PTR [ebx+0x67]
  4166f5:	or     edi,DWORD PTR [edi]
  4166f7:	rcr    BYTE PTR [ebx-0x665adc80],cl
  4166fd:	mov    dl,0x82
  4166ff:	inc    ebp
  416700:	repnz add BYTE PTR [esi],bh
  416703:	dec    ebp
  416704:	outs   dx,DWORD PTR ds:[esi]
  416705:	enter  0x5d1b,0x9
  416709:	idiv   BYTE PTR [esi+eiz*4-0x618acd3c]
  416710:	mov    ds:0x16a6838f,al
  416715:	xchg   edx,eax
  416716:	cmp    BYTE PTR [eax-0x58b63e9c],bl
  41671c:	xchg   BYTE PTR [edx+0x6b93e9be],al
  416722:	adc    ah,al
  416724:	dec    esp
  416725:	retf   0x1748
  416728:	in     al,dx
  416729:	in     al,dx
  41672a:	in     eax,dx
  41672b:	push   0xcf8558d1
  416730:	lock stc 
  416732:	out    0x23,eax
  416734:	and    BYTE PTR [esi+0x3e3d910f],dl
  41673a:	push   eax
  41673b:	out    dx,eax
  41673c:	aaa    
  41673d:	lahf   
  41673e:	mul    al
  416740:	out    dx,al
  416741:	sub    BYTE PTR [ebx+ecx*4],cl
  416744:	jb     0x4167b0
  416746:	dec    edi
  416747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416748:	stos   BYTE PTR es:[edi],al
  416749:	int    0xb4
  41674b:	jmp    0x8d953e06
  416750:	repz adc BYTE PTR [edx+0x44],bh
  416754:	loope  0x416715
  416756:	retf   
  416757:	aaa    
  416758:	(bad)  
  416759:	cmc    
  41675a:	xlat   BYTE PTR ds:[ebx]
  41675b:	mov    esp,0x5f54a13d
  416760:	daa    
  416761:	mov    esi,0x972f6c9a
  416766:	jne    0x41673a
  416768:	aas    
  416769:	pop    ebx
  41676a:	jle    0x4166ec
  41676c:	cmp    ebx,DWORD PTR [edi+esi*2]
  41676f:	and    esp,eax
  416771:	shr    DWORD PTR [esi-0x42],1
  416774:	dec    esp
  416775:	cmp    BYTE PTR [ebp-0x556f5265],ch
  41677b:	mov    WORD PTR [eax-0x735d840b],cs
  416781:	push   edx
  416782:	and    DWORD PTR [ecx-0x7e],ecx
  416785:	sbb    dl,bl
  416787:	cmp    BYTE PTR [eax],dh
  416789:	sub    al,0xe2
  41678b:	pop    ebx
  41678c:	and    eax,DWORD PTR [eax+0x4a]
  41678f:	in     al,0x1
  416791:	adc    edx,0xf3b19361
  416797:	sub    DWORD PTR [esi],ebp
  416799:	mov    cl,0xda
  41679b:	dec    ecx
  41679c:	sti    
  41679d:	int    0x34
  41679f:	dec    ecx
  4167a0:	push   ds
  4167a1:	fmulp  st(2),st
  4167a3:	test   al,0x0
  4167a5:	sbb    BYTE PTR [esi],0xc6
  4167a8:	std    
  4167a9:	sbb    DWORD PTR [ecx+0x49],0xffffffdc
  4167ad:	out    0x8,eax
  4167af:	inc    esp
  4167b0:	mov    DWORD PTR [ecx+0x6561b109],0x26934fd5
  4167ba:	adc    edx,eax
  4167bc:	(bad)  
  4167bd:	stc    
  4167be:	icebp  
  4167bf:	cmp    ecx,DWORD PTR [edi+0xd]
  4167c2:	retf   
  4167c3:	adc    al,0x3e
  4167c5:	jnp    0x4167eb
  4167c7:	push   ecx
  4167c8:	pop    esp
  4167c9:	add    bl,cl
  4167cb:	bound  edi,QWORD PTR ds:0xbdc33326
  4167d1:	mov    al,ds:0xda44f795
  4167d6:	mov    eax,ds:0x8695705c
  4167db:	in     eax,dx
  4167dc:	mov    al,BYTE PTR [edi+0x428ac26f]
  4167e2:	test   esp,ecx
  4167e4:	cmc    
  4167e5:	dec    esp
  4167e6:	jge    0x4167e3
  4167e8:	loope  0x4167f5
  4167ea:	outs   dx,BYTE PTR ds:[esi]
  4167eb:	lods   al,BYTE PTR ds:[esi]
  4167ec:	xchg   edi,eax
  4167ed:	xchg   ecx,eax
  4167ee:	rcr    DWORD PTR [edx+ebp*8],0x12
  4167f2:	cmp    al,0xff
  4167f4:	stos   BYTE PTR es:[edi],al
  4167f5:	cld    
  4167f6:	mov    dl,0x1e
  4167f8:	loopne 0x4167ff
  4167fa:	xor    ebp,DWORD PTR [ebx-0x7a]
  4167fd:	jbe    0x4167ec
  4167ff:	and    dl,0x53
  416802:	xchg   edx,eax
  416803:	test   DWORD PTR [esi+esi*1+0x79afb391],edi
  41680a:	iret   
  41680b:	(bad)  
  41680c:	xchg   edi,eax
  41680d:	in     eax,dx
  41680e:	mov    ah,0xaf
  416810:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  416812:	fcom   QWORD PTR [ebx+0xc]
  416815:	mov    ds:0xa3462e18,al
  41681a:	loop   0x41680d
  41681c:	jmp    0x41681a
  41681e:	int3   
  41681f:	or     dh,bh
  416821:	mov    esp,0xd445ba5f
  416826:	retf   0x4274
  416829:	adc    bl,al
  41682b:	pusha  
  41682c:	sar    DWORD PTR [ebx+0x43],1
  41682f:	xor    eax,DWORD PTR [ebp+esi*4-0x79]
  416833:	sbb    dl,BYTE PTR [ebx+0x55d0330c]
  416839:	sub    ah,al
  41683b:	retf   
  41683c:	test   al,0xa1
  41683e:	xchg   edx,eax
  41683f:	xor    ecx,edx
  416841:	pushfw 
  416843:	int3   
  416844:	call   DWORD PTR ds:0xea7629d6
  41684a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41684b:	adc    ah,BYTE PTR [ebx+0x69fbb86f]
  416851:	loopne 0x416888
  416853:	mov    dh,BYTE PTR [edi-0x42]
  416856:	mov    eax,0xea174603
  41685b:	les    edi,FWORD PTR [esi]
  41685d:	ja     0x4167ef
  41685f:	mov    ebx,0x9a2bd211
  416864:	xor    ebp,DWORD PTR [edi-0x39]
  416867:	lods   eax,DWORD PTR ds:[esi]
  416868:	and    ebp,0x2e6b7584
  41686e:	sbb    DWORD PTR [esi+0x54],esi
  416871:	sub    al,0xc6
  416873:	cmp    eax,DWORD PTR [ebx+eiz*8]
  416876:	cmp    edi,esi
  416878:	jne    0x4168c6
  41687a:	and    DWORD PTR [ecx+0x6ee82ef6],0x4c
  416881:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416882:	arpl   di,sp
  416884:	jp     0x4168cb
  416886:	popa   
  416887:	mov    dl,0x6c
  416889:	aas    
  41688a:	ja     0x416899
  41688c:	shl    ah,cl
  41688e:	cmc    
  41688f:	lahf   
  416890:	lock push esp
  416892:	nop
  416893:	jb     0x41684e
  416895:	mov    esp,0x8c213bf0
  41689a:	cmc    
  41689b:	push   0x785bd431
  4168a0:	or     DWORD PTR [eax+0x251e5113],eax
  4168a6:	or     DWORD PTR [ebx+0x4a],ebx
  4168a9:	retf   
  4168aa:	dec    esp
  4168ab:	inc    eax
  4168ac:	fld    DWORD PTR [edx+0x7997e36b]
  4168b2:	or     ebp,DWORD PTR [edx+edx*8+0x12]
  4168b6:	adc    al,0x38
  4168b8:	xor    al,0x11
  4168ba:	pop    ss
  4168bb:	shr    BYTE PTR [esi+0xc91d268],0x4b
  4168c2:	sbb    edi,0xffffffc8
  4168c5:	shr    BYTE PTR [ebp+0x2c848eca],0x0
  4168cc:	sbb    BYTE PTR [ecx],dl
  4168ce:	xor    edx,DWORD PTR [edi-0x10]
  4168d1:	push   esi
  4168d2:	stos   BYTE PTR es:[edi],al
  4168d3:	loopne 0x416948
  4168d5:	pop    edi
  4168d6:	arpl   WORD PTR [edi-0xf],bp
  4168d9:	idiv   bh
  4168db:	shl    ah,cl
  4168dd:	xchg   edi,eax
  4168de:	into   
  4168df:	xor    eax,0xf8ef2663
  4168e4:	mov    WORD PTR [edx-0x744334df],gs
  4168ea:	pop    ss
  4168eb:	fucomi st,st(6)
  4168ed:	cwde   
  4168ee:	outs   dx,DWORD PTR ds:[esi]
  4168ef:	fidivr WORD PTR [esi+0x60963f31]
  4168f5:	cmp    BYTE PTR [eax-0x216977d3],ah
  4168fb:	adc    edx,DWORD PTR [ecx]
  4168fd:	fld    DWORD PTR [edx-0x61]
  416900:	jno    0x416904
  416902:	js     0x4168d3
  416904:	adc    DWORD PTR [eax+0x7e],0xffffffb7
  416908:	inc    ecx
  416909:	mov    ecx,0xcf699065
  41690e:	mov    ebx,0xe736d904
  416913:	in     al,dx
  416914:	jmp    0x4ead:0x6539eed0
  41691b:	xchg   BYTE PTR [ecx+0x7057d573],dh
  416921:	xor    eax,0x958c394c
  416926:	mov    BYTE PTR [ebx+0x69c4232],0xa2
  41692d:	sbb    ebx,DWORD PTR [ebx-0x5c]
  416930:	mov    esi,0xf8fc231e
  416935:	mov    dh,ch
  416937:	sahf   
  416938:	sub    al,0xe9
  41693a:	adc    al,0x80
  41693c:	in     eax,0x74
  41693e:	pop    ss
  41693f:	xchg   edi,eax
  416940:	ret    0xfdc8
  416943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416944:	sahf   
  416945:	lock mov ecx,0x9db9d35c
  41694b:	(bad)  
  41694c:	fsubr  QWORD PTR [ebx+0x72d7a0e6]
  416952:	rcr    DWORD PTR [esi+0x3cc223b2],cl
  416958:	inc    edi
  416959:	test   DWORD PTR [ecx-0xebe1aa8],esp
  41695f:	sub    edx,edi
  416961:	and    esp,DWORD PTR ds:0x3ad583e3
  416967:	pop    ebx
  416968:	sub    DWORD PTR [ebp+0x2eff2e5c],edx
  41696e:	pop    ebp
  41696f:	arpl   WORD PTR [ebx+0x14],sp
  416972:	enter  0x991e,0x66
  416976:	leave  
  416977:	iret   
  416978:	hlt    
  416979:	sbb    DWORD PTR [ecx],edx
  41697b:	leave  
  41697c:	mov    bh,0xf3
  41697e:	and    al,dh
  416980:	xor    ebx,DWORD PTR [ecx+0x7bb0d117]
  416986:	pop    ebx
  416987:	lea    eax,ds:0x30b810e2
  41698d:	lea    edx,[edi+0x4c7b6131]
  416993:	mov    eax,0x345cbc6a
  416998:	push   cs
  416999:	int    0x7d
  41699b:	int    0x91
  41699d:	in     al,0x75
  41699f:	mov    ds:0x7a4881fa,eax
  4169a4:	dec    ecx
  4169a5:	(bad)
  4169a8:	jns    0x416987
  4169aa:	gs pop ecx
  4169ac:	adc    al,0x3b
  4169ae:	push   0xa4dba7c8
  4169b3:	mov    BYTE PTR ds:0xd07a9e4c,cl
  4169b9:	jo     0x416972
  4169bb:	dec    esi
  4169bc:	mov    ch,0x19
  4169be:	in     al,0x85
  4169c0:	scas   al,BYTE PTR es:[edi]
  4169c1:	cwde   
  4169c2:	fs adc eax,0xbc65f408
  4169c8:	neg    ah
  4169ca:	add    DWORD PTR ds:0x8ea40522,ebx
  4169d0:	xchg   DWORD PTR [ebx],edi
  4169d2:	xchg   ebx,eax
  4169d3:	xchg   edi,eax
  4169d4:	jmp    0x72ae35d
  4169d9:	mov    dh,0xcc
  4169db:	dec    esp
  4169dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169dd:	adc    dh,bh
  4169df:	add    BYTE PTR [edi],al
  4169e1:	cmp    al,0xc1
  4169e3:	xchg   dl,bl
  4169e5:	shr    DWORD PTR [eax-0x1f],1
  4169e8:	dec    eax
  4169e9:	les    edi,FWORD PTR [edi+0x53]
  4169ec:	push   esi
  4169ed:	and    DWORD PTR ds:0x489687fa,ecx
  4169f3:	add    eax,0xb3f10768
  4169f8:	mov    ecx,ebp
  4169fa:	jp     0x4169c2
  4169fc:	sub    BYTE PTR [ebx+eax*1],cl
  4169ff:	xchg   edi,eax
  416a00:	ret    
  416a01:	ds je  0x4169be
  416a04:	pop    ecx
  416a05:	aas    
  416a06:	stos   DWORD PTR es:[edi],eax
  416a07:	loop   0x416a63
  416a09:	daa    
  416a0a:	or     DWORD PTR [eax+0x6b],ecx
  416a0d:	jl     0x4169b7
  416a0f:	xchg   ebp,eax
  416a10:	int3   
  416a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a12:	int3   
  416a13:	data16 sub dh,BYTE PTR [ecx]
  416a16:	fs das 
  416a18:	std    
  416a19:	repnz or DWORD PTR [edx+esi*1-0x7f],esi
  416a1e:	lds    eax,FWORD PTR [ecx-0x327900a0]
  416a24:	inc    ecx
  416a25:	dec    eax
  416a26:	sbb    BYTE PTR [edi+eax*2+0x68],cl
  416a2a:	pushf  
  416a2b:	jb     0x4169e8
  416a2d:	leave  
  416a2e:	adc    dh,BYTE PTR [edi+edi*4]
  416a31:	sbb    al,0x8b
  416a33:	inc    ebx
  416a35:	jb     0x416a1e
  416a37:	mov    bl,0x90
  416a39:	outs   dx,BYTE PTR ds:[esi]
  416a3a:	enter  0xa76d,0xd3
  416a3e:	ja     0x4169ce
  416a40:	imul   ebp,DWORD PTR [ecx-0x7],0x19
  416a44:	hlt    
  416a45:	xlat   BYTE PTR ds:[ebx]
  416a46:	pushf  
  416a47:	jns    0x416aa5
  416a49:	mov    ecx,0xe740de96
  416a4e:	arpl   bp,bx
  416a50:	xchg   ecx,eax
  416a51:	mov    bl,0x17
  416a53:	lds    edi,FWORD PTR [esi+0x1e]
  416a56:	dec    ecx
  416a57:	mov    es,WORD PTR ds:0xab42fbd9
  416a5d:	xor    eax,0xd10720e8
  416a62:	ins    DWORD PTR es:[edi],dx
  416a63:	mov    ecx,cs
  416a65:	int3   
  416a66:	shr    ch,0x65
  416a69:	mov    ecx,0xd6714f7a
  416a6e:	pop    edx
  416a6f:	and    eax,0xc0f0f318
  416a74:	cld    
  416a75:	jecxz  0x416a35
  416a77:	jl     0x416a97
  416a79:	mov    ebp,0xe4e4dbc8
  416a7e:	or     BYTE PTR [esi],0xce
  416a81:	and    ch,ah
  416a83:	ror    BYTE PTR [esi+0x13],cl
  416a86:	sbb    eax,0xe82afa78
  416a8b:	or     BYTE PTR [edx+0x7892745],dl
  416a91:	lock xor al,0x48
  416a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a95:	cmp    DWORD PTR [esi+0x44],edx
  416a98:	test   BYTE PTR [ecx+eax*4],ch
  416a9b:	pop    es
  416a9c:	je     0x416a35
  416a9e:	(bad)  
  416a9f:	mov    ecx,0x2e05350
  416aa4:	push   edx
  416aa5:	jne    0x416ae8
  416aa7:	fwait
  416aa8:	stc    
  416aa9:	push   ebp
  416aaa:	out    0xfd,al
  416aac:	(bad)  
  416aae:	xor    bh,BYTE PTR [edi-0x54]
  416ab1:	sub    DWORD PTR [esi+0x68],ebp
  416ab4:	test   al,0x3d
  416ab6:	inc    edi
  416ab7:	mov    ebx,0x3e043cfb
  416abc:	push   edi
  416abd:	jecxz  0x416ab8
  416abf:	and    al,0x71
  416ac1:	inc    edi
  416ac2:	mov    al,ds:0xe141875c
  416ac7:	clc    
  416ac8:	gs aad 0x63
  416acb:	cmp    eax,0x86b5b72e
  416ad0:	or     bl,BYTE PTR [edi-0x712c8f98]
  416ad6:	in     al,0x5b
  416ad8:	sbb    cl,ah
  416ada:	es push esi
  416adc:	in     al,0x7f
  416ade:	cld    
  416adf:	and    edx,esp
  416ae1:	sub    edx,DWORD PTR [esi-0x64]
  416ae4:	fadd   QWORD PTR [ecx+0x25]
  416ae7:	push   0xffffffe5
  416ae9:	jg     0x416ad1
  416aeb:	mov    dl,0x7f
  416aed:	repz dec esp
  416aef:	xchg   edi,eax
  416af0:	fdiv   DWORD PTR [eax+0x77f29fc2]
  416af6:	imul   esp,edi,0x652526f7
  416afc:	das    
  416afd:	sar    ebp,1
  416aff:	mov    ebp,0xfb22015c
  416b04:	and    bl,BYTE PTR [ecx+0x3a]
  416b07:	pop    ss
  416b08:	in     al,0x78
  416b0a:	mov    ebp,DWORD PTR [edx]
  416b0c:	sub    dh,BYTE PTR [edi]
  416b0e:	mov    bh,0x58
  416b10:	scas   al,BYTE PTR es:[edi]
  416b11:	and    eax,ebx
  416b13:	mov    bh,0xa2
  416b15:	jbe    0x416b49
  416b17:	sub    bh,bl
  416b19:	cld    
  416b1a:	bound  edx,QWORD PTR [ebp+0x37073976]
  416b20:	dec    edi
  416b21:	popf   
  416b22:	lods   al,BYTE PTR ds:[esi]
  416b23:	ss jp  0x416b21
  416b26:	add    esi,DWORD PTR [ecx-0x7f]
  416b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b2a:	sub    ebp,DWORD PTR [ebx+0x309fd324]
  416b30:	push   esi
  416b31:	sbb    al,0x95
  416b33:	add    DWORD PTR [ebx-0xd],ebp
  416b36:	imul   esi,DWORD PTR [edx-0x7b],0x1284bf9a
  416b3d:	aad    0xc4
  416b3f:	jae    0x416b12
  416b41:	jg     0x416b51
  416b43:	mov    dl,0xce
  416b45:	inc    esp
  416b46:	jne    0x416bae
  416b48:	mov    edi,0x7228da6e
  416b4d:	mov    bl,0x77
  416b4f:	in     al,0xf3
  416b51:	(bad)  
  416b52:	pushf  
  416b53:	mov    esp,0xa1e6b1f1
  416b58:	xchg   DWORD PTR ds:0xc1add1dd,edx
  416b5e:	test   eax,0x3904f1a9
  416b63:	push   esi
  416b64:	jo     0x416b92
  416b66:	out    0xfe,al
  416b68:	and    bh,BYTE PTR [ebp-0x2b44e517]
  416b6e:	in     eax,0x2a
  416b70:	xchg   edx,eax
  416b71:	or     esi,edi
  416b73:	sub    edi,DWORD PTR [edx]
  416b75:	pop    ebp
  416b76:	pop    ebx
  416b77:	int    0x54
  416b79:	retf   
  416b7a:	fld    TBYTE PTR [esi]
  416b7c:	mov    dl,0xc1
  416b7e:	push   ebx
  416b7f:	push   es
  416b80:	or     BYTE PTR [esi-0x11],0xc
  416b84:	push   edx
  416b85:	mov    ch,0x2
  416b87:	(bad)  
  416b88:	in     eax,dx
  416b89:	mov    ch,0x6a
  416b8b:	xchg   ecx,eax
  416b8c:	jbe    0x416c03
  416b8e:	mov    al,0x41
  416b90:	sub    DWORD PTR [edi-0x45],edi
  416b93:	jle    0x416b44
  416b95:	fcomp  QWORD PTR [edx+0x7c]
  416b98:	movups xmm3,XMMWORD PTR [edx+0x6b]
  416b9c:	adc    eax,0x18923bc8
  416ba1:	arpl   WORD PTR [edi+0x6b],ax
  416ba4:	dec    ebp
  416ba5:	sub    DWORD PTR [edi+0x235b1e8a],ebp
  416bab:	push   eax
  416bac:	mov    al,0xe6
  416bae:	ins    BYTE PTR es:[edi],dx
  416baf:	xor    ecx,DWORD PTR [ebx+0x2d32156c]
  416bb5:	pop    eax
  416bb6:	ror    BYTE PTR [eax-0x459ba905],1
  416bbc:	cdq    
  416bbd:	xlat   BYTE PTR ss:[ebx]
  416bbf:	sub    bl,BYTE PTR [eax]
  416bc1:	fld    TBYTE PTR [bp+0x1c]
  416bc5:	ret    0x478b
  416bc8:	repnz cli 
  416bca:	in     al,dx
  416bcb:	pop    ecx
  416bcc:	xchg   BYTE PTR [edx],cl
  416bce:	mov    ds:0x3bf3c8e3,eax
  416bd3:	clc    
  416bd4:	addr16 out dx,al
  416bd6:	mov    WORD PTR [edi+0x4c780680],cs
  416bdc:	xchg   esp,eax
  416bdd:	xlat   BYTE PTR ds:[ebx]
  416bde:	push   cs
  416bdf:	mov    ebx,0x10924644
  416be4:	aad    0x1
  416be6:	lods   al,BYTE PTR ds:[esi]
  416be7:	mul    DWORD PTR [esi]
  416be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bea:	mov    eax,DWORD PTR [eax]
  416bec:	loop   0x416c31
  416bee:	jnp    0x416b99
  416bf0:	xlat   BYTE PTR ds:[ebx]
  416bf1:	enter  0x121b,0xe1
  416bf5:	mov    ds:0x1e4d88c,al
  416bfa:	and    DWORD PTR [ebx+0x2eb036fb],ecx
  416c00:	or     esp,DWORD PTR [ebp-0x2e]
  416c03:	arpl   si,sp
  416c05:	fucomip st,st(5)
  416c07:	add    dl,ah
  416c09:	lods   al,BYTE PTR ds:[esi]
  416c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0b:	jg     0x416c14
  416c0d:	lock adc bl,ah
  416c10:	retf   0x4bfb
  416c13:	xchg   ebp,eax
  416c14:	dec    eax
  416c15:	in     eax,0x7b
  416c17:	pop    ecx
  416c18:	mov    esp,0x75e8f2ec
  416c1d:	pop    es
  416c1e:	std    
  416c1f:	sub    eax,0x12a90d03
  416c24:	sub    BYTE PTR [eax+0x6d866f3a],dl
  416c2a:	cmp    al,0xab
  416c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c2d:	inc    edx
  416c2e:	out    dx,al
  416c2f:	iret   
  416c30:	std    
  416c31:	sub    eax,0x72ed908f
  416c36:	push   edi
  416c37:	mov    dl,0x4
  416c39:	cs sbb ah,bl
  416c3c:	inc    ebp
  416c3d:	shl    DWORD PTR [ecx],cl
  416c3f:	mov    al,ds:0x3fdbd028
  416c44:	popf   
  416c45:	push   0xffffffb8
  416c47:	jmp    0x677a:0xa6c11b98
  416c4e:	inc    eax
  416c4f:	fmulp  st(0),st
  416c51:	sub    bl,BYTE PTR [eax+0x3b]
  416c54:	jne    0x416c9a
  416c56:	push   0xffffffd2
  416c58:	push   edx
  416c59:	mov    edx,0xd8e78b5b
  416c5e:	dec    esp
  416c5f:	(bad)  
  416c61:	(bad)  
  416c62:	sub    al,0x7b
  416c64:	xchg   esi,eax
  416c65:	jns    0x416c9e
  416c67:	pop    ebp
  416c68:	sbb    ah,BYTE PTR [ecx-0x62]
  416c6b:	pop    esp
  416c6c:	mov    ds:0x5a0e908d,eax
  416c71:	adc    eax,0x36ecb886
  416c76:	lock inc esp
  416c78:	fwait
  416c79:	inc    ebx
  416c7a:	adc    eax,0x6c11073c
  416c7f:	fdivp  st(4),st
  416c81:	push   0x60ea47ed
  416c86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c87:	mov    eax,0xcfdcf97
  416c8c:	sahf   
  416c8d:	hlt    
  416c8e:	mov    bh,0x29
  416c90:	jnp    0x416c21
  416c92:	mov    ecx,0xf1f79164
  416c97:	scas   al,BYTE PTR es:[edi]
  416c98:	pop    ebx
  416c99:	pushf  
  416c9a:	mov    edi,edi
  416c9c:	cmp    DWORD PTR [esi+0x7434e9f9],ebp
  416ca2:	xchg   esi,eax
  416ca3:	adc    ch,BYTE PTR [edi+0x3cff6200]
  416ca9:	in     al,dx
  416caa:	loope  0x416c76
  416cac:	sbb    eax,0x545174c3
  416cb1:	test   edi,esi
  416cb3:	cs popf 
  416cb5:	push   ds
  416cb6:	aam    0x6a
  416cb8:	jmp    0x88b2c0e8
  416cbd:	jno    0x416d1b
  416cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cc0:	retf   
  416cc1:	ds retf 
  416cc3:	add    al,0x70
  416cc5:	mov    ds,esp
  416cc7:	add    dl,BYTE PTR [edx+0x45]
  416cca:	cmp    esp,DWORD PTR [ebx+0x146207e1]
  416cd0:	es fidivr DWORD PTR gs:[ebx+0x5dd07daa]
  416cd8:	std    
  416cd9:	in     al,0xd3
  416cdb:	and    BYTE PTR [ecx+esi*2+0x1e],bl
  416cdf:	mov    ah,BYTE PTR [edx+0x2a41fad2]
  416ce5:	in     eax,0xf8
  416ce7:	sar    DWORD PTR [edi],cl
  416ce9:	jns    0x416c8b
  416ceb:	je     0x416d60
  416ced:	int    0xb9
  416cef:	mov    edi,0xb8e04f53
  416cf4:	push   edi
  416cf5:	sbb    al,0x8c
  416cf7:	jnp    0x416c91
  416cf9:	pop    edx
  416cfa:	add    BYTE PTR [edi-0x6a],al
  416cfd:	ins    DWORD PTR es:[edi],dx
  416cfe:	mov    dh,0xb0
  416d00:	gs pusha 
  416d02:	pop    edi
  416d03:	cdq    
  416d04:	mov    ah,0x57
  416d06:	adc    edi,ebx
  416d08:	cs dec eax
  416d0a:	in     eax,0x86
  416d0c:	dec    ecx
  416d0d:	fndisi(8087 only) 
  416d0f:	xor    BYTE PTR [eax],al
  416d11:	pop    ds
  416d12:	push   es
  416d13:	push   ecx
  416d14:	pop    es
  416d15:	enter  0x32,0x97
  416d19:	sub    ebp,DWORD PTR [ebx-0x4f]
  416d1c:	cmp    DWORD PTR [edx-0x51],edx
  416d1f:	sbb    eax,0x88da14f4
  416d24:	and    DWORD PTR ds:0x8c89b845,esp
  416d2a:	push   cs
  416d2b:	add    BYTE PTR [ebx],0x7e
  416d2e:	in     al,0x48
  416d30:	jbe    0x416d70
  416d32:	rcl    DWORD PTR [esi],0x35
  416d35:	mov    eax,ds:0x8e369f47
  416d3a:	fwait
  416d3b:	cld    
  416d3c:	(bad)  
  416d3d:	jmp    0xf28c:0xafc7161c
  416d44:	not    edi
  416d46:	mov    dh,0xc4
  416d48:	sti    
  416d49:	pop    eax
  416d4a:	inc    esi
  416d4b:	add    al,0x58
  416d4d:	je     0x416d2e
  416d4f:	ror    DWORD PTR [edx+0x6c],1
  416d52:	mov    DWORD PTR [ebx+ebp*1+0x3],edi
  416d56:	sbb    eax,0xdba63d1e
  416d5b:	inc    edi
  416d5c:	mov    ebx,0xb92f9ce5
  416d61:	pop    eax
  416d62:	mov    DWORD PTR [edx-0x57],0xd943b446
  416d69:	pushf  
  416d6a:	outs   dx,DWORD PTR ds:[esi]
  416d6b:	nop
  416d6c:	(bad)  
  416d6d:	mov    dl,0xe6
  416d6f:	int    0x80
  416d71:	adc    eax,eax
  416d73:	jns    0x416db5
  416d75:	or     BYTE PTR [ebx-0x30],al
  416d78:	jecxz  0x416d8b
  416d7a:	in     al,0x6
  416d7c:	jne    0x416d51
  416d7e:	mov    ss,WORD PTR [edx+0x36]
  416d81:	mov    WORD PTR [esi-0x58],es
  416d84:	mov    dl,0x75
  416d86:	jl     0x416d88
  416d88:	mov    dh,0x77
  416d8a:	add    eax,0x92dcc045
  416d8f:	sub    eax,0xf10be399
  416d94:	pushf  
  416d95:	push   0x2fb917ac
  416d9a:	(bad)  
  416d9b:	stc    
  416d9c:	cmp    dl,BYTE PTR [ecx+esi*4-0x2d430e21]
  416da3:	jne    0x416d76
  416da5:	xor    ebx,DWORD PTR [ebx]
  416da7:	ja     0x416d93
  416da9:	in     al,0xd5
  416dab:	xchg   edi,eax
  416dac:	or     al,0x66
  416dae:	jmp    0x421ebf6f
  416db3:	les    esi,FWORD PTR [ecx+0x3994cb75]
  416db9:	fsub   st(3),st
  416dbb:	and    DWORD PTR [eax+0x3b],edx
  416dbe:	cli    
  416dbf:	and    edi,ecx
  416dc1:	pop    eax
  416dc2:	leave  
  416dc3:	ret    
  416dc4:	add    ebx,esi
  416dc6:	arpl   WORD PTR [ebp-0x112a4e97],di
  416dcc:	stc    
  416dcd:	(bad)  ds:0x42a9112f
  416dd3:	xor    esp,DWORD PTR [ebx-0x17949e8d]
  416dd9:	xchg   BYTE PTR [eax+0x79],ch
  416ddc:	xlat   BYTE PTR ds:[ebx]
  416ddd:	push   esi
  416dde:	dec    esi
  416ddf:	jmp    0x87e5:0x9eea705f
  416de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416de7:	pop    edi
  416de8:	lods   al,BYTE PTR ds:[esi]
  416de9:	loopne 0x416e5c
  416deb:	jmp    DWORD PTR [eax]
  416ded:	pushf  
  416dee:	add    BYTE PTR [edi],dl
  416df0:	push   ss
  416df1:	inc    eax
  416df2:	out    dx,eax
  416df3:	mov    ebx,0xdebbbba1
  416df8:	(bad)  
  416df9:	xor    eax,0x8a441e5f
  416dfe:	int    0xf6
  416e00:	jp     0x416e1f
  416e02:	and    bh,BYTE PTR [ecx-0x7d31159b]
  416e08:	and    dl,al
  416e0a:	jno    0x416e70
  416e0c:	les    ecx,FWORD PTR [ebx]
  416e0e:	mov    al,ds:0x1e3c87b6
  416e13:	add    esi,DWORD PTR [eax-0x6b235c9e]
  416e19:	into   
  416e1a:	call   0xc261:0x33209688
  416e21:	dec    eax
  416e22:	jge    0x416e10
  416e24:	pop    edi
  416e25:	add    cl,bh
  416e27:	jbe    0x416dac
  416e29:	pop    ecx
  416e2a:	ret    0xf708
  416e2d:	jle    0x416ddf
  416e2f:	(bad)  
  416e30:	pop    esp
  416e31:	paddusb mm6,QWORD PTR [esi]
  416e34:	fcmovnu st,st(6)
  416e36:	mov    dl,0x8b
  416e38:	and    bh,dh
  416e3a:	pop    ebp
  416e3b:	hlt    
  416e3c:	mov    bh,0xca
  416e3e:	jo     0x416e27
  416e40:	dec    ecx
  416e41:	jmp    0x416e26
  416e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e44:	dec    ebx
  416e45:	mov    edx,0xe29fc5e2
  416e4a:	lock pop edx
  416e4c:	add    cl,BYTE PTR [ecx+0x1d95a19f]
  416e52:	ror    cl,1
  416e54:	out    dx,eax
  416e55:	xchg   esp,eax
  416e56:	sar    esp,cl
  416e58:	inc    edi
  416e59:	xchg   ebp,eax
  416e5a:	cwde   
  416e5b:	mov    eax,0xfdb0c734
  416e60:	adc    al,0x2f
  416e62:	mov    bh,0x75
  416e64:	mov    ebx,0x80836b
  416e69:	test   ebx,0x4f3139f8
  416e6f:	cld    
  416e70:	(bad)  
  416e71:	shl    BYTE PTR [edx],1
  416e73:	rcr    DWORD PTR [ecx],1
  416e75:	cmp    eax,0xb0aa3205
  416e7a:	and    al,0xd5
  416e7c:	cwde   
  416e7d:	add    BYTE PTR [ebx],ah
  416e7f:	stc    
  416e80:	out    0xb5,eax
  416e82:	pop    edi
  416e83:	mov    al,0xd8
  416e85:	hlt    
  416e86:	push   edx
  416e87:	cld    
  416e88:	iret   
  416e89:	mov    ds:0x7d27d676,eax
  416e8e:	in     al,0x3d
  416e90:	pop    ebx
  416e91:	jp     0x416eb3
  416e93:	sub    eax,0xe7b71801
  416e98:	and    BYTE PTR [edi-0x61a83fc8],0x50
  416e9f:	fnsave [edi+0x5fdaf08c]
  416ea5:	(bad)  
  416ea6:	mov    ds:0x8f932e80,al
  416eab:	jne    0x416ebf
  416ead:	mov    dh,0xb3
  416eaf:	mov    bh,0xb7
  416eb1:	das    
  416eb2:	shl    DWORD PTR [ecx+0x78f7d76d],0x82
  416eb9:	push   cs
  416eba:	ror    BYTE PTR [ebx+0xb08edf1],cl
  416ec0:	les    eax,FWORD PTR [edx+0x14]
  416ec3:	ja     0x416f35
  416ec5:	sbb    ch,BYTE PTR [ecx]
  416ec7:	and    BYTE PTR [esi+0x2e399870],bh
  416ecd:	xor    dl,BYTE PTR [ecx+ebx*2]
  416ed0:	xchg   ebx,eax
  416ed1:	test   BYTE PTR [ecx+edi*1-0x44e2f2a6],ch
  416ed8:	aas    
  416ed9:	mov    WORD PTR [ecx+eax*2],cs
  416edc:	mov    edi,0xf2c9dcc2
  416ee1:	mov    esi,0x12f5b7de
  416ee6:	add    ah,cl
  416ee8:	pop    es
  416ee9:	adc    BYTE PTR [edx],0x4b
  416eec:	in     al,0xa2
  416eee:	jns    0x416e75
  416ef0:	div    DWORD PTR [esi]
  416ef2:	stos   DWORD PTR es:[edi],eax
  416ef3:	repnz (bad) 
  416ef5:	mov    eax,ds:0x491a26d3
  416efa:	sub    al,BYTE PTR [ebx]
  416efc:	or     al,0x33
  416efe:	mov    dh,0x6f
  416f00:	sub    al,0x99
  416f02:	pop    eax
  416f03:	adc    bl,BYTE PTR [ecx-0x74152ce8]
  416f09:	sbb    ah,dl
  416f0b:	sbb    bh,BYTE PTR [ecx-0x15]
  416f0e:	pop    es
  416f0f:	or     ch,BYTE PTR [esi-0x289d8ad5]
  416f15:	mov    eax,ds:0xc3e24837
  416f1a:	xor    BYTE PTR [edx+0x7b6abfd9],ch
  416f20:	cli    
  416f21:	popf   
  416f22:	js     0x416f6c
  416f24:	enter  0xb3f0,0x28
  416f28:	sub    DWORD PTR [edx],ebp
  416f2a:	fmul   DWORD PTR [eax+edx*4]
  416f2d:	mov    esp,0x3865045
  416f32:	push   edx
  416f33:	sbb    cl,BYTE PTR [eax-0x19]
  416f36:	fs cmp al,0x25
  416f39:	imul   esi,ebx,0xfffffff5
  416f3c:	leave  
  416f3d:	jge    0x416f06
  416f3f:	pop    edi
  416f40:	scas   eax,DWORD PTR es:[edi]
  416f41:	mov    esi,0xec32f7b0
  416f46:	nop
  416f47:	pushf  
  416f48:	inc    eax
  416f49:	mov    eax,0xf428f592
  416f4e:	iret   
  416f4f:	repz loop 0x416fc7
  416f52:	sub    al,0x72
  416f54:	xchg   ah,dl
  416f56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f57:	fsubr  QWORD PTR [ebx-0x239ccba7]
  416f5d:	cmp    ecx,DWORD PTR [edx]
  416f5f:	sub    DWORD PTR [edx],esi
  416f61:	lds    esi,FWORD PTR [ebp*8+0x58f2c784]
  416f68:	mov    eax,ss
  416f6a:	loop   0x416fa7
  416f6c:	mov    dl,ch
  416f6e:	xlat   BYTE PTR ds:[ebx]
  416f6f:	or     al,0xce
  416f71:	jnp    0x416f37
  416f73:	out    0x1b,eax
  416f75:	mov    al,ds:0x3f5d6858
  416f7a:	ds rcl dh,1
  416f7d:	outs   dx,DWORD PTR ds:[esi]
  416f7e:	xor    DWORD PTR [ebx+0x32],ebp
  416f81:	mov    esi,0x4a0e52b5
  416f86:	into   
  416f87:	sub    bl,ah
  416f89:	jb     0x416ff5
  416f8b:	inc    ebx
  416f8c:	ret    
  416f8d:	or     ebp,DWORD PTR [edx+0x1f]
  416f90:	xchg   edi,ebx
  416f92:	and    DWORD PTR [ebx],ebp
  416f94:	(bad)  
  416f95:	scas   eax,DWORD PTR es:[edi]
  416f96:	je     0x416fc3
  416f98:	mov    cl,0xdb
  416f9a:	sbb    dl,BYTE PTR [ecx-0x73]
  416f9d:	push   ebp
  416f9e:	vxorpd xmm6,xmm0,XMMWORD PTR [ebx]
  416fa2:	mov    esi,0x41486f5c
  416fa7:	sub    BYTE PTR [eax-0x5c],ah
  416faa:	das    
  416fab:	scas   eax,DWORD PTR es:[edi]
  416fac:	dec    eax
  416fad:	and    eax,0xad62a4a2
  416fb2:	jg     0x416f3a
  416fb4:	push   ebx
  416fb5:	adc    al,0x15
  416fb7:	lods   eax,DWORD PTR ds:[esi]
  416fb8:	fs mov ch,0x73
  416fbb:	push   ds
  416fbc:	retf   
  416fbd:	inc    edi
  416fbe:	sbb    eax,0x8969a35c
  416fc3:	push   cs
  416fc4:	push   esp
  416fc5:	cmp    al,0x84
  416fc7:	cli    
  416fc8:	fstp   TBYTE PTR [ebp-0xe54aafe]
  416fce:	and    al,0x48
  416fd0:	jo     0x416fc0
  416fd2:	ja     0x417039
  416fd4:	push   ebp
  416fd5:	push   esi
  416fd6:	xlat   BYTE PTR ds:[ebx]
  416fd7:	add    BYTE PTR [eax-0x1f975c75],0x8b
  416fde:	adc    DWORD PTR [eax-0x5c],edi
  416fe1:	cmp    BYTE PTR ds:0xcfa6d4dd,bl
  416fe7:	scas   eax,DWORD PTR es:[edi]
  416fe8:	pop    es
  416fe9:	enter  0x632a,0xa8
  416fed:	and    BYTE PTR gs:[ecx*1-0x3844b4bb],dh
  416ff5:	mov    ch,0xa3
  416ff7:	push   esp
  416ff8:	push   ds
  416ff9:	adc    BYTE PTR [esi-0x50],bh
  416ffc:	push   ebx
  416ffd:	jnp    0x41703a
  416fff:	out    dx,al
  417000:	mov    al,ds:0x1fc2ac1e
  417005:	mov    al,ds:0xe9fba1b1
  41700a:	in     al,dx
  41700b:	cwde   
  41700c:	aad    0x86
  41700e:	sbb    al,0xaf
  417010:	cmc    
  417011:	ret    
  417012:	adc    al,0x2
  417014:	cmp    DWORD PTR [ebx+0x418a2973],esi
  41701a:	arpl   WORD PTR [ebp+0x77],bx
  41701d:	pop    ebx
  41701e:	call   0x75ae6f7b
  417023:	ret    
  417024:	ja     0x416fe4
  417026:	cld    
  417027:	hlt    
  417028:	dec    esp
  417029:	repnz or al,0x55
  41702c:	xor    eax,0x5c96c47d
  417031:	jp     0x417035
  417033:	pop    ss
  417034:	(bad)  
  417035:	std    
  417036:	cmp    cl,BYTE PTR [ebx]
  417038:	in     eax,0xd7
  41703a:	pop    ds
  41703b:	(bad)  
  41703c:	bound  ebx,QWORD PTR [ebx+0x375dcfe7]
  417042:	vpcomq xmm6,xmm7,xmm5,0xa0
  417048:	fwait
  417049:	inc    ecx
  41704a:	hlt    
  41704b:	jnp    0x41707b
  41704d:	(bad)  
  41704e:	mov    eax,ds:0x6e470060
  417053:	imul   edx,DWORD PTR [ecx-0x64],0xcc2a7323
  41705a:	jns    0x416ff9
  41705c:	mov    edi,0x5fca8dd4
  417061:	sub    edi,DWORD PTR [eax]
  417063:	outs   dx,BYTE PTR ds:[esi]
  417064:	mov    ch,0x8b
  417066:	je     0x4170d0
  417068:	mov    ds:0x8b863023,eax
  41706d:	in     eax,dx
  41706e:	push   ss
  41706f:	jl     0x41701d
  417071:	dec    esp
  417072:	mov    ch,0xa6
  417074:	shl    esi,0xf6
  417077:	imul   edx,DWORD PTR [eax],0x4d7b84f3
  41707d:	out    dx,eax
  41707e:	retf   0x9222
  417081:	xor    edx,edx
  417083:	cdq    
  417084:	inc    eax
  417085:	ret    
  417086:	mov    ebx,0xf52282e1
  41708b:	pop    esp
  41708c:	cdq    
  41708d:	xchg   edx,eax
  41708e:	cmp    bh,BYTE PTR [edx-0x20400b8d]
  417094:	mov    edx,0xf76b7b3b
  417099:	hlt    
  41709a:	test   DWORD PTR [ebp+esi*8+0x66381f52],ecx
  4170a1:	cmp    al,dl
  4170a3:	fxch   st(6)
  4170a5:	adc    BYTE PTR [ebx],dl
  4170a7:	movzx  ebx,BYTE PTR [ebp+0xc]
  4170ab:	js     0x4170b4
  4170ad:	nop    DWORD PTR [edi+0x55]
  4170b1:	jne    0x41703f
  4170b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b4:	sub    eax,0x4d0daa9f
  4170b9:	jae    0x417113
  4170bb:	int    0x70
  4170bd:	or     BYTE PTR [ebp-0x16],al
  4170c0:	push   edx
  4170c1:	push   ecx
  4170c2:	mov    al,ds:0x4e43f6ce
  4170c7:	cs jmp 0x4170bb
  4170ca:	js     0x4170fc
  4170cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170cd:	pop    es
  4170ce:	jge    0x417102
  4170d0:	(bad)  
  4170d1:	pop    ebp
  4170d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d3:	xchg   DWORD PTR ds:0xaf6e3d65,edi
  4170d9:	pop    esp
  4170da:	mov    dl,0x87
  4170dc:	or     esi,DWORD PTR [edx-0x4a]
  4170df:	test   eax,0x5edd67e7
  4170e4:	cmc    
  4170e5:	(bad)  
  4170e6:	jno    0x41711e
  4170e8:	nop
  4170e9:	adc    dl,BYTE PTR ds:0x21fe43e8
  4170ef:	inc    edi
  4170f0:	loopne 0x4170d7
  4170f2:	iret   
  4170f3:	dec    edi
  4170f4:	sub    al,0x9b
  4170f6:	jo     0x4170a1
  4170f8:	mov    esi,DWORD PTR [eax+0x69cca1cb]
  4170fe:	shl    ebp,1
  417100:	pop    ds
  417101:	jnp    0x4170bc
  417103:	mov    cl,0x6c
  417105:	inc    ecx
  417106:	cdq    
  417107:	rol    al,cl
  417109:	test   DWORD PTR [ebx],eax
  41710b:	jb     0x4170dd
  41710d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41710e:	dec    ebx
  41710f:	or     dl,BYTE PTR [esi-0x19]
  417112:	ror    DWORD PTR [ecx-0x18],1
  417115:	clc    
  417116:	ret    0xcfe9
  417119:	xchg   esi,eax
  41711a:	fisubr DWORD PTR [ecx-0x57e85557]
  417120:	inc    ebx
  417121:	aam    0x43
  417123:	and    al,0xff
  417125:	call   DWORD PTR [ebx+ebx*8]
  417128:	push   0xffb8ca4b
  41712d:	fcomp  DWORD PTR [ecx-0x4d75b927]
  417133:	idiv   ebp
  417135:	mov    edi,0x9e7f49d4
  41713a:	inc    eax
  41713b:	dec    ecx
  41713c:	call   0xf70663d4
  417141:	daa    
  417142:	stos   DWORD PTR es:[edi],eax
  417143:	bound  eax,QWORD PTR ds:0xdbf72360
  417149:	fdiv   st(5),st
  41714b:	popf   
  41714c:	ins    BYTE PTR es:[edi],dx
  41714d:	ins    BYTE PTR es:[edi],dx
  41714e:	mov    dh,0xa8
  417150:	or     dh,BYTE PTR [esi-0x24]
  417153:	retf   0x2581
  417156:	pop    es
  417157:	pop    ecx
  417158:	or     BYTE PTR [ebx-0x4a1f9179],bh
  41715e:	xchg   edi,eax
  41715f:	jecxz  0x41717d
  417161:	jbe    0x417176
  417163:	dec    ebp
  417164:	mov    esi,0x616cb15e
  417169:	rcr    BYTE PTR [edi+0x47],cl
  41716c:	jmp    0x417112
  41716e:	add    ah,BYTE PTR [eax]
  417170:	mov    ch,bh
  417172:	pushf  
  417173:	pop    esp
  417174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417175:	jae    0x4171a4
  417177:	inc    esp
  417178:	fs repz dec ebp
  41717b:	cmp    BYTE PTR [ecx+0x4],ah
  41717e:	fcomp  DWORD PTR [ebx]
  417180:	adc    eax,0xd683d2e8
  417185:	clc    
  417186:	adc    al,0xd4
  417188:	pusha  
  417189:	je     0x41716a
  41718b:	jp     0x41715b
  41718d:	out    dx,eax
  41718e:	ja     0x417130
  417190:	pop    edx
  417191:	cmp    bl,BYTE PTR [ebx-0x47]
  417194:	in     al,dx
  417195:	mov    eax,ds:0xe8884816
  41719a:	mov    ds:0x8f3f0eab,al
  41719f:	add    al,0x75
  4171a1:	outs   dx,DWORD PTR ds:[esi]
  4171a2:	stc    
  4171a3:	leave  
  4171a4:	xchg   esi,eax
  4171a5:	adc    BYTE PTR fs:[esi-0x27],ch
  4171a9:	int3   
  4171aa:	pop    es
  4171ab:	fiadd  WORD PTR [edx]
  4171ad:	jecxz  0x4171f8
  4171af:	cmp    BYTE PTR [eax],dl
  4171b1:	jno    0x417190
  4171b3:	adc    ah,ch
  4171b5:	in     al,0x7b
  4171b7:	ins    BYTE PTR es:[edi],dx
  4171b8:	pop    ss
  4171b9:	test   DWORD PTR [ebp+esi*1+0x2ee8a5aa],ebx
  4171c0:	arpl   WORD PTR [edx+ecx*4-0x191fd697],ax
  4171c7:	mov    ss,WORD PTR [ebx+0x3d232b8b]
  4171cd:	daa    
  4171ce:	(bad)  
  4171d1:	mov    esp,0xc7910014
  4171d6:	mov    ah,0xb8
  4171d8:	and    eax,0x7d606623
  4171dd:	cli    
  4171de:	sub    esi,DWORD PTR [eax]
  4171e0:	dec    ecx
  4171e1:	and    eax,0x783ae4d6
  4171e6:	add    esp,DWORD PTR [edi+0x4d]
  4171e9:	xor    esp,DWORD PTR ds:0x99158b4c
  4171ef:	xor    eax,DWORD PTR [eax-0x46]
  4171f2:	or     BYTE PTR [ebp+0x3c6b0eed],al
  4171f8:	sub    BYTE PTR [edi],ch
  4171fa:	pop    esi
  4171fb:	mov    ebx,0xa6df550a
  417200:	jbe    0x41722f
  417202:	fld    QWORD PTR ds:0xe1f37ab5
  417208:	mov    bl,0x1e
  41720a:	mov    dh,0xe8
  41720c:	sub    BYTE PTR es:[edi+0x2a3745ce],cl
  417213:	dec    edx
  417214:	jp     0x4171b7
  417216:	inc    esi
  417217:	sbb    dh,0xac
  41721a:	stos   BYTE PTR es:[edi],al
  41721b:	lea    edi,[eax+0x2679fd20]
  417221:	add    dh,BYTE PTR [edx+0x49]
  417224:	pop    ebp
  417225:	push   ebp
  417226:	inc    edi
  417227:	push   esi
  417228:	or     DWORD PTR [ebp+0x1a7a04fd],edi
  41722e:	(bad)  
  41722f:	jne    0x41720d
  417231:	mov    DWORD PTR [edx],ecx
  417233:	sub    eax,0xd74ea81b
  417238:	outs   dx,DWORD PTR ds:[esi]
  417239:	ror    BYTE PTR [eax+0x2800c42c],0xe
  417240:	fs pop ss
  417242:	dec    DWORD PTR [ecx]
  417244:	data16 test bl,dl
  417247:	aam    0xfe
  417249:	jo     0x417205
  41724b:	add    al,0xa9
  41724d:	retf   
  41724e:	rcr    BYTE PTR [esp],1
  417251:	xor    bl,BYTE PTR ds:0xb01bb157
  417257:	pop    ss
  417258:	pushf  
  417259:	xchg   esi,eax
  41725a:	xor    edi,DWORD PTR [edx+ecx*2]
  41725d:	dec    edx
  41725e:	fwait
  41725f:	ja     0x41726b
  417261:	mov    ds:0x9ea024c8,eax
  417266:	or     al,0x97
  417268:	aam    0x7
  41726a:	cld    
  41726b:	push   ecx
  41726c:	and    esi,esp
  41726e:	mov    ebp,gs
  417270:	mov    ds:0x98b541ce,al
  417275:	daa    
  417276:	dec    edi
  417277:	out    dx,al
  417278:	clc    
  417279:	mov    esp,0x86735369
  41727e:	sbb    ebx,DWORD PTR [esi+edx*4+0x413362b8]
  417285:	mov    dh,0x65
  417287:	push   0x28
  417289:	and    BYTE PTR [edx+0x1b],ah
  41728c:	dec    eax
  41728d:	xor    ebp,eax
  41728f:	sub    BYTE PTR [ebp+0x17bb9eb7],dh
  417295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417296:	ret    0x850e
  417299:	loop   0x4172e5
  41729b:	js     0x4172b7
  41729d:	test   al,0x96
  41729f:	jle    0x4172e2
  4172a1:	sub    DWORD PTR [eax+0x25a37bd9],esi
  4172a7:	jmp    DWORD PTR [edx+0x628f7385]
  4172ad:	pusha  
  4172ae:	mov    esi,0x33e5d5a7
  4172b3:	aam    0xe7
  4172b5:	imul   DWORD PTR [edx]
  4172b7:	outs   dx,DWORD PTR ds:[esi]
  4172b8:	xor    bl,bh
  4172ba:	inc    edx
  4172bb:	jns    0x41725f
  4172bd:	xchg   edi,eax
  4172be:	je     0x417302
  4172c0:	jmp    0x182d:0xf4abded1
  4172c7:	mov    dh,0x11
  4172c9:	add    DWORD PTR [ecx-0x5dd2c380],edx
  4172cf:	dec    ebp
  4172d0:	adc    al,BYTE PTR [edx+0x34]
  4172d3:	inc    ebx
  4172d4:	(bad)  
  4172d5:	sbb    DWORD PTR [edi],ebp
  4172d7:	add    edi,DWORD PTR [ebx]
  4172d9:	mov    bl,0x49
  4172db:	dec    ecx
  4172dc:	(bad)
  4172df:	mov    ds:0xde4e6ee0,eax
  4172e4:	push   edi
  4172e5:	sbb    al,0x27
  4172e7:	ins    BYTE PTR es:[edi],dx
  4172e8:	sub    BYTE PTR [esi+eiz*8],dl
  4172eb:	ror    BYTE PTR [edi],1
  4172ed:	ret    
  4172ee:	cmp    edx,0x96bb7b73
  4172f4:	jecxz  0x4172d3
  4172f6:	cli    
  4172f7:	addr16 jo 0x4172d4
  4172fa:	out    0x2b,eax
  4172fc:	fwait
  4172fd:	mov    ds:0x8057d40a,eax
  417302:	fdiv   st,st(4)
  417304:	pop    edx
  417305:	xor    eax,edi
  417307:	push   0xcdb5ad97
  41730c:	pop    eax
  41730d:	daa    
  41730e:	sub    DWORD PTR [ecx+0x43],edi
  417311:	xchg   ebp,eax
  417312:	jne    0x417344
  417314:	shr    dl,0x54
  417317:	jle    0x417341
  417319:	int3   
  41731a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41731b:	pop    esi
  41731c:	add    DWORD PTR [esi-0x39],esi
  41731f:	retf   
  417320:	dec    ebx
  417321:	(bad)
  417324:	mov    esi,ecx
  417326:	jge    0x4172b8
  417328:	dec    ebx
  417329:	xor    dh,BYTE PTR [ebx+0x10c62824]
  41732f:	aas    
  417330:	and    ch,BYTE PTR [edi+0x3b49824c]
  417336:	pop    eax
  417337:	clc    
  417338:	into   
  417339:	loope  0x4172e5
  41733b:	into   
  41733c:	fimul  WORD PTR [edi-0xc]
  41733f:	test   esp,0x823dad17
  417345:	(bad)  
  417346:	dec    edi
  417347:	jmp    0x4172e3
  417349:	ins    DWORD PTR es:[edi],dx
  41734a:	imul   eax,esi,0x75
  41734d:	jne    0x4173bf
  41734f:	pop    esp
  417350:	cli    
  417351:	mov    esp,0x94738a
  417356:	(bad)  
  417358:	push   esp
  417359:	sbb    ecx,DWORD PTR [ebx+0x52e01a98]
  41735f:	and    esp,DWORD PTR [eax+0x711ae726]
  417365:	pop    esi
  417366:	ror    BYTE PTR [edi+esi*8],cl
  417369:	jmp    0x6ee10415
  41736e:	sbb    bl,BYTE PTR [edx-0xc7c5b8f]
  417374:	jnp    0x417341
  417376:	fwait
  417377:	cmp    cl,BYTE PTR [ebx-0x43f4c227]
  41737d:	ins    BYTE PTR es:[edi],dx
  41737e:	push   ds
  41737f:	jecxz  0x4173d4
  417381:	dec    eax
  417382:	icebp  
  417383:	clc    
  417384:	add    DWORD PTR [ecx],edi
  417386:	mov    ebp,0xf0eb6816
  41738b:	xor    BYTE PTR [ebx],al
  41738d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738e:	int3   
  41738f:	cmp    BYTE PTR [ebp+0x12],cl
  417392:	mov    al,0x89
  417394:	jle    0x4173ba
  417396:	push   edx
  417397:	adc    BYTE PTR [edx],al
  417399:	shl    ecx,0x5d
  41739c:	add    BYTE PTR [eax-0x70],0x6a
  4173a0:	lea    edx,[ebx-0xa3c3b09]
  4173a6:	stos   DWORD PTR es:[edi],eax
  4173a7:	scas   al,BYTE PTR es:[edi]
  4173a8:	jbe    0x41733a
  4173aa:	jns    0x417348
  4173ac:	js     0x417378
  4173ae:	in     al,0x8f
  4173b0:	idiv   BYTE PTR [ebp+0x55]
  4173b3:	fnstenv [ebp-0x7a]
  4173b6:	jns    0x4173d1
  4173b8:	loope  0x41736a
  4173ba:	mov    ebx,0x55907af6
  4173bf:	adc    al,0x46
  4173c1:	sbb    DWORD PTR [ebp-0x4aac405b],ebx
  4173c7:	shr    BYTE PTR ds:0x99856863,1
  4173cd:	add    ah,BYTE PTR [edi]
  4173cf:	test   al,0x64
  4173d1:	fild   DWORD PTR [esi]
  4173d3:	in     eax,dx
  4173d4:	mov    ecx,DWORD PTR [edx-0x33]
  4173d7:	clc    
  4173d8:	jno    0x41738f
  4173da:	adc    ch,bh
  4173dc:	js     0x41738f
  4173de:	mov    fs:0xd5117f4c,al
  4173e4:	pop    ss
  4173e5:	dec    edx
  4173e6:	mul    ebx
  4173e8:	repnz ror BYTE PTR [ebp+0x17],0xf1
  4173ed:	adc    bh,ah
  4173ef:	mul    DWORD PTR [edi]
  4173f1:	jne    0x417438
  4173f3:	mov    esp,0x70172d68
  4173f8:	js     0x4173f7
  4173fa:	shl    DWORD PTR [edx+0x37],cl
  4173fd:	(bad)  
  4173fe:	fcomp  QWORD PTR [edi-0x32a06623]
  417404:	cs ins BYTE PTR es:[edi],dx
  417406:	lea    edi,[edi-0x56]
  417409:	int3   
  41740a:	pop    edx
  41740b:	cmp    edi,DWORD PTR [edi+0x60]
  41740e:	dec    ecx
  41740f:	mov    BYTE PTR ds:0x807f06c7,0xd1
  417416:	add    dl,0x7
  417419:	sbb    esp,DWORD PTR [edx-0xb]
  41741c:	jo     0x417406
  41741e:	pop    ebp
  41741f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417420:	(bad)  
  417421:	xlat   BYTE PTR ds:[ebx]
  417422:	adc    edi,ebp
  417424:	in     eax,0x7f
  417426:	and    cl,BYTE PTR [edx]
  417428:	inc    edx
  417429:	mov    al,0xef
  41742b:	sub    BYTE PTR [ebx+0x70e85ab1],dl
  417431:	arpl   bx,sp
  417433:	les    eax,FWORD PTR [ecx-0x27]
  417436:	mov    edi,0x21424633
  41743b:	jp     0x417480
  41743d:	mov    ebx,0xe00ce6f2
  417442:	das    
  417443:	ror    DWORD PTR [edi],1
  417445:	call   0x90d4422a
  41744a:	add    bh,BYTE PTR [eax+0x1c]
  41744d:	xchg   edi,eax
  41744e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41744f:	lds    eax,FWORD PTR [edx+0x5486d4db]
  417455:	push   esi
  417456:	xor    eax,0x775d8ae8
  41745b:	das    
  41745c:	push   edx
  41745d:	std    
  41745e:	adc    dl,BYTE PTR [ecx]
  417460:	or     BYTE PTR [eax-0x71],0x74
  417464:	lods   eax,DWORD PTR ds:[esi]
  417465:	test   eax,0xd4547b0
  41746a:	std    
  41746b:	lods   eax,DWORD PTR ds:[esi]
  41746c:	pop    edx
  41746d:	jp     0x417420
  41746f:	ins    DWORD PTR es:[edi],dx
  417470:	mov    bl,0xdf
  417472:	jg     0x4173f6
  417474:	or     al,bh
  417476:	or     dh,BYTE PTR [edx-0x70]
  417479:	sbb    eax,esp
  41747b:	hlt    
  41747c:	mov    al,ds:0xef5b4653
  417481:	xor    edx,ebp
  417483:	mov    ds:0xe2b67d07,al
  417488:	push   edx
  417489:	(bad)  
  41748b:	into   
  41748c:	aaa    
  41748d:	cmp    dh,BYTE PTR [ebx+0x49]
  417490:	jae    0x417496
  417492:	imul   ebx,DWORD PTR [esi+0x4e],0xfffffff6
  417496:	dec    edx
  417497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417498:	js     0x41745e
  41749a:	add    esp,DWORD PTR [ebp-0x28]
  41749d:	mov    cl,0x1b
  41749f:	repz push edi
  4174a1:	mov    eax,ds:0x33957823
  4174a6:	lods   eax,DWORD PTR ss:[esi]
  4174a8:	sbb    BYTE PTR [edx],dh
  4174aa:	add    BYTE PTR [eax+0x302528be],bl
  4174b0:	sub    al,0x17
  4174b2:	enter  0x136f,0x8b
  4174b6:	into   
  4174b7:	inc    eax
  4174b8:	mov    dx,0xbc04
  4174bc:	sub    al,0xb5
  4174be:	test   DWORD PTR [ebp+0x563ac3fa],esi
  4174c4:	cmp    al,0x5f
  4174c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174c7:	test   BYTE PTR [ebp+0x68],ah
  4174ca:	sub    eax,0xb53333d5
  4174cf:	loope  0x417500
  4174d1:	mov    edx,0x76d2b4a5
  4174d6:	ret    0xc3da
  4174d9:	pop    ebp
  4174da:	pop    edx
  4174db:	repnz popf 
  4174dd:	sbb    al,0x48
  4174df:	imul   DWORD PTR ds:0x684dada
  4174e5:	leave  
  4174e6:	jne    0x417544
  4174e8:	inc    eax
  4174e9:	div    BYTE PTR [esi]
  4174eb:	in     al,0xdf
  4174ed:	and    BYTE PTR [eax+edi*8],0x68
  4174f1:	rcr    eax,0xb9
  4174f4:	es push edx
  4174f6:	jge    0x4174b3
  4174f8:	add    ch,BYTE PTR [ecx]
  4174fa:	mov    bl,0x97
  4174fc:	mov    dh,BYTE PTR [ebx]
  4174fe:	xor    dl,BYTE PTR [ecx+esi*4]
  417501:	nop
  417502:	and    al,0xb3
  417504:	and    al,cl
  417506:	xchg   BYTE PTR [ebx+ebp*4+0x77609844],al
  41750d:	enter  0x595e,0x54
  417511:	push   esp
  417512:	sbb    al,0x55
  417514:	into   
  417515:	lea    edi,[eax-0x56c0b97e]
  41751b:	mov    al,0x20
  41751d:	push   DWORD PTR [edx+ebx*2]
  417520:	ins    DWORD PTR es:[edi],dx
  417521:	sbb    eax,ebx
  417523:	add    esp,ebp
  417525:	pop    ebp
  417526:	ret    
  417527:	xor    esi,0xffffffc0
  41752a:	push   ss
  41752b:	data16 jns 0x417500
  41752e:	xchg   esp,eax
  41752f:	jl     0x417581
  417531:	inc    edi
  417532:	ins    DWORD PTR es:[edi],dx
  417533:	mov    cl,0x21
  417535:	(bad)  
  417536:	neg    BYTE PTR [ecx-0x63126b1f]
  41753c:	ja     0x41750f
  41753e:	(bad)  
  41753f:	stos   DWORD PTR es:[edi],eax
  417540:	sub    ebx,ebx
  417542:	pop    ebx
  417543:	xchg   ecx,eax
  417544:	out    0xb4,eax
  417546:	adc    BYTE PTR [edi+0x6065cce3],al
  41754c:	inc    edx
  41754d:	fucom  st(7)
  41754f:	outs   dx,BYTE PTR ds:[esi]
  417550:	test   BYTE PTR [ebx],bh
  417552:	cdq    
  417553:	xlat   BYTE PTR ds:[ebx]
  417554:	(bad)  
  417555:	cwde   
  417556:	xchg   edx,eax
  417557:	test   al,0x31
  417559:	sbb    DWORD PTR [ecx],ebx
  41755b:	ror    BYTE PTR [eax+eiz*2+0xc114cb6],1
  417562:	ins    DWORD PTR es:[edi],dx
  417563:	in     eax,dx
  417564:	adc    DWORD PTR [edx-0x30f0433f],esp
  41756a:	hlt    
  41756b:	mov    edx,0x52635c2f
  417570:	jo     0x4175a4
  417572:	jae    0x417539
  417574:	jmp    0x417558
  417576:	into   
  417577:	jb     0x41755c
  417579:	icebp  
  41757a:	or     eax,0xe8442228
  41757f:	sub    esi,DWORD PTR [ecx]
  417581:	call   0x1d8603f3
  417586:	(bad)
  41758a:	rcl    DWORD PTR [ebx+ebp*2-0x76],1
  41758e:	fnsave [ebx]
  417590:	jnp    0x41758f
  417592:	mov    bl,0x5e
  417594:	fld    DWORD PTR [ebp+0xb]
  417597:	xor    DWORD PTR [esi+0x7e2d2f92],edi
  41759d:	test   BYTE PTR [edx+eiz*1-0x59],0x7c
  4175a2:	add    BYTE PTR [ecx+0x1a],cl
  4175a5:	and    eax,0xa06c409a
  4175aa:	cld    
  4175ab:	imul   esp,edx,0x3c
  4175ae:	je     0x417596
  4175b0:	ss pop esi
  4175b2:	mov    al,0x55
  4175b4:	dec    eax
  4175b5:	and    dh,BYTE PTR [eax-0x51]
  4175b8:	push   0x503a4b6d
  4175bd:	popf   
  4175be:	pop    ebx
  4175bf:	imul   esi,DWORD PTR [ebx-0x60dbf40c],0x4a
  4175c6:	loop   0x417596
  4175c8:	mov    eax,ds:0x5f48dd6a
  4175cd:	out    dx,al
  4175ce:	push   ds
  4175cf:	xor    DWORD PTR [edi],ebx
  4175d1:	sar    DWORD PTR [edx+edx*1+0xbb610cb],0x59
  4175d9:	std    
  4175da:	mov    eax,0x28793b92
  4175df:	add    bh,BYTE PTR [ecx+0x1fb65409]
  4175e5:	jmp    0x4d514783
  4175ea:	fdiv   QWORD PTR [eax-0x8469af9]
  4175f0:	(bad)  
  4175f1:	and    BYTE PTR [ecx-0x6928c8b7],cl
  4175f7:	xchg   ebp,eax
  4175f8:	test   BYTE PTR [ebx-0x3d9c71d7],0xaa
  4175ff:	popf   
  417600:	push   esi
  417601:	pop    edi
  417602:	cmp    eax,0x16cd9804
  417607:	sbb    bh,BYTE PTR [edx]
  417609:	or     edx,ecx
  41760b:	jg     0x4175dd
  41760d:	xchg   edx,eax
  41760e:	mov    ah,0x86
  417610:	jnp    0x4175a1
  417612:	sbb    BYTE PTR [ebp+0x1a],ch
  417615:	faddp  st(3),st
  417617:	adc    ebp,DWORD PTR [ebp+esi*1+0x690736e5]
  41761e:	addr16 push ebp
  417620:	popf   
  417621:	lock add al,al
  417624:	bound  edx,QWORD PTR [edi+0x31]
  417627:	mov    ch,0xe9
  417629:	ret    0x843f
  41762c:	aas    
  41762d:	fcomp  DWORD PTR [edx+eax*2+0x43defa95]
  417634:	pusha  
  417635:	enter  0xbb19,0xb1
  417639:	jmp    0xc39df6fb
  41763e:	adc    esp,eax
  417640:	mov    es:0xaddaf13,al
  417646:	xor    DWORD PTR [ebx-0x29c0caaa],0xffffffd8
  41764d:	ins    DWORD PTR es:[edi],dx
  41764e:	fbld   TBYTE PTR [edi]
  417650:	sbb    dh,BYTE PTR ds:0x97f53ad5
  417656:	jl     0x4176b5
  417658:	call   0x38b91306
  41765d:	icebp  
  41765e:	xchg   ebx,eax
  41765f:	or     al,0x69
  417661:	mov    edi,0x8a295986
  417666:	jnp    0x4176b3
  417668:	pop    ebx
  417669:	fild   DWORD PTR cs:[eax]
  41766c:	bound  edi,QWORD PTR [ebp-0x17]
  41766f:	jbe    0x417618
  417671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417672:	xor    BYTE PTR [ecx+ecx*8+0x10],bh
  417676:	fld    QWORD PTR [eax]
  417678:	dec    edx
  417679:	retf   
  41767a:	fucomp st(4)
  41767c:	fld    TBYTE PTR [ecx-0x740c373a]
  417682:	inc    eax
  417683:	loope  0x4176e6
  417685:	sar    BYTE PTR [ecx+0x43],cl
  417688:	stos   BYTE PTR es:[edi],al
  417689:	jecxz  0x417665
  41768b:	mov    esp,0x2dfe2674
  417690:	ror    BYTE PTR [ecx+0x5452a178],1
  417696:	int3   
  417697:	xchg   ebp,eax
  417698:	cbw    
  41769a:	std    
  41769b:	fadd   DWORD PTR [ebx+0x651f1854]
  4176a1:	xor    al,0xd3
  4176a3:	mov    al,0x45
  4176a5:	out    0xbb,eax
  4176a7:	(bad)  
  4176a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176ab:	xchg   edi,eax
  4176ac:	xchg   DWORD PTR [edi-0x1c],ecx
  4176af:	add    al,0x1
  4176b1:	xor    al,0xe2
  4176b3:	fiadd  DWORD PTR [edi-0x61f4de8]
  4176b9:	or     ax,0x8266
  4176bd:	inc    esp
  4176be:	jle    0x4176b8
  4176c0:	push   0x32
  4176c2:	shl    ebx,cl
  4176c4:	sub    DWORD PTR [ebx-0xe],eax
  4176c7:	pop    ss
  4176c8:	mov    eax,ds:0x56c3ed85
  4176cd:	icebp  
  4176ce:	neg    BYTE PTR [esi]
  4176d0:	jb     0x4176f6
  4176d2:	iret   
  4176d3:	sub    eax,0x668ba9c9
  4176d8:	es xchg edi,eax
  4176da:	sub    al,0xa0
  4176dc:	and    BYTE PTR [edx+0x42],ch
  4176df:	sbb    eax,0xcdc9f462
  4176e4:	lea    ebp,[ebx+0x5c650a6c]
  4176ea:	std    
  4176eb:	xchg   DWORD PTR [esi-0x6761bd85],esi
  4176f1:	out    dx,al
  4176f2:	int3   
  4176f3:	xchg   ebp,eax
  4176f4:	jb     0x4176bd
  4176f6:	clc    
  4176f7:	sub    eax,0x33ba986f
  4176fc:	scas   al,BYTE PTR es:[edi]
  4176fd:	or     ebx,ebp
  4176ff:	xor    al,bh
  417701:	lea    edi,[ebp-0x46653e94]
  417707:	mov    bl,0x53
  417709:	js     0x4176ee
  41770b:	test   BYTE PTR [ecx],ah
  41770d:	call   0xc218:0x6f66bcff
  417714:	mov    cl,0xf6
  417716:	or     al,0xb6
  417718:	bnd ret 0xec3d
  41771c:	sbb    BYTE PTR [edi],bh
  41771e:	adc    BYTE PTR [ebp+0x1fab496],dl
  417724:	and    DWORD PTR [esi-0x30],edi
  417727:	ins    BYTE PTR es:[edi],dx
  417728:	cmp    al,0x24
  41772a:	ins    DWORD PTR es:[edi],dx
  41772b:	fisub  DWORD PTR [eax-0x46]
  41772e:	sbb    dl,bh
  417730:	dec    esp
  417731:	mov    dl,0xe5
  417733:	cli    
  417734:	ins    DWORD PTR es:[edi],dx
  417735:	sub    ebx,ebx
  417737:	retf   
  417738:	sbb    eax,0xa7883cc0
  41773d:	ror    DWORD PTR [ecx],cl
  41773f:	jmp    0x4176da
  417741:	ja     0x4177b6
  417743:	fdiv   DWORD PTR [esi+0x71]
  417746:	ss (bad) 
  417748:	push   edi
  417749:	xor    eax,DWORD PTR [edx-0x52]
  41774c:	(bad)  
  41774d:	cmp    al,al
  41774f:	into   
  417750:	and    al,BYTE PTR [eax]
  417752:	sti    
  417753:	jl     0x417783
  417755:	or     al,0xd3
  417757:	and    BYTE PTR [ebx+0x62f3cba],0x36
  41775e:	popa   
  41775f:	mov    WORD PTR [ebx+0x38f72087],?
  417765:	je     0x4177c4
  417767:	sub    esi,DWORD PTR [edx+edi*1-0x19]
  41776b:	jmp    0x21f216a2
  417770:	sub    edi,ecx
  417772:	inc    ecx
  417773:	test   BYTE PTR [ecx],al
  417775:	lahf   
  417776:	jno    0x4177ea
  417778:	neg    DWORD PTR ds:0xde7dc55
  41777e:	mov    ax,0x5bc5
  417782:	mov    eax,0x8ae7299e
  417787:	inc    sp
  417789:	fidivr WORD PTR [edx+0x441becfd]
  41778f:	jecxz  0x4177f0
  417791:	aas    
  417792:	out    0xeb,al
  417794:	jne    0x4177ba
  417796:	les    ecx,FWORD PTR [eax-0x56cc239d]
  41779c:	fdivp  st(2),st
  41779e:	mov    ebp,0xd13b8420
  4177a3:	mov    bh,BYTE PTR [esi]
  4177a5:	add    ah,0x2
  4177a8:	jae    0x4177d7
  4177aa:	daa    
  4177ab:	sbb    esi,DWORD PTR [edx]
  4177ad:	das    
  4177ae:	lahf   
  4177af:	mov    dl,0x58
  4177b1:	dec    esi
  4177b2:	scas   eax,DWORD PTR es:[edi]
  4177b3:	jmp    0x644f:0x36b74c49
  4177ba:	pop    ebp
  4177bb:	inc    ecx
  4177bc:	lea    ebx,[ebp+0x31ee6a02]
  4177c2:	mov    cl,0x9a
  4177c4:	imul   ecx,DWORD PTR [ebx],0xa123efc8
  4177ca:	inc    ebx
  4177cb:	fadd   QWORD PTR [eax+0x30]
  4177ce:	(bad)  
  4177cf:	adc    eax,DWORD PTR [ecx]
  4177d1:	aaa    
  4177d2:	pop    edx
  4177d3:	(bad)
  4177d7:	enter  0xf231,0x5c
  4177db:	in     eax,0xa5
  4177dd:	pop    ecx
  4177de:	xlat   BYTE PTR ds:[ebx]
  4177df:	or     eax,0x280b8543
  4177e4:	jecxz  0x417824
  4177e6:	xchg   ebx,eax
  4177e7:	sti    
  4177e8:	inc    ebx
  4177e9:	lahf   
  4177ea:	adc    eax,0xe561223a
  4177ef:	scas   eax,DWORD PTR es:[edi]
  4177f0:	rcr    DWORD PTR [ebp-0x58e80dfd],1
  4177f6:	call   0x463f0c67
  4177fb:	arpl   WORD PTR [edi],si
  4177fd:	ss mov bh,0x18
  417800:	and    BYTE PTR [esi+eax*2-0x7fb44396],0x97
  417808:	and    ebp,DWORD PTR [eax-0x5100b4d2]
  41780e:	mov    bh,0xd
  417810:	pop    es
  417811:	jl     0x417809
  417813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417815:	and    DWORD PTR [ebp+0x40124725],ebp
  41781b:	mov    bh,0x9
  41781d:	cmp    al,0x18
  41781f:	dec    ebp
  417820:	dec    edx
  417821:	cmp    eax,DWORD PTR ds:0x8761e890
  417827:	mov    DWORD PTR [ebx],0x68c8c0cd
  41782d:	dec    ebx
  41782e:	sahf   
  41782f:	call   0xcfb62fa8
  417834:	pop    ds
  417835:	dec    edi
  417836:	or     al,0xd2
  417838:	mov    ds:0xc6a4fd1,al
  41783d:	clc    
  41783e:	sti    
  41783f:	mov    ds:0x4a27d90b,al
  417844:	(bad)  
  417845:	shl    ch,cl
  417847:	mov    dl,0x78
  417849:	mov    DWORD PTR [ebp-0x2c],eax
  41784c:	xor    ecx,ecx
  41784e:	js     0x41789f
  417850:	inc    ebp
  417851:	rcr    BYTE PTR [ebx],cl
  417853:	fadd   DWORD PTR [esi]
  417855:	cwde   
  417856:	pusha  
  417857:	mul    ch
  417859:	inc    ebp
  41785a:	or     al,0xfc
  41785c:	cmp    cl,BYTE PTR [ebp+edx*2+0x144ff917]
  417863:	bound  ebp,QWORD PTR [ecx*8-0x5fbbf4ff]
  41786a:	jo     0x417870
  41786c:	xor    ebp,DWORD PTR [ecx+edx*2]
  41786f:	mov    cl,0x9b
  417871:	bound  ebx,QWORD PTR [ebx-0x174bc701]
  417877:	(bad)  
  417879:	addr16 js 0x4178ec
  41787c:	mov    DWORD PTR [edx],edx
  41787e:	cs retf 0x11bd
  417882:	push   ebx
  417883:	test   DWORD PTR [ecx+eax*1],ebp
  417886:	outs   dx,BYTE PTR ds:[esi]
  417887:	pop    edx
  417888:	inc    eax
  417889:	mov    ch,0x2c
  41788b:	bswap  ecx
  41788d:	add    eax,DWORD PTR [edx-0x2]
  417890:	sbb    esp,eax
  417892:	loop   0x4178cd
  417894:	inc    esp
  417895:	and    al,0xf6
  417897:	ffree  st(0)
  417899:	cmp    dh,dh
  41789b:	and    BYTE PTR [eax+0x44c84fb6],dl
  4178a1:	int3   
  4178a2:	xchg   esi,eax
  4178a3:	dec    eax
  4178a4:	and    DWORD PTR [edi-0x1e],ecx
  4178a7:	mov    al,0xa4
  4178a9:	cmp    eax,DWORD PTR [esi+0x7af7de74]
  4178af:	fs jno 0x4178b8
  4178b2:	test   eax,0xfa502caf
  4178b7:	inc    esi
  4178b8:	jb     0x417847
  4178ba:	push   0xd94f2f4
  4178bf:	jae    0x417932
  4178c1:	fistp  QWORD PTR [edx]
  4178c3:	out    0xcd,eax
  4178c5:	rol    al,cl
  4178c7:	(bad)
  4178ca:	sub    eax,0x4b8ab614
  4178cf:	push   ebp
  4178d0:	pop    ebp
  4178d1:	call   0xcbc87c27
  4178d6:	(bad)  
  4178d7:	lahf   
  4178d8:	cdq    
  4178d9:	mov    BYTE PTR [edx-0x27],bl
  4178dc:	jno    0x417865
  4178de:	jno    0x417933
  4178e0:	jmp    0xd17f00d8
  4178e5:	xchg   ebx,eax
  4178e6:	jmp    0xd891:0x37c6fc27
  4178ed:	pop    ds
  4178ee:	test   eax,0x96c9914d
  4178f3:	xor    al,0xd0
  4178f5:	and    DWORD PTR [ebx+0x45e7531],0xffffffa0
  4178fc:	outs   dx,DWORD PTR ds:[esi]
  4178fd:	js     0x417904
  4178ff:	push   ecx
  417900:	jne    0x417971
  417902:	fwait
  417903:	mov    ecx,DWORD PTR [esi]
  417905:	repnz loopne 0x417954
  417908:	sbb    BYTE PTR [ebp+eax*4+0x3c858af0],dl
  41790f:	or     edi,ecx
  417911:	das    
  417912:	sti    
  417913:	mov    eax,ds:0x284c791f
  417918:	jmp    0x417904
  41791a:	add    DWORD PTR [esi+0x0],ecx
  41791d:	or     cl,al
  41791f:	std    
  417920:	xchg   esi,eax
  417921:	lea    esp,[edi+0x3b]
  417924:	pop    esp
  417925:	mov    dl,0xe3
  417928:	xchg   ebp,eax
  417929:	pushf  
  41792a:	fistp  DWORD PTR [ebp+eiz*8-0x2e]
  41792e:	stc    
  41792f:	mov    bh,BYTE PTR [edx-0x3017b4c8]
  417935:	jmp    0x3510:0xc3fb62bd
  41793c:	fwait
  41793d:	xchg   edi,eax
  41793e:	repz lahf 
  417940:	(bad)  
  417941:	push   eax
  417942:	sbb    BYTE PTR [edi-0x6a0d9195],cl
  417948:	push   ebx
  417949:	in     eax,0xf
  41794b:	lea    eax,[ebp+0x3f16503]
  417951:	(bad)  
  417952:	addr16 out dx,al
  417954:	dec    eax
  417955:	gs aam 0x64
  417958:	int3   
  417959:	enter  0xbdae,0x89
  41795d:	and    eax,0xfcd58833
  417962:	lea    edx,[esi+0x23094307]
  417968:	stos   DWORD PTR es:[edi],eax
  417969:	adc    cl,BYTE PTR [ebx-0x397bcff3]
  41796f:	fiadd  DWORD PTR [ebp+esi*2-0x45c5d0d3]
  417976:	dec    ebp
  417977:	aaa    
  417978:	pop    esi
  417979:	mov    ebp,0x34d88ac2
  41797e:	out    0x43,al
  417980:	aad    0xc8
  417982:	sub    esi,DWORD PTR [edi]
  417984:	nop
  417985:	popf   
  417986:	gs std 
  417988:	push   ebp
  417989:	inc    ebp
  41798a:	idiv   BYTE PTR [ecx+0x2cf2ee52]
  417990:	jns    0x4179f0
  417992:	ins    BYTE PTR es:[edi],dx
  417993:	add    ebx,DWORD PTR [esi+0x79]
  417996:	retf   0x5e09
  417999:	fistp  QWORD PTR [ebp-0x2d]
  41799c:	clc    
  41799d:	mov    ebx,0xa4101a5f
  4179a2:	or     al,0xa8
  4179a4:	test   DWORD PTR [ecx+0x46],esp
  4179a7:	int    0x4d
  4179a9:	jle    0x417946
  4179ab:	lock or ah,BYTE PTR [edx+0x29]
  4179af:	inc    edi
  4179b0:	stc    
  4179b1:	aad    0xd1
  4179b3:	push   esi
  4179b4:	xlat   BYTE PTR ds:[ebx]
  4179b5:	mov    al,ds:0xf25ee2b7
  4179ba:	into   
  4179bb:	sti    
  4179bc:	test   al,0x4b
  4179be:	xchg   ebx,eax
  4179bf:	xchg   ebp,eax
  4179c0:	add    DWORD PTR [esi],esi
  4179c2:	sbb    al,0x1c
  4179c4:	popa   
  4179c5:	das    
  4179c6:	or     eax,DWORD PTR [ebx]
  4179c8:	cmp    DWORD PTR [eax+esi*8],esi
  4179cb:	cmovg  edx,esi
  4179ce:	cmp    ebx,DWORD PTR [ecx+0x5131f5a9]
  4179d4:	aas    
  4179d5:	iret   
  4179d6:	lods   al,BYTE PTR ds:[esi]
  4179d7:	mov    dh,0x83
  4179d9:	in     al,0xf
  4179db:	add    BYTE PTR [ebx-0x651b168],0x39
  4179e2:	into   
  4179e3:	mul    edx
  4179e5:	push   cs
  4179e6:	std    
  4179e7:	or     DWORD PTR ds:0xd9e2fc18,ebx
  4179ed:	mov    al,0x3f
  4179ef:	fistp  QWORD PTR [ebx+0x291da573]
  4179f5:	imul   BYTE PTR [ebx-0x55476aad]
  4179fb:	sbb    DWORD PTR [ecx+0x7a],esp
  4179fe:	cmp    esp,edx
  417a00:	jecxz  0x417a34
  417a02:	mov    eax,0x55a8757c
  417a07:	mov    BYTE PTR [ecx-0x484a197f],dh
  417a0d:	loope  0x417a07
  417a0f:	push   es
  417a10:	cld    
  417a11:	jne    0x4179c4
  417a13:	pop    es
  417a14:	ins    DWORD PTR es:[edi],dx
  417a15:	nop
  417a16:	ret    0x8fe1
  417a19:	mov    ch,0x3
  417a1b:	xchg   ecx,eax
  417a1c:	or     esp,edx
  417a1e:	xchg   ebp,ebx
  417a20:	loopne 0x417a6b
  417a22:	adc    DWORD PTR [ebx+0x5b],edx
  417a25:	adc    ecx,DWORD PTR [edx+0x67355368]
  417a2b:	pop    edx
  417a2c:	xor    BYTE PTR [ecx+0x18adba57],dl
  417a32:	push   ds
  417a33:	test   eax,0x65d58c3f
  417a38:	int3   
  417a39:	(bad)  
  417a3a:	in     eax,dx
  417a3b:	mov    ebx,0x81017116
  417a40:	scas   al,BYTE PTR es:[edi]
  417a41:	xchg   dl,dl
  417a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a44:	mov    eax,ds:0xe86357be
  417a49:	xor    al,BYTE PTR [eax]
  417a4b:	repnz gs fincstp 
  417a4f:	out    dx,eax
  417a50:	stos   BYTE PTR es:[edi],al
  417a51:	xor    BYTE PTR [ecx+0x5204e987],al
  417a57:	xchg   edx,eax
  417a58:	ds leave 
  417a5a:	sub    dl,BYTE PTR [edx-0x5d187aae]
  417a60:	lea    ebp,[ebx]
  417a62:	pop    ecx
  417a63:	sbb    BYTE PTR [esi+0x4a],0x87
  417a67:	call   0x220e:0xd6b10e0
  417a6e:	or     dl,BYTE PTR [esi+0x12d4d636]
  417a74:	xor    eax,0x1ac56b5b
  417a79:	and    eax,0x2e258c46
  417a7e:	lahf   
  417a7f:	jo     0x417a76
  417a81:	push   eax
  417a82:	stos   BYTE PTR es:[edi],al
  417a83:	mov    ah,0x3b
  417a85:	fldcw  WORD PTR [edx+edx*4-0x57ba9e38]
  417a8c:	rol    DWORD PTR ss:[ebx+edi*8+0x7e0bf227],0x9a
  417a95:	push   0xffffff99
  417a97:	ins    BYTE PTR es:[edi],dx
  417a98:	push   es
  417a99:	sar    DWORD PTR [ecx],cl
  417a9b:	inc    esi
  417a9c:	hlt    
  417a9d:	pop    ecx
  417a9e:	inc    esi
  417a9f:	cli    
  417aa0:	xchg   esi,eax
  417aa1:	sbb    DWORD PTR [ebp+0x5bbd9b12],ecx
  417aa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa8:	mov    ds:0x98a7e99d,al
  417aad:	and    BYTE PTR [esp+ebp*2],dh
  417ab0:	in     eax,0x16
  417ab2:	xor    DWORD PTR [esp+ebx*4-0x2a7aeb1d],ebp
  417ab9:	fistp  DWORD PTR [ecx+0x7a473a92]
  417abf:	popf   
  417ac0:	pop    eax
  417ac1:	cmp    al,0xa5
  417ac3:	arpl   WORD PTR [edi+0x44],si
  417ac6:	ror    DWORD PTR [edx+0x284af95f],cl
  417acc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417acd:	mov    ds:0xb4099dc0,eax
  417ad2:	movhps xmm4,QWORD PTR [ecx-0x42c836bc]
  417ad9:	mov    esp,0x856a5e66
  417ade:	cmp    cl,0xf7
  417ae1:	dec    ebx
  417ae2:	cld    
  417ae3:	into   
  417ae4:	sbb    ch,dh
  417ae6:	cmp    eax,0xf2208c72
  417aeb:	pop    edi
  417aec:	sahf   
  417aed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aee:	pop    ebp
  417aef:	inc    esp
  417af0:	arpl   WORD PTR [ecx-0x7a],bp
  417af3:	js     0x417aca
  417af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417af6:	ja     0x417ad7
  417af8:	scas   al,BYTE PTR es:[edi]
  417af9:	loop   0x417a9e
  417afb:	push   esp
  417afc:	adc    al,0xee
  417afe:	mov    eax,0x905ce6e3
  417b03:	adc    ebx,edx
  417b05:	ror    DWORD PTR [esi-0x39],0xe0
  417b09:	fistp  DWORD PTR [ecx]
  417b0b:	add    dh,BYTE PTR [eax+0x38b2053]
  417b11:	jl     0x417b22
  417b13:	fnstsw WORD PTR [ecx]
  417b15:	jle    0x417b5d
  417b17:	(bad)  
  417b19:	mov    esi,0xcfa54dde
  417b1e:	cmp    BYTE PTR [ebx-0x36],bl
  417b21:	sbb    al,0xb5
  417b23:	adc    eax,0x59357565
  417b28:	dec    ebp
  417b29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2a:	sbb    al,0xd
  417b2c:	leave  
  417b2d:	mov    edx,0xeb126d3
  417b32:	or     eax,0xb9b42e79
  417b37:	stos   DWORD PTR es:[edi],eax
  417b38:	outs   dx,DWORD PTR ds:[esi]
  417b39:	daa    
  417b3a:	jbe    0x417aef
  417b3c:	mov    esi,0x59c64ab3
  417b41:	aam    0x71
  417b43:	loop   0x417b4f
  417b45:	and    al,0xb2
  417b47:	pop    edx
  417b48:	idiv   DWORD PTR [edx+0x4d]
  417b4b:	dec    ebx
  417b4c:	pop    esp
  417b4d:	lock or dl,BYTE PTR [edx]
  417b50:	dec    edx
  417b51:	mov    ?,WORD PTR [ebx+0x3f35f750]
  417b57:	gs sbb eax,0x218f33ca
  417b5d:	mov    eax,ds:0xbdbc726a
  417b62:	xchg   esp,eax
  417b63:	sti    
  417b64:	push   esi
  417b65:	add    esp,edx
  417b67:	mov    cs,WORD PTR [ecx+0x2d0e2d51]
  417b6d:	mov    al,ds:0x6499a443
  417b73:	nop
  417b74:	aas    
  417b75:	push   cs
  417b76:	fwait
  417b77:	cld    
  417b78:	in     al,dx
  417b79:	ja     0x417b25
  417b7b:	popf   
  417b7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7d:	fsubr  DWORD PTR [edi]
  417b7f:	mov    ch,cl
  417b81:	and    dh,BYTE PTR [ebp+0x7f]
  417b84:	jecxz  0x417b3e
  417b86:	jp     0x417bbc
  417b88:	std    
  417b89:	ins    DWORD PTR es:[edi],dx
  417b8a:	in     al,dx
  417b8b:	stc    
  417b8c:	jg     0x417b17
  417b8e:	test   ebx,esp
  417b90:	sbb    DWORD PTR [esp+edi*4-0x4c],0xffffffa0
  417b95:	(bad)  
  417b96:	jmp    0x87e8b883
  417b9b:	dec    edi
  417b9c:	cmp    ecx,eax
  417b9e:	cmp    BYTE PTR [edx+0x38e91953],bh
  417ba4:	retf   
  417ba5:	cs xchg ecx,edx
  417ba8:	inc    ecx
  417ba9:	jg     0x417b86
  417bab:	sub    eax,0x7f3b9062
  417bb0:	xor    eax,0x26e228ac
  417bb5:	sub    al,0xb2
  417bb7:	cld    
  417bb8:	pop    edx
  417bb9:	pop    edi
  417bba:	pop    esp
  417bbb:	inc    eax
  417bbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bbd:	push   edx
  417bbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bbf:	fbstp  TBYTE PTR [edi]
  417bc1:	pop    ss
  417bc2:	push   cs
  417bc3:	push   ds
  417bc4:	sti    
  417bc5:	div    BYTE PTR [edx+0x4f]
  417bc8:	neg    DWORD PTR [eax-0xa]
  417bcb:	cld    
  417bcc:	lock ja 0x417b5d
  417bcf:	xchg   esi,eax
  417bd0:	pusha  
  417bd1:	(bad)  
  417bd2:	shl    ch,1
  417bd4:	neg    DWORD PTR [ecx]
  417bd6:	pop    esi
  417bd7:	lahf   
  417bd8:	das    
  417bd9:	xchg   esi,eax
  417bda:	(bad)  
  417bdd:	cli    
  417bde:	mov    al,0xb7
  417be0:	pop    es
  417be1:	xchg   esp,eax
  417be2:	retf   0xf4be
  417be5:	mov    al,ds:0xecc1a182
  417bea:	sar    DWORD PTR [eax+0x1],1
  417bed:	push   0xbedf72bf
  417bf2:	pop    ecx
  417bf3:	hlt    
  417bf4:	leave  
  417bf5:	stos   DWORD PTR es:[edi],eax
  417bf6:	outs   dx,BYTE PTR ds:[esi]
  417bf7:	add    esi,DWORD PTR ds:0x23e10b12
  417bfd:	idiv   DWORD PTR ds:[ebx]
  417c00:	mov    ecx,0x32c401b8
  417c05:	cld    
  417c06:	in     al,dx
  417c07:	jmp    0x1a2cb4fb
  417c0c:	test   eax,0xb3bd3e77
  417c11:	sbb    dl,BYTE PTR ds:0xb7e6d753
  417c17:	pop    es
  417c18:	push   0x7f
  417c1a:	xchg   ecx,eax
  417c1b:	arpl   di,di
  417c1d:	test   al,0xbf
  417c1f:	ins    DWORD PTR es:[edi],dx
  417c20:	mov    esi,0x69637f96
  417c25:	push   esi
  417c26:	pusha  
  417c27:	retf   0x3234
  417c2a:	xor    DWORD PTR [edx-0x7bf8e82d],edx
  417c30:	xchg   DWORD PTR [eax+ebp*4-0x63],ebx
  417c34:	or     al,0x5e
  417c36:	enter  0xc2a7,0x25
  417c3a:	adc    BYTE PTR [ecx],bh
  417c3c:	test   eax,0x2b85a2bc
  417c41:	mov    ecx,0x3c8c29fb
  417c46:	retf   0x3812
  417c49:	(bad)  
  417c4a:	stos   BYTE PTR es:[edi],al
  417c4b:	mov    eax,ds:0x41e8de3e
  417c50:	call   0xa65a:0x9799dbcb
  417c57:	jo     0x417cc7
  417c59:	cmp    cl,al
  417c5b:	clc    
  417c5c:	add    eax,0x8d23d281
  417c61:	leave  
  417c62:	idiv   DWORD PTR [esp+esi*2-0x5523b630]
  417c69:	sbb    bh,BYTE PTR [esi]
  417c6b:	das    
  417c6c:	hlt    
  417c6d:	(bad)
  417c71:	std    
  417c72:	adc    al,0xf0
  417c74:	aad    0x4b
  417c76:	(bad)
  417c79:	pushf  
  417c7a:	lods   eax,DWORD PTR ds:[si]
  417c7c:	xchg   esp,eax
  417c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c7e:	jl     0x417c7a
  417c80:	add    ebp,edx
  417c82:	test   eax,0xb83198d4
  417c87:	push   cs
  417c88:	mov    dh,0x18
  417c8a:	loop   0x417c65
  417c8c:	xchg   edx,eax
  417c8d:	mov    esi,0x3a413096
  417c92:	push   cs
  417c93:	ja     0x417cf8
  417c95:	retf   0x8eeb
  417c98:	mov    ebp,0x893c9944
  417c9d:	in     eax,0xa8
  417c9f:	iret   
  417ca0:	lea    ebp,[ebp-0x44a2be69]
  417ca6:	popf   
  417ca7:	adc    ebx,DWORD PTR [ecx+0x76606906]
  417cad:	test   dl,bh
  417caf:	or     eax,0x4078e2bd
  417cb4:	test   bl,dh
  417cb6:	push   0xffffffc3
  417cb8:	in     al,0xf3
  417cba:	cwde   
  417cbb:	aam    0x51
  417cbd:	std    
  417cbe:	test   eax,0xfda61c17
  417cc3:	fs gs out 0xc3,eax
  417cc7:	xor    esi,DWORD PTR [edx-0x340b29ff]
  417ccd:	adc    esp,DWORD PTR [ebx]
  417ccf:	inc    ebp
  417cd0:	jp     0x417cd3
  417cd2:	fldcw  WORD PTR [eax-0x3d1d77ff]
  417cd8:	add    BYTE PTR [ebp+0x16],cl
  417cdb:	push   ecx
  417cdc:	mov    ch,0xa6
  417cde:	xor    DWORD PTR ds:0xe1a9407b,0xfffffff1
  417ce5:	xchg   esi,eax
  417ce6:	pop    edi
  417ce7:	sub    BYTE PTR [ebx],dh
  417ce9:	xchg   BYTE PTR [esi],ah
  417ceb:	inc    esp
  417cec:	fbld   TBYTE PTR cs:[edx]
  417cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf1:	mov    ds:0x113accad,al
  417cf6:	fidivr DWORD PTR ds:0xcc9417a3
  417cfc:	repnz fnstcw WORD PTR [eax+0x54]
  417d00:	xchg   ecx,eax
  417d01:	or     cl,BYTE PTR [ecx-0x42]
  417d04:	mov    BYTE PTR [ebp-0x229d9e03],0x77
  417d0b:	les    edi,FWORD PTR [edi]
  417d0d:	shl    BYTE PTR [ebx],0xfd
  417d10:	push   cs
  417d11:	and    DWORD PTR [ebx+0x34cadf82],eax
  417d17:	mov    ds:0x3d3fc737,al
  417d1c:	dec    esp
  417d1d:	jno    0x417cd4
  417d1f:	adc    esi,DWORD PTR [edi]
  417d21:	daa    
  417d22:	jmp    0x1b79ef15
  417d27:	add    eax,0x23e673eb
  417d2c:	shl    DWORD PTR [ecx+0x50],cl
  417d2f:	mov    dh,0x90
  417d31:	iret   
  417d32:	loopne 0x417d7a
  417d34:	push   edx
  417d35:	cli    
  417d36:	cmp    eax,0x43e03123
  417d3b:	sti    
  417d3c:	lea    ebx,[edx-0xa777862]
  417d42:	inc    esp
  417d43:	lods   eax,DWORD PTR ds:[esi]
  417d44:	sbb    edx,DWORD PTR [eax+0x2e1c8914]
  417d4a:	jecxz  0x417d3f
  417d4c:	adc    al,0x8
  417d4e:	sub    ebp,DWORD PTR [ebx-0x4f8aabfc]
  417d54:	out    0xe1,al
  417d56:	les    ecx,FWORD PTR [ecx+0x5099921a]
  417d5c:	outs   dx,BYTE PTR ds:[esi]
  417d5d:	dec    esp
  417d5e:	inc    esp
  417d5f:	adc    DWORD PTR [esi+0x72],ecx
  417d62:	sar    BYTE PTR [ecx+0xd],0x48
  417d66:	pop    esi
  417d67:	stc    
  417d68:	pop    ecx
  417d69:	inc    esi
  417d6a:	ror    dh,cl
  417d6c:	in     al,dx
  417d6d:	jmp    0xfa06e741
  417d72:	mov    ah,BYTE PTR [ebx]
  417d74:	add    esp,DWORD PTR [edi+0x46]
  417d77:	ins    DWORD PTR es:[edi],dx
  417d78:	je     0x417d32
  417d7a:	xor    eax,0xc47ed7c3
  417d7f:	push   0xb2e5ae49
  417d84:	mov    ah,0x29
  417d86:	mov    ds:0xf90fcee8,eax
  417d8b:	fs test eax,0xc1fd40ca
  417d92:	or     eax,ebp
  417d94:	add    cl,BYTE PTR [ecx-0x5a]
  417d97:	ds mov ah,0x97
  417d9a:	inc    ebx
  417d9b:	mov    dh,0x82
  417d9d:	(bad)  
  417d9e:	fmul   QWORD PTR [edx+0x29]
  417da1:	out    0x9f,al
  417da3:	inc    edi
  417da4:	sub    cl,BYTE PTR [esi+0x21]
  417da7:	rcr    BYTE PTR [edx],0x4b
  417daa:	or     al,BYTE PTR [eax+0x7d]
  417dad:	loopne 0x417e07
  417daf:	or     al,0x1d
  417db1:	sbb    BYTE PTR [edx+0x5c],bl
  417db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db5:	mov    edx,0x6d21d351
  417dba:	retf   
  417dbb:	cwde   
  417dbc:	stos   BYTE PTR es:[edi],al
  417dbd:	std    
  417dbe:	mov    ds:0xd80f23f7,al
  417dc3:	or     ch,BYTE PTR [ebx]
  417dc5:	push   ebx
  417dc6:	mov    al,ds:0xa1f867c7
  417dcb:	std    
  417dcc:	pushf  
  417dcd:	xor    DWORD PTR [ecx],eax
  417dcf:	retf   0xc8d9
  417dd2:	stos   DWORD PTR es:[edi],eax
  417dd3:	jnp    0x417d6f
  417dd5:	inc    ecx
  417dd6:	pop    ds
  417dd7:	aaa    
  417dd8:	cmp    bl,al
  417dda:	adc    ax,0x2cf7
  417dde:	mov    bl,0xe6
  417de0:	das    
  417de1:	stos   DWORD PTR es:[edi],eax
  417de2:	cmp    ecx,eax
  417de4:	mov    dl,BYTE PTR [ebx+0x2e]
  417de7:	cpuid  
  417de9:	call   DWORD PTR [edi]
  417deb:	aaa    
  417dec:	test   eax,0x887cf6f8
  417df1:	pop    ebp
  417df2:	cmp    al,0x22
  417df4:	mov    ds:0x90e3cc1,al
  417df9:	push   ss
  417dfa:	jmp    0x417e64
  417dfc:	retf   
  417dfd:	in     al,dx
  417dfe:	inc    esi
  417dff:	jmp    0x40b9:0x37606c28
  417e06:	xor    al,0x6a
  417e08:	mov    cl,BYTE PTR ds:0xcdd92b47
  417e0e:	pushf  
  417e0f:	pushf  
  417e10:	jp     0x417db2
  417e12:	out    dx,eax
  417e13:	stos   BYTE PTR es:[edi],al
  417e14:	fucomi st,st(3)
  417e16:	lods   al,BYTE PTR ds:[esi]
  417e17:	scas   al,BYTE PTR es:[edi]
  417e18:	js     0x417e7b
  417e1a:	rol    edi,1
  417e1c:	pop    ecx
  417e1d:	mov    BYTE PTR [esi],bl
  417e1f:	mov    bl,0xc
  417e21:	iret   
  417e22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e23:	mov    dh,0xd2
  417e25:	xor    edi,DWORD PTR [edx]
  417e27:	imul   edi,DWORD PTR [esi+0x4c],0xffffffbe
  417e2b:	push   cs
  417e2c:	mov    BYTE PTR [esi-0x17],bl
  417e2f:	xchg   esp,eax
  417e30:	(bad)  
  417e31:	das    
  417e32:	sub    esp,DWORD PTR [ebp+0x48]
  417e35:	adc    ebp,edx
  417e37:	pop    ds
  417e38:	and    al,BYTE PTR [ebp-0x2826afd1]
  417e3e:	pop    edx
  417e3f:	les    eax,FWORD PTR [esi+0x4c0ce15c]
  417e45:	enter  0x5a56,0x74
  417e49:	jle    0x417e9d
  417e4b:	call   0x1736:0x4d06ba36
  417e52:	mov    ds:0x4ba40bca,al
  417e57:	lods   eax,DWORD PTR ds:[esi]
  417e58:	push   ss
  417e59:	aam    0x90
  417e5b:	pushf  
  417e5c:	push   edi
  417e5d:	jge    0x417e87
  417e5f:	int3   
  417e60:	xlat   BYTE PTR ds:[ebx]
  417e61:	xchg   DWORD PTR [ecx+eiz*2-0x11],esp
  417e65:	loop   0x417e19
  417e67:	sub    al,BYTE PTR [ebp+ecx*4-0xd455745]
  417e6e:	lahf   
  417e6f:	sbb    dl,BYTE PTR [ecx+0x70a8a1b3]
  417e75:	cmp    BYTE PTR [ebx],ch
  417e77:	or     DWORD PTR [edi+0x24e85883],edi
  417e7d:	out    0x33,eax
  417e7f:	mov    cs,ebp
  417e81:	pop    DWORD PTR [esi]
  417e83:	out    dx,eax
  417e84:	xor    cl,ah
  417e86:	jnp    0x417e64
  417e88:	sub    DWORD PTR [esi],edi
  417e8a:	inc    eax
  417e8b:	leave  
  417e8c:	icebp  
  417e8d:	xchg   ecx,eax
  417e8e:	push   esp
  417e8f:	mov    cl,0x9d
  417e91:	pop    ds
  417e92:	cli    
  417e93:	lods   eax,DWORD PTR ds:[esi]
  417e94:	or     DWORD PTR ds:0xe1f41a05,eax
  417e9a:	pop    ebp
  417e9b:	mov    esi,0x94f6f69d
  417ea0:	jle    0x417e68
  417ea2:	sub    al,0xc9
  417ea4:	ds xchg ebx,eax
  417ea6:	adc    DWORD PTR [esi+0x28ef2c5a],edi
  417eac:	mov    cl,BYTE PTR [ebx+0x74]
  417eaf:	ret    
  417eb0:	mov    edx,0xc2ffd68b
  417eb5:	(bad)  
  417eb6:	jno    0x417f1d
  417eb8:	lds    eax,FWORD PTR ds:0x7c3fa36b
  417ebe:	retf   
  417ebf:	arpl   di,bp
  417ec1:	in     eax,0xc4
  417ec3:	mov    ds:0xd0ac9e86,eax
  417ec8:	mov    ch,0x1d
  417eca:	(bad)  
  417ecb:	(bad)  
  417ecc:	sar    DWORD PTR [ecx+0x42],1
  417ecf:	loop   0x417f09
  417ed1:	loop   0x417e6f
  417ed3:	aas    
  417ed4:	lods   eax,DWORD PTR ds:[esi]
  417ed5:	dec    ebx
  417ed6:	cs jnp 0x417eb6
  417ed9:	shr    BYTE PTR [edx-0x15853f9f],0x9d
  417ee0:	lahf   
  417ee1:	jecxz  0x417e7c
  417ee3:	or     ah,BYTE PTR [edi]
  417ee5:	ss nop
  417ee7:	sbb    ch,dh
  417ee9:	cmp    al,0xfb
  417eeb:	cmp    al,0x59
  417eed:	dec    ecx
  417eee:	sub    eax,DWORD PTR [esi-0x6c]
  417ef1:	xor    al,0x55
  417ef3:	(bad)  
  417ef4:	aam    0x8
  417ef6:	jae    0x417ef8
  417ef8:	out    0x74,eax
  417efa:	es cmc 
  417efc:	cld    
  417efd:	push   eax
  417efe:	stc    
  417eff:	mov    bl,0x14
  417f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f02:	cli    
  417f03:	out    dx,eax
  417f04:	(bad)  
  417f05:	sti    
  417f06:	add    eax,DWORD PTR [eax-0x32fddb02]
  417f0c:	scas   eax,DWORD PTR es:[edi]
  417f0d:	cmc    
  417f0e:	push   edx
  417f0f:	xchg   edi,eax
  417f10:	xchg   ecx,eax
  417f11:	(bad)  
  417f12:	pop    ebx
  417f13:	mov    bh,0x5f
  417f15:	(bad)  
  417f17:	cmp    BYTE PTR [ecx+ebx*2],cl
  417f1a:	into   
  417f1b:	pop    edx
  417f1c:	mov    dh,0x97
  417f1e:	jmp    0x417eab
  417f20:	mov    esp,0xa6f2926b
  417f25:	xor    al,0x67
  417f27:	cmp    dl,BYTE PTR [ecx-0x41adbadd]
  417f2d:	mov    ecx,0xf8a57d1a
  417f32:	(bad)  
  417f33:	jmp    0x417fb4
  417f35:	cmc    
  417f36:	push   ecx
  417f37:	mov    dh,0x2c
  417f39:	in     eax,dx
  417f3a:	rcl    cl,1
  417f3c:	mov    edx,0xa8f4dc7c
  417f41:	cmp    BYTE PTR [ebp-0x1f5a7084],cl
  417f47:	outs   dx,BYTE PTR ds:[esi]
  417f48:	int3   
  417f49:	push   cs
  417f4a:	ds stc 
  417f4c:	mov    bh,bh
  417f4e:	mov    edi,0x8580a6e0
  417f53:	inc    BYTE PTR [ebp+0x2b7b7a25]
  417f59:	mov    DWORD PTR [edx+0x1d057960],0xc5a8ee8d
  417f63:	adc    edi,DWORD PTR [ecx+0x3c]
  417f66:	dec    edi
  417f67:	mov    edx,0xe12b6e29
  417f6c:	mov    esi,0x9a16bac0
  417f71:	sbb    BYTE PTR [ebx+eax*8+0x36cb7120],bh
  417f78:	out    dx,al
  417f79:	jne    0x417f2a
  417f7b:	(bad)  
  417f7c:	pop    edx
  417f7d:	enter  0xd84d,0x3d
  417f81:	jmp    0x417f5f
  417f83:	or     DWORD PTR [edi+0xbe2078],0xffffffe6
  417f8a:	into   
  417f8b:	pop    eax
  417f8c:	pop    ebx
  417f8d:	cld    
  417f8e:	mov    ecx,0xc648bed1
  417f93:	dec    bl
  417f95:	mov    ds:0x9dbcaae,al
  417f9a:	mov    bl,0xd1
  417f9c:	iret   
  417f9d:	into   
  417f9e:	cmc    
  417f9f:	loop   0x417fe1
  417fa1:	cmp    DWORD PTR [edx-0x39],0x3c
  417fa5:	(bad)  
  417fa6:	les    ecx,FWORD PTR [eax]
  417fa8:	xchg   esi,eax
  417fa9:	sbb    DWORD PTR [esp+esi*2],0xbd033aa
  417fb0:	test   BYTE PTR [edi+0x6c],bh
  417fb3:	jle    0x417fbd
  417fb5:	mov    al,ds:0x855cbc58
  417fba:	jb     0x417fce
  417fbc:	mov    DWORD PTR [esi],0x4fb47930
  417fc2:	sub    BYTE PTR [eax],al
  417fc4:	popa   
  417fc5:	ficomp DWORD PTR [ecx]
  417fc7:	xchg   esi,eax
  417fc8:	repz test BYTE PTR [ebp+0x62],ch
  417fcc:	arpl   cx,si
  417fce:	ja     0x418016
  417fd0:	test   eax,0x52bd92bb
  417fd5:	(bad)  
  417fd6:	sub    edx,DWORD PTR [edi+0x7b]
  417fd9:	ds out 0x79,al
  417fdc:	dec    edi
  417fdd:	lahf   
  417fde:	inc    ebp
  417fdf:	adc    BYTE PTR [eax+0x53],cl
  417fe2:	ins    BYTE PTR es:[edi],dx
  417fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fe4:	jnp    0x417ffe
  417fe6:	push   ds
  417fe7:	push   0x21
  417fe9:	jbe    0x418046
  417feb:	loop   0x417fab
  417fed:	dec    eax
  417fee:	dec    eax
  417fef:	loope  0x418021
  417ff1:	jge    0x417f7f
  417ff3:	outs   dx,DWORD PTR ds:[esi]
  417ff4:	cwde   
  417ff5:	jmp    0xf0a0:0x16e8a943
  417ffc:	call   0x1f0b:0x590260b1
  418003:	clc    
  418004:	out    dx,al
  418005:	scas   al,BYTE PTR es:[edi]
  418006:	push   edx
  418007:	xor    DWORD PTR [esp+eax*2+0x20],ebx
  41800b:	retf   0x9bde
  41800e:	cwde   
  41800f:	mov    dl,0x41
  418011:	xchg   ebp,eax
  418012:	jg     0x418009
  418014:	xor    BYTE PTR ds:[edx],bl
  418017:	cmp    DWORD PTR [edi],esi
  418019:	dec    esi
  41801a:	hlt    
  41801b:	xchg   ebp,eax
  41801c:	mov    al,0xa1
  41801e:	dec    esp
  41801f:	mov    bl,0xb6
  418021:	adc    BYTE PTR [eax+0x441a6559],bl
  418027:	stc    
  418028:	inc    ebp
  418029:	std    
  41802a:	and    dh,BYTE PTR [edx]
  41802c:	jne    0x41805e
  41802e:	add    al,0xd4
  418030:	test   BYTE PTR [edx],dl
  418032:	rcr    DWORD PTR [eax+0x30],cl
  418035:	(bad)  
  418036:	push   ecx
  418037:	and    eax,DWORD PTR [ecx+0x66]
  41803a:	cmp    BYTE PTR [ebx-0x3b],dl
  41803d:	and    DWORD PTR [esi-0x53],ebp
  418040:	aaa    
  418041:	pop    edx
  418042:	push   edi
  418043:	mov    edi,DWORD PTR [edx-0x5d34a1ce]
  418049:	mov    dl,0xb0
  41804b:	repnz aas 
  41804d:	repnz fwait
  41804f:	jp     0x4180ac
  418051:	sub    edx,DWORD PTR [edi]
  418053:	mov    ecx,0xa3a1c0c7
  418058:	pop    es
  418059:	leave  
  41805a:	test   dh,dl
  41805c:	test   BYTE PTR [edi+ebp*4-0x2e392418],dl
  418063:	mov    bl,0xc5
  418065:	mov    ch,0xfc
  418067:	and    BYTE PTR [ecx-0x205f3718],al
  41806d:	jae    0x417fef
  41806f:	inc    ecx
  418070:	das    
  418071:	hlt    
  418072:	mov    ecx,0x1d26839e
  418077:	and    BYTE PTR [ebp+0x43685956],al
  41807d:	icebp  
  41807e:	sub    esp,DWORD PTR [ebx]
  418080:	inc    ebp
  418081:	pop    esi
  418082:	pop    edx
  418083:	out    dx,eax
  418084:	xchg   esi,eax
  418085:	xlat   BYTE PTR ds:[ebx]
  418086:	sbb    BYTE PTR [ebx-0x53],dl
  418089:	daa    
  41808a:	ret    
  41808b:	int    0xfd
  41808d:	jne    0x4180e5
  41808f:	lahf   
  418090:	xchg   esp,eax
  418091:	inc    esi
  418092:	cdq    
  418093:	scas   al,BYTE PTR es:[edi]
  418094:	imul   edi,ebx,0x12
  418097:	sbb    eax,0xbec00c9b
  41809c:	sti    
  41809d:	hlt    
  41809e:	ss push 0x5d777922
  4180a4:	ret    0x2d90
  4180a7:	repnz pusha 
  4180a9:	push   ss
  4180aa:	mov    bh,0xf7
  4180ac:	nop
  4180ad:	nop
  4180ae:	mov    bh,dh
  4180b0:	addr16 push edi
  4180b2:	dec    edi
  4180b3:	xchg   esp,eax
  4180b4:	mov    eax,ds:0xa3dd63eb
  4180b9:	mov    dl,0xf7
  4180bb:	test   ebx,0x494998a5
  4180c1:	(bad)  
  4180c2:	mov    ecx,0xa6f7f0e6
  4180c7:	retf   
  4180c8:	xchg   esp,eax
  4180c9:	xor    bh,BYTE PTR [esi]
  4180cb:	cmp    bh,BYTE PTR [edi-0x7c996507]
  4180d1:	add    edi,DWORD PTR [ebx+edx*8+0x64]
  4180d5:	cmp    DWORD PTR [eax],eax
  4180d7:	mov    dh,0x98
  4180d9:	or     DWORD PTR [edx*4-0x5e7a043],eax
  4180e0:	jne    0x418159
  4180e2:	je     0x4180d8
  4180e4:	ror    ebx,1
  4180e6:	dec    eax
  4180e7:	cld    
  4180e8:	push   cs
  4180e9:	shr    ebp,cl
  4180eb:	repz and eax,esi
  4180ee:	and    eax,0xaaf4262f
  4180f3:	addr16 add esi,ebp
  4180f6:	ins    DWORD PTR es:[edi],dx
  4180f7:	push   ebx
  4180f8:	mov    ecx,0xdc235d1a
  4180fd:	pop    ecx
  4180fe:	pop    esp
  4180ff:	jne    0x418126
  418101:	xchg   esp,eax
  418102:	adc    dh,ch
  418104:	retf   
  418105:	and    ch,BYTE PTR [ebp-0x56]
  418108:	push   ecx
  418109:	sbb    BYTE PTR [ebx],ah
  41810b:	jbe    0x418109
  41810d:	lds    ebp,FWORD PTR ds:0x47043a7d
  418113:	sahf   
  418114:	in     eax,dx
  418115:	cmp    al,0x7e
  418117:	rcl    dl,1
  418119:	addr16 push edx
  41811b:	out    dx,al
  41811c:	loopne 0x4180b3
  41811e:	cmp    ecx,DWORD PTR [edi+0x5f]
  418121:	push   cs
  418122:	es out 0x41,al
  418125:	sub    al,0x19
  418127:	fld    QWORD PTR [edi-0x5a]
  41812a:	push   edx
  41812b:	fnstcw WORD PTR gs:[esi+0x6a]
  41812f:	fdivr  DWORD PTR [ebx]
  418131:	repz adc edi,ebp
  418134:	sub    BYTE PTR [ebx+0x2c],dl
  418137:	stos   DWORD PTR es:[edi],eax
  418138:	jge    0x41810d
  41813a:	loope  0x418194
  41813c:	dec    ecx
  41813d:	mov    edx,0x35ec973c
  418142:	or     bl,BYTE PTR [ebx+0x50297870]
  418148:	repz pushf 
  41814a:	daa    
  41814b:	repnz xor eax,0x393c3ce6
  418151:	adc    ecx,0x7ed0ea3
  418157:	mov    ecx,DWORD PTR [edi+0x35]
  41815a:	(bad)  
  41815b:	push   edx
  41815c:	int3   
  41815d:	mov    cs,WORD PTR [eax+esi*8+0x7852b81f]
  418164:	sbb    esp,edx
  418166:	pop    es
  418167:	movq   mm3,mm7
  41816a:	cs xchg ah,bh
  41816d:	add    DWORD PTR ss:[edx+eax*8-0x4413e30c],ebx
  418175:	call   0x7707:0xa2262808
  41817c:	add    BYTE PTR [ebp-0x5b1f732a],cl
  418182:	mov    cl,0xf6
  418184:	mov    ch,0x51
  418186:	sbb    eax,0x721dac5c
  41818b:	shr    DWORD PTR [ecx+0x51],cl
  41818e:	das    
  41818f:	dec    esi
  418190:	mov    edi,0x124f99a3
  418195:	cmp    al,0xf7
  418197:	adc    DWORD PTR [esi-0x6b],0xa6c7dce2
  41819e:	shl    BYTE PTR [ecx+esi*2],cl
  4181a1:	ret    0xab7c
  4181a4:	sub    eax,0xe5441a90
  4181a9:	xor    bl,dl
  4181ab:	xor    esi,DWORD PTR [ebx]
  4181ad:	nop
  4181ae:	and    DWORD PTR [edx-0x53e3a112],0xd2b117d3
  4181b8:	jmp    0xa4ab:0x3fcb6929
  4181bf:	xchg   esi,eax
  4181c0:	aad    0xf1
  4181c2:	mov    eax,0x22b61fac
  4181c7:	inc    ecx
  4181c8:	xchg   esi,eax
  4181c9:	mov    bh,0x9c
  4181cb:	cli    
  4181cc:	mov    edx,DWORD PTR [eax]
  4181ce:	ins    BYTE PTR es:[edi],dx
  4181cf:	inc    DWORD PTR [edi]
  4181d1:	pop    ebp
  4181d2:	sub    al,0xe
  4181d4:	mov    edi,0x15468197
  4181d9:	xlat   BYTE PTR ds:[ebx]
  4181da:	push   ds
  4181db:	mov    edx,0x309517c2
  4181e0:	mov    al,ds:0x2422ab9b
  4181e5:	or     esi,edx
  4181e7:	jecxz  0x418218
  4181e9:	pusha  
  4181ea:	add    DWORD PTR [ecx-0x69],0x84f8a5ad
  4181f1:	ror    dh,0x6
  4181f4:	into   
  4181f5:	push   esi
  4181f6:	scas   al,BYTE PTR es:[edi]
  4181f7:	(bad)  
  4181f8:	xor    DWORD PTR [esi+0x49],esi
  4181fb:	add    esp,DWORD PTR [esi]
  4181fd:	push   esp
  4181fe:	xor    DWORD PTR [edi],esi
  418200:	pop    es
  418201:	jl     0x41824c
  418203:	jne    0x4181f2
  418205:	std    
  418206:	stos   BYTE PTR es:[edi],al
  418207:	and    ebp,DWORD PTR [ebx+ebx*2]
  41820a:	cmp    eax,0xd180433f
  41820f:	adc    BYTE PTR [edx+0x12],0x20
  418213:	push   ss
  418214:	cld    
  418215:	pop    edi
  418216:	xor    ebp,eax
  418218:	pusha  
  418219:	lods   eax,DWORD PTR ds:[esi]
  41821a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41821b:	mov    al,0xa0
  41821d:	xor    al,0x16
  41821f:	xchg   edx,eax
  418220:	(bad)  
  418221:	call   0xb959e2d1
  418226:	xchg   esp,eax
  418227:	inc    eax
  418228:	xchg   DWORD PTR ds:0xce03f3ef,edi
  41822e:	stc    
  41822f:	sbb    DWORD PTR [ebp+0x3],ebx
  418232:	stos   BYTE PTR es:[edi],al
  418233:	nop
  418234:	mov    edi,0x4770f9e3
  418239:	and    edx,DWORD PTR ds:[ecx]
  41823c:	push   0xffffff98
  41823e:	mov    WORD PTR ds:0x72f07277,ds
  418244:	les    esp,FWORD PTR [edi-0x4a]
  418247:	jbe    0x418240
  418249:	pop    edx
  41824a:	punpcklwd mm6,DWORD PTR [edi]
  41824d:	lds    ebx,FWORD PTR [esi-0x7e6c16bc]
  418253:	jmpw   0xd2da
  418257:	xor    dh,bl
  418259:	pop    es
  41825a:	clc    
  41825b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41825c:	inc    eax
  41825d:	ja     0x418230
  41825f:	ins    BYTE PTR es:[edi],dx
  418260:	or     cl,BYTE PTR [ebx]
  418262:	out    0xc3,al
  418264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418265:	jecxz  0x4182bf
  418267:	fwait
  418268:	mov    ?,WORD PTR [esi+ebp*1+0x77]
  41826c:	test   eax,0xd3222f1
  418271:	retf   0xe00
  418274:	sti    
  418275:	mov    ebx,0x69d1aee
  41827a:	mov    dh,0xef
  41827c:	in     eax,dx
  41827d:	jo     0x4182ca
  41827f:	adc    ebx,DWORD PTR [eax]
  418281:	call   0x8921d417
  418286:	mov    ch,0xb6
  418288:	repz aam 0x1e
  41828b:	push   0x146b3bb2
  418290:	fstp   st(7)
  418292:	imul   BYTE PTR [eax+0x8e9d8e5]
  418298:	mov    dh,0x8d
  41829a:	jecxz  0x41829f
  41829c:	jl     0x4182e9
  41829e:	and    bh,al
  4182a0:	mov    al,0x67
  4182a2:	sub    eax,0xb8ed6295
  4182a7:	mov    bh,BYTE PTR [eax]
  4182a9:	mov    al,ds:0xdf295181
  4182ae:	and    al,0x85
  4182b0:	push   ds
  4182b1:	jbe    0x418259
  4182b3:	adc    ebx,DWORD PTR [eax-0x3a]
  4182b6:	call   0x9c5e7480
  4182bb:	retf   
  4182bc:	mov    esi,0xaf3dbc00
  4182c1:	sbb    edx,DWORD PTR [ebp-0x73]
  4182c4:	popa   
  4182c5:	and    edx,esp
  4182c7:	adc    esi,ecx
  4182c9:	and    eax,0x5576056f
  4182ce:	jo     0x41827e
  4182d0:	xchg   DWORD PTR [ebx+0x4b1c3a97],edx
  4182d6:	jl     0x41833a
  4182d8:	fwait
  4182d9:	pop    ecx
  4182da:	add    DWORD PTR [edi-0x26],eax
  4182dd:	xchg   DWORD PTR [esi],eax
  4182df:	(bad)  
  4182e0:	loopne 0x418270
  4182e2:	jb     0x418286
  4182e4:	fwait
  4182e5:	pop    ebx
  4182e6:	mov    WORD PTR [eax-0x45bedab4],ds
  4182ec:	mov    dh,al
  4182ee:	xchg   BYTE PTR [ebp-0x53],ch
  4182f1:	fdivr  QWORD PTR [edi+0x3c25287d]
  4182f7:	int    0xd6
  4182f9:	(bad)  
  4182fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182fb:	adc    BYTE PTR [edx+0x66],dl
  4182fe:	jno    0x418353
  418300:	jns    0x4182be
  418302:	loop   0x418318
  418304:	dec    eax
  418305:	or     edx,DWORD PTR [ebx+0x62aeb0c2]
  41830b:	jl     0x41835a
  41830d:	shl    dh,1
  41830f:	jl     0x41837e
  418311:	xchg   bh,ch
  418313:	jae    0x418298
  418315:	rcr    cl,0x17
  418318:	inc    ecx
  418319:	xchg   ebp,eax
  41831a:	loop   0x4182d9
  41831c:	out    dx,al
  41831d:	popf   
  41831e:	aaa    
  41831f:	pop    es
  418320:	pop    ds
  418321:	dec    ebx
  418322:	sar    BYTE PTR [edx],cl
  418324:	int3   
  418325:	test   BYTE PTR [ebx+0x30],cl
  418328:	sbb    DWORD PTR [ecx+0x31],esi
  41832b:	sub    DWORD PTR [esi],ecx
  41832d:	nop
  41832e:	fisttp DWORD PTR [edi-0x74]
  418331:	inc    edi
  418332:	push   esp
  418333:	jge    0x4183ab
  418335:	leave  
  418336:	loop   0x41838f
  418338:	(bad)  
  418339:	add    DWORD PTR ds:[ebx+ebx*8],edi
  41833d:	enter  0xee39,0xfa
  418341:	pop    esp
  418342:	jp     0x418324
  418344:	mov    BYTE PTR [edi],dl
  418346:	xor    dl,ah
  418348:	shl    DWORD PTR [ebx+eiz*2-0x23],1
  41834c:	xor    eax,0xb09512d2
  418351:	push   es
  418352:	shr    bl,cl
  418354:	cld    
  418355:	jmp    0xa4e3:0x98dac605
  41835c:	out    0x30,al
  41835e:	push   0x6e
  418360:	ret    
  418361:	cmc    
  418362:	inc    ecx
  418363:	(bad)  
  418365:	mov    esp,0xc9669f42
  41836a:	rcl    DWORD PTR [ecx],0xa3
  41836d:	fmul   QWORD PTR [ebx+0x2f]
  418370:	out    0x7c,al
  418372:	stos   BYTE PTR es:[edi],al
  418373:	sti    
  418374:	adc    BYTE PTR [ebp+0x32],0xea
  418378:	fwait
  418379:	add    esi,DWORD PTR [esi]
  41837b:	out    dx,al
  41837c:	mov    ecx,0x20ec1d4e
  418381:	in     al,0xcd
  418383:	inc    edi
  418384:	leave  
  418385:	in     al,0x20
  418387:	mov    bh,0xa2
  418389:	inc    edi
  41838a:	jne    0x418391
  41838c:	fucom  st(0)
  41838e:	adc    eax,0x3c758a80
  418393:	dec    esp
  418394:	jmp    0xb8a49790
  418399:	jbe    0x4183ce
  41839b:	pop    eax
  41839c:	mov    al,ds:0x47d82350
  4183a1:	fisubr DWORD PTR [ebx+0x2932aeba]
  4183a7:	mov    al,ds:0xa94c6ad0
  4183ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183ad:	cmp    eax,0x3e964e0d
  4183b2:	rcl    BYTE PTR [edi+ecx*8-0x6f85b95e],cl
  4183b9:	mov    ebx,0xc8abb8d6
  4183be:	call   0xe3b09705
  4183c3:	hlt    
  4183c4:	fldcw  WORD PTR gs:[edx-0x10ff1156]
  4183cb:	popf   
  4183cc:	xor    al,0xba
  4183ce:	inc    edi
  4183cf:	popa   
  4183d0:	call   0x9214:0x9890cd7f
  4183d7:	jp     0x418430
  4183d9:	aaa    
  4183da:	aas    
  4183db:	sub    BYTE PTR [eax+0x48],bl
  4183de:	scas   al,BYTE PTR es:[edi]
  4183df:	fstp   DWORD PTR [esi]
  4183e1:	outs   dx,BYTE PTR ds:[esi]
  4183e2:	(bad)  
  4183e3:	aam    0xab
  4183e5:	mov    DWORD PTR [ecx-0x129b233c],esp
  4183eb:	jmp    0xa056d10a
  4183f0:	nop
  4183f1:	repnz std 
  4183f3:	call   0x5ca6deae
  4183f8:	push   ecx
  4183f9:	pop    ebp
  4183fa:	sbb    DWORD PTR [eax-0x2f],eax
  4183fd:	xchg   ebx,eax
  4183fe:	xlat   BYTE PTR ds:[ebx]
  4183ff:	push   0xc2b0dc46
  418404:	aad    0xb9
  418406:	loopne 0x418415
  418408:	arpl   WORD PTR [ecx+0x40],dx
  41840b:	fwait
  41840c:	sub    esp,edi
  41840e:	fisttp QWORD PTR ds:0x30c7d
  418414:	inc    eax
  418415:	adc    al,0x27
  418417:	(bad)
  41841a:	test   al,0x88
  41841c:	push   es
  41841d:	pusha  
  41841e:	clc    
  41841f:	and    al,0xa1
  418421:	or     edx,ebx
  418423:	and    al,0x55
  418425:	push   0xf6545fe1
  41842a:	aam    0x77
  41842c:	add    ecx,esi
  41842e:	int3   
  41842f:	retf   0xd925
  418432:	jl     0x418473
  418434:	repz sub esi,DWORD PTR [ecx+0x3d]
  418438:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418439:	push   ecx
  41843a:	inc    esi
  41843b:	pop    ebp
  41843c:	pushf  
  41843d:	push   ebx
  41843e:	mov    bh,BYTE PTR [edi]
  418440:	shl    BYTE PTR [ebp+0x63],1
  418443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418444:	jle    0x4183fe
  418446:	push   cs
  418447:	sub    DWORD PTR [ebp-0x47],esi
  41844a:	sbb    eax,0x5e7449f3
  41844f:	repz jnp 0x4184ae
  418452:	lods   eax,DWORD PTR ds:[esi]
  418453:	pop    ecx
  418454:	jecxz  0x418455
  418456:	repnz pop ss
  418458:	aam    0x93
  41845a:	scas   eax,DWORD PTR es:[edi]
  41845b:	outs   dx,BYTE PTR ds:[esi]
  41845c:	aam    0x1d
  41845e:	dec    eax
  41845f:	pop    ecx
  418460:	sub    DWORD PTR [edx],esi
  418462:	out    dx,al
  418463:	cmp    eax,0x6146cf95
  418468:	adc    eax,DWORD PTR [ecx-0x2a804d]
  41846e:	loopne 0x418407
  418470:	mov    edi,0x2cf45a96
  418475:	and    BYTE PTR [edx*8-0x61a5f530],bh
  41847c:	jl     0x418432
  41847e:	mov    eax,ds:0x942db3c4
  418483:	out    dx,eax
  418484:	aad    0x57
  418486:	bound  ecx,QWORD PTR [ebx+0x415c0a64]
  41848c:	push   0x2a
  41848e:	test   eax,0xbc6a25b2
  418493:	gs fs (bad) 
  418496:	dec    ebx
  418497:	repnz adc dh,cl
  41849a:	inc    ebx
  41849b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41849c:	bswap  esi
  41849e:	int3   
  41849f:	fist   DWORD PTR [edx-0x74554ab1]
  4184a5:	mov    al,0xb9
  4184a7:	xchg   DWORD PTR [ebx],edi
  4184a9:	xchg   edi,esi
  4184ab:	jmp    0xbac8:0xeab2c91f
  4184b2:	inc    esp
  4184b3:	or     eax,DWORD PTR [eax+0x38a2a81c]
  4184b9:	enter  0xd6a7,0xdf
  4184bd:	add    al,0x63
  4184bf:	jno    0x418480
  4184c1:	push   eax
  4184c2:	bound  edi,QWORD PTR [edi-0x7a]
  4184c5:	test   edi,edx
  4184c7:	sbb    al,BYTE PTR [edi+0x6e]
  4184ca:	push   ds
  4184cb:	test   al,0x87
  4184cd:	clc    
  4184ce:	shl    DWORD PTR [esi-0x19],1
  4184d1:	retf   0x6efc
  4184d4:	adc    al,0x98
  4184d6:	mov    ch,0xf7
  4184d8:	ins    DWORD PTR es:[edi],dx
  4184d9:	nop
  4184da:	push   cs
  4184db:	sti    
  4184dc:	xchg   dh,bl
  4184de:	jns    0x41855d
  4184e0:	fsubr  DWORD PTR [edi]
  4184e2:	adc    al,0x59
  4184e4:	xchg   edx,eax
  4184e5:	fimul  DWORD PTR [edi+0x6f]
  4184e8:	fs (bad) 
  4184ea:	icebp  
  4184eb:	xor    BYTE PTR [ebx],dl
  4184ed:	mov    edi,0x4e3b79dc
  4184f2:	dec    ebx
  4184f3:	arpl   WORD PTR [ecx],bp
  4184f5:	mov    edx,0x4519424d
  4184fa:	das    
  4184fb:	or     ch,BYTE PTR [ebx+ebx*4-0x72]
  4184ff:	mov    al,ds:0xa7d101a0
  418504:	push   ebp
  418505:	gs fcmove st,st(4)
  418508:	xchg   BYTE PTR [ebx-0x144538ae],dl
  41850e:	add    DWORD PTR [edi-0x4],esp
  418511:	cmp    DWORD PTR [edi-0x46911632],edi
  418517:	mov    edi,0xdd01d6fa
  41851c:	pop    ebx
  41851d:	stos   DWORD PTR es:[edi],eax
  41851e:	clc    
  41851f:	outs   dx,DWORD PTR ds:[esi]
  418520:	jmp    0x653aaec3
  418525:	mov    bh,0x1f
  418527:	mov    dl,0xb6
  418529:	xchg   esi,eax
  41852a:	rol    ecx,1
  41852c:	out    0xa6,al
  41852e:	aad    0x2a
  418530:	call   0x7e065013
  418535:	and    eax,0x88010ab3
  41853a:	pushf  
  41853b:	out    0x6,eax
  41853d:	xchg   DWORD PTR [esi],ecx
  41853f:	in     eax,0x29
  418541:	or     DWORD PTR [ebx+0x133855a1],esp
  418547:	xor    al,0x8d
  418549:	jecxz  0x4184f3
  41854b:	inc    edx
  41854c:	test   esp,0x97ceee46
  418552:	addr16 retw 
  418555:	xor    DWORD PTR ds:0xaf9a96c,ebp
  41855b:	retf   
  41855c:	sar    BYTE PTR ds:0xa7b8b8b8,1
  418562:	in     eax,0x1e
  418564:	mov    gs,WORD PTR [esi-0x4ab22cac]
  41856a:	dec    esi
  41856b:	sub    DWORD PTR [edx+0x6cad323a],0xb5ce848d
  418575:	push   edx
  418576:	dec    esi
  418577:	les    esi,FWORD PTR [esi-0x682a4e24]
  41857d:	adc    al,0x38
  41857f:	dec    edx
  418580:	scas   eax,DWORD PTR es:[edi]
  418581:	push   eax
  418582:	cli    
  418583:	dec    ebx
  418584:	scas   al,BYTE PTR es:[edi]
  418585:	mov    cl,0x3e
  418587:	push   0xffffffdf
  418589:	sub    eax,0xf003225
  41858e:	mov    esp,0xa2290a5
  418593:	pushf  
  418594:	ror    edi,0xb1
  418597:	mov    cl,0x1
  418599:	xchg   BYTE PTR [ebx+0x7ef2983a],ah
  41859f:	dec    ebx
  4185a0:	pop    ecx
  4185a1:	mov    ds:0x2d1bc3e,al
  4185a6:	ret    0x3bd6
  4185a9:	sbb    ebx,ecx
  4185ab:	and    DWORD PTR [esi-0xce0db26],0x61
  4185b2:	dec    esp
  4185b3:	cdq    
  4185b4:	pop    ebp
  4185b5:	inc    esi
  4185b6:	cwde   
  4185b7:	push   ds
  4185b8:	mov    edi,0xb68d80fd
  4185bd:	add    DWORD PTR [edi-0x6f],eax
  4185c0:	ret    0x17c8
  4185c3:	mov    ch,0x6c
  4185c5:	xor    edx,ecx
  4185c7:	xchg   esi,eax
  4185c8:	xor    BYTE PTR ds:0x1657b63f,ah
  4185ce:	mov    bl,0x56
  4185d0:	jle    0x418603
  4185d2:	popf   
  4185d3:	mov    bh,0x1f
  4185d5:	addr16 pop edx
  4185d7:	dec    ebp
  4185d8:	cs or  eax,0xb631048
  4185de:	push   esi
  4185df:	test   BYTE PTR [ebp-0x4165c999],bh
  4185e5:	add    DWORD PTR [ebx+0x6],edx
  4185e8:	retf   0x79c1
  4185eb:	sahf   
  4185ec:	and    ch,cl
  4185ee:	push   cs
  4185ef:	cld    
  4185f0:	nop
  4185f1:	mov    dl,0xef
  4185f3:	pop    ebx
  4185f4:	push   edx
  4185f5:	pushf  
  4185f6:	mov    cl,0xbd
  4185f8:	imul   ecx,DWORD PTR [edx+0x35d5cdc1],0x23
  4185ff:	mov    dh,0x39
  418601:	inc    edi
  418602:	mov    dh,0xdc
  418604:	mov    eax,ds:0xd3c0683c
  418609:	cli    
  41860a:	out    0xed,al
  41860c:	daa    
  41860d:	iret   
  41860e:	loopne 0x418629
  418610:	stc    
  418611:	xchg   esp,eax
  418612:	mov    cl,0xf7
  418614:	sar    BYTE PTR [eax+0x37c5a5f0],cl
  41861a:	lahf   
  41861b:	push   ebx
  41861c:	addr16 clc 
  41861e:	test   DWORD PTR [esi+0x2],0x839fc6f5
  418625:	out    dx,eax
  418626:	mov    eax,eax
  418628:	int    0x66
  41862a:	xor    dh,BYTE PTR [edx-0x3c]
  41862d:	cmp    edx,edi
  41862f:	outs   dx,DWORD PTR ds:[esi]
  418630:	push   cs
  418631:	jge    0x418661
  418633:	jnp    0x418654
  418635:	cmp    al,0x60
  418637:	push   es
  418638:	push   ecx
  418639:	mov    bl,0xa5
  41863b:	not    DWORD PTR [edi+eax*4+0x3ae80559]
  418642:	cs sbb al,0x64
  418645:	imul   bl
  418647:	out    dx,al
  418648:	shr    BYTE PTR [edi-0x38],1
  41864b:	mov    bh,0x8a
  41864d:	pop    ebp
  41864e:	push   0x5aa48691
  418653:	test   edx,ecx
  418655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418656:	out    0x34,al
  418658:	jae    0x418602
  41865a:	arpl   dx,sp
  41865c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41865d:	ds das 
  41865f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418661:	loope  0x4186ca
  418663:	mov    ch,0xb0
  418665:	(bad)  
  418667:	dec    esi
  418668:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418669:	call   0xf9382c95
  41866e:	retf   
  41866f:	je     0x418628
  418671:	mov    ebx,0x2b074447
  418676:	lods   al,BYTE PTR ds:[esi]
  418677:	shr    BYTE PTR [ebx-0x64e00ea2],1
  41867d:	dec    ecx
  41867e:	addr16 cli 
  418680:	in     al,0x56
  418682:	aaa    
  418683:	retf   0xea8b
  418686:	(bad)
  418689:	test   DWORD PTR [ebx-0x5b],esi
  41868c:	les    edi,FWORD PTR [ebp-0x50615dbe]
  418692:	and    bl,BYTE PTR [ecx]
  418694:	sub    al,0x3b
  418696:	pop    edi
  418697:	pop    es
  418698:	jnp    0x418671
  41869a:	shl    DWORD PTR [ebp-0x16],cl
  41869d:	jecxz  0x418639
  41869f:	scas   al,BYTE PTR es:[edi]
  4186a0:	hlt    
  4186a1:	sub    eax,0x6997c5e0
  4186a6:	fisub  WORD PTR [edx-0x2a921a39]
  4186ac:	stc    
  4186ad:	jae    0x4186cd
  4186af:	rcl    dh,0xa5
  4186b2:	test   eax,0x11e51ae8
  4186b7:	mov    edi,0xa8fc3851
  4186bc:	mov    bl,0x62
  4186be:	fadd   QWORD PTR [ebp*4+0x29642198]
  4186c5:	pop    ebp
  4186c6:	and    eax,0x7f3f8059
  4186cb:	push   esp
  4186cc:	cli    
  4186cd:	stc    
  4186ce:	sub    eax,0xabc8afa5
  4186d3:	push   ss
  4186d4:	sti    
  4186d5:	rol    DWORD PTR [ebx],cl
  4186d7:	mov    DWORD PTR [ebx+eiz*4],ebp
  4186da:	xor    cl,BYTE PTR ds:0x7e6a72ac
  4186e0:	push   0x44
  4186e2:	xor    BYTE PTR ds:[eax-0x49],ch
  4186e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186e7:	dec    esi
  4186e8:	jno    0x4186f7
  4186ea:	push   ebx
  4186eb:	xchg   ebp,eax
  4186ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186ed:	xor    al,0x3
  4186ef:	stos   DWORD PTR es:[edi],eax
  4186f0:	rcl    DWORD PTR [esi-0x69],1
  4186f3:	dec    edi
  4186f4:	adc    BYTE PTR [eax+0x3d585671],cl
  4186fa:	out    dx,al
  4186fb:	push   es
  4186fc:	retf   0xcee0
  4186ff:	cmp    cl,BYTE PTR ds:[edi+0x11725c42]
  418706:	(bad)  
  418707:	jmp    FWORD PTR ss:[esi]
  41870a:	(bad)  
  41870b:	enter  0x84ee,0xad
  41870f:	outs   dx,DWORD PTR ds:[esi]
  418710:	out    dx,eax
  418711:	sub    bh,BYTE PTR [ebp-0x3]
  418714:	call   0xfaa:0x9e4faaed
  41871b:	xor    DWORD PTR [eax],eax
  41871d:	sub    al,bh
  41871f:	aam    0x99
  418721:	stc    
  418722:	ror    BYTE PTR [ebx+0x11],0x1f
  418726:	scas   al,BYTE PTR es:[edi]
  418727:	pop    ecx
  418728:	pop    edi
  418729:	jmp    0x491c:0xa4de0227
  418730:	and    ch,BYTE PTR ds:0xe9445afc
  418736:	lock and dl,bh
  418739:	inc    edx
  41873a:	imul   esp,DWORD PTR [ebp-0x5be69b31],0x898bb2d4
  418744:	(bad)
  418749:	cs jns 0x41874b
  41874c:	pop    esi
  41874d:	jmp    0x418718
  41874f:	fmul   DWORD PTR [edi-0x55]
  418752:	xlat   BYTE PTR ds:[ebx]
  418753:	sbb    BYTE PTR [eax+0x25d5f17c],bl
  418759:	xchg   edi,eax
  41875a:	test   DWORD PTR [eax-0x60],ecx
  41875d:	jb     0x41879d
  41875f:	mov    dh,0x90
  418761:	sti    
  418762:	jle    0x418786
  418764:	mov    edx,0x492c663e
  418769:	les    ebx,FWORD PTR [ecx+0x14d1465b]
  41876f:	int3   
  418770:	cwde   
  418771:	daa    
  418772:	cmp    al,0x10
  418774:	retf   0xb2a1
  418777:	hlt    
  418778:	ror    DWORD PTR [eax+0x43],0xb4
  41877c:	or     ah,BYTE PTR [edx+0x4923e9f8]
  418782:	jb     0x418798
  418784:	pop    edi
  418785:	mov    ebp,0x4f2b1613
  41878a:	push   0x5f
  41878c:	add    BYTE PTR [edi],0x1d
  41878f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418790:	cli    
  418791:	add    al,0x96
  418793:	xchg   esi,eax
  418794:	sbb    eax,0x3922c3dc
  418799:	test   DWORD PTR [esi+0x2fd2bbde],ebx
  41879f:	cmp    eax,0x73b5e40b
  4187a4:	popf   
  4187a5:	in     al,dx
  4187a6:	clc    
  4187a7:	sahf   
  4187a8:	fwait
  4187a9:	add    eax,0x528354ff
  4187ae:	push   esp
  4187af:	dec    ecx
  4187b0:	popf   
  4187b1:	mov    cl,0x95
  4187b3:	rol    cl,cl
  4187b5:	xor    bh,ch
  4187b7:	sar    dh,0x37
  4187ba:	dec    edx
  4187bb:	out    dx,eax
  4187bc:	iret   
  4187bd:	mov    ecx,0x9ef1917f
  4187c2:	popf   
  4187c3:	mov    bh,0xd1
  4187c5:	jmp    0x3ed7:0xdab2eb7d
  4187cc:	mov    ecx,0xeda57d05
  4187d1:	push   0x2155c09a
  4187d6:	retf   
  4187d7:	mov    edi,0x53c47ec2
  4187dc:	sub    DWORD PTR [ebp+esi*8+0x5b423b8f],ebx
  4187e3:	in     eax,0x36
  4187e5:	sub    edi,DWORD PTR [ecx]
  4187e7:	add    al,BYTE PTR [ebp-0x4f668b8f]
  4187ed:	enter  0xddee,0xa7
  4187f1:	mov    bl,0x59
  4187f3:	rcr    BYTE PTR [ebp+0x3b],1
  4187f6:	mov    al,0x59
  4187f8:	repz mov bh,ch
  4187fb:	dec    ebx
  4187fc:	(bad)  [edx]
  4187fe:	jecxz  0x418801
  418800:	push   edx
  418801:	sbb    BYTE PTR [ecx-0x48],dh
  418804:	repz xchg edi,eax
  418806:	fisttp DWORD PTR [ebx+edx*1+0x10]
  41880a:	fist   WORD PTR [edi]
  41880c:	push   es
  41880d:	sar    BYTE PTR [eax-0x41a7cf71],cl
  418813:	mov    ebp,0xbc5d5a09
  418818:	scas   al,BYTE PTR es:[edi]
  418819:	loop   0x4187aa
  41881b:	mov    BYTE PTR [edx+esi*8],al
  41881e:	push   ds
  41881f:	xor    al,al
  418821:	inc    ecx
  418822:	and    BYTE PTR [ebp+0x189f68d9],dh
  418828:	icebp  
  418829:	push   0xffffff93
  41882b:	frstor [edx]
  41882d:	adc    esi,ecx
  41882f:	(bad)
  418832:	push   ds
  418833:	retf   0x6174
  418836:	cmp    al,0x42
  418838:	icebp  
  418839:	inc    eax
  41883a:	or     BYTE PTR [esi-0x3b],ch
  41883d:	xor    eax,0xa235e328
  418842:	mov    dh,0xd0
  418844:	repnz std 
  418846:	xor    edi,DWORD PTR [ebx-0x257ef2d0]
  41884c:	leave  
  41884d:	das    
  41884e:	cmp    BYTE PTR [edi],dl
  418850:	stos   DWORD PTR es:[edi],eax
  418851:	mov    DWORD PTR [edx-0x7e0a8c84],ebp
  418857:	aas    
  418858:	popf   
  418859:	xchg   DWORD PTR [ebp-0x77],eax
  41885c:	push   ds
  41885d:	cmp    dh,bl
  41885f:	sub    eax,0x386cfbf
  418864:	and    eax,0x9ce0a3dd
  418869:	dec    edx
  41886a:	leave  
  41886b:	pop    ss
  41886c:	push   esi
  41886d:	data16 and al,0xac
  418870:	push   ebx
  418871:	xchg   edi,eax
  418872:	sbb    BYTE PTR [esi],0xcb
  418875:	repnz mov eax,ds:0x27b696a3
  41887b:	push   0x9a5aa12d
  418880:	cmp    BYTE PTR [ebx],bh
  418882:	adc    bl,BYTE PTR [eax]
  418884:	mov    ds:0x8ce5d74f,al
  418889:	xor    eax,0xeee1e9f4
  41888e:	inc    ebp
  41888f:	xor    DWORD PTR [esi+eax*1+0x65],ebx
  418893:	in     al,0xb7
  418895:	jg     0x4188b8
  418897:	dec    ebp
  418898:	xchg   esi,eax
  418899:	sbb    ah,BYTE PTR [edx]
  41889b:	push   ss
  41889c:	(bad)  
  41889d:	aad    0x6
  41889f:	fistp  DWORD PTR [ebx+0x17]
  4188a2:	mov    ds,esi
  4188a4:	stc    
  4188a5:	mov    bl,0xd6
  4188a7:	jne    0x4188f4
  4188a9:	out    dx,eax
  4188aa:	test   edx,eax
  4188ac:	inc    ecx
  4188ad:	mov    dl,0x16
  4188af:	pop    ecx
  4188b0:	mov    al,ds:0xc43eeb9f
  4188b5:	push   esp
  4188b6:	inc    edi
  4188b7:	inc    esp
  4188b8:	shl    DWORD PTR [ebp-0x58],cl
  4188bb:	test   al,al
  4188bd:	push   0xffffffe6
  4188bf:	and    BYTE PTR [esi+0x29],ah
  4188c2:	scas   al,BYTE PTR es:[edi]
  4188c3:	dec    edx
  4188c4:	pop    ecx
  4188c5:	out    dx,eax
  4188c6:	cmp    al,0x99
  4188c8:	xchg   esp,eax
  4188c9:	ret    
  4188ca:	jmp    0x4f5b:0xadaaaa99
  4188d1:	neg    DWORD PTR [ebp+0x2f0b940d]
  4188d7:	xchg   ebp,eax
  4188d8:	(bad)  
  4188d9:	fimul  DWORD PTR [edi]
  4188db:	jmp    0x1c74:0xddb510af
  4188e2:	mov    edx,0xf9fa1880
  4188e7:	xchg   BYTE PTR [ecx],dh
  4188e9:	pusha  
  4188ea:	push   ecx
  4188eb:	adc    bh,ch
  4188ed:	jnp    0x41888c
  4188ef:	out    dx,al
  4188f0:	rcr    cl,0xa3
  4188f3:	(bad)  
  4188f4:	mov    bh,0xbc
  4188f6:	cmc    
  4188f7:	lahf   
  4188f8:	adc    eax,0xb9e9565a
  4188fd:	loop   0x41890d
  4188ff:	and    eax,0xd2d2eba2
  418904:	sbb    BYTE PTR [eax-0x41ee1247],bh
  41890a:	mov    ds:0x60da8798,al
  41890f:	cmp    al,0x6b
  418911:	pop    ebx
  418912:	mov    DWORD PTR [eax],0xb14f661c
  418918:	inc    ebx
  418919:	(bad)  
  41891a:	fisttp QWORD PTR [eax]
  41891c:	fsub   QWORD PTR [ecx+0x2ca42e7]
  418922:	xchg   ecx,edx
  418924:	shl    BYTE PTR [edi+0x503ca2b5],cl
  41892a:	retf   0xb68d
  41892d:	imul   ebx,DWORD PTR [ebp-0x6a],0xffffff83
  418931:	push   0xffffffcf
  418933:	repnz xchg esi,eax
  418935:	jmp    0x73a34b80
  41893a:	sar    BYTE PTR [esi+0x21],1
  41893d:	sub    DWORD PTR [ebp+0x53],ebp
  418940:	cmp    eax,0xb404c4f7
  418945:	pop    eax
  418946:	cmp    BYTE PTR [ecx+0x47f15c7],0xc7
  41894d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41894e:	outs   dx,DWORD PTR ds:[esi]
  41894f:	js     0x418915
  418951:	and    al,0x6f
  418953:	pusha  
  418954:	push   edi
  418955:	lods   al,BYTE PTR ds:[esi]
  418956:	(bad)  
  418957:	int3   
  418958:	enter  0xf224,0x83
  41895c:	neg    bh
  41895e:	ret    
  41895f:	in     eax,dx
  418960:	mov    BYTE PTR [ebp+0x22],dl
  418963:	jmp    0x47d3:0xf2467d41
  41896a:	shr    DWORD PTR [edx-0x355a8621],1
  418970:	rcl    DWORD PTR [edx+ebx*4],1
  418973:	xor    eax,0xa1621faa
  418978:	ja     0x41899c
  41897a:	adc    eax,DWORD PTR [eax+edx*8]
  41897d:	mov    ds:0xf49312b9,al
  418982:	sbb    BYTE PTR [ebx-0x2e87c0e3],dl
  418988:	adc    BYTE PTR [edi],ah
  41898a:	jae    0x4189c0
  41898c:	fs stos DWORD PTR es:[edi],eax
  41898e:	jbe    0x418924
  418990:	imul   esi,DWORD PTR [edi-0x6e],0x9f9e3f7d
  418997:	xchg   BYTE PTR [esp+esi*8],dl
  41899a:	xchg   ecx,eax
  41899b:	call   0x1950:0x836b5166
  4189a2:	retf   0x7336
  4189a5:	sbb    BYTE PTR [esi+esi*1],bl
  4189a8:	and    DWORD PTR [edx+0x48e92782],ecx
  4189ae:	jmp    0x4502:0xd80bf5e6
  4189b5:	hlt    
  4189b6:	sub    DWORD PTR [ebx-0x15ce46eb],esp
  4189bc:	pop    esi
  4189bd:	mov    al,0x2a
  4189bf:	in     eax,dx
  4189c0:	adc    DWORD PTR [ebx+0x3289eb46],ecx
  4189c6:	fs mov edi,0xad077b00
  4189cc:	cld    
  4189cd:	bound  eax,QWORD PTR ds:0x603bd8eb
  4189d3:	cmp    dl,ch
  4189d5:	adc    eax,0x2197ebe5
  4189da:	mov    ds:0xa21c7adc,al
  4189df:	sti    
  4189e0:	or     bh,cl
  4189e2:	loop   0x4189b5
  4189e4:	lods   eax,DWORD PTR ds:[esi]
  4189e5:	shl    DWORD PTR [ecx-0x3ed922a6],cl
  4189eb:	sub    DWORD PTR [edi+0x124befa3],edx
  4189f1:	dec    ebp
  4189f2:	dec    esi
  4189f3:	xor    BYTE PTR [eax],dh
  4189f5:	mov    esp,0xf05bada3
  4189fa:	jmp    0x83d3cef3
  4189ff:	dec    ebp
  418a00:	nop
  418a01:	hlt    
  418a02:	js     0x418a13
  418a04:	mov    edx,0x14b2d174
  418a09:	mov    cs,WORD PTR [esp+eiz*2-0x78537860]
  418a10:	stos   BYTE PTR es:[edi],al
  418a11:	repz push esp
  418a13:	aam    0x7c
  418a15:	ret    0xc387
  418a18:	add    eax,0xb97e0798
  418a1d:	sbb    DWORD PTR [ebp-0x5a],ecx
  418a20:	mov    eax,DWORD PTR [ebp+0xc]
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	mov    ds:0x3971e610,al
  418a43:	pop    ds
  418a44:	popa   
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	add    BYTE PTR [ecx],ch
  418a4c:	ins    DWORD PTR es:[edi],dx
  418a4d:	jecxz  0x4189d0
  418a4f:	(bad)  
  418a50:	nop
  418a51:	rol    BYTE PTR [edx+0x43694dce],1
  418a57:	leave  
  418a58:	sbb    eax,0x6f2a31b1
  418a5d:	sbb    al,0xbe
  418a5f:	das    
  418a60:	in     al,dx
  418a61:	in     al,0xb1
  418a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a64:	les    esi,FWORD PTR [eax+0x37bf46a2]
  418a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a6b:	xchg   BYTE PTR [ebx+0x43],dl
  418a6e:	je     0x418a88
  418a70:	jae    0x418a11
  418a72:	jae    0x418a61
  418a74:	mov    bl,0x4f
  418a76:	retf   0x280d
  418a79:	or     eax,0x2dd2d34b
  418a7e:	pop    esp
  418a7f:	xchg   esp,eax
  418a80:	xor    edx,esi
  418a82:	and    eax,0x3baa7dd1
  418a87:	in     al,0xd
  418a89:	xor    ebp,DWORD PTR [edi+0x2584c851]
  418a8f:	cld    
  418a90:	aad    0xdd
  418a92:	retf   
  418a93:	call   0xd2f6:0xd5c4f919
  418a9a:	cmp    DWORD PTR [eax+0x3a],eax
  418a9d:	les    ebx,FWORD PTR [eax-0x46d74278]
  418aa3:	xor    bh,BYTE PTR [edx]
  418aa5:	xor    BYTE PTR ds:0xcb4eb314,al
  418aab:	mov    al,ds:0x235c18be
  418ab0:	clc    
  418ab1:	call   0xf593:0x1cc6687e
  418ab8:	imul   ebp,DWORD PTR [esi-0x54071a35],0xc605ac10
  418ac2:	cmp    BYTE PTR es:[ebx-0x79],0xa2
  418ac7:	cmp    esi,ebp
  418ac9:	mov    ds,WORD PTR [esi]
  418acb:	xor    al,0xf9
  418acd:	je     0x418ad2
  418acf:	inc    ebx
  418ad0:	mov    cl,0xf8
  418ad2:	dec    edi
  418ad3:	adc    bl,BYTE PTR [ecx+edx*2+0x4f5d4a26]
  418ada:	sahf   
  418adb:	or     al,BYTE PTR [esp+ecx*1+0x5cf4661e]
  418ae2:	or     al,bl
  418ae4:	es sub dh,al
  418ae7:	pslld  mm1,QWORD PTR [ebx]
  418aea:	aas    
  418aeb:	(bad)  
  418aed:	or     eax,0xdc79e3aa
  418af2:	add    eax,0x46283
  418af7:	xchg   edx,eax
  418af8:	cmp    al,0xce
  418afa:	ret    0xa89e
  418afd:	dec    esi
  418afe:	xchg   edi,eax
  418aff:	pop    ecx
  418b00:	jge    0x418b19
  418b02:	xchg   esp,eax
  418b03:	push   ecx
  418b04:	nop    esp
  418b07:	xor    edx,DWORD PTR [ecx+eax*2]
  418b0a:	xor    BYTE PTR [edx-0x71],ch
  418b0d:	addr16 push 0xad271620
  418b13:	xchg   DWORD PTR [ebp+0x7a],ebx
  418b16:	(bad)  
  418b17:	mov    ebx,DWORD PTR [ecx]
  418b19:	adc    BYTE PTR ds:0x5e26fb87,dh
  418b1f:	mov    eax,ds:0x91fa97e2
  418b24:	inc    edx
  418b25:	ret    0xca95
  418b28:	sub    ch,bl
  418b2a:	ins    DWORD PTR es:[edi],dx
  418b2b:	lock movs BYTE PTR es:[di],BYTE PTR ds:[si]
  418b2e:	pop    esi
  418b2f:	mov    cl,0x53
  418b31:	lea    ebp,[eax]
  418b33:	sbb    bl,dl
  418b35:	inc    esp
  418b36:	sub    BYTE PTR [ebx],cl
  418b38:	jo     0x418b01
  418b3a:	leave  
  418b3b:	lds    edx,FWORD PTR [ecx+0x45343098]
  418b41:	push   ds
  418b42:	scas   al,BYTE PTR es:[edi]
  418b43:	sub    DWORD PTR cs:[edi+0x6d91144a],ebp
  418b4a:	and    dh,BYTE PTR [eax-0x178a432c]
  418b50:	xor    ebx,esp
  418b52:	fs jg  0x418bb5
  418b55:	push   ebp
  418b56:	icebp  
  418b57:	aam    0xe6
  418b59:	call   0x80952dde
  418b5e:	fdiv   st,st(6)
  418b60:	xchg   DWORD PTR [eax],eax
  418b62:	outs   dx,DWORD PTR ds:[esi]
  418b63:	mov    eax,ds:0x57df10e9
  418b68:	ret    0x9559
  418b6b:	aaa    
  418b6c:	sti    
  418b6d:	fwait
  418b6e:	cmp    al,0x53
  418b70:	mov    bl,dl
  418b72:	in     al,dx
  418b73:	mov    ebp,edi
  418b75:	and    DWORD PTR [edi+0x4107032d],0x86e1ad51
  418b7f:	mov    cs,WORD PTR [esi-0x3cebee66]
  418b85:	lahf   
  418b86:	out    dx,al
  418b87:	jmp    0x418b2f
  418b89:	sub    DWORD PTR [ebx+0x2f36c2ee],edx
  418b8f:	clc    
  418b90:	lock xor ch,BYTE PTR [eax-0xa]
  418b94:	add    esi,DWORD PTR [ebx-0x62]
  418b97:	nop
  418b98:	(bad)  
  418b99:	jo     0x418b75
  418b9b:	ins    BYTE PTR es:[edi],dx
  418b9c:	sbb    edx,DWORD PTR [ebx-0x6c]
  418b9f:	in     eax,dx
  418ba0:	loopne 0x418bac
  418ba2:	dec    edx
  418ba3:	xor    al,0xa7
  418ba5:	cmp    cl,BYTE PTR [ecx+0x8]
  418ba8:	vpmadcsswd ymm1,ymm7,YMMWORD PTR [ebp+0x3a480ab0],ymm0
  418bb2:	ds test al,0x95
  418bb5:	push   cs
  418bb6:	mov    ds:0xec0a9282,eax
  418bbb:	mov    DWORD PTR [edx],ecx
  418bbd:	sub    BYTE PTR [ecx-0x52511439],al
  418bc3:	fld    TBYTE PTR [ebx]
  418bc5:	xchg   esp,eax
  418bc6:	fiadd  DWORD PTR [ecx]
  418bc8:	retf   
  418bc9:	cmpxchg BYTE PTR [edx-0x41ecbc2],cl
  418bd0:	jl     0x418c31
  418bd2:	pop    esp
  418bd3:	test   BYTE PTR [eax+0x1a],bh
  418bd6:	sar    ebx,0x1a
  418bd9:	dec    edx
  418bda:	mov    eax,0x1ab12e4f
  418bdf:	(bad)  
  418be0:	int3   
  418be1:	rcl    DWORD PTR [esi-0x79885dea],0x2d
  418be8:	in     eax,dx
  418be9:	jae    0x418c44
  418beb:	sbb    DWORD PTR [eax-0x5fadfcc3],ebx
  418bf1:	sbb    DWORD PTR [ebp-0x4983d4f0],ebx
  418bf7:	xchg   edi,eax
  418bf8:	dec    edx
  418bf9:	or     DWORD PTR [edi+0x6be0efe8],edx
  418bff:	push   ebx
  418c00:	pushf  
  418c01:	(bad)  
  418c03:	sbb    esp,ebx
  418c05:	or     eax,0x52bb4a3a
  418c0a:	int3   
  418c0b:	in     eax,0x53
  418c0d:	mov    eax,esi
  418c0f:	stos   BYTE PTR es:[edi],al
  418c10:	inc    edx
  418c11:	adc    edx,ebp
  418c13:	push   ebx
  418c14:	inc    edx
  418c15:	pop    edx
  418c16:	retf   
  418c17:	push   edi
  418c18:	pop    edi
  418c19:	and    DWORD PTR [edi-0x3e],edi
  418c1c:	mov    esp,0x3637d2bf
  418c21:	rcl    esp,0x74
  418c24:	xchg   BYTE PTR [ebx+0x5e],ah
  418c27:	xor    al,cl
  418c29:	loop   0x418c45
  418c2b:	test   DWORD PTR [edi+0xf41f465],esp
  418c31:	xchg   ebp,eax
  418c32:	call   0x1a37:0xc2c6bd40
  418c39:	(bad)  
  418c3a:	cdq    
  418c3b:	cwde   
  418c3c:	xlat   BYTE PTR ds:[ebx]
  418c3d:	or     eax,DWORD PTR [ecx-0xc7caeb5]
  418c43:	sbb    ah,BYTE PTR [eax-0x6586eb21]
  418c49:	pop    esp
  418c4a:	mov    edi,0xbf592448
  418c4f:	sub    BYTE PTR ds:0xfe5006ff,ah
  418c55:	xchg   esi,eax
  418c56:	and    eax,0x8939c76d
  418c5b:	fbstp  TBYTE PTR [edx+0x27]
  418c5e:	xor    al,0x38
  418c60:	fs mov ebx,0xde469092
  418c66:	cmp    eax,0xfc4242e7
  418c6b:	push   ss
  418c6c:	nop
  418c6d:	pop    ebx
  418c6e:	gs xchg esi,eax
  418c70:	rcr    ebp,0x94
  418c73:	jmp    0x6934:0xbd8f390
  418c7a:	pop    ebx
  418c7b:	push   esi
  418c7c:	cli    
  418c7d:	js     0x418bff
  418c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c80:	rol    DWORD PTR [ecx+0x263df2a8],0xe
  418c87:	push   0x8942ec07
  418c8c:	mov    dh,0xc6
  418c8e:	(bad)  
  418c8f:	aaa    
  418c90:	fsub   QWORD PTR [ebp+0xc988822]
  418c96:	loope  0x418c94
  418c98:	test   eax,0xea937a5b
  418c9d:	(bad)  
  418c9e:	xor    cl,dl
  418ca0:	add    eax,0x2037265f
  418ca5:	inc    ecx
  418ca6:	and    edi,DWORD PTR [esi+0x3419d3d3]
  418cac:	inc    ebx
  418cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cae:	adc    eax,0x9fa3a987
  418cb3:	jmp    DWORD PTR fs:[ebx-0x1a5eef0f]
  418cba:	push   cs
  418cbb:	fld    QWORD PTR [eax-0x71c59bc2]
  418cc1:	call   0xfccc:0x1bc4bc48
  418cc8:	pop    eax
  418cc9:	jg     0x418cbb
  418ccb:	inc    ebp
  418ccc:	inc    ebp
  418ccd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cce:	ja     0x418c9a
  418cd0:	mov    cl,0x3c
  418cd2:	push   eax
  418cd3:	fisttp QWORD PTR [eax-0x26381ebc]
  418cd9:	inc    edi
  418cda:	popa   
  418cdb:	inc    eax
  418cdc:	inc    esi
  418cdd:	arpl   WORD PTR [ebx+0x4ae15508],di
  418ce3:	out    dx,al
  418ce4:	mov    al,ds:0x852bfe2a
  418ce9:	mov    ?,WORD PTR [edx-0x39]
  418cec:	dec    eax
  418ced:	leave  
  418cee:	xchg   ebx,eax
  418cef:	push   ecx
  418cf0:	push   eax
  418cf1:	ins    DWORD PTR es:[edi],dx
  418cf2:	enter  0x98b,0xbb
  418cf6:	add    eax,ecx
  418cf8:	rol    ch,cl
  418cfa:	sub    DWORD PTR [eax],esi
  418cfc:	ret    
  418cfd:	xchg   BYTE PTR [ecx-0x21],bh
  418d00:	bound  ebp,QWORD PTR [edx+0x399c4b65]
  418d06:	push   0x79
  418d08:	push   0x4f
  418d0a:	or     ecx,ebx
  418d0c:	int    0x3b
  418d0e:	stos   DWORD PTR es:[edi],eax
  418d0f:	sahf   
  418d10:	cmp    BYTE PTR [edx],ah
  418d12:	stc    
  418d13:	shr    BYTE PTR ds:0x48517183,1
  418d19:	push   ds
  418d1a:	arpl   WORD PTR [ecx],bx
  418d1c:	je     0x418d51
  418d1e:	adc    eax,0xe4768107
  418d23:	mov    esi,0xd6105d79
  418d28:	imul   ebp,DWORD PTR [edi-0x235f6282],0x56
  418d2f:	(bad)  
  418d32:	fs mov esi,0x2621e992
  418d38:	das    
  418d39:	call   0xc8de:0x12cb23cd
  418d40:	adc    bl,bh
  418d42:	jmp    0xe630:0xaaaf746c
  418d49:	or     BYTE PTR [ebx],0xb4
  418d4c:	add    ecx,DWORD PTR [esi-0x20e434de]
  418d52:	popf   
  418d53:	cmp    al,0x2a
  418d55:	adc    al,0x91
  418d57:	mov    ah,BYTE PTR [ebx]
  418d59:	or     al,0x7d
  418d5b:	jbe    0x418ceb
  418d5d:	dec    ecx
  418d5e:	imul   DWORD PTR [ebx]
  418d60:	jecxz  0x418db9
  418d62:	jle    0x418d3a
  418d64:	fldcw  WORD PTR [edi+0x2f]
  418d67:	arpl   WORD PTR [edx-0x53902781],cx
  418d6d:	ins    BYTE PTR es:[edi],dx
  418d6e:	enter  0x12a0,0x3a
  418d72:	aaa    
  418d73:	call   0x402:0xb7964134
  418d7a:	arpl   WORD PTR [ecx+ecx*4+0x57],bp
  418d7e:	pop    esi
  418d7f:	fwait
  418d80:	into   
  418d81:	mov    ah,0xa3
  418d83:	xchg   ebp,eax
  418d84:	mov    ebp,0x14054b6d
  418d89:	das    
  418d8a:	retf   0xc5b
  418d8d:	inc    eax
  418d8e:	mov    ebx,0xb79aa8d2
  418d93:	jl     0x418d2f
  418d95:	or     bl,al
  418d97:	inc    ebx
  418d98:	dec    esi
  418d99:	inc    edx
  418d9a:	pop    ds
  418d9b:	and    DWORD PTR [esi-0x26],0xffffffb5
  418d9f:	ficom  WORD PTR [ebx-0x19]
  418da2:	xchg   ebx,eax
  418da3:	add    DWORD PTR [edi-0x5add6db3],eax
  418da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418daa:	or     eax,0x293dc97e
  418daf:	retf   
  418db0:	daa    
  418db1:	lock lods eax,DWORD PTR ds:[esi]
  418db3:	addr16 pop ecx
  418db5:	jge    0x418d93
  418db7:	shl    BYTE PTR [ebx-0x69],1
  418dba:	into   
  418dbb:	hlt    
  418dbc:	and    al,0x11
  418dbe:	adc    eax,0x71112488
  418dc3:	sub    eax,0x6ac15463
  418dc8:	sub    BYTE PTR [ecx+0x36],bh
  418dcb:	sbb    eax,DWORD PTR [ebp-0x58c4df8d]
  418dd1:	ja     0x418df0
  418dd3:	adc    ah,BYTE PTR [edx-0x4c]
  418dd6:	mov    WORD PTR [edi+0x49],?
  418dd9:	(bad)
  418ddc:	stos   DWORD PTR es:[edi],eax
  418ddd:	bound  ebp,QWORD PTR [ecx+0x559c28c0]
  418de3:	loop   0x418dcf
  418de5:	mov    ds:0xc55894a7,eax
  418dea:	jge    0x418e66
  418dec:	imul   edi,DWORD PTR [edi],0x34b1d152
  418df2:	add    eax,0x59fc586a
  418df7:	div    DWORD PTR [ebx]
  418df9:	(bad)  
  418dfa:	fisttp WORD PTR [edx-0x75bef59]
  418e00:	xrelease mov BYTE PTR [ecx-0x4ef3bf4b],ah
  418e07:	aad    0xa8
  418e09:	addr16 jo 0x418df4
  418e0c:	shr    DWORD PTR [ebp-0x37],cl
  418e0f:	mov    ecx,0x38988493
  418e14:	jne    0x418e72
  418e16:	jg     0x418e3c
  418e18:	(bad)  
  418e19:	sbb    BYTE PTR [ecx+ebx*8+0xaa551b4],ch
  418e20:	jmp    0xcda83bd1
  418e25:	adc    DWORD PTR [ebp+0x47],ebx
  418e28:	sbb    BYTE PTR [ebp-0x7005471],ah
  418e2e:	std    
  418e2f:	xchg   ebp,eax
  418e30:	aam    0xf3
  418e32:	das    
  418e33:	xchg   ecx,eax
  418e34:	cmc    
  418e35:	daa    
  418e36:	mov    cl,0xe0
  418e38:	push   esi
  418e39:	push   eax
  418e3a:	clc    
  418e3b:	cmp    BYTE PTR [edx],ch
  418e3d:	sbb    BYTE PTR [esi],ah
  418e3f:	push   esp
  418e40:	adc    al,ah
  418e42:	mov    al,BYTE PTR [edx+0x452e04d4]
  418e48:	jl     0x418e85
  418e4a:	enter  0xec4f,0x57
  418e4e:	out    0xe5,eax
  418e50:	in     eax,0xfb
  418e52:	loopne 0x418e2a
  418e54:	adc    esi,DWORD PTR [edi-0x7fa8bef]
  418e5a:	or     al,0x3e
  418e5c:	adc    eax,0xff42312a
  418e61:	out    0x5b,al
  418e63:	mov    ebx,0x70989821
  418e68:	push   es
  418e69:	loopne 0x418dff
  418e6b:	push   esi
  418e6c:	(bad)  
  418e6d:	lods   al,BYTE PTR ds:[esi]
  418e6e:	data16 cli 
  418e70:	mov    WORD PTR [ecx-0x1e],es
  418e73:	adc    eax,0x5ea4f1a0
  418e78:	push   edx
  418e79:	arpl   WORD PTR [ebx+ecx*4+0x3474f365],bx
  418e80:	js     0x418e96
  418e82:	push   esi
  418e83:	fidivr WORD PTR ds:[esi+0x679bb34]
  418e8a:	repz fs sub eax,ebp
  418e8e:	dec    eax
  418e8f:	call   0x7fda:0xcd009293
  418e96:	out    0x3c,al
  418e98:	rol    DWORD PTR [edx+0x53fa8842],cl
  418e9e:	ret    0xa072
  418ea1:	jmp    0x418ed5
  418ea3:	iret   
  418ea4:	jo     0x418eec
  418ea6:	(bad)  
  418ea7:	fnstenv [edi+0x2b]
  418eaa:	rcr    BYTE PTR [edx-0x6eb6fb58],0x15
  418eb1:	stc    
  418eb2:	sub    al,0x18
  418eb4:	xchg   edi,eax
  418eb5:	ins    DWORD PTR es:[edi],dx
  418eb6:	repz cmp al,0x2
  418eb9:	mov    BYTE PTR [ebx+0x6e],cl
  418ebc:	rcl    esi,0x4a
  418ebf:	xchg   ecx,eax
  418ec0:	gs cs jl 0x418e65
  418ec4:	push   esi
  418ec5:	shr    DWORD PTR [ebx+0xadcb2b9],cl
  418ecb:	and    eax,0xfcd28dc9
  418ed0:	dec    ecx
  418ed1:	jo     0x418e57
  418ed3:	jle    0x418e5b
  418ed5:	cmp    al,0x55
  418ed7:	retf   
  418ed8:	arpl   WORD PTR [edi+0x6d],si
  418edb:	xchg   ecx,eax
  418edc:	adc    DWORD PTR [ecx],0xfffffffd
  418edf:	shl    BYTE PTR [ebx-0x4],1
  418ee2:	xor    BYTE PTR [esi*4-0x5e6eed67],0xe
  418eea:	into   
  418eeb:	mov    al,BYTE PTR [esi-0x66]
  418eee:	and    ch,BYTE PTR es:[ecx*2+0x37f60715]
  418ef6:	xor    al,0xc3
  418ef8:	push   ebx
  418ef9:	rol    BYTE PTR [eax+ebp*1+0x6247e720],0x71
  418f01:	pop    esi
  418f02:	clc    
  418f03:	mov    ds:0x9568e9cf,al
  418f08:	push   esp
  418f09:	cdq    
  418f0a:	cmc    
  418f0b:	cdq    
  418f0c:	fnstcw WORD PTR [edx-0x4c0f7997]
  418f12:	mov    al,0x44
  418f14:	or     ebp,DWORD PTR [edx+0x75c7d216]
  418f1a:	push   ebx
  418f1b:	retf   
  418f1c:	bnd call DWORD PTR [ecx+ebx*8-0x53e47049]
  418f24:	mov    edx,0x24adc144
  418f29:	enter  0x709b,0x6a
  418f2d:	ret    
  418f2e:	cwde   
  418f2f:	jmp    0x418f1a
  418f31:	dec    ebx
  418f32:	mov    al,0xf4
  418f34:	adc    eax,DWORD PTR [eax-0x1f]
  418f37:	push   ecx
  418f38:	cmp    DWORD PTR [ebx],eax
  418f3a:	leave  
  418f3b:	adc    DWORD PTR [eax],edi
  418f3d:	inc    edi
  418f3e:	or     al,0x33
  418f40:	dec    ecx
  418f41:	loop   0x418f92
  418f43:	mov    ds:0xd009f85d,eax
  418f48:	ret    0x3096
  418f4b:	iret   
  418f4c:	cwde   
  418f4d:	fs aad 0x38
  418f50:	fst    QWORD PTR ds:0x1bbd9f7f
  418f56:	mov    bl,0x1c
  418f58:	pop    edx
  418f59:	push   0x878c07dd
  418f5e:	aas    
  418f5f:	mov    ds:0x75d786d5,eax
  418f64:	xchg   edx,eax
  418f65:	mov    ds:0x9c8315ae,eax
  418f6a:	dec    edx
  418f6b:	ret    
  418f6c:	ret    0x40a2
  418f6f:	jl     0x418fd8
  418f71:	(bad)  
  418f72:	call   0xc34d:0x30f83a41
  418f79:	mov    BYTE PTR [ebp+0x274174ea],dl
  418f7f:	add    dl,bl
  418f81:	icebp  
  418f82:	mov    al,dl
  418f84:	push   es
  418f85:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f87:	dec    ecx
  418f88:	mov    esp,0xe99b9f23
  418f8d:	sbb    ebx,DWORD PTR [edi+0x63]
  418f90:	mov    edx,0x5edfe13d
  418f95:	or     DWORD PTR [eax],ebx
  418f97:	pop    eax
  418f98:	fwait
  418f99:	out    dx,al
  418f9a:	jl     0x418f5b
  418f9c:	jne    0x419009
  418f9e:	push   eax
  418f9f:	and    esi,DWORD PTR [ebx+0x623fb2f3]
  418fa5:	adc    bh,cl
  418fa7:	jbe    0x418fef
  418fa9:	dec    edx
  418faa:	daa    
  418fab:	xor    edi,0xffffffcb
  418fae:	or     BYTE PTR [ebp+eiz*4+0x693ca61f],ah
  418fb5:	mov    bh,dh
  418fb7:	mov    ebp,0xc4767ed0
  418fbc:	in     al,0x2f
  418fbe:	test   ebp,ebx
  418fc0:	ins    DWORD PTR es:[edi],dx
  418fc1:	les    esi,FWORD PTR [edi-0x7e51b673]
  418fc7:	add    ecx,DWORD PTR [ecx-0x5d98a1fc]
  418fcd:	xor    BYTE PTR [ebp+0x4a3510bf],dl
  418fd3:	cld    
  418fd4:	sub    eax,0x42823894
  418fd9:	loop   0x418f6f
  418fdb:	scas   eax,DWORD PTR es:[edi]
  418fdc:	stc    
  418fdd:	rcl    ebp,cl
  418fdf:	test   DWORD PTR [ebp-0x2d],ebx
  418fe2:	enter  0xf731,0xbe
  418fe6:	es es cmp ecx,edx
  418fea:	pop    ecx
  418feb:	int3   
  418fec:	cs leave 
  418fee:	iret   
  418fef:	test   DWORD PTR [ecx+0x61],esp
  418ff2:	int3   
  418ff3:	jge    0x41906f
  418ff5:	lods   al,BYTE PTR ds:[esi]
  418ff6:	sbb    BYTE PTR [esp+eax*4],dl
  418ff9:	and    dh,BYTE PTR [esi]
  418ffb:	loopne 0x418fae
  418ffd:	xchg   edx,eax
  418ffe:	(bad)  
  418fff:	mov    esi,0x3b885a0e
  419004:	pop    edx
  419005:	js     0x41901e
  419007:	pop    eax
  419008:	add    eax,0xcc43fd0e
  41900d:	xchg   ecx,eax
  41900e:	sub    eax,0xb91133b5
  419013:	loop   0x418feb
  419015:	mov    ch,0xd8
  419017:	repnz aas 
  419019:	out    dx,al
  41901a:	and    ah,cl
  41901c:	cmp    DWORD PTR ds:0x32c48563,edi
  419022:	or     al,0x87
  419024:	sar    BYTE PTR [edx-0x11],cl
  419027:	fucomip st,st(7)
  419029:	clc    
  41902a:	jo     0x419006
  41902c:	push   ebp
  41902d:	push   edx
  41902e:	push   ebx
  41902f:	(bad)  
  419030:	add    eax,0xb19980ef
  419035:	mov    edx,0xb317b063
  41903a:	(bad)  
  41903b:	jo     0x419022
  41903d:	in     eax,0xc4
  41903f:	pushf  
  419040:	sub    DWORD PTR [esi],eax
  419042:	test   al,0x5
  419044:	frstor [eax]
  419046:	call   0x3e3ff317
  41904b:	pop    edx
  41904c:	(bad)  
  41904e:	ror    DWORD PTR [esi],cl
  419050:	jecxz  0x41901d
  419052:	repnz imul edx,DWORD PTR [edx],0xffffff85
  419056:	dec    edi
  419057:	test   al,0xb0
  419059:	adc    dl,BYTE PTR [ecx]
  41905b:	fwait
  41905c:	push   esi
  41905d:	inc    eax
  41905e:	cmp    al,0x78
  419060:	pop    ss
  419061:	and    al,0x1c
  419063:	adc    DWORD PTR [esi-0x49],esp
  419066:	je     0x41909e
  419068:	sbb    BYTE PTR [ebx+0x41],0x28
  41906c:	retf   
  41906d:	adc    bh,BYTE PTR [edi]
  41906f:	loop   0x419025
  419071:	fmulp  st(2),st
  419073:	(bad)  
  419074:	cmp    BYTE PTR [esi+0x64523cd9],cl
  41907a:	jnp    0x419060
  41907c:	push   ss
  41907d:	ins    BYTE PTR es:[edi],dx
  41907e:	sub    BYTE PTR [ebp-0x745e0c9a],0x6
  419085:	lods   eax,DWORD PTR ds:[esi]
  419086:	jns    0x4190ea
  419088:	outs   dx,DWORD PTR ds:[esi]
  419089:	push   0xfffffff8
  41908b:	popa   
  41908c:	jb     0x4190c6
  41908e:	push   edx
  41908f:	push   eax
  419090:	outs   dx,BYTE PTR ds:[esi]
  419091:	cwde   
  419092:	inc    edx
  419093:	out    dx,al
  419094:	mov    BYTE PTR [ebx-0x41ba6f21],ah
  41909a:	xlat   BYTE PTR ds:[ebx]
  41909b:	push   esp
  41909c:	daa    
  41909d:	arpl   WORD PTR [esi+0x5e556102],bp
  4190a3:	push   esp
  4190a4:	bound  edi,QWORD PTR fs:[eax-0x27]
  4190a8:	mov    cl,0x45
  4190aa:	leave  
  4190ab:	mov    ebx,DWORD PTR [esi]
  4190ad:	cmp    DWORD PTR [ebp-0x1517f83],edx
  4190b3:	pop    esp
  4190b4:	push   ebx
  4190b5:	sbb    BYTE PTR [edi-0x6f],0xce
  4190b9:	xor    DWORD PTR [edx-0x49],ebx
  4190bc:	(bad)  
  4190bd:	(bad)  
  4190be:	xor    bl,BYTE PTR gs:[ebx]
  4190c1:	sar    bh,0xb
  4190c4:	leave  
  4190c5:	loope  0x4190ac
  4190c7:	mov    ecx,DWORD PTR [eax]
  4190c9:	mov    ds:0xd99fece7,al
  4190ce:	add    bl,cl
  4190d0:	add    eax,0x56ea6147
  4190d5:	dec    ebx
  4190d6:	cdq    
  4190d7:	xchg   ebp,eax
  4190d8:	push   edi
  4190d9:	repz xchg ebp,eax
  4190db:	inc    edx
  4190dc:	aad    0x16
  4190de:	in     al,dx
  4190df:	adc    al,0x8a
  4190e1:	pop    edx
  4190e2:	sahf   
  4190e3:	mov    bl,0x8b
  4190e5:	cmp    DWORD PTR [ebp-0x29097a7f],ecx
  4190eb:	clc    
  4190ec:	fucomip st,st(6)
  4190ee:	cmp    DWORD PTR [esi+0x3c],ebx
  4190f1:	into   
  4190f2:	and    DWORD PTR [edi-0x50e79344],ebp
  4190f8:	lds    esp,FWORD PTR [edi+0x60]
  4190fb:	mov    al,ds:0x30caef
  419100:	dec    ecx
  419101:	mov    ebp,0x2e8f2068
  419106:	int3   
  419107:	sbb    BYTE PTR [edx+0x212bf423],dh
  41910d:	pop    esi
  41910e:	imul   edi,DWORD PTR [eax-0x13],0xffffffa8
  419112:	mov    bl,0x9c
  419114:	cmp    al,0x82
  419116:	clc    
  419117:	jo     0x41914a
  419119:	adc    eax,0x95274df5
  41911e:	jecxz  0x4190eb
  419120:	idiv   BYTE PTR [edx+eiz*4]
  419123:	popa   
  419124:	(bad)
  419127:	mov    dl,BYTE PTR [ecx-0x6d89177d]
  41912d:	push   edi
  41912e:	scas   eax,DWORD PTR es:[edi]
  41912f:	jbe    0x419142
  419131:	sub    al,BYTE PTR [eax-0x6dc7d2e]
  419137:	daa    
  419138:	div    BYTE PTR [edx-0x3c]
  41913b:	push   ebp
  41913c:	and    DWORD PTR [ebp-0x405e1291],esi
  419142:	mov    al,0xf4
  419144:	xor    al,0xd0
  419146:	scas   al,BYTE PTR es:[edi]
  419147:	add    bl,bh
  419149:	push   ebx
  41914a:	(bad)
  41914d:	shl    BYTE PTR [eax+0xe],1
  419150:	xor    eax,0xc56c3609
  419155:	xor    al,0xeb
  419157:	jmp    0x419159
  419159:	or     DWORD PTR [edi+0x5f],edx
  41915c:	out    dx,eax
  41915d:	cdq    
  41915e:	dec    DWORD PTR [eax+0x29d6641f]
  419164:	loop   0x4191a1
  419166:	mov    dh,bh
  419168:	sub    bh,0x80
  41916b:	imul   esp,DWORD PTR [edi-0x53],0x13
  41916f:	jnp    0x419129
  419171:	popf   
  419172:	xor    eax,0xbafb3d5d
  419177:	std    
  419178:	mov    bl,0x77
  41917a:	mov    edx,0xe9278e13
  41917f:	sbb    DWORD PTR [edi+0x8],ebx
  419182:	ins    BYTE PTR es:[edi],dx
  419183:	mov    ah,0x4a
  419185:	repz add DWORD PTR fs:[eax+0xf9c3d68],esi
  41918d:	mov    edi,0x60610503
  419192:	fisttp QWORD PTR [ecx-0x6776c33f]
  419198:	scas   al,BYTE PTR es:[edi]
  419199:	pop    ds
  41919a:	sub    edx,ebx
  41919c:	aaa    
  41919d:	adc    al,0xea
  41919f:	(bad)  
  4191a0:	lods   al,BYTE PTR ds:[esi]
  4191a1:	(bad)  
  4191a2:	jno    0x4191a5
  4191a4:	sbb    eax,0xa9196ece
  4191a9:	jecxz  0x41921b
  4191ab:	mov    edx,0x8807b21d
  4191b0:	jmp    0xa431:0x3378c832
  4191b7:	sub    DWORD PTR [ebx-0x6c058c49],edx
  4191bd:	mov    edx,0x5d38a5cc
  4191c2:	jmp    0xab4d:0xf123c6c
  4191c9:	cdq    
  4191ca:	jo     0x419239
  4191cc:	xchg   edx,eax
  4191cd:	aam    0x91
  4191cf:	ds out 0x9,eax
  4191d2:	add    edi,DWORD PTR [ecx]
  4191d4:	call   0xcc81343a
  4191d9:	jp     0x41922d
  4191db:	fisttp WORD PTR [ebx+0x5b]
  4191de:	cwde   
  4191df:	mov    al,BYTE PTR [edi+0x3a]
  4191e2:	out    dx,al
  4191e3:	mov    ds:0xe75356cc,al
  4191e8:	les    ebx,FWORD PTR [esi]
  4191ea:	in     al,0x13
  4191ec:	mov    esp,0x8f2a3e50
  4191f1:	and    BYTE PTR [ebx-0x35],0x31
  4191f5:	pop    ebp
  4191f6:	mov    al,0x6
  4191f8:	jg     0x419249
  4191fa:	bound  ebp,QWORD PTR [ebx-0x34]
  4191fd:	add    al,0x3
  4191ff:	(bad)  
  419200:	pop    esi
  419201:	mov    cl,0x9d
  419203:	pop    es
  419204:	inc    ebp
  419205:	bound  eax,QWORD PTR [esi-0x59]
  419208:	loopne 0x4191ca
  41920a:	test   BYTE PTR [edi+0x76],ah
  41920d:	dec    ebp
  41920e:	mov    bl,0x18
  419210:	push   edi
  419211:	and    DWORD PTR [ebx+0x71],edx
  419214:	repnz gs (bad) 
  419217:	pop    eax
  419218:	jne    0x4191db
  41921a:	xchg   ecx,eax
  41921b:	mov    dl,0x85
  41921d:	cmp    eax,0x2d8c3f84
  419222:	ret    0xe74d
  419225:	xchg   esi,eax
  419226:	mov    ds:0x37c5299d,al
  41922b:	xchg   edi,eax
  41922c:	movntq (bad),mm0
  41922d:	out    0xc0,eax
  41922f:	xor    ah,bh
  419231:	adc    ecx,ebx
  419233:	cli    
  419234:	xor    ecx,ecx
  419236:	cdq    
  419237:	mov    esp,0x47d77aa6
  41923c:	(bad)  
  41923e:	mov    dl,0x3e
  419240:	lock cli 
  419242:	std    
  419243:	nop
  419244:	add    edx,DWORD PTR [esi]
  419246:	mov    bl,0xf4
  419248:	xor    eax,DWORD PTR [ebx+0x4fbbfc29]
  41924e:	stc    
  41924f:	sahf   
  419250:	ins    DWORD PTR es:[edi],dx
  419251:	mov    DWORD PTR ds:0x53824ab,edi
  419257:	pop    ss
  419258:	in     al,0xa2
  41925a:	(bad)  
  41925b:	out    0x65,al
  41925d:	pop    ss
  41925e:	std    
  41925f:	mov    edi,0x6bcf7cce
  419264:	jno    0x4191ec
  419266:	xchg   esp,eax
  419267:	xor    BYTE PTR ds:0x75b5eb75,bl
  41926d:	mov    eax,ds:0x74a4059a
  419272:	mov    ecx,DWORD PTR [ebx-0xd6353d3]
  419278:	mov    ds:0x1522b06f,eax
  41927d:	jge    0x419283
  41927f:	out    0x76,eax
  419281:	loope  0x41925c
  419283:	add    al,BYTE PTR [esi]
  419285:	hlt    
  419286:	xor    BYTE PTR [ebp-0x1c812f40],al
  41928c:	mov    edx,0x539d9fe
  419291:	jl     0x4192ec
  419293:	jns    0x419285
  419295:	test   eax,0x26de5198
  41929a:	test   DWORD PTR [edi],edx
  41929c:	cld    
  41929d:	xchg   edx,eax
  41929e:	retf   
  41929f:	inc    ecx
  4192a0:	lds    esi,FWORD PTR [edi+0x12]
  4192a3:	test   al,0x19
  4192a5:	stos   BYTE PTR es:[edi],al
  4192a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192a7:	mov    ds:0xc5830224,eax
  4192ac:	cmp    ah,dh
  4192ae:	and    DWORD PTR [esi+edi*4+0x7],edi
  4192b2:	jmp    0x98fa89fc
  4192b7:	mov    bh,0x8d
  4192b9:	sbb    dh,BYTE PTR [ebx]
  4192bb:	mov    esp,0xf6a597a0
  4192c0:	loop   0x419284
  4192c2:	mov    DWORD PTR [ecx+eiz*2+0x5c],ecx
  4192c6:	aas    
  4192c7:	das    
  4192c8:	jl     0x419263
  4192ca:	inc    eax
  4192cb:	lods   eax,DWORD PTR ds:[esi]
  4192cc:	(bad)  
  4192cd:	mov    WORD PTR [ebx-0x43],?
  4192d0:	fisub  WORD PTR [ebx]
  4192d2:	imul   edi,DWORD PTR ds:0x239b50aa,0xba8727db
  4192dd:	icebp  
  4192de:	repnz pushf 
  4192e0:	ret    0xf82a
  4192e3:	(bad)  
  4192e4:	jbe    0x419338
  4192e6:	sub    esp,DWORD PTR [ebx-0x5eacfdbd]
  4192ec:	clc    
  4192ed:	push   ecx
  4192ee:	add    eax,0x2a5b3129
  4192f3:	mov    BYTE PTR [edx-0x79f3bee0],0x7c
  4192fa:	mov    bl,0xe2
  4192fc:	sbb    bl,ch
  4192fe:	or     DWORD PTR [ebp-0x2a],esp
  419301:	les    ebp,FWORD PTR ds:0xf258324d
  419307:	lds    ebp,FWORD PTR [eax]
  419309:	mov    bh,0x59
  41930b:	sub    eax,0x625e9925
  419310:	test   al,0xe7
  419312:	repz dec eax
  419314:	xchg   esp,eax
  419315:	inc    edi
  419316:	mov    bl,0x7
  419318:	jbe    0x419320
  41931a:	daa    
  41931b:	outs   dx,BYTE PTR ds:[esi]
  41931c:	frstpm(287 only) 
  41931e:	dec    ecx
  41931f:	popf   
  419320:	aam    0x7c
  419322:	sbb    BYTE PTR [edx+0x36aa3ccf],bl
  419328:	not    bh
  41932a:	enter  0xa2bd,0x34
  41932e:	push   esp
  41932f:	cwde   
  419330:	cmp    DWORD PTR [ecx-0x10ae62e4],0x4a15910c
  41933a:	add    DWORD PTR [eax+0x7f],ebx
  41933d:	dec    eax
  41933e:	aaa    
  41933f:	cs and al,0x44
  419343:	int    0xcc
  419345:	test   al,0x53
  419347:	pusha  
  419348:	(bad)  
  419349:	fist   WORD PTR [eax]
  41934b:	ficomp DWORD PTR [eax-0x4eb10146]
  419351:	push   edx
  419352:	xor    ch,ah
  419354:	pop    esp
  419355:	mov    bl,cl
  419357:	sti    
  419358:	(bad)  
  419359:	mov    al,0x17
  41935b:	sar    DWORD PTR [edx+0x6c941235],1
  419361:	outs   dx,DWORD PTR ds:[esi]
  419362:	jge    0x419388
  419364:	or     cl,BYTE PTR [eax+0x491b00e3]
  41936a:	pushf  
  41936b:	bound  eax,QWORD PTR [edi+0x37]
  41936e:	adc    BYTE PTR [ecx],ch
  419370:	sti    
  419371:	pop    ss
  419372:	mov    eax,ds:0x936b77c9
  419377:	pop    esi
  419378:	dec    ebp
  419379:	aas    
  41937a:	(bad)  
  41937c:	and    DWORD PTR [ecx],eax
  41937e:	ins    BYTE PTR es:[edi],dx
  41937f:	xor    al,0x7a
  419381:	and    DWORD PTR [ecx+esi*8+0x4702daa8],ecx
  419388:	sbb    BYTE PTR [ebp+0x5d3ed9db],ah
  41938e:	mov    DWORD PTR [esi-0x1ff97814],0xf81c4e3d
  419398:	out    dx,al
  419399:	push   es
  41939a:	xchg   ebx,eax
  41939b:	std    
  41939c:	cmp    al,BYTE PTR ss:[ebx]
  41939f:	pop    eax
  4193a0:	xlat   BYTE PTR ds:[ebx]
  4193a1:	ror    DWORD PTR [eax],1
  4193a3:	mov    cl,0x9a
  4193a5:	inc    edx
  4193a6:	mov    dh,0x6d
  4193a8:	int3   
  4193a9:	and    al,0xb1
  4193ab:	ins    DWORD PTR es:[edi],dx
  4193ac:	pop    esi
  4193ad:	mov    esi,DWORD PTR [ebp+0x6e]
  4193b0:	push   0x1ce4981
  4193b5:	test   al,0xf4
  4193b7:	fbstp  TBYTE PTR [esi]
  4193b9:	mov    bh,0x9c
  4193bb:	outs   dx,DWORD PTR ds:[esi]
  4193bc:	push   0x58
  4193be:	mov    al,0x66
  4193c0:	mov    al,ds:0x22342f69
  4193c5:	fstp   QWORD PTR [edi+0x2b]
  4193c8:	aad    0x38
  4193ca:	outs   dx,DWORD PTR ds:[esi]
  4193cb:	jl     0x419383
  4193cd:	dec    ebx
  4193ce:	call   DWORD PTR [eax]
  4193d0:	or     BYTE PTR [ebx+ebx*1],ah
  4193d3:	xor    eax,ebx
  4193d5:	icebp  
  4193d6:	mov    esp,0xc5c16ec3
  4193db:	cli    
  4193dc:	aad    0xf2
  4193de:	pop    esi
  4193df:	scas   eax,DWORD PTR es:[edi]
  4193e0:	sbb    edx,ebp
  4193e2:	rcr    BYTE PTR [edx-0x7d94f87b],0x87
  4193e9:	xchg   esi,eax
  4193ea:	add    eax,0x58fa9ef3
  4193ef:	mov    ch,0x53
  4193f1:	push   0x940479fd
  4193f6:	sub    BYTE PTR [edi+ecx*4-0x6f26d97c],al
  4193fd:	loopne 0x419421
  4193ff:	mov    bl,0xcc
  419401:	sbb    al,0xfb
  419403:	add    ch,al
  419405:	aaa    
  419406:	fisttp QWORD PTR [eax]
  419408:	push   0x21c0bbe3
  41940d:	in     al,dx
  41940e:	add    esp,DWORD PTR [esi]
  419410:	add    eax,0xac70ba5f
  419415:	xor    bh,BYTE PTR [ecx+0x4296b1e5]
  41941b:	xchg   DWORD PTR [eax],ebp
  41941d:	in     eax,0x33
  41941f:	fst    QWORD PTR [ebx+0x210662eb]
  419425:	xchg   DWORD PTR [edx+ebx*2+0x68],esi
  419429:	aam    0x34
  41942b:	mov    dl,0xd8
  41942d:	mov    ah,BYTE PTR [esi]
  41942f:	cmp    bl,BYTE PTR [ebx]
  419431:	(bad)  
  419432:	cdq    
  419433:	cmp    ebx,eax
  419435:	push   ebx
  419436:	xlat   BYTE PTR ds:[ebx]
  419437:	(bad)  [edx+0xa]
  41943a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41943b:	sub    DWORD PTR [ecx],ebx
  41943d:	xchg   ebp,eax
  41943e:	adc    eax,0xfd67fc6
  419443:	or     BYTE PTR [edx+esi*4+0x706240a5],ah
  41944a:	inc    ebx
  41944b:	mov    dh,BYTE PTR [edx-0x6a5a04da]
  419451:	lea    edx,[edx]
  419453:	cmp    ebp,DWORD PTR [esi+edi*4-0x23]
  419457:	imul   eax,DWORD PTR [esp+esi*4+0x3c829013],0xe7d30006
  419462:	mov    ch,0xb3
  419464:	test   DWORD PTR ds:0xe780068e,esp
  41946a:	xor    ebp,ecx
  41946c:	rep stos DWORD PTR es:[edi],eax
  41946e:	rcl    BYTE PTR [ecx-0x5e],0xed
  419472:	mov    bh,0x3e
  419474:	mov    ebx,0x105ce37a
  419479:	shl    BYTE PTR [edi+0x11],cl
  41947c:	das    
  41947d:	add    eax,0x1afd0200
  419482:	(bad)  
  419483:	sbb    dl,BYTE PTR [edx+0x73fab1ac]
  419489:	idiv   BYTE PTR [esp+eiz*2-0x52b658cd]
  419490:	mov    DWORD PTR [ebx-0x4f],0xa89bd9f4
  419497:	xchg   BYTE PTR [ecx+0x551bfed8],ah
  41949d:	sbb    ah,BYTE PTR [edi]
  41949f:	adc    al,0x8c
  4194a1:	mov    esi,0x1d08daca
  4194a6:	adc    al,0xbb
  4194a8:	call   0x2a8d3a65
  4194ad:	adc    ecx,DWORD PTR [ebx+edi*8+0x7b628a41]
  4194b4:	(bad)  
  4194b5:	popf   
  4194b6:	iret   
  4194b7:	arpl   di,bx
  4194b9:	cmp    dh,bl
  4194bb:	jmp    0xce55:0x73c1e15
  4194c2:	sbb    ebx,DWORD PTR [ebx]
  4194c4:	imul   ebx,DWORD PTR [eax+ecx*4+0x4124793a],0xb0ec4e11
  4194cf:	repz retf 
  4194d1:	mov    es,ecx
  4194d3:	stos   DWORD PTR es:[edi],eax
  4194d4:	fdivr  QWORD PTR [edx-0x19b8bd79]
  4194da:	pop    edi
  4194db:	pop    ebp
  4194dc:	jmp    0x9261:0xe15eb551
  4194e3:	push   0x40
  4194e5:	test   DWORD PTR [ebx+0x6],esi
  4194e8:	xchg   esi,eax
  4194e9:	repnz lods al,BYTE PTR ds:[esi]
  4194eb:	sub    BYTE PTR [ebx-0x2b],dl
  4194ee:	cmc    
  4194ef:	pop    es
  4194f0:	inc    eax
  4194f1:	inc    edx
  4194f2:	imul   edx,DWORD PTR [ebx+0x16392c4d],0xbdeb58b9
  4194fc:	inc    esi
  4194fd:	mov    ecx,0xeb61c1de
  419502:	fidivr WORD PTR [eax+0x40]
  419505:	call   0xe61f7639
  41950a:	and    BYTE PTR [esi+ecx*1+0x26],bl
  41950e:	mov    dh,0xca
  419510:	adc    bh,bl
  419512:	adc    eax,0x76115331
  419517:	lock gs jb 0x41949f
  41951b:	xlat   BYTE PTR ds:[ebx]
  41951c:	jne    0x4194b6
  41951e:	(bad)  
  41951f:	pushf  
  419520:	xor    esp,ecx
  419522:	ss jns 0x4194af
  419525:	mov    eax,ds:0xab1f57e1
  41952a:	les    esi,FWORD PTR [edx+0x6c]
  41952d:	sub    eax,0x67c2f402
  419532:	dec    edx
  419533:	inc    edx
  419534:	inc    esp
  419535:	pop    edi
  419536:	jo     0x4194dc
  419538:	jno    0x419518
  41953a:	sar    DWORD PTR [ebx-0x23359120],1
  419540:	push   ecx
  419541:	lea    eax,[eax]
  419543:	dec    esi
  419544:	adc    ch,0xa1
  419547:	jns    0x419538
  419549:	inc    ecx
  41954a:	mov    edx,0xfb3ddf1e
  41954f:	jp     0x4194d9
  419551:	cmp    al,0xee
  419553:	xchg   edx,eax
  419554:	scas   al,BYTE PTR es:[edi]
  419555:	cmp    al,0xa0
  419557:	pop    esi
  419558:	repnz ds popa 
  41955b:	jmp    0x419512
  41955d:	test   eax,0x1e450f89
  419562:	test   DWORD PTR [ebx],0x62a64dce
  419568:	jmp    0x774caaa
  41956d:	retf   
  41956e:	xchg   DWORD PTR ds:0xc1971a64,ebx
  419574:	loop   0x4195e3
  419576:	jnp    0x4195ba
  419578:	push   0x2e
  41957a:	mov    WORD PTR [ebx],ds
  41957c:	fld    QWORD PTR [ebx-0x64ababad]
  419582:	(bad)  
  419583:	mov    dl,0xf3
  419585:	adc    al,0x95
  419587:	imul   eax
  419589:	adc    dh,BYTE PTR [ecx-0x12]
  41958c:	mov    ds:0xe637e1b,al
  419591:	in     eax,0xa3
  419593:	fdiv   st(2),st
  419595:	call   0x8683b77f
  41959a:	xchg   dh,al
  41959c:	fwait
  41959d:	ins    BYTE PTR es:[edi],dx
  41959e:	and    bh,BYTE PTR [edx+0x34e4a980]
  4195a4:	fld    TBYTE PTR ds:0xe0e6edc9
  4195aa:	sbb    ah,ah
  4195ac:	xchg   esi,eax
  4195ad:	push   ss
  4195ae:	test   al,0xf9
  4195b0:	xor    ch,dl
  4195b2:	and    eax,0xd065e0d2
  4195b7:	mov    dl,0x76
  4195b9:	xchg   ebx,eax
  4195ba:	xchg   edi,eax
  4195bb:	sub    ah,bl
  4195bd:	pusha  
  4195be:	pushf  
  4195bf:	rcr    DWORD PTR [edx+0x6d],0x37
  4195c3:	scas   al,BYTE PTR es:[edi]
  4195c4:	dec    edx
  4195c5:	mov    cl,0x93
  4195c7:	fld    TBYTE PTR [esi]
  4195c9:	fwait
  4195ca:	pop    ecx
  4195cb:	mov    eax,0xba5cfa89
  4195d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d1:	cmp    DWORD PTR [ebp+0x1e816a8d],0x31
  4195d8:	fisubr DWORD PTR [ebx]
  4195da:	inc    esp
  4195db:	imul   ebp,DWORD PTR [esi-0x53a4606c],0x5b0d650d
  4195e5:	into   
  4195e6:	sahf   
  4195e7:	pop    ss
  4195e8:	or     eax,0x8684e299
  4195ed:	mov    ds:0xca5beab,eax
  4195f2:	pop    ebx
  4195f3:	xor    DWORD PTR [edx+0x2d0535b8],ecx
  4195f9:	mov    ch,0x56
  4195fb:	pushf  
  4195fc:	sbb    eax,0x9aa62130
  419601:	popf   
  419602:	jo     0x419636
  419604:	mov    eax,ds:0xea9ec9e6
  419609:	jp     0x4195af
  41960b:	shr    BYTE PTR [ebp+0x27],cl
  41960e:	cmp    dh,BYTE PTR [ebx-0x7d]
  419611:	cmp    BYTE PTR [edi+0x47e10631],cl
  419617:	push   ebp
  419618:	or     al,0x17
  41961a:	sbb    al,0x24
  41961c:	mov    ?,ecx
  41961e:	sub    BYTE PTR [edi+0x5ea01e88],al
  419624:	div    DWORD PTR [edi+0x3c]
  419627:	shl    DWORD PTR [eax-0x2b],1
  41962a:	clc    
  41962b:	aad    0xa2
  41962d:	fistp  DWORD PTR [ebx+edx*8+0x4e]
  419631:	retf   
  419632:	mov    BYTE PTR [esi-0x32],bl
  419635:	jmp    0x4196af
  419637:	inc    esp
  419638:	outs   dx,DWORD PTR ds:[esi]
  419639:	and    ebx,DWORD PTR [ebx]
  41963b:	int3   
  41963c:	rcl    bh,cl
  41963e:	inc    edx
  41963f:	jno    0x4195e1
  419641:	xlat   BYTE PTR ds:[ebx]
  419642:	xchg   edx,eax
  419643:	mov    esi,0xeeb7ab65
  419648:	sahf   
  419649:	fidiv  WORD PTR [edi]
  41964b:	pop    ebp
  41964c:	mov    ebp,0xbe239a18
  419651:	push   0xe8e7de8c
  419656:	shr    BYTE PTR [edx-0x16],cl
  419659:	lahf   
  41965a:	and    DWORD PTR [ebp+0x6c],esi
  41965d:	xchg   edx,eax
  41965e:	stos   DWORD PTR es:[edi],eax
  41965f:	or     esi,edx
  419661:	nop
  419662:	jge    0x4195ed
  419664:	cs jns 0x41962e
  419667:	mov    BYTE PTR [ecx+0x45],ch
  41966a:	sti    
  41966b:	mov    dl,0x60
  41966d:	(bad)  
  41966e:	out    0x46,eax
  419670:	adc    ch,BYTE PTR [edi+eax*8-0x35]
  419674:	imul   esp,DWORD PTR [edi+eax*8+0x2e],0x9b954788
  41967c:	shl    al,1
  41967e:	xchg   esp,eax
  41967f:	cmp    DWORD PTR [edi-0xe393659],ebp
  419685:	sbb    eax,0x8348861e
  41968a:	jl     0x419613
  41968c:	xor    BYTE PTR [ebx-0x70349f2f],0x11
  419693:	push   ss
  419694:	iret   
  419695:	sub    BYTE PTR [ebp+0x4b],dl
  419698:	test   al,0x46
  41969a:	add    BYTE PTR [edi+edx*4],ch
  41969d:	pop    edi
  41969e:	aas    
  41969f:	fucomip st,st(3)
  4196a1:	lea    esp,[ecx]
  4196a3:	hlt    
  4196a4:	mov    WORD PTR [ecx],ss
  4196a6:	cdq    
  4196a7:	gs xor ecx,ebp
  4196aa:	jl     0x4196af
  4196ac:	pop    ebx
  4196ad:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4196af:	outs   dx,BYTE PTR ds:[esi]
  4196b0:	mov    DWORD PTR [esp+eiz*2-0x4a],0xd6b4579f
  4196b8:	lahf   
  4196b9:	jecxz  0x4196f2
  4196bb:	adc    BYTE PTR [ecx+eiz*4],ah
  4196be:	jl     0x4196aa
  4196c0:	mov    edi,0x6b920e4d
  4196c5:	dec    ecx
  4196c6:	daa    
  4196c7:	jno    0x41969f
  4196c9:	or     bl,dl
  4196cb:	push   0xa
  4196cd:	(bad)  
  4196ce:	popa   
  4196cf:	cmc    
  4196d0:	fwait
  4196d1:	jecxz  0x41973f
  4196d3:	or     bl,BYTE PTR [eax+0x7f85a1cb]
  4196d9:	push   ds
  4196da:	inc    edx
  4196db:	xchg   edi,eax
  4196dc:	sbb    BYTE PTR [edx*8+0x3a4152a],dl
  4196e3:	pushf  
  4196e4:	(bad)  
  4196e6:	scas   eax,DWORD PTR es:[edi]
  4196e7:	pop    esp
  4196e8:	xor    BYTE PTR [ebx+0x3c],cl
  4196eb:	jmp    FWORD PTR [edx+0xf113717]
  4196f1:	cmp    DWORD PTR [edi+ebp*1],ecx
  4196f4:	dec    eax
  4196f5:	xchg   ecx,eax
  4196f6:	or     BYTE PTR [eax-0x2c0d48dc],al
  4196fc:	sub    ch,BYTE PTR [esi]
  4196fe:	leave  
  4196ff:	addr16 cld 
  419701:	lahf   
  419702:	dec    edi
  419703:	adc    esi,ebp
  419705:	cmc    
  419706:	nop
  419707:	push   ecx
  419708:	cmp    al,0xca
  41970a:	scas   eax,DWORD PTR es:[edi]
  41970b:	fist   DWORD PTR [edx+ebp*1+0x6e]
  41970f:	inc    ebx
  419710:	push   0xbee9682
  419715:	idiv   bl
  419717:	lahf   
  419718:	mov    bl,0x42
  41971a:	addr16 mov eax,0x3206b5fc
  419720:	in     eax,0xdc
  419722:	outs   dx,DWORD PTR ds:[esi]
  419723:	call   0x5f3bf654
  419728:	and    DWORD PTR [edi],ebp
  41972a:	fsub   QWORD PTR [ecx]
  41972c:	enter  0xbb76,0x28
  419730:	retf   0x7332
  419733:	in     al,0x73
  419735:	call   0x4345:0x82dbe068
  41973c:	int3   
  41973d:	xchg   ebx,eax
  41973e:	inc    esi
  41973f:	mov    edi,0x356cc680
  419744:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  419746:	dec    ecx
  419747:	ins    DWORD PTR es:[edi],dx
  419748:	xor    ecx,DWORD PTR [eax+0x45c5def6]
  41974e:	xchg   DWORD PTR [ebx+ecx*8+0x31e298b0],ebx
  419755:	loopne 0x419762
  419757:	out    dx,al
  419758:	ss mov ecx,0xdbbb0b8c
  41975e:	(bad)  
  41975f:	jg     0x419797
  419761:	not    esi
  419763:	push   edi
  419764:	add    BYTE PTR [eax+0x3d66a677],cl
  41976a:	sti    
  41976b:	mov    ecx,0xe2511584
  419770:	or     DWORD PTR [eax-0x2f],0x7cdad957
  419777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419778:	arpl   WORD PTR [ebp-0x3d],bp
  41977b:	fld    DWORD PTR [ebp+0x13]
  41977e:	mov    ch,0xae
  419780:	cld    
  419781:	cmp    eax,0x15aa3e6a
  419786:	test   eax,0xa238b5ec
  41978b:	and    dh,BYTE PTR [ebx+0x4fce065e]
  419791:	popf   
  419792:	push   edi
  419793:	scas   al,BYTE PTR es:[edi]
  419794:	(bad)  
  419795:	aad    0x60
  419797:	div    BYTE PTR [eax]
  419799:	pushf  
  41979a:	or     al,0xd5
  41979c:	cli    
  41979d:	loopne 0x41975f
  41979f:	das    
  4197a0:	sbb    BYTE PTR [ebx-0x64d8e296],al
  4197a6:	jb     0x419779
  4197a8:	mov    BYTE PTR [esi],dl
  4197aa:	jno    0x4197d1
  4197ac:	jle    0x41981b
  4197ae:	fst    QWORD PTR [edx+0x28321073]
  4197b4:	cmp    al,0xed
  4197b6:	add    BYTE PTR [edx-0x43f10174],ah
  4197bc:	mov    bl,0xa9
  4197be:	in     al,dx
  4197bf:	mov    eax,ds:0xa6e1dadf
  4197c4:	int3   
  4197c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197c6:	sbb    al,0xbe
  4197c8:	xchg   ecx,eax
  4197c9:	jmp    0x41978c
  4197cb:	out    0x9e,al
  4197cd:	int    0x6a
  4197cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197d0:	jnp    0x4197ef
  4197d2:	dec    ecx
  4197d3:	enter  0x9d1,0x96
  4197d7:	cmp    eax,0xa79551a4
  4197dc:	fcomi  st,st(4)
  4197de:	push   ss
  4197df:	xor    esi,DWORD PTR [eax]
  4197e1:	fistp  DWORD PTR [esi+ecx*1]
  4197e4:	pushf  
  4197e5:	cli    
  4197e6:	sti    
  4197e7:	inc    edx
  4197e8:	xchg   ebx,eax
  4197e9:	mov    cl,0xdc
  4197eb:	aam    0x9a
  4197ed:	rcr    DWORD PTR [edx-0x39],0x27
  4197f1:	neg    DWORD PTR ds:0xac773142
  4197f7:	inc    eax
  4197f8:	xor    dh,BYTE PTR [esi]
  4197fa:	clc    
  4197fb:	shr    BYTE PTR [esi+ecx*1],cl
  4197fe:	mov    cl,0x5f
  419800:	cwde   
  419801:	sub    dh,BYTE PTR [esi]
  419803:	mov    dh,0xd6
  419805:	dec    ebp
  419806:	hlt    
  419807:	pop    eax
  419808:	jmp    0x35eb:0x1bb43680
  41980f:	mov    cl,0x9a
  419811:	aas    
  419812:	stc    
  419813:	and    al,0x14
  419815:	outs   dx,DWORD PTR ds:[esi]
  419816:	fadd   QWORD PTR [edi+0x7f]
  419819:	pushf  
  41981a:	jne    0x419896
  41981c:	cdq    
  41981d:	mov    BYTE PTR [esi+0x51],al
  419820:	(bad)  
  419821:	adc    eax,0x623a47cb
  419826:	cmc    
  419827:	(bad)  
  419828:	xor    BYTE PTR [ebx],al
  41982a:	xchg   esi,eax
  41982b:	mov    eax,ds:0x865aff1d
  419830:	(bad)  
  419831:	cld    
  419832:	inc    esi
  419833:	adc    edi,ecx
  419835:	dec    ecx
  419836:	cs mov esi,0xec4ea73b
  41983c:	test   BYTE PTR [edi-0x6d5eb5c7],cl
  419842:	mov    dl,0x81
  419844:	xchg   edi,eax
  419845:	pushf  
  419846:	in     al,dx
  419847:	out    0x69,eax
  419849:	pusha  
  41984a:	popa   
  41984b:	mov    WORD PTR cs:[esi+ebx*8],ss
  41984f:	loop   0x4197e4
  419851:	dec    esi
  419852:	js     0x4198c2
  419854:	sbb    BYTE PTR [ecx+0xac2db22],ch
  41985a:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41985c:	in     al,dx
  41985d:	jns    0x41986c
  41985f:	xchg   ebx,eax
  419860:	les    edx,FWORD PTR [esi-0xc]
  419863:	mov    ds,WORD PTR [ecx+ebp*1+0x2ab2847b]
  41986a:	lods   eax,DWORD PTR ds:[esi]
  41986b:	test   BYTE PTR [ecx],cl
  41986d:	shl    BYTE PTR [edi],1
  41986f:	mul    DWORD PTR [esi+0x2a]
  419872:	dec    edx
  419873:	jnp    0x4198e0
  419875:	mov    ebx,0x1acc68ca
  41987a:	icebp  
  41987b:	and    DWORD PTR [ebp+0x7b345bfb],edx
  419881:	fs popa 
  419883:	mov    ds:0xc02fd638,al
  419888:	dec    edx
  419889:	into   
  41988a:	mov    edi,0x507caa9
  41988f:	add    bl,BYTE PTR [ecx+0x725d13a8]
  419895:	imul   ebx,DWORD PTR [eax+0x2611bfc9],0x65768f6f
  41989f:	ss add edi,DWORD PTR fs:[edx]
  4198a3:	data16 ja 0x4198ea
  4198a6:	jmp    0x419887
  4198a8:	scas   al,BYTE PTR es:[edi]
  4198a9:	lods   al,BYTE PTR ds:[esi]
  4198aa:	gs push ecx
  4198ac:	cmp    BYTE PTR [esi+0x3ca1cd90],cl
  4198b2:	fstp   DWORD PTR [ecx+eiz*2+0x20]
  4198b6:	(bad)  
  4198b7:	retf   
  4198b8:	nop
  4198b9:	jae    0x4198c2
  4198bb:	lods   eax,DWORD PTR ds:[esi]
  4198bc:	retf   
  4198bd:	push   edi
  4198be:	stc    
  4198bf:	adc    cl,ah
  4198c1:	dec    esp
  4198c2:	in     eax,dx
  4198c3:	pop    esi
  4198c4:	(bad)
  4198c7:	rcl    dh,1
  4198c9:	(bad)  
  4198cb:	imul   ebp,DWORD PTR [edx+0x5b],0x846c30c1
  4198d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198d3:	push   esi
  4198d4:	and    BYTE PTR [edi],0xd2
  4198d7:	test   edi,0x7149a8ab
  4198dd:	pop    ds
  4198de:	xor    dl,bl
  4198e0:	lods   al,BYTE PTR ds:[esi]
  4198e1:	mov    dh,0xbe
  4198e3:	stos   BYTE PTR es:[edi],al
  4198e4:	xchg   ecx,eax
  4198e5:	jnp    0x41995a
  4198e7:	xor    bh,BYTE PTR [ebp+0x5a]
  4198ea:	xchg   eax,esp
  4198ec:	mov    eax,ds:0x1abb72ce
  4198f1:	fucomi st,st(6)
  4198f3:	enter  0xf6b0,0xb1
  4198f7:	push   edi
  4198f8:	lds    esp,FWORD PTR [edx+eiz*4]
  4198fb:	fisttp QWORD PTR [ecx+0x761e1b8c]
  419901:	rsm    
  419903:	xchg   ebx,eax
  419904:	int3   
  419905:	ins    DWORD PTR es:[edi],dx
  419906:	sub    BYTE PTR [ebp-0x55e0455d],ch
  41990c:	add    DWORD PTR [ebx-0xc],esi
  41990f:	and    DWORD PTR [eax],esp
  419911:	push   edx
  419912:	pop    edx
  419913:	xor    BYTE PTR [ebx+0x5a9bee7f],bh
  419919:	add    ah,dh
  41991b:	stos   BYTE PTR es:[edi],al
  41991c:	hlt    
  41991d:	cld    
  41991e:	push   ds
  41991f:	fisttp QWORD PTR [ebx-0x70]
  419922:	push   edx
  419923:	sub    DWORD PTR [esi],esp
  419925:	sbb    DWORD PTR [esi+ebp*1],ebp
  419928:	add    BYTE PTR [edi+0x39b2d73],dl
  41992e:	in     al,dx
  41992f:	std    
  419930:	ror    BYTE PTR [esi-0x68ed3f9a],1
  419936:	cmp    al,0x87
  419938:	enter  0x1446,0xf5
  41993c:	lds    ebx,FWORD PTR [eax+0x39]
  41993f:	clc    
  419940:	mov    ebp,0xa33653dd
  419945:	jge    0x419965
  419947:	or     cl,BYTE PTR [ebx]
  419949:	aam    0x73
  41994b:	lahf   
  41994c:	xor    ecx,DWORD PTR [ecx]
  41994e:	and    edi,DWORD PTR [eax+eiz*2+0x5f766750]
  419955:	inc    ebx
  419956:	cmp    eax,DWORD PTR [eax-0x3c]
  419959:	pop    ds
  41995a:	push   es
  41995b:	idiv   al
  41995d:	lds    eax,FWORD PTR [ebx-0x5103ce1f]
  419963:	mov    al,ds:0xdcd0900
  419968:	fld    DWORD PTR [ecx]
  41996a:	out    0xe1,al
  41996c:	sbb    BYTE PTR [edx],0x23
  41996f:	mov    ebp,0xedd53ab6
  419974:	lahf   
  419975:	lods   al,BYTE PTR ds:[esi]
  419976:	jg     0x4199f3
  419978:	and    eax,0x3c33f36f
  41997d:	jne    0x419947
  41997f:	clc    
  419980:	rcr    DWORD PTR [ebp+0x2218395b],0xd8
  419987:	sbb    BYTE PTR [esi+0x18],dl
  41998a:	push   ecx
  41998b:	xor    eax,0xfc71b1d3
  419990:	nop    DWORD PTR [eax]
  419993:	xchg   ecx,eax
  419994:	pop    esi
  419995:	mov    ds:0x6f82cb76,al
  41999a:	int3   
  41999b:	dec    esp
  41999c:	xchg   DWORD PTR [esi+0x75541aaf],ebx
  4199a2:	add    edi,0x6
  4199a5:	push   dx
  4199a7:	xor    eax,0xfbc39771
  4199ac:	pop    edi
  4199ad:	lds    esi,FWORD PTR [ecx-0x70]
  4199b0:	or     DWORD PTR [edi-0x3534dbc8],0xa31c3a02
  4199ba:	das    
  4199bb:	cdq    
  4199bc:	ins    DWORD PTR es:[edi],dx
  4199bd:	add    ecx,DWORD PTR [ecx+0x437f3fca]
  4199c3:	xchg   esp,eax
  4199c4:	adc    eax,0xf2503cb8
  4199c9:	and    DWORD PTR [edi],ebp
  4199cb:	cs enter 0xb440,0x4c
  4199d0:	mov    edi,0x524c2ba7
  4199d5:	in     eax,dx
  4199d6:	jae    0x4199e1
  4199d8:	inc    edi
  4199d9:	push   edi
  4199da:	loop   0x4199cd
  4199dc:	adc    eax,0x2b4e5b2a
  4199e1:	mov    bh,0x54
  4199e3:	fiadd  DWORD PTR [ecx+edx*1+0x6bf8e159]
  4199ea:	shl    BYTE PTR [edx-0x33],0x1d
  4199ee:	test   eax,0x3b97b247
  4199f3:	dec    esp
  4199f4:	push   esi
  4199f5:	xchg   esi,eax
  4199f6:	fwait
  4199f7:	(bad)
  4199fa:	inc    ebx
  4199fb:	add    BYTE PTR ds:0xcd3bca57,ch
  419a01:	repnz fs sbb bh,dh
  419a05:	add    eax,0xd3284ba7
  419a0a:	sub    eax,0x4394f01b
  419a0f:	xchg   ecx,eax
  419a10:	outs   dx,DWORD PTR ds:[esi]
  419a11:	mov    eax,ds:0x238a0781
  419a16:	adc    DWORD PTR [eax-0xc40ed90],esp
  419a1c:	add    al,0xbe
  419a1e:	outs   dx,BYTE PTR ds:[esi]
  419a1f:	inc    edx
  419a20:	pop    ss
  419a21:	jmp    0x9b8d962b
  419a26:	cmp    dl,BYTE PTR ds:0x4c6f5626
  419a2c:	ja     0x419a0e
  419a2e:	pop    esi
  419a2f:	mov    al,ds:0x1ef9f93d
  419a34:	xchg   ebp,eax
  419a35:	or     eax,0x112fb9c7
  419a3a:	js     0x419a1b
  419a3c:	mov    ebp,0xa42ac349
  419a41:	lods   eax,DWORD PTR ds:[esi]
  419a42:	shl    DWORD PTR [ebx],1
  419a44:	test   eax,0x6cbe7eb6
  419a49:	cmp    al,0x5e
  419a4b:	mov    ebx,0x55bb2ced
  419a50:	icebp  
  419a51:	outs   dx,DWORD PTR ds:[esi]
  419a52:	fwait
  419a53:	jl     0x419a58
  419a55:	ficomp DWORD PTR [ebx]
  419a57:	es xchg edi,eax
  419a59:	sub    eax,0x5a968fa0
  419a5e:	push   edx
  419a5f:	sbb    ax,0xd916
  419a63:	imul   ebx,DWORD PTR [ebx+ebp*4-0x10],0xd86dabb3
  419a6b:	xor    al,0xac
  419a6d:	push   ss
  419a6e:	cs mov cl,dl
  419a71:	cmp    dh,BYTE PTR [edx+0x7]
  419a74:	sar    BYTE PTR [ebx],1
  419a76:	push   0x8f1ca850
  419a7b:	into   
  419a7c:	sbb    DWORD PTR [ebx],ebx
  419a7e:	add    cl,BYTE PTR [eax]
  419a80:	scas   eax,DWORD PTR es:[edi]
  419a81:	popa   
  419a82:	or     DWORD PTR ds:0x6740f9c1,eax
  419a88:	in     eax,dx
  419a89:	jne    0x419a7d
  419a8b:	push   ss
  419a8c:	mov    esp,0xef800389
  419a91:	sub    bh,BYTE PTR [eax]
  419a93:	and    eax,0x808056ac
  419a98:	jnp    0x419a53
  419a9a:	lods   al,BYTE PTR ds:[esi]
  419a9b:	fisub  WORD PTR [eax]
  419a9d:	mov    ds:0xdd59e9ef,al
  419aa2:	push   ss
  419aa3:	imul   BYTE PTR [edi]
  419aa5:	ja     0x419a9b
  419aa7:	xor    DWORD PTR [ecx+0x3f],eax
  419aaa:	(bad)  
  419aab:	dec    esp
  419aac:	xchg   ecx,eax
  419aad:	inc    eax
  419aae:	cmp    BYTE PTR [ecx],0x23
  419ab1:	pop    edx
  419ab2:	vaddsubps xmm5,xmm6,XMMWORD PTR [eax+0x3eef523]
  419aba:	ficom  WORD PTR [ecx]
  419abc:	pop    ebx
  419abd:	mov    WORD PTR [ebp-0x6],cs
  419ac0:	mov    ebp,0xf7f585f7
  419ac5:	xchg   ebp,eax
  419ac6:	inc    ebx
  419ac7:	mov    ah,0x9d
  419ac9:	outs   dx,DWORD PTR ds:[esi]
  419aca:	in     eax,0xe2
  419acc:	call   0xcbe3f3e7
  419ad1:	push   0xffffffad
  419ad3:	and    eax,0xbccd018d
  419ad8:	fs jae 0x419b22
  419adb:	pop    ebx
  419adc:	pop    esp
  419add:	cs fwait
  419adf:	xchg   esp,eax
  419ae0:	sbb    al,0xc7
  419ae2:	adc    eax,0xc5174a32
  419ae7:	lods   al,BYTE PTR ds:[esi]
  419ae8:	xlat   BYTE PTR ds:[ebx]
  419ae9:	fimul  WORD PTR [ecx+0x35ba2ff5]
  419aef:	mov    BYTE PTR [edi+0x39],0xd
  419af3:	(bad)  
  419af4:	adc    esi,edx
  419af6:	(bad)  
  419af7:	jge    0x419a7c
  419af9:	cld    
  419afa:	mov    al,ds:0x3621e93d
  419aff:	gs iret 
  419b01:	sub    al,BYTE PTR [ebx+0x3e]
  419b04:	lock jecxz 0x419b35
  419b07:	or     eax,0x85f6ee8e
  419b0c:	imul   ebx,DWORD PTR [esi+esi*8],0x3b
  419b10:	jb     0x419b58
  419b12:	sbb    al,0xd7
  419b14:	and    DWORD PTR [esi-0x74],0x46b939de
  419b1b:	inc    ecx
  419b1c:	das    
  419b1d:	and    eax,0x21df86d
  419b22:	mov    ch,0xf
  419b24:	mov    dl,BYTE PTR [edi]
  419b26:	stos   BYTE PTR es:[edi],al
  419b27:	ret    0xaa7a
  419b2a:	pop    edx
  419b2b:	mov    ecx,0x3fa464b2
  419b30:	outs   dx,BYTE PTR ds:[esi]
  419b31:	ja     0x419b4b
  419b33:	(bad)  
  419b34:	iret   
  419b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b36:	jge    0x419b44
  419b38:	sub    al,0x52
  419b3a:	jnp    0x419b8d
  419b3c:	xchg   ebx,eax
  419b3d:	cmp    eax,0x2bfa88f3
  419b42:	addr16 xchg edx,eax
  419b44:	push   ss
  419b45:	and    BYTE PTR [ecx+eax*8+0x49a2bf3f],dl
  419b4c:	cmp    DWORD PTR [ecx-0x6d215191],ebp
  419b52:	jge    0x419adb
  419b54:	call   0x19faf25c
  419b59:	mov    ebx,esi
  419b5b:	push   es
  419b5c:	cmc    
  419b5d:	lock ins BYTE PTR es:[edi],dx
  419b5f:	xchg   esi,eax
  419b60:	xor    eax,DWORD PTR fs:[ebx]
  419b63:	mov    BYTE PTR [edx-0x561e55cb],0x65
  419b6a:	dec    ebx
  419b6b:	(bad)  
  419b6c:	jbe    0x419bde
  419b6e:	adc    BYTE PTR [ebp-0x5f9e8d2a],bl
  419b74:	rol    BYTE PTR [esi-0x6a],1
  419b77:	or     eax,0x47752b62
  419b7c:	xor    al,0xaf
  419b7e:	test   DWORD PTR [ebp+0x71],eax
  419b81:	mov    al,0x16
  419b83:	pusha  
  419b84:	mov    ebp,0xeb2c6321
  419b89:	stos   DWORD PTR es:[edi],eax
  419b8a:	xor    eax,0xd35f3d46
  419b8f:	fstp   DWORD PTR [ebp-0x4b011945]
  419b95:	(bad)  
  419b96:	retf   
  419b97:	in     eax,dx
  419b98:	out    dx,al
  419b99:	(bad)  
  419b9a:	push   eax
  419b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b9c:	xchg   DWORD PTR [ebx+0x17471163],edx
  419ba2:	pop    ebp
  419ba3:	jp     0x419bfb
  419ba5:	push   0x31a76221
  419baa:	cdq    
  419bab:	sub    ch,dl
  419bad:	xchg   ebx,eax
  419bae:	stos   BYTE PTR es:[edi],al
  419baf:	jbe    0x419b7b
  419bb1:	cs je  0x419b92
  419bb4:	mov    dh,BYTE PTR [edi+0x2c]
  419bb7:	or     DWORD PTR [ebp-0x7b2508c0],0x2f
  419bbe:	les    ebx,FWORD PTR [edi]
  419bc0:	inc    edx
  419bc1:	les    ecx,FWORD PTR [edx+ecx*4+0x51]
  419bc5:	mov    eax,0xd1e95e3a
  419bca:	scas   al,BYTE PTR es:[edi]
  419bcb:	mov    ds:0x1a1e9e8c,eax
  419bd0:	mov    bh,0x51
  419bd2:	shl    BYTE PTR [ecx+eax*8+0x54],cl
  419bd6:	rcr    BYTE PTR [ebx-0x54fff71d],0x67
  419bdd:	inc    ebp
  419bde:	inc    ecx
  419bdf:	xchg   ebx,eax
  419be0:	arpl   WORD PTR [edx-0x40183dc0],bp
  419be6:	push   ss
  419be7:	test   DWORD PTR [edx+0x7673814c],edx
  419bed:	(bad)  
  419bee:	aad    0x41
  419bf0:	xchg   edi,eax
  419bf1:	xor    edx,ebx
  419bf3:	pusha  
  419bf4:	pop    esi
  419bf5:	bound  eax,QWORD PTR [esi]
  419bf7:	mov    esi,0xcd8a78f8
  419bfc:	fld    QWORD PTR [edi]
  419bfe:	xchg   DWORD PTR [eax+0x63],ecx
  419c01:	push   esp
  419c02:	adc    al,0x25
  419c04:	outs   dx,DWORD PTR ds:[esi]
  419c05:	test   BYTE PTR [ebx],dh
  419c07:	mov    eax,0x3ef6198e
  419c0c:	push   eax
  419c0d:	xor    al,0x1
  419c0f:	shl    DWORD PTR [ecx],0xdd
  419c12:	lds    ebx,FWORD PTR [ebx+0x14aa31be]
  419c18:	jg     0x419be0
  419c1a:	mov    ebx,edi
  419c1c:	or     DWORD PTR [eax+0x9],ebp
  419c1f:	jmp    0xb0d2:0x4e7111fb
  419c26:	jge    0x419bde
  419c28:	fs ret 0x2d0c
  419c2c:	(bad)  
  419c2d:	push   eax
  419c2e:	fdiv   st(2),st
  419c30:	shr    DWORD PTR [edi+0x5e7bbb6b],cl
  419c36:	test   bh,dl
  419c38:	inc    ecx
  419c39:	or     al,al
  419c3b:	fld    QWORD PTR [ebp-0x4a148840]
  419c41:	loop   0x419bc3
  419c43:	(bad)  
  419c44:	jbe    0x419c3c
  419c46:	sbb    ah,BYTE PTR [eax-0xc]
  419c49:	sbb    BYTE PTR [ecx+0x34],dh
  419c4c:	jmp    0xff2bffa5
  419c51:	(bad)  
  419c52:	or     dl,BYTE PTR [esi]
  419c54:	jmp    0x78b51666
  419c59:	dec    eax
  419c5a:	stos   DWORD PTR es:[edi],eax
  419c5b:	xchg   ecx,eax
  419c5c:	jmp    0x419c65
  419c5e:	das    
  419c5f:	pop    ds
  419c60:	imul   ecx,edx,0xa0b3ce96
  419c66:	enter  0x4951,0x28
  419c6a:	push   eax
  419c6b:	es stc 
  419c6d:	jb     0x419c5a
  419c6f:	aam    0xc
  419c71:	scas   eax,DWORD PTR es:[edi]
  419c72:	push   ebp
  419c73:	ins    DWORD PTR es:[edi],dx
  419c74:	pop    ebp
  419c75:	add    al,BYTE PTR [eax+0x2e91fbd8]
  419c7b:	imul   BYTE PTR [esi]
  419c7d:	in     al,dx
  419c7e:	xor    BYTE PTR [eax],dh
  419c80:	and    al,0xe0
  419c82:	(bad)  
  419c83:	daa    
  419c84:	pop    ecx
  419c85:	mov    BYTE PTR [edi],bl
  419c87:	xor    al,0x7d
  419c89:	out    dx,eax
  419c8a:	hlt    
  419c8b:	fldcw  WORD PTR [ecx]
  419c8d:	or     al,0xca
  419c8f:	inc    eax
  419c90:	cdq    
  419c91:	aad    0x7c
  419c93:	xor    al,0x30
  419c95:	and    al,bh
  419c97:	inc    esi
  419c98:	mov    ds:0x5bbd9595,al
  419c9d:	xchg   DWORD PTR [ebx+0x2c71f0c4],eax
  419ca3:	cwde   
  419ca4:	and    cl,BYTE PTR [esi-0x71]
  419ca7:	and    ebp,ebp
  419ca9:	jl     0x419cb7
  419cab:	pushf  
  419cac:	mov    ds:0xe267daae,al
  419cb1:	das    
  419cb2:	ds js  0x419d2b
  419cb5:	xor    eax,ecx
  419cb7:	fidiv  DWORD PTR [edx*1+0x479b7cf2]
  419cbe:	aas    
  419cbf:	jae    0x419d05
  419cc1:	dec    ebx
  419cc2:	push   cs
  419cc3:	jg     0x419d41
  419cc5:	dec    edx
  419cc6:	into   
  419cc7:	sbb    al,0xab
  419cc9:	sbb    esi,ebx
  419ccb:	scas   eax,DWORD PTR es:[edi]
  419ccc:	mov    ds:0xf144c7b7,eax
  419cd1:	adc    DWORD PTR [ecx-0x43],eax
  419cd4:	inc    esi
  419cd5:	sbb    eax,0x21109698
  419cda:	mov    BYTE PTR [eax+eiz*1+0x6127bff3],0xc9
  419ce2:	dec    edx
  419ce3:	cli    
  419ce4:	adc    ah,BYTE PTR [esi+0x24]
  419ce7:	lods   al,BYTE PTR ds:[esi]
  419ce8:	add    BYTE PTR ds:0xd4b46dd8,ch
  419cee:	sbb    eax,0x57fa42ee
  419cf3:	add    dh,ch
  419cf5:	pop    edx
  419cf6:	push   ds
  419cf7:	inc    ebx
  419cf8:	cs ins BYTE PTR es:[edi],dx
  419cfa:	mov    WORD PTR [edi-0x556f36b0],es
  419d00:	lahf   
  419d01:	cmp    BYTE PTR [edx-0x7b906ff4],dl
  419d07:	(bad)  
  419d08:	sti    
  419d09:	add    BYTE PTR [ebp+edi*4-0x42],dh
  419d0d:	lods   eax,DWORD PTR ds:[esi]
  419d0e:	xor    esi,DWORD PTR [edi]
  419d10:	dec    ebp
  419d11:	inc    eax
  419d12:	xchg   ecx,eax
  419d13:	sbb    eax,0x5925ee5b
  419d18:	cmc    
  419d19:	mov    bl,0x8a
  419d1b:	sbb    BYTE PTR [ecx+0x4d497d1e],al
  419d21:	add    esp,ebx
  419d23:	rcr    esp,1
  419d25:	mov    dl,0x12
  419d27:	adc    dl,BYTE PTR [edi-0x303229ab]
  419d2d:	and    esp,ebp
  419d2f:	mov    cl,0x2f
  419d31:	and    BYTE PTR ds:0x73dad449,0x58
  419d38:	xchg   ecx,eax
  419d39:	or     eax,0x716af2e9
  419d3e:	out    dx,eax
  419d3f:	xchg   esi,eax
  419d40:	jnp    0x419cdd
  419d42:	push   0xd078bc9d
  419d47:	xchg   ebx,eax
  419d48:	out    dx,eax
  419d49:	fwait
  419d4a:	je     0x419d70
  419d4c:	lock dec ebx
  419d4e:	dec    edi
  419d4f:	retf   
  419d50:	push   esi
  419d51:	adc    BYTE PTR [ecx+0x51],0x36
  419d55:	pop    eax
  419d56:	push   eax
  419d57:	cmp    dl,BYTE PTR [ecx]
  419d59:	sar    DWORD PTR ds:0xa02de5db,1
  419d5f:	sbb    bl,BYTE PTR [eax]
  419d61:	mov    bl,0x4d
  419d63:	dec    ebp
  419d64:	iret   
  419d65:	xlat   BYTE PTR ds:[ebx]
  419d66:	pop    eax
  419d67:	ror    DWORD PTR [esi+0x2dd0478e],cl
  419d6d:	mov    bl,0xfb
  419d6f:	xchg   edx,eax
  419d70:	or     ebx,0x494fc5d0
  419d76:	mov    dl,0xba
  419d78:	fsubr  QWORD PTR [eax-0x79]
  419d7b:	or     esp,DWORD PTR [ebx-0x5a1187b8]
  419d81:	adc    BYTE PTR [ecx-0x567cbe6e],bh
  419d87:	push   ebx
  419d88:	loopne 0x419da2
  419d8a:	mov    WORD PTR [ebx+ecx*4],fs
  419d8d:	sbb    bl,dl
  419d8f:	cmp    al,ch
  419d91:	adc    al,0xff
  419d93:	repnz sbb ecx,ebp
  419d96:	xor    ebx,ecx
  419d98:	xor    dh,BYTE PTR [eax+0x7a]
  419d9b:	sbb    DWORD PTR [ecx+esi*2-0x54],ebp
  419d9f:	cdq    
  419da0:	jmp    0x8b79:0xb2c79590
  419da7:	div    DWORD PTR [edx+0x3e2e92c3]
  419dad:	hlt    
  419dae:	call   0xf47b:0x6cb2995d
  419db5:	ror    BYTE PTR [esp+esi*4-0x7f2b7656],cl
  419dbc:	jno    0x419d9d
  419dbe:	inc    ebp
  419dbf:	lods   eax,DWORD PTR ds:[esi]
  419dc0:	jecxz  0x419e1a
  419dc2:	mov    eax,0x957109b5
  419dc7:	xlat   BYTE PTR ds:[ebx]
  419dc8:	cmp    BYTE PTR [ebx],bh
  419dca:	arpl   cx,bp
  419dcc:	add    ch,BYTE PTR [ecx-0x17]
  419dcf:	retf   0xed08
  419dd2:	mov    bl,0xf
  419dd4:	pop    ecx
  419dd5:	pop    edx
  419dd6:	xchg   esp,eax
  419dd7:	stc    
  419dd8:	pop    es
  419dd9:	inc    esi
  419dda:	and    esp,DWORD PTR [ecx+0xd]
  419ddd:	push   esp
  419dde:	add    al,dh
  419de0:	ficomp WORD PTR [ebp-0x59]
  419de3:	sub    DWORD PTR [esp+ebp*1-0x40],esi
  419de7:	pop    esi
  419de8:	clc    
  419de9:	lods   al,BYTE PTR ds:[esi]
  419dea:	mov    fs,WORD PTR [edi]
  419dec:	cmc    
  419ded:	push   0x5c29c125
  419df2:	popf   
  419df3:	inc    edx
  419df4:	and    al,0x7f
  419df6:	adc    esi,DWORD PTR [ebx]
  419df8:	add    al,0x4d
  419dfa:	cdq    
  419dfb:	push   eax
  419dfc:	dec    edi
  419dfd:	add    DWORD PTR [eax],ebp
  419dff:	pop    eax
  419e00:	es clc 
  419e02:	inc    BYTE PTR [esi]
  419e04:	push   0xd
  419e06:	loopne 0x419daa
  419e08:	pop    esp
  419e09:	js     0x419ddc
  419e0b:	xor    ebx,DWORD PTR [edx-0x78]
  419e0e:	nop
  419e0f:	cmp    DWORD PTR [ebx-0x76],0xffffffd9
  419e13:	pop    esi
  419e14:	jb     0x419e0d
  419e16:	fidiv  WORD PTR [ebp+0x7ed7e3b9]
  419e1c:	cmp    bl,BYTE PTR [edi-0x7004d134]
  419e22:	mov    DWORD PTR fs:[esi+0x2c],ebp
  419e26:	in     eax,dx
  419e27:	mov    bl,BYTE PTR [edi+edx*1+0x4c8bb4fa]
  419e2e:	in     al,dx
  419e2f:	lahf   
  419e30:	pop    esp
  419e31:	in     eax,dx
  419e32:	mov    dh,0x30
  419e34:	rol    BYTE PTR [edx+0x66fdb429],1
  419e3a:	xchg   edx,eax
  419e3b:	ror    DWORD PTR [ebp+0x68cda35b],cl
  419e41:	sbb    al,0xea
  419e43:	or     dh,BYTE PTR [ecx+0x3fd82abd]
  419e49:	(bad)  
  419e4a:	fld    QWORD PTR [ebx+0x88a3d49]
  419e50:	out    dx,al
  419e51:	dec    ebp
  419e52:	outs   dx,BYTE PTR ds:[esi]
  419e53:	mov    edi,0x3b5f10d6
  419e58:	xor    eax,0xf763109e
  419e5d:	scas   eax,DWORD PTR es:[edi]
  419e5e:	push   edi
  419e5f:	bound  ebx,QWORD PTR [eax+esi*8-0x52]
  419e63:	push   ebx
  419e64:	shl    ebp,cl
  419e66:	test   al,0x14
  419e68:	and    DWORD PTR [esi+0x28],ebx
  419e6b:	adc    dl,cl
  419e6d:	xor    esi,edx
  419e6f:	repz fstp QWORD PTR [eax]
  419e72:	cmp    BYTE PTR [esi],0xe5
  419e75:	dec    edx
  419e76:	iret   
  419e77:	and    eax,0xad8e8623
  419e7c:	cmp    ah,BYTE PTR [ebp-0xe91b998]
  419e82:	add    cl,BYTE PTR [edi+esi*1-0x33]
  419e86:	or     eax,0x77ce7571
  419e8b:	jns    0x419ef8
  419e8d:	sbb    esi,DWORD PTR [ebp+0x620b294b]
  419e93:	push   es
  419e94:	xchg   ecx,eax
  419e95:	(bad)  
  419e96:	push   ss
  419e97:	mov    DWORD PTR [ebx+eiz*8-0xbb66d59],ecx
  419e9e:	sbb    BYTE PTR [esi-0x2b],dl
  419ea1:	pop    esi
  419ea2:	pop    ecx
  419ea3:	xor    esi,ecx
  419ea5:	popf   
  419ea6:	jnp    0x419e62
  419ea8:	dec    edi
  419ea9:	mov    ecx,0x12ab02fe
  419eae:	lods   al,BYTE PTR ds:[esi]
  419eaf:	jecxz  0x419efd
  419eb1:	xor    esi,DWORD PTR [esi-0x12]
  419eb4:	cmp    edi,DWORD PTR [esi]
  419eb6:	xlat   BYTE PTR ds:[ebx]
  419eb7:	pushf  
  419eb8:	add    DWORD PTR [edi-0x6f],ebx
  419ebb:	sub    eax,0x62d79729
  419ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ec1:	scas   al,BYTE PTR es:[edi]
  419ec2:	out    0xd3,al
  419ec4:	ja     0x419f37
  419ec6:	rcr    DWORD PTR [esi+0x1afc44d5],0x6f
  419ecd:	enter  0xb2ab,0x1e
  419ed1:	enter  0x143c,0x2b
  419ed5:	imul   edx,DWORD PTR [ecx+0x19],0x73439ed6
  419edc:	add    esi,esp
  419ede:	mov    ds:0xf028a282,al
  419ee3:	jns    0x419f30
  419ee5:	mov    al,0x86
  419ee7:	and    DWORD PTR [ebx-0x3c],ebp
  419eea:	std    
  419eeb:	repnz fdivr DWORD PTR [ecx]
  419eee:	add    BYTE PTR [ecx-0x64],dl
  419ef1:	sti    
  419ef2:	cld    
  419ef3:	test   ch,0xf6
  419ef6:	repz pop ebx
  419ef8:	sar    BYTE PTR [eax-0x26],1
  419efb:	dec    esi
  419efc:	and    ch,BYTE PTR [eax]
  419efe:	cmc    
  419eff:	retf   0x8f3e
  419f02:	icebp  
  419f03:	and    bh,BYTE PTR [esi+0x2947edf7]
  419f09:	nop
  419f0a:	in     eax,0xca
  419f0c:	fild   DWORD PTR [esi-0x43f02a36]
  419f12:	lods   eax,DWORD PTR ds:[esi]
  419f13:	mov    BYTE PTR [edi],dh
  419f15:	adc    DWORD PTR [edi+edx*1+0x3b3e1137],0xffffffc5
  419f1d:	pop    ss
  419f1e:	jg     0x419f7a
  419f20:	push   edx
  419f21:	ret    0x8347
  419f24:	mov    ebx,0xb0742dfc
  419f29:	mov    ebp,0x5cf8701f
  419f2e:	lods   al,BYTE PTR ds:[esi]
  419f30:	jg     0x419f26
  419f32:	xor    dh,ah
  419f34:	mov    DWORD PTR [edx-0x12],esp
  419f37:	outs   dx,BYTE PTR ds:[esi]
  419f38:	(bad)  
  419f39:	clc    
  419f3a:	cmp    bh,BYTE PTR [edi]
  419f3c:	pop    ecx
  419f3d:	jo     0x419f10
  419f3f:	sbb    dl,BYTE PTR [esi]
  419f41:	inc    edi
  419f42:	jge    0x419f9e
  419f44:	and    DWORD PTR [edi-0x6fa1d0e3],ebp
  419f4a:	call   0x5194:0xd269b4c3
  419f51:	cli    
  419f52:	(bad)  
  419f53:	daa    
  419f54:	mov    esp,ds
  419f56:	push   edx
  419f57:	xchg   DWORD PTR [edx],eax
  419f59:	mov    BYTE PTR [ebx],ch
  419f5b:	not    esi
  419f5d:	aad    0x4f
  419f5f:	pop    es
  419f60:	jb     0x419f3d
  419f62:	sbb    bl,0x55
  419f65:	lds    edi,FWORD PTR [ebx]
  419f67:	push   eax
  419f68:	push   ds
  419f69:	xchg   ecx,eax
  419f6a:	call   0xdff5a1cd
  419f6f:	ret    
  419f70:	or     eax,0x387a3875
  419f75:	imul   edx,DWORD PTR [ebp+0x71],0xffffffd8
  419f79:	rcl    ecx,cl
  419f7b:	fistp  DWORD PTR [ebx+ebp*8]
  419f7e:	sub    BYTE PTR [edx-0x1b],bl
  419f81:	popa   
  419f82:	adc    BYTE PTR [edi],0x51
  419f85:	jge    0x419f79
  419f87:	pop    ebx
  419f88:	sbb    ebp,edx
  419f8a:	pop    esp
  419f8b:	outs   dx,DWORD PTR gs:[esi]
  419f8d:	or     DWORD PTR [edx-0x2787a914],ebx
  419f93:	into   
  419f94:	and    BYTE PTR [eax+0x25],dl
  419f97:	xchg   esp,eax
  419f98:	dec    ecx
  419f99:	adc    edi,DWORD PTR gs:[esi+0x0]
  419f9d:	stc    
  419f9e:	scas   al,BYTE PTR es:[edi]
  419f9f:	cdq    
  419fa0:	push   0xffffffdf
  419fa2:	inc    ebx
  419fa3:	mov    ebp,0xdc079fb5
  419fa8:	out    dx,al
  419fa9:	shl    edx,cl
  419fab:	xchg   ebp,eax
  419fac:	sub    esi,esp
  419fae:	jo     0x419fa3
  419fb0:	mov    edx,0x95e2d4ac
  419fb5:	mov    ch,0xae
  419fb7:	jmp    0x419fb9
  419fb9:	fwait
  419fba:	xor    DWORD PTR [ecx],0xa81923d9
  419fc0:	sti    
  419fc1:	(bad)  
  419fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc3:	fs add al,0x46
  419fc6:	mov    WORD PTR [edx+0x15],cs
  419fc9:	out    0x61,al
  419fcb:	xchg   BYTE PTR [edi+0x36],dl
  419fce:	sti    
  419fcf:	out    dx,al
  419fd0:	lock jne 0x419fe7
  419fd3:	fwait
  419fd4:	or     edx,esi
  419fd6:	aam    0x31
  419fd8:	push   eax
  419fd9:	sbb    BYTE PTR [ebx+0x5f],bh
  419fdc:	arpl   WORD PTR [eax+0x7a],cx
  419fdf:	aam    0x51
  419fe1:	out    dx,al
  419fe2:	push   0xffffffee
  419fe4:	dec    edx
  419fe5:	cmp    DWORD PTR [ebx-0x23c8a6ff],0x332fb7d2
  419fef:	pop    es
  419ff0:	stos   DWORD PTR es:[edi],eax
  419ff1:	js     0x419fa9
  419ff3:	pop    ss
  419ff4:	push   ds
  419ff5:	pushf  
  419ff6:	sub    edi,DWORD PTR [ecx-0x75a3c594]
  419ffc:	fnstenv [ebx]
  419ffe:	std    
  419fff:	pop    esi
  41a000:	fwait
  41a001:	jecxz  0x41a070
  41a003:	loope  0x419fe0
  41a005:	xchg   esi,eax
  41a006:	mov    edx,DWORD PTR [edx+0x3ec1579c]
  41a00c:	(bad)  
  41a00d:	in     al,0x97
  41a00f:	jp     0x41a085
  41a011:	add    edx,DWORD PTR [edx*4-0x158b95ef]
  41a018:	hlt    
  41a019:	add    BYTE PTR [ebx+ecx*4-0x7712d772],cl
  41a020:	sbb    eax,0x78d22086
  41a025:	fdivr  st(6),st
  41a027:	pop    ebp
  41a028:	pop    ecx
  41a029:	and    DWORD PTR [ebx-0x44],ecx
  41a02c:	cli    
  41a02d:	mov    bh,0xec
  41a02f:	adc    al,0x96
  41a031:	fidiv  WORD PTR ds:0x5caf4d14
  41a037:	and    BYTE PTR [eax+0x2d16091a],bh
  41a03d:	xchg   esi,eax
  41a03e:	test   BYTE PTR [eax+0x70ad59bf],0x6c
  41a045:	mov    esp,0x1905238b
  41a04a:	fidiv  WORD PTR [esp+edi*8-0x523f82d8]
  41a051:	ins    DWORD PTR es:[edi],dx
  41a052:	sub    eax,DWORD PTR [ebp-0x491a687a]
  41a058:	imul   esi,DWORD PTR [esi+ebx*8+0x6801993f],0x4522dac2
  41a063:	stos   DWORD PTR es:[edi],eax
  41a064:	nop
  41a065:	push   0xffffffed
  41a067:	xchg   BYTE PTR [eax+0x38186e8a],al
  41a06d:	jg     0x419ffb
  41a06f:	add    eax,0x2aaec8f
  41a074:	sub    esp,DWORD PTR [ecx+0x667ddcd]
  41a07a:	icebp  
  41a07b:	iret   
  41a07c:	sub    BYTE PTR [ebx+eiz*2-0x41705dc8],ch
  41a083:	sti    
  41a084:	ins    DWORD PTR es:[edi],dx
  41a085:	ds dec edi
  41a087:	push   cs
  41a088:	ss dec ecx
  41a08a:	pop    eax
  41a08b:	pop    ebp
  41a08c:	xor    DWORD PTR [edi],0x7ecd3072
  41a092:	mul    BYTE PTR [edi-0x43]
  41a095:	popf   
  41a096:	loop   0x41a086
  41a098:	retf   0xc306
  41a09b:	mov    bh,0x75
  41a09d:	rcl    BYTE PTR [esi+0x34],cl
  41a0a0:	dec    esp
  41a0a1:	xor    eax,0x2a6accd1
  41a0a6:	call   0x7406:0x56683707
  41a0ad:	jmp    0xf0a7:0x9172f6fb
  41a0b4:	pushf  
  41a0b5:	mov    esp,0x31b7ce88
  41a0ba:	addr16 pop esi
  41a0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0bd:	pushf  
  41a0be:	cmp    esi,DWORD PTR [edx+0x3b]
  41a0c1:	scas   eax,DWORD PTR es:[edi]
  41a0c2:	adc    DWORD PTR [edx+0x35174eea],0x58208736
  41a0cc:	aaa    
  41a0cd:	(bad)  
  41a0ce:	jg     0x41a12d
  41a0d0:	push   ecx
  41a0d1:	mov    ah,0xd0
  41a0d3:	add    ecx,DWORD PTR [edx]
  41a0d5:	cmp    edx,DWORD PTR [esi-0x26285f80]
  41a0db:	mov    bh,0xcd
  41a0dd:	addr16 js 0x41a0b1
  41a0e0:	adc    DWORD PTR [ecx-0x1],ebx
  41a0e3:	pop    ebx
  41a0e4:	test   eax,0x5ebc96a3
  41a0e9:	in     eax,dx
  41a0ea:	xor    eax,0x69a03ac1
  41a0ef:	iret   
  41a0f0:	mov    bl,0xa
  41a0f2:	mov    esi,0x854668a6
  41a0f7:	sub    al,al
  41a0f9:	sub    eax,0x52bd1869
  41a0fe:	cmp    BYTE PTR ds:0x62620a8c,bl
  41a104:	adc    BYTE PTR [esi-0xdd1e569],ah
  41a10a:	xor    ch,BYTE PTR [edx]
  41a10c:	push   0x58
  41a10e:	adc    al,0xa6
  41a110:	ror    edx,1
  41a112:	inc    eax
  41a113:	neg    BYTE PTR [ecx-0x3b]
  41a116:	mov    ds:0x78563b7a,eax
  41a11b:	add    eax,0x75603a64
  41a120:	dec    ebx
  41a121:	cld    
  41a122:	push   esi
  41a123:	stos   BYTE PTR es:[edi],al
  41a124:	sbb    bh,BYTE PTR [ecx]
  41a126:	js     0x41a0b4
  41a128:	push   esi
  41a129:	lock sub BYTE PTR [edx-0x2435e9c2],bl
  41a130:	or     eax,0xddf3974d
  41a135:	mov    edi,0x9274a0c
  41a13a:	sub    al,0x2d
  41a13c:	add    eax,0xd87d49b3
  41a141:	xchg   esp,eax
  41a142:	mov    ch,0x6d
  41a144:	adc    bh,ah
  41a146:	xchg   ebx,eax
  41a147:	xchg   BYTE PTR [ebp+0x2d],bh
  41a14a:	pop    ss
  41a14b:	mov    esi,0x860c51c6
  41a150:	call   0xc0a1:0x3206f6c3
  41a157:	aam    0xc1
  41a159:	mov    dl,0x1c
  41a15b:	inc    ebp
  41a15c:	cdq    
  41a15d:	xchg   ecx,eax
  41a15e:	sbb    ecx,ecx
  41a160:	mov    ah,0xd4
  41a162:	lock push ss
  41a164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a165:	pusha  
  41a166:	cs popa 
  41a168:	jge    0x41a10e
  41a16a:	sub    bl,BYTE PTR [esi-0x2509ed7a]
  41a170:	repnz (bad) 
  41a172:	stc    
  41a173:	jmp    0x41a19c
  41a175:	(bad)  
  41a176:	mov    edx,0x2751b732
  41a17b:	push   ebx
  41a17c:	xchg   bl,dh
  41a17e:	repz sub eax,0x7c011efb
  41a184:	outs   dx,DWORD PTR ds:[esi]
  41a185:	mov    bl,0x97
  41a187:	or     ah,BYTE PTR [esi+0x6620c988]
  41a18d:	lods   al,BYTE PTR ds:[esi]
  41a18e:	inc    ebp
  41a18f:	xlat   BYTE PTR ds:[ebx]
  41a190:	mov    ebx,0x1501a350
  41a195:	inc    edx
  41a196:	shr    BYTE PTR [edi],1
  41a198:	push   esi
  41a199:	test   bh,ah
  41a19b:	xor    eax,0x110f7ec
  41a1a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1a1:	dec    edx
  41a1a2:	fstp   QWORD PTR [esi]
  41a1a4:	jp     0x41a12b
  41a1a6:	mov    ecx,0x55bc44b7
  41a1ab:	jmp    0x4fbd:0x41f8eead
  41a1b2:	jg     0x41a225
  41a1b4:	out    dx,eax
  41a1b5:	jno    0x41a14a
  41a1b7:	stos   BYTE PTR es:[edi],al
  41a1b8:	add    esi,DWORD PTR [ebx-0x22]
  41a1bb:	shl    ecx,cl
  41a1bd:	push   edx
  41a1be:	push   esp
  41a1bf:	mov    ds:0xab660f83,al
  41a1c4:	sbb    al,0xc5
  41a1c6:	loopne 0x41a1b7
  41a1c8:	xor    edx,DWORD PTR [edi+0x3681187]
  41a1ce:	mov    ch,0x8a
  41a1d0:	pop    esi
  41a1d1:	dec    ebx
  41a1d2:	lods   eax,DWORD PTR ds:[esi]
  41a1d3:	cmp    eax,DWORD PTR [ebp+eiz*1-0x58]
  41a1d7:	mov    ds:0x5864eec2,al
  41a1dc:	sbb    al,0x46
  41a1de:	push   esp
  41a1df:	add    DWORD PTR [edi+0xe],esi
  41a1e2:	fild   WORD PTR [edx-0x78b0e77]
  41a1e8:	inc    esp
  41a1e9:	adc    al,BYTE PTR [esi]
  41a1eb:	fst    DWORD PTR [edx]
  41a1ed:	jbe    0x41a1ff
  41a1ef:	or     al,0x9c
  41a1f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1f2:	dec    esi
  41a1f3:	cs xor eax,0xd668471e
  41a1f9:	sub    bl,BYTE PTR es:[edx]
  41a1fc:	ret    0x4273
  41a1ff:	stc    
  41a200:	fmul   DWORD PTR [edi]
  41a202:	loopne 0x41a261
  41a204:	sub    eax,0x8481738c
  41a209:	in     eax,0xbc
  41a20b:	pop    ebx
  41a20c:	pop    edx
  41a20d:	or     esi,edi
  41a20f:	loop   0x41a285
  41a211:	mov    cl,0x56
  41a213:	or     ch,bh
  41a215:	mov    esp,0xae3b9a7e
  41a21a:	push   edi
  41a21b:	xchg   esp,eax
  41a21c:	(bad)  
  41a21e:	fwait
  41a21f:	xchg   ebx,eax
  41a220:	mov    edx,0x495316e5
  41a225:	push   eax
  41a226:	mov    edi,DWORD PTR [ecx-0x38]
  41a229:	jae    0x41a240
  41a22b:	adc    DWORD PTR [eax+0x7c],ebp
  41a22e:	mov    WORD PTR [edx],gs
  41a230:	ja     0x41a2a1
  41a232:	popa   
  41a233:	movaps XMMWORD PTR [eax+0x2f6fa054],xmm1
  41a23a:	sub    BYTE PTR [esi-0x64],dl
  41a23d:	mov    edx,ebp
  41a23f:	pop    edi
  41a240:	add    ecx,ebp
  41a242:	inc    ebx
  41a243:	mov    ecx,0xd5ca22f1
  41a248:	nop
  41a249:	push   ss
  41a24a:	inc    edx
  41a24b:	lods   al,BYTE PTR ds:[esi]
  41a24c:	vunpcklps ymm2,ymm3,YMMWORD PTR [ecx]
  41a250:	lods   al,BYTE PTR ds:[esi]
  41a251:	call   0x3fab:0xd9160d0e
  41a258:	ins    BYTE PTR es:[edi],dx
  41a259:	xor    bl,BYTE PTR [edi-0x2bd9b590]
  41a25f:	push   esp
  41a260:	lock adc dl,dl
  41a263:	cmp    al,0xc0
  41a265:	inc    edi
  41a266:	adc    al,al
  41a268:	mov    cl,0xa8
  41a26a:	ret    
  41a26b:	lahf   
  41a26c:	loop   0x41a2d6
  41a26e:	imul   edi,esi,0x17
  41a271:	add    ecx,DWORD PTR [edi+0xf474f02]
  41a277:	push   esi
  41a278:	fsin   
  41a27a:	in     eax,0x11
  41a27c:	or     ecx,DWORD PTR [ebp+esi*1-0x76]
  41a280:	fcom   DWORD PTR [edx-0x5ad964e4]
  41a286:	adc    DWORD PTR [esi],ecx
  41a288:	add    DWORD PTR [eax-0x32],ebp
  41a28b:	xchg   edx,eax
  41a28c:	out    dx,al
  41a28d:	std    
  41a28e:	pop    esi
  41a28f:	lea    edx,[ebx]
  41a291:	aas    
  41a292:	test   DWORD PTR [ecx-0x50],ebp
  41a295:	adc    BYTE PTR [eax],ch
  41a297:	push   esi
  41a298:	jge    0x41a275
  41a29a:	mov    BYTE PTR [eax+0x6c],bl
  41a29d:	rcl    DWORD PTR [ecx-0x70b429c5],1
  41a2a3:	or     ebp,eax
  41a2a5:	(bad)  
  41a2a6:	cmc    
  41a2a7:	jp     0x41a23a
  41a2a9:	push   ebp
  41a2aa:	or     DWORD PTR [esi-0x1f],ebp
  41a2ad:	pop    ss
  41a2ae:	pop    ecx
  41a2af:	mov    dh,0x6d
  41a2b1:	and    al,0x80
  41a2b3:	cld    
  41a2b4:	call   0xa7d67b0f
  41a2b9:	add    DWORD PTR [edx+0x73],ecx
  41a2bc:	lock ins BYTE PTR es:[edi],dx
  41a2be:	ss mov dh,0xbb
  41a2c1:	push   ss
  41a2c2:	mov    dl,BYTE PTR [edi]
  41a2c4:	sbb    DWORD PTR [edi+0x69],ecx
  41a2c7:	xlat   BYTE PTR cs:[ebx]
  41a2c9:	das    
  41a2ca:	les    ebx,FWORD PTR [ebx-0x4232c93e]
  41a2d0:	popf   
  41a2d1:	jbe    0x41a281
  41a2d3:	and    eax,0xf57a5288
  41a2d8:	xchg   esp,eax
  41a2d9:	jp     0x41a2fb
  41a2db:	sahf   
  41a2dc:	xchg   ebx,eax
  41a2dd:	fsubr  st(3),st
  41a2df:	and    eax,0x106cb3b6
  41a2e4:	je     0x41a288
  41a2e6:	fmul   QWORD PTR [esi-0x45]
  41a2e9:	lods   eax,DWORD PTR ds:[esi]
  41a2ea:	std    
  41a2eb:	mov    cl,0xa8
  41a2ed:	stos   BYTE PTR es:[edi],al
  41a2ee:	push   esp
  41a2ef:	cmp    al,0xe1
  41a2f1:	inc    esi
  41a2f2:	int3   
  41a2f3:	add    bh,bh
  41a2f5:	and    al,0xdb
  41a2f7:	pusha  
  41a2f8:	cdq    
  41a2f9:	mov    ecx,0xbb2b5d23
  41a2fe:	aaa    
  41a2ff:	mov    ecx,0x9ac3d0d3
  41a304:	jnp    0x41a321
  41a306:	mov    eax,0xe42bf80f
  41a30b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30c:	rcr    DWORD PTR [eax-0x39],1
  41a30f:	sub    eax,0x21f8fbaa
  41a314:	std    
  41a315:	mov    fs,ebx
  41a317:	cs enter 0x14ee,0xd0
  41a31c:	mov    esp,0x4f5309bc
  41a321:	sbb    DWORD PTR [eax-0x5c],edx
  41a324:	mov    bh,0x7f
  41a326:	dec    ecx
  41a327:	bound  esp,QWORD PTR [edx]
  41a329:	fcom   QWORD PTR ds:0x65b28aaa
  41a32f:	lods   al,BYTE PTR ds:[esi]
  41a330:	fld    QWORD PTR [edx]
  41a332:	adc    bh,BYTE PTR [ebp-0x5986464f]
  41a338:	hlt    
  41a339:	push   cs
  41a33a:	cs pop edi
  41a33c:	popa   
  41a33d:	jb     0x41a323
  41a33f:	loopne 0x41a319
  41a341:	pop    edi
  41a342:	mov    DWORD PTR [edi+eiz*4],edx
  41a345:	add    al,0x30
  41a347:	mov    WORD PTR gs:[edx+esi*2],gs
  41a34b:	lock push ds
  41a34d:	cs icebp 
  41a34f:	ds pop ecx
  41a351:	shl    dh,1
  41a353:	pop    ecx
  41a354:	js     0x41a2f1
  41a356:	ret    
  41a357:	lods   eax,DWORD PTR ds:[esi]
  41a358:	cs cmp dl,cl
  41a35b:	call   0xf3d4:0xc552a1ac
  41a362:	sub    ch,BYTE PTR [eax-0x6c0ed444]
  41a368:	nop
  41a369:	dec    ebp
  41a36a:	lea    ebx,[ebx]
  41a36c:	push   ebp
  41a36d:	add    edi,DWORD PTR [ebx]
  41a36f:	mov    ecx,0xa40dd755
  41a374:	(bad)  
  41a375:	loop   0x41a33e
  41a377:	addr16 mov ch,0x28
  41a37a:	xchg   DWORD PTR [ecx+edx*8-0x75f6ae1b],ebp
  41a381:	xor    esp,DWORD PTR [ecx-0x42]
  41a384:	cs xchg al,al
  41a387:	test   eax,0xf0ef82ad
  41a38c:	pop    esp
  41a38d:	mov    dl,BYTE PTR [edi+0x49c8bd55]
  41a393:	out    dx,al
  41a394:	adc    eax,0x62e4918f
  41a399:	out    dx,al
  41a39a:	cld    
  41a39b:	ss das 
  41a39d:	icebp  
  41a39e:	int3   
  41a39f:	mov    ds:0xfc9f66b3,eax
  41a3a4:	fdiv   QWORD PTR [eax+eiz*4]
  41a3a7:	xchg   BYTE PTR [ebp+0x4822f4d0],dh
  41a3ad:	sbb    DWORD PTR [edi+0x3d1e5ccf],esi
  41a3b3:	dec    eax
  41a3b4:	fucomip st,st(0)
  41a3b6:	loopne 0x41a3e6
  41a3b8:	daa    
  41a3b9:	aaa    
  41a3ba:	push   ebp
  41a3bb:	and    ah,BYTE PTR [ebx+0x5d288c5c]
  41a3c1:	jecxz  0x41a374
  41a3c3:	(bad)  
  41a3c4:	fisttp QWORD PTR [ebp-0x4fbbdbb6]
  41a3ca:	pop    eax
  41a3cb:	mov    BYTE PTR [edx],bl
  41a3cd:	out    0xc3,eax
  41a3cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3d0:	cmp    dh,BYTE PTR [edx+0x7a9a4b2]
  41a3d6:	or     dh,BYTE PTR [edx]
  41a3d8:	dec    eax
  41a3d9:	pop    ds
  41a3da:	mov    ch,BYTE PTR [ecx+ecx*2-0x6a375e8f]
  41a3e1:	lods   eax,DWORD PTR ds:[esi]
  41a3e2:	sub    al,0x1f
  41a3e4:	mov    WORD PTR [ebx+ebx*2+0x5565e778],ss
  41a3eb:	jns    0x41a43f
  41a3ed:	inc    ebx
  41a3ee:	cmp    eax,0xe45c8c88
  41a3f3:	call   0x488d:0x5aeed6c1
  41a3fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3fb:	stos   DWORD PTR es:[edi],eax
  41a3fc:	fsubr  DWORD PTR [edi+ecx*2-0x33476073]
  41a403:	(bad)  
  41a404:	sbb    edx,DWORD PTR [edi+0x5e]
  41a407:	(bad)  
  41a408:	dec    eax
  41a409:	add    bh,bh
  41a40b:	mov    si,0xb552
  41a40f:	xchg   ebp,eax
  41a410:	mov    al,ds:0xc7622402
  41a415:	xchg   esp,eax
  41a416:	pop    esp
  41a417:	mov    al,0xd3
  41a419:	mov    ds:0xb1de48,al
  41a41e:	xchg   esp,eax
  41a41f:	jmp    0x52d4d4ba
  41a424:	leave  
  41a425:	jns    0x41a488
  41a427:	mov    esp,0x5595f5e0
  41a42c:	ins    WORD PTR es:[edi],dx
  41a42e:	mov    ds:0x92dc0e92,eax
  41a433:	pushf  
  41a434:	dec    eax
  41a435:	jmp    0x9a1:0x337d89b3
  41a43c:	lea    esi,[eax]
  41a43e:	mov    ebx,0x348e240b
  41a443:	mov    eax,ds:0x9442a889
  41a448:	pushf  
  41a449:	cmp    DWORD PTR [esi-0x4c],0x7c
  41a44d:	dec    eax
  41a44e:	pop    ebp
  41a44f:	mov    cl,0x6
  41a451:	push   ebx
  41a452:	dec    ebp
  41a453:	mov    eax,ds:0x67914b79
  41a458:	cwde   
  41a459:	cdq    
  41a45a:	cmp    al,0xb1
  41a45c:	mov    bh,0x71
  41a45e:	loopne 0x41a450
  41a460:	aam    0xac
  41a462:	in     al,0x4a
  41a464:	in     al,dx
  41a465:	stos   DWORD PTR es:[edi],eax
  41a466:	jge    0x41a4b3
  41a468:	cmp    eax,DWORD PTR [eax+ecx*8+0x44662076]
  41a46f:	or     DWORD PTR [eax-0x66],esp
  41a472:	loop   0x41a41c
  41a474:	rcr    dh,0xe
  41a477:	dec    ebx
  41a478:	(bad)  
  41a479:	cmp    eax,0x3bd1fe1d
  41a47e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a47f:	mov    eax,ds:0x9fb33b64
  41a484:	xchg   ebx,eax
  41a485:	mov    bl,0xf6
  41a487:	inc    ebp
  41a488:	sub    esp,eax
  41a48a:	pop    ebp
  41a48b:	popa   
  41a48c:	push   edx
  41a48d:	je     0x41a4b2
  41a48f:	jne    0x41a4ff
  41a491:	sub    eax,DWORD PTR [eax+0x7c444775]
  41a497:	shr    eax,cl
  41a499:	icebp  
  41a49a:	ficom  WORD PTR [esi-0x5471e04e]
  41a4a0:	data16 xlat BYTE PTR ds:[ebx]
  41a4a2:	sub    eax,0xaa9783e8
  41a4a7:	dec    ebp
  41a4a8:	xchg   esp,eax
  41a4a9:	sbb    edi,DWORD PTR [ecx]
  41a4ab:	mov    eax,0x96274453
  41a4b0:	cli    
  41a4b1:	lods   al,BYTE PTR ds:[esi]
  41a4b2:	test   DWORD PTR [esi+0x75],0x7a8a76a2
  41a4b9:	std    
  41a4ba:	lds    edi,FWORD PTR ds:0x359fe6c9
  41a4c0:	inc    ebp
  41a4c1:	sbb    ebx,DWORD PTR [ebx+0x338d9b73]
  41a4c7:	xlat   BYTE PTR ds:[ebx]
  41a4c8:	aad    0xbd
  41a4ca:	dec    eax
  41a4cb:	loope  0x41a502
  41a4cd:	inc    ecx
  41a4ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4cf:	stos   BYTE PTR es:[edi],al
  41a4d0:	(bad)  
  41a4d1:	stc    
  41a4d2:	sahf   
  41a4d3:	mov    edx,0xf9aaefa8
  41a4d8:	lods   al,BYTE PTR ds:[esi]
  41a4d9:	xor    bl,cl
  41a4db:	fisttp WORD PTR ds:0xd31cd21d
  41a4e1:	sahf   
  41a4e2:	je     0x41a505
  41a4e4:	inc    ecx
  41a4e5:	jl     0x41a4c1
  41a4e7:	fwait
  41a4e8:	stc    
  41a4e9:	cmp    eax,0xdc13d64e
  41a4ee:	cmc    
  41a4ef:	call   0x313f:0xc5bae31a
  41a4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4f7:	mov    BYTE PTR [ebp-0x6a13d094],dl
  41a4fd:	xchg   DWORD PTR [esi],edi
  41a4ff:	loopne 0x41a53c
  41a501:	sub    ebx,DWORD PTR [edx+0x6f10ccab]
  41a507:	xor    eax,0xc228ad59
  41a50c:	xor    BYTE PTR [eax-0xa3cfe37],ch
  41a512:	pop    ebp
  41a513:	adc    DWORD PTR [edx+eax*2],0x191e4230
  41a51a:	aad    0xe8
  41a51c:	mov    ds:0xe2f7cbc2,al
  41a521:	inc    esi
  41a522:	mov    ecx,0x6d783ee6
  41a527:	lock fcom DWORD PTR [ebx+0x74]
  41a52b:	pop    edi
  41a52c:	and    ebp,DWORD PTR [eax]
  41a52e:	leave  
  41a52f:	jb     0x41a585
  41a531:	lea    edx,[edi+0x66e662af]
  41a537:	loope  0x41a53f
  41a539:	je     0x41a52e
  41a53b:	aaa    
  41a53c:	adc    ecx,DWORD PTR [ebp+0x74]
  41a53f:	(bad)  
  41a541:	jmp    0x41a54e
  41a543:	enter  0x3627,0x82
  41a547:	imul   eax,edx,0xffffffd6
  41a54a:	inc    esp
  41a54b:	leave  
  41a54c:	into   
  41a54d:	lahf   
  41a54e:	mov    ah,0xde
  41a550:	adc    BYTE PTR [esi-0x28],cl
  41a553:	js     0x41a5a7
  41a555:	pop    ds
  41a556:	ins    BYTE PTR es:[edi],dx
  41a557:	mov    edi,0x7399a925
  41a55c:	sti    
  41a55d:	pop    esp
  41a55e:	mov    ebx,0xf745480
  41a563:	(bad)  
  41a564:	xchg   edi,eax
  41a565:	lea    ebp,[ebx-0x37]
  41a568:	pop    esi
  41a569:	enter  0xf316,0x63
  41a56d:	pusha  
  41a56e:	and    al,0x23
  41a570:	lods   eax,DWORD PTR ds:[esi]
  41a571:	cmp    ebp,DWORD PTR [esi]
  41a573:	ret    0xe5b0
  41a576:	ins    BYTE PTR es:[edi],dx
  41a577:	fwait
  41a578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a579:	shr    BYTE PTR [ecx+0x16],1
  41a57c:	sub    al,0x9b
  41a57e:	mov    ah,0x86
  41a580:	loop   0x41a573
  41a582:	(bad)  
  41a584:	dec    eax
  41a585:	repnz inc edi
  41a587:	cmc    
  41a588:	mov    ebp,DWORD PTR [edi]
  41a58a:	cdq    
  41a58b:	xlat   BYTE PTR ds:[ebx]
  41a58c:	test   BYTE PTR [ebx+0x13a648fd],dh
  41a592:	popf   
  41a593:	xor    BYTE PTR [ecx-0x6e],ah
  41a596:	sub    DWORD PTR [esi],ebp
  41a598:	les    edx,FWORD PTR [eax-0x9]
  41a59b:	cmp    al,0x51
  41a59d:	inc    edx
  41a59e:	loopne 0x41a5fd
  41a5a0:	in     eax,0xe1
  41a5a2:	xchg   ebp,eax
  41a5a3:	or     esi,DWORD PTR [edi]
  41a5a5:	push   edx
  41a5a6:	or     al,0x6a
  41a5a8:	test   DWORD PTR [eax-0x3],ebp
  41a5ab:	pop    edx
  41a5ac:	in     al,0x17
  41a5ae:	test   eax,esp
  41a5b0:	cmp    al,0xee
  41a5b2:	shl    dl,1
  41a5b4:	dec    edx
  41a5b5:	or     esi,esp
  41a5b7:	and    bh,dh
  41a5b9:	cmc    
  41a5ba:	xlat   BYTE PTR ds:[ebx]
  41a5bb:	shl    dh,1
  41a5bd:	adc    DWORD PTR [esi-0x4366781d],0xc64e1454
  41a5c7:	cld    
  41a5c8:	jns    0x41a61e
  41a5ca:	lods   al,BYTE PTR ds:[esi]
  41a5cb:	mov    ch,0x63
  41a5cd:	ret    
  41a5ce:	stc    
  41a5cf:	sbb    al,0x43
  41a5d1:	cmp    al,0x74
  41a5d3:	pushf  
  41a5d4:	gs xor dl,BYTE PTR fs:[eax-0x75]
  41a5d9:	rol    BYTE PTR [edx+0x37],cl
  41a5dc:	adc    esp,DWORD PTR [edx]
  41a5de:	fist   DWORD PTR [edx-0x332690f7]
  41a5e4:	mov    al,0x4
  41a5e6:	push   ds
  41a5e7:	gs fwait
  41a5e9:	call   0x8fe4:0xb52d2b09
  41a5f0:	or     al,0xee
  41a5f2:	test   DWORD PTR [esi],edi
  41a5f4:	mov    ds:0xddbe6889,al
  41a5f9:	push   cs
  41a5fa:	js     0x41a5ab
  41a5fc:	in     eax,0xee
  41a5fe:	xor    BYTE PTR [ebp+0x74df5058],dl
  41a604:	mov    ebp,0x6c141371
  41a609:	push   ecx
  41a60a:	jns    0x41a5b7
  41a60c:	sub    eax,0x4a617ffb
  41a611:	xor    al,0x3b
  41a613:	and    DWORD PTR [ebp-0x51da5fde],ebp
  41a619:	cmp    DWORD PTR ds:0x870d36cf,eax
  41a61f:	outs   dx,BYTE PTR ds:[esi]
  41a620:	(bad)  
  41a622:	test   DWORD PTR [edx-0x32],0xa812f7cb
  41a629:	pop    eax
  41a62a:	mov    edx,0x443d3b9c
  41a62f:	scas   al,BYTE PTR es:[edi]
  41a630:	mov    DWORD PTR [esi+edx*4],ebx
  41a633:	xchg   esp,eax
  41a634:	pusha  
  41a635:	jge    0x41a6a0
  41a637:	inc    esi
  41a638:	daa    
  41a639:	test   BYTE PTR [edx-0x1ea615f4],dh
  41a63f:	inc    BYTE PTR [esi-0x22]
  41a642:	sbb    eax,0x61adefe5
  41a647:	out    dx,al
  41a648:	into   
  41a649:	mov    edi,0xa9c28610
  41a64e:	mov    esi,0xf755df5e
  41a653:	fist   WORD PTR [ebp+esi*2+0x4f826bfe]
  41a65a:	retf   
  41a65b:	jmp    0xe2de:0xb2249e11
  41a662:	js     0x41a63a
  41a664:	enter  0x39fb,0x91
  41a668:	vunpckhpd ymm2,ymm2,YMMWORD PTR [edi+0x9119b4c]
  41a670:	pop    edx
  41a671:	sub    al,0xa3
  41a673:	pop    esi
  41a674:	pop    eax
  41a675:	mov    al,0xc6
  41a677:	dec    ebx
  41a678:	or     al,0x7f
  41a67a:	mov    BYTE PTR [ecx],ch
  41a67c:	jb     0x41a6d8
  41a67e:	rcl    cl,cl
  41a680:	jbe    0x41a6bd
  41a682:	and    al,0x0
  41a684:	mov    bh,0x6d
  41a686:	and    DWORD PTR [esi+0x35],esi
  41a689:	jmp    0xf5c5dbea
  41a68e:	(bad)  
  41a68f:	int3   
  41a690:	push   es
  41a691:	imul   BYTE PTR [edi-0xc]
  41a694:	sub    ebx,ecx
  41a696:	mov    bh,0x7e
  41a698:	fcmovbe st,st(5)
  41a69a:	ret    
  41a69b:	nop    DWORD PTR [ebx+0x4c4c8cce]
  41a6a2:	clc    
  41a6a3:	xchg   edx,eax
  41a6a4:	call   0x2f86aca6
  41a6a9:	ret    0xb5e4
  41a6ac:	or     eax,0x1ce8ed67
  41a6b1:	lock dec ecx
  41a6b3:	std    
  41a6b4:	fild   DWORD PTR [edi-0x1ff27388]
  41a6ba:	jb     0x41a72d
  41a6bc:	call   0x403a4e07
  41a6c1:	call   0x1c5357dd
  41a6c6:	cs pop ebx
  41a6c8:	or     BYTE PTR [ecx],bh
  41a6ca:	(bad)  
  41a6cb:	icebp  
  41a6cc:	or     al,0x8f
  41a6ce:	shl    ebx,cl
  41a6d0:	xor    dh,BYTE PTR [edi+0x21120aac]
  41a6d6:	jg     0x41a6b0
  41a6d8:	dec    esi
  41a6d9:	add    eax,esp
  41a6db:	xor    bh,al
  41a6dd:	gs (bad) 
  41a6df:	in     eax,dx
  41a6e0:	dec    ecx
  41a6e1:	leave  
  41a6e2:	cmp    BYTE PTR [edx+0x18],dh
  41a6e5:	dec    eax
  41a6e6:	daa    
  41a6e7:	sbb    al,0x6e
  41a6e9:	clc    
  41a6ea:	xor    BYTE PTR ds:0xc58530d4,bh
  41a6f0:	push   esp
  41a6f1:	jge    0x41a75c
  41a6f3:	stos   DWORD PTR es:[edi],eax
  41a6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6f5:	clc    
  41a6f6:	cmc    
  41a6f7:	into   
  41a6f8:	push   esi
  41a6f9:	jb     0x41a76d
  41a6fb:	xchg   ebx,eax
  41a6fc:	mov    edi,0xcda36040
  41a701:	mov    eax,0xb9e6c8bd
  41a706:	mov    dl,0x1e
  41a708:	mov    WORD PTR [eax+0x72],ss
  41a70b:	bound  esi,QWORD PTR [ecx]
  41a70d:	ret    
  41a70e:	push   ecx
  41a70f:	in     al,dx
  41a710:	call   0x2ce7:0xb893d7f9
  41a717:	out    dx,al
  41a718:	pop    edx
  41a719:	shl    bl,1
  41a71b:	mov    bl,0xfb
  41a71d:	inc    eax
  41a71e:	imul   esp,DWORD PTR [ecx],0x1304e054
  41a724:	in     eax,dx
  41a725:	scas   eax,DWORD PTR es:[edi]
  41a726:	cmp    al,0x26
  41a728:	dec    eax
  41a729:	mov    ah,BYTE PTR [edx-0x30a3f9eb]
  41a72f:	jmp    0x8be7a1eb
  41a734:	sub    al,0xdd
  41a736:	nop
  41a737:	pop    edx
  41a739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a73a:	bound  edi,QWORD PTR [ebx+0x79]
  41a73d:	push   esi
  41a73e:	xor    DWORD PTR [ebx-0x57],eax
  41a741:	nop
  41a742:	test   DWORD PTR [eax+0x361eb91a],edx
  41a748:	call   0xc6d6fd73
  41a74d:	ss push esp
  41a74f:	es retf 0x1a30
  41a753:	imul   ecx,DWORD PTR [eax+0x65e726da],0x692e9041
  41a75d:	xor    esi,0xc
  41a760:	test   al,0x1c
  41a762:	retf   
  41a763:	sti    
  41a764:	in     eax,dx
  41a765:	xchg   ebx,eax
  41a766:	enter  0x8061,0x19
  41a76a:	add    bl,BYTE PTR [eax]
  41a76c:	in     eax,0x6d
  41a76e:	jecxz  0x41a747
  41a770:	clc    
  41a771:	mov    ebx,0x30986daa
  41a776:	or     BYTE PTR [eax+0x5],al
  41a779:	mov    DWORD PTR [edx+0x5],ecx
  41a77c:	int    0xd0
  41a77e:	(bad)  
  41a77f:	cs xor eax,0x44c8228a
  41a785:	jbe    0x41a79e
  41a787:	push   edi
  41a788:	addr16 retf 
  41a78a:	mov    ch,0x66
  41a78c:	mov    edi,0x8a2aad30
  41a791:	dec    esi
  41a792:	mov    ebx,0x27f7b12
  41a797:	div    bl
  41a799:	jmp    0x41a71b
  41a79b:	sbb    ch,BYTE PTR gs:[ebx]
  41a79e:	sub    DWORD PTR [edi-0x703a732b],eax
  41a7a4:	sahf   
  41a7a5:	test   eax,0xd8ee7ae6
  41a7aa:	mov    cl,0x9b
  41a7ac:	jmp    0x70da054c
  41a7b1:	retf   
  41a7b2:	xchg   edi,eax
  41a7b3:	add    al,0xa
  41a7b5:	je     0x41a73f
  41a7b7:	mov    ebp,0x46a274bc
  41a7bc:	mov    ah,0xd6
  41a7be:	mov    BYTE PTR [edi-0x7b],ch
  41a7c1:	mov    ah,0xa9
  41a7c3:	push   edx
  41a7c4:	or     BYTE PTR [ebx-0x1247eae5],0xce
  41a7cb:	dec    eax
  41a7cc:	push   ds
  41a7cd:	mov    al,0xee
  41a7cf:	pushf  
  41a7d0:	mov    BYTE PTR [edi-0x1b],dh
  41a7d3:	repz loop 0x41a7c7
  41a7d6:	ds sbb dh,bl
  41a7d9:	mov    ds:0x4ed548c7,eax
  41a7de:	std    
  41a7df:	cmp    al,0x50
  41a7e1:	push   edx
  41a7e2:	dec    edi
  41a7e3:	popf   
  41a7e4:	aam    0xe
  41a7e6:	lods   al,BYTE PTR ds:[esi]
  41a7e7:	inc    eax
  41a7e9:	test   eax,0x9da87234
  41a7ee:	sub    ebp,ebp
  41a7f0:	test   al,0xa
  41a7f2:	popf   
  41a7f3:	inc    edx
  41a7f4:	jns    0x41a826
  41a7f6:	outs   dx,BYTE PTR ds:[esi]
  41a7f7:	loope  0x41a7cf
  41a7f9:	imul   eax,DWORD PTR [eax-0x3c6b131],0x21
  41a800:	push   esi
  41a801:	adc    eax,0x336958b
  41a806:	and    ecx,ebx
  41a808:	push   ebp
  41a809:	mov    ebp,ebp
  41a80b:	ret    0x6566
  41a80e:	push   ebx
  41a80f:	data16 jge 0x41a7e0
  41a812:	or     dl,BYTE PTR [ecx-0x2a514e30]
  41a818:	mov    esi,0x287106e7
  41a81d:	push   es
  41a81e:	fild   DWORD PTR [edx]
  41a820:	cmp    al,0xbc
  41a822:	xor    al,0x83
  41a824:	in     eax,0x44
  41a826:	jmp    ebx
  41a828:	cli    
  41a829:	mov    ds:0x1164c975,eax
  41a82e:	dec    ebp
  41a82f:	fild   DWORD PTR [ecx+0x31edcc1]
  41a835:	sub    ebx,DWORD PTR [ecx+0x3d7f4348]
  41a83b:	ja     0x41a82f
  41a83d:	dec    esi
  41a83e:	loopne 0x41a7fa
  41a840:	inc    esp
  41a841:	and    BYTE PTR [ebx+0x566769ba],cl
  41a847:	gs mov ebp,0x8c71aa18
  41a84d:	sub    bh,BYTE PTR [ecx]
  41a84f:	sbb    edx,DWORD PTR [ecx+edi*1-0x70]
  41a853:	nop
  41a854:	xchg   DWORD PTR [eax-0x5c],esp
  41a857:	xor    eax,0xec5fc92
  41a85c:	mov    edi,0xb2c8cf2c
  41a861:	xor    DWORD PTR [ebp-0x2c1ed1ce],edx
  41a867:	outs   dx,BYTE PTR ds:[esi]
  41a868:	aaa    
  41a869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86a:	add    DWORD PTR [ecx],ecx
  41a86c:	or     al,0xf1
  41a86e:	jmp    0x41a880
  41a870:	jne    0x41a836
  41a872:	jl     0x41a818
  41a874:	adc    esp,ecx
  41a876:	repz test eax,eax
  41a879:	in     eax,dx
  41a87a:	inc    eax
  41a87b:	fbld   TBYTE PTR [eax]
  41a87d:	call   0x5baa75bd
  41a882:	or     BYTE PTR ds:0x7392cb5,ah
  41a888:	sbb    DWORD PTR [ecx-0x76],eax
  41a88b:	cld    
  41a88c:	(bad)  
  41a88d:	jl     0x41a8f0
  41a88f:	aas    
  41a890:	mov    ch,BYTE PTR [edx+0x26a6a905]
  41a896:	add    edx,DWORD PTR [ecx+0x2b]
  41a899:	pop    ds
  41a89a:	cdq    
  41a89b:	int3   
  41a89c:	jmp    0x6299:0xc770d10b
  41a8a3:	cmp    BYTE PTR [eax],cl
  41a8a5:	in     eax,0x6b
  41a8a7:	pop    DWORD PTR [edi-0x3b]
  41a8aa:	sub    edx,DWORD PTR [ebx+0x15]
  41a8ad:	mov    ecx,0x24f5fed8
  41a8b2:	dec    esp
  41a8b3:	cmp    DWORD PTR [ebx+0x39184727],esp
  41a8b9:	push   0x1bc72ada
  41a8be:	xchg   edx,eax
  41a8bf:	jl     0x41a92a
  41a8c1:	es push ds
  41a8c3:	pusha  
  41a8c4:	and    BYTE PTR [edi],ch
  41a8c6:	dec    eax
  41a8c7:	div    BYTE PTR [ebp-0x4d0aa383]
  41a8cd:	adc    BYTE PTR [ecx],0x29
  41a8d0:	pop    esp
  41a8d1:	pop    es
  41a8d2:	in     al,0x22
  41a8d4:	sahf   
  41a8d5:	mov    ecx,0x96495cf2
  41a8da:	cmp    al,0x1d
  41a8dc:	nop
  41a8dd:	je     0x41a932
  41a8df:	push   edi
  41a8e0:	jmp    0xac1e2e6
  41a8e5:	sub    DWORD PTR ds:0x14a5f8aa,edi
  41a8eb:	or     bl,BYTE PTR [ebx-0x55]
  41a8ee:	sbb    DWORD PTR [edx+0x4a],edi
  41a8f1:	and    eax,0x5f7b7598
  41a8f6:	add    edi,esp
  41a8f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8f9:	inc    edi
  41a8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8fb:	loopne 0x41a8d0
  41a8fd:	outs   dx,DWORD PTR ds:[esi]
  41a8fe:	adc    BYTE PTR fs:[ecx+0x1f],0x9c
  41a903:	sub    eax,0x36505889
  41a908:	mov    al,ds:0x54f9ce2a
  41a90d:	mov    WORD PTR [ebx+0x60],ss
  41a910:	pop    es
  41a911:	and    esi,ebp
  41a913:	je     0x41a935
  41a915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a916:	adc    esp,edi
  41a918:	push   ebp
  41a919:	pusha  
  41a91a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a91b:	fwait
  41a91c:	(bad)  
  41a91d:	sbb    DWORD PTR [edx],ecx
  41a91f:	xchg   ebp,eax
  41a921:	repz dec esi
  41a923:	mov    ds,edi
  41a925:	cmp    ch,BYTE PTR [ecx]
  41a927:	outs   dx,DWORD PTR ds:[esi]
  41a928:	inc    BYTE PTR [esi]
  41a92a:	jbe    0x41a8b7
  41a92c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a92d:	jb     0x41a9a3
  41a92f:	xor    bl,BYTE PTR [ebx]
  41a931:	xor    ecx,ebp
  41a933:	nop
  41a934:	out    dx,al
  41a935:	cmc    
  41a936:	adc    edx,DWORD PTR [edi]
  41a938:	adc    al,0x1a
  41a93a:	stc    
  41a93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a93c:	sub    BYTE PTR [edi+0x939f911],dh
  41a942:	xchg   ecx,eax
  41a943:	or     eax,0x25f2b672
  41a948:	jb     0x41a998
  41a94a:	adc    dh,dl
  41a94c:	jae    0x41a944
  41a94e:	push   cs
  41a94f:	sub    edx,ebp
  41a951:	mov    ch,0x78
  41a953:	ss or  edx,0xf7a12449
  41a95a:	repnz sub BYTE PTR [edx+ebp*4],0x7b
  41a95f:	call   0x4dfc:0x4c0c65d6
  41a966:	and    BYTE PTR [ecx+0x75],bh
  41a969:	inc    edi
  41a96a:	dec    ebx
  41a96b:	out    0xfc,eax
  41a96d:	jg     0x41a930
  41a96f:	jle    0x41a970
  41a971:	pop    es
  41a972:	jb     0x41a9a0
  41a974:	inc    ebp
  41a975:	xor    ch,dl
  41a977:	popa   
  41a978:	xchg   edx,eax
  41a979:	dec    esi
  41a97a:	in     al,0x69
  41a97c:	jle    0x41a94c
  41a97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97f:	data16 cli 
  41a981:	test   DWORD PTR [ecx+0x6d],0xee5a953a
  41a988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a989:	lahf   
  41a98a:	fnstcw WORD PTR [eax]
  41a98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a98d:	dec    eax
  41a98e:	pop    ebp
  41a98f:	call   0x9338:0x4435d203
  41a996:	pusha  
  41a997:	addr16 pop edi
  41a999:	inc    esi
  41a99a:	out    dx,al
  41a99b:	into   
  41a99c:	pop    ebp
  41a99d:	pop    ebp
  41a99e:	adc    bh,BYTE PTR [esp+eax*4-0x7a17b90f]
  41a9a5:	dec    ebp
  41a9a6:	push   ss
  41a9a7:	and    BYTE PTR [edx],0xe6
  41a9aa:	adc    DWORD PTR [ecx-0x2e],esp
  41a9ad:	and    edx,DWORD PTR [ebx-0x7d5072fa]
  41a9b3:	sbb    DWORD PTR [edi-0x22a23d08],esp
  41a9b9:	mul    bh
  41a9bb:	jb     0x41a979
  41a9bd:	mov    eax,0x286bc032
  41a9c2:	xor    al,cl
  41a9c4:	lods   eax,DWORD PTR fs:[esi]
  41a9c6:	inc    ebp
  41a9c7:	jae    0x41a969
  41a9c9:	je     0x41aa29
  41a9cb:	ficomp DWORD PTR [edi-0x1f06bc8c]
  41a9d1:	mov    DWORD PTR [esi],eax
  41a9d3:	pop    ss
  41a9d4:	jecxz  0x41aa2f
  41a9d6:	out    0x6c,al
  41a9d8:	mov    bl,0x5c
  41a9da:	das    
  41a9db:	daa    
  41a9dc:	jno    0x41aa12
  41a9de:	frstpm(287 only) 
  41a9e0:	out    dx,al
  41a9e1:	fild   WORD PTR [ebp+0x7f6e1bbf]
  41a9e7:	aaa    
  41a9e8:	pop    ebx
  41a9e9:	or     DWORD PTR [ecx-0xc],eax
  41a9ec:	jecxz  0x41aa35
  41a9ee:	add    edx,DWORD PTR [esi+0x638dd39c]
  41a9f4:	mov    ah,0xf9
  41a9f6:	mov    DWORD PTR [edx+0x63],esp
  41a9f9:	adc    DWORD PTR [ebx+0x60],ebx
  41a9fc:	xor    bl,al
  41a9fe:	xor    di,di
  41aa01:	and    eax,0x13240a0b
  41aa07:	jbe    0x41aa48
  41aa09:	bound  esi,QWORD PTR [ebp+0x64]
  41aa0c:	inc    edx
  41aa0d:	fwait
  41aa0e:	out    dx,eax
  41aa0f:	call   0xb813df1d
  41aa14:	retf   0x43b0
  41aa17:	ret    0x3d08
  41aa1a:	(bad)  
  41aa1b:	mov    dh,0x96
  41aa1d:	or     al,0xf2
  41aa1f:	xchg   edx,eax
  41aa20:	push   cs
  41aa21:	lods   eax,DWORD PTR ds:[esi]
  41aa22:	xchg   ebx,eax
  41aa23:	enter  0x290c,0x51
  41aa27:	and    BYTE PTR [edi],cl
  41aa29:	in     al,0x55
  41aa2b:	pop    ss
  41aa2c:	xchg   ebx,eax
  41aa2d:	jl     0x41aa56
  41aa2f:	ror    DWORD PTR [ebp-0x59],1
  41aa32:	mov    bl,0xa0
  41aa34:	jae    0x41aa80
  41aa36:	pop    ecx
  41aa37:	call   0xb92c240
  41aa3c:	out    dx,al
  41aa3d:	jb     0x41aaae
  41aa3f:	pop    ds
  41aa40:	cmp    eax,0xbc3e744
  41aa45:	mov    eax,edx
  41aa47:	pop    ebp
  41aa48:	sahf   
  41aa49:	xor    al,0x78
  41aa4b:	bound  edi,QWORD PTR [ecx+0x5e]
  41aa4e:	inc    ecx
  41aa4f:	stc    
  41aa50:	mov    esp,0x2af1ddab
  41aa55:	adc    BYTE PTR [ebx+0xc],ch
  41aa58:	in     eax,0x53
  41aa5a:	jp     0x41aa05
  41aa5c:	mul    ebp
  41aa5e:	aam    0x8e
  41aa60:	add    DWORD PTR [ebp+0x5a],ebp
  41aa63:	adc    DWORD PTR [eax+0xa],0x98d04452
  41aa6a:	sti    
  41aa6b:	jmp    0x41aa97
  41aa6d:	(bad)  
  41aa6e:	jno    0x41aa98
  41aa70:	mov    bl,0xd8
  41aa72:	cmp    ebx,DWORD PTR gs:[edx+0x6befd085]
  41aa79:	xor    cl,ch
  41aa7b:	not    edi
  41aa7d:	adc    al,0x75
  41aa7f:	call   0xcaf87c02
  41aa84:	int    0x37
  41aa86:	sbb    BYTE PTR [edx-0x19c16849],cl
  41aa8c:	adc    eax,0x3afc5582
  41aa91:	enter  0x1d90,0x51
  41aa95:	pop    edx
  41aa96:	adc    al,0x85
  41aa98:	ins    DWORD PTR es:[edi],dx
  41aa99:	into   
  41aa9a:	adc    eax,0x39f52308
  41aa9f:	sub    dh,BYTE PTR [esi+edi*2-0xb]
  41aaa3:	inc    edx
  41aaa4:	jns    0x41aa7a
  41aaa6:	icebp  
  41aaa7:	mov    al,ds:0x588eb037
  41aaac:	jb     0x41aabe
  41aaae:	add    BYTE PTR [ebx-0x34f78570],bh
  41aab4:	mov    dl,0xd5
  41aab6:	and    al,0xae
  41aab8:	in     al,dx
  41aab9:	push   0x1e2c152a
  41aabe:	xor    ebx,ebx
  41aac0:	daa    
  41aac1:	xor    al,0xc7
  41aac3:	out    0x71,al
  41aac5:	push   edi
  41aac6:	pop    ds
  41aac7:	gs mov edi,0x951086cf
  41aacd:	sub    al,0x7
  41aacf:	mov    al,dh
  41aad1:	jb     0x41aad7
  41aad3:	sbb    dh,BYTE PTR [esi]
  41aad5:	mov    bl,0x8a
  41aad7:	fs nop
  41aad9:	out    dx,eax
  41aada:	retf   0xee59
  41aadd:	sub    ebx,edx
  41aadf:	jae    0x41ab36
  41aae1:	lea    ecx,[esp+ecx*1-0x4e]
  41aae5:	pop    eax
  41aae6:	push   ecx
  41aae7:	mov    edi,0xd2b106c4
  41aaec:	mov    ebx,0x3d398b0d
  41aaf1:	pushf  
  41aaf2:	fisubr WORD PTR [eax-0x53]
  41aaf5:	inc    esp
  41aaf6:	push   esp
  41aaf7:	mov    DWORD PTR [ebp+0x6f],eax
  41aafa:	repnz retf 0x8894
  41aafe:	rcr    DWORD PTR [edx+0x6f58a7ef],0xcd
  41ab05:	add    edi,DWORD PTR [ecx+0x53]
  41ab08:	dec    eax
  41ab09:	sbb    al,BYTE PTR [edx+0x689d6fb9]
  41ab0f:	(bad)  
  41ab10:	jns    0x41ab62
  41ab12:	pop    eax
  41ab13:	jecxz  0x41ab26
  41ab15:	pop    ds
  41ab16:	mov    esp,0x36e811ef
  41ab1b:	adc    edi,DWORD PTR [edi-0x33]
  41ab1e:	out    dx,eax
  41ab1f:	add    al,0x41
  41ab21:	fisub  DWORD PTR [ebx]
  41ab23:	stos   BYTE PTR es:[edi],al
  41ab24:	loope  0x41aaa7
  41ab26:	mov    edx,ds
  41ab28:	jno    0x41aaf8
  41ab2a:	scas   al,BYTE PTR es:[edi]
  41ab2b:	jns    0x41ab67
  41ab2d:	adc    esi,ecx
  41ab2f:	mov    ebp,0x8fd72235
  41ab34:	cmp    al,0x46
  41ab36:	xchg   ebp,eax
  41ab37:	mov    bh,0x2b
  41ab39:	and    BYTE PTR [edi+0x60cce176],cl
  41ab3f:	adc    ebx,0x4cb92911
  41ab45:	outs   dx,BYTE PTR ds:[esi]
  41ab46:	inc    ebp
  41ab47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab48:	in     al,0xab
  41ab4a:	pop    es
  41ab4b:	sub    DWORD PTR [eiz*1+0x52b38fa8],esp
  41ab52:	mov    ?,WORD PTR [eax-0x80f8d00]
  41ab58:	jg     0x41abb7
  41ab5a:	not    BYTE PTR [edx+0x2e2863]
  41ab60:	push   edx
  41ab61:	mov    ch,0xdf
  41ab63:	jb     0x41abb7
  41ab65:	(bad)  
  41ab66:	jae    0x41ab03
  41ab68:	sbb    BYTE PTR [esi-0x31],dh
  41ab6b:	cs inc esp
  41ab6d:	mov    WORD PTR [eax],cs
  41ab6f:	shl    DWORD PTR [edx+0x0],cl
  41ab72:	jmp    0x2ff3:0x23ccd18e
  41ab79:	loop   0x41ab87
  41ab7b:	repnz fild WORD PTR [ecx-0x265cd0cc]
  41ab82:	loop   0x41abb1
  41ab84:	js     0x41ab55
  41ab86:	ins    BYTE PTR es:[edi],dx
  41ab87:	push   cs
  41ab88:	push   ds
  41ab89:	mov    al,ds:0x726724e3
  41ab8e:	cmc    
  41ab8f:	inc    esi
  41ab90:	or     al,0xf9
  41ab92:	mov    dh,al
  41ab94:	pop    esp
  41ab95:	imul   ecx,DWORD PTR [eax],0x637f48a
  41ab9b:	xchg   BYTE PTR [ecx+0x6b],ch
  41ab9e:	sbb    DWORD PTR [ebx-0x19d01cd7],ebp
  41aba4:	or     al,0xa3
  41aba6:	mov    dl,0xd5
  41aba8:	mov    eax,0x7d367321
  41abad:	add    ebx,DWORD PTR ds:0x6f1b1436
  41abb3:	mov    ecx,0xd1cbc485
  41abb8:	iret   
  41abb9:	mov    esp,0x3390de3a
  41abbe:	push   esp
  41abbf:	into   
  41abc0:	adc    BYTE PTR [esp+eiz*8+0x3b],bl
  41abc4:	imul   ebp,edx,0x59bc7ec6
  41abca:	mov    bh,0x47
  41abcc:	inc    edi
  41abcd:	retf   0x4e9b
  41abd0:	fimul  WORD PTR [ebp+0x4c]
  41abd3:	sub    DWORD PTR [ebx+0x6ee16be7],esi
  41abd9:	stos   BYTE PTR es:[edi],al
  41abda:	(bad)  
  41abdb:	mov    dl,0xf3
  41abdd:	sbb    eax,0xefd699ea
  41abe2:	fimul  DWORD PTR [edx-0x34b85ac2]
  41abe8:	lods   eax,DWORD PTR ds:[esi]
  41abe9:	mov    ds:0xd66a3678,eax
  41abee:	call   0x4f7a:0x48d1d5dd
  41abf5:	les    esp,FWORD PTR [ebp+ecx*2-0x60]
  41abf9:	mov    di,0xa3f2
  41abfd:	xchg   BYTE PTR [edx+0x6c],dl
  41ac00:	xchg   DWORD PTR [eax],esp
  41ac02:	popa   
  41ac03:	sub    ch,dl
  41ac05:	je     0x41abf4
  41ac07:	mov    ebp,0x593bed5d
  41ac0c:	cmp    al,0xcb
  41ac0e:	add    BYTE PTR [ebp-0x80],0x83
  41ac12:	iret   
  41ac13:	std    
  41ac14:	test   ecx,ecx
  41ac16:	xor    al,0xf2
  41ac18:	cmp    eax,0xd96ab12
  41ac1d:	inc    eax
  41ac1e:	(bad)  
  41ac20:	outs   dx,DWORD PTR ds:[esi]
  41ac21:	mov    eax,ds:0x676254f7
  41ac26:	dec    eax
  41ac27:	gs ret 
  41ac29:	ja     0x41abe5
  41ac2b:	idiv   BYTE PTR [edi+0x108513ad]
  41ac31:	out    0x4f,al
  41ac33:	sub    edx,ebp
  41ac35:	sub    al,0x51
  41ac37:	enter  0xbf85,0xf7
  41ac3b:	adc    BYTE PTR [eax+0x65],bl
  41ac3e:	pusha  
  41ac3f:	call   0xd50b92fb
  41ac44:	or     al,0x5e
  41ac46:	add    BYTE PTR [edi+0x7a8f7fc6],ch
  41ac4c:	jbe    0x41acb8
  41ac4e:	jg     0x41ac60
  41ac50:	ficomp DWORD PTR [esp+ecx*2+0x6c47a7fa]
  41ac57:	jb     0x41ac23
  41ac59:	clc    
  41ac5a:	xchg   ebp,eax
  41ac5b:	push   ebp
  41ac5c:	jg     0x41accf
  41ac5e:	sbb    al,0x88
  41ac60:	ss jg  0x41ac6c
  41ac63:	adc    ah,BYTE PTR [edx-0x1f8e9745]
  41ac69:	mov    esp,0xc6958425
  41ac6e:	cmp    dl,al
  41ac70:	push   0x35fa98b2
  41ac75:	pop    ebp
  41ac76:	and    esp,edi
  41ac78:	(bad)  
  41ac79:	in     eax,0x74
  41ac7b:	and    BYTE PTR [ebp+0x14],0x34
  41ac7f:	test   al,0x3
  41ac81:	ret    0x1e01
  41ac84:	inc    ebx
  41ac85:	push   cs
  41ac86:	sub    DWORD PTR [ecx],0xffffffd6
  41ac89:	adc    ebp,DWORD PTR [eax-0x161c2d7f]
  41ac8f:	std    
  41ac90:	sahf   
  41ac91:	sbb    eax,0xf5fac91
  41ac96:	cmc    
  41ac97:	sbb    ebp,eax
  41ac99:	inc    edi
  41ac9a:	mov    cs,WORD PTR [eax-0x74]
  41ac9d:	pcmpgtb mm4,QWORD PTR [ecx+0x107f53cc]
  41aca4:	ins    BYTE PTR es:[edi],dx
  41aca5:	mov    ds:0x13e123da,eax
  41acaa:	int    0x86
  41acac:	pop    ecx
  41acad:	mov    dh,0xfe
  41acaf:	mov    ch,0x86
  41acb1:	xor    al,0x7c
  41acb3:	mov    bl,0xfd
  41acb5:	(bad)  
  41acb7:	jno    0x41ac78
  41acb9:	arpl   WORD PTR [ecx-0x3a],dx
  41acbc:	fcom   QWORD PTR [edx]
  41acbe:	in     al,0xe2
  41acc0:	sub    BYTE PTR [edx+0x67],ch
  41acc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acc4:	pop    ds
  41acc5:	mov    ah,0x1a
  41acc7:	pop    es
  41acc8:	and    eax,0x643fe736
  41accd:	dec    ebp
  41acce:	mov    ch,0xfc
  41acd0:	rcr    DWORD PTR ds:0x56b2fe4b,1
  41acd6:	sub    eax,0x2aaaabd5
  41acdb:	sub    DWORD PTR [eax-0x13],edi
  41acde:	bound  ecx,QWORD PTR [edi]
  41ace0:	out    0xdf,al
  41ace2:	push   0xffffff82
  41ace4:	in     eax,0x3b
  41ace6:	ret    0x91a8
  41ace9:	lahf   
  41acea:	imul   ebx,edi,0xffffff88
  41aced:	dec    ebx
  41acee:	mov    ebx,0x7cd1cf2
  41acf3:	loop   0x41acd7
  41acf5:	sbb    dh,bl
  41acf7:	xchg   ebp,ecx
  41acf9:	and    edx,DWORD PTR [edx+0x5d094b5]
  41acff:	shl    DWORD PTR [ecx+0xf],1
  41ad02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad03:	mov    al,ds:0x1867c2a8
  41ad08:	imul   esi,DWORD PTR ds:0x5621888a,0x69
  41ad0f:	nop
  41ad10:	enter  0xfc41,0x45
  41ad14:	in     eax,0x37
  41ad16:	leave  
  41ad17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad18:	cmc    
  41ad19:	or     eax,0xadb91a6e
  41ad1e:	test   BYTE PTR [ebp+0x647b20df],al
  41ad24:	out    0xa8,al
  41ad26:	pushf  
  41ad27:	stc    
  41ad28:	retf   
  41ad29:	sbb    ah,ah
  41ad2b:	test   al,0xe0
  41ad2d:	mov    ebp,0x829ac3fc
  41ad32:	pop    ebx
  41ad33:	xor    ah,BYTE PTR [edx]
  41ad35:	dec    esi
  41ad36:	sahf   
  41ad37:	stc    
  41ad38:	stc    
  41ad39:	pop    ecx
  41ad3a:	mov    ds:0x8a5d2cff,al
  41ad3f:	ror    BYTE PTR [edx],0x48
  41ad42:	pop    ss
  41ad43:	loope  0x41ad60
  41ad45:	aam    0x35
  41ad47:	fmul   st,st(1)
  41ad49:	aad    0x42
  41ad4b:	jge    0x41ad0e
  41ad4d:	push   edi
  41ad4e:	cmovne eax,DWORD PTR [eax-0x76]
  41ad52:	xchg   ebp,eax
  41ad53:	cmp    ecx,DWORD PTR [ecx+0x30bf9d5b]
  41ad59:	repz mov dl,0xa8
  41ad5c:	add    esp,DWORD PTR [edx-0x515f1157]
  41ad62:	call   0xf1d38d2
  41ad67:	mov    DWORD PTR [ebx],esi
  41ad69:	mov    ch,0x77
  41ad6b:	mov    eax,ds:0x6e8a082
  41ad70:	pop    ds
  41ad71:	(bad)  
  41ad72:	outs   dx,BYTE PTR ds:[esi]
  41ad73:	push   eax
  41ad74:	fistp  DWORD PTR [esp+edi*4-0x5f]
  41ad78:	out    dx,eax
  41ad79:	ret    
  41ad7a:	and    eax,DWORD PTR [ebx+eax*8+0x54]
  41ad7e:	out    dx,eax
  41ad7f:	inc    edx
  41ad80:	push   ecx
  41ad81:	xor    ecx,edi
  41ad83:	xor    BYTE PTR [ebx+edi*2-0x2c],cl
  41ad87:	imul   esi,esi,0xffffffbd
  41ad8a:	or     ebx,DWORD PTR [ebp+esi*2+0x45]
  41ad8e:	cmc    
  41ad8f:	mov    al,ds:0x574c9c45
  41ad94:	xchg   BYTE PTR [ebp+ebx*1+0x2a0352b0],bl
  41ad9b:	sbb    DWORD PTR [ebx+0x2c],edx
  41ad9e:	sub    DWORD PTR ss:[eax],ebp
  41ada1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ada2:	xor    dl,al
  41ada4:	test   eax,0xc4d479da
  41ada9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adaa:	sub    BYTE PTR [esi-0x30550a43],0xce
  41adb1:	fisub  DWORD PTR [esi]
  41adb3:	arpl   WORD PTR [ebx],si
  41adb5:	push   esi
  41adb6:	cdq    
  41adb7:	in     eax,0x5
  41adb9:	pushf  
  41adba:	pop    eax
  41adbb:	jno    0x41ad4b
  41adbd:	mov    edi,DWORD PTR [esi+edx*2+0x6c]
  41adc1:	mov    ds:0x1d2f1d5a,al
  41adc6:	popf   
  41adc7:	push   0x76
  41adc9:	shl    BYTE PTR [ebx-0x5dd382b],0x41
  41add0:	sbb    ebx,ecx
  41add2:	xor    ch,BYTE PTR [edi+0x485e5a6f]
  41add8:	add    cl,cl
  41adda:	mov    ?,WORD PTR [ecx+0x4b]
  41addd:	imul   ebp,esi,0xffffffbc
  41ade0:	push   edi
  41ade1:	test   BYTE PTR [edx],ch
  41ade3:	add    ah,BYTE PTR [ebp+0x6d]
  41ade6:	inc    ebx
  41ade7:	leave  
  41ade8:	sar    BYTE PTR [edi],cl
  41adea:	mov    DWORD PTR [ebp-0x77],ecx
  41aded:	inc    ebp
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c56
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ad6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cde
  41afcc:	mov    ecx,DWORD PTR ds:0x421a4e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x423892
  41b017:	push   0x423812
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c56
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237ed
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423804
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c76
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bcc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423962
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ab1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d6a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d66,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c56
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423982
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c56
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e72
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c56
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42384f
  41bc20:	push   0x423883
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e72,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c56
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238ce
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423883
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423946
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c56
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421ada,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d2e,eax
  41c15b:	mov    eax,ds:0x421ada
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c56
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d2e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421ada
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c56
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c56
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c56
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cda,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421cd2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c56
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237e2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a86
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423938
  41c5ea:	push   0x42389d
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423913
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x4238fe
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a34
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x48d7ebdc
  41ccad:	leave  
  41ccae:	mov    al,0xdd
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx-0x32]
  41ccb9:	clc    
  41ccba:	jb     0x41ccc6
  41ccbc:	callw  0x1cfd
  41ccc0:	retf   
  41ccc1:	adc    eax,0x45ec976f
  41ccc6:	data16 (bad) 
  41ccc8:	mov    bl,0xe
  41ccca:	retf   0x8c99
  41cccd:	mov    ebx,0x74a25c02
  41ccd2:	mov    cs,WORD PTR [ebp-0x1bd80cfb]
  41ccd8:	mov    cl,BYTE PTR [esi+0x58]
  41ccdb:	adc    bl,BYTE PTR [ebp+edx*8+0x1b]
  41ccdf:	add    ebx,DWORD PTR [esi+0x75da660]
  41cce5:	pop    edi
  41cce6:	not    dh
  41cce8:	mov    edi,DWORD PTR [esi-0x47]
  41cceb:	cmp    dl,BYTE PTR [edi-0x753007fb]
  41ccf1:	repz dec eax
  41ccf3:	sub    eax,0xb699638e
  41ccf8:	scas   eax,DWORD PTR es:[edi]
  41ccf9:	cmp    al,0x26
  41ccfb:	fisttp WORD PTR ss:[ecx]
  41ccfe:	enter  0x729b,0xed
  41cd02:	cmp    edi,ebx
  41cd04:	sub    ah,al
  41cd06:	push   es
  41cd07:	jae    0x41cd4a
  41cd09:	and    eax,0x5b8f7a3e
  41cd0e:	xlat   BYTE PTR ds:[ebx]
  41cd0f:	retf   
  41cd10:	(bad)  
  41cd11:	sahf   
  41cd12:	stc    
  41cd13:	push   edi
  41cd14:	pop    es
  41cd15:	jae    0x41cce1
  41cd17:	xchg   edx,eax
  41cd18:	and    eax,0x584e79ec
  41cd1d:	sub    esi,DWORD PTR [eax+ebx*2+0x14]
  41cd21:	push   ecx
  41cd22:	lods   eax,DWORD PTR ds:[esi]
  41cd23:	jecxz  0x41cd27
  41cd25:	push   DWORD PTR ds:0x850f63b2
  41cd2b:	ins    DWORD PTR es:[edi],dx
  41cd2c:	sete   BYTE PTR [ecx-0x1e]
  41cd30:	les    ecx,FWORD PTR [edi+0x6a]
  41cd33:	jbe    0x41cd4e
  41cd35:	dec    edi
  41cd36:	dec    ebx
  41cd37:	cmp    dh,ch
  41cd39:	mov    ds:0x7df78a6c,eax
  41cd3e:	icebp  
  41cd3f:	cmp    BYTE PTR [ebp-0x2d],ah
  41cd42:	dec    ebp
  41cd43:	add    bh,BYTE PTR [ebp-0x1e6b177a]
  41cd49:	add    ch,ah
  41cd4b:	pop    ds
  41cd4c:	or     eax,0x9b986a2d
  41cd51:	cwde   
  41cd52:	scas   eax,DWORD PTR es:[edi]
  41cd53:	leave  
  41cd54:	push   edi
  41cd55:	das    
  41cd56:	cmp    ah,BYTE PTR [esi+0x4afb05d4]
  41cd5c:	mov    esp,DWORD PTR [ebp-0x9da8aad]
  41cd62:	sbb    DWORD PTR [ecx-0xae30961],0xffffff80
  41cd69:	mov    ch,0x39
  41cd6b:	fmul   st,st(7)
  41cd6d:	hlt    
  41cd6e:	jecxz  0x41cd7c
  41cd70:	(bad)  
  41cd71:	sbb    DWORD PTR [edi],ebx
  41cd73:	or     DWORD PTR [edi],esp
  41cd75:	sahf   
  41cd76:	mov    al,ds:0xb9137ef1
  41cd7b:	in     al,0x4b
  41cd7d:	test   DWORD PTR [esi+0x33],esp
  41cd80:	adc    cl,BYTE PTR [esp+ecx*2]
  41cd83:	test   al,0xbc
  41cd85:	xchg   DWORD PTR [edi+0x7c],eax
  41cd88:	sbb    al,0x1a
  41cd8a:	pop    esi
  41cd8b:	mov    ecx,0x66c527f2
  41cd90:	and    eax,0x9ab577cb
  41cd95:	aas    
  41cd96:	add    al,0x6e
  41cd98:	xchg   edi,eax
  41cd99:	loope  0x41cdc6
  41cd9b:	pminub mm6,QWORD PTR [eax-0x72235778]
  41cda2:	nop
  41cda3:	ret    
  41cda4:	mov    ds:0xd5af807f,eax
  41cda9:	mov    esp,0xb610ded8
  41cdae:	int3   
  41cdaf:	dec    eax
  41cdb0:	mov    BYTE PTR [ecx+0x70370fdc],0x6d
  41cdb7:	xchg   ebp,eax
  41cdb8:	call   0x78b2:0xbfd0b84f
  41cdbf:	inc    edi
  41cdc0:	bound  esi,QWORD PTR [ebp+0x26]
  41cdc3:	add    DWORD PTR [esi],eax
  41cdc5:	outs   dx,BYTE PTR ds:[esi]
  41cdc6:	mov    bl,0x8d
  41cdc8:	ror    bh,cl
  41cdca:	cmp    dl,BYTE PTR [ebp+0x15c3c99c]
  41cdd0:	nop
  41cdd1:	or     eax,0x8352913e
  41cdd6:	pop    ss
  41cdd7:	cmp    al,0xa2
  41cdd9:	rol    bl,cl
  41cddb:	popf   
  41cddc:	cmc    
  41cddd:	mov    ebx,0xc3b76c5b
  41cde2:	pop    edx
  41cde3:	out    dx,al
  41cde4:	or     eax,0xe799b4c0
  41cde9:	jmp    0xe17b0cd6
  41cdee:	mov    ebp,0x40c73948
  41cdf3:	cmp    al,0xdc
  41cdf5:	push   ebx
  41cdf6:	xor    dh,BYTE PTR [edi+0x20]
  41cdf9:	jmp    0x2d033a7f
  41cdfe:	mov    edx,0x99a372ba
  41ce03:	lds    edi,FWORD PTR [esi+0x7d]
  41ce06:	test   eax,0xc2a60d72
  41ce0b:	jno    0x41ce48
  41ce0d:	out    0x83,al
  41ce0f:	adc    cx,WORD PTR [ecx+0x32]
  41ce13:	shl    DWORD PTR [ecx+0x4a],1
  41ce16:	push   ebp
  41ce17:	mov    dh,0xe4
  41ce19:	xchg   esi,eax
  41ce1a:	mov    dl,0xf9
  41ce1c:	adc    eax,0x204dce81
  41ce21:	lock mov cs,WORD PTR [ebx+0x1ece682e]
  41ce28:	cmc    
  41ce29:	mov    DWORD PTR [ecx],ebx
  41ce2b:	ja     0x41ce84
  41ce2d:	push   ds
  41ce2e:	add    cl,BYTE PTR [ebx]
  41ce30:	fst    DWORD PTR [eax+eiz*2]
  41ce33:	and    edi,edi
  41ce35:	popf   
  41ce36:	add    eax,0x91829cb8
  41ce3b:	xor    bl,BYTE PTR [ebx-0x52b0d28b]
  41ce41:	shl    DWORD PTR [ecx],0x2e
  41ce44:	inc    esi
  41ce45:	push   edi
  41ce46:	adc    al,BYTE PTR [ebp+0x2f108c25]
  41ce4c:	push   0xffffff90
  41ce4e:	mov    cl,0xd0
  41ce50:	add    eax,0xd13faa84
  41ce55:	icebp  
  41ce56:	pushf  
  41ce57:	out    0xa9,al
  41ce59:	or     BYTE PTR [edi+0x5],dl
  41ce5c:	mov    esp,0x3a2d93a0
  41ce61:	add    BYTE PTR [eax-0x54ff515e],dl
  41ce67:	xchg   BYTE PTR [ecx+0x23],al
  41ce6a:	sbb    ebx,eax
  41ce6c:	mov    bh,0xe
  41ce6e:	dec    esi
  41ce6f:	xchg   edx,eax
  41ce70:	icebp  
  41ce71:	aas    
  41ce72:	scas   eax,DWORD PTR es:[edi]
  41ce73:	sti    
  41ce74:	das    
  41ce75:	gs aas 
  41ce77:	clc    
  41ce78:	ja     0x41ced1
  41ce7a:	or     ecx,DWORD PTR [ebx-0x5]
  41ce7d:	mov    eax,ds:0x9c34bfad
  41ce82:	jge    0x41ceb6
  41ce84:	(bad)  
  41ce85:	mov    eax,ds:0xcdad81f3
  41ce8a:	cmp    eax,0x2e1667e
  41ce8f:	xlat   BYTE PTR es:[ebx]
  41ce91:	or     eax,0xec939dc3
  41ce96:	cmp    ebx,DWORD PTR [ebx+0x5c]
  41ce99:	mul    dl
  41ce9b:	and    al,0x43
  41ce9d:	push   ds
  41ce9e:	jns    0x41cef1
  41cea0:	xor    al,0x38
  41cea2:	xchg   edx,eax
  41cea3:	js     0x41ce8f
  41cea5:	jb     0x41ce37
  41cea7:	sbb    eax,0x6522b02f
  41ceac:	and    esp,DWORD PTR [esi-0x184827fc]
  41ceb2:	fwait
  41ceb3:	shl    BYTE PTR [edx],1
  41ceb5:	add    eax,0x94a3ea03
  41ceba:	popa   
  41cebb:	leave  
  41cebc:	jns    0x41cef0
  41cebe:	test   eax,0xa3fe1706
  41cec3:	push   eax
  41cec4:	dec    bh
  41cec6:	adc    edi,DWORD PTR [ecx+0x34]
  41cec9:	xchg   ebp,eax
  41cecb:	repz sub DWORD PTR [edi+0x18ddf72b],edi
  41ced2:	inc    esi
  41ced3:	pop    ebx
  41ced4:	jb     0x41cec3
  41ced6:	bound  edx,QWORD PTR [esi+0x23]
  41ced9:	dec    ecx
  41ceda:	es push es
  41cedc:	jl     0x41cf1b
  41cede:	aam    0xc8
  41cee0:	call   0xcf31:0x3ea3e766
  41cee7:	add    dh,al
  41cee9:	jmp    0x3f90:0x2832ff59
  41cef0:	ret    
  41cef1:	xor    al,0xe3
  41cef3:	adc    DWORD PTR [eax-0x7743489f],0x51f9a612
  41cefd:	adc    al,0xc4
  41ceff:	mov    esi,0xbe04900b
  41cf04:	aam    0x37
  41cf06:	mov    bh,0xa4
  41cf08:	push   ecx
  41cf09:	aaa    
  41cf0a:	fiadd  WORD PTR [esi+0x3d011f80]
  41cf10:	or     al,bh
  41cf12:	retf   0x1b90
  41cf15:	jmp    0x41cefc
  41cf17:	in     eax,dx
  41cf18:	pop    ss
  41cf19:	call   FWORD PTR [edi+0x2b]
  41cf1c:	adc    eax,0x4b3cffb5
  41cf21:	repnz xchg esp,eax
  41cf23:	cmc    
  41cf24:	out    0xc6,eax
  41cf26:	loope  0x41cf09
  41cf28:	test   BYTE PTR [ecx+0x1a],dh
  41cf2b:	inc    ebx
  41cf2c:	sbb    eax,0xe81d326e
  41cf31:	cmp    eax,0xb38fe0ed
  41cf36:	dec    esi
  41cf37:	dec    eax
  41cf38:	adc    eax,0xfc187e56
  41cf3d:	and    eax,0xeb38ac9e
  41cf42:	xlat   BYTE PTR ds:[ebx]
  41cf43:	pop    ss
  41cf44:	out    0xee,al
  41cf46:	or     esp,ecx
  41cf48:	jo     0x41cf35
  41cf4a:	adc    ah,ch
  41cf4c:	jbe    0x41cf28
  41cf4e:	retf   
  41cf4f:	jne    0x41cf21
  41cf51:	inc    ecx
  41cf52:	cli    
  41cf53:	aaa    
  41cf54:	cwde   
  41cf55:	mov    ah,0x7
  41cf57:	mov    edi,0xc46c3707
  41cf5c:	(bad)  
  41cf5d:	inc    ebp
  41cf5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf5f:	mov    esp,0x9561af6f
  41cf64:	enter  0xed80,0x51
  41cf68:	push   ss
  41cf69:	aaa    
  41cf6a:	fst    DWORD PTR [edi-0x33901d38]
  41cf70:	mov    esp,0x9e415067
  41cf75:	(bad)  
  41cf76:	add    al,0x48
  41cf78:	iret   
  41cf79:	adc    dh,BYTE PTR [edi+0x7233c942]
  41cf7f:	data16 sub ch,bl
  41cf82:	push   0x9e4e8f2
  41cf87:	aaa    
  41cf88:	sahf   
  41cf89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf8a:	jg     0x41cfcc
  41cf8c:	mov    eax,ds:0xf1cde98a
  41cf91:	add    BYTE PTR [ebx+ebp*1],0x80
  41cf95:	jp     0x41cf26
  41cf97:	dec    esp
  41cf98:	inc    esp
  41cf99:	mov    ?,WORD PTR [esi+eiz*4+0x7a]
  41cf9d:	aam    0x72
  41cf9f:	mov    bh,0x50
  41cfa1:	out    0xcf,al
  41cfa3:	mov    bl,0xb3
  41cfa5:	inc    edx
  41cfa6:	mov    al,0x29
  41cfa8:	dec    ecx
  41cfa9:	mov    edx,0x924fa048
  41cfae:	int    0x20
  41cfb0:	in     al,0x69
  41cfb2:	pusha  
  41cfb3:	repz leave 
  41cfb5:	ins    BYTE PTR es:[edi],dx
  41cfb6:	ret    
  41cfb7:	jbe    0x41cf7b
  41cfb9:	jb     0x41cf91
  41cfbb:	xchg   ebp,eax
  41cfbc:	fbld   TBYTE PTR [edx+0x46]
  41cfbf:	leave  
  41cfc0:	into   
  41cfc1:	iret   
  41cfc2:	push   ss
  41cfc3:	mov    ds:0xd04f074c,al
  41cfc8:	and    al,0x97
  41cfca:	cmp    eax,0x7394c7eb
  41cfcf:	cmp    eax,0x1eac3589
  41cfd4:	pop    ebp
  41cfd5:	jecxz  0x41cf65
  41cfd7:	ret    0xdb4b
  41cfda:	sub    bl,BYTE PTR [ecx+0x7a]
  41cfdd:	inc    esi
  41cfde:	mov    cl,0x7a
  41cfe0:	add    al,0xea
  41cfe2:	mov    esp,0xfd4c6b4d
  41cfe7:	pop    esi
  41cfe8:	ret    
  41cfe9:	fs inc ebx
  41cfeb:	rcl    BYTE PTR [esi],1
  41cfed:	xor    DWORD PTR [esi],0xffffffcc
  41cff0:	ins    BYTE PTR es:[edi],dx
  41cff1:	add    al,0x14
  41cff3:	add    ch,BYTE PTR [edx]
  41cff5:	daa    
  41cff6:	or     ch,bl
  41cff8:	stos   DWORD PTR es:[edi],eax
  41cff9:	sub    BYTE PTR [eax+0x73c57535],ch
  41cfff:	iret   
  41d000:	jbe    0x41cf91
  41d002:	mov    dl,0x6e
  41d004:	push   esi
  41d005:	cmp    DWORD PTR [edi+0x14c1d327],ecx
  41d00b:	ret    0xade5
  41d00e:	ins    BYTE PTR es:[edi],dx
  41d00f:	pop    esp
  41d010:	hlt    
  41d011:	enter  0xa30e,0xce
  41d015:	sub    bh,BYTE PTR ds:[ebx-0x33]
  41d019:	lock fcmove st,st(5)
  41d01c:	loope  0x41d087
  41d01e:	lds    edi,FWORD PTR [ebp-0x54]
  41d021:	mov    al,0x18
  41d023:	int3   
  41d024:	xchg   DWORD PTR [edi+0x36],eax
  41d027:	mov    al,0x5a
  41d029:	imul   esi,DWORD PTR [ebp+edx*2+0x405244ac],0xffffffd1
  41d031:	lahf   
  41d032:	and    dl,BYTE PTR [ecx-0x14]
  41d035:	cs std 
  41d037:	pop    ebx
  41d038:	jo     0x41d002
  41d03a:	popf   
  41d03b:	xchg   edi,eax
  41d03c:	pop    eax
  41d03d:	daa    
  41d03e:	imul   edi,DWORD PTR ds:0x25c0f473,0x1ee94f23
  41d048:	mov    al,0xc7
  41d04a:	pop    edx
  41d04b:	loopne 0x41cfe2
  41d04d:	mov    edx,ebx
  41d04f:	jmp    0x41cfe9
  41d051:	mov    DWORD PTR [edx+ebx*2+0x4a65bcdb],ebx
  41d058:	inc    esp
  41d059:	lock shl ch,1
  41d05c:	aas    
  41d05d:	stc    
  41d05e:	test   BYTE PTR ds:0x70c5940c,ch
  41d064:	xor    eax,0x73ce9042
  41d069:	out    0xd,eax
  41d06b:	mov    cl,0xf3
  41d06d:	adc    cl,BYTE PTR [edi+edi*4+0x28fd1765]
  41d074:	xchg   edi,eax
  41d075:	dec    esi
  41d076:	mov    gs,esi
  41d078:	cmp    eax,0x14c20bb8
  41d07d:	xor    DWORD PTR [esi+0x22],esp
  41d080:	pop    ss
  41d081:	dec    ebx
  41d082:	xchg   ecx,eax
  41d083:	ret    
  41d084:	mov    eax,0xd1c6ddc5
  41d089:	mov    cl,0x7c
  41d08b:	inc    ebp
  41d08c:	call   0x7fa7:0xa44341f5
  41d093:	ror    DWORD PTR [edx],1
  41d095:	mov    ds,WORD PTR [edx-0x11]
  41d098:	pop    ss
  41d099:	sbb    esp,DWORD PTR [ebp+ecx*4-0x5]
  41d09d:	jo     0x41d0cc
  41d09f:	mov    bl,0xa0
  41d0a1:	mov    ebp,0xb8e8a2fa
  41d0a6:	pop    eax
  41d0a7:	shl    BYTE PTR [edi+0x51],cl
  41d0aa:	and    eax,0x915f8ad8
  41d0af:	jge    0x41d0e8
  41d0b1:	cmp    cl,BYTE PTR [ebp-0x1]
  41d0b4:	lahf   
  41d0b5:	or     dl,BYTE PTR [eax-0x5b]
  41d0b8:	and    al,0xff
  41d0ba:	daa    
  41d0bb:	sbb    BYTE PTR [esi+0x2c],dl
  41d0be:	lods   al,BYTE PTR ds:[esi]
  41d0bf:	mov    ecx,0x4e1e8897
  41d0c4:	dec    ebx
  41d0c5:	ror    BYTE PTR [ebp-0x2470fe9f],0xf8
  41d0cc:	or     DWORD PTR [eax],ebp
  41d0ce:	ds xor eax,edx
  41d0d1:	rdpmc  
  41d0d3:	sbb    al,0x88
  41d0d5:	fbstp  TBYTE PTR [edi+0x24]
  41d0d8:	and    al,0x66
  41d0da:	xchg   edx,eax
  41d0db:	and    eax,0x91a1ab63
  41d0e0:	jle    0x41d080
  41d0e2:	dec    esi
  41d0e3:	arpl   WORD PTR [edx+0x70b283a5],sp
  41d0e9:	or     dh,al
  41d0eb:	ss push ds
  41d0ed:	clc    
  41d0ee:	arpl   WORD PTR [eax],si
  41d0f0:	in     eax,dx
  41d0f1:	es cmc 
  41d0f3:	addr16 ret 
  41d0f5:	(bad)  
  41d0f6:	ins    DWORD PTR es:[edi],dx
  41d0f7:	sub    DWORD PTR [edx+0x5c],ebx
  41d0fa:	push   esp
  41d0fb:	jmp    0x8e7e:0x2fc6f28a
  41d102:	sub    DWORD PTR [ebx+0x63905109],esp
  41d108:	xchg   esi,eax
  41d109:	xchg   ebp,eax
  41d10a:	add    dl,al
  41d10c:	call   0x91dd:0x80ddf605
  41d113:	sahf   
  41d114:	push   edi
  41d115:	cdq    
  41d116:	push   ss
  41d117:	mov    eax,0x11dcfda5
  41d11c:	cmc    
  41d11d:	scas   eax,DWORD PTR es:[edi]
  41d11e:	in     al,dx
  41d11f:	outs   dx,DWORD PTR ds:[esi]
  41d120:	or     eax,0x23b28798
  41d125:	fisttp DWORD PTR [eax]
  41d127:	inc    edx
  41d128:	icebp  
  41d129:	pop    esp
  41d12a:	xor    dh,BYTE PTR [ecx]
  41d12c:	pop    eax
  41d12d:	jne    0x41d114
  41d12f:	pop    ss
  41d130:	xchg   ebx,eax
  41d131:	out    dx,al
  41d132:	dec    esp
  41d133:	mov    ecx,0x997620d1
  41d138:	lahf   
  41d139:	pop    esp
  41d13a:	lods   eax,DWORD PTR ds:[esi]
  41d13b:	inc    eax
  41d13c:	mov    ecx,0x5100caa8
  41d141:	xchg   edx,eax
  41d142:	clc    
  41d143:	ins    BYTE PTR es:[edi],dx
  41d144:	(bad)  
  41d145:	stos   DWORD PTR es:[edi],eax
  41d146:	imul   edi,DWORD PTR [edi-0x56],0x2c
  41d14a:	mov    al,ds:0x55781129
  41d14f:	xchg   esp,eax
  41d150:	inc    ebx
  41d151:	or     ah,bh
  41d153:	or     eax,0x56020cb0
  41d158:	xor    DWORD PTR [ebx],0x33
  41d15b:	xchg   esp,eax
  41d15c:	mov    esi,0x664ddf1e
  41d161:	test   al,ch
  41d163:	xchg   edi,eax
  41d164:	retf   0x49ff
  41d167:	sub    al,0xef
  41d169:	bound  ebp,QWORD PTR [edi+0x5e27cf7f]
  41d16f:	inc    ecx
  41d170:	setp   BYTE PTR [ecx+0x21]
  41d174:	(bad)  
  41d175:	xchg   esi,eax
  41d176:	mov    cs,ebp
  41d178:	arpl   WORD PTR [ebp-0x67],cx
  41d17b:	push   ds
  41d17c:	sub    BYTE PTR [eax-0x75],bh
  41d17f:	push   cs
  41d180:	sub    eax,0xcaaf0f94
  41d185:	and    al,BYTE PTR [edx]
  41d187:	sub    al,0xfd
  41d189:	lods   al,BYTE PTR ds:[esi]
  41d18a:	and    BYTE PTR [eax+0x5f],al
  41d18d:	out    0x58,al
  41d18f:	dec    ebx
  41d190:	xlat   BYTE PTR ds:[ebx]
  41d191:	pop    esi
  41d192:	pop    ebx
  41d193:	(bad)  
  41d195:	popa   
  41d196:	push   edx
  41d197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d198:	dec    edx
  41d199:	add    dl,ch
  41d19b:	sbb    al,0xec
  41d19d:	enter  0xe842,0x84
  41d1a1:	sub    BYTE PTR [esi-0x37],0x69
  41d1a5:	mov    dh,0xf8
  41d1a7:	xor    al,BYTE PTR [esp+ecx*1+0x4]
  41d1ab:	mov    al,ds:0xe460d8e1
  41d1b0:	mov    bh,0xb0
  41d1b2:	into   
  41d1b3:	mov    esp,0x25f22dfd
  41d1b8:	add    dh,BYTE PTR [esi]
  41d1ba:	inc    eax
  41d1bb:	inc    edi
  41d1bc:	int    0xdd
  41d1be:	xor    ecx,DWORD PTR [edx]
  41d1c0:	sub    DWORD PTR [eax],0xc069f78
  41d1c6:	test   DWORD PTR [eax+0x33ae6e39],esi
  41d1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1cd:	mov    ds:0xa47aa832,eax
  41d1d2:	pop    esi
  41d1d3:	out    dx,al
  41d1d4:	call   0xabe2:0x7859a5a3
  41d1db:	adc    eax,0xad9706d6
  41d1e0:	jp     0x41d174
  41d1e2:	jbe    0x41d1e7
  41d1e4:	mov    dl,0x70
  41d1e6:	push   edx
  41d1e7:	int    0x36
  41d1e9:	stc    
  41d1ea:	int    0x32
  41d1ec:	sbb    DWORD PTR gs:[ebx+0x268b7886],ebx
  41d1f3:	or     DWORD PTR ds:0xa55096c6,ebx
  41d1f9:	push   edx
  41d1fa:	add    bh,BYTE PTR [esi+0x2b]
  41d1fd:	mov    al,0xcc
  41d1ff:	jecxz  0x41d20b
  41d201:	sub    dl,ch
  41d203:	div    DWORD PTR [eax+0x2f9b2356]
  41d209:	jp     0x41d1cb
  41d20b:	fisub  WORD PTR [edi]
  41d20d:	(bad)  
  41d20e:	jb     0x41d1d0
  41d210:	retf   0xe7d1
  41d213:	retf   0x8e01
  41d216:	fnstcw WORD PTR [ebp+0x8]
  41d219:	sbb    BYTE PTR [edi-0x5e],bl
  41d21c:	pop    ebp
  41d21d:	rcl    cl,1
  41d21f:	pop    edx
  41d220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d221:	adc    bl,ch
  41d223:	mov    ah,0x70
  41d225:	ret    0x5eeb
  41d228:	cmp    ecx,ebp
  41d22a:	push   edi
  41d22b:	dec    eax
  41d22c:	jecxz  0x41d2a7
  41d22e:	jmp    0x68fed1fb
  41d233:	xlat   BYTE PTR ds:[ebx]
  41d234:	outs   dx,BYTE PTR ds:[esi]
  41d235:	sbb    esi,DWORD PTR [ebp-0x57]
  41d238:	push   0x2cfa39a9
  41d23d:	xor    DWORD PTR [edx+0x17ada22b],ebx
  41d243:	xor    al,0x75
  41d245:	add    DWORD PTR ds:0x8ee4a981,ebx
  41d24b:	hlt    
  41d24c:	or     bh,al
  41d24e:	xchg   esp,eax
  41d24f:	(bad)  
  41d250:	out    dx,al
  41d251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d252:	xchg   edi,eax
  41d253:	mov    BYTE PTR [ebp+0x13bb10f0],cl
  41d259:	push   ebx
  41d25a:	or     ah,BYTE PTR ds:0x7d16ee4
  41d260:	jb     0x41d21e
  41d262:	push   edi
  41d263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d264:	xchg   esi,eax
  41d265:	dec    ecx
  41d266:	test   BYTE PTR [ebx],bh
  41d268:	js     0x41d25a
  41d26a:	sub    eax,eax
  41d26c:	jns    0x41d227
  41d26e:	hlt    
  41d26f:	cmp    cl,BYTE PTR [esi+edx*2+0x56]
  41d273:	mov    eax,0x3cab0e60
  41d278:	(bad)  
  41d279:	in     eax,dx
  41d27a:	cmp    esi,DWORD PTR ds:0x4e093f40
  41d280:	inc    edi
  41d281:	and    bh,BYTE PTR [ecx-0x17]
  41d284:	iret   
  41d285:	mov    edx,?
  41d287:	mov    edx,eax
  41d289:	push   0x5b
  41d28b:	add    eax,0x55228399
  41d290:	push   ebp
  41d291:	outs   dx,DWORD PTR ds:[esi]
  41d292:	inc    edi
  41d293:	cmp    al,0x4f
  41d295:	push   ebp
  41d296:	aaa    
  41d297:	push   ebx
  41d298:	in     eax,dx
  41d299:	out    0x2d,al
  41d29b:	loope  0x41d25d
  41d29d:	mov    ds:0x659d2e73,eax
  41d2a2:	sub    eax,0x649ad0a
  41d2a7:	mov    bl,0x5c
  41d2a9:	lock fmul DWORD PTR [eax]
  41d2ac:	je     0x41d27d
  41d2ae:	jae    0x41d238
  41d2b0:	inc    edi
  41d2b1:	bnd jle 0x41d28a
  41d2b4:	popf   
  41d2b5:	arpl   WORD PTR [eax],cx
  41d2b7:	cwde   
  41d2b8:	nop
  41d2b9:	and    BYTE PTR [ecx+0x8de6954],al
  41d2bf:	jp     0x41d31a
  41d2c1:	nop
  41d2c2:	pop    edi
  41d2c3:	arpl   dx,dx
  41d2c5:	jbe    0x41d327
  41d2c7:	and    al,0x93
  41d2c9:	jno    0x41d2fa
  41d2cb:	fcmovnbe st,st(3)
  41d2cd:	(bad)  
  41d2ce:	fs jne 0x41d2fe
  41d2d1:	and    edi,ebp
  41d2d3:	outs   dx,DWORD PTR ds:[esi]
  41d2d4:	jno    0x41d259
  41d2d6:	scas   al,BYTE PTR es:[edi]
  41d2d7:	retf   
  41d2d8:	mov    al,0x59
  41d2da:	sub    dh,dh
  41d2dc:	sti    
  41d2dd:	xchg   DWORD PTR [esp+ebp*1-0x11],ecx
  41d2e1:	cld    
  41d2e2:	mov    esp,0xf5924df4
  41d2e7:	push   cs
  41d2e8:	mov    ecx,0x96f82665
  41d2ed:	push   ss
  41d2ee:	lods   eax,DWORD PTR ds:[esi]
  41d2ef:	add    DWORD PTR [esi-0x21b3f278],ebx
  41d2f5:	mov    esi,0x482dc09d
  41d2fa:	jb     0x41d2ff
  41d2fc:	mov    edx,0xc61fb965
  41d301:	test   al,0x52
  41d303:	int3   
  41d304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d305:	push   eax
  41d306:	xor    edi,DWORD PTR [edx+0x57]
  41d309:	dec    esp
  41d30a:	in     eax,0x6b
  41d30c:	push   edi
  41d30d:	repnz pop edx
  41d30f:	dec    ecx
  41d310:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d311:	jo     0x41d307
  41d313:	or     DWORD PTR [eax+ebp*8-0x7d3908b7],esp
  41d31a:	rcr    BYTE PTR [eax],1
  41d31c:	jo     0x41d34a
  41d31e:	dec    ecx
  41d31f:	pop    ebx
  41d320:	sub    al,0x3a
  41d322:	and    BYTE PTR [ecx],bh
  41d324:	pop    ebx
  41d325:	loop   0x41d2a8
  41d327:	scas   eax,DWORD PTR es:[edi]
  41d328:	or     DWORD PTR [eax+eiz*2+0x4f321b6a],esi
  41d32f:	iret   
  41d330:	push   esi
  41d331:	jb     0x41d2ec
  41d333:	(bad)  
  41d334:	cmp    ch,BYTE PTR [edi-0x8942a5b]
  41d33a:	adc    bl,BYTE PTR [ebx+0x1a7a1fd5]
  41d340:	pop    ds
  41d341:	pop    esi
  41d342:	in     al,dx
  41d343:	test   ch,dl
  41d345:	enter  0x5675,0x3d
  41d349:	or     dh,dh
  41d34b:	push   esp
  41d34c:	retf   0xd888
  41d34f:	repz cmp eax,eax
  41d352:	xchg   esp,eax
  41d353:	push   0xfffffff9
  41d355:	mov    al,ds:0x36df4194
  41d35a:	adc    esi,esp
  41d35c:	es pop esp
  41d35e:	sbb    edi,DWORD PTR [eax+ebx*4-0x924b122]
  41d365:	push   edi
  41d366:	dec    eax
  41d367:	add    BYTE PTR [ecx+ecx*1-0x556d1e0f],0xd7
  41d36f:	and    dl,BYTE PTR [edx-0x51]
  41d372:	mov    ebp,DWORD PTR [edi-0x7b2a9a51]
  41d378:	sbb    ebp,esp
  41d37a:	fsub   DWORD PTR gs:[esi-0x2]
  41d37e:	test   al,0xbb
  41d380:	(bad)  
  41d381:	pop    edi
  41d382:	stos   BYTE PTR es:[edi],al
  41d383:	add    DWORD PTR [esi+0x51e78097],ebx
  41d389:	ins    DWORD PTR es:[edi],dx
  41d38a:	retf   
  41d38b:	lods   al,BYTE PTR ds:[esi]
  41d38c:	cmp    al,0x58
  41d38e:	loop   0x41d3c5
  41d390:	out    dx,al
  41d391:	and    DWORD PTR [eax-0x5f],esi
  41d394:	cdq    
  41d395:	pop    es
  41d396:	pop    ecx
  41d397:	cmp    dl,BYTE PTR ds:0x91280537
  41d39d:	fisubr WORD PTR [eax+0x6c1a37bb]
  41d3a3:	jge    0x41d41a
  41d3a5:	xlat   BYTE PTR ds:[ebx]
  41d3a6:	mul    eax
  41d3a8:	lods   al,BYTE PTR ds:[esi]
  41d3a9:	into   
  41d3aa:	dec    edx
  41d3ab:	(bad)  
  41d3ad:	mov    ebx,0x85c828c7
  41d3b2:	ret    
  41d3b3:	lods   al,BYTE PTR ds:[esi]
  41d3b4:	mov    edi,0x631ad077
  41d3b9:	adc    al,BYTE PTR ds:0xcde99ef6
  41d3bf:	dec    eax
  41d3c0:	mov    eax,ds:0x824356fe
  41d3c5:	mov    WORD PTR [ecx+0x20],ds
  41d3c8:	adc    BYTE PTR [ecx+edx*8-0x56],0xc5
  41d3cd:	dec    edx
  41d3ce:	cmc    
  41d3cf:	mov    edx,0xd1d51fec
  41d3d4:	pop    eax
  41d3d5:	pop    ecx
  41d3d6:	popa   
  41d3d7:	mov    ah,0x78
  41d3d9:	xchg   edx,eax
  41d3da:	mov    ax,ds:0x2d560318
  41d3e0:	loopne 0x41d40c
  41d3e2:	cmc    
  41d3e3:	add    ebp,DWORD PTR [ebx+0xc]
  41d3e6:	push   ecx
  41d3e7:	sub    DWORD PTR [esi],edx
  41d3e9:	mov    dl,dh
  41d3eb:	rcr    DWORD PTR [ecx-0x10],0x57
  41d3ef:	call   0x81b21841
  41d3f4:	(bad)  
  41d3f5:	jp     0x41d42d
  41d3f7:	jmp    0x7764bd09
  41d3fc:	push   ds
  41d3fd:	out    dx,eax
  41d3fe:	jmp    0x8e35:0x731b5388
  41d405:	sub    BYTE PTR [edi-0x45962aad],dl
  41d40b:	in     eax,dx
  41d40c:	xor    DWORD PTR [esi+ecx*2],0x71
  41d410:	loope  0x41d3a6
  41d412:	push   ebx
  41d413:	pushf  
  41d414:	push   edi
  41d415:	into   
  41d416:	pop    ebp
  41d417:	outs   dx,BYTE PTR ds:[esi]
  41d418:	bnd jmp 0x354d1e81
  41d41e:	xor    esi,0x4f
  41d421:	push   ebp
  41d422:	xchg   DWORD PTR [ecx+0xb],edi
  41d425:	fld    TBYTE PTR [esi-0x61280c03]
  41d42b:	sbb    BYTE PTR [eax+0x78c28981],0xed
  41d432:	jg     0x41d3ca
  41d434:	jo     0x41d43f
  41d436:	or     ch,BYTE PTR [ebx]
  41d438:	add    DWORD PTR [eax],ebp
  41d43a:	enter  0xb9b8,0x45
  41d43e:	mov    dh,BYTE PTR ds:[esi-0x32ca470f]
  41d445:	fidivr WORD PTR [esi+0x16761ec5]
  41d44b:	mov    ecx,0xaae834f5
  41d450:	imul   ecx
  41d452:	arpl   WORD PTR [esi],sp
  41d454:	mov    esi,0x4dd00300
  41d459:	test   al,0xf1
  41d45b:	lods   eax,DWORD PTR ds:[esi]
  41d45c:	loopne 0x41d3ee
  41d45e:	(bad)  
  41d45f:	mov    ecx,0x3fdd0361
  41d464:	adc    al,0xe2
  41d466:	fcom   QWORD PTR [ebx]
  41d468:	mov    cl,0x31
  41d46a:	sub    eax,0x1510b6af
  41d46f:	aad    0xb9
  41d471:	xchg   DWORD PTR [eax],edx
  41d473:	mov    cl,0xf9
  41d475:	xchg   ebx,eax
  41d476:	sub    al,0xbf
  41d478:	cmp    BYTE PTR [ebp+0x5],bh
  41d47b:	loope  0x41d4a9
  41d47d:	daa    
  41d47e:	cmp    ecx,DWORD PTR [edx+0x7c4be92d]
  41d484:	pop    eax
  41d485:	add    esp,0x8326f999
  41d48b:	(bad)  
  41d48c:	mov    esi,0xd11a36fe
  41d491:	shl    DWORD PTR [ebx+0x311e8209],cl
  41d497:	out    0x17,eax
  41d499:	icebp  
  41d49a:	xor    esi,ebx
  41d49c:	(bad)  
  41d49e:	jae    0x41d4cc
  41d4a0:	inc    esp
  41d4a1:	pop    esp
  41d4a2:	into   
  41d4a3:	xor    ebx,DWORD PTR [esi-0x5f]
  41d4a6:	ficomp DWORD PTR [edx-0x2db36123]
  41d4ac:	sub    eax,0xa0d288f
  41d4b1:	mov    DWORD PTR [edi+ebp*1+0x18],0x805a4d9e
  41d4b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4ba:	jbe    0x41d489
  41d4bc:	repz xchg esi,eax
  41d4be:	icebp  
  41d4bf:	jne    0x41d503
  41d4c1:	pop    edx
  41d4c2:	inc    ebp
  41d4c3:	nop
  41d4c4:	xchg   ebp,eax
  41d4c5:	inc    ecx
  41d4c6:	(bad)  
  41d4c7:	cmp    al,0xc0
  41d4c9:	adc    bh,dl
  41d4cb:	sar    BYTE PTR [edi-0x1e],1
  41d4ce:	outs   dx,BYTE PTR ds:[esi]
  41d4cf:	out    dx,al
  41d4d0:	loope  0x41d47e
  41d4d2:	fisubr DWORD PTR [esi+0x16]
  41d4d5:	test   al,0x31
  41d4d7:	cmp    esp,DWORD PTR [eax-0x3a]
  41d4da:	fsubr  DWORD PTR [edi-0x6a2e12e8]
  41d4e0:	std    
  41d4e1:	js     0x41d510
  41d4e3:	jle    0x41d545
  41d4e5:	or     eax,0x7ae2c0b1
  41d4ea:	sub    al,0xbe
  41d4ec:	cmp    eax,0xbea1e209
  41d4f1:	sbb    eax,0x7feb958c
  41d4f6:	fidiv  DWORD PTR [edi+eax*4+0x45]
  41d4fb:	jg     0x41d55d
  41d4fd:	mov    edx,0xf21cc2e9
  41d502:	mov    ebx,DWORD PTR [esi-0x495e854e]
  41d508:	xchg   edi,eax
  41d509:	jmp    0x86188b93
  41d50e:	(bad)  
  41d50f:	out    0x55,al
  41d511:	mov    edx,DWORD PTR [edi-0x55acc03c]
  41d517:	(bad)  
  41d518:	ins    BYTE PTR es:[edi],dx
  41d519:	pop    ds
  41d51a:	fidiv  WORD PTR [eax]
  41d51c:	adc    eax,0x39c64b3
  41d521:	js     0x41d576
  41d523:	out    dx,eax
  41d524:	pusha  
  41d525:	cli    
  41d526:	ds (bad) 
  41d528:	je     0x41d501
  41d52a:	fdiv   st,st(2)
  41d52c:	mov    ds:0x37bbffdc,eax
  41d531:	call   0x3f4f265
  41d536:	sbb    bl,al
  41d538:	(bad)  
  41d539:	adc    DWORD PTR [esi-0x3f13ee7a],eax
  41d53f:	retf   0x5f32
  41d542:	leave  
  41d543:	and    BYTE PTR [ecx+0x32d0b882],al
  41d549:	scas   al,BYTE PTR es:[edi]
  41d54a:	test   al,0x62
  41d54c:	pop    ebp
  41d54d:	and    BYTE PTR [ebp-0x68],dh
  41d550:	dec    edi
  41d551:	mov    dl,0x38
  41d553:	cmp    eax,esp
  41d555:	shl    DWORD PTR [edx-0x574ecd3c],0x65
  41d55c:	test   eax,0x181f70f3
  41d561:	stos   DWORD PTR es:[edi],eax
  41d562:	imul   edx,esi,0xffffffdd
  41d565:	clc    
  41d566:	out    0x35,eax
  41d568:	and    edx,ebp
  41d56a:	add    BYTE PTR [edi+0x2290707b],dl
  41d570:	(bad)  
  41d571:	mov    ch,0xb7
  41d573:	jg     0x41d57d
  41d575:	(bad)  
  41d577:	jne    0x41d4fe
  41d579:	mov    esp,0xec7576d0
  41d57e:	dec    edi
  41d57f:	or     al,0xf0
  41d581:	retf   
  41d582:	inc    ecx
  41d583:	popa   
  41d584:	stos   DWORD PTR es:[edi],eax
  41d585:	push   ecx
  41d586:	cdq    
  41d587:	das    
  41d588:	jp     0x3ab57b7f
  41d58e:	test   DWORD PTR [edx],ebp
  41d590:	mov    ?,WORD PTR [esi+eiz*4-0x22bcd27a]
  41d597:	push   edx
  41d598:	neg    edx
  41d59a:	inc    esi
  41d59b:	and    al,0x50
  41d59d:	cmc    
  41d59e:	fistp  DWORD PTR [ebp+0x4ee44bca]
  41d5a4:	mov    ds:0xb889d019,eax
  41d5a9:	and    eax,DWORD PTR [ebp+0x6b]
  41d5ac:	stos   BYTE PTR es:[edi],al
  41d5ad:	outs   dx,DWORD PTR ds:[esi]
  41d5ae:	in     al,dx
  41d5af:	shr    DWORD PTR [edx],0x9e
  41d5b2:	add    esp,DWORD PTR [ecx+0x6e]
  41d5b5:	stos   DWORD PTR es:[edi],eax
  41d5b6:	mov    bl,BYTE PTR [ecx-0x6e29d0ec]
  41d5bc:	test   eax,0x36be9991
  41d5c1:	pop    esi
  41d5c2:	cmp    esp,DWORD PTR [edi]
  41d5c4:	cmp    eax,0x9ba8ce72
  41d5c9:	mov    ebx,0xabd0dae8
  41d5ce:	lock mov bl,0xd4
  41d5d1:	outs   dx,BYTE PTR ds:[esi]
  41d5d2:	mov    ch,0x47
  41d5d4:	cdq    
  41d5d5:	sub    edx,DWORD PTR [eax]
  41d5d7:	xor    DWORD PTR [edx-0x29],eax
  41d5da:	(bad)  
  41d5db:	retf   0x9744
  41d5de:	inc    eax
  41d5df:	jne    0x41d5e0
  41d5e1:	or     BYTE PTR [ebp-0x5bdbd06f],cl
  41d5e7:	mov    esp,0xb9fb9c67
  41d5ec:	fist   DWORD PTR [edx+0x4fd88d6a]
  41d5f2:	dec    eax
  41d5f3:	outs   dx,DWORD PTR ds:[esi]
  41d5f4:	js     0x41d57e
  41d5f6:	add    DWORD PTR [ebx-0x715ff21d],ecx
  41d5fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5fd:	cdq    
  41d5fe:	aaa    
  41d5ff:	inc    edi
  41d600:	xchg   ebp,eax
  41d601:	xor    DWORD PTR [ebp+ebp*1+0x1081e4a6],edx
  41d608:	adc    esi,DWORD PTR [eax+0x3f6ff31]
  41d60e:	out    0xf1,eax
  41d610:	ja     0x41d5e0
  41d612:	fld    DWORD PTR [ebp+esi*1-0x75]
  41d616:	repz dec esi
  41d618:	sahf   
  41d619:	mov    esp,0xdadc311a
  41d61e:	push   eax
  41d61f:	and    BYTE PTR [ecx-0x60],bl
  41d622:	out    0xdc,eax
  41d624:	out    dx,eax
  41d625:	push   edx
  41d626:	out    0x78,al
  41d628:	and    al,0xcd
  41d62a:	cmp    al,BYTE PTR [edi]
  41d62c:	xor    BYTE PTR [ebx+0x58bfde2c],ah
  41d632:	pop    esi
  41d633:	nop
  41d634:	mov    ebp,0x7c2f9930
  41d639:	ds or  al,0xbd
  41d63c:	dec    ebp
  41d63d:	cmp    ecx,DWORD PTR [edi+edi*1]
  41d640:	inc    eax
  41d641:	aad    0x8
  41d643:	xor    dl,ah
  41d645:	pop    eax
  41d646:	cmp    ebp,ebx
  41d648:	out    dx,eax
  41d649:	fwait
  41d64a:	sbb    cl,BYTE PTR [ebx-0x44afd51c]
  41d650:	loop   0x41d671
  41d652:	sub    al,0xbe
  41d654:	adc    ecx,DWORD PTR [edx-0x78]
  41d657:	scas   al,BYTE PTR es:[edi]
  41d658:	in     al,0x81
  41d65a:	sub    al,0x2d
  41d65c:	xor    ah,dl
  41d65e:	lahf   
  41d65f:	jmp    0x11f9fcc6
  41d664:	sub    al,0xc0
  41d666:	mov    bl,0xa0
  41d668:	idiv   dh
  41d66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d66b:	or     edx,DWORD PTR [esi]
  41d66d:	dec    ecx
  41d66e:	push   ecx
  41d66f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d670:	inc    ebx
  41d671:	sti    
  41d672:	or     eax,0xfe7e83a7
  41d677:	jle    0x41d67e
  41d679:	sbb    eax,0x4b84d5de
  41d67e:	std    
  41d67f:	cli    
  41d680:	adc    ch,bh
  41d682:	inc    edx
  41d683:	test   DWORD PTR [eax+eax*8-0x6da4e847],0x8b98d2d9
  41d68e:	jne    0x41d61a
  41d690:	rcr    DWORD PTR [edx+0x7fd8495d],cl
  41d696:	mov    esp,0x946aea6f
  41d69b:	and    al,0xbb
  41d69d:	mov    bh,0xdd
  41d69f:	addr16 xor eax,0x2f4ffde9
  41d6a5:	sbb    al,0xda
  41d6a7:	ret    0x82a6
  41d6aa:	xor    BYTE PTR [esp+edx*1-0x5bf3b65d],bl
  41d6b1:	jp     0x41d70b
  41d6b3:	add    ebx,0x64
  41d6b6:	add    BYTE PTR [esi],bh
  41d6b8:	dec    edx
  41d6b9:	pop    edx
  41d6ba:	sub    eax,0x7106192
  41d6bf:	cmp    ebx,ebx
  41d6c1:	in     al,dx
  41d6c2:	xor    BYTE PTR [ecx-0x15],bh
  41d6c5:	out    0x77,al
  41d6c7:	inc    edx
  41d6c8:	cmp    ecx,DWORD PTR [edi]
  41d6ca:	cmp    DWORD PTR [ebx-0x19],edx
  41d6cd:	std    
  41d6ce:	loopne 0x41d698
  41d6d0:	or     al,BYTE PTR [edx+eiz*1]
  41d6d3:	shl    esp,1
  41d6d5:	mov    dh,0xa4
  41d6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6d8:	aaa    
  41d6d9:	mov    edi,DWORD PTR [eax+edi*4-0xf]
  41d6dd:	ds dec ebx
  41d6df:	pop    edi
  41d6e0:	das    
  41d6e1:	and    bh,BYTE PTR [ebx]
  41d6e3:	xor    al,0xb6
  41d6e5:	dec    esp
  41d6e6:	ss dec ebp
  41d6e8:	(bad)  
  41d6e9:	retf   0xe27d
  41d6ec:	mov    al,ds:0xe7f57028
  41d6f1:	or     BYTE PTR [eax+0x28],bl
  41d6f4:	fwait
  41d6f5:	outs   dx,BYTE PTR ds:[esi]
  41d6f6:	fidiv  DWORD PTR ss:[edx]
  41d6f9:	repz xor BYTE PTR [ebp-0x7675023b],ch
  41d700:	pushf  
  41d701:	cld    
  41d702:	push   edi
  41d703:	pop    es
  41d704:	aaa    
  41d705:	fs sub dh,dh
  41d708:	pushf  
  41d709:	pop    esi
  41d70a:	mov    dh,BYTE PTR [esi+0x33]
  41d70d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d70e:	pusha  
  41d70f:	dec    ebx
  41d710:	dec    ebx
  41d711:	mov    ebx,0x8f329e37
  41d716:	push   es
  41d717:	inc    ebx
  41d718:	or     bl,dh
  41d71a:	das    
  41d71b:	mov    ds:0x2dda40bb,al
  41d720:	jb     0x41d6a8
  41d722:	loop   0x41d6f5
  41d724:	lods   eax,DWORD PTR ds:[esi]
  41d725:	inc    ebx
  41d726:	adc    DWORD PTR [ebx],esi
  41d728:	sti    
  41d729:	arpl   WORD PTR [edi],sp
  41d72b:	sbb    al,0x53
  41d72d:	cmp    esp,0xd8a62562
  41d733:	fcomp  st(6)
  41d735:	shld   DWORD PTR [edx-0x53555c4d],eax,cl
  41d73c:	sub    DWORD PTR [edx],esp
  41d73e:	push   esp
  41d73f:	xchg   esp,eax
  41d740:	xchg   ebp,eax
  41d741:	mov    eax,fs:0x512361b1
  41d747:	scas   eax,DWORD PTR es:[edi]
  41d748:	je     0x41d768
  41d74a:	xor    eax,ecx
  41d74c:	push   ss
  41d74d:	or     DWORD PTR [esi+0xc03449f],0xfffffffa
  41d754:	js     0x41d727
  41d756:	icebp  
  41d757:	ret    0xa411
  41d75a:	arpl   WORD PTR [ebx+eax*2],di
  41d75d:	rol    BYTE PTR [eax-0x7dade18d],cl
  41d763:	repnz and BYTE PTR [eax-0x21c411da],ah
  41d76a:	int    0x5
  41d76c:	sbb    DWORD PTR [esi],0xffffff95
  41d76f:	popf   
  41d770:	push   ecx
  41d771:	nop
  41d772:	(bad)  
  41d773:	cmp    eax,0xe7b92835
  41d778:	jae    0x41d7ef
  41d77a:	jg     0x41d701
  41d77c:	shr    BYTE PTR [edi+0x4b96eecf],cl
  41d782:	ins    DWORD PTR es:[edi],dx
  41d783:	xchg   edi,eax
  41d784:	idiv   DWORD PTR [esi+0x6915120c]
  41d78a:	mov    bl,0x7b
  41d78c:	inc    ebp
  41d78d:	jne    0x41d71d
  41d78f:	ret    
  41d790:	and    BYTE PTR [edx+edx*8],cl
  41d793:	pop    ecx
  41d794:	pop    edx
  41d795:	pop    ebp
  41d796:	aas    
  41d797:	fs shl edx,cl
  41d79a:	add    bl,BYTE PTR [edi+0x10299129]
  41d7a0:	lds    esi,FWORD PTR [eax+0x3b97b540]
  41d7a6:	jg     0x41d7d2
  41d7a8:	add    ah,BYTE PTR [eax+esi*1+0x5f278bf0]
  41d7af:	jp     0x41d80b
  41d7b1:	add    al,0xd2
  41d7b3:	dec    esi
  41d7b4:	aas    
  41d7b5:	std    
  41d7b6:	ja     0x41d7c8
  41d7b8:	repnz arpl WORD PTR [eax+0x355caab7],cx
  41d7bf:	mov    DWORD PTR [ecx-0x68],edi
  41d7c2:	aaa    
  41d7c3:	xchg   ecx,eax
  41d7c4:	test   ch,bh
  41d7c6:	inc    esi
  41d7c7:	sbb    eax,0x12bf951b
  41d7cc:	int    0xa9
  41d7ce:	push   edi
  41d7cf:	cmp    cl,dh
  41d7d1:	leave  
  41d7d2:	mov    WORD PTR [edi],fs
  41d7d4:	cld    
  41d7d5:	inc    eax
  41d7d6:	test   BYTE PTR [ebx],ah
  41d7d8:	add    DWORD PTR [ebx],edi
  41d7da:	(bad)  
  41d7db:	lds    ebp,FWORD PTR [ebx]
  41d7dd:	inc    esi
  41d7de:	pop    ds
  41d7df:	pop    esp
  41d7e0:	mov    WORD PTR [esi+0x4b],cs
  41d7e3:	nop
  41d7e4:	push   ds
  41d7e5:	loop   0x41d7f9
  41d7e7:	stos   BYTE PTR es:[edi],al
  41d7e8:	push   eax
  41d7e9:	pushf  
  41d7ea:	add    BYTE PTR [ecx-0x1],cl
  41d7ed:	test   DWORD PTR [ebx],edx
  41d7ef:	inc    edi
  41d7f0:	inc    ebx
  41d7f1:	mov    edx,0x976bbc52
  41d7f6:	fs ret 0x73e6
  41d7fa:	mov    bh,0xd1
  41d7fc:	fiadd  WORD PTR [eax-0x6d]
  41d7ff:	or     eax,DWORD PTR [ebp-0x2ae3296]
  41d805:	mov    eax,ds:0x57117f18
  41d80a:	xor    edx,0xffffffe1
  41d80d:	inc    ebp
  41d80e:	in     al,dx
  41d80f:	scas   al,BYTE PTR es:[edi]
  41d810:	xor    al,0xf3
  41d812:	scas   al,BYTE PTR es:[edi]
  41d813:	xor    DWORD PTR [ebx],0x67
  41d816:	jno    0x41d85f
  41d818:	sahf   
  41d819:	(bad)  
  41d81a:	out    0xb0,al
  41d81c:	inc    BYTE PTR [edi-0x1f79a94f]
  41d822:	(bad)  
  41d823:	mov    edi,0x5312f8a9
  41d828:	call   0xfdafca0d
  41d82d:	or     DWORD PTR [eax],0x1fad1e7c
  41d833:	or     edi,esp
  41d835:	leave  
  41d836:	mov    edx,DWORD PTR [edx]
  41d838:	pop    ecx
  41d839:	adc    al,0xfe
  41d83b:	fld    TBYTE PTR [ecx+0x33]
  41d83e:	or     bh,BYTE PTR [esi+edx*8+0x65c3f141]
  41d845:	jb     0x41d80d
  41d847:	jno    0x41d88a
  41d849:	sbb    BYTE PTR [eax+0x1a],ah
  41d84c:	jge    0x41d8be
  41d84e:	add    al,0xa7
  41d850:	shl    DWORD PTR [esi],1
  41d852:	adc    eax,0xe37842d9
  41d857:	mov    gs,WORD PTR [ecx+0x5f]
  41d85a:	aaa    
  41d85b:	scas   eax,DWORD PTR es:[edi]
  41d85c:	lds    edx,FWORD PTR [esi+0x2d7cc8bd]
  41d862:	rcr    BYTE PTR [edx-0x58],0x53
  41d866:	mov    bl,0x70
  41d868:	in     al,0x3
  41d86a:	mov    al,ds:0xe9834eb6
  41d86f:	cmc    
  41d870:	ins    BYTE PTR es:[edi],dx
  41d871:	and    al,0x7c
  41d873:	loope  0x41d840
  41d875:	fs inc esp
  41d877:	push   ds
  41d878:	dec    edx
  41d879:	aaa    
  41d87a:	sbb    cl,ch
  41d87c:	pop    esp
  41d87d:	in     eax,dx
  41d87e:	(bad)  
  41d87f:	es je  0x41d833
  41d882:	out    dx,eax
  41d883:	nop
  41d884:	fs in  eax,dx
  41d886:	icebp  
  41d887:	pop    ebp
  41d888:	aad    0xb0
  41d88a:	mov    al,ds:0x5549c048
  41d88f:	cwde   
  41d890:	mov    ecx,0xa31824b6
  41d895:	xchg   ebp,eax
  41d896:	(bad)  
  41d897:	pop    ebp
  41d898:	add    dl,BYTE PTR [ebx+0x32bc2510]
  41d89e:	cmp    BYTE PTR [edx+0x18],ah
  41d8a1:	pop    esp
  41d8a2:	jle    0x41d8c3
  41d8a4:	je     0x41d8f1
  41d8a6:	and    eax,0x2dd1b330
  41d8ab:	stc    
  41d8ac:	aaa    
  41d8ad:	push   ebp
  41d8ae:	xor    al,0xc7
  41d8b0:	scas   eax,DWORD PTR es:[edi]
  41d8b1:	add    DWORD PTR [esi+0x6b],edi
  41d8b4:	add    DWORD PTR fs:[ecx-0x24b706d2],esi
  41d8bb:	sub    ecx,ebx
  41d8bd:	mov    bl,0xe2
  41d8bf:	jp     0x41d847
  41d8c1:	inc    ecx
  41d8c2:	adc    ebp,DWORD PTR [ebp-0x3b]
  41d8c5:	inc    ecx
  41d8c6:	mov    ds:0xa263315b,eax
  41d8cb:	arpl   dx,di
  41d8cd:	mov    al,0xe0
  41d8cf:	dec    ecx
  41d8d0:	outs   dx,BYTE PTR ds:[esi]
  41d8d1:	mov    bl,0x21
  41d8d3:	mov    edi,DWORD PTR [ebx]
  41d8d5:	rcl    DWORD PTR [esi],0xb2
  41d8d8:	fdiv   QWORD PTR [eax]
  41d8da:	cmp    edx,eax
  41d8dc:	mov    al,ds:0x3134d4e7
  41d8e1:	push   cs
  41d8e2:	rep outs dx,BYTE PTR ds:[esi]
  41d8e4:	pop    edx
  41d8e5:	out    0x98,eax
  41d8e7:	inc    ecx
  41d8e8:	mov    ds:0x938d9485,al
  41d8ed:	nop
  41d8ee:	or     ch,BYTE PTR [edx+0x35]
  41d8f1:	out    dx,eax
  41d8f2:	sbb    ch,ah
  41d8f4:	adc    BYTE PTR [edx],0x62
  41d8f7:	sub    eax,0xd97d8b27
  41d8fc:	pop    edi
  41d8fd:	and    al,0x2b
  41d8ff:	sbb    DWORD PTR [edi],ebx
  41d901:	jmp    0x41d974
  41d903:	out    0x5f,al
  41d905:	push   cs
  41d906:	mov    al,ds:0x38eda605
  41d90b:	mov    al,0x8e
  41d90d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d90e:	div    BYTE PTR [ebx-0xf]
  41d911:	shl    al,0x35
  41d914:	push   ds
  41d915:	sub    BYTE PTR [esi+0x50],ch
  41d918:	scas   al,BYTE PTR es:[edi]
  41d919:	inc    ebp
  41d91a:	aaa    
  41d91b:	jg     0x41d922
  41d91d:	mov    eax,?
  41d91f:	inc    ecx
  41d920:	test   DWORD PTR [ebp-0x692c11fb],0xb95184c4
  41d92a:	popa   
  41d92b:	ins    DWORD PTR es:[edi],dx
  41d92c:	jbe    0x41d99e
  41d92e:	imul   edi,DWORD PTR [edi-0x5744b1d],0xad06fec1
  41d938:	outs   dx,BYTE PTR ds:[esi]
  41d939:	addr16 lahf 
  41d93b:	pop    esp
  41d93c:	cmp    BYTE PTR [ecx],cl
  41d93e:	(bad)  
  41d93f:	jg     0x41d92e
  41d941:	dec    esp
  41d942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d943:	mov    cl,0x74
  41d945:	imul   eax,ecx,0x548af840
  41d94b:	not    DWORD PTR [eax+0x6f]
  41d94e:	stc    
  41d94f:	xchg   ebx,eax
  41d950:	or     cl,BYTE PTR [edx]
  41d952:	fidivr WORD PTR ds:0x8d4abadb
  41d958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d959:	mov    ah,0x65
  41d95b:	xchg   ebp,eax
  41d95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d95d:	and    DWORD PTR [edx],eax
  41d95f:	aas    
  41d960:	ins    DWORD PTR es:[edi],dx
  41d961:	sub    BYTE PTR [edx+0x19ab9a20],bh
  41d967:	retf   0x29b5
  41d96a:	(bad)  
  41d96b:	or     DWORD PTR [esi+0x7c],esp
  41d96e:	les    edx,FWORD PTR ds:0x1d6f09b
  41d974:	imul   eax,DWORD PTR [edi-0x8],0x300b0d67
  41d97b:	icebp  
  41d97c:	jl     0x41d978
  41d97e:	sub    al,0x8f
  41d980:	and    al,dl
  41d982:	test   eax,0x60e4f493
  41d987:	inc    esp
  41d988:	cmp    edx,DWORD PTR [ecx]
  41d98a:	and    bh,BYTE PTR [ebp-0x6764f3a9]
  41d990:	arpl   ax,bx
  41d992:	cwde   
  41d993:	mov    ebp,0x1ef63502
  41d998:	fcomp  QWORD PTR [esi+0x7dac84a3]
  41d99e:	push   0x390fcd41
  41d9a3:	push   eax
  41d9a4:	sbb    DWORD PTR [ecx+0x3e02a68a],edx
  41d9aa:	jl     0x41d9bc
  41d9ac:	pusha  
  41d9ad:	xor    dl,BYTE PTR [edi]
  41d9af:	jnp    0x41d99d
  41d9b1:	mov    cl,0x1f
  41d9b3:	pop    ebp
  41d9b4:	loope  0x41d9fc
  41d9b6:	cmc    
  41d9b7:	and    esi,DWORD PTR [eax+0x55db4164]
  41d9bd:	sub    BYTE PTR [eax+0x14],0xe6
  41d9c1:	mov    ecx,0x85fc0470
  41d9c6:	lods   eax,DWORD PTR ds:[esi]
  41d9c7:	or     bh,BYTE PTR [edi]
  41d9c9:	mov    dl,0xc2
  41d9cb:	jns    0x41d9b6
  41d9cd:	jno    0x41d9a2
  41d9cf:	mov    edi,0xffcc44fc
  41d9d4:	mov    cl,BYTE PTR [edx-0x6eaf5b3f]
  41d9da:	mov    al,0xb6
  41d9dc:	xchg   ebp,eax
  41d9dd:	dec    eax
  41d9de:	pop    ss
  41d9df:	mov    ebp,0xfe5e8d4b
  41d9e4:	jg     0x41d98d
  41d9e6:	or     al,0xed
  41d9e8:	push   esp
  41d9e9:	ret    
  41d9ea:	sub    ebx,DWORD PTR [ecx+0x3b810c91]
  41d9f0:	in     eax,0x29
  41d9f2:	lock gs pop edx
  41d9f5:	mov    ds:0x76aad187,al
  41d9fa:	lock add al,0x45
  41d9fd:	clc    
  41d9fe:	scas   al,BYTE PTR es:[edi]
  41d9ff:	(bad)  
  41da00:	sbb    bh,BYTE PTR [ebx-0x29]
  41da03:	push   0xffffffa9
  41da05:	jnp    0x41d9e6
  41da07:	or     al,BYTE PTR [edi-0x2cf969d9]
  41da0d:	fidiv  WORD PTR [esi-0x2c]
  41da10:	pop    ds
  41da11:	xchg   ebx,eax
  41da12:	push   esp
  41da13:	and    al,0x30
  41da15:	sub    BYTE PTR [esi-0x5b],bl
  41da18:	int    0x89
  41da1a:	(bad)  
  41da1d:	loope  0x41d9e3
  41da1f:	out    dx,al
  41da20:	and    edx,0x55c9cb46
  41da26:	and    eax,ebp
  41da28:	test   ah,0x25
  41da2b:	dec    ecx
  41da2c:	dec    esi
  41da2d:	push   cs
  41da2e:	cdq    
  41da2f:	jp     0x41da2f
  41da31:	or     dh,BYTE PTR [eax]
  41da33:	enter  0x2587,0x0
  41da37:	out    0x3c,al
  41da39:	inc    ecx
  41da3a:	cli    
  41da3b:	lea    eax,[edx+eax*8+0x65269327]
  41da42:	idiv   BYTE PTR [edi]
  41da44:	enter  0x552d,0xba
  41da48:	repnz mov DWORD PTR [eax+edi*1],ebx
  41da4c:	les    ebx,FWORD PTR [eax+0x5511eb73]
  41da52:	repnz sub edx,esp
  41da55:	sub    BYTE PTR [ebp-0x68],0x98
  41da59:	xor    esi,DWORD PTR [edi-0x62]
  41da5c:	out    dx,eax
  41da5d:	fabs   
  41da5f:	mov    bl,0x9c
  41da61:	mov    edx,0xe8b59e53
  41da66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da67:	ficom  DWORD PTR [eax-0xce772d4]
  41da6d:	xchg   edi,edx
  41da6f:	(bad)  
  41da70:	jmp    0x41d9fc
  41da72:	test   DWORD PTR [eax],eax
  41da74:	dec    edi
  41da75:	pop    ebx
  41da76:	cmp    bh,BYTE PTR [ecx-0x246358e4]
  41da7c:	push   es
  41da7d:	mov    bl,0xcf
  41da7f:	xchg   edi,eax
  41da80:	rcl    DWORD PTR [ebx],cl
  41da82:	sbb    al,0xee
  41da84:	and    al,BYTE PTR [ebp+eax*1+0x79ef8815]
  41da8b:	dec    edx
  41da8c:	cdq    
  41da8d:	xor    eax,0x38dbb206
  41da92:	daa    
  41da93:	fbld   TBYTE PTR [eax+0x23]
  41da96:	adc    eax,edi
  41da98:	pop    esp
  41da99:	or     DWORD PTR [edx+0x3d],ebx
  41da9c:	mov    dl,0xe5
  41da9e:	xchg   esi,eax
  41da9f:	adc    BYTE PTR [esi-0x4b],bl
  41daa2:	sbb    BYTE PTR [eax+0x5b],ch
  41daa5:	add    ah,dl
  41daa7:	push   edx
  41daa8:	mov    esp,0x1afdde8d
  41daad:	jb     0x41da8c
  41daaf:	cmp    al,0x24
  41dab1:	push   edi
  41dab2:	enter  0x4ff9,0x4b
  41dab6:	inc    ebp
  41dab7:	xor    al,0x26
  41dab9:	jns    0x41dabb
  41dabb:	pushf  
  41dabc:	mov    ah,0x39
  41dabe:	cmp    eax,0xdc1a0142
  41dac3:	ret    0xeb8b
  41dac6:	inc    esi
  41dac7:	xor    ebx,DWORD PTR [eax]
  41dac9:	fimul  DWORD PTR [ebx]
  41dacb:	cmp    eax,DWORD PTR [edi+0x19]
  41dace:	stos   BYTE PTR es:[edi],al
  41dacf:	mov    ah,0x74
  41dad1:	push   esp
  41dad2:	mov    bh,0x71
  41dad4:	(bad)  
  41dad5:	push   0x0
  41dad7:	out    0x24,al
  41dad9:	push   ebx
  41dada:	hlt    
  41dadb:	cmp    BYTE PTR [esp+esi*4+0x1f],dl
  41dadf:	jg     0x41db40
  41dae1:	mov    gs,WORD PTR [edx+edx*1]
  41dae4:	add    BYTE PTR [edx-0x650c3f60],ch
  41daea:	cmp    BYTE PTR [esi+eax*2+0x5724c564],ch
  41daf1:	push   eax
  41daf2:	sub    eax,0xca22a2de
  41daf7:	test   al,0x2d
  41daf9:	inc    edi
  41dafa:	mov    ds:0x8b77626,al
  41daff:	pusha  
  41db00:	ins    BYTE PTR es:[edi],dx
  41db01:	fldcw  WORD PTR [ebx+0x4b]
  41db04:	add    edx,edx
  41db06:	retf   0x9312
  41db09:	mov    eax,ds:0xe22a12bf
  41db0e:	scas   eax,DWORD PTR es:[edi]
  41db0f:	sbb    eax,0x290dee1e
  41db14:	xchg   ecx,eax
  41db15:	ins    DWORD PTR es:[edi],dx
  41db16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db17:	dec    esp
  41db18:	inc    esp
  41db19:	shr    dh,0xf0
  41db1c:	inc    esp
  41db1d:	sub    BYTE PTR [eax],dh
  41db1f:	push   esi
  41db20:	cmp    ecx,DWORD PTR [ebx+0x42]
  41db23:	arpl   WORD PTR [edi],di
  41db25:	into   
  41db26:	pop    edi
  41db27:	ds ins BYTE PTR es:[edi],dx
  41db29:	fdiv   DWORD PTR [ebx+0xa3d1765]
  41db2f:	jge    0x41db0c
  41db31:	inc    esp
  41db32:	stos   BYTE PTR es:[edi],al
  41db33:	rcl    ecx,cl
  41db35:	lods   eax,DWORD PTR ds:[esi]
  41db36:	pop    ebx
  41db37:	aaa    
  41db38:	or     ch,BYTE PTR [edi+0x62]
  41db3b:	stos   DWORD PTR es:[edi],eax
  41db3c:	push   esp
  41db3d:	dec    edi
  41db3e:	jmp    0x41db9d
  41db40:	adc    esi,ebp
  41db42:	mov    esp,ecx
  41db44:	pop    edx
  41db45:	cmp    DWORD PTR [ebx+0x6d],0x4e9c9855
  41db4c:	repnz cmovb esi,edi
  41db50:	bound  esi,QWORD PTR gs:[ecx+0x5]
  41db54:	ja     0x41dbb7
  41db56:	stos   DWORD PTR es:[edi],eax
  41db57:	sti    
  41db58:	push   ecx
  41db59:	rcl    ebp,0x10
  41db5c:	push   ebp
  41db5d:	test   DWORD PTR [eax-0x5b],ebp
  41db60:	sub    DWORD PTR [ebx],ebp
  41db62:	int    0xed
  41db64:	call   0xf826f38c
  41db69:	out    0x7f,eax
  41db6b:	shl    DWORD PTR [eax-0x175c2b1f],cl
  41db71:	bound  ebx,QWORD PTR [edx]
  41db73:	dec    DWORD PTR [esi-0x6b260ff8]
  41db79:	retf   0xcc5e
  41db7c:	xchg   ebx,eax
  41db7d:	jecxz  0x41db03
  41db7f:	inc    edi
  41db80:	or     al,0x48
  41db82:	in     eax,0x89
  41db84:	lahf   
  41db85:	inc    ebp
  41db86:	dec    esp
  41db87:	jmp    0x41dba9
  41db89:	das    
  41db8a:	lods   eax,DWORD PTR ds:[esi]
  41db8b:	xchg   ebp,eax
  41db8c:	inc    edx
  41db8d:	(bad)  
  41db8e:	ins    DWORD PTR es:[edi],dx
  41db8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db90:	xchg   BYTE PTR [edx],bl
  41db92:	call   0xbd14:0xcc3865db
  41db99:	ins    DWORD PTR es:[edi],dx
  41db9a:	mov    WORD PTR [ecx-0x36],ss
  41db9d:	popf   
  41db9e:	push   ebp
  41db9f:	jae    0x41db85
  41dba1:	je     0x41db49
  41dba3:	ficom  WORD PTR [ecx+ebx*2]
  41dba6:	cdq    
  41dba7:	mov    ebp,0xdce436cc
  41dbac:	and    edi,DWORD PTR [eax+ebx*8-0x7a]
  41dbb0:	or     bl,BYTE PTR [edx]
  41dbb2:	call   0xfbb1848c
  41dbb7:	jmp    0x73c9c99
  41dbbc:	scas   al,BYTE PTR es:[edi]
  41dbbd:	or     al,0x34
  41dbbf:	mov    ebp,0xfe88dcac
  41dbc4:	sbb    DWORD PTR ds:0x2947ece8,0xdcfd11ef
  41dbce:	jbe    0x41db84
  41dbd0:	pop    edx
  41dbd1:	adc    al,0xda
  41dbd3:	dec    edi
  41dbd4:	out    dx,eax
  41dbd5:	mov    al,0x1a
  41dbd7:	push   cs
  41dbd8:	sbb    bh,BYTE PTR [ebx+ecx*2-0x17]
  41dbdc:	jmp    0x7d85:0x18bc2c7a
  41dbe3:	mov    dh,0x35
  41dbe5:	out    0xc8,eax
  41dbe7:	jae    0x41dbb4
  41dbe9:	inc    ecx
  41dbea:	push   edx
  41dbeb:	mov    edi,esi
  41dbed:	(bad)  
  41dbee:	andps  xmm0,XMMWORD PTR [ecx]
  41dbf1:	or     eax,0xc4cbbeda
  41dbf6:	jbe    0x41db7d
  41dbf8:	ficomp DWORD PTR [edi]
  41dbfa:	xor    al,0x82
  41dbfc:	ficom  WORD PTR [ecx]
  41dbfe:	jnp    0x41db8a
  41dc00:	dec    eax
  41dc01:	into   
  41dc02:	and    BYTE PTR [esi+0x7e9c7e12],bl
  41dc08:	push   0xd7348743
  41dc0d:	add    eax,0x209d84af
  41dc12:	push   eax
  41dc13:	mov    esi,0xb7b100c1
  41dc18:	out    0x35,al
  41dc1a:	inc    ebx
  41dc1b:	fwait
  41dc1c:	jp     0x41dc7e
  41dc1e:	fstp   QWORD PTR [eax]
  41dc20:	stos   DWORD PTR es:[edi],eax
  41dc21:	cmp    bh,BYTE PTR [ebp-0x3f]
  41dc24:	pop    ebx
  41dc25:	call   0xae558985
  41dc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc2b:	in     al,0x26
  41dc2d:	push   edi
  41dc2e:	dec    ecx
  41dc2f:	daa    
  41dc30:	push   esp
  41dc31:	pop    ebp
  41dc32:	bound  edi,QWORD PTR [edi]
  41dc34:	gs or  al,0x58
  41dc37:	mov    al,cl
  41dc39:	inc    esi
  41dc3a:	fiadd  DWORD PTR [eax+0x6f195e84]
  41dc40:	dec    edx
  41dc41:	cmp    BYTE PTR [esp+ebp*1],bl
  41dc44:	jbe    0x41dc83
  41dc46:	ficomp DWORD PTR [edx+eiz*4-0x19262406]
  41dc4d:	sbb    DWORD PTR [eax],esp
  41dc4f:	arpl   si,di
  41dc51:	jmp    DWORD PTR [eax+0xc]
  41dc54:	inc    esp
  41dc55:	rcl    BYTE PTR [ebx+0x50],1
  41dc58:	jne    0x41dc78
  41dc5a:	pop    DWORD PTR [ebx+0x70]
  41dc5d:	cli    
  41dc5e:	mov    ecx,DWORD PTR [esi]
  41dc60:	pushf  
  41dc61:	pushf  
  41dc62:	cmp    al,0x45
  41dc64:	test   DWORD PTR [ebx-0x5a46e0db],0xe467f34d
  41dc6e:	xchg   ch,cl
  41dc70:	outs   dx,DWORD PTR ds:[esi]
  41dc71:	sbb    eax,esp
  41dc73:	(bad)  
  41dc74:	push   eax
  41dc75:	xchg   ebx,eax
  41dc76:	fs mov esi,0x9de2e13b
  41dc7c:	scas   eax,DWORD PTR es:[edi]
  41dc7d:	leave  
  41dc7e:	jnp    0x41dce8
  41dc80:	stc    
  41dc81:	cdq    
  41dc82:	or     ch,0x15
  41dc85:	std    
  41dc86:	mov    eax,ds:0x95a9f661
  41dc8b:	jmp    0xd534:0xe15d8346
  41dc92:	int    0xb5
  41dc94:	hlt    
  41dc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc96:	sub    dh,al
  41dc98:	imul   edx,DWORD PTR [edx-0xcf52a39],0xac2b52f8
  41dca2:	adc    DWORD PTR [esi-0x3f9207ba],esp
  41dca8:	add    ebp,ebp
  41dcaa:	mov    al,0xd
  41dcac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcad:	(bad)  
  41dcae:	fs mov al,0xea
  41dcb1:	test   al,0x97
  41dcb3:	(bad)  
  41dcb4:	aas    
  41dcb5:	mov    esp,0x8eb29d5
  41dcba:	ds out 0xfb,al
  41dcbd:	std    
  41dcbe:	pop    edx
  41dcbf:	jae    0x41dd11
  41dcc1:	push   0x3d
  41dcc3:	fs add eax,0xa0ddeb90
  41dcc9:	shl    DWORD PTR [eax],0xf4
  41dccc:	cli    
  41dccd:	xchg   ecx,eax
  41dcce:	or     al,0x11
  41dcd0:	adc    al,0xa9
  41dcd2:	xchg   edi,eax
  41dcd3:	add    eax,DWORD PTR [esi+0x2cca5b57]
  41dcd9:	mov    esi,0xbb29b2bf
  41dcde:	dec    esp
  41dcdf:	pusha  
  41dce0:	dec    edx
  41dce1:	loopne 0x41dcd4
  41dce3:	cmp    eax,0xac451eec
  41dce8:	sub    cl,BYTE PTR [edx]
  41dcea:	(bad)  
  41dceb:	int    0x5
  41dced:	add    eax,0x1771df47
  41dcf2:	xchg   ebp,eax
  41dcf3:	popa   
  41dcf4:	mov    ecx,0x949109b9
  41dcf9:	das    
  41dcfa:	dec    edx
  41dcfb:	(bad)  
  41dcfc:	(bad)
  41dcff:	sub    BYTE PTR [esi],bl
  41dd01:	adc    eax,0x1d276191
  41dd06:	mov    ?,WORD PTR [esp+ebp*4+0x12]
  41dd0a:	add    al,0xee
  41dd0c:	dec    edi
  41dd0d:	nop
  41dd0e:	inc    eax
  41dd0f:	mov    bl,0x1c
  41dd11:	ds in  al,dx
  41dd13:	pushf  
  41dd14:	loope  0x41dcbf
  41dd16:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41dd18:	sbb    esp,DWORD PTR ds:0xe36e4dbc
  41dd1e:	xchg   edx,eax
  41dd1f:	rcr    edi,1
  41dd21:	das    
  41dd22:	jno    0x41dd71
  41dd24:	nop
  41dd25:	pop    esp
  41dd26:	call   0x6a1f4203
  41dd2b:	mov    WORD PTR [ebp-0x2ebda4ec],gs
  41dd31:	rol    ch,cl
  41dd33:	lock sbb eax,0x4a767aa7
  41dd39:	mov    dh,0x79
  41dd3b:	inc    edx
  41dd3c:	rcr    DWORD PTR [ebp+0x5e2d8e47],0x2b
  41dd43:	pop    ss
  41dd44:	addr16 mov dl,0x85
  41dd47:	es scas al,BYTE PTR es:[edi]
  41dd49:	je     0x41dd90
  41dd4b:	in     eax,0xe0
  41dd4d:	das    
  41dd4e:	in     eax,0xbc
  41dd50:	(bad)  
  41dd51:	xchg   esi,eax
  41dd52:	fdiv   DWORD PTR [edx]
  41dd54:	scas   al,BYTE PTR es:[edi]
  41dd55:	fild   QWORD PTR [ecx-0x5001f127]
  41dd5b:	adc    al,0xe6
  41dd5d:	xor    BYTE PTR ss:[edi-0x11f2400],ah
  41dd64:	inc    edx
  41dd65:	add    eax,0x2d9fa867
  41dd6a:	dec    edx
  41dd6b:	xor    edx,DWORD PTR [esi]
  41dd6d:	(bad)  
  41dd6e:	fcom   st(5)
  41dd70:	sbb    dl,BYTE PTR [edi+0x751c57d5]
  41dd76:	sbb    BYTE PTR [ecx+edi*2-0x3e],bl
  41dd7a:	test   eax,0x5c1abd14
  41dd7f:	inc    esi
  41dd80:	adc    edx,ebp
  41dd82:	adc    eax,0x280a41a7
  41dd87:	adc    eax,edi
  41dd89:	mov    ebx,0xe56ccdb8
  41dd8e:	inc    esi
  41dd8f:	or     ecx,esp
  41dd91:	push   es
  41dd92:	pop    ebp
  41dd93:	hlt    
  41dd94:	mov    bl,ah
  41dd96:	(bad)  gs:[esi-0x74cfa104]
  41dd9d:	out    dx,al
  41dd9e:	pop    edi
  41dd9f:	(bad)  
  41dda1:	retf   
  41dda2:	test   ah,dh
  41dda4:	test   al,0x6b
  41dda6:	cwde   
  41dda7:	ja     0x41dd5a
  41dda9:	pop    edi
  41ddaa:	xchg   edx,eax
  41ddab:	bound  esp,QWORD PTR [ebp+edx*2+0x2f]
  41ddaf:	aam    0x4a
  41ddb1:	inc    esi
  41ddb2:	inc    ebp
  41ddb3:	inc    esi
  41ddb4:	add    dh,BYTE PTR [edi+edi*1-0x63]
  41ddb8:	mov    ds:0xc247596c,eax
  41ddbd:	xchg   esp,eax
  41ddbe:	lods   eax,DWORD PTR ds:[esi]
  41ddbf:	dec    ecx
  41ddc0:	loope  0x41de3b
  41ddc2:	adc    DWORD PTR [edx+0x56],0xffffff99
  41ddc6:	inc    esi
  41ddc7:	call   0xb123:0xff9d7dc3
  41ddce:	imul   ebx,DWORD PTR [eax-0x22539aa4],0xffffff86
  41ddd5:	retf   
  41ddd6:	je     0x41dd85
  41ddd8:	xchg   BYTE PTR [edi+0x4e8cb9d0],dl
  41ddde:	icebp  
  41dddf:	add    BYTE PTR [esi],ch
  41dde1:	cmp    eax,0x637a73ad
  41dde6:	(bad)  
  41dde7:	(bad)  
  41dde9:	and    DWORD PTR [edi+0x6d250c6f],ebx
  41ddef:	retf   
  41ddf0:	sti    
  41ddf1:	pushf  
  41ddf2:	in     eax,dx
  41ddf3:	mov    edi,0x32d0a2a6
  41ddf8:	sub    esp,DWORD PTR [eax-0x1d]
  41ddfb:	das    
  41ddfc:	inc    ebp
  41ddfd:	adc    DWORD PTR [ebp-0x4c2b6018],esi
  41de03:	add    BYTE PTR [ebx-0x42146e8d],ch
  41de09:	sti    
  41de0a:	add    edx,DWORD PTR [edx]
  41de0c:	sbb    bl,BYTE PTR [edi-0x4d6970ac]
  41de12:	loope  0x41de17
  41de14:	mov    ds:0xad37e5,eax
  41de19:	sbb    DWORD PTR [ecx+0x23],ebx
  41de1c:	pushf  
  41de1d:	push   es
  41de1e:	ins    DWORD PTR es:[edi],dx
  41de1f:	and    ch,BYTE PTR [edx-0x3f91674f]
  41de25:	jmp    0xffe1:0xdf4df465
  41de2c:	add    esi,DWORD PTR es:[ecx-0x525c23ae]
  41de33:	mov    es,WORD PTR [ebx+0x701b0d35]
  41de39:	in     eax,0xc0
  41de3b:	mov    esp,0x1a1e2792
  41de40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de41:	xchg   DWORD PTR [eax],esi
  41de43:	pop    ecx
  41de44:	xlat   BYTE PTR ds:[ebx]
  41de45:	fiadd  WORD PTR [esi]
  41de47:	enter  0x9321,0x59
  41de4b:	aas    
  41de4c:	(bad)  
  41de4d:	or     eax,0xb5c6ba31
  41de52:	int3   
  41de53:	arpl   sp,bp
  41de55:	cmc    
  41de56:	sub    ecx,DWORD PTR [esi]
  41de58:	data16 mov ds:0xcd965ded,al
  41de5e:	inc    ecx
  41de5f:	cs jg  0x41ddec
  41de62:	xor    al,0x1
  41de64:	xor    al,0x76
  41de66:	cmp    esi,esp
  41de68:	pushf  
  41de69:	sub    dl,BYTE PTR [edi+0x5b]
  41de6c:	shl    sp,1
  41de6f:	stos   DWORD PTR es:[edi],eax
  41de70:	(bad)  
  41de71:	arpl   WORD PTR [edi+0x31412d29],dx
  41de77:	fwait
  41de78:	cmp    dh,BYTE PTR [ebx]
  41de7a:	stc    
  41de7b:	cmp    BYTE PTR [ebp-0x169a366e],0x4f
  41de82:	ret    
  41de83:	jle    0x41de8f
  41de85:	mov    ebp,0x18caca79
  41de8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de8b:	ss inc esp
  41de8d:	and    ecx,esi
  41de8f:	out    0x10,eax
  41de91:	mov    bh,BYTE PTR [edx-0x36]
  41de94:	arpl   WORD PTR [edi+eax*4+0x10e2e1b2],cx
  41de9b:	jp     0x41de4f
  41de9d:	out    0x92,eax
  41de9f:	mov    dl,0x20
  41dea1:	xor    BYTE PTR [ebp-0x48],bh
  41dea4:	jae    0x41df0a
  41dea6:	push   edx
  41dea7:	frstor [esi]
  41dea9:	dec    edx
  41deaa:	es xchg ecx,eax
  41deac:	and    dl,0x58
  41deaf:	sbb    dl,BYTE PTR [edx-0x237c42f3]
  41deb5:	push   es
  41deb6:	addr16 ret 0xe512
  41deba:	adc    eax,DWORD PTR [edx+0x4e3e28a3]
  41dec0:	xor    cl,BYTE PTR [ebx-0x1a]
  41dec3:	ret    0x119c
  41dec6:	cmp    esp,ebp
  41dec8:	fisttp QWORD PTR [eax]
  41deca:	lea    ebp,[ebp+0x3d]
  41decd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dece:	(bad)  
  41decf:	faddp  st(3),st
  41ded1:	daa    
  41ded2:	pop    ebp
  41ded3:	cmp    bh,bh
  41ded5:	and    esi,ebp
  41ded7:	sub    ch,BYTE PTR [edi+0x65803335]
  41dedd:	mov    gs,WORD PTR [eax-0x5a]
  41dee0:	aaa    
  41dee1:	pop    ss
  41dee2:	xchg   esi,eax
  41dee3:	imul   BYTE PTR [ecx+0x47]
  41dee6:	lods   al,BYTE PTR ds:[esi]
  41dee7:	mov    ebx,DWORD PTR [edi+0x43]
  41deea:	imul   eax,DWORD PTR [eax-0x639a49a9],0x75b9da99
  41def4:	mov    ecx,DWORD PTR [edx-0x4092dc1c]
  41defa:	(bad)
  41defd:	pushf  
  41defe:	add    ch,BYTE PTR [edx+0x3dfba678]
  41df04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df05:	cdq    
  41df06:	ins    DWORD PTR es:[edi],dx
  41df07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df08:	sbb    DWORD PTR [eax-0x10f59419],esp
  41df0e:	ret    0xc943
  41df11:	scas   al,BYTE PTR es:[edi]
  41df12:	sahf   
  41df13:	cmp    edi,eax
  41df15:	stc    
  41df16:	or     al,0x33
  41df18:	clc    
  41df19:	jnp    0x41def4
  41df1b:	xchg   esi,eax
  41df1c:	adc    bh,BYTE PTR [ecx]
  41df1e:	fwait
  41df1f:	js     0x41df37
  41df21:	jb     0x41dee7
  41df23:	inc    edx
  41df24:	sbb    BYTE PTR [edx+0x61],cl
  41df27:	pop    edi
  41df28:	iret   
  41df29:	por    mm0,QWORD PTR [ebx+esi*1]
  41df2d:	dec    esp
  41df2e:	jge    0x41dfaf
  41df30:	mov    al,0x6c
  41df32:	(bad)  
  41df33:	cmc    
  41df34:	dec    ecx
  41df35:	sar    DWORD PTR [ecx+0x54530538],0x7b
  41df3c:	mov    WORD PTR [ebp+edi*1+0x25fb8c66],fs
  41df43:	fwait
  41df44:	xor    edi,ecx
  41df46:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df48:	frstor [eax-0x6bcadbf1]
  41df4e:	stos   BYTE PTR es:[edi],al
  41df4f:	xor    eax,0x1b5a28a7
  41df54:	clc    
  41df55:	dec    ecx
  41df56:	ficomp WORD PTR [edx]
  41df58:	scas   al,BYTE PTR es:[edi]
  41df59:	jo     0x41df85
  41df5b:	ins    DWORD PTR es:[edi],dx
  41df5c:	cmp    dl,BYTE PTR [esi+0x702b1f66]
  41df62:	test   BYTE PTR [esi+0x37],dh
  41df65:	sub    al,BYTE PTR [ebx]
  41df67:	add    DWORD PTR [eax+0x75],edi
  41df6a:	retf   0x2146
  41df6d:	sub    edi,DWORD PTR [eax+0x2]
  41df70:	or     al,0xa0
  41df72:	retf   0xb74
  41df75:	fbld   TBYTE PTR [edi]
  41df77:	push   eax
  41df78:	loopne 0x41df88
  41df7a:	add    eax,0x68ebf9ac
  41df7f:	push   edi
  41df80:	icebp  
  41df81:	in     eax,dx
  41df82:	int3   
  41df83:	pop    ss
  41df84:	inc    ecx
  41df85:	mov    al,ds:0x1c339c61
  41df8a:	pop    ecx
  41df8b:	pop    esp
  41df8c:	les    ebp,FWORD PTR [ecx+0x2a]
  41df8f:	pop    ebp
  41df90:	push   edi
  41df91:	pop    ds
  41df92:	cs ss mov dl,0xb3
  41df96:	clc    
  41df97:	pop    ds
  41df98:	dec    esp
  41df99:	adc    ebp,edx
  41df9b:	retf   
  41df9c:	mov    dl,0xb0
  41df9e:	sbb    dh,BYTE PTR [eax+0x3c]
  41dfa1:	xor    eax,0x49fdef2b
  41dfa6:	retf   
  41dfa7:	test   DWORD PTR [ebp+eiz*8+0x56],0x3130e52f
  41dfaf:	scas   al,BYTE PTR es:[edi]
  41dfb0:	sub    eax,0x2463ab61
  41dfb5:	sub    bh,al
  41dfb7:	nop
  41dfb8:	cmc    
  41dfb9:	shrd   DWORD PTR ds:0xa87db38d,edx,0xce
  41dfc1:	mov    ah,0xc9
  41dfc3:	and    ah,cl
  41dfc5:	pop    ebp
  41dfc6:	rcl    DWORD PTR [ebp+0x174ccada],1
  41dfcc:	inc    edi
  41dfcd:	push   esi
  41dfce:	popa   
  41dfcf:	das    
  41dfd0:	not    BYTE PTR [eax+0xb]
  41dfd3:	and    DWORD PTR [esi],ebp
  41dfd5:	stos   DWORD PTR es:[edi],eax
  41dfd6:	retf   
  41dfd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfd8:	dec    edx
  41dfd9:	mov    edi,0x8567bfc3
  41dfde:	mov    ds:0x9fa01d00,eax
  41dfe3:	or     cl,BYTE PTR [eax]
  41dfe5:	cmp    eax,0xc43de15c
  41dfea:	jg     0x41e066
  41dfec:	and    DWORD PTR [eax+0x772bfd1e],ecx
  41dff2:	dec    edi
  41dff3:	int3   
  41dff4:	fst    QWORD PTR [eax]
  41dff6:	(bad)  
  41dff7:	in     al,0x5e
  41dff9:	sub    al,0x5c
  41dffb:	sbb    ch,al
  41dffd:	lods   eax,DWORD PTR ds:[esi]
  41dffe:	fmul   QWORD PTR [esi-0x63349134]
  41e004:	push   es
  41e005:	inc    eax
  41e006:	lods   al,BYTE PTR ds:[esi]
  41e007:	(bad)  
  41e009:	lods   al,BYTE PTR ds:[esi]
  41e00a:	fmul   QWORD PTR [esi-0xe]
  41e00d:	fs fcmovu st,st(5)
  41e010:	add    eax,0x5574773a
  41e015:	mov    dh,0x6e
  41e017:	sbb    DWORD PTR [ecx],ecx
  41e019:	and    ch,BYTE PTR [edi]
  41e01b:	cld    
  41e01c:	jb     0x41e093
  41e01e:	dec    ebx
  41e01f:	add    eax,DWORD PTR [edi-0x7c]
  41e022:	scas   al,BYTE PTR es:[edi]
  41e023:	or     eax,0x577e8a0
  41e028:	pop    ds
  41e029:	aaa    
  41e02a:	inc    esi
  41e02b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e02c:	ss rcl dl,0x12
  41e030:	adc    dh,bh
  41e032:	into   
  41e033:	aam    0xb0
  41e035:	xchg   esp,eax
  41e036:	push   ebx
  41e037:	les    edx,FWORD PTR [ebp+0x4e]
  41e03a:	jmp    0x41dff1
  41e03c:	popa   
  41e03d:	aas    
  41e03e:	jp     0x41e0bd
  41e040:	sbb    dl,dh
  41e042:	xchg   esi,eax
  41e043:	dec    ebx
  41e044:	push   ecx
  41e045:	jnp    0x41e011
  41e047:	out    0x64,eax
  41e049:	dec    eax
  41e04a:	and    ebx,DWORD PTR [eax]
  41e04c:	sub    esp,ebx
  41e04e:	clc    
  41e04f:	add    eax,0xb6838137
  41e054:	inc    esi
  41e055:	(bad)  
  41e056:	fild   QWORD PTR [edx-0x68]
  41e059:	nop
  41e05a:	xor    BYTE PTR [esi],dh
  41e05c:	xchg   esp,eax
  41e05d:	je     0x41dfe9
  41e05f:	dec    esp
  41e060:	ss leave 
  41e062:	fstp   QWORD PTR [edx+0x20]
  41e065:	rdmsr  
  41e067:	call   0x3c56:0xa564929c
  41e06e:	test   BYTE PTR [edi],ah
  41e070:	dec    ebp
  41e071:	fwait
  41e072:	in     al,dx
  41e073:	jne    0x41e067
  41e075:	int3   
  41e076:	outs   dx,DWORD PTR ds:[esi]
  41e077:	call   0x510f:0xb08ccd1b
  41e07e:	push   esp
  41e07f:	add    eax,0x7ea9792c
  41e084:	loope  0x41e05b
  41e086:	test   eax,0x633c2ddb
  41e08c:	sbb    eax,0xe462c23a
  41e091:	adc    ebx,0x7a
  41e094:	out    0x1f,eax
  41e096:	mov    edx,0x77569be0
  41e09b:	add    ah,0xa6
  41e09e:	(bad)  
  41e09f:	repnz sbb DWORD PTR [esi+0x38],ebp
  41e0a3:	cmp    ebp,DWORD PTR [esi]
  41e0a5:	stc    
  41e0a6:	maskmovq mm1,(bad)
  41e0a7:	test   DWORD PTR [ecx],0xcafabd68
  41e0ad:	test   al,0x1f
  41e0af:	and    DWORD PTR [ebx+ecx*4-0x27378bd6],ebx
  41e0b6:	mov    esi,0x98e2a41
  41e0bb:	xchg   edi,eax
  41e0bc:	addr16 dec ebx
  41e0be:	ror    DWORD PTR [edi],cl
  41e0c0:	popa   
  41e0c1:	sub    DWORD PTR [ebp-0x1c],edi
  41e0c4:	dec    ebp
  41e0c5:	and    BYTE PTR [bx+si+0x6227],dl
  41e0ca:	adc    BYTE PTR [edi],bh
  41e0cc:	cdq    
  41e0cd:	pop    esp
  41e0ce:	leave  
  41e0cf:	mov    esp,0x24a319b2
  41e0d4:	adc    DWORD PTR [edi-0x5941e0aa],0x361b757d
  41e0de:	ins    DWORD PTR es:[edi],dx
  41e0df:	mov    ds:0xbd5ce8f,eax
  41e0e4:	pop    ss
  41e0e5:	sbb    edx,eax
  41e0e7:	arpl   WORD PTR [ebx],bp
  41e0e9:	fiadd  WORD PTR ds:0x607fc5b7
  41e0ef:	fisub  WORD PTR [eax-0x74cca7f1]
  41e0f5:	lods   eax,DWORD PTR ds:[esi]
  41e0f6:	sub    esi,eax
  41e0f8:	mov    ds:0xb5f00fbb,eax
  41e0fd:	push   ebx
  41e0fe:	mov    al,ds:0xcfb4b448
  41e103:	stos   DWORD PTR es:[edi],eax
  41e104:	adc    al,0xbd
  41e106:	(bad)  
  41e108:	jns    0x41e14b
  41e10a:	mov    al,BYTE PTR [ebx-0x46]
  41e10d:	mov    ch,0x2c
  41e10f:	push   esp
  41e110:	xor    eax,0x75b69f79
  41e115:	ins    DWORD PTR es:[edi],dx
  41e116:	push   esi
  41e117:	inc    edx
  41e118:	xchg   ecx,ebp
  41e11a:	imul   ebx,DWORD PTR [ebp+0x2d8be5ca],0xf55a4bbd
  41e124:	inc    esp
  41e125:	cwde   
  41e126:	inc    edx
  41e127:	jne    0x41e101
  41e129:	fidivr DWORD PTR [ebp+0x2a03f3c6]
  41e12f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e130:	test   BYTE PTR [esi],dh
  41e132:	scas   al,BYTE PTR es:[edi]
  41e133:	mov    al,0xfb
  41e135:	xchg   ebx,eax
  41e136:	inc    esp
  41e137:	js     0x41e19b
  41e139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e13a:	mov    BYTE PTR [eax-0x4c],al
  41e13d:	jns    0x41e10b
  41e13f:	sbb    BYTE PTR [edi+ebx*8-0x4d],ah
  41e143:	jbe    0x41e0d2
  41e145:	and    eax,0x9e7ec5d5
  41e14a:	dec    edi
  41e14b:	leave  
  41e14c:	jmp    DWORD PTR [esi-0x22b628e4]
  41e152:	or     al,0x69
  41e154:	(bad)  
  41e155:	lock test BYTE PTR [ebx-0x1b],dl
  41e159:	popf   
  41e15a:	aas    
  41e15b:	jb     0x41e1c3
  41e15d:	cmp    dl,BYTE PTR [ebx]
  41e15f:	pop    ebp
  41e160:	shr    bh,cl
  41e162:	sbb    DWORD PTR [edi+0x1afbee43],ecx
  41e168:	mov    edi,0xf82a160e
  41e16d:	push   ecx
  41e16e:	dec    esi
  41e170:	mov    BYTE PTR [ebp+ebx*2+0xc362e57],bl
  41e177:	inc    edi
  41e178:	clc    
  41e179:	and    al,0x7
  41e17b:	push   es
  41e17c:	jbe    0x41e17e
  41e17e:	loop   0x41e187
  41e180:	fwait
  41e181:	ja     0x41e165
  41e183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e184:	xor    eax,0x96de97e3
  41e189:	shl    esp,0x37
  41e18c:	mov    eax,0x5b011627
  41e191:	push   edx
  41e192:	in     al,dx
  41e193:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e194:	lea    esi,[ebx+0x19a740e3]
  41e19a:	inc    ebp
  41e19b:	add    eax,0xebc35d3
  41e1a0:	mov    ebx,0x6d797ad7
  41e1a5:	jne    0x41e1fb
  41e1a7:	aam    0xd9
  41e1a9:	xchg   BYTE PTR [ebx],ah
  41e1ab:	lods   eax,DWORD PTR ds:[esi]
  41e1ac:	push   eax
  41e1ad:	mov    ?,WORD PTR [ecx-0x7fa73146]
  41e1b3:	fstp   DWORD PTR [edx]
  41e1b5:	lds    edi,FWORD PTR [ecx-0x555c8159]
  41e1bb:	scas   eax,DWORD PTR es:[edi]
  41e1bc:	sbb    edx,DWORD PTR [edx]
  41e1be:	sbb    eax,0x189ecb8
  41e1c3:	mov    al,ds:0x686af79c
  41e1c8:	xchg   BYTE PTR [esp+edx*4],bh
  41e1cb:	int    0xce
  41e1cd:	fs aaa 
  41e1cf:	ret    0x29d9
  41e1d2:	enter  0x481e,0x8f
  41e1d6:	xchg   ebp,eax
  41e1d7:	stos   DWORD PTR es:[edi],eax
  41e1d8:	les    edi,FWORD PTR [esi-0x7ee68c14]
  41e1de:	fcomi  st,st(0)
  41e1e0:	outs   dx,BYTE PTR ds:[esi]
  41e1e1:	pop    ds
  41e1e2:	(bad)  
  41e1e4:	repz jl 0x41e191
  41e1e7:	mov    dl,0x3b
  41e1e9:	pop    ecx
  41e1ea:	rcl    DWORD PTR [esi-0x77],cl
  41e1ed:	xchg   edx,eax
  41e1ee:	inc    edx
  41e1ef:	cmp    al,0x55
  41e1f1:	cdq    
  41e1f2:	test   eax,0x49ab5ba6
  41e1f7:	repz push esi
  41e1f9:	jae    0x41e23d
  41e1fb:	cli    
  41e1fc:	out    0x1e,eax
  41e1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1ff:	jl     0x41e1fe
  41e201:	rol    DWORD PTR [ecx-0x11],0xd5
  41e205:	cmp    eax,0x1a3c9845
  41e20a:	inc    ebp
  41e20b:	imul   edi,DWORD PTR ds:0xfd2682a,0x4e0fb68e
  41e215:	shr    cl,1
  41e217:	leave  
  41e218:	in     eax,dx
  41e219:	lods   eax,DWORD PTR ds:[esi]
  41e21a:	mov    ah,0x8b
  41e21c:	lods   eax,DWORD PTR ds:[esi]
  41e21d:	imul   esp,esi,0x30
  41e220:	sbb    DWORD PTR ds:0xcd21a041,esp
  41e226:	fistp  DWORD PTR [edi-0x79]
  41e229:	je     0x41e249
  41e22b:	pop    es
  41e22c:	mov    al,0x8a
  41e22e:	in     eax,0x99
  41e230:	or     al,0xdd
  41e232:	sahf   
  41e233:	sbb    BYTE PTR [eax-0x36010891],ah
  41e239:	xchg   ebx,eax
  41e23a:	sahf   
  41e23b:	pop    edi
  41e23c:	inc    ecx
  41e23d:	je     0x41e2a5
  41e23f:	jg     0x41e1c6
  41e241:	push   ss
  41e242:	das    
  41e243:	out    dx,al
  41e244:	cmp    ecx,ebx
  41e246:	dec    edx
  41e247:	call   0xb60d8754
  41e24c:	and    al,dl
  41e24e:	xchg   esp,eax
  41e24f:	(bad)  
  41e251:	jmp    0xd9b4:0x3222d3f9
  41e258:	sbb    edi,edx
  41e25a:	xchg   esi,eax
  41e25b:	ret    0x6188
  41e25e:	push   0xfe8cf1da
  41e263:	test   eax,0xd6e1d1b2
  41e268:	inc    ecx
  41e269:	xlat   BYTE PTR ds:[ebx]
  41e26a:	mov    bl,0xa6
  41e26c:	inc    esi
  41e26d:	stos   BYTE PTR es:[edi],al
  41e26e:	jge    0x41e227
  41e270:	stos   BYTE PTR es:[edi],al
  41e271:	inc    edi
  41e272:	push   ds
  41e273:	adc    eax,0xa4f9b426
  41e278:	push   0x7971cbbc
  41e27d:	mov    cl,bl
  41e27f:	or     bh,BYTE PTR [esi+ebx*8]
  41e282:	inc    ebx
  41e283:	(bad)  
  41e284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e285:	aad    0xee
  41e287:	cmp    esi,ebx
  41e289:	xchg   BYTE PTR [ecx-0x25],cl
  41e28c:	pop    edx
  41e28d:	mov    dh,0x69
  41e28f:	mov    DWORD PTR [edx],edx
  41e291:	ja     0x41e257
  41e293:	enter  0x96e6,0x66
  41e297:	ins    DWORD PTR es:[edi],dx
  41e298:	inc    eax
  41e299:	inc    esp
  41e29a:	fistp  QWORD PTR [eax-0x1b927e13]
  41e2a0:	cmp    bh,ch
  41e2a2:	in     eax,0x57
  41e2a4:	in     al,0x6e
  41e2a6:	add    ch,BYTE PTR [ebx+edx*4-0x35064e53]
  41e2ad:	inc    edx
  41e2ae:	addr16 in al,0x1a
  41e2b1:	vucomisd xmm2,QWORD PTR [ebp-0x1523f858]
  41e2b9:	mov    ebp,0x1aed63f1
  41e2be:	lea    edx,[eax]
  41e2c0:	push   ss
  41e2c1:	arpl   WORD PTR [eax+edi*8],ax
  41e2c4:	xchg   DWORD PTR [esi+0x3665f6d4],eax
  41e2ca:	(bad)  
  41e2cb:	adc    DWORD PTR [ecx],esi
  41e2cd:	jg     0x41e2ab
  41e2cf:	in     al,dx
  41e2d0:	mov    al,ds:0xa2dfa53b
  41e2d5:	or     bl,BYTE PTR [esi]
  41e2d7:	add    BYTE PTR [eax+0x1e],ch
  41e2da:	out    dx,eax
  41e2db:	pop    ebp
  41e2dc:	test   eax,0x611bcba7
  41e2e1:	fwait
  41e2e2:	dec    bp
  41e2e4:	js     0x41e354
  41e2e6:	stc    
  41e2e7:	repz push esi
  41e2e9:	les    esi,FWORD PTR [ecx]
  41e2eb:	test   al,0x41
  41e2ed:	stc    
  41e2ee:	push   edx
  41e2ef:	scas   al,BYTE PTR es:[edi]
  41e2f0:	and    ebp,DWORD PTR [edi]
  41e2f2:	mov    ch,0xf2
  41e2f4:	inc    ebx
  41e2f5:	out    0xfa,al
  41e2f7:	sar    DWORD PTR ds:0xf157e555,0xe3
  41e2fe:	cmp    DWORD PTR [edi+ebp*2-0xc2a5683],esi
  41e305:	mov    dl,BYTE PTR [esi+0x51]
  41e308:	rcl    BYTE PTR [edx+0x71c0852a],0x16
  41e30f:	test   DWORD PTR [bx+di-0x3e],eax
  41e313:	hlt    
  41e314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e315:	jns    0x41e2e8
  41e317:	cli    
  41e318:	inc    ebx
  41e319:	pusha  
  41e31a:	stc    
  41e31b:	scas   al,BYTE PTR es:[edi]
  41e31c:	sbb    bl,BYTE PTR [esi+ecx*4]
  41e31f:	push   ebp
  41e320:	cmp    eax,0x6384984c
  41e325:	sub    BYTE PTR [ecx-0x59],cl
  41e328:	(bad)  
  41e329:	and    al,0xb0
  41e32b:	sbb    al,0x27
  41e32d:	rcl    BYTE PTR [edi],0x4c
  41e330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e331:	adc    DWORD PTR [edx+0x51],ebx
  41e334:	jns    0x41e320
  41e336:	mov    ebx,DWORD PTR [esi-0x498e7a1a]
  41e33c:	out    dx,al
  41e33d:	mov    ebx,0x51a0c986
  41e342:	cmp    eax,0x4321f7e2
  41e347:	loope  0x41e384
  41e349:	gs jg  0x41e371
  41e34c:	add    al,0x28
  41e34e:	fwait
  41e34f:	ror    DWORD PTR [esi],0x28
  41e352:	aas    
  41e353:	mov    ds:0xf210b401,al
  41e358:	or     bh,al
  41e35a:	xlat   BYTE PTR ds:[ebx]
  41e35b:	dec    esp
  41e35c:	cmp    ecx,0xffffff88
  41e35f:	sbb    eax,0x4f69b3d1
  41e364:	mov    edx,0x829277c1
  41e369:	jns    0x41e319
  41e36b:	les    esi,FWORD PTR [esi]
  41e36d:	dec    esp
  41e36e:	mov    ebx,0xc105237b
  41e373:	adc    dh,dh
  41e375:	push   0xffffffe4
  41e377:	mov    edi,0xf043073e
  41e37c:	sbb    DWORD PTR [ebx+0x3e],eax
  41e37f:	jno    0x41e395
  41e381:	gs (bad) 
  41e384:	push   ecx
  41e385:	push   ebx
  41e386:	jg     0x41e322
  41e388:	add    BYTE PTR [edx+0x67317aa2],bh
  41e38e:	or     DWORD PTR [esi-0x55e95a18],edx
  41e394:	popf   
  41e395:	ins    BYTE PTR es:[edi],dx
  41e396:	ret    
  41e397:	mov    dh,0xf
  41e399:	push   ecx
  41e39a:	test   eax,0x585be659
  41e39f:	cmp    DWORD PTR [edx],ebp
  41e3a1:	arpl   WORD PTR [eax-0x1a],ax
  41e3a4:	(bad)  
  41e3a5:	jmp    0xb086:0x9d6b186a
  41e3ac:	xor    eax,0xbc75ca10
  41e3b1:	(bad)  
  41e3b2:	call   0xdab402a9
  41e3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b8:	dec    ecx
  41e3b9:	cmp    eax,0x2b7376a9
  41e3be:	mov    al,ds:0xf2ff61e
  41e3c3:	mov    eax,0x286cee43
  41e3c8:	mov    edi,0x15721346
  41e3cd:	xchg   ecx,eax
  41e3ce:	xor    BYTE PTR [eax-0x6721dc2d],ch
  41e3d4:	arpl   WORD PTR [eax-0x49],di
  41e3d7:	xchg   BYTE PTR [edx-0x1b34d094],dl
  41e3dd:	(bad)  
  41e3de:	int    0x90
  41e3e0:	inc    edx
  41e3e1:	lahf   
  41e3e2:	xchg   BYTE PTR [ecx-0x1bfa1fc5],dh
  41e3e8:	xchg   ecx,eax
  41e3e9:	push   0xffffffa3
  41e3eb:	aas    
  41e3ec:	mov    ch,0xc6
  41e3ee:	std    
  41e3ef:	sbb    BYTE PTR [eax+eax*8],0x4f
  41e3f3:	sub    al,0x28
  41e3f5:	jne    0x41e462
  41e3f7:	sub    eax,0xd0becd5
  41e3fc:	bound  ecx,QWORD PTR [edi-0x360054b3]
  41e402:	push   0x11d1a251
  41e407:	and    dl,BYTE PTR [esi]
  41e409:	or     edi,DWORD PTR [ecx]
  41e40b:	mov    ah,0xde
  41e40d:	add    al,0x9d
  41e40f:	ins    BYTE PTR es:[edi],dx
  41e410:	dec    ebp
  41e411:	dec    ecx
  41e412:	push   esp
  41e413:	push   ecx
  41e414:	cwde   
  41e415:	and    edi,edx
  41e417:	sub    cl,BYTE PTR [edi+0x38]
  41e41a:	pop    eax
  41e41b:	gs mov ecx,edi
  41e41e:	mov    eax,0x728ddda6
  41e423:	push   ss
  41e424:	mov    al,ds:0x8445f6d3
  41e429:	popf   
  41e42a:	dec    esp
  41e42b:	and    ch,ch
  41e42d:	stc    
  41e42e:	xor    dl,BYTE PTR [ebp-0x6a]
  41e431:	imul   ebp,DWORD PTR [esi-0xc],0xffffffaf
  41e435:	mov    esi,DWORD PTR [esi+ecx*1+0x4]
  41e439:	dec    esp
  41e43a:	push   esi
  41e43b:	clc    
  41e43c:	jle    0x41e420
  41e43e:	mov    dl,0x41
  41e440:	in     al,0xbd
  41e442:	into   
  41e443:	mov    esp,0x65320520
  41e448:	(bad)  
  41e449:	call   DWORD PTR [ecx+0x36]
  41e44c:	xor    eax,0xb2922879
  41e451:	outs   dx,BYTE PTR ds:[esi]
  41e452:	in     eax,dx
  41e453:	(bad)  
  41e454:	jns    0x41e490
  41e456:	cmp    esi,ecx
  41e458:	mov    bl,0xbf
  41e45a:	daa    
  41e45b:	inc    edi
  41e45c:	or     al,0x97
  41e45e:	xchg   esp,eax
  41e45f:	jno    0x41e4b3
  41e461:	je     0x41e478
  41e463:	push   cs
  41e464:	aas    
  41e465:	add    BYTE PTR [edi-0x44caaa],cl
  41e46b:	jg     0x41e489
  41e46d:	retf   
  41e46e:	int    0x56
  41e470:	xchg   ecx,eax
  41e471:	(bad)  [ebx]
  41e473:	aad    0x13
  41e475:	add    bl,BYTE PTR [ebx]
  41e477:	out    0x87,eax
  41e479:	jmp    0x41e42d
  41e47b:	cmp    bh,BYTE PTR [ebx]
  41e47d:	out    dx,eax
  41e47e:	(bad)  [edi+0x3b0fe53f]
  41e484:	out    0x13,al
  41e486:	mov    esp,0x28de9036
  41e48b:	xor    BYTE PTR [ecx+0x7e3fe51b],bl
  41e491:	mov    esi,0x6c3d1230
  41e496:	jnp    0x41e4e9
  41e498:	cli    
  41e499:	add    eax,0x25b98dba
  41e49e:	loop   0x41e44a
  41e4a0:	dec    esi
  41e4a1:	push   ebp
  41e4a2:	scas   eax,DWORD PTR es:[edi]
  41e4a3:	or     eax,edx
  41e4a5:	stc    
  41e4a6:	cmp    dl,ch
  41e4a8:	inc    ecx
  41e4a9:	cmc    
  41e4aa:	adc    BYTE PTR [ecx],dl
  41e4ac:	test   DWORD PTR ds:0x47fee854,0xab36c239
  41e4b6:	sub    eax,0x6f3a51c0
  41e4bb:	test   DWORD PTR [esi-0x2d],ebx
  41e4be:	cld    
  41e4bf:	and    ecx,DWORD PTR [esi-0x46]
  41e4c2:	xchg   ebp,eax
  41e4c3:	lods   al,BYTE PTR ds:[esi]
  41e4c4:	and    ch,BYTE PTR [edi-0x73]
  41e4c7:	(bad)  
  41e4c8:	sti    
  41e4c9:	and    bh,bh
  41e4cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4cc:	push   0x86805953
  41e4d1:	or     BYTE PTR [edx-0x65],ch
  41e4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4d5:	or     edi,eax
  41e4d7:	push   es
  41e4d8:	sub    ebx,DWORD PTR [edx+0x5990c2d1]
  41e4de:	adc    DWORD PTR es:[edx],ecx
  41e4e1:	pop    ebp
  41e4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4e3:	fstp   QWORD PTR es:[esi-0x16e1e8e8]
  41e4ea:	in     eax,0xef
  41e4ec:	dec    edi
  41e4ed:	loopne 0x41e55c
  41e4ef:	sbb    dh,BYTE PTR [ebp+0x29]
  41e4f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4f3:	gs leave 
  41e4f5:	dec    ecx
  41e4f6:	cwde   
  41e4f7:	inc    eax
  41e4f8:	mov    dl,0xf6
  41e4fa:	hlt    
  41e4fb:	cdq    
  41e4fc:	mov    bh,BYTE PTR [edx+0x7d5ba592]
  41e502:	add    BYTE PTR [edx+0x6],bh
  41e505:	mov    ecx,0x3559c772
  41e50a:	dec    esp
  41e50b:	outs   dx,DWORD PTR ds:[esi]
  41e50c:	inc    esi
  41e50d:	adc    eax,0x5bd5c4d
  41e512:	or     eax,0x83d58a15
  41e517:	xor    eax,0xfb68c7ab
  41e51c:	dec    ebx
  41e51d:	jg     0x41e4d1
  41e51f:	jmp    0x41e570
  41e521:	push   ebp
  41e522:	je     0x41e4dd
  41e524:	repnz int 0xd5
  41e527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e528:	cmc    
  41e529:	pop    edx
  41e52a:	push   ebp
  41e52b:	xchg   ebx,eax
  41e52c:	xor    BYTE PTR [ebp-0x59],0xd7
  41e530:	imul   edi,ebx,0x7d83ec0b
  41e536:	aaa    
  41e537:	je     0x41e4d2
  41e539:	int3   
  41e53a:	adc    dl,BYTE PTR [ebp-0x5f]
  41e53d:	adc    BYTE PTR [edx+esi*4+0x53],ch
  41e541:	inc    ebx
  41e542:	xor    BYTE PTR [edi-0x1a],cl
  41e545:	and    BYTE PTR [esi],bh
  41e547:	daa    
  41e548:	sbb    DWORD PTR [edi],0xa612bd31
  41e54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e54f:	sbb    ebx,DWORD PTR [ebp+eiz*8-0x2b]
  41e553:	push   edi
  41e554:	cli    
  41e555:	jle    0x41e528
  41e557:	adc    BYTE PTR [esp+edx*1-0x4c17656a],dl
  41e55e:	adc    eax,0xa18b7bfd
  41e563:	lods   al,BYTE PTR ds:[esi]
  41e564:	mov    BYTE PTR [edi],bl
  41e566:	icebp  
  41e567:	xlat   BYTE PTR ds:[ebx]
  41e568:	sahf   
  41e569:	cwde   
  41e56a:	daa    
  41e56b:	push   ds
  41e56c:	bound  eax,QWORD PTR [ebp+ecx*8-0x75]
  41e570:	pop    ds
  41e571:	cmp    ebp,DWORD PTR [esi-0x44280b23]
  41e577:	mov    ebx,ss
  41e579:	dec    edi
  41e57a:	sub    ebx,eax
  41e57c:	in     eax,0xdc
  41e57e:	or     bh,BYTE PTR [ecx+edi*4-0x2884ff60]
  41e585:	pusha  
  41e586:	outs   dx,BYTE PTR ds:[esi]
  41e587:	sbb    eax,0xdf3aa45d
  41e58c:	cmp    BYTE PTR [eax],dh
  41e58e:	or     eax,ecx
  41e590:	cmp    al,al
  41e592:	leave  
  41e593:	or     al,BYTE PTR [edx+0x26]
  41e596:	sbb    bl,BYTE PTR [ebp-0x7709b925]
  41e59c:	xchg   edi,eax
  41e59d:	cmp    ebx,DWORD PTR [eax-0x185560e8]
  41e5a3:	out    dx,al
  41e5a4:	outs   dx,DWORD PTR ds:[esi]
  41e5a5:	pushf  
  41e5a6:	adc    DWORD PTR [esi-0x7dba4b86],edi
  41e5ac:	stos   DWORD PTR es:[edi],eax
  41e5ad:	pop    ebp
  41e5ae:	mov    al,ds:0xdf7d2e8a
  41e5b3:	or     al,0x82
  41e5b5:	sbb    edx,DWORD PTR [ebx+0x25487086]
  41e5bb:	cld    
  41e5bc:	push   eax
  41e5bd:	pop    edx
  41e5be:	cmc    
  41e5bf:	pop    edi
  41e5c0:	push   cs
  41e5c1:	test   eax,0xd3359f86
  41e5c6:	popf   
  41e5c7:	dec    esi
  41e5c8:	loope  0x41e610
  41e5ca:	dec    edi
  41e5cb:	xor    BYTE PTR [eax],bl
  41e5cd:	add    eax,0xef437e2a
  41e5d2:	scas   eax,DWORD PTR es:[edi]
  41e5d3:	fwait
  41e5d4:	sub    al,0x35
  41e5d6:	pop    edx
  41e5d7:	das    
  41e5d8:	or     eax,0xc92df8d6
  41e5dd:	js     0x41e5b7
  41e5df:	cli    
  41e5e0:	dec    DWORD PTR [ecx-0x56631300]
  41e5e6:	imul   edi,eax,0x65
  41e5e9:	test   DWORD PTR [ecx-0x62b1a704],esp
  41e5ef:	xchg   ecx,eax
  41e5f0:	push   ecx
  41e5f1:	mov    esp,0x59bea112
  41e5f6:	mov    al,0x32
  41e5f8:	or     al,0xaf
  41e5fa:	fidiv  WORD PTR [esi-0x57]
  41e5fd:	xor    al,0xc7
  41e5ff:	or     dh,BYTE PTR ss:[edx]
  41e602:	dec    eax
  41e603:	xchg   edi,eax
  41e604:	mov    ebx,0xdac06c28
  41e609:	mov    bl,0xf1
  41e60b:	dec    ebx
  41e60c:	retf   
  41e60d:	ins    BYTE PTR es:[edi],dx
  41e60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e60f:	sbb    DWORD PTR [ebp-0x37],ecx
  41e612:	mov    BYTE PTR [esi+ecx*8],cl
  41e615:	(bad)  
  41e616:	pop    ds
  41e617:	inc    edi
  41e618:	dec    ebp
  41e619:	retf   0x6233
  41e61c:	pop    ebp
  41e61d:	das    
  41e61e:	jecxz  0x41e600
  41e620:	adc    eax,0x63c37009
  41e625:	sbb    eax,0xa40bb5d3
  41e62a:	out    dx,eax
  41e62b:	pop    ss
  41e62c:	jg     0x41e654
  41e62e:	scas   eax,DWORD PTR es:[edi]
  41e62f:	(bad)  
  41e630:	cli    
  41e631:	mov    ?,WORD PTR [edi]
  41e633:	bound  esi,QWORD PTR [eax+0x2c]
  41e636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e637:	fstp   TBYTE PTR [eax+ecx*8]
  41e63a:	dec    esi
  41e63b:	loop   0x41e62d
  41e63d:	or     al,0xd6
  41e63f:	imul   esp,DWORD PTR [ebx-0x6e1b755f],0xdfeaa0c
  41e649:	pop    edi
  41e64a:	(bad)  
  41e64b:	and    eax,0x7242c051
  41e650:	aam    0xae
  41e652:	into   
  41e653:	jbe    0x41e66c
  41e655:	lock inc esi
  41e657:	das    
  41e658:	jg     0x41e645
  41e65a:	push   0xffffffaa
  41e65c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e65d:	int    0xf4
  41e65f:	ret    0xbbb8
  41e662:	xchg   edx,eax
  41e663:	lds    eax,FWORD PTR [eax]
  41e665:	mul    BYTE PTR [bp+0xb49]
  41e66a:	pop    es
  41e66b:	popa   
  41e66c:	sahf   
  41e66d:	aaa    
  41e66e:	ficom  WORD PTR [eax]
  41e670:	cld    
  41e671:	dec    BYTE PTR ds:[edi+0x2cf3cd0c]
  41e678:	scas   al,BYTE PTR es:[edi]
  41e679:	pop    ss
  41e67a:	dec    ebp
  41e67b:	adc    al,0xfe
  41e67d:	gs (bad) 
  41e67f:	push   eax
  41e680:	jle    0x41e6d8
  41e682:	xor    dh,BYTE PTR [ecx-0x74]
  41e685:	push   eax
  41e686:	xchg   esi,eax
  41e687:	jne    0x41e613
  41e689:	into   
  41e68a:	sbb    edi,0xfffffff7
  41e68d:	pop    esi
  41e68e:	mov    ds:0x2eb7ed8a,eax
  41e693:	push   ebp
  41e694:	mov    eax,ds:0x4436ed3f
  41e699:	in     al,dx
  41e69a:	jno    0x41e6f1
  41e69c:	sub    al,0xda
  41e69e:	outs   dx,BYTE PTR ds:[esi]
  41e69f:	mov    ebp,DWORD PTR [edx+ebx*1-0x3d]
  41e6a3:	mov    dl,0x4b
  41e6a5:	aam    0xb4
  41e6a7:	jne    0x41e694
  41e6a9:	aas    
  41e6aa:	jecxz  0x41e702
  41e6ac:	add    ch,al
  41e6ae:	sub    dl,BYTE PTR [esi+esi*4]
  41e6b1:	push   0xc
  41e6b3:	dec    esi
  41e6b4:	push   esi
  41e6b5:	adc    edi,esp
  41e6b7:	xchg   esp,eax
  41e6b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6b9:	(bad)  
  41e6ba:	jle    0x41e717
  41e6bc:	sub    DWORD PTR [edx],eax
  41e6be:	sbb    cl,BYTE PTR [edx+0x370a7030]
  41e6c4:	lods   eax,DWORD PTR ds:[esi]
  41e6c5:	stos   DWORD PTR es:[edi],eax
  41e6c6:	xchg   ebp,eax
  41e6c7:	das    
  41e6c8:	loop   0x41e742
  41e6ca:	call   0x1d946f84
  41e6cf:	fldcw  WORD PTR [ebx+0x69]
  41e6d2:	fwait
  41e6d3:	(bad)  
  41e6d4:	jmp    0x1de44
  41e6d9:	ret    
  41e6da:	jl     0x41e664
  41e6dc:	daa    
  41e6dd:	lock test al,0x2c
  41e6e0:	or     eax,0x8a73d125
  41e6e5:	cmc    
  41e6e6:	jl     0x41e70b
  41e6e8:	scas   al,BYTE PTR es:[edi]
  41e6e9:	mov    DWORD PTR [eax],edx
  41e6eb:	or     esi,DWORD PTR [ebx]
  41e6ed:	fwait
  41e6ee:	sub    ecx,DWORD PTR [edi]
  41e6f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6f1:	icebp  
  41e6f2:	sti    
  41e6f3:	sbb    al,0xb0
  41e6f5:	jmp    0xc0c9:0x3e4b1d5f
  41e6fc:	sub    bl,BYTE PTR [edx+0x69]
  41e6ff:	rcl    BYTE PTR [eax+0x6bea5c3a],1
  41e705:	add    ebp,0x2a
  41e708:	enter  0xda32,0xca
  41e70c:	mov    esp,0x60da1919
  41e711:	enter  0x5d7f,0xd2
  41e715:	test   BYTE PTR [edi-0x410fd973],bh
  41e71b:	or     eax,0xebcf9ae3
  41e720:	cmp    eax,0x4a2640cd
  41e725:	mov    edi,0x5aea7756
  41e72a:	(bad)  
  41e72b:	mov    ebp,0xec5706a
  41e730:	xrelease xchg BYTE PTR [ecx+0x48acce58],ah
  41e737:	jno    0x41e777
  41e739:	jno    0x41e754
  41e73b:	mov    ebp,0x985712ab
  41e740:	jg     0x41e6fe
  41e742:	clc    
  41e743:	mov    ebp,0x476d4024
  41e748:	pop    esi
  41e749:	xchg   DWORD PTR [ecx+ebx*8-0x68829722],edx
  41e750:	mov    BYTE PTR [edx+0x37abff7a],bl
  41e756:	(bad)  
  41e757:	push   edx
  41e758:	hlt    
  41e759:	jge    0x41e6e1
  41e75b:	pop    esi
  41e75c:	mov    bh,0x7b
  41e75e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e75f:	in     eax,0x63
  41e761:	popf   
  41e762:	sbb    ebp,DWORD PTR [esi-0x1ea6e3bd]
  41e768:	lds    ebx,FWORD PTR [esp+ecx*4]
  41e76b:	fdiv   QWORD PTR [eax+0x1dacc400]
  41e771:	popa   
  41e772:	cmp    eax,esp
  41e774:	jmp    0xe52f09be
  41e779:	cmp    ah,ah
  41e77b:	pop    es
  41e77c:	hlt    
  41e77d:	std    
  41e77e:	pushf  
  41e77f:	arpl   di,sp
  41e781:	data16 cld 
  41e783:	pop    es
  41e784:	sbb    ebx,esi
  41e786:	push   ss
  41e787:	mul    ebx
  41e789:	(bad)  
  41e78a:	and    dl,BYTE PTR [ecx-0x503a7ef]
  41e790:	out    0xa,eax
  41e792:	repz push ss
  41e794:	xor    dl,al
  41e796:	and    edx,ecx
  41e798:	icebp  
  41e799:	cmp    al,0xa8
  41e79b:	stos   DWORD PTR es:[edi],eax
  41e79c:	(bad)  
  41e79d:	mov    ds:0x6ef22e06,al
  41e7a2:	push   ss
  41e7a3:	sbb    DWORD PTR [ebp+0x586a9a77],esp
  41e7a9:	out    0x1d,al
  41e7ab:	xchg   edi,eax
  41e7ac:	pusha  
  41e7ad:	dec    ecx
  41e7ae:	push   0x2f
  41e7b0:	pop    esp
  41e7b1:	mov    BYTE PTR [esi],bl
  41e7b3:	and    ebp,DWORD PTR [esi]
  41e7b5:	pop    edi
  41e7b6:	push   ss
  41e7b7:	hlt    
  41e7b8:	sbb    bh,BYTE PTR ds:0x619d3dd9
  41e7be:	lods   eax,DWORD PTR ds:[esi]
  41e7bf:	cmp    al,0x2c
  41e7c1:	dec    edi
  41e7c2:	add    eax,0xf84a037a
  41e7c7:	(bad)  
  41e7c8:	arpl   sp,sp
  41e7ca:	mov    bh,0x9c
  41e7cc:	mov    bl,0x6a
  41e7ce:	(bad)  
  41e7cf:	(bad)  
  41e7d0:	out    0xb4,al
  41e7d2:	cmc    
  41e7d3:	inc    esp
  41e7d4:	test   eax,0xc535fab5
  41e7d9:	mov    cl,dl
  41e7db:	daa    
  41e7dc:	pop    edi
  41e7dd:	mov    eax,ds:0x3be4cd51
  41e7e2:	ficomp WORD PTR [esi]
  41e7e4:	push   0xae9b8905
  41e7e9:	mov    al,ds:0xb21d6020
  41e7ee:	xchg   esp,eax
  41e7ef:	iret   
  41e7f0:	cmp    bl,BYTE PTR [ebp+0x74b01f5a]
  41e7f6:	imul   bh
  41e7f8:	pop    es
  41e7f9:	out    0x46,al
  41e7fb:	out    dx,al
  41e7fc:	jnp    0x41e864
  41e7fe:	fnstcw WORD PTR [edx]
  41e800:	cwde   
  41e801:	inc    esp
  41e802:	push   ebp
  41e803:	mov    eax,0xd4bf8925
  41e808:	test   DWORD PTR [eax],0x77178568
  41e80e:	repz adc al,0xa1
  41e811:	hlt    
  41e812:	ud1    edi,DWORD PTR [ebp-0x3ed4a8d2]
  41e819:	push   ebp
  41e81a:	jns    0x41e7be
  41e81c:	cs (bad) 
  41e81e:	cmp    dh,dh
  41e820:	jae    0x41e81f
  41e822:	jo     0x41e81b
  41e824:	sti    
  41e825:	call   0x5271337d
  41e82a:	mov    eax,ds:0x6f37a820
  41e82f:	test   al,0xf4
  41e831:	add    edx,DWORD PTR ds:0xc22ee112
  41e837:	gs jp  0x41e857
  41e83a:	push   0xf51a33a6
  41e83f:	outs   dx,DWORD PTR ds:[esi]
  41e840:	leave  
  41e841:	and    al,0x6a
  41e843:	adc    al,0x93
  41e845:	retf   0x558d
  41e848:	adc    BYTE PTR [ecx+0x6a],0x35
  41e84c:	xor    esp,ebp
  41e84e:	jle    0x41e848
  41e850:	mov    eax,0x1e253586
  41e855:	jmp    0x41e844
  41e857:	repz xchg ebx,eax
  41e859:	mov    ds:0x3bd4cb3e,eax
  41e85e:	mov    al,0x3
  41e860:	shl    BYTE PTR [ecx+0x3e5e8fd6],1
  41e866:	leave  
  41e867:	push   0x58
  41e869:	pop    ecx
  41e86a:	xor    bh,cl
  41e86c:	sar    BYTE PTR [eax],cl
  41e86e:	pop    ebp
  41e86f:	xchg   BYTE PTR [ebx+edi*4+0x3b84a090],al
  41e876:	lods   al,BYTE PTR ds:[esi]
  41e877:	scas   eax,DWORD PTR es:[edi]
  41e878:	or     ch,BYTE PTR [eax+0x67de5a0e]
  41e87e:	mov    eax,0xd03f5f55
  41e883:	loopne 0x41e8f8
  41e885:	push   ebx
  41e886:	cmp    eax,0x530d8444
  41e88b:	aam    0xd6
  41e88d:	jmp    0x9157:0x2b92a4e3
  41e894:	test   DWORD PTR [edx+0x16bdfe4d],0x73c72fcc
  41e89e:	retf   
  41e89f:	rol    ecx,1
  41e8a1:	fs ret 
  41e8a3:	sbb    eax,0xa52ef6ce
  41e8a8:	push   esp
  41e8a9:	(bad)  
  41e8aa:	dec    esi
  41e8ab:	mov    ah,0x95
  41e8ad:	les    ecx,FWORD PTR [eax+0x341cd6aa]
  41e8b3:	inc    eax
  41e8b4:	xlat   BYTE PTR ds:[ebx]
  41e8b5:	jb     0x41e91b
  41e8b7:	test   BYTE PTR [esi+0x4bfb73f1],bh
  41e8bd:	mov    bl,0x26
  41e8bf:	repz test eax,0xc5e225e
  41e8c5:	jne    0x41e879
  41e8c7:	repnz or eax,0xb692bed9
  41e8cd:	adc    BYTE PTR [ecx+0x45],dh
  41e8d0:	in     al,dx
  41e8d1:	inc    ecx
  41e8d2:	mov    dh,0x59
  41e8d4:	jne    0x41e907
  41e8d6:	or     DWORD PTR [edi+0x173c608],ebp
  41e8dc:	dec    esi
  41e8dd:	sbb    ebp,0x5c
  41e8e0:	lods   eax,DWORD PTR ds:[esi]
  41e8e2:	jmp    0xe1617c9f
  41e8e7:	push   DWORD PTR [ecx]
  41e8e9:	adc    al,0x81
  41e8eb:	mov    ss,WORD PTR [edi-0x334c325d]
  41e8f1:	jne    0x41e8be
  41e8f3:	fmul   QWORD PTR [esi]
  41e8f5:	xchg   esp,eax
  41e8f6:	mov    bh,BYTE PTR [esi+0x1e]
  41e8f9:	imul   edi
  41e8fb:	shl    DWORD PTR [esi+0x4f4b11b],0x30
  41e902:	(bad)  
  41e903:	pop    ecx
  41e904:	ret    0xaf50
  41e907:	sub    DWORD PTR [ebp+0x447f7f81],ebx
  41e90d:	cs add ebp,ebx
  41e910:	popa   
  41e911:	iret   
  41e912:	xlat   BYTE PTR ds:[ebx]
  41e913:	jmp    0xda86d909
  41e918:	push   esi
  41e919:	scas   eax,DWORD PTR es:[edi]
  41e91a:	lock out 0x32,eax
  41e91d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e91e:	sub    BYTE PTR [ebx+0x6e],ch
  41e921:	cmc    
  41e922:	inc    esp
  41e923:	test   al,0x55
  41e925:	mov    ?,esi
  41e927:	jnp    0x41e9a4
  41e929:	gs fwait
  41e92b:	pop    ss
  41e92c:	mov    al,0x2d
  41e92e:	jne    0x41e8be
  41e930:	sar    DWORD PTR [ecx],1
  41e932:	mov    ah,0xee
  41e934:	repz imul ecx,DWORD PTR [edx+0x41],0x2d
  41e939:	gs dec ebp
  41e93b:	outs   dx,BYTE PTR ds:[esi]
  41e93c:	popf   
  41e93d:	pop    ds
  41e93e:	int    0xd7
  41e940:	es push ds
  41e942:	ins    BYTE PTR es:[edi],dx
  41e943:	adc    al,0x76
  41e945:	pop    ds
  41e946:	out    0xba,al
  41e948:	ins    DWORD PTR es:[edi],dx
  41e949:	imul   esp,DWORD PTR [esi],0x33
  41e94c:	aaa    
  41e94d:	xor    al,0x7c
  41e94f:	push   ecx
  41e950:	or     al,BYTE PTR [ecx+0x6d]
  41e953:	cld    
  41e954:	push   ecx
  41e955:	ins    DWORD PTR es:[edi],dx
  41e956:	sbb    al,0x32
  41e958:	clc    
  41e959:	sahf   
  41e95a:	(bad)  
  41e95b:	shl    DWORD PTR [ebp+eiz*1-0x4],cl
  41e95f:	popa   
  41e960:	jmp    0x2da4:0x58d2f418
  41e967:	jge    0x41e99c
  41e969:	cmp    ebx,DWORD PTR [ebx-0x6ba046ae]
  41e96f:	sbb    ah,BYTE PTR [ecx-0x7a]
  41e972:	and    ah,BYTE PTR [ebx-0xd6e3365]
  41e978:	(bad)  
  41e979:	in     al,dx
  41e97a:	ins    BYTE PTR es:[edi],dx
  41e97b:	push   ss
  41e97c:	pusha  
  41e97d:	jbe    0x41e98f
  41e97f:	rol    DWORD PTR [ebp+0x30d48ce4],cl
  41e985:	or     DWORD PTR [edx-0x2f8f3b38],edx
  41e98b:	lods   eax,DWORD PTR ds:[esi]
  41e98c:	test   esp,0x124299ff
  41e992:	aad    0x2a
  41e994:	imul   ebx,edx,0x69732d42
  41e99a:	push   ds
  41e99b:	xchg   ecx,edx
  41e99d:	pop    esp
  41e99e:	scas   eax,DWORD PTR es:[edi]
  41e99f:	mov    ebp,0x79639f98
  41e9a4:	gs ins DWORD PTR es:[edi],dx
  41e9a6:	dec    edi
  41e9a7:	outs   dx,DWORD PTR ds:[esi]
  41e9a8:	ds (bad) 
  41e9aa:	mov    bh,0xc6
  41e9ac:	not    DWORD PTR [ebp+0x17475caf]
  41e9b2:	push   edi
  41e9b3:	dec    eax
  41e9b4:	push   0x5a7b8c41
  41e9b9:	sub    DWORD PTR [ebx+0x6cf6355e],ebp
  41e9bf:	enter  0x1eeb,0x22
  41e9c3:	inc    edx
  41e9c4:	add    esp,DWORD PTR ds:0xbd05112f
  41e9ca:	mov    ds:0x7c41cece,al
  41e9cf:	adc    ah,BYTE PTR [edi]
  41e9d1:	push   ecx
  41e9d2:	add    BYTE PTR [ebx+0x1f3bc162],bl
  41e9d8:	dec    edi
  41e9d9:	xor    DWORD PTR [eax+0x48c9ea4],0x3f
  41e9e0:	mov    DWORD PTR [edx+0x3eed565a],ecx
  41e9e6:	es es out dx,eax
  41e9e9:	and    BYTE PTR [ebx+0x3fabeb76],dh
  41e9ef:	jae    0x41e9dd
  41e9f1:	pop    edi
  41e9f2:	cmp    BYTE PTR [ecx-0x53a5420e],bh
  41e9f8:	retf   
  41e9f9:	lods   al,BYTE PTR ds:[esi]
  41e9fa:	pushf  
  41e9fb:	push   0x21
  41e9fd:	push   ecx
  41e9fe:	and    ah,BYTE PTR [ebp-0x625f644a]
  41ea04:	daa    
  41ea05:	stos   DWORD PTR es:[edi],eax
  41ea06:	push   0x1180a98a
  41ea0b:	int    0x90
  41ea0d:	and    bl,BYTE PTR [edi+0x1fc21f64]
  41ea13:	cmp    DWORD PTR [ecx+edx*2],ebx
  41ea16:	dec    esi
  41ea17:	ja     0x41ea12
  41ea19:	inc    ebx
  41ea1a:	inc    ecx
  41ea1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea1c:	out    0x73,eax
  41ea1e:	xchg   ecx,eax
  41ea1f:	jbe    0x41ea0a
  41ea21:	lods   al,BYTE PTR ds:[esi]
  41ea22:	shl    ebp,0x55
  41ea25:	and    al,0xdd
  41ea27:	lods   al,BYTE PTR ds:[esi]
  41ea28:	stos   DWORD PTR es:[edi],eax
  41ea29:	mov    edx,0x6d2024d4
  41ea2e:	cmp    bh,BYTE PTR [esi+0x2e]
  41ea31:	test   BYTE PTR [eax+ebx*1],bh
  41ea34:	pop    ebp
  41ea35:	lods   eax,DWORD PTR ds:[esi]
  41ea36:	shl    cl,1
  41ea38:	loopne 0x41ea08
  41ea3a:	sbb    al,0x60
  41ea3c:	sub    eax,0x66463764
  41ea41:	sub    DWORD PTR [esi],0xffffffee
  41ea44:	(bad)  [ebx+esi*8]
  41ea47:	inc    eax
  41ea48:	cmp    BYTE PTR [ebx-0x4e4918b6],ch
  41ea4e:	and    ebx,ebp
  41ea50:	shr    DWORD PTR [ecx-0x32525cf3],0xf6
  41ea57:	xor    al,0xd
  41ea59:	push   ebp
  41ea5a:	dec    ebx
  41ea5b:	fs pop esp
  41ea5d:	xchg   esi,eax
  41ea5e:	or     al,0x11
  41ea60:	and    DWORD PTR [eax-0x68],ebp
  41ea63:	ror    DWORD PTR [ebx-0x66],0xf3
  41ea67:	in     eax,0x35
  41ea69:	mov    cl,0xb
  41ea6b:	mov    ebp,0x57570804
  41ea70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea71:	aaa    
  41ea72:	xlat   BYTE PTR ds:[ebx]
  41ea73:	int    0x25
  41ea75:	out    0x10,eax
  41ea77:	cmp    eax,DWORD PTR [ebp-0x271ef5f5]
  41ea7d:	dec    esi
  41ea7e:	push   ss
  41ea7f:	jns    0x41eaf9
  41ea81:	sbb    eax,0x6c048705
  41ea86:	inc    ecx
  41ea87:	mov    edi,0x32aa2bb8
  41ea8c:	ja     0x41ea26
  41ea8e:	mov    ecx,0x7cc44f8
  41ea93:	ss inc esi
  41ea95:	ins    BYTE PTR es:[edi],dx
  41ea96:	cmp    esp,edi
  41ea98:	fcmovnbe st,st(0)
  41ea9a:	repnz mov ah,0x34
  41ea9d:	scas   eax,DWORD PTR es:[edi]
  41ea9e:	push   0x58
  41eaa0:	mov    eax,ds:0xe4e1debd
  41eaa5:	xchg   edx,eax
  41eaa6:	mov    DWORD PTR [eax],edi
  41eaa8:	int3   
  41eaa9:	(bad)  
  41eaaa:	loope  0x41eaa1
  41eaac:	ss mov DWORD PTR fs:[edx-0x5027dd90],ebp
  41eab4:	ja     0x41ea52
  41eab6:	adc    eax,0x8a7ebb5c
  41eabb:	and    DWORD PTR [ebx+0x3bc05c1a],eax
  41eac1:	stos   BYTE PTR es:[edi],al
  41eac2:	lods   eax,DWORD PTR ds:[esi]
  41eac3:	clc    
  41eac4:	out    dx,al
  41eac5:	ret    
  41eac6:	dec    esi
  41eac7:	jg     0x41eaa1
  41eac9:	mov    eax,ds:0xc2708f5
  41eace:	nop
  41eacf:	mov    eax,ds:0xe25ddf9b
  41ead4:	ret    0x1f
  41ead7:	rcr    BYTE PTR [ecx+0x7b62c85f],1
  41eadd:	(bad)  
  41eade:	fsub   QWORD PTR [ebp-0x6b]
  41eae1:	adc    esp,ebx
  41eae3:	mov    bl,0x68
  41eae5:	and    DWORD PTR [ebp-0x518cee40],esp
  41eaeb:	pop    esp
  41eaec:	pop    ebp
  41eaed:	stos   BYTE PTR es:[edi],al
  41eaee:	loop   0x41ea9a
  41eaf0:	mov    ds:0x7a2ab15b,al
  41eaf5:	loope  0x41eb52
  41eaf7:	mov    cl,0x3
  41eaf9:	frstor [ecx]
  41eafb:	xlat   BYTE PTR ds:[ebx]
  41eafc:	jne    0x41eada
  41eafe:	add    bh,0xc9
  41eb01:	xlat   BYTE PTR ds:[ebx]
  41eb02:	cmc    
  41eb03:	jno    0x41eaf7
  41eb05:	sbb    DWORD PTR [edi-0x5782d790],ebp
  41eb0b:	test   al,0x3c
  41eb0d:	jnp    0x41eacd
  41eb0f:	jl     0x41eb60
  41eb11:	jae    0x41eb82
  41eb13:	xchg   ebp,eax
  41eb14:	ret    0xf88d
  41eb17:	mov    dh,0x2
  41eb19:	or     ecx,DWORD PTR [ebx+0x40]
  41eb1c:	loopne 0x41ead0
  41eb1e:	hlt    
  41eb1f:	push   ss
  41eb20:	imul   dh
  41eb22:	sti    
  41eb23:	sbb    eax,0x336860c9
  41eb28:	inc    edx
  41eb29:	cwde   
  41eb2a:	add    BYTE PTR [ecx-0x13],ch
  41eb2d:	fbstp  TBYTE PTR [eax+0x41558f1e]
  41eb33:	dec    ecx
  41eb34:	pop    ds
  41eb35:	rcl    DWORD PTR [edi],1
  41eb37:	stc    
  41eb38:	ret    0x857a
  41eb3b:	je     0x41eac3
  41eb3d:	gs pusha 
  41eb3f:	cmp    eax,0xa4d55fbe
  41eb44:	das    
  41eb45:	push   0x561e3d9a
  41eb4a:	cld    
  41eb4b:	push   ebx
  41eb4c:	or     DWORD PTR [ecx-0x4a4ddb2e],0xffffffc5
  41eb53:	pop    esi
  41eb54:	imul   esp,DWORD PTR [edi+edi*8-0xe],0x4b24bb9f
  41eb5c:	test   eax,0xd86b1047
  41eb61:	add    al,0xe
  41eb63:	jmp    0x2024a94a
  41eb68:	in     al,dx
  41eb69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb6a:	inc    eax
  41eb6b:	cwde   
  41eb6c:	xchg   BYTE PTR [edi+eax*4-0x8],dl
  41eb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb71:	cwde   
  41eb72:	push   ss
  41eb73:	add    BYTE PTR [ebx],0x61
  41eb76:	out    dx,eax
  41eb77:	icebp  
  41eb78:	repnz adc BYTE PTR [edx],dl
  41eb7b:	addr16 pop eax
  41eb7d:	inc    DWORD PTR [ebx+0x33]
  41eb80:	cmc    
  41eb81:	mov    ds:0x571f704d,eax
  41eb86:	loop   0x41ebf8
  41eb88:	imul   ebx,eax,0x903ee4d8
  41eb8e:	nop
  41eb8f:	sub    BYTE PTR [edi],bl
  41eb91:	adc    al,dh
  41eb93:	cmp    dl,BYTE PTR [esi-0x54f071eb]
  41eb99:	bound  edi,QWORD PTR [ecx+0x2a18e988]
  41eb9f:	cmp    DWORD PTR [eax+ebp*1-0x6789752e],esi
  41eba6:	lds    eax,FWORD PTR [edx]
  41eba8:	dec    edx
  41eba9:	mov    edx,0x7bf50961
  41ebae:	fcmovnbe st,st(4)
  41ebb0:	pop    edi
  41ebb1:	cmc    
  41ebb2:	sbb    BYTE PTR [edi],ah
  41ebb4:	cmc    
  41ebb5:	adc    BYTE PTR [eax-0x56ecdabf],cl
  41ebbb:	popf   
  41ebbc:	outs   dx,BYTE PTR ds:[esi]
  41ebbd:	dec    esi
  41ebbe:	cmc    
  41ebbf:	and    DWORD PTR [ecx],esp
  41ebc1:	fistp  DWORD PTR [ebx+0x8aa0574]
  41ebc7:	jmp    0x41ec43
  41ebc9:	stos   DWORD PTR es:[edi],eax
  41ebca:	or     eax,0x1c716585
  41ebcf:	sub    ch,BYTE PTR [ecx+0x16]
  41ebd2:	sub    BYTE PTR [edx+0x3a36b52c],al
  41ebd8:	rcr    BYTE PTR [eax+0x1f71edf5],0xf4
  41ebdf:	jne    0x41ebe4
  41ebe1:	outs   dx,BYTE PTR ds:[esi]
  41ebe2:	or     ah,al
  41ebe4:	fwait
  41ebe5:	or     DWORD PTR [eax+0x21c2d09e],eax
  41ebeb:	(bad)  
  41ebec:	cli    
  41ebed:	bound  ebp,QWORD PTR [ecx]
  41ebef:	inc    eax
  41ebf0:	cdq    
  41ebf1:	loope  0x41ec37
  41ebf3:	xchg   DWORD PTR [eax+0x14e77c8],ecx
  41ebf9:	mov    eax,ds:0x7562eff3
  41ebfe:	sbb    ah,cl
  41ec00:	ins    DWORD PTR es:[edi],dx
  41ec01:	mov    ds:0x6ac56344,al
  41ec06:	(bad)  
  41ec07:	iret   
  41ec08:	xor    BYTE PTR [ebx+0x47eac731],ch
  41ec0e:	sbb    DWORD PTR [eax],ebp
  41ec10:	or     eax,0x4cb9c543
  41ec15:	ds pop ecx
  41ec17:	push   ecx
  41ec18:	mov    ah,0x2b
  41ec1a:	js     0x41ebbb
  41ec1c:	iret   
  41ec1d:	repnz stos BYTE PTR es:[edi],al
  41ec1f:	xor    BYTE PTR [ebx-0x29],0x4e
  41ec23:	xchg   ecx,eax
  41ec24:	sbb    esi,DWORD PTR [edx+0x3a26bb78]
  41ec2a:	rcl    DWORD PTR [esi-0x51b9e521],cl
  41ec30:	inc    ebp
  41ec31:	retf   
  41ec32:	or     al,0xaa
  41ec34:	shr    esi,cl
  41ec36:	mov    esi,0x89a0c51
  41ec3b:	add    eax,0xb222a26
  41ec40:	mov    ecx,0xbc475168
  41ec45:	(bad)  
  41ec46:	(bad)  
  41ec48:	push   es
  41ec49:	adc    eax,0xc32b64c3
  41ec4e:	bnd lock jns 0x41ec21
  41ec52:	xchg   ebp,eax
  41ec53:	arpl   WORD PTR [edi-0x36],dx
  41ec56:	inc    ebp
  41ec57:	ficom  WORD PTR [ebx]
  41ec59:	xchg   esp,eax
  41ec5a:	sahf   
  41ec5b:	imul   edi,DWORD PTR [edi+0x9896d59],0xf704356a
  41ec65:	lock push ss
  41ec67:	dec    edx
  41ec68:	push   eax
  41ec69:	sub    DWORD PTR [ebx+ecx*8+0x39],eax
  41ec6d:	mov    al,ds:0xdc2286a1
  41ec72:	inc    eax
  41ec73:	and    BYTE PTR [edx+0x34],ah
  41ec76:	mov    cl,al
  41ec78:	leave  
  41ec79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec7a:	sbb    DWORD PTR [edi+0x4c3e05c4],ecx
  41ec80:	pop    esi
  41ec81:	ins    DWORD PTR es:[edi],dx
  41ec82:	mov    bx,si
  41ec85:	mov    ah,0x22
  41ec87:	jno    0x41ec84
  41ec89:	into   
  41ec8a:	xchg   BYTE PTR [edx-0x20debe1f],ch
  41ec90:	mov    WORD PTR [ebx+ebp*8-0xb],ds
  41ec94:	inc    ebp
  41ec95:	mov    eax,0x34f24162
  41ec9a:	idiv   ebx
  41ec9c:	mov    bl,0x2b
  41ec9e:	ret    
  41ec9f:	sub    bh,BYTE PTR [eax-0x690c43b1]
  41eca5:	push   ebx
  41eca6:	gs std 
  41eca8:	jns    0x41ec3e
  41ecaa:	mov    bh,0x98
  41ecac:	dec    ecx
  41ecad:	ffreep st(6)
  41ecaf:	fisub  DWORD PTR [eax-0x96c5c9e]
  41ecb5:	push   ebp
  41ecb6:	ret    
  41ecb7:	pusha  
  41ecb8:	cwde   
  41ecb9:	inc    edi
  41ecba:	out    0x80,eax
  41ecbc:	push   cs
  41ecbd:	(bad)  
  41ecbe:	fwait
  41ecbf:	bound  esi,QWORD PTR [eax+ecx*1-0x4f13cea]
  41ecc6:	out    dx,al
  41ecc7:	xor    ah,BYTE PTR [edx]
  41ecc9:	or     eax,0xc75d1f0c
  41ecce:	mov    WORD PTR [ecx],gs
  41ecd0:	fld    DWORD PTR [esi+eax*8]
  41ecd3:	add    dl,BYTE PTR [esi+0x5880de8c]
  41ecd9:	add    bh,BYTE PTR [ebp-0x15926c04]
  41ecdf:	lock adc al,0x75
  41ece2:	pop    es
  41ece3:	adc    al,0x1
  41ece5:	adc    bh,BYTE PTR [edi+0x5586ba0d]
  41eceb:	mov    ?,ebx
  41eced:	xlat   BYTE PTR ds:[ebx]
  41ecee:	jmp    0x8e1a6a72
  41ecf3:	into   
  41ecf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecf5:	mov    ds:0x5b8c8cfc,eax
  41ecfa:	dec    edx
  41ecfb:	data16 clc 
  41ecfd:	pop    eax
  41ecfe:	cmc    
  41ecff:	xor    dh,BYTE PTR [esi+esi*1+0x7b7142d1]
  41ed06:	mov    ds:0x8c194bdd,eax
  41ed0b:	cmp    ecx,DWORD PTR [edi+0x34]
  41ed0e:	inc    ecx
  41ed0f:	xchg   esi,eax
  41ed10:	sbb    dh,BYTE PTR [ebx-0x637e34ed]
  41ed16:	pop    ebp
  41ed17:	fs pop esp
  41ed19:	push   edx
  41ed1a:	inc    ecx
  41ed1b:	loop   0x41ed49
  41ed1d:	loope  0x41ecf1
  41ed1f:	inc    esi
  41ed20:	pop    eax
  41ed21:	inc    BYTE PTR [edx-0x3fb13440]
  41ed27:	cmp    DWORD PTR [eax+0x78],eax
  41ed2a:	dec    ebx
  41ed2b:	xor    eax,0xbb73bcb4
  41ed30:	pop    eax
  41ed31:	adc    al,0xa0
  41ed33:	pop    edx
  41ed34:	cmp    al,BYTE PTR [esi]
  41ed36:	(bad)
  41ed3a:	sub    BYTE PTR [eax+0x13],dl
  41ed3d:	int3   
  41ed3e:	push   es
  41ed3f:	fbld   TBYTE PTR [ebx+0x4f4640fb]
  41ed45:	xchg   ebp,eax
  41ed46:	dec    edx
  41ed47:	out    0x3d,eax
  41ed49:	dec    esp
  41ed4a:	jnp    0x41ed88
  41ed4c:	shl    DWORD PTR [ecx+eiz*1+0x3361f955],0x6d
  41ed54:	ret    
  41ed55:	mov    al,ds:0xb5869c6
  41ed5a:	dec    eax
  41ed5b:	test   al,0x92
  41ed5d:	add    ebx,ebp
  41ed5f:	add    DWORD PTR [ebp+0x24d6e1fe],0x9b456bd6
  41ed69:	scas   eax,DWORD PTR es:[edi]
  41ed6a:	mov    eax,0x4068f2c1
  41ed6f:	fstp   TBYTE PTR [esi-0x1a]
  41ed72:	pop    es
  41ed73:	inc    eax
  41ed74:	stos   BYTE PTR es:[edi],al
  41ed75:	(bad)  
  41ed76:	out    0x7c,al
  41ed78:	stos   DWORD PTR es:[edi],eax
  41ed79:	gs (bad) 
  41ed7b:	push   esi
  41ed7c:	imul   DWORD PTR [edi+0x2e78ae53]
  41ed82:	ja     0x41ed12
  41ed84:	push   edx
  41ed85:	arpl   WORD PTR [edi-0x45],cx
  41ed88:	jl     0x41edb9
  41ed8a:	inc    edi
  41ed8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed8c:	pusha  
  41ed8d:	lahf   
  41ed8e:	int3   
  41ed8f:	mov    ch,0x72
  41ed91:	cwde   
  41ed92:	xor    al,0xbc
  41ed94:	xchg   esi,eax
  41ed95:	cs loope 0x41ed49
  41ed98:	dec    edi
  41ed99:	outs   dx,DWORD PTR ds:[esi]
  41ed9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed9b:	jae    0x41ed7a
  41ed9d:	outs   dx,BYTE PTR ds:[esi]
  41ed9e:	inc    ebp
  41ed9f:	jle    0x41ed6e
  41eda1:	cmp    al,0x5f
  41eda3:	pop    ecx
  41eda4:	jmp    0x41ed76
  41eda6:	xchg   eax,edx
  41eda8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eda9:	daa    
  41edaa:	std    
  41edab:	aas    
  41edac:	pop    es
  41edad:	sbb    esi,DWORD PTR [esi-0x58]
  41edb0:	or     al,0xa
  41edb2:	retf   0xa332
  41edb5:	rcr    DWORD PTR ds:0xa8c004ae,cl
  41edbb:	and    eax,0x90ed8aba
  41edc0:	(bad)  
  41edc2:	je     0x41ed5f
  41edc4:	bound  esp,QWORD PTR [esi]
  41edc6:	fbstp  TBYTE PTR [esi]
  41edc8:	test   al,0xac
  41edca:	xor    al,0xc7
  41edcc:	cmp    eax,0x1ba7fff0
  41edd1:	pop    edi
  41edd2:	mov    eax,0xc85057c
  41edd7:	ret    
  41edd8:	(bad)  
  41edd9:	dec    ecx
  41edda:	mov    ds:0xf7afceab,eax
  41eddf:	test   eax,0x1fecaacb
  41ede4:	jg     0x41edad
  41ede6:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ede8:	pop    ebp
  41ede9:	jl     0x41edc9
  41edeb:	mov    ebp,eax
  41eded:	pop    esi
  41edee:	aam    0x94
  41edf0:	add    al,0x6c
  41edf2:	jp     0x41edcf
  41edf4:	or     ebp,DWORD PTR [esi+0x5c]
  41edf7:	push   ebx
  41edf8:	inc    ebx
  41edf9:	lds    ebp,FWORD PTR [edx]
  41edfb:	sbb    eax,0xa688067d
  41ee00:	sahf   
  41ee01:	dec    edi
  41ee02:	xor    al,BYTE PTR [ecx-0x6713b47a]
  41ee08:	les    ebp,FWORD PTR gs:[edi-0x2a524e4e]
  41ee0f:	fnstenv [esi]
  41ee11:	cmp    bh,bh
  41ee13:	jl     0x41ee43
  41ee15:	shl    DWORD PTR [edx+0x2a827cf9],0xa
  41ee1c:	inc    eax
  41ee1d:	(bad)  
  41ee1e:	mov    edi,0x83497e55
  41ee23:	inc    ecx
  41ee24:	pusha  
  41ee25:	push   ds
  41ee26:	mov    DWORD PTR [edi-0x3a258674],0x29907cad
  41ee30:	sti    
  41ee31:	jne    0x41edea
  41ee33:	inc    edx
  41ee34:	jo     0x41ee16
  41ee36:	ret    0xf865
  41ee39:	add    al,0xa4
  41ee3b:	pop    ebp
  41ee3c:	hlt    
  41ee3d:	leave  
  41ee3e:	adc    al,0x99
  41ee40:	test   al,0x97
  41ee42:	sub    BYTE PTR [ebp+0x3e65b5d9],ah
  41ee48:	retf   
  41ee49:	ret    0xed56
  41ee4c:	ins    DWORD PTR es:[edi],dx
  41ee4d:	xchg   ecx,eax
  41ee4e:	jo     0x41eea2
  41ee50:	call   0x9fd4:0xcdd51e12
  41ee57:	and    BYTE PTR [ecx+0x44159e39],bl
  41ee5d:	int    0xdc
  41ee5f:	sub    ebp,DWORD PTR [ebx+0x565a5342]
  41ee65:	retf   
  41ee66:	(bad)  
  41ee67:	in     eax,dx
  41ee68:	and    edi,esp
  41ee6a:	scas   eax,DWORD PTR es:[edi]
  41ee6b:	dec    ebx
  41ee6c:	jo     0x41ee78
  41ee6e:	fild   DWORD PTR [esi+0x79507839]
  41ee74:	pop    ecx
  41ee75:	(bad)  
  41ee77:	call   0x77ab85d0
  41ee7c:	outs   dx,BYTE PTR ds:[esi]
  41ee7d:	test   al,0xb5
  41ee7f:	loop   0x41ee93
  41ee81:	ins    DWORD PTR es:[edi],dx
  41ee82:	lock fst DWORD PTR [esi]
  41ee85:	pop    edi
  41ee86:	xchg   esi,eax
  41ee87:	imul   edi,DWORD PTR [ecx],0x209f2aaf
  41ee8d:	aas    
  41ee8e:	cmp    al,0x9d
  41ee90:	jne    0x41eeaa
  41ee92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee93:	(bad)
  41ee96:	cmp    bl,bh
  41ee98:	or     al,0x70
  41ee9a:	sbb    al,0x79
  41ee9c:	fwait
  41ee9d:	call   0xd120:0xc4a6034
  41eea4:	and    BYTE PTR [eax],dl
  41eea6:	test   DWORD PTR [edx],eax
  41eea8:	jecxz  0x41ef1d
  41eeaa:	xor    BYTE PTR [esi+0xe7738be],dl
  41eeb0:	mov    ecx,0x491605a3
  41eeb5:	in     al,dx
  41eeb6:	cwde   
  41eeb7:	int    0xd5
  41eeb9:	in     eax,dx
  41eeba:	xchg   edx,eax
  41eebb:	xchg   esp,eax
  41eebc:	add    ebx,esi
  41eebe:	jle    0x41eebb
  41eec0:	cs scas al,BYTE PTR es:[edi]
  41eec2:	xchg   esp,eax
  41eec3:	out    dx,eax
  41eec4:	and    cl,BYTE PTR ds:0x96a45b74
  41eeca:	(bad)  [ebx-0x7a]
  41eecd:	pop    ss
  41eece:	mov    ds:0x85d7efd1,eax
  41eed3:	and    DWORD PTR [ebx],eax
  41eed5:	lods   al,BYTE PTR ds:[esi]
  41eed6:	lds    edx,FWORD PTR [eax+0x4166f2b]
  41eedc:	mov    ecx,0x5299d85e
  41eee1:	add    ebp,ebp
  41eee3:	dec    ebp
  41eee4:	sahf   
  41eee5:	mov    esi,0xe6897d6
  41eeea:	ficomp WORD PTR [ebp+0x69]
  41eeed:	jp     0x41ef45
  41eeef:	inc    ebp
  41eef0:	call   0xeb9a5600
  41eef5:	or     BYTE PTR [ebp+0x66],bh
  41eef8:	test   DWORD PTR [eax+0x24ed2ee],eax
  41eefe:	mov    esp,0x6f922f66
  41ef03:	sahf   
  41ef04:	arpl   WORD PTR [esi+esi*4+0x5e88b042],di
  41ef0b:	test   DWORD PTR [edi+0x2d],0x675caaa0
  41ef12:	lahf   
  41ef13:	cmp    BYTE PTR [edi+eiz*1],bl
  41ef16:	dec    ebp
  41ef17:	dec    eax
  41ef18:	icebp  
  41ef19:	in     al,0x67
  41ef1b:	xchg   esi,eax
  41ef1c:	cwde   
  41ef1d:	jbe    0x41eeb2
  41ef1f:	push   edx
  41ef20:	mov    edi,DWORD PTR [edi+0x6e]
  41ef23:	inc    edi
  41ef24:	pop    es
  41ef25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef26:	retf   
  41ef27:	shl    dh,1
  41ef29:	push   ss
  41ef2a:	ror    ah,1
  41ef2c:	mov    dh,dh
  41ef2e:	push   0xeae8f670
  41ef33:	mov    bh,0xee
  41ef35:	push   edx
  41ef36:	mov    edx,0x40805e72
  41ef3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef3c:	inc    edx
  41ef3d:	bound  edx,QWORD PTR [eax]
  41ef3f:	scas   al,BYTE PTR es:[edi]
  41ef40:	call   FWORD PTR [eax]
  41ef42:	xchg   esp,eax
  41ef43:	push   0x6a
  41ef45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef46:	push   0x3a
  41ef48:	shr    BYTE PTR [edx],0x72
  41ef4b:	xchg   BYTE PTR [eax-0x60],dh
  41ef4e:	pop    ebx
  41ef4f:	test   BYTE PTR [ebx-0x4fcafe9b],dh
  41ef55:	xor    al,0x94
  41ef57:	imul   ecx,DWORD PTR [edi],0x2f5db37
  41ef5d:	and    BYTE PTR [ebx-0x20242946],ch
  41ef63:	scas   al,BYTE PTR es:[edi]
  41ef64:	mov    edi,0x83fc3ad7
  41ef69:	add    DWORD PTR [esi],ebx
  41ef6b:	in     eax,dx
  41ef6c:	and    DWORD PTR [ebx+0xb],eax
  41ef6f:	xchg   edx,eax
  41ef70:	loop   0x41ef97
  41ef72:	div    DWORD PTR [ebx+0x66]
  41ef75:	or     BYTE PTR [edx+0x3c],ah
  41ef78:	rol    dl,cl
  41ef7a:	jno    0x41ef36
  41ef7c:	xchg   edx,eax
  41ef7d:	out    0x58,eax
  41ef7f:	add    cl,BYTE PTR [ebx-0x28]
  41ef82:	hlt    
  41ef83:	in     al,dx
  41ef84:	sahf   
  41ef85:	xchg   edx,eax
  41ef86:	dec    esp
  41ef87:	mov    ds:0x7c54c47a,eax
  41ef8c:	rcl    BYTE PTR [eax+0x53],1
  41ef8f:	jle    0x41ef9c
  41ef91:	push   ss
  41ef92:	in     eax,0x84
  41ef94:	and    al,BYTE PTR [edi-0x1862bf80]
  41ef9a:	(bad)  
  41ef9c:	adc    esi,esi
  41ef9e:	or     BYTE PTR [eax-0x374da10e],ch
  41efa4:	dec    esp
  41efa5:	sub    DWORD PTR [eax-0x5a],esi
  41efa8:	sti    
  41efa9:	cmc    
  41efaa:	or     edi,esi
  41efac:	pop    ss
  41efad:	(bad)  
  41efaf:	push   edi
  41efb0:	xor    DWORD PTR [ebx-0x68],edx
  41efb3:	ret    
  41efb4:	mov    dl,0x61
  41efb6:	inc    esi
  41efb7:	imul   bh
  41efb9:	jle    0x41ef4a
  41efbb:	inc    eax
  41efbc:	xchg   esp,eax
  41efbd:	ins    BYTE PTR es:[edi],dx
  41efbe:	ret    0x6bf9
  41efc1:	dec    ebx
  41efc2:	mov    ds,WORD PTR [eax+0x194e974a]
  41efc8:	sub    edx,DWORD PTR [esi-0x34]
  41efcb:	mov    esi,0x56f5750
  41efd0:	sbb    DWORD PTR [ebx],edi
  41efd2:	cmp    BYTE PTR [edi+esi*2-0x62],cl
  41efd6:	cld    
  41efd7:	scas   al,BYTE PTR es:[edi]
  41efd8:	push   ebp
  41efd9:	or     DWORD PTR [ebp-0x1d],ebp
  41efdc:	dec    esi
  41efdd:	sbb    al,0x62
  41efdf:	in     eax,dx
  41efe0:	jle    0x41f010
  41efe2:	add    ecx,ecx
  41efe4:	(bad)  
  41efe5:	icebp  
  41efe6:	adc    al,0x7d
  41efe8:	gs ss lahf 
  41efeb:	inc    eax
  41efec:	xchg   BYTE PTR [edi-0x1f],bh
  41efef:	mov    eax,0xde457a3
  41eff4:	loop   0x41ef8c
  41eff6:	pcmpeqb mm2,QWORD PTR [ebx+0x38db7695]
  41effd:	mov    dl,0x33
  41efff:	enter  0xce03,0xf
  41f003:	test   DWORD PTR [ebx-0x24],esp
  41f006:	(bad)  
  41f007:	dec    DWORD PTR [ebx+0x4d89f44d]
  41f00d:	or     cl,ch
  41f00f:	sub    eax,0x8b000000
  41f014:	dec    ebp
  41f015:	or     BYTE PTR [ebx-0x37cc07ab],cl
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x55d26403
  41f0bf:	or     eax,0x61d85149
  41f0c4:	bound  edi,QWORD PTR [edi+ebx*2]
  41f0c7:	bound  esp,QWORD PTR [edx+0x6f]
  41f0ca:	mov    bh,0x3e
  41f0cc:	aas    
  41f0cd:	sub    BYTE PTR [edx+0x1830d1df],ch
  41f0d3:	jmp    0xba546f8c
  41f0d8:	mov    ds:0x4f022dd2,al
  41f0dd:	mov    edi,0x7f709531
  41f0e2:	inc    esi
  41f0e3:	(bad)  
  41f0e4:	leave  
  41f0e5:	add    eax,0x3b5085b3
  41f0ea:	lods   eax,DWORD PTR ds:[esi]
  41f0eb:	stos   DWORD PTR es:[edi],eax
  41f0ec:	push   0x2f
  41f0ee:	push   es
  41f0ef:	repnz call 0x25cd:0xcfb166
  41f0f7:	cwde   
  41f0f8:	nop
  41f0f9:	je     0x41f166
  41f0fb:	cmp    DWORD PTR [edi+edi*1],ecx
  41f0fe:	push   ebp
  41f0ff:	xor    eax,0xa7b8eb97
  41f104:	push   ss
  41f105:	xchg   BYTE PTR [esi],al
  41f107:	xchg   ebx,eax
  41f108:	inc    ebp
  41f109:	gs popf 
  41f10b:	xchg   ebx,eax
  41f10c:	mov    al,ds:0x4a41c77e
  41f111:	sbb    eax,DWORD PTR [edi+0x6e]
  41f114:	je     0x41f10b
  41f116:	adc    ch,cl
  41f118:	out    0x22,al
  41f11a:	inc    esp
  41f11b:	cmp    dl,BYTE PTR [ebp+0x4d]
  41f11e:	sbb    DWORD PTR [edi-0x27],eax
  41f121:	xchg   ecx,eax
  41f122:	imul   eax,DWORD PTR [esi-0x27e01fa8],0xffffffba
  41f129:	xchg   DWORD PTR [eax-0x4e62fa6d],esp
  41f12f:	mov    DWORD PTR [ebx+0x11],esi
  41f132:	or     eax,0x7cb51dca
  41f137:	or     edx,esi
  41f139:	mov    DWORD PTR [esi-0x6e],ebp
  41f13c:	jb     0x41f1bb
  41f13e:	add    ecx,DWORD PTR [ecx+0x55]
  41f141:	xlat   BYTE PTR ds:[ebx]
  41f142:	or     al,0x65
  41f144:	mov    ebx,0x63fffa24
  41f149:	rol    BYTE PTR [eax+0x4b],0x55
  41f14d:	lods   eax,DWORD PTR ds:[esi]
  41f14e:	loope  0x41f196
  41f150:	test   ah,al
  41f152:	sub    DWORD PTR [ecx-0x43],ecx
  41f155:	fild   DWORD PTR [edi-0x35]
  41f158:	jge    0x41f13d
  41f15a:	or     BYTE PTR [ebx+0x50],bl
  41f15d:	je     0x41f100
  41f15f:	mov    esi,0x8c2d9789
  41f164:	shr    ebx,cl
  41f166:	push   edi
  41f167:	sti    
  41f168:	push   es
  41f169:	ret    0x4e84
  41f16c:	xchg   ecx,eax
  41f16d:	arpl   WORD PTR [ecx-0x731befa2],ax
  41f173:	cmc    
  41f174:	xchg   esi,eax
  41f175:	mov    dl,0xcb
  41f177:	arpl   WORD PTR [ebp+0x22],ax
  41f17a:	mov    ebp,0x42c69c8b
  41f17f:	mov    BYTE PTR [eax+0x75],ch
  41f182:	mov    ch,0x6a
  41f184:	je     0x41f195
  41f186:	pop    es
  41f187:	(bad)  
  41f188:	push   esp
  41f189:	mov    ch,0xca
  41f18b:	pop    edi
  41f18c:	push   esi
  41f18d:	int    0x2a
  41f18f:	inc    edx
  41f190:	fimul  WORD PTR [esi]
  41f192:	lea    ebp,[ebx+0x6e]
  41f195:	hlt    
  41f196:	jmp    0xaebdcfa5
  41f19b:	xor    DWORD PTR [ebp-0x8],ebp
  41f19e:	jmp    0x41f1f0
  41f1a0:	out    0x38,eax
  41f1a2:	pop    ds
  41f1a3:	sub    eax,0xf223cea6
  41f1a8:	sub    BYTE PTR [ebp-0x4b],ch
  41f1ab:	aam    0x82
  41f1ad:	adc    al,0x33
  41f1af:	pop    eax
  41f1b0:	repnz popf 
  41f1b2:	jo     0x41f18b
  41f1b4:	push   ecx
  41f1b5:	add    ebp,DWORD PTR [edx+esi*4]
  41f1b8:	lods   eax,DWORD PTR ds:[esi]
  41f1b9:	push   ebx
  41f1ba:	mov    esi,DWORD PTR [eax+eax*1-0x17]
  41f1be:	sub    al,0x12
  41f1c0:	pop    esp
  41f1c1:	sti    
  41f1c2:	outs   dx,DWORD PTR ds:[esi]
  41f1c3:	mov    bh,0x69
  41f1c5:	mov    esp,0x4bacb8e1
  41f1ca:	xchg   DWORD PTR [eax+ebx*2-0x1728939c],edx
  41f1d1:	cmp    dh,BYTE PTR [ebp+0x32]
  41f1d4:	inc    ebx
  41f1d5:	out    0xa7,al
  41f1d7:	mov    bh,0xda
  41f1d9:	add    edi,DWORD PTR [esi]
  41f1db:	dec    ebx
  41f1dc:	or     edi,DWORD PTR [eax]
  41f1de:	adc    bl,BYTE PTR [eax+edi*4+0x4ce50471]
  41f1e5:	pop    edx
  41f1e6:	add    eax,0xcd96779a
  41f1ec:	stos   BYTE PTR es:[edi],al
  41f1ed:	scas   eax,DWORD PTR es:[edi]
  41f1ee:	popa   
  41f1ef:	fs ret 0x1065
  41f1f3:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41f1f5:	nop
  41f1f6:	in     al,dx
  41f1f7:	fnsave ds:[ebp+0x29db9d03]
  41f1fe:	mov    eax,0xd2694a82
  41f203:	xor    eax,ebp
  41f205:	pop    edi
  41f206:	stos   BYTE PTR es:[edi],al
  41f207:	stc    
  41f208:	into   
  41f209:	sbb    DWORD PTR [ebx+eiz*2-0x1d],ebp
  41f20d:	pop    esi
  41f20e:	pop    edi
  41f20f:	fsubr  DWORD PTR [eax+0x3c0f9bdb]
  41f215:	sbb    al,0xe4
  41f217:	aad    0x61
  41f219:	iret   
  41f21a:	inc    edx
  41f21b:	aam    0xa
  41f21d:	or     BYTE PTR [edx-0x3a600c48],dh
  41f223:	sub    BYTE PTR [esi+0x64],bl
  41f226:	aam    0x65
  41f228:	inc    esp
  41f229:	div    BYTE PTR [eax]
  41f22b:	fst    QWORD PTR [edi+edx*4-0x6319fc8a]
  41f232:	jmp    0x41f1c1
  41f234:	ja     0x41f1d2
  41f236:	int3   
  41f237:	push   0xffffff9a
  41f239:	add    eax,0x934902d2
  41f23e:	xlat   BYTE PTR ds:[ebx]
  41f23f:	ins    WORD PTR es:[edi],dx
  41f241:	popf   
  41f242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f243:	dec    ebp
  41f244:	cs dec edi
  41f246:	sub    cl,dh
  41f248:	imul   esi,DWORD PTR [eax],0x24
  41f24b:	ins    DWORD PTR es:[edi],dx
  41f24c:	out    dx,al
  41f24d:	ins    DWORD PTR es:[edi],dx
  41f24e:	jb     0x41f1d8
  41f250:	leave  
  41f251:	mov    WORD PTR [edx+0x5a9a2455],ss
  41f257:	inc    edx
  41f258:	into   
  41f259:	dec    eax
  41f25a:	loop   0x41f220
  41f25c:	daa    
  41f25d:	sbb    bl,bl
  41f25f:	xor    BYTE PTR [ecx],0xa6
  41f262:	gs xchg ebx,eax
  41f264:	pop    esp
  41f265:	push   ecx
  41f266:	sub    al,0xcf
  41f268:	cmp    edi,0x91dd7f80
  41f26e:	sub    al,0xe2
  41f270:	jmp    0x1ad3a4be
  41f275:	dec    edx
  41f276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f277:	inc    ecx
  41f278:	(bad)  
  41f279:	mov    esp,0xa3f9a34d
  41f27e:	out    0x8e,al
  41f280:	push   eax
  41f281:	int3   
  41f282:	stc    
  41f283:	and    DWORD PTR [eax-0x6c],0xd51e4390
  41f28a:	jno    0x41f2b1
  41f28c:	repz popa 
  41f28e:	loopne 0x41f23a
  41f290:	inc    edi
  41f291:	mov    ds:0xe6aede80,al
  41f296:	aas    
  41f297:	xor    DWORD PTR [esi+0x56dcf89],ecx
  41f29d:	mov    esp,es
  41f29f:	pop    ebp
  41f2a0:	xchg   ecx,eax
  41f2a1:	aad    0x39
  41f2a3:	pop    ebx
  41f2a4:	ror    BYTE PTR [edx-0x2b],1
  41f2a7:	daa    
  41f2a8:	adc    al,0xa8
  41f2aa:	cmp    ah,BYTE PTR [esi-0xd]
  41f2ad:	xor    eax,0xc9d0f07a
  41f2b2:	lds    edx,FWORD PTR [eax]
  41f2b4:	and    BYTE PTR [edx-0x3c],ah
  41f2b7:	pop    ecx
  41f2b8:	dec    ebx
  41f2b9:	lock mov ebx,esp
  41f2bc:	retf   
  41f2bd:	cli    
  41f2be:	mov    ecx,0xbf61f360
  41f2c3:	push   cs
  41f2c4:	pop    ss
  41f2c5:	mov    edi,0xb1f898d
  41f2ca:	call   0x5b6a:0x13bdf6f5
  41f2d1:	int3   
  41f2d2:	sbb    BYTE PTR [edi+0x43],dh
  41f2d5:	pop    edi
  41f2d6:	enter  0xee6d,0xfe
  41f2da:	xchg   ebx,eax
  41f2db:	mov    edx,0xcbe2468e
  41f2e0:	mov    ebp,edx
  41f2e2:	jmp    0x6127569c
  41f2e7:	inc    esp
  41f2e8:	jecxz  0x41f2a7
  41f2ea:	and    dh,BYTE PTR cs:[eax+0x6e]
  41f2ee:	stc    
  41f2ef:	cli    
  41f2f0:	test   BYTE PTR [eax-0x7a],bl
  41f2f3:	pop    ebx
  41f2f4:	sub    DWORD PTR [esi+0x75cfdc6],esi
  41f2fa:	xor    bh,BYTE PTR [edi+0x3f342eae]
  41f300:	int    0x98
  41f302:	cwde   
  41f303:	pushf  
  41f304:	stc    
  41f305:	inc    esp
  41f306:	int    0xe1
  41f308:	test   al,0xd3
  41f30a:	in     al,0x68
  41f30c:	scas   al,BYTE PTR es:[edi]
  41f30d:	xchg   BYTE PTR [ecx+0x6f4fb1ab],ah
  41f313:	das    
  41f314:	ins    DWORD PTR es:[edi],dx
  41f315:	mov    ds:0x2a0c4687,al
  41f31a:	inc    ecx
  41f31b:	fld    QWORD PTR [ebx+0x44]
  41f31e:	neg    ecx
  41f320:	es push ss
  41f322:	das    
  41f323:	sbb    eax,0x567e1ec4
  41f328:	mov    ds:0x163781d7,al
  41f32d:	sub    BYTE PTR [esi],dl
  41f32f:	adc    DWORD PTR [ecx-0x709e1425],ecx
  41f335:	xchg   esi,eax
  41f336:	test   eax,0x1d1288d4
  41f33b:	test   al,0x9b
  41f33d:	dec    edi
  41f33e:	mov    esi,0x9aefa9da
  41f343:	inc    ebx
  41f344:	mov    ?,WORD PTR [edx+0x347ae025]
  41f34a:	shr    ebp,cl
  41f34c:	add    eax,0x3d5bb0ea
  41f351:	mov    al,ds:0x216093be
  41f356:	lods   al,BYTE PTR ds:[esi]
  41f357:	into   
  41f358:	imul   ebp,DWORD PTR [edi],0x9760a128
  41f35e:	xor    edi,DWORD PTR [edi+0x18cde205]
  41f364:	cwde   
  41f365:	mov    ebp,0xbe6bc609
  41f36a:	popf   
  41f36b:	sub    dh,cl
  41f36d:	popa   
  41f36e:	xchg   edi,esp
  41f370:	shl    BYTE PTR [esi],cl
  41f372:	(bad)  
  41f373:	jle    0x41f3e3
  41f375:	sub    al,dh
  41f377:	xchg   ecx,eax
  41f378:	loop   0x41f30f
  41f37a:	sti    
  41f37b:	sbb    dh,al
  41f37d:	cmp    BYTE PTR ds:0xa903ccf0,dl
  41f383:	dec    edx
  41f384:	bound  esp,QWORD PTR [ecx+eiz*1-0x6]
  41f388:	outs   dx,DWORD PTR ds:[esi]
  41f389:	lea    ecx,[esi-0x2db0ad96]
  41f38f:	out    dx,al
  41f390:	lods   al,BYTE PTR ds:[esi]
  41f391:	jmp    DWORD PTR [eax]
  41f393:	dec    ebp
  41f394:	std    
  41f395:	mov    esi,0xf5a7ae15
  41f39a:	into   
  41f39b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f39c:	loop   0x41f357
  41f39e:	addr16 cwde 
  41f3a0:	push   0x9726dee3
  41f3a5:	(bad)  
  41f3a6:	pushf  
  41f3a7:	addr16 test ah,cl
  41f3aa:	pop    esp
  41f3ab:	es jmp 0x5b8de8d0
  41f3b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3b2:	mov    WORD PTR [eax],ds
  41f3b4:	(bad)  
  41f3b5:	adc    BYTE PTR [eax],ah
  41f3b7:	cmc    
  41f3b8:	call   0xf1565e91
  41f3bd:	add    BYTE PTR [edx-0x3ce3dc50],bh
  41f3c3:	cmp    al,bh
  41f3c5:	sbb    BYTE PTR ds:0xd4b19d2f,ah
  41f3cb:	jnp    0x41f3bd
  41f3cd:	das    
  41f3ce:	(bad)  
  41f3cf:	test   DWORD PTR [eax-0x79],0xc9f4d727
  41f3d6:	shl    DWORD PTR [edi+0x71],cl
  41f3d9:	int3   
  41f3da:	stos   DWORD PTR es:[edi],eax
  41f3db:	ds push edi
  41f3dd:	mov    al,0x59
  41f3df:	popa   
  41f3e0:	jae    0x41f3d2
  41f3e2:	push   ss
  41f3e3:	push   ds
  41f3e4:	jecxz  0x41f44b
  41f3e6:	retf   
  41f3e7:	pusha  
  41f3e8:	out    dx,eax
  41f3e9:	iret   
  41f3ea:	mov    BYTE PTR [ecx+0x19],0x98
  41f3ee:	xor    eax,edi
  41f3f0:	or     DWORD PTR [ebp+0x6d],edi
  41f3f3:	mov    DWORD PTR [ecx-0x31e0ff15],edi
  41f3f9:	push   ebp
  41f3fa:	jne    0x41f3e5
  41f3fc:	dec    edx
  41f3fd:	jb     0x41f3fa
  41f3ff:	xor    eax,0x75b0e3e9
  41f404:	(bad)
  41f407:	add    dl,ah
  41f409:	rol    BYTE PTR [esi],1
  41f40b:	fstp   QWORD PTR [ebx]
  41f40d:	pop    es
  41f40e:	inc    ebp
  41f40f:	into   
  41f410:	mov    ah,0x3a
  41f412:	test   eax,0x7012e71
  41f417:	out    dx,al
  41f418:	jae    0x41f3bd
  41f41a:	add    eax,0x5c1cb4df
  41f41f:	int    0x2b
  41f421:	mov    ecx,0x9aef98f2
  41f426:	dec    esi
  41f427:	xchg   esi,eax
  41f428:	jge    0x41f449
  41f42a:	pop    es
  41f42b:	xor    DWORD PTR [eax-0x46],edi
  41f42e:	(bad)  
  41f42f:	cli    
  41f430:	in     eax,dx
  41f431:	pop    esp
  41f432:	bound  ebp,QWORD PTR [edi+0x2108b1d8]
  41f438:	push   esi
  41f439:	mov    ebx,0x6c1f4c58
  41f43e:	xor    edi,DWORD PTR [esi+0x14ad69b5]
  41f444:	mov    eax,ds:0x4293fa82
  41f449:	add    edi,ebp
  41f44b:	scas   eax,DWORD PTR es:[edi]
  41f44c:	sub    ebx,DWORD PTR [eax]
  41f44e:	jbe    0x41f4c7
  41f450:	retf   
  41f451:	push   ebx
  41f452:	mov    ds:0xc3e2f2f2,al
  41f457:	mov    bh,0xf5
  41f459:	xor    DWORD PTR [ecx-0x32],edx
  41f45c:	push   0xfffffffe
  41f45e:	repz and dh,ah
  41f461:	inc    edi
  41f462:	mov    cl,0x60
  41f464:	int3   
  41f465:	cli    
  41f466:	imul   ebx,DWORD PTR [edi],0xd7d1081
  41f46c:	cli    
  41f46d:	mov    BYTE PTR [edi],ch
  41f46f:	mov    esp,0x77213ee0
  41f474:	mov    ah,0x34
  41f476:	and    ebx,DWORD PTR [esi+0xe]
  41f479:	pop    ebx
  41f47a:	rcr    DWORD PTR [ebx+0x4f],1
  41f47d:	sub    BYTE PTR [ebp-0x113828c0],0xb2
  41f484:	cmp    eax,0xec360d4c
  41f489:	push   0xffffffbc
  41f48b:	sub    BYTE PTR [ecx-0xc],al
  41f48e:	mov    al,ds:0xe5099fb2
  41f493:	in     eax,0xb
  41f495:	in     eax,dx
  41f496:	pop    ss
  41f497:	pop    ss
  41f498:	xlat   BYTE PTR cs:[ebx]
  41f49a:	dec    esp
  41f49b:	out    dx,al
  41f49c:	xchg   edx,eax
  41f49d:	scas   eax,DWORD PTR es:[edi]
  41f49e:	or     DWORD PTR [ebx],esi
  41f4a0:	daa    
  41f4a1:	jb     0x41f4a4
  41f4a3:	lods   eax,DWORD PTR ds:[esi]
  41f4a4:	mov    esp,0x4782e8ae
  41f4a9:	cmp    eax,0xaa422914
  41f4ae:	mov    eax,0xd25c5200
  41f4b3:	pop    esi
  41f4b4:	shl    BYTE PTR [ecx+0x61],cl
  41f4b7:	jno    0x41f4d1
  41f4b9:	aaa    
  41f4ba:	scas   eax,DWORD PTR es:[edi]
  41f4bb:	hlt    
  41f4bc:	push   cs
  41f4bd:	sbb    dl,BYTE PTR [esp+esi*2]
  41f4c0:	sub    al,0x8d
  41f4c2:	pop    es
  41f4c3:	xor    ebp,DWORD PTR [eax-0x41]
  41f4c6:	mov    ah,BYTE PTR [eax-0x35525828]
  41f4cc:	inc    DWORD PTR [esi+0x549e8f97]
  41f4d2:	pushf  
  41f4d3:	loopne 0x41f544
  41f4d5:	inc    eax
  41f4d6:	sbb    eax,0x8d1d7f89
  41f4db:	jnp    0x41f49e
  41f4dd:	and    DWORD PTR [edx-0x270e397d],ebx
  41f4e3:	or     bh,BYTE PTR [eax+0x60]
  41f4e6:	cmp    eax,0xfbb95834
  41f4eb:	test   DWORD PTR [ecx-0x40],ecx
  41f4ee:	(bad)  
  41f4ef:	outs   dx,BYTE PTR ds:[esi]
  41f4f0:	rdtsc  
  41f4f2:	mov    edx,0x85f08fbd
  41f4f7:	in     al,dx
  41f4f8:	inc    esi
  41f4f9:	int3   
  41f4fa:	adc    ah,BYTE PTR ss:[si+0x1e]
  41f4ff:	fidivr WORD PTR ds:0x34735286
  41f505:	mov    ebp,0x4e53e447
  41f50a:	sub    ecx,DWORD PTR [ebp-0x67]
  41f50d:	fld    DWORD PTR [ebp+0x27]
  41f510:	pop    ecx
  41f511:	jp     0x41f551
  41f513:	mov    ah,0x11
  41f515:	enter  0x2961,0x25
  41f519:	mov    cl,0x88
  41f51b:	outs   dx,DWORD PTR ds:[esi]
  41f51c:	arpl   sp,si
  41f51e:	sub    cl,BYTE PTR [eax+0x29]
  41f521:	inc    eax
  41f522:	shr    BYTE PTR [edi+0x25200154],cl
  41f528:	scas   al,BYTE PTR es:[edi]
  41f529:	shl    BYTE PTR [ebx],0x56
  41f52c:	test   al,0x1e
  41f52e:	out    dx,al
  41f52f:	jne    0x41f56f
  41f531:	jne    0x41f50d
  41f533:	jp     0x41f5b3
  41f535:	test   DWORD PTR [edi-0x4668f89d],esi
  41f53b:	mov    ecx,0xfa0cf316
  41f540:	(bad)  
  41f541:	pop    dx
  41f543:	sub    al,0x4d
  41f545:	rol    DWORD PTR [ecx+0x75],cl
  41f548:	sbb    eax,0x76869a5b
  41f54d:	aas    
  41f54e:	mov    BYTE PTR [edi],dl
  41f550:	or     edx,DWORD PTR [eax+0x185db4f2]
  41f556:	lea    esp,[eax-0x5c7a5460]
  41f55c:	xchg   edi,eax
  41f55d:	jns    0x41f5a2
  41f55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f560:	push   es
  41f561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f562:	nop
  41f563:	sbb    bh,0x5a
  41f566:	jg     0x41f59d
  41f568:	pop    ds
  41f569:	ror    BYTE PTR [eax],1
  41f56b:	adc    al,0x59
  41f56d:	lock add eax,0x2dca082e
  41f573:	pop    eax
  41f574:	add    DWORD PTR [edx],edx
  41f576:	push   ecx
  41f577:	xchg   esp,eax
  41f578:	mov    dl,0x83
  41f57a:	inc    ebp
  41f57b:	in     eax,0xef
  41f57d:	mov    WORD PTR [eax-0x39aeffcc],?
  41f583:	pusha  
  41f584:	outs   dx,DWORD PTR ds:[esi]
  41f586:	or     DWORD PTR [edx+0x50],esi
  41f589:	dec    esp
  41f58a:	repz sbb ebp,DWORD PTR [ebp-0x6818c696]
  41f591:	adc    eax,0x1b598616
  41f596:	mov    bh,0x1e
  41f598:	mov    ds:0x6f919fb2,eax
  41f59d:	ins    BYTE PTR es:[edi],dx
  41f59e:	jg     0x41f5a8
  41f5a0:	inc    edi
  41f5a1:	cmp    BYTE PTR [edx-0x12],al
  41f5a4:	jb     0x41f5f4
  41f5a6:	(bad)  
  41f5a7:	mov    ss,WORD PTR [esi+0x4]
  41f5aa:	call   0x73d9:0x48e404c0
  41f5b1:	bound  edx,QWORD PTR [edi+0xf]
  41f5b4:	sar    BYTE PTR [ecx-0x3d],cl
  41f5b7:	push   es
  41f5b8:	mov    ah,0xc9
  41f5ba:	(bad)  
  41f5bc:	sbb    al,0x0
  41f5be:	rol    BYTE PTR [ebx-0x7a],0x8c
  41f5c2:	xchg   BYTE PTR [edx-0x23],bl
  41f5c5:	in     eax,dx
  41f5c6:	xchg   ecx,eax
  41f5c7:	ss cwde 
  41f5c9:	sbb    DWORD PTR [ecx],ebx
  41f5cb:	push   ebx
  41f5cc:	jl     0x41f592
  41f5ce:	cmc    
  41f5cf:	cmp    DWORD PTR [edx+0x3887d534],esi
  41f5d5:	fisttp DWORD PTR [ecx-0x423541f1]
  41f5db:	test   DWORD PTR [ebp+0x2e],0x17004cc3
  41f5e2:	rcr    DWORD PTR [edx-0x551602e],1
  41f5e8:	lods   al,BYTE PTR ds:[esi]
  41f5e9:	push   edi
  41f5ea:	lock push esp
  41f5ec:	pop    ss
  41f5ed:	(bad)  
  41f5ee:	sti    
  41f5ef:	icebp  
  41f5f0:	test   eax,0xeb3b2d1e
  41f5f5:	std    
  41f5f6:	dec    edx
  41f5f7:	or     BYTE PTR [edx-0x5759dff4],dl
  41f5fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f5fe:	add    bl,0x9e
  41f601:	in     al,dx
  41f602:	std    
  41f603:	xor    esp,ecx
  41f605:	add    DWORD PTR [edi],esi
  41f607:	ret    
  41f608:	imul   eax,ecx,0xa47012f9
  41f60e:	xchg   edi,eax
  41f60f:	ficom  DWORD PTR [edi+ecx*1+0x34af7d27]
  41f616:	push   eax
  41f617:	jo     0x41f649
  41f619:	push   cs
  41f61a:	stos   BYTE PTR es:[edi],al
  41f61b:	xlat   BYTE PTR ds:[ebx]
  41f61c:	daa    
  41f61d:	rol    BYTE PTR [ecx-0xe],0x21
  41f621:	sahf   
  41f622:	arpl   WORD PTR [ecx+0x5b],di
  41f625:	dec    DWORD PTR [eax]
  41f627:	sbb    edi,DWORD PTR [ecx]
  41f629:	test   DWORD PTR [ebp+0x2317f189],0x301b4d02
  41f633:	into   
  41f634:	mov    ebp,0x3cdcb07
  41f639:	out    0x62,eax
  41f63b:	and    al,0x65
  41f63d:	dec    esi
  41f63e:	arpl   WORD PTR [eax],sp
  41f640:	sti    
  41f641:	fnstcw WORD PTR [edx-0x5f56512d]
  41f647:	mov    fs,WORD PTR [eax-0x12]
  41f64a:	ins    BYTE PTR es:[edi],dx
  41f64b:	mov    DWORD PTR [esi-0x36],ebp
  41f64e:	stos   BYTE PTR es:[edi],al
  41f64f:	repz and edx,DWORD PTR [esi+0x3dc1c4aa]
  41f656:	inc    esi
  41f657:	jge    0x41f67b
  41f659:	int3   
  41f65a:	inc    ebp
  41f65b:	add    al,0x8b
  41f65d:	or     al,0xc7
  41f65f:	mov    eax,ds:0xe8cc4655
  41f664:	(bad)  
  41f665:	(bad)  
  41f666:	aad    0x2c
  41f668:	ins    DWORD PTR es:[edi],dx
  41f669:	cmp    al,0xd7
  41f66b:	nop    DWORD PTR [ebx+0x3df91c5c]
  41f672:	cmp    eax,0x4876f8a4
  41f677:	repz ja 0x41f674
  41f67a:	out    dx,eax
  41f67b:	out    dx,al
  41f67c:	or     al,0x52
  41f67e:	pop    ss
  41f67f:	stos   DWORD PTR es:[edi],eax
  41f680:	push   ecx
  41f681:	mov    cl,0x40
  41f683:	das    
  41f684:	jb     0x41f6e8
  41f686:	pop    esp
  41f687:	shl    esi,0xf0
  41f68a:	and    BYTE PTR [edx+ebp*4],bl
  41f68d:	dec    eax
  41f68e:	push   cs
  41f68f:	add    al,cl
  41f691:	fcom   st(4)
  41f693:	fwait
  41f694:	dec    ecx
  41f695:	repz cmp edx,eax
  41f698:	aam    0xdc
  41f69a:	loope  0x41f653
  41f69c:	push   edi
  41f69d:	outs   dx,DWORD PTR ds:[esi]
  41f69e:	fcom   QWORD PTR [ebx+0x12]
  41f6a1:	scas   al,BYTE PTR es:[edi]
  41f6a2:	jnp    0x41f631
  41f6a4:	sbb    esi,DWORD PTR [esi+edi*4+0x7f]
  41f6a8:	out    dx,al
  41f6a9:	jns    0x41f62c
  41f6ab:	push   ebp
  41f6ac:	in     al,0xb5
  41f6ae:	test   eax,0x9c1b3f1b
  41f6b3:	pop    es
  41f6b4:	(bad)  
  41f6b5:	xchg   ebx,eax
  41f6b6:	inc    ebx
  41f6b7:	je     0x41f6fa
  41f6b9:	dec    ebx
  41f6ba:	les    ebx,FWORD PTR [eax]
  41f6bc:	inc    ecx
  41f6bd:	jle    0x41f652
  41f6bf:	neg    DWORD PTR [ecx+0x5f]
  41f6c2:	shl    DWORD PTR [esi-0x6],cl
  41f6c5:	push   esi
  41f6c6:	push   0xb5b8a135
  41f6cb:	jae    0x41f72c
  41f6cd:	shr    BYTE PTR [ebp-0x1f],1
  41f6d0:	lahf   
  41f6d1:	jmp    0x41f6bd
  41f6d3:	jp     0x41f751
  41f6d5:	add    al,0x99
  41f6d7:	and    esp,DWORD PTR [edi+edi*4]
  41f6da:	mov    ah,0xbf
  41f6dc:	or     bh,BYTE PTR ds:0x60482d04
  41f6e2:	icebp  
  41f6e3:	mov    dh,0xf5
  41f6e5:	int3   
  41f6e6:	in     al,0x70
  41f6e8:	sub    DWORD PTR [ebx],ebx
  41f6ea:	push   esi
  41f6eb:	xchg   ecx,eax
  41f6ec:	mov    bh,0xe5
  41f6ee:	ficom  WORD PTR ds:0x2248733b
  41f6f4:	fwait
  41f6f5:	push   eax
  41f6f6:	popa   
  41f6f7:	test   al,0x48
  41f6f9:	test   al,0x95
  41f6fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6fc:	and    eax,0x3049e436
  41f701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f702:	je     0x41f6b0
  41f704:	fs jnp 0x41f748
  41f707:	jae    0x41f6c4
  41f709:	mov    DWORD PTR [ebx+0xe16aca7],edx
  41f70f:	or     al,0x54
  41f711:	les    edx,FWORD PTR [edx+0x7b]
  41f714:	add    ebp,DWORD PTR [esi-0x5c96de0]
  41f71a:	cmp    eax,0xb7d517d6
  41f71f:	jno    0x41f767
  41f721:	popf   
  41f722:	shl    BYTE PTR [eax],1
  41f724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f725:	cmp    esi,DWORD PTR [ecx+0x11]
  41f728:	lods   al,BYTE PTR ds:[esi]
  41f729:	xchg   esi,eax
  41f72a:	fisttp DWORD PTR [ecx+0x44d08a39]
  41f730:	divps  xmm1,XMMWORD PTR [ebx+0x6d]
  41f734:	xchg   ecx,eax
  41f735:	iret   
  41f736:	stos   DWORD PTR es:[edi],eax
  41f737:	(bad)  
  41f738:	shl    DWORD PTR [eax],0x19
  41f73b:	adc    al,0xb4
  41f73d:	leave  
  41f73e:	pop    ebx
  41f73f:	or     BYTE PTR [edx+0x1f],dl
  41f742:	mov    esi,0x1a45c84b
  41f747:	int    0xc
  41f749:	icebp  
  41f74a:	nop
  41f74b:	(bad)  
  41f74c:	jp     0x41f73b
  41f74e:	push   edi
  41f74f:	pusha  
  41f750:	cmp    eax,0x2cc1805f
  41f755:	sahf   
  41f756:	push   cs
  41f757:	daa    
  41f758:	out    dx,al
  41f759:	outs   dx,BYTE PTR ds:[esi]
  41f75a:	nop
  41f75b:	enter  0x4987,0x86
  41f75f:	add    al,0x4
  41f761:	jb     0x41f7b7
  41f763:	lock adc DWORD PTR [ecx+0x3c],esi
  41f767:	or     DWORD PTR [ecx],0xbeb08eea
  41f76d:	sub    BYTE PTR [edx+0x7b],ch
  41f770:	scas   eax,DWORD PTR es:[edi]
  41f771:	sbb    al,0xf7
  41f773:	(bad)
  41f776:	dec    ebx
  41f777:	imul   ebp,DWORD PTR [eax-0x55bd1063],0xc200df3c
  41f781:	cdq    
  41f782:	outs   dx,BYTE PTR ds:[esi]
  41f783:	cdq    
  41f784:	adc    bl,0x87
  41f787:	cdq    
  41f788:	sbb    eax,0xbfcbbffb
  41f78d:	adc    eax,0x6a5ca0a1
  41f792:	fs loop 0x41f752
  41f795:	xchg   ecx,eax
  41f796:	dec    ebx
  41f797:	adc    al,0x42
  41f799:	mov    esi,0xdaf6baca
  41f79e:	sbb    bl,BYTE PTR [edi]
  41f7a0:	add    eax,0x8590eb3a
  41f7a5:	add    edi,0xffffffe7
  41f7a8:	sar    BYTE PTR [eax-0xe77739d],1
  41f7ae:	or     ah,BYTE PTR [ebx]
  41f7b0:	cmp    eax,0x42b262be
  41f7b5:	xchg   ebp,eax
  41f7b6:	jg     0x41f817
  41f7b8:	jnp    0x41f819
  41f7ba:	dec    esi
  41f7bb:	lea    eax,[edx+eiz*1]
  41f7be:	jne    0x41f80a
  41f7c0:	(bad)  
  41f7c1:	out    0x0,eax
  41f7c3:	fmul   QWORD PTR [eax-0x6]
  41f7c6:	sub    ebx,DWORD PTR [ecx+0x4c]
  41f7c9:	mov    edi,0xa3ac10ae
  41f7ce:	xchg   ebx,eax
  41f7cf:	add    ecx,DWORD PTR [eax+0x23bed35d]
  41f7d5:	sbb    eax,0xebffbded
  41f7da:	adc    cl,BYTE PTR [edi+0x185cf4e6]
  41f7e0:	clc    
  41f7e1:	jge    0x41f7fe
  41f7e3:	and    ebp,eax
  41f7e5:	jmp    0x9ecf9bad
  41f7ea:	inc    esi
  41f7eb:	aaa    
  41f7ec:	sbb    eax,0xfbe5d08b
  41f7f1:	push   0x2d683d1d
  41f7f6:	mov    ds:0x5b03b0e3,al
  41f7fb:	aas    
  41f7fc:	stc    
  41f7fd:	lds    ebx,FWORD PTR [ecx]
  41f7ff:	aam    0xd
  41f801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f802:	arpl   WORD PTR [eax],bp
  41f804:	nop
  41f805:	mov    ebx,0xddf5118e
  41f80a:	fnsave [ebx]
  41f80c:	(bad)
  41f80f:	and    BYTE PTR [edi],bl
  41f811:	push   0xc6c5c59f
  41f816:	inc    ebx
  41f817:	stos   DWORD PTR es:[edi],eax
  41f818:	jecxz  0x41f813
  41f81a:	xchg   esi,eax
  41f81b:	add    edi,DWORD PTR [ebp-0x59]
  41f81e:	int    0x20
  41f820:	and    ecx,DWORD PTR [edx-0x41]
  41f823:	fsub   DWORD PTR [ecx]
  41f825:	or     esi,esp
  41f827:	xor    esp,DWORD PTR [esi+0x6f88bcfe]
  41f82d:	jns    0x41f87d
  41f82f:	data16 jecxz 0x41f8ab
  41f832:	je     0x41f865
  41f834:	and    bh,BYTE PTR [edi-0x11]
  41f837:	xor    al,0x8e
  41f839:	arpl   WORD PTR [ecx],si
  41f83b:	xchg   edx,eax
  41f83c:	mov    eax,0x4ebe1b51
  41f841:	(bad)  
  41f842:	div    BYTE PTR [esi-0x36]
  41f845:	iret   
  41f846:	pop    es
  41f847:	lahf   
  41f848:	jmp    0x41f820
  41f84a:	dec    esp
  41f84b:	daa    
  41f84c:	cmp    BYTE PTR [eax+0x53a0834e],cl
  41f852:	cwde   
  41f853:	shl    DWORD PTR [ecx],0xf3
  41f856:	mov    dh,0x53
  41f858:	mov    edi,0x5c44cc8e
  41f85d:	cmp    eax,0xcbc62a83
  41f862:	mov    dh,0xdc
  41f864:	jno    0x41f80a
  41f866:	rol    esi,0x44
  41f869:	sub    al,dl
  41f86b:	or     BYTE PTR [esi],0x1b
  41f86e:	std    
  41f86f:	jge    0x41f86b
  41f871:	inc    edi
  41f872:	xchg   ebx,eax
  41f873:	mov    WORD PTR [esi],ds
  41f875:	cmp    al,0x9
  41f877:	loope  0x41f8f5
  41f879:	or     ah,BYTE PTR [ecx-0x2f8c085c]
  41f87f:	in     al,0xac
  41f881:	mov    ch,0x47
  41f883:	dec    edx
  41f884:	dec    ecx
  41f885:	call   0xff6f:0xb0314c58
  41f88c:	cmp    al,0x7b
  41f88e:	jl     0x41f8e8
  41f890:	ret    
  41f891:	adc    eax,0xe21198
  41f896:	daa    
  41f897:	iret   
  41f898:	sbb    dh,ch
  41f89a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f89c:	adc    bh,cl
  41f89e:	jmp    0x345e:0x2b08b9a3
  41f8a5:	stos   BYTE PTR es:[edi],al
  41f8a6:	leave  
  41f8a7:	cmp    esi,ebp
  41f8a9:	adc    eax,0xcc262c5a
  41f8ae:	lods   al,BYTE PTR ds:[esi]
  41f8af:	mov    al,BYTE PTR [edx]
  41f8b1:	mov    edi,0x6e42a53
  41f8b6:	jmp    0x52e0ff27
  41f8bb:	(bad)  [eax]
  41f8bd:	cmp    al,0x74
  41f8bf:	or     ecx,edx
  41f8c1:	sub    ah,cl
  41f8c3:	popa   
  41f8c4:	cld    
  41f8c5:	xor    DWORD PTR [edx],esp
  41f8c7:	ins    BYTE PTR es:[edi],dx
  41f8c8:	xor    BYTE PTR [edx],dl
  41f8ca:	(bad)  
  41f8cb:	das    
  41f8cc:	(bad)  
  41f8ce:	call   0xac33dfeb
  41f8d3:	lahf   
  41f8d4:	push   esi
  41f8d5:	frstor [ebx-0x306c8245]
  41f8db:	loop   0x41f8ec
  41f8dd:	out    dx,eax
  41f8de:	out    dx,al
  41f8df:	out    dx,al
  41f8e0:	xchg   edi,eax
  41f8e1:	mov    ch,0xd7
  41f8e3:	js     0x41f8fe
  41f8e5:	mov    edx,0x38e67a1a
  41f8ea:	and    esi,ebx
  41f8ec:	aas    
  41f8ed:	arpl   WORD PTR ds:0x6f4a0183,ax
  41f8f3:	out    dx,eax
  41f8f4:	inc    edx
  41f8f5:	cmp    al,0x51
  41f8f7:	and    DWORD PTR ds:0x5474423b,edx
  41f8fd:	adc    BYTE PTR [eax+edx*8+0x328a9da8],bh
  41f904:	cli    
  41f905:	mov    fs,WORD PTR [edi+0x58cd3a55]
  41f90b:	mov    eax,0x9d5bf9c5
  41f910:	push   ss
  41f911:	dec    edx
  41f912:	nop
  41f913:	into   
  41f914:	cs mov edi,0xab6f68cb
  41f91a:	lahf   
  41f91b:	test   DWORD PTR [esi+0x12],0x5c2c51e2
  41f922:	data16 add al,0x25
  41f925:	mov    ch,0xa3
  41f927:	xor    DWORD PTR [edi-0x52],ebp
  41f92a:	jmp    0x41f996
  41f92c:	mov    ds:0xc9a4c9b5,al
  41f931:	inc    esi
  41f932:	add    eax,0xbe2a4dab
  41f937:	cmc    
  41f938:	inc    esp
  41f939:	jle    0x41f95d
  41f93b:	popf   
  41f93c:	int    0xcc
  41f93e:	adc    al,0xf0
  41f940:	mov    WORD PTR [ecx],ss
  41f942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f943:	inc    edx
  41f944:	je     0x41f8ea
  41f946:	ret    
  41f947:	jecxz  0x41f986
  41f949:	in     al,0x68
  41f94b:	repz inc esp
  41f94d:	in     eax,dx
  41f94e:	div    DWORD PTR [ecx+0x6a23a777]
  41f954:	fisttp QWORD PTR ds:0x494981a7
  41f95a:	xchg   BYTE PTR [esi+0x38],ah
  41f95d:	popf   
  41f95e:	cmc    
  41f95f:	and    BYTE PTR [esi-0x3f],dh
  41f962:	push   0x43
  41f964:	in     al,0xd2
  41f966:	movsx  esp,BYTE PTR [esi+0x5c]
  41f96a:	rol    BYTE PTR [ebx],cl
  41f96c:	add    BYTE PTR [edi+eiz*4-0x76],al
  41f970:	mov    ?,ebp
  41f972:	js     0x41f9a5
  41f974:	inc    ebx
  41f975:	sti    
  41f976:	ja     0x41f949
  41f978:	push   esi
  41f979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f97a:	add    DWORD PTR [edi],edx
  41f97c:	cmp    eax,0xc18f9263
  41f981:	inc    ebx
  41f982:	cmp    ebx,ecx
  41f984:	xor    dh,BYTE PTR [edi+0xb]
  41f987:	pop    edx
  41f988:	push   eax
  41f989:	in     eax,0xf8
  41f98b:	loopne 0x41f92d
  41f98d:	xchg   edi,eax
  41f98e:	aas    
  41f98f:	ins    DWORD PTR es:[edi],dx
  41f990:	xchg   ecx,eax
  41f991:	(bad)  
  41f992:	scas   al,BYTE PTR es:[edi]
  41f993:	xchg   esp,eax
  41f994:	add    cl,BYTE PTR [esp+edi*1+0x44]
  41f998:	mov    si,0x1425
  41f99c:	gs mov edi,esi
  41f99f:	sbb    BYTE PTR [edi+0x70658386],0x80
  41f9a6:	test   al,0x2a
  41f9a8:	ins    DWORD PTR es:[edi],dx
  41f9a9:	into   
  41f9aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9ab:	push   0xb6c75a25
  41f9b0:	je     0x41f988
  41f9b2:	and    al,0xab
  41f9b4:	pop    edi
  41f9b5:	ret    0xe6e1
  41f9b8:	sub    eax,0x61f450c3
  41f9bd:	inc    eax
  41f9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9bf:	mov    ecx,0x6c9e2ae7
  41f9c4:	mov    esi,DWORD PTR [eax]
  41f9c6:	fwait
  41f9c7:	(bad)  
  41f9ca:	cli    
  41f9cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9cc:	xchg   esi,eax
  41f9cd:	pop    ds
  41f9ce:	jmp    0x41f98e
  41f9d0:	in     al,0xb8
  41f9d2:	outs   dx,DWORD PTR ds:[esi]
  41f9d3:	test   al,0x81
  41f9d5:	sti    
  41f9d6:	mov    edx,0xde730ae5
  41f9db:	pop    ecx
  41f9dc:	test   DWORD PTR [ebx+eiz*1],eax
  41f9df:	and    al,0x8b
  41f9e1:	sub    BYTE PTR ds:0xfb26640,dh
  41f9e7:	pushf  
  41f9e8:	dec    ecx
  41f9e9:	mov    edi,0xa976ebba
  41f9ee:	pop    ss
  41f9ef:	push   ss
  41f9f0:	jae    0x41fa0a
  41f9f2:	fcomp  DWORD PTR [ebp+0x2e]
  41f9f5:	fs pop ss
  41f9f7:	xchg   DWORD PTR [ecx],edi
  41f9f9:	mov    fs,WORD PTR [esi-0x6adf8d40]
  41f9ff:	add    eax,0x37568cbe
  41fa04:	scas   eax,DWORD PTR es:[edi]
  41fa05:	push   0x3b137f9f
  41fa0a:	aaa    
  41fa0b:	shr    dh,1
  41fa0d:	sub    DWORD PTR [edi-0x7b865803],esp
  41fa13:	jno    0x41f9a4
  41fa15:	add    al,0x9
  41fa17:	pop    edi
  41fa18:	or     eax,edx
  41fa1a:	mov    ecx,0x79229c1d
  41fa1f:	loop   0x41fa0a
  41fa21:	or     bl,BYTE PTR [eax-0x23272e48]
  41fa27:	(bad)  
  41fa28:	mov    bh,0x3e
  41fa2a:	jns    0x41fa32
  41fa2c:	call   0x23e3528f
  41fa31:	repz in al,dx
  41fa33:	and    ah,ch
  41fa35:	mov    dh,0xea
  41fa37:	sbb    bh,ch
  41fa39:	inc    esi
  41fa3a:	push   0x57c89ed2
  41fa3f:	pusha  
  41fa40:	shr    DWORD PTR [ecx],1
  41fa42:	cmp    BYTE PTR [eax+0x5b5dc467],0xd6
  41fa49:	mov    bl,0xd
  41fa4b:	and    bl,BYTE PTR [ebx-0x1]
  41fa4e:	add    cl,BYTE PTR [eax]
  41fa50:	(bad)  
  41fa51:	or     al,0xe
  41fa53:	icebp  
  41fa54:	add    al,0xd2
  41fa56:	das    
  41fa57:	adc    BYTE PTR [esi],bh
  41fa59:	mov    esi,0x9616ba73
  41fa5e:	or     al,0x9d
  41fa60:	xchg   DWORD PTR [eax-0x7c3565a5],edi
  41fa66:	pop    edx
  41fa67:	mov    ebp,0x9b7c097
  41fa6c:	mov    ds:0x4bcf31aa,al
  41fa71:	(bad)  
  41fa73:	dec    edi
  41fa74:	sbb    BYTE PTR [eax-0x6e07c1e4],dl
  41fa7a:	bound  ebp,QWORD PTR [ebx+ecx*4+0x1f]
  41fa7e:	out    0x74,al
  41fa80:	ret    
  41fa81:	daa    
  41fa82:	push   ebp
  41fa83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa84:	mov    ss,esi
  41fa86:	push   ecx
  41fa87:	pop    esp
  41fa88:	sar    DWORD PTR [ecx-0x73dad939],cl
  41fa8e:	inc    esp
  41fa8f:	in     al,dx
  41fa90:	and    DWORD PTR [edx],0x48cef4f4
  41fa96:	in     al,0x77
  41fa98:	dec    ecx
  41fa99:	das    
  41fa9a:	adc    dl,0x33
  41fa9d:	(bad)  
  41fa9e:	and    eax,0xd6026834
  41faa3:	push   0x42
  41faa5:	aam    0x65
  41faa7:	pop    esp
  41faa8:	mov    dh,0x2b
  41faaa:	div    BYTE PTR [esp+edx*4+0x54]
  41faae:	push   eax
  41faaf:	jb     0x41fa66
  41fab1:	lahf   
  41fab2:	int3   
  41fab3:	adc    al,0x1f
  41fab5:	cmp    eax,0x13750399
  41faba:	jae    0x41faae
  41fabc:	js     0x41fb17
  41fabe:	fmul   QWORD PTR [edx]
  41fac0:	jmp    0x20c8:0xe6c35241
  41fac7:	hlt    
  41fac8:	push   cs
  41fac9:	dec    ebp
  41faca:	lods   al,BYTE PTR ds:[esi]
  41facb:	shl    DWORD PTR [edi+0x3d56192d],cl
  41fad1:	jl     0x41fa82
  41fad3:	xchg   ebp,eax
  41fad4:	mov    ch,0xc
  41fad6:	adc    bh,cl
  41fad8:	mov    esp,0x1998551b
  41fadd:	fild   QWORD PTR [ebp+0x55f030d8]
  41fae3:	fiadd  DWORD PTR [ecx+0x78]
  41fae6:	lahf   
  41fae7:	or     BYTE PTR [edi],cl
  41fae9:	xor    BYTE PTR [ebx-0x5ce64f58],ch
  41faef:	clc    
  41faf0:	shl    DWORD PTR [edx-0x6f],cl
  41faf3:	mov    eax,0xf188ee44
  41faf8:	mov    dl,0x19
  41fafa:	xchg   ecx,eax
  41fafb:	(bad)  
  41fafc:	out    dx,eax
  41fafd:	clc    
  41fafe:	jg     0x41fb1d
  41fb00:	cmc    
  41fb01:	mov    esp,0xe15141cc
  41fb06:	aaa    
  41fb07:	mov    dl,BYTE PTR [esi-0x6aa5540f]
  41fb0d:	or     al,0xae
  41fb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb10:	cmp    ch,BYTE PTR [esi]
  41fb12:	int3   
  41fb13:	aad    0xbe
  41fb15:	xor    eax,0xc8c344e5
  41fb1a:	sub    bh,BYTE PTR [ecx-0x44b995ee]
  41fb20:	ret    
  41fb21:	jg     0x41faf4
  41fb23:	daa    
  41fb24:	xlat   BYTE PTR ds:[ebx]
  41fb25:	fldenv [ecx]
  41fb27:	xchg   ecx,eax
  41fb28:	xchg   ecx,eax
  41fb29:	xor    edi,DWORD PTR [edx+0x60]
  41fb2c:	inc    esp
  41fb2d:	inc    esi
  41fb2e:	std    
  41fb2f:	xor    DWORD PTR [esi+0x5502f585],edi
  41fb35:	rcl    BYTE PTR [esi],1
  41fb37:	mov    ?,WORD PTR [ebx]
  41fb39:	lock cmp al,0x2b
  41fb3c:	xor    al,0x3e
  41fb3e:	loopne 0x41fb66
  41fb40:	mov    ah,0x2e
  41fb42:	mov    ds:0x54452fc,al
  41fb47:	push   edx
  41fb48:	lods   al,BYTE PTR ds:[esi]
  41fb49:	mov    ebx,0x1d57ab7a
  41fb4e:	pop    esp
  41fb4f:	fst    st(1)
  41fb51:	sub    DWORD PTR [esi+ebx*8],0xa5fb12e8
  41fb58:	cmp    DWORD PTR [edx+0x440a4eb8],0xa057c20e
  41fb62:	aaa    
  41fb63:	popa   
  41fb64:	mov    ?,WORD PTR [eax]
  41fb66:	jp     0x41fbbd
  41fb68:	add    al,0x24
  41fb6a:	shl    BYTE PTR [esi+0x1226cc56],0x72
  41fb71:	int3   
  41fb72:	xchg   edx,eax
  41fb73:	out    0xef,al
  41fb75:	push   esp
  41fb76:	lock fld QWORD PTR [edx]
  41fb79:	out    0x60,al
  41fb7b:	bsr    edx,DWORD PTR [ebx]
  41fb7e:	jne    0x41fb75
  41fb80:	add    al,0x48
  41fb82:	and    bh,dl
  41fb84:	add    DWORD PTR [edx+esi*1+0x6a],esi
  41fb88:	lods   eax,DWORD PTR ds:[esi]
  41fb89:	mov    dl,0xac
  41fb8b:	jle    0x41fb7e
  41fb8d:	or     eax,0x55f95d24
  41fb92:	push   ss
  41fb93:	jne    0x41fb73
  41fb95:	and    bl,BYTE PTR [edx+0x11]
  41fb98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb99:	pop    esp
  41fb9a:	into   
  41fb9b:	jns    0x41fba4
  41fb9d:	push   ds
  41fb9e:	add    DWORD PTR [edx+0x27562f47],ebx
  41fba4:	jns    0x41fb31
  41fba6:	adc    BYTE PTR [ebp-0x3e],al
  41fba9:	pusha  
  41fbaa:	int3   
  41fbab:	ficomp WORD PTR [ebp+ebx*2-0x2b5c696]
  41fbb2:	sbb    DWORD PTR [ecx+0x9f28f71],0x63
  41fbb9:	dec    esi
  41fbba:	mov    ds:0xb6db0fe8,al
  41fbbf:	add    ch,BYTE PTR [eax+0x73]
  41fbc2:	js     0x41fbff
  41fbc4:	pop    eax
  41fbc5:	aaa    
  41fbc6:	dec    esp
  41fbc7:	pop    esp
  41fbc8:	mov    esp,0x148b0a42
  41fbcd:	sub    BYTE PTR [ebx-0x35282cee],bl
  41fbd3:	and    DWORD PTR [esi],ebx
  41fbd5:	cwde   
  41fbd6:	and    DWORD PTR [edi+esi*2+0x1392e387],esp
  41fbdd:	shl    DWORD PTR [edi+esi*4],cl
  41fbe0:	push   es
  41fbe1:	jecxz  0x41fbc6
  41fbe3:	int    0xcb
  41fbe5:	cmp    dh,BYTE PTR ds:0x2a2f0685
  41fbeb:	(bad)  
  41fbec:	ret    0x371f
  41fbef:	adc    edi,DWORD PTR [eax+0x6024cdc8]
  41fbf5:	sbb    bh,BYTE PTR ds:0x3815872b
  41fbfb:	call   0x719d:0x6e364148
  41fc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc03:	or     eax,0x75bd3f16
  41fc08:	mov    ebx,esp
  41fc0a:	lods   al,BYTE PTR ds:[esi]
  41fc0b:	push   esp
  41fc0c:	dec    edx
  41fc0d:	inc    edx
  41fc0e:	jno    0x41fbac
  41fc10:	retf   0x5163
  41fc13:	mov    eax,0xec4bbbbb
  41fc18:	fwait
  41fc19:	xchg   ebx,eax
  41fc1a:	pop    ecx
  41fc1b:	mov    eax,0xd88b9713
  41fc20:	xchg   dl,al
  41fc22:	push   eax
  41fc23:	push   esi
  41fc24:	in     al,0xb0
  41fc26:	fstp   DWORD PTR [ecx-0x55]
  41fc29:	les    eax,FWORD PTR [ecx+0x39]
  41fc2c:	nop
  41fc2d:	pop    DWORD PTR [ebp-0x1589fb13]
  41fc33:	mov    esp,DWORD PTR [esp+ebx*8-0x13]
  41fc37:	in     al,0x51
  41fc39:	and    dh,BYTE PTR [edi-0x41]
  41fc3c:	cmp    eax,0xfa6fc9c6
  41fc41:	pop    eax
  41fc42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc43:	fisub  DWORD PTR [edi-0x3a80b2a7]
  41fc49:	ficom  DWORD PTR [esi-0x1b]
  41fc4c:	jo     0x41fc3e
  41fc4e:	and    bh,BYTE PTR [edi+ebp*4]
  41fc51:	pop    edi
  41fc52:	fadd   st,st(1)
  41fc54:	aas    
  41fc55:	sub    esp,esi
  41fc57:	nop
  41fc58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc59:	aam    0x1e
  41fc5b:	repz inc edi
  41fc5d:	push   0xe32c886f
  41fc62:	(bad)  
  41fc63:	jns    0x41fc9c
  41fc65:	cmp    esi,DWORD PTR [ebp+0x6b]
  41fc68:	in     al,dx
  41fc69:	sub    eax,0x8589aa40
  41fc6e:	adc    cl,0xfe
  41fc71:	inc    eax
  41fc72:	sbb    DWORD PTR [ecx+ebp*4-0x2dc924d3],0xffffff99
  41fc7a:	push   eax
  41fc7b:	leave  
  41fc7c:	das    
  41fc7d:	mov    esp,0xd0d1cac5
  41fc82:	js     0x41fc8a
  41fc84:	popf   
  41fc85:	add    edi,DWORD PTR [eax]
  41fc87:	mov    bl,0x29
  41fc89:	adc    ah,cl
  41fc8b:	jg     0x41fce7
  41fc8d:	stos   DWORD PTR es:[edi],eax
  41fc8e:	push   ebp
  41fc8f:	pop    ebp
  41fc90:	sahf   
  41fc91:	xchg   ebp,eax
  41fc92:	xchg   edx,eax
  41fc93:	sbb    eax,0x12f097b
  41fc98:	mov    bh,0x35
  41fc9a:	sbb    bl,0x10
  41fc9d:	xorps  xmm0,XMMWORD PTR [edx+0x6fe506c4]
  41fca4:	cmp    BYTE PTR [ebx-0x78884cc7],ah
  41fcaa:	fld    TBYTE PTR [esi+edi*2]
  41fcad:	lahf   
  41fcae:	xchg   cl,dh
  41fcb0:	(bad)  
  41fcb1:	js     0x41fcbc
  41fcb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb4:	dec    ecx
  41fcb5:	xchg   cl,cl
  41fcb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcb8:	mov    esi,DWORD PTR [ebp+0x0]
  41fcbb:	push   0xffffffc0
  41fcbd:	loop   0x41fcf3
  41fcbf:	pop    eax
  41fcc0:	ja     0x41fc55
  41fcc2:	sub    DWORD PTR [eax-0x77],ebp
  41fcc5:	adc    al,0xa9
  41fcc7:	pushf  
  41fcc8:	rcr    DWORD PTR [ebp+0x25b03cd4],1
  41fcce:	xchg   ebp,esp
  41fcd0:	or     al,0x5e
  41fcd2:	mul    BYTE PTR [ebp+0x26]
  41fcd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcd6:	ret    0xf1fb
  41fcd9:	addr16 call 0x7fbfb6fe
  41fcdf:	mov    esp,0x4f3419c2
  41fce4:	cmp    al,BYTE PTR [ebx+0x7e]
  41fce7:	xor    al,0x23
  41fce9:	aaa    
  41fcea:	call   0xedb6:0xf034d734
  41fcf1:	loopne 0x41fcaa
  41fcf3:	adc    DWORD PTR [edx+eax*1-0x55be8865],esp
  41fcfa:	cld    
  41fcfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcfc:	push   ebp
  41fcfd:	or     DWORD PTR [ebp-0x7d],edi
  41fd00:	lds    esp,FWORD PTR [esi-0x4691fd7d]
  41fd06:	aaa    
  41fd07:	std    
  41fd08:	add    al,0x52
  41fd0a:	fs inc esp
  41fd0c:	xchg   ebx,eax
  41fd0d:	fbld   TBYTE PTR [ecx]
  41fd0f:	xchg   esi,eax
  41fd10:	fistp  DWORD PTR [ebx+0x5aecce9c]
  41fd16:	aam    0x7e
  41fd18:	neg    eax
  41fd1a:	stc    
  41fd1b:	int    0x89
  41fd1d:	fstp   DWORD PTR [edi-0x78228feb]
  41fd23:	inc    edi
  41fd24:	retf   0x4081
  41fd27:	sbb    al,0xcb
  41fd29:	das    
  41fd2a:	aas    
  41fd2b:	mov    ebx,0x727106f0
  41fd30:	mov    edx,0x9ce4426f
  41fd35:	sti    
  41fd36:	loopne 0x41fcc7
  41fd38:	dec    esp
  41fd39:	jbe    0x41fd80
  41fd3b:	pop    esi
  41fd3c:	jnp    0x41fd97
  41fd3e:	call   0x8ac9c268
  41fd43:	mov    ah,0x56
  41fd45:	fist   WORD PTR [edx+0x4259705c]
  41fd4b:	(bad)  
  41fd4d:	mov    edi,DWORD PTR [edx]
  41fd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd50:	int    0xcb
  41fd52:	aas    
  41fd53:	dec    eax
  41fd54:	es ins BYTE PTR es:[di],dx
  41fd57:	mov    esp,0x7c0f8bf
  41fd5c:	or     al,0x81
  41fd5e:	pop    es
  41fd5f:	sahf   
  41fd60:	fbld   TBYTE PTR [eax+0x76]
  41fd63:	and    ebp,DWORD PTR [eax+0x62]
  41fd66:	mov    cl,0x4e
  41fd68:	mov    ch,BYTE PTR [edx]
  41fd6a:	mov    dh,0x4a
  41fd6c:	dec    ecx
  41fd6d:	sub    DWORD PTR [ecx-0x3f],edi
  41fd70:	scas   eax,DWORD PTR es:[edi]
  41fd71:	jecxz  0x41fd41
  41fd73:	jmp    0xcdeac1ae
  41fd78:	es lahf 
  41fd7a:	gs loope 0x41fd21
  41fd7d:	repz jno 0x41fd32
  41fd80:	lds    ebp,FWORD PTR [esi+eax*4-0x559604f7]
  41fd87:	push   ss
  41fd88:	lds    ebp,FWORD PTR [esi]
  41fd8a:	es je  0x41fdec
  41fd8d:	mov    ch,0x97
  41fd8f:	test   cl,cl
  41fd91:	sar    ch,cl
  41fd93:	jo     0x41fd87
  41fd95:	aas    
  41fd96:	cmc    
  41fd97:	cmp    eax,ebp
  41fd99:	inc    edi
  41fd9a:	test   BYTE PTR [edi-0x47],ch
  41fd9d:	and    esp,ecx
  41fd9f:	jecxz  0x41fda8
  41fda1:	repnz dec esp
  41fda3:	fiadd  DWORD PTR [edi+edi*8]
  41fda6:	inc    edx
  41fda7:	(bad)  
  41fda9:	dec    esp
  41fdaa:	xor    ecx,DWORD PTR [edx]
  41fdac:	mov    bh,0x2e
  41fdae:	pushf  
  41fdaf:	(bad)  
  41fdb0:	in     al,dx
  41fdb1:	retf   0xc5dc
  41fdb4:	out    0x69,al
  41fdb6:	popa   
  41fdb7:	cwde   
  41fdb8:	inc    edi
  41fdb9:	jbe    0x41fe16
  41fdbb:	(bad)  
  41fdbc:	xlat   BYTE PTR ds:[ebx]
  41fdbd:	gs (bad) 
  41fdbf:	mov    bl,0xac
  41fdc1:	xlat   BYTE PTR ds:[ebx]
  41fdc2:	ins    DWORD PTR es:[edi],dx
  41fdc3:	pop    eax
  41fdc4:	ins    DWORD PTR es:[edi],dx
  41fdc5:	cli    
  41fdc6:	jmp    0x40a:0x7154d4bf
  41fdcd:	call   0x8cd1c2d9
  41fdd2:	mov    eax,0xb840b896
  41fdd7:	mov    dl,bh
  41fdd9:	sahf   
  41fdda:	xlat   BYTE PTR ds:[ebx]
  41fddb:	lea    ecx,[edi]
  41fddd:	ret    
  41fdde:	push   0xa463c094
  41fde3:	add    edx,ecx
  41fde5:	mov    dh,0xa4
  41fde7:	test   eax,0x60890aed
  41fdec:	daa    
  41fded:	loope  0x41fe17
  41fdef:	aas    
  41fdf0:	push   0xffffff97
  41fdf2:	das    
  41fdf3:	shl    DWORD PTR [ebx-0x5d],cl
  41fdf6:	cmp    al,0xfb
  41fdf8:	sbb    eax,0x9236438e
  41fdfd:	adc    edx,DWORD PTR [ebx+ebp*8-0x37]
  41fe01:	(bad)
  41fe05:	nop
  41fe06:	cmp    bh,BYTE PTR [edx+0xc2133]
  41fe0c:	call   0x20d7:0x503667b7
  41fe13:	bound  ebx,QWORD PTR [ecx-0x15]
  41fe16:	mov    ebp,0x372e0705
  41fe1b:	or     WORD PTR [ebx+0x17],0x7488
  41fe21:	sub    DWORD PTR [ecx+eax*1+0x1cfc5591],0xbf48c36b
  41fe2c:	sbb    esp,esi
  41fe2e:	arpl   sp,ax
  41fe30:	push   esp
  41fe31:	mov    ebx,0xa63ab135
  41fe36:	inc    DWORD PTR [ecx+0x3d]
  41fe39:	setns  BYTE PTR [ebx]
  41fe3c:	push   ebx
  41fe3d:	and    BYTE PTR [eax+ebp*2],dh
  41fe40:	push   ecx
  41fe41:	aad    0xb0
  41fe43:	jnp    0x41fe4b
  41fe45:	in     al,dx
  41fe46:	(bad)  
  41fe47:	push   0xf808e1af
  41fe4c:	jbe    0x41fe89
  41fe4e:	cld    
  41fe4f:	push   ds
  41fe50:	shl    BYTE PTR [ebx+0x49],cl
  41fe53:	push   eax
  41fe54:	xor    eax,esi
  41fe56:	or     eax,0xbd2ef65e
  41fe5b:	mov    ss,WORD PTR [edi]
  41fe5d:	icebp  
  41fe5e:	aam    0x39
  41fe60:	retf   
  41fe61:	arpl   WORD PTR ds:0xbda8aa93,bp
  41fe67:	add    al,0xaa
  41fe69:	adc    edi,esp
  41fe6b:	js     0x41fece
  41fe6d:	cmp    DWORD PTR cs:[esi],ebx
  41fe70:	mov    esp,0xc7b7e1c0
  41fe75:	shl    edi,0xf4
  41fe78:	dec    ebp
  41fe79:	fwait
  41fe7a:	loopne 0x41fec8
  41fe7c:	fs je  0x41fe13
  41fe7f:	clc    
  41fe80:	xchg   DWORD PTR [edi],ebx
  41fe82:	add    al,cl
  41fe84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe85:	dec    edi
  41fe86:	loop   0x41fe3d
  41fe88:	or     esi,ebp
  41fe8a:	inc    esp
  41fe8b:	pusha  
  41fe8c:	test   eax,0xdbfa592c
  41fe91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe92:	mov    bl,0x75
  41fe94:	push   eax
  41fe95:	fwait
  41fe96:	jae    0x41feba
  41fe98:	xor    BYTE PTR ds:0x5ff1f15f,al
  41fe9e:	not    DWORD PTR [esi+0x56021865]
  41fea4:	xor    BYTE PTR [ecx+0x41],bl
  41fea7:	je     0x41fec7
  41fea9:	into   
  41feaa:	adc    al,BYTE PTR [ebp-0xfe0e42c]
  41feb0:	jnp    0x41fe7e
  41feb2:	in     al,0xd8
  41feb4:	push   ebp
  41feb5:	pop    ss
  41feb6:	test   al,0x79
  41feb8:	jo     0x41fe8e
  41feba:	add    al,0xc6
  41febc:	cmp    esp,DWORD PTR [edi]
  41febe:	xor    eax,0x2494b3f2
  41fec3:	fidivr DWORD PTR [eax-0x1d3ecc8b]
  41fec9:	mov    BYTE PTR [ecx+edi*2],dh
  41fecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fecd:	inc    esi
  41fece:	ja     0x41fefc
  41fed0:	mov    esp,0xe8d91b0c
  41fed5:	sahf   
  41fed6:	mov    ds,WORD PTR [eax]
  41fed8:	jne    0x41ff38
  41feda:	push   es
  41fedb:	int3   
  41fedc:	retf   
  41fedd:	mov    al,ds:0xf1b0f6d9
  41fee2:	daa    
  41fee3:	pop    edx
  41fee4:	cmp    dl,BYTE PTR [edi]
  41fee6:	xchg   ch,dh
  41fee8:	(bad)  
  41fee9:	sbb    ebx,ebx
  41feeb:	push   0x127db3e7
  41fef0:	jb     0x41ff17
  41fef2:	ret    
  41fef3:	pop    esp
  41fef4:	enter  0x54da,0xd8
  41fef8:	fld    DWORD PTR [esi+ebx*8-0x6552c444]
  41feff:	test   DWORD PTR [ebp+0x29bcb931],esi
  41ff05:	call   0x57a2:0xb7535b31
  41ff0c:	xchg   ebx,eax
  41ff0d:	adc    al,0xbe
  41ff0f:	ds int 0x4f
  41ff12:	cmc    
  41ff13:	and    BYTE PTR [edi+0x41],0x73
  41ff17:	fstp   QWORD PTR [ecx+eax*4]
  41ff1a:	adc    eax,0x70939f7f
  41ff1f:	lds    esp,FWORD PTR [eax+0x5d6b5ad4]
  41ff25:	pop    ds
  41ff26:	push   esi
  41ff27:	push   0xffffffa0
  41ff29:	mov    eax,ds:0x48ac77c5
  41ff2e:	sbb    esi,DWORD PTR [ecx]
  41ff30:	fs jecxz 0x41febb
  41ff33:	(bad)  [eax]
  41ff35:	pop    es
  41ff36:	mov    ds:0xadd7b565,eax
  41ff3b:	in     al,0xa7
  41ff3d:	push   0xffffffd0
  41ff3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff40:	sub    bl,BYTE PTR [ecx-0x5fe5c6dd]
  41ff46:	add    ebp,DWORD PTR [ecx-0x41]
  41ff49:	out    dx,eax
  41ff4a:	sub    BYTE PTR [esi-0x7f7557cb],al
  41ff50:	aas    
  41ff51:	adc    ebp,DWORD PTR [esi+0x6d6b816a]
  41ff57:	outs   dx,DWORD PTR ds:[esi]
  41ff58:	mov    edx,DWORD PTR [edx+0x181a92ee]
  41ff5e:	sbb    DWORD PTR [ebx-0x6a],ebp
  41ff61:	and    dl,BYTE PTR [edi]
  41ff63:	pop    edi
  41ff64:	imul   eax,DWORD PTR [eax],0xffffffe8
  41ff67:	or     al,0x6c
  41ff69:	xor    esi,DWORD PTR [esi+0x30f7c753]
  41ff6f:	shl    BYTE PTR ds:0x12c7b9e9,cl
  41ff75:	call   FWORD PTR [ebx]
  41ff77:	fs xchg esp,eax
  41ff79:	ret    
  41ff7a:	aaa    
  41ff7b:	int    0xf4
  41ff7d:	xchg   ebp,eax
  41ff7e:	leave  
  41ff7f:	ss sbb dl,dh
  41ff82:	adc    BYTE PTR [esi+0x4e],al
  41ff85:	mov    ebp,0x5127282c
  41ff8a:	stos   BYTE PTR es:[edi],al
  41ff8b:	sub    ebx,DWORD PTR [eax-0x3eb9b233]
  41ff91:	adc    al,0xef
  41ff93:	popf   
  41ff94:	ficomp WORD PTR [esi-0x282e7cde]
  41ff9a:	adc    al,0xb2
  41ff9c:	pop    ecx
  41ff9d:	aaa    
  41ff9e:	(bad)  
  41ff9f:	scas   eax,DWORD PTR es:[edi]
  41ffa0:	sbb    bh,bh
  41ffa2:	pop    es
  41ffa3:	cdq    
  41ffa4:	clc    
  41ffa5:	push   ebp
  41ffa6:	mov    BYTE PTR [ebp-0x10],dl
  41ffa9:	outs   dx,BYTE PTR ds:[esi]
  41ffaa:	and    esp,ebx
  41ffac:	mov    WORD PTR ds:0x9d6efac3,fs
  41ffb2:	adc    edx,eax
  41ffb4:	cli    
  41ffb5:	mov    ch,0xd8
  41ffb7:	jno    0x41ffa2
  41ffb9:	fucom  st(4)
  41ffbb:	shl    DWORD PTR [edi+0x58],0xc7
  41ffbf:	scas   eax,DWORD PTR es:[edi]
  41ffc0:	lock mov ds,WORD PTR [ebx-0x327620ef]
  41ffc7:	dec    ecx
  41ffc8:	jp     0x41ff75
  41ffca:	fimul  DWORD PTR [eax+0x19e28775]
  41ffd0:	cmp    bh,BYTE PTR [esi-0x245cbce7]
  41ffd6:	in     eax,0xf2
  41ffd8:	xchg   ebp,eax
  41ffd9:	pop    edx
  41ffda:	cdq    
  41ffdb:	lods   al,BYTE PTR ds:[esi]
  41ffdc:	scas   al,BYTE PTR es:[edi]
  41ffdd:	adc    DWORD PTR [ecx-0x1b17956f],0xffffff8b
  41ffe4:	std    
  41ffe5:	xor    ecx,DWORD PTR [ebx+ecx*2]
  41ffe8:	fld    TBYTE PTR [ebx+0x50]
  41ffeb:	jl     0x41ff98
  41ffed:	enter  0x8628,0xc2
  41fff1:	jnp    0x41ffb2
  41fff3:	addr16 adc dl,cl
  41fff6:	fs adc al,0xad
  41fff9:	xchg   esi,eax
  41fffa:	sub    edx,DWORD PTR [ebx+edx*1]
  41fffd:	xor    eax,0xf5f8555c
  420002:	fdivr  st(2),st
  420004:	mov    bl,0x9f
  420006:	lods   al,BYTE PTR ds:[esi]
  420007:	and    cl,dh
  420009:	add    eax,0xce51c7f6
  42000e:	arpl   WORD PTR [ecx-0x6f7af6b4],dx
  420014:	ret    
  420015:	push   ebp
  420016:	add    al,0x2f
  420018:	test   dl,bl
  42001a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42001b:	sbb    BYTE PTR [edx-0x1],dh
  42001e:	in     al,dx
  42001f:	and    dl,BYTE PTR [edi-0x5d91b2b5]
  420025:	jmp    0x42002c
  420027:	in     eax,0xc2
  420029:	pop    edx
  42002a:	fucomip st,st(3)
  42002c:	adc    BYTE PTR ds:0xd4609115,ah
  420032:	out    dx,al
  420033:	in     eax,dx
  420034:	stc    
  420035:	pop    ebx
  420036:	or     al,0x74
  420038:	sbb    DWORD PTR [esi+0x5e],eax
  42003b:	adc    eax,0x3436f030
  420040:	push   ecx
  420041:	leave  
  420042:	add    DWORD PTR [edi],ecx
  420044:	fs pop ebp
  420046:	popf   
  420047:	mov    al,0xc3
  420049:	sar    DWORD PTR [eax+0x3e],cl
  42004c:	push   ecx
  42004d:	and    al,0x31
  42004f:	push   ebp
  420050:	dec    esp
  420051:	dec    esp
  420052:	pop    edx
  420053:	(bad)  
  420054:	div    DWORD PTR [eax-0x7a40a09b]
  42005a:	xor    cl,bh
  42005c:	pop    eax
  42005d:	xchg   ebp,eax
  42005e:	or     dh,dh
  420060:	gs push es
  420062:	lods   eax,DWORD PTR ds:[esi]
  420063:	(bad)  [edx]
  420065:	xchg   ax,ax
  420067:	push   es
  420068:	cmc    
  420069:	outs   dx,BYTE PTR ds:[esi]
  42006a:	jbe    0x420099
  42006c:	rol    BYTE PTR [edi+eax*1],0xb8
  420070:	sbb    BYTE PTR [ebp+eax*8-0x394a4b27],ch
  420077:	(bad)  
  420078:	or     BYTE PTR [ebp+0x5d],bl
  42007b:	jnp    0x4200f0
  42007d:	scas   eax,DWORD PTR es:[edi]
  42007e:	shl    BYTE PTR [esi],cl
  420080:	inc    esi
  420081:	fstp   st(2)
  420083:	pop    ecx
  420084:	dec    esi
  420085:	inc    edx
  420086:	not    BYTE PTR [esi-0x36f56c33]
  42008c:	gs push esi
  42008e:	adc    edi,ebx
  420090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420091:	sbb    ah,BYTE PTR [ebp+0x5f]
  420094:	call   0xa2f6:0x306e10da
  42009b:	test   DWORD PTR [edi+0x60c703dd],edi
  4200a1:	(bad)  
  4200a2:	fwait
  4200a3:	xor    BYTE PTR [esi],dh
  4200a5:	repnz dec ecx
  4200a7:	(bad)  
  4200a9:	ret    
  4200aa:	rol    BYTE PTR [eax+0x31965468],0x94
  4200b1:	inc    ebx
  4200b2:	mov    eax,0xdab789a
  4200b7:	std    
  4200b8:	leave  
  4200b9:	lock es test eax,0xa1c07dff
  4200c0:	dec    esi
  4200c1:	push   0x5
  4200c3:	sub    BYTE PTR [ecx-0x298c03bc],bh
  4200c9:	popf   
  4200ca:	adc    DWORD PTR [ebp+0x61a3516d],esp
  4200d0:	mov    esi,0x8386c85
  4200d5:	xor    DWORD PTR [ebx-0x49a989ca],edi
  4200db:	fnsave [ebx+0x3d]
  4200de:	xor    DWORD PTR [edi+0x70],esp
  4200e1:	daa    
  4200e2:	jmp    0x42014f
  4200e4:	(bad)  [ebp-0x554ecfbc]
  4200ea:	sbb    bl,BYTE PTR [eax+0x66]
  4200ed:	(bad)  
  4200ee:	lahf   
  4200ef:	icebp  
  4200f0:	jp     0x4200f3
  4200f2:	mov    ah,0x16
  4200f4:	mov    dl,BYTE PTR [ebp+0x5]
  4200f7:	aaa    
  4200f8:	mov    al,ds:0xa6ed79
  4200fd:	sahf   
  4200fe:	xchg   BYTE PTR [edx],ch
  420100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420101:	sti    
  420102:	dec    ebx
  420103:	leave  
  420104:	mov    ds:0x1b600a06,eax
  420109:	xchg   esp,eax
  42010a:	pop    ebx
  42010b:	dec    eax
  42010c:	xchg   ebp,edx
  42010e:	mov    ds:0x72af6765,eax
  420113:	sbb    ah,bh
  420115:	push   0xb79f4b77
  42011a:	ins    BYTE PTR es:[edi],dx
  42011b:	push   es
  42011c:	into   
  42011d:	(bad)  
  42011e:	cmc    
  42011f:	sub    al,0xba
  420121:	push   0x4949ae4a
  420126:	add    edi,DWORD PTR [ebx-0x22df61e1]
  42012c:	frstor [ebx]
  42012e:	inc    esi
  42012f:	mov    bh,0x4f
  420131:	outs   dx,DWORD PTR ds:[esi]
  420132:	xlat   BYTE PTR ds:[ebx]
  420133:	retf   0xbf39
  420136:	adc    al,0x7a
  420138:	or     ebx,DWORD PTR [ebp+ebx*8+0xe]
  42013c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42013d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42013e:	fimul  WORD PTR [edi-0x3]
  420141:	cwde   
  420142:	je     0x4200ff
  420144:	leave  
  420145:	jno    0x420195
  420147:	mov    cl,0xb5
  420149:	mov    ebx,DWORD PTR [ecx]
  42014b:	and    dl,BYTE PTR [esi-0x281cba2]
  420151:	inc    esp
  420152:	int    0x8
  420154:	mov    ds:0x9747ceb0,al
  420159:	mov    ds:0xeadff45f,al
  42015e:	fcom   st(6)
  420160:	loop   0x420140
  420162:	lea    eax,[eax+0x56]
  420165:	mov    eax,ds:0xf2f11176
  42016a:	and    ah,ch
  42016c:	outs   dx,BYTE PTR ds:[esi]
  42016d:	cld    
  42016e:	pop    edx
  42016f:	mov    ebp,0x4e524983
  420174:	jae    0x420131
  420176:	int    0xee
  420178:	int    0xd
  42017a:	mov    DWORD PTR [ebp-0x42],ebp
  42017d:	aam    0x7b
  42017f:	fnsave [ebx-0x2f]
  420182:	mov    bh,0x9d
  420184:	sub    eax,0x27d62e3b
  420189:	test   BYTE PTR [edx],bh
  42018b:	inc    edi
  42018c:	add    dh,BYTE PTR [eax+0x1d100be]
  420192:	jnp    0x42012f
  420194:	(bad)  
  420195:	mov    ch,0x70
  420197:	imul   ecx,DWORD PTR [esi+0x559bc638],0x2352a340
  4201a1:	pop    edx
  4201a2:	xor    DWORD PTR [eax],ecx
  4201a4:	test   eax,0x1f7ae258
  4201a9:	iret   
  4201aa:	adc    eax,0x89f997a2
  4201af:	sub    al,0x67
  4201b1:	sbb    al,0xfb
  4201b3:	and    DWORD PTR [edx+0x6e3c22a7],ebp
  4201b9:	dec    edi
  4201ba:	mov    BYTE PTR [edx],bl
  4201bc:	cli    
  4201bd:	pop    es
  4201be:	xor    al,0xea
  4201c0:	imul   ebx,DWORD PTR [edi-0x77],0x114901c0
  4201c7:	aam    0x27
  4201c9:	fs mov bh,0xe8
  4201cc:	test   BYTE PTR [esi+eiz*4],ch
  4201cf:	test   ebp,ecx
  4201d1:	add    al,0x6
  4201d3:	retf   0x75f3
  4201d6:	jne    0x42024a
  4201d8:	jb     0x420258
  4201da:	cwde   
  4201db:	and    DWORD PTR [esi+0x39c6732e],edi
  4201e1:	xor    DWORD PTR [ebx-0x30b4ef0b],ecx
  4201e7:	cmp    BYTE PTR [edi],al
  4201e9:	call   0xaefa7a7c
  4201ee:	pop    ecx
  4201ef:	aam    0x19
  4201f1:	mov    esi,0x5768f909
  4201f6:	adc    esp,esp
  4201f8:	cmp    ebp,ecx
  4201fa:	in     eax,dx
  4201fb:	jb     0x420181
  4201fd:	or     eax,0xf6811446
  420202:	jecxz  0x42025d
  420204:	push   ss
  420205:	(bad)  
  420206:	push   ds
  420207:	xchg   ebp,eax
  420208:	ret    0xf979
  42020b:	dec    ebp
  42020c:	repz (bad) 
  42020e:	sbb    al,0x8
  420210:	pop    ecx
  420211:	inc    ecx
  420212:	rcl    DWORD PTR [edi+0x25],1
  420215:	mov    ds:0x5ac81de9,al
  42021a:	shr    BYTE PTR [edi],0x7e
  42021d:	ja     0x4201aa
  42021f:	nop
  420220:	rcr    BYTE PTR [ecx+0x71bfbc3d],1
  420226:	ror    DWORD PTR [ebx+0x5991cae4],0x60
  42022d:	lea    ebp,[eax-0x44efd52f]
  420233:	lock (bad) 
  420236:	or     eax,0x56b376c
  42023b:	inc    esi
  42023c:	je     0x420280
  42023e:	leave  
  42023f:	xlat   BYTE PTR ds:[ebx]
  420240:	adc    ah,BYTE PTR [ebx+eax*4+0x2b]
  420244:	jb     0x4201e8
  420246:	push   eax
  420247:	gs retf 0x2b14
  42024b:	add    al,0xc3
  42024d:	pop    ecx
  42024e:	gs mov ch,0xc7
  420251:	push   0x6d8a25bd
  420256:	fld    DWORD PTR [eax-0x6ab29fe1]
  42025c:	mov    dh,0x7
  42025e:	and    ebx,esi
  420260:	jg     0x420219
  420262:	mov    ah,0x38
  420264:	xor    BYTE PTR [esi-0x31],bh
  420267:	jo     0x420200
  420269:	lods   eax,DWORD PTR ds:[esi]
  42026a:	aad    0xd
  42026c:	mov    cl,0x62
  42026e:	cwde   
  42026f:	loop   0x420237
  420271:	outs   dx,DWORD PTR ds:[esi]
  420272:	pop    esp
  420273:	inc    ebx
  420274:	fbstp  TBYTE PTR cs:[edx+0x29]
  420278:	inc    ebx
  420279:	jmp    0x42020c
  42027b:	retf   
  42027c:	popf   
  42027d:	ins    BYTE PTR es:[edi],dx
  42027e:	mov    bh,0xf8
  420280:	ret    0x681
  420283:	pushf  
  420284:	inc    sp
  420286:	jmp    0xad77:0x447c74be
  42028d:	jl     0x4202b7
  42028f:	xor    DWORD PTR [ecx],esi
  420291:	lahf   
  420292:	scas   al,BYTE PTR es:[edi]
  420293:	jmp    FWORD PTR [edx]
  420295:	ins    DWORD PTR es:[edi],dx
  420296:	repnz and BYTE PTR [esi-0x6c],ah
  42029a:	cs fcmovbe st,st(4)
  42029d:	popf   
  42029e:	lods   eax,DWORD PTR ds:[esi]
  42029f:	pop    ds
  4202a0:	inc    edx
  4202a1:	add    DWORD PTR [edx-0x414efed7],esi
  4202a7:	dec    ebx
  4202a9:	out    0x4d,al
  4202ab:	sbb    eax,0x1b427ca
  4202b0:	clc    
  4202b1:	dec    ecx
  4202b2:	jae    0x4202b3
  4202b4:	inc    edx
  4202b5:	lea    edx,cs:[ecx]
  4202b8:	jo     0x420278
  4202ba:	and    dl,BYTE PTR [edi]
  4202bc:	pop    es
  4202bd:	(bad)  
  4202be:	sahf   
  4202bf:	xchg   edi,eax
  4202c0:	dec    ecx
  4202c1:	je     0x4202d7
  4202c3:	loop   0x42033d
  4202c5:	jmp    0x4202f9
  4202c7:	pusha  
  4202c8:	xchg   DWORD PTR [eax],edx
  4202ca:	adc    esi,esp
  4202cc:	jmp    0xc03e:0x22ac8fbc
  4202d3:	test   BYTE PTR [esi],0x3
  4202d6:	nop
  4202d7:	pop    esi
  4202d8:	ret    
  4202d9:	inc    edx
  4202da:	pop    ecx
  4202db:	das    
  4202dc:	adc    ah,BYTE PTR [edi-0x25]
  4202df:	ds adc al,0x81
  4202e2:	xchg   DWORD PTR [ebp-0x5ac1b191],ebx
  4202e8:	dec    esi
  4202e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202ea:	clc    
  4202eb:	xor    al,0x9d
  4202ed:	fiadd  DWORD PTR [edi]
  4202ef:	dec    ecx
  4202f0:	cmp    DWORD PTR [ecx+0x62e5c05f],eax
  4202f6:	mov    DWORD PTR [ecx-0x28248cb7],ebp
  4202fc:	mov    cl,0x2a
  4202fe:	sbb    BYTE PTR [ebx+eax*4-0x6],bh
  420302:	mov    es,WORD PTR [edx+0x49]
  420305:	push   DWORD PTR [edi+0x478caaf0]
  42030b:	mov    cl,0xb6
  42030d:	jl     0x420362
  42030f:	push   0x367b52b1
  420314:	sub    BYTE PTR [edi],al
  420316:	add    BYTE PTR [edi],ch
  420318:	test   al,0x22
  42031a:	test   al,0x95
  42031c:	std    
  42031d:	dec    esi
  42031e:	ja     0x4202c4
  420320:	push   ecx
  420321:	pop    edi
  420322:	inc    edi
  420323:	adc    BYTE PTR ds:0xb0e0ce2f,cl
  420329:	in     eax,0x69
  42032b:	ds stos DWORD PTR es:[edi],eax
  42032d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42032e:	dec    ecx
  42032f:	popf   
  420330:	ftst   
  420332:	dec    edi
  420333:	jmp    0x420328
  420335:	addr16 js 0x42035f
  420338:	lds    edx,FWORD PTR [ebx-0x60]
  42033b:	xchg   edi,eax
  42033c:	dec    esi
  42033d:	les    edx,FWORD PTR [ebx]
  42033f:	in     eax,0x6b
  420341:	sbb    eax,0xdd79f4bd
  420346:	and    al,0x94
  420348:	xchg   DWORD PTR [eax-0x2abf7d40],esp
  42034e:	in     al,0xf8
  420350:	aas    
  420351:	mov    DWORD PTR [ebp+0x6c],ebx
  420354:	dec    edi
  420355:	inc    esp
  420356:	repnz div BYTE PTR [ebx+0x7d]
  42035a:	aas    
  42035b:	adc    bh,cl
  42035d:	sub    DWORD PTR ds:0xb90122a3,ebp
  420363:	xor    BYTE PTR [esi-0x7f],0x16
  420367:	int    0xa2
  420369:	jge    0x4203cd
  42036b:	aam    0x0
  42036d:	and    eax,0xcadf1892
  420372:	pop    ds
  420373:	ins    DWORD PTR es:[edi],dx
  420374:	test   ebx,0xa90935d
  42037a:	jnp    0x420333
  42037c:	pop    ebx
  42037d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42037e:	inc    BYTE PTR [eax-0x7e]
  420381:	repz mov ecx,0x3081e2e3
  420387:	pop    ss
  420388:	rcr    DWORD PTR ds:0xcd87ce3b,1
  42038e:	adc    dl,bl
  420390:	jecxz  0x42034d
  420392:	out    0x40,eax
  420394:	iret   
  420395:	int3   
  420396:	dec    edi
  420397:	xchg   ebx,eax
  420398:	dec    ebp
  420399:	or     BYTE PTR [esi],dh
  42039b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42039c:	sub    al,0x69
  42039e:	sbb    ah,bl
  4203a0:	mov    al,0x28
  4203a2:	adc    ecx,0x1d87ec64
  4203a8:	sar    edx,1
  4203aa:	sub    DWORD PTR [ebx-0x3f5515a6],ebx
  4203b0:	dec    ecx
  4203b1:	pop    ebx
  4203b2:	mov    esi,0x84cc560d
  4203b7:	enter  0xbe5e,0xd3
  4203bb:	mov    bh,BYTE PTR [ebx]
  4203bd:	stgi   
  4203c0:	xchg   esp,eax
  4203c1:	sbb    ebp,DWORD PTR [ecx+0x66ab28c0]
  4203c7:	jb     0x4203d8
  4203c9:	cdq    
  4203ca:	xor    dh,cl
  4203cc:	xor    DWORD PTR [eax+ebx*2+0x3],ebp
  4203d0:	jecxz  0x42036b
  4203d2:	cmc    
  4203d3:	loopne 0x420388
  4203d5:	repz cmp BYTE PTR [ecx],ah
  4203d8:	xchg   esp,eax
  4203d9:	cmp    ebp,esp
  4203db:	or     al,0x36
  4203dd:	ret    0xe0d5
  4203e0:	jns    0x420445
  4203e2:	cmc    
  4203e3:	lahf   
  4203e4:	inc    esi
  4203e5:	cmp    DWORD PTR [esi+0x4d],eax
  4203e8:	sar    BYTE PTR [ebx+ebx*8-0x725e8f85],0x59
  4203f0:	in     al,dx
  4203f1:	out    0x70,eax
  4203f3:	rcr    esi,cl
  4203f5:	popf   
  4203f6:	cmp    dh,ah
  4203f8:	leave  
  4203f9:	or     eax,0xc0372136
  4203fe:	lock lea edi,[esi+edi*1+0x1e984987]
  420406:	stc    
  420407:	fcmovnb st,st(3)
  420409:	call   0xf02a24d8
  42040e:	(bad)  
  42040f:	mov    ds:0xcb1206f1,al
  420414:	sub    eax,0x48ac7e0b
  420419:	into   
  42041a:	pop    edx
  42041b:	jae    0x42047e
  42041d:	pop    ds
  42041e:	jmp    0x9ba31963
  420423:	dec    edx
  420424:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420425:	cmp    dh,BYTE PTR [edx]
  420427:	or     bh,BYTE PTR [esi+0x5972919b]
  42042d:	ror    BYTE PTR [edx+0x476391ef],cl
  420433:	stos   BYTE PTR es:[edi],al
  420434:	pop    ebx
  420435:	(bad)  
  420436:	fwait
  420437:	xchg   edx,esp
  420439:	sbb    eax,0x7605d469
  42043e:	iret   
  42043f:	xchg   ebp,eax
  420440:	daa    
  420441:	mov    dl,0xc8
  420443:	cmp    BYTE PTR [ebx+edx*2+0x14],0xf7
  420448:	cmp    dh,dl
  42044a:	or     bl,dl
  42044c:	inc    ecx
  42044d:	jb     0x42044b
  42044f:	push   esi
  420450:	cmp    bl,BYTE PTR [ebx-0x6c]
  420453:	pop    esi
  420454:	mov    WORD PTR [eax+0x63d1e2c],?
  42045a:	call   0x9b534040
  42045f:	out    dx,eax
  420460:	into   
  420461:	inc    bx
  420463:	scas   eax,DWORD PTR es:[edi]
  420464:	test   eax,0xe567fa6d
  420469:	in     eax,dx
  42046a:	std    
  42046b:	popf   
  42046c:	cmp    DWORD PTR [edi],0x10
  42046f:	push   esp
  420470:	cmp    al,0xb9
  420472:	das    
  420473:	fs pop esp
  420475:	jb     0x4204dd
  420477:	and    DWORD PTR [ebx-0x4a],edx
  42047a:	ror    BYTE PTR [eax-0x67],1
  42047d:	jno    0x4204f8
  42047f:	push   eax
  420480:	retf   0x84f9
  420483:	xor    cl,BYTE PTR [edx]
  420485:	or     al,BYTE PTR [esi+0x3d4ca7e8]
  42048b:	adc    BYTE PTR [edx+edi*1],bl
  42048e:	xchg   DWORD PTR [ecx+0x41b689cd],esp
  420494:	adc    al,0x8a
  420496:	dec    esi
  420497:	lds    ecx,FWORD PTR [edx]
  420499:	into   
  42049a:	mov    bl,BYTE PTR [edx+eiz*1]
  42049d:	lods   al,BYTE PTR ds:[esi]
  42049e:	mov    ebp,0x700bf5cc
  4204a3:	pop    ds
  4204a4:	adc    DWORD PTR [ebx-0x78],esi
  4204a7:	addr16 push 0x4e
  4204aa:	mov    edx,0xaacf6892
  4204af:	pop    esp
  4204b0:	pushf  
  4204b1:	sbb    esi,DWORD PTR [edx]
  4204b3:	xchg   ebx,eax
  4204b4:	ja     0x4204c4
  4204b6:	jb     0x420467
  4204b8:	fistp  QWORD PTR [edx+0x2b]
  4204bb:	xlat   BYTE PTR ds:[ebx]
  4204bc:	es dec eax
  4204be:	cmp    DWORD PTR [eax+0x7fa9594],ebx
  4204c4:	daa    
  4204c5:	mov    eax,ds:0x1eda375a
  4204ca:	inc    esp
  4204cb:	and    al,0x3e
  4204cd:	or     edi,DWORD PTR [ecx+0x18]
  4204d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204d1:	jmp    0x38f38ce9
  4204d6:	mov    al,0xb7
  4204d8:	mov    ah,0xe5
  4204da:	jp     0x4204a1
  4204dc:	mov    edx,0xf43c6ec6
  4204e1:	mov    cl,0x8e
  4204e3:	stos   DWORD PTR es:[edi],eax
  4204e4:	or     edi,DWORD PTR [ecx]
  4204e6:	cmp    DWORD PTR [ebx-0x15],ecx
  4204e9:	lahf   
  4204ea:	clc    
  4204eb:	mov    ds:0x1e7d2ccf,eax
  4204f0:	add    al,BYTE PTR [ecx]
  4204f2:	jp     0x420479
  4204f4:	bound  ebp,QWORD PTR [eax+ecx*1]
  4204f7:	fdiv   QWORD PTR [esi]
  4204f9:	or     eax,0x3391f68
  4204fe:	sar    BYTE PTR ds:0x3a2a2029,1
  420504:	imul   esi,esi,0x2a
  420507:	shl    BYTE PTR [ecx+ebx*8-0x6ed9119d],1
  42050e:	lds    ebp,FWORD PTR [ebx+0x10]
  420511:	fs mov ah,0xcf
  420514:	lds    esi,FWORD PTR [eax+0x47071cd0]
  42051a:	push   0xffffffb3
  42051c:	dec    ecx
  42051d:	loope  0x4204a5
  42051f:	or     al,0x59
  420521:	(bad)
  420525:	imul   ebx,DWORD PTR [esi+0x9],0xffffffe5
  420529:	loop   0x420568
  42052b:	bound  ebp,QWORD PTR [edx+0x6549b382]
  420531:	sbb    eax,0x7c470e78
  420536:	add    eax,0x94ab1e5d
  42053b:	mov    ch,0x58
  42053d:	xchg   ebp,eax
  42053e:	repz out dx,eax
  420540:	mov    bl,ah
  420542:	sbb    ebx,DWORD PTR [eax+edi*4+0x43c7ed8b]
  420549:	mov    BYTE PTR [esi-0x3e],cl
  42054c:	mov    ecx,0x7ac7a6d
  420551:	idiv   BYTE PTR [edi-0x35]
  420554:	jle    0x42059a
  420556:	mov    edi,0xc2a9d1a4
  42055b:	(bad)  
  42055c:	xor    al,0xbb
  42055e:	jno    0x420556
  420560:	cmc    
  420561:	cmp    DWORD PTR [edi+eax*4-0x190be085],eax
  420568:	lods   al,BYTE PTR ds:[esi]
  420569:	inc    eax
  42056a:	xchg   ebx,eax
  42056b:	jnp    0x420510
  42056d:	push   eax
  42056e:	mov    ecx,0x87457fa8
  420573:	aam    0x39
  420575:	lods   al,BYTE PTR ds:[esi]
  420576:	mov    edi,0x3073334f
  42057b:	sub    BYTE PTR [esi+0x61],dh
  42057e:	xchg   esp,eax
  42057f:	(bad)  
  420580:	jo     0x420573
  420582:	adc    edi,DWORD PTR [ecx+0x50d03329]
  420588:	test   BYTE PTR [edx],0xce
  42058b:	aas    
  42058c:	xchg   cl,dh
  42058e:	sub    edx,edx
  420590:	or     DWORD PTR [edx-0x71],edx
  420593:	mov    ds:0xc96cbf1d,al
  420598:	inc    esp
  420599:	mov    esi,0xcd2af15e
  42059e:	cmp    eax,0xdc94c53f
  4205a3:	pop    ds
  4205a4:	arpl   WORD PTR [edx+0x67],bx
  4205a7:	pop    ebp
  4205a8:	inc    esi
  4205a9:	pop    ecx
  4205aa:	cmp    ch,BYTE PTR [eax+0x4f359c13]
  4205b0:	ja     0x42058c
  4205b2:	les    edx,FWORD PTR [esi+0x7c]
  4205b5:	out    0x97,al
  4205b7:	and    bl,dh
  4205b9:	les    eax,FWORD PTR [eax]
  4205bb:	(bad)  
  4205bc:	std    
  4205bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205be:	imul   edi,DWORD PTR [eax+0x26294c1],0xffffffce
  4205c5:	sub    dl,BYTE PTR [ecx]
  4205c7:	rcr    DWORD PTR [edi+0x4a5f2c13],1
  4205cd:	xor    eax,0x59226896
  4205d2:	pop    ebx
  4205d3:	jl     0x42062e
  4205d5:	push   cs
  4205d6:	dec    ebp
  4205d7:	push   esi
  4205d8:	dec    edx
  4205d9:	out    dx,eax
  4205da:	xor    BYTE PTR [eax],dl
  4205dc:	pushf  
  4205dd:	outs   dx,BYTE PTR ds:[esi]
  4205de:	mul    DWORD PTR [edx-0x18]
  4205e1:	test   eax,0xfab39740
  4205e6:	adc    al,0xa0
  4205e8:	push   es
  4205e9:	and    DWORD PTR [eax],0x57
  4205ec:	pop    eax
  4205ed:	out    dx,al
  4205ee:	inc    ebx
  4205ef:	mov    bl,0x4f
  4205f1:	aas    
  4205f2:	mov    ah,0xfe
  4205f4:	cli    
  4205f5:	cli    
  4205f6:	sbb    ebp,DWORD PTR [edx]
  4205f8:	repnz cmp dh,BYTE PTR [eax+edx*1-0x4e8d2a87]
  420600:	mov    fs,WORD PTR [ecx+ebp*2+0x4be5ec19]
  420607:	push   esp
  420608:	push   ebx
  420609:	cmp    BYTE PTR [esi-0x6c],al
  42060c:	(bad)  
  42060d:	push   edi
  42060e:	mov    dh,0x4b
  420610:	mov    ecx,0x6d003615
  420615:	(bad)  
  420616:	in     al,dx
  420617:	(bad)  
  420618:	mov    al,ds:0x74fe632d
  42061d:	daa    
  42061e:	lea    ecx,[esi]
  420620:	cwde   
  420621:	mov    bl,0x13
  420623:	fisubr DWORD PTR [esi]
  420625:	retf   
  420626:	(bad)  
  420627:	jbe    0x42065b
  420629:	shl    dl,cl
  42062b:	repz call 0xf11:0x2bb1e17
  420633:	mov    ebx,0x4c84858f
  420638:	je     0x4206ad
  42063a:	mov    WORD PTR [edx+eax*2],cs
  42063d:	rol    DWORD PTR [eax-0x2],cl
  420640:	mov    al,0x72
  420642:	jo     0x420693
  420644:	test   DWORD PTR [ebx-0x54],edi
  420647:	push   0xffffffaa
  420649:	mov    eax,ds:0xb5e4ee70
  42064e:	sbb    BYTE PTR [edx-0x4c],ah
  420651:	inc    edi
  420652:	arpl   WORD PTR [eax+eiz*4],sp
  420655:	mov    edx,0x264b0d27
  42065a:	(bad)  
  42065b:	mov    ebp,0xb09d5917
  420660:	jne    0x420671
  420662:	cmp    al,0xc5
  420664:	sub    DWORD PTR [edx],0x9b52ab95
  42066a:	jecxz  0x4205fc
  42066c:	and    eax,0x488120a5
  420671:	jns    0x42069b
  420673:	push   cs
  420674:	lods   al,BYTE PTR ds:[esi]
  420675:	pop    ebp
  420676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420677:	pop    edx
  420678:	inc    edx
  420679:	clc    
  42067a:	(bad)  
  42067b:	out    dx,eax
  42067c:	sub    eax,0x2af508a0
  420681:	add    bh,BYTE PTR [edx+0x3b]
  420684:	sar    BYTE PTR [esi],cl
  420686:	pop    ds
  420687:	(bad)  
  420688:	jmp    DWORD PTR [edi+ebx*8+0x55]
  42068c:	fmul   DWORD PTR [edx+0xa856cab]
  420692:	mov    ebx,0x7e6819b9
  420697:	add    BYTE PTR [eiz*1+0x21a7173b],ah
  42069e:	(bad)  [esi-0x28]
  4206a1:	clc    
  4206a2:	push   ss
  4206a3:	test   eax,0xe60aaac1
  4206a8:	jp     0x420704
  4206aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206ab:	adc    esp,esi
  4206ad:	jo     0x42069e
  4206af:	or     edi,DWORD PTR [ebx+0x2cdb025]
  4206b5:	push   edx
  4206b6:	data16 or BYTE PTR [ebx+0x76e0050],0xbc
  4206be:	xchg   BYTE PTR [eax+0x3b],bl
  4206c1:	nop
  4206c2:	xor    al,0xf
  4206c4:	out    0x8d,al
  4206c6:	and    al,0xdf
  4206c8:	imul   ebx
  4206ca:	sbb    eax,esi
  4206cc:	adc    eax,0x92462cc9
  4206d1:	jecxz  0x420719
  4206d3:	xor    BYTE PTR [ebx+0xb9b5921],bh
  4206d9:	push   0xfffffff6
  4206db:	aad    0x8e
  4206dd:	pop    edi
  4206de:	jae    0x420696
  4206e0:	xor    dl,BYTE PTR [ecx-0x1]
  4206e3:	aaa    
  4206e4:	repz pop edi
  4206e6:	sbb    DWORD PTR [esi+0x49bbe7e3],ebp
  4206ec:	cmp    esp,DWORD PTR [edi]
  4206ee:	cmc    
  4206ef:	cmp    eax,0xf7928a2f
  4206f4:	push   es
  4206f5:	aas    
  4206f6:	movntq (bad),mm3
  4206f7:	out    0xde,eax
  4206f9:	daa    
  4206fa:	jno    0x42077a
  4206fc:	push   es
  4206fd:	pusha  
  4206fe:	fld    DWORD PTR [edx+0x52ce3c75]
  420704:	cmp    ecx,esi
  420706:	test   BYTE PTR [ebx+eax*4-0x13],dh
  42070a:	sbb    esi,DWORD PTR [ecx-0x4d]
  42070d:	or     al,0xe8
  42070f:	add    al,0xb1
  420711:	out    0x91,eax
  420713:	push   ecx
  420714:	enter  0x4c2b,0x60
  420718:	repz cmp DWORD PTR [esi+esi*8-0x1],0x583349e0
  420721:	test   DWORD PTR [edx],ebx
  420723:	cmp    eax,0x11bc2012
  420728:	mov    al,ds:0xb0253638
  42072d:	or     eax,0x266da20e
  420732:	mov    al,0xc3
  420734:	sub    dl,BYTE PTR [edx+0x40c14808]
  42073a:	adc    eax,0xb308c07b
  42073f:	lea    edi,[ecx]
  420741:	repz popa 
  420743:	cmp    edi,edi
  420745:	push   edi
  420746:	mov    dl,BYTE PTR [ecx+0x6d]
  420749:	mov    esp,ss
  42074b:	in     al,0xf9
  42074d:	jmp    0xe4e0:0x8bac64fa
  420754:	adc    eax,0x80c0edbf
  420759:	and    eax,0x29097aa9
  42075e:	mov    ch,0x74
  420760:	adc    DWORD PTR [ebp+0x7e3f5657],ebx
  420766:	cmp    ebx,edx
  420768:	lods   al,BYTE PTR ds:[esi]
  420769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42076a:	aaa    
  42076b:	or     eax,0x54ac02a0
  420770:	in     al,0xee
  420772:	push   ebp
  420773:	sbb    esp,esi
  420775:	cdq    
  420776:	mov    eax,ds:0xdcea2c41
  42077b:	call   0x646f:0xd439b8bc
  420782:	ud2    
  420784:	xlat   BYTE PTR ds:[ebx]
  420785:	add    al,0x44
  420787:	clc    
  420788:	pop    ss
  420789:	mov    al,0x8b
  42078b:	xchg   bl,cl
  42078d:	or     BYTE PTR [esi],ah
  42078f:	shr    BYTE PTR ds:0x4bcd8739,0x5b
  420796:	bnd jns 0x4207d4
  420799:	inc    edi
  42079a:	fld    DWORD PTR [ebx]
  42079c:	pushf  
  42079d:	push   0xffffffdd
  42079f:	jmp    0x420778
  4207a1:	dec    ebp
  4207a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207a3:	arpl   di,sp
  4207a5:	inc    edx
  4207a6:	dec    esi
  4207a7:	retf   
  4207a8:	xchg   esi,eax
  4207a9:	cwde   
  4207aa:	inc    edi
  4207ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4207ac:	enter  0x41f6,0xa5
  4207b0:	dec    eax
  4207b1:	and    BYTE PTR [ecx],cl
  4207b3:	mov    fs,WORD PTR [ecx-0x3]
  4207b6:	lods   al,BYTE PTR ds:[esi]
  4207b7:	fisub  WORD PTR [ebx+0xb]
  4207ba:	dec    ecx
  4207bb:	(bad)  
  4207bc:	xchg   esp,eax
  4207bd:	test   DWORD PTR [ebx],esp
  4207bf:	adc    BYTE PTR [edx+0x4f],cl
  4207c2:	and    ebp,esi
  4207c4:	rcl    DWORD PTR [esp-0x7de48697],cl
  4207cb:	jl     0x420779
  4207cd:	fisub  WORD PTR [eax+ebx*2+0x11478adc]
  4207d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207d5:	dec    DWORD PTR [ebx]
  4207d7:	out    dx,eax
  4207d8:	jo     0x420851
  4207da:	push   0xb4750065
  4207df:	fdiv   st(0),st
  4207e1:	hlt    
  4207e2:	(bad)  
  4207e3:	sti    
  4207e4:	test   BYTE PTR [ecx],dl
  4207e6:	sub    al,0x48
  4207e8:	inc    esp
  4207e9:	push   es
  4207ea:	mov    DWORD PTR [ebx],ebx
  4207ec:	jnp    0x420845
  4207ee:	or     BYTE PTR [ebp+0x74],0xd9
  4207f2:	lar    edi,WORD PTR [eax-0x31aa90be]
  4207f9:	sbb    ebx,esi
  4207fb:	sub    al,0x60
  4207fd:	and    edi,eax
  4207ff:	or     eax,edx
  420801:	xor    DWORD PTR [eax-0x1f],ebp
  420804:	ins    BYTE PTR es:[edi],dx
  420805:	mov    ch,0x76
  420807:	mov    edx,0x81372c0
  42080c:	adc    BYTE PTR [esi-0x47711952],bh
  420812:	rcr    BYTE PTR [edi+0x4],1
  420815:	mov    edi,0xdde9a6cb
  42081a:	aas    
  42081b:	enter  0x8d36,0x5f
  42081f:	fdiv   DWORD PTR [ebp+0xe]
  420822:	and    DWORD PTR [esp+edi*2],edx
  420825:	mov    eax,ds:0x24dd40ef
  42082a:	xchg   ebx,eax
  42082b:	int    0x33
  42082d:	mov    eax,ds:0xc4d1be84
  420832:	ret    
  420833:	mov    dl,0x43
  420835:	jae    0x4207d4
  420837:	in     eax,0xdf
  420839:	sbb    bl,BYTE PTR [eax]
  42083b:	sub    bl,BYTE PTR [esi]
  42083d:	add    al,0x6
  42083f:	mov    edx,?
  420841:	leave  
  420842:	or     DWORD PTR [eax*2-0x3758c45a],0x4798db5
  42084d:	jge    0x42085f
  42084f:	adc    bl,BYTE PTR [ebx-0x1f]
  420852:	lea    ebx,[edx]
  420854:	mov    DWORD PTR [ebx],0x9940b699
  42085a:	out    0xa3,eax
  42085c:	xor    eax,0x98e76b1a
  420861:	mov    eax,ds:0x7f0c38cb
  420866:	mov    ch,0x19
  420868:	inc    eax
  420869:	ror    BYTE PTR [edx],0x70
  42086c:	add    dl,bh
  42086e:	xor    edx,DWORD PTR [edi+eax*2]
  420871:	scas   eax,DWORD PTR es:[edi]
  420872:	mov    ecx,DWORD PTR [ebx]
  420874:	call   0x37384519
  420879:	pusha  
  42087a:	outs   dx,BYTE PTR ds:[esi]
  42087b:	inc    esi
  42087c:	mov    ecx,0x93dc16e4
  420881:	js     0x4208a0
  420883:	mov    dl,0x10
  420885:	mov    al,ds:0xba735ec8
  42088a:	cwde   
  42088b:	test   BYTE PTR [ebx+0x2957c7b3],bh
  420891:	ret    
  420892:	cmc    
  420893:	and    ecx,DWORD PTR [esi+0x3]
  420896:	cmc    
  420897:	mov    dh,0x28
  420899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42089a:	lds    edx,FWORD PTR [edx+0x1a9857cf]
  4208a0:	lea    ebx,[ebx-0x56543c3f]
  4208a6:	sub    ecx,ebx
  4208a8:	rcr    BYTE PTR [esi+0x71],0x8b
  4208ac:	out    0x41,al
  4208ae:	jp     0x420879
  4208b0:	(bad)  
  4208b1:	mov    bh,0x9d
  4208b3:	sbb    eax,0xf0733608
  4208b8:	jle    0x4208fc
  4208ba:	(bad)  
  4208bb:	into   
  4208bc:	or     DWORD PTR [ebp-0x4d],esp
  4208bf:	sub    bh,BYTE PTR [ebx-0x45]
  4208c2:	cmp    eax,0x35b56ec3
  4208c7:	enter  0xd23c,0x4f
  4208cb:	ret    0xd3f7
  4208ce:	pop    ss
  4208cf:	inc    esp
  4208d0:	mov    ch,0xa7
  4208d2:	inc    eax
  4208d3:	ficomp WORD PTR [edx+0x35]
  4208d6:	xor    BYTE PTR [edx+0x4c74de36],0x8d
  4208dd:	test   BYTE PTR [ecx],0xab
  4208e0:	push   0xffffffbf
  4208e2:	sahf   
  4208e3:	mov    ebp,0x2f3aa894
  4208e8:	dec    edi
  4208e9:	or     ch,ah
  4208eb:	pushf  
  4208ec:	loope  0x4208a6
  4208ee:	push   0x846c2d92
  4208f3:	sbb    DWORD PTR [edx-0x5e],edi
  4208f6:	xchg   edx,eax
  4208f7:	cmp    DWORD PTR [esi+0x27b724aa],0xffffffed
  4208fe:	push   edx
  4208ff:	or     edi,DWORD PTR [edx+0x32926fb]
  420905:	(bad)  
  420906:	ror    BYTE PTR [ecx],0xc8
  420909:	adc    BYTE PTR [ebx],0xd
  42090c:	js     0x4208dc
  42090e:	aas    
  42090f:	xor    eax,0xfc30627f
  420914:	cmp    BYTE PTR [edx+0x42],al
  420917:	pop    esp
  420918:	daa    
  420919:	sub    ecx,edi
  42091b:	lods   al,BYTE PTR ds:[esi]
  42091c:	cdq    
  42091d:	xchg   esi,eax
  42091e:	je     0x420991
  420920:	push   cs
  420921:	shl    BYTE PTR [esi-0x51],1
  420924:	addr16 je 0x4208ac
  420927:	pop    edi
  420928:	jns    0x420941
  42092a:	int3   
  42092b:	mov    ah,0xbf
  42092d:	mov    dh,0xa4
  42092f:	pop    eax
  420930:	add    al,dl
  420932:	aad    0x1c
  420934:	ret    0x8e87
  420937:	pop    ecx
  420938:	pop    ss
  420939:	cmc    
  42093a:	cmp    bh,BYTE PTR [ecx]
  42093c:	jecxz  0x42093b
  42093e:	loopne 0x420949
  420940:	jne    0xa2e744e7
  420946:	adc    eax,0xf4ae3074
  42094b:	push   es
  42094c:	xchg   ebp,eax
  42094d:	inc    edi
  42094e:	xor    ch,BYTE PTR [esi]
  420950:	scas   eax,DWORD PTR es:[edi]
  420951:	sub    BYTE PTR [ecx+0x48],dh
  420954:	jecxz  0x420989
  420956:	sbb    eax,0x9a6c4610
  42095b:	xchg   ebp,eax
  42095c:	or     BYTE PTR [eax+0x13cf5b49],bl
  420962:	frstor [edi+0x72]
  420965:	jle    0x420967
  420967:	ins    DWORD PTR es:[edi],dx
  420968:	add    eax,0xbf44daa2
  42096d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42096e:	or     edx,DWORD PTR [ebx-0x43d46f0a]
  420974:	cmp    BYTE PTR [esi],bl
  420976:	jo     0x42093a
  420978:	inc    ebp
  420979:	call   0x1962:0x574a4bfe
  420980:	sub    esi,edx
  420982:	(bad)  
  420983:	pop    ebx
  420984:	in     eax,dx
  420985:	push   eax
  420986:	loopne 0x4209cb
  420988:	fsub   st,st(5)
  42098a:	ss push eax
  42098c:	sbb    DWORD PTR [ebp-0x67f73603],eax
  420992:	pop    esp
  420993:	jmp    0x420946
  420995:	cmp    al,0x99
  420997:	mov    ch,0x9c
  420999:	adc    eax,0x14d1fea4
  42099e:	scas   al,BYTE PTR es:[edi]
  42099f:	hlt    
  4209a0:	sub    al,BYTE PTR [ebp+ebx*4+0x32dce7db]
  4209a7:	inc    edi
  4209a8:	in     al,0x88
  4209aa:	dec    edx
  4209ab:	or     al,0xff
  4209ad:	dec    eax
  4209ae:	dec    esp
  4209af:	iret   
  4209b0:	or     dh,BYTE PTR [ecx]
  4209b2:	loopne 0x420a01
  4209b4:	mov    ebx,0x4cf5c41e
  4209b9:	sbb    ah,BYTE PTR [edx+0x35]
  4209bc:	adc    ebx,ebx
  4209be:	inc    ebx
  4209bf:	scas   eax,DWORD PTR es:[edi]
  4209c0:	iret   
  4209c1:	ja     0x420a04
  4209c3:	sub    eax,0x87a34ada
  4209c8:	fcomp  QWORD PTR [edx+0x3ac081f0]
  4209ce:	out    0x43,eax
  4209d0:	xor    bl,al
  4209d2:	add    BYTE PTR [edx],al
  4209d4:	stos   DWORD PTR es:[edi],eax
  4209d5:	push   es
  4209d6:	lods   eax,DWORD PTR ds:[esi]
  4209d7:	jns    0x4209d3
  4209d9:	dec    edi
  4209da:	repz add eax,0xd7c7f637
  4209e0:	fidivr WORD PTR [esi]
  4209e2:	jae    0x420986
  4209e4:	js     0x420a1c
  4209e6:	scas   al,BYTE PTR es:[edi]
  4209e7:	jmp    0x4d9d8229
  4209ec:	pop    es
  4209ed:	xor    eax,0xe47c193e
  4209f2:	sub    ebx,0xffffffff
  4209f5:	and    ecx,DWORD PTR [edi+0x7a371a50]
  4209fb:	mov    esi,esp
  4209fd:	mov    esp,ecx
  4209ff:	repz dec ebp
  420a01:	sbb    al,bl
  420a03:	mov    esi,0x511708eb
  420a08:	lods   al,BYTE PTR ds:[esi]
  420a09:	(bad)  
  420a0a:	ds dec esp
  420a0c:	sub    al,0xa4
  420a0e:	into   
  420a0f:	retf   0xa56
  420a12:	jnp    0x420a53
  420a14:	jnp    0x420a89
  420a16:	or     ch,BYTE PTR [esi]
  420a18:	shr    DWORD PTR [esi-0x2f],cl
  420a1b:	mov    ecx,0x3559a0ba
  420a20:	inc    ebx
  420a21:	fmul   st,st(7)
  420a23:	pop    eax
  420a24:	mov    al,0x42
  420a26:	adc    DWORD PTR [ebx-0x64499906],ecx
  420a2c:	jle    0x420a99
  420a2e:	xor    dh,0x5
  420a31:	test   BYTE PTR [edx],dh
  420a33:	call   0xe8d:0xc63a7209
  420a3a:	ror    DWORD PTR [ecx-0x1e5de0cb],1
  420a40:	xchg   esp,eax
  420a41:	add    al,0x70
  420a43:	mov    edi,0x196d4f10
  420a48:	andps  xmm0,xmm2
  420a4b:	dec    ebp
  420a4c:	xchg   edx,eax
  420a4d:	inc    esi
  420a4e:	jmp    0x5898:0x35638fd4
  420a55:	lods   al,BYTE PTR ds:[esi]
  420a56:	adc    BYTE PTR [edx-0x56],0xbc
  420a5a:	push   eax
  420a5b:	xchg   BYTE PTR [edi-0x63],bl
  420a5e:	cmc    
  420a5f:	xor    edx,edi
  420a61:	push   ecx
  420a62:	(bad)  
  420a63:	sbb    esp,DWORD PTR [eax-0x460de2c1]
  420a69:	mov    bh,0x2a
  420a6b:	outs   dx,DWORD PTR ds:[esi]
  420a6c:	push   ds
  420a6d:	jmp    0x420a67
  420a6f:	jb     0x420a39
  420a71:	lods   eax,DWORD PTR ds:[esi]
  420a72:	retf   0x995a
  420a75:	and    esp,DWORD PTR [ebp-0x67]
  420a78:	and    DWORD PTR [eax],ebp
  420a7a:	inc    eax
  420a7b:	mul    BYTE PTR [esi]
  420a7d:	rcr    BYTE PTR [eax],cl
  420a7f:	cmp    eax,0x4612cbd6
  420a84:	add    eax,0x37d70d9
  420a8a:	xchg   ebp,eax
  420a8b:	xor    ah,BYTE PTR [edx+edi*2+0x42]
  420a8f:	adc    al,0x91
  420a91:	rcl    BYTE PTR [ecx],1
  420a93:	shr    ebp,0xa2
  420a96:	into   
  420a97:	jo     0x420a98
  420a99:	inc    ecx
  420a9a:	pop    es
  420a9b:	outs   dx,BYTE PTR ds:[esi]
  420a9c:	adc    dl,BYTE PTR [ecx+0x53]
  420a9f:	sti    
  420aa0:	xor    eax,0xd46ad414
  420aa5:	ds pop eax
  420aa7:	xchg   BYTE PTR [ebp-0x5f9d3a69],cl
  420aad:	adc    BYTE PTR ds:0x3f19e81e,0x6d
  420ab4:	pop    esp
  420ab5:	mov    eax,0xc3ea319f
  420aba:	jne    0x420b24
  420abc:	aad    0x19
  420abe:	cli    
  420abf:	mov    al,0x98
  420ac1:	sub    eax,0x44f1863d
  420ac6:	sti    
  420ac7:	and    DWORD PTR [edx+0x7e07c5e0],eax
  420acd:	ja     0x420a5d
  420acf:	lods   al,BYTE PTR ds:[esi]
  420ad0:	lea    ebx,[esi]
  420ad2:	cmp    ah,BYTE PTR [eax]
  420ad4:	jmp    0x249bcdb9
  420ad9:	pop    edx
  420ada:	xor    edi,esi
  420adc:	adc    al,BYTE PTR [edx]
  420ade:	sbb    BYTE PTR gs:0x16dbace6,ah
  420ae5:	addr16 (bad) 
  420ae8:	int    0x4b
  420aea:	and    BYTE PTR [ebx-0x3ee5c5b],bh
  420af0:	xchg   ch,dh
  420af2:	adc    esp,esp
  420af4:	mov    ?,WORD PTR ds:0xc681c1cc
  420afa:	sbb    BYTE PTR [eax],bh
  420afc:	pop    edi
  420afd:	or     cl,0x92
  420b00:	fld    TBYTE PTR [edi]
  420b02:	jo     0x420b1e
  420b04:	dec    esi
  420b05:	int3   
  420b06:	popf   
  420b07:	jmp    0x420b25
  420b09:	mov    al,0xe5
  420b0b:	mov    ds:0xaf61dfdb,eax
  420b10:	aas    
  420b11:	dec    ecx
  420b12:	(bad)  
  420b13:	mul    BYTE PTR [ebp-0x34]
  420b16:	jmp    0x59ca79d3
  420b1b:	or     cl,ah
  420b1d:	adc    al,0xf8
  420b1f:	outs   dx,BYTE PTR ds:[esi]
  420b20:	sub    ch,bh
  420b22:	(bad)  
  420b23:	sbb    bh,BYTE PTR [esi+0x23266a01]
  420b29:	scas   al,BYTE PTR es:[edi]
  420b2a:	lock mov edi,0xb7cab5f2
  420b30:	jns    0x420ab4
  420b32:	int3   
  420b33:	jae    0x420aca
  420b35:	shl    BYTE PTR [esi-0x6e],cl
  420b38:	inc    ebx
  420b39:	xchg   BYTE PTR [eax*4+0x4ae1ddd1],bl
  420b40:	retf   
  420b41:	cmp    DWORD PTR [esi+0x17],ebp
  420b44:	cmp    BYTE PTR [edi+0x30a38d2b],0xd4
  420b4b:	jns    0x420acf
  420b4d:	push   esp
  420b4e:	ins    BYTE PTR es:[edi],dx
  420b4f:	dec    edi
  420b50:	jb     0x420ae0
  420b52:	nop
  420b53:	mov    al,ch
  420b55:	add    al,0xd4
  420b57:	inc    edx
  420b58:	add    ecx,DWORD PTR [edx+0x22088ed]
  420b5e:	div    bh
  420b60:	push   esp
  420b61:	loop   0x420b7f
  420b63:	xor    edi,DWORD PTR [edi-0x6c]
  420b66:	sbb    BYTE PTR [esi-0x35f14a28],0x85
  420b6d:	scas   al,BYTE PTR es:[edi]
  420b6e:	nop
  420b6f:	mov    eax,esi
  420b71:	cmp    eax,0xdfa9cafa
  420b76:	sbb    eax,edx
  420b78:	push   0x7bffbf4c
  420b7d:	or     al,0xbf
  420b7f:	retf   0xc49a
  420b82:	sub    esi,DWORD PTR [edi+0x4c]
  420b85:	fbstp  TBYTE PTR [edx]
  420b87:	adc    edi,edi
  420b89:	ror    edx,0xfe
  420b8c:	mov    ds:0xa50683f,al
  420b91:	xchg   ebp,eax
  420b92:	mov    dl,0x0
  420b94:	cmc    
  420b95:	pop    ecx
  420b96:	xchg   DWORD PTR [ebp+0x69],edi
  420b99:	rcr    BYTE PTR [eax-0x7fac2662],cl
  420b9f:	sahf   
  420ba0:	jg     0x420b38
  420ba2:	mov    al,0xd9
  420ba4:	(bad)  [edi+0x3195573d]
  420baa:	xlat   BYTE PTR ds:[bx]
  420bac:	jle    0x420b82
  420bae:	cmp    DWORD PTR [ecx+0x1320edea],ebx
  420bb4:	mov    bl,0xff
  420bb6:	bnd jle 0x420bc8
  420bb9:	xchg   ebx,eax
  420bba:	jno    0x420bd7
  420bbc:	js     0x420b8f
  420bbe:	(bad)
  420bc2:	pop    eax
  420bc3:	loop   0x420b90
  420bc5:	lods   al,BYTE PTR ds:[esi]
  420bc6:	mov    ds:0x49fb28a0,eax
  420bcb:	stos   BYTE PTR es:[edi],al
  420bcc:	xchg   DWORD PTR [ebx],edx
  420bce:	in     al,dx
  420bcf:	loop   0x420b54
  420bd1:	cmp    BYTE PTR [ecx],dl
  420bd3:	lahf   
  420bd4:	ins    DWORD PTR es:[edi],dx
  420bd5:	int3   
  420bd6:	aas    
  420bd7:	xchg   esi,eax
  420bd8:	xchg   esi,eax
  420bd9:	jb     0x420b5c
  420bdb:	pop    edx
  420bdc:	shl    DWORD PTR [ecx-0x20],cl
  420bdf:	adc    bh,BYTE PTR [edx+esi*1+0x2f]
  420be3:	sbb    esi,DWORD PTR [edi]
  420be5:	lahf   
  420be6:	lea    ecx,ds:0xd82af64a
  420bec:	xor    eax,0xd988bec1
  420bf1:	pop    es
  420bf2:	mov    ds:0x8d868cde,eax
  420bf7:	cli    
  420bf8:	test   eax,0xbf81c459
  420bfd:	mov    bh,BYTE PTR [ebp+0x7993110d]
  420c03:	pop    esi
  420c04:	repnz retf 
  420c06:	sub    al,0xa6
  420c08:	aaa    
  420c09:	sti    
  420c0a:	pop    ecx
  420c0b:	int    0x4e
  420c0d:	add    DWORD PTR [esi],esi
  420c0f:	mov    ds:0xa4c732ea,eax
  420c14:	xchg   ecx,eax
  420c15:	sub    DWORD PTR [edi+edx*4-0x674f18a],edi
  420c1c:	std    
  420c1d:	add    bh,0xc1
  420c20:	mov    ch,0x67
  420c22:	cmp    DWORD PTR [esi-0x7be2153e],0x4f7d5fcb
  420c2c:	and    BYTE PTR [ecx-0x1c2a5b0d],0x95
  420c33:	outs   dx,BYTE PTR ds:[esi]
  420c34:	xchg   ebx,eax
  420c35:	mov    ebx,0xc6689196
  420c3a:	daa    
  420c3b:	outs   dx,BYTE PTR ds:[esi]
  420c3c:	push   edx
  420c3d:	retw   0x2f5a
  420c41:	lds    edi,FWORD PTR [ebx-0x8]
  420c44:	cmc    
  420c45:	mov    edi,0x1d52f67
  420c4a:	add    bh,BYTE PTR [edi-0x3b]
  420c4d:	mov    ds:0xf8be3de5,eax
  420c52:	cmp    BYTE PTR [edi+ebp*4],ch
  420c55:	sbb    al,0x42
  420c57:	and    BYTE PTR [ebx-0x6ac8fc66],ah
  420c5d:	(bad)  
  420c5e:	push   edi
  420c5f:	stos   BYTE PTR es:[edi],al
  420c60:	push   ds
  420c61:	xchg   esp,eax
  420c62:	pop    esp
  420c63:	sub    dl,BYTE PTR [ebx]
  420c65:	xor    al,0x10
  420c67:	test   eax,0xfa3c54cd
  420c6c:	jl     0x420c92
  420c6e:	inc    ebp
  420c6f:	pop    esp
  420c70:	mov    ds:0x49f7fb59,al
  420c75:	mov    ds:0x81ecdf07,eax
  420c7a:	shl    DWORD PTR [ecx+0x35],0xc5
  420c7e:	fbstp  TBYTE PTR [esp+edi*8-0x2ada1c8a]
  420c85:	adc    ebx,DWORD PTR [edx-0x61]
  420c88:	(bad)  
  420c89:	jg     0x420c79
  420c8b:	mov    edx,0x5b931d91
  420c90:	push   cs
  420c91:	push   ecx
  420c92:	push   ds
  420c93:	or     BYTE PTR [ecx+0x54],ah
  420c96:	pop    edi
  420c97:	adc    ecx,esi
  420c99:	pop    eax
  420c9a:	imul   ecx,DWORD PTR [ecx+edx*1],0xc46b430
  420ca1:	mov    dl,0xd2
  420ca3:	mov    esp,eax
  420ca5:	jge    0x420c42
  420ca7:	mov    ebp,0xa99c1f34
  420cac:	push   ds
  420cad:	sar    DWORD PTR [ecx-0x4f],1
  420cb0:	je     0x420c35
  420cb2:	(bad)  
  420cb3:	repz push ecx
  420cb6:	aas    
  420cb7:	call   0xb0541872
  420cbc:	(bad)  
  420cbd:	(bad)
  420cc1:	rcr    BYTE PTR [edx+ebp*8],1
  420cc4:	fcomp  DWORD PTR [ebp-0x62f5f872]
  420cca:	lea    ebx,[edi+edi*2-0x78]
  420cce:	push   0x4bf6d783
  420cd3:	jbe    0x420ce9
  420cd5:	xchg   ecx,eax
  420cd6:	out    dx,eax
  420cd7:	add    cl,BYTE PTR [ebx+0x34c850b8]
  420cdd:	xchg   esp,eax
  420cde:	je     0x420d5e
  420ce0:	repnz mov esi,0xb63c6a6d
  420ce6:	and    eax,0x31dca25a
  420ceb:	(bad)  
  420ced:	imul   edi,DWORD PTR [ecx],0x6c
  420cf0:	sub    al,0x30
  420cf2:	sub    al,0x78
  420cf4:	cli    
  420cf5:	arpl   WORD PTR [esi+0x15],sp
  420cf8:	mov    WORD PTR [ebx+0x420b9cb0],gs
  420cfe:	pop    ecx
  420cff:	das    
  420d00:	fdivr  st(6),st
  420d02:	or     dl,BYTE PTR [ecx+0x55124c81]
  420d08:	dec    eax
  420d09:	repz mul al
  420d0c:	imul   ebp,DWORD PTR [ecx+0x50],0x5a
  420d10:	xchg   DWORD PTR [ebp-0x2cdb492a],eax
  420d16:	adc    eax,0x51a517ee
  420d1b:	(bad)  
  420d1c:	aaa    
  420d1d:	adc    al,0xa7
  420d1f:	add    DWORD PTR [eax],ebx
  420d21:	mov    BYTE PTR [di-0x7e],dh
  420d25:	pop    ecx
  420d26:	fadd   QWORD PTR [eax+0x733549d6]
  420d2c:	adc    DWORD PTR [edx-0x38e5f09d],ebx
  420d32:	nop
  420d33:	push   edx
  420d34:	retf   
  420d35:	cmc    
  420d36:	mov    ch,0x73
  420d38:	(bad)  
  420d39:	in     al,dx
  420d3a:	pop    ecx
  420d3b:	rcl    ah,1
  420d3d:	neg    esp
  420d3f:	stos   WORD PTR es:[edi],ax
  420d41:	out    0x1a,al
  420d43:	and    BYTE PTR [ebx-0x4c2d3ab7],0xba
  420d4a:	cmp    eax,0x92a44df0
  420d4f:	dec    eax
  420d50:	sub    al,0x98
  420d52:	and    edx,DWORD PTR [ecx+ecx*8-0x316f3df6]
  420d59:	cmp    BYTE PTR [edx],dl
  420d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d5c:	and    al,0x16
  420d5e:	adc    eax,DWORD PTR [eax+0x547712c7]
  420d64:	test   ah,0x78
  420d67:	adc    DWORD PTR [esi-0xc352be7],ebp
  420d6d:	popa   
  420d6e:	test   eax,0x392c534a
  420d73:	sub    BYTE PTR [esi-0x271f7948],bh
  420d79:	int    0x95
  420d7b:	xchg   edx,eax
  420d7c:	and    dh,bl
  420d7e:	or     al,0x83
  420d80:	fstp   QWORD PTR [edx]
  420d82:	stos   DWORD PTR es:[edi],eax
  420d83:	repnz rcl eax,0x48
  420d87:	jle    0x420d27
  420d89:	jmp    0xa41d:0xb069a687
  420d90:	jne    0x420d86
  420d92:	add    eax,0xa2863cb7
  420d97:	mov    ebx,0xeb87d47f
  420d9c:	js     0x420dcc
  420d9e:	icebp  
  420d9f:	mov    edi,0x6aebccf9
  420da4:	bound  eax,QWORD PTR [ebx+0x20]
  420da7:	jge    0x420e17
  420da9:	(bad)  
  420daa:	out    0x54,al
  420dac:	(bad)  [edx+0x38]
  420daf:	mov    DWORD PTR [edi+edi*4-0x26],0xfcdfefdb
  420db7:	lea    esp,[esi]
  420db9:	and    al,0x84
  420dbb:	jl     0x420df2
  420dbd:	aaa    
  420dbe:	icebp  
  420dbf:	(bad)  
  420dc0:	shl    al,1
  420dc2:	push   esi
  420dc3:	cld    
  420dc4:	jb     0x420da6
  420dc6:	jo     0x420d81
  420dc8:	and    DWORD PTR [ecx],0xffffff92
  420dcb:	mov    edi,0x6775586f
  420dd0:	mov    esi,0x6d8fbdf1
  420dd5:	popa   
  420dd6:	rcl    edx,1
  420dd8:	jne    0x420e27
  420dda:	xchg   edx,eax
  420ddb:	cmp    al,0x20
  420ddd:	dec    eax
  420dde:	lock xchg ecx,eax
  420de0:	cmp    DWORD PTR [esi-0x1b],esi
  420de3:	(bad)  
  420de4:	das    
  420de5:	add    ebx,DWORD PTR [edi+0x3d]
  420de8:	jne    0x420dc2
  420dea:	pop    es
  420deb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dec:	inc    BYTE PTR [esi-0x2d]
  420def:	push   edi
  420df0:	dec    eax
  420df1:	add    eax,0xa07e851f
  420df6:	dec    edi
  420df7:	popf   
  420df8:	ins    BYTE PTR es:[edi],dx
  420df9:	inc    esi
  420dfa:	or     DWORD PTR [eax],eax
  420dfc:	(bad)  [ecx+eiz*1-0x56]
  420e00:	cs jmp 0x420dfd
  420e03:	mov    esp,0x69767cff
  420e08:	inc    edx
  420e09:	inc    ebp
  420e0a:	test   DWORD PTR [ebp+0x64f3dbd7],ecx
  420e10:	repz dec edx
  420e12:	sahf   
  420e13:	pop    ss
  420e14:	inc    esp
  420e15:	dec    esi
  420e16:	pop    edx
  420e17:	out    0x5b,al
  420e19:	or     eax,0x920722a7
  420e1e:	mov    cl,0xd
  420e20:	out    dx,eax
  420e21:	pusha  
  420e22:	(bad)  
  420e23:	ss or  al,0xaf
  420e26:	repz xchg ecx,eax
  420e28:	loop   0x420dd3
  420e2a:	sub    eax,0x3f2c2e0
  420e2f:	cmp    ch,BYTE PTR [edi+0x66]
  420e32:	int3   
  420e33:	pop    DWORD PTR [edx-0x5a]
  420e36:	mov    ebp,0xcb3e9758
  420e3b:	xor    cl,BYTE PTR [ecx]
  420e3d:	fsub   DWORD PTR ds:0x845723d7
  420e43:	outs   dx,DWORD PTR ds:[esi]
  420e44:	jecxz  0x420e9b
  420e46:	jmp    0x8e10570c
  420e4b:	mov    DWORD PTR [ecx],ebx
  420e4d:	cld    
  420e4e:	lods   al,BYTE PTR ds:[esi]
  420e4f:	push   0xe8d84e8b
  420e54:	jecxz  0x420ec1
  420e56:	sbb    al,0x97
  420e58:	push   ds
  420e59:	ret    
  420e5a:	add    eax,edi
  420e5c:	push   0x1e
  420e5e:	xchg   cl,bl
  420e60:	fs popf 
  420e62:	fisub  WORD PTR [esi-0x536d1ea]
  420e68:	(bad)  
  420e6a:	in     eax,dx
  420e6b:	sbb    al,0xb6
  420e6d:	inc    ebx
  420e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e6f:	xchg   edi,eax
  420e70:	xor    DWORD PTR [ebx+edx*4],0x73
  420e74:	scas   eax,DWORD PTR es:[edi]
  420e75:	fnstenv [edi+0x5adcf5ef]
  420e7b:	sbb    esi,DWORD PTR [ebx-0x40]
  420e7e:	pop    ebp
  420e7f:	mov    ah,0xcc
  420e81:	sbb    BYTE PTR [esp+0x53193ecc],bh
  420e88:	ret    0x4a2a
  420e8b:	pop    ebp
  420e8c:	cmp    BYTE PTR [ecx],dh
  420e8e:	cli    
  420e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e90:	rcl    BYTE PTR [ecx],1
  420e92:	cwde   
  420e93:	das    
  420e94:	les    edi,FWORD PTR [edi]
  420e96:	and    BYTE PTR ds:0xf58a4d16,dh
  420e9c:	movnti DWORD PTR [ebp+0x1406b4f],edx
  420ea3:	mov    ds:0x9f03acc,eax
  420ea8:	inc    ebp
  420ea9:	mov    edi,0xabce7ef9
  420eae:	cmp    DWORD PTR [ecx-0x5a],eax
  420eb1:	mov    ds:0x7e04e28f,eax
  420eb6:	aad    0xab
  420eb8:	inc    edx
  420eb9:	sbb    BYTE PTR [ecx+0x5590911f],cl
  420ebf:	add    BYTE PTR [eax],0x59
  420ec2:	cmp    DWORD PTR [eax],ecx
  420ec4:	into   
  420ec5:	adc    ch,cl
  420ec7:	xor    eax,eax
  420ec9:	push   edx
  420eca:	aad    0x2b
  420ecc:	ds js  0x420f43
  420ecf:	cdq    
  420ed0:	xchg   ecx,eax
  420ed1:	add    eax,0x97fa115f
  420ed6:	jae    0x420e5b
  420ed8:	scas   al,BYTE PTR es:[edi]
  420ed9:	inc    edx
  420eda:	hlt    
  420edb:	ror    BYTE PTR [eax],1
  420edd:	out    0x1e,eax
  420edf:	repz imul eax,DWORD PTR [ebx+0x3d],0xd5bada80
  420ee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ee8:	inc    bh
  420eea:	mov    ecx,0xf3455be4
  420eef:	or     ebx,DWORD PTR ds:0xacb5548c
  420ef5:	ins    DWORD PTR es:[edi],dx
  420ef6:	loopne 0x420f57
  420ef8:	dec    ecx
  420ef9:	mov    dl,0xec
  420efb:	push   ebx
  420efc:	nop
  420efd:	sbb    ch,dh
  420eff:	adc    BYTE PTR [esp+esi*8],dl
  420f02:	(bad)
  420f05:	dec    edi
  420f06:	xor    ah,ch
  420f08:	adc    al,0x9d
  420f0a:	jl     0x420edf
  420f0c:	(bad)  
  420f0d:	xor    dl,bh
  420f0f:	shl    DWORD PTR [edx+0x6b],0xc
  420f13:	add    bl,BYTE PTR [esi-0x196b899e]
  420f19:	mov    ss,WORD PTR [ecx]
  420f1b:	pop    edi
  420f1c:	int    0x99
  420f1e:	mov    edi,ecx
  420f20:	out    0x53,al
  420f22:	jg     0x420f12
  420f24:	imul   esp,ebp,0xffffffda
  420f27:	mov    ds:0x53d878a5,al
  420f2c:	and    BYTE PTR [eax],0x23
  420f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f30:	les    ebp,FWORD PTR [edx]
  420f32:	sbb    dl,cl
  420f34:	fcomp  QWORD PTR [edx]
  420f36:	sbb    ecx,edi
  420f38:	lock inc edi
  420f3a:	div    BYTE PTR [edi+eax*1-0x1046d4df]
  420f41:	scas   eax,DWORD PTR es:[edi]
  420f42:	cmp    dl,0x26
  420f45:	test   al,0x4a
  420f47:	sti    
  420f48:	lock in al,0x82
  420f4b:	in     al,dx
  420f4c:	mov    dl,0xfd
  420f4e:	and    DWORD PTR [eax-0x8],0xffffffb9
  420f52:	je     0x420f24
  420f54:	call   0xe1a0:0xf6dc7eb6
  420f5b:	ins    DWORD PTR es:[edi],dx
  420f5c:	cs dec ebp
  420f5e:	xchg   edi,eax
  420f5f:	adc    DWORD PTR [ecx+edi*1],ecx
  420f62:	or     ebp,esi
  420f64:	inc    ecx
  420f65:	sub    al,0x62
  420f67:	push   esi
  420f68:	bound  ebx,QWORD PTR [ebx]
  420f6a:	mov    esp,0xf9bd74f9
  420f6f:	xchg   esp,eax
  420f70:	mov    esi,0x345d8cc7
  420f75:	dec    edx
  420f76:	retf   0xb4b5
  420f79:	nop
  420f7a:	lods   eax,DWORD PTR ds:[si]
  420f7c:	jmp    0x6a14:0x42a01fe9
  420f83:	xchg   BYTE PTR [edi],bl
  420f85:	pop    ss
  420f86:	inc    DWORD PTR ds:0x4f707598
  420f8c:	xor    al,0xdd
  420f8e:	jae    0x420fed
  420f90:	ins    DWORD PTR es:[edi],dx
  420f91:	xor    al,0x32
  420f93:	fbstp  TBYTE PTR [ebp-0x44]
  420f96:	cs mov cl,0xa6
  420f99:	popf   
  420f9a:	mov    al,0x2
  420f9c:	sahf   
  420f9d:	lock mov eax,ds:0x4a0c58f3
  420fa3:	and    eax,0xcb1dfea4
  420fa8:	dec    ebx
  420fa9:	push   ds
  420faa:	mov    WORD PTR [eax+edx*8-0x44],fs
  420fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420faf:	es pop ds
  420fb1:	jle    0x421001
  420fb3:	add    DWORD PTR [eax],ebp
  420fb5:	push   0xffffffc6
  420fb7:	or     DWORD PTR [ebx],esi
  420fb9:	retf   0x9890
  420fbc:	hlt    
  420fbd:	adc    DWORD PTR [esi+0x45],ecx
  420fc0:	and    DWORD PTR [ecx+0x18],ebx
  420fc3:	sbb    dl,BYTE PTR [edi+ebp*1+0x50]
  420fc7:	rcr    BYTE PTR [ecx-0x69a6a00a],1
  420fcd:	lds    edi,FWORD PTR [edx]
  420fcf:	xchg   ecx,eax
  420fd0:	das    
  420fd1:	clc    
  420fd2:	dec    edx
  420fd3:	arpl   cx,si
  420fd5:	or     ecx,DWORD PTR [eax+0x26c98df3]
  420fdb:	inc    ecx
  420fdc:	retf   0xeb33
  420fdf:	fcmovb st,st(3)
  420fe1:	mov    dl,0x2
  420fe3:	sbb    DWORD PTR [ebx+0x4c1adccf],eax
  420fe9:	ret    0x3651
  420fec:	push   edi
  420fed:	xor    eax,0xa2d0188c
  420ff2:	dec    esi
  420ff3:	adc    eax,0xced23ac
  420ff8:	cld    
  420ff9:	pop    esi
  420ffa:	rcr    ecx,1
  420ffc:	pop    ss
  420ffd:	jo     0x420f96
  420fff:	xchg   eax,edx
  421001:	and    eax,0x22d45767
  421006:	jne    0x420fb5
  421008:	inc    esi
  421009:	adc    eax,0x90ad9c0d
  42100e:	add    bh,BYTE PTR [ecx-0x3f]
  421011:	cmc    
  421012:	out    dx,al
  421013:	outs   dx,BYTE PTR ds:[esi]
  421014:	mov    al,ss:0x1a70df62
  42101a:	jb     0x420f9c
  42101c:	int    0xe3
  42101e:	fdiv   DWORD PTR [ecx-0x5e]
  421021:	repnz inc edi
  421023:	div    BYTE PTR [esi-0x66]
  421026:	dec    eax
  421027:	dec    edx
  421028:	mov    ebp,0xe28f11e6
  42102d:	push   cs
  42102e:	(bad)  
  421030:	leave  
  421031:	scas   eax,DWORD PTR es:[edi]
  421032:	jmp    0x420fb7
  421034:	inc    ebp
  421035:	stc    
  421036:	xchg   ah,ch
  421038:	nop
  421039:	loopne 0x420fde
  42103b:	push   edx
  42103c:	xchg   esi,eax
  42103d:	jnp    0x420fd9
  42103f:	and    edx,ebx
  421041:	mov    ecx,0x7c62a47d
  421046:	fst    QWORD PTR [eax-0x1c]
  421049:	enter  0xc760,0x40
  42104d:	rol    BYTE PTR [eax+ebp*1],cl
  421050:	push   esp
  421051:	and    ah,BYTE PTR [esi]
  421053:	ror    DWORD PTR es:[ebx+0x7f],0xdd
  421058:	jp     0x42104c
  42105a:	(bad)  
  42105b:	pop    ds
  42105c:	pop    edx
  42105d:	and    DWORD PTR ds:0xf920,edx
  421062:	and    DWORD PTR [esi-0x67728fe0],edx
  421068:	dec    edx
  421069:	imul   ebp,DWORD PTR [eax-0x78],0x14d5c8dd
  421070:	ss mov ah,0x38
  421073:	ins    DWORD PTR es:[edi],dx
  421074:	in     eax,0xc4
  421076:	push   0xffffffe9
  421078:	pop    ecx
  421079:	xchg   esp,eax
  42107a:	or     al,0x11
  42107c:	xor    al,BYTE PTR [esi-0x7d3d3f7d]
  421082:	push   0xb758c787
  421087:	sar    BYTE PTR [edi-0x17a6a05d],1
  42108d:	outs   dx,DWORD PTR ds:[esi]
  42108e:	cld    
  42108f:	xchg   esp,eax
  421090:	(bad)  
  421091:	dec    edi
  421092:	sub    dl,ch
  421094:	sti    
  421095:	shl    DWORD PTR [ebp-0x68],cl
  421098:	cmp    BYTE PTR [esi-0xf],dl
  42109b:	or     esp,eax
  42109d:	mov    eax,ds:0xbbf0b7df
  4210a2:	pop    esi
  4210a3:	or     BYTE PTR [ecx],dh
  4210a5:	iret   
  4210a6:	aam    0x7d
  4210a8:	lock lods al,BYTE PTR ds:[esi]
  4210aa:	adc    DWORD PTR [ebp+0x36],eax
  4210ad:	(bad)  
  4210ae:	scas   eax,DWORD PTR es:[edi]
  4210af:	dec    esp
  4210b0:	inc    ecx
  4210b1:	sub    bh,dh
  4210b3:	mov    ss,WORD PTR [edi+0x6e]
  4210b6:	cwde   
  4210b7:	and    eax,0x583c52c9
  4210bc:	xchg   ebp,eax
  4210bd:	xchg   DWORD PTR [esi],ebx
  4210bf:	mov    ah,0xe5
  4210c1:	push   ds
  4210c2:	(bad)  
  4210c3:	push   ebp
  4210c4:	out    dx,al
  4210c5:	adc    eax,0x5dc530eb
  4210ca:	sub    ecx,DWORD PTR [eax+0x3]
  4210cd:	inc    esi
  4210ce:	adc    ecx,DWORD PTR ds:0x20f3e29e
  4210d4:	mov    edx,0x5f2b811
  4210d9:	lahf   
  4210da:	inc    edi
  4210db:	jecxz  0x42112d
  4210dd:	mov    ebp,0xa8259efe
  4210e2:	ja     0x421138
  4210e4:	add    al,0x33
  4210e6:	dec    esi
  4210e7:	iret   
  4210e8:	pop    ecx
  4210e9:	out    0x92,al
  4210eb:	mov    edi,esp
  4210ed:	or     BYTE PTR [edx-0x7f],0xb1
  4210f1:	jg     0x4210bc
  4210f3:	pop    edx
  4210f4:	mov    bh,0xf
  4210f6:	std    
  4210f7:	pop    ss
  4210f8:	xchg   BYTE PTR [ebp-0x17a53a5f],dh
  4210fe:	mov    dh,0xcb
  421100:	lock or al,0xdc
  421103:	daa    
  421104:	iret   
  421105:	(bad)  
  421106:	shr    DWORD PTR [ecx+0x85c4cd2],cl
  42110c:	mov    edx,0xa24d31c3
  421111:	lock retf 
  421113:	dec    ebp
  421114:	add    ecx,DWORD PTR [bp+si]
  421117:	pop    edx
  421118:	icebp  
  421119:	sub    DWORD PTR [edi],esp
  42111b:	pop    ebp
  42111c:	je     0x4210f2
  42111e:	push   ebx
  42111f:	sub    al,al
  421121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421122:	(bad)  
  421124:	xor    eax,0x9199d830
  421129:	inc    eax
  42112a:	cld    
  42112b:	setns  BYTE PTR [edx-0x4ac37375]
  421132:	int3   
  421133:	retf   0x9592
  421136:	add    ecx,0xffffff97
  421139:	test   eax,0x394164dc
  42113e:	inc    esi
  42113f:	sbb    eax,edi
  421141:	das    
  421142:	call   0xec910738
  421147:	xchg   edi,eax
  421148:	jne    0x421196
  42114a:	dec    ebp
  42114b:	pop    ss
  42114c:	xchg   ebx,eax
  42114d:	rol    BYTE PTR [eax],1
  42114f:	das    
  421150:	ins    BYTE PTR es:[edi],dx
  421151:	push   ds
  421152:	test   BYTE PTR [edx+0x578a817f],0xcd
  421159:	xor    eax,0xbb28ec6a
  42115e:	adc    al,0xae
  421160:	push   ss
  421161:	xor    al,0x6a
  421163:	sti    
  421164:	fcmove st,st(1)
  421166:	mov    ebp,0x33e41989
  42116b:	das    
  42116c:	ret    0x5af2
  42116f:	in     eax,0x2b
  421171:	cmp    DWORD PTR [ebp-0x4d],0xffffffd9
  421175:	repnz mov ds:0x633fe30a,al
  42117b:	in     al,0xa5
  42117d:	and    bh,BYTE PTR [ebx+0x5c3ed28f]
  421183:	(bad)  
  421184:	mov    ch,0xe8
  421186:	fisttp QWORD PTR [eax+ebp*1]
  421189:	or     dl,BYTE PTR [esi]
  42118b:	push   ss
  42118c:	and    DWORD PTR [edx-0x67ee435d],esp
  421192:	ret    0x72e3
  421195:	inc    ebx
  421196:	pop    ebx
  421197:	shl    DWORD PTR [edi+0x7b],1
  42119a:	repnz setae BYTE PTR [edx+0x75]
  42119f:	xor    al,0xa
  4211a1:	mov    ds,WORD PTR [esp+ebp*8-0x61]
  4211a5:	push   ss
  4211a6:	out    0x90,eax
  4211a8:	mov    WORD PTR [edi+0x30e6fed],cs
  4211ae:	mov    cs,WORD PTR [eax+edx*2]
  4211b1:	xchg   edi,eax
  4211b2:	fsub   DWORD PTR [edi+0x549fefbf]
  4211b8:	sbb    bh,ch
  4211ba:	(bad)  
  4211bb:	push   ebp
  4211bc:	dec    esp
  4211bd:	xchg   DWORD PTR [ecx-0x234137b9],ecx
  4211c3:	sbb    eax,0x97f4f2f
  4211c8:	and    BYTE PTR ds:0xfb6d1cda,ah
  4211ce:	fbstp  TBYTE PTR [ebx]
  4211d0:	aaa    
  4211d1:	or     eax,0x8902f832
  4211d6:	jle    0x4211a1
  4211d8:	test   al,0x8
  4211da:	push   ebx
  4211db:	inc    esp
  4211dc:	inc    ecx
  4211dd:	(bad)  
  4211de:	into   
  4211df:	cmp    BYTE PTR [ebp-0x22],bh
  4211e2:	sahf   
  4211e3:	mov    ah,0xdd
  4211e5:	(bad)  
  4211e6:	pop    ebp
  4211e7:	xor    eax,0xb89e2cd7
  4211ec:	sbb    ebp,DWORD PTR [ebp-0x69]
  4211ef:	pop    es
  4211f0:	inc    edi
  4211f1:	pop    edi
  4211f2:	sahf   
  4211f3:	shl    BYTE PTR [esi+edi*8+0x57a54f6d],0x5d
  4211fb:	pop    edx
  4211fc:	ja     0x42122f
  4211fe:	shl    BYTE PTR [ebx],cl
  421200:	stc    
  421201:	repnz loop 0x4211ea
  421204:	idiv   ch
  421206:	js     0x4211f1
  421208:	test   eax,0x31fdcd01
  42120d:	add    ebp,DWORD PTR [ebp-0x24]
  421210:	repz xor bh,cl
  421213:	adc    DWORD PTR [edi-0x68],ecx
  421216:	sbb    dh,0x9e
  421219:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42121a:	push   ss
  42121b:	je     0x42120d
  42121d:	es pop ss
  42121f:	sub    DWORD PTR [edi+0x13],eax
  421222:	mov    dl,0x5d
  421224:	lods   al,BYTE PTR ds:[esi]
  421225:	xchg   ebp,eax
  421226:	call   0xe4fc:0x6683102b
  42122d:	gs ins DWORD PTR es:[edi],dx
  42122f:	adc    al,0x41
  421231:	or     BYTE PTR [edx+0x6],al
  421234:	dec    ebx
  421235:	sub    al,0xb7
  421237:	jnp    0x4212b4
  421239:	pop    ebp
  42123a:	push   edi
  42123b:	mov    ch,0xf2
  42123d:	arpl   WORD PTR [ebx+0x1d],dx
  421240:	das    
  421241:	fs daa 
  421243:	pop    ds
  421244:	sbb    BYTE PTR [eax-0x80],bh
  421247:	out    dx,eax
  421248:	sbb    bl,dl
  42124a:	xor    al,0x29
  42124c:	in     eax,dx
  42124d:	pop    es
  42124e:	dec    esi
  42124f:	popf   
  421250:	mov    WORD PTR [eax],ss
  421252:	sub    DWORD PTR [ebp-0x217ea8a9],ecx
  421258:	movaps xmm4,xmm7
  42125b:	add    edx,DWORD PTR [ecx+eax*1-0x26db11cb]
  421262:	jo     0x4211f2
  421264:	fs (bad) 
  421266:	dec    esi
  421267:	push   0xffffffd4
  421269:	xchg   BYTE PTR [ecx+esi*8+0x50d4dd64],ch
  421270:	mov    eax,ds:0x7016b70a
  421275:	addr16 lahf 
  421277:	add    esp,DWORD PTR [edx+0x21860f2]
  42127d:	dec    edi
  42127e:	cwde   
  42127f:	fld    DWORD PTR [eax-0x27]
  421282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421283:	outs   dx,DWORD PTR ds:[esi]
  421284:	or     eax,0x2489f041
  421289:	inc    ebx
  42128a:	ins    BYTE PTR es:[edi],dx
  42128b:	xor    cl,BYTE PTR [eax]
  42128d:	jmp    0x42125b
  42128f:	pop    esp
  421290:	ins    BYTE PTR es:[edi],dx
  421291:	lods   al,BYTE PTR ds:[esi]
  421292:	std    
  421293:	sub    al,0x3
  421295:	adc    eax,0x630fcf74
  42129a:	clc    
  42129b:	pop    edi
  42129c:	jl     0x421312
  42129e:	popf   
  42129f:	pop    ecx
  4212a0:	jp     0x4212c4
  4212a2:	ins    BYTE PTR es:[edi],dx
  4212a3:	dec    eax
  4212a4:	cli    
  4212a5:	mov    ds:0xa43a6c0a,eax
  4212aa:	inc    ecx
  4212ab:	or     eax,0xa7456633
  4212b0:	cdq    
  4212b1:	dec    edi
  4212b2:	xchg   esi,eax
  4212b3:	into   
  4212b4:	mov    ecx,0xd7903e92
  4212b9:	mov    edx,0x5c3e6d83
  4212be:	into   
  4212bf:	mov    ds:0x6454bf7c,al
  4212c4:	sub    dh,BYTE PTR [ebp-0x3c]
  4212c7:	lea    edx,[edx]
  4212c9:	mov    edx,0xa8dba363
  4212ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212cf:	sub    BYTE PTR [ebx],cl
  4212d1:	adc    DWORD PTR [ecx],edi
  4212d3:	call   DWORD PTR [ebp+0x69]
  4212d6:	xchg   DWORD PTR [ebx+0x7ec60791],edi
  4212dc:	cmp    bl,cl
  4212de:	add    ebp,esp
  4212e0:	inc    BYTE PTR [ecx-0x1a699e9d]
  4212e6:	pop    esp
  4212e7:	mov    dl,0x1d
  4212e9:	test   eax,0x1aad8ca1
  4212ee:	mov    ds:0xe813b234,al
  4212f3:	lea    ebp,[eax-0x58]
  4212f6:	push   ss
  4212f7:	inc    eax
  4212f8:	mov    eax,0x9ac2cbc7
  4212fd:	cmp    al,0x60
  4212ff:	pop    ss
  421300:	fs pop ss
  421302:	cli    
  421303:	into   
  421304:	inc    esp
  421305:	mov    WORD PTR [eax-0x33],?
  421308:	pop    ebx
  421309:	nop
  42130a:	mov    eax,ds:0x9c3c302
  42130f:	stc    
  421310:	retf   
  421311:	inc    ecx
  421312:	call   0x54672abe
  421317:	aas    
  421318:	stos   BYTE PTR es:[edi],al
  421319:	outs   dx,BYTE PTR ds:[esi]
  42131a:	ret    0x904b
  42131d:	and    cl,cl
  42131f:	xor    edi,0xfffffff3
  421322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421323:	pop    esp
  421324:	and    ecx,DWORD PTR [ecx+0x6641d50a]
  42132a:	xchg   esi,esp
  42132c:	sub    BYTE PTR [ecx+esi*8-0x5c],bh
  421330:	(bad)  
  421331:	popa   
  421332:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421333:	jno    0x4213a5
  421335:	sbb    edx,DWORD PTR [edi-0x63d09cc3]
  42133b:	inc    ebp
  42133c:	pop    ecx
  42133d:	mov    ah,0xa8
  42133f:	pop    es
  421340:	inc    ebp
  421341:	nop
  421342:	fwait
  421343:	pmaddwd mm1,QWORD PTR [ebx-0x37]
  421347:	test   BYTE PTR [edi],bh
  421349:	xchg   esp,eax
  42134a:	cli    
  42134b:	scas   eax,DWORD PTR es:[edi]
  42134c:	mov    DWORD PTR [edx-0x26],ecx
  42134f:	retf   0xa784
  421352:	sub    al,0x15
  421354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421355:	or     ah,BYTE PTR [edx-0x73]
  421358:	mov    ebx,0xd84e7b2c
  42135d:	xor    eax,0x7e475fa2
  421362:	mov    ebp,0xf03c8ebc
  421367:	xor    dl,ch
  421369:	cmp    al,0x9b
  42136b:	mov    ch,0xff
  42136d:	sahf   
  42136e:	sub    al,0xc6
  421370:	neg    eax
  421372:	mov    cl,BYTE PTR [eax+0x55]
  421375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421376:	repz or al,0xcc
  421379:	ins    BYTE PTR es:[edi],dx
  42137a:	stc    
  42137b:	mov    al,BYTE PTR [ecx-0x4db16a07]
  421381:	js     0x42131f
  421383:	add    BYTE PTR [ebx],0x70
  421386:	and    bh,0xc3
  421389:	push   ebp
  42138a:	dec    edi
  42138b:	jb     0x4213be
  42138d:	mov    bl,0xd6
  42138f:	pop    ds
  421390:	sbb    ah,BYTE PTR [ebp-0x5fecb21]
  421396:	test   bl,dl
  421398:	iret   
  421399:	psubsw mm6,QWORD PTR [edi]
  42139c:	daa    
  42139d:	push   esp
  42139e:	mov    BYTE PTR [ebx+0x9],ch
  4213a1:	cdq    
  4213a2:	in     eax,dx
  4213a3:	pop    ebx
  4213a4:	fld    DWORD PTR [edi+ecx*8-0x23f5f4a7]
  4213ab:	iret   
  4213ac:	or     al,0xc1
  4213ae:	retf   
  4213af:	push   eax
  4213b0:	lock xchg edi,eax
  4213b2:	and    DWORD PTR [edx+0x199e9ee1],esi
  4213b8:	cmp    ah,BYTE PTR [edx]
  4213ba:	jecxz  0x42140d
  4213bc:	js     0x42134c
  4213be:	cmp    al,0xc5
  4213c0:	mov    ebx,0x269f4d0f
  4213c5:	or     esi,edi
  4213c7:	inc    ebx
  4213c8:	sub    eax,0x9c8e2341
  4213cd:	or     ch,BYTE PTR [eax]
  4213cf:	xchg   DWORD PTR cs:[eax-0x795d226d],esi
  4213d6:	ja     0x421453
  4213d8:	sbb    al,0x4d
  4213da:	fild   DWORD PTR [edi-0x7f]
  4213dd:	jle    0x421361
  4213df:	pop    esi
  4213e0:	sbb    DWORD PTR [esi-0xf459aa0],ebp
  4213e6:	fucomi st,st(7)
  4213e8:	jbe    0x42145a
  4213ea:	outs   dx,BYTE PTR ds:[esi]
  4213eb:	push   0x11
  4213ed:	adc    BYTE PTR [ebx],0x71
  4213f0:	(bad)  
  4213f1:	fwait
  4213f2:	adc    ah,BYTE PTR [edi]
  4213f4:	pop    esp
  4213f5:	push   esi
  4213f6:	inc    esp
  4213f7:	sti    
  4213f8:	cmp    al,0x7a
  4213fa:	fs in  eax,dx
  4213fc:	jmp    0x42141a
  4213fe:	repnz inc eax
  421400:	xchg   ebx,eax
  421401:	(bad)  [ebp+ebx*2+0x69]
  421405:	loopne 0x4213bc
  421407:	pop    ebp
  421408:	test   al,0x2
  42140a:	pusha  
  42140b:	aaa    
  42140c:	dec    eax
  42140d:	loop   0x42142e
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xd8ae88e2
  42147c:	mov    edi,0x1cd7743
  421481:	add    BYTE PTR [ebx+0x0],bl
  421484:	add    BYTE PTR [eax],al
  421486:	outs   dx,BYTE PTR ds:[esi]
  421487:	cli    
  421488:	into   
  421489:	ja     0x421450
  42148b:	adc    al,0xd1
  42148d:	fistp  DWORD PTR [eax]
  42148f:	adc    al,0x2
  421491:	popa   
  421492:	mov    al,0x9
  421494:	inc    ecx
  421495:	adc    BYTE PTR [ecx+0x55],dh
  421498:	and    DWORD PTR [si],0x2a
  42149c:	lods   al,BYTE PTR ds:[esi]
  42149d:	mov    ch,0x6f
  42149f:	push   ecx
  4214a0:	and    ebp,DWORD PTR [ecx]
  4214a2:	test   BYTE PTR gs:[edx-0x5b012f39],bh
  4214a9:	scas   al,BYTE PTR es:[edi]
  4214aa:	xlat   BYTE PTR ds:[ebx]
  4214ab:	jae    0x421448
  4214ad:	int    0x33
  4214af:	add    eax,0x1bcd401a
  4214b4:	cwde   
  4214b5:	cmp    dl,BYTE PTR [ebx+0x46]
  4214b8:	dec    ecx
  4214b9:	add    DWORD PTR [edi+0x74],ecx
  4214bc:	repz pop edi
  4214be:	pop    es
  4214bf:	dec    ebx
  4214c0:	shr    DWORD PTR [esi],0x95
  4214c3:	xor    dl,BYTE PTR [edx-0x78]
  4214c6:	pop    edi
  4214c7:	push   es
  4214c8:	cwde   
  4214c9:	sub    DWORD PTR [esi+0x5f],0x1f
  4214cd:	mov    ebx,0xc5a5a899
  4214d2:	xchg   ebx,eax
  4214d3:	cmp    al,0x99
  4214d5:	jg     0x42154b
  4214d7:	mov    dh,0xe3
  4214d9:	inc    ebx
  4214da:	ja     0x42146c
  4214dc:	push   0x5da6d189
	...
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x692e7eda
  4214fe:	ror    ch,cl
  421500:	add    DWORD PTR [eax],eax
  421502:	pop    ebx
  421503:	add    BYTE PTR [eax],al
  421505:	add    BYTE PTR [esi+0x1d6e7835],ah
  42150b:	or     BYTE PTR [eax-0x3cd9a4d8],al
  421511:	push   ss
  421512:	sbb    eax,0x10b67847
  421517:	retf   
  421518:	cmp    al,0xd0
  42151a:	(bad)  
  42151b:	mov    al,0xf3
  42151d:	adc    ebx,DWORD PTR [ecx]
  42151f:	hlt    
  421520:	add    eax,DWORD PTR [edx+0x46]
  421523:	icebp  
  421524:	or     BYTE PTR [edx-0x5],0x54
  421528:	enter  0xf3d5,0x90
  42152c:	out    0x6,eax
  42152e:	xor    al,0x5
  421530:	mov    ds:0xf517bd0d,eax
  421535:	push   esp
  421536:	idiv   DWORD PTR [ebp+eiz*8-0x24]
  42153a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42153b:	std    
  42153c:	sub    BYTE PTR [esi],0x42
  42153f:	je     0x42156b
  421541:	dec    ebp
  421542:	mov    eax,ds:0x3385c2e9
  421547:	inc    ecx
  421548:	mov    ebp,0x45c22886
  42154d:	jle    0x4214ef
  42154f:	dec    edx
  421550:	out    0xec,al
  421552:	pusha  
  421553:	test   cl,0x59
  421556:	ss jp  0x421532
  421559:	aas    
  42155a:	mov    bh,0x2
  42155c:	retf   0x9e3e
  42155f:	pusha  
  421560:	int    0x0
	...
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2+0x62753c41],0x2d
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	pop    ebx
  421583:	add    BYTE PTR [eax],al
  421585:	add    ah,bl
  421587:	add    eax,0xe11c5df0
  42158c:	out    dx,eax
  42158d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42158e:	loopne 0x421527
  421590:	ss cmp dh,al
  421593:	xor    bl,BYTE PTR [edx]
  421595:	push   edx
  421596:	cmp    BYTE PTR [edx+0x3004238a],dh
  42159c:	xchg   esi,eax
  42159d:	pop    eax
  42159e:	push   es
  42159f:	add    DWORD PTR [edx+0xf],ecx
  4215a2:	sbb    eax,0x2af24c8a
  4215a7:	adc    DWORD PTR [ecx],0x4c0489ef
  4215ad:	int3   
  4215ae:	push   edx
  4215af:	xchg   edi,eax
  4215b0:	sbb    dh,bh
  4215b2:	mov    al,ds:0xa8cc11ae
  4215b7:	ins    BYTE PTR es:[edi],dx
  4215b8:	aas    
  4215b9:	adc    ebp,esi
  4215bb:	adc    eax,0x1860583d
  4215c0:	ins    DWORD PTR es:[edi],dx
  4215c1:	leave  
  4215c2:	mov    dl,0x3f
  4215c4:	cmp    DWORD PTR [ebp+0x778c5356],edx
  4215ca:	xor    al,0xf2
  4215cc:	push   ebx
  4215cd:	cwde   
  4215ce:	adc    eax,0x2234b39c
  4215d3:	jmp    0xfb07d44
  4215d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215d9:	ins    BYTE PTR es:[edi],dx
  4215da:	add    dh,ah
  4215dc:	in     al,dx
  4215dd:	pop    edi
  4215de:	sub    eax,0x93de
	...
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [edi],ch
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	into   
  4215fb:	fdivr  st,st(3)
  4215fd:	aas    
  4215fe:	mov    dh,cl
  421600:	add    DWORD PTR [eax],eax
  421602:	pop    ebx
  421603:	add    BYTE PTR [eax],al
  421605:	add    BYTE PTR [ecx+0x43106d3b],ch
  42160b:	and    eax,0x8c4b7cff
  421610:	cmp    bl,al
  421612:	jecxz  0x42163f
  421614:	sti    
  421615:	ins    DWORD PTR es:[edi],dx
  421616:	test   al,0x9b
  421618:	sbb    BYTE PTR [edx],dl
  42161a:	push   esp
  42161b:	lds    ebx,FWORD PTR [ebp+0x30]
  42161e:	pop    esp
  42161f:	inc    ebp
  421620:	ss lock push edx
  421623:	dec    edi
  421624:	shl    BYTE PTR [ebp+0x44],1
  421627:	xor    DWORD PTR [edi-0x44],ebp
  42162a:	rcr    DWORD PTR [edi],cl
  42162c:	pop    ss
  42162d:	into   
  42162e:	mov    al,BYTE PTR [ebx+0x7b5e26a6]
  421634:	mov    ch,0x60
  421636:	jo     0x4215c8
  421638:	or     BYTE PTR [esi-0x49870505],al
  42163e:	(bad)  
  42163f:	mov    bh,0xd0
  421641:	or     esi,DWORD PTR [edx+ebx*2+0x6]
  421645:	xchg   edi,eax
  421646:	dec    edx
  421647:	add    bl,0x10
  42164a:	and    ecx,esp
  42164c:	dec    ebx
  42164d:	or     BYTE PTR [eax],al
  42164f:	and    al,0x78
  421651:	inc    eax
  421652:	cwde   
  421653:	retf   
  421654:	sub    eax,0xf8c71e27
  421659:	(bad)  
  42165a:	sbb    DWORD PTR [esi-0x20c65bc9],eax
  421660:	jle    0x421662
	...
  42166e:	retf   0x76a0
  421671:	dec    ebp
  421672:	jle    0x421653
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0xbe10652c,al
  42167e:	jecxz  0x42164e
  421680:	add    DWORD PTR [eax],eax
  421682:	pop    ebx
  421683:	add    BYTE PTR [eax],al
  421685:	add    BYTE PTR [ecx+0x383bd57e],ch
  42168b:	xchg   ebp,eax
  42168c:	cmc    
  42168d:	push   esp
  42168e:	xor    edx,0xffffffae
  421691:	xor    ah,BYTE PTR [ecx]
  421693:	retfw  0x228f
  421697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421698:	mov    bl,0x74
  42169a:	add    al,0xed
  42169c:	call   0x3b03:0xe653bbb
  4216a3:	leave  
  4216a4:	jno    0x4216e4
  4216a6:	rcl    DWORD PTR [ecx+0x281168e5],1
  4216ac:	shr    DWORD PTR [edi],1
  4216ae:	jp     0x42166b
  4216b0:	mov    ah,ch
  4216b2:	shl    BYTE PTR [edx],cl
  4216b4:	add    bh,dl
  4216b6:	call   0xfc080d08
  4216bb:	mov    ebp,0xff30bee2
  4216c0:	lods   al,BYTE PTR cs:[esi]
  4216c2:	pop    ebp
  4216c3:	in     eax,dx
  4216c4:	mov    bh,0xc5
  4216c6:	inc    ebp
  4216c7:	sub    ah,dh
  4216c9:	mov    bl,0xbc
  4216cb:	mov    esp,0xdf0e76d7
  4216d0:	and    eax,0x80aa5cd6
  4216d5:	cmp    eax,0x954cf466
  4216da:	(bad)  
  4216db:	jg     0x421749
  4216dd:	add    BYTE PTR fs:[esi-0x78],cl
	...
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	cwde   
  4216fb:	in     eax,0x9
  4216fd:	icebp  
  4216fe:	ds iret 
  421700:	add    DWORD PTR [eax],eax
  421702:	pop    ebx
  421703:	add    BYTE PTR [eax],al
  421705:	add    bh,ch
  421707:	or     al,0x1b
  421709:	mov    WORD PTR [ebx-0x7a],es
  42170c:	repz div ebx
  42170f:	add    al,0x67
  421711:	mov    ds:0x5cea948b,al
  421716:	adc    dl,dl
  421718:	mov    bh,0x5f
  42171a:	aad    0xec
  42171c:	pop    ebx
  42171d:	rol    ecx,cl
  42171f:	ds hlt 
  421721:	adc    bh,al
  421723:	xchg   BYTE PTR [ecx],dh
  421725:	idiv   esi
  421727:	retf   0xed7c
  42172a:	lock aaa 
  42172c:	adc    cl,BYTE PTR [ebx-0x2c]
  42172f:	add    al,0xf2
  421731:	cmp    eax,0x8c04e782
  421736:	dec    edx
  421737:	mov    ah,ah
  421739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42173a:	xchg   ebp,eax
  42173b:	sbb    dh,bh
  42173d:	jle    0x421719
  42173f:	mov    WORD PTR [ecx],ds
  421741:	xchg   esi,eax
  421742:	retf   0x2872
  421745:	xchg   dh,bl
  421747:	je     0x4217b2
  421749:	inc    edi
  42174a:	arpl   si,ax
  42174c:	cmp    DWORD PTR [edx],esi
  42174e:	cmp    dl,BYTE PTR [esi+0x52286c8d]
  421754:	nop
  421755:	int    0xc8
  421757:	cld    
  421758:	call   0xc8233445
  42175d:	inc    ebx
  42175e:	jl     0x42172a
  421760:	sub    al,BYTE PTR [eax]
	...
  42176e:	push   edx
  42176f:	xor    al,0x40
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0x236a4e09
  42177b:	inc    edx
  42177c:	daa    
  42177d:	sahf   
  42177e:	cdq    
  42177f:	iret   
  421780:	add    DWORD PTR [eax],eax
  421782:	pop    ebx
  421783:	add    BYTE PTR [eax],al
  421785:	add    BYTE PTR [ebx-0x7b3f7fa7],cl
  42178b:	test   ebp,esp
  42178d:	pop    eax
  42178e:	mov    bl,0x3b
  421790:	ficomp DWORD PTR [ebp-0x73280e8]
  421796:	retf   
  421797:	add    edx,DWORD PTR [edx]
  421799:	pop    edx
  42179a:	in     eax,0x1e
  42179c:	sbb    al,0x9b
  42179e:	dec    DWORD PTR [eax-0x6a]
  4217a1:	push   ecx
  4217a2:	fist   WORD PTR [eax+0x49db12ec]
  4217a8:	push   ecx
  4217a9:	xor    al,BYTE PTR [ecx]
  4217ab:	jae    0x421804
  4217ad:	ins    BYTE PTR es:[edi],dx
  4217ae:	repz jno 0x4217fc
  4217b1:	ja     0x42173f
  4217b3:	cmp    ecx,eax
  4217b5:	ret    
  4217b6:	jns    0x421798
  4217b8:	cld    
  4217b9:	enter  0x3388,0x5e
  4217bd:	jae    0x421776
  4217bf:	lods   eax,DWORD PTR ds:[esi]
  4217c0:	popf   
  4217c1:	icebp  
  4217c2:	pop    ss
  4217c3:	or     eax,DWORD PTR [esi+0x26]
  4217c6:	les    esi,FWORD PTR [eax+edi*2]
  4217c9:	adc    al,0x19
  4217cb:	in     al,0xeb
  4217cd:	or     DWORD PTR [eax-0x4e],eax
  4217d0:	pop    ecx
  4217d1:	or     bl,BYTE PTR [edi+edi*1]
  4217d4:	and    ecx,DWORD PTR [ecx]
  4217d6:	test   eax,0x36170735
  4217db:	sbb    ch,BYTE PTR [ebp+0x27]
  4217de:	(bad)  
  4217e0:	out    0x0,eax
	...
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	jmp    0x421851
  4217fc:	shl    DWORD PTR [ecx],cl
  4217fe:	add    al,0xe1
  421800:	add    DWORD PTR [eax],eax
  421802:	pop    ebx
  421803:	add    BYTE PTR [eax],al
  421805:	add    BYTE PTR [edx],ah
  421807:	push   ebp
  421808:	inc    ebp
  421809:	jns    0x421840
  42180b:	inc    edx
  42180c:	cs jne 0x42183e
  42180f:	loopne 0x4217f8
  421811:	rcl    DWORD PTR [ecx+0x16],cl
  421814:	and    eax,0xd1e2cfa2
  421819:	mov    bl,ch
  42181b:	and    dl,BYTE PTR [esi+0x2f]
  42181e:	rcr    DWORD PTR [edi-0x722c883e],1
  421824:	or     eax,0x4d5e190e
  421829:	sbb    al,0xf9
  42182b:	jg     0x4218a2
  42182d:	das    
  42182e:	inc    esp
  42182f:	xchg   edi,eax
  421830:	mov    ds:0x4cba4894,eax
  421835:	push   edx
  421836:	push   0x3b
  421838:	cmp    al,0x47
  42183a:	loope  0x421881
  42183c:	sbb    al,BYTE PTR ds:0x2a5be8b8
  421842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421843:	xor    ebp,eax
  421845:	test   eax,0xcb5b9b09
  42184a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42184b:	add    BYTE PTR [eax],al
  42184d:	push   ss
  42184e:	jb     0x421893
  421850:	sub    cl,BYTE PTR [ebp-0x55]
  421853:	(bad)  
  421854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421855:	test   al,0x71
  421857:	add    al,0x7
  421859:	sbb    BYTE PTR [ebp+0x57],0x4c
  42185d:	pop    ss
  42185e:	jecxz  0x4218da
  421860:	inc    esp
	...
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	int3   
  42187b:	cmp    eax,0xe15f92a5
  421880:	add    DWORD PTR [eax],eax
  421882:	pop    ebx
  421883:	add    BYTE PTR [eax],al
  421885:	add    BYTE PTR ds:0xf5cec1a5,cl
  42188b:	add    esi,ecx
  42188d:	std    
  42188e:	pop    ebx
  42188f:	ud0    ebx,DWORD PTR [edi+0x1cbcfba7]
  421896:	mov    ch,0x9
  421898:	inc    eax
  421899:	daa    
  42189a:	je     0x4218ba
  42189c:	sbb    edx,DWORD PTR [ecx-0x4d]
  42189f:	cmc    
  4218a0:	jne    0x4218ab
  4218a2:	leave  
  4218a3:	xchg   ebx,eax
  4218a4:	je     0x42185e
  4218a6:	popf   
  4218a7:	idiv   ah
  4218a9:	mov    esp,0xa36cddb4
  4218ae:	or     ah,al
  4218b0:	cmc    
  4218b1:	loope  0x42185b
  4218b3:	xchg   ecx,eax
  4218b4:	in     al,0x80
  4218b6:	push   0x46
  4218b8:	pop    es
  4218b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218ba:	add    DWORD PTR [ecx+0x59aa2e3e],0x996d3476
  4218c4:	adc    cl,BYTE PTR [eax-0x683c785f]
  4218ca:	out    dx,al
  4218cb:	xchg   edi,eax
  4218cc:	call   0xcc5e96bc
  4218d1:	sbb    esi,eax
  4218d3:	sub    ebp,DWORD PTR [ebp+0x468b682a]
  4218d9:	push   ds
  4218da:	add    BYTE PTR [edx-0x7ea5d9c6],bl
  4218e0:	dec    eax
	...
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0xfe98da72
  4218fc:	aam    0x1d
  4218fe:	mov    edx,0x5b0001e1
  421903:	add    BYTE PTR [eax],al
  421905:	add    BYTE PTR [ebp+0x31],bl
  421908:	or     DWORD PTR [ebx-0x12],edx
  42190b:	lock call 0x5a33ab90
  421911:	and    eax,0x70874276
  421916:	loop   0x4218ec
  421918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421919:	inc    ecx
  42191a:	not    edi
  42191c:	das    
  42191d:	lock add BYTE PTR [ecx+0x16e2ec1d],dl
  421924:	mov    WORD PTR fs:[eax],fs
  421927:	xor    al,0xfa
  421929:	icebp  
  42192a:	jmp    0xc1945b69
  42192f:	xchg   BYTE PTR [ebx],al
  421931:	popf   
  421932:	loope  0x421902
  421934:	push   edx
  421935:	xchg   edx,eax
  421936:	mov    WORD PTR [ecx+0x665fdd17],cs
  42193c:	adc    eax,0x81e05d68
  421941:	add    edx,DWORD PTR [eax-0x346048e3]
  421947:	add    ch,BYTE PTR [esi]
  421949:	dec    edx
  42194a:	js     0x42196a
  42194c:	or     ebp,edx
  42194e:	fnstsw WORD PTR [ecx+0x13]
  421951:	dec    edi
  421952:	xchg   esp,eax
  421953:	data16 repnz mov cs,WORD PTR [eax+ecx*4+0x595ec968]
  42195c:	in     eax,dx
  42195d:	into   
  42195e:	ret    0xd3d8
	...
  42196d:	add    bl,al
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x67e6a347,eax
  42197d:	arpl   WORD PTR ds:0x5b0001e2,dx
  421983:	add    BYTE PTR [eax],al
  421985:	add    BYTE PTR [eax-0x4a418341],dl
  42198b:	ins    BYTE PTR es:[edi],dx
  42198c:	xchg   DWORD PTR [ecx+0x26bfc3fa],esi
  421992:	shr    BYTE PTR [eax+0x23880f6],cl
  421998:	inc    ebp
  421999:	or     eax,DWORD PTR [ebp-0x46]
  42199c:	and    BYTE PTR [edx+0x55814abe],ch
  4219a2:	mov    ds:0x1544ed09,al
  4219a7:	dec    ecx
  4219a8:	pop    ss
  4219a9:	sub    edi,DWORD PTR [eax]
  4219ab:	std    
  4219ac:	popf   
  4219ad:	not    DWORD PTR [ecx+0x4b1347a8]
  4219b3:	aas    
  4219b4:	test   eax,ebx
  4219b6:	push   edx
  4219b7:	adc    al,BYTE PTR ds:0x45326a55
  4219bd:	hlt    
  4219be:	jge    0x421a01
  4219c0:	out    0x7,eax
  4219c2:	adc    bl,BYTE PTR [eax]
  4219c4:	(bad)  
  4219c5:	fwait
  4219c6:	adc    BYTE PTR [edx-0x4380f6b0],cl
  4219cc:	in     eax,dx
  4219cd:	xor    DWORD PTR [esi-0x2f],0x4b4e2d54
  4219d4:	pop    esi
  4219d5:	retf   0x7f0b
  4219d8:	aas    
  4219d9:	arpl   WORD PTR [esi+0x798b145f],bp
  4219df:	jne    0x421a1d
	...
  4219ed:	add    cl,bl
  4219ef:	ret    0x4905
  4219f2:	pop    ds
  4219f3:	iret   
  4219f4:	fst    st(2)
  4219f6:	enter  0xf86f,0xd2
  4219fa:	sub    al,0x95
  4219fc:	(bad)  
  4219fd:	sub    eax,0x1e270
  421a02:	aas    
  421a03:	add    BYTE PTR [eax],al
  421a05:	add    ah,al
  421a07:	mov    bl,0x2b
  421a09:	ret    
  421a0a:	ja     0x4219e6
  421a0c:	pushf  
  421a0d:	mov    ch,BYTE PTR [ebp+0x59]
  421a10:	aam    0x59
  421a12:	inc    ecx
  421a13:	pusha  
  421a14:	and    ah,ch
  421a16:	jmp    0xee77:0xf06aa5e4
  421a1d:	fnstsw WORD PTR ds:0xd77ae8f4
  421a23:	or     ecx,DWORD PTR [ecx]
  421a25:	and    ah,cl
  421a27:	popf   
  421a28:	and    cl,dh
  421a2a:	adc    DWORD PTR [ebx-0x7dc659fe],0xffffff83
  421a31:	dec    esi
  421a32:	js     0x421a43
  421a34:	pop    ss
  421a35:	leave  
  421a36:	mov    eax,ds:0x29935192
  421a3b:	xor    esi,esp
  421a3d:	mov    edx,DWORD PTR ds:0x98cdb16d
  421a43:	jne    0x421a54
	...
  421a4d:	add    BYTE PTR [eax],al
  421a4f:	nop
  421a50:	inc    edx
  421a51:	add    BYTE PTR [eax+edx*4],al
  421a54:	inc    edx
  421a55:	add    BYTE PTR [eax],cl
  421a57:	nop
  421a58:	inc    edx
  421a59:	add    BYTE PTR [eax+edx*4],cl
  421a5c:	inc    edx
  421a5d:	add    BYTE PTR [eax],dl
  421a5f:	nop
  421a60:	inc    edx
  421a61:	add    BYTE PTR [eax+edx*4],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],bl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],bl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],al
  421a6f:	mov    al,ds:0xa0040042
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],cl
  421a77:	mov    al,ds:0xa00c0042
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],dl
  421a7f:	mov    al,ds:0xa0140042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],bl
  421a87:	mov    al,ds:0xa01c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],al
  421a8f:	mov    al,0x42
  421a91:	add    BYTE PTR [eax+esi*4],al
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],cl
  421a97:	mov    al,0x42
  421a99:	add    BYTE PTR [eax+esi*4],cl
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],dl
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],dl
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],bl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],bl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax+0x66],bh
  421ab0:	ins    BYTE PTR es:[edi],dx
  421ab1:	jp     0x421b0a
  421ab3:	jbe    0x421afc
  421ab5:	ja     0x421afa
  421ab7:	js     0x421b01
  421ab9:	jno    0x421b1e
  421abb:	inc    edx
  421abc:	inc    bx
  421abe:	push   ebp
  421abf:	jno    0x421b37
  421ac1:	ja     0x421b2a
  421ac3:	dec    edi
  421ac4:	dec    esp
  421ac5:	dec    ebp
  421ac6:	inc    edx
  421ac7:	jno    0x421b3a
  421ac9:	jae    0x421b1e
  421acb:	push   eax
  421acc:	arpl   WORD PTR [ebx+0x76],dx
  421acf:	push   ds
  421ad0:	inc    edx
  421ad1:	add    BYTE PTR [esi+0x1e],bh
  421ad4:	inc    edx
  421ad5:	add    BYTE PTR [esi],dl
  421ad7:	sbb    eax,0xbef0042
  421adc:	mov    dl,0xe
  421ade:	jns    0x421b2e
  421ae0:	xor    BYTE PTR [esi-0x79],cl
  421ae3:	dec    edi
  421ae4:	cmp    eax,0x3e4faf4e
  421ae9:	dec    esi
  421aea:	js     0x421b3a
  421aec:	cmp    ecx,DWORD PTR [esi-0x64]
  421aef:	dec    edi
  421af0:	inc    esp
  421af1:	dec    esi
  421af2:	jae    0x421b42
  421af4:	inc    ecx
  421af5:	dec    esi
  421af6:	xor    BYTE PTR [esi+0x40],cl
  421af9:	dec    esi
  421afa:	pop    esp
  421afb:	pop    ebp
  421afc:	pop    edi
  421afd:	push   edx
  421afe:	cmp    DWORD PTR [esi+0x79],ecx
  421b01:	dec    esi
  421b02:	xor    BYTE PTR [esi-0x79],cl
  421b05:	dec    edi
  421b06:	cmp    eax,0x3e4faf4e
  421b0b:	dec    esi
  421b0c:	js     0x421b5c
  421b0e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b11:	dec    edi
  421b12:	inc    esp
  421b13:	dec    esi
  421b14:	mov    DWORD PTR [edi+0x41],ecx
  421b17:	dec    esi
  421b18:	xor    BYTE PTR [esi+0x40],cl
  421b1b:	dec    esi
  421b1c:	pop    esp
  421b1d:	ins    DWORD PTR es:[edi],dx
  421b1e:	pop    edi
  421b1f:	bound  edi,QWORD PTR [ecx]
  421b21:	dec    esi
  421b22:	jns    0x421b72
  421b24:	xor    BYTE PTR [esi-0x80],cl
  421b27:	dec    edi
  421b28:	cmp    eax,0x394e734e
  421b2d:	dec    esi
  421b2e:	mov    ds:0x304e3a4f,al
  421b33:	dec    esi
  421b34:	inc    esi
  421b35:	dec    esi
  421b36:	pop    esp
  421b37:	jge    0x421b98
  421b39:	jb     0x421baa
  421b3b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b3f:	xchg   ebx,eax
  421b40:	jns    0x421ad2
  421b42:	aas    
  421b43:	dec    esi
  421b44:	test   BYTE PTR [edi+0x30],cl
  421b47:	dec    esi
  421b48:	test   BYTE PTR [edi+0x3c],cl
  421b4b:	dec    esi
  421b4c:	mov    ds:0x734e394f,al
  421b51:	dec    esi
  421b52:	inc    ebp
  421b53:	dec    esi
  421b54:	xor    BYTE PTR [esi+0x44],cl
  421b57:	dec    esi
  421b58:	pop    esp
  421b59:	lea    ebx,[edi-0x7e]
  421b5c:	outs   dx,DWORD PTR ds:[esi]
  421b5d:	xchg   edx,eax
  421b5e:	outs   dx,BYTE PTR ds:[esi]
  421b5f:	xchg   ebx,eax
  421b60:	jle    0x421b05
  421b62:	jns    0x421b04
  421b64:	aas    
  421b65:	dec    esi
  421b66:	test   BYTE PTR [edi+0x30],cl
  421b69:	dec    esi
  421b6a:	test   BYTE PTR [edi+0x3c],cl
  421b6d:	dec    esi
  421b6e:	mov    ds:0x894e394f,al
  421b73:	dec    edi
  421b74:	inc    ebp
  421b75:	dec    esi
  421b76:	xor    BYTE PTR [esi+0x44],cl
  421b79:	dec    esi
  421b7a:	pop    esp
  421b7b:	popf   
  421b7c:	pop    edi
  421b7d:	xchg   edx,eax
  421b7e:	outs   dx,DWORD PTR ds:[esi]
  421b7f:	mov    ds:0xb37ea36e,al
  421b84:	jns    0x421b36
  421b86:	aas    
  421b87:	dec    esi
  421b88:	mov    cs,WORD PTR [edi+0x30]
  421b8b:	dec    esi
  421b8c:	lods   al,BYTE PTR ds:[esi]
  421b8d:	dec    edi
  421b8e:	cmp    eax,0x394e734e
  421b93:	dec    esi
  421b94:	mov    eax,ds:0x304e3a4f
  421b99:	dec    esi
  421b9a:	inc    esp
  421b9b:	dec    esi
  421b9c:	pop    esp
  421b9d:	lods   eax,DWORD PTR ds:[esi]
  421b9e:	pop    edi
  421b9f:	mov    ds:0xb36eb26f,al
  421ba4:	jle    0x421b69
  421ba6:	jns    0x421b68
  421ba8:	aas    
  421ba9:	dec    esi
  421baa:	mov    cs,WORD PTR [edi+0x30]
  421bad:	dec    esi
  421bae:	lods   al,BYTE PTR ds:[esi]
  421baf:	dec    edi
  421bb0:	cmp    eax,0x394e7e4e
  421bb5:	dec    esi
  421bb6:	lahf   
  421bb7:	dec    edi
  421bb8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bbb:	dec    esi
  421bbc:	inc    ebp
  421bbd:	dec    esi
  421bbe:	pop    esp
  421bbf:	mov    ebp,0xc26fb25f
  421bc4:	outs   dx,BYTE PTR ds:[esi]
  421bc5:	ret    
  421bc6:	jle    0x421b9b
  421bc8:	jns    0x421b9a
  421bca:	aas    
  421bcb:	dec    esi
  421bcc:	mov    cs,WORD PTR [edi+0x30]
  421bcf:	dec    esi
  421bd0:	lods   al,BYTE PTR ds:[esi]
  421bd1:	dec    edi
  421bd2:	cmp    eax,0x394f804e
  421bd7:	dec    esi
  421bd8:	lods   al,BYTE PTR ds:[esi]
  421bd9:	dec    edi
  421bda:	cmp    cl,BYTE PTR [esi+0x30]
  421bdd:	dec    esi
  421bde:	inc    esi
  421bdf:	dec    esi
  421be0:	pop    esp
  421be1:	int    0x5f
  421be3:	ret    0xd26f
  421be6:	outs   dx,BYTE PTR ds:[esi]
  421be7:	sar    DWORD PTR [esi-0x1d],cl
  421bea:	jns    0x421bcc
  421bec:	aas    
  421bed:	dec    esi
  421bee:	mov    cs,WORD PTR [edi+0x30]
  421bf1:	dec    esi
  421bf2:	lods   al,BYTE PTR ds:[esi]
  421bf3:	dec    edi
  421bf4:	cmp    eax,0x394f834e
  421bf9:	dec    esi
  421bfa:	mov    ds:0x304e3a4f,al
  421bff:	dec    esi
  421c00:	inc    esp
  421c01:	dec    esi
  421c02:	pop    esp
  421c03:	fstp   QWORD PTR [edi-0x2e]
  421c06:	outs   dx,DWORD PTR ds:[esi]
  421c07:	loop   0x421c77
  421c09:	jecxz  0x421c89
  421c0b:	repz jns 0x421bfe
  421c0e:	aas    
  421c0f:	dec    esi
  421c10:	lea    ecx,[edi+0x30]
  421c13:	dec    esi
  421c14:	lahf   
  421c15:	dec    edi
  421c16:	cmp    eax,0x3c4fa04e
  421c1b:	dec    esi
  421c1c:	xor    BYTE PTR [esi+0x3f],cl
  421c1f:	dec    esi
  421c20:	pop    esp
  421c21:	in     eax,dx
  421c22:	pop    edi
  421c23:	loop   0x421c94
  421c25:	repnz outs dx,BYTE PTR ds:[esi]
  421c27:	repz jle 0x421c2d
  421c2a:	jns    0x421c2c
  421c2c:	jle    0x421c41
  421c2e:	jns    0x421c40
  421c30:	cmp    al,0x4e
  421c32:	jg     0x421c82
  421c34:	xor    BYTE PTR [esi-0x65],cl
  421c37:	dec    edi
  421c38:	xor    cl,BYTE PTR [esi-0x80]
  421c3b:	dec    edi
  421c3c:	cmp    al,0x4e
  421c3e:	lods   eax,DWORD PTR ds:[esi]
  421c3f:	dec    edi
  421c40:	cmp    ecx,DWORD PTR [esi+0x30]
  421c43:	dec    esi
  421c44:	inc    ebp
  421c45:	dec    esi
  421c46:	pop    esp
  421c47:	or     eax,0x126f025f
  421c4c:	outs   dx,BYTE PTR ds:[esi]
  421c4d:	adc    edi,DWORD PTR [esi+0x23]
  421c50:	jns    0x421c72
  421c52:	aas    
  421c53:	dec    esi
  421c54:	add    BYTE PTR [eax],al
  421c56:	ficomp WORD PTR [edx]
  421c58:	inc    edx
  421c59:	add    dl,dl
  421c5b:	sbb    al,0x42
  421c5d:	add    dl,bl
  421c5f:	sbb    al,0x42
  421c61:	add    BYTE PTR [edx-0x11ffbde2],al
  421c67:	sbb    eax,0x1e720042
  421c6c:	inc    edx
  421c6d:	add    BYTE PTR [edx-0x41ffbde4],bh
  421c73:	sbb    al,0x42
  421c75:	add    BYTE PTR [esi+0x1e],ch
  421c78:	inc    edx
  421c79:	add    BYTE PTR [edx],ah
  421c7b:	sbb    eax,0xa90d0042
  421c80:	pushf  
  421c81:	clc    
  421c82:	ss mov edx,0x1cd6f89c
  421c88:	inc    edx
  421c89:	add    BYTE PTR [esi-0x45ffbde3],ah
  421c8f:	sbb    eax,0x1dc60042
  421c94:	inc    edx
  421c95:	add    dh,dl
  421c97:	sbb    eax,0x1d0e0042
  421c9c:	inc    edx
  421c9d:	add    dl,bl
  421c9f:	sbb    al,BYTE PTR [edx+0x0]
  421ca2:	cs sbb eax,0x1d1e0042
  421ca8:	inc    edx
  421ca9:	add    BYTE PTR [esi-0x49ffbde2],al
  421caf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cb6:	loop   0x421cd4
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esp+ebx*1],dl
  421cbc:	push   ss
  421cbd:	or     DWORD PTR [eax],0x7050d
  421cc3:	add    BYTE PTR [eax+0x0],al
  421cc6:	cmp    al,BYTE PTR [edx+0x3e]
  421cc9:	ds enter 0x4279,0x0
  421cce:	ins    DWORD PTR es:[edi],dx
  421ccf:	push   ebp
  421cd0:	inc    esp
  421cd1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421cd7:	in     eax,dx
  421cd8:	inc    BYTE PTR [edi]
  421cda:	aas    
  421cdb:	cli    
  421cdc:	mov    ds:0x421cca05,eax
  421ce1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421ce7:	xchg   esi,eax
  421ce8:	pushf  
  421ce9:	clc    
  421cea:	mov    ah,0x95
  421cec:	pushf  
  421ced:	clc    
  421cee:	mov    ebx,0xbaf89c95
  421cf3:	xchg   ebp,eax
  421cf4:	pushf  
  421cf5:	clc    
  421cf6:	mov    ecx,0xb8f89c95
  421cfb:	xchg   ebp,eax
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    edi,0xbef89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ebp,0xa6f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	jmp    0x421a:0xd26003f9
  421d15:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d19:	add    BYTE PTR [ebx+0x77],dl
  421d1c:	jbe    0x421d6e
  421d1e:	mov    dh,0x85
  421d20:	pushf  
  421d21:	clc    
  421d22:	sbb    ecx,ebp
  421d24:	push   eax
  421d25:	pop    es
  421d26:	sbb    BYTE PTR [ebx],cl
  421d28:	add    BYTE PTR [eax],al
  421d2a:	into   
  421d2b:	sbb    al,BYTE PTR [edx+0x0]
  421d2e:	sbb    ecx,DWORD PTR [ebx]
  421d30:	add    al,0xe
	...
  421d62:	ins    BYTE PTR es:[edi],dx
  421d63:	inc    eax
  421d64:	inc    edx
  421d65:	add    BYTE PTR [esi+0x66f89c85],dh
  421d6b:	add    BYTE PTR [edx+0x0],ch
  421d6e:	add    BYTE PTR [si+0x0],ah
  421d72:	push   0x64006700
  421d77:	add    BYTE PTR [esi+0x0],ah
  421d7a:	push   0x0
  421d7c:	push   0x66006400
  421d81:	add    BYTE PTR [edi+0x0],ah
  421d84:	push   0x0
  421d86:	push   0x66006700
  421d8b:	add    BYTE PTR [eax+0x0],ch
  421d8e:	add    BYTE PTR [bp+0x0],ah
  421d92:	push   0x66006700
	...
  421d9f:	add    BYTE PTR [eax],al
  421da1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421da7:	dec    edi
  421da8:	lahf   
  421da9:	dec    edi
  421daa:	mov    ds:0x9f4fa64f,al
  421daf:	dec    edi
  421db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421db1:	dec    edi
  421db2:	ins    DWORD PTR es:[edi],dx
  421db3:	dec    esi
  421db4:	bound  ecx,QWORD PTR [esi+0x30]
  421db7:	dec    esi
  421db8:	add    BYTE PTR [eax],al
  421dba:	cdq    
  421dbb:	dec    edi
  421dbc:	pushf  
  421dbd:	dec    edi
  421dbe:	fwait
  421dbf:	dec    edi
  421dc0:	ins    DWORD PTR es:[edi],dx
  421dc1:	dec    esi
  421dc2:	bound  ecx,QWORD PTR [esi+0x30]
  421dc5:	dec    esi
  421dc6:	scas   eax,DWORD PTR es:[edi]
  421dc7:	dec    edi
  421dc8:	lods   eax,DWORD PTR ds:[esi]
  421dc9:	dec    edi
  421dca:	lahf   
  421dcb:	dec    edi
  421dcc:	mov    ds:0x624e6d4f,al
  421dd1:	dec    esi
  421dd2:	xor    BYTE PTR [esi+0x0],cl
  421dd5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421ddb:	dec    edi
  421ddc:	test   eax,0xa04f934f
  421de1:	dec    edi
  421de2:	fwait
  421de3:	dec    edi
  421de4:	xor    BYTE PTR [esi+0x0],cl
  421de7:	add    BYTE PTR [eax],al
  421de9:	add    BYTE PTR [eax],al
  421deb:	add    BYTE PTR [eax],al
  421ded:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421df4:	mov    WORD PTR [ebp-0x32734274],gs
  421dfa:	mov    ebp,ds
  421dfc:	mov    ebp,gs
  421dfe:	mov    ebp,?
  421e00:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e06:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e0c:	mov    WORD PTR [edx-0x74],?
  421e0f:	jae    0x421d9d
  421e11:	jo     0x421d9f
  421e13:	jno    0x421da1
  421e15:	jbe    0x421da3
  421e17:	ja     0x421da5
  421e19:	je     0x421da7
  421e1b:	jne    0x421da9
  421e1d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e24:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e2a:	lods   al,BYTE PTR ds:[esi]
  421e2b:	jge    0x421de9
  421e2d:	jge    0x421dcd
  421e2f:	(bad)  
  421e30:	jns    0x421ea5
  421e32:	mov    ecx,0x7d738cb1
  421e37:	ins    DWORD PTR es:[edi],dx
  421e38:	enter  0x9fc6,0x26
  421e3c:	jb     0x421e41
  421e3e:	test   eax,0xb956bb17
  421e43:	hlt    
  421e44:	test   al,0x37
  421e46:	test   al,0x7e
  421e48:	fnstenv [ecx-0x6a]
  421e4b:	mov    cl,0x6a
  421e4d:	push   0xffffffce
  421e4f:	or     BYTE PTR [edx],bl
  421e51:	xlat   BYTE PTR ds:[ebx]
  421e52:	out    dx,eax
  421e53:	add    eax,0x9321d7aa
  421e58:	scas   al,BYTE PTR es:[edi]
  421e59:	adc    DWORD PTR [esi],esp
  421e5b:	jge    0x421e80
  421e5d:	fidiv  WORD PTR [edi]
  421e5f:	leave  
  421e60:	hlt    
  421e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e62:	cmp    ax,0x1fc8
  421e66:	mov    dh,cl
  421e68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e69:	(bad)  
  421e6a:	and    DWORD PTR [eax],ebx
  421e6c:	and    DWORD PTR [ecx-0x18],esi
  421e6f:	(bad)  [ebx+0x7]
  421e72:	cmc    
  421e73:	enter  0x301a,0x14
  421e77:	inc    eax
  421e78:	inc    edx
  421e79:	add    BYTE PTR [ecx+0x66],dh
  421e7c:	jp     0x421eec
  421e7e:	ret    0x421c
  421e81:	add    BYTE PTR [esi],ah
  421e83:	sbb    eax,0xed080042
  421e88:	adc    al,BYTE PTR [edi]
  421e8a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421e91:	ins    BYTE PTR es:[edi],dx
  421e92:	push   0x49657557
  421e97:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421e9d:	push   edi
  421e9e:	jp     0x421f1a
  421ea0:	dec    ebp
  421ea1:	push   esi
  421ea2:	arpl   WORD PTR gs:[ecx+0x45],si
  421ea6:	dec    edx
  421ea7:	dec    esi
  421ea8:	data16 ja 0x421ef9
  421eab:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ec6:	inc    ebp
  421ec7:	push   edx
  421ec8:	jb     0x421f3e
  421eca:	inc    esi
  421ecb:	je     0x421f0e
  421ecd:	inc    esi
  421ece:	jae    0x421f46
  421ed0:	dec    ebx
  421ed1:	gs dec ecx
  421ed3:	dec    ebp
  421ed4:	dec    ebp
  421ed5:	pop    edx
  421ed6:	jp     0x421f32
  421ed8:	jbe    0x421f20
  421eda:	pop    ecx
  421edb:	jo     0x421f55
  421edd:	inc    edi
  421ede:	gs ins BYTE PTR es:[edi],dx
  421ee0:	dec    esp
  421ee1:	js     0x421f4b
  421ee3:	inc    edx
  421ee4:	js     0x421f2c
  421ee6:	dec    eax
  421ee7:	inc    ebp
  421ee8:	inc    esp
  421ee9:	inc    esp
  421eea:	push   ecx
  421eeb:	dec    edx
  421eec:	ins    BYTE PTR es:[edi],dx
  421eed:	dec    ebx
  421eee:	jbe    0x421f5e
  421ef0:	pop    eax
  421ef1:	jbe    0x421f3e
  421ef3:	inc    ecx
  421ef4:	fs gs jno 0x421f65
  421ef8:	push   ebx
  421ef9:	inc    ecx
  421efa:	add    BYTE PTR [eax],al
  421efc:	inc    ebx
  421efd:	outs   dx,BYTE PTR ds:[esi]
  421efe:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f02:	push   edx
  421f03:	push   ecx
  421f04:	push   0x74000064
  421f09:	jne    0x421f80
  421f0b:	ins    DWORD PTR es:[edi],dx
  421f0c:	push   ecx
  421f0d:	push   eax
  421f0e:	jo     0x421f8a
  421f10:	addr16 jo 0x421f69
  421f13:	pop    eax
  421f14:	add    BYTE PTR [eax],al
  421f16:	push   ecx
  421f17:	pop    ecx
  421f18:	inc    ebx
  421f19:	inc    edx
  421f1a:	outs   dx,BYTE PTR ds:[esi]
  421f1b:	popa   
  421f1c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f20:	jne    0x421f90
  421f22:	dec    ebx
  421f23:	je     0x421f88
  421f25:	bound  esp,QWORD PTR [edi+0x0]
  421f28:	jns    0x421f6f
  421f2a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f2d:	dec    ecx
  421f2e:	ja     0x421f75
  421f30:	dec    eax
  421f31:	inc    ebp
  421f32:	inc    edx
  421f33:	push   ebx
  421f34:	add    BYTE PTR [eax],al
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	inc    edi
  421f38:	dec    esi
  421f39:	outs   dx,DWORD PTR ds:[esi]
  421f3a:	pop    ecx
  421f3b:	inc    edi
  421f3c:	jb     0x421f85
  421f3e:	jns    0x421fb6
  421f40:	inc    ecx
  421f41:	pop    eax
  421f42:	dec    esp
  421f43:	add    BYTE PTR [eax+0x48],bh
  421f46:	bound  edx,QWORD PTR [ebx+0x43]
  421f49:	pop    eax
  421f4a:	outs   dx,DWORD PTR ds:[esi]
  421f4b:	push   0x4355
  421f50:	dec    esp
  421f51:	ins    BYTE PTR es:[edi],dx
  421f52:	inc    edx
  421f53:	push   0x76666a73
  421f58:	inc    edx
  421f59:	jo     0x421f5b
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	add    BYTE PTR [edi+0x6d],ah
  421f60:	je     0x421fa9
  421f62:	ins    BYTE PTR es:[edi],dx
  421f63:	jae    0x421fcf
  421f65:	inc    esi
  421f66:	ins    DWORD PTR es:[edi],dx
  421f67:	je     0x421fbf
  421f69:	push   0x56584178
  421f6e:	push   ebx
  421f6f:	addr16 dec edx
  421f71:	jo     0x421fe5
  421f73:	js     0x421fe4
  421f75:	pop    eax
  421f76:	dec    ebx
  421f77:	push   esp
  421f78:	dec    esp
  421f79:	jns    0x421fc6
  421f7b:	js     0x421ff5
  421f7d:	outs   dx,BYTE PTR ds:[esi]
  421f7e:	pop    ecx
  421f7f:	jae    0x421fef
  421f81:	push   0x43644448
  421f86:	arpl   WORD PTR [edx+0x55],sp
  421f89:	push   0x42504e67
  421f8e:	push   ebp
  421f8f:	je     0x422006
  421f91:	addr16 dec edi
  421f93:	dec    esp
  421f94:	inc    edx
  421f95:	ins    DWORD PTR es:[edi],dx
  421f96:	inc    esi
  421f97:	inc    esi
  421f98:	inc    esi
  421f99:	arpl   WORD PTR [edx+0x47],bx
  421f9c:	push   ebp
  421f9d:	inc    ebx
  421f9e:	popa   
  421f9f:	push   edx
  421fa0:	dec    esp
  421fa1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fa8:	push   ecx
  421fa9:	push   ebx
  421faa:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fb1:	dec    edx
  421fb2:	jns    0x42201d
  421fb4:	push   edx
  421fb5:	inc    ebx
  421fb6:	jo     0x42202d
  421fb8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fbc:	fs push ebx
  421fbe:	inc    ebx
  421fbf:	push   ebp
  421fc0:	push   eax
  421fc1:	ja     0x421ffe
  421fc3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fc7:	mov    ebp,0xa53ddffb
  421fcc:	js     0x421f87
  421fce:	jmp    0x5ab2743a
  421fd3:	(bad)  
  421fd4:	add    DWORD PTR [eax],eax
  421fd6:	pop    ebx
  421fd7:	add    BYTE PTR [eax],al
  421fd9:	add    BYTE PTR [ebp+0x41],cl
  421fdc:	mov    eax,0x67bb40f
  421fe1:	jne    0x421f65
  421fe3:	pop    ss
  421fe4:	cli    
  421fe5:	(bad)  
  421fe6:	imul   ebp,esp,0xffffffd6
  421fe9:	mov    esp,0xb3102af7
  421fee:	mov    BYTE PTR [edi],0x62
  421ff1:	mov    ecx,0x25444f70
  421ff6:	ja     0x421ff8
  421ff8:	inc    eax
  421ff9:	sub    DWORD PTR [eax],esp
  421ffb:	pop    es
  421ffc:	loop   0x422048
  421ffe:	xchg   BYTE PTR ds:0x6ae6cdb,cl
  422004:	fcom   QWORD PTR [eax+0x71]
  422007:	jmp    0xf508391d
  42200c:	lock mov ch,0x92
  42200f:	pop    DWORD PTR [ebp+0x1]
  422012:	dec    esi
  422013:	ret    0x6fa7
  422016:	loope  0x42200f
  422018:	test   eax,0xcf1da052
  42201d:	or     al,0xe4
  42201f:	call   0xb346013f
  422024:	aam    0x3d
  422026:	neg    ebp
  422028:	sub    al,ah
  42202a:	adc    BYTE PTR [edi-0x60],cl
  42202d:	out    dx,al
  42202e:	int3   
  42202f:	mov    dh,0xb2
  422031:	neg    esp
  422033:	mov    WORD PTR [edi+0x0],fs
	...
  422041:	add    BYTE PTR [eax],ch
  422043:	mov    dl,0xa5
  422045:	push   edx
  422046:	mov    edi,0x7cfaff57
  42204b:	xlat   BYTE PTR fs:[ebx]
  42204d:	push   esi
  42204e:	les    ebp,FWORD PTR [eax]
  422050:	retf   
  422051:	das    
  422052:	mov    ch,0xd6
  422054:	add    DWORD PTR [eax],eax
  422056:	pop    ebx
  422057:	add    BYTE PTR [eax],al
  422059:	add    dh,al
  42205b:	mov    bl,0x1f
  42205d:	jnp    0x421fe3
  42205f:	add    eax,DWORD PTR [ecx-0x12f903a6]
  422065:	into   
  422066:	leave  
  422067:	aas    
  422068:	test   al,0xb0
  42206a:	push   ebx
  42206b:	push   es
  42206c:	jmp    0x421ffc
  42206e:	sbb    ecx,DWORD PTR [ebp+eax*8-0x72]
  422072:	push   esp
  422073:	xchg   ecx,eax
  422074:	shr    BYTE PTR [ebx-0x766dcc91],0xd1
  42207b:	mov    bl,0x3b
  42207d:	jp     0x4220d6
  42207f:	aas    
  422080:	xchg   edi,ecx
  422082:	mov    ds:0x5d9500df,al
  422087:	sbb    DWORD PTR [esi+0x77],ecx
  42208a:	ja     0x42208c
  42208c:	push   ebp
  42208d:	sub    BYTE PTR [esi-0x77],0xf
  422091:	test   DWORD PTR [esi],ebx
  422093:	icebp  
  422094:	fist   DWORD PTR [ebp+0x37]
  422097:	jecxz  0x4220b5
  422099:	(bad)  
  42209a:	push   ebp
  42209b:	mov    edi,0x85c3765d
  4220a0:	int3   
  4220a1:	mov    al,ds:0x2c271016
  4220a6:	mov    ecx,0x7c06cb68
  4220ab:	das    
  4220ac:	pop    edi
  4220ad:	lahf   
  4220ae:	and    bl,0x62
  4220b1:	and    BYTE PTR [ebp+0xd296],bl
	...
  4220bf:	add    BYTE PTR [eax],al
  4220c1:	add    BYTE PTR [ebx-0x7e80ab],dh
  4220c7:	stos   DWORD PTR es:[edi],eax
  4220c8:	push   DWORD PTR [edi-0x42]
  4220cb:	xchg   esi,eax
  4220cc:	push   0x92ad0457
  4220d1:	data16 adc bh,dl
  4220d4:	add    DWORD PTR [eax],eax
  4220d6:	pop    ebx
  4220d7:	add    BYTE PTR [eax],al
  4220d9:	add    bl,dl
  4220db:	popf   
  4220dc:	stos   DWORD PTR es:[edi],eax
  4220dd:	lea    esp,[esi-0x5b]
  4220e0:	mov    bh,0x3b
  4220e2:	(bad)  
  4220e3:	mov    bl,0x91
  4220e5:	xchg   BYTE PTR [edi],bh
  4220e7:	(bad)  
  4220e8:	and    DWORD PTR [esi-0x38],ebp
  4220eb:	aaa    
  4220ec:	daa    
  4220ed:	mov    ecx,0x3defae15
  4220f2:	ja     0x42209f
  4220f4:	mov    DWORD PTR ds:0x5d991ff0,edi
  4220fa:	pushf  
  4220fb:	push   0x294311da
  422100:	aad    0x22
  422102:	ffreep st(4)
  422104:	int    0xad
  422106:	pushf  
  422107:	pop    esp
  422108:	(bad)  
  422109:	push   esp
  42210a:	out    0xba,eax
  42210c:	repz aam 0xdc
  42210f:	sbb    al,0x3b
  422111:	dec    edi
  422112:	push   eax
  422113:	cmp    al,0xaa
  422115:	aaa    
  422116:	jnp    0x42218d
  422118:	sbb    ebp,DWORD PTR [eax-0x5c97dd9]
  42211e:	int    0x4e
  422120:	idiv   BYTE PTR [eax+0x41]
  422123:	and    ebp,DWORD PTR [esi+0x7e16a52f]
  422129:	ds scas eax,DWORD PTR es:[edi]
  42212b:	inc    ecx
  42212c:	xlat   BYTE PTR ds:[ebx]
  42212d:	or     ch,BYTE PTR [ebx]
  42212f:	(bad)  
  422130:	sub    ecx,edx
  422132:	pop    ss
  422133:	jle    0x42212f
	...
  422141:	add    BYTE PTR [eax],bh
  422143:	(bad)  
  422144:	cmp    ah,BYTE PTR [esi+edi*8]
  422147:	in     al,dx
  422148:	fimul  WORD PTR ds:[edi+0x45ac6bd5]
  42214f:	test   eax,0xd76b8e51
  422154:	add    DWORD PTR [eax],eax
  422156:	pop    ebx
  422157:	add    BYTE PTR [eax],al
  422159:	add    dh,dl
  42215b:	xor    esp,edi
  42215d:	test   al,0x14
  42215f:	shr    edi,1
  422161:	mov    ebp,0xfdfcb69c
  422166:	inc    esp
  422167:	mov    edx,0x5d6fd5a0
  42216c:	add    cl,al
  42216e:	cs pop edx
  422170:	or     eax,0x44ffc5a4
  422175:	sbb    ecx,DWORD PTR ds:0x6647592d
  42217b:	fdivr  QWORD PTR [edx+0x16]
  42217e:	enter  0x54b8,0xe0
  422182:	popa   
  422183:	or     al,0xac
  422185:	jecxz  0x4221fb
  422187:	mov    ebx,0xbe4ede6f
  42218c:	bnd ret 
  42218e:	sub    ebp,DWORD PTR [edi+0x7a610045]
  422194:	ret    0x7296
  422197:	inc    ebp
  422198:	or     BYTE PTR [edx+0x18f8a415],cl
  42219e:	inc    esp
  42219f:	sub    ch,bh
  4221a1:	icebp  
  4221a2:	loopne 0x42212e
  4221a4:	push   esi
  4221a5:	ja     0x4221a8
  4221a7:	imul   eax,DWORD PTR [ebp+0x27],0xd3b8772f
  4221ae:	jnp    0x42213a
  4221b0:	out    dx,eax
  4221b1:	mov    ebx,DWORD PTR [edi]
  4221b3:	jno    0x422196
	...
  4221c1:	add    cl,bl
  4221c3:	mov    dh,0x66
  4221c5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221c8:	std    
  4221c9:	neg    BYTE PTR [esi]
  4221cb:	sub    esp,DWORD PTR [ebx-0x23]
  4221ce:	cmp    esi,DWORD PTR [ecx+ecx*2+0x1d7c6a4]
  4221d5:	add    BYTE PTR [ebx+0x0],bl
  4221d8:	add    BYTE PTR [eax],al
  4221da:	arpl   ax,si
  4221dc:	xchg   esp,eax
  4221dd:	dec    eax
  4221de:	and    eax,0xffffffab
  4221e1:	xor    al,0x61
  4221e3:	repz sbb DWORD PTR [ebp+0x7bf7afc3],eax
  4221ea:	and    BYTE PTR [edx+0x30],cl
  4221ed:	enter  0x2918,0x72
  4221f1:	cmp    ecx,eax
  4221f3:	daa    
  4221f4:	std    
  4221f5:	lods   eax,DWORD PTR ds:[esi]
  4221f6:	sbb    eax,0xd21eb299
  4221fb:	out    dx,al
  4221fc:	rcr    DWORD PTR [edx-0x55],0xbb
  422200:	lods   al,BYTE PTR ds:[esi]
  422201:	retf   0x9806
  422204:	sahf   
  422205:	loope  0x4221c0
  422207:	fild   QWORD PTR [esi-0x25]
  42220a:	sbb    eax,0x61aedec5
  42220f:	cmp    BYTE PTR [ebp+0x7b],0x72
  422213:	mov    ch,0xf9
  422215:	mov    ds:0xcef997d9,al
  42221a:	or     al,0x1
  42221c:	gs mul dh
  42221f:	and    eax,DWORD PTR [esp+esi*1-0xe]
  422223:	jg     0x4221f5
  422225:	mov    ch,0x99
  422227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422228:	cld    
  422229:	sbb    BYTE PTR [eax-0xc785d70],0x57
  422230:	adc    al,al
  422232:	mov    ebx,0xb38f
	...
  42223f:	add    BYTE PTR [eax],al
  422241:	add    dl,bl
  422243:	xor    dl,BYTE PTR [edi-0x20500076]
  422249:	jb     0x42224e
  42224b:	inc    ebp
  42224c:	mov    ds:0xcfa7de5c,eax
  422251:	inc    ebx
  422252:	and    eax,ebx
  422254:	add    DWORD PTR [eax],eax
  422256:	pop    ebx
  422257:	add    BYTE PTR [eax],al
  422259:	add    BYTE PTR [edx+0x66873c19],dl
  42225f:	test   BYTE PTR [esp+eax*2],cl
  422262:	dec    edx
  422263:	aas    
  422264:	mov    cl,BYTE PTR [edi+0x6b563dc7]
  42226a:	and    DWORD PTR [ecx-0x9],esi
  42226d:	fisubr DWORD PTR [ecx]
  42226f:	in     al,dx
  422270:	(bad)
  422274:	xchg   DWORD PTR [edx+0x75],ebx
  422277:	in     eax,0x9e
  422279:	loope  0x42222a
  42227b:	out    0x5e,al
  42227d:	add    eax,DWORD PTR [eax]
  42227f:	into   
  422280:	or     DWORD PTR ds:0xff677fc8,ebx
  422286:	sub    DWORD PTR [edi+0x5948f052],edi
  42228c:	test   eax,0xeda96686
  422291:	fldcw  WORD PTR [edx+edi*4+0x6188c68]
  422298:	enter  0x75e7,0xaa
  42229c:	mov    edi,0x5389dd2a
  4222a1:	icebp  
  4222a2:	push   cs
  4222a3:	jne    0x42227b
  4222a5:	sub    al,al
  4222a7:	push   ecx
  4222a8:	outs   dx,BYTE PTR ds:[esi]
  4222a9:	cld    
  4222aa:	nop
  4222ab:	pop    ecx
  4222ac:	shl    eax,0xe2
  4222af:	mov    edi,0xd108d1dc
  4222b4:	dec    edi
	...
  4222c1:	add    BYTE PTR [eax-0x1c],cl
  4222c4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222ca:	pop    esi
  4222cb:	sub    BYTE PTR [eax-0x42ff5171],bl
  4222d1:	cmp    eax,0x1d87c
  4222d6:	pop    ebx
  4222d7:	add    BYTE PTR [eax],al
  4222d9:	add    BYTE PTR [ecx-0x45],bl
  4222dc:	lds    esi,FWORD PTR [ecx-0x2f]
  4222df:	push   ss
  4222e0:	pop    ecx
  4222e1:	rol    DWORD PTR [esi-0x11],1
  4222e4:	aad    0x4b
  4222e6:	cmp    ebx,DWORD PTR [edi-0x40]
  4222e9:	add    DWORD PTR [edi+0x187c0569],esi
  4222ef:	addr16 push edi
  4222f1:	xor    eax,0xd0e8b495
  4222f6:	(bad)  
  4222f7:	test   DWORD PTR [edx+0x1f199f87],0x8997d96e
  422301:	rol    BYTE PTR [eax],0x93
  422304:	test   DWORD PTR [eax-0x1a],edi
  422307:	pop    edi
  422308:	jae    0x422324
  42230a:	stc    
  42230b:	adc    BYTE PTR [ecx-0x6848fefc],dh
  422311:	xor    DWORD PTR [ecx-0x622d864],0xcc772bd5
  42231b:	xor    edx,DWORD PTR [eax+0x3af3a22e]
  422321:	out    0x70,eax
  422323:	nop
  422324:	pop    eax
  422325:	push   es
  422326:	inc    esp
  422327:	mov    ecx,0x87e707bd
  42232c:	daa    
  42232d:	pop    edi
  42232e:	xor    DWORD PTR [edi-0x136b4f3],0xa4
	...
  422340:	add    BYTE PTR [eax],al
  422342:	push   edx
  422343:	add    al,0xa2
  422345:	xor    dh,0xa6
  422348:	jb     0x42231e
  42234a:	ins    DWORD PTR es:[edi],dx
  42234b:	xor    dh,BYTE PTR [edx]
  42234d:	and    eax,0xd57d3f04
  422352:	xlat   BYTE PTR ds:[ebx]
  422353:	fadd   DWORD PTR [ecx]
  422355:	add    BYTE PTR [ebx+0x0],bl
  422358:	add    BYTE PTR [eax],al
  42235a:	popa   
  42235b:	mov    dl,cl
  42235d:	mov    DWORD PTR es:[edi+eax*2],ebx
  422361:	pop    ss
  422362:	add    eax,0x6209a672
  422367:	je     0x4223b7
  422369:	xchg   esp,eax
  42236a:	push   edx
  42236b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42236c:	or     ebp,0xffffffd6
  42236f:	dec    edx
  422370:	jmp    0x553fd103
  422375:	mov    al,ds:0xf3492e6f
  42237a:	add    ah,BYTE PTR [ebx+0x32]
  42237d:	ret    
  42237e:	mov    bl,0xe1
  422380:	xor    DWORD PTR [ebx+eiz*4-0x7672729e],ebp
  422387:	fldcw  WORD PTR [eax-0x673f47a1]
  42238d:	cli    
  42238e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42238f:	push   es
  422390:	mov    DWORD PTR [edi+0x10],esp
  422393:	pop    eax
  422394:	mov    esp,0x72561bcc
  422399:	xor    al,0x56
  42239b:	lods   al,BYTE PTR ds:[esi]
  42239c:	xchg   esp,eax
  42239d:	imul   edi,DWORD PTR [edx],0x2f
  4223a0:	sar    BYTE PTR [ebp+0x4a6e412c],cl
  4223a6:	cmp    esi,DWORD PTR [esi-0x4e7789d4]
  4223ac:	sbb    edx,esp
  4223ae:	mov    ch,0x18
  4223b0:	fld    TBYTE PTR [ecx-0x67]
  4223b3:	mov    eax,0xf
	...
  4223c0:	add    BYTE PTR [eax],al
  4223c2:	cmp    BYTE PTR [edx-0x6a],ch
  4223c5:	add    edx,esi
  4223c7:	(bad)  
  4223c8:	mov    ebp,0xdb4ef67b
  4223cd:	out    0xe7,eax
  4223cf:	hlt    
  4223d0:	mov    ds:0x1d932ee,al
  4223d5:	add    BYTE PTR [ebx+0x0],bl
  4223d8:	add    BYTE PTR [eax],al
  4223da:	sbb    cl,BYTE PTR [edx+0x1e1c2e90]
  4223e0:	inc    edx
  4223e1:	mov    cl,0xc
  4223e3:	jl     0x422403
  4223e5:	jp     0x422455
  4223e7:	inc    ecx
  4223e8:	add    al,0x9e
  4223ea:	mov    BYTE PTR [edx],cl
  4223ec:	repz jo 0x4223f5
  4223ef:	jle    0x42244e
  4223f1:	std    
  4223f2:	pop    edx
  4223f3:	cmp    esi,DWORD PTR [ecx]
  4223f5:	xchg   ebp,eax
  4223f6:	scas   eax,DWORD PTR es:[edi]
  4223f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f8:	retf   
  4223f9:	xor    al,0xd3
  4223fb:	jae    0x422478
  4223fd:	adc    DWORD PTR [edi-0x7d],ebp
  422400:	shr    al,0x44
  422403:	xor    DWORD PTR [ebx],edi
  422405:	xchg   esi,eax
  422406:	daa    
  422407:	or     cl,BYTE PTR [edi-0x209b045]
  42240d:	push   esp
  42240e:	fwait
  42240f:	adc    ecx,ebp
  422411:	ss and eax,0x677e4455
  422417:	nop
  422418:	and    cl,al
  42241a:	pop    edx
  42241b:	sbb    esp,DWORD PTR [eax-0x453eebf4]
  422421:	sbb    DWORD PTR [ebp-0x766d45d],esi
  422427:	adc    BYTE PTR [ecx],dl
  422429:	jns    0x422483
  42242b:	daa    
  42242c:	cmp    eax,0xdf217486
  422431:	and    edx,edi
  422433:	data16 loope 0x422436
	...
  422442:	jmp    0x7a729f00
  422447:	repz jmp 0x422443
  42244a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42244e:	test   DWORD PTR [eax-0x2672de4d],esp
  422454:	add    DWORD PTR [eax],eax
  422456:	pop    ebx
  422457:	add    BYTE PTR [eax],al
  422459:	add    BYTE PTR [ecx],bh
  42245b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42245c:	in     al,0x44
  42245e:	mul    ch
  422460:	pop    edi
  422461:	(bad)  
  422463:	clc    
  422464:	and    eax,0x69238b97
  422469:	cmc    
  42246a:	mov    esi,0x8ebcc25
  42246f:	fcomp  QWORD PTR [edi+esi*4-0x5f9f4367]
  422476:	pop    edx
  422477:	dec    ebp
  422478:	fidivr DWORD PTR [edx-0x41]
  42247b:	jmp    0x42248b
  42247d:	fisub  DWORD PTR [edx]
  42247f:	das    
  422480:	(bad)  
  422481:	cmc    
  422482:	repz push es
  422484:	cs push cs
  422486:	xchg   ebp,eax
  422487:	pop    ecx
  422488:	test   DWORD PTR [esi-0x25],esp
  42248b:	sar    DWORD PTR [edi-0x5690cb4a],0x51
  422492:	pop    DWORD PTR [esi+0x61]
  422495:	jno    0x422423
  422497:	and    BYTE PTR [edi-0x7f],bh
  42249a:	test   eax,0x31a1eaa3
  42249f:	dec    ebx
  4224a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224a1:	(bad)  
  4224a2:	mov    edi,0x5d5a768f
  4224a7:	lods   eax,DWORD PTR ds:[esi]
  4224a8:	and    eax,0x12d9f391
  4224ad:	jg     0x42246a
  4224af:	data16 ins BYTE PTR es:[edi],dx
  4224b1:	push   ebp
  4224b2:	jmp    0x0:0x1eee
	...
  4224c1:	add    BYTE PTR [ebx+0x41],bl
  4224c4:	pop    ebx
  4224c5:	iret   
  4224c6:	pop    ebx
  4224c7:	(bad)  
  4224c9:	aad    0xf
  4224cb:	ss dec esp
  4224cd:	dec    esi
  4224ce:	mov    ecx,eax
  4224d0:	and    eax,0x1d9e830
  4224d5:	add    BYTE PTR [ebx+0x0],bl
  4224d8:	add    BYTE PTR [eax],al
  4224da:	call   0x6d90489b
  4224df:	push   edi
  4224e0:	or     al,0xae
  4224e2:	(bad)  
  4224e3:	and    edx,DWORD PTR [esi-0x2886eb35]
  4224e9:	push   ebx
  4224ea:	rcr    eax,1
  4224ec:	and    al,0x2c
  4224ee:	mov    ebx,0x4f4aed6b
  4224f3:	push   ecx
  4224f4:	out    0x54,al
  4224f6:	xchg   ecx,eax
  4224f7:	cld    
  4224f8:	sahf   
  4224f9:	xor    BYTE PTR [edi-0x54],bh
  4224fc:	dec    edx
  4224fd:	imul   BYTE PTR [edx]
  4224ff:	das    
  422500:	or     BYTE PTR ds:0xa0f73975,ah
  422506:	lahf   
  422507:	retf   0x3241
  42250a:	scas   al,BYTE PTR es:[edi]
  42250b:	cmp    BYTE PTR [esi],cl
  42250d:	inc    esp
  42250e:	inc    edx
  42250f:	dec    edx
  422510:	mov    ah,0xf7
  422512:	test   al,0x80
  422514:	adc    al,BYTE PTR es:[edi]
  422517:	push   esi
  422518:	and    DWORD PTR [esi+0x2256ac75],edx
  42251e:	std    
  42251f:	shr    DWORD PTR [edx-0x6a3e6f80],0xe7
  422526:	add    al,0xb2
  422528:	out    0x5f,eax
  42252a:	sbb    BYTE PTR [esp+eax*4+0x44],0xb1
  42252f:	rcl    eax,0xeb
  422532:	fcmove st,st(5)
  422534:	imul   eax,DWORD PTR [eax],0x0
	...
  42253f:	add    BYTE PTR [eax],al
  422541:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422547:	cld    
  422548:	(bad)  [edi-0x65be08a1]
  42254e:	or     edi,esi
  422550:	rcl    BYTE PTR [ebx+eax*2],1
  422553:	fiadd  DWORD PTR [ecx]
  422555:	add    BYTE PTR [ebx+0x0],bl
  422558:	add    BYTE PTR [eax],al
  42255a:	lods   al,BYTE PTR ds:[esi]
  42255b:	(bad)  
  42255c:	mov    ds:0x3c8e97b9,eax
  422561:	pminsw mm3,QWORD PTR [ebx-0x62651f99]
  422568:	sub    ebx,edx
  42256a:	dec    edx
  42256b:	jp     0x4225a3
  42256d:	jge    0x42254e
  42256f:	sub    eax,0x1be48286
  422574:	xor    al,0x69
  422576:	test   al,0xff
  422578:	stos   BYTE PTR es:[edi],al
  422579:	and    DWORD PTR [ebx-0x41],ebx
  42257c:	(bad)  
  42257d:	xor    al,0x7a
  42257f:	scas   al,BYTE PTR es:[edi]
  422580:	xor    BYTE PTR [esp+ebp*1-0x77],bh
  422584:	es test al,0xfc
  422587:	adc    edi,DWORD PTR [ebx]
  422589:	and    al,0xbd
  42258b:	fstp   st(0)
  42258d:	xlat   BYTE PTR ds:[ebx]
  42258e:	out    0x4,eax
  422590:	(bad)
  422593:	fdivr  QWORD PTR [edx+0x6a]
  422596:	dec    ebx
  422597:	fwait
  422598:	lds    esp,FWORD PTR [esi-0x7e]
  42259b:	mov    ebx,0x147d88b1
  4225a0:	int    0x7c
  4225a2:	neg    esp
  4225a4:	xchg   eax,ebx
  4225a6:	lahf   
  4225a7:	sbb    eax,0x59638e6f
  4225ac:	gs dec esp
  4225ae:	stos   BYTE PTR es:[edi],al
  4225af:	outs   dx,DWORD PTR ds:[esi]
  4225b0:	or     esp,ecx
  4225b2:	dec    esp
  4225b3:	lods   al,BYTE PTR ds:[esi]
  4225b4:	jl     0x4225b6
	...
  4225c2:	outs   dx,BYTE PTR ds:[esi]
  4225c3:	jae    0x4225b5
  4225c5:	retf   0xcbfd
  4225c8:	jle    0x4225c1
  4225ca:	repz xor eax,0x47408ce9
  4225d0:	xchg   edx,eax
  4225d1:	mov    esp,0x1da9e
  4225d6:	pop    ebx
  4225d7:	add    BYTE PTR [eax],al
  4225d9:	add    ah,ah
  4225db:	push   ss
  4225dc:	mov    eax,0xeb2f7087
  4225e1:	inc    eax
  4225e2:	in     eax,dx
  4225e3:	scas   al,BYTE PTR es:[edi]
  4225e4:	xor    DWORD PTR [esi+0x35a4fde4],ecx
  4225ea:	hlt    
  4225eb:	jae    0x422666
  4225ed:	(bad)  
  4225ee:	(bad)  
  4225f0:	mov    edi,gs
  4225f2:	mov    ds:0xbf343ac4,eax
  4225f7:	aad    0xde
  4225f9:	sbb    eax,0x58d85701
  4225fe:	mov    esp,0xe9503ad2
  422603:	int3   
  422604:	mov    ds:0x77aa2c68,eax
  422609:	mov    eax,ds:0x331f982c
  42260e:	rol    BYTE PTR [edx],0x82
  422611:	push   ebp
  422612:	rcr    DWORD PTR [edx+eax*1-0x445a1a5],cl
  422619:	out    0x6c,al
  42261b:	popa   
  42261c:	sti    
  42261d:	hlt    
  42261e:	aas    
  42261f:	pushf  
  422620:	dec    esi
  422621:	xor    BYTE PTR [ecx],0xad
  422624:	lahf   
  422625:	outs   dx,DWORD PTR ds:[esi]
  422626:	jg     0x4225ac
  422628:	adc    dh,ah
  42262a:	xor    BYTE PTR [edi+0x78c0874d],0x15
  422631:	xor    BYTE PTR [edx],bh
  422633:	lock jge 0x422636
	...
  422642:	cmc    
  422643:	adc    al,0xae
  422645:	adc    ebp,edi
  422647:	mov    ebx,0x84e6f6fd
  42264c:	lds    ebp,FWORD PTR [edx+0x14048a77]
  422652:	stc    
  422653:	fiadd  DWORD PTR [ecx]
  422655:	add    BYTE PTR [ebx+0x0],bl
  422658:	add    BYTE PTR [eax],al
  42265a:	mov    al,ds:0x1e3d1d60
  42265f:	sbb    DWORD PTR [ebp+0x57],ebx
  422662:	mov    ?,WORD PTR [ecx+0x5b3b787b]
  422668:	mov    dl,BYTE PTR [ebp+0x488b07c0]
  42266e:	(bad)  
  422670:	lock ret 0x79fb
  422674:	retf   
  422675:	lock mov edx,0xf5100214
  42267b:	mov    dl,0xda
  42267d:	loope  0x42261d
  42267f:	clc    
  422680:	add    eax,0x4fd9f6bd
  422685:	sub    al,0xab
  422687:	xchg   ebp,eax
  422688:	jecxz  0x42261e
  42268a:	call   0xcdfbdec
  42268f:	ins    BYTE PTR es:[edi],dx
  422690:	fwait
  422691:	cmp    edi,DWORD PTR [esi+0x79]
  422694:	stos   BYTE PTR es:[edi],al
  422695:	jl     0x4226cc
  422697:	mov    ds:0xba303984,eax
  42269c:	bound  eax,QWORD PTR [esi]
  42269e:	pop    es
  42269f:	jns    0x4226de
  4226a1:	sub    ebx,DWORD PTR [edi]
  4226a3:	mov    ah,BYTE PTR [eax+ebx*8-0x4a787838]
  4226aa:	lea    edx,[esi]
  4226ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ad:	cdq    
  4226ae:	pop    esi
  4226af:	pop    ss
  4226b0:	xor    BYTE PTR [edx+0x47c1ae],ah
	...
  4226c2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226c8:	mov    edi,0xbb1c16fb
  4226cd:	rol    BYTE PTR [ebx+0x4b],0xfc
  4226d1:	adc    edx,DWORD PTR [ebx+ebx*8+0x1]
  4226d5:	add    BYTE PTR [ebx+0x0],bl
  4226d8:	add    BYTE PTR [eax],al
  4226da:	sub    dl,BYTE PTR [edx-0x7b]
  4226dd:	enter  0xdb93,0x2
  4226e1:	or     BYTE PTR [edi-0x40],ah
  4226e4:	sub    BYTE PTR [ecx],ch
  4226e6:	dec    ecx
  4226e7:	mov    al,ds:0x188c863a
  4226ec:	ins    BYTE PTR es:[edi],dx
  4226ed:	ss (bad) 
  4226ef:	aad    0x17
  4226f1:	cmp    eax,esi
  4226f3:	shr    ah,1
  4226f5:	rcl    esi,cl
  4226f7:	les    esp,FWORD PTR [edi-0x39]
  4226fa:	mov    eax,ds:0x9f41912a
  4226ff:	jmp    edx
  422701:	out    dx,eax
  422702:	mov    ebp,0x7c7d7929
  422707:	jg     0x422777
  422709:	mov    bl,0x84
  42270b:	xor    esi,esp
  42270d:	mov    ds:0xeb48a176,al
  422712:	aas    
  422713:	sub    BYTE PTR [ebx+0x127baa70],dh
  422719:	inc    eax
  42271a:	pop    ds
  42271b:	in     eax,0x7b
  42271d:	mov    WORD PTR [edi+0x54e13dd6],?
  422723:	nop
  422724:	sub    DWORD PTR [edx+esi*4],esi
  422727:	adc    al,0xeb
  422729:	out    dx,eax
  42272a:	dec    ebp
  42272b:	jne    0x42273c
  42272d:	adc    esi,DWORD PTR [ecx-0x2e]
  422730:	add    ah,bl
  422732:	xchg   ebx,eax
  422733:	adc    DWORD PTR [edi+0x0],esi
	...
  422742:	aam    0xf
  422744:	push   ecx
  422745:	lock (bad) 
  422748:	cmc    
  422749:	das    
  42274a:	sbb    BYTE PTR [eax],cl
  42274c:	xchg   ebx,eax
  42274d:	iret   
  42274e:	aaa    
  42274f:	mov    edx,0xdbaf670b
  422754:	add    DWORD PTR [eax],eax
  422756:	pop    ebx
  422757:	add    BYTE PTR [eax],al
  422759:	add    bh,dl
  42275b:	stos   DWORD PTR es:[edi],eax
  42275c:	aas    
  42275d:	add    al,0x94
  42275f:	lods   al,BYTE PTR ds:[esi]
  422760:	mov    ds:0xea912809,al
  422765:	cmp    dl,0xfe
  422768:	js     0x4227c9
  42276a:	retf   0xf75c
  42276d:	imul   ecx,DWORD PTR ds:0x1b9d1cf1,0xfd625bf3
  422777:	aaa    
  422778:	jge    0x422757
  42277a:	cwde   
  42277b:	leave  
  42277c:	out    dx,eax
  42277d:	push   esp
  42277e:	pop    edx
  42277f:	popa   
  422780:	push   esp
  422781:	fsubr  DWORD PTR [esp+eax*1-0x45f34d1e]
  422788:	in     al,dx
  422789:	fdiv   QWORD PTR [ebp+eax*4-0x2431455]
  422790:	jae    0x42277a
  422792:	(bad)  
  422793:	mov    ah,0x93
  422795:	sub    bh,cl
  422797:	cmp    DWORD PTR [ebx+0x65],esp
  42279a:	pop    esp
  42279b:	fs inc eax
  42279d:	pop    eax
  42279e:	and    dh,bh
  4227a0:	cdq    
  4227a1:	arpl   WORD PTR ds:0x4bdf9a60,ax
  4227a7:	mov    edx,DWORD PTR [edx]
  4227a9:	scas   al,BYTE PTR es:[edi]
  4227aa:	mov    cl,0xa2
  4227ac:	mov    al,0x53
  4227ae:	mov    dl,0xda
  4227b0:	jbe    0x422751
  4227b2:	mov    edx,edx
  4227b4:	stos   DWORD PTR es:[edi],eax
	...
  4227c1:	add    ch,cl
  4227c3:	sub    eax,0xfbf54395
  4227c8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227ce:	or     al,BYTE PTR [ebx-0x7e]
  4227d1:	test   eax,0x1dc0a
  4227d6:	pop    ebx
  4227d7:	add    BYTE PTR [eax],al
  4227d9:	add    bh,cl
  4227db:	add    ah,BYTE PTR ds:0x8a1a0962
  4227e1:	fwait
  4227e2:	out    0xc8,eax
  4227e4:	ficom  DWORD PTR [edx+ecx*4]
  4227e7:	test   DWORD PTR [edi-0x4a189c9e],ebx
  4227ed:	hlt    
  4227ee:	sbb    BYTE PTR [ebx+edx*8-0x6a54ae4b],cl
  4227f5:	add    BYTE PTR [edx+0x3625dcb6],0x68
  4227fc:	aas    
  4227fd:	call   0x271da319
  422802:	inc    edx
  422803:	xor    DWORD PTR [ebx-0x3631204],0xb
  42280a:	sub    ch,BYTE PTR [edi]
  42280c:	repz jge 0x4227c4
  42280f:	(bad)  
  422810:	jg     0x422813
  422812:	mov    edx,0xf93883d4
  422817:	push   ss
  422818:	outs   dx,DWORD PTR ds:[esi]
  422819:	test   BYTE PTR [ebp-0x4e96c643],al
  42281f:	mov    dl,0x20
  422821:	push   es
  422822:	lds    edi,FWORD PTR [edx-0x12]
  422825:	lahf   
  422826:	into   
  422827:	xchg   ebp,eax
  422828:	xor    BYTE PTR [esi+0x15a3748a],dl
  42282e:	inc    ebx
  42282f:	xchg   BYTE PTR [ecx-0x65],bl
  422832:	or     eax,0x697a
	...
  42283f:	add    BYTE PTR [eax],al
  422841:	add    BYTE PTR [ebx],dl
  422843:	fs out 0xb,eax
  422846:	test   DWORD PTR [ebx-0xce58301],0xf70e4cfc
  422850:	idiv   DWORD PTR [edi+0x1dc65]
  422856:	pop    ebx
  422857:	add    BYTE PTR [eax],al
  422859:	add    BYTE PTR [eax+0x5d],cl
  42285c:	stc    
  42285d:	arpl   WORD PTR [ecx],bp
  42285f:	out    0x8d,al
  422861:	ret    
  422862:	mov    dl,0xdd
  422864:	shl    BYTE PTR [edx-0x779b417e],1
  42286a:	or     BYTE PTR [ecx],dh
  42286c:	loope  0x4227f8
  42286e:	or     BYTE PTR [esi+0x66],0x35
  422872:	pop    ecx
  422873:	cdq    
  422874:	imul   ecx,DWORD PTR [ecx+0x62],0x2f06db3d
  42287b:	jle    0x42289c
  42287d:	cli    
  42287e:	push   ds
  42287f:	push   esi
  422880:	data16 xchg BYTE PTR ds:0xdeba0760,cl
  422887:	inc    esp
  422888:	cmp    BYTE PTR [ecx+0x480edbc9],cl
  42288e:	sbb    al,0xa8
  422890:	stc    
  422891:	loope  0x42290a
  422893:	push   edx
  422894:	mov    DWORD PTR [esi*2+0x7e454a6d],ecx
  42289b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42289c:	xchg   DWORD PTR [esi-0x2093cdd4],edx
  4228a2:	mov    BYTE PTR [ebx+0x3a],al
  4228a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228a6:	mov    al,ds:0xd030d52
  4228ab:	and    al,0x25
  4228ad:	cmp    DWORD PTR [ebx-0x19],eax
  4228b0:	dec    edx
  4228b1:	das    
  4228b2:	inc    esp
  4228b3:	cmc    
  4228b4:	add    BYTE PTR es:[eax],al
	...
  4228bf:	add    BYTE PTR [eax],al
  4228c1:	add    BYTE PTR [esi],dh
  4228c3:	add    dl,BYTE PTR [ebp+0xc]
  4228c6:	jne    0x422927
  4228c8:	jg     0x422904
  4228ca:	clc    
  4228cb:	cs aas 
  4228cd:	push   0x1b0cff42
  4228d2:	hlt    
  4228d3:	iret   
  4228d4:	add    DWORD PTR [eax],eax
  4228d6:	pop    ebx
  4228d7:	add    BYTE PTR [eax],al
  4228d9:	add    BYTE PTR [ecx-0x2e],dl
  4228dc:	and    BYTE PTR [edi],0xd6
  4228df:	imul   ecx
  4228e1:	fisub  DWORD PTR [esi+edi*1]
  4228e4:	stos   BYTE PTR es:[edi],al
  4228e5:	xor    DWORD PTR [eax+edi*8],edx
  4228e8:	(bad)  
  4228e9:	xor    eax,0x6d4c77c5
  4228ee:	addr16 iret 
  4228f0:	and    BYTE PTR [ebp+0x1],ch
  4228f3:	ret    
  4228f4:	sbb    ecx,DWORD PTR [edx+0x27]
  4228f7:	adc    BYTE PTR [esi+eiz*1],ah
  4228fa:	dec    edx
  4228fb:	ins    DWORD PTR es:[edi],dx
  4228fc:	pop    edi
  4228fd:	fimul  WORD PTR es:[esp+edi*2]
  422901:	ss ret 
  422903:	je     0x422911
  422905:	inc    esi
  422906:	iret   
  422907:	jno    0x42290d
  422909:	test   eax,0xc6f3f696
  42290e:	jp     0x4228b1
  422910:	or     DWORD PTR [ebx+0x24359749],ebp
  422916:	test   al,0x56
  422918:	push   ecx
  422919:	xor    ah,BYTE PTR [edi+0x38]
  42291c:	js     0x422910
  42291e:	inc    edx
  42291f:	rcl    DWORD PTR [ebx],0x65
  422922:	pop    ebx
  422923:	xlat   BYTE PTR ds:[ebx]
  422924:	pusha  
  422925:	test   eax,0xc2961c64
  42292a:	add    BYTE PTR [esi+0x4a],al
  42292d:	into   
  42292e:	dec    ecx
  42292f:	cmp    dl,BYTE PTR [ebp+0x13]
  422932:	and    al,0x23
  422934:	out    dx,al
	...
  422941:	add    BYTE PTR [eax],cl
  422943:	mov    cl,0x72
  422945:	cmp    edi,ebx
  422947:	sti    
  422948:	dec    ecx
  422949:	mov    bl,0x94
  42294b:	je     0x422924
  42294d:	call   0xd04f:0x951d9530
  422954:	add    DWORD PTR [eax],eax
  422956:	pop    ebx
  422957:	add    BYTE PTR [eax],al
  422959:	add    BYTE PTR [ebp-0x6b],bh
  42295c:	mov    eax,ds:0xcab90a0e
  422961:	sbb    DWORD PTR [ebx-0x74],esp
  422964:	retf   
  422965:	rcr    dh,1
  422967:	out    dx,al
  422968:	cmp    al,ah
  42296a:	xor    ch,BYTE PTR [edi-0x742b30aa]
  422970:	leave  
  422971:	mov    al,ds:0xdbbe91ab
  422976:	and    BYTE PTR [esi+0xca880f8],cl
  42297c:	jbe    0x42297f
  42297e:	out    0x5e,al
  422980:	test   BYTE PTR [edi+0x24765f6c],ah
  422986:	xchg   esi,eax
  422987:	shl    BYTE PTR [esi],cl
  422989:	mov    DWORD PTR [edx+esi*1],ebx
  42298c:	scas   eax,DWORD PTR es:[edi]
  42298d:	aad    0x8b
  42298f:	lahf   
  422990:	inc    eax
  422991:	(bad)  
  422992:	jnp    0x4229b7
  422994:	pusha  
  422995:	lahf   
  422996:	jle    0x422962
  422998:	cs push eax
  42299a:	das    
  42299b:	sbb    dl,BYTE PTR [ebx]
  42299d:	int    0xb9
  42299f:	and    al,0x2
  4229a1:	test   al,0x57
  4229a3:	sbb    BYTE PTR [edi+0x15],bl
  4229a6:	cmp    esi,DWORD PTR [edx+0x4bb397fe]
  4229ac:	bound  esp,QWORD PTR [ebx+0x73]
  4229af:	bound  ebx,QWORD PTR [eax]
  4229b1:	xor    edx,ebp
  4229b3:	dec    eax
  4229b4:	aad    0x0
	...
  4229c2:	fist   WORD PTR [ebx-0x4e]
  4229c5:	dec    edi
  4229c6:	mov    esi,0x67d3ffef
  4229cb:	xchg   ecx,edi
  4229cd:	adc    al,0x9c
  4229cf:	mov    ah,0x7a
  4229d1:	cdq    
  4229d2:	stos   BYTE PTR es:[edi],al
  4229d3:	rol    BYTE PTR [ecx],1
  4229d5:	add    BYTE PTR [ebx+0x0],bl
  4229d8:	add    BYTE PTR [eax],al
  4229da:	ret    
  4229db:	jl     0x422a0d
  4229dd:	ins    DWORD PTR es:[edi],dx
  4229de:	test   eax,0xb433d554
  4229e3:	jb     0x422a17
  4229e5:	push   esi
  4229e6:	jp     0x422a62
  4229e8:	imul   edx,edx,0xe0ea242d
  4229ee:	js     0x422a32
  4229f0:	cld    
  4229f1:	retf   
  4229f2:	loope  0x422984
  4229f4:	push   0x52e48f46
  4229f9:	retf   
  4229fa:	jo     0x4229ab
  4229fc:	mov    edx,0x1cf499ec
  422a01:	push   edi
  422a02:	imul   eax,DWORD PTR [esi+0xdeeaea7],0xfffffffe
  422a09:	fisttp WORD PTR [edi]
  422a0b:	loop   0x4229d5
  422a0d:	jmp    0x786a2b5e
  422a12:	scas   eax,DWORD PTR es:[edi]
  422a13:	sub    DWORD PTR [ecx],edx
  422a15:	dec    ebx
  422a16:	es lock dec ebx
  422a19:	mov    ch,0xeb
  422a1b:	std    
  422a1c:	jp     0x422a2b
  422a1e:	ins    BYTE PTR es:[edi],dx
  422a1f:	lea    edi,[eax]
  422a21:	and    BYTE PTR [edx],dh
  422a23:	mov    bh,0x76
  422a25:	out    dx,eax
  422a26:	test   BYTE PTR [ecx+0x7a0df1a2],0x23
  422a2d:	pushf  
  422a2e:	in     eax,0x92
  422a30:	mov    dh,0x11
  422a32:	aas    
  422a33:	and    DWORD PTR [esi],esp
	...
  422a41:	add    BYTE PTR [edi-0x24252cf4],al
  422a47:	fisttp WORD PTR [edi+0x640ccb5d]
  422a4d:	push   ss
  422a4e:	dec    ebp
  422a4f:	sub    BYTE PTR [esi+0x1d105cd],0x0
  422a56:	pop    ebx
  422a57:	add    BYTE PTR [eax],al
  422a59:	add    BYTE PTR [esi],dh
  422a5b:	ret    
  422a5c:	jo     0x422aa1
  422a5e:	jle    0x422a43
  422a60:	mov    dl,cl
  422a62:	push   eax
  422a63:	push   esi
  422a64:	mov    ah,0xb3
  422a66:	lods   al,BYTE PTR ds:[esi]
  422a67:	popa   
  422a68:	and    bl,BYTE PTR [edx]
  422a6a:	imul   ebp,edi,0xfffffffd
  422a6d:	into   
  422a6e:	xchg   DWORD PTR [ecx+0x9],esi
  422a71:	mov    ?,esp
  422a73:	push   es
  422a74:	pop    es
  422a75:	dec    esp
  422a76:	ins    BYTE PTR es:[edi],dx
  422a77:	sbb    al,0x79
  422a79:	sahf   
  422a7a:	inc    esp
  422a7b:	jmp    0x422a87
  422a7d:	push   ds
  422a7e:	fdivr  DWORD PTR [ebp+ebx*1-0x3d88a628]
  422a85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a86:	xlat   BYTE PTR ds:[ebx]
  422a87:	ja     0x422aab
  422a89:	jno    0x422a92
  422a8b:	and    eax,ecx
  422a8d:	popf   
  422a8e:	fild   QWORD PTR [edx]
  422a90:	ja     0x422aed
  422a92:	cmp    BYTE PTR [edx-0x2e8bd3c5],cl
  422a98:	cmp    dh,BYTE PTR [edx+0x6c1c5cbd]
  422a9e:	inc    ebx
  422a9f:	mov    bl,0x7f
  422aa1:	icebp  
  422aa2:	or     eax,0xf00a0466
  422aa7:	add    al,0x48
  422aa9:	xor    BYTE PTR [eax],cl
  422aab:	mov    ch,0xf
  422aad:	adc    dl,cl
  422aaf:	sub    ebp,ecx
  422ab1:	mov    bl,0xc3
  422ab3:	mov    ds:0x9a,eax
	...
  422ac0:	add    BYTE PTR [eax],al
  422ac2:	lahf   
  422ac3:	arpl   WORD PTR [ebp+0x72],cx
  422ac6:	std    
  422ac7:	jle    0x422a88
  422ac9:	out    dx,eax
  422aca:	sbb    edi,esp
  422acc:	mov    BYTE PTR [ebx+ebx*4+0x600015a4],dh
  422ad3:	rol    DWORD PTR [ecx],1
  422ad5:	add    BYTE PTR [ebx+0x0],bl
  422ad8:	add    BYTE PTR [eax],al
  422ada:	jae    0x422a66
  422adc:	push   edi
  422add:	cmc    
  422ade:	jne    0x422af8
  422ae0:	adc    eax,0x5b9fd9cd
  422ae5:	jne    0x422a6a
  422ae7:	pusha  
  422ae8:	rcl    BYTE PTR [ebx-0x2a05695],cl
  422aee:	sub    ebx,DWORD PTR [edx-0x77]
  422af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af2:	aas    
  422af3:	push   ebp
  422af4:	lea    ecx,[eax+0x42bb554a]
  422afa:	(bad)  
  422afb:	jg     0x422afa
  422afd:	jl     0x422a9e
  422aff:	adc    cl,BYTE PTR [esi]
  422b01:	xor    ecx,DWORD PTR ds:0x89735fe9
  422b07:	xchg   ecx,eax
  422b08:	int3   
  422b09:	test   esp,0xce4d56cc
  422b0f:	add    al,0x5b
  422b11:	mov    al,ds:0x235cab42
  422b16:	pop    es
  422b17:	add    eax,0x16739e9e
  422b1c:	xor    BYTE PTR [ebx+ecx*4-0x3a],ch
  422b20:	mov    eax,0x500b858a
  422b25:	adc    BYTE PTR [ecx+0x108d8fe],bh
  422b2b:	cs and dh,0x1
  422b2f:	inc    DWORD PTR [edi+0x22]
  422b32:	cmp    cl,BYTE PTR [edi]
  422b34:	sbb    eax,0x0
	...
  422b41:	add    BYTE PTR [eax+0x23],dh
  422b44:	and    eax,0x7c6f7769
  422b49:	cmp    esp,DWORD PTR [eax-0x694311e4]
  422b4f:	stos   BYTE PTR es:[edi],al
  422b50:	jo     0x422af3
  422b52:	mov    ebx,0x5b0001d1
  422b57:	add    BYTE PTR [eax],al
  422b59:	add    BYTE PTR [edi],ch
  422b5b:	xor    edi,ebp
  422b5d:	pushf  
  422b5e:	pop    ebx
  422b5f:	or     eax,0x68e640bf
  422b64:	pop    edx
  422b65:	pusha  
  422b66:	pop    ds
  422b67:	add    eax,0x483bf06b
  422b6c:	inc    ebx
  422b6d:	loopne 0x422b13
  422b6f:	ret    
  422b70:	ins    DWORD PTR es:[edi],dx
  422b71:	pop    edi
  422b72:	inc    ecx
  422b73:	add    DWORD PTR [ecx+0x627ac027],0x1d14cc06
  422b7d:	dec    edi
  422b7e:	mov    ebp,DWORD PTR [ebx-0x8]
  422b81:	call   0x6a06:0xe1d0538d
  422b88:	data16 int 0xef
  422b8b:	xchg   edx,eax
  422b8c:	fnstenv [esp+ebp*4]
  422b8f:	(bad)  
  422b91:	sar    DWORD PTR [ecx],0x3d
  422b94:	(bad)  
  422b95:	mov    edi,0x177cd05b
  422b9a:	cs push esp
  422b9c:	add    ebx,0xffffffcf
  422b9f:	ds xchg ebp,eax
  422ba1:	(bad)  
  422ba2:	pop    ds
  422ba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ba4:	sub    ch,BYTE PTR [ebx+0x1]
  422ba7:	push   edx
  422ba9:	inc    edx
  422baa:	jmp    0x49bbbdc8
  422baf:	mov    ebx,0x6d66def7
  422bb4:	mov    ebp,0x0
	...
  422bc1:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422bc8:	popf   
  422bc9:	aam    0x57
  422bcb:	(bad)
  422bcf:	leave  
  422bd0:	or     al,0x3b
  422bd2:	push   ss
  422bd3:	rol    BYTE PTR [ecx],cl
  422bd5:	add    BYTE PTR [ebx+0x0],bl
  422bd8:	add    BYTE PTR [eax],al
  422bda:	pop    edx
  422bdb:	lea    edx,[edi-0x2d]
  422bde:	pusha  
  422bdf:	data16 aas 
  422be1:	sahf   
  422be2:	imul   ebp,DWORD PTR [ecx],0xffffff86
  422be5:	xchg   edx,eax
  422be6:	xor    BYTE PTR [ebp-0x4f6f4445],dh
  422bec:	jno    0x422bb8
  422bee:	mov    ch,BYTE PTR [ebp-0x7729c297]
  422bf4:	fxch   st(7)
  422bf6:	dec    edx
  422bf7:	das    
  422bf8:	pop    es
  422bf9:	sub    al,0xee
  422bfb:	xor    ecx,ebx
  422bfd:	or     BYTE PTR [ebp+0x57],ch
  422c00:	sbb    BYTE PTR [edi],0xbb
  422c03:	bound  ebp,QWORD PTR [ebx]
  422c05:	call   0x48cf:0x2466cf01
  422c0c:	out    dx,eax
  422c0d:	sub    DWORD PTR [ebx+0x1e56a57a],edi
  422c13:	ss lahf 
  422c15:	and    DWORD PTR [ebx-0x9],ebp
  422c18:	jle    0x422bf9
  422c1a:	lods   al,BYTE PTR ds:[esi]
  422c1b:	nop
  422c1c:	sbb    BYTE PTR [esi-0x6b],ch
  422c1f:	outs   dx,DWORD PTR ds:[esi]
  422c20:	mov    dh,0x68
  422c22:	loopne 0x422c35
  422c24:	adc    esp,edi
  422c26:	mov    BYTE PTR [eax-0x50],ah
  422c29:	jmp    0x61f:0x108ab221
  422c30:	mov    dh,0xc5
  422c32:	fucom  st(3)
  422c34:	and    eax,DWORD PTR [eax]
	...
  422c42:	hlt    
  422c43:	mov    dl,0x32
  422c45:	(bad)  
  422c46:	jbe    0x422c1e
  422c48:	hlt    
  422c49:	mov    dl,0xb1
  422c4b:	and    al,0xfe
  422c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4e:	adc    eax,0x71b489d3
  422c53:	rol    BYTE PTR [ecx],cl
  422c55:	add    BYTE PTR [ebx+0x0],bl
  422c58:	add    BYTE PTR [eax],al
  422c5a:	mov    ebx,0x9bb3c6f3
  422c5f:	pop    ds
  422c60:	pop    ecx
  422c61:	stos   BYTE PTR es:[edi],al
  422c62:	out    0xd2,al
  422c64:	mov    ch,0x4
  422c66:	bound  eax,QWORD PTR [ecx-0x487fd1ed]
  422c6c:	rcl    DWORD PTR [ecx-0x6755a04e],1
  422c72:	inc    edx
  422c73:	adc    eax,0x9e8cc2df
  422c78:	retf   0x4093
  422c7b:	idiv   BYTE PTR [eax]
  422c7d:	push   edi
  422c7e:	das    
  422c7f:	pop    es
  422c80:	dec    edx
  422c81:	xchg   ebx,eax
  422c82:	test   eax,0xe693f338
  422c87:	lods   eax,DWORD PTR ds:[esi]
  422c88:	loope  0x422cbd
  422c8a:	cwde   
  422c8b:	fs pop esp
  422c8d:	push   ecx
  422c8e:	repz mov ds:0x3083d0d,eax
  422c94:	inc    ebp
  422c95:	into   
  422c96:	xor    ebx,DWORD PTR [edx+0x40f3a180]
  422c9c:	clc    
  422c9d:	call   0x2a07:0x6bb9ccc4
  422ca4:	js     0x422d08
  422ca6:	iret   
  422ca7:	or     DWORD PTR [edx+eax*4+0x42],eax
  422cab:	sahf   
  422cac:	mov    cl,0x16
  422cae:	or     DWORD PTR gs:[edi],ebp
  422cb1:	clc    
  422cb2:	and    BYTE PTR [ebp+0x29],ah
	...
  422cc1:	add    BYTE PTR [edx],dh
  422cc3:	ror    esi,cl
  422cc5:	mov    ds:0xd37ebfef,al
  422cca:	sub    edi,DWORD PTR [esi]
  422ccc:	out    0x3f,eax
  422cce:	retf   0xe884
  422cd1:	stc    
  422cd2:	int3   
  422cd3:	rol    BYTE PTR [ecx],cl
  422cd5:	add    BYTE PTR [ebx+0x0],bl
  422cd8:	add    BYTE PTR [eax],al
  422cda:	(bad)  
  422cdb:	frstor [esi]
  422cdd:	in     al,dx
  422cde:	adc    ch,BYTE PTR [ebp+0x3a980c84]
  422ce4:	mov    ecx,0xd08c0c36
  422ce9:	mov    esp,0x14c115a4
  422cee:	mov    ebp,0xaa0bd5a5
  422cf3:	dec    esi
  422cf4:	hlt    
  422cf5:	inc    ebp
  422cf6:	arpl   WORD PTR [esi+0xb],di
  422cf9:	loope  0x422ce8
  422cfb:	sub    esp,esi
  422cfd:	pop    edi
  422cfe:	popf   
  422cff:	sub    DWORD PTR [edx-0x5dac995e],ecx
  422d05:	ins    BYTE PTR es:[edi],dx
  422d06:	pop    es
  422d07:	div    DWORD PTR [edx]
  422d09:	xor    ecx,DWORD PTR [esi-0x6f531ccf]
  422d0f:	jmp    0x4253:0x87fcbdf9
  422d16:	inc    esp
  422d17:	stos   BYTE PTR es:[edi],al
  422d18:	cmp    ecx,ecx
  422d1a:	push   0x31e8d249
  422d1f:	sub    BYTE PTR [eax+0x38],0x8e
  422d23:	scas   al,BYTE PTR es:[edi]
  422d24:	stos   DWORD PTR es:[edi],eax
  422d25:	mov    dh,0xe0
  422d27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d28:	mov    ebx,0x71ed1344
  422d2d:	xor    eax,0x33c86458
  422d32:	bswap  edi
  422d34:	lods   al,BYTE PTR ds:[esi]
	...
  422d41:	add    bl,bl
  422d43:	in     eax,dx
  422d44:	outs   dx,BYTE PTR ds:[esi]
  422d45:	and    bh,BYTE PTR [esi-0x5d]
  422d48:	(bad)  
  422d4a:	pop    esi
  422d4b:	(bad)  
  422d4c:	mov    DWORD PTR [ebp+0x2a726e6],ecx
  422d52:	daa    
  422d53:	rol    DWORD PTR [ecx],cl
  422d55:	add    BYTE PTR [ebx+0x0],bl
  422d58:	add    BYTE PTR [eax],al
  422d5a:	jmp    0x422da4
  422d5c:	push   ecx
  422d5d:	inc    BYTE PTR [edi+0x75]
  422d60:	sub    al,BYTE PTR [ebx+0x597d41a]
  422d66:	mov    eax,ds:0x54a65419
  422d6b:	cwde   
  422d6c:	jmp    0x422cf2
  422d6e:	sbb    al,0xb2
  422d70:	das    
  422d71:	jmp    0xae687b1
  422d76:	out    dx,al
  422d77:	(bad)  
  422d78:	popa   
  422d79:	es fwait
  422d7b:	jl     0x422d2b
  422d7d:	xor    DWORD PTR ds:0x7c74c46a,ebp
  422d83:	pop    edx
  422d84:	xchg   WORD PTR [edx],di
  422d87:	or     DWORD PTR [ebx+0x6f8d52a],esi
  422d8d:	and    eax,0xea627be5
  422d92:	int    0xd5
  422d94:	sub    al,BYTE PTR [ecx]
  422d96:	xor    BYTE PTR [ecx-0x30823098],0x6e
  422d9d:	(bad)  
  422d9e:	pop    ds
  422d9f:	mov    edi,0xed90f337
  422da4:	cli    
  422da5:	outs   dx,DWORD PTR ds:[esi]
  422da6:	into   
  422da7:	movups XMMWORD PTR [ebx+0x63ccb70a],xmm3
  422dae:	push   eax
  422daf:	stc    
  422db0:	mov    ds:0xce7d280,al
	...
  422dc1:	add    BYTE PTR ds:0x6f976b22,al
  422dc7:	(bad)  
  422dc9:	mov    dl,0x66
  422dcb:	and    BYTE PTR [esi+0xe3e1b6a],ah
  422dd1:	add    eax,DWORD PTR [edx+0x5b0001d3]
  422dd7:	add    BYTE PTR [eax],al
  422dd9:	add    bl,al
  422ddb:	aam    0x5f
  422ddd:	pop    edx
  422dde:	cli    
  422ddf:	mov    ebp,0xa4aa67c6
  422de4:	cmp    dh,BYTE PTR [ebx+0xb]
  422de7:	cld    
  422de8:	push   ebx
  422de9:	and    DWORD PTR ss:0xe6ed305,edi
  422df0:	push   0x1c
  422df2:	out    dx,eax
  422df3:	cmp    DWORD PTR [eax-0x3e],ebx
  422df6:	addr16 jo 0x422e5a
  422df9:	sub    BYTE PTR [ecx+0x34],cl
  422dfc:	sub    eax,0xf8beceb2
  422e01:	xor    BYTE PTR [ebp-0x2a9841cc],ah
  422e07:	add    al,0x33
  422e09:	push   ds
  422e0a:	in     al,dx
  422e0b:	dec    eax
  422e0c:	mov    esp,0x7a2fbbee
  422e11:	xchg   ebp,eax
  422e12:	pop    ebx
  422e13:	int3   
  422e14:	sub    eax,0xf4f255bb
  422e19:	into   
  422e1a:	adc    ebp,edx
  422e1c:	test   BYTE PTR [esi+0x38],al
  422e1f:	xchg   esp,eax
  422e20:	popw   ds
  422e22:	loope  0x422dfc
  422e24:	aad    0xba
  422e26:	lods   al,BYTE PTR ds:[esi]
  422e27:	push   cs
  422e28:	bound  ebp,QWORD PTR [eax]
  422e2a:	or     bl,BYTE PTR [edi+ebx*8-0x6c]
  422e2e:	in     eax,dx
  422e2f:	jae    0x422e0f
  422e31:	mov    WORD PTR [eax],ds
  422e33:	or     al,0x60
	...
  422e41:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e47:	stc    
  422e48:	call   esi
  422e4a:	into   
  422e4b:	inc    ebp
  422e4c:	mov    bh,0x11
  422e4e:	nop
  422e4f:	lods   al,BYTE PTR ds:[esi]
  422e50:	mov    bl,0x35
  422e52:	fst    st(3)
  422e54:	add    DWORD PTR [eax],eax
  422e56:	pop    ebx
  422e57:	add    BYTE PTR [eax],al
  422e59:	add    BYTE PTR [ebx],ah
  422e5b:	leave  
  422e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e5d:	out    0xc2,eax
  422e5f:	adc    DWORD PTR [esi],ebp
  422e61:	push   esp
  422e62:	fsub   DWORD PTR [eax-0x5db7c1b4]
  422e68:	iret   
  422e69:	xchg   BYTE PTR [edi],dl
  422e6b:	pop    edi
  422e6c:	adc    eax,0x4fe3a9d8
  422e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e73:	retf   
  422e74:	les    ebp,FWORD PTR [ebx+edi*1+0x6f]
  422e78:	imul   esp,ebx,0xb
  422e7b:	push   eax
  422e7c:	aaa    
  422e7d:	xchg   ecx,eax
  422e7e:	pop    ecx
  422e7f:	fisubr WORD PTR [esi+0x27fd91b0]
  422e85:	fidiv  DWORD PTR [ecx-0x28]
  422e88:	pop    es
  422e89:	test   DWORD PTR [edx],0xbf74958e
  422e8f:	loop   0x422e7a
  422e91:	fs dec eax
  422e93:	jnp    0x422ed6
  422e95:	adc    edx,DWORD PTR [edi+esi*8-0x68]
  422e99:	jo     0x422ee6
  422e9b:	aad    0x6c
  422e9d:	and    al,0xa1
  422e9f:	out    dx,al
  422ea0:	push   ebx
  422ea1:	paddd  mm1,QWORD PTR [esi-0x4ee85ecc]
  422ea8:	xchg   esp,eax
  422ea9:	ss pop ds
  422eab:	fisub  DWORD PTR [esi-0x57]
  422eae:	icebp  
  422eaf:	(bad)  
  422eb0:	lods   eax,DWORD PTR ds:[esi]
  422eb1:	xor    ah,0xb7
  422eb4:	and    BYTE PTR [eax],al
	...
  422ec2:	fisubr WORD PTR [ecx]
  422ec4:	cwde   
  422ec5:	sar    bh,cl
  422ec7:	repz fisubr WORD PTR ds:0x4af35f6
  422ece:	xor    cl,BYTE PTR [eax-0x2bc7a6a0]
  422ed4:	add    DWORD PTR [eax],eax
  422ed6:	pop    ebx
  422ed7:	add    BYTE PTR [eax],al
  422ed9:	add    BYTE PTR [edx-0x32358834],bh
  422edf:	lock xchg ebx,eax
  422ee1:	imul   edx,eax,0x28
  422ee4:	cmp    DWORD PTR [esi-0xb],ebx
  422ee7:	jmp    0x422f2b
  422ee9:	imul   eax,esi,0x667f4802
  422eef:	xchg   esp,eax
  422ef0:	fnsave [ebp+0x4b]
  422ef3:	lods   eax,DWORD PTR ds:[esi]
  422ef4:	sub    ch,BYTE PTR [edi+0x68ca410d]
  422efa:	or     al,0x16
  422efc:	ins    BYTE PTR es:[edi],dx
  422efd:	nop
  422efe:	loop   0x422e99
  422f00:	mov    gs,WORD PTR [ebx+eax*4]
  422f03:	pop    ecx
  422f04:	(bad)  
  422f05:	in     al,0x83
  422f07:	das    
  422f08:	das    
  422f09:	xor    BYTE PTR [ebx*2+0x614496f8],0xad
  422f11:	add    al,0xca
  422f13:	inc    edi
  422f14:	sar    BYTE PTR [ecx+0xec5c3b6],cl
  422f1a:	lock inc eax
  422f1c:	fld    TBYTE PTR ds:0x49363df9
  422f22:	xor    eax,ecx
  422f24:	and    edi,DWORD PTR [esi]
  422f26:	data16 (bad) 
  422f28:	hlt    
  422f29:	and    ah,0xdb
  422f2c:	fsubrp st(4),st
  422f2e:	out    dx,al
  422f2f:	shl    DWORD PTR [esi-0x20],1
  422f32:	(bad)  
  422f33:	xlat   BYTE PTR ds:[ebx]
  422f34:	push   edi
	...
  422f41:	add    BYTE PTR [esi+0x3f],cl
  422f44:	int3   
  422f45:	sbb    eax,0x7fdffffd
  422f4a:	out    dx,eax
  422f4b:	loopne 0x422f63
  422f4d:	lods   al,BYTE PTR ds:[esi]
  422f4e:	mov    dh,0x42
  422f50:	ret    
  422f51:	mov    cl,0x93
  422f53:	aam    0x1
  422f55:	add    BYTE PTR [ebx+0x0],bl
  422f58:	add    BYTE PTR [eax],al
  422f5a:	adc    ah,BYTE PTR [eax]
  422f5c:	adc    eax,0x69c19100
  422f61:	sbb    BYTE PTR [eax-0x3e],dl
  422f64:	std    
  422f65:	cmp    ch,BYTE PTR [edx-0x7b]
  422f68:	repz call 0xf19f:0x1226d989
  422f70:	push   edx
  422f71:	mov    ebx,0xd170d6a4
  422f76:	cmc    
  422f77:	(bad)  
  422f78:	mov    edx,0x566f7659
  422f7d:	retf   0x68e1
  422f80:	fs mov esp,0xc8ebb7c0
  422f86:	dec    eax
  422f87:	xor    eax,DWORD PTR [edi]
  422f89:	pop    edi
  422f8a:	sub    ecx,ecx
  422f8c:	xchg   edi,eax
  422f8d:	push   ecx
  422f8e:	out    dx,al
  422f8f:	aaa    
  422f90:	jb     0x42300a
  422f92:	test   eax,0x10789d65
  422f97:	push   0xe6c9ba3c
  422f9c:	xor    al,0xfa
  422f9e:	retf   
  422f9f:	mov    ch,0xbc
  422fa1:	bnd ret 0x4e76
  422fa5:	fs jbe 0x422ffb
  422fa8:	cs inc ebx
  422faa:	push   0x15130815
  422faf:	neg    BYTE PTR [esi]
  422fb1:	mov    bh,BYTE PTR ss:0x8c
	...
  422fc0:	add    BYTE PTR [eax],al
  422fc2:	push   ds
  422fc3:	test   eax,0x7ff735f6
  422fc8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fce:	loope  0x422f68
  422fd0:	(bad)  
  422fd1:	adc    eax,0x1d4ee
  422fd6:	pop    ebx
  422fd7:	add    BYTE PTR [eax],al
  422fd9:	add    cl,bh
  422fdb:	cld    
  422fdc:	lods   eax,DWORD PTR ds:[esi]
  422fdd:	mov    ebx,0xf171e3a3
  422fe2:	dec    edx
  422fe3:	dec    ebx
  422fe4:	push   ebp
  422fe5:	aad    0x95
  422fe7:	push   0xfffffff5
  422fe9:	fisubr WORD PTR [eax]
  422feb:	neg    edi
  422fed:	clc    
  422fee:	pushf  
  422fef:	mov    ecx,0x11cf51aa
  422ff4:	jnp    0x423013
  422ff6:	mov    ah,0xc
  422ff8:	(bad)  
  422ff9:	fst    st(7)
  422ffb:	mov    al,ds:0x3a0992d
  423000:	mov    al,ds:0xc282aa3b
  423005:	dec    ecx
  423006:	js     0x422fd6
  423008:	xchg   ebx,eax
  423009:	ja     0x423017
  42300b:	xchg   edx,eax
  42300c:	mov    ds:0x6feb9a64,al
  423011:	addr16 mov bl,0xa8
  423014:	shr    DWORD PTR [edi],cl
  423016:	out    dx,eax
  423017:	in     al,dx
  423018:	add    al,0xc4
  42301a:	scas   eax,DWORD PTR es:[edi]
  42301b:	inc    ecx
  42301c:	xor    cl,ah
  42301e:	push   ebp
  42301f:	call   0x5a11:0xe2af927a
  423026:	push   ecx
  423027:	fbld   TBYTE PTR [eax+ecx*1]
  42302a:	lea    edx,[ebx]
  42302c:	clc    
  42302d:	mov    al,0x90
  42302f:	and    eax,0x3e3cdc5c
  423034:	pop    esi
	...
  423041:	add    BYTE PTR [ebx+0x7f2d6de1],bl
  423047:	lods   eax,DWORD PTR ds:[esi]
  423048:	fcomi  st,st(7)
  42304a:	sar    BYTE PTR [ebx],cl
  42304c:	(bad)  
  42304d:	add    bh,cl
  42304f:	mov    bl,0x4a
  423051:	gs dec ecx
  423053:	aad    0x1
  423055:	add    BYTE PTR [ebx+0x0],bl
  423058:	add    BYTE PTR [eax],al
  42305a:	pop    ss
  42305b:	and    DWORD PTR [esi-0x2],0x31587edf
  423062:	sbb    eax,0x1984b4
  423067:	sub    edx,ecx
  423069:	mov    cs,WORD PTR [ebx-0x74]
  42306c:	fiadd  WORD PTR [edi-0x378dc788]
  423072:	(bad)  [ebx-0x10]
  423075:	inc    ebx
  423076:	xor    al,0x83
  423078:	stos   DWORD PTR es:[edi],eax
  423079:	(bad)  
  42307a:	mov    esp,0x9c0355c5
  42307f:	fst    QWORD PTR [ebx]
  423081:	jns    0x423026
  423083:	cmp    BYTE PTR [edi],bl
  423085:	cmp    edx,DWORD PTR [ecx+0x3d]
  423088:	(bad)  
  423089:	sub    DWORD PTR [eax],ebx
  42308b:	push   0xffffff8e
  42308d:	out    dx,al
  42308e:	cmp    BYTE PTR [bp+si+0x6303],dh
  423093:	stos   DWORD PTR es:[edi],eax
  423094:	cmp    BYTE PTR [eax],bl
  423096:	pop    edx
  423097:	das    
  423098:	out    dx,al
  423099:	out    0x41,al
  42309b:	add    BYTE PTR [ecx],0xc
  42309e:	inc    eax
  42309f:	sahf   
  4230a0:	sbb    al,BYTE PTR [edi-0x12]
  4230a3:	sbb    ebx,DWORD PTR ds:0x40d41fc3
  4230a9:	and    al,bl
  4230ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230ac:	cmp    ebp,eax
  4230ae:	jns    0x4230a7
  4230b0:	jne    0x42309e
  4230b2:	inc    eax
  4230b3:	adc    ebx,DWORD PTR [ebx+0x0]
	...
  4230c2:	or     bh,dh
  4230c4:	ja     0x423110
  4230c6:	dec    edx
  4230c8:	cmp    eax,0x2e8eedf7
  4230cd:	dec    eax
  4230ce:	stc    
  4230cf:	arpl   WORD PTR [eax],cx
  4230d1:	das    
  4230d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230d3:	aad    0x1
  4230d5:	add    BYTE PTR [ebx+0x0],bl
  4230d8:	add    BYTE PTR [eax],al
  4230da:	xor    eax,0xea1cc661
  4230df:	pop    ecx
  4230e0:	push   edi
  4230e1:	sbb    al,BYTE PTR [ebp+0x230f84a3]
  4230e7:	icebp  
  4230e8:	lea    eax,[edi+0x5ee88d12]
  4230ee:	xchg   BYTE PTR [eax+0x2589b2d9],cl
  4230f4:	ss call 0xb1c9:0x537f568e
  4230fc:	lods   eax,DWORD PTR ds:[esi]
  4230fd:	and    ch,BYTE PTR ds:0x6c1e2981
  423103:	mov    ebp,0xbc0e2663
  423108:	stc    
  423109:	sbb    ecx,esp
  42310b:	mov    cl,0x1d
  42310d:	push   ebx
  42310e:	mov    edi,DWORD PTR [edx+0x50]
  423111:	scas   eax,DWORD PTR es:[edi]
  423112:	add    eax,0xe7aa777e
  423117:	shr    DWORD PTR [ebx+0x6b],1
  42311a:	scas   eax,DWORD PTR es:[edi]
  42311b:	ds aad 0x42
  42311e:	ins    BYTE PTR es:[edi],dx
  42311f:	cmp    eax,0x4f9ccdc8
  423124:	xor    dh,ah
  423126:	ins    DWORD PTR es:[edi],dx
  423127:	mov    ebx,0xcf23acfa
  42312c:	sbb    BYTE PTR [edx],ah
  42312e:	or     DWORD PTR [ebx],ecx
  423130:	arpl   WORD PTR [esi],cx
  423132:	div    BYTE PTR [edi+0x82]
	...
  423140:	add    BYTE PTR [eax],al
  423142:	arpl   WORD PTR ss:[eax-0x10],bp
  423146:	jge    0x423143
  423148:	mov    esi,0x8c7853e7
  42314d:	daa    
  42314e:	scas   al,BYTE PTR es:[edi]
  42314f:	or     edx,DWORD PTR [eax+0x1d5ff4f]
  423155:	add    BYTE PTR [ebx+0x0],bl
  423158:	add    BYTE PTR [eax],al
  42315a:	adc    BYTE PTR [ecx-0x2b],ch
  42315d:	sbb    ebp,edx
  42315f:	scas   al,BYTE PTR es:[edi]
  423160:	sti    
  423161:	cli    
  423162:	scas   eax,DWORD PTR es:[edi]
  423163:	pop    esi
  423164:	xchg   edx,eax
  423165:	into   
  423166:	dec    DWORD PTR [edi+0xc]
  423169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42316a:	pop    ecx
  42316b:	out    dx,al
  42316c:	sar    BYTE PTR [ecx],0xdd
  42316f:	sub    al,al
  423171:	inc    edx
  423172:	mov    fs,WORD PTR [ecx+0x54]
  423175:	push   es
  423176:	(bad)  
  423177:	in     eax,0x7c
  423179:	xor    dh,dl
  42317b:	mov    al,ds:0x6d019556
  423180:	push   esi
  423181:	std    
  423182:	adc    al,0xca
  423184:	adc    ah,cl
  423186:	mov    al,ds:0x7b043c0c
  42318b:	cli    
  42318c:	outs   dx,BYTE PTR ds:[esi]
  42318d:	test   DWORD PTR [ecx+ebx*1],esi
  423190:	add    edi,0xffffffdf
  423193:	push   ebx
  423194:	add    esp,DWORD PTR [esi+0x3c]
  423197:	in     eax,dx
  423198:	mov    al,0xfe
  42319a:	sub    DWORD PTR [esp+ecx*1+0x7829cf05],ecx
  4231a1:	jge    0x423184
  4231a3:	ficomp DWORD PTR [eax+0x44]
  4231a6:	push   es
  4231a7:	dec    ebx
  4231a8:	sbb    al,0x93
  4231aa:	push   esp
  4231ab:	outs   dx,BYTE PTR ds:[esi]
  4231ac:	sar    BYTE PTR [esi],0x61
  4231af:	jno    0x423153
  4231b1:	in     al,dx
  4231b2:	stos   BYTE PTR es:[edi],al
  4231b3:	xor    bh,BYTE PTR [eax]
	...
  4231c1:	add    BYTE PTR [edi],ah
  4231c3:	push   ecx
  4231c4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231ce:	xor    eax,0xc02b4cc3
  4231d3:	fadd   QWORD PTR [ecx]
  4231d5:	add    BYTE PTR [ebx+0x0],bl
  4231d8:	add    BYTE PTR [eax],al
  4231da:	add    ch,dl
  4231dc:	push   eax
  4231dd:	jnp    0x42319a
  4231df:	shl    DWORD PTR [eax+ebp*1],1
  4231e2:	pop    ds
  4231e3:	or     dh,BYTE PTR [ebp-0x2b]
  4231e6:	stos   DWORD PTR es:[edi],eax
  4231e7:	dec    esp
  4231e8:	nop
  4231e9:	sub    ebx,DWORD PTR [ecx+0x2]
  4231ec:	cmp    eax,0xbfbc5275
  4231f1:	pop    edi
  4231f2:	repz retf 
  4231f4:	into   
  4231f5:	repnz push DWORD PTR [ebp+0x3f]
  4231f9:	(bad)  
  4231fb:	js     0x423205
  4231fd:	mov    ebp,DWORD PTR [edx-0x51]
  423200:	(bad)  
  423201:	adc    al,0x37
  423203:	inc    eax
  423204:	or     DWORD PTR [edx],eax
  423206:	and    edx,DWORD PTR [edi-0x5c5e7338]
  42320c:	sbb    bh,bh
  42320e:	push   es
  42320f:	clc    
  423210:	fs scas eax,DWORD PTR es:[edi]
  423212:	retf   0x5423
  423215:	xor    eax,0x909de4a8
  42321a:	cwde   
  42321b:	popf   
  42321c:	mov    ecx,0x8aaa1e2c
  423221:	retfw  
  423223:	pop    esp
  423224:	fmul   DWORD PTR ds:0x14570fb5
  42322a:	aam    0x1f
  42322c:	or     eax,0xa8f61a48
  423231:	(bad)  
  423232:	jns    0x42322e
  423234:	call   0x423239
	...
  423241:	add    BYTE PTR [edi],ah
  423243:	ss lahf 
  423245:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42324b:	and    eax,0xc3ab075b
  423250:	adc    edx,edi
  423252:	sbb    ebx,ebp
  423254:	add    DWORD PTR [eax],eax
  423256:	pop    ebx
  423257:	add    BYTE PTR [eax],al
  423259:	add    ch,al
  42325b:	mov    ebp,0xa7d8e105
  423260:	(bad)  
  423261:	test   DWORD PTR [eax],0x516d2210
  423267:	push   0xe8640431
  42326c:	js     0x423244
  42326e:	js     0x423271
  423270:	test   DWORD PTR [ecx-0x9],ecx
  423273:	retf   
  423274:	mov    edi,0x3cf7a171
  423279:	or     esi,DWORD PTR [edi+ebp*4]
  42327c:	call   0xcbb8:0x8d33d4bf
  423283:	pop    esi
  423284:	adc    DWORD PTR [ebx],edx
  423286:	jb     0x423240
  423288:	push   esp
  423289:	mov    edx,DWORD PTR ds:[esi+0x55991704]
  423290:	jb     0x42322f
  423292:	or     ah,bl
  423294:	aas    
  423295:	and    al,0xe8
  423297:	outs   dx,BYTE PTR ds:[esi]
  423298:	jne    0x42321e
  42329a:	(bad)  
  42329b:	repnz mov dl,BYTE PTR [ebp-0x719f7780]
  4232a2:	pop    eax
  4232a3:	(bad)  
  4232a4:	sub    edx,esi
  4232a6:	dec    esp
  4232a7:	lods   eax,DWORD PTR ds:[esi]
  4232a8:	in     al,dx
  4232a9:	out    dx,al
  4232aa:	jp     0x42327a
  4232ac:	in     eax,0xa1
  4232ae:	or     al,0x46
  4232b0:	call   0x0:0x843bfbac
	...
  4232bf:	add    BYTE PTR [eax],al
  4232c1:	add    BYTE PTR [edi],dh
  4232c3:	(bad)  
  4232c4:	out    0xc2,eax
  4232c6:	mul    ebx
  4232c8:	aaa    
  4232c9:	cmc    
  4232ca:	xchg   ecx,eax
  4232cb:	call   0x1560:0xec5deef4
  4232d2:	jbe    0x4232b1
  4232d4:	add    DWORD PTR [eax],eax
  4232d6:	pop    ebx
  4232d7:	add    BYTE PTR [eax],al
  4232d9:	add    BYTE PTR [esi+0x36],al
  4232dc:	fisttp QWORD PTR [eax+0x6c22dcfb]
  4232e2:	or     DWORD PTR [eax],ebx
  4232e4:	test   BYTE PTR [eax-0x75],dh
  4232e7:	call   0x915f:0x47a733ff
  4232ee:	repz aas 
  4232f0:	mov    ah,0x2
  4232f2:	mov    DWORD PTR [esi+0x2771317],ebp
  4232f8:	mov    bl,BYTE PTR ss:[ecx]
  4232fb:	mov    ebx,0x102c31ca
  423300:	dec    edi
  423301:	sbb    DWORD PTR [ecx+0x4c],ebx
  423304:	jp     0x4232ef
  423306:	dec    esp
  423307:	xor    al,0xce
  423309:	pop    es
  42330a:	or     eax,0x2c8a5b6e
  42330f:	push   esi
  423310:	ins    BYTE PTR es:[edi],dx
  423311:	bound  edx,QWORD PTR [ecx]
  423313:	fnsave ds:0x1a1494d5
  423319:	frstor [edx+0x4a0c07d6]
  42331f:	pop    ss
  423320:	retf   
  423321:	outs   dx,BYTE PTR ds:[esi]
  423322:	leave  
  423323:	sti    
  423324:	std    
  423325:	or     DWORD PTR [edx],ecx
  423327:	pop    esp
  423328:	enter  0x60c6,0x9c
  42332c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42332d:	arpl   bp,dx
  42332f:	mov    eax,0x25d5c20d
  423334:	add    DWORD PTR [eax],0x0
	...
  42333f:	add    BYTE PTR [eax],al
  423341:	add    BYTE PTR [esi],dl
  423343:	aad    0xdf
  423345:	out    dx,eax
  423346:	fucomip st,st(7)
  423348:	ss std 
  42334a:	cmp    BYTE PTR [esi-0x698ea0c6],al
  423350:	push   eax
  423351:	aas    
  423352:	rcr    ebp,1
  423354:	add    DWORD PTR [eax],eax
  423356:	pop    ebx
  423357:	add    BYTE PTR [eax],al
  423359:	add    BYTE PTR [edi],bh
  42335b:	mov    bl,BYTE PTR [edx+0x5b546504]
  423361:	stos   DWORD PTR es:[edi],eax
  423362:	push   esp
  423363:	mov    al,0x31
  423365:	jecxz  0x42332d
  423367:	iret   
  423368:	mov    ebp,0x9348aefa
  42336d:	sahf   
  42336e:	mov    al,ds:0x7e9ab8bb
  423373:	add    eax,0x8ff96d60
  423378:	(bad)
  42337c:	mov    al,ds:0xce185c5e
  423381:	pop    ds
  423382:	cmp    BYTE PTR ds:0xd62e4a60,cl
  423388:	fmul   DWORD PTR [ecx+ebp*4-0x39c3ab9]
  42338f:	mov    ebp,fs
  423391:	adc    ch,BYTE PTR [edi]
  423393:	xlat   BYTE PTR ds:[ebx]
  423394:	xor    BYTE PTR [ecx-0x1f5fbca7],bh
  42339a:	push   cs
  42339b:	fnstenv cs:[edx+0x73]
  42339f:	xor    bh,BYTE PTR [esi+esi*4]
  4233a2:	out    0x68,eax
  4233a4:	rol    DWORD PTR [esi],0x53
  4233a7:	adc    ebp,DWORD PTR [edi+0x57]
  4233aa:	in     al,0xf8
  4233ac:	sbb    dh,dl
  4233ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233af:	dec    esp
  4233b0:	retf   
  4233b1:	jp     0x4233b8
  4233b3:	ficomp WORD PTR [eax+0x0]
	...
  4233c2:	outs   dx,BYTE PTR ds:[esi]
  4233c3:	jbe    0x4233a9
  4233c5:	retf   0xdafc
  4233c8:	outs   dx,BYTE PTR ds:[esi]
  4233c9:	neg    BYTE PTR [eax]
  4233cb:	xchg   edx,eax
  4233cc:	xchg   DWORD PTR [edi-0x60ed5f1c],edx
  4233d2:	sub    al,0xde
  4233d4:	add    DWORD PTR [eax],eax
  4233d6:	pop    ebx
  4233d7:	add    BYTE PTR [eax],al
  4233d9:	add    BYTE PTR [ecx-0x384465f9],dl
  4233df:	pop    ebp
  4233e0:	mov    dl,0x4e
  4233e2:	mov    cl,0x8
  4233e4:	and    DWORD PTR [edi+0x55],0x9
  4233e8:	pop    eax
  4233e9:	cmp    ebp,DWORD PTR [esi]
  4233eb:	mov    ds:0x382375c2,al
  4233f0:	push   esp
  4233f1:	hlt    
  4233f2:	stos   DWORD PTR es:[edi],eax
  4233f3:	mov    ebx,0x2170bca
  4233f8:	dec    ebp
  4233f9:	adc    BYTE PTR [ecx+0x1287cf1e],0x90
  423400:	sahf   
  423401:	mul    DWORD PTR [ebp+0x2a]
  423404:	mov    dh,0x22
  423406:	mov    dh,0xfa
  423408:	sub    al,0x91
  42340a:	jmp    0x57a3:0xf90e630c
  423411:	add    al,0x39
  423413:	xrelease mov DWORD PTR [ebp+0x72d365bc],eax
  42341a:	pusha  
  42341b:	mov    dh,0x81
  42341d:	lahf   
  42341e:	mov    ah,0x49
  423420:	aad    0xa4
  423422:	fisttp QWORD PTR [esi]
  423424:	into   
  423425:	adc    eax,0x896d1c2
  42342a:	mov    ds:0x13ba1767,eax
  42342f:	or     eax,0x341cc5b2
  423434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  423441:	add    BYTE PTR [edx],bh
  423443:	push   edx
  423444:	les    ecx,FWORD PTR [edi]
  423446:	in     al,dx
  423447:	lahf   
  423448:	sti    
  423449:	ja     0x423441
  42344b:	rcl    DWORD PTR [eax+0x5d2b79d3],1
  423451:	add    al,0x87
  423453:	fiadd  WORD PTR [ecx]
  423455:	add    BYTE PTR [ebx+0x0],bl
  423458:	add    BYTE PTR [eax],al
  42345a:	pusha  
  42345b:	add    al,0x14
  42345d:	scas   al,BYTE PTR es:[edi]
  42345e:	mov    ch,0x6f
  423460:	ret    0x76f4
  423463:	mov    esp,0x57aefc6c
  423468:	sbb    al,0x9b
  42346a:	and    al,0x5e
  42346c:	cmc    
  42346d:	jb     0x423447
  42346f:	das    
  423470:	pop    ecx
  423471:	pop    ebp
  423472:	leave  
  423473:	inc    ebx
  423474:	dec    esi
  423475:	cli    
  423476:	cdq    
  423477:	xor    eax,DWORD PTR [eax+0x44]
  42347a:	xor    al,0xf0
  42347c:	pop    ebp
  42347d:	pusha  
  42347e:	sahf   
  42347f:	into   
  423480:	loope  0x423414
  423482:	jae    0x423409
  423484:	mov    ecx,0xd03281a5
  423489:	aam    0xb2
  42348b:	inc    edi
  42348c:	aad    0x1f
  42348e:	jne    0x4234e5
  423490:	sbb    eax,0xe5b74447
  423495:	xchg   esi,ecx
  423497:	or     dl,al
  423499:	test   BYTE PTR [edx-0x3c],dl
  42349c:	out    0xc9,eax
  42349e:	mov    eax,0xd9dea27e
  4234a3:	jmp    0x7d1628e
  4234a8:	push   0xb6f9f97
  4234ad:	hlt    
  4234ae:	outs   dx,DWORD PTR ds:[esi]
  4234af:	mov    ch,0x79
  4234b1:	jmp    DWORD PTR [ecx+eiz*1-0x37]
	...
  4234c1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234c7:	jle    0x42349c
  4234c9:	call   DWORD PTR [eax-0x20]
  4234cc:	cli    
  4234cd:	call   0xdee2:0x89410b63
  4234d4:	add    DWORD PTR [eax],eax
  4234d6:	pop    ebx
  4234d7:	add    BYTE PTR [eax],al
  4234d9:	add    BYTE PTR [eax],al
  4234db:	sbb    dh,BYTE PTR [bx-0x76]
  4234df:	call   0xc47:0xa392c8f0
  4234e6:	(bad)  
  4234e7:	adc    BYTE PTR [esi-0x68d5b6d9],bl
  4234ed:	mov    ah,0x53
  4234ef:	(bad)  
  4234f0:	int3   
  4234f1:	test   DWORD PTR [edi+edi*2+0x7c],0x22bc2365
  4234f9:	aam    0x27
  4234fb:	mov    esi,0x378b7f03
  423500:	popf   
  423501:	std    
  423502:	add    eax,0x79d60d7f
  423507:	or     DWORD PTR [ecx],ebp
  423509:	fnop   
  42350b:	xchg   esp,eax
  42350c:	(bad)  
  42350d:	aam    0x4d
  42350f:	mov    dh,BYTE PTR [ebp+0x0]
  423512:	stc    
  423513:	push   edx
  423514:	push   ds
  423515:	xchg   edx,eax
  423516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423517:	in     al,0x94
  423519:	mov    esi,0xcd2c7f2
  42351e:	(bad)  
  423520:	gs pop esi
  423522:	repz bound eax,QWORD PTR [ebx-0x2a]
  423526:	fbld   TBYTE PTR [edx]
  423528:	sbb    eax,0xacd26094
  42352d:	rcr    ecx,1
  42352f:	test   bh,al
  423531:	loope  0x423588
  423533:	test   BYTE PTR [eax+eax*1],al
	...
  423542:	(bad)  
  423544:	test   eax,0xddffeef7
  42354a:	and    al,0x1
  42354c:	pop    ebp
  42354d:	dec    edi
  42354e:	and    BYTE PTR [esi-0x20c2035e],cl
  423554:	add    DWORD PTR [eax],eax
  423556:	pop    ebx
  423557:	add    BYTE PTR [eax],al
  423559:	add    BYTE PTR [ebx-0xbd353ae],dl
  42355f:	or     DWORD PTR [edx+0x3803741b],ebp
  423565:	(bad)  
  423566:	cld    
  423567:	add    DWORD PTR [ebx+0x52364ac0],0x9affd096
  423571:	js     0x4234ff
  423573:	pop    edx
  423574:	and    eax,0x222b6758
  423579:	pop    edi
  42357a:	jo     0x42355a
  42357c:	push   edx
  42357d:	add    eax,0x86d611bd
  423582:	and    al,0xdf
  423584:	push   cs
  423585:	or     eax,0xf1fc4859
  42358a:	adc    eax,0x73ff0205
  42358f:	js     0x4235f0
  423591:	mov    edi,0xe9b54f9c
  423596:	cwde   
  423597:	fucom  st(2)
  423599:	arpl   WORD PTR [edx-0x5b],bx
  42359c:	dec    ebx
  42359d:	icebp  
  42359e:	mov    ebx,ss
  4235a0:	push   eax
  4235a1:	xlat   BYTE PTR ds:[ebx]
  4235a2:	mul    ah
  4235a4:	call   0x99a2845d
  4235a9:	pop    ds
  4235aa:	mov    fs,WORD PTR [edx-0x1d]
  4235ad:	add    DWORD PTR [ebp+0x4ded8179],0x35d7
	...
  4235bf:	add    BYTE PTR [eax],al
  4235c1:	add    BYTE PTR [edi-0x5e],ch
  4235c4:	aam    0x2a
  4235c6:	fnstsw WORD PTR [esi-0x1]
  4235c9:	out    0x52,eax
  4235cb:	fcmovu st,st(5)
  4235cd:	in     eax,0xc9
  4235cf:	xchg   ebx,eax
  4235d0:	pop    ss
  4235d1:	pop    es
  4235d2:	cwde   
  4235d3:	fild   WORD PTR [ecx]
  4235d5:	add    BYTE PTR [ebx+0x0],bl
  4235d8:	add    BYTE PTR [eax],al
  4235da:	cmc    
  4235db:	hlt    
  4235dc:	xor    DWORD PTR [esi],ecx
  4235de:	and    dl,BYTE PTR [ebx]
  4235e0:	dec    ebx
  4235e1:	hlt    
  4235e2:	jmp    0x48560aec
  4235e7:	call   0x855e:0x3ce9af70
  4235ee:	xor    esp,edx
  4235f0:	fcom   QWORD PTR [ecx]
  4235f2:	mov    BYTE PTR ds:0xe4c4bf55,al
  4235f8:	or     ebx,DWORD PTR [ebx+0x14]
  4235fb:	fs inc edx
  4235fd:	mov    ebx,0xd0ae6de3
  423602:	cwde   
  423603:	jo     0x4235c8
  423605:	sbb    ebp,esp
  423607:	pusha  
  423608:	popa   
  423609:	leave  
  42360a:	mov    esi,0x9ed7b407
  42360f:	das    
  423610:	xchg   edx,eax
  423611:	inc    esi
  423612:	add    al,BYTE PTR [ecx-0x66]
  423615:	sub    dl,ah
  423617:	mov    esi,0xbda53bfa
  42361c:	lock xchg edi,eax
  42361e:	inc    ebp
  42361f:	daa    
  423620:	sar    al,0xe1
  423623:	call   0x1dfe49da
  423628:	in     eax,0x4b
  42362a:	xor    al,0x43
  42362c:	pop    ebp
  42362d:	pusha  
  42362e:	mov    cl,BYTE PTR [ebx-0x3b]
  423631:	aaa    
  423632:	retf   
  423633:	sbb    BYTE PTR [eax+eax*1+0x0],dh
	...
  42363f:	add    BYTE PTR [eax],al
  423641:	add    cl,bh
  423643:	sbb    al,al
  423645:	inc    esi
  423646:	jecxz  0x423626
  423648:	(bad)  
  423649:	mov    edi,0xe1f1bc83
  42364e:	sti    
  42364f:	sbb    ebp,DWORD PTR [bp-0xd]
  423653:	fild   WORD PTR [ecx]
  423655:	add    BYTE PTR [ebx+0x0],bl
  423658:	add    BYTE PTR [eax],al
  42365a:	jo     0x4235eb
  42365c:	xor    al,0x6
  42365e:	and    BYTE PTR [edi],ch
  423660:	(bad)  
  423662:	data16 jb 0x423694
  423665:	mov    cl,0x54
  423667:	imul   DWORD PTR gs:[ecx+0x77796a3c]
  42366e:	cmc    
  42366f:	cld    
  423670:	adc    DWORD PTR [edx-0x465b4860],edx
  423676:	lods   eax,DWORD PTR ds:[esi]
  423677:	daa    
  423678:	aaa    
  423679:	ret    0x589e
  42367c:	std    
  42367d:	xchg   edx,eax
  42367e:	in     al,dx
  42367f:	sub    al,0x8a
  423681:	cmp    al,BYTE PTR [edi+0x61]
  423684:	cld    
  423685:	cmp    dh,BYTE PTR [ebx]
  423687:	enter  0x725b,0x8c
  42368b:	and    BYTE PTR [esi+0x73d3fff5],al
  423691:	push   edi
  423692:	sbb    BYTE PTR [edi],0x38
  423695:	mov    ch,0x31
  423697:	test   eax,0xd6adcb34
  42369c:	mov    edi,0x5bdfbc7d
  4236a1:	scas   eax,DWORD PTR es:[edi]
  4236a2:	xor    eax,0x7c6297c4
  4236a7:	outs   dx,DWORD PTR ds:[esi]
  4236a8:	adc    al,0xb9
  4236aa:	push   esp
  4236ab:	push   edi
  4236ac:	js     0x4236c8
  4236ae:	(bad)  
  4236af:	rcr    BYTE PTR [eax-0x71],0x89
  4236b3:	jmp    0x0:0x79
	...
  4236c2:	mov    eax,ds:0x3e8336b9
  4236c7:	(bad)  
  4236c8:	mov    ch,0xbb
  4236ca:	icebp  
  4236cb:	and    eax,0x83208c27
  4236d0:	sub    ch,BYTE PTR [esi+ecx*2-0x20]
  4236d4:	add    DWORD PTR [eax],eax
  4236d6:	pop    ebx
  4236d7:	add    BYTE PTR [eax],al
  4236d9:	add    BYTE PTR [ebp-0x4a0689b6],ah
  4236df:	aad    0x6b
  4236e1:	test   DWORD PTR [esp+edi*2-0x50d5f45d],esp
  4236e8:	pop    esp
  4236e9:	sbb    BYTE PTR [ecx],cl
  4236eb:	inc    DWORD PTR [edi+0x4f25d8ad]
  4236f1:	jg     0x423760
  4236f3:	and    eax,0xf14de22
  4236f8:	and    eax,0x82f6f33c
  4236fd:	and    DWORD PTR [ebx+0x58],edi
  423700:	dec    edx
  423701:	add    bh,BYTE PTR [esi]
  423703:	mov    bh,0x62
  423705:	sub    eax,0xf3976dd0
  42370a:	push   ecx
  42370b:	jo     0x42373b
  42370d:	scas   al,BYTE PTR es:[edi]
  42370e:	jno    0x4236c9
  423710:	sub    al,0x97
  423712:	jnp    0x42372a
  423714:	ins    DWORD PTR es:[edi],dx
  423715:	push   esi
  423716:	fdivrp st(0),st
  423718:	addr16 jno 0x4236ec
  42371b:	or     al,0x4c
  42371d:	jns    0x4236b0
  42371f:	add    eax,0x4db6e257
  423724:	mov    bh,0x1c
  423726:	cmp    eax,0x8b27470f
  42372b:	fwait
  42372c:	addr16 xchg ebp,edi
  42372f:	mov    al,ds:0xd1afb123
  423734:	sub    DWORD PTR [eax],eax
	...
  423742:	adc    dl,bh
  423744:	repz or esi,edi
  423747:	das    
  423748:	cli    
  423749:	fist   WORD PTR [ecx]
  42374b:	dec    ebx
  42374c:	es nop
  42374e:	in     eax,0x5a
  423750:	and    al,0x1c
  423752:	test   eax,0x5b0001e0
  423757:	add    BYTE PTR [eax],al
  423759:	add    BYTE PTR [ebp+0x52dffe64],dh
  42375f:	jecxz  0x42373f
  423761:	xor    bl,BYTE PTR [eax-0xeba4e02]
  423767:	xchg   ecx,eax
  423768:	in     al,dx
  423769:	adc    dh,dl
  42376b:	scas   al,BYTE PTR es:[edi]
  42376c:	jne    0x4237e2
  42376e:	in     al,0x16
  423770:	pop    esp
  423771:	pop    ebp
  423772:	pop    ebp
  423773:	out    dx,al
  423774:	clc    
  423775:	imul   ecx,ebp,0x18
  423778:	mov    ecx,0x5bd8c379
  42377d:	fdivr  st,st(5)
  42377f:	or     dh,BYTE PTR [ebp-0x3f4deec4]
  423785:	enter  0xce2a,0xce
  423789:	push   es
  42378a:	mov    al,0xe5
  42378c:	inc    edx
  42378d:	cli    
  42378e:	and    eax,0x6bf7e3b4
  423793:	fidivr DWORD PTR [edi]
  423795:	xchg   ebx,eax
  423796:	xor    ebx,esi
  423798:	and    al,0x3d
  42379a:	gs loop 0x423773
  42379d:	popa   
  42379e:	or     edx,DWORD PTR [ebp-0x33]
  4237a1:	les    ecx,FWORD PTR [edi]
  4237a3:	or     BYTE PTR [ebp+ecx*1-0x7587dc71],ah
  4237aa:	sub    ah,BYTE PTR [ebx-0x5a6f4fb0]
  4237b0:	lods   al,BYTE PTR ds:[esi]
  4237b1:	imul   DWORD PTR [eax+eiz*1-0x5e]
	...
  4237c1:	add    BYTE PTR [eax],al
  4237c3:	rol    BYTE PTR [edx+0x0],0x4
  4237c7:	rol    BYTE PTR [edx+0x0],0x8
  4237cb:	rol    BYTE PTR [edx+0x0],0xc
  4237cf:	rol    BYTE PTR [edx+0x0],0x10
  4237d3:	rol    BYTE PTR [edx+0x0],0x14
  4237d7:	rol    BYTE PTR [edx+0x0],0x18
  4237db:	rol    BYTE PTR [edx+0x0],0x1c
  4237df:	rol    BYTE PTR [edx+0x0],0x57
  4237e3:	inc    edi
  4237e4:	cmp    DWORD PTR [edi+0x41],ebx
  4237e7:	pop    eax
  4237e8:	ss push esi
  4237ea:	pop    edi
  4237eb:	cmp    BYTE PTR [eax],al
  4237ed:	inc    ebx
  4237ee:	inc    ebp
  4237ef:	dec    esp
  4237f0:	pop    edi
  4237f1:	pop    eax
  4237f2:	push   edi
  4237f3:	dec    eax
  4237f4:	inc    edx
  4237f5:	add    BYTE PTR [edi+0x50],dl
  4237f8:	xor    eax,0x4641365f
  4237fd:	cmp    DWORD PTR [edx],esi
  4237ff:	xor    ebx,DWORD PTR [edi+0x32]
  423802:	aaa    
  423803:	add    BYTE PTR [eax+0x48],dl
  423806:	xor    BYTE PTR [edi+0x58],bl
  423809:	push   esp
  42380a:	inc    ecx
  42380b:	dec    ebp
  42380c:	push   ecx
  42380d:	pop    edi
  42380e:	inc    esi
  42380f:	push   ebp
  423810:	cmp    DWORD PTR [eax],eax
  423812:	push   edi
  423813:	push   ebp
  423814:	inc    ecx
  423815:	xor    dh,BYTE PTR [ebx]
  423817:	xor    ebx,DWORD PTR [edi+0x4e]
  42381a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42381e:	cmp    DWORD PTR [edi+0x38],ebx
  423821:	dec    ecx
  423822:	cmp    DWORD PTR [edx+0x36],ebx
  423825:	pop    edi
  423826:	dec    edx
  423827:	xor    BYTE PTR [edx+0x34],cl
  42382a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42382e:	xor    esi,DWORD PTR [eax]
  423830:	pop    edi
  423831:	inc    edx
  423832:	dec    ebx
  423833:	pop    eax
  423834:	pop    eax
  423835:	xor    eax,0x51414d00
  42383a:	pop    edi
  42383b:	inc    ecx
  42383c:	xor    al,BYTE PTR [ebp+0x5f]
  42383f:	inc    ecx
  423840:	dec    ebx
  423841:	cmp    DWORD PTR ds:0x5a003939,esi
  423847:	inc    ebp
  423848:	cmp    BYTE PTR [edi+0x4d],bl
  42384b:	ss dec eax
  42384d:	dec    ebx
  42384e:	add    BYTE PTR [ebp+0x57],al
  423851:	xor    DWORD PTR [edi+0x31],ebx
  423854:	dec    ebx
  423855:	xor    eax,DWORD PTR [ecx+0x30]
  423858:	push   ebx
  423859:	add    BYTE PTR [edx+esi*1+0x36],al
  42385d:	aaa    
  42385e:	pop    edi
  42385f:	push   edx
  423860:	dec    eax
  423861:	dec    ebp
  423862:	cmp    BYTE PTR [edi+0x37],bl
  423865:	inc    esi
  423866:	xor    eax,0x43355500
  42386b:	pop    edi
  42386c:	pop    ecx
  42386d:	dec    ecx
  42386e:	push   ebx
  42386f:	xor    bl,BYTE PTR [edi+0x52]
  423872:	add    BYTE PTR [eax+0x55],dl
  423875:	dec    ecx
  423876:	xor    BYTE PTR [edi+0x43],bl
  423879:	ss inc ebp
  42387b:	xor    bl,BYTE PTR [edi+0x4d]
  42387e:	xor    al,0x4a
  423880:	push   edx
  423881:	push   ebp
  423882:	add    BYTE PTR [esi+0x39],cl
  423885:	push   eax
  423886:	pop    edi
  423887:	push   ebp
  423888:	cmp    DWORD PTR [esi],esi
  42388a:	xor    BYTE PTR [ecx],dh
  42388c:	pop    edi
  42388d:	dec    edi
  42388e:	dec    esi
  42388f:	push   esp
  423890:	cmp    BYTE PTR [eax],al
  423892:	dec    esp
  423893:	xor    al,0x44
  423895:	xor    DWORD PTR [edi+0x4b],ebx
  423898:	xor    DWORD PTR [ebp+0x5f],eax
  42389b:	pop    edx
  42389c:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238a0:	pop    edi
  4238a1:	inc    edx
  4238a2:	xor    dh,BYTE PTR [ecx]
  4238a4:	push   ebx
  4238a5:	xor    DWORD PTR [ecx],edi
  4238a7:	inc    edx
  4238a8:	add    BYTE PTR [edi+0x45],al
  4238ab:	xor    al,0x38
  4238ad:	xor    BYTE PTR [eax],dh
  4238af:	pop    edi
  4238b0:	dec    edx
  4238b1:	dec    ebx
  4238b2:	xor    eax,0x33345f4d
  4238b7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238bb:	pop    edi
  4238bc:	aaa    
  4238bd:	push   esi
  4238be:	dec    ebx
  4238bf:	push   edx
  4238c0:	pop    edi
  4238c1:	inc    ebx
  4238c2:	add    BYTE PTR [edx+0x35],bl
  4238c5:	dec    ebp
  4238c6:	pop    edi
  4238c7:	inc    edi
  4238c8:	dec    esi
  4238c9:	xor    al,0x49
  4238cb:	xor    eax,0x54590035
  4238d0:	push   edx
  4238d1:	pop    edi
  4238d2:	push   esp
  4238d3:	inc    ebx
  4238d4:	inc    ecx
  4238d5:	pop    edi
  4238d6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238d9:	push   ebp
  4238da:	pop    edi
  4238db:	push   ebp
  4238dc:	inc    ebp
  4238dd:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238e1:	pop    edi
  4238e2:	pop    eax
  4238e3:	dec    edx
  4238e4:	inc    edx
  4238e5:	inc    edi
  4238e6:	add    BYTE PTR [edx+0x36],al
  4238e9:	inc    ebx
  4238ea:	pop    edi
  4238eb:	xor    BYTE PTR ds:0x36464b,dh
  4238f1:	dec    ebx
  4238f2:	cmp    DWORD PTR [esi+0x37],eax
  4238f5:	xor    ebx,DWORD PTR [edi+0x35]
  4238f8:	ss inc edi
  4238fa:	pop    ecx
  4238fb:	dec    eax
  4238fc:	pop    ecx
  4238fd:	add    BYTE PTR [ebp+0x35],cl
  423900:	push   eax
  423901:	xor    BYTE PTR [edi+0x4f],bl
  423904:	pop    ecx
  423905:	xor    cl,BYTE PTR [edi+0x0]
  423908:	pop    ecx
  423909:	xor    DWORD PTR [esi+0x5f],ecx
  42390c:	xor    al,BYTE PTR [edx+0x30]
  42390f:	push   esi
  423910:	push   esp
  423911:	inc    ebp
  423912:	add    BYTE PTR [edi+0x37],al
  423915:	push   esi
  423916:	xor    DWORD PTR [edi+0x49],ebx
  423919:	xor    al,BYTE PTR [esi+0x30]
  42391c:	pop    edi
  42391d:	ss dec esi
  42391f:	cmp    BYTE PTR [eax],al
  423921:	pop    edx
  423922:	xor    eax,0x445f334b
  423927:	xor    BYTE PTR [eax],bh
  423929:	push   ecx
  42392a:	push   esi
  42392b:	xor    al,0x0
  42392d:	push   ebp
  42392e:	pop    eax
  42392f:	inc    edi
  423930:	xor    DWORD PTR [edi+0x39],ebx
  423933:	push   esp
  423934:	inc    ebx
  423935:	aaa    
  423936:	inc    esp
  423937:	add    BYTE PTR [edi+0x39],dl
  42393a:	ss pop edi
  42393c:	dec    eax
  42393d:	pop    edx
  42393e:	pop    ecx
  42393f:	inc    edi
  423940:	push   ebp
  423941:	pop    edi
  423942:	push   eax
  423943:	dec    eax
  423944:	inc    ebx
  423945:	add    BYTE PTR [ebp+0x0],dl
  423948:	xor    al,0x0
  42394a:	dec    edi
  42394b:	add    BYTE PTR [edi+0x0],bl
  42394e:	cmp    BYTE PTR [eax],al
  423950:	xor    al,BYTE PTR [eax]
  423952:	inc    ebx
  423953:	add    BYTE PTR [edx+0x0],bl
  423956:	inc    ebx
  423957:	add    BYTE PTR [edi],dh
  423959:	add    BYTE PTR [edi+0x0],bl
  42395c:	inc    ebx
  42395d:	add    BYTE PTR [eax+eax*1+0x0],al
  423961:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423965:	add    BYTE PTR [edx],dh
  423967:	add    BYTE PTR [edi+0x0],bl
  42396a:	cmp    BYTE PTR [eax],al
  42396c:	dec    esp
  42396d:	add    BYTE PTR [esi+0x0],dl
  423970:	pop    edi
  423971:	add    BYTE PTR [ecx+0x0],bl
  423974:	push   edx
  423975:	add    BYTE PTR [esi+0x0],dl
  423978:	xor    al,BYTE PTR [eax]
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	pop    edi
  42397d:	add    BYTE PTR [edx+0x0],cl
  423980:	add    BYTE PTR [eax],al
  423982:	inc    edx
  423983:	add    BYTE PTR [eax+eax*1+0x46],cl
  423987:	add    BYTE PTR [edi+0x0],bl
  42398a:	xor    eax,DWORD PTR [eax]
  42398c:	inc    ebp
  42398d:	add    BYTE PTR [ecx+0x0],cl
  423990:	push   edx
  423991:	add    BYTE PTR [ecx],bh
  423993:	add    BYTE PTR [esi+0x0],dl
  423996:	add    BYTE PTR [eax],al
  423998:	dec    ebp
  423999:	add    BYTE PTR [edi],dh
  42399b:	add    BYTE PTR [eax+eax*1+0x5f],al
  42399f:	add    BYTE PTR [edx+0x0],cl
  4239a2:	pop    eax
  4239a3:	add    BYTE PTR [ebx],dh
  4239a5:	add    BYTE PTR [ecx],dh
  4239a7:	add    BYTE PTR [ebx+0x0],al
  4239aa:	add    BYTE PTR [eax],al
  4239ac:	dec    edi
  4239ad:	add    BYTE PTR [esi],dh
  4239af:	add    BYTE PTR [eax+0x0],cl
  4239b2:	pop    edi
  4239b3:	add    BYTE PTR [eax],dh
  4239b5:	add    BYTE PTR [edi],dh
  4239b7:	add    BYTE PTR [ecx],dh
  4239b9:	add    BYTE PTR [edx+0x0],dl
  4239bc:	xor    eax,0x55000000
  4239c1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239c5:	add    BYTE PTR [edi+0x0],bl
  4239c8:	push   esp
  4239c9:	add    BYTE PTR [ecx+0x0],al
  4239cc:	cmp    DWORD PTR [eax],eax
  4239ce:	pop    edi
  4239cf:	add    BYTE PTR [ebx],dh
  4239d1:	add    BYTE PTR [eax],dh
  4239d3:	add    BYTE PTR [eax],bh
  4239d5:	add    BYTE PTR [edi+0x0],cl
  4239d8:	inc    ebx
  4239d9:	add    BYTE PTR ds:0x4d000000,dh
  4239df:	add    BYTE PTR [esi+0x0],cl
  4239e2:	inc    ebp
  4239e3:	add    BYTE PTR [edi+0x0],bl
  4239e6:	push   esp
  4239e7:	add    BYTE PTR [esi+0x0],al
  4239ea:	cmp    BYTE PTR [eax],al
  4239ec:	push   ebx
  4239ed:	add    BYTE PTR [edx+0x0],bl
  4239f0:	pop    edi
  4239f1:	add    BYTE PTR [eax],dh
  4239f3:	add    BYTE PTR [eax],bh
  4239f5:	add    BYTE PTR [eax+0x0],cl
  4239f8:	add    BYTE PTR [eax],al
  4239fa:	dec    esi
  4239fb:	add    BYTE PTR [edi+0x0],cl
  4239fe:	pop    edx
  4239ff:	add    BYTE PTR [edi+0x0],bl
  423a02:	add    BYTE PTR ss:[ecx+0x0],bl
  423a06:	dec    ebp
  423a07:	add    BYTE PTR [esi],dh
  423a09:	add    BYTE PTR [ebx],dh
  423a0b:	add    BYTE PTR [edi+0x0],bl
  423a0e:	xor    al,0x0
  423a10:	dec    esi
  423a11:	add    BYTE PTR [edx],dh
  423a13:	add    BYTE PTR [esi],dh
  423a15:	add    BYTE PTR [ecx],dh
  423a17:	add    BYTE PTR [eax],al
  423a19:	add    BYTE PTR [ebx+0x0],cl
  423a1c:	dec    eax
  423a1d:	add    BYTE PTR [eax],bh
  423a1f:	add    BYTE PTR [edi+0x0],bl
  423a22:	inc    esi
  423a23:	add    BYTE PTR [esi+0x0],al
  423a26:	push   esp
  423a27:	add    BYTE PTR [edi],dh
  423a29:	add    BYTE PTR [esi],dh
  423a2b:	add    BYTE PTR [edi+0x0],bl
  423a2e:	dec    esp
  423a2f:	add    BYTE PTR [ecx+0x0],bl
  423a32:	add    BYTE PTR [eax],al
  423a34:	push   ebx
  423a35:	add    BYTE PTR [ecx+0x0],bl
  423a38:	xor    BYTE PTR [eax],al
  423a3a:	pop    edi
  423a3b:	add    BYTE PTR [ecx],bh
  423a3d:	add    BYTE PTR [edx+0x0],dl
  423a40:	dec    eax
  423a41:	add    BYTE PTR [ecx+0x0],bl
  423a44:	xor    al,BYTE PTR [eax]
  423a46:	pop    edi
  423a47:	add    BYTE PTR [eax],dh
  423a49:	add    BYTE PTR [eax],al
  423a4b:	add    BYTE PTR [edx+0x0],al
  423a4e:	dec    edx
  423a4f:	add    BYTE PTR [esi+0x0],cl
  423a52:	xor    al,BYTE PTR [eax]
  423a54:	pop    edi
  423a55:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a59:	add    BYTE PTR [edx+0x0],dl
  423a5c:	xor    al,0x0
  423a5e:	dec    eax
  423a5f:	add    BYTE PTR [eax],al
  423a61:	add    BYTE PTR [ebp+0x0],dl
  423a64:	add    BYTE PTR ss:[ebp+0x0],cl
  423a68:	xor    DWORD PTR [eax],eax
  423a6a:	pop    edi
  423a6b:	add    BYTE PTR [esi],dh
  423a6d:	add    BYTE PTR [ecx+0x0],bl
  423a70:	push   ebp
  423a71:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a75:	add    BYTE PTR [edi+0x0],cl
  423a78:	inc    esp
  423a79:	add    BYTE PTR [edi+0x0],dl
  423a7c:	push   ebx
  423a7d:	add    BYTE PTR [eax],al
  423a7f:	add    BYTE PTR [edx+0x0],bl
  423a82:	inc    ebx
  423a83:	add    BYTE PTR [ebp+0x0],dl
  423a86:	pop    edi
  423a87:	add    BYTE PTR [ecx],dh
  423a89:	add    BYTE PTR [ebp+0x0],al
  423a8c:	push   esp
  423a8d:	add    BYTE PTR [eax],dh
  423a8f:	add    BYTE PTR [eax],al
  423a91:	add    BYTE PTR [eax],al
  423a93:	add    BYTE PTR [eax],al
  423a95:	add    BYTE PTR [eax-0x7ffbffbe],al
  423a9b:	inc    edx
  423a9c:	add    BYTE PTR [eax],cl
  423a9e:	add    BYTE PTR [edx+0x0],0xc
  423aa2:	add    BYTE PTR [edx+0x0],0x10
  423aa6:	add    BYTE PTR [edx+0x0],0x14
  423aaa:	add    BYTE PTR [edx+0x0],0x18
  423aae:	add    BYTE PTR [edx+0x0],0x1c
  423ab2:	add    BYTE PTR [edx+0x0],0x20
  423ab6:	add    BYTE PTR [edx+0x0],0x24
  423aba:	add    BYTE PTR [edx+0x0],0x28
  423abe:	add    BYTE PTR [edx+0x0],0x0
	...
  423ad2:	add    BYTE PTR [eax],al
  423ad4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423ada:	add    BYTE PTR [eax],al
  423adc:	add    bh,BYTE PTR [ebx]
  423ade:	add    al,BYTE PTR [eax]
  423ae0:	add    DWORD PTR [eax],eax
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	add    DWORD PTR [eax],eax
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	add    DWORD PTR [eax],eax
  423aea:	add    BYTE PTR [eax],al
  423aec:	clc    
  423aed:	cmp    al,BYTE PTR [edx]
  423aef:	add    ah,bh
  423af1:	cmp    al,BYTE PTR [edx]
  423af3:	add    BYTE PTR [eax],al
  423af5:	cmp    eax,DWORD PTR [edx]
  423af7:	add    BYTE PTR [esi-0x31],al
  423afa:	add    BYTE PTR [eax],al
  423afc:	push   cs
  423afd:	cmp    eax,DWORD PTR [edx]
  423aff:	add    BYTE PTR [eax],al
  423b01:	add    BYTE PTR [edi+0x6f],dl
  423b04:	jb     0x423b6a
  423b06:	push   edi
  423b07:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b0e:	aas    
  423b0f:	inc    ebp
  423b10:	outs   dx,BYTE PTR ds:[esi]
  423b11:	jne    0x423b80
  423b13:	push   edi
  423b14:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b1b:	popa   
  423b1c:	je     0x423b87
  423b1e:	outs   dx,DWORD PTR ds:[esi]
  423b1f:	outs   dx,BYTE PTR ds:[esi]
  423b20:	jae    0x423b75
  423b22:	je     0x423b85
  423b24:	.byte 0x74
